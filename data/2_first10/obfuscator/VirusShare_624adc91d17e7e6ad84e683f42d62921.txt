push
call
ret
ret
jne
xorl
test
loopne
dec
cmp
jg
ficomps
mov
addb
pop
cmp
jle
repnz
dec
push
movsl
rcrb
jle
cmpsl
inc
add
idivl
pushf
bound
xor
pop
je
dec
mov
rolb
or
lret
add
lret
pop
mov
mov
mov
clc
outsb
pop
dec
mov
xchg
adc
test
movsl
adc
inc
test
dec
mov
imul
test
ds
out
pushf
jg
into
stos
mov
ds
xchg
and
dec
push
xor
xchg
insb
enter
ret
loop
jp
and
jo
dec
scas
ljmp
iret
mov
hlt
mov
pusha
stc
outsl
stos
es
aad
jmp
xchg
adc
popf
push
dec
test
adc
sub
stos
mov
gs
push
sti
fs
dec
aam
or
adc
mov
push
jge
push
push
repz
rolb
pop
nop
pop
je
pop
xchg
add
sbb
and
cwtl
test
cs
jnp
call
sahf
or
push
fldt
xor
cld
mov
inc
outsb
jg
push
mov
enter
sub
enter
test
out
cmp
je
cmpsb
and
pop
icebp
out
sub
into
push
and
and
sub
jl
sti
sub
mov
push
and
mov
push
outsl
sbb
les
inc
cmp
rcll
mov
int
out
mov
shr
mov
sub
mov
scas
mov
xor
scas
inc
into
loop
add
fwait
ja
icebp
adc
aas
cmpsl
dec
cld
mov
cltd
mov
xchg
fndisi(8087
js
popa
pop
clc
insl
cmp
mov
or
cli
sub
cs
sbb
sub
xchg
loope
xchg
int
or
mov
popf
pop
jbe
rcr
fmul
push
loopne
imul
xchg
mov
or
fstl
mov
sbb
xlat
outsl
or
pop
nop
fisubrl
addl
or
loopne
xchg
jb
popa
mov
cli
pop
mov
adc
adc
nop
aad
sub
in
cltd
repz
adc
out
hlt
in
sbb
dec
jge
in
mov
das
adc
sub
loop
jmp
push
out
jb
mov
stos
add
adc
setg
sbb
scas
les
push
xlat
push
push
pushf
add
add
jns
xchg
and
dec
out
inc
and
and
pop
jno
sub
add
in
loope
movsb
out
mov
inc
pushf
or
mov
repz
rorl
xchg
out
lcall
data16
pusha
imul
push
xor
je
mov
sub
or
pop
mov
shlb
and
sbb
and
out
mov
cltd
mov
icebp
mov
cli
mov
push
and
adc
xchg
sbb
lahf
push
xor
test
mov
push
push
jmp
sbb
and
sub
insl
outsb
xor
xor
and
sub
add
pop
xor
or
into
std
or
mov
mov
les
add
nop
nop
fmull
jne
push
fwait
mov
icebp
pusha
lods
lahf
xor
fisttpll
loopne
and
push
ljmp
lods
sbb
mov
mov
insl
pop
movsb
jmp
mov
mov
xor
dec
sub
mov
out
sub
xchg
aam
rolb
mov
sbbw
push
lret
push
loope
repz
icebp
push
adc
fimull
mov
shll
sbb
and
push
jns
fdivrs
mov
adc
pop
rolb
fs
mov
fists
cld
repnz
add
arpl
aad
or
pushf
lea
repnz
sbb
jae
lock
mov
pushf
mov
sbb
test
jbe
fisubrl
ret
out
jge
xchg
mov
and
dec
shlb
setns
jge
cmc
dec
inc
mov
outsb
mov
jo
mov
or
fcmovb
insb
mov
sub
xor
jne
fs
test
shll
mov
mov
mov
ja
int3
pop
xor
add
xor
stos
pop
fs
pusha
mov
push
and
pop
jl
xchg
adc
into
cmp
popa
mov
hlt
sbb
dec
in
jl
pop
insb
addr16
enter
mov
sub
jo
hlt
mov
std
daa
xchg
push
dec
lea
adc
cmp
adc
pop
xor
movsb
addr16
add
push
mov
lock
cli
xchg
sub
adc
daa
pop
pop
inc
sar
insb
pop
sahf
js
stos
pusha
shr
aad
push
pop
and
sbb
mov
cltd
repz
inc
inc
out
dec
adc
and
xor
jge
pop
sbb
push
dec
jecxz
jae,pt
xchg
fld
pop
pop
inc
stos
jne
mov
or
cmpb
pop
cli
rclb
in
fildll
cld
sbb
cltd
jbe
cmp
cmp
pusha
jl
xchg
in
or
mov
psrad
scas
imul
cmp
push
mov
stos
sub
jo
insb
aad
daa
es
orb
test
cs
mov
loopne
pop
fs
dec
inc
cwtl
je
xchg
xchg
dec
loop
xor
mov
cmpb
outsb
js
sbbb
xchg
add
mov
call
es
cmp
mov
lock
test
dec
and
aam
xlat
out
xor
js
mov
adc
push
or
push
jmp
add
xchg
jne
js
mov
xchg
iret
mov
je
push
sub
test
dec
push
push
mov
movsl
xor
lods
dec
cltd
jge
or
dec
test
pusha
push
and
push
fsubl
lods
mov
sub
inc
cwtl
cmp
cmpsl
imul
and
jo
sbb
xor
ficompl
dec
inc
pop
sbb
and
mov
testb
dec
pop
cmpsb
xor
mov
jmp
cld
xchg
jp
enter
jb
inc
lahf
pop
jno
xor
cmp
mov
cmp
pop
ret
icebp
insl
jge
and
lock
and
movsb
inc
jp
jle
adc
insb
mov
int3
scas
into
mov
sbb
push
cli
mov
mov
mov
test
pop
push
jns
addr16
data16
push
lods
gs
fdivrp
mov
in
into
faddp
jge
cmp
xor
fadd
into
lahf
lea
inc
lret
push
loope
imul
test
push
mov
cmc
daa
mov
js
mov
rcll
dec
or
dec
mov
jg
ret
testl
sbb
aam
xchg
mov
loope
and
shrl
adc
sbb
sbb
test
call
imul
lock
xchg
adc
inc
or
push
cs
add
push
daa
fstpl
arpl
mov
sbb
mov
mov
leave
rorb
jo
test
fxch
mov
push
add
daa
loope
divl
shrl
push
pop
push
sbb
sub
xor
push
adc
xchg
push
shll
dec
push
cld
out
xlat
insl
adcl
mov
in
inc
iret
pop
add
mov
inc
mov
mov
cmpsl
or
cmpsl
pop
popa
mov
xchg
call
xchg
add
stos
inc
or
dec
add
xchg
push
mov
jl
rclb
dec
mov
repz
jb
daa
addr16
mov
lcall
stc
lea
repnz
lods
mov
lods
mov
mov
into
and
dec
inc
clc
daa
jnp
mov
lds
sub
push
cmp
jl
repz
in
in
push
cmc
adc
xchg
shlb
mov
lods
ljmp
mov
and
into
out
pop
and
pop
aam
icebp
or
hlt
xchg
sub
jle
cld
js
mov
nop
lahf
dec
sbb
mov
mov
dec
std
and
enter
sbb
int
lods
xchg
hlt
pop
pop
cwtl
add
adc
movsl
js
push
pop
dec
pop
lret
pop
mov
in
inc
pop
jbe
test
add
into
or
insb
add
or
aad
dec
and
rol
push
fs
cmp
roll
lcall
sti
dec
mov
and
dec
out
xor
dec
add
pop
aas
push
out
lock
test
adc
cs
dec
adc
outsl
stos
xchg
pop
and
dec
mov
mov
jmp
push
mov
xor
cmp
andl
mov
xchg
xchg
pop
push
push
daa
cs
movsl
fisubl
xchg
push
xor
jmp
inc
jne
testl
jo
cmpsl
mov
xchg
pop
xchg
sub
cwtl
fwait
xchg
pop
add
mulb
mov
jbe
nop
in
ds
fimuls
jae
xor
xchg
and
inc
mov
popf
mov
pop
addl
mov
mov
test
aas
dec
inc
sub
add
idiv
dec
sub
xor
pop
pushl
test
and
les
scas
test
pop
mov
or
add
xchg
cli
cmp
test
mov
push
arpl
xchg
movsb
jno
jmp
jne
sub
cmpl
adc
adcl
in
adc
enter
lcall
sbb
pop
jo
mov
inc
sub
mov
inc
shll
xchg
cmpsb
jmp
cmp
sbb
dec
mov
hlt
mov
les
stc
inc
xor
das
push
ret
push
fsubs
fs
stos
add
push
ret
pop
into
xorb
call
repz
popf
xor
ljmp
gs
push
stc
or
scas
pop
fmuls
ds
mov
xor
inc
sti
scas
mov
cmc
cmp
rolb
mov
adc
sub
daa
mov
pop
iret
lret
mov
jl
ljmp
out
jno
cld
mov
popa
sbb
pop
xchg
mov
xor
pop
fcoms
out
xor
rorl
pop
outsl
jne
shrb
lods
push
push
test
xchg
int3
jnp
inc
pop
shrb
clc
stos
lahf
mov
fs
jb
outsl
xor
mov
loop
stc
in
repnz
sub
out
add
jnp
xchg
cmp
cmc
cmp
pushf
push
es
in
xchg
in
xchg
int3
nop
adc
das
subl
bnd
mov
out
jae
jge
sarl
adc
mov
inc
cld
dec
mov
imul
lret
inc
test
jge
imul
push
movsl
subl
cld
aas
sbb
pusha
pop
jmp
add
gs
push
or
xor
out
push
daa
dec
out
sbb
pop
pop
insb
cld
jle
cs
mov
pop
clc
cmp
xor
or
xchg
test
sbbb
push
inc
pop
mov
mov
xchg
mov
sub
cmpsb
rcrl
call
xchg
out
dec
dec
je
pop
mov
cltd
adc
subl
add
stos
jns
push
add
mov
jp
scas
pop
or
sbb
inc
dec
clc
ret
mov
cmp
rcrb
mov
add
jo
mov
into
inc
jp
das
stc
pop
scas
popa
rcl
lcall
out
push
icebp
fs
mov
outsl
xchg
adc
cmc
mov
ret
stos
sbb
push
dec
push
or
daa
push
inc
int3
xor
xor
xchg
in
push
mov
mov
mov
mov
mov
out
leave
lods
jmp
add
pop
loop
add
cmp
sbb
mov
fwait
sub
pusha
adc
cli
fdivrl
sahf
fs
mov
shll
repnz
sbb
mov
nop
fsubrs
xchg
lret
call
insb
pop
sub
xor
pop
rolb
or
aaa
sbb
xorb
mov
pop
and
ror
imul
aas
test
jle
push
clc
sub
in
pushf
jae
hlt
mov
sub
sbb
jecxz
shrb
cmp
gs
into
add
or
insl
cmp
sbb
repnz
and
das
cwtl
push
cmpsb
pop
cmp
jmp
jbe
nop
pop
sbb
xchg
xor
jno
pusha
inc
adc
cld
xor
frstor
push
pop
xchg
in
cmp
jmp
mov
mov
dec
outsb
in
popa
ss
push
mov
or
es
mov
scas
add
cmp
pop
std
add
lock
jge
xchg
jge
inc
dec
std
repz
test
stc
divl
mov
daa
idivb
adc
mov
cmp
adc
xor
sub
incb
mov
addr16
lcall
jmp
xchg
jecxz
loope
out
sub
dec
shrl
div
jmp
test
adc
jecxz
dec
adc
mov
and
xchg
inc
rorl
sbb
aam
inc
shrl
jb
ss
lcall
adc
test
mov
lods
in
test
adc
repnz
mov
scas
mov
push
int
pushf
inc
sub
jmp
sbb
stos
xor
pop
dec
push
outsb
cmp
push
mov
mov
add
out
push
out
ret
loopne
fwait
sub
sti
mov
xor
sub
lahf
fisttps
loop
mov
jae
mov
fiadds
lahf
xorl
test
push
mov
inc
cmpsb
fidivs
inc
fnsave
mov
mov
js
push
sub
push
jle
data16
aas
dec
sub
test
fwait
xor
push
xchg
shl
cmc
in
sbb
sub
push
lods
sti
cmc
xlat
jb
inc
subb
stos
mov
in
lret
stos
inc
sti
adc
mov
loopne
mov
mov
pop
ret
jl
pop
fwait
enter
cmpsl
jb
cmp
lds
lret
mov
jge
sar
push
cmpsl
inc
test
test
mov
add
stos
cmp
in
dec
mov
jbe
ljmp
pop
and
outsb
adc
dec
mov
gs
xchg
mov
xchg
jmp
lret
jl
sub
fs
sbb
shll
adcb
push
frndint
loope
rcrl
jl
das
out
seto
cmp
arpl
adc
dec
popf
xor
push
push
add
cmp
std
clc
cmp
xlat
push
inc
pop
stc
bound
and
jecxz
sub
pop
leave
mov
push
pop
mov
pop
psraw
cmp
ja
push
push
movsl
xchg
fdivrs
stc
fiaddl
imul
int3
iret
stos
push
inc
imul
add
enter
mov
jo
lea
arpl
inc
pop
sbb
cmpsb
sbb
cmovp
dec
sbb
shll
sti
pop
mov
add
sbbl
cli
cli
and
mov
or
push
adc
pop
iret
mov
pop
add
stc
sub
mov
mov
loopne
sbb
lcall
mov
dec
icebp
inc
cli
add
mov
in
adc
shll
pop
xchg
push
ss
in
or
mov
test
out
xchg
pop
cli
mov
pop
in
loope
adc
fwait
cmp
cltd
pushf
mulb
hlt
clc
test
pusha
jp
add
aas
jl
dec
xor
test
sbb
add
mov
dec
ljmp
mov
test
adc
rsqrtps
ret
stos
mov
aam
fisubrl
shl
dec
in
sub
xlat
scas
pop
call
jns
mov
dec
stos
push
xchg
test
push
push
lods
mull
cmp
hlt
icebp
mov
sbb
push
test
cmp
sub
jp
in
and
jl
aam
inc
shll
das
pop
xlat
test
stos
push
cmp
push
and
shrl
lock
jge
xor
aas
and
stos
adc
sub
into
inc
inc
int3
dec
xchg
sti
mov
stc
rcl
sbb
pop
xchg
cmp
rol
dec
daa
inc
cld
popa
int
jb
mov
test
xchg
mov
or
cld
inc
push
sub
psllq
loopne
push
xor
sbb
mov
sahf
mov
call
leave
push
sub
popa
sti
repnz
test
in
ja
pop
gs
jne
aas
lds
shr
lahf
ss
fdivs
icebp
shl
fidivrs
rclb
jmp
sbb
shlb
jl
out
xchg
cmp
sahf
cmpsb
in
jmp
sub
lret
pop
call
insl
shll
fldpi
outsb
or
imul
cli
lcall
iret
rcll
nop
jae
stos
xor
mov
or
cs
dec
xor
or
imul
xchg
mov
popf
lcall
dec
and
mov
xor
pop
imul
xor
pop
xor
loopne
lahf
in
push
pop
hlt
jle
xchg
push
mov
dec
xor
pop
push
jg
addb
cmpb
sahf
das
sub
push
pushf
rorl
xchg
pop
adc
imul
test
xchg
mov
ljmp
clc
dec
sub
inc
out
sbb
jnp
add
dec
repz
icebp
dec
push
and
inc
ja
loope
xchg
dec
ficoml
pop
int3
mov
sub
loope
lahf
xor
sahf
and
inc
adc
adc
cmpsb
adc
ret
mov
cmp
mov
gs
lret
call
cmpl
cmp
dec
push
in
dec
jno
inc
xchg
mov
popf
inc
int3
inc
mov
and
cmp
cmp
and
rcrb
cmpsl
mov
outsl
cld
imul
sahf
test
push
pop
mov
ja
incl
sub
mov
rcrl
xchg
xor
aaa
lods
sbb
jns
sub
dec
mov
test
notl
push
mov
mov
hlt
jmp
mov
andb
or
adc
hlt
mov
pushf
push
imul
sbb
negl
in
cmp
leave
test
mull
cmp
cmp
xchg
in
fwait
movsl
out
fsubp
add
loope
repnz
push
popa
icebp
sub
pop
mov
les
xchg
jge
cmp
and
call
pop
mov
xor
ret
add
arpl
mov
shrl
xor
inc
push
daa
rolb
xchg
dec
dec
test
insb
dec
ljmp
scas
call
ds
rorb
cli
xor
mov
push
xchg
pop
adc
cmp
push
sbb
cmpsl
and
jg
ret
add
std
call
mov
jp
aam
jno
dec
mov
lcall
cmp
jl
inc
test
into
sub
test
mov
in
and
lret
pop
pop
je
xor
lret
fildl
or
cs
in
mov
xchg
popf
iret
andb
pop
jne
mov
shrb
cmp
and
jae
in
leave
mov
shlb
cmp
aad
push
xchg
stc
nop
jmp
andb
xchg
fstps
call
cmc
pop
out
dec
clc
or
out
stos
bound
sbb
jmp
dec
roll
sbb
push
jge
dec
push
imul
or
stc
add
icebp
ret
sbb
sbb
out
js
cmp
push
pop
dec
popf
adc
sub
leave
cmp
cmp
cvttps2pi
out
daa
xchg
pop
push
addb
push
loopne
outsl
push
int
add
mov
jae
xchg
call
and
dec
jle
fcomip
fwait
mov
shlb
and
fsubl
cmp
sbb
fwait
mov
sbb
mov
mov
cld
imul
jmp
or
inc
aad
ret
stc
cmp
in
or
aaa
xchg
and
icebp
inc
out
mov
pop
hlt
in
push
ret
loopne
shlb
test
addr16
movsb
sbb
daa
flds
cmpsb
daa
cmpb
jle
sub
pushf
mov
in
push
cmp
mov
daa
mov
sbb
and
inc
push
mov
arpl
push
test
xor
fimuls
fisubs
gs
add
fidivs
test
add
mov
xchg
xchg
or
testb
icebp
mov
into
lods
pop
insl
xor
lahf
int
adc
stc
imul
test
iret
jmp
and
scas
ss
sti
inc
and
sub
mov
es
cltd
adc
mov
mov
add
mov
add
bound
outsb
pushf
mov
fiaddl
ss
pop
inc
sbb
shll
sub
imul
inc
jns
xchg
adc
adc
lahf
lcall
mov
adc
inc
test
cli
pop
daa
and
lret
das
ljmp
add
daa
fldenv
xchg
outsb
mov
xorl
dec
xchg
fstps
aas
push
nop
fsubrl
mov
loop,pt
adc
xchg
popf
add
push
mov
push
mov
adc
add
aas
sti
std
nop
mov
inc
aam
test
jno
pop
fistps
and
push
testl
loopne
push
push
dec
and
shlb
fmul
cmp
js
ret
into
sub
inc
sbb
mov
fldl
hlt
pop
out
loope
sbb
fwait
cmp
jb
lcall
mov
push
and
out
xor
mov
add
pop
lahf
es
mov
outsl
leave
add
or
outsl
pop
or
adc
and
cld
loop
add
cld
sbb
push
dec
mov
pusha
lret
outsl
scas
out
imulb
lret
icebp
mov
jge
shl
int3
and
lahf
lods
shlb
loope
stc
mov
lds
or
jbe
pop
clc
or
lcall
sub
jl
ja
adc
fmul
or
mov
les
ss
scas
gs
mov
push
cmp
je
xchg
pop
out
call
loope
jnp
pop
mov
xor
iret
int
ja
lds
pop
mov
jl
sbb
xor
jle
dec
ret
lcall
xchg
xchg
sub
sub
and
test
push
cmc
mov
or
mov
sub
push
mov
addr16
mov
loop
loope
inc
or
dec
xchg
cmc
in
sbb
call
mov
push
jge
ss
cmp
arpl
in
cmp
lcall
jbe
sub
daa
outsl
ret
and
jecxz
es
jo
stos
mov
adc
inc
lods
mov
ss
jg
imul
xorl
xchg
or
adc
icebp
sub
cs
sub
xlat
clc
mov
call
dec
dec
cmovne
repnz
jnp
cmpsb
xor
cmpsb
push
sbb
mov
stc
push
or
mov
mov
or
inc
jl
jbe
mov
mov
mov
cmp
dec
imul
aaa
push
xchg
push
cmc
aas
mov
mov
push
enter
addr16
mov
sub
daa
or
enter
xchg
rcr
pop
mov
cmp
scas
xchg
cmp
sbb
stc
push
mov
shll
push
and
mov
pop
lea
xor
adc
mov
mov
pop
dec
out
jge
mov
into
xorl
jae
in
pop
mov
xor
lods
jle
imul
inc
sub
adc
lahf
mov
and
cwtl
mull
sbb
pop
sub
add
xchg
nop
test
mov
iret
arpl
cli
out
mov
imul
xor
daa
mov
or
add
loopne
push
pop
xchg
xchg
push
dec
sahf
jnp
int3
out
je
adc
aam
xor
and
out
jmp
jbe
fists
lcall
mov
cmpsb
call
jecxz
mov
lods
repnz
fisubs
mov
std
pop
ret
and
ja
jne
jb
cmpl
push
rol
xor
jnp
add
mov
adc
daa
inc
cmp
dec
movsl
mov
add
or
int
inc
mov
arpl
xchg
rcrl
ds
icebp
imul
xlat
popa
in
jl
pop
inc
sbb
push
incl
or
ror
out
xchg
test
sub
cwtl
ficoml
ret
sahf
fcoml
cmc
dec
xor
xorl
dec
jp
sub
subb
pop
arpl
dec
stc
ljmp
aas
push
scas
lret
mov
imul
daa
shl
or
and
int3
pop
shrl
cwtl
xor
jg
int3
jmp
lcall
and
addr16
sahf
jmp
or
in
mov
loopne
mov
jns
test
inc
cmp
scas
fs
clc
fwait
push
fwait
sbb
mov
stc
pushf
push
dec
xlat
pop
sbb
xor
pop
push
cmpsb
ja
addr16
inc
hlt
push
and
pop
aaa
push
adc
and
jns
xor
jo
fwait
out
sub
out
pop
jno
and
jl
cmp
sub
flds
lret
adc
test
js
jp
cwtl
lea
push
ret
pop
das
adc
sub
push
or
hlt
inc
jne
pusha
cmp
push
pop
xchg
xchg
sub
pop
bnd
and
inc
inc
mov
aam
cmp
sbb
cmpsb
jecxz
push
inc
xchg
call
or
lcall
jae
fistpl
psllq
pop
inc
lds
xor
mov
adc
fldt
notb
loop
cwtl
cmpb
addr16
in
outsl
outsb
or
shl
test
ret
xchg
mov
xchg
jl
test
fsubrs
imul
leave
call
jmp
add
jge
xor
mov
jmp
add
testb
adc
pop
push
mov
cs
decl
ja
ror
pop
shll
outsb
in
mov
hlt
bound
push
mov
test
fcomps
es
ret
mov
inc
loopne
das
test
sbb
cmp
push
mov
mov
mov
sbb
mov
adc
xchg
or
js
dec
sub
addr16
xchg
mov
sbb
insl
mov
scas
jecxz
mov
subb
in
xchg
mov
adc
xor
out
jl
shll
jo
mov
cmpsb
sub
repnz
lock
sub
cmp
mov
les
nop
sub
imul
sub
push
xchg
mov
repz
jecxz
cmp
pop
pusha
lea
fidivl
clc
dec
or
inc
cwtl
dec
xor
sbb
enter
iret
jno
ret
push
mov
push
flds
daa
out
je
enter
loope
push
sub
inc
sub
push
jmp
pop
inc
sbb
pop
adc
pop
push
push
push
test
adc
dec
add
aas
push
shll
mov
pop
mov
clc
mov
dec
inc
inc
stos
jne
test
mov
add
aad
jge
test
bound
xlat
inc
mov
fistpll
shl
mov
adcl
sub
inc
jge
add
les
sub
jg
rcrl
jl
inc
test
rclb
sbb
pause
es
aad
mov
test
cld
js
mov
add
jl
int
xor
pop
sub
mov
xchg
adc
repnz
paddb
out
out
out
mov
hlt
popf
fnstenv
test
mov
or
mov
dec
stc
inc
xchg
sbb
jne
and
fdivs
cmpsb
cwtl
inc
lods
inc
xchg
clc
and
insl
adc
dec
dec
add
sub
rolb
push
ljmp
inc
fcomip
mov
xchg
dec
incb
cmp
es
mov
sbb
lcall
dec
or
sbb
scas
mov
aaa
xor
fstl
mov
repz
das
mov
dec
dec
jl
jne
mov
and
xor
jae
out
cwtl
fstl
add
testb
sub
fwait
inc
out
out
sbb
rorl
dec
mov
add
lcall
lods
test
sbb
mov
mov
mov
jecxz
add
adc
inc
dec
sub
cld
out
insb
into
xor
dec
xor
sub
pop
add
or
cwtl
ja
cmpsl
mov
pop
imul
push
cmpsb
ds
popf
push
in
inc
xor
dec
std
xchg
arpl
lahf
scas
or
cld
and
test
fidivrl
cli
push
icebp
adcl
bound
insl
jle
mov
add
lret
jle
scas
imul
and
sarb
lcall
jecxz
xchg
movsb
cmp
std
int
xor
add
cmp
dec
testl
xor
scas
jge
cmc
mov
repnz
lcall
sahf
inc
sbb
push
test
adc
ljmp
insb
inc
cmp
mov
mov
cmp
loope
sbb
and
dec
mov
es
or
xor
dec
sbb
lods
mov
mov
fs
iret
xor
cmp
xlat
sub
in
stos
push
sub
push
mov
mov
mov
pop
lret
or
push
mov
inc
mov
out
shrb
xor
mov
xchg
les
ret
stc
pop
sub
addr16
cmpsb
ret
adcl
jmp
sbb
clc
dec
jp
ss
mov
jl
test
lock
inc
mov
or
loope
adc
adc
cmp
stos
lret
mov
adc
push
test
lds
lahf
shlb
xchg
jnp
fcomps
mov
or
and
jl
pop
xorl
xchg
mov
es
xchg
jmp
scas
lahf
clts
mov
sub
and
lsl
sahf
fadds
test
addb
or
mov
cmp
and
xchg
insb
mov
stos
cmp
jl
test
jns
jbe
cmp
lock
dec
push
pop
dec
sarb
popf
ret
mov
cs
push
ds
add
and
push
cwtl
mov
ror
aaa
movsb
xor
cmp
mov
push
repz
cltd
dec
xchg
dec
mov
inc
popf
aad
leave
insl
mov
dec
push
shll
push
xor
mov
pusha
sub
inc
or
xor
or
pop
xchg
out
and
pushf
loop
xlat
pop
dec
cltd
js
sbb
mov
mov
cmp
and
jo
mov
or
inc
jge
push
testb
adc
sbb
lods
sarb
mov
xor
in
shrb
pushl
jmp
nop
int3
dec
in
ret
dec
sbb
mov
lods
movsl
jmp
xchg
imul
push
or
mov
mov
imulb
cmp
mov
aas
fdivrs
inc
jge
xor
pop
cmp
ja
lock
jge
int3
sub
or
sbb
push
xor
sti
mov
leave
jle
mov
push
push
shll
inc
dec
dec
arpl
inc
mov
repnz
loop
lcall
adc
pop
adc
dec
and
push
jg
mov
cli
outsl
jae
sbb
insb
dec
pop
clc
xor
cmpsl
std
test
mov
xchg
xchg
cltd
stc
cmp
mov
mov
sub
jg
adc
mov
mov
sarb
inc
xchg
pop
mov
mov
shl
mov
ret
leave
fldenv
xor
rclb
out
std
jno
jno
xor
xlat
mov
jae
cmpsb
dec
xor
lods
cmp
cwtl
lret
imul
push
jns
xchg
sbb
sbb
jo
fiaddl
add
popf
scas
loope
test
iret
call
jg
pushf
mov
adc
or
cmp
mov
and
mov
push
and
and
cmp
out
shlb
adc
in
sub
mov
xchg
mov
pop
shll
and
stos
add
into
mov
push
dec
dec
icebp
out
aaa
push
ja
sbb
add
sub
je
cld
mov
outsb
popa
aas
decl
push
fimuls
pusha
aad
push
pop
out
jns
jle
stos
xchg
or
mov
sub
mov
je
int3
insb
imul
adc
int3
in
or
push
jg
sub
pop
movsb
mov
dec
xchg
aam
adc
mov
xchg
mov
push
loopne
pop
cmp
rcrl
push
daa
jge
out
stos
push
mov
inc
pop
mov
or
ret
mov
pcmpeqd
insl
add
jns
pop
testl
gs
movsl
jecxz
fidivrs
ljmp
out
inc
scas
fiadds
mov
rcrb
ss
daa
cmc
loope
dec
inc
je
lahf
shld
xchg
push
xor
xor
insb
aas
mov
inc
add
xchg
pop
movsl
in
stc
scas
xchg
gs
push
leave
xor
inc
pop
or
mov
imul
repz
das
add
cmpsl
ret
rol
xlat
mov
jmp
push
inc
inc
ljmp
sbbb
cmpsl
or
loope
sub
movsb
in
fwait
in
push
inc
push
or
sbb
outsb
shrb
rcrb
pushf
pop
lds
add
lds
rolb
loop
xchg
fldl
jl
cli
pop
ljmp
add
daa
shlb
push
bound
xlat
popa
mov
andb
pop
insl
ds
jmp
ret
loope
sarl
lret
mov
mov
sub
aad
into
int3
inc
pop
dec
dec
lock
mov
sub
fcom
iret
test
ljmp
mov
lea
xchg
loop
mov
push
test
arpl
xor
push
cmp
repnz
push
sahf
fs
fsubrs
dec
dec
dec
test
mov
lock
dec
xor
repz
in
dec
lret
out
icebp
sub
pop
clc
fdivrl
out
mov
sub
dec
shlb
jg
aas
sub
jmp
outsb
pushf
test
jmp
adc
xchg
leave
imul
push
je
dec
test
jle
movsl
pop
pop
das
and
and
xchg
xchg
decl
cmp
jnp
cmp
and
push
push
add
mov
push
into
or
cmp
cmp
lret
pop
push
jno
xchg
mov
test
cld
iret
sbb
push
xchg
lds
bound
mov
sahf
pop
addr16
push
push
sarb
mov
push
mov
iret
ljmp
fdivrs
and
icebp
mov
mov
add
in
lahf
sub
je
and
or
fcom
gs
dec
or
popa
ss
arpl
add
das
ret
mov
add
push
insb
cs
jp
mov
or
sub
mov
xor
outsb
testl
jns
xor
popa
dec
push
movsl
push
push
dec
adc
pop
xor
out
orl
hlt
hlt
jae
or
int3
imul
mov
in
aaa
and
jmp
bound
mov
jbe
aas
int3
push
add
rorl
push
js
test
arpl
jae
test
int3
ret
xchg
fisubs
in
sti
xor
cmp
movsb
ret
mov
lcall
outsb
imul
xor
dec
insb
xor
cmc
mov
imul
pop
push
cmp
nop
scas
shrl
lock
cmp
xorb
pop
mov
je
and
cs
out
into
faddp
loopne
sub
shll
cld
xchg
dec
stc
xchg
mov
xor
cmp
in
push
mov
pop
add
mov
fisubs
adc
faddl
mov
shl
sbb
and
and
mov
imull
into
outsb
lock
sub
ret
dec
adc
mov
imul
jle
mov
push
pop
mov
pop
data16
icebp
xchg
stos
adc
push
mov
add
js
das
loop
out
cs
or
sbb
mov
pushf
arpl
divb
outsb
scas
push
add
xor
xor
cmpsb
subb
mov
cmp
adc
sbb
cli
idivl
xor
cltd
pop
mov
cmp
add
cmc
cmpb
xchg
dec
icebp
push
adc
mov
mov
jle
jg
lds
add
das
lcall
sbb
jmp
push
mov
fildl
lock
lret
sbb
sti
scas
mov
je
enter
dec
in
jnp
mov
call
cmp
push
stos
sbb
call
stos
insl
into
mov
pusha
dec
ja
and
xchg
pusha
and
dec
movsb
jl
enter
ret
mov
add
or
loope
pand
cmp
call
pop
stos
cmp
lret
and
dec
or
insb
sub
jmp
inc
shlb
out
mul
popf
rcr
js
pop
inc
stc
add
mov
sub
insb
fs
dec
and
mov
pop
cmp
out
pop
mov
cmp
mov
arpl
dec
xchg
pop
and
imul
fiaddl
mov
xor
sbb
lds
mov
mov
js
cmpsb
xchg
mov
adc
in
jge
jecxz,pt
pushf
out
push
lock
addl
mov
cmpsl
xlat
mov
mov
sbb
pop
jo
enter
mov
sbb
stos
push
or
lahf
adc
shlb
inc
ss
loopnew
inc
mov
mov
jl
aad
in
pusha
outsb
or
xor
leave
pop
mov
mov
or
xlat
mov
sub
jno
movsb
mov
lods
stos
pushf
jbe
daa
add
fmulp
mov
mov
test
shl
and
and
lods
jo
adc
out
or
ljmp
inc
outsb
aaa
inc
mov
add
scas
mov
enter
fiadds
pop
lret
rcll
push
adc
xchg
sub
lods
cmp
cmpsb
mov
fs
mov
mov
push
jb
addps
sbb
out
in
nop
push
sub
mov
jecxz
sub
ret
sub
adc
stos
loopne
clc
scas
cmpsb
pop
cmc
ret
mov
adc
test
out
lds
cltd
jb
cld
repz
std
stc
jge
mov
push
push
loop
mov
sbb
or
jge
pop
lock
push
aam
jmp
bound
jns
push
cld
test
push
popa
push
mov
lret
test
cmpsb
cld
es
xchg
sub
in
jl
mov
mov
into
call
incb
cmp
decb
aad
imul
testb
out
adc
sti
fcoms
std
scas
mov
pop
hlt
jl
aam
sub
movsl
pop
shrl
and
inc
or
xor
xchg
cmc
push
loopne
cwtl
adc
mov
add
jmp
push
inc
and
loop
add
lods
ret
xor
test
data16
ds
add
stc
and
aaa
sub
xor
test
call
xor
inc
js
dec
sbb
jb
pop
scas
shll
aaa
inc
sbb
mov
test
pop
sti
addr16
rcrb
sbbl
lret
xor
outsl
sbb
cmpsb
xor
cmp
sbb
fstpl
push
push
adc
sbbb
dec
cltd
sbb
lret
out
pop
lcall
xor
and
jmp
int
iret
mov
jo
dec
addr16
in
mov
mov
int
insb
popf
ret
mov
hlt
dec
jns
mov
int
aad
xchg
mov
enter
cmpl
xor
adc
sbb
cwtl
out
xchg
add
daa
mov
scas
sbb
sar
fdivr
outsb
stos
mov
mov
ret
inc
jge
and
pop
icebp
xor
das
inc
addl
mov
inc
fcompl
pushf
ljmp
sbb
sahf
ljmp
shll
push
push
sbb
subb
in
mov
in
cmp
lret
add
xor
sbb
fldenv
stos
or
pop
inc
sub
cmp
das
mov
mov
out
or
loop
test
std
adc
fiadds
ficoml
mov
addb
adc
outsl
mov
or
push
and
add
inc
lret
push
xchg
and
movsb
sbb
cli
scas
jns
cmp
ja
push
lods
inc
insb
fisubrl
pushl
cld
lock
std
jnp
aam
cld
jmp
inc
dec
or
ret
and
cmpsb
das
lahf
adc
mov
iret
dec
mov
mov
mov
stos
lret
sbb
and
sti
xchg
dec
jne
cmpsl
mov
sbb
rcr
and
push
mov
ss
imul
pop
std
cli
sub
xchg
mov
icebp
or
adcl
mov
movsl
sbb
dec
mov
mov
and
shl
push
inc
xor
mov
jae
jle
cli
mov
sbb
pop
enter
js
int
sub
dec
or
outsl
lods
test
push
cwtl
gs
ss
adc
and
rolb
leave
cmp
push
xor
daa
or
popf
gs
ja
and
aad
imul
fdivrs
in
inc
dec
push
push
bound
jl
sahf
daa
cmp
mov
dec
jne
pusha
xchg
test
dec
adc
lods
mov
lcall
cs
cmpsl
mov
pop
popa
popa
and
xor
dec
cmp
call
loope
ljmp
jg
xor
insb
stc
sub
pop
ss
jmp
dec
dec
imul
lods
jecxz
stos
repz
jp
jle
push
mov
jl
cmp
les
jle
fnstsw
jnp
mov
lds
shrl
pop
leave
inc
cmp
in
xchg
xlat
push
mov
leave
mov
inc
mov
dec
mov
and
fwait
mov
adc
gs
or
int
pop
mov
jg
push
and
incl
outsl
int
ds
adc
es
fdivrp
xor
or
sbb
push
push
and
xchg
adc
pushf
filds
push
out
inc
pop
jecxz
jb
mov
test
andl
shr
pop
leave
mov
xor
mov
dec
sbb
adc
inc
stc
mov
ret
inc
int
pop
jne
inc
xchg
int3
pop
fisubs
imul
sahf
addl
add
aaa
jg
xchg
adc
sbb
adc
adc
lods
push
and
cmpl
in
mov
xchg
or
pop
fildll
ja
nop
push
in
mov
test
sti
xor
call
fs
push
and
sub
ljmp
push
push
jbe
mov
or
pushf
aam
rol
xchg
fmulp
sbb
sub
or
and
mov
aad
lahf
sbb
fstps
inc
xlat
add
pop
cmpsl
push
lcall
cld
add
xchg
push
push
xor
pop
icebp
mov
add
stc
rolb
test
out
imul
jecxz
pop
adc
or
sub
mov
cwtl
stc
jl
rcll
dec
push
aam
stos
cmp
fnsave
mov
sbb
mov
orl
pop
lock
lea
rol
or
fwait
and
sub
lods
mov
das
lret
fidivs
lret
jmp
mov
add
adc
inc
push
adc
sub
ss
push
stos
sub
inc
push
out
xchg
stos
jecxz
std
xlat
xor
lahf
imul
adc
dec
inc
icebp
cmc
jne
jne
and
and
out
iret
popa
mov
jl
les
cld
clc
fisubrs
repnz
lods
es
insb
daa
in
insb
sub
sbb
cmc
inc
adc
fcmovne
sub
inc
insl
std
xor
pop
mov
mov
adc
or
dec
and
or
loop
mov
insl
sub
lods
cmp
clc
and
push
ss
mov
or
std
test
or
jns
adc
in
popa
adc
repnz
sahf
mov
jb
gs
xchg
sbb
xor
das
filds
xor
test
sub
pushf
outsb
xchg
clc
sub
das
sub
sarb
cmp
mov
mov
orl
cmp
test
sahf
mov
mov
sbb
lods
push
leave
or
add
sub
pop
xchg
xor
xchg
sbb
sub
movsl
data16
mov
adc
or
fidivl
lods
rcrb
cmpsb
mov
popf
cmpsl
mov
adc
loop
cmp
sub
cmpsl
or
cmp
and
rcrl
loop
das
pop
cmp
popf
fs
into
mov
pop
dec
in
pusha
push
out
add
adc
cltd
adcl
mov
mov
scas
movsb
mov
test
ret
fimuls
xchg
sbb
xor
in
mov
es
sub
adc
pop
les
jb
inc
mov
fs
pop
cwtl
and
fmuls
xchg
imul
rcrb
gs
jae
add
in
stos
adc
mov
scas
xor
repz
jp
push
loope
in
stos
adc
xor
stos
movsl
jne
cmp
lret
dec
sti
sarl
sub
lock
in
cmpsb
push
out
adc
mov
push
push
mov
mov
cwtl
lret
fsubrs
xor
dec
adc
adc
mov
mov
iret
jg
add
lea
inc
out
cld
int3
imul
dec
mov
mov
test
push
mov
pop
xor
mov
enter
sub
mov
mov
cld
lcall
rcr
fcoml
inc
stos
out
lds
jl
stos
es
mov
test
outsb
sub
cmpsb
push
mov
hlt
sbb
dec
push
pushl
push
cmp
xchg
jecxz
in
pop
std
cmpsl
sbb
push
push
sbb
inc
cld
mov
rclb
add
xor
mov
in
ret
pop
sbb
xchg
jb
xor
mov
xchg
push
pop
push
mov
pop
mov
test
jbe
cltd
icebp
push
jno
icebp
jns
cmp
jae
lock
adc
xchg
les
push
pop
pop
loope
dec
ret
sahf
outsl
pop
lcall
pop
sub
scas
hlt
gs
nop
fs
out
roll
ficomps
ret
test
clc
xchg
sub
cmp
pop
inc
mov
cmp
fwait
jne
inc
mov
pop
xor
js
dec
repz
or
mov
jmp
xchg
in
push
fadd
adc
sarb
pop
mul
pusha
pop
out
in
push
adc
cli
dec
sahf
lahf
fisubs
pop
decb
inc
andl
adc
push
dec
or
push
jmp
ja
mov
xlat
aas
fmuls
imul
dec
lock
xchg
dec
cmc
cmp
sbb
out
out
or
jecxz
add
sub
repnz
rcll
je
mov
jae
stos
adc
mov
mov
or
out
pusha
imul
mov
xor
jbe
push
fs
dec
gs
pusha
and
inc
jnp
fadds
mov
mov
inc
sbb
arpl
mov
in
sahf
aas
xor
mov
lds
shlb
scas
adcb
ja
jnp
fists
mov
jbe
jp
push
and
xchg
xor
or
or
lea
call
jnp
jge
and
test
or
cs
xor
push
xchg
xchg
xor
orb
roll
push
inc
push
cmp
jns,pn
movsl
jmp
xchg
clc
mov
pop
xor
xor
mov
or
sbb
xchg
sub
mov
add
jecxz
into
cmp
mov
or
repnz
rclb
decb
jmp
jno
cli
add
jp
xor
push
inc
out
or
outsb
jmp
adc
xor
mov
jge
cwtl
jg
ret
lret
mov
sbb
test
out
stos
mov
mov
xchg
or
cli
xchg
pop
dec
pop
fsts
dec
subb
lret
dec
loope
mov
add
dec
cmp
inc
scas
hlt
and
pop
mov
pop
loopne
or
xor
outsb
lcall
add
mov
jecxz
jg
mov
outsl
aas
push
sahf
cmpsl
ja
cmove
shll
mov
lock
cli
movsb
mov
jle
xor
xchg
adc
pop
mov
test
mov
xchg
inc
popf
push
or
pop
adc
pop
sbb
sub
sub
inc
jmp
pop
fldl
aas
cltd
ror
jns
vpmacssdqh
mov
fildll
aas
cmp
int3
sub
mov
xchg
sbb
shll
cmp
cli
test
push
rcrb
push
adc
mov
pop
rorb
iret
pop
mov
and
inc
or
fsubs
or
xor
adc
push
jb
pop
xor
xor
add
sbb
mov
shll
mov
sub
fcoml
jae
xchg
cmpsb
arpl
jo
in
aaa
js
nop
push
aaa
rolb
shl
or
or
sbb
gs
sbb
adc
sub
adc
pop
jge
jns
push
inc
lods
ja
inc
call
pop
movsb
pop
ja
not
jno
shlb
adc
push
fldcw
pop
mov
mov
adc
push
inc
mov
test
and
bound
leave
call
push
dec
push
and
div
mov
pop
scas
push
lret
lock
pop
mov
cmp
mov
incl
cmc
cmp
adc
adc
adc
sbb
inc
xchg
add
cmpsb
lock
bound
dec
loopne
adc
dec
pop
pop
pop
sbb
in
xchg
and
sub
or
daa
add
mov
jp
xor
ret
xchg
mov
int
jae
inc
outsl
sub
scas
lock
fiadds
ljmp
xor
aas
cmp
insb
popa
test
push
mov
ret
in
add
mov
mov
nop
jl
test
aad
inc
es
cmp
adcl
adc
mov
mov
fimull
pop
or
mov
imul
add
add
sbb
sahf
pop
fstpl
mov
popa
std
mov
pop
sbb
movsl
dec
lret
jbe
hlt
add
repnz
push
gs
sti
cltd
mov
jg
pop
xchg
mov
sbb
jns
repnz
imul
ficompl
cld
push
clc
leave
jo
and
push
xor
in
push
mov
jne
in
inc
repnz
pushf
iret
in
dec
xchg
push
sbb
pop
imul
pop
mov
push
jae
pop
pop
stc
or
out
or
iret
insl
cmp
cltd
jne
inc
adc
shlb
inc
jb
stos
cmp
out
cltd
pushf
fdivrl
push
jo
sub
and
mov
imul
or
xlat
lea
xchg
ret
and
scas
xlat
je
ja
adc
lahf
clc
push
mov
loop
xchg
repnz
sub
mov
jecxz
movsb
mov
push
testb
xlat
jno
and
xor
movsl
imul
testl
hlt
xchg
aad
mov
adc
outsl
xlat
ds
dec
xor
mov
addr16
or
lds
insb
mov
jo
je
popa
adc
movsb
out
mov
jecxz
ret
hlt
xor
fs
jmp
filds
dec
mov
mov
jl
mov
push
jg
dec
or
mov
xchg
repnz
imul
outsb
adc
arpl
mov
movsl
lds
and
mov
aaa
stos
dec
lea
adc
rorl
lods
add
mov
lea
jb
mov
cmp
out
in
push
and
adc
inc
mov
cmp
xchg
decl
int
mov
inc
int3
pop
insb
push
lret
jns
or
std
ror
xchg
mov
imul
mov
mov
dec
xor
jb
subb
push
jl
sahf
push
fmul
add
loopne
clc
pop
popa
mov
pop
xor
popa
or
push
dec
repz
test
mov
xchg
test
in
ret
pop
pop
ret
push
jbe
out
push
cmpsb
nop
add
outsl
lahf
push
cmp
or
fdivrl
jne
xchg
jle
add
push
repz
test
int3
pop
rorb
fistl
in
add
fidivrs
inc
decb
rolb
jns
clc
xchg
mov
fildl
or
notl
pop
adc
jne
xor
xor
loope
repz
xlat
push
xor
cmpsl
xchg
pop
add
mov
sbb
adc
ljmp
jnp
cli
push
inc
adc
mov
sub
out
addr16
jb
push
sbb
mov
mov
rcl
in
mov
pop
rcrb
rol
outsb
lea
mov
imul
pop
stos
xchg
xor
inc
mov
or
mov
fcmovbe
test
data16
or
out
int3
loopne
inc
jo
loope
lods
jp
out
pop
dec
mov
and
jl
sub
repnz
pusha
add
push
call
and
or
fs
push
add
and
nop
mov
aas
mov
sbb
sub
or
push
mov
jge
xor
orb
dec
enter
js
sbb
mov
inc
push
jecxz
ss
popa
divps
and
enter
repnz
mov
lcall
inc
dec
inc
push
pop
in
push
push
repnz
and
daa
pop
es
mov
loopne
jne
jecxz
xlat
xchg
cmp
jmp
add
push
xchg
pusha
daa
sub
dec
push
dec
xor
ljmp
scas
sbb
test
cmp
sub
xchg
inc
sbb
xor
push
sbb
aam
hlt
or
sbb
xchg
add
mov
in
popa
int3
pop
daa
sbb
add
push
insb
dec
sub
or
mov
rcrl
fdivrl
and
push
stc
inc
inc
mov
call
lret
lret
xchg
mov
in
icebp
in
addb
popf
lahf
enter
loop
insb
push
jbe
pop
out
imul
stc
aad
inc
jg
cmpsl
mov
or
jb
jge
fadds
jne
push
dec
mov
jnp
cmp
cmp
leave
xchg
roll
jg
sub
lods
ljmp
inc
fcoml
fdivr
dec
dec
cmp
ja
xchg
push
push
xor
push
mov
imul
mov
jo
loope
mov
scas
jae
inc
movsl
or
cs
lret
add
iret
lret
bound
push
jnp
es
cmp
jmp
sbb
pop
pop
jno
mov
dec
in
and
ret
rclb
aad
mov
ror
sub
jl
cltd
pop
pop
mov
add
xchg
fs
cmp
add
ss
sbb
lret
adc
jno
das
mov
fld
pusha
je
out
pop
cmpsl
xor
pop
mov
sbb
push
notb
iret
push
call
clc
add
or
aaa
adc
mov
insb
cmp
jmp
imul
lret
subb
out
mov
add
cli
push
enter
out
fcmovu
mov
pop
add
dec
and
and
add
scas
loopw
xchg
adc
arpl
push
xor
dec
push
mov
push
into
push
js
mov
dec
add
jp
cmpsb
jecxz
sub
repnz
lds
pusha
sub
jmp
xor
std
sub
scas
mov
and
or
or
test
dec
pop
push
pop
call
stc
cmp
push
out
or
into
dec
xchg
sbb
fildll
pop
cli
iret
or
ja
fst
fucomi
inc
adc
or
jp
lret
lods
mov
fabs
or
xor
fwait
out
mov
shll
inc
cli
pusha
cli
jle
mov
pop
ljmp
cld
sub
xchg
insb
inc
or
pop
mov
mov
in
scas
push
shl
xchg
fimull
or
lcall
xchg
fnsetpm(287
mov
fdiv
push
pop
fwait
cmp
dec
mov
sbb
lahf
pop
dec
dec
mov
push
dec
mov
inc
mov
xorl
mov
push
arpl
mov
add
data16
push
xlat
lods
pop
adc
cmpsb
inc
mov
inc
mov
das
inc
test
enter
mov
sub
fwait
stos
lods
in
xchg
daa
mov
mov
mov
and
cmpsl
mov
mov
mov
subl
dec
pop
cmp
pop
hlt
dec
push
cmp
cmp
in
add
push
data16
push
test
xchg
cmp
ja
pop
es
mov
dec
cmp
insb
inc
aam
or
adc
inc
dec
pushf
nop
mov
mov
mov
mov
push
pop
sbb
inc
jmp
out
push
xor
push
inc
cltd
mov
jle
mov
jns
or
cli
cwtl
sbb
push
jmp
push
sbb
push
ljmp
xchg
sbb
mov
sbb
enter
push
cmp
sbb
inc
sub
insl
jmp
jl
out
sbb
lret
stos
in
and
ljmp
lret
ja
rcr
mov
sub
mov
adc
fisubrs
pop
push
mov
js
mov
ret
loope
dec
mov
enter
lcall
rorl
test
lods
aam
push
add
push
stos
lcall
pop
flds
sbb
rcll
ds
adc
cmp
add
pop
dec
dec
movsl
aas
xchg
sub
addr16
inc
popa
jle
and
mov
jmp
add
inc
xchg
lret
xor
repnz
sbb
call
cwtl
fcompl
ss
cmp
mov
xor
ljmp
and
sub
add
les
push
pop
aam
call
mov
add
aaa
into
inc
xor
test
dec
push
xchg
push
push
imul
fmuls
mov
es
jbe
icebp
jns
bound
flds
pop
call
pop
lcall
out
mov
sbb
inc
push
push
pushf
mov
aad
push
xchg
xchg
negl
stos
js
jg
popa
mov
xor
dec
xchg
pop
scas
mov
stc
mov
mov
sbb
sbb
das
xlat
inc
mov
arpl
leave
xchg
mov
inc
imul
les
pop
idivl
pop
inc
movsb
aaa
mov
sbb
inc
dec
cmp
mov
aad
fs
ja
dec
xchg
sub
ret
in
cltd
pop
fwait
dec
popf
and
out
sub
mov
add
inc
add
loope
cmp
dec
test
or
push
aad
xor
sub
adcl
or
loopne
aas
jbe
data16
adc
jecxz
fbld
sti
clc
lret
mov
inc
cwtl
shl
sbb
inc
inc
sub
fxch
outsb
imul
and
gs
xchg
fcom
adc
cs
jp
les
push
ret
cmc
outsb
ja
es
xchg
mov
pop
and
xchg
pop
out
fisttps
ja
adc
xchg
aad
enter
out
icebp
cmc
rcrl
xchg
je
add
cmp
and
cs
jns
cmp
iret
aas
xor
int3
and
add
jo
or
movl
inc
lcall
sbb
add
and
xchg
fnstsw
jo
scas
dec
sbb
mov
mov
mov
sub
das
xor
movsb
das
fnstsw
mov
push
or
mov
xlat
inc
jno
int3
loopne
scas
and
repz
iret
add
or
movsb
lret
call
rolb
mov
ss
jnp
outsl
cld
insl
jg
andb
mov
pop
fs
sub
fs
ljmp
repz
les
call
inc
sahf
cmc
mov
mov
jmp
pop
inc
shlb
cltd
xchg
xor
jl
pushf
aam
insb
inc
je
jbe
je
pop
mov
xor
and
jp
xchg
push
or
jb
into
xor
or
dec
jl
adc
ljmp
mov
xchg
sti
test
testb
ret
jne
and
outsl
call
scas
pop
movsb
repz
imul
out
sti
push
mov
xor
arpl
ficomps
out
mov
jne
shl
jno
push
mov
repz
lahf
adcl
adc
xchg
jnp
pop
mov
sahf
icebp
sbb
test
sti
idiv
mov
xchg
fs
fistl
pop
movsl
xor
jge
lods
dec
popf
mov
movsl
cld
mov
mov
inc
inc
hlt
insb
mov
das
or
inc
adc
or
jns
in
add
pop
mov
das
js
mov
movb
and
out
mov
roll
lods
push
cmp
push
popf
inc
lahf
xchg
mov
jp
cld
mov
lret
fldenv
in
lcall
into
push
dec
ret
stos
cmpsb
and
jp
and
je
js
cs
decb
xchg
dec
mov
cmp
mov
dec
imul
imul
push
insb
out
pop
dec
mov
and
xchg
pop
add
push
or
pop
shl
lret
push
rol
jo
shrl
xor
mov
and
xchg
stc
fs
and
xchg
popf
lea
mov
jmp
rcrb
xchg
icebp
fisubrs
xor
inc
or
testb
jg
add
cmp
sub
jge
pop
insb
push
bndstx
xor
ret
and
mov
scas
fdivp
xorl
push
mov
fbld
xor
xor
arpl
pop
and
cmp
push
mov
addr16
imul
jecxz
pop
and
arpl
sub
mov
push
cmpsb
enter
in
inc
je
mov
lret
lret
enter
jns
jno
xlat
clc
mov
hlt
or
jno
call
in
adc
xor
popa
push
pop
jns
xchg
mov
imul
sub
or
cmpsb
gs
inc
int3
enter
adc
sbb
pop
xchg
jae
je
mov
sub
adc
fs
dec
imul
int
jp
cmp
push
sub
and
cmc
adc
test
je
movsl
add
cmp
in
mov
shll
jo
fidivl
push
int3
les
and
jge
inc
imulb
pop
mov
insl
clc
mov
imul
rorb
and
jbe
adc
sbb
mov
cld
cmp
test
jp
xchg
repz
cs
xchg
sub
shlb
or
int
rclb
mov
out
jle
and
lahf
clc
sbbb
popf
push
xor
in
loope
pusha
scas
xchg
cmp
lret
mov
sbb
inc
sub
pop
cmp
cld
adc
sub
daa
mov
xor
jg
jl
push
popa
mov
bnd
scas
dec
add
sub
jle
popf
adc
test
fsubrl
or
push
sub
aas
stos
xor
pop
jb
push
jne
jae
lret
jno
jle
push
outsl
sbb
dec
jae
shlb
js
dec
add
mov
add
mov
shrb
adc
cmp
inc
int
and
mov
sub
cld
or
std
push
pop
je
push
and
clc
andl
testb
xchg
pop
lret
mov
into
pop
and
in
test
gs
hlt
cltd
add
repnz
lret
mov
mov
flds
lds
inc
loop
jge
or
gs
cmp
push
lret
sar
test
popf
pop
std
sbb
enter
es
dec
jo
scas
or
shlb
clc
and
sti
stc
jo
lds
xor
and
cmpsb
orb
gs
sbb
dec
stos
insl
popf
addr16
sbbb
es
inc
push
mov
fistl
mov
loopne
mov
mov
leave
pop
lock
pop
xor
push
sub
and
inc
lea
cmp
jp
ret
adcl
shll
jnp
jg
mov
xor
xor
loope
sub
dec
and
jne
adc
push
jmp
xchg
scas
mov
push
cmpsl
inc
xchg
fcoml
sub
xchg
ss
les
mov
inc
rclb
inc
push
xchg
dec
fs
cmp
xor
in
xchg
ret
loopne
pushf
jns
add
jge
push
lret
add
sbb
movsl
pop
int3
push
jg
sbb
add
imul
inc
xchg
int
dec
adc
iret
in
xchg
pushf
jne
push
jo
in
test
dec
pop
xor
jnp
stc
jg
fucom
sbbl
push
adc
jo
dec
mov
ret
mov
or
xchg
xlat
mov
addb
push
mov
dec
frstor
push
cwtl
repnz
mov
fucomi
jge
out
stc
push
jg
rclb
cmp
jne
dec
lret
outsb
push
bound
mov
sbb
push
or
fdivl
and
jns
cmp
cmpsl
pop
xchg
test
xchg
cmpsb
dec
or
mov
pushf
xorb
jno
int3
in
lock
dec
popf
test
imul
and
out
fnstsw
xchg
les
cmp
cwtl
pusha
out
lods
xor
xchg
ret
imul
mov
in
cld
fldt
in
fisubrs
push
inc
cs
jnp
lods
jb
rcl
add
mov
add
scas
cmpsl
adc
fdivp
inc
pop
sbb
mov
sub
in
and
sub
adc
dec
nop
ds
mov
js
add
add
sub
inc
or
or
mov
inc
cmp
add
je
jge
aaa
js
iret
jecxz
mov
nop
xchg
dec
pop
mov
push
add
cli
push
inc
inc
mov
and
push
sub
jo
pop
mov
push
test
stos
push
in
stos
lahf
inc
gs
push
xchg
ds
fucomp
movsb
ja
mov
out
push
push
pop
in
mov
imul
pop
out
push
rcrl
es
push
aas
pop
sbb
shll
js
mov
sar
leave
fmul
cmc
ds
push
call
test
mov
jl
mov
pop
std
sbb
ss
jns
ljmp
andb
sarl
xor
jge
movsb
xchg
xor
jecxz
addb
mov
stc
scas
xchg
iret
sub
popf
and
sub
and
fwait
test
cmp
inc
jns
lea
pop
rorb
into
xor
rcrl
dec
add
or
int3
cli
mov
pop
pop
pop
dec
add
push
sbbl
mov
xor
sti
fcmovb
jp
push
and
xor
push
add
popa
mov
jbe
push
fidivs
jge
mov
xchg
sbb
out
push
or
fnstcw
iret
scas
push
jno
jge
movsl
mov
imul
and
cwtl
dec
rcrb
mov
ret
or
add
leave
rorl
jbe
rorl
int
adc
mov
sub
sti
jmp
fsubrl
push
jns
repz
pop
aam
loopne
pop
mov
loop
jo
pop
shlb
lods
icebp
inc
mov
or
lock
adc
arpl
push
jmp
lds
in
inc
idivb
call
xchg
test
xchg
push
jne
les
ljmp
out
and
dec
xchg
mov
xor
xor
pop
sbb
in
jb
and
or
xchg
dec
inc
fistpl
int
in
xlat
jge
cmc
xlat
xor
mov
gs
mov
iret
iret
and
shrb
add
lock
rclb
jge
shrl
mov
jl
pop
push
ror
imul
lods
dec
sbb
sbb
mov
inc
pop
imul
mov
sbb
shll
lods
out
mov
rclb
sbb
das
movsl
mov
mov
imulb
sahf
cld
scas
lock
arpl
sbb
out
scas
cmpsl
jne
xchg
or
pop
in
add
mov
fwait
pop
jnp
adc
rcll
sbb
shlb
ljmp
jmp
loopne
xchg
clc
mov
outsl
cmp
imul
shlb
jbe
xchg
push
sub
scas
loope
fnstcw
mov
xor
xlat
mov
rorb
lds
adc
mov
add
sbbl
outsb
pop
ret
pop
mov
cmp
xchg
adc
sub
mov
lods
pop
xor
jb
aam
mov
ret
ret
fisubl
scas
mov
push
or
fstps
pushf
mov
add
fiaddl
pop
hlt
cmp
pop
or
fs
jle
push
cmp
push
aas
popa
imul
cmp
fiadds
adc
paddw
mov
sbb
repnz
addr16
inc
xchg
insb
dec
fidivs
xchg
fsts
pop
xor
push
mov
loopne
xorb
sub
inc
test
jl
in
add
stos
inc
lret
jmp
add
jmp
ja
stos
cmp
aas
out
leave
cmpl
arpl
inc
out
pop
and
ret
inc
fwait
lahf
adc
nop
je
xlat
xor
xorl
loop
and
rclb
cmp
xchg
leave
mov
es
add
jne
pop
lcall
pushf
orl
imul
daa
loope
inc
cmpl
mov
fwait
sbb
lods
push
shr
mov
sbb
sbb
cmc
test
orl
inc
lods
das
enter
cmp
data16
fnstcw
lds
pop
and
lret
call
and
out
jl
jb
pop
mov
movsb
adc
scas
fldt
fisubl
rcr
cmp
sarl
out
xor
push
sub
push
push
xor
pusha
push
test
ret
inc
dec
in
push
pusha
jecxz
popf
push
aas
jnp
mov
shll
or
dec
pop
mov
mov
xchg
inc
mov
es
mov
sbb
sub
pop
cmpsl
mov
test
add
stc
pusha
adc
inc
push
out
iret
mov
adc
inc
jnp
inc
repnz
fidivrl
fsubrl
test
into
out
inc
popf
jg
jmp
je
imul
jmp
xchg
cmp
mov
shrl
adc
cmp
cwtl
mov
pop
in
sub
inc
xchg
push
push
xchg
xchg
gs
pop
stos
adc
add
cmp
adc
dec
loopne
enter
xchg
adc
in
out
sbb
xor
out
movsl
adc
sbb
mov
or
sub
jne
loope
pop
dec
shlb
bound
mov
ret
call
jg
xor
jg
clc
inc
inc
inc
cmp
push
cmp
push
sbb
cmpsl
das
lea
enter
aam
jbe
rolb
mov
mov
mov
cmp
in
xor
in
ret
addr16
mov
hlt
inc
pusha
lret
aad
aam
iret
call
jmp
ds
xchg
imul
or
imul
dec
inc
add
cmp
mov
mov
fstpt
cs
jg
pop
aam
stos
scas
adc
xor
movsl
xorl
je
jmp
inc
mov
aas
and
add
jle
or
out
insb
cmpsb
xor
xor
mov
and
adc
lahf
jno
lahf
and
scas
enter
aas
jo
sahf
inc
xchg
pop
ljmp
push
in
or
gs
mov
push
xor
mov
cmc
movsl
repz
popa
mov
add
aam
fisttpll
xor
call
or
cli
aam
add
loope
adc
inc
aam
pop
xchg
shl
xchg
inc
ret
mov
data16
cwtl
sub
arpl
insl
shll
inc
mov
jmp
mov
jle
xchg
and
sarb
xor
push
jno
push
pop
flds
xor
sar
dec
aas
stc
int
in
test
sti
rcll
repnz
sub
dec
adc
nop
push
adc
and
xchg
lods
jge
jnp
cmp
int
jp
sbbb
xor
icebp
or
adc
leave
pop
addb
push
add
and
push
ret
test
dec
loope
lock
jo
push
mov
push
cmpsl
mov
mov
jp
pop
push
into
sahf
cmp
mov
into
fdivs
push
jg
and
or
daa
sub
cwtl
clc
sbb
ljmp
xor
mov
xor
es
into
inc
enter
fs
cmpl
pop
push
cmp
add
mov
fstl
adc
add
push
xchg
sub
scas
daa
mov
fisubl
fcoml
lods
sub
fs
push
sbb
adc
inc
idivb
sbb
mov
es
mov
dec
repnz
sbb
add
push
sub
sbb
or
sub
pop
gs
dec
rclb
xchg
or
nop
pop
mov
inc
lock
add
cmp
mov
jle
enter
out
jnp
enter
xor
lcall
lock
dec
and
rorb
mov
cmp
in
lret
jp
mov
jecxz
mov
and
lret
pop
lcall
leave
pop
adc
pusha
ror
daa
scas
xchg
cmpsb
shrb
lock
mov
imul
sarb
inc
push
addr16
leave
inc
push
mov
arpl
add
lea
mov
xor
jb
push
aad
jno
popf
shl
test
mov
or
pop
inc
out
push
xchg
repnz
shlb
or
jne
lret
in
dec
faddl
cmp
scas
gs
cmp
pop
into
sbb
inc
sbb
out
stos
lea
int
sbb
xor
mov
outsb
push
xchg
mov
inc
or
jnp
sub
loope
cmp
out
ficompl
adc
movsbl
call
icebp
filds
jne
decl
loope
mov
sbb
stc
dec
cmc
xor
lock
push
mov
movsl
int
imul
xchg
xchg
xchg
roll
and
push
rcll
xchg
pop
sahf
mov
les
addb
cmpsb
std
xorb
adc
mov
and
cmp
out
inc
in
loopne
nop
popf
adc
jmp
push
inc
shlb
xchg
popa
cmp
icebp
pop
cmpsl
mov
pop
cmp
aad
adc
lret
nop
push
test
pusha
int
pop
mov
orb
aaa
repnz
jnp
mov
fucomi
sub
inc
inc
aam
adc
jl
inc
mov
aad
clc
xor
aam
out
push
cmp
xlat
dec
daa
cmp
mov
push
add
sub
add
sub
inc
repz
insb
jp
sub
mov
sub
dec
mov
mov
imul
std
sahf
nop
mov
loopne
nop
popa
sub
popa
mov
mov
cltd
cli
fcomip
jo
mov
dec
mov
into
adc
mov
test
sub
lret
insb
enter
jne
test
jno
fwait
jg
xor
jne
sbb
orb
je
leave
or
sbb
out
and
js
inc
cli
mov
int
cmp
sbb
mov
inc
mov
mov
mov
pop
xchg
sub
push
sub
repnz
adc
sbb
and
dec
out
jo
test
leave
fisubs
test
lods
xchg
xchg
test
pop
inc
imul
loopne
or
stos
dec
push
jnp
or
mov
test
in
in
fwait
out
inc
push
aaa
fwait
aam
cs
mov
incl
sub
je
repz
loope
loopne
xchg
xchg
bound
or
popa
mov
mov
dec
rorl
mov
lret
jp
xor
xchg
xchg
add
pop
movsb
stos
sub
cmpsl
scas
icebp
or
bound
mov
inc
mov
js
push
cld
mov
jbe
out
std
adc
push
sbb
in
movsb
pop
aad
adc
cmp
jbe
mov
rcrl
and
mov
push
in
push
push
cmp
stos
test
ds
sub
popf
sbb
lahf
test
mov
jnp
movsl
push
ret
inc
rorb
add
adc
ds
out
inc
pop
cmp
dec
mov
inc
gs
sub
push
jl
test
fucom
repnz
mov
xor
mov
in
ret
add
sub
adc
sub
cwtl
sbb
lock
fistps
popa
lods
mov
out
insb
adc
xchg
dec
cmc
mov
dec
in
sbb
or
mov
mov
adc
pop
mov
mov
popw
add
jb
xor
xor
enter
loope
mov
mov
data16
lods
in
jno
sub
sub
out
inc
sub
add
popf
xor
cltd
lea
sub
xchg
and
mov
cmpb
mov
xchg
daa
aam
idiv
iret
xchg
push
insb
fld
xor
push
pop
lods
or
adc
faddl
insl
dec
stos
cwtl
aas
fwait
inc
int
scas
sbb
xchg
xchg
insl
adc
xchg
or
dec
loope
sar
movsl
movb
add
push
mov
inc
and
jl
mov
int
out
sbb
jmp
adc
sarb
inc
adc
fldt
sub
aaa
add
jno
pop
stos
sbb
mov
pop
stos
jecxz
arpl
mov
and
pop
cmpsl
popa
popa
rcrl
scas
xor
mov
pop
in
scas
mov
cmpsb
daa
daa
adc
push
shrb
ss
das
xor
mov
clc
mov
scas
repnz
inc
push
push
data16
sub
std
test
mov
jns
lcall
fists
inc
xor
fxch
or
frstor
std
mov
lds
or
es
test
xchg
jno
fstps
cmp
mov
xchg
push
rclb
sbb
andb
and
or
mov
xchg
mov
or
test
aaa
xor
into
jb
sbb
or
and
pop
movsb
bound
xor
lods
mov
jnp
adc
push
or
loop
add
clc
mov
adc
pop
and
in
add
fisttps
stos
stc
bswap
xor
les
test
addl
lods
ret
sub
pop
ja
push
cmp
dec
sbb
repz
and
mov
stos
out
test
fldt
jb
xchg
icebp
cmp
dec
icebp
xchg
mull
loope
push
pusha
push
hlt
insl
clc
flds
xor
orb
inc
mov
leave
mov
mov
in
cmpb
and
stos
xchg
cmpsl
xchg
cltd
cmp
pop
rorb
bound
sti
test
mov
cmpsb
ret
hlt
inc
add
jnp
lods
in
jb
mov
pusha
fimuls
sub
dec
adcl
pop
push
sub
cmp
jmp
adc
mov
jp
fs
out
out
repz
sbb
mov
cltd
arpl
int
sub
sub
jns
xlat
daa
gs
cmp
out
xchg
jmp
jno
cs
sti
lea
inc
mov
and
pop
iret
fisttpll
cmp
mov
dec
pop
ja
cs
mov
scas
insb
cltd
push
daa
cli
mov
mov
clc
mov
inc
arpl
aam
scas
inc
cmp
pop
into
inc
pop
jecxz
push
test
sbb
sub
fdivs
mov
inc
push
ss
fisttps
push
cltd
xchg
jg
test
sub
mov
jl
inc
lods
cmp
xchg
aam
arpl
pop
dec
mov
sbb
fsubl
fdivrl
lahf
and
cwtl
jne
jno
add
push
shl
pop
or
mov
inc
mov
movsb
and
sbb
sbb
cmp
or
xor
out
dec
jne
jmp
cs
stos
mov
sbb
sub
push
pop
mov
stc
popa
xchg
mov
sbb
cmp
xchg
mov
scas
jo
cmpb
pop
mov
cld
addl
int
test
lret
jecxz
or
pop
mov
adcl
sbb
enter
mov
popf
aam
pop
dec
lret
pcmpeqb
push
inc
and
xor
int
xor
sub
fdivrl
jbe
stos
jmp
out
in
push
and
mov
in
sti
push
sahf
mov
je
xchg
call
jp
repnz
or
xchg
sub
sub
fsub
popa
bound
mov
adc
adc
mov
xor
xchg
stos
sbb
jbe
xchg
pop
les
add
jns
push
aam
mov
rcrl
fs
xor
shll
out
bound
push
pop
bound
cmp
jl
stc
adc
jns
mov
sub
daa
out
cmp
dec
test
jnp
iret
in
outsb
dec
inc
in
xchg
jbe
push
sbb
lcall
fcmovbe
mov
adc
aaa
mov
test
idivl
jne
mov
outsl
sti
sbb
adcl
hlt
addr16
stc
xor
imul
inc
in
add
push
dec
lds
daa
push
out
xchg
inc
cli
insl
pop
or
xchg
inc
or
aas
or
sub
sbb
aad
mov
lret
mov
aam
icebp
cmpsb
mov
pop
sub
cmp
cmp
mov
xchg
cmp
lods
arpl
mov
dec
mov
jg
mov
mov
popf
hlt
out
dec
or
rorl
repnz
pop
xor
daa
and
mov
jg
sti
push
pushf
fcmovnu
cld
mov
xchg
in
sbb
or
shl
xchg
aas
shr
inc
mov
repz
shlb
dec
jns
sti
lahf
push
in
dec
mov
cmpsl
sub
std
mov
mov
mov
rolb
and
or
pop
or
pop
mov
fstps
das
pop
mov
inc
sub
or
call
mov
dec
pop
inc
push
add
in
lock
sahf
cmp
push
leave
fmull
add
fmuls
jo
fists
sub
icebp
pop
fucomi
je
insb
adc
mov
rolb
xchg
lret
jo
push
repnz
test
in
gs
pop
out
sarl
fucomp
or
mov
fwait
aam
xchg
pop
add
fwait
jo
cmp
stos
mov
mov
cmp
adc
adc
add
sub
iret
std
jo
mov
mull
mov
xorb
mov
adc
movsb
js
aam
or
or
test
subl
inc
fcoms
xor
mov
pushf
js
adc
dec
in
div
jg
stos
loopne,pt
adc
sbb
or
das
gs
dec
cli
std
jp
negb
subl
jmp
test
dec
xorl
orl
ret
mov
sub
outsb
pop
jl
mov
xchg
xchg
enter
sbb
pop
xchg
dec
dec
not
int3
test
arpl
fistps
add
push
cli
xchg
cmpsb
mov
test
and
sbb
jno
pop
lea
lock
cli
leave
and
adc
dec
or
shrb
mov
fcmovne
loope
clc
in
outsl
loopne
rol
sbb
mov
pushf
mov
pushf
dec
dec
mov
scas
ret
sbb
fcoms
ss
push
mov
fildl
repz
inc
repnz
fcomps
cmpsl
ret
fisubrs
mov
xchg
testb
mov
hlt
mov
mov
inc
push
nop
lock
pop
repnz
cmp
testl
dec
push
and
idiv
mov
xchg
idivl
or
enter
dec
and
icebp
fisubl
mov
xor
cmp
jg
out
pop
das
stc
fdivrl
in
dec
jns
or
or
sbb
test
add
add
aas
in
or
lret
int
cmc
or
jl
sbb
adc
adc
jecxz
mov
aad
cld
out
jns
ljmp
push
in
mov
push
inc
jmp
mov
pop
loope
inc
cmpsb
pop
xor
subb
mov
pusha
and
push
jnp
and
cmp
xchg
jl
iret
out
mov
pop
subb
push
es
xchg
popf
ds
shll
mov
push
adc
sbb
dec
scas
fstpt
xchg
pop
add
cli
mov
sbb
pop
xor
mov
fnsave
inc
jmp
arpl
pop
addb
inc
push
enter
into
or
frstor
cmp
cmp
fidivs
push
orl
out
jecxz
dec
mov
into
xorb
shl
sbb
nop
cmp
repz
int
xorb
sbb
inc
insl
rol
xor
lea
adc
imul
sahf
mov
jge
sbb
push
insb
fistpl
pop
and
mov
mov
addb
inc
dec
and
jo
push
cmp
sub
and
sbb
shl
push
rorb
mov
and
ret
xchg
cmp
sbb
ljmp
adc
xor
cwtl
imul
and
lret
bound
pop
jge
shrl
mov
xchg
arpl
push
sbbl
push
or
adc
int
seta
jb
out
inc
int
out
in
loope
adc
inc
scas
or
xor
or
leave
mov
imul
sbb
push
sar
push
outsb
scas
xchg
enter
inc
pop
push
repz
movsl
aaa
iret
sbb
imul
outsb
movsb
cli
stc
out
in
xchg
in
leave
mov
xchg
xchg
lock
insb
xor
daa
mov
je
imul
enter
and
and
insb
sbbb
in
sti
adc
imul
addr16
imul
jecxz
xor
stos
dec
pop
jle
adc
loop
xchg
and
sbb
into
loope
cmp
std
cmp
mov
std
push
ja
mov
aam
xor
jge
mov
cltd
cwtl
xor
xor
mov
inc
lahf
lcall
mov
dec
pop
out
rcr
xchg
and
lret
enter
mov
inc
loop
sarb
sbb
in
inc
aaa
sbb
jns
mov
xchg
ret
loope
cmp
adc
mov
ds
xchg
jnp
sbb
dec
fmull
jmp
mov
and
sbbb
js
scas
in
lea
inc
mov
jae
addb
xor
lcall
pop
cmp
sub
in
aad
hlt
aam
jns
and
jge
mov
loope
sub
and
or
or
scas
inc
ret
push
fnstsw
add
gs
xchg
outsl
sbb
inc
arpl
pushf
or
pop
adc
ja
xor
and
jl
mov
mov
sbbl
shl
sub
add
daa
rclb
jge
jmp
or
rolb
mov
popa
cld
or
popf
es
adc
push
cwtl
scas
mov
jge
fadds
ret
ret
xchg
std
xor
xor
ret
xor
inc
mov
mov
push
adc
inc
push
xchg
js
leave
sub
xchg
std
subb
test
les
push
add
ljmp
arpl
scas
pop
xor
jne
dec
movsl
daa
gs
mov
sub
xchg
stos
jbe
xchg
scas
push
push
add
mov
aaa
jnp
pop
movsb
fwait
xchg
pop
fisubl
mov
mov
push
sbb
sub
mov
xchg
and
sbb
aad
cltd
xchg
pop
pushf
sub
rcrb
push
sti
mov
stc
mov
ficoml
testb
repz
sub
sar
add
dec
leave
jge
insb
dec
mov
mov
into
jb
xchg
and
outsb
fs
loop
push
fsin
jo
lods
js
pop
add
arpl
push
aaa
mov
or
add
test
sbb
jne
rcll
fcmovu
stc
es
mov
stos
and
jl
cltd
push
lds
je
cltd
cltd
mov
push
nop
or
jl
xchg
mov
lret
jecxz
aam
movb
aad
push
sahf
ss
cmp
dec
sbb
data16
pusha
test
add
ljmp
push
jbe
pushf
jns
lret
jle
mov
sbb
adc
call
inc
inc
gs
pop
fists
jnp
out
sub
push
int
imul
sbb
adc
sahf
inc
mov
cwtl
add
popa
jp,pn
outsl
pop
insl
push
add
out
mov
or
jp
rcr
and
pop
mov
xchg
sbbb
push
cmp
out
dec
popa
test
adc
scas
cmpsb
out
mov
cld
push
xchg
xorb
mov
or
dec
popa
inc
and
cmpsl
mov
xchg
dec
sahf
loopne
lock
cmpsb
test
adc
jmp
pop
scas
mov
dec
add
xchg
fs
and
inc
push
inc
jl
add
mov
xor
sbb
cld
push
loopne
nop
dec
aas
dec
fld1
mov
loop
mov
das
jb
inc
inc
into
dec
test
aas
mov
xchg
xchg
leave
sub
push
sub
or
xor
lret
pop
ret
aad
lock
movsb
call
lods
jne
mov
sbb
in
sbb
jae
ret
or
enter
jno
movsb
test
dec
popaw
aam
and
and
fucomp
shrb
rcll
push
aad
mov
in
cmp
fs
sbb
pop
cwtl
jae
push
arpl
cs
imul
sub
into
jb
pop
mov
das
ret
xor
push
jae
mov
mov
sub
xor
and
daa
scas
fnsave
cwtl
es
testl
mov
js
icebp
movq
out
es
cmp
mov
xor
pop
xor
hlt
popa
out
fucomip
and
stc
pop
inc
inc
ja
divl
movsl
shrb
rcll
xor
shrl
mov
xchg
lods
and
jae
outsl
test
pop
push
pop
cmpsl
mov
xor
xor
add
jmp
ds
push
sub
test
mov
adc
push
cld
xchg
dec
adc
mov
push
lea
fisttps
fwait
push
inc
ret
xchg
cmp
enter
add
mov
imul
mov
and
scas
cmc
cmpsl
add
lds
fxam
outsb
test
pop
add
inc
ss
mov
mov
loopne
sbb
cli
sub
addl
xchg
sarl
pop
xor
fisubs
xor
int3
mov
mov
dec
sub
jo
cmpsl
mov
mov
pushf
insb
subl
lock
mov
sbbb
xchg
lret
sub
arpl
add
xor
popf
shrl
xor
lret
popa
dec
xor
aad
mov
push
dec
sub
add
mov
jecxz
cmp
xor
xchg
sarb
fs
js
pop
divl
push
in
jp
aam
fcomip
leave
and
das
test
jecxz
dec
ret
xchg
enter
sbb
and
shlb
stos
stos
jbe
decb
mov
stos
in
cmp
and
mov
cs
arpl
cmpsl
mov
fs
add
loop
js
int3
test
insb
jge
adc
xchg
jb
data16
je
cmp
mov
push
sbb
repnz
arpl
pop
cmpsl
cli
add
pop
es
shr
inc
aad
outsb
pop
imull
ja
icebp
mov
rclb
jp
push
mov
aam
adc
js,pn
loope
xchg
lret
inc
mov
imul
out
cmp
pushf
nop
cld
mov
shlb
outsb
idivb
or
jo
sbb
sbb
mov
mov
sub
outsb
sti
or
mov
jno
aad
test
frstor
iret
or
lret
insb
rclb
sub
cmc
mov
mov
inc
jno
mov
push
repz
fmul
rcr
outsl
jmp
sub
sub
hlt
mov
push
dec
in
cmp
and
push
daa
dec
ret
inc
divb
sbb
mov
push
xchg
testb
arpl
push
push
push
std
fdivrl
out
jl
push
repnz
sbb
aad
addl
inc
fimuls
scas
int3
sub
sti
mov
xor
jp
std
pusha
nop
pop
push
dec
and
mov
pop
lea
or
and
sbb
and
dec
loope
jae
into
sbb
call
pop
jb
outsl
mov
mov
inc
loope
fucomi
adc
addr16
sub
sub
mov
pop
mov
cmc
scas
and
push
mov
pop
fsubs
and
pop
dec
xlat
lret
stos
ds
mov
pusha
js
cmp
sub
je
sub
into
ror
int
mov
jge
cltd
fisubs
jne
adc
in
jb
and
add
pop
adc
pop
dec
hlt
repnz
sbb
cltd
jno
dec
mov
pop
dec
dec
les
or
cmp
mov
mov
ret
mov
sti
rcll
mov
mov
mov
mov
dec
js
jg
push
sub
xchg
xor
mov
jae
cmc
adc
fmul
leave
and
mov
sbb
cmpb
cltd
mov
icebp
hlt
xor
cmc
mov
add
aaa
adc
in
aam
mov
push
xor
xchg
pop
leave
popa
ja
fwait
repnz
fwait
clc
rcrl
mov
sbb
rcr
and
ss
pop
fstps
ret
inc
sbb
pop
add
rol
push
or
jcxz
sbb
shlb
out
addl
lods
hlt
xorb
and
mov
int3
mov
es
xchg
mov
pop
and
sarl
jno
sub
or
fistpll
inc
repz
loope
cmp
stos
fisubrs
dec
mov
mov
add
enter
pushl
xor
and
dec
xadd
and
int
outsb
xor
lock
ror
push
mov
xor
addr16
pop
mov
dec
jmp
fdivrl
fistl
push
repnz
clc
cmp
cmc
sbb
test
xchg
mov
xchg
jp
xchg
xlat
in
mov
into
push
test
leave
mov
mov
push
or
ret
adc
ficoml
nop
or
aam
jnp
cmp
cmp
fs
sbb
adc
push
xchg
xor
loopne
sti
cltd
push
jnp
inc
push
nop
jle
ss
pop
jno
loope
sbb
lock
jmp
lock
mov
push
sbbl
hlt
pop
gs
scas
add
mov
adc
jmp
rcr
repnz
into
in
xor
cmp
or
jo
aaa
pop
cld
mov
push
dec
xor
insb
in
dec
loope
adc
adc
pop
xor
int3
cmp
cmp
scas
pop
ret
mov
lods
arpl
fistpll
adc
add
push
pop
xchg
ss
mov
pop
mov
jle
push
scas
xor
jl
jle
insl
and
jbe
adc
ret
sti
pop
dec
inc
push
mov
adc
sahf
and
lods
dec
jmp
mov
mov
bound
xor
inc
jns
or
ret
xor
mov
or
dec
pop
fwait
xchg
aad
test
data16
sbb
dec
cmp
rclb
pop
notl
roll
es
fwait
cmpsb
scas
faddl
fstl
jo
test
enter
fcmove
mov
mov
mov
dec
dec
test
movsl
arpl
and
mov
call
out
aad
mov
jg
pushw
shl
pop
popa
jge
in
cmp
lock
xor
shlb
xchg
rol
mov
test
jae
sbb
rcr
fildl
out
fists
iret
xor
mov
adc
testb
and
sbb
xchg
sbb
hlt
mov
sbb
popf
in
mov
push
ror
add
enter
sub
push
aad
sub
jmp
shr
xchg
call
popf
in
out
xor
cwtl
nop
xor
daa
xchg
iret
pop
push
lcall
loopne
mov
mov
sbb
push
lds
push
das
inc
aad
out
test
addb
dec
aas
mov
in
mov
inc
test
addl
jmp
sahf
decl
imul
adc
dec
add
xchg
or
push
mov
je
jge
adcb
pop
imul
out
adc
jmp
xchg
in
das
lea
pop
jl
test
fwait
scas
inc
test
fucomi
bnd
mov
mov
mov
sbb
mov
dec
push
push
scas
dec
push
jg
in
and
pop
mov
and
cmc
scas
push
ret
or
sbb
push
lods
add
subl
dec
out
mov
pop
shrb
adc
or
stos
cmpsb
adc
add
rorb
sbb
lock
xchg
mov
pop
mov
add
mov
aad
jo
sub
js
mov
arpl
jae
cld
leave
pusha
insl
scas
int
pop
clc
aad
xchg
js
dec
xchg
inc
popf
mov
mov
jge
push
jne
adc
mov
pushf
dec
mov
xchg
mov
xorl
sub
mov
pusha
push
fists
ss
or
insb
xor
xchg
sahf
andb
push
outsl
cli
inc
loop
dec
je
popf
push
jl
push
mov
stc
iret
fldl
out
fs
aaa
mov
cmpsb
xor
imul
roll
mov
mov
adc
xchg
jo
pop
sbb
sub
in
or
adc
cli
pop
inc
adc
dec
outsl
adc
lods
and
inc
pop
mov
pop
aam
popf
gs
adc
jecxz
xor
sub
aaa
and
testl
adc
gs
fadds
jmp
mov
jge
add
jno
dec
jl
jmp
sub
push
adc
pop
adc
adc
aas
inc
or
in
pusha
or
scas
addb
pop
jle
jbe
jmp
cmpsl
sbb
jp
inc
movb
push
mov
pusha
and
jb
rorb
ror
je
leave
sub
add
lock
mov
rcrb
div
push
dec
fisttps
add
and
xchg
add
dec
mov
sbb
fdivl
dec
mov
aam
add
mov
cli
xchg
movsl
int
cmpl
pop
sbb
lcall
jne
add
mov
push
test
stos
mov
dec
mov
lock
adc
cmp
inc
cmpl
cld
lock
lcall
cld
dec
mov
iret
jl
in
mov
call
pop
repnz
test
cmp
inc
cmp
xchg
mov
xor
sub
fwait
shll
call
daa
jl
fcoms
mov
pop
fsubr
outsb
paddusw
jg
insb
stos
sbb
mov
scas
insb
jo
fsubrp
sbb
mov
test
data16
inc
mov
out
pop
jno
inc
mov
out
push
sbb
mov
pop
dec
fidivl
sbb
dec
nop
pushf
mov
inc
mov
or
or
jno
push
jmp
or
ja
out
mov
aaa
fisubl
movsb
mov
push
fucomip
je
cmp
cld
mov
aaa
or
xor
rcrl
mov
gs
push
and
loopne
xlat
lahf
movsl
daa
xor
mov
mov
mov
insl
cmp
adc
sub
add
jg
les
fdiv
pop
cmp
fistl
aam
insb
cs
pop
cs
adc
lahf
lret
orl
inc
sahf
sahf
hlt
jno
mov
push
aas
jge
mov
leave
dec
sbb
mov
xlat
cmp
xorl
mov
lret
test
cltd
clc
dec
inc
sbb
jmp
int
and
ds
pushf
lods
pop
int3
mov
mov
lods
pop
clc
xchg
adc
cli
cmpl
pop
insl
adc
popa
add
data16
cmpsb
data16
pop
xchg
xchg
nop
mov
mov
sahf
outsl
mov
push
sbb
ss
dec
rolb
jae
lea
cmpsb
arpl
lods
jge
or
xchg
sbb
sbb
shlb
andb
fdiv
push
mov
sbb
pop
mov
fdivrs
imul
ljmp
dec
sti
mov
in
mov
push
xchg
sub
sbb
jnp
dec
cmp
in
sbb
mov
mov
ret
insb
test
cltd
pushf
xchg
push
push
jecxz
and
jge
jbe
jecxz
push
xor
in
pusha
in
push
icebp
aam
xlat
lahf
xchg
mov
fists
enter
xor
pop
cs
test
push
add
lahf
cmc
mov
dec
and
leave
mov
std
cmp
jge
addr16
xor
cwtl
mov
ror
iret
or
out
testb
jp
cmp
cmpsb
hlt
inc
fisttpl
pop
xchg
popa
call
test
sbb
inc
mov
paddw
xchg
mov
pushf
push
and
push
js
in
cmc
mov
sahf
or
xchg
daa
in
jb
lret
cs
sub
subl
pop
ret
mov
push
cmp
or
adc
dec
or
adc
dec
ror
jl
mov
inc
cli
xchg
subb
cwtl
xor
jb
mov
mov
cmpsl
dec
pop
hlt
in
xchg
push
popa
rcrl
push
xor
mov
and
das
or
idivb
lret
arpl
mov
push
jns
jl
jle
xor
lcall
ss
movsl
stos
or
adc
adc
push
add
je
mov
lods
mov
jbe
xor
lods
pop
addr16
into
fwait
sbb
outsb
loopne
xor
adc
pop
repnz
shlb
enter
and
pushf
popa
das
enter
stos
lods
xchg
ljmp
fdivr
stos
int3
mov
dec
setnp
out
inc
sti
bound
sbb
mov
adc
push
test
sbb
cld
arpl
in
mov
xchg
mov
out
sbb
ret
loopne
clc
out
mov
add
lods
and
pop
fsts
mov
or
fwait
ss
inc
mov
lcall
mov
add
push
out
hlt
jmp
sub
sbb
mov
cwtd
lahf
dec
mov
push
adc
cmp
test
mov
add
shrl
mov
cmp
in
test
movsb
sbb
or
roll
jg
daa
adc
ljmp
push
or
rcrb
sbb
repnz
sub
scas
push
in
cmpsb
call
mov
ljmp
xchg
dec
inc
xchg
cmp
insb
es
cltd
insl
shll
loope
mov
mov
mov
imul
movsb
jo
nop
repnz
jp
mov
xchg
sahf
popa
pop
adc
push
xchg
mov
loop
out
inc
test
ret
pop
adc
loop
xchg
arpl
mov
jp
aam
vunpckhpd
inc
test
rcrb
loopne
les
inc
in
and
pop
fdivr
mov
movsl
adc
mov
repz
lret
scas
push
xchg
cli
jle
cmc
and
cmpl
out
lea
pusha
xor
enter
aas
xchg
stos
insb
mov
cmp
or
mov
jnp
inc
pop
sbb
pushf
or
mov
jp
bound
mov
shlb
scas
push
sbb
add
in
cmp
enter
lods
fwait
lahf
cmp
mov
fnstcw
in
fdivrl
clc
and
push
xor
push
stc
inc
and
loope
push
aam
ret
fldenv
into
jae
mov
adc
adc
xchg
test
out
lret
and
dec
sahf
sahf
mov
xchg
add
cmpsl
cli
les
insb
cmp
lods
fnstsw
push
push
cmpsl
rorb
inc
xor
inc
or
subl
aaa
adcl
sbb
mov
mov
stos
pusha
sub
mov
lahf
jecxz
pop
or
out
or
mov
sbb
mov
sub
mov
xor
loop
adc
jae
loope
adc
rol
inc
mov
fcmovnbe
adc
int3
inc
dec
xchg
dec
lock
push
pop
lcall
sbb
cmp
xchg
aaa
sbb
sti
cmp
test
pop
dec
sub
inc
pop
sub
frstor
pop
push
dec
ja
mov
ds
or
std
sti
scas
sti
xor
cmp
xorl
jge
and
test
sub
bound
bound
pop
adc
cmp
stos
rcr
cmp
cmpb
pop
shll
mov
mov
pop
mov
fsubl
mov
push
jg
mov
xchg
outsl
pop
mov
call
pop
adc
mov
sbb
insb
xchg
shll
in
cwtl
mov
jns
cmp
bound
call
roll
and
add
mov
fistpll
sub
mov
int3
or
push
cld
jns
std
jl
jbe
scas
mov
jae
xor
sub
in
std
mov
iret
rorb
flds
xchg
mov
andb
outsl
add
inc
dec
popf
cli
jb
shrl
test
sbb
pop
daa
in
lea
push
and
push
sbb
movsl
fyl2xp1
mov
mov
add
cmp
pop
mov
and
es
mov
dec
enter
stos
push
and
or
jmp
sub
fwait
test
mov
inc
dec
insl
lahf
mov
cmc
hlt
aas
push
cmp
mov
dec
fisubl
shlb
pop
mov
mov
jo
dec
cmp
xor
sub
sbb
sbb
cmpsb
jecxz
cmp
add
rclb
out
dec
pop
popf
int3
and
jg
mov
push
aad
sbb
loopne
movsb
jl
mov
cmp
adc
lahf
addr16
pushf
cmp
mov
jg
lock
adc
sahf
std
sub
out
stc
int3
xchg
rorl
xor
pop
mov
mov
int
jecxz
shrl
std
fcomip
lret
dec
mov
xchg
mov
dec
xor
insb
push
or
mov
mov
mov
mov
inc
ficomps
dec
cmpsb
xor
and
fisttps
sti
xchg
sub
icebp
out
pushl
push
xor
xchg
pop
sbbl
lcall
in
mov
call
insb
leave
ss
fidivrs
adc
jp
in
fists
pop
lea
xchg
arpl
xor
or
std
xchg
test
fptan
out
push
jo
lret
jmp
cmp
xchg
cmpsl
xchg
idivb
cltd
int3
icebp
scas
xlat
fbstp
movsl
push
add
bound
enter
inc
or
jbe
and
repz
dec
lea
testb
adc
js
iret
incl
out
jmp
push
inc
mov
cltd
xchg
sub
sbb
iret
inc
push
push
mov
xchg
movsb
and
mov
dec
hlt
jae
repnz
or
arpl
mov
js
loopne,pn
push
lods
sti
or
cmp
push
jae
xchg
cmpsb
popf
push
imul
sbb
repz
bound
ljmp
pop
mov
lea
in
int3
jbe
cwtl
jmp
rol
pop
push
jg
inc
cmpsl
insl
outsb
sub
fisubrs
or
in
push
add
je
inc
das
push
arpl
sbb
sar
inc
adc
sbb
sbbb
xchg
clc
clc
daa
mov
gs
xchg
mov
add
incb
js
iret
imul
cmp
dec
add
mov
pop
lcall
xchg
sarb
mov
adc
sub
sbb
addr16
mov
scas
test
gs
repnz
insb
aas
dec
ret
mov
daa
jne
movsb
inc
aas
lods
sub
dec
jno
xchg
xchg
jnp
jb
adc
and
subb
sbb
and
ds
lret
stos
inc
mov
movsb
jge
cwtl
sbb
push
sub
xchg
adc
pushf
or
std
cmp
test
lret
inc
insl
cmp
or
add
adc
lds
rcl
cs
dec
cmpsl
push
scas
movsl
pop
xchg
jb
mov
or
cmp
nop
adc
roll
sbb
dec
mov
cmpsb
icebp
push
sbb
mov
adc
push
sbb
jno
lods
loop
cwtl
adcl
jnp
negb
add
mov
cmp
adc
idivl
aas
outsb
adc
jnp
in
aad
and
sbb
xchg
xor
jns
push
adc
fsubrl
push
and
mov
adc
and
pop
cltd
jns
gs
cmp
bound
inc
pop
shlb
adc
mov
mov
decl
jge
dec
test
xchg
and
testl
and
lea
notl
inc
lods
or
cvtdq2ps
mov
push
push
pop
add
xlat
ss
cli
mov
shrb
loope
sub
inc
stc
push
push
jne
dec
jnp
adc
sbb
inc
push
push
das
cli
add
pusha
movsb
shrl
in
nop
xorb
and
pop
sbb
rcll
xchg
aaa
sbb
cmp
jae
push
std
out
addb
daa
das
cmp
les
pushf
jae
push
out
fs
mov
push
mov
in
jmp
rep
inc
jl
inc
sbb
add
leave
sbb
jp
in
xlat
lds
pop
fdivs
pop
jl
addr16
pop
repz
out
push
mov
or
stc
mov
ss
movl
ret
xchg
xchg
mov
sub
sub
sub
fcoms
shl
data16
xor
repnz
cld
add
stc
inc
sub
or
and
dec
pusha
and
sbb
cmp
mov
outsb
rorl
cltd
adc
xchg
pop
insb
push
in
cmp
insl
xchg
add
dec
jp
add
adc
cmp
loope
lea
and
lahf
out
shll
add
push
out
je
movsl
adc
popf
enter
sti
jnp
in
xor
js
imul
faddl
dec
xchg
imul
cmp
sub
hlt
dec
les
iret
pop
ja
push
push
and
jae
aaa
popf
data16
xor
mov
jecxz
fisttpl
jns
mov
mov
fstpt
jp
xor
add
xchg
jg
adc
cmp
sahf
lds
bound
std
cmp
lods
jle
inc
es
push
push
arpl
test
xor
fldenv
rcrl
cwtl
int3
jno
xchg
mov
outsb
xchg
sti
jmp
mov
dec
pop
or
cmpsb
or
add
mov
dec
ljmp
push
stc
ljmp
and
xchg
in
out
pop
and
fisubs
jg
test
sbb
jmp
hlt
push
pop
or
push
mov
pop
cmp
dec
jae
aam
cmp
mov
mov
inc
lods
mov
cmpsb
cltd
or
scas
dec
lret
cmpsl
cmp
mov
fiaddl
and
inc
inc
imul
cwtl
test
jbe
aaa
dec
and
mov
shlb
mov
xchg
fcmovbe
mov
mov
loopne
xor
and
sub
jl
inc
in
out
push
insb
xchg
sub
loopne
pop
loope
cmp
jns
pop
bswap
idivb
pusha
cmpsl
and
test
sub
repnz
mov
adc
add
xor
clc
and
pop
iret
test
pop
sbb
or
call
mov
xor
sbb
jae
lods
dec
imul
js
add
mov
mov
mov
mov
add
sbb
xor
rorb
jmp
shl
dec
ja
pop
into
aad
xchg
push
mov
bound
jo
jg
inc
push
aas
sbb
mov
dec
shrb
dec
ret
xor
push
scas
sub
mov
sbb
sbb
push
js
pop
daa
xchg
cmp
insl
out
inc
pop
cmp
cli
jo
pop
test
push
xchg
ds
sbb
or
jle
cmp
cmp
xchg
aaa
mov
mov
and
add
inc
cmp
cmp
push
xor
mov
mov
push
out
mov
dec
sbb
adc
hlt
or
mov
xorb
movsl
sbb
movsl
fwait
or
sbb
ds
sbb
popa
enter
xchg
or
push
lahf
pop
stos
popf
hlt
lea
dec
sub
pop
or
push
inc
fwait
stos
es
adc
pop
xor
mov
mov
cmp
dec
imul
sbb
scas
adc
jbe
ja
mov
cli
cmp
aam
mov
aam
xchg
clc
ja
bound
stos
fsin
add
inc
incb
sub
mov
sub
dec
fwait
cli
imul
inc
xchg
fidivrs
or
fmull
xlat
xchg
dec
jmp
mov
stc
xchg
js
mov
lret
mov
test
add
stos
xchg
iret
rorl
fs
adc
cmp
push
pushf
jmp
lods
sub
sub
and
xlat
in
adc
xor
push
out
std
rcrl
sahf
xor
or
xor
cmp
jmp
jle
test
scas
popa
sti
mov
push
mov
lret
cmp
ret
subl
out
jne
mov
nop
insl
add
jae
fistpl
cmpsb
imul
inc
repz
ljmp
pop
lods
divl
pushf
mov
es
jae
subb
jb
dec
shrb
xorb
leave
rcr
jbe
imul
dec
mov
sahf
xchg
cli
mov
js
mov
mov
not
jns
loop
push
rcrl
inc
cmp
jp
mov
jle
xor
dec
adc
stc
cmc
addr16
sbbl
mov
push
jle
loop
movsb
xor
dec
mov
pusha
pop
dec
cmpb
ljmp
adc
pop
sbb
add
mov
ss
fbld
test
std
push
xchg
dec
fs
jg
ds
imul
es
jle
mov
out
out
cmp
cld
jb
cs
outsb
or
xorl
test
out
hlt
sbb
inc
mov
rorb
jmp
and
dec
adc
cmp
mov
inc
xchg
pop
pop
sbb
push
les
jl
aas
mov
inc
call
outsb
and
mov
xchg
mov
mov
hlt
fildll
adc
xchg
xor
push
repnz
push
xchg
mov
scas
inc
sbbl
and
inc
addr16
out
notb
mov
cmpsl
inc
mov
mov
pop
pop
cmpsl
inc
mov
enter
stc
jl
adc
lahf
dec
repz
pop
out
lock
lds
insl
dec
mov
lods
int
inc
sbb
fidivs
cs
mov
inc
bound
mov
loop
add
cltd
outsb
fs
jecxz
sub
dec
nop
cmc
leave
jbe
or
cmc
or
sbb
icebp
mov
xchg
pop
jb
sbb
stos
xchg
pop
stos
pop
jb
fisubrs
jbe
fsts
pop
mov
test
icebp
addb
popa
repnz
insl
sbb
and
shrd
outsl
and
dec
shlb
sub
fsubp
shll
inc
mov
mov
mov
test
add
mov
in
dec
fwait
leave
mov
mov
add
mov
dec
popa
jge
and
mov
mov
sahf
mov
pop
jmp
adc
lcall
mov
in
or
jbe
int
adc
inc
pop
rcll
imul
mov
xor
repnz
jae
sbb
orb
loop
adc
arpl
mov
push
imul
popf
cld
lods
pop
dec
dec
cltd
jg
das
les
adc
dec
dec
insl
movsb
mov
or
div
push
mov
push
out
cli
lret
cmpsl
xor
outsb
daa
xchg
int
int3
cs
stos
mov
fbstp
sbb
jmp
or
and
test
sbb
fwait
push
lcall
bound
ss
out
and
in
into
punpcklwd
mov
movsl
pop
and
decl
daa
out
loopne
movsl
adc
cmc
adc
fisubrs
fwait
cmp
add
out
jmp
pop
xchg
cmp
push
and
movsl
je
repz
in
pop
cltd
jb
xor
pop
mov
lret
shll
cld
sub
sbb
fmuls
mov
lahf
cmp
xchg
mov
in
cmp
mov
mov
cmc
mov
push
mov
ror
std
or
xchg
adc
movsb
pop
or
and
mov
repz
sub
lcall
fcomps
jle
ret
jmp
aad
xor
fxch
inc
xlat
cmpsb
loope
jo
sub
bnd
in
and
adc
and
sub
cld
inc
push
in
cltd
pop
lods
adc
add
out
ret
stos
daa
xor
jne
fwait
test
jp
sub
shlb
mov
popa
popa
cmp
add
pop
xor
repz
jl
add
jecxz
aam
mov
add
movsl
xchg
out
lret
push
icebp
in
shll
jp
dec
cmpsl
shlb
push
sub
xchg
dec
add
arpl
push
sbb
xorl
xchg
pop
lods
shlb
push
inc
sti
xor
mov
cmp
pushf
imul
lock
jne
pop
mov
sarl
xor
mov
ja
dec
jnp
cmp
xlat
xchg
mov
sahf
repnz
jbe
imul
sub
sbb
adc
mov
xchg
dec
fs
or
xor
and
in
inc
iret
cmp
sub
jb
inc
pop
dec
cmp
stc
sub
mov
roll
lods
mov
mov
stc
mov
dec
enter
in
mov
loope,pt
test
mov
je
js
in
inc
jp
mov
subb
daa
shl
and
adc
xchg
ret
dec
sub
jg
ja
je
lods
frstor
pop
xchg
ret
out
push
push
and
fstps
cmp
lock
out
cld
loope
jecxz
jmp
adcb
sti
mov
sti
iret
add
mov
stos
mov
mov
sbb
daa
adc
fnstenv
into
adc
into
aaa
push
add
call
test
das
mov
imul
cli
fdivs
xor
cwtl
cmp
fidivs
adc
and
imul
xor
lahf
mov
jecxz
cwtl
jge
jns
imul
xchg
loope
jmp
xchg
add
pusha
push
fsubrl
jae
arpl
div
insl
jecxz
xchg
or
or
pop
leave
repnz
test
push
inc
cli
lea
daa
shll
fistpll
add
mov
loope
testl
movsb
test
dec
fiaddl
mov
imul
dec
sub
sbb
jno
dec
dec
out
pop
addr16
subl
lods
xchg
mov
ret
xchg
test
mov
cs
or
es
insl
fmulp
ljmp
ret
int
pop
movsl
fistpl
push
mov
pop
cmc
or
adc
cmp
loop
xchg
add
dec
and
stos
or
mov
mov
imul
fldt
icebp
fildl
dec
cli
push
movsb
or
cwtl
fidivrl
insb
movsb
jne
andb
dec
push
push
jl
dec
lods
stos
mov
or
ds
and
xorb
dec
out
push
lock
repnz
ss
and
insb
mov
push
leave
or
mov
adc
and
jp
filds
es
in
push
nop
inc
pusha
sbb
nop
call
test
icebp
in
adc
addr16
mov
js
mov
popa
js
or
add
out
loop
xchg
hlt
push
jg
sbb
cmp
popa
pop
mov
in
rcr
ja
sub
push
adc
mov
xchg
push
outsb
pop
adc
mov
es
imul
jmp
adc
cld
clc
dec
mov
inc
or
imul
rorl
jbe
inc
stos
and
xchg
dec
andl
out
inc
aas
pop
push
jge
aam
movsb
ljmp
and
dec
mov
insl
dec
cmpsb
cmc
push
xchg
lret
scas
ss
fdivl
into
inc
cmp
jmp
pop
mov
inc
mov
lret
xor
and
sub
stos
pop
std
cltd
cmpsb
mov
add
pop
xchg
sub
rorb
jp
mov
stc
das
inc
push
lea
daa
ljmp
into
jno
add
cmpsb
mov
dec
sbb
das
fucomi
dec
cmp
loope
xor
jmp
inc
pop
int3
jno
aaa
xchg
clc
xchg
add
mov
shlb
loopne
cltd
fiaddl
dec
repnz
lock
push
jns
jmp
in
dec
or
adc
sbb
int3
insl
dec
test
xor
pop
rcrl
lds
pop
imul
jle
dec
test
or
jno
cmc
and
lds
mov
enter
lahf
xchg
mov
cmp
jae
nop
or
inc
pop
mov
jae
sub
stos
xchg
cmpsl
or
imull
lea
ficomps
clc
dec
sbb
pop
or
mov
jno
sub
mov
dec
add
add
inc
pop
mov
data16
popf
add
loop
aaa
aad
cmpsl
mov
lahf
or
les
gs
inc
insb
xor
lock
xor
push
xchg
or
fsub
jg
push
xor
pushf
jb
jbe
addr16
cld
test
es
pop
icebp
jmp
imul
mov
sub
cmp
and
icebp
popa
idivb
fisttps
xorb
xchg
aaa
sub
mov
push
push
mov
and
mov
shl
hlt
repnz
xchg
mov
push
loop
sbb
sub
jo
fisubrl
xchg
dec
sbb
inc
das
jne
push
mov
xchg
mov
clc
aas
dec
xor
outsb
adc
or
icebp
dec
scas
fcoms
into
mov
dec
jae
xchg
mov
add
cmp
sarl
pop
pushf
popf
fisttpll
mov
mov
mov
dec
inc
js
jno
iret
data16
std
hlt
pop
repz
in
xor
sbb
mov
jge,pn
test
lret
mov
jmp
pop
adc
push
stos
sub
cmp
lcall
jge
sub
or
inc
add
popf
sbbb
jecxz
jle
dec
lds
rcrl
sbb
mov
fcomi
mov
mov
into
cwtl
insl
and
pop
cmp
xor
shlb
test
add
int3
in
adc
jb
dec
or
mov
shrd
fistl
gs
xchg
pop
pop
add
sti
mov
pop
jg
cmp
jnp
xor
xchg
cwtl
idivb
enter
cmpsl
movsb
outsl
fildll
or
push
out
jo
jnp
mov
int3
popf
data16
push
aad
cmp
nop
add
push
sub
mov
sub
sbb
fwait
jle
push
and
and
mov
push
inc
aaa
inc
fdivrs
sub
fstps
aad
lea
clc
dec
push
in
mov
lahf
fs
outsl
imul
fs
sub
ds
push
cmpsl
xchg
push
pop
stos
enter
jle
addb
imul
or
addr16
inc
jge
unpcklps
and
lret
sub
adc
shll
sub
aaa
and
addl
popf
push
test
cltd
insb
fldenv
mov
lea
or
xlat
sub
xchg
out
fldcw
mov
sub
and
test
shr
insl
shll
dec
ja
cmc
cmpsl
xor
test
outsb
dec
adc
xchg
bound
dec
insl
ret
testb
cld
inc
aas
xchg
mov
mov
push
into
cmp
fistpl
push
test
aam
mov
stos
adc
adc
clc
add
popf
outsl
movsl
lds
and
sbb
sahf
gs
inc
push
into
bound
popf
les
inc
in
jmp
xor
jnp
and
mov
xor
mov
loop
xchg
mov
arpl
stc
inc
ss
ljmp
fadds
outsb
pop
into
pop
xchg
adc
pop
cs
xchg
dec
mov
mov
pop
cmpl
lds
jg
insb
jmp
leave
jmp
repz
mov
scas
push
pop
repz
xchg
xchg
ror
movl
push
push
and
pop
data16
cmpl
jmp
in
mov
or
and
jno
mov
mov
xchg
mov
jg
rcrl
fisubl
adc
add
shlb
mov
mov
call
call
lock
mov
sub
adc
mov
cmp
mov
or
pop
inc
push
inc
mov
pop
test
xor
int3
in
mov
push
sbb
dec
inc
sbb
test
jno
adc
dec
mov
aaa
fsubrs
fdiv
test
dec
cmp
cmpl
dec
push
pop
imul
lock
dec
lret
daa
icebp
mov
pop
and
mov
mov
call
and
stc
jo
push
xor
addr16
sahf
mov
or
or
das
inc
iret
int3
adc
es
pop
ljmp
pop
adc
or
xor
rcrl
paddsw
fdivr
and
std
fmuls
jns
pushf
push
and
imul
sarb
xchg
mov
movsb
les
ret
and
or
fimuls
je
jne
push
add
sarw
arpl
pop
shl
icebp
jb
sahf
dec
pop
filds
or
nop
adc
mov
push
loope
push
jns
ds
sbb
movsb
mov
lahf
push
mov
test
cmp
sbb
pop
jns
vmwrite
sbbb
enter
mov
add
adc
xor
sbb
out
gs
mov
rcrb
and
sub
sbb
cwtl
data16
adc
dec
mov
push
and
pop
cmpsl
loopne
repz
push
xor
sbb
pop
cmp
bound
iret
sti
mov
aam
mov
cli
cmp
jle
pusha
scas
inc
sbb
mov
push
adc
add
push
push
sub
jge
xor
aam
fdivrs
xchg
lret
adc
hlt
push
sub
xor
mov
push
pusha
aam
push
adc
ret
insl
repz
lcall
sahf
cli
fwait
div
shrl
add
mov
sbb
imul
cmpsb
in
xor
sub
test
fisubs
cmp
cmp
ficompl
or
les
pusha
and
jecxz
adc
adc
std
fsub
add
inc
lock
and
push
lahf
pop
in
inc
popa
push
vpcmpgtq
stc
pop
scas
and
sub
xchg
xor
fwait
notl
jnp
scas
out
seto
push
cld
inc
subl
pop
jae
fsts
sub
in
push
insb
lret
das
jae
into
xor
out
insb
subb
outsb
clc
test
mov
jb
daa
pop
push
adcb
std
add
push
or
jne
aad
sbbl
nop
ret
cwtl
xlat
cmp
inc
mov
xor
inc
aam
mov
cwtl
and
stc
mov
pop
fdivp
rcl
jl
or
pop
les
loopne
and
js
mov
iret
insl
enter
xchg
push
jmp
mov
lock
inc
jle
lock
sbb
sub
add
push
or
cmpsl
jge
mov
lock
ds
cmpl
jb
add
cltd
pusha
mov
pop
sub
xchg
in
push
out
ret
inc
cli
xorb
mov
xchg
popf
push
mov
jne
push
push
cltd
pop
fstl
add
sbb
jne
and
subb
xor
dec
sub
fildll
mov
jp
and
sub
scas
lock
jge
out
pop
mulb
pop
add
daa
lea
mov
jle
dec
mov
test
lret
js
or
call
add
add
lods
sahf
cmpsl
xor
ret
or
pop
or
roll
insb
leave
or
les
test
adc
push
sub
aad
push
xchg
mov
or
or
stos
scas
in
sbb
adc
rorb
pop
mov
lds
ds
add
sub
jns
sbbl
scas
cmp
pop
dec
std
lret
jmp
fwait
repz
or
icebp
or
xchg
jnp
je
sub
xor
mov
xchg
mov
xor
loope
rorb
or
inc
mov
adc
xchg
mov
dec
loopne
lock
aad
xor
scas
nop
cmp
rcll
dec
cmp
xor
cld
jecxz
icebp
ret
sbb
fmuls
jnp
sti
pop
xchg
cmp
mov
jne
jo
vsqrtpd
mov
out
mov
insl
enter
sbb
xchg
mov
shll
inc
mov
push
inc
jbe
unpckhps
into
es
clc
jbe
mov
adc
inc
cld
sbb
push
out
mov
hlt
jle
orl
and
jno
out
dec
into
shlb
ljmp
push
in
pop
add
shlb
test
pushf
call
push
xchg
ret
dec
stc
loope
dec
push
aaa
mov
pop
jecxz
fwait
push
scas
adc
push
dec
jg
shll
push
dec
push
pop
fcmovnbe
cmp
mov
or
cmpsb
jl
out
jno
or
fsubl
xchg
mov
popa
jl
enter
dec
movsb
insb
movsl
dec
inc
push
inc
in
ljmp
out
mov
sahf
fmulp
icebp
sbbb
pop
mov
rcrl
andl
mov
test
mov
add
enter
cmp
jnp
lcall
adc
sub
shll
lahf
in
dec
dec
push
into
mov
test
dec
xchg
cmp
iret
jae
pop
push
scas
sub
lock
and
xor
xchg
lret
xor
cmpsl
loope
add
pop
repz
je
push
and
movsl
mov
sub
cmp
inc
mov
ljmp
xchg
lock
pusha
inc
push
inc
xor
daa
mov
int3
ret
out
jno
cld
mov
cmpsb
aam
xlat
jb
xchg
add
clc
insl
sub
sbb
cmp
xchg
lds
mov
xor
int
dec
jg
mov
ds
jp
shll
and
popf
pop
lahf
lods
add
pusha
cmp
dec
sbb
dec
jmp
outsl
mov
cld
ljmp
iret
std
adc
jmp
adc
or
mov
data16
js
jns
sar
lret
mov
inc
loopne
xchg
inc
push
lret
fs
fxch
xlat
das
add
test
movsb
jne
sahf
sub
push
jbe
data16
push
cmc
decl
aad
hlt
add
mov
stc
ds
adc
insb
leave
xor
repnz
lret
jmp
mov
cmp
test
lods
cmpsb
nop
jb
not
stos
mov
repnz
test
clc
orl
test
xor
mov
push
popa
mov
and
addr16
outsb
popa
sub
or
mov
mov
jecxz
pop
jae
cs
mov
xchg
stos
cli
das
push
shll
gs
insl
adc
addr16
call
lds
and
sub
hlt
arpl
mov
adcb
and
cwtl
adc
push
cmp
and
fstpl
mov
jnp
mov
sub
ja
mov
and
data16
xchg
in
leave
inc
in
xor
stos
push
push
mov
xor
call
outsl
xchg
push
mov
mov
push
jp
mov
mov
xchg
or
or
sub
jbe
jno
mov
popa
mov
aaa
in
es
inc
jne
popa
pop
jmp
lret
mov
push
push
imul
sub
inc
out
frstor
add
dec
pop
addl
mov
cmp
aaa
lds
pop
repz
inc
ret
lock
inc
or
jbe
adc
outsb
subps
rol
sub
add
cs
add
adc
je
sbb
divb
fwait
shll
inc
sahf
test
cmp
mov
into
jp
out
mov
cli
std
test
ret
and
adc
rol
xorb
add
fisubrs
push
subl
jg
addr16
sahf
jl
or
leave
in
leave
orl
fwait
jnp
aaa
mov
stos
andb
in
fsubrp
scas
mov
xor
test
sub
out
rorb
inc
push
jns
or
mov
pop
in
or
sub
add
or
out
sub
xor
lock
nop
pusha
in
rorl
push
popl
inc
std
sbb
jb
jae
pop
cmp
mov
jno
dec
scas
in
xchg
jno
mov
ss
repz
test
xchg
dec
adcl
call
pop
pop
imul
icebp
daa
rclb
in
popf
pop
pop
dec
adc
push
outsl
jmp
cli
es
out
lds
xor
bswap
stc
push
sahf
inc
das
mov
mov
xlat
inc
ret
loopne
fimull
das
inc
push
in
jmp
xchg
daa
xor
es
xchg
adc
aas
mov
incl
pop
push
push
mov
fbstp
inc
add
popf
pop
pop
sbb
data16
movsb
adc
cmp
cmp
orl
cmp
pop
mov
adc
stc
mov
pop
mov
popa
fsub
push
or
adc
inc
test
jecxz
pushf
cwtl
xchg
mov
adc
xchg
jno
jp
shll
out
and
xor
cmc
mov
aad
fxch
lea
mov
popf
or
subb
inc
sbb
daa
fbld
or
movsb
cwtl
vmwrite
repz
or
mov
pushf
and
jno
arpl
and
arpl
cld
sbb
lds
xor
jns
shlb
enter
dec
adc
pusha
xor
aam
xor
and
call
push
inc
lret
xor
fs
movsb
mov
add
cs
sub
arpl
sbbl
xor
cmp
lahf
imul
adc
or
mov
and
mov
loope
in
out
aas
cltd
stc
dec
mov
repnz
iret
das
add
dec
stos
inc
xchg
mov
out
mov
test
pop
jbe
sub
sub
or
mov
cmc
adc
lahf
cmpsl
enter
and
lret
pushf
pusha
jnp
into
lret
xchg
idivl
mov
fildl
pop
mov
addr16
andl
jbe
stos
popa
fisttpll
shlb
cmpsb
jno
jb
mov
push
sbb
jecxz
std
mov
lock
add
insb
dec
test
popa
jns
mov
inc
lcall
pop
xor
popf
mov
insb
xor
sarl
xchg
movsb
or
imul
adc
push
call
or
inc
jb
lcall
decl
mov
stos
xor
inc
stos
out
and
xchg
popa
out
add
leave
addr16
adc
pushf
pop
push
mov
lahf
pusha
or
dec
lods
dec
lea
sbb
test
fisubrl
enter
aad
rcrb
and
out
ss
adc
xor
mov
dec
and
inc
push
xlat
hlt
xchg
or
or
repz
pop
mov
fiadds
mov
push
test
aas
outsb
testl
cli
lods
mov
and
in
mov
loopne
scas
cmp
jnp
les
in
testl
push
or
mov
pop
mov
or
nop
popf
pusha
mov
xchg
mov
or
sbb
inc
in
sahf
xor
cmp
mov
adc
xchg
xchg
push
sub
pop
push
pop
xchg
shr
pusha
in
xchg
imulb
imul
pop
mov
fcoml
cli
out
cmp
ret
test
inc
lret
inc
xor
in
adc
ljmp
xor
jmp
lods
rclb
aas
pop
movsb
xor
add
inc
cmpl
add
cmp
cltd
loopne
push
loope
int
mov
pop
addr16
out
cmp
movsl
mov
sub
push
addr16
jmp
push
jle
sub
shrb
push
out
jns
inc
ds
pusha
dec
xchg
xor
out
mov
and
mov
and
jae
adc
mov
xor
je
dec
mov
push
cmp
mov
pop
cwtl
sbbl
sbb
xor
or
and
mov
mov
lea
inc
mov
ds
xorl
test
jmp
mov
pop
mov
sahf
or
paddusw
sbb
sahf
or
movsl
scas
mov
add
or
shll
dec
mov
jbe
test
push
mov
push
mov
int3
push
out
jge
mov
sarb
sbb
jnp
adc
xor
xchg
jp
mov
jg
into
sbb
repnz
nop
inc
ljmp
pop
jl
ret
lea
test
ds
repz
arpl
pusha
cli
jp
lods
fs
out
es
mov
fwait
push
stos
cli
push
pop
xchg
jl
dec
test
dec
sub
mov
ds
lods
mov
or
inc
cmp
sbb
rcrl
mov
add
pop
inc
sti
arpl
cmpsb
hlt
add
inc
test
jp
cmp
push
cmpsb
jno
dec
or
fidivs
jns
mov
jno
imul
or
imul
and
clc
mov
xlat
pop
sbb
aaa
test
mov
fwait
scas
pop
es
lock
mov
addr16
cltd
cwtl
pop
iret
dec
in
xchg
out
fsubrl
loop
xchg
in
divl
into
fwait
xor
or
not
call
inc
push
sarl
push
out
xlat
adc
fisubrs
mov
fld
outsb
lock
xchg
cmpsb
std
pop
adc
fnsave
sub
xchg
loop
dec
jns
jp
sbb
mov
pop
enter
mov
jge,pn
add
xchg
inc
dec
sbb
rcl
outsl
cli
sti
push
fisubl
inc
and
insl
mov
movsl
dec
aad
testl
push
leave
clc
fiaddl
testl
popa
mov
mov
mov
sbb
mov
push
mov
das
inc
push
jo
icebp
loope
rcl
fs
xchg
add
lcall
jmp
or
and
cmp
cmc
aam
je
jo
and
sbb
add
shr
add
jbe
les
inc
push
enter
or
sub
cmp
pushf
mov
sbb
add
lret
in
fsubs
mov
loop
cmc
popl
mov
repnz
inc
pushf
mov
fxch
pop
mov
pop
clc
add
sahf
inc
mov
mov
add
fmuls
mov
xchg
fnstsw
push
std
outsb
je
shlb
xor
mov
push
std
shrl
fcompl
jne
mov
inc
stc
hlt
popf
push
cmp
cmp
cmp
adc
push
push
pop
and
out
data16
xchg
pop
mov
cli
mov
jg
and
pop
inc
fldl
inc
jae
cmp
mov
test
cmp
cmp
push
cltd
or
inc
sub
lock
or
call
out
cwtl
pop
inc
call
xor
sti
or
sti
in
xchg
daa
icebp
mov
push
hlt
ja
sbb
push
mov
out
or
sahf
out
ds
gs
das
sti
je
mov
cmpl
loopne
mov
jnp
mov
add
aaa
mov
ja
mov
xchg
pop
and
addr16
out
test
call
fcmovbe
jno
sti
xor
push
cld
and
shlb
cmp
outsl
clc
inc
sub
jp
push
mov
sub
aam
and
fimuls
fldt
stos
mov
insb
leave
fistpl
jne
cmp
cmovg
push
iret
aam
pop
je
inc
push
insl
inc
lods
js
mov
adc
or
mov
add
mov
mov
leave
cmp
in
jb
jle
pop
mov
inc
imul
in
push
xchg
push
addr16
shll
in
mov
mov
stc
int
stc
out
cwtl
mov
stos
mov
mov
lcall
repnz
adc
mov
repnz
push
adc
pop
and
mov
push
jecxz
les
dec
shr
loop
shl
and
stos
popf
cmp
stos
int3
or
push
cmp
xlat
mov
notl
dec
shlb
mov
fadd
aas
inc
and
push
ljmp
fstpt
jmp
imulb
mov
push
push
out
dec
mov
cltd
rcr
test
in
push
push
daa
ret
std
outsb
clc
sbb
xor
js
mov
add
cli
sbb
es
xchg
mov
mov
lret
cmpsl
cmp
pusha
inc
sbb
jnp
call
push
dec
adc
push
sub
sbb
icebp
xchg
pop
hlt
sub
enter
inc
adc
fadd
mov
in
jmp
fadd
jmp
jne
lret
scas
loop
lahf
and
mov
mov
mov
nop
jmp
push
imul
loope
mov
incl
cltd
out
add
push
pop
fimull
mov
mov
push
dec
gs
roll
aam
add
or
jne
filds
int
rep
xchg
jae
mov
dec
and
cmpsl
scas
dec
cmpsl
idiv
mov
push
out
mov
and
data16
mov
sub
add
subl
sub
mov
xor
sbb
in
and
shrl
iret
cli
dec
rolb
fnsave
cs
jl
insb
jae
mov
pop
mov
xchg
ljmp
xchg
jb
xor
in
mov
loop
fucomp
iret
icebp
roll
jnp
sub
xchg
lret
iret
dec
jns
neg
pusha
mov
and
cwtl
fimull
loopne
outsb
mov
push
push
mov
jl
adcb
mov
mov
pop
inc
fistl
shlb
jae
punpckhdq
andb
and
ret
inc
jle
inc
mov
cld
jne
sub
jp
pop
mov
xchg
mov
clc
pop
test
mov
dec
mov
mov
inc
push
adc
lds
cld
cmp
sahf
xchg
mov
enter
sub
in
mov
test
lods
stos
rol
jg
cwtl
das
mov
pop
mov
mov
add
add
inc
xchg
mov
call
pop
aam
or
fwait
jne
mov
scas
pop
fisubrs
jp
sub
xchg
adc
iret
scas
sti
pop
sbb
mov
fs
sub
insb
adcl
ror
push
mov
and
push
movsb
jo
inc
or
inc
cmp
push
xchg
xchg
test
sbb
mov
push
push
pop
jmp
push
sti
fcmovnbe
in
shr
movsb
insl
test
testl
or
ror
imul
pop
sub
out
pop
mov
mov
subb
push
ja
and
push
int3
aam
cmpsl
iret
sbb
insl
xchg
mov
dec
fwait
pop
or
es
adc
test
mov
mov
mov
lret
and
pop
pusha
or
push
or
cmp
sub
pushf
cmp
adc
sbb
pop
mov
mov
cltd
stos
cld
roll
imul
xchg
stc
addr16
mov
push
cmp
sahf
push
pop
mov
pop
data16
sbb
mov
in
jp
aam
call
outsb
cmp
jo
lret
add
or
jno
xor
fistl
dec
popf
jnp
push
and
xor
pop
out
popf
push
dec
mov
add
in
outsl
je
stos
mov
out
shlb
push
mov
je
push
lcall
xchg
or
pushf
cmp
cmp
xor
lahf
xlat
jnp
dec
push
push
mov
and
xchg
outsb
and
nop
sbb
int3
lea
clc
bound
adc
stc
push
inc
dec
mov
bound
sbb
or
push
cmp
call
dec
test
fs
dec
jp
pusha
inc
outsl
push
mov
jmp
or
dec
std
sub
pop
inc
push
jp
lea
or
xor
jmp
and
call
divl
ds
std
cltd
inc
cld
jp
insb
imul
pop
xchg
sub
pop
fisttpl
cmp
aaa
cmp
jp
fidivl
test
cmpsb
testb
repnz
fdivl
pop
adc
push
pop
adc
loopne
daa
add
inc
cmp
inc
add
std
ss
sub
cmpsb
int3
insl
add
ret
imul
out
or
dec
sahf
stos
adc
cmc
add
or
pop
push
adc
cmp
inc
ficoms
dec
push
dec
push
pop
or
inc
fs
int3
imul
pop
mov
and
sub
je
dec
add
das
or
mov
push
in
into
push
hlt
enter
adc
sbb
loop
push
insb
int3
fidivrl
test
pop
lods
fldenv
mov
iret
test
or
jns
cmovl
outsb
aaa
xor
negb
jl
or
ret
div
lock
or
aad
int3
push
pop
cwtl
sbb
ljmp
jbe
jg
cld
xor
repnz
xchg
and
push
mov
push
into
sahf
mov
gs
pop
mov
iret
cmc
ja
cs
fbstp
mov
fimuls
adc
daa
inc
test
shrb
mov
push
das
or
int
fs
aam
push
aad
imul
push
dec
arpl
ret
adc
test
mov
ljmp
push
mov
sbb
push
sahf
mov
es
dec
sub
jmp
mov
lods
lock
lahf
stos
cmpsb
jbe
imul
dec
cmpsb
xchg
cmp
aas
out
and
insl
dec
nop
jl
fdivs
mov
ror
cmc
sbb
outsb
add
cli
xchg
push
xchg
test
cmp
fildl
repnz
enter
push
xchg
je
ds
push
jae
repnz
outsl
lods
fnsave
cmpsb
or
dec
fcmovb
xchg
xchg
lods
push
xor
push
nop
xchg
push
mov
mov
cmp
jmp
mov
add
popa
inc
roll
mov
jge
mov
inc
jmp
dec
mov
mov
xchg
leave
ds
jno
js
sub
ret
and
mov
test
lahf
sarl
arpl
xor
stos
les
push
ljmp
sbb
dec
sarl
lret
pop
inc
ficoms
or
bound
mov
inc
push
testb
enter
andl
insb
int3
leave
fisubrl
daa
jmp
pop
cmc
inc
pop
shlb
cli
pop
insb
xor
ss
scas
test
dec
subb
adc
push
bound
andb
std
stc
adc
loopne
lds
test
fnsave
fcoml
into
repz
orl
clc
dec
mov
loope
out
stos
and
adc
std
mov
adc
push
xchg
dec
lcall
xlat
push
cmp
inc
hlt
mov
add
xor
mov
jl
jnp
mov
and
les
dec
sahf
jg
shll
negl
cmp
popf
in
sbb
adc
mov
stos
add
mov
mov
mov
sub
insl
xchg
mov
test
stos
repz
pop
xchg
int
test
std
leave
jae
mov
mov
jmp
mov
dec
pushf
mov
sub
sbb
lods
fldenv
cmp
hlt
adc
inc
push
iret
add
lcall
cli
dec
sub
cs
jp
adc
cmc
pop
lahf
sbb
scas
ret
jle
call
xor
push
adc
out
pop
adc
fimuls
xchg
out
mov
icebp
sti
ja
sarl
insb
stos
das
sbb
xchg
or
popa
pop
mov
jge
adcl
mov
cltd
adc
shlb
xlat
dec
xlat
sbb
jp
xchg
in
sbb
mov
shll
loope
pushf
scas
cmp
cld
mov
test
mov
push
pop
jg
pop
cs
push
or
repz
pop
shll
pushf
xlat
jl
clc
mov
and
push
add
mov
cltd
xchg
icebp
sub
sahf
cmc
pop
xchg
idivl
hlt
cld
imul
cmc
xchg
popa
lods
xchg
push
mov
icebp
mov
sbb
mov
mov
push
repz
xchg
push
sbb
cmp
out
das
sbb
add
mov
pop
divl
push
mov
cs
ja
dec
js
dec
xor
cmp
add
push
pop
test
sti
dec
int3
fdivrp
mov
aad
sub
sub
mov
and
push
imul
pop
pop
cmpsb
call
rolb
jmp
nop
inc
pushw
jl
enter
pop
fstps
jp
xor
ret
in
std
notb
loope
fcomps
jne
idivl
cli
outsb
add
test
ud2
aas
push
pop
in
ss
mov
daa
mov
lods
loopne
sub
cld
mov
test
insb
rcl
or
repz
out
ret
dec
loope
jg
shl
in
in
mov
sub
sub
stos
and
je
daa
pop
rol
pop
or
out
xchg
pop
push
scas
sbb
loope
mov
movsb
dec
or
xchg
ret
adc
stc
into
mov
adc
scas
dec
xchg
pusha
mov
int3
mov
xor
mov
aam
hlt
cs
lahf
gs
ret
bound
and
outsl
dec
xchg
xchg
inc
leave
fisttps
call
imul
ja
and
mov
sub
out
dec
jle
negb
jns
mov
mov
mov
jmp
pop
mov
dec
jb
leave
test
fidivrl
xor
dec
sub
adc
add
mov
adc
stos
rol
xchg
es
dec
outsl
jbe
jo
sti
test
jo
or
and
test
mov
lcall
push
and
dec
loop
out
fldl
lods
sub
adc
into
mov
es
mov
addr16
push
cltd
jae
mov
mov
ret
mov
lods
add
cmpl
adc
aas
add
lahf
les
jge
add
ffreep
jle
dec
mov
popf
fsts
jle
aaa
addr16
lds
cmpsb
or
pop
jnp
call
es
lahf
mov
shl
imul
mov
xor
push
ljmp
mov
lods
add
scas
fldl
push
mov
stos
imul
sbb
mov
push
inc
orb
xchg
pop
pop
cld
dec
dec
ret
lcall
push
scas
inc
das
push
add
mov
outsb
jns
insb
lods
jle
pop
inc
dec
dec
push
int3
pop
mov
sbb
ss
addb
mul
iret
xchg
mov
push
mov
fisttpl
mov
cmpsb
jb
add
test
sub
cltd
pusha
push
xor
cmpl
inc
or
push
jp
or
adc
and
jmp
dec
pop
push
outsb
cmpsl
dec
insl
jno
cmp
add
aam
jne
jg
mov
cmpsb
sub
push
sbb
insb
data16
scas
adc
cmp
jecxz
mov
add
adc
icebp
cld
or
xor
xor
mov
lock
test
sbb
adc
divl
jecxz
out
aaa
sbb
cwtl
jno
aas
faddl
push
fstpt
mov
pop
inc
dec
test
xchg
inc
je
cmpsb
sbb
mov
inc
hlt
mov
into
or
lds
and
roll
lods
imul
popa
pop
push
pop
xlat
mov
cmp
imul
xor
pop
mov
mov
xchg
jb
and
shll
scas
pop
shrb
mov
sbb
jg
das
cltd
xor
pop
test
xchg
popf
pop
or
nop
movsb
rolb
pop
pop
xchg
add
scas
into
push
sti
dec
aas
xchg
adc
dec
stos
nop
int
sub
sbb
or
cltd
xchg
imul
jl
xchg
lahf
add
fwait
pushf
mov
xchg
add
xchg
enter
repz
cli
test
inc
push
inc
ret
repz
outsb
cmp
inc
add
dec
ja
mov
mov
inc
mov
imul
outsl
pop
stos
adc
sbb
jnp
jbe
fmuls
cltd
loope
les
sub
test
push
cli
subb
lock
mov
fwait
xchg
sti
cs
mov
and
xchg
imul
cmp
inc
pop
mov
ljmp
pop
jecxz
mov
movsb
sub
push
gs
stos
repz
mov
and
jecxz
push
add
mov
push
mov
les
xchg
mov
js
mov
test
fstp
xchg
mov
outsb
scas
adc
aam
mov
or
test
mov
jge
sti
or
in
shr
aas
insb
inc
add
dec
js
lock
xor
add
sbb
mov
orl
outsl
std
imul
mov
jle
stos
mov
ljmp
popf
ja
pop
sti
sub
ds
das
outsl
jo
out
dec
inc
insl
xchg
lahf
test
inc
dec
mov
cmpsl
sub
sahf
pusha
mov
das
mov
lret
xchg
leave
sbb
jns
push
xchg
mov
pop
pop
dec
inc
sub
adc
roll
mov
xlat
jbe
incb
leave
sub
aad
xchg
mov
pop
into
in
filds
test
sbb
lods
stos
leave
cmp
mov
push
push
add
lods
out
dec
sbb
push
jmp
dec
jecxz
iret
leave
dec
lea
jnp
inc
test
adc
mov
sbb
mov
cmp
dec
xchg
dec
mov
and
mov
fldl
test
jl
pop
dec
cmovge
or
fmuls
call
cmp
test
js
push
sub
arpl
inc
mov
ss
inc
pop
mov
and
iret
push
push
stc
fistps
pop
into
push
pop
in
clc
repnz
adc
cwtl
lods
movsb
sub
jae
push
stos
mov
loop
or
shrb
dec
lcall
mov
pushf
dec
push
sbb
cmp
addr16
aad
mov
aad
daa
jno
into
mov
fstpt
test
jp
jge
mov
jmp
popf
cmp
out
leave
out
and
pop
add
pop
sti
clc
fadd
les
dec
sbb
inc
pop
mov
jmp
jle
imul
mov
pop
pop
inc
mov
sub
inc
je
loop
sbb
imul
outsl
jp
or
fiaddl
repz
cwtl
cmpsb
jmp
dec
jle
xchg
adc
scas
paddsw
xchg
cmpsl
adc
mov
mov
or
mov
sbb
outsl
hlt
jp
sub
clc
push
loope
mov
dec
sysexit
mov
clc
sahf
aam
mov
mov
and
push
fstpt
dec
cli
pop
dec
pop
shl
sbbl
adc
cltd
sbb
xor
aas
lahf
dec
or
inc
inc
lods
fisubl
dec
idivl
popa
pop
add
adc
mov
adc
lret
rcrl
fldenv
dec
lods
xchg
hlt
icebp
lods
jle
and
js
cwtl
dec
lea
repz
into
push
add
je
or
pop
repz
andb
ds
jl
jno
xlat
orl
or
ret
imul
sub
popa
mov
test
or
mov
and
daa
sti
inc
movsl
cmp
mov
div
mull
out
add
mov
xchg
xchg
add
lds
movsl
mov
lcall
cmpsb
dec
xor
inc
fs
loope
fnstcw
lods
ret
cmpsb
call
repz
ljmp
lock
xor
or
push
dec
xor
arpl
outsb
or
fs
inc
test
popf
push
dec
mov
int3
sub
sbb
mov
ret
out
jb
mov
sub
adc
scas
stc
jl
inc
into
popa
push
add
lds
xor
arpl
sbb
xor
or
popf
mov
sahf
mov
pushl
adc
add
inc
aas
or
inc
popf
popa
int
das
lret
es
inc
dec
mov
inc
je
int3
adc
pop
sbb
and
xor
loop
enter
cs
sub
push
pop
mov
int
aad
or
push
decl
mov
and
outsl
push
inc
inc
add
xchg
inc
idivb
jae
xor
xor
sub
xchg
bound
mov
pop
fwait
jb
test
push
inc
gs
inc
add
sbb
sbb
enter
cmp
mov
repnz
decl
in
and
movsl
xchg
push
dec
ljmp
or
loope
jb
jbe
add
rcrl
xor
dec
xchg
pop
jg
ja
test
repnz
shll
imul
or
stc
xlat
in
stc
addl
ja
fs
inc
push
outsb
cmp
or
lcall
adc
and
dec
adc
lds
sub
bound
or
movsl
adc
cltd
jnp
insl
pop
mov
xchg
ds
fdivr
adc
mov
push
out
sbbb
loop
dec
mov
sbb
jb
sbb
gs
mov
int
scas
pop
data16
xor
inc
sub
hlt
mov
movsb
test
mov
in
push
mov
xor
cli
pop
xor
xor
cmp
test
in
popa
enter
mov
mov
mov
rorl
cs
into
cmp
cmpsl
aad
xor
fistpll
inc
mov
xchg
sarb
push
orl
sbb
mov
andb
insl
push
mov
xor
sub
mov
test
mov
xchg
icebp
push
jmp
int3
dec
add
and
mov
mov
sub
fistl
aam
insl
mov
push
aas
jle
sub
rolb
pop
test
push
lahf
push
clc
lods
test
push
add
mov
push
ss
aas
push
cmp
flds
jo
ror
test
dec
adc
cli
xchg
mov
scas
jae
push
push
mov
xor
icebp
lods
adc
sbb
xchg
or
icebp
sti
ja
shrb
mov
test
jmp
push
rcrl
adc
out
lret
xchg
icebp
incb
push
mov
ja
addb
sbb
mov
incl
loopne
jae
add
mov
out
fs
push
sbb
pop
lods
xor
popa
mov
jmp
pop
repnz
cltd
jp
popf
leave
jecxz
inc
or
cmp
data16
rcll
aas
rolb
add
push
loope
or
sbb
icebp
dec
outsb
lock
sub
sbb
jmp
push
lods
mov
daa
insb
cwtl
sbb
pop
movsl
or
repz
es
mov
in
into
repz
xchg
and
mov
sahf
and
jnp
pop
repz
jle
imul
cmp
negb
mov
std
fwait
les
pop
bnd
cmp
scas
dec
inc
jle
aaa
ror
xor
clc
or
push
sbb
jo
loopne
dec
addr16
fsubrl
inc
mov
test
loope
mov
ja
mov
lds
dec
or
xchg
scas
and
cmp
in
in
out
mov
daa
rcrl
aaa
cmp
leave
mov
jge
and
popw
arpl
push
mov
mov
ja
push
pushf
add
mov
test
int
insb
dec
jg
in
in
std
lahf
daa
fcompl
inc
orb
out
and
lahf
and
stc
jns
stc
adc
or
lret
cld
ret
mov
adcl
dec
cmpsl
mov
sub
icebp
dec
outsl
pop
fs
test
cmc
ds
imul
orb
adc
gs
mov
fnstsw
jp
dec
jo
in
xchg
xchg
mov
rol
fsubrl
jle
mov
js
sbb
adc
jg
jae
je
pushf
sub
sub
popa
and
ljmp
cmpsb
adc
xor
xchg
add
dec
fiadds
sti
punpckhbw
sbb
and
push
add
or
adc
and
push
push
and
int
push
movsl
dec
js
dec
xor
and
push
xor
xlat
fldlg2
incb
mov
push
shrb
xchg
push
push
movsb
aaa
das
lea
mov
jge
out
push
jb
add
fstl
dec
mov
inc
addr16
or
test
int
push
movsb
repnz
loopne
daa
add
dec
inc
cmc
or
dec
push
popl
push
push
pop
gs
cld
fptan
sbb
lods
cmp
sbb
pop
cmp
fldl
loop
mov
stc
mov
dec
mov
xlat
icebp
fdivs
inc
cmp
dec
push
sub
mov
sub
imul
lods
icebp
mov
jp
add
enter
das
inc
and
mov
mov
fisttps
push
sbb
daa
pop
dec
push
int3
mov
pop
xchg
mov
mov
hlt
push
cld
in
movsb
test
call
stos
and
mov
out
push
hlt
mov
and
fsub
les
dec
sahf
cmp
aad
popfw
mov
hlt
xchg
jo
mov
xchg
mull
aaa
sarb
jecxz
rcrb
sbb
xchg
cld
clc
mov
jg
pop
add
mov
adc
ss
push
add
lret
pop
out
push
pop
push
adc
ret
sub
xor
ds
cmp
rolb
repz
mov
sti
sahf
xchg
movsl
outsl
lret
add
mov
sub
sbb
jl
daa
clc
cltd
pop
pop
daa
adc
cwtl
stos
shrb
into
jb
xor
inc
mov
loop
hlt
or
addr16
cmc
aam
ror
sbb
das
or
lods
pop
mov
aad
ja
mov
jb
cmp
xchg
outsb
xchg
push
xchg
pushf
add
dec
sbb
inc
ffree
aad
inc
fisttps
push
mov
and
sbb
or
sub
mov
sbb
loope
xor
pushf
push
add
mov
imul
adc
loope
movsb
movsb
test
fs
lcall
das
mov
add
lret
cli
lds
sub
dec
out
insl
push
add
jmp
loopne
aas
or
int3
xchg
sbb
test
andl
lods
fildll
sbb
fs
or
xor
or
loop
sub
push
idiv
repnz
add
pop
std
mov
dec
xor
fimuls
pop
xchg
rolb
push
dec
arpl
push
inc
pop
cld
addr16
shrb
cmpsb
and
xor
decl
icebp
addr16
mov
sbb
xchg
roll
inc
cmp
mov
lea
aad
xorb
pop
inc
daa
clc
jp
outsl
mov
lods
es
xor
jns
loope
inc
ja
out
cmc
push
cwtl
jnp
popa
scas
mov
sahf
inc
ljmp
fbld
pop
pushf
mov
xchg
lret
sub
fsubl
sub
lret
cmp
adc
loop
jge
gs
jns
xchg
stos
les
mov
push
js
sub
out
cwtl
gs
out
xchg
orl
jne
xchg
and
fistps
ret
push
movsl
jb
int
mov
sbbl
mov
dec
adc
mov
jle
subb
add
ja
imul
dec
and
sub
and
xor
leave
stc
insb
aas
nop
lods
pop
cmp
push
push
js
jge
xchg
call
stc
jbe
aaa
mov
sbb
insb
pop
xchg
pushf
cmp
adc
gs
fs
adcb
lods
adc
and
push
jmp
mov
adc
or
idiv
adc
push
pusha
jnp
mov
data16
cld
aad
cmc
mov
shrl
inc
push
adc
outsl
pusha
je
inc
inc
xlat
xor
sbb
sbb
push
lahf
call
mov
and
jnp
out
lahf
iret
xchg
add
cmp
shl
and
mov
adc
xorb
cmc
sti
add
cmp
mov
repnz
cmp
pop
jns
mov
fsubrs
mull
push
cmpsb
jbe
fucomip
loope
and
out
mov
inc
cmp
jecxz
imul
lret
xchg
imul
jmp
fcmove
test
ret
arpl
lcall
notl
sarl
mov
fcomps
test
xor
or
movsb
mov
aaa
adc
mov
orb
aas
pop
inc
xchg
jb
inc
jl
add
push
loopne
mov
mov
bound
ret
adc
mov
faddl
int3
scas
dec
dec
dec
add
jg
out
jmp
aad
sub
movsb
jne
sub
jg
lock
mov
cmp
orl
push
adc
int
adcb
clc
imul
adc
je
leave
lock
jns,pt
sbb
ds
cmpsl
mov
outsl
imul
dec
dec
ds
or
lods
jns
test
adc
aaa
repnz
mov
ds
jl
pop
pusha
push
cli
int3
or
mov
xlat
in
mov
subb
mov
adc
mov
adc
and
push
dec
inc
inc
inc
cmp
pushf
mov
dec
lods
sub
std
mov
hlt
pop
jge
fildll
push
jo
cmp
pop
and
arpl
mov
mov
rcll
pop
in
fistpll
push
mov
cmp
es
cmp
dec
ss
sbb
jo
pop
popa
jbe
fidivrl
adc
loopne
js
jge
jmp
mov
xor
cltd
out
dec
push
sarl
cmc
loope
jae
pop
pop
jg
sahf
loop
iret
addr16
inc
and
mov
inc
lret
add
aaa
shrb
mov
lea
out
repz
orb
repz
pushf
out
adc
stos
inc
push
bound
scas
fcom
aas
lret
inc
fisubrl
out
push
in
lea
dec
fnstsw
push
popa
push
adc
and
xor
xor
dec
ss
jne
dec
or
pop
cwtl
ds
and
repnz
jge
mov
into
pop
sub
xchg
xor
sbb
ret
pop
push
xchg
or
mov
test
fidivrl
scas
int3
pop
lods
push
and
ror
lahf
imul
loop
std
add
int
mov
add
sbb
adc
adc
adc
sub
arpl
or
jne
imul
jns
cmpsl
or
outsb
jmp
sbb
mov
jg
cmp
xor
push
mov
fiaddl
fidivrs
jge
imul
loopne
mov
cmp
mov
jne
xchg
sub
or
hlt
sbb
mov
pop
out
jne
out
adc
andb
movsb
or
iret
addr16
lcall
lret
stc
pop
sub
int3
iret
cmp
jg
popa
pop
aaa
xchg
pop
sub
iret
jno
nop
ljmp
pusha
dec
loop
les
bndstx
sbb
loopne
push
data16
orb
mov
daa
lret
and
repz
test
iret
xor
scas
jbe
orl
push
psllq
shr
cmp
adc
add
inc
pop
sbb
repnz
repz
sub
inc
icebp
leave
cmpl
jecxz
sub
test
push
dec
bswap
push
inc
icebp
fdivp
push
cmpsl
push
pusha
push
xor
call
mov
jmp
cmpsl
cwtl
mov
cld
in
xchg
sub
add
inc
cmc
and
and
adc
fcomp
jl
repnz
lret
imul
mov
xchg
add
in
push
scas
pusha
pusha
and
add
mov
inc
pusha
bound
mov
pop
shlb
shll
leave
jecxz
or
xor
gs
in
mov
aad
and
or
outsb
jbe
cli
cmp
in
jb
nop
leave
adc
inc
and
xchg
push
cmp
mov
inc
fwait
sub
sub
orl
sbb
pop
mov
mov
call
cmp
push
push
pop
jle
lods
test
and
cmp
ja
out
sub
fldl
and
jl
std
jnp
dec
shl
cmp
xchg
xor
dec
pop
push
sbb
jge
stc
pushf
js
sbb
stos
popf
bound
test
and
mov
int3
js
cmp
rcrl
mov
in
cmp
gs
clc
xchg
fnstsw
add
fists
push
push
jecxz
flds
aaa
fisubs
dec
out
aam
lcall
xchg
dec
mov
outsl
cs
inc
addr16
and
and
xchg
mov
adc
sub
sarl
fcomip
mov
xchg
in
leave
int3
das
scas
xor
xor
xor
mov
outsb
push
adc
je
mov
fwait
cmp
nop
mov
add
jb
jp
inc
pop
stos
imul
adc
cmp
add
cwtl
in
lret
fldt
mov
imul
ret
sbb
lahf
jmp
xor
or
rorb
ret
pop
shl
jecxz
decb
fists
sbb
lock
xor
jle
add
out
stos
mov
shr
pop
ljmp
cmp
jmp
int
sbb
repz
dec
mov
or
in
inc
mov
lret
dec
std
push
xchg
gs
jg
aaa
test
lret
and
mov
mov
sbb
or
fistps
add
sub
dec
cld
ja
lcall
rclb
xchg
or
xor
mov
jno
mov
sti
rolb
int
sub
xchg
lahf
fcmovnb
fcoml
ljmp
jno
in
add
dec
dec
lcall
xor
in
xor
jae
sub
cmp
ret
cmpsl
sbb
jbe
mov
mov
xchg
mov
xchg
dec
pop
sbb
jno
insl
xchg
mov
xor
das
ror
pop
mov
jmp
vpcmpeqw
outsb
jg
mov
add
or
mov
ljmp
dec
push
fwait
mov
test
fbstp
and
pop
out
lret
fdivs
cmp
lret
btc
cmpsb
add
xchg
push
out
in
lods
test
sub
sub
dec
jle
je
jae
negl
pop
fbld
xorl
fidivrl
dec
jb
inc
repnz
into
stc
imul
outsb
or
cmpsl
add
xor
outsl
add
sub
xchg
pop
orb
xor
addl
jge
inc
cmpl
fcomps
sbb
stc
imul
sahf
mov
test
jno
int
sub
popa
xchg
mov
jp
cmp
inc
aam
push
xchg
or
jne
jae
xor
sbb
fcmove
xor
and
outsl
or
push
inc
push
movsb
dec
cmpsl
xchg
xor
sbb
adc
sbb
pop
mov
dec
push
clc
loope
test
cmc
cld
mov
or
repz
mul
mov
jl
shll
iret
js
out
imul
inc
icebp
or
mov
adc
outsl
enter
sub
adc
leave
jb
in
test
lods
or
cmp
imul
xorl
mov
movsb
add
jo
fnstsw
pop
testb
or
xor
out
adc
jae
test
jns
bound
int3
arpl
stos
xchg
jbe
pop
stos
push
in
stc
fcoml
adc
rolb
jae
cmp
loope
push
iret
sub
lea
xlat
nop
inc
jl
pop
xor
inc
cld
jne
or
or
xor
mov
fwait
test
repnz
jns
cmpsl
rolb
dec
and
out
test
inc
dec
xchg
outsl
dec
push
sub
les
lock
push
mov
sub
icebp
adc
push
push
movsl
add
out
pop
outsb
sbb
push
push
ret
dec
int3
xor
test
sub
jne
ljmp
outsb
inc
mov
sbb
pop
sbb
out
cmc
add
and
or
and
movsb
xor
je
mov
push
in
les
push
push
test
xchg
pop
or
inc
sarb
neg
xchg
insl
cmp
nopl
in
push
push
pop
lea
iret
into
or
push
in
jae
movl
shrb
pop
jge
add
addr16
dec
or
ret
andb
rcrb
adc
adc
mov
cltd
sbb
int
jl
add
sti
aad
or
mov
arpl
bound
push
push
dec
xor
out
mov
outsl
inc
stc
ficoms
popf
stc
dec
jb
ja
mov
adc
adc
lahf
lock
cmc
pxor
es
lock
adc
push
stos
add
aad
movsl
and
jbe
pop
inc
pushf
xchg
jae
xor
pop
ds
jbe
xchg
idivl
sub
cmp
repz
cmp
dec
shr
daa
adc
pushf
lcall
xchg
aam
pop
mov
outsl
mov
fcmovu
cs
ds
aam
stc
mov
loopne
push
sbb
pop
stc
push
loop
shrl
pop
sti
lods
and
adc
pusha
push
popf
loop
pop
mov
rcrl
sti
and
cmpsl
mov
decl
shrb
insl
fcomi
es
and
je
and
daa
sub
push
inc
aad
mov
mov
mov
cli
sbb
insb
loope
popf
sbb
dec
gs
push
inc
mov
mov
sbb
shl
jae
data16
sub
xchg
fnstenv
mov
add
es
cmpsb
fbld
pop
iret
xchg
aas
dec
cmc
inc
scas
sub
add
std
mov
jg
add
mov
push
sti
mov
fcompl
cmp
pop
ja
roll
repz
xchg
add
jmp
mov
sub
pop
cmc
mov
je
push
add
jp
lods
xorb
sbb
das
sbb
dec
in
mov
jl
pop
mov
stos
jge
jns
pop
std
mov
cmpsl
or
fisubl
sbb
adcb
in
add
loope
mov
dec
jmp
push
fcoms
sahf
and
pop
cmp
pusha
loopne
add
adc
cmp
bound
xor
sbb
mov
shll
ljmp
adc
mov
dec
push
faddl
and
and
mov
out
mov
nop
jecxz
or
push
jno
or
cmp
pusha
jle
or
pop
mov
xchg
jmp
jge
add
cmpsb
cmpsl
add
jnp
pop
test
es
clc
scas
xchg
sysexit
lods
shr
pop
inc
ljmp
test
mov
cmp
lods
mov
fisttpll
mov
jle
inc
xor
mov
pop
push
imul
mov
push
in
shll
std
sbb
sti
push
out
pop
je
sbb
fnstenv
dec
into
sub
xchg
lods
mov
popa
outsl
mov
inc
inc
push
cmp
push
mov
or
jp
mov
insl
orl
mov
mov
mov
imul
dec
std
mov
or
lock
popl
add
cltd
mov
js
inc
jbe
ret
pop
idiv
xchg
movb
imul
jl
lds
mov
cs
and
rorb
fisttpl
mov
in
lock
xchg
daa
cmp
mov
cmp
je
outsb
add
pop
je
inc
push
inc
movsb
fadd
push
mov
orl
lds
orb
lds
int3
add
std
mov
shll
cmp
mov
js
repnz
aam
scas
cmp
mov
sbbl
add
mov
xchg
data16
int
cli
or
je
or
sub
jecxz
in
sub
add
rcrb
fldz
ret
jae
sub
and
cld
push
inc
jmp
std
imul
pop
mov
in
sar
fs
xor
mov
pop
lock
outsb
shll
sub
rorb
jb
daa
add
or
cmp
pushf
cld
sub
xor
pop
sub
add
sbb
dec
pop
ret
xor
inc
cmpsb
addr16
ret
sarb
lds
imul
test
jno
cli
adc
insl
std
js
call
movsl
sub
and
mov
adc
sub
dec
jae
in
aad
subl
cmp
mov
es
scas
popa
adc
jb
pop
push
xchg
js
xlat
push
jge
shr
or
imul
sbb
repz
and
xor
pop
mov
mov
test
mov
rolb
pop
roll
scas
adc
les
jecxz
sahf
or
adc
jg
lea
xor
and
ja
adcb
jle
aam
sbb
mov
push
mov
nop
dec
jae
les
in
xorb
mov
stc
push
imul
into
cltd
mov
push
repz
scas
int3
cltd
push
xor
addr16
fdivp
mov
ret
mov
movsb
loopne
nop
cltd
daa
inc
scas
jns
xor
cld
xor
imul
and
cld
int
sub
add
incb
stos
pop
test
adc
mov
popf
in
pop
fildl
jnp
shlb
fiadds
shll
lock
push
stos
outsb
imul
mov
xor
push
xchg
movsb
xchg
cltd
sbb
push
sbb
rolb
jb
popa
mov
xchg
pop
xchg
push
imul
inc
xchg
mov
outsl
mov
pop
cmpsl
push
xchg
popf
jnp
shrl
lcall
mov
dec
adc
cmp
enter
or
push
xlat
into
cmp
xor
in
jne
xchg
and
adc
in
out
aas
pop
js
in
mov
subb
aas
mov
ret
push
mov
cmp
dec
cmc
mov
jp
shr
clc
out
ret
ljmp
push
lock
iret
mov
push
or
xor
push
sbb
or
int3
pop
mov
sub
mov
lret
mov
pop
adc
sti
pop
shr
loop
stos
xchg
sub
in
gs
pushf
pop
sti
push
fwait
sbbb
lock
jae
xchg
outsl
push
xorl
sbb
ret
dec
icebp
cli
outsb
popa
inc
cmp
sbb
lds
inc
mov
int
inc
pop
sub
cmp
xchg
xor
pop
pusha
xchg
or
dec
xorl
int
pop
or
in
push
or
pop
pop
xchg
add
loope
into
mov
out
mov
rcrb
push
aam
inc
mov
mov
rorb
inc
adc
xlat
cmpsl
popf
push
or
cmp
adcb
mov
sarb
jl
jne
pop
mov
jg
dec
lock
enter
icebp
dec
fcmovu
fcomps
call
sbb
es
repz
out
addr16
daa
test
orl
mov
xor
repnz
outsl
loopne
call
out
out
jmp
insl
into
pop
cmpsb
push
outsl
cmp
out
or
sub
add
adc
mov
adcb
test
in
add
and
jmp
inc
inc
jne
in
mov
int
mov
in
subb
mov
mov
out
push
addr16
enter
push
pusha
loop
sbb
dec
stc
jmp
sub
aam
dec
fisubrl
add
add
test
cltd
push
push
pop
int3
inc
jno
jp
out
push
xchg
add
mov
fcomp
mov
push
std
insl
mov
cmc
xor
inc
in
cmp
push
leave
add
cltd
inc
pop
vpsllw
pop
add
icebp
adc
xchg
add
lock
push
jp
jnp
push
xor
jmp
xor
into
push
dec
into
movsl
jge
in
xchg
lret
fdivrl
xor
and
mov
pop
jp
stos
stos
sahf
xchg
mov
sub
es
mov
pusha
mov
or
add
call
add
jo
dec
idivl
cli
sbb
mov
push
add
sub
inc
xor
scas
or
jnp
pop
inc
test
jl
ljmp
fs
mov
jmp
jbe
mov
popf
add
add
pop
aam
add
adc
sub
sbb
aam
int
dec
and
lods
in
pop
out
mov
shll
add
push
sbb
jne
dec
adc
gs
adc
movsl
jns
push
push
push
fildll
mov
sub
pop
push
fs
jo
outsb
sub
cmpsl
jae
fbld
inc
popa
mov
ret
insl
cmp
lods
pop
stc
pop
out
lock
jmp
mov
xor
aas
sbb
add
sbb
fwait
int3
push
add
mov
adc
jp
imul
fwait
cmc
int
mov
cwtl
inc
inc
mov
shrl
cmp
es
repnz
and
repnz
dec
aas
cmpsl
and
pop
sbb
or
flds
imul
fs
mov
leave
out
pop
je
andl
mov
ret
add
mov
adcb
cmpsl
sbb
cmpsl
mov
test
mov
cltd
icebp
pop
mov
mov
mov
mov
cmp
inc
sub
jecxz
out
lret
in
push
mov
pop
mov
push
mov
loope
imul
pusha
cli
and
cwtl
nop
inc
repz
in
pop
mov
pop
inc
mov
loop
popf
sbb
jbe
es
out
and
push
pop
sarb
xchg
pushf
js
mov
jge
xchg
sub
and
je
xor
add
pop
cmp
lret
lock
int
stos
hlt
xchg
icebp
xchg
shll
cmp
xchg
push
or
dec
jne
pop
stos
gs
stos
iret
push
int3
dec
popa
bound
push
cwtl
imul
xchg
mov
outsb
xor
insb
sub
dec
daa
popf
bound
dec
sub
lods
push
adc
stc
lods
sub
lahf
call
call
mov
xchg
ljmp
jecxz
stc
push
dec
xchg
arpl
clc
je
pop
lahf
push
sahf
adc
loopne
aam
or
push
jl
mov
xchg
rorb
pop
mov
lret
xor
mov
sbb
mov
jmp
idivl
fsts
mov
lock
notl
rcrl
sub
pushl
lcall
sbb
scas
cmp
mov
cmpsb
cmpsb
fldl
sahf
jbe
popa
loopne
mov
data16
cmpsb
mov
mov
cmp
pop
iret
jg
xchg
leave
test
push
in
in
xor
stos
mov
mov
std
arpl
in
xor
bound
cmp
add
sub
movsb
cmp
add
adc
push
dec
push
jbe
dec
or
push
or
adc
push
push
popa
shll
shl
xchg
das
mov
sti
add
ds
sbbb
out
rol
jbe
sbb
dec
aas
mov
test
fs
inc
and
sub
popf
mov
jg
jle
pop
loope
xchg
movsl
js
fs
mov
loop
mov
lods
inc
lds
jb
ja
movb
lea
addb
jecxz
es
mov
stos
add
sahf
jge
dec
ret
mov
jns
inc
jno
inc
ds
jno
adcl
pop
dec
stos
dec
hlt
or
adc
jle
cmp
stos
loopne
sbb
jmp
fwait
outsl
and
outsl
sub
push
pusha
cmp
jge
push
insl
test
or
sbb
add
xchg
adc
arpl
jb
sar
pop
dec
pop
outsl
ds
stos
out
ficompl
out
mov
fsts
lods
lods
pop
xor
xchg
mov
mov
jl
jl
lds
or
bound
or
jp
sub
push
adc
jne
pop
and
cs
push
jmp
add
push
sbb
and
pop
xchg
and
aaa
mov
std
cltd
ljmp
test
sub
data16
inc
test
inc
ret
sub
fmul
pop
push
testl
popf
shll
leave
cmc
cmp
pusha
iret
xlat
mov
xor
pop
push
jge
push
or
ret
fcoml
les
xchg
and
sub
loope
fiaddl
jle
push
cs
push
xlat
lods
cwtl
hlt
or
fdivrl
cli
sahf
jno
push
iret
int3
add
sub
imul
push
jae
cmp
gs
mov
insl
cmpsb
das
mov
aad
mov
pop
sbb
ret
cwtl
int
dec
pop
or
cmp
xchg
pop
mov
aas
outsl
in
or
xchg
or
ret
push
inc
into
icebp
inc
jl
mov
mov
aas
in
bound
jg
pushf
lea
adc
in
jle
movsb
js
xchg
and
int
lahf
add
outsb
pushf
push
scas
jo
and
lods
outsl
pop
push
mov
and
das
and
repz
xlat
inc
fdiv
and
inc
dec
xchg
cmp
test
push
lcall
ret
pop
lahf
scas
dec
aad
aas
xor
testl
or
jl
xor
mov
add
mov
cmp
hlt
lahf
inc
or
cmp
mov
pop
das
sbb
push
cmp
pop
sub
adc
cmp
aam
add
mov
addr16
pop
or
std
in
jle
inc
into
inc
sbb
dec
cmpsl
sub
movsb
mov
mov
pusha
inc
inc
inc
sub
inc
sbb
sti
adc
or
lods
cmpsb
movsl
jo
insl
push
mov
fs
out
jecxz
adc
push
shll
ja
add
push
cmpsb
mov
aam
test
jb
sub
frstor
mov
ja,pt
pop
ss
int
popf
stos
shl
push
lcall
mov
ret
jl
sub
add
mov
add
or
in
scas
mov
insl
or
mov
mov
scas
jge
sub
lahf
pop
cmp
sub
mov
xchg
and
mov
ret
mov
push
scas
outsb
lock
fldenv
outsl
inc
push
cmp
dec
lods
enter
imul
mov
dec
lods
pop
test
mov
divb
xchg
ds
loopne
add
mov
xchg
pop
lret
xor
in
sub
repnz
mov
sbb
pop
faddl
loope
xchg
bound
aam
adc
add
pop
lret
xor
movsl
sub
lahf
sar
cmp
les
jne
pop
fsub
in
enter
mov
xchg
sub
cmpsb
mov
icebp
cmpsb
ficoms
push
and
mov
les
or
shrb
stos
push
adc
pop
push
mov
adc
mov
cltd
mov
stos
cmp
pop
pop
xchg
xor
xchg
lds
cmp
push
in
repnz
jns
int
lods
pop
or
repz
and
outsl
jp
mov
call
lds
pop
into
sub
xchg
imul
cwtl
fsts
lods
loopne
es
pop
loope
rcll
cmp
addb
sub
adc
push
mov
aad
imul
push
push
test
insb
mov
jbe
mov
jo
loop
andb
sub
mov
fwait
cmc
popf
clc
mov
shlb
pusha
das
test
ja
ja
xchg
outsl
xor
mov
std
xor
cli
xchg
sbb
movsb
imul
inc
std
adc
and
jae
sbb
mov
sub
adc
pop
imul
in
and
add
inc
mov
add
mov
lock
dec
cld
daa
sbb
adc
mov
cltd
inc
pop
imul
out
lock
mov
in
ret
sbb
or
xor
gs
xchg
cmp
and
out
je
cli
ss
mov
std
pop
testb
adc
inc
or
stos
hlt
fadds
pop
sub
push
push
cld
lods
dec
inc
mov
push
xchg
xchg
fisubrs
mov
push
sub
lock
jg
jge
inc
mov
push
insb
jecxz
jb
cmpsb
and
or
or
rcr
mov
loop
loopne
je
lahf
push
sti
outsl
mov
jmp
sub
imul
xchg
fmull
mov
pushf
cli
push
mulb
or
pop
or
es
inc
imul
mov
xchg
inc
cs
fmuls
mov
xchg
mov
nop
sbb
iret
leave
daa
cmp
sub
inc
cltd
jp
adc
or
and
es
fimuls
dec
loope
dec
out
jnp
cltd
mov
xchg
popa
outsl
inc
and
lock
or
cs
mov
sub
pushf
mov
or
xchg
mov
loop
jmp
inc
xlat
loop
adc
aad
cmpsb
mov
jmp
or
mov
xchg
fcmovu
xor
dec
mov
cmp
cld
push
jbe
jecxz
jle
push
int3
rolb
push
push
sbb
dec
into
lods
stc
and
in
xor
mov
roll
sbb
cmp
aaa
imul
inc
movsb
in
sub
inc
push
jmp
jmp
sbb
stos
and
mov
mov
mov
sbb
or
mov
movl
cmpsl
rclb
lods
inc
repz
push
out
jmp
sbb
mov
setbe
daa
cwtl
inc
loop
sti
int
and
mov
xor
sbb
and
lods
std
in
mov
cltd
repnz
pop
stos
pop
xchg
pushf
sub
and
fs
push
sub
sub
sbb
pop
xor
jl
arpl
mov
sub
mov
lods
stos
pop
pop
cmp
fnstsw
and
push
test
pushf
cmp
cmp
aad
xchg
icebp
jmp
shll
dec
movsb
ds
stc
pusha
cli
ret
sub
pop
ljmp
add
je
add
insb
cmp
jnp
lfs
test
adc
or
xchg
in
xchg
pushf
call
xchg
ds
mov
xor
cmpsb
dec
xchg
mov
mov
jp
ret
jg
roll
fwait
stos
in
mov
cltd
pushf
std
dec
xchg
sbb
pop
test
or
xor
int3
mov
rcrb
mov
adc
xlat
aas
popf
dec
aam
loope
pop
test
jle
testl
cmc
arpl
cld
test
outsb
mov
aas
cmp
out
into
mov
adc
add
test
cli
sbb
insb
sub
mov
xorb
add
je
out
nop
sub
adc
mov
int
sub
int
test
dec
mov
xchg
mov
xor
xchg
push
push
aaa
cmp
js
ds
stos
fldt
movsl
addb
dec
pop
add
fsubrs
insl
inc
movsl
push
call
jbe
aad
cmp
shrb
rcll
xchg
mov
stos
jge
dec
mov
and
mov
in
pop
daa
ret
push
jle
xchg
out
push
mov
insb
mov
call
pop
mov
test
push
push
cmc
dec
pop
pop
add
call
sbb
frstor
fwait
gs
mov
pop
add
xchg
push
mov
and
mov
sarl
cmpb
imul
loope
jge
adc
fimull
pop
jp
imul
inc
xor
push
outsb
jge
mov
jb
lods
and
nop
sub
das
mov
cmp
int
jg
loop
shlb
repz
cmp
insb
das
loop
dec
jecxz
cltd
ret
dec
cmpsl
loope
push
call
xchg
stos
jp
pushf
ds
fstl
jg
iret
inc
jl
mov
dec
rorb
sub
enter
sub
sub
pop
xor
neg
push
dec
xlat
mov
or
outsb
and
cmp
ja
mov
daa
es
jmp
inc
dec
pop
ret
pushf
lcall
xchg
popa
cmc
xchg
adcl
add
xchg
sbb
cmc
addr16
inc
shrl
ja
aaa
aaa
lock
js
fsubs
sub
call
adc
push
push
ljmp
out
ds
fadds
jmp
imul
or
cmp
les
dec
pop
add
mov
pop
es
jb
shrl
xor
fsubl
insl
fs
scas
dec
lods
jge
or
cmp
mov
cmp
jnp
cli
ljmp
rol
loope
ljmp
in
or
mov
lret
enter
mov
xchg
test
xor
std
mov
dec
adc
cli
dec
lods
icebp
clc
imul
mov
shll
aaa
xor
mov
cmp
addr16
sub
std
xor
mov
cmpsl
mov
xchg
int
insl
dec
fisubrl
jmp
pop
dec
aaa
cmp
dec
push
sub
xchg
je
xor
cmc
push
push
shrb
ret
popf
pop
in
popa
hlt
adc
push
jns
mov
pop
lea
aam
test
xabort
mov
mov
ja
sbb
pusha
jo
add
mov
inc
fcmove
mov
call
mov
ja
rcll
divb
cmp
mov
dec
mov
popa
mov
xchg
xchg
add
hlt
mov
int3
inc
dec
xchg
or
adc
add
mov
jl
mov
sub
inc
cmpsl
mov
loop
lcall
movsb
sbb
mov
push
not
hlt
loope
into
mov
sbb
popf
inc
in
popl
jae
imul
test
push
adc
inc
pop
insl
dec
imul
movsb
xchg
fcomp
cwtl
dec
into
loope
push
mov
sub
aad
aas
test
dec
ja
sbb
xlat
adc
xchg
mov
jnp
fimuls
adc
sub
cmpsb
insb
punpckhwd
cli
repnz
int3
popa
push
mov
shrl
add
test
inc
or
lcall
xchg
push
xor
add
es
lret
jl
in
scas
jle
adc
stos
nop
mov
adc
cmp
dec
or
daa
mov
adc
push
adc
mov
pusha
ret
les
movsl
outsl
push
mov
xchg
mov
rcl
scas
inc
and
rcrl
movsl
push
rolb
dec
cwtl
mov
jnp
push
mov
enter
jmp
pop
cltd
cmp
sub
inc
testb
sbb
nop
insl
xor
rolb
movsb
xlat
xchg
push
in
jge
mov
mov
insb
sbb
pop
jl
mov
out
dec
adc
jae
popa
adc
scas
push
sbb
push
cmp
sub
gs
popl
pop
daa
int3
add
test
push
push
xchg
mov
dec
jnp
xchg
mov
shlb
in
lds
jne
mov
push
loop
out
hlt
push
sbb
fisubl
sbb
inc
movsl
mov
lods
paddusw
dec
and
jge
std
xor
lods
or
sub
invd
sub
jo
add
aad
push
test
mov
lea
and
out
push
xlat
scas
movsb
fistl
scas
or
and
stos
and
pop
jge
jmp
dec
cmpsl
dec
sbb
sub
cld
or
aam
adc
cwtl
jmp
cmpsl
mov
dec
xorl
ret
hlt
jae
loopne
pop
pop
push
adc
cmp
test
rcll
subb
inc
push
and
cwtl
ret
jne
repz
jmp
ja
testb
dec
cmpsb
mov
lahf
xchg
lahf
cltd
neg
in
dec
mov
stc
std
push
add
push
iret
mov
add
and
jbe
jns
mov
pop
add
dec
imulb
dec
rolb
jle
sbb
mov
inc
aam
jno
mov
mov
stos
jne
fcoml
xchg
mov
mov
xchg
sub
aas
mov
sub
add
fadds
mov
adc
jne
mov
mov
adc
jnp
xchg
out
std
or
sbbl
sub
cld
shlb
or
stc
shrb
or
out
scas
int
push
dec
and
jmp
lods
jl
mov
cs
adc
stos
mov
adc
fadds
out
mov
cmp
mov
outsb
stos
or
lcall
sub
cmp
lahf
and
rol
daa
push
pop
push
pop
sbb
add
pop
scas
xor
fdivp
cmp
sub
fs
outsb
mov
mov
jbe
daa
jns
sbb
push
mov
lret
aad
pop
push
insl
repnz
stc
cmp
les
fsubs
lods
xchg
sbb
cmp
jne
lret
jne
movsb
adc
sarl
cmc
inc
pop
adc
neg
cmp
movsl
inc
mov
add
pop
cmpl
add
sbb
dec
pop
push
sbb
pop
adc
clc
mov
imul
popf
sbb
pop
jp
adc
xchg
aaa
sub
xor
sbb
jg
fistpl
aad
and
sbb
jp
cltd
sbb
aaa
dec
cmp
das
notl
push
push
insb
or
push
popf
xchg
sbb
mov
xchg
inc
dec
dec
cmp
or
or
stos
insl
adc
stos
shlb
es
or
mov
jb
int3
lock
decl
mov
lods
mov
out
dec
movsb
pop
pop
cld
mov
clc
and
adc
and
adc
ss
es
in
jg
into
sti
mov
packsswb
rsqrtps
stos
xor
shrb
loop
or
mov
add
popf
dec
in
mov
adc
xchg
rorb
sub
push
push
jmp
outsb
add
repnz
imul
jo
push
das
rorl
dec
push
imul
fwait
sbb
mov
jecxz
mov
push
lahf
pop
jl
test
ja
loope
into
pop
add
mov
push
jge
stos
push
jmp
adc
sub
cmp
icebp
pop
mov
fildl
fildll
cmp
lcall
lock
sub
repnz
cmp
mov
lds
repnz
shrl
push
xor
jmp
fisttpl
and
adc
mov
or
mov
rcrl
pushf
mov
jns
pop
pushl
dec
cld
inc
or
sub
cmp
ret
xchg
enter
jge
ret
lea
push
push
repz
data16
and
inc
int
mov
aam
je
mov
fnsave
in
cmp
cld
pop
sarb
orl
mov
lods
fs
pop
mov
cs
xchg
jle
mov
push
jle
aam
mov
sbb
dec
pop
orl
xlat
add
and
mov
mov
mov
mov
daa
or
enter
sub
add
cmp
imul
ret
add
fidivl
pop
fldt
mov
and
cmp
cmp
cmp
mov
sti
sbb
ja
mov
push
cmp
lock
push
xor
shll
addr16
addr16
sub
filds
pusha
mov
hlt
cld
aam
popf
movsl
xchg
sub
adc
movsb
rol
loope
push
lret
or
jo
jl
repz
fiadds
mov
inc
lea
inc
or
push
jno
in
mov
xor
jnp
nop
je
sbbl
in
inc
pop
jo
aas
push
fwait
dec
sub
add
dec
and
lcall
jmp
jp
xor
movsl
clc
popa
add
filds
nop
inc
shlb
sbb
push
add
mov
in
test
pushf
int
add
lds
stos
dec
sub
dec
ret
mov
cmp
fwait
push
test
mov
jmp
pop
int
sahf
mov
or
jb
arpl
cli
pop
inc
insb
xchg
ds
inc
loopne
xchg
test
out
adc
mov
push
jle
out
cmp
int
popf
sub
imulb
mov
pop
cwtl
dec
daa
pop
fwait
pop
jbe
mov
pop
and
add
pushf
movsb
cmp
shll
sub
or
cltd
sarl
pop
je
les
push
scas
cs
adc
test
loope,pt
adcl
mov
inc
adc
and
repnz
push
jl
sbb
push
dec
scas
jbe
adc
adc
mov
cltd
arpl
leave
or
repz
pop
rorl
jnp
push
insl
pop
hlt
jno
dec
push
xchg
push
sarl
ja
push
or
mov
frstor
das
lock
mov
loopne
into
jnp
add
xor
dec
pop
lahf
mov
pop
push
mov
jae
xchg
call
push
sub
mov
mov
in
aam
mov
mov
jo
rorl
int3
jg
pusha
xor
dec
mov
and
daa
aas
adc
out
push
or
test
jmp
mov
das
mov
adc
mov
stos
jp
pop
cmp
inc
or
nop
outsl
das
jb
lock
mov
mov
arpl
adc
pop
ja
add
pop
xchg
data16
fnstsw
pop
add
dec
lds
xlat
rol
std
cmp
push
jmp
xchg
out
or
mov
mov
out
in
adc
pop
mov
stos
jno
fistl
outsl
mov
xor
lret
inc
clc
mov
or
jecxz
adc
insl
pusha
lret
dec
push
push
jae
clc
in
testb
aad
test
jnp
pop
pop
iret
out
in
aad
mov
cmp
xlat
adc
cmp
shl
popa
fs
mov
movsb
loopne
movsb
repnz
inc
in
into
lea
xchg
sub
repz
adc
lds
jg
push
rolb
arpl
fnsave
test
stos
cmp
clc
pusha
cmp
inc
fs
push
sbb
jae
inc
mov
and
cs
lret
movsb
inc
popw
ficoml
repz
mov
testb
mov
stos
std
cmp
inc
xchg
and
mov
xchg
pop
aad
cmp
out
cltd
ret
insb
test
mov
cltd
pusha
xor
adc
add
cs
mov
testl
test
cmc
shll
mov
fdivrs
sbb
rorb
or
outsb
adc
jg
sarb
pop
lea
mov
enter
push
xchg
aas
and
sti
cmc
fs
lahf
mov
scas
icebp
inc
ja
inc
add
push
xchg
shrl
add
inc
dec
mov
add
stos
shr
mov
loop
lea
in
int3
fs
aaa
cmp
adc
jne
sub
or
xlat
rcrb
adc
mov
movsl
sub
dec
rcll
jge
or
imul
jle
lret
insb
and
adc
cld
push
pop
pusha
ja
mov
cmc
dec
clc
jl
dec
pop
push
shrb
inc
sbb
sti
dec
mov
dec
aas
jae
inc
adc
sub
push
test
xchg
mov
add
ljmp
and
mov
andl
jo
cltd
mov
mov
lcall
nop
les
rol
shl
movsb
es
pop
mov
cmc
cmpsb
cmp
mov
mov
loop
add
or
lcall
scas
adc
mov
sub
imul
sarb
dec
xchg
in
insb
sti
xchg
dec
cmp
pop
ss
addr16
lcall
ja
jg
xor
mov
sbb
mov
loope
mov
cwtl
pushf
bound
jp
aaa
xchg
adc
adc
sub
push
adc
hlt
aaa
cmpsb
pop
data16
int
pop
jge
daa
inc
and
xor
add
jmp
insl
sub
xchg
in
xchg
add
mov
fiaddl
out
loope
outsl
xor
out
outsb
and
mov
sub
jecxz
popa
jns
in
loop
jle
xor
dec
mov
mov
mull
jo
cmp
mov
fisubrl
mov
jno
nop
repz
mov
push
movsb
popa
dec
mov
add
loopne
xor
mov
das
shll
push
std
inc
xor
iret
hlt
push
fwait
daa
sub
shlb
pop
xor
cmp
mov
jle
mov
mov
lea
clc
cmpb
rcl
mov
pop
sbb
ret
fstps
dec
test
push
mov
push
inc
jae
mov
push
in
mov
adc
xchg
cwtl
jp
mov
or
xor
mov
adc
into
xor
mov
sbb
xchg
aaa
push
stos
iret
fistpll
mov
icebp
xchg
daa
in
mov
jecxz
pop
add
enter
jg
mov
or
or
fistpl
mov
cltd
cld
adc
push
addr16
jnp
andb
cmc
addr16
push
xchg
xor
dec
scas
ds
idivl
mov
lods
inc
sbb
je
jmp
pop
jns
mov
xchg
orl
dec
outsl
fucomip
xchg
imul
cld
stc
mov
adcl
leave
lds
inc
mov
pop
and
imul
add
xor
sbb
dec
repnz
push
push
divl
divl
insb
push
add
push
shlb
xchg
mov
stos
sbb
and
inc
in
sti
cmp
mov
mov
push
popf
jb
imull
mov
rclb
in
fdivrs
in
push
repnz
lea
pop
dec
les
lods
in
lods
mov
loopne
mov
dec
stos
mov
xchg
push
cmp
addl
add
aad
cmp
sub
jbe
insb
subl
sub
addr16
aad
or
pop
mov
dec
inc
cli
sub
stos
popf
imul
pop
jb
inc
push
orl
shlb
jnp
jmp
cmp
fldt
iret
loop
cs
dec
jno
mov
push
fldpi
sbb
repnz
mov
xor
jnp
push
cmp
inc
fstpl
sub
insl
test
jnp
fyl2x
xlat
cmpsl
nop
sbb
add
jnp
faddp
lods
inc
jmp
daa
mov
fisubs
mov
cmp
iret
shr
add
sbb
jno
std
fadds
outsb
push
adc
rorl
rolb
movsl
mov
loope
ss
ds
loop
add
pop
dec
cld
mov
enter
sbb
sti
cs
lods
and
aas
idivl
into
subb
arpl
outsb
outsl
push
jle
sbb
stos
jbe
lcall
inc
or
jno
shll
nop
dec
inc
xchg
mov
sbb
fstps
jmp
in
and
xchg
cli
cmp
sub
clc
lcall
mov
jbe
repnz
sbb
dec
ret
out
mov
call
sub
sub
fdivl
sbb
ss
inc
imul
cmp
or
sub
pop
in
cmpsb
insl
xchg
jnp
in
pop
filds
sbb
mov
ret
insl
pop
xor
xchg
adc
xor
push
and
notb
les
divl
lea
push
out
cmp
addl
outsl
adcl
in
jns
scas
mov
orl
pop
lcall
not
jb
and
jne
lcall
push
jg
fistps
cwtl
inc
sub
movsl
mov
scas
lar
cvttps2pi
mov
lods
inc
pop
pop
data16
push
icebp
loope
aam
leave
and
cmc
sub
adc
fwait
movsl
xor
xor
push
nop
dec
or
cwtl
test
push
stc
call
mov
mov
mov
pusha
movsl
test
and
pop
jne
xor
aaa
adc
mov
jmp
sahf
stos
lods
stos
push
mov
adc
xor
popa
and
mov
or
mov
ja
repnz
pop
mov
inc
test
ja
bound
enter
rcr
mov
cli
push
cli
push
mov
sbb
push
movswl
ret
sub
adc
pop
mov
inc
test
xor
pop
push
inc
sbb
xchg
adc
cltd
sbb
inc
insb
cmp
aas
in
cmp
mov
adc
pop
bsf
lret
imul
pop
je
testl
push
insl
inc
jmp
popf
int3
cs
xchg
pop
adc
mov
mov
movsl
rorb
pop
xor
in
lret
pop
xor
cmp
sub
je
adc
dec
mov
sti
adc
xor
adc
mov
fsubrl
xchg
jg
jle
jae
insb
add
jl
icebp
test
outsb
push
outsb
gs
shlb
movsb
add
outsl
jg
mov
mov
lock
xor
xchg
ja
outsb
cmp
stos
adc
loop
and
add
xlat
jae
loope
xchg
daa
pop
inc
or
cmp
dec
int
arpl
imul
jmp
cmp
ret
dec
arpl
mov
jg
push
hlt
xor
lock
and
sub
xchg
mov
aad
jb
fldl
imul
jle
imul
push
mov
mov
mov
in
pop
shrl
subl
jl
imul
arpl
sbb
pop
imul
mov
xchg
lret
inc
pop
fstpl
lcall
stos
cmp
test
inc
dec
inc
push
lods
push
mov
leave
adc
pop
xchg
js
mov
jb
fnsave
push
shll
int3
popf
fdivrs
mov
add
ret
pop
lahf
shlb
and
imul
or
out
out
dec
xchg
cmp
adc
lods
aam
int3
fmull
pushf
pop
inc
int
mov
jmp
enter
xchg
mov
mov
out
nop
lds
shrb
mov
push
dec
rorl
mov
stos
inc
adc
inc
or
push
cs
imul
adc
mov
inc
and
idivb
push
sbb
pop
aas
jo
and
push
mov
mov
pop
shrl
fsub
xchg
jge
mov
dec
outsl
xor
sar
les
jmp
mov
stos
dec
xchg
nop
push
cmp
sti
push
call
xor
call
sub
add
popl
mov
popf
int3
leave
movsb
pop
inc
sub
xor
ds
ret
jae
in
mov
std
fistl
sahf
xor
ljmp
and
dec
insl
in
pop
xorl
cld
aas
adc
inc
pusha
lds
addr16
mov
aas
je
or
adc
rcl
cmpsl
test
add
pusha
or
pop
push
xchg
dec
out
pop
pop
jae
insl
sti
call
ss
and
push
push
aas
adc
or
cmp
lock
js
add
popa
xchg
cmp
xor
push
int
psrlw
inc
mov
push
mov
cli
subb
shrb
imul
popf
sarb
mov
adc
in
call
mov
dec
outsl
stc
cs
jne
int3
or
mul
loopne
ljmp
daa
sti
mov
lcall
xor
and
mov
mov
hlt
test
out
or
inc
mov
xchg
dec
cmp
or
mov
jecxz
js
ss
mov
iret
adc
aad
adc
dec
ljmp
dec
fwait
or
nop
sbb
out
lods
dec
xchg
fwait
add
add
fists
dec
lahf
aam
ret
in
push
push
mov
and
cmp
in
jmp
mov
inc
cmp
push
xor
aad
pop
test
and
insl
int
aaa
dec
sub
sbb
setb
jge
mov
in
xor
and
cmp
pop
int
repz
dec
outsl
in
mov
mov
xor
push
lock
in
rol
pop
out
dec
add
ficomps
cmp
out
fwait
jo
jg
xlat
mov
pop
pop
imul
imulb
orb
mov
fldz
lods
mov
iret
mov
jnp
or
scas
popa
aam
jmp
test
in
icebp
mov
or
or
loope
adc
fsts
outsl
test
flds
clc
cs
dec
cli
pusha
adc
adc
ds
int
repnz
jno
xor
mov
jno
cmp
nop
roll
les
loopne
into
xchg
in
mov
cmpsb
test
lret
cmp
jnp
mov
out
fcomps
popa
xchg
mov
mov
dec
testb
gs
xchg
lods
rolb
add
mov
mov
xchg
and
jecxz
call
jg
add
cmpsl
mov
repnz
out
rcrl
pop
add
lods
push
mov
add
repz
mov
lods
paddsw
hlt
xchg
jg
std
add
sarl
subl
std
and
loopne
int
mov
in
fists
mov
or
sub
mov
das
fnstcw
push
lods
jb
inc
int3
scas
lds
jmp
push
pop
mov
sub
iret
push
int3
call
mov
jmp
aad
dec
pop
fistps
lods
js
insb
inc
arpl
inc
push
scas
inc
sub
push
xchg
in
out
xchg
mov
push
icebp
xchg
mov
sbb
mov
inc
add
pop
int3
outsl
mov
inc
or
add
pop
leave
xchg
dec
fbld
sub
testl
insb
clc
add
in
pop
fidivl
popl
movsl
jle
and
test
in
das
notl
fcmovbe
fwait
scas
push
mov
pop
int
jge
in
adc
push
add
add
mov
or
in
sub
add
lcall
add
leave
popa
jg
add
adc
std
xchg
inc
hlt
das
inc
jnp
sub
loop
outsb
leave
mov
neg
out
cmp
in
inc
jge
cmpsl
out
imul
push
push
pop
mov
mov
cltd
js
xorl
mov
or
jge
in
out
jp
sbb
adc
lea
jo
iret
fists
test
sbb
and
jno
mov
sti
fistl
cmpsb
stc
sbb
cltd
pushf
mov
adc
and
sbb
cwtl
mov
pushf
push
jmp
ja
mov
add
add
ja
mov
fwait
push
and
clc
negb
test
arpl
push
iret
push
or
sbb
sbb
data16
dec
pop
leave
in
fstl
sbb
inc
dec
lods
data16
mov
jbe
les
dec
xchg
outsb
in
call
add
mulb
movsb
mov
jmp
cwtl
pop
insl
dec
decl
in
pop
out
loopne
loop
in
mov
je
xor
sbb
xchg
cltd
pop
mov
icebp
pop
fs
dec
fnstenv
cmovo
pop
rclb
ffree
mov
xchg
sbb
sub
lods
mov
lods
sub
cmp
jecxz
pop
inc
jnp
xor
les
mov
call
push
les
lods
lock
add
inc
dec
inc
and
adcl
das
popa
loope
std
or
inc
sbb
add
push
sahf
leave
div
inc
or
push
pusha
or
adc
mov
iret
je
mov
test
int3
cwtl
dec
jge
pusha
les
xchg
imul
dec
inc
inc
iret
pop
fstpl
lret
popa
mov
in
mov
movsb
cmc
adc
mov
cs
push
test
pop
leave
sbb
lret
sub
mov
mov
testb
lcall
or
cli
sub
add
or
fsub
jns
dec
push
xchg
ja
imul
xchg
test
adc
add
out
loopne
call
cwtl
ljmp
adc
aam
xchg
xor
sarl
cmc
iret
repz
fs
jmp
or
addr16
popf
pop
shrl
stos
push
addr16
rcll
ss
lcall
or
dec
and
mov
adc
and
cmp
inc
cld
mov
mov
rep
outsb
adc
data16
dec
aaa
mov
mov
cmp
xor
sub
rorb
mov
push
mov
push
repz
inc
ret
je
into
popa
dec
ficomps
mov
cmp
sbb
pop
mov
imul
push
out
mov
mov
adc
dec
jmp
lea
lcall
outsl
sbbb
repnz
adc
sbb
push
clc
aas
dec
cmp
repz
in
xchg
loopne
repz
cltd
and
arpl
cmpsw
sbb
arpl
insl
xor
stos
into
add
or
pop
sub
cmp
les
cmpsb
std
ret
es
push
cmc
pop
loope
ljmp
out
test
jle
adc
std
lea
push
test
push
into
arpl
and
movsl
adc
adcb
xor
xor
or
popf
lds
bound
std
sub
cmp
outsb
inc
xor
in
sbb
repnz
mov
inc
std
jnp
or
dec
push
gs
std
lret
xchg
cmp
sbb
mov
fidivrs
fadds
jmp
hlt
pop
xor
xchg
pop
jmp
fwait
and
cmp
rcl
cltd
add
mov
out
int
cmp
mov
jge
sub
and
adcl
out
cmp
arpl
mov
mov
jg
mov
cld
xchg
jg
sbb
xor
aam
imul
or
adc
dec
fidivrl
add
jne
ds
jle
aam
add
sub
mov
push
inc
push
xor
cwtl
and
imul
call
dec
mov
cli
jae
cmp
or
out
and
mov
addr16
push
cmp
mov
cmc
inc
test
dec
inc
sub
or
gs
inc
or
lret
sbb
adc
mov
les
jecxz
jp
dec
testl
xor
mov
mov
scas
ret
push
inc
xor
pop
aam
test
mov
popf
mov
popf
mov
movsl
rol
inc
xchg
and
pop
cltd
pop
call
sti
mov
push
clc
jne
mov
jo
fbld
imul
scas
test
int3
or
aas
and
sub
test
sbb
push
xchg
adc
fstpt
sbbl
adc
js
ja
cmp
dec
jge
pusha
push
addl
in
dec
and
roll
add
or
and
sbb
std
ret
push
jg
in
fsts
in
lods
xor
shrl
in
fisubrl
mov
and
jo
push
aad
lret
mov
fidivl
fcmovbe
aaa
in
leave
ds
mov
fidivrl
inc
in
or
cmpsb
jnp
dec
imul
sbb
scas
decl
mov
in
cmp
mov
shrb
in
mov
in
dec
mov
movsb
adc
inc
sub
test
repz
lret
test
popf
or
repnz
mov
add
clc
push
dec
push
adc
sbb
out
bswap
jae
mov
jecxz
je
daa
divl
insl
cmp
xlat
inc
insl
mov
cmp
inc
jne
pop
push
xchg
out
or
mov
lret
imul
push
lret
lcall
cmp
ljmp
out
add
mov
test
xchg
inc
lret
or
test
and
movsl
mov
in
lds
push
fstpt
in
mov
stc
pop
xchg
and
jno
into
and
push
loopne
or
leave
aaa
dec
pop
push
fmul
out
pop
push
test
or
in
pop
test
inc
mov
outsb
add
inc
divb
sti
jg
in
sub
arpl
cmp
sub
push
xor
pop
ret
shlb
add
jb
cmpsb
mov
cltd
jge
dec
addr16
cli
adc
scas
sbb
and
or
xlat
sub
sbb
out
test
pusha
dec
xor
insl
lds
mov
add
pop
mov
jecxz
cld
cld
mov
imul
cld
push
dec
lods
fdivl
ds
pop
sbb
jae
lret
or
sbb
and
adc
cmp
out
fistpl
mov
xor
xchg
fimuls
div
sub
mov
test
test
xor
js
and
imul
jo
dec
or
dec
lret
js
cli
movsl
add
outsl
push
inc
mov
add
mov
daa
sub
adc
out
cmp
mov
xor
dec
push
sbb
and
add
jmp
loopne
mov
xor
dec
sub
test
mov
mov
pop
pop
cli
inc
push
pop
in
mov
mov
pop
ss
popa
mov
add
fld
call
insb
mov
mov
mov
lods
mov
xor
icebp
mov
push
inc
rcrb
sti
in
notl
cld
int3
cltd
mov
sahf
mov
cmp
pop
in
jbe
lcall
xor
mov
add
xlat
xorl
lret
pop
out
push
or
ret
push
and
push
push
out
popa
js
jbe
gs
dec
test
cmpsb
cmp
fistps
adc
push
push
xchg
sub
addr16
ret
add
stc
test
idivl
pop
and
sahf
dec
inc
fwait
decl
xor
mov
sub
cmpsb
pop
cmp
lahf
push
int3
pop
and
fs
and
push
mov
dec
daa
xchg
in
sbb
mov
push
inc
aam
mov
jne
pop
lods
mov
call
mov
jae
xchg
push
cmpsb
jle
push
cmp
jmp
std
cld
mov
or
mov
loop
xor
les
fmuls
pop
mov
push
aad
repz
adc
inc
jmp
pop
nop
pop
sub
into
data16
imul
outsb
addr16
insl
in
loope
jp
stc
adc
pop
cmc
andb
cmc
mov
stos
mov
cmp
sbb
cwtl
xchg
inc
push
pop
cmp
pop
add
idivl
cmp
sahf
aam
or
lret
rol
or
mov
shr
lods
xchg
jne
out
push
add
sbb
push
outsb
repz
lea
pushf
fistl
and
jns
pop
lods
stos
shlb
push
inc
stc
hlt
push
test
lock
test
pusha
loop
mov
and
ret
jle
inc
lods
outsl
push
pusha
lods
mov
or
shr
dec
int
or
jge
js
ja
test
xor
dec
orb
push
insl
adc
fistpll
push
add
test
imul
add
dec
cltd
pop
fsubrl
inc
and
loop
add
aad
enter
sub
push
push
inc
std
push
je
loope
mov
inc
cmp
ja
int
sbb
mov
jno
popf
pusha
test
pop
jb
js
stos
stos
mov
inc
pop
mov
xor
adc
rcrl
push
mov
pop
repz
adc
aas
sbb
sbb
jns
pop
mov
cmp
dec
in
sbb
lds
orl
jo
sub
les
add
sbb
cmp
daa
sub
aaa
push
xchg
sub
push
jne
inc
mov
fldcw
add
add
ja
in
popf
fsubp
mov
lcall
and
scas
cmp
and
int
xchg
jl
jl
pop
fnsave
push
in
ja
rclb
ds
pop
jno
insb
cmp
repz
in
jno
enter
insb
push
and
push
mov
mov
lods
ficoms
pusha
sub
xchg
inc
test
pusha
outsl
ljmp
adc
and
mov
movsl
fs
mov
xor
test
cmp
xor
call
cmpsb
mov
aam
add
xchg
and
lcall
bound
fisubl
fstpl
inc
pop
mov
push
cmp
rcrl
jmp
sub
ret
xchg
rcll
aam
iret
into
sahf
adc
dec
in
adc
filds
cli
jno
aaa
xchg
adc
rcrl
insl
jno
fwait
inc
push
mov
jg
repnz
test
insb
jno
shrd
mov
sbb
orb
mov
inc
or
sbb
and
mov
testb
xor
push
inc
adcl
lahf
adc
sbb
dec
clc
dec
cmp
cld
outsl
call
icebp
int
int
aas
jge
jne
enter
popf
rcll
cmpl
arpl
in
rorl
orl
jg
xchg
jae
xor
mov
push
and
shlb
mov
jne
jnp
std
jns
in
xchg
push
mov
fucom
inc
fbstp
inc
movsl
xor
jae
ret
and
fwait
sbb
bound
adc
and
dec
xor
leave
inc
xchg
dec
mov
ds
pop
add
mov
test
xchg
xchg
or
add
fimull
out
jmp
cmpsb
xchg
push
stos
loop
cmp
jmp
adc
les
push
xchg
mov
shlb
daa
xchg
push
repz
or
outsb
scas
pop
pop
and
jb
cmpsb
sub
hlt
inc
jb
push
addr16
loop
daa
add
fwait
adc
pusha
sbb
enter
inc
mov
pushl
outsl
jecxz
sub
les
sbb
mov
data16
int
insl
inc
lds
mov
fbstp
jecxz
mov
shlb
jg
movsb
sub
push
add
add
fs
mov
test
adc
dec
mov
inc
xorps
nop
push
mov
pushf
fbstp
in
mov
rorb
mov
scas
xor
push
add
mov
push
cmp
mov
cwtl
xor
and
xor
cmc
mov
aam
adc
sbb
subl
mov
mov
jmp
in
jle
xchg
outsl
insb
out
daa
faddl
mov
and
sbb
jae
or
xor
in
mov
sbb
sub
sub
sti
xchg
xchg
stos
push
or
xchg
fimull
test
push
test
push
jl
popl
cmpsl
push
cmp
rorl
sbb
xchg
mov
or
inc
mov
cmp
aas
cmp
xchg
push
jno
rep
data16
push
add
lret
insb
jo
inc
je
ja
and
mov
xchg
pop
sti
inc
mov
dec
xor
test
addr16
cmpsl
ds
aas
loopne
daa
jo
test
movsl
sub
sbb
sub
call
xor
jmp
jl
sub
test
and
jno
lret
clc
sahf
or
inc
mov
push
out
and
movsb
in
inc
outsl
sbb
sti
bound
std
std
xchg
dec
lcall
pop
ljmp
test
push
sbb
insl
movsl
in
jge
insb
movsb
sbbl
int3
jp
pop
into
call
cmpl
out
mov
add
xor
mov
scas
mov
mov
js
dec
add
pop
fxtract
cli
mov
cmp
xlat
xchg
out
sbb
loop
js
inc
aad
add
jae
loop
les
sahf
mov
push
push
push
popa
mov
addr16
popa
xchg
in
mov
push
add
jne
gs
outsb
pop
aad
xor
sbb
jb
ficompl
dec
jle
jmp
subl
outsl
popf
inc
and
mov
or
cmp
push
scas
int
dec
lret
push
xor
jno
and
mov
adc
gs
jo
pop
adc
mov
sbb
sub
xchg
mov
cmp
sbb
mov
cli
jae
out
mov
inc
push
xchg
sub
adc
sub
fs
loop
or
jp
dec
ret
mov
out
je
mov
fldt
push
mov
mov
sub
cmp
mov
adc
ds
mov
call
outsb
cwtl
dec
loopne
cmp
jmp
xor
loop
sbb
push
addr16
mov
xchg
dec
cmc
decl
setbe
xchg
inc
dec
jne
jne
add
data16
stc
xchg
nop
xor
enter
xor
mov
push
sti
clc
ss
push
es
jb
xchg
adc
fstl
outsb
jbe
fisttps
mull
xchg
cmp
jmp
xchg
mov
in
loop
push
jbe
xchg
sbb
aam
inc
lock
xor
lock
ss
dec
mov
lock
imul
in
cltd
leave
scas
mov
flds
fbld
jnp
sub
mov
fidivrs
ret
cmp
sub
dec
mov
sub
sbb
pop
in
lds
out
iret
outsl
push
out
pop
aas
pop
dec
fimull
cmp
lock
push
inc
mov
xor
jg
sarb
fadds
sbb
sub
clc
sub
repnz
add
stos
testl
mov
lcall
jns
mov
aas
ljmp
int
mov
outsb
pop
out
mov
ret
inc
sbbl
sbb
adc
mov
or
inc
fprem
mov
jge
xchg
jo
rcll
jp
int3
int
gs
sbb
mov
mov
sbb
fld1
sar
xorb
daa
xchg
pushf
gs
inc
pop
in
push
leave
xchg
mov
jmp
xchg
xor
dec
mov
outsb
insl
mov
mov
mov
xchg
notl
inc
dec
jecxz
mov
ljmp
int
lods
jl
mov
std
pop
hlt
lods
jnp
repz
out
mov
mov
jns
cmp
loopne
scas
std
jb
add
xchg
cwtl
popa
cwtl
cld
jle
fnstenv
out
loope
and
out
frstor
ljmp
cmpsb
fldenv
inc
mov
aas
and
ret
xor
xchg
add
cmp
call
in
shr
into
jbe
fyl2x
ret
out
dec
mov
sub
xchg
aas
sub
mov
dec
mov
sub
mov
pushf
test
daa
cmp
add
push
mov
jne
ja
arpl
sub
iret
cwtl
leave
inc
sahf
dec
jmp
add
sbb
mov
fisttps
stc
push
imull
sbb
aad
or
sbb
jne
jecxz
push
fiaddl
jo
push
aas
outsl
aas
mov
aad
int
xor
daa
sti
sti
je
sub
xor
call
jmp
jmp
or
shll
cwtl
dec
pop
repz
xchg
outsl
aam
jns
sbb
mov
add
int
lahf
movsb
jne
inc
pop
fwait
and
pop
cs
or
jmp
sbb
mov
push
and
adc
cs
mov
out
mov
pop
loopne
test
push
adc
sbb
test
out
bnd
push
hlt
jne
cmpsl
or
cmp
dec
xor
adc
shll
sbb
in
enter
add
pop
mov
mov
add
pop
xor
sub
push
xor
sub
jno
sub
mov
adc
imul
sbb
int3
fdivrs
fldenv
xor
mov
xchg
and
push
xchg
arpl
jo
mov
xchg
add
mov
xchg
mov
jmp
mov
mov
and
xor
ss
daa
inc
dec
popa
mov
pusha
pop
lret
test
jle
push
xor
add
jnp
test
cmp
rorb
adc
sub
outsb
mov
movsl
out
cmp
sahf
xchg
call
pop
addr16
xchg
into
idivb
or
sub
dec
pop
mov
call
hlt
pop
std
ljmp
out
mov
jg
pop
mov
xor
mov
push
mov
mov
or
movsb
fsub
mov
inc
push
xchg
mov
jbe
movsb
int
add
add
xlat
sub
mov
std
loopne
rorl
lds
adc
xchg
jge
sahf
mov
push
jnp
and
add
in
das
add
hlt
inc
icebp
jno
aaa
xlat
dec
repz
imul
xchg
push
scas
cmpsl
dec
cmpsl
add
into
mov
pop
and
or
dec
inc
pop
or
ficomps
xor
pop
sbb
sar
mov
sbb
dec
inc
jb
out
js
nop
xor
lods
call
xchg
cmpsl
xchg
add
lds
jns,pt
jl
fcomi
and
push
or
pop
arpl
test
inc
xchg
std
sarl
lock
pop
adc
push
dec
clc
lahf
xor
es
mov
cmpsb
sbb
mov
adc
sub
jne
dec
lahf
push
jo
outsl
push
filds
xor
sub
pop
imul
mov
inc
test
bound
dec
fcmovnbe
pop
lock
das
and
jne
inc
imul
and
mov
pop
jecxz
xchg
fildl
mov
inc
sub
bound
mov
sub
dec
rcrb
jmp
or
inc
jbe
fs
stos
iret
ficoms
push
push
adc
cmp
sarl
sub
out
and
dec
sub
out
sub
popa
add
cld
gs
das
dec
aaa
repnz
les
xor
les
insb
js
daa
mov
iret
dec
fbld
pop
sub
adc
pusha
ret
inc
sbb
xchg
repz
pop
sarl
es
jmp
mov
mov
aaa
push
ret
pop
lock
faddl
xor
pop
jb
bound
xchg
jbe
mov
aas
mov
sub
and
test
cwtl
aaa
inc
scas
cld
mov
incb
fistl
cmp
pop
in
daa
loopne
dec
mov
add
into
mov
daa
xlat
iret
xor
fstpt
fs
jne
pop
dec
lcall
dec
inc
enter
test
and
mov
scas
out
setns
in
sbb
adc
cmp
das
push
imul
mov
stos
enter
jb
out
cmpsb
jp
push
mov
js
push
inc
xchg
pop
fwait
and
shll
aam
cli
test
or
in
sub
addl
sub
cmp
out
mov
push
or
mov
sub
xor
cmp
adc
jns
mov
jbe
or
jb
out
jg
adc
nop
lods
push
jge
mov
popf
or
cli
mov
in
inc
sbb
lret
add
mov
dec
sbb
mov
mov
stos
sbb
gs
xchg
mov
and
or
insl
das
inc
mov
inc
xchg
test
call
xor
mov
jns
insb
push
cmp
mov
fisttpl
and
mov
les
rcrl
dec
repz
or
popf
push
negb
mov
repnz
call
mov
in
ret
xor
push
daa
cmpsb
push
and
xor
or
out
sbb
mov
pop
push
es
xor
jecxz
jg
imul
outsb
xchg
test
movups
inc
or
adc
pusha
xor
pmaxub
mov
mov
jno
sbb
es
sbb
in
insl
ss
add
pop
sti
fisttps
int
mov
add
mov
inc
xchg
je
fsts
or
addr16
jne
clc
movsb
pop
imul
mov
inc
loope
aaa
dec
out
mov
into
pop
shlb
dec
jle
mov
xchg
mov
xchg
repnz
sub
dec
cltd
imul
test
mov
iret
in
scas
and
orl
xchg
data16
push
loopne
arpl
test
push
mov
add
out
bound
out
inc
mov
adcl
std
int3
xor
je,pt
xor
xchg
jge
sbb
fdiv
mov
clc
pop
jbe
add
sbbl
test
cmp
test
or
in
icebp
nop
mov
sbb
lods
jne
nop
dec
dec
cmpsb
data16
enter
inc
test
insb
fs
or
int3
andl
mov
fs
cmpb
test
outsl
mov
dec
cltd
hlt
int3
aad
es
stos
xor
arpl
andl
or
dec
xchg
inc
fcmovnbe
push
push
sbb
mov
xor
cmp
mov
xchg
lods
fidivrl
mov
lock
sbb
pop
stc
jl
mov
dec
and
arpl
jae
in
adc
xchg
in
xor
cs
dec
dec
cmc
xchg
call
adc
scas
jnp
xchg
test
or
les
popf
addr16
aam
repnz
ret
scas
pop
or
add
dec
dec
imul
dec
xor
insb
pop
fsubrp
mov
daa
sub
mov
cld
nop
jne
fdivs
pop
daa
out
repz
push
inc
cs
shll
or
jl,pt
testl
scas
cmc
mov
sub
lcall
inc
int
inc
dec
or
in
mov
xchg
lcall
stc
fistpll
or
push
and
scas
sub
mov
pop
push
cld
cmp
fsubr
lahf
add
bound
sbb
out
and
dec
mov
insb
ret
nop
stc
fisubl
lea
lods
xlat
cmpsl
in
dec
dec
lcall
pop
cmpsl
fwait
stc
shll
jno
xor
stc
mov
mov
enter
out
jno
jp
jl
cwtl
in
sbb
xor
add
cmc
je
pop
lret
push
pop
adc
push
subb
add
xchg
pop
pop
ja
jmp
pop
xchg
mov
push
addl
xchg
out
rcrl
xchg
or
mov
lcall
xchg
aaa
pop
pushf
mov
sahf
scas
fs
xchg
fstpt
add
cwtl
fst
sbb
add
adc
scas
frstor
mov
cmp
stos
fcomi
vmovntps
jle
xchg
or
mov
clc
insl
ljmp
pop
add
xchg
out
mov
mov
lahf
testb
sti
fs
sbb
inc
xor
cmp
rolb
in
mov
leave
pop
fidivrs
push
or
mov
mov
dec
push
and
mov
mov
jmp
and
and
xor
xor
outsb
mov
sbb
daa
mov
mov
sbb
scas
fdivrs
sbb
ret
fisubs
mov
repnz
in
test
aam
jno
addb
mov
dec
jae
inc
fists
rcrb
jbe
fldpi
mov
popf
movsl
jecxz
js
fs
rcll
clc
dec
inc
imul
cmp
xchg
cmp
outsb
adcb
and
scas
mov
das
ljmp
and
cltd
sub
insl
sti
mov
aad
inc
mov
popa
xchg
je
std
sar
push
aaa
and
sti
into
mov
shlb
es
mov
cmpsb
mov
das
sbb
dec
into
rcrl
pop
adc
mov
nop
mov
lea
lock
mov
or
lret
mov
fistpll
shlb
jno
inc
and
adc
cmp
jle
xchg
ds
jp
pop
and
mov
iret
sarl
call
lcall
push
std
mov
test
or
cmp
lea
mov
fwait
xchg
popa
sbb
shrl
mov
movsb
js
fs
adc
cld
jmp
jle
std
jbe
psubsb
andl
mov
imul
xor
es
cwtl
cwtl
std
fdivr
dec
out
jno
cld
push
push
jnp
dec
sbb
fbstp
adcl
add
and
imul
pop
jp
fwait
loop
cwtl
das
jl
cmp
pop
xchg
push
jg
xlat
popf
add
jg
inc
xchg
sbb
repnz
add
xchg
lds
lahf
sbb
add
sub
mov
rcrl
je
mov
test
sti
mov
mov
xchg
out
sub
mov
push
inc
in
es
inc
loope
pushf
inc
aas
rcr
cmp
in
mov
xchg
adcl
push
sar
leave
lock
outsl
lret
cld
ret
movsl
ret
mov
xchg
cwtl
mov
test
xchg
sub
pop
jno
dec
into
adc
cmp
imul
cltd
xor
xchg
in
add
xor
sub
loope
mov
ficoms
dec
adc
into
and
xchg
xor
dec
sbb
and
xchg
mov
mov
test
add
push
cmpsb
clc
sbb
jmp
clc
loope
insl
cmp
rolb
adc
mov
sbb
out
pop
test
sti
pop
dec
xchg
loope
jg
pop
movsb
push
fistpll
aad
sahf
adc
andl
lahf
and
cmpb
mov
mov
or
lcall
pop
fnstcw
sbb
inc
xchg
fwait
push
sub
hlt
add
std
shufps
sub
mov
add
aad
clc
inc
push
xchg
inc
and
aad
mov
xor
popl
inc
mov
fs
pop
jg
xlat
add
test
jmp
rorb
or
shrl
cmp
xchg
mov
lea
sbb
and
xchg
or
dec
aas
fstp
mov
fists
imul
movsl
mov
jno
pusha
and
mov
push
loopne
inc
mov
jae
dec
leave
cmp
out
xorl
ljmp
cs
mov
test
sub
cld
or
mov
bound
mov
incb
mov
leave
idivb
data16
xorl
or
or
stos
lahf
sub
jle
add
inc
or
ja
andl
pop
mov
rcrb
pop
mov
imul
and
imul
ja
loopne
lea
dec
negl
xor
stos
xchg
das
add
and
xor
mov
xor
lock
dec
and
mov
out
and
imul
sub
ret
jge
jl
mov
in
or
ljmp
inc
xchg
sbb
pop
das
dec
xor
cmp
enter
sub
push
test
mov
xor
in
cmpl
push
sahf
dec
xor
cltd
or
sbb
test
ret
daa
mov
imul
sub
aad
cmp
rcrl
adc
adc
pop
inc
mov
jp
stc
dec
shrb
out
xchg
dec
repnz
int
xchg
in
or
mov
jne
mov
pop
sti
or
and
inc
sub
fwait
repnz
nop
mov
pop
inc
push
mov
mov
cmp
inc
lods
sub
pop
mov
cmp
das
fwait
movsl
mov
shlb
mov
test
pushf
into
in
push
and
fstl
adc
loop
inc
rcll
xchg
leave
aad
jl
push
and
dec
test
stc
mov
mov
mov
inc
les
cmpsl
add
dec
mov
jb
xor
sarl
pop
insb
or
lea
lods
xor
jp
insb
dec
shufps
pushf
stc
call
mov
pop
jae
packuswb
mov
fwait
mov
jns
mov
fistl
jb
ror
int3
adc
adc
loop
and
push
in
pop
push
mov
inc
sbb
xchg
jb
xor
aas
adc
push
fidivs
jbe
mov
cmp
cmp
push
or
adc
mov
hlt
ret
ja
or
push
jae
push
and
and
jbe
adc
sete
lods
je
xor
fadds
mov
rcll
movb
pop
sub
xor
and
lret
idiv
mov
scas
pop
sbb
out
outsb
or
xchg
adc
cmp
test
xchg
rorb
jne
dec
in
mov
sahf
mov
sbb
mov
hlt
mov
dec
xchg
js
scas
stc
negl
iret
mov
mov
mov
or
or
pop
mov
add
into
popa
pop
xor
mov
xchg
mov
addr16
repnz
mov
xor
xchg
push
jns
push
cmp
loop
cltd
adc
sub
mov
aad
fidivs
stc
rorl
mov
out
int
pop
jno
iret
mov
sub
iret
pop
enter
jle
sbb
add
lahf
add
outsb
aam
int3
fadds
test
cwtl
outsl
mov
call
test
and
rolb
pop
pop
inc
mov
pushl
add
sbb
mov
fsubrl
movsb
sub
push
add
push
scas
pop
sbb
aam
into
mov
cmp
ret
push
test
or
mov
adc
shlb
jns
fs
jge
idiv
mov
mov
jmp
insb
into
add
rcr
xor
dec
pop
movsb
cmp
mov
fs
test
insl
adc
call
mov
inc
mov
push
mov
lahf
mov
repz
js
mov
mov
push
sti
in
subl
cpuid
lahf
outsb
in
xchg
jb
stos
mov
push
inc
jbe
mov
sbb
and
dec
mov
int
inc
cmp
movsl
adc
adcl
pusha
aam
ret
js
je
imul
nop
adcl
loop
ficoms
jo
dec
mov
or
pop
dec
mov
push
add
mull
popa
shlb
and
sbb
and
lock
mov
or
and
into
xchg
dec
push
cmpsl
addr16
in
dec
xor
fs
fs
dec
ljmp
jmp
jle
mov
subb
add
stc
imul
add
clc
shrb
mov
push
rcl
cld
mov
push
scas
fimuls
mul
sub
mov
sbb
add
push
push
cwtl
loop
xchg
mov
xchg
mov
outsl
in
push
jle
xchg
push
test
sbb
imul
adc
mov
gs
jmp
mov
jbe
repnz
imul
xchg
adc
push
lret
cmp
xchg
dec
cmp
sbb
xor
adc
cltd
push
stos
test
fs
push
ljmp
xor
mov
xor
xchg
xor
out
in
arpl
loopne
sarb
loope
xor
das
movsb
pop
cmp
hlt
in
pop
loop
int
xlat
jle
push
pop
xchg
xor
repz
xor
push
fpatan
std
pop
rcrl
xor
loopne
lock
jne
cmpsl
xchg
fldcw
stos
add
inc
ja
adc
imul
in
and
dec
mov
mov
sbb
in
xor
or
push
mov
push
pop
pop
hlt
mov
ficompl
cltd
push
outsl
sahf
jo
ret
repnz
jge
sub
test
cmpsl
sub
sub
incl
rorl
rcrb
ret
adc
push
call
or
sub
in
cmp
fwait
shll
sbb
icebp
jecxz
and
ret
dec
push
int3
hlt
xor
xchg
dec
lods
mov
mov
shlb
dec
or
mov
ror
cltd
imul
rcr
aaa
fs
mov
adc
and
push
lea
bound
sub
push
adc
or
data16
or
into
xchg
outsl
or
and
es
add
cmpsl
shlb
inc
inc
xchg
fucom
push
repnz
mov
mov
inc
ret
repnz
mov
inc
js
and
loop
mov
ret
outsl
dec
shrl
jg
sub
test
inc
gs
dec
dec
js
jmp
gs
xor
outsl
cmp
mov
out
mov
jge
push
lret
inc
xor
rcl
insb
enter
maskmovq
testl
pop
sahf
and
xchg
jne
les
mov
mov
dec
lods
dec
inc
out
fs
out
ja
push
pusha
fisubrs
push
and
and
xchg
cli
arpl
int
jg
fnstsw
mov
xor
pusha
mov
stos
insb
ljmp
and
lret
in
xchg
lds
adc
clc
jo
in
faddl
pop
cs
or
mov
movsl
imulb
xor
cmp
jle
jge,pn
jnp
popa
jne
xchg
push
push
cmp
adc
out
or
sub
sbb
xchg
ret
mov
iret
pop
xor
ljmp
adc
xchg
int3
aad
pop
cltd
xchg
loope
jb
insl
add
xchg
xor
ds
jge
jns
xor
ljmp
xchg
in
in
imull
xor
imul
inc
dec
outsb
jnp
arpl
pusha
mov
ljmp
jp
rorb
push
call
call
mov
enter
cmpsb
inc
test
jbe
or
lock
enter
jns
xor
pop
ret
ret
sub
jle
cmc
popa
cmp
pop
push
and
mov
mov
xchg
int3
jb
out
insb
adc
pop
fstl
int3
dec
xchg
outsl
cmp
arpl
pop
xchg
mov
aaa
xor
xlat
cmp
push
sub
out
dec
mov
pusha
ja
sub
jnp
popf
sub
gs
jb
lahf
ljmp
push
mov
jo
mov
and
nop
xchg
ret
mov
dec
insl
mov
sti
fiadds
mov
sbb
cmpsl
jb
mov
dec
leave
rcrl
sbb
cmp
push
gs
lods
fsts
xchg
mov
sbb
push
xor
xor
sahf
inc
add
jmp
sti
dec
and
cmp
lock
in
xchg
push
mov
xor
ss
add
push
mov
xor
push
ret
movsl
das
push
fisubrs
cmp
popf
dec
mov
out
aas
test
cmc
pusha
sbb
out
sub
cmp
xchg
push
sub
mull
push
in
loop
inc
negb
push
sbb
sub
jae
das
idivl
adc
bound
outsl
mov
int3
xor
jo
fmuls
jg
cmpsb
leave
lock
jp
aam
sub
jmp
jne
push
sub
push
lcall
fisubs
pop
out
ja
cmp
fidivs
dec
mov
xor
dec
sub
fcmovbe
sbb
aam
xchg
dec
pop
fmulp
jno
cmpsb
mov
dec
dec
cmpsl
inc
mov
push
pushf
mov
mov
scas
shll
jecxz
ds
les
jb
add
and
notb
lea
fwait
daa
in
arpl
push
xchg
loope
push
int
pop
jo
lret
push
in
push
push
ja
stc
lret
pop
jmp
scas
fimuls
ret
jne
sbb
cmp
mov
sub
rcr
sarl
divb
sub
leave
xchg
push
mov
push
scas
pop
nop
dec
stc
sbb
jmp
fs
fwait
test
sub
call
mov
fs
pop
mov
mov
xchg
call
push
sbb
and
sbb
xchg
loop
sub
mov
bound
cmp
leave
lcall
stos
arpl
or
fdiv
lret
imul
xorb
sub
inc
pop
xor
int
pop
sub
cmp
and
mov
in
out
or
fsubs
sbb
xor
lods
or
test
or
jp
add
fsub
pop
dec
dec
addl
pushf
adc
and
daa
cli
ljmp
and
mov
pop
mov
sub
shlb
subb
pop
cli
lock
xorl
sub
or
je,pt
mov
iret
aam
inc
aaa
clc
jl
subl
std
out
iret
cmpsl
into
push
dec
outsb
jle
cmp
jne
push
xor
subb
sub
in
jns
or
gs
or
pop
sbb
nop
jg
mov
mov
inc
or
pop
pop
sub
and
jo
scas
pop
pusha
xor
std
stos
test
inc
lcall
in
out
cs
push
pop
mov
and
or
insb
int3
mov
mov
pop
xor
mulb
stos
push
imul
pop
testb
insb
subl
frstor
leave
push
pop
out
ljmp
jecxz
mov
xlat
inc
test
jl
adc
jmp
lret
inc
cmpsl
xor
stc
movsb
jle
mov
xchg
push
jp
aam
adc
jg
pop
push
mov
pop
lret
jl
pop
mov
fnsave
rol
sub
insl
xchg
ss
in
or
dec
xor
insl
sbb
cmc
mov
dec
jbe
xchg
sbb
jle
and
imul
sub
movsb
in
fwait
dec
cmc
jns
add
lock
out
mov
sbb
xlat
cmpsb
fcomp
and
push
xor
ja
push
movb
stc
call
dec
push
xor
or
call
xchg
es
push
xor
sbb
pop
daa
cwtl
mov
add
or
addb
movsb
in
xor
inc
popa
push
and
mov
in
pop
int
jge
movsb
xchg
inc
push
roll
add
mov
xlat
add
mov
jle
and
mov
xor
js
ret
mov
sbb
push
mov
sub
mov
push
sub
sbbb
ret
cmpl
push
lret
out
push
movsl
decl
stc
shll
cmp
inc
lods
xchg
or
and
inc
inc
fmull
xor
in
xchg
and
clc
cmpb
mov
std
xchg
test
pop
out
loop
xchg
push
xchg
cltd
dec
jno
ja
mov
jo
lods
and
fidivl
or
mov
stos
addr16
lret
outsb
adc
sub
ret
cld
mov
jae
inc
sar
inc
cmp
and
dec
mov
push
add
mov
aas
dec
jb
inc
imul
cld
xchg
or
cmp
enter
insb
aaa
lret
mov
inc
cmpsl
sbb
mov
xchg
xor
in
dec
mov
in
pop
aam
rolb
scas
cmp
test
mov
imul
fsubl
movsb
or
ficoml
adc
and
jb
pop
sbb
and
les
fisubrs
in
addb
and
hlt
cmp
inc
xchg
enter
call
out
xchg
repz
movsl
push
xchg
pop
mov
in
lods
cld
adc
aas
add
sub
rcl
or
sahf
in
xor
jl
dec
addb
jae
daa
jl
push
cmp
out
pop
lea
adc
dec
scas
insl
lahf
xchg
aaa
std
popa
movhps
orl
cmp
mov
jno
xorl
daa
xor
or
push
pop
xchg
leave
or
popf
xorl
imul
ds
pop
push
sub
scas
jle
cmc
adc
mov
call
and
lcall
mov
cmpsb
scas
leave
ljmp
loop
jge
ret
aad
ljmp
mov
dec
inc
push
addr16
sar
loopne
into
test
jmp
std
adc
cmp
std
xchg
inc
cmc
jmp
ja
cli
jge
into
push
and
mov
inc
push
lret
rolb
lock
sarl
neg
add
xchg
iret
iret
push
adc
sub
in
aas
adc
in
ljmp
push
pop
push
rep
dec
hlt
push
mov
push
int
imul
nop
sub
sbb
and
xchg
loop
mov
mov
call
xchg
popf
xlat
sub
inc
icebp
lret
mov
test
and
fadds
inc
push
cwtl
mov
call
inc
es
add
mov
test
xchg
and
test
test
imul
lret
sbb
xchg
xor
jmp
inc
sahf
push
or
ljmp
and
add
aas
push
in
out
xchg
sbb
mov
scas
outsl
daa
mov
add
test
je
scas
mov
inc
ljmp
mov
mov
xor
xor
jmp
or
mov
pushf
sbb
loope
in
or
mov
inc
dec
mov
js
adc
pop
pop
xor
pop
in
xchg
mov
shlb
in
ljmp
sbb
scas
pop
sarl
or
movsb
lret
insl
or
xchg
sarl
bound
hlt
mov
mov
jo
std
cmp
js
mov
xor
clc
xor
rorl
cmpsl
push
inc
jno
data16
roll
test
negl
sahf
inc
sarl
in
movlps
mov
lcall
testl
test
test
sbb
mov
out
pop
inc
jnp,pt
pop
loop
popf
icebp
mov
addr16
sub
fdivs
jmp
mov
jnp
int
xchg
xchg
imul
mov
das
enter
xchg
xchg
and
cmp
and
xchg
nop
and
sbbb
test
xchg
paddusb
xlat
or
int
aaa
gs
pop
jg
xchg
push
mov
add
mov
les
sar
pop
sbb
adc
dec
lret
pop
idivb
jg
loop
sub
or
xchg
pop
xor
mov
or
mov
in
sbb
mov
or
shlb
sub
inc
dec
mov
or
jns
jae
sti
fsub
pop
cli
fdivrs
je
sub
pop
stos
test
lret
shl
mov
shrb
mov
xlat
iret
xchg
movsl
gs
mov
xlat
or
sbbl
mov
push
test
mov
out
inc
mov
xchg
outsl
pop
cld
ja
sbb
mov
cli
cmp
cmp
push
mov
fwait
in
lahf
data16
mov
orl
insl
movsb
lea
inc
inc
jbe
or
or
mov
data16
xchg
and
dec
out
pop
bound
add
and
stos
mov
jno
cmp
lods
sbb
and
pusha
cmp
gs
pop
sar
loop
jnp
frstor
dec
std
dec
imul
pop
jg
js
lods
test
rcl
mov
and
mov
fdivr
push
add
xlat
out
inc
test
addr16
or
mov
leave
xchg
dec
test
cmp
jae
sbb
es
xorb
jmp
cmp
push
hlt
cwtl
mov
out
sti
leave
mov
ret
adc
sbb
repnz
mov
mov
jecxz
imul
stc
fistl
dec
inc
sbb
jl
ljmp
sbb
inc
andl
filds
call
xor
add
mov
jmp
insb
mov
jne
dec
test
add
int3
clc
je
mov
push
inc
cmp
sub
shlb
or
test
add
enter
xchg
mov
jg
loope
cltd
jne
test
sbb
mov
pusha
fcmovbe
ss
cmp
bound
and
fbstp
sbb
negl
sub
mov
pop
adc
pusha
jbe
cmp
and
dec
mov
stos
fisubrs
add
mov
xlat
sbb
fisubs
mov
pop
pop
movsb
pop
repz
scas
add
push
sbb
sub
call
test
fwait
mov
lods
das
dec
dec
push
cwtl
out
sbb
push
fisttps
cs
cmp
xor
pop
sbb
lret
xchg
aam
rcr
jne
enter
push
out
lret
in
std
in
shr
out
dec
popf
adc
push
jb
fisubrl
mov
out
sbb
add
xor
test
je
xchg
stos
sub
cli
loopne
gs
lcall
ffreep
push
lds
mov
push
push
push
pop
fcomi
leave
mov
lock
lods
cmp
sub
mov
and
imulb
mov
lock
aam
push
xor
test
mov
mov
cmp
adc
cli
xchg
push
loopne
scas
daa
jns
pop
daa
movsl
aad
cmc
packsswb
int3
lock
imul
push
dec
xchg
cmpsl
xchg
gs
jl
icebp
fnstcw
cmp
mov
lds
xchg
movsb
sahf
or
negb
daa
and
aad
imul
jbe
out
mov
push
andb
pop
das
and
adc
lock
cmp
orl
rorb
push
fcomp
out
inc
and
loop
xchg
mov
aad
lock
cmpsl
mov
push
lret
dec
xchg
leave
leave
or
subb
lods
jmp
jg
and
mov
push
addb
faddl
cmp
insl
out
jnp
stc
jmp
and
mov
xchg
popa
les
into
fwait
xlat
out
dec
lods
push
aas
add
and
fistl
dec
in
push
pop
push
jbe
jne
xor
mov
pusha
loopne
mov
dec
imul
out
push
and
mov
or
sub
sbb
stos
jl
jg
or
or
lret
cli
aaa
subb
dec
mov
cmpsb
test
sbb
shl
in
or
xchg
and
cs
mov
xchg
lret
js
icebp
adc
out
push
hlt
or
insl
test
jns
mov
mov
push
or
add
xor
pop
jmp
dec
mov
jp
mov
inc
out
outsb
pop
mov
rolb
rorl
std
divb
popf
jg
push
push
mov
sar
das
bnd
shl
cld
mov
hlt
arpl
mov
push
nop
in
adc
andl
xor
cs
pushf
test
jno
sbb
pop
jp
mov
inc
xlat
dec
and
pusha
mov
cmp
jns
mov
and
mov
xchg
aaa
jno
push
sti
jb
adc
rcrl
inc
and
ds
pop
pop
mov
push
ret
int3
adcb
pop
sub
sti
aad
pop
xchg
add
cld
jmp
mov
xor
jp
test
arpl
xchg
imull
mov
sarb
dec
jle
xchg
addr16
dec
dec
mov
xchg
xlat
loop
and
xor
pop
pop
adc
xlat
mov
cmpsl
mov
mov
imul
pop
lods
daa
mov
pop
arpl
gs
rclb
imul
pop
dec
lds
mov
adc
lods
adc
mov
stos
out
mov
dec
jns
movsl
mov
mov
sub
cmp
fisubrl
mov
int
scas
push
dec
lret
fsub
in
jp
jo
aad
std
rorl
sbb
rcl
sbb
iret
js
cmp
sbb
inc
cmp
pop
adc
and
loop
push
cmp
xchg
cwtl
sub
and
xchg
dec
pop
pushl
push
les
push
pop
stos
inc
or
je
push
ss
or
mov
rcll
enter
loope
fmul
pop
popa
inc
sub
sbb
cmp
or
inc
inc
call
dec
cmpsb
sub
pushf
rcrl
jg
jecxz
or
ljmp
inc
int3
inc
mov
not
push
cmc
repz
pop
cs
in
clc
jp
loopne
int
mov
je
fldenv
imul
je
and
mov
hlt
inc
stos
jecxz
scas
cmp
cltd
mov
sahf
div
std
fldcw
sar
xor
mov
or
sub
and
lahf
fs
cmp
inc
and
lods
pop
addr16
or
jb
insb
add
add
repnz
nop
pushl
and
insb
stc
sbb
mov
test
fdivs
inc
dec
sub
aas
mov
outsl
jmp
sub
adc
test
test
xchg
mov
jge
cmp
js
or
cmpb
sub
iret
lock
add
mov
or
stos
out
ret
dec
dec
es
sub
sbb
out
xor
sti
xchg
pop
mov
fsubrl
add
loopne
movsb
iret
loop
jno
arpl
fdivr
jg
fnstenv
push
das
cmp
mov
dec
movnti
mov
test
mov
pusha
shll
fcoms
or
cwtl
imul
repnz
cmp
stos
jg
jecxz
mov
cs
jne
aam
gs
test
cmpsb
out
dec
mov
mov
loopne
or
and
ror
je
push
push
aaa
outsl
jl
push
pushf
cwtl
out
sub
ja
xchg
loope
sub
push
mov
loop
cvttps2pi
jl
int
sub
ret
sbb
pop
inc
mov
mov
fists
sub
adc
dec
inc
adc
sbb
data16
pop
mov
mov
push
pop
mov
cli
xchg
adc
xchg
les
add
in
mov
lods
xchg
xor
adc
jmp
stos
cmp
scas
xor
stos
lea
jbe
push
stos
neg
xlat
pop
lds
xchg
jg
mov
das
lcall
int3
push
cmpb
inc
iret
mov
add
jl
out
gs
jae
mov
push
sub
out
xor
arpl
push
mov
inc
outsl
in
cmp
mov
jecxz
adc
out
int
pop
pop
pop
push
movsb
push
add
loopne
inc
lock
mov
sbb
fistpll
jmp
xchg
cmp
es
sbbb
jno
mov
popa
lods
add
mov
sahf
mov
arpl
daa
aas
push
jnp
gs
push
mov
cmpsb
cmpl
and
sub
fstl
mov
or
or
cmp
aaa
loope
mov
cwtl
jno
bound
fdivrl
arpl
imul
mov
fnstcw
sbb
popl
lods
jle
xor
or
mov
inc
in
rorb
mov
in
mov
dec
bound
sub
icebp
int
sub
cmp
rcr
sub
aam
mov
jl
cli
je
outsl
sbb
xor
push
mov
test
dec
mov
or
pop
pop
lods
xchg
push
pop
movsl
mov
cs
pop
dec
jle
lock
das
add
lock
leave
jge
pop
popa
ret
pop
in
cmpsl
data16
roll
adc
js
push
out
mov
lock
jo
add
cmp
int3
out
leave
add
fcomps
cmpsb
imul
shlb
push
push
bound
or
adc
test
mov
pusha
adc
insb
or
push
popf
mov
xor
sti
add
aam
daa
mov
push
add
stos
ficoml
sub
int
ss
push
mov
jl
jno
jo
les
in
push
pop
call
stc
inc
stos
jnp
cmpsb
out
cmpsl
adcb
cmpsb
rorl
ret
fwait
xor
cs
jnp
sahf
loop
out
mov
sub
decb
inc
adc
imul
outsl
push
or
ss
out
xor
pop
icebp
cmpsb
xchg
mov
leave
imul
ds
ss
rcll
pop
xor
ja
fst
sbb
imul
lock
xchg
out
loop
ds
lret
aaa
repnz
fs
push
lods
sub
enter
pusha
add
adc
mov
cmp
jg
or
cwtl
cs
jns
add
cs
fwait
ret
jge
push
ljmp
andb
inc
outsb
aad
into
mov
mov
cld
ljmp
popa
cltd
sbb
jbe
insl
repz
jl
iret
test
fwait
jle
push
ljmp
mov
pop
cmp
jb
in
leave
scas
test
push
mov
and
out
xchg
loop
ror
insl
loope
lret
xchg
outsl
in
sti
fwait
or
pop
test
enter
and
sub
inc
lahf
sar
and
loopne
mov
mov
jmp
insb
inc
cmp
push
in
into
in
lods
inc
or
lret
dec
data16
loope
add
orb
pop
jmp
add
xchg
cmpsb
mov
inc
jecxz
rcrl
jg
nop
add
insb
mov
pop
out
std
dec
movsl
push
leave
mov
cmp
daa
jbe
jns
cld
sub
pop
mov
stc
dec
testl
or
jecxz
or
or
adcb
xor
inc
mov
ljmp
adc
mov
xchg
cmp
clc
or
xor
cmpsb
sub
inc
push
xor
adc
insl
and
push
popf
adc
push
dec
fsubp
fisttpll
popa
test
rorl
xchg
arpl
iret
mov
sbb
jecxz
push
push
fbld
mov
sub
aaa
mov
sbb
adc
pop
inc
or
fildl
dec
andl
pop
test
add
xchg
xor
fldcw
adc
inc
jae
ds
jb
in
and
scas
push
test
jb
mov
dec
xor
xor
push
dec
mov
data16
cmpsb
sub
inc
and
sahf
rcrl
addr16
fiaddl
js
cmp
cwtl
fldcw
mov
aad
jne
cmpsb
fisttpll
mov
or
cmpsl
in
addl
in
in
inc
std
std
and
mov
push
pop
mov
xor
push
sub
arpl
inc
loope
add
xchg
mov
aas
xchg
pop
jo
mov
mov
xchg
pop
sahf
insb
outsb
jno
push
icebp
add
jo
ja
cltd
pop
ss
mov
sbb
pop
scas
je
out
mov
les
inc
mov
mov
xor
lds
fidivrs
mov
mov
xor
ret
cs
inc
sti
xor
notb
adc
out
lret
test
jmp
mov
dec
xchg
call
push
cmpsl
hlt
mov
sbb
jmp
pop
dec
daa
add
cmp
adc
rclb
lea
mov
cmc
clc
scas
iret
xor
in
mov
inc
jle
movsl
shld
repz
sarb
sahf
xor
imul
add
and
mov
ljmp
pop
jecxz
mov
jmp
mov
cmpsl
fisubrs
les
adc
push
fcomi
cmpl
mov
inc
repz
cmp
push
jge
and
ss
sarl
into
adc
dec
pushf
lcall
out
sub
ds
and
sub
aaa
cmp
out
push
int
imul
mov
pop
fcoml
xor
into
sub
add
clc
pop
inc
or
test
fs
jge
mov
daa
add
nop
addr16
arpl
ja
in
outsl
mov
mov
jns
xor
mov
jnp
mov
aam
mov
or
outsl
or
pushf
xor
pop
cmp
jmp
or
add
outsb
pop
pop
icebp
stos
jp
jns
mov
ret
or
ljmp
xchg
repz
adc
pusha
ss
cmp
xchg
arpl
push
xchg
adc
push
insl
dec
js
into
cmp
mov
pusha
je
lods
xlat
mov
cmove
sbb
xor
push
push
loope
and
das
pop
and
push
mov
xchg
in
xor
xor
fmul
mov
adc
push
int
outsb
not
int3
stos
pop
in
mov
in
dec
mov
jle
adc
cmc
mov
loop
mov
sahf
out
pop
popf
push
lock
mov
mov
xlat
bound
testb
es
and
adc
xchg
xor
mov
aam
cmp
mov
addr16
sub
into
jmp
mov
sti
sbb
lahf
shlb
rol
mov
push
cmpsl
es
sbb
dec
fdivrs
push
outsl
cmp
sbb
mov
pop
fwait
lds
into
mov
xchg
or
or
insb
enter
jb
scas
dec
dec
fwait
dec
inc
arpl
push
adc
push
and
add
sbb
xchg
inc
outsb
sub
cs
cmp
push
sbb
jo
adcb
sub
gs
cmp
mov
stos
sbb
das
mov
lods
add
mov
fstp
scas
pop
dec
pop
pop
push
cmp
push
stos
pop
lds
fisubrs
lahf
pop
fsubs
in
loope
fbld
into
iret
sahf
shl
xlat
ljmp
and
add
cmp
je
int
sbb
ret
adc
xor
cmp
pop
mov
pop
push
lods
sahf
pop
mov
jmp
outsb
xchg
and
add
iret
lret
sub
cmpsb
mov
and
sbb
cmp
fldt
ja
ja
add
inc
lds
jmp
mov
and
gs
mov
cmc
and
cld
cmp
dec
cmc
imul
sub
loop
adc
push
cmp
popf
cmp
insl
xchg
aas
aas
popa
hlt
push
jg
pop
lahf
sbb
test
cltd
sbb
mov
or
sbb
adc
sub
xchg
ss
mov
fildl
flds
and
in
dec
dec
add
ljmp
lock
or
adc
fisubrs
pop
inc
push
mov
or
mov
push
sbb
jl
cmp
fcoms
pop
sub
nop
iret
test
push
mov
add
mov
test
mov
sbb
push
test
pop
dec
cwtl
in
lds
inc
and
jge
stos
xor
cwtl
xchg
xchg
xor
cld
push
adc
or
int
and
jle
jl
and
push
icebp
add
ret
stos
cmp
jle
add
or
jge
cmp
push
pop
dec
push
jge
mov
ja
adc
daa
stc
bound
popf
pusha
inc
mov
and
sbb
push
ja
mov
daa
adc
mov
push
mov
sahf
jp
mov
test
sub
arpl
jp,pn
add
loope
repnz
je
adc
inc
dec
lds
aad
insb
push
lcall
cltd
or
inc
ret
xor
adc
jmp
sub
and
popa
inc
pusha
sarl
pop
sbb
arpl
icebp
push
test
fimull
sub
lret
cmp
rorl
out
sub
loop
rorl
adc
jp
das
enter
je
sbb
push
sbb
mov
adc
xor
lds
jmp
dec
fld1
cmpsb
jno
push
mov
ret
pop
jns
push
gs
int3
fldenv
insl
mov
xor
cmp
cmpsl
push
inc
ret
aad
sarl
fists
cs
and
xlat
leave
shll
xchg
adc
enter
dec
xor
xchg
xor
inc
push
loope
jmp
sbb
and
leave
and
fbld
xor
mov
push
and
ret
aad
and
imul
inc
push
jmp
xchg
xchg
insl
pop
sbb
jmp
inc
inc
pop
jo
pop
sbb
push
addb
pop
adcb
sahf
insb
andb
cmp
pop
sti
std
cmp
or
test
js
push
pop
inc
push
jecxz
ret
xchg
je
cmp
cs
loop
popa
fnstsw
aaa
dec
pop
imul
adc
test
out
xchg
or
add
aaa
iret
mov
outsb
fstpt
xchg
movsl
out
out
arpl
xor
xchg
push
data16
xchg
jns
lea
test
cmp
sbb
jb
jo
adc
fst
xor
fstps
aaa
cwtl
out
mov
cmp
inc
inc
sbbb
ret
in
out
xor
cmp
jb
fwait
jmp
inc
scas
push
sbb
or
xor
shl
dec
out
lods
in
cmp
push
movsl
mov
push
imul
pop
nop
daa
into
or
jns,pn
add
add
push
adc
pop
lret
xchg
sub
in
inc
or
pushf
out
cltd
fs
out
shl
mov
mov
jp
int3
ret
push
mov
jle
or
popa
sbb
sub
sub
ljmp
dec
mov
lds
aad
bound
jle
fwait
aam
and
in
sahf
daa
mov
mov
xor
out
popf
sbb
dec
jne
in
leave
inc
cmpsb
xorb
dec
inc
push
stc
ja
mov
mov
stos
imul
psubusw
sti
xor
add
mov
call
popf
sbb
dec
aas
jb
das
pop
cmp
jmp
mov
cwtl
mov
adc
dec
aaa
mov
inc
sbb
dec
mov
xor
push
mov
cli
iret
ljmp
ds
sub
fldenv
sub
inc
jmp
fs
cld
inc
and
sahf
sbb
mov
lahf
inc
xchg
add
fwait
pushf
pop
lcall
outsb
jp
lods
dec
mov
sbb
cwtl
inc
inc
fdivl
mov
or
xchg
add
into
jns
cmp
sbb
xlat
hlt
fistpl
dec
sbb
push
lea
outsb
aas
idivl
fbld
xchg
repnz
and
pusha
ds
test
mov
mov
out
mov
xchg
lds
ret
jno
repnz
cmp
negb
test
fdivrs
test
lea
fs
dec
ds
xor
popa
sbb
ja
push
lods
je
jecxz
fwait
out
sbb
pop
int3
xchg
pop
mov
and
mov
stos
cmp
int3
fdivr
rolb
shll
or
sub
add
cli
arpl
dec
jle
mov
or
stos
cmc
xor
push
jle
sub
mov
psrad
jle
cltd
inc
push
push
cmp
loop
stos
mov
sub
cmp
sbb
mov
pop
arpl
or
lods
mov
jge
sbbl
stos
pop
add
fisubrl
sub
mov
rcll
nop
cltd
pop
enter
lret
lcall
addr16
dec
std
pop
pop
test
xor
cld
cwtl
and
cmp
rorb
mov
stc
adc
in
and
loopne
mov
sub
in
outsl
test
jo
dec
mov
add
jecxz
int
dec
pop
xchg
sahf
mov
add
hlt
int
sub
or
rclb
jge
jp
jne
into
jnp
mov
clc
cmpsb
es
sbb
mov
push
mov
mov
dec
sbb
cld
inc
stc
rclb
rolb
fdivrl
rcrb
dec
pop
push
mov
outsl
mov
push
dec
adc
jge
shrb
xchg
pop
mov
int3
scas
ficoms
push
into
rcrl
shlb
inc
aaa
pushf
popf
addl
mov
clc
cld
sub
roll
mov
or
dec
cmp
repz
mov
adc
seto
hlt
faddl
sub
pop
mov
mov
dec
sub
mov
adc
cwtl
sbb
or
or
jae
data16
ljmp
jbe
sbb
hlt
sub
add
xchg
add
daa
mov
jno
or
mov
sub
popa
mov
lock
cwtl
or
dec
xor
test
cmpsb
std
sub
out
test
xchg
xor
rorl
mov
add
jae
out
adc
cmpsb
cwtl
push
outsb
mov
out
mov
nop
jmp
fs
or
movsl
adc
test
add
cwtl
mov
dec
lret
loop
xchg
nop
cmp
xchg
sub
mov
lock
icebp
sbb
enter
dec
mov
stos
ljmp
pusha
jne
mov
dec
mov
lret
inc
mov
sub
push
addr16
or
xchg
push
and
sub
jns
addb
scas
lods
dec
mov
mov
sub
movsl
dec
adc
es
in
inc
sbbl
or
mov
adc
add
pop
dec
and
cmp
xchg
mov
mov
push
incl
insl
jnp
inc
outsb
sahf
mov
pop
fsincos
mov
repnz
and
sbb
push
mov
sub
dec
test
pop
mov
mov
ficoms
jo
pusha
lods
fs
in
test
cmpsb
roll
lods
xchg
dec
lret
and
fsubs
stc
cli
mov
cmpsl
adc
outsl
dec
pushf
mov
rolb
loope
cld
fistps
pusha
jbe
out
pushf
sbb
rorl
ljmp
or
cmp
and
sbb
xor
sbb
jecxz
mov
shr
push
out
pop
inc
xor
fadd
gs
gs
push
shl
sub
pop
sbb
fsubp
sbb
cmc
mov
sar
out
jp
cltd
test
daa
stc
out
and
movsb
and
cmp
jmp
rclb
das
mov
add
push
into
loop
mov
sub
mov
pop
aam
fcomps
push
test
in
add
jge
cmpsb
notl
xchg
faddl
arpl
xor
out
mov
cmp
or
xor
sub
ja
and
mov
outsl
icebp
pop
sbb
pop
jne
fdivl
iret
adc
cwtl
push
lods
stc
repz
outsb
hlt
vmread
outsb
jl
out
jp
mov
add
test
and
cmp
mov
push
data16
jle
addl
xor
pop
mov
aas
lret
jne,pn
xlat
xchg
push
pop
mov
cli
mov
ja
or
insl
mov
stc
push
ss
jns
pop
pop
enter
mov
in
call
fcomip
movsb
jo
mov
push
xor
mov
cmc
into
aas
cwtl
jae
sub
sbbb
out
and
inc
inc
and
ljmp
adc
sbb
sub
aad
mov
sbb
mov
mov
jns
mov
test
add
lea
daa
jbe
mov
iret
mov
sbb
mov
push
nop
pop
clc
mov
pop
sti
rolb
add
les
dec
cmp
inc
cmp
leave
xchg
loopne
hlt
jb
scas
cmp
sub
xor
int
daa
js
in
push
pop
jl
iret
loope
pop
cmp
cld
out
les
mov
addr16
add
andps
push
push
dec
jb
jle
ljmp
xchg
in
pop
fsubr
pop
clc
cltd
pushf
dec
add
cwtl
mov
gs
sub
mov
inc
mov
rcrb
subl
stos
mov
call
jbe
adcb
in
sarb
jmp
cmpsl
repz
aam
sbb
mov
scas
test
push
cmc
fdivr
and
rcrb
push
fs
pop
lret
dec
jg
pop
out
mov
jno
add
fcmovne
rolb
in
mov
rorl
mov
mov
push
fsubs
and
ret
and
mov
aam
fwait
push
jb
gs
fwait
or
orl
imul
pop
lcall
push
xor
imul
mov
jb
pop
jg
flds
icebp
jge
adc
scas
cmp
cmp
test
mov
popf
xchg
pusha
and
lods
mov
push
in
adc
xor
add
test
mov
cwtl
mov
mov
cmp
call
or
pop
ss
mov
sbb
enter
cld
pop
xchg
pusha
dec
push
inc
incl
xor
roll
lret
gs
daa
xor
jno
pop
sub
xchg
jbe
mov
cwtl
push
mov
xor
push
into
and
sub
je
fldcw
or
pop
lret
mov
push
sub
sub
push
cwtl
mov
or
popf
push
or
lret
arpl
arpl
mov
or
arpl
cmp
and
or
mov
mov
mov
mov
out
movsb
jp
jmp
cmp
and
cmp
imul
ficoms
mov
mov
pop
or
inc
pop
or
call
das
xchg
into
loope
add
addr16
xchg
jle
hlt
mov
xchg
and
clc
in
mov
arpl
add
fmull
fiadds
popa
xorl
pop
test
cmc
pusha
xchg
mov
insl
cmpl
ret
push
in
sub
inc
ljmp
jo
xor
cmp
sub
je
cs
int
gs
add
movsb
lods
jmp
nop
cmp
xchg
xchg
lahf
jns
bswap
mov
jbe
mov
mov
f2xm1
les
push
mov
lret
iret
outsb
fnstenv
fld
ret
xorb
cli
pop
xor
jno
stos
sub
jle
or
cwtl
and
cmpl
mov
cmp
scas
ffree
sarb
jo
scas
sub
out
out
cmp
jae
test
or
add
xor
push
imul
sub
cmp
je
sahf
mov
mov
push
mov
aad
xchg
adc
hlt
clc
adc
mov
sbb
int3
sub
jno
fimull
outsb
lock
mov
jns
clc
insl
push
lahf
mov
insl
adcl
add
mov
daa
mov
add
inc
in
out
mov
test
test
mov
push
push
movsb
shl
adc
mov
fsubrs
xor
adc
xor
mov
mov
mov
cld
add
repz
jo
incb
fistpl
dec
cmp
adc
ficoms
ficomps
mov
fimull
mov
stc
stos
sub
movsl
xchg
mov
cmp
cmp
mov
pop
xor
pop
dec
out
and
mov
shlb
pusha
fdivl
add
or
cmp
cmp
jg
mov
push
pop
shlb
xchg
mov
in
inc
imul
jns
mov
mov
push
dec
xchg
inc
shlb
jns
mov
inc
cmpsl
and
ds
xchg
xor
punpckldq
dec
jecxz
sbb
push
ljmp
inc
xchg
inc
mov
push
aas
cs
dec
jo
or
cmp
jae
push
loope
imulb
sbb
js
cmp
lret
dec
ljmp
or
xchg
cmp
lods
das
xor
cs
lret
repnz
addr16
in
sub
das
pop
jb
sub
hlt
xor
xchg
push
decb
xchg
xchg
mov
inc
pop
xor
lds
jne
and
int3
popa
jns
sbb
sbb
cmpsb
inc
stc
jb
rcll
mov
les
sub
lret
int3
hlt
lret
ljmp
pop
add
hlt
call
cmpl
popa
sbb
mov
push
lret
push
xchg
push
dec
enter
imul
sti
in
pop
mov
dec
xchg
inc
jmp
neg
jge
push
add
packssdw
xchg
pop
je
sbb
ret
fstcw
out
mov
push
rorl
pop
push
push
int
push
xlat
pop
pop
in
icebp
mov
outsb
fcomip
lds
push
adc
pushf
cmc
xor
fbstp
cmp
add
jb
dec
mov
fiaddl
shrl
cmp
jno
ret
cmp
aad
dec
or
jl
das
ljmp
jmp
xchg
popf
jge
fidivl
or
outsl
xchg
dec
pop
cmp
push
lods
xchg
cltd
xor
and
and
icebp
jl
bound
je
shl
xchg
push
addr16
xchg
xor
repz
add
xor
mov
sbb
push
loope
pop
cmp
test
or
xchg
push
lods
dec
cmpsl
dec
sbb
mov
imul
sub
mov
test
insl
arpl
sahf
enter
lret
sbb
inc
fcmovbe
sbbb
cmpsl
pop
jge
gs
inc
mov
int3
cs
jnp
xchg
popf
stos
and
cmp
idivl
enter
jle
jl
fwait
arpl
jb
sti
add
aam
cltd
test
or
das
inc
lea
sub
xor
sbb
add
rorl
sub
push
mov
xor
xchg
jg
shlb
dec
int3
imul
mov
mov
mov
xor
loop
js
mov
inc
ja
lahf
mov
lahf
jp
xchg
adc
mov
adc
movsl
into
xchg
jno
lret
jmp
sar
outsb
dec
stc
lret
mov
insl
gs
stos
pusha
push
mov
inc
pop
jno
pop
loope
mov
es
and
ss
push
out
or
sbb
outsb
fistps
push
addr16
adc
cmpsl
mov
js,pt
int
sbb
call
leave
lds
int
into
dec
rol
xor
ja
pop
mov
popf
inc
push
pop
push
and
adc
mov
dec
mov
push
jne
out
dec
cmpl
cltd
test
adcl
imul
adc
pop
push
movsl
dec
repnz
mov
in
aad
push
fs
cli
pop
cltd
loopne
lds
push
orb
jae,pn
gs
shr
or
and
xchg
scas
or
cmp
dec
cmpl
inc
add
leave
lcall
lahf
in
stos
jmp
xchg
and
cli
dec
cmc
jb
sahf
xchg
sbb
mov
cmpsb
fwait
xor
lcall
mov
gs
out
mov
sti
push
js
shrb
mov
lahf
rcll
fstl
lret
dec
iret
repnz
adc
enter
push
inc
into
dec
shl
add
xor
rclb
in
jmp
out
push
sub
xchg
test
ljmp
bound
daa
push
and
jl
inc
shlb
bound
les
mov
pop
xchg
mov
inc
jne
and
int
adc
sub
xor
shrl
lods
mov
shll
imull
xorb
inc
sbb
adcl
imul
pop
pop
mov
pop
add
cmp
mov
xor
ret
mov
add
bound
sbb
mov
rcll
subb
add
std
jle
sarl
adc
fidivrl
cmp
or
out
fs
mov
repz
lods
cmp
and
jns
lods
dec
lahf
jmp
lock
xchg
sarb
add
or
adc
and
negb
inc
dec
mov
pushf
fldt
out
push
lock
jne
mov
clc
add
mov
xor
sbb
jno
xchg
call
pop
xchg
ja
jmp
cmp
cmp
mov
push
sub
pop
insl
dec
adc
lcall
dec
das
fistl
mov
mov
mov
aad
repz
popf
or
stc
fdivrs
sub
je
mov
and
not
shl
pop
dec
dec
dec
mov
into
das
lock
in
jne
mov
in
mov
fistpl
nop
xchg
mov
iret
not
clc
adc
fdivrl
nop
inc
mov
lret
sbb
xchg
negb
pop
sar
mov
pushl
add
push
fs
pop
jl
in
xchg
mov
sbb
inc
test
pop
data16
addr16
scas
xor
jnp
cmp
imull
leave
in
loop
insl
dec
leave
dec
lahf
push
sbb
clc
add
fimuls
jbe
dec
jb
mov
cmc
outsb
dec
dec
imul
mov
dec
int3
cmp
out
or
insl
jbe
sub
jmp
loopne
orl
pushf
fs
mov
adc
mov
gs
mov
iret
fnstcw
dec
push
paddusb
inc
pusha
les
adc
push
cmp
fcoml
cltd
insl
ret
adc
imull
xlat
xchg
pop
cmp
mov
add
xor
iret
cwtl
or
stc
cmc
mov
or
inc
out
fs
call
in
lods
pop
int3
xchg
mov
xchg
outsb
push
sbb
or
shlb
cmp
and
mov
rcr
xor
add
pop
rcll
pop
xor
pushf
pop
addl
adc
and
fwait
loop
fwait
out
cmpsl
iret
sbb
icebp
sub
jl
pop
ds
sbb
jmp
lret
dec
push
push
xor
cmpsb
hlt
mov
inc
loope
ss
nop
sub
mov
shlb
xchg
pop
sbb
fdivs
testl
mov
arpl
rsqrtps
jns
int3
das
push
jmp
fdivr
or
push
sbb
js
adc
jnp
sub
xchg
ficoml
mov
out
pop
add
dec
mov
mov
sub
mov
daa
mov
add
call
xor
enter
mov
push
faddl
into
sbb
out
outsl
outsb
inc
cmpb
jb
or
pop
roll
and
and
dec
xlat
push
in
sti
clc
sahf
lcall
jne
dec
sub
stos
fstps
testb
mov
sub
fs
sub
adc
fnstcw
ret
xchg
cmpsl
outsb
push
adc
add
push
inc
pop
xor
mov
xchg
aaa
add
jnp
js
mov
sub
ja
int
mov
xchg
aas
popf
popl
jo
add
inc
sub
das
dec
xchg
pop
int
mov
mov
loopne
push
pop
add
and
shlb
mov
sub
mov
lahf
sub
add
ljmp
fidivrl
add
dec
pop
cmp
and
cmp
les
subl
mov
xor
sti
out
xchg
iret
pop
xchg
jae
push
adc
cmp
js
orb
mov
pop
sbb
pop
push
mov
popa
lcall
inc
pop
jl
dec
mov
adc
mov
lock
xchg
and
inc
add
dec
sub
mov
add
inc
or
sbb
add
lock
jl
mov
icebp
test
test
mov
dec
mov
xchg
pop
jmp
pusha
mov
add
jl
ficoms
insb
or
stos
push
daa
imul
loop
cmpsb
mov
xlat
call
pop
push
repnz
cmc
fidivl
mov
cltd
rcl
fsubrl
fcoms
or
mov
cld
inc
dec
testb
std
inc
je
filds
es
cmp
in
bound
sbb
cmpsl
mov
mov
mov
int3
pop
jle
xor
addb
inc
adc
imul
mov
cwtl
fwait
test
shlb
sbb
or
push
not
push
inc
mov
fimull
jp
jbe
scas
or
fidivrl
scas
das
aaa
push
sub
movsl
xor
sbbl
cltd
insb
clc
or
push
or
fwait
xchg
stos
lahf
lret
shll
shrl
pusha
cmpsb
xor
gs
mov
mov
xor
cmp
adc
orl
outsb
aaa
push
mov
into
data16
loope,pt
shr
push
mov
rolb
sbb
dec
mov
rolb
lods
cmp
jns
push
call
push
ret
push
mov
enter
dec
xor
xchg
sub
mov
jo
sbb
xor
cmp
xchg
and
mov
loope
jae
xlat
mov
push
rcrl
stos
pop
mov
ret
mov
imul
lods
jno
addr16
push
shll
mov
xchg
xchg
int3
ret
mov
int
lcall
movsb
notl
ss
loope
repnz
xor
jmp
test
cs
mov
cmp
xor
push
pop
cmp
cmp
jp
loop
mov
add
inc
xchg
mov
ss
sbb
adc
ljmp
cld
out
lods
cmpsl
popa
inc
xchg
js
lahf
test
dec
push
jno
jecxz
push
fs
hlt
int3
fistps
imul
fcmovnbe
in
pop
push
std
cmpsb
call
cmp
lock
mov
clc
and
jno
push
mov
adc
aas
jge
ss
mov
pop
mov
jbe
pop
xor
nop
loope
lods
jns
pushf
andl
cld
les
pop
and
repnz
mov
adc
dec
icebp
and
aam
lods
mov
dec
rorb
pop
shrl
jle
sub
repnz
jae
add
pushf
mov
popa
or
scas
jns
dec
xchg
orl
mov
and
in
sbb
fsubrl
cwtl
sbb
pop
lahf
outsl
inc
dec
mov
aam
loop
pop
out
and
lea
xchg
sbb
iret
std
loop
mov
jge
les
and
jp
lea
xchg
add
jecxz
pop
cmpb
push
add
aaa
inc
cmp
mov
movsb
mov
pop
aas
aad
loopne
mov
test
and
pop
adc
in
pop
mov
push
cmp
hlt
jae
cmp
fcomps
pop
push
dec
pop
aaa
mov
or
arpl
pusha
fdivs
jmp
ljmp
outsl
push
js
push
jne
and
fisubs
mov
xor
ss
stos
fwait
je
add
popf
jl
dec
rorl
and
push
inc
push
stos
cmp
ficoml
and
jecxz
fldl
jge
pusha
and
fcmovne
pop
cmp
je
fcom
out
fists
ds
jo
fs
bound
or
psubusb
lret
mov
pop
int3
push
sbb
lret
pop
add
loope
dec
adc
and
aas
dec
sub
notb
or
push
testl
cmp
in
push
lds
psadbw
inc
ja
lock
jp
mov
aad
pop
add
or
lods
imul
pop
mov
push
ret
sbb
std
cmpb
jecxz
add
or
adc
jmp
sbb
dec
rorl
sub
xchg
jl
dec
add
push
adc
dec
ficoml
jb
lods
hlt
cmp
mov
inc
add
inc
mov
aad
fisubrs
cmp
dec
or
popl
cmovb
test
imul
out
popa
pop
add
int3
push
pop
mov
xchg
push
les
je
aas
lcall
aam
adc
in
cmp
and
lret
jecxz
sub
cli
inc
sub
aad
cmp
xor
lahf
clc
xchg
add
iret
xor
and
pmaxsw
pop
cmp
rolb
mov
or
cld
pop
ficoml
push
pop
mov
fistpl
pop
xchg
test
aas
in
push
gs
stos
pusha
pop
pop
data16
outsl
push
cmp
fwait
aaa
adc
cltd
mov
dec
das
mov
int3
mov
fwait
popf
mov
jo
scas
loopne
cs
outsb
or
mov
adc
movq
shrb
jo
mov
push
sub
lret
mov
and
dec
fistpl
or
loop
adc
sbb
add
cmpsb
std
testb
mov
cmp
inc
or
loope
out
clc
jle
push
rcll
push
or
jno
adc
add
rcrb
movsl
out
push
dec
or
pop
pushf
scas
fnstsw
pop
push
or
mov
sti
iret
gs
lock
pop
sbb
push
stos
jo
stos
add
gs
test
cmp
or
aas
push
and
ljmp
mov
cmc
test
testl
mov
cmp
sub
push
imul
aas
add
int3
test
xor
push
pop
sbb
movsl
cmp
mov
dec
aas
ret
inc
mov
stc
in
and
jb
sub
push
rclb
dec
add
jbe
jb
jno
lods
inc
into
or
ds
add
xor
popf
and
or
fiaddl
test
mov
test
push
dec
pop
out
push
or
or
scas
icebp
push
and
xchg
jp
adc
ror
test
pminub
xor
xchg
dec
jne
adc
mov
xor
enter
aas
scas
sbb
filds
popa
enter
cltd
testb
test
shl
fdivl
notb
sub
test
mov
xchg
repz
out
popa
pop
shrl
add
xchg
jle
popf
aaa
leave
mov
push
cs
and
xchg
mov
adc
cltd
outsb
cmp
pop
and
lret
mov
les
ficompl
call
xchg
mov
jne
push
in
xchg
fistl
addr16
cli
push
jne
jno
xor
bound
add
mov
ljmp
push
dec
lahf
stos
cmp
outsl
mov
push
or
adc
pop
inc
dec
adc
mov
and
mov
mov
sbb
icebp
lods
cwtl
or
daa
cmpsl
mov
dec
data16
repz
cmc
sbb
sbb
pop
cmp
xchg
push
mov
sub
cli
and
popa
and
xchg
pop
cli
jmp
popa
lods
pop
mov
xor
sub
push
arpl
xchg
mov
cld
xchg
aaa
mov
gs
mov
mov
mov
loopne
xchg
xchg
arpl
movsb
xor
or
ss
fidivrl
ret
xor
inc
imul
or
jns
mov
inc
fldl
cmpsb
xchg
sub
imul
out
outsl
cmc
je
xor
ret
ret
outsl
test
cmp
and
out
fmuls
test
lea
dec
add
and
insl
sbb
mov
inc
mov
cld
stc
mov
mov
pop
lock
call
stos
iret
subl
adc
addl
or
adc
pop
idiv
les
and
push
repnz
loope
cltd
mov
mov
dec
test
in
xchg
ret
rolb
xchg
rol
or
lods
rorl
repnz
lock
dec
mov
or
fisubrs
ds
jne
push
jo
push
mov
pop
jl
mov
push
int3
int
xchg
and
dec
js
stos
fwait
jb
pop
mov
mov
inc
xchg
popf
hlt
sbb
lods
pop
push
adc
cmc
repz
pop
faddp
es
lahf
mov
jp
aaa
inc
add
sub
and
and
ja
cltd
outsl
inc
hlt
jbe
or
out
iret
in
pop
mov
or
or
imul
lods
and
out
adc
hlt
lret
inc
sbb
fs
cmp
repz
insl
lret
aas
hlt
sahf
jle
mov
xchg
dec
adc
icebp
jmp
or
lds
adc
loopne
lods
mov
adcl
mov
les
mov
mov
jbe
jmp
aad
mov
pop
in
mov
and
inc
cmp
xor
pop
loop
clc
add
mov
fsubl
jbe
jne
scas
out
cmpl
or
out
jbe
lcall
mov
sbb
popfw
mov
mov
adc
dec
jl
xchg
lods
sub
jno
ds
sahf
test
cmc
insb
push
xlat
cmc
or
jae
mov
out
ret
jnp
stc
inc
inc
and
mov
int
bnd
xchg
aas
das
popa
data16
inc
lcall
mov
inc
adc
je
pop
outsb
sub
out
out
dec
and
roll
mov
inc
bound
popf
subl
dec
popa
cli
popa
movsb
shll
xchg
mov
bound
lcall
das
jmp
xor
jmp
and
push
xchg
xor
mov
push
xchg
push
mov
sbb
in
lods
add
xor
xchg
lock
xchg
jb
jno
movsl
out
xchg
cwtl
inc
es
jp
jo
and
sbb
test
mov
push
in
dec
into
out
pop
pop
sbb
bound
ret
xor
sti
lahf
pop
push
repnz
pop
int
cmp
int
ljmp
pushf
bnd
mov
jbe
sub
push
cmp
pushf
test
add
pop
movsl
adc
call
cmp
rcrl
xchg
int3
into
nop
push
nop
ss
test
mov
fnstsw
jnp
push
leave
test
je
jg
daa
xchg
push
push
pusha
leave
jle
cmpsb
add
jecxz
and
xor
mov
push
lock
pop
dec
or
cmpsb
and
fimuls
jno
adc
push
lods
insl
sti
jo
jecxz
insb
cmp
adc
sub
fcomps
xor
int3
jb
cld
adc
mov
xchg
orb
loopne
daa
mov
lahf
jb
shll
pop
enter
jmp
or
sets
dec
pop
and
movb
iret
imull
cltd
xchg
ja
push
adc
pusha
dec
mov
cli
popl
dec
dec
push
mov
xor
aad
xor
sub
insl
mulb
sbb
push
xchg
das
mov
push
cs
and
in
imul
xchg
fwait
fwait
sub
in
mov
cld
xchg
cmc
icebp
sbb
arpl
incb
pop
cltd
push
test
mov
add
fistpll
xchg
lds
adc
minps
push
add
xchg
adc
add
jns
subl
mov
xchg
mov
dec
push
xor
rcrb
dec
rorb
and
loop
lea
rorl
mov
xor
out
lds
push
fwait
shrl
jbe
scas
xor
push
push
pop
sub
ds
jns
imul
int
mov
ja
repnz
shlb
pop
cmpsb
xchg
pop
mov
es
aam
cmpsl
pop
nop
mov
adc
lahf
addr16
mull
lret
sbb
mov
and
jp
repz
nop
lret
cmp
pop
mov
and
jecxz
dec
shlb
in
mov
dec
sub
add
mov
sbb
out
data16
jae
arpl
mov
movsb
movsb
lahf
and
fwait
pop
decl
or
pop
mov
icebp
cmp
clc
cmpsl
sbb
sahf
add
fistl
repz
adc
pusha
dec
push
dec
and
dec
cs
mov
dec
ret
sub
xlat
andb
sub
and
aaa
loop
out
xor
lret
push
inc
test
into
xchg
inc
jb
inc
sub
push
xchg
mul
rorl
sub
jb
cmpsb
mov
add
mov
pop
fwait
jb
lea
dec
jl
scas
xor
shll
mov
jb
cmp
test
push
orb
or
ja
jmp
push
sub
dec
es
cli
cmp
xlat
cmp
into
ja
jne
mov
pop
lea
cmp
testb
jecxz
sub
jmp
cmpsl
xchg
pop
popf
mov
neg
jo
fisubrl
js
gs
mov
addr16
jp
or
push
mov
rcll
pop
and
pop
int3
adc
cld
push
sti
outsl
fcoms
sbb
pop
adcl
sbb
jne
cld
xchg
cmpsl
jmp
fstl
popa
xchg
or
pop
in
mov
out
jo
insb
cli
loope
pop
sbb
xor
cmpl
inc
sbb
fildll
outsb
out
fs
jbe
and
fidivrs
mov
mov
loopne
js
pop
inc
inc
xor
or
ds
mov
mov
ljmp
or
sub
inc
je
mov
jne
mov
pop
insb
mov
mov
adc
flds
addb
dec
sub
bound
mov
arpl
pusha
or
call
shr
mov
jmp
xlat
jae
push
ljmp
lret
rcrl
sbb
xchg
mov
mov
pop
and
les
dec
outsb
loop
jae
or
insb
jb
push
dec
jne
add
in
mov
dec
sbb
cmp
call
xchg
sti
cmp
stos
ljmp
or
scas
dec
out
ljmp
into
jl
ljmp
mov
push
pop
mov
mov
lret
push
jb
and
xor
js
add
rol
lret
mov
mov
mov
test
fnstenv
test
cltd
aam
dec
inc
stos
or
cmp
out
push
mov
sbb
mov
std
das
sti
jb
pop
mov
sahf
jp
addr16
jle
aam
test
loope
cmc
xlat
loop
mov
out
pop
ss
movsb
xchg
insl
adc
clc
fdiv
sbb
out
pop
and
cwtl
je
and
in
test
fnstsw
xchg
ljmp
jle
lahf
push
mov
js
mov
outsb
adc
aad
hlt
pop
or
mov
fists
dec
xor
out
leave
insb
mov
and
inc
setb
repnz
add
sbb
sbb
jge
out
aaa
test
lahf
mov
data16
lcall
mov
enter
push
lret
cmp
cwtl
cmp
mov
mov
ss
add
test
in
and
out
sub
cmpsb
scas
scas
sahf
or
jle
adc
in
sub
lds
jmp
add
xchg
stos
jmp
lahf
movsl
dec
xchg
jns
cli
lods
jmp
pop
jo
imul
pop
xor
adcb
test
cmp
pop
mov
iret
lret
seto
jnp
test
push
xchg
cli
push
mov
sub
addb
inc
das
clc
into
push
adc
jno
loop
jp
call
out
mov
pop
in
xchg
or
in
xchg
call
cmp
insb
adc
push
lret
inc
add
inc
add
mov
imul
movsb
jmp
cmp
fldcw
rorb
dec
je
and
inc
sti
cmp
push
mov
push
in
fdiv
adc
cmp
popa
xor
lods
fisubrl
out
icebp
cli
cs
in
je
pop
in
push
lods
fst
jbe
xchg
adc
mov
push
inc
out
xchg
inc
xor
jge
cmp
popa
repnz
mov
jnp
movsb
and
jmp
dec
insb
pop
daa
jno
cld
push
and
add
jo
sbb
jne
int3
into
repz
shrl
lods
sbb
loope
sub
cmp
cmc
out
sub
xor
mov
shll
rcrl
add
daa
cmpsb
cmp
cli
daa
xchg
insb
xchg
aas
fwait
add
xor
push
cmp
and
sub
dec
or
lret
inc
adc
fiadds
pop
into
jl
or
ds
fnsave
jo
lods
mov
repz
sbb
jmp
add
or
adc
insb
aad
xor
enter
jmp
push
cwtl
mov
subps
inc
sbb
mov
mov
push
ljmp
xor
fcmovb
test
add
ja
xor
xor
jnp
mov
cli
fdivrs
mov
jnp
pop
pop
mov
jnp
mov
and
or
push
add
inc
sarb
jge
xor
gs
loopne
movsb
in
ljmp
mov
and
cli
lret
dec
inc
leave
adc
and
sbb
mov
scas
mov
mov
je
inc
dec
xchg
fdivs
popf
xchg
cmpsb
push
imul
add
dec
jnp
jae,pt
xor
xchg
lods
xorl
jae
add
or
ret
sbb
xor
push
xor
cwtl
xor
dec
inc
jns
sti
loope
pop
jge
roll
xchg
lret
mov
pop
jae
out
inc
daa
aad
in
mov
js
and
fdivr
dec
push
mov
cli
add
mov
jo
cmp
in
push
std
cmpsl
js
aas
sahf
sti
into
das
fsub
cli
or
in
and
inc
pushf
sti
outsl
test
shr
popf
adc
rclb
mov
popf
pop
xor
cs
sub
lock
adc
fisttps
mov
jp
test
imul
jo
mov
scas
mov
fwait
stc
popa
adc
outsb
add
mov
test
jecxz
cmp
pop
ret
in
ljmp
pop
xor
pop
sub
push
inc
mov
mov
jne
ficompl
les
js
aad
out
loopne
jl
in
insl
or
jl
inc
mov
xor
xor
imul
add
fistl
fwait
jb
xor
and
pop
push
or
in
in
js
or
push
mov
fsubs
mov
adc
in
aam
cli
xchg
clc
sbb
mov
jnp
movsl
out
testb
pop
fiadds
dec
add
ret
das
lock
push
sahf
notb
enter
cltd
lods
out
or
mov
push
xchg
inc
jne
jns
jge
push
or
fs
push
push
out
call
mov
imul
out
ds
push
cmc
sub
sub
fidivrs
xor
les
fwait
stos
xchg
js
ret
adc
je
inc
ror
mov
cmp
mov
movsl
mov
orl
push
and
imul
sahf
cltd
xchg
pop
mov
jg
daa
jb
fbld
add
call
or
pop
adc
out
xchg
repz
push
xorb
and
lahf
pop
ja
es
mov
stos
pop
sbb
mov
adc
bound
je
cmpsb
movsb
shll
and
jno
aas
rorl
xchg
or
popf
cmp
mov
ja
fimuls
lcall
inc
jp
bound
pop
pop
imul
xchg
and
push
lahf
mov
in
dec
int3
cmpsb
dec
sbb
inc
mov
xchg
cwtl
dec
push
push
sub
stos
stos
pushw
mov
dec
adc
push
inc
pop
movsl
push
nop
pop
xor
and
out
test
sbb
frstor
ss
ret
xor
mov
cltd
ficoml
stos
push
mov
xlat
or
cmc
jnp
cmc
int
xchg
inc
imul
mov
lcall
push
pop
adc
cld
pop
aad
shlb
mov
shll
xchg
inc
jo
jae
lock
sahf
das
cmpsl
add
pop
mov
sub
jne
xorl
dec
scas
push
adc
sbb
xchg
call
ret
and
mov
fwait
sbb
iret
ret
fisttpl
out
ja
mov
or
push
or
xchg
pushf
arpl
hlt
hlt
cmp
nop
dec
ror
mov
pop
mov
inc
mov
jl
jle
mov
or
xchg
xor
jno
mov
inc
sbb
cld
sub
outsl
cmpsl
jp
loop
ret
inc
insl
mov
jecxz
movsb
adc
xor
sub
inc
xchg
jl
mov
jmp
mov
movsl
mov
mov
xchg
sub
cli
sub
packsswb
mov
imul
stc
sub
sbb
mov
shll
repz
leave
outsb
enter
mov
pop
inc
nop
frstor
inc
in
adc
popf
mov
stos
mov
add
dec
and
mov
mov
jne
jmp
xchg
cmpsl
pop
jge
sub
mov
movsb
imul
or
lods
out
jb
sub
lret
mov
mov
subl
push
push
xor
into
rcr
cli
cmp
out
fbstp
adc
sbb
stos
jae
push
std
push
mov
movsl
cmp
nop
ds
sub
cmpsb
pop
push
ds
ja
xor
fwait
dec
mov
mov
pushf
mov
scas
lahf
lods
mov
push
sbbb
insb
adc
repz
push
jg
sbb
jmp
lcall
adc
jl
or
cmp
jno
pop
or
adc
xchg
push
stc
fsubs
iret
in
jge
push
adc
or
sub
add
aad
xchg
xchg
and
jo
inc
gs
xchg
sbb
mov
mov
mov
cmp
test
inc
cmpl
and
lret
add
imul
xchg
xchg
dec
cmp
adc
repnz
out
cmpb
lret
push
jl
insb
mov
mov
xchg
and
out
lcall
pop
push
out
mov
mov
js
cld
loop
jp
push
xchg
mov
xchg
daa
in
mov
into
and
fwait
shlb
and
lret
mov
and
popf
pop
mov
or
cltd
rolb
xor
mov
cmp
lea
adc
movsl
test
call
outsb
add
movsb
into
pop
jo
mov
cwtl
imul
je
push
add
dec
adc
pop
addr16
jnp
adc
sbbb
mov
fwait
cmc
sub
add
mov
hlt
stc
add
rclb
or
stos
sbb
mov
test
pop
scas
and
jl
jl
std
jne
aas
cltd
xchg
repz
lahf
outsb
jp
movsl
in
outsb
inc
sbb
and
sbb
mov
movsb
std
mov
add
push
add
add
in
push
std
cmp
adc
jg
push
mov
cltd
je
inc
data16
les
pusha
test
test
or
dec
in
mov
test
pop
out
int3
pop
pop
shr
push
and
les
out
inc
xor
scas
pushf
enter
jmp
ret
mov
dec
push
inc
int
imul
xchg
sbb
add
and
jl
js
mov
rorl
sarb
aas
xchg
sub
scas
mov
inc
xchg
mov
pop
xchg
adc
lret
push
push
push
cmp
mov
xchg
mov
mov
xor
pushf
mov
xor
or
or
push
adc
imul
add
mov
inc
sub
stc
mov
mov
mov
repnz
ret
in
enter
fprem
inc
jg
adc
mov
rep
fnsave
cmp
jp
cld
sbb
jp
int3
inc
jl
push
mov
pop
std
push
mov
jecxz
popf
outsb
je
in
lods
stos
push
xchg
sub
lret
sub
xchg
push
aas
xchg
sub
test
push
andb
loop
mov
fs
or
loope
xlat
jge
jg
mov
scas
jnp
jnp
sub
arpl
add
iret
xor
out
jmp
scas
addr16
testl
jns
pop
jae
sahf
test
out
repz
arpl
cmp
sub
icebp
lcall
shll
inc
out
adc
add
popf
cmp
lcall
xchg
das
mov
scas
aaa
icebp
mov
push
jo
or
push
nop
jns
sub
aam
sbb
jl
mov
xor
cmpsl
jb
jnp
push
outsl
xor
movsl
mov
fidivrs
sbb
dec
stos
int3
push
ret
sbbl
rcr
je
in
scas
or
xor
outsb
push
rolb
rcl
mov
cli
dec
mov
mov
sbb
mov
fildl
push
dec
lcall
fwait
sub
pushl
cmp
enter
inc
scas
add
rcrb
and
fnsave
fcompl
cwtl
push
jb
fcmovne
lcall
mov
xor
enter
jbe
xlat
in
or
sahf
popf
pushf
dec
inc
cli
push
pop
syscall
xchg
dec
popa
out
adc
mov
ret
call
iret
push
lds
scas
jns
mov
mulb
jne
adc
mov
movsb
std
xor
pop
fidivrl
fyl2xp1
sahf
stc
lahf
xchg
mov
cmc
xor
lock
push
js
inc
jbe
aas
mov
xor
jae
pop
mul
lock
aam
xchg
inc
inc
pop
jmp
cmc
int
out
int3
test
movsl
call
mov
inc
int3
cmp
jne
or
push
sub
mov
cwtl
pop
int3
jns
jp
mov
mov
shrd
jns
mov
mov
mulb
inc
pop
xlat
ss
push
push
clc
inc
push
andb
xor
or
jae
and
loopne
scas
adc
lods
aam
sbb
stos
js
push
shll
xchg
xchg
xor
inc
hlt
xchg
repnz
je
jg
add
lds
sub
add
mov
or
xchg
inc
cmp
iret
scas
sahf
jecxz
and
mov
inc
cmp
sbb
sub
cmp
pop
dec
negb
mov
lock
cltd
jae
addb
orl
mov
out
and
sbb
pop
repnz
ja
pop
push
ljmp
dec
jb
call
mov
and
out
fisubs
push
push
jo
adc
and
pusha
gs
call
rclb
add
mov
push
inc
dec
jnp
fstp
cmp
cs
xchg
ret
fcomi
sub
ds
push
shl
add
nop
leave
push
mov
sbb
jge
lods
cmp
aad
jmp
aaa
pop
aaa
mov
mov
or
shrb
mov
xor
mov
cmp
mov
cmp
cmp
xchg
mov
js
hlt
pop
xor
gs
mov
pop
pop
mov
cld
aam
xchg
mov
cmc
sub
cmpsl
adc
cmpsl
mov
mov
int3
loope
lea
lea
lea
rcl
and
sbb
mov
leave
cmp
aad
inc
mov
push
testl
lods
aas
xchg
sahf
aad
add
das
mov
arpl
or
mov
jge
xor
jmp
out
call
adc
jbe
fwait
jp
push
mov
sbb
imul
pop
loope
sub
rolb
leave
and
fisubrl
addr16
inc
cmp
mov
loope
loopne
sbb
dec
aas
adc
inc
fsubs
push
addl
or
cmpsb
test
call
mov
inc
adc
lcall
inc
jae
jbe
jno
xchg
pop
rcrl
sub
dec
mov
clc
adc
rcrb
dec
pop
adc
divb
mov
iret
xchg
adc
pushf
stos
popf
sub
push
mov
ja
std
mov
sub
rolb
sub
fidivrs
jle
dec
and
test
dec
movsb
cmpsb
push
lcall
dec
iret
adc
xchg
cmp
clc
and
inc
mov
ss
sti
mov
xlat
jns
das
sub
in
or
xchg
xchg
scas
mov
xchg
jg
sbb
insw
push
xchg
ds
cmpsl
jecxz
out
xorl
cmp
pop
mov
sbb
hlt
das
mov
push
sbb
mov
pop
push
push
in
mov
out
or
jmp
mov
adc
insl
das
xchg
cld
dec
sbb
sub
inc
xchg
lods
stos
mull
xor
add
and
clc
out
push
pop
shr
xlat
lock
push
outsb
jl
pop
orb
lea
das
push
dec
pop
cmp
dec
and
mov
test
push
ret
repnz
in
lret
dec
repz
outsl
adc
pop
imul
dec
and
in
shll
pushl
fmuls
mulb
mov
pop
sahf
cmp
adc
inc
adc
and
jmp
and
les
cmc
pop
cmp
imul
ds
push
sahf
repnz
pop
mov
cmp
fdivrl
clc
fcmovnbe
cmpsb
push
pusha
xor
pop
xchg
dec
sar
adc
mov
fadds
sbb
sbb
and
sbb
mov
out
dec
pop
or
xchg
pop
sbbb
xor
adc
jmp
mov
sbb
push
test
sub
jae
sbb
jb
jae
out
mov
or
push
pop
out
roll
xchg
jbe
add
arpl
and
aaa
pop
sub
push
iret
dec
das
aas
jno
filds
sbb
test
sub
pop
shlb
mov
loop
orl
pusha
push
lods
xlat
sub
sub
imull
sbb
rorb
push
jl
pushf
insb
add
jno
adc
xchg
cld
pop
icebp
jge
xlat
dec
adc
lock
int3
clc
adc
popf
pop
sahf
jbe
call
gs
adc
sub
sub
stos
adc
sarb
in
mov
lret
divl
cmp
sbb
loop
mov
sbb
jns
sub
jle
inc
bound
cmp
cs
in
cltd
iret
adc
in
xchg
pop
jno
aam
inc
lds
mov
cs
movnti
fadd
adc
movsb
xchg
loop
fmulp
push
add
mov
sbb
in
mov
sti
cwtl
pop
dec
insl
ds
xchg
test
add
jae
cmp
cmp
jecxz
insl
std
fsubrl
dec
sub
cmp
push
or
or
outsl
adc
out
into
fistpll
mov
test
out
imul
fmul
cli
cmp
aam
rclb
popa
and
mov
jp
in
and
jle
push
lret
xlat
movsb
or
mov
pop
inc
arpl
rclb
and
test
xchg
arpl
es
es
fisubs
sarb
in
push
arpl
xor
mov
jg
fdivl
roll
arpl
cmp
cli
call
cmp
cmp
mov
or
cmpsl
into
xor
adc
enter
imul
mov
xchg
cli
cmp
test
add
xchg
or
loopw
stos
xor
cmp
shrb
xchg
sbb
dec
aas
xor
ss
fwait
add
lcall
andl
test
sbb
sar
dec
daa
in
addl
xchg
pusha
stos
out
gs
xor
fwait
out
jo
outsb
mov
test
jbe
mov
movl
aaa
idiv
dec
adc
and
aam
fbstp
sub
incl
iret
mov
mov
xchg
jp
pop
jmp
insl
js
test
jae
fiaddl
cmp
adc
das
mov
or
out
pop
dec
das
in
push
dec
sti
nop
stos
add
mov
sub
sub
std
mov
push
sub
jns,pn
mov
mov
rcrb
sub
push
jg
lock
fucomp
adc
jo
push
cwtl
pop
pop
ja
js
insb
sti
dec
jne
push
cs
loop
aas
xchg
orl
or
push
test
or
mov
test
cmpsb
ret
insb
pop
notl
mov
adc
jo
mov
jo
insl
jbe
bound
pushf
push
and
push
cmp
rorb
jmp
push
jnp
mov
pushf
cltd
sub
pop
and
dec
jno
xor
push
insl
inc
sti
cmp
push
jecxz
test
xor
iret
mov
push
mov
js
test
inc
dec
cmc
sarb
dec
and
add
out
outsb
std
ret
xchg
pop
xchg
nop
add
stos
mov
jp
mov
loope
lcall
push
mov
cwtl
mov
scas
push
lea
xchg
sbb
inc
dec
push
mov
outsb
mov
pop
or
pop
rcrl
data16
int3
mov
gs
cmpsb
movsb
ret
movsb
je
pxor
popf
xor
mov
jnp
push
xchg
or
fbld
and
in
cli
pop
pop
pop
repz
std
or
icebp
pop
jecxz
push
scas
repz
shl
jae
cld
fcmovnb
mov
int
cld
sub
inc
jmp
loop
inc
push
jmp
or
inc
sbb
mov
lret
ret
mov
test
pop
sar
mov
les
pop
scas
outsl
mov
cmp
test
xchg
and
push
mov
rcr
pusha
int
mov
cmp
adc
adc
mov
or
and
add
mov
fwait
and
mov
xchg
in
sti
mov
ds
insl
lds
or
mov
cmp
rdtsc
sub
popa
jns
popf
jmp
xchg
or
movd
sub
jle
mov
or
sub
xchg
dec
jnp
xchg
adc
adc
jbe
xchg
cmp
pop
cmp
push
adc
xchg
inc
or
insb
inc
cwtl
jne
mov
enter
repnz
rcrl
cmp
mov
push
addr16
imul
out
stc
push
mov
loope
sahf
pop
shrb
or
or
push
loopne
xor
jecxz
scas
sbb
ffree
addr16
hlt
mov
push
push
shlb
push
fcmovb
and
arpl
pop
mov
inc
sbbl
imul
das
or
rolb
inc
mov
fcoms
xchg
insl
sbb
and
push
out
rcr
mov
xor
adc
xor
pop
mov
cltd
ds
and
loop
push
std
sbb
outsb
jne
in
test
cmpsl
dec
mov
or
mov
xlat
xor
push
jbe
xchg
dec
lcall
lds
dec
bndstx
sub
mov
pop
lcall
add
mov
testb
mov
and
out
mov
sbb
cmpsb
mov
sbb
push
fdivrl
aad
mov
iret
sbb
repz
pop
cmpsl
or
and
add
dec
mov
jae
lahf
test
cmpsl
les
je
sbb
gs
ret
mov
jecxz
loopne
jo
jnp
rolb
fistl
sub
mov
lds
xor
mov
push
ljmp
aam
dec
aad
push
xor
xor
cltd
sbb
mov
mov
jg
insl
cli
mov
iret
push
aam
inc
jge
sbb
stc
pop
lds
sti
jmp
es
insb
mov
or
in
ljmp
jp
ret
test
test
popf
dec
push
push
xor
sub
insl
cmp
lret
mov
fisubrl
push
repnz
mov
sarb
and
add
mov
out
xchg
cmp
xchg
fstl
pop
push
push
lock
cli
stos
mov
mov
sar
in
rol
rcrb
nop
imul
es
roll
lods
ss
jns
add
cmpl
xor
adc
cli
cmc
test
std
out
push
imul
fstl
xchg
rorl
rcrb
cmpsl
loope
enter
jno
jmp
xor
cmp
xchg
adc
fidivrl
sbb
imull
in
pop
aaa
mov
mov
mov
repnz
mov
push
push
xor
into
js
cs
cmp
xchg
push
daa
push
mov
lock
jecxz
or
pop
mov
mov
test
inc
ret
and
call
jg
mov
int3
fs
push
clc
icebp
cmp
push
fildll
add
fstp
sub
sbb
je
nop
fsubrl
push
aam
incb
and
cmp
pop
iret
stos
cmp
mov
sbb
and
sbb
adc
inc
xchg
aas
loopne
xchg
jno
pop
inc
sub
adc
sbb
mov
jbe
lea
out
rcr
adc
fidivrs
mov
add
xor
fadds
daa
dec
bound
mov
lods
dec
mov
and
popa
mov
mov
cwtl
jns
outsl
xchg
cmp
enter
adc
jbe
leave
std
lret
popa
in
fsubs
les
cmpl
roll
pusha
sub
outsl
lcall
xchg
mov
nop
pop
dec
push
imulb
push
dec
pusha
js
out
mov
fbstp
insl
outsl
test
pcmpeqd
loopne
inc
add
pop
daa
mov
nop
cld
dec
imul
rep
pop
leave
pop
lret
movsb
lcall
xlat
pop
loopne
clc
int3
sbb
push
fwait
lods
add
cltd
addb
dec
mov
outsl
dec
shlb
js
jo
jl
ret
pop
sub
insl
jge
das
fstps
dec
pop
cmp
sahf
lret
lock
das
jo
add
cltd
cmpsl
xlat
idivl
jg
adc
and
stc
push
sub
aas
xchg
xor
mov
adc
sub
push
out
ret
and
fmuls
loopne
jecxz
scas
inc
jno
mov
fs
fwait
sbb
inc
mov
imul
sbb
dec
or
mov
mov
push
mov
ja
inc
xchg
orb
inc
mov
loope,pt
mov
shll
inc
cmc
leave
lcall
push
sarb
sbb
inc
or
push
cmp
testl
icebp
and
pop
pop
dec
cmp
cli
pop
jno
adc
cmp
mov
inc
outsl
orb
imul
int3
orb
test
mov
sbb
mov
sti
js
mov
push
mov
sub
rol
imull
popf
pushf
xor
mov
adc
jb
mov
fimull
cltd
loopne
out
xchg
rorb
jno
xchg
and
scas
cmp
mov
inc
sbb
dec
xlat
and
or
jnp
mov
pusha
lcall
out
int
lods
dec
cmp
adc
lahf
mov
xor
add
jp
std
jmp
hlt
add
add
insl
arpl
add
roll
and
test
pop
push
push
dec
push
push
loope
fldcw
std
call
mov
lods
or
loop
stos
inc
lcall
jecxz
fwait
js
leave
add
in
es
pop
push
repz
adc
rorb
xchg
jmp
mov
inc
cmc
jg
dec
popa
pop
xor
pop
fidivl
mov
inc
outsb
ss
scas
mov
sub
jle
ret
icebp
push
lret
shlb
add
and
daa
aam
sub
in
test
or
jnp
mov
imul
pop
pop
mov
scas
pop
out
leave
aas
fistpl
nop
push
lods
mov
test
popf
ja
addr16
int3
mov
popa
sub
cmc
and
jl
fstl
aam
test
dec
mov
imul
mov
mov
dec
cmp
dec
push
call
cmp
clc
pushf
xor
sbb
adc
xchg
scas
loopne
pop
xchg
imul
adcb
add
sahf
dec
mov
mov
adc
ret
stos
mov
xor
repz
lds
mov
jno
scas
xchg
mov
jb
es
and
sbb
push
movb
iret
mov
stc
mov
sub
push
jl
fbld
mov
jnp
rcrl
mov
rolb
fincstp
sti
imul
lahf
or
adc
sbb
popf
aaa
push
mov
push
in
or
xor
in
cmp
in
sti
or
dec
inc
xchg
jmp
mov
loop
cmp
scas
sub
push
lret
sbb
sub
pop
pop
xlat
test
fidivrl
cmp
mov
push
adc
dec
lcall
imull
ret
dec
or
clc
jmp
rorb
jg
into
jbe
movsb
loop
shl
in
mov
leave
out
xor
mov
and
enter
insb
test
or
fcoml
dec
adc
leave
inc
xchg
xor
mov
hlt
jae
leave
popf
ljmp
lock
popw
mov
adc
or
adc
and
or
jnp
mov
xchg
mov
adc
or
push
push
cmpsl
and
jo
into
push
xor
and
push
cld
dec
shrb
fimuls
test
sbb
push
aas
adc
inc
pushf
xor
sub
dec
popf
cwtl
adc
push
sbb
add
fidivs
mov
imul
inc
xchg
sub
incb
test
xchg
out
lret
push
dec
inc
repz
sbb
inc
cwtl
ret
pushf
mov
inc
cmc
mov
jne
aad
ds
imul
insb
in
in
cmp
out
cmpsb
imul
movsl
xchg
fs
and
rcrb
sahf
add
lods
mov
mov
cmp
mov
pop
pop
or
fbstp
call
inc
add
xor
into
movsb
mov
js
pop
arpl
cmc
or
sub
scas
mov
sub
push
popa
rol
pop
pusha
stos
cmp
lock
scas
xchg
nop
fisttpll
cltd
in
sub
mov
jl
dec
std
imul
cld
add
mov
fidivrl
mov
adc
lcall
mov
xchg
hlt
add
dec
das
mov
js
insb
inc
sti
push
jl
aam
clc
sbb
enter
jae
or
pop
pop
mov
jmp
lea
fiadds
jge
mov
dec
rcll
arpl
xor
popf
jo
popa
sbb
lahf
insb
gs
jns
lea
in
mov
idivb
mov
jbe
adc
adc
addr16
push
push
outsl
ds
hlt
and
or
stos
dec
sub
xor
pusha
fwait
pop
sub
out
cmp
popf
dec
out
shrb
cmpb
mov
pop
push
icebp
and
fistl
xchg
test
imul
data16
ja
mov
test
fwait
addr16
je
add
and
cmc
mov
push
sbb
in
aam
xor
int3
xchg
sbb
adc
jmp
push
test
nop
add
loop
gs
outsl
in
and
icebp
out
inc
push
add
mov
ret
and
icebp
xchg
pop
gs
faddp
xor
mov
lcall
cmp
inc
sbb
ds
adc
jns
adc
in
jb
outsb
cmpsb
push
and
ret
iret
add
std
and
popf
dec
loop
shrl
std
jns
adc
adc
cmp
mov
lock
orl
mov
mov
clc
mov
movsb
jecxz
leave
sub
loope
jle
or
pop
hlt
insb
je
adc
fiadds
inc
jg
ljmp
ss
cmp
lea
mov
jmp
sbb
jno
enter
pop
lods
pusha
dec
cmpsl
push
inc
movsl
xlat
call
incl
mov
inc
rcrl
pop
xor
xchg
inc
push
cwtl
mov
mov
stc
push
movsl
mov
data16
jmp
cmpsl
aam
scas
je
insb
xor
pop
sbb
xor
lret
fiaddl
xchg
mov
sub
test
jb
sbb
pop
out
pop
cltd
pop
cli
and
scas
lea
push
cmp
clc
push
jnp
xchg
mov
sub
dec
or
fistps
jns
leave
push
aas
rclb
inc
movsl
cmp
aas
add
outsl
jnp
mov
cli
add
mov
loope
jbe
repz
shlb
ljmp
das
fcoms
push
sbb
push
sbb
out
sub
lds
jae
popf
xor
sbb
mov
rclb
adc
inc
cmp
jb
xchg
push
mov
daa
sahf
insl
mov
cs
pop
push
cwtl
add
jne
daa
mov
popf
lea
scas
insl
imul
sbb
into
jle
xor
clc
ret
push
sbb
adc
jl
pop
repz
xor
repnz
xor
push
loop
adc
mov
jmp
ficomps
xchg
or
jmp
jo
lds
ss
xchg
imul
dec
push
cmp
mov
or
mov
imul
cmp
sbb
out
sub
out
icebp
or
scas
and
leave
jnp
adc
lods
in
xor
int
mov
cmpsl
push
mov
dec
jmp
adc
popa
pop
inc
out
mov
adc
dec
and
loopne
sub
sbb
arpl
shrl
jp
lods
roll
xor
fucom
cmp
jp
ret
out
enter
es
fmulp
mov
mov
shlb
and
fninit
pop
adc
jmp
pop
push
xchg
or
adc
pop
arpl
dec
sub
sub
arpl
mov
lock
outsl
mov
daa
mov
pcmpeqb
jns
jle
mov
inc
xor
cmp
mov
mov
push
lods
mov
movb
push
inc
mov
push
div
push
sbb
imul
xchg
lods
sub
dec
daa
out
and
mov
int
loope
repz
sub
enter
pop
incl
mov
in
repz
bound
daa
pop
add
js
fdivrp
and
and
jecxz
lock
iret
out
and
mov
sub
cmpsb
pop
fdivrs
sub
cmp
pusha
jb
insl
sub
jp
jae
iret
out
sbb
mov
dec
cmp
int3
fimull
push
add
out
iret
mov
jmp
outsl
pop
das
je
scas
or
or
ret
jo
sbb
inc
jb
or
jne
xlat
jns
bsf
lds
pop
pop
test
add
jl,pn
fcmovnb
ss
add
rcrb
stos
dec
inc
adc
sub
inc
pushf
xchg
lock
mov
popf
cwtl
test
add
mov
mov
adcl
mov
aad
into
addb
cmp
add
movsb
test
pop
or
pop
cmp
xlat
out
sub
iret
ret
fstpt
orb
fwait
mov
and
push
pop
in
mov
sbb
mov
mov
adc
xchg
cmp
fimull
jg
cwtl
cmp
enter
adc
mov
clc
mov
xor
push
fsubl
daa
inc
sbb
cwtl
xchg
int
popf
stc
dec
push
mov
lock
mov
mov
jbe
mov
jge
inc
dec
sar
add
pusha
cmpsw
ret
es
push
push
push
cld
rorb
xchg
adcb
and
sub
mov
or
dec
aam
cmp
xchg
xor
addr16
sbb
rorb
mov
adcl
mov
and
std
cmp
shll
dec
call
sbb
dec
lret
push
test
pop
and
xor
mov
cmpsb
daa
adc
movsb
xor
cmp
lods
andl
js
cmp
pop
int3
cwtl
movsb
rol
mov
cmp
in
fiadds
cld
pop
mov
fwait
ss
xchg
lret
pushf
pop
jno
push
into
inc
loopne
cmp
cltd
jo
sahf
stos
mov
add
and
or
lods
jae
xor
or
pop
mov
into
pop
leave
xchg
imul
inc
mov
push
les
loopne
repz
fldl
outsb
sahf
test
mov
pop
stc
popa
ficomps
ds
in
les
pop
outsb
jo
lret
dec
pop
shrd
out
adc
sub
dec
ja
xor
dec
cmp
stc
rorb
pop
push
mov
mov
mov
mov
test
push
in
repz
rorl
aam
adc
adc
jb
std
dec
or
ds
mov
jecxz
fimull
xor
out
or
dec
pop
and
pop
dec
es
cmc
imul
int3
clc
sbb
std
iret
pop
mov
bnd
push
insl
mov
cmpsl
std
mov
loopne
ds
pop
xor
jmp
mov
sbb
aad
pushl
xor
sub
iret
ja
les
inc
add
mov
and
and
loop
mov
rclb
scas
or
jle
ljmp
jns
mov
scas
test
lock
push
std
pusha
sbb
mov
movsb
addl
insl
cmp
jo
xchg
lret
inc
sub
pop
xor
das
jmp
lcall
dec
in
inc
cmp
iret
pop
cmp
cmpsl
push
or
add
jno
sbb
or
iret
mov
xor
mov
mov
jp
xor
push
cmpsb
sub
incb
repz
sahf
mov
fwait
out
aad
and
mov
rcr
hlt
les
cwtl
push
pop
cmp
and
test
aaa
sub
in
les
es
std
ljmp
fmulp
cmc
mov
xchg
xlat
push
inc
sub
xchg
lea
lock
into
or
jg
das
sub
lret
push
pop
adc
out
aas
imul
negl
mov
out
lds
pop
xor
aam
add
fcoms
adc
andl
mov
mov
add
andl
fdivs
pop
sbb
and
popa
add
ja
or
sbb
int
lret
mov
frstor
test
addl
test
cmp
jge
stos
lds
dec
cwtl
dec
leave
push
ficoml
or
into
ror
lret
ret
cmpl
pop
push
ss
fs
fmuls
adc
jns
and
in
test
mov
loopne
mov
inc
pop
push
jno
push
inc
addr16
mov
sub
popf
fbld
sti
pop
lcall
gs
orl
pop
stos
jbe
and
mov
rcll
inc
sarb
pop
push
and
ljmp
xor
dec
das
cmpsl
sbb
and
sub
inc
and
bnd
and
js
sbb
jno
shrl
push
adc
sbb
pop
out
shrl
hlt
test
mov
inc
pop
mull
xor
sub
inc
mov
outsl
cmp
dec
sarb
fnstsw
fldt
adc
inc
dec
ss
or
test
dec
shrb
sbb
and
out
sbb
std
xchg
sti
jns
mov
jbe
push
inc
scas
mov
adc
jae
or
xchg
push
loop
mov
or
sub
xchg
lds
les
lcall
in
inc
dec
lock
into
leave
out
call
stos
stos
push
mov
ss
lods
jne
dec
and
cmp
mov
mov
ss
xchg
pop
dec
scas
test
xchg
jne
xor
movsl
mov
repz
xchg
popa
int3
sti
hlt
scas
push
sub
clc
loope
cmp
mov
push
scas
leave
jnp
push
shr
loopne
push
scas
sub
test
jge
pop
sub
mov
or
mov
adc
jmp
sub
dec
sbb
jecxz
lods
mov
shll
arpl
cmp
lret
dec
pop
insb
stos
jnp
and
fisttps
insb
or
dec
dec
cs
ljmp
cmp
jle
negl
pushf
sbb
add
push
loope
inc
out
and
rcl
xchg
outsb
adc
rcll
add
pop
mul
xlat
xchg
pusha
sbb
leave
jne
test
imul
dec
gs
hlt
lcall
jle
sbb
xchg
cmp
jmp
or
shr
pushf
stos
xchg
mov
mov
sub
or
xchg
xchg
sbb
inc
adc
pop
into
popf
cmp
cli
mov
pop
pmulhw
push
and
fst
repnz
fisttps
dec
shl
mov
xchg
inc
mov
iret
pop
mov
repnz
stc
dec
lea
bound
test
inc
outsl
outsb
cmp
pop
sti
lods
popf
in
aam
fsubl
movsb
inc
inc
mov
and
lods
xor
jle
inc
mov
cld
and
sarb
std
xchg
rolb
adc
dec
shll
test
pop
inc
imul
adc
outsb
imul
mov
stc
jp
int
fisubrl
sbb
rcll
mov
icebp
sub
adc
cmpsl
in
enter
outsl
cld
xchg
mov
test
lahf
nop
cmc
or
int3
loopne
sbb
fstl
out
mov
add
cmc
and
push
stc
cmp
xor
dec
cltd
or
adc
pop
rcrb
mov
mov
ljmp
cmp
add
popa
lcall
mov
iret
xchg
bound
pop
loope
ficompl
mov
adc
add
clc
push
add
test
ret
xorb
inc
mov
or
imul
sarl
repnz
inc
dec
lret
push
cld
sti
jne
loopne
test
pop
shll
shrb
andb
jnp
dec
xchg
ljmp
push
sbb
pop
xor
nop
sbb
push
xlat
fidivrl
pop
pop
pop
inc
inc
mov
andl
mov
and
out
jmp
aaa
push
dec
loop
push
out
cmp
jmp
push
sbb
jmp
pop
push
push
frstor
xchg
into
push
xlat
sub
sub
imulb
fimuls
rcrb
in
loopne
mov
loop
push
sub
rol
mov
mov
inc
into
mov
ret
mov
outsb
jno
ret
lds
dec
dec
lods
and
fs
call
jecxz
and
rorb
push
popa
repnz
pop
test
cmp
fwait
jl
in
mov
cmp
lods
push
clc
fwait
inc
repnz
aam
jecxz
jne
stos
hlt
xchg
sbb
mov
test
je
fstpl
roll
in
orl
lods
lods
mov
int
mov
fcmovbe
leave
aaa
lods
cltd
xrelease
arpl
or
pop
daa
sub
push
or
frstor
enter
mov
mov
cmp
lret
adc
mov
add
mov
movsl
fstl
lods
leave
pop
sub
cltd
lret
andb
ret
int3
divl
push
loope
push
mov
cli
mov
adc
fldt
push
jp
into
out
mov
push
ss
push
cld
xchg
jb
sahf
mov
and
insb
cs
arpl
mov
je
mov
push
jo
sbb
fisubrl
mov
xor
dec
idivb
sbb
push
dec
js
jle,pn
aad
pop
push
push
sub
shl
mov
mov
iret
fbstp
mov
lea
lods
shrl
cmp
into
enter
adc
aad
inc
lret
mov
jge
sbb
rcr
xor
pop
lods
and
arpl
addb
or
aad
ljmp
pop
dec
pop
xor
pop
xor
movsl
into
daa
divb
imul
mov
mov
xchg
pop
sbb
mov
mov
arpl
aas
data16
pop
push
cltd
dec
inc
push
jl
jecxz
mov
fdivrs
sbb
in
adc
pop
xchg
js
sahf
adc
test
lds
pop
outsl
cmc
add
jo
sarl
push
jg
xchg
and
mov
out
enter
dec
jne
xlat
xchg
test
jbe
fdivrs
dec
sahf
or
loopne
mov
jbe
xchg
jns
xor
mov
mov
sub
pop
mov
cmp
ss
clc
lret
or
imul
lods
xchg
loopne
insb
hlt
mov
mov
shll
sbb
jle
push
call
push
pop
mov
dec
aad
ds
jne
hlt
adc
jp
jns
jne
dec
jns
or
inc
enter
xor
pusha
jmp
mov
fsubl
cmp
loope
negl
aam
mov
sub
fisttpll
xchg
nop
push
jnp
dec
daa
inc
movsb
mov
in
test
leave
imull
dec
sub
push
aaa
xor
ret
ljmp
addr16
test
jne
jmp
jp
in
jne
lcall
outsb
xor
std
xchg
mov
loopne
mov
vpsadbw
sahf
loopne
mov
lahf
mov
fimuls
sbb
repnz
cmp
loop
addb
xchg
js
add
imul
xlat
data16
stos
jb
rcll
pop
shl
xor
xor
aaa
mov
adc
call
sub
sub
int3
fdivrs
leave
out
push
loope
adc
data16
outsb
push
sbb
rcl
xchg
pop
nop
or
hlt
xor
mov
push
inc
adc
xchg
in
mov
fidivl
dec
xor
push
mov
jnp
test
rorl
hlt
inc
mov
mov
enter
fdivrs
test
scas
mov
push
adcl
insl
cmp
aam
pushf
dec
sahf
adc
cmp
jae
mov
es
in
sbb
nop
fsts
sbb
sbb
dec
xlat
xor
out
pop
sub
gs
fwait
inc
lods
lea
rorb
es
pop
push
fwait
or
mov
mov
pop
add
pop
negb
cltd
in
add
shll
adc
and
dec
mov
hlt
mov
pop
pop
xchg
cli
cmc
mov
mov
out
push
out
sbb
rclb
icebp
jae
dec
outsb
sbb
adc
lds
cmp
sbb
xor
sub
mov
cmp
adcb
and
cmpsb
mov
or
incl
imul
ljmp
ja
leave
mov
jnp
cli
or
cmp
dec
cltd
push
fiaddl
fmulp
lret
stc
fimuls
pushl
mov
pop
lret
and
jnp
out
mov
push
lock
aas
stos
pop
pop
push
ja
xlat
dec
mov
adc
insl
invd
stos
fs
inc
outsb
mov
xor
test
mov
or
and
or
lret
dec
pop
shl
rcll
repnz
add
sub
stc
jno
orb
pop
stc
sub
aas
mov
movsl
push
pusha
inc
roll
push
push
sub
xchg
xor
mov
fs
mull
mov
shll
mov
mov
pop
dec
sahf
int3
push
jo
cwtl
insb
test
sub
js
mov
addb
mov
cmp
dec
nop
icebp
jno
xchg
xor
adc
int3
mov
mov
dec
repnz
mov
adc
mov
mov
pop
lock
test
shlb
scas
dec
outsl
dec
stos
pop
adc
dec
ds
ja
movsl
lods
mov
push
xor
testb
fwait
int
add
adc
sarl
shlb
das
sbb
add
fcoms
lds
xor
in
mov
xchg
mov
inc
ret
and
mov
scas
leave
and
jp
sub
dec
mov
rolb
jno
out
dec
cmc
xchg
es
mov
mov
fsubs
jae
xchg
dec
cmpsb
inc
cmp
rclb
push
pusha
xlat
pop
pushf
mov
jmp
in
out
adc
call
lock
xchg
push
mov
pop
or
and
repz
fisttps
add
mov
mov
adc
add
or
hlt
rclb
dec
flds
fbld
jl
stos
fcompl
add
or
mov
and
xlat
incl
push
cmp
and
xchg
adc
fnstcw
dec
ret
push
sbb
fwait
and
push
sbb
mov
das
movsb
sti
add
jge
xor
mov
push
sbb
mov
test
mov
loopne
inc
mov
lods
sahf
ret
cmp
pop
jae
xchg
add
sub
ss
sbb
mov
scas
sub
nop
pop
dec
jmp
xor
aas
lret
pop
sarl
lahf
or
jns
push
add
jno
jo
ljmp
pushf
xchg
lret
mov
mov
adc
loopne
mov
frstpm(287
outsb
fnstenv
jle
mov
inc
sarb
inc
dec
cmp
cltd
cld
fldt
mov
imul
jns
dec
dec
and
dec
jae
cld
arpl
ror
testb
ljmp
sahf
lock
push
jns
inc
add
push
push
pop
push
test
pop
pop
mov
out
clc
jle
cwtl
test
adc
loopne
je
imul
je
pushf
orl
leave
aas
dec
fidivrs
hlt
cld
sbb
adc
jo
inc
popa
or
popa
stc
aas
addb
test
pop
mov
jno
mov
rcrb
sbb
cmovae
and
cmp
scas
mov
sbb
pop
mov
repnz
xor
xor
pop
mov
popf
addb
xor
xor
aad
dec
sub
sub
push
mov
bswap
sub
push
ret
pop
push
sti
jnp
lea
outsb
mov
jae
lcall
int3
mov
xchg
pushl
lods
int3
sbb
push
mov
bound
push
and
jg
sysenter
repz
stos
mov
loopne
outsb
mov
jne
mov
in
pop
mov
push
sub
popa
or
je
loopne
add
xchg
test
data16
es
fcmove
mov
rolb
lock
clc
jmp
or
mov
xchg
lds
xor
int3
xor
iret
lcall
fsubl
xlat
inc
xor
roll
sub
test
mov
and
scas
sub
fisubrl
cld
aaa
xchg
mov
popf
inc
es
pushf
mov
scas
dec
push
cmc
mov
lcall
pop
pmullw
pop
ds
jge
or
sbb
shlb
test
ret
fistpl
adc
shll
rolb
add
into
adc
xchg
pop
sar
dec
mov
or
into
push
push
out
jns
sub
int
pop
in
inc
xor
mov
mov
dec
nop
pop
push
lods
pop
sbb
imul
push
adc
loop
mov
cmp
inc
test
shr
fwait
shrl
shll
shlb
out
xor
aam
jae
ds
push
imul
jl
mov
sarb
cmp
mov
fdivl
cmpb
cmc
jp
sub
jmp
xor
or
out
pop
dec
mov
out
pop
fstl
scas
and
fcoms
sti
push
test
mov
or
mov
xor
lea
shr
add
roll
andl
int
or
and
push
fsubrs
mov
test
sub
add
test
sarl
cmp
pop
movsb
pop
sbbb
in
in
xlat
lock
push
mov
mov
or
cmp
scas
or
mov
fdivr
pop
mov
fs
xor
or
jge
nop
shl
test
cmp
push
insl
notl
mov
xchg
sub
adc
sbb
or
in
rorb
mov
jae
mov
cmp
stc
xchg
pop
rolb
rorb
lds
jae
fcoml
out
add
or
das
add
shrl
adc
or
ja
xchg
std
sub
movsl
sbb
push
dec
pop
jecxz
xor
add
sbb
idivb
dec
mov
adc
jae
mov
jl
mov
xchg
aad
sub
lahf
xchg
sub
inc
mov
sub
repnz
stos
hlt
mov
rcrl
mov
push
and
xchg
out
mov
enter
mov
pop
int
mov
pushf
xchg
xor
gs
stos
clc
pop
xchg
fistl
int3
shll
add
inc
inc
mov
mov
pop
negb
scas
or
add
push
movsb
add
lds
jo
jo
pop
add
xchg
lcall
pop
mov
daa
push
and
xchg
jge
fidivl
jno
fwait
lret
push
jmp
aam
das
cmp
sbb
ss
mov
stc
ret
cmp
sub
cmp
dec
xchg
cmp
mov
add
lea
in
ds
js
mov
or
movsl
stos
ss
leave
sbb
add
push
loope
xchg
inc
adc
std
jge
sub
mov
fprem1
scas
cmp
push
inc
jge
je
xor
movsl
push
or
cmp
fidivrl
push
es
mov
int
mov
mov
jl
lret
pop
sub
lock
mov
in
push
popf
add
jae
jae
jl
or
sub
hlt
push
mov
add
lret
push
fnstcw
ret
imul
imul
lds
aad
cmp
mov
loopne
arpl
push
push
pop
mov
stc
or
ja
lcall
rol
xchg
cmp
in
inc
fisubrs
and
movsb
fnstenv
xlat
ljmp
adc
add
dec
aam
movb
inc
scas
or
mov
fcmovne
jbe
ljmp
xchg
mov
pop
fldenv
repz
test
addb
push
pop
pop
lock
insl
xor
xchg
push
insb
push
push
fistpll
popa
sub
mov
or
negb
pop
and
into
leave
mov
inc
out
outsb
xor
and
mov
xor
add
fcompl
icebp
jae
inc
inc
cmc
or
mov
cmp
push
dec
cmp
jno
sub
sbb
mov
mov
cmpsb
ret
popa
in
sbb
bound
fistl
mov
rolb
jno
ds
add
enter
mov
dec
mov
movsb
in
and
and
mov
pop
call
lods
test
mov
xchg
ret
fbstp
cmp
dec
adc
std
jp
out
xor
cld
imul
and
add
push
dec
xchg
aad
aad
and
jb
lods
cli
inc
and
in
mov
push
fstps
mov
pop
pushf
bound
call
fcoml
int
xchg
dec
mov
inc
add
push
in
xchg
xor
sbb
fcom
sbb
inc
imul
cmp
shlb
imul
cltd
aas
or
xor
mov
ja
aam
hlt
mov
xor
and
pop
test
sbb
pop
mov
fisttps
cmp
mov
cmpsb
sbb
scas
fsub
loopne
jo
cmp
xchg
sub
fwait
cs
xchg
jmp
mov
loop
and
fwait
mov
inc
or
pop
ja
mov
pop
xor
ret
arpl
out
sahf
js
rorb
sub
cmc
add
ret
repnz
dec
test
icebp
test
repz
cmpb
and
call
dec
push
cmp
out
sbb
out
and
aaa
lods
clc
adc
pop
xor
outsl
xchg
je
jl
fsubs
shl
adc
push
jb
pop
xor
lret
adc
aad
call
cwtl
inc
ljmp
pop
js
xor
icebp
addl
pop
and
ja
add
add
lea
in
jmp
lock
or
test
out
rclb
cwtl
arpl
sbb
into
inc
jns
add
mov
jo
shrl
mov
xchg
repnz
insl
mov
pop
adc
popf
clc
es
cwtl
divb
fisttpl
mov
ljmp
mov
loopne
mov
lods
notl
dec
cmp
inc
in
or
aam
not
adc
and
pop
xorb
outsb
int
xor
mov
fists
xor
jnp
push
je
outsl
sub
adc
lods
jecxz
cmp
sti
pop
dec
lcall
lret
sub
into
inc
adc
dec
lea
dec
cmp
lret
divl
into
cmp
jno
loope
cltd
xchg
sbb
inc
pop
bound
inc
push
add
sbbl
mov
mov
ljmp
shrb
xor
leave
andl
nop
xor
cli
fidivs
lahf
or
jne
add
stos
adc
pop
jo
jecxz
push
mov
add
pop
pushf
shll
xor
das
push
sahf
xchg
inc
lcall
sbb
cmpsl
dec
jno
jle
loope
clc
sub
mov
dec
mov
stos
popf
js
mov
jbe
add
fcmovnb
sbb
call
sub
mov
pop
sbb
leave
mov
pop
ljmp
std
sbb
fdivs
push
in
test
xor
ja
ret
jp
mov
imul
inc
sarb
in
pop
mov
popa
jns
inc
mov
popf
loope
dec
subl
roll
cli
loop
pop
out
fistpl
pop
sarl
jae
mov
movsl
out
cmp
sti
jle
push
ret
lods
or
add
mov
clc
stos
add
lock
add
pop
jae
dec
roll
enter
into
dec
xchg
stc
ss
out
bound
lahf
sahf
out
or
sub
or
pop
jp
out
jo
and
inc
pop
mov
jo
xchg
ljmp
dec
ret
cmp
mov
lods
jl
mov
es
das
push
cmp
popa
push
orl
mov
ss
ds
push
sub
dec
lock
or
lds
pop
pcmpeqd
sbb
mov
cmpsl
mov
jecxz
enter
data16
shl
je
mov
jg
lahf
jo
sbb
mov
xor
stc
inc
lock
sub
incb
ljmp
dec
lcall
cmpsb
xchg
lahf
jge
das
or
push
adc
inc
outsl
fsubs
add
jmp
cmp
add
mov
push
xchg
xor
mov
jle
clc
push
jmp
adc
cs
addb
sub
out
mov
xchg
push
push
lods
fidivrs
or
nop
xchg
adc
mov
jl
test
adc
shl
mov
mov
out
jp
push
out
lods
ja
jle
cmpsb
cmp
pusha
add
lahf
mov
pushf
lds
adc
fwait
jno
jl,pn
sub
mov
fsubr
cwtl
aas
lods
mov
lock
jmp
sub
imul
lret
cmc
imul
loopne
mov
lcall
mov
repz
dec
test
jno
sbb
ljmp
mov
cmp
popa
xlat
out
imul
xchg
or
jle
out
xor
mov
mov
push
int3
or
xchg
pop
mov
add
jmp
shll
jg
or
mov
sbb
sbb
pushf
aas
or
aaa
test
add
ljmp
ja
hlt
loop
int
iret
push
add
jae
and
jp
xchg
adc
or
add
push
adc
push
in
sbb
jle
insl
stc
es
jae
arpl
jl
push
in
aas
inc
mov
sub
imul
ss
dec
pop
sahf
adc
jmp
xchg
push
or
mov
inc
mov
xchg
test
mov
jl
dec
pusha
loopne
cld
xchg
pop
or
and
pop
push
add
inc
rcl
loop
push
mov
mov
mov
or
push
dec
ds
nop
jge
sbb
cmpsb
shll
adc
mov
dec
and
xchg
enter
cld
fisubrs
jecxz
add
mov
lds
pop
adc
adc
jnp
out
mov
sbb
pushf
aas
mov
sub
outsl
and
xor
pop
xor
sbb
insl
jne
mov
pop
loop
sarl
lock
cmpsb
push
fstps
push
cmpsl
add
mov
mov
shrl
cmc
imul
push
nop
test
outsb
and
xchg
aam
push
mov
lea
cli
imul
push
ds
xor
movsl
shll
addr16
das
adc
iret
pop
in
xchg
lcall
cmp
or
ds
loope
fisttps
pop
insb
push
inc
test
loope
mov
mov
adc
push
mov
addr16
xchg
mov
fdivr
inc
hlt
adc
gs
push
call
nop
dec
imul
cmpsl
or
enter
js
push
pop
shr
add
push
in
sub
test
xor
scas
dec
bswap
mov
xchg
outsl
jno
inc
aaa
loope
bound
mov
hlt
imulb
dec
adc
iret
pop
mov
mov
mov
fcoml
add
stos
out
pop
dec
in
stos
dec
pop
stos
and
dec
push
push
inc
aam
jb
jge
xor
cmc
mov
cmpsb
iret
pop
sbb
hlt
cmpsl
scas
cmp
sub
add
xlat
pop
mov
pushf
imul
xchg
fstp
ret
and
cmpl
pop
mov
nop
push
fidivs
push
in
pop
lea
and
scas
call
and
stos
and
outsb
jmp
pop
inc
cmpsb
ror
arpl
nop
in
xchg
add
pop
adc
loopne
sub
jg
int3
add
xor
mov
inc
push
mov
push
inc
jl
and
and
call
fdivrs
hlt
pop
push
adc
mov
rorl
out
xchg
ss
stc
sbb
xor
xchg
push
popf
xor
stc
je
repnz
add
sbb
inc
mov
push
insl
mov
adc
xchg
mov
rcr
xchg
aam
imul
pop
ret
and
outsb
fsubrs
lock
dec
loopne
add
fmuls
mov
add
add
xlat
movsbl
in
mov
imul
xchg
add
bound
into
loop
sub
mov
dec
loope
cmp
ret
add
sbb
arpl
mov
enter
mov
jne
sbb
clc
out
test
test
sbb
and
cmpl
sub
push
int
scas
fdivrl
jne
ret
movsl
outsb
jp
pop
add
cmpb
dec
dec
push
fimuls
clc
or
movsb
sbb
dec
sarb
cmc
dec
movsb
in
jb
add
outsb
sub
repz
jbe
repnz
imul
les
xor
js
mov
frstor
cmp
xor
pop
and
out
add
mov
jae
pushf
es
sbb
mov
mov
pop
push
je
sub
push
inc
fidivrs
xlat
ret
imul
test
jmp
pop
xor
mov
data16
movsw
dec
add
in
push
add
sub
loopne
sub
cld
mov
pop
cs
add
clc
test
sbb
sub
in
dec
mov
inc
in
bound
data16
cmp
cmc
mov
mov
pop
sub
frstor
pop
cld
fsubp
fcoms
dec
jl
stos
lahf
das
inc
gs
mov
jae
lahf
push
repnz
mov
and
lds
cli
scas
orb
cmp
insb
xchg
movsb
sbb
lcall
js
xor
pop
and
xchg
aad
xchg
xchg
xchg
push
popa
es
xchg
pushf
nop
adc
fsubl
adc
scas
cmc
sub
cmpsl
pop
push
mov
cmp
xor
repz
movsb
aaa
dec
loope
out
dec
imul
sbb
cmp
push
add
dec
mov
or
shrb
push
adc
cmp
xchg
cli
jmp
addb
push
mov
or
xchg
xlat
cwtl
push
jb
xchg
sbb
movb
mov
jns
mov
aam
xchg
pop
aam
imul
jl
aaa
clc
jns
loopne
in
mov
aam
mov
cmp
mov
fsts
rcll
jns
push
cmp
xor
adc
add
and
push
fwait
inc
xchg
dec
cltd
shrl
mov
mov
push
jne
xor
cmp
add
and
das
mov
sti
mov
xchg
xlat
loopne
sub
mov
outsl
sbb
ja
add
sub
cmp
mov
leave
sarl
adc
pop
and
sar
jmp
fildll
jg
xchg
and
stc
add
aad
xor
mov
xchg
dec
cmc
mov
inc
push
repz
rol
xor
push
enter
addr16
repnz
jle
pop
test
or
es
jle
clc
pop
shrb
cld
data16
xchg
mov
pop
xchg
in
xor
cmc
shlb
popa
std
cmp
mov
or
scas
fldenv
std
cmc
outsl
pop
cmpsb
insl
lret
inc
pop
movsb
jmp
and
idivb
add
mov
test
pop
push
jae
push
shll
bound
sub
scas
sbb
xchg
sarl
lods
aad
cmp
xchg
inc
xor
push
jb
addb
jle
clc
xchg
mov
test
ja
dec
pop
and
mov
test
cmp
mov
out
pop
test
imul
jnp
pop
mov
xchg
fldl
call
push
jl
dec
pushl
pop
or
in
pop
mov
cltd
or
mov
mov
mov
dec
lret
mov
adc
out
js
insb
and
mov
sub
xchg
pop
xchg
inc
in
cs
pop
lock
popf
mov
xchg
or
xor
inc
cwtl
xchg
xchg
fs
pop
or
add
aad
aaa
pop
and
lods
sbb
add
xchg
inc
mov
push
push
cmpsl
xchg
sub
subl
outsb
stc
mov
and
shrb
enter
xchg
loop
es
lods
sbb
jge
inc
mov
add
mov
andb
outsb
daa
js
pushf
icebp
in
sbb
jo
jno
sahf
sbb
push
cmp
cltd
idivb
stc
dec
test
testb
sti
push
inc
pop
add
and
xchg
jo
enter
pop
xchg
test
add
xchg
imul
lret
pop
pushf
fwait
xlat
leave
add
pop
push
aaa
jns
or
push
sub
pusha
cmc
cmp
lahf
imul
xchg
push
pop
in
jl
fldcw
inc
popf
xchg
mov
add
aad
outsl
xorl
repz
scas
xor
fists
adc
mov
xor
testl
rol
roll
fldcw
es
mov
test
add
inc
test
enter
inc
sbb
data16
aaa
leave
or
jl
sbb
out
cmpsl
arpl
jns
ficoml
ret
shlb
mov
arpl
add
iret
std
push
orb
pop
jecxz
bound
dec
or
jg
jecxz
cmp
xor
pop
or
in
repz
aam
or
das
ss
mov
into
sarl
je
cmc
andl
mov
popa
and
xor
cmpb
sbb
test
push
or
inc
sahf
cltd
in
lcall
aad
ds
lea
ja
push
int3
loope
aad
add
mov
cmpsb
mov
daa
cltd
jmp
sbb
cmpsb
test
xlat
and
pop
jne
mov
and
mov
cwtl
icebp
adc
xchg
test
shll
ret
lret
xchg
in
mov
clc
imul
mov
in
cld
add
push
fiaddl
cmp
jae
call
jmp
push
jmp
bound
xchg
repnz
pop
js
std
jmp
sub
jecxz
push
jae
add
jns
push
xchg
loop
or
pop
xlat
add
stos
clc
lods
inc
sbb
mov
mov
xchg
fcoml
test
add
test
jg
xlat
xor
xchg
cmc
addr16
sub
mov
movsb
inc
shll
mov
or
push
shrb
cld
push
xchg
leave
daa
xchg
fistpl
xchg
dec
xor
mov
rorl
cs
cmp
sbbb
sub
xor
ljmp
sbb
pop
sbb
push
push
test
lock
or
imul
imul
pusha
fsubrl
push
movsl
mov
stc
filds
repnz
xor
sti
je
subb
in
test
xor
push
xchg
out
mov
out
ja
dec
pop
add
js
je
xchg
mov
pushf
loope
jo
cwtl
or
movsl
fidivl
cmp
push
cmp
mov
adc
mov
ret
ss
jecxz
sahf
js
ds
dec
orl
gs
or
hlt
rcll
rcrb
jno
test
insb
pop
inc
out
pushf
and
shl
imul
mov
dec
daa
add
jae
int3
insb
mov
xor
mov
sub
hlt
add
add
push
xchg
sarl
jbe
mov
aad
dec
sub
sbb
mov
sbb
in
xor
ss
mov
stc
mov
jae
pushf
push
push
or
nop
pop
adc
or
test
pop
push
aad
dec
mov
insb
outsl
clc
mov
mov
pop
mov
imul
xor
in
cmpb
cmp
rcll
jp
pop
rorl
jg
mov
mov
and
mov
cmpsl
mov
dec
jp
out
ja
push
movsl
es
in
sub
sub
rcl
push
mov
lret
pop
cmc
xchg
int3
bswap
mov
stos
cli
cltd
popa
and
cmpb
cmp
cmp
cmp
inc
sarb
shr
xor
cmp
pushf
shlb
cmp
xchg
sbb
movsb
pop
movsb
xor
pop
pop
leave
adc
insb
int
mov
adcb
hlt
push
ss
and
stos
into
mov
pop
fcmovnu
int
xchg
ret
call
push
es
data16
leave
inc
push
dec
inc
lock
in
adc
inc
testb
fisubs
loop
xchg
cld
jle
lds
pop
sub
jo
nop
iret
stos
mov
or
jb
out
ds
fimuls
adc
mov
inc
mov
dec
sbb
cltd
and
mov
lcall
fnstenv
setl
cmp
inc
lret
and
jle
insb
ljmp
inc
cmp
sbb
clc
hlt
imul
stc
shll
add
cmp
leave
aad
pop
lods
push
sub
pminub
mov
push
std
mov
jle
adc
and
out
test
sbb
dec
orl
in
inc
pop
xor
imul
dec
jge
add
jmp
push
shl
add
outsl
push
cmp
frstor
in
cmp
inc
testb
xor
push
mov
xor
and
and
mov
mov
and
addl
mov
push
inc
fimuls
es
nop
fwait
es
aaa
popa
mov
mov
pop
lods
hlt
test
cld
stos
fwait
mov
dec
out
fdivl
push
and
jmp
and
xor
fadd
adc
jl
mov
aas
ret
and
cmp
imul
int
jmp
mov
xor
sub
mov
pop
inc
xchg
sbbb
fstpl
jmp
inc
aad
cmp
mov
mov
cs
xchg
jno
fcoml
fimuls
ja
inc
stos
loope
xchg
dec
mov
mov
push
cmp
loop
jg
adc
xlat
icebp
mov
xchg
out
xchg
divb
inc
xchg
inc
das
sbb
and
cmpsb
rcrl
test
inc
cmp
mov
adc
daa
jge
or
mov
xor
xchg
cmc
sbb
ficoms
add
test
xchg
leave
sbb
mov
or
cld
mov
xchg
jmp
xchg
pop
xchg
mov
jo
mov
push
xchg
fiadds
lock
fidivs
lds
rcll
mov
add
cli
mov
test
xchg
in
jne
fists
arpl
movsl
imul
xor
pop
bound
sbb
aas
push
in
inc
lret
dec
xlat
loope
jge
fnstcw
popa
test
ret
dec
dec
pushl
xor
stos
push
ljmp
fwait
push
out
and
cmp
jno
push
es
ljmp
jno
rcrl
adc
jmp
adc
or
mov
inc
mov
popf
insl
out
aad
aas
lods
mov
pop
sahf
inc
xorl
stc
sub
les
fldenv
dec
rcrl
sahf
or
inc
push
clc
jnp
bound
mov
push
lds
js
push
sbb
and
mov
out
lret
call
stos
xor
push
cmpsb
jo
jmp
shlb
inc
les
dec
ja
xchg
int3
or
jo
push
out
mov
in
rorl
push
loopne
mov
jp
push
dec
out
out
inc
into
div
lcall
mov
xor
mov
sbbb
setns
add
sbb
and
testl
std
dec
adc
xchg
test
xor
jmp
aaa
bound
sub
sub
add
mov
jle
in
cmp
jle
insl
data16
pop
rclb
mov
pop
fbstp
mov
aad
add
insb
in
lret
mov
or
mov
push
push
daa
aam
jg
sbb
je
lock
cld
test
xchg
adc
lock
in
ret
add
cwtl
jae
add
mov
push
jmp
jle
jno
lods
lret
sbb
or
mov
add
out
insb
xchg
fstp
int
push
mov
roll
cmp
movsb
std
pop
sub
imul
mov
cmp
jne
aaa
pushf
dec
add
sar
cltd
adc
es
push
mov
inc
pop
loop
fcompl
or
test
add
stos
dec
scas
and
push
push
dec
and
cmp
enter
in
sub
fmuls
mov
jmp
push
and
pop
cmp
test
mov
mov
fldl
pop
mov
pop
mov
xchg
xchg
int3
pop
mov
lret
divb
lods
push
inc
sbb
arpl
pop
fstpl
shr
repz
cmp
inc
es
pushl
clc
out
test
imul
mov
stc
pop
jnp
orb
jecxz
dec
mov
inc
icebp
xor
aas
into
or
clc
jle
dec
push
mov
enter
pop
push
sub
cmp
fidivrl
sub
pusha
push
sbb
outsb
int3
sbb
rcrb
js
push
jecxz
ret
cld
sbb
mov
push
sahf
test
pop
dec
mov
pop
mov
pusha
cmpsb
fdivrl
push
movsb
fildll
xchg
adc
lcall
lcall
or
int
xor
es
cs
mov
dec
mov
pop
aad
fstp
popf
and
out
ret
adc
ss
pushf
mov
push
dec
in
cs
shl
ss
mov
cmp
sti
jecxz
aam
jmp
jo
inc
mov
mov
mov
add
jns
mov
push
cmp
lret
out
jmp
xchg
out
push
mov
sbb
pop
out
mov
pop
xchg
das
mov
push
out
sbb
jle
aam
in
fsubrs
push
jne
sub
out
das
cli
adc
or
xlat
mov
lods
push
mov
jge
inc
loope
add
push
clc
adc
stos
fwait
clc
fiadds
xchg
add
lods
insl
fdivp
xor
stos
jbe
pop
push
dec
add
add
sub
addr16
jge
aaa
mov
popf
sbbl
sbb
mov
in
es
sbbb
cmp
and
cltd
lock
push
sub
cmp
mov
pop
lret
xor
jno
call
dec
xchg
and
push
inc
sub
or
loope
scas
push
test
loop
fsubrl
xor
pop
ljmp
pop
sub
adc
popf
addr16
push
jns
outsb
fstl
or
xchg
jp
sbb
and
add
test
loopne
dec
mov
or
jno
testb
int
stos
xchg
mov
add
jmp
dec
push
xor
sub
pop
cli
add
jp
fistpl
ja
fwait
mov
push
in
lahf
xor
fwait
lcall
icebp
sbb
insl
stos
in
dec
ss
jmp
nop
fs
daa
fcom
mov
movsl
add
fstpl
push
mov
insb
sahf
mov
movl
pop
into
orb
test
adc
add
mov
add
cld
lds
lahf
sbb
int
dec
cmp
pop
inc
and
sub
pop
jp
adc
test
jge
xchg
mov
mov
mov
add
and
sub
dec
pop
jo
pop
cmpsb
xchg
cmp
sbb
pop
jle
imul
sbb
mov
nop
pop
in
and
mov
lods
call
and
push
jns
mov
xchg
pop
mov
lahf
xchg
jnp
enter
jecxz
fldenv
clc
cmc
sbb
dec
cmp
and
outsb
in
mov
xchg
ds
cmc
imul
dec
cltd
adc
mov
jno
mov
add
pop
adc
or
data16
out
fstps
cli
movb
pusha
xchg
push
jmp
adc
xchg
stos
nop
ds
cmpsl
mov
fwait
push
push
in
pop
mov
xchg
mov
xor
push
sbbl
jge
add
adc
arpl
cwtl
mov
mov
ja
cwtl
test
popa
popf
cmpsl
mov
mov
int
and
mov
xchg
popa
jo
mov
pop
cli
pop
add
popf
lea
mov
hlt
out
adcl
in
add
xorl
mov
rorb
in
aaa
xor
or
jae
cs
stc
cmp
pop
push
xchg
mov
cmp
jbe
fisttpl
jne
insl
sbb
mov
loop
repz
or
rcrb
cli
or
lock
ljmp
xlat
enter
mov
aad
popa
jecxz
es
popa
dec
dec
sub
mov
dec
push
jp
dec
inc
shl
jae
enter
lods
in
lret
aad
adc
dec
cmp
fildl
icebp
xor
cs
daa
iret
jge
xchg
push
lret
roll
or
pop
inc
and
sub
mov
add
jne
ret
xchg
dec
aad
int
ja
nop
dec
rcrb
dec
add
mov
jno
addl
mov
pop
adc
and
sbb
leave
dec
mov
cmpsl
aas
jmp
jge
fwait
xchg
ljmp
cmp
mov
popf
ja
pop
mov
inc
rorb
dec
add
push
jnp
add
das
out
insb
mov
ljmp
dec
test
dec
lods
mov
in
repnz
push
mov
imul
lret
sbb
scas
push
stc
scas
sti
stc
dec
jo
fwait
push
aas
inc
mov
cmp
add
inc
incl
adc
adc
xor
adc
sbb
mov
decl
cmp
fisubrl
out
inc
jp
xor
mov
jnp
outsb
and
out
shlb
adc
fwait
or
pushf
sti
jecxz
mov
lods
daa
fwait
les
adc
pop
inc
sub
jp
inc
pop
xchg
out
insb
xor
adc
or
outsl
inc
aad
rol
lcall
lock
divl
adc
dec
jbe
cmp
sbb
popa
xchg
jno
aam
repnz
dec
mov
addr16
push
push
lods
mov
into
jl
test
pop
push
out
ds
cwtl
pusha
pop
lods
mov
adc
movl
xchg
inc
or
repnz
dec
fucomip
mov
das
add
arpl
rorl
lods
cmp
or
push
mov
xchg
scas
push
stos
je
mov
push
les
aam
xchg
das
call
adc
lds
les
movsl
lods
lcall
iret
mov
in
xchg
sbb
lock
xchg
xchg
push
fdivrp
lea
iret
push
iret
sub
sub
aam
push
pop
or
sub
ljmp
test
ja
push
inc
hlt
mov
sbb
adc
pusha
test
cmc
jo
push
mov
cwtl
movsl
mov
int
ds
ja
adcb
push
in
push
shr
mov
btc
loopne
jmp
sub
mov
cmp
xchg
aam
aam
sbb
into
fdivrs
mov
fdivp
std
in
xchg
iret
lods
or
mov
dec
shlb
pop
fsubrl
dec
sub
pop
pop
out
push
pop
aaa
push
dec
xchg
jecxz,pn
xchg
push
dec
and
rorl
sbb
sbb
stos
adc
notl
or
lock
ret
xor
pop
int3
sti
test
cmp
jmp
push
jmp
in
dec
jno
xor
je
xchg
jae
mov
mov
xor
stos
lods
lock
cmp
fstl
jg
test
enter
jne
movsl
shrl
xor
dec
sbb
inc
out
fs
mov
mov
sbb
int
ja
out
je
push
jle
xchg
mov
dec
aam
sub
xchg
jo
pop
lock
cmpsl
add
addr16
mov
add
inc
and
mov
lock
adc
outsl
pop
dec
cltd
mov
add
and
add
out
inc
data16
jb
fnstsw
xor
dec
enter
push
clc
mov
mov
mov
inc
or
pop
push
jge
add
jge
cmp
cs
xchg
cmp
jbe
nop
iret
and
mov
push
add
pop
stos
jbe
jae
movsl
jns
cmpb
pushf
add
repnz
or
jp
inc
shrb
int
jl
inc
jbe
mov
test
sbb
jbe
aaa
mov
xchg
pop
push
mov
subl
push
test
mov
dec
cmp
jle
cli
test
test
fldenv
dec
dec
stos
adc
data16
or
adc
mov
push
fldenv
ret
es
aaa
push
movsl
cli
outsl
cs
lods
cmpsb
popf
pop
test
or
push
add
gs
add
xor
mov
cmpsb
loopne
movsb
insl
mov
test
mov
inc
mov
inc
inc
xchg
push
push
dec
dec
flds
call
fisubl
cmc
mov
je
notl
in
mov
popa
test
popa
jp
mov
in
cmp
ljmp
mov
std
and
mov
or
mov
bound
scas
test
out
mov
jae
add
xlat
lcall
or
stc
rcrb
xchg
push
popf
xor
jle
fs
or
push
fwait
sbb
mov
dec
xchg
mov
cmp
mov
ss
cmc
test
popa
mov
sbb
xor
mov
cmpsl
push
aas
cmpsl
cmc
enter
inc
pop
xor
ljmp
fldenv
out
jp
cmp
push
and
xor
loop
bound
sbb
movsl
daa
aaa
enter
bound
adc
out
ss
push
daa
pop
xor
lea
in
loopne
jge
pop
or
imul
inc
or
adc
xor
mov
push
sub
inc
imul
mov
dec
sbb
ds
xchg
fs
cld
or
pop
inc
mov
cmc
in
cmpsl
in
unpcklps
int
std
adc
imull
and
sbb
scas
addl
or
enter
push
adc
arpl
lret
and
pop
je
lret
cmp
hlt
jae
cld
les
add
out
adc
insl
mov
lret
ja
jae
mov
or
idiv
jae
push
cmpsl
sub
repnz
ss
hlt
inc
xlat
and
or
sbb
in
cmpb
pop
adc
mov
lcall
jl
adc
pushf
das
mov
jbe
sub
xchg
mov
adc
xchg
scas
stos
and
and
sbb
fwait
jne
cmpsb
insb
scas
cli
cmpsb
mov
mov
insb
lret
shrl
cwtl
adc
add
add
jnp
mov
test
hlt
in
mov
test
sub
repnz
jmp
movsb
mov
pusha
es
sti
cmp
add
call
ret
cwtl
xchg
lea
jmp
push
adc
cwtl
shrl
push
push
mov
cmp
pop
xlat
sti
inc
jmp
stos
aad
icebp
mov
and
cs
imul
dec
dec
or
dec
xchg
mov
xchg
insb
dec
push
incl
dec
fwait
mov
mov
cmp
stos
dec
hlt
lcall
rcr
fidivl
mov
mov
mov
dec
sbbl
pusha
and
pop
mov
addl
mov
mov
pop
sub
add
mov
mov
lcall
xchg
in
movl
loopne
shl
flds
adc
xor
add
pop
mov
dec
adc
fsubs
sahf
lods
and
imul
adc
int3
inc
mov
in
mov
xor
ret
push
mov
mov
mov
cmpl
lock
arpl
mov
addr16
loopne
push
jns
ret
cmpsb
in
jecxz
scas
sub
cmp
cmp
adc
shlb
mov
stc
adc
das
les
add
mov
xchg
test
add
jp
jle
cltd
xlat
push
add
or
mov
inc
fwait
pop
xchg
aaa
pop
xchg
push
pushw
pop
jp
cltd
cmp
lods
push
mul
adc
sbb
mov
xchg
inc
mov
insl
dec
and
fdivrs
mov
jns
insb
mov
pop
pop
adc
and
insb
scas
push
sub
int3
sbb
mov
cwtl
mov
mull
xchg
jb
ljmp
jnp
jle
mov
mov
leave
call
xchg
pop
mov
popf
mov
sub
xchg
sbb
pop
adc
sub
movsb
test
push
sbb
ja
in
hlt
fisubrl
in
int
jbe
xor
popa
repz
mov
mov
inc
mov
pop
push
jle
mov
or
loopne
jns
bound
in
jo
out
inc
int
xchg
pop
insl
dec
xor
mov
out
cs
aam
data16
ja
pushf
mov
sbb
stos
mov
mov
sbb
dec
xor
or
jecxz
mov
mov
ja
jmp
mov
sub
lds
add
push
xor
aaa
xlat
stos
mov
mov
fnstenv
out
lcall
lods
lods
add
jnp
add
int
mov
push
int3
inc
das
mov
scas
sub
jge
jmp
or
aad
stc
jecxz
mov
fwait
call
adc
cmp
adc
xchg
mov
fldcw
mov
jg
mov
aad
mov
xor
gs
sub
and
sahf
push
mov
je
xor
xor
in
lea
and
add
pop
les
stc
xor
lcall
cmp
xchg
ror
mov
mov
aad
mov
movsl
ret
pop
and
jnp
adc
aaa
jmp
fs
xor
push
push
sbb
int3
bound
icebp
xchg
mov
popf
cmovge
pop
xchg
mov
mov
mov
dec
dec
ja
jns
jecxz
mov
enter
or
lds
in
sub
in
dec
test
jnp
push
adc
lods
call
int
lea
pop
imul
and
dec
xchg
cld
xchg
gs
leave
cmp
out
subb
add
rclb
xchg
jns
shlb
adc
lock
sbb
aam
iret
fld
sub
adc
ret
movsb
jg
inc
out
jge
mov
js
adc
and
mov
mov
push
adc
sbb
divb
pop
push
pop
cmpsb
adc
ret
and
aad
aam
xchg
imul
jae
push
gs
stc
insb
lret
xchg
popa
ljmp
sub
cmpsb
lret
cmc
sbb
xchg
addl
leave
std
add
and
pusha
sbb
sub
in
clc
mov
in
jno
fiaddl
pop
pop
jbe
and
jno
movsb
cwtl
xor
xchg
test
pushf
xchg
incl
rorl
mov
sub
adc
rcrb
sub
add
adc
movsb
mov
in
push
jmp
sub
pop
mov
xor
and
xor
inc
pop
stos
push
in
jbe
mov
mov
sarb
outsl
test
out
mov
sbb
clc
fldcw
outsb
cmp
sti
xchg
cld
push
cmpsl
pushl
je
sub
ret
pushf
ficompl
icebp
or
ret
xchg
sub
pop
test
stos
add
in
ret
sbb
sbb
mov
sbb
leave
push
jbe
mov
mov
das
ljmp
out
or
dec
sbb
mov
pop
and
mov
sbb
pop
push
nop
mov
fwait
jg
fwait
sub
test
ficoml
or
jb
popf
out
lods
test
lret
mov
or
adc
vpaddd
inc
mov
inc
xor
fldcw
mov
mov
lcall
aad
mov
fsub
loop
movsl
jmp
lock
stc
inc
jne
loopew
mov
fildl
pop
xchg
mov
sarl
mov
mov
rcll
xor
pop
sbb
mov
loopne
dec
popa
scas
lods
test
test
fxtract
inc
outsl
pop
or
and
inc
xchg
repz
xor
loopne
popa
data16
xlat
in
imul
inc
je
mov
jae
ret
push
xor
jnp
es
sti
push
hlt
cli
aam
daa
mov
push
test
mov
test
out
xor
adc
sahf
shlb
fwait
jle
stos
clc
pusha
mov
or
dec
pop
shr
mov
bound
xchg
jno
mov
out
sub
aad
pushf
and
xor
xchg
les
lods
movsl
fldcw
std
push
mov
in
cmc
push
idiv
fcompl
addr16
dec
mov
shl
int
cmpsb
jg
outsb
or
jle
inc
repnz
subl
jae
dec
mov
popa
comiss
ds
xor
sbb
out
int3
mov
lahf
adc
in
cli
orl
stc
loope
shll
ret
fwait
lcall
fnsave
or
cmp
ficoms
sub
lret
out
mov
jle
mov
add
aas
adc
popa
fs
fndisi(8087
rcl
mov
js
clc
out
dec
sub
push
shlb
or
cmc
xor
lret
out
in
js
xchg
dec
cmp
mov
iret
mov
jg
test
roll
shrb
mov
aaa
aam
je
into
stos
xlat
push
imul
add
xchg
pop
adc
and
aam
inc
sbb
les
scas
nop
pushf
sub
fnstsw
ret
xchg
ficomps
cmp
movsb
adcb
push
xchg
and
in
out
and
mov
dec
xchg
aad
call
inc
insb
dec
mov
xchg
mov
pop
stc
mov
fwait
out
cli
imul
gs
das
xor
mov
pop
xor
and
xchg
add
hlt
addb
adc
stos
inc
in
ss
jmp
into
push
mov
jb
lock
push
sbb
add
adc
lea
sbb
fidivrl
mov
mov
xchg
into
mov
inc
push
xor
sub
ret
lock
xchg
iret
jne
push
pop
or
jae
push
fldt
adc
sbb
sahf
das
push
pop
jp
aad
inc
shll
icebp
inc
sbb
mov
jecxz
inc
xchg
fs
loope
pop
and
jbe
dec
out
mov
push
mov
mov
sub
xlat
cltd
fisubs
jnp
data16
cmp
test
mov
sub
push
aaa
repnz
xchg
bound
sbb
das
test
jo
orl
lods
mov
cmp
into
imul
insb
push
mov
test
icebp
in
mov
jae
push
adc
add
mov
add
sahf
xlat
and
sub
jg
mov
loop
addr16
in
jmp
push
nop
ja
lahf
adc
xchg
imul
jo
das
mov
cmc
movq
addb
pop
icebp
out
inc
xchg
daa
jp
mov
or
push
pop
movsl
jbe
push
pushf
fisttpl
jmp
ds
xchg
and
jp
scas
adcb
loopne
insl
data16
into
out
fcmovu
cmp
jle
xchg
les
sub
dec
jp
sbb
pop
inc
jno
adcl
adc
sbb
or
pop
cmovp
lock
mov
mov
into
lret
in
lret
and
test
mov
mov
or
add
cltd
repnz
movsb
pop
dec
loop
and
pop
lahf
and
sub
mov
mov
dec
inc
mov
sbb
sub
outsl
add
and
and
mov
in
lea
mov
imul
add
pop
not
sbb
jge
xchg
jl
adc
cltd
dec
xor
adc
iret
outsl
jbe
dec
in
adc
cmpb
mov
sbb
push
sub
adc
xchg
xor
outsb
cltd
cli
pop
push
lcall
ds
jg
xor
mov
outsb
cmp
jle
mov
cmpsl
jb
push
xlat
inc
stc
inc
sbb
fldt
mov
arpl
dec
loope
mov
cwtl
jbe
sbb
inc
lock
shll
mov
inc
and
push
jo
lahf
fistps
cmpsb
movb
push
push
mov
outsl
add
into
lret
mov
dec
dec
fldl
dec
push
test
aad
inc
cmp
iret
inc
xor
rcr
jo
adc
mov
xlat
fisttpl
jnp
dec
cli
mov
imulb
es
in
adc
xor
and
aas
fwait
sub
pop
movsl
or
sbb
dec
sbb
cmp
cmovg
inc
dec
push
fmull
in
mov
or
mov
push
aad
stos
pusha
sub
out
mov
and
lds
xor
and
lock
cmpb
mull
dec
inc
or
pop
pop
lahf
inc
sub
pop
xchg
add
in
out
icebp
nop
push
mull
inc
ljmp
push
mov
or
in
mov
in
ret
jno
lcall
inc
xor
in
mov
mov
stos
scas
or
and
aas
ljmp
cwtl
sub
inc
adc
les
inc
sbb
mov
sti
outsl
push
push
fstpt
xchg
daa
xchg
push
pushw
or
je
xchg
cmp
push
and
mov
out
popf
jno
mov
sub
fdivl
lods
ja
pushf
xchg
cmpsb
mov
outsl
out
mov
fimull
shrl
stc
add
test
xor
cmp
mov
xor
jmp
cmpl
jle
pop
adc
addl
fcomps
inc
inc
and
ds
lret
sbb
je
pop
add
push
xchg
loope
pop
iret
mov
add
filds
jl
lcall
xchg
fistpll
fmulp
scas
cltd
loopne
loopne
push
scas
loop
fmuls
xor
push
dec
and
dec
mov
push
pop
arpl
sbb
in
push
lret
gs
jno
scas
in
lods
mov
adc
sbb
or
pusha
call
fmull
fs
enterw
xor
xchg
test
push
mov
sub
jae
jne
inc
stc
or
sub
xor
mov
jge
add
in
adc
mov
push
mov
movsb
fmuls
jle
jecxz
sahf
xor
lock
rcrb
ljmp
pop
dec
mov
push
add
and
icebp
loope
cs
fimull
and
in
lahf
xchg
repz
inc
bound
ds
inc
stc
push
or
cmp
lock
les
pop
jo
pushf
xor
sub
mov
shl
test
sbb
jae
scas
sub
xchg
js
jmp
data16
pop
lds
push
rolb
int
fisttps
loopne
aas
imul
inc
adc
stos
push
hlt
or
mov
mov
pop
in
jns
xchg
fildll
mov
jne
rclb
xchg
xchg
mov
cmp
ljmp
xor
xor
mov
int3
and
lods
add
loop
cmp
xorb
inc
sbb
mov
mov
gs
cmp
stos
ljmp
adc
stos
xchg
stc
ds
iret
lret
jl
outsb
cs
mov
and
jns
cmp
mov
shll
inc
das
fwait
cltd
cmp
pop
in
inc
bound
jne
cltd
pop
aas
pop
mov
jne
or
mov
sti
xorb
xchg
pushf
movsl
shl
push
leave
mov
pop
mov
jp
out
and
gs
xor
dec
add
lea
std
fadd
dec
sub
out
test
pop
xchg
pop
mov
sahf
mov
sbb
mov
adc
xchg
or
xor
sbb
test
add
push
je
xchg
cmp
jmp
adc
xor
or
imul
or
pop
ret
ljmp
std
iret
mov
daa
fcomip
out
aam
shlb
mov
xchg
add
jbe
push
inc
cmp
shlb
xor
sub
and
aad
pushf
push
sbb
push
iret
push
dec
aam
mov
sbb
sub
jo
les
push
into
mov
and
push
fs
xchg
scas
sahf
and
push
sbb
dec
repz
add
shl
repz
aas
pushf
loopne
repz
sarl
icebp
jb
mov
or
in
ja
inc
cmpsl
cltd
leave
repz
xchg
xor
std
lds
lahf
mov
in
ret
js
and
inc
test
or
sbbb
pop
bound
popa
xchg
mov
loope
or
inc
add
aad
xor
xchg
or
ficomps
or
lret
xor
aam
jnp
dec
arpl
jns
mov
xchg
cmp
pop
sub
loope
divb
cmc
ds
pop
stos
add
clc
jmp
pop
inc
xchg
xor
lods
lods
xchg
stc
rorb
fsubrl
push
dec
aam
mov
scas
cltd
daa
mov
add
push
popa
push
mov
push
mov
pop
subl
adc
js
cmp
sbb
xchg
pop
out
fldt
std
jmp
lea
into
movsb
and
push
xor
scas
pop
jae
ret
add
cmp
data16
ja
pop
xchg
xor
xchg
pop
fs
xlat
adc
arpl
iret
repz
dec
mov
mov
xchg
dec
sub
stos
cmc
test
sub
lds
int
aad
insb
cmc
cmp
sub
cmc
push
jl
imul
ss
lock
mov
xchg
xchg
push
sub
pop
jbe
push
dec
cmp
and
popa
xchg
mov
out
jg
out
movl
lcall
or
ljmp
insl
pushf
lock
mov
pusha
add
imul
pop
call
adc
push
aas
xchg
jg
ret
test
mov
sarb
mov
imul
jbe
inc
mov
mov
pop
ror
shl
mov
in
adc
in
dec
fwait
and
ret
test
xor
mov
cli
mov
popa
xor
sti
jl
into
jmp
sbb
out
push
xchg
mov
adc
dec
xchg
aas
pop
data16
adc
iret
fldl
pop
or
pop
outsl
mov
jae
inc
repnz
add
not
adc
out
rorb
xor
sub
lcall
adc
push
int
rclb
into
pushf
movsl
mov
jne
leave
pop
add
pop
imul
int
incb
aam
scas
cmc
jne
das
movsb
dec
jmp
scas
sti
imul
push
cmp
sub
xor
fsubrs
lock
ljmp
dec
push
pop
adc
xlat
mov
fdivrp
mov
or
scas
and
mov
jno
mov
aaa
mov
int3
iret
shrd
push
add
aam
cmp
dec
pop
aaa
sbb
ret
fdivs
xchg
and
mov
cmpl
xchg
xchg
mov
cmp
mov
scas
int3
mov
pop
or
inc
add
test
sar
inc
test
lahf
push
jg
test
roll
add
filds
insl
fimull
sti
cmpl
cmp
sub
pop
xor
or
inc
cmp
add
dec
and
in
sub
jp
or
add
mov
das
xchg
push
insb
mov
push
mov
cwtl
jmp
pushf
inc
repnz
add
mov
mov
inc
inc
repnz
lret
mov
negl
dec
add
xor
mov
push
pop
pop
jbe
inc
aaa
sub
lods
test
repnz
pop
jno
outsl
inc
inc
addr16
lds
mov
enter
addl
push
push
or
out
push
int3
arpl
and
or
in
fiadds
pop
mov
adc
push
in
imul
mov
or
jns
push
mov
aad
cltd
nop
dec
aad
dec
adc
sub
lret
mov
clc
or
ss
mov
pop
xor
push
cmp
test
imul
ret
lods
pop
cmc
loope
mov
pop
or
xor
imul
jle
lret
popa
in
loope
enter
in
jae
enter
push
pushf
int3
int
rclb
mov
loope
mov
mov
push
adc
enter
sub
ljmp
cmp
add
mov
in
pop
stos
out
cmp
sbbl
push
mov
addr16
sbb
add
mov
jnp
fisubl
ja
test
cmp
fs
loope
das
push
insb
test
and
xchg
mov
notb
js
sbb
ljmp
xchg
ljmp
repz
rcrb
add
das
addr16
or
incl
jp
test
cwtl
les
popa
jge
xor
xor
mov
inc
jno
and
jb
mov
push
aas
out
dec
gs
rcll
mov
cmp
cltd
repz
and
sub
adc
jnp
call
xorb
dec
add
push
jo
add
sbb
stc
pop
pop
out
mov
leave
test
sub
cwtl
hlt
sub
sub
add
and
fiaddl
cmp
inc
or
sbb
and
aas
sub
jecxz
xchg
mov
jmp
or
int3
cmc
fnstsw
lods
dec
xor
addr16
adc
ret
lahf
push
pop
xchg
sub
add
adc
add
rcrl
lea
inc
into
rolb
cld
fistps
rorb
data16
pop
mov
mov
stos
fisubl
dec
ds
sbb
or
mov
pusha
dec
fwait
enter
xlat
dec
or
sahf
lds
leave
imul
fidivrl
inc
mov
fdivrl
arpl
roll
mov
pop
scas
popa
or
pop
clc
push
and
cmc
enter
fs
push
popa
push
rcr
pusha
ja
ja
sarl
lea
add
cmp
lahf
popa
and
ror
push
xchg
cmc
mov
dec
or
dec
jge
cmp
pop
cmpb
sahf
loop
cmpsl
jl
enter
dec
popa
out
int
add
mov
lcall
aas
adc
mov
pop
outsb
stc
ret
adc
mov
mulb
adc
dec
ds
xchg
and
xor
inc
lea
inc
andl
scas
push
arpl
jbe
or
pop
scas
leave
movl
dec
fistpl
mov
jg
xchg
loop
mov
xchg
jne
dec
fs
xchg
sbb
xor
inc
jno
jns
icebp
fs
dec
ret
sbbl
pop
popf
es
ljmp
mov
push
addb
inc
out
pop
gs
pop
sbb
xchg
mull
add
inc
jle
fisttpll
ss
push
sbb
imul
popf
lods
mov
adc
xor
pop
xchg
cmp
scas
shl
adc
mov
sbb
add
orb
inc
add
xorb
loope
cmpsl
and
icebp
sub
sbb
mov
mov
sbb
xchg
les
mov
jg
mov
fidivrs
loopne
cs
loopw
cmc
ja
sub
xor
mov
xor
loope
xor
mov
scas
push
pop
ds
into
outsb
push
ljmp
sbb
sahf
nop
jno
or
out
aas
cs
out
sti
shll
popf
xchg
loope
cld
cmpsl
xlat
bnd
pusha
mov
xchg
inc
xor
lds
leave
clc
pusha
addb
cmp
mov
inc
ljmp
add
test
xor
cmpsl
lods
cli
into
fwait
adc
lret
divb
popf
add
push
pop
jp
jb
loope
fwait
and
mov
xchg
popf
push
jmp
pop
xchg
dec
ja
stos
inc
scas
sbb
add
dec
sub
rclb
add
rcrb
sub
xlat
insl
sbb
mov
mov
into
jg
aam
repnz
outsb
dec
jle
pop
orl
xlat
test
int3
and
add
ja
les
cld
sbb
ja
jns
imul
shlb
pop
cld
adc
movsb
cmp
cwtl
jne
and
sbb
or
mov
pop
cmp
sbb
cmpsb
fsub
in
scas
jns
fnsave
pop
stos
sbb
repz
add
jecxz
cwtl
js
aad
mov
mov
xor
addr16
add
test
pop
mov
dec
adc
and
cmc
mov
push
cmp
push
dec
add
push
aad
push
sub
in
mov
xchg
jae
rorb
lods
sti
add
loope
or
pop
adc
mov
mov
dec
sbb
and
dec
jge
mov
into
rorb
xor
add
inc
fnsave
jnp
outsl
push
cmp
and
pop
addr16
pop
mov
movsb
cwtl
dec
nop
loope
lds
jl
lock
out
mov
or
mov
xchg
xchg
rclb
fwait
cmp
xor
test
mov
cmp
jne
je
leave
and
ror
adc
sbb
fwait
les
mov
and
imul
orl
rcrb
adc
push
cmpsb
int
mov
or
cmpsb
push
push
jmp
and
int3
loop
and
scas
xchg
aaa
pop
jg
loopne
push
add
fpatan
push
outsb
mov
xor
fidivrs
sub
int3
push
mov
stos
cmp
dec
cmp
mov
jp
leave
mov
adc
inc
fwait
sbb
scas
jle
push
pop
sbb
inc
mov
push
popa
lods
aas
mov
dec
js
cmpsl
test
xchg
inc
mov
mov
push
popa
adc
mov
mov
lcall
push
sub
mov
mov
and
lods
add
dec
aas
cli
stos
lea
xchg
lahf
adc
outsb
movsl
xlat
sbb
cmp
loope
xchg
mov
ljmp
add
jge
hlt
data16
push
dec
dec
xchg
movsl
pop
je
repnz
jae
mov
add
enter
mov
sbb
xchg
cmpsb
jbe
fisttps
jg
shl
mov
inc
mov
idivb
dec
stc
mov
mov
repz
xor
imul
adc
sti
xchg
aad
xchg
loope
movsl
push
gs
out
cmc
pop
test
cmc
mov
cmp
scas
inc
jo
repnz
cmp
ds
add
dec
lret
lcall
and
pop
xchg
scas
fists
jecxz
addb
lods
inc
pop
jo
jae
fidivrs
and
jecxz
pop
cli
mov
mov
dec
imul
daa
adc
push
mov
mov
cmp
cltd
mov
add
push
add
xchg
lcall
bound
xchg
ret
mov
sub
xchg
jns
les
push
mov
inc
mov
lds
xchg
jb
add
lcall
es
lahf
and
hlt
fs
repz
xorb
outsb
sbb
adc
mov
xor
adc
or
loop
aas
jne
imul
test
cmp
movsb
rep
shlb
xor
ds
adc
add
xchg
call
xor
mov
into
shl
lea
xchg
jb
mov
sub
add
sbb
popf
jg
cmp
imul
xor
je
or
in
pop
rcrl
dec
jle
nop
scas
subl
das
mov
adc
xchg
test
faddl
mov
pop
in
call
cmp
mov
jl
pop
sub
test
dec
add
xchg
bound
and
add
cmpl
adc
push
jb
movsb
orl
sbb
or
sub
adc
cltd
jnp
lock
adc
sbb
dec
dec
in
daa
sbb
jb
clc
lret
cld
jp
movsb
mov
sub
cmp
aaa
sub
lods
testl
adc
test
insb
pop
or
inc
stc
dec
sbb
lock
and
gs
push
sbb
jecxz
call
sbb
adc
cmp
sub
push
jg
cmp
int
repnz
outsl
incl
mov
jnp
add
fwait
and
sbb
or
fidivrs
fcmovb
inc
insl
sbb
test
or
xlat
outsb
mov
xor
shl
rolb
mov
jae
out
xchg
in
add
in
scas
pop
daa
std
inc
xor
cmp
push
sub
mov
mov
jne
fistps
test
and
xor
imul
xchg
mov
inc
out
sbb
mulb
ljmp
orb
mov
sub
mov
pop
aam
push
movsb
int
lahf
or
adc
loope
mov
inc
cmp
lods
lods
adc
cmp
cwtl
sbbl
jle
loop
mov
lods
loope
in
ljmp
push
fnstcw
pop
pop
es
cmpsl
in
xchg
and
and
shr
fisttps
ficoml
testb
mov
lds
mov
or
xchg
jno
roll
in
mov
cmpsl
mov
add
notb
sbb
aad
inc
js
mov
addr16
or
sbb
lret
xchg
iret
jb
or
add
jbe
in
jo
dec
lods
pop
xchg
pop
imul
mov
or
cmpsl
icebp
ljmp
add
push
adc
xor
cmp
sub
mov
jg
lods
add
lcall
aad
lret
fwait
adc
xlat
imul
xchg
add
into
shl
sbb
cmpsl
pop
push
push
call
or
in
xchg
sbb
loope
push
jmp
scas
jne
jno
cmpsl
mov
jmp
fs
mov
mul
push
dec
xchg
lret
js
nop
enter
ja
fisttpll
cmp
aad
mov
cli
movsb
fisubs
push
sub
mov
cmpsl
fildl
mov
movsl
sub
dec
test
mov
fcoms
popf
into
sbb
pinsrw
fld
adc
enter
or
aam
les
fmull
test
aas
adc
cmp
mov
xchg
repnz
das
push
out
push
sub
or
sbb
adc
lret
pop
lods
nop
negb
and
in
pop
push
mov
test
in
jmp
ror
stos
xor
lock
in
mov
pop
test
push
pop
data16
andl
les
adc
cmc
and
into
xchg
ret
in
cmp
test
push
mov
pop
aas
or
mov
sub
or
adc
add
mov
lods
sti
pop
adc
lock
xor
out
jo
mov
rorl
enter
mov
lea
pop
je
push
adc
in
jb
test
fs
inc
sbb
xchg
xlat
sbb
mov
pop
cmp
inc
cmp
scas
fwait
movswl
mov
sub
or
pop
pop
jae
xor
pop
jns
pop
dec
jecxz
ret
jecxz
int
inc
adc
mov
push
icebp
add
xchg
les
ss
or
je
dec
fcoml
mov
push
jnp
lods
je
out
and
push
jmp
pusha
push
cmp
push
loope
loope
mov
jge
jae
add
rcll
adc
push
scas
inc
iret
xchg
adc
mov
mov
mov
lods
xor
aam
adc
inc
add
push
mov
movsb
aam
xchg
addr16
sbbb
mov
rorl
mov
orb
inc
and
push
mov
fsubrl
out
sarb
test
xchg
lcall
push
adc
popa
lock
cmp
and
stc
and
or
adc
cmpl
dec
adc
dec
push
dec
and
imul
add
fdiv
sub
dec
push
int
mov
adc
push
lret
inc
aas
adc
mov
jmp
and
xchg
cmc
mov
cli
xchg
cmpsl
cmp
subb
rep
pop
sub
mov
sbb
lcall
push
stos
jp
repz
sbb
pop
sub
outsb
lds
ds
in
shlb
xor
mov
pushf
inc
es
mov
movl
pusha
popa
notl
js
mov
xlat
xchg
sub
mov
sbb
adc
adc
insl
xchg
inc
cmpsl
repz
test
jae
mov
shr
sarl
push
mov
push
push
iret
jnp
sub
add
leave
std
or
mov
data16
xchg
out
test
cmp
add
stos
mov
xor
push
and
inc
and
jb
outsl
lods
lahf
orb
lea
test
shrl
mov
sahf
repz
mov
faddp
out
stos
mov
xor
filds
rorl
outsb
sarb
mov
dec
push
sbb
xchg
repnz
cmp
mov
fs
adc
push
jg
mov
jl
push
in
js
mov
cmp
pop
adc
jge
and
jge
enter
mov
les
or
add
sub
pop
shrl
lahf
dec
dec
ffree
pop
push
cmp
daa
and
shr
out
int
aaa
mov
arpl
divl
les
pop
hlt
cmc
push
loopne
or
adc
push
add
fs
cwtl
clc
in
sub
fnstcw
aam
lods
ror
leave
movsl
xchg
jecxz
jno
or
mov
pop
aam
cltd
push
scas
dec
and
mov
inc
aas
mov
call
cltd
add
mov
aaa
lods
je
stos
jecxz
xor
nop
mov
xchg
lcall
mov
ss
not
rcr
dec
pop
outsb
xchg
xor
loopne
in
std
jge
dec
sti
pop
rorb
jge
mov
in
mov
pop
repz
fs
xor
cmp
mov
frstor
inc
adc
cwtl
inc
ljmp
xor
addl
stc
subb
out
mov
test
scas
cwtd
les
cltd
shll
outsl
in
push
mov
fsubrs
pop
out
pop
clc
dec
mov
cs
cmp
insb
inc
push
push
cltd
lea
into
aam
jmp
inc
mov
ficomps
stc
add
repz
xor
jnp
add
fadds
out
push
mov
sti
fs
repz
cmp
cld
mov
stc
pop
arpl
pop
mov
aas
xor
jecxz
sarb
mov
push
icebp
cwtl
or
lret
cmp
dec
cli
push
stc
jle
adc
mov
or
sub
jno
cmc
ljmp
mov
sub
cmp
into
cld
and
es
or
pop
lcall
sbb
xchg
push
xlat
cmp
outsl
jge
fcompl
mov
adc
push
in
dec
mov
imul
push
xchg
push
sar
loop
je
dec
aad
lea
aad
pop
dec
int3
leave
adc
sbb
push
lahf
mov
jmp
in
pusha
mov
cli
test
push
and
int3
mov
lds
clc
dec
pop
inc
imul
dec
adc
pop
pop
aam
sbbl
cmp
lds
xchg
call
mov
out
mov
dec
fcmovu
aam
sbb
js
sti
fwait
movl
sub
mov
ds
cmp
test
sbb
fld
xor
sub
out
js
bound
ds
out
inc
xchg
push
aaa
sahf
out
fcmovb
jmp
add
or
pop
lret
nop
adc
mov
sbb
inc
stos
inc
sti
cmp
push
mov
sbb
mov
inc
pop
inc
fisubrs
jmp
lahf
mov
lds
add
jae
push
inc
push
and
add
fbld
jl
lcall
sahf
and
xchg
push
sti
mul
dec
adc
or
xlat
das
clc
iret
sbb
dec
pop
push
cmp
or
jno
fmuls
xchg
loop
cmc
ret
add
mov
scas
dec
in
std
push
pop
adc
orb
lods
xchg
fdivl
sti
loop
jbe
cmp
mov
add
cmp
movsb
adc
xlat
std
sahf
and
jge
lock
popf
out
dec
rorl
mov
enter
or
push
and
ret
dec
jne
fcoml
mov
pop
fdivl
lock
shrl
or
out
xchg
xchg
popa
cmp
mov
mov
stc
inc
loopne
jle
leave
mov
frstor
push
dec
dec
lods
mov
xchg
stc
pop
lret
int3
addr16
push
mov
divb
insl
sub
frstor
cmpsb
fnstsw
push
jmp
mov
and
test
shrb
inc
je
hlt
gs
or
scas
adc
sub
fwait
adc
shl
nop
aad
pop
lds
inc
lods
fwait
and
pushf
loope
mov
mov
pop
outsb
imul
jge
out
and
pop
sbb
adc
fidivl
bound
jb
movsb
or
cmc
test
mov
jmp
sbb
push
fldenv
jae
xchg
sbb
mov
xor
mov
or
adc
int3
ss
ja
pop
dec
inc
cwtl
sti
jecxz
in
enter
mov
lcall
test
pop
adcl
mov
lahf
jg
or
pop
out
dec
push
sbb
pop
lods
pop
fmull
jmp
int
jb
lcall
or
clc
sbb
sti
xor
inc
adc
das
push
iret
jmp
mov
pop
cmp
pop
fstps
cltd
shlb
dec
jle
push
xchg
mov
mov
ret
ret
iret
in
mov
push
xorl
mov
jmp
in
xor
push
and
sbb
repnz
jae
je
mov
sahf
adc
dec
sbb
popa
notl
push
xchg
sbb
sbb
repz
cmpsb
das
cltd
mov
sub
sbb
pushl
arpl
xchg
jg
push
push
int
aad
cmp
mov
sbb
xlat
shlb
inc
adc
add
in
or
scas
daa
inc
dec
stos
nop
sub
push
js
in
pop
mov
sahf
mov
outsb
aad
lret
sbb
xor
mov
sbb
xchg
scas
jo
iret
cmp
in
push
scas
mov
xor
cmp
iret
stc
lret
dec
cmp
mov
pop
je
mov
and
iret
ljmp
jne
mov
or
push
or
test
fwait
stos
xor
mov
push
daa
or
fcmovne
stos
mov
stc
jmp
int
push
sub
and
ret
jge
push
ljmp
je
rcl
cmp
out
push
insl
push
mov
push
and
rcrl
sbb
cwtl
leave
sub
aad
in
ss
or
push
push
add
shlb
xchg
int
popf
jne
insl
repz
pop
outsl
xor
iret
jmp
js
sbb
lcall
shrb
inc
xchg
sbbl
roll
dec
xor
sahf
xor
mov
movsl
dec
mov
mov
mov
data16
xlat
or
das
iret
je
stos
pushf
es
push
test
add
lcall
fsubr
imul
imul
loop
xchg
popf
pop
data16
xchg
shrb
movsb
clc
jnp
iret
rcl
call
pop
mov
mov
and
jnp
and
mov
ficomps
push
ss
dec
outsl
fsubr
adc
aad
or
fisubrs
mov
in
xor
cmpsb
movsl
test
fs
mov
pop
xchg
inc
inc
adc
repnz
or
add
mov
pushf
and
mov
mov
pop
sub
outsl
and
mov
lcall
cmp
ja
std
inc
sarb
cmpsb
xor
ljmp
addb
sub
ss
jns
dec
dec
jo
inc
fs
or
mov
addr16
pusha
repz
mov
test
stos
lods
xchg
pop
imul
imul
or
ja
js
xor
lods
push
cs
and
loopne
fistps
movsb
mov
cmpsb
mov
dec
push
add
or
add
cmp
and
mov
or
stc
sub
loope
cmp
inc
insb
clc
testl
add
aad
mov
lea
xchg
int
mov
cmp
loope
and
xchg
movsl
scas
inc
movl
adc
daa
xchg
cmpsl
nop
mov
fs
imull
in
mov
push
sbbl
jle
les
inc
js
fs
add
pop
jg
cmp
cli
cmp
pop
pushf
fistpll
cmp
stos
outsl
loope
cmc
and
add
pop
dec
popf
bound
mov
stos
and
movb
addr16
cwtl
sub
test
les
rcrb
scas
mov
clc
pop
iret
ret
ltr
push
jp
mov
cmp
into
sar
and
push
sahf
inc
xchg
orl
xchg
out
std
mov
jne
fsubrs
inc
ljmp
ss
sbb
add
insl
add
fidivs
in
pop
aas
fidivrl
pop
jno
fisubs
sahf
aas
sbb
rcrl
repz
inc
maskmovq
imull
jp
into
mov
loope
and
push
out
or
lahf
jge
rolb
or
or
repz
sbb
pop
mov
jo
jb
sarl
xorb
push
mulb
sahf
pusha
push
dec
mov
and
add
popf
cli
mov
adc
mov
inc
stc
stc
mov
and
sbb
sahf
jne
xorb
gs
jno
cltd
jne
ja
lcall
insl
dec
or
rcrl
out
in
xor
loopne
adc
mov
cmp
pop
pushf
fnstsw
insl
dec
mov
jecxz
mov
cmp
sbb
sbb
mov
fiaddl
pusha
pushf
sbb
pop
sbb
jb
jb
das
sub
sbb
subb
jne
pop
ss
clc
mov
aad
scas
testb
dec
mov
or
mov
and
and
addr16
xor
scas
adc
add
daa
call
repz
mov
push
mov
jmp
popf
leave
negb
mov
das
mov
fidivrs
in
ret
mov
mov
pop
out
mov
jge
mov
mov
push
fsts
test
fsubrs
xor
repz
je
sub
out
push
ds
scas
adc
mov
sbb
fidivs
dec
sbb
or
mov
sahf
stos
xchg
xchg
fisttps
into
in
sub
jbe
and
xchg
jg
adc
in
xchg
sbb
jnp
es
ja
sub
popa
mov
ja
add
aaa
loopne
or
fstpl
loope
mov
iret
inc
inc
cwtl
lcall
mov
mov
xor
ret
call
sbb
sarb
dec
std
jae
sub
push
in
inc
inc
jne
mov
outsl
xchg
adc
jp
or
call
sbb
or
dec
call
clc
xchg
ljmp
mov
in
imul
mov
dec
fsubrl
data16
ss
xchg
inc
pop
sbb
or
fs
xor
repnz
pop
imul
inc
nop
daa
mov
xor
cmp
xorl
and
push
das
movsb
addr16
sbb
dec
jecxz
jl
out
add
stos
inc
repz
and
mov
adc
mov
repz
lds
fwait
inc
sarl
nop
cmp
sub
pusha
and
mov
add
pushf
lea
imul
sbb
jbe
or
fidivrl
into
loopne
add
push
mov
daa
test
push
or
adc
jecxz
repz
jl
xchg
xchg
std
or
sbbb
add
cmpsb
in
ret
into
cmp
ss
xchg
inc
push
mov
insl
imull
jb
mov
shrl
dec
cmp
sbbl
mov
xlat
lds
lods
pop
aad
add
jge,pt
push
xchg
scas
sti
out
adc
mov
sbb
int
aad
xchg
out
scas
lret
ja
into
dec
int
fisubl
xor
inc
fiaddl
xor
ds
lds
call
push
movb
dec
or
mulb
idivl
mov
pop
dec
push
sub
mov
jo
leave
dec
xor
into
pop
cmp
lods
mov
sbb
jge
pop
mov
sbb
and
or
outsb
mov
inc
sbb
les
scas
and
scas
pop
sub
mov
test
mov
popa
adc
sub
push
addr16
iret
popf
and
push
push
sub
mov
pop
cmpsl
das
test
dec
mov
repnz
jge
leave
mov
test
hlt
nop
mov
xor
js
push
mov
mov
and
sbb
movsb
sub
mov
mov
test
cmp
jl
fisttpll
loope
lahf
or
push
ds
fcoml
jo
call
pop
jno
mov
xor
or
int3
jne
insb
or
jb
testb
popf
lock
sub
or
sub
inc
add
inc
pop
std
iret
enter
push
push
mov
sub
mov
fwait
outsb
push
add
loope
mov
ja
stos
jmp
mov
xchg
jnp
push
rcl
push
bound
xor
xchg
int3
jmp
insl
loope
testb
mov
sub
pop
arpl
ficoms
inc
jl
inc
iret
hlt
lret
shrb
mov
jle
scas
dec
loope
pop
add
shl
addr16
add
hlt
adc
fnsave
lods
outsl
mov
aas
add
cld
mov
hlt
daa
sub
or
mov
mov
test
sbb
mov
stos
jne
push
fidivs
insl
jns
and
or
cmp
in
cmp
add
dec
jb
adc
adc
and
icebp
adc
or
pop
data16
cmp
jecxz
dec
pop
mov
and
xor
xor
icebp
dec
shll
push
clc
ret
mov
mov
int3
sub
push
jge
mov
das
mov
mov
iret
xchg
or
ficomps
lock
roll
or
pop
shll
cmp
orl
cmpsb
or
mov
std
mov
into
jo
scas
sbb
mov
test
jge
adc
mov
mov
jmp
mul
add
jne
sbb
sub
mov
add
jp
push
sar
inc
iret
inc
cmp
in
push
clc
stos
aas
into
mov
dec
insb
fldl
push
rcrl
jle
rclb
sub
lahf
sbb
sbb
lret
out
pop
gs
jl
scas
jp
cli
cmp
cmp
lea
popa
dec
inc
xchg
fcmovbe
movsb
adc
jb
addw
or
lret
xor
popf
sbb
out
scas
repz
push
enter
xlat
pop
mov
dec
adc
push
mov
pop
in
push
adc
sahf
mov
ret
add
sub
fisubl
loope
pop
lods
xorl
mov
push
or
iret
shrl
or
out
fdivs
xor
leave
mov
popl
addr16
xchg
adcl
ss
scas
test
mov
and
in
sbbl
sbb
jl
xchg
test
loope
xchg
push
fs
stc
inc
test
inc
mov
inc
stc
repnz
mov
push
ja
cmp
xor
int3
or
sbb
lods
dec
or
xor
jno
out
pop
pop
mov
mov
loop
add
movl
mov
cld
in
std
adc
xor
ljmp
cmp
fwait
in
xchg
sbb
add
pop
mov
ret
dec
cmc
js
dec
pop
xchg
outsl
cmp
shr
cmp
sub
scas
jns
mov
enter
and
push
out
adc
pop
lds
daa
jbe
sub
xchg
insl
in
mov
repz
inc
fisubs
test
je
insl
inc
loopne
imul
mov
aam
cmpsb
int
dec
stc
neg
test
leave
fs
push
outsb
loopne
mov
int3
mov
cld
mov
test
arpl
mov
jbe
scas
mov
enter
lds
aaa
aam
enter
shlb
mov
cmpsl
mov
repz
rcll
pop
or
mov
push
std
mov
xchg
push
or
in
fwait
jge
es
js
dec
and
mov
movsl
push
shl
add
cwtl
ret
mov
add
dec
dec
inc
jl
stos
mov
frstor
push
mov
and
xorl
adc
pop
push
pusha
stc
cld
inc
add
or
aam
xchg
popa
xor
repz
xchg
loopne
shll
push
xchg
notb
pushf
mov
push
dec
mov
idivl
xorl
and
ds
xor
insb
loopne
bound
sub
imul
pop
add
in
push
push
hlt
shrl
push
int3
push
mov
xchg
mov
sarl
fwait
mov
insb
movsb
cmp
push
shl
pop
xchg
iret
ds
lds
sbb
les
mov
andl
pop
fcoms
or
jne
inc
in
ds
xchg
jb
or
movsl
int3
jbe
jns
arpl
mov
jne
sub
pop
testb
mov
idivl
dec
inc
mov
mov
add
jae,pn
outsb
mov
int
ds
adc
and
sarb
mov
sub
inc
jae
fstpl
push
shrl
cmp
cli
fldl
decl
inc
cmp
iret
jb
adc
push
out
dec
in
sti
sahf
or
mov
stos
shrb
cltd
in
std
mov
loope
xchg
mov
and
in
jp
mov
sub
xchg
repz
lret
cmpsl
lds
stos
add
cwtl
pusha
adc
dec
sbb
aad
bound
xchg
push
es
hlt
call
imul
pop
xchg
jl
cmp
mov
and
imul
cltd
pop
es
dec
lds
inc
xor
in
sbb
js
in
sub
jne
daa
arpl
mov
mov
dec
mov
adc
lds
xchg
adc
or
pop
jmp
sarl
shrl
or
push
inc
out
pushl
mov
test
ret
xlat
pusha
cmp
xchg
xchg
mov
xor
sub
dec
or
xor
popa
test
inc
or
sub
and
in
push
nop
fsincos
xlat
adc
lret
cmp
sbb
fst
pop
inc
js
mov
sub
inc
and
inc
inc
stc
inc
jbe
iret
add
loope
and
adc
jmp
add
pop
pop
leave
dec
ret
sti
pop
cmpsb
push
pop
sub
sbb
push
jl
sbb
mov
mov
cmpsl
pop
mov
sub
pop
pop
stc
inc
lahf
test
cmc
shrl
ja
inc
out
xchg
adc
xchg
pop
test
test
and
inc
mov
stos
sub
rcr
mov
mov
sbb
fwait
aas
aas
cmp
dec
xchg
stos
dec
clc
cmp
lock
inc
mov
mov
sub
in
out
and
fsubrl
xor
jecxz
push
call
push
dec
pop
scas
data16
decb
push
push
clc
stc
js
inc
ror
adc
mov
in
push
loopne
and
mov
pop
mov
dec
pop
inc
inc
push
mul
inc
lret
sbb
lds
cwtl
mov
and
and
xor
mov
xchg
in
pop
fisubl
xchg
ftst
xchg
mov
sti
add
daa
fcomip
xchg
inc
in
adc
rol
or
pop
in
sbb
lock
aaa
loope
jg
mov
jns
add
mov
pop
push
shlb
lods
lahf
mov
and
inc
push
lds
in
les
negl
je
push
adc
dec
mov
arpl
jmp
dec
aaa
xchg
mov
daa
adc
mov
in
iret
stc
push
and
lahf
sarl
test
jns
push
outsl
mov
iret
imul
cli
les
fisttpl
int3
ds
or
mov
mov
cwtl
outsl
mov
jle
dec
testl
and
lahf
mov
jg
hlt
adc
add
pusha
les
into
sub
int
jle
inc
ret
push
mov
shrl
leave
pop
xchg
je
mov
push
jno
mov
inc
sbb
and
xchg
mov
movsl
lods
ja
les
fwait
and
mov
test
xlat
ret
xlat
xor
stos
push
lock
repz
scas
inc
mov
xchg
cmpsb
xor
shlb
repz
fildl
xchg
jns
xchg
mov
push
jecxz
pop
pop
int3
insb
jae
test
cmc
push
cmp
mov
popf
out
jae
in
and
in
mov
pcmpgtb
pop
push
jge
mov
gs
fstps
cmpsb
jp
dec
mov
adc
push
pop
ss
lret
shlb
das
dec
enter
mov
clc
fwait
jbe
nop
cmp
dec
cmp
pop
std
add
and
sub
mov
imul
or
adc
loope
add
or
mov
ret
adc
jge
addr16
cmpsb
jno
les
ret
mov
xchg
stc
sbb
jmp
inc
sub
lods
idivl
fcomi
into
dec
sub
ss
test
lret
test
push
inc
or
loopne
sbb
mov
jp
fxch
cmp
scas
stos
icebp
xor
inc
xchg
shll
xchg
fstp
leave
jnp
popf
adc
addr16
cmc
sbb
pop
sbbb
mov
out
iret
inc
es
stc
outsb
inc
arpl
or
or
push
adc
pop
mov
or
sbb
pop
dec
mov
rolb
push
mov
jae
xchg
pushf
xor
icebp
in
inc
testb
push
repz
or
fmuls
out
imul
fwait
or
mov
fs
sbb
adc
test
repnz
cmpsb
jmp
es
mov
jmp
repz
scas
xchg
enter
mov
cmp
subl
adc
cmp
sub
push
adc
cmp
push
push
add
push
ja
mov
push
popa
dec
mov
mov
mov
sub
ret
xor
mov
pusha
in
jne
jae
fmuls
call
cmp
inc
mov
enter
scas
into
imul
jae
pop
lea
jb
sbbb
notb
and
xlat
push
sbb
sub
add
fbstp
adc
es
inc
mov
push
adc
sub
mov
lods
lods
jnp
push
imul
and
lret
lock
ror
fiaddl
push
fsts
scas
mov
mov
lds
cmp
outsb
sarl
sbb
sbb
loopne
arpl
adc
lods
leave
paddsw
loopne
insl
outsl
pop
into
sahf
xchg
rolb
ret
sbb
fdivrs
or
jmp
xor
stos
rorl
jns
dec
dec
add
mov
incb
leave
mov
fucomp
lea
aaa
xchg
notl
push
clc
fiaddl
js
sub
add
add
popa
xchg
jo
scas
inc
je
jnp
stc
cwtl
sti
mov
dec
jp
scas
sbb
mov
into
fwait
xor
pushf
popa
jmp
mov
es
xchg
test
adc
stc
push
pop
ror
mov
add
sub
lock
xorb
jb
xlat
imul
shrl
jl
xor
pop
xlat
das
mov
mov
imul
sahf
sbb
mov
aas
adc
stos
out
fldcw
sub
iret
or
into
cli
push
jo
repz
in
mov
and
scas
aas
cmp
sbb
ds
addr16
dec
jb
hlt
add
sbbb
sbb
mov
jno
mov
and
inc
and
mov
movsl
into
push
lcall
lods
xor
leave
mov
decb
movsl
testl
xorb
rclb
fisubl
std
ret
aad
stos
cmp
mov
mov
cmpsl
sahf
jb
lods
xor
pop
push
mov
or
push
sbb
sbb
lock
mov
and
cmp
sbb
pop
les
dec
push
clc
mov
adc
xor
mov
xchg
aam
xor
dec
xchg
jns
inc
adc
dec
scas
lret
lret
jne
daa
dec
mov
jl
sub
xchg
xor
clc
adc
rorb
pop
inc
push
out
sub
inc
pop
decb
cmp
mov
xchg
mov
in
cld
int3
xor
out
scas
pop
out
inc
shlb
sbb
xchg
dec
sub
ja
cmp
jmp
push
fwait
rcl
mov
test
je
sbb
add
movd
aad
jnp
leave
pop
out
dec
add
loop
mov
sbb
scas
adc
outsb
sbb
and
xor
cld
hlt
leave
jo
sarb
dec
dec
pusha
pop
sbb
pop
fdivl
add
push
sub
jno
shll
and
rcrb
push
cmp
ret
dec
jo
test
insb
sbb
cmp
mov
jns
xchg
inc
xor
fildl
sti
lea
pusha
xchg
and
xchg
lret
mov
dec
push
dec
push
inc
jle
xchg
lret
repnz
rcll
xor
int
pop
je
cmp
das
inc
cmpsb
movsb
bound
lods
mov
add
add
fldenv
mov
fcmovbe
cmpsl
cld
cmpl
push
push
jae
mov
stos
bound
lods
or
pop
add
sub
in
xor
or
or
das
dec
mov
sbb
dec
cmc
iret
mov
movsb
loope
pop
mov
dec
push
cmpsb
and
movsb
jmp
cmpsl
mov
and
popf
mov
lods
iret
imul
pop
rol
fsubl
pop
or
pop
outsb
frstor
icebp
in
mov
fwait
add
frstor
inc
fnsave
mov
gs
test
or
sub
pop
test
fdivrp
outsb
popf
mov
add
fcomps
ds
stos
inc
test
jns
mov
pop
xchg
push
add
xor
sbb
xchg
arpl
and
rorb
es
xor
push
popf
push
add
cltd
jae
adc
dec
cmp
push
cwtl
cmovnp
adc
out
popf
mov
nopl
out
mov
fldcw
and
iret
aad
js
xchg
fadds
les
mov
fdivrs
cmc
sub
and
fstl
stos
jno
mov
or
mov
out
jns
loop
fmull
cmp
jmp
lods
inc
and
pop
or
xchg
xchg
sbb
jle
and
or
mov
lret
lods
jo
inc
sub
insl
imul
xchg
ss
fmull
xor
lcall
xchg
in
inc
fwait
pop
sbb
movb
test
push
inc
sbb
outsl
cmc
mov
pop
stc
les
xor
and
xor
loope
mov
mov
test
cwtl
loope
mov
mov
mov
xchg
or
and
adc
inc
cmc
es
or
jnp
out
outsl
rolb
mov
stc
sbb
loopne
push
inc
or
sbb
xchg
lock
out
int
push
fsubr
jmp
inc
mov
or
psubd
cmpsl
outsb
mov
mov
pushf
jmp
ljmp
sub
jnp
inc
addr16
jno
add
nop
dec
out
xchg
lock
jns
jb
mov
repnz
push
fmuls
adc
push
adc
push
ret
push
jl
xor
mov
jno
mov
daa
sbb
lds
jmp
lock
js
hlt
test
mov
lret
or
push
push
jns
out
out
fisubrl
push
sub
int
cmpl
mov
sub
xor
pusha
mov
or
jecxz
jbe
xorps
cmp
sub
sub
fucom
adcb
daa
loope
pop
orl
movsl
dec
pop
jb
xor
es
cmp
sti
dec
and
mov
push
push
xchg
adc
imul
je
ret
out
sub
fldln2
das
cltd
ss
jnp
cmp
shrl
mov
test
out
shl
sbb
and
add
sbb
lock
sti
popf
int3
cmp
add
xor
subl
push
insb
leave
add
hlt
dec
test
adc
pop
push
sub
add
mov
xchg
daa
and
and
cmp
push
jb
fbstp
out
add
inc
repnz
popf
xchg
cmp
ret
push
sub
popf
nop
dec
dec
push
adc
push
pop
mov
mov
push
pop
orb
mov
push
push
stc
cmp
outsw
mov
movsl
jecxz,pn
pop
lret
jge
sub
push
pushf
popa
es
in
mov
outsl
push
outsl
xchg
mov
push
insl
je
dec
dec
push
aam
xchg
pop
xchg
insb
mov
test
fs
mov
int
mov
shll
push
and
out
stos
add
aaa
sub
call
adc
sbb
push
inc
pop
cmpsl
call
imul
xlat
xorw
lret
fimull
int3
xchg
jnp
andb
lods
mov
xor
jmp
mov
outsb
pop
into
pop
into
addr16
pop
int3
push
adc
cli
jecxz
push
sahf
dec
sbb
pop
jno
jmp
sahf
mov
inc
adc
repnz
mov
test
push
pushf
inc
cmp
subl
fs
into
scas
test
push
test
sti
stc
sbb
das
std
sub
test
cld
rcrl
mov
enter
jb
jge
cmpl
or
popf
jmp
xor
pop
cld
pop
scas
les
ret
leave
lea
mov
fimull
sbb
es
sbb
and
test
addb
sub
push
rolb
mov
mov
jl
fcomps
fcomip
mov
aam
or
loopne,pt
adc
pusha
dec
and
call
jns
rcrl
outsb
sub
xchg
mov
loop
jecxz
lods
stc
shll
or
loop
pusha
cli
inc
xor
fwait
aaa
sub
and
push
sbb
lds
shlb
ficomps
xor
sub
sbb
lahf
and
or
pop
mov
loopne
jg
push
cmc
test
cmp
lods
add
or
adc
xor
repz
jno
mov
push
daa
in
filds
lods
mov
lds
mov
or
ja
pop
ret
cwtl
cmpsl
push
mov
ret
add
test
or
outsb
pop
cmp
fdivl
xor
add
iret
push
inc
push
adc
idivb
push
inc
lods
push
dec
popf
in
out
add
jae
sahf
shlb
sub
enter
ret
xor
or
pop
leave
adc
decl
mov
movsb
mov
xor
sbb
push
imul
mov
cmp
stc
movsl
jl
xor
js
scas
xchg
cwtl
fcmovne
arpl
push
es
add
cmpsl
add
jne
sub
mov
out
test
imul
data16
roll
add
repz
xor
je
lret
mov
fcomps
cli
add
hlt
ret
imul
jle
mov
xor
fstp
pop
jo
jmp
lcall
aas
std
sbb
sub
jae
cmpsb
clc
jo
inc
mov
xchg
mov
int
sahf
push
gs
sbb
lahf
xchg
or
cwtl
sub
popf
imul
xlat
mov
out
inc
je
bound
pop
rcrb
testl
xor
pop
inc
pop
cs
jmp
mov
fucomi
sub
pop
cmc
lock
out
lret
or
test
sub
imul
xchg
aad
loop
dec
adc
ja
and
das
jmp
or
loope
arpl
cltd
fists
sbb
es
cmpsl
mov
jb
pop
add
sub
lds
push
fs
mov
data16
mov
mov
and
in
pop
fmull
repz
pand
sub
ficomps
adc
or
fsubs
push
mov
xchg
adc
roll
rorl
pop
xchg
jmp
clc
mov
adc
jnp
push
pop
inc
jge
and
lods
fbstp
dec
jb
inc
adc
push
jg
lahf
insl
jg
cwtl
mov
sar
sbb
loopne
push
cs
out
daa
mov
inc
push
mov
rol
adc
ljmp
mov
lods
das
imul
pop
fs
jg
iret
mov
fbstp
jmp
sub
inc
adc
mov
pop
add
push
leave
cmp
shlb
sub
mov
xchg
or
testl
fwait
dec
add
outsl
jbe
sti
lods
jle
jecxz
jge
cld
ret
mov
stos
add
inc
xor
ficoms
xor
fnstcw
cmp
push
cs
cli
pop
pop
loopne
mov
imul
cmpsl
test
hlt
xor
imul
sub
daa
loope
fistl
cli
mov
xor
mov
dec
lcall
cs
mov
inc
cs
mov
call
shl
jecxz
sahf
lods
in
arpl
bound
cmpsl
sbb
adcb
dec
mov
insl
int3
fdivrl
pop
pop
inc
mov
xor
je
addr16
sbb
mov
mov
stc
cld
xor
sbb
scas
test
sbb
es
mov
ja
addr16
mov
cmp
int
push
lahf
hlt
cmc
jmp
cmp
fisubs
add
ss
rolb
and
pop
mov
cmc
or
iret
and
jne
ds
insb
pop
cs
and
fdivl
cmpsl
jno
test
and
movsl
leave
xor
mov
jmp
jo
cld
out
aad
jl
or
idiv
stos
outsb
mov
dec
std
cmp
out
dec
test
fcmovu
or
xlat
das
pusha
icebp
imul
add
sbb
dec
test
adc
pop
mov
and
pop
ss
sbb
mov
push
inc
rorl
rolb
shl
inc
push
sub
std
insl
push
mov
and
cmp
add
enter
enter
movsl
ja
ss
lock
enter
aas
sbb
int3
cwtl
push
adc
mov
repz
out
add
fbstp
adc
aas
mov
push
jnp
ss
or
cwtl
imul
lahf
mov
addl
mov
lret
inc
fimuls
push
jmpw
ljmp
jle
xchg
fstl
push
loopne
fisttps
inc
push
jle
out
mov
fistpll
int
iret
adc
cmp
jp
mov
rcrb
pop
sbb
or
in
add
push
mov
pop
xchg
les
xchg
enter
cs
push
das
ret
test
hlt
or
cmp
inc
test
rol
mov
bsr
lahf
out
aas
cs
cmp
fwait
mov
and
cli
mov
or
repnz
and
mov
gs
mov
rorl
jns
xchg
sbb
es
nop
add
dec
popf
xchg
pop
xchg
and
movsb
mov
les
add
sbb
scas
dec
jb
pop
dec
test
xor
enter
push
aam
rcll
iret
les
pusha
bound
icebp
jno
sub
mov
xchg
pop
stos
mov
cmp
and
fs
dec
xor
xor
mov
popa
dec
adcl
dec
lds
lcall
pop
call
xchg
mov
xchg
or
mov
nop
hlt
je
add
or
inc
pop
imul
push
vpcomb
sub
negl
pusha
pop
mov
and
fisubs
and
lods
sub
mov
mov
cli
dec
das
jle
pop
dec
xchg
js
push
pop
inc
or
add
loope
aam
sub
push
mov
cmc
fidivrs
cwtl
mov
or
js
repz
dec
daa
fnstsw
stos
push
sahf
inc
dec
lret
xlat
push
gs
jl
pop
xchg
jp
movnti
dec
sub
adc
xchg
int3
sub
sub
add
enter
inc
rcll
push
fildll
out
and
pop
fldt
push
add
outsl
int3
aaa
dec
push
jno
cmp
imul
outsb
inc
imul
jge
inc
mov
sti
mov
jnp
mov
int
data16
mov
add
mov
cmpb
repz
dec
sbb
push
outsl
sbb
jg
js
fcmovnu
ss
sub
add
cmpsb
adc
xchg
and
sub
test
cmp
pop
jb
mov
cld
insb
jle
rep
imul
sbb
adc
fwait
xorb
add
sti
lods
mov
dec
mov
mov
jnp
sbbl
jmp
cmp
lcall
aas
push
and
ret
adc
int
jge
mov
les
pop
aam
lcall
jne
inc
pushf
jge
push
cmpsl
xor
adc
lods
cmc
aaa
xor
stc
movsl
iret
xor
jl
icebp
jge
cltd
pop
pop
jecxz
ds
lods
sahf
fidivrs
push
or
cld
xchg
jle
inc
xor
addb
mov
das
push
mov
insl
lods
lock
mov
jb
stc
dec
mov
ret
inc
scas
mov
test
iret
or
add
sub
or
jnp
inc
add
push
sub
pop
sub
out
jnp
pop
mov
shrl
xor
xchg
rorb
and
test
add
xchg
leave
cmp
mov
sbb
mov
push
test
out
sahf
pop
movb
pop
adc
xchg
arpl
add
push
mov
xchg
or
test
repz
jecxz
sub
xor
lods
lcall
decl
xor
loope
insl
jo
or
lahf
lahf
addr16
or
pop
shrl
ja
imul
and
stos
ja
xor
push
dec
rcrl
pop
cmc
arpl
add
xchg
cmp
inc
ja
cmc
out
iret
xor
xchg
dec
arpl
and
mov
mov
sbb
out
jbe
outsl
arpl
mov
or
pop
outsb
bound
data16
cmp
adc
pop
cwtl
cmp
arpl
in
jecxz
scas
mov
ret
add
nop
and
pusha
push
pop
xor
sub
mov
sbb
ljmp
insb
jmp
sbb
shrb
mov
or
mov
cld
cmp
addr16
mov
in
arpl
mov
mov
in
add
sbb
sub
cmp
mov
jno
or
pop
sarb
dec
dec
jmp
idivl
lret
out
or
sbb
push
jecxz
addl
bound
xor
addb
and
mov
mov
jo
test
inc
push
outsb
adc
or
int3
jmp
add
mov
jns
loope
xchg
fwait
jb
enter
cwtl
ss
xor
fldt
cmc
loopne
cmpsb
das
jecxz
mov
mov
jecxz
adc
inc
adc
shrb
xor
jne
mov
dec
mov
push
in
push
sarl
test
addr16
lret
xor
push
xor
shll
adc
mov
loope
loope
lea
add
sbb
xlat
jb
aaa
ds
dec
and
cmp
mov
xlat
lods
jecxz
jae
lcall
cmpsl
mov
sub
hlt
call
mov
inc
adc
mov
out
and
sub
lcall
dec
xchg
or
mov
sbb
jg
or
push
sti
xchg
jbe
leave
mov
xor
cmc
js
lret
inc
push
mov
jno
daa
sub
movsl
icebp
xchg
rcrl
sarb
popa
mov
cmpsb
adc
popa
mov
adc
sbb
stos
ficompl
cmp
aam
and
repz
cmp
movlhps
mov
movsb
sub
shll
mov
dec
xchg
cmp
rcrb
xchg
movsl
adc
add
sar
push
xchg
xchg
ljmp
jecxz
dec
jb
pop
lahf
push
loop
pusha
adc
push
push
xor
int
push
add
gs
out
jle
adc
ficoml
data16
mov
hlt
and
pop
push
sub
cmp
mov
xchg
data16
xorl
cmpsb
test
imul
stos
sub
mov
mov
test
addr16
push
iret
sub
cwtl
out
enter
leave
ret
leave
fmull
mov
pop
adc
movl
mov
jno
mov
test
mov
jmp
iret
xchg
testb
xchg
leave
cli
and
in
insb
jnp
cmp
leave
jl
loope
ljmp
fiadds
inc
sub
xchg
inc
inc
in
loopne
add
in
jae
jl
and
sti
aad
in
push
sahf
adc
sub
sarb
popf
test
push
sub
and
add
mov
fcompl
hlt
xor
mov
sbb
bound
data16
sbb
int3
mov
add
and
in
lods
push
lock
out
arpl
mov
xor
and
jnp
sub
iret
insl
xchg
dec
jns
outsb
ss
cs
mov
leave
fsub
and
inc
and
jbe
arpl
pop
pop
negb
inc
mov
jae
mov
insl
sub
gs
xchg
sub
cmpsb
dec
fisttpll
out
lds
pop
iret
pop
mov
add
mov
pop
stos
cltd
jmp
adc
loop
out
sbb
dec
rorb
sbb
sbb
popa
cmp
out
push
ss
cli
fucomip
jl
push
xchg
cmc
dec
push
jae
mov
adc
lret
ret
dec
push
inc
rclb
cmp
enter
cmc
sbb
mov
call
pop
data16
push
rcrb
lahf
arpl
push
push
and
cwtl
int3
pop
push
xchg
mov
pop
mov
ja
stc
inc
rorl
xchg
push
ret
movsb
test
push
int3
mov
adc
pop
sti
and
push
sti
fistpll
lods
fsubr
sbb
data16
les
ret
xor
mov
cli
xchg
mov
arpl
xchg
and
je
jmp
and
repz
test
pop
in
inc
cs
ds
fstl
add
mov
mov
add
outsb
lcall
cltd
add
loope
enter
xchg
daa
pop
movsb
cmpsl
dec
push
filds
shl
push
push
fs
cmp
push
xor
cmp
cmp
mov
sbb
jecxz
mov
hlt
push
in
mov
jmp
sbb
pop
cmp
out
jp
in
pop
sbb
outsb
adc
mov
or
jg
push
ret
jmp
movsl
mov
jge
mov
inc
mov
cmp
insl
std
push
and
dec
xchg
adc
mov
jecxz
jle,pt
call
bound
icebp
push
jae
in
mov
mov
push
adc
stos
cmc
inc
adc
sub
cmp
rol
xorb
mov
into
arpl
and
dec
inc
and
adc
or
sbb
xchg
aaa
jns
into
add
cmp
loopne
std
push
rcl
rcrb
cmp
je
pop
cmp
lcall
testb
shl
lea
outsb
faddp
sub
inc
pop
mov
pop
pop
mull
push
mov
xchg
les
push
lahf
movsl
andl
ljmp
xchg
addb
loop
hlt
stos
xchg
add
sbb
enter
mov
and
test
or
clc
dec
sbb
lods
cmpsb
jle
mov
lock
test
xchg
mov
mov
cmp
gs
mov
lret
mov
pop
mov
es
mov
loope
dec
std
mov
and
jnp
jns
inc
outsl
jge
mov
pop
loope
pop
daa
add
mov
adc
loope
std
push
pop
jmp
mov
dec
push
push
add
mov
cmc
sub
push
push
inc
pop
in
add
lahf
lahf
int
sub
imul
daa
jne
xchg
scas
test
adc
addr16
jg
sbb
sbb
jno
add
loopne
add
mov
pop
shl
pusha
jo
gs
mov
out
mov
jecxz
mov
jmp
pop
dec
xlat
mov
add
mov
insl
push
addr16
lahf
pop
sub
push
test
testl
cmp
aam
testb
and
fsubrl
push
inc
sbb
call
xor
stos
xorl
fidivs
pop
push
iret
es
daa
out
push
mov
fwait
xor
jne
cwtl
inc
inc
push
icebp
dec
lods
sbb
movsl
fmull
xor
jno
pop
jge
jno
pushf
fdiv
fdivr
xchg
push
test
inc
xor
call
faddp
aas
adc
call
fdecstp
add
movsl
sbb
push
std
in
stos
data16
xor
xlat
inc
int
or
sbb
pop
add
xor
int3
repnz
and
cmpsb
aam
dec
pop
push
mov
add
clc
mov
mov
iret
mov
cli
jb
dec
scas
clc
jl
dec
fdivrs
cmp
std
sub
sbb
arpl
push
pop
mov
pop
in
mov
addl
incb
xor
paddusw
lods
cld
loope
add
dec
and
in
pushf
mov
pop
adc
das
xchg
subl
imul
lret
inc
dec
add
lret
jbe
mov
icebp
mov
inc
roll
cmp
out
lods
mov
fwait
lahf
add
fldt
pop
xlat
push
add
lock
sub
scas
lcall
and
dec
fs
mov
es
inc
dec
cmp
addr16
dec
aad
js
movsl
sahf
into
cmp
xor
bound
hlt
push
js
sub
or
push
pop
daa
mov
jno
cs
iret
insb
push
rcrb
xchg
xor
fistpl
dec
movsl
incl
sub
mov
rcr
add
nop
leave
lret
ja
rol
shrl
cmp
repz
cli
sbb
cltd
dec
in
sbb
loop
js
cltd
lret
inc
dec
lret
fs
lock
inc
in
outsb
sbb
pop
fs
sbbb
and
sbb
cltd
dec
push
push
scas
mov
sbb
out
cmp
daa
jae
or
or
and
lcall
mov
movsl
fldcw
fxtract
and
insl
das
inc
pop
dec
jmp
cmp
push
std
roll
mov
and
das
add
push
pop
mov
divb
lods
sbb
or
xlat
dec
stos
and
out
mov
dec
mov
adc
pushf
mov
or
out
push
dec
inc
fs
pop
push
adc
and
pop
out
adc
jmp
dec
idivl
inc
add
inc
mov
ret
push
cwtl
mov
repnz
rorl
dec
rcrl
inc
add
loop
sub
orl
mov
mov
iret
inc
add
mov
xchg
lock
push
sbb
xor
imul
test
pusha
pop
out
test
movsb
add
push
clc
mov
mov
dec
pusha
out
das
pop
cmp
clc
xchg
cmp
cmp
push
push
leave
ror
xchg
sbb
outsl
inc
lock
shlb
loope
sub
cld
jl
jle
xlat
inc
fimull
sbb
xchg
pop
push
cmp
add
lods
inc
imul
daa
sub
push
test
pop
sbb
push
and
pop
inc
clc
fidivrs
inc
lret
movsl
test
lcall
push
add
mov
mov
movsl
xchg
sti
mov
push
int3
sahf
call
or
sti
inc
nop
cmpsl
add
fidivrl
call
test
adc
jae
xor
negl
xchg
out
lcall
pop
push
sub
push
in
in
cltd
std
xlat
sbbb
xchg
add
fiaddl
pop
aad
pusha
xchg
sbb
test
jecxz
mov
fldcw
sahf
jg
enter
sbb
and
jle
pop
jne
xlat
pop
test
or
enter
divb
mov
in
in
pop
popf
mov
std
stos
ret
inc
shll
sbb
cli
push
es
aam
mov
mov
sbb
xchg
mov
inc
ss
outsb
loope
je
add
cmovle
lret
test
dec
pcmpgtb
inc
mov
cwtl
adc
jge
ljmp
cld
gs
cmc
mov
fcomps
add
or
icebp
mov
add
push
test
add
outsb
imul
aaa
and
xchg
and
addr16
push
inc
es
push
push
aas
push
insl
dec
aad
int
dec
imul
dec
fs
loop
lds
fsubrl
clc
cmp
sar
in
add
xor
add
push
fmull
lods
in
scas
jl
add
add
or
dec
mov
push
jl
push
in
pop
inc
movsb
xor
out
bound
imul
ficoms
xchg
js
imul
or
pop
cmpsb
push
js
push
rolb
test
sahf
lretw
in
lahf
dec
pusha
inc
pop
pmulhw
test
mov
dec
mov
mov
or
cmp
into
adc
pop
mov
add
or
je
jnp
sbb
jne
xchg
mov
push
out
sub
mov
rolb
ss
les
cwtl
lahf
xchg
mov
insb
arpl
lea
lret
dec
sub
cwtl
push
loope
punpckhwd
cmc
sub
mov
xchg
inc
les
xchg
push
and
adc
cmpb
dec
aam
mov
lcall
sbb
ffree
jmp
inc
sarl
add
xchg
int
sub
fwait
pop
fnstsw
jns
scas
sti
lahf
cs
aaa
scas
stos
adc
clc
add
js
ficoms
fstl
jnp
push
call
dec
roll
sbb
imul
push
adcl
jecxz
adc
xor
pushf
mov
fs
sub
shll
mov
addr16
aas
ja
mov
mov
mov
add
jno
popf
and
hlt
pop
stos
jo
movsl
faddl
pusha
xchg
push
add
fnstcw
out
pop
dec
nop
test
dec
push
xchg
jg
ljmp
cmp
movsb
test
or
gs
jmp
dec
clc
inc
sub
xchg
dec
sbb
mov
setle
loope
arpl
sbb
and
inc
mov
cmpsb
icebp
push
fwait
aam
ja
nop
jl
and
push
cmp
push
cli
inc
shlb
or
fwait
mov
jno
in
cltd
dec
push
insb
cltd
lret
and
test
dec
lret
inc
js
andl
and
mov
cli
dec
vpsubd
je
aaa
nop
cmp
or
jp
fidivl
mov
mov
lods
sub
cmp
fldl2t
add
mov
adcb
mov
dec
outsb
pop
xchg
js
mov
cltd
or
xor
shlb
xchg
xor
add
inc
cli
mov
out
jp
push
adc
lahf
jns
repz
and
arpl
xor
imul
mov
mov
or
scas
adcb
ds
xor
rcrl
int3
and
lea
cs
pop
je
gs
lret
movb
lret
inc
jns
jl
fcomps
xchg
fidivs
jo
adc
pop
mov
enter
xchg
rcrl
push
cmp
sbb
sahf
and
jbe
loop
dec
dec
insb
in
sub
iret
cmp
adc
hlt
cmp
lret
push
loopne
nop
lret
fcoms
adc
je
out
and
add
mov
jne
inc
jo
cmp
subl
out
jmp
aad
cli
lock
imul
dec
std
mov
mov
clc
jae
xchg
inc
jb
test
mov
rcrl
lret
mov
mov
rcrb
sub
movsl
js
push
mov
outsl
lods
jb
push
ja
sarl
sub
sub
inc
mov
lahf
lds
jle
xor
addr16
inc
sub
cmc
pop
or
fldenv
xor
aas
pushf
aaa
lods
inc
mov
divl
cwtl
xchg
or
in
jbe
frstor
and
cmp
test
stos
mov
shlb
test
dec
fs
sahf
imul
idivl
fmull
inc
adc
dec
mov
xchg
dec
aad
imull
stos
mov
jnp
jbe
scas
dec
cli
cmp
clc
fadds
shll
xor
loopne
sbb
das
xchg
insb
mov
xlat
ja
pop
shlb
int3
jnp
pusha
push
push
ljmp
inc
xchg
fbld
jmp
lock
fwait
xor
bound
inc
and
out
push
push
in
fistps
push
or
mov
xlat
mov
pop
ss
scas
enter
orb
mov
mov
scas
sbb
test
jns
loop
cmp
test
imul
xchg
clc
int3
cwtl
ss
in
jb
pop
pushf
mov
mov
push
sub
std
sbb
mov
mov
cmpsb
mov
mov
lret
sub
xchg
loope
cmp
addr16
das
inc
or
popf
xchg
mov
daa
into
dec
movsb
and
pop
dec
bnd
ret
les
pop
adc
xor
mov
fstp
push
sbb
outsl
push
fstpl
adc
pop
or
dec
in
stc
in
cmp
outsl
push
pushl
mov
mov
dec
mov
sub
sbbl
gs
push
fiadds
push
or
dec
imul
pop
lock
mov
imul
add
pop
sub
inc
pop
push
sti
xchg
cmp
jb
outsb
mov
fstps
mov
pop
add
cmp
scas
push
xor
je
cmp
jns
pop
std
mov
xchg
mov
cmpsl
lret
mov
imul
push
ds
fcos
and
cmp
jbe
insl
or
xchg
push
lea
push
jno
leave
test
xor
and
das
lock
pop
pop
sbb
imul
jo
js
shrl
adc
jae
mov
and
cs
sub
fdiv
fs
inc
sub
ficompl
clc
mov
push
mov
rolb
push
add
xor
and
sbb
test
sub
test
cmp
das
ret
stos
lock
xchg
dec
add
cltd
popa
call
les
jb
sbb
imul
mov
rcrb
sarl
sub
imulb
ss
mov
mov
shrb
movsl
jns
pop
sub
and
sar
stos
lcall
popf
lods
sarl
ja
movsl
push
cmp
sub
pop
mov
and
adc
jge
dec
push
call
sbb
jns
in
mov
jecxz
add
fs
pop
xchg
pop
jo
push
cmpsb
or
sub
loopne
push
xor
mov
and
arpl
lods
lahf
jg
mov
inc
pop
gs
call
in
and
mov
inc
int
xchg
loope
push
sbb
xchg
xchg
push
xor
or
gs
daa
pop
clc
ss
xchg
sti
mov
imul
cmpsb
add
and
in
xor
mov
aaa
lret
mov
movl
jo
popa
dec
sub
jl
and
jne
inc
sbb
shll
inc
adc
shll
xchg
pop
push
out
inc
pop
jmp
jg
jo
lock
add
xor
int3
lret
loop
cmp
arpl
into
mov
pop
cmc
idivb
adc
negb
syscall
xchg
aam
cmp
jecxz
inc
xchg
push
sti
int
test
push
cmp
rcrl
adc
into
or
ja
pop
out
sub
cmpps
jmp
or
mov
jo
cld
insb
mov
dec
xchg
ljmp
dec
jo
sbb
add
fadds
es
xor
orb
pop
or
lcall
sbb
fbld
call
in
out
push
adc
movsl
or
fcmovnu
xchg
mov
out
bound
sbb
adc
test
jns
lods
pop
scas
je
fwait
outsl
jnp
aas
and
lret
and
mov
xchg
sbb
mov
cmp
inc
and
push
mov
fisttps
pop
fldl
dec
fs
push
sub
scas
sbb
sar
ret
imulb
inc
inc
leave
dec
cmp
cmp
xchg
divb
or
insb
mov
out
mov
leave
sub
fildl
imul
jbe
lods
pop
cmp
or
outsb
inc
mov
cmp
push
or
insb
into
aad
subl
mov
pop
lret
loopne
insb
push
loop
sbb
and
xorl
push
test
in
inc
xchg
xchg
out
push
pop
xchg
popf
popf
leave
into
xchg
jmp
out
je
mov
hlt
dec
xlat
in
stc
stos
xchg
shlb
mov
xchg
xchg
std
std
xor
mov
scas
call
sbb
or
pop
shrl
pop
loope
push
fldt
push
pop
test
aam
mov
add
lock
or
sub
in
mov
lret
not
adc
xor
ret
sahf
shlb
popf
nop
jg
bnd
out
mov
xor
xchg
lods
xor
and
out
pop
les
and
or
lds
xor
inc
adc
mov
dec
cmc
fneni(8087
add
mov
hlt
push
out
xor
shrl
shll
stos
add
xlat
lods
dec
sub
inc
lahf
adc
cs
pop
std
jp
cmpsb
repz
data16
cwtl
push
aam
adc
dec
repz
nop
js
jmp
out
cmp
hlt
jmp
xchg
inc
ret
cmp
and
jecxz
aaa
pop
inc
jo
std
mov
mov
xchg
mov
out
or
mov
stc
idivb
sub
mov
or
or
pop
pop
mov
lock
dec
xchg
bound
sub
adc
inc
lret
or
and
cld
xchg
ljmp
push
test
addr16
push
push
sbb
mov
ss
push
leave
xchg
and
adc
mov
repnz
fcmovu
mov
lods
push
jge
fildll
or
sbb
jnp
and
das
dec
cld
mov
sti
leave
mov
mulb
pop
clc
mov
dec
pop
test
add
add
imul
push
add
and
into
push
xor
inc
and
paddsb
or
pop
lret
adc
icebp
clc
xor
ss
jbe
stos
xchg
mov
jecxz
or
in
test
push
xchg
movsb
xchg
add
jl
add
loopne
gs
jmp
les
repz
and
mov
pop
xchg
aad
add
repnz
pusha
cli
and
gs
out
xlat
loope
adc
cmp
in
inc
adc
insb
cmc
loop
leave
and
jl
add
sti
cmp
mov
jmp
stos
mov
div
fildl
divb
stos
sub
xchg
xchg
inc
imul
jo
outsl
mov
sub
mov
push
dec
out
dec
mov
stc
rorb
arpl
mov
pop
sbb
sub
sub
add
inc
es
push
lea
xchg
mov
xchg
and
test
dec
dec
fisttpll
jle
ret
inc
jo
bound
ljmp
daa
jo
xchg
lock
pop
jl
pop
sub
and
jae
fisttpll
and
mov
insb
lods
jmp
lret
jbe
dec
mov
addr16
jge
rorl
clc
cmc
and
or
mov
stos
hlt
or
jne
push
pop
mov
fsubp
addr16
scas
cld
push
and
shrl
adc
mov
out
mov
push
cmp
js
jne
jp
call
push
sbb
lcall
lods
mov
adc
dec
cli
into
and
fbld
mov
arpl
imul
dec
mov
cmp
or
and
xor
in
pop
int3
dec
lods
ss
sub
xlat
xlat
add
or
ljmp
sbb
jae
mov
or
cwtl
call
inc
sti
sbb
mov
or
mov
jmp
push
pop
dec
pushf
je
leave
sbb
in
xor
mov
dec
loope
out
enter
stos
cmp
or
and
arpl
bound
pop
or
and
ret
sub
push
out
xor
cmpsb
push
into
push
xorb
inc
xor
jnp
gs
sti
aad
enter
inc
pusha
mov
sbb
scas
sbb
inc
inc
xor
mov
popa
mov
fidivrs
icebp
jb
pop
inc
mov
shl
jmp
cmpsl
or
cltd
mov
adc
add
scas
ret
and
out
jl
or
xor
mov
in
inc
jecxz
clc
jp
fisttpll
inc
push
xlat
std
mov
rcrl
inc
test
out
cmp
cld
fwait
int
scas
fists
lds
xor
scas
and
push
adc
and
sarb
fst
xchg
in
aad
xor
mov
inc
into
add
push
fwait
es
jge
int3
lcall
jmp
inc
jl
je
push
lcall
sbb
sub
lret
sbb
dec
mov
mov
xor
cli
pop
ror
aaa
add
rcll
cmp
sarb
movsb
mov
sub
cmp
and
loop
pop
lret
xor
cwtl
stc
mov
jl
pop
mov
fnstcw
dec
mov
cmp
ss
ss
sbb
mov
inc
xor
push
push
add
inc
test
mov
and
xchg
sbb
lock
xchg
dec
xchg
jmp
lods
push
in
jp
sbb
and
loopne
add
and
xchg
push
or
mov
mov
jecxz
inc
xor
mov
loop
rcrb
jns
subb
mov
sub
addr16
pop
add
jbe
or
dec
mov
int
jno
cs
pop
ficoml
das
fisubl
repz
gs
xchg
xchg
cmp
loop
inc
mov
clc
mov
bound
cmc
loope
adc
mov
or
ljmp
bound
aam
jbe
push
sbb
mov
cmc
pop
push
dec
push
shl
dec
sbb
cmp
mov
js
push
mov
dec
jb
sub
data16
mov
test
std
bound
sarl
hlt
pop
mov
or
repz
ljmp
fdiv
scas
aad
jl
and
jae
sbb
jmp
xor
pusha
jne
test
mov
repnz
dec
jb
loop
mov
cmp
stos
ror
add
xlat
xchg
mov
push
sbb
imul
mov
add
jo
mov
insl
sbb
loopne
jl
lods
nop
push
or
pop
mov
lods
mov
mov
ljmp
mov
aam
ss
call
data16
adc
mov
mov
aad
xor
jo
sbb
fnstsw
mov
fdivrl
add
jnp
sub
mov
xor
ljmp
jmp
mov
inc
mov
lock
or
fnstenv
jge
xor
adc
dec
es
push
inc
xchg
call
mull
push
fbstp
int3
mov
xor
test
pusha
lcall
pop
inc
sbb
mov
xor
scas
lods
rclb
xor
or
mov
jns
bswap
xchg
lret
pop
xchg
call
in
ljmp
pop
inc
add
push
bound
pop
mov
outsb
push
pop
push
andb
sub
orl
shr
les
outsl
cmp
cmp
mov
jns
jecxz
daa
xchg
push
loopne
lret
rolb
or
movsl
ss
cmpsl
ror
cmpb
adc
fcom
into
jne
in
adc
pop
or
shl
sbb
lahf
adc
xchg
loope
jl
sub
inc
int3
mov
lret
mov
in
pop
pushf
ret
clc
mov
cwtl
push
pop
arpl
test
inc
pushf
daa
sub
es
pop
push
fs
xor
push
pusha
in
pop
cmovno
movsb
stc
aad
out
ret
aad
add
cmpsl
aam
xor
mov
pop
pop
out
pop
pop
mov
call
std
sbb
lahf
ja
xchg
xor
push
lock
and
sbb
sbb
lods
and
inc
aam
jbe
popa
mov
inc
rcll
scas
ljmp
sub
aad
jns
adc
push
shl
sbb
jl
lahf
mov
cmp
shrb
test
lods
jb
xor
test
incl
lock
cld
cs
daa
lret
pop
ljmp
arpl
push
das
movl
mov
cmp
and
movsb
cmp
jae
mov
or
loopne
add
popa
xor
sub
dec
cld
mov
xchg
jb
divl
pop
push
iret
pop
add
mov
or
cli
xchg
cs
pusha
push
in
cmp
sahf
notb
pop
scas
cmp
in
in
shlb
push
lret
out
stos
loope
add
test
cmp
ror
push
scas
cmpsb
mov
aad
popa
xor
inc
sbb
mov
lods
clc
jae
jmp
fwait
lahf
insl
jl
cmp
shrb
shll
scas
adc
and
arpl
push
pop
sbb
mov
jmp
out
inc
mov
pop
stos
hlt
mov
or
jae
in
mov
iret
inc
jecxz
and
xchg
push
push
fwait
pop
fisubrl
aaa
push
mov
push
push
or
pop
xchg
push
adcl
fwait
xchg
sub
lahf
or
lahf
cld
enter
dec
cltd
cmp
sub
xchg
sbbl
dec
mov
adc
mov
popf
mov
sub
int3
mov
adc
adcl
jns
insb
and
mov
jae
mov
jb
sub
adc
mov
dec
push
test
lods
repz
pop
nop
test
cmp
jno
sbb
cwtl
xchg
xor
shrb
lret
dec
lahf
adc
sbb
adc
mov
sub
mov
out
and
sbb
push
clc
nop
pop
adc
sti
hlt
inc
leave
es
out
xor
dec
hlt
sti
std
stos
push
xchg
aad
or
nop
cmpsl
mov
add
insb
ds
inc
inc
pusha
xor
jno
xorb
inc
imul
test
xchg
add
mov
shr
shrb
js
sbb
ficomps
jbe
or
mov
das
mov
in
xor
lret
cmp
sub
fimull
and
inc
and
syscall
and
mov
dec
pop
call
test
iret
sub
xor
cs
pop
xor
and
ret
mov
xchg
ja
xor
dec
pop
jmp
incb
jge
pop
xor
inc
mov
scas
mov
repnz
or
cld
add
test
popf
lds
pop
mov
jno
jno
mov
mov
inc
bnd
inc
add
cltd
mov
push
xlat
dec
mov
inc
test
push
sub
mov
pop
cmp
or
xor
adc
aam
mov
mov
add
add
out
das
xchg
mov
outsb
push
sbb
dec
pop
xchg
dec
dec
fwait
test
rcr
mov
neg
add
fcomps
ljmp
repnz
dec
in
loop
addb
xchg
lock
jnp
loopne
out
cmpsl
mov
cmpsl
cmp
xchg
popa
mov
inc
mov
mov
dec
fs
mov
dec
scas
fcomps
jle
dec
clc
nop
pop
mov
sbb
push
stos
inc
jmp
sub
das
xchg
add
and
xlat
cwtl
mov
loope
js
bound
imul
and
pop
les
pop
fldcw
loopne
mov
lcall
cmc
movswl
sub
pop
xor
out
xchg
insb
mov
sahf
cmpsb
dec
xchg
inc
jge
stos
cwtl
lret
cs
rorb
fisttps
mov
popa
ret
mov
jne
jecxz
jne
insl
incb
adc
imul
jne
enter
adc
adc
pop
cmpl
push
cmp
adc
sbb
popf
jno
out
and
shrb
jle
clc
jno
mov
sarb
lods
pop
nop
and
repnz
and
arpl
jnp
pusha
adc
das
movsb
out
and
addr16
ret
cmc
adc
lret
leave
sub
filds
jle
add
sub
call
jl
jae
jp
mov
out
xorl
xchg
add
xchg
scas
lret
sub
inc
jae
mov
leave
sbb
sub
in
js
test
movsl
and
cmp
test
sub
push
pop
dec
inc
lea
stos
or
mov
shrl
pop
les
sahf
jb
inc
fcomp
clc
cs
sub
test
mov
sbb
pop
jb
inc
repz
mov
repz
leave
cmp
jecxz
in
aam
push
mov
mov
xor
cli
fsubl
jp
test
daa
fcompp
cmpsb
and
dec
call
push
outsb
dec
adc
fnstsw
mov
and
jle
lea
pushf
push
fwait
dec
ds
push
cmpsl
test
cwtl
xlat
xchg
pushl
ret
sbb
xchg
in
daa
push
aad
xor
sbb
fwait
loope
or
mov
or
popa
pop
lods
mov
mov
fcmovnu
sub
daa
das
out
les
les
or
mov
add
lahf
sbb
repnz
push
pop
test
cmp
inc
ja
push
cmp
pop
push
sbb
in
pop
jae
ds
icebp
sub
cltd
mov
mov
mov
outsl
out
sub
cmp
je
mov
jb
add
cmp
mov
ljmp
adc
push
lods
push
jecxz
pop
lret
inc
movsb
xchg
aaa
pop
fsincos
stc
stos
fldcw
and
push
out
sahf
and
pop
stc
les
test
inc
ss
xchg
or
push
mov
bound
fwait
xor
push
ds
lahf
xor
cmp
sbb
push
sahf
mov
in
ss
adc
inc
idivl
inc
loope
sub
mov
xor
cmp
in
xor
jge
jle
xchg
fcmovnb
ret
rorb
add
addb
cmpsb
jl
push
pop
xlat
subl
add
popf
sub
daa
or
popf
das
cmp
add
ret
sub
pop
jecxz
or
mov
mov
jnp
sub
push
jmp
cmp
cwtl
daa
test
data16
push
dec
cmpsb
in
aaa
fldcw
and
cmp
pop
sbb
sbb
mov
xchg
push
loopne
push
cs
sar
testl
push
mov
movsb
sub
cwtl
test
dec
cmpsl
xchg
pop
fsts
cmpsb
jmp
inc
insb
mov
push
sti
xchg
push
sbb
insb
ja
arpl
xchg
cmc
sub
dec
test
fimuls
out
xor
mov
lahf
cmpb
xor
in
add
loope
mov
xor
fwait
xchg
jl
movsb
cmp
rclb
xchg
xorb
adc
addl
xor
and
mov
scas
jecxz
inc
out
push
test
gs
ret
mov
cli
dec
out
pop
mov
js
adc
sbb
adc
or
daa
push
rolb
sub
and
push
xchg
sub
incl
cmp
test
aaa
pusha
add
and
out
je
xchg
push
das
enter
popa
mov
das
cmp
std
fsubp
popf
xor
shl
inc
lods
jne
add
outsl
push
insl
inc
dec
insl
aam
orb
popf
repz
sub
dec
pushf
xchg
loope
mov
or
adc
or
hlt
sbb
je
mov
sahf
push
pop
lcall
and
cld
add
mov
es
bswap
addr16
rorb
adcb
loop
pushf
and
lock
jb
push
jp
sbb
gs
push
insb
cltd
or
jns
mov
inc
mov
sti
and
pop
dec
push
dec
dec
pop
cmp
scas
pushf
pop
outsb
in
scas
push
add
stos
call
ficompl
daa
xchg
mov
pushf
cli
test
inc
in
adc
jns
pop
sub
das
inc
mov
add
pop
cli
add
push
leave
cmp
xchg
add
sub
inc
jnp
pop
jb
out
lret
mov
add
out
jo
push
jnp
add
sbb
mov
lcall
test
jne
test
sbb
jns
adc
pusha
mov
mov
sbbb
pop
sbb
test
cmp
inc
pop
push
adc
cli
arpl
sub
cmp
mov
and
dec
jno
leave
xchg
or
outsb
in
sub
cmpsl
lret
scas
cmp
dec
xor
outsl
mov
std
out
rcrb
loopne
test
xchg
popa
rolb
flds
mov
imul
ja
fs
jmp
int3
insb
push
pop
subb
and
lock
scas
sub
fstpt
cli
ret
daa
push
or
lret
xor
test
in
cmp
ficoml
dec
adc
cli
testl
jb
adc
add
std
xchg
sbb
cwtl
test
push
int3
cli
aad
mov
ret
mov
test
inc
loope
add
scas
or
into
scas
outsl
mov
push
mov
pop
outsb
push
aas
jae
mov
cmpsb
sbb
adc
cmpsl
stc
std
xor
xor
mov
pushl
sbb
mov
iret
loope
ds
ds
mov
mov
pop
outsb
scas
pop
shrl
adcl
dec
subb
jmp
ret
fsubrl
dec
adc
cmpsb
ljmp
pop
pop
rcl
sbb
pop
mul
mov
xchg
mov
sbb
mov
cmp
mov
pop
mov
dec
mov
jno
jp
inc
mov
jnp
fcompl
dec
push
int
loop
scas
add
jmp
movsl
xor
xorl
in
mov
push
cmpsl
dec
xchg
add
or
mov
shr
sub
ss
add
cltd
mov
cltd
lock
mov
std
jge
sbb
jecxz
insb
mov
mov
push
and
pop
add
xchg
adc
outsl
mov
pop
cld
loop
sbb
jnp
xlat
icebp
push
ds
or
sahf
mov
adc
xchg
repnz
enter
sti
out
dec
inc
insb
aad
inc
adc
cmp
add
ret
pop
pop
ret
lcall
je
xchg
data16
xor
cmp
daa
fs
jne
cmp
dec
fwait
int
mov
iret
mov
jecxz
push
stc
mov
scas
das
fimull
xor
or
pop
mov
cmp
jl
rclb
push
movsl
mov
dec
repnz
push
adcl
xor
fnsave
dec
lcall
test
xchg
or
aaa
adc
push
push
xchg
je
xchg
cmp
sahf
addr16
sub
inc
push
push
jbe
and
sbb
lods
mov
stos
add
test
test
xchg
adcl
xchg
mov
push
cmpsl
jl
sub
push
roll
out
and
jge
aad
mov
cwtl
shl
jecxz
mov
mov
mov
adc
xor
sub
lret
ss
pop
movsl
movsb
cmpsb
imul
movb
mov
sub
mov
test
mov
mov
lret
and
cwtl
mov
aas
xor
mov
aad
xchg
es
cmp
add
pop
adc
cs
jbe
inc
jnp
cs
pop
daa
sbb
rorl
lret
mov
sub
outsl
xchg
mov
addb
sub
inc
loopne
inc
mov
hlt
out
lcall
fstps
push
fs
insb
mov
scas
movsl
movsl
test
add
insl
pushf
es
or
push
icebp
jae
inc
push
fucomi
jmp
mov
popf
jp
pop
cmp
jle
inc
ss
xchg
lret
inc
jno
js,pt
push
imul
stos
jb
push
jo
leave
push
inc
scas
enter
mov
xchg
test
push
rorb
or
sbb
fwait
pop
jg
mov
or
out
mov
sub
xchg
jp
cmc
sub
sub
outsl
cmpsb
xchg
jp
and
cmc
cmp
mov
std
insb
test
vmovlps
movsb
push
scas
out
xor
lcall
push
inc
push
xor
cld
ret
push
xor
negl
std
push
sub
dec
jmp
mov
mov
test
xlat
dec
lahf
cmp
fwait
adc
data16
sti
push
cmp
jns
push
xchg
adc
enter
fnstcw
insb
mov
pop
xchg
jmp
mov
das
stc
jg
pusha
lcall
lds
sub
in
inc
hlt
std
mov
fsubp
ljmp
push
arpl
test
cmp
sahf
jmp
push
xchg
into
fwait
inc
shll
std
shlb
cmp
sub
sub
pop
stc
pop
mov
std
stos
push
les
mov
push
cmpsb
imul
jl
lods
dec
lods
cmpsl
jl
movsb
sahf
vcmpps
pop
in
pop
inc
sub
dec
add
mov
jp
imulb
shll
add
pop
js
inc
xchg
cmp
pushf
mov
lahf
xchg
mov
jle
mov
cmp
fs
fistl
rclb
fstps
jle
sahf
loop
out
rcl
mov
mov
xchg
sub
imul
or
lds
cmpsb
xchg
loopne
cmp
mov
sbb
add
mov
fistpll
pop
sbb
cmp
or
lahf
shll
and
pop
xchg
out
inc
sbb
mov
es
cwtl
fmuls
add
aam
inc
out
and
idivb
adc
cmp
aaa
daa
add
push
inc
out
adcb
jge
sub
int
insl
push
push
cmp
pop
mov
push
jb
inc
sbb
mov
les
leave
stos
mov
dec
ljmp
jae
sub
add
pop
insb
xchg
push
mov
add
in
popa
inc
dec
in
enter
mov
mov
mov
jne
mov
jnp
fs
aam
adc
loope
pop
stc
dec
jmp
mov
jbe
xchg
mov
subb
shrl
push
add
mov
fildll
mov
and
ss
xor
lea
xchg
jns
outsl
dec
imulb
fstp
xchg
pop
cmp
mov
mov
test
xchg
jne
sbb
mov
sbb
sub
rcrb
into
and
fsts
cmpsb
cs
daa
sub
inc
or
sbb
outsl
xchg
dec
xchg
lret
sarb
imul
xchg
inc
scas
andl
xchg
or
jns
mov
xchg
jae
loope
pop
mov
push
push
mov
clc
movsl
hlt
pop
mov
pop
out
dec
ss
cwtl
movsb
xchg
cmp
add
fadds
in
add
insl
fs
ret
dec
cmp
xchg
push
jle
sbb
cmp
mov
sbb
dec
pop
or
nop
mov
jge
pop
sub
or
or
mov
xchg
movsl
out
das
push
outsb
aaa
mov
pop
cltd
sub
cmp
xchg
xchg
push
dec
push
xchg
dec
jge
pop
out
pop
fimuls
inc
sub
mov
in
cmpsb
fs
cmp
leave
dec
mov
mov
sbbl
rcrb
aas
cmp
mov
leave
addr16
adc
cmp
test
and
int3
rclb
mov
bound
adc
xchg
add
stc
xor
mov
push
push
in
jb
jo
out
addr16
sbb
loope
mov
pop
or
jae
push
xor
xor
inc
fsts
jnp
mov
ds
push
outsl
sub
or
inc
sub
xor
addl
inc
pusha
dec
mov
negl
mov
hlt
scas
ja
and
adc
inc
popa
mov
aas
rorl
fidivs
push
pop
popa
in
add
sbb
shlb
xchg
rorl
in
enter
xchg
pusha
jo
rcl
inc
or
cli
leave
dec
add
in
gs
scas
add
pop
xchg
cmpsl
jecxz
inc
xor
sub
mov
aad
stc
pusha
add
hlt
sbb
and
outsb
cli
xor
movsb
mov
mov
mov
jg
lods
loopne
insb
sahf
pop
jb
inc
stos
das
lahf
push
xor
adc
aaa
dec
sub
fdivr
stos
cmp
jp
ret
adc
testb
rol
dec
xor
pop
inc
cld
jg
add
mov
andl
dec
lods
ret
fisubs
shll
mov
sbb
pop
fsubrp
mov
sbb
xchg
sarb
mov
jo
mov
inc
ret
mov
jp
in
sub
je
femms
rorl
shll
push
mov
dec
loop
loope
mov
negb
lods
les
fucomip
pop
enter
jecxz
ss
test
cli
xor
mov
out
arpl
sub
push
ficompl
mov
push
jo
aam
dec
aaa
cmp
ret
ret
xchg
aam
sbb
adc
add
les
mov
inc
or
incb
sub
push
cwtl
out
hlt
mov
mov
mov
add
das
gs
outsl
push
outsb
sub
sbb
addr16
rcrl
xchg
or
sub
into
outsl
or
shrl
dec
out
std
mov
jno
cld
sub
ret
out
dec
ret
adc
sbb
lcall
ret
lock
fdivs
fidivl
push
and
xor
rorb
jb
jg
ret
add
or
xor
jle
lea
ret
and
repz
adc
or
js
sub
jmp
push
outsb
mov
stos
push
cmpsl
ds
int
inc
push
sub
arpl
adc
xchg
add
into
mov
mov
push
mov
jne
inc
jp
cmp
jg
fcoms
adc
mov
mov
or
dec
mov
lret
jp
repnz
dec
add
adc
imul
pop
fsubrl
cld
shrl
mov
imul
cmp
cmp
cmc
xor
pushf
or
pop
xchg
lret
cmpb
cltd
inc
sub
mov
into
and
loop
arpl
sub
imul
icebp
xchg
addb
into
int
inc
ljmp
icebp
xchg
negl
xor
outsb
fldt
jnp
jl
sub
mov
mov
pop
fisubrs
imul
pop
aas
daa
dec
xchg
in
mov
sub
int
sub
xor
dec
dec
aad
mov
add
loopne
mov
repnz
jle
arpl
int3
cmp
lret
mov
mov
pop
adc
clc
mov
xor
xlat
or
fsubl
mov
hlt
idivl
xchg
lock
leave
lods
mov
lods
lods
fstpl
mov
popl
dec
lds
jnp
mov
pushf
mov
std
inc
int3
repnz
mov
mov
or
or
je
aaa
daa
push
cmpl
pop
xchg
fwait
and
lods
testl
inc
gs
or
mov
jmp
sbb
sub
pop
cmp
jne
mov
cmpsl
jmp
fs
and
outsb
xchg
outsb
pop
inc
mov
dec
mov
out
out
push
ret
stos
jecxz
mov
adc
shrl
sub
sbb
inc
jbe
aam
roll
mov
xchg
fucomp
xchg
xchg
push
adc
pop
xchg
sbb
sbb
pop
andb
push
pushf
loop
mov
inc
mov
cmp
call
mov
daa
dec
shl
pop
dec
dec
jp
lcall
xchg
sbb
mov
push
and
adc
in
sub
movsl
outsl
fistpll
pop
imul
movsl
inc
scas
shll
dec
mov
les
xchg
push
jbe
les
inc
shr
mov
jecxz
shlb
sbb
js
mov
pop
add
push
push
lahf
test
xor
sbb
inc
in
fidivrs
inc
or
iret
and
fsub
pop
cmp
xchg
repnz
sbb
cmp
cmp
mov
inc
sahf
gs
inc
aaa
xchg
or
mov
sbb
mov
divb
xchg
ficoms
add
cmp
fildll
lods
pop
jae
insw
and
jp
dec
sbb
xor
jge
clc
sbb
push
ss
mov
addr16
sti
ret
in
push
mov
addr16
inc
push
xchg
fsub
pop
sub
and
lret
mov
xchg
push
mov
das
cld
lods
jge
nop
dec
arpl
rorl
inc
jno
repz
jp
fisttps
and
or
imul
cwtl
mov
lods
int3
inc
cmp
js
and
or
imul
cltd
dec
jg
adc
dec
vpscatterdq
push
cmp
fwait
lea
loopne
dec
xchg
inc
adc
mov
pop
push
dec
or
pop
dec
sub
and
push
pushf
adc
out
fwait
or
add
mov
fdivrl
movsb
idiv
or
push
sub
dec
sbb
jbe
mov
loop
idivb
sub
cmpsb
rorb
fistpl
jne
mov
lahf
shrb
fidivrl
inc
mov
adc
movsb
ja
lahf
and
xchg
add
sbb
lret
or
xor
mulb
fadds
das
loop
std
ss
sub
push
in
fldenv
enter
outsl
icebp
add
fistl
leave
dec
add
adc
call
xor
sbbb
scas
pushf
mov
sbb
sarb
das
lret
movsb
std
nop
clc
push
mov
std
dec
mov
je
sub
mov
repz
jl
std
popfw
out
jecxz
cli
cmp
jp
in
sub
xor
push
ret
xchg
inc
sbb
lds
les
imul
mov
cli
jne
gs
shr
xchg
push
lret
es
pusha
and
sbb
enter
mov
out
sub
int
mov
adc
out
sbb
lret
popfw
bound
jo
inc
cmp
test
push
nop
sarb
dec
das
leave
dec
icebp
add
cwtl
cs
push
pop
jbe
outsb
movsb
push
ja
andl
sbb
push
lcall
std
dec
push
fwait
jecxz
inc
pop
repz
nop
ljmp
inc
in
jmp
movb
adc
pop
jno
mov
push
xor
data16
out
add
mov
enter
push
mov
sbb
arpl
hlt
repz
fnstcw
sbb
stos
fisttpl
aam
mov
outsl
imul
cmpsb
adc
or
pop
mov
jae
pop
sarl
enter
and
xor
xchg
push
cmpsl
xlat
dec
pop
fnstcw
mov
fidivl
mov
xchg
push
adc
popf
xchg
mov
jne
add
aas
pop
popf
lret
cmpl
adc
aam
push
push
xor
inc
sbb
sbb
or
mov
mov
pushf
loopne
adc
jo
inc
and
push
sbb
in
or
pop
repnz
jg
or
mov
out
adc
out
adc
outsb
add
fistl
inc
repnz
sbb
rcrb
rcr
popa
add
ss
in
hlt
hlt
cli
sarb
push
jle
and
repnz
incb
mov
cmp
movsl
aam
cmp
xchg
pop
sub
outsb
stc
sbb
mov
adc
xchg
sti
lea
sub
jge
inc
daa
jge
in
adc
das
aad
cs
fdivl
add
cmp
aaa
pop
inc
decb
cmp
ds
sub
or
repnz
call
and
mov
inc
push
mov
pusha
movsb
lret
sub
fmull
psubsb
movsl
scas
into
sub
nop
xlat
jne
cmp
sbb
xchg
call
mov
shl
cmp
frstor
notb
sti
cmp
rcrl
jl
pop
pop
movsb
clc
pop
xor
addr16
cmp
inc
loop
or
mov
aam
popa
data16
push
ret
inc
or
shl
sbb
shr
fs
mov
sbb
cmpsb
mov
fcoml
pop
add
imul
fiadds
push
clc
lds
sub
das
or
sbb
mov
in
add
xor
fbld
cmc
adc
jecxz
inc
ret
pop
in
xchg
out
icebp
lock
xlat
add
testb
sbb
loopne
inc
and
negb
mov
in
push
js
mov
ret
out
into
push
mov
or
aas
imul
dec
push
mov
xchg
push
jb
jecxz
inc
movsb
clc
aam
test
cmpsl
lock
mov
aas
xor
lcall
lcall
std
push
jno
lret
gs
sarb
cmp
cli
lcall
lret
dec
jmp
repz
inc
sbbl
and
int3
xlat
mov
sub
cmp
xlat
jb
xchg
cmp
sbb
in
ret
and
xor
movsl
jns
inc
out
fbstp
mov
les
in
fmul
push
mov
leave
test
fdivs
xchg
test
scas
xor
sub
mov
call
cld
cld
pop
push
push
xchg
jbe
lock
pop
push
nop
pop
ficoms
mov
fcomps
neg
clc
fsubs
mov
mov
lods
mov
mov
jp
test
or
adc
cmp
mov
cmp
and
inc
jnp
pushf
jg
or
jne
sbbl
pop
lea
loopne
das
jmp
jo
cmpsb
scas
push
cmp
adc
push
les
movsl
mov
mov
scas
push
aam
shl
or
pop
aaa
cmp
loop
xor
or
lods
jmp
ss
in
int3
push
and
push
aam
cmp
mov
jnp
out
stc
movsl
add
inc
and
jno
fisubrl
mov
sahf
ret
aaa
jmp
adc
ds
and
shlb
adc
mov
jbe
jbe,pt
push
sahf
subl
nop
icebp
fcmovbe
and
icebp
lret
loopne
adcl
movsb
fsubs
imul
ja
xchg
push
rcrl
mov
outsb
jae
cmc
mov
shll
adc
push
jecxz
call
xor
and
iret
loope
sbb
push
push
cltd
or
dec
push
imul
cwtl
jae
dec
das
pop
mov
rorb
or
cld
fdivrs
push
mov
jmp
mov
cmp
scas
mov
xchg
pop
fwait
das
sub
jmp
push
dec
xchg
lret
fucomip
popf
pop
ss
out
shr
add
inc
clc
sbb
jl
add
mov
push
mov
mov
test
rorb
cmp
data16
cmc
dec
sbb
aam
sub
hlt
in
mul
cmpsl
dec
shrl
lahf
cmp
add
aaa
lahf
enter
mov
icebp
jmp
fdivp
ss
das
cmp
pop
xchg
push
div
arpl
mov
inc
adc
jnp
sub
enter
xchg
jnp
xor
nop
sub
add
fs
roll
inc
imul
sbb
aam
sahf
jp
xor
cmpb
mov
sbb
bound
ds
setl
dec
outsb
mov
mov
insb
nop
mov
jmp
pop
add
mov
mov
adc
clc
testl
fwait
jmp
gs
cwtl
hlt
xchg
add
fbstp
and
ficomps
sbb
lock
mov
add
mov
xchg
test
jp
jae
xchg
outsl
aaa
xchg
arpl
fsubp
xchg
into
pop
pop
mov
dec
xchg
xchg
fwait
push
add
popa
xchg
dec
iret
inc
mov
ja
adc
stc
test
flds
out
dec
iret
iret
fstenv
xor
pop
mov
test
sti
bound
movsb
insb
inc
xor
insb
mov
loop
and
push
sbb
dec
sti
iret
push
scas
scas
push
in
add
je
cmp
dec
das
adc
imul
and
arpl
test
inc
mov
jo
pop
lcall
rolb
and
mov
or
fstpl
adc
inc
dec
std
out
mov
vphaddubd
mov
or
aas
and
call
and
imul
add
imulb
push
lea
mov
cmp
hlt
and
lret
xchg
jle
fistps
push
jne
xchg
add
lock
das
jl
cmp
mov
cli
repz
in
add
jae
out
or
rcrb
fwait
jmp
cmp
test
sbb
int3
cmp
pop
das
cmp
nop
flds
pop
das
jle
add
pop
cltd
insl
movsb
out
pop
jmp
mov
stos
cmp
test
adc
adc
xor
sarb
xorb
jle
cmp
popf
fxtract
lds
inc
cmpsb
push
fsubl
mov
arpl
sbb
daa
movsb
jne
lea
pop
jp
sub
push
jg
pop
jb
es
lahf
xlat
cmp
stc
cwtl
push
adc
clc
bound
mov
sbb
push
cmpsl
adcb
lret
imul
in
sbbl
sbb
jge
sbb
fidivs
rorb
mov
push
inc
inc
inc
xchg
in
sbb
adc
sub
mov
mov
dec
pop
out
ljmp
inc
into
mov
inc
das
lret
add
inc
and
pop
sub
dec
loopne
push
cli
loop
enter
cli
mov
add
adc
mov
or
sub
xor
mov
push
cltd
mov
lds
shll
inc
imul
into
inc
pop
mov
fimuls
ja
rcrl
dec
cli
lcall
adc
xchg
mov
jnp
arpl
aam
and
loop
cs
push
mov
fdivr
fistpl
pop
rcr
push
jg
mov
loop
pusha
mov
mov
pop
adc
repnz
mov
jbe
inc
push
mov
push
mov
mov
push
dec
pop
out
mov
fs
scas
dec
stos
dec
andb
jno
es
shlb
ret
scas
hlt
adc
or
mov
leave
test
push
push
dec
mov
mov
sbb
outsl
mov
add
cltd
aad
cmp
sub
lods
jge
and
add
lret
pop
andps
push
push
cmpsl
xchg
jge
xchg
popf
dec
cmp
sti
jp
shrl
xor
ja
lock
jno
lock
mov
push
mov
insl
mov
inc
outsb
sub
cli
ljmp
lret
xor
into
iret
repnz
mov
ja
pop
jecxz
sti
cmpsl
mov
and
das
lock
and
stos
mov
pop
add
or
push
push
inc
mov
pop
pop
mov
test
mov
nop
xlat
fs
loop
mov
aam
clc
cltd
adc
xchg
mov
mov
push
ja
fstp
fstl
and
add
or
cmp
in
popa
and
xor
inc
pop
xor
cmc
and
xchg
incl
addb
jg,pn
dec
cmp
dec
nop
mov
cmp
pusha
inc
jl
and
xchg
adc
sidtl
add
push
adc
loope
pushf
inc
not
repz
sti
jo
adc
lods
sbb
lea
cmp
loope
out
add
inc
sbb
sti
cs
jp
jnp
jmp
stos
fisttpll
inc
jns,pt
lods
lret
push
mov
clc
cmp
xchg
xor
push
lock
negl
cmpsb
fdivrp
mov
pop
mov
inc
fdivl
dec
mov
pop
aaa
fildll
fmuls
jecxz
and
jb
fsubl
pushf
cmp
add
mov
sub
shlb
adc
cmp
repz
jecxz
cld
or
inc
movsb
sbb
pop
cmp
cmp
into
cmc
stc
lahf
mov
mov
sbb
ret
popl
sub
movsb
negl
jne
cltd
push
fcoml
add
cmpl
jbe
jecxz
in
mov
test
adc
add
sti
xchg
sbb
in
mov
pop
sti
push
fiadds
fcmovne
jle
push
push
ds
enter
lds
push
loopne
fmuls
pusha
jne
or
leave
push
jbe
orb
fstp
cmc
bound
add
insl
and
loop
jns
sbb
or
loop
icebp
lret
mov
cld
and
mov
stos
cmc
lods
mov
dec
push
mov
clc
int
sub
enter
cwtl
xchg
lods
push
repz
notl
xchg
adcb
dec
mov
nop
mov
sbbb
fwait
cwtl
loopne
mov
mov
call
mov
mov
xor
dec
xchg
pusha
fsubl
lret
or
xor
out
ss
dec
mov
pop
test
cmp
leave
pop
lods
aaa
xor
bound
lcall
lea
push
out
test
pop
pusha
mov
out
out
js
lods
mov
sub
cmp
dec
mov
or
or
jb
out
in
pushf
addr16
cwtl
pushf
mov
sub
adc
shr
mov
inc
daa
lret
push
and
sub
and
int3
mov
jmp
repnz
jmp
mov
push
pop
xor
dec
sub
mov
test
insb
movsl
mov
xor
xor
inc
adc
stc
test
ret
addb
add
adc
call
inc
xor
data16
sub
call
xchg
aas
dec
shll
jb
mov
and
push
xor
into
cwtl
or
xchg
cbtw
stos
gs
addr16
dec
and
sub
mov
cmp
daa
mov
dec
push
insl
mov
sbb
test
lret
jl
pop
xchg
dec
dec
push
mov
in
and
jae
pop
nop
push
les
or
fidivrs
xchg
mov
clc
dec
and
cltd
xor
pop
xchg
iret
inc
leave
daa
or
mov
cmp
mov
rorb
in
hlt
out
out
ficoml
call
test
fs
cmp
test
insl
xchg
shrl
sub
test
into
scas
es
fisttps
pop
testl
push
mov
xchg
mov
out
stc
movsl
leave
cmp
pop
xchg
mov
aas
scas
sbb
jge
fildl
mov
mov
jb
arpl
outsb
push
imul
or
imul
fimuls
decl
push
and
in
test
ja
divb
xor
sub
mov
sbb
and
aam
mov
cltd
je
mov
pop
mov
xor
cwtl
lea
inc
mov
fsts
test
xchg
out
ds
xor
mov
mov
xchg
rorb
add
or
stos
cmc
sar
jecxz
fnsave
fsubr
jmp
lcall
sub
jp
stos
mov
adc
in
nop
cmpsb
fdiv
add
stos
fidivl
inc
icebp
andl
xchg
mov
pop
xor
push
jno
mov
mov
ret
mov
mov
mov
cld
cmpsl
rol
fstps
and
mov
fmuls
js
cs
jno
mov
gs
callw
xchg
lahf
shlb
adc
lods
pop
mov
or
push
push
mov
movsb
mov
cmp
into
sbb
pop
cmp
shrb
adc
mov
js
int
mov
nop
mov
sub
in
jmp
stc
cmp
mov
into
cmp
dec
sub
mov
cmp
dec
mov
mov
mov
fbld
dec
pop
je
inc
mov
push
ljmp
int
xchg
jmp
rol
lea
adc
jp
cmc
sahf
pusha
sbb
insb
cmp
dec
jo
int3
mov
mul
popf
je
sbb
push
push
inc
push
sub
adc
inc
jmp
push
in
movsb
and
imul
pop
ja
add
adc
push
aas
daa
std
in
adc
pop
loopne
lret
sbb
stos
cld
sub
negb
fwait
stc
and
dec
mov
shrl
test
lods
jo
lea
add
ja
movsb
out
hlt
in
pop
xor
pop
ds
out
push
scas
mov
xchg
pop
mov
xlat
hlt
adc
jmp
sub
pop
xchg
imul
popa
in
or
std
mov
jmp
fst
loop
sbb
push
sub
bound
lds
adc
imul
out
dec
jno
add
mov
rcll
cmp
mov
xor
and
js
imul
enter
enter
bound
sbb
and
xor
sbb
ret
push
push
mov
cmp
xor
dec
add
movsl
and
int3
xchg
lahf
mov
shlb
in
push
orl
xchg
jo
outsl
aad
xor
and
jne
les
jecxz
lret
and
or
and
jne
sub
fsubl
jp
cmpsl
inc
daa
adc
xorl
jns
aad
mov
lcall
or
ret
xchg
push
or
push
icebp
lds
push
adc
aad
push
mov
mov
or
jge,pt
int3
ret
js,pn
add
mov
mov
mov
rcl
imul
xor
aas
test
sub
jmp
adc
pop
lret
jl
dec
pop
push
xchg
sub
push
fiadds
daa
ja
mov
pop
adc
jle
pop
rolb
push
lods
arpl
pushf
lcall
fldt
sahf
dec
mov
std
adc
adc
xchg
push
andb
div
clc
test
push
std
or
lods
fs
jb
mov
mov
es
and
clc
scas
addb
movsl
les
test
sub
xchg
aad
lea
or
sub
mov
test
stos
test
rclb
fisubrl
jle
imul
pop
sti
movsb
loopne
movsb
fisttpl
pop
iret
imul
push
jmp
enter
add
loop
xchg
push
jp
mov
mov
add
pop
fsubl
sub
cmp
out
shlb
adc
repz
mov
hlt
fdivl
dec
ds
imul
dec
popa
lahf
sub
adc
xchg
adc
pusha
add
dec
scas
mov
cmp
aaa
insl
inc
outsl
push
loopne,pt
repnz
cli
and
test
push
mov
inc
add
mov
mov
push
push
std
sbb
into
dec
sbb
inc
or
inc
xchg
jmp
sarl
shl
cmp
fwait
jb
fimull
sti
or
cmp
fcompl
mov
orb
add
cmpsb
dec
push
repnz
stos
mov
jp
push
pusha
sbb
dec
dec
mov
jg
push
repnz
rcrl
xchg
sub
xor
add
loop
or
cmp
rolb
mov
push
sarb
fscale
test
int3
lods
imul
mov
cli
ds
adc
lock
decl
out
dec
and
mov
movsb
add
ss
push
pop
inc
pop
jmp
outsl
rcrl
dec
add
out
dec
xchg
cmpsl
scas
hlt
xlat
insl
arpl
hlt
out
pop
sub
mov
jge
fsubr
lods
sub
push
push
jnp
and
dec
test
add
mov
and
das
and
outsl
pusha
inc
cld
and
mov
pop
mov
gs
and
push
push
lods
pop
fsubrs
inc
jge
lds
jle
sbb
fs
push
insb
mov
lds
dec
daa
aam
lods
mov
data16
in
movups
sub
div
out
leave
pop
lret
or
lods
lea
scas
cmp
lcall
xchg
test
enter
push
mov
fucom
mov
int3
ret
scas
dec
int3
mov
repz
push
or
cmp
mov
sbbl
lods
fisttps
icebp
add
sub
sbb
mov
or
dec
adc
xlat
mov
dec
mov
mov
iret
sub
adc
sbb
aas
test
jg
inc
dec
mov
sub
jne
in
loope
xchg
idivl
push
sbb
inc
and
sti
subb
mov
cmp
adc
push
cmp
sarl
pop
scas
cmp
mov
sbb
sbb
cli
std
loope
fcomi
stos
jmp
pop
jmp
push
imul
pushf
xchg
jecxz
push
les
mov
scas
add
vcvtss2sd
rcrb
push
mov
shll
ja
dec
sub
stos
cmp
sbb
sub
movsb
rcl
clc
push
jge
jne
mov
dec
vphsubdq
imul
loope
bound
mov
and
dec
imul
jle
into
adc
sarl
cs
push
cmc
rcrl
imul
pop
mov
mov
js
push
decl
and
popa
push
outsl
push
or
loop
test
mov
push
jo
push
sbb
icebp
xor
pop
int3
or
faddl
and
inc
scas
sbb
mov
fiadds
mov
lcall
in
adc
sahf
dec
aaa
or
ret
icebp
xor
jno
ud0
mov
int3
in
and
mov
mov
push
push
cwtl
sahf
or
lret
stos
fldt
mov
pop
loope
xchg
xchg
add
sbb
daa
mov
mov
popa
outsb
leave
push
adc
mov
xlat
cmp
roll
sub
pop
pop
sub
inc
push
lock
push
hlt
pop
sbb
lahf
adc
jno
sub
fmull
in
out
and
test
pop
outsl
pop
sti
loop
call
outsb
test
pusha
out
das
int3
jo
arpl
or
test
push
sar
mov
lods
movsb
scas
ja
addb
pushf
cmp
popa
sbb
lahf
hlt
ss
mov
arpl
ret
mov
sti
xlat
movsb
in
push
loope
repnz
leave
or
jae
aaa
mov
mov
jbe
inc
out
dec
imul
dec
push
inc
data16
rcr
xor
nop
test
xor
push
mov
pop
inc
inc
mov
mov
pop
inc
movsb
stc
jne
dec
frstor
jle
jae
sbb
xor
mov
and
out
popa
scas
push
repz
push
mov
jns
iret
adc
mov
sbb
add
push
mov
inc
imul
sbb
xlat
jo
stos
fistpll
push
dec
lret
lret
insb
pop
jb
in
aam
mov
jge
jmp
jle
sbb
daa
test
adc
ds
adc
ror
add
out
inc
jle
or
imul
lock
inc
xchg
pop
dec
shll
jmp
jns
arpl
dec
inc
gs
aas
jo,pn
out
jg
add
adc
inc
aas
jg
inc
sti
jmp
fimull
div
push
push
pop
xchg
sub
or
cli
pop
jae
js
outsb
mov
repz
push
mov
loopne
sbb
movsb
jo
loop
icebp
push
mov
cmp
pop
xor
mov
sar
je
and
jecxz
iret
arpl
sahf
xchg
jae
in
mov
rcrb
dec
xor
int
inc
xchg
add
dec
std
pushf
jne
jb
pop
and
stos
imul
pop
mov
jp
inc
mov
stc
push
and
cli
xchg
mov
sti
lret
pop
pop
popa
stos
sahf
mov
iret
adc
data16
mov
and
add
stos
push
or
loopne
daa
out
aad
hlt
fwait
testb
dec
les
mulb
jp
pop
fisubrs
lret
enter
pop
sub
fisttpl
xor
dec
repnz
int
sub
pop
sbb
adc
and
and
mov
je
and
outsl
imul
jns
adc
repnz
ljmp
push
jb
push
push
shll
push
es
je
sub
daa
lahf
pop
push
clc
jb
outsl
push
pop
cmpb
mov
adc
lret
and
clc
jne
push
lret
test
rcll
mov
push
mov
ret
out
xor
jle
mov
sbb
stos
imul
aaa
dec
pop
sub
xchg
das
pop
out
icebp
jp
mov
les
inc
pop
int3
add
or
add
push
cmp
mov
pop
lods
inc
test
mov
rol
lret
ljmp
outsb
push
mov
loop
decb
nop
mov
jmp
sub
dec
out
mov
or
jne
mov
push
xchg
ss
in
sbb
sarb
jo
inc
loope
shlb
pusha
push
fpatan
cltd
dec
jbe
outsb
jle
fldl
cs
mov
mov
jecxz
or
scas
cli
sub
dec
loop
pusha
sbb
stos
in
lea
add
dec
add
jo
cmpb
sar
inc
repz
out
or
dec
add
test
jnp
mov
sub
out
mov
dec
insb
loop
pop
movsl
punpcklbw
push
push
mov
adc
add
inc
push
out
jl
mov
xchg
pop
inc
xchg
adc
js
adc
mov
inc
push
cmp
jbe
xchg
aam
stc
push
add
mov
xchg
jb
xor
or
mov
push
dec
iret
push
fimuls
pop
pop
jo
mov
sub
and
call
mov
jno
outsb
xchg
add
sbb
pop
mov
jp
imul
inc
add
dec
or
cli
cmpb
push
les
xchg
cmp
mov
add
sarl
call
jno
add
fwait
inc
and
sbb
lret
daa
add
in
pop
xchg
pop
stc
xchg
outsl
subl
mov
loopne
sub
divb
jp
xor
ret
xchg
aam
lock
test
gs
sbb
cmp
xor
loopne
rorb
jbe
loopne
popa
pop
arpl
es
pop
jp
adcl
pop
popa
fadd
push
mov
insl
mov
mov
lahf
add
xor
xor
fwait
push
addl
js
movsl
ret
xchg
icebp
loope
lods
nop
ficoms
or
sub
icebp
cmp
sub
test
flds
stc
or
cwtl
out
push
and
mov
mov
imulb
cmp
mov
push
sub
adc
inc
jnp
push
lock
mov
or
jge
inc
push
adc
fs
lret
xchg
icebp
cltd
mov
inc
test
mov
cmp
mov
outsl
sub
rol
sbb
or
out
in
data16
jecxz
mov
mov
xchg
lahf
add
stos
sbb
pop
inc
data16
jno
test
jbe
pop
inc
addr16
jns
movsl
filds
out
leave
lea
stos
pop
leave
fwait
dec
push
out
xorl
adc
and
xorb
adc
mov
cmpsl
stc
add
loop
push
in
stos
lods
cmp
test
outsl
adc
adc
mov
es
je
pusha
dec
stc
repnz
xor
push
outsl
inc
andl
xchg
sahf
cltd
mov
xor
sbb
dec
cmp
xchg
and
mov
daa
icebp
ljmp
out
xlat
repnz
loopne
pushf
jp
cs
dec
sbb
aas
std
scas
xorl
add
aas
mov
xchg
jnp
xchg
movsl
jnp
xor
mov
xor
push
sub
xchg
inc
push
adc
jbe
cld
aad
inc
xchg
es
mov
mov
pop
inc
les
lock
mov
inc
pop
or
cltd
stc
lock
jg
jnp
push
push
mov
nop
mov
inc
push
cmp
pop
inc
lcall
xchg
out
lods
push
jae
fs
mov
vpsadbw
push
add
pop
xor
movsb
cli
data16
push
add
dec
jmp
cmp
xlat
pop
int
addr16
insl
cltd
out
xchg
pop
pop
pop
xchg
pop
stos
lret
mov
mov
pop
add
xchg
fistpl
inc
jge
mov
xorl
mov
adc
mov
mov
mov
mov
inc
in
js
or
dec
orb
mov
pop
int
outsb
pop
mov
sub
dec
pop
int
mov
mov
mov
out
mov
mov
arpl
push
mov
push
xchg
jns
mov
push
cmp
cmp
aad
inc
cli
cs
gs
cld
stos
jge
sub
dec
xorb
xor
or
xlat
cmp
inc
jns
in
jo
sahf
test
lcall
jo
and
lahf
sbb
sbb
xchg
pop
data16
in
xchg
xor
inc
add
mov
dec
cld
mov
popf
data16
adc
mov
out
push
mov
xchg
mov
cmp
mov
sub
mov
xor
add
sub
shl
pop
inc
filds
sub
imul
sub
dec
mov
push
fisubrl
rolb
data16
xchg
out
pop
mov
jp
jge
mov
pop
cltd
icebp
clc
xchg
cmp
push
inc
aam
lods
xchg
adc
xor
sahf
push
loopne
subb
das
scas
sub
xchg
xor
fnstsw
dec
prefetcht2
push
sub
shlb
cmpsl
fwait
pop
sti
sub
jge
ret
cmp
or
nop
shlb
mov
add
dec
xor
je
test
push
mov
clc
mov
dec
dec
jo
inc
jb
cmpsl
pop
mov
jo
inc
inc
aam
jl
pop
push
or
mov
push
sbb
pop
fs
cs
pushf
sbb
cld
cmp
jne
insl
pop
lret
xlat
fcoml
adc
mov
shll
sub
cmp
xchg
add
lcall
sub
shrl
sbb
sar
lock
dec
pop
push
mov
add
cld
mov
ror
mov
ljmp
lock
popa
cmp
test
sub
pop
loop
dec
mov
rcl
outsl
pusha
test
shll
dec
push
mov
cmc
outsl
jns
fistps
clc
pop
mov
mov
mov
push
aam
mov
adc
xor
ja
add
cmp
cmpb
fildll
pusha
add
scas
fcompl
lret
out
cltd
imulb
sbbl
dec
inc
movsb
xchg
and
out
or
mov
hlt
insb
push
andb
lock
adc
sub
add
sub
shr
mov
outsl
scas
push
mov
xor
fstp
in
sub
sbb
push
or
sub
outsb
xor
jns
xchg
ds
popf
xchg
sbb
std
mov
sub
push
inc
icebp
xor
aam
fmull
push
dec
push
ret
popa
jle
push
int3
sub
mov
mov
jbe
hlt
pop
pop
mov
sbb
je
fldt
aam
out
sti
or
testb
dec
dec
xor
movb
mov
xor
lods
mov
add
repnz
insb
sub
mov
dec
lods
cmp
or
js
xor
mov
outsl
cmp
or
jg
mov
fnstsw
rcll
or
test
std
cmp
shl
xchg
outsb
or
aad
pop
mov
in
pop
sbb
jnp
adc
push
adc
mov
inc
xor
cmc
cmp
in
rolb
xor
cmp
pop
shrb
sahf
mov
in
dec
cmp
mov
cltd
out
outsl
mov
push
pop
incl
mov
dec
xchg
cmp
shl
cli
je
into
palignr
cmp
dec
xor
push
dec
lahf
sub
xor
fincstp
mov
mov
dec
popa
sbb
jg
jo
shrl
pop
mov
stc
mov
enter
add
stc
addr16
daa
sub
xlat
mov
push
inc
pop
leave
mov
jmp
rcll
mov
cld
lret
adc
nop
jl
mov
mov
pop
mov
push
jbe
leave
cmpsb
pop
sbb
cmp
jbe
ss
mov
inc
imul
lea
inc
inc
add
xchg
sub
ljmp
jnp
inc
es
inc
dec
icebp
popf
push
fadd
lods
xor
int
int
sub
lock
push
aad
mov
jne
out
out
loop
jecxz
std
arpl
gs
test
clc
inc
push
les
cli
sbb
add
push
jbe
movsl
sbb
mov
sbb
jb
lahf
repnz
das
xorb
das
xlat
fimuls
bound
jno
addb
xor
mov
jbe
mov
cmp
ss
dec
push
mov
cli
lea
pop
mov
push
mov
lcall
xor
add
pop
ljmp
sti
lahf
mov
iret
pusha
push
imul
dec
clc
mov
xchg
add
or
cmpsb
cmovbe
es
imul
dec
push
inc
push
lret
fiadds
inc
push
or
pop
leave
cmp
inc
pushf
cs
push
sar
dec
jns
lcall
pop
xor
into
ljmp
in
lock
pop
mov
xor
jge
pop
dec
pop
fisttpll
push
cs
sub
jp
cmp
cmc
and
xchg
xchg
fwait
push
les
test
ret
xor
lret
pop
push
mov
pop
dec
pushf
fnsave
push
test
std
pop
sbb
fdivp
mov
mov
pusha
fdivl
aam
cmp
sbb
adc
divl
stc
cltd
cwtl
sub
sbb
stc
pop
push
cltd
mov
mov
scas
xor
xchg
sub
lret
loopne
clc
cmp
lods
adc
shrl
movsl
in
jmp
popf
daa
addr16
adc
inc
sub
push
frstor
fidivs
xchg
in
mov
andl
xlat
mov
pop
and
push
mov
test
test
addr16
dec
mov
xorb
vorpd
and
shrb
cltd
add
scas
jge
pusha
mov
sbb
mov
scas
push
insl
lock
mov
insl
imul
imul
pop
les
xchg
lret
jae
xchg
fld
adc
inc
test
fisttpl
outsb
sti
xor
in
push
adc
jmp
es
mov
adc
lret
xor
idivb
add
jl
xor
push
xchg
outsl
test
dec
or
fldt
popa
jp
jl
jl
or
xor
mov
jne
mov
out
ds
sbb
fdivl
sbb
daa
or
xor
jnp
and
jge
or
jl
mov
mov
mov
daa
in
clc
test
push
jo
dec
pop
shlb
bound
cmpsb
scas
aas
ficomps
shll
es
aas
pop
cwtl
inc
sahf
push
lret
in
test
int
mov
inc
repnz
dec
imul
inc
fsts
mov
jbe
sti
sbb
lret
xchg
push
mov
mov
vpmacssww
fcos
sahf
outsb
ss
shlb
and
mov
or
addr16
xchg
push
incb
push
mov
xlat
xchg
sbb
insb
arpl
repnz
xor
push
pop
fs
add
iret
and
pop
or
inc
mov
test
stc
idivb
aad
into
or
pusha
lret
push
and
ds
or
subl
aad
icebp
and
mov
pusha
and
adc
out
xor
icebp
movsl
push
int
stos
rolb
add
test
cli
stos
xchg
stos
and
sbb
add
mov
fdivl
push
mov
mov
mov
dec
test
stc
ljmp
lods
mov
push
sub
xor
and
pop
xlat
dec
and
mov
mov
ja
in
mov
pushf
aas
xchg
add
stos
xchg
scas
or
movl
ficoms
orl
ds
cwtl
int
in
mov
movsl
mov
mov
jl
mov
pop
cld
or
sbb
xchg
jge
test
aaa
lret
mov
jp
stos
xchg
ffreep
aad
pop
popa
push
stc
jmp
mov
loopne
movsl
jg
mov
xchg
dec
scas
movsb
fldl
jno
xchg
mov
leave
lds
mov
inc
out
nop
ficoml
push
adc
sbb
xor
sub
cmovbe
cwtl
sub
add
int3
fwait
sbb
leave
sbb
shl
sub
cld
lahf
cmp
roll
xchg
xor
call
fnstenv
jb
push
cmp
sbb
jg
test
mov
and
mov
and
xchg
bnd
mov
mov
test
or
rcr
into
sub
and
jae
jo
outsl
es
mov
push
mov
mov
aas
push
xchg
shlb
or
enter
pusha
add
lret
movsl
push
in
xchg
insb
push
dec
mov
insl
jnp
ss
leave
fmul
jnp
xchg
js
jo
inc
jnp
xchg
inc
jg
push
dec
lods
lds
jnp
mov
das
pop
dec
cs
pop
cmc
jae
shll
mov
adc
or
jmp
fisttpll
push
ret
jnp
sahf
and
adc
pusha
sti
jno
daa
add
xor
mov
fwait
push
mov
add
jae
inc
enter
and
lock
mov
xor
popf
fs
jne
imulb
int
repz
sub
inc
mov
aaa
pop
loopne
mov
divl
cmpsl
xor
cld
inc
lea
xchg
cli
pop
cmp
xchg
cmpsb
decl
popa
rol
dec
cmp
sahf
sbb
dec
lret
xor
loope
and
pusha
add
jp
inc
mov
jae
popa
mov
adc
dec
shlb
dec
sub
cwtl
leave
or
mov
inc
notb
fld
mov
inc
push
pusha
and
repnz
stos
hlt
decb
ljmp
out
jle
mov
dec
lds
shll
lea
leave
sub
lods
push
shll
fcmovnu
add
xchg
cld
ljmp
loopne
xchg
mov
jecxz
sbb
sub
xchg
xchg
out
dec
push
lret
imulb
stos
fcomps
mov
or
jnp
in
jg
ja
test
ja
xchg
aas
adc
adc
sub
and
mov
jmp
es
punpckhdq
cmc
sbb
and
dec
jge
pop
push
ss
pop
dec
pop
inc
mov
xor
push
and
shll
aas
mov
addb
enter
aas
inc
dec
mov
das
jnp
fstl
adc
pushf
mov
mov
xchg
push
movsl
icebp
jg
jl
lock
loop
cmp
push
rolb
xchg
int3
jmp
xor
imul
outsb
push
sarb
adc
ret
xchg
leave
mov
sub
int
incl
mov
fcomps
mov
cmp
jo
jle
cwtl
arpl
ret
mov
ror
enter
pop
sub
and
lods
inc
in
mov
jecxz
jns
fidivs
mov
popf
adc
xor
xchg
fucomp
xchg
jnp
divb
movsl
jp
pop
adc
sub
pop
daa
jae
jl
outsl
mov
pushf
dec
jnp
lcall
inc
in
xor
mov
xchg
jmp
pop
or
inc
mov
rep
out
movsl
mov
cmp
cs
sbb
or
sbb
jle
sub
inc
sbb
and
xchg
xor
or
in
cmp
lahf
xchg
dec
xorb
pop
cmc
xchg
sub
mov
imul
and
add
mov
xchg
pusha
std
movsl
loope
stos
cmp
loopne
inc
imul
pop
ret
mov
and
jae
xor
or
xlat
sub
rcrb
hlt
and
cmpsl
mov
loop
jbe
daa
cltd
dec
adc
and
add
jne
sbb
cmp
dec
lahf
push
xchg
test
adc
insb
aad
sbb
cmpsb
sub
adc
adcb
cs
inc
add
test
aam
cmp
mov
sbbl
fcom
leave
pop
or
push
or
or
daa
notl
xchg
cltd
insl
cmpsl
icebp
push
stos
dec
out
adc
push
in
xchg
adc
jmp
int3
sbb
loope
lret
or
and
popf
es
mov
push
adc
add
push
repnz
test
arpl
push
mov
test
push
ljmp
addl
sbb
int3
mov
xor
adc
frstor
inc
dec
les
jbe
mov
and
arpl
sub
in
lcall
or
sub
or
inc
pop
out
push
cwtl
mov
out
cmp
jg
loope
loope
inc
ret
out
add
xchg
mov
xchg
mov
lcall
dec
les
aam
pop
mov
mov
adc
push
orl
addl
insb
imul
into
mov
or
cmp
push
lock
adc
out
add
rorl
nop
scas
imul
jl
adc
lock
movsb
and
dec
or
xchg
cmp
add
ss
dec
mov
in
jbe
push
mov
mov
inc
or
inc
subl
pop
lods
mov
mov
xor
dec
es
push
or
mov
lcall
adc
roll
mov
popa
add
fsubs
pop
push
in
cmp
xor
or
test
cmpsl
in
xchg
out
test
sub
popf
ss
push
aas
test
in
push
js
inc
push
push
fistpl
out
lea
js
enter
push
add
jmp
sbb
sahf
mov
mov
andl
pop
lret
lret
hlt
sbb
aaa
inc
or
mov
adc
in
stc
sbb
pop
fcomip
aad
pop
push
jmp
imul
xchg
push
mov
insb
pop
inc
and
adc
pmuludq
xchg
jnp
push
fsts
lcall
fdivl
addr16
fisttpll
leave
fwait
in
dec
jno
xorl
sub
mov
out
dec
popf
icebp
jge
ret
insb
pop
bound
outsb
cmp
inc
xchg
shll
pop
ss
les
pop
xor
das
addr16
enter
dec
xchg
push
push
lret
mov
dec
repz
xchg
daa
lret
mov
mov
mov
xor
inc
xor
pushf
fisubrs
mov
pop
sub
iret
add
mov
and
jle
pop
push
jne
push
or
int
mov
mov
lret
inc
jle
pop
cld
sahf
lock
pop
push
pop
lock
adc
xor
mov
pop
insb
mov
sahf
test
xlat
sbb
sbb
sub
mov
out
push
in
push
pushf
add
stos
or
mov
cmp
push
pop
xor
sbb
loope
out
in
mov
loop
divb
push
adc
test
xchg
dec
sub
pop
faddl
fnsave
scas
prefetchw
dec
xor
and
mov
inc
mov
mov
sahf
add
arpl
popf
gs
rcr
adc
lret
icebp
dec
fldcw
mov
xor
shlb
xchg
jae
dec
repz
test
and
mov
int
gs
loop
push
or
inc
sub
add
mov
mov
mov
xor
daa
mov
push
call
mov
arpl
cmpsb
mov
movsl
lea
push
jne
imulb
cmp
jmp
out
dec
shll
jo
push
fwait
sarl
dec
add
push
mov
sbbb
mov
dec
or
mov
xchg
stos
movq
pop
push
and
ret
xor
fiadds
cs
out
dec
cli
call
bound
lods
bound
or
jmp
sbb
pop
pop
add
testb
aas
iret
lods
cltd
pop
dec
test
cmpsl
cmc
aad
add
and
inc
popl
jl
sahf
movl
in
ds
aas
enter
push
cmp
xchg
bound
jecxz
out
pop
inc
fimull
mov
sbb
mov
mov
addr16
aaa
adc
outsl
dec
cs
lods
jle
je
dec
jmp
jle
fnstsw
cli
mov
add
leave
xchg
adc
mov
and
sub
fcmovu
gs
int
test
inc
xor
cmc
in
rorl
adc
adc
and
push
or
fbstp
lea
mov
std
stos
jbe
dec
push
pop
fs
push
loope
and
sbb
and
cmc
push
push
movsl
int
sti
test
lea
jbe
or
addr16
adc
jge
fs
sub
gs
mov
stc
cltd
cmp
subb
js
lret
and
add
stc
xchg
push
adc
cwtl
movsl
mov
xor
mov
xor
add
js
sub
fcomps
lds
xchg
mov
xlat
nop
sbb
lods
mov
jp
pop
pop
loopne
xchg
lock
mov
or
pop
push
or
dec
aaa
aas
inc
sbb
cmpl
rcrl
push
push
pop
push
hlt
or
sub
push
pop
push
lcall
sar
fidivs
inc
test
data16
pop
or
int
mov
xchg
ficoms
stos
cld
mov
scas
pop
mov
jne
jl
inc
iret
fwait
add
in
and
ss
xor
rclb
and
addr16
sahf
movb
dec
sub
adc
and
xchg
adc
lods
jne
jbe
mov
and
jnp
or
repnz
xlat
xchg
cltd
mov
inc
mov
leave
pop
mov
mov
ds
cmpsb
lds
int
mov
mov
and
bound
pop
mov
into
pop
outsl
leave
and
sub
xor
cwtl
aad
std
imul
movsl
push
mov
add
xor
and
loopne
cmp
jae
and
adc
sahf
push
jle
hlt
clc
mov
cld
les
lret
cli
les
icebp
imul
lea
hlt
outsl
int3
shrb
sub
fwait
pushw
std
cmpsl
js
jne
mov
ljmp
fs
imul
pop
xor
cmp
ret
mov
stos
push
repz
lret
mov
std
sbb
dec
sbb
jnp
stc
lahf
pop
push
push
nop
sahf
cmp
mov
xchg
or
mov
nop
int3
add
adc
fdivrs
cmp
out
and
sbb
inc
loope
int3
pop
jb
jmp
add
jb
cmc
daa
cwtl
jne
lds
repnz
rcl
xor
sub
lds
pusha
pusha
nop
lahf
mov
add
push
lret
fstps
out
and
mov
jne,pt
pop
dec
pop
stos
enter
push
inc
fldcw
push
ljmp
push
adc
jp
pop
xor
psubusw
inc
xchg
mov
mov
cmp
rclb
fbld
insl
add
gs
int3
dec
inc
mov
pusha
mov
push
push
dec
leave
xor
pop
pop
std
or
repnz
add
cmp
addr16
mov
adc
fimuls
push
scas
je
xor
pop
aam
mov
pop
test
js
mov
xor
jmp
movntq
cwtl
mov
mov
pop
mov
xchg
cs
sti
mov
cmpsb
cli
mov
or
xchg
lods
popf
sbb
int
lock
sarb
imul
mov
jle
jecxz
lret
sbb
push
clc
sarl
das
divb
insb
and
cltd
int
jmp
aaa
inc
adc
in
pop
inc
ljmp
sbb
or
pop
dec
cmpb
inc
push
jg
call
xchg
dec
incl
xor
es
xor
nop
subl
push
sti
push
fimull
and
rcr
jnp
inc
lods
mov
xor
pop
movsb
shrb
mov
mov
push
dec
jg
loope
fsubs
fwait
insb
pop
lcall
cmp
stos
xchg
fidivs
movsb
jnp
shrd
jo
jbe
push
cmp
push
dec
and
aaa
jnp
pop
inc
vmovsldup
cmp
lahf
test
dec
loop
or
rcl
mov
xchg
imul
or
xor
ss
stos
sarb
gs
dec
ret
add
iret
sbb
jns
daa
cwtl
pop
frstor
cli
pop
mov
imulb
mov
push
inc
add
inc
je
sahf
inc
fimuls
cli
dec
mov
sti
int3
pop
lret
cmp
call
into
jl
imul
mov
out
out
mov
push
mov
jge
and
bound
jg
xchg
jmp
sub
std
jne
push
push
inc
notl
in
xor
sbb
push
mov
jo
arpl
xor
dec
daa
push
lock
mov
and
cmp
add
push
insl
pop
es
aas
push
scas
movsb
js
sub
pushf
lret
adc
xor
sub
and
xor
jnp
test
sub
xlat
mov
sbb
pop
push
jbe
add
fwait
mov
dec
in
xor
jnp
cmpsb
mov
adc
sub
mov
data16
jmp
mov
sbb
insl
mov
cmpsb
xor
out
sub
ljmp
gs
ds
jns
shll
add
shlb
ficompl
jp
cmpsl
sahf
fdivr
cld
add
xor
outsl
ret
ret
inc
mov
cmp
jle
or
in
shlb
aaa
adc
mov
addb
rcll
aam
inc
and
imul
mov
addb
mov
fwait
rclb
and
xchg
es
add
aas
cld
cld
mov
adc
and
daa
cli
mov
push
xor
mov
sbb
sbb
push
mov
outsl
mov
lds
xchg
xchg
stc
movsb
cmp
mov
push
adc
rcrb
scas
xor
icebp
mov
rorl
cmpsb
add
ret
cmp
inc
notb
out
add
jno
mov
push
je
daa
nop
inc
mov
stc
nop
loope
pop
insl
sbb
rorb
jno
movsb
hlt
and
sti
int
dec
jp
push
nop
jle
lea
mov
mov
cmp
ja
jecxz
inc
or
and
sbb
adc
jbe
std
jecxz
inc
xor
dec
roll
ret
dec
negb
cltd
lods
sbb
ds
adc
sub
cmp
pusha
mov
jp
jns
inc
jb
mov
cmc
pop
std
clc
test
dec
es
jno
dec
pop
xor
cmp
pop
jne
push
mov
stos
jmp
add
jle
lods
aad
insl
push
adc
hlt
shll
xchg
or
jecxz
xchg
and
mov
push
inc
ja
mov
jb
jns
roll
call
enter
pop
xchg
insl
add
mulb
fnsave
out
sbb
cmpsb
mov
leave
fldcw
or
xchg
mov
lret
fidivl
jl
stos
adc
sub
inc
das
call
mov
cmc
scas
dec
std
xchg
xchg
js
imul
xor
cmp
aas
mov
xor
fisubl
loopne
shld
dec
xchg
and
fisubrl
xchg
fidivrs
outsb
neg
jmp
or
inc
jl
or
lds
cmp
xor
lock
push
mov
call
stos
out
mov
and
add
div
pop
adc
inc
xchg
and
ret
ret
pop
push
aaa
jg
dec
mov
push
dec
dec
int
dec
cmp
popf
icebp
xchg
loop
sbb
dec
imul
outsl
push
and
pop
imul
cmc
insl
pop
in
pop
mov
adc
xchg
test
in
jecxz
and
and
repnz
into
mov
dec
sbb
xor
sbb
call
pusha
push
cmc
mov
and
test
pop
punpckhdq
and
ja
cli
mov
mov
pushf
mov
or
pop
ror
pop
pop
jae
ret
xchg
xor
xor
mov
fcoml
xchg
mov
into
fists
push
flds
stc
xchg
adcb
cli
bound
fs
jne
fisttpll
xor
sarl
mov
pushf
add
mov
js
sbb
fs
mov
or
imul
leave
adc
push
xor
mov
push
xor
pop
out
fildl
jmp
jmp
cmp
mov
cmp
subl
seto
rdmsr
outsl
jbe
dec
mov
or
notb
pusha
mov
fistl
cltd
pop
xor
lds
and
push
clc
cmp
dec
pop
adc
js
push
std
movsl
outsl
fnstsw
xor
loop
inc
lock
pop
test
sbb
and
call
inc
shll
std
fdivr
push
je
rorb
dec
shll
push
pop
cmp
jo
pop
arpl
jg
xchg
mov
inc
cmp
pusha
dec
jnp
mov
lods
scas
cmp
dec
cli
inc
push
jae
and
jae
insb
lret
jmp
sub
and
jne
sub
dec
fildl
popf
icebp
dec
cli
scas
and
fldt
mov
movsb
aad
aas
sub
add
add
pop
or
mov
adc
and
push
mov
lret
xchg
jns
mov
or
xor
scas
mov
or
xchg
sub
inc
bound
lock
xchg
lret
xor
push
mov
fcmove
das
pop
sbb
sbb
xchg
and
sub
mov
jmpw
icebp
repz
push
jo
push
dec
repz
fsub
je
dec
inc
sbb
lds
push
jo
add
icebp
fbld
movsb
popa
lods
test
mov
movsl
jnp
sbb
jmp
popf
test
push
pushf
jns
lods
jns
jnp
or
cmc
sarb
mov
and
sub
cltd
mov
add
sbb
add
inc
adc
pop
clc
imul
cwtl
insl
nop
mov
loopne
sub
movsl
addr16
mov
hlt
xlat
sbb
loope
and
aad
fsts
cs
cltd
adc
imulb
jmp
mov
mov
xor
divl
add
mov
mov
jae
push
mov
clc
push
in
lret
rorb
pop
inc
mov
push
jmp
mov
call
fstps
dec
rcl
push
stc
lock
aam
xchg
cmp
jns
into
pop
or
and
fwait
pop
dec
push
push
outsl
mov
hlt
jle
clc
sub
movsb
sbbl
popf
push
or
cli
jp
or
orb
loopne
out
xor
xor
repnz
insl
sbb
popa
and
jle
mov
fstpt
mov
mov
div
and
mov
cmc
sub
popa
dec
mov
cmp
jmp
cwtl
decl
sbb
jae
leave
scas
xor
test
sbb
mov
push
cmpsb
stos
or
fs
cld
loope
call
jge
fdivrs
push
xchg
xor
push
xchg
iret
cld
shr
jg
or
test
add
sarb
pop
sub
int
jge
in
out
jo
pop
movsb
out
cmp
fisubs
and
inc
ss
insb
popf
sbb
mov
stos
adcb
dec
cmp
loopne
mov
xchg
cmp
mov
adc
pop
mov
xor
pop
test
dec
adc
push
test
test
mov
fisttpll
les
add
rclb
cmp
stc
cmp
or
cmp
sub
dec
mov
mov
test
xchg
xor
out
or
xor
aaa
stos
in
repz
aam
push
mov
xchg
scas
cmpl
inc
shll
jae
lahf
add
xchg
xchg
cs
addr16
dec
cli
nop
popa
in
jg
bound
shll
xchg
sub
mov
sub
mov
nop
hlt
or
and
inc
mov
and
push
out
push
nop
repnz
lock
rcl
data16
cwtl
fbstp
mov
loop
mov
xor
sub
adc
inc
addr16
jae
nop
mov
or
jmp
jmp
repz
cld
aaa
out
lret
or
rorl
fs
out
dec
sub
ficompl
aaa
int3
in
std
mov
fisttps
into
xor
je
je
ja
adc
mov
rorb
pushf
xchg
in
into
adc
fsubl
das
lret
sub
aaa
std
cmpsl
cmc
rcrb
mov
add
js
dec
xor
sub
out
lods
mov
inc
mov
dec
or
loopne
push
jp
sahf
inc
sub
enter
inc
adc
nop
mov
push
inc
sbb
dec
add
scas
fistpl
jp
repnz
loopne
jge
mov
out
loopnew
aad
in
cwtl
ds
add
pop
loopne
adc
ret
inc
cmp
iret
xor
mov
arpl
jl
aam
inc
test
push
inc
mov
jbe
jno
pop
std
cmp
aaa
ds
or
pop
mov
scas
mov
dec
lret
aad
xchg
aaa
ficoms
jg
test
lods
or
mov
std
out
cld
in
or
fwait
fwait
pop
popf
in
jns
xor
pop
push
sbb
out
sbb
sti
cmpsb
and
iret
mov
push
dec
loope
notb
jmp
add
adc
push
push
insb
insl
pop
jns
loope
ret
fsts
imul
ret
sub
adc
sbb
xchg
and
add
fdivs
addr16
push
out
js
dec
jle
mov
fstpl
pop
pop
in
data16
mov
cmpsb
dec
sub
and
roll
stc
loope
pop
xor
push
je
push
or
imul
mov
pop
pop
cmp
leave
pop
sbb
jmp
jl
lret
roll
stos
insb
out
xchg
out
fcoms
pop
xlat
and
lock
insl
jb
movsb
and
nop
les
dec
fs
loopne
cltd
dec
mov
cmp
mov
ljmp
pop
cld
js
add
xor
pop
mov
stos
mov
into
or
test
fstp
push
fldcw
mov
and
and
inc
je
push
dec
loop
jp
fwait
popl
fwait
cmpsl
adc
fidivrl
fcoml
pop
clc
sub
shlb
jns
repnz
jbe
rcrb
mov
inc
cmp
pop
pushf
add
push
mov
sbb
stos
movsl
stos
or
pop
sbb
mov
adc
cmp
fstps
ret
mov
push
sbb
add
jns
pop
xor
test
mov
xchg
fists
out
sarl
data16
fdivp
jge
inc
imulb
cmp
jg
fsubs
leave
sbb
in
push
jae
outsl
lds
inc
xor
xchg
sbb
mov
jge
cs
cs
loopne
or
mov
mov
and
dec
in
mov
jg
xchg
jnp
rep
bound
cltd
testb
mov
mov
test
shr
cli
xchg
add
das
icebp
iret
mov
mov
mov
add
in
lods
xor
cmpsl
lret
sahf
bnd
stos
dec
dec
aam
sbb
lret
sbbb
into
lods
xor
nop
pop
into
or
cmp
test
xor
jmp
add
pushf
jle
mov
xchg
sbb
and
sbb
or
mov
jno
lea
add
xchg
repz
outsb
xor
mov
sub
adc
rcl
stos
int
fcoml
cwtl
push
cltd
roll
sahf
cltd
xchg
push
sub
std
addr16
out
xchg
repz
out
imul
dec
push
adc
push
push
ja
cmpsl
fildll
ds
outsb
push
repz
inc
jnp
test
inc
call
test
rcr
xor
stc
and
or
in
nop
mov
shrl
test
stc
out
das
push
fsts
ljmp
push
dec
ret
lds
pop
bound
fidivrs
sub
les
xchg
icebp
push
test
inc
sbb
mov
mov
loope
andl
ds
std
add
outsb
les
lret
jo
pop
dec
js
sti
dec
bound
fstpt
test
cltd
cmp
jne
or
adc
popf
dec
in
mov
jmp
std
out
data16
xchg
push
popf
lock
xor
or
mov
fsubrs
fildl
mov
je
arpl
dec
movb
repz
arpl
adc
jl
push
cmp
add
sti
xor
xor
sub
cmp
cmpsl
rorl
aas
mov
fdivrs
int
and
inc
mov
aaa
lret
loop
es
lods
scas
daa
shlb
xchg
fistps
mov
pusha
add
daa
addb
pop
inc
in
inc
xchg
es
jne
push
and
inc
outsl
cmp
pop
neg
in
test
daa
push
mov
mov
cmpsl
push
jmp
insb
loopne
sbb
sbb
and
cmp
lea
ficomps
inc
mov
adc
test
pop
out
pop
jb
cli
sub
dec
aaa
mov
aas
and
mov
dec
jne
pop
and
lds
mov
xor
mov
push
lcall
ljmp
sub
xchg
aas
jl
dec
pop
stc
lret
mov
push
dec
xchg
in
push
dec
add
out
adcb
push
pusha
or
insl
mov
decl
inc
dec
cmp
repz
or
cmp
dec
adc
push
loop
xchg
xor
addr16
orl
adc
xor
repz
and
push
sub
dec
dec
int
je
insb
int
ficoms
lods
imul
add
cmpsl
fidivl
scas
mov
imul
sbb
mov
inc
movsl
aas
sub
cli
pusha
or
enter
mov
and
xchg
pop
xchg
or
push
subb
mov
cmp
push
loope
ja
push
add
into
cmp
rcr
out
ss
dec
xlat
mov
ss
mov
mov
and
aam
cmp
mov
add
xchg
push
and
or
pop
ss
xchg
push
or
sub
cltd
outsb
add
shr
sbb
fsubrs
lahf
dec
dec
rcrl
fsts
sahf
aas
adc
in
pop
sahf
jle
pop
mov
in
mov
aad
mov
mov
push
or
popa
jg,pn
es
jmp
leave
xchg
fcmovnbe
push
in
insl
sahf
repz
lock
xchg
cmpsl
dec
dec
jno
inc
jl
push
or
xor
lret
std
xor
sbb
lret
icebp
mov
jnp
mov
push
sbb
and
arpl
hlt
jmp
mov
scas
test
sub
dec
popf
pusha
sbb
dec
push
add
push
imul
js
sbb
movsb
repnz
into
and
iret
cmp
rcr
int
sub
loop
lock
push
inc
ret
es
test
mov
mov
jle
lods
pop
xor
insb
add
sub
aad
mov
fldt
stc
popf
xchg
pop
pop
sub
call
add
repnz
sub
dec
mov
push
ret
mov
push
ds
insl
test
sub
jle
xor
pop
jns
xor
push
lcall
lcall
jae
stos
push
jae
and
xchg
adc
jle
lock
popf
bound
pop
jg
push
mov
push
lods
addb
xor
ljmp
mov
lock
ljmp
inc
push
cmp
push
cmpsb
jo
repz
adc
ljmp
mov
adc
hlt
cmp
enter
pop
jp
sbb
jno
das
lods
sub
mov
jo
mov
dec
pop
fsts
rcrl
push
inc
xchg
inc
mul
lods
loop
dec
in
outsl
movsl
bound
jae
and
lret
xchg
test
add
out
je
or
jo
dec
sbb
mulb
mov
fucomip
and
sub
shlb
jno
jmp
je
bound
inc
andl
mov
push
imull
sub
nop
out
loop
js
pop
stos
jle
jns
inc
mov
xchg
cwtl
jo
xor
lcall
mov
jmp
mov
mov
orl
xor
xchg
js
into
xor
int3
out
push
cmp
lds
cmc
not
lret
xchg
dec
repnz
popa
cltd
dec
push
push
js
imul
arpl
rorl
mov
push
sbb
sbb
imull
in
std
sub
stos
fcomi
ss
add
add
aam
push
push
mov
lea
or
sub
xor
mov
dec
lods
popfw
cmpsl
cmp
das
jb
test
pusha
cli
roll
and
push
hlt
pop
mov
in
push
jae
jns
push
adcl
test
lock
mov
cmp
call
fldenv
or
cmovns
rolb
xor
add
dec
cmpl
push
mov
dec
cmc
adc
pop
testb
push
and
dec
jle,pt
sbb
fcmovne
pop
jg
add
mov
mov
outsl
jo
xchg
nop
pop
dec
add
mov
xchg
shlb
sbb
imul
test
iret
xlat
pop
lds
inc
sub
xor
pushl
dec
xor
fcomps
jno
es
outsl
or
rorb
dec
insl
sub
fimuls
pop
add
out
clc
lds
mov
repnz
fcomp
stos
adc
sbb
sbb
jae
sub
fsubr
inc
mov
push
std
cmc
les
loopne
fcomps
jae
dec
jns
addr16
std
fdivl
pop
cld
shrb
and
lock
cli
mov
cmp
insl
mov
add
push
adc
xchg
test
nop
mov
fldcw
lea
add
ret
mov
sbb
mov
lods
mov
gs
les
cmpb
clc
into
in
or
push
pop
push
sbb
call
or
outsb
jp
add
adc
sub
cmp
sbb
stos
add
lods
dec
add
jmp
fwait
shlb
cld
daa
xor
lahf
insb
lret
mov
sub
dec
or
or
mov
int
pop
push
push
cmp
aaa
les
push
mov
out
aaa
scas
adc
lds
js
call
xchg
xchg
fimuls
fildl
imul
roll
or
in
movsl
add
lcall
lods
inc
mov
xchg
push
mov
in
insb
mov
or
mov
push
jl
mov
cmp
push
sarl
or
pop
and
lret
fs
push
jno
push
cmp
fstpl
das
pop
popa
lcall
daa
in
in
int3
js
icebp
mov
xchg
sar
pop
push
mov
aad
cmpsb
cmp
stos
shlb
test
jecxz
xchg
mov
jmp
out
inc
in
xchg
outsl
jo
test
mov
das
pop
stos
cmc
into
es
movsb
xchg
mov
stos
cld
out
add
push
dec
mov
js
push
mov
or
mov
jge
shlb
xchg
test
out
adc
test
sub
leave
jnp
sti
leave
scas
ja
scas
aam
mov
mov
lock
mov
xor
pop
dec
into
popf
or
in
dec
and
add
stc
adc
add
lcall
iret
mov
test
mov
mov
aas
pushf
lcall
sub
and
into
rcrl
or
mov
leave
push
int
hlt
jae
mov
xor
add
push
enter
mov
neg
inc
jno
sbb
jmp
sahf
mov
fidivs
outsl
mov
cltd
test
iret
inc
push
jmp
inc
jno
jnp
scas
push
push
mov
inc
inc
xchg
or
in
pop
out
jmp
pop
inc
adc
or
jo
xchg
add
in
movsb
mov
xchg
and
sub
inc
js
or
popf
inc
imul
cmpsl
lods
jl
insl
test
mov
dec
je
clc
dec
push
cltd
fstpt
mov
test
jge
nop
xchg
mov
mov
or
das
mov
xor
dec
push
movd
dec
and
sub
movsb
into
scas
das
out
and
and
or
popf
add
or
mov
pop
loope
and
aas
ret
jns
mull
std
scas
pmaxub
sub
paddusb
outsl
out
data16
shll
jg
daa
cld
subl
or
pop
jns
hlt
insl
loopne
fwait
inc
jbe
call
add
sti
gs
xchg
inc
popf
in
mov
sbb
insb
push
sub
pusha
add
cmp
mov
adc
repz
sbb
push
and
fidivl
add
or
cmp
scas
or
pop
stc
lahf
pop
loopne,pt
fbld
or
rcrl
adc
jnp
repnz
sbb
pop
adc
cwtl
test
cmp
mov
or
leave
mov
dec
loope
xchg
cmp
shlb
scas
or
mov
pop
sub
std
popa
push
mov
je
dec
jae
rorl
pop
pop
out
stos
jecxz
mov
inc
dec
aas
jle
mov
roll
xor
mov
push
fs
jnp
and
cmp
mov
adc
sahf
data16
sub
lret
mov
out
push
outsl
out
mov
scas
add
jno
push
test
dec
repnz
out
adc
stc
xchg
jae
loopne,pt
cmp
test
mov
pop
insl
mov
arpl
cwtl
stc
pop
xchg
cmp
cltd
hlt
jmp
jge
pusha
fildll
pop
cmp
xchg
and
or
js
lcall
cmp
jae
dec
adc
lods
xor
inc
mov
inc
imul
pop
les
fwait
cmpsl
out
xor
loopne
repnz
push
clc
adc
aam
add
dec
popa
fildl
aas
xchg
mov
mov
fisttps
insl
cmp
scas
or
stos
mov
shll
movsb
mov
push
or
iret
clc
call
sbb
pop
scas
push
addr16
sti
sarl
test
call
pop
cmp
pop
push
push
pusha
mov
lahf
je
decb
inc
adc
mov
pop
inc
cmp
pop
stos
rcl
add
mov
add
push
mov
leave
rcr
mov
loop
xchg
sub
push
dec
xor
negl
and
int
and
xor
pop
out
lret
fdiv
std
ror
sti
push
push
cld
jp
loopne
sub
mov
hlt
jle
or
sub
inc
adc
mov
lods
movsl
mov
cmp
pop
hlt
arpl
cs
lahf
mov
push
addb
stos
ret
mov
mov
clc
push
and
popa
aas
and
movsl
push
add
or
xabort
and
pop
pop
dec
out
add
cmc
dec
and
stc
mov
push
jl
pop
out
mov
fildl
and
movsb
outsb
add
sbb
out
test
lret
shll
je
movsl
sti
aam
xchg
mov
inc
pop
js
pop
jae
addr16
mov
repnz
add
out
nop
xor
insl
sub
xchg
inc
adcb
xor
arpl
test
add
mov
and
sub
jg
fmulp
dec
xchg
and
xchg
inc
shll
xor
jle
mov
adc
aas
in
std
sub
data16
cltd
inc
in
fwait
outsb
rdmsr
push
insb
insl
dec
ljmp
shlb
jmp
addb
pop
inc
pop
adcl
dec
ret
mov
ficoml
or
loop
xchg
call
fidivrl
andb
addr16
adc
jge
lcall
pop
loop
and
flds
pop
xor
sub
mov
mov
test
sbbl
rcrb
pushf
loopne
xchg
xor
repnz
xor
ficoml
dec
movsl
into
outsb
icebp
jecxz
cmp
add
lds
scas
dec
aam
mov
in
push
scas
rorb
fildl
imul
leave
mov
dec
and
xchg
sub
xchg
xchg
inc
loopne
add
ja
repnz
popf
mov
jl
inc
je
dec
mov
or
rcrl
test
cmp
cs
mov
xchg
mov
lahf
cmp
lea
dec
js
imul
addl
push
add
inc
sub
lcall
dec
inc
or
in
mov
sbb
into
xchg
jno
fildl
subl
sahf
and
aaa
xor
in
jl
leave
xchg
adc
std
pop
bnd
test
xchg
in
popa
ror
lea
sbb
xchg
dec
aam
scas
push
scas
sahf
rorb
lock
or
imul
sub
sahf
movsb
mov
xor
add
scas
pop
pop
push
pop
pop
ja
sbb
mov
daa
sti
arpl
mov
pop
in
je
lcall
popa
test
mov
push
addl
ficoms
shll
pushf
in
push
ljmp
cmpsl
insb
clc
mov
loopne
int
ss
data16
jo
out
daa
ret
dec
push
mov
dec
sbb
xchg
imul
xchg
mov
or
loope
loop
jb
jnp
in
mov
jne
movsb
inc
adc
xchg
and
push
aam
cmc
xchg
mov
or
mov
es
sar
pop
xor
fistpll
push
int
xor
imul
cs
sub
jle
add
jg
cmp
or
mov
xor
ja
rcl
test
into
sti
aad
add
lds
cmp
dec
adc
movl
mov
and
cwtl
cli
jge
inc
cmc
xchg
test
and
cmpsl
test
icebp
je
jb
in
addl
push
in
loope,pt
rcrl
imul
lods
adc
sbb
mov
dec
nop
cmc
adc
inc
pop
repz
mov
cmp
xor
inc
cwtl
and
stos
pop
rcrb
sti
push
mov
xor
mov
pop
shrl
and
loopne
insb
subb
lods
movb
mov
mov
in
pop
ljmp
mov
xchg
jmp
inc
xchg
iret
jp
pop
cli
xchg
pop
pop
xor
mov
call
sar
mov
in
popa
rcll
cmp
loope
jmp
dec
nop
xchg
mov
in
jmp
sbb
outsl
adc
out
mov
sbb
fldl
mov
mov
fistpl
and
dec
mov
or
ss
sarl
les
das
movsb
scas
xchg
outsb
or
jle
mov
mov
push
mov
and
mov
sub
push
fldl
popa
lret
test
hlt
dec
es
inc
fdiv
push
push
xchg
and
mov
call
jae
cmp
and
push
in
bound
lock
loope
arpl
insl
and
lahf
int3
lods
icebp
sub
les
jno
push
test
mov
in
xchg
jo
add
outsl
jns
out
xchg
mov
xor
jmp
mov
loop
test
mov
rcr
mov
test
fisubl
dec
inc
shll
jmp
orl
xor
mov
sub
mov
ljmp
sbb
jge
movb
aam
repz
dec
ds
mov
jbe
and
std
ret
sarb
out
cld
and
cmp
jecxz
ss
in
movsb
xchg
popf
insb
jmp
fwait
inc
jmp
inc
or
sbb
xchg
iret
mov
jbe
imul
pop
call
xchg
imul
jmp
jo
inc
test
inc
rclb
call
push
pop
inc
addr16
fwait
inc
inc
jl
pop
pushl
inc
in
mov
sub
mov
sbb
pop
pushf
jb
xchg
shl
xchg
lds
and
xchg
jno
es
ror
shr
push
jp
repz
mov
sub
or
fildll
push
mov
mov
lods
roll
in
inc
or
push
sti
cmp
mov
add
fwait
iret
icebp
dec
jb
cmp
dec
clc
add
fyl2x
sub
and
orl
jg
push
xor
xor
pop
out
test
sbb
ss
fcmovnbe
push
das
jle
jp
sub
test
or
sub
loopne
sti
rorb
dec
cltd
test
stos
jae
cld
scas
sahf
and
int3
shlb
hlt
adc
iret
sbb
bound
add
mov
adc
mov
xor
pop
mov
sub
ss
insl
push
dec
xchg
push
ret
and
lea
or
ja
add
out
ret
pop
jns
fisttpl
movsl
sbb
es
fs
imul
pop
add
add
andl
pop
leave
enter
mov
jne
hlt
sbb
repnz
and
repnz
shll
push
add
fstpt
sbb
pop
or
andl
sub
lods
shlb
add
cltd
cmc
xlat
mov
mov
imul
sub
cmpsl
jl
repnz
mov
mov
or
add
test
imul
xchg
and
mov
cmp
xchg
out
inc
imul
adc
call
add
sbb
cmc
rclb
xchg
or
add
dec
subl
inc
jecxz
lock
push
adc
push
mov
dec
cmp
sub
lret
inc
filds
xchg
inc
mov
es
jo
xor
in
dec
push
out
jo
lea
pop
cli
xchg
xlat
mov
fadd
xchg
push
cmp
sbb
in
dec
aad
or
mov
stc
add
inc
fadds
lcall
xchg
xchg
jb
xchg
sar
sub
sub
enter
sarb
adc
xchg
cmc
mov
push
add
sbb
dec
sub
mov
scas
dec
fstpt
sub
popa
mov
gs
adcl
add
sbb
xchg
sahf
loop
inc
scas
mov
dec
cmp
clc
pushf
xlat
in
inc
mov
fdivrp
dec
push
dec
jmp
pop
inc
xor
fnstcw
or
sbb
inc
inc
jbe
jo
out
adc
test
sbb
call
insb
mov
cmpsl
inc
push
std
jmp
cld
call
lret
push
mov
shrb
fidivrs
add
mov
popa
lahf
cwtd
adc
orl
jno
sbb
or
or
int3
sbb
fcmovnb
dec
xorl
es
mulps
pop
mov
lcall
mov
bound
xor
rcrl
cmpsb
mov
stos
js
aam
fsqrt
out
cmp
rorb
add
insl
dec
ja
mov
insb
sbb
adc
lods
inc
enter
jnp
in
popa
rcrb
jnp
pop
jae
mov
xchg
int3
imul
xchg
clc
cmp
lret
xchg
adc
dec
sub
mov
xchg
int
mov
dec
and
or
adc
mov
movsl
shl
push
adcb
lahf
jp
dec
dec
aaa
mov
mov
aaa
mov
jge
mov
cld
mov
jb
add
xor
inc
cmp
decb
fdivrl
xor
push
pop
cmc
mov
mov
adc
xor
mov
add
in
icebp
arpl
push
test
push
add
frstor
add
in
xor
fimuls
aam
sub
pop
js
mov
ss
push
mov
ss
xchg
adc
mov
test
ds
push
sub
push
aad
outsb
jge
xlat
push
cmpsb
xor
test
or
decb
inc
inc
rcrl
orb
xchg
sbb
dec
sbb
cwtl
add
dec
lret
ret
pop
mov
enter
cld
or
cmpsb
sub
pushf
xor
js
mov
pop
sub
push
mov
push
loop
aas
stos
mov
dec
mov
dec
test
adc
lcall
sbb
mov
push
xchg
or
mov
out
clc
dec
fdivs
js
mov
insb
fidivrl
fldt
pop
int
xchg
xchg
and
call
mov
pop
adc
xor
lock
mov
add
and
adc
stc
imul
daa
xchg
sbb
jmp
testb
sub
pop
rcrl
js
inc
scas
inc
into
xchg
cld
xchg
adc
adc
call
add
aas
nop
mov
lods
jmp
enter
inc
jb
mov
mov
inc
subl
leave
movsl
xchg
fcmove
or
imul
xlat
les
mov
dec
int3
lret
dec
pop
int
ja
xchg
cmp
into
adcl
or
pushf
dec
push
cli
xlat
arpl
loope
fwait
mov
and
mov
cmp
test
mov
stc
sub
sbb
call
push
adc
xor
aas
std
push
xlat
stc
pop
xchg
pop
mov
stc
mov
gs
cmp
dec
inc
and
outsb
cmp
mov
lods
pop
dec
push
fsub
pop
cmc
add
dec
inc
add
outsb
and
xorb
test
fists
inc
cmp
mov
sbb
and
jle
mov
jl
push
out
das
pop
in
add
add
adc
lods
loope
xor
pop
push
mov
scas
xor
adc
inc
out
stos
push
fstpt
cltd
push
sub
and
inc
sub
mov
shr
push
and
xchg
aaa
fs
sbb
or
and
inc
and
cmp
aaa
jae
adc
dec
mov
dec
cmp
lret
js
ret
jmp
mov
jns
jecxz
push
dec
mov
cmp
cmpb
mov
out
loop
shlb
lea
or
daa
push
sahf
mov
std
cwtl
sbb
outsb
cmp
loopne
push
rorb
sub
sub
mov
in
mov
leave
and
add
mov
sub
push
sub
or
sub
je
dec
xchg
fidivl
add
or
add
lock
mov
mov
pop
push
pop
cmp
scas
pop
lock
lahf
mov
rorl
icebp
xchg
lock
test
outsl
shlb
xor
divl
dec
inc
push
add
stc
push
loope
mov
jmp
js
and
jp
orl
pop
test
jl
mov
push
sub
sbb
mov
push
push
hlt
push
push
mov
pop
sbb
push
into
fcoms
xor
sar
ja
subl
ret
push
gs
shll
test
or
shrb
subl
xlat
push
add
add
add
xchg
mov
iret
push
adc
mov
sub
movsl
ret
in
push
es
enter
jmp
aad
mov
mov
cmp
add
fs
jnp
or
jae
mov
fisttps
fstp
pop
notl
cmp
lock
mov
or
dec
lods
stos
cmp
xchg
cmp
and
jmp
add
inc
cmp
pop
sbb
fstpl
adc
lahf
sbb
push
or
test
jae
test
push
inc
mov
and
mov
cltd
push
out
test
lods
hlt
icebp
movsl
fcmove
ds
xchg
cltd
sub
sbb
mov
in
out
enter
movsl
scas
bound
pop
out
push
ret
das
jns
bound
ja,pn
mov
inc
mov
xchg
dec
and
and
ret
xchg
fwait
jne
pushf
adc
ret
inc
mov
loopne
test
ds
sbb
xor
outsl
pop
add
xchg
ss
xchg
xchg
xchg
aas
mov
shll
int
add
imul
lds
aad
bound
lcall
jecxz
insl
testl
jle
je
and
mov
push
fisttps
insb
mov
sahf
fwait
and
cmp
sbb
add
sti
pop
mov
roll
lock
lods
inc
cs
scas
aam
mov
or
cs
and
dec
cmc
insl
scas
imulb
aaa
pop
add
jmp
pop
and
jbe
adc
cmp
mov
lock
cmpsb
cmp
jne
xchg
mov
xchg
mov
push
cld
repnz
pop
or
cltd
mov
push
mov
add
sarl
add
pushf
pop
leave
sahf
sbbl
jmp
loop
dec
mov
inc
mov
nop
xchg
xor
push
out
jno
push
data16
xor
mov
in
loope
fidivrs
adc
or
rorb
ja
push
cmp
aad
ljmp
mov
sbb
adc
iret
out
add
pop
mov
and
test
orl
imul
sarl
loop
mov
mov
jl
lock
ss
add
movl
mov
push
adc
jb
scas
xor
idivb
ds
out
cmp
mov
aaa
in
cmp
int
mov
scas
and
inc
sbbb
xchg
xor
mov
mov
add
lods
fistl
je
sbb
and
pop
and
iret
pop
dec
dec
mov
add
mov
xchg
mov
cltd
push
or
sbb
pop
adc
popa
mov
jo
fs
nop
xchg
scas
cltd
test
xchg
inc
xchg
ss
icebp
data16
aam
jp
push
push
mov
sub
mov
aas
sbb
fsubl
bound
add
outsl
inc
loop
testb
push
xchg
pop
iret
xchg
inc
fstpl
lock
pop
add
sub
and
insl
leave
test
loop
ljmp
jmp
in
repnz
mov
lea
out
push
stos
pop
xor
in
pop
out
jb
mov
mov
mov
cwtl
pop
sarb
pop
call
cmc
aam
push
ret
mov
fsubs
mov
loop
xchg
inc
leave
clc
std
adc
orb
ja
add
add
scas
lcall
mov
pusha
mov
sub
sub
sbb
xlat
in
inc
imul
out
aaa
lock
dec
jg
test
data16
ret
insb
pop
mov
push
sbbl
lods
sub
addr16
mov
xor
out
xchg
or
imul
test
imul
sbb
in
jmp
xchg
sbb
adc
push
out
jle
pop
add
roll
inc
sbb
leave
xchg
lock
rcrl
push
movsb
mov
addr16
push
je
cmp
ljmp
push
add
add
sar
movsl
add
hlt
sbb
loopne
fnstenv
jno
push
sbb
lcall
xor
cmp
clc
ja
or
out
xor
lret
xchg
add
mov
pop
jge
xchg
push
inc
jmp
inc
or
xlat
jg
lea
or
jnp
add
mov
and
xor
push
fnstsw
sub
lds
and
ljmp
inc
push
ficoml
pushf
mov
pop
push
insl
cmpsl
faddp
ficoml
xchg
jl
sbb
lret
dec
loopne
in
or
mov
test
gs
scas
or
loope
push
icebp
movsl
jge
dec
notb
orl
mov
into
dec
test
mov
lea
lret
and
adc
les
mov
mov
filds
out
lea
adc
mov
xor
loope
cmp
fwait
dec
push
or
or
inc
stc
jge
gs
arpl
pop
sbb
loopne
push
enter
dec
das
pop
movl
lds
push
mov
and
lahf
int3
mov
xor
add
addb
xchg
test
mov
cmp
inc
test
xchg
cli
or
sub
xchg
xor
xchg
jnp
sarl
arpl
lcall
mov
es
cmc
push
adc
pop
xor
ljmp
mov
in
enter
ficoml
stc
mov
test
inc
lret
int3
sub
or
inc
imul
lea
dec
insl
lods
jnp
cmc
mov
sbb
inc
push
sbb
jg
and
pop
scas
repz
es
cltd
sub
mov
xor
pop
pop
mov
insl
loope
shlb
push
fldt
or
push
push
pop
xchg
ds
dec
push
jl
mov
stos
xor
test
movsb
hlt
push
pop
shlb
in
sbb
cwtl
bound
vpaddsw
pop
fistl
icebp
sub
andl
insb
ret
and
iret
outsl
xor
lcall
inc
sbb
sti
push
stos
mov
push
xor
lret
sti
or
sub
aaa
cmpsl
popf
out
mov
inc
les
cmc
add
push
and
je
inc
in
mov
fcoml
das
ljmp
gs
jns
xchg
sub
mov
out
sub
inc
mov
pop
pop
or
les
sbb
xchg
push
xchg
gs
scas
push
xchg
icebp
sarl
mov
push
xchg
int
sub
jno
les
int
xlat
lea
push
mov
ret
xor
mov
fistps
jmp
pusha
fldl
dec
push
xchg
dec
jle
dec
idiv
xchg
cmp
push
inc
adc
les
cld
fisubl
aad
push
mov
aas
push
push
adc
pop
in
adc
adc
jmp
jno
xor
mov
rorb
dec
jno
mov
adc
int3
push
and
aas
jbe
das
das
and
xchg
cmc
int3
and
imul
cmpl
sbb
out
mov
pushf
aaa
inc
push
xchg
fucom
jp
std
sub
inc
lock
das
adc
std
adc
lods
pusha
sub
in
dec
ss
sub
xchg
jno
push
xchg
aas
int
mov
xchg
ror
jns
push
add
mov
mov
cmpl
mov
mov
push
jmp
adc
dec
or
or
stos
jo
out
rcll
inc
in
mov
aam
loopne
mov
jge
repz
jae
sub
popa
mov
xor
add
inc
cmp
pop
fbld
cld
mul
inc
sbb
cmp
add
std
or
inc
cli
imull
in
and
imul
adc
iret
ror
fstp
addr16
push
repz
and
ficoml
pop
ja
icebp
dec
je
paddb
jle
sysret
mov
repz
mov
cmpsb
mov
cmp
and
imul
xchg
add
out
push
add
sub
add
divl
push
push
pop
adc
mov
rorl
pusha
cmpsl
inc
adc
sub
mov
mov
sub
mov
out
xor
sbb
mov
imul
xor
stos
push
and
es
into
out
or
pop
into
mov
inc
pop
xor
rcrb
cwtl
in
xchg
leave
push
arpl
push
iret
inc
pop
daa
xor
jae
es
xchg
outsb
int3
mov
mov
mov
outsl
mov
sub
std
pop
inc
dec
das
mov
dec
jmp
out
idivb
sbb
sbb
inc
mov
es
and
in
xor
mov
adc
out
cmp
in
dec
repz
dec
add
adc
mov
in
movsb
sbb
pop
or
mov
xor
cmpsb
les
div
add
push
shlb
inc
icebp
repz
adc
mov
sti
push
pop
xor
jb
cld
jbe
call
es
insl
mov
sbb
and
test
or
pop
sub
mov
fwait
mov
mov
fiaddl
jmp
mov
mov
mov
ljmp
adcb
push
dec
stos
stos
aas
rcrb
int3
pop
cmpsl
xchg
mov
dec
mov
mov
push
in
xchg
mov
fcmovnu
mov
repz
and
in
dec
stos
loop
cwtl
into
push
arpl
or
inc
inc
mov
cwtl
aam
mov
cs
xchg
xchg
ret
jnp
js
out
aam
jl
xchg
inc
int
iret
stc
icebp
in
jg
xor
dec
xchg
sbb
imul
inc
arpl
sbb
lret
mov
sub
mov
es
or
cmp
aas
int3
in
push
inc
mov
jbe
push
jno
and
mov
pop
es
lock
adc
mov
dec
push
or
sarb
ja
ja
ficoms
and
xor
movsb
shl
out
cli
push
cmp
pop
push
jbe
js
add
cld
push
xor
int3
mov
stos
ja
cmp
sbb
lock
shll
insl
mov
negl
enter
inc
push
xor
test
faddl
mov
mov
cld
ret
out
jmp
ret
jbe
jmp
scas
sub
movsl
daa
in
movsb
push
cmpsb
orl
xor
lahf
subl
dec
adc
sub
pop
pushf
psubq
out
inc
inc
mov
mov
mov
or
sub
mov
jne
pop
scas
mov
or
xorl
and
push
leave
push
jo
jg
popf
and
pop
popf
nop
push
or
pushf
mov
sub
sbb
adc
cli
stc
mov
jbe
xor
inc
fwait
or
into
and
adc
test
jg
xchg
out
add
or
js
pop
xor
dec
data16
adc
adc
pop
out
loope
jnp
dec
movsl
cmp
sub
lds
sahf
push
int
push
movsb
aas
in
sbb
mov
ret
ss
popa
lret
movsl
push
xchg
jb
out
scas
fsubrl
add
ficoms
mov
sbb
push
cs
jge
inc
push
xlat
dec
std
pushf
xor
sahf
sbb
cmp
sub
add
xor
in
xchg
jb
or
sub
pop
lcall
icebp
or
bound
or
mov
and
sahf
lret
mov
adc
xlat
int
mov
movsb
out
and
ljmp
dec
cmpsl
call
sub
or
gs
inc
dec
andl
sub
mov
xchg
pushf
dec
mov
test
sbb
mov
jno
jle
ret
dec
add
add
icebp
xor
xor
mov
stos
jb
data16
adc
mov
dec
outsb
cmpsl
adc
pushf
pop
pop
in
sarl
fisubs
jmp
sbb
movsb
dec
sub
rorl
fists
mov
aad
cmp
int3
dec
ds
inc
fptan
popf
jae
jnp
adc
mov
xor
arpl
stos
sub
push
mov
adc
sbb
inc
xorb
ja
inc
jecxz
jmp
push
je
mov
roll
lret
andb
inc
test
jle
jmp
in
mov
das
and
in
fildl
out
mov
push
adc
push
lds
aad
lret
push
mov
xor
cwtl
sub
mov
pop
push
mov
fildl
and
xor
sbb
pop
pop
test
shlb
push
jne
jl
xor
sbb
xchg
mov
fimuls
push
lahf
push
je
or
test
mov
into
xchg
add
leave
dec
sahf
jne
cmp
mov
xchg
enter
mov
or
push
and
mov
dec
lock
push
cmp
add
and
fwait
insb
xchg
clc
aas
bnd
ficompl
fstpt
lock
mov
jmp
adc
and
lock
int
arpl
aaa
test
loopne
dec
dec
push
insb
js
sub
mov
dec
in
add
xchg
xor
mov
push
repnz
imul
fwait
insl
shrb
movsb
mov
push
in
fldt
jle
sub
fwait
sub
add
fstl
cwtl
mov
les
jle
pop
inc
fisubl
das
fidivrs
pop
fldenv
xchg
sub
outsb
jne
jb
sbb
popa
test
test
lods
add
jae
pop
ret
cmp
xlat
aaa
xor
in
jbe
and
lods
int3
mov
push
pop
fwait
arpl
cli
dec
sub
js
mov
push
xchg
lahf
out
pop
out
push
dec
mov
in
ljmp
sarb
popf
mov
pop
out
test
push
inc
cmc
mov
push
dec
mov
aaa
movsl
test
mov
int3
add
iret
xor
loopne
lcall
in
cmp
movsl
mov
mov
cmpsl
push
out
ret
out
cld
in
xorl
fcoms
mov
cmpsb
lcall
into
pop
mov
or
push
test
fwait
ret
movsl
and
push
lcall
mov
or
stc
xchg
sub
ds
mov
push
pop
or
lds
pusha
lcall
dec
insb
lods
lods
jne
bound
add
jo
jl
push
mov
push
fstpt
fiaddl
scas
icebp
fisubrl
out
push
mov
punpcklbw
popa
fstps
lock
in
xor
mov
pop
adcl
loopne
dec
rcr
leave
daa
mov
test
pop
pop
fcomi
movsb
dec
push
push
cli
cmpsl
mov
xor
cli
sub
ja
xor
or
fisubs
das
or
in
mov
sti
jo
sbb
call
jmp
lock
repnz
lock
fdivl
scas
xor
add
sarl
movsb
gs
or
pslld
mov
xor
mov
sbbb
inc
jns
aaa
pop
add
lds
sbb
mov
or
cmp
sub
mov
jne
repnz
dec
mov
xor
sub
es
rolb
or
jmp
mov
pop
sbb
repnz
mov
sub
push
or
ja
and
int3
notl
shlb
mov
int
inc
jno
je
repnz
jno
sbb
lcall
inc
in
adc
shl
imul
jb
inc
xor
or
rcll
xchg
loop
sbb
push
fsubr
adc
and
out
or
scas
enter
xchg
cmp
push
ds
call
inc
into
sbb
xchg
mov
and
xchg
daa
dec
nop
stc
nop
xchg
jecxz
dec
in
ror
test
pop
mov
dec
ljmp
ljmp
loop
int
insl
xchg
adc
pop
push
mov
sbb
jge
test
add
jae
pop
push
pop
stos
cmp
cmpsl
call
and
in
or
out
inc
xor
xlat
add
cmp
fisttps
iret
cmpsb
mov
out
leave
inc
sub
je
popf
jbe
cltd
xchg
mov
xchg
add
push
xor
idivl
and
into
outsb
pushf
test
sub
push
and
addl
dec
cmp
scas
pop
xor
popa
loopne
adc
sub
repz
shrl
mov
repnz
imul
out
jmp
pop
pop
testb
push
ljmp
cmp
mov
mov
and
imul
pop
push
push
cltd
adc
dec
cmp
les
loope
and
sub
fs
sbb
test
push
sbb
cld
int3
sbb
adc
push
inc
jne
cmp
jge
pusha
push
dec
dec
or
mov
sbb
je
bound
sbb
adc
push
rorl
mov
adc
mov
xor
xchg
imul
push
loope
imul
ljmp
test
negb
xchg
pop
adc
js
xchg
adc
loope
clc
xchg
and
repz
mov
shrl
aam
int3
test
and
jmp
je
cmc
jmp
aas
cs
lret
mov
mov
jb
cli
shl
sub
in
adc
and
sub
push
ja
and
arpl
lock
add
ret
mov
dec
jle
xor
dec
sub
je
add
dec
addr16
xchg
inc
and
pop
cli
ja
adc
repz
in
fwait
inc
ficomps
sub
jmp
mov
movsl
out
or
clc
sbb
mov
adc
arpl
dec
addr16
shl
pop
mov
sbb
je
pop
adcl
in
mov
loopne
cmp
je
lret
jge
negb
and
and
mov
add
aaa
adc
pusha
stc
pop
jno
jo
insb
xor
sbb
push
jecxz
push
adc
pop
adc
or
hlt
cwtl
into
out
pop
pop
jmp
into
push
out
pop
loope
push
add
inc
andl
jecxz
pop
pop
jle
mov
adc
mov
sbb
testb
ljmp
pop
stos
in
int
xchg
mov
inc
xchg
xor
into
nop
in
popa
leave
out
pop
mov
cmp
bound
adc
xchg
fists
mov
iret
sbb
mov
or
xchg
fidivl
mov
movaps
jmp
outsl
clc
xchg
ficoml
test
adc
imul
pop
jne
mov
lret
stos
cmp
push
and
bound
js
add
pop
mov
mov
pop
adc
push
inc
cli
mov
imul
pop
arpl
inc
imul
jg
out
insb
sub
jo
push
jnp
mov
es
inc
jae
into
inc
fsubs
add
add
cli
test
xor
xchg
mov
jg
hlt
mov
mov
xchg
leave
sub
lea
xlat
stos
hlt
jno
mov
inc
call
push
clc
dec
fs
pushf
lods
cli
mov
out
cli
lret
pushf
xor
pop
andl
out
cmpb
mov
fisubrl
xchg
xchg
bound
cmc
or
push
out
vminsd
cmp
mov
push
pop
movsl
mov
lock
sub
mov
and
ja
mov
sbb
mov
icebp
jg
xor
pop
clc
lahf
pushf
lods
jno
cmp
mov
cmp
shrb
push
lcall
lret
fcmovbe
mov
mov
adc
push
aad
shlb
ss
movsl
enter
and
negl
push
mov
jge
psrlq
insb
arpl
xor
push
sbb
es
mov
push
in
mov
mov
mov
jae
sbb
sub
sbb
je
es
enter
cmpsb
aas
jmp
xchg
cld
pushf
mov
out
and
adc
pop
iret
cld
popf
sbb
iret
imul
jno
inc
lahf
mov
fs
fwait
cli
xchg
add
jno
sbb
add
in
pop
les
ret
gs
inc
mov
mov
sub
adc
popf
jbe
sub
push
mov
scas
lret
mov
insb
les
outsl
pop
outsl
adc
or
addl
sarl
insl
xchg
xor
pushf
shrb
gs
stc
mov
adc
movsl
or
mov
aad
mov
aam
mov
stos
push
enter
dec
jb
test
arpl
mov
andl
push
jg
add
pop
pop
and
cmp
push
add
push
aaa
or
shlb
sbb
cmpsl
push
aam
aaa
mov
gs
dec
dec
cmp
jle
add
sarb
pop
adc
jg
xchg
pop
cmpsb
cmp
mov
pop
mov
mov
cmp
loopne
lcall
scas
sahf
add
adc
add
mov
lock
jp
rorb
imul
shll
add
dec
fdivrs
std
cmp
mov
and
add
pop
or
pop
push
and
in
pushf
das
pop
xor
in
inc
sbb
fmull
fs
jmp
push
lea
lcall
mov
inc
fs
push
enter
push
push
inc
or
in
shll
cli
xchg
sub
rol
add
scas
dec
and
mov
push
pop
dec
fsts
loope
das
lds
adc
xchg
xchg
hlt
in
rclb
push
test
jno
repz
and
or
shll
xor
xchg
std
mov
pop
and
add
je
lcall
clc
mov
imul
lods
and
pop
test
push
mul
insb
ja
insb
pop
pusha
cwtl
ds
jl
push
ret
sub
adc
aad
lret
xor
add
sbb
outsl
cmc
aam
sti
push
mov
jo
xchg
movb
outsb
lea
add
sbb
jne
cmp
jp
and
iret
inc
dec
faddp
mov
inc
and
in
jne,pt
pusha
jnp
adc
or
call
push
push
inc
cmp
dec
sbb
mov
bound
add
addr16
mov
loopne
out
jg
jns
sbb
cmp
dec
or
in
xor
xchg
push
sbb
out
cmp
add
xor
pop
xchg
xlat
les
fs
cmp
mov
mov
push
lods
daa
cli
stc
sbb
push
stos
sbb
push
sbb
and
imul
xorb
test
dec
or
xor
pop
decl
mov
push
movsb
mov
pop
sbb
dec
push
jae
sub
add
aaa
das
jo
lret
shrb
out
sub
movsb
jge
out
movsl
xor
call
mov
push
std
sbb
movsl
outsl
inc
jmp
or
add
pop
sbb
or
stc
fdivr
imul
orb
cmp
xchg
fcmovnu
cmovnp
xchg
push
loope
xchg
pop
and
mov
gs
call
mov
test
rcrb
sbb
mov
adc
out
ljmp
adc
or
aas
lods
clc
leave
and
dec
std
pushf
scas
push
xchg
enter
into
inc
inc
ret
movsl
inc
out
cmp
sbb
or
sahf
je
cld
cmp
lock
int
adcl
mov
repz
loopne,pn
insl
pusha
daa
mov
int3
divl
mov
stos
xor
pop
test
repz
add
inc
das
and
sub
inc
scas
sub
loope
push
ds
cli
mov
ja
mov
and
mov
lahf
jg
mov
leave
out
pop
imul
rcrl
les
cltd
mov
push
xchg
shll
test
pushf
pusha
movsl
les
pop
sub
stos
or
jb
add
sbb
mov
imul
inc
push
incb
mull
jns
loop
movb
orl
popa
push
dec
add
bound
es
rolb
xchg
jmp
mov
test
xor
mov
sti
and
movsb
xchg
pop
xor
xchg
pop
jge
mov
xchg
adc
mov
and
out
lcall
push
shll
nop
push
push
out
pusha
push
fstpt
push
xchg
pusha
sub
daa
push
cs
push
arpl
out
xchg
cmp
xor
dec
mov
push
sbb
ret
sti
rclb
mov
xlat
popf
imul
pop
aaa
push
jnp
and
adc
xor
xor
mov
dec
push
ja
arpl
pop
jb
popa
outsb
jne
in
pusha
inc
inc
mov
mov
mov
pusha
dec
or
popf
or
lea
push
cld
dec
pop
mov
mov
jge
and
adc
mov
loop
inc
jb
or
push
outsl
out
addb
addr16
ficompl
jge
dec
pmulhw
cmp
out
xchg
addr16
aam
xlat
mov
mov
repnz
jns
pop
push
fsubrl
cmp
cwtl
lahf
cld
mov
and
xor
lcall
mov
test
fwait
test
xor
xor
xor
or
mov
ss
jbe
je
bound
iret
lahf
adc
pushl
sbb
pop
loopne
xchg
and
mov
mov
lea
popf
mov
xor
hlt
repnz
mov
cmp
sbb
rclb
fsubr
or
mov
fcmovne
testl
adc
mov
test
fnsave
xchg
imul
push
ss
fs
adc
mov
jno
push
hlt
and
cmp
repz
cli
pop
push
js
sub
in
stc
rcrl
in
gs
arpl
enter
xorl
leave
in
pop
pop
outsb
xor
test
cld
pop
test
and
test
push
xchg
xchg
fcomps
sbb
test
jbe
popa
dec
jno
jle
push
mov
push
mov
rcll
push
pop
in
sti
jp
xchg
inc
add
mov
jmp
xlat
and
cltd
cmpl
cli
test
scas
pop
insl
cltd
inc
sbbl
sbb
cmpsl
mov
sbb
fbstp
in
data16
movsb
fstpl
pop
cmpsl
push
add
or
pop
push
adc
rclb
test
shl
fcompl
push
shll
sbb
mov
dec
rorb
mov
ficoml
pop
ret
push
push
addr16
dec
mov
mov
frstor
mov
and
xchg
int3
xchg
xchg
jge
test
cld
mov
nop
pop
rclb
int3
jecxz
sti
cmp
xor
fs
jge
push
mov
dec
add
mov
paddq
pusha
aaa
repz
out
lcall
cmc
dec
rorb
sub
mov
les
add
cld
dec
stc
and
xor
sbbb
ss
jmp
shlb
sub
out
cmc
adc
and
mov
ret
cmp
cwtl
imul
and
or
stos
fwait
cmp
daa
mov
jp
dec
bound
mov
jb
mov
ret
xchg
push
inc
mov
orb
xchg
mov
divl
jbe
stc
fs
sub
mov
adc
xor
and
or
mov
inc
aam
push
in
sub
pop
or
aaa
sub
pop
ja
and
in
and
das
in
jg
stc
movsl
sub
add
les
gs
and
je
and
dec
fbstp
mov
mov
in
test
lcall
and
cltd
sub
pop
pop
mov
cmp
adc
cmp
mov
pop
xchg
xor
fwait
rorb
push
and
in
cmp
xor
mov
and
dec
add
pop
mov
imul
or
aad
inc
inc
fwait
push
add
dec
fs
xor
inc
push
mov
stos
mov
js
dec
int3
test
mov
inc
add
pusha
xchg
cmpsl
sbb
sbb
dec
lock
test
inc
xchg
insl
ljmp
ss
xor
pop
ja
sbb
xor
xor
xor
xchg
je
mov
aaa
fiaddl
sub
mov
and
dec
jne
push
addb
pop
adc
aaa
aad
scas
aad
shrl
ja
jb
pushf
add
ljmp
jne
jo
inc
lds
xchg
loope
cmp
in
insb
cvtpi2ps
jmp
test
xchg
pop
aaa
out
mov
fwait
movsl
or
lock
xchg
mov
popa
aad
or
shll
sub
dec
ljmp
ss
popf
sbb
xchg
dec
stos
mov
or
xor
jp
sbb
and
inc
mov
in
pop
nop
aad
sbb
arpl
ficoms
pop
ds
push
push
ffreep
cmp
cmp
and
cmp
pop
sub
cmp
out
in
fstps
scas
shrb
mov
je
rol
aas
into
in
push
insb
mov
inc
and
popf
sbb
imul
xchg
pop
outsl
xchg
adc
cmp
or
pop
jecxz
mov
and
pop
push
in
push
mov
out
movsb
mov
fwait
lock
xor
test
inc
scas
popf
or
cli
cmp
mov
sbb
negl
sbbb
test
push
dec
cmp
cmpsl
call
adc
mov
mov
and
stos
ljmp
adc
pop
xor
or
ret
loopne
push
xor
movsl
in
dec
dec
ljmp
cmp
ljmp
xor
dec
push
cwtl
cmp
cmp
mov
cmp
pusha
stos
cld
nop
mov
push
repz
shll
iret
mov
in
mov
repz
adcb
pusha
ret
sub
aam
into
insb
adc
push
add
test
cmpsl
aas
scas
pop
daa
jno
xor
and
inc
mov
pop
sahf
mov
imul
push
dec
scas
ds
mov
sub
xlat
cmp
sbb
push
add
xchg
flds
jmp
fs
mov
pushf
addr16
mov
fisttpl
icebp
mov
inc
sahf
cmpsl
cmp
or
cmp
int3
lock
pop
loop
maxps
ret
outsb
jge
pop
lret
push
cld
loop
inc
add
out
shl
xchg
out
out
rolb
data16
test
cmpsl
shlb
ljmp
lahf
or
ds
xor
inc
push
outsl
xchg
shr
mov
je
test
aam
push
mov
aaa
dec
push
sub
xor
dec
push
fmull
arpl
cmc
jl
mov
xlat
pop
dec
lods
leave
popf
fldenv
icebp
inc
loop
push
or
call
vminpd
std
clc
mov
lret
fwait
sbb
insb
sbb
inc
sub
enter
cli
cmp
sub
mov
or
add
add
jbe
mov
sbb
in
jbe
inc
mov
repnz
ror
mov
sarb
sub
fmulp
jg
push
sub
cmc
aas
adc
pushf
sarl
dec
pop
xor
inc
mov
sub
data16
push
shlb
mov
mov
iret
mov
xor
ss
mov
sbb
cmp
mov
fwait
mov
mov
inc
cmp
loopne
jle
or
xchg
inc
std
adc
and
pop
movsb
stos
loope
fstps
imul
cs
pop
xlat
test
lahf
jno
inc
push
push
loop
jno
or
les
in
lret
add
fists
stos
popa
mov
cmp
inc
in
testl
roll
bound
inc
mov
sbb
dec
sarl
xchg
ret
sbb
hlt
insb
jecxz
call
mov
mov
adc
jl
mov
sbb
fmul
rcll
bound
adc
jnp
into
pop
add
xor
or
cltd
mov
cmpb
mov
dec
xchg
lcall
dec
jb
adc
pop
lcall
cmpsl
xor
cli
lock
nop
shlb
xlat
fnsave
jg
idivb
inc
rcrb
mov
mov
cld
lcall
in
js
xchg
push
clc
adc
lods
jno
cwtl
adc
dec
sbb
adc
push
xchg
in
iret
add
lret
adc
lock
inc
data16
xor
sub
dec
jge
push
dec
sub
stc
inc
daa
movsb
test
fwait
imul
add
xor
ret
int
stc
fisubl
sbbb
adc
pop
jp
pop
mov
cmpsb
xchg
adc
clc
addl
mov
stos
jmp
and
fcompl
in
add
rorl
sub
dec
out
daa
or
add
je
mov
sahf
in
mov
movsb
ds
test
add
add
popf
ljmp
push
aas
push
aas
cwtl
push
push
icebp
inc
outsl
sbb
xchg
mov
jge
aad
sbb
or
out
dec
and
push
cmp
pop
icebp
dec
inc
mov
imul
pusha
jmp
addr16
sti
stos
fstp
inc
imul
xchg
imul
mov
cmp
inc
pop
xchg
push
jne
dec
lcall
outsl
lods
jg
fs
and
inc
mov
lods
repnz
xlat
jecxz
mov
jnp
lods
sbb
sbb
push
pop
xchg
in
lret
pop
sarl
test
fsubs
and
jl
jno
cmp
adc
sbb
sbb
cli
mov
xor
jbe
sbb
sbb
leave
adc
sub
dec
push
push
mov
fs
clc
mov
ds
loop
jns
pop
pop
add
pop
mov
adc
out
enter
cs
lods
sub
xchg
xchg
fnstcw
into
scas
movb
and
shrb
or
jmp
fistpll
fbld
jle
pop
mov
xchg
data16
adc
imul
xor
push
adc
push
data16
repnz
in
jne
adc
jno
or
rcll
or
gs
lcall
fmul
xchg
push
jb
insb
in
jbe
sbb
sub
sbb
push
push
repz
jecxz
mov
mov
jecxz
and
scas
test
xchg
sbb
adc
adc
pop
arpl
test
mov
testb
inc
push
mov
xchg
fwait
nop
enter
lea
push
mov
sub
jns
inc
mov
mov
mov
lds
lea
mov
test
ljmp
lret
adc
pop
or
lret
dec
xchg
imul
mov
sub
lock
sub
pop
add
pop
hlt
cmc
sbb
cli
call
imul
dec
lds
jnp
jmp
mov
pushf
aas
push
jmp
dec
repz
in
ds
xor
daa
xor
out
jmp
mov
mov
mov
push
es
cmp
xchg
cmp
fs
imul
stos
ss
lahf
push
xchg
xchg
push
out
loopne
sahf
popf
into
push
mov
push
and
xor
mov
adc
repz
scas
or
adc
dec
stos
les
insl
dec
cltd
pop
jne
jecxz
adc
sbb
loope
xchg
sbb
dec
cld
cmp
sub
pop
and
insl
cmp
push
cli
stc
lret
or
in
pause
sub
cmpsb
cmpsb
jnp
mov
cli
jecxz
adc
rcrb
test
stos
roll
jne
lock
xchg
cltd
xchg
fidivl
mov
into
push
sbb
ljmp
sub
leave
jo
jne
or
les
push
adc
stos
mov
mov
int
stos
jg
les
imul
mov
inc
and
lock
aam
xor
std
movsl
adc
push
or
pop
inc
sub
push
pop
js
xor
cmp
xor
mov
repz
sub
in
imul
rolb
mov
repnz
sarb
subb
lds
nop
rorb
js
mov
adc
mov
jns
jge
push
insl
xchg
sub
jno
and
gs
mov
and
jae
test
pop
inc
ffree
rcrb
sbb
push
dec
lock
jns
pop
decl
mov
test
in
and
out
cmp
scas
pusha
outsb
jge
stc
je
pop
xchg
add
add
pop
sbb
fcmovnu
adc
dec
shll
lahf
mov
mov
mov
jne
jns
int3
roll
punpckhdq
cmp
jl
sub
out
mov
mov
addr16
xchg
push
jge
mov
cld
pop
adc
in
sbb
gs
and
mov
dec
fwait
and
gs
bound
cmp
jp
hlt
imul
xchg
loopne
cld
mov
jl
cmpb
xor
ds
fadds
not
and
in
loopne
adc
cli
jl
and
popw
in
push
jmp
fs
imul
addr16
out
lahf
adc
pop
adc
aaa
jg
mov
push
ljmp
mov
ljmp
pop
add
mov
cwtl
mov
jg
dec
pop
imul
cmp
iret
inc
inc
mov
sbb
xchg
rolb
and
adc
push
popa
push
xor
std
gs
loop
lds
mov
mov
icebp
ret
test
stos
or
xchg
cltd
js
das
subps
cmp
adcl
in
das
cmp
push
and
jbe
imul
or
inc
push
inc
jmp
sub
loop
mov
jmp
icebp
pop
fcoml
repnz
outsb
push
jb
xchg
jmp
push
cmp
mov
mov
dec
mov
push
pushf
insb
xor
add
mov
inc
mov
add
negl
into
iret
cltd
dec
push
vaddps
jns
xchg
loopne
push
idivl
xchg
sbb
and
popa
sub
inc
mov
pop
clc
jns
pop
jmp
mov
ficomps
ljmp
data16
fdivrs
insl
sub
popw
insb
into
push
xchg
xchg
icebp
adc
and
popf
outsb
or
mov
inc
jbe
push
pop
ja
int
stos
push
popf
out
cltd
pop
sbb
push
stos
es
notl
andl
ret
je
sbb
daa
mov
sbb
cwtl
add
push
movntq
out
out
in
pop
je
movsb
es
add
cmpsb
lods
ljmp
leave
fnstsw
icebp
xchg
xor
popf
shlb
push
sbb
adc
in
sub
cmpsb
mov
sub
in
sbb
fists
repz
push
jne
movsb
xchg
xor
or
clc
push
aas
mov
andl
sbb
cmpsb
insb
pop
cmpsb
xorl
and
repz
mov
in
add
sbb
push
dec
lea
push
push
xor
jnp
fcomps
jl
pop
rorb
fwait
inc
push
dec
dec
iret
and
push
push
sub
test
pop
and
mov
mov
xor
mov
adc
into
inc
pop
mov
repnz
jae
mov
sbb
leave
lahf
sub
into
loope
out
and
ljmp
xchg
fldenv
sbb
xchg
dec
jg
loope
in
inc
int
adc
cmpsl
imull
ja
xchg
js
out
xchg
xchg
push
cld
loopne
cmp
dec
sahf
cmp
mov
cmp
shlb
clc
fdivr
sbb
push
cmp
xchg
sub
out
cli
lcall
dec
pop
inc
cwtl
lret
clc
sti
fstl
lock
pop
jmp
and
jmp
repz
lcall
addw
jecxz
repnz
sahf
sub
mov
jl
pop
std
adc
mov
fwait
xor
jge
xchg
ret
insl
sub
ficompl
adc
jg
pop
cmc
mov
fcomi
pop
pop
push
repz
aam
int3
movsb
adc
sub
dec
pop
popa
fcoms
inc
je
sbb
hlt
lahf
imul
dec
mov
movb
xlat
sub
cmp
jo
out
push
jae
popf
and
movq
stc
fistl
xchg
push
cmp
cmpb
adc
jecxz
in
lret
scas
loop
xor
dec
mov
jne
add
add
sub
pop
std
int
xor
or
adc
mov
lret
add
fwait
cmp
in
dec
or
xorl
jbe
cmp
push
mulb
cmp
sub
pop
xlat
imul
xchg
pop
inc
jg
scas
adc
xlat
fldl
aas
mov
nop
xchg
in
sbb
daa
push
dec
sbb
out
cmpsb
mov
mov
out
out
adc
es
lcall
fwait
inc
loopne
data16
ss
push
mov
sub
ret
insb
les
adc
xor
outsb
cmp
sarl
inc
in
cmp
out
sub
dec
pop
and
jge
outsb
icebp
mov
iret
rclb
lahf
sbb
in
sbb
test
out
mov
mov
cmp
jmp
xchg
or
in
jne
jmp
jge
pop
fcoml
in
pop
mov
sub
xor
mov
adc
stc
aam
mov
fimull
popa
and
jg
fs
scas
cmp
fs
data16
inc
clc
test
leave
cmp
mov
aaa
pop
or
mov
stos
xchg
mov
jb
mov
out
bound
jae
push
lods
call
mov
icebp
xchg
push
std
and
adc
sub
push
mov
mov
xor
jp
std
add
lret
out
sbbb
pop
cmpsl
jle
cmp
push
int3
popf
fisubs
in
fcmovbe
adc
pop
jg
cmc
jl
inc
call
inc
icebp
dec
daa
sbb
fcompl
addb
int
sub
adc
xchg
or
addr16
out
sbb
mov
dec
xchg
push
and
pop
movsb
ljmp
ss
xchg
jo
lods
xchg
ror
mov
xchg
cmp
iret
fsubrl
and
jbe
scas
lods
jnp
inc
sbbl
adc
mov
frstor
push
mov
cmc
push
xchg
jbe
xchg
loope
pushf
cmc
jle
lea
lock
or
and
test
and
inc
or
pusha
int3
lea
hlt
mov
or
push
outsl
dec
cwtl
add
jns
enter
pop
xor
xor
add
jmp
mov
imul
and
xchg
pop
mov
cmpsb
in
cmpsl
stos
sub
cs
shll
mov
scas
cmp
push
shll
bound
cmp
fadds
xorl
push
sbbl
mov
movntps
psrlw
cwtl
in
cmp
pop
adc
rorl
in
jns
stc
cmp
xor
pop
jb
test
ucomiss
dec
mul
pop
orl
dec
jbe
inc
repz
stc
or
cwtl
ds
xor
jne
pop
pop
dec
fiaddl
cmp
into
inc
xor
pop
popa
lret
xchg
out
xchg
xchg
cmp
idivb
add
in
dec
mov
dec
add
and
jg
adc
push
loopne
test
cmp
dec
jl
mov
movsb
sbb
push
jg
imul
sbb
ret
xor
sbb
jg
mov
inc
lods
repnz
mov
or
xchg
inc
push
xchg
xchg
dec
adc
fcoms
and
mov
in
lods
push
rorb
fmull
sbbb
mov
jnp
out
mov
int3
mov
push
gs
jle
bound
push
mov
les
or
rclb
and
ja
push
jg
sbb
pop
insl
inc
cmp
out
lds
mov
dec
mov
add
sub
loop
hlt
loop
mov
push
nop
setl
xchg
inc
aam
lret
jecxz
fwait
sbb
pop
fiaddl
sahf
jbe
das
add
push
cld
jp
dec
test
mov
stc
es
xor
aad
adc
or
mov
insb
rorb
or
pop
js
pop
xor
idivb
and
imul
imul
sub
data16
cltd
jb
nop
xchg
mov
jecxz
mov
cwtl
cld
pop
sti
mov
or
dec
pop
movsb
xor
xor
jmp
andl
or
adc
xor
pop
ljmp
cmp
xchg
aam
in
and
add
pusha
xchg
adc
jecxz
das
add
mov
xchg
call
inc
and
mov
mov
mov
dec
mov
or
outsb
outsl
into
ret
dec
xor
popf
pop
stos
xchg
mov
adc
stos
incb
repnz
cmp
popa
cmpsl
jo
in
lods
jmp
and
xchg
call
sub
sar
push
mov
loop
mov
or
sbb
cmpsb
sbb
mov
push
mov
jbe
push
jecxz
mov
adcb
fimull
je
into
out
dec
sbb
js
push
adc
outsl
fmull
push
ret
cmp
leave
jnp
jl
es
adc
movsl
push
xchg
and
inc
xchg
adc
and
jne
dec
aas
in
xor
or
add
testb
in
out
pusha
leave
push
cmp
outsb
and
jne
cli
jns
bound
jge
push
push
iret
dec
cs
mov
iret
xchg
lods
pop
stos
or
add
mov
sbb
sub
testb
out
out
pop
pop
into
and
jmp
lret
cld
bound
dec
xorl
in
pcmpeqw
cld
pop
mov
pop
pusha
xor
and
lds
pop
dec
add
fisubrs
jne
mov
sarl
xchg
aam
lods
loope
lret
rorb
icebp
push
repnz
stos
leave
outsb
sub
jmp
mov
jp
sub
shl
mov
inc
outsb
dec
in
rol
pop
es
adc
in
xor
cmp
aaa
sbb
cmpsb
sub
lret
cmp
sub
sarb
sub
std
insl
in
pop
shl
dec
rorb
mov
adc
mov
fisubs
and
xor
and
rorb
jae
push
loop
cltd
jp
xchg
test
test
ja
and
inc
mov
fldcw
inc
cmpsb
rcr
ret
sub
gs
in
repnz
push
pop
sti
jmp
push
sbb
jg
in
inc
lds
aad
jns
sarl
cmp
jnp
les
push
clc
jecxz
sub
jno
ficoml
imul
nop
xor
rolb
cvttps2pi
sti
lret
lret
pop
lds
scas
into
lret
sbb
jge
insl
fildll
mov
push
lret
jl
sahf
std
rclb
loop
pop
mov
jp
mov
test
mov
cmp
in
mov
sub
inc
sbb
jmp
mov
xchg
dec
dec
jge
test
nop
jno
mov
enter
pushf
mov
loop
dec
push
lret
mov
out
mov
mov
rolb
test
mov
xchg
cmp
out
cmp
jmp
push
movsb
inc
fcomps
fisubs
lahf
jmp
imul
mov
inc
dec
mov
cltd
pop
hlt
cmp
fs
dec
mov
fs
pop
dec
ja
arpl
jne
test
ljmp
xchg
fldl
cmpsb
leave
inc
ret
sbb
dec
fistpll
jne
daa
xchg
test
ss
lock
jg
loope
sbb
push
into
add
pop
lret
xor
mov
xchg
hlt
movl
or
out
addr16
inc
cmp
fisubl
inc
and
xor
cmp
inc
rorl
loope
jmp
sbb
sbb
or
test
loop
cmp
mov
jno
xor
dec
push
fldl
push
repz
loope
leave
push
pop
daa
mov
sbb
ja
xor
sarl
add
xchg
jl
shrl
or
in
push
in
mov
mov
popa
xchg
insl
inc
js,pn
fbld
sbb
jno
call
adc
pop
or
fidivrs
xor
sbb
sahf
mov
ljmp
fisubrl
cmp
mov
lods
push
mov
pop
cltd
add
rorb
imulb
dec
sbb
cmpsl
sub
pop
test
jp
push
ja
out
insb
fwait
cmp
cmp
adc
jg
ja
subb
cmpsb
and
sti
cmp
dec
hlt
ja
popa
mov
adc
inc
pop
fstp
mov
xor
movsb
hlt
pop
and
outsb
cmp
push
cmp
push
xchg
es
subps
bound
cmp
repnz
roll
add
jge
aas
fcoms
pushf
jae
xchg
sar
loopne
dec
pop
push
fsubrs
cmp
stos
jge
aas
mov
lods
push
jns
pop
jmp
jle
jo
adc
mov
sub
repz
cmp
xchg
rol
push
sahf
cmp
shlb
cmp
sti
mov
cmp
pushf
jp
lds
adc
sub
mov
fnstsw
fildll
mov
push
sbbl
rcll
xchg
scas
stc
aad
lods
dec
idiv
sbb
cltd
lock
cmc
mov
dec
sahf
fstpl
xchg
mov
sub
push
addr16
pop
jb
leave
icebp
mov
and
loopne
sub
lcallw
push
data16
pop
lds
jo
and
push
popf
pop
out
stos
sbb
lcall
cld
je
sti
jl
jl
movsb
cli
adc
inc
in
sub
lods
rcrl
daa
adc
ja
sahf
shll
pop
and
cmp
jno
nop
into
in
jns
xor
inc
mov
arpl
mov
mov
adc
fwait
lea
cltd
test
outsl
xchg
repnz
sub
push
out
repnz
cmc
mov
imull
enter
cmp
sub
mov
sub
mov
lcall
pcmpeqb
mov
adc
jnp
mov
ljmp
sbb
xor
dec
mov
xchg
out
and
shl
push
xor
shlb
lock
jmp
jo
mov
push
fsubrl
add
pop
push
jp
repz
call
aad
xchg
xchg
mov
popa
cmpsl
ds
pop
cmc
nop
inc
or
icebp
lret
int3
fimull
cmc
cmp
jne
out
mov
jb
cltd
jae
daa
add
xchg
cwtl
adcl
leave
stc
enter
jb
mov
xchg
xor
test
xchg
ret
test
mov
adc
int3
clc
xor
and
pop
pop
xorb
dec
data16
sub
jbe
lea
xchg
mov
adc
ret
outsb
ja
in
sbb
lcall
bound
sub
je
mov
mov
iret
xchg
nop
pushf
dec
stc
popa
leave
mov
mov
aas
in
jbe
cmc
dec
mov
mov
inc
and
add
xchg
cmp
div
cmp
dec
mov
stos
jbe
sub
xchg
or
push
and
int
push
js
sbb
push
fisubl
jnp
loope
jbe
or
or
pop
test
or
sbb
and
sub
in
and
aam
cwtl
and
sub
pop
mov
mov
loop
sub
pop
jno
mov
push
xchg
outsl
aas
mov
hlt
push
das
and
pusha
hlt
rclb
aaa
cmpsb
addb
inc
iret
mov
inc
inc
jle
lahf
inc
fs
pushf
xchg
jmp
shrb
je
fld
jmp
pusha
jp
sub
notl
mov
sbb
xchg
mov
mov
aad
in
iret
iret
mov
mov
mov
sti
inc
pop
aam
int3
mov
adc
fs
jne
dec
ds
dec
inc
mov
jmp
aas
in
push
xchg
inc
test
clc
jnp
xchg
jmp
in
movaps
xor
ret
push
mov
loope
jp
movsb
lahf
repnz
arpl
xor
jo
inc
arpl
xchg
push
and
loopne
add
fbld
push
push
sub
push
push
pop
gs
leave
repnz
cmpsb
out
cmpsb
in
call
cmp
and
add
adc
in
push
sbb
nop
js
xchg
movsb
pop
int
jmp
adcb
sahf
outsl
das
pop
or
ja
fstpt
jmp
sarb
mov
shll
jo
jmp
icebp
dec
add
mov
imul
xlat
out
sbb
xor
test
icebp
jp
movsl
add
enter
lock
in
cmpsb
and
xor
xor
sub
addr16
in
sarb
add
jae
shrb
cltd
or
cmpb
data16
outsb
les
insb
repz
jecxz
sarl
pushf
aad
pop
cs
mov
inc
sub
add
repnz
cmc
inc
mov
adc
insl
lods
xor
mov
adc
in
mov
sti
sub
imul
sbb
jno
lea
xchg
jnp
mov
push
cmc
push
mov
test
call
inc
push
sub
test
cmp
pop
insl
mov
pop
out
mov
sbb
jle
mov
out
dec
repnz
adc
mov
or
rcrl
jmp
lods
xchg
xor
sub
divb
jge
insb
rorl
movsl
sub
push
xchg
add
pop
push
movsb
or
repnz
mov
loop
xorb
insb
push
popf
xor
xor
jnp
in
repnz
fldcw
sbb
sub
mov
xlat
push
ja
push
and
shlb
push
mov
sub
cmp
adc
mov
and
addb
push
fnclex
test
or
fsubl
and
sub
and
inc
jge
in
data16
or
stos
xor
je
dec
push
pop
mov
outsl
out
sbb
xchg
mov
push
xchg
xor
lahf
dec
mov
fisubrs
popf
arpl
inc
mov
loop
popf
clc
xchg
rcr
push
dec
ret
mov
insb
aas
pop
xchg
daa
xlat
enter
rcll
call
and
xchg
sbb
stos
cmovno
jae
inc
pop
and
or
mov
jbe
sub
or
cmp
aad
fimuls
call
adc
pop
sub
bound
push
xchg
mov
jg
mov
shr
xor
shll
xchg
and
lahf
scas
adc
pop
push
dec
pop
push
fsubrl
hlt
jb
push
push
pop
out
or
fstps
mov
adc
fists
cmc
shll
mov
push
sahf
xchg
pusha
ret
or
in
xchg
lcall
xor
and
testl
push
outsl
jge
loopne
std
imul
push
push
mov
pushf
xchg
or
jl
sbbb
test
out
test
sub
mov
mov
inc
jg
pop
fdivs
movsb
ds
flds
mov
insb
mov
and
xchg
jg
add
addr16
jmp
xchg
mov
fwait
out
jns
rcll
je
lods
cmpsl
sub
sbb
xor
cmp
mov
out
cmp
inc
or
xlat
mov
lcall
or
jecxz
jno
add
add
out
mov
xor
sbb
cmpsl
jnp
and
xor
cmpsl
add
aam
sub
add
data16
je
mov
add
ret
js
xchg
mov
mov
mov
cmp
and
loop
pmaxsw
movl
hlt
mov
mov
ret
push
cmp
cmp
push
cmp
pop
pop
xor
test
repz
fiadds
mov
cld
cmp
xchg
cmp
cli
out
mov
movsl
fadds
mov
push
cmp
int
inc
out
inc
sub
mov
cwtl
dec
sbb
je
xlat
cmp
sbb
inc
adc
cli
into
adc
hlt
push
imul
and
dec
popf
test
ljmp
dec
in
rorb
test
pop
lods
test
inc
repz
sbb
js
dec
enter
inc
jnp
jp
shrb
xor
out
adc
cwtl
lret
mov
rcrb
ret
lret
pop
jb
mov
mov
mov
and
cmp
mov
dec
sub
xchg
and
push
push
sub
loope
push
loop
incb
mov
cmp
adc
pop
cmc
mov
cmpsl
pop
lock
mov
jmp
fdivrl
push
push
push
jmp
push
jge
jge
inc
push
in
push
jbe
xor
push
rcll
adc
lds
lret
dec
stos
out
pop
jl
add
leave
add
nop
icebp
inc
mov
ret
pop
jnp
aaa
cwtl
negl
shl
std
stc
movsb
mov
mov
xchg
and
xchg
xchg
popa
mov
mov
in
fisubs
mov
sbb
cmp
aas
popl
xlat
addb
add
testl
or
inc
adc
rorb
aam
jne
lret
icebp
dec
sbb
mov
jae
adc
add
add
adc
jae
push
stos
xchg
mov
fs
and
cmpsl
and
mov
pop
cmp
adc
mov
sahf
inc
call
icebp
movsl
add
jo
in
in
inc
pop
dec
fs
fwait
dec
imul
cmp
jbe
mov
mov
add
xchg
mov
test
iret
cld
adc
adc
add
in
rcrw
and
repnz
adc
into
out
jns
popa
pop
in
mov
adcl
fldt
or
push
imul
outsb
jae
ret
leave
out
lahf
fcoml
test
test
aas
push
push
push
int
mov
jnp
push
sahf
add
insb
out
ds
mov
jge
cmpsl
xor
lock
and
mull
xchg
in
mov
jp
repnz
loop
adc
dec
test
dec
xor
jno
pop
rol
dec
mov
dec
repnz
sub
into
rorl
sbb
xchg
loope
mov
popf
jge
xchg
ds
sub
call
insl
call
pop
mov
out
or
push
lret
jae
dec
stos
adc
daa
aam
pusha
insl
js
js
into
mov
inc
movsl
or
mov
mov
ret
xor
sub
gs
jl
lcall
ja
testl
daa
add
mov
adc
ss
and
sbb
std
mov
lcall
pop
pushl
cwtl
pop
les
dec
test
xor
jge
xor
loope
mov
lea
std
mov
mov
xchg
enter
xchg
int
mov
mov
dec
scas
fwait
inc
aam
dec
mov
insb
std
sub
popa
sub
dec
fisubl
adc
test
cmp
pusha
dec
fwait
inc
pop
xchg
int
dec
mov
out
inc
insl
arpl
es
jmp
push
pop
sub
dec
or
in
gs
pop
add
xchg
aas
nop
add
aam
nop
cmpsb
inc
push
and
test
out
jmp
sahf
inc
sbbl
insl
or
inc
push
jmp
add
pop
adc
push
jmp
xchg
lahf
sti
cld
sahf
pusha
xor
push
add
lods
mov
setl
mov
mov
in
cmp
adc
out
sbbl
fwait
xor
pop
gs
rorl
xchg
in
mov
negl
in
xlat
mov
push
and
push
cmp
jnp
sub
push
push
xchg
stc
mov
xchg
stos
rclb
ret
daa
std
ret
das
adc
cmp
in
icebp
mov
pop
pop
push
inc
add
popa
daa
test
sub
mov
mov
and
push
and
sub
fs
dec
mov
mov
das
fwait
jb
rcrl
scas
loope
sbb
or
or
jb
dec
test
mov
cld
stos
addr16
mov
or
out
push
mov
test
sarb
pushf
outsl
lods
aad
push
add
sbb
fwait
dec
mov
sarb
mov
or
test
sar
cs
pop
jge
aam
stos
push
jl
push
sub
dec
lods
popf
xor
cmp
stos
jae
push
adc
into
test
fidivl
push
outsb
add
in
stos
fildll
jg
movl
jne
test
lods
add
fs
jecxz
loope
or
mov
scas
mov
pushf
gs
cmp
push
subb
cmp
lea
mov
jne
sbb
xor
fcompl
adc
push
xchg
or
mov
push
or
cmp
outsl
add
jmp
ret
rcll
popf
cli
jae
je
mov
repz
add
scas
cltd
mov
int
lcall
into
pop
ljmp
or
imul
pop
mov
arpl
popf
lods
in
jns
adc
dec
pop
iret
sbb
mov
popf
sbb
out
aam
mov
adc
int
cmp
std
mov
out
out
pop
jmp
decb
add
and
dec
or
pop
dec
ret
imul
out
cmp
push
cs
in
icebp
add
jmp
jmp
mov
mov
inc
and
add
and
jl
xchg
arpl
aam
sub
ficomps
repnz
sbb
xchg
jo
xlat
cmp
addl
jg
and
divb
repz
ds
jge
jecxz
mov
nop
ret
out
adc
stos
pop
in
xchg
push
inc
jg
mov
xlat
dec
and
ljmp
cmp
or
stos
test
and
mov
mov
cmp
push
adc
or
mov
sbb
outsb
pop
iret
lea
shlb
stos
xchg
push
enter
ja
xor
in
mov
repnz
pusha
jge
jns
imul
add
dec
out
arpl
push
cwtl
or
jo
lods
jo
lcall
push
cmp
mov
sbb
adc
loopne
sub
imul
adc
rcl
jg
int
movsb
mov
sbb
dec
dec
adc
movsb
adc
fcmovnbe
addr16
test
pop
insb
jno
loopne
cmp
push
inc
mov
dec
mov
fisubl
sub
xor
dec
arpl
sti
sub
lret
jge
test
cwtl
in
mov
push
pushf
adc
outsl
or
mov
mov
in
mov
movsb
enter
jge
pop
inc
repnz
stc
sbbl
stos
sbb
fmuls
and
test
notl
dec
cmc
xchg
popa
mov
pop
jae
dec
sbbl
inc
je
aaa
lcall
movsb
dec
out
or
loop
cmp
movsl
test
pop
adc
cmp
iret
mov
lret
jl
shlb
add
cltd
inc
adc
sarb
movsb
dec
or
addl
gs
sbb
mov
sub
cmp
sbb
imul
sub
fmull
imul
inc
adc
pop
push
cmp
test
in
add
ljmp
mov
cmp
imull
xchg
jmp
cmp
arpl
and
inc
loope
mov
in
jbe
add
shrl
adc
lret
pop
lods
int3
xchg
dec
mov
pop
clc
test
jno
js
cmp
push
mov
xchg
shl
packuswb
add
mov
sahf
popa
pop
movsl
mov
call
cmp
dec
cmp
mov
sahf
dec
gs
jp
or
pusha
cs
xchg
inc
xorb
cwtl
xor
pop
xchg
push
dec
mov
std
dec
jecxz
call
xchg
bound
fwait
jb
jecxz
shl
mov
push
popf
movsb
into
push
arpl
add
adc
sbb
jge
xorl
mov
and
in
int
mov
mov
aaa
cmc
sbb
mov
imul
ret
lods
and
push
xchg
jl
sarl
add
xlat
in
adc
jno
mov
out
in
jns
test
lahf
jecxz
adc
adc
out
in
cltd
cwtl
cli
addr16
insb
stos
lahf
imul
clc
lahf
sbb
test
mov
pop
mov
xchg
push
mov
fstp
or
cmp
jb
nop
shl
inc
mov
xor
inc
and
push
cltd
lcall
fidivs
pushf
jno
loope
rcrl
lcall
pop
fisubrs
mov
fstpt
add
shll
call
ljmp
lahf
sub
xchg
in
dec
movsl
outsb
fsts
scas
mov
inc
rolb
in
xor
sbb
test
scas
lret
adc
push
fcomi
jb
repz
cmp
mov
inc
fbld
xor
nop
mov
cmp
push
ffreep
ds
mov
or
out
imul
or
pushf
lahf
fisubrl
mov
mov
ja
pop
leave
into
cs
mov
inc
or
sub
mov
shlw
mov
or
and
das
je
jmp
aam
ljmp
push
stc
mov
push
inc
test
push
leave
xor
pushf
dec
dec
xchg
and
dec
xor
dec
xchg
dec
cmp
cmp
push
jns
jae
data16
xor
mov
into
xchg
pop
jmp
stos
mov
adc
imul
test
dec
mov
icebp
je
repz
shlb
adc
jmp
outsl
push
jae
pop
test
lods
leave
cli
fiadds
int
aad
push
lcall
cmp
cmp
outsb
or
rclb
sbb
fbstp
sbb
popa
insb
sahf
out
lea
inc
or
cmp
and
mov
and
xchg
ret
cmp
clc
and
xchg
mov
and
sub
fwait
jmp
mov
jle
cwtl
cmpl
sahf
mov
insl
xor
out
mov
xlat
lds
xchg
test
orb
sti
std
stos
popa
lods
dec
mov
dec
es
mov
fwait
dec
jno
inc
and
adcl
fcoms
sbb
jnp
xchg
ret
fucomi
bound
les
jo
mov
bound
lods
int3
push
jmp
or
int3
aas
popa
cmp
lret
adc
jo
dec
stos
or
jae
mov
out
xchg
andl
dec
jne
jo
dec
or
mov
stos
aaa
pop
mov
mov
sub
sub
lods
cmp
xorb
loope
hlt
mov
test
out
mov
fdivr
push
xchg
inc
cmp
fcompl
aaa
test
or
loop
data16
in
notb
scas
out
rolb
lock
lods
into
enter
notl
jnp
bound
shrl
mov
movhps
push
sti
cs
dec
sbb
js
sbb
fwait
xor
adc
add
data16
dec
js
and
jo
sahf
and
add
push
inc
fcomi
cmp
cmp
aas
jle
lret
cmpsb
enter
sbbb
push
adc
pop
addl
pop
jge
inc
mov
in
sbb
pushf
mov
sub
sbb
fwait
pop
jo
hlt
in
repnz
cmp
push
rcrl
xchg
aaa
mov
mov
sbb
mov
jbe
sbb
inc
sbb
mov
imul
inc
sahf
adc
bswap
jecxz
adcb
in
stos
pop
inc
mov
xor
push
add
rorb
or
fisubrl
xor
and
mov
jne
mov
sub
sbb
je
mov
dec
add
and
lret
cmpsl
lock
push
sbbl
jns
inc
int
cmp
add
ja
dec
imull
xchg
cwtl
scas
mov
roll
dec
mov
repnz
sbb
lret
cmp
inc
xor
adc
arpl
mov
xchg
pop
or
pushl
xor
lahf
jle
hlt
ds
mov
stos
pop
or
dec
jmp
clc
ud0
jmp
jo
add
push
jb
aad
lahf
fwait
mul
xlat
jb
mov
mov
push
or
adc
adcl
std
adc
mov
push
push
pop
ja
cmp
std
jle
xor
in
mul
mov
rcrb
push
cwtl
ret
cmp
ds
xchg
pusha
ret
mov
add
or
scas
dec
test
cmp
mov
xor
call
xchg
outsl
adc
adc
mov
xchg
add
mov
sti
jp
push
push
adc
popf
dec
rcrb
sbb
push
dec
cld
arpl
lcall
cmp
popa
pop
cmpsb
shl
in
ret
loopne
mov
ja
ffreep
dec
jle
jo
and
cmc
xchg
mov
enter
gs
push
pop
fidivrs
out
mov
add
aam
dec
dec
pop
sub
in
push
dec
pop
mov
lret
pushl
jmp
test
xor
scas
nop
lret
lods
xor
sub
rcrb
decb
test
and
add
mov
sub
mov
or
int3
jmp
dec
test
and
and
movb
pusha
pusha
mov
sbb
mov
pop
sbb
cmp
inc
dec
or
dec
leave
ret
loope
dec
repnz
fcoms
cmc
pop
push
jle
enter
cld
inc
iret
test
sbb
lods
lcall
cmpb
fs
pop
ja
xchg
insb
jle
test
lods
imul
int3
cwtl
adc
adc
mov
or
sti
jns
sbb
loope,pn
jns
js
outsb
sbb
dec
lods
mov
adc
xor
mov
les
fildl
arpl
cli
inc
icebp
xor
mov
xchg
das
into
test
out
push
sub
imul
push
mov
test
sub
cmpsl
pop
cmp
mov
sti
cs
rcl
adc
pop
or
pop
mov
lahf
idivb
out
into
fs
fisttpll
loopne
repnz
lret
mov
push
cmp
push
stc
icebp
cs
rorl
mov
iret
or
pop
ret
or
mov
jae
mov
call
jns
cwtl
mov
add
sbb
dec
icebp
in
add
add
iret
push
sbb
push
das
lahf
cmpsl
test
cwtl
sbb
or
or
or
aad
insb
add
cmp
cli
and
scas
addr16
jp
mov
les
mov
or
es
lds
xor
mov
and
arpl
sub
cmc
and
mov
mov
adc
es
inc
jns
dec
in
js
push
out
ds
leave
lret
movsl
lret
push
ret
andl
imul
push
jp
add
sub
lret
cmp
mov
xchg
jg
ret
mov
mov
inc
adc
test
sbb
in
xor
inc
cmpsb
cmp
dec
ja
aad
into
adc
sarb
push
pop
ret
in
sarb
mov
int
mov
inc
outsb
imul
mov
and
pop
psubd
or
add
mov
ret
dec
cmp
push
cmp
dec
enter
imul
out
mov
mov
cmp
inc
mov
int3
push
hlt
stc
jg
pop
mov
jl
sbb
fistpll
cld
sarl
lods
and
std
jp
add
fildl
in
adcb
mov
pop
icebp
push
addr16
push
cmp
pop
call
in
les
test
push
sub
movsb
ljmp
jbe
mov
outsb
mov
xor
fcomps
push
fmull
fsubrp
sub
xor
jno
dec
in
fdivrl
xlat
in
fimuls
out
push
add
lcall
loopne
sbb
int3
call
scas
push
lods
inc
jl
lods
xor
movsl
addr16
lods
inc
mov
jb
dec
daa
inc
jge
movsl
pop
jle
jge
aas
mov
mov
push
call
mov
imul
lock
out
mov
pop
jmp
lcall
push
in
test
fwait
push
arpl
sub
scas
ljmp
stos
jae
and
out
idivb
sbb
loop
lahf
push
jb
test
leave
pop
xlat
inc
repz
pop
out
cmp
icebp
lock
outsb
pop
sub
mov
xchg
jnp
xorl
push
movsl
lea
data16
jg
jne
mov
les
xor
aad
repz
inc
repnz
mov
xor
mov
movsb
pop
js
cwtl
mov
xchg
imul
mov
jae
jmp
loopne
lret
lock
adc
sbb
push
in
jmp
imul
adc
sub
mov
fsub
lds
xor
stos
scas
movsb
xlat
fisubs
mov
xchg
mov
inc
into
jbe
stc
aad
xchg
jne
mov
mov
mov
in
lcall
add
mov
adc
pop
into
push
lret
adc
dec
loope
pop
adc
sahf
fdivrl
mov
nop
negb
popa
test
push
popa
std
push
enter
cs
shrl
cmp
bound
pusha
inc
xchg
mov
jnp
divl
jmp
iret
jge
xor
add
adc
test
lods
aam
cmp
negl
or
cmp
jecxz
lret
sub
xor
popa
call
je
mov
int
or
xor
mov
stos
jl
out
popa
inc
mov
mov
jne
xor
jle
std
les
jno
add
cltd
enter
jecxz
mov
xor
or
ret
loop
js
aam
addr16
inc
xlat
lock
out
sbbb
push
out
jnp
mov
ficompl
jnp
xor
inc
rcl
inc
loope
je
fcmovnu
test
fcoml
call
adc
ljmp
into
arpl
ret
add
jne
addb
inc
test
gs
ret
mov
cmp
jae
fidivl
pop
adc
ljmp
js
movsb
sbb
ss
sbb
fidivrs
daa
cmpsb
into
testb
stos
into
rcl
inc
andb
lods
pop
cmp
add
jle
ret
mov
mov
pop
or
mov
xor
decl
add
enter
pop
sahf
ficomps
in
es
jbe
scas
cmp
mov
repz
fsubp
jecxz
dec
cwtl
jp
shrl
dec
in
ljmp
lock
jp
mov
js
insb
pop
flds
stos
enter
lea
add
xchg
clc
sub
jo
xor
in
mov
mov
idivl
js
cltd
or
add
mov
add
fwait
test
push
push
arpl
lds
adc
push
sbb
push
pop
rcrb
test
xor
push
push
in
ret
inc
jecxz
pop
xor
ljmp
fwait
inc
ss
and
mov
cmc
or
sub
sahf
cli
sarl
sbb
xchg
jb
sarl
push
in
mov
inc
cmp
shrl
pop
test
rorb
add
rcrb
add
inc
sbb
inc
cmp
jp
inc
mov
mov
push
add
sub
xchg
test
addl
adc
fstpt
ds
enter
out
mov
cmpsb
incb
mov
stos
adc
pop
outsl
sti
out
push
inc
dec
int
adc
test
lret
mov
mov
std
push
and
fmuls
loopne
sub
std
mov
mov
icebp
ljmp
mov
stos
arpl
lods
cmp
adcl
sbb
adc
lods
and
mov
adc
outsb
xchg
cmpsl
pop
jmp
lock
adc
push
lods
mov
in
pop
test
out
ss
mov
mov
mov
jb
test
pop
gs
mov
pop
ss
lcall
inc
test
call
cwtl
enter
sti
out
xorb
int
push
add
jl
ret
push
mov
lcall
mov
ss
andb
mov
pop
rol
movsl
add
aaa
rcrb
jg
push
xchg
mov
repnz
pop
add
into
adc
mov
jne
fbld
mov
jbe
out
testb
adc
sub
neg
mov
hlt
mov
jne
into
mov
in
je
jnp
add
sbb
adc
cmc
lcall
clc
cltd
or
arpl
cmpsb
mov
frstor
push
jg
or
ret
stos
rorl
jmp
stc
sbbl
xchg
repz
dec
loope
jecxz
xor
cltd
jg
or
sbb
push
add
inc
leave
fadd
mov
sahf
lock
out
sbb
pop
outsb
sbb
pop
dec
and
xchg
hlt
and
inc
mov
mov
lods
push
pop
scas
add
scas
stos
mov
or
data16
mov
je
xor
inc
dec
cmp
int
sti
int
mov
and
fists
jmp
fwait
adc
lcall
and
sarl
data16
ds
ret
shr
dec
dec
inc
cmpl
sub
xchg
mov
or
dec
push
clc
mov
in
cmc
inc
ror
sahf
sbb
cmp
divl
inc
mov
fs
ja
xchg
pushf
xchg
jns
mov
dec
lret
sbb
push
adc
pop
addr16
and
testb
xor
outsl
push
imul
pushf
push
daa
xlat
add
add
push
and
data16
pop
imul
ret
test
xor
mov
andb
push
pop
test
sbb
dec
xchg
cld
mov
sub
adc
lcall
loopne
mov
insl
lods
pop
adc
pop
mov
shlb
jle
insb
rcrb
repz
cmp
push
push
dec
dec
mov
out
movsb
adc
push
push
shl
sbb
cmp
and
loop
lcall
inc
pusha
lds
pop
cwtl
testl
fdivrs
aaa
aad
mov
xchg
sub
xor
out
daa
cmpsl
sub
insb
xchg
jo
test
lods
enter
dec
sbb
jecxz
lahf
xor
ret
ret
cmp
pop
sub
into
pop
loopne
lahf
xchg
cmp
pop
lcall
mov
fs
pop
out
push
mov
enter
das
cmpsb
pop
or
fisttpl
lret
fiaddl
in
mov
movsl
insb
push
aad
int3
and
js
icebp
jno
inc
sbb
mov
out
js
fstps
dec
sbbl
scas
mov
push
daa
or
xorb
and
decb
sub
lahf
dec
mov
loopne
fldz
mov
pop
mov
adc
push
cmc
fiaddl
add
adc
dec
fs
hlt
lret
aaa
ja,pt
inc
arpl
mov
pop
mov
pop
mov
arpl
push
mov
dec
out
mov
sub
arpl
jg
fcoml
mov
mov
lret
xchg
cmp
lret
cmp
test
jle
inc
mov
jo
sbb
jo
es
es
push
add
scas
jle
sbb
das
cld
jo
ret
sbb
test
pushf
or
imull
dec
mov
xor
mov
and
lahf
push
mov
jg
lea
test
lret
inc
das
lcall
test
lcall
popa
dec
xor
shl
or
adc
mov
cmp
fildl
jnp
hlt
push
int3
xor
mov
push
mov
arpl
shlb
xchg
cld
xchg
inc
inc
and
dec
mov
mov
aad
push
cmp
stos
adc
into
fsubs
xchg
mov
mov
push
and
sbb
sti
daa
outsl
in
xor
aam
cmp
lods
xchg
ljmp
addl
sub
dec
and
inc
pop
fs
jnp
outsl
xchg
je
dec
mov
adc
frstor
inc
jl
jae
imul
pop
and
xchg
cmpsb
je
xchg
icebp
jmp
dec
xor
fisubrs
push
jno
mov
stos
sbb
fdiv
loopne
repnz
movsb
popa
adc
inc
xor
aas
lods
push
pop
sub
mov
sub
das
push
dec
mov
add
jnp
inc
fs
push
stc
out
jmp
in
pop
fcoms
adc
aas
test
cs
aam
jecxz
dec
negb
movsb
daa
add
pop
int3
push
adc
cmp
adc
sti
icebp
push
mov
ja
push
push
pop
mov
dec
cmc
data16
adc
fwait
pop
cmp
inc
sub
mov
mov
pop
jne
jmp
dec
sub
dec
pusha
lock
sub
insb
stc
fsubrl
das
push
imul
sbb
fwait
enter
punpcklbw
add
incb
xor
rorb
fcompl
clc
popa
or
lahf
movsb
push
or
sub
or
pop
mov
fidivs
aad
xchg
ret
dec
mov
ss
adc
mov
fucomi
or
sbb
loop
mov
push
js
sbb
xchg
cmp
fs
mov
ja
mov
inc
dec
adc
mov
aad
cmp
mov
push
cld
ja
movaps
sarb
in
lods
push
and
pop
movsb
rorl
movsb
lods
shll
hlt
mov
add
add
add
jae
iret
push
dec
lcallw
aaa
add
adc
stos
rcrl
mov
cmp
lcall
adc
pop
cs
movsb
or
pop
and
sub
hlt
inc
fistpll
mov
pop
ja
scas
cld
aas
mov
xchg
imul
int
aam
sbb
in
push
icebp
pop
mov
bound
dec
mov
xlat
shlb
fldt
mov
in
call
cmc
jg
xchg
add
push
cmp
and
arpl
push
movsl
add
aas
fsubp
push
or
sbb
out
pop
cmpl
inc
cmp
or
mov
pop
sub
or
or
mov
xor
pushf
fsubrl
aam
xor
dec
cmp
pop
sbb
ljmp
outsb
add
add
pop
xor
ljmp
mov
pop
or
xchg
enter
push
bound
pop
mov
das
fdivr
pop
bnd
in
jp
jo
sub
lcall
xchg
cmpsl
sbb
pushf
mov
mov
imul
mov
sub
es
push
popf
push
lahf
sub
cwtl
pop
lret
aam
imul
pop
mov
mov
pop
xor
push
add
cmp
xchg
pushf
out
sub
test
mov
mov
cmp
push
sbb
lods
sbb
dec
mov
mov
jg
sarl
lea
inc
enter
ret
jno
mov
xchg
test
dec
sbb
out
lods
sub
jp
inc
in
mov
jne
mov
icebp
inc
add
pop
dec
psrad
inc
loopne
out
fwait
vandpd
push
sbb
ds
pop
rcrb
pop
mov
outsl
jle
scas
test
or
jp
lods
sub
fwait
mulb
mov
call
xchg
inc
sbb
xor
cltd
into
dec
call
xor
jb
loop
mov
jns
out
cli
imul
je
push
daa
fsub
dec
mov
cli
out
xchg
inc
scas
mulb
loopne
add
bnd
sub
push
mov
testl
fsubl
pusha
test
in
xor
push
jns
scas
mov
fnstcw
scas
cmc
mov
sbb
dec
test
mov
inc
insb
xor
pop
stc
cmpsb
xor
cmp
xor
sbb
pusha
data16
add
jecxz
and
add
cmpb
sahf
test
push
mul
xlat
dec
dec
xchg
cmp
jns
dec
push
jbe
sub
fs
inc
push
add
aad
sti
mov
je
push
mov
dec
xchg
dec
dec
jp
add
push
xor
cmc
sbb
aam
iret
cmp
push
mov
mov
sti
mov
add
or
cmp
aam
sub
sub
outsb
mov
push
inc
pop
mov
push
pop
rcll
sub
inc
and
into
xor
mov
in
mov
cli
rol
or
ljmp
outsb
pop
jo
dec
adc
jbe
jmp
push
lahf
push
push
xor
mov
leave
popf
inc
hlt
jnp
sti
lahf
sub
insl
mov
aaa
subb
js
xchg
and
or
test
data16
push
por
jge
add
inc
scas
mov
call
iret
pushf
mov
or
mov
xor
repnz
sbb
outsb
insb
mov
gs
inc
dec
pop
daa
outsl
in
enter
ja
je
jns
push
mov
outsl
mov
or
or
andb
sbb
imul
xchg
push
jne
icebp
add
idiv
push
push
push
fwait
adcb
out
push
cmc
push
js
adcb
add
pop
add
arpl
rcl
jb
xor
xchg
popf
aad
add
loopne
fsubl
insb
push
add
inc
push
adc
add
lods
popf
ljmp
push
xchg
xorl
scas
insb
shrb
dec
jge
in
lret
es
test
sbb
push
mov
and
rolb
lods
bound
dec
pop
jg
add
fists
das
pop
in
mov
out
hlt
cltd
mov
sub
sub
or
mov
pop
dec
cmp
xchg
out
mov
jnp
or
loope
lods
leave
xor
call
jnp
xlat
mov
sbbb
push
push
int
cmpsl
mov
xchg
xchg
arpl
pop
test
lret
addb
lret
xchg
loop
sub
or
mov
add
xlat
addl
and
jae
aad
test
movsb
xchg
pop
lcall
sub
jbe
jae
outsl
aam
aaa
add
push
dec
es
push
cli
jmp
xchg
push
loop
ret
imul
movsl
push
sbb
stc
push
sub
mov
xchg
ds
sbb
adc
dec
xchg
or
and
lcall
fwait
cmpsb
pop
dec
pop
jle
and
jbe
ret
pop
iret
mov
ficoml
arpl
lods
cmp
jp
mov
mov
inc
mov
repz
outsb
push
jno
cmpsl
mov
adc
cwtl
pop
jl
fisttpl
jb
js
gs
cmpb
xchg
jl
stc
lret
icebp
inc
mov
sbb
out
push
jecxz
mov
xchg
mov
into
insl
ja
cmpsl
orb
jo
aad
adc
jp
in
xchg
push
mov
insl
in
dec
cld
xchg
or
or
out
sbb
add
daa
and
out
push
pop
mov
jmp
fadds
call
add
adc
aam
in
scas
mov
mov
ret
xchg
lock
add
fsubl
sub
cmpb
ret
shlb
pop
pop
ret
mov
cli
sub
pusha
lcall
xchg
adc
cmp
xor
inc
stos
test
jle
inc
inc
dec
cltd
lds
unpcklps
aad
cmpsl
or
mov
mov
aam
push
call
data16
icebp
in
mov
jmp
sub
ss
or
sub
leave
out
xchg
sahf
fs
sbbb
subb
into
lahf
add
mov
xchg
inc
loope
cld
pop
ja
pop
sbb
fisubrl
push
sub
mov
cmp
shll
or
je
and
sbb
mov
int3
stc
into
or
daa
rcrl
sbb
lret
lcall
push
push
int
dec
std
in
addr16
mov
fistps
xchg
les
decl
ds
imul
mov
sub
jns
pop
fwait
out
dec
aas
sub
popa
lahf
xor
loop
jo
in
bound
ret
roll
adc
aad
pop
ljmp
sbb
push
std
pop
mov
repz
sbb
cmpsl
cmp
push
jmp
shlb
xchg
clc
mov
ret
lods
pop
lea
fdivrs
aad
or
ljmp
mov
cmp
cmp
frstor
xchg
cmpsl
aad
aaa
cmp
and
sub
jno
mov
mov
insl
jb
nop
pusha
pop
lahf
sub
insl
cmp
push
leave
in
jbe
mov
jmp
fstps
and
nop
pop
mul
les
mov
nop
xorl
jns
negb
or
loopne
mov
or
leave
loope
fisttpll
popf
cmpsl
popa
lret
fcmovu
and
fucomi
inc
idivb
sti
sub
jmp
or
push
add
imull
icebp
pushf
daa
sbb
fsubr
inc
lcall
mov
repnz
test
rcr
sub
sahf
cmp
scas
insb
pop
push
sub
rcrl
mov
pop
insb
arpl
mov
subb
in
cltd
sub
cmp
cmpsb
loopne
mov
das
dec
cmc
addr16
imul
jp
out
inc
adc
sbb
jle
push
popa
mov
cli
outsb
pop
ret
mov
xor
jge
and
lock
and
mov
jp
sub
pop
loopne
or
stos
inc
mov
lea
dec
ljmp
mov
enter
popf
mov
out
jne
xor
fsubrs
sti
ss
es
sbb
loope
mov
dec
popa
mov
bound
outsl
dec
inc
aam
and
jno
cwtl
adcb
jmp
and
pop
fimuls
shrb
dec
fiadds
fimuls
fcompl
and
push
rcl
lock
mov
push
mov
rcl
sub
mov
dec
xlat
jb
sub
ret
cmc
mov
jbe
sti
cmp
mov
test
inc
push
in
ret
inc
push
push
test
mov
arpl
inc
repnz
pop
inc
push
push
mov
mov
inc
cmp
adc
adc
fldt
data16
jae
xchg
mov
xchg
sub
test
mov
mov
iret
push
push
mov
and
mov
iret
and
ret
fldenv
mov
jge
stos
into
lcall
push
jae
in
rol
pop
popf
add
outsb
jl
sub
out
xchg
adc
insb
add
xor
rcrl
mov
lea
inc
cmp
daa
stc
sti
aaa
dec
sub
push
pop
mov
add
dec
xchg
and
mov
addr16
cmp
in
xchg
mov
jne
addb
and
cmpsl
jl
mov
and
mov
aam
loope
call
inc
insb
jb
xchg
jg
movsl
inc
push
push
sub
push
fiadds
fisttpll
jp
ret
pop
fidivs
scas
mov
lcall
jecxz
inc
loopne
sarl
cwtl
mov
fcmovbe
fimull
out
adc
dec
cmp
mov
out
imul
adc
xchg
mov
jae
stos
inc
jecxz
dec
pop
add
mov
mov
xchg
jecxz
in
mov
loopne
stc
add
mov
inc
clc
ja
jle
mov
loop
and
inc
mov
outsl
push
ret
lahf
mov
pop
cld
adc
or
or
mov
ret
rcrb
jecxz
lret
jge
test
hlt
shl
stos
je
dec
stc
add
mov
jae
aad
jns
fidivrs
inc
push
mov
lahf
fcompl
lahf
repz
mov
dec
js
dec
rcll
mov
add
jle
inc
xchg
pop
hlt
inc
sarl
mov
jmp
sbb
int
xchg
or
jecxz
xchg
inc
sub
mov
mov
jae
jo
imul
fmuls
xor
push
cs
popa
ret
je
cmc
mov
mov
push
mov
jecxz
jp
cmp
mov
jbe
fwait
gs
add
ljmp
inc
rsm
mov
lahf
add
and
xchg
shll
dec
mov
scas
inc
or
xchg
imul
mov
aam
dec
mov
adc
jns
iret
test
out
out
sbb
and
jmp
cltd
jnp
push
pop
arpl
mov
pop
and
push
filds
jl
fyl2x
leave
or
xchg
andb
icebp
fiadds
and
imul
test
ret
lahf
ljmp
fwait
add
test
xchg
mov
inc
arpl
dec
dec
dec
into
call
sub
cmpsb
cmp
jle
out
pop
xchg
and
adcl
outsb
adc
in
test
cmp
mov
movb
or
sbb
rclb
pushf
pushf
xorl
inc
mov
ret
cld
inc
push
push
je
lea
or
mov
mov
dec
mov
sbb
jg
fsts
cld
sub
gs
lcall
out
sub
mov
mov
push
movsl
xchg
bswap
popa
bound
rorl
mov
jb
sbb
sti
adc
iret
jp
jmp
xlat
in
mov
data16
fnstenv
sub
negb
cmpsb
cmp
ja
jg
stos
and
stc
stos
sbb
pop
andb
mov
mov
notl
aam
xorb
xchg
aam
stc
mov
negl
jg
add
aad
lods
test
aas
xchg
lret
lcall
dec
sarb
pop
sbb
sbb
add
dec
mov
mov
aas
xlat
repz
jp
popa
mov
jno
sbb
test
xor
ja
ds
jnp
fs
add
xlat
xchg
les
add
add
test
inc
addl
push
movsl
je
add
dec
xchg
fisttps
ds
dec
popl
mov
out
out
nop
int
lods
mov
les
xchg
dec
xchg
jl
dec
jb
mov
jmp
jbe
xchg
push
scas
fstps
mov
ret
ret
out
sub
shrb
push
inc
js
push
xor
or
push
hlt
repz
pop
aad
jl
mov
adc
repnz
lcall
pop
pushf
mov
rcll
jne
xlat
pusha
inc
movsb
inc
daa
sti
or
sub
sub
xchg
lahf
in
popa
out
movsl
stos
and
dec
test
dec
popf
fisttpl
jne
mov
gs
push
and
cs
daa
into
int3
outsl
loopne
adc
or
je
or
xchg
sbb
fldl
sbb
ror
psubusb
pop
xchg
stos
sbb
and
xor
imul
cmp
and
subl
fimuls
outsb
sbb
mov
mov
push
xor
lock
pop
xlat
xchg
or
es
imul
push
nop
adc
fldl
sbb
dec
or
push
leave
add
pop
shrl
add
je
cmp
rep
out
stc
dec
sub
dec
sub
push
mov
mov
js
out
add
push
inc
cmp
call
imul
dec
xchg
dec
adc
and
scas
insb
negb
inc
lahf
subl
xor
push
aaa
mov
push
je
rcll
mov
mov
daa
cli
and
jae
rcrb
out
rclb
adc
addb
pop
aam
iret
pop
dec
mov
sbb
movsl
sti
adc
sub
pop
adc
lock
xchg
mov
pushf
push
movsb
stos
mov
insl
and
xchg
add
inc
dec
sbb
test
add
shrl
cwtl
stc
repnz
jl
int
rdtsc
mov
out
shl
jp
xor
jo
fsubr
cmpsb
push
xor
fcmovnu
aaa
lret
push
bound
aam
xchg
adc
cmp
hlt
pop
inc
push
movsl
outsl
cmc
mov
or
hlt
mov
mov
push
xchg
outsb
negl
stc
mov
pop
and
nop
xchg
jne
jne
int3
arpl
test
inc
repz
jns
jp
les
inc
xchg
lcall
xor
lds
cmp
cmc
xchg
dec
pop
xchg
movsb
loopne
xor
mov
push
xchg
mov
int
pop
mov
cmpsl
ret
xchg
push
dec
xchg
movsb
dec
or
int3
xlat
out
add
sbb
test
aas
xchg
pushl
leave
out
shrl
mov
mov
fwait
adc
dec
das
mov
dec
or
xchg
es
in
sti
fisttpll
int3
bswap
mov
insl
and
stc
cmp
fdivs
push
cmpsl
sub
ljmp
jb
fwait
cmc
inc
xchg
addr16
fs
sbb
inc
in
push
mov
cmpsl
xchg
test
imul
cmp
incb
std
push
sar
cwtl
ds
fisttpl
xchg
xchg
negl
inc
xor
out
test
vpaddb
leave
ja
roll
data16
ret
jo
push
imul
pop
cmp
and
cs
jl
dec
mov
sbb
push
ljmp
sub
adc
inc
cli
lock
push
arpl
cmp
das
cmp
and
sub
neg
lcall
push
outsb
fnstenv
jmp
js
inc
iret
imulb
xchg
movsb
jns
add
xchg
jge
or
mov
sahf
dec
je
pop
inc
or
cmpsl
or
test
and
repz
pop
mov
mov
add
call
stc
xor
test
sbb
inc
adc
mov
or
xchg
mov
pusha
test
jno
dec
cmp
sbb
and
sahf
in
push
shrl
push
xchg
adc
push
dec
imul
and
aaa
dec
mov
mov
rclb
add
push
lcall
out
movsl
inc
pop
push
add
jb
push
lcall
lret
sti
mov
sbb
pop
pop
iret
dec
and
cmp
scas
sarb
xor
push
xchg
push
adc
inc
xchg
push
repnz
xor
mov
lahf
add
popa
mov
mov
in
xor
cmpsb
and
push
jno
add
cld
xchg
cmpl
mov
outsl
pop
or
jne
mov
xchg
hlt
divl
sub
sarb
jle
loope
dec
jecxz
into
lds
aaa
dec
mov
ljmp
test
sub
add
loopne
adc
fdivl
mov
push
es
ds
fnstenv
int3
sbb
push
cld
out
insb
jg
cmp
lret
dec
jecxz,pt
loopne
mov
clc
or
jnp
inc
fwait
rorb
les
fcomps
add
icebp
mov
mov
pop
cmp
out
pusha
push
mov
jb
mov
loope
stos
mov
mov
push
adc
sbb
xor
gs
clc
add
jno
hlt
scas
or
sub
ljmp
xchg
mov
mov
push
mov
add
mov
mov
cwtl
stc
imul
adc
into
cld
sbbb
adc
mov
mov
jg
add
xlat
jmp
and
scas
dec
adc
mov
add
fiadds
jbe
xchg
sti
push
and
repnz
xor
test
inc
jmp
push
daa
stos
xor
jns
subb
enter
jmp
addr16
clc
mov
call
dec
jo
loopne
adc
sub
or
cmp
pop
mov
mov
popf
and
aad
imul
dec
add
sbb
dec
mov
pop
jnp
inc
in
enter
sbbl
stos
scas
sub
nop
lcall
sbb
lods
notl
cld
sbb
pop
fcoml
fisttps
mov
inc
sbb
add
daa
js
mov
aad
dec
jnp
xchg
push
mov
pop
inc
mov
mov
insb
test
nop
dec
inc
mov
xor
gs
imul
frstor
cmp
mov
and
inc
aas
jmp
mov
jl
mov
sbb
sbb
push
xor
jge
sarl
mov
cmc
push
sub
icebp
jns
ret
in
loope
jnp
dec
xchg
fsubs
dec
arpl
stos
jno
and
and
std
adc
insb
inc
dec
fs
jle
pop
vandnpd
dec
mov
js
pop
ljmp
mov
lret
faddl
push
mov
pop
popa
mov
mov
hlt
add
cltd
xlat
repz
pop
mov
pop
sub
mov
pop
rcll
mov
lods
jne
xor
lcall
in
adc
ret
mov
fsubp
jns
test
inc
jbe
orb
clc
or
inc
ret
lcall
xchg
add
jbe
mov
aas
arpl
and
mov
scas
pop
sar
mov
cwtl
and
push
in
les
cmpsb
sub
in
sbb
ljmp
movsb
jecxz
xchg
push
decl
fdivr
jnp
stc
stos
hlt
jmp
push
inc
inc
cmp
repz
dec
adc
fmulp
es
jo
imul
out
xchg
mov
das
insl
inc
mov
mov
push
inc
repz
inc
loop
jno
pop
mov
cmp
jmp
jno
cld
out
test
fadds
std
ss
or
out
adcl
mov
rcll
jb
in
femms
aad
cs
lcall
mov
sbb
and
fidivrs
jle
arpl
testb
cmpb
and
popa
pop
scas
mov
cs
sbb
out
jo
rcrb
sbb
addr16
insl
mov
std
popa
cld
repnz
in
gs
mov
xchg
or
sub
inc
insb
pop
adc
sbb
fnsave
in
mov
xchg
pop
lock
hlt
add
pop
jnp
mov
ficomps
xchg
das
pop
xor
enter
mov
adc
int
xor
pop
sbb
pusha
iret
pusha
add
js
movsb
int
pop
push
jle
sub
mov
lods
in
aaa
enter
xchg
icebp
cmp
in
mov
and
out
push
dec
xchg
clc
cmp
mov
addr16
add
push
inc
lret
sbb
adc
dec
sub
push
mov
cmp
and
clc
xlat
loop
cmpb
sub
mov
adc
xchg
inc
lahf
cmpsl
repz
cmpsl
mov
push
xchg
ja
imul
out
add
push
out
push
fwait
loop
xchg
push
icebp
icebp
xor
mov
inc
fidivl
fiaddl
aas
adc
xor
outsb
xchg
aad
sti
sub
cmpsl
pop
inc
nop
lods
mov
stos
sbb
pusha
jne
sbb
cmp
sub
xchg
lods
jmp
add
imul
pusha
lret
mov
dec
sti
ss
pusha
pop
mov
dec
push
jge
scas
aaa
mov
cmp
int
gs
enter
ljmp
cltd
adc
lods
mov
repz
mov
add
push
jg
dec
adc
inc
push
xor
adc
sbb
cmp
in
inc
lret
scas
mov
sub
mov
push
in
dec
adc
mov
dec
push
jae
xchg
lods
and
sbb
movsb
lods
mov
xor
push
push
cwtl
gs
gs
pop
cmp
cwtl
adc
lods
mov
negb
mov
cmp
and
mov
out
xor
sbb
push
pop
or
clc
test
push
ja
add
ret
xor
push
pop
lods
das
adcb
cmp
cmp
dec
lret
gs
jp
rorb
lock
das
xchg
ret
or
dec
clc
dec
sub
aas
arpl
jmp
clc
adc
push
cmp
insb
jns
pop
enter
leave
mov
push
mov
ss
mov
nop
insl
or
xlat
mov
push
xchg
jnp
jae
xorl
test
xor
pop
mov
out
cmp
fwait
dec
fnstenv
fs
jg
mov
mov
sbb
inc
cli
sahf
lods
or
push
or
test
test
adc
pop
gs
iret
mov
and
pop
adc
stc
jae
push
fistps
jp
inc
adc
std
adc
test
mov
xor
stc
inc
in
xchg
mov
test
cmpsb
adc
mov
sub
out
dec
aaa
std
xchg
data16
and
test
aam
add
fsub
fsubrs
pop
ja
cld
xchg
fbld
xchg
push
pop
xchg
push
pop
cmpsb
loope
and
testl
xchg
sbb
push
xchg
fs
dec
mov
lds
fcoml
xchg
ficomps
xchg
in
rolb
cs
sbb
lock
daa
mov
sub
or
jnp
mov
cwtl
mov
push
and
and
pop
mov
inc
mov
pop
sbb
imull
negl
sbb
imul
xchg
push
into
cmp
sbb
clc
cmp
cmp
test
mov
adcl
add
cmpsb
lods
adc
pop
ja
outsb
pop
or
cmc
xrelease
inc
into
jo,pt
mov
mov
lsl
xchg
sub
cld
mov
mov
mov
xchg
cld
data16
call
sbb
out
std
movsb
mov
cmc
fs
and
push
cwtl
adc
int
orb
test
jmp
cmpsl
out
lea
xor
inc
jge
mov
cmp
push
test
pop
pop
aas
cmp
jno
xchg
rcrl
cmpsb
jge
xlat
xor
pop
or
jp
out
sub
pop
cmc
jge
popf
cmpsl
mov
aam
cmpsb
and
in
pop
dec
les
mov
in
mov
mov
mov
cli
sbb
in
mov
loop
imul
fsts
je
lods
pusha
push
or
add
cmp
and
setg
loop
push
test
icebp
mov
out
fldl
dec
mov
aam
lds
cmpsb
mov
push
fidivrl
sarb
jbe
es
lcall
push
pop
add
out
add
lods
mov
pusha
std
push
push
cmpps
add
out
jecxz
lret
and
add
fwait
and
fidivrl
mov
in
dec
jno
mov
sbb
xor
jmp
aam
mov
fsubrs
sti
pop
insl
inc
pop
xchg
mov
adc
rol
pusha
pop
test
mov
sbb
pop
ret
gs
insl
sarb
fidivrl
in
dec
test
pop
jge
lds
jg
jbe
mov
jae
jl
dec
adc
jb
lds
jbe
push
xchg
jl
and
fimull
pop
inc
out
outsb
int3
mov
int
sbb
out
jmp
mull
ffreep
out
pop
cmpsl
out
es
adcl
ficoms
add
pop
ficoms
mov
nop
int
sbb
das
mov
lods
sub
sbb
push
jb
add
es
data16
repz
cmc
fs
mov
sub
popl
rep
xorb
add
push
and
fistps
movsb
daa
pusha
orl
push
fisubrs
addr16
mov
xchg
sub
push
inc
stc
push
jne
push
idiv
push
xchg
movswl
lods
sti
aam
mov
adc
sbb
shlb
sbb
ret
das
int3
les
push
add
mov
sarl
pop
cmp
mov
stos
cmp
mov
cs
cmp
scas
and
pop
mov
mov
mov
mov
jns
and
mov
xchg
lahf
xor
mov
shlb
hlt
add
fstps
adc
xchg
mov
aam
push
push
fmul
gs
daa
xchg
or
leave
div
jae
pop
xchg
les
and
push
mov
test
fndisi(8087
add
data16
shrb
loop
cmc
js
or
rcr
xchg
mov
mov
jge
js
mov
xchg
stos
pop
push
push
not
jle
and
es
pop
div
dec
push
push
or
and
arpl
ja
or
fmul
fisubrl
jb
add
mov
mov
mov
push
daa
adc
cmp
ds
push
shrl
stos
rcrb
shr
out
jne
mov
test
and
pop
insb
mov
ret
cltd
imul
mov
aas
sub
jp
or
bound
imul
jl
inc
xor
addr16
iret
nop
mov
pop
or
dec
sbb
sbb
push
cmovs
ret
add
bswap
xchg
pop
lret
paddusw
in
mov
notb
mov
sub
and
jae
stos
popa
push
mov
inc
or
and
push
inc
xor
into
adc
int3
repz
cmp
out
fwait
int3
and
xchg
push
sub
aaa
es
gs
mov
mov
jbe
adc
cli
sbb
pushf
fwait
xor
mov
int3
pop
push
add
mov
mov
aad
and
ds
mov
dec
test
scas
leave
shll
loope
loopne
mov
sub
ss
push
inc
push
jmp
shlb
out
ja
xchg
ss
cmp
rcll
ljmp
mov
das
sbb
push
frstor
fdiv
std
imul
mov
cmc
xchg
xlat
inc
and
das
aaa
stc
pop
stc
xchg
sbb
shrl
imul
or
mov
adc
lods
and
pop
and
mov
movsb
xor
jne
cmovno
rcr
shl
sub
out
mov
cmpl
push
mov
cld
fcoms
mov
or
push
xchg
scas
mov
test
jmp
inc
icebp
lods
ljmp
mov
mov
adc
stos
adc
repnz
xchg
mov
loop
mov
daa
sarl
push
sbbl
jne
xor
jne
pushf
dec
jae
jns
sub
dec
dec
mov
lock
xorl
sti
sbbb
andb
xchg
ja
cmp
dec
mov
xlat
sbb
mov
test
push
and
xor
fbstp
mov
lret
jmp
push
clc
mov
mov
pop
mov
jb
in
scas
or
daa
test
inc
adc
mov
adc
test
aaa
sbbb
test
cmp
push
push
cmpsb
lcall
pop
jle
mov
in
movsb
pop
lods
cli
stos
mov
call
cli
xchg
das
mov
sub
cld
push
rclb
enter
cmp
xor
leave
lock
and
pop
in
jecxz
sbb
shrl
jae
push
cmp
cwtl
insl
lea
fmuls
mov
mov
adc
sbb
icebp
jg
mov
insl
mov
pushf
xchg
lea
pop
into
and
sbb
cmp
insl
jne
inc
xlat
ja
pop
push
and
or
int
dec
aas
lds
ret
cli
push
andl
inc
lahf
rorl
add
mov
xor
ss
pop
je
mov
cltd
xchg
fnstcw
rcll
idivb
lods
sub
jge
inc
rcrl
push
iret
dec
jp
faddl
and
sub
mov
push
or
lahf
mov
movsb
cld
or
pop
es
push
adc
or
vandps
pop
pop
mov
int3
mov
lret
fldl
mov
adc
mov
sbbb
cmp
fimull
adc
sbb
xor
outsb
inc
dec
out
jne
lahf
pop
stos
or
fsubrs
in
sub
push
jns
faddl
orb
sahf
and
push
push
popa
insb
mov
jno
lods
aas
fnsave
pop
lahf
dec
int3
rcr
js
jnp
or
inc
int
push
and
cmpsb
out
stos
std
imul
inc
in
or
cmp
dec
push
xor
stos
outsl
pop
push
push
fs
xor
xor
enter
or
mov
fistpll
mov
jg
outsl
xor
and
mov
mov
mov
adc
test
rolb
push
cmpsb
ret
lahf
push
mov
add
flds
mov
daa
pop
fistps
jmp
sub
leave
movsl
xchg
gs
sar
pop
test
cmp
cmp
mov
jae
sbb
das
ret
cltd
fsubrs
jo
loop
int
test
sbb
dec
fs
fucomi
out
out
data16
dec
in
testl
js
fsubrl
popa
xor
pop
add
mov
or
xor
adc
push
mov
mov
add
mov
and
sub
orl
cli
inc
mov
pop
out
pop
call
imul
lea
aad
mov
pop
mov
stc
pusha
call
and
sbb
jl
enter
repz
das
shrb
popf
out
leave
mov
cmp
lods
cmp
push
out
cld
inc
push
sbb
mov
push
mov
or
fcompl
push
and
sub
adc
pusha
xchg
and
loopne
icebp
int
mov
int
cmp
or
pop
repnz
enter
repnz
pusha
and
pop
add
add
mov
fwait
inc
xchg
xchg
mov
icebp
and
sub
sarb
mov
push
and
xchg
stos
and
enter
sbb
ficoms
dec
adc
stc
mov
les
in
dec
sbb
pop
ja
jl
test
daa
in
jle
or
xchg
inc
lcall
movsl
sti
add
jle
mov
idivb
in
sbb
scas
shll
hlt
mov
cmp
ljmp
test
xchg
push
xor
insb
leave
out
out
xor
add
cld
xor
test
enter
out
gs
adc
rorl
push
repnz
and
loop
sub
es
lcall
adc
fdivrs
aas
das
pop
daa
fnstsw
push
hlt
lret
lret
outsb
sub
mov
fistpl
xchg
mov
pusha
adcb
hlt
pop
ret
adc
adc
pop
leave
test
cli
lret
push
pop
fnstenv
cli
mov
mov
lcall
push
mov
pop
ja
out
ret
mov
add
imull
lods
sub
add
jae
cmp
mov
mov
mov
sub
fcomps
ret
hlt
fwait
inc
in
vmovaps
roll
jge
inc
test
ljmp
test
sbb
scas
bound
add
adc
pop
xchg
lahf
inc
pop
push
filds
inc
mov
aas
sbb
fwait
and
fcoml
test
cmp
mov
repz
mov
bnd
xor
push
mov
and
jbe
lock
popa
sub
pop
movsl
pop
rep
mov
lret
loopne
jle
imul
mov
lcall
jnp
adc
ja
in
data16
mov
sub
dec
xor
clts
sub
jno
sbb
push
stos
dec
pop
movsb
popl
mov
fstps
adc
inc
out
loope
aas
jae
or
jo
test
shll
mov
and
push
cmp
push
gs
jmp
adc
jae
jmp
jle
xchg
sub
xchg
jbe
jmp
adc
mov
push
push
es
das
int3
roll
cmp
or
push
dec
and
clc
icebp
aaa
test
cwtl
adc
xchg
sbb
out
adc
fmuls
das
inc
mov
test
cltd
adc
add
sbb
adcl
lock
dec
fldl
pop
mov
roll
aaa
pop
push
es
mov
push
adc
mov
jnp
sub
es
xor
cmpsb
ljmp
imul
mov
mov
adc
xchg
cltd
xor
xor
bnd
das
inc
popl
mov
mov
xchg
fnsave
xchg
xchg
sbb
movsb
fwait
mov
into
hlt
or
lret
mov
mov
test
pop
and
sahf
sbbl
jb
adc
mov
jb
fs
loope
xlat
loop
xchg
add
hlt
push
int
and
enter
and
das
pop
xor
push
iret
es
ret
dec
addl
in
mov
and
or
jecxz
inc
sahf
push
mov
mov
fidivrs
or
inc
jle
xor
push
and
jne
mov
push
mov
add
daa
aaa
push
test
and
lahf
sbb
adc
push
push
stc
in
cmp
in
pop
pop
dec
mov
mov
movsb
mov
aaa
push
int3
push
lret
scas
sub
xchg
jne
cmp
lods
cmp
pop
sub
push
jg
adc
int
mov
pushf
sub
or
mov
in
movsl
push
scas
jge
sti
add
cmp
adc
mov
pusha
pop
pop
inc
push
mov
lret
lcall
subl
movsb
push
cmp
mov
push
add
pusha
jle
sub
push
jns
mov
xchg
pop
mov
leave
stos
adc
stos
ds
pop
inc
sbb
cmp
cli
pop
xor
sti
lods
mov
popa
add
lods
or
cs
jo
sbb
lcall
xchg
repnz
aas
and
imul
or
fisubrs
push
aam
popf
mov
iret
in
sti
pop
adc
arpl
jnp
jl
mov
test
jp
add
jbe
jecxz
xchg
or
adc
mov
mov
add
in
xchg
dec
push
and
push
jle
ficoms
sti
out
decl
lret
repnz
aaa
and
mov
cmp
cmp
jg
push
insl
xchg
in
pop
les
dec
filds
shll
ljmp
clc
xor
or
popf
xor
inc
sub
imul
push
movl
mov
mov
js
fwait
mov
sub
push
mov
mov
aas
fstpl
dec
loopne
jg
movsb
push
xchg
pop
jb
and
outsl
pusha
mov
fimull
push
xlat
push
cld
push
ds
fcmovbe
lds
dec
xor
and
fs
nop
jle
ja
sub
int3
push
sbb
movsb
jae
cmp
xchg
ds
add
jmp
and
inc
jne
mov
jmp
fidivrl
iret
adc
inc
aad
ja
mov
or
fcoml
popa
mov
jo
fnstcw
in
pop
sbb
js
daa
stos
xor
jae
adc
cli
jmp
and
ds
call
mov
rcrl
jb
testb
es
or
shr
or
cli
cmc
xchg
lcall
push
sti
mov
sbbb
inc
sbb
clc
jle
out
cltd
int
add
push
cmp
adc
push
stc
imul
sub
or
sub
ret
xchg
xchg
arpl
mov
out
jae
dec
mov
daa
sbbl
cltd
mov
sbb
sahf
or
hlt
mov
mov
imul
sub
mov
lods
pop
sub
mov
outsl
in
ret
arpl
shlb
rcrl
cmpsb
xor
sti
mov
cld
fcoml
sbb
outsb
sub
xchg
mov
cmp
addr16
inc
hlt
sub
ljmp
sub
imul
mov
std
push
or
jge
xchg
bound
xchg
pop
enter
lods
ss
xchg
mov
ret
cmp
sub
movsb
incl
jb
fwait
sub
sub
lds
dec
xlat
into
fsts
mov
addr16
lahf
inc
push
add
lahf
dec
aam
cli
dec
es
or
mov
dec
dec
fwait
out
push
mov
fwait
out
push
fidivs
mov
and
fldcw
out
xor
xchg
cli
dec
rcrw
xchg
mov
outsl
mov
xor
or
in
inc
daa
out
nop
ss
xchg
stos
add
push
xchg
pop
jno
sbb
inc
rcrl
adc
push
mov
out
cmpsb
push
mov
or
cwtl
stos
lock
sbb
pop
test
mov
lret
lcall
addr16
push
adc
bound
cmp
jge
popf
sub
jae
mov
sbbb
jge
push
adc
lea
jns
and
scas
xchg
stos
popf
cmp
mov
idivb
add
ds
jmp
mov
repnz
sbb
mov
or
cmp
push
push
cmp
jne
mov
in
lret
sbb
cld
lret
repz
dec
push
cmpsl
pop
mov
sbb
xor
mov
or
or
out
mov
loope
or
cwtl
ficoml
test
repz
ret
mov
sub
mov
sbb
sbb
test
mov
add
adc
pop
jb
in
aad
cmp
stos
nop
adc
hlt
adc
popa
xor
xor
cld
and
mov
lds
mov
fidivrl
aad
jae
fistps
sbb
mov
jnp
test
sti
ret
cmp
loope
push
pop
lea
cmp
sub
imul
and
mov
pop
test
loopne
adc
movsl
xor
loopne
push
push
outsb
dec
pop
inc
inc
fnsave
jge
and
pop
mov
fidivrs
cmpsl
jmp
cmc
rcrb
je
aas
cmp
inc
mov
cmpsb
lea
mov
lds
rolb
aam
and
in
dec
out
mov
mov
adc
inc
sub
shrb
jno
cs
jl
or
xchg
ljmp
lds
sub
xor
pop
jns
adc
push
cli
shlb
leave
or
daa
in
inc
jl
mov
shll
adcb
test
mov
icebp
aam
loop
outsl
jp
push
fcomp
dec
xchg
lea
jo
test
sbb
or
jb
cmp
pop
scas
fstl
mov
jns
sbbl
sub
push
mov
xor
add
xlat
movsl
adc
enter
mov
cwtl
jge
in
and
mov
lds
fs
pop
or
push
xchg
loop
xchg
jbe
xor
mov
sub
pop
out
jb
push
testl
mov
mov
xchg
bound
lahf
adc
mov
ljmp
inc
imull
pop
arpl
sub
in
adc
out
leave
inc
movsl
mov
cvtpi2ps
add
xor
xor
std
addr16
push
xchg
xor
push
aas
int3
push
insl
pop
mov
imul
aas
jo
inc
int
cmp
cltd
cwtl
mov
in
push
cmpl
incb
push
push
cmp
hlt
inc
stos
in
fsubl
loopne
xchg
dec
les
xchg
lds
aam
sahf
cmp
andl
lcall
sbb
xchg
lods
xchg
xlat
sub
clc
sbb
push
jo
hlt
mov
js
or
aas
cmp
xor
mov
jge
cmp
cmp
dec
fidivrs
inc
add
mov
cmpsb
xchg
call
lret
sbb
int
and
push
std
add
push
es
adc
stos
xor
jb
test
add
insb
sbb
sub
lahf
cmpsb
aam
call
ds
push
cmpsb
shlb
push
out
test
mov
mov
mov
shr
and
xor
data16
mov
lahf
jno
je
or
lea
aam
xchg
ret
aaa
xor
adc
xor
stc
inc
sbb
daa
repnz
sub
mov
shrb
inc
and
inc
dec
cmp
pop
outsb
iret
loop
cmp
jmp
mov
sub
sub
jbe
inc
push
lcall
cltd
xor
pop
sbb
fwait
cwtl
ret
loope
jge
mov
or
jge
cmp
mov
inc
cmpsb
popa
push
sbb
repz
cmp
nop
sub
lret
push
jge
sbb
rcrl
add
dec
insb
cwtl
adc
fldcw
rcl
aaa
out
xchg
push
dec
mov
push
lcall
push
mov
or
or
adc
push
mov
mov
nop
adc
loopne
push
es
cmp
ja
nop
cmc
imul
add
imul
cmp
add
xchg
enter
xchg
repz
daa
leave
iret
xchg
xchg
in
xchg
cmp
leave
mov
addl
add
lods
pop
push
les
aad
cltd
inc
sar
cmpsl
mov
cmc
or
insb
enter
stc
lods
repz
outsl
add
pop
dec
push
pop
or
fnsave
inc
outsb
add
mov
dec
fimuls
mov
ret
push
pop
or
subb
aaa
in
pop
in
mov
mov
fs
push
lcall
arpl
imul
shrl
xor
xor
sub
loop
xor
lret
sub
xchg
fs
cld
push
inc
loope
sub
pop
sub
pop
call
dec
xor
and
in
icebp
and
dec
xlat
mov
sub
cmp
xchg
and
xor
sub
pop
sbb
pop
add
pop
adc
cmp
pop
mov
dec
hlt
sbb
push
sbb
inc
jo
and
xchg
out
dec
or
xchg
mov
scas
jo,pt
xor
int
cmp
incb
cmp
inc
test
dec
ljmp
loop
out
xchg
xchg
jb
xchg
sub
jecxz
adc
rorb
pop
scas
cli
sub
cmp
sbb
xchg
into
add
push
bound
adc
dec
test
mov
fistps
scas
jns
or
daa
or
pusha
jge
sbb
pop
negb
mov
out
imul
inc
cmpsl
loopne
imul
pop
dec
xchg
dec
in
sysexit
adc
dec
popa
sub
ss
xor
imul
int3
cwtl
jno
pop
insb
outsl
sbb
ret
jge
sub
ret
aaa
adc
or
sbb
mov
mov
repz
or
jnp
xlat
nop
pusha
call
test
xchg
stos
push
mov
leave
in
cmpsb
or
jno
xor
mov
and
in
inc
loopne
ficomps
call
movsb
push
call
adc
jns
mov
mov
push
popf
jo
dec
mov
into
push
add
cwtl
xor
mov
rolb
je
cltd
xchg
imul
push
idivl
cld
sbb
iret
fsub
icebp
addl
inc
cmp
int
cltd
sub
add
sahf
cmc
test
pop
jmp
pop
popa
lock
stc
push
out
push
std
imul
and
dec
sbb
push
mov
mov
sbbl
jb
xchg
in
and
jne
imul
and
mov
jecxz
outsb
loop
in
dec
xchg
push
test
mov
mov
pusha
xchg
or
bound
sarb
test
sbb
add
and
cmc
ud2
pop
shrb
fs
adc
gs
es
lea
dec
mov
cmp
sbb
push
addl
and
or
loopne
push
je
push
and
arpl
cmp
test
ss
inc
je
sub
lret
sbb
aam
popf
inc
test
rcll
push
inc
int
aad
dec
mov
add
push
mov
movsb
pushf
jmp
rcrb
lret
popf
pushf
test
dec
lret
aam
dec
mov
mov
int
scas
adc
jo
shlb
imul
ficoms
daa
test
inc
test
shrl
fs
loope
cwtl
insb
in
cltd
pop
out
sub
popf
sub
aad
imul
cmp
into
scas
mov
decb
arpl
jmp
enter
and
jle
cmp
fs
mov
push
movsb
xchg
mov
lock
insl
popf
pop
std
psrld
mov
scas
sub
std
sti
or
adc
popf
cwtl
or
out
jo
dec
or
jg
jns
dec
cmpsl
sub
fisubl
rclb
add
dec
pop
daa
or
sahf
pop
jecxz
cmpsl
push
cmpsl
adc
bnd
mov
add
leave
out
repnz
xlat
nop
les
arpl
pop
lods
jmp
orb
into
cwtl
sub
mov
jp
adc
daa
xchg
sbb
int3
mov
aas
dec
sbb
subb
cmp
dec
lods
push
jg
cmpl
jno
mov
push
push
arpl
enter
imul
inc
fsubr
sbb
cmpb
jl
mov
mov
xor
rorl
outsl
jle
hlt
fcomip
leave
mov
icebp
stos
aas
out
add
in
pop
sub
cmpsl
divb
jno
test
inc
popa
popf
xlat
out
cmp
inc
out
loope
ljmp
fidivl
adc
jo,pt
into
jle
data16
cmp
mov
and
cmp
out
cmp
in
jp
sarb
xor
dec
and
jae
jbe
gs
sbb
push
inc
es
int
cmp
mov
hlt
lds
jbe
sub
int3
int3
pop
fimull
shrl
add
fisubrl
into
mov
lods
es
mov
faddl
mov
into
and
adc
pop
outsb
sub
inc
fcompl
cmpb
imull
enter
inc
scas
in
lds
fs
mov
add
xchg
sbb
outsl
cmp
ljmp
fdivrs
out
jecxz
lods
xchg
jl
xor
inc
cmp
push
stos
loop
fsts
mov
pop
lds
or
jg
call
dec
jg
and
xor
out
mov
daa
pop
cmp
sahf
lret
arpl
xor
fists
pop
test
pop
insl
add
imul
cmpsl
cltd
sarl
or
mov
push
repz
sete
jbe
pop
imul
inc
jmp
adc
aaa
popa
sbb
icebp
dec
mov
popa
int3
daa
adc
adc
xchg
cmp
cmc
push
or
adc
enter
fcmovnbe
or
push
sub
mov
push
arpl
jae
xor
mov
outsl
in
das
sub
cmp
pop
mov
xchg
fxch
test
xchg
repnz
ja
int3
jbe
cwtl
sub
cmp
sub
inc
in
push
loop
mov
push
pusha
sub
xchg
or
jge
add
mov
pop
mov
add
les
sar
xchg
mov
test
or
sub
fidivrl
adc
jl
sub
test
jp
adc
inc
inc
and
jmp
mov
xchg
push
dec
ss
adc
pushf
inc
stos
mov
loopne
inc
sahf
sub
and
aam
in
sub
xchg
cmp
addr16
dec
lret
jo
mov
ret
jge
pop
fwait
int
xlat
adc
push
push
sub
movsb
shrb
popa
mov
pop
je
cmp
adc
insb
imul
into
sub
std
hlt
lahf
dec
out
xchg
or
sub
leavew
mov
push
jbe
mov
shll
push
xchg
lock
ss
push
xor
sub
daa
xchg
in
sti
pop
leave
test
ret
dec
arpl
mov
inc
std
mov
out
in
insb
jb
lods
inc
jbe
lret
cltd
insb
inc
arpl
sub
ja
in
int3
and
pusha
dec
adc
jmp
dec
mov
pop
cmp
sub
aad
hlt
add
movl
or
mov
adc
lods
test
jecxz
xor
mov
ret
cmp
xchg
clc
xor
push
out
dec
or
icebp
sub
rorb
push
lock
outsb
rorl
mov
js
mov
dec
inc
push
or
stos
lret
rolb
dec
imull
sub
mov
icebp
leave
xlat
add
sbb
dec
xchg
test
loop
xor
loopne
hlt
adcl
lahf
loopne
or
sbb
inc
xor
clc
adc
das
push
dec
mov
fisubrl
lock
call
jo
jb
mov
in
push
and
adcl
jg
mov
cs
or
pushf
outsb
adc
sub
ret
sbb
idiv
xchg
into
add
xchg
adc
mov
push
cwtl
test
test
jle
dec
jne
sub
lods
jo
cmp
xchg
sbb
mov
insb
sbb
or
jae
xchg
push
adcb
cmc
ret
jle
pushf
jns
push
push
or
scas
mov
ljmp
jmp
sub
out
mov
xchg
or
shll
cmp
and
clc
pop
movsb
repnz
cmp
mov
push
jl
fisubrl
mov
in
rorl
fdivrs
loope
shrb
lea
inc
aas
jmp
cmpsb
insl
into
xlat
lret
mov
out
and
ss
popf
sbb
mov
outsb
test
lahf
ficompl
fwait
mull
push
pop
fsts
repz
js
das
stos
les
in
faddp
adc
dec
pop
jmp
inc
push
pop
cltd
mov
add
imul
fisubl
cmp
xchg
xchg
push
push
and
add
dec
and
pop
sti
fadds
sti
xor
jecxz
mov
iret
rcr
xchg
stos
icebp
loopne
push
ljmp
xor
xchg
outsl
shl
and
enter
sub
adc
cmp
mov
mov
popf
dec
loopne
push
xor
mov
and
push
adc
rclb
dec
outsl
adc
out
ss
add
xchg
jns
fdivrl
lcall
out
out
leave
in
sub
ds
ret
mov
js
jb
cmp
push
lods
sub
lret
inc
cmpl
outsb
mov
adc
xor
test
mov
inc
inc
les
outsb
lret
adc
push
xor
hlt
int3
mov
and
mov
xchg
sub
js
cli
push
movsl
jbe
jns
push
cmpsb
pop
int3
bound
hlt
push
xor
adc
and
fstpl
mov
rorl
xchg
popf
mov
mov
pop
arpl
fwait
sbbl
add
int3
mov
fmull
shll
mov
in
xorl
fs
dec
into
insb
arpl
shr
push
ljmp
push
leave
jb
into
ds
push
roll
es
leave
movsb
aaa
notl
dec
push
push
mov
mov
inc
dec
roll
in
push
mov
gs
rclb
xor
lods
adc
ljmp
mov
sub
enter
scas
insb
ss
insl
cmp
fbstp
adc
push
aaa
pop
jbe
out
or
add
jecxz
mov
mov
lret
pop
into
in
imul
pop
xchg
mov
sub
mov
insb
ja
jmp
imul
mov
inc
xchg
test
testl
sub
aas
inc
movsb
test
fbld
xor
fwait
jmp
jne
sti
mov
dec
fisubrs
aas
lea
adc
dec
add
push
js
dec
sub
lods
ret
fisubrl
lea
popa
cli
scas
add
aam
scas
ss
sub
xor
pushf
movsb
add
lret
sub
dec
mov
jecxz
pop
dec
loopne
cltd
mov
imul
insb
sub
cmpsl
repnz
outsl
aas
adc
popa
mov
bound
shl
xor
sub
inc
shr
jae
dec
ret
adc
lods
xor
cwtl
in
pusha
adc
dec
cmp
shrb
data16
jns
outsl
xor
out
fcmovu
ror
and
add
loope
xchg
dec
lods
in
cld
adc
out
mov
pop
negl
loopne
cmp
mov
or
movsl
insl
out
cmpl
popa
cltd
mov
xor
dec
mov
int
aad
popf
movsl
js
loop
add
call
pop
lret
dec
dec
cmp
mov
aam
sub
mov
lods
add
clc
shrl
cmc
lods
push
and
out
add
cmp
jbe
sahf
jg
mov
loopne
mov
xchg
andl
mov
jecxz
lret
das
dec
mov
adc
mov
or
outsl
mov
or
sbb
mov
repz
sbb
adc
and
cmp
adc
add
adc
fisubs
sbb
jp
aas
push
sarl
out
sbb
jecxz
notl
sahf
or
sub
add
jae
mov
iret
xor
jp
pop
out
lret
sbb
mov
les
jl
or
mov
test
sar
add
sub
or
adc
xor
inc
outsl
and
sub
xchg
bound
inc
ljmp
pop
and
xorb
xchg
jns
or
inc
dec
xorl
mov
push
inc
adc
mov
mov
test
pop
add
mov
or
dec
pusha
imul
xchg
mov
outsl
pop
stos
sub
cmp
and
aas
inc
add
jne
clc
sbb
jecxz
ss
rcrb
insb
lahf
cmp
rcll
jno
movsl
adc
std
out
aam
hlt
cli
pop
adc
iret
adc
push
cmp
nop
pushf
in
movsl
cmpsl
call
pop
popa
imul
jae
add
lahf
cmpsl
xchg
ret
sub
div
scas
sbb
cmpsb
cmp
lcall
inc
aam
jns
lret
movswl
andb
test
mov
xchg
dec
mov
mov
mov
lods
cmp
fwait
daa
xor
jno
mov
pushf
addl
out
adc
sub
pusha
xchg
dec
out
lret
fstps
mov
sahf
inc
xor
dec
dec
push
and
test
push
imul
pop
pop
and
mov
adc
lcall
mov
mov
jge
loope
push
add
mov
sub
daa
push
dec
sub
add
rol
lret
enter
jns
cmp
gs
push
mov
cmpsl
push
stos
and
fidivl
cmc
pop
lock
mov
scas
xchg
ljmp
xor
inc
dec
add
sbb
adc
mov
sbb
xchg
ljmp
insl
lea
mov
and
repnz
aad
sub
add
cltd
fwait
adcl
mov
push
insl
mov
sub
mov
push
jno
mov
xchg
mov
jbe
adc
rcl
jbe
pushf
push
jo
xchg
add
insb
cltd
mov
xor
mov
sub
inc
xchg
imul
call
in
push
andl
clc
sbb
daa
cmpsl
lea
xor
imull
repz
jb
cmp
inc
mov
loopne
and
sub
push
test
xlat
dec
xchg
sub
fdivrs
dec
push
mov
add
push
stc
xchg
xor
xor
pop
insl
sbb
je
jmp
push
out
out
adc
rorb
push
repz
push
xchg
xor
leave
pop
movsb
add
cmovns
cld
mov
xor
xor
cmp
ret
dec
loopw
and
in
aaa
call
stos
pop
xchg
sub
add
cmc
push
nop
ljmp
cmp
mov
mov
xchg
fnstcw
lea
mov
ja
adc
mov
dec
call
sahf
push
jl
push
out
aad
divl
adc
mov
add
repnz
jmp
aam
push
cmpsb
dec
cmp
enter
fimuls
push
cltd
pop
and
aam
pop
call
sbb
push
ret
mov
insb
mov
fmuls
notl
aaa
pop
ljmp
push
adc
xchg
cmp
cmp
inc
std
gs
mov
xchg
sbb
mov
pop
push
insb
inc
sbb
cs
pop
inc
jecxz
xor
push
popf
or
jmp
nop
ss
shl
addr16
orl
imul
and
ss
notl
adc
mov
imul
or
xchg
nop
popf
pop
cmp
rorb
or
adcb
mov
mov
ret
scas
test
jnp
js
sub
push
imul
imul
mov
sbb
xor
fildll
sub
jae
fucomp
sub
jnp
pop
sub
jbe
push
mov
push
mov
rcr
mov
sarb
xor
adc
out
fcmovnbe
shll
out
adc
add
inc
adc
das
mov
xor
inc
jb
xor
mov
int
sbbl
sub
pop
sbb
xchg
lods
imul
jbe
or
andl
push
scas
xchg
ds
repnz
and
dec
cmp
inc
adc
mov
xor
scas
push
jno
jmp
loope
movsb
test
imul
fisubs
fcom
int3
mov
sbb
cmpsb
jae
aad
jnp
xchg
lea
popa
mov
xor
jnp
pop
cmpl
in
fcmovb
cwtl
shrb
cltd
dec
xchg
jns
inc
adc
jg
test
cmpsl
jle
fsubs
sahf
or
addl
hlt
lcall
daa
nop
adc
sub
stos
and
ss
xor
ja
mov
testl
addl
out
push
xchg
pusha
sub
inc
jge
repnz
mov
ds
mov
xchg
movb
jb
inc
std
cli
lret
leave
push
fstpl
push
fs
fs
and
jecxz
add
icebp
cmp
dec
cld
rcll
jmp
mov
fs
sub
pop
cmpsb
insb
push
ljmp
mov
iret
loope
in
push
aaa
fisttpll
cmpsl
pop
movsl
cmp
sahf
inc
pop
jmp
mov
mov
movsl
pop
idivl
add
sahf
xor
mov
and
repz
cmp
xchg
sahf
xor
pop
fsubr
rolb
pop
xor
outsl
xlat
sub
cmp
mov
and
jne
fnstcw
popf
sbb
add
scas
push
mov
sbb
mov
sbb
lds
push
xor
shll
xlat
dec
mov
jb
repz
xchg
iret
dec
test
and
ficoml
add
lods
lea
jnp
js
or
xchg
jge
mov
push
xchg
pxor
push
sbb
xor
and
cwtl
jbe
iret
or
scas
daa
test
test
arpl
sbb
lahf
add
adc
vmovlps
outsl
ljmp
loopne
inc
sub
stc
es
and
cmp
mov
mov
mov
or
add
cmp
push
xchg
sub
lds
add
cmpl
loop
insb
ficoms
cmp
test
cmp
dec
lock
add
dec
jg
adc
dec
outsl
push
clc
and
adc
adc
mov
imul
jnp
scas
sub
xor
in
mov
mov
mov
ret
out
adc
iret
popa
push
loopne
js
lds
adc
push
lahf
daa
inc
icebp
ss
xchg
jae
stos
sub
mov
mov
xchg
shrb
pusha
stc
add
stos
xchg
push
push
adcb
sbb
fisttpll
inc
pop
or
shr
mov
or
in
jo
repnz
test
ljmp
stc
sub
into
rorl
inc
fcom
fldcw
pop
scas
aam
daa
test
outsb
aad
repnz
lret
call
xchg
jg
push
jp
jl
sbb
xchg
les
add
push
inc
adc
and
outsl
mov
sbbb
cmp
adc
adc
and
outsl
inc
insl
xor
mov
xor
lahf
mov
xchg
or
ret
jns
lods
fldcw
jbe
jp
push
xchg
mov
dec
mov
cltd
mov
popa
adc
aaa
ret
jle
negb
push
cs
sub
inc
insb
push
repnz
cmp
jb
push
cmp
arpl
jge
xor
divb
push
scas
xchg
lahf
notl
sub
mov
mov
pop
test
aaa
hlt
pushf
out
jnp
fisubrs
xchg
in
in
cs
cmp
mov
push
scas
into
cli
or
movsl
loop
iret
jmp
inc
outsb
bound
int3
push
cmpsl
add
sti
sbb
sub
mov
pop
push
mov
in
xlat
hlt
cmp
ljmp
adc
cmp
lods
imul
push
rol
sahf
fimuls
or
dec
js
daa
lret
je
pop
cltd
cmpb
fidivrs
dec
mov
xor
dec
mov
lea
out
das
dec
jns
mov
sarb
sbb
push
jns
inc
mov
lods
xchg
fs
subl
pop
mov
mov
mov
scas
sbb
movsl
fdivr
imul
inc
add
in
push
push
xor
sbb
xorb
outsl
movsb
insl
rcrl
inc
jb
enter
repnz
leave
mov
imul
xchg
push
clc
popl
mov
add
std
and
xor
jns
mov
mov
cmpsl
or
lods
push
dec
dec
xchg
imul
xor
dec
push
cmp
les
mov
jl
sub
mov
adc
xor
dec
mov
xor
inc
xchg
out
mov
fwait
test
out
loope
adc
mov
cmpsl
mov
pop
shll
and
mov
xor
ret
scas
mov
pop
test
movsb
pop
and
dec
sarb
pop
mov
out
jnp
icebp
and
or
jle
lret
movsl
das
aaa
stos
shrl
mov
aad
int3
inc
repz
xchg
int
movsl
repnz
in
fmuls
sub
or
scas
push
out
bound
jns
ret
mov
jbe
dec
iret
sti
mov
mov
mov
into
xchg
adc
and
inc
adc
fmul
or
pop
xlat
mov
cld
mov
aad
mov
mov
cmp
jmp
ret
imul
in
sbb
mov
imul
flds
js
mov
push
not
xchg
fldenv
adc
pop
inc
je
or
stc
andl
les
mov
scas
xor
adc
leave
mov
imul
andb
aaa
dec
mov
movsl
fstpt
inc
mov
mov
dec
push
adc
mov
cmp
mov
mov
xchg
mov
jne
inc
andb
mov
sbb
adc
shl
stc
scas
out
mov
arpl
dec
inc
push
push
iret
movsl
and
lods
cld
xchg
rcrb
push
xor
repz
adc
mov
lahf
popf
je
imul
sub
loope,pt
mov
int
add
out
xchg
xchg
cmp
stos
jle
shlb
push
inc
xor
in
fmull
stos
mov
add
not
and
jmp
and
xor
xor
xchg
ljmp
mov
nop
imul
push
push
pushf
sbb
call
add
int3
mov
adcb
es
int3
shr
lret
sbb
sbbl
mov
push
cmp
dec
fimuls
icebp
push
enter
flds
in
jle
and
push
lds
shlb
dec
pushf
xchg
push
inc
push
into
xor
repnz
es
ljmp
int3
mov
cmp
mov
jle
and
xchg
int
jp
in
mov
lods
mov
stos
mov
or
xchg
xchg
in
lahf
leave
leave
fs
pop
mov
mov
push
sub
add
outsl
push
loopne
sub
rolb
std
pop
mov
pop
jmp
pop
ljmp
xchg
mov
or
pushf
imul
call
sti
adc
movsl
sub
iret
cmp
push
shrb
jnp
adc
push
jecxz
lds
sub
and
mov
jecxz
leave
in
cli
test
iret
stc
test
ret
mov
nop
inc
xor
in
xchg
jae
jge
fwait
hlt
mov
fmuls
repz
mov
fstpt
cltd
jo
dec
mov
les
cmpsl
out
add
pop
jle
jae
sub
pop
ja
push
xchg
subb
aaa
fwait
mov
mov
nop
jge
jae
ss
cmc
mov
push
daa
jecxz
testl
add
add
adc
lret
mov
pusha
mov
je
xchg
in
cmp
or
shll
aaa
dec
pop
leave
lock
gs
add
stc
dec
ljmp
lea
hlt
test
jl
cmc
xchg
mul
cmp
sub
loopne
sbb
rorl
lcall
iret
lds
test
and
int
mov
mov
lahf
sbbb
mov
dec
xchg
dec
xor
arpl
xor
mov
pop
push
adc
cmc
es
stos
cmp
loopne
push
and
repz
adc
cmp
ljmp
xchg
fs
jmp
mov
cmp
ficoms
adc
xchg
lcall
insb
push
push
push
xchg
add
inc
ss
push
xlat
sahf
dec
andb
xchg
sub
or
xor
push
jne
insl
mov
insb
lods
push
hlt
inc
ret
dec
test
pop
mov
mov
adc
ficoml
sub
push
add
lret
or
xor
dec
push
js
mov
ficomps
jle
and
sbb
mov
scas
cmpsb
adc
aas
and
push
imul
ret
loopne
adc
pop
mov
dec
mov
sarl
data16
in
or
sbb
or
add
loopne
scas
data16
call
fwait
cmp
pusha
sbb
adc
andb
jg
mulb
dec
aaa
fwait
mov
roll
mov
add
cmp
lret
addr16
push
adcb
mov
push
testb
and
jno
orl
and
in
inc
or
loop
scas
adc
mov
jl
aaa
sbb
jns
mov
data16
inc
cltd
icebp
and
dec
cmp
in
mov
pop
mov
push
addl
out
imul
mov
mov
xor
xchg
mov
idivl
ficoml
sub
mov
dec
add
adcb
mov
dec
pop
adc
cwtl
sub
mov
in
cmp
jae
mov
sub
movb
pop
cmp
rcrl
mov
or
stos
xor
loope
fistpl
ljmp
push
lds
mov
jo
pop
push
rorl
movsb
inc
insl
pop
imul
mov
insb
dec
adc
cs
loope
mov
rcr
fstps
cmpl
dec
add
sarb
test
in
jecxz
or
call
movsb
cmp
mov
aam
lret
xchg
popf
sbb
adc
fildl
dec
outsl
ret
pop
test
adc
in
pop
lret
in
pop
test
scas
test
pop
mov
xor
push
add
idivl
or
mov
xor
int3
scas
push
mov
mov
fistpll
push
xor
rcrb
xor
and
jmp
push
js
pop
sarl
mov
inc
fisttpll
fisubrl
aad
in
mov
pop
clc
jl
stos
adc
jecxz
pop
pop
inc
push
loop
cmc
rcrl
push
mov
jecxz
mov
and
mov
lea
inc
stc
iret
arpl
cwtl
dec
push
orb
bound
jl
xor
lret
push
dec
adc
icebp
popa
data16
test
insl
and
fsubrl
and
notb
cmp
xor
sub
aas
movsb
push
popf
mov
fdivp
mov
and
in
jno
jg
inc
mov
mov
inc
popf
jg
push
lods
aam
jle
jl
sub
fistpl
dec
xchg
mov
jne
inc
sub
xor
vmptrld
std
mov
lcall
enter
lock
push
add
pop
cmp
dec
repz
sarl
fldenv
mov
outsl
ret
dec
push
add
nop
cmc
or
cli
mov
lret
jle
mov
out
inc
ss
mov
sbb
mov
imul
and
scas
and
jg
sbb
lods
or
jo
loop
scas
dec
xor
cwtl
mov
into
pusha
ljmp
pop
pushl
dec
jge
jecxz
dec
repz
mov
sbb
hlt
dec
xor
mov
movsl
mov
outsl
push
cltd
out
dec
inc
lods
in
dec
call
rcll
mov
inc
jp
sahf
ror
inc
cmc
cmp
xchg
mov
xor
andb
push
and
repz
adc
fucomip
pop
movsb
mov
inc
stos
lret
mov
aad
push
jmp
pop
adc
fdiv
je
shlb
xchg
lahf
insl
lcall
ss
mov
fmuls
adc
arpl
adc
in
icebp
bound
sub
mov
mov
mov
xlat
gs
mov
mov
pusha
incl
fisubrl
xchg
xchg
fldt
cmp
xchg
push
out
repnz
outsl
ret
ja
rcrl
mov
xchg
adc
lock
push
jne
cmc
push
ds
iret
adc
adc
ds
cmc
je
rcrb
push
clc
push
out
dec
cs
push
jo
shl
fwait
xorl
lds
adc
and
enter
jb
pop
dec
mov
and
js
push
sbbb
sub
ret
or
xchg
std
adc
fnstsw
mov
sub
pop
shrb
in
aas
xchg
sbb
lods
movsl
fwait
enter
ja
leave
rcrl
sbb
push
mov
pop
sub
pop
pop
ffreep
fistpl
jge
and
pop
jnp
outsl
rolb
sub
adc
mov
sbb
or
outsb
adc
push
or
cmp
jp
enter
ret
inc
ret
sub
test
je
xchg
sub
es
or
pop
aad
mov
and
adc
repz
mov
adc
dec
mov
jnp
lcall
dec
shlb
sub
inc
inc
and
or
pusha
sbb
push
dec
imul
inc
imulb
out
mov
and
jno
gs
mov
out
je
mov
sahf
out
pop
jge
imul
js
mov
or
fs
push
icebp
pop
and
dec
xor
imul
xor
lock
mov
add
xchg
mov
jns
jl
sbb
jnp
scas
imul
xchg
cmc
mov
cmp
into
hlt
sbbb
nop
cmp
cmp
cwtl
or
push
sbb
cli
adc
fs
jnp
push
pop
xchg
stc
inc
cmc
or
cli
xchg
jbe
inc
add
test
pop
repnz
repnz
loope
and
pop
jns
or
jb
fidivrl
stc
add
shl
gs
sbb
pop
mov
sahf
or
xchg
insl
mov
das
xor
mov
notb
icebp
jno
mov
loop
mov
ljmp
fstps
into
ret
sub
jns
xor
push
jns
or
sbb
jmp
and
sub
jnp
scas
push
mov
adc
in
out
jl
data16
mov
cli
cwtl
xchg
sbb
push
mov
daa
popl
verr
or
sbb
dec
dec
shrl
push
dec
lret
out
fwait
leave
std
mov
xor
rcrb
ret
mov
rcr
jnp
xchg
test
cwtl
pop
jae
inc
cmpl
jle
mov
push
in
and
ja
pop
lcall
stc
mov
or
adc
pop
ss
or
test
aaa
push
pushf
or
cmc
mov
iret
sbb
les
stos
int3
stc
pop
jge
in
data16
xchg
mov
cli
test
sub
sahf
xchg
add
shlb
jb
cmp
xchg
int3
std
aam
into
test
jl
sub
dec
int3
xor
pop
xor
xchg
jp
push
cmpsb
sub
or
cmp
scas
cmc
cld
jge
lds
bound
pop
je
mov
test
mov
sbb
pop
clc
dec
push
int
pop
cmp
xlat
cltd
ds
ret
lahf
mov
repz
sub
mov
stos
add
mov
insb
xchg
pop
cwtl
lret
je
cmpsl
fbld
mov
pop
sbb
push
ja
xchg
mov
push
mov
in
pushf
mov
add
lret
repz
lahf
lds
adc
or
or
jle
jnp
ficomps
out
or
scas
adc
pop
imul
scas
lea
mov
insl
fbstp
sbb
daa
pop
or
add
sub
fistpll
jecxz
faddl
out
jnp
test
aas
or
rolb
mov
dec
daa
jnp
mov
lock
into
fidivl
orb
xlat
xchg
xchg
xchg
sub
pop
mov
out
adc
rcrb
cmp
test
out
mov
lods
mov
cld
mov
push
outsl
fildl
push
mov
fidivl
jbe
loopne
loope
xchg
decb
or
sub
xchg
lods
cmpsb
int
dec
add
sub
insl
imul
iret
inc
add
je
cmc
xchg
xor
push
pop
fwait
movsb
sbb
mov
mov
mov
sub
fcmovb
popf
push
out
fdivs
out
scas
lock
scas
ljmp
adc
inc
lret
fnstsw
sub
xchg
popa
test
mov
adc
jl
xor
out
xchg
sub
test
jo
std
cmpsb
movb
push
mov
add
inc
fiadds
loop
out
repnz
call
xor
and
lret
bound
testl
js
sub
shrb
xchg
incb
ljmp
stc
imul
jle
lret
inc
fucomi
aad
lret
mov
inc
sbb
inc
aas
addr16
cmp
notb
push
fwait
arpl
div
push
sub
push
in
repnz
jmp
inc
or
ja
jle
mov
add
xor
jle
insl
cmp
jbe
inc
xor
fstl
add
mov
clc
imul
out
mov
mov
jmp
clc
lea
cltd
mov
mov
adc
popa
sbb
cmp
lea
xchg
jne
lcall
adc
jne
dec
call
lods
cmp
dec
mov
fsubl
imul
icebp
xlat
mov
xchg
push
add
adc
fnstsw
or
enter
sbb
add
js
scas
pop
or
pop
mov
dec
sub
push
add
xchg
pop
movsl
lahf
aas
and
xor
dec
add
incb
add
add
aaa
dec
jbe
int3
push
popf
enter
sbb
xor
test
dec
out
scas
push
stc
mov
pop
jo
das
mov
iret
mov
jp
imul
mov
mov
rorl
xchg
stos
pop
adc
cmp
sti
stc
fisubrs
sahf
jle
ret
xchg
xor
lahf
mov
mov
cmp
pop
jmp
cmp
push
and
sub
fists
push
push
out
rcl
push
push
or
and
add
stos
fisubrl
pop
outsl
ficoms
subb
mov
mov
fstpt
push
dec
leave
lret
lea
push
jae
inc
in
cmpsl
jae
jp
movq
fcoml
adc
jl
adc
fs
jg
fdivp
cmp
int
mov
xlat
scas
inc
div
mov
imul
mov
negl
mov
add
out
lahf
outsb
scas
push
and
mov
lock
fwait
movsl
pop
out
dec
outsb
mov
repz
out
shr
push
mov
add
inc
mov
xchg
pop
shlb
mov
fadds
orb
ja
pop
xchg
inc
mov
fistl
jmp
mov
or
push
leave
out
scas
loop
repz
and
and
mov
or
iret
popa
stc
out
mov
mov
push
add
ret
test
jo
jno
sub
xor
push
cwtl
inc
popa
push
pushf
mov
xchg
cmp
in
dec
sub
in
loope
cmc
out
nop
cmpsb
add
xchg
pop
stos
leave
cmp
out
ffree
mov
adc
sub
orl
adc
cmp
inc
jae
sarb
lods
pop
inc
xchg
repz
inc
push
imul
ja
fisttpl
adc
sub
loop
cmpsl
sub
cmp
or
cs
arpl
and
stos
out
aam
push
inc
pop
mov
test
xor
movsl
dec
dec
dec
mov
push
cmc
into
push
dec
push
in
xor
cmp
unpcklps
jae
adc
pop
xchg
repz
loope
dec
push
ret
in
cld
sbb
stc
xor
mov
sbb
daa
int3
adc
mov
dec
fidivrl
outsb
push
cmp
sbb
sbb
adc
js
pop
cld
repnz
push
inc
push
fdivrl
inc
xor
add
sbb
in
or
test
repnz
fchs
and
mov
mov
cmp
or
mov
mov
shll
int3
jo
jno
ret
add
in
push
jno
sub
xchg
out
jb
cmp
ja
mov
jnp
pop
test
mul
dec
gs
adc
shll
rcl
push
dec
pop
loope
mov
xchg
scas
repz
dec
or
mov
in
push
pop
push
jmp
or
in
mov
jecxz
notl
pushf
xchg
repz
inc
icebp
and
js
cltd
push
out
xchg
mov
jo
rclb
dec
jno
pushf
rep
sub
adc
jae
and
ret
movsl
xor
jns
cs
fsts
dec
xor
lods
scas
insb
dec
mov
outsl
scas
cmpsl
cmp
mov
sbb
xchg
xchg
mov
aad
adc
cmp
aas
dec
pop
test
jnp
or
pop
lds
or
or
mov
mov
flds
sahf
cmp
cmp
or
jae
in
mov
loope
xor
insl
inc
or
pusha
inc
lcall
daa
dec
aaa
lea
in
stos
bound
jne
cmpsb
mov
xor
repz
sub
insb
aaa
test
jl
sub
sub
lods
mov
int
call
fdivrl
sbb
fldl
lahf
cmpb
dec
add
stc
psllw
jge
lds
xor
mull
gs
je
jb
outsb
cmc
and
das
movsb
ljmp
inc
push
jb
and
push
out
cld
pop
pop
pushf
sub
jae
ja
cmp
mov
mov
shrb
sahf
or
sub
add
insl
sti
or
push
sub
fs
mov
fldt
in
aaa
push
icebp
testl
sbb
aaa
pop
adc
das
cli
loop
adcb
sub
fsubrl
dec
int
or
add
and
adc
adc
hlt
jle
sbb
test
mov
mov
and
stos
icebp
xchg
cli
mov
mov
dec
xor
mov
dec
xor
push
push
icebp
xchg
inc
add
in
stos
fs
xchg
stos
xor
pop
incl
int3
ss
and
xor
imul
cmp
push
sub
clc
arpl
and
inc
adc
out
int
inc
cmpsl
cs
xchg
lret
push
mov
pop
mov
test
dec
lods
xor
sub
sbb
into
ficomps
push
lea
cmp
stos
jb
xor
aaa
xchg
push
cld
lds
test
addps
mov
dec
or
and
ds
jle
jl
mov
cmpb
dec
int3
in
adc
es
jae
pop
scas
adc
mov
or
dec
mov
inc
stos
xlat
stos
or
adc
pop
mov
sbb
jno
xchg
out
arpl
dec
loope
dec
inc
aas
dec
push
or
data16
insb
scas
fwait
arpl
push
ljmp
dec
xchg
stos
stos
jb
cmp
inc
add
fldt
jp
dec
dec
xlat
and
push
test
mov
lret
mov
stos
or
push
jmp
and
push
aas
call
shlb
cltd
jbe
and
std
stos
lret
pcmpeqw
add
js
mov
add
clc
gs
cld
cmp
lahf
pop
jmp
mov
std
sahf
rolb
insl
pop
lcall
loopne
mov
push
or
cmp
pop
test
hlt
pusha
mov
mov
call
xchg
insl
les
in
lock
rclb
push
jnp
stos
mov
fmull
pop
std
stos
sub
sti
cld
ljmp
xchg
and
push
dec
shlb
lds
scas
in
pop
mov
movsb
add
mov
in
scas
xor
sub
push
daa
cli
mov
test
icebp
pop
arpl
cmp
inc
push
imul
push
lods
mov
pusha
adc
inc
xor
popa
sub
out
xor
mov
mov
adc
loope
and
shl
jle
mov
pop
and
loop
addr16
cld
dec
fdivrp
and
push
xchg
inc
dec
call
jns
sbbl
xchg
mov
adc
stos
stos
js
mov
xor
sbb
push
inc
enter
cmp
mov
mov
jecxz
inc
mov
lcall
clc
lods
xchg
idiv
adc
adc
int
mov
ja
adc
std
pop
lock
mov
push
dec
pop
xor
pop
or
pop
mov
movsl
cmp
xchg
mov
lea
pop
jmp
aam
mov
test
xor
push
xlat
jns
sbb
mov
xlat
sbb
cwtl
arpl
ret
or
xchg
fs
inc
or
in
adc
xchg
cwtl
mov
push
mov
fs
stc
push
pushf
out
mov
int
mov
adc
inc
or
inc
ret
cmp
xchg
adc
push
std
ret
mov
cvtpi2ps
and
jle
loopne
rorl
inc
mov
mov
pop
pop
cmp
mov
test
mov
data16
lret
int3
div
sbb
ret
sub
inc
int3
mov
es
into
or
andl
add
jo
push
mov
js
sub
stc
mov
cmp
into
mov
in
mov
and
push
push
rolb
mov
aaa
je
inc
lods
xchg
push
mov
or
xor
dec
clc
fcoml
movsl
out
xchg
sub
adc
or
lea
add
sub
jp
jmp
fnstsw
pop
pop
dec
mov
pop
pop
sbb
sbb
and
mov
ds
jg
shl
sti
pop
in
repz
outsb
sbb
bound
js
popa
mov
sbbb
push
pop
les
mov
ds
fcomp
add
inc
popa
arpl
in
xchg
fdivs
pusha
lea
testb
xor
xchg
cmpsl
icebp
es
bound
dec
pop
push
adc
mov
mov
fdivrl
pop
add
xor
mov
ret
push
sbb
add
call
sbb
jmp
ret
xchg
fldcw
pop
push
jmp
or
mov
cmp
shrb
xchg
xor
jno
cmc
out
cmpsl
sti
push
shll
test
adc
adc
push
mov
pmaxsw
pop
mov
pop
rcr
loop
sub
pop
lcall
mov
xchg
mov
fstl
test
lds
and
ss
push
mov
pop
aad
sbb
add
sub
gs
sbb
call
jg
das
push
aam
rorl
pop
add
std
or
jb
rorb
repz
mov
xchg
pop
sbb
insl
cli
jmp
fdivrs
or
addl
pusha
test
fstps
fldenv
sbb
pop
lods
mov
sbb
adc
outsb
imul
inc
es
stos
sub
pusha
push
mov
ljmp
jmp
psllq
lea
and
rorb
mov
push
mov
in
cmp
adc
inc
test
cmp
test
mov
imul
sbb
mov
push
ss
push
lock
clc
aas
imul
in
dec
dec
push
in
or
hlt
lods
inc
push
ret
int3
iret
loopne
or
or
xchg
adc
iret
inc
cmpb
jbe
add
inc
cld
mov
ret
inc
bound
test
adc
mov
in
sub
out
pushf
sub
mulb
push
dec
call
aas
ret
clc
jmp
push
lock
dec
aad
out
xor
outsb
daa
and
and
fsub
ret
mov
orl
jns
iret
push
fistl
xor
mov
sbb
stc
out
mov
sar
sub
stc
sbb
sti
inc
dec
push
adc
fmull
je
xchg
cmp
push
inc
mov
jecxz
addr16
fstl
fmul
or
loop
and
lds
pop
add
and
loopne
cmp
ds
sahf
jle
pop
mov
prefetch
or
lahf
mov
and
mov
je
push
int3
mov
mov
xor
movsl
and
outsl
fninit
iret
les
add
mov
lret
lret
shll
popl
xchg
loopne
mov
imul
add
testb
jecxz
sar
cld
sub
push
shll
ja
mov
add
jmp
inc
imul
jbe
pop
roll
imul
sbb
pusha
addl
xchg
jns
and
dec
test
jmp
repz
mov
pop
outsb
sbb
out
mov
adc
adc
aad
lea
xor
icebp
xchg
in
dec
data16
imul
pop
mov
sbb
push
shr
lcall
cmpsb
jns
ljmp
bound
add
insl
jbe
and
pushf
adc
lock
imul
test
test
int
mov
push
jp
push
in
mov
mov
cltd
mov
mov
dec
out
jp
xor
jne
adc
jne
dec
out
je
lcall
sbb
pop
imul
sbb
imul
push
leave
cmp
cltd
cmp
add
iret
cmp
int3
mov
cmpsl
ljmp
pop
insl
daa
dec
pop
imul
jne
std
stos
cmp
push
and
xchg
shrl
aaa
movl
and
jecxz
and
jne
xor
jge
pop
lahf
movsl
push
inc
in
ljmp
jno
xchg
in
xchg
shlb
addb
mov
adc
sarl
cwtl
out
cmp
test
inc
jno
mov
mov
call
int3
popf
push
das
pop
loopne
push
jg
or
int
mov
mov
sbb
sbb
add
or
idivl
out
loopne
xor
mov
mov
sahf
push
repz
or
jne
aad
add
jnp
lret
lods
outsb
push
sbb
adcl
and
dec
adc
and
stc
ret
pop
or
ret
push
mov
or
movntq
ret
mov
outsb
pop
ds
mov
mov
xchg
mov
mov
aad
mov
je
cmp
xchg
inc
mov
adc
mov
sarb
repz
cld
into
adc
scas
jnp
jbe
push
mov
and
pop
clc
and
out
xchg
fwait
addr16
jmp
sub
sbb
mov
rclb
sub
fadds
mov
lock
in
fcomps
inc
xchg
sbb
fs
inc
das
xchg
sbb
pop
shrb
imul
dec
mov
jns
dec
inc
mov
xchg
fcom
sbb
pusha
pop
push
push
ret
mov
mov
fsubs
or
and
pop
sub
arpl
movsl
fmull
std
es
mov
inc
inc
ret
sbb
test
inc
sbb
push
shrb
lods
sti
sbbl
and
cmpl
and
pop
inc
lcall
cwtl
imul
cmp
stos
xorl
pop
jb
int
sti
jecxz
push
jnp
bound
mov
dec
push
pop
cmc
push
ret
adc
pop
call
mov
dec
sti
mov
fidivrl
xlat
cltd
loopne
loop
stos
jle
inc
adc
mov
loope
xor
mov
dec
jns
lock
xor
mov
popf
cli
add
inc
mov
xor
sub
loope
test
lret
scas
cmc
xchg
cmp
jo
repz
add
mov
and
mov
xchg
mov
jns
imul
jg
orb
push
lcall
jo
popa
scas
jp
inc
mov
pop
mov
dec
insl
jns
out
add
push
out
adc
repnz
stos
stos
shlb
sarb
lock
and
mov
or
mov
lods
or
repz
fdivrs
lahf
cmp
jmp
fdivr
aad
inc
jl
add
inc
outsb
clc
adc
cmp
imul
and
push
inc
int3
sub
lods
mov
dec
popf
lock
outsb
pop
inc
inc
mov
lret
cmp
mov
scas
mov
enter
and
adc
add
aaa
imul
mov
pop
adc
mov
leave
xor
and
rorl
jb
inc
popa
enter
pop
movsl
dec
jmp
mov
orb
xor
sbb
xor
dec
sbb
lea
and
stos
push
idivb
push
jle
dec
aam
lods
push
add
add
and
or
not
jmp
adc
je
pushf
cltd
ss
xlat
mov
and
daa
mov
int
push
push
mov
mov
scas
sbb
pop
pusha
clc
inc
jb
pop
sub
fsubrp
cmpsl
stc
push
repz
inc
into
push
mov
push
mov
in
push
loop
into
dec
lock
outsb
insl
aad
push
icebp
gs
xor
xchg
jo
shrb
fstpt
test
mov
or
jmp
popa
in
jmp
aam
adc
pop
push
fldt
sub
int3
cltd
call
cs
xor
mov
imul
xchg
test
mov
cmpl
imull
shlb
movsl
sbbb
fdivl
scas
mov
push
jmp
ds
xchg
lret
mov
sub
stc
loopne
xchg
cs
xor
cld
pop
es
sub
and
lods
push
les
mov
xor
cmp
lds
int3
ret
flds
pop
sbb
lods
push
cmp
lods
jge
xor
ret
mov
mov
enter
in
movsl
or
pushf
jns
add
dec
pop
push
pop
dec
adc
shr
cmp
lret
dec
push
dec
jo
mov
out
mov
inc
xchg
inc
icebp
std
cld
jns
sahf
push
jl
adc
repz
or
dec
scas
lahf
js
ret
inc
pop
stos
das
sbb
add
xchg
lret
scas
dec
push
adc
js
jecxz
jmp
jmp
cmp
aad
bsf
mov
mov
pop
add
aad
and
mov
lea
out
add
adc
push
xchg
outsl
jp
in
mov
mov
dec
mov
scas
dec
lods
outsb
xor
mov
jmp
ss
loop
push
dec
leave
cltd
cmpsl
sbb
mov
loope
adc
mov
push
in
pop
push
roll
dec
in
lcall
push
dec
mov
cmp
mov
mov
sbb
mov
or
ret
rol
mull
ljmp
sub
cltd
mov
push
dec
test
mov
sti
sbb
icebp
xor
out
xchg
jno
fs
sub
out
shlb
enter
imul
xchg
and
cmpl
subl
mov
mov
push
fsubs
cmp
dec
xorb
andb
xchg
iret
or
jl
mov
cli
add
jno
sub
jp
mov
mov
mov
in
pop
lea
sahf
mull
stos
pop
scas
add
mov
adc
into
sbb
mov
add
insb
cmp
or
inc
daa
xchg
call
mov
shll
sub
or
aaa
add
popa
jae
cmpsb
xor
inc
in
mov
test
scas
adc
lods
pop
cmpsb
loope
xor
push
xchg
xchg
cwtl
push
jae
xor
xchg
jmp
mov
dec
stos
jae
xor
fisubrl
sub
adc
sub
bound
out
sub
xor
mov
mov
inc
ss
insl
repz
inc
mov
and
dec
stos
scas
imul
add
in
out
das
cmpsb
aad
push
bound
jl
xor
jge
ffreep
dec
push
xor
aad
pop
xchg
inc
rcrb
or
enter
stos
add
loopne
or
pop
loopne
inc
cltd
and
mov
clc
inc
pop
repz
xchg
shlb
test
movsl
out
out
add
and
icebp
pushf
sbb
sub
and
adc
or
lock
mov
aam
repz
sub
fcom
fnsave
ret
icebp
add
popl
mov
pusha
inc
imul
xchg
mov
add
aas
repz
adcl
sub
sub
cmp
pop
dec
push
add
xchg
mov
jne
out
adc
mov
cmp
push
cltd
dec
jns
mov
add
mov
jmp
fbld
add
adc
add
test
xor
adc
add
lds
mov
xchg
rcrb
outsl
aad
pusha
mov
cmpsb
or
xchg
scas
fcmovnb
xchg
aaa
xchg
xor
jno
roll
mov
cmpl
xor
pop
fucomip
push
popf
aam
dec
push
movsb
or
fisubrl
movsl
sbb
jne
scas
int
je
xchg
xchg
push
xchg
pop
push
add
nop
fdivr
andl
add
fcmovnbe
arpl
add
mov
enter
mov
mov
inc
sbb
neg
movsb
out
aam
mov
add
int3
jle
push
and
push
lret
std
jmp
jb
and
pushf
adc
sbb
pop
orb
mov
or
outsb
es
or
sub
ret
push
pop
loop
jge
fwait
or
or
fisttps
imul
loopne
mov
jns
push
pop
fwait
pop
cwtl
mov
xchg
xor
sub
jle
aas
xorl
outsl
mov
imul
stos
add
pop
inc
sbb
out
enter
repz
cli
repz
pop
cld
icebp
pop
jp
or
pusha
jle
mov
clc
add
outsl
dec
dec
aam
xor
inc
jge
cltd
fcoml
aaa
mov
sub
loope
icebp
pop
mov
mov
outsl
sub
adc
push
or
fiadds
lret
push
mov
rcr
idivl
or
dec
stc
outsl
push
fmull
js
bound
je
jmp
das
idivl
enter
movsl
ds
aam
inc
in
inc
or
mov
inc
cmpsb
fcompl
out
imul
mov
filds
out
arpl
leave
adc
test
out
cli
stos
stc
call
or
cmp
fsubr
inc
push
lea
xchg
fwait
dec
mov
out
mov
in
loopne
fiadds
mov
popa
mov
dec
or
cmp
pusha
adc
test
stos
xchg
call
pop
int3
rorb
cld
repz
mov
push
push
fnstenv
loopne
push
inc
hlt
jno
add
sarl
push
in
scas
fdiv
popl
jg
lds
xor
lods
mov
mov
mov
sbb
flds
xor
cmpsl
or
inc
pop
in
xor
test
lea
inc
sub
in
test
lods
dec
cmp
popf
xor
mov
movb
push
push
inc
or
sbb
jle
daa
lea
or
lods
fstp
xor
out
jb
or
cld
or
add
xchg
clc
inc
xlat
cld
movsl
addr16
mov
and
xor
jp
push
adc
push
or
or
sbb
dec
lret
shll
push
mov
cs
add
xlat
bound
mov
inc
insb
sub
xor
xchg
or
ret
dec
cltd
fs
or
scas
cld
and
mov
popf
jmp
lcall
mov
xor
mov
add
mov
clc
insb
or
mov
in
lods
xchg
shrb
xor
neg
shrb
xorb
sbb
dec
popf
adc
pop
push
addr16
fdivs
xlat
jl
shlb
push
xor
into
jle
mov
sbb
sub
test
std
mov
nop
or
shll
test
mov
in
cmp
mov
jbe
push
or
idiv
stos
and
adc
jp
mov
inc
cmp
fistps
popa
pushl
shll
cmp
out
mov
sbb
mov
mov
or
pop
test
ss
mov
jmp
ror
cltd
mov
adc
jbe
cld
dec
stos
lds
dec
push
mov
icebp
imul
jae
push
push
cmp
sbb
xchg
stos
pusha
hlt
cmp
xchg
imul
loopne
pop
andl
out
notl
cmpsl
and
mov
loope
cmp
psubsw
mov
les
or
push
add
mov
push
xchg
or
pusha
cld
and
pop
and
push
nop
sub
xchg
out
jno
or
sub
insl
pushf
rcll
out
shlb
rcrb
in
mov
or
mov
and
adc
mov
das
jns
fwait
sbb
aaa
scas
push
inc
fbld
insb
cmpsl
movsb
cmp
jne
stc
imul
sbb
add
xlat
mov
in
cli
rcrb
sahf
mov
mov
jg
jecxz
je
sbb
jmp
xchg
pushf
mov
dec
stc
pusha
mov
lahf
pop
mov
xor
iret
aas
mov
mov
and
cmpl
fsubrl
arpl
inc
mov
xorb
ss
pusha
xor
mov
push
mov
int
or
push
aaa
cmp
jg
add
adc
cmpsl
add
xorb
stc
pop
xchg
dec
add
jp
xchg
loop
jg
inc
in
mov
xlat
pushf
add
mov
jnp
fmul
pop
add
pushf
addr16
lea
add
push
scas
jo
jae
xor
jae
xchg
cwtl
or
sbb
cltd
inc
cmpl
sti
jne
mov
xor
dec
rcll
inc
repz
nop
xor
xchg
sub
daa
sahf
sbb
cmp
aad
lock
sub
push
idivl
insl
mov
into
ds
push
test
push
out
cmp
stos
pop
outsb
xor
xor
sub
dec
push
adc
fbstp
ljmp
stos
scas
out
dec
cld
nop
rclb
xchg
and
mov
xor
dec
mov
cltd
xor
pop
jp
pop
mov
popf
cmpsl
clc
out
push
lods
jno
xchg
jecxz
sub
dec
xor
cmp
pop
aam
mov
fwait
pop
jae
dec
lea
loop
pop
in
xchg
cld
aad
clc
push
push
mov
inc
adc
inc
lahf
mov
aam
mov
fdivrs
xchg
cmp
leave
push
dec
dec
dec
mov
fsub
insb
pop
cmpsl
mov
mov
adc
mov
xor
dec
movsb
in
movl
cli
jle
pop
mov
div
in
lret
push
sub
mov
scas
imul
insb
movsl
push
inc
jmp
add
xchg
shrl
ret
push
cld
gs
pop
in
sti
loopne
sub
adc
mov
add
cmpsl
mov
xor
js
je
cwtl
jnp
jae
mov
loop
ret
sbb
sub
push
ss
jnp
pop
sbb
xchg
loopne
imul
out
bound
imul
dec
push
dec
mov
es
cmp
lea
mov
inc
push
in
sbb
sub
jb
fcomp
out
push
loop
sahf
sbb
cmp
es
xlat
daa
das
xchg
or
in
imul
adc
or
gs
stos
subb
and
mov
xor
outsl
ja
xchg
movsb
cli
jb
lds
fcomip
movsl
mov
pop
nop
in
add
outsb
sbb
sbb
cmp
stc
addr16
ret
mov
and
add
data16
movsb
roll
shll
imul
or
sub
fstpt
mov
inc
pop
mov
xchg
movsl
lock
mov
sub
xor
lods
push
scas
cmpsb
cmc
adc
cwtl
or
sbb
test
es
cmp
mov
rsqrtps
in
add
enter
movsl
adc
pop
and
push
mov
ds
into
daa
fptan
sub
lahf
add
sub
cmpsl
pop
hlt
in
cld
mov
mov
cmc
mov
mov
dec
data16
jnp
jp
loopne
ds
js
wrmsr
cmpsb
push
sbb
test
scas
mov
movsl
jne
cmpsb
jl
and
pop
testb
push
mov
xchg
sub
inc
ja
std
lea
ret
das
clc
dec
seto
clc
pop
dec
and
dec
xchg
stos
xor
add
push
fisttpl
xchg
push
insl
leave
inc
ficomps
cmpsl
std
stos
rcr
loope
and
push
daa
call
cmpsl
dec
enter
xchg
fsts
loope
insl
push
insl
arpl
mov
cmp
sbb
jbe
push
ret
dec
bound
popf
shr
stos
or
mov
and
pop
aad
pusha
repz
cmpsb
push
adc
mov
iret
mov
xchg
incl
inc
lds
pusha
push
lea
or
fs
lahf
daa
lea
mov
imul
jg
and
or
or
pushf
adc
adcl
xchg
test
pop
enter
jp
xchg
xor
and
loope
outsb
insl
popa
push
ss
lret
int3
mov
loopne
or
xchg
sbb
adcb
fidivl
fbstp
iret
mov
arpl
ds
ds
xor
mov
cmpl
push
test
repz
mov
dec
push
mov
inc
or
jo
push
loop
test
add
cmpsb
shll
mov
adc
out
lret
rolb
divb
in
icebp
xlat
add
mov
insb
push
or
mov
mov
sarb
xchg
fstl
insb
jno
arpl
sbb
stos
mov
in
orl
outsl
das
lcall
loop
cltd
negb
and
loop
mov
insl
arpl
xchg
xor
outsl
mov
and
cmp
out
popa
mov
push
mov
mov
or
inc
cmp
andl
sbb
aaa
jp
out
mov
jb
push
push
cltd
add
mov
pop
cmc
in
adc
mov
mov
cmp
pop
dec
loopne
hlt
jp
pop
pop
mov
add
mov
xor
mov
fisubrs
or
mov
lea
jg
sub
and
adc
jo
xor
or
lock
aad
mov
pusha
inc
fadds
mov
cmpsb
jo
push
aas
xlat
inc
and
movsb
aam
push
inc
pusha
jp
shrl
add
xchg
hlt
lea
cli
cmc
sub
push
dec
loopne
out
jae
ljmp
fcom
sti
stc
push
mov
insl
call
aad
xor
cmp
pop
fs
ss
jb
cmp
adc
push
or
push
rcll
jns
and
fbld
push
sub
faddp
imulb
test
jge
push
sub
mov
fnstenv
dec
aaa
call
cmp
cmc
fwait
mov
out
das
cmc
jle
mov
movsb
sbb
dec
stos
rcrl
pusha
push
sarl
out
add
fcmovnb
lret
adc
bound
rorb
sbb
out
int
repnz
jmp
or
sbb
lahf
xchg
or
roll
pop
xchg
xor
hlt
jle
add
decw
cwtl
sub
into
loope
and
xor
mov
test
push
lret
fnstcw
scas
fstl
pop
mov
in
sbbl
mov
leave
aas
inc
sbb
mov
mov
jb
rclb
loopne
inc
mov
insl
jge
push
fs
jecxz
sbb
xor
xlat
push
or
sbb
mov
pop
push
mov
aas
out
cmpsl
push
inc
push
sub
and
xor
outsb
addr16
ja
aam
hlt
fidivrs
mov
xchg
xchg
pop
or
cld
test
fnstcw
pop
push
push
nop
loopne
jle
push
outsb
outsb
adc
mov
inc
lods
mov
pop
mov
call
dec
lret
lea
mov
call
outsb
adc
gs
xchg
lret
sub
stos
icebp
adc
adc
push
dec
ljmp
addr16
hlt
mov
cmp
fstpl
xchg
sub
cmc
mov
xchg
popf
test
sbb
pop
inc
imul
shlb
or
add
jns
xchg
imul
xchg
ds
stos
aas
mov
mov
fwait
mov
lcall
cmp
bound
or
lcall
mov
stos
add
or
cmc
lods
rcl
adc
mov
mov
and
orb
es
dec
rorb
outsb
adc
xor
mov
ss
pop
add
mov
aas
xor
mov
out
xor
daa
js
enter
mov
pop
leave
inc
cmp
jne
imul
leave
inc
xchg
xchg
sbb
sub
sbb
inc
divb
roll
jle
adc
xor
xchg
mov
leave
adc
jp
mov
pop
divl
iret
jp
mov
lret
movsb
jg
inc
clc
push
int3
inc
jo
jbe
mov
jb
sub
mov
push
movsl
movsl
sbb
pop
push
pop
clc
ljmp
jae
stos
pop
dec
or
dec
mov
repnz
push
xor
mov
ret
push
push
stc
xor
aaa
out
jge
fsubrs
faddp
sbb
popa
stc
and
mov
and
in
popa
cmp
pop
mov
and
add
xor
inc
fstps
push
cwtl
gs
lods
push
xchg
mov
shll
ret
and
outsb
dec
mov
scas
popf
idivb
fwait
lret
adc
or
mov
popa
jne
loope
je
add
cli
aad
push
cmc
inc
insl
dec
xor
out
fistl
xchg
testl
dec
sub
and
mov
jmp
push
pusha
and
mov
and
cwtl
andl
loope
in
loop
sub
sbb
movsl
in
sub
dec
or
jl
xor
jno
cmp
push
cmc
mov
dec
and
push
mov
dec
push
mov
sbb
std
ja
mov
pop
sub
push
or
dec
in
cmp
out
mov
push
mov
xlat
mov
fld
mov
push
xor
loopne
mov
pop
stos
sbb
cltd
or
xchg
test
hlt
lret
sub
nop
in
sub
adc
mov
mov
or
dec
in
jne
in
arpl
xor
pop
cmp
jno
leave
xchg
jns
sti
sub
scas
imul
out
or
jae
push
adc
enter
bound
xor
aas
cli
lret
mov
jne
jnp
hlt
int
xchg
jnp
fisttps
or
cltd
sbb
shrl
test
arpl
call
xchg
pop
stc
flds
mull
jl
lods
in
jmp
sbb
cmp
in
or
leave
or
cmp
stos
andb
fsubr
push
cmc
fs
xchg
movl
inc
dec
inc
jnp
mov
push
push
push
out
shlb
movsb
iret
mov
scas
lock
pop
cvtps2pi
out
sbb
ja
outsl
add
into
jb
icebp
in
scas
pop
lds
jg
leave
out
push
inc
xchg
jle
adc
inc
lods
pop
inc
mov
rcll
add
shll
leave
push
dec
mov
fiadds
inc
testl
or
xor
sbb
jge
xchg
mov
cld
lret
xlat
fwait
inc
stos
cmp
testl
popf
mov
and
sbb
sbb
dec
sub
mov
in
enter
and
cli
je
imul
adc
test
icebp
mov
pop
adc
or
rcll
sub
int3
pop
and
jle
js
in
ljmp
leave
jne
sub
rorb
sub
jae
insb
stos
push
stos
inc
xor
sbb
insb
scas
dec
jg
adc
inc
mov
sbb
pop
or
loopne
dec
adc
sti
xchg
xchg
jge
inc
rcll
ficomps
cmp
sub
push
sti
inc
shlb
push
push
mov
popf
loop
out
mov
jl
out
or
xchg
adc
cmc
mov
mov
inc
jno
inc
testb
aam
lret
sub
pop
pop
call
mov
sbb
dec
clc
push
and
dec
mov
call
cmp
pop
jnp
test
jne
push
cmc
push
in
daa
push
ds
pop
inc
sbb
daa
rcrb
push
xchg
push
xchg
int
pop
xchg
fs
testl
jmp
adc
adc
movsl
dec
test
xor
xorb
xchg
pop
xchg
outsl
pushf
das
scas
lock
shl
sahf
idivb
pop
sub
out
inc
enter
pusha
cmp
push
enter
mov
mov
sub
push
fsubrl
in
rorl
jle
ret
fisubrs
lahf
dec
push
inc
inc
popf
lods
scas
js
out
lea
imul
dec
xchg
push
inc
fmul
jle
mov
sahf
inc
pop
cmp
ret
sbb
xor
popf
hlt
fwait
or
mov
or
xchg
sbb
ret
sbb
out
jg
add
cli
mov
pop
dec
cltd
push
outsl
jo
in
cmpl
fsubl
popa
lcall
pop
std
push
sub
adc
dec
jne
fcmove
addr16
mov
mov
test
popf
jbe
stos
mov
clc
cmp
mov
aad
shlb
movsb
arpl
mov
sub
stos
xchg
mov
mov
incl
test
leave
popa
sub
fwait
and
arpl
mov
mov
or
inc
xchg
pushf
js
xorb
xor
movsl
push
dec
mov
push
sarl
popf
test
dec
int3
jno
addr16
xor
fcmovu
adc
lea
insb
fiadds
out
popa
test
cld
mov
cs
mov
repnz
add
aas
stos
inc
cld
add
xor
aaa
push
lcall
in
mov
out
inc
lret
dec
fldenv
push
lea
out
push
test
mov
or
mov
vpsubsb
imul
subb
pusha
xlat
jmp
test
dec
enter
xchg
pop
stos
push
xchg
dec
pop
lock
nop
jno
cmp
mov
cltd
movsw
pop
push
push
lds
push
flds
aas
repz
into
mov
jns
jmp
cmp
push
scas
fwait
pop
pop
adc
sub
fimull
mov
les
or
jae
jb
mov
jnp
jl
and
hlt
fstl
lock
loop
lea
xchg
cmp
inc
scas
and
push
pop
imul
mov
aaa
jb
xchg
sbb
push
or
jecxz
bound
sub
sub
insb
pop
mov
inc
jge
ja
mov
and
sub
cmp
inc
push
outsb
push
pop
test
scas
cwtl
pop
jne
ret
xchg
dec
xchg
push
pushf
push
mov
cmp
jmp
dec
repz
push
loope
cld
imul
imul
pop
jmp
and
ds
or
mov
push
shrb
mov
jb
mov
sbb
out
pop
sub
adc
cli
push
out
dec
nop
shll
dec
stos
xchg
push
pop
sbb
shl
pop
aam
sbb
nop
outsl
mov
pop
mov
arpl
jbe
pop
push
inc
xchg
inc
jae
jns
or
jp
jae
cmpxchg
sub
dec
popf
mov
in
lret
or
dec
push
inc
and
xchg
mov
call
lock
pop
mov
or
jb
call
adc
dec
scas
shll
jbe
add
orb
jnp
xor
sbb
in
shlb
test
dec
cld
jge
push
adc
pop
movsl
fwait
xchg
mov
les
push
sbb
lahf
mov
or
shrb
inc
mov
cwtl
test
addl
lcall
dec
sbb
xor
repz
lahf
das
push
sbb
icebp
xchg
mov
cmp
gs
cltd
cmp
and
adc
fbstp
push
es
in
hlt
lret
clc
xchg
inc
cmc
cwtl
add
daa
sahf
data16
lods
subb
pop
pop
push
js
in
mov
push
xchg
clc
decl
shl
cmc
inc
mov
arpl
sbb
xchg
pop
xor
mov
cmp
roll
cmovnp
add
xor
into
aas
xor
arpl
sub
orb
test
aad
push
leave
mov
test
adc
daa
dec
cltd
aas
sbb
mov
jecxz
jns
imul
add
mov
in
and
push
mov
loop
or
or
jne
ss
repz
mov
inc
shrd
clc
fdivrl
mov
jmp
xchg
inc
adc
xchg
repnz
stc
push
push
xchg
out
sbb
adc
sbb
ljmp
xor
and
test
or
xlat
std
movsl
insl
cmc
outsb
xor
in
in
sub
pop
inc
out
cmpsb
out
push
jge
arpl
or
sbb
inc
xorb
or
mov
jge
call
xchg
fs
xchg
insb
cmp
mov
fistpll
addr16
sub
adc
movsl
add
sbb
das
call
mov
xor
andb
outsl
icebp
jnp
je
lods
sti
inc
mov
mov
xor
xchg
test
inc
xlat
js
add
mov
orl
and
cld
sub
fnstsw
jns
mov
fmuls
xorb
cmp
fstpl
pslld
pop
out
idivb
jge
and
xor
imul
es
lods
or
push
adc
or
push
lea
in
and
in
lods
xchg
push
in
pop
pushf
xchg
mov
mov
scas
test
xchg
xchg
rclb
ss
lea
ja
pop
push
orb
ds
or
inc
inc
and
cltd
mov
sbb
adc
lret
stos
mov
adc
jl
fiadds
gs
repnz
or
xchg
mov
adc
stc
popf
mov
sub
ret
jmp
call
rcrb
stc
bound
lods
arpl
pop
and
or
or
xor
iret
mov
mov
push
jmp
arpl
mov
xor
and
test
bound
jmp
and
movsl
pop
stos
pop
push
in
out
mov
and
lds
sbb
jle
sti
cs
cwtl
gs
test
shr
sbb
xor
andb
ret
push
fstpl
out
lret
lds
push
test
lret
dec
ljmp
and
int3
adc
outsl
sti
adc
mov
mov
xchg
aas
cmp
sbb
bound
cwtl
negl
jno
mov
sarb
mov
adc
lret
fstpl
ljmp
xor
fiaddl
addl
add
stc
and
nop
mov
jbe
jge
sar
jmp
mov
hlt
or
mov
dec
dec
pop
int3
or
add
arpl
mov
jb
jge
popa
xor
dec
ffree
inc
or
xor
push
mov
movsb
add
inc
int3
mov
jle
pop
mov
mov
fldcw
mov
shrb
fisttpll
mov
call
mov
or
clc
inc
push
les
mov
pop
jp
sub
fldcw
fdivrs
js
adc
sar
adc
lea
dec
push
mov
mov
mov
xchg
dec
out
int3
lock
das
jnp
xor
xchg
add
pop
adc
xchg
cld
jmp
repnz
dec
mov
mov
cmpsl
mov
add
pop
outsb
inc
icebp
mov
in
jmp
mov
jno
add
cmp
inc
xchg
adc
in
test
mov
and
in
out
xchg
dec
jbe
sbb
jl
push
dec
sti
jmp
adc
fcompl
or
pop
ja
and
sbb
aaa
lea
jmp
icebp
out
push
add
or
sbb
or
jp
dec
pop
adc
or
cs
push
xchg
lret
mov
add
ss
fwait
pop
fldenv
sbb
mov
push
stos
popf
fs
rorl
jl
and
xchg
imul
mull
sub
push
pusha
repnz
xchg
hlt
xor
mov
ret
cld
pusha
pmuludq
sub
mov
js
je
dec
shr
cltd
sbb
rcl
mov
lock
addr16
je
push
add
shlb
cwtl
pop
inc
mov
adc
fimuls
decb
or
pop
nop
insl
mov
sbb
cmc
sub
call
fmul
xor
fnsave
gs
in
mov
mov
or
and
popa
jg
fiadds
cmp
sub
jecxz
ret
pop
or
mov
xor
sbb
and
pop
dec
xchg
aas
adc
push
pop
cmc
sbb
cmp
int
ja
sbb
test
out
loope
inc
xor
xor
lret
dec
inc
movsb
xchg
mov
in
fsub
mov
add
adc
jle
sbb
inc
test
push
add
bound
or
push
push
daa
fidivrl
in
sub
jmp
xchg
jno
sub
ret
push
push
sub
sbb
out
mov
loop
jnp
mov
mov
aam
popf
push
pop
je
add
daa
vpunpcklwd
sbb
lahf
jno
dec
push
repz
mov
cmpsb
push
and
inc
test
add
scas
jnp,pt
and
xchg
inc
out
pop
or
ret
imul
xchg
sbb
ja
popa
idiv
xchg
ret
repz
add
sbb
orb
jge
popa
mov
mov
sahf
test
push
sbb
push
sub
cmp
rcll
out
loopne
test
scas
rcll
push
xchg
es
sub
cmp
add
adc
sahf
movsb
pop
dec
pop
loopne
icebp
mov
mov
fidivrl
das
inc
insl
inc
mov
sti
xchg
cmp
loope
sbb
or
or
fstps
cmpsb
scas
movsb
or
cmp
sub
pop
arpl
mov
cld
sbb
test
cmp
out
sub
pop
push
repnz
mov
push
stos
shrb
ja
loop
mov
fcompl
iret
xor
mov
xor
pop
mov
pop
jb
sub
jmp
enter
shll
bound
jp
stc
jae
dec
dec
cmp
mov
pop
push
shrb
test
aas
shlb
pop
test
fidivs
data16
pushf
add
dec
and
sbb
movsb
mov
pop
shll
push
pop
xchg
rcrb
jl
fldcw
dec
pop
push
pop
sahf
pop
pusha
je
in
xor
sub
sub
sbb
push
jl
push
sub
repz
adc
cltd
dec
mov
pushf
ja
and
adc
xlat
and
cli
jae
shrd
fsts
in
aaa
or
and
ljmp
lahf
mov
push
leave
jg
in
call
pop
das
xchg
push
inc
adc
sahf
clc
scas
fstl
xchg
mov
push
inc
loope
xchg
and
jmp
dec
outsl
sbb
jnp
mov
push
cltd
dec
dec
mov
out
xchg
xor
shll
ss
sti
aad
das
xor
mov
jns
pusha
mov
pusha
jl
xor
stos
test
mov
popf
aad
cmc
dec
inc
jb
jecxz
mov
mov
movsb
lret
sub
test
repnz
inc
mov
cs
xchg
jle
push
insl
cmc
lret
scas
lods
xchg
int
hlt
jbe
aam
aaa
add
jle
jbe
jo
pop
testl
int
add
inc
mov
pop
out
push
pop
in
stc
push
jae
mov
insb
sub
push
pushf
or
fcoml
xor
outsb
add
shll
int3
xor
pop
loope
sub
jp
jbe
sbb
rcll
mov
push
movsb
popf
imul
sbb
ret
sahf
inc
iret
lea
outsl
test
shl
mov
jecxz
pushf
jmp
test
sbb
sub
mov
lea
jnp
int3
in
loop
enter
data16
jecxz
pushf
xchg
sub
sti
fdivs
add
sbb
sub
out
fimuls
mov
mov
rcrl
roll
std
mov
les
mov
lahf
add
pop
clc
add
or
mov
inc
jae
adc
adc
mov
std
je
cmpsl
popa
repz
outsl
lods
adc
incb
jo,pt
pop
cltd
push
out
inc
loopnew
cld
mov
ret
push
xchg
in
sbb
arpl
bound
out
ss
adc
int3
push
ja
add
outsl
arpl
test
mov
cmp
or
fwait
cmpsl
dec
dec
pushf
dec
push
lcall
mov
pop
arpl
out
test
loopne
in
mov
xchg
cmp
lods
pop
add
in
jg
cmp
daa
in
cwtl
and
divl
push
mov
stc
insl
push
or
mov
bound
ja
in
cmp
cmp
or
xlat
out
into
jne
ss
stc
mov
popf
cwtl
xor
xor
sbb
popf
mov
icebp
mov
pop
mov
nop
mov
mov
in
iret
pop
mov
mov
adc
test
not
mov
mov
pop
mov
movsl
dec
cmp
sub
aas
pop
cmp
cli
int3
pop
mov
loop
pop
jns
pop
icebp
mov
in
cmpl
sub
sbb
pop
scas
cmp
fidivs
cmpsb
or
jge
call
jbe
idivl
aas
fistl
fisubl
out
repz
bnd
lods
pusha
push
push
cmp
in
xchg
mov
jmp
add
cld
push
popf
pop
sub
mov
dec
stc
or
or
sbb
dec
xor
push
repnz
int
jbe
xchg
imul
cmpl
pop
mov
mov
xchg
jbe
lret
imul
out
sub
fdiv
stc
pop
inc
mov
cmp
inc
pop
mov
pop
push
int
or
icebp
jnp
adc
mulb
and
mov
push
sahf
push
mov
pop
shl
popa
pop
mov
push
lds
mov
lcall
sub
movsb
mov
sub
adc
pop
les
mov
push
cmp
push
push
mov
mov
test
lcall
mov
add
loop
jmp
cld
push
jmp
out
aad
jno
pop
fists
pop
in
adc
jnp
das
sub
mov
sbb
pcmpgtb
mov
pop
push
mov
arpl
xchg
inc
sahf
pop
stc
fisubl
push
imul
dec
imul
sbb
pop
cmpsb
bound
pop
sbbb
sbb
loopne
movsl
mov
repz
mov
test
inc
rcrb
jb
xchg
pop
fcmovbe
cld
mov
ret
mov
dec
mov
iret
lahf
inc
mov
out
arpl
sub
sbb
fidivs
fildl
outsb
call
lock
jmp
cmpb
test
popf
dec
xor
dec
fisttps
adc
sbb
dec
shlb
push
cmp
mov
and
popf
daa
in
push
call
sbb
mov
pop
cmc
lods
in
fadd
jecxz
imul
in
dec
dec
addl
pop
aad
cmp
repz
cmpsb
inc
cmp
int
sub
xchg
and
cmp
out
mov
sbb
fidivs
push
mov
inc
add
sub
and
in
push
sbb
xchg
jp
adc
sbb
je
and
pop
js
cltd
cmpsl
jno
dec
xchg
push
aas
pop
lret
xchg
sub
jl
cmc
push
in
dec
fisttps
iret
stc
mov
arpl
pop
shrl
mov
leave
xor
mov
mov
les
aas
in
jmp
sbb
movl
mov
sbb
cmp
xor
cmp
andl
mov
sbb
xchg
stc
xchg
test
jg
mov
jecxz
test
push
xchg
clc
lcall
ficoms
mov
in
jl
sbb
push
xchg
ljmp
xchg
popf
xor
test
out
dec
fcomp
mov
pushf
test
fsubs
in
insb
aaa
xor
mov
push
sub
mov
mov
cli
adc
je
in
out
push
adc
push
stos
xchg
ret
and
fs
dec
cmp
adc
lea
cmp
or
fsub
and
push
or
fistl
mov
cmpsl
inc
pop
mov
scas
cltd
decl
shrb
jb
xlat
or
daa
xchg
imul
inc
and
sbb
sub
ror
insl
sar
ljmp
outsb
or
xchg
stos
popf
push
fildl
jp
stos
imul
lods
pop
dec
fidivrl
fadd
xor
insb
xchg
cltd
pop
mov
cmc
and
mov
pop
push
mov
mov
aas
adc
icebp
sarl
sub
add
ss
sbb
popl
push
inc
mov
mov
jl
ja
sub
gs
add
out
push
and
pusha
push
mov
insb
add
subl
fldenv
push
repnz
sti
mov
insb
push
pop
jb
push
mov
or
shl
jp
push
out
jmp
xor
dec
jmp
iret
adc
and
pmaxsw
mov
test
xchg
mov
mov
add
jle
pop
add
cli
xchg
aaa
mov
jmp
push
cmpsb
dec
ja
cmp
add
cli
fadd
js
pop
stos
jmp
hlt
xlat
scas
mov
int
in
sahf
lock
or
ret
jmp
sub
or
sub
pop
jp
sub
push
and
mov
jp
scas
daa
cs
sahf
je
mov
aas
inc
mov
sbb
cmp
sahf
out
inc
aaa
shrb
pop
sahf
sub
sub
fcomip
loop
test
adc
clc
pusha
scas
mov
push
lock
cmp
popa
scas
std
pop
xor
add
mov
mov
pusha
in
gs
mov
orl
push
testb
mov
mov
mov
loop
fidivs
sbb
xor
js
sub
mov
popa
rcrb
inc
jns
lock
movsb
push
xrelease
mov
and
out
in
call
jne
popf
enter
in
test
in
fucom
jbe
or
xor
shr
xor
and
xor
mov
loope
mov
xchg
in
daa
rcll
mov
aaa
pop
push
or
ljmp
hlt
xchg
cmp
jno
push
mov
cmp
fscale
or
ret
pop
or
test
fcoms
gs
push
or
andb
rcr
mov
cld
inc
out
fsubrs
fwait
xor
std
push
inc
sub
mov
mov
mov
adc
cmp
daa
ret
sub
jbe
stos
aaa
mov
es
out
mov
sub
mov
popf
cld
adc
sub
mov
lcall
insb
nop
cmc
test
insb
cmp
test
mov
or
ss
in
fidivl
mov
and
loop
dec
in
jae
push
jnp
cld
outsb
arpl
jge
sbb
mov
and
insb
inc
push
dec
add
hlt
jg
mov
paddw
jnp
inc
repnz
test
push
or
push
add
sub
cmp
mov
push
pusha
adc
aam
add
mov
addr16
inc
add
mov
loopne
lock
or
dec
out
add
jae
sahf
stc
outsb
push
movsb
stos
push
pop
mov
in
or
lret
scas
nop
aas
aam
int
rcr
mov
inc
adc
mov
push
add
jl
aaa
lea
sti
add
mov
and
push
sub
pop
loopne
cmp
xchg
je
and
frstor
std
pop
and
sbb
lods
xchg
and
mov
mov
xor
xor
add
lds
mov
mov
jns
xlat
out
roll
dec
call
mov
sub
js
test
jbe
outsl
mov
subl
outsl
mov
cmpsl
call
movsl
icebp
xchg
sbb
inc
lock
jmp
movsb
and
add
xor
ja
cmp
inc
sub
jmp
pop
ret
cvtps2pd
adc
es
xor
cmp
xchg
cli
xchg
test
pop
mov
mov
movsb
das
and
int
fwait
lods
cs
data16
mov
pushf
sti
sub
cltd
push
addl
push
mov
and
adc
insl
aaa
adc
sbb
jo
out
enter
out
test
gs
shr
xchg
mov
xor
lds
mov
imul
and
mov
pop
sub
push
push
sbb
lods
mov
mov
lods
pop
lret
lock
mov
lahf
jb
insb
arpl
repz
loope
cmc
mov
xchg
shll
ja
into
mov
loopne
int3
or
pop
dec
lret
test
dec
pop
popf
pop
xchg
push
out
out
pop
inc
rorl
jne
mov
icebp
cs
inc
mov
sar
arpl
ret
sti
push
lahf
push
js
mov
or
xor
push
pop
shrb
jle
stos
and
jmp
ret
fwait
inc
lret
repz
addr16
stos
dec
sub
inc
js
mov
mov
push
xor
out
fildl
scas
cltd
jmp
mov
nop
lods
and
in
addr16
inc
dec
sub
movsl
jge
stos
loop
or
scas
adc
addr16
imul
push
int
push
lcall
xchg
les
xor
pusha
fisubl
insb
lcall
dec
into
es
mov
lss
js
test
xor
and
sbb
nop
test
mov
fidivl
in
or
xorl
add
sbb
mov
outsl
adc
popa
cmc
outsl
sbb
movsl
imul
clc
mov
xchg
xchg
orb
mov
and
andl
stc
mov
xchg
jns
mov
mov
cmp
idivb
lret
xor
pop
mov
cltd
sub
cmpsl
fsubr
sbbb
inc
xor
sbb
jne
insb
inc
dec
arpl
or
pushf
dec
adc
push
scas
inc
mov
pop
cmp
pusha
cmp
dec
or
addl
and
jne
aaa
cmp
ret
cwtl
pop
xchg
add
xor
nop
ss
scas
rorl
pop
mov
sbb
lcall
movsl
stos
add
jbe
pop
sbb
loopne
mov
mov
stc
adc
movsl
bound
mov
mov
cmpsb
mov
jg
rol
cmc
movsb
aad
mov
clc
imul
pop
xchg
add
xchg
test
sbb
fwait
or
stc
xchg
and
or
sahf
es
test
sahf
dec
sbb
xor
jmp
rolb
outsl
fidivrs
ss
out
adc
imull
jbe
rcrl
add
clc
push
arpl
sti
cli
cmc
xor
cmpsb
xor
lods
imul
push
das
test
sarl
mov
adc
jne
jge
nop
rorb
cmpsb
jbe
cmc
jno
jp
in
shrl
cmp
mov
cmc
mov
fimull
push
popa
scas
in
mov
sub
pusha
outsb
xchg
fidivs
in
in
rol
arpl
mov
xor
jl
in
xor
jecxz
dec
fildll
stc
cmpsb
pop
fadd
pop
xchg
mov
lods
arpl
popa
sbb
pop
push
dec
pop
pushf
push
cs
xor
stos
pop
aas
xor
mov
cs
cli
jp
std
pop
mov
adc
xor
inc
or
mov
jp
mov
fstpt
js
cmp
jl
shr
mov
int
call
ds
sahf
popa
and
pop
adc
fwait
sbb
iret
adc
mov
and
cwtl
cs
inc
enter
ret
repnz
cltd
cld
mov
in
cs
jg
test
out
shrl
push
xor
and
cmp
or
adc
shl
xchg
pop
jge
dec
aam
jg
nop
mov
dec
into
dec
pop
jo
xchg
scas
insb
aaa
lock
std
adc
and
sub
aam
ret
mov
pop
jge
data16
push
cs
lods
jne,pn
mov
push
lds
xor
sub
mov
sub
ss
mov
mov
pop
test
dec
jp
in
mov
push
push
and
xchg
imul
lret
jns
in
fildll
xor
push
insb
mov
mov
cmp
cld
add
mov
iret
mov
sahf
scas
test
js
loope
jmp
pop
je
xchg
popf
lcall
dec
mov
mov
js
inc
outsl
jb
xlat
sbb
dec
test
mov
or
sbb
push
mov
cmp
insl
pop
test
xor
mov
push
xchg
mov
repz
inc
repz
inc
sarb
rcll
sahf
fildll
aaa
sub
cltd
gs
jl
push
jo
aam
rol
fisubrs
pop
daa
insl
gs
xchg
sub
inc
fsubrs
or
lret
test
sub
sahf
js
or
cmp
mov
mov
arpl
les
push
aam
dec
xchg
js
leave
pop
movsl
pop
mov
xor
xchg
movsb
lea
mov
xchg
loopne
in
add
add
arpl
push
hlt
outsl
scas
jle
imul
insb
stos
sbb
andb
js
xchg
fisttpll
jg
or
dec
lret
subl
inc
push
data16
push
mov
mov
aaa
enter
and
ss
je
sub
adc
in
bound
sbbb
mov
movsl
mov
sub
pop
imul
jl
lea
push
ss
iret
filds
cli
aas
adc
xor
and
fcoml
imul
push
push
jae
pop
push
out
lds
adc
sbb
pop
lods
js
lods
mov
test
push
mov
jno
push
andb
adc
and
sbb
into
and
xorb
nop
das
xlat
jo
cs
xchg
xchg
cmp
cmp
lret
mov
jae
jge
push
pop
filds
or
and
cmp
xlat
and
jl
stos
xchg
jmp
fiaddl
or
pop
or
mov
stos
in
dec
mov
in
and
cmp
lock
push
jb
ret
popa
addr16
into
mov
xor
fistpl
ja
add
mov
push
pushf
lods
cmpsl
out
mov
xchg
mov
dec
cmp
jb
movsl
mov
arpl
loop
fdivl
mov
cli
jecxz
adc
aas
mov
sbb
add
adc
ds
lret
mov
jb
inc
adc
mov
or
xchg
outsl
dec
add
xor
pop
jno
mov
addr16
or
mov
sbb
test
and
pushf
les
or
sub
push
dec
ljmp
ret
gs
sbb
arpl
das
mov
ljmp
cmpsb
or
dec
ret
es
sbbb
jb
push
cmpsb
stos
jecxz
in
ret
sbb
xor
cmp
lods
adc
mov
cmp
scas
stos
sbb
out
sub
cltd
ret
je
cmp
test
movsl
hlt
jae
add
sub
lods
cwtl
movsl
mov
jne
stos
loop
or
ja
adc
inc
ret
xchg
dec
pop
in
out
mov
push
call
xchg
arpl
fwait
pop
xchg
and
pop
and
push
pop
xor
add
insb
dec
into
push
int3
scas
inc
mov
movsl
aas
movsl
mov
fs
push
out
movsb
pop
cmp
and
sbb
mov
xchg
push
fnsave
xchg
adc
or
push
adc
pop
sub
lret
int3
dec
inc
popf
out
scas
adcb
xor
rorb
mov
imul
xchg
outsl
outsl
pop
arpl
mov
rol
inc
inc
ss
pop
sbb
mov
mul
stc
mov
movsb
sbb
xor
or
lock
pop
les
fcomi
mov
lods
jne
sbb
adc
push
push
mov
scas
inc
sbb
xor
mov
jno
mov
mov
mov
cli
pushw
push
jp
xchg
out
leave
mov
outsl
xchg
push
pop
xor
stc
jecxz
insl
pop
ret
rcr
insl
enter
in
outsl
xlat
mov
mov
lret
mov
and
rclb
int
mov
pop
insb
int3
mov
daa
jno
shll
pop
clc
mov
or
or
dec
stos
jae
stc
ja
cmpsb
and
pop
decl
mov
xchg
arpl
cld
jno
enter
in
mov
insl
cmp
inc
stos
fldcw
mov
and
test
loop
dec
imul
loope
pushf
sbb
test
pop
dec
pop
mov
mov
pushf
or
dec
or
rcr
sub
into
jne
sub
push
movb
mov
sub
and
stos
push
xor
adcl
dec
pop
enter
ds
out
push
pushf
and
lock
ret
aad
nop
enter
xor
test
cs
dec
dec
test
sub
jns
shll
jnp
jbe
add
mov
and
fidivrs
pop
push
mov
xchg
xlat
stc
mov
fs
jo
into
xlat
outsb
mov
push
mov
scas
push
gs
fsts
cs
inc
iret
daa
in
sub
jbe
jb
mov
int3
mov
enter
pop
out
push
pop
xchg
aam
mov
inc
inc
rorl
aaa
cltd
sub
cmpsb
int3
xor
adc
sahf
syscall
bound
push
cld
dec
scas
nop
push
mov
stos
pop
add
jecxz
popa
lcall
cmc
dec
rcr
rcll
cmp
mov
mov
orl
push
cmpsb
mov
and
ja
sbb
enter
ror
mov
idivl
stos
shlb
ds
repnz
xchg
adc
mov
cmp
mov
shll
push
cmpsb
add
rcl
jbe
push
pop
sahf
cmp
movsb
and
ljmp
push
mov
jb
sub
fisttps
jle
aaa
xchg
mov
cmp
daa
jp
mov
imul
sub
scas
repz
xchg
dec
leave
push
add
lods
add
mov
jle
pop
sar
repnz
not
call
sub
pushf
sub
xchg
inc
mov
or
mov
movl
pop
push
cwtl
mov
rorb
or
arpl
or
mov
and
gs
cmp
or
out
xor
add
lret
data16
push
lahf
outsl
loop
mov
and
fisubrs
jnp
popa
mov
pop
adc
push
enter
pop
notb
sub
dec
add
fidivrl
cld
scas
inc
arpl
push
js
pop
rcll
clc
stc
loopne
fistpll
xor
iret
pop
out
dec
pop
mov
or
adc
sbb
out
fbstp
sti
inc
mov
sahf
adc
dec
jle
repnz
out
mov
imul
and
loope
push
stos
xor
mov
mov
add
lods
jle
dec
or
idiv
pop
lret
aam
bound
lahf
mov
jns
mov
test
ficomps
loop
jmp
loopne
pop
mov
out
lcall
add
lret
roll
int3
icebp
das
fcoml
outsb
int
xor
mov
dec
push
daa
and
int3
out
icebp
push
jp
cmpsb
pop
pop
push
sarl
push
push
mov
mov
xchg
stc
imul
xor
xchg
daa
cmp
add
xor
loop
shll
pop
push
aam
jp
mov
stc
out
xor
and
pop
xchg
pop
fsubrp
sub
loop
or
lahf
lcall
fld
das
jns
in
fldcw
xchg
xchg
adc
dec
jns
adc
lahf
shl
lret
ja
pop
xchg
add
imul
or
cmp
push
fabs
sti
ljmp
rorl
mov
pop
xlat
push
sbb
loope
adc
dec
add
stos
fwait
push
out
cltd
fildll
lahf
sbb
out
mov
test
adc
lcall
test
pop
cmp
push
and
movsl
in
mov
sub
fdivl
inc
fucompp
sbb
bound
ljmp
add
daa
add
roll
pop
cmc
cmpsb
outsb
stos
sbb
gs
loop
and
cmp
es
xchg
mov
lock
out
adc
test
mov
loope
or
jmp
fisubrl
inc
xchg
jp
ljmp
pop
rorl
xchg
and
fldcw
popf
mov
inc
lods
addr16
pop
int
iret
inc
mov
andl
adc
xchg
push
push
ficompl
aas
lea
or
insl
xchg
add
pop
ficoms
popa
pop
pop
jae
mov
or
or
or
inc
pop
xlat
sbb
ret
push
aad
xorl
cmp
out
pop
test
xchg
dec
leave
sub
add
in
adc
cmpsl
nop
addr16
inc
aaa
jle
aad
fcomps
push
lods
out
xlat
stos
lcall
sbb
fsubs
orl
jae
stos
repnz
std
jg
pop
sub
add
rcrb
shlb
lods
sbb
ja
frstor
cwtl
fistpll
mov
push
loop
test
pop
pop
push
adc
loop
and
sub
test
jno
nop
jle
xchg
inc
clc
dec
int
adc
and
icebp
in
mov
gs
jae
sbb
jne
scas
mov
inc
jmp
push
sbb
pop
jns
cli
xchg
ss
jle
adc
sub
mov
mov
movb
mov
mov
loop
aaa
out
hlt
out
pop
ljmp
nop
cmpl
push
sbb
mov
loopne
loope
andl
aaa
fdivrs
cmp
and
mov
sbb
mov
mov
jp
cmpsl
and
dec
pop
xor
pop
movsl
cli
push
adc
daa
jge
shll
dec
movsl
fbstp
or
inc
je
inc
dec
stc
xchg
sub
cmp
imul
jne
xchg
in
pop
outsb
push
mov
jno
mov
pop
popa
mov
rcl
test
arpl
mov
fldcw
mov
in
cmp
push
push
xor
pop
es
jl
aad
stos
inc
inc
ds
mov
xchg
mov
ror
cmp
lods
or
repz
cmp
stos
push
movsb
and
pop
jno
mov
andb
sbb
push
push
enter
ret
icebp
xchg
into
mov
popf
dec
je
sbbb
iret
sbb
daa
xchg
dec
pop
js
pop
movsb
lods
inc
adc
mov
push
cmp
cmc
fadd
and
mov
mov
push
andb
push
push
fisubl
mov
push
push
sub
jnp
cmp
cmpsb
fbld
xchg
sub
imul
lea
in
push
es
aad
add
dec
sbb
add
push
push
ret
xor
sahf
inc
dec
lret
cmp
cmp
cmc
outsl
test
flds
jns
cmp
divb
or
push
push
mov
in
cmp
arpl
sbb
scas
fs
xor
popa
test
inc
sub
push
dec
push
bound
rcrb
xchg
mov
sub
add
cmpsb
mov
pop
fsubl
das
xchg
cltd
inc
mov
lea
pop
pop
in
mov
xor
ss
xor
in
inc
dec
movsb
cmp
ljmp
imul
and
jge
jo
imul
and
pop
mov
lea
imul
mov
leave
out
sub
dec
xor
in
les
or
insl
mov
sub
jmp
and
push
jbe
xor
lea
or
pop
push
xor
or
stc
push
pop
sub
mov
dec
in
sbb
mov
les
icebp
aad
cmc
jo
push
in
mov
in
inc
jmp
mov
cmpsl
mov
fstps
push
ret
cmp
dec
sub
lds
cmp
mov
xor
push
and
rdtsc
jmp
mov
sbbb
sbb
or
cwtl
fdivrs
je
ljmp
xchg
cmp
jp
pop
lods
adc
mov
outsl
mov
mov
push
xor
sti
jmp
notl
mov
mov
jns
xchg
xor
sti
insl
inc
fnstenv
xchg
sahf
out
ja
or
call
scas
mov
jns
bound
aaa
jle
stos
sbb
outsb
mov
and
fldcw
loop
jle
fwait
sbb
fs
lods
imul
sbb
add
push
or
jne
xchg
std
jg
push
adc
pop
aaa
in
fdivr
or
xor
mov
or
mov
outsb
lea
mov
and
cld
jg
lods
je
ds
popf
popa
add
jne
sub
dec
cli
repz
pop
xchg
stos
icebp
rclb
pop
je
xor
shll
add
add
adc
cmp
pop
aaa
xchg
out
sub
dec
mov
icebp
mov
or
mov
xchg
fnsave
xor
add
les
cmpsb
xchg
and
cmc
lods
sar
jbe
pop
inc
fs
or
addr16
xchg
int
stos
sahf
xor
test
mov
mov
mov
push
jo
sub
jb
mov
and
inc
fisubrl
fincstp
xchg
movsl
loop
hlt
shlb
mov
push
cld
in
add
in
bound
or
ljmp
hlt
pop
data16
into
pop
repz
and
ds
es
addb
shrb
cli
and
cmpsb
jne
xor
ficompl
clc
sbb
adc
add
ss
mov
or
lcall
mov
mov
js
outsb
jb
shll
movsb
mov
mov
out
std
aaa
inc
into
enter
test
mov
in
jbe
push
adc
repnz
jmp
pop
lcall
mov
in
xor
dec
gs
insl
jmp
push
mov
addl
jb
aad
addb
orb
xor
pop
nop
bound
mov
jecxz
ja
das
mov
outsl
insl
dec
jge
jnp
cmpsl
sahf
je
push
push
pop
xchg
lds
pop
lods
push
fldl
lock
cmpsb
out
adc
ljmp
jg
js
ficompl
sti
imul
jle
enter
jmp
icebp
cli
loope
cltd
jp
inc
cmpsl
andl
cmp
cltd
and
jp
push
outsl
pop
xchg
push
dec
pop
mov
xchg
cmp
jge
push
arpl
mov
movsb
mov
xlat
movsl
aad
inc
das
into
push
ljmp
add
and
stc
into
pop
js
mov
push
cwtl
mov
nop
call
aaa
sbb
cmp
pop
and
xchg
cmc
movsb
ds
call
in
push
sub
xor
cltd
pop
test
nop
xchg
lock
cmp
mov
jmp
fsubs
sub
sbb
imulb
enter
mov
pxor
jmp
shlb
lret
lcall
aam
je
pusha
jecxz
pop
out
push
imul
or
adc
xchg
fs
jnp
dec
mov
xchg
aaa
xchg
ret
sarb
dec
aas
inc
or
xchg
lods
and
jno
sub
jne
push
fcompl
xchg
ljmp
dec
pmaxub
lods
cmp
jbe
mov
cld
fcmovu
mov
aaa
lea
xchg
jmp
mov
xor
xchg
sub
adc
repnz
fisttps
cld
loop
in
inc
sub
sahf
into
mov
xlat
or
add
jo
inc
push
pop
cwtl
xchg
dec
adc
or
jecxz
pop
jg
mov
sarl
fucomi
pushw
notl
cli
adc
scas
pop
shrl
in
xor
inc
dec
aaa
notl
repnz
mov
jecxz
xchg
rcr
imul
clc
add
sbb
stc
jne
or
and
add
push
or
hlt
ljmp
imul
out
sub
js
dec
faddl
sbb
mov
scas
mov
pusha
or
ss
fdivrs
cmc
jp
lcall
pop
add
std
repnz
push
add
pop
or
dec
jno
subb
addr16
stos
xchg
sbb
jb
popa
fimuls
rorb
into
cwtl
or
jb
scas
repz
lcall
call
mov
add
stos
xor
stc
and
jle
xchg
cmp
sahf
lcall
pop
pop
lock
push
and
ds
dec
sbbl
cmpsl
outsl
jo
rolb
adc
daa
push
dec
pop
lahf
test
and
imul
adc
mov
pop
xchg
ret
repnz
iret
mov
shrb
mov
insb
pop
inc
jmp
das
sub
test
int3
inc
jmp
test
sbb
pop
jecxz
or
cld
xlat
ficomps
testl
cli
cmpsl
fiaddl
or
add
les
in
fdivrl
int3
dec
push
decl
and
xchg
scas
mov
push
lret
xchg
sub
gs
insb
sub
dec
push
xor
mov
daa
in
pop
aam
sbb
pop
std
adc
mov
cmpb
or
ljmp
inc
rcrb
mov
insl
mov
sbb
fs
cli
subb
in
push
movsb
xchg
insl
adcl
fnsetpm(287
xor
cmpsl
mov
jae
xor
jb
sbb
js
ret
mov
out
pop
cmp
push
arpl
pop
inc
inc
and
xchg
mov
xor
shll
addb
push
shlb
imulb
inc
call
xor
int
rorb
sub
xor
das
or
jmp
fs
insb
outsb
sbb
arpl
sub
dec
fildl
roll
imul
and
add
cmp
lock
cmpsb
inc
pop
dec
mov
mov
xchg
stos
nop
in
xor
inc
push
pop
sub
test
pop
negl
jb
push
push
or
repz
pop
mov
xchg
dec
test
out
icebp
mov
cmp
cld
adc
das
popf
sahf
jno
add
decb
aaa
sbb
call
mov
xchg
push
mov
repz
cld
shlb
sahf
mov
clc
inc
rclb
and
pop
add
aas
lods
jae
xchg
test
cli
movsl
xchg
lret
cld
cmc
mov
insb
xchg
imul
sbb
loop
xlat
popf
dec
cld
dec
cmp
test
subb
arpl
pop
and
adc
sub
fwait
movsl
ja
mov
cmpsl
pushf
push
pop
mov
int
sbb
jne
cmp
adc
jmp
nop
mov
mov
pop
or
mov
aad
jae
xchg
push
inc
sti
cmp
xor
push
mov
ljmp
out
clc
aad
aad
scas
or
and
ror
inc
xor
jl
mov
shl
inc
sub
cltd
add
js
xor
push
ficompl
das
andb
and
frstor
cld
outsl
cmp
xor
stc
lret
pop
add
jp
or
pop
pop
xor
adc
rcrl
nop
cmp
es
sub
push
inc
int
int
in
cli
mov
not
fwait
inc
cltd
mov
and
shll
loop
je
pop
stos
icebp
enter
pop
dec
mov
roll
cltd
xchg
mov
push
and
cmp
pop
or
or
ficoml
jle
in
fadd
inc
in
shrb
adc
shr
mov
jg
sti
aam
mov
imul
ficompl
shrb
jbe
pop
jmp
push
outsb
sub
adc
add
add
mov
push
out
decl
ss
pop
pop
pop
insl
loope
popf
and
fs
jl
dec
lods
shl
dec
arpl
cmpsl
mov
sub
loop
and
jmp
pop
cltd
leave
and
mov
lods
jae
jae
sub
andl
push
lods
imul
adc
xchg
and
mov
jne
mov
cmpsb
stos
lds
cmp
shr
jmp
idivb
sbbl
mov
pop
lods
repz
ret
pop
push
jl
aas
xchg
ret
xor
shll
mov
inc
sbb
cmpsl
or
dec
push
out
xor
lods
mov
cmp
jns
and
lcall
jmp
outsb
add
xor
sti
lds
mov
imul
pop
dec
sub
xchg
in
imul
inc
stc
xchg
inc
and
push
fistl
push
fs
pop
movsb
fdivl
dec
enter
mov
pushf
into
dec
in
cs
mov
int3
inc
jmp
xchg
sub
mov
leave
mov
test
pop
adcb
rcll
daa
or
popa
in
je
rcr
call
jle
push
fadd
cs
adc
jmp
sub
movl
jb
cmpsl
push
push
mov
mov
loope
pop
lret
stos
sbb
jne
mov
popf
xchg
cmp
sub
adc
addr16
in
data16
in
xor
inc
mov
cltd
mov
outsl
gs
adc
pop
cwtl
hlt
ja
insb
stos
imull
lds
sbb
out
jp
subb
arpl
adc
jns
js
xor
add
rcrb
lea
ret
pop
or
sahf
or
xchg
pop
sub
orl
int3
pop
or
fimuls
ljmp
lret
das
push
test
pop
rcrl
dec
es
cld
pusha
adc
loopne
pop
call
mov
frstor
clc
popf
mov
outsl
ds
out
cmpsb
or
xor
adc
dec
call
push
pop
or
fsubr
push
test
sbb
mov
gs
ja
stos
jecxz
add
adc
push
and
addr16
pop
or
fsubl
push
push
pusha
or
cmpsb
jno
shrl
jg
mov
mov
dec
mov
mov
sub
adc
xchg
outsl
outsl
and
aas
xchg
mov
adcb
hlt
test
cs
lods
test
adc
je
sti
xor
pop
hlt
sbb
sti
xchg
scas
das
xchg
arpl
push
aad
jmp
jns
or
insl
mov
mov
notb
mov
movsb
call
jmp
jnp
inc
and
aas
and
mov
mov
mov
mov
adc
jnp
icebp
push
into
out
fnstenv
sub
jge
xchg
cmp
je
xchg
shrl
sub
int
mov
stos
and
dec
pusha
mov
test
lret
mov
loopne
jne
lods
ds
out
mov
xchg
cli
push
add
pop
loope
adc
sahf
fistpll
insl
shrb
mov
stos
add
dec
fiadds
outsb
movsl
xchg
lret
mov
inc
andl
ret
push
aad
mov
test
out
das
push
adc
pusha
das
push
fstp
adc
mov
pop
in
mov
out
push
decb
leave
add
inc
test
fldl
insb
push
push
push
popa
imul
inc
inc
rolb
cmp
notl
mov
xchg
pop
adc
push
xchg
and
ds
les
loope
push
fadds
cs
pop
scas
or
add
add
int3
mov
push
mov
cmp
shll
lret
bnd
outsb
xor
arpl
roll
out
push
cmp
rorl
aaa
sar
repnz
jb
sbb
jo
mov
dec
ret
fdivl
dec
mov
arpl
pop
push
mov
xchg
in
sub
dec
add
lea
lods
cmpsb
fucomi
push
xor
into
es
lods
pop
xchg
mov
push
jecxz
call
inc
or
add
pop
leave
sbb
aas
cmc
rcrl
movsl
inc
loopne
xchg
lock
dec
add
loop
sbb
arpl
pop
aam
jmp
xchg
test
jae
dec
jns
data16
lea
ljmp
stos
orl
imul
push
lods
pop
cmp
mov
xor
push
ja
dec
aam
popa
call
je
pop
mov
dec
fmuls
push
fnstcw
shl
in
pop
mov
inc
jne
pop
ss
sti
pop
enter
jge
sbb
xor
jb
adcb
pop
xchg
ret
outsb
inc
aaa
fisttpll
jns
pushf
das
jecxz
test
cmc
mov
xorl
cli
jns
sub
mov
mov
ds
mov
stc
mov
icebp
dec
in
ljmp
fmull
xchg
sub
repz
sti
pop
dec
arpl
inc
cmpsl
and
insl
jb
add
add
push
mov
dec
sub
xchg
pushaw
add
repz
inc
pop
jp
andb
sar
lret
xchg
jg
push
addr16
push
inc
stc
jnp
lret
jge
lds
sti
xorb
orb
scas
into
out
test
push
ret
stos
sub
push
or
in
stc
das
pusha
cli
call
mov
or
cmpsb
add
ss
imul
test
xchg
ds
cltd
fadd
rcrb
mov
or
ror
pop
xlat
pop
sbb
lods
push
inc
scas
aam
sub
push
fptan
pusha
arpl
adc
leave
shlb
pop
cltd
jge
and
mov
mov
mov
dec
jne
les
lds
ret
test
pop
insl
movsb
mov
in
je
cmpsl
xchg
jmp
sub
cmc
pop
test
add
mov
fmul
inc
lods
cmp
add
adc
cmp
xor
stos
xchg
pop
adc
mov
fwait
in
inc
xlat
ss
lock
movsb
data16
jno
xor
in
mov
pop
push
insb
mov
cs
dec
mov
sub
add
pminsw
in
dec
cmpsb
notb
sbb
leave
pop
ljmp
push
lods
ja
stos
mov
js,pn
cli
sbb
jnp
inc
sub
xor
lahf
pop
xchg
aad
push
xchg
adc
adc
daa
fs
push
aad
pop
push
sbb
lret
in
mov
jo
sbb
or
push
test
call
xchg
xchg
or
mov
or
in
cltd
stos
xchg
jbe
push
inc
xchg
xchg
mov
cmp
push
out
mov
dec
nop
sub
push
and
lods
push
into
mov
pop
pop
push
xchg
fnstsw
fcomps
les
sti
iret
and
lods
push
cmp
pushf
pop
push
es
mov
enter
jne
nop
push
dec
jns
cmpb
cmp
cmove
test
pusha
push
or
mov
clc
cmp
pop
cld
test
xchg
test
lahf
arpl
outsl
xchg
add
or
dec
jnp
add
add
adc
test
movsl
jp
lds
es
xor
lods
push
mov
loope
xlat
lret
cmpsl
or
sub
lret
push
xlat
ds
out
fucomi
push
popa
iret
jne
mov
cwtl
imul
lret
cmc
pushf
fs
pop
leave
jg
lds
gs
sub
daa
inc
movsb
add
xor
pop
enter
sarb
cmpsl
jecxz
es
jl
js
stos
popa
dec
mov
mov
aaa
inc
inc
movsb
cld
xor
mov
out
stos
adcb
xor
mov
imul
clc
jnp
dec
subb
icebp
adc
jo
dec
sbb
jo
cld
addl
shlb
xchg
add
shlb
add
mov
scas
xchg
inc
rcll
sub
div
ljmp
add
sarl
fstpt
mov
das
push
ss
xchg
leave
pop
sbb
and
mov
enter
xchg
iret
jo
sahf
repz
and
jo
addr16
xor
mov
xor
icebp
mov
mull
cmpsb
imul
movsb
or
adc
fistpll
push
jecxz
or
les
out
es
jns
or
leave
xchg
jecxz
mov
leave
add
add
cmpsl
xorb
add
movsb
aaa
dec
lcall
pop
repnz
in
jns
pop
dec
sub
out
bound
cmp
stos
lea
lods
add
xchg
ja
or
movb
out
cli
scas
fadds
add
imul
adc
aas
inc
jmp
jg
xlat
xadd
cmpsb
lret
inc
dec
into
imul
mov
pusha
ficoms
popf
jge
push
inc
adc
mov
cmp
adc
xchg
inc
mov
pop
int3
popa
xchg
inc
cmp
iret
sbb
sbb
add
out
ret
fistps
fsubl
int
mov
je
push
mov
or
test
xchg
addl
sbb
push
pop
inc
or
xchg
jge
cmp
push
sbb
and
and
daa
cld
sbb
test
icebp
xchg
dec
xchg
cmp
out
xchg
or
mov
lea
dec
push
jg
sub
jb
test
test
mov
ja
mov
or
push
push
fcmovne
scas
test
mov
rolb
in
push
stc
icebp
int3
je
dec
fcom
push
dec
mov
nop
movsb
mov
mov
adc
mov
jnp
and
mov
andl
test
cs
outsb
xor
xor
fists
xor
pop
jmp
jl
add
xlat
loop
mov
lret
cmp
mov
faddl
pop
lock
cmpl
sbb
adc
repnz
inc
adc
aam
rorl
jbe
dec
pushaw
inc
pop
ja
sbb
dec
inc
lret
inc
xor
jg
pusha
ljmp
sub
dec
jg
cmpsb
sbb
mov
mov
mov
outsb
rcrb
or
xor
xchg
sub
cs
incb
push
popf
test
out
cmp
adc
pop
loop
cmp
das
sbb
enter
cld
repnz
mov
adc
sbb
daa
add
adc
lcall
cmpsb
adc
fcoms
add
inc
jecxz
sub
inc
or
nop
popf
ret
ja
inc
or
xor
or
sub
adc
fisubrs
mov
test
push
jns
sbb
lock
jl
pop
mov
lret
fistps
adc
rorl
movsl
nop
and
jns
cld
test
sbb
subl
pop
sbb
pop
leave
push
sahf
dec
cmpsl
mov
push
shrb
orb
mov
jl
subl
jl
aas
or
jb
mov
jb
out
icebp
mov
sub
lret
push
subl
into
push
lahf
insb
aaa
sub
in
mov
int3
cmp
sub
addr16
sub
outsb
test
mov
push
cmp
test
loop
xchg
scas
fwait
xchg
inc
adc
sbb
push
in
dec
adc
hlt
mov
ret
cmp
fcompl
fcomi
sbb
gs
testl
push
lret
pop
xor
repz
inc
add
leave
sti
dec
pop
jnp
imul
inc
mov
push
mov
sbb
cmp
je
js
mov
add
xchg
xchg
sbb
popa
stos
pop
in
lods
gs
mov
nop
mov
and
sbb
lea
cmpsl
lahf
dec
mov
pop
add
mov
inc
stc
mov
sbb
mov
pop
daa
fisubl
and
test
sbb
pop
cmp
rcll
dec
shll
pop
mov
jne
adc
cmp
mov
loop
subb
add
jl
loopne
mov
enter
or
seto
adc
repz
fwait
stc
rcll
in
pushf
lahf
or
idivl
add
int3
out
inc
or
lods
add
add
loop
mov
jb
outsb
into
je
push
mov
adc
insl
adc
add
jne
cmp
enter
mov
sbbl
or
xor
daa
cmp
cltd
and
inc
mov
dec
pop
dec
int
adc
jp
test
fs
pop
add
in
repnz
push
mov
ret
jl
lods
lret
mov
js
out
and
xchg
stos
xchg
insb
scas
cmc
les
mov
push
ret
repnz
cmp
pop
js
jecxz
daa
inc
lods
data16
or
cwtl
stos
in
in
out
hlt
leave
xor
dec
xchg
pushf
pop
xor
imul
mov
outsl
cmpsl
push
jecxz
fwait
jb
nop
dec
cmc
pop
dec
addr16
inc
lods
add
jnp
add
mov
je
mov
clc
aad
pop
mov
jmp
pop
push
xor
push
adc
mov
pop
and
xor
mov
fistl
push
sbb
sahf
mov
jmp
dec
sub
adc
test
dec
shrl
push
fsubrp
xor
shlb
cld
xlat
cld
adc
and
xchg
add
and
mov
adc
imul
dec
mov
push
cmpsb
cmp
jecxz
xchg
in
xlat
push
sbb
fbstp
or
push
dec
push
dec
and
jnp
sub
movsl
xor
fwait
in
in
mov
mov
lret
mov
enter
inc
push
push
or
add
jge
dec
mov
sbb
xor
push
push
arpl
jns
push
icebp
scas
mov
jg
inc
aaa
mov
cs
pop
fstl
lahf
aas
out
inc
or
xor
test
add
sahf
mul
xchg
cmp
xchg
xlat
iret
cmc
mov
mov
loope
jno
sub
cltd
mov
mov
aad
pop
lods
inc
xor
dec
sub
jae
popf
mov
xchg
mov
pushf
cmp
xchg
mov
fistpll
divb
dec
sub
js
mov
xchg
rcll
and
test
outsl
xor
cwtl
or
fst
sbb
mov
pop
ss
rclb
mov
add
dec
push
aaa
and
push
iret
mov
push
fists
xlat
pop
jl
popa
jmp
mov
aas
xor
cmpsb
cmpsl
adc
xchg
fcoml
adc
pop
test
pop
jmp
fimull
cmp
repz
sub
shlb
dec
test
pushf
fisubrs
mov
mov
jge
fwait
and
mov
mov
in
push
ss
js
xchg
loope
js,pt
jne
in
pusha
nop
push
add
hlt
pushf
int
mov
dec
out
adc
sub
ds
jmp
les
jb
lea
scas
xor
and
shrl
and
outsb
pop
dec
out
sbb
jl
push
rcll
pop
fisubrl
xor
lret
cwtl
xchg
cwtl
ss
into
jg
xor
adc
aad
xchg
ljmp
push
cld
or
movsb
push
mov
mov
push
cmc
add
mov
cmpsb
pop
mov
into
sti
or
test
pop
sub
testl
xor
bound
mov
ret
fs
das
inc
jmp
nop
fmuls
lds
adcl
mov
es
sbbb
out
mov
add
lahf
clc
repz
pop
aad
data16
mov
mov
mov
xchg
cmc
mov
add
mov
pop
inc
icebp
stc
scas
push
xchg
pop
adc
jle
mov
xchg
into
bound
hlt
xor
cmp
bound
sbb
pop
insb
mov
adc
ret
dec
incl
shll
pop
push
sbb
ds
adc
push
dec
inc
lods
or
dec
push
test
std
dec
jnp
cmp
loop
or
adc
mov
pop
insl
fcmove
and
adc
and
fidivrl
int3
and
jge
mov
stc
mov
out
pop
dec
jo
pop
jp
mov
popa
fldt
jno
xor
and
in
or
into
fxch
jle
pop
push
xlat
xchg
xchg
sbb
push
add
movsb
pop
sbb
inc
xchg
lret
add
in
cld
xor
xor
add
ljmp
fcompl
cmpsl
mov
fidivrs
add
xchg
fcoml
push
jno
dec
je
outsb
mov
sub
int
rclb
and
outsb
cmpl
js
xlat
aaa
push
lret
cmpsl
push
test
push
xor
xlat
jo
cmp
mov
or
xor
test
adc
das
cltd
test
or
lahf
insb
sub
fimuls
jns,pn
stc
mov
xor
or
dec
jge
cwtl
cmpb
dec
xchg
push
push
inc
mov
push
iret
test
sbb
mov
push
loope
int
xchg
int
pop
jp
jne
enter
mov
lock
test
popf
xchg
call
test
mov
lcall
dec
cld
lods
shlb
adc
xchg
mov
add
cmp
aaa
outsb
ret
lods
pop
enter
mov
pop
lahf
jo
out
xchg
outsl
test
xchg
movsb
jnp
add
cmp
add
jae
mov
and
stc
jl
pop
test
xchg
cli
pop
loopne
pop
stos
adc
cmc
cmp
ljmp
fdivrs
cmp
cmp
in
and
adc
aam
movsl
add
nop
cmc
inc
pop
in
fnstsw
mov
in
or
das
in
les
outsb
in
cli
mov
cli
rclb
sub
dec
shl
xchg
cs
fadds
loop
xchg
shll
inc
cmpsb
lods
pop
faddl
pop
and
xlat
shll
mov
out
sbb
lods
xchg
pop
pusha
cmp
and
jge
rcl
push
mov
jle
fs
ljmp
out
roll
add
and
sti
xchg
lcall
loope
shll
fistpl
popf
jb
sti
mov
scas
xchg
repnz
or
rolb
mov
fdivs
mov
fwait
jnp
jp
cmp
xor
ss
xchg
dec
xchg
xchg
sbb
xchg
xchg
jae
add
ljmp
push
xchg
mov
xor
sub
and
xlat
sti
inc
mov
push
dec
cmpsb
mov
and
imul
test
int
ljmp
mulb
neg
aad
lds
rolb
cmp
out
sahf
or
loopne
jg
test
bound
cmp
fidivl
lcall
jbe
xor
pop
xchg
jmp
ss
push
or
mov
das
mov
gs
sub
jle
mov
mov
iret
sub
das
and
cmp
sahf
pop
ja
xorl
dec
jecxz
and
inc
xor
mov
aaa
out
ret
rorb
jo
leave
sub
lds
clc
push
add
and
sub
pminsw
pop
aas
push
mov
push
and
mov
fadd
ljmp
out
mov
loope
mov
inc
adcl
push
jno
lods
add
in
es
insl
jo
jnp
frstpm(287
push
leave
arpl
fcomp
xchg
add
lods
enter
into
aaa
mov
xor
sti
test
jmp
rolb
ljmp
mov
jg
adc
js
ds
jmp
call
test
pop
mov
adc
jae
or
nop
int
gs
hlt
add
jle
pop
cmpsl
mov
pop
adc
add
adc
sahf
dec
sub
mov
sbb
and
lods
push
inc
jo
xchg
adc
adc
out
repnz
pop
xor
adc
loop
jmp
add
sarb
sbb
jecxz
push
stos
dec
xchg
pusha
icebp
outsb
sub
jmp
dec
out
loopne
jge
int3
push
sbb
mov
lods
pop
inc
push
mov
mov
movb
inc
mov
leave
fwait
insl
sbb
fbld
fldenv
stos
testb
mov
pusha
mov
mov
add
sub
loop
add
clc
das
fwait
icebp
and
aas
adc
repz
mov
test
nop
jle
mov
mov
cld
inc
cmpsb
jo
leave
add
out
xorl
push
cmpsb
fimull
push
jl
repz
notl
and
jb
mov
mov
jne
leavew
mov
popa
xor
sahf
in
dec
fsubs
and
pop
jbe
shlb
pop
out
jmp
jl
pop
xchg
fcoms
mov
add
dec
dec
aad
xchg
enter
xchg
rorl
push
in
addb
xor
jp
jnp
into
sti
adc
or
add
int
mov
mov
sarl
and
mov
mov
xchg
imul
dec
jp
fdivrp
xchg
ldmxcsr
fnsave
cmpsb
cmp
out
pop
sbb
sbbl
mov
fsubr
shlb
adc
test
fcoml
jge
push
in
cmp
test
lret
push
shrb
jbe
adc
sub
lret
testb
ret
pop
mov
mov
je
mov
fwait
punpckhdq
aaa
test
or
call
sarl
mov
jnp
enter
fsubl
mov
add
cmp
jns
je
adc
jmp
dec
sbb
gs
lds
mov
mov
cmp
cmp
icebp
cmp
push
lahf
sahf
addr16
arpl
xchg
cmp
xchg
js
rcll
sub
mov
cwtl
dec
cmp
fsub
push
xchg
cmp
push
lds
fiadds
jae
push
in
fdivrl
push
sub
out
int
and
fwait
push
xor
mov
mov
mov
or
fadds
sub
add
lods
ret
inc
lea
orb
mov
je
mov
mov
xchg
cmc
cltd
repz
push
lret
or
insb
dec
xor
jno
sti
aas
xchg
push
xchg
mov
movsb
inc
ljmp
mov
cld
dec
lock
cmp
cmp
xor
mov
lahf
add
push
push
push
pop
sarl
add
sbb
call
push
fldl
or
inc
in
stos
stos
insl
or
or
lock
fwait
ret
ret
mov
out
cli
or
add
daa
jl
adc
negb
xchg
pop
xchg
es
xor
inc
xchg
cmp
aas
cld
sahf
dec
dec
push
push
outsb
leave
movsb
daa
mov
int
dec
pop
out
add
sub
mov
mov
ret
mov
aas
pop
lret
jmp
test
sub
lds
call
test
aas
leave
jecxz
aam
test
in
inc
clc
cmp
sub
testl
int
and
xchg
leave
fnstenv
out
inc
imul
push
popa
lea
ja
jmp
cmp
jge
xorl
nop
mov
mov
popl
mov
cmpsl
mov
test
repz
sti
sbb
sbb
mov
scas
dec
push
je
ror
jecxz
setne
sub
pop
scas
mov
cmpsb
shll
hlt
add
popa
add
jle
movsl
pop
xchg
lahf
ds
fsubrs
cmpsl
movsl
mov
adc
test
push
jns
lret
out
mov
mov
adc
push
dec
pop
in
test
and
pop
cmp
icebp
imul
imul
mov
fnstenv
mov
scas
pop
stc
andb
mov
xchg
call
cwtl
mov
xor
pop
pop
cli
xor
add
js
adc
push
jmp
inc
aad
xchg
mov
jl
adc
insl
add
push
sti
enter
cs
push
jl
pop
out
and
fwait
jns
mov
icebp
enter
pop
shrl
pop
sbb
daa
imul
or
lcall
std
rcrl
adcl
repz
or
daa
and
add
fldcw
inc
repnz
push
jbe
pop
add
jns
xchg
xchg
into
mov
adc
and
adc
jbe
imul
sti
adc
pop
aas
xchg
scas
mov
cld
cmp
mov
stos
and
adcb
fxch
adc
mov
out
lret
shlb
pop
push
mov
xchg
xchg
inc
sub
divl
out
pop
pop
fs
jns
imul
orl
jg
xchg
ret
ja
stos
jp
arpl
sub
in
jp
daa
mov
mov
jecxz
sbb
xchg
popf
pop
mov
loopne
pop
data16
lahf
sbb
push
xor
test
inc
pop
imulb
jb
xchg
jae
jbe
inc
dec
xor
lcall
push
jp
imul
and
js
shrl
cmp
out
rol
jae
cmp
cmp
sti
in
push
xorl
loope
pushf
add
lea
adc
in
dec
mov
sar
adc
add
mov
imul
in
xchg
cmp
mov
lds
mov
cld
inc
jge
inc
pop
enter
addl
jne
mov
xor
pop
dec
or
mov
or
lcall
in
xlat
pop
dec
lcall
test
jae
mov
dec
out
inc
xchg
fcompl
cmc
ficoms
cmc
pop
je
stos
xlat
popf
inc
xchg
inc
rol
or
lods
push
inc
mov
lock
in
cltd
dec
fildll
add
dec
sub
sbb
or
dec
out
into
lret
fistl
pop
outsl
pop
mov
xchg
rcl
cmpsb
lock
sbb
cmp
lret
mov
movsb
aad
cmpsl
pop
push
mov
out
xchg
jns
sub
cltd
ret
test
cld
daa
je
lock
jb
scas
dec
mov
nop
fistl
stc
icebp
mov
test
adc
add
and
imul
bound
std
sbb
sahf
lcall
dec
in
fwait
mov
fwait
das
cmp
jmp
call
int3
xor
jp
subb
jbe
out
sub
call
mov
stos
xor
jbe
stos
xor
xlat
lods
or
push
or
sbb
sbb
xchg
xor
push
pop
ljmp
sbb
mov
int3
ret
push
jnp
call
ret
pop
or
je
jge
das
in
mov
sbb
in
rorl
fistps
jns
fsubl
notl
sbb
es
jne
pop
pop
cmpsb
push
cmp
or
inc
xchg
fdecstp
adc
mov
fcmove
or
cmp
adc
pop
fwait
jge
inc
in
and
fucomi
mov
sub
mov
es
xchg
dec
js
cwtl
jmp
push
or
out
fs
test
dec
fisttps
jno
cmpsl
test
out
jne
fwait
sub
mov
push
mov
cmp
mov
out
repnz
call
push
outsb
jb
push
test
sbb
push
sti
mov
mov
mov
cltd
pop
sub
push
adc
and
push
mov
dec
jge
ficompl
arpl
divl
mov
out
aaa
inc
push
mov
push
loope
and
push
clc
out
es
rorb
pmaxub
jae
outsb
mov
add
movsb
sahf
jno
imul
sub
mov
addl
xchg
pop
jl
push
outsl
jno
int
xor
pop
or
jo
add
mov
sbb
sti
push
adc
jae
rorb
outsb
lods
aam
sbb
xchg
out
in
or
cmp
sti
inc
lea
cs
ror
mov
cmp
mov
sub
xor
sbb
cmp
mov
outsl
inc
jecxz
popl
xchg
sbb
das
cmp
sbb
fcompl
shll
std
xor
loope
shll
or
mov
das
loopne
iret
inc
test
cs
pop
rorb
shrl
cmp
lea
push
or
fisubl
cmc
push
mov
stos
push
push
sub
or
inc
sub
movsb
pop
mov
cli
sub
dec
roll
stos
sbb
lret
std
mov
bound
mov
sti
movl
hlt
add
adc
mov
jo
pop
sub
rclb
ret
bound
dec
clc
xchg
mov
aaa
cmp
push
test
test
jecxz
subb
or
xchg
mov
out
sbb
loop
add
sbbl
ret
jne
shlb
or
enter
testl
cli
int3
fldl
iret
mov
das
pop
popa
loope
push
mov
xor
repz
negb
in
dec
movsl
sbbl
or
mov
cmpb
lret
push
cmp
lret
lea
in
lods
mov
movsl
jns
push
pop
test
xchg
cmp
sub
mov
sub
nop
ljmp
fadds
int3
xor
dec
mov
aad
mov
push
ficoml
mov
add
fsubrp
mov
mov
movsl
cmp
and
pop
cmp
jb
aam
mov
pop
sbb
fst
mov
leave
mull
mov
pop
inc
cmp
lahf
cmp
jl
xor
jmp
sahf
and
jp
sub
xor
pop
inc
loope
push
lea
das
push
popf
fadd
mov
mov
stc
mov
out
iretw
bswap
sbb
sub
das
popf
sbb
inc
test
mov
jmp
mov
js
sbb
dec
rcrl
and
cmp
stos
ret
xlat
xor
movsb
sbb
cwtl
stos
adc
lret
lret
jb
imul
cmpl
mov
push
popf
ljmp
roll
and
cltd
mov
ret
lds
aas
mov
jbe
fwait
jns
push
stos
sarl
pop
test
lock
insb
insl
jg
cmp
and
inc
mov
sub
mov
cmp
enter
add
push
dec
lock
lods
xor
stos
inc
in
lea
jle
xor
sahf
stos
add
push
cmpsl
or
loop
jne
das
mov
pop
jle
ljmp
jnp
test
stos
sub
mov
es
mov
pushf
clc
notb
jb
ljmp
ret
nop
rorb
aaa
ljmp
mov
inc
int
mov
jge
in
sub
cld
jne
cli
jbe
mov
scas
es
shrb
andl
inc
orb
stos
sbb
arpl
imulb
push
mov
add
rcrl
dec
roll
iret
xorb
fldt
mov
std
ljmp
push
call
int3
mov
cwtl
sub
orb
repnz
loop
outsl
insb
cmpb
fucomp
jmp
sbb
mov
jb
sbb
lahf
out
lcall
shll
hlt
push
mov
push
push
inc
pop
dec
add
dec
pop
push
push
sub
sahf
shrb
jns
sbbl
das
jbe
fstps
fstps
lods
jg
mov
lret
dec
lods
fwait
pop
xor
rolb
mov
xor
pop
sbb
inc
sti
mov
iret
daa
mov
movsl
and
push
jae
shlb
mov
movb
movsb
mov
scas
cmpsl
ficoms
mov
je
mov
test
dec
out
push
xor
orb
xor
mov
xor
jl
ret
mov
in
icebp
push
addb
add
in
add
in
out
mov
and
mov
inc
hlt
int3
lods
jg
int3
fnsave
cld
fs
setle
jmp
fs
jmp
out
cmc
setge
push
in
or
jno
xor
and
es
sti
mov
pop
and
pop
sub
sub
push
add
inc
js
sub
sub
lahf
nop
xor
mov
cmp
loop
pop
rorb
adc
cmp
mov
mov
push
ss
sub
jg
shlb
into
popf
sti
push
andb
mov
cltd
jnp
jmp
mov
xor
test
insb
push
ljmp
inc
enter
in
or
movsl
cmp
inc
repnz
mov
mov
mov
sbb
or
xchg
pushf
fs
adc
adcl
loope
in
test
enter
imul
jmp
cli
jecxz
movl
pop
inc
js
cld
or
stos
jecxz
lret
nop
cli
int
dec
mov
aam
pop
orl
add
mov
adc
fdivrp
mov
mov
add
xor
inc
jbe
stos
aaa
in
dec
xchg
or
outsl
in
std
mov
xchg
icebp
sbb
xor
and
sbb
imul
test
loop
pop
int3
adc
nop
lods
movsl
cmp
std
test
cmc
xchg
imul
jge
in
mov
int3
sbb
sti
test
dec
ljmp
push
pop
sar
mov
mov
pop
or
cmpsl
loopne
loope
inc
sub
lcall
and
nop
jnp
je
and
addr16
pop
repz
jge
out
push
push
add
sbb
jae
xchg
jno
dec
pop
push
les
mov
mov
data16
loope
inc
popf
aam
xchg
push
push
inc
out
mov
stc
aad
adc
lds
imul
mov
inc
push
mov
mov
add
in
push
pop
clc
dec
sub
lret
nop
pusha
add
ret
into
out
in
and
sub
jbe
jb
call
mov
jbe
mov
ficompl
dec
loop
in
push
mov
jmp
jo
cmp
stos
movsl
into
loop
fs
out
mull
xchg
fdivrs
in
xorb
add
push
enter
sub
xor
jp
std
adc
adc
xor
pop
js
in
ja
outsb
xchg
dec
stos
add
repnz
daa
xchg
lods
inc
or
xchg
jl
fnsave
xchg
and
jnp
movsb
push
dec
adcl
jo
lods
insl
enter
inc
mov
cli
mov
scas
mov
in
loope
dec
leave
js
xor
sti
cmp
sub
and
and
xchg
push
adc
out
jle
xor
stos
pop
inc
add
leave
xor
jecxz
sub
jnp
dec
xor
adc
sbbl
fs
and
cmpsl
xor
and
testl
sbb
xchg
xor
lds
mov
hlt
hlt
int
push
or
xchg
mov
movsb
out
shlb
stos
cmp
call
mov
mov
mov
out
push
xor
enter
jae
cld
cmp
outsb
xor
fwait
mov
outsl
inc
test
add
insl
lret
aas
pop
test
xchg
dec
cwtl
mov
mov
out
xor
cmp
pop
jne
int
push
jae
adc
scas
inc
cmc
fdivs
cmpsb
push
daa
shlb
cmp
mov
pop
pop
adc
aad
push
pop
icebp
addr16
pop
mov
loope
sbbl
enter
jmp
aad
xor
xchg
pop
adc
aas
jl
loope
fwait
ja
faddp
sbb
hlt
shll
out
dec
add
test
xchg
dec
dec
mov
inc
and
dec
test
fdivrs
repz
mov
push
shll
xor
scas
or
cltd
test
leave
roll
or
cs
mov
mov
mov
and
ds
mov
cmpsb
out
sub
cmpl
xchg
mov
ljmp
adc
sub
fstpt
cs
orl
data16
cli
mov
sti
or
movsb
popf
int
sbb
das
and
add
sahf
enter
mov
enter
and
pop
ret
sbb
fbld
adc
arpl
cmpsb
cld
sub
sar
adc
adc
push
cmpsl
call
pop
test
in
lods
cmpsb
into
stc
sbb
and
pop
xor
and
insb
or
and
insl
mov
cli
mov
insb
sub
repnz
pop
jmp
fs
sti
aam
mov
push
push
repz
lcall
push
vcomisd
push
mov
add
sub
pusha
xchg
lret
jo
aas
fidivrs
sbb
call
cld
mov
add
lods
jmp
mov
jmp
mov
xor
fcoml
push
xor
movsb
dec
iret
and
test
push
pop
mov
add
aas
mov
fwait
scas
and
add
mov
mov
ret
movsl
mov
cwtl
push
jbe
cmp
sbb
xchg
fsts
and
mov
jno
sti
enter
lods
outsb
fnstsw
aaa
add
push
mov
out
sti
cmp
fimull
pop
adc
out
mov
and
dec
xchg
cmp
aad
sarb
imul
daa
sbb
cmpl
scas
sub
push
std
jp
xor
pop
sbbl
test
or
icebp
sub
cld
icebp
adc
outsl
test
inc
jae
mov
cmp
test
testb
or
mov
sti
sbb
stos
outsl
int3
jns
das
js
scas
sub
clc
pop
dec
add
and
insb
test
insb
jae
fwait
pop
shll
repnz
sub
aaa
addr16
iret
mov
pop
jnp
cld
in
xchg
sub
lock
xor
rcrb
clc
xor
flds
push
popf
pop
mov
out
sbbl
orl
test
and
or
or
push
push
jl
fcompl
xchg
mov
fisubrl
xchg
es
pop
ja
cmp
mov
or
fwait
and
fldenv
push
xlat
and
test
aaa
dec
cmc
dec
cmp
pop
mov
aaa
lcall
cmp
cmp
jns
shll
or
lods
fstpl
fcomp
or
pushf
xchg
orl
pop
add
mov
jno
rclb
popf
add
add
aam
test
mov
dec
cs
adc
lcall
loopne
cmp
iret
sub
xorb
mov
stos
data16
les
mov
sub
adc
ss
cmp
daa
dec
in
sub
xor
lahf
sbb
sysexit
mov
je
adc
sub
lcall
sbb
push
dec
aaa
setb
push
ja
mov
pop
mov
es
jns
sub
cli
push
mov
push
jp
je
push
stos
adc
mov
dec
inc
sbbb
lods
push
jne
lods
adc
aam
push
fwait
cmp
adc
pop
mov
aam
mov
enter
mov
fldl2t
fmuls
shl
rorb
lret
cltd
or
jmp
xchg
mov
jle
push
int3
into
xchg
inc
dec
mov
jnp
push
je
jl
or
jbe
fcompl
fnstsw
sub
jmp
sub
lcall
jne
dec
scas
ret
cmc
mov
rolb
daa
push
push
jbe
mov
daa
jp
cmp
jmp
mov
or
adc
out
add
dec
mov
or
mov
ret
add
aam
movsb
movb
and
jno
loope
jg
mulb
mov
adc
cmp
mov
pop
jnp
dec
xchg
test
add
adc
mov
cmp
cmp
and
insl
sub
pop
jno
out
pop
test
loopne
lahf
pop
loopne
jge
mov
lds
inc
jp
aas
repnz
xor
or
hlt
push
mov
insb
mov
in
mov
out
popa
rolb
xchg
repz
mov
test
loope
and
inc
div
jns
out
xchg
ss
and
mov
sahf
ja
aas
in
jp
cmp
mov
sub
sbb
or
sbb
lahf
cmc
testl
pusha
stc
jb
sub
add
jne
sub
int
in
je
idivb
or
lods
xor
mov
mov
pop
pop
cmpsb
loope
mov
addr16
fisubs
sub
or
sbb
xor
pop
adc
aam
inc
arpl
mov
popa
sub
or
adcb
cmpsb
ds
aaa
repnz
lods
popf
add
repz
and
loop
mov
dec
cs
cmpsb
xchg
xchg
xchg
and
clc
push
in
aaa
sbb
scas
or
repz
loope
js
sbb
xchg
inc
fidivrs
xchg
test
and
pop
xor
jle
ja
std
cmp
nop
push
ss
cmpsl
push
push
xchg
jl
lcall
xor
or
inc
cmp
mov
shl
js
mov
pop
sub
ja
test
or
mov
push
movsb
fs
pop
mov
sahf
jne
scas
pop
xchg
call
pusha
mov
mov
lock
jle
cli
cmp
mov
rolb
sub
leave
xchg
mov
pushf
movsl
insl
imul
pushfw
dec
add
jp
imul
pusha
enter
push
mov
loope
dec
jmp
xlat
decb
xor
mov
pop
add
adc
shlb
xchg
push
push
sbb
push
pop
lcall
dec
sub
mov
xchg
movsb
add
adc
imul
fisttpll
cltd
pop
push
fisubrs
mov
pop
out
inc
xor
std
push
insl
imul
sti
fldl
cmpsb
jge
pop
inc
xchg
shll
jmp
pop
mov
daa
cs
int3
mov
or
leave
scas
fs
ja
inc
mov
dec
push
jb
stos
xchg
xchg
sarb
or
mov
fwait
ret
inc
shlb
sub
mov
nop
ficoml
in
aaa
hlt
ja
adc
subl
inc
sti
jecxz
lcall
sub
orl
pop
inc
icebp
mov
dec
lds
loop
sahf
and
sbb
std
and
rclb
inc
inc
sbb
movsl
outsl
outsb
out
cmc
addr16
mov
test
aas
pop
stos
mov
mov
imul
cmp
xor
loopne
sarb
jns
sub
int
popa
insb
sbb
pop
mov
fdivr
cmp
add
js
ret
sbb
arpl
pusha
dec
imul
dec
mov
aaa
jno
pop
add
lea
dec
or
pop
mov
and
dec
mov
loope
push
testb
test
push
and
mov
lock
mov
or
push
sub
or
loopne
out
fmulp
clc
and
movsb
aaa
lret
jae
cmp
cmp
xchg
je
dec
fldl
ds
int3
es
adc
mov
arpl
cmc
loop
cmpsl
out
pop
cmpsb
ret
xor
cmp
inc
mov
sarb
lret
sub
std
sub
adc
inc
push
or
in
sbb
xor
jae
push
adc
imul
push
ss
insl
cmp
dec
insl
inc
mov
leave
in
cmp
cli
dec
or
aad
push
dec
test
int
mov
push
or
popa
xchg
dec
sub
stos
mov
test
jb
push
sbb
ficoms
scas
push
or
loope
leave
jmp
jl
add
push
test
aad
and
imul
push
or
add
es
jnp
dec
test
push
cmp
shll
mov
clc
cmp
jecxz
lock
lods
and
out
insl
lret
cmpl
xchg
leave
xchg
xlat
aaa
cs
out
imul
inc
pop
xchg
mov
xor
dec
mov
jge
mov
push
dec
mov
dec
inc
mov
jae
ss
pop
cmp
test
stos
adcl
aad
dec
mov
lret
cld
add
nop
sbb
sbb
popa
sub
enter
mov
sarb
jmp
and
mov
fsub
push
dec
inc
mov
adc
dec
std
sar
arpl
loopne
mov
js
repz
sbb
push
add
stos
fstps
pusha
in
scas
cld
loopne
lret
jnp
jg
and
shlb
idivb
cmp
mov
sti
loop
into
rol
push
test
inc
popa
add
lea
roll
dec
ficompl
pop
out
cmp
cld
fildll
daa
inc
mov
inc
dec
and
lret
call
int3
loope
insl
cmp
lahf
les
dec
xor
push
mov
mov
xor
add
xor
sti
or
jbe
jae
jae
inc
imulb
fsubrl
fwait
shll
loope
cmp
mov
or
or
sbb
mov
aas
push
push
cmp
cwtl
bound
and
cli
divl
inc
push
scas
shlb
stc
mov
dec
outsb
pop
cmp
lcall
sub
popl
out
push
jecxz
fld
jp
jb
dec
xchg
and
test
sbb
xlat
jle
filds
popf
pop
lahf
jp
xchg
movsl
pusha
jno
jns
ret
outsl
popw
mov
or
aas
push
pop
xchg
ret
pushf
leave
aaa
and
pop
add
push
sbb
loope
leave
mov
push
mov
out
enter
sub
pop
in
and
aam
and
imul
inc
jb
insl
gs
in
into
push
test
ret
lret
int3
sub
repz
and
icebp
jnp
cwtl
adc
cmp
lods
inc
push
test
jb
test
es
mov
movsl
xchg
scas
or
and
and
scas
scas
or
pop
adc
outsb
push
dec
mov
sbb
push
cmp
pop
xchg
outsb
add
clc
adc
data16
xchg
and
cs
or
dec
mov
cmp
lock
mov
sbb
or
out
or
fwait
jmp
jns
enter
into
lret
rorb
pop
pop
imul
mov
jnp
insl
xor
out
xor
or
ficompl
lea
push
mov
mov
daa
adc
aad
xchg
pop
cmc
jecxz
push
mov
and
and
or
pusha
dec
mov
cs
les
adc
xchg
loope
daa
inc
out
bound
jae
sbb
flds
sub
xor
jnp
push
insl
jnp
movb
xchg
jcxz
sub
in
icebp
femms
mov
push
cld
scas
xor
aaa
adc
sahf
mov
test
stos
jbe
lods
sbb
loope
loope
rcll
pop
pop
dec
bound
inc
addr16
mov
adc
dec
fstl
ljmp
mov
push
xor
or
cmp
mov
fsubs
ficompl
popa
adc
jo
and
aas
aad
push
loope
lcall
out
push
sbb
mov
out
loopne
inc
push
inc
jecxz
sub
in
cs
enter
cmpsb
xchg
push
lds
inc
popf
scas
in
mov
in
dec
mov
insl
pop
inc
cmp
pusha
mov
in
or
gs
push
push
rcl
out
jmp
sub
fcmovnu
dec
and
nopl
iret
or
pusha
sbb
fcompl
cmp
inc
sbb
mov
xor
out
bound
sub
jmp
dec
or
es
imul
push
aad
xchg
rsm
push
pop
movsb
push
aaa
push
jecxz
xchg
ss
ret
sub
xchg
mov
sbb
ror
inc
out
ret
pop
adc
inc
xchg
xchg
mov
aas
push
jge
xchg
mov
bound
mov
call
leave
sbb
xor
pop
inc
aad
outsl
add
push
clc
jp
addr16
fs
cltd
add
push
pusha
push
cmp
fstps
mov
xor
pop
cwtl
sub
inc
mov
fisttpll
pop
arpl
adc
jno
cmp
or
mov
inc
bound
movsl
jl
out
inc
push
push
test
pop
jns
sub
outsb
incb
add
mov
or
cmpsl
in
sub
fcoml
mul
jg
lods
sarb
mov
pop
aad
sub
das
jg
sahf
sbb
add
xor
iret
mov
sbb
cmpsl
clc
inc
inc
mov
popa
lock
shlb
mov
inc
ja
es
add
mov
mov
jnp
leave
hlt
sbb
cmp
mov
push
cld
in
sub
or
out
xchg
mov
mov
jno
cltd
test
add
sti
push
test
insl
xchg
cli
imul
jmp
fistl
push
mov
ret
ljmp
int3
dec
cltd
sub
idivb
mov
fs
imul
dec
rcrl
cmpsb
sub
push
test
dec
fs
out
sarl
and
sub
mov
add
aad
cs
push
ja
mov
xor
popa
mov
xor
into
inc
imul
es
stc
push
inc
int3
sbb
fstps
mov
test
stos
xor
cmp
push
iret
and
adc
sbb
pop
and
adc
adc
mov
pop
out
je
andb
sub
subb
xor
inc
dec
arpl
cld
xor
mov
aaa
data16
xchg
shr
pushf
mov
xor
sub
aaa
add
fucomp
movsl
pusha
sub
popa
dec
rclb
fisubrl
xchg
push
or
sahf
test
test
std
pop
addr16
cmp
cmp
das
mov
adc
roll
cmp
pop
add
js
clc
dec
repnz
cltd
push
dec
dec
pushf
sbbl
pop
xlat
addr16
add
clc
hlt
mov
and
lea
xchg
stos
and
adc
sbb
mov
das
jb
cmp
sub
out
insl
add
lods
lea
push
in
mov
popa
fisubrl
mov
adc
push
and
outsl
lock
mov
js
repnz
pop
jb
dec
andl
inc
sbb
ret
adc
mov
lea
frstor
sbb
icebp
outsb
jne
ja
fstl
gs
pop
xchg
pop
stc
and
jne
pop
sbbl
jmp
gs
sbb
push
lea
push
xlat
dec
adc
xor
andl
xchg
test
mov
xchg
mov
jae
push
or
ljmp
mov
clc
movsl
pop
cli
out
pop
or
rcrb
std
lods
push
rcrb
push
sub
pslld
adcl
loope
xchg
hlt
into
inc
pop
insl
int3
aam
adc
mov
fildl
fsubrl
add
pop
mov
push
test
fldcw
sbb
pop
xor
ja
adc
mov
ljmp
lods
sbb
mov
movsb
push
sub
jmp
xorl
jb
lret
pop
jl
mov
mov
push
dec
dec
xor
arpl
imul
daa
popf
js
mov
cld
and
test
lods
add
lcall
lahf
cmp
inc
xor
leave
sub
imul
dec
fisttps
and
and
out
frstor
mov
mov
addr16
fstl
inc
sub
pcmpgtd
pusha
cmp
adc
sub
push
push
sbb
lret
xchg
mov
jne
call
jecxz
stos
and
lea
popa
adc
popw
dec
pop
adc
and
and
push
insl
adc
jmp
pusha
lcall
pusha
movsb
imul
adc
sti
idivb
int3
sti
outsl
mov
pcmpgtd
lea
or
jecxz
xorb
xchg
ds
dec
adc
fistps
jge
push
xchg
mov
jl
pop
repz
or
inc
xor
ret
and
xchg
cmp
in
xchg
out
popa
xchg
loope
ret
cmpsb
hlt
out
lret
inc
push
push
cmp
push
or
sbb
mov
xchg
dec
pusha
in
lods
loopne
fidivrl
dec
ds
notl
inc
adc
dec
push
das
dec
mov
push
loopne
icebp
or
arpl
leave
cmp
add
mov
add
push
icebp
add
mov
inc
sub
pop
cmpsl
std
sub
std
xchg
lret
divb
rcrl
lods
fdivl
flds
int3
movsl
stos
mov
xlat
dec
sbb
clc
sbb
testb
out
push
scas
mov
pop
sbb
fadd
jbe
stos
xor
cmp
xchg
mov
adc
leave
xchg
jnp
ret
negb
jno
pop
fucomip
popa
pop
loopne
ds
test
or
and
mov
gs
pop
pop
in
pop
rcr
push
mov
loop
xor
jmp
popa
loopne
push
jo
pop
jmp
mov
mov
stc
dec
out
fsts
xchg
ljmp
decb
out
mov
int
lea
pop
movsl
inc
popf
in
xor
add
ret
jns
int3
xchg
cmpl
in
repnz
in
into
mov
negb
shll
popf
sbb
jbe
add
sbb
ja
aas
lock
mov
sbb
xor
cli
popf
sahf
mov
mov
push
lods
cmp
mov
lcall
pop
loope
js
pop
sti
lds
inc
outsl
aas
push
inc
lods
cmp
and
adc
xor
lret
or
lret
je
push
repnz
mov
cmp
mov
bound
dec
ja
adc
cld
gs
stc
xlat
cmp
out
ljmp
int3
pushl
sub
xor
scas
mov
lahf
ss
lret
push
test
pop
dec
scas
jnp
adc
test
imul
fidivl
loope
cmc
dec
push
dec
xor
mov
fld
and
adcl
pop
mov
adc
add
scas
dec
mov
ret
mov
enter
nop
fsubrp
sub
dec
push
pop
mov
lret
iret
xbegin
imul
daa
dec
mov
push
mov
arpl
xchg
or
mov
jns
lods
je
ret
inc
lock
jbe
int3
aad
jmp
in
sbb
popa
adc
sbb
in
ds
push
adc
adc
imul
scas
push
jge
lods
jns
sub
mov
rcrl
jo
cmp
mov
mov
jne
inc
inc
sub
nop
mov
adc
out
dec
ja
sub
test
xchg
sar
scas
roll
popf
mov
cmpsl
sub
push
insl
pop
inc
add
mov
add
mov
rolb
gs
jno
ds
pavgb
push
sbb
shrb
dec
cmp
or
cs
aaa
popf
jb
inc
jae
fstpl
mov
lret
ret
mulb
lods
cltd
bound
fs
sbb
pop
xor
inc
popl
aas
je
pop
js
or
and
shl
cmp
dec
sub
movb
test
xchg
jg,pt
rolb
xchg
imul
mov
frstor
je
movsb
lret
out
sbb
xchg
pop
popa
jb
ljmp
sbb
pop
lea
mov
mov
loopne
ljmp
adc
jb
insl
or
cwtl
icebp
popf
pop
adc
xor
dec
inc
adc
jl
jl
pop
arpl
in
cli
push
mov
mov
inc
stos
out
test
push
rol
test
push
gs
clc
imul
inc
sub
jo
cmp
sub
xchg
faddl
sbb
mov
add
movb
mov
movsb
cmp
lahf
xor
or
inc
popa
std
mov
and
push
add
adc
subl
aad
and
sub
dec
push
xlat
lods
dec
mov
aad
scas
mov
mov
push
or
sti
clc
or
movsb
insb
push
cld
int
mov
movb
add
imul
and
mov
lahf
sub
or
or
adc
xor
pop
pop
andb
and
ss
push
dec
outsb
clc
rclb
xchg
jp
lds
loope
insb
dec
xchg
adc
cmpsl
daa
mov
cwtl
inc
cli
mov
add
clc
rclb
xchg
loop
sub
subb
test
mov
imul
xor
lret
inc
test
cmc
mov
inc
dec
inc
cs
jp
jns
out
mov
pushf
mov
je
addr16
xlat
es
cmp
or
pop
scas
mov
pop
addb
enter
test
movsb
prefetch
lret
jg
xor
repnz
pop
jae
dec
nop
out
rol
push
int3
sbb
ror
fsub
pop
mov
or
push
mov
les
popa
jne
cmpsb
fldl
inc
adcb
rcrl
fstl
in
sub
push
inc
pop
faddp
jp
sbb
fs
or
and
jne
push
jo
jp
test
rclb
mov
stos
incb
mov
xchg
popf
pop
add
adc
cmc
and
and
mov
sbb
stc
mov
pop
sbb
jp
pop
mov
in
mov
xlat
mov
sub
push
fsubrp
cmp
dec
pop
jmp
jmp
xchg
cmp
hlt
xor
sub
xchg
scas
xlat
fprem
stos
mov
int
cmpsl
repz
insb
push
jns
pusha
inc
xchg
popf
cmp
mull
insl
jg
push
jne
xchg
sti
mov
lea
inc
mov
cmc
sbb
cld
lret
cwtl
cmp
push
mov
in
adc
rep
aaa
in
or
hlt
aam
imul
mov
iret
jo
pop
jmp
push
inc
mov
mov
pop
pop
outsl
dec
fadd
sarb
add
movsb
fdivs
lods
enter
mov
xor
mov
or
mov
cmp
repz
pop
loop
les
jmp
pop
cmp
pop
pop
jmp
push
push
push
in
inc
and
cmp
mov
in
jno
out
lcall
movsb
pop
orb
popa
pop
and
je
imul
push
js
fdivrl
and
mov
cmp
add
cmp
pushf
mov
scas
sub
adcl
pop
js
xor
xor
imul
shll
and
and
dec
fisubs
sub
repz
repz
stos
das
popa
sub
cmc
push
clc
xor
cs
outsl
je
add
insl
jae
repnz
sbb
xor
cmc
push
sub
jecxz
sub
jbe
test
ret
push
dec
addr16
je
jbe
cltd
pushf
fistpll
inc
loopne
js
and
subl
xchg
call
cmp
push
dec
jle
fsubrs
xor
ss
icebp
xlat
fildll
inc
or
add
add
or
mov
jns
jne
icebp
testl
dec
add
inc
inc
xor
fs
int
push
mov
jmp
adc
xchg
xchg
ja
sub
or
test
xlat
aam
inc
jle
test
mov
mov
jmp
nop
xor
addr16
mov
bound
fsubs
dec
ss
cs
out
sub
cmp
cld
pop
lea
shll
mov
fsubs
adc
or
push
outsl
mov
lea
andb
push
cli
pop
flds
mov
leave
orl
idiv
push
lret
fistpl
lods
cmp
push
mov
aam
test
out
xor
rcll
inc
scas
insl
aas
loop
mov
inc
enter
add
sbb
adc
repz
pop
das
std
cltd
andl
inc
int3
pop
cwtl
leave
lahf
mov
mov
ja
or
cmp
pop
sub
and
or
js
dec
push
das
cmpsb
pop
lods
lods
xlat
xchg
push
outsb
daa
adc
mov
jno
xlat
push
or
out
imul
mov
dec
add
ja
mov
dec
mov
cmpsb
mov
push
sbb
or
jmp
add
pop
cltd
int3
pop
arpl
ret
and
popa
xlat
iret
sbb
icebp
stos
in
pop
jnp
or
in
push
jecxz
jae
cmp
lcall
or
in
in
es
push
fidivrs
popa
add
ljmp
clc
inc
loopne
test
out
pop
mov
or
insb
add
mov
mov
dec
test
stos
std
jmp
dec
jne
jp
push
mov
push
mov
repnz
fwait
sbb
ja
pop
mov
xor
test
add
xchg
dec
adc
outsb
push
stos
je
jl
cmp
icebp
cmpsb
mov
jmp
inc
ffree
das
push
imul
in
cmp
and
lea
into
pop
jno
pop
jecxz
push
ss
outsl
cmp
push
mov
int3
and
les
pop
icebp
bound
imul
xor
cmp
idivl
out
push
jne
insl
mov
aaa
insl
adc
out
xchg
push
rcl
es
add
int3
aam
mov
mov
into
pop
scas
fdivl
fcoml
dec
js
aad
push
sub
test
sub
pop
and
cmp
inc
imul
inc
push
xor
pushf
xor
cwtl
sub
jnp
push
push
xchg
or
in
push
rcrb
out
mov
pop
dec
inc
sub
push
sub
addr16
aam
pop
pushl
lret
repz
pop
shrb
movsl
sub
mov
sti
stos
push
add
xchg
test
es
jp
add
adc
jmp
push
cmp
int3
cwtl
fisttpl
das
mov
lahf
add
insb
int
xor
add
loope
mov
add
mov
les
fs
mov
sti
mov
sub
xor
push
pop
stc
in
das
in
lret
xor
jnp
dec
adc
test
xor
push
ror
jnp
and
pop
jp
mov
out
mov
push
in
pop
xor
sbb
pusha
dec
mov
fsub
les
in
jp
out
stc
jno
push
sub
popf
jno
rorb
cmp
and
add
xchg
inc
pop
call
ja
push
cmp
mov
lret
in
push
mov
pop
sub
std
add
xor
pop
jmp
push
push
pop
or
inc
inc
es
adc
dec
mov
mov
in
frstor
push
inc
out
pop
xchg
adc
ficoms
ret
icebp
movsl
sub
push
int
addr16
jb
nop
insb
adc
xor
lcall
cmpsl
outsb
clc
xchg
loopne
cmp
push
fldl
int
fwait
js
xchg
into
adc
sbb
das
jne
out
aam
and
movsb
jo
add
dec
xchg
ret
push
pop
lods
dec
outsl
ret
jmp
inc
ret
mov
andl
lea
or
cmp
xchg
mov
and
or
xchg
popa
adc
sbb
xchg
and
jmp
daa
sbb
cmp
mov
jne
ret
es
xlat
scas
adc
rclb
loop
fsubs
xchg
pop
lock
sub
jg
adc
pop
sarb
scas
fisttpl
xor
or
je
jns
pop
in
scas
push
add
add
sti
pop
les
ds
sbb
jns
lods
inc
movsb
and
dec
sbb
adc
xor
sbb
pop
xchg
cmpsl
lahf
pop
lea
gs
sub
shl
mov
cmp
mov
adc
cmpsb
push
mov
mov
mulb
mov
dec
xchg
sahf
testb
repz
mov
mov
mov
jne,pn
leave
sub
and
sub
jbe
daa
mov
dec
fisubrs
inc
test
imul
xchg
mov
jnp
cmpsb
xor
sbb
ret
lds
lret
push
aaa
aaa
cmpl
mov
jp
movsb
cmp
in
pusha
jmp
aaa
movsl
fldcw
dec
xor
rep
movl
pop
cld
imul
ljmp
jb
loop
cmp
pushf
aaa
xchg
push
repz
mov
fs
xor
or
test
andl
sahf
xchg
xor
dec
cmc
add
jb
xor
mov
filds
adc
jbe
outsb
addr16
inc
dec
lock
mov
es
xchg
and
cltd
or
jnp
cs
insl
push
loopne
pop
enter
sbb
mov
popa
push
fmull
mov
dec
je
mov
das
fcomip
popf
imul
roll
mov
push
sub
scas
jmp
scas
xchg
cwtl
out
jbe
cmc
mov
cld
fcomps
jns
idivl
push
orl
inc
rorl
in
cmp
jg
dec
and
testl
dec
pop
aad
mov
sub
into
pop
jmp
jecxz
sub
xchg
dec
out
fnsave
add
or
and
loope
movsl
test
dec
xchg
cmp
lock
xchg
dec
dec
outsl
mov
pusha
lods
mov
sahf
enter
cmp
mov
adc
out
fsubs
imul
push
jecxz
jb
stos
cld
arpl
push
push
and
popl
add
pop
dec
testl
lahf
loope
mov
js
mov
popf
mov
ljmp
cmp
jle
pop
sub
rcll
pop
repz
sbb
pop
xadd
adc
lahf
outsb
pop
sub
ficoml
movsl
pop
mov
and
add
pop
mov
insb
push
addr16
inc
lods
dec
aaa
mov
outsl
pusha
inc
imul
call
push
add
lcall
jno
pop
in
or
adc
nop
je
int3
jle
fpatan
jnp
mov
lcall
cwtl
in
cmp
mov
xchg
js
sbb
stos
lret
sbb
xor
jb
call
mull
shrb
mov
call
stos
adc
mov
xchg
xor
ffreep
inc
cmp
es
and
loopne
test
in
mov
mov
and
or
pop
lods
jle
inc
roll
arpl
or
pop
add
movsb
sbb
push
into
test
mov
add
xorl
mov
in
in
jb
mov
mov
pop
jns
das
in
jne
mov
lds
enter
arpl
xor
xorb
stos
loopne
mov
int
xchg
sub
mov
repz
lods
pop
mov
dec
lahf
popf
xor
cld
mov
xorb
mov
xchg
jge
outsb
cmc
pop
push
or
adc
sahf
inc
push
imulb
jg
aam
adc
rcr
jp
sbb
test
test
pop
pop
into
jns
scas
cld
pop
mov
mov
andl
and
or
push
scas
mov
ja
shl
push
sbbl
add
adc
adcb
mov
aaa
loop
mov
stos
cmc
nop
mov
push
sub
or
inc
int3
out
jmp
jecxz
or
rcrb
jne
incb
push
push
rorb
incl
iret
push
and
dec
cld
push
aaa
sub
mov
fcmovnbe
push
xor
insl
fbstp
imul
cmp
aaa
cltd
pushf
xorb
fcoms
cmp
and
mov
lods
adc
icebp
rorb
fimuls
dec
mov
pop
push
sahf
rcrb
outsb
xor
xchg
leave
jecxz
push
xchg
sub
or
add
or
cltd
jg
xor
jb
jnp
xor
in
inc
sarb
out
fwait
test
outsb
xlat
fbstp
jl
dec
pop
sbb
inc
and
movsl
shlb
push
mov
lahf
test
cmc
xor
push
out
dec
adc
pop
stos
add
movsb
loop
pop
mov
or
inc
addl
sbb
test
loope
pushf
jmp
addr16
push
mov
das
imul
shlb
inc
push
jmp
pop
add
lret
sbb
out
pushf
cs
mov
in
push
jmp
push
mov
jo
add
arpl
xchg
cmp
cmp
xlat
rcr
or
in
cmpsb
or
xchg
dec
ret
dec
mov
in
ljmp
add
clc
cmpsl
adc
adc
xchg
mov
loopne
xor
cmpsb
out
xchg
cmp
push
pop
pushf
pop
mov
fld1
mov
or
mov
pop
pushf
jno
mov
std
mov
pop
loop
inc
call
xor
dec
mov
rclb
in
shlb
imul
pop
lods
pushf
mov
xchg
test
cmp
popf
push
imul
inc
test
fildll
xor
push
sbb
gs
jb
das
setbe
test
cmp
xchg
pop
cmp
into
gs
orb
dec
test
fcoml
fmull
repnz
xchg
pop
dec
xlat
push
fildl
dec
lret
and
shrb
jp
in
loop
mov
test
ficoms
pop
mul
cmp
sub
rcr
mov
ds
mov
cmp
cmp
sbb
adc
ret
cmp
jns
mov
add
cld
pop
mov
clc
push
jp
mov
loope
pop
inc
pushf
mov
xchg
stos
cmp
xor
and
cmp
dec
xchg
into
xchg
popf
aad
js
enter
mov
js
ret
xor
xchg
ljmp
push
cmp
and
xchg
dec
in
ret
ffreep
sub
ljmp
xchg
lcall
cmp
dec
fsubs
sub
inc
pop
div
jg
jns
ss
mov
mov
fwait
pop
dec
mov
dec
mov
xchg
lret
cltd
nop
nop
xchg
push
roll
xor
ret
divl
iret
cs
mov
mov
fsubrl
cmpl
sbb
push
jl
nop
popf
cld
push
and
sbb
dec
xor
adc
mov
adc
xor
sub
dec
dec
in
jae
nop
sbb
les
fistps
ret
push
fstpt
mov
popa
outsl
lds
adc
jno
pusha
jns
xlat
xor
pop
or
pop
jmp
mov
or
sbb
cwtl
pop
mov
push
push
inc
mov
jno
mov
mov
jbe
negb
cld
mov
inc
dec
inc
mov
push
xchg
in
pop
les
dec
dec
dec
mov
dec
fldenv
push
jbe
movsl
and
fstpl
jo
cmp
jo
lretw
popa
mov
pop
cmp
outsb
loope
cmc
fwait
sub
test
lret
bnd
pop
iret
or
cmpsb
in
mov
sbb
xchg
or
lods
iret
imul
outsb
cmpsl
lcall
loope
add
ja
std
or
lret
mov
into
scas
adc
lret
and
std
fisubs
mov
mov
cmp
stos
das
mov
adc
push
movsl
icebp
fdivr
or
adc
xor
ficoml
jecxz
ret
and
test
mov
or
loop
dec
fiadds
out
repz
insl
mov
pop
push
mov
aas
test
push
push
pop
lods
leave
inc
mov
sub
lods
sub
push
jbe
inc
icebp
cmp
cmp
xchg
jge
sahf
shrl
inc
pop
xchg
pop
pop
jp
push
push
mov
mov
cmp
pop
adc
sub
sub
and
pop
mov
mov
cmp
lret
add
mov
adc
lods
test
cltd
int3
scas
dec
mov
repnz
lock
mov
push
jmp
xchg
mov
idivl
mov
stos
dec
fucomi
jns
dec
mov
jmp
pop
jmp
stos
xor
or
pop
adc
rolb
rorb
cs
mov
inc
sub
dec
jmp
loop
int
lcall
jne
outsb
jmp
or
or
fwait
xchg
sbb
and
out
orl
insl
jmp
mov
cs
pop
lcall
lahf
mov
enter
hlt
or
cltd
addl
imul
push
push
loope
jp
jmp
adc
out
push
outsl
cmp
lods
sarl
loop
cmc
int
push
jno
push
jle
and
mov
jecxz
sub
xor
call
loop
out
adc
fs
repz
jb
dec
sarb
mov
addb
mov
or
orb
push
rorb
nop
dec
adc
mov
mov
dec
test
aad
sbb
mov
ret
jno
fsubl
ljmp
fcoms
pop
in
cs
push
dec
push
icebp
imul
push
mov
mov
or
popf
xor
mov
push
pusha
xchg
jbe,pn
int
cmp
cmp
outsl
repz
rorb
imul
pop
dec
mov
gs
push
and
enter
filds
popa
mov
adc
jnp
lcall
js
fwait
jae
fisubrs
or
cmpsb
xor
data16
add
int
push
jmp
pop
adc
cmp
pop
nop
xchg
lret
sbb
pop
push
jmp
pushf
cmp
push
call
push
pop
cs
mov
sti
cmp
ret
xchg
shl
leave
mov
push
pop
outsb
sbb
pop
sbb
jle
xlat
notb
inc
push
or
lock
fdivrl
outsl
int3
outsb
sub
sbb
cmp
mov
or
ss
mov
push
mov
mov
cmp
jp
adc
and
dec
aad
jg
mov
mov
bound
cmp
stos
jns,pt
jg
pop
push
scas
test
mov
cltd
aam
je
in
jae
jns
pop
push
sub
or
mov
or
push
xor
fisubl
clc
mov
jecxz
add
outsl
xchg
push
jo
fs
neg
adc
ja
fmul
mov
adc
lret
aam
mov
xor
jno
add
pop
xchg
inc
faddl
xor
jae
pop
daa
cmp
cli
cmp
es
push
inc
jnp
test
in
clc
dec
andb
fcmovb
std
sbb
jle
test
or
out
cmp
cmpsl
out
lods
aam
test
xor
mov
cld
inc
jmp
loope
push
mov
out
push
jl
scas
pop
adc
adc
xor
jp
stos
lcall
mov
mov
les
xor
bts
es
loopne
movsl
push
mov
pop
outsl
les
mov
gs
pop
jl
pop
cli
lods
mov
outsl
xor
imul
sbb
jecxz
dec
hlt
andl
mov
push
sbbb
mov
lods
sbb
pop
and
dec
or
mov
shlb
push
and
mov
into
push
jnp
or
scas
xor
mov
pop
pop
out
bound
jp
lcall
popl
repnz
lds
sbb
push
mov
xor
or
mov
pop
dec
xchg
repz
push
mov
push
ret
sub
jb
repnz
mov
filds
mov
movsb
pop
cmpl
jmp
roll
jo
mov
out
push
xchg
sub
mov
or
test
pop
jne
popa
sbb
cmp
test
mov
or
pop
cmp
or
xchg
or
mov
jle
fbstp
ret
cmpsb
aas
sub
imulb
dec
inc
cmp
jp
shrl
xor
inc
add
enter
ds
jnp
jp
pop
fildll
push
jns
cmc
or
ret
sarl
pop
mov
or
or
inc
loop
iret
or
sbbb
ret
filds
pop
and
sbb
fistpl
out
jp
xorb
and
repnz
pop
mov
pop
push
into
test
repz
pop
xchg
out
mov
cwtl
add
out
fcompl
test
xor
inc
mov
cmp
dec
daa
sub
jo
pop
cmpsl
ljmp
es
push
int3
push
mov
xchg
popa
shll
sti
jno
test
inc
and
into
leave
mov
mov
lret
inc
xor
sbb
add
mov
fnstenv
dec
outsb
push
cmp
mov
cmp
push
and
lds
cmpsl
push
test
pop
mov
inc
cmp
jns
xor
jmpw
pop
aas
leave
sub
ljmp
cmp
es
addr16
and
rolb
xchg
cmp
negb
cmpsl
test
clc
cli
loopne
test
into
rcr
adc
inc
shl
lcall
dec
or
neg
pop
adc
jg
imul
lret
push
mov
push
xchg
or
mov
mov
out
test
into
mov
add
scas
and
popa
test
jge
lds
xchg
scas
je
rcrl
push
cmpsl
push
cmp
lds
scas
and
mov
cwtl
mov
daa
dec
clc
fwait
mov
xchg
and
cmp
ljmp
cmp
push
mov
cltd
iret
cmp
pop
dec
adc
pop
filds
out
pop
cmc
insw
inc
cmp
out
mov
dec
movsl
arpl
or
js
aas
cltd
out
clc
sti
in
movsl
jge
inc
push
xchg
xorl
cmp
inc
jmp
jl
xor
arpl
sub
pextrw
adcl
outsb
shlb
and
lds
andb
jbe
lret
and
pop
mov
insl
aad
lods
mov
fldcw
out
lret
push
push
dec
ja
outsb
mov
or
push
mov
pusha
sbb
push
mov
cltd
add
outsb
dec
daa
lods
push
sub
mov
inc
pop
xchg
syscall
push
popf
mov
int3
dec
xchg
mov
sub
push
cmp
sbb
mov
adc
push
cwtl
pusha
mov
dec
add
fucomp
and
andb
aad
test
push
cmp
sbb
sub
dec
add
dec
or
add
movsb
bound
pop
mov
fs
jns
and
pop
jmp
loopne
or
insl
leave
lret
and
fsts
pop
cmp
pop
pushf
xlat
insl
inc
add
push
js
add
adcb
dec
dec
std
aam
daa
mov
call
inc
push
jmp
and
imul
divb
jbe
loope
push
pop
sub
inc
pop
mov
lds
and
cmpsl
fwait
push
sbb
fsubl
lret
jle
and
and
and
sti
pop
dec
sub
sbbl
sub
cmc
jne
sbb
jg
jle
sbb
inc
enter
seto
inc
sub
or
rcrl
mov
icebp
mov
pop
iret
enter
insb
loope
inc
rcl
or
in
xchg
mov
gs
dec
in
aam
es
mov
sub
mov
push
leave
jbe
dec
jne
jnp
adc
sbb
pushf
xor
add
mov
in
rcll
insl
dec
mov
daa
xchg
fisubrl
mov
cmovp
dec
scas
in
repnz
gs
xchg
stc
dec
notb
lret
pop
add
cmp
or
ds
mov
inc
adc
cmp
jo
in
sarb
mov
xchg
pop
movsb
and
dec
cld
xor
ss
jle
loopne
push
pop
sub
add
add
ljmp
pushf
push
lea
fldenv
push
mov
sub
push
xor
jg
mov
mov
inc
repnz
mov
jb
cmp
adc
rolb
outsl
sub
stc
and
out
std
fwait
or
inc
js
fdivrs
or
cltd
xchg
cwtl
pop
dec
add
cmp
data16
stos
sub
mov
sbb
cld
push
outsl
dec
sbb
xor
and
lahf
jle
ror
mov
jmp
pop
or
ret
inc
push
mov
iret
dec
repnz
lea
cs
jbe
xorb
leave
sub
push
repz
aad
lods
xchg
andl
sub
xchg
vmwrite
movsl
clc
xchg
stc
mov
xchg
daa
pop
or
sbbb
xor
xchg
xor
out
outsl
mov
jns
inc
mov
xchg
sub
push
fdivl
out
xchg
push
stos
je
ret
mov
pop
cwtl
mov
xchg
pop
xchg
inc
enter
dec
xchg
lods
xor
inc
add
push
lret
clc
in
jmp
jmp
xor
shrb
pushf
adc
fistpl
hlt
int
xor
cmp
mov
inc
std
pop
out
aas
mov
xchg
ss
sub
stos
in
int
push
lcall
lret
push
push
or
das
enter
adc
xchg
out
negb
scas
mov
mov
xor
mov
pop
inc
test
inc
or
test
iret
xchg
aam
and
out
xorb
jl
shll
push
sti
repz
adc
fcomps
test
push
dec
sub
adc
iret
in
mov
shr
cmc
insl
dec
lock
lea
or
push
add
rcrl
pushf
out
ljmp
pop
xor
jbe
sbb
cli
out
cmp
mov
push
push
dec
cs
hlt
or
add
and
sub
dec
push
sub
add
in
in
nop
sbb
xchg
imul
push
aas
adc
test
jmp
fwait
dec
inc
rorl
es
fidivs
push
push
les
mov
test
repnz
fisttps
cmpl
icebp
stos
pop
mov
fsubrl
repnz
test
jmp
shrl
outsb
fimuls
mov
inc
test
fstpl
xlat
jnp
cli
outsl
bswap
or
xchg
aas
and
in
popf
pop
popa
fdivr
pusha
mov
jb
test
test
cltd
jnp
addr16
dec
imul
or
sbb
sar
jae
jae
and
mov
in
into
inc
cmpl
cmc
int
ret
cltd
jns
or
mov
mov
ret
ficoms
jge
bound
fwait
mov
scas
pop
xor
mov
inc
mov
sbb
adc
aad
sub
outsl
sub
lret
mov
repnz
mov
cli
inc
insl
int3
cmp
pusha
or
lret
adc
loope
fsubrl
scas
inc
lods
sub
mov
mov
inc
cmp
gs
push
push
fs
in
inc
mov
fdivs
ljmp
mov
sub
ffree
pop
ret
fs
mov
in
jns
in
mov
mov
mov
xor
in
pusha
movsl
add
sbb
repz
fldt
movsb
shlb
out
dec
fcmovnu
movsb
loope
nop
scas
xchg
or
add
bound
xchg
pop
jne
sub
mov
outsb
inc
mov
das
repnz
cmp
pop
imul
jp
imul
imul
outsb
ja
xor
inc
and
popf
ficoml
stos
pop
int
dec
pusha
scas
loope
int3
adc
jmp
mov
nop
and
out
mov
outsb
int
or
pop
add
aas
fucomip
jo
sbb
inc
push
mov
mov
test
inc
pop
mov
decb
scas
and
jnp
sbb
jmp
gs
mov
lds
iret
repnz
fs
stc
mov
mov
cmpsb
xchg
dec
and
stc
sbb
out
sub
push
or
fnstcw
scas
lods
jbe
add
pop
xchg
xor
lock
sbb
add
dec
dec
dec
pop
aad
dec
cmc
test
xor
push
hlt
add
pop
inc
jne
data16
test
add
pop
mov
xor
jp
insb
dec
push
xlat
push
jae
mov
stos
dec
clc
lods
shll
stos
jns
ds
pop
ror
lock
out
lea
lret
push
popa
aas
and
mov
cmpsl
inc
dec
sbb
dec
sbb
es
movsl
jge
sub
ret
insl
inc
fildl
popf
mov
pop
ffreep
mov
inc
xor
sub
xchg
fwait
jge
daa
pop
dec
movsb
jg
nop
mov
pop
push
mov
adc
cmp
lret
shlb
in
mull
pop
pop
fildll
std
adc
hlt
sub
xor
cmpsl
mov
sbb
mov
xor
in
xor
adc
adc
and
sub
inc
adc
dec
sbb
mov
pop
sbb
inc
mov
leave
jno
aas
mov
lcall
repz
stc
push
pop
notl
push
mov
or
les
outsl
xor
inc
inc
sti
dec
jle
cwtl
mov
mov
mov
sub
cmp
aad
dec
jb
cld
add
mov
fucom
cmp
loope
push
sbb
icebp
mul
sbb
sub
add
aam
xchg
pop
jp
pop
popa
and
int
inc
mov
inc
mov
sub
sbb
sbb
push
cld
loopne
mov
add
sbb
cmp
sbb
scas
or
dec
ret
in
ljmp
mov
es
aas
jg
insl
cmp
mov
inc
inc
aaa
ud1
pop
lret
insb
test
out
daa
inc
inc
xchg
in
aaa
jnp
int
adc
or
push
jo
xor
sbb
jmp
or
in
aam
pusha
dec
pop
xor
call
dec
cmp
mov
out
call
lcall
fldt
jl
mov
sbb
cwtl
pusha
add
jmp
adc
scas
xchg
xor
stos
shll
and
shlb
mov
jns
sub
hlt
or
mov
and
lret
or
mov
and
das
or
outsl
adcl
int
fbstp
jo
out
or
addb
mov
push
pop
cmpl
fcmove
insl
cmp
lret
xchg
int3
dec
and
or
jns
fnstsw
inc
stos
add
mov
xlat
xor
test
cmpsb
je
enter
cmp
bound
lret
in
jl
js
fildll
push
xor
and
decl
and
mov
mov
and
aas
scas
xchg
mov
adc
out
and
add
lods
xchg
jle
popf
shrl
jg
dec
or
shlb
mov
cli
testl
movsl
ret
jnp
shlb
mov
shl
loopne
insl
push
inc
aam
sahf
out
xor
jge
pop
lahf
mov
fisubs
xchg
jmp
pop
xor
pop
jmp
jg
sahf
cmp
pop
mov
xchg
push
lret
frstor
pop
mov
inc
pop
lcall
iret
dec
xor
ja
mov
mov
inc
out
xchg
aas
daa
loopne
push
lret
pop
in
leave
shll
push
jbe
fisubl
push
outsb
cmp
ret
and
mov
insb
mov
xchg
adc
ficoml
sub
lea
xor
loope
jg
mov
jbe
dec
outsl
fwait
or
inc
sub
out
push
rcll
cltd
icebp
xor
jle
jns
xchg
or
not
sbb
mov
xchg
scas
aaa
pop
lret
xor
push
jl
push
adc
xchg
loop
inc
ret
out
mull
sbb
xchg
pop
mov
mov
cli
jle
push
out
repnz
mov
xchg
mov
cmp
xlat
pop
aaa
jmp
jle
lea
inc
and
inc
sbb
loop
push
and
mov
jp
cs
pop
jp
dec
icebp
dec
pop
push
jo
rcl
sbb
out
adc
call
insb
xor
sahf
jg
ds
out
mov
add
inc
fildl
sub
leave
dec
into
xor
push
xor
mov
mov
sub
int3
inc
aam
sub
mov
call
icebp
ret
cwtl
out
adc
cli
xchg
pushf
mov
stos
push
dec
push
imul
insb
es
cmpsb
lds
cmp
or
bound
push
stos
int
pop
cmpsl
pop
enter
cmp
mov
jge
movsl
fldcw
mov
clc
cli
sbb
xchg
add
daa
jne
bound
cmp
inc
dec
push
mov
ret
adc
cltd
outsb
fs
push
sbb
add
or
pop
mov
imul
daa
and
insl
mov
cs
mov
adc
mov
subl
jmp
mov
bound
mov
mov
lahf
out
fdivrp
pop
push
mov
pop
imul
jb
aad
xor
push
push
out
adc
fdivl
push
xchg
cmp
dec
ja
in
in
push
push
push
das
mov
pop
in
cmp
or
pop
adc
in
cmp
jp
sub
jns
ja
xor
ficoms
dec
and
repnz
icebp
jecxz
scas
inc
test
fnstsw
into
data16
shlb
sub
xchg
xchg
enter
je
mov
pop
lahf
int
pop
inc
cs
pop
or
lds
pop
pop
fwait
les
jp
pop
ja
push
mov
push
mov
leave
js
out
data16
in
mov
sbb
mov
sbb
mov
out
lds
outsb
fwait
ds
xchg
mov
je
out
dec
test
in
xor
loope
jno
jp
jae
xchg
outsb
or
ret
outsb
nop
xchg
cmp
mov
adc
mov
stos
adc
fisttpl
sbb
das
je
adcl
mov
push
cltd
jge
aas
mov
hlt
jge
jns
and
adc
test
popf
push
andb
fnstsw
loope
and
int3
mov
mov
push
shrb
inc
loopne
clc
jo
sbb
rcl
xor
scas
dec
or
xor
jno
sbb
push
nop
test
int3
repnz
cs
je
jl
jmp
and
push
sub
jecxz
in
fwait
negl
mov
cmp
push
arpl
dec
xlat
inc
sbb
movsb
cmp
jg
int3
adc
loopne
pop
and
repnz
prefetch
jecxz
dec
cmp
pop
outsb
hlt
inc
xchg
or
aam
ljmp
addb
sbb
mov
jo
push
xorb
lahf
xor
or
push
ja
nop
sbb
mov
add
lds
pop
and
ret
roll
jl
cmp
icebp
lret
jo
pop
cmp
mov
sti
test
push
sub
xor
ja
xlat
pop
pop
sub
scas
stos
mov
flds
sub
fwait
add
in
xlat
bound
xor
popa
data16
xchg
pop
mov
mov
subb
call
xchg
inc
dec
fwait
ret
xor
jbe
mov
mov
dec
out
clc
cs
hlt
lahf
into
lods
int
or
es
jp
and
out
add
and
aad
push
ljmp
loope
push
push
adc
iret
out
jle
sub
push
insb
fiadds
push
aas
adc
mov
cmp
inc
popa
push
cld
sarl
getsec
jmp
popf
cmc
adc
add
push
adc
sahf
mov
cmpsl
iret
xor
xchg
push
mov
aam
or
mov
in
mov
inc
insb
cmp
jmp
or
insb
adc
fcomip
mov
shr
or
sahf
shl
out
jecxz
cmp
aad
cmpsb
jge
xchg
mov
xchg
and
js
call
sub
bound
cmp
ja
out
ja
arpl
leave
fdivrp
inc
das
fidivl
cmpsb
addl
add
daa
jb
cwtl
mov
sbb
bound
addl
sub
jae
sbb
pop
aam
jl
lods
cmc
insl
gs
mov
dec
pusha
xchg
jae
sbb
mov
cmp
test
in
test
loopne
push
xchg
je
fildll
push
out
jne
mov
imul
mov
sbb
jbe
sbb
xchg
push
js
movb
inc
push
cli
stc
fsubr
xor
dec
add
imul
mov
push
xor
ret
addr16
sahf
pop
lret
xchg
cmp
and
sbb
push
test
xor
int
sarb
int3
jle
xor
popa
scas
cwtl
push
fiadds
add
stc
mov
shl
out
inc
sbb
pop
xor
xchg
push
pop
xor
testl
outsb
mov
or
sarl
push
mov
int
inc
scas
cmp
xor
push
inc
out
push
pop
lds
or
mov
dec
loopne
popf
mov
sti
lods
xchg
jno
jl,pn
or
and
insb
pop
jae
sub
in
sub
es
push
sub
cli
ret
ds
pop
pop
and
inc
loopne
mov
and
aaa
es
idivl
sbb
dec
dec
sub
fscale
addl
repnz
scas
iret
sub
into
std
rcrb
popa
ret
out
ret
mov
out
cmpsl
shlb
mov
push
cmp
mov
sbbl
sub
repnz
shlb
lahf
mov
shrb
push
stc
cld
hlt
cmp
aaa
in
xor
pop
mov
push
dec
loopnew
push
cwtl
out
dec
xchg
xor
repz
fs
and
fcmovnu
push
xchg
sahf
pop
in
clc
add
pusha
mov
mov
or
in
xor
jo
jle
xlat
or
sub
or
xor
fildll
mov
mov
ficoml
jge
scas
jmp
push
cs
push
jmp
test
xchg
push
les
nop
movb
push
fmull
cmp
test
mov
into
dec
frstor
std
mov
and
gs
and
lret
mov
mov
rclb
lcall
aad
scas
std
sub
repnz
push
or
movl
in
bound
push
inc
int3
sub
test
je
dec
shll
inc
addr16
popf
imul
inc
inc
mov
lea
or
movsb
outsl
mov
mov
push
adc
mov
lods
sub
pop
lahf
movsb
mov
mov
aad
arpl
dec
cli
jge
ret
push
mov
mov
xchg
sbb
fldt
pop
lcall
fisubrs
sbb
mov
and
cld
cld
fdiv
jbe
aas
sbb
push
lret
push
fldcw
mov
sbb
aaa
test
xor
lods
je
andl
or
loop
dec
ljmp
xor
sub
or
stos
test
xchg
xor
and
fcoms
adc
pop
push
scas
fstl
sub
jge
adc
push
xchg
pop
lds
adc
xlat
adc
shll
mov
test
add
rorl
xchg
movsl
push
jmp
sbbb
dec
in
cmpsl
sub
pushf
push
jle
hlt
icebp
mov
xchg
adc
add
repz
lea
cmp
xchg
cmp
or
int3
ljmp
add
je
sbb
pusha
fcompl
mov
hlt
shll
mov
fistpll
int3
lods
shll
out
ljmp
sbb
mov
push
jns
mov
ss
subl
imul
or
xor
xchg
ds
push
scas
xor
push
ret
mov
gs
sbb
mov
or
mov
test
cmp
out
in
lock
nop
cmpsb
inc
fucompp
mov
mov
jp
add
mov
sub
sub
cmp
popw
xor
mov
lds
jge
xor
sub
cwtl
movsb
pop
test
mov
cmpsb
and
cltd
popf
fcoms
mov
rcrb
jo
and
or
mov
mov
cmpsb
pop
mov
dec
and
mov
loop
loop
int
or
out
xor
div
lea
mov
mov
pushf
jl
dec
cmp
enter
or
and
sbb
test
sbbb
mov
pop
shlb
cmp
adc
rorl
cltd
rol
lock
popf
cwtl
int3
ret
iret
xor
xor
gs
inc
and
dec
int
imul
ficompl
lret
jecxz
push
push
cmpb
ds
dec
mov
lahf
mov
enter
js
mov
test
xchg
pusha
pop
push
and
je
inc
jb
jg
test
rclb
jmp
xchg
lods
fs
and
dec
jo
push
pushl
inc
and
inc
xchg
or
cmc
adc
bound
xchg
imul
dec
push
popf
pop
fsubrl
rcr
xchg
pushf
xor
in
lock
and
fstps
mov
push
dec
aam
jle
popf
bound
xchg
mov
xchg
mov
js
xor
jmp
push
movl
xchg
cltd
jnp
inc
repz
imul
push
cmp
cmp
nop
int
imul
rorb
lods
outsb
sbb
pusha
cmp
adc
test
jle
mov
inc
cmp
dec
movsb
hlt
inc
jnp
xor
test
out
or
ret
jmp
std
fcmovnu
xlat
xchg
orl
test
xor
in
arpl
aam
call
push
mov
ret
mov
mov
ljmp
cmp
add
sbb
adc
out
cmpsb
dec
cmc
cmpb
dec
popa
xchg
xor
cmp
sub
xchg
lds
les
ljmp
and
movsb
jl
xchg
loope
xor
shlb
mov
in
int3
adc
clc
xchg
push
fcom
mov
xor
das
mov
lcall
out
xlat
jo
add
aam
pop
push
jno
jecxz
push
inc
divb
gs
sar
mov
sub
push
inc
clc
pop
pop
sub
push
cld
mov
and
adc
out
push
outsl
pop
sbb
mov
adc
inc
out
lock
dec
in
dec
es
jl,pt
addl
jnp
mov
cmp
cmp
jno
mov
mov
and
pop
in
sbb
mov
jne
xadd
xlat
adc
fidivrs
fidivrs
repnz
push
jge
bound
outsl
fdivr
mov
jb
leave
inc
dec
mov
push
push
mov
fwait
cli
jmp
cmp
das
xchg
jae
sub
add
addl
lock
mov
pop
andb
pop
jmp
and
daa
pusha
out
xchg
dec
push
sub
add
fwait
in
jg
test
cwtl
pop
cmc
daa
pop
push
lcall
je
mov
fadd
push
cmc
xor
sub
pusha
sarb
dec
xchg
int
loop
enter
jmp
lret
call
ja
mov
hlt
dec
fildll
add
sub
and
mov
and
push
ljmp
push
and
mov
xchg
jle
hlt
cmp
cli
mov
negb
test
lock
mov
and
inc
arpl
adcb
dec
mov
aaa
mov
jbe
ret
lods
fisttpll
jle
mov
push
pusha
sub
mov
sbb
push
cmp
or
test
sbb
and
jo
add
adc
sub
je
stc
in
push
jno
scas
push
leave
mov
and
inc
or
add
xchg
xor
push
movsl
sub
fisubs
xchg
test
test
lods
mov
xchg
xor
fldcw
and
mov
stos
mov
mov
add
fsub
sub
andb
clc
sbb
push
xor
sub
fsubl
cld
in
cmpsl
popf
jb
cs
mov
push
out
or
add
mov
and
in
in
fsubr
aam
leave
xchg
inc
adc
jecxz
cltd
icebp
addr16
or
stos
adc
movsl
pop
into
mov
inc
iret
imul
mov
push
xchg
xchg
insl
cmc
sbb
mov
js
punpckhwd
or
xlat
mov
aad
insl
aaa
push
mov
adcb
into
add
cmp
lahf
xchg
jo
popf
and
loop
mov
xlat
dec
push
add
cmp
daa
mov
faddl
shrd
push
sbb
fistl
mov
movsb
aas
xchg
and
jb
jl
push
js
inc
xchg
and
and
lret
push
lock
jl
adc
divl
scas
jmp
arpl
into
call
out
push
test
jmp
mov
lea
adc
mov
add
mov
fs
je
pop
call
push
insl
lahf
out
mov
shlb
push
inc
xchg
xor
ja
aaa
cltd
add
dec
add
dec
add
xor
adc
dec
add
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
xor
add
js
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
or
add
and
add
pusha
cmpsl
cmp
add
add
or
add
push
or
cmpb
add
push
add
subb
push
or
addb
add
pushf
or
xorb
add
mov
add
add
add
rorb
add
fimuls
add
add
add
add
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
clc
or
sbbb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
mov
sub
add
mov
sldt
mov
sldt
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
addb
add
cwtl
push
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
adc
xorb
add
inc
or
and
add
clc
push
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
add
add
cmp
add
add
add
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
inc
outsl
insl
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
mov
or
xor
add
in
or
xor
add
sbb
add
dec
mov
add
andb
add
add
call
add
add
add
add
add
insb
stos
or
rolb
add
cmp
or
rolb
add
or
or
rolb
add
fsubrl
add
lods
mov
add
add
add
add
add
add
add
add
add
or
call
add
add
add
add
or
test
add
lods
les
add
add
add
or
in
add
in
or
in
add
add
leave
or
js
add
dec
int
add
rorl
add
add
add
add
movsb
rorl
add
add
xlat
or
add
add
adc
or
enter
or
call
add
add
add
add
fisttpl
add
add
add
add
js
or
faddl
add
push
loop
add
add
add
add
in
in
add
add
clc
jmp
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
stc
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
add
add
add
or
sbb
add
mov
or
rolb
add
or
and
add
insb
adc
adc
add
adcb
add
add
xchg
adc
adc
add
test
or
adc
add
mov
add
add
adc
adc
add
in
or
adc
add
xor
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
or
push
add
inc
add
inc
add
dec
add
dec
add
dec
add
add
inc
add
inc
add
dec
add
add
inc
add
push
add
push
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sbb
mov
cltd
cltd
cwtl
add
mov
mov
jns
inc
and
repz
mov
sub
dec
cli
dec
std
cld
dec
cld
call
stos
aaa
mov
lahf
inc
pop
inc
icebp
test
fstl
enter
repz
adc
sahf
outsb
mov
lea
mov
test
mov
push
sbb
mov
jle
or
icebp
mov
xlat
fwait
or
int
aaa
scas
push
in
stos
dec
dec
add
push
mul
jmp
cmp
cmp
sbbl
and
rclb
imul
ret
mov
test
sbb
cs
loopne
lods
mov
push
push
fldcw
mov
fstl
subl
pusha
inc
and
push
cmp
lods
daa
inc
sbb
mov
fsubl
pop
sti
push
adc
and
and
push
xchg
test
mov
or
and
scas
jecxz
cmp
sbb
retw
or
xor
jbe
sub
cmp
addb
xchg
out
rol
test
inc
cmp
dec
aaa
mov
mov
aam
push
in
ljmp
es
lret
call
imull
nop
data16
add
cmp
add
xor
ja
and
push
or
cmp
mull
mov
xor
insb
test
addr16
push
or
repz
push
aad
loopne
out
je
xor
rorb
add
inc
sti
cmpsl
jecxz
pop
mov
jmp
add
mov
test
imul
pop
rcr
mov
cmp
filds
aad
pusha
cld
and
rorb
icebp
pop
inc
add
clc
mov
das
fisttps
mov
ja
lock
sub
push
xchg
jecxz
out
sub
pop
or
nop
iret
or
adc
dec
in
dec
mov
ret
pusha
xchg
push
ret
icebp
imul
add
mov
in
mov
mov
jp
xchg
cltd
daa
mov
xor
bound
daa
mov
xchg
sbb
pop
push
bound
test
imul
rolb
test
push
inc
in
and
inc
inc
xchg
xor
scas
pop
push
hlt
jecxz
xor
nop
daa
test
fistps
mov
mov
les
mov
inc
jp
shr
sbb
add
push
fwait
mov
ja
imul
imul
imul
ljmp
sub
push
xchg
jne
mov
aas
push
sbb
mov
pop
rcl
and
ds
xchg
and
movsb
clc
in
jl
test
and
daa
jmp
push
loope
push
or
lds
sahf
and
xorb
js
insb
dec
push
pop
pop
sbb
sbb
xchg
jbe
punpckhdq
iret
mov
dec
cmpsl
add
jo
leave
dec
xlat
ss
je
fnstcw
mov
add
hlt
aam
xor
jl
xchg
mov
inc
inc
pop
rorb
jmp
push
clc
push
or
inc
add
int3
xchg
adc
sub
xchg
fsubrp
lcall
mov
iret
xchg
cmp
shl
sub
jecxz
cmc
cltd
cmp
mov
xchg
mov
xor
add
or
in
pop
in
xchg
push
and
pop
out
fstps
fildl
scas
and
ror
test
xlat
sub
adc
shll
dec
mov
sbb
xor
out
xchg
mov
lret
push
dec
popf
cmp
jmp
adc
out
push
mov
mov
mov
jle
out
push
loopne
stc
in
inc
loope
pop
inc
push
lret
js
lret
imul
xorl
sti
or
cld
mov
pop
imul
add
cmp
fidivrl
inc
or
imul
sub
adc
test
mov
lock
cmpsb
add
xchg
inc
addr16
inc
jecxz
sbb
pop
fstpl
bound
jb
fld
jmp
xchg
pop
and
outsb
test
daa
jg
pusha
inc
in
mov
fbstp
out
call
add
mov
cmpsb
adc
mov
push
push
sahf
or
outsl
roll
xchg
add
jle
jl
cmpsb
ljmp
and
mov
sbb
pop
sahf
mov
mov
pop
repnz
inc
lea
cmp
daa
shll
fs
or
stos
lahf
add
sbb
xchg
jbe
mov
jbe
pop
xchg
test
fistl
popf
icebp
dec
mov
jno
dec
sub
sub
movsl
pushf
frstor
cmp
add
and
movsl
subb
ja
or
sahf
iret
xchg
inc
push
jo
aas
icebp
in
cmp
mov
fildl
xchg
add
movsb
sbb
push
shl
and
inc
lock
nop
xchg
cmp
into
or
loope
dec
lods
push
xor
jl
or
sub
xor
jle
stos
cmp
aam
mov
or
popa
cmp
mov
pusha
adc
push
imul
lods
adc
iretw
jae
aad
mov
nop
or
lods
push
or
dec
sub
fsts
mov
xor
jp
dec
vandpd
lods
sub
xorl
shlb
xchg
adc
popf
lea
fs
js
push
jl
mov
mov
repnz
testb
aas
or
cmp
add
sub
jnp
xor
pop
jae
xchg
les
aad
push
insl
test
clc
aam
repnz
sbb
fisubrl
add
sbb
out
shll
lret
aad
push
sub
notb
ja
mov
lods
call
ds
cmp
xchg
rcrb
ret
repnz
dec
aaa
out
mov
push
rol
add
loop
imul
lds
mov
mov
imul
data16
and
mov
jnp
sub
shll
dec
cmp
fdiv
and
fcoml
xor
pushf
mov
push
iret
in
push
repz
out
sbb
push
cmp
or
jp
pop
inc
das
pop
frstor
lret
xchg
xchg
mov
dec
jae
add
sarb
mov
and
push
std
into
cld
inc
mov
rcrb
xchg
aad
mov
in
sbb
and
jmp
dec
pop
push
jmp
xor
mov
int
and
movsb
movsb
mov
test
xchg
push
and
mov
scas
cwtl
dec
xor
adc
and
rol
sti
inc
mov
xor
ljmp
rclb
frstor
push
lods
insl
xchg
cmc
cld
lods
xor
popa
add
iret
cmp
insb
mov
lret
pop
sti
add
int
inc
mov
les
mov
adc
jp
ds
lods
popa
insb
push
sbb
pop
out
bound
les
cmp
enter
sbb
cmp
fs
inc
cmpsl
jmp
fwait
mov
cld
xchg
pushl
dec
rclb
adc
adc
jae
hlt
mov
or
push
or
pop
lret
fdivl
adc
fsubl
int3
aam
adc
daa
mov
cmp
ja
loopne
js
cmp
push
cmpl
mov
or
in
mov
ljmp
xchg
popf
xor
pop
dec
cmp
lods
cmp
pusha
les
xor
xchg
mov
dec
dec
jbe
js
arpl
and
jl
jg
and
pop
ja
into
nop
cmp
nop
add
or
mov
push
sub
out
ret
jnp
cwtl
pop
xor
test
aas
pushf
pop
push
xor
pop
rorb
cmp
jns
cld
arpl
xchg
cli
movsb
dec
jp
xchg
lahf
inc
cltd
or
leave
add
in
fisubl
in
add
dec
push
cmc
inc
xlat
add
lret
xor
aad
dec
mov
or
mov
inc
jae
and
testb
and
testl
xchg
je
adc
push
fisubrs
fidivs
or
mov
jmp
dec
cmp
fstps
shll
testb
outsb
add
scas
pmulhw
sbb
daa
jmp
adc
out
lcall
out
inc
pop
jge
aad
addr16
mov
andb
in
lods
xor
mov
je
add
fsubrp
dec
mov
pop
sbb
cmp
push
out
xchg
cmp
mov
clc
idiv
inc
jp
mov
insb
movsl
cmp
or
jns
insl
cmpsl
and
enter
xor
cmp
push
movsb
push
test
fwait
xchg
outsl
xor
dec
loop
inc
add
jnp
popl
xchg
xor
lcall
sub
dec
sub
stos
subb
mov
jmp
dec
push
mov
sub
inc
xor
mov
ror
cmp
in
xchg
insl
add
call
and
rcll
negl
out
xchg
das
inc
xchg
sub
shll
adc
xchg
out
xor
xor
cmp
les
mov
adc
mov
bound
loope
pop
xor
hlt
sub
xchg
push
cmp
push
movsb
mov
adc
dec
shl
push
fnsave
das
sbb
cmp
xor
cld
ja
adc
nop
inc
mov
repnz
imul
dec
loopne
add
int3
movsl
mov
ja
dec
pop
addr16
push
fistpl
jne
lcall
loop
or
mov
xor
ljmp
lcall
popa
pop
fs
xchg
inc
xchg
and
push
sahf
mov
push
xor
in
test
xor
lods
xor
sub
fsqrt
out
mov
lret
mov
sub
orb
push
imul
push
mov
pop
movsl
out
sub
insl
out
and
lds
adc
pop
jle
jns
out
pushf
sbb
lret
lea
out
mov
stos
adc
aad
mov
push
xor
pop
add
push
movsl
andl
pop
lock
or
sbbl
or
push
dec
add
xchg
add
dec
jge
mov
cmp
adc
pop
or
test
add
repz
iret
jmp
cmc
push
pop
push
in
and
into
cmpl
ret
icebp
sbb
addl
add
fwait
sub
invd
iret
jmp
into
add
pushf
and
repnz
out
mov
aad
push
mov
add
movsl
jecxz
sbbl
fnsave
mov
daa
jecxz
in
cmpb
es
fcomip
cli
sub
ja
ret
pushf
outsl
stos
xchg
inc
mov
sarl
icebp
mov
mov
push
data16
mov
jo
ja
ja
lcall
data16
lods
xchg
in
inc
int3
notl
jnp
jne
sahf
adc
jnp
and
mov
pop
adc
sbb
cmpsb
fadds
pop
jle
jo
inc
mov
or
inc
inc
adc
ljmp
aaa
pop
pop
cmp
jl
xchg
dec
push
mov
aad
pop
int
inc
add
push
aaa
xor
std
ds
mov
pop
loopne
and
mov
popa
rcrl
rcrb
and
push
mov
mov
call
addr16
shl
outsb
jmp
aam
mov
cmp
shrl
mov
xchg
push
mov
lods
jns
mov
mov
xchg
mov
aas
test
jae
dec
xor
adc
rclb
xchg
sub
push
adc
xlat
push
mov
std
adc
jge
jl
inc
in
ja
je
popa
cwtl
fwait
into
push
sbb
push
add
test
outsb
jbe
dec
add
jnp
or
push
lret
inc
out
test
xor
aad
popa
scas
shll
xchg
ljmp
pop
sbb
adc
pop
and
jp
xchg
pop
and
outsl
ret
push
add
ret
or
or
mov
repz
out
sub
in
lea
and
jno
pop
xchg
out
push
jp
or
mov
test
mov
int
mov
icebp
push
pop
pop
jae
add
cmpsl
mov
loop
jae
loop
lret
push
cwtl
add
mov
add
or
test
lahf
leave
cmpsl
or
in
jmp
push
movsl
and
cli
jp
sbbb
in
int
and
sub
mov
push
movsl
ficoms
dec
mov
shll
mov
imul
dec
xor
xchg
mov
sub
mov
test
pop
xchg
ljmp
call
push
cltd
adc
mov
lods
loope
xor
add
test
adc
bound
add
or
lds
stos
test
jae
adc
out
stc
cmpsl
mov
xor
int3
add
sbb
shlb
dec
aam
call
mov
das
add
push
loop
or
mov
out
into
push
lahf
popa
pop
stc
mov
or
repnz
adc
inc
push
xchg
adc
movl
push
dec
ja
movsl
xchg
mov
adc
lock
dec
sub
jmp
sbb
popa
sub
pop
push
popf
sub
dec
pop
nop
lds
xchg
fs
iret
aad
test
lock
ljmp
push
xchg
inc
mov
ljmp
add
lds
shlb
push
fs
xor
sbb
out
js
icebp
jnp
dec
add
ljmp
and
arpl
rorb
rorb
cmc
test
pushf
andl
mov
inc
and
lret
jbe
repnz
pop
and
movsl
aam
scas
push
dec
jnp
mov
imul
fwait
mov
and
or
and
jae
and
push
add
fwait
mov
push
cmp
inc
sub
add
push
mov
fwait
icebp
ja
call
in
lea
stos
mov
notl
jmp
int3
sub
sub
insb
mov
adcl
lods
mov
xor
popa
mov
dec
dec
push
mov
mov
jmp
pop
push
loop
sarb
and
out
add
hlt
je
jnp
xchg
adc
inc
rorl
mov
pop
pop
aam
cwtl
outsl
js
pop
pop
pop
in
inc
aas
cmpsl
and
rcr
jo
jmp
mov
iret
cmpb
inc
es
fbld
cmp
fs
add
or
jns
jns
psrlq
xchg
jns
ljmp
push
popf
loopne
mov
cmp
xchg
fcmove
mov
mov
mov
shl
inc
shlb
pop
ljmp
mov
fs
adc
insb
push
fbld
int
mov
xor
test
xchg
dec
cmp
add
xchg
fistl
mov
pop
mov
cmp
notl
popa
jo
sbb
mov
dec
mov
int
inc
jae
cs
adc
mov
push
cltd
insl
add
jbe
int3
das
sub
xchg
mov
mov
cmp
cmp
pop
imul
push
imul
cmpb
adc
mov
and
pop
jg
js
mov
jae
xchg
lea
sub
xchg
fdivl
loopne
in
adc
mov
sti
mov
jbe
cs
cli
mov
adc
fs
sub
mov
pop
pushf
in
sub
iret
dec
xor
xchg
inc
mov
dec
jl
dec
cmpsl
jae
imul
adc
cmp
mov
push
leave
or
lahf
loop
call
or
or
popf
sub
ret
out
push
inc
cmp
enter
addb
jne
jle
movsl
push
dec
mov
adc
divb
jge
inc
xchg
or
out
sub
cli
bound
jmp
pop
jmp
xchg
es
enter
jp
out
addr16
pop
fwait
xchg
out
lcall
push
or
mov
xchg
pop
lds
fnstcw
ffree
dec
loop
mov
les
adc
add
out
mov
mov
jl
mov
jl
push
push
sahf
out
pop
rorb
das
jae
pop
fildll
cmc
add
sbb
push
pop
out
cmp
test
outsl
mov
dec
mov
lret
or
testb
or
pop
iret
sub
fldcw
sub
dec
xor
scas
xchg
leave
outsl
pop
sbb
mov
sbb
jmp
lcall
pushf
adc
cmp
mov
fcoms
xor
shll
cmp
jno
inc
inc
mov
push
pusha
push
adc
outsb
adc
repz
adc
in
push
mov
cs
mov
out
push
cmpsb
ljmp
xchg
ljmp
dec
push
nop
sbb
or
in
dec
push
call
sbb
into
push
pop
pop
jb
jnp
or
lods
jge
cmp
or
push
dec
dec
mov
xchg
cmp
mov
orl
pop
insl
mov
imul
mov
push
adc
lods
hlt
jmp
inc
jg
cmp
and
add
pop
pop
push
lock
ja
in
out
pop
pop
test
fsubl
xchg
jno
jne
lea
adc
test
add
xor
and
int3
inc
js
lods
repnz
dec
sub
insb
jo
xchg
cmp
jno
adc
pop
lock
cmp
sbb
jmp
fstpl
mov
rcr
and
movsb
push
mov
out
faddl
mov
sahf
out
xchg
fnstsw
outsb
shlb
sbb
mov
xor
jno
mov
cwtl
dec
enter
xlat
shl
xchg
and
push
icebp
add
jo
push
dec
mov
orb
or
sub
inc
mov
pop
std
outsb
popf
add
sub
push
mov
ret
or
ss
lea
inc
push
inc
add
pop
fwait
mov
dec
pop
out
mov
mov
mov
or
mov
es
xchg
ss
jnp
fstpl
scas
ss
hlt
pop
push
lret
adc
cmc
jne
lahf
adc
inc
dec
popa
xchg
adc
repz
and
mov
outsb
cmp
jmp
cmp
ret
mov
js
xchg
sub
mov
mov
xchg
lret
insl
mov
adc
sub
sub
xchg
mov
and
lods
dec
dec
cwtl
shr
pop
inc
cmp
mov
js
cld
or
cmpsl
xlat
pusha
cmp
jg
mov
out
sub
pushf
cld
push
xchg
lret
xchg
mov
push
inc
icebp
mov
mov
add
outsl
scas
inc
xor
outsl
dec
inc
jnp
mov
push
add
pop
es
mov
sar
dec
pop
cmpsl
mov
adc
push
sbb
std
push
push
rolb
pop
idivb
loop
jge
sbb
clc
clc
xor
sbb
cmp
jmp
cmp
loope
xchg
andl
iret
inc
rorb
inc
and
jl
mov
jl
scas
inc
jecxz
nop
push
sub
dec
repz
fsubrl
push
int3
mov
dec
hlt
jp
pop
out
mov
adcl
xor
cmp
push
je
lahf
mov
lods
dec
xchg
jle
xor
sar
dec
and
jbe
ja
leave
add
inc
jo
jae
popaw
mov
jmp
test
ja
sti
inc
shll
je
inc
fists
std
orl
inc
add
rorb
mov
outsb
fcomp
int
and
xor
adc
loope
out
push
mov
add
dec
push
repz
cmc
cmpsl
jle
test
adcb
and
enter
dec
sub
popa
jne
addl
jae
cld
lret
or
cmp
cs
in
pop
js
lods
rcl
cli
dec
jo
mov
les
sbb
sub
jle
loop
jnp
gs
pop
sbb
out
lock
pop
shlb
jl
mov
add
int3
cmpsb
arpl
xor
push
mov
loop
add
xor
jns
mov
pushf
mov
test
ret
out
daa
push
mov
pop
cmp
addr16
cmp
jbe
jbe
mov
ja
mov
and
stos
out
jae
fcmovb
ja
popa
pop
in
pop
std
outsl
jo
call
lret
xchg
push
lahf
out
sbbb
cmp
ds
xchg
add
cld
push
sahf
jl
sbb
jg
push
jp
out
clc
xor
add
cmp
shl
mov
test
sbb
and
pusha
xchg
je
jecxz
outsl
cmpsl
out
fstpt
sbb
test
push
fidivrl
pop
popa
xchg
call
mov
out
lock
xchg
in
inc
pop
mov
test
mov
imul
call
mov
jno
pop
inc
sbb
xchg
repnz
fcompl
stc
aam
lret
ret
fisttps
rorl
movsb
mov
lahf
cmpsb
cmp
daa
pop
mov
xchg
pop
enter
mov
add
cmp
push
xor
aaa
mov
pop
dec
inc
mov
iret
pop
inc
in
out
fidivrl
push
ja
int
add
ret
fwait
lcall
pop
mov
pop
in
and
push
or
mov
or
jne
adc
popf
nop
push
xchg
push
out
push
add
movsb
jle
dec
and
dec
add
adc
sub
jno
shll
mov
loope
xchg
ds
add
add
jno
notl
icebp
bound
in
pop
clc
mov
add
mov
outsl
jbe
mov
into
fnstcw
cltd
stos
nop
pusha
sub
mov
mov
push
imul
or
and
push
add
mov
rcll
dec
out
lahf
test
push
mov
add
repz
inc
lcall
jge
push
into
jae
dec
pop
inc
hlt
aam
jo
into
mov
shl
lock
cmp
mov
in
popa
aaa
and
xor
repz
push
sub
rcl
pop
pop
dec
pop
xchg
adc
add
jne
mov
imul
aas
or
mov
push
or
js
in
outsl
cltd
fwait
lds
mov
or
inc
rcrl
jg
int3
aaa
subl
icebp
bound
inc
add
rclb
in
clc
mov
cmp
test
or
test
ss
push
inc
dec
add
xchg
lret
sahf
sub
jmp
aad
mov
lds
jmp
push
mov
arpl
shlb
in
les
xchg
jle
jl
jo
xor
push
scas
jo
xor
je
loopne
mov
in
lods
cmp
dec
inc
lods
arpl
test
ret
fs
cltd
xchg
mov
add
pop
jae
in
jb
xchg
add
repnz
jb
xor
mov
sub
int
int
outsb
add
adc
aam
mov
mov
xchg
mov
mov
mov
pop
loopne
lcall
pop
xchg
sti
jp
dec
lods
mov
rcll
adcb
sub
xor
or
adc
popa
fbld
xchg
int3
int
jg
push
into
rolb
testl
push
scas
push
pop
mov
push
push
jg
xlat
sbb
pop
stc
xor
ja
loopne
js
lods
jl
xor
sub
call
push
xor
push
cmp
xor
push
int
negl
lock
es
aam
insb
in
aas
or
out
pop
push
mov
add
fstp
pop
and
out
shr
sbb
dec
subl
push
jae
lods
mov
enter
sbb
cmpsl
stos
add
arpl
std
inc
out
addr16
aas
or
jb
call
in
inc
mov
fsubl
adc
add
jne
cmp
push
sti
mov
mov
mov
mov
push
fxam
pushf
sub
test
adc
imul
jl
aas
jo
dec
or
sbb
call
dec
pop
sub
or
enter
push
and
push
insl
fcoms
fimuls
lods
push
mov
sub
xor
mov
pop
clc
jo
data16
mov
push
adc
push
in
mov
jmp
outsl
or
cmp
jnp
arpl
and
jp
sub
mov
daa
pop
adc
std
pop
add
push
cmp
push
inc
mov
cmp
lea
inc
add
pop
push
jae
fnsave
push
loopne
call
mov
out
sbb
push
inc
sarl
pop
xchg
sub
mov
pusha
add
sub
rcll
mov
push
mov
sahf
xor
adc
xor
mov
mov
fwait
jo
mov
lahf
add
movsb
repnz
xor
sbb
push
ljmp
fwait
sti
out
inc
xchg
out
roll
push
divb
push
fsubs
add
adc
jns
xor
mov
xlat
mov
jbe
sahf
xchg
aam
jae
push
in
pop
in
add
push
inc
mov
inc
xchg
inc
xchg
iret
int
fisubrs
inc
scas
repz
xlat
stos
std
xor
jecxz
dec
lea
insl
bts
jo
mov
sbb
mov
movsl
iret
imul
mov
mov
cmp
fmuls
xchg
pop
sti
je
mov
sbb
adc
insl
arpl
jecxz
adc
mov
push
push
ss
outsl
jecxz,pt
adc
addr16
fstps
pop
adc
cmp
daa
adc
lcall
pop
add
into
dec
and
out
jb
mov
cltd
enter
sar
lea
dec
sarb
and
push
mov
push
inc
repz
aad
mov
xlat
dec
xchg
mov
adc
xchg
int
in
mov
inc
sub
daa
into
jge
mov
data16
fimuls
aaa
push
popf
cmp
sti
add
mov
inc
or
out
jnp
push
dec
decl
xchg
aam
xlat
sub
imul
in
nop
test
cmpsl
xorb
movsb
int
leave
pop
sbb
lea
jnp
es
out
dec
mov
jmp
sub
xchg
mov
cmp
push
xor
and
hlt
push
sbb
ljmp
je
mov
mov
out
jle
sub
push
arpl
add
cmpsb
clc
xor
xchg
aaa
imul
dec
addr16
int3
bound
add
aas
dec
into
mov
mov
rcr
jns
mov
cld
add
mov
inc
leave
lahf
mov
ret
lock
popf
mov
fisubrl
movsb
int3
lea
ret
aaa
pushf
stos
jle
movsb
inc
stos
jp
add
push
push
pop
dec
iret
jge
inc
mov
mov
lods
pop
frstor
mov
xchg
cmpsb
mov
stos
push
lods
js
pop
aas
ja
imul
add
jge
cmp
push
push
add
sub
xchg
sub
or
mov
mov
inc
cmp
lea
rorb
pusha
sub
.byte
sbb
mov
nop
add
add
in
fs
sbb
push
mov
and
mov
fsubs
call
jmp
shrb
push
iret
js
mov
sub
clc
test
mov
orl
jne
jne
shrl
ret
stos
dec
je
jnp
js
int
shrl
in
aaa
cs
inc
cwtl
mov
adc
cmpsl
mov
or
cwtl
movl
testb
insl
js
sbb
push
cmp
dec
inc
mov
in
gs
jg
mov
dec
fistpll
add
scas
lret
mov
notl
mov
mov
jnp
faddp
daa
add
hlt
mov
lahf
mov
mov
inc
inc
mov
xchg
fiaddl
mov
mov
rcll
jb
adc
pop
fidivs
or
fidivrs
sub
cmpsl
lcall
ret
mov
push
push
adc
je
cmp
scas
das
insb
sahf
sarl
jbe
in
hlt
pop
mov
mov
decb
loope
lock
pmaxsw
in
addr16
repz
lret
pop
or
loopne
addl
movsl
fs
clc
shlb
repz
dec
push
sbb
les
iret
gs
jae
dec
lret
push
lret
lahf
out
sbb
adc
cmp
dec
add
popf
mov
sub
dec
dec
cli
mov
xchg
xchg
pop
mov
jae
repnz
pop
mov
mov
adc
aam
adc
sti
mov
movb
mov
loope
out
andb
dec
sti
loop
hlt
sub
mov
mov
test
cmp
adc
.byte
cmp
test
in
repz
lds
jle
aas
in
and
adc
imul
addb
xchg
sbbb
jns
bndstx
ja
xlat
data16
aam
fdivs
push
sbb
ljmp
and
mov
stc
xchg
xchg
test
out
fcom
jne
lret
pop
loope
pop
push
call
fwait
outsl
push
fs
lret
adc
mov
cmc
gs
test
add
push
adc
out
and
test
fmuls
pop
rcrl
sub
pop
sub
jp
pusha
insb
in
and
cld
mov
es
mov
pop
inc
lahf
xlat
sbb
jge
push
mov
add
andl
adc
aam
fmull
aaa
fistpl
sbb
mov
loope
sub
jg
cmpl
int
adc
pop
xchg
adc
insb
dec
repz
xor
shrb
das
push
icebp
add
push
jecxz
rcll
xchg
rorl
pop
or
push
push
loope
push
mov
dec
pop
mov
repnz
popa
mov
xor
sbb
mov
test
out
repz
and
mov
xchg
imul
leave
pop
dec
sub
xchg
inc
es
cmpl
lahf
push
or
sub
roll
or
jmp
mov
mov
xor
push
inc
sub
sbb
or
test
subb
loop
pushf
xchg
push
in
bnd
scas
addl
mov
adc
adc
add
xchg
xor
jmp
mov
jmp
xor
stos
push
ret
gs
out
int
lcall
cmp
jmp
mov
nop
and
ja
imul
jle
xchg
dec
pop
mov
addr16
cs
jge
push
cs
and
cs
mov
pop
lea
clc
cmpsb
xchg
in
cwtl
xchg
adc
ljmp
sti
sub
xor
stc
jge
sbb
adc
xlat
ret
sub
ret
fisubl
mov
xlat
dec
fstpl
push
mov
cmc
lret
xor
cmp
hlt
js
imul
es
and
inc
pop
push
icebp
inc
jnp
sbb
sbb
sarb
mov
cwtl
add
jge
cmpb
dec
pop
mov
ds
add
dec
cmpb
out
jbe
push
ja
pusha
xchg
lea
pushf
xor
fadds
andb
push
outsb
sub
cmp
ds
nop
jno
jp
mov
outsl
aad
jge
fmull
dec
fcomps
loopne
ja
xchg
push
push
stc
jmp
sbb
mov
dec
adc
loop
mov
push
cld
imul
ljmp
mov
and
xchg
movsl
xchg
or
dec
repz
lea
push
aas
sbb
add
push
xchg
xchg
sub
pop
leave
movsl
inc
sbb
or
aas
insl
add
cmp
mov
xor
add
orl
push
mov
loop
sarl
fsubrs
mov
and
mov
and
mov
je
lret
dec
mov
dec
pop
test
sti
repnz
popf
mov
inc
dec
into
jmp
movsl
jl
sbb
mov
jge
into
daa
dec
mov
pop
imul
adcl
je
in
sbb
xchg
add
shll
pop
push
fstl
or
outsb
arpl
adcb
cmpsw
sub
dec
push
lods
call
movzwl
aad
jmp
jmp
les
clc
es
push
in
xor
jno
sub
lahf
test
test
adc
add
scas
fildll
lds
dec
imul
imulb
sahf
xor
xchg
mov
mov
jo
fbld
bound
scas
test
cld
push
jl
fs
xor
hlt
mull
pop
add
pop
bound
and
imul
or
test
cmc
mov
sbb
mov
inc
lock
bound
pusha
cmp
and
push
fcmovne
add
stc
subb
pop
in
mov
mov
inc
jns
dec
in
cmp
rcll
jge
dec
jmp
adcl
dec
fisttpll
es
dec
push
jb
sub
xchg
xchg
aad
hlt
fucomp
xchg
nop
fbstp
int3
orl
lods
mov
fisubrl
xchg
cmp
scas
xor
mov
cli
outsl
pop
daa
and
icebp
test
mov
or
test
xchg
mov
into
aaa
data16
int3
cmp
in
dec
jmp
adc
pop
fadd
mov
adc
xlat
rcll
scas
sub
xor
dec
ja
dec
push
idivl
push
lds
ss
add
pop
jle
add
movsl
sub
jbe
xchg
pop
fdivrl
mov
decb
adc
inc
fisttpl
mov
es
jp
out
imul
int
add
xchg
lea
cwtl
mov
sbb
mov
imul
push
mov
push
dec
movsb
jmp
jbe
in
dec
pop
aad
jno
mov
in
enter
lahf
adc
movsb
call
movsl
mov
arpl
aad
mov
mov
repz
sub
mov
test
xchg
xchg
int
insb
mov
cmp
mov
cmpsl
test
rcll
fwait
repnz
dec
sub
mov
sahf
dec
rol
loopne
adc
leave
pop
bound
jno
mov
divl
mov
mov
mov
fidivrl
mov
lret
pop
mov
cmp
push
jno
push
pinsrw
push
sbb
mov
push
sub
xor
test
mov
nop
cmc
adc
daa
push
ja
mov
out
cmp
jns
inc
lcall
lock
dec
in
stc
or
stos
dec
jp
in
fcompl
mov
ret
ror
sub
push
in
lcall
inc
popf
ds
or
in
pop
pushf
add
lret
movb
btr
xchg
or
sahf
jle
jecxz
add
inc
or
pop
pushf
lods
inc
sub
or
inc
jmp
xor
jge
xor
sbb
sub
mov
sub
pop
adc
mov
sbb
jg
mov
sbb
popf
pop
mov
ficompl
or
aas
xchg
aas
jp
movsl
xchg
add
add
lret
pop
mov
xchg
sahf
pushw
and
insl
enter
or
outsl
cmp
or
addr16
imul
stos
outsb
mov
ret
jns
and
lods
push
and
pushf
inc
push
inc
mov
and
dec
cmp
call
aad
out
dec
pop
stc
ss
scas
inc
sahf
xchg
add
cmpsl
mov
pop
mov
imul
xor
pop
add
cmp
movsb
cltd
test
or
sti
sti
hlt
in
xchg
xchg
leave
test
fsubr
stc
add
push
jbe
jmp
mov
add
mov
imul
xlat
push
or
ja
adc
adc
ljmp
dec
pop
repnz
or
sahf
pop
stc
jns
mov
adc
pop
mov
pop
xchg
and
mov
jnp
iret
ret
inc
xor
cmp
mov
pop
repz
inc
add
insb
lcall
pushf
dec
aam
dec
aas
sub
dec
mov
jge
nop
xor
dec
outsl
cmp
cmp
cli
xchg
shrl
push
add
and
cmpsb
or
jbe
jp
lcall
mov
imul
test
and
adc
jp
xor
out
add
and
cmpsb
jge
xchg
enter
inc
mov
xchg
push
lock
add
int3
mov
or
push
push
cli
out
jb
popf
popa
sbb
mov
cmp
lods
stc
insl
addr16
aas
out
ja
pop
sub
rclb
jne
push
aaa
outsl
addb
and
jb
inc
push
jno
mov
xlat
out
scas
pop
dec
bound
shr
push
mov
add
mov
push
pop
jg
lcall
push
or
mov
outsl
mov
sti
mov
je
lahf
aaa
xchg
ret
dec
pop
dec
dec
mov
pop
xor
ja
cmpl
into
in
sbb
push
sbb
jbe
and
sbb
and
mov
insb
insb
imul
rcrl
jmp
ljmp
test
push
sbb
sub
mov
xor
cwtl
arpl
out
outsb
jae
es
jne
insb
outsb
clc
xlat
repnz
inc
lahf
or
es
and
sti
lret
or
jno
cli
ja
imul
adc
andl
push
sahf
push
xchg
sarl
rorl
mov
xlat
sub
cmp
popf
je
pusha
xor
in
shrl
repz
mov
sbb
cmpsl
movsb
fistps
and
dec
or
cmp
push
inc
sub
inc
into
test
mov
dec
arpl
clc
pop
pusha
scas
mov
pushf
mov
dec
mov
or
dec
pop
test
push
lret
sub
cmp
and
mov
dec
mov
add
mov
mov
pop
test
in
push
cld
in
ljmp
mov
mov
imul
punpckhwd
ljmp
mov
add
aam
jg
int3
inc
adc
add
jae
mov
jmp
scas
cmpsl
enter
and
dec
int3
and
daa
push
std
xchg
shlb
movsl
xchg
aam
xchg
pop
and
aas
sub
mov
je
movsl
mov
clc
cmp
ret
roll
jmp
push
xchg
in
int3
push
outsl
ljmp
sbb
sarl
mov
fstpl
cld
into
rcll
mov
inc
mov
lods
out
ret
jp
repz
je
pop
mov
pop
loop
decl
pop
in
adc
push
xchg
dec
gs
inc
rcrb
popa
and
dec
push
mov
adc
jne
mov
push
in
xorb
cmc
scas
fcmovnbe
jge
lcall
xor
cmc
xchg
aad
outsb
inc
shlb
fwait
jae
pop
das
pop
notb
arpl
inc
mov
xchg
or
in
adc
sub
repz
imul
lods
xorl
pushf
in
imul
cmpb
movb
push
push
or
mov
aas
scas
gs
in
popf
mov
in
sub
cltd
lcall
pop
jae
iret
cmc
jl
mov
xchg
cmp
xchg
fmull
and
add
and
xor
mov
sbb
mov
mov
lahf
mov
mov
mov
xchg
ss
fisttpll
jo
xor
cmpsb
imul
ficompl
lods
mov
stos
jge
push
cli
out
gs
jge
testl
int3
dec
mov
scas
mov
cltd
test
cld
hlt
daa
cmp
dec
dec
repnz
enter
adc
out
pop
fcompp
int3
or
mov
sub
cmpsb
loop
aaa
jle
aas
pop
aad
and
add
and
int3
sub
pop
mov
sbb
fadd
fimuls
and
insl
jecxz
movsb
cmpb
add
pop
or
jb
outsb
andb
cld
out
cmp
test
movsl
sbb
sub
xor
aad
in
into
ja
xor
cwtl
hlt
stos
out
loope
mov
je
adc
xor
mov
push
cwtl
jecxz
or
dec
sbb
xchg
mov
xor
mov
ficoms
repnz
ja
sahf
in
push
inc
cmpl
test
cmp
adc
jp
mov
add
fs
test
dec
adc
mov
test
mov
mul
inc
push
dec
gs
movsl
mov
jl
xlat
dec
aad
cmpsb
add
cwtl
mov
sarl
and
inc
lcall
pop
or
movsl
add
mov
add
inc
jge
filds
pop
cld
add
adc
pop
sbb
jp
jecxz
fnsave
movsl
mov
je
push
sub
int3
fdivl
addb
stc
cld
fwait
sti
pop
xchg
sub
adc
imul
pop
add
mov
and
dec
test
das
or
xchg
in
mov
jge
clc
stos
xor
clc
dec
dec
mov
xchg
cmpl
stos
mov
out
pop
xchg
insl
jg
mov
and
rorb
in
xchg
lea
push
sbb
mov
scas
jns
orb
call
shll
scas
mov
mov
pop
in
arpl
lock
sbb
stos
mov
clc
push
ljmp
xor
sbb
cwtl
push
imull
les
aaa
outsb
loopne
aas
mov
mov
adc
push
xchg
cmp
fs
push
scas
iret
stos
sbb
xor
popa
pop
sub
aaa
add
push
jns
cmpsl
ja
addr16
jecxz
cmp
mov
sub
mov
out
pop
sbb
xchg
filds
scas
lret
lret
mov
lret
movsb
lock
dec
add
daa
cmp
xor
add
inc
mov
fs
in
mov
jg
lahf
and
aaa
mov
mov
dec
pop
and
lea
mov
push
in
fisubrl
sub
imulb
mov
movsl
loope
jne
mov
mov
jecxz
iret
cltd
mov
popl
lcall
pop
pusha
aam
xor
mov
cmp
lahf
or
push
push
in
adc
dec
mov
out
xor
pop
pop
das
mov
mov
out
or
clc
cmp
mov
pop
xor
lods
mov
icebp
jle
xor
fistl
jecxz
fs
iret
adc
dec
jge
mov
xor
jns
lahf
out
pop
hlt
push
ror
inc
inc
popa
xchg
cmpsl
jge
mov
bound
ret
pop
mov
xchg
push
fucom
inc
daa
pop
mov
add
dec
scas
mov
adcl
or
loop
cmpsb
adc
mov
leave
dec
fwait
loopne
cmp
in
movsl
pop
sbb
adc
push
mov
xor
daa
and
and
inc
and
jb
xchg
fwait
inc
inc
dec
lods
int
cld
mov
add
inc
fcomi
cwtl
dec
fucomp
and
aam
inc
bound
pop
sahf
or
jb
inc
mov
pop
xchg
hlt
cld
test
jns
hlt
subb
xor
mov
sbb
push
bound
pushf
movsb
jb
sbb
outsl
cmp
inc
and
jmp
mov
jl
mov
add
bound
mov
fstpl
dec
pop
jne
icebp
dec
outsl
add
les
dec
inc
mov
and
mov
mov
leave
xchg
and
push
mov
xor
bound
divl
xchg
stos
scas
add
pusha
pop
jno
sarb
andb
bound
enter
data16
into
cwtl
pop
jbe
bound
mov
fiadds
ss
pop
ror
push
push
popf
push
test
repnz
xor
xor
push
imul
orb
mov
in
lds
xor
fistpl
das
pop
jno
xor
lret
or
insl
lcall
pop
stos
lret
pop
mov
mov
sbbb
mov
sbb
xchg
mov
add
lcall
cwtl
addr16
in
inc
cmc
subl
ret
fnstcw
push
std
push
test
push
cmp
and
push
jecxz
daa
inc
fdivl
jo
xor
push
mov
loop
mov
mov
xchg
mov
sbb
repz
mov
sti
add
insl
fidivs
out
pop
mov
cs
mov
pop
mov
bnd
push
or
ret
nop
daa
out
lods
and
xor
dec
test
test
and
and
adc
jl
test
sbb
cmp
cmp
mov
cld
jb
test
push
sbb
push
das
cmpsb
pop
jp
mov
mov
stos
dec
ret
mov
outsl
shlb
lock
int
cmp
pop
or
in
in
pop
ret
mov
mul
sbb
pop
fimuls
dec
ficoms
or
repz
lods
das
fldcw
fcoml
out
xchg
and
repnz
ja
pop
and
jno
lods
test
test
jo
push
ljmp
add
call
hlt
pop
and
fisubl
jns
rclb
push
enter
lahf
xor
jbe
jl
roll
mov
je
mov
push
jl
lcall
jl
int
addl
inc
mov
xchg
std
add
rorl
loopne
xchg
ss
push
add
mov
shl
push
repz
scas
imul
mov
jo
mov
push
rclb
mov
test
jo
ds
in
adc
mov
test
add
xrelease
and
adc
push
or
jecxz
aad
jl
and
pop
lret
add
inc
mov
mov
push
mov
adcl
popf
jo
xchg
flds
icebp
sbb
test
fwait
nop
xor
gs
cmpsl
ds
iret
loop
jecxz
loopne
sub
jp
jecxz
loope
cmc
sti
insl
mov
xchg
cmp
lods
lock
cmp
cmp
leave
sub
adc
push
push
movsl
daa
jl
stos
ja
cli
xor
ss
and
shrl
mov
imul
push
divl
int
push
xchg
mov
aas
xchg
pop
xor
clc
stos
inc
lods
pusha
push
fimuls
mov
inc
ds
test
loop
mov
popa
pop
and
mov
mov
or
xchg
xor
pushf
push
dec
daa
mov
cmp
sub
mov
sub
inc
or
add
mov
mov
push
adc
push
scas
mov
pop
dec
add
cld
hlt
push
repz
xchg
xor
push
mov
lea
int
add
cmp
out
jmp
popa
and
sub
ja
jo
pop
sbb
out
jne
int3
push
cld
std
insl
clc
and
jno
into
fwait
sub
dec
xor
lods
iret
and
adc
sbb
xchg
mov
and
cmp
or
or
xor
in
add
insl
andb
addr16
and
xchg
ss
and
pop
mov
lret
dec
cmp
inc
sbb
and
mov
das
repnz
lods
mov
insb
mov
jle
je
push
loope
pmuludq
adc
cmovb
mov
jnp
or
xchg
xchg
test
addl
pop
lahf
pusha
sub
add
mov
mov
push
enter
inc
aaa
cwtl
push
les
push
adc
cmc
insb
fimuls
mov
jns
sub
aas
xchg
fdivl
add
cwtl
in
add
adc
xlat
push
div
sbb
ja
out
pop
mov
into
mov
ljmp
lgs
adc
mov
insb
fsubrs
fstp
dec
mov
shr
pop
sbb
out
cmp
add
out
lea
rorl
xor
mov
fiadds
xchg
testl
shlb
xlat
aam
or
rol
mov
push
ss
movsl
dec
lea
and
arpl
inc
push
rolb
add
imul
xor
sub
ret
mov
lock
loopne
stos
inc
inc
je
jmp
xchg
cmp
sub
inc
ret
in
dec
xchg
xchg
cs
sub
push
cmp
pop
scas
rcl
lock
lds
js
cmc
mov
test
popl
pop
inc
rolb
dec
and
fwait
sbbb
sub
jae
xchg
jp
loop
mov
xorl
cld
mov
dec
in
cmc
cmpsb
lods
rolb
pop
mov
push
mov
xchg
and
and
in
inc
push
outsb
cmp
icebp
inc
xchg
mov
push
daa
and
lahf
xlat
dec
cltd
inc
lds
imul
notl
sub
sahf
sub
nop
push
xchg
lods
loope
lcall
loop
pop
jo
mov
push
aam
imul
out
into
xchg
imul
pop
sbb
insl
movsl
rclb
mov
lret
and
shlb
add
jne
xchg
clc
mov
cmp
popa
pop
inc
pop
lds
sbb
mov
mov
sub
mov
add
mov
xchg
insl
icebp
jg
or
mov
cmp
rclb
rcrl
sbb
inc
enter
mov
jbe
sub
jne
or
mov
stc
ss
fwait
inc
ss
test
test
movsb
jo
fwait
jp
into
or
repz
inc
dec
fwait
sub
in
pop
xchg
mov
add
ficomps
popa
jmp
movsl
fdivl
cmpsb
jp
mov
nop
das
pop
cltd
das
ss
aad
mov
daa
sub
call
dec
jbe
xchg
push
xlat
adc
sub
stc
jl
icebp
jae
ds
repz
leave
xchg
xlat
xchg
mov
es
aam
xor
hlt
sahf
mov
sub
popa
add
xchg
pop
xchg
sbb
push
push
stc
cmp
cltd
xchg
dec
or
pop
pop
filds
and
push
stc
ficoms
sbb
mov
aad
fistl
ja
out
outsl
sub
maskmovq
mull
imul
mov
loop
sub
xchg
add
mov
pop
jae
mov
add
push
sub
push
stos
mov
cmp
inc
unpcklps
mov
adc
lods
testl
sbb
mov
ret
dec
stos
fisubl
and
out
pop
inc
movb
pop
jno,pt
ret
mov
movsl
mov
shl
mov
popa
mov
cli
aad
inc
xchg
mov
mov
call
mov
and
cmc
dec
or
push
and
imul
inc
or
mov
push
je
movsb
and
iret
inc
aaa
mov
mov
dec
or
mov
cmp
cwtl
pop
mov
adc
mov
push
sbb
scas
xor
mov
mov
mov
dec
jecxz
into
push
in
cmp
outsb
push
xchg
sub
clc
js
dec
aas
bound
mov
jb
push
in
mov
add
lods
jmp
std
mov
nop
rcpps
fmulp
lcall
fdivrl
cwtl
xor
jns
stos
mull
adc
mov
dec
sarl
loop
cmpsl
aaa
addb
fninit
add
popa
pusha
rcr
cmpsl
mov
verw
and
push
push
pusha
push
inc
dec
xor
pop
inc
ljmp
pop
fldcw
push
mov
ret
mov
cmpsb
daa
ljmp
rorl
loope
sub
fnstcw
push
add
int3
inc
bound
ret
int3
cmp
shll
mov
test
mov
cmpsb
enter
mov
mov
adc
push
sub
mov
mov
scas
int3
mov
mov
push
xor
jo
cmpsl
jg
out
loop
xchg
shrl
jb
es
pop
add
cmp
xchg
push
je
addr16
je
xchg
shrl
push
lods
andps
call
push
aam
jecxz
sbb
dec
mov
imul
xor
icebp
and
lret
out
ljmp
js
mov
lods
outsl
rorb
push
fucomp
push
lods
popf
loope
jnp
lods
gs
sahf
add
pop
cld
mov
xchg
fistl
pop
mov
fisttpll
andb
sub
jmp
mov
sbb
es
push
popa
push
add
or
mov
scas
sub
data16
mov
imul
test
nop
jmp
mov
jnp
out
pop
cmp
mov
fadds
fisubl
add
mov
outsl
mov
std
pop
mov
sarb
leave
pop
jno
xchg
imul
stc
push
xchg
sub
cli
xchg
mov
push
adc
test
xchg
sbb
ss
orb
or
mov
push
add
xor
fidivl
sub
jno
sbb
cmpsb
bnd
sbb
daa
cmp
loop
popa
xchg
popa
aas
sbb
or
xchg
out
cmc
and
scas
pop
data16
insb
mov
and
in
testb
mov
add
and
stc
push
mov
ret
xchg
dec
xlat
jg
push
push
lea
pushf
mov
cmp
mov
out
jl
lods
sti
pop
push
test
xorb
push
insb
gs
mov
fidivrs
push
sub
aam
push
mov
cwtl
push
jl
mov
push
or
rcrl
push
mov
stc
adc
mov
imul
aam
rcrl
adc
xlat
stos
push
orw
insl
ljmp
enter
xchg
pop
xchg
pop
in
push
xlat
pop
sbb
pop
pusha
jecxz
jecxz
ss
mov
scas
push
insb
xchg
mov
rep
cmc
mov
nop
aas
mov
clc
test
jl
pop
pop
pop
in
fisubl
lahf
ja
in
mov
inc
mov
popl
arpl
rcl
andl
mov
add
mov
jge
ljmp
inc
cmp
cwtl
pushf
clc
dec
adc
sbb
jecxz
stc
bound
movsl
xor
dec
inc
repnz
aam
lea
mov
adc
sub
daa
into
cltd
inc
mov
adc
pop
cmpsl
add
inc
inc
sub
repnz
mov
mov
and
jecxz
xor
pop
sub
adc
or
in
pop
cmpsb
and
call
cltd
pop
stos
and
fmuls
dec
scas
pop
mov
std
xor
loope
jg
xchg
into
cmc
xchg
das
xchg
and
leave
jl
lds
mov
ja
mov
repz
add
pusha
mov
sbb
jl
pop
sbb
pop
pop
xor
dec
push
or
inc
xor
pop
arpl
in
enter
sub
adc
scas
out
sub
lcall
cs
inc
pusha
in
inc
in
pop
xorl
arpl
pop
mov
mov
sub
sub
pop
stos
test
add
cmp
push
and
inc
cmc
orl
adc
clc
push
mov
loop
xchg
jo
fnstcw
ret
pop
pop
repnz
iret
pop
dec
jnp
cltd
outsl
call
ljmp
mov
mov
outsl
push
add
mov
movsb
cmp
adc
in
push
cmp
sbb
cmpsl
or
fwait
psubq
aam
pop
dec
jne
adc
test
out
mov
test
dec
incb
ljmp
fiaddl
xchg
mov
rcl
jmp
push
add
sbb
sub
pop
fucom
xchg
adcb
xor
xor
xchg
xor
push
mov
mov
push
gs
loope
mov
sti
out
or
aas
mov
popf
xchg
dec
add
xor
mov
rclb
fists
arpl
repnz
dec
out
aad
mov
fcoms
and
rorb
jl
sub
aaa
loope
push
icebp
sub
jo
push
pop
negb
push
aaa
push
xor
jbe
cmpsb
fistpl
das
addb
iret
bound
into
in
push
das
push
sbb
sub
sbb
mov
lock
sub
mov
shl
inc
add
into
lea
pop
or
jg
fcomps
pusha
adc
or
fs
cmpsl
adc
test
sbb
dec
xor
jae
out
mov
lock
adc
and
inc
mov
mov
mov
xlat
imul
jno
in
push
jae
or
imul
or
insl
lret
cmc
push
mov
sbb
aam
in
mov
or
stc
outsl
mov
popa
mov
sarl
sbb
sarb
xchg
ret
jb
dec
xor
sbbb
pop
in
pop
jb
xchg
sub
loopne
xor
xchg
mov
outsl
mov
ds
iret
jns
adc
inc
add
dec
scas
clc
jnp
dec
lahf
mov
jecxz
jecxz
cld
adc
es
xor
mov
subps
or
lods
out
sbb
ret
cmp
in
jmp
rcl
out
stc
dec
insl
sub
mov
xchg
stos
rcrl
mov
push
test
push
mov
icebp
sub
mov
andl
inc
add
inc
bound
insl
and
lret
in
incb
rorb
fwait
in
add
das
mov
fucomip
addl
or
repnz
xor
cwtl
cmp
xchg
xor
mov
xor
cld
cmp
add
enter
add
pop
add
mov
mov
es
pusha
mov
xlat
dec
inc
push
and
orl
gs
cmp
dec
lds
sti
push
mov
jb
mov
rorl
repz
insl
and
or
lods
xchg
and
mov
cmp
enter
mov
icebp
and
notb
lahf
jb
enter
mov
mov
lea
out
push
dec
out
sti
fisttpll
out
adc
mov
test
test
sbb
in
sbb
sub
and
add
jo
mov
inc
test
shlb
mov
dec
icebp
call
pop
jecxz
xchg
ds
mov
mov
cmpsb
push
or
lock
and
in
ljmp
ret
push
cmp
dec
cltd
cli
sub
pop
or
push
or
push
lret
bound
push
in
push
sub
adc
jle
xor
xchg
pop
dec
ds
cltd
dec
loope
in
adc
sub
stos
push
hlt
add
or
pop
int3
aas
add
sahf
pop
inc
pop
push
cs
movsl
mov
gs
inc
dec
xchg
ljmp
out
cmp
ss
add
push
fcoms
fidivrl
call
xchg
and
andl
shl
cmp
outsb
jecxz
ja
lret
bound
insl
mov
or
cmc
mov
inc
js
inc
ds
enter
or
outsb
aad
dec
in
xchg
and
adc
lret
mov
add
pop
cmpsl
lods
pop
sti
leave
repnz
adc
pushf
inc
and
mov
lea
in
fnstsw
leave
data16
ret
js
lcall
int
andl
pop
pushf
pop
mov
shll
bsf
pop
push
jmp
stos
adc
fdivrs
or
inc
cmp
push
and
mov
insb
lods
mov
fcmovne
out
pusha
int
int
dec
aam
in
pushf
sbb
mov
cmp
push
sbb
lock
pop
adcb
enter
pop
jns
fdivrs
and
mov
outsb
in
repz
mov
jb
enter
push
jge
jns
popa
push
sub
aaa
dec
addr16
sahf
mov
sub
pop
and
int
pop
push
push
aas
push
jmp
adc
stc
push
jno
jle
imul
and
jo
sub
sub
in
mov
test
sub
mul
push
cmp
shl
icebp
add
cli
cmp
mov
sbb
int3
add
fs
sub
outsb
jne
mov
call
scas
inc
fucom
cmp
lret
test
dec
and
adc
and
pop
jecxz
xchg
xor
daa
jge
push
push
stos
lea
bound
and
inc
into
hlt
pop
and
and
inc
and
rcrl
jge
nop
mov
mov
add
fwait
mov
xchg
sub
pop
xor
pop
push
gs
push
or
test
into
inc
sbb
dec
inc
xchg
nop
and
mov
xor
out
vpcmpgtb
cmp
mov
test
ds
mov
hlt
or
jne
test
push
rolb
push
jmp
xorb
frstor
pop
pop
mov
push
mov
ja
mov
dec
jle
or
test
xchg
xor
cs
scas
pop
fsubr
daa
or
add
test
mov
in
xorl
sahf
mov
lock
pop
lock
push
pop
mov
xchg
push
inc
sbb
int3
repnz
mov
mov
lcall
loop
les
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
call
movsb
or
push
das
cmp
sbb
pop
pop
mov
add
sub
sub
mov
mov
mov
sub
push
push
mov
pop
pop
sub
add
xor
sub
push
mov
popl
movzwl
sub
mov
add
movswl
cmp
jne
jmp
hlt
sbb
fidivrs
call
mov
lea
nop
mov
or
cmpsw
push
std
repnz
sar
lahf
in
mov
pop
jmp
cli
stos
or
push
and
jmp
idivl
jns
xor
aam
fsub
ja
aam
lods
cmp
adc
jns
aad
popf
call
inc
shll
inc
pop
push
push
rclw
mov
orl
adc
mov
or
into
arpl
push
mov
je
sub
jp
adc
sub
rorb
ja
pop
add
jl
rclb
jns
pop
cltd
adc
pop
int
int
ret
sbb
mov
xchg
sub
insl
into
sub
repnz
jmp
clc
stos
and
pop
jno
jge
xor
dec
mov
rcl
sbb
hlt
jg
dec
js
cmp
sbb
pop
xchg
fwait
cli
sbb
jle
xor
cs
aad
xor
mov
sub
pop
int3
push
cwtl
xchg
in
loope
sbb
movsb
sbb
xor
call
push
aas
movsb
inc
out
mov
push
mov
dec
sahf
xor
inc
shlb
insl
and
rcl
pop
shll
push
lea
mov
inc
imul
movsb
adc
lock
lods
cmp
inc
imul
aaa
lock
lds
shrl
out
fwait
imul
not
inc
nop
add
lret
sbb
leave
rcl
std
imul
ret
push
stos
test
xchg
call
cmp
xor
or
adc
loop
dec
jno
stc
imul
ret
sarl
push
std
mov
xchg
jb
movsb
pop
mov
jno
push
imulb
aaa
ret
ret
in
push
xchg
ljmp
pop
test
and
add
mov
xchg
pushf
mov
mov
test
arpl
xor
repz
xor
jnp
in
fidivl
filds
std
sbb
xchg
stos
fisubrl
push
jecxz
add
ret
mov
insb
into
in
sbb
into
in
jmp
jmp
sbb
mov
inc
add
xor
int
pop
push
xor
stos
sub
ffree
add
sub
aaa
adc
ret
inc
jl
lods
call
ret
aam
insl
popa
cmp
adc
mov
loope
xchg
jmp
ret
mov
and
xchg
ret
mov
or
sbb
sbb
imul
push
lret
jmp
out
mov
mov
xchg
ffree
mov
dec
btr
pop
repnz
push
movsl
dec
mov
mov
roll
aad
popf
push
xor
xor
add
mov
sbb
push
cmpsl
inc
jmp
sub
add
adc
or
xor
stos
int
xor
iret
ret
and
xor
leave
ret
lcall
roll
add
aaa
leave
ret
leave
add
mov
sub
xor
into
ret
xchg
jns
xor
jo
cmp
repnz
mov
into
ret
fldt
mov
ds
mov
std
add
int
mov
inc
pop
lret
xor
loop
jnp
ffree
jmp
iret
ret
pop
cmp
dec
ficoms
lret
pop
dec
sbb
inc
test
adc
sbb
test
add
ljmp
mov
loop
lahf
ds
out
mov
lea
fldl
xor
loop
xchg
ffree
mov
popa
and
lret
jle,pt
jo
aas
ffree
mov
jl
ret
sbb
and
mov
sub
into
loop
xor
ja
adc
mov
in
mov
xor
ret
ffree
std
lret
dec
dec
push
cmpsb
ret
out
roll
jmp
dec
dec
in
mov
ror
gs
sub
pop
or
jle
dec
dec
in
mov
add
fldl
gs
sub
aas
jne
lock
lock
pop
aaa
lret
cmp
cmp
pop
jle
dec
dec
in
mov
mov
inc
mov
incb
mov
mov
pop
cmp
cmp
pop
jle
dec
dec
in
mov
mov
xchg
ds
mov
pop
cmp
cmp
pop
shrl
dec
in
mov
mov
je
sub
mov
add
fldl
hlt
push
orb
cmp
iret
ret
iret
lock
lock
pop
aaa
jae
pop
cmp
cmp
jp
adc
mov
inc
mov
ret
and
sub
into
mov
fldl
scas
daa
pop
pop
cmp
lret
cmp
and
out
insl
js
stos
sub
sub
add
out
cmp
and
inc
test
mov
fwait
or
leave
xor
ret
fcmovnb
mov
fstl
or
in
mov
roll
mov
in
mov
leave
add
add
pop
mov
push
mov
jl
mov
add
adc
mov
adc
addb
enter
mov
mov
or
das
clc
adc
iret
and
in
mov
sbb
mov
jge
cmpsb
add
pop
out
lret
push
lret
rcll
or
lcall
dec
popf
push
dec
out
sbb
xor
cld
je
lret
iret
xchg
xchg
jecxz
ror
mov
imul
test
dec
out
push
js
adc
mov
ret
ffree
mov
ret
ffree
mov
ret
sub
ret
fcmovnb
mov
add
push
call
or
xor
ret
ffree
mov
ret
nop
test
shll
mov
push
fdivl
push
cmp
lret
ljmp
add
imul
aam
sbb
sar
ret
les
pop
into
out
cmp
mov
or
xor
sbb
fwait
pop
test
jne
pop
movaps
pop
xchg
leave
andl
test
adc
enter
movnti
cmpsb
pop
cmp
ffree
pop
cmp
dec
or
mov
test
cmc
push
sbb
loop
repnz
gs
stc
xor
xor
imul
lahf
add
or
je
mov
test
dec
lret
cmp
out
testl
xor
ss
pop
pop
pusha
mov
xor
loope
shlb
out
inc
adc
mov
aas
xchg
jmp
js
or
jge
pop
jle
jnp
xchg
bound
pop
pop
xchg
push
aam
clc
sub
dec
mov
xor
clc
fsubrs
lret
lcall
mov
scas
sub
or
lret
ljmp
in
sub
bound
scas
push
arpl
and
aad
bound
call
test
cmp
nop
pop
js
push
pop
cmpl
in
pop
shr
in
test
popa
mov
inc
hlt
pushf
jae
int
push
xchg
lods
das
scas
iret
jl
inc
ret
sub
mov
jmp
jp
xor
sbb
pop
setl
pop
mov
test
add
jmp
mov
mov
int3
cmpsb
mov
outsl
dec
repnz
sub
sub
test
inc
int
jg
clc
or
lds
mov
test
sbb
or
rcll
or
in
shrl
xor
jne
pop
ljmp
lods
push
test
mov
insl
sbb
lds
dec
jecxz
jge
mov
xchg
jmp
add
inc
lcall
pop
mov
pop
and
xor
stc
xchg
mov
lcall
aam
clc
mov
scas
mov
cmp
sbb
enter
mov
aam
push
clc
mov
stc
icebp
cltd
xchg
push
or
les
hlt
xor
in
in
mov
mov
clc
dec
inc
repnz
fxch
out
push
push
inc
stos
js
or
cmc
push
in
popa
or
iret
xchg
imul
jg
jo
jnp
outsl
or
scas
add
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
insb
or
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
or
hlt
imul
add
add
or
movq
sbb
or
pop
outsl
or
sub
add
outsl
or
xor
outsl
or
inc
outsb
or
das
outsl
or
dec
outsb
or
aaa
outsl
or
pop
outsb
or
aas
outsl
or
outsb
or
inc
outsl
or
je
or
dec
outsl
or
jg
or
push
outsl
or
mov
add
or
xchg
outsb
or
outsl
or
mov
outsl
or
stos
outsb
or
ja
or
mov
or
jg
or
ret
add
add
add
outsb
or
outsl
or
fsubrl
add
add
add
outsb
or
lahf
outsl
or
cmc
outsb
or
cmpsl
outsl
or
add
add
add
add
jb
fs
insb
add
popa
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
outsb
imul
insb
add
imul
fs
insb
add
xor
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
outsb
insl
insl
cs
insb
add
gs
xor
fs
insb
add
outsl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
outsl
or
add
add
fisubrl
add
add
add
outsl
or
add
add
sti
outsl
or
add
add
adc
add
add
add
jo
add
add
add
jo
add
add
add
or
add
add
pop
jo
add
add
add
or
add
add
jl
or
add
add
mov
add
add
add
add
add
add
add
add
aam
or
add
add
in
or
add
add
divl
add
add
add
jno
add
add
add
jno
add
add
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
gs
arpl
imul
add
dec
outsb
je
jb
gs
gs
fs
imul
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
push
inc
dec
outsl
arpl
add
push
gs
jb
inc
jbe
outsb
je
add
add
jb
popa
insb
imul
arpl
add
jbe
dec
jne
push
jb
je
add
add
je
gs
outsl
popa
jb
push
jns
add
add
inc
inc
insb
gs
outsb
jne
add
add
gs
je
push
imul
inc
add
add
popa
addr16
imul
dec
arpl
push
imul
je
jb
push
gs
imul
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
jmp
add
lahf
aad
aas
out
add
add
add
jnp
test
cli
sti
or
pop
xchg
mov
xor
sub
sarl
lret
leave
sub
jge
test
shll
addps
shll
ds
jne,pn
insb
jae
ljmp
xchg
nop
mov
sub
out
and
fidivs
push
jbe
xchg
testb
xchg
and
outsl
imull
and
imul
out
cmp
test
pop
in
iret
or
insb
jae
pop
xchg
aam
add
jp
mov
or
dec
int
cmc
push
ss
movsb
pop
test
out
sahf
pop
add
fsubl
les
iret
xchg
mov
sar
loopne
mov
adc
rcrb
pop
rcrb
mov
ja
jecxz
movsb
gs
arpl
mov
xor
dec
shlb
jge
lret
xorl
imul
dec
mov
push
push
call
mov
and
adc
push
or
push
jb
daa
xchg
out
je,pt
or
roll
cmpsb
xchg
pop
mov
fisttps
fistps
bnd
push
pusha
xchg
jnp
lcall
dec
jne
addl
mov
lods
adc
cltd
push
int
push
shlb
mov
mov
sub
dec
jl
pop
ss
sbbl
or
inc
push
jecxz
nop
lcall
jbe
or
nop
push
and
in
repz
push
repz
and
cmp
sub
and
aam
mov
mov
fwait
and
inc
inc
jne
loopne
jmp
adc
leave
fistl
sti
cld
dec
xchg
popf
sbb
xchg
xchg
mov
shl
add
subl
inc
mov
lods
adc
or
out
push
std
leave
mov
xor
pop
inc
sbb
in
in
outsl
fidivs
cwtl
mov
popa
mov
ret
xchg
leave
jl
sub
push
cld
ja
out
cmp
fdivrs
gs
lret
cmc
mull
adc
jecxz
mov
sti
cmp
movsl
mov
mov
mov
mov
mov
nop
cmpsb
pusha
pop
ds
sbb
cmp
ss
push
vmxoff
mov
jmp
mov
xlat
xchg
fsub
cld
xchg
insb
mov
cwtl
and
inc
out
cs
jle
stos
test
sbb
insl
aad
sbb
lret
sub
outsl
sbb
jmp
test
loop
lret
push
and
mov
mov
adc
cmp
pop
or
gs
push
xchg
popf
jp
jb
xchg
fwait
jecxz
add
in
cli
and
jle
cmp
inc
out
imul
fldenv
cmpsl
push
rclb
jne
cmp
mov
xchg
test
mov
push
jno
int3
add
inc
push
loope
or
sbb
xchg
in
xchg
clc
mov
sbb
pusha
fs
add
push
push
mov
push
pushf
mov
fisttpll
out
pop
rol
xorb
in
sub
pop
inc
dec
pop
push
push
out
popf
mov
insl
add
cmp
add
in
movb
out
cs
arpl
dec
pop
cmp
add
or
cmp
je
xchg
jecxz
scas
pop
ficoml
or
cmp
into
popa
xchg
sbbl
repnz
fdivrl
inc
adc
dec
xchg
cmp
pop
jecxz
and
pop
inc
add
cwtl
movswl
lahf
sbb
stc
jecxz
scas
mov
cld
mov
pop
push
lock
hlt
sub
xor
test
xchg
fsubrs
dec
mov
xchg
cli
lock
xchg
stos
pop
fisttps
pusha
data16
sbbb
pop
repnz
outsb
lock
hlt
shrl
nop
notl
mov
jecxz
pop
ret
xlat
insl
xor
jp
sub
pop
ret
pop
sbb
jae
mov
outsl
dec
lahf
push
shll
call
push
mov
xchg
inc
test
daa
sub
jbe
das
aas
ss
pusha
jl
call
nop
rorb
mov
adc
das
jae
adc
js
inc
cltd
call
loopne
and
pop
cvtdq2ps
mov
inc
push
lods
hlt
das
jb
xor
fildl
sti
stos
mov
mov
mov
xor
repz
pop
je
fsubl
jecxz
jb
and
sbb
or
les
imul
mov
and
or
push
adc
repz
mov
lea
adc
add
fimuls
jmp
cmp
sub
or
rorb
push
add
xchg
xor
ja
sbb
dec
mov
int
mov
pop
enter
xor
add
pop
ljmp
push
add
in
or
mov
aaa
cld
jp
mov
dec
cmp
mov
mov
enter
lret
pop
inc
push
jl
sti
movsl
out
adc
jg
cmpsl
pusha
adc
pop
test
scas
ja
or
xchg
shrl
xchg
adc
mov
out
rorl
dec
imul
les
shlb
jp
daa
cmp
aaa
pop
sti
xor
adc
imul
or
ret
sub
jno
outsb
mov
pop
test
lcall
and
in
mov
lock
loop
ja
js
inc
xchg
movsb
cmpsb
sub
inc
lcall
xchg
flds
xchg
inc
jnp
or
mov
les
in
or
sbb
aad
icebp
repnz
aad
dec
pop
jmp
mov
fisubl
mov
insb
addb
xor
mov
mov
outsl
xchg
add
notl
aam
push
loope
mov
mov
sbb
in
and
sarl
scas
out
out
stc
pop
fistps
inc
pop
les
arpl
lea
bound
push
push
ret
scas
scas
add
into
in
cmp
xlat
pop
mul
movsl
int
orl
pop
xchg
icebp
js
cmc
loopne
cmp
lret
ret
enter
sub
cmp
cmc
push
scas
popf
pop
mov
enter
push
pop
cwtl
pop
cltd
les
enter
in
jno
dec
cmp
leave
outsb
scas
sub
rcr
addb
incb
lcall
and
inc
rcrb
jae
divl
lahf
push
ret
or
mov
pop
mov
clc
stos
xchg
leave
addl
outsl
jnp
shrl
add
je
mov
jle
aaa
sub
rcrb
jmp
adc
mov
sub
ljmp
ljmp
in
mov
inc
fsubrs
add
js
cmpsb
dec
lods
test
mov
pop
pop
jns
aad
jns
or
aam
in
sub
push
int
jecxz
sub
test
lods
rorl
mov
add
mov
adc
cwtl
mov
test
jno
loop
fs
push
imul
and
ret
sub
arpl
rclb
jae
in
hlt
and
push
cmpsl
push
insl
push
dec
pop
cltd
jge
dec
popa
sbb
jno
push
lret
xchg
test
insl
mov
addb
popf
add
or
mov
mov
push
push
jnp
push
cmp
pop
cwtl
mov
cmpsl
lods
mov
cltd
jg
cmp
fisubrs
fbld
adc
pop
bound
call
inc
movsb
maskmovq
nop
pushf
inc
cmp
mov
mov
addr16
cmp
sub
jge
hlt
cmc
dec
in
pop
jae
jge
mov
out
call
xlat
aaa
int3
inc
xor
popf
in
stos
sub
iret
or
or
and
push
movsb
jae
push
pop
push
xlat
mov
popf
push
flds
sbb
jge
sti
inc
sub
scas
mov
push
call
push
push
and
inc
mov
jne
inc
in
pop
and
fdivrs
xor
repnz
adc
sti
mov
negl
mov
sbb
sahf
js
jne
inc
pop
mov
or
lds
push
aaa
aas
push
and
add
fistpll
movsl
xchg
cmp
iret
mov
addr16
xor
insb
lea
and
insb
into
xchg
push
lock
xorb
sbb
or
fistpll
mull
add
mov
es
xchg
inc
jl
sar
mov
insb
mov
in
shlb
jl
loope
cmpsl
add
xor
jg
and
movsb
cmpb
fimuls
jb
es
loop
outsl
call
aad
out
incb
mov
xor
sbb
xor
mov
adc
push
sbb
stos
mov
out
xchg
mov
sbb
jp
jle
cs
addr16
in
jne
fldenv
sbb
push
push
cmp
cmp
dec
jae
mov
stc
sbb
int3
arpl
lds
jb
lahf
stos
xchg
stc
jae
insb
ja
sbb
mov
out
mov
cwtl
push
ds
fmul
pop
mov
push
inc
add
arpl
xor
sbb
jb
push
xchg
push
inc
out
int
dec
sub
xchg
inc
push
movsl
pushfw
add
jp
jne
orl
push
mov
pushl
pusha
test
xchg
mov
sub
daa
cmp
dec
push
mov
hlt
test
mulb
scas
mov
lods
test
repnz
inc
mov
mov
adc
ds
jo
xor
stos
jle
or
adc
jns
enter
sub
push
aaa
movsb
inc
push
adcl
mov
sub
adc
push
pop
aas
jb
cmpsb
push
or
xor
js
nop
pop
inc
enter
sahf
add
inc
or
lods
stc
push
aas
pop
xchg
cwtl
insb
or
pop
stos
out
cmp
loope
pop
mov
popf
cmp
jae
jmp
aam
mov
or
mov
aad
pop
sub
or
pop
sub
push
negl
rcr
lret
push
out
aaa
dec
call
mov
aaa
jb
test
mov
mov
mov
push
or
jae
xchg
addr16
sub
cmp
pop
jge
add
xor
lahf
or
fbstp
out
das
addr16
pop
adc
adc
sbb
push
ss
sub
mov
cltd
inc
icebp
shll
push
fcoml
push
mov
inc
push
sub
fidivrs
test
adc
lea
sub
dec
xor
sbb
sbb
jge
cmp
mov
xchg
out
jns
xchg
sub
sbb
xchg
leave
or
mov
pushf
into
inc
lahf
add
cmpsl
jl
test
js
sbb
test
sub
pop
fistpll
inc
mov
cmp
xor
outsb
cwtl
testb
pop
dec
add
xchg
icebp
inc
push
test
or
adcb
std
aad
mov
bnd
sub
leave
imul
adc
sbb
pop
push
inc
es
dec
cmc
call
test
btsl
iret
out
repz
insb
or
add
lret
es
xorb
lods
sarb
fidivs
adc
jbe
pop
push
scas
ds
push
or
fnstenv
cmp
into
mov
sbb
sub
out
xchg
negb
adc
in
dec
scas
pushf
nop
jo
inc
lock
adc
mov
cmp
jge
das
jno
imul
xor
shlb
lea
xor
cmp
xchg
call
mov
pop
push
jbe
mov
mov
mov
cli
divl
push
in
lcall
or
xchg
and
xlat
rolb
xor
daa
xchg
repz
mov
bound
ljmp
sbb
out
mov
cwtl
fsubrs
insb
push
xchg
jle
das
out
bound
cmp
pop
fnstenv
jl
outsb
jp
inc
mov
and
std
fsubs
push
fxch
cli
cmp
gs
dec
ja
fdivrp
int3
fstpl
lods
stos
adc
push
aaa
leave
ja
pop
int3
adc
movsb
jge
lods
stos
imull
lret
fidivrs
push
cmpsl
mov
ss
ficoml
sub
sub
aam
subl
insl
sub
sbb
lret
fwait
mov
jle
mov
xor
ja
xchg
pop
push
sub
inc
test
les
fnstenv
push
jecxz
adcb
leave
pop
cmp
lock
sbb
push
in
sbb
and
sbbl
fisttpll
xor
fwait
dec
cmc
aam
pop
lea
push
mov
fisubrs
xor
scas
popf
outsb
adc
xlat
idivb
cmp
adc
add
xchg
push
rorb
fldenv
sar
xchg
jbe
cmpb
fwait
jl
bound
dec
jg
lods
pop
xchg
shlb
std
scas
push
movsb
outsl
push
lods
add
loop
pop
shlb
mov
jb
xchg
cmpsl
inc
js
jmp
mov
add
lods
in
xchg
mov
sbb
dec
and
adc
aaa
popf
nop
lret
jnp
adc
xchg
stos
dec
es
test
rol
push
insb
pushf
rclb
bound
hlt
movsb
fstpt
and
nop
jecxz
out
adc
mov
adc
rcrb
cmp
test
cmp
add
jl
xchg
xchg
mov
imul
cmc
pop
xor
or
xchg
adc
xchg
scas
xor
test
sbb
mov
out
hlt
out
test
xor
leave
jl
maskmovq
negl
stos
fimuls
mov
insl
jbe
bound
push
mov
cltd
daa
rolb
arpl
ja
rorb
dec
mov
or
xchg
push
test
in
mov
aaa
fnstcw
leave
pop
cmpsb
xchg
lds
inc
or
jl
adc
insl
pop
push
and
push
xchg
add
fwait
popf
cmpsl
shrl
pop
sbb
stos
jb
pop
fadds
fstpl
push
push
loope
pop
inc
sub
sub
xchg
add
jno
pushl
int
orl
adc
jg
cwtl
sbb
push
pop
mov
insl
jne
cwtl
dec
sti
cmp
dec
movsl
divl
aad
sets
mov
sbb
jecxz
push
xchg
mov
in
popa
test
cmpsb
and
in
jge
mov
sbb
orb
sub
xor
sahf
iret
in
std
test
mov
in
les
dec
pushf
sbb
cmp
sbb
inc
out
fwait
sbb
mov
xchg
pushf
fistps
xchg
mov
ds
dec
notb
je
sub
insb
mov
mov
pusha
sahf
xchg
inc
add
mov
pop
add
adc
inc
pop
sbb
iret
mov
fnstsw
jne
lods
movsb
addr16
scas
dec
mov
sbb
sti
dec
mov
sbb
cmp
shlb
mov
sbb
ljmp
jmp
repnz
jne
insb
leave
adc
inc
mov
jmp
mov
cmpsb
dec
lock
iret
and
test
push
or
mov
ljmp
add
orb
rclb
cmpsl
push
in
pop
mov
xchg
or
push
xchg
jnp
and
dec
ret
int3
shlb
xorl
test
out
add
jbe
test
push
jle
int3
jae
mov
jnp
es
inc
dec
and
adc
xchg
cs
pop
fwait
mov
sub
jge
add
dec
inc
xlat
lock
mov
test
add
push
fadds
into
mov
cmpsb
loop
out
mov
push
mov
adc
pop
or
fs
xchg
inc
push
stos
cmp
aad
sarb
stc
sub
aam
push
test
leave
test
movsb
xor
ljmp
in
adc
xor
jecxz
lret
mov
xchg
sbb
jae
dec
cmp
inc
sbb
ss
xlat
shrl
sub
xor
xchg
mov
mov
int
or
cmp
shl
bound
mov
jp
mov
xor
mov
xchg
jo
cmp
xor
adc
and
sar
sbb
jecxz
stc
in
mov
cmc
addl
mov
and
bound
psubb
sub
mov
and
and
push
loopne
push
jp
in
xchg
push
out
pop
push
sbb
out
pop
jle
xchg
dec
rorb
rcrl
xlat
es
xor
jecxz
jne
jnp
adc
fadds
fidivl
out
mov
pop
cmp
cmp
pop
stc
xor
pop
fiadds
lahf
jge
int3
cmc
mov
fisttps
adc
shrb
outsb
jbe
aad
pop
dec
lea
repnz
jno
push
adc
int
jmp
dec
movl
mov
cmpl
clc
xchg
test
in
fimuls
iret
popa
add
pop
sub
push
sarl
jle
cmpb
lods
mov
inc
loop
jns
sbb
imul
mov
xchg
or
scas
fwait
scas
push
imul
dec
outsb
popf
mov
outsb
mov
in
push
into
fwait
pop
icebp
dec
xor
nop
mov
mov
xchg
push
int
jl
daa
lret
lock
jns
jmp
xor
dec
cmp
cwtl
xchg
out
std
dec
lock
das
cmp
popa
push
icebp
pop
shll
mov
int3
jg
mov
stos
push
dec
pop
push
cmp
jnp
das
arpl
fwait
iret
pop
sub
stos
or
fcompl
mov
movsb
cld
pand
into
mov
mov
fistpl
adc
cmp
xor
daa
inc
xor
ja
fidivrs
mov
stos
rolb
inc
add
in
sub
inc
bound
cmc
jmp
dec
test
inc
mov
loopne
jb
xchg
fld1
or
cmp
in
mov
mov
fidivl
mov
es
js
shrl
cwtl
imul
mov
push
push
mov
imul
pushf
dec
sbb
rclb
loope
fdivr
xchg
ja
out
jb
xor
inc
adc
ret
lods
jg
stos
mov
jmp
mov
jp
inc
xlat
test
in
mov
add
mov
pop
inc
test
lds
mov
arpl
aad
out
mov
sbb
ret
addr16
adc
cld
int3
push
dec
das
sub
push
pop
dec
add
adc
pop
xchg
call
enter
pop
inc
inc
mov
cmp
test
dec
aas
das
outsb
andb
cmp
lods
mov
xor
inc
clc
or
jbe
outsb
in
addr16
in
push
jne
xchg
cmp
adc
enter
out
sub
pop
mov
stc
loop
sti
fstpt
test
cmp
bound
ss
pushf
lds
xor
imul
fstps
push
xchg
scas
and
call
outsb
pop
leave
xlat
xchg
std
outsl
push
cmpsl
inc
and
cltd
xchg
scas
sti
pushf
or
mov
mov
mov
and
or
mov
andl
inc
imul
or
std
add
frstor
adc
xchg
repnz
fnstcw
jmp
mov
idivb
or
xchg
dec
pop
das
sub
repz
lahf
xchg
ret
xor
xchg
cmp
lods
fsubl
push
cmp
fucomip
xlat
addr16
cmp
jg
mov
mov
jp
mov
mov
jecxz
cmp
cmc
rorl
push
or
push
iret
shll
ret
inc
and
sbb
cmp
push
pop
xchg
lret
aaa
out
cli
cmp
call
cltd
fsub
or
xor
inc
add
or
mov
sti
mov
sub
clc
out
ds
fstpt
aam
repnz
xchg
cltd
insl
mov
hlt
aam
gs
lret
lods
mov
lods
pop
mov
dec
mov
fisttps
mul
adc
fldcw
pop
push
mov
lods
add
and
and
inc
test
dec
stos
xor
xor
fwait
and
loope
sub
jnp
movsl
cmp
mov
lods
or
sub
arpl
scas
dec
pop
loope
leave
js
addr16
nop
roll
mov
or
icebp
adc
lds
fnsave
sbb
cs
std
js
subb
into
pop
mov
lcall
add
out
mov
fistpl
and
sbb
sbb
fdivs
ljmp
rclb
and
push
adc
pop
sub
cmc
jns
scas
pop
jno
cmp
sbb
xchg
xor
xchg
int
mov
subps
out
insb
adc
test
pxor
xchg
dec
jb
lcall
adc
inc
pop
outsb
fistpl
cmc
aas
dec
clc
inc
mov
and
jecxz
inc
loop
pop
dec
pusha
push
cmp
pop
shrb
xchg
or
pop
jno
sub
pop
mov
adcb
jne
stos
fisttpl
out
dec
cwtl
sub
cwtl
jo
jg
pop
sahf
ret
pop
cld
mov
cmp
test
add
shlb
mov
sbb
cmp
into
cltd
sbb
je
sahf
add
shll
ret
in
sahf
test
pop
push
xor
xchg
dec
jo
and
adc
adc
cwtl
aad
jb
mov
and
faddl
jl
fcmovnb
loopne
stos
pop
in
ljmp
mov
leave
pop
cli
sub
push
mov
push
push
cmp
dec
pop
fwait
cwtl
pop
mov
sub
js
cwtl
in
icebp
pop
inc
scas
into
inc
sbb
sub
or
push
mov
std
push
mov
test
and
adc
and
adc
sub
inc
lds
and
pusha
shl
pop
mov
sub
cmp
mov
repnz
lret
repz
fwait
dec
cltd
fs
cmp
lods
cmp
fists
lahf
mov
dec
arpl
cli
pop
jnp
clc
pop
jecxz
adc
scas
push
shlb
push
movb
int3
nop
cmpl
or
ljmp
inc
mov
pop
dec
mov
or
nop
push
mov
data16
inc
std
frstor
and
sbb
arpl
adc
popf
filds
mov
sbb
adc
jnp
cmp
mov
or
sub
sbb
push
in
loopne
add
mov
inc
stc
test
push
dec
lea
push
jg
inc
icebp
jnp
or
push
push
pop
jo
xchg
lds
mov
int
popa
mov
ss
out
or
xor
incb
dec
cmpsl
inc
scas
loope
les
push
mov
scas
and
lcall
movsl
clc
cltd
jg
sub
cli
mov
jl
rorl
shl
roll
lcall
sbb
jp
adc
fldl
std
loop
sbb
inc
xor
jecxz
rcl
imul
int
adc
jae
cmp
pop
subl
mov
dec
pushf
push
pop
sbb
xchg
bound
movsl
cld
jmp
prefetch
addr16
pop
mov
repz
not
les
mov
sbb
and
fisttps
jno
scas
pop
add
mov
mov
outsl
daa
cmpsb
sub
pop
mov
fistps
out
pop
jbe
rcll
into
mov
aad
push
lret
ret
push
lea
stos
shrl
mov
mov
pushf
aaa
icebp
lret
xor
outsb
fsts
pop
or
xor
sbb
aam
cmp
xor
inc
sub
sbb
pop
mov
out
cltd
dec
dec
in
stc
hlt
pop
lahf
lds
push
out
je
out
jmp
clc
cmp
mov
roll
jns
and
cmovb
sub
in
jmp
xchg
out
cmp
popf
jb
adc
inc
lcall
inc
and
mov
sub
rcrl
ret
dec
dec
add
jnp
mov
push
dec
movsl
cmp
sub
out
cmp
xchg
dec
loopne
in
pushf
bound
je
subb
rorb
rcrl
adc
push
lcall
orb
or
mov
jmp
cmp
stos
mov
mov
pop
ss
cwtl
mov
and
icebp
cmp
jns
mov
cmp
jge
nop
inc
sbb
push
dec
adc
lock
mov
sbb
stos
sbb
push
pusha
dec
dec
or
hlt
outsl
lahf
adc
push
aad
cmpsb
adc
ljmp
loopne
fwait
xchg
addr16
push
jl
and
dec
mov
mov
fisttpll
outsl
out
fdiv
add
into
sbbb
xor
xchg
or
mov
mov
jae
mov
sbb
push
lcall
sbb
mov
sbb
inc
pop
divl
pop
adc
or
js
jg
xchg
xor
fsubp
fstpl
cmp
aad
mov
mov
mov
adc
sarl
int3
mov
mov
stos
xchg
aaa
imul
jge
jno
push
adc
lods
in
mov
xchg
push
and
jge
push
add
jae
in
imul
push
and
inc
into
fildl
mov
test
xor
outsl
call
cwtl
jb
test
fsts
jns
mov
sbb
cmpsl
dec
push
mov
sbb
sahf
rcr
add
shr
nop
stos
jnp
cmp
lds
xor
lcall
mov
jne
int3
das
push
pop
and
sti
inc
fisubrs
adc
cmp
leave
or
mov
jne
add
icebp
iret
mov
inc
mov
push
sub
in
mov
dec
mov
repz
cmp
jo
pop
aaa
das
pop
mov
out
pop
jmp
sti
sub
data16
jle
or
ja
cmp
sahf
std
sbbb
das
jns
sbb
ret
mov
ja
adc
mov
inc
les
push
cmp
cltd
in
sarl
stc
xchg
repz
je
lods
cld
pop
cmp
push
jno
xchg
or
adc
sbb
jg
push
add
pop
add
lret
add
test
shll
inc
mov
popa
jg
stc
and
jne
or
dec
icebp
lock
add
fistpll
xorw
popf
mov
push
test
add
xchg
push
xor
mov
mov
lods
cwtl
cltd
cmp
sub
cmp
xor
adc
lret
jmp
xchg
imul
jbe
mov
xchg
lods
push
push
or
pop
adc
xchg
mov
adc
fwait
dec
adcl
fdivrl
cs
stos
cli
test
pop
pop
je
in
mov
fidivs
add
das
aam
cmp
add
or
incb
test
and
dec
int3
jmp
xchg
sbb
mov
and
les
mov
pop
stc
cmp
adc
nop
dec
inc
jb
xchg
push
sbb
mov
or
mov
jns
jge
lahf
push
loop
mov
sarl
dec
jae
dec
pop
stc
mov
in
popf
cwtl
les
add
enter
cmc
nop
bound
jo
jmp
movsb
push
sbb
jno
gs
mov
scas
int
or
mov
fsts
aad
sub
enter
lock
popf
test
inc
addr16
bound
xchg
hlt
stos
jno
and
ss
jle
inc
xchg
repz
test
adc
xor
mov
sbb
jge
lahf
int3
adc
jp
mov
adc
adc
sub
xor
xchg
ret
adc
and
add
cmp
mov
fadds
adc
adc
jns
push
into
pop
scas
dec
pushf
loop
sahf
cmp
inc
pop
sbb
push
test
aad
pushf
xchg
shll
jge
enter
nop
or
imul
in
or
inc
fdivrs
leave
js
fs
ja
jg
push
rcll
dec
cltd
mov
mov
fwait
dec
pop
sub
pop
cmp
cmp
out
push
jns
adc
xor
mov
xchg
mov
outsl
daa
cmc
jne
dec
shl
push
out
mov
mov
jle
popf
shlb
sbb
je
cmpsb
aad
xor
inc
jl
iret
sbb
mov
loopne
imul
sbbl
imul
jp
xlat
cmp
push
push
adc
push
lcall
mov
ret
mov
pusha
lcall
mov
cmpl
and
cli
pop
test
push
popf
sbb
inc
sub
rolb
les
dec
pop
popa
es
pop
repz
sahf
cs
out
faddl
mov
mov
mov
push
dec
xor
sub
xor
dec
xorl
xlat
pop
push
popf
lods
fdivs
mov
jmp
mov
xchg
cmp
add
fdivrl
sti
addb
inc
imull
nop
fsubrs
mov
lret
mov
mov
push
sub
clc
int3
and
decb
inc
adc
imul
xor
scas
jne
int
pop
loopne
adc
adc
and
ss
hlt
jbe
aaa
pop
mov
dec
sar
clc
mov
popa
mov
jne
pushf
jns
lock
decl
je
add
das
pop
cs
ds
mov
test
dec
or
add
inc
mov
loop
mov
test
or
fisubrs
and
dec
cwtl
cwtl
mov
cmc
lock
stos
jno
push
cmp
push
sub
pop
lcall
sti
mov
out
jo
stos
or
aaa
cltd
xor
adc
jb
sbb
fwait
dec
cwtl
iret
pop
sbb
push
mov
faddl
iret
fcomps
mov
cltd
inc
cmp
mov
aas
jp
in
mov
sbb
fwait
cmp
xor
sahf
dec
negb
xchg
stc
cs
pop
sbb
test
dec
push
shrl
jmp
adc
pop
dec
mov
xorb
jbe
jmp
sub
sub
mov
push
xorl
jne
dec
aad
scas
mov
push
add
int
inc
push
nop
inc
and
inc
and
pusha
pop
out
and
push
cs
insb
outsb
mov
or
sbb
inc
lret
shrb
push
outsb
imul
push
lea
xor
cmp
stc
add
lds
and
or
pop
inc
loop
inc
inc
aad
sbb
js
lock
jbe
add
jb
negl
loope
sahf
add
js
dec
lds
pop
lret
xchg
mov
cld
adcb
push
sub
xchg
fstl
jno
test
dec
jbe
sahf
cmp
adc
mov
insl
int
fnstsw
or
rdpmc
and
jmp
xor
mov
pop
mov
mov
and
dec
enter
das
cmp
sub
in
arpl
paddd
push
add
stos
mov
lea
int
adc
pop
mov
out
xor
inc
xchg
xchg
ficompl
push
sbb
xchg
inc
add
adc
iret
and
out
ja
mov
xor
subl
sub
dec
outsl
scas
mov
fwait
sbb
sbb
lcall
ret
adc
repnz
cwtl
add
pop
fs
pop
adcb
or
movsl
mov
cmova
rolb
lods
jb
push
jo,pt
and
inc
stos
rcrb
xchg
out
or
adc
into
mov
jns
negb
xor
dec
in
dec
pop
decl
bnd
aam
or
std
test
scas
sub
add
scas
shlb
inc
inc
addr16
aas
xchg
hlt
hlt
sbb
sub
adc
mov
jmp
inc
xchg
cmpsb
or
jnp
pushf
add
mov
inc
sub
sub
stc
cmpl
addr16
sbb
std
data16
call
adc
das
or
push
jl
dec
mov
les
jge
lock
pop
addr16
push
sbb
mov
mov
mov
loopne
push
leave
mov
pop
xchg
push
bound
or
lock
jg
sub
pop
fldl
cmp
lret
sub
maskmovq
sbb
pop
jae
push
lock
clts
jno
xor
or
jmp
jo
popa
mov
jne
push
arpl
out
xchg
in
cmp
out
xor
mov
test
add
cmp
mov
mov
decb
mov
sbb
mov
mov
jp
push
mov
pop
xchg
xor
jnp
out
mov
cmpsb
mov
mov
mov
sbb
jl
mov
push
sbb
ss
std
pop
mov
js
sub
popf
mov
stc
in
arpl
or
sub
sti
movsl
xchg
and
out
push
sub
inc
leave
jge
pop
xchg
sahf
lret
testb
idivl
push
leave
in
outsl
mov
es
popf
lods
pop
into
jp
sbb
rcrb
js
hlt
jecxz
pop
or
lock
jbe
mov
fsubrl
push
sbb
call
shrl
push
pop
add
xchg
in
dec
sub
scas
test
add
pushf
or
decl
test
insb
lret
in
dec
popl
insb
or
lcall
push
jg
jns
out
dec
insb
fld
gs
xchg
jns
imul
push
adc
nop
and
xorb
cmp
pop
das
xor
dec
sahf
mov
dec
add
mov
push
std
fdivrl
cli
les
push
sub
xorb
imul
xchg
clc
dec
push
mov
xchg
hlt
test
push
adc
adc
ja
arpl
rcll
mov
les
push
int3
mov
mov
leave
sbbl
test
add
lds
imul
mov
faddp
adc
out
sarb
bound
and
xchg
or
mov
push
subl
xchg
inc
out
in
mulb
sbb
lret
loope
sub
sub
stos
test
jno
aas
xor
in
out
pop
rol
fisubrs
lret
dec
jb
dec
out
outsl
in
rcrl
adc
aas
jl
push
int
inc
sub
mov
cmovg
pop
addr16
mov
xchg
cmp
insb
cmpl
ljmp
pop
test
cs
fwait
sub
jne
xor
push
adc
xchg
pop
xchg
pop
dec
jnp
sbb
roll
adc
push
repnz
dec
insb
pop
cld
pop
xor
lea
xor
inc
adc
and
popa
xor
mov
je
xchg
repz
mov
leave
lds
call
fcomip
scas
mov
jge
enter
je
sub
cs
inc
cmp
pop
dec
jbe
jecxz
stos
fs
inc
repz
mov
rorl
imul
mov
sub
aam
xor
xchg
repnz
push
jmp
lret
cmpsl
mov
cmc
xor
mov
in
addr16
or
repnz
xchg
out
scas
sbb
ret
pop
adc
dec
stos
out
test
sub
sbb
inc
mov
dec
cmp
xchg
xchg
push
push
add
adc
mov
scas
push
xorl
dec
jmp
sbb
push
divb
add
in
and
shlb
sahf
shl
pop
lret
aaa
imul
inc
adc
sbb
pop
lock
neg
sbb
outsb
das
jmp
push
out
or
mov
push
imul
leave
stc
clc
loopne
jg
mov
add
jmp
xor
sahf
sub
jnp
push
sbb
xchg
mov
jns
shr
ret
clc
lds
hlt
push
ljmp
out
push
and
sbb
mov
mov
aaa
aad
pushf
movsb
cs
add
and
mov
repnz
clc
mov
inc
and
lds
mov
fcomip
push
fidivrl
mov
xor
add
scas
lock
lea
jne
xchg
inc
and
int3
xlat
pop
push
mov
pop
inc
sub
cmpsb
testb
bound
xor
sub
fnstsw
fcmovu
jo
movsb
push
dec
ja
adcl
xor
inc
movsb
mov
pop
push
pop
push
jne
pop
xlat
add
and
mov
pop
mov
rcl
or
cmp
jle
add
enter
inc
or
adc
mov
js
jmp
outsb
iret
jge
inc
out
xlat
in
pop
lock
xchg
icebp
test
xchg
stos
pop
push
subb
hlt
cwtl
loope
mov
ds
loope
jo
mov
xchg
fildl
mov
stos
or
mov
inc
xor
xchg
xor
inc
inc
scas
stos
mov
ss
lods
repnz
iret
cmp
cmp
int3
mov
and
push
insl
subl
or
shrl
mov
iret
fs
sbb
pop
mov
adc
aaa
bound
or
frstor
and
xor
mov
pop
arpl
or
pop
dec
mov
or
nop
jl
cmc
loope
sbb
cmp
jg
rorl
movsl
adc
imul
aaa
or
jae
lret
or
movl
cmp
idiv
mov
and
addb
out
loop
push
enter
add
xor
lahf
pop
jne
lcall
or
mov
pop
mov
adc
mov
sarb
sub
sub
sub
xchg
add
in
in
leave
shll
xlat
pop
cltd
arpl
movsl
cltd
ds
pop
jp
xchg
pushf
loop
leave
pop
push
ds
daa
fwait
fs
cltd
sub
test
hlt
ret
popw
gs
scas
inc
push
jae
and
push
mov
inc
dec
push
sbb
xchg
xor
rcrl
sbb
stos
lret
stos
test
or
pop
imul
cmc
sahf
sub
ja
and
cmp
outsl
lahf
sub
add
mov
movsl
test
jnp
sub
sbb
pop
jno
jmp
in
sbb
lret
icebp
inc
and
je
fidivrs
nop
push
dec
mov
jmp
pop
jnp
fmuls
jle
movsl
mov
mov
cli
scas
jnp
or
insl
int
or
and
jbe
cli
popf
std
das
imul
aaa
inc
call
movsl
out
repz
mov
sbb
repz
mov
pusha
jne
repz
add
inc
scas
test
mov
mov
es
call
push
mov
rorl
or
pop
push
sbb
dec
cmp
push
mov
or
lock
or
pushf
xlat
lods
xchg
pop
loope
and
cltd
sub
xchg
xchg
xchg
mov
pop
int
mov
cs
xchg
xor
cltd
insb
sub
xlat
xor
add
cmpsl
outsb
fsubl
std
idiv
adc
call
sub
shll
lcall
out
inc
negb
pop
inc
mov
mov
mov
ficoml
mov
rorb
jge
int3
dec
cli
out
xchg
fnsave
xchg
dec
cld
jg
pop
je
in
push
or
aad
mov
iret
andnps
mov
jl
insl
pop
jbe
outsb
arpl
inc
jmp
mov
jl
sbb
pop
dec
imul
clc
mov
cmp
lcall
in
dec
aas
into
pop
lretw
pop
jne
jp
mov
mov
sub
mov
cwtl
mov
sarl
mov
add
imul
nop
add
out
mov
out
lahf
fs
jg
loope
test
pushf
repz
or
or
or
ljmp
mov
out
icebp
push
or
popf
cmpsl
xlat
jo
xchg
cmp
mov
cltd
adc
enter
or
sbb
int
jl
add
icebp
in
sub
sub
mov
fldenv
jne
sbb
loopw
sti
in
js
or
or
fwait
iret
out
add
jl
and
push
add
pushf
mov
lds
movb
lea
inc
inc
lcall
out
jp
insl
aad
and
mov
ret
rorl
dec
pushf
imull
out
repnz
js
mov
dec
cmp
jle
xchg
mov
and
pusha
mov
and
mulb
out
pop
and
pop
jbe
cmp
fisttps
and
sub
sub
mov
add
cmp
sbb
fdivrs
shl
stos
popa
ss
aam
subl
pop
lock
stos
cltd
dec
icebp
mov
enter
adc
pop
or
mov
xlat
inc
clc
mov
iret
mov
out
in
cmpl
lods
rclb
lock
mov
or
inc
mov
repnz
aaa
lahf
pop
and
sub
mov
cli
lods
lods
sub
push
or
xor
xchg
dec
push
pop
cmp
jecxz
outsl
ss
adc
cmp
loope
arpl
outsl
pop
in
sbb
test
sub
sarb
inc
adc
loope
xlat
gs
aam
imul
mov
popa
shrb
js
addr16
notl
fcmove
into
pop
mov
sbb
int
push
xor
adc
mov
stos
jns
scas
lret
imul
cwtl
stos
push
cmpsl
shlb
mov
call
adc
test
pop
add
fsubl
ds
stos
lahf
js
mov
ljmp
dec
sub
fxch
pop
loopne
lds
xchg
pop
jecxz
sti
mov
xchg
xor
roll
mov
or
adc
inc
mov
cmp
push
int
pop
stos
jns
add
arpl
add
xchg
lret
xchg
loope
imul
sbb
rcr
andb
and
clc
outsl
push
out
shlb
int
jne
sbb
jbe,pt
imul
pop
cs
data16
push
sarb
repz
sahf
shrb
rorb
call
repnz
movsb
mov
andl
loopne
xor
push
fimull
xor
mov
enter
inc
fnstcw
mov
dec
cmp
shll
inc
outsb
mov
and
pop
test
std
int
add
sub
xchg
pusha
bound
inc
jne
cmp
ret
popf
pop
mov
mov
je
jl
lcall
fdiv
pop
push
in
and
aas
leave
outsl
pop
fwait
call
stos
mov
sti
je
push
or
mul
insb
cmp
mov
call
cmp
jae
pusha
mov
cmp
repnz
sarb
xor
cmp
aad
mov
int
nop
and
sub
adc
out
push
les
addr16
mov
insb
pop
push
sub
lret
mov
lea
lahf
std
nop
pop
cmpsb
sub
jp
mov
cmp
fxch
sbb
jl
pop
sbb
sbb
cmc
cmp
mov
sbb
cli
inc
fcoms
cmp
ss
dec
in
in
xor
add
or
cs
adc
fisttpl
and
lock
mov
mov
decb
xchg
stos
hlt
pop
aas
test
jne
dec
insb
mov
pop
gs
jg
adc
in
jnp
xchg
es
xor
out
jnp
sbb
cmc
out
sbb
out
fs
pop
or
xlat
mov
jns
bnd
xorb
inc
int
je
pushf
int3
and
add
lcall
xchg
mov
pop
enter
clc
push
addr16
pushf
daa
sbb
add
lcall
xor
ljmp
loop
jmp
outsb
lds
loope
out
ja
movsl
jns
call
mov
or
mov
sub
xor
mov
dec
cmp
add
lcall
fldenv
lret
push
dec
jle
jl
stc
test
add
dec
divb
mov
cld
ds
or
mov
ret
stc
dec
loope
pop
adc
outsl
ror
call
and
xchg
das
bound
stos
push
cmp
out
clc
stc
stos
dec
mov
inc
aad
mov
push
dec
pop
and
imul
pop
gs
pop
lock
xchg
cmp
xor
in
push
inc
std
mov
inc
inc
dec
push
jb
jecxz
sub
pop
test
pop
test
or
sub
into
inc
or
jne
mov
adc
insl
gs
jbe
push
in
stc
fimuls
push
fbstp
fsubrs
mov
adcl
push
mov
xchg
lret
mov
out
movsb
xchg
push
fistl
ret
mov
pop
aam
jecxz
push
mov
pop
sbb
int3
xchg
mov
lret
pop
mov
ds
icebp
jmp
push
pop
lret
jge
mov
or
movsb
in
cmpsb
jnp
inc
xchg
fstl
inc
mov
pop
jne
xor
repz
dec
push
jg
mov
orl
and
aaa
iret
mov
adc
and
inc
sub
jo
pop
xor
sub
sbb
mov
pop
lret
mov
xchg
push
cwtl
ficompl
fidivrl
pop
inc
jb
mov
pop
or
jg
push
pop
shl
lods
in
cli
jecxz
lock
out
cli
mov
pop
add
mov
lret
or
repnz
add
pop
cmpsb
or
sub
test
push
mov
jns
aad
add
bound
push
clc
xor
fsubrl
movsb
inc
push
fnsave
inc
aam
push
pop
lret
push
and
sahf
sti
and
mov
inc
popa
cs
jmp
add
inc
dec
jle
insb
ja
subb
cmp
sbb
sahf
pop
std
mov
xor
pop
lahf
jl
fldenv
pop
cmpsl
xchg
aad
std
sub
pop
jmp
lods
xor
push
mov
dec
aam
rcl
lahf
stos
scas
push
unpckhps
xchg
movsl
movsl
jp
cmpsl
insb
mov
ret
pop
mov
push
xorl
mov
xlat
pop
clc
xor
pop
mov
mov
sub
bound
loopne
adc
lret
repnz
into
loopne
ss
in
xchg
sbb
fnstenv
mov
adc
mov
push
lea
push
cwtl
fistpl
pusha
leave
jecxz
movsb
and
or
jno
popf
lret
add
imul
outsb
jbe
or
cli
iret
add
inc
call
xchg
lret
dec
shrl
stc
ficoms
xchg
jg
scas
mov
popa
xor
cmc
iret
inc
mov
sbb
and
not
push
mov
ss
cmpsb
sarb
lods
aaa
push
loope
daa
pop
aad
add
and
repz
and
aaa
repnz
jno
cmc
cmp
arpl
icebp
ja
mov
fsubl
rol
push
cmc
xor
repz
iret
push
lock
ror
sub
fcoml
sti
cwtl
push
mov
ds
loop
mov
loopne
add
xchg
sub
movsl
rcrb
ljmp
into
adc
rcrb
negl
mov
bound
push
fistpl
xor
incb
lret
adc
call
divps
jmp
sub
and
or
stc
mov
adc
jns
adc
leave
jmp
dec
imull
je
xchg
hlt
jne
lods
add
cli
int
lahf
lods
add
out
clc
lea
bound
cltd
sti
adc
xor
or
fcoms
pop
mov
cmc
daa
sub
xchg
call
idiv
mov
lret
in
mul
mov
out
lds
scas
dec
insl
mov
xchg
push
push
pop
ds
jl
sti
push
nop
sbbl
jg
mov
int
gs
imul
xchg
add
push
xlat
sbb
movsl
mov
lea
adc
jle
cmp
popl
fistpl
test
loope
repnz
addr16
lret
xor
push
dec
aaa
xchg
pop
lea
sub
mov
pop
sub
cmpsl
and
mov
lock
inc
adc
xchg
insb
cmp
jbe
divl
je
pop
popf
xchg
xchg
mov
push
sahf
sahf
or
scas
mov
dec
pop
mov
jg
aad
adc
ret
push
cli
insb
adc
bound
dec
xor
xchg
int3
sub
mov
push
jo
inc
adc
xorb
arpl
mull
add
clc
adcb
nop
inc
lcall
push
js
push
fs
ret
jp
or
aad
in
pop
loopne
clc
cmc
cltd
testb
mov
jp
xchg
push
inc
fwait
test
or
outsb
mov
mov
mov
mov
aas
jns
add
add
mov
in
out
mov
addr16
cmp
xlat
adc
pop
dec
out
fwait
and
daa
mov
ret
aam
loope
mov
ljmp
inc
push
mull
popf
inc
fisubs
or
lods
sbb
mov
in
imul
inc
std
call
call
or
punpcklbw
into
das
push
mov
inc
ficoml
les
mov
pusha
jecxz
stos
jl
jno
insb
cmp
scas
inc
lods
dec
and
xchg
fimuls
inc
and
adc
adc
mov
repz
cmp
cmpsb
jo
fistpl
in
pop
cmp
fnstsw
mov
mov
out
les
scas
jbe
mov
outsl
pop
hlt
clc
test
shlb
dec
int
jno
fdiv
dec
in
stc
cmp
push
xor
mov
mov
loopne
out
push
mov
cmp
test
clc
fsubs
fnsave
sbb
sahf
pop
mov
push
lret
roll
leave
xchg
divl
lret
xchg
hlt
sub
outsb
test
int3
enter
push
or
push
inc
popf
scas
push
sahf
pusha
lret
cmp
test
inc
xchg
or
stc
sub
cmp
mov
xor
and
data16
sahf
jno
xchg
mov
dec
imul
mov
add
xchg
inc
add
add
ja
negb
xor
jae
pop
sub
femms
lcall
xor
ljmp
adc
lcall
lock
and
xchg
mov
pop
mov
in
insl
or
add
test
insb
gs
cmp
pop
sub
or
sarl
sbb
pop
inc
inc
or
cli
pop
push
lahf
xchg
stos
dec
stos
sahf
outsb
add
addr16
pushf
mov
loop
xor
add
push
push
andb
push
gs
pop
and
sub
out
xor
test
pop
and
push
sarb
xchg
inc
mov
jecxz
jb
jno
lods
lahf
cmpsl
rorb
xchg
push
sub
xchg
shll
pop
lods
ret
mov
pop
gs
dec
mov
in
outsb
das
enter
jecxz
ret
mov
int
call
and
pushf
fcmovnbe
jae
push
iret
lahf
mov
test
sahf
cmp
and
jnp
rcrb
dec
xor
sub
dec
mov
cmp
stos
xchg
out
xor
loope
out
ficomps
sub
jle
push
int
scas
mov
int
sbb
jae
xchg
ret
repnz
add
pop
cmp
jbe
ds
ja
je
shl
xchg
pop
ja
lret
mov
cmc
xchg
aaa
repz
stos
sbb
arpl
pusha
add
cs
data16
dec
repz
lods
push
mov
or
fwait
test
sbb
in
pop
fistpll
inc
mov
and
stc
mov
dec
scas
sub
or
fwait
sti
xchg
pop
dec
dec
mov
jle
ja
loopne
mov
loop
lret
rcrb
decb
dec
aad
xor
adc
sub
in
in
adc
popa
xchg
or
shr
add
sub
jle
stos
xchg
rcrl
mov
fmuls
cmp
and
or
sbb
add
test
xchg
push
popf
dec
add
repz
cmp
dec
jp
shrb
push
jmp
nop
pop
jp
or
sbb
mov
decl
loope
and
cmp
pop
out
pop
out
push
mov
push
out
out
jle
mov
into
jns
mov
push
out
xor
loop
hlt
mov
jnp
ret
add
inc
cmp
cmpsl
leave
mov
fcomip
add
add
mov
sub
adc
add
mov
lock
bound
mov
xchg
rcrl
push
outsb
jl
idivl
mov
out
fidivrl
xchg
cmpsl
push
outsl
pop
rep
icebp
push
xchg
or
lods
negb
jae
cli
xchg
rcr
iret
outsl
popa
jle
insl
add
cltd
pop
sbb
ret
dec
into
lret
jle
mov
cmc
pop
outsb
stos
push
add
inc
insl
test
leave
jns
adcb
lock
popf
jae
jmp
js
pop
lea
mov
pop
jbe
cmp
jns
xor
jo
xorb
cli
jo
mov
leave
mov
lock
sub
mov
loop
jp
pop
sub
add
test
push
imul
rcrl
cmpb
xorl
fnstsw
vmovss
movsb
jg
nop
cmp
inc
push
sub
std
hlt
xor
mov
jp
sub
nop
sub
xlat
test
push
jnp
fdivrs
sub
je
jl
push
imul
jno
ret
sub
mov
push
es
xchg
pop
pop
pushf
inc
sub
push
mov
jb
fs
sub
inc
xchg
shl
sub
pop
dec
jge
les
andl
and
std
and
aas
jg
or
or
les
push
stc
xchg
movsl
popf
lcall
sbb
out
push
mov
pop
arpl
jge
cs
dec
dec
adc
xchg
mov
hlt
xchg
outsl
out
jecxz
dec
push
stos
and
fs
xorb
testl
jns
lahf
push
pusha
jns
sti
mov
xor
aas
fildll
mov
enter
add
jbe
std
andl
jp
loop
adc
or
je
test
aam
lcall
inc
loopne
xor
fsubrl
imul
leave
lds
fildll
jecxz
call
xchg
pop
mov
xor
mov
xchg
and
pop
sub
iret
and
push
test
mov
mov
adc
bound
test
add
clc
mov
popf
je
fildl
and
pop
pop
push
pop
lret
sbb
push
sbb
imul
cli
xchg
xor
and
or
adc
pop
insb
cwtl
cmpsl
sbb
add
and
fld
sub
dec
sbb
in
dec
test
mov
add
rorb
jmp
cmp
push
mov
fwait
or
or
out
sbb
hlt
mov
or
stos
leave
pop
cld
jle
dec
and
subb
mov
push
inc
shrl
pop
rcr
pop
out
mov
inc
mov
mov
pusha
shlb
inc
loop
imul
popf
gs
ficoms
les
pop
adc
mov
sub
mov
leave
xor
imul
mov
call
and
sub
xchg
inc
inc
test
sarb
loopne
scas
dec
mov
push
or
ja
leave
add
sbb
les
je
leave
jae
loope
xor
add
rol
ljmp
xor
lahf
fbstp
inc
cmp
sbb
adc
les
pop
sbb
je
inc
jle
add
xchg
mov
cmpsb
sbbl
mov
mov
lods
js
notl
andl
movl
pop
mov
jp
ret
jne
jecxz
inc
xor
xor
out
icebp
push
xor
call
idivl
lret
imul
aad
sbb
cmpsb
xor
cmp
inc
js
fcomps
and
stc
cmp
arpl
mov
jo
lret
stos
push
lret
push
add
fnstsw
cld
imul
lods
insl
push
push
xchg
ret
bswap
mov
ror
out
insl
rcr
mov
push
cmc
cmpsl
dec
pop
xchg
xor
pop
sbb
sbb
pop
sbb
push
popl
jne
ret
and
je
mov
into
cmpsb
test
mov
add
sub
xchg
push
jl
vhaddps
mov
aad
cmc
and
in
sbb
xchg
or
stc
repnz
fcoml
xlat
and
jge
xchg
jle
cltd
in
icebp
mov
xor
out
int
test
out
popf
ss
cli
into
pop
gs
adc
das
jno
icebp
xlat
bound
cmp
lcall
adc
push
push
mov
inc
in
or
arpl
inc
push
sahf
orb
fbstp
pop
cmp
movsl
xchg
andl
int
mov
stos
mov
outsl
jb
add
popf
xchg
pop
inc
scas
scas
fimull
jb
in
mov
lahf
fldl
jne
xor
aad
add
imul
movsl
out
add
cmpsl
jne
push
cmp
push
pop
fnstcw
xchg
in
push
add
pop
cmp
jb
dec
dec
sbb
xor
call
sbb
in
pop
push
mov
sbb
test
fsubrl
inc
pop
add
inc
or
es
sti
sarb
pop
pop
xor
icebp
stc
repnz
mov
sbb
rcrb
cmp
stos
pop
or
pop
dec
xlat
sub
fdiv
and
cwtl
es
jne
mov
out
and
push
test
fnsave
cmc
push
xchg
mov
mov
push
pop
stos
stos
ljmp
or
cld
inc
pop
sub
in
mov
dec
in
mov
scas
insb
ljmp
xor
scas
js
or
add
or
adc
jae
je
in
mov
lret
rcl
xor
xchg
xchg
icebp
inc
cmp
push
push
cltd
fsubp
lds
addr16
and
jge
xlat
inc
jbe
fsubr
inc
shrb
popa
push
mov
adc
and
xlat
lods
decb
inc
lods
int3
insl
sbb
sbb
dec
ds
in
jle
add
ss
lret
insb
add
sub
pop
mov
sub
loope
mov
sub
orl
js
push
xchg
jns
add
lea
pop
imul
lock
add
inc
pop
adc
or
fnstcw
test
inc
adc
cwtl
mov
pop
icebp
jno
jl
fwait
sub
fistps
xchg
xor
cwtl
scas
dec
std
loop
lds
sub
push
sub
outsl
cmp
cmp
jae
lds
orb
or
mov
xchg
pusha
popf
jne
inc
shl
and
int
sbb
xor
fdivl
aad
decl
ret
ret
pop
lods
daa
pushf
enter
mov
fidivs
pop
out
or
fmuls
pushf
jg
dec
inc
cmp
roll
lock
lods
add
or
push
adc
push
jb
test
push
mov
test
inc
repnz
aam
cmp
test
fs
xlat
jb
inc
jne
lcall
jne
fdivr
aad
mov
sbb
mov
fs
pushl
addl
mov
push
mov
sbb
test
cmpl
gs
test
popf
mov
or
pop
aam
imul
dec
cmp
popa
jmp
mov
loop
xor
xor
mov
dec
loop
jmp
cs
loope
movsb
in
fiadds
fisubrl
lea
cmp
shlb
mov
xor
mov
mov
dec
sub
or
xchg
loop
cs
xor
leave
sbb
inc
cltd
adc
or
imull
inc
dec
push
arpl
and
mov
inc
test
fidivrl
inc
mov
pop
insb
xchg
mov
pop
ret
inc
adc
jnp
out
cmp
sbb
fcmovnu
lds
cltd
and
rclb
sub
xor
cmpsb
inc
ljmp
jle
mov
in
inc
mov
xor
add
jle
xor
je
xor
sub
pop
sub
pop
inc
or
adc
int3
mov
xor
cmpsl
cli
ja
sub
orl
and
mov
aas
dec
push
and
fcompl
negb
add
xchg
imulb
popa
jl
dec
stos
jmp
rcrb
inc
rclb
cmp
push
into
addr16
test
lods
jb
leave
mov
add
es
jecxz
xor
xorl
jmp
inc
les
fidivrs
jns
mov
aad
jge
les
clc
repnz
fistpll
rorb
stos
pusha
inc
xchg
out
and
mov
jns
xchg
inc
arpl
ret
mov
ja
push
iret
icebp
jecxz
lds
cmpsb
fcoms
adc
aas
daa
lds
cwtl
sbb
mov
mov
scas
int
out
aad
jbe
push
push
loope
push
jne
mov
cmp
movb
test
repnz
inc
cmp
mov
push
stos
jge
aaa
shl
cltd
xchg
sti
dec
jg
lret
clc
xchg
aaa
lcall
pop
gs
mov
lds
and
ljmp
mov
popf
call
call
in
cmp
pop
insl
mov
shrl
and
sbb
xchg
dec
jp
xchg
sub
call
pop
gs
aam
sbb
cltd
mov
sub
pop
iret
aam
stc
jg
add
clc
scas
inc
cltd
movsl
jo
out
daa
mov
jo
and
pop
jne
sub
xchg
shr
loope
jmp
jle
mov
pop
shl
mov
pushf
dec
mov
cmp
xor
test
mov
mov
cwtl
jle
ds
outsl
jg
jle
jmp
cmpsb
cmc
addr16
push
jl
inc
aad
into
jg
por
leave
lods
fwait
lret
lcall
xor
gs
fincstp
push
or
add
pop
mov
adcl
mov
and
dec
lods
mov
jne
sbb
das
test
imul
dec
xor
test
push
xchg
aad
or
xor
int3
movl
fsubrl
outsb
mov
mov
jns
pop
ss
shl
mov
xchg
jle
ret
add
cwtl
fxam
jno
fistps
ljmp
xchg
xchg
cs
insb
or
mov
enter
loopne
and
pop
arpl
mov
xchg
mov
aad
push
mov
mov
mov
push
inc
push
inc
rol
jns
fadds
mov
push
imul
inc
mov
aas
sbb
lcall
leave
mov
mov
jb
sbb
les
mov
mov
adc
xor
and
daa
lock
mov
dec
sub
adcb
pop
int
scas
jl
xorb
and
or
call
xor
sub
jmp
or
cli
vcvtsi2sdl
outsl
mov
push
orl
sbb
push
es
int3
push
adcb
fs
loop
out
inc
adc
sbb
mov
or
dec
loope
mov
inc
cmp
or
fucompp
jg
lods
sti
dec
aaa
cmp
sub
cwtl
aad
sub
push
sub
mov
mov
fidivl
addr16
inc
out
shlb
jl
jecxz
lret
iret
add
movsl
jmp
xor
mov
repz
movsb
pop
aaa
mov
test
lea
incb
add
ljmp
lods
mulb
sub
lock
xor
hlt
rcrb
xchg
fcmovnb
mov
fbld
nop
ret
scas
add
pop
mov
mov
imulb
cmp
test
jge
add
jae
imul
adc
mov
jle
ret
add
movsl
xchg
inc
int
fcomps
and
pop
fstl
jo
cmp
pop
inc
jnp
fadds
jns
les
dec
push
mov
enter
icebp
push
push
or
aas
pusha
xor
xchg
andb
mov
ret
pop
push
iret
int
xchg
or
lret
jge
xor
push
out
dec
popa
out
push
mov
or
fldt
cmpsl
cs
mov
mov
xchg
lret
insl
ljmp
jne
sarl
neg
inc
cmp
pop
nop
mov
fistps
adc
add
pop
out
ljmp
and
mov
movsb
les
cmc
fwait
pushf
loope
insb
pusha
cmpsb
insl
mov
xlat
mov
gs
nop
ss
rolb
hlt
sahf
push
mov
insl
ss
cmp
inc
mov
pop
into
mov
sub
hlt
cmpsb
xor
fnstsw
pop
mov
aaa
or
repnz
add
push
xchg
fcmove
dec
fildl
aaa
call
jp
pop
push
imul
cmpsb
inc
and
adc
mov
jns
popa
pop
data16
xchg
scas
mov
and
cld
sahf
cs
pop
cmpl
xchg
test
movsl
mov
std
lods
das
add
imul
xor
cmc
mov
mov
adc
xchg
adc
mov
pop
in
clc
xchg
nop
and
sub
mov
in
mov
lahf
shrl
or
into
and
push
adc
repz
shrb
adc
shll
filds
sub
xor
dec
subl
adc
mov
cmp
jecxz
fstpl
adc
popa
sbb
int
push
cmc
xchg
jns
add
ljmp
mov
out
adc
or
cmpsl
into
push
shl
in
pop
push
fstpt
sbb
cmp
or
dec
cmp
xor
jo
push
xchg
rolb
je
movsb
test
cmp
fs
jl
out
ljmp
jecxz
addr16
pop
data16
mov
dec
in
adcb
push
lea
pop
xor
xor
sub
out
adcl
scas
adc
jbe
push
lds
sbb
jo
aaa
jno
pop
fimull
adc
lahf
sti
inc
sbb
xchg
jne
out
popf
mov
test
mov
out
push
jmp
cmp
lcall
std
sahf
in
jae
es
js
and
inc
push
scas
xchg
fnstcw
xchg
mov
mov
xchg
imul
aam
enter
mov
and
jmp
hlt
in
or
xchg
dec
or
mov
divl
push
cli
cmpsl
dec
repnz
push
push
or
cld
icebp
fisttps
jae
into
sub
pop
jbe
cli
adc
pop
mov
roll
jb
push
mov
xchg
mov
push
or
pop
mov
nop
mov
jg
icebp
rep
orl
push
pop
out
cmp
fildl
int
cli
lods
in
shrl
rcl
jle
pushf
or
cmc
adc
aam
nop
sbb
test
popf
jo
rcrb
push
mov
clc
call
mov
inc
xor
mov
fdivl
lods
inc
or
xor
cmc
lret
icebp
mov
mov
imul
pop
out
daa
leave
dec
xchg
icebp
pusha
or
pop
outsb
gs
sub
nop
lret
std
pop
or
sbb
mov
popf
pop
push
or
push
sbb
aam
jge
or
sbb
sub
push
push
mov
xor
jp
stc
mov
into
xor
dec
scas
push
cli
pusha
imul
jns
je
pusha
xor
nop
mov
sbb
fidivrl
loopne
sub
lcall
daa
sub
add
jo
sub
jle
fisubrs
xor
lods
enter
xor
ret
sub
xor
dec
ds
stos
enter
and
inc
and
pop
push
sbb
mov
jne
mov
cli
jne
in
outsl
jp
jp
les
jg
jnp
jae
aaa
add
shll
clc
xchg
push
xorl
mov
dec
mov
dec
inc
je
adc
int
fwait
mov
adc
add
dec
pop
and
mov
bound
inc
mov
cmp
rol
sbb
popf
add
lods
cmp
ljmp
pop
es
in
dec
mov
jbe
dec
cmp
mov
arpl
push
pop
pop
sub
hlt
ret
sbb
ds
inc
mov
daa
fisubl
mov
lods
mov
sbb
ljmp
adc
mov
aam
and
ljmp
cld
xchg
mov
mov
stos
rolb
in
cli
js
sahf
cmp
sub
dec
adc
dec
jb
out
push
jae
fisttpll
hlt
or
sub
sub
sbb
add
mov
test
enter
inc
jle
mov
push
inc
incb
add
ljmp
and
jne
push
in
inc
jnp
inc
xchg
sub
or
pop
insl
add
test
ret
sbb
and
or
fwait
add
pop
in
ja
mov
stos
jecxz
dec
mov
je
push
push
jne
stos
es
movsb
sbb
mov
and
jl
xchg
mov
out
jb
test
hlt
scas
aam
sti
push
stc
and
jo
lcall
leave
mov
and
iret
xor
push
add
pushf
cmp
adc
mov
jl
in
push
or
lea
mov
scas
dec
imul
cmovnp
sub
lcall
shlb
movsb
fmull
das
lods
mov
into
test
insb
rol
cmp
add
xchg
les
sysexit
les
mov
ja
std
repz
in
cs
clc
push
sbb
leave
dec
jne
xchg
add
adc
push
jp
pop
gs
xchg
cmp
insb
push
or
pop
lcall
sbb
mov
mov
jp
xchg
jecxz
fldcw
cmpsl
add
jmp
lea
xchg
or
orb
sbbl
mov
mov
icebp
sti
popa
stc
insb
jne
mov
out
cltd
lock
js
cmpsb
mov
addb
pop
jno
mov
add
dec
pop
jns
lods
mov
cmp
or
sbb
xor
jecxz
mov
shrb
xchg
movsl
ljmp
lcall
mov
pop
xor
jo
inc
push
test
jl
fnstcw
fs
iret
push
xchg
inc
es
lret
mov
insb
sbb
ficoms
xchg
xlat
push
jmp
shrb
jo
xchg
mov
test
push
dec
dec
sbb
into
or
test
jge
lret
xchg
mul
ljmp
rcrb
mov
mov
cmp
xor
and
divb
push
sub
aad
mov
lock
stos
fdivrl
sahf
outsb
push
xchg
pop
addl
or
stc
addr16
push
adc
ds
rorb
aas
mov
xchg
pop
pop
into
imul
enter
push
xor
lock
dec
ds
jno
push
loope
not
cmpsb
nop
stos
into
outsl
pop
idivb
mov
pop
inc
sbb
sub
adc
add
or
dec
push
imul
or
es
push
scas
and
push
bound
je
sbb
movsl
cs
addr16
popa
cmp
xchg
push
or
iret
daa
mov
push
aad
cld
ja
mov
push
inc
gs
loope
stos
repz
xchg
jb
push
push
in
add
outsl
mov
sahf
inc
lods
in
mov
andb
lea
push
rcll
ficomps
jecxz
cmp
idivl
add
or
iret
sub
insb
cmp
jbe
or
mov
inc
nop
mov
jno
jns
add
ffree
movsl
cltd
aad
js
aas
sub
dec
mov
xor
sti
adc
xor
pop
fwait
lea
faddp
lods
jno
mov
push
sbb
and
jge
fisubrs
std
or
pop
push
sarl
icebp
add
je
fnstsw
sbb
aaa
pop
sbb
nop
lcall
test
mov
inc
movsl
xchg
push
push
jnp
repz
dec
sub
stc
fidivrs
inc
aam
mov
xchg
push
xor
or
shlb
fdivl
mov
lock
mov
mov
and
mov
and
xchg
jbe
test
push
ror
imull
test
pop
fiaddl
xor
push
sub
dec
pushf
push
es
movsb
push
mov
rcr
movsb
mov
adc
inc
add
inc
shrb
and
pushf
xor
stos
adc
and
inc
movsb
aad
jo
sti
mov
mov
xchg
pop
lods
loopne
dec
sub
mov
push
ror
jecxz
lods
mov
call
fistpl
std
incl
or
dec
aaa
or
xor
xor
popf
mov
push
mov
js
pusha
in
ret
ds
adc
in
cwtl
dec
movb
and
mov
jne
movsb
and
stos
aaa
or
jnp
cmp
or
xchg
cwtl
iret
pushf
xchg
or
fldcw
jnp
xchg
pusha
adc
xchg
loope
lods
xchg
test
jo
rcrb
xor
mov
pop
fbstp
mov
dec
mov
mov
push
imul
fs
jmp
mul
mov
jne
enter
sub
movsb
divl
sub
mov
push
dec
dec
or
pop
ret
imul
dec
imul
pop
dec
movsl
sub
push
push
lds
aaa
lret
out
pop
mov
pusha
xchg
jbe
jmp
arpl
push
dec
xlat
or
xchg
inc
in
clc
push
fmulp
push
jne
xor
ja
mov
ja
push
fists
pop
mov
gs
addl
jecxz
insb
xchg
negb
lea
mov
pop
test
repz
sarb
lret
dec
jle
add
int3
cmp
dec
cmc
jbe
into
iret
leave
mov
cltd
dec
leave
das
jge
sbb
or
cmp
jne
out
es
and
in
pusha
adc
sbb
ss
pusha
or
stos
pop
sbbb
pop
dec
lret
add
inc
repnz
push
std
mov
loopne
xchg
xor
sub
jae
or
xor
sub
insl
divb
fistpl
fisubl
pusha
xor
fmull
aad
test
push
xchg
lret
fcmovne
inc
roll
add
push
das
roll
xchg
mov
or
cmp
insb
jecxz
cmp
xchg
repz
dec
mov
sbb
pushf
add
add
movsb
bnd
xor
cltd
lds
cmp
or
lret
dec
add
aam
cs
loopne
ds
insl
mov
ds
and
hlt
jg
mov
push
jne
mov
adc
sub
out
mov
sahf
aas
pushf
fsubs
pop
lcall
jl
pop
not
xor
fcompl
repnz
cmp
movsb
loopne
sub
push
movsl
jbe
loop
enter
aad
inc
dec
mov
call
mov
arpl
adcl
test
aaa
fcmovnb
jo
cmpl
inc
add
clc
insl
fwait
xchg
add
iret
xlat
adc
add
sbb
xor
jp
mov
leave
fisubs
sbb
test
inc
or
xchg
lret
sub
pop
std
hlt
mov
mov
sbb
loopne
hlt
mov
frstor
out
rcl
test
sbbl
mov
push
out
dec
sbb
jae
loope
pop
pop
dec
fcomps
je
and
adc
jge
cmp
cmp
cmc
xor
mov
hlt
mov
xchg
push
dec
pop
mov
repz
pop
push
mov
ret
mov
scas
cs
orl
sub
xor
stos
jle
test
mov
lods
fbld
scas
pop
lods
pop
adc
xchg
xor
test
lock
sbb
cld
sub
cmp
ss
mov
fsubs
add
dec
mov
dec
mov
fcomps
inc
lahf
cli
jecxz
test
fnsave
icebp
lret
sub
iret
mov
in
adc
in
mov
roll
cltd
and
push
test
in
jne
movsb
stc
push
subl
lods
sbb
dec
test
leave
gs
sub
popf
fisubrl
sbb
pop
movsb
adc
clc
inc
stos
push
outsl
das
loop
cld
add
cwtl
xorl
loopne
out
das
aaa
imull
mov
xchg
sub
sti
dec
inc
dec
and
andl
dec
pop
or
cmc
imull
mov
push
xor
mov
add
ljmp
lea
rorb
int
cmp
idiv
lods
jns
addr16
cs
imul
dec
jnp,pn
dec
sbb
mov
mov
ljmp
insl
sub
lods
hlt
in
clc
push
pop
cli
pop
mov
push
aad
xchg
dec
jo
mov
idivl
int
sub
out
imul
insb
stc
sub
adc
ret
push
push
cli
fcoms
and
lock
inc
fcompl
dec
mov
das
rorl
pop
mov
lcall
pop
push
xor
lds
sub
pop
lods
inc
push
iret
jns
iret
mov
rolb
loopne
loopne
dec
aam
pop
mov
add
push
aad
lods
cmp
test
loope
sub
xchg
mov
dec
adc
sbb
jo
gs
jno
sub
test
ja
push
lret
mov
cs
test
test
pop
and
jo
jmp
insl
iret
dec
sub
ret
add
add
xor
fistl
adc
fistpll
jb
aas
cmp
adc
cwtl
pop
repz
mov
inc
and
popa
fisubrs
jnp
mov
sub
out
cmp
sub
push
pop
add
push
mov
fwait
push
pop
test
stos
jae
mov
xchg
cmp
inc
fs
push
mov
popf
mov
and
pop
cmp
cmp
cld
cwtl
push
mov
dec
movsl
mov
std
gs
out
inc
cli
stos
jecxz
jl
fwait
and
mov
add
sbbl
inc
jge
cmpb
xor
inc
jl
repnz
cli
jmp
or
sbb
sbb
outsb
bound
and
push
addr16
or
inc
sub
xchg
out
ljmp
imul
out
dec
aad
fwait
mov
ja
arpl
loopne
xor
and
jo
xchg
popf
mov
iret
pop
stos
stos
rcll
sti
cmp
mov
int
adc
dec
add
int
fildll
movsb
push
aaa
jecxz
jne
adcl
cld
das
and
adc
xchg
pop
cld
cld
push
cltd
lret
dec
sub
je
xchg
lock
ret
inc
sbb
jo
lret
mov
push
sub
jb
sbb
mov
test
xor
shlb
pop
cmpsl
adcl
push
popa
mov
test
lds
cmp
lds
fistl
xchg
shrl
lret
ret
push
jl
rolb
popa
xchg
jno
cld
dec
jo,pt
xchg
loope
out
in
sbb
shlb
push
outsb
mov
mov
cs
inc
sarl
cwtl
dec
push
scas
shll
sub
and
pop
or
dec
nop
sub
push
dec
jle
jmp
call
outsb
in
add
adc
pop
mov
add
fsubl
cs
jmp
inc
xchg
dec
pop
mov
cmpl
mov
inc
xor
xchg
pop
cmp
or
sbb
adcb
out
adc
pinsrw
lods
cwtl
xchg
jno
js
cli
pop
lds
and
lcall
lea
mov
pop
pop
sub
push
pop
in
addb
ja
cli
mov
out
das
popa
push
sub
or
push
cmpsl
mul
push
stc
mov
xchg
sahf
cmc
loop
jmp
int3
sbb
lcall
js
fimuls
dec
jnp
cmp
xor
insl
fsubr
xchg
cmp
push
sbb
dec
adc
in
repnz
les
lret
xor
or
jl
cwtl
mov
xchg
int
icebp
rclb
add
xor
jnp
mov
dec
fsubrs
mov
jecxz
das
fs
add
mov
ljmp
mov
sub
inc
xor
push
out
psubsw
mov
ss
ret
sub
inc
or
pop
mov
jno
in
insb
mov
and
pop
inc
push
das
pop
repnz
xchg
imul
ljmp
xchg
cmp
dec
jp
cmpsl
jo
jmp
cmpsb
push
add
xchg
lds
or
push
inc
lret
push
cmc
jne
daa
jg
incl
sbb
fsubrp
icebp
push
bound
mov
lds
int3
bound
sti
xchg
pop
scas
cmp
mov
pop
push
sbb
subl
shll
cmpsl
es
sub
xorl
subb
int
test
pop
mov
mov
xor
xchg
mov
jb
pop
addr16
loop
jp
fdivp
adc
and
ljmp
push
sarl
cmp
pushf
gs
push
in
xor
lahf
in
add
into
call
movnti
lea
aam
hlt
mov
int3
jns
cmp
lret
mov
lret
mov
jp
cmp
fs
fstpl
leave
jg
sub
push
dec
push
push
jo
push
daa
or
popa
xor
xchg
cwtl
adcl
cmpsl
mov
mov
jnp
aas
data16
lods
xor
or
ja
sub
cmp
mov
push
pop
stos
rolb
gs
xchg
inc
cmp
xchg
movsb
xor
mov
insl
lcall
and
sub
in
sbb
test
push
cmp
mov
int
jo
xchg
xchg
push
push
push
pop
add
pop
pop
mov
add
push
dec
jmp
shlb
loopne
jns
mov
call
pop
cmp
fdivr
loop
mov
rolb
push
aaa
sbb
inc
loopne
jns
lret
test
ljmp
mov
jb
imulb
ljmp
daa
dec
adc
fsubrs
into
repz
push
clc
mov
and
pop
cmp
icebp
scas
xchg
mov
popf
in
loopne
out
fwait
jno
push
stos
xchg
adc
inc
fsubrl
mov
inc
cld
ja
sub
dec
repz
or
bound
sub
andb
mov
mov
jp
loopne
and
fimull
pop
stc
daa
pop
in
pusha
xor
pop
nop
out
rclb
push
inc
add
xchg
pop
jge
and
mov
jnp
out
and
enter
enter
loope
imul
sbb
jmp
js
das
aad
or
adc
clc
xchg
pop
ret
arpl
dec
mov
sbb
jnp
test
out
add
es
or
ret
jbe
mov
data16
jns
mov
mov
push
fbld
nop
ss
movsl
paddw
adc
popf
mov
sbb
sub
cli
jg
scas
jne
mov
pop
pop
gs
repz
and
push
cmp
fcoms
ret
out
loope
loope
ljmp
mov
jb
fistpll
psubsw
sbb
js
cs
lock
mov
das
outsl
mov
popa
push
pop
dec
xchg
sub
pop
jbe
add
clc
fnstsw
dec
pop
xchg
out
mov
jecxz
negb
test
repz
ja
xchg
sahf
jbe
fs
sti
fldl
or
add
in
jl
jp
mov
popf
and
jne
aam
outsl
shrl
add
or
dec
jbe
or
lcall
ficompl
pushf
insl
cmp
mov
out
pusha
jne
or
mov
mov
enter
add
insl
aaa
sahf
sahf
jae
insb
dec
add
mov
mov
repz
cli
ficoml
scas
rcrb
xchg
push
adc
decb
and
and
mov
inc
push
or
xchg
outsb
push
in
xor
xchg
xorb
dec
inc
ljmp
cmp
ss
xchg
fs
push
mov
jmp
out
or
or
pop
dec
fcoml
pushf
inc
pop
xchg
leave
mov
pop
jmp
jo
incb
icebp
shlb
dec
lcall
mov
xchg
inc
in
xchg
es
in
aas
push
fwait
aas
leave
xchg
cmpsl
jno
bound
or
pusha
cmp
sbb
push
mov
cmp
xchg
add
lret
add
xchg
add
xchg
div
movl
cmpsb
fsubl
pop
or
jle
jnp
dec
sbb
mov
cwtl
jg
jo
inc
mov
mov
lcall
pop
xor
shll
sarl
aam
add
lods
lret
xlat
fs
aam
jp
pop
dec
cmp
dec
out
imul
into
adc
iret
outsl
aas
inc
jb
mov
fnstenv
aaa
mov
pop
pop
xlat
stos
add
addr16
and
add
sbb
add
cmpsb
movsb
call
and
mov
mov
mov
arpl
and
jge
nop
je
data16
jge
aam
mov
mov
push
mov
and
pop
sub
flds
out
int
inc
in
mov
inc
addl
push
pop
lods
in
cmpsb
pop
test
lock
xchg
xor
pushf
ss
xor
ficomps
fs
repz
mov
subb
xchg
lret
mov
test
pop
or
pop
sbb
mov
sti
aad
stos
adcb
push
movnti
pop
adc
xor
inc
aam
jge
cmc
icebp
loop
and
mov
cwtl
pop
sbb
les
in
js
add
jo
nop
ret
fisubl
adc
ret
jg
sahf
cmpsl
pop
pushf
jno
mov
xor
lods
adc
push
cld
loope
sub
movl
aas
push
xchg
pop
sub
pop
cmc
out
mov
hlt
xchg
jnp
ds
sbb
add
in
sbb
cmp
dec
xor
fs
push
pop
loop
gs
ds
push
inc
jbe
mov
loop
add
add
sbb
insb
mov
sahf
shrb
or
shlb
pop
mov
fmuls
stos
sub
bound
popl
xor
pop
pushf
xor
or
add
inc
jne
stos
mov
scas
adcl
push
inc
mov
ljmp
push
dec
clc
xor
dec
fst
loope
push
cwtl
push
cmpsl
jmp
add
cld
jo
mov
mov
mov
sbb
pop
jg
in
das
lcall
fisubs
aad
fdivr
pusha
inc
sub
sarb
xlat
push
sub
jmp
dec
push
mov
imul
adc
push
icebp
cmpsb
jo
lds
mov
pop
jle
xchg
mov
jmp
push
and
mov
loopne
add
add
lods
cmp
or
stos
cmpsl
test
mov
inc
pusha
fsubp
scas
cmp
mov
sub
cld
push
and
mov
mov
mov
push
mov
lds
sub
adc
lret
imul
les
inc
inc
pusha
inc
add
add
lret
arpl
xchg
fstpt
push
inc
movsl
arpl
mov
mov
add
nop
push
imul
test
mov
xor
pushf
ljmp
jecxz
out
pop
enter
push
ret
cmp
fdivrl
lods
sbb
xchg
cmp
es
push
lock
dec
mov
push
xor
sbb
jno
sbb
sbb
lret
faddl
xchg
stc
mov
mov
arpl
cmp
cld
ljmp
jne
push
mov
mov
test
movsb
sahf
xor
fucomi
js
xchg
or
and
rorl
xchg
and
xchg
imull
insl
fsub
jge
mov
call
cmpsl
arpl
aad
push
push
sub
push
mov
add
dec
pusha
or
mov
insb
lods
mov
mov
sub
insl
mov
ds
clc
lock
sub
fwait
movsb
hlt
inc
loopne
cmp
sahf
fnsave
scas
mov
pop
xchg
add
jle
ljmp
sbb
insb
add
mov
adc
jle
lods
or
xchg
push
std
test
mov
xor
lock
daa
and
mov
jne
push
sub
and
lret
in
jns
sbb
jl
mov
stos
loope
adc
and
push
js
lret
ds
in
popa
adc
sbb
pop
sub
pop
into
ret
stos
xor
out
adc
cld
test
mov
sub
sbb
icebp
jl
aaa
notb
std
mov
sbb
sbb
dec
jae
lock
pop
mov
jne
movsl
adc
inc
add
imul
mov
jecxz
or
add
int3
lods
push
push
xor
and
lret
xchg
push
inc
sub
push
mov
mov
sub
clc
mov
call
int3
pop
add
insb
jno
xchg
dec
leave
shrb
xor
xor
lahf
sahf
popf
push
orb
popf
mov
gs
mov
inc
sbbb
pushf
jge
outsb
scas
sub
sub
scas
shlb
xor
lods
clc
push
inc
out
test
dec
insb
test
imul
scas
out
mov
fsubrp
push
and
mov
or
cmp
repz
pop
jo
or
dec
push
sti
sub
cmpsl
mov
decl
repnz
pusha
pop
dec
jle
insl
pop
dec
and
sbb
cmp
stos
pop
pop
std
xor
arpl
jle
ja
loop
adc
and
lods
insb
dec
icebp
push
add
push
add
insl
sbb
call
aaa
cmp
outsl
inc
test
mov
inc
cmp
xor
popa
incl
frstor
pop
adc
mov
out
scas
pushf
or
lds
scas
cmp
xchg
mov
fiadds
cmp
fildll
adc
cld
ljmp
push
xchg
scas
js
nop
mov
stc
fstps
cltd
iret
xlat
push
test
pusha
es
outsl
mov
icebp
dec
or
aad
cmpsl
addr16
pop
add
cwtl
cmpsb
loope
mov
inc
out
rolb
cmp
ffreep
sub
outsb
cs
and
clc
jno
inc
inc
and
sub
arpl
pusha
ds
inc
imul
lods
cmp
xchg
arpl
stc
ficoml
into
negw
icebp
addr16
pop
inc
dec
jb
daa
mov
repz
je
nop
sub
sbb
loope
or
sbb
mov
ljmp
icebp
decb
imul
lock
push
inc
inc
imul
test
jecxz
popa
jmp
inc
shll
ret
iret
push
stc
outsl
es
cltd
lock
jnp
dec
cmpb
jns
fcompl
or
sahf
cmc
int
xor
clc
aaa
into
dec
pop
dec
push
cltd
daa
loopne
xchg
lock
gs
addl
out
mov
push
lcall
mov
dec
in
cmp
mov
jmp
out
add
dec
mov
inc
lea
lds
push
pop
imul
shrb
xor
push
mov
jge
push
push
mov
repz
icebp
and
cmpsl
cmp
cmpsl
add
xchg
dec
jle
clc
inc
jecxz
dec
jno
loopne
test
ljmp
lock
cmpsl
dec
xchg
mov
inc
stc
ss
xchg
out
sbb
add
or
rorb
push
dec
mov
xor
fsubl
push
inc
push
jge
add
xor
xchg
sub
push
movsl
into
jnp
js
lret
push
push
mov
mov
outsb
push
cs
jnp
xchg
pop
xor
and
add
jl
loop
cmpsb
push
lds
out
loope
sbbl
sbb
dec
in
aas
scas
mov
push
and
xchg
aad
adc
push
in
repz
dec
lcall
imul
and
lret
jle
pushf
push
mov
fbld
daa
inc
push
xlat
mov
xchg
dec
lods
mov
in
xor
adc
xor
inc
aad
sub
dec
js
pop
mov
lods
jecxz
xor
test
jne
or
cmp
daa
bound
jb
outsl
leave
xchg
add
cs
mov
outsb
xor
shrl
icebp
sahf
push
bound
inc
mov
icebp
mov
lahf
clc
cmp
add
jb
and
push
jg
mov
xchg
xchg
add
lcall
xchg
mov
bound
mul
xor
cli
jbe
jmp
ljmp
sub
das
pop
mov
mov
dec
scas
pushf
fmuls
xchg
xchg
rcll
pop
repnz
xor
mov
and
icebp
and
mov
mov
sub
subl
push
jae
je
insb
push
scas
int3
arpl
sarl
mov
out
add
dec
imul
out
xor
mov
cmc
jp
cmc
sub
push
jno
xor
and
cmp
push
push
in
out
xchg
imul
arpl
push
stos
pop
ja
ljmp
adc
shr
aam
lahf
mov
cmpsl
add
mov
test
imul
jp
sbb
push
mov
mov
or
adc
clc
filds
dec
adcl
sub
lods
fs
jecxz
js
inc
sbb
aam
fidivl
ss
sub
push
pop
lcall
pop
cmp
test
mov
push
hlt
dec
and
push
jns
nop
xor
jecxz
xlat
stos
fwait
repnz
mov
xchg
cltd
cmp
push
adc
ss
xchg
imul
pop
cmp
push
out
pop
out
fidivrs
iret
mov
adc
icebp
mov
call
add
out
mov
in
mov
incl
inc
cli
out
push
mov
jne
repnz
cmp
jo
pop
mov
xacquire
in
lods
jg
fstps
pause
xor
outsl
fimull
addr16
sbb
inc
add
pop
inc
popf
mov
xchg
bound
inc
stc
dec
lea
faddl
ficoms
inc
data16
aaa
fldl
outsb
es
rcrb
hlt
fidivrl
fcom
jb
pop
mov
imul
mov
orl
data16
fildl
push
cmp
stc
cmp
xor
cmp
jnp
cmpb
and
pushf
cmp
cmp
mov
test
push
pop
mov
jns
xchg
dec
fidivs
idivl
cltd
les
orl
or
out
fs
cmpl
push
mov
cmp
inc
push
push
mov
hlt
ja
sub
mov
mov
mov
mov
mov
sti
dec
lods
xchg
dec
stos
xor
sbb
pusha
sub
pushf
xchg
sub
or
pop
test
call
es
mull
xadd
popf
loop
loop
mov
sbb
negl
arpl
repnz
pop
adc
sub
pop
test
out
pushf
jbe
in
shr
fdivl
fidivrl
sub
outsb
shlb
inc
mov
pop
mov
addl
lds
outsl
dec
xchg
push
sub
mov
sub
mov
jle
fdiv
xrelease
ret
pusha
incb
sti
loopne
jae
outsl
arpl
pop
adc
daa
int
and
imul
movsw
push
dec
xchg
out
and
das
nop
pop
repz
push
mov
std
jno
mov
adc
jecxz
popf
inc
cmp
call
jnp
xor
sub
or
xor
out
test
or
lods
or
or
fisttps
insl
lods
sbb
int
icebp
addb
mov
imul
mov
and
pop
sahf
push
mov
stos
scas
loop,pn
mov
imul
lds
dec
or
fldcw
dec
pop
movsl
cmp
inc
mov
stos
cs
cmp
xor
push
in
xor
loope
popf
and
push
pop
repz
shl
aaa
xor
xchg
xchg
fistps
lahf
lock
popf
mov
cwtl
push
movsb
or
aas
call
xchg
addr16
push
movsb
adc
out
test
cwtl
movsl
pop
cmpsl
mov
das
loop
fnsave
mov
inc
add
aam
rolb
mov
mov
cmpsb
add
cmp
scas
and
dec
or
hlt
pavgw
and
rcll
add
aas
push
mov
pop
mov
sbb
aam
popa
mov
mov
mov
inc
rcrl
cmp
and
mov
nop
aad
sar
push
ret
mov
jne
out
fadds
xchg
lods
jnp
out
aad
jl
mov
sbb
jo
lds
dec
push
mov
test
and
push
test
scas
pop
adc
repnz
jo
std
mov
dec
sub
sub
cmp
mov
push
dec
and
or
icebp
push
shrl
xchg
push
cmp
push
xor
cmp
push
adc
jnp
dec
pusha
mov
adc
stos
cmp
stc
or
push
lea
das
aaa
aad
pop
lock
jae
fdivrs
lret
jmp
lret
pusha
xor
or
sub
jae
jmp
clc
pop
mov
or
dec
sbb
movsb
xchg
xchg
adc
or
cmc
icebp
cwtl
movsb
sarl
nop
fmuls
push
or
leave
ja
jo
jecxz
mov
mov
mov
rol
push
in
sarb
dec
xchg
add
imul
pop
mov
push
xchg
jge
test
jle
ljmp
test
adc
adc
ja
int3
fstpl
test
jmp
jecxz
jmp
and
in
push
cmpsb
xorl
push
xor
stos
jmp
aad
pop
scas
lcall
adc
sub
inc
xlat
fwait
mov
mov
xrelease
push
js
cmp
pushf
mov
pop
mov
daa
mov
push
jbe
stos
js
cli
or
lock
ficoms
sub
repz
sub
mov
movsl
imul
add
pop
jmp
push
movsb
scas
aas
pop
movsl
xchg
adc
mov
mov
pop
push
jno
push
xchg
movsl
stos
gs
sub
or
mov
popf
leave
xorb
pop
adcl
jmp
sbb
xor
jg
mov
js
int3
arpl
push
cvttps2pi
sbb
cli
mov
sbb
cltd
testl
iret
das
addb
mov
cli
cld
ja
shll
mov
mov
push
rorb
test
add
adc
clc
imul
push
sbb
inc
scas
xchg
sub
pop
push
sahf
stc
mov
in
popf
lods
js
lret
mov
dec
subl
aaa
jno
push
push
and
push
xchg
push
aas
sub
sub
je
or
jbe
movsl
xor
mov
mov
mov
sub
cld
inc
cwtl
cmp
pop
xchg
inc
int3
or
mov
cmpl
cs
mov
cmp
push
imul
push
dec
fildll
jl
das
push
icebp
inc
subb
cli
sub
pop
popa
std
fnsave
and
jne
test
adc
fistps
pop
test
mov
add
out
arpl
cmp
fstpl
das
vmwrite
cmc
jns
sub
fistl
inc
mov
add
sar
jp
push
xchg
iret
pusha
xchg
stos
rcrl
sbb
bound
call
test
ret
mov
jp
sub
inc
enter
iret
test
pop
adcb
push
cltd
les
stos
xchg
push
inc
frstor
mov
jmp
and
mov
lret
ljmp
inc
xchg
sbb
out
sbb
sbb
lods
cmpsl
xchg
mov
ss
cmp
xchg
dec
imul
aas
mov
je
test
pop
xor
arpl
ja
xchg
push
cmpsb
pop
xchg
aaa
int3
dec
inc
jl
jge
cmp
ljmp
mov
xchg
mov
inc
cmpsb
jnp
mov
inc
outsl
imul
and
jae
popf
ret
jmp
stos
lock
fidivrl
je
add
xchg
ljmp
jge
sub
inc
jns
cwtl
jne
scas
daa
inc
xchg
push
mov
jne
push
stc
mov
pop
cli
mov
std
jg
in
mov
ret
pop
xchg
mov
xchg
popf
push
mulb
push
add
mov
popa
mov
es
fcmovnbe
mov
dec
aas
push
pop
int
mov
cmp
fists
mov
adc
xor
jmp
add
out
mov
test
or
sub
push
jbe
out
and
push
fidivrs
mov
push
movsb
fs
in
adc
inc
out
pop
aam
mov
sbb
lahf
testl
jmp
insb
adc
xchg
cltd
jmp
or
or
pop
jmp
mov
adc
cli
arpl
mov
and
jmp
adcl
fwait
leave
xor
mov
loop
push
xor
in
mov
gs
mov
fsubr
out
cmp
push
push
out
js
pop
mov
mov
xor
ret
push
sub
or
cwtl
popa
mov
mov
pop
dec
imul
xchg
mov
imul
lods
je
mov
mov
sbb
hlt
lret
pop
test
pop
icebp
add
pop
sahf
out
push
add
repz
jge
pop
sub
inc
pusha
mov
pop
into
sub
jmp
cwtl
ljmp
jg
xchg
fsubrp
or
js
xchg
xchg
ret
xor
jnp
xchg
test
inc
js
icebp
jmp
lret
cmp
xchg
push
cs
lea
sub
stos
dec
xor
adc
loop
cmp
lahf
popf
xorb
mov
sarl
xor
push
repnz
aas
lds
inc
int3
cmpl
sub
leave
pusha
fnsave
inc
mov
dec
jne
push
push
push
push
mov
rorb
mov
jg
jnp
dec
sbb
dec
mov
pusha
push
sbb
jle
jmp
test
jnp
addr16
and
addr16
and
mov
test
jae
jno
fcmovbe
fstps
mov
lcall
add
xor
sti
pop
mov
test
inc
push
cmc
repnz
pop
pop
or
cld
gs
add
sub
mov
or
dec
mov
dec
jmp
jp
das
in
hlt
pusha
cmp
mov
into
out
das
jmp
addr16
xor
ss
mov
mov
mov
adc
sub
stos
das
add
notl
jb
pop
mov
std
push
inc
xor
je
stos
push
test
xor
in
fstpt
xor
test
push
xchg
sbb
fstps
in
lret
imul
mov
add
mov
xchg
push
inc
imul
inc
addb
cmpsl
sbb
cmc
sti
mov
and
sbb
pusha
insb
and
lahf
loop
test
jne
push
jp
les
dec
std
call
mov
lods
sub
dec
jge
and
ss
popf
lret
insl
mov
mov
mov
xor
lcall
out
adc
gs
mov
out
icebp
push
insl
adc
push
push
inc
jp
sbb
je
scas
or
iret
jl
pop
dec
lods
cmp
aam
inc
mov
pusha
or
mov
loop
pushl
sbb
in
sbb
or
xor
mov
les
cmpsb
lahf
popa
js
xchg
test
mov
lcall
ret
push
mov
insb
cwtl
mov
ret
mov
mov
jp
push
popa
ds
shrl
add
inc
sbb
xchg
push
mov
pop
data16
mov
leave
pusha
mov
js
push
mov
push
adcb
xchg
push
ret
jl
cmc
inc
lods
shlb
mov
cmp
jo
push
push
lock
mov
adc
aaa
mov
aad
addl
jnp
pop
adc
sub
movsl
xorl
dec
in
rorl
ret
aam
fstps
push
in
jnp
mov
push
out
jp
test
inc
je
sbb
dec
mov
sarl
mov
scas
lcall
in
or
mov
mov
int
fs
jne
ret
je
cmp
shlb
rclb
dec
addb
rcrl
sub
cld
in
test
pop
jno
pop
mov
es
mov
and
xchg
adc
jmp
popf
pcmpeqb
out
addr16
adc
outsb
scas
sbb
imul
xlat
or
mov
ror
xlat
pop
dec
add
push
mov
cld
mov
int3
das
lahf
es
inc
xchg
arpl
enter
or
cltd
cmc
pushf
lock
push
aas
popf
cmpsb
cmp
pop
dec
mov
push
xchg
cmp
cmp
xchg
nop
adc
or
xor
inc
js
daa
pop
andl
arpl
bnd
xchg
int
mov
cmp
out
add
jns
cmp
and
decb
decb
stos
pop
addl
arpl
xchg
push
cmp
data16
and
lcall
inc
sbb
inc
push
andl
lods
inc
sub
sahf
outsb
lods
out
cmpb
xchg
repz
repz
inc
mov
lds
mulb
sbb
xor
sahf
sub
push
pushf
test
mov
sbb
mov
push
sub
insb
insb
sbb
pop
xor
loopne
fs
pop
rolb
aas
rcll
lcall
xlat
mov
push
dec
mov
arpl
pop
jle
mov
and
mov
add
stc
cmp
jo
je
les
mov
nop
dec
sbb
arpl
mov
ret
pop
shlb
sahf
xor
sbb
insb
insb
hlt
push
pusha
dec
inc
pushf
loop
insb
jbe
mul
xchg
and
icebp
rcrl
mov
lods
dec
inc
and
jg
dec
lret
mov
push
jle
and
dec
cmp
push
adc
test
insl
jno
mov
pop
out
mov
je
das
aam
rclb
outsb
xor
and
cld
out
mull
mov
inc
or
rol
imul
insb
addr16
cld
xlat
mov
mov
mov
jmp
scas
pop
enter
dec
into
mov
jne
sbb
leave
fcmovbe
pop
jg
lods
mov
sub
push
out
adc
je
stos
pop
pop
adc
xor
sarb
inc
cmc
mov
cmp
movd
push
jbe
xor
or
mov
into
xor
push
mov
adc
jle
fsts
pop
out
lods
push
pop
and
lcall
dec
xor
xor
test
dec
jnp
imul
mov
imul
pop
ror
xor
ret
stos
pop
xor
loop
fistps
push
shrb
push
add
mov
dec
push
sti
popf
stc
jge
sbb
jns
data16
test
decl
in
xor
sbb
mov
add
minps
fdivrs
sbb
bound
stos
imul
in
jnp
out
in
call
xor
lret
jl
xchg
jo
fs
xchg
xor
out
sahf
not
or
cld
xor
push
and
mov
xchg
insl
mov
pop
fwait
dec
adc
cmovp
xchg
jns
xchg
leave
inc
adc
mov
nop
setge
mov
sbb
push
add
mov
mov
dec
and
sbb
in
fmull
stos
mov
or
fs
cs
sub
pop
scas
out
scas
dec
push
aaa
daa
mov
sahf
push
aaa
das
daa
nop
adc
and
add
dec
rcl
sahf
add
stos
add
cmp
lcall
cmp
enter
je
inc
cmc
pop
nop
jae
or
sbb
mov
adc
fisubs
adcl
cmp
ret
test
pop
or
lahf
scas
and
jmp
lret
ret
ffreep
leave
mov
data16
mov
mov
jae
dec
shrb
xchg
pop
scas
pop
dec
sbb
lock
push
into
test
clc
pop
mov
sub
sub
mov
sbb
xor
cmpb
out
fisubrl
sti
mov
sbb
sub
jne
mov
xlat
xor
xchg
adc
lcall
das
or
sahf
jo
mov
pop
mov
pop
or
pop
mov
sbb
sub
std
xlat
dec
mov
dec
jmp
push
mov
lea
mov
aas
mov
dec
lods
pop
xchg
add
adc
xor
mov
ja
stos
hlt
out
out
sbbb
dec
sbb
jno
sub
int
pop
sub
pop
mov
add
jmp
stc
sbb
sahf
pop
rcll
mov
and
repz
sub
lret
adc
outsb
and
iret
pop
xchg
sub
push
and
aad
andl
dec
push
cld
mov
pop
xor
or
arpl
sub
mov
lcall
leave
and
out
inc
jge
push
test
lea
ret
mov
xchg
gs
cmp
inc
cmc
repnz
shll
add
xchg
nop
mov
mov
arpl
adc
cs
ret
add
jp
push
adc
jae
enter
loope
fdiv
jp
out
stc
adc
adc
pop
xchg
in
dec
cmp
cmp
or
sbb
pop
cmp
push
jo
out
fnstcw
sbb
repz
enter
je
outsb
adc
mov
and
cmp
enter
cmpsl
lods
jbe
cli
xchg
or
push
sub
mov
jb
and
pop
test
jae
das
out
stos
inc
xchg
stc
scas
xor
mov
dec
cmp
mov
jmp
pop
int3
negb
dec
dec
lret
js
data16
xchg
lock
stos
cs
mov
fdivs
and
popf
in
push
jl
cwtl
xchg
cld
aad
pop
push
and
pop
mov
jmp
adcl
mul
mov
xchg
out
push
sbb
or
lock
imul
mov
push
pushf
or
pop
aam
inc
outsb
and
pop
jno
mov
push
dec
jle
dec
sti
aam
jg
push
jge
aas
jge
stos
push
push
xorl
das
mov
add
int3
popf
scas
jge
test
sahf
je
add
iret
stc
and
xchg
xchg
mov
sub
dec
sbb
in
xor
cmpsb
ja
or
adc
mov
mov
mov
rcrb
fst
xchg
pop
aas
movb
fadds
or
and
addr16
pushf
imul
hlt
add
fs
adc
decl
xchg
pop
dec
pop
iret
aad
pop
arpl
mov
cmp
fstpt
fmull
mov
gs
in
pop
dec
or
jecxz
and
outsb
iret
sbb
fidivs
inc
pop
fcompl
jbe
test
lret
jg
xor
loope
adc
sbb
push
sarl
cmp
sahf
scas
or
inc
pop
inc
das
add
idiv
icebp
test
bound
push
add
pop
ljmp
dec
or
cmp
fcomps
loop
shll
push
test
sbb
dec
es
mov
fildll
push
iret
stos
push
add
cmp
adc
xchg
rcr
icebp
dec
mov
das
adc
and
cltd
inc
lds
enter
mov
cmp
jge
and
imul
roll
dec
jp
or
jecxz
cwtl
mov
jnp
add
mov
shll
cwtl
sub
mov
inc
lock
frstor
push
sahf
pop
adc
mov
sarb
outsl
lea
test
scas
repz
inc
and
jp
push
mov
fwait
sbbl
lds
lods
jae,pt
decl
dec
ficompl
mov
push
pop
xchg
repnz
in
ja
jmp
popl
roll
push
mov
pop
mov
cltd
jmp
cmpsl
xor
cmpsl
sub
out
mov
xchg
and
aad
sub
test
in
int
push
movsb
jae
test
mov
push
int3
nop
sti
jle
into
jnp
addl
inc
xchg
xchg
cmp
fmuls
sub
xchg
dec
mov
stos
in
mov
jmp
fsts
cmp
outsl
mov
test
ja
dec
fs
std
sub
mov
sub
adc
loopne
enter
cmp
add
lea
ret
rcrl
push
gs
inc
test
push
shl
and
or
push
dec
in
add
xor
sbb
sbb
cmp
add
ret
jb
mov
fldl
xor
xor
aad
jge
mov
dec
add
out
sub
jecxz
and
ret
into
addr16
out
dec
rcr
jmp
aam
fdivl
test
add
arpl
push
xchg
or
add
mov
push
cmp
sub
cmp
sarl
sbb
lret
sbb
icebp
inc
xchg
cwtl
ret
movsb
pop
mov
cld
int
xchg
imul
into
adc
into
fstpt
xor
cwtl
repnz
call
inc
loop
jmp
mov
pop
shll
add
out
rcr
cmpl
lock
inc
mov
fistl
les
jmp
cmp
xchg
jnp
into
cli
adc
inc
aaa
inc
dec
mov
data16
dec
add
fsubl
pop
inc
ret
test
lret
lret
inc
clc
sbb
inc
fs
popf
push
push
imul
repnz
sbb
adc
push
sbb
add
xlat
cltd
mov
dec
sahf
push
outsb
sbb
cmc
subb
sbb
daa
and
les
jg
jp
push
test
sti
mov
xchg
shrl
xchg
arpl
rcll
popa
pusha
add
cmp
sub
pop
cmp
mov
clc
pop
imul
popa
sbb
jmp
xchg
out
push
inc
mov
push
sub
repnz
push
imul
retw
push
movsl
popf
movsb
fistpll
leave
cli
out
cwtl
ja
cmp
shlb
jmp
orl
inc
adc
xchg
loope
pop
cmc
lret
sub
fisttpll
rcrl
cmc
and
out
inc
xchg
adcb
popa
sbb
in
sbb
add
cltd
inc
add
movsb
ss
pop
mov
adc
inc
jge
cmp
imul
sbb
sub
mov
push
fmul
mov
fidivrl
dec
add
sub
icebp
and
push
test
adc
ljmp
popf
push
imull
jp
jp
adcb
imul
xor
adc
js
into
cmp
inc
rcrb
cmpsl
addr16
aam
adc
dec
jge
cld
iret
inc
and
sbb
push
enter
cmp
dec
jmp
sub
lcall
mov
aas
arpl
jp
push
jmp
xor
ljmp
fildl
mov
stos
jnp
jne
fmulp
popa
and
mov
push
js
imul
xchg
int3
mov
jne
cli
cwtl
addl
rolb
or
jg
fld
jbe
jb
fidivl
outsl
lea
cmc
cltd
daa
cltd
pushw
cmp
ret
out
int3
or
fidivrs
fucomp
js
int3
mov
je
inc
aas
hlt
jl
adc
mov
dec
and
push
jmp
lds
std
jns
ja
mov
into
jne
insb
scas
movsl
adc
iret
cmp
enter
loopne
inc
sbb
in
sbb
dec
cld
loop
sub
push
js
cmp
mov
or
sub
adc
insb
scas
movsb
push
ljmp
out
sub
xor
out
jns
push
int3
int3
pop
mov
clc
xchg
adc
jne
daa
sbb
sbb
jne
test
or
fldl
xor
cmp
mov
jnp
lock
lret
icebp
aad
jne
cmc
nop
je
sbb
xchg
fptan
out
mov
xor
dec
mov
or
fwait
push
adc
inc
push
scas
mov
or
and
scas
cltd
push
cs
adc
add
pop
ret
pusha
xor
test
xor
cs
push
adc
popa
xor
sbb
dec
dec
insl
movsb
bound
add
sub
mov
cmp
cmp
push
push
and
sarl
scas
pop
sub
sub
je
pop
cmp
sbb
xor
adc
jle
imul
sbb
inc
jns
dec
int
out
or
add
xchg
lcall
out
or
aam
xchg
popa
clc
mov
mov
add
gs
clc
js
add
mov
add
incl
loope
xchg
push
mov
push
adc
jb
stos
inc
fs
sahf
fsts
add
fimull
iret
imul
roll
cmp
add
sbb
cld
adc
sarb
cs
nop
push
je
mov
dec
jne
inc
aas
or
cmp
arpl
aam
inc
das
insb
in
sub
push
adc
mov
xchg
sbb
cmp
push
fisubrl
ss
sbb
xlat
aaa
psubusb
arpl
lods
cmp
sbb
sub
xchg
fimuls
cmp
fcompl
jae
mov
sbb
cmp
adc
mov
in
in
or
orl
push
xchg
mov
mov
ss
mov
mov
pop
inc
adc
xor
inc
mov
push
test
popf
aaa
ficompl
addr16
xchg
lock
mov
cmpsb
out
or
and
outsb
test
mov
mov
or
mov
push
push
test
loopne
sub
out
pushf
pusha
call
push
loope,pt
es
push
fisubrs
mov
gs
mov
outsb
pop
and
in
out
cmp
loopne
jl
std
and
push
xchg
scas
test
jb
mov
bt
daa
rorl
mov
mov
call
inc
xor
cbtw
stos
loope
sub
sub
cmpl
xor
mov
xchg
mov
dec
or
cmpl
mov
xor
andb
inc
mov
out
scas
adc
jb
test
xchg
shll
out
mov
adc
pop
filds
push
mov
or
inc
in
push
addb
fwait
inc
or
pushl
dec
scas
mov
cmp
xor
divb
push
mov
mov
fildl
sub
out
shlb
mov
xchg
data16
pop
loop
push
clc
daa
ljmp
xchg
mov
mov
out
sbb
stos
aaa
dec
cmp
lds
push
fdivrs
lcall
mov
cmpps
xchg
mov
fwait
ret
rcr
lret
orb
fnsave
mov
enter
sub
xchg
push
insb
repnz
cmp
add
les
fxch
into
xchg
movsb
xor
cmpsl
mov
ror
inc
ljmp
loopne
addr16
xlat
ja
addr16
push
dec
dec
inc
or
or
dec
mov
inc
mov
add
scas
push
test
ds
scas
in
cltd
pusha
aaa
push
cmp
inc
mov
jl
sbb
or
negb
push
cmc
mov
sbb
enter
dec
sub
rep
test
adc
mov
je
push
insl
aad
ret
jbe
bnd
ficomps
mov
or
dec
inc
imul
pop
mov
jo
orb
inc
xchg
mov
shl
jmp
test
jmp
jp
loope
cs
rclb
cmp
out
ret
call
sbb
xchg
adc
and
ljmp
mov
call
out
icebp
and
stos
je
test
jg
jp
dec
scas
xchg
lcall
mov
xchg
dec
mov
aad
or
adc
adc
jmp
xor
xchg
das
or
outsl
repnz
jo
iret
les
inc
dec
xchg
pop
pop
les
cmp
mov
mov
mov
je
jp
dec
pushf
mov
lret
fisubrs
stos
std
mov
das
or
shl
xor
jp
lods
or
mov
movsb
pop
cmp
adc
sbb
mov
dec
dec
xchg
add
int
jg
cmp
ss
cmp
add
push
add
cmp
cwtl
pushf
mov
pushf
xor
inc
addr16
cmp
out
scas
mov
push
or
out
fisubrs
icebp
jl
mov
dec
int
std
fists
stos
inc
fadd
lcall
nop
jb
out
ja
sbbl
ret
repz
shrb
and
lea
sub
aaa
inc
std
sbb
js
sbb
mov
daa
xor
stc
iret
in
cltd
insl
test
xchg
xchg
out
mov
dec
pop
sbb
mov
dec
jl
dec
sarb
cwtl
sarb
dec
insb
jne
add
and
add
mov
popa
add
pop
sar
js
popa
fsts
arpl
mov
ds
aam
ret
int
add
pop
sbb
push
subb
stos
sub
jb
jno
xor
xchg
sbb
sub
xor
xchg
xchg
lea
imul
cmp
fldcw
frstor
faddl
outsl
dec
jecxz
stc
les
sarl
add
xor
mov
xchg
sub
aas
hlt
aam
outsb
test
enter
sbb
sub
pop
in
inc
cmp
jmp
mov
cli
jno
mov
mov
jnp
test
sbb
dec
mov
orb
icebp
sbb
mov
fimuls
rorl
hlt
adc
sbb
push
xor
jp
dec
xor
inc
push
xchg
aad
icebp
fs
jg
lahf
dec
dec
imul
add
mov
xchg
int3
mov
xchg
in
or
mov
mul
scas
adc
decl
mov
sub
xor
pop
cltd
pushf
adcl
in
jmp
pop
pop
test
dec
inc
inc
loop
imul
xchg
test
inc
cltd
insl
lods
fwait
push
mov
aad
into
mov
ds
arpl
mov
test
pcmpeqb
or
jno
or
ja
rorl
and
sar
xchg
in
adc
lahf
xchg
dec
pop
lods
cmpsb
mul
jge
daa
fimull
pushl
sbb
test
test
mov
and
js
int3
arpl
cmp
outsl
ds
inc
leave
bound
pop
in
mov
push
loope
or
femms
mov
es
inc
pop
loop
push
mov
jl
jp
cmpsb
inc
decl
xor
mov
daa
push
subb
add
mov
lock
fnstenv
add
out
movsb
sub
cmc
or
mov
dec
jns
xchg
xchg
cmc
dec
lds
pop
adc
xor
fchs
repz
pop
mov
xor
fstpl
mov
in
lds
out
or
lcall
push
lcall
or
xor
push
in
ss
push
in
ljmp
leave
lahf
ds
xchg
lret
add
sub
lds
jp
lods
icebp
std
gs
movsl
pop
mov
sbb
push
pop
cltd
cmc
jle
mov
and
jae
mov
fcoms
out
dec
shrl
push
popa
filds
pop
push
dec
dec
or
das
push
outsl
outsb
push
cli
xor
std
ret
cltd
xchg
mov
pushf
dec
mov
stos
xchg
mov
push
add
sbb
push
xor
imull
dec
in
daa
xor
jbe
lods
adc
int3
mov
movsb
int3
loopne
ret
xchg
inc
rcl
sbb
sbb
loop
aaa
jne
mov
lea
in
xor
sbb
pop
add
lret
out
pop
inc
mov
xchg
fsubrl
push
dec
cmpsl
add
leave
dec
adc
xor
fcoml
add
xor
push
adc
pop
scas
movsb
movsl
add
sub
mov
xchg
sub
or
aas
loop
arpl
pushf
movsl
sbb
sahf
add
int3
fistps
jb
jns
fdivp
xor
pop
mov
ffree
cmp
int3
fwait
and
in
mov
lds
push
mov
mov
lahf
faddl
xor
aas
pop
mov
fisttpl
out
mov
add
adc
imul
fildll
cli
and
jecxz
mov
mov
or
xchg
in
mov
popf
push
adc
xchg
repz
test
ja
and
int3
xchg
add
or
fld
xchg
lods
lock
mov
fidivl
neg
sub
sti
cwtl
mov
mov
push
fs
mov
fildl
jl
pop
repnz
sbb
add
mov
out
mov
in
xor
fcoms
xor
in
test
sub
sub
inc
repnz
sbb
into
out
inc
jo
jbe
mov
push
push
xchg
enter
mov
fwait
fwait
pop
jl
rcr
stc
mov
sub
adc
xchg
cld
jmp
lock
and
cmp
xor
sbb
ds
es
mov
lea
les
movsb
sti
out
xor
aaa
scas
bound
popf
pop
fwait
arpl
inc
leave
or
xor
xchg
jnp
dec
into
jmp
loope
add
mov
adc
pushf
addr16
xchg
inc
cltd
cmpsl
int
pushf
aam
in
mov
lcall
fidivrl
adc
cmpsl
adc
imul
int
leave
push
adc
iret
adc
inc
xor
je
push
xor
test
std
and
call
push
mov
lds
ret
xchg
cwtl
add
mov
add
mov
scas
sub
pop
fistl
orb
dec
fsts
jl
dec
mov
popf
xor
fstpl
shlb
push
sub
je
icebp
sbb
lds
mov
adc
inc
push
push
stos
mov
xor
iret
dec
mov
in
jae
sbb
lods
daa
dec
cmp
pop
lea
jae
add
sbb
cmp
sbb
mov
sub
fdivrl
push
mov
lock
cmp
cmp
addb
mov
shrl
sbb
js
xor
cmpsb
mov
fstpl
or
mov
filds
or
mov
mov
push
mov
daa
mov
push
sbb
lods
mov
mov
adc
and
stos
adc
jmp
jl
inc
jb
jle
js
xchg
mov
dec
xchg
add
jb
add
cwtl
aaa
jl
fimuls
inc
jns
add
mov
das
lock
fildl
mov
xchg
stos
cwtl
adc
mov
cmpsl
into
cld
je
mov
adc
push
xor
aaa
adc
rorl
into
repz
sar
add
cmp
inc
scas
mov
sbb
xor
fs
dec
add
adc
xor
lock
add
hlt
subl
and
inc
mov
leave
in
xor
xor
push
pop
addr16
push
pop
cmpsl
dec
sub
pop
pushf
xchg
cmp
fidivl
add
andb
mov
lret
sub
pop
mov
jp
popa
cmpsl
std
ja
push
and
sarl
xchg
dec
ret
dec
mov
xchg
test
sub
fsubp
clc
mov
fwait
popa
pop
dec
lods
jmp
push
jno
jns
ret
insb
or
adc
and
imul
mov
daa
push
push
push
icebp
cli
clc
fsubl
mov
mov
mov
jge
addl
fabs
sub
mov
mov
add
and
mov
ret
outsb
and
push
cmp
cmp
cmp
ret
in
int3
and
shrl
mov
pop
pushf
sub
xor
jecxz
mov
jle
push
push
cmp
ss
aam
divl
lahf
inc
sbb
xor
jmp
lods
add
dec
mov
movsl
leave
loopne
mov
fbstp
xor
adc
cmpl
lahf
sbb
and
fs
cmp
add
clc
loopne
into
jp
test
push
and
std
sbb
jns
movl
adcb
jp
xchg
lds
mov
mov
imul
pop
sub
dec
inc
movsl
sbb
imul
xchg
inc
cli
fbstp
inc
sub
jge
dec
mov
call
cmc
jno
sahf
mov
lds
inc
add
int
adc
mov
xchg
rcr
cmp
sbb
jecxz
or
xchg
repz
lods
out
std
push
test
cmpl
xchg
pushf
lds
pop
test
mov
insl
ljmp
call
mov
cmp
dec
sub
xchg
push
push
and
out
fisubs
dec
cmp
cmp
daa
mov
mov
imul
xchg
cmpsb
fisttpll
mov
or
rol
int
cmpsb
stos
test
psllw
cmp
mov
mov
jo
jne
pop
dec
jl
xchg
pop
aad
inc
aam
jnp
cli
inc
cwtl
popf
sbb
arpl
int3
cmp
push
jo
push
pushf
inc
fcompl
scas
xchg
mov
xor
fcompl
mov
pop
dec
pop
mov
sbb
and
adc
stos
xor
mov
stos
int
push
fsubl
add
addr16
daa
mov
xchg
jo
push
je
dec
mov
or
pop
pop
jne
mov
jle
cmp
push
jnp
sbb
mov
out
aaa
sarb
and
xchg
push
or
stc
aaa
les
mov
jne
jns
cmp
ds
dec
out
push
xor
lock
jecxz
or
imul
in
pop
enter
test
mov
jg
mov
cltd
cmp
xchg
movsl
push
iret
movsl
lock
push
dec
fs
adcl
mov
lea
mov
pushf
das
sbb
pop
dec
aam
cmpsb
mov
push
loope
xchg
lods
inc
sbb
ljmp
data16
in
inc
cs
mov
push
repnz
push
and
mov
mov
les
inc
or
jle
mov
or
push
push
les
sbb
inc
aaa
pushf
push
lods
repnz
fsts
pop
ds
xchg
sbb
mov
jb
hlt
cmp
daa
mov
cmp
mov
and
xchg
rcrb
jp
lea
ljmp
lds
lods
inc
hlt
ret
push
xor
repnz
rolb
mov
pop
out
fisubl
stc
cmp
push
mov
push
andb
gs
fidivrl
cmpsl
jb
shlb
mov
fistl
xchg
js
scas
push
cmc
pop
xorb
pushf
pop
js
jmp
ficoms
mov
js
xlat
adc
daa
insb
aaa
test
aaa
push
pop
divpd
fstpl
jge
jmp
dec
pop
sbb
popa
xor
xchg
fst
cltd
inc
js
mov
xchg
jle
sub
pushf
pop
pusha
mov
and
jns
in
inc
mov
pop
out
fistl
mov
mov
add
mov
cmpsl
dec
fs
xchg
out
sub
or
aas
xchg
dec
push
push
inc
popa
mov
mov
jmp
outsl
push
sub
lea
das
subb
sub
xchg
adc
imul
mov
call
jge
mov
jae
nop
rcll
mov
sbb
std
push
js
nop
add
pop
pop
fsts
pop
mov
add
fildl
ja
sub
icebp
rcr
xchg
lahf
movsl
andl
sti
pop
fidivrs
arpl
mov
shll
test
add
push
sub
push
pop
lods
sub
ljmp
lcall
pop
add
jbe
scas
lods
jmp
or
sub
ljmp
inc
notb
into
sub
pop
mov
or
scas
sti
ljmp
push
dec
icebp
jnp
cs
cs
out
xor
lods
jmp
push
imul
cmpsl
fimull
jbe
insl
outsb
push
loopne
int
cltd
jns
mov
inc
ss
cmp
xor
adc
jns
jne
arpl
pop
imul
and
movsb
sub
cmp
xor
cs
xchg
sbb
repnz
outsb
sbb
push
pop
out
jns
jo
scas
popf
cmp
dec
xchg
or
mov
fstpt
out
jl
xchg
push
and
std
popa
lods
in
jle
icebp
push
sub
cmp
out
stc
and
mov
and
xchg
jbe
cltd
cld
sbb
lea
adc
jmp
js
mov
movsl
ficoms
xor
enter
stos
xor
mov
jp
adc
stc
or
sbb
sahf
fiaddl
mov
cs
mov
dec
push
arpl
fdivp
xchg
adcb
mov
xchg
pop
xchg
cli
ret
test
dec
inc
mov
cmpsl
add
mov
mov
push
cmpsl
and
arpl
mov
and
addr16
and
out
push
movsl
push
xchg
add
dec
dec
cmpsb
and
xchg
sub
ficomps
mov
negb
lcall
arpl
scas
mov
jbe
cmpsb
xor
in
sub
test
mov
or
orl
and
fwait
cmp
xlat
cwtl
mov
arpl
xor
cmp
mov
cli
in
pop
in
loopne
sbb
mov
ja
dec
sub
inc
imul
scas
roll
test
pop
xor
in
stos
add
mov
sub
xchg
pushf
push
and
repz
test
sbb
andl
movsb
icebp
js
fcoml
adc
push
insb
lods
lea
sbbb
je
cmp
fisubs
inc
fs
jne
imul
jnp
adc
cmp
and
inc
xchg
into
pop
adc
cmpsl
or
inc
std
jl
dec
fcmovne
iret
push
inc
cwtl
sbb
fs
push
jmp
inc
ret
cmp
cmpsb
push
out
ds
call
add
cmp
dec
fldt
outsb
inc
iret
lcall
out
inc
sub
ds
jle
or
mov
mov
outsb
out
xchg
adc
push
sub
push
push
dec
mov
jg
pop
insb
adc
add
cltd
std
daa
inc
dec
add
jecxz
cmpsb
inc
lcall
aam
push
dec
fcmovnu
aam
and
dec
and
cltd
dec
jnp
push
sbb
push
cmp
insb
in
add
sarl
inc
sbb
xor
jg
or
test
sbb
dec
imul
lea
cmp
mov
outsb
int
mov
pop
and
dec
xchg
mov
push
push
push
mov
int3
popa
call
xor
xchg
push
cmp
pop
aam
jno
cmp
and
leave
outsb
xor
jbe
or
or
lock
dec
jecxz
sub
jb
test
cmc
arpl
cs
rcrl
mov
and
jecxz
xor
fs
push
mov
subl
rorb
lock
xchg
outsb
sti
mov
cmpb
sub
xchg
mov
test
aaa
orl
cld
lods
xchg
or
dec
popf
jmp
dec
push
out
sbb
fs
js
aaa
sbb
xchg
in
gs
pop
xor
sbb
pushf
adc
lock
dec
std
push
icebp
jnp
loope
imul
adc
dec
sar
inc
cmp
jns
divl
xlat
rcrl
sbb
hlt
les
pop
nop
rorb
xor
test
push
mov
imul
lock
repnz
les
in
adc
mov
addr16
inc
cmp
orb
lcall
pop
movups
cltd
jns
lahf
sub
cmp
test
add
and
ss
popw
loope
repnz
push
iret
js
cmp
in
adc
or
push
enter
cwtl
jle
in
jmp
cld
hlt
jb
ljmp
cmp
adc
cltd
push
out
dec
stos
out
cs
shlb
push
mov
jp
pusha
leave
shl
mov
adc
cli
dec
daa
and
repz
nop
mov
pop
iret
xlat
pop
jno
jb
sbb
push
negb
cmp
or
dec
dec
movsl
jmp
mov
hlt
mov
icebp
pop
jp
test
out
enter
sub
in
int3
mov
js
jae,pt
cmpb
test
mov
pusha
hlt
add
leave
push
mov
test
lods
mov
in
jmp
pop
aas
mov
js
shlb
dec
aad
xchg
sbb
inc
mov
adc
test
out
scas
jb
xor
jmp
xchg
in
dec
dec
xchg
pop
ss
pop
sbb
ffree
cmp
pop
aad
mov
lret
add
inc
dec
jge
add
mulb
movsl
lods
negb
xchg
mov
addr16
push
mov
jle
mov
jle,pn
nop
aas
mov
dec
ret
jge
adc
mov
lock
mov
or
scas
rcrb
and
mov
sub
mov
push
test
jle
popa
imul
fmull
int3
sub
mov
fiadds
sarl
gs
xchg
push
lea
mov
mov
lds
es
jge
fsubr
sahf
and
sti
sti
inc
insb
inc
push
shrb
mov
leave
xlat
test
adc
cmp
sti
in
cmp
adc
jns
mov
dec
lcall
or
and
inc
test
stos
mov
imul
pop
cwtl
pop
inc
cwtl
movsl
data16
pushf
mov
cmpsb
test
adc
int
or
loope
loop
or
hlt
and
mov
aam
cwtl
es
mov
and
fs
insb
inc
enter
mov
and
jge
add
pop
popa
sub
js
mov
mov
inc
or
dec
mov
lcall
mov
lret
xchg
jbe
sbb
xlat
dec
mov
es
mov
mov
mov
mov
fs
jmp
shl
ss
mov
frstor
je
dec
in
clc
mov
inc
pop
xchg
xor
sbb
cltd
nop
iret
mov
fwait
xor
lods
lahf
negl
adc
pop
cmpsb
in
pop
loopne
adc
loope
jbe
dec
cmp
fsubr
aam
push
mov
loop
mov
aas
pop
std
movsb
popf
loop
loope
xchg
xchg
xorb
xor
xor
stos
jle
ljmp
mov
aas
into
cmp
jge
imul
xchg
cmp
dec
insl
jns
mov
push
arpl
cwtl
add
fisubl
rcr
or
xchg
and
loop
loope
jp
mov
pop
out
fnstcw
into
or
or
fcompl
inc
push
mov
aad
adc
mov
cmc
aaa
dec
xor
xchg
pop
into
arpl
sbb
and
or
mov
jns
fimull
loopne
and
bound
xchg
sbb
sub
mov
mov
mov
aad
cmp
cltd
sub
mov
iret
dec
out
fwait
sub
adc
push
mov
pop
jle
sbb
sbb
or
je
cwtl
and
leave
mov
jp
adc
dec
rorl
loope
xchg
leave
xor
pop
ret
jmp
call
enter
mov
add
cwtl
testl
test
cwtl
cmp
movsb
shll
notb
inc
pusha
fucom
cli
cmpsl
lret
jnp
inc
mov
movsb
cmp
sub
dec
popa
insb
enter
mov
dec
das
call
dec
stc
jae,pt
nop
loop
nop
dec
and
in
inc
cltd
dec
mov
ds
jle
repnz
push
movsl
sub
lock
fistpll
je
nop
mov
test
inc
cld
add
add
adc
lods
inc
xor
add
in
fldt
repz
jo
xlat
pusha
or
cmp
daa
aaa
add
dec
dec
pop
cmpsb
pushf
scas
and
cmp
xchg
and
mov
dec
sbb
out
cmpsb
in
or
shl
ja
and
lcall
push
mov
sub
jecxz
lock
sbb
add
aam
sbb
ljmp
and
lea
ficomps
dec
mov
push
jo
dec
loop
shll
mov
jmp
test
movd
pop
cmp
add
lcall
les
loope
lods
xchg
cld
cmp
shlb
jo
xchg
shlb
pop
inc
loope
mov
or
add
lret
insb
mov
idivl
mov
dec
je
in
fldl
sbb
or
cld
mov
pop
mov
popf
cmp
movsl
sub
cmp
pop
mov
mov
test
cs
mov
adc
xor
loop
hlt
scas
lret
std
inc
cwtl
sub
push
stc
jo
mov
mov
jae
out
fildl
scas
adc
mov
mulb
dec
testl
int3
lahf
in
adc
xchg
in
mov
rcll
scas
and
xchg
scas
mov
enter
xor
jne
push
xchg
jge
cmp
mov
add
leave
addr16
jne
xor
fs
mov
xchg
roll
mov
xor
pop
xlat
mov
cli
push
rcr
sub
jns
sbb
mov
or
ja
and
psubsb
mov
cmp
lock
inc
aas
outsl
cmp
sub
insl
bound
and
in
test
subl
cmp
jo
jle
jp
ficomps
int
cmpsb
rorb
mov
rcrl
loope
xchg
aas
and
ss
jo
mov
fs
cmp
inc
adc
push
shlb
cmpsl
hlt
cmpsl
int3
mov
rolb
mov
dec
lds
mov
emms
stc
rcrl
dec
xlat
test
and
push
ja
dec
sub
mov
arpl
inc
in
dec
xor
inc
int
sbb
in
xchg
nop
push
sbb
dec
inc
adc
dec
pusha
clc
mov
in
clc
inc
jae
sbb
add
xchg
mov
push
shll
fbstp
lret
int3
lcall
outsb
clc
cmpl
push
pop
pusha
pop
icebp
dec
jecxz
pop
inc
jl
xor
fdivr
sbbb
pop
mov
cmp
rolb
sub
lahf
sbb
dec
cmp
mov
test
mov
packuswb
popf
fisttpl
inc
and
cmp
js
xor
repz
xor
sub
sarb
mov
ja
loop
cmp
int3
div
enter
fcoml
cmp
mov
inc
push
call
movsb
add
mov
int3
lea
fstpl
cmp
mov
and
repnz
sbb
into
xchg
call
stos
arpl
int3
insb
inc
add
mov
in
addb
mov
out
or
jae
cs
je
movsl
mov
leave
insb
notl
nop
mov
xor
outsl
lods
mov
stc
push
fidivrs
testl
push
mov
inc
pop
neg
loope
mov
fs
gs
dec
mov
push
and
cltd
push
test
mov
pop
mov
xchg
in
lret
xchg
mov
jno
out
pop
mov
pop
sbb
out
mov
sbb
or
es
mov
lahf
mov
fwait
pusha
push
lea
push
daa
jae
push
in
sahf
lahf
adc
push
aad
sub
inc
adc
jg
aad
fs
leave
cmp
lret
inc
adc
sub
add
js
out
rcrb
pop
stc
aad
jns
aaa
and
inc
sbb
ror
jle
lods
and
jecxz
cs
sbb
mov
mov
xor
hlt
orb
inc
adc
jno
test
ss
jp
fwait
mov
ret
cmp
pop
cmp
cmp
cli
push
cmp
jmp
inc
in
fiaddl
dec
in
dec
adc
rcll
dec
pop
and
popf
xchg
xchg
push
adc
andl
repz
fwait
pop
xor
stos
std
adc
xor
add
inc
adc
mov
into
das
adc
push
fadds
shrl
repnz
aaa
nop
stos
sar
mov
push
addr16
lret
icebp
das
dec
sbb
push
out
cmp
sbb
mov
xor
add
or
cmp
enter
mov
lods
je
mov
mov
mov
mov
je
adc
orb
jbe
jnp
aad
and
mov
pop
adc
mov
std
sti
push
xchg
cmc
out
or
fwait
pusha
cmpsl
sub
out
or
insl
clc
and
dec
incl
pop
jmp
sti
rcrl
divl
xchg
add
cmp
mov
cmp
in
adc
dec
or
out
in
test
icebp
pusha
fsubrs
xor
adc
add
faddl
and
cwtl
cmp
sti
mov
cwtl
xchg
cs
inc
push
mov
or
or
inc
faddl
pushf
push
jle
addr16
pop
arpl
mov
push
push
fwait
mov
mov
js
mov
dec
add
into
stc
sti
in
push
sub
icebp
in
call
out
scas
shl
dec
in
icebp
and
hlt
inc
adc
mov
xchg
cmpsl
gs
xor
shll
jnp
adc
ret
xor
das
push
mov
jp
jge
loope
mov
jmp
dec
fsts
cmp
mov
push
push
call
sbb
inc
xchg
sbb
lods
mov
insl
sti
outsl
dec
lock
sub
xchg
inc
clc
sti
loop
jl
or
or
dec
std
mov
out
dec
push
sbb
orb
in
pushf
lds
ss
dec
movsb
adc
hlt
out
add
fdivs
push
jecxz
gs
loop
int
pop
adc
fcompl
add
xlat
sbbl
cmp
mov
in
movsb
fst
mov
out
and
mov
mov
imul
mov
push
fsubrs
push
mov
pop
adc
arpl
addb
es
repz
lret
adc
cmp
scas
lods
leave
add
add
shrl
xchg
xchg
lea
mov
adc
or
inc
sub
mov
adc
jl
repz
dec
mov
mov
xor
sbb
ss
add
inc
mov
int3
cmp
es
pusha
aam
shlb
into
outsl
popa
stos
dec
mov
rolb
cmpsb
aas
add
notl
cmp
outsb
fadds
xor
sub
fmull
cmc
cwtl
and
shrd
inc
in
adc
mov
mov
add
fdivrs
test
fistps
xor
mov
sahf
mov
fs
adc
frstor
pop
call
cltd
fidivl
in
and
xor
dec
add
imul
and
mov
xchg
mov
jmp
and
jge
sub
mov
and
std
iret
das
dec
jnp
repnz
stc
rcrb
inc
pop
dec
lahf
lods
mov
pop
test
cld
pop
jno
sub
and
xchg
mov
enter
sbb
adc
sbb
mov
jmp
xchg
inc
out
inc
leave
sub
push
mov
mov
ret
cmpl
fstpl
ficompl
mov
dec
push
xchg
sbb
shr
clc
scas
mov
es
xlat
loop
adc
sti
aad
orl
es
rcll
movb
stc
jnp
in
iret
adc
mov
jnp
xchg
pushf
mov
adc
test
test
mov
mov
or
mov
cmp
xor
sti
lret
push
pushf
repz
aaa
fdivs
xchg
jge
enter
addr16
and
sbb
adc
pop
pusha
pop
xchg
aam
dec
jno
out
push
repnz
fwait
mov
dec
arpl
cmpsb
lret
adc
sbb
xchg
aaa
mov
sub
cwtl
mov
jno
fdivr
adc
aad
mov
sbb
jle
mov
test
shl
add
pop
loope
lahf
mov
push
movsb
cld
mov
and
mov
sub
xor
push
enter
jmp
xor
stc
xchg
cltd
daa
mov
ret
push
in
cmpsl
jb
int3
call
mov
shl
cmc
jno
pushf
call
mov
pop
fnsave
mulb
cld
lods
xor
movsb
add
mov
xor
cmp
es
and
das
mov
xor
sbb
clc
mov
or
out
in
push
into
mov
dec
dec
shlb
mov
bound
daa
xor
lret
pusha
add
cltd
aad
or
push
repz
xchg
hlt
ljmp
mov
das
ficomps
out
push
mov
sub
sbb
xor
ror
cld
popa
int3
mov
les
push
sub
mov
mov
test
loope
jo
mov
add
mov
lea
add
pop
xchg
xor
lds
xor
jle
sub
xor
js
cs
ss
xchg
mov
xor
scas
rorb
out
incb
xchg
out
xor
add
push
test
xchg
and
mov
sub
orl
push
loop
frstor
cli
or
or
addr16
jnp
adc
xchg
dec
ss
pop
push
push
cltd
cmp
mov
dec
and
push
mov
leave
push
int3
scas
test
repz
mov
fisubrs
pop
xor
add
xchg
ficoms
fadd
pop
or
sbb
xor
xor
sub
in
aam
jno
xlat
add
xchg
xchg
neg
leave
mov
cs
js
push
cmp
push
xchg
add
in
insb
insb
pop
jecxz
test
call
xchg
ret
xchg
and
fists
jbe
sbb
sub
mov
jl
xchg
add
pusha
sbbl
dec
add
mov
idiv
dec
mov
push
ficoms
or
cmpsb
lret
mov
pop
inc
js
xchg
stos
int3
nop
test
movsl
das
leave
fucomp
push
push
das
push
cmp
pop
mov
mov
rol
push
cmp
ret
nop
pop
insl
mov
adc
xlat
jg
push
push
mov
call
in
hlt
in
jns
adc
xor
push
mov
test
cmp
fidivrl
shll
outsl
jne
cmpsb
add
lahf
xchg
mov
arpl
into
xchg
dec
mov
sub
sbb
scas
adc
cli
add
outsl
dec
aaa
sbbl
repz
cmpsl
outsl
stos
dec
adcb
cmp
int
lock
inc
mov
bound
lret
push
inc
fiadds
dec
test
lcall
cld
sbb
fistl
jne
loopne
push
lods
sti
out
call
stc
je
flds
add
subb
leave
push
notw
call
out
add
jbe
enter
push
aaa
lret
fst
adc
jg
xor
les
out
dec
popa
mov
xor
mov
lods
pop
sbb
iret
lea
cmp
dec
scas
pop
jb
jg
xor
sti
repnz
test
scas
sbb
sbb
popf
sub
fdivrs
scas
lea
xchg
pop
lcall
adc
push
ljmp
fisttpll
cmpsl
jns
dec
jae
add
add
pop
xor
mov
mov
std
or
mov
pop
mov
xchg
adc
mov
push
add
js
fisttps
push
adc
dec
xor
dec
fiadds
jg
fwait
push
mov
fcom
xchg
stc
xchg
mov
ret
jmp
lea
rorb
hlt
adc
lock
push
into
roll
sub
pop
pop
ret
inc
in
lcall
xor
inc
pop
sbb
cltd
test
inc
lret
or
test
xor
dec
rorl
cmpsl
aaa
ljmp
mov
mov
rorb
insb
inc
pop
and
cli
fnsave
sub
or
adc
mov
gs
cmp
or
shrl
je
nop
mov
loopne
pop
push
cmpb
sub
aad
xchg
hlt
decl
add
ss
loop
add
or
je
lret
sub
sti
inc
cmpsl
or
fnstenv
js
add
in
insl
lods
les
cmp
xchg
loope
test
xchg
addb
xor
mov
out
xchg
cmp
pop
inc
test
cmpl
and
mov
insl
cwtl
into
mov
shlb
xor
in
int3
push
call
xchg
cmp
sahf
imul
out
mov
in
adc
add
mov
call
jne
add
jl
pop
dec
inc
push
test
pop
cmp
cwtl
pop
mov
popf
iret
fsts
fdivs
ret
aaa
call
cmc
cmp
fsubrs
mov
or
jmp
out
pop
cli
sbb
in
jecxz
xchg
mov
dec
inc
icebp
test
mov
sub
aas
sub
ror
inc
cld
cld
in
out
adc
packsswb
lret
and
repnz
xchg
fnsave
out
fs
addb
jb
mov
ror
sahf
cwtl
sbb
mov
add
mov
sbb
push
inc
insl
mov
mov
or
mov
int3
push
mov
xor
pop
xchg
icebp
xorl
dec
xchg
jp
cmpsb
and
mov
jge
pushf
pop
and
das
data16
repnz
jge
or
add
xchg
xor
mov
pushf
mov
sbb
xchg
insb
rcll
arpl
mov
repz
add
cs
sub
mov
cmp
insb
adc
mov
mov
arpl
ffree
stos
sub
js
inc
aaa
lcall
sarl
imul
fisttpl
push
loop
int
xchg
push
xor
arpl
dec
mov
and
mov
imul
and
pop
pop
cmp
icebp
mov
xlat
pushf
les
jno
mov
stos
ficoml
cli
shlb
shll
ds
sub
popf
xchg
ss
dec
data16
pop
icebp
add
push
cmpsl
cmp
and
or
xor
dec
xchg
push
rolb
sub
mov
ja
or
or
inc
aas
dec
cmp
jnp
lret
out
out
mov
xchg
mov
pop
mov
outsb
subb
add
push
and
adc
cmc
push
and
leave
xor
cmpsb
fcom
scas
repnz
fbld
inc
push
andb
int
jns
aad
lock
and
add
fmulp
cmp
jge
xorl
and
lock
sti
lcall
mov
and
inc
std
add
cmpsl
xchg
std
js
xchg
rcll
daa
inc
fwait
dec
and
cmp
adc
sub
inc
ds
inc
sbbb
add
pushf
lods
test
jnp
xor
and
and
cs
xor
mov
dec
aad
inc
loopne
xchg
arpl
fldt
sbb
pushf
shll
dec
xlat
and
mov
repnz
stos
adc
clc
dec
xchg
mov
test
aaa
mov
mov
testb
call
mov
mov
cmp
lret
dec
pop
data16
js
ror
dec
mov
cld
sbb
mov
sbb
pusha
sub
add
stos
or
lea
mov
cmp
in
mov
std
inc
cmp
dec
jl
sbb
mov
sub
pushf
dec
inc
out
inc
xor
xchg
jno
dec
pop
cmp
rol
xchg
cmp
jp
movsb
in
push
and
pop
sub
fimull
daa
inc
out
jbe
add
addr16
xor
aam
stos
push
and
jmp
in
das
mov
sub
jp
lret
mov
push
data16
xchg
mov
das
fidivl
mov
push
adc
xor
cmp
lods
add
inc
int
mov
div
nop
nop
shl
adc
cmp
push
lret
ss
xchg
sub
cmp
or
mov
pop
and
adc
adc
in
jae
dec
cmp
dec
push
sbb
in
negb
rcll
and
push
scas
and
mov
add
mov
push
out
xchg
cltd
out
ret
leave
jecxz
icebp
scas
dec
clc
insl
ret
or
mov
insb
ds
inc
mov
mov
or
in
cs
push
dec
inc
jp
pop
int
and
sub
lahf
repnz
ss
outsl
out
pushf
in
pop
pushf
jp
pusha
icebp
cmp
or
adc
xor
imul
daa
in
inc
pop
out
out
push
pushf
mov
pop
cwtl
faddl
sbb
fucomi
and
and
or
xor
inc
and
fs
test
push
inc
inc
js
xchg
cltd
mov
or
cltd
ror
mov
stc
sahf
add
pushf
mov
xor
leave
cmc
enter
mov
data16
sti
cmc
in
int3
das
pop
fcmove
into
push
jae
xchg
je
xchg
mov
call
or
push
jl
jns
push
enter
push
pop
sub
dec
js
jge
push
rcll
pop
inc
pop
and
or
psllw
push
icebp
fdivrs
scas
add
mov
inc
jae
stc
jno
fsub
in
into
das
xor
out
lret
mov
adcb
sbb
call
dec
in
movntq
fmuls
mov
out
mov
aaa
repnz
lods
or
enter
inc
inc
adc
ss
das
fidivrl
out
and
adc
adc
jp
out
fildl
lret
outsb
out
mov
mov
adcb
out
jbe
fildll
lret
sti
ffreep
sbb
outsb
imul
js
inc
jmp
mov
dec
or
sbb
and
pop
xchg
inc
xor
clc
in
leave
in
mov
mov
push
cmpsb
add
dec
mov
sub
or
inc
outsl
push
popl
sub
mov
lods
jo
mov
xlat
repz
cmp
out
in
in
xchg
pushf
lea
aad
shrl
mov
mov
cmp
pop
lds
jp
bound
xchg
adc
xor
jbe
dec
mov
loopne
mov
add
insl
jg
xchg
pop
push
push
fadd
mov
add
xchg
and
testb
je
adc
sbb
mov
jge
iret
mov
or
fdivrs
outsl
cs
fwait
mov
pop
mov
mov
into
cs
inc
mov
and
imul
fidivs
mov
popf
lcall
das
sub
sub
imull
lea
call
out
insl
mov
cmpsb
je
clc
dec
test
loop
mov
lret
scas
push
push
loope
cmp
imul
mov
lret
cmp
ss
test
pop
repnz
call
add
jb
inc
insl
ret
adc
fcmovnu
dec
xchg
arpl
sub
jge
mov
mov
push
int
test
mov
adc
mov
rorl
xor
pop
aad
add
vphaddbw
cs
or
jno
or
sub
mov
test
cwtl
push
mov
dec
insb
in
xlat
add
rcl
adc
rorl
nop
aas
pop
imul
cs
lret
jl
gs
push
pop
cmpsl
movsl
mov
dec
jge
mov
sar
loopne
cs
mov
aad
clc
jnp
mov
mov
cmp
fs
cli
mov
xchg
jecxz
xchg
rep
adc
aam
sbb
insl
cmp
xor
mov
mov
dec
pop
dec
adc
add
jb
mov
mov
inc
pop
outsb
inc
ja
daa
adc
shlb
adc
cwtl
lea
dec
loopne
lcall
cmpsb
cmp
or
jmp
out
test
rclb
sbb
lret
dec
mov
icebp
mov
mov
ss
stc
mov
xor
clc
std
mov
push
nop
fmull
movsb
cmp
xchg
jg
mov
inc
loop
dec
or
inc
sbb
add
mov
test
inc
adc
push
repz
outsb
ret
and
add
fwait
test
fxch
lds
sti
jl
xor
lods
adc
and
clc
lret
push
in
test
sbb
lret
daa
add
or
mov
or
pushf
mov
xchg
js
stc
daa
sbb
mov
stos
aad
loopne
sbb
mov
mov
repz
xchg
fsubp
insb
mov
mov
in
inc
add
lods
imul
jge
sbb
das
mov
mov
sub
jecxz
push
xchg
dec
in
js
xor
hlt
mov
addr16
pop
pop
test
mov
cmpsb
mov
mov
fwait
subl
push
int
mov
xor
jne
loope
mov
sub
pop
cwtl
mov
xchg
mov
xor
sub
pop
jmp
test
mov
xchg
mov
xchg
xchg
ja
lahf
cmp
sub
jp
aaa
and
mov
push
fstp
and
cmp
mov
sbbb
add
xor
cmpsl
mov
enter
cmp
in
js
and
fwait
lret
ret
inc
push
jno
cld
call
aam
or
cmpsb
mov
mulb
pop
and
mov
cmpsb
aad
jmp
xchg
push
push
ftst
dec
xor
jecxz
cmc
mov
xor
nop
sarb
and
cmp
adc
jae
call
aaa
outsb
sbb
sbb
lods
movsb
pop
popl
fisttpl
sbb
mov
or
cmp
mov
mov
fidivl
mov
outsl
test
enter
mov
mov
subl
repnz
pop
add
adc
adc
cli
jne
ljmp
shll
aam
lock
xor
jb
les
or
add
lds
dec
mov
repnz
add
cmpl
outsl
pxor
lds
ja
inc
xchg
cld
sub
stos
mov
or
adc
mov
adc
inc
lret
es
mov
dec
out
mov
xor
les
clc
fstpl
mov
mov
add
sbb
mov
loope
cs
clc
push
daa
mov
xor
cmpsl
repnz
push
fidivrs
gs
les
loop
sub
ds
mov
insl
mov
repnz
xchg
mov
lock
mov
push
into
xchg
call
xchg
pop
int3
jl
or
push
insb
pop
push
or
aas
ret
nop
lcall
insl
dec
xor
out
repnz
jae
stos
sub
lahf
sbb
cmp
adc
rorb
adc
xchg
in
icebp
cmp
out
cmpsl
imul
cld
xor
fnstenv
std
dec
cmc
jecxz
or
cmp
in
adc
xor
sub
mov
aad
outsb
mov
mov
jne
outsb
fsubrs
call
mov
push
mov
in
lret
jg
in
mov
sbb
fcomps
lahf
and
dec
sti
cmp
mov
jle
lret
fldl
ret
test
sbb
sub
data16
push
sbb
ss
inc
into
sub
xchg
lahf
mov
movsl
std
mov
inc
sbb
xchg
aas
add
adc
scas
jne
xchg
adc
inc
sub
inc
and
and
test
mov
mulb
cli
subb
leave
mov
xchg
imul
aad
xchg
inc
adc
push
mov
hlt
in
cld
cmpsb
add
jb
jg
xor
mov
ljmp
mov
jbe
mov
or
js
addl
in
push
push
push
sub
or
into
jmp
add
es
dec
fsubrs
and
cli
add
pop
mov
aas
out
lods
or
stc
bound
mov
mov
pop
out
and
adc
pop
leave
das
push
and
call
xor
scas
adc
imul
jne
add
mov
repz
xchg
or
push
inc
push
jg
shl
xchg
mov
test
mov
sti
push
xor
faddl
pop
out
jp
movsb
or
inc
imul
add
outsl
jecxz
stc
outsb
lock
ja
lret
cmc
or
movsb
mov
cs
ret
clc
fmuls
inc
into
cmp
pop
test
movl
add
insl
je
pop
or
out
repz
adc
mov
inc
dec
xchg
xchg
sub
mov
shlb
in
sub
neg
sbb
clc
iret
add
and
jg
and
pop
cmpsl
adc
add
in
mov
cwtl
mov
cmp
insl
lret
push
fiaddl
add
out
roll
cld
int3
mov
cmp
dec
xchg
in
icebp
bound
lea
js
test
lcall
push
ds
sbb
out
push
ret
mov
int
in
lock
leave
in
cltd
ficoms
jle
fnstenv
les
mov
jns
xchg
push
cmpsl
mov
jb
mov
ljmp
loopne
sub
js
xor
add
cmp
adc
out
repz
cmp
lret
mov
ficoms
push
adc
mov
movsb
popf
daa
pop
scas
and
xor
cmp
mov
cmp
mov
mov
inc
xor
xchg
add
adc
sub
add
fdivr
ds
insl
lret
fnstenv
testl
scas
lock
xor
cmc
pop
push
xchg
pop
pop
popa
out
adc
mov
pop
daa
and
stos
movsb
dec
dec
mov
into
push
ljmp
cltd
xchg
movsb
mov
pop
sbb
repnz
xor
fcoml
imul
daa
inc
adc
xor
push
mov
pusha
or
mov
push
pop
mov
sbb
sub
pop
rorb
push
jne
fs
sbb
adcl
fidivrl
inc
sbb
sbb
mov
jge
or
pushf
cld
jno
mov
jp
push
mov
jo
ret
rclb
pop
dec
push
int3
addl
push
lcall
arpl
pop
das
jae
not
pop
inc
inc
mov
cmp
mov
inc
jne
xor
jg
cwtl
imul
lahf
xor
addr16
xchg
test
cwtl
mov
repz
movsb
mov
jp
clc
and
int
arpl
lock
test
lock
sbb
stos
sub
loop
xchg
lret
cwtl
fdivs
mov
push
sbb
lcall
lea
dec
fwait
shlb
lret
inc
add
orps
filds
xchg
loope
scas
aad
xchg
xchg
mov
sbb
daa
shrl
ret
imul
mov
sahf
out
mov
mov
int
mov
xor
mov
mov
xchg
jp
lea
mov
out
fidivl
out
sbb
push
sub
sarb
xor
xor
jno
mov
add
loopne
out
or
pop
out
mov
xor
shrb
cmp
jge
sbb
or
fs
mov
sahf
rcll
cmp
and
call
out
stos
push
sete
iret
negb
sbb
jmp
cmpsb
pop
dec
jne
mov
nop
sbb
stos
sub
js
pop
sbb
idivl
fsub
in
adc
pop
lods
fcomps
or
shrl
into
push
sbb
enter
and
sbb
data16
push
inc
sbb
lods
fldt
pop
sbb
aaa
in
addl
push
mov
fmul
lret
jb
cld
mov
movsl
xchg
xchg
jmp
mov
fcomps
cld
cmc
faddl
stos
xor
into
or
std
jne
lods
inc
mov
outsl
std
in
pop
fildll
nop
sarl
repnz
mov
or
into
pop
or
sub
mov
cs
psubw
nop
dec
std
addr16
insb
sub
lods
add
test
sbb
lea
and
fmull
inc
mov
push
inc
xor
jns
pop
jmp
int
adc
pop
jecxz
addr16
rcrb
mov
sbb
sbb
mov
inc
sbb
dec
sarb
nop
push
dec
pop
in
push
sahf
divb
adc
mov
adc
out
xchg
popf
inc
daa
mov
fcomip
mov
pop
adc
call
inc
mov
sbb
insb
fcoms
dec
or
mov
jecxz
mov
test
pop
js
and
xchg
cmp
cmp
insb
stos
repz
test
ss
mov
popa
or
add
call
out
lret
cmpsl
xchg
sahf
pop
adc
aas
push
fwait
mov
dec
cmp
hlt
ss
mov
add
ja
xor
lcall
pop
dec
mov
pop
mov
cld
dec
test
cmc
pop
inc
outsl
fmul
stos
inc
or
daa
movsb
ficomps
lret
jns
cmpsb
pop
cltd
das
cmp
cmp
cmp
and
mov
cld
mov
mov
xchg
sub
cmpsl
mov
or
jnp
mov
ljmp
mov
pop
cmp
outsb
inc
push
iret
sub
mov
or
mov
sbb
cli
ss
mov
je
adc
out
pushf
dec
push
dec
cmp
sbb
and
jmp
and
nop
out
jne
sarl
ljmp
cwtl
push
imul
mov
adc
inc
je
xorl
lds
mov
stc
mov
sbb
and
inc
je
in
mov
outsb
mov
scas
adc
and
jns
sbb
dec
lcall
xor
mov
rcrl
clc
scas
lcall
jb
dec
sbb
inc
subb
test
jb
pop
int
cmp
and
mov
push
push
lret
test
sub
mov
xchg
int
push
fs
xchg
bound
int
leave
inc
inc
adc
add
pop
mov
test
clc
nop
mov
out
pop
pop
ljmp
jle
cmp
push
xchg
inc
mov
or
push
xor
fwait
pop
je
ss
mov
fisubrs
xchg
inc
and
sub
xchg
aam
out
mov
push
loope
cmp
loopne
lcall
mov
xor
lret
mov
xchg
frstor
in
scas
push
push
or
jge
push
sub
je
jp
xchg
ljmp
push
pop
cmpsb
mov
mov
xor
pop
mov
mov
mov
mov
jg
sub
and
cwtl
fwait
lods
jnp
in
or
pop
ja
or
cmp
push
loopne
jbe
cmp
and
pop
iret
adc
mov
push
xchg
stc
scas
cmpsb
push
lods
dec
fwait
int3
and
aaa
lds
and
movsl
or
out
in
mov
das
cmc
insl
hlt
ret
cltd
adc
adc
adc
int3
flds
jnp
adc
repz
insb
mov
or
nop
mov
jo
inc
or
jl
adc
jno
fwait
jno
mov
sbb
push
out
aaa
ret
addb
pusha
mov
push
push
cmc
out
aam
mov
cmp
loope
sub
sar
jne
lock
cmc
lret
loope
dec
pop
jge
push
jno
jb
inc
inc
lahf
fs
sub
aaa
sahf
sbb
mov
lods
adc
into
repz
ret
dec
movsl
dec
and
cmpsl
imul
or
andl
insl
popa
ja
dec
dec
sahf
push
push
push
pop
jbe
ja
ljmp
dec
jnp
in
popa
sbb
lea
lcall
inc
or
leave
stos
mov
popl
fadd
sub
push
xchg
fwait
dec
jle
xchg
out
mov
sub
xor
arpl
jle
dec
and
adc
lea
aad
pop
ds
test
mov
xlat
pop
repz
cwtl
repz
cmp
dec
jb
mov
je
add
push
fwait
shll
lahf
loope
cltd
mov
adc
mov
adc
popa
fimull
push
cmp
add
popa
or
ja
aam
cltd
inc
mov
push
mov
nop
inc
test
add
add
mov
pop
xchg
cmp
inc
xchg
sub
adc
dec
sbb
cmp
pop
mov
or
nop
cwtl
cld
jns
mov
add
sub
cwtl
inc
adc
xor
sub
bound
mov
cmp
inc
js
je
dec
in
aam
cwtl
and
das
mov
sub
push
hlt
in
repz
dec
jmp
scas
or
shlb
add
fildl
in
scas
xchg
jge
push
loope
es
mov
aaa
imull
addr16
add
and
jecxz
mov
dec
jp
pushf
dec
adc
pusha
pop
mov
add
cmpsb
out
mov
out
pop
push
fwait
mov
sbb
lods
mov
incl
and
loopne
ljmp
pop
xchg
push
aam
xor
data16
lods
js
int
jb
xor
out
push
pusha
adc
fwait
jo
shll
sub
jo
imul
scas
ss
cmp
fists
fsts
xchg
dec
and
repnz
mov
insb
ds
dec
aam
daa
add
push
xchg
dec
mov
adc
or
jae
hlt
mov
in
jle
ljmp
or
xor
out
arpl
shl
aaa
hlt
insl
aam
xor
add
cltd
decl
dec
jnp
add
lea
pop
cmpsl
cltd
xlat
jmp
icebp
aas
loope
mov
aam
pop
sahf
lret
test
sti
xor
lods
cmp
mov
es
iret
cwtl
test
ret
sub
cld
sub
leave
addr16
xlat
sti
dec
insb
nop
ss
pop
pop
pop
nop
or
mov
push
or
gs
mov
ljmp
push
sbb
cmp
fnsave
movsb
adc
xor
push
xor
lahf
add
push
std
xorl
pop
mov
xor
add
jbe
adc
int3
mov
leave
dec
arpl
jnp
mov
push
jl
in
imul
gs
sub
aaa
add
cmc
fistpl
mov
sbb
je
xchg
lcall
jle
cld
js
push
and
mov
inc
or
mov
inc
sarb
xchg
adc
or
jl
bswap
nop
push
loop
pushf
fwait
xchg
jp
popf
jp
out
cltd
rolb
jno
jbe
push
sbb
lods
jmp
adc
call
int3
push
lock
leave
outsl
scas
xchg
push
inc
fcoml
cmp
or
pop
xlat
lcall
ficomps
fwait
pop
adc
push
sub
push
jb
in
stos
in
and
pop
ljmp
seto
aaa
loopne
ljmp
movsb
pop
lahf
mov
sahf
imul
data16
adc
push
and
mov
mov
inc
cmp
repz
pop
adc
loopne
int
roll
mov
sub
jb
push
lods
jo
and
dec
aam
and
mulb
fcmovne
add
pop
punpckhwd
mov
jmp
or
mov
or
dec
rcrb
jo
mov
push
into
lock
dec
mov
je
xchg
movb
xor
or
out
sub
outsb
mov
xchg
stc
add
enter
adc
sub
dec
shrl
in
xor
lcall
push
in
mov
mov
sahf
inc
mov
jle
and
mov
xchg
js
ret
rol
rol
mov
out
popl
cmp
fildll
inc
add
push
add
sbb
call
inc
push
pop
scas
dec
imul
dec
mov
je
lock
mov
jecxz
add
ja
mull
cmc
dec
es
cli
dec
cli
xchg
lret
fdivl
mov
dec
mov
mov
mov
inc
aam
inc
add
pop
stos
iret
adc
leave
cmp
adc
sub
outsb
xchg
sti
mov
sahf
leave
push
add
cmp
shrb
jo
nop
call
jno
jne
mov
ret
xchg
mov
cmp
push
sub
lock
into
ss
das
and
out
or
sarl
xchg
in
or
and
aam
movsl
in
dec
call
ljmp
push
insb
rep
shlb
testl
aad
sbb
pop
pop
jno
adc
xor
rorb
arpl
cs
hlt
out
push
loop
lods
push
jbe
push
es
out
ja
inc
push
mov
int3
mov
jae
push
sub
stos
cld
es
xchg
out
popf
cwtl
push
js
repz
xor
out
rol
test
cmpsl
pop
int
adc
dec
insb
xchg
mov
daa
stc
sahf
and
lcall
and
add
iret
cltd
jl
push
jae
add
mov
jo
js
loopne
es
pop
cmp
fistl
movups
or
insb
iret
mov
sub
jge
in
cltd
ja
inc
mov
pop
mov
xchg
pop
in
xor
lock
ja
xor
push
stos
push
mov
sub
mov
movntps
push
mov
inc
and
push
in
xlat
repnz
push
cmp
repz
dec
push
cmp
aam
cmp
xchg
in
mov
movsl
sbb
movb
xchg
mov
pusha
jecxz
xor
cmp
in
leave
je
mov
push
mov
frstor
inc
scas
daa
les
pop
lret
aaa
sbb
mov
je
fisttpl
xor
cmp
dec
xchg
shr
adc
and
push
push
adc
push
pop
cmp
hlt
add
iretw
cmp
addps
stos
pop
sub
xchg
mov
jmp
dec
xchg
js
movl
mov
cmp
test
push
sub
das
scas
cmp
lcall
pop
jecxz
push
out
pop
pop
arpl
and
xor
divb
cmc
lea
xor
jno
shrl
push
shl
idiv
rcrb
add
jl
lcall
inc
fwait
push
stc
adc
jne
loopne
inc
std
addr16
jnp
stc
xor
sbb
jmp
pusha
cmp
aas
jbe
mov
mov
repnz
push
pop
fsubs
das
mov
imul
bound
popa
test
fisubl
dec
mov
pop
pop
jg
incl
fisttpll
inc
and
push
into
push
loop
test
call
sbb
cwtl
dec
fisubrs
sbb
xchg
cltd
dec
lock
mov
mov
out
pushf
mov
xchg
cld
mov
lock
fld
call
cwtl
divl
filds
dec
add
ja
in
sahf
dec
ret
fistps
fidivl
ljmp
fucomi
ja
stos
scas
out
inc
leave
gs
pop
mov
icebp
movsb
pop
in
dec
sub
enter
mov
jns
fdivrp
adc
push
notb
inc
shll
insb
mov
mov
fst
roll
icebp
push
out
aam
jmp
inc
flds
and
push
xlat
mov
xchg
sbb
enter
imul
rorl
jg
inc
jmp
hlt
push
and
ret
mov
ss
push
setle
fadds
push
neg
sbb
dec
push
int3
jle
sub
mov
mov
fbstp
dec
dec
pop
sbb
mov
scas
cmp
fs
out
fistpl
add
pop
pushf
pop
lahf
in
mov
xor
cmpsb
ss
outsl
daa
inc
test
jmp
sar
sarl
jae
repnz
mov
fistpll
mov
mov
jmp
inc
fs
cmpsb
jne
outsl
cli
movsb
inc
pop
call
int
xchg
hlt
xchg
or
or
pop
repnz
notb
fistl
mov
cmpsl
xorl
movsb
enter
lock
cmpl
pop
test
mov
jmp
pop
xchg
je
add
pop
stos
outsb
xchg
cld
rolb
adc
std
add
outsl
mov
push
shll
outsl
pop
inc
call
fisttps
cld
adc
jge
mov
out
iret
jp
jne
pop
xchg
sub
mov
cli
dec
jb
test
lahf
js
loopne
and
dec
push
icebp
add
mov
repnz
mov
jp
xchg
push
push
adc
rcl
imul
xchg
fldl
rorb
aam
jg
arpl
push
ss
inc
mov
mov
or
push
xchg
lods
and
push
xchg
arpl
mov
pop
adc
pop
cli
jae
imul
scas
int3
addr16
mov
or
loop
inc
push
sub
adc
inc
add
sbb
xor
add
inc
mov
push
addb
cmp
data16
cmp
add
mov
fwait
jae
outsl
push
stos
add
les
cmp
xor
xchg
fstl
repnz
into
imul
add
aam
mov
dec
mov
lret
aad
xor
sarl
jne
in
imul
in
push
sti
and
jns
testb
xchg
jg
jl
in
mov
and
mov
outsl
icebp
iret
fisubrl
ds
fwait
mov
testb
fbstp
adc
lock
vpcmpeqb
cs
pop
xchg
push
ljmpw
mov
mov
jo
lods
adc
std
jp
sbb
adc
das
xlat
mov
cwtl
outsb
adc
outsl
inc
mov
out
loopne
jbe
outsb
scas
mov
xor
add
mov
lock
xor
jns
sti
out
adc
enter
xchg
std
lret
mov
adc
mov
mov
sbb
loop
add
xchg
push
daa
scas
inc
stc
lock
inc
test
mov
aaa
dec
test
pcmpgtd
scas
fnstsw
rcl
out
mov
fs
lds
jae
js
imul
xchg
pop
jb
mov
xchg
dec
out
xchg
lret
xchg
add
cmp
in
fnstsw
in
adc
dec
jae
mov
push
adc
lods
mov
das
sub
mov
mov
fs
arpl
jle
inc
cmp
push
pop
fwait
pop
sbb
dec
xor
and
cld
ljmp
push
lret
leave
in
pop
mov
lock
sahf
inc
rol
jo
cmpl
adc
fidivl
jl
fwait
xor
and
repz
lods
fdivs
test
ja
test
mov
xchg
pop
dec
sbb
or
lock
adc
and
and
dec
and
lea
ljmp
mov
add
aad
mov
xlat
pop
test
loopne
rcll
jge
testl
pusha
cmp
and
mov
int3
add
jno
xchg
psllq
sbb
dec
rcl
clc
mov
push
adc
imul
or
in
iret
hlt
xor
into
push
notl
leave
mov
cmp
shrb
cmp
test
pop
add
sahf
fsubs
push
or
shll
dec
cmc
jecxz
adc
xchg
push
sub
inc
scas
roll
add
mov
xchg
inc
mov
subb
xlat
pop
loop
icebp
xchg
shll
xor
push
and
adc
xchg
in
testl
mov
out
std
arpl
adc
fldenv
sub
fbld
repnz
call
nop
cmp
scas
in
pop
out
sbb
push
push
jo
js
fnsave
jbe
data16
adc
lcall
sub
pop
or
outsb
pop
aaa
or
jp
fidivrs
xchg
mov
inc
mov
pop
dec
movsb
xchg
inc
inc
sbb
dec
lret
loopne
out
data16
loop
jp
ret
in
fcoml
and
adc
int3
adc
xchg
popa
cmp
adc
pop
xchg
in
and
jnp
push
in
and
mov
cmp
and
cld
cltd
dec
jl
mov
ret
js
das
or
and
mov
jecxz
sub
stos
xchg
scas
fcoms
push
fists
scas
push
dec
out
ds
dec
and
inc
mov
cmp
scas
mov
andl
lcall
inc
stc
adc
js
and
iret
push
aam
cmp
adc
mov
pop
mov
and
jns
mov
adc
add
adc
mov
pop
jnp
pop
mov
aaa
mov
shl
insb
xchg
stos
xchg
add
into
iret
hlt
jns
jno
cwtl
ret
push
jne
mov
arpl
xchg
lahf
pop
repz
outsl
adc
inc
outsb
aam
mov
xor
sbb
js
in
adc
push
lret
enter
adc
mov
and
pushw
adcl
test
adc
lcall
add
stos
loop
add
nop
movsb
or
jo
mov
filds
or
jp
jmp
sbb
inc
lahf
cmpsb
jb
mov
pop
jl
push
fiaddl
arpl
repnz
dec
pop
lret
lahf
call
jg
cmpsl
mov
jno
and
mov
and
stc
fdivl
add
push
cmp
push
repnz
or
aaa
cwtl
xorl
sub
mov
idivb
insb
push
fwait
int3
ja
sarl
xor
in
ds
jnp
mov
pop
mov
mov
adc
add
std
adc
lds
xchg
fs
cmp
fsubs
arpl
or
mov
leave
out
int
jo
lods
lret
cwtl
pop
in
xchg
cmpsb
push
adc
xchg
adc
out
cmpl
insb
shlb
mov
push
push
dec
in
mov
popa
cli
cmc
push
mov
insb
jge
fwait
es
lea
inc
add
mov
sar
or
sbb
iret
inc
xchg
adc
add
leave
sbbl
ljmp
adc
nop
fsubrs
inc
sub
lods
insl
insb
cmp
dec
sbb
jo
xchg
scas
jne
scas
aad
adc
fs
in
imul
cmp
bound
push
xchg
sub
ret
xor
enter
or
ret
sub
inc
loop
cmp
fcomps
sbb
mov
adc
cli
sub
jg
mov
cmp
lret
push
das
mov
dec
gs
mov
insb
int
push
testl
pushf
mov
xor
mov
push
and
jp
rcl
loope
inc
or
hlt
push
stc
mov
sbb
push
push
stc
cmp
cli
in
addr16
push
mov
loop
mov
pop
fwait
jno
je
ja
mov
rorb
dec
mov
jnp
aas
sub
mov
mov
sbb
sub
bound
and
lock
aam
or
pop
add
mov
inc
xorl
pop
es
xchg
pop
aaa
ljmp
adc
cld
dec
pop
lds
aas
pop
push
sbb
adc
xchg
and
cmpsl
cmpsb
cmpsb
jo
add
mov
mov
and
stc
mov
pop
inc
lret
add
hlt
mov
jle
xchg
push
insl
fistl
faddl
jle
dec
jne
lock
sub
jge
in
notb
daa
icebp
mov
rorb
sbbl
pop
adc
imul
popl
pop
loope
test
call
dec
addl
dec
xchg
mov
or
jnp
pop
hlt
inc
sbb
xchg
jmp
jp
shll
xchg
cld
mov
nop
sub
ljmp
les
test
mov
mov
pop
filds
mov
dec
cmpsl
sar
push
jb
in
test
fnsave
cmpsb
popa
nop
jno
pusha
mov
push
sub
mov
ret
cwtl
shlb
or
insb
cs
lock
jp
push
cmp
outsl
and
test
clc
mov
mov
mov
mov
lea
gs
or
push
movups
in
jle
out
daa
cmp
mov
stos
mov
shll
add
lahf
loop
subb
int3
insl
cmp
fstl
mov
je
in
ja
in
push
aad
jno
cltd
in
and
loopne
xchg
jle
jbe
loop
mov
test
push
mov
mov
mov
push
or
imul
pop
mov
iret
push
mov
cltd
push
push
rorl
push
add
test
push
or
test
in
fwait
dec
mov
lret
pop
push
out
push
or
and
adc
inc
enter
fstpt
insl
xchg
leave
movsb
cmp
dec
shlb
push
mov
sbbl
or
movsb
xchg
push
sub
iret
sbb
mov
mov
lock
lods
jnp
je
jecxz
into
shll
xchg
stos
mov
or
inc
jmp
and
aad
shlb
mov
psubsb
sub
adc
mov
pop
ljmp
aaa
ja
leave
mov
mov
mov
lods
in
mov
ds
in
std
addr16
add
mov
jno
push
imul
fdivr
sbb
jecxz
and
pop
hlt
inc
pop
lds
sbb
cmp
imul
mov
mov
fucom
push
jp
into
mov
aas
push
neg
mov
mov
add
cmp
mov
ret
pushf
ja
ljmp
inc
dec
fcmovb
int
xchg
lea
add
push
or
imul
add
int
or
jbe
movsb
inc
data16
sbb
or
adcl
repnz
cwtl
dec
mov
fld1
sbb
adc
pop
imul
popl
andb
dec
aad
mov
pop
and
push
scas
int
hlt
push
push
flds
adc
fldl2e
mov
gs
sbb
out
xor
je
or
rol
lea
dec
sahf
fisubs
in
cmp
in
and
inc
dec
jl
push
mov
push
mov
pop
sub
pushf
mov
aam
cltd
int3
nop
and
sub
test
ljmp
xor
lods
roll
test
mov
insl
mov
pop
fmuls
push
addb
lret
mov
jb
fistl
push
aam
xor
inc
outsb
pop
aaa
pop
push
mov
or
mov
xchg
adc
test
mov
cltd
nop
ljmp
stos
jne
xchg
ss
cli
or
scas
je
fdivs
dec
push
hlt
or
insl
push
leave
jnp
dec
sub
push
jae
mov
xor
and
push
inc
adc
dec
loopne
dec
pop
es
or
in
aaa
push
das
icebp
inc
inc
mov
adc
inc
jns
nop
dec
out
sbbb
test
push
out
jb
cmp
lds
out
outsb
fdivs
ljmp
mov
test
adc
aam
jno
ljmp
lahf
push
dec
dec
xchg
xor
mov
scas
das
mov
mov
popf
dec
mov
cwtl
lcall
adc
and
and
test
call
adc
in
enter
aas
fstpt
rolb
and
xor
push
iret
mov
jns
mov
pusha
mov
mov
sbb
push
aas
jp
add
pop
mov
sahf
es
or
jle
pusha
pop
je
xorl
jle
pushf
push
iret
xor
adc
js
add
push
not
xor
lahf
xchg
fisubl
out
adcl
scas
mov
mov
in
das
enter
xor
iret
xlat
pop
xor
sub
out
push
jo
out
dec
iret
sbb
loope
and
sbb
test
xchg
cmpsb
stos
sbb
mov
lret
lahf
xor
pop
std
fdivl
enter
xchg
sbb
lea
or
push
and
pop
mov
lock
lea
jb
sti
loope
lods
push
xor
xor
cmpsl
retw
insb
jle
xchg
jl
icebp
jle
pop
pushf
mov
sahf
arpl
out
dec
pop
cmp
dec
outsl
or
cmpsb
pop
movsl
shl
pop
imul
mov
shll
dec
add
lcall
push
sti
std
and
in
das
jl
sub
stc
pop
leave
aad
mov
xchg
cwtl
dec
jl
jl
jg
stos
aaa
and
rorl
sarl
adc
stc
out
push
jp
mov
loope
fistpll
inc
repnz
aad
insb
jecxz
jo
lea
push
adcb
push
and
mov
push
andb
cmpl
and
insl
sbb
dec
add
les
cs
xchg
add
sahf
ss
lcall
in
or
imul
adc
fcmovbe
jae
push
fstps
pop
mov
xor
sbb
repz
ds
icebp
push
leave
jo
sub
adc
outsl
mov
fcmovne
xchg
cmc
and
rclb
or
sub
arpl
mov
fcoml
adc
adc
rcll
bound
stc
sub
push
shlb
xor
xchg
mov
lahf
aas
aaa
mov
ret
je
jmp
and
into
clc
adc
out
adc
jl
filds
mov
jbe
push
ret
push
sarl
aam
inc
cmp
ss
cmp
pop
dec
mov
mov
sti
adc
leave
xchg
sti
push
aad
add
test
test
add
shl
push
jo
lods
jmp
mov
push
sub
sbb
and
pop
mov
jno
inc
in
divb
inc
mov
clc
push
or
xchg
sbbl
pop
mov
sbb
xchg
das
pop
cld
cmp
xchg
lods
scas
mov
inc
cwtl
lcall
pop
push
lock
mov
cs
sbb
repz
popf
jle
sarb
das
xchg
std
mov
ss
popf
pop
mov
inc
je
inc
pop
int3
jl
bound
mov
icebp
xchg
sahf
lods
lea
test
aad
push
rcl
dec
push
lods
xchg
cmp
mov
push
adc
ds
push
pop
xor
out
mov
fcomi
push
mov
dec
push
bound
mov
dec
cmp
lock
push
mov
jno
sti
xchg
cmp
mov
loope
mull
sub
push
mov
loopne
iret
loop
sbbb
nop
imul
inc
rcrb
popa
out
pop
in
adc
cltd
std
add
lahf
cmp
mov
outsl
push
lahf
mov
mov
sub
leave
mov
imul
or
xor
xchg
adc
jmp
push
popa
movsl
push
clc
sub
mov
sub
inc
xor
jge
clc
xlat
dec
repz
ja
clc
repnz
ret
outsl
or
inc
movsb
cmp
lret
push
inc
jge
aam
insb
jnp
and
fisttps
mov
cmp
ja
jno
inc
sti
mov
std
lock
xor
jmp
lods
jb
and
mov
mov
pop
cld
xchg
shrb
iret
mov
fdiv
jo
imul
leave
push
std
xor
notb
leave
loop
enter
outsb
mov
inc
jb
repz
ljmp
outsl
or
cs
xchg
dec
jnp
mov
jns
dec
adc
fs
sbb
cmp
movsl
xchg
test
lcall
shrb
jl
cwtl
nop
mov
add
bound
mov
pop
ret
push
jns
lcall
dec
mov
rcrb
mov
mov
cmp
gs
push
push
xor
mov
jbe
addr16
jl
fwait
shll
adc
fwait
xor
and
xchg
mov
mul
dec
adc
xchg
aaa
addr16
cli
mov
rolb
push
xor
cvtpi2ps
outsl
adc
ror
enter
cmp
jnp
jmp
daa
test
fs
sbb
mov
push
adc
int3
out
ja
push
sub
insb
fbstp
pop
push
lahf
jmp
out
insb
movsl
mov
js
push
mov
xchg
add
shll
dec
add
aam
dec
pop
xchg
or
xchg
jmp
or
mov
pop
push
sti
jg
scas
cmpsl
out
aaa
jno
icebp
sbb
hlt
push
push
jecxz
mov
inc
fiadds
or
pop
jge
negb
push
popf
sub
out
mov
dec
test
sbbl
push
repz
fistpll
jnp
xchg
xchg
mov
stc
add
sub
nop
xchg
xchg
mov
out
lods
mov
jecxz
push
or
ss
mov
xor
sbb
xor
je
and
inc
data16
aas
mov
add
sub
push
add
es
in
cmc
icebp
gs
lahf
leave
subl
stos
pop
add
inc
add
dec
cmpsl
push
sbb
xor
cmp
dec
jbe
jae
push
add
mov
push
lock
bound
ret
nop
sbb
test
ljmp
pop
inc
mov
insl
push
inc
push
push
icebp
std
jmp
loopne
push
cmp
mov
adc
adc
ds
mov
dec
jle
xchg
cmp
xchg
movsl
jae
adc
sub
inc
inc
mov
dec
xor
iret
sbb
rcll
xchg
popa
das
add
popl
mov
dec
insl
bound
loope
inc
inc
dec
std
insl
fsubs
push
bound
rcrb
jmp
pop
cld
sub
ljmp
and
out
popa
decb
mov
ret
dec
lds
js
mov
sbbb
cmp
jmp
fs
mov
sar
sbb
out
nop
sbb
pop
mov
mov
xchg
inc
lcall
add
cmp
cmp
push
jnp
mov
sti
mov
aas
lds
add
push
lret
ljmp
mov
pop
lret
imul
das
cwtl
push
mov
push
call
sbb
sti
jb
shl
das
cmpsb
add
ds
adc
jbe
aad
mov
xchg
pusha
cli
arpl
in
sbbl
xchg
lcall
pop
cltd
jns
jmp
test
call
fisttpl
es
sbb
scas
add
adc
sbb
jle
and
aaa
in
testb
lret
mov
xchg
pop
cwtl
add
add
push
inc
fwait
mov
cli
es
xor
fs
cs
push
test
pusha
movsb
push
push
data16
movsl
mov
in
je
sbb
or
hlt
sub
and
inc
add
xor
outsb
pop
lcall
test
lret
addl
mov
jp
fdivl
push
mov
cmp
aas
push
jg
dec
mull
xchg
mov
xchg
test
push
xor
gs
mov
mov
mov
dec
jg
mov
add
lods
lea
or
or
ljmp
mov
push
jae
adc
sbb
xchg
or
ljmp
mov
pop
mov
lods
in
mov
xchg
popf
repz
shll
or
mov
mov
fsubs
hlt
jmp
fsubr
inc
add
insb
std
jb
or
negl
sub
shl
xchg
push
or
add
cmc
sub
xlat
test
dec
sub
loopw
push
dec
mov
rcrb
out
xor
into
je
mov
pop
jo
pop
fadd
pop
outsl
loop
jge
cmp
and
scas
jg
stos
sahf
or
or
dec
out
cmp
test
mov
jmp
jmp
ja
aam
and
in
xor
mov
sbb
call
out
dec
test
pop
lods
mov
sbb
jg
shlb
stc
lock
int3
jmp
xchg
mov
test
fmul
inc
repnz
test
outsl
xor
sub
mov
ss
jne
mov
and
shll
sarl
imul
movsb
inc
pushf
mov
cld
cltd
cltd
jae
pusha
dec
fsts
xor
outsl
mov
outsl
enter
inc
adc
aas
cmp
outsl
fmul
cmp
xchg
pusha
push
mov
fwait
movsl
xor
mov
addl
jbe
fwait
mov
pop
sub
stc
das
mov
shrb
push
shll
cmpsb
fdivrp
enter
js
pusha
inc
outsl
jo
jbe
imul
adc
add
loop
sub
cmp
and
or
cmp
lcall
sbb
insb
ficompl
ss
aad
sbb
cli
aaa
push
shrb
imul
or
int
dec
mov
mov
fmull
xor
push
push
pop
inc
pop
xchg
mov
mov
cmp
fstpt
ret
xor
repnz
mov
cmc
mov
cmpb
dec
xlat
das
mov
in
fwait
pop
inc
mov
push
mov
mov
sub
js
inc
xchg
aas
scas
xlat
call
add
jmp
cmp
adc
mov
sbb
jge
mov
repz
or
or
pop
xchg
cltd
dec
xor
cmpsl
aas
fstpt
fidivs
das
int
mov
push
scas
fisubrs
xchg
adc
mov
mov
pop
mov
pop
pop
nop
mov
lods
stos
or
xchg
mov
loopne
jo
add
aas
mov
mov
fidivl
jbe
jo
rol
push
cmc
push
inc
or
int3
sbb
loopne
popa
and
fs
movsl
mov
lds
cmpsl
sub
mov
addr16
lea
out
lods
jno
push
lea
add
cli
icebp
in
jne
aas
xchg
fwait
cltd
fstpt
mov
sub
mov
into
outsl
scas
int3
cmc
sub
sub
push
mov
lcall
xchg
ljmp
jmp
ret
or
push
cs
ficoms
xor
pushf
and
ljmp
fdivl
mov
cwtl
jns
sub
cmp
dec
in
pop
or
pop
pop
fsubr
cmc
xchg
push
sbb
pop
and
adc
rcrb
pop
inc
cmc
movsb
pushw
shll
push
and
gs
and
adc
into
fcmovnbe
out
aaa
add
lods
xchg
or
nop
mov
idiv
ss
inc
inc
insl
lahf
cmp
or
xchg
clc
test
xchg
les
std
sub
mov
xor
je
pop
cmp
adc
inc
cltd
shrb
mov
imul
popf
hlt
sbb
dec
push
adc
mov
sbbl
cli
push
adc
jne
push
enter
nop
mov
xchg
inc
in
and
cmp
cltd
cmp
aam
outsl
jecxz
imul
cld
scas
xor
adc
mov
jge
sarl
jnp
cmp
or
mov
insb
jp
cli
push
add
in
mov
mov
int
and
ljmp
popf
data16
adc
imul
jbe
sbb
pop
imul
mov
xchg
adc
in
fcmovb
dec
ret
sub
andb
je
clc
ds
lock
dec
or
iret
xlat
jmp
jnp
sahf
int
vmwrite
dec
pop
cmp
pop
pop
mov
jmp
out
testb
mov
in
xlat
cmpl
sbb
test
and
cmpsl
xor
imul
sarl
xor
pop
pop
rcrl
cwtl
movsl
inc
ss
test
pop
cmc
xchg
fidivrl
pop
jmp
cltd
sub
test
aaa
ret
bound
repz
repz
aam
pushf
push
sbb
cld
sub
imul
mov
gs
sbb
mov
cmp
or
mov
jno
push
and
inc
and
nop
mov
jmp
inc
stc
mov
ret
pop
and
jb
pop
and
ds
test
sub
adc
test
mov
inc
mov
ss
jge
fists
inc
xor
dec
sbb
aad
out
inc
mov
mov
lahf
in
in
push
xchg
sbb
inc
pop
or
jl
jbe
pop
inc
add
sbb
jno
stos
jge
xchg
pop
inc
jge
mov
dec
pop
sti
jmp
shrl
cmp
test
loope
mov
andb
andb
xchg
lods
xchg
and
mov
push
sub
addr16
out
pop
jo
imul
jmp
movsb
lcall
or
test
mov
mov
mov
fwait
mov
and
test
mov
ret
xor
lock
add
shl
push
xor
sub
jecxz
movsb
mov
call
leave
stos
aam
xchg
sahf
xchg
xor
test
push
add
jg
push
into
pop
xchg
push
in
jge
add
jne
push
mov
test
push
sub
jp
out
roll
jb
scas
mov
pmuludq
out
aad
xor
aaa
push
daa
dec
mov
les
xlat
aam
ret
sub
jmp
add
add
mov
bound
adc
xchg
mov
sub
xchg
ret
add
lret
nop
lret
aad
xor
pop
jns
or
jecxz
dec
sarl
inc
adc
fcmovu
scas
outsb
out
sti
mov
arpl
rorl
mov
fistl
call
mov
xor
push
fnstenv
jge
and
mov
sar
sahf
mov
mov
xlat
add
sub
js
mov
jge
inc
fdivrp
lcall
hlt
popf
pop
stos
xchg
sub
pop
dec
enter
cmpsl
push
mov
and
ret
ljmp
popf
bnd
notl
inc
test
sbb
aaa
mov
imul
adc
add
inc
mov
pop
or
imul
push
mov
outsl
and
int3
jbe
in
mov
fstpt
ret
sarb
pop
jg
add
cmpsb
test
scas
ss
xor
jno
lock
stos
sbb
mov
out
pop
jno
ret
loopne
into
xchg
sub
out
xor
and
push
xor
pop
and
ja
jae
mov
cmc
addr16
leave
or
jmp
pusha
or
push
sti
pop
fisttpll
in
adcl
push
int3
mov
add
pop
add
mov
cmpsl
xchg
lods
jge
push
xchg
cmp
fcomi
dec
loop
bound
sbb
or
sbb
or
add
cmc
clc
mov
cmp
sub
insl
sahf
fwait
xor
mov
js
jnp
mov
cmc
lock
test
js
js
and
nop
ja
bound
or
add
pusha
aaa
sar
jo
mov
loop
cmp
jne
cwtl
cmpsl
mov
imul
sbb
dec
push
lods
pushf
cld
pop
jge
stos
ljmp
jmp
sub
jl
mov
and
mov
gs
jae
mov
xor
jecxz
push
lcall
cli
dec
xor
jbe,pt
inc
sub
pop
dec
sbb
mov
and
mov
mov
aaa
and
mov
test
cli
bound
in
outsl
xchg
sub
int3
repz
mov
out
inc
leave
xor
inc
popa
add
push
xor
pop
lret
or
pusha
lcall
ret
push
js
bound
outsl
xchg
xor
lds
imul
xor
lods
jb
rclb
lock
into
popf
aas
jmp
xchg
push
in
stc
lods
adc
clc
add
push
jns
imulb
jecxz
adc
jo
js
mov
jmp
lret
inc
pop
xchg
push
lea
push
mov
sub
push
out
or
pusha
andl
jne
push
das
lahf
out
dec
add
push
mov
lcall
daa
xchg
sbb
or
fidivrs
xchg
mov
dec
outsl
jle
xchg
pop
in
adc
xchg
mov
push
shl
fadds
sbb
dec
jle
cmp
imul
insl
lret
xor
outsl
sarb
sub
hlt
call
mov
orb
xor
int
xchg
mov
mov
push
testl
leave
fstpt
pop
mov
cmp
testb
fwait
fwait
jns
faddl
jp
rol
jns
mov
push
mov
mov
dec
or
pushf
push
addr16
fdivp
shlb
mov
out
mov
cmp
repnz
mov
mov
xchg
imul
js
stos
pushf
xchg
leave
lcall
mov
in
or
gs
xchg
cltd
jae
ret
dec
js
push
or
lods
and
addr16
stos
and
adc
mov
aas
mov
mov
and
sbb
mov
and
ljmp
pushl
lret
jno
jle
imul
pop
xchg
adc
int
in
inc
clc
loop
loopne
push
scas
cmc
sub
idivl
les
popa
mov
repnz
shl
stos
sahf
or
push
mov
mov
pop
sahf
add
cmp
jno
rep
pop
push
dec
hlt
inc
inc
push
sub
pop
sahf
xchg
xor
inc
jge
stc
mov
shl
pusha
lods
push
mov
push
xchg
ret
pop
inc
push
mov
insb
sub
dec
in
popa
xor
pmaddwd
and
jbe
pushf
xor
rcrl
out
xchg
adc
pop
stos
lea
pop
popf
cmpl
sbbb
movsb
pop
incl
rolb
fadd
call
sbbb
js
xchg
test
into
scas
xor
and
ret
xor
cmp
int3
stos
sub
or
iret
jo
sub
out
push
clc
dec
pop
mov
pop
popf
push
dec
out
out
out
inc
orl
call
adc
mov
inc
pusha
jmp
jo
adc
or
sbb
out
scas
sbb
and
ja
fxch
mov
sti
xchg
imul
imul
sahf
movsb
mov
adc
les
jnp
dec
outsb
leave
mov
icebp
pop
mov
daa
or
xchg
cli
sub
int
push
add
imul
ljmp
pop
xor
sbb
sub
sub
ret
test
xor
sarb
popa
dec
out
loopne
dec
jns
outsb
test
pop
xor
jo
mov
lock
inc
fwait
add
push
scas
lret
out
sbb
jns
cmp
cli
test
sbb
fs
mov
or
push
test
das
lds
in
sub
out
sbbb
adc
pop
in
adc
popa
adc
mov
pop
leave
scas
jns
push
in
mov
test
rorb
push
orl
xor
cmp
sbb
inc
sub
lock
loop
xor
pop
inc
aaa
es
dec
orl
test
or
xor
push
mov
cmpsb
mov
mov
push
dec
mov
out
sub
loopne
repz
jno
cmp
mov
sub
icebp
rorl
arpl
mov
or
pop
in
mov
jo
push
subb
or
mov
mov
popl
movsl
inc
jge
aam
adcb
mov
pop
pop
cli
dec
sti
jle
ret
js
nop
mov
mov
fidivrs
mov
jge
adc
mov
xchg
pop
mov
je
dec
cmp
fidivl
sub
addr16
add
xchg
jns
and
and
ljmp
es
dec
call
inc
push
or
adc
cmpsl
dec
dec
rol
sub
lret
sbb
pushl
lcall
jge
mov
pop
popf
clc
cmp
notl
xchg
lea
inc
add
mov
subb
pop
cmp
or
divl
rcr
pop
stos
das
and
xorl
loopne
mov
out
or
mull
pop
cwtl
fwait
mov
pop
jns
aaa
mov
jmp
ja
xor
fnstcw
mov
out
ret
and
xor
sub
or
ds
sbb
addl
add
jae
hlt
outsb
dec
mov
or
jecxz
push
push
push
mov
mov
insl
push
icebp
fistl
test
pop
push
mov
dec
sub
out
cmp
push
mov
in
outsb
push
adc
les
pminub
jbe
push
xchg
outsl
push
push
or
inc
clc
xor
imul
loopne
mov
test
rorl
fmull
mov
mov
shll
shll
jno
push
out
enter
adc
frstor
push
and
dec
pop
jns
daa
popf
jns
mov
je
inc
xchg
jmp
aas
insb
sub
jne
pop
and
imul
inc
jne
out
sbb
inc
add
scas
les
stos
cmp
cmp
add
lods
sub
mov
hlt
sbb
jae
stc
adcb
inc
mov
adc
push
ds
push
add
dec
jnp
jmp
xchg
inc
jl
adc
sub
je
aad
push
inc
push
push
push
pop
add
mov
rcrb
notl
js
sbb
sti
into
loope
out
enter
mov
cmp
adc
xchg
ljmp
dec
jno
fsincos
je
out
call
cmpsl
pop
jne
cmp
sbbl
sbb
adc
jae
dec
xchg
fbstp
or
mov
cltd
jg
and
adc
add
xor
lock
mov
inc
sti
sub
aas
andl
test
jb
mov
pop
scas
ret
mov
fwait
mov
mov
stos
xchg
sub
mov
lods
push
mov
sub
leave
inc
jg
push
add
mov
adc
or
mov
push
and
and
adc
push
xor
repz
lret
addr16
jl
add
cmp
insb
push
sbb
sub
lcall
push
pop
mov
mov
sbb
sub
mov
jle
add
inc
int3
lahf
jp
cmp
and
repnz
mov
pusha
outsl
das
loope
inc
add
inc
push
xchg
out
sub
xor
mov
add
sbbl
sbb
in
xchg
sbb
mov
pop
les
xor
sbb
cmpsl
cmpl
in
sbb
pop
dec
mov
xchg
xor
ja
nop
mov
jne
shrb
imul
xchg
jae
mov
jp
in
sbb
push
daa
add
into
sbb
pop
mov
inc
mov
jae
mov
xor
mov
subb
daa
mov
pushaw
push
sahf
xor
aaa
dec
or
sub
xchg
clc
call
test
stos
ss
xchg
xlat
out
scas
sbbl
jp
movl
dec
mov
sbb
int
stos
sbb
lret
cmp
inc
jecxz
lea
shr
adc
sbb
rcrl
inc
out
cltd
dec
sub
js
xorl
in
daa
push
rcr
mov
jnp
repz
sarl
in
mov
pop
sahf
dec
es
mov
xor
push
sarb
sti
mov
stc
sbb
outsl
int
pushf
stos
sub
xor
lods
push
repnz
dec
add
aaa
fmull
outsb
xor
in
test
pop
lahf
ljmp
shlb
mov
jge
movsl
cmp
mov
and
rcrb
jg
sahf
negb
ds
xchg
cmp
clc
pop
aaa
inc
lods
stos
mov
push
cmp
repnz
or
jmp
xor
mov
addr16
sbb
mov
jmp
and
loop
cmpsb
inc
sbb
mov
xor
int3
xor
cmpsl
pop
shll
int
mov
mov
cmp
ret
dec
adc
test
push
insl
das
inc
dec
ss
cmpsb
dec
ret
adc
cmpsb
or
cmpsb
andl
push
fsubp
add
and
pop
lret
jno
fmull
test
jp
in
fidivs
pop
lds
fld
mov
mov
cmp
cvtps2pd
and
ds
test
inc
mov
jnp
in
inc
cmp
pop
adc
and
xchg
xor
push
mov
shll
andb
pop
out
in
and
mov
gs
loop
cltd
dec
mov
filds
daa
mov
inc
int
mov
adc
xorb
popl
and
das
add
shrb
mov
and
fwait
mov
dec
call
imul
mov
gs
xchg
mov
mov
push
jbe
jle
dec
imul
sahf
xlat
stos
add
jl
or
xor
or
add
xchg
pusha
stos
sahf
jb
cmpsl
pop
sarl
xor
enter
fldenv
adc
dec
xor
push
sub
lea
jp
mov
in
std
sbbl
insb
xor
and
out
xchg
xor
mov
ficomps
stc
and
filds
xor
movsl
out
iret
mov
xchg
shl
into
xchg
test
nop
insb
insb
sbb
jbe
xchg
es
repnz
push
inc
and
nop
call
cmp
cmp
push
pop
mov
jno
fsts
arpl
in
sub
ljmp
sar
cmpsl
cwtl
movsb
bound
cmp
mov
sbb
cltd
cwtl
push
ds
lret
sbb
pop
xchg
jae
inc
or
adc
sub
push
movsb
mov
jmp
cmp
pop
jo
lock
sub
ljmp
dec
adc
js
mov
idivb
call
je
cli
and
sarb
loope
xor
ds
cltd
xlat
mov
cwtl
mov
mov
mov
in
sbb
das
mov
sub
inc
dec
stos
out
fs
fwait
pop
sub
mov
std
je
in
xchg
lds
cli
fdivrs
push
push
push
mov
int3
pop
xor
movsb
jp
xchg
dec
subl
adc
stc
add
mov
push
sbb
movsb
das
inc
scas
jmp
mov
mov
jae
jne
mov
andb
mov
inc
xor
loope
inc
int
push
add
adc
test
pop
adc
cmp
inc
stc
pushf
arpl
push
lret
test
mov
xchg
das
jo
lods
aam
pop
hlt
scas
ja
xor
fistps
pop
and
test
cltd
inc
sbb
dec
xor
rolb
jg
loope
js
sbb
loopne
pop
testb
out
gs
adc
and
gs
xor
les
int3
add
pop
sub
ds
test
enter
jp
mov
push
rorb
movsb
mov
sbb
inc
inc
icebp
mov
das
test
lahf
sub
into
sbb
xchg
andl
fcompl
and
xchg
shlb
arpl
sub
mov
les
cmp
pop
leave
cmp
sub
iret
add
fstpl
dec
ficoml
ljmp
lret
and
push
xchg
pop
push
xchg
xor
cmp
ficomps
out
insb
push
cmpsb
shll
xchg
xchg
mov
xchg
sbb
mov
sarb
outsl
popa
sti
or
pusha
hlt
adc
fnsave
sub
lock
rcrl
jg
pop
xor
lret
subl
mov
adc
lret
xor
fwait
jg
inc
jge
cmp
or
scas
icebp
push
popa
mov
ret
cmp
mov
sub
loop
cmp
xchg
imul
stos
call
sbb
jo
imul
movsb
cmp
or
adc
mov
je
xor
insb
loope
gs
sbb
shll
and
shl
loopne
cmpsb
jns
add
pop
loope
mov
push
pop
out
xchg
jne
inc
jno
inc
xor
fwait
lret
dec
in
xor
je
out
aad
lcall
adc
mov
out
mov
repz
je
roll
jbe
bnd
add
mov
push
mov
decl
mov
inc
ja
mov
idivl
pop
popf
das
mov
loop
rcl
sbb
push
push
push
jmp
cmp
pop
or
mov
mov
pop
xorl
xchg
cmp
mov
enter
insl
ret
xchg
xchg
cmp
add
ret
sahf
ds
outsb
push
fwait
sahf
push
inc
jb
mov
lea
lcall
dec
fldenv
cmp
cmp
xchg
jae
sahf
cltd
or
arpl
mov
shll
mov
dec
add
cmpsl
push
js
lret
inc
insb
pushf
fwait
push
stc
inc
inc
andl
arpl
pop
push
out
aaa
fcmovnbe
xchg
push
imul
and
dec
or
lods
mov
dec
and
xchg
add
fsts
outsb
sbb
aaa
shrl
jnp
decl
inc
dec
loope
pop
rclb
jmp
mov
bound
pop
in
test
outsl
dec
int
and
pop
jne
and
jno
xor
mov
inc
and
xor
push
mov
aaa
or
insl
clc
pop
jae
xor
and
daa
mov
xchg
imul
jp
jbe
outsb
adc
and
sbb
mov
cmp
cmc
mov
mov
lods
or
push
rclb
and
mov
mov
or
int3
test
jbe
xlat
in
mov
inc
cmp
movsb
sub
insl
mov
lret
repnz
pop
jbe
daa
sbb
dec
mov
mov
cli
les
mov
sub
mov
int3
jbe
push
xchg
insl
push
insl
cli
pop
or
and
mov
and
fadd
push
test
mov
sub
iret
adc
or
pop
xchg
ret
outsb
sarl
inc
lods
sub
mov
jmp
outsb
aam
setp
icebp
add
int3
mov
mov
jl
loopne
pop
bound
push
jbe
das
insl
mov
cmp
xor
pushf
add
je
xor
cs
xor
stos
ss
push
rclb
test
int
and
sub
outsb
mov
imul
pop
mov
repnz
adc
mov
mov
and
ss
vmmcall
test
int3
das
repz
mov
xor
and
ficompl
push
xchg
inc
push
out
mov
or
loope
pop
mov
fcmovbe
sbb
pop
fistps
cmp
sbb
bnd
adc
inc
cmp
incl
ficoms
sbb
js
std
add
sbb
push
xchg
aas
jno
test
rcll
mov
add
lea
pushf
icebp
sbb
ret
shrl
mov
push
mov
das
mov
in
pop
mov
lods
dec
out
jl
repnz
jb
or
mov
jge
out
adc
mov
cmp
jae
rcrb
out
push
adc
scas
pop
or
add
sub
xor
mov
push
xor
dec
dec
or
pop
and
inc
push
mov
push
leave
xchg
mov
cmp
jne
xor
push
xor
sub
cmpsl
cmp
lods
adc
mov
aam
push
jecxz
rclb
aam
push
add
push
mov
dec
es
cmp
outsl
push
xlat
jnp
push
cld
sub
call
cmc
mov
mov
mov
test
into
mov
js
addr16
pop
mov
movsb
pop
mov
iret
stos
outsl
inc
mov
xor
out
fimuls
jl
and
out
fidivrl
jns
pushf
sbb
das
test
adc
mov
add
dec
jle
mov
push
push
movsl
inc
xchg
jg
and
pop
xlat
sub
je
es
sti
dec
mov
mov
xchg
or
aad
xchg
cmp
shlb
inc
add
cltd
xor
inc
out
bound
outsl
or
jo
fcmovnb
std
sbb
fistl
add
mov
mov
and
in
mov
xchg
xor
inc
pop
pop
dec
xchg
int
xchg
jbe
jg
push
iret
pop
nop
arpl
dec
shll
jecxz
shlb
xlat
ljmp
and
pop
push
cmpsl
dec
add
popf
sub
sub
or
sbb
cld
inc
clc
adc
cmp
xor
out
repz
in
adc
cwtl
negl
pop
mov
pop
mov
rcrb
push
inc
push
movsb
mov
dec
scas
popa
fiaddl
nop
and
ljmp
addr16
leave
in
cmc
push
addr16
sbb
cmp
fistpll
push
imul
rol
inc
pop
into
jb
xchg
push
rcll
push
dec
sub
in
jae
lods
sub
inc
popf
sub
push
xchg
fdivrp
cmp
mov
push
loope
stos
push
icebp
add
and
xor
pop
adc
dec
das
add
xor
mov
mov
mov
mov
sub
jmp
xchg
ds
xchg
mov
inc
sbb
filds
adc
mov
stos
and
mov
mov
xor
mov
xchg
sbb
test
into
data16
sbbb
push
mov
jl
out
lret
jbe
pop
pop
sub
push
mov
inc
mov
sbb
adc
push
push
mov
xchg
insl
xor
sub
dec
cmp
adc
imul
rcrl
and
adc
aad
or
pop
ret
lods
sbb
fcom
mov
pop
ds
mov
add
pop
lret
pop
jp
cmp
dec
mov
jb
jmp
jne
xorl
xchg
or
call
dec
mov
inc
ret
hlt
add
adc
adcb
push
mov
xlat
add
xchg
mov
add
cmp
xor
movsl
aas
in
mov
test
loop
insb
push
jp
repz
inc
sbb
push
and
add
sbb
fcmovnb
leave
or
test
and
lea
test
xchg
xor
data16
push
out
mov
iret
loopne
in
imul
xchg
and
push
leave
lretw
pop
iret
jae
shl
shl
leave
mov
and
mull
push
xchg
movsb
jl
mov
gs
aaa
insl
test
cs
push
imul
jecxz
xchg
push
mov
push
rcrb
push
decl
push
push
mov
sti
jb
imul
cmp
and
cmp
mov
pop
push
jne
adc
movsl
inc
and
xchg
cmp
and
addr16
sahf
aaa
and
repz
repnz
pusha
sbb
cmp
sub
and
call
shrl
dec
lahf
es
push
loopne
sbb
ss
mov
mov
movb
call
sub
mov
mov
adc
dec
orb
fnstenv
fisttps
inc
in
mov
orb
test
out
xor
lds
lds
insb
ljmp
or
jp
and
jle
es
sub
pop
xor
shrb
adc
jb
sub
xchg
adc
and
rcl
mov
pop
inc
push
out
daa
jmp
push
jp
or
mov
scas
lds
cmp
mov
icebp
adc
dec
pop
aaa
cmpsl
movsl
push
mov
ja
push
sub
xor
stos
fdivrs
xor
xchg
mov
stos
sub
test
push
mov
adc
push
and
add
sqrtps
sbb
or
pop
fisubrl
ljmp
jno
dec
ja
test
cmp
gs
add
xchg
stc
stc
jp
pushf
pusha
stc
push
mov
sbb
xchg
xorb
adc
cmp
jl
jae
mov
bound
stos
adc
cmc
call
xor
iret
jecxz
adc
mov
adc
and
lock
popf
xchg
repnz
les
or
sub
lds
dec
inc
push
cmp
rolb
in
hlt
or
sbb
cmpsb
sarl
fstps
call
pop
xor
or
xor
out
push
jnp
add
add
in
bound
fucom
nop
cmp
xor
jae
pop
outsl
mov
xchg
loopne
inc
xor
mov
xor
lea
push
add
jne
ficompl
sub
add
aaa
lahf
dec
fs
cmp
scas
jge
rcrl
cmp
sarb
scas
xchg
into
hlt
pushf
jp
jp
test
dec
xor
xor
and
icebp
mov
pop
enter
add
or
outsl
or
loop
push
sub
clc
mov
sub
dec
pop
std
jmp
jle
dec
imul
jnp
fcoms
lahf
and
sbb
mov
iret
cmpsl
inc
dec
mov
xor
cmpsb
xor
out
lods
push
pushf
addb
mov
lods
ret
mov
sbbl
roll
popa
xchg
xlat
test
gs
mov
or
test
out
and
ja
stos
jns
repz
mov
cmp
lods
out
add
imul
scas
popf
or
fldt
dec
jp
in
out
add
imul
sahf
aaa
in
int3
dec
jp
call
pushw
stos
xor
fidivs
push
adc
cltd
push
shrl
mov
jg
enter
mov
sbb
gs
daa
enter
fwait
cmp
js
mov
jbe
out
xchg
push
push
int
mov
fimull
xchg
test
jno
sti
mov
cmp
gs
jmp
push
in
adc
sbb
adc
mov
rorb
xor
loop
repnz
fs
js
je
or
jecxz
test
mov
leave
insb
xlat
int3
pop
sub
dec
mov
mov
inc
xlat
cmc
outsl
dec
dec
call
pop
fcompl
jmp
and
ds
dec
ror
pop
sbb
sbb
and
push
shl
shrb
push
sub
jae
or
insl
outsb
jle
push
ja
mov
or
xchg
int3
mov
cmp
ret
test
subl
mov
loop
sbb
inc
mov
mov
sbb
iret
or
lahf
sbb
cmp
mov
rclb
faddp
pop
mov
pushf
pop
repnz
fnstsw
jb
movsl
mov
jmp
mov
push
cld
aas
std
sti
sub
adc
cmpsb
in
lds
pushf
int
pinsrw
cld
push
sbb
jl
jp
dec
lret
pop
fnsave
icebp
push
orb
insl
je
in
call
aam
sbb
mov
mov
lret
int
test
adc
je
hlt
cmp
add
movsb
jns
pushf
cmp
sub
xorb
scas
cmpl
ljmp
mov
add
pop
pop
lds
cmpsb
mov
or
pop
out
into
and
or
int3
addr16
and
pop
pop
ds
scas
ret
jnp
add
xchg
andl
xchg
lock
pop
shll
xchg
pop
lods
repnz
outsb
jg
jmp
lods
pop
xor
xor
hlt
jbe
insl
mov
movsb
int3
add
aaa
js
out
in
xchg
out
flds
ficoms
jns
inc
adc
xchg
pop
lods
xchg
movsl
imul
jle
adc
inc
insb
push
subb
lds
sbb
cwtl
pop
fmuls
sub
xchg
cltd
aad
push
dec
and
std
out
data16
je
shlb
xor
cmpsl
mov
jne
adc
mov
testb
fwait
or
or
inc
dec
clc
leave
adc
inc
test
roll
and
push
in
mov
ror
imul
dec
out
dec
ss
adc
scas
push
lahf
fimuls
aas
addr16
lret
mov
mov
shrb
push
add
mov
ret
pop
inc
and
and
sub
xchg
aad
ja
scas
out
aas
sbb
jge
aam
outsl
sub
dec
stos
fidivs
dec
dec
jbe
add
and
sub
push
stos
roll
loopne
int
cmpsl
clc
jp
test
xchg
test
pop
stos
jae
jg
or
mov
into
addb
adc
cmp
pushf
pop
pop
shll
push
daa
mov
sbb
sbb
aas
testb
xchg
or
jle
outsl
scas
fstps
cs
push
lret
out
jle
pop
mov
xor
cmp
cld
enter
xor
insb
scas
mov
xchg
stc
aas
dec
or
pusha
repz
cs
enter
add
loop
sub
sti
jmp
pushf
stos
inc
dec
ja
subb
aam
fisubrl
int
cmp
jl
clc
jg
call
popa
adc
sahf
or
lods
mov
mov
and
mov
lret
fistps
gs
sar
fwait
pop
fmul
call
pushf
into
jg
lret
loopne
fwait
icebp
mov
push
test
mov
adc
mov
mov
mov
gs
lcall
push
and
push
test
and
cmp
test
addr16
jmp
loopne
xchg
mov
inc
xor
mov
lods
and
xor
std
mov
filds
out
testb
sti
xor
xchg
dec
aad
in
mov
mov
add
pop
pop
scas
in
adc
pop
and
cmp
pop
add
mov
mov
clc
pop
outsl
outsl
mov
icebp
jg
ljmp
jne
in
and
test
repnz
into
sub
inc
inc
rcrl
push
repz
je
popf
in
aam
push
mov
mov
popa
out
push
adc
mov
pop
dec
test
enter
push
adc
mov
sarl
lea
xchg
mov
sahf
ds
mov
imul
lcall
xchg
fsts
xchg
xchg
jecxz
mov
loop
dec
dec
lcall
scas
fwait
imul
std
xor
push
mov
add
mov
push
inc
push
out
mov
push
mov
pusha
subb
push
jle
fwait
jmp
icebp
add
out
nop
adc
push
not
adc
divl
orb
pop
dec
jno
or
adc
inc
add
js
stos
xchg
sar
mov
je
mov
lahf
fdivr
mov
adc
imul
dec
lock
testb
xor
push
xor
cmp
mov
mov
ret
js
test
lahf
repz
push
inc
mov
adc
pop
add
push
jne
inc
iret
out
lods
adc
pop
mov
popa
ss
rcrb
cwtl
mov
sar
fidivrs
mov
or
sbbl
sub
fists
addr16
inc
repnz
pop
xor
jmp
pop
cmpsb
aam
fldl
ret
xchg
pop
sbb
out
sbb
stc
insb
jno
iret
outsl
push
jb
xchg
cld
lea
push
shl
into
and
cmp
movsl
insl
ds
cmc
adc
cmp
jg
sbb
mov
xor
pop
and
clc
das
call
or
into
xchg
jbe
and
jle
loopne
imul
and
or
aam
or
xor
xlat
ret
adc
push
mov
xchg
dec
dec
fwait
xor
int
clc
pop
jmp
pop
in
inc
lods
pop
ds
mov
pop
push
mov
push
popa
imull
idivl
pop
out
fbstp
pusha
mov
mov
mov
cld
cltd
stc
sub
jl
jmp
push
adc
xchg
jne
rcll
jns
lret
inc
and
andl
inc
mov
sub
aam
mov
rolb
insl
pop
popa
sbb
int
jb
das
xchg
aam
inc
jecxz
mov
addr16
jle
repz
fisttpl
enter
dec
outsl
int
add
loopne
push
xchg
fst
push
lcall
aad
push
jo
jl
inc
and
in
push
mov
nop
je
adc
hlt
pop
sbb
xchg
xor
sbb
cmp
dec
sub
jg
vmovups
cmp
int
fistl
subl
call
outsb
cmpsl
test
mov
mov
xlat
hlt
inc
pusha
adc
jne
jno
xchg
out
jmp
mov
clc
rol
in
in
popl
jmp
aaa
xchg
pusha
loopne
repz
cmp
ljmp
clc
xor
enter
test
cmp
xor
pcmpeqw
xlat
jnp
push
cmp
cmpl
lods
fwait
pusha
in
loope
or
rcr
jno
push
jnp
mov
push
pop
ficompl
call
cmpsb
sub
test
or
aas
sbb
sbb
repnz
sti
inc
inc
adc
in
mov
addb
xor
xor
xchg
pushf
js
adc
xchg
loopne
gs
int
pushf
jne
xor
ret
scas
sub
lods
js
frstor
sahf
sub
gs
dec
stc
fidivrl
xchg
scas
iret
jl
repz
xorb
dec
test
shlb
iret
push
in
mov
imul
cld
popf
xchg
nop
push
scas
or
jmp
mov
lcall
pop
stc
fwait
lods
cmpsb
outsb
or
stos
fidivl
lret
jl
adc
xchg
loopne
hlt
aaa
inc
enter
inc
mov
fnstenv
adc
fldenv
xchg
dec
nop
mov
arpl
rcrl
jmp
andb
popa
in
dec
icebp
push
or
pop
mov
ljmp
pop
dec
les
cmp
inc
js
cwtl
hlt
cld
adc
adc
and
nopl
sub
shll
rclb
inc
push
stos
and
ss
mov
mov
cli
mov
rclb
cwtd
jl
xor
jo
pop
xor
or
pop
out
cltd
lret
cmp
scas
ljmp
push
jg
in
cmp
fnstsw
in
jo
movsl
imul
adc
push
xor
fsubrl
mov
rolb
mov
sub
mov
lods
add
gs
pushf
fidivrs
repz
jmp
sbb
sbb
pop
jns
push
out
fs
insb
pop
xor
iret
adc
bswap
pop
lds
test
adc
sbb
jne
push
je
xor
xlat
dec
int3
sbb
outsl
jg
xchg
cmpsb
inc
stos
lret
xchg
mov
imul
jnp
loopne
lcall
push
loope
cmovg
mov
pop
jbe
jge
mov
adc
lret
scas
pop
mull
leave
mov
add
lcall
push
push
imul
pop
cmp
push
in
xor
arpl
mov
in
mov
xchg
mov
mov
idivl
test
xor
ljmp
and
jns
ja
cmp
push
xchg
xchg
and
pop
jne
xchg
pop
jg
ljmp
pop
add
das
push
je
stos
inc
dec
push
mov
jg
mov
lods
add
stos
call
fidivl
es
mov
cmp
inc
pop
test
sub
aad
add
fsubs
test
inc
testb
mov
test
xchg
xor
cmp
dec
mov
jo
rcl
in
fnsave
mov
movsb
mov
pop
dec
mov
dec
out
popf
push
test
and
pop
lahf
hlt
pusha
push
pop
mov
pop
dec
std
ja
shlb
filds
cmpb
mov
in
scas
sarl
adc
scas
mov
stos
jbe
lock
stos
sti
inc
jge
sbbl
dec
sub
xchg
mov
xlat
das
mov
jl
add
or
dec
cmp
ds
mov
mov
sbb
sub
inc
xor
cmp
cs
fdivrs
pop
call
repnz
mov
out
xchg
push
dec
mov
stos
popa
xchg
push
pop
jecxz
sub
mov
mov
cmpsl
adc
dec
jns
loop
and
test
pop
dec
mov
jo
pop
pop
aam
fistps
jl
add
push
and
mov
pushf
push
cmp
bound
mov
lods
jg
aad
daa
inc
pop
xchg
jmp
enter
inc
xchg
mull
jecxz
sbb
and
outsl
xchg
lret
test
xor
and
mov
nop
lods
movsb
mov
popa
lock
push
and
and
out
bswap
mov
mov
aas
mov
inc
js
cmpsl
fmull
adc
cmp
add
mov
mov
xor
mov
mov
jmp
loop
pop
negl
test
mov
jl
xor
lods
cmc
add
and
data16
or
pop
mov
and
fcomp
test
leave
int
pop
idivl
popa
mov
pop
out
repnz
mov
mov
jbe
pop
xor
mov
cli
movsb
xchg
mov
fnstenv
jecxz
pop
repz
sbb
loope
jo
pop
roll
xchg
mov
lock
dec
push
push
mov
adc
mov
cld
cmpsl
scas
pop
push
je
pop
testl
sbb
jecxz
mov
mov
push
dec
xchg
add
out
js
lret
or
ficoms
outsb
sub
cli
out
or
mov
pop
movsb
fs
into
jns
fcoml
flds
or
sub
repz
aas
rorl
lahf
cltd
ror
out
mov
stos
out
pop
clc
lock
pop
imul
dec
pop
sub
sbb
out
subb
pop
cmp
and
les
jns
fisttpl
xchg
sbb
dec
inc
clc
xor
dec
push
loope
push
repnz
sbb
pop
push
gs
jbe
outsb
je
mov
pop
inc
add
cmovbe
ljmp
mov
imul
inc
out
lret
cmp
ljmp
or
dec
push
movsb
ror
cmpsl
and
aam
mov
pop
ret
and
test
xchg
jns
lods
pop
aam
lock
repnz
jmp
mov
scas
cmp
pop
sbb
fs
shrb
sbb
sub
rclb
push
mov
nop
cmp
xchg
xor
in
arpl
sarl
test
mov
scas
push
lret
das
jge
mov
xor
fisubrs
inc
sub
aam
sbb
xlat
hlt
test
sub
rorb
cmp
cmp
add
xor
adcb
lret
and
mov
pusha
xor
adc
pop
xchg
sbb
or
fdivl
push
fucomip
lods
xchg
leave
in
out
les
test
mov
push
xor
clc
test
pop
pop
inc
mov
dec
mov
sbb
adc
sbb
int
mov
dec
jno
stos
sub
adc
popf
pop
ret
mov
testb
add
pop
out
icebp
mov
mov
scas
xchg
or
call
inc
xor
rorb
call
mov
lahf
cmp
push
sub
sbb
cmc
cld
push
xor
push
scas
mov
xchg
scas
test
ret
mov
mov
mov
xchg
das
lahf
cs
std
dec
mov
cmp
popf
mov
mov
dec
lds
and
dec
cmpsb
cmp
mov
xchg
cmp
loop
js
fs
xchg
push
pusha
push
push
dec
or
inc
sub
fbld
es
push
push
xchg
pushf
inc
jmp
mov
shrl
mov
adc
xchg
mov
dec
test
cmp
fld
aas
jmp
add
push
xlat
mov
mov
xchg
inc
mov
mov
mov
pop
out
in
push
das
stc
aaa
test
xor
dec
jp
push
mov
fwait
lret
dec
int3
xchg
cmp
cld
jae
ret
mov
mov
sub
and
add
pop
mov
dec
lods
popa
xchg
call
es
and
pop
jnp
sti
fcomi
mov
call
sbb
std
mov
testl
xorl
add
sbb
push
xor
mov
lods
imul
into
mov
push
sbbl
push
adc
sub
jne
in
or
bound
or
mov
icebp
mov
adc
movsb
lret
xchg
jle
sbb
pop
montmul
cmpsb
jl
mov
sahf
mov
loope
push
shlb
in
repnz
mov
test
xor
bound
pusha
mov
cli
into
imul
addb
cmp
sarl
ja
xor
push
mov
mov
pop
fdivrs
out
int3
jae
xchg
and
pop
das
popa
mov
pop
xorl
adc
mov
lret
and
mov
pop
xorb
inc
push
shlb
inc
adc
dec
test
cmp
sbb
andl
cmp
jmp
incl
jo
sbb
fabs
in
in
sti
push
xor
inc
push
pop
xchg
adc
fisttps
out
test
pushf
leave
and
fwait
adc
outsl
nop
fstps
mov
jecxz
inc
cmpsl
and
xor
pusha
jae
fwait
leave
rcrl
test
push
outsb
xchg
push
or
jg
jne
xor
lret
xor
jb
std
push
fildl
mov
pop
test
jmp
ljmp
and
jno
daa
decl
insb
cli
and
cld
lock
xor
cmp
mov
outsl
mov
call
jl
xchg
test
xchg
and
pop
in
mov
fnsave
push
xchg
mov
xchg
rorb
bts
sbb
aad
fsubs
addl
in
test
lcall
js
xchg
stos
cli
mov
test
cmp
add
hlt
pop
cmp
lret
das
mov
xor
jnp
mov
mov
cmp
mov
aad
pop
add
mov
ucomiss
xor
mov
outsb
pop
push
test
fbstp
push
xchg
pushl
neg
ds
sub
stos
js
out
mov
sub
jae
jbe
roll
push
fidivs
loop
jl
test
pop
cmp
push
cmpsl
mov
or
mov
neg
xor
cmp
ds
loope
imul
dec
out
popf
loope
mov
rcll
pop
dec
mov
mov
or
repnz
jae
dec
push
outsl
iret
mov
nop
ss
in
push
mov
test
loopne
mov
fimull
inc
xchg
jns
rorb
fcoms
pop
repnz
or
inc
imul
xchg
in
es
push
sahf
sub
aaa
pop
std
xchg
inc
xlat
add
pop
cmpsl
js
sbb
fidivs
in
fnstcw
push
mov
add
popa
call
sub
push
mov
xchg
mov
push
add
xchg
add
les
cmpl
je
sbbl
outsl
jae
daa
jnp
push
inc
je
mov
arpl
out
cli
loope
je
xor
cmp
mov
mov
fwait
push
jae
xorl
hlt
fbstp
or
mov
fistps
lret
pusha
jmp
lcall
cli
sub
bound
data16
scas
sbbb
push
sbb
fcmovnu
lods
je
and
lret
divb
ret
dec
fdivrp
pop
rol
inc
push
aas
inc
sahf
movsb
adc
lea
clc
mov
pop
pop
cs
dec
mov
outsb
push
out
sbb
xor
rorl
jl
int
in
xchg
test
xor
notb
adc
loopne
js
xchg
and
cmp
mov
adc
push
adc
push
add
mov
dec
push
mov
lds
test
xchg
insb
call
push
lret
push
fsubp
into
loop
repz
lds
or
push
jns
push
stc
nop
es
popa
mov
cmp
loope
addl
loopne
or
push
aad
insl
lret
mov
mov
inc
jo
repnz
and
xchg
sub
jmp
dec
xlat
bnd
pop
mov
test
dec
mov
leave
pop
cli
in
idivl
les
inc
mov
mov
fwait
pop
xlat
in
fdivrl
stos
mov
cmpsl
outsb
daa
push
and
repnz
add
dec
xor
xchg
sbb
mov
inc
inc
pop
nop
push
adc
lea
repz
dec
fdivs
mov
sub
stc
int3
inc
push
loopne
mov
push
pop
inc
pop
push
or
mov
jmp
jno
dec
stos
add
aad
shlb
push
sahf
aad
sti
cmp
jle
mov
sbb
jbe
shlb
test
mov
inc
lahf
pop
push
incb
xorl
mov
in
movsb
gs
sbb
mov
sub
push
stc
inc
ds
push
outsb
cmpsl
jmp
xor
lahf
sbb
cmpsl
test
mov
cld
ficompl
push
pop
fwait
cmp
cmp
out
std
scas
lret
das
cwtl
sub
pop
je
xor
cmp
mov
push
xchg
daa
xchg
add
and
dec
push
sbb
push
cmp
add
push
sbb
xchg
or
pop
es
iret
xchg
inc
adc
js
mov
add
sti
jns
inc
jae
sbb
adcb
push
or
sbb
push
xchg
lahf
pushf
or
cmp
idivl
cld
js
orb
sti
sub
lret
mov
sbb
push
cwtl
or
cmp
xchg
insl
cs
xor
fimull
nop
add
xchg
push
cmpsb
dec
jne
ss
dec
shr
sbb
stc
aad
inc
aas
lret
push
or
jge
jo
push
lret
mov
jp
inc
cli
sbb
sarl
mov
mov
sbb
jp
lock
jns
fwait
dec
push
push
out
add
cmp
xchg
cmc
cld
inc
jg,pt
cmp
out
outsl
pop
pop
adc
cld
xlat
add
popf
dec
and
popf
push
xlat
test
dec
xchg
out
lds
mov
fisttpll
sub
mov
push
repz
je
add
xor
or
sahf
cwtl
jmp
lea
or
mov
sub
xor
or
cmpsb
das
adc
loopne
and
aad
cltd
inc
arpl
aaa
popf
jp
bound
andl
adc
fs
add
mov
push
lods
and
push
lcall
fcoms
xchg
add
rolb
fbld
or
mov
pop
test
ret
jb
jbe
sbb
jo
xor
dec
or
icebp
bound
nop
in
dec
lods
or
push
hlt
mov
jp
push
and
sub
aaa
jae
jmp
mov
idivl
pop
iret
xchg
fstps
aaa
fcoms
xchg
in
shrl
xchg
mov
aas
aad
sbb
cmpsl
mov
dec
push
fnstsw
fdivr
in
ret
cmp
dec
aas
cmpl
adc
mov
sti
mov
incb
fisttps
mov
loop
sub
jle
pop
lods
cs
xchg
jl
sti
jo
int
or
mov
and
adc
dec
cwtl
adc
jb
push
lds
jae
daa
mov
cmpsl
push
imul
jnp
cmp
or
xor
ret
xor
pushf
cld
ffreep
xchg
inc
xor
push
dec
mov
dec
into
into
insb
push
mov
dec
cmpsl
mov
mov
inc
pop
sti
jbe
jae
mov
dec
dec
xchg
jb
adc
sti
mov
or
push
insl
aad
test
test
aas
in
in
inc
xchg
mov
shl
cmp
inc
xchg
add
inc
into
mov
pop
mov
inc
and
add
sbb
pop
xchg
cmp
xor
push
iret
add
mov
push
ljmp
in
xor
mov
push
mov
enter
cs
fmuls
decb
or
jbe
inc
push
hlt
call
inc
jmp
and
aad
mov
or
xchg
adc
jg
push
pop
jns
cltd
sub
std
jo
mov
mov
lock
sahf
clc
xchg
scas
and
pop
insb
fimuls
push
mov
mov
inc
pop
xchg
jo
pop
sub
add
cli
out
mov
or
in
push
fistps
mov
sub
mov
pop
addr16
xor
mov
rorb
push
test
and
xor
hlt
insl
add
movsl
out
fisubs
cmp
push
rorl
push
and
or
lea
movsb
int
dec
aam
fsubp
mov
stos
mov
outsl
stos
outsb
xchg
shlb
andb
push
dec
lods
cmp
push
outsb
add
insb
hlt
negb
cmpl
decl
pop
mov
inc
xchg
push
sbb
push
in
icebp
and
andl
dec
dec
mov
clc
shl
in
int
and
nop
outsl
mov
call
push
xchg
enter
cmp
or
or
sbb
or
es
enter
inc
out
push
cwtl
outsb
or
lret
fcmovnu
cmp
mov
je
pop
call
inc
push
dec
adc
arpl
imul
fmull
je
into
push
in
lcall
jnp
dec
or
shrl
shl
cmp
sub
push
add
das
in
popa
mov
jge
mul
xchg
push
or
rorb
es
lock
mov
ds
popf
cmc
add
mov
xchg
outsb
inc
js
cmp
lock
push
pop
inc
inc
mov
popf
pop
fldt
nop
je
push
mov
jmp
sbb
rcrb
loope
aam
pop
imul
xchg
std
xchg
rcrl
arpl
sub
and
jp
jns
sbb
jb
roll
in
bound
popa
outsl
sub
dec
cmp
sbb
lods
cld
aas
fists
ja
jne
pop
pop
mov
lcall
in
bound
inc
test
flds
daa
sti
inc
mov
testl
cmp
add
insl
sub
pop
pop
daa
daa
jns
sti
xchg
in
jb
xchg
push
repz
xchg
push
sahf
mov
insl
ret
cwtl
insb
imul
pop
adc
push
movsb
xchg
repnz
ret
pop
mov
into
lret
js
std
scas
pop
mov
push
not
negb
jo
dec
ret
jl
loope
aad
nop
cmpsl
fwait
lea
jnp
jb
pusha
or
outsb
or
jl
pop
inc
push
aam
sub
mov
cmp
dec
in
mov
leave
fistpl
mov
cmp
sbb
or
bound
popf
enter
jns
lret
mov
jmp
iret
shlb
mov
sub
pop
test
push
cmp
cwtl
pop
xchg
jmp
pop
test
iret
inc
repnz
subb
sub
cmpl
loop
xor
dec
sti
lcall
pusha
std
test
ror
rcrl
mov
cld
fwait
jno
ret
pop
js
mov
push
xor
leave
imul
mov
daa
jbe
fcomip
andl
or
lds
mov
pop
dec
pop
or
aad
pushl
cmc
adc
jno
mov
inc
decl
shrb
xor
push
dec
repz
lock
ja
shrl
arpl
pushf
int3
and
popa
imul
fimuls
and
lods
dec
movb
hlt
movsl
jbe
aam
insl
cmpsb
and
pusha
xor
jecxz
inc
int
imul
adc
idivb
out
adc
push
jle
dec
popf
adc
mov
test
movsl
mov
rcl
orl
mov
push
pop
inc
stos
lret
push
ret
out
push
pop
adc
inc
icebp
hlt
pop
ja
push
push
push
loopne
clc
adc
and
mov
js
sub
cli
ljmp
xchg
mov
pop
js
sub
mov
fbstp
sysexit
sub
inc
lock
inc
dec
imul
or
sub
pop
loope
sub
mov
es
mov
xchg
outsb
dec
popa
dec
and
out
or
jecxz
arpl
mov
sbb
cmpsb
faddl
mov
jbe
adc
das
pushf
in
cli
mov
jmp
adc
out
popa
test
cli
int3
icebp
shlb
cwtl
adc
mov
das
fwait
stc
and
dec
out
sub
test
mov
jns
stos
aaa
xchg
jecxz
push
movsb
into
lret
jnp
pop
xor
outsb
adc
push
mov
add
push
out
mov
jns
loopne
orl
leave
inc
lea
stos
mov
push
push
cmp
push
dec
sti
push
aam
lcall
testl
mov
in
cmp
repz
cmp
pop
add
push
mov
mov
rep
lahf
daa
inc
adc
sti
cli
stos
push
pop
pop
push
in
xor
stc
addr16
aaa
hlt
fs
push
das
sub
iret
xchg
daa
inc
dec
je
rorl
insl
and
sbb
sub
jmp
test
mov
add
out
repz
dec
sarl
repnz
mov
sahf
pop
mov
repnz
pop
dec
aad
ror
mov
inc
xor
pushf
inc
xchg
mov
cmp
jae
dec
test
mov
push
fwait
pop
repz
repz
cli
sbb
jmp
mov
inc
jle
lea
jno
mov
out
mov
add
sub
lcall
mov
add
cmp
fildll
insl
xchg
into
inc
mov
push
lahf
test
mov
jo
icebp
loope
test
dec
imul
clc
lock
ret
and
jne
cmpsl
sub
and
pop
mov
rorb
or
jmpw
mov
rcrb
sub
mov
pop
and
push
adc
subb
cmp
inc
sub
mov
push
ds
movsl
rcll
in
push
xchg
and
inc
or
enter
sub
int
sub
sbb
jmp
test
mov
push
je
shl
shl
test
xchg
xchg
or
pop
xorb
addr16
sub
mov
js
mov
cmp
enter
pop
inc
sbb
pop
test
mov
out
in
outsl
scas
daa
rcrb
xchg
aaa
rorl
in
fwait
mov
inc
popf
xchg
push
dec
pushf
cmp
mov
stos
xchg
add
xor
shll
mov
add
enter
pop
or
sub
mov
jno
in
pop
adc
decb
lods
jecxz
call
outsl
xchg
flds
mov
or
testl
aam
add
js
lods
jno
test
sub
and
ds
scas
jmp
loope
push
or
mov
fidivl
outsl
int
adc
ret
mov
sub
sbb
jnp
leave
add
or
mov
sub
sub
push
in
jl
pop
repnz
loope
pushl
in
and
mov
es
fwait
xlat
push
fisttps
repz
or
pop
xchg
jb
fsubrs
lahf
jnp
jo
xchg
xchg
cmp
lods
outsl
outsl
xor
pop
sbb
fwait
imul
pop
ror
insb
add
mov
inc
inc
orb
enter
xchg
pop
inc
stos
pusha
push
or
lret
movsl
stc
mov
daa
test
push
dec
xor
sub
cmpsl
push
sbbb
mov
pop
icebp
lahf
push
jmp
jo
pop
aad
data16
shrb
lret
aad
sbb
test
ljmp
or
push
inc
sarb
dec
cmp
mov
dec
xor
mov
adc
jne
movsl
les
shlb
notb
test
jbe
add
mov
lret
jne
nop
jne
and
jp
pop
into
adc
scas
stc
mov
pop
aas
out
mov
insb
adc
xchg
stos
mov
jnp
cli
sub
and
mov
fcoml
pusha
lret
or
mov
cmc
cmc
mov
addl
pop
pop
pop
mov
es
bndstx
fisubl
insl
nop
mov
sub
fsubrp
xor
pop
out
divb
mov
aam
mov
add
jl
andl
jge
add
subl
jg
fidivl
out
and
jno
fldenv
ja
xor
scas
std
jmp
int3
cld
sbb
lret
push
pusha
cmp
mov
push
addr16
popa
fists
flds
rcll
pushl
or
sbb
daa
pop
or
and
xchg
mov
add
jbe
sbb
sti
cmc
sbb
scas
pop
nop
sahf
xor
adc
cmp
adc
mov
pop
insb
jae
ret
jne
test
fldl
movsb
test
jns
mov
mov
pusha
in
lods
ret
pop
or
jnp
icebp
imul
dec
and
clc
mov
xchg
jnp
ss
leave
mov
repnz
and
mov
cmpsl
shr
aam
arpl
push
orl
mov
movl
add
inc
shlb
dec
fdivl
lret
aas
xchg
push
mov
push
hlt
fists
sti
mov
in
mov
inc
pop
ja
push
pop
or
push
movsb
inc
lret
in
adc
sahf
add
inc
cmc
clc
das
cmp
jae
pushf
clc
ss
sbb
xor
cmpsl
fistl
or
cmp
jns
jnp
sub
out
lahf
push
loop
in
movzwl
push
push
mov
or
pop
push
sbb
sub
or
lea
mov
ret
ret
outsl
sbb
fwait
fwait
mov
sub
cli
jbe
in
test
das
jmp
sbb
dec
and
push
xor
adc
and
pop
test
jno
push
jecxz
fldenv
xchg
es
cmp
fidivrs
stos
rorb
add
dec
jno
push
movsl
data16
adc
adc
xor
inc
iret
pop
adc
int
lods
hlt
dec
in
pop
lods
sub
sub
subps
pushf
sbb
add
leave
mov
or
lahf
fs
incb
mov
sbb
rcl
xor
mov
mov
or
mov
sbb
xchg
adc
mov
es
inc
mov
divb
adc
push
xor
adc
cmc
and
inc
sbb
add
add
xchg
inc
push
outsl
stc
test
or
inc
std
daa
push
sub
mov
adc
rcl
sub
adc
leave
adc
scas
sbb
aas
mov
sub
test
jl
xor
mov
bound
cmp
arpl
cmovo
arpl
lock
push
testb
aad
mov
mov
sub
stos
lea
push
mov
adc
push
pop
imul
sub
xchg
fs
iret
insl
std
lret
rclb
loop
ret
scas
and
jle
dec
sub
das
int
jo
cltd
cmc
lock
cmp
mov
mov
orb
lock
insl
jge
bound
cmp
lret
lcall
ret
lds
jmp
aaa
dec
loop
lcall
push
aad
into
lods
dec
push
gs
fsubl
pop
pop
ds
sti
clc
ficomps
jnp
cmpsb
dec
gs
mov
std
push
flds
shlb
hlt
pop
xchg
or
dec
fists
mov
cmpsl
in
icebp
icebp
fwait
rcr
and
or
mov
mov
idivb
mov
mov
in
mov
pop
xor
mov
push
pop
pushf
rorb
arpl
mov
into
inc
sbb
sub
into
cmc
adc
xchg
adcb
xlat
dec
or
int
fcoms
dec
cld
mov
das
cld
push
mov
inc
and
cmp
pop
call
cld
mov
push
clc
stos
mov
inc
ficompl
fmuls
int3
mov
mov
sub
xor
imul
ret
xchg
pop
xchg
mov
pop
and
adc
cmpsl
xchg
pop
adc
das
mov
push
negb
mov
cmp
dec
inc
enter
fs
inc
jg
test
loop
xchg
lds
sub
dec
cltd
mov
shl
stos
dec
mov
push
cld
les
mov
mov
call
xchg
stc
leave
dec
jg
sar
loopne
xchg
push
sub
mov
rclb
or
iret
and
lret
inc
std
rolb
xchg
cmp
int
arpl
jmp
cmp
in
mov
dec
mov
and
movsb
ljmp
push
ffree
shlb
sub
push
scas
dec
test
cmc
sahf
add
adc
test
inc
mov
sbbl
jle
jae
repz
mov
mov
fidivs
and
repz
sbb
aad
pop
inc
dec
xor
dec
mov
mov
push
arpl
jge
sub
out
les
rorb
add
jp
ftst
mov
out
arpl
sbb
negl
and
jp
mov
sbb
clc
mov
outsl
mov
lods
pop
fisubrs
inc
pushw
hlt
fdivs
icebp
mov
add
pushl
xor
es
or
push
cwtl
pusha
scas
push
or
ja
jne
mov
rorb
mov
mov
nop
shl
test
jae
sbb
js
push
sarl
push
in
enter
xor
xchg
aaa
insl
dec
push
cmp
xchg
shl
lock
mov
adc
push
imull
cmp
cmp
into
insl
ficomps
adc
adc
loop
in
sub
fwait
movsb
xchg
jns
cmp
ljmp
enter
xor
and
faddl
icebp
jecxz
ljmp
mov
pop
xor
dec
inc
and
arpl
xchg
sbb
and
fdivl
ret
push
sbbl
push
lcall
ret
fistl
push
enter
addb
movsb
sbb
sbb
cwtl
pop
lahf
outsb
outsw
adc
movsl
xchg
imul
cmp
adc
test
aam
aam
shlb
fdivrs
xchg
inc
jno
sarl
cmp
das
pop
out
mov
add
aaa
inc
gs
and
sub
rolb
fisubrs
mov
and
js
or
cli
inc
in
insb
test
xchg
insl
mov
add
cmp
imul
rcl
test
push
aas
or
daa
push
das
add
insb
rcrb
cmp
ljmp
inc
sub
fld
xor
add
loope
pop
inc
push
push
mov
pop
jno
pop
jae
jg
outsb
xchg
mov
fbld
ljmp
lds
clc
imul
outsl
js
cwtl
add
mov
lret
testb
lds
mov
xor
clc
adc
jns
imul
jnp
push
sahf
pop
cmp
stos
icebp
xchg
add
or
dec
lods
pop
outsl
mov
dec
out
sbb
and
pop
jne
mov
xchg
or
add
mov
fdivrl
inc
pop
mov
lcall
int
jmp
pop
ljmp
ss
insl
pop
out
imul
test
sbb
mov
mov
add
icebp
dec
lea
mov
shll
ss
stc
pushf
cmpl
je
arpl
nop
push
rol
ljmp
dec
insl
rclb
cmp
out
xorps
or
int
or
std
add
dec
rorb
cld
mov
fs
fidivs
out
sub
arpl
inc
fildl
push
sub
xor
int3
fnstsw
cmp
test
sbb
jbe
lea
popa
mov
fs
mov
jmp
mov
adc
iret
addl
bnd
jns
hlt
mov
xor
jle
inc
push
add
aas
add
test
xchg
jno
jge
imul
jmp
xchg
push
ret
push
outsl
xor
jno
sahf
cmpsl
dec
pop
daa
mov
cltd
mov
mov
or
xchg
add
push
jno
dec
dec
xchg
cwtl
and
mov
jecxz
or
fstpl
sub
aaa
aaa
stc
sub
xchg
sarb
fidivs
xchg
mov
ret
dec
ja
mov
ja
cmpsb
inc
jb
push
mov
cmc
rolb
sbb
repz
cs
scas
sbbb
cld
pop
cmp
add
daa
sbb
cmpsb
mov
push
sub
mov
leave
cmc
mov
adc
and
repnz
iret
inc
push
movsl
ds
push
stos
outsb
add
adc
ljmp
and
int3
js
lods
push
out
lods
ret
mov
jo
aas
inc
adc
sbb
pushf
in
mov
das
push
ss
jns
jecxz
push
enter
paddq
fistpll
xchg
loop
mov
pusha
xchg
or
push
testl
loope
imul
popf
xor
movsb
jmp
dec
mov
jl
and
and
jecxz
loopne
jge
and
sbb
xchg
ja
or
mov
mov
or
push
shll
stc
push
ljmp
xor
insl
nop
mov
push
pop
sub
jg
shlb
sbb
pop
outsl
and
dec
mov
lahf
sub
mov
in
sahf
xchg
jmp
jl
and
test
data16
addr16
mov
enter
jne
test
xor
outsl
cltd
mov
add
int
cld
mov
adc
xchg
jge
lret
addr16
gs
stc
pop
scas
stos
inc
out
fldenv
stos
loope
sbb
nop
iret
xchg
push
jmp
jp
stc
ror
in
movsl
lret
rol
into
cmp
add
mov
xchg
filds
int3
cltd
dec
lods
ja
sti
insl
imul
imul
bound
cmp
mov
aas
sbb
mov
mov
clc
push
icebp
inc
cmp
and
jbe
xor
push
adc
int
jp
aam
jbe
ss
in
cmp
nop
arpl
mov
repnz
shrl
loopne
sbb
push
push
or
and
jmp
dec
pop
fwait
daa
stos
stos
push
mov
int3
xor
fsubs
pop
jb
mov
nop
pop
incb
or
cwtl
xlat
insl
pusha
lahf
in
movb
push
push
pushf
int
nop
cltd
addb
mov
mov
fstl
ja
add
adc
xchg
leave
lock
or
shrl
cld
stc
xchg
jae
inc
icebp
addl
cwtl
push
cmp
push
xchg
fldl
je
push
push
xor
int
pop
sub
enter
or
add
mov
xor
pop
mov
outsl
adc
cmp
dec
cmpsl
adc
and
nop
movsl
mov
push
pop
sar
and
cmc
mov
ret
adc
mov
les
cmp
dec
imul
add
mov
push
push
pop
cmpsb
out
repnz
hlt
sub
adc
pop
pop
pop
test
gs
lret
mov
jb
jp
sub
jge
sti
or
imul
pop
std
sub
xor
xor
test
pop
nop
push
cmpl
arpl
outsb
ret
negb
adc
jb
mov
aam
sub
and
pop
mov
fs
sbb
push
fxch
pop
movsb
and
jge
xor
push
pop
xchg
and
sbb
inc
cvttps2pi
pop
sbb
aad
pop
gs
cmpsb
stc
sarb
push
cmp
leave
arpl
push
fucomi
xchg
outsb
sbb
subb
sbb
clc
xorb
jmp
cmpsb
jno
or
push
sbb
dec
lods
xchg
push
cmp
mov
rcll
push
inc
xorw
into
fmuls
pop
push
ljmp
jne
sbb
xor
sub
into
jae
fbstp
clc
sbb
xor
adc
sbbl
cmc
mov
xchg
xor
loopne
xchg
lods
in
xchg
test
jne
and
xchg
scas
cmpsl
xor
pop
stc
inc
pop
xor
and
adc
and
fs
push
push
scas
fnstenv
push
adc
leave
es
je
dec
rcrb
ljmp
sbb
les
sub
mov
sub
pop
jmp
cmp
mov
mov
pop
inc
mov
jbe
adcl
imul
fwait
sti
push
test
jge
rcr
mov
nop
js
mov
mov
inc
cmp
or
mov
fmul
arpl
pop
and
push
cwtl
jmp
xchg
jmp
adc
rcrb
loopne
pop
xor
idiv
adc
xchg
cmp
frstor
mov
pop
mov
into
mov
push
fstl
dec
fcompl
lods
jg
mov
fnstenv
jmp
div
loop
imul
sub
popf
std
pop
xchg
into
out
iret
push
dec
repz
cmp
sub
pop
or
sti
push
cmp
lcall
gs
mov
inc
push
mov
push
cmp
sub
push
sbb
scas
dec
into
fdivrp
or
mov
ds
jge
xlat
flds
and
pusha
jecxz
jmp
dec
sbb
imul
bound
decl
call
mov
push
xlat
fldcw
inc
std
test
mov
xor
mov
movsb
xor
mov
in
xchg
shl
inc
pop
mov
mov
pushf
and
mov
sub
test
mov
cmc
test
lds
cld
inc
xor
sub
cs
test
fisttpl
mov
cmp
movsl
sti
mov
adc
dec
popa
das
cmp
repz
shrb
ja
enter
pop
push
arpl
sbb
cmp
jmp
pop
mov
inc
cmc
jl
lahf
setbe
and
pop
jo
cmp
jmp
test
mov
pop
cmpsl
das
cltd
in
divl
and
xchg
cwtl
push
mov
xor
loope
or
dec
mov
lods
jne
cmp
rolb
pop
mov
mov
lea
out
cmp
dec
in
sbb
adc
das
pop
movsl
test
push
and
adc
aas
mov
inc
fs
jl
in
pop
push
cli
outsl
je
sti
mov
fcoml
fsubrs
sub
mov
mov
mov
pop
jle
pushf
leave
fcomip
gs
xchg
or
and
push
or
jo
test
push
iret
sub
stos
das
hlt
outsl
lea
push
mov
and
lds
insl
ja
decl
movsl
push
sub
adc
pop
xchg
mov
xchg
lcall
aam
and
jns
insl
loope
jno
stos
add
pop
mov
xor
ficoml
sti
das
out
jns
popa
or
push
add
lahf
pop
insl
jg
cltd
mov
ds
pop
fstl
mov
inc
sbb
iret
jno
in
pop
mov
mov
cmc
xorl
add
aaa
in
jno
nop
or
iret
ficoml
pop
out
cmp
daa
mov
ss
dec
ret
icebp
inc
xor
or
popf
mov
subl
push
cwtl
imul
popf
dec
testl
stos
gs
xor
pop
int3
leave
popf
jo
movsl
pusha
and
lock
outsl
leave
push
pop
leave
sub
sbbl
pop
rclb
cmp
sbb
mov
jecxz
mov
frstor
in
into
pop
sub
iret
lea
adc
das
dec
and
and
xchg
int3
leavew
test
xchg
xchg
mov
std
or
sbb
rcll
mov
or
push
mov
mov
push
mov
pop
adc
inc
fldcw
std
jg
jmp
icebp
mov
jmp
pusha
outsb
push
dec
or
sbb
add
cltd
mov
fdivr
pusha
fisttpll
stos
inc
jo
shrl
xor
hlt
mov
pop
insb
and
mov
js
stos
sbbl
popf
nop
ds
xchg
aaa
ret
cmpsb
scas
sbb
hlt
jmp
ret
pop
stos
fidivs
inc
pushf
test
dec
mov
insl
addr16
fstpl
loopne
dec
in
in
js
pop
cmpsb
xchg
into
sahf
and
inc
popa
jno
aam
ja
xchg
dec
repz
repz
dec
push
jge
lods
daa
jbe
cli
dec
std
movsb
xchg
or
clc
or
mov
mov
roll
adc
mov
mov
jo
fs
mov
xchg
sbb
lods
sub
mov
jne
mov
mov
cmpsl
and
call
jmp
loop
push
das
movsb
iret
dec
jo
adc
mov
ret
stos
nop
cmp
or
sbb
aam
das
inc
push
or
push
mov
cmc
push
xchg
pop
sub
aad
in
leave
arpl
cwtl
jnp
xor
pop
sti
mov
xchg
int
mov
or
mov
push
fs
push
fimull
hlt
or
inc
xchg
add
lock
addr16
movsb
cmp
outsl
stos
jg
mov
add
push
gs
inc
xor
adcl
sbb
adc
leave
jnp
cmp
cs
and
jmp
jns
adc
filds
gs
lods
lods
mov
cwtl
xor
xlat
daa
outsb
es
and
add
mov
scas
lcall
ja
sub
mov
call
jbe
sbb
xchg
jnp
repz
jecxz
stos
jne
std
sbb
or
mov
mov
cltd
dec
sub
mov
lret
fistpll
fstpl
popa
push
jmp
repnz
or
sbb
mov
mov
mov
arpl
fs
mov
dec
mov
imul
or
pop
lcall
test
cmp
inc
rcr
out
sub
mov
pop
push
push
inc
in
into
push
pop
sti
mov
test
mov
and
or
mov
add
and
or
mov
pop
cmp
or
cmpsb
hlt
push
shll
add
add
xorl
cld
stos
push
mov
cmpb
enter
add
inc
xchg
jp
mov
insl
push
stos
mov
lock
aad
sub
push
push
push
pop
pusha
mov
mov
sti
mov
icebp
xchg
mov
sub
and
test
xor
out
sbb
movsl
out
mov
sbb
sti
dec
sbb
xchg
mov
dec
loop
aaa
ljmp
and
loopne
test
mov
and
mov
jmp
lds
cltd
jp,pt
sti
ret
cmp
sub
fildl
mov
sub
inc
inc
aad
jge
mov
push
mov
not
ret
pop
cltd
mov
dec
ljmp
cmp
mov
js
push
test
test
mov
mov
mov
int3
orl
dec
lret
cmc
push
adc
movsb
jno
mov
mov
imul
or
sarl
xor
sbb
xchg
xchg
data16
push
xor
xor
js
pop
in
in
xlat
call
insl
jmp
push
sbb
push
mov
lock
fsubl
inc
ret
subb
jl
sub
test
inc
in
or
mov
jle
stc
inc
add
inc
mov
adc
stos
push
mov
inc
insb
adc
xorb
cli
jp
inc
add
push
inc
dec
inc
inc
jae
mov
cmp
insl
xchg
andb
push
sub
push
add
mov
ja
sbb
or
xor
cmpl
mov
and
gs
data16
add
lea
loopne
bswap
inc
scas
push
or
cmpsl
out
adc
lods
jge
adc
clc
xor
mov
jnp
lock
jl
into
cmpsl
pop
mov
pop
mov
clc
das
sub
in
out
rcrb
lret
sti
cmp
inc
pop
mov
adc
sub
jns
lahf
cmp
sub
sbb
xor
addr16
inc
jns
add
aam
xchg
cmovg
lahf
test
rorb
int3
aas
hlt
pop
les
add
jne
xchg
stc
idiv
xchg
in
jne
jnp
add
xor
jb
aas
mov
xchg
cmpsl
fldl
sbb
push
mov
and
sub
stos
lret
arpl
mov
sbb
inc
push
sbb
gs
xor
inc
loopne
dec
xchg
lods
push
push
mov
inc
adc
adc
mov
jge
sarb
mov
repnz
inc
sbb
xor
clc
inc
mov
dec
ds
loopne
sbb
out
lock
lcall
jl
testb
std
jae
fcmovnbe
loopne
mov
fldcw
xlat
cmp
data16
rorb
xchg
and
pop
aad
pop
test
call
stc
fcomip
push
and
push
mov
and
test
insb
dec
pop
push
fsubrs
xchg
pop
std
aad
cmpsl
movsb
inc
aam
push
in
sub
popl
icebp
and
pop
mov
mov
jl
mov
cmpsb
xchg
enter
imul
cs
mov
push
sub
dec
and
jnp
test
push
out
scas
cmp
add
ss
add
into
mov
xchg
leave
decb
fwait
xchg
jns
cmp
dec
fistpll
pop
in
call
fisubrl
mov
test
pop
inc
push
ljmp
xchg
in
andb
xchg
sbb
out
pop
int
mov
repz
dec
flds
test
loope
add
lea
fisubrs
cmp
popa
mov
pop
std
ret
cmpsl
dec
jae
lds
das
xchg
sub
sub
mov
inc
mov
xor
ss
adc
push
fs
xchg
imul
adc
fdivp
arpl
sub
pushl
imul
mov
inc
out
mov
jb
xchg
and
lcall
pop
test
and
les
pop
fadd
mov
mov
inc
sbb
xor
ficompl
clc
push
or
test
or
fdivrl
pop
lock
pop
dec
xor
mov
dec
add
fdivr
mov
lahf
fmuls
push
sbbl
bound
mov
or
cli
imul
leave
pop
pop
in
popf
xchg
xchg
jmp
pop
aas
aad
in
out
sbb
scas
or
jp
pop
inc
add
push
jl
gs
arpl
rolb
sbb
cmp
xchg
push
pop
daa
faddl
add
fistpll
movsl
fs
inc
mov
sbb
aas
dec
sbb
outsb
icebp
sub
lea
arpl
jae
pop
loop
test
push
inc
or
lods
int3
loopne
mov
dec
jb
cmp
cmp
push
divl
ljmp
shll
aam
or
push
xlat
rcll
loop
inc
mov
stos
clc
lods
xchg
and
movsb
sbb
dec
arpl
pusha
dec
adc
mov
fwait
jns
xchg
cmc
push
jecxz
pop
mov
sbb
jp
scas
cmp
and
mov
addb
daa
jle
outsl
pop
lock
loop
xchg
add
sbb
push
bound
leave
loop
mov
dec
inc
daa
jno
int3
scas
iret
fwait
gs
jl
mov
outsb
shlb
ds
stos
jge
pop
popf
sbb
fistpll
nop
mov
xor
inc
and
and
faddl
xchg
xlat
sbb
inc
sub
xchg
cmpsl
push
mov
out
movsl
add
push
xor
or
add
clc
int3
stos
dec
push
cmp
jo
pop
sub
lcall
lea
push
mov
cmp
pop
mov
xchg
or
test
sub
xor
adc
int3
mov
in
mov
push
mov
fsubl
mov
mov
lret
adc
aad
dec
push
cmc
pop
rcll
add
scas
sbb
add
xor
inc
imul
mov
jg
test
push
pop
or
outsb
dec
and
lock
xorb
fisubs
fistpl
dec
in
nop
xor
fst
fstps
hlt
leave
aas
mov
lea
movsb
push
mov
pop
push
adc
arpl
mov
ss
mov
int3
inc
cwtl
push
and
jp
mov
push
pop
push
xor
jl
pop
adc
xchg
xor
shll
or
or
xchg
and
scas
mov
sbb
mov
mov
ljmp
jno
lcall
lock
or
popa
movsl
cmpsl
in
dec
rclb
es
pop
rcrb
pop
xor
call
imul
pushf
pop
xchg
xchg
pop
outsb
mov
xchg
lods
jmp
aas
idivb
mov
sbb
rorb
xor
iret
test
mov
mov
xor
dec
loopne
push
pop
loop
add
push
mov
stos
lods
xor
into
mov
lea
mov
out
cmp
jnp
xchg
dec
fistpl
push
lret
pop
ss
fcmovnu
push
inc
arpl
mov
fstpt
jge
aad
arpl
dec
jp
mov
mov
push
jp
or
pop
mov
fstpl
outsl
gs
lods
pop
bound
or
cmpsl
mov
das
into
and
or
mov
xor
push
xor
fs
cmp
xor
loope
das
shl
insl
loopne
push
lcall
xlat
test
push
orb
lods
dec
push
movsb
xor
aas
mov
adc
cmp
test
idivb
jmp
insl
pop
inc
js
push
out
int
push
jne
sub
insl
test
jecxz
push
fwait
dec
push
lods
push
out
mov
ds
cli
sub
mov
ficoms
sub
cmp
push
fnsave
inc
mov
jp
fs
and
or
push
ds
push
push
or
add
test
das
cwtl
test
xchg
leave
loopne
mov
movd
jp
clc
int
sub
and
hlt
cmpl
ficompl
and
fistl
sbb
xchg
movsl
xchg
add
cmpsl
jmp
or
pusha
sbb
test
sub
push
mov
pop
lea
outsl
nop
je
adc
mov
mov
sub
popa
rorl
dec
ficompl
rolb
das
cmp
pop
or
insl
fwait
mov
cmp
mov
mov
fmull
inc
das
push
cmp
xor
iret
das
fimuls
and
inc
jge
sbb
push
add
sarb
int3
addr16
mov
roll
jb
cmc
mov
jl
xchg
lcall
mov
mov
push
bound
ret
pop
and
gs
xor
lret
int
mov
cmp
mull
icebp
fcom
repz
lods
insl
xor
lcall
sub
idivl
pop
pop
and
leave
push
mov
xor
pop
scas
push
pop
mov
and
lcall
xchg
test
xor
mov
dec
push
aas
fsubs
insb
or
dec
imul
scas
xor
cltd
push
dec
jo
aam
mov
and
popf
sti
sub
in
test
leave
inc
push
mov
add
cmpsb
fstp
les
fisttpl
lcall
aas
xchg
ss
mov
insl
mov
mov
enter
idivb
lods
enter
dec
cmp
arpl
sahf
mov
jo
mov
xlat
pop
xor
cld
imul
movsl
cli
sbbl
lds
les
mov
fsub
jae
repnz
and
andl
xlat
push
repnz
movsl
mov
sti
es
jmp
mov
fnsave
and
out
cmpsl
pop
pop
add
cltd
std
lds
mov
adc
les
mov
test
push
pop
insl
iret
test
repz
mull
or
mov
outsb
cmc
aam
jno
add
dec
movsb
xchg
inc
scas
pusha
jns
or
push
jb
aam
push
sbb
mov
pop
mov
xor
push
xor
adc
faddl
shl
jb,pt
fbld
cmp
loop
xchg
popa
pop
push
jecxz
sbb
xchg
xchg
xor
push
ret
movsb
pop
push
cmc
and
jle
std
popf
dec
daa
popa
popf
push
scas
mov
add
mov
lea
add
lcall
mov
div
mov
sbb
xchg
fwait
cli
popa
out
xor
mov
fcomip
imulb
neg
cs
push
das
adc
popf
pop
push
pusha
rorl
int
popa
cmp
bound
out
push
inc
repz
fnsave
das
add
ficomps
into
clc
pop
cmpsb
lret
push
dec
dec
jbe
out
cmpsl
incl
xchg
xchg
lret
or
xor
xlat
pop
mov
mov
popa
into
addl
scas
jb
loope,pt
mov
push
sub
add
jbe
jge
and
push
xchg
pop
ja
jnp
mov
mov
sbb
or
test
jp
sahf
fisttpll
aad
cli
cmp
aad
aad
cmp
cmp
movsb
xor
std
jg
jns
insl
xchg
pop
popa
cmpsl
pop
out
mov
sahf
cmp
ficomps
rcr
and
stc
pop
xchg
leave
cwtl
icebp
outsl
xchg
jnp
loopne
sbb
scas
jecxz
lea
mov
clc
sub
sub
sbb
push
xlat
push
stc
int
flds
dec
lahf
enter
xor
fsubrs
xchg
fs
mov
in
pop
movsb
aas
test
inc
scas
repnz
dec
cmpsl
mov
aad
xchg
ss
int
stc
mov
xlat
jnp
pushl
sub
and
in
pop
outsl
ja
shll
enter
gs
ret
or
fadds
adc
mov
repnz
cmpb
out
inc
push
push
flds
sbb
fdivl
jnp
xchg
adc
mov
dec
cmpsb
shll
jge
aas
out
jae
cmp
push
outsb
stos
pop
in
fistpll
jle
popa
sub
push
mov
mov
outsb
push
dec
repnz
add
push
loopne
sarl
xchg
lds
inc
push
cs
or
insb
ret
xchg
jmp
rclb
scas
lock
sub
roll
xchg
dec
xor
pop
mov
and
test
cmp
fdivrs
mov
mov
ljmp
notb
fwait
xor
add
mov
scas
sbb
cmp
subb
pop
jmp
push
cmc
sbb
jnp
jl
pop
add
inc
pop
ss
fstpl
fcoms
mov
loop
lea
lahf
xor
jnp
icebp
mov
mov
cli
ljmp
sub
pop
sub
adc
sub
test
xchg
inc
lock
or
test
test
scas
sub
sahf
adc
cmp
repz
sbb
sbb
addl
xchg
lahf
inc
cmp
insl
jae
xor
dec
add
lods
int3
cltd
or
dec
call
jmp
mov
pop
popf
inc
and
dec
mov
pop
dec
loope
out
int3
cmp
adc
adc
or
jae
cmp
cltd
xchg
fldt
adc
repz
mov
add
jge
aam
std
testb
leave
push
popf
adc
orl
add
sbb
cltd
cmpsl
pusha
fidivl
xchg
cmpl
jne
add
popf
xchg
xor
pop
repz
and
push
hlt
or
inc
arpl
xchg
nop
add
mov
inc
ret
std
adc
scas
or
pop
jmp
xchg
pop
lea
fidivrl
jbe
push
add
scas
test
or
push
mov
nop
pop
dec
dec
pop
and
loop
lods
js
or
or
mov
cmp
aam
lock
pop
imul
and
rcl
add
xlat
fs
sarl
cmp
mov
hlt
fsubrs
adc
add
adc
icebp
je
fcmovnb
xchg
jae
xchg
sbbb
sub
cld
cmp
leave
in
jno
add
test
or
and
inc
and
mov
push
mov
pop
mov
shlb
scas
mov
xchg
inc
mov
dec
jmp
jp
sbb
inc
sub
xchg
and
dec
mov
push
mov
cmp
mov
or
bound
dec
cmp
daa
test
xorl
dec
movsb
mov
pushf
outsl
xchg
push
subb
lock
out
test
hlt
cmp
les
inc
lods
ss
aad
push
jb
push
fdivr
mov
sti
pop
adc
xchg
shr
sub
ret
cmpsl
jo
popf
jl
test
dec
cmp
nop
push
xchg
or
rcr
das
pop
mov
inc
sahf
daa
pusha
mov
gs
pop
jnp
scas
add
and
fldt
xorb
mov
push
dec
lds
mov
cld
jp
outsl
jb
push
and
ja
popf
cmpsl
rol
sahf
nop
jns
mov
adc
inc
jne
mov
mov
ret
lcall
dec
inc
xchg
mov
les
shlb
xchg
xchg
out
pop
aaa
fwait
dec
lock
cwtl
scas
and
adc
rcr
xor
pop
test
dec
push
pop
cmp
mov
int3
shr
idiv
out
push
sub
mov
lret
jae
cmpsl
lock
push
adc
adc
shrb
or
adc
daa
adc
jo
pop
je
lods
pop
cmpsl
add
dec
ret
or
jae
fnstsw
pop
dec
and
out
xor
fimuls
sahf
xchg
add
stos
pop
in
add
adcb
lods
and
mov
fsubrs
addb
inc
pop
xchg
seta
and
and
xchg
mov
mov
mov
mov
or
icebp
hlt
shl
outsl
inc
inc
test
cmc
insl
push
push
or
push
sbbb
mov
add
movl
dec
icebp
and
mov
and
and
adc
push
das
xchg
jp
hlt
push
lods
filds
fildl
push
jg
xchg
xor
in
jo
mov
aas
ret
addb
or
mov
jo
push
adc
and
popa
or
xorb
mov
aaa
pop
dec
arpl
xchg
orb
push
or
sbbb
xor
cmp
push
jle
jg
pop
push
jg
pop
mov
nop
or
xchg
sub
jne
repz
scas
inc
pop
or
jb
sti
dec
inc
mov
push
inc
addr16
test
aas
dec
inc
popf
xor
cmp
fwait
shll
or
loopne
sbb
mov
mov
notl
mov
test
popa
cmpsb
push
sbb
out
je
jge
fwait
cmp
inc
imul
and
gs
pop
xorl
jno
sbb
push
idivb
mov
push
push
lret
jns
jl
es
and
lcall
ljmp
add
in
xor
fwait
cmp
nop
clc
imul
cs
xor
dec
inc
lds
jne
sbb
ds
outsb
call
mov
cs
cwtl
in
pop
cmpsl
xlat
lds
mov
pop
dec
jae
pop
fstpt
dec
movsl
add
mov
xchg
loop
inc
mov
xchg
les
je
and
jb
loop
xchg
sbb
add
mov
mov
sbb
or
loopne
test
adc
cmp
mov
xchg
fwait
push
xor
jns
lods
xchg
push
dec
ljmp
fs
cmp
fldl
add
mov
mov
mov
mov
or
push
pop
sub
push
pop
cmp
and
jp
cs
jbe
push
jne
insl
out
mov
stc
shrl
aam
lcall
jg
push
inc
shl
ret
ret
adc
add
xchg
aaa
jns
adcl
rorb
mov
imul
add
push
movlps
nop
cmp
sbb
push
adc
push
push
dec
int3
fstpt
xlat
pop
dec
push
nop
xchg
xchg
pop
mov
mov
ficoml
jecxz
testb
pop
aam
push
xchg
cli
pop
adc
in
fistpl
gs
push
jle
sub
or
add
adc
jl
repz
jecxz
inc
inc
jno
pusha
shlb
add
inc
mov
iret
shrb
test
xchg
push
push
enter
jns
fisubs
mov
mov
push
jp
cmpsl
jno
mov
scas
sbb
mov
push
sbb
movsb
sti
or
sub
jnp
mov
mov
int3
int3
add
stc
shll
ret
gs
mov
je
fcomip
incl
push
push
lock
pop
outsl
je
add
shll
xor
filds
jge
hlt
rorl
clc
jno
fcmovne
push
mov
in
fmul
mov
adc
xor
inc
das
xchg
loop
dec
neg
xor
nop
stos
xchg
jmp
jmp
ror
repnz
icebp
into
mov
mov
push
stc
cld
xchg
jnp
out
jb
rcrl
sbb
xchg
shl
mov
push
out
or
mov
stos
mov
incb
cmp
pop
mov
lcall
mov
cli
test
test
popa
adc
xlat
cwtl
cmp
push
pop
std
mov
jge
rorl
nop
icebp
dec
test
aaa
inc
in
push
sub
or
les
adc
lret
adc
fninit
cmp
add
scas
ds
add
mov
push
xor
ret
xchg
jmp
or
jp
gs
pop
sub
cmp
mov
std
loop
mov
lock
xadd
cmc
mov
aam
mov
stc
repz
pop
adc
mov
sbb
pop
cmc
and
pop
ja
test
fucomi
jb
jnp
jbe
xor
inc
xchg
mov
jp
les
dec
mov
pop
cmpsl
push
xchg
sub
ja
jne
movsb
lods
lock
mov
fnstcw
cmp
clc
ja
and
jl
push
jo
popaw
inc
mov
cmp
mulb
push
lahf
aaa
lret
mov
mov
and
sbb
jne
inc
aas
imul
pop
movq
out
sbb
adcl
sbb
push
pop
pop
jne
enter
mov
nop
mov
test
add
neg
or
and
sbb
test
cmp
xor
out
iret
xchg
adc
dec
cli
imul
rorl
cltd
data16
mov
and
into
pop
lret
rep
icebp
cmpsb
loope
xor
aaa
sbbl
decl
cmp
xchg
inc
sub
cmp
sbb
mov
inc
std
adc
sbb
ret
mov
pop
ds
mov
mov
jae
mov
mov
push
push
lret
test
sub
add
scas
aam
fwait
ds
addb
arpl
dec
stc
push
in
push
subl
insb
gs
fs
cmp
mov
loop
cmpsl
test
dec
push
cmp
xchg
lods
pushf
pusha
push
mov
xor
jnp
dec
dec
orl
pusha
orl
jg
pop
cmp
sbb
push
out
inc
stos
repz
sahf
jg
sub
shll
sbb
or
arpl
divl
cmp
push
inc
mov
jle
cwtl
mov
fs
leave
mov
mov
std
mov
scas
push
jno
jp
sub
cmp
mov
mov
roll
dec
leave
bound
mov
lods
mov
sahf
sub
pop
sbbl
jge
push
inc
sbb
sahf
xchg
pusha
mov
dec
add
ss
sbb
push
sti
inc
rorb
or
js
pop
daa
inc
mov
mov
dec
fcmovb
nop
mov
mov
out
jmp
leave
scas
mov
jmp
push
adc
outsl
inc
mov
mov
inc
ds
mov
fldt
into
hlt
mov
mov
mov
sbb
xchg
xchg
pop
aaa
push
movsb
cmp
notb
das
xor
fldl
hlt
push
add
xor
sub
sub
fwait
mov
insl
ds
ret
rcr
fmull
lds
and
push
jg
push
cmpsl
sub
mov
jo
lea
repnz
es
call
lea
mov
call
cmp
std
sbb
mov
aam
mov
or
push
mov
daa
fwait
jo
inc
xor
loop
xor
es
adc
daa
adc
inc
daa
xchg
dec
add
mov
xor
jl
sbb
js
mov
test
mov
sub
es
jp
xchg
pop
gs
mov
sahf
ss
push
cmp
cmp
xor
mov
push
cmp
outsb
in
test
dec
push
faddl
data16
add
and
add
push
or
iret
inc
pop
rcll
test
mov
jb
enter
lret
and
repnz
outsl
and
sbb
out
in
lret
testl
stc
mov
adc
pop
jb
cmc
insb
out
fcomi
xchg
aaa
loope
mov
mov
nop
inc
mov
jp
push
push
adc
xchg
daa
add
cmc
add
mov
mov
insl
jno
push
cmp
call
jecxz
pop
xor
pusha
andb
adc
dec
pusha
daa
inc
in
dec
lret
ficoml
roll
fistpl
push
or
and
repz
les
pusha
clc
or
loop
xchg
fisttps
xchg
lret
gs
orb
insb
and
aaa
repnz
push
jns
cmp
sar
rcr
adc
or
repnz
lods
outsl
lahf
or
jo
mov
dec
xchg
mov
cmp
mov
inc
or
dec
push
into
xchg
dec
sub
lret
lcall
xchg
push
repz
aas
or
push
int
sbb
call
stos
je
inc
push
or
lea
std
and
test
sbb
push
adc
pop
dec
hlt
ret
rcrl
push
mov
daa
or
mov
xchg
push
sbb
stos
sbb
xor
jg
cwtl
fsubl
add
sub
pop
cmp
fnstsw
xchg
movsl
sub
push
xchg
ret
or
aaa
outsb
cltd
jmp
mov
push
insl
std
ja
cli
sub
or
lret
mov
gs
sub
leave
dec
je
sti
jne
cmpl
cmp
cmp
loopne
sahf
jb
pop
out
jle
push
mov
dec
xor
lock
leave
xchg
push
frstor
testb
cmpsb
loopne
pop
push
cmp
pop
pop
bswap
add
movsb
ret
push
outsl
inc
push
pop
mov
adc
sahf
ret
xchg
xchg
pop
repz
jg
ds
lcall
addr16
faddl
push
hlt
or
dec
pop
adc
xor
scas
arpl
cmp
dec
mov
les
aas
xor
sbb
rorb
fsubl
addl
and
out
fsts
icebp
call
push
jno
mov
and
xor
lea
mov
push
fdivr
or
enter
nop
push
icebp
std
jge
push
jg
mov
subl
insl
lods
dec
shlb
or
sbb
jb
push
test
push
insl
in
hlt
movsl
scas
inc
push
sub
in
lret
icebp
pop
ss
in
jecxz
loope
push
add
mov
sub
nop
dec
int
int3
cs
jno
push
mov
and
xor
mov
pop
jnp
add
mov
aas
faddl
or
pop
dec
cli
loopne
sub
inc
adc
enter
mov
xor
vunpckhps
and
addr16
sub
pop
mov
xchg
inc
lret
or
js
popw
dec
jl
cmp
sti
test
jb
push
sub
imul
cmp
jp
xchg
stc
jge
call
cmp
repz
leave
repz
push
mov
adc
mov
repnz
sub
js
xchg
lods
out
pop
or
mov
mov
inc
adc
mov
int3
fucom
pop
mov
mov
push
pop
and
int3
xchg
arpl
rcrb
push
sub
lret
and
ljmp
movsl
or
pop
mov
subb
mov
cmp
out
lock
je
pop
adc
push
add
sub
cs
pop
pop
or
xchg
adc
lods
repz
lret
jmp
das
imul
xlat
movsl
or
mov
sbb
ljmp
add
sarb
push
call
icebp
in
add
lods
and
les
sarl
mov
bound
into
adc
push
pop
mov
xchg
scas
mov
and
cmp
inc
fistl
cmp
scas
je
into
subl
xor
inc
pop
push
push
in
mov
aad
add
mov
mov
or
inc
insl
sbb
int3
test
inc
test
sub
cmpsl
shrb
mov
mov
es
sub
adc
aas
cld
imul
xor
cli
mov
repnz
clc
or
xchg
inc
fmulp
mov
cmp
shll
xor
mov
sub
inc
and
mov
sarb
xor
xlat
pusha
xor
cmp
int
cmp
mov
jne
addb
mov
inc
int3
stos
iret
jno
fs
cmc
and
inc
mov
shlb
int3
loopne
push
sbb
out
pop
and
or
fsubs
subb
aad
add
mov
sbb
dec
and
inc
inc
rol
fdiv
test
sti
fisttpll
out
pop
push
pop
mov
jl
gs
or
cld
repz
iret
mov
aas
loope
adc
shlb
sbbl
pusha
pop
xchg
fbstp
dec
dec
sbb
mov
stc
inc
popa
jae
jecxz
cmp
and
aad
mov
push
mov
mov
fwait
leave
adc
mov
into
dec
mov
jae
adc
fcomps
aad
lea
daa
sbb
outsb
aad
lock
imul
sahf
scas
scas
mov
xchg
ds
xorl
fisubrl
dec
fsts
lret
push
fs
rol
in
jmp
inc
xchg
add
mov
dec
jno
inc
es
loope
movsl
jge
hlt
xchg
cmp
inc
cltd
outsl
cmp
icebp
aaa
cmp
push
rorl
xchg
stos
mov
test
lods
stos
scas
sbb
daa
lods
xor
roll
pop
dec
cmpl
mov
sub
in
inc
cmp
sub
scas
ja
aam
je
negb
fisubrs
ret
in
and
mov
and
shll
sbb
mov
in
jno
mov
les
mov
dec
push
sbb
stos
mov
sub
std
icebp
mov
int3
and
jl
pop
inc
ficompl
dec
jns
pop
stos
adcb
adcl
sub
es
cmpsl
ja
mov
jl
clc
lea
cmp
aas
bound
xor
sarb
outsl
imul
pop
mov
call
shl
or
push
fildl
cmp
rclb
scas
cwtl
pop
testl
shl
leave
pop
sbb
gs
das
stc
pusha
jmp
push
rcll
repz
loop
das
movsl
arpl
inc
in
sbb
xchg
movl
scas
adc
push
mov
loope
push
pop
icebp
stos
add
cli
call
and
dec
aam
call
cmpsl
mov
scas
fidivl
xlat
mov
mov
xor
bound
adc
mov
adcb
cld
rolb
mov
in
and
imul
lds
inc
xor
inc
lret
iret
mov
push
cs
inc
dec
hlt
jbe
cltd
cmp
popa
adc
cmpsb
adc
mov
js
cmp
repnz
aad
sub
inc
ljmp
test
dec
jle
and
jne
das
in
or
mov
inc
pop
mov
sub
mov
lret
icebp
mov
fwait
mov
das
xor
test
sub
loop
sbb
xor
ret
mov
fwait
cs
xor
mov
and
inc
loop
inc
test
es
inc
ds
repz
push
cmp
cld
pop
pop
lahf
sub
ds
movsb
push
pop
les
fstl
clc
data16
fwait
xchg
enter
mov
push
mov
nop
bnd
cs
stos
xor
pop
mov
jl
popf
arpl
cmpsb
sbb
jb
adc
mov
mov
pop
jae
jl
jbe
xor
fdivrs
adc
ds
push
lret
in
adc
cmpsb
and
dec
adc
mov
loop
imul
shufps
out
pop
in
or
and
pop
mov
push
out
mov
aaa
dec
jns
cmp
adc
mov
inc
mov
pop
stc
mov
and
sahf
lret
mov
xchg
int3
sbb
pop
pop
jbe
dec
xlat
mov
or
pop
push
mov
inc
outsb
pop
jge
sub
pop
aad
mov
jo
gs
push
sbb
lds
icebp
jns
mov
vfnmadd132ss
push
push
insb
das
in
gs
gs
sub
sbb
les
ficomps
imul
jo
mov
mov
js
jns
cmp
repnz
mov
mov
mov
out
jle
mov
adc
dec
clc
sub
lods
mov
repnz
pop
xchg
pop
mov
sbb
fwait
pop
test
mov
cmp
xchg
daa
jnp
lods
xchg
push
shll
xchg
ds
cmp
pop
pop
aas
adc
cmpsb
jge
mov
inc
push
inc
mov
lock
std
repnz
mov
insb
sbb
shll
into
mov
pop
aad
fistl
mov
fadd
bound
jnp
dec
and
or
out
std
xor
adc
dec
nop
cmp
movsb
xchg
daa
icebp
hlt
xor
cmp
bound
int3
and
mov
mov
arpl
sub
or
mov
cmpsb
xchg
mov
pusha
mov
adc
fdivrs
mov
mov
sbb
jge
push
add
subb
nop
daa
and
push
test
lret
dec
daa
push
add
addb
mov
push
in
inc
jmp
xor
scas
imul
in
xchg
out
ja
and
ficompl
push
add
pusha
sbb
xchg
adc
dec
sub
cld
rolb
xchg
adcl
clc
nop
rorb
test
inc
ljmp
pop
int
sti
test
pop
xor
fisttps
scas
cwtl
je
sbb
cmp
shr
es
clc
hlt
cmp
inc
mov
add
in
popf
and
add
ret
fdivrp
mov
ret
subb
cmc
xchg
and
mov
cld
mov
lret
jns
mov
gs
dec
pushf
mov
in
jmp
jb
cmp
cmpsl
outsl
in
inc
loop
adc
ret
xor
inc
std
mov
shll
movsl
andb
lahf
xchg
add
add
sarb
shrl
inc
xchg
pop
je
ret
cmpsl
nop
fdivrs
mov
xchg
sbb
test
xchg
mov
insl
mov
aas
ss
in
and
popa
pop
xchg
jg
jecxz
cmpsb
scas
mov
mov
xor
mov
fwait
or
mov
mov
lea
dec
int
or
fnstenv
jno
shrl
popf
test
fs
stc
cmp
testb
fs
cmp
cmp
int
addr16
out
ret
fsts
aad
out
pop
aad
xor
int
jmp
or
repnz
mov
mov
mov
mov
jecxz
jb
xor
repnz
mov
add
add
mov
adc
movsb
inc
push
jb
mov
test
pop
or
mov
in
bound
inc
jge
sbb
dec
stc
mov
shl
cltd
daa
fisttps
cmpsb
xchg
fisttpll
add
pop
loopne
gs
pop
cmp
add
jne
push
mov
mov
dec
mov
int
aad
es
sbb
or
fisubl
out
or
xor
push
bnd
call
fs
jge
and
insb
push
ja
push
cmpsl
mov
je
cld
mov
add
dec
cmp
pusha
push
test
loope
popf
mov
lea
je
add
pop
popf
into
jne
in
xlat
sub
xchg
and
lahf
andb
popf
pop
loop
sti
xor
cmp
pop
add
repnz
icebp
or
les
test
jmp
iret
push
jo
dec
or
call
xlat
shll
ffreep
sbb
popf
add
dec
jno
call
cmc
sub
test
jne
daa
test
cmp
push
jle
mov
and
scas
sbb
popa
xchg
xor
push
push
sbb
xchg
push
stos
outsl
inc
push
sub
out
stos
jl
inc
mov
inc
pop
jmp
mov
mov
pop
in
xor
movsl
in
inc
sub
loope
pop
stos
sbb
enter
les
repz
adc
nop
aas
arpl
sub
fimull
mov
push
sbb
mov
push
fwait
xor
adc
flds
add
sub
inc
jne
jp
cmp
in
inc
cmp
xor
mov
mov
lods
mov
xchg
sub
popa
cmp
and
and
iret
shlb
pop
ljmp
xchg
dec
nop
pop
adc
and
lea
add
rcr
cltd
xchg
out
adc
pop
stos
dec
orb
sbb
lahf
std
lret
adc
fwait
sbb
xchg
cmp
add
push
inc
fwait
sti
add
xchg
lods
sub
mov
orb
jmp
pop
stos
and
inc
push
pop
mov
cmpsb
xor
or
inc
inc
mov
cli
mull
into
fisubs
leave
sbb
std
fs
dec
gs
sbb
inc
mov
outsl
imulb
mov
shll
pusha
sbb
mov
dec
mov
dec
mov
jno
into
mov
scas
inc
je
insl
cmc
enter
sbb
mov
rcl
cmp
mov
roll
je
sub
pop
popf
fsubrs
ficomps
cltd
into
fnsave
popf
dec
pop
jb
fwait
sub
adc
xchg
cmp
shr
pop
push
pop
pop
jo
sbb
adc
cmc
and
and
and
clc
jbe
fadd
movsb
cmp
stc
xchg
xor
sub
sub
push
push
std
adc
and
fsubrl
mov
je
inc
mov
sar
fs
pop
js
push
call
das
f2xm1
mov
clc
lods
mov
pop
int3
push
inc
cmpsl
frstor
icebp
sub
jge
xor
xlat
mov
movsb
ret
test
mov
shll
in
cmpsl
dec
jmp
repz
cli
adc
addr16
es
dec
scas
nop
pop
push
jae
popa
dec
or
addr16
mov
mov
pop
sbb
in
outsl
inc
push
inc
inc
out
pop
sub
lods
adc
xchg
repz
bound
inc
jmp
push
dec
lds
mov
sahf
push
daa
xchg
inc
sub
aad
and
lea
fbld
cmp
xorb
fbstp
icebp
fiadds
inc
mov
adc
xor
jne
jge
pop
ds
cwtl
or
mov
frstor
mov
aas
jbe
sub
in
imul
sub
ror
fdivrl
or
mov
loopne
xor
mov
fs
into
push
mov
std
icebp
dec
jge
xchg
scas
inc
push
movsb
leave
roll
pop
out
in
jno
cmc
repz
xlat
jo
sbb
out
mov
push
in
clc
cmp
jge
fs
push
mov
mov
call
adc
add
push
or
inc
push
jnp
push
xor
out
sti
shrl
pop
scas
dec
mov
in
sub
je
test
pop
popf
xor
adc
nop
aam
xchg
cmc
in
fists
outsl
pop
aas
xchg
or
fwait
dec
push
jne
ret
push
sar
pop
pushf
enter
lahf
jge
shlb
push
mov
xchg
nop
fdivl
leave
mov
daa
dec
pop
xchg
mov
add
lea
imul
ret
xor
mov
or
ja
xchg
jbe
pop
mov
aas
and
mov
fld
push
mov
lahf
movsl
imul
pop
and
jns
mov
push
and
mov
lret
pop
cmp
into
push
adc
jmp
mov
or
in
pop
test
jge
insl
jns
add
popa
cmp
jno
or
pop
jle
rclb
sbb
adc
add
xchg
call
cwtl
add
and
mov
jne
js
xchg
and
call
aas
mov
insl
hlt
loopne
out
cwtl
ror
dec
int3
leave
and
ds
dec
pop
js
incl
into
and
or
stos
fcoml
dec
arpl
xlat
enter
xlat
fistpll
inc
aas
imulb
pop
data16
dec
out
mov
sub
fidivrs
imul
or
pop
rorl
sub
cmp
mov
xor
sbb
push
aaa
push
xorb
sahf
iret
loope
mov
pop
jp
shl
inc
adc
loopne
leave
pop
test
xchg
test
cs
jecxz
cmp
fs
xchg
jmp
cmpsb
roll
push
xor
std
stc
jl
mov
pop
xor
insb
cs
cmpsb
add
sub
or
lock
std
mov
dec
inc
call
cmpsl
xor
sbb
movsl
scas
rclb
cltd
mov
mov
into
ret
clc
or
and
popa
sbb
sahf
pushf
lods
bound
sub
xchg
adc
jmp
rolb
or
xchg
sbb
jle
loop
arpl
jmp
test
nop
push
aas
cld
pop
adc
rorl
cmp
jmp
lods
jle
hlt
mov
sbb
sbb
and
insb
inc
repz
jno
mov
xchg
push
jl
sub
in
mov
lock
cmp
lcall
or
mov
xlat
push
mov
and
enter
lods
pusha
movsb
push
sub
or
cmp
jmp
or
cmp
sahf
dec
fiaddl
arpl
dec
orb
mov
jo
adc
jle
addl
mov
mov
mov
cmpb
pop
inc
test
push
mov
in
push
repnz
and
cs
cmp
cld
sub
ret
cmp
cmp
inc
pop
push
inc
aam
lret
pop
lods
jnp
mov
pop
and
mov
adc
or
punpckhdq
js
adc
dec
pop
test
insl
pop
jge
or
add
or
mov
enter
jge
cld
sub
jle
clc
std
ds
push
jae
adc
repz
pop
cmp
and
inc
jmp
andb
jp
xchg
in
inc
pop
fsubrs
movsl
or
xlat
sub
lret
dec
enter
add
mov
sbb
jbe
pop
dec
in
fdivs
pop
jne
and
ret
pop
lods
test
sub
sub
int3
sub
cmp
inc
jns
sbb
inc
push
es
push
scas
jnp
inc
or
push
call
in
div
sti
or
dec
imul
adc
dec
mov
mov
ljmp
addr16
xor
aad
ljmp
negb
jecxz
lea
insb
dec
insb
xchg
das
add
mov
movsl
push
lock
or
mov
push
stc
daa
enter
jp
repnz
lcall
pop
out
mov
mov
cmp
inc
xchg
in
ja
pushf
icebp
inc
mov
sbb
push
cmp
cmpl
bound
pop
pop
jns
lret
popa
mov
dec
in
into
ret
hlt
cmp
adc
data16
adc
cmpsl
jl
cs
mov
test
mov
in
push
sbb
addl
add
mov
jb
cs
stc
dec
out
mov
xchg
add
inc
jae
pop
or
push
xor
bndstx
ds
call
and
in
adc
cmp
aam
dec
int
popa
mov
inc
jbe
xchg
les
fldl
aam
push
loope
jbe
push
xchg
mov
daa
rolb
mov
or
push
shlb
sbbb
adc
loopne
add
pop
mov
adc
sbb
pop
scas
mov
push
add
lcall
push
inc
test
in
add
mov
ret
sbb
xchg
xor
jne
ret
cmp
dec
int3
outsl
lcall
movsl
sti
daa
or
adc
lret
push
sbb
jns
testb
xor
sbb
fldl
mov
dec
iret
jge
push
scas
cmp
scas
sbb
pop
pop
ficompl
dec
jmp
js
push
and
mov
sub
insb
mov
icebp
repnz
dec
mov
dec
push
xor
jecxz
pop
xor
insl
inc
int3
das
jne
jne
rcl
push
mov
rcll
je
mov
nop
lret
xchg
and
nop
cmovns
packsswb
shlb
scas
icebp
inc
jbe
push
cld
and
out
je
iret
nop
or
lock
fistpll
in
ja
or
fs
repnz
shrl
xor
loop
xchg
mov
pop
cli
push
cmp
int
and
xchg
mov
xchg
xchg
mov
iret
xchg
lock
sbb
cmp
add
imul
jae
push
pop
rcrb
add
es
jno
stc
inc
clc
aam
add
sub
mov
push
repnz
mov
aam
sbb
mov
dec
movsb
popa
cli
and
jne
add
inc
and
daa
mov
fcmovu
into
cmp
xchg
ss
add
in
loope
pop
dec
mov
jg
or
adc
mov
adc
in
push
fwait
pop
mov
sub
mov
sbb
pop
cmp
jle
ja
repz
aaa
cmp
imul
mov
mov
dec
xchg
hlt
mulb
dec
je
iret
cmp
das
loope
cs
imul
pop
cli
push
lock
out
addr16
jno
or
lret
jno
loope
jg
pop
cmp
cmc
cltd
push
sbb
cmp
mov
in
lods
fadds
insl
jnp
aad
js
rcrb
pop
mov
sub
pop
aad
lods
dec
inc
pop
inc
fwait
sbb
push
jnp
inc
or
test
pop
pop
xor
stos
pop
sbb
dec
and
jbe
and
fwait
inc
mov
push
fmuls
mov
rcr
sbb
loop
xchg
mov
lcall
mov
mov
mov
push
add
cmp
rorl
xor
inc
lea
addb
mov
add
mov
mulb
mov
lods
ss
movsb
fs
jl
cmp
clc
loope
js
push
test
and
cs
or
insb
clts
scas
xor
dec
push
inc
dec
xor
fimull
movsl
xor
lods
data16
add
mov
sub
xchg
mov
or
mov
int
outsb
popa
movsb
shrl
lahf
mov
pushw
cmp
xchg
stos
jle
xor
insl
fwait
shrl
xchg
cmp
shlb
mov
cltd
sub
popf
imull
push
shll
mov
pusha
rolb
cltd
push
adc
sub
inc
or
ss
add
push
les
cmpsl
stos
add
es
pop
sti
pop
xor
pop
movsl
shlb
loopne
jmp
mov
divl
test
jnp
mov
push
push
push
jno
ret
pop
mov
mov
sub
mov
test
fdivrs
or
mov
nop
out
fsubrl
rcll
push
andl
mov
sub
mov
les
les
mov
or
ret
xor
test
xchg
jecxz
mov
cli
in
jnp
xor
out
fcmovnb
xor
ss
icebp
pop
daa
mov
scas
xor
push
nop
aas
pop
clc
int
xor
rcll
in
add
adc
rolb
out
mov
cmc
xchg
lock
cld
lds
and
loopne
dec
stc
cmp
ds
or
mov
jnp
mov
sahf
sub
stc
outsb
lret
mov
nop
adc
pop
sarb
xor
push
loopne
adc
in
loope
or
psllw
fistps
ljmp
push
adc
in
add
mov
in
mov
jae
mov
scas
and
aaa
xor
xor
fdivrl
mov
daa
jg
xor
sbb
jecxz
sbb
and
and
mov
je
scas
jl
cmp
cmpsb
or
popf
aam
out
stc
mov
cmp
push
ret
out
cmp
cld
push
ds
xchg
adc
repz
add
sub
hlt
sbb
mov
imul
push
sbb
shlb
mov
ds
xchg
aas
test
out
push
daa
outsl
sbb
repz
mov
cmp
fwait
jge
lahf
iret
lahf
movsb
pop
or
fcmovnb
and
fnstcw
inc
xlat
shl
lret
je
cltd
push
test
inc
out
adc
inc
mov
dec
subb
rep
addb
or
cmpsb
sbb
jne
jl
and
push
xlat
sub
aam
rcrb
sbb
in
and
fsubp
or
movsl
mov
lods
shr
test
aaa
inc
movsb
clc
mov
fbstp
or
jl
gs
pop
int
fcoms
lds
or
adc
jo
inc
pop
jae
jg
and
sbb
out
inc
mov
mov
sub
xlat
or
fistl
inc
mov
aas
sahf
dec
xchg
iret
dec
sbb
push
repz
enter
iret
iret
js
int3
mov
clc
js
pop
dec
pop
movsl
cmp
sbb
enter
fninit
shrb
in
outsb
fldcw
in
jno
add
stc
fildl
sub
pop
pushf
jnp
repz
insl
inc
push
test
add
and
mov
mov
xor
push
in
shlb
rcl
lret
mov
out
or
sub
data16
popa
adc
test
movsb
lret
cmc
mov
jmp
int3
inc
add
mov
enter
xchg
inc
int3
xchg
stos
pop
mov
pop
mov
sbb
out
xchg
iret
adc
cmp
loop
por
movsl
ds
dec
aad
lret
jno
xchg
or
notl
mov
dec
sbb
pop
loope
out
adc
mov
dec
mov
stos
cmc
adc
loopne
outsl
mov
dec
mov
jge
push
jno
hlt
leave
add
sub
es
mov
or
xor
ret
add
or
inc
xor
fcomps
mov
lods
movsl
leave
add
pop
jp
mov
in
rclb
mov
lret
imul
repnz
lods
sbb
or
and
jno
and
xchg
fdivrl
push
pop
pop
jmp
mov
sbb
or
cwtl
mov
loop
fnstsw
or
and
les
cmpsl
jle
test
dec
dec
push
add
les
xchg
repz
out
movsb
es
outsl
dec
out
jns
sahf
xchg
and
cmp
push
nop
outsl
jae
sbb
ljmp
jmp
mov
sbb
jl
fcmovb
into
or
jb,pt
out
repz
leave
xor
inc
and
cli
mov
mov
adc
sbb
ss
mov
repz
or
inc
jns
xchg
jbe
imul
mov
mov
cmove
mov
add
mov
xchg
mov
jle
test
and
into
xchg
and
imul
cmp
jo
or
push
into
lcall
jae
out
lret
pop
sti
and
jg
dec
xor
adc
dec
dec
adc
push
fdivl
push
data16
mov
and
das
adc
add
pusha
add
test
xchg
adc
mov
pop
cwtl
mov
add
test
push
lds
sbb
int
daa
cld
daa
mov
push
clc
or
rorl
push
push
shll
shll
fidivl
inc
push
sub
xchg
dec
adc
inc
std
add
loopne
das
jmp
push
fcompl
mov
dec
fnsetpm(287
sub
mov
push
xor
mov
mov
mov
test
mov
mov
leave
xor
push
push
mov
mov
mov
xchg
dec
pop
aaa
or
lret
lcall
jns
jg
pop
dec
notl
jg
inc
cmp
movl
pop
push
add
and
pop
shl
add
cmpsl
inc
push
jmp
or
dec
inc
aad
dec
movsb
sbb
adc
daa
push
aas
flds
pop
hlt
push
aam
jb
jecxz
cld
xchg
mov
in
test
ja
and
cmp
dec
leave
xlat
popf
iret
pop
sub
mov
sub
in
add
jmp
jmp
je
mov
inc
cwtl
xor
xor
mov
js
jae
in
gs
mov
pop
adc
lahf
outsl
push
mov
scas
out
and
push
sub
inc
push
insb
fistps
decb
les
lods
xchg
int
imull
and
jbe
hlt
adc
pusha
pushf
popf
insl
adc
loopne
mov
popa
outsb
movsl
cltd
lahf
rorb
sbb
aas
push
mov
pop
into
inc
outsl
inc
cmp
sbb
mov
xchg
mov
or
or
fs
sub
ret
jnp
daa
imul
lea
inc
cmp
movsl
shl
mov
xchg
in
inc
add
out
and
inc
add
fwait
movsb
inc
outsb
aam
cmp
cmp
xchg
sbb
mov
xlat
dec
repz
sub
in
adc
jmp
sar
jmp
cmpsl
jle
pop
fnstsw
lods
es
addr16
test
jo
cwtl
repnz
in
cmp
or
cld
movsl
pushf
mov
push
push
sbb
jbe
cmp
mov
fwait
cmpsb
mull
lods
cmp
jne
cmpl
push
lds
sub
xor
pop
inc
hlt
daa
or
movsb
pop
rcrb
mul
jb
dec
xchg
shrb
mov
outsb
push
into
pusha
or
adc
sub
sub
popa
dec
lds
push
pop
popa
cmpsl
inc
test
mov
movsb
flds
xlat
mov
mov
shlb
push
imul
mov
push
lods
sub
ss
inc
cli
lret
push
push
andb
inc
dec
mov
insb
ljmp
xchg
inc
push
sbb
int3
sub
test
sbb
mull
lock
xchg
xchg
gs
sbb
xor
mov
insl
pop
loope
in
sbb
rcll
xor
push
sbb
mov
mov
mov
repnz
mov
int3
inc
cmp
in
xchg
xchg
push
je
or
je
loop
adc
xchg
adc
nop
fcomp
mov
mov
sbb
or
repz
aas
push
rcr
daa
iret
cltd
pop
push
popa
xor
dec
sbb
dec
decl
les
lahf
cs
inc
orb
addl
cs
sbb
xor
ja
cmp
mov
test
fsubs
jle
stos
lcall
das
cld
loope
push
mov
push
add
pop
rolb
stc
cwtl
mov
xchg
les
inc
insb
pop
pushf
sbb
mov
ds
mov
jge
jmp
sub
or
cwtl
mov
pusha
lods
add
inc
fbld
pop
xchg
push
pop
mov
andl
xor
jo
mov
pop
cs
or
xlat
pop
test
mov
repnz
loopne
push
mov
pop
sub
inc
aam
jae
mov
adc
stos
or
cs
adc
sbb
loope
cmc
push
insb
cmc
jns
testl
adc
lss
inc
imul
pop
sub
decb
fldt
mov
and
mov
je
bound
cmp
inc
push
jp
push
pop
dec
lea
roll
movsl
dec
jae
loope
enter
jp
int3
sub
sub
and
sbb
cmp
dec
xchg
scas
in
jge
adc
or
cmp
or
cli
or
fistpll
dec
leave
inc
cmp
or
aas
lds
push
cmp
fcomps
xchg
loop
loop
das
js
call
mov
cmc
pop
mov
or
push
ud1
mov
xor
xchg
scas
pop
xlat
pop
lock
loopne
iret
mov
mov
xchg
jb
or
repnz
add
mov
and
adc
arpl
sbbb
add
xchg
lods
pop
sbb
into
mov
sti
sahf
js
xchg
inc
add
repz
aaa
insl
mov
out
in
jecxz
and
mov
mov
pusha
xor
and
pop
jmp
popl
inc
imul
dec
dec
stos
and
fcompl
jg
bnd
dec
push
ss
jg
jecxz
jge
or
arpl
stos
arpl
stos
adc
ja
jg
xor
rcl
test
imul
mov
jle
push
xchg
xor
hlt
lret
leave
aaa
cmp
push
mov
push
push
jecxz
sti
ds
and
xchg
pusha
mov
mov
adc
cmp
sti
sub
pop
add
mov
or
jl
pop
jo
pop
inc
sub
xor
jno
lahf
pusha
adc
sub
js
dec
sbb
jae
test
lods
js
enter
sbb
mov
mov
add
imul
jns
push
in
bound
arpl
mov
dec
xchg
ja
repz
xchg
cmpl
xor
lea
xchg
dec
es
jle
aad
jns
adc
int
pusha
xorl
mov
or
xor
mov
push
inc
mov
and
add
in
or
mov
jge
sbb
fimull
inc
enter
insb
outsl
dec
stos
ja
fs
xchg
shl
jl
lret
in
into
in
pusha
add
xor
adc
lock
in
lock
aaa
pop
fiadds
cmp
in
in
ljmp
addl
andb
ret
in
sub
cwtl
scas
pop
inc
in
mov
call
cmpsl
jnp
lahf
sbb
pusha
fwait
cmp
sti
push
mov
push
icebp
iret
shll
inc
mov
sahf
aas
xor
rcrl
adc
add
sbb
repnz
js
lods
xor
xor
fsts
xor
push
mov
ds
push
lret
sbb
out
mov
popf
xchg
adc
cmp
rol
add
add
or
inc
add
movsl
mov
out
les
adc
mov
mov
xor
daa
xchg
push
push
dec
aam
jb
mov
ja
jge
xchg
mov
mov
push
xchg
mov
sbb
sub
aad
push
mov
testl
out
push
xchg
movsb
jbe
jmp
shll
outsb
push
ficomps
imul
push
daa
test
xor
adc
popf
inc
aas
std
sub
ror
sbb
popf
dec
sbb
lret
addr16
insl
int
pop
jmp
scas
inc
push
stos
sahf
xor
mov
sub
cmp
nop
div
sub
lahf
cld
popf
imul
fcmovnu
mov
mov
test
mov
gs
and
dec
lods
scas
repz
adc
sbb
test
sub
or
testl
test
dec
es
popl
adc
jp
mov
es
pop
fwait
xchg
shlb
mov
aas
xchg
pop
sar
repnz
jecxz
adc
sub
pop
popa
lds
cmpl
cmp
or
and
xchg
inc
stos
enter
bound
orl
scas
push
pop
test
ja
cld
test
mov
int
fidivs
mov
inc
shrl
test
dec
cmpsl
push
jge
cmp
sbb
int3
push
sub
arpl
push
hlt
sub
scas
jbe
ja
sbb
cmpsl
out
adc
pop
aaa
addr16
jecxz
int
loopne
and
mov
addr16
cltd
mov
push
mov
ret
push
jecxz
mov
cld
sbb
mov
pop
or
aas
repz
jle
in
inc
xor
std
icebp
iret
mov
pop
pop
cmp
out
cmp
jno
xchg
nop
mov
outsl
fnstcw
xchg
iret
sbb
ret
dec
fisubrs
cmp
mov
out
mul
insb
in
dec
pop
cmpsb
xchg
incl
add
jmp
jmp
lret
imul
cld
stos
inc
enter
dec
shrl
ret
lahf
stos
lea
je
mov
push
into
or
jp
hlt
sbb
icebp
and
adc
je
xor
lahf
pop
mov
push
push
mov
mov
dec
xor
sbb
int3
mov
inc
jne
xchg
push
push
pushf
aas
pop
push
and
sub
call
mov
cmpsl
cwtl
dec
gs
mov
nop
test
ror
js
pop
dec
xor
mov
mov
movsl
fwait
and
les
xor
jne
push
test
movsl
movsb
repz
in
dec
add
cmpb
pop
ret
aad
movb
and
out
repnz
repz
scas
xor
aas
jbe
notb
subl
out
xchg
test
jmp
fidivl
cmp
incl
stc
dec
out
movsb
and
popa
cmpsl
sub
push
fs
jb
push
sub
ds
leave
lods
lea
and
repz
jo
xor
mov
xchg
outsb
daa
jge
bound
outsb
push
shrb
in
add
mov
and
dec
jg
add
jne
adc
stos
cmp
jge
cltd
in
push
or
lret
jns
mov
mov
cmpsb
mov
inc
fstps
popf
aas
mov
stc
aad
cmp
sub
cmpsb
std
call
mov
loopne
add
inc
pop
sub
mov
xlat
xor
push
add
pop
push
stos
mov
pop
out
sub
push
push
out
icebp
cld
add
and
aas
pusha
aad
out
loope
mov
in
inc
dec
cmp
jno
int3
cmpsl
xor
mov
ljmp
xchg
aas
in
shr
mov
addb
sub
xor
arpl
mov
mov
jno
insl
push
ja
fisttps
lods
push
aam
xor
enter
iret
in
shlb
shll
bound
pushf
clc
adc
scas
or
mov
xchg
call
aaa
jecxz
xchg
sub
adcb
loope
xchg
sbb
xor
shll
push
cmpsb
jp
addr16
push
fdivl
enter
jbe
cmp
stos
pop
jp
subl
mov
test
mov
aaa
inc
adc
add
out
xchg
orl
pop
out
nop
mov
add
adc
ret
into
xor
sbb
pop
mov
push
sub
xorl
in
jmp
or
pop
push
lock
pop
fists
pop
and
ss
jb
jl
popf
mov
xor
push
stos
inc
cld
push
cmovbe
inc
add
rcl
sbb
mov
les
fldl
mov
add
fmull
pop
add
loopew
aas
push
mov
shlb
xorb
popl
dec
pop
loope
jle
xchg
cmp
and
inc
dec
mov
adc
xchg
fisttpl
xorb
jg
push
pop
push
lds
or
push
sahf
ss
jp
and
out
in
cli
xor
add
fwait
adc
fsubrp
into
aas
xchg
mov
repz
pop
jae
sbb
daa
push
addr16
jmp
mov
adc
dec
jmp
inc
mov
mov
push
pop
cmp
mov
std
mov
cmp
test
mov
adc
aaa
cmp
dec
jecxz
lea
or
add
les
js
cmpsl
pop
sahf
loopne
dec
fsubrs
pop
add
lcall
jmp
mov
or
mov
sub
lock
insl
pop
inc
ficomps
xchg
and
gs
xor
mov
in
adc
scas
cld
xor
jle
or
pusha
jae
mov
shr
insl
push
rcl
std
push
xor
sub
pushf
out
xchg
repz
xchg
out
mov
insb
pop
fst
jp
ret
loop
sbb
cmpsl
mov
sub
mov
mov
add
gs
xor
mov
dec
rcrb
push
repnz
jae
mov
mov
lret
mov
sbb
pushf
jne
jg
mov
push
popa
repnz
in
rcr
scas
inc
push
enter
mov
adc
cltd
movsl
into
movsl
test
mov
movsb
outsb
jecxz
mov
sbb
ret
jns
aad
orl
cmp
stc
inc
rclb
xchg
add
aam
aaa
in
sub
ljmp
bound
outsl
cmp
push
iret
push
mov
sbb
sbb
shrb
dec
jns
fsubrs
mov
inc
mov
inc
adc
push
dec
mov
mov
leave
mov
push
inc
ret
adc
push
mov
sub
rcl
test
mov
js
push
push
aad
mov
dec
dec
ljmp
sbb
mov
andl
sub
push
je
xlat
ds
in
cwtl
and
call
stos
repz
jb
add
xchg
push
mov
xchg
repz
shll
xlat
mov
add
cs
mov
inc
mov
cwtl
jne
mov
pusha
fdivs
xor
jns
xor
bound
pusha
adc
hlt
lret
ret
rorl
nop
xor
je
inc
out
push
sahf
push
sbb
pop
or
ret
test
les
fwait
push
push
into
mov
pop
cmp
mov
push
xchg
ja
lret
out
mov
dec
enter
inc
mov
mull
cld
mov
enter
rcrb
inc
inc
mov
or
add
fists
xchg
int3
mov
repz
sub
xor
cltd
repz
ljmp
add
xchg
scas
push
cli
mov
add
xchg
scas
inc
scas
in
outsl
jge
add
iret
xchg
popa
out
add
mov
dec
cmp
lcall
orb
and
test
ret
sub
dec
add
scas
idivb
xchg
cmp
push
leave
stos
add
xor
arpl
loope
mov
aaa
adc
mov
mov
sbb
jecxz
mov
lods
add
clc
xor
pop
add
pop
sbb
test
sbb
jns
rcrl
lret
jmp
andb
adc
or
mov
test
dec
and
outsl
gs
xor
mov
rcrl
test
or
sbb
jmp
subl
push
push
mov
xor
mov
cltd
cltd
adc
push
jl
shl
jmp
repnz
adc
incb
push
fcomps
dec
cmp
push
iret
pushf
lcall
sub
jp
out
xor
mov
cmp
popa
scas
loop
int
sub
iret
iret
sub
int
fiadds
sbb
push
pop
repnz
shr
jle
push
xchg
add
nop
push
sub
nop
stc
inc
mov
movsl
imul
test
es
push
or
in
popa
xchg
inc
jnp
les
int
mov
mov
sub
std
mov
out
and
loopne
push
dec
sti
cmc
aaa
nop
xchg
inc
pusha
inc
push
pop
mov
inc
dec
cmp
jb
sub
xchg
mov
leave
push
add
push
inc
testb
or
push
in
and
notl
loopne,pt
xchg
dec
lds
lods
rorl
mov
sub
xor
ficoml
arpl
sbb
ret
lret
cmpl
jbe
fucomip
push
test
in
insb
push
sbb
movl
stos
dec
cs
dec
and
lret
mov
pop
dec
xor
jmp
loop
in
ss
outsb
scas
das
ret
xchg
outsb
sbb
insl
sbb
adc
outsb
sahf
nop
xor
movsb
sti
dec
inc
cmp
in
rcrl
or
inc
jae
mov
dec
or
push
lahf
popa
out
or
pop
int3
bound
repnz
push
mov
push
out
sbb
ret
push
dec
xchg
in
jb
xor
int
jns
mov
pop
data16
or
cmp
cmp
mov
ret
sbb
dec
xor
adc
movsl
mov
sbb
rcll
popf
adc
inc
mov
aad
xor
and
xchg
dec
mov
test
mov
jl
or
aas
adc
sub
xchg
pop
mov
and
mov
mov
pop
loop
cwtl
xor
xlat
fdivrs
cmpsb
sbb
mov
push
ljmp
lea
cmp
in
mov
jnp
shlb
fcompl
push
mov
mov
sbb
mov
mov
incb
add
lcall
repnz
mov
xchg
or
or
lods
int
sbb
add
push
dec
adc
push
testl
aad
pop
orl
out
leave
stos
test
mov
xlat
and
adc
sahf
loop
dec
sbb
cmp
add
xor
xchg
mov
fwait
xor
loopne
subb
add
dec
arpl
adc
xchg
mov
pusha
xor
int
sub
loope
xor
hlt
mov
lods
jl
out
outsb
mov
adc
fs
rcr
enter
fidivl
push
mov
fdivrl
cli
fiaddl
and
cmc
ja
loope
lds
lods
cmpsb
pop
mov
fwait
lret
bound
incl
cmc
inc
lods
fdiv
dec
sar
pushl
out
inc
dec
in
rclb
cmp
mov
or
or
jo
enter
mov
sub
repnz
xchg
ja
testl
incb
push
jae
ret
adc
out
ret
push
inc
jge
mov
mov
pop
pop
data16
sub
sbb
add
mov
enter
outsl
xchg
adc
movb
inc
dec
or
jae
cmp
cmpsb
cmpsb
mov
cmp
dec
xchg
insl
aas
incl
pop
std
sub
clc
mov
adc
ja
cmp
jnp
in
cltd
rol
pop
cmpsl
sub
loope
xchg
sti
sbb
pop
jmp
mov
lea
pop
test
int
xchg
jg
mov
mov
inc
inc
push
xchg
add
lret
inc
and
pop
leave
jle
es
es
adc
pop
mov
lods
les
repz
xchg
aam
mov
int
mov
cmc
mov
inc
dec
cmpl
add
outsb
dec
xor
dec
gs
ja
loopne
lret
mov
or
ret
cmp
cmpsl
iret
loope
mov
iret
cmp
mov
sbb
popa
adc
and
and
pop
jae
fwait
repnz
adc
cmp
jmp
mov
push
testb
orl
fstps
cmp
jo
jmp
lods
cmc
or
push
cmp
fs
sbb
and
jp
xchg
and
sub
lods
lret
push
mov
cmc
xchg
imul
arpl
cmp
ds
rcr
mov
pop
mov
dec
or
in
lret
ss
xchg
push
push
fsub
repz
adc
aad
lea
sub
pop
cwtl
into
stos
jo
mov
pop
pop
les
xchg
cmp
aam
push
js
out
sahf
push
lods
xor
incb
mov
movb
arpl
inc
scas
pop
jg
pop
les
xor
out
or
mov
and
pop
lcall
cmp
pop
movsl
pop
cmc
test
mov
int3
pop
lcall
push
out
outsl
xchg
cmp
push
sub
subb
and
imul
pushf
out
fimull
lret
mov
pop
pop
sub
adc
mov
and
inc
xchg
je
imul
in
xor
mov
popl
je
inc
test
lcall
mov
ss
mov
stos
fsts
or
jne
sbb
sub
sbb
lods
or
jg
mov
and
out
push
jns
aaa
icebp
cltd
or
cmp
mov
xor
aam
adc
test
imul
mov
xor
data16
pop
push
cmp
fcmovu
dec
orb
xchg
jecxz
inc
mov
adc
mov
insb
pop
mov
lods
adc
push
adc
add
adc
dec
mov
fimuls
mov
gs
je
xor
scas
sub
enter
ffree
jb
xchg
imul
and
mov
pop
jle
or
sub
cmp
cmp
add
inc
js
jl
jae
call
xchg
pop
inc
sbb
push
mov
push
in
inc
fidivl
lods
xchg
rolb
ficoms
stos
loopne
adc
push
out
fmull
pop
mov
jle
fimull
addr16
dec
cmp
sub
in
mov
dec
add
fs
repnz
and
popa
or
rcrl
xchg
insl
mov
mov
mov
adc
mov
xor
pop
sbb
hlt
and
shrl
cmp
add
int
sbb
mov
enter
inc
cmpsb
cmpsb
add
fisubrl
push
mov
orl
mov
mov
ret
mov
push
xchg
jle
stos
movsl
or
xor
insb
and
adc
pop
js
int3
rcll
add
pop
dec
jmp
ds
jb
aam
dec
xchg
inc
fldt
push
xor
popf
xor
jb
xor
lret
or
add
lahf
pop
jmp
ljmp
lods
jmp
push
loop
lret
add
movsb
imull
mov
in
out
test
je
adc
push
in
jl
subl
jmp
cltd
dec
sti
subl
aas
cmp
lock
lcall
fildl
mov
jecxz
decb
adcl
jg
call
stos
xor
shrb
pusha
jmp
and
clc
jl
cmp
sbb
mov
addr16
push
leave
sahf
jecxz
mov
mov
stc
pop
fnsave
pop
cs
outsb
fsubr
cld
nop
push
push
push
in
and
aaa
lret
xlat
fildl
push
mov
mov
push
icebp
fadd
push
add
mov
pusha
jl
mov
jg
roll
cmpsl
sbb
inc
insb
jp
jmp
dec
xor
push
jnp
jmp
inc
in
popa
push
rcrb
jnp
shll
dec
inc
fcoml
out
inc
adc
jnp
incl
shr
inc
xor
or
xchg
pop
dec
mov
cmp
pop
mov
pop
cmpsl
js
add
and
insb
addb
outsb
adc
adc
and
push
outsb
js
mov
xor
aaa
mov
lds
pop
test
fld
inc
lock
mov
pop
xor
mov
cmp
sub
pop
mov
xlat
cmp
in
test
cmp
lods
loop
addr16
dec
cli
push
mov
xor
push
rcrl
xchg
ljmp
ja
aaa
xchg
je
in
stos
cmp
pusha
lret
dec
pop
adc
js
pushf
xor
out
dec
imul
aas
lods
mov
js
enter
scas
out
mov
mov
pusha
sub
mov
test
xor
pop
cs
mulb
mov
lret
jno,pt
adc
pop
ret
fcmovne
call
lock
es
popa
sbb
mov
sbb
stc
test
add
xchg
mov
adc
or
xor
mov
cmpb
std
scas
fildll
pop
out
push
mov
fdivrs
inc
dec
cltd
aad
inc
push
xchg
jo
iret
xchg
add
jns
jmpw
pop
sbb
ss
push
sbb
in
push
rol
int
mov
adc
stos
xchg
adc
into
push
xchg
inc
jg
sbb
jae
push
je
add
lahf
sub
out
loop
dec
mov
lds
mov
push
hlt
je
in
les
mov
sbb
push
dec
outsl
lret
and
divl
int3
popf
in
sub
loop
testb
jmp
fucomp
inc
cmc
pop
icebp
push
call
popf
pusha
inc
data16
jbe
in
jecxz
push
insb
xor
iret
xor
mov
fcoms
pop
adc
or
and
daa
ret
xchg
mov
xor
pop
in
rcl
rol
std
pop
out
popf
dec
mov
imul
pop
outsb
outsb
mov
rorb
fwait
pop
xor
sub
popf
jnp
rclb
lods
adcl
in
cmpsb
scas
or
xchg
inc
pushf
cmc
andl
cmp
test
add
xchg
pop
and
sbb
xor
mov
mov
es
sub
xor
cmp
push
dec
pop
push
xchg
lock
push
int
out
iret
ret
sbb
lock
sbb
xchg
loopne
popa
push
fisubl
int
pop
push
or
mov
mov
xchg
mov
jle
mov
push
fadd
lock
dec
mov
fdivs
repnz
shrl
mov
add
mov
jecxz
cmp
or
sbb
mov
inc
push
inc
bound
mov
jne
loopne
mov
and
jae
outsb
xchg
jns
ss
out
rolb
push
les
xchg
dec
push
nop
iret
mov
dec
into
shlb
aad
mov
xchg
adc
test
push
push
push
dec
or
aam
push
cmp
inc
loopne
sub
push
mov
cmp
bound
push
xlat
pop
int3
repz
loope
std
pushf
rolb
mov
or
mov
push
mov
nop
aad
stc
vcmpss
into
dec
loopne
aam
mov
adc
ret
inc
loope
out
or
pop
hlt
cli
in
jmp
loop
pusha
xchg
mov
or
cmp
dec
into
dec
aas
jns
out
pop
or
adc
adc
xchg
ljmp
shrb
jnp
je
sub
fmulp
fs
and
dec
dec
outsb
iret
push
add
inc
pop
pop
xor
icebp
popf
cmpsb
sbbl
mov
adc
lea
pshufw
mov
sub
lret
dec
cwtl
push
into
imul
popl
inc
aad
cmc
jmp
rorb
add
test
outsl
icebp
movsb
mov
ljmp
es
or
je
rclb
mov
mov
sub
push
call
or
shl
cmp
and
popf
mov
call
pusha
nop
mov
out
sbb
pop
popf
lock
xor
inc
and
shl
cmpsb
xor
movsb
popa
gs
push
in
xor
xor
xchg
sbb
sub
lcall
mov
sti
pusha
xchg
push
xchg
movsb
xchg
push
mov
xchg
inc
loope
pop
aas
sub
sbb
imul
ret
repnz
fisttpl
lahf
in
sti
sbb
inc
sbb
push
push
mov
and
roll
pop
in
imul
lcall
insl
jp
ffree
nop
out
adc
fidivrl
in
sub
or
sub
push
inc
push
and
sub
push
incl
dec
in
arpl
into
and
repz
repz
ror
cmp
pop
mov
pop
xchg
aas
imul
mov
stos
aad
and
ret
dec
jb
fwait
subb
xchg
into
mov
add
xor
orl
inc
shlb
cmpsb
xor
ljmp
xor
cmp
test
dec
dec
flds
mov
ret
xor
adc
gs
pushf
int
xor
clc
xchg
stos
in
jns
fldt
push
test
sarb
fadd
push
jne
js
cmp
pop
es
pop
add
xchg
out
rcll
addr16
adc
test
ja
push
adc
mov
mov
aad
leave
cmc
xor
neg
les
sub
test
iret
sarl
add
aas
jmp
jmp
iret
imul
add
pop
jmp
dec
pop
mov
in
mov
mov
les
lret
adc
scas
in
stos
dec
cwtl
cmp
stos
jecxz
iret
outsl
mov
es
loope
outsl
pop
sbb
cmp
mov
inc
adc
add
fs
pop
fdivr
dec
dec
test
dec
das
das
in
or
pop
sub
mov
cs
xor
dec
jns
xchg
dec
lret
jecxz
aaa
sti
arpl
test
je
sbb
lret
loopne
sub
lcall
cs
pop
push
add
orl
push
les
add
mov
sub
nop
jbe
pop
push
pushf
mov
call
jns
popf
pusha
mov
cmp
jl
inc
rcr
bound
aad
xchg
pushf
lods
cmpsb
icebp
xor
aad
fidivrs
data16
test
cld
inc
test
jbe
adc
outsb
int3
pop
cwtl
or
cld
or
test
pop
int
fs
ja
orb
mov
fdivs
jl
dec
mov
icebp
jle
cltd
fwait
jg
jo
pushf
add
lcall
ljmp
test
lahf
and
jp
mov
or
outsl
and
pushf
icebp
sub
or
sbb
push
aam
dec
mov
adc
mov
sahf
push
fwait
push
mov
pop
jb
insl
out
jmp
mov
jle
aaa
js
stc
scas
roll
rorl
fwait
ljmp
jb
lahf
in
cmp
jmp
cli
dec
out
pshufw
sbb
mov
test
das
in
push
add
jl
sbb
rcl
xor
xchg
movsl
jno
xchg
popa
cwtl
push
adc
inc
mov
pop
add
sti
dec
sbb
jnp
fs
loope
aad
mov
test
loopw
mov
ds
adc
push
out
hlt
sbb
jle
xchg
repnz
inc
fstl
fstl
mov
pop
arpl
push
pusha
ds
mov
xlat
les
arpl
jl
pop
adc
xchg
sub
call
sbb
jecxz
lock
ja
nop
or
addl
mov
lock
and
gs
jle
mov
and
ss
mov
pop
jno
push
in
lcall
adc
xchg
cmp
out
jl
fiaddl
xor
cmpsb
test
pop
shl
jmp
rorl
adc
rorl
outsb
inc
jbe
pop
xor
dec
lods
jne
cmp
rcrb
pop
in
imul
jae
aam
popa
lcall
adc
push
outsl
in
sbb
dec
jbe
xchg
mov
lds
inc
push
cmp
not
data16
push
jmp
rcrb
arpl
insb
inc
out
pop
or
pop
fwait
mov
shrb
loope
lods
imul
lock
rorl
leave
pop
sarl
test
out
cmp
cwtl
cli
lahf
jbe
jecxz
adc
mov
or
clc
jl
cs
popf
vcomiss
stc
and
jmp
or
pusha
mov
rcrl
inc
movsl
in
jge
xlat
movsb
js
aaa
fwait
out
mov
dec
jmp
into
xor
adc
sub
sbb
mov
mov
push
jne
cmp
and
sbbb
cmp
das
cmpsl
lret
sbb
adc
inc
cmp
mov
mov
adc
jns
xchg
cmp
mov
bound
adc
movsl
aaa
pop
sahf
ljmp
loope
cmp
inc
sbb
xchg
jbe
popf
stos
in
pop
sbb
xchg
ret
xor
inc
shl
lea
xchg
gs
mov
cltd
cmpsl
arpl
mov
mov
pop
mov
ds
movsl
inc
xor
xor
and
sub
and
rorb
xchg
jo
inc
lods
stos
pop
imul
jns,pn
sub
xor
jl
inc
outsb
cmp
dec
imul
cmpsb
icebp
xchg
xchg
pop
jge
int3
cmp
inc
pop
call
adc
mulb
ds
xor
pop
popa
xor
dec
mov
sti
jmp
fisttpl
lahf
mov
push
push
or
stos
push
lret
test
jnp
jp
icebp
jmp
fldcw
push
mov
dec
outsb
loop
daa
and
jo
push
jbe
scas
cmp
mov
mov
sbb
adc
sub
pop
dec
and
xorl
jecxz
mov
fwait
mov
in
inc
cmc
mov
adcb
cmpsl
lret
je
frstor
add
inc
aam
or
mov
push
test
xchg
sub
mov
sub
jge
imul
mov
mov
xchg
je
jp
ss
outsb
cmp
xchg
push
mov
in
rcll
jbe
mov
xchg
mov
cmp
jb
push
mov
nop
adc
rcr
ljmp
or
push
push
shlb
jns
sti
jae
push
jnp
enter
sahf
xchg
cli
mov
xchg
mov
and
sbb
push
fwait
sahf
je
into
cli
mov
orb
ja
or
adc
mov
outsb
outsl
push
iret
dec
and
xchg
sahf
mov
int
in
jo
jge
and
sbb
ficompl
jb
pop
andb
nopl
pop
in
dec
fsub
mov
jae
xchg
or
fnstcw
cmc
jnp
and
pusha
sbb
test
lcall
sbb
repz
xchg
stos
inc
inc
fwait
pop
push
push
jecxz
int
pop
xlat
and
scas
xor
add
push
adc
popf
or
divl
btr
movsl
sti
mov
fs
test
xchg
dec
dec
and
mov
enter
sbb
adc
mov
sub
movsl
mov
pop
lods
shl
jno
dec
pop
mov
jp
push
mov
adc
jmp
lea
fwait
popa
daa
std
dec
pop
and
jp
jl
pushf
decb
std
mov
popa
scas
mov
push
adc
fwait
mov
outsb
insl
mov
or
scas
js
cmp
add
adc
flds
mov
jno
push
jae
push
sub
icebp
and
pop
push
mov
sub
fwait
cli
sbb
mov
cmp
inc
pop
repz
cmp
adc
hlt
xor
notb
pusha
inc
arpl
push
out
clc
repz
pop
xor
test
cwtl
popa
sbb
lret
dec
xor
gs
lea
and
cmp
fs
lock
pop
arpl
and
mov
aam
xchg
dec
push
dec
sub
sbb
in
pop
and
mov
ljmp
stc
or
arpl
jns
inc
repz
call
cmp
lds
dec
icebp
push
push
sti
imul
or
xchg
out
out
cmp
mov
xor
pop
jno
loope
sub
push
enter
jae
adc
push
mov
dec
or
sbb
lahf
and
test
pusha
imul
adc
xchg
fsts
adc
int
inc
sub
mov
jns
sarb
mov
mov
cld
cmc
repnz
movsl
adc
sbbl
or
and
pop
fisubs
mov
sbb
imul
cmp
dec
add
stc
stos
inc
mov
mov
ds
adc
arpl
mov
loopne
push
iret
push
add
push
into
pop
add
push
in
inc
mov
roll
jb
icebp
or
xor
fists
sub
mov
mov
jo
sbb
add
scas
or
sub
push
fldenv
xor
stc
mov
cld
push
scas
pushf
jno
inc
mov
fisubs
pushf
inc
aad
cmp
dec
inc
sti
mov
or
cmp
jecxz
jge
gs
push
test
movsl
popa
bound
mov
mov
ja
xchg
jmp
ret
pop
cmc
push
push
shll
fs
mov
js
popa
mov
push
dec
test
adc
add
or
inc
mov
pusha
je
test
loop
xchg
fpatan
or
or
xchg
and
je
mov
adc
xchg
dec
enter
pop
fadd
sbb
jecxz
incl
in
sub
xor
dec
pop
pop
fiaddl
push
stos
pop
int
and
stos
enter
mov
mov
nop
cwtl
in
mov
cld
fiaddl
rorb
scas
pop
imul
test
in
adcl
mov
cmp
xor
or
cmpsb
sub
enter
mov
or
mov
movaps
leave
stc
sahf
xor
imul
adc
xor
or
jns
lret
notl
sbb
repz
sub
pop
leave
or
xchg
jno
outsl
and
lock
dec
sub
out
int3
jo,pn
imulb
jecxz
adc
outsb
lds
and
in
add
mov
push
sub
adc
add
lods
pop
push
jg
incl
jno
dec
jecxz
mov
mov
xchg
inc
bswap
mov
add
enter
mov
cmp
add
sbb
mov
adc
pop
arpl
push
and
inc
adc
mov
or
jmp
lods
mov
sub
in
out
stos
aas
mov
xchg
fcmovb
sti
imul
mov
xchg
cli
jne
je
shl
xlat
imul
push
sahf
push
lahf
arpl
scas
jge
xor
call
sub
loop
xor
lods
add
add
repnz
shll
subl
jl
inc
jge
rcll
pop
push
cmp
outsl
adc
add
and
popa
jae
icebp
test
inc
add
in
pushf
insb
jle
and
lret
shlb
adc
loope
jae
mov
subl
cltd
inc
jp
stc
mov
fisubrs
push
mov
jns
outsl
sbb
test
mov
sub
test
jle
inc
fbstp
jmp
cmp
xchg
xchg
dec
jecxz
out
pop
xchg
ss
mov
xchg
in
xor
shll
cmp
mov
cmp
in
adc
scas
pop
cmp
mov
inc
sahf
push
jnp
inc
mov
add
sti
mov
or
imul
xchg
mov
cmp
mov
loopne
pop
and
push
pop
mov
inc
call
mov
push
mov
mov
adc
push
clc
mov
mov
ret
outsb
pop
bound
jp
push
rcr
ficomps
mov
xor
fdivs
cmovb
testl
push
or
pop
dec
into
cmp
push
dec
push
sub
lea
mov
sub
clc
nop
fisttpl
xor
mov
into
stos
test
xor
call
dec
xor
ret
notl
ljmp
aad
das
mov
ss
movsl
arpl
jae
sub
mov
cld
jecxz
js
ds
shlb
inc
scas
fisubrl
ret
pop
add
sub
pusha
sub
shll
push
ss
mov
outsl
int3
cli
jecxz
roll
and
cmp
cmpsb
lahf
shrb
inc
sti
push
mov
pop
xchg
lcall
fadds
loopne
fs
lea
add
xchg
add
pop
cmc
cmc
loope
pop
mov
sub
mov
addl
sbb
das
clc
inc
xor
pop
pop
pusha
les
out
in
xchg
addl
out
int
or
dec
mov
adc
jne
mov
cmc
inc
inc
cli
mov
stos
out
pop
outsl
pusha
ljmp
aad
ja,pt
push
dec
cmpb
pop
and
hlt
in
push
add
jmp
mov
cmp
sti
xchg
inc
inc
fildll
jb
xchg
jb
sbb
and
cmc
mov
or
mov
cli
outsl
popa
cmpb
aad
inc
inc
into
repnz
test
out
xchg
push
out
lea
pushl
mov
jb
cmpl
arpl
insb
iret
stos
in
add
fcmovnu
cmp
insl
add
fnstsw
or
add
mov
pop
jno
pop
jbe
cmc
jae
or
subb
push
jnp
icebp
repz
mov
out
mov
cld
iret
mov
pushw
es
pushf
repnz
sarb
orb
rclb
cmp
int3
mov
popa
and
xor
xchg
lea
pop
scas
add
jo
cmpsl
jl
stc
sub
and
add
pop
jmp
cmc
add
jmp
arpl
and
dec
cmpsl
in
cmp
cmp
stc
out
fistpll
fwait
aaa
gs
xchg
lcall
sub
jg
jmp
das
lea
shll
cmp
pop
cmp
fldenv
test
or
or
lods
stos
sti
jnp
jno
sbb
int
inc
jg
cmc
sbb
fcmovnu
ds
cmc
std
add
jo
add
sbb
pushf
popl
loop
adc
and
fwait
js
stos
mov
out
insl
dec
jle
fdivrp
fsubr
outsb
mov
movl
popf
push
push
lock
in
pop
jle
mov
mov
mov
push
add
dec
push
jmp
push
sub
leave
and
push
test
push
inc
lock
cmpsb
test
int
cli
pusha
lds
lea
rorb
jecxz
or
mov
test
test
aaa
xchg
xchg
sbb
int
subb
jle
leave
pop
fisubrs
imul
hlt
shlb
jecxz
mov
add
fninit
mov
icebp
push
sti
cmc
ss
das
xchg
dec
lret
les
loope
in
stos
ss
fiadds
popf
mulb
xor
and
mov
cwtl
notb
out
in
xor
hlt
fnsave
repnz
xchg
fwait
popf
adc
rorl
cmp
sub
cld
roll
sbb
adc
inc
inc
cmpsb
jo
lahf
push
fdivp
pushl
add
push
ret
sbb
sub
pop
cli
cli
mov
adc
pop
push
popa
pop
pop
lods
rcll
es
jne
nop
jns
aaa
flds
cmp
push
aad
jg
push
xchg
outsl
push
ret
stc
test
gs
mov
loope
lods
fmuls
xor
cli
dec
dec
pop
lcall
inc
subl
mov
add
imul
js
or
mov
lret
test
mov
fbld
fistpll
lods
or
dec
jl
test
aaa
dec
push
sbb
stc
adc
and
cltd
inc
loope
iret
icebp
xchg
xchg
js
pusha
loopnew
stos
mov
insb
adc
mov
mov
movsb
outsl
sbb
imul
loope
mov
shrb
mov
adc
and
push
cld
mov
cmp
fbld
mov
dec
xchg
xchg
adc
adc
pop
mov
out
sub
outsl
and
cmp
inc
lret
mov
add
mov
inc
in
or
jnp
dec
adc
and
repz
sub
mov
cmp
out
aad
stos
ja
mov
lcall
adc
repz
inc
and
mov
push
in
daa
dec
out
mov
jg
repz
jne
testl
adcb
sbb
lret
addb
dec
cmpsl
rolb
xor
fnstenv
ja
aam
lock
xor
add
inc
aaa
and
sbb
add
dec
popf
stc
push
adc
cli
movsl
or
stos
and
je
repnz
insb
imul
aaa
mov
and
cld
and
pusha
push
and
ret
movsl
xchg
out
fwait
inc
or
pop
test
pop
xorb
xchg
stc
daa
jge
jp
mov
mov
lds
pop
inc
int
push
cwtl
fsub
dec
xchg
pop
and
add
inc
sub
mov
or
popf
test
cs
rolb
mov
imul
mov
pop
aaa
cmpsb
jns
bound
mov
sub
pop
mov
shr
lret
cmp
sbb
jl
dec
cmp
ret
scas
or
pop
push
pop
pop
xor
push
mov
sub
fisttpl
sahf
push
push
sub
xlat
jle
push
loop
xor
cwtl
out
std
jp
cmpsb
xchg
out
pop
push
mov
cmpb
push
dec
js
mov
fisubrs
xchg
jnp
scas
mov
lods
bound
int3
dec
or
adcb
insb
inc
mov
out
mov
in
mov
mov
add
loop
sub
pop
jne
insl
pop
loop
mov
adcl
jle
push
repz
pop
add
xchg
add
mov
or
jle
jne
lret
dec
cmp
adc
sbb
outsb
sbb
inc
ljmp
pop
mov
data16
mov
ljmpw
pop
push
test
test
cmpsl
enter
popa
pop
push
or
xchg
mov
pop
pop
push
or
add
sarb
push
das
sbb
lcall
fisttpll
bound
mov
dec
sbb
add
ljmp
in
pop
adc
pop
inc
lds
movsb
inc
mov
in
cmp
sti
int
shlb
call
fcmovnbe
test
and
lds
lods
cmc
arpl
push
ja
mov
fcmovbe
inc
pop
lods
lahf
mull
xchg
std
cld
sbbl
cmpsb
and
repz
aaa
mov
jp
adcb
cmp
mov
push
clc
fstl
cmp
xor
mov
adc
mov
cld
data16
mov
jae
pushf
sub
or
lods
cs
mov
xchg
call
outsl
jg
add
pop
sbb
xor
add
jg
adc
push
ss
ja
flds
jne
repz
repnz
fistpll
jle
frstor
cwtl
out
inc
and
sbbl
pushf
pop
in
sahf
cld
dec
adc
pop
adcl
sbb
inc
sbb
adc
jg
xor
sub
outsl
xchg
popa
pop
sub
mov
loopne
push
es
mov
fiadds
sub
adc
xchg
sbb
out
call
jo
test
xchg
sbb
ret
jecxz
jne
iret
iret
or
enter
or
pusha
mov
sub
push
clc
jnp
mov
mov
inc
ret
push
cmpsl
lahf
push
rcrb
in
test
mov
sbb
ljmp
and
outsl
call
fstl
ss
jg
sub
fwait
test
xor
dec
lds
cmp
pop
jne
xor
out
jl
scas
int3
fistl
in
xchg
xor
cmc
push
cmp
push
iret
out
lea
cwtl
js
xor
push
push
and
std
pop
cmpsb
cmpsl
mov
cmp
shr
stos
mov
mov
repnz
aaa
jo
push
cmpsl
mov
in
dec
ja
sbb
mov
loop
mov
mov
pop
inc
movsb
lcall
and
loopne
or
fbld
add
push
lcall
nop
push
mov
dec
roll
xor
pop
mov
jp
test
pop
lock
dec
test
outsl
sbbl
push
shrb
cmpsl
adc
addr16
pop
dec
enter
ds
cmp
mov
out
je
das
inc
sbb
xor
das
mov
cmp
sbb
pop
jmp
push
jns
loopne
dec
mov
or
pop
hlt
test
sbb
ja
mov
inc
mov
xchg
push
in
cmp
scas
scas
data16
sub
loopne
insb
jmp
mov
loopne
or
jb
fistpll
mov
jle
pop
in
scas
push
cmp
add
lea
out
xlat
jl
jg
pop
cmpl
mov
push
testl
imul
popf
cmpsb
mov
sbb
mov
clc
roll
or
cltd
cmpsb
shrl
jmpw
clc
in
xchg
insb
sub
scas
addps
cld
into
fwait
xor
pop
daa
xchg
mov
dec
xchg
sbb
push
cltd
in
inc
jp
shrl
aam
shl
mov
out
xchg
xchg
inc
cmp
mov
fisubl
mov
imul
lods
xchg
rclb
cwtl
insb
clc
out
ja
dec
push
lahf
xlat
mov
push
push
xor
lret
xor
andl
fisubrs
dec
int
fidivrl
add
insl
jne
ds
mov
mov
jmp
leave
cmp
cmc
or
adc
xor
popf
mov
lret
fmuls
dec
inc
or
subb
and
pushl
sbb
xchg
or
xlat
mov
sub
add
movsl
mov
pop
lds
ljmp
mov
push
xor
lret
pop
hlt
mov
dec
mov
cli
stos
add
out
and
loopne
mov
mov
mov
and
xchg
pop
mov
push
bound
sbb
or
mov
push
subb
insl
pop
mov
or
js
or
jbe
xchg
jmp
mov
inc
xor
dec
insl
adc
xor
or
int3
or
inc
mov
cmpb
jge
mov
dec
stos
popf
out
rol
mov
lods
jge
and
inc
pop
push
dec
aas
stc
fidivrl
xor
sub
mov
jecxz
outsb
aaa
push
daa
sti
mov
xchg
push
mov
stos
inc
ret
xor
aam
ret
inc
cld
cmc
rol
xor
adc
mov
xchg
inc
mov
aad
in
sbb
xchg
out
mov
pop
or
ja
repnz
add
not
sub
or
push
mov
push
mov
mov
dec
jb
inc
mov
lahf
nop
frstor
stos
gs
jecxz
sbb
lret
and
sub
or
sbb
pop
addl
jo
add
adc
pop
pop
mov
clc
sub
fdivr
icebp
orl
sbb
pop
sub
jge
jnp
jnp
push
cmp
xchg
scas
add
cmp
dec
fimull
and
mov
out
arpl
addr16
in
outsl
adc
leave
sbb
xchg
pop
cmp
mov
push
mov
push
jne
ficoml
dec
bound
inc
scas
addr16
loop
scas
addb
push
pop
jge
inc
or
pushf
and
popa
hlt
icebp
sbb
in
movsl
inc
push
in
sub
shrl
std
in
mov
subl
jo
mov
movsb
cmpsb
push
lea
loopne
dec
xchg
jno
sti
jg
je
leave
hlt
into
divl
lcall
cmpsl
ljmp
scas
mov
or
jno
or
imul
cmc
daa
cwtl
mov
xchg
dec
sub
or
pusha
xchg
or
mov
shlb
or
scas
arpl
ret
les
gs
mov
jb
sarl
xlat
dec
dec
repnz
mov
pop
in
and
repz
add
cmpsl
push
cmp
ljmp
pop
or
and
xchg
insb
roll
popf
push
sbb
lock
sub
xchg
mov
ret
lret
test
insl
mov
inc
mov
lods
mov
or
cli
inc
xor
iret
adc
mov
dec
push
cmpsb
lret
fs
inc
add
push
mov
fsubl
xchg
add
ret
inc
pop
and
stc
mov
sub
test
mov
mov
push
inc
icebp
cld
dec
movsl
mov
cmpsl
xchg
push
lahf
push
mov
adc
popa
imul
cmpsb
sti
jmp
pop
mov
dec
jae
xor
sub
shll
aam
aam
subl
out
roll
dec
sub
jnp
sub
and
imul
push
imul
arpl
pop
xor
or
mov
pop
pop
cmp
mov
lahf
cmp
cmc
dec
xchg
sub
add
or
stos
insl
dec
add
mov
cltd
push
ret
test
and
gs
mov
daa
rorb
data16
or
or
hlt
mov
lods
sbb
xchg
mov
inc
in
pop
cmp
push
arpl
lock
push
mov
jne
sub
push
add
adc
ret
add
lret
mov
cli
mov
test
xchg
and
jmp
push
push
dec
aad
aam
xchg
in
movsb
das
xchg
cltd
jne
inc
stos
pusha
jnp
xchg
pusha
xor
inc
sbb
jns
clc
loop
mov
pop
popf
mov
pop
movsl
sbb
and
sub
sub
xor
lahf
icebp
push
shr
ret
add
hlt
sub
xlat
in
inc
inc
aaa
int3
pop
bound
notl
and
in
mov
add
pop
rorb
in
fbld
in
xchg
and
fstl
ret
imul
adc
or
cld
ret
fcoml
ret
or
cwtl
cmp
jbe
or
jb
dec
jnp
dec
push
test
mov
mov
jns
inc
fdivrs
mov
sbb
jmp
cmpsl
push
push
leave
je
iret
push
jbe
repz
jp
popf
aas
adc
popf
enter
test
mov
dec
mov
imul
rcrl
add
pop
mov
sub
iret
sub
sarb
in
cmp
adc
xor
jmp
mov
lcall
dec
pop
sti
jae
lods
jne
sub
xlat
mov
jbe
cwtl
and
pop
leave
sub
pop
mov
sbb
call
xorl
movsb
or
outsb
pop
jae
xchg
in
lret
fxch
add
fwait
xor
sub
xchg
rcrb
je
xor
int
cmp
push
mov
ja
mov
xor
notb
xchg
ficoml
int3
aas
ljmp
scas
bound
and
dec
imul
test
jbe
add
cmc
lock
in
cmp
dec
shll
lcall
mov
fmul
in
sub
cmp
ljmp
adc
outsl
ds
ja
repz
test
fmull
xchg
dec
pop
pop
stos
inc
stc
jnp
add
je
xchg
icebp
jecxz
and
in
pushf
into
mov
in
adc
adc
mov
scas
ret
scas
sub
negl
inc
test
out
loope
ss
pop
sahf
in
pop
ja
outsb
gs
pop
mov
ret
shlb
pop
xor
shrd
xchg
jbe
gs
and
sbb
xchg
xlat
lods
sbb
xchg
arpl
movsb
adc
es
adc
les
lea
or
loope
adc
or
adc
dec
cmp
into
sub
movsb
or
lods
sub
mov
mov
inc
add
push
sub
lcall
lahf
ja
sti
cmp
in
and
push
lcall
sub
lods
pop
pop
sbb
imul
add
cmp
fidivrs
iret
dec
xchg
js
jnp
aad
fs
mov
xor
sub
or
push
sub
out
pop
dec
mov
dec
sbb
aam
aaa
pop
sarl
jno
dec
mov
sub
pusha
and
das
and
int
or
jne
cmp
sbb
mov
cwtl
jmp
das
xor
popa
outsl
in
fsubrs
mov
mov
ficomps
adc
into
xchg
lcall
icebp
mov
ja
push
sub
rol
pop
jmp
and
pop
push
pusha
sub
repz
jae
aaa
rorb
mov
dec
dec
mov
movsl
or
add
dec
imul
fsubs
roll
aad
sub
or
pop
mov
rcr
sub
lcall
scas
jge
xchg
dec
gs
aad
lcall
and
sbb
sub
pop
cltd
jl
sbb
je
and
mov
fistpll
adc
push
sub
xor
xlat
push
lcall
push
xor
sbb
xor
jg
bound
ret
xor
jne
pop
mov
cmp
aas
fsubs
sbb
mov
dec
cmp
cmp
or
stos
jmp
mov
bound
xchg
mov
xchg
in
ss
jge
pop
push
nop
ja
push
jg
popf
push
adcb
cmp
push
ljmp
test
push
les
lds
pop
push
pop
cwtl
cld
in
push
jnp
jb
sbb
or
dec
xchg
sub
xchg
jecxz
andb
aad
push
pop
mov
cmp
cmpsl
aam
and
inc
lods
sub
int3
clc
cmp
adc
sub
mov
fwait
int3
fadd
push
lock
jl
int3
scas
mov
dec
dec
int
ret
and
xor
sar
xchg
pop
push
jp
inc
push
cwtl
mov
push
int
enter
aam
aad
fbstp
mov
popa
mov
addb
shrl
repnz
sub
push
adc
jmp
push
cmpsb
pop
call
out
popa
sahf
fsubrs
cmp
xor
sar
cmp
dec
fmull
stc
rorb
pushf
mov
mov
imul
int3
fimull
lcall
test
test
fmull
xchg
lea
sub
inc
dec
pusha
dec
jnp
xor
mov
jo
pop
cmp
xchg
adc
mov
fcomps
call
sub
push
sub
aad
add
push
sti
gs
cmp
xchg
push
out
js
lret
std
clc
or
mov
cltd
loope
scas
mov
pop
cmpsl
mov
adc
out
ret
movl
rolb
hlt
inc
test
push
mov
mov
nop
ss
sbb
push
js
fidivl
ds
sar
adc
andb
xor
xorl
es
jae
stos
cwtl
imul
xchg
sub
and
in
ds
push
es
fdiv
pop
add
xor
push
lea
aaa
sbb
xor
push
jmp
outsl
mov
jae
add
mov
mov
mov
leavew
xchg
pop
inc
lea
jne
nop
mov
mov
arpl
or
dec
pop
imul
std
shlb
push
out
lea
xchg
cld
add
push
ret
sub
ret
mov
xchg
pop
cli
bound
add
lea
out
push
stc
add
test
dec
inc
pop
addr16
repz
add
fwait
mov
xchg
jbe
loopne
lock
and
cwtl
jg
fisubl
and
decb
or
leave
or
rolb
dec
clc
and
enter
pop
lock
push
dec
js
ja
jns
adc
pop
aas
or
test
inc
outsb
lods
cmp
jp
mov
cld
jle
fildll
dec
xchg
pop
ds
js
mov
xor
rcll
loopne
xchg
aad
cli
pop
int3
jno
dec
dec
mov
xchg
out
ds
mov
jmp
dec
pop
cs
jns
pop
addl
fcomp
repz
sarl
jb
pop
leave
data16
leave
cwtl
or
lock
push
popf
inc
mov
lcall
std
jge
je
jb
outsb
inc
sahf
shrd
arpl
push
ja
jle
aaa
repnz
xor
out
add
aaa
inc
mov
fs
lea
les
cmp
inc
add
or
and
or
dec
nop
fidivs
xor
mov
pop
out
nop
cmp
mov
mov
fsubl
sbb
jns
sbb
loopne
in
mov
push
pop
sbb
xor
int3
addr16
adc
and
insb
jmp
ljmp
sub
jl
inc
xor
jg
scas
sbb
mov
push
add
dec
cmp
mov
xor
pop
fstps
mov
xchg
and
push
out
sub
xor
jl
xchg
cld
ss
mov
mov
jmp
mov
lret
nop
pop
cmpsl
jns
out
nop
jbe
mov
pop
stos
and
out
iret
mov
fxch
push
mov
jle
cs
jno
mov
rclb
mov
sbb
jbe
fs
jmp
dec
dec
mov
dec
or
ss
int
pop
xor
add
pop
inc
push
push
leave
cmp
sub
jmp
scas
addr16
shll
jmp
push
cwtl
popa
dec
xchg
mov
sahf
push
xor
lahf
enter
push
xchg
iret
nop
dec
cmp
cmp
test
xchg
add
sbb
ljmp
test
int3
push
xchg
out
sub
sub
cmc
das
adc
sub
lret
test
fildll
sbb
nop
jns
shll
and
testb
pop
inc
xor
jbe
mov
pushf
in
xor
pop
lret
pushf
mov
and
cmp
int
push
dec
jns
jns
lds
dec
iret
dec
inc
sub
sarb
add
nop
call
push
int3
mov
nop
lds
mov
int
pop
xor
clc
mov
inc
push
insb
cmpsb
xchg
mov
xchg
push
mov
push
divl
xchg
push
dec
inc
pop
xchg
sbb
push
lds
testb
adc
lods
jp
jmp
mov
xchg
mov
data16
fisubrs
inc
scas
and
test
sbb
scas
push
int
sub
imul
jae
lea
jg
test
je
stos
and
mov
mov
fsubrs
jbe
ljmp
pop
mov
ljmp
jp
rcll
imul
adc
dec
and
jnp
xchg
insl
cwtl
cwtl
clc
jno
ja
fs
sbb
jg
ss
mov
movb
pop
add
dec
mov
add
inc
out
fidivl
loop
cmpsl
ss
cmp
jnp
push
jns
roll
je
into
adc
lds
fisttpll
movsb
sub
ret
clc
test
scas
xchg
in
das
ja
jo
xor
jle
imul
xor
repnz
imulb
cmp
mov
lcall
movsl
loopne
mov
leave
or
aam
roll
inc
in
loopne
mov
aad
hlt
inc
xor
mov
cmp
inc
xchg
cmp
aas
jg
cmp
into
data16
stos
fs
pop
pop
cli
int3
mov
mov
mov
mov
negl
sbb
push
mov
dec
aas
jbe
xor
dec
dec
aam
fstpt
and
or
pop
std
lahf
in
pop
loope
push
jp
mov
lret
dec
xor
and
cmpsl
mov
sbbb
sbb
mov
push
imul
add
ret
out
push
jmp
mov
jmp
or
fdivl
shrb
test
test
scas
push
push
in
mov
ds
push
loopne
inc
std
push
jp
divps
add
dec
cmpsl
push
les
or
cmc
shr
daa
dec
mov
inc
test
fimuls
mov
int
push
test
scas
push
jl
dec
pop
inc
jmp
jae
mov
inc
movsb
fwait
jne
pop
out
or
mov
daa
mov
push
rcl
jge
push
jl
movsb
cmp
sub
cmc
aam
push
mov
dec
arpl
adc
cmp
xor
xlat
sub
sbb
out
cmp
xor
push
rol
xchg
test
lcall
mov
in
cmp
fdivrl
insb
mov
mov
movsl
lcall
xchg
sub
adc
cli
or
and
jmp
jnp
mov
int3
mov
mov
movsl
cmp
push
inc
out
testl
sub
mov
in
stos
xlat
mov
out
loop
mov
ret
xor
out
jbe
lahf
gs
jns
xor
push
loope
repz
and
movsb
imulb
mov
adc
bnd
push
paddusw
mov
mov
out
jge
add
stos
fdivp
leave
loopne
lods
dec
lods
mov
outsl
xchg
mov
cmpsb
mov
pop
je
inc
xor
cmpsl
ror
pop
xor
fidivs
sbb
mov
push
pop
xorl
js
jbe
mov
mov
sbbb
adcl
jae
add
mov
jae
shrl
repz
inc
imul
mov
in
cmpsb
aaa
ficoms
pop
imul
pop
mov
inc
aaa
sub
ja
movsbl
push
outsb
push
or
stc
xlat
inc
pop
dec
or
test
xchg
cs
sbb
sbb
push
das
adc
xchg
fsubl
or
and
repnz
mov
mov
int3
push
insl
jle
jecxz
jno
cli
pop
mov
insl
jle
mov
inc
inc
jle
or
stos
popa
cld
or
aas
aam
ljmp
subl
sub
loopne
xabort
jbe
push
insl
iret
ds
push
addr16
xor
sbb
and
insb
adc
cli
repnz
cmc
xor
jb
idivl
sti
imul
rcl
jo
enter
pop
adc
imul
in
into
fisttpll
in
or
pushl
adc
mov
cmc
rorb
pand
pop
jnp
mov
sti
imul
call
cltd
inc
out
pop
sbb
xchg
mov
sub
ja
sub
movsl
xor
sbb
das
inc
jno
js
mov
sarl
xor
fcompl
icebp
mov
sbb
push
rolb
xchg
fs
fidivrl
adc
dec
movsl
and
rcrl
mov
or
dec
sbbl
test
sbb
testb
loope
xor
dec
sub
lods
jl
and
test
cld
nop
xchg
aad
mov
shlb
cmpsb
test
inc
pusha
aad
iret
xor
jecxz
cmp
xorb
or
fistps
int
xchg
fsts
cmc
loope
cmp
pop
dec
loop
popf
pop
cmp
inc
and
mov
shrb
push
lds
mov
mov
ss
js
and
mov
daa
stos
jae
sub
js
dec
sbb
inc
sub
xchg
aam
jmp
xor
test
xor
jae
push
jmp
sbb
aam
rcrb
add
imul
and
out
xor
insb
les
mov
xchg
or
mov
int
jne
out
stos
inc
dec
adc
and
into
and
imul
fs
inc
fiaddl
shr
add
movsl
xor
mov
lock
cmpsl
dec
add
jns
scas
push
mov
xor
cld
insl
cmpsb
mov
in
sub
xchg
shlb
sti
insb
shlb
cmp
aas
out
popf
sbb
pop
xchg
dec
andl
sub
repz
xor
inc
mov
int3
das
sbb
fldpi
psrlq
into
mov
test
or
xchg
aaa
in
loope
in
nop
test
popa
mov
sbb
mov
stos
in
lock
sarl
mov
mov
lret
xor
outsl
pop
incb
test
sbb
pop
mov
adc
mov
add
pop
ficoml
jno
adc
stos
jmp
cmp
mov
xchg
push
mov
lret
inc
push
mov
inc
ret
movl
and
repnz
mov
xchg
mov
mov
out
lds
mov
or
jmp
movsl
sub
sbb
insb
mov
jge
jp
scas
pop
mov
imul
jge
lret
adc
push
mov
movsl
sarb
mov
xor
mov
mov
mov
add
outsl
xchg
add
mov
mov
cmp
lret
test
lret
push
sahf
jl
mov
mov
xor
sbb
das
cmpsl
icebp
pop
mov
iret
mov
scas
cmp
sahf
imulb
jb
or
xchg
mov
pop
lods
pop
sub
inc
push
cwtl
insb
or
paddd
inc
push
ljmp
dec
inc
push
bound
mov
ss
fcoml
push
sub
xchg
enter
imul
movsb
inc
insb
out
dec
mov
mov
pop
sbb
jb
mov
cmp
sub
dec
xor
out
adc
rolb
scas
int
scas
mov
add
popa
or
mov
pop
std
stc
cs
neg
loopne
ja
mov
push
or
ror
mov
test
mov
ljmp
dec
fst
push
add
lcall
lods
jp
ret
and
mov
loop
adc
orb
fcompl
jnp
lcall
sahf
and
xor
xchg
and
mov
push
ret
push
scas
loope
pop
scas
and
dec
jmp
adc
test
fisubrl
aaa
in
arpl
sbb
test
test
mov
scas
in
outsl
mov
cmp
stc
std
in
push
mov
mov
lods
cs
jl
push
out
leave
idivl
mov
sbbb
nop
xchg
jecxz
test
shlb
push
lock
sub
pop
mov
stc
or
xchg
push
call
add
jge
data16
mov
xchg
inc
sbb
imul
jp
ljmp
and
test
dec
push
mov
pusha
dec
movsl
add
mov
aaa
mov
adc
push
sahf
out
out
sub
fdivr
stos
insl
mov
cltd
popf
test
arpl
sti
in
sbb
ljmp
les
or
pushf
and
jmp
sub
orb
out
fmuls
inc
jne
mov
cmpsb
cs
das
icebp
enter
std
in
clc
or
pop
mov
cli
cld
sbb
mov
pop
adc
xchg
dec
cmc
push
gs
mov
fistps
mov
pop
rclb
in
pop
adcl
pushf
addb
ss
iret
mov
stos
cli
xchg
stos
jnp
pop
and
subl
sbb
dec
test
fisttpl
dec
mov
in
push
cmp
dec
cmp
push
mov
adc
xchg
dec
sbb
xor
mov
mov
dec
jae
sarl
cmp
dec
stos
js
iret
sahf
sbb
add
or
and
dec
add
lods
rcrl
inc
cmp
xor
js
idivb
or
mov
movsl
aad
sub
cltd
leave
push
mov
jmp
xor
jns
jo
xchg
sub
stc
jns
add
jno
data16
mov
jb
mov
hlt
inc
mov
mov
imul
mov
jg
les
loope
cmp
mov
pop
and
xchg
jb
lret
mov
loop
test
stos
and
jno
cmovo
add
xor
fnstenv
nop
and
adc
adc
movsl
jno
stc
sbb
mov
jecxz
dec
xor
adc
loope
popf
es
ljmp
jecxz
or
and
in
xor
loope
pop
pop
sub
push
orb
lahf
adc
jp
sbb
dec
and
cmp
lds
cli
jo
adc
or
push
sbbl
or
out
rorl
jecxz
out
sbb
aam
imul
scas
xor
cmp
into
push
pop
cmp
dec
lods
cltd
push
jb
in
jo
jno
jg
jne
fidivrs
rolb
mov
add
clc
ror
rcll
mov
mov
imul
push
mov
xchg
sub
push
xchg
mov
add
mov
and
dec
ret
cmp
jb
adc
mov
inc
mov
push
xchg
push
or
fcoml
mov
ret
pop
je
ja
loopne
out
pop
inc
fsubl
sub
gs
cmp
pushl
cltd
and
ljmp
adc
cmc
rorl
xor
das
in
test
inc
cmpsb
pop
inc
jge
or
xor
roll
mov
outsl
adc
add
fcomip
mov
xor
or
insb
jne
push
push
jae
adc
xor
mov
rcrl
mov
pop
stos
outsl
push
arpl
sub
cmp
pop
in
push
cmc
cwtl
ror
sarl
mov
jmp
push
lea
add
push
sbb
jge
das
stos
aam
into
and
js
add
add
jmp
jge
lods
mov
pop
test
xor
cmc
call
out
adc
stc
and
mov
mov
dec
jbe
add
jecxz
pop
mov
push
aad
lock
fstl
mov
inc
push
mov
sub
lret
icebp
popa
pop
or
fptan
xchg
sub
imul
adc
mov
cltd
jp
mov
imul
fiaddl
int
mov
and
lcall
inc
fmul
sarb
sahf
xchg
lods
sub
mov
loopne
dec
in
in
clc
stos
std
fcoml
and
icebp
fldt
xchg
in
lret
xor
loope
push
cmp
push
aaa
mov
sbb
or
push
xor
jle
xor
and
mov
jnp
sbb
cltd
insl
push
xchg
xor
je
inc
mov
xchg
sub
sbb
scas
clc
mov
mov
xchg
sar
call
xchg
pushf
push
mov
pop
fdivr
movsb
fbld
pop
mov
mov
lea
push
stc
cmp
test
fidivs
and
push
sbb
das
jg
push
and
xlat
add
fildll
xor
ret
rclb
test
sti
int3
xchg
mov
pop
int3
mov
enter
xor
inc
xchg
ds
pop
xchg
test
or
push
das
int
mov
sub
testb
mov
arpl
jns
mov
fwait
daa
mov
xor
xor
adc
mov
pop
sub
push
sbb
mulb
push
cwtl
sub
xor
push
xchg
mov
xor
test
mov
mov
std
add
fisubrl
call
sub
fstpl
and
mov
mov
cmpsl
or
pop
push
stc
push
daa
pop
cltd
sub
shlb
ret
mov
mov
sti
or
push
mov
shl
and
dec
cltd
xor
xor
scas
pop
cmp
and
leave
fimuls
ret
imul
push
in
rolb
lea
inc
or
arpl
mov
pop
and
jp
pop
pop
adc
cmp
cmpsb
shl
pop
in
mov
fwait
mov
push
cmp
dec
sahf
adc
rclb
sbb
dec
insb
xchg
icebp
jbe
adc
cmpsl
aaa
std
int3
mov
leave
into
or
les
andl
mov
mov
cmp
movsl
push
xchg
inc
fstp
lret
data16
and
xor
sarb
cli
mov
jns
leave
sub
icebp
pop
cmpl
mov
ja
jae
shlb
fisubrl
adc
mov
mov
jl
jns
cld
scas
mov
lret
xchg
mov
lock
mov
inc
std
fstps
jae
and
mov
pop
test
mov
cwtl
dec
out
sbb
popf
push
repz
sbb
pusha
int
cmpxchg
mov
jp
pop
repz
lods
mov
pop
cmp
xchg
mov
in
gs
repnz
add
adc
je
or
pushf
xchg
subb
das
data16
test
push
fcmovnbe
push
or
or
test
lea
cmc
andb
cwtl
mov
in
add
push
mov
cmpsb
mov
dec
xchg
jnp
lea
nop
shld
dec
jne
cli
xchg
fwait
mov
test
or
xor
cwtl
ret
cwtl
jge
shrb
xchg
nop
or
ret
dec
dec
stos
divl
sbb
in
pushf
in
cmpsb
movsl
jg
lods
cmc
adc
cmp
push
cmp
mulb
or
xchg
mov
loopne
shll
xchg
push
ficoml
mov
data16
dec
test
push
andb
nop
sbb
std
ds
rorb
adc
or
xor
mov
mov
movsl
sub
js
pushf
jb
sbb
pop
das
data16
push
fcompl
lahf
aaa
shrl
and
sub
repz
jne
mov
and
repz
pop
sub
mov
leave
dec
xlat
sahf
ja
cmc
jmp
cs
mov
repz
mov
pop
daa
ss
inc
test
sahf
es
ret
push
fimull
jbe
fwait
push
in
dec
push
xchg
in
adc
add
int3
add
jae
aam
push
mov
test
or
cli
push
dec
fstpt
xchg
pop
dec
xor
inc
out
in
ret
or
or
pop
mov
ds
out
mov
ljmp
jle
mov
and
jo
and
jge
or
jo
push
stos
movsl
mov
mov
jl
rcll
cltd
out
or
popa
adc
orb
je
dec
in
pop
dec
lods
push
das
rcl
int3
aad
inc
mov
jl
movsl
ss
es
xor
bound
inc
add
data16
push
cmp
nop
mov
xorl
sbb
jmp
jmp
pop
arpl
sub
and
inc
jnp
push
scas
mov
xor
cmp
jo
incb
inc
test
mov
pop
fs
xor
jne
jo
imul
leave
dec
xlat
aad
imul
push
test
scas
sbb
adc
scas
xor
movsb
jbe
fimull
fstl
imulb
mov
mov
scas
xchg
adcb
pop
ds
imul
bound
out
mov
ds
movsl
test
or
clc
xchg
ja
test
jnp
clc
push
sub
rcrl
add
jecxz
ret
add
ss
push
and
ja
pop
xchg
loopne
mov
push
es
jne
mov
mov
stos
out
sub
stos
push
jmp
outsb
inc
imul
fwait
xchg
adc
cmpsb
push
stos
sub
addb
add
mov
push
mov
stos
push
mov
test
lea
adc
or
sbb
push
into
jecxz
inc
cs
lods
inc
push
outsl
xlat
inc
mov
xchg
test
and
aas
out
or
mov
scas
jg
dec
inc
cmp
push
sub
push
push
mov
out
mov
pop
les
mov
mov
push
adc
dec
popf
test
jmp
push
arpl
jnp
mull
sub
sahf
cli
loop
andb
or
repnz
loopne
arpl
std
aam
fildl
ds
loop
icebp
inc
out
add
add
enter
or
ja
mov
jmp
icebp
cmp
add
test
mov
mov
cmpsl
sub
leavew
cli
jecxz
lock
inc
lock
lds
pop
inc
movsb
xchg
pop
test
push
sub
push
aad
ja
mov
sub
xchg
fldl
pushf
rcrb
cmp
arpl
movsl
adc
fs
inc
or
pushf
add
pop
sub
mov
xchg
daa
add
and
popa
push
leave
dec
outsb
pop
subl
mov
and
aam
das
jae
pop
outsl
addr16
mov
sbb
lahf
jmp
xor
sub
aad
repz
jge
pushl
insl
mov
cmp
or
cmpsl
push
push
add
cmp
jmp
xchg
sahf
push
les
std
ret
cmp
fisttpl
enter
adcl
xchg
outsl
cltd
inc
add
jecxz
add
aad
add
inc
push
jecxz
and
jno
add
xchg
rcll
mov
lcall
mov
cld
cmpsl
push
cli
test
enter
sahf
inc
cmc
lock
add
shl
dec
sub
jle
mov
cltd
int
mov
pop
cwtl
mov
adc
mov
sti
inc
or
into
scas
add
iret
imul
out
stmxcsr
in
adc
cs
mov
mov
rclb
push
das
pop
lods
loope
int3
fdivrs
jno
or
fwait
out
fildll
cmp
xchg
pop
hlt
inc
mov
sti
xchg
data16
fwait
inc
addr16
adc
xor
inc
ljmp
cmp
push
pop
imull
or
cmc
jge
fisttpl
and
sub
out
sub
xchg
mov
jecxz
aad
sbb
push
push
dec
dec
xor
fldenv
cmpsb
gs
pusha
sbb
subb
push
dec
jnp
sub
fisubrs
push
dec
xor
test
ret
pop
je
out
pop
stc
hlt
mov
mov
jno
push
pop
inc
sub
aam
enter
scas
mov
sahf
inc
or
mov
adc
or
loop
sub
test
or
push
mov
push
xor
and
add
loopne
leave
mov
inc
push
pop
lods
mov
std
bound
in
mov
jge
inc
add
dec
or
mov
lock
add
inc
loopne
mov
les
test
sub
cwtl
leave
jns
inc
ret
inc
jns
lods
lret
stos
dec
add
in
pop
adc
movb
daa
aas
movsl
jne
push
inc
xor
add
cmp
mov
ss
sbb
jns
jb
push
xor
push
xchg
data16
adc
fistps
rep
stos
xchg
inc
push
lret
lret
sahf
mov
sarl
enter
and
push
ss
adc
and
xchg
add
add
push
cld
mov
fstpt
inc
jl
dec
pop
dec
add
mov
add
in
push
xor
loopne
mov
or
mov
movsb
mov
js
sub
test
pop
xlat
mov
adc
lcall
inc
xor
cmp
mov
out
mov
push
test
mov
int
xchg
push
mov
adcb
adc
outsb
mov
xor
jmp
addr16
hlt
leave
lds
cmpsb
sbb
cmp
notl
sbb
cmp
ja
cmp
push
xchg
imul
lret
mov
add
movsl
cmpsb
add
repz
mov
adc
fwait
dec
jg
clc
cld
out
fwait
add
sahf
and
daa
leave
add
in
add
xor
or
dec
cmp
pushf
jl
xchg
and
adc
and
stos
push
movsl
mov
in
icebp
aam
sub
inc
dec
xchg
fldl
xor
push
pop
cmp
inc
sbb
or
adc
test
popa
add
pop
mov
arpl
mov
xor
pop
int3
mov
ds
fs
and
arpl
dec
dec
mov
sbb
cmp
adcl
xlat
ret
inc
repz
jo
mov
mov
jnp
cmp
dec
cmp
clc
jae
subb
rcl
push
in
sub
pusha
popf
mov
jb
mov
addr16
popa
adc
movsl
int
cltd
or
into
outsl
pushf
pop
sbb
mov
out
lcall
out
stos
inc
clc
mov
popa
or
lss
rclb
pop
dec
dec
jl
cmpsl
ret
bound
call
cmp
repnz
jae
jecxz
iret
jge
mov
imul
nop
scas
sub
stos
loop
and
cmpsb
cld
roll
in
rcrl
fwait
popf
xor
push
sub
and
push
adc
xchg
lret
inc
jb
sti
ljmp
and
pushf
sbb
bound
pop
add
cmpsl
or
adc
and
movsl
cli
movsb
leave
push
inc
outsl
les
cwtl
add
dec
out
lret
outsl
sub
or
jle
jae
xor
jbe
lcall
daa
dec
lods
add
loope
outsb
sbb
imul
push
xchg
lret
test
cmp
insl
push
outsb
push
ja
xor
iret
pop
or
pop
push
dec
push
xor
or
aad
sub
pop
pop
cwtl
movsb
cmp
push
bound
loopne
jnp
mov
fcoms
adc
xchg
js
xchg
mov
jb
adc
movsb
jge
pop
pop
sub
test
pop
out
rclb
adc
adc
lods
and
jns
enter
jecxz
lods
mov
in
mov
lret
fisttpl
dec
stc
push
push
fnstcw
das
imul
mov
test
push
jns
xor
fmul
add
sbbl
fsubl
xchg
repz
inc
mov
fs
pop
insb
sbb
jnp
flds
ljmp
jbe
cmp
inc
test
push
cmp
sub
pop
icebp
sti
and
rorb
cltd
fistpl
cmp
mov
dec
into
xor
inc
repnz
xchg
inc
ffree
inc
jge
and
movsl
xor
frstor
or
jmp
roll
adc
daa
mov
jmp
adc
xor
pushl
pop
test
sti
test
dec
dec
loop
fstpl
adc
subb
adcl
or
js
out
js
int
sub
sahf
inc
out
dec
lock
roll
sub
addr16
or
xlat
inc
and
xor
or
xchg
push
imul
movsb
mov
popa
xchg
lahf
js
xchg
and
or
adc
cltd
jns
pushf
sub
add
fbld
ljmp
stc
xorl
lret
xlat
fsub
sbb
cmp
pop
cli
lcall
std
jae
mov
mov
adc
lds
jns
inc
sbb
out
sub
xlat
sub
nop
push
xor
pop
stc
push
repnz
mov
rorb
cmp
pop
pop
arpl
add
inc
adc
orl
popl
rorb
mov
movsb
fisttpll
and
and
cmp
sub
or
pop
adc
mov
cwtl
shlb
pop
pop
mov
xor
lock
int
pushf
lcall
adc
add
aam
out
inc
push
mov
sahf
mov
jg
mov
mov
nop
hlt
inc
testl
pop
inc
stos
jns
add
test
ds
mov
or
xchg
pop
pop
fildll
and
lds
fsubl
pop
mov
push
mov
ss
pop
adc
mov
inc
cmpsl
out
add
jae
mov
inc
dec
mov
add
mov
pop
stos
push
push
adc
je
hlt
rorb
dec
jl
xchg
pop
xchg
stc
adc
xor
and
sub
loope
add
sub
xchg
rcrl
data16
mov
ds
adc
movsl
xchg
mov
addl
pop
mov
and
and
rcrl
cmp
sbb
mov
stc
cmp
cmp
rorb
sub
jle
sbb
in
cmp
and
fwait
jmp
pop
addr16
mov
inc
cmpb
ss
fdivl
jbe
cld
pop
or
jns
scas
in
push
push
push
mov
add
inc
loope
mov
mov
and
sub
add
xor
stc
dec
stc
or
sub
add
nop
mov
pop
out
and
cmpb
es
jns
cmp
addl
inc
and
sbb
dec
and
add
pushf
adc
sarb
push
into
cmp
dec
stos
or
fcom
pushf
test
or
sub
das
cmpsb
loopne
les
imul
cld
sub
test
sbb
out
dec
rorl
popf
ret
rcrl
xorl
dec
cmp
push
pop
mov
pusha
out
ss
cmpsl
icebp
mov
loopne
mov
cmp
push
sub
popf
in
mov
repz
and
and
mov
push
nop
nop
push
addr16
cli
adc
mov
in
and
sub
cmp
movsl
cmpsb
fmuls
mov
pop
push
ficomps
mov
iret
jmp
sbb
adc
loopne
jae
xchg
inc
xchg
mov
or
xchg
or
cmp
shl
aas
push
push
in
or
enter
mov
pop
xchg
call
fstpl
mov
xlat
jnp
jg
out
cmp
into
cltd
inc
push
and
cmp
out
xor
adc
cs
enter
popa
jo
dec
dec
cwtl
push
data16
xor
mov
or
inc
jbe
xor
xchg
popf
cmpl
xor
sub
outsl
addb
enter
enter
sbb
fiaddl
sbb
cmp
out
push
sbb
adc
imul
inc
leave
pushf
call
jno
push
inc
jge
cmp
fsubl
mov
inc
mov
push
stc
jbe
sbb
mov
in
jecxz
and
push
nop
insl
ja
nop
leave
das
adc
shl
les
and
dec
cld
or
scas
imulb
jmp
in
pop
xor
clc
or
cmc
lcall
mov
imul
xchg
es
sbb
xor
pop
xchg
mov
lock
xchg
out
xor
test
cwtl
inc
lods
shll
inc
jb
cmp
scas
add
stc
pop
mov
imul
xchg
cwtl
inc
or
bound
inc
clc
lock
addr16
stc
push
ffreep
jle
inc
sti
movsb
aad
dec
cmpb
repz
or
or
add
loop
adc
ss
test
and
out
push
mov
push
jecxz
jg
push
loope
jo
arpl
jl
xor
test
repnz
out
cmc
movsl
out
mov
jae
mov
bound
jmp
jle
icebp
mov
adc
shr
add
push
mov
insb
pop
imul
ss
out
adc
xchg
jle
movsl
fidivrl
in
shlb
add
sbb
push
add
movsb
popf
push
adc
pop
lock
and
test
mov
mov
std
rdpmc
sub
js
ja
sahf
cmp
mov
inc
arpl
push
stc
cmp
out
insb
push
mov
dec
rclb
cmp
mov
ss
int
mov
xchg
xchg
dec
sbb
testl
push
adc
movsl
jbe
mov
iret
dec
lds
cmpsl
icebp
pop
mov
fcmovu
insl
dec
cmp
bound
lret
ret
divb
insl
push
sbb
adc
or
call
jge
sub
xchg
or
arpl
push
insb
mov
call
mov
call
sbb
cli
lea
loope
out
aas
cmc
mov
inc
das
fwait
scas
adc
cmp
inc
jl
adc
mov
mov
pusha
outsl
xchg
mov
je
ret
ljmp
pop
dec
popf
push
or
enter
xchg
push
sbb
push
or
js
ret
sbb
or
in
sub
adc
ret
mov
nop
adc
int
push
mov
ljmp
xlat
lds
or
icebp
and
cmp
mulb
inc
pop
push
pop
cli
loop
dec
add
adc
inc
fistl
lahf
sbb
push
add
mov
sbbl
negl
pop
inc
jns
mov
test
cli
add
adc
cmp
idivb
cmp
testb
int3
pushf
jns
pop
fcoms
pop
dec
xchg
sahf
jne
scas
jmp
lretw
add
pop
or
or
xchg
adc
rcrl
cmpsb
in
dec
push
inc
mov
adc
pop
lock
stos
xor
ja
and
push
xchg
outsl
lds
fistps
sbb
dec
sahf
inc
aad
aad
or
rcr
push
or
jo
jecxz
cmp
push
or
cwtl
dec
xor
xchg
mov
cli
mov
gs
jb
mov
xadd
hlt
in
movsl
repz
mov
lahf
xlat
lods
leave
adc
mov
add
mov
cmc
pusha
lahf
sub
lds
add
push
xor
adc
cmp
jo
mov
inc
sti
lahf
sub
int
push
in
cmpsl
loope
lea
cmp
clc
xchg
inc
add
mov
pop
orb
testb
sbb
mov
add
sahf
jnp
in
andl
xor
fiadds
dec
lods
inc
fs
scas
jne
ret
repnz
push
ret
out
sub
mov
push
pop
push
into
mov
xor
addr16
xchg
shl
mov
xlat
pop
call
sbb
dec
ljmp
fwait
jo
test
cmp
mov
and
pusha
daa
or
push
push
or
cmp
and
lods
push
hlt
sbb
pop
jl
or
and
push
push
cs
out
jo
mov
jp
lods
shrb
je
add
lods
jl
aas
sbb
push
add
cli
and
sbb
sub
lahf
sub
and
mov
xor
jno
cmp
jbe
xor
data16
dec
int3
lea
mov
xchg
jo
or
or
mov
jecxz
and
cmp
test
xchg
fcomp
sbb
fucomip
jp
jmp
repz
adc
add
sbb
adc
pusha
outsb
push
pop
cs
xchg
sub
mov
xchg
dec
mov
push
pop
xchg
jle
repnz
xchg
pop
pop
xchg
fcmovbe
inc
out
scas
mov
dec
push
cltd
xor
call
pusha
repnz
aas
dec
clc
mov
andl
mov
scas
fadd
sub
sbb
and
and
cmp
xor
adc
xchg
dec
movsl
out
sbb
ljmp
in
pop
and
dec
pop
test
jne
push
das
pop
data16
pop
mov
jge
mov
mov
inc
fisttps
mov
jo
sub
mov
iret
roll
mov
xchg
and
rep
or
mov
lret
mov
sbb
sahf
add
pop
mov
mov
jg
in
enter
cmp
and
insb
mov
mov
lcall
jl
mov
mov
mov
cmp
scas
dec
xor
add
sti
mov
fisttpll
cmp
in
inc
push
fistpll
add
pop
dec
cmp
pop
fisttpll
sbb
insl
lahf
outsb
mov
push
fcomps
push
iret
jno
out
add
insl
pop
cmpb
cmp
cltd
popf
pop
scas
loope
xor
cld
or
dec
pop
lods
je
jl
push
mov
test
mov
or
ds
mov
sub
cmpsl
cmp
add
ficoml
xlat
sbb
adc
push
sbb
insl
pop
xchg
push
clc
or
int3
xchg
movsb
pop
movsl
inc
pushf
into
aaa
add
loopne
mov
addl
adc
pop
sbb
mov
dec
and
movsl
pop
insl
sti
rcrb
inc
mov
es
dec
popa
pop
push
push
orb
repnz
cmp
sub
mov
mov
pop
mov
fndisi(8087
fldt
mov
sbb
xchg
mov
mov
xor
lock
insl
inc
xchg
imul
mov
jns
dec
mov
push
adc
leave
leave
and
test
xchg
aaa
xchg
fidivrs
stos
fisubl
jns
ljmp
mov
mov
lea
iret
push
sbb
addr16
or
icebp
mov
mov
out
inc
mov
decb
and
pop
test
addr16
mov
daa
icebp
in
test
and
mov
pop
or
add
and
mov
in
lods
jl
mov
add
leave
rcrb
cld
fdivp
and
and
es
bndldx
in
sub
jl
push
dec
cld
push
ret
xchg
sbb
jnp
lock
cwtl
aad
jbe
push
pop
fisubl
inc
into
es
sahf
inc
fs
mov
repz
test
jb
ds
pop
pop
xlat
xor
aaa
dec
movb
xchg
inc
ja
sbb
nop
sti
out
jb
daa
xlat
xor
add
sarb
pop
inc
test
lret
sub
mov
fcoms
icebp
pop
cmp
rcrb
nop
sbb
insb
daa
push
xlat
out
mov
das
shll
in
inc
ret
lahf
adc
andl
out
dec
mov
dec
in
sbb
jno
mov
xchg
dec
jmp
pushf
jb
add
push
fwait
imul
outsl
dec
repz
jecxz
rcl
shrb
push
into
adc
mov
jg
or
xchg
xor
inc
fnsave
jge
mov
xchg
or
sbb
in
mov
test
dec
shl
ds
push
int3
mov
test
jae
mov
cli
mov
mov
imul
loopne
lret
sbb
fcoms
aaa
and
sbb
scas
xchg
idivb
dec
and
xor
pop
or
je
fbstp
mov
int3
cmp
push
ja
dec
mov
cli
mov
dec
push
int3
fisubrs
push
jns
jnp
xchg
insb
push
pop
dec
andl
fnstenv
out
stos
lahf
jmp
int
xchg
mov
mov
ljmp
dec
push
rcrb
push
mov
arpl
pop
pushf
mov
dec
push
pop
inc
adc
pop
lcall
lcall
ret
xchg
out
and
jg
movsb
lret
stos
and
inc
xchg
icebp
mov
adc
pop
xor
movsb
sbb
daa
push
sub
jns
push
mov
cmp
imul
sbb
xlat
in
ljmp
mov
fcompl
inc
pusha
push
and
mov
popl
lea
or
adc
sbb
xchg
adc
xchg
sub
xchg
lahf
arpl
and
sub
pop
pop
push
xor
cld
cld
andl
cmp
aas
lock
cmpl
inc
enter
inc
cwtl
xor
insb
mov
fiadds
adc
dec
sub
cmpsl
in
std
scas
xor
in
out
ljmp
fnstcw
pusha
pop
or
inc
fldcw
sub
mov
insl
cmp
std
and
daa
mov
sbb
cld
sub
sub
jns
xchg
in
pop
jno
aad
jns
fsubr
add
add
das
inc
push
mov
mov
mov
cmpsl
mov
sbb
lock
in
lahf
test
pop
push
bound
push
adc
fldenv
jne
repz
sbb
cwtl
mov
lods
jmp
jle
sbb
fsubs
out
fmul
xchg
dec
push
sti
jl
or
xor
xchg
jnp
cmc
mov
sub
adc
cli
lea
int3
and
addr16
enter
mov
jmp
popf
sbb
mov
cmpsb
sbb
or
sub
sahf
adc
jbe
lcall
cmp
insb
loop
sub
push
repz
sub
adc
movsl
aam
jbe
testb
mov
adc
adc
mov
out
inc
std
push
inc
sub
xor
ret
jb
pop
pop
cli
inc
mov
sub
test
push
ss
or
jnp
cmp
push
sub
mov
jecxz
push
push
jl
cmp
inc
jne
imul
aaa
inc
sbb
and
inc
icebp
shr
pop
dec
sub
inc
rcll
cmp
es
and
lahf
and
push
pop
mov
test
inc
jge
pop
jo
lds
mov
cs
pop
pop
lahf
dec
xchg
stos
lret
test
dec
sahf
mov
sbbb
insb
push
xlat
lcall
adcl
andl
adc
gs
lds
scas
push
scas
push
pushf
fidivs
in
cmpsb
call
xor
mov
ss
sbb
inc
xor
loopne
pop
les
scas
outsb
mov
push
mov
sub
gs
sub
lret
scas
mov
mov
xchg
in
push
iret
pminsw
icebp
mov
or
imul
xor
dec
imulb
mov
scas
je
mov
pushf
fstpl
shlb
jle
ret
aam
insl
jo
inc
arpl
mov
sahf
mov
jmp
inc
and
ds
add
or
out
popf
daa
xchg
jl
cwtl
mov
inc
mov
and
test
pushf
sbb
add
push
or
mov
inc
sbb
adc
inc
gs
jae
out
mov
cltd
jp
xor
int3
test
fistl
and
cmp
stos
loopne
scas
mov
idivl
cmp
out
jb
xchg
xorb
add
ljmp
out
jns
mov
clc
lret
movsl
jecxz
mov
inc
pop
push
jle
sbb
loope
stc
movsl
add
aam
or
cli
int3
enter
add
lock
call
stc
add
sub
sub
ds
or
stc
add
mov
sbb
add
dec
pop
sub
sub
mov
sbb
ficoms
adc
fcoml
dec
dec
popa
lea
adc
push
movsb
dec
out
pop
fadd
push
pop
xchg
lods
sbb
call
notb
or
leave
sti
jno
test
mov
cltd
sbb
xor
bound
cmpsb
fbld
in
mov
sub
out
mov
mov
cmp
lods
xchg
dec
repnz
sub
jns
jp
mov
dec
push
mov
hlt
cli
xor
cwtl
decb
mov
popf
inc
push
and
mov
fcmovnu
xor
jge
cli
mov
cmpsb
add
imull
movsl
cmpsb
push
pop
out
mov
jo
sbb
mov
lock
mov
repnz
xor
xchg
xchg
mov
jae
fnsave
push
cmp
and
mov
arpl
sbb
mov
sarl
mov
adc
push
xchg
out
imulb
pop
bound
aas
mov
in
mov
sbb
fsub
ds
repnz
test
cmp
jle
and
xchg
ja
pushf
jmp
popa
sub
loop
fdivrp
xlat
jbe
push
and
lds
or
inc
push
cs
pop
repnz
pop
pop
enter
ret
ret
mov
nop
dec
je
mov
in
cld
leave
push
push
sbb
shl
dec
test
pop
lcall
pusha
mov
jle
inc
stos
cmp
lcall
fisubs
insl
cmpsl
je
rcr
push
leave
mov
pop
jge
jg
faddp
pop
adc
or
mov
dec
imul
mov
or
sti
lods
xchg
adc
clc
stos
in
push
hlt
sbb
mov
enter
xchg
mov
outsl
add
fildl
out
jp
test
mov
push
push
mov
fmul
popa
les
pop
add
add
stos
mov
scas
movntps
cwtl
or
jl
sbb
in
popa
or
jg
pop
mov
or
stc
pop
push
inc
rorb
push
imul
jbe
int
bound
mov
sub
in
xchg
fsubr
sub
pop
cli
push
fdivrs
jl
mov
push
fiaddl
xorb
out
aad
sub
addr16
xchg
push
and
cmp
cltd
sbbb
xor
sahf
sbb
das
imul
fildll
cmp
inc
adc
sbb
daa
dec
cmp
dec
jl,pt
scas
mov
cs
cwtl
cmp
or
pop
pop
jge
mov
movsl
cmp
cli
add
or
icebp
cmp
cs
lahf
jns,pt
xchg
or
pop
rorl
filds
filds
rcll
mov
adc
leave
fisttps
shlb
pushf
insb
lahf
incb
std
nop
dec
inc
in
daa
jmp
jl
dec
mov
in
aaa
dec
lods
addr16
ja
mov
ja
lea
jne
mov
ds
pop
pop
gs
notl
fisubrs
dec
jp
lods
popa
fsubs
pusha
push
stos
mov
data16
fs
inc
mov
sub
jge
movsb
ljmp
jb
cli
lods
adc
mov
andl
aaa
add
mov
test
jbe
mov
sbb
pop
cmp
mov
inc
lret
sahf
and
fwait
mov
in
xchg
les
pusha
xchg
cmp
and
lea
cmp
mov
lret
adc
in
pop
faddl
xor
out
xor
out
in
pushw
icebp
push
or
or
cmp
testl
mov
jp
mov
cmpsb
daa
xchg
adc
je
lods
leave
mov
data16
lar
xchg
and
mov
cltd
push
sbb
push
or
addr16
test
ds
addr16
sub
out
fadds
add
and
out
shlb
add
mov
rcrb
call
pop
mov
lods
add
lods
pushf
lods
stos
cmpl
add
xor
pop
push
into
ret
scas
imul
call
xchg
dec
out
and
push
test
inc
aaa
roll
xchg
in
fdivrs
jae
sub
mov
xchg
xchg
mov
jle
or
add
jge
addl
lods
jb
pop
and
mov
push
sti
lea
push
and
mov
movsb
and
push
or
jmp
cmc
xor
shrb
bound
add
dec
jnp
push
pop
std
imul
ret
xacquire
add
call
cmp
fs
popf
test
sub
xchg
movsl
sbb
popa
or
subb
test
push
xchg
mov
pushf
mov
pop
ljmp
arpl
loopne
into
cli
inc
pop
cmp
sub
pop
popf
inc
repz
cmp
mov
dec
xor
jge
or
sahf
in
sbbb
aam
ljmp
out
jmp
pop
imul
or
rclb
xor
ss
pop
sbb
add
cmp
pop
jp
mov
rcrl
adc
add
in
sub
shrl
outsb
stos
ficomps
adc
push
cltd
jno
jmp
push
push
pusha
je
push
add
ret
rcrb
mov
jmp
inc
pop
dec
jb
rcrb
jbe
pop
movsl
test
inc
xchg
test
push
sahf
push
jns
popf
fildl
lret
lahf
popf
add
rolb
out
inc
cltd
inc
xchg
sbb
test
adc
mov
cmp
xor
pop
movsb
insl
or
int
xlat
pop
dec
fdivrs
popa
inc
sub
std
ret
dec
addr16
xorl
cmp
in
mov
jecxz
add
es
and
lahf
lret
fidivrs
pop
inc
and
cmp
imul
adc
xchg
mov
fdiv
inc
mov
sarl
dec
mov
out
sub
divb
xlat
stos
jp
sbb
mov
ret
add
gs
xchg
pop
add
pop
mov
sub
cmp
push
pop
mov
cltd
aaa
jmp
mov
cs
shll
aad
out
jns
add
clc
mov
jns
popl
movsb
sub
shll
pmaxub
pop
mov
sbb
scas
cmp
cs
pop
test
mov
popf
test
stos
repz
mov
stos
jecxz
push
rorb
ret
adc
push
scas
icebp
in
insb
add
shr
stos
imul
into
hlt
sub
addr16
push
out
lahf
rolb
xchg
push
push
pushf
mov
sbb
adc
cmp
inc
das
mov
adc
jo
push
xor
dec
in
adc
sar
or
push
dec
push
push
jb
mov
inc
or
pop
ret
daa
jmp
or
push
aas
nop
pop
xor
and
push
xchg
jp
pop
dec
leave
es
cltd
push
repnz
lods
xor
xor
ret
mov
mov
les
movsb
fstpt
pop
popf
out
outsl
ret
add
js
or
lea
sahf
push
lods
repz
cli
xor
sub
lcall
and
idivl
ds
test
mov
jb
in
push
lock
lea
mov
jb
push
ficomps
ss
enter
into
xlat
fidivrs
in
arpl
sbb
xor
add
push
ds
cmpsl
das
pop
fidivrs
push
call
xchg
mov
mov
loop
test
andb
nop
in
mov
jp
cmpsl
loopne
popf
mov
out
sub
and
mov
push
iret
test
shlb
sarl
cmp
push
push
dec
sbb
out
imul
mov
add
aad
jno
xchg
push
cmc
jb
push
add
or
movsb
pop
lods
out
pusha
push
sbb
cmp
cli
cmc
cmp
jne
mov
cmp
je
mov
fs
lds
lret
bound
adc
in
repz
xchg
addl
mov
sahf
loop
test
jnp
pop
ljmp
int3
xchg
dec
dec
pusha
into
cwtl
jb
pop
push
pop
jne
outsl
data16
insb
pop
popf
pop
xor
inc
dec
sbb
movsl
loope
push
adc
inc
add
add
cltd
sub
adc
dec
adc
sbb
rclb
loope
daa
lcall
inc
mov
and
fimull
push
sub
arpl
jmp
sbb
bound
pop
xor
mov
into
loope
int
mov
test
sbb
and
loopne
ja
test
sub
mov
idivl
int3
das
gs
pop
lahf
and
fwait
xor
stc
sub
lcall
fsubrs
addb
mov
out
cwtl
inc
push
push
rclb
leave
imul
loopne
sub
mov
sarb
push
mov
pop
pop
in
mov
hlt
sub
mov
inc
bound
clc
test
jbe
push
or
adc
mov
addr16
jbe
push
dec
lods
cmp
adc
js
lret
lds
sub
sub
movd
jge
ja
test
lock
add
adc
arpl
loope
adc
sub
jne
stc
and
aam
jmp
sbb
sub
into
push
sar
loopne
stos
mov
pop
icebp
xchg
add
fstl
or
arpl
cmp
enter
push
cmpsb
mov
xor
imul
and
mov
icebp
mov
and
xlat
cmp
xchg
mov
add
fmul
mov
rclb
push
push
sbb
push
ljmp
insl
jbe
mov
xor
mov
ret
mov
aam
popa
outsl
xchg
pop
add
adc
iret
push
arpl
mov
push
push
add
mov
mov
lods
cltd
mov
add
or
push
add
mov
inc
adc
outsl
orl
jno
das
in
jno
sbb
pop
push
aad
or
cld
push
mov
imul
adc
notb
negb
adcl
cmp
fidivl
test
pop
dec
loope
mov
loope
out
insl
mov
push
mov
jl
fistpll
sub
push
sti
mov
popa
and
xchg
or
fiadds
adc
mov
lock
xchg
or
mov
insb
inc
mov
cmpsb
lret
add
push
sbb
jnp
outsl
dec
popf
mov
out
xchg
xor
sbb
xor
and
push
ss
jge
loop
std
jg
stos
xchg
sti
daa
shll
pushf
fsubrl
jg
clc
sub
sti
mov
add
inc
aas
and
test
fisubs
dec
ret
in
daa
cmp
pop
sub
sbb
and
or
fdiv
sti
xor
xor
outsl
inc
lds
rorb
xchg
cmpsl
pop
mov
cmpsb
movsb
mov
jb
and
pop
std
jge
ficoml
loope
fidivs
add
pop
or
xchg
in
fsubl
in
scas
pop
dec
cmp
jmp
ror
js
repnz
xchg
mov
pop
sarb
mov
mov
cmp
xorl
cmp
jecxz
jl
outsl
test
popa
jecxz
mov
rcrb
add
mov
test
or
dec
stos
jp
inc
stc
mov
sbb
bound
ja
bound
mov
lods
sbb
hlt
ror
xor
jbe
cmp
sbb
shll
js
js
dec
sbb
sub
stc
cmp
cltd
jecxz
xor
out
mov
sub
mov
sub
mov
arpl
into
xchg
pop
les
out
repz
ret
xchg
movsl
test
pop
lcall
mov
ljmp
insb
add
cmp
dec
shl
jne
inc
pop
and
cmpsb
push
jo
sbb
push
adc
dec
lret
adc
pop
xchg
pop
iret
ss
push
cmpsl
add
inc
mov
mov
mov
jb
bound
imul
add
popa
sahf
adc
bound
mov
aaa
mov
pop
neg
fadd
out
fnsave
pop
fiadds
lret
arpl
inc
jmp
mov
leave
xchg
and
ljmp
cmp
cmp
sub
push
arpl
jmp
adc
pop
in
test
test
aad
xor
rcll
outsb
mov
dec
inc
pop
ret
mov
sahf
or
std
dec
ljmp
ret
push
sub
lret
add
or
cltd
jle
mov
fdiv
xchg
jg
in
xchg
cmp
scas
mov
sbb
sub
in
ret
add
jne
ret
and
imul
aad
add
push
inc
sti
stos
movsb
hlt
movsl
sbbb
pop
dec
dec
es
pop
mov
xor
mov
clc
cmp
aam
cmp
jmp
call
jmp
stc
dec
addr16
mov
into
sbb
jo
ja
int
int
xchg
xchg
and
cmpsb
test
pusha
xor
clc
sahf
imul
stos
cmpsb
iret
call
pop
insl
or
scas
test
pushf
push
pop
push
shl
add
ret
ja
lods
pop
sahf
mov
mov
mov
in
xor
fwait
xor
cmpsb
in
or
inc
repnz
adc
ljmp
mov
daa
jge
std
cld
mov
xor
aam
fsts
jp
faddl
lock
aam
push
test
pop
loopne
outsl
sti
fstps
xchg
ds
nop
add
aad
jb
push
jnp
push
pop
or
mov
insb
stos
std
jne
push
and
push
add
mov
dec
mov
pop
pop
or
mov
xchg
pop
push
pop
jo
push
and
pop
cmp
or
fucomp
loope
sti
scas
imul
adc
adc
insb
mov
inc
push
pushf
inc
int
or
ja
jmp
xchg
push
mov
mov
sbb
ss
hlt
mov
outsl
add
scas
mov
cs
int
jge
inc
mov
je
adc
stos
xchg
dec
mov
mov
cmp
insl
ret
imul
mov
push
movsb
inc
icebp
cmp
mov
jmp
push
xor
mov
stos
jb
mov
int3
std
aam
sbb
fadds
mul
mov
lds
sbbb
jge
mov
and
enter
fildll
jbe
sub
std
jo
mov
repz
shll
shr
xchg
jae
icebp
adc
push
add
cmpsb
leave
test
ja
lcall
dec
or
movsl
mov
test
xor
lea
xchg
popf
mov
imul
adc
enter
movsl
xchg
hlt
movsl
sub
stos
xchg
pop
sbb
or
pop
sbb
or
test
repnz
and
jmp
shrl
aas
adc
adc
dec
out
test
bound
arpl
stos
negl
pop
inc
jge
add
xchg
loope
outsb
xchg
in
ja
dec
cmp
clc
rolb
sub
or
inc
add
mov
sbb
mov
dec
sbb
ret
insb
popf
repnz
les
inc
xor
scas
push
add
repz
insl
push
mov
mov
aaa
pop
addl
mov
xlat
jge
dec
std
fs
and
loopne
mov
repz
mov
sbb
inc
mov
jnp
and
sub
xor
mov
or
xchg
ds
mov
lcall
xor
scas
lahf
xlat
sub
pop
sahf
inc
jno
stos
sub
lock
sahf
mov
push
shr
into
pop
and
in
iret
xchg
mov
or
xchg
adc
mov
fstl
inc
sbb
fs
inc
inc
mov
push
jp
out
xchg
mov
fdivr
mov
xchg
mov
shrl
popf
xchg
iret
rcrl
shrl
int
pop
popf
mov
hlt
dec
stos
lcall
mov
jbe
pop
mov
add
jg
repz
es
fwait
into
sbb
jg
arpl
popa
jg
sub
fwait
pop
hlt
int3
insb
les
rolb
pop
adc
ret
xchg
adc
pop
add
scas
cli
pop
or
ja
leave
xor
sbb
roll
dec
fsubrs
movsl
or
in
pop
and
add
sub
into
or
ret
xchg
iret
pop
loop
cmpl
push
inc
push
shll
ljmp
inc
push
repnz
shll
xor
aaa
jmp
or
cmp
or
xlat
cmp
jne
imul
shr
loop
repnz
rcrl
jne
xlat
paddb
and
or
mov
jns
in
lret
lret
data16
mov
das
xlat
int3
daa
cltd
pop
fucom
jb
ljmp
cmpl
mov
cmp
out
jp
mov
sub
data16
inc
add
cmp
jle
mov
ror
mov
idivb
mov
jecxz
inc
xchg
xchg
add
jbe
dec
cwtl
add
jmp
mov
sbb
and
outsl
lret
mov
dec
jge
or
sub
pop
jbe
xchg
pop
ds
cmpsb
sti
sbb
inc
xor
jno
test
call
jg
add
std
mov
push
mov
sbbl
sbb
mov
or
js
shrl
jp
in
lret
push
scas
mov
cmp
dec
pop
push
adc
leave
lea
or
inc
jecxz
cmp
push
add
mov
jge
inc
out
mov
dec
ret
stc
movsb
pop
sub
call
cmc
jge
mov
test
sub
test
sbb
inc
sbb
movsl
loopne
insl
mov
movsl
xchg
popa
ljmp
lahf
and
and
repnz
lret
mov
pop
cmp
cmc
pop
push
iret
shl
call
add
mov
fiadds
inc
cltd
add
or
jo
push
push
push
pop
mov
push
mov
push
cs
adc
subl
std
cmpsb
stos
sub
les
je
out
daa
inc
outsl
fdivr
push
xchg
aam
cmp
test
dec
lahf
mov
daa
and
loopne
stos
outsb
mov
push
sub
inc
dec
clc
or
jl
scas
arpl
es
or
push
mov
and
inc
fcompl
aad
mov
lret
gs
inc
or
push
test
int
fldl
bound
cmp
nop
push
enter
xor
lret
push
mov
pop
test
xchg
jecxz
push
xchg
cmp
sbb
pop
pop
pop
dec
push
inc
clc
mov
shrl
cld
in
incb
pop
push
jmp
xchg
test
mov
out
jecxz
out
movsb
arpl
push
hlt
xor
mov
out
mov
pusha
xchg
cwtl
out
mov
adc
push
popf
std
lds
ror
xorl
div
xchg
aas
dec
mov
jg
sub
pop
sub
aam
out
ljmp
pop
sub
sub
or
lahf
les
or
sub
aaa
inc
or
pop
aaa
aam
repz
mov
push
push
fmuls
xchg
pushf
xor
xchg
inc
sub
fnsave
mov
sbb
insb
jge
int3
inc
and
sub
imul
xor
lcall
ret
jne
scas
pop
push
enter
mov
lcall
outsb
mov
jo
test
mov
adc
leave
push
xor
pop
pop
outsl
rorl
lret
xor
sahf
cmp
insb
or
xchg
aad
mov
mov
mov
testl
sub
pop
mov
std
iret
out
lret
imul
scas
stos
repz
loopne
mov
or
rcr
movsb
aad
sbb
mov
mov
test
in
insl
test
mov
jle
add
repz
xchg
mov
add
cmp
cld
leave
mov
out
popa
stos
lds
or
shlb
fstp
mov
fwait
cmpl
xchg
ds
inc
and
jge
adc
or
out
addr16
xor
popf
lea
mov
xor
hlt
cli
xchg
in
and
mov
push
jmp
bound
das
loop
lea
pop
test
sub
cmp
enter
xor
add
ljmp
sbb
imul
popa
push
movsl
or
pop
into
jmp
add
js
xor
sbb
jg
dec
mov
insl
push
push
lcall
pop
push
lea
push
sbb
incl
and
mov
addb
ljmp
mov
icebp
enter
sahf
sub
cmp
adc
or
inc
filds
faddl
jno
or
jg
mov
mov
adc
adc
add
mov
pop
xchg
mov
mov
insb
xor
push
inc
mov
arpl
inc
push
int
xor
inc
jns
fisubs
jbe
xchg
scas
cmc
add
push
jmp
pop
xor
sbb
inc
sub
fsubrs
sahf
imul
shlb
xchg
adc
or
lcall
push
in
sub
sbb
hlt
mov
ljmp
in
fcmovu
push
in
fs
mov
jns
add
xor
dec
loop
out
jp
mov
aas
push
xchg
inc
jno
call
dec
jl
xchg
xchg
sbb
xchg
dec
sbb
and
lods
aad
inc
loope
mov
insb
push
and
rcrl
pop
or
lods
mov
cmp
pop
shrl
mov
stos
cli
lahf
arpl
fdivrl
les
sahf
cmpsl
pop
push
xchg
repz
dec
cltd
cmp
arpl
add
xchg
movsb
xchg
in
pop
lcall
jle
cmp
shlb
add
js
shlb
loop
aaa
and
loop
out
mov
adcb
push
cli
cmp
sti
aad
sbb
pop
mov
jp
es
ds
ja
add
wrmsr
ret
dec
inc
insb
jge
cmp
loop
sbb
out
push
je
popa
jl
js
ljmp
popf
test
int
push
mov
xchg
cmp
fcmove
loop
push
push
gs
sub
adc
pusha
enter
adc
imul
cmpsb
push
in
push
mov
mov
cltd
sbb
sub
xchg
inc
sub
cwtl
or
cwtl
jae
adc
testb
mov
mov
lret
jmp
mov
push
cld
cmp
imul
and
fucomp
idivl
pop
and
movsb
ja
add
popf
aaa
std
or
pop
icebp
pop
sub
repnz
fdivl
in
and
fdivs
adc
push
push
ja
and
cs
lcall
lods
mov
adc
jno
and
jle
insb
sahf
adc
lcall
cli
cld
pusha
test
mov
fisubs
cmpb
mov
loope
lods
cmpsb
imul
lret
jns
lret
fwait
aad
and
sbb
mov
dec
iret
or
imul
pusha
in
cmp
mov
fwait
sub
jecxz
add
iret
cwtl
inc
add
movaps
rcrl
jbe
mov
out
wbinvd
cmp
inc
add
pusha
xchg
mov
xchg
aaa
jecxz
mov
gs
and
pushf
adc
shll
shlb
push
mov
cli
cld
cmp
dec
push
cmpsl
scas
inc
xchg
shl
mov
push
pop
lret
jns
or
sub
mov
dec
fs
xchg
loopne
and
inc
lods
sub
mov
rcr
sbb
cmpsb
cmpsl
or
push
pop
scas
jo
insb
inc
mov
add
out
subl
adc
movl
stos
call
in
inc
fnstcw
fsubrl
movsl
sub
imul
cli
jo
pop
sbb
push
ret
notb
shlb
div
push
aas
sbb
bound
jl
bound
lds
mov
cld
leave
sub
add
popf
fs
adc
push
xchg
push
jb
js
arpl
mov
sbb
imul
push
pop
ds
mov
test
imul
mov
lret
add
adc
mov
pop
and
add
enter
cmc
mov
cmp
ret
in
aaa
daa
daa
sub
addr16
jecxz
and
int3
xchg
mov
repnz
mov
lock
mov
shl
sbb
sbb
enter
add
jecxz
jmp
cmpsb
pop
fimull
jle
cmpsb
cmp
lock
sbb
jle
fwait
inc
leave
and
loope
outsb
dec
imulb
push
sbb
lock
and
inc
cmp
cmc
dec
sbb
das
fcoms
idivl
and
es
test
shll
jno
xor
xor
lds
xchg
aaa
mov
pop
jmp
ss
xchg
outsb
std
mov
adcl
repnz
push
leave
inc
imul
mov
repnz
cmp
xlat
and
adc
add
addr16
js
nop
gs
in
test
mov
inc
int3
jg
or
mov
bound
inc
dec
jge
insl
mov
mov
push
cmc
pop
sub
icebp
inc
lods
sub
data16
in
jbe
dec
popf
xchg
outsb
lea
sub
cld
adc
adc
inc
cmp
mov
loop,pn
or
adc
leave
xchg
scas
sub
shll
fld
in
cs
cli
jmp
jg
cltd
pop
imul
out
add
scas
jge
or
mov
in
cmc
out
mov
fadd
sbb
lds
icebp
inc
dec
jae
inc
add
ja
sub
movsb
jp
xchg
icebp
and
xchg
ficompl
and
adc
cmpsb
push
inc
ds
popf
test
pop
imul
sbb
cmp
loop
addb
jp
pop
shlb
adcl
add
fsts
jnp
jae
mov
push
and
in
push
in
hlt
mov
mov
xor
scas
faddl
dec
testb
rol
orb
out
xchg
sbb
rclb
jmp
cmp
sbbb
aas
test
jl
mov
les
int3
add
leave
dec
sub
dec
es
idivl
pop
xchg
jge
inc
push
test
cmp
inc
adc
mov
pusha
xor
pop
lcall
scas
loop
add
lcall
je
out
insl
iret
daa
fbstp
repz
ja
xchg
inc
sbb
xorb
inc
bound
das
mov
ja
cltd
cmp
into
jo
mov
pop
inc
sbb
inc
jg
xorl
pop
sub
les
add
shlb
dec
mov
jb
jl
sub
dec
imul
fisubrs
xor
push
mov
mov
fs
fisubs
add
mov
pop
jb
mov
pop
pop
lods
adc
sbb
mov
and
pop
aad
scas
imul
rcrb
add
or
out
ficomps
push
rolb
jb
mov
and
push
mov
jp
lret
scas
rclb
mov
int
jb
lret
pop
mov
mov
in
ja
and
dec
jo
mov
push
sub
add
push
cmc
cmp
and
sbb
aam
mov
cmp
mov
addr16
and
adc
pop
jae
int
scas
es
pop
pop
lds
or
adc
test
ja
nop
or
jle
or
xor
fistps
xchg
push
mov
in
mov
mov
push
vpaddw
adc
ficoml
loope
inc
idiv
jne
or
push
pop
sbb
mov
ret
xor
jge
dec
pop
lret
mov
inc
clc
in
adc
shrl
mov
inc
pop
fcomps
bound
pop
sbb
mov
insb
ds
dec
in
mov
cld
pop
mov
fwait
cmpl
jmp
fadd
cmpsb
pop
cmp
add
aas
or
ret
mov
rorb
lds
clc
jl
push
sbb
in
ss
pop
xchg
xchg
stc
inc
leave
ret
dec
and
and
push
inc
addb
pop
pop
add
js
add
and
cwtl
shl
dec
xlat
push
out
dec
and
mov
and
mov
sub
mov
scas
push
jge
jno
loope
sbb
dec
nop
or
aam
and
xor
xchg
push
adc
and
push
pop
xor
xor
dec
stc
mov
lds
mov
jle
add
adc
fistpll
jne
int
push
shl
sub
bound
push
cltd
push
xor
or
xor
cli
mov
cwtl
xor
leave
sub
mov
or
jbe
inc
dec
aad
popa
mov
mov
mov
xor
mov
ss
adc
push
notl
mov
push
sbb
mov
jae
ja
in
mov
xchg
incl
dec
iret
cltd
sub
int3
fwait
int
xchg
push
rcl
jo
out
test
sbb
or
loop
push
inc
out
popa
mov
mov
add
frstor
fwait
sub
test
pop
fimuls
lahf
mov
aam
insb
mov
inc
lods
icebp
push
mov
add
lods
aaa
xchg
push
dec
test
sub
ljmp
int
jecxz
mov
push
pop
cmpsl
inc
stos
mov
inc
test
cmp
and
add
jecxz
cmp
xchg
sub
sub
lcall
xchg
fs
cltd
in
fs
push
insl
andb
loope
pop
mov
add
dec
ja
add
xor
iret
loope
cmp
jno
xor
mov
gs
inc
dec
and
mov
or
adc
jg
mov
ljmp
mov
and
sbb
shll
adc
imul
sbb
fnstcw
loop
jno
bound
jno
lea
addr16
cmc
xchg
cmpsb
out
or
mov
lcall
idivb
add
ja
add
cmp
mov
fildll
or
addr16
cmp
or
les
or
lret
out
loopne
lret
test
fsubrl
imul
test
loope
add
jg
outsl
pushf
cmp
cmp
mov
mov
dec
movsb
loope
or
xchg
dec
out
jge
jg
out
stos
and
lret
mov
dec
in
arpl
lahf
or
fldenv
mov
jmp
mov
inc
xchg
lds
lahf
inc
fiaddl
inc
push
les
add
jbe
dec
mov
test
out
and
mov
es
or
cmp
cmpsl
and
jnp
lahf
or
fmull
mov
stc
adc
mov
aas
xchg
movsb
popa
test
call
call
sbb
push
fcoms
addb
std
idivl
jge
aad
in
mov
add
and
cmpsl
mov
loop
push
enter
mov
mov
shlb
je
arpl
loope
lock
out
ja
popl
rcrl
out
adc
push
loope
clc
push
leave
jbe
or
incb
enter
mov
or
idiv
cmp
adc
push
or
testb
dec
mov
cmp
loopne
js
lcall
ficoml
adc
mov
lcall
lods
cwtl
fnstsw
subb
clc
mov
cmp
fs
add
stos
bswap
dec
imul
and
push
mov
sbb
aam
mov
jp
adc
movsl
outsl
xchg
loop
in
push
pop
call
movsb
int
dec
xor
push
test
test
cmp
cmpb
adc
mov
scas
repz
xlat
push
int3
adc
jbe
stos
movsb
and
arpl
push
adc
mov
cmpsb
sub
push
mov
mov
ret
sub
lea
sbb
inc
cwtl
adc
imul
jb
and
cmpsl
xchg
or
sbb
aaa
cs
scas
sti
pop
sub
outsb
dec
and
into
add
ret
movsb
jo
pop
jae
fstpt
popf
sub
push
or
pop
addr16
fsubl
imul
lret
testb
int
cmp
popa
es
push
xchg
push
inc
mov
fsubrs
mov
std
jae
leave
jb
inc
adc
std
fs
loope
into
push
cmp
push
xor
adc
add
or
xor
imul
enter
jbe
add
cld
popf
add
xor
cmp
insl
fs
fsubrs
loope
scas
dec
mov
xchg
mov
insl
mov
sub
int
push
ja
adc
jo
and
bnd
jo
lea
sbb
jae
mov
mov
movsl
rcrl
jmp
pop
stos
lds
js
adc
arpl
pop
mov
xchg
aas
jmp
cmp
lock
xchg
xor
and
and
rcll
lock
outsb
shrl
lods
pop
sub
mov
mov
fwait
cmp
jecxz
jns
adc
mov
mov
push
push
xchg
xchg
fcmovnu
movsl
mov
sub
sbb
adc
adc
in
andb
sbb
pop
enter
dec
sti
aad
daa
cmp
and
inc
lods
xchg
sbb
nop
push
mov
add
push
orb
outsb
or
push
sbb
ja
mov
rorl
pusha
xlat
loop
inc
arpl
fstpt
lret
xchg
sub
imul
xor
cmp
mov
fnstcw
out
push
stc
adc
lods
dec
lds
cmp
rcrb
cmp
popa
add
clc
add
pop
lret
clc
push
or
sbb
mov
popf
movsb
lds
sbb
aad
or
cwtl
popa
sub
fidivs
je
adc
out
pop
fmull
pushf
jecxz
lods
cltd
inc
imul
clc
or
ret
xor
sub
mov
push
in
cmp
out
mov
out
rclb
adc
jl
pop
ja
cmp
in
ret
xor
mov
inc
or
es
ljmp
jl
mov
lea
cld
mov
dec
add
mov
jp
cmp
lock
push
test
dec
sarl
xor
loope
mov
lret
xor
and
stos
mov
xor
adc
sbb
shrb
sub
push
jne
dec
mul
xlat
cmp
addb
xor
out
jle
push
push
push
fisubl
or
adc
mov
in
cmp
pop
sub
jne
mov
mov
idivl
pop
bound
pushf
aaa
push
push
mov
daa
sub
mov
testl
and
adc
mov
sti
add
mov
mov
daa
scas
fcmovnu
xchg
daa
icebp
scas
or
fistpl
jns
cltd
inc
or
lahf
sti
fs
jno
nop
sarl
mov
addr16
xor
dec
call
mov
jb
cli
aam
out
data16
fcom
roll
mov
push
sub
das
enter
out
int
les
mov
adc
mov
adc
js
mov
in
jae
sbb
bound
aas
push
jp
fcomps
loop
pop
fcomp
fistl
sub
ljmpw
sbb
push
xor
mov
out
loopne
pop
out
inc
in
jecxz
shlb
sub
mov
or
cld
push
jns
xor
jp
int
mov
cmp
and
mov
in
sti
push
adc
dec
xchg
mov
lahf
dec
pop
add
xor
mov
push
mov
pop
sbb
pop
dec
out
test
gs
std
sbb
in
adc
mov
mov
test
pop
jge
cltd
push
int
push
inc
fcoml
insb
adc
push
cmp
mov
out
fisubs
xchg
aaa
inc
xchg
loop
pop
push
jno
pusha
jbe
xor
inc
das
and
sub
pop
arpl
jp
add
lea
fwait
sahf
push
popa
add
jle
fwait
mov
pop
lds
inc
cmpsl
sub
inc
cmp
mov
mov
mov
fistps
jg
rorb
dec
cmp
lods
int
div
push
fptan
and
call
out
fmulp
scas
cld
cmpb
std
xor
pop
lahf
popl
mov
dec
jo
pop
mov
sub
pop
je
dec
int3
pusha
cltd
add
pusha
pop
je
jne
mov
sbb
or
fbstp
sbb
icebp
sti
add
lods
cs
imul
stos
popa
addr16
scas
mov
loope
dec
mov
mov
arpl
and
cmp
and
pop
or
xchg
or
stc
xchg
and
mov
aas
jg
pop
cltd
neg
fsts
add
push
in
fnstsw
in
nop
mov
jbe
adcb
push
insb
mov
mov
in
pop
and
inc
mov
ljmp
push
insb
mov
or
dec
xchg
or
push
leave
dec
mov
jle
imul
xchg
cmp
je
push
dec
fsubl
bound
xor
out
add
mov
add
sbb
lret
sahf
jmp
add
mov
dec
and
mov
inc
mov
imul
sbb
dec
inc
popf
sub
lods
out
push
or
jbe
sbb
in
sbb
dec
dec
and
dec
repnz
pop
or
jb
sbb
in
push
je
int3
pop
fnsave
shlb
cwtl
lds
adcb
adc
jns
fbld
mov
das
push
pop
fisttpl
dec
idivb
inc
jbe
cmp
outsl
mov
mov
in
sti
inc
test
xchg
mov
scas
inc
in
add
ss
mov
pop
inc
pop
xor
call
sub
adc
push
inc
inc
test
sub
dec
sub
add
adc
inc
imul
sti
jbe
adc
inc
push
insl
fidivl
and
sbb
ret
dec
rclb
popl
jle
insl
cmp
pop
aaa
insb
imul
mov
repz
aaa
jl
add
pushf
in
cmc
pop
xchg
decl
add
dec
test
cmp
mov
aas
jecxz
clc
clc
add
data16
jae
negb
dec
sbb
adc
sub
pop
lods
add
test
cmp
or
inc
cmpl
xchg
push
movsl
adc
cmc
out
cli
aaa
xor
nop
adc
lock
cmp
call
adc
pop
fisubs
call
dec
inc
insb
call
jg
and
das
dec
add
or
stos
gs
lea
movsl
xchg
add
inc
out
or
sbb
push
mov
pop
adc
mov
stc
fstpl
push
xorb
scas
mov
cmp
pusha
lret
aas
cmp
testl
mov
mov
aam
divl
push
leave
insl
sbb
imul
adc
repz
sub
scas
sub
fidivrs
pop
inc
pop
add
out
cmc
push
sbbl
xchg
lret
enter
leave
loopne
pop
aam
cmc
divb
data16
adc
or
fdivl
cmp
cmp
movsb
sarl
es
cltd
add
add
out
xorl
into
mov
adc
outsl
mov
dec
std
cmpsb
sbb
xchg
int3
adc
or
insl
loop
dec
dec
push
add
adc
fstpl
or
inc
ljmp
repz
pop
xlat
test
mulb
sbb
push
mov
je
sbb
and
mov
rcll
cmp
ret
cmp
adc
push
sub
xchg
dec
inc
add
hlt
add
pop
cltd
js
cwtl
gs
push
cwtl
mov
shrl
pusha
jne
in
aad
les
jle
cmpsb
jno
aam
sub
cmp
stc
push
ret
sbb
jmp
xchg
test
cmc
cli
push
fmuls
jo
sbb
adc
mov
dec
sub
test
adc
test
leave
aas
insl
jmp
and
push
jmp
sub
cmpsl
cmp
mov
push
sub
xor
stc
daa
adc
jg
test
aam
inc
sbb
popf
test
out
je
vphaddubw
repnz
sbb
lcall
dec
push
cltd
xchg
xlat
and
fsub
jae
daa
cmp
xchg
aas
lret
clc
pop
out
ljmp
ss
leave
testl
rol
dec
sub
movsl
fs
rcll
fs
pop
push
pop
outsb
movsl
scas
scas
push
insl
andl
push
mov
ror
scas
sub
sub
loopne
nop
imul
test
aad
stc
jbe
in
das
or
popf
enter
addl
cli
push
repz
pop
les
mov
xor
adc
gs
xor
sub
pop
out
test
push
cmpb
iret
mov
xor
inc
fistpl
daa
insb
inc
sahf
and
das
or
push
jo
adc
inc
sbb
enter
sahf
iret
pop
or
cmp
loopne
scas
mov
xchg
div
xor
data16
jl
and
daa
sqrtps
and
bound
js
jp
mov
add
ja
push
cmp
aam
inc
test
int3
sbb
lds
bnd
faddp
mov
push
or
jns
test
or
das
mov
dec
aad
sbb
mov
xchg
pop
adc
inc
mov
mov
push
mov
add
push
inc
dec
mov
add
pushl
xor
daa
add
ss
fstl
inc
inc
inc
stc
pop
jae
ljmp
test
inc
sbb
mov
dec
stos
jp
jbe
xchg
cmpsl
pop
push
popa
mov
xor
jl
lods
shlb
sbb
pop
jp
shl
inc
cld
adc
addl
cmc
cmc
add
aam
mov
pusha
out
inc
fisubs
shr
cmp
sahf
add
loope
inc
insb
and
adc
test
pop
xchg
jmp
mov
aam
mov
inc
cmp
lea
add
mov
das
xor
ss
or
js
rorl
mov
xchg
push
lahf
add
and
mov
adc
inc
cs
xor
movsl
jmp
mov
push
push
mov
insb
imul
adc
xchg
lds
test
dec
sbb
in
lcall
pushf
dec
dec
les
push
jno
cltd
jmp
insl
stc
inc
lahf
repz
mov
push
adc
repz
xchg
push
js
cli
mov
or
std
ja
pushf
fucomi
aam
xchg
rcll
cmpb
ss
mov
push
pop
enter
addr16
pusha
addr16
movsl
sahf
mov
adc
sahf
jns
jmp
mov
ret
jecxz
lret
in
rol
in
cli
xchg
jo
pop
popf
icebp
inc
mov
and
and
mov
and
cmp
sub
jmp
ret
and
mov
in
das
cmp
push
xor
rorl
scas
dec
xchg
inc
push
aam
mov
dec
jo
ljmp
push
movsb
int3
and
pop
daa
mov
mov
pop
sbb
mov
pop
inc
cli
or
int
xor
mov
nop
arpl
addl
jecxz
sub
imul
mov
push
cs
push
jno
push
shrb
sub
mov
and
rclb
dec
int
adc
and
das
loope
jne
in
push
pop
hlt
aas
outsb
ss
cmp
sbbl
or
test
vpaddusb
jecxz
imull
scas
sub
or
aas
xchg
jno
xchg
lods
pop
sbb
sbb
cwtl
shrb
mov
jmp
js
ss
in
push
push
mov
in
pop
rcr
fildll
sub
xchg
pop
xor
repnz
sbb
cmp
scas
jge
incl
pop
pusha
pop
call
add
adcb
mov
call
psllq
imul
xchg
xor
out
popa
fistpll
and
xlat
inc
and
inc
xchg
ja
sbb
aam
sahf
cvttps2pi
shrb
xchg
mov
int
addb
pushl
inc
inc
adc
jnp
movsl
inc
push
sbb
rcrb
into
repnz
push
xor
pop
xor
push
sub
sbb
sar
adc
roll
pop
adc
push
mov
scas
incl
outsl
push
fisubrs
push
adc
mov
js
mov
jns
xchg
orb
or
mov
cmp
int3
fs
add
pop
pop
adc
jecxz
push
lock
jmp
sbb
inc
in
shll
cs
dec
stos
mov
std
mov
cmpsl
add
sub
cmovo
clc
adc
jo
jo
sub
jne
pop
pop
enter
gs
pop
lods
inc
push
in
sub
cmp
jne
movsl
in
and
adc
pop
dec
pop
jle
inc
jmp
xor
push
mov
xchg
xor
or
iret
fmul
ds
dec
pop
adc
scas
insb
add
lahf
mov
adc
sarb
and
pop
mov
ljmp
int
jge
and
inc
push
xor
imul
push
je
pop
jl
imul
sbb
test
mov
mov
inc
stos
divl
jo
pop
push
mov
and
aam
adc
jmp
cwtl
xchg
jnp
dec
sub
jo
loope
lods
insb
and
popf
push
std
or
cmp
pop
pop
inc
push
cli
ret
sub
cmp
push
les
insl
adc
xor
inc
repz
sub
aaa
std
in
xor
bnd
or
arpl
or
pop
clc
sub
mov
xor
sub
xchg
sbb
ljmp
dec
pushf
clc
inc
ret
sub
sbb
and
and
outsl
shl
pop
push
lods
fsubrs
mov
xor
push
pusha
sub
mov
inc
and
clc
jmp
call
inc
ss
add
addr16
stos
dec
ret
jo
pop
dec
enter
lret
aam
fldt
test
mov
cmp
lods
pop
outsb
push
push
rorl
mov
dec
jecxz
mov
das
and
cltd
adc
out
cmpl
das
mov
jne
fmuls
fsubl
xor
or
mov
mov
mov
push
cmp
pusha
mov
mov
cmpsl
adc
std
mov
je
push
pop
push
push
rcrl
hlt
sbb
mov
jae
fidivrl
push
imul
mov
add
push
xchg
or
and
fmulp
andb
dec
aad
lea
push
mov
stc
cmp
outsl
in
pusha
push
inc
stos
or
jb
dec
jbe
ftst
push
push
lea
inc
add
jp
mov
xchg
cmp
mov
lds
addr16
cld
cmp
test
and
jo
into
xor
cmp
in
push
inc
mov
or
cmc
xorl
ret
repz
loope
inc
mov
popa
pusha
mov
or
pop
ja
mov
outsb
mov
dec
inc
cli
pop
lds
push
daa
hlt
ret
test
movsl
ds
mov
cltd
inc
push
add
scas
mov
imul
lahf
js
subl
test
movsb
dec
pushf
stc
bound
and
mov
inc
leave
faddl
pop
std
mov
repz
stos
add
xchg
dec
daa
test
xchg
cmpsl
subb
dec
lret
rcr
cmp
push
push
cmp
sub
ds
jns
jb
andl
push
adc
movsl
icebp
mov
dec
lahf
aad
mov
jecxz
lds
jmp
lret
adc
sahf
jb
jmp
cmp
mov
push
mov
jbe
push
push
call
push
sbb
xor
repnz
pop
cmp
inc
fwait
mov
repz
xor
inc
inc
fcoml
adcb
clc
add
xor
dec
push
repnz
jge
sbb
enter
subb
lret
test
dec
push
mov
xor
sbb
decb
ror
lods
fcmove
push
jle
adc
and
shrl
movsl
imul
push
pop
xor
in
iret
sbb
adc
in
push
inc
cmpsb
outsb
push
pop
in
adc
add
negl
out
in
jge
cld
sbb
sbb
imul
sub
aaa
mov
loop
lret
mov
lret
mov
mov
scas
lods
movsl
out
int3
sub
pop
and
stos
and
mov
cmpsl
push
xchg
mov
ja
xlat
in
mov
dec
push
js
btr
xchg
mov
daa
movsb
gs
repz
sti
into
inc
jle
pop
sbb
jno
add
mov
ss
inc
aad
sbb
movsl
mov
inc
inc
stc
das
gs
mov
or
pop
push
and
jmp
bound
ret
iret
or
cmp
cld
mov
or
jb
inc
sub
stos
inc
jl
lods
cs
xor
xchg
fdivl
fidivrs
jbe
icebp
movsb
jp
xor
into
xchg
mov
mov
xor
add
pusha
shlb
insb
stos
orb
xor
xor
xor
jnp
dec
outsb
scas
jmp
cmc
loopne
repnz
roll
addl
leave
and
mov
call
sbb
pushf
add
inc
jbe
iret
jg
cs
mov
push
pop
xchg
ret
mov
mov
lds
jg
push
and
movsb
or
jecxz
mov
pusha
lds
lcall
or
or
call
push
fistpll
enter
scas
xor
aad
outsl
mov
ja
cltd
pop
xchg
push
fisubrs
or
mov
xchg
sbb
mov
inc
sbb
adc
ret
lret
push
and
pop
mov
or
in
jl
int3
or
add
je
jl
pop
pop
pusha
ss
mov
dec
push
sub
inc
sub
cmp
ret
roll
in
xchg
sbb
jnp
in
sub
cmpsl
rorb
push
push
lea
sar
or
insb
dec
dec
mov
out
cmp
inc
dec
dec
ljmp
stos
div
imul
jns
inc
iret
jno
add
scas
insb
and
lods
addr16
sub
hlt
jno
jbe
test
cltd
cmpsl
aam
push
cmp
adc
std
mulb
fbstp
pushf
inc
aas
sbb
ds
stos
decl
xor
popa
das
test
stos
jl
inc
dec
rorb
leave
xchg
imul
cmc
lods
aad
and
test
jno
xchg
and
cmp
jbe
mov
jne
xchg
test
out
data16
push
inc
insb
insb
and
inc
dec
les
shlb
in
jbe
mov
dec
sarb
aam
cmp
xor
gs
sahf
sbb
loope
jnp
xchg
stos
mov
dec
adc
shrb
cmp
ficompl
push
lea
xchg
stos
jne
pop
xor
out
cmp
lcall
push
xor
inc
decl
xchg
popa
mov
or
add
push
in
push
jno
outsb
rol
outsb
sub
push
inc
ret
insb
out
sbb
lods
xor
mull
mov
shlb
imul
xchg
push
pop
or
mov
enter
into
push
ret
mov
push
mov
inc
sub
xchg
pop
adc
repz
pusha
jecxz
xor
cmp
aad
maxps
cli
test
out
xor
cmp
out
push
mov
push
arpl
movsl
or
sbb
mov
push
and
cmpsb
stos
mov
mov
sub
and
mov
cmc
push
cmp
and
fabs
inc
subl
and
scas
gs
test
iret
lahf
ret
mov
push
addr16
dec
aas
lcall
inc
ret
or
insb
aaa
std
xor
movsl
imul
daa
enter
hlt
popa
fwait
lods
aad
add
ja
cmp
jge
sub
adc
ret
icebp
push
and
inc
mov
sbb
xchg
ror
xchg
xchg
or
pop
ret
sbb
push
add
pop
xlat
jmp
test
rclb
leave
scas
sbb
adcb
adc
decb
add
xchg
mov
ret
out
mov
lret
fidivs
mov
aaa
push
loope
pop
mov
shl
popf
loopne
ret
xchg
mov
sbb
pop
and
inc
and
push
mov
out
jl
mov
sahf
out
enter
push
cli
movsb
pop
add
cld
loopne
mov
pop
test
sub
inc
lahf
mov
lret
inc
scas
outsb
filds
jns
mov
lret
fistpll
cmp
int
aad
pop
cmp
cwtl
out
stos
mov
mov
repnz
mov
cmp
sbb
jmp
in
jle
in
or
popf
popa
cmc
callw
fcoml
sbb
inc
aam
xchg
sbb
push
mov
out
stos
lret
ljmp
mov
xor
icebp
pusha
mov
stc
jb
add
jmp
sbb
aad
push
sub
rcr
scas
add
xchg
xchg
ja
cltd
in
inc
cmc
cwtl
fistl
xchg
mov
inc
ret
adc
fmuls
les
in
xchg
pop
inc
cs
pop
jns
sub
shrb
ljmp
and
jle
mov
data16
xor
inc
xchg
pushf
adc
out
sbb
imulb
xchg
fisubs
jae
mov
add
mov
push
push
out
mov
jbe
push
in
dec
imul
push
jbe
sub
or
es
cltd
and
and
inc
or
adc
mov
cmp
in
cmpl
mov
cmp
fwait
push
mov
ds
pusha
enter
bound
cmp
mov
call
pusha
jns
rorb
jecxz
push
dec
cld
push
mov
jle
stc
adc
jmp
test
das
jmp
cmp
dec
in
outsl
sbb
cmp
mov
call
jl
inc
inc
sbb
jg
mov
xchg
pop
mov
std
mov
nop
cmp
pop
shrl
adc
out
mov
mov
push
retw
mov
push
or
xchg
pop
mov
push
xchg
sub
push
loope
xor
add
sahf
cmp
jmp
daa
cmp
sub
mov
inc
out
and
das
mov
addr16
jecxz
inc
sub
arpl
repz
pop
pop
in
mov
in
rcrb
nop
push
mov
imul
mov
or
dec
mov
lret
iret
fistl
int
stos
test
or
mov
and
xor
and
ljmp
les
cmp
push
jg
stc
aam
cmpsb
hlt
sti
clc
pushf
xor
rcrb
in
int
add
mov
xor
push
push
arpl
and
scas
mov
sbb
jle
jbe
push
jns
out
cwtl
xlat
sub
xchg
add
pop
fwait
mov
loope
scas
xchg
jo
xchg
sub
mov
xlat
add
rol
push
pop
push
das
cmp
imul
test
ja
inc
mov
push
aam
in
add
xchg
sbb
insb
sub
test
das
or
mov
adc
sub
stos
ret
adc
xor
mov
rcrl
pop
sbb
bound
pop
mov
pop
lods
jg
loope
out
jb
ss
ss
aam
cmp
jmp
pop
stos
je
fildl
fmulp
and
pop
inc
pop
xor
add
xchg
std
inc
dec
or
cmp
lods
and
sbb
jns
mov
out
je
aad
dec
or
out
insb
jmp
stos
mov
cli
icebp
movsl
mov
js
push
ror
mov
mov
and
test
push
into
mov
sub
mov
stos
rclb
idiv
stc
inc
inc
mov
leave
jno
pusha
xchg
popf
or
jnp
ficompl
adc
jns
loopne
push
sub
aad
popa
cmp
mov
jge
cmp
sub
stos
insb
push
mov
and
pusha
pop
iret
mov
xchg
pushf
out
adcb
mov
fsubs
and
fcmovnbe
mov
test
add
pop
pop
sub
mov
pop
in
jns
movsb
pop
outsb
jmp
mov
mov
xor
sti
cld
mov
mov
lods
add
arpl
stos
push
andl
pushf
notl
in
and
ror
sbbb
rcrb
add
pop
movsl
popf
jae
inc
push
adc
dec
mov
cld
fidivs
sub
mov
mov
popa
inc
std
sub
rcrb
icebp
in
or
inc
insb
fidivrs
push
adc
xor
jge
ret
xor
jne
shlb
adc
aam
mov
outsl
cld
mov
aam
aam
stos
xchg
stc
and
shlb
cmp
mov
mov
outsl
test
push
adc
fiaddl
ror
testl
push
adc
cmp
cli
pcmpgtb
mov
dec
aaa
or
or
sbb
or
nop
or
sbb
cmp
dec
pop
pop
xchg
int
and
push
sbb
or
inc
out
pop
lcall
cmc
ret
cmpsl
call
mov
cmpsl
mov
loopne
push
xchg
sbb
cwtl
out
pop
lret
pushf
popa
int
jmp
inc
int3
mov
in
push
test
push
push
js
add
dec
leave
mov
aas
mov
jo
jbe
mul
mov
push
push
jge
cmp
sub
add
out
icebp
std
sbb
sub
mov
into
dec
pop
fcmovnb
mov
fwait
adc
and
mov
adcl
xchg
pop
push
clc
lock
out
lds
into
cmp
test
jae
int
test
out
data16
dec
popa
mov
sub
scas
adc
dec
orb
out
test
jl
pop
sbb
fistl
xor
mov
xchg
lods
ljmp
push
pop
mov
out
pop
mov
pop
negb
insb
ljmp
xchg
adc
push
lea
dec
insl
rcrb
adc
sahf
cmp
sub
mov
cli
sub
pop
sub
fsubrs
fucomp
push
dec
frstor
les
push
aam
dec
or
sbb
fisubrl
fstpt
xchg
lods
out
aaa
es
pop
jne
and
insb
add
or
push
addr16
outsb
aam
ss
mov
ljmp
in
cmpsl
inc
pop
das
stos
xor
das
push
pop
test
lahf
test
xchg
mov
insl
into
out
gs
jo
loope
das
popl
inc
imul
cmpl
out
sbb
mov
outsl
clc
mov
pop
add
sub
stos
imulb
jo
jmp
push
xchg
pop
inc
shlb
nop
lret
mov
add
dec
sarb
int3
movb
xchg
inc
loope
jle
aam
pop
jmp
enter
shlb
cmpsl
pop
cli
lods
pop
lods
push
popa
inc
xor
cmpb
mov
jmp
fildl
iret
imul
add
movsb
or
cmpb
enter
dec
fnstenv
xchg
mov
jmp
push
mov
dec
mov
cmc
mov
in
push
push
pop
leave
xchg
lret
sub
insl
push
and
daa
mov
int3
insl
fwait
and
imul
mov
xor
dec
jl
movsl
mov
xchg
mov
cmp
and
jb
movsb
xchg
insb
pop
sub
jns
in
or
push
ficoms
dec
or
test
push
pop
cmp
std
enter
addr16
aam
mov
mov
push
xor
mov
add
add
aam
mov
sub
mov
imul
inc
or
mov
les
mov
sbb
fsubl
frstpm(287
dec
xlat
iret
ficompl
inc
leave
aad
rcr
xchg
in
jmp
cmpsb
pop
pusha
mov
sub
stos
rorl
in
shl
jne
mov
dec
jp
cmp
mov
pushf
jp
push
cmpsl
push
dec
inc
test
push
js
dec
inc
jne
mov
pop
pop
pushf
ror
jmp
mov
jno
or
js
pop
push
inc
push
jno
movsb
mov
shll
jecxz
pop
std
adc
popf
cmpsl
pavgw
sub
or
mov
xor
outsb
aam
fidivs
pop
dec
xchg
push
nop
sti
push
xchg
dec
adc
and
mov
and
ret
int3
add
imul
mov
jae
push
xor
cmp
incl
das
adc
sbb
lret
inc
pushw
push
push
xchg
mov
jmp
inc
lret
sbb
mov
cmp
pop
sbbb
add
pushf
pop
fildll
pop
mov
or
gs
clc
cld
xchg
or
push
pusha
mov
mov
sbb
es
insl
mov
and
je
sub
add
pop
les
hlt
enter
or
xor
xchg
jle
xlat
push
adc
jb
test
cmp
insb
insl
add
push
sbb
push
into
lods
adc
sbb
in
cmp
pop
fdivs
cmpsb
mov
movsl
stos
imul
daa
pop
js
jbe
imul
andl
xor
sbb
and
notb
pop
insl
or
das
xchg
xor
sbb
mov
fs
lea
sbb
xchg
mov
test
push
jb
or
add
and
sub
sub
dec
dec
mov
sbb
xchg
mov
bound
dec
sbb
mov
aaa
jbe
push
pop
or
out
int3
sti
xchg
hlt
ret
mov
cmpl
push
push
stos
cmp
rcl
cmpsb
lahf
dec
icebp
mov
xor
xor
mov
add
nop
sbb
mov
clc
mov
xchg
lret
mov
es
or
outsl
stos
pop
jl
daa
rorl
and
leave
mov
aas
stos
into
or
outsl
out
inc
push
jb
je
outsl
inc
repz
xor
dec
adc
or
or
or
push
lretw
or
int3
inc
insl
sarl
imul
cmc
lods
pop
sbb
pushl
sbb
jecxz
leave
sub
into
lods
icebp
and
je
mov
scas
pushf
stos
xchg
fs
push
iret
les
mov
imul
leave
jo
testl
cmpsl
or
jecxz
or
sbb
inc
fidivrl
add
cwtl
dec
dec
mov
push
xor
frstor
sbb
aas
mov
movsb
push
mov
adc
pop
mov
mov
out
mov
dec
in
shrl
lahf
ficoml
pop
add
or
outsb
out
lahf
pop
xor
das
out
sub
sbb
cmp
clc
outsb
add
xchg
xor
aas
lcall
aaa
lods
stc
mov
push
bound
xor
mov
clc
inc
xlat
xorl
stc
pop
jne
inc
test
mov
xchg
mov
popf
or
jb
pushf
mov
sbbl
imul
repnz
cmp
jge
cmpsb
adc
jl
jp
sbb
cmp
lods
mov
out
dec
or
pop
pop
cli
frndint
or
mov
jp
into
or
mov
mov
loopne
jl
sti
push
sbb
push
push
leave
mov
sub
mov
popa
adc
addr16
cmpsl
cmp
adc
lods
orb
arpl
add
xchg
dec
outsl
aam
ss
into
aas
addr16
outsb
and
shrl
or
push
pushf
mov
fidivs
in
stc
sbb
xor
add
adc
add
xchg
or
cmpsl
inc
jle
pushf
push
in
repnz
lret
mov
mov
mov
sbb
add
dec
mov
or
imul
xchg
mov
nop
pop
sar
xchg
mov
xlat
repz
mov
ds
sub
inc
fstl
rol
push
clc
ficoml
jmp
mov
xor
scas
mov
shlb
cmpsb
xor
subl
jbe
jle
xor
pop
xor
mov
std
subl
stos
fsubl
sub
jmp
repnz
mov
mov
lds
mov
fwait
sub
adc
xor
out
pop
pop
mov
push
cmpsb
push
add
lds
and
push
movsl
les
xor
popf
dec
movsb
xchg
insl
les
cmp
ret
imul
adc
aaa
mov
cli
sahf
push
je
int3
pop
adc
push
pop
loope
lea
stc
icebp
dec
aam
movsb
ret
and
xorb
fs
push
xor
in
popa
and
aas
notl
sbb
dec
pushf
adc
in
cmp
cwtl
sub
aas
mov
daa
jb
lods
push
mov
lds
divb
sbb
inc
mov
adc
subl
inc
sub
std
mov
mov
ret
cmp
pop
js
fnstsw
xor
dec
popl
sub
lret
sub
loop
mov
aas
adc
cli
insb
push
ljmp
or
bswap
int
in
ret
inc
pop
add
mov
nop
xchg
jnp
loopne
pop
shrb
xorl
cmp
pop
repnz
mov
add
iret
sub
jnp
xchg
mov
fs
dec
cmpsl
cld
cmp
jl
add
mov
or
sub
xor
mov
scas
sbb
adc
dec
xchg
test
incb
add
into
shlb
jmp
iret
mov
add
xor
lret
inc
popf
inc
inc
push
lods
sbb
clc
pop
je
nop
mov
pop
insb
sub
cltd
loope
xchg
and
lds
out
faddp
jb
call
push
pop
cwtl
enter
jge
mov
outsl
stos
sub
mov
pop
mov
ss
jge
lcall
inc
pushf
frstor
mov
cltd
rcr
rcl
fmuls
mov
repz
xor
xor
push
pop
cmpl
cmpsl
andl
movsl
fnstcw
add
daa
add
call
stos
in
sbb
adc
jle
jge
aam
jg
js
adc
std
dec
sbb
lret
mov
scas
xor
cmpsb
shrb
cmp
shll
adc
in
and
sbbb
fstl
xchg
and
mov
adc
aam
sub
sbb
iret
fiadds
cs
out
loopne
out
push
sub
mov
inc
in
fstpt
jno
cltd
or
bound
lcall
repnz
addl
ret
movsl
and
adc
push
mov
add
and
mov
pop
cmp
inc
mov
rclb
xlat
jmp
aas
lods
inc
or
sub
inc
aad
aas
loopne
std
insb
cld
ret
movb
out
adc
mov
std
sbb
orb
jg
rorb
push
jge
mov
cmp
xchg
cmp
test
dec
dec
sbb
dec
sub
xchg
xor
adc
pop
pop
test
ror
addr16
xlat
outsl
popf
es
push
or
out
push
out
xchg
aaa
add
outsb
loope
pushf
packsswb
and
mov
jg
pushf
adc
sub
mov
jg
add
insb
cli
mov
push
pop
xor
mov
ss
mov
xor
shll
js
push
outsl
lods
loopne
xchg
pop
popa
jp
pop
ljmp
xlat
jbe
push
in
ret
mov
cmp
push
push
adc
lahf
mov
sbb
mov
jns
jns
bound
sbb
adc
shll
shlb
mov
inc
scas
push
xor
cmp
outsb
pop
pop
cltd
mov
mov
ret
mov
pop
fmuls
push
cs
xor
ret
and
jmp
mov
jl
push
mov
rcll
test
fmuls
in
push
mov
jg
pop
cmp
pop
mov
inc
jo
or
or
scas
lock
dec
cmc
and
dec
inc
mov
negb
sti
lods
pop
das
mov
jmp
xchg
ds
pop
mov
adc
gs
iret
mov
inc
inc
test
mov
or
in
mov
xchg
cmp
aad
mov
push
data16
jp
mov
jno
adc
jne
imul
nop
insb
imul
fwait
sub
insb
fwait
jl
out
push
shlb
sbb
aam
mov
adc
xor
pop
gs
lret
pop
hlt
push
movsl
xchg
pop
aam
xchg
xchg
int
mov
je
push
cltd
sub
test
xor
scas
or
adc
and
in
sbb
out
aaa
jmp
push
inc
outsb
hlt
lret
adc
js
call
sub
cmpsb
mov
test
cmpsb
jge
ss
mov
ret
and
adc
inc
loopne
jle
subl
cmpsl
fwait
push
sbb
stos
mov
imul
push
out
cmp
jge
test
push
mov
mov
cli
sti
adc
sbb
outsl
xor
xchg
or
add
fldt
lahf
cmpsb
insl
xor
jns
sbb
xchg
or
sub
jp
push
push
jbe
pop
xchg
mov
jmp
jmp
sub
incb
dec
jg
and
sub
mov
push
lods
repz
in
sbb
stos
dec
sahf
arpl
sbb
jnp
mov
sar
enter
dec
push
mov
mov
lea
test
out
xchg
int
fnsave
xor
xchg
pop
mov
mov
jbe
dec
insl
inc
xlat
cmp
out
push
cmp
std
jecxz
loopne
out
xchg
fistpl
jle
xor
pop
jg,pn
inc
sbb
dec
dec
jge
or
dec
xor
sbb
xchg
je
rorb
cmpsb
xor
jns
or
js
into
push
aas
fucomp
lahf
adc
dec
in
cltd
cltd
sarl
mov
outsl
lret
lret
jmp
mull
sahf
mov
jae
or
mov
push
and
inc
sub
jns
es
mov
les
or
aad
dec
pop
jne
cmp
add
mov
xchg
push
mov
lahf
cld
xchg
adc
sub
mov
xor
xor
test
fwait
inc
popa
ret
repz
cmp
sbb
sub
pop
xchg
cli
pop
pop
xchg
dec
cmp
aas
push
sbb
nop
shll
pop
scas
fldl
pop
adc
test
mov
loope
negl
fdivrs
sub
dec
pop
fldcw
add
mov
sbb
add
jle
imul
mov
loop
movsb
das
test
arpl
fdivs
insl
test
cld
xchg
les
jb
loopne
inc
push
test
xor
and
dec
adc
test
inc
das
xor
push
sbb
mov
nopl
enter
movsl
jg
cld
popf
mov
cmp
mov
sub
cmp
pusha
pop
jns
mov
enter
jecxz
or
stos
and
inc
dec
ret
and
sbb
or
popf
add
pop
jg
sub
xlat
repz
mov
jne
inc
mov
mov
push
or
sti
scas
xor
in
adc
mov
adc
adc
inc
out
addl
push
add
push
leave
jmp
arpl
sbb
jle
sti
testl
movsl
push
push
mov
es
pop
inc
ja
jbe
lods
jle
pusha
sbb
mov
add
lds
cmp
pop
mov
pop
mov
inc
mov
daa
test
movsb
and
inc
add
mov
mov
imul
int3
cmp
je
or
je
gs
mov
fisubs
mov
dec
int
adc
or
lds
cmp
movsl
subl
lcall
insl
das
lcall
and
insl
sub
pushf
sub
and
adc
or
cmpsb
repnz
repz
bound
mov
outsw
les
repnz
pop
dec
and
inc
fsubl
les
adc
mov
sub
jne
dec
test
nop
sub
xor
cmp
fs
pop
movzwl
les
arpl
notb
sub
cmpl
xor
icebp
daa
sbb
dec
bound
pop
int
dec
jecxz
scas
push
pop
add
jge
ljmp
push
jecxz
outsl
mov
ss
imul
addl
xor
ja
mov
mov
mov
rcrb
mov
sub
jl
in
adc
mov
mov
mov
ja
mov
pop
mov
push
mov
jno
adc
movsb
into
mov
xor
dec
mov
shrb
sub
es
mov
adc
lret
into
jge,pt
mov
ret
fdivrs
out
adc
xchg
push
cs
pop
push
jno,pn
jle
push
mov
popa
push
leave
adc
add
call
mov
jnp
adc
mov
and
into
add
xchg
popf
call
or
movsb
sbb
jne
loop
lock
fwait
ljmp
out
sub
xchg
test
enter
and
adc
mov
popf
ficomps
mov
jae
adc
sar
pop
addr16
or
mov
xchg
sbb
ja
mov
lret
jns
int3
lahf
add
inc
mov
push
cmp
idivl
cli
sarb
xor
std
aam
mov
mov
cmp
jl
mov
jecxz
orb
fidivrs
xor
push
xchg
adc
xchg
loopne
jnp
cli
iret
jo
cmpsb
cltd
cli
fs
int
cmp
mov
mov
es
clc
lahf
lret
lret
sbb
mov
dec
dec
scas
cmp
xor
or
adc
mov
jne
loope
push
pop
sbb
insb
mov
mov
jnp
adc
dec
mov
test
pop
out
jb
sbb
cwtl
fstl
ret
sub
jne
jle
xchg
mov
cli
pop
jecxz
stos
notl
inc
std
sbb
adc
ret
add
into
sti
and
xlat
mov
mov
and
mov
cltd
mov
stos
test
jg
xor
orl
fidivrs
mov
test
adc
call
ret
stos
mov
mov
sbb
mov
pushf
std
sbb
sub
push
mov
jg
inc
sub
iret
lock
jbe
xlat
pop
out
and
out
xor
and
mov
cmp
dec
outsb
int
jbe
rclb
sbb
push
push
jae
add
repnz
outsl
pop
je
pop
push
shlb
xor
add
sahf
test
mov
and
gs
sbb
dec
xchg
add
rcl
mov
loopne
leave
test
adc
cwtl
jg
jb
or
dec
cltd
mov
sbb
neg
lahf
and
pop
jecxz
ljmp
lods
pop
or
sbb
xor
cmpl
or
inc
sarl
mov
adc
fiaddl
in
xor
push
jo
xor
jecxz
jl
das
or
xor
push
rcll
shll
in
in
push
imul
jnp
and
sub
stc
popa
shlb
sbb
popa
pop
inc
cmp
ss
inc
mov
jg
pop
stos
inc
push
sub
push
mov
mov
test
mov
je
jp
icebp
idivl
ja
les
jbe
pop
ss
movsb
call
jle
push
stos
insb
loop
xchg
push
loopne
dec
inc
adc
popa
mov
jmp
jmp
dec
sti
mov
xchg
adc
faddl
in
xchg
ret
mov
or
mov
stos
pop
sub
or
iret
pop
stos
fisubrs
and
fldcw
dec
cmp
push
pop
push
out
out
hlt
into
sti
inc
mov
incb
fnstsw
push
setle
xor
xor
xchg
mov
dec
or
mov
mov
pop
mov
or
add
in
lret
fists
loope
loope
outsb
loopne
lret
cwtl
fisubrs
out
into
jb
dec
inc
fistps
imul
mov
pop
adc
inc
dec
xchg
fwait
add
inc
cs
out
adc
test
push
cltd
mov
movsb
andl
orl
sub
imul
lds
lods
sbb
fsubl
leave
imul
jb
je
jl
xor
fs
cltd
aaa
mov
test
mov
dec
daa
push
test
xchg
sub
xchg
fdivs
std
imul
pusha
and
mov
rolb
jbe
and
xchg
dec
dec
dec
aam
sbb
mov
insl
test
ret
pop
and
lret
pop
in
sub
add
push
fisubl
ds
adc
repnz
sbb
repz
or
mov
fistl
jo
fnstsw
adc
iret
enter
jg
inc
mov
bnd
into
push
cmp
add
lcall
mov
mov
mov
mov
mov
imul
fmul
daa
iret
and
jl
and
push
out
aad
incl
push
or
loop
or
cwtl
jb
cld
push
mov
decl
ds
stos
in
inc
out
xor
repnz
ljmp
jno
jmp
stos
or
add
lods
pop
add
pop
popa
mov
insb
fstpl
xor
insb
jo
stc
insb
or
cld
pop
pop
push
mov
xor
rclb
xor
fdiv
loope
cs
mov
rorl
nop
fwait
das
int3
mov
mov
sbb
lcall
mov
in
fstpt
sbb
into
jge
test
lods
jp
inc
jns
data16
sbb
lea
adc
inc
sbb
lock
imul
aas
movb
imul
mov
lret
ss
movsb
add
sub
mov
scas
or
or
sbb
sahf
pmuludq
cld
comiss
call
ja
scas
mov
inc
mov
push
cmp
stos
into
out
push
jl
icebp
xlat
imul
adc
xchg
ja
dec
into
xchg
adc
out
ljmp
jns
pop
insl
mov
cmpl
xchg
and
repnz
testl
test
xchg
out
xchg
and
ss
mov
jae
ret
js
inc
and
push
enter
lds
mov
lds
fcmove
xchg
push
sbb
rcl
jge
pop
or
dec
cmp
or
mov
mov
mov
xor
push
ffreep
inc
int3
stos
out
inc
inc
push
adc
mov
sahf
sub
movsl
jp
das
lahf
inc
cltd
lret
jae
std
repz
pusha
pop
push
xor
pop
cs
rorb
repnz
jmp
call
sbb
stos
sub
jl
test
out
hlt
idivb
hlt
mov
mov
movsb
ljmp
and
pushf
test
subl
out
sub
push
out
out
sub
loop
shrb
cmp
lds
cld
or
dec
sbb
movsl
fisubrl
or
stos
mov
jle
rorb
pop
sbb
mov
lock
mov
pop
loope
in
pop
or
aaa
loop
addl
nop
inc
orl
dec
mov
hlt
jmp
jno
xchg
pop
push
xor
insb
mov
mov
std
mov
and
lret
arpl
dec
shll
or
fidivrl
and
adc
sub
dec
push
pop
push
or
add
jge
repz
addb
aam
pop
das
jecxz
jns
mov
mov
sub
adc
adc
push
adc
stos
test
xor
cld
xchg
sbb
jp
rorb
mov
loop
lret
cmp
rorb
fcmovnbe
shrl
shrb
and
in
mov
xchg
jb
jl
lods
out
pop
or
inc
fbld
xchg
ja
push
inc
pcmpgtb
add
jnp
dec
add
pop
popa
cwtl
or
mov
sti
dec
test
ret
int3
in
cltd
add
js
inc
clc
cltd
lds
arpl
lods
inc
movsb
fisttpll
push
inc
lahf
jp
repz
out
cmp
repnz
sub
fcmovnu
rol
out
pushf
sub
insl
repz
popf
data16
fnstenv
xchg
inc
mov
dec
ret
pop
dec
push
add
popf
mov
jg
dec
out
jns
out
enter
jmp
sub
lcall
jns
pushf
je
mov
fadds
pop
shl
cmp
xchg
sub
push
in
adc
jge
jecxz
push
pop
dec
pop
xor
add
ljmp
out
xchg
adc
repnz
shll
push
jl
push
nop
icebp
pop
add
dec
ljmp
xchg
test
cmp
mov
push
xchg
clc
rcrb
mov
jge
pusha
dec
pop
aam
inc
pusha
jo
and
mov
dec
std
mov
inc
inc
push
fs
push
sub
cmp
inc
sti
pop
mov
das
jo
cwtl
or
xchg
std
lret
mov
lea
cmp
leave
jmp
xor
mov
jb
cmp
rcrb
outsb
pop
in
mov
in
iret
notl
lahf
out
test
sub
movsl
sub
fstpt
pop
mov
mov
pusha
jns
fdivrs
cmp
and
sbb
iret
loope
dec
imul
sbb
add
cmp
mov
lods
pop
stos
enter
loopne
shrl
gs
ficompl
mov
cmpsb
aam
ss
push
inc
mov
in
addr16
push
inc
lret
stos
xchg
popa
lcall
out
sbb
jo
mov
adc
daa
jb
movsl
pop
jp
pop
lods
shll
or
stos
and
sbb
int3
scas
fsubrl
sbbb
push
nop
cltd
dec
out
and
inc
lods
cmp
pusha
arpl
testb
je
and
fimull
lock
cwtl
mov
xchg
fmulp
fists
and
testb
popa
sub
cmp
fsubl
dec
das
aas
hlt
jno
out
lea
cmc
adc
mov
sbb
mov
dec
in
sub
stos
imul
push
xor
or
push
in
push
adc
shrb
sub
int3
pop
xchg
sub
imull
gs
and
test
outsb
test
and
popa
sbb
enter
inc
mov
add
shll
adc
sbb
xor
adc
dec
push
mov
into
xlat
bound
add
mov
push
adc
pop
cmp
sbb
loopne
repnz
sbb
mov
pop
mov
xchg
call
fs
rclb
sti
ret
test
cmp
test
rorl
pop
int
mov
or
lods
and
mov
push
cltd
pop
or
mov
push
mov
mov
leave
lock
repz
push
xchg
sbb
dec
dec
lcall
jecxz
sbb
xchg
xor
dec
inc
mov
lea
pushl
inc
cld
enter
sbb
fists
int
push
js
cld
mov
sbb
movsb
scas
movsl
fistpll
shlb
mov
inc
push
mov
sub
test
mov
mov
mov
sub
scas
scas
jle
outsb
lret
sbb
leave
cli
insl
lret
fsubrs
inc
js
lcall
notl
in
out
inc
push
and
mov
outsl
cmp
std
shr
pushf
or
jle
jecxz
clc
das
repnz
xchg
fmulp
lock
xchg
dec
mov
leave
sti
or
nop
pop
and
mov
lret
test
sub
or
mov
jne
mov
daa
dec
push
add
or
popf
das
sbb
icebp
xchg
jl
and
lods
imul
inc
push
outsl
cmp
andb
ret
lahf
insl
push
mov
pop
add
lods
xor
mov
adc
cmp
addb
ja
std
adc
pop
in
inc
inc
pop
sbb
xor
dec
jp
cmpsl
mov
hlt
repnz
push
cld
mov
jae
les
cmp
mov
rcll
inc
sarl
pop
mov
jae
mov
into
je
popa
dec
or
push
mov
xor
loopne
add
fistpll
movsl
mov
ficompl
je
and
sbb
clc
into
push
in
addr16
add
rcrl
or
out
add
add
fsubl
gs
out
cmpsl
bound
bound
ret
gs
mov
outsb
insb
mulb
fidivl
test
push
pushf
in
test
adc
dec
xor
mov
push
pop
sub
mov
sub
mov
and
jo
push
or
cmp
int3
jo
sub
mov
dec
rclb
lods
and
iret
add
repz
lret
xor
dec
movsw
les
arpl
cmp
ljmp
mov
pop
inc
xlat
and
insb
int
xchg
xor
cld
es
adc
mov
into
cmp
jl
mov
dec
sbb
ja
lret
insl
sbb
and
jl
gs
xchg
xor
xchg
inc
negb
pop
das
adc
pop
push
mov
cmpsl
ret
ficoms
fprem1
stc
xchg
sbb
sub
pop
xor
fists
mov
cmp
js
stos
leave
dec
mov
or
jo
insl
mov
sbb
int
enter
push
sbb
das
pop
ss
ficompl
xchg
push
mov
test
out
out
dec
xor
add
test
xor
adc
mov
xchg
adc
out
xchg
sbb
dec
mull
add
arpl
fdiv
push
outsb
aas
inc
loopne
xchg
sbb
pop
stos
jbe
out
pop
cmp
rcrl
rcl
jle
inc
clc
xor
lret
test
in
mov
addr16
sub
mov
cmp
push
decl
out
mov
popf
push
mov
jno
xor
dec
or
lret
dec
shrl
sbb
mov
push
mov
and
xchg
shrb
push
inc
into
mov
mov
sub
cmp
jno
and
mov
xchg
mov
pop
lahf
jg
sbb
inc
cmpsl
push
repz
pop
push
sbb
out
test
and
push
fisubl
mov
push
les
insl
add
sbb
mov
pop
jmp
add
add
loope
pop
dec
lods
lret
inc
cmp
in
insb
pop
inc
lret
in
jge
lods
aas
pop
pop
out
rcrl
lret
idivb
stos
rcrl
out
dec
loopne
stc
clc
daa
fs
daa
out
les
jl
cltd
mov
cltd
mov
ficoms
push
mov
dec
push
cwtl
dec
lock
ja
and
adc
mov
xor
pop
jb
call
imul
jno
push
pop
dec
imulb
subb
xchg
mov
ret
add
and
adc
outsb
mov
fisubl
pushf
popa
aad
jb
cmp
subb
cmc
popa
leave
jmp
cmp
inc
or
repz
jecxz
cli
out
push
stc
cmp
fsubrp
sbb
lock
push
jg
in
shll
fs
jg
push
stc
dec
loope
call
lcall
jg
es
fs
sub
mov
xchg
pop
addl
outsl
cmp
push
rol
outsb
cli
push
xlat
cli
out
push
cltd
cmpsb
inc
sbb
dec
cmp
cmpsb
fcomip
addb
mov
and
ds
xchg
xchg
aaa
jbe
rorl
test
inc
icebp
xchg
pushf
fdivs
mov
sbb
jbe
sub
bound
inc
inc
cmp
notb
addr16
mov
pop
and
sub
adc
addr16
cld
push
in
or
fidivrs
enter
or
sbb
nop
xor
push
outsb
pop
push
into
sub
repz
sti
pusha
add
pop
push
out
jge
lock
in
or
xor
add
and
sti
enter
sbb
cld
ficoms
nop
mov
enter
jle
rorb
dec
jmp
dec
fisttps
xchg
ss
or
fsubrs
mov
cmp
pop
or
adc
data16
nop
out
repz
into
inc
fstl
xchg
push
mov
add
xchg
das
fwait
stc
rol
std
cmp
lret
arpl
lret
pop
cld
mov
xlat
inc
dec
add
clc
lock
dec
ret
call
popa
cli
sub
mov
mov
push
pop
sub
xor
andb
orb
insb
out
inc
push
jnp
jnp
pusha
jb
lret
std
mov
adc
cmp
jg
push
mov
test
sbb
pop
sti
cmp
lea
inc
xchg
mov
push
outsl
mov
jmp
inc
mov
cmpsb
or
dec
retw
incb
xlat
adc
sti
cmc
sub
popa
int3
inc
jl
aam
out
fidivl
push
lods
add
stos
and
mov
shl
roll
out
lds
in
sub
mov
pop
inc
lret
lret
add
push
xor
in
sub
not
fildll
das
adc
mov
daa
cmp
sbb
mov
pop
pop
xor
les
mov
movsb
cli
dec
mov
jnp
dec
call
sbb
lret
jae
xchg
jge
sub
lods
xor
ljmp
sahf
pushf
or
mov
jp
inc
jg
stos
fildll
jg
out
mov
neg
mov
add
sub
or
outsl
xchg
mov
or
add
sbb
sub
jmp
rep
outsl
mulb
push
mov
out
fwait
cmp
dec
lcall
cmp
pop
xor
nop
scas
dec
pop
or
jmp
dec
sub
int
and
sub
cmp
scas
sti
sbb
lea
mov
ficomps
cld
into
push
mov
rclb
mov
subb
fwait
sahf
imul
nopl
xor
dec
imul
lret
pop
incl
sarb
xchg
cmp
rol
fdivrs
fmull
lret
test
aas
and
fisubrl
loop
int3
jno
inc
jmp
dec
lcall
jge
clc
je
enter
pop
sbb
jp
cmp
jg
lahf
dec
add
or
mov
nop
xchg
dec
lods
inc
adcl
push
insb
pop
lret
pop
mov
arpl
shl
mov
push
popa
aam
ret
mov
bound
imul
mov
push
les
mull
js
loopne
jecxz
aad
out
jmp
iret
add
sub
in
shrl
jo
cmp
push
mov
negl
push
mov
mov
mov
in
push
imul
fucomip
out
pushl
sbb
mov
xchg
pop
dec
mov
push
mov
lret
xchg
jl
pop
xor
inc
pushf
add
xor
mov
fwait
cwtl
sub
mov
adc
push
ds
ds
cltd
sbb
inc
enter
ljmp
les
jge
loope
mov
mov
mov
es
push
pop
aam
xor
leave
or
xchg
or
sub
mov
in
sbb
mov
in
sbb
pop
cmp
cld
mov
lret
mov
push
inc
xor
jnp
jbe,pt
jl
sti
lahf
pop
push
mov
sub
out
jo
mov
int3
mov
popf
mulb
cmp
je
sub
mov
mov
and
mov
gs
lret
dec
jne
mov
jecxz
pop
mov
lock
xchg
jb
gs
inc
movsb
les
mov
cmpsl
inc
push
sub
mov
jbe
adc
lods
mov
andnps
pop
xor
pop
test
les
repz
and
int
dec
jecxz
loope
pop
movsb
insb
js
loop
pop
and
aam
mov
insb
xchg
idivb
lret
inc
mov
hlt
fisttpl
stos
jg
mov
jle
sti
cltd
in
pusha
mov
insb
xor
push
cmp
test
add
ds
xor
pop
pop
jnp
std
inc
mov
mov
inc
mov
push
xor
pop
nopl
jge
lahf
loopne
outsb
cmc
dec
push
fdivl
ja
inc
inc
push
lea
push
push
push
aad
fsubp
ljmp
mov
daa
roll
jle
jb
lret
xchg
ret
pop
xchg
pop
jne
test
push
loopne
test
push
int
jg
pop
lret
mov
and
fwait
sbb
and
sbb
roll
fstp
flds
loopne
aas
cmp
sub
insl
and
jo
xor
sub
cmp
jno
ljmp
ss
cmpsb
inc
arpl
adc
flds
mov
cli
lods
fdiv
imul
ss
mov
add
or
sbbb
pop
lret
mov
mov
mov
fbld
movsb
lahf
mov
sbb
setl
outsl
cmpsb
fcmovb
adc
rol
pop
adc
fistpl
lahf
jne
mov
jl
fsubs
jae
pushl
decb
push
icebp
sti
scas
push
aaa
insl
aad
cs
cli
sub
sub
hlt
add
fwait
dec
pop
incb
jp
cmpsb
daa
mov
push
call
jb
or
cmp
mov
mov
cmpsl
mov
fwait
inc
or
sarl
push
add
stos
aam
mov
xchg
cs
mov
stos
lds
cltd
dec
jns
or
add
insb
shlb
ficompl
sbb
dec
lcall
shl
lret
mov
daa
jnp
jne
js
push
jle
inc
xor
out
shll
xchg
jo
xor
xchg
and
scas
ret
xor
jp
jne
mull
rep
jle
jecxz
mov
push
inc
pop
fcomip
loopne
mov
mov
les
lret
jg
lahf
sub
xchg
int3
repz
pop
lret
mov
rcll
adcb
fbstp
pop
fstl
jne
loopne
std
out
push
cmp
sbb
out
int
popf
dec
push
push
inc
fwait
jge
icebp
loope
fsub
movsb
jns
jmp
inc
fldl
pop
outsl
jmp
cmp
out
lea
loop
test
inc
fldt
orpd
fstpt
stc
adc
or
scas
mov
in
stos
or
mov
adc
testb
add
jp
inc
jecxz
inc
mov
mov
popa
shlb
sub
mov
pop
mov
imul
jl
mov
adc
mov
adc
leave
popf
pusha
loopne
enter
sarl
cmp
pop
mov
jns
mov
push
jb
sub
cmc
ljmp
mov
je
test
out
pop
jl
test
filds
sbb
test
jb
fdivl
pop
daa
repnz
loopne
gs
and
add
fstpl
or
mov
loop
push
cltd
xchg
fstl
cmp
xchg
aaa
cmp
and
push
add
jg
or
icebp
cmp
ds
xchg
xor
mov
sarb
xlat
out
adc
rorb
aaa
ret
in
cmpsb
jmp
je
add
in
dec
std
mov
leave
fst
pop
repz
ljmp
aaa
outsb
mov
stos
mov
pop
dec
xchg
js
mov
push
dec
jns
and
xor
adc
push
sti
sub
dec
out
cmpsb
mov
popa
xchg
aaa
into
incb
das
sti
in
xlat
jge
adc
xor
mov
inc
ret
sbb
add
subl
call
cmp
cmp
xchg
xchg
add
sarl
or
dec
inc
je
pop
in
mov
xor
test
out
fsubr
push
nop
sbb
jp
insl
lahf
xchg
aas
sti
cmp
rcrb
icebp
inc
pop
jne
imul
inc
stc
and
imul
or
mov
mov
imul
lods
adc
std
icebp
fdivrs
icebp
inc
push
clc
push
sub
sub
adc
fmull
cmpsl
xlat
pop
xor
cwtl
cld
sbb
out
stos
pop
add
out
dec
pop
bound
add
out
fisttps
xor
and
imul
gs
daa
test
cmp
test
xor
cmp
addr16
imul
gs
mov
push
addr16
mov
adcb
sbb
sahf
das
xchg
jmp
aad
test
xchg
xor
lret
je
pop
xchg
into
xor
push
sbb
inc
inc
pop
mov
sbb
bnd
push
setle
js
nop
gs
mov
cmp
mov
stos
leave
pop
mov
jmp
jge
daa
icebp
rolb
xlat
divl
sbb
imul
shl
fstpl
into
mov
mov
jle
dec
push
ret
add
hlt
imul
xchg
mov
aas
push
out
fidivl
aaa
mov
mov
fs
js
pop
jl
jae
xchg
xor
dec
testb
and
aaa
icebp
mov
and
insb
inc
mov
repnz
icebp
and
mov
in
addr16
clc
jnp
dec
dec
pop
pushf
xorb
jnp
les
jb
outsb
mov
xchg
scas
push
pusha
mov
xor
aad
mov
xchg
aad
das
add
out
xchg
cmp
push
divb
int3
dec
mov
xor
test
mov
cmp
mov
leave
arpl
mov
xchg
scas
pop
test
sbb
jecxz
loopne
loop
sbb
xchg
popa
cltd
or
scas
mov
add
test
cmp
into
push
jecxz
push
cmp
imul
loope
popa
xor
inc
fcompl
pop
adc
push
fmul
mov
cld
or
mov
jbe
mov
les
cmpsl
jle
xchg
xchg
xor
pop
lret
pusha
pushf
push
mov
jo
or
jl
pushf
test
mov
push
fsubs
dec
jnp
call
xchg
insb
in
cmpsl
add
pusha
xor
mov
inc
pop
cwtl
sarl
ror
mov
xchg
in
push
orl
pop
jno
inc
call
push
cmp
mov
mov
std
cmp
jnp
insb
add
aam
and
adc
lcall
cmpsb
xchg
daa
negb
inc
dec
mov
xor
popa
frstor
clc
inc
mov
lods
sbb
sbb
push
test
cmp
sub
movsl
insl
xchg
adc
scas
jne
scas
sbb
fidivl
pop
xchg
sbb
jmp
mov
adc
dec
mov
adc
lcall
imul
jb
cmp
test
mov
jecxz
shl
jns
jecxz
bound
vpackuswb
mov
fildll
pusha
jns
test
shlb
mov
es
dec
loope
lock
ss
pop
jle
push
mov
adcl
dec
les
or
jno
xchg
xor
loope
cld
jns
and
push
cmp
xchg
mov
inc
and
cmpsl
jmp
ret
sahf
call
sbb
imul
mov
mov
xchg
jg
rclb
xchg
mov
lock
cmp
cmp
pushf
lret
aas
inc
push
inc
push
mov
jle
loope
dec
add
imul
xchg
fnstcw
add
in
mov
hlt
jp
jp
in
test
xor
aas
adc
jmp
jns
sub
jle
sub
test
loopne
push
xor
js
outsb
aad
mov
pop
add
push
movsl
add
xchg
or
mov
adc
hlt
push
sti
loopne
pop
add
add
dec
aaa
call
push
push
add
xor
es
dec
in
adc
mov
in
inc
jge
add
into
or
fs
jno
sub
xchg
out
jp
cmp
push
mov
addr16
out
aad
pop
cmc
leave
fst
icebp
mov
fldenv
sbb
lods
in
mov
mov
adcl
insl
out
mov
sub
and
pop
mov
cld
stos
addr16
dec
or
testl
popa
fisttpl
enter
sbb
and
push
into
sub
iret
sub
pop
dec
fisubl
xor
xor
aad
mov
push
shrb
cmpsl
cmp
lods
shr
in
add
cmp
ficompl
imul
mov
mov
lds
push
pop
aas
imul
mov
daa
arpl
outsb
jge
fadd
sub
sub
xor
pop
hlt
roll
pop
sub
lods
stos
push
push
andb
ficoms
jl
push
sbb
xor
jmp
inc
adc
jp
repz
sub
push
leave
cmp
xchg
or
cmpb
jge,pt
popf
mov
leave
loop
insl
inc
xchg
test
sbb
jp
jno
xchg
xor
aam
pop
xchg
xchg
std
xchg
pop
fscale
pop
call
and
addb
fsubr
jb
mov
cmpsl
scas
lcall
sub
lahf
sub
mov
outsl
gs
fcoms
addr16
nop
call
pop
cmp
xchg
pop
or
adc
pop
or
jge
mov
test
push
scas
adc
mov
cmp
xchg
push
xlat
outsb
bound
int3
push
lods
xlat
push
mov
jb
lret
loope
js
xor
cmp
int
lcall
data16
clc
popf
out
xlat
inc
jecxz
outsb
iret
cltd
mov
pushf
in
dec
add
aam
shll
popa
mov
dec
repz
lret
jnp
dec
loop
clc
adc
nopl
pop
xlat
push
mov
aaa
loopne
cltd
dec
mov
cmc
or
test
jno
shrl
adc
mov
xlat
pop
dec
cmp
sbb
mov
add
out
test
xchg
iret
pop
mov
inc
mov
fadds
lock
sbb
cmp
pop
sbb
cmpsl
jg
roll
inc
lahf
and
faddp
sbbb
outsl
bound
sbb
icebp
cli
loopne
rcrb
cmp
popf
pinsrw
insl
xchg
dec
mov
or
mov
and
mov
sub
ficomps
jb
dec
mov
and
adc
test
mov
cmpsb
push
cmp
aaa
sbb
sbb
jp
push
sbb
out
jmp
pusha
add
push
out
ret
bound
push
dec
xchg
das
jecxz
mov
dec
insb
sbb
fnstenv
adc
inc
clc
sbbl
inc
aas
out
daa
push
es
jge
sub
cld
or
mov
enter
jl
ds
add
adc
repnz
in
inc
loope
test
xor
rcll
jp
cld
push
rcl
ficoms
inc
bound
or
mov
int
sbb
stos
dec
add
push
xchg
aaa
adc
cmpsb
pop
outsb
mov
rclb
and
jns
dec
xor
mov
mov
add
mov
adc
mov
into
ret
pushf
add
inc
stos
adc
cmp
pop
lret
ds
jnp
lahf
xchg
sub
scas
aam
cmp
jnp
cli
xor
outsb
push
enter
sub
popf
in
mov
in
sub
push
mov
repnz
cmp
test
fisttpll
dec
push
fwait
lahf
mov
dec
int3
bswap
xorb
mov
pop
fwait
and
add
dec
inc
outsl
dec
mov
mov
aad
jo
adc
ja
sub
lea
imul
push
ljmp
cmpsl
rol
test
loope
push
fisubrs
bound
jb
mov
and
xchg
cli
int
lahf
mov
gs
in
inc
jnp,pn
sti
sbb
lret
mov
insl
fdivrl
aas
enter
hlt
inc
xor
mov
adc
mov
cli
stos
and
jl
xchg
lds
outsl
xlat
nop
ror
fisubl
xchg
sub
inc
jno
sub
subl
pop
xchg
xchg
xor
ret
adc
mov
fcmovu
cmp
notl
iret
rcrl
pushf
outsl
call
outsl
cmpsl
mov
rcr
cmovns
loope
and
and
aam
pop
sbb
inc
cs
out
inc
pop
sub
push
or
adc
clc
xor
mov
into
cmpsb
sub
ret
and
out
enter
mov
repz
imul
or
imul
aad
mov
subb
jns
lock
loop
ret
xor
rorb
mov
rclb
frstor
mov
xor
pop
xchg
mov
ret
enter
loope
cmp
movsb
inc
aam
fimull
mov
das
push
inc
jo
jg
ja
sbb
push
popa
cmpsl
or
sub
mov
mov
and
dec
dec
push
mov
ljmp
sti
adc
inc
mov
stos
dec
loopne
rolb
mov
js
pop
fidivs
out
lret
pop
int
sub
scas
xchg
gs
nop
repz
adc
xor
outsb
jg
lods
jns
ds
out
dec
pop
xchg
cs
jns
test
adc
pushf
inc
mov
xchg
lcall
stos
xchg
insb
pop
cmp
lods
add
xor
mov
dec
fisttpl
mov
jg
jecxz
sti
cltd
shlb
cwtl
xor
xor
dec
fildl
pop
adc
aad
dec
dec
iret
in
pushf
push
inc
pop
decl
pop
clc
push
jp
dec
sbb
faddl
fnstenv
adc
popa
xchg
out
scas
mov
cltd
xor
mov
mul
and
sub
stos
mov
cmp
xor
fcompl
test
popf
punpcklbw
idivl
push
push
lret
hlt
lods
adcb
pop
adc
add
inc
sahf
add
out
ret
mov
jle
test
loop
ret
and
loopne
adc
and
testb
les
fistps
push
fstl
inc
push
pop
cmpsl
icebp
scas
stc
fsubl
lods
and
xor
call
insb
jbe
js
adc
inc
mov
jecxz
fwait
inc
fnsave
andl
push
leave
adc
addr16
test
pop
mov
lods
shrb
adc
push
js
sub
adc
dec
pop
bndldx
and
mov
sub
mov
and
mov
pop
roll
or
pop
stos
jo
pop
popf
cmp
mov
gs
loope
in
mov
adc
test
sarl
iret
and
cs
add
cmpb
mov
mov
push
mov
call
sub
xchg
int3
cmp
lock
ficoms
repz
inc
loop
call
fadds
pop
cmp
addb
das
mov
sbb
fwait
mov
pop
cmp
arpl
mov
fwait
pop
inc
aaa
jge
addr16
jg
dec
dec
mov
cmp
ljmp
inc
and
aas
repnz
pop
sub
loopne
std
inc
push
pop
and
in
push
and
dec
cmp
cld
jbe
inc
sbb
stos
in
enter
fcmovne
jns
sbb
cli
call
cmpsb
add
cmpl
mov
lret
mov
mov
mov
push
pop
cs
addr16
dec
popaw
pop
loop
adc
jmp
aam
mov
xchg
mov
fcomps
jecxz
xchg
sbb
jb
fidivs
cld
aam
aam
jne
mov
dec
cmpsl
and
call
test
xchg
xor
fsts
ret
jne
imul
cwtl
push
cmp
xor
cmpsb
out
dec
add
push
ret
addr16
test
arpl
shr
and
or
pop
mov
or
or
outsl
in
and
add
pop
xor
inc
or
dec
lcall
fwait
in
cmp
es
cs
xor
lahf
xchg
xchg
sti
cs
push
adc
ss
cmpsb
popf
push
stos
mov
xor
into
xor
mov
sub
dec
adc
aaa
mov
filds
sbb
push
cwtl
mov
scas
mov
shl
inc
lcall
inc
fisttpl
sub
or
repnz
adc
mov
cmp
js
mov
inc
test
pop
mov
stc
in
xchg
dec
out
dec
xor
inc
or
call
rcrl
lret
xchg
mov
inc
mov
jecxz
xchg
aam
mov
je
inc
fdivl
dec
xchg
icebp
popa
add
or
add
dec
adc
maskmovq
negl
and
sarl
test
sti
push
je
jo
or
aaa
sub
loop
jo
repnz
or
in
sub
add
imul
not
movsb
out
jg
lea
sub
pop
inc
pop
sub
stos
movb
xor
cmpsl
enter
int3
insl
mov
stos
je
inc
adc
push
lods
jmp
into
mov
mov
in
lahf
push
mov
roll
out
add
push
in
inc
or
mov
in
addb
xor
fistpl
das
adc
std
mov
mov
int3
mov
adc
out
jmp
lds
popl
push
pop
mov
adc
decb
mov
sbb
pop
aas
inc
into
dec
push
inc
test
push
pop
aam
push
js
mov
adc
je
dec
mov
jg
jo
lock
lcall
mov
dec
jnp
mov
mov
cmc
dec
xlat
sbb
pop
push
ljmp
cmp
xchg
leave
data16
scas
cmp
or
sbb
decl
test
xor
mov
xchg
cmp
mov
jg
inc
cmp
imul
pop
mov
enter
dec
mov
adc
repnz
cmp
push
inc
add
mov
mov
cld
push
loop
pop
and
push
jg
out
xchg
js
mov
jnp
add
add
cmc
inc
push
adc
imul
xor
scas
pop
inc
sbb
lret
popa
jmp
xlat
xor
sbb
push
outsl
mov
fs
lret
insl
cli
adc
sub
push
das
call
push
jecxz
adc
jo
andb
iret
fucomp
roll
mov
inc
mov
sub
shrl
adc
fs
movsl
pop
inc
mov
pop
sub
test
cld
mov
dec
add
jae
adc
subl
jp
mov
inc
jns
repnz
insl
add
jb
or
dec
push
fcomps
inc
fnstenv
cs
gs
call
fsubrs
xor
cmp
sbb
es
inc
imul
dec
outsb
inc
dec
mov
scas
lahf
in
aad
aam
cli
cmp
push
jbe
test
mov
pop
test
sahf
sub
adc
and
mov
xchg
mov
mov
cs
iret
adc
push
mov
dec
hlt
popa
mov
hlt
cmp
jno
push
inc
popf
test
ret
mov
cmpb
fnstsw
or
cwtl
mov
rorb
add
adc
outsl
push
mov
imul
imul
push
sahf
xchg
jnp
xchg
aaa
add
popf
xchg
sti
sub
xor
pop
mov
cwtl
inc
mov
push
stos
sub
xchg
dec
inc
xlat
sbb
lea
mov
and
lret
std
and
cmp
sbb
inc
outsl
sarl
out
outsl
xor
sub
mov
jle
cmp
pop
cld
push
sub
jo
in
adc
cltd
push
mov
shrl
stc
jp
outsl
dec
mov
mov
and
pop
push
mov
callw
in
sbb
sbb
icebp
fidivrl
sbb
push
aad
lea
jno
pop
into
int
cmp
dec
dec
repnz
push
lods
pop
in
mov
cltd
imul
lret
sbb
push
jno
xor
mov
jmp
in
dec
inc
shll
aam
pop
psrad
fcomip
pop
pop
jns
ja
inc
fcmovu
int3
ret
pop
pop
xor
jp
xor
dec
jl
fidivrl
jmp
shll
pop
push
outsl
out
jle
mov
mov
pop
mov
xchg
and
jle
popf
pop
mov
push
sub
adc
jne
sub
lcall
cmp
sbb
ret
out
xchg
add
movsl
jle
inc
mov
sbb
pop
sbb
ja
in
pop
push
js
xchg
sbb
leave
mov
pop
push
pop
inc
iret
aaa
outsb
repnz
iret
pushf
mov
sahf
xchg
test
dec
xor
mov
pop
shll
orl
dec
lcall
adc
adc
shlb
arpl
daa
adc
add
int
cwtl
sub
mov
mov
fdivrs
in
insl
scas
sub
pushf
movsl
popa
jge
mov
daa
inc
push
out
loop
pop
shrb
test
add
das
scas
packuswb
out
push
fdivl
sub
fsubs
fadds
cwtl
add
lret
cmpsb
hlt
out
xchg
in
or
jne
mov
in
adc
div
dec
mov
outsb
icebp
aas
push
sbb
fwait
and
popf
pop
or
nop
xlat
and
mov
mov
dec
aaa
std
rcpps
inc
lods
dec
cmc
frstor
rep
mov
dec
jecxz
lods
and
xchg
aam
lds
mov
movsb
xchg
dec
in
fldl
repnz
and
rcll
leave
xor
repnz
pusha
inc
sbb
pop
sub
or
cmp
cwtl
cmp
insl
xchg
and
shrl
mov
leave
push
stc
lods
add
sub
pop
in
xchg
pop
pushf
push
cmp
mov
dec
pop
test
das
inc
out
in
inc
xor
dec
lods
daa
push
mov
outsl
cmp
and
mov
or
or
rorl
xor
mov
sub
shlb
mov
sbb
adc
sbb
pop
xchg
stc
cmp
dec
lods
push
push
pusha
dec
scas
pop
pop
fcmovb
mov
xlat
mov
aam
mov
xor
and
aad
mov
and
jl
xchg
in
add
push
sbb
inc
cmp
or
mov
xchg
dec
push
stc
and
cmp
push
out
sbb
adc
jb
push
shl
fs
lods
sub
mov
add
mov
sbb
jb
jl
xor
xor
push
adc
cmpsb
insl
pop
push
and
sbb
imul
mov
outsl
mov
loope
push
scas
mov
mov
gs
lods
push
mov
mov
mov
dec
repnz
and
mov
mov
inc
fwait
add
mov
mov
pushl
iret
or
data16
call
sbb
imul
fiaddl
jp
add
mov
les
scas
or
fwait
daa
mov
out
mov
sub
mull
push
mov
cmp
int3
jp
mov
movsb
sub
push
lods
mov
sub
mov
mov
das
rolb
aam
clc
popa
push
and
iret
push
add
pop
loop
or
std
xor
vpsubw
push
push
stos
out
cmp
sti
mov
imul
pusha
sbb
push
jl
inc
shl
or
inc
mov
and
inc
in
pop
sbb
push
and
fs
xor
je
out
sub
mov
leave
dec
cmp
inc
lcall
sub
push
pop
fcomi
dec
push
push
add
lds
pop
int3
shll
or
dec
test
xchg
push
pop
mov
pop
ficoml
cmp
sahf
nop
enter
mov
leave
fxam
xorb
lret
sarb
xchg
scas
es
aaa
or
xchg
in
mov
loop
dec
mov
mov
dec
out
mov
cmp
test
jle
out
pop
jle
fwait
mov
mov
jl
dec
cmp
push
adc
mov
in
mov
mov
mov
stc
dec
xchg
and
cmp
gs
mov
mov
dec
sbb
pop
addr16
cmpsl
arpl
jl
loope
or
pop
sub
mov
add
idivl
dec
cmc
out
push
mov
inc
and
lods
cmp
xor
pop
fldenv
add
test
lahf
push
andl
jmp
test
xor
push
push
mov
bound
nop
das
ret
xchg
or
jecxz
inc
test
and
push
xchg
jo
lcall
push
scas
cmp
mov
dec
adc
test
fsub
cltd
push
adc
cli
jno
fimuls
and
fcmovnb
rolb
scas
addr16
lock
adc
add
dec
loope
mov
xlat
dec
push
pop
mov
xchg
fstpl
jl,pn
data16
in
xchg
push
addr16
cmp
inc
lret
movsb
jo
inc
lea
out
loop
shlb
daa
stc
mov
jae
mov
daa
pushf
xchg
arpl
xlat
repz
jo
sarb
push
mov
xchg
lds
stc
xor
mov
sub
lahf
mov
push
jg
hlt
xchg
mov
jecxz
popf
inc
leave
aam
das
xchg
int
std
xor
mov
nop
insl
add
test
test
cli
push
dec
inc
fstpt
aam
cs
dec
mov
popf
inc
imul
pusha
inc
sub
push
int3
adc
dec
jb
jle
add
lret
nop
inc
jns
and
data16
dec
imul
outsl
mov
or
or
adc
sub
je
mov
std
jp
or
mov
outsb
push
je
push
fnstsw
adc
xchg
cmovo
dec
stos
jo
cmp
fistpl
shrl
and
sbb
addr16
or
mov
cmp
cmpsl
test
insl
mov
or
imul
bound
inc
add
sbb
sub
jge
clc
orb
pop
cli
in
loopne
insb
jnp
adc
cs
add
xor
stos
jno
pushf
cmp
adc
xchg
aad
xlat
fnstsw
into
sub
sahf
dec
add
repnz
jne
imul
in
call
cltd
add
stos
mov
mov
mov
popf
rclb
inc
aad
orb
addr16
mov
or
std
push
into
or
push
mov
orb
mov
add
xchg
dec
cltd
xchg
sahf
mov
push
imul
sbb
ret
aaa
mov
jge
rcll
ss
mov
dec
inc
pop
neg
inc
insb
jo
mov
aam
and
insb
ja
xchg
or
push
or
mov
and
in
push
gs
cli
cwtl
fmul
ja
cltd
push
mov
stc
cltd
lods
jae
cmc
adc
jns
jl
lods
sub
jle
test
pushf
push
inc
mov
jbe
push
in
mov
outsl
push
xor
call
inc
repnz
orl
popa
cmpsl
testl
jnp
pop
loope
daa
mov
or
mov
shlb
inc
adcl
int
pop
jp
imul
sub
ja
mov
inc
sti
cmpl
add
rolb
xchg
mov
daa
cmp
inc
scas
pop
pop
lods
jne
addr16
add
pop
sbb
push
or
or
stc
popa
outsl
ljmp
sub
and
adc
es
mov
pop
sbb
mov
mov
jae
sub
and
push
or
mov
cmp
dec
stos
cli
xchg
push
jl
dec
test
mov
inc
sub
in
stc
int
push
mov
cmpsb
jge
repnz
gs
adc
pop
pop
cmp
inc
or
xchg
pop
aam
sub
add
fldcw
gs
dec
xor
push
add
sbbl
or
stos
mov
scas
jmp
pop
cmp
mov
lods
and
mov
sub
stos
and
jae
dec
popf
dec
imul
adc
push
fcmovnb
cltd
mov
fs
sbb
xchg
mov
pop
call
sub
adc
outsl
push
and
mov
lcall
lds
pop
xchg
or
push
fcoml
ljmp
movsb
out
jge
inc
sub
and
sbb
scas
dec
push
inc
jle
push
enter
hlt
pop
sbb
out
xor
loop
lahf
test
fisttps
decl
and
neg
push
lret
mov
sub
xchg
cmp
xlat
lds
scas
xchg
pop
out
les
fwait
icebp
lods
sbb
inc
pop
jl
ss
rcpps
test
jmp
adc
push
sub
into
test
lret
xor
mov
and
pop
dec
dec
jnp
mov
insl
jno
push
sub
stos
mov
mov
popf
aam
mov
mov
inc
cltd
mov
gs
sahf
lock
loopne
addr16
out
add
mov
mov
fs
arpl
scas
sub
inc
sti
push
mov
sahf
int3
loopne
lret
xchg
mov
stc
cs
adc
xor
loope,pt
fsubs
cmp
sub
les
mov
fs
out
fstl
push
pop
out
mov
and
cld
pop
sub
dec
adc
popf
lret
out
cmpsl
orl
or
in
les
push
cmp
inc
xchg
xchg
test
int
aaa
sbb
cs
aaa
xor
nop
sti
fistpl
cmpsb
out
pop
push
fistl
mov
dec
fists
mov
sub
filds
lods
inc
pushf
mov
push
or
inc
addl
decl
cli
cmp
cmp
ljmp
inc
and
lods
sbb
hlt
sbb
popf
enter
sbb
xor
in
repz
hlt
div
out
mov
pop
xchg
fistl
std
pusha
mov
or
aaa
inc
out
in
fsts
int
mov
in
nop
xchg
test
xchg
outsl
scas
adc
loop
sbbb
mov
dec
mov
sar
shr
push
jp
fwait
aaa
cmp
xor
loop
loope
adc
dec
mov
sub
imul
shlb
lret
jp
iret
and
rcll
sub
sub
jmp
add
aaa
movsb
pop
jns
pop
xchg
ror
hlt
cmpsl
cmp
or
loope
sub
mov
xchg
sbb
sar
mov
mov
pop
adc
xor
and
cmp
mov
push
mov
mov
daa
or
outsb
inc
shrb
jae,pn
mov
pop
clc
pop
mov
cmp
xchg
push
or
orb
push
ret
fcmovbe
repnz
orb
lahf
xchg
dec
inc
and
sahf
stos
and
fildl
inc
loop
ljmp
sub
sbb
int
aas
lahf
imul
dec
hlt
test
mov
fdivs
aas
mov
jno
lcall
sti
adc
test
in
mov
jmp
pop
dec
ret
nop
call
mov
sbb
ja
fcmovnu
loopne
pop
pop
push
scas
inc
cmc
push
icebp
nop
cwtl
xor
fldt
fdivrs
push
arpl
inc
stos
add
mov
jge
imull
push
scas
pop
cmp
sub
das
repnz
std
cld
adc
outsb
leave
xchg
lods
sub
fisttps
push
int3
into
lret
insb
adc
inc
in
jge
add
jno
orb
aas
in
push
sub
pusha
sub
sbb
lret
mov
sub
cmpsb
in
pop
fcmovne
push
clc
mov
divl
lahf
lea
jmp
leave
inc
mov
push
adc
mov
cmp
xchg
in
popa
insb
pusha
cmp
push
mulb
rcrl
js
lods
out
icebp
in
xor
hlt
ficompl
inc
jmp
shl
inc
movsl
cmp
mov
lcall
fmuls
bound
cli
in
daa
jns
fstps
xchg
sbb
jg
mov
aad
inc
xor
dec
clc
cmp
mov
or
andl
sub
xchg
cmc
loopne
sarb
insb
sbb
mov
in
int3
add
lods
or
add
mov
push
mov
and
addr16
or
jo
ja
imul
jge
adc
cld
pop
cmpsl
xlat
mov
push
cwtl
adc
pop
les
repz
pop
lret
out
jno
pop
or
xor
mov
js
inc
and
pop
pop
mov
xchg
sub
xchg
xchg
int3
cmp
cmp
mov
and
add
adc
call
mov
push
pop
imul
push
xor
and
pop
and
adc
cmp
insl
stc
mov
cwtl
push
add
xor
sarb
push
push
sahf
mov
pushf
and
orl
or
xchg
rclb
roll
pop
fadds
push
orl
sub
adc
inc
mov
add
lds
sti
js
mov
sub
add
inc
jno
popf
pop
mov
xchg
divl
add
cmp
push
adc
adc
xchg
sbb
cmp
movsb
sub
xchg
xor
mov
and
aas
out
sub
idivl
rcl
mov
cmpsb
mov
cmp
jecxz
and
loop
rclb
sbb
jo
push
lahf
xchg
cmpsl
aaa
sub
les
xchg
lock
lahf
mov
add
mov
addb
xor
add
jns
or
adc
movl
lret
jo
jne
stos
shll
xchg
cmp
mov
popf
cli
sbb
mov
es
sbb
stos
out
cmp
pop
imul
dec
sub
push
push
xor
cltd
les
je
xchg
into
stos
int3
dec
sub
or
dec
lahf
push
ljmp
push
and
add
cltd
mov
or
inc
push
pusha
fcompl
cwtl
sti
aaa
xchg
adc
push
and
lcall
or
xchg
stc
ljmp
test
hlt
pusha
mov
pop
cltd
subl
pop
fsubrl
xor
push
in
mov
mov
call
enter
lcall
push
repnz
fsubrs
lcallw
mov
mov
mov
push
xor
xor
cmp
push
push
push
rcrl
add
mov
sub
int3
ret
lock
out
pusha
in
sub
nopl
mov
jnp
out
push
stos
mov
mov
xlat
mov
fstps
leave
adc
scas
mov
adc
lcall
lcall
ljmp
push
inc
xchg
imul
rolb
movsb
fcompl
mov
andb
push
push
pop
into
sbbl
dec
test
mov
js
sbb
nop
and
rcll
out
scas
sub
or
je
dec
popf
pop
negb
inc
lea
cmc
sub
dec
push
mov
cmp
inc
lock
xor
out
data16
mov
lcall
mov
pop
jno
mov
cld
sti
aad
jg
push
call
xor
and
ds
inc
mov
xor
mov
jmp
cli
lds
xor
out
inc
pop
mov
jns
sub
lea
mov
sbb
mov
in
xchg
js
dec
add
lcall
pop
aad
movsl
dec
shll
xchg
add
ret
shl
sti
add
xor
shrl
ja
popa
xchg
cmpl
mov
sahf
fcmovnb
inc
dec
sbb
rcl
dec
dec
rolb
int3
and
jne
inc
pop
fcmove
pop
popf
add
and
push
and
shrl
enter
mov
stos
sbb
jl
mov
in
js
pop
or
scas
adc
pop
lods
pop
sub
popf
push
adc
jae
mov
sbb
mov
divb
aam
inc
sub
ror
clc
fwait
int3
sti
sbb
dec
dec
fmulp
xchg
std
nop
in
jmp
out
cmpsl
imul
inc
outsl
jl
sub
inc
out
dec
ret
mov
sub
push
jp
add
leave
and
push
adc
mov
or
pop
enter
sbb
fwait
shll
adc
adcb
and
test
stc
xor
jnp
pusha
xor
cmp
fadd
js
jp
mov
fistl
cwtl
fidivs
jne
stc
jmp
paddsw
rorl
pop
pop
test
imul
cltd
addr16
lret
cmp
push
sbb
loope
fbld
testb
xor
mov
xchg
addr16
lcall
inc
jg
cli
cmp
jecxz
jbe
xchg
xlat
cmc
shlb
mov
cmp
inc
adc
cltd
add
and
enter
push
lret
fnstenv
cmc
or
test
js
testb
push
pop
movsb
mov
sub
les
push
cmp
push
bound
lds
repz
icebp
adc
lret
test
div
dec
mov
out
je
mov
stos
addl
lahf
jmp
sti
mov
mov
or
into
popa
iret
push
and
into
rcl
mov
mov
mov
insl
pop
lods
cmpsb
int3
loopne
xchg
mov
jno
mov
sahf
aas
push
pop
jns
cmp
jle
ret
popf
mov
adcb
sarl
test
pop
jl
out
pop
adc
test
insl
cmpsl
and
cmpsl
scas
mov
stos
push
push
pop
clc
ljmp
shll
push
sbb
adc
jl
mov
mov
ljmp
push
sti
xchg
dec
loope
and
or
adc
xchg
cmpsl
ds
mov
in
pop
and
js
xchg
add
xchg
jbe
xchg
popf
repz
or
mov
add
and
xchg
inc
and
jo
sbb
jge
push
jmp
xchg
cli
call
popa
add
pop
in
decl
cmp
pop
pop
loope
xchg
popf
test
lock
xlat
push
xor
add
ja
xchg
loopne
andb
adc
cli
mov
out
repz
fcmovne
cmp
sarl
lea
jmp
dec
adc
fdivl
xor
outsl
mov
push
arpl
fistps
mov
fptan
pop
hlt
and
test
fcomip
js
int
push
popa
shrb
fs
push
call
jecxz
pop
dec
insl
adc
xor
jl
dec
jo
sbb
push
xchg
adc
jmp
shl
sbb
imul
inc
sub
mov
mov
scas
sti
fists
mov
mul
fiadds
inc
hlt
cld
add
call
sub
xchg
cmp
outsl
cmpsb
loopne
push
repnz
cltd
mov
leave
add
dec
add
xchg
ss
lahf
cli
mov
fcos
xchg
out
cli
shl
in
addr16
inc
xor
and
loope
add
mov
ds
push
push
ffreep
push
hlt
sti
cmp
push
test
testl
repnz
and
push
or
cmp
adc
stos
xchg
fs
xchg
sbb
jmp
je
aas
xchg
mov
ss
or
and
in
sahf
or
jnp
cltd
pop
push
sub
xlat
jge
repnz
pop
mov
mov
xchg
outsl
divl
or
xchg
insl
sbb
mov
dec
push
subl
into
pushf
lcall
xchg
jne
orb
test
mov
out
mov
stos
ret
stos
mov
push
popa
roll
stos
ret
mov
sbb
imul
sub
in
fs
jmp
lret
xchg
mov
les
dec
push
mov
imul
lret
push
jmp
pop
out
xor
add
inc
orb
std
sti
mov
and
jo
cmp
xchg
jae
ss
nop
mov
gs
push
push
sbb
mov
dec
add
std
lock
or
imul
hlt
jl
icebp
jecxz
lret
pop
cmpsb
pop
cmp
aam
in
hlt
push
bound
adc
xlat
loop
movb
out
dec
test
cmp
pop
add
jecxz
push
ja
xor
cmp
adc
pop
daa
mov
ret
imul
loop
cmp
dec
je
ds
or
outsl
js
lret
sahf
cmp
sub
cmp
or
in
jmp
inc
pop
pop
es
lods
stos
and
test
movsl
daa
fstpt
inc
pop
mov
push
adc
adc
jns
jae
mov
fisttps
push
add
jmp
lret
or
sub
add
push
repz
cmp
rolb
cld
push
out
fwait
nop
outsl
jl
addl
in
shlb
aam
cwtl
roll
out
sbb
pop
repnz
std
xor
push
add
or
sub
sub
mov
shll
adc
and
out
xchg
scas
out
into
mov
push
sti
insl
mov
dec
pusha
mov
push
lods
pop
roll
mov
dec
mov
pop
dec
aad
jnp
jl
stos
ret
mov
mov
rcrl
mov
pop
or
and
movsl
outsb
stos
cmp
push
les
test
es
jne
sti
xor
jnp
sbb
mov
lcall
cli
dec
mov
iret
adc
xchg
push
push
push
jmp
inc
bound
lock
mov
sub
dec
iret
sub
inc
in
leave
add
mov
mov
inc
shrl
sbb
push
jp
jge
daa
mov
scas
push
mov
adc
mov
xchg
dec
nop
sbb
xor
outsb
rcr
push
imul
ds
and
mov
inc
sub
sub
mov
mov
mov
daa
mov
insb
aam
cmp
pop
add
or
inc
test
daa
and
pusha
add
push
ja
or
mov
xchg
cltd
lret
inc
add
test
popa
sbb
sub
ret
imul
clc
jge
push
scas
sahf
cs
movsb
pop
adcl
cs
scas
cmp
adc
stos
sub
and
gs
inc
stos
mov
fdivs
mov
and
out
repnz
sbb
enter
in
adc
sbb
xchg
test
xor
gs
sub
and
nop
xchg
jno
ret
repnz
mov
in
push
jno
fwait
xor
sub
push
lret
sub
and
jle
add
shrl
pop
or
rclb
fdivs
incl
enter
fisttpll
inc
call
mov
out
je
in
add
pop
es
cli
in
mov
into
add
lahf
cmp
lcall
sub
mov
xor
fdivrl
adc
fs
sub
inc
push
in
inc
das
dec
xchg
push
mov
pop
dec
insl
jno
cmc
xlat
mov
out
lods
jbe
imul
cld
pop
in
pop
mov
inc
mov
mov
push
push
sar
pop
or
popf
pop
loopne
adc
sti
push
and
into
cmp
stc
shll
or
addl
mov
and
lods
lods
sub
test
xchg
in
ljmp
fsubs
out
loop
and
and
dec
out
and
sbb
push
xchg
mov
loope
ja
or
js
adc
ret
scas
aad
js
cmpl
lret
push
pop
call
rcll
push
xorb
jno
out
cld
or
sub
hlt
stc
cli
cmp
or
stos
out
jbe
push
jmp
popf
int
movsb
ret
idivb
mov
jg
and
dec
popa
mov
inc
add
cli
out
sbb
fcomp
ror
and
ret
pop
addb
test
and
jnp
loope
jns
dec
dec
or
loopne
cmpsb
or
jmp
fisttps
jg
in
mov
scas
mov
js
mov
movsb
inc
sarl
xchg
lock
mov
outsb
js
dec
mov
adc
or
mov
push
cltd
dec
cwtl
inc
dec
mov
ljmp
pop
leave
xor
or
shll
pop
xor
or
push
add
rcrl
mov
ds
push
sbb
mov
fsubs
add
test
and
popf
scas
cmp
lahf
fisttpll
mov
je
iret
cmp
pop
dec
or
arpl
cmp
mov
test
or
fimull
jns
inc
push
data16
dec
es
shr
xor
pop
mov
xchg
lcall
push
mov
xor
mov
adc
imul
pop
test
es
fsubl
adc
shl
mov
aam
xchg
inc
scas
add
loop
mov
lret
push
daa
or
add
rcrl
adc
mov
mov
lahf
icebp
adc
xchg
push
aam
je
lahf
pushf
incb
dec
cs
pop
xchg
sbb
push
xor
fildll
fidivrs
or
inc
addr16
inc
xchg
cmc
sub
popf
mov
cli
fs
addps
and
pushf
rcll
pushf
dec
lea
rorl
fs
pop
inc
fsubrs
divb
test
jb
popf
push
mov
mov
in
jle
push
sub
dec
hlt
das
push
push
imul
ds
out
xor
sbb
push
mov
clc
inc
js
pop
sahf
sub
repz
xlat
push
out
addr16
test
icebp
dec
sti
clc
or
mov
dec
sbb
push
mov
ds
pop
jb
add
out
ret
xor
jbe
cltd
jnp
adc
jb
sbb
shl
mov
jae
add
lods
fwait
jns
loopne
rclb
stos
mov
xchg
in
notb
test
xor
jp
stos
mov
push
je
sti
dec
lahf
sub
stc
std
sbb
mov
pop
sbb
jnp
xchg
and
mov
out
push
fcompl
int3
cmp
or
and
sbb
sbb
push
mov
jno
clc
gs
popa
shlb
scas
dec
dec
rcrb
or
shll
mov
movsl
adc
mov
shl
out
movb
jp
rcrb
les
push
data16
inc
inc
pop
jmp
mov
into
xor
scas
ss
in
test
clc
xchg
mov
lods
xor
clc
test
lahf
jmp
mov
add
and
ret
cmp
rcrb
lret
test
das
sbb
repnz
cmp
enter
faddl
xor
pop
sub
fistpll
ja
cli
mov
cmpsb
mov
mov
outsb
mov
lahf
mov
aad
xchg
sub
or
gs
jne
xchg
arpl
mov
test
and
mov
and
push
test
jecxz
fnsave
cmp
or
jns
shr
data16
xlat
push
sbb
imul
pushf
or
imull
sbb
jecxz
cmp
clc
adc
and
cmp
dec
ja
dec
cmc
add
cwtl
jo
sub
jecxz
xchg
repz
or
pop
cli
xchg
xor
js
adc
mov
in
xchg
data16
pusha
popa
mov
xorb
les
call
rcrl
hlt
pop
and
xchg
mov
shll
loopne
scas
dec
sub
cli
and
rcrb
sbb
xlat
cmp
push
jnp
xlat
push
iret
ljmp
pop
stos
or
mov
cltd
rol
pop
mov
enter
xchg
insl
sub
ja
add
addr16
add
rcrl
mov
xchg
test
mov
adc
clc
fwait
jmp
test
in
xchg
rcll
jge
cmpsl
cmpl
nop
xor
jp
sub
add
mov
jl
xchg
insl
dec
xor
mov
cmpsb
push
xchg
mov
popa
dec
es
cmp
jne
fbld
subl
dec
insl
pop
push
mov
movsl
xorl
loop
dec
push
jnp
mov
adc
js
orb
or
icebp
mov
jle
sahf
pop
jecxz
sub
xor
mov
ret
test
add
jecxz
mov
dec
lods
das
cmpsl
scas
std
into
ret
ljmp
mov
jl
push
push
das
test
xchg
arpl
pop
fwait
jns
das
dec
filds
xor
jb
call
lahf
pop
xor
pop
inc
mov
call
rcr
pop
in
sti
out
sub
scas
push
cltd
dec
daa
jmp
rcll
push
jbe
popf
xchg
or
test
jge
and
sbb
sub
jp
sbb
xchg
pop
mov
add
gs
adc
sub
xchg
mov
in
fisttpll
inc
fdiv
aaa
push
push
aaa
sub
push
popf
dec
add
lock
dec
jo
andb
cli
outsl
mov
jae
xchg
jmp
out
popf
mov
repz
xchg
rolb
pop
cltd
cmp
cmp
lock
psrlq
nopl
imul
lods
or
cwtl
pop
push
push
fld
and
daa
out
fdivp
int
adcl
pop
in
ljmp
insl
in
push
fldenv
xor
js
std
dec
aaa
adc
xchg
cmp
push
test
dec
push
push
and
cmp
pushf
sub
mov
adc
mov
jecxz
add
repnz
sbb
sbb
mov
faddl
lret
aaa
xor
hlt
mov
xchg
jecxz
movsl
pushf
xchg
dec
pop
adc
or
pop
rorb
jns
imul
add
jle
pop
jecxz
idiv
pop
in
add
mov
mov
daa
fs
inc
loopne
clc
incb
cltd
movsl
insl
rol
and
sbb
addb
fxch
imul
into
xchg
push
fsts
fcompl
mov
cltd
les
fs
mul
int
or
xchg
iret
idivb
negl
adc
xchg
mov
xchg
hlt
mov
movsl
push
sahf
push
sbb
cs
movsl
fs
inc
or
xor
test
hlt
sbb
repz
clc
stos
fimuls
cmp
xlat
add
fsubl
data16
push
test
out
mov
mov
xchg
and
lock
das
and
cmp
jg
pushf
jns
in
adc
dec
jns
add
or
addr16
pop
mov
jp
and
lcall
iret
mov
sub
jo
adc
xor
push
or
inc
fmull
jp
sub
es
sub
pop
test
js
sbb
dec
or
pop
lret
or
ret
movsl
mov
shl
mov
arpl
test
sub
push
mov
cmp
cmp
test
xchg
xchg
mov
pop
frstor
fcmovne
adc
add
ud1
sarb
or
xor
push
mov
lods
and
mov
push
cs
mov
lret
mov
adc
sbb
in
jae
std
inc
lret
adc
push
jnp
and
fnstsw
sti
out
movsl
cmp
push
add
shr
in
sbb
mov
int3
sbb
pop
cmc
pop
push
cltd
repnz
push
mov
movsb
bound
mov
pop
dec
mov
adc
add
sbb
aaa
pop
setb
into
popf
push
mov
cmp
mov
xchg
out
jb
xlat
xchg
pop
pop
xchg
and
dec
xchg
mov
repnz
cmp
mov
cs
adc
mov
test
cmpl
sub
sti
popa
iret
sub
pop
clc
push
mov
push
out
daa
aad
mov
cmp
inc
mov
and
jle
pop
mov
es
test
je
xchg
shrb
insb
fwait
es
jns
push
push
inc
mov
loopne
mov
dec
les
cltd
adc
outsl
shr
pushf
push
fdivrl
outsb
pop
insl
mov
xchg
push
repz
push
cmp
shll
cwtl
ljmp
ja
aad
lahf
sbb
in
add
push
sbbl
cmp
call
mov
loopne
rol
mov
sub
into
jle
dec
gs
ja
mov
sub
and
lods
xchg
adc
adc
or
pop
jle
aad
jns
jmp
fcompl
pop
cmc
cld
xchg
lock
emms
push
push
loop
xchg
ds
jp
movsl
enter
test
pop
or
xor
ret
or
rcrb
outsl
mov
xorb
xor
lret
ljmp
xchg
test
push
or
jmp
pop
xchg
cmc
std
sub
pop
mov
mov
test
cld
dec
or
enter
pop
mov
xchg
lock
imul
in
fwait
sbb
pop
dec
push
and
or
test
cmp
lahf
xlat
mov
scas
mov
cmpsb
mov
and
add
rolb
push
mov
aas
icebp
imul
gs
xor
push
mov
sub
faddl
adc
je
pop
jge
sti
cmc
inc
dec
incl
mov
hlt
repnz
xor
cmp
adc
xor
inc
lahf
mov
aam
jns
add
inc
and
xchg
xchg
mov
and
push
in
push
jnp
lcall
jle
add
or
stos
movsb
jp
sbb
imul
jge
aad
pop
andb
bound
sbb
aaa
mov
inc
pop
pop
fs
jns
iret
lods
xor
push
fldt
mov
roll
xorl
pop
hlt
xor
cwtl
pop
clc
jb
aas
sahf
jns
aam
in
jg
sub
add
jmp
add
les
sbb
push
mov
pop
mov
cmp
xor
cmp
pop
movsl
or
sbb
divl
aas
bound
and
xchg
mov
test
push
pop
dec
mov
jbe
jb
data16
ficoml
push
push
xchg
push
cltd
test
gs
xor
adc
lds
cld
mov
dec
rcrl
pop
mov
and
xor
cmp
out
test
sub
outsl
popf
add
pop
dec
shlb
lea
pop
pusha
stos
aaa
sub
insl
pop
xor
push
push
add
pop
adc
and
dec
dec
scas
daa
loopne
cwtl
loopne
cs
lods
push
jbe
int3
jo
jns
int3
in
add
dec
pop
subb
roll
outsb
mov
bound
rcl
adc
jbe
bound
adc
int
cli
je
adc
mov
repnz
mov
sahf
out
pop
pushf
outsl
dec
dec
rcrl
in
popf
adc
std
dec
cmpsl
jnp
scas
pop
pop
fsts
xchg
mov
or
mov
mov
xchg
rcrb
ret
shll
idivl
lods
push
fcompl
jne
paddw
loope
sarb
push
xor
ljmp
dec
jg
xor
pop
imul
jne
fcmovnbe
xchg
jns
rolb
mov
shrb
mov
stos
test
adc
jae
jge
xor
pushf
iret
lret
xlat
mov
adc
sub
mov
add
loope
aam
xchg
and
adc
or
push
popf
icebp
loopne
lret
xchg
pusha
xor
push
jne
push
std
jno
leave
mov
mov
aaa
xchg
clc
inc
je
test
repz
dec
testl
addr16
leave
arpl
mov
mov
imul
xchg
xor
mov
add
push
jl
std
mov
push
notb
in
add
in
jnp
mov
add
push
add
xor
scas
stos
jno
shr
inc
add
getsec
mov
dec
enter
mov
movsl
cmpsb
scas
jg
sub
popa
cmp
fidivrl
push
popl
mov
int
ret
push
and
sbb
dec
add
push
mov
mov
pop
mov
push
sub
nop
cmc
out
mov
outsb
xor
divl
add
dec
mov
ret
mov
sub
mov
mov
call
or
stos
aas
cmp
pop
int
mov
addr16
mov
mov
divl
or
pop
nop
aas
ds
clc
pop
inc
daa
jmp
jns
aaa
sbb
das
sbb
push
push
gs
mov
rcr
cmp
pop
outsb
xorb
inc
stc
lods
mov
es
mov
mov
xchg
mov
push
sub
shll
pop
cmp
xchg
popf
xor
data16
or
sbb
lods
push
pop
pop
cmp
int3
or
pop
fldt
mov
leave
adc
std
push
sbb
jne
test
push
mov
jb
push
or
test
test
jns
das
stc
inc
fisubrl
dec
jno
ds
push
dec
in
mov
jne
fcmovbe
xor
repz
les
cli
mov
test
pop
mov
popa
add
data16
xor
jl
or
popa
idivb
jge
xor
push
sbb
mov
stc
enter
and
daa
or
xchg
hlt
dec
xor
pop
jns
aas
call
adcl
popf
shl
xlat
push
aam
pop
jne
pop
aad
inc
daa
xchg
xor
pop
mov
subl
outsb
add
dec
cmp
sarl
xor
loope
call
pop
push
aad
jecxz
mov
mov
mov
hlt
scas
dec
and
icebp
neg
cwtl
rcll
cmp
imul
inc
lds
rcrb
fsub
incb
enter
jge
add
mov
push
inc
and
jae
test
jecxz
jmp
dec
xor
lods
stc
and
cmp
movsl
push
andb
inc
or
pop
cltd
ret
sti
enter
inc
negl
sub
jg
xlat
jno
shr
cmp
fisubrl
adc
movsb
ss
inc
loopnew
cmpsb
daa
rclb
pop
pop
jb
insb
dec
rcll
shlb
ja
in
lret
xor
imul
push
sub
pusha
push
stos
mov
jo
in
mov
stos
sbb
ret
lret
jecxz
enter
add
jg
lds
fcom
mov
mov
lds
mov
jle
sti
test
sbb
pop
mov
sbbb
and
in
or
xor
leave
xor
and
clc
fstps
inc
pop
pop
pop
jns
cmp
scas
adc
mov
dec
push
adc
push
enter
adc
arpl
mov
cmp
cmp
mov
mov
les
lahf
sub
sahf
push
scas
cli
or
pushf
and
cmpsb
inc
bound
loope
or
add
mov
in
in
jl
sbb
sub
xor
test
sub
int3
sub
pop
loopne
out
lods
int
mov
outsl
aad
push
pop
sub
das
mov
fsubl
pop
pop
daa
cltd
popf
cmp
jb
bound
clc
ret
imul
jno
sahf
xlat
adc
mov
mov
sti
mov
aam
or
imull
xor
and
test
dec
mov
jmp
xchg
mov
test
push
jbe
xchg
sub
das
pop
sub
mov
add
repnz
iret
cli
mov
loope
lsl
loopne
mov
lahf
push
ret
lret
roll
and
mov
andb
xchg
push
loope
lret
push
mov
pop
mov
lea
cmpsl
mov
mov
mov
stos
pop
mov
xlat
lds
cs
mov
sarb
lods
shr
mov
pop
inc
sbb
dec
push
cmp
rorb
test
icebp
out
in
das
inc
out
into
dec
out
jbe
jae
in
das
sbb
jmp
lods
out
cmpsl
jne
jmp
cmc
stos
cmp
fwait
jmp
aam
pop
lret
test
stos
jo
add
xor
mov
mov
aam
xor
mov
push
movsb
xchg
push
out
jge
xor
and
mov
fwait
push
sbb
jno
dec
sub
sbb
icebp
leave
dec
dec
dec
or
push
mov
sbb
pop
or
fldcw
mov
rcrl
dec
icebp
repnz
dec
xchg
jg
loop
xchg
pop
sub
es
dec
push
xor
push
clc
and
out
js
lea
aas
xor
xchg
add
add
scas
xchg
popa
xlat
fistpll
je,pt
or
fidivrl
sbb
pop
shrl
and
aaa
jae
movsb
cmp
mov
or
pop
xchg
pop
mov
cmc
int
cmpsb
out
sbb
loope
inc
push
mov
inc
out
or
fildll
lods
insb
fimull
out
jmp
or
jmp
add
mov
out
push
or
lock
pop
cld
dec
leave
loope
decb
aam
adc
mov
adc
loopne
jae
ja
lret
call
or
in
lods
sarl
mov
or
insb
je
xor
push
xor
mov
js
or
sbb
js
test
imul
mov
fisttpll
test
and
scas
shl
dec
fdivl
mov
and
test
push
cltd
and
orl
lret
movl
dec
xlat
pop
call
jmp
loope
iret
sbb
jl
mov
mov
or
ljmp
jp
mov
jp
push
pop
dec
arpl
add
icebp
mov
and
ja
sti
cmpb
sbb
orb
pop
dec
das
mov
fistpl
mov
push
mov
int3
scas
test
pushf
and
dec
arpl
in
pop
mov
out
mov
repnz
loopne
leave
inc
aas
mov
movsl
in
incl
cmp
aas
mov
sub
mov
lret
in
xchg
sbb
popa
cmp
rol
and
sub
add
cmp
mov
inc
sub
int
out
mov
dec
mov
mov
sub
pop
int
sub
mov
jae
test
mov
xchg
movsb
popa
xchg
shlb
scas
bound
repnz
aad
cld
inc
sub
and
sbb
cltd
dec
pop
test
push
aam
mov
lret
sbb
loop
jg
inc
popf
adc
imul
and
jmp
mov
jb
pop
mov
sub
pmulhw
aam
es
nop
fs
cli
xlat
dec
and
mov
mov
mov
or
daa
lds
imul
mov
pop
sahf
dec
push
jbe
sub
pop
clc
jmp
stc
jo
test
test
rcrb
test
test
cmpsl
stos
loopne
sbbl
xchg
cmc
cmpsl
adc
idivb
inc
in
popa
icebp
cltd
and
dec
mov
movsl
cmp
shrl
scas
and
mov
sub
or
or
sub
in
adc
jle
dec
movsb
or
fnsave
pop
xchg
xchg
push
sahf
idivl
mov
in
pop
inc
pop
arpl
push
jo
popa
loopne
mov
adc
je
pop
sbb
xor
lahf
jnp,pt
inc
pop
jne
sarb
push
sub
pop
mov
xchg
xchg
jle
pop
sbbl
test
dec
sbb
add
in
mov
adc
mov
popf
or
in
adc
movsl
add
fidivl
scas
fnstenv
sub
mov
xor
arpl
push
loop
cmpsb
cmp
lods
icebp
lcall
aaa
xchg
ret
mov
lret
inc
mov
sbb
mov
sahf
inc
aad
sti
sbb
outsl
xchg
cmc
push
mov
jb,pt
xchg
fs
mov
inc
psrad
pop
clc
call
repnz
push
adc
inc
mull
ljmp
mov
push
push
lret
mov
inc
cmp
jge
push
fs
and
jmp
xchg
and
ja
sbb
sbb
and
mov
mov
and
rcll
bound
fisttpll
push
push
dec
mov
insb
push
xchg
sbb
fiaddl
sti
popa
and
adc
cwtl
out
test
push
xchg
xor
into
xchg
in
pop
xor
mov
insl
adc
push
dec
cwtl
aas
xchg
mov
inc
mov
xor
test
pop
out
xchg
add
stos
dec
cmp
fcomps
dec
rclb
leave
xor
shlb
mov
and
dec
xchg
insb
push
pushl
adc
fadds
nopl
aad
mov
out
and
lcall
xchg
xor
test
push
mov
mov
incb
pusha
lock
inc
push
cmp
shrl
test
mov
scas
inc
mov
je
ret
sub
push
repnz
out
inc
enter
push
and
jns
mov
pop
lret
dec
movsl
outsl
adc
adc
xchg
bound
testl
inc
test
into
inc
mov
cmp
cmp
push
shlb
pusha
sbb
jmp
cmp
mov
add
and
pop
je
nop
or
sti
or
add
in
fstpt
out
sbb
cmpsl
cmpb
fsubl
push
inc
pop
xchg
popa
and
add
pop
or
mov
mov
popf
jnp
sbb
cmc
das
pop
adcb
or
jne
out
push
pop
pop
jo
mov
enter
movsb
and
jmp
call
pusha
jae
mov
int
pop
testb
sub
or
jge
push
lret
repz
fmuls
push
and
femms
or
mov
add
add
lcall
nop
in
fldt
stos
arpl
std
lock
cmp
mov
sbb
rorl
mov
or
jbe
popl
push
cli
fadds
nop
xor
je
adc
test
dec
mov
push
or
into
pop
sub
js
xchg
jg
cs
rcr
repz
insl
dec
mov
nop
cmp
jg
inc
pop
stos
sub
xor
lret
adcl
dec
and
push
xchg
xor
mov
ret
sbb
dec
pop
jns
push
repz
adcb
add
jne
rcll
imull
xchg
icebp
mov
popa
sub
in
dec
mull
mov
jno
je
cli
and
test
fs
add
jl
and
jo
cld
xchg
sahf
cld
jns
xchg
pop
je
sbb
pop
inc
mov
sbb
arpl
dec
out
jnp
dec
lahf
cmpb
out
repnz
xor
jle
adc
pusha
stos
dec
cmpsl
enter
dec
and
xlat
and
lcall
inc
lock
mov
call
pop
iret
iret
jne
mov
mov
xlat
in
fldt
adc
call
loope
jo
push
test
push
lret
and
push
cs
and
arpl
mov
xor
sub
cmp
xchg
xor
call
outsl
fidivl
dec
jmp
ds
stos
mov
adc
nop
and
sub
sbb
push
das
sbb
mov
repz
mov
xchg
mov
xchg
push
pop
add
imul
xchg
jo
std
jp
and
or
push
add
add
push
into
xchg
push
insb
fdiv
mov
notb
mov
in
xor
jmp
sbb
sub
bound
or
repz
fwait
sti
adc
push
cmpsl
dec
xlat
xchg
daa
popa
mov
out
aam
sub
aaa
in
xchg
incb
sub
sub
aas
jae
faddl
sbb
dec
push
mov
jecxz
dec
idivl
and
subl
mov
icebp
out
xchg
into
popf
fisubl
sarb
mov
loop
or
dec
pop
add
or
jecxz
sub
lcall
cmp
mov
xor
xor
daa
test
incl
jmp
test
push
xchg
mov
clc
pop
xchg
test
adc
cld
adc
scas
and
jnp
dec
shld
dec
adc
sahf
inc
lcall
cmp
in
lea
ljmp
int
mov
add
movsbl
cld
pop
test
repnz
jae
push
mov
push
lds
push
in
cmpsb
mov
lea
adc
sahf
hlt
xchg
push
mov
in
in
outsl
and
cli
xlat
outsl
push
xlat
ds
fcmovne
xchg
xchg
add
outsl
jo
js
jb
push
fwait
mov
push
sub
test
shrl
inc
lock
push
js
add
in
pop
xor
hlt
jae
cwtl
xchg
mov
idiv
aam
movsb
or
sub
dec
cmp
outsb
and
sub
mov
xchg
mov
push
ljmp
sahf
or
imul
push
shll
xor
xchg
pop
mov
lea
xor
ds
cs
jae
cmpsl
cwtl
fbstp
xor
mov
pop
lock
xor
out
inc
mov
mov
mov
mov
popl
scas
repz
ficoml
dec
in
pop
imul
pop
jno
mov
mov
imul
sub
and
mov
sti
push
ljmp
repnz
xchg
outsb
dec
mov
xchg
inc
stos
jecxz
push
test
or
xchg
mov
xor
cwtl
sahf
scas
into
testb
fiadds
sub
xchg
scas
pop
xchg
jge
cld
xor
or
sbb
pusha
dec
ja
jecxz
mov
test
mov
imul
int
cmpsl
mov
push
repnz
data16
xchg
ja
or
dec
dec
mov
xor
mov
push
stc
std
ljmp
push
test
jmp
inc
push
inc
mov
dec
pop
clc
in
mov
call
ret
jne
sarl
mov
xchg
dec
lea
xchg
dec
popf
mov
ss
int3
mov
mov
mov
pop
sub
sub
mov
iret
ja
or
cmp
addr16
lods
daa
pop
add
cmp
nop
jae
mov
mov
mov
xor
leave
mov
lcall
push
cmpsl
dec
xor
sbb
and
push
adc
xor
inc
inc
popf
adc
fnsave
pusha
jge
inc
jne
add
dec
icebp
test
mov
movsb
xchg
call
or
loope
jne
jbe
ja
cmp
or
into
and
mov
ja
lret
jns
dec
jle
cmc
icebp
data16
stc
sub
inc
mov
js
sub
ja
dec
cmpsb
jno
dec
mov
hlt
xchg
push
jne
jbe
jl
sub
insl
gs
and
add
dec
push
stc
jae
mov
add
push
jbe
pop
cmp
addr16
jmp
les
mov
clc
or
movsb
mov
pop
stc
hlt
jo
flds
xchg
sub
inc
out
data16
lds
pop
and
test
mov
daa
es
lea
push
sahf
mov
push
data16
mov
icebp
stos
inc
pop
jg
or
test
add
xchg
push
test
mov
sbb
jmp
pop
or
push
movsb
sub
lea
mov
fwait
jae
pop
iret
mov
dec
inc
rclb
pop
pushf
aam
pop
or
cs
ja
fwait
adc
hlt
rclb
arpl
xor
dec
in
add
cmpsb
nop
xchg
jp
ret
or
add
pop
xchg
jno
mov
mov
sub
xchg
pop
rorl
jecxz
rorl
and
mov
imul
push
dec
call
in
sub
lods
addl
adc
insl
sbb
lds
sub
jp
jne
into
lods
pop
shll
fisttps
daa
jmp
mov
loopne
push
stc
scas
and
or
in
xchg
mov
bound
nop
jo
jl
jae
pushf
dec
sbb
repz
subb
cs
ret
cltd
xchg
sbb
lret
icebp
shll
insb
jno
mov
xlat
xchg
bound
sbb
pop
inc
hlt
jo,pn
in
xor
jns
addr16
data16
je
and
das
xor
in
popl
push
xor
mov
sbb
and
ret
jmp
adc
rol
ss
test
push
out
mov
mov
mov
sub
out
les
cmpsb
mov
push
jae
fcmove
into
lcall
fidivs
xlat
xchg
fbld
cwtl
push
adc
sbb
sub
cmp
cld
stos
popf
data16
icebp
add
and
out
mov
push
inc
mov
sub
ret
inc
push
pusha
sbb
sbb
inc
pop
hlt
ret
xor
out
sub
mov
adc
pop
nop
jl
jno
je
sbb
imulb
iret
push
jbe
cmp
insb
mov
arpl
and
gs
in
cwtl
fcomip
push
push
sub
xchg
in
xor
mov
jle
inc
mov
inc
push
repnz
cmpb
and
arpl
pop
cld
icebp
inc
stc
pop
or
xchg
pop
cmc
ljmp
pop
icebp
mov
subl
xchg
pop
or
test
out
xchg
mov
push
push
stc
dec
adc
pop
jg
nop
sub
inc
push
or
fucom
mov
push
dec
mov
xchg
movsl
xor
dec
in
cmp
mov
pusha
enter
lods
das
xchg
add
shll
das
into
push
pop
add
or
pop
pop
mov
mov
adc
bound
jle
inc
leave
inc
imul
cmp
aas
mov
adc
lret
xor
in
pusha
fs
adc
sub
xchg
or
sub
xlat
testl
stos
cmp
ret
push
in
popf
out
shl
inc
sub
fcomip
pop
cmp
push
xchg
loopne
repnz
pop
push
cwtl
aam
xor
and
xchg
hlt
lcall
sbb
divb
subb
stos
push
and
das
add
sbbl
arpl
test
testl
sub
mov
mov
cli
adc
xchg
cmp
int
pop
mov
mov
icebp
lcall
adc
rcll
test
out
out
lds
fldcw
bound
dec
push
mov
cmp
mov
add
xchg
lahf
mov
es
bound
imul
dec
and
dec
fildll
cmp
adc
leave
push
mov
mov
in
imul
imul
or
xchg
mov
or
sti
push
testl
and
test
fmul
orl
or
push
bound
jb
int
inc
mov
repnz
cmp
adc
sbb
adc
jne
mov
mov
mov
pop
jp,pt
les
bound
mov
xor
shl
scas
ret
dec
into
inc
test
sbb
xor
mov
inc
mov
ds
or
test
fwait
rolb
ds
sub
pop
out
mov
cmc
add
jmp
jo
xchg
adc
test
jno
ret
cltd
and
add
imul
push
mov
add
aas
bnd
test
xchg
negl
adc
or
mov
pop
cmp
out
cmc
lcall
or
or
inc
pop
lretw
pusha
cmp
test
arpl
iret
mov
insl
or
pop
pop
call
jo
inc
les
dec
adc
out
data16
daa
dec
sbb
mov
jne
adc
xchg
aas
mov
in
and
test
mov
or
pop
xor
fs
sub
lods
mov
iret
and
pop
mov
mov
popa
pop
jge
mov
pushf
fs
aad
and
dec
sub
in
jg
mov
add
in
mov
ficomps
pop
ret
mov
popf
and
xchg
and
popa
out
jle
stos
xor
std
icebp
inc
rorb
addr16
mov
or
aaa
enter
jg
inc
mov
push
loop
orl
sahf
shlb
pop
fstps
aaa
ret
pusha
mov
or
bound
loop
mov
pop
xchg
sbb
jno
fmuls
jno
or
cmp
pop
push
adc
aam
dec
iret
pop
or
adc
ja
cli
dec
hlt
cmpsb
bndstx
push
lock
mov
and
jmp
xlat
test
rcrl
adc
cmp
xchg
sub
cmpsl
inc
and
je
mov
xor
stc
leave
pop
mov
nop
test
pop
test
pusha
pop
jne
mov
jl
dec
les
push
jp
inc
fmulp
dec
popa
and
notl
jbe
cmp
pop
fs
push
push
or
fsubl
mov
cli
pop
pop
rcrb
and
jecxz
orl
scas
mov
roll
sub
cmp
add
push
push
insl
xchg
fcmovbe
jb
aaa
mov
fists
addr16
daa
iret
jg
bound
dec
test
add
cmp
dec
adc
sub
or
sahf
inc
cmp
mov
lods
imul
xor
test
mov
bound
and
jns
es
sub
xor
lahf
jl
dec
push
add
dec
cmpsb
jae
xor
mov
mov
in
jae
xor
in
sbb
ja
cmp
aas
scas
jbe
in
sbb
fnsave
xchg
fsubrl
in
adc
mov
push
nop
roll
sti
mov
lods
icebp
push
cwtl
faddp
push
cld
xchg
sbb
into
imul
mov
iret
jge
fsub
test
jo
inc
jae
addl
or
adc
shl
sbb
loope
insl
mov
add
push
popf
roll
xor
cmc
sbbb
push
iret
cltd
fwait
rorl
shlb
add
addl
add
sbb
mov
mov
dec
inc
jbe
inc
idivl
jecxz
or
cmp
sbb
pop
adcb
popa
outsb
lret
mov
aad
mov
loope
test
inc
pop
popf
inc
push
lahf
sarb
dec
push
outsb
mov
push
dec
dec
dec
and
mov
dec
push
scas
das
pop
jbe
dec
push
mov
popa
and
loop
xor
sbb
faddl
cmpb
hlt
mov
add
sbb
les
sbb
adc
jo
aas
mov
push
inc
call
es
out
jno
adc
pop
js
and
cmc
mov
sub
mov
test
mov
clc
pop
out
inc
mov
lods
dec
mov
sbb
xor
and
loop
pop
ljmp
mov
xor
lods
sub
test
aam
mov
and
in
mov
sbb
lret
cli
push
cmpsl
sub
or
and
aaa
fimull
bound
pop
nop
cmp
add
push
fildl
mov
mov
cmp
sub
fdivl
cmp
lret
sarb
pushf
imul
orl
xor
push
cmp
imul
lods
fildll
aas
jecxz
inc
lea
aaa
out
test
or
xor
jns
cwtl
je
push
jnp
ljmp
inc
push
pop
stos
mov
push
or
stos
push
repnz
sbb
cmp
in
int3
fwait
mov
scas
in
aaa
xchg
stos
stos
rcrb
inc
cmp
sbb
pop
out
and
in
inc
pop
leave
xlat
repz
std
daa
or
cmpsl
sub
sbb
sbb
cmc
push
bnd
dec
jae
std
aam
fnstcw
xor
dec
lret
shlb
nop
add
popa
inc
mov
xor
es
aas
cli
std
push
mov
jnp
lods
fs
pop
jecxz
into
call
aaa
insb
and
adc
movsl
push
mov
pop
add
fcmovu
sti
pop
and
mov
movsb
fwait
enter
pusha
inc
subb
sub
and
ret
sbb
and
dec
xor
loope
xchg
loope
repz
aam
pop
cmp
adc
leave
inc
fmull
adc
cli
jecxz
in
dec
sbb
stc
push
gs
ret
out
imul
mov
mov
lods
icebp
push
daa
hlt
shrl
mov
mov
iret
xchg
leave
sub
xchg
pop
mov
gs
popa
int3
cmp
xchg
neg
sahf
leave
mov
call
repz
out
inc
xchg
repnz
cmc
dec
lods
or
data16
iret
inc
jne
out
lock
std
nop
lock
out
daa
push
stc
sub
mov
pushf
or
and
inc
inc
mov
mov
adcb
adc
nop
mov
dec
add
pop
mov
jp
and
fmull
or
cltd
sub
sbb
insl
bound
rorl
or
xchg
sub
jo
shlb
aas
pop
addr16
gs
dec
and
cmp
pop
xor
ja
inc
fsubr
int3
pop
mov
loop
andb
scas
xchg
add
xchg
test
aas
stc
je
sbbb
or
into
les
and
adc
int3
inc
adc
pandn
or
sub
mov
xchg
mov
stos
or
testl
xchg
fs
xchg
js
or
ficoms
mov
pop
cmpsb
xchg
mov
out
or
orps
push
jmp
cmp
cmpsl
jns
rclb
inc
pop
aaa
pop
sub
addr16
movb
pop
cmp
xchg
out
xchg
sbb
push
iret
lock
mov
or
xchg
cmpsb
jg
ret
jae
and
cmpsb
sbb
xchg
out
imul
xor
and
mov
lock
mov
dec
stos
xchg
pop
lret
stos
imul
pop
nop
xlat
inc
xor
push
push
movsb
or
mov
and
mov
packuswb
repnz
out
mov
cmc
xlat
int
popa
or
pop
pop
cli
call
iret
mov
clc
add
divl
cmpsb
lods
daa
ds
ftst
sbb
add
inc
cld
push
xchg
test
lahf
and
test
mov
sub
imulb
in
mov
and
lcall
sub
jno
jle
std
cmpsb
nop
roll
rorb
jg
mov
dec
aaa
insl
pop
iret
fisubrs
data16
arpl
mov
mov
xchg
movsl
outsb
jecxz
sub
sahf
and
shlb
mov
jnp
adc
dec
jb
xor
loopne
aam
xchg
ret
jl
gs
mov
or
aam
or
mov
push
sti
frstor
std
inc
push
xlat
dec
loop
in
shrl
and
mov
jb
mov
sbb
pop
aas
clc
xor
outsl
jmp
test
sub
aaa
cld
or
add
sub
adc
mov
dec
jbe
int3
push
and
sub
mov
pop
inc
ljmp
jp
mov
and
popa
jae
mov
sahf
adc
popa
adc
test
divb
lock
data16
xchg
and
cld
and
or
push
test
loope
sub
sbb
inc
mov
sbb
js
xchg
xchg
in
sahf
mov
clc
adc
ss
insl
push
mov
dec
ret
push
andb
add
jbe
xchg
shlb
lock
test
dec
add
dec
ljmp
jno
mov
aaa
push
rcrl
es
aam
mov
fstps
dec
inc
mov
daa
movb
je
adc
mov
push
sbb
icebp
cmp
xchg
xchg
sarb
movsb
inc
cmp
jle
fldcw
inc
push
stos
sub
repnz
fwait
movsl
mov
jae
pop
shl
sar
mov
xchg
outsb
imul
cmp
movsb
xor
fimull
mov
xchg
out
insb
dec
mov
pop
sbb
mov
xchg
pop
shl
daa
test
cmpsb
sub
rcl
call
ret
pop
jnp
jns
out
xchg
pop
popf
orb
lea
and
insl
xor
mov
stos
iret
and
call
faddp
pusha
pop
popa
or
enter
loop
inc
in
mov
sbb
push
fwait
dec
push
cmpb
mov
jb
sub
orb
test
out
dec
aad
imul
jle
jmp
mov
inc
xchg
rcr
push
into
push
adc
jno
pop
mov
dec
sub
cmpsl
int
xor
xor
je
xor
push
sbb
sbb
test
lea
and
lds
bnd
out
xor
dec
push
jbe
ss
lods
pushf
xchg
fstpt
and
das
aam
test
fimuls
push
xchg
repz
std
xchg
hlt
xor
and
xor
cmp
dec
mov
sbb
and
lcall
xlat
adc
dec
jmp
jge
in
dec
mov
leave
imul
xchg
pop
jo
mov
sbb
data16
xlat
pop
xchg
adc
adc
enter
jne
insb
push
push
cmc
enter
sbb
jmp
dec
dec
inc
mov
jecxz
inc
adc
xchg
mov
sub
mov
stos
jb
or
dec
jnp
into
imul
mov
leave
test
cltd
ds
xor
push
lods
add
or
es
stos
push
and
data16
xor
ret
or
xchg
pop
notb
ja
push
loopne
xor
mov
icebp
insb
jns
jnp
test
in
add
es
cwtl
cmc
sub
mov
outsl
out
add
or
hlt
int
jl
stos
jnp
leave
les
pop
add
mov
je
fists
lods
pop
push
subb
scas
les
fcoms
outsb
push
xchg
ds
push
lods
popa
aam
sub
into
push
mov
mov
sub
pop
sub
pop
pop
or
std
push
cmp
sbb
dec
je
lahf
fcmovnbe
leave
mov
lods
pop
and
pusha
inc
aad
lods
popa
addr16
loope
or
ret
pop
lcall
or
mov
xchg
sub
lahf
enter
popl
xor
mov
popa
or
sbb
cmpsl
stos
or
inc
sub
nop
or
cmp
nop
mov
mov
jae
shrl
sub
decb
leave
xor
pop
xchg
mov
scas
lret
inc
sbb
push
mov
mov
adc
adc
lock
js
sbb
daa
sbb
push
push
or
sahf
mov
jns
lcall
mov
std
daa
sbbb
cltd
leave
pop
fbld
icebp
out
out
adc
movsb
fstpl
xchg
lods
int3
push
adc
dec
hlt
out
dec
mov
mov
rcr
push
enter
jecxz
adc
or
mov
popa
xchg
clc
inc
in
jo
cmp
std
xchg
adcb
fcmove
ret
push
test
jae
loopne
out
inc
dec
sbb
frstpm(287
dec
push
adc
mov
lcall
add
sub
sbb
idiv
fcomip
lds
inc
or
inc
push
mov
mov
or
jbe
aas
into
pop
dec
shlb
and
out
xchg
outsl
test
stos
pop
inc
jbe
xlat
mov
and
push
das
adc
icebp
mov
xchg
ljmp
sbb
ss
xchg
scas
insb
xor
adc
fcoms
jecxz
pushl
pop
jns
jg
imul
out
or
sbb
sub
adc
iret
adc
fucomip
or
dec
sub
mov
cmp
push
pop
popf
mov
into
sti
mov
pushf
push
and
lcall
pop
pop
xchg
movsl
add
add
sub
adc
lahf
fs
jno
cmp
fistl
into
js
or
shlb
jbe
pop
dec
pop
fildl
lock
add
fisttpl
dec
and
sub
ds
aam
cmp
mov
sbb
dec
les
or
sbb
jo
pop
and
rolb
add
outsb
pop
fdivs
mov
movl
mov
rclb
pop
mov
clc
outsb
lods
add
pop
inc
pop
roll
add
outsl
out
sub
add
insb
lods
and
icebp
mov
ret
add
imul
in
mov
or
cmpsb
adc
shl
cmc
call
or
out
ds
nop
sub
fsubl
pop
loopne
xor
in
fstl
cmp
ss
test
mov
xchg
xchg
rol
xchg
dec
loope
fildl
jo
xlat
jns
jg
movsl
jno
dec
sbb
cmc
push
dec
add
mov
cmc
dec
inc
cmpsb
arpl
movsl
sub
ljmp
inc
xchg
cmp
cmp
test
jae
xchg
dec
push
nop
loop
xlat
add
inc
lea
scas
fimull
jae
cli
and
or
stc
das
dec
int3
icebp
jl
mov
test
enter
mov
cmp
arpl
push
stc
es
lods
ss
aad
sub
fwait
push
mov
jae
mov
incb
cmp
dec
mov
sbb
mov
jl
push
sahf
cmpl
scas
add
mov
cmp
cld
jmp
sbb
mov
frstors
enter
rcr
data16
das
pop
add
lds
shr
mov
clc
pop
dec
sbb
push
push
test
fldenv
sbb
sub
and
pushf
clc
and
nop
sub
lea
in
scas
ss
mov
jo
frstor
cmp
cmp
dec
test
xchg
mov
xchg
sub
out
bound
sbb
in
insb
dec
aad
shr
or
jnp
neg
xchg
add
mov
subl
mov
mov
or
or
jno
sbb
sbb
sub
jns
aad
mov
rorl
cmp
and
ficoml
xchg
pop
fadd
xor
out
stc
movsb
mov
dec
out
out
pop
adc
or
cli
or
xchg
hlt
popa
testl
imul
fimuls
xor
nop
xorl
out
mov
xchg
fnsave
sbb
arpl
outsl
adc
dec
rclb
cmc
mov
mov
out
inc
adc
std
xor
rsqrtps
dec
ss
nop
fisubl
mov
pop
orl
push
fildl
jp
jo
ljmp
iret
jl
out
push
dec
lods
xlat
cmc
sahf
sahf
mov
sbb
loope
lret
inc
xor
movsl
xchg
cmp
popa
cs
mov
iret
mov
jae
or
add
inc
and
data16
or
inc
sbb
stos
imul
imul
popa
ja
pushf
push
adc
xlat
cmp
and
pop
add
pop
repz
leave
rolb
mov
in
xchg
cmp
inc
insb
inc
cmp
mov
stos
fdivrl
out
popf
push
imul
dec
sbbb
sbb
push
push
mov
and
scas
xor
sbb
sub
test
into
lahf
jne
imul
loopne
das
lahf
popf
jae
dec
jno
flds
lods
aaa
rorl
xlat
movsl
inc
add
push
not
push
jecxz
and
lods
and
in
seto
bound
xor
rolb
cltd
mov
insb
std
mov
add
or
xor
fmull
fisttps
xor
push
insl
fisubl
and
xchg
ds
nop
daa
xchg
jns
repz
xor
insb
call
fwait
pop
lahf
mov
jb
cmp
enter
fmuls
or
cltd
sbb
xchg
outsb
idiv
mov
lret
insl
lcall
mov
push
sbb
loop
push
jb
mov
rolb
int
add
loopne
iret
mov
mov
fldl
push
js
fdivs
pushf
or
in
and
dec
out
add
das
sbb
in
mov
xchg
in
in
std
xor
pushf
mov
andb
int3
inc
scas
insb
cli
or
jp
sahf
inc
adc
cmpb
cmp
xchg
pop
mov
enter
dec
out
daa
fldcw
add
iret
add
stc
xor
xchg
mov
mov
mov
stos
adc
nop
push
mov
inc
ret
jg
xor
sub
cmp
and
jp
in
imul
add
jne
xor
sub
jb
xchg
sub
add
and
arpl
fistpll
cmp
leave
push
mov
cld
sub
test
fs
pop
fmulp
and
mov
shrl
push
mov
xor
pop
insb
pop
dec
adcw
jae
lods
jmp
ret
imul
cmp
inc
pop
addr16
add
stos
mov
cmc
jg
sar
sub
xchg
dec
nop
fldt
xchg
aas
clc
sti
mov
rcll
scas
push
dec
mov
add
scas
inc
pushf
out
xchg
jbe
sub
mov
ljmp
add
sub
test
push
xlat
mov
pushf
loopne
and
cs
pop
pop
xor
add
cmc
mov
xor
lcall
jo
xchg
imul
inc
lock
mov
lcall
shlb
jmp
pusha
add
jne
sahf
xor
xchg
out
cmp
jg
mov
jnp
sub
or
pop
mov
push
adc
push
aad
fcoml
mov
test
xchg
testl
xchg
add
loope
leave
mov
add
jl
xchg
addr16
push
jecxz
xor
repnz
mov
test
dec
je
lcall
fs
push
scas
icebp
add
push
and
lcall
lcall
sub
mov
xchg
inc
xlat
xor
or
pop
into
sub
sbb
dec
xchg
shrb
xchg
jle
push
lea
shlb
push
push
call
adc
jae
lods
dec
insl
cmp
movsb
movsl
jbe
dec
dec
fs
in
ds
pop
xchg
push
dec
out
inc
xchg
mov
ficoms
jne
out
mov
repz
push
mov
filds
adc
int3
shll
inc
jnp
xchg
call
xor
jg
jp
insb
lret
es
iret
ficoml
pop
mov
aam
or
adc
out
lock
mov
enter
data16
scas
inc
or
or
rcrl
mov
ljmp
xchg
icebp
in
sbb
or
inc
jns
xchg
lret
inc
cld
addr16
sub
loope
repnz
fs
mov
sbb
xchg
cwtl
or
arpl
jne
pop
jmp
dec
mov
insl
mov
jnp
xlat
dec
jge
or
mov
inc
dec
inc
pop
mov
fnsave
cli
jmp
mov
fsubrl
xor
push
mov
inc
jg
pop
leave
jnp
dec
out
inc
xorb
jno
or
test
stos
cltd
dec
ret
xlat
pop
sbb
lea
lret
jl
xor
lea
cmp
xchg
lock
push
dec
push
pop
out
push
mov
mov
sbb
stc
addr16
cmp
enter
cld
inc
mov
jp
inc
pushf
sub
das
dec
sbb
rorl
in
cmpsb
frndint
or
jnp
dec
shll
ss
jmp
bound
pop
int
mov
mov
pop
popf
orb
jb
iret
cmpsb
mov
popf
inc
cmpsb
sahf
rolb
pop
pop
sarb
jae
negl
mov
fmul
xor
cwtl
xlat
adcl
mov
push
fsubp
nop
arpl
cs
mov
xchg
enter
inc
fwait
cmp
push
pushf
mov
data16
xor
and
mov
test
ficomps
inc
add
mov
xor
ret
jg
lret
js
insb
cmp
lock
or
aas
dec
mull
inc
mov
mov
loope
xchg
aaa
add
mov
jo
inc
rorl
or
pop
popa
and
popa
shlb
imul
int3
testb
jb
call
sub
pop
call
mov
lods
jmp
pop
mov
aaa
test
daa
mov
ss
dec
mov
pop
sbb
push
mov
loope,pt
lods
lds
mov
ljmp
add
mov
add
sbb
xor
loop
sbb
in
sti
jb
and
std
mov
roll
mov
fiaddl
aad
nop
stos
pop
sarl
inc
jne
imulb
adc
jns
out
adc
pop
sub
int3
inc
add
lcall
enter
sub
nop
lcall
inc
pop
mov
pop
pop
je
push
mov
inc
ffreep
js
pop
notb
sahf
aas
addr16
jmp
pop
dec
fcomps
mov
dec
lcall
mov
xchg
inc
mov
mov
mov
test
pop
add
lds
mov
loop
pop
cwtl
cmpl
clc
mov
jb
push
cmp
dec
pop
sbb
lcall
jecxz
pcmpgtd
inc
test
int
push
popf
cli
mov
test
mov
adc
test
imul
fwait
mov
test
jns
pop
movsl
cmpl
test
sbb
xor
sbb
fsub
or
sbb
enter
shl
aam
pop
movsl
dec
cmp
adc
icebp
divl
or
hlt
ss
sub
std
cmp
loopne
pop
daa
xor
mov
and
and
adc
imul
data16
pop
insl
aad
mov
sub
mov
ljmp
out
shll
ds
ficoms
mov
mov
adc
rolb
imul
mov
cmpl
adc
jmp
xor
pop
dec
cmp
in
notl
sub
mov
cmovb
push
jp
xor
icebp
mov
loope
test
or
mov
mov
inc
xchg
ret
mov
test
add
push
mov
mov
xor
xchg
pusha
faddl
mov
insb
adc
imull
popa
jecxz,pt
jge
mov
push
call
and
pop
cwtl
xchg
cmp
imul
cmpsl
and
icebp
out
xlat
mov
std
sub
pop
jbe
push
adc
movl
add
mov
cmp
lret
test
lds
jns
sbb
sbb
hlt
or
fnsave
jle
les
xor
dec
out
out
scas
hlt
cld
xor
jge
lock
jle
inc
subl
mov
adc
sbb
jle
jo
iret
xchg
dec
call
dec
inc
out
or
inc
subb
dec
mov
dec
jmp
mov
mov
pop
jae
popa
cmc
loopne
cmp
jp
push
das
mov
roll
add
movsb
and
pop
mov
jp
mov
call
sbb
lret
cmp
or
lret
xchg
fnsave
and
lret
adc
add
sbb
arpl
xor
adc
stc
shl
push
cmpsl
dec
movsl
pop
repz
push
adc
mov
push
pop
js
jbe
lea
and
fistl
add
imul
dec
sub
push
scas
into
cmpsb
mov
add
push
shrl
and
out
sub
push
inc
xchg
iret
sahf
out
xchg
stos
pop
mov
xor
sub
push
cmp
lcall
mov
scas
cmp
stc
lock
in
sbb
or
scas
mov
adc
jbe
lods
popa
cmp
lcall
or
cmp
push
scas
in
push
mov
cmp
aaa
inc
mov
fisttps
insb
or
lea
aas
jnp
pop
push
sub
enter
xchg
inc
in
mov
mov
lcall
xor
push
adc
lds
mov
nop
loopne
push
fisubl
cmp
rclb
sub
add
inc
pop
sbb
repz
clc
or
lcall
xchg
cmp
add
push
sub
and
xlat
push
in
push
lahf
adc
pop
loop
xor
mov
int3
add
push
test
adc
pop
and
add
jno
fs
sbb
push
iret
scas
insl
or
cmp
dec
pop
inc
leave
ss
xlat
flds
inc
popa
outsb
mov
jnp
enter
xchg
dec
add
sub
out
xchg
push
sub
stos
vcvtsd2si
and
or
jle
cmp
lds
xchg
daa
jl
imull
inc
or
shll
inc
jo
jbe
cmp
jl
xchg
aaa
push
subb
or
pop
xchg
aam
or
int3
call
sbb
pushf
jnp
iret
mov
fimull
das
pop
addb
pop
fstpt
scas
mulb
cmp
jl
cmp
lea
js
scas
out
or
mov
ss
adc
xor
loop
sub
xchg
pop
or
fidivs
pop
test
fs
push
pushf
aaa
rol
fsubrs
lret
or
inc
aad
mov
xor
das
xchg
in
fisubrs
add
das
or
inc
jge
mov
xor
or
mov
mov
xlat
cli
les
jecxz
out
cmp
push
push
add
push
lea
aaa
sub
jb
out
test
xchg
adc
jecxz
pushf
dec
sub
and
rcl
lock
or
stos
outsl
jb
mov
cltd
ja
xor
sbb
sub
cmc
cld
add
je
sbb
or
xchg
mov
adc
sub
mov
mov
popa
push
ret
xchg
mov
xchg
dec
push
aas
int3
xor
lret
imul
sbb
movsl
adc
test
lods
fdivr
fimuls
lcall
outsl
xchg
pop
xchg
mov
jne
mov
inc
inc
aam
xor
add
inc
into
cltd
mov
into
jg
mov
rcll
arpl
outsl
les
stc
dec
mov
ljmp
decl
jne
push
sbb
pusha
scas
outsb
mov
cmp
rorl
outsl
scas
cltd
stos
test
pop
fbld
and
mov
push
cmp
aaa
int
add
adc
loope
test
arpl
xchg
dec
cs
push
xchg
pop
or
xchg
sub
cmp
stc
mov
sub
or
xorl
mov
int
ret
xchg
fmul
leave
sub
orl
or
fs
mov
bound
jmp
and
pop
pusha
xchg
xchg
scas
push
into
mov
loop
adc
pop
jae,pn
jl
inc
dec
es
jl
cwtl
fnsave
mov
xchg
addr16
stos
nop
loopne
leave
jne
cmp
mov
in
outsl
lcall
aaa
mov
jge
jge
jmp
dec
scas
mov
mov
mov
push
xchg
sub
add
divb
or
xchg
xchg
stos
and
outsb
adc
nop
mov
lods
add
pusha
pop
int
jecxz
mov
mov
cmp
mov
stos
inc
aas
enter
std
fldenv
mulb
and
jge,pn
cmpsb
popa
daa
mov
and
dec
cmc
popa
jnp
jl
push
ds
call
clc
xchg
lods
movsl
sahf
scas
push
mov
xlat
cltd
cmpsl
cmp
sbb
movsb
lcall
out
ss
outsl
push
push
or
aad
cmp
xchg
jbe
add
add
int3
push
nop
and
std
xor
xchg
into
inc
fstps
jg
cmp
fdivl
push
mov
dec
cmp
mov
outsb
inc
dec
push
fwait
inc
jg
inc
push
push
cli
sti
stc
mov
dec
das
daa
outsb
call
adc
push
or
mov
or
mov
lea
dec
cmc
pop
xor
popa
fadd
pop
je
cmp
dec
pop
mov
sbb
pop
clc
icebp
or
adc
addb
fdivrs
adc
pop
in
leave
pop
fcmovu
movsl
adc
imul
cmpsb
imul
and
cmc
test
and
jbe
add
fmuls
lcall
scas
jmp
fildll
jo
fiadds
ret
addr16
dec
push
sbb
push
or
mov
add
xor
bnd
mov
rorb
dec
dec
out
sbb
inc
out
iret
and
scas
test
xchg
xor
pusha
outsl
fmuls
repnz
ret
cmp
xchg
xchg
mov
daa
or
dec
push
mov
cmpxchg
in
jge
mov
outsl
jnp
dec
popf
inc
xlat
jmp
ret
inc
cmp
mov
xchg
mov
cmpsl
icebp
sbbb
jb
in
sbb
mov
les
mov
fnsave
inc
out
jno
fbstp
inc
mov
call
aaa
cmp
xchg
push
in
or
daa
mov
xchg
jno
jg
push
jnp
push
arpl
idivl
push
lahf
cld
aaa
mov
pop
push
testb
outsb
sbbb
loop
mov
add
mov
jnp
push
push
lret
push
push
sub
dec
pop
div
push
ret
add
repnz
cmpl
ret
sub
aad
mov
sub
mov
jbe
sub
push
push
test
jne
push
push
js
fwait
es
inc
or
outsb
ret
shlb
xchg
xchg
mov
xor
rcll
cmp
cmpsl
pop
mov
jmp
xor
mov
mov
mov
push
repnz
adc
xchg
shrb
sbbl
mov
aas
or
stc
inc
mov
adc
pusha
test
lea
mov
push
rorl
xor
xchg
jae
cld
cs
mov
jae
sub
repz
repnz
xchg
jno
outsb
and
pop
cmp
test
ds
addr16
clc
sub
jne
scas
xchg
in
push
cmp
jno
mov
flds
scas
pushl
cmpsl
bound
fwait
cmp
out
clc
mov
xchg
sbb
pop
mov
cwtl
sub
imul
gs
shll
jg
adc
imul
in
cmp
xor
xchg
xor
pop
insl
mov
popf
sbb
xchg
push
and
or
xchg
subl
in
test
out
adc
scas
loopne
or
push
add
dec
inc
jno
imul
xor
cwtl
lods
cmp
push
sub
mov
cmp
int
dec
in
stos
mov
leave
sub
mov
loop
pop
mov
jl
es
lods
aas
lods
rorb
or
mov
cld
lods
clc
in
push
call
mov
mov
int3
pop
stos
inc
js
cmpsl
jne
jne
pusha
push
add
rcll
jecxz
sbb
rcrb
enter
gs
leave
sub
imul
testl
xchg
inc
fidivl
in
fsubrs
mov
mov
mov
scas
lahf
stos
fadds
fsubr
push
pop
pop
rcrl
dec
mov
push
test
hlt
dec
idivl
jg
jle
dec
sbb
addr16
dec
adc
xchg
adc
sbb
mov
sub
mov
roll
stos
jnp
push
out
add
push
pop
lcall
mov
ss
sub
mov
inc
xchg
leave
popf
mov
lcall
notb
lcall
shr
mov
cmp
pusha
mov
ja
test
push
je
push
lock
pushf
xchg
dec
sbb
mov
push
or
ds
popa
movsb
outsb
cmpsl
mov
mov
leave
cwtl
leave
dec
mov
xor
inc
pop
repnz
daa
nop
sbb
push
xor
mov
es
sub
sbb
pusha
imul
es
pop
lds
dec
push
jns
pop
or
jecxz
jl
out
cwtl
pop
xchg
cmp
and
xchg
cmp
xor
sbb
bound
dec
cmpsl
lods
jo
cmpsb
call
jge
popf
mov
sub
lret
lods
add
scas
adc
test
test
loope
push
xor
addr16
insl
dec
mov
leave
add
xorl
mov
hlt
sbb
xor
aas
jecxz
adcb
push
adc
aas
fs
xchg
jp
add
pop
add
jb
fists
xchg
sub
fmuls
lcall
mov
mov
arpl
cmp
sti
hlt
fidivrl
mov
aaa
ja
daa
inc
pushl
pop
xchg
jge
in
notl
add
mov
jno
jmp
shrb
daa
lret
jbe
scas
mov
mov
dec
and
pop
jl
push
sahf
or
jbe
inc
adc
sub
add
mov
push
mov
rolb
sbb
int3
add
sbb
mov
dec
ss
clc
inc
pop
into
cmpsl
aaa
jmp
shrl
adc
popf
dec
shlb
xchg
icebp
shl
and
dec
gs
fistpll
sub
leave
jns
jge
insl
repnz
fistpll
xor
push
mov
cmpsb
in
fistps
lret
pop
mov
gs
in
pop
xchg
push
cmpb
mov
popa
fistps
insb
repz
insl
in
lock
xchg
xchg
out
ja
data16
ret
cli
jns
sbb
xor
adc
mov
dec
aaa
mov
mov
popf
xchg
data16
sub
stos
mov
xor
xchg
xor
push
jmp
jmp
push
jne
mov
movsb
into
add
insl
ljmp
mov
in
pushf
shrl
scas
xor
imul
push
adc
frstor
cli
adc
sbb
int
cmp
cwtl
xchg
jg
fucomip
sti
push
mov
test
add
jb
pop
sbb
pop
lock
xor
popa
and
inc
mov
push
ficoml
sbb
or
adc
aaa
shlb
aaa
or
inc
hlt
ficompl
sub
jecxz
mov
jns
and
inc
cmp
adc
das
rorl
pop
cmp
test
add
das
dec
in
and
cmp
clc
cmp
es
pop
xchg
hlt
in
cmpl
xor
and
xor
inc
repnz
je
imul
cld
enter
push
out
push
push
sub
shll
andl
cli
clc
pop
scas
and
jecxz
push
xor
sub
aam
int
dec
out
inc
cld
xchg
xchg
jecxz
xlat
dec
push
into
mov
test
adc
add
mov
cmp
adc
jae
into
inc
sub
dec
push
sbb
in
cmp
mov
jbe
cmp
jns
cmpsl
add
imul
xor
xorl
es
pop
pop
inc
call
ja
sti
xchg
and
cmp
popf
push
inc
sub
movzbl
jp
or
and
imul
int
xor
jmp
fadd
xor
sbb
mov
dec
inc
fs
pushf
lock
cmp
je
cwtl
jo
stc
shl
cli
jecxz
or
es
fiadds
sub
add
dec
add
xchg
fwait
cmc
lock
addr16
adc
ds
aam
stos
cmp
roll
pop
dec
lahf
pop
lock
rcr
push
cmp
insb
into
and
fcoml
into
cld
addl
cmp
in
cltd
or
mov
xchg
stos
leave
mov
xchg
inc
jmp
sbb
das
pushf
inc
scas
mov
mov
mov
iret
mov
repz
fnstcw
repz
push
hlt
stos
jge
int
mov
movsl
ficompl
mov
sub
xchg
push
xchg
push
push
stos
pushf
dec
sbb
jl
pop
fucomi
je
jmp
mov
pop
pop
ja
xchg
decb
mov
mov
outsb
lock
xchg
mov
sub
out
dec
repnz
aad
xchg
cmp
outsb
sti
mov
adc
pop
push
mov
and
ss
lods
xor
push
popa
xchg
pop
adc
dec
cwtl
cld
fadd
dec
in
push
pop
xor
fwait
push
incb
push
in
push
repz
ss
sub
subl
mov
inc
out
pop
out
in
xor
pushf
pop
cmp
into
mov
andl
xor
push
lds
xchg
pop
pop
xchg
fs
dec
dec
or
sahf
mov
xchg
jmp
pop
aaa
xchg
movsb
jne
jae
hlt
imul
sbbb
xchg
and
xor
cmpsb
pop
add
jmp
xchg
xor
jle
xchg
jno
dec
adc
movb
mov
push
xchg
jecxz
and
test
pop
adc
pop
adc
add
jne
jns
test
adc
mov
jge
fisubl
movl
xor
mov
pop
insb
and
sub
lcall
scas
mov
loopne
mov
lods
dec
scas
in
jl
fadds
test
cltd
out
dec
mov
out
inc
push
jp
mov
inc
in
test
outsl
jnp
push
inc
cmp
in
sub
mov
dec
ds
aam
lods
cmc
imul
cltd
into
sti
ds
mov
dec
mov
sarb
cmpsl
xchg
arpl
iret
iret
inc
and
sahf
jnp
rcrb
push
lret
ret
push
add
mov
and
repnz
imul
mov
fdivrl
loop
gs
fisttpll
jnp
jbe
rcrl
dec
mov
pop
xchg
adc
dec
xchg
int
inc
pusha
ficomps
repnz
movsb
int3
mov
and
sbb
jle
int3
mov
test
push
mov
test
adc
popa
scas
in
dec
lods
ret
push
xor
mov
xchg
add
cs
icebp
inc
int
iret
aam
pop
scas
cmpsl
xchg
mov
sbb
icebp
xor
loop
cmpsb
jmp
addr16
sbb
jae
xor
es
shl
int3
xor
jnp
xor
dec
xlat
outsl
adc
and
pop
in
pop
cs
std
daa
inc
mov
cwtl
aaa
shlb
jbe
jns
push
imul
fwait
sub
jbe
inc
loop
or
or
inc
daa
arpl
sub
sub
outsl
cli
push
push
jge
dec
loopne
shrb
or
jbe
in
adcb
inc
movl
sbb
pop
das
aaa
cli
mov
icebp
lret
cmp
pop
fbstp
test
jmp
pop
test
mov
sub
mov
mov
or
movsb
xlat
aaa
lcall
stos
sub
mov
stos
or
jmp
aaa
add
inc
addr16
outsb
push
mov
roll
or
mov
xchg
aam
call
leave
jp
mulb
lret
inc
and
jo
or
adc
mov
sahf
andl
mov
pusha
into
xor
sub
xor
xor
push
shlb
iret
mov
xchg
mov
xor
call
inc
sub
mov
pop
mov
inc
mov
push
hlt
adc
adc
test
jae
xorb
pop
imul
cmp
inc
aad
xor
push
xor
sub
cmpsb
and
add
add
lcall
xor
js
shlb
and
ja
test
cmc
mov
ja
sbb
add
add
inc
aaa
or
jecxz
or
movl
jmp
shrl
lret
adc
sub
popa
push
cld
ss
push
shl
mov
aad
mov
cmpl
inc
mov
xchg
adc
fucomp
int
popl
loopne
loop
testb
jae
popf
pop
stos
pop
lret
out
ret
popa
fs
aad
sbb
cwtl
xor
and
sbb
loop
cli
pop
lahf
lret
mov
pop
daa
inc
jl
pusha
les
fisttps
movsl
inc
dec
sbb
push
mov
add
inc
cmc
push
jne
dec
mov
dec
jp
mov
pusha
test
pop
push
es
in
jnp
sbb
movsl
sub
jno
xor
cmp
dec
and
ret
loop
bnd
out
js
sbb
sub
outsb
inc
dec
fwait
mov
cmpsl
and
sbb
mov
test
mov
pop
cmp
xor
jl
mov
mov
push
es
lret
ficoms
jp
mov
sub
mov
aad
mov
jb
sub
mov
movsb
test
or
mov
test
inc
push
xchg
dec
ret
ja
mov
pusha
adc
rcrb
dec
pop
out
push
int3
dec
or
and
push
testb
cs
movsl
or
sbb
insl
in
mov
into
insl
iret
sub
add
mov
repnz
mov
or
inc
shll
cmp
or
aaa
adc
pop
jmp
xchg
cmp
dec
gs
pop
std
cmp
popf
pop
fimull
mov
pushf
and
jge
pop
arpl
ljmp
mov
dec
or
xchg
xchg
xchg
sbb
push
ja
ret
mov
inc
addr16
imul
ja
jecxz
or
loope
lret
test
sub
jg
inc
leave
add
addr16
imul
shll
icebp
sub
test
cmp
adc
scas
icebp
stos
mov
enter
mov
mov
mov
inc
lods
xor
push
lret
pusha
mov
jmp
cmp
xor
pop
loopne
loop
lock
lret
inc
popf
movsb
adc
ret
and
std
movsl
mov
test
imul
pop
cs
add
aam
sub
scas
sub
pusha
xor
inc
pop
jne
xchg
push
jmp
stc
xor
popf
mov
add
outsl
mov
int
ja
add
push
aaa
and
gs
xor
fcoms
test
add
mov
xchg
cmp
cmp
mov
sbb
insb
pop
dec
mov
sbb
xor
outsb
inc
or
aam
sub
shrb
out
ja
push
xchg
je
xchg
adc
xor
xchg
mov
outsl
mov
out
xor
std
jno
sub
outsb
dec
dec
adc
sub
sub
fs
stos
hlt
movsb
je
xchg
pop
add
stos
sub
stos
sub
cli
jns
jo
movsb
addr16
xor
daa
cwtl
jmp
loope
adc
xchg
arpl
xorl
ljmp
mov
inc
xlat
cs
or
shr
imulb
or
in
popf
and
repz
fwait
xor
jl
pop
daa
push
popf
lahf
xchg
sub
and
xchg
cmp
lds
cld
jp
adc
mov
rclb
lret
jns
into
mov
inc
push
add
addr16
jge
mov
js
rcll
lds
pushl
mov
mov
xchg
mov
adc
jnp
adcl
jg
mov
cmp
popa
ficomps
push
shr
mov
inc
mov
cmp
sub
ficompl
lahf
push
mov
outsl
popf
aad
int3
jecxz
adc
lret
fildl
lret
lods
test
cmpl
stos
lods
jp
or
popf
insb
test
outsb
sbb
mov
cld
outsb
add
into
pop
xchg
xor
insl
sub
push
add
cmp
mov
cmp
mov
jg
jae
sub
popf
mov
icebp
testb
out
mov
fisubrs
lret
mov
dec
adc
jne
push
inc
gs
mov
lret
ss
mov
pop
push
js
out
inc
jne
ror
ds
stos
out
ja
dec
cli
and
xor
dec
aam
dec
lcall
inc
imulb
mov
dec
mov
cwtl
into
std
mov
pusha
xchg
adc
xor
mov
cmp
jns
cs
test
xor
xor
jb
leave
xor
repnz
mov
repnz
jl
pop
inc
mov
mov
out
sbb
cmp
or
jle
popf
mov
push
jb
xchg
adc
loopne
jbe
in
hlt
pop
daa
mov
lods
movsl
cmp
mov
or
mov
or
outsb
add
fbstp
push
imul
lock
xor
fwait
aaa
adc
sbb
add
jl
jb
decl
daa
pop
ljmp
mov
mov
push
jb
jge
add
cli
js
int3
test
mov
es
in
jmp
adc
jo
out
mov
sub
stos
popa
fdivl
xchg
inc
fnstsw
ss
subl
mov
out
add
ja
leave
data16
shrb
pop
cmp
add
cld
jp
scas
add
sub
test
fdivr
out
sti
dec
adc
cmp
push
imul
int3
xchg
ret
and
dec
adc
sbb
push
aas
dec
xor
xchg
jge
or
mov
std
xor
ret
roll
fidivrl
ljmp
lods
outsb
fmuls
cs
and
push
pop
jmp
jbe
test
pop
adc
jmp
scas
dec
loope
adc
inc
je
inc
fisubl
jmp
and
lods
push
pop
sbb
hlt
dec
dec
cmp
scas
cmp
fs
leave
cmpsl
rclb
jb
lret
xchg
sahf
lcall
arpl
ficomps
pop
data16
nop
sub
sbb
fldt
mov
adc
add
mov
inc
sti
movsb
lds
fbstp
pop
jg
sub
sti
data16
mov
add
pop
cmp
sahf
loope
jno
idivl
adc
pusha
cmc
add
push
jp
cltd
jp
ficoml
idivl
sub
test
divl
push
pop
cmp
test
push
fwait
mov
lods
scas
shlb
cwtl
test
fs
std
push
fisttpl
cmpsl
ds
fldt
jp
cli
ss
sti
dec
xor
push
cld
jns
fs
jp
jne
and
cmp
cmp
repnz
data16
repnz
int3
cmp
adc
xor
dec
jns
lret
call
lods
cmc
push
add
or
outsb
popa
adc
stos
loop
jmp
imul
inc
xchg
adc
and
adc
int
mov
lcall
in
ret
cs
orl
in
cmc
mov
jg
out
shr
mov
push
fbstp
jge
dec
push
push
pop
aaa
cmp
sub
mov
jne
push
mov
mov
jns
sarb
inc
sbb
xchg
mov
adc
and
push
inc
mov
sbb
adc
mov
inc
aam
fdivl
cli
inc
lods
mov
aam
and
mov
imul
jg
std
imul
in
fwait
adc
xchg
dec
sbb
xchg
mov
dec
cmc
popf
adc
fildl
push
sbb
mov
jmp
mov
cmp
rol
std
mov
push
jg
ljmp
ret
jmp
movsl
xor
jle
jg
cmp
jmp
sub
adc
sbb
xor
xchg
aad
aaa
push
stos
fimuls
jmp
lods
in
jbe
insl
fld
cmpsl
scas
mov
or
test
sub
xor
pop
push
jp
cmpsl
mov
dec
inc
les
dec
insb
mov
repz
sbb
es
iret
and
add
xor
pop
jecxz
push
mov
imul
dec
fdivp
in
icebp
in
jns
mov
shl
fldenv
icebp
movswl
imul
adc
lahf
inc
inc
push
and
sti
je
inc
mov
adc
ret
ret
mov
