loopne
add
imul
pop
jg
xor
xchg
lods
xor
jl
and
sbb
mov
enter
cwtl
pop
fwait
or
dec
sbb
sub
inc
mov
adc
popa
shlb
mov
jg
push
ficoml
jge
in
mov
sbb
mov
cmc
cltd
andb
dec
sbb
out
sub
ficomps
scas
xchg
imul
lock
jp
xchg
rolb
mov
adc
push
fistpl
cmc
lcall
sbb
out
cmc
inc
mov
test
insb
push
popf
adc
sahf
outsb
xchg
shrl
cmpsl
mov
xor
into
pop
jmp
loop
leave
fwait
idivb
xchg
lods
sbb
or
adc
pop
mov
es
pop
rcr
sub
cmpsl
movsb
push
mov
iret
inc
in
pop
loop
in
gs
sbb
xchg
or
popa
dec
xorl
dec
and
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
dec
cli
jl
push
lds
lret
xlat
jbe
in
jmp
xchg
mov
adc
xchg
mov
dec
pop
int3
pop
jae
sub
sub
test
sub
fwait
sub
mov
ret
testl
stc
aas
ret
sbb
ret
jns
cwtl
xlat
xor
mov
nop
jmp
insl
nop
pop
sti
cmpb
xchg
call
daa
imul
sub
loopne
sub
pop
cmp
xchg
sbb
cmc
hlt
cs
test
popa
roll
or
add
pushf
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
fldenv
mov
add
add
add
lds
add
rorb
shl
jne
out
jbe
stc
dec
ja
pushf
rorb
mov
ret
stos
mov
push
mov
std
rclb
adc
das
and
pop
lea
sti
and
inc
sub
subb
filds
mov
stc
cmc
aad
subl
pop
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xor
cmp
ret
cmp
dec
cwtl
cmp
jecxz
test
data16
pusha
lds
loopne
nop
xor
mov
mov
xor
xor
fisubs
mov
popa
mov
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
nop
iret
in
xor
test
fidivl
jl
xchg
mov
mov
iret
leave
xchg
mov
push
int3
dec
sbb
xchg
sub
rcrb
dec
hlt
arpl
jno
mov
mov
cvtdq2ps
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
jl
inc
out
push
xchg
fildll
xchg
mov
rorb
shll
xchg
fistpl
das
xor
aas
pop
mov
out
jnp
mov
xor
fwait
enter
inc
loopne
lcall
lret
lahf
out
xor
xchg
inc
pop
jns
or
out
sahf
call
jg
jb
lcall
jl
aaa
xchg
adc
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
ret
mov
addb
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
in
jmp
jne
pusha
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
test
rorb
push
aam
mov
fiadds
imul
xchg
lcall
lods
mov
add
mov
mov
aad
lods
jg
popa
lds
inc
int3
cmp
jb
lcall
rolb
sbb
xchg
sbb
roll
mov
xor
negb
dec
je
mov
out
jnp
out
pop
mov
stos
sub
insl
push
ds
inc
inc
and
ret
dec
je
push
jne
sbb
push
aad
shlb
hlt
inc
nop
scas
orb
cmp
jmp
movl
pop
inc
add
es
mov
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
scas
mov
mov
cmpsb
int3
test
outsl
aad
pop
dec
pop
ss
jno
popa
mov
inc
adc
inc
jmp
or
lar
lahf
sub
shl
mov
and
mov
out
js
lret
or
cmp
cmp
push
repz
ret
add
and
adc
mov
sahf
imul
sti
and
jbe
outsl
icebp
push
mov
or
fwait
test
lods
test
mov
pop
aaa
push
inc
add
scas
fisubrs
loop
mov
pop
stos
out
inc
push
mov
int3
insb
scas
pop
clc
mov
cmp
lock
mov
pop
dec
mov
jnp
hlt
sub
cli
outsb
out
jb
inc
inc
fcomps
and
popa
frstor
dec
subl
popl
xor
sub
adc
ficoml
and
inc
push
jecxz
rclb
xchg
and
mov
comiss
leave
das
stos
jo
xchg
or
mov
fildll
xor
push
les
rcr
ljmp
lcall
outsl
fidivl
push
push
fs
pop
mov
in
mov
scas
aas
mov
xchg
aam
adc
clc
pop
mov
int
icebp
inc
xor
popa
aam
xchg
in
xor
pushf
pop
pusha
outsb
mov
ss
neg
push
pop
adcb
pop
add
mov
inc
jns
xor
dec
dec
dec
loop
stos
add
inc
pop
shll
sahf
lcall
sarb
and
mov
push
cmp
sti
ficomps
push
cmp
dec
adc
in
aad
aad
mov
add
inc
ret
sarb
mov
inc
mov
clc
sub
pop
inc
lea
test
inc
rcl
arpl
repnz
mov
imul
subb
pop
test
push
lret
ret
dec
mov
sahf
les
dec
aad
and
out
dec
jno
inc
out
xor
aaa
es
ds
sbb
jns
out
shl
adcb
nop
xchg
xchg
loop
xor
lahf
xchg
jnp
push
dec
movsl
fdivrs
add
xor
xor
and
mov
dec
inc
into
lods
or
mov
xchg
dec
cmp
jae
sub
xchg
jle
lret
sahf
mov
inc
popf
xlat
jnp
add
sbb
dec
jae
sbb
scas
loope
popf
mov
repz
jg
mov
out
pop
adc
daa
aam
imulb
aad
mov
mov
jmp
in
call
sti
jae
repnz
fisubrl
mov
cmp
movsb
bound
xchg
imul
scas
push
and
xchg
xchg
test
pop
sub
or
cmp
push
pop
and
sahf
pop
or
xchg
mov
inc
ret
stos
adc
mov
lea
xchg
push
mov
xor
mov
popf
test
xchg
movsl
jp
xorl
push
ljmp
jge
imul
ficomps
adc
test
pop
scas
cmp
adc
and
rorl
iret
jle
test
mov
jecxz
xchg
aad
mov
push
fldcw
or
in
leave
mov
mov
loop
in
emms
jmp
mov
out
add
lret
hlt
xor
rcll
lods
mov
shrb
loope
fnstenv
sti
mov
in
and
test
test
gs
out
cli
mov
sub
in
adc
lock
imul
push
jb
rcl
lahf
xchg
or
insb
xor
sar
in
or
repnz
dec
adc
add
fs
and
push
into
pop
clc
cli
dec
pop
sub
ljmp
mov
add
ret
sub
test
mov
fcoml
cmp
xorl
push
sbb
pop
push
or
pop
sti
cmpsb
in
shlb
sbb
sbb
adc
sbb
and
das
das
push
aam
sub
dec
aad
adc
ds
mov
push
pop
in
push
sub
inc
xor
je
mov
ljmp
and
test
push
mov
dec
sbb
push
or
les
mov
jo
jge
jmp
stc
rcrb
sbb
fcoml
imul
lahf
push
insl
into
sbbl
jmp
jmp
pusha
push
hlt
adc
xchg
push
movsl
lcall
scas
xor
cmc
sub
in
cmp
es
das
xchg
pop
insb
hlt
int
loopne
out
mov
sahf
fldenv
fcoml
aas
mov
ret
rcrl
scas
mov
loopne
lea
mov
nop
or
nop
imul
pop
mov
fiaddl
rcrb
push
hlt
lea
lret
sub
test
nop
mov
outsb
aad
pop
cmp
adc
cmpl
push
pop
mov
mov
mov
mov
cli
push
xchg
aam
jp
into
mov
inc
push
fs
mov
push
bound
push
dec
cli
imul
add
jl
in
jb
shl
xchg
mov
arpl
outsb
gs
mov
pop
push
jne
sbb
icebp
popf
dec
outsb
pop
cmp
pop
repnz
inc
loopne
or
pop
mov
les
cmp
add
pop
adc
pop
and
imul
inc
stc
adc
pop
xchg
cli
cld
cld
mov
dec
mov
es
clc
mov
push
rclb
xor
mov
and
dec
sbb
jg
je
popa
dec
rcll
mov
movsl
add
addr16
pop
cmpsb
mov
pop
shll
sbb
xor
inc
aam
xor
rol
dec
push
aad
fidivs
inc
mov
jnp
push
inc
roll
xchg
dec
out
sub
mov
out
outsb
ret
jae
pop
pop
cmpsb
and
push
int3
mov
or
jns
or
mov
push
and
leave
and
gs
inc
dec
int
leave
pop
enter
xchg
lret
iret
cmp
adc
mov
add
insl
insl
out
popf
or
and
xor
cld
lea
jle
jo
icebp
adc
push
cli
xchg
mov
subl
jb
pop
gs
mov
mov
addr16
ljmp
mov
je
shll
mov
xchg
push
inc
mov
xor
test
lock
adc
sub
dec
in
sti
std
mov
fcmovnbe
ss
loopne
jg
inc
jle
adc
rorb
adc
sub
out
in
lea
xchg
ja
es
fstp
stos
std
xor
int3
xchg
clc
pop
lea
jl
xor
pop
mov
lds
add
xchg
gs
add
jbe
je
fs
adc
xchg
dec
js
stos
sub
in
push
imul
jae
fbld
pushl
mov
push
pop
cmp
mov
ret
out
jo
inc
fsubrl
pop
clc
cs
jl
xor
ss
pop
xchg
mov
and
add
push
mov
adc
lea
je
int3
add
in
or
repz
sbb
mov
push
jmp
jne
pop
push
add
mov
popf
test
imul
leave
lods
fcomps
and
ret
orl
ret
lock
stc
rcrb
sbb
rolb
pop
jp
push
mov
jmp
cmpsl
and
mov
ror
iret
bound
xor
pop
stc
push
sub
sarl
mov
cmp
pop
and
stc
push
sub
into
lahf
addr16
jae
add
roll
test
pop
inc
jmp
cmp
in
add
inc
mov
test
clc
enter
mov
pop
inc
iret
icebp
out
mov
scas
aaa
cli
test
mov
loop
movsl
insb
sarb
cmpsl
and
test
jns
fmull
push
pop
fldcw
cltd
aam
dec
call
or
arpl
xor
and
insl
inc
jl
inc
adc
adc
into
vpmacsdql
lock
mov
jne
mov
sub
and
inc
imul
rcrl
andb
popf
arpl
cmpsb
or
xor
lret
xor
jp
push
les
or
xchg
cmpsb
int3
jp
mov
imul
mov
cmpsl
inc
call
insl
call
xor
push
outsl
fmul
scas
cltd
cmp
jo
in
xchg
bound
inc
movsb
adc
sub
adc
sbb
pop
out
add
mov
les
testl
ror
and
add
loop
inc
aad
pop
or
fs
cmp
pinsrw
add
add
ret
cmp
inc
xchg
fisubrl
xor
cmp
mov
dec
mov
adc
push
ds
xor
inc
mov
xadd
popf
lahf
test
mov
xchg
cmp
sarb
or
aaa
pop
shll
aas
imul
inc
outsb
pop
mov
dec
pop
mov
pop
jne
test
enter
rcrb
mov
sarl
fsub
out
aaa
cmp
cmp
jns
jo
push
ss
push
movsl
cltd
lea
xchg
subl
imul
in
fisubrl
popf
mov
xor
in
fildll
pop
xchg
loopne
loopne
test
iret
inc
test
mov
inc
dec
fs
mov
add
dec
jnp
enter
fsubs
adc
mov
sahf
shlb
add
lods
fsubl
in
mov
or
out
sbb
adc
sbb
pop
arpl
mov
push
into
ljmp
fadds
lcall
add
mov
sub
nop
out
adc
cld
sub
xor
xchg
repz
jg
sub
bound
lock
jnp
cmp
xor
mov
jns
cmp
jl
insl
cmc
inc
sbb
xchg
lods
sbb
mov
in
cmp
cltd
data16
aam
inc
add
cmc
push
clc
jmp
adc
xchg
lret
imul
rorl
jne
xorl
cmc
and
test
adc
inc
pop
out
xor
rcrl
mov
and
push
ja
add
sub
sub
andl
dec
into
inc
andl
sub
mov
cltd
data16
aam
pushf
push
mov
cwtl
mov
pop
cli
jbe
push
loope
aas
xchg
push
insl
mov
sti
out
pop
lods
imul
fstl
adc
sbb
dec
sbb
push
out
mov
lea
pop
mov
scas
jg
fwait
and
in
mov
in
xor
cmp
add
sub
mov
ffreep
popf
or
pop
lods
mov
call
or
stos
mov
xchg
xor
test
sahf
pop
nop
inc
leave
out
pop
mov
jae
mov
pop
sbb
xor
mov
call
jp
out
sub
push
xchg
sub
lret
mov
mov
out
data16
dec
and
sbb
fldl2t
jl
xor
fsts
adc
adc
stos
add
fmulp
in
push
xchg
mov
and
push
stos
in
cmp
ret
inc
adc
sti
inc
cltd
pop
mov
ret
adc
fisubl
xchg
out
xchg
fadd
fimuls
insl
out
lret
gs
xor
add
sti
or
les
push
jbe
repnz
jle
cmp
jecxz
mov
ret
pop
gs
lcall
inc
sub
jae
push
adc
jmp
je
mov
pop
pop
inc
adc
pop
pushf
mov
iret
bound
xor
inc
shrl
fists
fstpt
xchg
inc
into
sbb
mov
pop
push
aam
mov
dec
inc
xchg
lds
mov
fwait
adc
popf
cmp
mov
aas
lods
sub
loopne
and
pop
add
ret
rol
daa
mov
jecxz
xchg
fs
add
dec
adc
stc
enter
or
jb
fs
mov
pop
xlat
repnz
mov
bound
push
cmp
xchg
int3
gs
sahf
push
sbb
or
mov
gs
sbb
and
sarl
mov
add
mov
cmpsl
inc
cwtl
lahf
imul
loop
jecxz
xchg
or
sbb
bound
cld
inc
enter
sub
pop
mov
imul
fstl
jle
cmpsl
popa
js
divl
sbb
dec
push
lea
sub
pop
cwtl
insl
sub
orl
pop
mov
push
mov
pop
cmpsb
in
xchg
mov
movsl
mov
fisubrl
dec
cmpsb
es
mov
or
inc
sub
fstl
call
data16
pusha
cltd
mov
std
and
dec
cmp
orl
test
xor
mov
xchg
add
mov
and
push
popf
sbb
sub
xor
xlat
out
push
fistl
add
leave
imul
push
ss
push
add
loop
subb
loope
xchg
lods
sahf
inc
fiaddl
push
add
add
pop
sub
cmc
cmpsl
jno
or
fwait
dec
dec
pop
ljmp
sub
jg
mov
loope
es
and
fs
dec
mov
cmpsb
jnp
add
dec
fidivrs
push
xchg
lods
scas
ss
or
lret
mov
mov
sub
scas
pop
inc
lock
or
adc
aad
repnz
dec
mov
sub
mov
cmp
xor
out
dec
pop
jge
lret
sub
jg
xor
push
add
cmp
test
pop
cmp
cmpb
sbb
dec
mov
testb
lea
xchg
inc
jecxz
pop
push
cwtl
or
xor
jg
sub
mov
movsl
pop
jno
out
jl
dec
notl
pop
or
adc
call
int3
or
scas
add
scas
cmp
popf
and
out
into
pushf
sub
stos
jle
jl
dec
es
enter
fldcw
cmp
and
push
pop
sbb
sub
outsl
je
cli
cmp
mov
mov
or
cld
pop
movb
mov
and
inc
insl
and
js
inc
push
orl
idivl
xchg
fs
iret
rcll
inc
add
imul
imul
idiv
jp
adc
mov
movsl
out
fs
mov
adc
out
mov
out
and
push
pop
sbb
and
cmp
loope
cmpsl
xchg
insl
and
mov
or
add
mov
lods
mov
stos
dec
outsb
mov
sti
fdivr
cmp
and
push
scas
push
mull
repz
aaa
sbb
je
xor
push
insb
sub
loop
testb
out
adc
jnp
cmp
into
push
mov
ret
rcrb
insl
in
mov
push
mov
jecxz
bound
sub
pop
or
popa
loope
leave
das
inc
dec
lods
decb
or
aas
inc
adc
adc
scas
dec
loope
mov
mov
mov
fldcw
sbb
and
mov
dec
push
cwtl
out
xor
mov
sbb
shrl
sbb
adc
movsb
rcrl
inc
add
sub
icebp
mov
mov
dec
mov
sub
xor
and
shl
add
push
mov
sub
mov
addr16
xchg
jecxz
push
mov
mov
ds
mov
call
adc
dec
cld
addr16
lods
xor
mov
mov
in
mov
and
andl
in
jge
ret
jmp
iret
xor
or
add
inc
pop
inc
nop
xchg
mov
sub
xor
int
or
adc
enter
push
aas
and
or
push
mov
pushf
pushf
lret
push
test
mov
mov
and
mov
adc
mov
les
inc
xlat
aaa
push
test
cs
and
aad
daa
mov
mov
push
pop
lret
jno
adc
pop
sub
or
adcb
cmp
iret
xchg
and
jg
outsl
lds
lea
mov
int
fnstenv
push
shll
jge
cli
clc
dec
adc
mov
inc
lds
addr16
push
mov
cltd
xchg
test
push
nop
test
inc
mov
fists
adcl
stos
mov
loope
pop
outsl
jo
dec
rcll
and
sub
cld
lret
xor
push
fwait
jne
push
jecxz
nop
pop
sbb
pop
lcall
xchg
push
push
pop
repz
rcr
sti
dec
add
int3
xchg
popf
rclb
inc
fistpl
fcomps
push
aaa
dec
cltd
stos
cmp
ret
incl
pop
data16
stc
and
or
pop
jne
mov
mov
mov
in
pop
sbb
test
les
shl
ljmp
icebp
dec
std
loope
andl
out
stos
push
sub
inc
into
movsl
xchg
inc
loope
popa
test
push
test
and
xchg
std
rorb
orb
aaa
fmuls
push
and
cli
nop
lods
lods
mov
inc
inc
les
pop
jbe
fisubrl
daa
inc
or
jle
cmc
into
imul
shll
xchg
adc
push
insb
inc
mov
jbe
fs
adc
not
or
and
inc
loope
inc
out
movsl
int
mov
mov
jp
mov
inc
enter
adc
cmp
push
cmc
mov
pop
pop
inc
and
add
pop
fcomi
pop
test
xor
mov
and
ret
inc
sbb
sahf
je
aas
lods
test
insl
pop
mov
outsl
sub
mov
mov
and
xchg
shrl
inc
mov
notb
jno
in
add
add
in
imul
les
out
rcrb
faddp
xor
and
jmp
and
add
shrl
shrb
cmc
push
mov
pop
push
inc
call
and
xor
ret
inc
bound
add
sbb
pop
dec
pop
add
mov
pop
push
addr16
push
sbb
push
or
and
aam
inc
psrad
mov
adc
pop
jns
dec
test
inc
and
shlb
call
lret
aaa
lds
arpl
mov
xchg
inc
add
es
aam
cld
jg
negb
icebp
pushf
lcall
jle
fdivrl
cmpsb
push
inc
or
adc
cmpsb
frstor
jae
push
pop
scas
add
push
xchg
in
sbbb
add
pop
add
testl
adc
popa
gs
sbb
fcoml
push
ljmp
insb
mov
pop
aas
xor
xor
sahf
cmpsl
addl
jp
inc
pop
pusha
xor
inc
jmp
sbb
sbb
inc
mov
arpl
push
sub
push
filds
cmp
daa
in
jb
test
push
adc
sub
call
sbb
mov
aad
xor
mov
aam
flds
sub
inc
inc
ds
fcoms
popf
cwtl
cs
test
cld
scas
sub
push
and
jnp
les
dec
add
scas
cmp
inc
mov
jae
cmpsb
push
and
mov
dec
in
and
movsb
jb
imul
push
push
repnz
mov
and
movsl
insl
notl
jnp
setnp
jle
imul
xor
subl
lcall
mov
ficomps
sub
insl
cmp
adc
jno
inc
mov
and
jle
sub
stc
and
test
iret
test
jae
sbb
mov
test
cwtl
pop
add
jo
mov
aad
dec
pop
shrl
push
sarb
fcompl
rolb
pop
jl
xchg
mov
nop
ficompl
xor
push
mov
jb
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
jle
and
inc
or
out
or
mov
mov
or
dec
sub
push
rcr
cli
icebp
mov
jo
jne
idivb
mov
pushf
cmp
cs
clc
enter
dec
xchg
aam
push
imul
mov
jmp
test
dec
or
jo
jecxz
xchg
fistpll
bound
cmpb
pop
out
add
mulb
stc
dec
inc
outsb
pop
mov
xor
push
or
jb
lcall
hlt
jbe
dec
shll
lcall
adc
mov
jno
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
pop
pushf
insb
lods
mov
lret
out
mov
test
lcall
fldcw
inc
repz
rorl
sub
xor
mov
sub
xchg
test
dec
sbb
mov
push
jns
test
or
jns
xor
adc
adc
cmp
pop
scas
fsubs
and
or
sbbb
test
divb
iret
mov
lret
scas
and
xchg
add
sbb
cmp
test
sub
jbe
push
xchg
enter
loopne
insb
push
sbb
xor
and
mov
pop
sub
push
push
outsb
fimuls
in
cmp
pusha
sbb
xchg
int
ja
xchg
scas
test
push
in
out
push
insb
rorb
mov
cmpl
adcl
pop
rcrl
push
pusha
mov
stc
xchg
jns
in
push
xchg
pop
sub
jmp
xor
xchg
in
icebp
adc
cli
lds
cs
call
lds
push
dec
push
cs
ficomps
mov
xchg
dec
add
inc
or
in
loop
add
sub
ret
xor
push
repnz
dec
push
ljmp
ds
rcr
iret
inc
cwtl
and
notb
pop
lret
adc
jecxz
push
add
or
dec
ror
jnp
xor
add
mov
mov
and
negb
fnstcw
test
adc
in
pop
xlat
sbb
imul
mov
push
subl
xchg
adc
in
sbb
daa
cli
hlt
nop
clc
sbb
lret
push
rcrb
out
pop
ja
lahf
dec
shlb
scas
jo
adc
in
sub
scas
enter
jmp
sub
mov
adc
lret
cmp
aam
loopne
jecxz
xlat
xor
xchg
xor
repnz
das
arpl
int3
sbb
adc
ds
jl
fwait
lods
jne
jl
shrb
pop
adc
leave
cmpsl
insl
rolb
int
mov
ret
mov
lcall
imul
pop
jp
mov
cmpb
test
enter
xchg
or
mov
adc
test
rcrl
rorl
jmp
and
lret
fldcw
mov
divl
inc
mov
inc
dec
dec
shrb
jno
cld
jno
mov
add
xorl
loop
mov
test
icebp
pop
and
lahf
mov
rcrb
cmp
loopne
and
pop
icebp
sub
jmp
sti
insl
xchg
mov
jb
out
cmpsb
cmpsl
dec
fdivr
adc
int3
mov
or
sbb
cmp
add
rcl
push
sbb
insl
mov
dec
bound
inc
mov
test
pop
roll
mov
adc
jns
ljmp
xlat
mov
dec
adc
push
xchg
cld
xacquire
dec
sbb
inc
lret
sub
mov
inc
and
in
cwtl
jecxz
xchg
ret
push
test
outsb
andl
mov
pop
mov
pop
int3
pop
addl
js
pop
in
mov
pop
ja
addr16
xor
lahf
push
pop
leave
sti
hlt
jne
cmp
mov
adc
and
mov
xor
shlb
jo
push
xchg
inc
dec
imul
in
std
out
xor
sub
adc
jo
xchg
test
ret
pop
cmp
sbb
xchg
hlt
data16
sbb
or
xlat
stos
test
push
mov
sbb
xchg
pop
mov
or
popa
inc
in
aaa
test
pop
pop
and
fldl
dec
pop
mov
dec
mov
xor
mov
xchg
sbb
out
jp
stc
or
fwait
add
ja
pop
dec
mov
mov
inc
loope
imul
jnp
or
lea
sbb
arpl
pop
pop
lret
loope
adc
clc
xorb
pop
lahf
ss
mov
jno
outsl
repnz
jns
sahf
mov
or
aam
dec
outsl
sarl
ds
mov
sahf
popa
cmp
mov
fistps
lock
sahf
push
icebp
jmp
scas
dec
scas
mov
fisubs
push
loop
clc
jbe
xor
sbb
inc
cld
sti
pusha
fldcw
flds
pop
mov
mov
fucomp
mov
out
sahf
cs
xor
daa
ss
xchg
mov
or
xchg
jmp
push
xchg
add
je
or
fptan
enter
leave
insl
subl
pop
xor
fistps
jo
lods
data16
gs
ret
sbb
pop
dec
push
push
stos
ljmp
mov
stos
dec
adc
sub
nop
push
xchg
sub
sub
rcll
dec
insl
and
mov
xchg
and
pop
push
and
jp
sub
bnd
cmp
rcrl
insl
call
lods
out
aad
jne
ja
mov
push
sbb
mov
mov
fpatan
cmp
cwtl
mov
xchg
repnz
mov
or
sbbb
mov
mov
fbstp
sub
sub
add
mov
sbb
cmp
icebp
adc
lods
jg
stos
push
push
or
adc
jae
out
into
insl
mov
xchg
inc
notb
xchg
xchg
mov
dec
popf
mov
push
lds
insl
xlat
sub
jne
xchg
push
je
fistl
repz
loop,pn
cmp
push
stos
ljmp
int3
add
add
popf
addb
pushf
fidivrs
mov
mov
mul
or
mov
xor
and
adc
dec
cmp
jmp
movsb
adc
cmpl
jne
jg
mov
adc
sbb
and
dec
outsl
lea
cmp
xor
pop
imul
ljmp
inc
mov
shll
nop
loop
rcrl
inc
dec
arpl
pop
dec
push
xchg
rcll
insl
cmp
push
xor
mov
pop
mov
dec
jmp
ja
lds
test
les
leave
mov
or
xor
sbb
inc
ja
inc
xor
ret
adc
jge
inc
loopne
decl
pop
sub
and
xchg
sub
lahf
xchg
int
add
mov
jnp
test
or
das
sub
jl
push
inc
adcl
xchg
scas
jl
jns
call
das
popa
add
pop
push
movsl
jno
fucomp
cld
in
mov
sbb
imul
mov
adc
scas
sub
cmp
pushf
dec
jae
inc
fwait
jns
jns
pop
mov
xlat
mov
xchg
inc
inc
in
cmp
mov
push
ds
movsb
push
xchg
dec
mov
fisttpl
ficoms
mov
jns
nop
pop
push
notl
pushf
xor
adc
sub
lret
test
mov
and
out
sub
jecxz
ja
xchg
inc
sbb
and
sbb
xor
inc
and
fwait
int
das
add
mov
xchg
lret
mov
pushf
es
ret
mov
fs
mov
leave
sub
mov
loopne
jp
dec
adc
insl
mov
fwait
mov
shlb
fisttps
repz
mov
cmpsb
lock
pop
push
pop
or
mov
xor
testl
imul
add
mov
xor
testl
sub
cmp
mov
in
and
aas
insb
dec
and
mov
sub
and
jmp
xchg
cli
push
sbb
pop
dec
lds
lock
xchg
and
cwtl
lret
ja
mov
dec
gs
ds
sub
aaa
mov
xchg
test
cld
xchg
push
pop
dec
cwtl
out
or
mov
jle
cmp
mov
mov
lahf
sub
rorl
push
jae
mov
pusha
xchg
adc
lcall
lret
movsl
test
mov
jle
gs
mov
daa
jae
jmp
das
jge
mov
jns
scas
jno
rol
sbb
mov
xor
sub
test
cwtl
fwait
ljmp
pop
frstor
xor
push
jp
rorl
dec
cli
adc
mov
into
sub
lret
loop
test
int3
addb
or
test
les
xchg
es
es
inc
jecxz
ret
lods
gs
pop
lret
push
addr16
in
pop
xor
jo
pop
ret
in
xchg
mov
xchg
popa
and
imul
xor
inc
ret
hlt
jl
repz
stos
fldenv
fstpt
or
xlat
and
lcall
cmp
or
out
mov
pop
inc
sub
mov
mov
add
ds
dec
mov
fldt
fisubs
icebp
outsb
fisttpll
mov
in
outsb
hlt
xchg
data16
and
pop
push
lret
mov
push
test
mov
adc
enter
add
test
bswap
in
or
push
sahf
ss
jae
pop
in
mov
jge
mov
xor
lods
mov
pop
xor
lcall
push
sbb
aas
movsb
mov
push
add
inc
stos
gs
xchg
movsb
mov
xor
in
cmp
dec
jno
loope
mov
arpl
shll
push
inc
jbe
and
sbb
fld1
lret
xchg
bound
sub
ss
push
decl
mov
inc
hlt
ret
mov
call
dec
loop
repnz
repz
adc
mov
pop
push
dec
pop
sub
add
and
push
adc
mov
inc
in
jo
inc
cmc
push
cmp
aaa
or
lret
leave
ror
mov
sub
mov
adc
sbb
out
out
into
out
pushf
xor
xchg
pop
and
mov
loop
and
jns
jae
arpl
push
lods
in
in
fadd
int
addr16
jl
call
cmp
mov
push
jo
sub
and
iret
cs
sub
shl
hlt
das
or
push
fdivp
aam
sub
adc
and
inc
jl
sub
insb
sub
inc
data16
sub
pop
mov
das
push
mov
fisubrs
mov
iret
cld
pop
xor
cmpsl
cmc
test
jmp
inc
inc
fists
lret
ljmp
xor
es
stc
fildll
ret
cmp
rclb
cs
cld
add
add
dec
pop
cld
out
dec
pop
lds
shrl
adc
decl
addr16
orb
pop
jmp
mov
lock
in
jecxz
jae
pushf
jb
mov
pop
jl
jnp
mov
ds
iret
pop
mov
pop
aas
push
inc
out
mov
xchg
fidivl
jl
xor
inc
xchg
mov
outsb
imul
scas
sub
aad
jnp
inc
cltd
adc
ds
sub
fstps
and
iret
cs
in
out
pop
xor
jnp
or
scas
arpl
cmp
gs
ljmp
and
inc
adc
sub
repnz
test
lods
and
add
push
push
scas
cmpsb
jbe
jo
pop
inc
dec
lods
xchg
mov
push
jnp
fwait
dec
sbb
dec
outsb
mov
cmp
cwtl
push
mov
add
daa
mov
and
into
adc
outsb
inc
mov
push
cld
imul
ret
test
adc
and
pop
fwait
lods
pop
iret
ds
stos
inc
flds
and
or
pop
aad
es
mov
adc
test
push
loop
hlt
and
mov
inc
jb
push
je
add
mov
mov
mov
test
and
loopne
ret
sti
add
xchg
mov
inc
js
js
mov
int
pop
ljmp
ja
xor
push
std
clc
sbb
int
mov
mov
fldt
fmull
jb
add
inc
test
gs
cmp
sub
popl
xor
clc
mov
jbe
xor
add
jp
cmp
push
cmpsb
cmp
pop
cmpsl
mov
sar
loope
es
fldl
sub
sbb
sub
outsl
rclb
xchg
mov
sbb
and
push
outsb
pop
cli
and
dec
dec
xchg
lret
fwait
cmp
cmp
xchg
es
mov
xchg
popa
jo
jne
fbstp
xor
mov
lds
ret
jnp
hlt
inc
out
icebp
sbb
inc
jb
mov
jne
sarl
cmp
jl
pop
cli
xchg
adc
push
cmp
ret
push
cltd
xchg
mov
arpl
stos
pop
gs
sub
dec
fs
nop
lock
hlt
dec
cmpsb
jecxz
cmpsl
lds
jp
xor
movl
test
imul
js
fucom
jns
pop
cmpsl
js
push
adc
cmpsl
mov
pop
dec
jge
xchg
xor
pop
dec
arpl
add
out
bound
push
sub
cltd
jno
inc
add
fst
push
pop
cli
mull
add
lret
cmp
mov
dec
je
orl
sbb
add
dec
mov
dec
and
mov
inc
mov
test
in
call
pop
outsb
push
xor
xor
inc
cmp
stos
ja
out
sahf
js
push
mov
jl
inc
dec
adc
sahf
jmp
mov
inc
daa
jbe
jae
iret
add
inc
pop
in
mov
jns
cmp
mov
gs
dec
test
push
repz
fidivl
adc
in
repnz
aam
push
or
or
lcall
leave
mov
aas
cld
in
and
das
ja
aad
outsl
icebp
pop
mov
jmp
jne
xchg
das
xchg
in
pop
jecxz
fdivrs
in
pop
int
sub
pop
sahf
add
stos
push
xor
je
cmc
insl
inc
jl
push
pop
xor
mov
jnp
inc
mov
add
adcb
cld
pushf
mov
lds
push
fsub
jb
xchg
incl
cli
sbb
lret
daa
movsl
stos
fdivrs
aaa
inc
fstl
shrl
xchg
adc
mov
je
loopne
push
push
add
or
test
xchg
mov
adc
dec
into
ljmp
dec
add
xlat
shr
mov
cld
lret
jp
push
or
das
and
push
cmpsl
paddusb
or
inc
ja
lock
push
ret
xorl
subps
fadds
xchg
mov
cmp
das
loopne
dec
mov
jl
and
out
and
push
and
jbe
dec
in
andb
sub
fwait
cli
lahf
and
pop
repnz
cwtl
mov
aad
std
out
imul
stos
jmp
xor
cmpsl
mov
fnsave
daa
out
and
push
or
cli
sbb
cmc
dec
mulb
xchg
ds
dec
mov
fmull
pop
and
jb
jge
or
pop
pop
inc
mov
lds
mov
dec
cmp
sbb
pop
cmp
add
cmp
ds
xchg
pop
pusha
sti
dec
push
int3
sbb
jg
mov
stc
adc
sbb
mov
and
adc
stos
push
sbb
and
addr16
cmp
into
test
xor
mov
push
cld
xchg
mov
mov
pop
pop
iret
adc
push
jns
xchg
dec
inc
lds
mov
mov
int3
inc
pop
in
stc
mov
fisubrs
inc
pop
add
mov
pushl
adc
adc
inc
in
mov
xchg
xor
and
insb
std
notl
inc
push
cmp
in
in
jns
stos
mov
push
mov
test
js
mov
js
insb
jno
jo
cmp
push
adc
xchg
out
inc
rcrl
mov
add
negb
imul
popa
xchg
in
inc
lds
pop
mov
addr16
sti
pushf
mov
dec
aas
hlt
shlb
xchg
push
push
aaa
mov
arpl
sbb
pextrw
xor
sbb
jnp
pop
and
or
jno
inc
shll
cwtl
jbe
xchg
nop
call
and
pop
test
mov
jbe
mov
push
cmp
into
stc
cwtl
jno
xor
je
pop
dec
adc
jo
mov
xor
test
into
ljmp
repnz
sbb
addr16
insl
popf
ret
jmp
jle
mov
and
aaa
mov
inc
enter
loopne
inc
inc
outsl
and
jmp
xor
lock
repnz
adc
popa
mov
adc
mov
mov
add
inc
mov
daa
or
mov
dec
popf
lds
jb
shrl
dec
and
cmp
aaa
sub
dec
or
lahf
push
enter
mov
push
loope
jno
jnp
adc
test
mov
aas
mov
push
xorb
cmc
lret
jno
sub
add
aam
xor
addr16
arpl
imul
sub
pushf
outsb
cmpsl
cltd
psrld
or
and
xchg
in
fidivrs
es
lret
or
fdiv
jmp
adc
inc
sbb
idivb
cltd
sub
sti
xchg
andnps
cwtl
mov
sub
loop
cmp
push
mov
insl
push
or
xchg
orb
or
cmp
lods
inc
mov
sbb
fcmovnb
push
mov
sbb
fnstsw
std
mov
inc
cmp
in
movsl
pusha
mov
ret
pop
sahf
pop
add
test
jge
loopne
inc
cli
mov
push
and
jne
stc
cld
pushf
orps
adc
inc
fdivrl
xor
sbb
cmpsl
xchg
xchg
mov
jae
cli
or
mov
inc
pusha
xor
pop
loopne
call
or
mov
ds
cwtl
insb
mov
or
pop
hlt
mov
movsb
xor
adc
sbb
cmp
jmp
push
push
orl
inc
outsb
out
and
shll
push
mov
inc
inc
pop
ja
pop
xchg
rcrb
adc
xorb
sbb
or
xchg
pop
mov
testl
jp
sub
inc
hlt
jge
cld
and
nop
loopne
pop
mov
adc
push
or
add
jle
arpl
inc
lods
aam
mov
xlat
test
push
mov
add
repz
and
pop
stos
jp
mov
jl
fbstp
insl
mov
cs
push
clc
or
adc
test
rolb
fnstenv
insl
push
cwtl
int
sbb
lea
std
or
hlt
mov
dec
inc
inc
jge
outsb
and
xchg
lds
rcrl
dec
pusha
rcrl
pusha
or
orb
fildll
jbe
add
pop
adc
je
test
ret
ljmp
bound
inc
stos
push
cmp
ret
push
push
jmp
adc
fadds
mov
inc
sub
daa
jle
mov
cmp
push
mulb
pop
push
xchg
gs
addr16
divb
mov
mov
out
jge
mov
cmpsb
loopne
arpl
mov
clc
inc
sbb
pushf
call
ljmp
insl
popf
into
orb
xor
jp
or
test
loopne
imul
leave
sahf
push
cmp
mov
out
pop
inc
js
add
int3
adc
sub
sub
mov
mov
inc
aad
mov
out
jge
mov
ljmp
ficomps
dec
mov
adc
inc
mov
xchg
cld
fcompl
stc
inc
cli
cmpsl
idiv
or
std
notl
sti
push
xor
rcll
insl
mov
lods
inc
bound
mov
ret
in
in
pop
push
inc
int
movsb
or
jnp
jae
xchg
cli
jb
in
loopne
sub
push
inc
in
mov
push
jg
or
push
cmp
jg
sbb
push
std
push
dec
lock
xor
mov
movsl
and
jmp
mov
pop
adc
in
jge
es
jae
push
in
pop
sbb
push
pushf
inc
pop
mov
aam
xlat
pop
addr16
cmp
mov
lea
sbbb
add
and
sbb
jecxz
mov
int
sarl
fisttpl
stos
lock
dec
out
sbb
cmp
cmpsl
ret
sbb
aam
shlb
lahf
inc
call
mov
cwtl
cmp
ds
sarb
out
imul
cmp
pop
shll
shll
out
or
jb
inc
push
shll
jbe
dec
xchg
in
cmp
dec
push
mov
loopne
shll
lret
xchg
inc
pop
insb
mov
out
adc
pop
push
jns
sub
jo
cmp
icebp
testl
pop
lret
lret
xor
or
sub
ret
xchg
ret
and
cmpsb
or
ret
ficomps
mov
jp
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
stos
stos
jns
adc
call
push
bound
push
in
pop
aaa
jo
xorb
ret
dec
je
xorb
ret
dec
je
js
jle
and
inc
or
out
or
mov
mov
or
dec
sub
push
rcr
cli
icebp
mov
jo
jne
idivb
mov
pushf
cmp
cs
clc
enter
dec
xchg
aam
push
imul
mov
jmp
test
dec
or
jo
jecxz
xchg
fistpll
bound
cmpb
pop
out
add
mulb
stc
dec
inc
outsb
pop
mov
xor
push
or
push
or
push
push
fadds
fisttpl
in
xor
xchg
mov
pop
add
cmp
inc
jle
in
lcall
xchg
das
and
mov
lea
lcall
xchg
scas
jp
out
mov
sar
lds
jp
cmpsl
shlb
test
xchg
mov
fiadds
movsb
cmpb
jbe
pop
lds
shlb
test
mov
dec
xchg
frstor
mov
test
push
jecxz
insb
std
stos
push
test
lods
pop
sub
arpl
xor
sbb
daa
ja
cmpsb
daa
lahf
sbb
or
fwait
cmp
push
popf
lea
add
nop
and
push
fndisi(8087
mov
push
popf
pop
push
enter
mov
pop
mov
push
gs
fstpt
jmp
sbb
leave
push
pop
pop
cmp
rcr
mov
cmpsl
xchg
fidivl
mov
fiadds
sub
cmp
push
adc
or
dec
pop
adc
mov
jge
jge
sbb
notl
sbb
outsl
shll
jp
dec
iret
sbb
movsl
dec
push
inc
or
cwtl
xlat
inc
cmp
nop
and
sub
aad
nop
jbe
mov
add
sub
aaa
or
xorl
push
sahf
sbb
add
cld
push
rcr
inc
sti
dec
sbb
arpl
cmpsb
pop
xor
cmp
rcrl
dec
jl
pop
mov
lods
testb
shr
stc
cmc
aam
pop
pop
ret
scas
dec
inc
addb
inc
cwtl
lods
adcb
jl
out
loop
outsb
popa
ficoml
or
mov
fwait
mov
jcxz
add
mov
fistpl
mov
mov
ret
les
lcall
icebp
loop
loopne
stos
mov
popa
outsb
cmp
imull
gs
ret
and
mov
pop
daa
and
mov
add
clc
imul
lret
aad
cmp
sbb
cmp
push
jae
adc
stc
cmpsl
mov
repnz
push
mov
sub
in
movsb
shll
and
push
das
aas
xchg
insl
aaa
jb
and
lret
lods
call
xor
mov
pop
pop
cld
inc
mov
mov
jb
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
and
lahf
in
je
sub
xor
jnp
pushf
cld
test
push
mov
xor
outsl
popa
inc
into
rolb
mov
xchg
or
jno
xchg
shlb
lahf
repz
inc
ja
leave
and
popf
inc
outsb
pop
add
jbe
pop
leave
mov
lock
push
movsl
stos
cltd
sbb
test
jno
or
xor
or
sub
mov
mov
mov
mov
das
inc
pusha
dec
jecxz
sarb
jnp
sti
sub
mov
in
sub
lret
je
out
in
loopne
mov
adc
xor
pop
sbb
je
pop
aam
add
lret
add
cmp
hlt
leave
std
push
or
push
dec
push
test
inc
je
addr16
cld
inc
and
sub
adc
cmpsb
aaa
adc
jae
mov
dec
adc
mov
sahf
fsts
push
cmpsl
repz
push
in
mov
mov
cmc
loop
push
or
loop
cmpsl
mov
xchg
cli
dec
jo
jnp
arpl
mov
push
fwait
cmp
push
mov
pop
test
or
gs
or
xchg
sub
stos
xlat
outsl
popa
mov
loop
movsb
xlat
cmp
in
leave
inc
data16
push
fs
pop
adc
push
push
fidivl
cmp
sbb
mov
pop
mov
lret
xchg
sti
bound
xchg
stos
or
pop
shrl
std
daa
in
push
xchg
inc
lods
mov
out
mov
sub
push
dec
dec
cmp
mov
mov
shlb
push
jecxz
ret
cmpsl
jl
cli
ret
xchg
jo
rclb
pop
pop
iret
fadd
mov
mov
das
inc
les
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
xorb
ret
dec
je
pop
dec
pop
stc
loop
inc
outsb
jo
nop
pop
scas
xor
cmp
xchg
cmp
lahf
mov
push
cmp
push
add
lods
sti
sbb
adc
push
shrb
and
fnstsw
and
dec
imul
clc
mov
leave
and
lret
fiaddl
push
jle
pop
movsb
lods
xor
push
shlb
in
pop
inc
dec
enter
pop
imulb
sbb
adc
inc
arpl
ret
test
test
std
cmc
popa
loop
xchg
scas
mov
into
mov
cmp
mov
inc
shlb
mov
scas
or
sbb
lea
popf
push
mov
fwait
sbb
je
cmc
aam
cmc
dec
gs
lret
fildl
lods
dec
xor
xchg
divl
push
sahf
push
stos
dec
ljmp
movsl
xchg
addl
stc
inc
sbb
out
jae
cs
in
push
add
push
cmp
lea
movsl
test
pop
in
sti
or
jl
mov
out
pop
in
jns
je
jnp
push
int
dec
sbb
adc
pop
push
movl
mov
jno
dec
add
mov
sub
inc
pop
sbb
daa
push
adc
pop
sbb
cmp
dec
push
dec
xchg
add
xor
jno
ljmp
sub
repz
and
mov
jne
into
out
mov
mov
fdivs
add
jmp
and
shll
imull
ret
xchg
stos
fnstsw
mov
mov
xor
or
jns
in
es
or
shl
ja
mov
mov
mulb
adc
lea
repnz
and
adc
jbe
jbe
xchg
std
dec
mov
les
pop
rorl
sbb
dec
inc
mov
add
cmpb
mov
cmpl
lods
and
scas
add
xchg
ret
icebp
inc
shrl
push
mov
mov
loopne
sbb
pop
shlb
lds
xor
lret
jg
push
cmp
fbstp
add
mov
js
pop
bnd
sahf
int3
daa
or
mov
xorb
jnp
add
shr
int3
xchg
xchg
xor
cmp
cmp
xchg
or
icebp
je
cli
daa
sbb
fsubrl
fwait
test
xor
lahf
add
loopne
add
adc
in
jo
hlt
std
jne
sbb
insb
test
filds
jge
push
ret
inc
add
das
push
xchg
push
adc
mov
stc
addr16
cmp
push
gs
mov
dec
pop
pop
mov
dec
pop
cmp
jecxz
dec
and
jge
icebp
inc
scas
in
cs
adc
xor
sbb
pop
sub
cmp
jnp
cli
test
add
xchg
mov
xchg
fwait
in
iret
sub
jo
mov
lret
mov
jecxz
push
sar
pop
mov
inc
and
cmp
ds
and
sbb
repnz
lods
sub
mov
adcl
shll
dec
divl
cmpsl
push
jnp
and
scas
in
push
out
sti
jae
push
ds
xor
notl
xchg
movsb
in
xchg
cmp
in
cwtl
push
cmp
mov
mov
xor
xchg
adc
or
pop
rcr
xadd
add
faddl
cmp
fstpt
stos
xchg
jmp
mov
stos
adc
xor
pop
gs
dec
lock
xor
ss
ret
push
pop
jecxz
mov
ss
les
jne
in
xor
dec
pop
iret
xlat
mov
cmp
sbb
or
mov
clc
lcall
add
rclb
std
scas
in
popf
push
scas
out
insl
and
iret
fxam
mov
cli
push
daa
jne
loope
adc
mov
dec
jl
jl
outsb
inc
divb
sbb
xchg
adcl
ljmp
imul
pop
inc
xchg
and
incl
add
dec
lret
repz
aam
insl
or
repz
xor
sbb
inc
add
pop
sbb
push
repnz
insb
sub
push
cmp
imul
js
test
insb
xchg
add
loopne
sub
cmc
or
shll
cli
pop
and
iret
jo
hlt
xor
mov
notb
pop
pop
pop
movsl
inc
js
gs
sarb
stos
dec
cmp
jbe
hlt
pop
outsb
inc
fs
lods
pop
cmp
sar
leave
jmp
push
nop
test
dec
es
xchg
adc
fists
cs
jne
add
mov
mov
or
mov
mov
stos
movsl
sub
out
cmp
stos
sti
push
into
adc
fidivrl
lret
jg
outsb
int
jmp
popa
inc
outsb
mov
aas
jecxz
fisubs
mov
ja
xor
cmp
rcll
lods
cmp
movsl
cmp
lret
out
or
inc
cwtl
in
aaa
jmp
sbb
jecxz
inc
sbb
fbld
int3
xor
in
push
aaa
sub
test
cmpsb
xchg
adc
cmp
and
push
into
ljmp
scas
mov
jns
notb
in
lcall
push
jbe
ds
inc
jb
lods
arpl
mov
cltd
loope
test
out
push
mov
lods
add
push
ja
xchg
lods
inc
jle
outsb
gs
decb
inc
jno
adc
nop
popa
pop
cmp
addr16
movsl
ja
push
xor
push
jp
xlat
orb
sti
shll
enter
push
int
adc
fadd
in
jmp
mov
lret
sub
cmp
cmpsb
mov
pop
ret
ds
ret
aam
cltd
rclb
ljmp
aas
xchg
mov
aaa
mov
adcl
jp
push
bnd
jae
cmp
ss
add
sub
mov
push
nop
shlb
push
not
lret
sbb
dec
mov
add
xchg
pop
aam
dec
call
jecxz
push
mov
jle,pn
mov
stc
mov
lods
scas
insl
dec
pop
cmp
jb
push
pop
dec
push
nop
shlb
push
testb
cmpsl
jmp
jns
mov
and
arpl
sbb
loope
jmp
imul
and
shr
sub
adc
lods
cmp
fildl
shlb
push
imulb
inc
pop
nop
addr16
mov
or
in
and
jae
adc
iret
negb
int
push
stc
popa
bound
iret
cmp
dec
into
xorl
js
mov
jmp
hlt
jecxz
scas
sub
or
push
sub
aas
dec
hlt
push
adc
push
dec
stos
arpl
cltd
add
in
cmp
lahf
lahf
jbe
or
cmpsb
cmpsb
and
jl
sbb
xchg
sarl
cmp
sub
sub
xor
arpl
inc
ret
imul
ret
jb
out
sbb
icebp
cmpb
dec
mov
cmpsb
or
cmp
jo
nop
jmp
js
imul
test
or
jle
arpl
lcall
cmp
out
or
cli
arpl
xor
mov
lret
or
fstpl
dec
or
nop
fidivs
sahf
cmc
mov
cmp
sbb
sub
outsl
popa
pop
jns
stos
xchg
jns
fsts
subb
fsubrs
jnp
xchg
push
sbb
xlat
xchg
stc
and
cmp
and
dec
inc
xchg
fildll
aam
lea
push
xor
movsl
test
pop
lods
mov
arpl
enter
js
lds
fisubs
je
add
icebp
adcl
fmuls
or
push
out
frstor
xchg
outsl
sahf
faddl
popf
and
xor
add
push
movsb
daa
mov
aas
dec
sub
mov
incb
inc
dec
pop
ds
popa
dec
es
pop
pop
pusha
xor
dec
sub
push
test
mov
int3
ja
xchg
add
cs
cmc
adc
notl
xchg
pop
aam
cmpsb
shlb
hlt
and
push
jo
cs
pop
xchg
mov
inc
adc
pop
fldt
fxtract
ret
sbb
push
aam
rcr
shlb
xor
clc
std
inc
and
lods
pop
push
sbb
xchg
jns
add
ds
cmp
sub
lods
mov
or
mov
dec
out
ja
cwtl
cltd
cmp
in
xchg
inc
fisttpl
dec
add
or
jnp
mov
adc
jb
mov
icebp
dec
lret
sbb
ret
dec
jmp
jne
mov
push
hlt
add
adc
xor
nop
in
andb
stos
pop
sbb
and
pushf
xchg
inc
lock
lret
movsl
fstpt
ss
lods
fnstcw
ret
scas
add
fucomip
jmp
gs
adc
imul
adc
daa
xchg
mov
push
loopne
cmp
push
fimuls
and
cmc
mov
jecxz
push
cmpb
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
jmp
mov
xor
push
mov
pop
add
ljmp
leave
rcrb
pop
mov
cltd
xor
loop
and
les
push
pop
jge
cmp
out
push
ret
andl
subb
cmp
lret
pop
sub
cs
loope
push
fisttpl
in
dec
xchg
sub
xchg
pop
test
call
pop
jns
and
pop
fisubrs
sub
cmp
sbb
cmpsb
and
jb
iret
add
ljmp
mov
push
addl
stos
and
add
dec
lret
dec
ss
nop
in
push
cmp
inc
lods
rcrl
fs
outsb
jb
fs
iret
adc
sbb
mov
imul
pop
dec
cli
add
and
and
inc
inc
or
cmp
lods
sub
imul
shrl
outsl
xchg
out
jo
cli
idivb
test
mov
cmp
xor
pop
sbb
pop
jbe
ja
aam
inc
roll
xchg
lahf
aam
cmpsl
dec
aad
mov
mov
adc
inc
insb
lds
lock
and
pushf
insl
subl
sbb
xchg
push
les
icebp
imul
popa
mov
push
rcl
fucom
pushf
test
nop
popf
loop
cmp
imul
cmp
xor
xor
and
or
xor
test
inc
fdivs
into
mov
ljmp
lcall
and
sbbl
xor
cltd
push
xor
incb
rcl
pusha
sarl
mov
cli
cli
lret
cmpsl
lret
and
loop
and
sahf
pop
lahf
bound
dec
arpl
xchg
mov
das
and
lret
xor
loop
sti
cmc
inc
cld
in
or
cld
dec
sbb
ljmp
jo
pop
inc
sbb
mov
.byte
