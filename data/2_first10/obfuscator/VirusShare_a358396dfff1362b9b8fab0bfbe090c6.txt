inc
lds
sti
push
sbb
cmpsl
inc
sbb
test
jns
jmp
xlat
ss
cmpsl
dec
pop
nop
fcoml
mov
out
lret
movsb
or
mov
push
inc
sub
jns
repnz
shll
cld
sub
je
sub
icebp
in
inc
ficoml
nop
mov
and
cmp
std
imull
mov
jns
or
pop
inc
in
and
adc
add
stos
repnz
jns
outsl
ljmp
pop
dec
jo
ds
fsts
scas
aad
mov
dec
sbb
mov
dec
call
loopne
or
and
das
fiadds
aam
jmp
ja
dec
test
sub
xchg
or
mov
fildll
jb
lahf
jg
pop
mov
addb
and
lock
loopne
sqrtps
mov
addr16
jae
outsl
pushf
mov
pushf
pushl
ret
movw
pushf
lea
jne
ror
mov
push
cmc
add
bt
push
jmp
jmp
push
call
mov
xchg
nop
push
dec
cwtl
es
rclb
sbb
pop
pop
test
mov
in
iret
xor
push
fsub
lcall
fmuls
inc
cmp
xchg
or
xchg
sub
cltd
jns
lock
pop
nop
mov
xor
outsl
or
xchg
popf
jnp
in
fldcw
cltd
cltd
cmpsl
ja
addl
cmp
cmc
add
mov
mov
push
gs
mov
xchg
jae
iret
nop
push
xchg
stos
add
movsb
adc
rolb
shlb
sbb
push
xchg
add
and
sbb
jns
mov
int3
dec
test
test
test
xchg
mov
dec
pop
movsl
adc
imul
dec
pop
sub
or
jg
test
push
mov
xor
out
sub
hlt
bnd
shr
dec
push
fmuls
movsb
pop
iret
into
outsl
and
push
xchg
movsb
xchg
push
pop
icebp
or
xor
mov
add
imul
add
lahf
push
and
xadd
xadd
mov
aas
sub
test
bts
bswap
shrd
push
movzbw
push
lahf
sub
setae
push
sbb
movzbw
adc
sub
not
movzbl
movzbw
call
lea
jne
or
xchg
mov
shl
sub
bt
mov
bt
jmp
outsb
loopne
add
sbb
stos
out
fwait
xor
adc
adc
std
adc
sub
sbb
and
loopne
sbb
lods
stos
xchg
add
cs
pop
fists
sub
push
xor
pop
xor
push
push
lahf
rcrl
jg
xor
sub
test
shrb
cld
fwait
push
and
clc
je
xchg
fwait
pop
mov
mov
mov
push
push
inc
in
lds
sub
jg
and
cmp
mov
sbb
add
cmp
aad
testb
sbb
xchg
dec
xchg
mov
lods
subl
mov
mov
xor
cs
div
filds
les
cld
out
inc
lret
popl
pop
test
sbb
xchg
cmp
ja
stos
push
outsl
cwtl
add
pusha
shrb
and
or
lds
push
rcrb
into
stos
dec
pop
or
lods
movsb
pop
xlat
dec
icebp
mov
mov
adc
push
in
xchg
insl
iret
inc
pop
pop
movsb
cmp
lea
ja
call
and
xchg
addr16
out
iret
fdivl
and
lret
aam
sbb
push
test
xbegin
clc
xlat
push
sbb
cmc
mov
sarl
adc
mov
adc
inc
adc
ficompl
outsl
sub
add
sub
rcll
mov
xor
adc
add
mov
push
ret
jecxz
mov
push
sbb
cmp
lea
call
push
mov
pusha
pusha
lea
jmp
bt
or
pusha
pushf
lea
je
push
pushl
mov
setnp
lea
lahf
lahf
mov
mov
push
pusha
lea
jmp
pusha
jmp
pusha
cmp
mov
add
jmp
call
adc
lea
pushf
call
pushf
movl
pushf
lea
jmp
push
dec
mov
pusha
setbe
call
lds
xchg
jg
fninit
lock
sbb
sub
add
out
sub
sub
in
or
sarl
js
and
lea
pushf
call
pop
jl
pop
dec
dec
push
push
daa
test
cmp
inc
std
out
fimuls
sbb
int
cltd
fldenv
push
hlt
out
sub
adc
jmp
cmp
pop
jbe
loop
xor
or
out
aas
jmp
or
out
sbb
push
ljmp
das
push
xlat
xor
aad
and
inc
add
fs
mov
pop
cmc
push
mov
ja
lea
popf
jp
dec
sbb
push
loope
imul
mov
not
jmp
mov
movb
lea
call
call
push
lock
std
std
mov
popa
shlb
aad
lds
and
pushf
mov
pop
ret
lret
push
jg
or
jge
cltd
in
mov
mov
cmp
pop
push
enter
aad
adc
test
fisttpl
in
decb
fs
inc
hlt
push
in
xchg
push
data16
lds
lret
mov
insb
sbb
dec
or
testl
inc
sub
shrl
mov
iret
cmpsl
imul
cltd
nop
push
xchg
mov
adc
push
lahf
dec
call
dec
mov
mov
cld
pushf
lea
jae
pushf
add
jmp
in
jl
cwtl
bound
jle
out
mov
sbb
jl
addb
fcos
mov
jl
cli
sarb
lea
add
mov
out
inc
cs
adc
lahf
mov
sbb
cmp
mov
mov
popf
cmc
ja
sbb
pushl
pusha
pushf
mov
call
lods
mov
add
push
pushf
call
push
call
pusha
clc
stc
bt
add
pusha
push
call
xor
adc
movsbw
not
mov
test
push
mov
pushf
and
stc
add
lea
bt
test
add
pusha
dec
mov
call
jmp
push
inc
bt
not
call
stc
mov
dec
pushf
xor
sub
icebp
in
inc
in
cld
xchg
fisubs
aam
mov
enter
dec
incl
mov
pop
mov
add
sbb
decl
bound
push
das
mov
cmp
jnp
jg
insb
stc
cmp
cmp
cmc
add
push
jmp
call
pusha
mov
lea
ja
cmc
cmc
pushf
pushf
add
cmp
or
call
mov
jmp
add
dec
outsl
popa
fs
imul
add
clc
call
rol
push
rcr
sub
not
lods
cmc
call
cmp
jmp
add
dec
outsl
arpl
inc
jb
gs
insb
and
add
popf
sbb
popf
ret
inc
rol
ficoml
add
test
icebp
and
jge
stos
dec
inc
insb
push
dec
jg
or
call
in
xchg
mov
pop
add
sbb
mov
cmp
xor
and
mov
mov
pusha
and
lret
or
dec
mov
or
jb
sub
lret
inc
out
xchg
bound
xchg
cli
push
cltd
scas
jl
stc
ja
and
and
clc
ljmp
clc
pushf
test
movb
lea
je
cmp
jmp
add
dec
gs
popa
addr16
outsl
js
add
test
pop
add
cmc
cmc
cmp
pushf
call
not
push
pushl
call
movw
movl
pushf
mov
mov
pushf
pushf
mov
pushl
ret
bt
pusha
cmc
jmp
or
cmc
mov
shrd
ror
sub
and
mov
call
pushl
pushl
lea
jb
cmp
pusha
cmpb
push
lea
jne
test
clc
cmc
cmc
mov
cmp
add
pushf
movzwl
shl
mov
cmp
stc
pushf
jmp
add
pushf
pusha
movb
lea
jmp
adc
mov
add
xchg
subl
sub
test
sub
mov
test
sub
add
sub
jg
mov
xchg
or
mov
jg
test
and
jae
call
lea
je
jmp
call
add
bt
bt
push
rol
pushf
push
not
call
shr
fidivrl
cwtl
mov
adc
scas
lcall
clc
lods
and
mov
into
push
adc
lds
loop
ret
and
and
jns
push
sub
xlat
mov
lcall
roll
xor
dec
packssdw
roll
je
inc
mov
les
sub
xor
dec
cmp
xor
lret
sbb
loop
xchg
into
sbb
pop
jge
inc
mov
movsb
out
push
xchg
mov
add
fs
mov
inc
sbb
shrl
sahf
mov
and
hlt
sbb
jae
jge
cs
scas
xchg
mov
popa
sbb
jl
cmp
cli
les
jae
xor
repnz
cmp
pop
cmp
out
mov
push
pop
xor
mov
mov
lahf
or
rcll
mov
mov
or
sbb
cmp
movsl
or
xchg
xchg
negl
das
xor
add
add
in
movsl
jg
jns
test
loope
mov
pop
mov
stos
lcall
stos
pop
loopne
push
or
in
and
mov
lcall
movsl
das
daa
out
push
pop
inc
out
pop
xchg
idiv
cmp
sti
inc
pop
xor
lret
pop
arpl
dec
xor
dec
add
orb
xlat
sbb
popf
push
fnsave
arpl
out
imul
arpl
fisubs
and
push
and
out
lock
call
idivl
lods
mov
into
lods
shr
stos
repz
loopne
cmpsb
xchg
xchg
outsl
rclb
mov
stos
mov
test
cmp
xchg
scas
sub
test
xor
jns
cmp
call
mov
pusha
movl
push
lea
jmp
pusha
call
pushl
lea
jb
cmc
cmp
cmpb
pusha
push
push
lea
jne
bt
mov
call
cmc
jmp
cmc
test
repnz
pusha
lea
jne
shl
xchg
push
mov
add
sub
or
lea
jmp
imul
gs
xor
cs
insb
add
cmp
cmp
cmp
pusha
lea
jae
bt
jmp
stc
clc
repnz
jmp
sub
jg
test
jmp
leave
outsb
jno
and
lahf
xor
jmp
lret
mov
adc
inc
idivb
adc
push
jo,pt
fstpt
sbb
jbe
mov
pop
mov
pushf
sarb
test
dec
fldln2
push
cli
loopne
hlt
push
aam
rolb
inc
fsubl
cmpsb
and
lahf
cld
lret
mov
aaa
outsb
fisttpl
xor
leave
or
ljmp
push
sbb
jns
mov
leave
jns
sahf
movsl
pushl
adc
in
movw
call
dec
bt
call
test
cmc
cmp
push
pushf
call
call
jmp
pop
rcr
pop
scas
mov
adc
jp
cmpsl
cli
imul
lret
ds
or
push
sub
jmp
sahf
shl
scas
sbb
lret
xor
xchg
popl
imull
test
add
shrl
dec
xor
mov
push
mov
sub
loop
pop
ja
repz
rclb
div
mov
dec
call
stc
xchg
pop
data16
or
mov
mov
and
inc
jb
out
pushf
mov
pushl
lea
jmp
cmp
push
pushf
lea
jne
pushf
call
stc
test
mov
neg
cmp
bt
bt
pusha
add
clc
jmp
mov
inc
pushf
jmp
lea
jb
cmc
stc
cmp
pushf
pushl
lea
jae
lea
mov
mov
pushf
pushf
pushf
push
lea
jmp
pushf
movb
cmpb
movb
jmp
scas
push
in
out
nop
into
xlat
push
stos
push
and
push
das
pop
sub
cmpsb
push
inc
lret
dec
cmp
dec
inc
addr16
js
mov
subl
lcall
clc
mov
je
or
cmp
movsl
out
ss
fiadds
lret
imul
or
and
into
xor
push
ljmp
imul
mov
mov
pop
mov
nop
xlat
ret
add
fucom
sbb
mov
inc
sub
mov
mov
js
mov
stc
iret
mov
jg
push
mov
mov
cmpsl
popf
cmpb
add
xchg
and
pop
lret
les
enter
push
rclb
shlb
xor
mov
xchg
fstpt
mov
shrl
sub
pop
std
pop
dec
dec
sub
cltd
push
nop
inc
and
pop
add
add
mov
cltd
mov
mov
hlt
push
insl
pop
push
shlb
repnz
jno
mov
push
in
pop
jo
mov
int
xchg
lods
pop
jbe
insb
aam
fimuls
pop
jo
cmp
inc
aaa
lcall
sub
pop
das
xchg
push
add
adc
aam
mov
addl
dec
sbb
inc
jge
movsl
je
cmp
mov
pop
mov
push
mov
ret
dec
push
sub
xchg
or
push
cmp
fsts
sbb
mov
lods
mov
stc
jecxz
js
dec
fiaddl
sarb
mov
lock
pushf
xchg
int3
inc
or
jbe
mov
xor
data16
adc
mov
dec
sub
xor
jae
fdivl
xchg
test
cmpsl
push
pop
sbb
xor
stos
outsl
jp
jle
jl
mov
pop
jl
fwait
ja
scas
push
adc
lds
in
cmp
mov
cwtl
pop
cmpl
push
ffreep
fwait
mov
xchg
adc
push
aad
xor
jns
lds
ja
cmpsb
imul
inc
add
mov
dec
mov
sub
xor
xchg
mov
mov
inc
lcall
sub
sbb
test
jl
fidivrl
or
pop
rcll
pop
sbb
sub
shll
xchg
repz
and
xor
fstpt
and
mov
sahf
hlt
mov
sub
inc
inc
gs
pop
fldl2t
xor
ss
pop
inc
fnstsw
jne
scas
xor
data16
push
inc
xchg
sub
nop
push
inc
gs
pusha
mov
inc
xchg
push
inc
gs
xchg
inc
inc
and
pop
ret
sub
ds
inc
gs
fiaddl
scas
and
xchg
push
inc
gs
popa
jp
cld
and
inc
push
inc
gs
xor
push
mov
inc
gs
push
sub
stc
sub
inc
cmp
and
mul
pop
inc
gs
flds
xor
xchg
jnp
inc
mov
sub
push
inc
gs
xor
es
inc
cmpsb
mov
sub
push
push
inc
gs
aam
xor
xor
cmpsb
xchg
pop
inc
gs
repnz
das
sub
icebp
cmp
push
xchg
xor
xchg
push
pop
inc
gs
sbbl
xor
push
inc
gs
lds
fstps
sub
sbb
out
xor
mov
pop
inc
lea
adc
cs
adc
sub
sub
push
inc
gs
jge
ret
xchg
pop
adc
cwtl
push
inc
gs
roll
inc
gs
cmpsb
push
push
inc
gs
jecxz
dec
cld
das
sub
push
inc
gs
scas
mov
sub
inc
gs
sbb
movb
inc
gs
loop
sub
push
lret
inc
gs
pop
jg
and
out
pop
inc
mov
das
sub
or
sbb
in
xor
push
nop
pop
inc
gs
popl
pop
shlb
push
and
gs
and
xchg
push
inc
gs
adc
stc
cs
insl
push
inc
gs
jp
cmp
sub
lret
fisubl
and
jbe
push
inc
gs
mov
sub
pop
push
inc
test
push
sbb
sub
push
cwtl
data16
xor
xchg
push
inc
test
dec
stc
pushl
stc
cmp
movzbw
lea
mov
lea
jno
pop
push
jmp
adc
mov
add
mov
add
add
xchg
sub
test
test
sub
mov
test
sub
add
sub
jg
mov
xchg
or
mov
jg
test
cmc
call
shlb
je
or
jg
add
add
inc
add
addb
add
xor
adc
add
add
cltd
adc
add
adc
sbb
add
adc
lcall
add
add
add
clc
cmp
call
pushf
sub
pusha
lea
jmp
test
dec
mov
mov
mov
outsl
out
xchg
ret
mov
jne
enter
add
dec
lods
mov
adc
mov
dec
and
pushf
jb
repnz
loop
int3
xorb
mov
mov
enter
into
jns
jnp
ret
mov
lea
in
pop
fstl
xchg
dec
mov
mov
xor
imul
add
jb
pusha
pushf
pushl
ret
jmp
jmp
push
movl
pusha
call
ror
mov
pushf
mov
call
push
lods
and
jae
sub
push
xor
pop
out
adc
stos
or
out
jb
movsl
dec
les
xor
sti
push
test
and
inc
jmp
cmp
add
dec
in
sub
add
xlat
adc
mov
gs
mov
ja
mov
fucom
inc
dec
fists
leave
popa
adc
std
clc
repz
fldt
jb
mov
add
pusha
pushf
lea
jb
pusha
cmpb
call
pushl
lods
clc
not
shl
neg
test
rcr
xor
add
pusha
cmc
rcl
jmp
jmp
sub
cmc
test
repnz
call
mov
jmp
mov
adcb
sub
cmpsb
dec
xchg
mov
xor
jle
jl
adc
iret
sahf
ds
lea
shrl
movsb
push
jmp
fwait
insl
imul
push
dec
or
adc
mov
mov
in
mov
shlb
xor
pop
and
pop
jle
push
jmp
fstps
mov
or
ret
push
mov
aad
xchg
shl
cmpsb
mov
push
mov
cli
call
push
mov
shll
mov
mov
in
push
std
add
rcrb
inc
push
or
icebp
mov
out
jno
fnstenv
and
mov
push
dec
jmp
mov
insl
sti
mov
mov
add
mov
mov
xchg
xor
dec
mov
adc
enter
pop
inc
jp
sti
in
push
inc
rcrb
outsl
adc
das
pop
sbb
outsb
mov
loopne
hlt
mov
push
cmc
mov
cmc
pop
pop
pop
push
jbe
xor
dec
dec
les
arpl
and
mov
mov
incl
pushf
lea
jmp
xor
pop
dec
cmc
or
xor
pop
cltd
xor
filds
pop
mov
cmp
xchg
pushf
jle
mov
cwtl
in
push
add
repz
out
sub
cmc
xchg
xor
xchg
mov
dec
xchg
fs
lods
xchg
mov
pop
mov
mov
xor
mov
xchg
mov
ret
push
insl
pop
mov
cs
push
jbe
dec
push
stos
cmp
int
or
in
cmp
ljmp
or
sub
sub
stos
xchg
in
loopne
aaa
and
pushf
movsb
jl
cmp
pop
jmp
call
repz
push
pushf
push
pusha
movl
jmp
sub
pushf
push
push
lea
jmp
add
call
lea
ja
pusha
lea
jb
call
call
pushf
lea
jae
push
lea
jmp
xor
into
or
mov
add
test
xchg
add
xor
mov
jecxz
xor
xchg
adc
out
repnz
jne
xchg
inc
pop
lock
adc
push
movzwl
data16
in
mov
pop
pop
ja
stc
pop
shlb
mov
inc
enter
ficoms
inc
cli
mov
adc
jae
gs
bound
xlat
ds
mov
outsl
jle
mov
outsl
or
imul
gs
xchg
leave
adcl
out
cmp
xchg
mov
and
adc
cli
push
repz
icebp
loopne
or
rcr
inc
sbb
sub
mov
sub
inc
mov
into
add
mov
outsl
or
ret
in
mov
fadds
test
jge
adc
xlat
and
push
pushf
cli
fdivrl
mov
jbe
stc
and
test
mov
insb
lcall
or
and
xor
inc
cwtl
loop
dec
daa
repz
adc
jl
jnp
movsl
mov
or
in
mov
dec
push
jge
cmp
sbb
arpl
cmpsb
daa
xchg
sbb
mov
data16
stos
out
mov
fld
in
aam
dec
push
ret
xchg
pusha
pop
test
fidivrs
test
xchg
inc
mov
adcl
fisubrl
ds
mov
adc
cs
lock
fs
icebp
push
add
int3
fistl
inc
or
mov
adc
pop
xchg
xor
sub
lea
jne
lea
sub
bswap
mov
cmp
clc
add
pusha
pusha
lea
jmp
stc
jge
cmp
call
lea
jb
jmp
pusha
pusha
pushl
lea
jne
jmp
mov
pushf
pusha
pusha
push
lea
jmp
cs
cmpsb
ret
insl
add
xor
mov
xor
rcrb
pop
test
xchg
je
push
mov
lret
jb
lds
push
xor
out
pushf
sub
adc
test
inc
dec
sub
nop
dec
ret
dec
dec
sahf
or
daa
fcmovu
stos
sahf
or
jge
hlt
dec
adc
fiaddl
sub
js
aas
test
sbb
movsl
sub
sub
mov
bound
push
and
movsb
jae
mov
stos
xor
cmp
movsb
mov
fidivrs
jb
xor
mov
push
lds
and
fs
je
call
movl
mov
pushl
popl
pushf
pushf
push
push
pushl
ret
bt
setnp
mov
call
ror
rol
mov
bt
cmp
cmp
or
pushf
movw
pusha
mov
lea
je
test
sub
shld
add
lea
rcr
sub
not
bt
shr
cmc
mov
movsbw
mov
shrd
sete
mov
add
neg
btc
add
shrd
add
mov
clc
shr
pusha
cmc
mov
cmp
call
lea
jb
pushf
cmc
clc
cmp
mov
pusha
mov
call
test
cmp
push
jmp
lea
call
push
call
pushf
movl
mov
lea
jmp
call
jmp
pushf
cmp
pushf
lea
jne
pusha
jmp
push
lahf
jg
pushf
lea
lea
call
lea
call
pushf
lea
jae
call
add
pushf
bt
bt
cmp
pushf
pushl
push
lea
jb
push
clc
bt
cmp
call
in
dec
mov
jns
test
loop
xchg
sbb
xchg
ret
pop
outsb
loop
jg
pop
sbb
push
jge
push
sub
mov
aaa
aad
mov
je
push
mov
fcomp
ja
cwtl
adc
adc
jp
ds
mov
insl
pop
test
pop
andnps
push
or
cmpsl
push
adc
mov
xchg
inc
xchg
repnz
jnp
xor
sahf
mov
outsl
mov
mov
xchg
in
pop
sbb
sbb
insb
sbb
in
cmp
enter
fwait
addr16
push
dec
cs
pop
pop
cmp
mov
gs
stos
mov
dec
pop
and
sarb
sahf
jae
and
cmp
test
cmp
cld
or
and
lret
dec
icebp
jns
ljmp
mov
imul
inc
aam
jg
and
pop
outsl
xchg
scas
push
insl
mov
mov
ret
lds
cltd
aad
push
sbb
enter
aaa
movnti
inc
pop
and
push
iret
inc
pusha
jg
inc
fidivrs
inc
fsubrs
test
ss
xchg
ds
ss
mov
push
fs
movb
dec
sbb
pop
stos
or
loop
fildl
les
idiv
movsb
scas
adc
ret
adc
ret
fwait
enter
push
aas
push
mov
push
ds
jecxz
cli
out
push
outsb
jmp
cmp
cmp
not
mov
mov
dec
cmc
test
cmp
lahf
not
bswap
lea
lea
bswap
movzbw
jmp
lds
into
mov
cs
push
sub
sbb
imul
xchg
mov
lret
jle
testl
jecxz
ret
jno
pop
shr
sub
pop
jecxz
inc
imul
add
icebp
jmp
push
mov
mov
test
inc
sarb
ficompl
hlt
jecxz
fidivl
push
dec
cltd
std
lahf
imul
sub
cmp
lods
mov
xchg
je
sub
add
mov
cmp
setnp
pushf
lea
lea
call
call
push
pushf
jmp
mov
mov
jmp
pusha
lea
jae
and
shl
bt
mov
not
pusha
mov
not
rol
call
call
lea
ja
setge
rcr
add
dec
cmp
jae
mov
test
test
call
movl
jmp
mov
jmp
rep
pushf
mov
call
clc
pusha
cmc
sub
aam
sbb
out
mov
pop
xchg
jle
pop
mov
sub
icebp
jge
mov
sub
or
cli
dec
and
aas
adc
push
aad
aam
pop
cmp
adc
test
push
adc
or
aam
sbb
insb
adc
outsb
ds
mov
mov
jecxz
loop
popa
and
lret
outsl
sarb
clc
pop
test
cmp
jg
mov
add
sub
rorb
and
int3
dec
or
sub
mov
pop
jbe
ljmp
jbe
test
push
sbb
jbe
jnp
mov
cltd
or
jmp
ficomps
ljmp
push
push
ja
mov
jl
mov
inc
dec
xchg
movb
jmp
push
rol
stc
cmc
sub
mov
jmp
mov
pushf
movl
mov
mov
push
movb
push
pushl
ret
lea
jae
inc
ror
xor
setb
mov
mov
sar
xor
adc
mov
pushf
bsr
mov
stc
xor
cmp
clc
call
and
rol
mov
pushf
cmc
bt
and
pushf
call
sti
and
iret
mov
sub
push
orl
ja
xor
push
loope,pn
pusha
jo
jmp
cmp
insb
fcoms
stos
jns
in
mov
dec
push
roll
mov
xchg
leave
in
push
ud0
pusha
faddl
addr16
clc
mov
imul
in
clc
xor
insl
insl
push
sbb
cwtl
cmpl
scas
xchg
imul
lods
movsb
jp
stc
hlt
mov
ja
cmpsb
or
mov
jge
inc
mov
jno
insl
cmp
cmp
rol
bsf
mov
pusha
cmc
pushl
cmpb
jmp
sbb
arpl
sbb
fstps
aad
aad
js
in
cwtl
sbb
les
mov
jno
mov
jmp
mulps
int3
fwait
xchg
mov
sbb
js
cmp
mov
test
dec
mov
jle
fimuls
jne
push
and
js
pop
jae
loope
divb
pminsw
hlt
inc
std
hlt
mov
mov
cmpsl
movsl
xchg
dec
mov
ret
or
in
neg
mov
insl
adc
lds
jbe
ja
inc
xor
dec
clc
pop
jno
sbb
inc
push
je
enter
sbb
repnz
cli
sub
mov
mov
jge
int
and
rclb
lods
out
inc
arpl
negb
clc
sahf
sub
push
jbe
sbb
mov
scas
mov
notl
imul
xor
jb
mov
test
int3
enter
sbb
xchg
mov
inc
out
cmp
and
iret
push
cmpsl
cmpsb
mov
insb
subb
pop
cmpsb
int3
enter
sub
loop
jge
xchg
js
ss
iret
fwait
sub
jecxz
roll
fucom
mov
xor
outsl
xor
in
xorl
inc
mov
mov
test
int
pop
addb
xor
sbb
xchg
nop
mov
xchg
xchg
scas
orb
mov
sub
idivl
scas
popa
sub
and
push
enter
cmp
out
push
cmp
je
mov
js
mov
fidivrl
fs
push
pop
push
addr16
cltd
repnz
daa
sub
xor
xorl
jmp
cmp
sbb
cs
pop
cmp
aam
adcb
out
repz
sub
push
or
xor
mov
and
mov
pushf
dec
pop
mov
mov
call
arpl
adc
mov
dec
sbb
and
lock
movsb
jge
cmp
rorb
xchg
cmp
or
adc
cmp
mov
movl
mov
lea
jmp
mov
call
pushf
lea
jne
cmp
daa
bts
movzbw
xor
bsr
neg
mov
call
pop
out
xchg
push
iret
mov
mov
scas
aaa
out
sub
adc
insb
push
aaa
pminub
stos
stos
inc
sahf
jo
mov
orb
lret
pop
xlat
stos
dec
out
push
in
pop
pop
sbb
mov
test
js
xchg
insl
outsl
xor
mov
scas
pop
aad
gs
arpl
stos
sub
ja
inc
adc
mov
jb
pop
pushf
movl
pushl
pushf
lea
jmp
mov
pusha
movb
pushl
lea
jmp
lea
ret
jmp
push
movl
pushf
push
pushf
lea
jmp
jmp
setnp
mov
pusha
call
xor
outsl
mov
push
inc
add
pushf
mov
pop
mov
xor
push
add
sub
test
sub
mov
shll
pslld
pop
je
repz
xchg
clc
xchg
mov
push
or
outsb
xchg
jge
daa
iret
mov
jp
jae
shrl
sub
ss
inc
sar
btc
xchg
lds
mov
std
xchg
push
lea
call
pushf
pushl
mov
pusha
mov
pusha
lea
jmp
call
pushf
inc
shl
and
mov
jmp
not
movzbl
btc
shr
mov
cmc
cmpb
push
lea
jne
setne
xor
aas
mov
rol
pusha
add
ror
clc
pushf
mov
pusha
clc
test
pushl
lea
je
test
bt
sub
stc
cmp
call
lcall
jg
clc
movb
or
sub
testl
scas
cmp
shll
push
sub
and
incb
outsb
cmp
insl
hlt
lock
repz
xchg
cwtl
jbe
mov
fdivl
and
je
sbb
add
rcl
mov
call
mov
push
inc
setae
pusha
pushf
not
mov
lea
pushf
lea
call
jmp
not
mov
mov
movb
movb
movb
lea
jmp
push
lea
pusha
call
pop
sbb
subb
mov
mov
lock
stc
cwtl
pop
gs
bound
sub
mov
gs
inc
shll
xor
enter
clc
push
loopne
xor
or
orb
push
sbb
cmpsl
cmpsl
cli
jno
pop
pop
mov
xor
xor
pop
mov
jnp
cmp
and
data16
or
and
cmpsl
insb
inc
inc
lahf
ret
test
inc
fbld
mov
rolb
clc
inc
insb
dec
pop
insb
leave
fwait
imul
sti
cmp
cmp
push
sub
push
pushl
popl
test
clc
cmp
mov
pushf
lea
ja
adc
rcr
shr
sub
cmp
add
xor
shrd
neg
shl
mov
stc
neg
mov
jmp
pushf
call
jmp
mov
lea
lahf
lea
movl
lahf
call
cmp
stc
sub
stc
pushl
popl
test
test
cmc
cmc
cmp
push
pushf
jmp
pusha
stos
add
adcb
aaa
mov
mov
loop
test
mov
sub
cwtl
sub
loop
dec
test
mov
xlat
adc
mov
adc
repnz
mov
inc
jae
aad
mov
sbb
mov
bound
cmp
inc
pushf
movb
mov
inc
pusha
lea
jmp
xor
jo
xchg
inc
sbb
jbe
aaa
and
inc
mov
pop
and
pop
lea
sbb
sbb
push
xor
or
in
lret
push
mov
add
cli
or
sub
xor
cmp
aad
lahf
mov
push
add
mov
iret
jns
daa
mov
push
test
cmp
pop
movzwl
pusha
pop
movl
pushf
lea
movw
mov
call
lea
jne
pushf
das
daa
sub
ror
movzbw
shld
shld
mov
lea
adc
push
add
lea
call
test
xor
into
xchg
ljmp
in
popa
cmp
xchg
push
cmpsb
sbb
jge
cmpsb
dec
lods
imul
cmpsl
psubsb
and
lcall
fisttpll
out
fisubs
daa
or
mov
outsl
ror
stc
in
mov
add
dec
dec
dec
arpl
ret
stos
mov
hlt
push
xchg
sbb
cld
jg
testb
jb
inc
aas
mov
pusha
mov
xorl
pand
push
clc
xchg
out
fs
push
repz
insl
jae
xchg
jmp
test
xor
mov
pop
enter
leave
test
mov
adc
jle
and
cmp
and
cmpsb
xchg
push
inc
ret
int3
ljmp
push
lods
cmp
mov
push
add
push
lea
jne
btc
dec
mov
cmc
add
bt
cmp
movzwl
shr
mov
clc
add
pushf
mov
bt
mov
cmp
test
bt
pushf
test
pushf
movb
lea
je
jmp
call
cmp
dec
sub
les
loope
aam
cmp
rcrl
jge
mov
inc
ret
mov
jns
jg
jbe
adc
dec
lahf
nop
or
and
xor
mov
scas
sbb
clc
in
lock
stos
cmp
movsb
fucomip
shrl
into
xchg
push
js
mov
gs
bnd
add
lcall
mov
pop
sbb
xor
aad
jae
cs
mov
stos
cwtl
jo
test
movsb
dec
cli
cmp
cltd
or
sbb
mov
add
inc
sbb
xor
notl
data16
mov
add
aad
fildl
ljmp
xor
fiadds
mov
test
cmp
shlb
jns
mov
roll
add
xchg
mov
fiadds
sahf
inc
jns
mov
sarl
and
lods
jge
int3
inc
sub
pop
or
pop
xor
adc
into
repnz
mov
cmp
and
mov
and
icebp
test
sbb
lods
add
fnstsw
into
inc
push
int
jb
mov
dec
shrb
test
pop
clc
scas
repnz
adcb
jne
pushf
pop
dec
and
imulb
push
ret
das
dec
nop
loope
popa
add
sub
ss
ja
xlat
scas
cwtl
arpl
ss
addr16
cmp
neg
neg
shr
adc
add
pusha
rcl
rol
sbb
clc
sbb
sub
pushf
stos
mov
sete
mov
push
push
pushf
lea
call
call
lea
jb
stc
call
pusha
call
lods
stc
cmc
pusha
add
cmc
jmp
and
inc
pop
fnstenv
xadd
inc
pop
out
and
out
mov
mov
add
sbb
xor
dec
out
xchg
sbb
pusha
dec
repnz
pop
mov
out
add
aam
jmp
pushl
int3
pop
jb
mov
push
inc
pop
jmp
not
pushf
push
jmp
mov
test
pop
xchg
mov
mov
gs
rolb
lret
and
cmc
out
mov
fs
jns
mov
adc
mov
negl
divl
pop
enter
mov
adc
in
pop
add
test
bt
pushf
sub
cmc
pusha
test
cmp
cmp
lea
jbe
jae
pushf
pusha
pusha
lea
jmp
call
inc
sete
pushl
pushf
mov
mov
jmp
movzbw
sub
mov
lea
pushf
sub
rol
sub
sar
bswap
lea
jmp
pushf
lea
jne
not
ror
pushf
movzbw
mov
pusha
call
pushf
push
dec
clc
clc
pushl
clc
cmp
lea
bswap
lea
jo
not
lea
cwtl
push
cwtl
mov
call
stc
stc
cmp
jmp
call
cmc
cmpb
jmp
movb
lea
jb
stc
clc
cmpb
call
add
inc
js
je
jb
arpl
jae
shrl
in
je
movsb
jmp
pop
fidivrl
dec
mov
mov
or
push
or
jnp
xchg
in
or
test
out
mov
adc
in
push
mov
movsl
push
mov
ds
xchg
xchg
adc
pop
mov
sbb
inc
inc
sarl
adc
stc
push
call
int3
mov
adc
jl
mov
icebp
ret
sub
sbb
mov
push
and
in
or
js
cmp
shrd
shrd
mov
test
bt
cmpb
push
jmp
jmp
pusha
xor
lea
pusha
inc
lea
call
test
push
cmp
pop
je
mov
jecxz
or
nop
test
adc
stc
call
sub
cli
mov
jnp
ss
or
push
cmp
push
xor
or
dec
add
enter
out
push
push
ja
push
xor
faddp
in
cli
cmc
addr16
bound
push
cwtl
inc
loop
or
push
xchg
mov
mov
jo
in
imul
sub
pusha
pushl
call
and
aas
mov
stc
test
movl
lea
je
test
shl
mov
btc
add
shrd
mov
jmp
push
jmp
stos
jl
filds
fwait
mov
xchg
adc
aam
mov
sub
or
adc
sti
mov
sub
shlb
push
divl
xchg
sub
jl
sub
xor
xlat
leave
sub
or
mov
pop
lcall
ljmp
sti
mov
out
sbb
push
int
xchg
cwtl
mov
jmp
fs
mov
inc
test
add
inc
mov
push
cmp
dec
inc
data16
xchg
sub
pushf
stos
jl
movsl
jmp
nop
mov
xor
and
mov
cmp
inc
icebp
out
and
shrb
fs
leave
out
lret
mov
mov
mov
dec
sbb
push
inc
sub
xor
in
js
xchg
mov
mov
mov
dec
mov
jl
repz
mov
adc
add
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
lea
dec
add
pushf
pusha
lea
je
pushf
stc
cmp
mov
push
pusha
lea
jo
jne
push
pusha
pusha
jmp
call
rol
cmp
clc
pushf
sub
call
lods
lock
push
outsb
dec
ret
pop
jno
and
mov
push
push
sarl
ss
test
pop
sarb
sbb
frstor
addr16
push
adc
jbe
cmp
mov
shl
xchg
add
repnz
popa
add
in
add
sub
jns
fs
lods
cltd
xchg
push
sub
mov
les
adc
std
inc
stos
inc
out
in
mov
push
iret
inc
dec
aad
cmp
gs
adc
sbb
fiadds
stc
in
iret
clc
pop
subl
pop
aaa
and
pusha
mov
aas
add
roll
out
outsb
orb
xor
cwtl
xchg
rorl
add
scas
or
repnz
add
mov
nop
pop
dec
mov
lahf
mov
jae
mov
sub
mov
sti
add
cmp
dec
pop
ja
push
lahf
cs
ficoms
mov
pop
push
not
mov
mov
jmp
sub
pushl
jmp
repnz
pushl
mov
jmp
lea
je
stc
call
mov
pushf
mov
lea
pushf
movzbw
mov
push
pusha
movl
push
pushl
ret
lea
jne
shr
btr
rol
rcr
sub
dec
aad
aad
sub
mov
clc
cmp
add
push
lea
jmp
lea
je
stc
add
clc
cmp
pusha
lea
jb
stc
cmc
cmp
jmp
push
push
mov
push
pushl
ret
jmp
movb
movb
lea
je
jmp
ja
add
clc
pusha
pushf
pushf
cmp
jmp
jmp
mov
movsb
cmp
loope
aam
cld
xchg
push
fmuls
adcb
hlt
sub
loope
stc
push
pop
sbb
push
lds
and
add
sbb
jno
cmp
jmp
pusha
push
lea
jne
test
rol
mov
stc
bt
stc
add
test
bt
jmp
lea
je
call
lea
je
push
jmp
lea
jb
push
movw
lea
jb
pushf
sub
jne
clc
cmp
pusha
pushf
pushf
lea
ja
push
call
pushf
movb
push
lea
jb
cmp
pusha
stc
cmp
pushf
pusha
movb
lea
jae
xadd
sar
or
ror
mov
add
sbb
cmp
cmp
mov
inc
sbb
sub
btc
mov
pushf
clc
cmp
call
pusha
bswap
mov
pushl
mov
pushl
ret
pusha
lea
jae
bt
test
cmp
jmp
movb
lea
jne
shl
shr
ror
cmc
mov
clc
sub
push
movb
lea
jmp
pushf
lea
je
push
mov
lea
jmp
lea
jne
push
shrd
mov
cmp
add
jmp
lea
jb
push
clc
pushf
cmpb
pusha
lea
jne
neg
pushf
cmp
cmc
mov
pusha
call
or
test
sub
jge
sti
fs
clc
js
fmul
addr16
inc
push
sub
shll
xor
xor
push
lods
test
or
je
divps
test
push
std
push
and
xchg
mov
aas
loope
les
aaa
fidivrl
inc
mov
mov
cmp
add
inc
and
push
push
jmp
inc
pusha
movw
inc
movb
pushf
movb
lea
jmp
popf
cpuid
nop
push
lea
jno
push
pushl
movl
pusha
movl
pushf
push
pushl
pushf
lea
jmp
cld
sub
cmpsl
xchg
sbb
jno
icebp
sbb
cmpsb
divb
loopne
jl
cmp
dec
jecxz
psllq
test
mov
dec
sub
pop
sub
push
push
xchg
movsl
in
dec
mov
cs
lods
outsl
adc
mov
inc
arpl
aaa
test
sti
push
and
mov
push
lahf
push
je
pop
cmc
arpl
cmp
xor
ja
enter
or
in
lds
push
movsb
push
cmp
mov
jecxz
mov
mov
pop
lds
sbb
pop
cmp
nop
fidivrs
outsl
aas
pop
add
or
shll
aas
jns
inc
test
bound
pop
sub
dec
nop
cmp
scas
nop
out
adc
jecxz
scas
push
aam
push
mov
and
add
and
shll
imul
dec
adc
push
add
sub
popf
stos
test
dec
sbb
jne
es
mov
ss
pop
add
popf
inc
shll
dec
insl
sbb
loope
imul
repnz
mov
mov
pusha
mov
mov
pushl
ret
inc
push
mov
add
mov
mov
sub
dec
insb
outsb
jno
fsub
daa
or
xor
xchg
push
dec
add
outsb
imul
mov
lds
inc
test
inc
pop
sbb
btr
cmp
lea
jae
jmp
cmp
jb
cwtl
fisubrl
lds
jl
into
aad
cmpl
jecxz
sub
adcl
iret
cmpsl
cmpsb
sub
pushf
xor
lret
icebp
mov
xchg
pusha
inc
cmp
cmpsl
loopne
addr16
or
mov
js
es
daa
push
fwait
sub
into
jp
jae
mov
xor
push
push
icebp
lea
and
cmp
out
outsl
mov
sbb
lret
adc
mov
faddl
push
enter
jns
lret
jecxz
push
push
adc
into
sbb
mov
ds
jns
push
in
xor
push
and
shl
dec
inc
fidivs
cmp
cmp
pop
push
dec
push
adc
das
dec
sahf
gs
jg
sub
inc
mov
jns
xor
and
inc
lock
insl
cmp
dec
mov
dec
jmp
out
cmc
clc
mov
mov
popf
mov
fsubrs
mov
lods
jno
sub
adc
inc
hlt
push
bound
jbe
decl
dec
sbb
cwtl
outsb
adc
add
jb
lcall
jg
stos
call
rcrb
outsl
loop
popa
dec
jno
push
and
mov
das
jmp
mov
mov
bt
call
push
lock
std
std
addb
gs
mov
ret
jg
test
dec
imul
push
pop
test
xlat
adc
jle
in
mov
mov
pop
lret
out
and
daa
test
xchg
fstl
add
fcmovb
inc
xchg
dec
ret
in
xchg
push
xchg
mov
dec
popf
lret
orb
jmp
sbb
dec
mov
cmc
cmp
call
mov
pushf
mov
pushl
ret
mov
pusha
pushf
pusha
lea
jmp
rol
jmp
adc
sub
mov
lea
shl
xor
shl
add
bsf
movl
shl
shr
btr
mov
movw
cmp
pushf
pusha
pushf
lea
jbe
pushf
pushf
test
sub
call
movb
rep
pushf
mov
mov
pushf
lea
jmp
pushf
jmp
push
push
lea
call
pushf
pushf
adc
call
mov
clc
mov
call
cmc
add
pushl
pusha
lea
jmp
movb
lods
cmc
add
pushf
bt
push
pushf
rol
call
rol
mov
stc
test
sub
bt
stc
shr
pushl
lea
je
pusha
movw
adc
push
movw
pusha
pushl
lea
jmp
mov
xor
scas
mov
inc
mov
lret
adc
push
lods
mov
mov
mov
push
jb
cld
dec
cld
xchg
sub
pop
sub
sbb
sbbl
sub
movsl
xchg
call
daa
pop
lock
xor
cli
mov
std
inc
enter
xor
or
cmp
call
lea
jne
bsf
add
xor
inc
aas
aaa
mov
cmp
add
pushf
push
pusha
movw
lea
jmp
pushf
movl
pushf
movl
push
pushf
pushf
lea
jmp
lea
call
call
movl
push
lea
jmp
lea
jae
clc
jmp
mov
jmp
mov
pextrw
sar
mov
fnstcw
pop
push
daa
push
ret
stos
xchg
add
notb
xchg
mov
adc
jns
ds
adc
jl
pop
mov
es
adc
cmp
fwait
dec
dec
dec
sarl
dec
sbb
jmp
pop
enter
pop
inc
add
push
xchg
jbe
xchg
pop
push
fdivs
cs
cmp
and
pop
stos
mov
pop
push
jmp
sub
in
inc
mov
movsb
sub
pop
sbb
sub
insb
out
es
cmpsl
je
adc
cld
imul
scas
jge
inc
push
ljmp
out
lods
cmpsb
push
sbb
mov
cmp
stc
cmp
call
push
or
pushf
lea
jne
sbb
mov
jmp
fwait
jl
or
xchg
subb
jl
mov
pop
popa
or
inc
add
jns
mov
sbb
mov
mov
sub
mov
mov
add
pop
mov
adc
imul
std
push
inc
enter
addr16
xor
cmpsl
outsb
mov
sub
mov
cmp
in
mov
cmp
dec
fwait
cmp
imul
decl
xor
adc
push
or
ret
adc
mov
pop
sarl
mov
adcl
push
cmc
scas
lods
mov
in
lcall
or
mov
sub
mov
inc
testb
jmp
rolb
xchg
insl
fsub
dec
sub
subps
ljmp
push
mov
aam
mov
iret
sbb
and
ds
xor
sbb
xlat
mov
sub
test
sub
cmp
les
loop
jl
fcmovu
push
mov
aam
jb
scas
pushf
inc
inc
adc
cs
lahf
cmp
push
lea
ja
shl
rcr
adc
ror
sub
rcr
add
dec
mov
stc
jp
add
ror
mov
cmc
repnz
call
movb
mov
pushf
pusha
push
pushf
pushl
ret
xchg
aam
jp
mov
cwtl
push
xchg
in
jp
mov
xchg
and
mov
xchg
xchg
and
jns
mov
ret
xchg
or
sub
mov
movsb
jns
add
push
out
addb
mov
idivb
jmp
inc
lret
sub
xorl
aam
xchg
stos
out
push
fisubrl
push
shlb
jnp
in
sub
xchg
nop
inc
loopne
mov
add
xchg
jg
jne
xchg
mov
xchg
fsubrs
repz
mov
adc
fmuls
jnp
jne
sahf
push
xlat
push
call
or
js
scas
jp
outsb
sbb
inc
push
repz
xchg
fdivl
jecxz
mov
mov
sti
dec
fsubl
loopne
mov
xor
xor
xchg
sbb
jae
je
outsl
cmpl
sbb
inc
sbb
adc
pop
xchg
fdivrl
mov
in
mov
adc
rcrl
shrb
pop
mov
jbe
fiaddl
lret
test
pop
xchg
aaa
sub
sub
add
sbb
xchg
adc
popf
xor
and
loopne
mov
xor
sub
lret
adc
mov
hlt
inc
add
pop
outsl
pcmpeqw
mov
or
test
cwtl
fistpl
repnz
cmp
outsb
mov
jle
jge
jg
clc
repz
cmp
std
inc
push
mov
daa
shrb
in
lret
or
jno
pop
inc
les
repz
xchg
push
mov
jg
dec
adc
bound
mov
cld
jle
in
nop
jmp
xor
jbe
and
stos
lds
popa
inc
sub
sahf
xor
lock
popa
addr16
call
cmp
pusha
mov
pushl
pushf
lea
jae
movzbw
push
push
pushf
mov
pushf
lea
jmp
pushf
movl
pushf
mov
pusha
pushf
pushf
pushl
ret
sub
int3
mov
add
popa
sub
into
sarl
movsb
leave
testl
inc
mov
jmp
rorl
ljmp
insl
int
cmp
fisttpl
pop
cmp
dec
in
push
gs
sbb
sub
cltd
cmp
loop
mov
into
sbb
add
std
and
mov
mov
dec
dec
mov
lods
loopne
or
or
adc
and
cwtl
lods
movsb
fwait
sarl
scas
pop
cs
repnz
ljmp
call
clc
call
mov
jmp
call
test
mov
push
pushf
lea
je
jne
call
rclb
outsb
scas
rorl
test
test
iret
mov
pop
dec
add
fbld
sbb
dec
dec
fadds
and
cli
je
add
mov
mov
fwait
mov
or
dec
rclb
and
mov
in
and
movsb
or
int3
and
mov
lahf
repz
mov
jmp
add
push
cmp
bt
cmc
mov
rcl
bts
sub
inc
mov
cmp
push
cmp
pusha
push
lea
jbe
cmc
not
mov
dec
adc
bsf
add
movsbl
cmp
xor
mov
ror
rol
test
test
add
xor
movl
push
sar
mov
pusha
pushf
cmp
push
cmp
pushf
lea
jbe
sub
sub
rcr
lea
shl
mov
clc
push
neg
shr
mov
clc
add
pusha
shl
shr
sub
pushf
cmc
mov
not
pop
bsf
add
pusha
lea
je
mov
pushf
call
xchg
add
push
xchg
mov
xchg
test
sub
andl
and
stos
incl
and
and
jmp
cmc
cmpb
mov
push
lea
jne
shr
sbb
shl
mov
bt
add
jmp
pusha
lea
jb
pushf
cmpb
jmp
pushl
lea
jbe
clc
dec
ror
sub
clc
btr
pushf
mov
lea
sbb
mov
shrd
lea
ror
cmp
add
shl
ror
shr
or
mov
sar
sar
bt
cmc
add
call
mov
mov
sub
iret
or
popf
dec
cmpsl
jb
xor
mov
ror
jle
fcoms
mov
xchg
pop
sbb
and
pop
sbb
mov
loopne
icebp
fwait
imul
xor
test
jno
inc
fildll
js
sub
test
or
and
or
sbb
cmpsb
mov
adcb
iret
aam
repnz
imul
push
orb
push
sarl
scas
insl
pop
inc
xor
out
mov
push
or
dec
xor
lock
in
lock
js
lahf
cmp
frstor
cmp
pusha
mov
push
lea
jmp
fisttps
push
cmp
loopne,pn
xor
repz
sbb
push
stos
dec
add
mov
movsb
and
jmp
xchg
and
sbb
imul
stc
lahf
cmpsb
pop
and
cmpl
sbb
loopne
into
lcall
pop
jnp
push
out
sub
push
mov
xchg
push
decl
bound
pop
outsl
enter
fstpt
sbb
adc
enter
jbe
out
fwait
pop
fildll
jno
adc
movsl
int3
jmp
mov
cmp
and
loop
daa
in
jbe
jecxz
pushf
jp
daa
das
bound
adc
mov
sahf
xchg
dec
push
sub
aad
mov
adc
cmp
pushf
push
movl
push
push
mov
lea
jmp
clc
rol
pushf
push
pushf
not
pushf
jmp
jmp
mov
cmc
mov
cmp
test
movw
pushf
pushl
push
lea
je
pushf
test
cmp
stc
add
pushl
mov
cmp
pushl
lea
jb
pusha
cmp
call
pushf
lea
je
clc
test
test
add
pushf
cmp
mov
lea
jb
cmp
cmp
pushf
lea
jae
call
push
pushl
popl
mov
movw
pushl
ret
jmp
movzbw
push
cwtl
lea
call
clc
push
test
pushf
jmp
cld
pop
stc
test
and
jle
repz
aaa
scas
stos
aad
fld1
mov
push
mov
fwait
std
stc
ja
mov
cwtl
cs
sub
gs
push
pop
mov
add
loope
xchg
xchg
cmpl
xor
mov
lea
inc
and
push
aad
add
jb
inc
add
js
xchg
and
fs
jne
pushf
push
stos
push
pusha
lea
jmp
lea
jne
setg
dec
mov
call
mov
pushl
popl
movb
push
pushl
ret
jmp
mov
out
mov
pop
sbb
pop
pop
sahf
js
adc
frstor
or
stc
call
lods
in
push
scas
sbb
sub
xor
sub
out
subb
mov
out
mov
leave
loope
mov
cld
cwtl
sub
push
aaa
push
dec
aas
jae
push
fsubrl
or
xchg
or
aas
ffreep
push
lods
movsb
mov
push
fadd
repnz
lret
xchg
cmp
mov
mov
fnstcw
pusha
pushf
test
call
lea
ja
call
push
pushf
movl
call
lea
jne
jae
movzbl
movb
push
setne
pusha
mov
movzbw
pusha
bswap
lea
call
mov
call
pushl
popl
push
push
push
movb
pushl
ret
shl
neg
mov
bt
cmp
push
call
pushf
rol
cmc
bt
pushl
sub
mov
clc
bt
stc
pushw
popfw
movb
jmp
pusha
push
lea
call
push
cmc
clc
sub
pusha
lea
jne
pushf
jmp
sbb
and
push
lcall
jmp
dec
pop
dec
repnz
idivl
and
lods
movsb
mov
push
fiaddl
aas
xor
aad
mov
jge
jns
jle
jb
cmp
movzbl
movb
setl
mov
movzbw
lea
pusha
movl
pusha
push
jmp
movb
inc
call
setl
push
push
pushl
lods
jmp
movb
mov
mov
call
movl
call
pusha
push
jmp
jmp
lea
jae
bswap
movsbw
not
pusha
mov
pusha
pushf
pushf
pushl
lea
jmp
mov
pop
cwtl
fisubrs
rcll
xor
or
enter
enter
push
jne
leave
xchg
jns
test
inc
lret
fwait
sti
dec
and
stc
dec
imul
push
pop
xchg
cmp
dec
add
test
stos
insb
notb
adc
inc
imul
push
test
sub
stc
cmpsl
out
sub
pusha
jnp
add
xor
cmp
shlb
xchg
add
mov
loopne
mov
loop
or
loop
and
neg
out
dec
jne
xchg
mov
cwtl
mov
mov
adc
xchg
mov
mov
cmp
sub
push
push
out
out
nop
xchg
fists
sbb
cmpsb
dec
pop
or
xchg
cltd
mov
mov
sbb
pop
sbb
lods
xchg
jo
jne
adcb
mov
jg
movsb
loopne
int3
dec
sbb
sub
rep
enter
jmp
stos
mov
jnp
and
test
add
push
adc
pop
lahf
or
iret
adc
movsb
mov
mov
mov
mov
loope
pop
aad
roll
dec
inc
adcb
repnz
loopne
cmpsl
cmp
movzwl
cmc
btr
movsbw
pusha
mov
bt
pusha
add
clc
jmp
push
call
pushf
add
pusha
pushf
jmp
str
call
push
call
lea
jae
mov
mov
movzbw
pusha
shrd
mov
neg
mov
clc
cmc
jmp
mov
shrl
xor
dec
and
adc
aad
das
cmpb
daa
outsl
sahf
andl
or
pop
sub
or
mov
sbb
and
sbb
push
aas
mov
mov
jle
push
rol
dec
xor
sbb
add
insl
ud2
bound
mov
bt
pusha
test
movb
jmp
push
call
je
pop
fildll
shll
add
enter
aad
or
jbe
lret
xchg
dec
fwait
addr16
popf
enter
fadd
out
push
sub
adc
sbb
sbbl
loop
outsl
or
cli
dec
iret
add
int3
pcmpeqw
mov
cwtl
push
inc
nop
test
push
xlat
and
int3
fiaddl
aas
hlt
fdivrp
fdivrl
mov
adc
bound
jmp
ljmp
xor
clc
jecxz
lods
fnstsw
leave
insl
cli
mov
fmul
jns
cmpb
insl
inc
push
jle
pop
and
pusha
jmp
mov
xor
fwait
sub
or
cli
xchg
or
je
xchg
sbb
or
jb
or
mov
fs
pusha
imull
xchg
das
or
push
push
jbe
mov
mov
push
clc
sti
call
jbe
sub
cmp
fwait
addr16
push
aaa
sbb
dec
mov
dec
mov
js
and
movsb
adc
loopne
push
push
inc
aaa
or
adc
cmpsl
repnz
out
test
aad
jo
pop
pushf
sbb
shrb
scas
scas
adc
inc
repz
mov
xchg
ljmp
adc
imull
imul
mov
cli
ret
jg
in
xor
aas
mov
insl
mulb
call
pushf
pushf
jmp
dec
ja
cmc
mov
ds
mov
adc
js
call
add
lret
adc
cmp
fnstsw
and
clc
outsl
mov
stc
jo
add
testb
xor
adc
jae
fwait
jnp
fwait
sbb
mov
mov
repz
loop
push
jg
hlt
inc
out
into
and
int3
das
cmp
and
lahf
dec
in
mov
stc
sbb
xchg
jge
aad
mov
xorl
mov
sti
mov
dec
cs
mov
les
movsl
jno
popf
cmpsl
cmp
loop
fcoml
xor
andl
fdivr
pop
hlt
and
jge
sub
into
iret
into
jle
ljmp
pop
xchg
lods
cmp
jle
outsl
aad
jecxz
cmp
sbb
and
test
sbb
ret
push
loope
es
dec
push
sbb
mov
jecxz
xchg
pop
mov
and
fs
loop
test
and
call
inc
jne
mov
outsl
mov
cs
cmc
repnz
call
test
jg
es
jne
in
ja
xlat
mov
aad
out
mov
lret
fs
mov
push
int3
jge
lret
outsl
mov
movsb
mov
mov
call
jne
gs
xor
fs
insb
add
adcb
ja
decl
test
add
pusha
test
pusha
jmp
inc
call
rcll
cli
imul
stos
inc
add
fwait
rcr
nop
pop
mov
push
add
imul
cwtl
jns
ret
sbb
outsb
mov
into
dec
pushf
jb
mov
movl
stos
pop
mov
mov
test
fidivs
push
cmp
jmp
stc
hlt
loop
pop
push
jae
mov
outsb
test
cmc
shl
push
sub
and
xchg
ret
cmp
mov
cmpsl
mov
mov
mov
mov
stos
dec
and
idiv
fmuls
int3
shrb
mov
adc
adc
and
frstor
mov
adc
addb
movsl
cmpsl
dec
push
jo
cmp
mov
cmpsb
cld
outsl
mov
sbb
inc
fcmovu
leave
dec
xchg
pop
aam
xor
inc
push
or
in
pop
mov
test
sti
sub
sub
dec
int
andb
addl
inc
xchg
xor
push
ret
fcmovu
arpl
adc
movsb
aam
test
sbb
sbb
jno
adc
dec
jae
push
lea
jne
jmp
lods
test
clc
neg
lea
jg
add
cmc
call
cli
pop
and
push
pop
nop
push
mov
int
lahf
test
das
sbb
cmp
pop
fneni(8087
lret
push
sbb
and
xchg
cmp
jae
clc
push
insb
add
sbb
inc
mov
mov
stos
push
les
jp
push
adc
mov
bound
cli
pop
xor
inc
or
mov
test
add
inc
jo
jmp
mov
pop
xor
cmp
call
mov
aas
aam
sub
hlt
push
and
fidivl
sbb
xor
mov
jg
fisubrl
xor
fs
mov
in
pop
aaa
xor
out
xchg
pop
mov
cmp
fwait
loop
sbb
and
frstor
push
in
sti
insl
jbe
mov
inc
jnp
lea
pop
or
or
mov
mov
test
shlb
imul
mov
in
inc
pop
adc
movsb
fidivrl
ja,pn
das
int
mov
mov
dec
mov
cmp
mov
mov
mov
mov
push
pushl
ret
movl
pusha
movl
movl
push
pusha
lea
jmp
jmp
mov
in
pop
xlat
lock
xchg
test
push
gs
xchg
push
mov
add
dec
dec
out
imul
hlt
push
pop
pop
adc
fs
adc
xchg
sub
pushw
mov
aam
adc
sbb
mov
cmp
std
mov
incl
mov
sbb
xchg
mov
mov
fwait
mov
cmc
mov
movsb
pushf
mov
inc
mov
sub
sub
push
sti
dec
jmp
sbb
sbb
push
jae
mov
xchg
mov
push
js
pop
xchg
mov
cmp
mov
sbb
dec
mov
push
ficoml
inc
cmpsb
int3
inc
jb
popa
sub
cmp
in
inc
jmp
and
mov
mov
in
fstpt
xor
xchg
gs
in
jno
dec
fldt
mov
repnz
stos
fdivp
test
xor
jecxz
sub
jmp
push
insb
imul
jns
sar
stos
xor
lret
mov
mov
and
aaa
pop
jmp
das
pop
flds
insl
mov
lahf
ret
and
mov
lcall
mov
mov
or
and
call
pusha
pushf
lea
jae
pusha
sub
pusha
lea
call
jne
push
lea
jae
jmp
idiv
push
xchg
xor
stos
xor
mov
push
scas
jmp
sahf
sub
xor
mov
mov
loopne
add
push
clc
rcrb
and
imulb
ja
or
loop
xlat
jo
sbb
or
mov
sub
or
daa
ss
div
cmp
movb
lea
ja
stc
sub
lea
rcl
not
add
push
clc
pushf
mov
sbb
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
and
stos
jmp
or
add
mov
add
lea
jne
jmp
ljmp
sbb
ss
xor
nop
clc
mov
mov
sub
xlat
imul
sbb
shrl
test
gs
stos
jne
sub
mov
ss
push
daa
adc
push
loope
ret
fisttps
fldcw
aas
sub
xchg
lret
in
xchg
ljmp
mov
lods
movsb
scas
es
daa
push
in
es
gs
cmp
lea
jbe
stc
sbb
mov
ror
add
rcr
adc
mov
rol
add
shr
stc
movl
movsbw
mov
test
pushf
cmp
pushl
jmp
call
movzwl
stc
bswap
mov
call
neg
not
mov
push
test
stc
cmp
sub
pushf
pushf
pusha
lea
jmp
xchg
cmp
push
and
fs
xor
add
out
dec
cld
cs
dec
pop
push
das
dec
repz
fadd
cmp
xchg
push
test
std
out
lcall
out
sbb
xor
loopne
mov
xor
lods
out
pop
pop
aaa
pop
inc
imul
push
mov
mov
sbb
pop
pusha
fistpll
or
pop
loopne
xchg
sub
jp
imul
cmp
jmp
push
mov
ror
ror
bt
mov
test
call
pushf
movb
pushl
movl
jmp
pushl
popl
test
test
call
data16
cmp
jg
into
push
add
add
dec
insl
enter
push
and
mov
jge
enter
sub
hlt
aam
sbb
or
xchg
cmp
adc
adc
inc
cwtl
jno
stc
jle
movsb
out
ret
jp
mov
mov
cmp
pushf
mov
push
movl
jmp
call
rep
jmp
cmp
cmp
pusha
call
dec
aaa
stos
inc
insl
and
add
sub
mov
ret
xchg
jbe
inc
jl
xor
rcrb
pop
xor
cmp
cmp
je
sub
mov
pop
bnd
in
inc
movw
lea
jne
push
sub
xor
pushf
mov
push
push
add
pushf
pushf
movw
lea
jmp
mov
push
lea
ja
pusha
bt
bt
movw
imul
mov
pusha
cmc
add
mov
pushf
pushf
pushf
lea
jmp
add
btc
dec
mov
cmp
bt
bt
cmp
xor
stc
call
aas
mov
or
mov
gs
stc
push
fcompl
sti
xchg
sbb
dec
hlt
sub
ljmp
jp
push
cmp
sbb
fs
rorb
inc
andl
movsb
imul
push
int
icebp
mov
add
js
push
xchg
jecxz
enter
xor
cmc
ret
mov
pop
mov
scas
stos
cmp
or
leave
sbb
xchg
jge
and
pop
lcall
xchg
cmpl
js
ret
sbb
and
fs
jne
shr
mov
and
movzbw
sub
bts
sub
clc
shl
bt
mov
clc
sub
test
pushl
stc
clc
cmp
jmp
lea
jne
add
jmp
add
add
pusha
push
movw
lea
jae
rcr
bsf
mov
mov
pushf
sbb
bsf
mov
bt
mov
call
pushf
jmp
mov
not
cwtl
lea
call
clc
add
jmp
mov
bt
test
call
xorl
imul
iret
stc
inc
mov
xor
sub
pop
mov
sub
inc
mov
xor
out
sbb
fisubs
lods
out
lods
lret
shl
dec
je
push
out
mov
int
outsl
adc
cmp
or
test
dec
cltd
jp
cmp
bswap
mov
mov
hlt
call
add
inc
and
inc
sbb
fs
jmp
jmp
mov
pop
mov
fldl
xor
jne
loope
mov
push
ja
push
adc
adc
jmp
lcall
stc
test
adc
jl
add
and
jge
decb
outsl
inc
jg
dec
xchg
hlt
lahf
dec
fstpl
outsl
out
les
aad
push
dec
movq
and
lods
push
jmp
inc
movsb
push
popa
ret
jno
stos
fstps
lods
add
pushf
push
lret
sbb
lret
mov
hlt
repnz
fimuls
xlat
xchg
cld
mov
jae
cwtl
or
or
mov
into
aaa
jno
xchg
jmp
xchg
inc
sahf
dec
fildl
dec
add
gs
dec
movsl
or
fwait
icebp
popa
pushf
bound
pop
and
mov
push
stos
pop
mov
push
dec
pushl
mov
stc
cmp
mov
ret
add
sub
push
xchg
lods
jbe
cmc
push
mov
pop
sbb
je
imull
xor
mov
shll
outsl
fildl
sbb
jmp
xchg
jl
inc
daa
jns
mov
sub
xor
inc
fdivrs
cld
aam
adc
lock
fwait
push
or
sar
push
mov
dec
shl
jo
xor
jb
sahf
xor
jns
cmp
lea
call
jmp
pusha
test
sub
bt
cmc
push
pushl
popl
stc
cmp
pushf
movb
lea
ja
shl
ror
sub
rcr
clc
bts
adc
add
shld
add
mov
rol
cmc
mov
stc
repnz
pusha
pusha
jmp
movl
pop
mov
jmp
mov
call
add
mov
pusha
pushf
lea
jmp
lea
ja
call
pushf
movb
pushf
movl
call
mov
or
sub
pop
fmull
mov
pop
adc
nop
xchg
cmp
sbb
jae
adc
int
int
test
std
insl
flds
ds
or
inc
sbb
mov
inc
cmp
add
cmp
mov
in
lret
push
out
xchg
jecxz
jne
push
or
dec
leave
mov
push
push
outsb
in
xor
mov
ret
push
enter
cmpsl
xor
fldenv
sub
push
add
arpl
call
sub
je
dec
cmp
push
loop
test
aas
scas
cmp
adc
xor
xchg
mov
push
sub
mov
stc
out
fimuls
fistl
in
jecxz
pop
cmp
into
lret
je
xchg
mov
push
jmp
int
cmp
dec
nop
sbb
rcrb
pop
shlb
iret
mov
mov
dec
cld
idivb
call
xlat
outsl
mov
rorb
mov
arpl
add
fwait
xor
lahf
adc
subb
int
lahf
xchg
gs
insb
cmp
call
lods
jns
dec
mov
pop
push
xchg
push
cmp
loop
cmp
fildll
mov
pop
cmpsb
adc
jg
sub
xchg
je
fistpll
mov
jae
push
movl
movw
pushf
lea
jmp
dec
jo
into
les
ja
inc
lock
ds
or
das
bound
lret
push
je
jle
xchg
test
jbe
jne
fs
cmp
popf
cmpsl
inc
in
ja
mov
out
jo
add
cli
mov
dec
pushf
cld
adc
or
pop
xor
mov
stos
les
add
xchg
ja
dec
pop
push
xchg
sahf
jo
sarb
repz
or
icebp
xlat
ds
push
and
aam
out
mov
ror
mov
out
sub
or
repz
dec
push
xor
lret
arpl
cmp
adc
xchg
mov
adc
mov
mov
dec
pusha
test
jge
cmpsb
xchg
cmp
pop
mov
mov
push
into
pusha
in
aas
sbb
std
xor
in
inc
clc
mov
sbb
test
push
aam
out
xor
into
cwtl
mov
adc
and
adc
cmpsl
cmp
out
movsb
jns
sub
dec
cltd
cmp
outsl
call
mov
lea
bound
mov
cmpsl
inc
sahf
inc
popf
mov
test
push
push
mov
bound
or
jbe
pushf
lods
clc
call
test
pushf
lea
jb
je
pusha
cmc
add
rcr
rcl
mov
cmc
bt
jmp
pushl
pushl
dec
pushf
cmp
not
pushl
lea
setne
pop
lahf
movzbw
mov
call
pusha
mov
mov
call
call
rcrb
or
das
mov
lcall
mov
xchg
cwtl
xchg
scas
jo
adc
rorb
ds
mov
dec
push
outsl
push
mov
out
out
mov
sub
ds
dec
fwait
mov
sub
push
rcr
ret
sub
mov
push
add
push
std
mov
dec
mov
or
shrb
sbb
lcall
jg
sbb
mov
mov
pushf
mov
push
lea
jmp
push
pusha
lea
ja
push
lea
jb
cmp
clc
clc
cmc
cmpb
push
pushf
mov
movb
lea
jne
rcr
mov
bt
add
bt
clc
movzwl
dec
bt
shrd
mov
bt
jmp
lea
jae
cmc
xor
jmp
movb
lea
je
push
pusha
push
movb
lea
jmp
popf
rdtsc
nop
pusha
pushl
pushf
movl
push
mov
movl
pushf
mov
movw
lea
jmp
lea
jne
jmp
add
mov
sub
mov
les
jb
mov
imul
sub
jl
mov
adc
lahf
test
sarl
xor
add
and
filds
sarb
sub
mov
cmpsl
xor
jae
mov
nop
jp
and
repnz
xor
stc
fisubs
mov
lods
inc
pop
stos
push
pop
ljmp
dec
sub
dec
call
xor
pop
cld
aas
sahf
or
mov
pop
rolb
and
je
bt
jmp
jns
and
pop
jb
push
paddusb
cmp
inc
repz
loop
mov
sub
mov
jmp
outsl
bswap
fwait
dec
sub
es
negb
add
mov
ja
xchg
lcall
in
push
iret
stc
repz
cmpsl
xchg
outsl
add
popa
or
cli
mov
add
mov
pop
sarl
cmpl
add
or
jmp
xchg
jmp
jmp
movl
pushf
mov
pushf
lea
jmp
push
subl
or
sbb
pop
xchg
lods
jmp
add
add
and
clc
xrelease
add
out
sbbl
icebp
mov
and
out
sub
sbb
sbb
mov
xchg
jo
addr16
cmpsb
jb
int
mov
pop
and
ret
adcb
xor
jmp
iret
nop
fimull
sub
mov
test
sbb
adc
aam
cmpsl
lret
and
sub
push
dec
add
repz
push
stos
jl
sbb
mov
xchg
jmp
xor
stc
stos
xor
fstpt
mov
out
add
mov
loope
decl
and
stos
hlt
js
push
dec
xor
add
and
cltd
fcoml
insb
shl
arpl
cli
push
and
push
dec
push
fistl
inc
insb
ret
lret
add
inc
movsb
jge
imul
and
mov
sbb
fimuls
mov
es
or
lds
mov
inc
cmpsl
stc
sarb
cwtl
mov
imull
lods
movsb
mov
push
repz
loopne
inc
or
popa
xchg
fimuls
out
mov
rclb
fs
ja
jmp
movl
pushf
movw
jmp
bt
cmp
jmp
dec
add
xor
aam
hlt
cltd
aaa
adc
sahf
add
mov
in
jo
sbb
jo
dec
lods
mov
mov
std
push
sub
cs
and
repz
negl
inc
mov
or
test
pop
and
cmp
push
lea
call
jmp
lea
ja
call
sub
push
pushf
pushf
mov
lea
jmp
cmpl
sbb
fsubrl
inc
push
jge
dec
cmp
jmp
dec
dec
mov
ficoms
push
cmp
lret
pop
lret
pop
les
and
fcmovu
leave
std
stos
movsb
jp
sub
dec
xor
je
mov
es
pop
sbb
aam
dec
sbb
cs
fldl
jle
push
clc
stos
xor
ljmp
mov
dec
xchg
inc
pusha
inc
imul
jae
iret
cs
mov
popl
pop
push
cmp
cmp
mov
stos
mov
lods
leave
mov
ljmp
and
sub
inc
cmp
mov
push
insb
js
mov
movsb
aaa
xchg
cmpsl
mov
nop
mov
push
jno
into
out
adc
push
inc
jb
mov
ds
pop
lea
ficomps
std
jge
push
mov
xor
pusha
dec
int
add
lahf
iret
xor
or
or
fbld
lock
cmp
mov
shll
adc
call
bound
dec
lret
pusha
inc
fdivrl
sbb
iret
xor
in
xchg
fildl
lds
shrl
pushl
cmpsl
mov
shrl
add
scas
dec
mov
adc
test
test
mov
pop
insl
test
xchg
jg
cmp
mov
push
sti
adc
mov
fisttpl
lret
add
test
sub
dec
mov
std
stos
imul
call
sub
mov
lock
test
mov
in
jle
and
pusha
cmp
cltd
dec
mov
and
iret
jb
jl
add
push
hlt
loop
push
cmp
je
jmp
icebp
clc
iret
mov
mov
adc
imulb
mov
xor
test
jae
dec
mov
int3
cmpsb
mov
or
fclex
sbb
xchg
adc
icebp
leave
mov
add
leave
or
xor
in
fwait
aas
pop
call
mov
push
sub
push
add
decl
aas
adc
mov
push
movsl
push
lcall
stos
pop
pop
pop
sbb
pop
dec
aad
fldt
sti
mov
cmp
scas
mov
subl
mov
aam
push
mov
aam
mov
fprem
test
enter
push
cmpsl
ja
dec
in
add
loope
add
cltd
cwtl
insl
addr16
jmp
xor
insl
movsb
cmp
mov
and
mov
xor
lea
jmp
jmp
add
cmp
pushf
cmp
jmp
pushf
call
push
push
icebp
iret
daa
sub
sti
pushf
cwtl
loope
add
xor
adc
int3
ficoml
lds
in
scas
xchg
push
cmp
jmp
outsb
scas
dec
sbb
pop
out
cmpsb
iret
rorb
xlat
int
add
or
adc
jp
cmp
outsl
into
cmp
mov
call
mov
lods
sub
ds
cwtl
lds
andb
add
test
and
push
xchg
mov
mov
sbb
insl
or
loope
fcomi
pop
inc
aad
and
lcall
mov
pusha
jmp
mov
push
insl
mov
mov
push
clc
pop
rcrl
inc
push
adc
out
cli
sub
in
outsl
add
xchg
mov
jo
cmp
dec
outsb
jl
aaa
std
adc
pop
push
arpl
push
mov
test
xor
jmp
test
inc
sbb
in
out
in
push
cmpsl
fistpl
ds
xor
push
and
lods
movsb
sarl
cwtl
adc
push
clc
inc
insb
movswl
lcall
sbb
insl
cmp
push
add
add
add
push
add
mov
add
add
push
add
add
add
movl
pushf
pushf
pusha
push
lea
jmp
xchg
test
push
inc
pushf
mov
jmp
mov
mov
lea
call
pusha
pushl
cmp
cmp
jmp
not
sar
mov
cmp
cmpb
pushf
push
movb
jmp
clc
add
test
push
bt
mov
bt
jmp
cmc
repnz
jmp
jle
pusha
pushf
lea
jb
pusha
test
cmp
call
push
lea
jne
btc
bswap
mov
bt
cmp
pushf
pusha
lea
ja
jle
lea
pusha
mov
movsbw
pusha
mov
mov
lea
seta
mov
mov
pop
bswap
push
mov
mov
mov
call
leave
jge
lds
xchg
sub
fs
pusha
fistps
in
push
adc
push
mov
adc
stos
add
mov
cmp
jge
lea
add
lahf
int3
in
repz
mov
outsl
mov
sbb
js
inc
out
sbb
add
sbb
daa
setne
enter
add
xchg
sub
ds
push
cmp
add
pusha
cmp
shr
push
cmp
pushf
movb
movl
jmp
lea
jne
setp
not
movsbl
movb
jmp
pushf
pusha
mov
pushf
mov
mov
lea
jbe
call
call
call
mov
loopne
inc
out
shlb
imul
jnp
sahf
out
out
add
stc
jp
mov
aaa
movsl
sbb
lods
cmp
into
cmp
sbb
scas
sbb
mov
frstor
pop
int
mov
mov
out
es
sahf
dec
push
out
mov
es
inc
mov
adc
fimuls
pop
mov
sub
cmp
cmc
negl
adc
adc
stc
pop
inc
cmpsl
add
push
iret
pop
sub
cmp
stos
pushf
pusha
push
lea
jmp
lea
jb
mov
push
pushl
movb
mov
call
mov
lea
ja
call
pusha
jmp
lea
je
cmp
test
call
pushf
pushf
lea
jne
cmc
call
push
cmp
pusha
jmp
clc
pushl
test
add
jmp
cmp
call
sets
inc
setb
sets
mov
jmp
loope
imull
push
scas
adc
mov
mov
jns
sbb
or
xchg
ds
and
xor
adc
mov
call
push
mov
and
dec
inc
and
mov
std
push
cmp
add
sub
pushf
clc
or
jmp
shl
push
das
call
repnz
pusha
jmp
in
push
movl
pushf
movl
push
pushf
lea
jmp
push
call
or
call
or
clc
mov
add
in
jae
ret
outsl
movsb
push
push
dec
add
mov
inc
and
popa
iret
aas
xchg
clc
cmp
outsl
fisttps
xchg
repz
fbld
sub
jl
mov
iret
fcompl
gs
or
cmp
jne
lods
movsb
mov
je
fwait
inc
inc
dec
dec
xor
into
and
cmp
xor
jle
in
aas
mov
inc
or
mov
dec
dec
int3
mov
lea
jne
sar
bt
pusha
mov
mov
jmp
cmp
movzwl
pop
bsf
test
mov
stc
cmp
add
stc
pusha
mov
clc
test
call
call
pusha
push
lea
ja
inc
inc
call
pushf
lea
je
push
movb
movb
bt
cmp
push
jmp
repnz
pushf
lea
jne
jmp
adc
movb
movw
pushf
lea
jae
call
push
call
bt
clc
pusha
test
sub
add
jmp
jmp
inc
bt
sbb
xor
xchg
stc
adc
btr
mov
stc
neg
add
shl
mov
pusha
mov
pusha
shr
mov
clc
pushf
sub
pushf
call
pusha
lea
jae
test
pusha
add
lea
jb
pusha
movb
mov
pushl
pushf
push
lea
jmp
lea
je
shl
xor
btr
mov
neg
stc
push
mov
shl
rcl
shr
movzbw
call
lea
call
push
call
std
leave
sti
cwtl
fbstp
adc
sub
lret
xor
pop
add
sahf
dec
fldenv
sub
imul
mov
dec
test
or
xchg
icebp
filds
adc
jmp
dec
sub
and
stos
xor
cmp
mov
cld
fcomi
xchg
dec
pop
outsl
mov
inc
cmp
test
dec
xchg
and
or
mov
xchg
call
in
rorb
jb
lock
push
fsubrs
bound
jmp
and
loop
xor
add
jnp
xor
add
and
aas
sbb
pop
xor
insl
jg
cmp
cmc
std
xor
lods
inc
scas
pop
jg
sbb
inc
and
sbb
mov
je
jl
in
jne
mov
push
jg
loop
rorb
sbb
push
subb
sbb
cmp
xchg
scas
ret
popl
test
lret
add
inc
aas
sub
cmp
lods
mov
xlat
loope
dec
sahf
xor
pop
das
inc
mov
aaa
xchg
int
repz
cmp
sub
jmp
pushf
or
call
call
call
out
sub
pop
xor
cmpb
jecxz
xor
mov
notb
xchg
arpl
sbb
loope
dec
add
std
mov
mov
sbb
push
mov
clc
cmp
pop
in
rcl
out
jmp
adc
mov
scas
sub
test
cmp
add
adc
push
mov
scas
int
mov
outsb
test
sub
orb
mov
mov
xor
lea
mov
pusha
ficompl
pop
mov
and
call
xchg
mov
aas
loopne
and
in
mov
lea
xchg
jmp
out
xchg
push
sbb
dec
mov
mov
or
out
scas
lcall
ss
mov
jle
inc
xchg
stc
xchg
mov
mov
enter
inc
jmp
pushf
bt
pusha
xor
push
pushl
jmp
pusha
mov
mov
pusha
call
pusha
call
push
jmp
lea
push
pushf
movl
mov
call
test
ja
or
cltd
fldt
stos
imul
pop
pushf
inc
inc
sub
outsb
gs
sub
popa
inc
mov
or
rcr
loopne
lods
movsb
lret
in
xlat
jnp
lods
add
out
jns
adc
and
hlt
sahf
insb
dec
bt
cmp
cwtl
lea
movzbw
push
lea
pushl
setbe
lahf
bswap
mov
mov
mov
call
jbe
btr
and
jmp
pushl
add
lea
call
sub
ret
movsl
sub
mov
sarl
cmpl
outsb
xor
sarb
aam
push
aam
add
sbb
push
loop
jp
mov
and
pusha
out
adc
or
sbb
push
adc
leave
stos
pop
jo
testb
lret
inc
enter
jecxz
popf
xor
sti
dec
es
xor
mov
and
and
sbb
adc
mov
inc
cld
das
aas
out
mov
and
xchg
pavgb
insb
sub
jnp
cwtl
jmp
jb
and
shll
push
jle
pusha
sub
xor
mov
in
inc
mov
dec
xor
add
es
sub
repz
dec
sbb
scas
in
cmp
and
fs
pop
sub
repnz
xor
fnstenv
jecxz
jb
xchg
mov
mov
add
push
test
stc
cmp
pushf
lea
jb
cmc
jmp
movzwl
shrd
pusha
inc
mov
bt
clc
cmp
add
mov
mov
stc
sub
je
test
push
pushf
jmp
jmp
aaa
adc
mov
stc
push
mov
adc
sub
mov
repnz
mov
push
dec
xchg
dec
jge
ja
lcall
dec
cmp
cs
sub
cs
add
stos
ljmp
fiadds
pop
jle
mov
push
cwtl
push
imull
test
xlat
and
call
add
mov
int
push
jno
leave
or
xor
cmp
movsbl
mov
lea
pusha
lea
jbe
jmp
inc
inc
inc
inc
inc
rcl
test
stc
xchg
xor
mov
add
or
mov
stc
pusha
jmp
jmp
lea
call
pushf
lea
jmp
sti
insl
lods
dec
cmp
stc
adc
mov
lea
in
lods
aad
sub
xchg
xor
decb
sbb
fimull
clc
push
std
dec
adc
je
mov
mov
sbbl
lahf
dec
push
and
mov
imul
push
lods
leave
add
cwtl
lcall
out
aaa
xor
popf
inc
xchg
adc
adc
or
cmpsl
xorb
inc
push
mov
cmp
inc
inc
loop
jg
dec
pop
fidivl
loopne
xchg
cmp
xchg
loope
in
aad
cmp
popa
xchg
movsl
sub
leave
call
cltd
adc
or
loope
leave
loop
adc
gs
popf
jns
xchg
sub
jl
test
inc
ds
sub
clc
dec
dec
xor
test
jo
sub
mov
hlt
sahf
repz
pop
inc
sub
popf
lahf
jo
push
sete
add
cli
ret
or
mov
push
mov
popa
js
bound
addl
sub
add
add
fadd
mov
xchg
cwtl
shlb
add
xchg
test
pushf
push
bts
aaa
pop
xchg
mov
pop
inc
dec
movsb
lret
cmc
push
fadd
cmp
cmp
pushf
pushl
ret
mov
pushl
movb
pushl
ret
jmp
lea
je
cmp
jmp
pop
dec
hlt
xor
int
and
add
je
js
push
sub
lods
lods
insl
inc
dec
jmp
xchg
jmp
mov
maskmovq
divl
aaa
pop
dec
and
and
lret
push
adc
rcrl
dec
fsts
ss
mov
ds
mov
lds
sub
and
flds
cmp
xor
shl
sub
add
push
out
dec
cmp
jge
movsb
dec
mov
xchg
ret
popf
test
push
loopne
sub
pop
push
and
or
dec
call
jnp
out
hlt
arpl
in
mov
das
add
jnp
sub
push
dec
xor
mov
mov
lods
movsb
into
stc
sub
shrl
outsb
mov
sub
movb
mov
mov
cmp
push
dec
mov
sub
sub
call
incl
ret
je
xor
mov
jle
sbb
fstps
loopne
or
pop
add
sub
dec
aam
pusha
pop
roll
xchg
test
mov
movsb
je
push
cmp
in
fdivl
jl
cmp
jae
mov
dec
lret
out
inc
and
dec
lea
jb
stc
jmp
or
xor
andb
jnp
pop
or
cmpb
push
insb
push
adc
mov
push
xor
add
inc
jle
xchg
jo
loope
daa
push
pop
test
inc
not
sbb
lds
int3
sahf
pusha
xrelease
fiaddl
mov
adc
int
lret
mov
sahf
hlt
test
inc
and
test
pop
push
movl
pusha
push
lea
jmp
cmc
cmp
lea
js
pushf
call
lea
je
test
cmp
add
test
test
cmp
push
lea
jbe
push
lea
jb
jmp
pusha
cmp
push
call
insb
gs
or
mov
dec
test
and
pop
fildll
xor
movswl
xchg
aad
mov
arpl
out
inc
lret
adcb
out
std
pop
and
mov
sub
loop
sub
lods
mov
pop
pusha
cmp
mov
aad
imul
xchg
pop
sbb
pop
je
push
cli
rcrb
mov
add
les
fsubr
das
cwtl
dec
add
imul
mov
in
and
inc
push
and
inc
dec
fsubl
cmp
cmpsl
and
les
pop
jl
fisubl
pop
push
ficompl
xchg
ds
pop
xchg
test
jno
lods
cltd
lds
xchg
sub
mov
lock
inc
add
ret
fsubrs
cmp
fs
andl
xchg
add
pop
sbb
cld
push
cmp
mov
jo
test
fisubl
pop
mov
insl
lret
ja
jmp
push
mov
add
repnz
push
mov
xchg
mov
dec
pop
mov
jl
popf
hlt
jnp
dec
outsl
jne
fs
sub
fistl
xor
or
dec
cmp
mov
pushf
movb
pusha
push
lea
jmp
xchg
mov
push
push
dec
stc
movb
shl
jmp
cmp
pushf
push
movl
mov
lea
ja
mov
mov
cmc
sub
rol
rcr
add
sar
shl
cmc
movzbw
mov
shl
rcl
add
mov
cmp
push
cmc
jmp
clc
call
sbb
mov
xlat
dec
cmp
adc
cltd
sarb
mov
sub
sbb
cltd
lcall
test
js
loop
cwtl
jp
cmp
inc
std
dec
sub
insl
rcrl
mov
pop
int3
push
and
icebp
out
jo
push
cmp
mov
fildl
cmpsl
or
pop
jecxz
push
jbe
std
inc
mov
hlt
es
mov
lea
scas
push
cmp
rcrb
cmc
sub
ljmp
mov
jae
fstps
mov
adc
lods
rolb
mov
sar
inc
or
cmp
fisttps
leave
and
imul
add
inc
lock
ja
adc
adc
inc
jmp
or
sub
dec
pop
gs
push
lock
dec
cld
push
and
lea
push
mov
rol
xlat
jecxz
icebp
data16
push
test
push
js
in
icebp
fstpt
lahf
addl
ljmp
xor
fisubrs
mov
mov
call
cmp
pop
pop
hlt
cmp
repz
js
pop
push
and
add
rcll
popf
push
test
lds
fildll
cmpsb
mov
push
mov
xor
or
shr
xchg
lods
movsb
rol
popa
enter
lods
or
icebp
ret
pop
push
sub
jle
out
enter
mov
popf
cmp
xor
pop
pop
in
sub
mov
or
icebp
idivb
shrl
lods
inc
bound
adc
mov
sbb
mov
pop
out
mov
and
push
mov
lcall
and
out
lods
or
out
das
xchg
pusha
loop
lcall
bnd
lret
lcall
int3
das
push
or
loop
in
ljmp
cmp
call
fcomps
pop
mov
in
jl
leave
push
mov
fs
adc
aad
mov
adc
int
sub
cwtl
sub
mov
lods
xor
or
xor
nop
cmp
ficoml
psrlq
pop
mov
adc
loop,pt
sbb
or
push
cmp
dec
pop
push
sub
pop
pop
jbe
dec
hlt
into
or
mov
mull
and
jno
or
sbb
jne
xchg
fiaddl
inc
scas
push
in
push
xchg
adc
jno
push
xchg
mov
int3
dec
js
fisubrs
popa
pop
mov
outsl
xor
dec
pop
pop
dec
sub
nop
sti
cmp
bound
adc
push
push
push
xchg
inc
dec
add
xor
sub
mov
sahf
cmp
lea
ja
cmc
clc
test
add
cmc
cmp
stc
test
or
pushf
call
test
pushf
jmp
pushl
mov
jmp
pushl
jmp
call
mov
lea
ja
push
call
shrd
mov
stc
xor
call
pusha
pushf
pusha
movl
pushl
push
pushl
lea
jmp
push
addl
adc
outsb
add
or
xor
push
pop
stc
and
jp
movsb
aad
fcmovnu
in
lods
or
mov
test
inc
addr16
popf
jge
dec
push
pushf
call
adc
mov
add
out
sbb
gs
or
dec
sub
and
sub
stc
inc
mov
cmp
adc
pop
dec
out
in
mov
ret
shll
sub
jo
mov
push
inc
jge
loop
iret
xchg
aam
lret
icebp
and
cmp
sub
rorb
sub
dec
insl
pop
out
gs
outsl
xchg
mov
mov
add
cmovno
enter
cltd
sub
aad
cmp
mov
pushf
cmp
pushf
clc
add
cmp
jmp
pushf
movl
pusha
pusha
mov
movl
pushl
movb
movb
lea
jmp
btc
btc
sub
lea
seto
pop
pusha
mov
pushf
movzbw
pushf
movsbl
mov
pop
movzbw
movzbw
call
int
sbb
push
fistpl
pop
xchg
xchg
and
icebp
mov
mov
cmpsb
xchg
cwtl
inc
mov
sub
loope
fisttpl
insb
xor
test
sub
mov
imul
mov
or
rcrb
sub
std
mov
or
sbb
lds
pop
and
loopne
jp
or
insl
jg
pop
gs
inc
fildl
cmove
loope
les
mov
push
in
movsl
imul
xor
push
out
leave
bound
xor
dec
fnstenv
inc
add
enter
stc
and
dec
adc
fstl
stc
arpl
lea
or
and
dec
testb
adc
ss
loope
fcomps
pop
mov
sbb
loop
pop
test
inc
push
adc
mov
inc
adc
mov
cmpsl
sub
ljmp
rcr
fildll
std
jne
jecxz
mov
or
dec
jns
push
cmp
push
push
jno
leave
push
rclb
dec
outsb
icebp
leave
sub
ljmp
ror
sbb
cmp
in
clc
imul
push
shlb
popw
pusha
mov
jmp
jl
cmp
pushf
lea
ja
pushf
pushf
lea
ja
pushf
inc
lea
setge
not
dec
inc
dec
inc
jmp
call
xchg
add
xor
add
inc
js
mov
jne
iret
xchg
cmp
pop
or
in
subb
mov
cmpsb
cmp
add
std
cmp
jle
rolb
pop
push
test
and
sub
pop
popa
push
mov
in
mov
xchg
jg
push
sar
jecxz
xchg
pushf
mov
stos
xchg
mov
or
mov
shll
movb
jecxz
push
sarl
mov
mulb
popf
mov
cmp
out
subl
or
mov
mov
inc
and
sub
enter
test
cmp
movsb
cmp
jns
cmpsb
imul
or
stos
push
aad
aaa
push
sahf
push
fsubrl
movsl
sbb
repz
pop
and
jg
or
test
adc
mov
push
mov
mov
xor
mov
inc
and
test
cs
mov
add
push
jne
pusha
pushf
movl
pusha
lea
jmp
clc
test
repnz
call
cmp
xchg
imul
add
decl
jg
insb
xor
inc
pop
push
pop
sbb
or
pop
andl
push
add
iret
adc
mov
sub
and
and
pop
mov
sbb
imul
jle
xchg
xchg
inc
dec
ljmp
aam
and
ds
loope
push
aas
push
adc
or
ljmp
gs
sub
pop
mov
sub
div
cmp
cmpsb
loope
xchg
cmp
adc
imul
mov
xchg
rorl
sbb
jb
mov
out
dec
cld
insb
into
pusha
fwait
mov
cmpsl
fistpl
inc
cltd
movsb
cmc
cmp
jge
cltd
xchg
in
pop
cmp
push
push
jecxz
filds
scas
or
sbb
arpl
jno
pop
mov
jg
sbb
repnz
cli
stos
and
dec
test
xchg
dec
lret
push
inc
add
lods
imul
fs
mov
jl
mov
xlat
xor
jo
add
xor
les
aaa
sbb
imul
jbe
jmp
in
add
xchg
call
repz
mov
rcrl
xchg
mov
pusha
mov
fstpt
cmp
movsl
adc
sbb
jg
or
cmp
pop
dec
cmp
imul
das
jb
lods
dec
je
and
xchg
push
mov
ds
mov
cmp
test
gs
mov
out
push
mov
xchg
aaa
outsb
sbbl
jns
dec
and
clc
cmp
mov
xchg
push
cs
das
insb
lret
jno
cmp
fisttps
pop
cmp
mov
gs
cmp
cwtl
jns
cmp
mov
xchg
leave
mov
test
int3
sub
cmp
call
mov
pop
movsbw
lea
mov
pushf
pushf
mov
pushl
ret
jmp
lea
jne
not
bswap
movb
movzbl
lea
setns
movsbw
push
bswap
not
lea
jmp
cmp
jmp
je
or
in
xor
ret
movsb
int3
or
mov
adc
shrl
int
sbb
inc
pop
inc
out
add
mov
daa
xchg
lods
outsb
sub
add
bound
lods
jb
inc
movsb
adc
cmc
scas
jne
loop
gs
nop
into
or
cmp
test
sub
bt
pushf
pushf
cmp
pusha
lea
ja
stc
cmc
imul
push
add
pushf
lea
jmp
jmp
lcall
cltd
iret
sub
mov
lea
pop
push
push
xchg
pop
sbb
or
adc
and
or
mov
or
repnz
aas
loop
inc
xor
adc
add
aam
push
inc
enter
mov
inc
shr
lods
imul
bound
fidivl
and
pop
xor
add
push
sbb
dec
pop
pcmpgtw
or
push
add
into
shl
jp
add
jo
fisubrs
xor
pushl
lea
jne
movzbw
push
movsbl
movb
lea
not
movsbw
mov
lea
sete
lea
push
mov
jmp
mov
pusha
pushf
lea
je
setbe
call
pusha
jmp
jmp
fsubrl
popf
data16
push
add
lds
push
lock
ss
xor
and
jle
push
mov
xchg
and
ret
icebp
or
inc
sub
xor
add
inc
popf
sar
leave
jecxz
scas
arpl
jnp
cmpsl
pop
cmp
push
mov
loop
int3
ljmp
jbe
adc
cmp
add
inc
gs
outsl
fs
gs
imul
add
test
repz
push
cmc
call
adc
push
jmp
cs
mov
fadd
jne
roll
pop
arpl
fbld
mov
imul
pop
test
push
dec
aad
fsubs
xor
mov
sub
xor
aam
push
jne
pop
cmpsb
xchg
out
scas
add
cmpsl
push
mov
mov
cwtl
adcl
jae
or
ljmp
aad
mov
sarl
push
and
fwait
cmp
pop
paddd
adc
xchg
xlat
xchg
mov
or
ljmp
cmp
mov
pop
xor
mov
mov
mov
adc
out
lret
dec
mov
mov
aas
leave
sub
dec
push
xchg
sub
sub
or
rol
and
xor
or
aam
xor
lcall
mov
cmp
repz
mov
cmp
pusha
ret
aas
out
sub
sbbb
mov
test
xor
and
test
adc
and
imul
dec
add
pusha
dec
fcomps
pop
sub
test
bnd
mov
inc
xor
mov
repz
je
mov
dec
sub
stos
cmp
iret
cmp
push
or
enter
ret
test
gs
movsb
lods
cld
pop
push
and
jb
pop
pop
iret
lahf
xchg
pop
and
sti
out
mov
mov
scas
loop
insb
lcall
and
xor
mov
lea
jmp
sub
pusha
test
cmc
repnz
push
call
test
mov
inc
inc
ja
sub
mov
cmpsl
imul
imul
fwait
cmp
inc
cmp
scas
jnp
xor
jmp
push
ss
repnz
mov
xchg
push
pop
es
lods
pop
test
adc
sbb
daa
sub
add
mov
ret
push
fisubrs
adc
inc
cmp
cld
gs
test
lahf
mov
pop
push
mov
adc
imull
js
fs
xchg
pop
xor
xor
pop
lock
jmp
or
jbe
mov
ds
inc
xchg
out
or
jle
push
pop
insl
enter
jg
jae
lock
repz
dec
out
sbb
xchg
xchg
pop
cmpsb
repnz
lods
adc
sti
stc
test
dec
and
cmp
out
xor
cmpsl
jnp
sti
dec
das
rcll
outsb
pop
cmpsb
icebp
cmpsb
or
xchg
shrb
iret
dec
loopne
movsl
or
ret
stos
pop
lods
cwtl
std
insl
in
dec
xor
outsb
int
sbb
fisubs
adc
dec
pop
inc
mov
xchg
ud1
stos
mov
dec
arpl
push
push
dec
pop
mov
mov
xor
jne
dec
jl
and
cmpsl
imul
movsb
pushf
push
pusha
call
push
lea
jae
stc
mov
bts
test
mov
inc
test
mov
mov
push
call
push
pushf
or
jmp
test
mov
sahf
ja
mov
sbb
call
mov
cmpb
movsb
cli
inc
pop
jecxz
xlat
decb
sti
cmp
sub
mov
insb
in
adc
int3
pop
daa
cld
xchg
mov
sub
xchg
in
lods
xorb
rorl
add
or
xchg
cmp
rclb
gs
ss
xchg
jg
lds
add
inc
insb
les
std
in
mov
push
pushf
mov
pop
sbb
shlb
aad
pop
mov
sarl
lods
xchg
push
pop
mov
bound
push
push
daa
adc
mov
scas
cmp
outsb
call
cmp
jno
push
xor
and
mov
sbb
inc
and
je
mov
jne
inc
xlat
inc
inc
pop
aaa
push
mov
pop
jne
pushf
mov
call
std
mov
arpl
jae
push
jno
mov
fdivrl
push
xchg
cmc
cmp
std
movsl
mov
cmp
push
mov
jno
in
jbe
sbb
cmp
in
pop
inc
sahf
push
sbb
xor
jecxz
sbb
lea
ds
rorl
ret
cli
int3
lods
jb
or
movsb
xchg
cmp
add
pusha
dec
cmpsl
cltd
jns
sbb
nop
lea
inc
mov
lock
cmp
loop
in
add
lret
xor
or
dec
and
sub
adc
test
mov
xor
ljmp
mov
push
movsb
jge
push
inc
dec
or
int
push
mov
push
jno
jmp
dec
sub
sub
insb
sub
ror
sahf
push
out
xor
xchg
cmc
xchg
mov
or
jae
jg
and
xadd
mov
xor
fistps
jne
shrb
inc
js
push
sbb
pop
test
repnz
subl
inc
cmp
shl
mov
pushf
pushf
pushl
lea
je
pushf
jmp
je
mov
inc
ljmp
ja
pop
adc
xor
jmp
or
scas
xchg
xlat
sti
push
leave
scas
pop
cs
test
stos
cmpsb
in
idivb
push
loop
add
mov
jmp
sub
mov
jb
sub
mov
sti
mov
pop
jl
mov
xor
fdivl
and
adc
mov
add
jbe
sub
sub
push
cmpsl
adc
pop
ds
aad
or
push
jbe
push
mov
aad
fs
and
test
sbb
enter
mov
sar
cmp
pushl
movb
lea
je
push
setle
cmp
add
shl
shl
sub
stc
shr
test
pusha
and
sar
mov
sbb
add
jmp
movl
mov
movw
push
push
lea
jmp
push
pushf
jmp
add
pusha
movb
lea
jmp
cwtl
mov
xor
insb
js
out
lods
pop
test
out
push
not
adc
sbb
lods
jo
add
ljmp
daa
aas
lret
mov
inc
mov
inc
sub
push
lds
je
mov
xchg
or
mov
ds
mov
add
inc
movl
mov
mov
lea
jmp
bt
xor
cmc
jmp
add
test
sub
sahf
pop
cmpsb
movsb
cs
or
xor
mov
in
mov
imul
sbb
stos
jle
je
loopne
sub
cmp
test
push
xor
jge
call
push
push
jno
inc
cltd
repz
in
aam
fimull
das
lret
or
cmp
sti
sub
or
jo
iret
jge
dec
and
lods
movsb
out
aas
adc
jecxz
mov
xchg
test
fwait
mov
mov
std
xchg
fcomi
scas
pusha
lea
jne
btc
mov
adc
stc
movsbw
sbb
sub
shl
mov
jmp
movzbw
pop
setle
sete
movsbw
not
pop
pusha
pushl
mov
push
call
call
pushf
cmp
pusha
push
jmp
mov
call
daa
sub
and
cmp
push
or
and
or
inc
lods
and
mov
popa
les
fs
shrb
or
loop
mov
cmp
push
or
xor
loopne
inc
jno
rorl
inc
sbb
sbb
loop
rol
xchg
iret
xchg
enter
test
movsl
adc
out
cmpsl
dec
sub
dec
jae
jge
pop
dec
mov
ja
inc
xchg
into
sbb
ret
inc
xor
jno
dec
push
in
fwait
sbb
add
test
mov
sub
sbb
mov
xorb
mov
and
jnp
adcb
in
push
ficoml
in
inc
hlt
pusha
dec
push
sbb
add
add
mov
push
or
fstpt
gs
add
jo
adc
inc
in
ljmp
pop
test
cmp
fs
mov
mov
pop
sub
imul
jmp
in
inc
out
push
xor
jp
cmpb
loope
jbe
out
sub
add
xchg
fs
pop
sub
dec
ud1
push
add
and
push
outsl
insl
push
stos
int
loopne
mov
sbb
imull
mov
adc
in
cmp
roll
mov
xchg
add
cmc
and
cmpsl
shlb
test
and
mov
fs
push
rorl
aaa
cld
xor
test
fwait
arpl
loope
add
push
mov
mov
js
and
jnp
pushl
or
jmp
sub
dec
outsb
add
jne
dec
out
shlb
iret
shrl
sbb
push
movb
adc
test
lds
andb
sub
sub
sub
nop
dec
mov
movsb
lds
stos
enter
fldl
adc
add
cmp
fldenv
lds
inc
loope
push
and
scas
mov
sub
xor
xor
stos
xor
add
inc
insb
jecxz
test
inc
jmp
mov
clc
and
sub
mov
cmp
or
mov
lahf
mov
popf
cmp
and
inc
out
cmpsl
xchg
cmp
xchg
dec
inc
xchg
push
cmp
pop
addb
and
cmp
je
and
mov
add
add
xlat
lods
mov
and
xchg
jecxz
and
stc
push
lods
jecxz
xchg
jecxz
pusha
mov
and
xor
js
add
and
sti
movsl
hlt
jecxz
xor
mov
addr16
adc
and
inc
nop
and
rcll
es
push
js
loope
mov
push
push
loopne
add
inc
js
inc
in
in
es
ljmp
jle
and
enter
mov
std
pop
mov
and
add
push
je
mov
xchg
jo
data16
idivb
and
inc
lods
aam
std
test
rcl
icebp
sbb
addr16
xlat
cmpsb
sub
and
xor
in
out
addb
inc
push
push
sub
sbb
mov
lahf
xor
xor
and
in
and
pop
add
and
shr
lods
jne
test
push
and
or
jmp
inc
aad
je
sub
pop
inc
add
mov
jg
stos
pop
inc
sbb
adc
xorb
shrl
mov
inc
pop
lods
out
lcall
aaa
pop
in
movsb
xchg
xchg
and
fscale
adc
rcll
enter
adc
push
js
cmp
flds
add
jmp
mov
mov
in
mov
and
ss
data16
test
aam
xchg
mov
loopne
pop
hlt
add
and
loope
and
add
hlt
mov
pusha
pop
and
lds
push
add
movsb
loop
les
and
daa
xor
xchg
pop
ds
push
add
inc
icebp
lods
shll
xchg
ja
cmp
pop
xor
hlt
sub
add
xchg
push
vaddpd
fs
adc
out
in
cmpsb
ja
inc
aam
les
ja
push
mov
xor
push
adc
and
and
push
add
add
add
and
std
out
pop
add
mov
mov
sbb
xchg
pop
in
loope
and
and
std
jbe
push
and
data16
dec
popa
and
aam
out
out
xor
add
xchg
popa
and
mov
fs
cmp
jl
add
xor
and
and
frstor
loope
mull
pop
inc
stos
popa
mov
sub
lods
ja
and
movsl
daa
cmc
cmp
std
out
ss
add
pop
xor
adc
mov
push
and
and
fld
add
inc
add
xor
cmp
cmp
inc
push
xchg
and
adc
lods
aam
mov
gs
mov
sbb
aad
jl
shlb
lods
daa
andb
loope
es
add
lods
movsb
std
movsb
push
andb
mov
add
mov
inc
movsb
pop
ss
sarl
jg
je
sarl
jecxz
test
xor
xchg
aad
sub
test
and
push
testl
movsb
mov
cmp
es
mul
push
scas
pop
cmpsb
addb
shll
out
xor
int
mov
sub
mov
gs
cmp
or
mov
pusha
pop
data16
sub
aam
cs
mov
push
mov
in
add
add
inc
or
lods
pop
cmp
aad
sub
inc
movsb
testl
lods
mov
push
pop
cmc
xorl
aad
movbe
mov
popl
mov
adc
movsb
pop
xor
adc
sub
shll
xor
or
xor
add
and
push
sar
in
mov
xor
arpl
push
scas
in
adc
daa
jo
mov
add
out
cli
mov
cmp
xchg
push
rcrl
lret
add
cwtl
cmp
cmp
call
sti
and
and
add
sbb
and
pusha
idiv
ss
xor
add
in
jbe
xchg
mov
mov
clc
xchg
xor
push
cwtl
xor
xchg
jne
inc
cwtl
add
div
inc
xchg
xor
rcll
mov
dec
rcll
jne
xorl
inc
xor
rorl
mov
or
hlt
xchg
es
mov
push
jo
arpl
ss
cmc
les
inc
clc
aam
pop
mov
xchg
push
test
aaa
enter
addr16
outsl
cmp
pop
icebp
gs
xor
xchg
pushf
repz
adc
mov
push
or
out
mov
pop
push
cwtl
cmc
xlat
dec
lods
xlat
leave
push
imul
mov
imul
mov
xchg
movsl
xor
sbb
mov
mov
mov
mov
cmp
and
and
sbb
daa
cmc
jae
xor
out
in
sbb
xor
movsb
cs
shll
xchg
je
sbb
ss
cmp
cmp
ffreep
pusha
movsb
negb
out
roll
mov
add
cmp
daa
xchg
bound
test
pop
test
in
mov
mov
mov
jl
fnsave
push
mov
mov
cmp
fdivs
inc
movsl
and
cmp
inc
adc
in
xchg
adc
mov
je
sub
pop
mov
jo
add
popa
cmpsl
je
add
inc
imul
mov
aad
mov
int
or
push
pop
gs
or
ds
cmp
jbe
jne
in
sub
mov
sub
adc
or
add
inc
clc
inc
hlt
inc
lock
in
inc
call
inc
faddl
or
sbb
xchg
or
aas
mov
sbb
adc
std
jnp
in
in
jae
fsubrl
sub
stos
mov
sub
je
je
mov
pusha
data16
mov
xchg
xor
fwait
mov
pop
xchg
js
lds
sub
jg
or
and
test
sti
cld
inc
cs
je
inc
sbb
cmp
cld
push
and
add
std
dec
push
pop
adc
mov
cmp
call
lods
mov
loopne
jl
fs
inc
daa
pop
popa
sbb
scas
mov
aaa
and
mov
jecxz
xchg
or
xchg
dec
xor
adc
test
xor
adc
add
test
shlb
mov
jns
aaa
add
mov
aaa
inc
mov
add
popf
xchg
cmp
loopne
mov
es
mov
mov
cmp
shlb
insl
xor
push
add
out
xchg
push
sub
pushf
mov
inc
push
clc
mov
inc
hlt
and
cmpsl
push
sub
stc
call
outsl
inc
hlt
mov
inc
adc
xor
mov
ja
mov
push
mov
push
cmp
test
into
adc
jnp
popa
aaa
adc
inc
push
scas
mov
pop
daa
testl
mull
bound
xor
xor
xchg
sti
in
cmp
lds
call
imul
clc
mov
fidivrs
xor
lods
shrb
lds
pop
jbe,pn
mov
imul
stos
frstor
jae
clc
lahf
mov
xor
pusha
std
sub
lods
inc
mov
mull
imul
enter
repz
shl
cs
cmp
insb
mov
cs
mov
mov
and
mov
js
jb
mov
je
in
inc
arpl
inc
xchg
js
lods
or
push
fistps
mov
aam
in
ret
push
ss
pop
pop
shlb
xor
inc
mov
addr16
jle
jne
xchg
push
movsb
adc
sbb
out
mov
pop
in
mov
lods
ss
lret
and
add
fs
data16
xchg
test
cltd
xlat
or
lds
inc
outsb
and
repz
stos
jle
loop
sbb
enter
andps
and
out
cmp
in
jmp
mov
cmp
test
imul
rcll
fstpt
ja
in
jno
jae
imul
mov
mov
cmp
jge
aaa
push
cmc
xor
rcll
xlat
jecxz
ret
aad
push
xlat
call
sub
icebp
out
inc
jns
sbb
orl
icebp
xchg
sbb
or
or
cwtl
xor
sub
int3
and
sub
pop
lds
fs
jns
jg
push
and
inc
fimuls
adc
mov
xchg
cmpb
and
aad
sti
je
mov
ja
popa
je
and
add
xchg
in
add
pop
xchg
mov
stos
cmc
adc
or
jo
inc
jbe
jl
jo
add
xor
or
and
pusha
aad
cmove
mov
xchg
sbb
mov
pop
mov
push
aad
sub
and
jg
jae
push
xchg
push
mov
gs
cli
lock
jg
and
and
add
and
std
les
xchg
mov
xor
sbb
push
loope
xor
xchg
clc
push
ja
dec
in
push
out
sbb
rorb
pusha
in
std
bound
movsb
xchg
add
add
mov
xor
mov
mov
cld
xor
jnp
cwtl
mov
mov
push
in
and
in
or
jecxz
sbb
adc
and
and
and
enter
rclb
dec
inc
adc
movsb
call
clc
lret
jae
sarb
out
sub
sbb
cmp
stos
ret
cld
cmpsl
in
in
in
dec
mov
pop
int3
mov
imul
mov
mov
jp
adc
sub
xchg
lods
jne
cmp
lods
shl
add
mov
mull
test
aam
xabort
enter
loopne
mov
push
or
daa
das
inc
pop
fadds
jno
xchg
sbb
and
sub
sbb
sub
stos
lcall
xor
aaa
addr16
cmp
or
std
xchg
and
jnp,pt
aad
loope
xor
push
clc
jge
mov
pop
in
add
lods
mov
fs
cmc
xchg
sbb
jg
lahf
pop
loop
sbb
andb
xchg
mov
daa
xchg
cmpsb
jbe
sbb
sar
xor
dec
in
hlt
mov
and
insb
jbe
les
mov
push
jae
cmp
or
cmp
fs
hlt
sarl
adc
sbb
cmpsb
xchg
loope
lods
lock
decb
dec
in
or
push
jae
inc
push
in
xor
and
loopne
inc
insb
jge
rcr
popf
aaa
pop
pop
add
test
out
pop
shll
enter
ja
hlt
mov
inc
sbb
mov
xchg
mov
add
test
loopne
aam
or
stc
inc
pushf
in
mov
inc
aad
jmp
adc
ljmp
repz
roll
xchg
cmpsl
dec
or
and
mov
xchg
adc
and
dec
or
jne
or
das
xchg
pop
mov
add
pop
imul
xlat
das
xor
jne
sbb
xor
push
lahf
mov
je
mov
mov
inc
scas
or
lods
sbb
mov
int
je
mov
mov
fistpll
out
ror
loop
mov
push
mov
xchg
std
inc
or
out
cmp
js
je
xchg
loop
and
mov
adc
cmpsl
cmp
adc
cld
mov
add
aad
sub
pop
xchg
xor
cwtl
xor
test
dec
jae
in
lods
cmp
iret
ret
fdivl
mov
daa
xchg
out
aam
aam
aam
jecxz
sti
jnp
movsl
mov
in
fldl
inc
jg
inc
addb
jg
jecxz
aad
pavgb
pushf
hlt
pop
mov
std
jae
shlb
ds
and
mov
lods
xor
rep
mov
xchg
cmp
add
in
pushf
mov
jnp
and
xor
or
lret
dec
aam
push
mov
push
or
stos
pop
lock
sub
jp
rol
adc
push
cmp
mov
int3
push
les
aaa
aaa
aam
insl
mov
adc
out
xor
out
test
test
idivl
loopne
xchg
lret
clc
movb
in
fs
sub
std
and
js
or
testl
fwait
sbb
pop
cmp
int
jae
iret
mov
scas
jnp
jg
mov
mov
push
push
and
jo
stos
inc
arpl
add
subb
mov
jnp
stc
pop
pop
test
pop
jle
cmpsb
cmp
std
cmpsl
daa
ja
movsb
cmpsl
jle
dec
mov
mov
push
or
scas
lds
mov
cld
addr16
loopne
adc
daa
mov
lahf
ret
mov
std
xchg
mov
and
dec
scas
cmc
inc
in
es
mov
pop
jge
fdivs
xor
lock
xchg
enter
jo
push
mov
xchg
movsb
jae
in
lods
pushf
dec
out
fildll
pop
push
xchg
lods
mov
fcoml
push
pop
fildl
inc
jg
test
ret
aas
cmp
jg
jne
aad
in
mov
nop
daa
scas
lods
hlt
cmp
mov
cmp
sub
push
sbb
cmp
mov
adc
xchg
in
hlt
mov
je
add
push
cmpsb
and
jnp
mull
xor
jge
rolb
mull
pop
mov
icebp
mov
inc
movsl
xchg
ja
jle
stos
add
xchg
cld
xor
movsb
or
mov
stos
mov
leave
jle
call
addr16
pop
mov
incb
xor
mov
or
es
pop
and
xchg
fcmovnbe
jmp
addr16
mov
inc
out
adc
and
aad
loopne
mov
insb
inc
lds
lods
adc
sub
sub
cmp
ja
adc
outsl
cwtl
lds
xchg
xlat
xor
push
mov
dec
mov
dec
xchg
and
daa
mov
mov
mov
mov
pushf
push
xchg
lahf
cwtl
jno
pop
imul
adc
inc
ja
mov
nop
xchg
sti
and
cli
or
in
aad
adc
add
lds
add
mov
lds
addl
iret
fdivrl
mov
addb
icebp
nop
movsb
push
xchg
push
pushf
and
inc
fs
out
mov
adc
push
add
ret
and
push
pop
mov
andl
repz
xchg
out
fs
fldl
mov
mov
lds
and
sbb
and
in
test
loop
cmpsl
xor
sub
in
loop
add
pusha
in
sub
fs
ret
mov
jp
inc
ja
test
jecxz
push
fndisi(8087
out
fs
add
xchg
shlb
test
pop
mov
ret
out
add
lcall
xor
jp
and
mov
push
notl
mov
adc
push
movl
ss
add
mov
ss
xchg
push
sub
in
xchg
loopne
and
and
sahf
not
popa
jp
test
movb
lds
in
pmulhuw
mov
mov
daa
adcl
push
push
inc
add
pop
sti
adc
movsb
aad
stos
inc
push
in
mov
hlt
push
test
lds
add
cli
fidivl
mov
hlt
out
inc
sahf
movsl
add
pop
loop
pop
push
inc
push
mov
and
hlt
les
and
xchg
std
loopne
loopne
subb
and
pusha
test
add
dec
xor
mov
dec
xchg
pusha
inc
sbb
push
daa
add
stos
test
push
inc
in
nop
cmpb
inc
or
mov
aad
cmpsl
daa
sbbl
sub
es
fs
xor
call
les
or
pop
adc
into
loope
outsw
jnp
sub
ss
jecxz
loop
xlat
jp
fcompl
into
pushf
mov
mov
lds
popf
and
lcall
popa
out
scas
mov
add
add
roll
andl
mov
xchg
push
shll
inc
adc
andl
lahf
les
xchg
andb
testb
mov
sub
movsb
movsl
xlat
and
repz
aaa
cmp
pushf
into
cmpsb
test
push
mov
gs
adc
adc
and
popa
div
and
pushf
out
jne
out
pushf
scas
out
test
es
stos
aas
shl
shll
mov
mov
js
incb
ja
in
pop
or
mov
test
dec
inc
add
sub
dec
andb
in
leave
xchg
jnp
std
or
adc
test
jne
mov
sub
add
stc
loope
or
dec
addr16
aas
dec
inc
dec
or
aad
inc
sub
xor
mov
in
out
inc
loope
push
adc
inc
push
mov
cmp
fimull
loopne
add
add
push
jmp
and
jo
adc
or
and
add
inc
inc
jmp
std
leave
shlb
pop
cmp
cmpb
xor
std
leave
inc
cld
xor
lds
adc
scas
inc
ret
xor
pop
pop
inc
xchg
push
xor
or
shrb
dec
fadds
roll
and
xor
push
dec
xchg
movsbl
sbb
cmp
push
inc
xor
aad
mov
sbb
or
enter
mov
fs
lods
sti
pop
mov
cmp
adc
xchg
sub
sbb
pop
jb
fidivl
cmp
sbb
xor
icebp
and
dec
mov
rcrl
in
sub
mov
mov
mov
rcl
xorl
sub
add
add
imul
lret
scas
daa
aas
loope
sub
int3
movsb
in
aas
adcl
add
push
in
addr16
aaa
fs
cmp
mov
icebp
sahf
aam
andl
and
icebp
das
insl
mov
pop
mov
mov
ja
out
ds
sti
mov
or
sbb
mov
dec
shrl
sbb
getsec
rol
out
sbb
sub
dec
xchg
aaa
fisttps
dec
repnz
or
mov
adc
aad
negl
adc
xor
sub
lods
stc
or
cli
adc
mov
sbb
loopne
cmp
icebp
into
setle
in
ret
aaa
and
sbb
fildl
jmp
inc
aad
sbb
or
push
lret
pushl
add
les
movaps
arpl
adc
stc
stc
shrl
adc
popf
inc
les
aas
cwtl
adc
adc
pop
sbb
jecxz
jmp
repz
test
adc
loope
sti
xor
push
notl
inc
loope
add
loope
fnsave
in
pushf
push
mov
add
fwait
inc
mov
iret
mov
loop
ret
and
ja
jo
test
xchg
mov
adc
adc
push
push
inc
mov
loope
sbb
inc
add
dec
mov
sbb
or
cmp
inc
sbb
xchg
cmpsl
es
inc
sub
mov
ret
push
cmc
cmp
push
push
and
adc
adc
and
arpl
mov
jl
cltd
and
and
and
jo
mov
push
popa
inc
jno
mov
inc
jl
or
sub
sti
packsswb
add
outsb
adc
push
sti
test
adc
xchg
cld
xor
int
lret
jne
shrd
cmpsl
je
and
loope
jne
mov
std
sub
scas
inc
pop
push
cwtl
in
int3
cmp
outsl
lahf
mov
imul
loope
stc
push
pop
and
inc
lods
add
mov
stos
pusha
inc
stc
fildl
into
mov
lods
je
std
repz
sbb
xchg
idivb
jb
fcmovu
sbb
enter
ljmp
xor
sub
stc
xor
outsb
out
jo
inc
adc
sbb
in
arpl
rorl
std
lret
subl
xor
inc
mov
aad
xor
pop
and
in
push
int
lods
popf
pop
mov
and
cmp
xchg
add
xor
sbb
mov
cmpsb
in
sti
push
int3
aad
jmp
xor
and
pop
inc
ss
dec
xchg
cmp
movb
xchg
shll
jmp
and
or
pop
sbb
int
and
lret
dec
mov
mul
lea
mov
mov
and
jl
mov
push
out
xchg
iret
push
and
push
dec
in
sbb
sub
add
cmp
es
mov
enter
aas
pop
jmp
and
sbb
aad
xor
pop
inc
in
add
mov
and
xor
mov
stc
scas
and
sbb
mov
inc
aad
cmp
out
xor
or
nop
adc
dec
push
adc
or
movsl
xor
pop
cwtl
jae
loope
dec
mov
adc
inc
jmp
fldt
jl
loope
jge
sbb
xor
pop
imul
aas
mov
or
sbb
in
out
and
imul
sbb
daa
stos
test
add
mov
fistpll
push
push
out
mov
pmulhw
movsb
aaa
sbb
and
pop
dec
sbb
cmp
aad
jae
jge
mov
out
push
mov
pop
pop
and
lds
arpl
jmp
loopne
sahf
rol
std
nop
pushf
xchg
cmpsl
push
jg
push
xchg
pop
xor
pop
movsb
and
pop
adc
std
fildl
adc
ja
mov
sbb
bswap
test
adc
add
test
sbb
inc
aaa
xor
and
cmp
rorl
sub
daa
adc
sbb
rcll
shll
xor
or
mov
sbb
loope
int3
xor
setle
adc
push
outsl
fimuls
iret
sti
mov
xchg
adc
sub
in
sub
loope
stos
xchg
std
btc
sbb
mov
das
add
xor
mov
test
out
adc
stc
push
test
adc
inc
pop
mov
inc
icebp
aad
mov
xor
and
jl
sti
shll
adc
sbb
aas
jbe
cwtl
or
or
ja
movsl
test
das
mov
pop
rcrl
ljmp
addr16
dec
push
aam
in
sub
xchg
mov
xchg
mov
and
pop
stos
sbb
adc
sbb
and
xchg
sub
push
add
aam
xor
fisubrl
in
sbb
sbb
aaa
in
add
jge
and
mov
pop
lods
lcall
aam
out
cmp
cmp
aas
cmpl
xchg
xchg
sar
inc
rcrl
negl
mov
xor
shrl
mov
movsl
divl
ret
adc
add
adc
jp
call
mov
push
movsb
sub
adc
xlat
ret
or
sbb
inc
sub
mov
ss
jp
and
repz
inc
sbb
mov
inc
xor
add
pusha
push
mov
jne
push
std
sub
inc
imul
shll
js
mov
psrlq
icebp
pop
adc
test
and
lahf
inc
iret
loope
fs
popf
mov
sbb
mov
jns
sub
sub
jmp
ss
scas
sub
pop
xor
shll
jmp
mov
lret
inc
inc
mov
das
mov
in
int3
lret
aaa
mov
inc
stc
xor
jle
cmp
int3
adc
mov
sub
sbbb
push
lea
mov
outsb
repz
and
adc
inc
xor
xchg
jl
jbe
dec
std
xchg
add
sbbb
fildll
inc
adc
repz
adc
or
mov
mov
and
cmp
sbb
outsb
repz
repz
in
sub
ds
nop
add
cld
fadds
ret
scas
out
orl
push
fistpll
jb
sub
sbb
jae
mov
jb
test
adc
adc
daa
or
adc
pmullw
mov
inc
cmc
in
dec
inc
daa
aaa
loopne
adc
out
popa
sub
and
sbb
and
inc
sbb
mov
sbb
mov
icebp
xchg
mov
xorl
scas
xchg
arpl
lcall
aas
push
sbb
add
pushl
sub
cmp
mov
sbb
inc
out
or
xor
out
fstpt
fdiv
cmp
xor
outsl
cli
pop
cwtl
mov
add
dec
pop
xchg
inc
loope
ds
xchg
scas
and
adc
cmp
stos
frstor
rolb
std
sub
adc
aas
mov
insb
negb
repnz
pusha
cmp
sub
loope
pop
daa
xor
hlt
xor
dec
pop
aad
xlat
vcvttsd2si
enter
test
xor
mov
in
sub
mov
imul
pmaxub
xor
xor
mov
push
sbb
pop
stc
xor
or
daa
jnp
dec
push
add
in
fcmovnbe
push
sbb
fs
fdiv
inc
aaa
aaa
comiss
enter
sbb
xor
paddw
scas
aad
xlat
mov
jb
testl
popa
xor
mov
shlb
pushf
sbb
xor
aas
cwtl
push
aam
mov
int3
test
cmp
inc
jo
adc
enter
mov
sarb
push
in
pop
cmp
in
test
stos
add
mov
push
movsb
jl
jmp
xor
das
push
xchg
add
xor
fistpl
jle
roll
xor
mov
xchg
stos
cmp
or
push
int
sbb
stc
lcall
mov
out
xchg
or
ret
fsubrs
stc
mov
insl
arpl
jmp
cmpsb
arpl
sahf
push
push
dec
xchg
push
and
mov
aaa
sarl
xor
xchg
sub
dec
hlt
dec
cltd
ljmp
and
mov
and
fwait
test
pop
adc
mov
loope
inc
bnd
je
dec
test
aaa
xor
lret
and
add
and
xchg
in
mov
cwtl
inc
pop
xchg
out
xchg
sbb
xchg
mov
sub
jnp
popa
fdiv
xchg
push
mov
repz
sti
stc
mov
mov
sub
mov
and
sbb
into
xchg
sbb
dec
jno
aad
add
or
add
dec
inc
aad
loope
leave
mov
dec
es
dec
mov
xor
cmp
dec
roll
dec
mov
mov
or
mov
push
inc
or
cmpb
call
test
pop
cmp
out
inc
or
push
leave
adc
sub
cmp
cmc
push
mov
or
xorl
sub
sub
dec
add
dec
mov
scas
inc
sub
or
aad
and
inc
ret
int
aaa
fs
mov
sbb
cmc
sub
std
inc
jnp
movsb
inc
movb
jns
or
insl
sub
test
lds
mulb
push
dec
test
dec
or
icebp
mov
cmp
jo
inc
and
leave
add
data16
push
leave
dec
scas
sarl
xor
or
mov
push
addb
xchg
ss
cwtl
inc
popf
popa
jecxz
cmp
stc
and
stos
jl
dec
testl
pop
add
dec
cld
out
jns
lds
add
add
xor
xor
dec
ja
inc
adc
and
movsb
mov
cmpsb
in
test
jne
sarl
in
add
loopne
inc
rolb
and
inc
add
loope
jmp
or
iret
leave
mov
add
popa
cmpsb
add
inc
pop
cmp
xor
inc
inc
sub
int
data16
add
cmc
lret
add
fisttps
dec
dec
es
ret
sub
mov
mov
mov
or
sarl
ret
inc
sub
push
movsl
mov
adc
ds
add
popf
dec
scas
add
mov
lds
in
xlat
dec
ret
xor
push
jg
test
cmp
lds
lds
inc
mov
js
cmp
add
hlt
add
add
add
or
setg
or
sub
add
xor
push
cmpsb
adc
dec
add
call
faddp
in
mov
lds
rorb
cwtl
add
dec
int
or
dec
xor
cmp
cmp
sbb
aad
pop
mov
xlat
add
pop
sbb
push
das
dec
jl
call
mov
add
inc
popl
inc
leave
or
stos
cmp
push
sahf
push
orb
cld
sub
push
iret
add
pusha
adc
pop
xchg
es
dec
add
imul
dec
cmp
dec
cmp
sti
dec
insb
adc
push
movsb
or
or
popa
movsb
mov
and
and
xor
and
cs
leave
fnstenv
fs
mov
imulb
sub
add
in
mov
or
xor
mov
in
roll
xlat
movsb
add
int
repnz
bound
xlat
sbb
mov
sbbl
test
xorl
loop
rorl
cmp
mov
jne
xlat
sbb
adc
or
ss
inc
add
ret
repnz
cmpl
imull
test
push
xchg
jecxz
cli
cld
xchg
xchg
cmpsb
add
ret
in
or
test
mov
pusha
fs
adc
and
add
stos
add
data16
lds
dec
pmulhw
pop
lds
mov
and
add
mov
andb
or
pop
jp
ret
add
loop
add
sahf
xlat
add
ljmp
adc
ret
add
mov
fs
les
out
fildl
mov
and
mov
pop
mov
mov
inc
add
xor
jecxz
inc
jns
and
je
mov
xor
pusha
pop
mull
je
es
adc
add
mov
and
pop
inc
mov
inc
jl
jl
cmc
xor
pusha
sub
and
jne
ja
je
js
inc
xchg
cmp
push
and
and
sub
fdivr
fnstcw
aad
out
push
loope
and
inc
xor
mov
aaa
cmpl
test
mov
and
xor
xchg
inc
lods
test
mov
out
pop
std
idivb
push
sbb
pushf
adc
js
adc
repnz
push
in
mov
lods
hlt
push
inc
adc
aam
mov
add
pop
mov
stos
mov
div
cltd
inc
orl
call
fs
mov
jle
pusha
ret
cs
pop
xchg
lods
mov
gs
pop
xor
pusha
out
and
fists
adc
es
and
push
fmull
int
or
sbb
mov
and
insb
jo
xchg
or
fwait
add
inc
mov
icebp
stos
sub
inc
xor
ror
enter
int
divb
shr
icebp
insb
in
std
ret
fdivr
cwtl
lock
cmpsl
mov
and
add
lds
mov
cmc
cmc
inc
or
mov
and
leave
dec
jg
adc
leave
rcrl
dec
and
inc
sub
and
in
sub
loope
cmp
cmp
jmp
xor
xchg
mov
xchg
lods
mov
mov
inc
add
je
insb
push
mov
cwtl
push
shlb
push
stc
push
xor
and
arpl
lds
sti
push
pop
xchg
mov
nop
scas
cmp
xor
cmpsl
mull
and
inc
cmp
sahf
push
daa
fdivs
shrl
popf
mov
inc
xchg
sub
or
std
stc
cmc
icebp
xlat
bnd
aaa
sbb
aaa
cmp
xor
mov
dec
mov
xchg
movsb
popa
lret
pusha
xor
sub
or
dec
jns
into
leave
mov
shlb
push
movsb
dec
mov
pop
ljmp
pop
and
ret
rorb
cld
sbb
test
lret
and
xlat
cmpsb
ss
cmpsb
inc
push
rolb
and
add
and
test
ss
sub
outsl
movsl
loopne
and
cmc
xlat
and
inc
in
mov
js
xchg
pop
mov
jae
jnp
fs
inc
xlat
cmpsl
sbbb
bound
cmpsb
js
jg
outsl
and
sbb
mov
mov
xchg
or
xor
and
mov
sub
and
jne
cmpsl
aam
cwtl
and
nop
mov
jnp
sub
jbe
adc
imul
std
inc
and
and
jno
cmp
das
sub
sbb
pop
insl
add
scas
and
cmc
xchg
inc
and
aam
mov
in
push
xchg
sbb
testl
add
ja
aam
stc
mov
call
xchg
repz
ss
and
or
sub
xor
mov
jg
jecxz
ja
xchg
xchg
and
push
push
jmp
sbb
or
ss
xor
mov
lods
aam
outsl
xchg
push
mov
mov
frstor
mov
divb
mov
test
mov
rcl
addr16
rolb
clc
pop
push
add
xchg
mov
or
cwtl
xor
cmc
lea
aad
scas
aam
pop
xchg
jbe
push
roll
int
xchg
leave
mov
adc
sub
hlt
out
xor
pop
xor
cmc
add
or
inc
int
lds
in
fldenv
fs
fdivrl
ljmp
push
in
mov
cmp
xorb
xor
out
sti
jnp
insb
adc
dec
mov
mov
push
roll
dec
dec
pop
and
mov
mov
dec
inc
lret
cmp
pusha
mov
push
pop
adcb
xor
inc
mov
xchg
out
push
and
das
and
gs
hlt
notb
repnz
pop
fs
inc
xchg
sahf
mov
repnz
add
inc
dec
jb
cwtl
and
cmp
jbe
andl
stc
xor
pushf
inc
enter
cmpsl
aam
std
cmp
stc
out
scas
aas
out
xchg
or
or
cld
into
movl
fbld
cld
int3
daa
or
mov
or
lock
pop
xchg
out
out
inc
andl
inc
popa
xor
std
inc
mov
add
cmp
push
shlb
mov
xchg
aad
aam
sub
std
ljmp
into
aas
dec
adc
sbb
leave
daa
loopne
xor
lahf
jle
orb
inc
pusha
pop
add
sub
in
inc
in
lcall
mov
ja
dec
and
jae
or
mov
movsb
push
inc
lret
gs
sub
shrl
shlb
pushf
adc
or
movsl
push
addb
cld
jne
jbe
cmp
test
xor
dec
ret
xor
cmp
lret
pop
mov
std
fimull
push
bound
cmp
movsb
cmp
or
push
xor
cmp
inc
pop
es
fs
ret
daa
fimull
push
fs
ja
sti
cmp
xchg
fs
jo
mov
push
mov
jno
and
in
push
mov
int
and
mov
aaa
cmp
and
and
repz
pop
add
clc
ret
xchg
inc
push
lahf
mov
addr16
je
cmc
jbe
sbb
xor
or
jmp
ja
stc
jae
inc
shl
data16
movsb
mov
adc
cmc
push
inc
aaa
in
cmp
mov
or
stos
sbb
ljmp
add
sub
addr16
and
xor
pop
pop
jb
ret
sbb
ret
dec
and
movsb
popa
dec
and
cmp
mov
cli
fsubl
pop
inc
lea
es
aam
fs
cmp
movsb
ljmp
in
ljmp
mov
mov
cltd
lahf
and
jp
push
pop
stos
xor
movsb
aaa
xor
in
cmpsl
aaa
xor
cmpl
insl
loope
cmpsb
cmpsb
xchg
inc
ss
xlat
cs
dec
cmp
hlt
loop
cmpb
ret
xor
cmp
inc
testb
sbb
sbb
inc
rcl
bnd
and
mov
jmp
in
jmp
pushf
dec
or
inc
pop
sub
outsl
sub
xor
cmpsl
mov
cmp
mov
sbb
dec
imul
mov
mov
cmp
lcall
mov
xor
fiaddl
js
lods
adc
and
jb
les
inc
shlb
cmp
or
incb
shll
add
and
push
std
repnz
xchg
add
push
std
mov
out
loopne
mov
push
movsb
fdivl
adc
sarb
clc
ljmp
out
mov
and
xchg
xor
andl
andl
cli
testb
xchg
pop
fiadds
out
push
in
xchg
cmpsl
ficompl
or
lds
enter
xor
lahf
xor
movsb
mov
sub
push
hlt
pushf
add
jbe
icebp
ljmp
decb
inc
xchg
addl
in
push
ljmp
fisubrs
fstps
in
out
pop
jge
in
push
fs
sbb
les
mov
jmp
mov
dec
pop
push
xchg
repnz
imull
ljmp
in
xchg
cmpsl
xchg
orl
fdivr
stc
xchg
in
ret
jecxz
mov
fs
xchg
out
repnz
inc
int3
cmp
push
push
fbld
and
ss
cmpsb
fxch
cmc
add
inc
test
mov
ret
loopne
cmp
out
fwait
jle
fs
ss
push
push
jmp
inc
mov
xor
mov
fldenv
mov
das
xchg
mov
rol
sbb
jmp
jmp
cmp
mov
or
leave
lock
add
mov
je
sub
add
cmp
add
and
mov
sbb
and
and
sub
jl
and
aad
mov
xor
cmp
mov
cmpl
push
lcall
incb
test
lret
adc
test
mov
mov
xchg
out
lods
push
sbb
movsb
add
push
add
xlat
not
ret
add
adc
cmpsb
and
or
mull
mov
cmpsl
idiv
mov
pushw
ja
xchg
mov
mull
mov
mov
shrb
and
jo
or
fsubs
std
in
mov
es
cmpsb
jge
cmpsb
dec
les
aam
in
decb
push
ljmp
jae
pop
call
into
daa
xchg
xchg
repz
jo
and
cld
mov
jg
push
add
jno
aaa
cmp
outsl
xor
add
add
mov
and
cmp
out
and
push
stc
add
inc
xor
loope
sti
cmpsb
pop
popf
int3
cmpsb
cli
cmc
out
das
and
int
xchg
ficoml
push
sti
xchg
andl
xor
add
fdivl
add
test
lods
adc
stc
test
notl
out
test
inc
and
lret
sti
in
cmp
cmp
or
xchg
mulb
xor
shrb
push
shlb
inc
xor
cmpsb
mov
cs
inc
scas
adc
adc
adc
and
out
xor
into
add
cld
es
shlb
sub
xlat
lock
ds
daa
pushf
cmp
cmp
clc
fidivs
mov
and
cmpsl
pop
dec
xor
mov
inc
faddp
xchg
and
jge
mov
inc
imull
adc
adc
xor
xor
and
jg
mov
pop
inc
outsb
cmp
add
push
inc
popa
stos
in
daa
fdivrl
cli
nop
inc
in
jns
loop
and
mov
jne
inc
movsl
push
ja
push
adc
pop
cld
add
cmp
push
mov
jbe
push
lds
jb
jmp
cmp
mov
mov
and
push
cmp
xchg
add
and
xor
push
mulb
pop
inc
ss
out
or
shlb
inc
mov
add
lea
pusha
and
repnz
loop
mov
cwtl
xor
cld
pop
add
mov
cld
daa
adc
mov
xor
mov
mov
push
xchg
push
dec
and
in
mov
and
test
adc
inc
mov
xor
ss
and
pushf
adc
fcoms
dec
pop
jecxz
push
or
sti
inc
push
lea
ss
xlat
inc
xlat
dec
and
sub
mov
repz
xor
adc
mov
mov
cmp
cwtl
mov
shll
jbe
mov
xchg
sbb
xchg
mov
cmp
test
cmp
push
lock
lea
push
out
aaa
in
cmpsl
cmp
xchg
push
pop
mov
inc
pop
push
sub
lea
ficomps
xor
daa
into
and
add
cmp
out
sub
cmc
mov
cmp
fs
jne
pushl
xor
and
and
mov
inc
xchg
mov
xchg
cmpsl
and
sub
jbe
mov
and
pop
mov
incb
push
pop
and
dec
test
repnz
and
and
cmpsb
les
test
ss
mov
aam
sbb
inc
stos
cli
es
cmp
push
mov
cmp
inc
out
xor
std
push
mov
pop
fs
sub
out
pushf
xor
inc
xor
add
je
xchg
xchg
inc
aas
data16
mov
push
mov
push
xchg
out
je
xchg
and
inc
aad
mov
in
inc
xchg
ret
cli
int3
gs
out
push
leave
out
das
hlt
pop
mov
sbb
test
sub
cmpsb
ljmp
in
xchg
pop
pop
loopne
std
mov
test
xor
sbb
mov
and
push
xor
lods
and
daa
jl
push
fwait
test
mov
test
in
divb
or
sbb
out
data16
or
inc
adc
scas
xlat
movsb
and
lds
fisubl
inc
fisubs
imul
pop
lds
test
in
adc
arpl
data16
adc
cmp
hlt
aas
cmpsb
xchg
and
shlb
push
xchg
bound
cmc
jbe
mov
test
or
fs
mov
and
xchg
mov
call
inc
scas
mov
and
and
gs
ja
xor
sub
push
jb
and
mov
mul
xchg
data16
stc
and
clc
push
push
jmp
cld
in
aaa
rolb
test
push
jo
adc
stc
xchg
ja
addr16
daa
ss
inc
mov
pop
lret
fs
shl
xchg
and
mov
cwtl
hlt
cmpsl
adc
aam
push
daa
mov
in
roll
jecxz
int
roll
stos
push
outsl
and
and
dec
rorl
fbld
add
leave
sarl
dec
mov
mov
frstor
out
int3
movsb
mov
aam
gs
fists
movsl
int3
iret
pop
test
xchg
xchg
cmp
mulb
gs
add
adc
fidivrs
add
mov
std
push
push
out
xchg
rorb
rcrl
mov
inc
shlb
jb
sub
add
jecxz
ret
and
out
mov
into
gs
out
mov
divl
imul
jbe
enter
mull
daa
cmpsb
cmpsb
aad
push
xchg
sub
enter
mov
hlt
sub
add
loop
xor
adcl
pop
jge
mov
add
addb
cmpsb
dec
sbb
adc
sub
gs
jmp
in
mov
sbb
or
cmp
std
xor
cmpsb
push
lds
data16
ljmp
enter
aas
mov
fiadds
outsb
es
enter
sub
sbbl
and
cmp
std
and
cmc
cld
fwait
cmc
fwait
in
repnz
lds
mov
xchg
mov
push
xor
cmpsw
jmp
fsubp
pop
out
cmp
out
in
adcb
das
jbe
xchg
xchg
jecxz
dec
xchg
cmc
xchg
es
test
je
jbe
sbb
sti
std
mov
jbe
xor
rcrl
int3
mov
xor
mov
out
notl
xchg
ret
in
subl
movsl
std
or
addr16
dec
inc
jbe
scas
addl
xor
out
aam
ja
mov
adc
ljmp
cmp
std
mov
scas
in
mov
jecxz
es
add
insb
cmpsb
cmp
sbb
into
ja
mov
inc
fs
mov
push
ja
lods
aaa
loopne
xor
mov
pop
cmp
enter
je
push
in
notl
xlat
scas
ret
data16
fs
test
mov
xor
divb
mov
lds
flds
xchg
sbb
test
les
mov
orb
imulb
jbe
es
loop
ja
xchg
jle
jge
daa
adc
push
test
lahf
push
add
push
xchg
mov
push
sti
cmp
mulb
xchg
lds
cmp
jnp
iret
test
popf
movsb
out
jp
and
mov
out
inc
push
add
aam
sbb
pop
hlt
mov
xlat
adc
std
aam
in
jmp
inc
sbb
adc
dec
dec
xor
test
and
and
outsb
mov
jmp
and
xor
lahf
push
test
arpl
inc
repz
and
or
sbb
cmp
shl
pusha
imul
ficoml
inc
icebp
sub
and
add
in
cmpsb
push
test
inc
cmc
cmp
pop
push
pop
out
and
rclb
xor
inc
dec
shl
test
not
inc
jo
dec
enter
fidivrs
adc
sbb
jge
or
mov
mov
push
and
inc
movsb
clc
push
xchg
addl
mov
and
adc
mov
mov
sahf
xchg
mov
nop
or
jmp
outsb
data16
pop
or
push
mov
lods
mov
inc
pop
stc
xchg
push
mov
pop
mov
inc
and
pop
adc
divl
adc
sub
fstpt
loope
in
xchg
cmc
pop
aaa
add
jle
adc
mov
and
sbb
cmp
mov
pushf
pop
or
notl
pushw
or
ss
xchg
and
lds
test
cmpsb
jle
pop
in
enter
pop
or
gs
test
jmp
xchg
lock
out
jnp
shlb
lods
dec
inc
call
xchg
movl
mov
ds
and
out
xchg
out
divb
lahf
movsl
jbe
fisubl
jno
daa
sub
cmc
bnd
pop
daa
movsb
into
and
and
pushf
imul
jbe
pop
add
pop
insl
mov
ljmp
xor
ficoml
mov
ja
fs
gs
addb
add
push
dec
cs
xlat
push
mov
add
push
fs
add
testb
sbb
es
add
les
test
gs
imul
aam
enter
ja
sbb
inc
dec
lock
xchg
shlb
gs
addr16
xor
out
gs
push
adc
ss
xchg
mov
iret
push
mov
jge
inc
xor
xor
and
cmp
inc
dec
aad
mov
and
data16
inc
test
mov
cmpsl
and
sbb
xor
pop
clc
push
push
ss
imul
data16
or
and
roll
xorl
fidivrl
xchg
aaa
and
push
fs
and
push
aam
push
test
sub
and
pusha
insl
aad
sub
add
popa
sahf
and
dec
cmp
xor
add
dec
jmp
leave
dec
sub
imul
pop
dec
pop
mov
pop
dec
orb
pop
pop
and
popa
mov
and
pop
xchg
add
mov
sbb
leave
dec
out
add
test
or
push
add
xor
insl
scas
cmp
cmp
stos
sub
push
push
xor
dec
lds
dec
and
mov
push
and
dec
pop
imul
and
ret
or
and
int
test
xchg
iret
inc
mov
sub
popf
and
leave
add
mov
cmpsb
add
sbb
pushf
and
sbb
divb
xchg
hlt
or
xchg
enter
push
pop
fs
out
out
xor
mov
and
inc
rorb
inc
xchg
jecxz
or
inc
pushf
and
clc
mov
and
push
aad
shl
mov
scas
push
xchg
mov
aad
and
pop
mov
inc
inc
je
pushl
divl
mov
xor
jne
cmpsl
mov
push
cmpsl
xchg
push
movsl
fmul
and
mov
jle
lret
push
inc
in
xlat
xchg
xor
andb
push
test
and
inc
jno
fwait
mov
les
mov
repnz
incb
mov
inc
or
mov
push
test
inc
jns
sub
sbb
mov
xor
sbb
inc
es
enter
mov
xlat
inc
jnp
sbb
divl
movsl
repnz
push
mov
ret
xchg
aam
push
sub
push
ss
gs
ret
les
int3
mov
mov
aam
hlt
xchg
and
decb
and
in
and
ret
jmp
neg
adc
inc
jmp
movsl
aaa
push
sbb
out
jmp
xchg
out
xchg
fidivrs
push
pop
jge
xchg
cmp
mov
pop
in
sbb
pop
cmpsl
push
daa
lret
mov
mov
loop
out
aam
jmp
jno
in
shl
jmp
gs
push
ds
add
movsb
stos
std
mov
push
and
xchg
mov
xchg
les
incl
cmp
sbb
xor
cmp
or
fisubl
pop
sbb
out
movsl
add
mov
sbb
ss
fs
out
fidivs
adc
mov
pop
shlb
repnz
and
pop
pop
cmpsb
mov
or
es
add
cmp
fnsave
outsl
adc
gs
cmpsb
aad
clc
push
faddl
fs
xor
push
enter
cli
arpl
mov
push
or
dec
getsec
mov
in
cmp
aam
sbb
xor
mov
aaa
aas
aaa
enter
xchg
data16
cmp
icebp
and
mull
outsl
test
in
in
std
dec
xlat
roll
mov
lds
ss
cli
rclb
mov
jecxz
bnd
dec
or
mov
dec
ss
add
ficompl
inc
gs
test
push
mov
add
inc
mov
test
cmp
adc
sbb
lret
repz
xchg
add
mov
test
int3
out
lds
add
or
mov
pop
es
push
ret
xchg
inc
test
fs
sahf
fs
push
ja
mov
daa
jl
sbb
mulb
inc
pop
xchg
and
out
and
es
test
loopne
sbb
cmp
mov
xchg
push
xor
cmp
xchg
push
std
notb
mov
add
push
fwait
cmp
push
cmpl
or
and
pop
lds
aas
hlt
pop
push
fstl
xor
and
je
shll
add
ficomps
ss
outsb
cmpsl
cmpsl
inc
je
out
xchg
jecxz
mov
cli
hlt
adc
dec
gs
filds
xchg
out
mov
mov
popf
push
push
out
and
push
push
inc
xorl
xchg
pop
hlt
daa
xlat
lods
inc
decl
aas
pop
lahf
inc
sarb
mov
aam
inc
lds
lret
mull
cmp
cmpsb
sbb
inc
stos
out
cmc
out
or
or
out
shr
out
movsl
mov
aas
daa
into
aaa
stos
sahf
icebp
insl
testl
stc
repz
stos
jne
stos
inc
daa
inc
xchg
push
and
popa
add
lods
xor
fdiv
repnz
data16
mov
xchg
jne
mov
mov
stc
push
fs
out
cmc
jl
mov
mov
jns
and
lds
cli
in
in
xlat
lahf
adc
dec
and
xor
aam
mov
push
cmc
cmp
loop
cmp
scas
out
addr16
xor
ret
aad
and
and
sub
daa
add
push
divb
gs
sub
and
jecxz
and
aaa
ljmp
mov
push
cli
and
pusha
mov
pop
out
test
sub
mov
imulb
xlat
shll
jge
out
inc
std
lret
mov
fndisi(8087
xchg
test
mov
pop
fld
add
xchg
add
pop
adcl
dec
mov
inc
aad
add
lods
je
add
movsb
cs
xor
ss
ss
and
xchg
push
jmp
push
add
movsl
icebp
and
mov
mov
ret
adc
mov
xchg
dec
shll
inc
lds
push
jl
aad
rolb
mov
es
test
dec
pop
push
fdivrs
shlb
mov
cltd
mov
and
xlat
jecxz
add
dec
gs
sti
and
mov
mov
lahf
add
stc
push
sbb
aam
movsl
sub
inc
and
or
lods
dec
shl
testl
out
mov
fldenv
xor
add
adc
cmpsl
fidivrl
inc
mov
das
pop
add
inc
sub
xor
and
sbb
push
and
mov
inc
out
jae
in
mov
xchg
je
pop
adc
hlt
ret
cmpsb
mov
xlat
xlat
stc
pop
lods
xchg
rolb
xor
add
inc
pop
mov
loope
out
sbb
cmp
sti
addr16
add
add
mov
aam
in
aam
lds
sti
add
test
ret
push
push
cmp
and
incl
test
mov
mov
xchg
adc
pop
insl
data16
stos
test
sub
ljmp
xchg
loopne
fs
pop
or
xchg
xor
gs
cmp
addr16
cmpsl
js
lds
int3
mov
sti
aad
inc
in
dec
in
and
add
push
sbb
add
fcmovb
inc
nop
pop
add
es
mov
int3
fists
push
adc
fwait
mov
addr16
jmp
mov
adcl
mov
inc
nop
or
pop
mov
faddp
jbe
xchg
mov
inc
mov
cmc
lock
mov
pop
out
add
aam
cmpsb
loop
div
jge
adc
mov
mov
inc
movsl
push
lds
test
and
xor
push
mov
mov
mov
inc
add
and
out
inc
cli
fxtract
mov
cmp
cmpsb
mov
ljmp
mov
stc
inc
jb
out
and
dec
notl
jb
bound
cli
push
adc
cs
stc
aad
adc
cmp
mov
jl
fs
push
and
jmp
xchg
in
jno
adc
xchg
xor
push
xor
or
mov
aas
je
jae
cmpsb
in
in
push
pop
inc
and
loop
add
mov
int
pushf
pop
gs
add
jne
notl
aaa
test
xor
adc
pusha
sbbl
jb
ja
jo
push
adc
mov
js
cld
pop
xchg
lcall
jo
push
movsb
jmp
in
mov
mov
cld
xchg
push
mov
data16
ja
out
mov
lods
pop
xor
and
push
nop
add
mov
push
xor
out
xor
daa
cmp
pop
xor
pop
repz
and
fdivrp
xchg
cld
cmpsl
mov
setne
jecxz
lds
aas
pop
repz
in
inc
and
fwait
pop
jb
in
das
out
xor
enter
and
aaa
jge
cmpsb
dec
mov
data16
ljmp
xchg
push
jmp
sbb
and
out
dec
out
lcall
dec
adc
aaa
and
inc
sbb
pop
mov
and
pop
es
push
repnz
stos
adc
add
inc
out
dec
jne
lret
int
or
sar
out
clc
and
cmpsb
out
sub
icebp
loope
imulb
add
mov
jne
inc
ss
cld
aaa
stc
mov
imul
cmp
xor
and
aaa
pop
out
in
hlt
out
jb
cwtl
and
xor
adc
cs
lds
je
rsqrtps
push
or
fsub
lods
mov
das
push
repz
xor
or
lods
pop
mov
and
movsl
cmc
xlat
inc
mov
ret
mov
sbb
movsl
push
sbb
and
out
push
pop
xor
adc
data16
addr16
jle
sbb
jne
pop
mov
pop
inc
pushf
in
sbb
add
cmp
out
out
mulb
hlt
mov
iret
ja
xchg
mov
mov
nop
xchg
and
test
ret
repnz
pusha
in
xchg
es
mov
hlt
movb
rolb
xlat
movsl
out
cmp
cmp
push
repnz
add
mov
insb
and
xor
adc
push
push
jecxz
jbe
jmp
fldenv
mov
mov
les
xor
xor
aad
or
xlat
js
jmp
loopne
xchg
clc
aaa
sbb
push
enter
mov
and
cmpl
aam
aaa
sbb
les
mov
xor
cmp
mov
repnz
aas
pop
adc
jne
shll
ljmp
loop
mov
rcrb
mov
testl
push
jmp
daa
je
mov
les
push
and
rorb
mov
je
and
std
in
int3
cmp
mov
xchg
adc
jmp
out
inc
pop
jl
mov
rol
jo
nop
mov
and
es
fs
movl
out
mov
fldenv
adc
je
hlt
hlt
ljmp
fs
xor
in
in
in
testb
inc
inc
aaa
das
je
jge
cmpsb
fs
mov
divb
jl
adc
dec
jns
nop
push
loope
in
and
jge
or
pop
sbb
xor
aaa
pop
std
adc
inc
cmp
mov
addb
cmp
cmp
fwait
es
in
std
or
arpl
cmp
rolb
xor
subb
adc
xchg
xor
sub
inc
sbb
es
sub
push
xor
ss
jo
sbb
add
xor
in
pusha
adc
cmpsb
adc
inc
xchg
addb
sub
stos
and
mov
ss
mov
cmp
sbb
xor
push
sub
adc
add
out
lcall
test
jae
inc
cmp
sbb
mov
xor
ss
sub
jge
imul
sub
dec
mov
lahf
andl
lret
jg
jl
mov
mov
cli
and
shll
and
ja
jnp
sbb
loop
mov
push
lds
test
ja
mov
lret
cmp
mov
addr16
les
cmp
sub
sahf
es
pop
int
dec
lods
adc
xchg
xor
mov
aam
clc
and
and
mov
mov
and
imulb
enter
push
lea
sbb
jl
lcall
shll
jge
pusha
sbb
push
test
test
mov
mov
lret
scas
or
fcomi
arpl
aaa
js
sbb
mov
inc
faddl
and
cmp
mov
cltd
lret
dec
rcrb
lods
dec
jo
jno
xchg
hlt
cmp
xor
add
xchg
popf
push
shll
add
in
xor
adc
push
sar
movl
addl
cmc
add
addb
mov
cld
inc
mov
aas
add
sub
ret
jnp
in
inc
mov
sti
hlt
mov
xor
mov
lock
mov
cmp
jae
mov
mov
jbe
repz
inc
repnz
in
lods
outsl
das
out
inc
scas
outsb
cs
scas
insl
push
imul
stos
push
adc
test
mov
jae
jo
xor
cmp
inc
aas
cmpl
add
inc
inc
cld
add
ret
jg
icebp
push
je
mov
sub
xor
insb
ja
mov
cmp
cmp
dec
fidivrs
into
cmp
or
inc
jmp
rol
inc
fwait
mov
dec
mov
pusha
jne
sahf
into
dec
cmp
les
dec
inc
mov
mov
or
push
dec
xchg
movsl
mov
ret
ljmp
cld
pop
js
jne
into
push
lret
fmul
orl
mov
fdivl
dec
adc
iret
mov
xor
dec
jle
inc
lret
repnz
mov
inc
cld
ljmp
inc
push
test
dec
lods
sahf
xchg
stos
in
inc
xor
cmp
sub
test
dec
scas
lret
adc
cmp
jns
jae
mov
xchg
jg
cld
inc
cmp
daa
xchg
dec
jne
inc
cs
mov
aam
xchg
xor
dec
shlb
imulb
jnp
jne
addr16
insl
xchg
xchg
or
les
orb
and
pop
pop
aam
inc
fsubrp
je
xor
ret
pop
dec
push
stc
das
inc
std
adc
je
inc
aaa
stos
mov
cmp
shll
mov
adc
aad
lret
icebp
lret
fists
pop
xchg
sub
jp
or
mov
ret
jecxz
mov
es
insb
in
ret
dec
lcall
push
roll
and
sub
fstps
sub
sub
push
lods
inc
inc
dec
or
shrb
aaa
jmp
ljmp
inc
adc
pmaxsw
jne
iret
mov
inc
dec
add
ljmp
push
dec
lcall
and
nop
xchg
sub
outsb
sti
jmp
inc
or
ljmp
inc
inc
movsl
mov
push
std
arpl
inc
test
ret
mov
cmp
sysenter
cmp
mov
pop
push
mov
or
or
pop
jne
inc
and
mov
mov
inc
dec
mov
cli
pop
arpl
out
mov
pop
dec
inc
pop
cmp
inc
add
pop
push
movsl
rolb
and
sbb
sar
decl
lea
push
or
and
mov
ss
cmp
cmpsl
jnp
inc
aam
mov
sub
adc
test
adc
inc
mov
cli
jp
lods
nop
or
les
xor
pop
push
call
imul
jns
sub
jp
add
das
aaa
inc
push
mov
xor
bound
pop
pop
jno
jg
inc
mov
dec
mov
inc
aam
pop
xorl
fisubrl
push
mov
dec
fadd
and
adc
add
xchg
inc
stos
scas
mov
inc
sarb
ret
das
and
loop
test
xor
jle
inc
sti
fcmove
or
sub
xchg
imul
int
out
or
mov
inc
pop
shrb
xchg
fisubrs
popf
xlat
xchg
cs
dec
fcoml
cmp
jg
xchg
insl
push
push
pop
sahf
sbb
cs
jb
inc
outsb
rorl
setnp
rcrb
ror
loopne
inc
repnz
cs
jae
jne
push
out
leave
fwait
inc
cmpsb
dec
imul
mov
in
clc
inc
fdiv
add
push
cmp
mov
mov
adc
sahf
addr16
cli
or
les
xchg
jle
lret
mov
jmp
out
shlb
movsl
jae
addb
mov
popa
icebp
fistl
test
mov
pop
loope
dec
adcb
pusha
loop
int3
inc
sub
inc
xchg
mov
mov
sub
insb
outsb
lret
pop
repz
cmp
push
int3
pop
daa
ficomps
cwtl
xor
push
cmc
sbb
jge
imul
into
lret
mov
sbb
mov
mov
fcmove
xchg
or
fwait
fwait
scas
cmp
xchg
dec
aas
fistpll
and
mov
inc
push
push
es
xor
inc
dec
int3
mov
mov
dec
push
xchg
or
inc
push
push
sbb
imul
mov
inc
testb
jmp
inc
ljmp
insb
jne
inc
mov
test
inc
and
ret
xchg
in
inc
repnz
lea
cmp
dec
xor
xchg
cltd
xchg
pop
fisubrs
xchg
add
int
mov
mov
cs
push
movl
inc
push
push
pop
dec
daa
aas
dec
sub
lea
cld
sub
les
test
add
int
hlt
dec
xchg
inc
jns
push
cwtl
pop
lods
mov
dec
jb
cmpsb
adcb
dec
jnp
out
repnz
test
jnp
inc
xchg
mov
cmp
ret
fiadds
scas
pop
push
ds
sbb
lcall
pop
xlat
fcompl
in
mov
sub
int3
add
xchg
arpl
xchg
lcall
inc
data16
cmp
fwait
scas
push
jg
inc
andb
cs
mov
cmp
mov
mov
movsl
push
cmp
cltd
mov
pusha
inc
xchg
es
mov
push
jno
sbb
add
lods
push
stos
mov
enter
loopne
fwait
pop
fsubrl
leave
push
dec
popf
shl
push
mov
inc
xchg
jne
adc
imul
fwait
outsl
sub
lea
mov
inc
cltd
or
mov
inc
adc
and
jo
pop
stos
inc
push
dec
jno
mov
adc
xlat
mov
ret
fldcw
in
outsb
ds
inc
push
dec
xchg
pop
xchg
pop
inc
jg
mov
int3
inc
mov
xor
lea
cmp
repnz
or
aas
ror
sbb
dec
xor
dec
add
inc
xlat
ja
pop
inc
cmp
pop
jae
adc
mov
lret
jmp
push
inc
lahf
loop
mov
inc
data16
sahf
out
out
push
push
and
mov
lcall
sbb
jo
jbe
sub
insl
rclb
cmp
pop
mov
mov
jge
lds
adc
je
incl
ss
pop
adc
out
xchg
push
jmp
cmp
inc
inc
or
fcmove
pop
jg
inc
bound
cwtl
or
pop
inc
test
xor
mov
or
inc
and
inc
pop
inc
arpl
jecxz
iret
jnp
add
dec
insl
jne
push
inc
dec
lds
push
add
dec
mov
imul
sahf
stc
ja
jbe
cmp
pop
jmp
aam
jae
and
cmpsb
inc
mov
mov
into
jl
or
push
or
sahf
pop
cs
jne
or
leave
mov
dec
mov
cmp
ficoml
push
adc
inc
push
pop
mov
push
mov
cmpl
xlat
jg
popa
push
sub
xchg
or
or
inc
xorl
mov
and
inc
mov
int
inc
int
enter
adc
hlt
push
pop
push
inc
xchg
stc
dec
xor
mov
mov
frstor
addr16
mov
add
inc
cld
pusha
dec
mov
cmp
and
in
inc
aam
xchg
push
dec
sub
lds
imul
repnz
hlt
mov
inc
and
aad
push
and
adc
inc
scas
jne
cld
mov
xor
adc
mov
inc
dec
lahf
jne
jl
ss
int
mov
fiaddl
sub
jle
imul
jmp
pushf
lea
fwait
or
sbb
aad
pop
jge
dec
loop
xchg
or
loop
sarb
inc
fs
and
xor
pushf
mov
xchg
fdivrl
lods
jl
aad
dec
inc
insb
and
icebp
int
add
jns
and
insb
xor
test
ss
ja
jno
enter
jnp
xchg
mov
std
xor
jl
sub
jo
nop
or
xchg
mov
dec
cmp
mov
jne
and
cmp
aad
mov
fnsave
cltd
repnz
sahf
or
inc
cmp
or
aas
shr
mov
aad
inc
mov
jmp
inc
jae
xchg
pop
les
mov
dec
gs
mov
ja
notl
xchg
icebp
stos
sub
mov
ja
add
xchg
cmp
push
cld
cwtl
cmpsl
lds
push
leave
sub
mov
in
iret
adc
les
cmpsl
repz
lods
stc
std
and
sub
and
xor
or
pushf
jg
cmc
xchg
jns
loop
mov
adc
movsb
xor
jo
or
xor
adc
jae
movaps
test
dec
arpl
loope
std
inc
frstor
xchg
stos
lds
jae
cmp
xor
xlat
iret
push
sub
inc
adc
mov
sub
pop
stos
cmc
arpl
addr16
mov
adc
push
push
loope
xchg
jmp
cmp
aaa
mov
icebp
and
out
sub
cmp
xor
cwtl
mov
push
imul
sarb
test
mov
aaa
sub
add
and
xchg
jnp
pusha
add
in
add
dec
in
sbb
jecxz
movsb
and
dec
xchg
sbb
pmaddwd
shll
mov
stos
push
outsb
addr16
popa
sbb
sbb
ds
cmpsl
mul
cmp
xchg
into
test
shrb
loope
ja
jnp
sbb
mov
iret
mov
sub
cmc
mov
xor
xchg
jnp
sar
xchg
mov
insl
xchg
inc
push
rclb
mov
sub
inc
dec
push
test
in
push
push
jge
inc
std
call
xchg
dec
mov
pop
jg
clc
cmp
mov
mov
cmp
sbb
xchg
xchg
loope
rol
xchg
outsb
jbe
les
rorb
loope
jmp
jne
cmp
add
sbb
movsl
fisubl
nop
jl
addr16
in
jg
or
mov
insb
test
mov
cld
xor
adc
jbe
xchg
imul
xchg
stos
ret
jle
pop
cmp
jnp
nop
xor
jnp
push
mulb
les
in
vphaddbq
inc
fwait
xor
jnp
ret
mov
shlb
add
jl
jae
pusha
mov
jnp
nop
mov
pop
arpl
xchg
xchg
pusha
push
mov
insb
ss
rclb
test
loope
mov
add
fnstsw
pop
es
jg
dec
aad
jl
popa
in
push
mov
add
xchg
in
cld
fstl
cmpb
pop
je
cmp
das
je
mov
loope
sbb
mov
or
push
xchg
leave
push
sahf
js
cmp
and
shll
idivl
xchg
pop
and
mov
cmc
jg
dec
add
dec
popa
ljmp
lods
dec
and
or
adc
movsb
rcll
mov
add
cmc
jne
mov
aas
addr16
icebp
js
cmpsl
daa
fsub
pop
pusha
nop
loopne
es
xor
aad
pop
imul
push
dec
loopne
fwait
xchg
lcall
xchg
push
outsl
jl
and
xor
outsl
sub
fbld
jp
pushf
mov
mov
mov
push
aam
lahf
cmp
mov
mov
repnz
dec
push
xchg
mov
pop
mov
push
xchg
dec
aam
out
add
xchg
mov
aaa
jp
pop
lret
das
iret
push
and
mov
and
out
rclb
pusha
and
test
lock
mov
or
mov
adc
test
xchg
push
dec
mov
inc
push
movsb
pop
mov
and
jnp
xor
pop
lods
push
xchg
cmp
jns
cmp
xchg
and
push
aaa
cmc
out
je
mov
mov
mov
xchg
sbb
imul
jns
daa
inc
loopne
aam
cmp
xor
xor
pop
push
sub
and
sbbl
cmp
sbb
adc
ja
or
cmp
push
psllq
add
sub
testl
xchg
push
mov
adc
lret
dec
jnp
add
inc
add
xor
cmc
xor
icebp
pop
test
test
cmp
clc
mov
inc
jo
test
mov
hlt
mov
cmp
mov
xchg
in
aaa
testl
cli
lock
and
jge
jns
mov
mov
xor
rcr
cmpsl
call
and
cmpsl
addr16
inc
out
data16
mov
mov
inc
bound
loop
popa
pushf
pop
sbb
fcompl
pop
push
std
ficomps
or
or
xchg
mov
repz
imull
ret
addb
cmp
icebp
cld
mov
je
cmp
in
clc
mov
mov
jnp
jo
xor
cmp
cmp
test
push
lock
movsb
mov
push
add
mov
adc
jp
jmp
xor
popa
pop
pop
icebp
outsl
inc
pushf
xchg
lock
sub
icebp
mov
rorb
enter
xor
add
daa
sub
add
mov
cmpsb
in
inc
popa
jnp
leave
jns
dec
inc
movsl
int
aaa
ljmp
aad
shl
inc
cmpsl
pop
dec
jmp
lahf
inc
shll
pop
cmp
cmpsl
ds
icebp
stos
inc
xchg
rcrb
push
inc
mov
inc
jle
mov
jne
out
inc
inc
mov
mov
shll
loope
mov
popl
xchg
push
mov
into
cltd
add
cmp
push
dec
xchg
inc
mov
xchg
inc
mov
jbe
xchg
ljmp
rep
mov
adc
push
sbb
push
inc
imul
pop
mov
mov
xchg
in
jg
or
cmc
jle
fmuls
cwtl
inc
lea
jmp
jg
in
ss
aad
xchg
jae
sbb
push
lcall
mov
jo
or
inc
movsb
cmpxchg
and
iret
inc
lcall
cli
dec
mov
aaa
daa
xchg
sahf
xchg
pop
or
and
xlat
push
mov
sub
daa
add
cmp
xor
enter
push
arpl
sbb
jb
jmp
inc
out
push
sub
inc
mov
js
ret
sbb
push
pop
inc
mov
push
dec
and
jne
jmp
mov
inc
cltd
int
loope
jb
pop
inc
dec
mov
leave
sbb
insb
push
cmp
mov
sbb
shlb
insb
xchg
cmc
push
popa
stos
inc
lret
push
cmp
mov
xchg
add
adc
bound
inc
test
pop
sbb
sub
mov
inc
pusha
push
out
andl
into
inc
or
adc
and
pop
mov
lds
lret
jns
inc
mov
sub
jg
cltd
inc
pop
mov
pop
es
push
inc
xor
loop
mov
ljmp
or
les
inc
cmp
stc
fdivrl
cld
je
aam
roll
rcrl
inc
lret
xchg
push
int
inc
sti
imul
push
or
fimull
fstpl
popa
xor
adc
mov
push
mov
xor
loope
popa
sub
jp
sbb
jo
fs
inc
or
mov
rcr
cmpsl
imul
inc
mov
mov
inc
outsb
mov
fidivrl
push
xor
int3
dec
sbb
jp
sahf
inc
out
and
ss
aad
sub
sub
push
divl
lret
inc
cltd
adc
shll
jmp
int
or
jns
cmp
cmp
xchg
push
inc
push
mov
jo
inc
sahf
mov
mov
aas
in
mov
in
sub
push
mov
cmp
js
push
and
lds
mov
inc
push
fidivs
ss
and
pop
inc
data16
or
inc
ret
cld
imull
cmp
enter
jns
pop
xlat
inc
add
and
popa
inc
add
mov
int3
fsubp
inc
insl
push
outsl
out
jbe
adc
add
cmpsl
bound
je
pop
lods
enter
sti
dec
add
inc
daa
outsb
lods
inc
ret
popa
les
xchg
inc
jmp
insl
iret
jle
xchg
jecxz
js
lods
jl
aad
ret
push
hlt
inc
mov
repz
cmp
xchg
cltd
pop
pushf
test
pop
test
jb
adc
mov
push
scas
ficompl
cwtl
cmp
dec
inc
pop
jnp
aam
cmp
ja
mov
sub
inc
leave
mov
inc
dec
aas
popa
lret
pop
push
inc
movsl
push
jecxz
jp
insb
mov
adc
hlt
and
inc
add
movsl
fimull
push
in
in
pusha
icebp
sub
inc
nop
dec
mov
shlb
jo
outsb
mov
test
sbb
scas
jbe
inc
arpl
cmp
dec
shll
sub
push
inc
cltd
pop
cwtl
lods
frstpm(287
and
or
inc
fbld
shr
jbe
ss
lahf
pop
mov
ss
loope
sub
cmc
inc
out
pop
rol
or
and
orb
mov
fdivrs
sbb
jmp
adc
repnz
push
dec
xchg
loop
and
dec
mov
stos
inc
pop
and
sbb
fldt
mov
jne
pop
scas
cltd
loope
inc
test
mov
inc
js
lods
mov
inc
sbb
jo
das
lret
sbb
lcall
or
mov
test
xchg
sbb
adc
je,pt
ss
pop
mov
add
inc
push
stc
test
notl
add
push
xor
out
leave
movsb
mov
in
push
fisttpl
ja
scas
dec
jns
sub
repz
lcall
adc
lret
shlb
mov
mov
mov
stos
imulb
filds
xor
inc
lret
loop
lcall
in
incl
scas
call
and
std
and
xchg
cmp
scas
out
mov
jns
sub
sbb
in
orb
ss
add
and
xchg
sbb
add
mov
cmp
addl
jnp
in
inc
ljmp
xchg
leave
push
lods
rol
inc
cmp
jo
sbb
inc
arpl
push
mov
pop
sub
shrl
enter
inc
push
pop
es
aam
testb
ret
cmp
adcb
aas
leave
push
pushf
imul
ljmp
lods
mov
inc
rcrl
mov
push
in
cmp
inc
inc
and
or
xchg
insb
sbb
sub
mov
test
iret
mov
cli
in
xchg
mov
sbb
stos
jbe
push
in
shll
jl
lock
icebp
xor
ficompl
push
addr16
stc
or
les
mov
or
fistl
inc
cmp
ss
pop
or
or
subb
push
dec
xchg
jge
aad
icebp
or
repz
inc
lods
out
insl
roll
negb
adc
rolb
dec
pop
and
std
jecxz
movsl
xchg
add
dec
lods
shrl
pop
mov
dec
mov
adc
fstpt
inc
cmp
fbld
adc
lods
inc
aam
jmp
or
bound
shrb
shrb
sub
shll
fs
jns
jae
pop
adc
leave
ljmp
pushf
and
fwait
inc
fldcw
lea
mov
stos
sbb
inc
mov
mov
ds
inc
push
and
sub
push
cli
mov
inc
test
push
jge
jmp
jmp
insb
jp
leave
lahf
jmp
adc
inc
insl
aad
xor
mov
inc
mov
leave
loope
add
inc
inc
adc
popf
sub
insb
and
xor
pop
add
mov
inc
jl
leave
push
call
dec
mov
inc
sub
out
sbb
xor
cmp
lea
call
mov
sbb
cmpsl
out
jnp
jo
cmp
jae
jle
das
add
inc
xchg
sub
sub
enter
or
xchg
test
pop
adc
in
out
cmpsb
sti
int
cmp
cmp
inc
lahf
negb
orb
iret
imul
inc
jne
stos
enter
lods
cmp
subb
xchg
cwtl
aam
mov
mov
int
outsl
test
jmp
mov
inc
rorl
ret
and
imul
popa
push
divl
loop
inc
jae
in
or
inc
lret
mov
mov
inc
jns
lds
xor
push
push
pop
mov
aad
mov
scas
add
es
push
jno
lods
mov
popf
fldenv
test
jp
push
jl
inc
mov
enter
xchg
sub
aaa
sub
mov
in
or
or
push
or
int3
popf
inc
pop
xor
shrl
mov
data16
pusha
mov
fwait
das
test
mov
inc
adc
loop
pop
inc
and
and
pop
xchg
or
sbb
inc
ret
insl
call
mov
fs
daa
inc
test
push
iret
roll
xor
mov
pop
ret
dec
xor
xchg
lcall
jns
pop
dec
cmpsl
pop
cli
test
rcll
xor
outsb
movaps
mov
inc
mov
push
pop
std
xchg
push
ss
xchg
orl
mov
push
fisttpl
lods
mov
inc
jbe
adc
lds
cmp
push
pop
lods
in
lahf
mov
test
rorb
add
mov
push
adc
or
jnp
dec
mov
jg
inc
out
mov
cmp
push
in
and
popf
jl
jecxz
aad
inc
inc
jns
push
fwait
jb
pop
adc
mov
inc
adc
das
sub
incl
inc
js
xor
jae
dec
incb
add
loop
jo
jnp
fimuls
pop
ret
mov
fnstsw
sub
test
xor
cmp
jle
sub
cmp
bound
fimull
sub
test
push
inc
nop
test
lret
iret
std
push
in
inc
inc
data16
lahf
dec
mov
jle
iret
lds
xchg
fwait
inc
rorl
sub
pop
adc
inc
test
cmp
out
mov
ficompl
push
sti
jecxz
cmp
test
mov
push
xor
lock
mov
lret
out
enter
pop
mov
push
cmp
jns
mov
sbb
sub
mov
rolb
inc
aas
push
and
cmpsl
cs
pop
sub
test
les
outsb
pop
cwtl
enter
sahf
inc
ja
jne
jg
leave
repnz
sub
and
pop
inc
pusha
mov
sti
test
add
out
call
sub
jge
push
xchg
pushf
or
xchg
rolb
ja
cmp
cmp
adc
sbb
mov
js
adc
or
inc
ds
and
mov
push
inc
or
test
out
sub
lahf
sub
les
mov
int3
push
daa
and
push
adc
mov
pop
pushf
imul
mov
pop
push
in
fldt
fdivl
leave
repz
test
sub
mov
add
pop
pop
inc
dec
movsb
out
mov
outsb
loope
cmp
jmp
rcrl
inc
xor
adc
and
inc
mov
and
mov
inc
pop
dec
or
push
fnstcw
lret
cmp
lcall
enter
je
mov
mov
in
add
inc
jg
int3
stos
arpl
sub
pop
inc
ret
cmpl
ret
push
inc
xchg
jp
pop
fwait
xchg
insb
mov
jae
push
or
or
movsb
mov
inc
data16
dec
mov
mov
mov
out
lods
dec
orb
and
sti
or
sti
push
jb
inc
lods
push
arpl
push
xchg
ja
dec
push
xchg
mov
fstps
jb
cmc
pop
cmp
mov
mov
inc
popa
xchg
arpl
add
cmp
and
out
sbb
ja
cltd
dec
jns
push
jmp
insb
adc
in
sbb
mov
ds
pop
xor
lret
inc
ds
push
or
inc
mov
popf
cli
adc
pop
insb
inc
je
jge
xor
fcoms
pushf
mov
bound
mov
testl
jle
xchg
mov
ljmp
fwait
mov
cmpsl
jae
cmp
xor
or
stos
pusha
andl
out
xor
jne
test
pop
pop
ljmp
imul
out
dec
sti
repz
les
inc
je
nop
arpl
adc
push
xor
push
inc
xchg
inc
fcomp
push
cmp
loopne
fsts
add
std
notb
cmovne
lods
or
in
jb
clc
inc
pushf
push
cmp
out
mov
xor
push
imul
mov
scas
ljmp
mov
jnp
popa
addl
arpl
pop
push
outsb
in
in
lods
imul
jl
fisubl
jns
movsl
push
cwtl
jmp
xor
pop
inc
rorb
jg
lret
fiadds
jnp
test
cmp
lods
mulps
mov
aam
mov
inc
out
cltd
jno
sub
fstl
mov
pushf
daa
inc
pop
adc
cwtl
inc
popf
xchg
dec
cltd
xchg
or
int
sub
out
inc
mov
cli
arpl
and
bound
pop
out
xchg
movsb
fadds
and
inc
arpl
push
inc
sar
xchg
add
dec
inc
push
insl
mov
mov
inc
daa
cmp
or
adc
push
inc
cmp
jl
and
in
inc
push
dec
dec
fmuls
arpl
pop
aaa
into
les
jp
push
or
lds
shll
xchg
mov
pushf
sahf
xor
inc
adc
jecxz,pt
lcall
jl
movsl
inc
push
fimull
cli
xchg
xchg
pusha
mov
mov
test
sbb
iret
jns
popa
sub
jle
and
or
and
pop
dec
mov
fwait
pop
mov
xchg
lods
jno
out
xorl
add
or
xor
leave
jnp
stc
dec
ds
inc
test
ja
inc
jg
dec
xlat
les
inc
lds
pop
jno
shll
pop
inc
adc
xchg
adc
ret
dec
cli
pop
jne
lea
inc
dec
aaa
xor
pop
mov
xlat
cld
inc
lods
cmp
mov
adc
push
or
xor
enter
cmp
in
insl
and
out
pop
jne
inc
and
xchg
dec
inc
or
or
stc
fwait
cs
daa
ss
sub
or
cmp
insl
fistpll
jecxz
repz
divl
rolb
iret
adc
dec
scas
test
xchg
sub
les
mov
out
sub
cmp
and
mov
testb
mov
inc
shll
sti
imul
pushf
cmp
add
scas
inc
sbb
and
mov
dec
jle
cmp
popa
fsubrl
fisttps
inc
push
pop
and
dec
xchg
push
inc
pop
mov
pusha
outsl
loopne
ja
and
xchg
adc
or
les
inc
sbb
inc
sub
and
sub
jo
jnp
ja
or
mov
mov
dec
out
sub
test
cmp
cmpsl
test
pop
rorb
add
cltd
aad
leave
mov
mov
and
mov
push
sti
stc
or
sub
pop
ljmp
fcmovne
popa
inc
or
test
xorl
xor
lea
inc
aad
lods
arpl
ret
inc
xchg
negl
ficoms
cs
mov
jo
xchg
ficoms
push
cld
ret
lea
out
enter
in
mov
cltd
pop
add
inc
repnz
sbb
dec
adc
pop
inc
leave
inc
push
and
lcall
dec
adc
jns
fdivrs
xchg
das
mov
sub
pop
imul
das
mov
dec
jge
adc
sbb
xchg
xchg
or
inc
rcrl
clc
mov
out
cmp
or
mov
pop
ficoms
pop
test
mov
and
mov
add
int
push
sub
out
inc
lret
jge
sub
push
add
ret
inc
push
lods
or
mov
insb
xor
sbb
int
adc
hlt
out
cmc
jno
popf
mov
and
push
mov
jne
dec
mov
mov
inc
stos
jge
or
out
push
and
mov
sub
dec
lds
sti
xchg
add
cmp
dec
cmp
inc
fmul
mov
mov
xchg
mov
inc
movsb
repz
xor
push
cli
inc
sub
add
imul
ja
or
add
push
cmpsl
inc
adc
sbb
nop
inc
cmp
adc
jge
push
mov
icebp
movsb
push
dec
inc
push
dec
ss
scas
mov
push
or
xor
pop
fstl
stc
imul
iret
inc
lcall
scas
or
inc
push
mov
inc
sbb
inc
shrb
fs
sahf
sbb
sub
pop
xchg
push
or
dec
adc
rclb
mov
sub
cmc
jg
jg
lret
shlb
cmp
or
push
dec
scas
pop
jnp
pop
xor
out
and
bound
inc
aas
pop
push
sub
loopne
int3
push
add
push
inc
sahf
and
xchg
push
adc
inc
jg
push
jno
rol
lods
jne
out
dec
inc
pusha
loope
std
mov
mov
inc
lahf
pop
imul
pop
mov
sbb
mov
push
fsubs
pop
repnz
out
mov
popl
inc
nop
sub
add
xchg
mov
sub
int
lahf
jl
loopne
pop
mov
sub
or
adc
aaa
inc
pop
daa
insb
nop
int
add
inc
popa
xor
push
dec
sub
adc
inc
jae
es
sub
or
cmp
push
cwtl
mov
xor
js
lods
cmp
mov
pop
imul
imul
cmp
lcall
loop
inc
rcll
in
sbbb
aad
push
cmp
cld
jl
adc
daa
sub
out
arpl
xchg
push
add
rorb
inc
ss
loop
out
or
cmp
sub
cmp
mov
cmc
push
xchg
sbb
stc
insl
sub
mov
movsl
in
shlb
mov
inc
cmp
sbb
xor
inc
cmp
cld
sub
inc
cmp
dec
in
cmp
cmp
add
divb
sub
jle
icebp
je
push
inc
pop
jbe
push
sbb
subl
sub
imul
cmpsl
pop
add
gs
dec
dec
loopne
icebp
dec
xor
pop
test
leave
daa
movb
es
dec
add
dec
fdivl
inc
push
sti
movsl
push
cld
sahf
fwait
add
and
das
xor
xor
roll
outsb
daa
inc
jp
xchg
xor
test
pop
pop
dec
cmp
enter
mov
cwtl
push
jmp
std
xor
shll
and
sub
lret
sub
cmp
xor
repz
xor
std
sub
mov
add
dec
inc
lcall
movsb
js
shll
push
xor
daa
adc
inc
pop
push
mov
jbe
push
pop
cs
imul
adc
std
stc
enter
aad
xor
insw
es
mov
sub
mov
sbb
orb
js
inc
mov
adcb
cmp
jg
in
adc
fsubl
cmpsb
out
pop
addb
cmp
sbb
xor
inc
aad
inc
sub
cmp
mov
mov
and
pop
jb
jmp
jmp
inc
icebp
in
js
inc
mov
icebp
out
xchg
cmp
ja
xchg
mov
leave
int
mov
pop
ja
pop
and
cmp
movsl
jbe
adc
mov
push
popf
jb
shrl
ja
cld
stc
push
xchg
sbb
lcall
loopne
mov
jmp
and
data16
movsl
es
mov
push
notl
rclb
mov
sbb
xor
orb
add
mov
outsl
lea
test
add
data16
popf
cmp
lret
add
jp
jne
psadbw
fs
leave
or
bound
cmpsl
mov
cmpsl
popa
nop
mov
xor
xor
fsubrl
push
jg
cmpsb
in
out
fistpl
fwait
jne
out
stos
jmp
and
in
mov
sbb
ss
pop
imul
push
xor
mov
in
shl
cmp
pop
int
xchg
cmp
push
push
mov
lea
pop
leave
inc
out
xor
fs
pop
movb
adc
cmp
mov
xor
adc
je
in
ja
cmpsb
pop
inc
std
xor
add
das
inc
adc
pushf
mov
adc
mov
out
xchg
xor
in
xor
mov
adc
daa
pop
inc
lock
std
and
mov
pop
xchg
xor
adc
add
pop
cld
jmp
movsb
das
jne
das
ja
loope
jl
daa
pushf
std
pop
out
jle
addb
out
or
mov
jmp
aas
insb
xor
cmp
inc
mov
jb
jle
icebp
xchg
and
insb
cmp
pop
inc
es
mov
inc
xor
push
and
cltd
push
sbb
jo
jmp
icebp
cmc
shl
inc
add
pop
and
int3
popa
and
movsb
pop
in
fstl
mov
aad
cmp
push
cmp
aam
es
jecxz
fnsave
cs
cmc
and
adc
adc
and
dec
shrl
xor
and
rcr
mov
and
add
xchg
sub
push
test
pop
mov
xchg
and
xchg
cmp
testb
out
ds
popa
jno
sbb
pop
xor
and
mov
jo
stc
and
movsb
aad
pop
cwtl
lods
cmp
push
inc
cltd
pop
dec
mov
aad
aad
stc
xchg
and
scas
lods
mov
adc
cmp
mov
bnd
adc
inc
pop
xor
mov
js
xchg
and
je
add
adc
scas
adc
mov
jo
data16
and
test
lds
mov
and
jp
lds
pop
scas
movsl
jno
scas
lods
aam
cltd
push
and
addb
ret
xchg
fstl
cmc
out
xor
cmp
lods
xor
fs
inc
imulb
jl
and
sub
and
adcl
push
jecxz
sbb
xor
mov
test
iret
scas
mov
mov
push
loopew
cmpsl
movsb
jnp
inc
jae
rcl
lods
cwtl
int
xchg
frstor
jle
xor
jge
mov
loopne
xchg
aad
pop
adc
aaa
and
jno
fwait
pop
fnstenv
sub
mov
or
sub
mov
cmpsb
scas
fsubl
inc
xchg
dec
je
pushf
insb
notl
out
push
add
and
xchg
xchg
cmc
not
push
adc
es
push
push
inc
mov
push
aam
mov
cwtl
push
movsb
xor
shlb
popa
daa
sbb
or
mov
repnz
cs
aad
mov
pusha
xchg
cmp
mov
xchg
adc
ja
jl
andb
iret
aam
dec
add
sbb
push
mov
aaa
mov
loopne
mov
push
xor
or
jmp
and
insb
loope
jl
hlt
dec
lahf
inc
push
leave
je
and
hlt
icebp
pop
lds
fnstcw
aam
and
andl
push
nop
popa
inc
push
ficompl
add
mov
das
mov
sahf
in
xchg
cmp
xchg
out
icebp
movsl
bound
mov
ss
xchg
cmpsl
idivl
pushf
les
aam
in
hlt
add
es
sbb
and
cmc
add
je
sbb
jmp
int
and
jmp
pop
das
xor
and
mov
aas
add
xchg
cmc
and
jl
fldcw
mov
test
sbb
and
add
jno
xor
mov
aaa
push
cmp
aas
xchg
outsb
mov
cmc
mov
testl
sub
mov
gs
cs
mov
xchg
push
jl
std
mov
insl
jo
stos
jne
lods
ljmp
mov
push
adc
inc
jp
scas
lcall
jecxz,pt
cld
add
jae
mov
adc
inc
test
pop
out
movsl
mov
cmp
and
icebp
sbb
idiv
xchg
out
fmulp
loope
int
and
mov
scas
sub
mov
addr16
test
pop
movl
pop
xor
out
push
xorl
xor
cmc
dec
and
lds
mov
cmpsl
xchg
pusha
in
fs
xor
ja
ret
add
shlb
dec
test
ja
shrl
cmp
lods
js
jo
mov
dec
std
adc
pop
push
sub
or
shll
sub
sub
push
aad
setns
add
mov
lods
out
into
ljmp
add
sub
popf
out
and
out
cs
or
jno
add
int3
pop
mov
dec
shlb
es
lods
cltd
lret
adc
mov
lds
fsubrs
scas
movsb
shll
cs
fs
sbb
mov
stc
mov
xchg
movsb
test
out
jl
adc
or
shl
add
xchg
inc
scas
outsb
aam
mov
and
xchg
add
aas
iret
push
xor
xor
and
je
test
mov
lds
mov
xor
cmp
mov
cmpsl
dec
xor
and
xlat
push
inc
mov
push
add
and
loopne
insb
push
lods
dec
out
daa
push
jno
inc
ljmp
pop
test
jg
sti
dec
mov
jmp
fcmovbe
dec
cmove
sub
outsl
sbb
repnz
mov
xchg
dec
lods
jl
fstl
jo
aad
inc
sbb
lds
cmpsl
add
and
aam
sbb
sbb
push
cld
movsb
ret
scas
mov
push
inc
pop
lds
jne
test
dec
gs
test
or
pop
sbb
fxch
cmpl
enter
mov
js
sub
pop
nop
adc
stos
inc
dec
add
mov
and
add
sar
fs
xor
dec
dec
mov
or
leave
mov
push
and
push
inc
mov
push
sbb
and
in
or
cmp
sub
popa
cs
xchg
jle
stos
adc
mov
add
push
and
sub
mov
and
testb
push
icebp
sbb
xor
sbb
stc
push
adc
in
xorl
and
arpl
fcmovbe
leave
cmp
sbb
xor
jl
jne
jmp
add
adc
into
imull
mov
adc
in
shlb
cld
jmp
in
mov
xor
add
clc
cmp
lcall
lret
test
sbb
mov
mov
je
xor
aad
rcrl
sub
xchg
jnp
mov
and
inc
xchg
test
or
into
xor
mov
inc
daa
mov
and
pop
mov
jne
xchg
shlb
rolb
push
xchg
scas
pushl
and
mov
rolb
jge
std
sbbb
cld
jecxz
mov
fstl
mov
rorl
outsl
movsb
test
adc
and
test
scas
mov
cmp
xor
cmp
add
xor
mov
sbb
movsl
sti
jl
or
stc
xchg
out
mov
aaa
mov
out
in
test
xchg
daa
mov
xlat
and
cmp
adc
and
sub
push
mov
ds
or
fcomps
fucom
aad
lods
or
push
movsb
cmpsl
push
mov
xor
dec
insb
mov
xor
sbb
and
fwait
stos
cwtl
stc
gs
orl
cmp
xor
cmpsl
xchg
pop
cmpb
imul
ret
notb
pop
les
and
sbb
xchg
hlt
or
mov
and
sbb
jne
cmp
xor
push
ss
dec
or
and
push
jns
and
or
cmpsb
lods
jno
and
add
mov
js
rclb
pop
fldenv
jno
dec
adc
lds
inc
sbb
cld
aam
scas
loope
outsb
fwait
lods
add
adc
and
int
jae
pop
cmp
int
cmp
mull
movzwl
xor
pushf
cmp
in
inc
mov
ds
rcr
cmp
int3
ret
fs
cmpsb
or
andl
test
pusha
xchg
xlat
idivl
movsb
scas
mov
sbb
or
lds
cmc
mull
ljmp
cmp
aad
test
mov
testl
test
sbb
pop
mov
aaa
std
push
dec
xor
jno
lds
addr16
dec
add
test
in
add
mov
inc
out
sbb
adc
rolb
push
sub
fs
and
mov
xorl
movsl
jne
into
fstl
xchg
mov
xor
lds
fs
sahf
xchg
push
pop
and
fldl
cmp
roll
sub
jns
sub
cltd
dec
push
lret
add
stc
cmc
sub
outsb
std
and
sub
iret
and
mov
frstor
out
ss
out
hlt
adc
dec
cmpsl
mov
xchg
out
pushf
sarl
mov
aad
cmp
cmc
imull
lock
aad
add
sarl
sbbl
mov
add
sti
mov
xchg
sub
xchg
adc
push
stc
je
sub
mov
fnstcw
fdivs
jnp
jmp
sbb
pushf
repz
and
and
xchg
sbb
imul
daa
popa
xchg
and
in
push
sub
daa
dec
inc
test
lock
insl
add
stos
insl
clc
int
mov
lret
xor
ja
inc
mov
movsb
sub
dec
setle
and
inc
test
dec
mov
cli
and
test
adc
xchg
pop
xchg
aaa
fists
pop
test
add
push
movsb
movsl
jbe
sub
dec
es
dec
test
dec
mov
aaa
cmp
xor
push
or
leave
cmp
movsl
inc
or
dec
sub
push
cmp
push
or
pop
les
push
sub
jp
push
cmc
es
icebp
jge
cmpb
push
movsb
push
filds
test
jno
inc
fldl
push
and
mov
rorl
mov
test
clc
lret
je
fadds
leave
test
sti
xor
pushf
and
fsubl
sbb
fs
mov
mov
les
aam
aam
in
cmc
mov
cmp
es
and
daa
hlt
cmp
xchg
cmpsl
xchg
movsl
xor
adc
mov
pop
mov
out
repz
fidivrs
adc
inc
mov
mov
aas
outsl
sbb
rolb
bound
adc
cmp
add
xor
cwtl
sbb
push
in
xor
mov
mov
daa
xchg
sbb
sahf
mov
movsb
xor
mov
in
dec
clc
out
sbb
mov
mov
lods
lds
xor
and
xor
and
adc
pop
xchg
mov
js
es
sub
frstor
xchg
cmp
jle
push
push
add
loopne
sbb
cmp
push
mov
mov
cwtl
rcrl
rcrl
jg
mov
cwtl
cwtl
push
push
add
aam
lret
cmp
stc
sub
adc
cmp
pop
test
or
and
dec
aaa
inc
ja
sub
inc
daa
daa
add
xlat
cmp
lds
fstps
add
or
mov
mov
inc
lds
fs
mov
cmp
fs
mov
sub
sbb
fdivs
imul
jmp
sub
and
stos
mov
insb
fyl2x
mov
add
push
cli
scas
push
mov
cmc
xchg
in
inc
cmp
outsb
inc
jg
aaa
test
test
push
and
out
aam
add
push
xor
test
add
and
jb
ja
movsl
adc
addr16
loopne
movb
in
xor
cmp
cmc
xor
sub
stos
adc
arpl
xor
jp
fbstp
jmp
mov
lods
divl
add
mov
dec
sbb
pop
cmc
adc
jo
out
xor
and
xchg
in
sbb
sub
out
fcoms
iret
and
lret
mov
sub
inc
movsb
cmp
add
jbe
loope
add
inc
cmp
pop
mov
pop
xchg
mov
stc
out
xchg
ss
xor
int3
sbb
nop
jbe
js
notl
aaa
js
sub
movsb
mov
in
push
xor
dec
je
fs
stos
mov
add
insl
movsl
xlat
fidivl
xchg
mov
int
inc
push
jns
repz
nop
cmpsl
and
mov
adc
mov
jp
pop
xchg
jns
test
pop
cmp
fbstp
or
int
cmp
movsb
and
jae
xor
movsb
push
dec
jmp
mov
lahf
mov
fs
jbe
cli
pushf
add
je
aad
pop
mov
stos
rol
add
dec
les
jno
xchg
jle
leave
cmp
in
push
or
push
add
subl
mov
mov
lds
in
mov
dec
std
sti
cmp
lods
loopne
jg
in
sbb
xchg
mov
ss
sbb
jge
push
out
cli
in
push
add
test
int
push
stos
push
push
and
mov
push
out
sarl
flds
xchg
mov
jne
mov
aam
stc
xchg
cs
sbb
xor
xor
fdivrl
sahf
sub
mov
fs
push
cmpsb
cs
xor
ja
xor
je
cmc
aam
inc
fwait
mov
popf
lods
push
adc
sbb
mov
test
xchg
or
cmpsb
xor
test
test
or
add
pushf
xchg
or
outsb
in
xchg
aad
pushf
sbb
add
fwait
vpaddusw
sub
bound
bound
aad
iret
inc
and
scas
clc
cmp
es
gs
sub
es
mov
test
adc
stos
mov
xchg
xchg
cmp
jo
in
lahf
mov
mov
lds
shl
cmp
mov
aaa
daa
sub
mov
cmp
jg
das
clc
add
pusha
xchg
mov
inc
out
mov
adc
mov
jae
add
push
xor
dec
bound
repnz
and
sbb
cltd
or
mov
xlat
adc
fiadds
in
push
int
adc
adc
sbb
push
out
mov
shll
jmp
aam
loop
sub
and
addb
lock
std
jp
push
xor
xor
jecxz
mov
or
icebp
test
rdmsr
or
js
sbb
cmp
repz
cmp
icebp
in
jg
int3
addr16
xchg
ret
cld
sahf
push
aad
arpl
push
push
clc
sbb
push
inc
push
js
jnp
popf
xlat
and
jl
es
adc
inc
pushf
cmp
pushf
jp
mov
cmp
and
lahf
cmp
cwtl
sbb
jne
ja
bound
mov
xor
mov
sub
clc
cmp
mov
push
mov
xchg
lahf
sbb
jnp
pop
sub
sub
pushf
pop
js
adc
dec
mov
repz
mov
lret
inc
leave
sbb
int3
push
movsb
out
ret
xor
hlt
sub
or
mov
xchg
and
ret
test
addr16
int
cmp
sub
and
int3
dec
pop
or
sbb
sbb
sub
test
dec
jge
sti
lahf
xlat
rorl
out
sub
sub
daa
shrl
jae
subl
mov
sub
sub
mov
cltd
int
and
mov
popf
inc
or
ss
sbb
xor
mov
adc
hlt
in
out
fprem
rol
sbb
add
cmpsb
add
enter
pusha
cmp
xchg
rol
xchg
and
rcr
loop
sub
hlt
sti
shl
icebp
and
inc
bound
mov
inc
push
mov
mov
lods
fisubl
insl
push
add
cmp
xor
xor
mov
aad
cmp
mov
data16
lds
ja
pop
pop
xchg
dec
add
sbb
mov
lods
cli
adc
adc
sbb
pop
sbb
cmp
xchg
and
leave
iret
add
adc
dec
add
mov
xchg
inc
inc
mov
outsb
je
adc
nop
jo
sahf
push
mov
in
adc
imul
sub
les
icebp
stos
sahf
jle
jl
fdivl
or
iret
lcall
nop
in
mov
lods
aas
sub
dec
xchg
add
or
je
outsl
jl
mov
push
mov
outsb
xchg
and
sub
xor
in
pop
dec
xchg
jo
pop
push
pop
pop
jns
hlt
ljmp
sub
notb
mov
sub
xor
jne
push
jl
lds
xchg
das
add
imul
xor
push
inc
dec
es
jbe
adc
pop
mov
and
xor
pusha
in
and
adc
adc
or
les
mov
inc
push
aad
lret
cmc
fstpl
mov
fldenv
lds
pop
dec
mov
mov
cmp
hlt
xor
xchg
push
in
pop
sub
std
out
jne
inc
aad
xchg
dec
pushf
push
icebp
adc
xor
mov
rcll
dec
cmp
jnp
inc
jno
mov
sbb
add
aas
dec
add
or
loope
cld
stc
inc
xchg
jmp
lock
pop
mov
sbb
adc
push
inc
aad
aas
jecxz
sub
cmp
jae
andl
fxch
faddl
sbb
xchg
sub
mov
daa
mov
mov
dec
and
sub
mov
and
add
out
shrb
jl
insb
int3
add
dec
icebp
int
inc
add
lods
and
adc
int
sbb
sub
in
xor
js
inc
xchg
lret
and
sarl
lods
test
aas
aad
cmp
lret
sub
xor
adc
mov
jb
cld
aam
xchg
shll
fstps
fcmovbe
cmp
xchg
cltd
dec
rcrl
add
add
outsl
and
insl
or
sub
js
outsl
sub
jns
mov
add
mov
xchg
mov
xor
addb
inc
push
dec
fstpl
inc
add
mov
mov
inc
gs
dec
shll
insb
cmpsl
dec
add
jnp
jnp
pop
pop
daa
mov
push
int
imul
mov
pop
and
gs
mov
std
mov
test
jbe
or
pop
in
and
inc
movsb
mov
mov
jnp
ret
std
out
std
es
cmpsb
add
out
push
lds
pop
xchg
pop
xchg
outsb
iret
pop
aas
fidivl
cmpsl
in
inc
lret
aas
mov
cld
int
cmp
mov
pop
outsl
adc
sub
sbb
push
das
fwait
dec
add
test
shlb
sub
jae
xchg
xor
add
aaa
mov
mov
popa
dec
xor
xor
cmc
pop
pop
notb
in
pop
sbb
xor
in
hlt
push
pop
imulb
xchg
lahf
ss
add
xor
cmp
add
adc
sub
jnp
adc
inc
sbb
int3
cmp
and
push
sar
pop
pop
sub
mov
jecxz
push
xchg
xchg
jmp
out
adc
in
add
cltd
push
test
pop
out
jbe
insl
jbe
lahf
pusha
add
call
xor
lock
in
fwait
mov
jns
or
pusha
xorl
lds
jne
leave
stos
in
add
es
aad
adc
adc
mov
call
and
test
dec
notb
xor
arpl
sub
pop
and
inc
cwtl
aad
pop
movsb
pop
xor
ret
sub
cmc
std
push
std
add
push
nopl
jg
ficoms
sbb
or
fucomip
cmp
leavew
or
add
rol
push
cmp
fimuls
hlt
popf
rol
cmp
rorw
in
daa
mov
mov
sti
and
inc
out
push
and
and
or
jle
xchg
xchg
push
cmp
cmpsl
cmp
pop
xchg
aaa
xor
ficoml
cmp
push
test
cmp
decl
addb
add
xchg
sub
pop
mov
outsl
xor
pushf
daa
hlt
popa
xor
cmpsb
das
cmp
mov
daa
ror
rcrl
in
repz
leave
mov
push
or
hlt
cmp
jmp
dec
loop
adc
pusha
mov
movsb
int
inc
and
sub
pop
ret
notl
sub
test
scas
sub
test
mov
pop
es
and
pop
int3
test
sub
or
ret
out
mov
test
loopne
xchg
lret
sub
sbb
aad
std
and
and
dec
pop
mov
and
test
loop
in
or
sbb
or
insb
in
pop
ret
int
cld
stc
mov
sub
cmc
test
mov
leave
mov
aad
cmp
aaa
mov
pushf
jle
pop
mov
xchg
xor
add
xchg
stc
xor
and
add
bound
inc
fnsave
loope
add
jl
icebp
add
add
sbb
pushf
mov
add
sbbb
and
push
or
adc
push
push
scas
add
xchg
mov
pop
rcr
push
cmp
sbb
in
push
mov
push
mov
ret
push
stos
test
adc
sbb
test
sahf
loopne
dec
pushf
pop
mov
or
cmp
jo
jl
jbe
mov
cli
lods
call
pop
negb
insb
ss
xor
and
dec
loope
mov
xlat
mov
notb
std
int
jmp
mov
or
mov
cmp
sbb
daa
xor
in
mov
sahf
jg
pop
mov
in
aad
icebp
int
mov
add
mov
mov
lea
xchg
imul
outsl
int3
call
xchg
add
push
or
xchg
adc
or
paddd
adc
xchg
int3
mov
cmc
cld
mov
xchg
jbe
or
inc
sbb
rcll
push
xchg
dec
adc
mov
xor
inc
pop
fs
or
jo
jo
std
adc
loopne
fwait
pushf
pop
mov
cmp
in
mov
out
add
sti
push
jle
repnz
jb
xor
pop
dec
xor
rcll
pop
sbb
lds
lcall
je,pn
mov
and
lds
jmp
and
stc
ss
cmpsb
daa
daa
add
in
fs
pop
jae
out
data16
out
addr16
add
inc
mov
enter
cmp
dec
inc
inc
push
cmp
dec
mov
or
or
out
cmc
inc
lea
out
add
cld
mov
and
mov
add
mov
add
jecxz
lods
loope
std
push
pop
and
enter
adc
mov
cmp
xchg
stc
mov
scas
lods
mov
xor
or
sub
sbb
mov
or
xor
cmpsb
mov
test
add
loope
popf
outsb
std
sbb
sub
jnp
imul
lock
loop
adc
pop
cmp
test
adc
cld
and
sub
ds
cld
or
mov
sub
cmc
pop
outsl
mov
pop
popa
mov
gs
cmc
cmp
mov
repnz
test
mov
xor
les
xchg
mov
pop
ds
dec
push
inc
jmp
pushf
jmp
pusha
push
movl
pushf
movl
push
movw
mov
mov
lea
jmp
lea
je
movsbw
setle
lea
movzbw
push
jmp
call
xchg
lahf
pushl
popl
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
pushf
mov
lea
call
push
lea
jae
jmp
jmp
pushl
lea
ja
pushf
stc
lea
jno
bt
imul
cmp
add
pushf
pushf
pushl
pushl
lea
jmp
movl
pushf
jmp
pop
xchg
mov
mov
stc
add
ja
int
sbb
stc
cltd
bound
cli
and
mov
and
sbb
pop
data16
xchg
jmp
cmp
loop
and
into
pop
or
jb
jge
mov
pushf
pop
ret
jnp
imul
arpl
push
fwait
popf
arpl
inc
sub
movsl
inc
fisttps
daa
sub
push
addr16
fmulp
inc
cmpsb
xor
xchg
xchg
mov
fidivs
mov
subb
cmp
add
gs
dec
jnp
pop
aaa
pop
mov
cmpsb
pop
imul
fisttpl
inc
test
aas
dec
sbbb
jl
mov
outsl
push
lea
ljmp
ret
or
jg
sbb
pop
xchg
addr16
ret
cmp
add
pop
icebp
mov
stos
pop
mov
or
xor
ljmp
push
adc
mov
cmpb
das
sbb
jle
dec
xor
jl
mov
cmp
loopne
stos
lock
subl
pop
fisttpll
loopne
pop
sbb
lods
movsl
jbe
pushw
adc
push
lods
pop
push
xor
or
push
dec
aam
outsb
jo
cmc
sub
cmc
cmp
cmp
pusha
cmc
neg
test
call
add
cmc
push
cmp
mov
clc
pusha
clc
pushf
test
jmp
push
call
jmp
jmp
in
sti
xor
sbb
xchg
xchg
jl
repnz
jecxz
shll
sub
mov
std
jbe
inc
mov
out
clc
in
push
cwtl
insl
mov
ss
push
and
sbb
cmp
push
sub
push
inc
add
enter
mov
xchg
ror
sbb
adc
pop
sbb
rol
shl
mov
jp
idivb
sbb
dec
ljmp
ja
ja
clc
sbb
movsl
inc
adc
mov
xlat
jp
and
push
inc
sbb
imul
mov
mov
scas
test
shl
mov
cmp
stc
shr
pusha
test
cmc
cmp
jmp
pusha
pushl
lea
jb
pusha
test
push
cmpb
lea
jle
jne
rcr
mov
cmc
cmp
add
cmc
movzwl
dec
sbb
movzbw
mov
test
test
jmp
lods
lods
sub
subb
mov
cli
sbb
in
pop
xchg
sbb
sbb
out
pop
push
mov
repnz
adcl
repnz
call
dec
jnp
icebp
sbb
cmp
es
mov
out
aad
xor
push
xchg
push
xchg
cmp
pushl
lea
je
push
pushf
movl
pushf
lea
jmp
pusha
pushl
jmp
inc
cmp
push
cmpsb
call
mov
lds
outsl
js
test
out
mov
shrb
imul
push
add
inc
sbb
std
fwait
mov
cmpsl
cs
inc
jns
mov
mov
mov
imul
iret
mov
loopne
or
cmp
rcrl
pop
popa
jmp
bnd
mov
add
jbe
subb
adc
nop
js
insl
pop
das
sbb
fiadds
xchg
outsb
test
ja
loope
movl
jmp
mov
xor
fsin
push
sbb
lahf
enter
insl
push
mov
es
adc
pop
inc
and
sub
out
das
mov
or
cmp
mov
hlt
stc
sahf
push
add
xor
sbb
push
mov
addb
rclb
adc
sahf
lds
outsl
push
xchg
push
inc
pop
sbb
dec
inc
cmpsb
mov
and
lock
add
mov
lods
lock
movsb
and
adc
sub
xlat
aas
out
cwtl
dec
jmp
inc
push
rclb
cld
jbe
das
push
negb
lcall
in
push
adc
imul
xlat
loop
mov
jp
push
fs
test
leave
les
lret
mov
mov
inc
addr16
ds
insl
cli
add
add
mov
mov
jmp
rolb
add
pop
dec
aas
xchg
sbb
add
pop
mov
mov
xchg
xor
cmp
cmp
mov
shrl
push
aad
xchg
xchg
cs
enter
inc
mov
adc
ret
adc
mov
mov
inc
jnp
not
mov
lea
mov
cwtl
pushf
mov
pushf
lea
ja
call
lea
jae
jmp
fsubr
outsb
jb
xor
sbb
add
xchg
popf
lret
mov
sbb
out
dec
cmc
adc
lock
sbb
add
cmp
ficoms
push
push
jb
cmp
das
adc
out
push
or
or
mov
mov
adc
fldcw
in
icebp
int
leave
inc
les
dec
fwait
cli
pusha
mov
outsl
les
xchg
aas
adc
mov
daa
jno
out
out
inc
lods
mulb
adc
movsb
adc
es
mov
jbe
push
adc
sahf
pop
push
push
repz
xchg
shlb
mov
sbb
cli
outsl
add
jnp
and
arpl
jb
cmpl
fdivl
rorl
repz
scas
jle
enter
sbb
mov
pop
dec
repz
fwait
jp
ds
pusha
je
dec
inc
sbb
lret
sub
rol
lea
mov
pop
ss
fisubrs
or
mulb
push
jno
test
inc
xchg
jle
ja
inc
mov
mov
inc
popa
fsubrl
xor
pop
scas
sub
mov
sub
in
lahf
mov
loopne
scas
es
add
andl
inc
popa
add
jecxz
iret
in
mov
or
imul
cmp
mov
push
lea
jmp
lea
je
test
cmc
bt
cmp
push
lea
jne
pushf
inc
call
test
push
add
bt
cmc
jmp
add
sub
fwait
mov
movsb
sub
out
pusha
data16
lock
and
icebp
or
sahf
adc
daa
push
gs
bound
andl
int
loop
mov
push
in
in
push
bndstx
addr16
aaa
or
movsb
inc
shll
pop
xchg
imul
dec
pop
enter
test
mov
pop
inc
shrl
lcall
icebp
mov
stos
lahf
sahf
fld1
mov
fwait
mov
mov
xor
dec
clc
shll
cmp
mov
push
movl
pusha
call
lea
jmp
xchg
pop
movl
pushf
pushf
pop
lea
pushf
push
pushf
call
stc
shl
push
ror
mov
and
push
clc
rcl
btr
bswap
push
and
push
movsbl
push
cmc
xchg
xor
mov
push
sub
bsf
ror
mov
inc
shld
mov
shld
mov
pusha
or
pusha
pushl
push
jmp
rcr
mov
cmc
repnz
pushf
mov
pusha
jmp
jmp
pusha
pop
mov
push
movzbw
push
bswap
mov
jmp
call
ror
push
pushf
call
xchg
jge
push
dec
lds
in
cmp
jae
rcrb
sub
xor
daa
mov
add
iret
xchg
pushf
push
or
or
cmpl
xor
sub
jge
sub
dec
in
dec
push
in
push
and
push
jns
push
les
sbb
in
hlt
lret
mov
js
push
cmp
xchg
daa
or
and
and
js
and
dec
imul
mov
jmp
pop
mov
sbb
ficoms
aad
xlat
cmp
jmp
ud0
jno
adc
xchg
aaa
push
push
popa
sahf
push
or
mov
lret
mov
jae
test
mov
lds
push
sub
pushf
lret
movsl
mov
pusha
sub
out
dec
sub
loopne
xor
mov
ds
pop
je
cmpsb
adc
pop
mov
jl
pop
and
out
int3
inc
cmp
nop
daa
adc
lcall
scas
xor
lahf
pop
cltd
add
addb
sbb
mull
stos
jae
insb
sti
aad
iret
and
mov
mov
cwtl
or
sub
inc
int3
cs
in
in
mov
sbb
ret
repnz
fbld
xor
push
pop
fcomip
sbb
out
pop
leave
insl
shll
repnz
mov
cwtl
fadds
and
adc
mov
jbe
into
in
and
std
fists
jbe
sub
inc
cmp
jne
jl
jle
dec
dec
cs
push
or
and
xlat
fcmovb
dec
and
and
and
mov
sti
pop
sub
and
stos
pushl
incl
mov
rol
mov
test
pusha
jmp
ljmp
xor
and
xchg
and
gs
mov
cmp
dec
xchg
out
jg
dec
push
pop
rolb
push
push
pop
mov
and
cwtl
or
ret
int
inc
data16
lds
xor
aaa
and
mov
xor
stos
pop
cmc
mov
shr
mov
shl
add
pusha
shr
xor
neg
rcl
mov
rcl
shld
dec
add
movzbl
movw
mov
push
mov
pushl
pushf
mov
pushf
mov
pushf
seto
lods
stc
add
pushf
movb
clc
bt
rol
call
cmc
clc
add
pusha
lea
jmp
stc
add
bt
cmp
pushl
movzwl
cmc
bswap
cmc
mov
clc
cmc
add
push
test
jmp
jmp
pop
and
mov
jmp
pushf
call
pushf
jmp
add
cmc
movw
cmp
push
lea
jb
stc
cmc
cmc
cmp
jne
push
lea
jae
rcl
sub
mov
btc
not
movzbw
mov
movzbw
xor
sub
mov
cmc
xor
clc
push
jmp
pop
jle
mov
mov
aad
std
cmpb
and
in
lods
icebp
lods
push
loop
sahf
push
push
in
dec
shr
inc
dec
rol
lcall
scas
cli
sub
inc
clc
movsl
aad
mov
mov
negl
rcr
int
push
movsb
mov
icebp
sub
sbb
xor
xchg
mov
int3
dec
pusha
lea
mov
lea
dec
mov
pusha
not
mov
inc
mov
push
mov
call
xor
xchg
fimuls
cmpsl
iret
std
inc
mov
out
xchg
jae
lea
dec
push
fcmovb
adc
pop
ds
inc
dec
and
repz
push
xor
mov
inc
int3
pop
mov
mov
js
inc
xor
sub
test
outsl
lret
mov
loop
mov
cmp
mov
dec
xor
rcll
and
out
jnp
sbb
mov
adc
mov
inc
push
cmpsb
in
cs
loopne
mov
das
xchg
dec
pop
jle
jmp
lods
fmull
cwtl
jo
jl
in
out
jno
sti
push
inc
fsts
mov
shl
aaa
adc
lock
scas
rorb
insl
jae
mov
notb
hlt
jno
sub
cld
xor
cmp
cmp
sbb
xchg
cmp
stos
cmp
dec
inc
test
loopne
jne
rol
mov
incl
add
lcall
cli
movsb
pop
outsl
push
or
mov
jbe
inc
scas
ja
sub
xchg
cmp
clc
cmc
cmp
pushf
pushl
lea
je
jne
cmp
pusha
pushf
call
jne
push
mov
stos
mov
pushf
movb
lea
jmp
pushf
lea
jne
pushf
pushf
inc
pushf
pushf
movb
inc
pusha
pushf
pushf
pushl
lea
jmp
push
push
inc
pusha
push
push
lea
jmp
jne
call
pushf
stos
call
add
dec
loope
add
aam
add
push
add
aam
add
push
add
adc
add
test
ljmp
scas
aas
or
setbe
mov
movb
pusha
mov
bswap
lea
mov
call
pushf
pushf
bt
call
mov
call
xlat
mov
xor
test
inc
lods
inc
cs
aad
in
push
jno
popa
lret
dec
add
jae,pn
cmp
cld
cmpsl
iret
jnp
and
adc
scas
ret
push
scas
and
sbb
xor
inc
adc
dec
inc
pop
adc
sub
xor
pop
cmp
das
and
stos
cmp
and
ret
cmp
xor
test
lods
lea
and
dec
cli
and
cmc
or
push
sub
or
mov
es
mov
push
push
sub
mov
push
dec
pop
out
sub
popf
xor
pop
inc
lret
sbb
or
jbe
xchg
inc
sub
adc
add
xorl
xor
cmc
ds
cmpsl
jle
or
cmp
hlt
pop
movsb
rcrl
mov
xchg
and
and
xorl
pop
pusha
movsl
mov
mov
hlt
push
fisubl
inc
ss
sbb
jp
push
mov
and
inc
jno
jl
movsl
fstpl
push
cli
sahf
pop
mov
and
push
mov
sub
mov
nop
dec
aad
mov
aas
cmpsl
push
cwtl
and
movsb
mov
outsl
and
inc
push
xlat
gs
es
mov
int
and
fists
lret
mov
add
mov
sbb
hlt
push
in
xchg
sbb
movsl
js
adc
xlat
adcb
jae
addb
call
and
in
in
insl
arpl
xchg
mov
cmp
or
std
clc
push
cld
imul
imul
inc
cmp
xor
or
mov
lret
in
xchg
adc
inc
fdivrl
jno
pop
inc
pusha
out
push
lea
das
movsl
xor
push
cmp
inc
cli
es
out
int
and
sub
jo
sbbl
sti
pop
clc
push
inc
cmc
mov
or
add
lds
xorb
push
sub
pop
cmpsl
pop
bound
inc
mov
mov
test
stc
or
or
mov
aaa
xor
daa
das
rol
pop
cmp
in
lods
mov
xlat
subb
dec
mov
mov
int
inc
fxam
or
inc
sub
pop
arpl
adc
data16
iret
cmp
insl
clc
movzbl
xchg
pop
push
lret
les
cmp
xchg
shlb
push
test
xchg
cmpsl
ds
lods
jmp
les
and
fbstp
adc
in
out
jo
xor
ds
inc
pop
xlat
popa
inc
out
sub
add
imul
sbb
dec
adc
mov
popa
das
dec
push
xchg
ret
adc
mov
movsl
mov
adc
xor
add
xor
insl
add
adc
push
mov
loope
pop
xor
and
jmp
inc
mov
xchg
cmpsl
fidivs
addb
pusha
xor
dec
sub
out
mov
inc
lds
push
repnz
mov
inc
jo
mov
test
mov
adc
std
cmp
fisttpll
and
movsl
lods
insb
xchg
imul
cltd
loopne
int3
les
xor
fwait
lret
xor
and
jmp
sbb
mov
and
ds
xchg
add
jge
and
xor
dec
test
sbb
aam
add
xchg
daa
test
pushf
inc
fisubs
mov
lahf
mov
inc
lods
mov
xor
les
movsb
fs
pcmpeqb
mov
dec
inc
add
loop
push
es
test
xor
xor
pop
int3
sub
filds
mov
inc
cmpsl
sub
add
adc
test
sbb
adc
jno
jne
ss
inc
in
sub
pusha
loop
aam
adc
popa
xor
je
daa
data16
mov
popl
or
pop
inc
mov
dec
into
mov
jns
lea
scas
inc
jno
test
out
mov
inc
adc
cwtl
fcom
xchg
sub
sub
lds
filds
or
sbb
cmc
push
jecxz
je
mov
repnz
inc
enter
scas
push
dec
ss
fs
mov
mov
adc
xchg
push
js
inc
mull
lds
shrb
mov
lahf
add
push
xor
mov
popa
lds
aad
aaa
sbb
inc
repnz
out
fwait
add
inc
fistpll
test
or
lods
push
fsubrl
testl
mov
call
or
fs
movsb
cmpsl
mov
stos
push
mov
sbb
inc
inc
jne
cltd
aaa
mov
sbb
inc
push
xchg
cmpsl
lret
pop
in
sbb
ss
push
outsb
pop
push
movsl
fistpll
pop
jae
mov
into
jmp
inc
out
pop
pop
loop
mov
dec
in
dec
fadds
popf
aad
xchg
mov
jno
sub
and
mov
push
les
aad
hlt
mov
dec
jl
mov
movsb
out
mov
xchg
jnp
in
jbe
cmpsl
or
aam
stos
cmp
out
and
ds
fimuls
cmpl
or
fsubrp
cmp
cmp
mov
iret
movsb
mov
aas
pop
imul
add
mov
inc
sbb
imul
jge
xchg
fistpll
cmp
les
inc
fnstsw
mov
test
in
inc
scas
mov
cld
lret
jmp
out
sbb
pop
pop
jmp
mov
scas
pusha
sti
pushl
cmp
stos
aas
in
adc
leave
movsl
xchg
or
add
sbb
aaa
pop
cmp
aaa
ss
and
mov
push
repz
jo
xchg
fsubl
mov
fsubrs
or
arpl
sbb
lock
pop
sbb
pop
dec
pop
cmpsl
dec
jp
ss
popa
fwait
ds
in
lcall
out
adc
push
inc
mov
jge
out
movsl
lods
push
lahf
pop
icebp
and
jnp
mov
gs
out
arpl
outsl
pushf
mov
test
in
mov
inc
popa
enter
out
aad
leave
addr16
out
aas
and
in
cmpsl
xor
cmp
loopne
xchg
rcr
daa
xor
xor
mov
fs
or
sbb
and
xchg
pop
or
xchg
mov
loope
or
inc
and
sub
outsb
inc
adc
add
lods
adc
inc
popf
cld
push
sbb
lods
xchg
ss
mov
aad
cmp
pop
das
xor
inc
in
sub
mov
mov
push
or
sub
xor
lret
pushf
lcall
mov
lds
mov
cld
mov
cmpsl
hlt
fwait
push
aas
popf
and
std
inc
and
mov
sarb
in
in
daa
sub
adc
xor
les
xchg
inc
cmpsl
lds
fcmovu
ret
jb
inc
and
pop
arpl
lods
test
xchg
mov
fidivrl
and
sbbl
inc
std
push
mov
mov
sbb
mov
mov
iret
out
repnz
loopne
aad
sbb
out
das
push
inc
sbb
rclb
add
adc
push
out
int3
cmp
fwait
or
mov
in
push
mov
mov
mov
inc
pusha
in
shrb
addb
movsl
arpl
idiv
cmp
fidivrs
std
test
pop
pop
filds
adc
xor
mov
mov
test
lods
out
inc
cld
adc
imul
jp
jl
mov
jae
inc
mov
in
shll
es
mov
inc
dec
push
xchg
enter
or
sub
sbb
pushf
push
inc
push
inc
cld
xchg
std
repnz
movsl
adc
pusha
ds
add
push
lahf
mov
sbb
and
push
add
push
lods
cli
into
inc
loope
xchg
pop
fsubl
clc
pop
mov
aam
sbb
push
push
inc
inc
out
fcoms
mov
and
in
or
inc
sahf
inc
es
cmpsb
call
cmp
adc
adc
jge
push
in
pop
and
popa
out
mov
dec
inc
stc
mov
dec
inc
call
sub
mov
mov
insl
out
dec
inc
push
jge
mov
inc
in
or
je
push
aam
insl
inc
incb
pop
dec
gs
imul
test
push
daa
jbe
mov
std
mov
nop
push
add
and
inc
inc
mov
jmp
sub
hlt
lahf
inc
test
jae
or
sub
cmp
adc
push
pop
jge
insl
inc
mov
mov
inc
mov
in
sbb
test
mov
mov
out
in
fimull
pop
les
jno
paddusb
addl
shll
daa
hlt
cmc
adc
pop
inc
sbb
sbb
xor
adc
call
jnp
icebp
outsl
out
ja
or
mov
jecxz
aad
sub
lret
xlat
imull
movsb
pop
mov
sbb
pusha
cmpsl
push
aas
mov
and
sub
scas
inc
add
dec
ds
ljmp
mov
mov
shlb
xchg
inc
fwait
cmpsb
ss
ja
adc
jp
pop
jl
sahf
sub
aaa
cmc
add
cmp
test
fstpl
stos
mov
inc
pop
pop
fsts
inc
cmpsl
jns
and
data16
cmp
and
sub
cmp
shl
andl
push
movsl
fdivr
je
mov
sub
and
pop
inc
cmpsl
ret
mov
or
jne
add
in
pushf
popa
xlat
hlt
roll
push
xchg
xor
je
cmp
jmp
xchg
sub
inc
mov
xchg
test
call
jne
push
int
stc
xor
nop
movsb
mov
je
test
sbb
movsl
lret
cmp
out
mov
fadd
jns
sub
jmp
sub
movsl
out
inc
adc
stos
mulb
add
daa
add
popf
decb
fs
aad
push
stc
addl
jo
insl
stos
jne
fcoml
cmp
jno
out
movsl
mov
xchg
movsl
cmp
xchg
inc
clc
imul
xor
or
sbb
popf
mov
inc
out
xchg
dec
sbb
and
jge
std
jg
jmp
mov
jmp
jge
les
les
repnz
cmp
xor
cmpsb
insb
and
jnp
std
xor
jl
xchg
les
out
dec
popa
outsl
mov
push
mov
inc
scas
xor
inc
mov
or
sti
push
xchg
je
arpl
rclb
add
xor
jbe
pusha
ret
ret
cmc
stos
sub
cmc
push
mov
or
mov
insb
shlb
cmp
inc
ret
aaa
sar
cmc
clc
dec
insl
dec
jbe
leave
mov
xchg
and
xor
jb
add
call
xlat
cli
enter
adc
mov
sar
add
xchg
sbb
inc
xor
pop
pop
out
mov
aam
dec
loopne
mov
sub
aas
dec
sbb
outsl
int
inc
jmp
sbb
push
test
addl
and
mov
les
in
cmp
aaa
pop
adc
mov
pusha
push
jno
inc
ds
mov
jb
adc
cmc
mov
jbe
inc
inc
ds
leave
and
xor
sub
movsb
jns
add
rorb
inc
movsl
fisubrs
test
adc
mov
in
mov
inc
loopne
xchg
adc
aas
cmp
and
stc
mov
push
pop
shlb
sbb
jnp
scas
movsl
cmpsl
inc
xorl
sbb
and
and
mov
out
sbb
and
sbb
add
xchg
mov
sahf
cmpsb
testl
popa
mov
movsl
fistpll
mov
in
mov
sub
push
add
in
out
movsl
or
push
dec
ss
push
mov
xchg
or
xchg
aad
aam
push
mov
pop
cmp
data16
lds
cmp
bound
and
inc
push
cmp
jp,pt
dec
inc
xor
faddl
xor
test
loopne
int3
les
aas
inc
leave
inc
adc
sbb
or
push
loope
push
jecxz,pt
pop
sub
test
jns
mov
push
movsl
sbb
test
push
xchg
fisubs
jmp
test
hlt
xor
int
testl
xor
loope
ds
imul
lods
das
cmc
jns
inc
sub
dec
adc
cmp
and
enter
cmp
cld
pop
sbb
mov
nop
insb
jmp
inc
adc
sub
ret
movsl
mov
sub
iret
addb
adc
inc
idivb
dec
inc
les
dec
jbe
sbb
out
sub
std
mov
xchg
and
es
cwtl
sti
ja
hlt
mov
fwait
cmp
dec
lock
cmp
push
sbb
mov
inc
sti
addr16
mov
sbb
es
or
dec
inc
push
insl
inc
sarl
lods
xor
jg
pop
sbb
pop
lret
fsub
stos
loope
dec
dec
gs
ret
xor
or
les
mov
cmpsb
shll
insl
movsl
lods
pushl
adc
cmc
icebp
mov
xchg
pop
add
repz
sbb
mov
cmp
daa
test
jmp
mov
xchg
jae
rorl
or
push
iret
pop
and
int3
cmpsl
gs
cwtl
or
mov
popa
sub
mov
insl
pusha
loop
mov
inc
test
push
imul
cs
cmpsb
jne
adc
push
aaa
and
sub
xor
push
jbe
stos
les
imul
jo
out
and
les
push
and
in
out
repz
sbb
and
aaa
shlb
push
mov
out
js
insl
lea
xor
bnd
mov
pusha
mov
hlt
jge
in
sub
es
cmp
pop
movsl
sub
int3
inc
out
sub
or
aam
sbb
sbb
pop
not
insb
lcall
insl
out
sub
xchg
xor
inc
aas
scas
mov
cli
daa
out
cmp
out
popf
sbb
push
mulb
sub
pop
sbb
sarb
xchg
movsl
mov
push
std
lret
aad
sti
xchg
je
add
dec
std
mov
insb
cmpsl
jl
mov
sbb
insb
pop
cmp
sbb
hlt
call
push
es
inc
pop
xor
mov
scas
int
push
loope
int
dec
cs
pop
inc
aaa
insl
ret
inc
mov
xchg
adc
push
inc
mov
cmp
inc
jae
lds
inc
sub
jae
sbb
daa
popf
outsl
push
testl
nop
and
movsb
jno
movsl
cmpsb
dec
cmpsb
aas
jns
inc
call
out
xor
xor
out
cmp
sub
jle
mov
hlt
and
xor
pusha
mov
xor
mov
jno
test
xor
mov
fcompl
or
add
sbb
insl
xchg
xlat
mov
pop
mov
fwait
bound
fs
cmpsb
scas
sub
xchg
or
notb
pop
push
xor
push
sbb
out
and
push
sbb
movsb
and
les
sub
fs
out
and
movsl
clc
test
aad
pushl
ss
inc
xchg
push
fucomip
or
cld
xor
es
or
xor
mov
push
add
ja
std
push
cmpsb
jnp
push
pushf
popf
lret
imul
jl,pn
inc
xor
aas
out
cmp
addr16
adc
dec
sub
cmpsl
or
sub
cmp
jbe
mov
test
adc
push
adc
inc
xchg
inc
inc
ljmp
and
es
jns
sti
or
cmp
adc
xchg
je
std
sahf
push
xlat
fs
sub
loopne
or
loop
cltd
scas
adc
sub
and
fldl
xor
xchg
dec
rorb
sbb
and
stc
xchg
lds
jno
hlt
outsb
or
fwait
xchg
fadds
stos
fistpll
xor
sub
jge
xchg
aas
push
lock
sub
push
xor
jb
mov
mov
or
xor
sub
xchg
push
inc
cli
bnd
out
mov
sbb
incb
inc
addl
cmp
xlat
fs
mov
pslld
orl
mov
or
aas
lahf
adc
sub
and
pop
std
ljmp
daa
push
pop
add
cmpsl
fstl
nop
fisttps
inc
repnz
movsl
gs
movsl
and
cltd
jge
mov
cmpsl
sbb
pusha
xor
xor
cli
push
call
inc
cli
xor
clc
test
test
dec
es
inc
mov
movsl
test
out
mov
xor
and
fsub
ret
inc
add
cmp
popa
jle
out
cmp
mov
test
popa
fsts
in
and
and
inc
aaa
test
add
stos
xor
inc
movsl
js
xchg
inc
push
enter
mov
mov
jno
inc
mov
std
in
dec
daa
lahf
aaa
dec
fsubp
negl
sti
ret
jne
and
mov
call
and
sbb
mov
cmc
repz
push
mov
inc
not
cmp
xchg
mov
xchg
xor
push
out
mov
cmp
fs
inc
xchg
mov
in
jle
mov
es
dec
mov
lods
mov
mov
rolb
mov
mov
in
repnz
cmp
fbstp
or
andb
jge
xor
xlat
inc
adc
pusha
cmp
dec
add
cs
mov
je
mov
dec
and
xchg
jbe
inc
in
fs
imul
daa
roll
movsl
mov
cmp
sbb
jge
rol
sbb
ja
push
out
pop
sub
pop
sbb
dec
inc
adc
inc
lret
fistpll
fnsave
mov
dec
push
sbb
inc
cmp
pop
popa
popf
insb
xor
lods
adc
xor
aas
pop
shl
add
xchg
aaa
and
decb
std
movsl
daa
pushl
lret
iret
cmpsl
sbb
inc
mov
adc
mov
xchg
add
aad
test
and
pushf
hlt
push
inc
jno
cli
out
add
cmp
loope
or
movsl
loopne
arpl
test
ret
outsl
xor
nop
pop
push
dec
adc
lret
jge
adc
inc
scas
inc
dec
out
and
lods
xor
xlat
in
xor
testb
fsubp
push
popf
loope
test
movsl
mov
xchg
xor
inc
imul
jg
inc
pop
iret
aaa
mov
mov
jae
push
and
mov
mov
inc
sub
mov
mov
cmpsl
mov
aaa
dec
sbb
test
mov
pop
inc
loope
aam
nop
inc
mov
cmpsl
ljmp
les
xchg
out
or
stos
inc
mov
cmp
bound
xchg
sbb
xor
into
lds
sbb
mov
in
xor
clc
int3
int3
mov
inc
jmp
adc
mov
outsb
stc
inc
or
mov
mov
sbb
add
dec
jp
mov
pop
inc
dec
mov
push
mov
mov
cwtl
popa
push
mov
and
aaa
mov
mov
adc
inc
push
cmpsl
xchg
sub
push
cltd
xor
scas
addb
sub
or
mov
out
xchg
ljmp
push
fcompl
xor
sub
je
aad
lock
scas
cmp
out
mov
lret
mov
fnstcw
and
fs
sbb
xchg
ret
and
stc
pop
push
xor
xchg
cmpsb
jae
popa
inc
cmc
out
std
fsubrl
mov
mov
push
stc
test
aam
aad
out
pop
stos
mov
mov
add
sbb
and
pop
cli
mov
cmp
mov
xchg
or
fbld
pop
mov
inc
sub
jnp
adc
lds
push
inc
mov
scas
test
or
mov
dec
mov
jno
ja
mov
sub
inc
in
mov
insl
pushf
jmp
jl
mov
sub
cmpsl
in
xor
cld
push
loope
arpl
xchg
adc
adc
icebp
xor
aas
xchg
pop
lea
mov
lds
cmp
cld
dec
std
fld
mov
cld
jno
test
adc
fldl
outsb
sub
les
gs
mov
test
adc
cmp
mov
xchg
sbb
adc
push
jecxz
xor
mov
aaa
lds
stc
push
adc
aad
mov
jle
xor
and
mov
or
cmp
pop
movsl
mov
and
push
inc
cli
and
jo
xchg
std
push
pusha
jns
arpl
test
movsl
adc
xor
mov
mov
or
and
movsl
int3
mov
cmc
inc
movsb
adc
push
rcll
cmc
sub
push
xor
cltd
pop
movsl
cmp
lods
cmp
push
jb
popa
adc
hlt
sbb
in
js
pushl
sahf
xor
or
and
add
in
adc
pop
jl
lods
stc
inc
sub
mov
xor
scas
xlat
in
dec
xor
mov
je
dec
decl
lock
sbb
or
jge
lcall
testl
jge
cmpsl
addr16
out
add
scas
outsb
ja
and
mov
out
and
roll
arpl
int3
pop
mov
push
inc
add
andb
mov
pop
mov
push
and
cs
fscale
in
mov
dec
cmpsl
mov
dec
push
and
jp
xor
aad
mov
add
daa
mov
movsb
add
pop
or
cmc
cmpsb
jle
or
sub
jns
rcll
and
mov
adc
ret
adc
mov
call
mov
test
push
outsb
push
rcrb
sbb
jo
xor
andl
lret
mov
fldl
push
insl
jno
lods
mov
adc
mov
inc
jg
repz
filds
out
adc
call
movsl
mov
add
lock
cld
sub
lock
movsl
push
adc
xor
cld
pop
mov
pushf
pop
movl
fwait
cmp
inc
fsubrl
inc
jecxz
mov
xlat
lret
mov
jno
scas
add
mov
andb
jns
cmp
inc
jns
jge
mov
mov
insl
loopne
pusha
sub
jg
push
jp
mov
or
inc
jns
out
loopne
push
push
dec
mov
mov
hlt
sbb
insb
lock
and
insb
aam
out
jle
aaa
dec
negb
call
test
jbe
test
ret
mov
dec
adc
ds
dec
add
popa
sbb
inc
mov
mov
neg
mov
jge
std
loop
cmpb
fwait
insl
pushf
xor
push
adcl
cmp
aad
push
loope
dec
aaa
sub
pop
pop
in
ret
icebp
push
mov
pop
and
jp
mov
mov
push
roll
sbb
cmp
lock
sahf
mov
mov
dec
push
aaa
js
mov
les
and
sub
dec
aas
jmp
fsubl
lds
push
and
shlb
sbb
dec
cmpsl
shlb
and
in
mov
xor
mov
xor
imul
cmpsb
sbb
or
cwtl
inc
popa
testb
push
inc
jecxz
jle
fs
sbb
xor
icebp
jmp
imul
xor
mov
cmp
push
mov
xchg
push
xor
mov
inc
and
sub
daa
cmpsb
test
jmp
iret
push
or
ret
cltd
sarb
add
mov
add
mov
add
and
mov
xor
ret
cmp
lds
push
xchg
dec
popa
in
jb
sbb
aas
rorl
lods
adc
aad
xlat
decl
push
cmp
and
in
repnz
pop
cli
sub
cli
mov
pop
xchg
insl
sub
mov
cmpsb
mov
jo
dec
aas
inc
insb
push
mov
mov
cmpsb
push
xchg
cmpsl
out
icebp
and
cwtl
out
xor
repz
cwtl
sti
xchg
mov
dec
jbe
xor
jne
les
add
mov
sahf
call
inc
repnz
insl
xchg
sbb
xor
inc
or
or
cltd
xchg
dec
mov
xlat
ss
xor
xchg
movsl
or
ss
rorl
mov
cmpb
leave
cmpsl
stos
js
or
testl
jle
lock
popa
mov
arpl
lods
popa
or
mov
or
mov
dec
jmp
nop
int
add
imul
dec
inc
shrb
movb
jbe
jmp
add
mov
push
pushf
movsl
pushf
scas
stos
enter
addb
fcoms
ja
test
in
movsl
fdivl
add
cld
ja
or
loope
mov
das
sbb
inc
mov
into
inc
cmc
out
outsl
sarl
mov
popa
outsl
jp
xor
outsb
cmpsl
daa
negl
aaa
loope
movsl
inc
sbb
repnz
mov
mov
das
and
cli
gs
scas
mov
in
pop
dec
xchg
in
insb
aaa
movsl
adc
movsl
arpl
cs
jno
mov
aas
sbb
jp
push
js
push
dec
adc
and
sbb
out
mov
mov
or
cmp
mov
out
xchg
xor
iret
int
daa
push
gs
mov
xchg
sbb
fidivrs
inc
dec
cmpsl
xchg
es
test
cltd
xor
into
jne
xchg
mov
in
repnz
dec
les
adc
mov
fisubl
cmp
xchg
cmp
sbb
out
cmp
and
adc
mov
jb
cwtl
outsl
jae
movsl
and
fadd
sti
mov
pop
inc
add
mov
mov
and
sbb
iret
pushf
cmp
adc
sub
cmpsl
inc
mov
xchg
ret
push
movsl
adc
mov
rorl
xlat
sbbl
incb
and
cmp
inc
enter
adc
inc
insl
aam
pop
and
mov
mov
jle
mov
dec
or
xlat
fsubrs
mov
les
sti
ss
lds
ret
lods
lock
mov
cmp
sbb
int3
lods
adc
popa
push
std
inc
inc
or
mov
cmp
sub
mulb
mov
inc
inc
mov
cmp
jmp
cmp
lea
or
pop
jo
pop
inc
dec
and
jns
test
push
add
xchg
and
cltd
lods
sub
pop
aaa
cmp
sub
pop
sub
jb
out
aad
xor
pop
les
push
repz
and
movsb
inc
je
cld
cmpsl
in
jae
or
pop
mov
test
dec
push
decb
stc
test
cmpsl
dec
sbb
std
insl
hlt
add
xor
hlt
fidivl
jle
std
insl
test
push
into
sbb
pop
pop
lret
pop
mul
sbb
mov
sbb
mov
in
xlat
int3
cmc
adc
xlat
sub
lods
daa
inc
aaa
adc
mov
ds
or
add
cmp
jno
cmpsl
and
cwtl
jne
inc
or
je
or
or
rcr
sti
incl
dec
pusha
sub
and
cmpsb
loopne
loope
cmp
movsl
sbb
push
jns
aas
mov
xchg
push
push
sub
cmp
and
and
addr16
mov
mov
jle
jecxz
pop
aaa
inc
loop
movsl
inc
and
movsb
add
adc
fmuls
stc
mov
xchg
ss
and
mov
mov
cmc
fcomip
scas
mov
pop
sbb
mov
xchg
cmp
out
lods
mov
xor
jge
nop
sti
popf
ds
xchg
out
sub
scas
cmp
push
movsl
mov
add
mov
inc
nop
xor
inc
test
xchg
sbb
pushf
out
cmp
outsb
lds
sub
iret
mov
ret
inc
push
sub
and
sti
les
mov
add
loop
int3
or
mov
fimull
into
xchg
in
mov
sbb
sahf
sahf
xor
mov
aam
jae
push
lods
cmp
call
xlat
outsb
daa
in
jmp
and
xor
sbb
xchg
xor
in
cmp
movsl
loopne
or
sahf
jmp
int3
lods
adc
mov
or
and
pop
or
mov
xor
push
push
add
pop
aad
and
in
addb
repz
cs
loopne
push
mov
push
mull
jecxz
push
and
adc
lock
xchg
sub
cmp
inc
ja
stc
dec
xor
jp
popf
xor
outsl
stc
cmp
or
cmpsl
inc
push
cmp
les
inc
and
movsl
mov
sbb
loop
lcall
es
out
inc
mov
cmp
nop
fdivr
xchg
inc
xor
mov
push
xchg
lock
adc
stos
add
mov
adc
inc
xchg
inc
mov
dec
sub
mov
shll
add
push
lock
shrb
call
inc
xchg
stos
lret
lods
and
xchg
popa
xorl
leave
jge
and
jo
loope
xchg
ss
pop
and
loope
scas
or
cmp
aam
test
xor
or
call
arpl
repnz
sbb
push
mov
cmpsb
push
mov
fimuls
fldenv
mov
aad
hlt
lret
movsl
cli
faddp
repnz
push
add
andl
leave
cmpsl
aad
push
enter
jecxz
xchg
insl
adc
and
xchg
in
arpl
lock
je
push
mov
movsl
mov
pushf
push
cmc
fs
and
xchg
cmpsb
push
push
xor
xor
xor
loop
mov
inc
clc
or
cmp
inc
test
lock
jmp
push
xchg
popf
dec
in
fst
inc
push
inc
sbb
loop
inc
xorl
mov
imul
or
es
out
inc
or
mov
pop
clc
call
mov
jle
insb
mov
mov
clc
cmc
cs
pop
add
fdivrl
fimuls
fidivrs
xchg
mov
sub
push
jne
les
mov
adc
xor
pop
mov
int3
lahf
inc
lds
and
dec
push
mov
int
sbb
xchg
leave
ret
jno
inc
fmuls
sbb
enter
pop
aam
or
int3
jmp
cmc
mov
movsl
mov
fisubrs
sbb
and
mov
mov
ljmp
movsl
jo
cwtl
xchg
into
pop
mov
dec
test
hlt
sub
mov
stc
xlat
pop
adc
inc
adc
movsl
sbb
dec
lock
negl
dec
sahf
test
nop
push
xor
pop
jge
and
mov
movsb
dec
xlat
push
leave
xchg
leave
ficoms
out
iret
aaa
adc
loope
mov
sbb
aam
fidivrs
mov
xor
inc
xor
sbb
add
arpl
and
sbb
das
mov
sti
fstpl
cld
inc
mov
jno
int3
jb
cmp
fmul
clc
aaa
stos
jmp
lcall
and
hlt
in
fistpll
xor
jle
inc
xor
insl
inc
jno
adc
adc
popf
frstor
cmp
rolb
xor
insb
cwtl
push
pushf
les
lcall
xor
popf
mov
cmpsl
movsl
stc
pop
stos
mov
clc
mov
inc
and
adcl
jno
std
cmp
push
imul
out
xlat
loope
sub
sbb
aas
jge
outsl
or
mov
jmp
sub
repz
sbb
cli
sbb
and
push
adc
adc
test
inc
cmc
dec
sub
or
sti
jno
pop
adc
ds
mov
mov
or
out
aas
inc
lods
popa
out
or
and
ficompl
aad
or
ss
popf
mov
xor
andb
cld
dec
fs
sti
gs
push
inc
jp
movsl
jns
fnstsw
adcb
jbe
ret
xchg
inc
adc
repz
push
inc
sbb
and
sub
cmpsl
dec
scas
sarl
xor
inc
xlat
add
les
mov
jae
pop
cmp
and
sbb
adc
inc
or
adc
push
push
and
fnsave
cmpsl
pusha
jb
lea
scas
test
mov
push
lret
sub
stos
scas
leave
add
cltd
das
mov
fadds
mov
add
jmp
lahf
xor
cmp
add
repnz
push
outsb
push
filds
push
push
mov
cmp
fdivrp
decl
mov
fdiv
inc
push
jb
pop
movsl
and
out
cmp
sahf
cmp
mov
jecxz
gs
mov
pop
imul
arpl
sbb
adcb
adc
dec
aas
add
or
test
xlat
mov
lock
cmp
aaa
push
cmp
in
mov
adc
mov
bound
lods
movsl
cmpsl
les
hlt
mov
xchg
cs
lea
jmp
xor
sub
fistps
dec
hlt
sub
add
mov
xchg
mov
imul
xor
sbb
cmp
push
adc
pop
popa
mov
push
mov
js
cmp
inc
add
loopne
leave
imul
das
cmc
jecxz
lds
inc
lret
in
out
cmp
adc
xor
xchg
dec
inc
sub
cmpsl
push
mov
test
es
fbstp
subl
adc
cmp
xor
out
push
xlat
add
pop
push
sub
add
xchg
pop
dec
insl
fnstsw
xor
xorl
fdivl
cwtl
repz
jno
lea
mov
in
pop
dec
add
push
aaa
or
aam
jl
in
sarb
xchg
mov
and
cmp
aam
cmp
clc
sahf
xchg
sub
xlat
pusha
out
fistpll
repz
sub
int3
out
ja
filds
cmpsl
mov
add
fmull
mov
mov
inc
cmp
pusha
repz
inc
out
test
loopne
jmp
sbb
testb
clc
cmpsb
rorl
out
call
js
push
push
dec
xchg
push
dec
fildll
addb
in
lret
cmp
xchg
inc
push
mov
push
cmc
std
decl
push
mov
into
inc
mov
xor
aas
mov
sub
jge
in
lcall
in
nop
mov
popa
inc
pusha
xor
lret
jns
adc
clc
rorb
jge
lahf
sti
mov
add
or
sahf
rol
cmp
xorl
jmp
mov
clc
jge
ljmp
gs
std
ret
or
fsubr
mov
movsl
fs
and
iret
jno
neg
clc
xor
insl
mov
sbb
cmc
cmpsl
inc
push
jecxz
movsl
test
shrb
scas
imul
in
pop
movsl
int
rolb
mul
cmp
aas
mov
add
mov
into
jmp
cmpsl
pop
xor
cli
mov
xor
push
repz
add
out
pusha
dec
sbb
and
out
inc
inc
pop
jge
push
add
iret
cld
pop
fidivrs
je
sbb
in
pop
pop
adc
or
fldenv
ja
inc
push
adc
das
std
movsl
mov
daa
sti
xor
mov
jg
loop
mov
xlat
pop
inc
push
pop
sub
fisubl
stmxcsr
push
das
xchg
shrb
daa
lea
std
insl
jne,pt
lds
inc
mov
pushf
pop
fbld
xchg
mov
movsl
and
cmpsl
mov
mov
std
and
adc
ss
xor
je
xchg
out
cmpsl
push
add
pop
sbb
imul
in
inc
cmp
jmp
pop
cmp
popf
xor
nop
out
leave
pop
mov
xor
adc
dec
das
cmpsl
testb
test
and
sti
loop
xor
aaa
cmpsb
pop
movsb
divl
lds
faddl
mov
dec
and
dec
and
xor
fwait
loopne
push
xor
dec
adcb
sub
mov
movsl
jp
mov
stc
in
jle
cwtl
pushl
aas
and
push
xor
stc
popf
inc
add
mov
lods
pop
imul
out
push
mov
mov
xor
xlat
mov
notb
repz
xchg
push
pop
cmc
inc
push
xor
pop
jno
cs
push
adc
enter
mov
pop
rclb
adc
cli
fcomp
insl
enter
inc
or
scas
les
gs
lock
int3
add
cmp
pop
imul
pop
mull
test
xchg
push
out
movsb
mov
push
or
and
xor
int
and
pop
jl
fs
cmpl
inc
hlt
enter
dec
mov
arpl
push
sbb
stc
mov
sahf
inc
mov
outsl
lods
aas
ljmp
and
inc
cmp
or
or
jb
push
pop
xor
xchg
fisttps
cmp
or
xchg
std
roll
les
mov
out
push
or
movsl
inc
jne
ficompl
pop
aad
add
std
movsl
pop
mov
ds
inc
clc
pusha
push
mov
xor
pop
cmpb
adc
sbb
fnstenv
and
in
call
xor
cmp
jno
int3
imulb
cli
icebp
in
cli
and
xchg
aad
daa
aad
sbb
notl
or
push
and
add
std
or
add
jecxz
les
dec
into
push
ss
jle
lea
std
push
ljmp
and
mov
mov
dec
in
and
inc
jns
mov
push
inc
rcrb
push
daa
adc
mov
cmpsl
loopne
loope
push
outsl
inc
add
jae
lea
dec
and
xchg
cmpsl
popa
iret
or
decl
hlt
inc
mov
inc
hlt
incl
and
adc
pop
cld
xor
movsl
popf
jmp
das
movb
cld
push
adc
int
xorb
and
jbe
inc
mov
xchg
loope
push
inc
shrl
inc
mov
sub
aas
and
stc
hlt
mov
dec
inc
mov
xchg
jo
pop
std
mov
sub
shrb
lea
or
jb
fiadds
test
in
mov
push
pop
cmp
popa
mov
push
lods
sub
sbb
sub
dec
cmovne
movsl
test
out
and
call
in
xor
jle
mov
dec
loop
scas
loop
and
inc
xchg
mov
lods
jo
loop
sbb
cmp
inc
sub
inc
inc
in
icebp
mov
mulb
inc
push
xor
pop
mov
icebp
inc
mov
in
and
sub
lds
and
push
es
aaa
inc
test
inc
rolb
xor
fyl2x
movsb
inc
les
cmc
xchg
xor
push
out
pop
and
push
in
and
add
push
and
add
aas
lret
aas
aaa
inc
add
aam
add
mov
mov
lds
add
in
and
push
push
add
push
add
movsl
xor
sbb
sbb
sub
cmc
mov
divl
mov
in
xchg
pop
fldl
add
sub
pop
add
sbb
sbb
add
push
movsb
test
lcall
std
mov
and
xchg
lds
sbb
in
mull
rcll
rcll
and
mov
out
add
xlat
and
lds
inc
aad
xchg
pop
in
xchg
jg
push
shll
and
xor
sbb
push
pop
lds
aam
xor
mov
cmp
test
in
mul
pushl
repz
mov
cmpsl
and
and
rcll
aas
xchg
jmp
std
jmpw
xchg
andl
pop
mov
push
mov
xchg
aas
xchg
aas
test
push
xor
mov
mov
aas
movsb
jmp
out
shlb
aas
in
test
and
loope
test
int3
xor
movsb
and
leave
cmc
cmp
lds
or
add
out
push
aad
pop
pop
mov
jbe
loope
fbstp
aas
and
inc
mov
and
lds
roll
mov
jecxz
lods
cmpsb
adc
daa
and
je
test
sbb
xor
inc
cmpsl
popf
les
out
scas
jbe
and
movsl
fwait
sbb
add
ficoms
loope
jb
mov
ret
sbb
mov
xchg
push
sbb
inc
push
js
dec
fsts
inc
in
sbb
out
jl
add
pop
sbb
dec
enter
push
inc
aaa
sbb
cmp
mov
jne
test
inc
cmpsl
decl
sbb
cmpsb
lcall
and
jae
cmp
test
cld
hlt
repz
shl
fbld
aas
ds
fstpl
enter
mov
repnz
sbb
mov
fwait
xlat
dec
hlt
jl
test
dec
push
inc
dec
jo
arpl
xorl
pop
data16
inc
or
jnp
xor
xchg
popf
stc
les
inc
pop
adc
dec
cmp
movsb
dec
lea
sub
adc
mov
movl
inc
xchg
aaa
and
test
and
push
inc
pop
das
sub
jns
ret
xor
xorb
fdivs
loopne
xchg
mov
das
ret
gs
push
std
inc
inc
mov
inc
xlat
jno
fmul
ret
jp
std
inc
mov
lret
dec
xor
data16
jns
outsl
push
les
inc
xor
lret
bound
sbb
lcall
mov
add
mov
push
and
fsubl
popf
rep
inc
push
add
jle
sbb
jmp
push
in
hlt
inc
dec
mov
scas
rdmsr
adcl
push
cli
sub
cmpsl
xlat
std
sar
loop
insb
push
sbb
in
jo
fwait
dec
mov
rol
nop
dec
call
push
inc
frstor
ficoms
pushf
adc
inc
les
fstpt
enter
movsl
cmovnp
and
dec
stos
mov
daa
pop
test
mov
fwait
enter
push
inc
mov
jp
ja
mov
pop
mov
xor
and
mov
mov
cmpsl
mov
or
cs
stc
aad
or
adc
test
lea
repnz
push
lock
or
rcll
dec
sub
addr16
lret
jnp
in
mov
add
je
adc
out
rep
sub
mov
gs
daa
imul
pop
in
movsl
int3
fidivrs
lahf
call
out
pusha
pop
lds
movsl
test
xlat
aaa
insl
dec
out
enter
sub
jno
mov
cmc
xor
add
movsl
mov
aaa
notl
incb
into
ret
inc
popf
xchg
stos
cld
dec
adc
aaa
add
or
leave
and
aaa
jnp
push
xlat
out
in
cmp
cmp
pop
inc
adc
jl
inc
mov
mov
cmpsl
inc
leave
dec
mov
push
dec
sbb
mov
or
sub
ss
and
cwtl
mov
call
out
fcoms
inc
cmpsl
add
mov
fcomps
in
lds
pop
int3
call
pushf
movsl
iret
in
loop
mov
mov
jmp
rolb
jae
and
pusha
or
movsl
inc
or
lock
mov
stos
cmc
cltd
mov
lret
sbb
mov
out
icebp
mov
movsl
mov
mov
fstpt
and
jge
clc
test
cld
in
xor
fnstcw
add
in
cmp
cmc
and
lcall
sub
xlat
repz
aam
in
bound
mov
mov
push
lret
mov
es
movsb
add
jnp
inc
dec
xor
scas
aad
and
or
xlat
aas
push
xor
jno
mov
add
ds
sbb
mov
inc
pop
jecxz
pop
loopne
sub
cmpsl
into
mov
sub
push
jnp
fs
mov
adc
inc
repnz
mov
xor
sbb
xchg
add
out
xor
and
pop
adc
addr16
js
xor
out
inc
jno
popf
insl
dec
lret
cltd
les
mov
mov
movsb
cs
popa
movsl
push
mov
and
xor
in
jecxz
jle
add
jmp
and
push
mov
addb
test
movsb
outsl
or
outsb
jmp
test
out
dec
bound
jmp
sub
pusha
nop
jge
lds
sbb
hlt
aas
subl
dec
inc
cmpsl
rclb
mov
sub
and
and
cmp
les
xchg
xchg
arpl
std
or
ja
scas
enter
stc
xor
and
add
inc
fidivrs
add
mov
push
idivb
xchg
popa
lds
mov
test
ret
mov
xor
add
xchg
sbb
loop
push
inc
mov
mov
int
pop
mov
lods
cmp
mov
into
not
scas
adc
and
cltd
jns
inc
pop
daa
in
sub
pop
add
xchg
fs
add
add
and
push
lds
xor
lds
lds
addl
or
test
lds
in
iret
in
lds
test
in
xchg
lds
movsb
in
cs
fadds
adc
and
lahf
in
jno
inc
popw
add
out
sarl
adc
mov
cmc
in
mov
aaa
clts
shr
and
xor
lds
sbb
add
pop
add
movl
notb
add
push
and
mov
faddl
xchg
mov
mov
add
in
mov
adc
aaa
cmpsb
mov
xor
push
aam
lds
mov
add
in
ja
inc
xlat
adc
and
mov
and
mov
aaa
xchg
mov
aaa
notb
in
adc
test
sti
data16
xlat
xor
jg
mov
ffree
lds
mull
addr16
xchg
daa
hlt
mov
idivb
xchg
add
inc
ds
mov
cmc
xor
mov
and
xor
and
rclb
sahf
mov
add
sub
and
mov
lds
idivl
and
lods
mov
xchg
idivl
daa
jl
stc
xchg
ja
inc
add
xchg
roll
test
and
and
adc
sbb
adc
sti
mov
inc
adc
aas
notb
jp
cmp
aaa
in
mov
cmpsl
cmc
es
mov
push
cmp
adc
pop
jbe
mov
push
and
test
cmp
xchg
xlat
mov
cmpsl
cmpsb
cld
testb
lods
add
in
adc
cmp
add
xchg
in
movsl
jne
daa
outsl
xlat
test
aad
cld
or
je
push
mov
dec
stc
jne
mov
mov
pop
and
mov
pop
cmp
or
je
mov
xchg
push
add
inc
pop
icebp
sub
push
cmpsb
jmp
out
lods
testb
fisubl
dec
and
sbb
ja
mov
jne
in
ret
cmp
adc
stos
push
loop
test
rol
loop
push
jecxz
inc
mov
cli
xor
mov
cmpsl
in
test
or
fcom
sub
sbb
in
and
cmp
jno
inc
subb
daa
cmc
xchg
aad
callw
mov
inc
jne
cmp
sbb
push
adc
pop
or
jecxz
cmp
dec
es
popa
in
ljmp
es
mov
popf
and
inc
dec
jecxz
mov
fsubl
mov
and
lock
mov
dec
div
sahf
mov
aaa
or
mov
out
pop
jmp
cmp
jle
xchg
popf
test
or
cltd
ljmp
jmp
popa
xchg
inc
inc
xor
inc
pop
jmp
repnz
sub
or
ljmp
testl
inc
insl
outsl
movsl
dec
xor
int
cmpsl
xchg
sub
out
xor
jno
add
fs
icebp
pop
sti
repz
les
and
movsb
std
mov
out
xchg
jne
inc
in
call
sub
inc
and
inc
jns
mov
es
mov
sahf
imul
and
pop
gs
es
mov
mov
outsb
add
sbb
xor
mov
adc
inc
push
xlat
xchg
and
mov
addl
ja
cmpsl
mov
push
roll
mov
fdivs
inc
adc
aam
outsb
dec
jno
lock
mov
jg
cmpsl
nop
pop
mov
adc
inc
movsl
cs
and
mov
jle
iret
sub
lcall
pop
and
popa
xor
xchg
mov
out
aaa
fsubs
arpl
and
dec
or
mov
mov
popa
jg
std
aaa
sub
test
cmpsl
ljmp
xlat
pop
cmp
dec
sbb
push
xor
dec
mov
xchg
adc
or
cli
adc
movsb
xchg
addl
stos
inc
popf
adc
dec
fs
lret
pop
and
cwtl
testl
cmp
clc
mov
xchg
scas
xor
call
jmp
sbb
mov
icebp
shrl
in
jbe
cmpsl
addb
inc
mov
sub
cmp
and
xchg
rol
fnstenv
stos
mov
inc
fsts
mov
ds
and
and
inc
daa
jmp
xor
adc
outsl
xchg
push
ds
idivl
mov
jmp
test
repnz
sbb
xor
inc
popa
or
cmc
orl
out
jb
fbstp
cwtl
xor
arpl
sbb
xchg
scas
pushl
push
cli
sahf
pushf
dec
stos
mov
test
mov
insb
sbb
mov
pushf
add
push
xchg
sahf
fsubs
push
pop
mov
jg
notl
jbe
xchg
in
dec
sahf
mov
fwait
inc
dec
mov
cmp
inc
push
add
inc
ja
imul
leave
fcompl
cld
bnd
and
xor
lods
mov
out
leave
gs
inc
xchg
inc
cmp
lds
and
inc
shr
mov
jns
sub
mov
mov
sti
out
call
inc
pop
out
adc
in
cmp
add
fld
adc
dec
scas
stc
test
dec
les
inc
dec
cwtl
sysexit
jp
lods
dec
and
cwtl
mov
adc
outsl
mov
rorb
sub
cwtl
fwait
sub
inc
push
cltd
mov
movsb
jb
shr
sbb
gs
inc
movsl
push
push
jecxz
test
test
xchg
cmpsl
aas
mov
fdiv
adcb
dec
lods
or
jl
inc
adc
aas
std
or
inc
jne
cmpsl
in
pop
arpl
cmp
adc
pop
clc
iret
mov
add
mov
pop
xchg
into
and
and
dec
cmp
pop
and
lods
jbe
in
les
adcl
adcl
movsl
sub
pop
int
ret
jae
xchg
out
cmp
add
mov
cmc
or
popa
lods
frstor
inc
arpl
clc
and
xor
push
movsl
call
rclb
push
mov
addr16
adc
mov
xor
cmp
inc
mov
xor
lcall
fldt
pop
pop
xor
nop
movsl
in
xchg
mov
out
out
mov
or
inc
mov
mov
aaa
mov
add
sbb
movsl
jecxz
stc
mov
loope
mov
adc
test
pop
jo
xchg
xor
out
sbb
xor
xchg
fbstp
std
sbb
in
cmp
test
jae
sbb
push
fs
stos
mov
xor
jecxz
and
sbb
inc
in
jb
pop
xchg
mov
jns
xor
shlb
push
popa
subl
inc
lea
loopne
sub
das
add
inc
test
push
sbb
mov
movsl
xchg
repz
xor
lods
pop
push
and
adc
daa
test
push
pop
pop
sbb
xor
jl
cmpsb
aas
jnp
lret
mov
inc
and
xor
movsb
insb
sbb
loop
pop
dec
pop
test
dec
in
pop
std
cmp
aad
or
les
adc
enter
xor
sub
movsl
cmp
mov
or
and
testb
xor
mov
push
andb
or
mov
mov
cwtl
insl
in
mov
cli
ret
xor
les
xor
xchg
pop
and
das
inc
mov
stc
push
bsf
inc
xor
in
add
outsl
jns
jns
imulb
mov
loop
outsl
rorb
pop
jae
enter
push
int
push
inc
out
mov
pop
testl
das
and
mov
and
rorl
inc
jno
lods
aaa
mov
mov
mov
aam
lock
pusha
call
out
fs
mov
mov
mov
in
adc
push
pop
je
test
mov
cmp
inc
jge
push
xlat
mov
xchg
and
push
lahf
repz
dec
cmp
in
movl
xchg
dec
and
add
add
inc
les
imul
jbe
xlat
movsl
cltd
int
cmp
mov
das
mov
jo
sub
popf
jp
add
insl
aaa
movsl
push
les
adc
das
mov
sbb
int
dec
aad
or
lahf
outsb
pop
and
lods
mov
cld
or
fs
out
mov
les
xor
jecxz
add
cmpsl
ljmp
data16
cs
inc
xor
xor
outsb
dec
mov
mov
jmp
lcall
je
lret
sbb
adc
pushf
or
or
mov
roll
push
cld
addr16
adc
push
loope
cmp
movsl
subl
jo
push
roll
testb
fisubl
shlb
lods
das
or
daa
insb
rolb
lcall
movsl
sub
gs
sub
jae
lods
cli
fsubrp
lods
movsl
lret
xlat
jmp
add
daa
ficompl
loope
imul
insl
fs
push
and
push
mov
add
pop
daa
xchg
ss
inc
movsl
andb
xor
lret
lods
repnz
sti
jno
cmpsw
dec
sbbl
or
pop
lods
movsl
pushf
dec
pop
out
out
and
ffreep
aad
lods
mov
mov
repz
stc
mov
mov
inc
push
jno
cmp
push
adc
aam
movsl
icebp
pop
ljmp
sub
stc
scas
push
sbb
gs
mov
mov
mov
or
add
subb
lods
or
add
add
sbb
and
out
mov
add
ljmp
mov
gs
fldt
in
cmpsw
mov
fisubrs
scas
lcall
popa
dec
fldt
bound
jp
fucom
in
dec
mov
dec
addr16
push
xchg
add
cmp
addr16
and
xor
mov
lret
xlat
lds
mov
mov
dec
mov
in
lds
mov
inc
push
inc
or
dec
dec
mov
gs
dec
loop
inc
mov
in
incb
aad
adc
mov
jo
push
mov
sub
orb
jbe
jbe
jp
and
adc
jmp
adc
sbb
add
xlat
pop
pop
addr16
movsl
in
mov
fistpl
jp
xor
mov
data16
push
sbb
daa
cmc
xchg
push
je
xchg
jecxz
sbb
mov
mov
outsl
or
cmp
sbb
inc
scas
jl
and
xor
push
je
pushf
jp
loopne
adc
hlt
imul
repz
dec
ds
test
loop
ret
adc
mov
les
rcll
push
nop
lods
sbb
movsb
hlt
and
xor
hlt
sbb
lret
push
add
xchg
fwait
mov
dec
push
or
sbb
jl
sbb
or
out
scas
push
out
sbb
dec
inc
inc
jge
popf
jno
mov
cmc
enter
xor
mov
movsl
mov
sub
daa
test
sub
cwtl
hlt
in
std
lock
push
cltd
rcrb
ret
or
pop
imulb
mov
test
in
das
mov
es
xor
add
shl
push
cmp
dec
inc
inc
lcall
adc
pop
add
add
in
inc
faddp
gs
das
popf
cmp
dec
and
inc
popa
les
fmuls
mov
push
rcrb
or
test
ret
je
jns
jl
je
sti
cmc
call
inc
push
shlb
add
or
test
lahf
adc
sbb
jmp
cmpsb
pop
movsl
mov
jnp
xor
sub
icebp
push
add
test
jns
mov
jl
lret
and
scas
jbe
mov
push
cmc
loope
loope
mov
rclb
fwait
popf
gs
fs
test
in
and
lret
xchg
das
mov
jne
push
mov
sbb
imul
mov
aad
neg
and
scas
lods
mov
inc
add
je
clc
roll
push
cltd
cmpsb
xlat
cmpsl
mov
mov
ss
hlt
lea
inc
je
mov
cmpsl
test
ja
xor
push
repz
sti
in
data16
jnp
in
ljmp
ss
cld
push
data16
fildl
lret
add
inc
shld
mov
mov
jle
loopne
insl
inc
out
inc
pop
or
xor
add
out
and
stc
jno
call
jecxz
xchg
jns
data16
lock
rolb
cmc
xchg
rolb
mov
cmpsl
and
test
imul
pop
push
mov
dec
and
aaa
push
mov
sbb
pushf
js
mov
notb
ja
jns
popf
cwtl
jns
arpl
and
xchg
enter
bnd
or
add
loope
add
test
aaa
imul
stos
push
cmc
adcl
hlt
mov
xchg
addr16
stc
cmp
xor
enter
ja
imul
out
xlat
cmp
mov
jle,pt
enter
insl
das
fs
out
adc
adc
scas
aaa
dec
push
mov
nop
and
loop
mov
out
cmpb
pusha
in
cld
aad
mov
and
adc
or
jne
daa
fcoml
mov
push
in
xlat
enter
mov
sbb
push
sub
push
inc
push
cmpsl
lods
or
int3
and
dec
lods
sbbl
mov
jmp
add
outsb
outsb
mov
dec
xchg
mov
cmpsl
mov
push
or
ret
mov
adc
push
hlt
add
popf
add
or
shl
xor
xchg
xchg
cmpsl
and
adc
fdivl
fwait
add
inc
jmp
es
xchg
adc
ret
mov
sub
fstl
xor
les
pop
dec
ljmp
stc
shrl
xor
pop
in
dec
movsb
mov
shll
mov
inc
inc
jno
and
xlat
movsl
and
mov
ret
mov
loopne
std
mov
mov
add
pusha
xor
movsl
ret
mov
jnp
pop
xchg
mov
daa
int3
mov
add
mov
mov
push
test
pop
and
adc
stc
ljmp
sub
inc
mov
insb
int3
and
and
repz
jne
cmpsl
xor
out
mov
stos
outsl
sbb
cmp
loopne
xor
in
in
jbe
shll
mov
adc
ss
xor
and
rorl
repz
in
lods
mov
lds
push
jl
add
inc
jne
mov
sbb
or
sbb
int3
mov
pop
and
cld
scas
push
lret
xchg
les
and
adcl
cmp
xor
push
stos
loop
sub
jns
cmp
leave
sub
sbb
imul
add
inc
mov
sbb
in
cmp
inc
xor
push
lret
insl
ljmp
es
in
push
inc
loopne
popa
imul
jg
cmp
cmp
xlat
jno
inc
xor
dec
and
es
aas
insl
pop
mov
dec
mov
adc
enter
mov
pop
xor
mov
or
xlat
fs
mov
xchg
mov
jl
inc
int
imul
js
movsl
nop
outsl
pop
xchg
cmp
lods
dec
loope
push
aaa
mov
xor
sub
mov
orl
aaa
sbb
add
sub
stos
cltd
testb
mov
fbstp
inc
xchg
divb
movsl
in
lods
pushf
stos
jmp
enter
mov
cltd
or
or
xchg
inc
mov
or
fs
insl
cs
subl
aam
movsb
and
cltd
movsl
nop
addb
sbb
inc
insw
repnz
cmpsl
lcall
lods
arpl
mov
add
scas
pop
shrl
pop
stc
sbb
movsl
aas
xchg
cmpsb
xchg
inc
enter
mov
and
cmp
mov
xlat
cmc
and
cld
or
cmp
pusha
sti
jo
jbe
inc
push
je
xchg
push
testb
loope
repz
shr
fimuls
mov
les
cld
xor
xchg
loop
in
sahf
es
out
sbb
cmp
and
pop
xchg
pop
add
cmp
push
inc
popf
ja
xchg
test
sub
push
mov
sub
rcrb
lds
inc
pop
adc
mov
lods
push
cli
push
mov
inc
lea
les
imul
xlat
and
arpl
sbb
jno
push
push
ljmp
in
add
addb
hlt
test
cs
in
mov
jp
jno
and
adc
pop
xchg
push
std
pop
push
testb
mov
nop
nop
push
pushf
mov
repnz
shlb
sbb
mov
add
or
vandps
fwait
movsb
xor
jo
movsb
sub
in
aaa
arpl
gs
cmp
inc
mov
pop
popa
push
push
scas
gs
or
jp
hlt
sbb
out
mov
out
cmp
mov
mov
out
faddl
clc
mov
out
cmc
add
adc
int
mov
mov
pop
jl
xlat
enter
bound
push
iret
add
push
dec
xor
popa
sub
idivb
movsb
cmp
fisttpl
sti
fs
stos
cs
stc
test
movsl
test
loopne
mov
mov
imul
xor
xchg
popa
ret
mov
bound
jb
cmc
lods
fldcw
nop
jne
dec
jecxz
test
push
jecxz
xchg
mov
add
mov
adc
cltd
stc
scas
enter
sub
cmpsb
inc
aas
daa
movsb
popf
mov
sub
lock
push
inc
stc
fs
adc
sub
and
iret
jecxz
loop
jbe
dec
movl
jns
in
inc
and
movsb
cmp
inc
cs
jecxz
jns
xchg
and
lahf
xchg
in
cmp
insl
lret
adc
jl
or
and
add
int
popa
or
mov
push
mov
adc
shll
mov
pushf
dec
and
dec
inc
mov
push
and
mov
sbb
repnz
sti
mov
in
sbb
inc
sbb
sub
gs
ficomps
stos
frstor
enter
scas
aas
pushf
jle
cmp
int3
lea
add
fcomp
fdivl
lds
inc
scas
out
inc
mov
add
and
mov
xchg
in
sub
sbb
jno
mov
inc
pop
stos
fcoml
add
add
mov
out
sarb
or
sub
xchg
dec
cmpsl
push
sahf
push
push
cli
and
pop
jns
shl
dec
cmp
mov
xchg
mov
insl
add
cmpsl
cmpsb
addr16
divb
push
mov
in
test
dec
add
xchg
lahf
leave
xchg
in
pop
cwtl
daa
mov
addr16
mov
dec
lds
int3
lods
loope
pushf
daa
xchg
and
in
test
sub
in
mov
add
xlat
and
test
or
dec
add
adc
enter
mov
cmc
ret
inc
out
repnz
iret
lahf
ss
scas
mov
sahf
inc
clc
lods
sub
cltd
cmp
clc
clc
hlt
xchg
insl
mov
push
mov
fisttpll
out
xchg
add
jg
inc
cmpsl
nop
in
pop
mov
sub
scas
movsl
aas
sbb
inc
mov
test
dec
pop
cmp
push
test
dec
out
mov
pop
mov
xor
or
arpl
mov
aaa
or
pop
and
das
lahf
call
fstpt
pushf
xor
add
xor
xchg
enter
in
lcall
lcall
aam
rclb
arpl
jbe
push
mov
adcb
xchg
frstor
or
cmc
jno
jo
push
push
and
les
imul
pop
repz
jmp
push
and
and
repnz
sbb
nop
xchg
adc
sub
das
test
fdivr
mov
sub
mov
push
xchg
fildll
pop
or
push
ror
mov
adc
cmp
dec
push
mov
in
insb
or
jecxz
mov
mov
out
cli
pop
mov
mov
mov
cmp
std
es
dec
sub
insl
mov
ds
cld
movsl
sbb
cs
decb
mov
in
mov
adc
sbb
imul
fcomps
mov
movsb
or
push
and
mov
fsubl
shll
xor
and
mov
loopne
and
daa
jno
pop
ret
mov
mov
or
insb
cmp
push
adc
mov
in
test
insl
ss
movsl
hlt
mov
in
xor
pop
or
movsb
lock
cs
cmp
insl
test
xchg
sti
or
inc
cmpsl
inc
shlb
and
lock
jge
popa
jne
movsl
pop
imul
sbbb
jb
in
ret
cmpsl
andl
clc
add
xchg
cs
lret
cmpl
mov
aaa
inc
mov
mov
dec
push
xlat
dec
into
fmul
test
test
adcb
fsubl
out
push
mov
call
add
sub
push
sub
inc
iret
cwtl
in
cmpsl
sbb
fs
add
repnz
stos
sub
scas
out
xor
mov
pop
decl
pop
sbb
jne
sti
sbb
pop
movsb
movl
ds
cmc
movsl
jmp
inc
sbb
inc
sbb
dec
or
iret
cs
lea
inc
movsl
stos
outsb
xchg
fs
and
dec
add
js
fstpl
aam
and
lock
xor
inc
jbe
inc
int3
hlt
jne
xchg
xchg
adc
jp
xor
mov
sub
decl
dec
insb
add
dec
gs
and
cltd
inc
cmpsl
or
jl
jb
aaa
inc
fmul
sbb
mov
and
mov
lahf
in
sbb
sbbb
es
push
mov
inc
push
std
sub
rorb
add
mov
jmp
and
clc
andb
inc
jle
mov
cld
xchg
cmc
add
push
cmpsl
addb
push
add
push
xor
jmp
dec
mov
sub
pop
cmc
daa
fs
adc
cld
stos
movsb
cmpsl
xchg
pop
mov
sbb
and
mov
xor
add
mov
je
ret
mov
xor
push
popa
loope
fs
xor
xor
repz
pop
inc
push
stos
popa
adc
inc
inc
les
mov
sbb
ds
aas
xlat
test
jmp
aas
xchg
lds
insb
inc
out
mov
inc
fcompl
mov
inc
je
mov
add
cld
les
call
fs
pop
mov
lds
mov
push
push
xor
cmpsl
mov
push
adc
test
aas
inc
std
movsb
daa
xchg
adc
pop
sbb
xor
inc
fbld
daa
xchg
es
cwtl
pop
lds
push
inc
cld
adc
inc
inc
rclb
fs
xlat
loope
xorl
dec
lods
pop
add
inc
xor
pop
xchg
lds
lods
add
shlb
pushf
or
cmpsl
pusha
inc
lahf
jne
and
jle
and
and
adc
mov
je
mov
add
add
xor
loopne
mov
adc
xchg
add
inc
add
clc
mov
cltd
mov
aam
out
add
pop
aas
xchg
pop
cmpsl
aaa
cmc
aas
jbe
push
cmp
sub
test
push
mov
icebp
movb
cmp
cmpsl
add
or
fcmovnb
mov
es
mov
in
in
and
in
push
cmp
or
adc
and
call
jns
add
ds
ss
mov
pusha
popa
out
mov
std
inc
jle
arpl
cli
out
ret
stc
adc
xchg
or
pop
adc
loope
cmp
dec
in
call
cmpsl
xchg
pop
jno
fdiv
lcall
sub
rorl
pushf
cmpb
sub
test
gs
add
add
jle
lods
add
mov
stos
neg
and
xor
loope
sbb
clc
cs
arpl
and
sbb
lock
mov
mov
movsl
mov
leave
les
and
out
sbb
xchg
es
pop
jl
mov
shrl
sub
inc
enter
jo
and
sub
stos
lds
jp
incb
xlat
dec
and
jg
negb
cmpsb
movsb
sbb
dec
test
pop
movsl
leave
jbe
outsl
inc
popf
mov
jecxz
and
sbb
mov
test
mov
dec
sbb
dec
adc
inc
sbb
call
cs
dec
pusha
inc
jns
fdivl
repnz
cmp
jne
jp
mov
cltd
ret
cltd
xchg
add
ds
push
aas
fistpl
and
out
out
push
xor
dec
je
sub
cmp
sarl
loop
cmpsb
adc
sbb
push
cli
fiadds
inc
popf
push
push
outsb
adc
push
sbb
mov
pop
cmp
loop
cmp
xlat
inc
xchg
xchg
lock
mov
movsl
jmp
jg
sbb
or
ret
gs
push
jne
stc
je
lcall
push
cwtl
scas
push
std
jne
enter
sbb
pop
movsb
enter
cmp
inc
cmp
mov
jle
in
jns
aaa
xchg
cmp
xchg
int3
dec
aad
fs
jge
or
lock
and
ret
pop
or
push
dec
pop
push
js
sarl
pop
gs
pop
sbb
cli
xlat
jno
movsl
dec
aaa
dec
inc
mov
mov
inc
das
cmpsb
rorb
outsl
gs
mov
lds
jl
lods
out
popa
fs
and
add
cmp
lods
inc
inc
cmpsl
ja
pop
sub
mov
push
mov
cmp
pop
inc
orl
or
daa
cli
mov
pushf
call
inc
push
xchg
adc
mov
cld
jno
jnp
jecxz
dec
xchg
hlt
add
pop
mov
mov
jg
lock
pushf
lds
xchg
rorl
aam
sarl
or
out
mov
in
mov
mov
scas
lahf
lods
xorl
in
imul
push
out
inc
shll
adcl
ret
les
out
push
leave
inc
lahf
loope
add
in
lcall
mov
fidivrl
cvtpi2ps
xor
jmp
test
xor
stos
fs
movsb
in
shrl
leave
clc
inc
pusha
cmp
jb
sbb
in
add
stc
mov
cs
cmp
nop
push
mov
inc
push
inc
jno
pop
mov
xchg
inc
data16
jp
adc
mov
cmpb
popa
imul
pop
sbb
dec
and
add
adc
out
cli
popa
and
sub
in
mov
pop
jp
add
fmuls
push
cmpsl
and
jge
in
fs
cs
lcall
je
insb
jbe
out
add
popl
xchg
sbb
pop
test
addl
cmp
sub
sub
shlb
aam
lahf
pop
test
stos
sbb
inc
scas
fs
movb
inc
outsb
test
inc
adc
adc
in
sbb
lds
inc
and
aad
test
mov
mov
inc
ljmp
imul
inc
mov
cmp
shrl
in
insl
push
pop
xor
sbb
stc
in
xor
stc
adc
out
movl
pop
or
lods
movsl
lock
stos
jne
and
xchg
mov
sarb
dec
mov
ss
std
out
dec
cmp
repnz
popa
and
or
pop
inc
cmpsl
inc
jmp
leave
cs
mov
dec
cmp
test
cmp
cwtl
pop
loop
in
sbb
push
mov
add
fs
pop
daa
cmp
repz
add
mov
cmpsl
and
stc
mov
popa
pop
pusha
and
add
aas
xchg
or
movsb
pop
sbb
mov
sbb
int3
out
cld
repz
cmp
lods
pop
lds
test
or
adc
test
pusha
xchg
les
stos
mov
fucomi
cs
clc
xchg
sbb
in
cmp
test
mov
ss
idivb
loopne
out
mov
inc
dec
push
cwtl
mov
cmpsl
cltd
xor
mov
xor
test
inc
fst
sub
xchg
add
lock
sbb
mov
stc
add
inc
ds
lds
or
lds
aad
test
insl
cli
in
mov
or
xorl
dec
js
mov
addr16
mov
push
aam
ljmp
and
xchg
and
in
in
mov
xor
mov
sub
mov
insl
lret
add
int3
ss
imul
inc
aas
sub
pushf
jle
cmp
cmpsl
add
inc
dec
jl
adc
jne
pop
sbb
cmp
stc
xchg
movsb
and
test
lcall
jno
js
out
hlt
subb
cltd
cmc
add
pop
mov
sbb
insl
ljmp
and
xchg
xchg
add
pusha
bound
jbe,pn
and
shrl
stos
icebp
clc
or
mov
es
dec
inc
cmpsl
shll
nop
cmp
xchg
dec
and
jle
cld
lods
sarl
cli
ficomps
aam
lret
js
xchg
adc
inc
cmpsl
jge
stc
add
lcall
test
jmp
mov
mov
jae
pushf
inc
loop
adc
xor
pop
pop
lret
ja
cmpsl
test
decb
daa
dec
lea
je
lret
xor
movsb
sbb
push
push
adc
xor
sbb
sti
out
inc
dec
adc
jae
shlb
push
sbb
arpl
movsl
test
in
lcall
popa
pop
sbb
mov
in
aaa
mov
arpl
cmp
mov
add
inc
jecxz
xlat
mov
cmp
pop
lock
push
add
pop
lcallw
aam
mov
sbb
fisttpl
cltd
sub
repz
test
fiadds
add
gs
mov
sbb
lock
dec
jnp
dec
xchg
push
sahf
push
xchg
push
jnp
pop
ds
out
push
inc
inc
sbb
mov
dec
addr16
cmc
push
or
hlt
andb
dec
test
mov
and
xlat
xchg
orb
mov
sub
xchg
add
add
ret
adc
iret
int3
js
std
fdivrs
cmp
xor
lret
sbb
xchg
repnz
lock
movl
movsl
into
add
fnsave
mov
ds
hlt
dec
cmp
frstor
dec
es
popa
push
xchg
jge
inc
jge
stc
dec
pop
gs
lahf
or
dec
sub
pop
lds
jne
cmp
cmp
or
lods
cmpsb
inc
pop
mov
int3
jno
lea
mov
xor
dec
ja
int
pop
out
or
jle
in
adc
clc
cld
sub
add
cmpsl
fbld
sahf
jecxz
arpl
subb
into
mov
cltd
or
leave
sti
scas
push
sahf
and
cmc
xchg
pop
push
mov
ret
jmp
sub
mov
mov
inc
es
ret
mov
jbe
pop
add
movsl
xlat
icebp
rcrl
adc
or
push
add
aaa
inc
and
xchg
pop
mov
sbb
dec
imul
call
push
inc
testb
jne
pop
aam
xlat
aaa
adc
lcall
hlt
jne
jo
lods
jmp
mov
repnz
data16
mov
movsl
fildll
ret
es
mov
mov
pop
cmpsw
ja
test
enter
cld
movsl
mov
cmp
add
mov
mov
decl
mov
lret
inc
divl
mov
fldt
xlat
out
sbb
pop
js
cmc
add
addb
mov
daa
adc
mov
add
roll
or
movsl
mov
adc
mov
test
xor
nop
fmull
mov
or
mov
pop
imul
add
jbe
or
mov
clc
dec
mov
pop
in
jl
scas
jle
and
rolb
movsl
xorb
imul
sbb
repnz
jb
enter
push
adc
jg
cmp
add
or
aad
adc
out
jne
mov
sbb
in
pop
aam
in
js
lds
insb
jno
pop
and
push
pop
daa
lds
std
aam
mov
sub
stc
ret
add
lret
popf
mov
testb
jnp
divl
sbb
popa
inc
or
pusha
negl
cmpsb
mov
xchg
imul
ljmp
mov
cmp
in
mov
clc
les
add
pop
pop
call
int
lret
mov
fsub
cmpsb
dec
pushf
lcall
cltd
stc
insb
fimuls
loope
leave
push
out
add
and
push
dec
sub
jbe
cmp
shrl
into
scas
inc
or
movsl
fisubrl
mov
div
cld
aas
ljmp
and
jbe
pop
pop
push
cmpsl
and
cmp
les
jge
fsub
mov
inc
pop
sub
ret
imul
xor
ss
cmpsl
cmp
pop
js
pop
xchg
out
adc
mov
hlt
out
call
iret
cmpsb
fisttpll
mov
in
je
push
jmp
data16
jmp
ret
adc
les
and
mov
jns
enter
popa
push
out
xchg
push
mov
inc
mov
cmp
sbb
push
push
cld
inc
aas
and
call
jae
lods
cmpsl
orl
ret
mov
mov
dec
jl
xlat
lods
lds
stos
arpl
mov
pop
push
in
mov
inc
shrl
push
dec
rcll
test
sub
cmpsl
hlt
pusha
adc
ret
clc
pop
mov
cmpsb
or
insl
jns
hlt
mov
adc
fsubs
out
cmpsl
rcrl
xor
sub
popf
push
imul
jecxz
pop
mov
int
clc
cmpsl
sbb
or
fsubrl
vorps
das
rclb
xchg
test
add
push
test
pop
ja
les
out
and
jb
or
push
out
dec
aad
fdivrs
sarb
flds
iret
imul
fstl
mov
gs
mov
scas
jge
push
loopne
sub
inc
inc
gs
dec
test
movsl
in
sbb
jne
push
sbb
gs
mov
adc
push
cli
out
or
cmpsl
lods
outsl
pop
psadbw
xor
test
daa
fimull
bound
movsl
sti
stos
sti
mov
or
pop
jns
push
out
insl
rcll
and
adc
cli
scas
js
mov
pushf
pop
pop
adc
sarl
mov
paddsw
mov
dec
es
adc
insl
push
pop
dec
mov
xor
push
xchg
xor
cmp
mov
test
test
jbe
sbb
jno
jo
cs
sub
adc
sub
or
mov
inc
and
cmpsl
in
clc
es
mov
out
push
inc
out
out
daa
sub
dec
xor
fldenv
aad
es
jbe
cmp
adc
add
jg
lea
in
and
lea
aaa
mov
fsubs
inc
ds
mov
sbb
jle
dec
mov
mov
sub
mov
push
sbb
xchg
mov
mov
xchg
push
push
xor
dec
pop
adc
cwtl
aas
lret
add
dec
cmp
dec
jae
test
xlat
insl
mov
push
ss
or
mov
cmp
fisttpll
out
or
jno
mov
sbb
data16
mov
nop
outsb
fimuls
les
gs
aad
nop
adc
repz
ss
mov
dec
adc
cwtl
xor
and
repnz
mov
sahf
jae
xchg
pop
outsl
sbb
pop
mov
imul
push
adc
inc
fst
mov
in
and
pushf
cmp
sbb
add
cmpsb
mov
add
movb
enter
sti
inc
mov
xchg
pop
sbb
inc
dec
pop
mov
jae
pop
insl
cmpsb
clc
mov
imul
testb
shr
push
push
and
movsl
in
mov
lock
or
movsl
loopne
inc
scas
pop
xchg
lock
sub
xchg
dec
test
jge
out
inc
arpl
mov
push
rcrb
push
dec
arpl
and
xor
jns
aam
adc
mov
pushf
insb
mov
or
sbb
mov
mov
shl
push
pop
lods
aaa
movsl
lret
gs
lds
aad
fidivs
inc
and
push
insl
pop
insl
lret
lods
enter
gs
jbe
lds
sbb
inc
hlt
repz
xchg
pop
repz
jno
inc
test
cmpsb
pop
lods
inc
pop
xchg
and
dec
cmp
mov
push
and
mov
jno
jmp
pop
testl
fimuls
incl
lcall
xlat
imul
imul
inc
and
pop
sub
mov
and
mov
or
dec
mov
dec
jecxz
adc
cmc
mov
sbbb
pcmpeqd
and
or
sbb
xor
sbb
lods
shlb
pushf
mov
jno
loope
jge
fcomip
and
fists
loop
sub
and
je
fstpt
out
popa
add
sahf
into
cld
insb
xchg
insl
aad
pushf
or
jbe
sbb
inc
iret
test
inc
mov
repz
jne
movsl
mov
test
arpl
jnp
stos
push
pop
sbb
inc
cmpsl
rcrl
movsb
aaa
xor
xchg
repz
and
je
mov
push
sub
out
add
mov
int3
lret
inc
imul
sub
dec
lahf
jnp
adc
out
push
sbb
xor
xlat
movsl
sbb
sbb
test
add
negl
iret
jmp
decl
or
fs
aaa
lea
stos
cmp
mov
adc
test
pop
mulb
push
shlb
xor
pop
sbb
sub
repz
dec
enter
aas
lods
bound
call
inc
mov
popf
add
cli
inc
cmpsl
push
icebp
popa
incb
inc
push
push
and
movq
es
adc
loopne
mov
pop
add
insl
outsb
test
fildll
int
mov
dec
pop
lcall
out
sub
lock
sbb
arpl
sbb
aad
inc
ds
pop
aaa
xor
aaa
mov
insb
push
sbb
das
std
push
daa
lret
jbe
inc
cmpsl
mov
jmp
jns
sbb
and
xor
inc
insl
cmc
jge
and
mov
sbb
add
add
mov
push
jns
sbb
arpl
stc
or
repz
cwtl
test
test
cmpsb
imull
dec
hlt
inc
ret
mov
push
xchg
fdivrl
inc
sbb
cs
mov
and
add
sbbl
clc
add
cs
outsl
lea
movsb
arpl
pop
pop
clc
adc
shll
add
movl
lcall
inc
xchg
insl
rolb
xchg
inc
in
cltd
sbb
imul
ja
sahf
inc
cld
movsb
out
into
xor
test
call
push
push
idivb
push
call
jecxz
movsb
cmpsb
lds
test
std
and
repz
jp
popa
mov
cmpsl
ja
clc
and
sbb
inc
mov
cmp
cmp
aaa
popa
push
int3
insl
inc
int
push
ds
call
stc
inc
push
jge
sub
adc
xchg
adc
sbb
push
jbe
movsl
xchg
fldenv
or
cmp
shl
lds
mov
stc
movsl
loop
sub
std
dec
sbb
incb
xor
clc
and
lret
sbb
repz
xor
test
jo
sub
jne
es
adc
mov
scas
add
loopne
add
daa
push
xor
mov
sbb
push
push
adc
repz
cmpsl
jno
std
lahf
add
or
mov
inc
xor
sub
jns
pop
mov
clc
ret
xchg
in
roll
mov
ficomps
inc
push
cmp
hlt
out
jbe
outsl
cmp
mov
fnstenv
lock
pushf
sbb
fsubs
call
mov
daa
std
sbb
stc
push
mov
jbe
push
adc
mov
int
lahf
jno
ret
into
mov
movsl
ret
cmp
mov
or
xlat
cld
xchg
lds
push
xchg
jmp
les
popf
pop
xor
sub
pop
dec
and
cmp
mov
pop
sbb
push
movsl
jecxz
sahf
mov
out
add
cmp
inc
jne
test
repnz
inc
xchg
add
imul
jno
pop
mov
dec
inc
loope
mov
inc
ljmp
mov
ss
mov
mov
aas
jmp
adc
jne
inc
add
imul
nop
pop
add
adc
push
push
in
inc
mov
daa
xlat
xlat
jb
test
in
std
inc
scas
lret
cmpsl
or
repz
mov
cmpsb
jb
and
aaa
lcall
stc
aad
mov
add
std
xlat
mov
mov
aas
inc
daa
inc
mov
xor
orb
xor
or
inc
pop
std
in
movsl
aam
decl
jno
inc
call
out
mov
or
mov
icebp
fcompl
add
mov
adc
inc
pop
movsl
xchg
out
pop
clc
pushf
pop
sbb
add
fadds
cmpsl
xor
in
jp
mov
xchg
mov
jns
xchg
mov
cmp
test
outsl
test
ds
test
aaa
jne
inc
cmp
scas
dec
outsb
enter
push
std
out
stos
loope
int3
mov
dec
ja
and
enter
stos
mov
js
bound
insl
iret
sbb
pop
test
xor
sbb
ret
push
and
movsl
dec
out
daa
addr16
es
push
gs
mov
cld
pop
xchg
xor
insl
jne
add
es
mov
out
enter
inc
and
test
cmp
ret
jle
sbb
cwtl
cmp
cmpsl
arpl
jo
movsb
push
dec
xchg
jge
pushl
or
sbb
fistpl
push
push
mov
test
mov
out
jbe
jecxz
sbbl
sbb
pop
push
aaa
pop
mov
push
js
inc
out
push
sub
lahf
mov
mov
ljmp
cwtl
push
int3
fldt
xor
cmpsb
incb
dec
pop
jno
inc
dec
xchg
xlat
mov
sbb
repnz
nop
addr16
or
xchg
mov
jge,pn
or
inc
cmp
test
push
inc
repnz
and
jo
and
movsl
jmp
gs
mov
orb
lret
cmc
imul
bound
int3
mov
pop
mov
cmp
insl
int
or
out
cmc
add
or
xor
bound
cmp
mov
test
lds
adc
scas
jno
cmc
in
mov
sub
imulb
jbe
test
cmp
lea
push
shr
inc
dec
das
mov
stos
inc
cli
xchg
aam
mov
or
add
call
dec
cmpsl
cmp
addr16
add
cmpsl
pushf
and
out
mov
dec
xchg
cld
shrl
xlat
push
fwait
jmp
push
cmp
pop
push
aaa
repnz
lods
xor
xor
stos
xchg
fistps
hlt
add
jg
aaa
fwait
testb
sbb
mov
or
rolb
in
xor
sub
aaa
sbb
pop
in
cli
sarb
scas
hlt
and
and
leave
hlt
sahf
sar
repz
lret
imul
ja
and
xlat
movsl
or
lret
les
and
or
stc
mov
movsb
test
jns
adc
lods
sub
cmp
and
mov
xchg
hlt
les
testb
enter
adc
xchg
cmpsl
xchg
mov
enter
fsub
xor
into
lret
jg
outsl
xchg
iret
add
push
cmpsb
daa
stos
cmpsb
in
les
mov
mov
ja
pop
stc
movsl
mov
inc
and
outsb
pop
pop
repnz
shlb
jb
into
std
movsl
jnp
scas
cmpsb
in
test
pop
lods
adc
lock
sbb
adc
icebp
and
out
fadd
or
fsubs
or
ss
hlt
inc
aad
gs
dec
sub
inc
es
aad
hlt
movsl
aam
cmp
inc
jno
cmp
pop
movsl
push
jb
add
movsb
call
jmp
test
dec
insl
ds
repz
lds
cli
or
mov
lock
push
bound
cmp
push
inc
pop
scas
cwtl
aam
xchg
push
push
xor
xor
jb
xchg
stc
daa
jmp
sbb
sub
cmpsb
out
push
fists
cld
lods
cmpb
and
cld
repnz
or
xor
out
cwtl
std
ja
shlb
adcb
fsubs
xor
adc
in
pusha
jmp
xchg
int3
xchg
mov
ret
bound
sbb
out
mov
cltd
in
rep
test
cmp
inc
sarl
inc
pop
popf
data16
in
int3
inc
push
insl
testb
or
dec
jae
insl
cltd
pop
jae
fisttpl
cli
sti
inc
enter
dec
cmc
xlat
and
xchg
mov
push
add
stc
push
fisttps
xor
negb
cmpl
popa
int3
xor
push
popf
push
sub
mov
jge
inc
mov
wrmsr
ljmp
adc
lcall
jp
popa
fnstcw
push
mov
xor
xchg
dec
enter
xor
mov
mov
mov
shrb
movl
loope
data16
jmp
pop
adc
std
push
addr16
and
mov
ret
and
mov
inc
sbb
jae,pt
popf
dec
es
push
add
into
dec
aad
dec
cmc
adc
or
pop
add
add
push
pop
aas
fdivs
and
enter
adc
jno
jb
lcall
cli
mov
repz
xchg
jno
sbb
lods
in
je
adc
xchg
cmp
cmp
pop
inc
xchg
xchg
roll
in
cwtl
mov
leave
cmp
adc
inc
pop
repnz
popa
or
add
and
loope
jg
fimuls
add
xchg
scas
fsubl
in
out
loopne
nop
mov
fwait
daa
decl
ret
daa
jge
push
adc
sbb
and
jl
inc
movsl
outsb
pop
insl
sub
push
pop
iret
test
push
out
mov
cmpsl
mov
out
push
mov
out
or
in
cmp
xor
aas
jo
adc
stos
cmp
sub
xor
dec
jg
mov
outsl
imul
and
sbb
mov
clc
xchg
dec
jl
xchg
popa
xchg
cmp
adc
jnp
xor
movsl
icebp
shr
daa
outsl
cmc
nop
fs
ja
pop
or
lahf
sbb
outsl
dec
mov
cld
dec
sbbb
xlat
add
xor
mov
popa
cmpsl
jbe
and
aam
in
pop
push
sbb
or
dec
push
mov
mov
adc
in
xor
xor
movsb
xor
sbb
out
rep
xchg
inc
pop
xor
insl
fidivs
loop
lds
imul
pop
push
and
mov
mov
xchg
xchg
inc
cmc
call
pop
stc
cmp
xor
fildl
jg
pop
loop
pop
int
sbb
xor
data16
aaa
cmc
push
std
es
cld
mov
pop
push
mov
jle
jno
cmp
sub
lret
fmul
adc
and
dec
lahf
inc
adcb
xor
inc
cmp
add
cmp
pop
sbb
test
adc
dec
cld
sub
inc
scas
mov
repz
or
or
add
adc
sar
pop
cld
hlt
adc
aaa
jb
cld
and
sub
sbb
pop
add
and
loop
pop
hlt
jl
aas
cmp
cmpsl
gs
shll
pusha
data16
xorl
inc
repnz
sub
cmc
xlat
xchg
aaa
pop
scas
xor
and
cmc
add
inc
movsb
in
xchg
and
cmpsb
adc
xlat
xorl
sub
cmpsl
xchg
fbld
daa
xor
and
push
inc
shlb
mov
mov
ja
pushl
xor
push
je
lods
pop
fs
xlat
aaa
push
dec
hlt
lds
jnp
lds
and
fnstcw
xlat
inc
and
mov
xchg
adc
and
out
movsb
xor
and
clc
les
mov
mov
lds
cwtl
mov
xlat
mov
add
mov
add
daa
pop
add
es
xor
sub
loop
sbb
inc
test
mov
lds
pop
jbe
mov
add
lds
jo
shlb
jge
cmp
add
mov
and
mov
adc
cmpsl
cmpsl
jne
mov
les
cwtl
inc
mov
je
xor
mov
ss
stos
addr16
lods
and
cmpsb
jl
cmp
adc
aas
push
lahf
in
jne
xlat
adc
jbe
out
rcr
mov
adc
mov
push
mov
lds
xlat
jno
sbb
cmp
mov
incb
add
aam
loop
pop
xor
neg
repz
repnz
call
mov
gs
adc
dec
sbb
sahf
in
scas
inc
mov
jno
testb
out
dec
jp
and
mov
inc
popa
inc
inc
and
push
cmp
xor
inc
in
pop
and
ja
roll
movsb
cmp
xchg
mov
int3
inc
mov
popa
push
cmp
xlat
adc
lret
jg
popa
sbb
and
data16
hlt
loopne
jmp
add
in
jo
arpl
sbb
and
or
pop
int3
popf
mov
call
scas
dec
test
add
mov
sub
imull
test
adc
dec
push
xor
jecxz
inc
push
fs
pop
pop
or
sbb
jmp
adc
outsb
push
dec
sub
stos
out
ds
push
negl
dec
and
add
andps
push
in
xor
xlat
andb
sbb
call
pop
xorl
mov
sti
aas
sub
test
jno
aaa
popf
push
xchg
xor
mov
stos
mov
adc
add
cmp
push
mov
les
xchg
pop
add
sbb
inc
cs
in
sbb
push
inc
push
cmc
adc
push
xchg
cmc
fs
repnz
ds
rcrb
pop
outsl
movsb
stc
push
sahf
nop
test
xor
repz
or
sub
inc
outsb
mov
adc
inc
out
shrl
cli
ror
aam
xor
sub
lods
xlat
outsl
sbb
pop
push
and
testb
nop
cli
jno
sahf
cli
lods
inc
loop
lret
pushf
xchg
cmp
sub
data16
scas
cmp
daa
aam
inc
cmpsl
pop
cli
les
arpl
daa
mov
icebp
popa
idiv
rcl
mov
fs
bound
xor
leave
mov
and
inc
in
setbe
lret
jge
movsl
leave
inc
and
pop
xor
mov
mov
mov
add
test
push
xchg
xchg
aad
loop
cmp
push
add
mov
movsl
test
cli
dec
sbb
jle
inc
inc
push
movsb
insl
mov
pop
cmp
call
jmp
ret
mov
jecxz,pn
shrl
pop
sub
rcrb
popa
pushf
pushl
data16
push
and
push
xorb
loope
sbb
pop
out
jae
int3
dec
incl
lds
xchg
icebp
movsl
adc
mov
scas
insl
jae
pusha
es
push
vpcomuw
dec
cs
out
inc
cmpsl
mov
and
jmp
sub
fadds
xor
or
mov
lock
repnz
add
sti
iret
sbb
mov
pop
gs
xor
inc
popf
and
mov
xchg
sahf
mov
jo
subl
inc
cmp
dec
xor
cltd
sti
out
test
cwtl
mov
pop
cmc
dec
sti
or
call
mov
aas
std
or
insb
inc
mov
inc
cmp
jns
push
xchg
in
das
sarb
mov
enter
lock
lock
fnstsw
adc
add
sbb
add
inc
and
sarb
jbe
ret
insb
xor
mov
xchg
insb
mov
and
fimull
fwait
cmc
cld
cli
mov
add
xor
hlt
rclb
jge
in
call
cli
adc
cs
adc
xor
xor
push
cmpsl
mov
stc
mov
out
mov
inc
or
sbb
xchg
xchg
xchg
enter
aaa
lret
movsl
xchg
sub
lahf
jbe
mov
sub
stos
push
test
dec
cmp
shlb
vmaxpd
dec
ds
push
and
sbb
xor
mov
cmp
fsubs
inc
out
dec
movl
push
inc
pop
les
jle
inc
les
movsl
mov
enter
jp
xchg
mov
and
jmp
test
xchg
xchg
pop
jl
sbb
xlat
adc
nop
add
inc
dec
adc
adc
add
shll
inc
cmpsl
mov
mov
lods
inc
and
sbb
mov
sub
or
xchg
push
dec
ljmp
or
and
mov
je
movsl
xchg
test
mov
and
popa
lea
in
insl
inc
mov
movsl
jo
repz
cwtl
mov
aaa
and
in
in
sahf
xor
call
movsl
arpl
sbb
mov
mov
push
mov
dec
jns
push
lahf
jmp
or
add
out
dec
fistps
cmp
or
or
popa
jmp
cld
loope
lods
sub
pop
xchg
enter
push
jecxz
sbb
movsb
lret
loop
mov
add
lods
pop
and
ja
jno
idivl
lret
stc
xor
cltd
xchg
mov
sbb
inc
mov
mov
test
stc
add
out
in
aam
inc
daa
add
mov
sbb
fisubl
in
cmp
add
add
push
or
jecxz
add
sbb
add
cmp
mov
movsl
fcomps
jne
inc
add
movsl
sbb
push
xor
mov
and
test
inc
xor
sbb
insl
xor
sub
xchg
cmp
add
and
dec
fs
std
movsl
ljmp
mov
inc
and
xchg
ja
and
icebp
enter
and
in
mov
pushf
push
les
ja
xchg
or
stc
mov
and
nop
sarb
repz
xchg
pop
mov
dec
sbb
test
cwtl
inc
imul
push
pop
sahf
jne
loope
adc
stc
mov
mov
jae
in
dec
rcl
call
iret
daa
lret
xlat
aas
lds
mov
cmp
mov
int3
dec
mov
jg
or
xchg
lahf
inc
mov
cli
and
dec
lds
adc
jmp
inc
sbbb
add
inc
cmp
inc
aaa
mov
lea
scas
cmp
pop
daa
pop
mov
mov
out
dec
inc
pop
fldt
nop
sbb
lods
sbb
pop
mov
and
cmp
insl
inc
mov
ret
and
test
cltd
push
mov
xor
in
stc
gs
add
mov
xor
les
push
xlat
jbe
das
jmp
ss
and
jecxz
aad
movsl
sbbl
movlps
sub
adc
or
in
mov
mov
xor
imul
and
data16
cli
into
inc
and
xchg
jnp
aas
jmp
dec
cmpsl
pop
jmp
and
cmp
xchg
faddl
ss
push
jbe
mov
adc
shll
pop
imul
pop
sbb
jle
jno
cmpsb
inc
jg
std
sbb
das
jno
daa
push
aas
pop
mov
sti
movsl
and
push
stc
inc
xor
shll
push
in
mov
inc
inc
pusha
outsl
fs
xchg
jg
xor
push
mov
in
les
mov
aad
jbe
inc
inc
loopne
repnz
inc
js
out
jp
and
ret
jle
repnz
sti
and
push
xor
mov
lcall
jl
xor
dec
insl
fs
lcall
cmpsb
xchg
jbe
mov
adc
jmp
sub
add
jno
sbb
pusha
pop
je
jns
cmp
inc
cs
bound
push
popf
fwait
sbb
push
cmp
aaa
push
push
push
inc
push
adc
test
clc
shlb
cltd
frstor
ljmp
dec
es
mov
movsl
mov
mov
in
adc
cltd
sbb
jl
sub
jle
mov
mov
je
gs
lods
pop
or
push
inc
push
sbb
cmpsb
nop
inc
lret
inc
inc
mov
movsl
stos
mov
mov
inc
fsubs
push
into
fwait
daa
stos
push
sbbl
mov
inc
andl
js
divb
dec
inc
les
ljmp
lret
in
aas
inc
mov
cmpsl
xor
cmp
mov
cmpsl
inc
jmp
mov
inc
sti
or
jnp
lea
sbb
add
sti
sub
test
movsl
jg
shlb
pop
pop
push
outsl
push
sbb
stc
sarl
add
sub
fldl
in
pop
out
mov
mov
popf
ja,pn
sbb
hlt
pop
ja
dec
gs
clc
lret
xchg
cmp
push
gs
in
arpl
and
shll
sarb
aam
out
fcmovnb
jmp
mov
mov
insl
sti
and
stos
or
mov
cmpsb
stc
jmp
xor
jg
leave
sbb
test
mov
fdivl
xchg
in
jmp
aaa
aam
pushf
pop
jbe
cmp
pop
jmp
cmp
mov
and
loopne
cmp
mov
mov
mov
inc
popa
inc
adc
cmp
andl
mov
and
mov
gs
inc
pop
pop
xor
insl
inc
fsubs
sub
test
mov
loope
fstps
and
push
ss
xor
arpl
shrb
lcall
mov
mov
ret
ja
pop
and
std
movsl
repz
sbb
mov
cmc
or
xor
and
push
gs
lea
sbb
cmpsb
push
aas
mov
xchg
popf
pop
imul
cmp
mov
lahf
adc
mov
fs
lods
push
xchg
xchg
adc
inc
mov
cmp
add
jne
in
push
mov
and
mov
mov
les
pop
imul
sub
imul
repz
xor
out
movsb
xor
mov
daa
cs
xlat
jb
cld
dec
cli
pusha
sub
push
mov
mov
ljmp
orl
fsubrs
sub
daa
addr16
test
or
ret
push
mov
and
xor
cmp
movsl
insb
idivb
in
xor
mov
or
popf
jl
and
mov
inc
inc
sbb
fdiv
push
in
or
add
or
int
popa
inc
sbb
shlb
push
xchg
jns
std
movsl
in
dec
mov
in
call
ret
call
push
les
movsl
fs
xor
pop
adc
cld
pushf
inc
adc
inc
xchg
mov
and
ljmp
xchg
mov
scas
rcrb
push
sub
inc
dec
xlat
sbb
push
movsl
out
mov
push
ficomps
push
push
test
inc
xor
int3
and
or
fwait
loope
dec
popf
fs
insl
out
inc
mov
jnp
mov
aaa
stos
jae
fcmovnbe
inc
mov
imul
inc
pop
adc
imul
fistpl
adcb
jae
mov
sub
sbb
cmc
aam
or
cmc
xor
ret
pop
add
pop
shrl
and
pushf
xor
mov
lock
int3
xor
jne
mov
cmp
repz
push
loope
cli
insl
and
add
and
xchg
mov
mov
std
movsl
dec
repz
xor
clc
ljmp
test
mov
stc
insl
and
mov
dec
sbb
lds
mov
mov
mov
mov
jns
iret
ljmp
ss
ds
and
out
inc
add
sbb
ret
jecxz
add
add
xchg
leave
inc
cmpsl
push
mov
push
mov
dec
aas
adc
gs
xchg
xchg
jmp
popa
cmpsl
inc
sub
hlt
movsl
sub
add
push
xlat
push
lods
test
fnstcw
dec
call
loope
addl
push
lock
jno
push
movsb
push
fs
int3
push
out
jl
pop
fsubrp
push
and
pop
inc
cmp
push
rep
ret
xchg
inc
into
or
mov
movsl
test
xchg
mov
outsl
and
daa
push
jae
jns
xchg
adc
pop
in
outsl
sbb
adc
pop
sbb
pop
xchg
cmp
std
dec
movsl
sbb
mov
xor
cmpsb
sub
xor
pop
sbb
das
out
mov
inc
and
cmpsb
pop
mov
jbe
test
xchg
notb
push
popf
or
xor
movsl
addb
lds
into
mov
sub
int
ljmp
fwait
lret
cmp
mov
mov
sti
xor
push
repnz
dec
dec
lcall
or
ljmp
movsb
mov
leave
sub
push
mov
inc
cmpsl
sbb
imull
and
adc
fbstp
lds
gs
adc
movsb
out
enter
jnp
push
lods
adc
jle
mov
xor
sub
popa
fmul
out
inc
repnz
cwtl
cmp
or
sub
sub
daa
lret
sbb
repnz
nop
add
out
jecxz
addr16
out
es
daa
iret
fldenv
lds
leave
cmpb
dec
ror
pop
into
inc
and
insb
pop
and
inc
jae
xor
cmp
js
test
addr16
test
mov
fildl
ja
cmpsb
pop
test
test
lcall
popf
in
imul
out
jl
ret
adc
loope
cmpsb
lds
clc
shll
cmpsl
mov
cmpsb
jg
adc
inc
rcr
out
mov
es
sbb
dec
and
pop
xchg
or
addr16
clc
mov
cmpsb
push
icebp
inc
pushf
ffreep
fs
shll
add
jecxz
cld
inc
mov
xor
pop
add
mov
push
sbb
jb
mov
rcll
dec
clc
xor
inc
sbb
xchg
cmc
in
jge
cmpsl
mov
mov
jne
inc
mov
mov
aam
cmc
lock
adc
add
ja
xchg
fs
xor
and
out
xor
adc
xchg
xor
cmp
mov
aad
xchg
add
lods
addr16
cmc
cmpsb
push
add
clc
xchg
cmpsl
push
push
ds
and
mov
xabort
and
clc
aad
mov
xlat
inc
pushf
test
fnsave
jbe
push
and
repnz
xor
xchg
mov
cmpsl
mov
mov
and
inc
cmp
lds
pop
cmpsb
add
pushl
addr16
add
daa
inc
mov
cmpsl
insb
adc
jle
sbb
lods
in
aaa
movsb
and
and
shl
xor
cmpsb
gs
lahf
xchg
mov
push
hlt
or
ret
rolb
divl
xchg
mov
test
inc
idiv
jbe
loope
pop
outsb
mov
jb
dec
cmp
movsl
lahf
lret
cmp
jp
pop
add
lahf
les
xchg
gs
fdivrs
mov
mov
xor
cld
out
sbb
mov
pushf
mov
mov
push
ret
cmp
mov
sub
orl
stc
xor
repz
push
repnz
mov
jecxz
nop
lahf
pop
cmc
add
add
or
or
jb
jg
sbb
mov
imul
pushf
xchg
movsb
mov
mov
daa
add
cs
fsubl
mov
mov
push
sbb
mov
sbb
add
adc
fnstenv
addr16
pop
lock
or
mov
mov
pop
mov
adc
sbb
sarl
lods
jecxz
inc
mov
roll
ret
nop
aad
mov
push
lret
cmpsl
arpl
lret
test
movsl
out
xchg
shll
pop
test
or
insl
inc
in
pop
gs
cltd
pop
add
aad
cmpb
sbb
aas
and
cmp
rcrl
jg
loopne
jno
in
xor
pop
addb
dec
dec
inc
popa
mov
call
out
lret
inc
inc
cmpsl
cmp
mov
and
push
pop
daa
push
jmp
aaa
rolb
out
rep
cmp
xchg
jl
movsl
xchg
push
sbb
sbb
mov
jb
in
outsl
sbb
cltd
cmp
and
out
and
fdivrs
dec
mov
fistps
jbe
call
adc
cmp
pop
fwait
add
in
or
xor
xchg
loop
movsl
addb
add
push
xchg
movsb
jmp
mull
int
es
enter
push
aad
les
pusha
cs
mov
out
loopne
repz
js
jno
or
cli
fimuls
sbb
mov
cmp
test
lea
lahf
inc
jge
rcr
push
xor
or
jne
xchg
fstl
jmp
fwait
scas
mov
dec
mov
test
or
inc
sbb
aaa
into
push
loope
add
clc
cmp
inc
or
mov
int3
push
ds
inc
xchg
pop
fadds
out
lret
push
add
mov
out
cmp
mov
inc
lds
cmp
xor
sub
in
inc
mov
sti
dec
inc
fiadds
and
push
popf
xchg
mov
les
inc
mov
sub
loope
sub
popl
sbb
or
in
and
mov
dec
adc
mov
and
mov
dec
enter
push
lock
daa
and
fildll
push
push
jl
pop
lds
mov
mulb
xor
cs
int3
xchg
imul
lods
fstps
pop
mov
push
ds
adc
cmpsl
scas
push
dec
hlt
jmp
leave
mov
mov
sub
int3
es
sub
pop
std
mov
xor
inc
inc
scas
stos
jno
add
movsl
inc
rcll
xor
sbb
sbb
xchg
pusha
sbb
insb
add
mov
daa
pop
out
adc
sahf
xchg
xchg
cld
inc
loope
inc
scas
cmc
jno
or
xchg
int3
cli
les
lds
out
gs
xchg
mov
enter
sti
mov
call
movsl
test
or
inc
sbb
inc
test
jno
in
cld
rcll
push
insl
sbb
iret
push
push
ds
hlt
mov
cmp
fs
push
nop
add
cmp
ds
ds
scas
icebp
std
cmc
movsl
aaa
enter
xchg
shld
jl
test
movsl
mov
sbb
push
aaa
mov
mov
jmp
arpl
or
sbb
fisubrl
test
cmpsl
add
and
push
movsb
cmpsb
mov
adc
bound
jmp
push
mov
inc
mov
xor
pop
shrl
cmp
pop
lock
sti
cs
clc
cltd
xor
pop
int
mov
call
jmp
or
xor
cmpsb
iret
imul
aam
loope
fcmovnb
cmpsl
pop
xchg
ds
daa
sub
dec
xchg
inc
stc
test
push
push
loope
add
gs
sub
mov
pop
sbb
mov
jno
stos
xor
push
xor
aas
lahf
push
imul
ret
mov
dec
outsb
sahf
cmp
mov
pop
or
mov
scas
push
insl
inc
xchg
sub
xor
inc
xor
dec
add
cwtl
xchg
pop
inc
fisubrs
in
leave
mov
shlb
lods
dec
ss
push
push
into
lock
lahf
inc
std
decb
iret
popf
and
out
sub
mov
dec
pop
xchg
cmpsl
push
insb
test
or
sbb
add
mov
stos
nop
lcall
sbb
sub
cmp
cmp
mov
xor
bnd
aam
cld
int3
lods
je
sub
xchg
stos
jg
jge
xchg
adc
xor
cmp
xchg
enter
push
and
xchg
aaa
cld
mov
mov
dec
out
fmull
or
pop
std
lret
adc
push
sahf
call
lds
inc
adc
mov
mov
loop
pop
int3
icebp
les
ja
inc
or
xchg
push
mov
enter
scas
adc
imul
fsts
inc
or
mov
mov
xor
std
daa
xchg
dec
movsb
addl
stc
aam
jge
mov
movsl
pusha
sbb
movsl
call
aad
or
dec
and
fdivr
push
mov
ss
inc
call
xchg
xor
out
mov
lcall
adc
and
stos
jne
out
mov
mov
lds
jmp
dec
sub
fistpl
mov
ss
lret
add
outsl
je
pop
lea
mov
jmp
pop
daa
pushf
sbb
cwtl
or
pop
test
sti
inc
mov
jbe
and
call
movsl
mov
frstor
adc
cmp
hlt
and
and
jno
roll
pop
std
rclb
in
mov
jo
stc
or
add
cmc
outsl
movsl
call
add
pushf
cmp
sub
mov
xlat
pop
add
inc
xchg
dec
std
push
sbb
iret
mov
add
test
shr
mov
jbe
cmp
rclb
fs
call
adc
xchg
dec
mov
ret
jno
movl
cli
testl
aaa
movsl
push
sbb
jns
scas
push
add
inc
movsl
mov
in
pop
or
push
push
sub
mov
jb
pop
mov
mov
arpl
loop
test
mov
std
test
xor
ds
outsl
mov
inc
leave
and
inc
and
dec
aaa
xlat
mov
fisttps
adc
jb
xchg
dec
addb
push
mov
popf
mov
sbbl
xchg
inc
mov
xchg
jmp
and
lock
sbb
cld
sub
icebp
pop
fisttps
add
packsswb
iret
jg
in
je
xor
test
add
pop
push
lds
inc
icebp
loopne
xor
cli
popf
fs
rorl
xor
sbb
add
cmpsb
dec
movsl
sbb
adc
or
lock
or
cltd
cmpsb
mov
mov
in
mov
icebp
leave
pop
xchg
ficompl
popf
push
ret
pop
loope
lahf
jae
roll
lds
sub
push
cmp
lock
jae
jnp
jl
and
jmp
divl
mov
ss
and
scas
xchg
test
popf
xlat
fwait
les
add
neg
mov
int
lea
xchg
adc
stos
sbb
adcl
loop
nop
push
mov
mov
shlb
test
outsl
push
mov
and
inc
out
sbb
insl
cmp
sub
orl
imul
jp
cmp
sub
xchg
scas
lret
jecxz
pop
arpl
out
and
add
push
add
mov
cmpsb
xor
add
mov
in
mov
rcr
add
cmc
adc
add
sub
adc
add
stc
mov
in
orb
fidivs
and
cmc
addr16
mov
in
pop
test
gs
and
mov
add
adc
dec
es
jmp
xchg
inc
loope
ret
rolb
mov
cmp
add
cmc
add
pop
adc
cmpb
inc
mov
add
adc
ja
mov
daa
push
add
in
push
add
mov
adc
and
or
outsb
movsl
inc
xchg
add
and
push
jg
daa
aad
scas
fstl
aam
sarb
movsl
and
lret
daa
in
es
pop
pop
sti
xchg
testb
in
lahf
in
lret
xchg
cmpsl
in
adc
loope
and
lds
and
ret
cmpsl
add
in
ret
sub
add
divl
in
xchg
cwtl
inc
je
mov
or
and
inc
movsb
adc
xor
mov
xchg
mov
test
cmpsb
stc
add
cmpsl
and
push
sub
daa
inc
add
pop
pop
xlat
in
xchg
add
and
lahf
lds
inc
loopne
mov
out
lret
in
out
inc
out
pop
aas
gs
mov
pop
add
xor
lods
les
pusha
inc
roll
and
and
jl
add
xchg
ffreep
jle
and
jp
cmp
push
adc
scas
lds
repnz
xor
adc
mov
scas
pop
mov
mov
xlat
movsl
out
and
gs
shrb
sbb
adc
aad
and
imul
in
push
mov
andb
aam
int
or
fistps
adc
push
xchg
push
lret
mov
sbb
sbb
add
mov
hlt
pop
movl
adc
cmp
cmp
insb
daa
call
mov
and
fmuls
out
mov
pop
mov
lock
aad
gs
sbb
out
pop
mov
adc
test
mov
dec
mov
int3
lock
xor
test
mov
aas
in
inc
lods
xor
mov
xchg
mov
adc
xor
sub
lods
jb
lret
pop
push
cmpsl
jnp
inc
mov
xor
inc
test
int3
icebp
mov
sub
std
fiadds
movsl
pop
lahf
adc
pop
cmpsb
adc
js
sub
daa
cmp
repnz
mov
jle
sbb
mov
inc
les
loop
int
xor
loop
imul
push
mov
mov
scas
mov
dec
out
das
mov
bound
push
xor
movsl
mov
outsl
and
cmpsb
int
popf
mov
data16
inc
pusha
xchg
mov
dec
scas
mov
leave
xor
cmp
sub
inc
mov
cmp
les
lea
jbe
movsl
jecxz
push
ss
hlt
cmp
sub
out
sub
mov
xor
sti
hlt
ljmp
hlt
add
inc
test
mov
jbe
test
les
push
jl
cs
add
mov
outsb
pop
cmp
push
jmp
xor
lods
jge
mov
inc
pop
imul
int
xlat
sar
mov
mov
stos
mov
jno
scas
push
xchg
mov
mov
neg
push
push
cwtl
mov
mov
mov
xchg
pop
xor
sbbb
lods
jae
adcl
push
jno
mov
js
repnz
movsl
pop
cmp
lds
or
xchg
sbb
addr16
cmp
incb
repz
pop
lds
stc
jae
xor
hlt
and
push
dec
xchg
test
inc
int3
lahf
sub
dec
xor
mov
jae
cmp
cmpsl
mov
jge
pop
inc
ds
repz
xchg
jle
loop
cwtl
adcb
dec
js
mov
adc
call
outsl
test
ljmp
add
push
mov
push
xchg
push
and
insl
test
dec
pop
xlat
sbb
pop
das
cmpsl
inc
jb
clc
iret
inc
push
shl
mov
jmp
or
jno
sub
loop
mov
mov
jns
sbb
cmp
popa
stos
std
and
pop
out
mov
aam
jno
push
cmp
clc
ds
movsl
sbb
mov
out
xchg
aaa
rclb
xor
iret
subb
inc
mov
sub
lea
pop
sub
movsl
das
bound
gs
sub
dec
cltd
sbb
sub
pop
mov
push
test
lret
loopne
inc
inc
das
out
xor
in
and
cmpsl
jno
cmpsb
dec
out
mov
or
sub
cmpsl
mov
enter
cmp
nop
inc
cld
mov
popa
pop
es
inc
stos
imulb
jmp
mov
loope
movsb
ds
adc
mov
dec
mov
inc
mov
push
xor
push
or
pop
in
leave
popa
ljmp
xor
inc
inc
insl
sar
adc
add
sub
shrl
mov
add
data16
nop
mov
inc
and
test
xchg
jmp
aaa
pop
rcll
sbb
pushf
sbb
pop
push
nop
and
clc
popa
mov
ud1
sbb
add
cmp
int
inc
imul
mov
fbstp
cmp
dec
pop
jmp
dec
cmpsb
adc
icebp
test
pop
lahf
test
sub
cmp
xor
xor
inc
dec
test
inc
push
mov
vmovapd
loope
cmp
leave
aas
inc
daa
lock
pop
mov
lcall
mov
xlat
mov
scas
filds
popf
jne
mov
insl
jno
lods
popa
das
dec
mov
add
xor
xchg
pop
repnz
adc
aam
xor
or
sar
mov
xchg
decl
or
pushf
ljmp
call
inc
push
lcall
pushl
dec
mov
dec
lds
testl
mov
mov
lds
std
movsl
scas
and
daa
ljmp
hlt
lret
ss
imul
rolb
outsl
jle
call
jg
push
dec
and
loop
xchg
stc
mov
cltd
mov
xchg
and
les
sbb
inc
test
imul
in
test
lea
in
dec
xchg
mov
imul
and
xor
mov
mov
es
lds
popl
add
jae
lods
mov
clc
sub
repz
and
mov
lahf
daa
test
in
jmp
bound
jp
sbb
xor
push
sti
add
jmp
fnstenv
xchg
add
popa
cli
sbb
scas
fbstp
jb
movsl
je
lods
pusha
inc
adc
mov
push
repnz
shll
stos
fldenv
decb
mov
les
inc
popa
pushl
and
sbbl
shrb
sarb
or
fs
nop
daa
push
lock
xor
push
adc
jns
fcomip
mov
mov
xorl
cmp
pop
aas
loop
ds
jns
cltd
ds
lcall
add
sub
les
fcomp
daa
gs
xchg
dec
mov
mov
ret
mov
pop
sbbb
popa
mov
adc
push
mov
adc
push
mov
jle
fnsave
sub
enter
inc
and
jno
or
xchg
adc
sbb
pop
inc
inc
sbb
lret
int3
mov
out
mov
cli
jecxz
fxch
mov
or
jp
pop
addr16
rcrl
popa
xor
outsl
xchg
xor
sahf
test
sbb
inc
fsubrp
fs
outsl
cmp
sub
add
aas
jge
loop
mov
aaa
xchg
sti
add
and
dec
dec
mov
xor
popa
aas
mov
xchg
addl
mov
outsb
jnp
std
pop
rorl
mov
dec
and
movsl
insb
sub
sbb
lcall
jge
in
test
cmp
jnp
scas
lock
movsl
clc
ss
inc
cmpsl
jg
sbb
mov
fs
gs
cld
pop
jno
add
inc
mov
iret
fs
or
lods
mov
aad
cmp
lock
repz
outsb
sub
xchg
xlat
shlb
mov
mov
sbb
push
test
mov
popf
repnz
in
push
cmp
mov
sbb
push
add
xchg
or
rcl
out
dec
mov
aad
mov
gs
loope
insb
lret
jmp
push
es
xchg
and
jbe
push
notb
aaa
fimuls
inc
out
adc
test
sbb
lds
out
cmp
and
push
add
fimuls
jno
mov
jno
mov
push
inc
cmpsl
sbb
and
cmp
mov
mov
and
cmp
cmpsl
data16
popa
nop
mov
outsb
pop
push
daa
pop
or
jge
insl
out
loop,pn
xlat
or
inc
jmp
xchg
repnz
jle
mov
stos
push
add
mov
mov
mov
imul
mov
mov
repz
lods
cmp
sub
mov
dec
and
adc
callw
imul
jo
fdivrl
rclb
lds
add
adc
or
ss
nop
dec
inc
mov
inc
xchg
jb
xor
mov
and
push
adc
jb
push
ja
adc
outsb
cmp
and
mov
popf
fisttps
lret
push
mov
add
fildl
sub
dec
cwtl
into
aaa
repz
xor
clc
scas
xor
mov
mov
dec
lret
pop
ja
cmp
sbb
cmc
rolb
loopne
pop
sub
cmp
ret
mov
in
sbb
xchg
daa
icebp
xchg
dec
and
mov
add
je
mov
or
sbb
mov
rorb
fwait
fwait
pop
mov
mov
dec
mov
cmp
shll
sub
cmpsb
pop
shll
lahf
xchg
call
das
adc
push
xor
add
hlt
outsl
mov
adc
sbb
xchg
fnstenv
mov
push
jp
mov
mov
test
imul
push
sbb
jle
push
add
dec
sbb
fdivl
add
sbb
mov
and
scas
jp
cli
push
orb
or
ret
je
lock
pushf
push
adc
push
inc
or
cmpb
stos
cmp
and
jno
or
in
std
pusha
fldt
sti
cmpsl
add
daa
pop
std
mov
sbb
mov
andb
ffreep
and
push
adc
dec
sub
rcrl
cld
mov
xor
pop
sbb
das
cmpsl
push
imul
inc
and
sbb
cmpsl
ret
or
stc
aas
cmp
sti
sub
imul
pop
mov
imul
pop
xchg
xor
paddb
mov
frstor
mov
ss
adc
int3
add
lods
mov
add
jmp
lds
push
dec
jne
std
sbb
adc
dec
test
add
loopne
ljmp
inc
and
leave
movsb
rolb
xchg
mov
out
cmpsb
cltd
add
aad
cld
fcomps
into
inc
adc
or
call
xor
add
in
sbb
dec
je
mov
dec
jns
stc
mov
aaa
mov
loop
movsl
ss
nop
das
xlat
mov
mov
stos
dec
jns
inc
fiaddl
test
mov
cmp
or
movsb
or
mov
jns
fwait
push
xchg
es
inc
mov
pop
fisubs
mov
in
or
pushf
mov
lcall
addb
roll
and
adc
lahf
and
lds
inc
add
dec
test
std
jmp
sbb
pop
pop
cmp
xor
mov
cmpsb
test
sub
or
xchg
xor
jmp
inc
fisubs
movsl
imul
clc
leave
adc
aaa
pop
dec
xchg
xor
call
cmp
inc
or
dec
cmpsl
imul
sbb
jmp
stos
movsl
ds
xchg
cmc
stos
lahf
scas
cld
int
loope
insl
dec
push
pushf
xchg
xchg
daa
cwtl
jle
mov
cltd
mov
inc
andb
jbe
stos
hlt
mov
scas
outsb
test
insl
inc
sbb
and
sub
add
test
xor
rolb
push
jmp
mov
insl
lret
fcoml
push
sbb
push
xchg
rclb
out
jmp
jl
jne
lahf
or
neg
add
cmc
addl
mov
push
add
ret
fisttps
sbbb
repnz
inc
lret
clc
mov
sbb
lret
or
jmp
enter
bound
inc
pop
dec
xor
das
mov
mov
cmp
movsl
jl
sub
inc
ss
push
popa
insl
add
push
and
ret
xor
or
xor
cli
lcall
enter
imull
je
popf
pusha
jecxz
dec
test
faddl
sbb
in
dec
jmp
pop
out
jo
movb
imul
xor
movsl
xchg
stos
dec
stos
mov
xchg
jno
arpl
cmp
lahf
cltd
push
inc
push
jno
aaa
imul
in
mov
iret
rorb
inc
ja
sbb
jno
xchg
insl
inc
sbb
pop
xor
daa
bound
xchg
shrb
lock
cltd
mov
ret
xchg
jns
in
clc
push
lock
das
push
scas
cmp
or
mov
sti
popf
shrb
pop
movsl
loope
popf
adc
aad
movsl
scas
cltd
mov
push
cmp
pop
xor
push
imul
sub
inc
mov
and
gs
push
in
out
mov
test
cmp
xchg
cltd
adc
cmp
adc
aaa
xchg
mov
jecxz
add
adc
call
es
inc
push
mov
lret
es
inc
push
dec
push
cwtl
int3
daa
dec
xlat
jg
jmp
mov
cmp
xor
lods
out
and
push
push
inc
lds
and
sub
add
lods
daa
fsub
xor
xchg
aad
or
adc
jmp
dec
xor
repz
sbb
jo
inc
lahf
aam
mov
pop
inc
pop
cmp
lock
pop
cmpsb
dec
or
sbb
lds
ss
cmpsl
push
xchg
aam
les
movsl
add
xchg
mov
mov
aad
cmp
andb
xor
movsl
and
sbb
std
iret
gs
cmp
mov
inc
call
pop
cmpsl
or
dec
pusha
cltd
cmp
popf
das
pop
jns
adc
push
fbstp
sbb
scas
xchg
inc
test
ror
xor
stos
xchg
sbb
jb
fisttpl
lock
jle
movsb
lds
hlt
push
cmpsl
pop
stc
fldl
sub
push
xchg
outsl
xor
mov
cltd
ljmp
sub
or
cmp
hlt
divl
jno
and
push
sub
push
mov
aaa
jb
jno
addr16
call
xorb
lds
push
pop
repnz
mov
cmp
jmp
aaa
jp
pop
sbb
and
outsl
push
in
sbb
xchg
sub
xor
inc
aaa
add
dec
cmpsl
leave
aad
in
stos
stos
and
dec
push
and
jae
xchg
fs
lods
loope
out
ds
hlt
and
and
pop
pop
or
ret
xlat
dec
andl
fiaddl
sbb
ret
mov
popa
xor
mov
xor
add
cltd
or
mov
push
lea
jl
cmp
xchg
add
int3
sbb
push
pop
mov
std
jmp
pop
call
jg
adcl
sbb
repz
mov
cmpsl
mov
xchg
mov
lahf
add
stc
push
sbb
test
lock
ret
cmpsl
mov
dec
ficoml
cltd
fsubs
xlat
int3
jns
mov
or
cmp
insl
out
gs
bound
jb
sub
lret
incb
je
mov
decl
cmp
sti
test
pusha
iret
lcall
mov
nop
imul
stos
add
ljmp
into
inc
popa
dec
cwtd
movsl
imul
push
in
and
jecxz
cmpsl
inc
add
and
xor
dec
loope
jge
or
cli
cltd
or
xlat
xchg
aam
hlt
lret
in
inc
inc
cmp
fldl
je
push
lea
jge
sub
shrl
inc
xchg
cmp
push
mov
dec
sbb
push
jle
add
cmp
jmp
test
xchg
or
lea
inc
mov
fwait
jae,pt
mov
mov
insl
xor
add
lds
imul
lods
loopne
xchg
mov
jg
nop
mov
lods
push
lea
nop
fbstp
add
aaa
enter
mov
fbld
outsb
xchg
mov
push
repnz
add
inc
adc
add
xchg
or
ljmp
cli
imul
mov
xor
xchg
decl
mov
and
xor
dec
sar
cmp
push
jb
pop
into
inc
or
daa
mov
cmc
es
enter
mov
sub
fmuls
jle
hlt
push
sti
jno
add
mul
sar
push
mov
sbbb
cli
outsb
out
xor
push
jge
push
cmp
jl
add
pop
inc
call
iret
pop
jb
negb
aaa
jno
mov
mov
in
pusha
pop
mov
fndisi(8087
sbbl
xor
les
inc
mov
nop
sbb
repz
imul
sbb
ret
jb
pop
fsubs
and
decb
les
sti
sub
dec
iret
push
iret
push
inc
cmc
adc
rolb
fcoml
cmp
ds
sub
pop
repz
dec
adc
out
insl
adc
or
lods
decb
or
mov
mov
imul
mov
nop
into
add
cmpsl
insb
mov
jle
test
cmpsb
ror
in
fs
mov
aad
jmp
xchg
les
sub
mov
pop
movsl
sbb
xchg
adc
in
lods
dec
jp
and
jle
jns
sub
mov
inc
and
fsub
in
andb
std
jae
cld
push
xor
fsubrl
loopne
das
mov
dec
aaa
sbb
pop
mov
call
pop
push
xchg
and
movsl
xchg
lret
addl
jmp
adc
xchg
sbb
int3
and
repz
dec
mov
fdivrl
sub
jge
sub
inc
push
xor
cli
push
cwtl
inc
insl
and
and
and
pop
call
and
cmpsl
fists
push
imul
in
or
inc
and
push
add
sbbl
mov
cmpsl
bound
out
fistpll
rolb
add
xchg
mov
fwait
iret
sahf
mov
push
test
cwtl
popa
cmp
scas
and
cld
sbb
repnz
dec
stc
xchg
mov
mov
xchg
jae
cmc
sti
int3
and
push
decb
or
push
jno
sti
cld
push
cmp
jle
out
loope,pn
or
add
or
inc
jno
movsl
mov
repnz
movsb
mov
jle
pop
std
aam
shll
mov
add
iret
or
sub
xor
cmpsl
sti
cmp
sarl
dec
pop
loope
loop
cli
mov
test
cmp
add
add
adcl
jecxz
sbbl
sbb
jne
inc
and
xchg
es
xchg
inc
or
mov
cwtl
gs
icebp
pushf
xchg
jae
stos
mov
mov
inc
push
jne
mov
pop
rcll
mov
fisttpll
enter
xchg
rorb
outsl
cmp
adc
ret
inc
and
cmp
mov
fstl
stc
inc
fmulp
xchg
daa
inc
jle
mov
fsubrl
xchg
sub
ret
push
repnz
sbb
mov
mov
int
lret
clc
cmpsl
sbb
fsubrl
mov
sahf
jp
stc
in
mov
mov
mov
xchg
dec
nop
in
fsubrp
fadd
loopne
pop
jnp
call
iret
pop
cmp
stos
scas
aam
addr16
inc
push
in
imulb
cmp
call
jae
mov
pop
adc
loope
and
xchg
pusha
xor
and
xor
mov
adc
dec
outsl
lock
inc
incb
cmpsl
sub
push
dec
insl
mov
in
fsubr
xchg
fsts
and
fs
mov
add
test
loopne
cmp
les
sbb
push
ljmp
sub
adc
or
mov
dec
arpl
lods
mov
ds
cmp
popa
mov
incl
clc
mov
dec
repz
std
std
xor
es
inc
xor
or
int3
xor
pop
adc
add
xor
inc
xor
push
xchg
pop
and
in
dec
stc
pop
mov
mov
idiv
fnsave
cmp
dec
ficomps
cmp
cli
jge
jnp
add
out
aad
add
ret
inc
dec
jno
daa
out
mov
jecxz
xchg
dec
inc
cld
mov
orl
jno
mov
movsl
lds
xchg
fiaddl
test
jle
pop
icebp
repnz
mov
aaa
sub
pop
xor
cli
movsl
aas
cmp
or
pop
cmp
aaa
sub
cmp
add
mov
add
test
xchg
pop
lahf
mov
xor
sbb
arpl
inc
pop
jle
je
sub
pop
mov
mov
add
add
shll
sub
adc
movsb
gs
out
scas
xor
lahf
stos
dec
sahf
mov
movl
jb
sub
ljmp
dec
add
dec
pop
mov
sti
in
negl
mov
adc
test
or
leave
hlt
mov
push
ljmp
popa
dec
dec
inc
inc
cmpsl
mov
mov
mov
pop
sti
lods
out
push
jae
xor
adc
inc
imul
sti
jge
sbbb
jae
xor
imul
fdivrs
loop
cwtl
cmpsl
jecxz
scas
sbb
popf
push
mov
jge
mov
filds
dec
dec
dec
cmp
mov
pop
fstps
pop
sbb
lods
sbb
adc
fiadds
push
repz
mov
loopne
sub
add
mov
pop
jbe
mov
pop
xchg
mov
and
cmpsl
test
int3
inc
daa
scas
out
jne
pop
mov
out
nop
dec
and
jns
cmp
mov
adc
movb
repnz
mov
pop
popf
sti
pop
xchg
mov
movsb
inc
inc
push
cs
gs
sbb
std
les
dec
adc
xor
pop
inc
inc
lds
cmp
and
mov
jno
dec
and
xor
lea
dec
ret
mov
inc
cs
cmp
mov
aam
pop
rorb
pop
popa
repz
and
push
mov
dec
sub
push
push
xor
cmpsl
ret
add
aam
jl
adc
sahf
cmp
das
add
sar
mov
or
cmp
mov
cld
sub
mov
std
xchg
sbb
test
adc
lds
adc
sub
xor
mov
nop
mov
test
and
adc
lds
mov
pop
ret
xor
dec
add
xchg
push
aad
adc
xor
add
push
xor
sub
test
xlat
hlt
mov
push
lea
jno
mov
sbb
push
ret
push
pushf
fcompl
sahf
or
in
les
add
xlat
xor
mov
sbb
pushf
pop
push
stos
sbb
movsb
aas
mov
adc
adc
test
dec
insb
jmp
mov
stos
sbb
xchg
cwtl
push
test
dec
daa
lret
daa
ror
jge
movsl
mov
jb
jo
inc
aam
or
cmpsl
sbb
aad
std
cltd
inc
sub
cmp
adc
inc
inc
out
call
add
and
ljmp
cli
push
sar
out
incl
push
mov
sbb
inc
out
loope
pushf
pop
mov
aad
insl
push
outsl
cmpsb
fldl
or
repnz
inc
test
push
jmp
mov
inc
movsb
mov
and
popl
inc
sbb
cmp
sbb
inc
add
andb
aaa
and
sbbl
daa
scas
pop
adc
mov
lcall
aad
cmpsb
cmc
cmpsl
pop
and
mov
gs
mov
cmp
cmp
data16
sub
popa
gs
and
xchg
mov
xor
mov
pushf
pop
inc
scas
jbe
clc
xor
mov
pop
jecxz
popa
cmp
rorb
push
movsl
push
push
mov
lock
repz
add
jecxz
repnz
dec
fdivr
xor
sub
dec
fnstsw
push
faddl
mov
jge
xchg
repnz
imul
add
jl
shrl
xchg
push
mov
mov
shlb
shlb
jb
lret
in
push
sbb
and
or
or
out
cmc
sbb
cli
mov
cli
cmpl
out
lcall
push
inc
out
lock
movsl
jb
cli
mov
xor
cmc
jb
imul
fwait
jmp
cmpsl
jno
mov
andb
xchg
dec
idivl
ss
in
push
fs
ss
mov
mov
pop
ja
adc
add
dec
adc
jle
push
mov
int
pop
cmpsl
xor
fadds
pop
cli
inc
aad
cmpsb
popa
les
addb
xor
test
lods
out
addb
push
push
out
or
rclb
adc
imul
push
jmp
rorl
ljmp
jle
sbb
loop
cld
mov
repz
cmpsb
jno
dec
loopne
cmp
popa
cmp
xchg
and
cmp
cmpsl
aaa
xchg
jns
inc
insb
popa
pop
test
sub
pop
push
ljmp
fnstsw
mov
idivl
dec
les
lock
test
cltd
sub
cmpsl
and
test
dec
push
xor
stc
mov
add
sub
cmp
dec
push
lcall
jp
shrb
cmp
xchg
in
push
adc
jle
inc
push
js
inc
movsl
out
aaa
insl
jno
cli
loop
xchg
sbb
jb
negb
ds
and
pop
mov
mov
pop
jl
add
mov
flds
popa
inc
je
addb
inc
orl
xor
movsl
and
sub
adc
sahf
loope
fucomip
pushf
jno
insl
inc
outsl
into
fnsave
push
mov
repz
loop
imul
sbb
sub
nop
dec
inc
cld
adc
jmp
les
test
mov
call
sub
gs
push
sub
dec
sub
imul
mov
fiadds
cwtl
adc
jp
or
fidivl
inc
adc
mov
cltd
fnstcw
rclb
add
mov
sbb
test
xchg
and
cltd
push
mov
int3
xchg
fldl
outsl
and
inc
cmc
and
mov
mov
xchg
mov
sbb
fdivl
mov
mov
xchg
mov
inc
std
pop
int3
insb
jb
in
push
addr16
adc
ss
fnstenv
mov
dec
adc
xlat
cmpsl
sbb
ret
scas
cmp
sub
loop
jecxz
imul
lds
pop
test
in
es
cs
push
push
push
ret
xlat
cs
or
push
mov
jno
jg
nop
mov
imul
inc
jle
adc
push
adc
mov
in
dec
push
mov
cmpsl
add
and
mov
inc
arpl
into
push
movsl
push
cmp
lret
imul
std
fld1
push
lret
or
sbb
cwtl
mov
push
lcall
popa
out
scas
push
dec
mov
cmp
add
fidivl
test
inc
add
insl
sub
gs
mov
enter
gs
or
mov
imul
cmp
sbb
into
shrb
mov
inc
ds
dec
push
test
cmp
addr16
nop
lds
imul
test
in
movsl
dec
pop
pop
imulb
mov
cwtl
repz
push
cmp
movsl
pop
mov
test
add
and
cmpsl
pop
push
data16
sti
fldl
mov
sahf
hlt
icebp
cmp
push
in
lods
xchg
add
and
ja
xor
lcall
movsb
inc
or
jg
jmp
push
mov
shlb
aaa
ret
jae
xchg
pextrw
data16
sbb
inc
mov
shlb
and
jbe
gs
and
sbb
loope
xor
push
lea
mov
cld
les
dec
rolb
push
mov
or
jno
cmp
or
cld
ljmp
dec
add
cld
adc
and
into
ljmp
aas
test
testb
aaa
fidivl
lea
fcoms
movsl
push
xor
xlat
cmpsb
int
jmp
mov
out
std
and
or
jle
cld
movsl
arpl
test
jmp
out
xchg
movsl
repz
add
shrl
and
inc
les
mulb
pop
lods
je
mov
sub
fsts
movsl
jo
outsl
aaa
sbb
or
enter
aam
sbb
pop
inc
push
push
sbb
xchg
addb
call
sbb
int
and
inc
mov
sbb
cmc
outsb
sbb
pop
mov
inc
xor
arpl
xor
or
mov
dec
cld
faddp
out
decb
inc
mov
imul
dec
jnp
mov
imul
dec
or
jge
scas
mov
and
repnz
jno
movsb
adc
js
lock
lds
negb
sti
inc
sub
inc
xor
push
iret
xchg
rcl
and
inc
out
xlat
lock
sbb
ds
cwtl
cmpsl
rcrb
stos
shl
lock
add
pop
jle
sub
mov
rcrb
imul
scas
add
arpl
hlt
xchg
aaa
xor
mov
jnp
dec
adc
inc
mov
shll
inc
push
xchg
sbb
insb
and
mov
ljmp
push
out
mov
push
sbb
sub
mov
jno
push
roll
sbb
xor
cld
cmp
push
jge
jno
pusha
in
cmp
mov
adc
dec
dec
out
add
call
xchg
inc
movsl
mov
and
test
ret
xchg
inc
cltd
and
aaa
stc
xchg
and
pushl
data16
xchg
mov
call
xor
dec
ret
cs
ds
pusha
pop
stc
sbb
enter
jecxz
mov
aas
mov
stc
stos
xlat
inc
sub
inc
fimuls
in
stos
mov
mov
adc
les
imul
orl
rcrl
mov
pushf
jle
xor
xlat
hlt
hlt
mov
pop
pop
adc
mov
movsl
dec
in
hlt
popa
xlat
xchg
popf
sub
in
xor
pop
lcall
cmp
inc
out
aam
out
and
test
into
inc
scas
or
or
ss
fs
lods
cmp
fldcw
scas
mov
lods
mov
dec
inc
addr16
roll
push
dec
or
cli
lcall
fsubl
and
andb
inc
ljmp
shll
ret
mov
sub
jl
adc
push
sbb
lret
jne
cmpsl
sbb
call
bswap
pop
aad
idiv
sub
dec
in
jmp
insb
sbb
sub
adc
xor
mov
daa
mov
aam
or
xlat
mov
jb
or
cmp
xchg
mov
sub
dec
push
push
add
pop
fcmovne
in
xor
pop
jge
cld
in
in
inc
xor
sbb
arpl
xor
test
jle
inc
repnz
test
popa
ljmp
pop
sti
sub
fsubl
sbb
imul
add
mov
push
imul
push
mov
popa
pusha
call
outsl
mov
or
decb
cmp
mov
xor
mov
enter
dec
sbb
xchg
lret
cmpsl
sbb
lea
aaa
and
ret
into
faddl
mov
sbb
inc
jne
into
mov
enter
push
pop
inc
test
test
icebp
push
cmpsl
hlt
mov
sbb
hlt
scas
movsl
imul
sbb
stc
mov
mov
sub
inc
pop
aad
pop
sbb
popa
arpl
mov
mov
imul
or
xor
xchg
sbb
mov
call
dec
jg
ret
mov
insl
add
jnp
or
movsl
int
aad
lods
loope
repnz
and
test
mov
push
pop
call
adc
and
adc
xor
cmp
bound
push
arpl
sbb
lods
das
enter
in
or
out
shll
imul
mov
ljmp
mov
add
imul
cmp
mov
dec
fimull
sbb
xor
into
inc
cli
jmp
xor
fwait
push
push
lock
cmc
sub
inc
push
adc
dec
mov
sbb
aas
and
jae
jmp
dec
out
jns
add
dec
aas
add
stc
scas
inc
out
pop
jg
rcll
push
sti
jp
xor
scas
rcl
ret
sbb
cmp
test
jle
push
test
add
dec
and
std
mov
inc
fs
cmp
movsl
sbb
aaa
mov
sbb
cmpb
inc
outsl
scas
loop
dec
xchg
sub
in
adc
not
stc
add
mov
mov
mov
pop
mov
movsl
ds
or
enter
movsl
mov
sbb
jecxz
hlt
dec
out
arpl
das
and
cmc
push
jp
xor
mov
mov
sub
push
xlat
push
pop
inc
jmp
ds
test
aaa
subl
gs
idivb
data16
divl
insb
cs
cmp
into
xchg
cmp
dec
inc
unpcklps
push
movsb
fbstp
ret
enter
fsubrp
xchg
push
xbegin
adc
xchg
jb
dec
mov
sbb
ret
int3
add
es
mov
cmpb
cmpsl
shlb
subb
or
mov
cmc
mov
mov
jp
movsb
icebp
fdivl
addl
ds
pop
push
adc
pushf
jb
push
lahf
or
ja
pop
dec
in
and
imul
or
scas
repz
call
aaa
stos
mov
clc
ds
mov
movsb
push
cmpsl
sbb
adc
inc
ret
leave
adc
jmp
stos
ret
mov
pop
or
rorl
dec
inc
les
xchg
xor
push
stos
and
repnz
incb
daa
inc
popf
xchg
push
or
dec
and
int
int3
jno
cmc
fs
gs
mov
pop
and
bound
sub
mov
mov
js
test
xchg
les
test
repnz
jae
rcr
clc
lds
cmp
enter
mov
xchg
and
mov
or
cmp
and
test
sbb
jle
testb
lret
ljmp
movsl
mov
or
in
paddsw
mov
inc
cmpsl
insl
ds
sub
or
xlat
mov
sub
movsl
cmp
hlt
movsb
ljmp
fwait
mov
push
dec
popa
clc
fisttps
mov
jnp
and
in
adcl
sub
stc
push
mov
xchg
adc
popa
jmp
je
xor
mov
dec
or
adc
push
in
lock
test
insl
leave
clc
xchg
xchg
sub
jbe
and
add
cmp
push
data16
test
int3
cmp
jge
test
inc
jl
jmp
dec
test
or
cmpsl
add
test
dec
dec
push
shl
inc
ja
jge
lahf
pop
inc
aad
movsl
sub
jecxz
mov
add
lret
push
ljmp
cs
dec
mov
or
mov
sub
push
dec
daa
sub
add
outsb
lea
adc
ljmp
dec
xor
sbb
dec
fwait
push
arpl
dec
sbb
imul
std
and
push
in
sbb
int3
lock
dec
inc
aad
mov
add
add
xor
mov
test
mov
adcb
into
fdivl
je
xchg
xor
push
shll
cmc
sbb
in
adc
pop
filds
pop
inc
inc
jp
add
out
sub
cwtl
push
je
shl
and
add
loope
insl
cmp
mov
and
mov
mov
adc
pushl
aas
out
push
lcall
insb
inc
jg
add
xor
in
mov
mov
xchg
pop
mov
fs
les
lods
les
daa
fsts
inc
mov
test
lock
idiv
cmpsb
add
das
stc
add
and
pop
pop
mov
mov
adc
inc
dec
insb
sti
test
pop
jo
fs
jp
add
mov
add
les
movsl
std
cmpsl
cmpsb
inc
cmpsl
out
cmp
inc
es
adc
in
add
fs
outsl
das
xor
xchg
das
aaa
aas
xlat
jle
xor
aas
out
inc
mov
and
in
cmpsb
aam
in
test
mov
add
aaa
hlt
or
and
lds
in
inc
add
lock
add
cmp
lahf
out
and
loopne
and
adc
test
gs
in
pop
out
fbld
pop
daa
je
jg
idivl
ss
jne
and
mov
aaa
xor
lock
or
add
loopne
xor
add
in
fbld
aas
stos
xchg
jbe
push
inc
inc
xchg
mov
out
adc
and
push
ss
add
ret
dec
push
in
movsl
push
xor
adc
rorb
shrb
pushf
jg
dec
ds
or
fs
sbb
dec
ljmp
mov
cli
sub
sub
les
jle
aam
clc
mov
xchg
mov
ret
cmc
mov
lds
stc
inc
mov
mov
jle
jle
push
outsb
jg
insl
sub
mov
jbe
daa
dec
aad
imul
addr16
imul
push
add
pop
shlb
jmp
out
movsl
aas
pop
lds
fchs
ret
xchg
inc
into
mov
ror
lcall
cwtl
dec
fwait
inc
cmpsl
or
mov
cltd
push
push
or
mov
fdivp
sti
mov
jno
pop
scas
negl
cli
jb
dec
dec
cmp
clc
std
inc
inc
push
sbb
ret
cmpsl
cmp
inc
mov
cmp
mov
movsl
xchg
fsubrs
mov
lods
adc
add
cmc
lret
pop
les
mov
sbb
and
mov
mov
mov
fistl
push
and
sbb
push
bound
into
sbb
int3
inc
popa
xlat
add
xchg
popl
shll
xchg
fmulp
pop
aas
aaa
sbb
push
in
fnstsw
addr16
nop
movsl
mov
xchg
jb
aam
push
mov
mov
movsl
popa
js
push
mov
mov
inc
popa
sub
imul
cwtl
mov
cmpl
add
loopne
jno
inc
inc
cs
cmpsl
je
test
negb
scas
je
addr16
gs
mov
push
into
out
cmp
adc
int
and
aam
repnz
xchg
mov
pop
int3
fstps
xchg
lahf
scas
bound
xchg
mov
cwtl
xchg
insl
daa
int3
pop
test
jmp
in
xlat
add
clc
mov
iret
les
xchg
push
xlat
xor
hlt
dec
out
and
mov
or
nop
mov
lock
ror
pop
lds
cmpsl
test
and
cmp
mov
jne
jne
inc
lock
xchg
mov
and
inc
mov
sub
push
adc
cld
pop
sub
test
jmp
gs
xchg
lcall
std
lock
push
mov
xor
aas
cmp
push
jmp
hlt
sbb
mov
mov
jmp
mov
insl
jne
push
push
pop
adc
les
mov
jmp
aam
xchg
movsl
sub
mov
adc
movsl
and
in
sub
rorl
lds
ja
lods
or
aas
adc
aas
scas
and
test
xlat
out
mov
xlat
xchg
add
mov
and
and
daa
ja
fisttpll
cmp
arpl
and
and
es
mov
sbb
fisubs
addr16
xor
lock
add
mov
fisubl
and
movb
sti
cld
sbb
pop
repnz
xor
sbb
idiv
mov
or
filds
pop
divl
ret
popa
pop
popa
fstps
jo
cmp
sub
pop
cmpsl
cmc
mov
cmp
pop
popa
xchg
nop
push
cmp
jp
sbb
inc
or
lods
and
jne
sbb
cmpsb
mov
in
les
mov
notb
test
aas
sbb
ljmp
pusha
lock
hlt
xor
pop
add
setnp
jle
stc
xor
jl
imul
nop
xlat
ljmp
jmp
sbb
sti
or
xchg
xor
mov
inc
imul
and
xchg
js
mov
pop
mov
adc
cmp
jns
cli
pop
jle
sbbl
cltd
rolb
cli
fisubl
sbb
dec
bound
sbb
fsts
sbb
cmpsl
lds
les
adc
jmp
pop
outsl
jecxz
cmpsb
mov
lahf
imull
lret
pop
push
mov
xlat
mov
add
cmp
mov
mov
es
cli
jnp
andb
add
into
rcll
stc
ds
push
ljmp
mov
loopne
pop
sbb
test
push
lock
jp
jg
lods
xchg
out
clc
xor
outsb
inc
dec
and
les
inc
cmpsl
fs
pop
mov
ja
push
xchg
and
popa
jno
mov
adc
inc
mov
sti
js
adc
imul
cmp
xlat
jg
in
jg
test
popf
push
fildl
mov
mov
xor
inc
fcmovbe
and
sarb
mov
mov
and
cmp
cmp
call
inc
shll
sub
cmp
js
rol
rorl
push
mov
and
cld
jno
add
aaa
fstpl
frstor
lds
rolb
push
sti
add
mov
inc
cs
bound
xchg
pop
xlat
inc
xchg
push
lods
add
xchg
lock
add
addr16
and
mov
vpmaxsw
jbe
mov
lds
or
and
jbe
daa
lods
hlt
in
fs
xor
and
shr
sub
inc
es
adc
popf
xchg
push
xchg
add
inc
fcoml
inc
out
jp
mov
and
jl
not
mov
dec
cmc
adc
xchg
outsl
cld
mov
cmpsl
les
add
inc
cld
push
dec
or
test
and
je
pop
push
div
cmp
and
ja
mov
test
push
pop
xchg
mov
sub
push
inc
daa
and
inc
jne
in
cmpsb
xor
mov
shll
divb
xchg
cmpsl
vmovups
lods
test
add
mov
pop
pop
test
sahf
test
movsb
testl
mov
mov
mov
pop
cmpsb
mov
daa
pushf
xchg
ds
inc
test
movsb
add
xchg
mov
xchg
xchg
sub
add
jg
icebp
and
push
jb
push
lds
pop
add
or
fs
mov
daa
and
xchg
addr16
add
divl
mov
push
ffreep
js
sub
xchg
inc
test
mov
inc
adc
jecxz
mov
push
add
and
sti
jne
push
cld
lret
jmp
pop
aas
mov
add
xchg
loop
daa
lahf
sti
and
push
push
jnp,pt
mov
movsl
cltd
mov
cmpsb
sbb
das
push
aas
pop
movsl
cwtl
out
test
nop
int3
mov
push
data16
aaa
movsl
repnz
std
push
out
les
loope
xchg
xor
les
std
sub
cmp
xchg
fdivrs
push
es
xlat
xlat
fisttpll
ret
dec
jb
sbb
dec
jne
nop
ds
push
mov
shrl
in
je
movsl
mov
xor
mov
adc
fidivrs
adc
in
dec
push
hlt
imul
cmpsl
ror
jl
insl
call
hlt
pop
outsb
add
stos
lahf
add
sbb
pop
and
sbb
adc
add
and
mov
movsl
imul
pushf
sub
mov
dec
or
aas
movsl
fsts
outsl
push
xor
dec
or
pop
imul
cli
push
test
sbb
ja
pop
lret
or
adc
pusha
xor
lds
jge
mov
cmpsb
or
cmp
and
sbb
xchg
clc
xchg
enter
add
dec
mov
sbb
testb
and
lock
mov
add
out
ret
in
es
cmp
out
insl
lret
cmpsl
stc
mov
push
add
jl
add
loope
mov
sbb
cmp
ss
and
and
sub
xor
les
int
jnp
push
mov
push
out
add
mov
js
shll
mov
push
dec
sbb
in
mov
movsl
pusha
push
mov
cmpsl
add
je
pop
fiadds
lods
shrl
add
adc
mov
xor
sub
fnstcw
les
and
or
or
xor
mov
pop
lds
push
test
je
jmp
lods
add
sbb
enter
ljmp
mov
xlat
inc
mov
pop
push
call
xlat
inc
pop
movsb
into
push
andb
ss
cmp
into
movsb
stc
xlat
adc
adc
pop
scas
jo
aad
dec
rolb
test
sbb
lea
enter
push
clc
mov
mov
inc
adc
adc
or
mov
popa
inc
int3
jp
cmp
jnp
aaa
mov
pushf
and
addr16
cmp
jno
sbb
outsb
daa
lods
jecxz
and
andl
cmp
test
imul
xchg
movsl
mov
mov
daa
dec
dec
sbb
mov
dec
insl
xchg
mov
inc
in
jecxz
xor
push
and
push
push
mov
cli
loop
out
pop
popf
xor
loop
push
mov
add
cmpsb
jnp
std
stos
ret
jp
in
sub
insb
lcall
scas
fcomi
insl
nop
mov
lds
xlat
xlat
add
jae
stc
push
sbb
push
imul
mov
adc
lods
and
jl
scas
xor
repnz
in
cmp
cmp
inc
test
shrb
ljmp
lss
xlat
pop
idiv
sub
inc
push
std
div
adc
lock
xchg
fisubl
ret
std
mov
scas
push
cs
enter
or
call
sbb
sahf
rcrb
inc
cmpsl
call
loop
daa
fimull
aaa
lret
add
cltd
inc
addr16
mov
add
outsl
out
mov
popa
jae
inc
movsb
push
test
imul
adc
icebp
sub
cmpsl
mov
inc
pop
shr
inc
add
or
out
xor
rcr
inc
jns
inc
ficoml
push
cld
adc
sbb
mov
pop
mov
cs
push
push
leave
lret
addr16
push
outsb
popa
inc
add
lret
fdivr
mov
loope
ljmp
cli
int3
inc
jge
fisubrs
fmull
shll
in
cld
xlat
adcl
or
sub
xor
rcrl
xchg
inc
ss
fdivl
cli
xchg
sub
inc
adc
pop
movsb
pop
jge
dec
push
inc
call
aam
ret
ds
inc
push
xlat
movsl
inc
push
dec
dec
dec
cmp
cli
xchg
cmp
insl
out
xor
push
pop
in
test
hlt
call
mov
pop
and
loop
or
xchg
jne
inc
into
jnp
fwait
cs
xlat
inc
sahf
and
sbb
jp
lahf
xor
dec
jle
stc
sarb
lcall
or
pop
ret
orb
jno
xchg
pop
sbb
xchg
dec
xor
std
imul
cmp
push
and
lret
pop
cmp
mov
adc
aaa
sti
add
pop
sub
lret
sbb
mov
in
mov
js
xor
add
dec
mov
and
push
sbb
fildll
and
push
int3
and
popa
repz
icebp
mov
or
aam
rolb
sbb
pop
pop
mov
cltd
testl
lret
pop
shll
inc
cltd
fsubrs
mov
jecxz
push
stc
movsl
adc
mov
arpl
out
int
xchg
adc
cmpsl
xor
cmpsb
mov
inc
sub
ds
xlat
lock
nop
mov
clc
in
push
stos
sbb
mov
sbb
dec
adc
orl
movsl
sbb
cmpsl
fisttpl
mov
repnz
hlt
loopne
aaa
or
xor
pushf
or
hlt
aas
add
popa
and
imul
push
sub
sbb
lods
mov
xchg
or
dec
sbb
jo
sar
adc
mov
push
jl
mov
arpl
lds
xor
fcmovbe
insl
cs
jno
das
ja
mov
inc
int3
or
xchg
call
mov
in
sbb
xchg
pop
jp
xor
sub
adc
fiadds
dec
mov
sbb
or
pop
cmpsl
fisubrs
ljmp
and
jno
aaa
fisubs
xor
jmp
sbb
mov
sub
dec
ficompl
inc
aad
jge
dec
and
pushf
test
je
aam
xor
pop
adc
arpl
and
and
incb
aaa
sbb
or
imul
xchg
inc
xchg
push
fwait
in
xor
mov
add
inc
aad
mov
jo
cmp
out
fcmovu
std
mov
cs
mov
dec
orl
cmp
inc
mov
pop
mulb
cwtl
mov
sub
inc
add
and
mov
fiaddl
aaa
cmp
jl,pt
mov
xchg
inc
gs
popf
push
in
insl
mov
mov
push
mov
movsl
popf
daa
push
add
nop
cmp
mov
cmpsl
push
bound
movsl
fmulp
lahf
mov
cmp
daa
cmc
mov
adc
push
sahf
rcr
movsb
ds
in
jmp
movsl
pushf
stos
pop
jle
addr16
je
jo
xor
stos
pop
popa
cmp
sub
xchg
push
dec
pop
es
inc
mov
jne
insl
incb
sbb
xor
push
mov
or
add
inc
lock
inc
cmp
or
popa
jno
push
hlt
movsl
stos
pop
pop
pushl
xor
daa
dec
test
aam
jbe
mov
jno
cwtl
cld
stc
inc
dec
dec
out
cld
ficoms
stc
cmpsb
sti
sti
daa
add
fdivs
scas
lea
movsl
in
mov
cs
mov
mov
fucomip
adc
dec
movsl
jnp
or
or
lock
inc
lods
stos
mov
mov
insl
notb
xchg
out
and
pop
dec
fsubl
xchg
dec
data16
jno
xor
mov
les
ss
test
xlat
mov
and
jne
inc
mov
cmp
addb
mov
cld
xor
push
add
into
sub
stos
pop
loop
lock
mov
pop
xor
sub
ds
sbb
daa
in
movsl
in
les
jmp
lcall
hlt
cmpsl
jo
test
pushf
daa
enter
or
jmp
repz
push
bound
xor
cmp
repz
cmp
xor
hlt
rcrl
mov
nop
adc
insb
orb
inc
cmp
dec
stc
les
negl
and
push
inc
dec
inc
popa
fs
pop
aaa
test
gs
mov
jl
sub
ds
sub
add
pop
test
inc
push
out
shl
xchg
mov
shl
adc
dec
cmp
add
imul
rol
or
stos
push
fnsave
imul
add
jl
cmc
mov
sub
rorl
xchg
inc
jmp
and
sub
lock
faddl
test
mov
mov
and
les
in
inc
out
dec
xchg
test
aas
sbb
movsl
jl
push
popf
inc
lock
dec
sub
in
mov
pop
test
cmp
js
outsb
jno
fs
adc
cli
push
pop
add
push
jnp
cmpsb
jle
sub
inc
rolb
mov
cmp
and
mov
cmp
sbb
in
xor
xor
test
pushf
rcll
pop
fs
fsubrl
mov
dec
xor
mov
lret
je
and
mov
mov
outsl
xlat
popf
test
loopne
push
jmp
sbb
dec
xchg
and
lret
add
cmp
sahf
lret
imul
pop
inc
and
pop
push
test
aaa
adc
xchg
out
lds
xor
and
fiadds
hlt
pushf
sub
fwait
xchg
add
mov
dec
lds
xlat
shll
jmp
cltd
pop
xor
mov
xchg
ds
psubusb
xchg
mov
dec
rcrl
nop
mov
je
decb
in
gs
ljmp
lret
ljmp
cltd
mov
mov
and
cld
adc
pop
mov
aas
jno
ds
inc
dec
inc
and
xor
and
cld
mov
pop
ja
popf
push
in
imul
out
push
outsb
push
lods
jae
data16
sub
cs
sub
inc
push
xor
test
jmp
in
shll
and
pop
out
leave
enter
ret
mov
mov
mov
dec
mov
out
ja
inc
adc
inc
cltd
cmpsl
and
fs
fnstcw
cmp
mov
jge
push
and
jmp
sub
orb
mov
inc
inc
mov
cwtl
mov
cmpsl
inc
dec
mov
xor
lea
aas
js
and
clc
clc
pop
dec
sbbb
mov
add
add
jno
ljmp
pop
mov
mov
insl
cmp
jle
lds
shlb
mov
mov
lret
addl
mov
adc
ret
pop
mov
pop
imul
pop
clc
cmpsl
sub
je
pop
jns
in
push
mov
pop
and
dec
dec
lea
jb
addr16
xchg
test
jo
out
push
pop
push
loopne
jmp
cwtl
addr16
dec
adc
push
xor
cmp
inc
push
lds
and
pop
sbb
pop
mov
dec
std
int
fdivl
mov
movsb
enter
mov
cmpsb
xor
in
add
ds
adc
push
pop
fmull
push
imul
into
cmp
push
jno
mov
add
movsl
iret
mov
add
mov
aas
pop
xor
jo
push
sub
andb
rcrl
loopne
xor
cmpsl
arpl
loopne
sub
inc
cmp
sbb
mov
lock
in
mov
inc
popf
jb
out
cmp
in
mov
arpl
lods
pop
lcall
add
lds
in
imul
cmp
cwtl
mov
gs
js
lret
dec
jno
inc
les
sub
orb
mov
rcrl
sub
push
jnp
stc
call
sbb
jno
xor
mov
cmpsl
jmp
outsl
jne
xchg
add
in
inc
add
test
cs
ds
fmuls
push
add
popa
mov
outsb
inc
pusha
dec
cmp
shrb
fwait
pushf
inc
or
mov
push
addr16
push
mov
addb
daa
push
test
mov
or
push
cmc
mov
sbb
push
insl
mov
jl
popa
mov
inc
sub
xor
sub
in
push
call
scas
push
lds
out
outsb
notb
icebp
ret
push
push
pop
in
inc
xchg
pop
sahf
daa
and
push
test
dec
aaa
inc
lret
popa
imul
sub
imul
jo
pop
popf
int
cmpsl
inc
xor
mov
sub
mov
sahf
mov
xchg
out
jne
push
dec
mov
cs
shlb
sahf
cmpsl
repnz
insb
iret
add
xor
push
push
les
stos
gs
fdivs
mov
int3
add
and
pop
and
jo
mov
push
pop
ds
outsb
cli
mov
outsl
shll
xchg
stos
cmc
inc
sub
pop
adc
ja
xor
adc
mov
mov
dec
cmp
rclb
loop
shrl
push
adc
lret
stos
cld
jmp
sbb
jae
push
xlat
cmpsl
and
loop
shl
dec
pop
lock
sub
test
mov
mov
xor
adc
adc
gs
movl
add
and
inc
jl
push
sbb
push
nop
daa
fdivr
daa
inc
and
cmpsl
loop
dec
fsubrl
xchg
sbb
sbb
and
push
mov
push
jno
push
in
or
xor
mov
adcb
loope
cmp
sbb
movsl
call
push
inc
lcall
sar
jno
out
jae
daa
jl
xor
repz
out
lods
and
fs
rcll
cmc
cmp
in
jmp
outsl
ljmp
and
jno
inc
adc
mov
jb
rolb
scas
lret
lret
mov
out
mov
xor
xchg
pop
and
xchg
cmp
mov
aad
dec
dec
aas
repnz
fsubl
rclb
adc
in
pop
popa
jno
subl
das
fwait
daa
xor
sbb
jmp
xchg
pusha
xor
mov
pop
cld
cs
or
daa
loopne
int3
pop
jp
cmp
cmpsb
ret
loopne
nop
xchg
push
jmpw
insb
jb
ds
push
lds
lcall
jl
or
call
pop
add
das
mov
cld
jbe
and
add
xor
leave
lcall
add
shlb
mov
xor
les
xchg
test
add
pop
aad
cmp
fcoms
mov
imul
adcb
jmp
nop
cli
mov
test
xchg
and
jno
lock
adc
jne
es
cltd
pop
outsl
xorb
bound
into
pop
lds
dec
xchg
or
mov
cld
clc
xor
test
sub
incl
inc
sbb
pop
lods
cmpsl
sbb
sub
push
or
sbb
nop
int3
sub
ds
mov
jmp
adc
sbb
pop
pop
shlb
or
rcrl
lret
and
jne
pop
pop
mov
mov
popa
sbb
lds
inc
xchg
jp
dec
ja
scas
je
cmpsl
pop
ret
sub
into
inc
mov
or
pusha
movsb
inc
into
fcompl
pop
and
lret
shll
adc
jg
test
aad
inc
into
sub
mov
inc
roll
sub
mov
cmp
push
out
cmpsb
xor
scas
ret
xchg
mov
push
xor
cmp
into
xchg
fildl
xchg
lea
mov
xacquire
pop
test
repz
jmp
pop
int3
gs
jb
popf
push
mov
jmp
divb
cmp
out
test
mov
adc
fiadds
sub
dec
jmp
pop
insl
popf
jae
mov
shl
data16
pop
les
repz
in
imul
in
lcall
or
filds
mov
fistpll
xor
inc
insl
push
add
pop
orb
inc
test
and
test
lock
pushf
inc
push
in
cmc
cmovae
pop
ret
mov
cmp
cli
dec
sub
add
cmpsl
mov
lret
adc
push
xor
cmc
cs
out
pop
insl
out
lret
fisubrs
inc
dec
aas
inc
outsb
add
add
jg
and
inc
xchg
mov
pop
inc
dec
pop
and
inc
inc
mov
xchg
and
xlat
sar
insl
push
in
adc
inc
push
out
sub
jle
cmp
cmc
movsl
jecxz
rolb
repz
lret
in
mov
pushf
aas
movsl
jg
dec
test
lds
xchg
sbb
mov
pop
clc
nop
test
es
insl
ds
push
ss
inc
cmpsl
in
xor
xlat
push
movsl
ss
sub
aam
aad
push
std
fmull
movsl
out
or
out
adc
out
or
jno
movsl
popa
cmpsb
loope
std
jg
pop
fisubs
push
jnp
and
sbbb
xor
bound
rolb
sub
push
sbb
lea
mov
mov
jae
push
dec
movsb
lret
cmp
and
test
into
mov
add
repz
pop
cmp
loope
dec
dec
fwait
les
movsb
movsl
test
adc
add
aad
jae
cltd
push
std
jle
inc
dec
lds
dec
sub
mov
mov
imulb
cmpsb
push
sbb
arpl
adc
pop
insb
inc
fcoml
mov
dec
daa
pop
movsl
mov
pushf
out
xchg
sbb
pop
and
mov
into
pop
jmp
inc
xchg
cmpsl
xor
pop
test
push
xor
dec
and
lock
out
and
neg
inc
pusha
in
movsl
pusha
mov
push
js
lock
lea
or
cmpsb
push
aas
adc
cld
mov
mov
inc
imul
pusha
mov
addr16
mov
loopne
insl
out
lahf
push
inc
xchg
mov
insl
lock
scas
jp
addl
adc
repnz
cmc
nop
ja
mov
int3
dec
inc
shlb
xorl
jae
xor
pop
jp
dec
movsl
jp
adc
cltd
sub
cmpsl
mulb
push
mov
cmp
out
jo
mov
stos
test
repnz
out
mov
mov
leave
mov
outsl
sbb
adc
ljmp
js
insl
and
in
push
mov
sti
data16
adc
dec
jne
cmpsb
jle
add
mov
sbb
int
stc
xlat
lea
jecxz
inc
mov
std
or
xorb
shr
les
lcall
movsl
xor
cwtl
xlat
in
insb
push
mov
lea
xor
stos
int
push
inc
ds
in
inc
shlb
loope
lret
add
add
out
shrl
adc
xchg
xchg
pop
cltd
pop
push
or
xor
cmc
fcomps
inc
in
arpl
inc
sub
roll
sub
xor
push
shl
xchg
and
mov
cmpsl
jl
loop
iret
cmp
add
push
xlat
xor
lds
daa
imul
mov
cwtl
mov
xlat
add
jmp
imul
jmp
adc
mov
cmp
movsl
dec
pop
jl
inc
enter
and
cmpsl
push
in
xchg
pop
daa
jo
inc
aad
sbb
add
sbb
mov
cmpsb
orb
mov
mov
call
mov
in
jno
insl
mov
mov
int
inc
sbbl
pop
outsb
lcall
mov
dec
addr16
push
out
mov
scas
inc
mulb
cmp
test
pop
xor
xor
cwtl
scas
decb
sub
imul
js
cli
lds
push
or
sbb
mov
adc
aas
or
dec
clc
mov
mov
daa
aad
ror
icebp
pop
adc
gs
nop
push
inc
fcoml
in
add
inc
cmpsl
push
mulb
and
pop
sub
movsl
inc
out
cmp
add
lds
stc
cmp
data16
decb
rcrb
test
and
lcall
add
cmpsl
dec
mov
jge
std
and
mov
jb
fwait
inc
es
mov
sbb
push
sub
sahf
daa
jns
movsb
jno
xor
fsubs
lcall
dec
xor
loopne
adcb
pusha
xchg
int3
aas
lret
adc
adc
inc
cmpsl
adc
lret
mov
adc
add
es
lahf
or
xor
xor
xlat
push
ljmp
incb
mov
cmp
pop
and
inc
xchg
sbb
pop
lds
push
and
cmpsl
xchg
or
in
sbb
nop
dec
dec
andb
roll
ss
inc
pop
aad
dec
les
cmpsl
es
enter
leave
dec
bound
push
xchg
cltd
cmp
movsl
fs
pop
add
push
add
inc
xorb
mov
mov
and
push
pop
dec
repnz
push
fmuls
call
xlat
mov
sti
je
push
and
out
loope
cmp
imul
stos
aaa
jp
sahf
inc
test
cli
pop
jecxz
addl
insl
repnz
sub
and
xchg
call
scas
pop
or
rolb
cmpsl
stos
xor
mov
dec
add
sub
sbb
cld
sub
ja
inc
cld
jg
pushf
stos
sbb
call
cmp
fisubrs
jno
mov
fs
cmp
add
push
shl
addr16
mov
cmp
int3
out
mov
jle
stos
call
pop
push
aaa
sub
in
ret
pop
push
sub
pushf
xor
adc
mov
lcall
das
pop
aaa
inc
cmpsl
inc
inc
push
lods
jl
sbb
faddl
in
ret
xor
cmpsb
je
inc
inc
cld
cmpsl
jge
gs
daa
mov
mov
out
dec
inc
xlat
push
push
loopne
test
mov
inc
cli
fisubrl
nop
mov
add
mov
dec
jae
sbb
jae
push
pop
adc
lret
push
enter
adc
xchg
or
mov
loop
or
xor
mov
push
sbb
subl
mov
sub
pop
shll
jp
lcall
cmpsl
adc
incl
sbb
xchg
inc
add
es
add
movsl
xor
movsl
xchg
clc
ljmp
std
mov
repnz
cmp
cmp
into
shlb
push
mov
lods
sub
add
fldcw
xchg
mov
jge
out
and
lret
aas
xor
or
ljmp
fnstcw
mov
inc
jl
xlat
jmp
lods
out
fiadds
in
scas
fnsave
aaa
out
ffreep
lods
jbe
inc
sbb
mov
subb
in
jmp
and
cmp
mov
mov
test
cmp
or
cli
cs
mov
and
cmpsb
loope
lock
pop
nop
sub
xchg
aad
cmpsb
movsb
dec
ss
sub
jle
sbb
aaa
jno
or
cmp
gs
or
movsl
mov
imul
push
sbbl
dec
mov
lds
inc
repz
cmpsl
fistpl
jg
call
aad
mov
cmp
pop
movsl
pop
xor
stc
ss
add
cmp
lods
add
inc
push
mov
cmp
or
rcll
jle
fsubs
lcall
dec
sahf
inc
xlat
xchg
and
mov
test
loopne
orl
jne
and
sbb
mov
ss
add
dec
xor
jle
and
xchg
scas
inc
sub
test
loope
inc
or
test
stc
hlt
push
sbb
popf
fmull
shlb
mov
cmp
pop
push
sbb
aas
stos
sub
push
fidivrs
adc
mov
lods
les
sub
lock
cmpsl
sbb
adc
leave
and
xlat
mov
inc
add
xchg
repz
cs
and
hlt
ss
pop
push
imul
cmp
std
int3
sub
add
sbb
ljmp
rolb
push
or
outsb
inc
lock
aam
lds
cltd
mov
sbb
push
cwtl
inc
mov
fcomps
movsl
xor
aas
jae
loopne
out
and
repz
rcr
add
mov
out
jno
loopne
fs
cmc
adc
pop
je
fcompl
xchg
add
repnz
pop
out
push
inc
pop
inc
jno
mov
aaa
adcb
mov
insl
pop
fisubs
pop
mov
ret
loop
and
aam
xchg
loopne
pop
mov
fcomp
ds
popa
cmpsl
arpl
jnp
xchg
sub
inc
cmp
dec
push
cltd
pop
int
adc
test
mov
in
xor
lahf
je
adc
lret
inc
dec
cmpsl
jl
ja
in
adc
pop
and
mov
out
mov
les
inc
push
lods
pop
cmc
push
int3
les
lods
loope
xlat
cli
aas
jl
push
in
sbb
jmp
aas
push
push
push
push
adc
mov
aas
xchg
ljmp
cmp
cmp
insl
inc
jo
cli
push
inc
mov
mov
xchg
and
movsl
pop
arpl
pop
and
pushf
mov
aas
lock
cmp
xor
repz
imul
add
stos
data16
out
mov
test
cmpsb
cmp
jb
xchg
mov
cmp
aam
scas
imul
sbb
and
movsl
mov
mov
dec
cmp
jno
mov
outsl
xlat
imul
movsl
das
inc
pop
sbb
icebp
cs
int
and
aam
adc
loop
pop
mov
inc
push
pop
push
in
das
jmp
cmp
lret
aaa
aas
test
inc
add
inc
cmp
dec
fsubrs
inc
push
cli
popf
les
gs
in
add
and
decb
inc
inc
mov
inc
movsl
or
pop
add
pop
sub
jmp
lahf
sbb
cmc
cmpsl
imul
movsl
mov
sub
scas
cmc
xor
pop
jbe
and
ret
int3
into
mov
dec
insl
addl
das
mov
mov
inc
or
xchg
jno
mov
movsb
mov
or
hlt
test
movsl
in
xchg
sbb
scas
dec
fists
and
sbb
mov
pop
imul
add
orl
add
adc
xor
out
inc
movsl
mov
stc
push
jno
inc
pop
mov
test
xchg
dec
push
fstl
add
sbb
mov
cmp
fisttpl
sbb
or
add
adc
push
add
mov
jne
lds
out
repnz
push
fidivrs
jmp
repz
pushf
or
mov
addl
sbb
sub
in
sub
push
popf
fsubr
jmp
push
popa
cmp
dec
xchg
mov
shlb
out
repz
adc
pop
cmp
decl
int3
xor
ret
inc
cmc
fsubl
in
mov
stc
addb
inc
xchg
dec
inc
popa
mov
and
aad
cmp
adc
and
pop
orb
and
mov
and
and
enter
adcl
in
inc
loop
pop
add
mov
cmp
adc
push
mov
cmp
and
shlb
cwtl
cmp
in
add
les
mov
add
pop
add
aaa
in
ja
pop
xlat
mov
mov
xlat
aaa
xchg
adc
cwtl
lds
adc
sub
daa
aaa
mov
inc
jle
cmp
outsl
add
add
mov
jmp
movsb
gs
jnp
add
icebp
inc
lret
xlat
ffreep
add
inc
mov
divl
xor
mov
hlt
push
xchg
xchg
stc
shlb
pushf
inc
push
out
xor
inc
roll
sbb
jne
add
movsb
out
mov
jmp
repnz
cld
movl
out
adc
xlat
lods
push
es
movsl
mov
movsb
pop
push
in
idivb
cmpsb
xor
xor
mov
mov
aaa
adc
lods
xchg
cmpsb
pop
inc
mov
mov
inc
cmpsl
pop
out
data16
es
addr16
inc
jecxz
xchg
inc
push
fs
pop
movsl
in
pop
inc
inc
loopne
xor
mov
cmc
hlt
in
mov
and
mov
cmc
adc
cmp
cld
xlat
and
cmp
adc
cmp
pop
idivl
and
div
cmpsl
icebp
xchg
add
add
adc
fstl
pop
mov
testl
loope
dec
dec
cwtl
scas
addr16
lock
mov
les
and
jp
scas
lret
outsw
dec
btr
pop
das
test
adc
sahf
sbb
test
push
addr16
sbb
adc
aad
in
lds
fwait
xchg
mov
pushf
push
movsb
test
and
rolb
inc
sub
cltd
out
inc
jno
push
call
testl
cmpsb
push
test
sbb
shrl
cmp
mov
in
movsl
and
jae
cmpsb
jmp
mov
inc
hlt
cmpsl
dec
ds
in
enter
cmp
and
cmp
loope
popa
imul
push
mov
popa
push
add
push
in
pusha
js
xchg
lret
mov
inc
or
xlat
xor
inc
enter
inc
jp
mov
scas
rorl
jle
mov
mov
mov
movsb
mov
push
inc
leave
xor
cmp
out
repnz
xor
mov
loop
xor
inc
push
add
cld
movsl
or
rcrl
adcb
repz
mov
mov
add
sar
xor
jge
dec
push
dec
out
inc
mov
dec
leave
inc
jne
movsl
jle
and
mov
dec
cmp
jno
or
mov
test
or
fistpll
xlat
lds
pop
loopne
int
and
xor
in
movsb
movsl
test
into
or
push
inc
shlb
inc
jne
push
push
outsb
jmp
sti
pop
hlt
std
or
adc
xor
mov
inc
popa
es
in
or
shrl
push
mov
aaa
cmp
push
xor
je
dec
inc
scas
int3
testl
xor
movsl
lret
nop
jmp
test
lock
xchg
and
loope
mov
sbb
inc
stos
insb
adc
les
mov
ss
push
dec
jl
cli
ljmp
and
cmpsl
negl
jnp
incb
or
popa
in
aad
mov
loopne
xchg
and
loop
dec
test
mov
inc
pop
push
repnz
repz
push
les
in
jns
add
mov
cld
mov
xchg
enter
stc
jp
lret
or
and
cwtl
push
and
repnz
aad
xor
pusha
mov
inc
push
jnp
cwtl
mov
push
in
xlat
pop
sbb
ja
inc
insl
sub
inc
dec
mov
je
jmp
mov
cs
les
adc
mov
orl
movsb
jmp
or
mov
sbb
hlt
sub
daa
daa
xor
hlt
pop
test
into
js
cmp
add
pop
not
data16
hlt
cld
movsb
sbb
dec
cmp
push
sub
adc
call
es
mov
ret
cmovbe
imul
xchg
fs
add
fcomip
int
and
jle
popf
leave
or
push
mov
aaa
rcll
inc
out
and
mov
mov
std
lahf
dec
lds
xor
jmp
test
fnstenv
mov
mov
clc
xor
int
mov
jge
imul
jae
jbe
daa
dec
clc
cs
or
fdiv
adc
pop
sahf
pushf
sub
int3
xchg
dec
mov
mov
sarl
sbb
fbstp
push
dec
int
fsubs
or
js
stos
test
fisttpll
rcrb
inc
dec
mov
pusha
dec
inc
shlb
push
movsl
mov
jae
mov
adc
nop
cmp
mov
or
jl
into
fs
test
xchg
xchg
jmp
or
ss
jmp
loopne
sbb
aaa
pusha
pop
popf
xor
jnp
leave
sbb
and
jecxz
popa
push
inc
inc
adc
mov
imulb
jno
fs
inc
dec
mov
rolb
push
xchg
dec
jne
ret
ret
test
add
es
and
inc
adcb
int3
movsl
repz
andl
shl
popa
imul
mov
cs
dec
cmp
mov
and
xchg
movsb
and
lods
sub
add
cmpsb
add
imul
xor
fadds
mov
and
inc
xchg
inc
pop
xor
dec
lds
xchg
mov
push
cmc
add
jns
jmp
and
xchg
addr16
jp
mov
xchg
or
adc
movsl
jl
and
inc
out
sub
lret
sbb
jp
stc
lods
shl
nop
lahf
test
cltd
xor
movsl
mov
xchg
mov
and
inc
cmpsl
aas
stc
inc
mov
lret
or
loop
pushf
popa
adc
sahf
in
sar
jno
jns
inc
call
and
dec
call
add
movsl
mov
test
jno
sbb
cmp
stc
jo
dec
jl
jge
in
movsb
pop
loop
dec
push
push
pop
call
and
pop
adc
lods
and
and
loope
or
cmp
cmp
inc
in
rcrb
pop
fmulp
cmp
dec
mov
je
jb
bound
call
aam
lahf
out
pop
test
andl
fidivs
ss
test
scas
sbb
mov
adc
mov
leave
inc
fiadds
into
pop
mov
push
push
push
pop
mov
mov
xor
out
cmpsl
xchg
fwait
sub
rolb
jecxz
lahf
push
inc
jmp
movsl
imulb
repz
daa
call
rcl
mov
inc
and
and
inc
push
sub
gs
inc
or
jecxz,pn
jb
test
push
add
sbb
fmul
int3
cmp
imul
or
inc
aas
adc
inc
sar
int3
jmp
sub
dec
mov
sub
in
ds
mov
xlat
fdivl
fsubs
mov
pop
out
imul
nop
add
adc
cmp
dec
pop
push
addr16
inc
mov
out
mov
add
insl
jno
inc
jge
loopne
in
adc
ret
push
test
mov
ljmp
push
mov
arpl
pop
dec
adc
cwtl
cmpsl
in
adc
and
jne
or
or
xor
push
scas
xchg
dec
clc
mov
lock
dec
bound
lods
cwtl
roll
push
iret
mov
mov
pop
xor
mov
dec
ds
cmp
xor
pop
notb
cli
adc
adc
lea
and
pusha
add
pop
mov
and
or
xchg
inc
aaa
in
rcrl
push
add
sub
push
shrb
sti
ljmp
adc
jg
mov
cs
or
or
jbe
leave
adc
cmpsl
mov
inc
rcr
scas
mov
or
and
push
mov
dec
sbb
jg
filds
xchg
ret
mov
std
jno
pop
cmp
jae
xchg
mov
add
cs
in
scas
ds
mov
sbb
sub
enter
inc
scas
cmp
inc
xor
sbb
inc
mov
push
rcrb
inc
and
movsb
ret
add
cmp
fdivrp
data16
testb
push
pop
and
dec
mov
movsl
neg
jb
pop
outsl
mov
push
and
pop
fstps
ss
mov
mov
mov
inc
mov
adc
cmp
bound
dec
mov
mov
xchg
jb,pt
sub
hlt
mov
lea
xchg
into
lret
xchg
pop
lahf
stos
cwtl
push
push
lea
push
push
mov
movsl
inc
in
jecxz
cmpsl
test
xlat
inc
dec
aam
mov
popa
leave
lds
movsl
mov
int
dec
testb
fiaddl
enter
add
orl
out
jle
inc
inc
movsb
and
add
fidivrl
dec
les
push
daa
jecxz
and
int3
jb
jno
movsl
mov
popa
pusha
fs
mov
mov
es
pop
lret
adc
mov
dec
sbb
inc
pop
pop
enter
mov
sbb
ds
outsl
scas
pusha
fisubl
push
and
popa
int3
xchg
mov
punpckhdq
cmp
pop
pop
fiaddl
mov
insb
or
jo
aam
ss
cmc
ss
out
add
mov
mov
repnz
repnz
gs
xlat
adc
fsubl
out
jno
dec
add
push
inc
mov
mov
dec
test
aad
push
dec
mov
loop
dec
mov
mov
popa
mov
push
pop
and
jle
and
and
ret
adc
in
sub
cmp
mov
std
inc
call
mov
pop
sub
inc
inc
out
xlat
aaa
xchg
nop
out
fldt
add
pop
loop
cmpsl
adc
call
mov
pushf
loop
nop
add
cli
push
jbe
pusha
jmp
xor
pop
jmp
inc
int
lds
leave
xorb
jmp
lods
shlb
cmc
cmp
jns
mov
and
xchg
clc
dec
dec
test
dec
mov
decb
jb
repz
xchg
inc
cmpsb
stc
icebp
in
ss
dec
cld
or
lea
xor
test
fimull
adc
movsl
jns
and
sarb
xor
ljmp
adc
cmp
and
jbe
cmpsb
cld
fwait
sbb
dec
popf
in
dec
dec
sarl
and
mov
in
mov
fs
jno
mov
xchg
mov
add
add
or
sub
sub
push
inc
movsl
sbb
rcll
adc
aad
movsb
xor
jno
fwait
mov
jae
leave
fnstcw
bnd
add
hlt
and
bnd
insl
cs
repnz
mov
loope
pop
push
aas
cmpsl
negl
fisttpl
dec
test
lret
add
inc
cmp
lea
sti
xchg
and
scas
gs
test
lret
bound
imul
mov
sahf
loop
subl
mov
push
or
inc
decb
xor
loope
lods
inc
cltd
cmp
jno
adcb
es
aad
pop
mov
mov
inc
cmc
mov
push
push
sub
lahf
dec
call
and
push
pop
ja
int3
out
xor
mov
sbbb
xlat
xor
xchg
add
sub
icebp
lds
das
inc
enter
inc
add
push
fidivrs
sub
pop
inc
xchg
cmp
sbb
adc
and
and
jbe
add
repz
mov
add
sbb
call
aaa
cmc
mov
mov
add
je
and
inc
cmpsl
imul
popf
les
aam
fcomps
mov
mov
inc
movsl
inc
cmpsl
push
sub
dec
dec
pop
fdivr
pop
aaa
in
sbbl
or
dec
outsb
mov
or
and
popa
dec
pop
fdivr
mov
adc
sahf
inc
popa
dec
jg
in
pop
negb
daa
jae
xchg
daa
imul
inc
adc
int3
movsl
insl
add
cmpsl
lock
jne
sti
sub
inc
clc
outsl
push
fiaddl
pop
push
movsl
and
js
call
mov
movsl
test
inc
xor
ret
push
xchg
loop
cmp
clc
lock
jae
je
shufps
jns
inc
xor
mov
and
mov
adc
jb
push
push
cmpsl
add
test
adc
jle
add
popa
mov
outsb
sbb
adc
inc
addr16
jg
push
ret
xor
add
jmp
test
sbb
sbb
sub
dec
add
pop
movsb
popf
decl
mov
lods
ss
shr
into
nop
adc
sbb
mov
cltd
rcrb
cltd
rcl
cmc
inc
hlt
xor
and
cmpsb
lods
pusha
adc
pop
xor
mov
movsl
mov
sub
loopne
push
cs
xor
aaa
add
fsubrl
xor
xlat
call
adc
jl
add
add
es
sti
int3
dec
inc
or
movsl
adc
mov
fdivs
out
sub
xchg
and
or
mov
or
insb
and
push
jmp
sub
cld
in
les
sbb
es
out
xchg
fwait
push
push
clc
add
mov
add
arpl
or
hlt
test
jmp
cmpsl
sub
push
pop
xchg
add
mov
mov
testl
adc
xchg
dec
xchg
arpl
fnstcw
dec
jle
arpl
ja
movsb
lret
sbb
push
mov
xor
mov
xor
decl
repnz
cmpsl
insb
inc
into
or
loope
movsb
mov
jbe
popf
rcr
inc
insl
adc
je
sahf
lret
in
insl
movsl
lods
inc
mov
arpl
test
jno
mov
daa
xchg
inc
cmp
arpl
ja
test
jns
pop
mov
sbb
insl
out
hlt
mov
insl
loop
pushf
add
xor
arpl
or
jl
mov
mov
popf
xor
in
out
push
cmc
jo
jns
jno
test
xor
popa
mov
mov
xlat
fnsave
nop
dec
in
xchg
movsl
pop
sbb
xchg
add
insl
push
push
movsb
je
jecxz
stc
daa
mov
fisubs
inc
mov
pop
pop
xor
movsl
fdivrp
inc
mov
jne
cmpsb
mov
or
mov
sbbl
mov
or
mov
adcb
xor
pop
mov
cmp
ja
cmpsl
or
daa
minps
jp
mov
add
subb
movsl
lock
mov
mov
jg
popf
push
ret
outsl
rcll
ficoms
hlt
adc
and
pop
inc
mov
xchg
out
mov
imul
cmc
inc
push
sbb
incb
inc
add
inc
movsl
test
sub
ss
sbb
cmp
into
sub
mov
pop
les
mov
nop
cmp
faddl
xor
adc
bsf
sahf
or
dec
in
xor
std
lret
movsl
iret
mov
scas
aad
sbb
pushf
jge
and
in
in
xor
and
lock
shl
in
movsl
sbb
in
dec
mov
mov
add
inc
jno
cmpsl
push
xlat
mov
jp
sbb
dec
sbbb
rcrl
jo
enter
jno
idivl
movsl
imul
cmpb
mov
popf
imul
mov
and
pusha
loopne
and
dec
mov
jns
jbe
sub
xor
sbb
sahf
les
cmp
mov
movl
jmp
xchg
inc
je
jne
mov
dec
add
les
addr16
movsl
loopne
lds
or
cmpsl
inc
rcr
sub
or
shlb
sbb
inc
sub
or
pusha
mov
ja
das
les
stos
stc
cmpsl
and
dec
add
iret
iret
pop
cmp
imul
mov
inc
outsl
sbb
mov
cmp
movsl
xchg
pop
inc
fcompl
xchg
pop
xchg
xor
push
iret
shll
nop
lret
xor
mov
aaa
xchg
fdivr
xor
xlat
mov
mov
aad
mov
mov
out
push
sbb
jecxz
shlb
push
movsl
and
push
fidivrs
adc
lds
aaa
insl
and
sbb
pop
mov
cli
jmp
stos
pop
mov
fidivrl
int
fbld
mov
decl
pop
jg
and
into
ror
decl
lret
cmpsl
adc
push
mull
fimuls
call
mov
shl
mov
test
fmul
and
pop
or
decb
mov
sbb
in
jg
fs
cmpsl
repnz
mov
jno
shr
inc
and
sbb
inc
cli
jmp
scas
into
std
cld
les
ss
pushf
in
mov
and
ds
lds
inc
andb
mov
pop
mov
sti
repnz
mov
pop
inc
cmpsl
add
xor
dec
push
xor
ja
int3
add
daa
int
movsb
mov
inc
add
cmp
xor
or
mov
xchg
pop
adc
in
aam
jmp
not
adc
movsl
sbb
jo
mov
cmp
pop
cmpsl
ret
loop
shl
jmp
std
and
inc
movsl
leave
sbb
mov
aaa
xchg
in
cmp
ljmp
std
hlt
orb
jmp
jmp
sbb
push
ret
or
jmp
sub
data16
push
and
lret
xorl
xchg
xchg
popf
inc
add
inc
push
addr16
xor
jo
xchg
push
push
repz
cmpsl
xchg
aad
jle
arpl
iret
xlat
sbbb
lds
loop
test
xor
andl
xor
ds
push
add
mov
dec
dec
aas
fwait
call
sub
les
cmp
repz
ret
mov
movsl
push
cmp
add
and
test
lea
dec
and
sub
or
push
inc
movsl
out
loopne
inc
sub
insl
push
shl
inc
jl
std
mov
pushl
mov
and
jecxz
and
imul
aad
xchg
int3
in
jns
gs
sbb
jmp
ljmp
xor
and
and
pop
fdiv
sub
pushf
adc
cmp
add
je
sub
clc
lret
push
mov
movsl
dec
cltd
mov
inc
cmpsl
js
imul
mov
stc
jge
xor
adc
dec
mov
dec
out
test
lds
test
and
cs
dec
insl
jmp
clc
xchg
jl
adc
pop
jmp
popf
xor
jb
mov
aaa
fmuls
int
mov
push
sbb
mov
sbbl
int3
out
movsb
push
dec
jmp
lods
movsl
push
mov
test
fs
mov
sub
hlt
pop
mov
xor
movsl
inc
xor
movsl
push
inc
cmp
add
dec
adc
and
pop
and
arpl
cmp
shll
jmp
mov
mov
rcr
test
add
mov
jbe
adc
push
push
add
xor
insb
sbb
jecxz
daa
daa
xchg
cmc
shr
imul
ljmp
ficoml
imul
fisttps
push
jg
pop
enter
cmp
dec
insl
push
mov
mov
adc
xchg
jle
and
sub
dec
popa
std
daa
lods
pop
jl
adc
pop
iret
adc
shl
aas
add
int
add
fcomi
add
ss
or
fdivs
mov
in
mov
mov
loop
int
sbb
cmp
jg
mov
xchg
insl
fcoml
cmc
movsl
xchg
dec
lcall
xchg
push
cmp
inc
or
cmp
mov
xchg
mov
ror
addl
sub
and
test
cmp
movsl
aas
dec
push
int3
sub
popa
loop
inc
add
mov
data16
mov
jle
dec
orl
out
and
sbb
xchg
and
movsb
sti
mov
xchg
or
js
out
adc
pushf
mov
aam
mov
nop
int3
dec
mov
icebp
mov
pop
dec
sbb
jae
adc
popa
and
xor
jns
mov
imul
in
mov
popf
daa
mov
sarl
and
dec
in
or
inc
lret
mov
movsl
inc
or
ret
repnz
dec
pusha
inc
into
inc
and
fs
inc
inc
xchg
adc
int3
xor
push
mov
subl
cmpb
jge
out
or
cltd
lds
imul
inc
scas
mov
lds
add
data16
inc
bound
fdivl
push
int
jbe
inc
popa
jl
test
scas
mov
or
outsl
dec
daa
pop
icebp
adc
and
mov
add
and
leave
test
add
cmp
dec
sbb
dec
mov
es
jg
js
sub
inc
push
test
aad
add
cmp
loopne
pop
mov
test
jns
test
xor
or
sub
icebp
mov
dec
test
insl
cmp
adc
sub
pminsw
je
pop
sub
std
mov
shrl
insl
pushf
fldt
cmp
dec
icebp
inc
push
outsb
cli
ret
push
cmp
cmpsb
sub
repnz
imul
je
into
inc
adc
sarb
cld
jbe
movsl
repz
add
cld
pop
jle
inc
sub
push
sub
mov
jbe
inc
dec
stos
xor
xlat
pop
clc
inc
imul
push
and
dec
inc
xchg
push
push
mov
out
lods
notl
enter
pop
lea
dec
push
in
mov
dec
jae
frstor
lds
mov
push
jl
in
inc
push
daa
xchg
test
inc
add
jge
cmp
add
loop
sbb
lds
mov
cmpsl
mov
add
stc
mov
sbb
or
mov
and
pushf
pop
call
jl
bound
scas
mov
sub
imul
jle
inc
insl
loop
pushf
in
xor
addr16
outsl
movsl
mov
pop
jne
mov
fs
adc
scas
and
pop
add
mov
jge
inc
dec
xor
push
jns
fldcw
lds
inc
jno
dec
fbld
inc
test
sbb
fbld
push
lret
sbb
and
push
pusha
aad
movsl
mov
clc
insl
mov
daa
enter
inc
mov
sbb
cmpsl
fcmovnb
add
jp
test
lcall
xchg
xorl
push
inc
sub
inc
cld
mov
cmc
and
adc
pop
add
or
hlt
cmpsl
test
mov
fsubr
adc
imul
popa
cmpsl
sub
xchg
das
pop
scas
repnz
inc
cmpsl
negl
aaa
shll
jle
in
push
clc
outsl
rcl
sub
aas
out
cmp
xchg
mov
fisubrl
jae
or
mov
mov
and
push
sarl
mov
or
dec
sahf
xchg
fdivr
xor
popa
iret
pop
out
and
and
inc
inc
into
mov
add
cli
popa
xor
scas
aad
fnstenv
sarb
mov
add
or
nop
in
mov
orb
sub
call
loop
and
push
into
int
call
or
push
leave
jnp
fsubrs
mov
fs
dec
mov
ret
add
inc
xor
pop
add
pop
mov
sub
sub
aas
lret
jmp
adc
dec
dec
aad
adc
jecxz
cwtl
xor
nop
gs
adc
aaa
into
mov
int3
push
mov
mov
lock
lret
ret
xchg
das
cmp
sbb
call
inc
test
ret
faddl
in
jmp
pop
inc
push
inc
pop
in
dec
mov
inc
popa
pop
or
shlb
out
dec
jo
pop
hlt
adc
outsl
insl
imul
clc
es
stc
mov
inc
mov
dec
scas
or
enter
mov
jno
xchg
inc
push
jb
nop
mov
incb
dec
stc
mov
or
xchg
test
sbb
sub
movsl
pop
lds
or
lret
add
jb
cltd
pushl
inc
leave
dec
or
int
aad
sbb
dec
daa
outsb
shlb
inc
adc
push
ficompl
inc
mov
test
sbb
and
pusha
imul
imul
inc
fadds
jge
and
jno
sbb
dec
mov
mov
cmpsl
movsl
mov
add
cmp
pop
mov
mov
daa
sbb
jle
cmp
xchg
dec
xchg
jmp
aas
xchg
and
mov
aaa
scas
dec
cmpsb
jb
pop
jnp
xor
fwait
or
pop
cmp
push
pop
inc
ljmp
aad
inc
jnp
cmpsb
push
push
and
inc
push
popa
and
scas
cmpsl
fistpl
xchg
out
or
fdivrp
sbb
xchg
mov
loope
cs
inc
popf
xor
pop
dec
inc
inc
pusha
mov
jl
leave
or
mov
out
lds
jmp
test
in
push
push
daa
repz
xchg
jno
dec
jmp
imul
pop
adc
xor
les
or
mov
pop
mov
sbb
inc
jns
push
test
xor
lcall
pop
add
lret
sbb
cmpsb
adc
jl
outsb
pusha
idivb
mov
roll
call
mov
mov
add
cmpsb
shl
pushf
jge
cmp
adc
mov
add
outsl
movsb
inc
test
ja
in
jnp
lds
cld
iret
push
cmpsl
fs
xor
cmp
and
cld
adc
lds
lds
cmp
daa
int
lds
xchg
sbb
and
lds
xor
fildl
mov
out
pop
xchg
pop
pop
in
outsb
mov
push
cmpsl
shll
xorb
inc
cld
movsb
fucomp
and
and
xchg
pop
aas
push
and
cwtl
push
mov
jl
dec
cmp
movsl
in
push
push
in
lret
mulb
inc
xor
roll
lods
test
push
mov
mov
in
out
ret
cmpsb
loopne
xor
lods
lds
je
loopew
and
xor
push
lds
mull
cmp
icebp
jecxz
pop
testl
in
es
and
cmp
xchg
pop
xor
pop
adc
rcl
shll
adc
adc
mov
add
fbld
pushf
add
xor
shlb
and
push
xor
adc
aam
ja
les
inc
test
push
xlat
in
in
xor
and
and
in
jo
mov
add
aaa
sahf
and
lcall
xor
lods
es
pop
je
mov
add
adc
mull
negl
inc
cwtl
test
ss
xchg
mov
inc
push
cmp
movsl
mov
mov
cltd
out
and
popf
xor
insl
shl
in
adc
xor
sub
arpl
pop
and
push
dec
jb
loope
or
fistps
in
dec
xor
cld
lahf
sbb
and
sub
aas
inc
ljmp
mov
pop
xchg
dec
orl
movsl
push
notb
cmpsl
fstpl
loope
out
lret
test
dec
mov
sbb
cmp
push
jne
add
daa
je
cmp
lock
mulb
cmp
pop
jb
xor
xchg
movsb
mov
in
pop
jne
movsl
subb
inc
rcll
push
xor
dec
pop
mov
test
cmpsl
stc
or
movsl
mov
or
sub
out
ret
xchg
nop
sub
addr16
imul
iret
std
lea
sub
imul
ds
arpl
repz
ret
les
aaa
sbb
add
adc
daa
mov
ss
dec
ror
outsb
subl
sbb
scas
xor
mov
mov
movsl
scas
popa
sbb
push
and
decl
ds
imul
jbe
mov
in
icebp
add
sti
dec
xor
pop
sub
shl
aaa
xchg
cld
repz
out
jmp
in
insb
popa
xlat
jb
mov
mov
mov
rclb
dec
mov
mov
mov
jno
cmp
inc
xchg
sbb
cmp
pop
push
mov
imul
aas
sbb
movsb
loop
xchg
ljmp
inc
cmpsl
andnps
mov
in
cmpsl
sbb
fsubrl
and
cmc
scas
push
adc
ss
or
mov
in
clc
add
mov
fld
dec
xor
mov
popa
push
ja
xchg
nop
mov
fdivp
repz
lods
ljmp
and
mov
fiaddl
mov
push
es
cltd
mov
inc
adc
stos
jmp
sbb
push
and
sbb
mov
div
jp
and
movsl
loopne
adc
enter
pop
jge
lds
sbb
out
scas
ror
mov
xor
cmc
enter
and
sub
jle
sarl
adc
mov
les
push
rolb
pop
adc
inc
ret
movsb
sub
out
das
adc
xchg
or
test
std
pop
repz
popf
test
or
outsl
pop
mov
ret
inc
outsb
out
adc
les
push
loopne
loop
or
dec
test
mov
jne
aaa
subl
xchg
add
jle
jmp
push
mov
adc
mov
movsb
push
mov
test
inc
pop
adc
stc
daa
and
int
into
pop
dec
mulb
movsl
je
and
popa
cmp
inc
inc
pop
jle
jecxz
xchg
es
jno
nop
mov
arpl
xor
add
push
ss
pushf
sbb
xchg
push
add
mov
xchg
ret
aad
adc
sbb
insl
test
mov
sbb
lds
cmpsl
cmpsb
push
jp
jmp
and
pusha
daa
push
mov
enter
cmpsl
add
adc
mov
imul
jge
and
add
movsl
dec
cmp
outsb
push
cmp
cmp
movsl
xor
test
stos
lock
sub
nop
movsl
test
shlb
push
adc
inc
sub
imul
mov
ss
xchg
inc
lahf
xlat
outsb
pop
scas
pop
inc
adc
loope
je
frstor
pop
ret
add
mov
add
and
cmp
mov
and
pop
inc
loope
mov
xchg
addl
int3
pushf
test
jno
hlt
out
push
lret
imul
pop
jo
sbb
int
sub
push
sub
out
fbld
out
jb
fisubs
loopw
ljmp
push
push
pop
xor
pop
loopne
sbb
fwait
mov
sub
call
jmp
mov
movsl
icebp
fdivrl
add
jp
sub
or
jg
in
cli
cmp
aam
out
mov
mov
bound
gs
jb
mov
pop
xorb
mov
xchg
sub
shl
les
cmpsl
test
rclb
test
sub
imul
pop
aad
xchg
ljmp
cmpsl
push
sub
push
ds
rcrl
lret
arpl
fwait
and
std
add
push
scas
cmpsl
fistpll
inc
stc
push
outsb
mov
insb
stc
stc
sbb
test
jns
inc
push
pop
es
pop
dec
int3
cmp
dec
mov
and
sbb
mov
into
fs
xor
daa
inc
sbb
push
loop
jge
loope
jle
ds
movsl
push
mov
jne
cmp
or
in
mov
push
cmp
in
inc
and
cs
mov
pop
jp
mov
add
push
or
stos
and
xor
mov
gs
dec
in
js
int3
push
mov
aaa
push
inc
rcll
loop
adc
and
mov
gs
adc
popa
xor
mov
sbb
aad
lea
fiadds
adc
pop
sbb
dec
jge
pop
lods
divb
xchg
dec
in
inc
push
sbb
arpl
adc
lcall
lret
testb
dec
lahf
test
lcall
cmp
dec
cwtl
out
mov
mov
fldt
ja
leave
sub
test
dec
fs
and
aam
test
jne
adc
xchg
pusha
cltd
add
lods
popf
fmull
movsb
movsb
in
lds
dec
jg
and
xor
mov
rolb
loop
vmovntps
mov
sar
cmp
je
int3
cmc
inc
imul
sbb
or
and
test
sub
ds
pop
int3
dec
les
negb
jmp
xor
shlb
jl
xchg
mov
push
fnsave
insl
mov
sub
or
xor
loop
repz
in
jno
lock
mov
cmc
pop
mov
incl
dec
push
push
inc
sub
aad
into
cltd
sub
mov
divb
add
pop
or
shrl
lcall
std
in
xchg
mov
sub
es
sbb
adc
cmp
adc
pop
es
cmpsl
and
add
icebp
leave
out
push
nop
add
mov
pop
inc
pop
sbb
lret
and
std
test
les
xor
testl
stc
inc
call
cmc
mov
pop
cmp
xor
movsl
mov
jmp
insl
out
inc
mov
cmp
mov
cbtw
decl
jp
adc
test
push
out
mov
dec
ss
dec
cli
mov
sahf
jp
pop
mov
mov
adc
popa
add
fs
mov
lret
lock
mov
shll
decb
inc
lcall
pop
test
mov
sbb
sub
imul
mov
mov
clc
xor
dec
jg
and
in
in
push
xchg
mov
xor
add
out
xchg
hlt
mov
sub
or
in
xchg
scas
sub
sbb
xchg
ja
test
push
jl
repnz
mov
movsl
arpl
sbb
sbb
jbe
jecxz
pop
lahf
adc
daa
xor
xchg
addr16
mov
inc
jg
movsl
shlb
dec
aaa
data16
dec
cmp
mov
stc
or
push
popf
ret
in
in
dec
push
aas
pop
jb
mov
jns
and
fcoml
std
in
popf
inc
jle
std
mov
inc
addr16
repnz
inc
cmp
adc
mov
dec
pop
into
outsb
sub
jae
sbb
push
sub
in
inc
mov
dec
inc
cmc
jno
les
je
out
jmp
inc
arpl
movsl
mov
dec
and
xor
and
int3
call
pop
pop
xor
jbe
cmp
negb
jbe
add
xlat
xor
jg
xor
jmp
dec
add
cmp
outsl
mov
dec
xchg
cld
inc
cmpsl
jb
insl
and
dec
jl
cld
fmuls
lahf
mov
xor
sbb
das
mov
in
mov
insl
call
inc
mov
and
scas
mov
jb
jae
lock
es
push
pusha
jg
push
xorb
adc
mov
lds
jge
rcr
lea
test
push
addr16
les
aaa
js
es
lcall
test
pop
pushf
cmpsb
xchg
lds
jecxz
sti
pop
add
cmp
mov
mov
ja
popf
or
push
adc
test
xchg
mov
xlat
or
data16
stos
pop
stos
mov
add
jno
popa
xchg
inc
fs
jno
xchg
imul
pop
popf
mov
cmpsl
push
sbbb
cltd
mov
push
mov
jle
xchg
fnsave
sbb
xlat
cs
imul
jae
aas
inc
sahf
iret
pop
dec
and
inc
cmpb
mov
mov
lods
cmp
pop
cltd
or
aam
adc
mov
push
push
lds
jmp
clc
daa
or
push
and
or
xor
pushf
movsb
in
cmp
nop
lea
mov
xchg
aas
jae
xor
mov
movsl
std
dec
shll
pop
push
mov
imul
int3
cmp
dec
cmpsl
sarl
insl
fimull
fabs
inc
push
pop
mov
imul
jl
and
or
sbbb
fwait
jle
sbb
pop
and
cli
in
stos
sbb
mov
cmp
mov
imul
lock
shr
mov
add
add
pop
jmp
jns
mov
leave
jmp
stc
add
dec
push
adc
popa
cwtl
fs
repnz
pusha
or
xor
xor
or
outsb
loope
inc
jnp
adc
inc
cmp
std
mov
insl
cmpsb
sub
and
mov
cli
adc
lahf
test
arpl
out
movsb
sti
and
ja
jne
cld
inc
outsb
daa
xchg
xchg
mov
mov
lock
out
dec
sub
sbb
jne
stos
or
mov
fisubrs
mov
fadds
mov
lcall
xor
mov
sti
lock
push
cld
cmp
cmpb
repnz
cs
imul
rolb
js
addb
mov
jo
xchg
cmpsb
fsubrp
cld
lcall
mov
mov
cmc
mov
mov
movsl
add
mov
ja
jge
ljmp
xor
pop
mov
xor
idivl
es
cltd
jmp
aaa
mov
movsl
arpl
push
jge
add
ja
push
dec
and
lods
dec
mov
popa
sbb
lds
repnz
sar
xchg
out
xchg
das
dec
stos
dec
popa
int
add
lahf
cmpsb
in
push
enter
out
dec
cmpsl
or
insl
daa
or
and
int
adc
cli
mov
mov
outsb
mov
in
roll
adc
fstps
fstl
enter
dec
out
test
gs
ds
push
fiadds
ljmp
pop
xor
sub
test
and
imul
cmp
scas
leave
adc
clc
dec
aam
inc
pop
das
add
addb
lds
in
jno
lods
insl
jmp
push
xlat
mov
sub
lea
jnp
testl
jno
pop
in
lea
test
into
jo
xchg
sub
shrb
frstor
ss
and
lret
je
fcmovbe
decb
loop
out
cmp
in
jle
hlt
popa
vunpcklpd
xchg
xor
inc
fisubrl
inc
xchg
mov
sbb
roll
dec
das
adc
shrb
jnp
dec
push
sub
fwait
push
adc
sub
movsb
out
ficomps
hlt
cltd
ljmp
sbb
inc
nop
jae
into
daa
mov
jecxz
inc
mov
ss
adc
inc
in
movsl
pushl
push
xchg
mov
insb
outsl
lret
addr16
stc
orb
xor
push
mov
dec
jmp
ljmp
addl
xchg
jns
mov
mov
mov
inc
pop
divl
ja
sub
movsl
mov
dec
xorl
mov
jp
divb
mov
fisubrs
shr
mov
rolb
pop
in
cmpsb
rorb
cmpb
in
pop
stos
fs
fiadds
or
xlat
inc
out
popa
shlb
jmp
call
scas
inc
aaa
out
pop
stos
dec
or
shlb
mov
movsl
sbb
push
sbb
add
cld
test
lahf
adc
sub
inc
orl
adc
les
inc
push
or
and
sub
mov
or
shll
shrb
cmp
jmp
cmpsl
je
sahf
repz
cmp
cld
pop
mov
mov
movsl
ljmp
stos
sub
jbe
push
std
out
lds
into
aad
inc
in
jne
push
icebp
mov
pop
pushl
cmpsl
std
fcoml
or
cltd
ss
scas
inc
enter
pop
imul
out
cmp
lock
in
dec
xor
out
pusha
push
inc
jle
push
inc
les
mov
mov
std
xchg
stc
rcrb
rcr
lret
movsl
fistpl
or
mov
xchg
sbb
xor
out
adc
pop
es
jmp
shll
out
cs
popf
sub
inc
xor
cmpsb
aaa
inc
movsl
in
repz
inc
jbe,pn
add
add
int
pop
mov
insl
imul
or
rolb
cli
mov
push
ficoml
push
sbb
cld
mov
mov
and
or
lock
mov
faddl
push
sbb
cmp
adc
pop
setp
jp
sbb
aas
push
test
sbb
xlat
inc
adc
negb
dec
push
pop
push
mov
mov
insb
les
xor
and
xchg
mov
adc
test
div
mov
push
jb
mov
test
aas
sbb
pop
fiaddl
mov
test
mov
jle
lret
int3
ret
cld
push
xchg
xchg
out
test
cmp
mov
pop
pop
pop
daa
mov
out
iret
les
push
add
imul
mov
add
add
add
repz
in
into
or
inc
and
cmp
cmp
jo
jne,pt
inc
xchg
popa
and
adc
test
sbb
hlt
jns
mov
daa
hlt
mov
sbb
and
cmp
in
mov
cmpsl
mov
stc
negl
fsincos
mov
xchg
lahf
test
movsl
jne
dec
test
or
add
pusha
dec
stc
fistps
jns
int3
addr16
add
into
fsubs
shll
addr16
inc
jmp
faddp
pusha
inc
jne
add
enter
mov
in
cld
movsl
aaa
add
add
enter
add
sbb
xor
orb
iret
stc
je
dec
es
fsubl
imul
mov
fsubp
rcrl
cs
dec
jno
imul
adc
jmp
fldt
adcl
scas
lahf
jg
and
and
mov
push
sbb
ds
push
xchg
mull
into
or
xor
cmp
xor
pop
jne
xchg
cmp
sub
stos
clc
xor
scas
scas
add
mov
and
ss
mov
mov
lds
test
push
dec
mov
movsl
cwtl
loopne
inc
test
add
xchg
mov
hlt
pop
xorb
sbb
push
pop
repz
push
mov
inc
jmp
ret
lods
stos
lret
aam
cs
xabort
ss
push
inc
bnd
jp
incb
push
aas
cltd
into
faddl
lds
mov
cmpsl
and
pop
pusha
push
in
mov
stos
lods
bound
sbb
mov
mov
es
pop
and
or
sub
inc
mov
movsl
int
mov
js
in
add
cltd
lret
inc
push
les
push
dec
xor
push
aaa
cmpsl
aam
ljmp
rolb
clc
mov
lods
sub
xlat
loopne
cli
xor
mov
ret
mov
or
mov
ds
stc
or
cmp
nop
xor
ja
fbstp
lret
lds
xor
xor
sahf
adc
sbb
and
popf
xchg
push
xor
push
mov
dec
sbb
jno
cmp
jb
mov
mov
outsb
jg
inc
cs
shlb
mov
sarb
stos
xor
ret
push
xor
mov
decl
and
and
sub
sbb
lcall
jno
inc
pop
sti
sahf
ret
jl
add
movb
dec
pushf
scas
mov
sahf
mov
jno
mov
jle
test
cmpsb
hlt
adc
inc
shr
cmp
in
mov
sbb
dec
out
sub
loop
and
mov
sub
push
sbb
pop
test
into
xor
js
stc
sub
lods
push
mov
sub
sbb
movsb
out
sbb
xor
xor
jge
inc
adc
xlat
je
dec
mov
mov
xchg
mov
mov
ds
fldenv
and
sbb
xlat
jae
sbb
scas
insl
test
jecxz
ret
and
lahf
dec
jl
mov
sbb
jnp
jg
movsb
adc
scas
daa
push
xchg
jne
lea
inc
shl
ds
nop
into
pop
andl
or
test
fs
fwait
lcallw
pop
dec
mov
sbb
je
cmp
nop
mov
divb
mov
and
sub
arpl
mov
mov
push
adc
dec
inc
fwait
mov
sub
ds
in
movsl
out
xor
jecxz
bound
cmp
and
lret
lret
pop
enter
scas
hlt
in
jg
or
cmc
sub
ss
mov
vmaxpd
cmpsl
sbb
pop
inc
insb
xlat
fs
in
lcall
add
sti
adc
inc
ret
shlb
js
ss
mov
and
adc
bound
add
fists
xlat
popf
cmp
sbb
fsubrs
popa
hlt
jle
subl
and
xor
sbb
jno
inc
push
xor
mov
test
jge
pop
xchg
mov
imul
xchg
sbb
cld
je
popa
sbb
xor
rclb
dec
or
mov
nop
mov
movsb
cmp
pop
movsb
and
call
fsubs
repz
mov
addr16
notb
mov
dec
arpl
movsb
pushf
mov
push
sub
xlat
gs
push
popf
inc
jmp
push
jge
insl
mov
pop
ds
aas
in
mov
cmpsl
pop
jmp
lds
cmp
sahf
inc
inc
mov
fdivl
mov
or
adc
in
jbe
or
lret
sbb
lret
int3
arpl
popf
lret
pop
and
and
ss
std
movsl
push
push
mov
or
cmp
adc
cmc
mov
add
es
repz
add
dec
in
add
pop
dec
jns
and
xor
push
inc
imul
test
mov
cmpsb
enter
out
xor
notb
aaa
std
loop
push
and
dec
add
daa
gs
ss
xchg
fdivs
jo
xor
ror
mov
jmp
add
ret
push
jl
jne
popf
sbb
outsb
sub
outsb
adc
fucomp
lret
inc
push
mov
es
daa
push
lcall
jg
stc
sar
scas
loopne
das
jno
sbb
int3
adc
sub
push
data16
dec
cs
sbbl
jge
push
cmpsl
inc
jo
das
xchg
adc
jbe
or
mov
sub
pop
cltd
fs
lcall
inc
push
in
mov
test
movsl
test
sbb
cmovo
das
sub
pushl
dec
sub
xchg
fstpt
les
stc
mov
nop
mov
and
test
xor
test
inc
dec
in
pop
lock
js
mov
and
movsb
cmp
movsl
shl
data16
or
fstpt
mov
call
cmp
xor
pop
add
int3
adc
adc
adcb
sbb
xchg
std
inc
xor
mov
inc
ja
icebp
and
ljmp
in
inc
loop
mov
mov
push
aaa
mov
push
into
xor
fldenv
imul
add
pop
add
inc
inc
xchg
loopne
iret
movsb
inc
fisttpll
mov
loope
mov
sub
lock
adc
sub
test
icebp
shll
daa
outsb
notb
test
sub
bound
cmp
pusha
sub
loopne
adcl
jae
lcall
sbb
icebp
lea
xor
pop
xor
jae
mov
lds
xor
jne
mov
in
mov
xchg
pop
jmp
aas
mov
push
shr
mov
pop
lret
and
cwtl
cmovnp
xor
inc
and
sbb
mov
int
cmpsl
in
xor
pop
ljmp
icebp
inc
loope
push
lock
jne
sti
cmc
inc
jo
mov
flds
add
inc
fadds
shlb
push
and
popa
pop
sub
gs
push
jp
loope
xor
leave
and
or
mov
inc
mov
cmc
xchg
push
jne
sub
ds
pop
inc
adc
cld
jbe
lds
fstl
in
mov
aad
inc
adc
adc
mov
mov
and
daa
ja
mov
jne
repnz
mov
jecxz
and
imul
xor
pop
sbb
insl
cli
repz
mov
jns
sub
aad
dec
sti
pop
bound
loop
xor
orl
decl
and
aas
push
dec
inc
fs
movsl
ds
adc
inc
movsb
lret
and
jns
mov
mov
jmp
push
dec
outsb
inc
iret
mov
add
inc
lds
les
pop
add
popf
cmp
mov
pop
lods
repz
add
cmc
dec
movsl
pushf
or
clc
adc
aad
and
and
lret
add
and
or
lock
push
jnp
js
sub
in
jp
cmp
inc
movb
add
jo
adc
push
sub
in
bound
mov
xor
out
fstpl
fwait
inc
jmp
les
fs
movsl
mov
cld
fdivr
gs
cwtl
cltd
bound
ja
inc
inc
out
int3
xchg
pop
sbb
cld
xor
movsl
add
xchg
inc
mov
mov
jp
fadd
or
lock
xchg
sbb
mov
cmp
xlat
js
add
and
jns
cmp
bound
cmp
add
xlat
sub
pop
xchg
popf
movsl
cmpsl
jecxz
mov
push
lds
adc
push
aas
sub
inc
ret
xor
addr16
inc
xchg
lret
or
add
in
pop
fstpt
adc
push
movsl
mov
ljmp
cmp
data16
cmpsl
jp
sub
xchg
mov
jmp
sbb
clc
cmpsl
sbb
push
scas
pop
je
sbb
data16
xchg
add
xor
leave
in
sbb
push
dec
add
daa
in
int
adc
xor
xchg
arpl
aad
cwtl
ret
cltd
leave
mov
popf
cld
jle
add
jg
inc
movsl
and
gs
or
cmpsl
xor
cmp
ja
or
xor
fdiv
jl
or
push
shl
xor
cltd
sbb
movsb
insb
xor
dec
xchg
int3
inc
inc
lods
pop
cld
dec
lds
mov
sub
fstpl
scas
jae
jl
in
and
mov
sti
cmp
jl
daa
inc
std
mov
mov
insb
jmp
xchg
xchg
idiv
sbb
popa
movsb
adc
arpl
or
or
ds
push
sub
xchg
jmp
lock
aaa
inc
push
fcomi
jecxz
iret
pop
push
xor
or
xchg
stos
and
mov
adc
icebp
and
add
cmp
and
scas
popa
sahf
mov
mov
and
filds
xchg
xor
out
cs
cmp
dec
adc
jb
inc
dec
popf
pusha
int
pop
add
in
bound
sarb
pop
in
fsubr
movsb
aas
cmp
dec
movsb
and
jbe
stc
sub
inc
push
mov
movsl
pop
and
push
cmpsl
dec
fs
xchg
inc
adc
call
adc
sub
add
add
push
pushf
adc
pop
inc
push
aad
lea
push
pop
cmpsl
adc
fnsave
and
lock
pushf
inc
push
xor
mov
mov
movsb
inc
inc
cmpsl
stos
sbb
lods
movsl
mov
pop
sti
call
xor
daa
push
loopne
cwtl
sub
loope
or
test
addr16
nop
aad
jnp
movsl
bound
and
mov
inc
push
xchg
imul
xchg
sub
xor
in
pop
mov
adc
movsl
fcoms
cli
gs
fwait
adc
fwait
cmp
outsb
lock
push
mov
push
incl
push
xchg
pop
mov
push
xlat
fistpl
adc
add
xor
inc
add
movsl
mov
pop
lret
unpcklps
and
and
cld
jmp
pop
push
imull
daa
repnz
fdivl
ljmp
jno
je
mov
sbb
mov
hlt
cmp
mov
andl
ds
aad
ljmp
movsl
adc
sbb
pop
cmp
ss
or
insb
push
sahf
out
pop
test
or
cmp
fcoms
xchg
mov
jne
fisubrl
stos
incb
int3
jnp
shld
inc
sub
jmp
and
rcll
icebp
sbb
stc
icebp
rclb
push
out
out
xor
and
lds
test
aaa
nop
pop
stc
mov
aam
out
das
es
sbb
jg
xchg
scas
mov
xor
mov
push
mov
sbb
sbb
in
jge
push
inc
icebp
inc
sub
out
movsb
mov
mov
scas
mov
inc
pop
orl
addl
sub
mov
sbb
iret
cmp
bound
mov
jge
xchg
shll
pop
fidivs
dec
fidivrs
inc
mov
add
pop
fstpl
iret
das
dec
out
or
addr16
fs
adc
mov
jmp
insl
inc
inc
adc
or
cmpsl
cmp
aad
loope
inc
sub
mov
push
ds
out
mulb
add
call
push
xor
loop
lds
and
push
mov
dec
add
rcrl
cmc
jne
sub
pop
aam
cli
and
cmpsl
push
mov
ret
aam
or
add
jge
add
rcr
dec
or
enter
adc
out
cmp
fcoml
icebp
lds
jmp
inc
test
jo
dec
int3
fcomp
jo
inc
je
cmp
and
stc
movsb
lret
dec
jnp
and
data16
mov
mov
popa
dec
out
movsl
mov
cmp
call
in
iret
mov
pop
pushf
lret
sbb
inc
mov
inc
xchg
imul
or
cmp
inc
and
insl
cmp
lock
push
dec
sbb
push
idivb
inc
cmpsl
pop
out
scas
xor
lods
shlb
sbb
or
inc
jmp
repnz
jmp
pop
sbb
repnz
jle
lods
out
ret
adc
cmc
fucomip
jecxz
pop
out
and
movsb
or
mov
in
in
lea
ljmp
inc
popa
push
in
adc
ss
icebp
movsl
and
or
outsb
ds
insl
sub
xor
mov
mov
mov
cmp
lods
sub
mov
fistl
inc
stc
mov
fldt
adc
cs
loopne
add
lods
xchg
lcall
js
jmp
clc
add
cmc
lods
mov
mov
inc
popa
mov
les
mov
and
sbb
xor
jle
movsl
and
ficompl
mov
mov
cmpsl
lret
sbb
jmp
mov
mov
inc
mov
je
insb
rcl
stc
lahf
mov
loope
jge
inc
adc
xchg
sub
lahf
jmp
in
sbb
pushf
and
mov
mov
or
jecxz,pn
mov
iret
cmp
lds
daa
or
adc
int3
jle
jmp
jecxz
inc
lcall
cs
adc
pop
fwait
insl
fcompl
mov
loope
repz
out
xlat
cs
maskmovq
mull
enter
les
adc
mov
movsl
lock
loop
inc
pop
mov
mov
pop
jae
imul
dec
lcall
inc
and
cmp
mov
shll
jo
sbb
and
fimull
xchg
cltd
scas
je
and
cmp
sbb
push
mov
jno
daa
enter
aaa
push
enter
adc
sbbl
sahf
pusha
pop
jne
lret
cmp
inc
cmpsb
dec
xchg
stc
dec
jns
fnstsw
sbb
out
cmpsl
inc
leave
mov
mov
ljmp
mov
loopne
xor
push
and
mov
mov
xchg
mov
sub
jne
idiv
mov
fucom
pop
cmp
or
movsl
or
jmp
xor
mov
sbb
std
lods
ja
scas
sub
in
lahf
or
sub
jmp
in
pop
lock
ret
ss
add
call
dec
cmpsb
push
fisubs
test
cli
sti
ret
push
lock
jg
frstor
jbe
stc
cs
and
jae
aam
cmpsb
mov
repnz
sbb
shr
mov
lcall
aas
stc
or
xor
fcomps
inc
rolb
jmp
sbb
fnstsw
lock
inc
fstl
inc
mov
aam
dec
mov
push
mov
scas
or
mov
sar
mov
push
xor
xor
mov
inc
fnstsw
cmp
movsl
cmc
ret
mov
add
out
imul
pusha
jle
mov
outsl
js
or
mov
in
divb
lahf
adc
stos
enter
pusha
icebp
mov
dec
call
xchg
add
sar
test
rorl
out
fsts
mov
notb
jbe
cwtl
sahf
xor
aad
pusha
and
int3
mov
int
xchg
or
mov
mov
inc
dec
mov
pop
jns
push
pushl
pop
and
adc
sub
dec
test
inc
movsb
movsl
mov
les
pop
movsl
mov
pop
insl
jp
push
stos
ja
or
sbb
cmc
test
inc
lds
pop
ror
lret
mov
sbb
lods
shrb
push
jo
jecxz
sub
push
sbbl
xchg
je
mov
push
xchg
push
mov
xor
cld
cmpsl
sub
sub
push
jne,pt
fcompl
pop
rcr
inc
insl
mov
out
mov
in
inc
xchg
dec
sub
cmp
jb
add
icebp
adc
dec
fsubl
or
jmp
repnz
nop
xor
xchg
adc
jns
lods
pop
hlt
les
cmp
cmpsl
sbbb
and
add
mov
imul
mov
sbb
or
or
aaa
fcmovnb
cld
adc
loop
movsb
jp
sbb
cmp
movsl
mov
call
dec
inc
mov
jge
pushf
rcll
dec
jb
inc
leave
add
jns
aad
pop
aas
inc
sub
notl
pop
nop
and
sub
push
movsl
loopne
adc
outsb
xor
add
gs
cltd
je
mov
lcall
xlat
add
cmpsl
push
sbb
mov
and
mov
pop
jmp
push
arpl
aad
xchg
mov
repz
lret
cmpsl
pop
add
inc
movsb
js
lods
mov
cmp
nop
lods
mov
imul
and
test
std
xchg
inc
add
movsl
gs
sub
inc
xor
out
add
push
or
and
dec
mov
pop
pop
nop
push
mov
jmp
mov
dec
lret
les
sub
or
fs
movsl
popf
dec
mov
fistl
and
aad
ret
mov
loope
pop
inc
and
adc
push
jo
inc
orl
xchg
mov
stc
cli
xor
or
push
out
fisttps
and
adc
inc
xor
jno
les
cmpsl
cmp
mov
aaa
inc
mov
xchg
xchg
xor
sbb
popa
test
incb
push
add
adc
or
aam
mov
dec
dec
push
pusha
sbb
dec
xor
xor
repnz
mov
mov
clc
data16
out
test
shll
push
enter
testl
dec
sbb
int3
inc
into
sbb
mov
push
pop
popa
xor
pop
imul
aas
pop
dec
lcall
lret
les
xor
inc
pop
js
pop
mov
cli
jle
and
add
int
sbb
xor
and
fsubrs
adcl
pop
movsl
sbb
bts
pop
andb
int3
xor
and
ja
inc
mov
ret
cltd
pop
imul
leave
addl
pop
add
int
mov
push
mov
test
xchg
dec
jns
sbb
xchg
adc
sahf
pop
dec
aas
mov
insl
push
xchg
inc
popf
push
mov
das
sub
popf
push
outsb
andl
xchg
add
lock
jmp
push
mov
faddl
mov
outsl
leave
mov
mov
jnp
movsl
or
cmc
mov
test
push
jbe
xchg
inc
jmp
pop
sub
es
mov
out
je
into
std
and
cmovno
movsl
test
fs
cmc
xchg
cmc
pop
lds
aam
mov
test
shll
cli
push
cmpsl
in
cmp
pop
and
mov
cmp
movsl
test
jae
cmp
inc
clc
pop
addr16
int3
or
adc
mov
pop
xor
jns
push
lret
enter
jg
cs
mov
adc
int3
mov
sti
orb
aad
das
lock
and
in
jl
jle
jnp
pop
sti
adcb
enter
mov
rcll
mov
leave
push
ss
sub
fwait
in
xchg
test
inc
dec
inc
out
and
or
xlat
dec
inc
jecxz
push
jo
pop
test
push
rclb
loope
addb
or
in
push
xor
icebp
inc
cmpsl
shrl
aaa
sbb
or
cmp
or
mov
xor
add
lea
inc
lods
jg
es
push
cmc
pushf
testb
inc
sbb
lahf
out
jbe
ds
mov
pop
xor
mov
xchg
mov
andl
jl
leave
push
adc
loop
mov
es
dec
mov
in
call
inc
xchg
icebp
imulw
or
push
inc
inc
ror
cmp
out
sub
sub
xchg
mov
sub
inc
sbb
push
out
mov
in
shlb
sub
ljmp
ds
sbb
sub
cmp
mov
xor
add
dec
push
rcll
pusha
inc
and
inc
mul
shl
cmp
into
jne
cmc
in
lods
inc
fnstenv
filds
orb
cmp
sbb
outsl
mov
mov
jo
shrb
inc
and
cmpsl
sarl
inc
push
icebp
sarb
inc
inc
daa
push
les
lea
fld
pop
sub
and
pop
sbb
adc
cmp
inc
ljmp
inc
addr16
in
and
xchg
mov
es
test
xchg
out
inc
rorl
je
in
aas
mov
xor
sbb
jmp
add
aad
push
or
aas
stos
incl
cmc
jbe
ds
test
pop
inc
inc
cmp
dec
push
cwtl
mov
es
xor
test
test
stc
mov
push
push
arpl
inc
data16
cmp
push
inc
popf
into
sti
scas
stos
inc
aaa
cwtl
fsts
cmc
int3
cmp
cmpb
int
lret
inc
sbb
push
and
sbb
or
jbe
ds
or
fs
mov
jmp
lods
ljmp
inc
popa
mov
in
scas
fimuls
sub
fimuls
inc
repz
out
inc
pop
push
pop
inc
sarl
clc
daa
insl
mov
hlt
lock
rorb
push
mov
cmc
into
sub
das
ljmp
mov
sbb
lods
add
add
jmp
add
push
and
dec
inc
shlw
in
mov
rorb
inc
popf
add
out
sub
push
jge
sar
inc
inc
or
les
xor
idivl
ret
inc
mov
add
push
aas
or
xor
xorb
inc
das
jbe
inc
ds
inc
jnp
andl
xor
push
push
fisttps
cmp
mov
out
sbb
hlt
std
cltd
repnz
imul
inc
lahf
sar
inc
ret
cmp
pop
out
add
fnstcw
xor
cmp
pop
add
inc
xchg
test
xchg
mov
movsl
add
and
lahf
arpl
inc
xchg
negb
jg
in
cmpsl
inc
mov
xchg
cmp
inc
outsb
jecxz
or
test
mov
shrl
xchg
jp
and
fwait
shrb
or
xchg
cmp
pop
push
negl
idivb
or
mov
movsl
xchg
inc
cmp
adc
xchg
mov
fidivrl
sub
xchg
aad
stos
inc
push
cld
push
jns
mov
into
inc
xchg
and
repz
or
repnz
pushf
inc
jl
dec
inc
or
pop
das
inc
pop
popa
sub
add
out
lret
sahf
int3
je
sarb
and
mov
or
jg
or
push
pop
scas
testl
inc
sub
hlt
clc
addb
dec
adc
mov
sbb
sub
or
pop
test
inc
add
or
mov
jmp
hlt
or
stc
push
int
xor
ja
repz
pop
in
and
adc
sbb
sub
leave
aam
insl
sub
call
std
push
inc
xor
inc
adc
push
popf
mov
cmp
cmpsl
mov
inc
hlt
cmp
xchg
dec
out
inc
pusha
mov
cmpsb
or
int3
inc
push
mov
ljmp
jp
in
cmp
testl
clc
lea
inc
mov
pushf
ja
std
cld
or
inc
sub
es
mov
std
sub
jbe
or
inc
push
insl
inc
sbb
mov
xchg
arpl
inc
jecxz
adc
repnz
repz
push
into
sub
add
out
test
sbb
jmp
addr16
mov
add
test
inc
imul
xor
sarb
jns
adc
out
iret
sub
or
sbb
pop
cmp
fildl
adc
sub
dec
daa
inc
inc
stos
dec
in
add
jb
cmp
sbb
cmpsb
roll
enter
inc
lcall
sbb
shrb
cwtl
dec
lods
mov
or
ljmp
push
mov
repnz
mov
dec
cli
inc
mov
push
sub
or
inc
push
scas
fstl
push
mov
int
idivl
adcl
les
sbb
dec
adcb
xlat
jns
inc
aaa
loopne
mov
xchg
inc
push
gs
jp
cmp
or
jmp
and
ds
lahf
fisttps
sub
add
pop
add
inc
aas
movb
popa
ret
inc
sbb
clc
popf
xor
daa
dec
lret
ret
and
inc
mov
adc
data16
and
or
std
inc
in
subps
rclb
cld
pusha
pusha
cltd
sti
sbb
inc
mov
mov
or
xor
sti
and
std
sub
enter
stos
mov
lea
inc
insb
fwait
adc
mov
fldl
adc
nop
popl
xor
pop
arpl
aaa
sub
xor
fstpl
test
test
sub
xchg
jno
xlat
inc
loop
mov
and
mov
push
popf
sti
arpl
xchg
add
outsl
lods
stc
sahf
mov
fwait
mov
xchg
dec
xor
daa
jge
dec
inc
inc
push
dec
sahf
out
push
clc
inc
pop
cmp
inc
xchg
or
fimull
std
lahf
or
imul
mov
mov
and
and
xor
das
inc
xchg
mov
inc
roll
lea
inc
std
dec
inc
pop
das
xchg
test
subl
inc
mov
ret
inc
andb
dec
push
pop
fs
fdivrs
mov
loopne
insb
inc
sub
pushl
inc
pop
iret
cmp
cmp
mov
sbb
xor
xlat
inc
or
test
xchg
int
xor
mov
imul
pop
inc
popa
dec
pusha
jnp
imul
icebp
mov
cmpsl
mov
cli
mov
or
insb
gs
lods
pop
add
jg
sti
push
mov
mov
cli
popa
adc
ret
xor
inc
mulb
xchg
or
negl
pop
std
gs
or
mov
aaa
mov
jnp
inc
xchg
cmp
jb
or
ret
sti
mull
insb
xor
inc
jbe,pt
or
add
jg
inc
mov
dec
xchg
and
repz
insb
inc
aad
fwait
inc
xchg
jl
inc
lahf
into
sbb
inc
mov
push
gs
inc
push
cmp
addr16
repnz
ret
pop
std
xor
push
inc
js
inc
cld
test
mov
in
inc
sub
or
lcall
fwait
inc
xor
pop
out
lds
xor
sub
jmp
add
xchg
lret
pop
inc
iret
cmp
clc
in
xor
inc
repz
cwtl
xor
mov
fcmovne
sbb
xor
dec
inc
in
mov
fs
aaa
inc
imul
inc
pop
xchg
cmp
pop
subl
mov
cmp
inc
btl
ss
mov
adc
mov
mov
jge
lds
push
data16
imul
mov
pop
mov
or
mov
cmp
sbb
std
sbb
call
incl
xchg
inc
fcmovb
loop
lcall
push
inc
xchg
sahf
xlat
int3
xchg
loopne
popl
xor
repnz
repz
and
scas
sbb
into
or
rol
popa
test
daa
xchg
push
jp
cmp
sub
inc
inc
mov
repnz
sub
xlat
jge
inc
repz
sbb
push
inc
adc
dec
xchg
pop
mov
inc
mov
pop
inc
sbb
or
add
inc
mov
call
cmp
or
inc
mov
std
jmp
and
mov
or
cld
mov
in
lds
xchg
ds
repz
fnsave
out
inc
testb
pop
sbb
and
inc
xor
fneni(8087
or
add
cmpsl
mov
aad
mov
shr
inc
int
lea
fsts
pop
xor
fs
dec
sub
popf
inc
adc
leave
pushf
jne
push
imul
ficoml
inc
lret
sbb
xchg
xchg
inc
dec
jns
sahf
out
and
mov
adc
hlt
data16
mov
pushf
xchg
aaa
sbb
data16
mov
xchg
xchg
in
cmpsb
js
jb
test
xor
out
arpl
sbb
and
lahf
aas
sbb
cmp
outsb
cmp
xchg
inc
mov
clc
lret
inc
push
pop
mov
dec
inc
insb
gs
inc
in
movsb
add
lret
in
pushf
inc
stos
jnp
mov
inc
call
jp
sbb
and
aad
inc
loopne
adc
jno
insb
add
movsb
scas
or
xor
mov
push
mov
pop
imul
dec
cmp
xor
into
push
out
or
sbb
lahf
test
cld
adc
rclb
lea
adc
inc
pop
push
stc
rorl
sbb
mov
mov
cmp
fistpll
xchg
sub
xor
cmpsb
out
addr16
lds
sbb
mov
sub
inc
insl
jae
lea
stos
sbb
inc
insb
in
mov
xchg
stc
insb
in
inc
mov
xorb
popa
pusha
popf
ror
shrb
inc
dec
cld
gs
xchg
icebp
xor
add
lret
add
add
or
inc
scas
push
inc
inc
inc
ret
jl
leave
out
cmp
or
inc
insb
in
xor
call
cmc
std
xorb
rolb
lea
roll
imul
testl
inc
rcrl
pushf
fwait
sub
mov
addr16
inc
sahf
jns
cmp
inc
adc
jl
cmp
cs
mov
jp
add
cwtl
mov
fs
sbb
or
inc
fstpl
push
inc
lds
test
or
xchg
inc
dec
fs
push
mov
aam
xchg
sub
push
xor
pusha
popa
dec
add
add
xchg
pop
xchg
test
or
sbb
pop
jo
jle
testb
sub
jl
test
inc
inc
jo
jno
jecxz
xchg
adc
lds
jbe
mov
inc
sub
jnp
adc
insb
jg
sub
leave
daa
sub
or
pop
inc
cmpsb
push
mov
lds
and
int
iret
cmp
pop
sub
xor
cmp
into
je
cmp
add
js
je
inc
dec
push
xchg
jbe
int
mov
inc
mov
push
je
es
stos
insb
leave
fs
aas
pusha
jmp
inc
inc
cs
fisubl
sbb
aaa
hlt
xchg
daa
aad
xorb
call
pusha
int
movb
mov
inc
push
pop
jo
pop
pop
es
push
jg
ja
outsl
imul
fldl
jns
ljmp
push
orb
add
das
or
lahf
cmp
push
add
ret
dec
aam
push
lds
jo
pop
aad
push
stos
sub
dec
fimull
js
push
inc
icebp
cmc
xchg
mov
std
jo
sti
dec
mov
test
inc
mov
sarl
insb
push
rcll
jl
pop
xor
ss
xchg
pop
je
outsl
xorb
movl
dec
mov
sub
add
pusha
test
addb
push
or
cli
aad
je
shrl
loope
pop
lds
insb
std
push
fs
inc
or
es
push
jg
aad
push
mov
iret
dec
sub
xor
movsb
pop
xchg
cmpsb
aad
test
dec
shll
mov
pop
xor
inc
bt
push
cmp
mov
push
and
cmc
push
bswap
push
lea
add
mov
pushf
mov
clc
rcl
mov
sbb
sub
jge
cmp
sub
not
push
call
test
add
bt
movzwl
mov
shr
test
shrd
mov
clc
mov
pushf
cmp
add
jmp
mov
call
mov
jmp
pushf
call
call
ror
cmp
push
btr
push
add
sar
push
lea
jmp
add
int
push
mov
je
ret
pop
lret
mov
xchg
and
ss
and
imul
sub
test
addl
in
enter
inc
add
sub
push
shl
cmp
push
subl
sbb
add
mov
in
nop
mov
pop
cltd
inc
fs
lcall
and
das
mov
mov
jae
imul
mov
sarb
lock
ds
jo
sub
movl
inc
jae
imul
mov
popa
push
mov
dec
aaa
and
lds
lods
push
aad
in
push
rorl
jecxz
cmp
jp
jo
pop
pusha
arpl
jle
call
and
pusha
lea
cmpb
sub
rol
mov
and
add
popa
ror
pop
mov
mov
addl
shl
sar
sub
not
call
mov
dec
mov
push
int
into
push
add
lods
std
lds
sbb
ffree
in
jecxz
int
sub
gs
mov
out
cmp
int
mov
add
insl
into
mov
mov
lahf
jg
loope
movsb
movsl
sub
jge
xor
jg
jl
sub
movsb
jmp
mov
bnd
lea
loopne
mov
jb
sub
lcall
test
scas
xor
aad
xchg
pop
mov
and
scas
rorl
push
icebp
aaa
cmp
idivl
adc
out
or
pop
push
loopne
add
insl
sub
out
push
fnstsw
jmp
sbb
subl
push
jmp
cmpsl
dec
mov
jg
jae
jecxz
add
mov
fwait
mov
mov
cmp
push
mov
or
xor
push
cmpsb
aam
and
loope
mov
pop
push
fsubl
and
test
fsubs
jbe
enter
pushf
sub
or
xlat
adc
xchg
pop
xchg
test
test
jle
ret
test
add
jne
jmp
xor
cmp
or
ja
or
sub
sbb
sbb
push
sbb
gs
mov
sub
out
stos
mov
in
aaa
pop
fstl
aaa
jno
push
xchg
stos
or
push
push
xchg
imul
mov
or
cmp
push
popa
pop
mov
imul
hlt
loop
mov
xchg
sbb
lods
mov
or
push
sbb
jbe
pop
jg
inc
xchg
mov
lods
aas
mov
fdiv
adc
cmp
push
jl
fisubl
mov
jae
movsl
pusha
mov
push
movl
pusha
pushf
movl
pushf
mov
lea
jmp
sbbb
data16
mov
pushf
les
inc
enter
mov
into
inc
testl
cld
outsb
pop
sbb
push
hlt
or
dec
ret
xchg
push
imul
fisubrl
push
mov
push
pop
iret
push
in
les
sbb
bound
pushl
xor
sbb
iret
push
ficompl
mov
lock
add
cwtl
push
pusha
dec
push
and
xor
mov
loope
mov
ret
sbb
add
pop
sbb
mov
push
out
sbb
std
push
and
pop
mov
inc
xchg
sub
or
inc
fmuls
daa
pop
test
sub
int3
cld
dec
xchg
cmp
sub
pop
and
aam
xor
add
pushf
bswap
push
lret
jae
and
leave
push
cli
xchg
xchg
or
push
call
in
adc
push
fwait
js
xor
sbb
jl
cmp
pushf
out
cs
inc
jp
xchg
cltd
shll
lock
push
fsubrl
inc
dec
push
fsubrs
out
or
pop
mov
mov
scas
sub
adc
mov
jmp
jno
in
sbb
inc
lods
push
dec
sbb
outsb
mov
pop
sub
mov
rcll
cmpsb
sbb
insl
xor
stc
sub
cmp
imul
inc
dec
ficoms
fimuls
jae
fwait
mov
jbe
mov
pop
push
fwait
jns
scas
cmp
pop
pop
sbb
or
push
xchg
in
mov
jmp
and
mov
test
rorb
insl
mov
sub
imul
adc
push
dec
push
in
int
les
mov
dec
mov
cld
push
pop
lahf
ljmp
sbb
addr16
loopne
daa
je
cmp
ret
cmc
and
sbb
mov
in
and
inc
sbb
push
stos
dec
dec
fsubp
insb
std
adc
repnz
add
das
and
mov
xchg
imul
iret
leave
les
xor
out
mov
mov
pop
in
add
shr
dec
inc
push
fs
aas
jnp
dec
and
cs
or
sub
mov
dec
inc
push
shll
outsb
test
push
xchg
in
adc
in
lea
mov
sbb
or
or
andl
inc
shll
ucomiss
adc
loop
add
daa
cld
out
pop
jge
int
push
dec
mov
lods
sbb
inc
sbb
rcl
testb
push
pcmpgtd
push
sub
mov
mov
rolb
push
push
lods
les
xor
jl
pop
decb
cli
adc
clc
xchg
icebp
jbe
mov
or
repnz
inc
sti
or
das
mov
js
push
add
or
daa
bound
push
add
movsl
ss
ret
sbb
outsl
rolb
test
ja
stc
les
cld
xor
mov
test
in
jns
jno
lahf
jg
inc
jns
mov
adc
test
dec
and
sub
lahf
dec
roll
and
in
xchg
sbb
inc
xchg
mov
es
rol
je
dec
pushf
xlat
add
mov
mov
lahf
jbe
push
popa
mov
int
mov
or
enter
mov
cmp
fldt
xor
ret
jmp
sub
jl
decl
xchg
xor
aad
es
aad
out
lds
out
shll
jle
dec
bound
es
ret
in
out
push
gs
cmp
cli
xchg
cmp
insl
sub
mov
daa
repz
mov
movw
pusha
inc
pushf
pushf
movb
lea
jmp
pusha
call
movl
pushf
push
push
push
lea
jmp
movl
pushf
push
push
jmp
and
int3
in
cmp
lods
int3
into
lock
insb
cmpl
lods
insb
or
movsl
stos
js
push
push
push
punpckldq
dec
int3
jecxz
cmp
sub
call
jg
push
lret
cmp
js
add
bound
sbb
jnp
push
sbb
mov
jbe
mov
daa
fnsave
pop
cs
sub
sub
fcmovnb
nop
mov
xlat
aam
mov
jl
cltd
mov
mov
mov
sbb
stc
scas
jnp
test
jo
iret
mov
mov
mov
and
jne
movzbw
call
sub
jl
pushf
or
movl
pusha
movw
lea
je
aam
rcl
cmp
push
xor
aaa
shl
pushf
mov
xor
btc
pop
mov
neg
sub
shr
shr
add
rcr
dec
mov
test
clc
or
pusha
jmp
movl
pushf
mov
call
cmp
cmp
movzbw
cwtl
lea
lea
movb
cwtl
mov
pushf
pusha
pushf
push
lea
ja
pusha
call
setne
dec
mov
jmp
lea
je
jmp
sub
lahf
test
dec
out
or
nop
add
fisubrl
sahf
adc
mov
mov
cmp
add
ret
lods
les
pushf
dec
cmp
lods
pusha
fcomps
popf
mov
sub
pop
pushf
pop
loop
xchg
sub
mov
lahf
pop
mov
in
test
mov
inc
repz
loop
dec
rorb
push
popf
fiadds
cmp
jmp
push
call
jmp
lcall
data16
iret
popa
fistps
andb
sbb
push
cs
xchg
pop
push
pop
jecxz
mov
leave
insb
addr16
mov
cmp
jmp
popl
subl
push
sub
std
xor
loopne
mov
or
aad
push
or
add
out
fnsave
imul
mov
jne
dec
sarl
cmpsb
outsl
mov
mov
adc
inc
jle
aaa
mov
mov
fdivl
outsl
mov
sub
push
or
sahf
push
ljmp
les
lods
lret
or
xor
inc
punpcklbw
mov
fs
shrl
inc
aad
lock
sti
les
and
cmp
xchg
mov
and
pop
add
jns
popa
sub
sbb
adc
gs
xorl
xchg
cmpl
or
xchg
and
lret
xor
test
or
push
push
into
push
jns
mov
test
push
es
and
xchg
addb
mov
imul
mov
cmpsl
xor
loopne
inc
std
xor
xchg
xchg
xor
lea
jae
movzbw
inc
mov
sbb
mov
ror
btc
call
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
pop
add
aaa
jns
dec
cmpsb
jbe
sub
aad
xchg
cmpsl
aaa
sub
adc
jmp
mov
das
mov
iret
dec
inc
ss
xor
mov
sbb
jne
inc
jae
jae
pop
mov
and
in
jmp
ror
xor
push
adc
stos
lods
cmpb
bound
jne
stc
adc
push
push
push
out
lret
xor
dec
outsb
sbb
jb
mov
sub
pop
adc
dec
xor
ret
cmc
jle
xchg
and
push
cmp
push
dec
and
popf
sub
fs
in
adc
sbb
dec
and
mov
mov
ss
adc
mov
lahf
notb
add
out
out
inc
out
in
jp
mov
es
push
shlb
or
sub
int3
fs
or
leave
inc
dec
call
mov
mov
mov
mov
gs
in
loope
adc
mov
aas
add
cld
jmp
sub
pop
jmp
add
int3
sbb
call
cltd
xlat
mov
cmpsl
pop
ret
jno
notb
iret
movsl
out
sub
xchg
int
test
cmpsl
imul
pusha
fs
push
xor
add
and
push
mov
rcrl
out
adc
dec
dec
inc
mov
mov
ret
into
mov
jnp
sub
pop
test
mov
pop
sub
lcall
cmp
pop
mov
pop
in
adc
sub
xchg
mov
hlt
or
and
mov
test
push
sti
js
divl
nop
pop
add
pop
subl
out
mov
fimull
fadd
cmp
xor
sub
inc
pop
xchg
cmp
mov
mov
jle
mov
movsb
cmp
rcrb
adc
push
daa
shrl
mov
scas
sbb
sbb
add
mov
jl
jbe
mov
jo
or
jp
cmp
jae
sub
jae
lods
pop
inc
sub
addl
or
test
stc
push
and
or
and
ret
fcom
cmp
mov
popa
iret
cli
das
fwait
jp,pn
adc
mov
movups
fwait
and
les
sbb
xchg
and
stos
daa
sub
xor
loopne
mov
cs
lcall
std
int3
xor
sub
test
test
leave
jnp
insl
fucomp
mov
into
scas
out
add
pop
pushf
sbb
jmp
call
push
or
adc
test
add
and
test
jae
stos
adc
push
cmc
repz
xor
mov
sbb
jns
stos
lretw
xchg
ss
dec
insb
in
mov
sbb
cmp
and
lods
mov
or
cs
pcmpeqb
out
ss
ret
mov
xchg
test
cmp
cwtl
addb
mov
inc
push
and
dec
ljmp
rcrl
inc
mov
outsb
loop
xchg
cmp
test
fdivrp
clc
cmp
test
andl
sub
repz
aad
and
jle
fildll
test
push
aaa
inc
mov
xchg
ljmp
cmp
and
pop
cmpsl
mov
notb
arpl
lods
jb
and
jle
cmp
cmpsb
xor
pop
jmp
jge
push
das
int
enter
imul
out
in
popa
aam
mov
jns
xor
jp
lea
lock
arpl
aad
je
and
push
test
or
jge
mov
sbb
test
pushf
les
mov
adc
sbbb
cmp
sbb
fidivrs
push
rclb
sub
pushf
sub
adc
popa
filds
cmpsb
aad
sbb
stos
mov
xor
pop
push
mov
mov
out
xor
sub
xchg
jbe
clc
push
jne
fsub
ret
pop
pop
mov
fimuls
es
mov
lret
jnp
imul
rcr
dec
adc
fucomp
imul
decb
push
sbbl
mov
pushf
out
stc
loope
arpl
push
shr
pop
mov
inc
sbb
sahf
xlat
fdivrs
inc
or
adc
test
adc
pop
or
add
iret
pop
ret
push
lock
mov
pusha
icebp
pop
dec
ret
lea
and
addr16
mov
fwait
movsb
ret
push
inc
add
push
and
sar
flds
pop
mov
cmc
cltd
dec
and
add
jp
xlat
das
xchg
test
aaa
cmc
push
xchg
sar
xor
icebp
iret
or
les
cltd
popa
nop
adc
adc
pop
push
push
inc
xchg
push
ret
mov
divl
or
mov
jnp
mov
scas
repnz
sbb
fldt
lods
sub
call
ret
scas
jae,pn
push
jo
or
push
push
jbe
inc
test
inc
fs
lea
mov
in
fmull
fistpll
out
roll
sbb
xchg
ds
pop
cli
jae
mov
push
sbb
xor
push
push
roll
jle
ljmp
std
ds
sbb
mov
rol
mov
lahf
jb
jno
sub
stos
cmp
mov
pop
inc
and
hlt
xor
movsl
movsb
sbb
into
fs
test
insl
mov
fldenv
jae
xchg
lea
rcr
mov
push
mov
xchg
imul
mov
in
cltd
lds
ffreep
pminub
loope
adc
and
inc
popl
mov
jne
sub
mov
sub
idiv
dec
call
jne
imul
mov
mov
pop
ds
shrl
iret
rorl
mov
mov
sbb
cmp
inc
ret
mov
sahf
ficomps
sub
ds
push
mov
push
cmp
lds
pusha
testb
ficompl
jnp,pn
arpl
loop
xor
jg
data16
shll
inc
test
int3
jbe
xchg
cli
aas
loopne
outsb
pop
adc
idivb
mov
sub
iret
jbe
insb
inc
loopne
cmp
repnz
push
loope
ja,pn
inc
jae
pop
lds
sbb
push
ds
dec
jle
pop
mov
push
repnz
clc
sub
mov
call
out
fadds
mov
cmp
cmp
cmp
xchg
bound
inc
sbb
mov
lea
sbb
addb
and
filds
rolb
je
sub
pop
sub
dec
bound
insb
test
inc
fidivrs
push
jb
loopne
mov
lods
add
fdivp
or
stc
xchg
cli
hlt
inc
xor
in
sbb
stos
aaa
sub
fnsave
pop
adc
or
sbbl
mov
pop
loop
cs
enter
add
into
dec
aad
je
loope
adc
mov
pop
sub
sti
std
mov
pop
in
xchg
js
xchg
in
add
sahf
push
sub
adc
daa
ja
js
andl
cmp
push
in
jg
sbb
fldl
push
bound
inc
bswap
sub
dec
sbb
add
dec
pushf
imul
out
xorb
leave
xlat
jl
mov
jb
mov
lcall
jo
jns
cmpsl
push
jnp
hlt
into
dec
fsubl
pop
je
pop
push
cmp
mov
call
inc
lret
js
out
icebp
ja
xchg
push
push
in
dec
rcrb
fiadds
xor
out
xchg
inc
mov
loope
push
pop
cmpb
and
push
out
std
test
jae
or
or
mov
loopne
dec
insl
cmc
imul
xchg
or
ljmp
mov
xchg
mov
mov
and
push
mov
cltd
inc
pop
aam
xchg
push
xor
sbb
jae
adcl
ljmp
mov
sbb
cwtl
and
out
jg
and
pop
shlb
sub
adc
ds
ja
test
fwait
dec
adc
xchg
or
enter
cmpsb
and
xor
out
push
rcrb
adc
push
rcl
insl
dec
jns
or
mov
lcall
rcr
out
shll
aad
shlb
mov
mov
in
mov
pop
ljmp
lock
mov
stos
addr16
sbb
jae
stc
daa
pop
inc
fwait
jne
out
jne
es
adc
js
lods
ja
test
inc
jb
sahf
jo
and
scas
clc
xchg
sub
sub
arpl
mov
mov
movsl
lock
push
mov
mov
adc
mov
shll
jmp
lds
adc
mov
sub
icebp
or
add
aam
das
mov
or
inc
test
inc
rcrb
outsl
mov
cmp
js
pushf
xor
inc
pop
push
cmp
daa
roll
xchg
fsubr
sub
cmp
je
or
lcall
mov
inc
test
ret
mov
int
ret
push
outsb
cmp
jae
push
inc
mov
xor
popf
sahf
repz
xor
inc
xor
push
fwait
sbb
hlt
cmc
je
imul
dec
cltd
pop
mov
scas
outsl
iret
cmp
cs
lret
mov
jbe
mov
lds
movsl
jmp
data16
xchg
stc
cld
inc
and
cltd
mov
cmpsl
mov
cmp
jl
mov
push
mov
pop
sbb
int
loop
testl
ja
xor
mov
mov
into
adc
mov
loope
xchg
dec
scas
rorl
shrl
repnz
stos
lds
sbb
adc
ljmp
cmc
fs
dec
xchg
xor
mov
push
out
mov
xor
out
iret
adc
push
mov
pop
lret
sysret
adc
fwait
lcall
insb
aas
mov
repnz
xor
call
mull
push
or
inc
movsb
lea
loope
sar
push
xchg
and
push
adc
cmp
movsb
fsubrl
jno
out
test
xor
jnp
je
shr
sahf
or
lea
cmp
mov
andl
sub
or
sub
cmpsl
sahf
jle
jg
jne
jp
mov
add
pop
push
xor
addb
lods
lock
rorl
push
mov
js
inc
out
add
add
inc
push
lds
test
popf
dec
mov
push
mov
add
scas
sbb
lods
imul
lds
adc
jno
xchg
mov
jecxz
add
insl
lahf
mov
mov
leave
sub
push
add
loop
sub
ret
or
lahf
mov
push
js
inc
cmpsl
rcrb
lcall
cmc
addr16
lock
inc
mov
stc
in
testl
movsl
dec
push
xlat
adc
pusha
mov
popl
pop
cmp
fsubs
dec
data16
jbe
fildll
iret
js
out
test
cmp
mov
cmp
and
idivl
nop
pop
inc
test
sub
das
mov
arpl
out
and
pop
ret
sahf
adc
mov
pop
or
adc
mov
and
and
pop
arpl
ficoms
or
cmp
call
push
movb
jmp
cmp
pushf
pushf
movw
call
or
ds
lock
xchg
arpl
pop
in
sub
mov
enter
xchg
test
mov
lahf
mov
in
jecxz
push
cltd
pop
adc
mov
rol
clc
mov
test
stc
jmp
scas
inc
push
into
pop
fildl
mov
pop
ljmp
push
xor
jecxz
aas
pop
inc
cmpsb
mov
push
mov
enter
imul
int
mov
push
or
xor
nop
push
sbb
inc
or
bound
inc
cmovb
cmpsb
adc
adc
inc
cwtl
add
out
push
cld
insl
xchg
push
outsl
cmp
pushf
lea
ja
jmp
pushf
call
clc
stc
or
push
pushf
call
int3
popf
pushf
push
lea
ja
pushf
movl
jne
push
push
pusha
movl
pusha
mov
movb
mov
lea
jmp
jmp
sbb
jecxz
mov
xor
pop
leave
xor
das
mov
fstpt
insl
mov
cmp
sbb
pop
and
add
int
into
sbb
xor
rolb
test
notl
lahf
xor
mov
lcall
push
cmp
test
bt
add
cmp
cmp
pushf
lea
jb
stc
cmp
pusha
lea
jae
pusha
mov
push
pushl
lea
jmp
inc
xor
neg
sub
bt
xchg
rcr
btc
mov
shl
setbe
pushf
mov
test
stc
xchg
sar
not
mov
pushf
movb
stc
sub
push
mov
rep
bswap
mov
mov
push
movb
push
lea
jmp
lea
jb
test
clc
test
test
cmp
push
pushf
pusha
lea
jae
push
mov
sar
movsbl
shrd
not
mov
rol
dec
mov
test
cmp
clc
sub
test
repnz
push
jmp
pop
pushf
push
pusha
movl
jmp
clc
sub
call
movl
call
shr
mov
rcl
sub
not
not
add
xadd
call
call
pushf
pop
movzbw
jmp
stc
imul
clc
call
call
lea
jae
bt
cmp
pusha
stc
xor
pusha
call
cmp
cmp
test
add
call
xchg
inc
pop
cltd
cld
xor
xchg
push
sub
dec
mov
mov
lahf
lcall
inc
adc
cmpsl
dec
add
cmp
sbb
lcall
sub
cmp
push
cmc
int
mov
push
xor
das
movsb
shr
pop
jle
loopne
jmp
mov
push
jno
decb
xchg
dec
in
jo
out
cmp
call
push
sub
add
fbld
icebp
cli
stos
repnz
sbb
dec
daa
idiv
adc
sti
jo
xor
ret
and
ds
pop
lds
out
add
jecxz
imul
dec
hlt
mov
bound
mov
pop
call
pop
pop
pop
sbb
xor
cmpsl
outsl
mov
mov
ret
adc
cmc
add
mov
mov
mov
or
cmp
test
cmpb
pusha
pushf
call
pushl
push
pushf
lea
je
test
call
call
call
movsbl
mov
clc
cmc
call
mov
test
fbstp
xor
ret
mov
mov
pop
cmp
fbstp
lret
lret
dec
add
movsl
jno
stc
sub
sub
or
cmp
or
fwait
lret
sub
jb
jb
mov
mov
jge
lcall
jno
jge
dec
ret
into
xchg
push
sub
xorl
lret
addr16
out
sub
mov
xor
mov
xorb
repnz
std
jno
push
add
bnd
loop
jbe
push
pop
and
sub
push
dec
pop
pop
js
adc
ljmp
dec
adc
addr16
lea
bound
adcl
loope
sub
pop
fsubrl
cmp
jg
jns
and
sub
push
cltd
sbb
dec
popa
sbb
out
sbb
cli
testl
lret
push
adc
outsl
pop
fistpll
and
lea
push
jge
adc
push
or
mov
outsb
sbb
push
mov
bound
xor
xor
sub
in
mov
add
mov
push
cltd
sub
sub
fs
xor
call
mov
insb
and
pop
and
sub
fidivrl
loopne
js
lret
test
inc
jbe
cltd
jmp
sub
push
js
push
fistpll
add
and
or
and
nop
pop
sub
jne
fstl
jne
nop
stos
push
pop
jo
movsl
xor
add
sbb
loop
fbstp
cmpb
cmp
dec
cmp
out
fisubs
lret
inc
ss
aaa
scas
pop
repnz
cmp
jno
add
jb
out
pop
push
test
cmp
outsl
and
out
fisttpll
push
dec
mov
cmp
dec
shll
fs
aas
push
arpl
insl
imull
std
sahf
in
or
lcall
lahf
imul
out
aaa
sub
mov
aas
inc
sub
xchg
hlt
mov
mov
dec
jecxz
inc
hlt
movaps
mov
test
in
mov
add
cmp
not
not
movsbw
movb
pusha
mov
pushl
lea
jmp
cmp
mov
bt
push
shrd
mov
add
rol
sub
sub
setnp
jmp
call
clc
test
and
cmc
call
lea
jne
call
lea
ja
pusha
add
pushf
cmc
bt
or
push
pushf
movb
lea
je
stc
push
jmp
jmp
stc
call
push
jmp
clc
repnz
push
push
push
jmp
push
push
lods
clc
stc
push
movb
add
pushf
rol
call
jmp
ja
adc
xrelease
jmp
loope
cmpsl
or
and
xlat
jg
out
mov
les
test
mov
clc
sbb
mov
xchg
inc
ja
in
pusha
movsl
mov
mov
cmp
jb
popf
shl
fldt
jb
inc
and
push
lods
lea
jne
push
pushf
inc
call
adc
movb
or
loopne
in
test
or
aad
loopne
or
push
femms
jno
mov
dec
adc
js
or
lea
and
sti
pop
pop
xchg
dec
sub
arpl
loope
add
loop
cld
dec
mov
sbb
cmpsb
pop
aas
xchg
daa
mov
das
cld
loopne
aam
mov
pop
lret
rorb
out
testb
cmc
mov
jle
mov
xor
sub
mov
mov
dec
scas
dec
bound
clc
iret
fwait
jnp
stos
mov
fnstenv
aam
cwtl
into
push
rolb
pusha
outsl
add
push
adc
loop,pn
fistl
ljmp
mov
out
pusha
cmp
jmp
adc
cmp
inc
add
ds
es
sub
jbe
adc
jne
adc
sbb
lds
stos
rclb
or
mov
enter
xor
dec
clc
cmp
adc
sbb
inc
pop
popa
ficompl
cltd
jmp
in
and
imul
jne
das
addr16
mov
push
aaa
add
xor
cmp
rcrl
mov
inc
pop
sti
sub
sbb
lods
std
sbb
out
push
add
ja
mov
shl
repnz
stos
and
hlt
inc
cwtl
movsb
scas
clc
xchg
call
cwtl
inc
movsb
add
ja
mov
ss
leave
add
inc
les
push
and
inc
and
cmp
jg
mov
incl
rclb
sub
clc
in
cmp
insb
test
inc
lret
das
sti
mov
and
mov
lahf
cmp
adc
shr
cmp
ret
addl
imul
mov
and
adc
add
and
cmp
mull
inc
movsb
ja
fildl
inc
rclb
mull
inc
into
loope
mov
push
and
xor
cmp
sub
and
sub
in
or
stc
add
pop
cwtl
add
push
cmpsl
push
adc
sbb
xchg
inc
inc
and
in
shlb
insw
xchg
cmpsl
ja
lds
test
add
xchg
in
out
movsb
add
inc
xchg
fwait
inc
mov
out
sbb
sub
and
inc
push
in
add
jmp
add
xor
fs
add
mov
movsb
add
gs
js
cwtl
and
push
fnstenv
pop
mov
jl
loope
adc
shll
in
ss
jl
loope
adc
shll
jne
mov
aam
daa
loope
adc
pop
das
cmp
rcll
cmpsb
mov
jl
loope
adc
shll
mov
push
loope
adc
rcll
je
xchg
xchg
adc
shl
movsl
es
mov
jl
loope
adc
shll
cmpsl
aam
sbb
cmp
and
mov
sbb
out
je
stos
jae
jmp
mov
faddl
sarb
in
push
xorb
xchg
sbb
mov
inc
xchg
mov
inc
lcall
sbb
sbb
and
and
xchg
js
jecxz
or
push
cmp
addb
arpl
xor
aad
cmp
jg
stc
push
adc
sbb
push
push
ds
popf
orb
loope
jmp
mov
lods
cmp
shrb
add
cmp
sub
dec
mov
cmp
mov
xor
jne
mov
test
jle
jbe
lock
or
pop
or
sub
sub
lds
fnsave
add
mov
stos
sbb
stc
add
adc
in
cmp
roll
mov
xchg
mov
mov
in
in
xchg
mov
and
adcb
dec
mov
daa
jno
data16
je
xor
adc
int
std
push
xchg
shrl
push
mulb
js
xchg
ss
cmp
push
cmpsl
xchg
mov
pop
lds
xor
ret
and
and
adcb
or
inc
inc
es
cmc
in
adc
pop
fldl
aam
cmp
mov
inc
rcll
and
xchg
and
leave
inc
mov
sbb
push
xor
les
mov
add
mov
dec
aaa
xor
and
lahf
xor
jne
pcmpgtw
jne
and
jne
mov
not
xor
xor
pop
add
fs
inc
lcall
cld
push
add
jne
xchg
mov
in
in
jg
xchg
adc
filds
cmc
inc
std
popf
inc
lcall
fadd
sub
outsl
and
sbb
cmpsl
cmp
test
in
xchg
push
lret
cmp
stos
or
enter
addr16
and
shll
xchg
mov
and
daa
adc
jbe
xor
call
xor
pop
addb
stc
cmp
pop
mov
inc
sub
cmpsl
cmp
pop
mov
idivb
adc
lea
pushf
cmp
roll
pop
xor
xor
xchg
mov
pop
push
pop
cmpsl
add
cwtl
js
xorl
aam
jne
inc
sub
xchg
mov
jnp
adc
lods
ja
in
ljmp
cltd
jp
add
les
mov
adc
xchg
and
mov
push
shll
les
xor
or
lcall
or
mov
bound
xchg
js
lds
or
insl
mov
inc
mov
sub
sbb
in
fstps
inc
xor
cmpsl
jbe
data16
jno
xchg
push
aad
cld
push
xchg
stos
xchg
push
cmc
and
scas
mov
je
jecxz
and
add
call
test
and
jne
add
xchg
movb
and
inc
jnp
and
dec
aad
in
daa
imul
inc
push
or
or
mov
push
fs
aad
pop
arpl
and
adc
add
xor
xor
inc
insb
mov
outsl
mov
cmp
lock
inc
xchg
add
push
lods
xchg
imul
or
in
dec
pop
xor
xchg
lahf
loopne
push
and
sub
or
adc
shll
or
cmp
mov
mov
loope
outsb
jae
scas
add
je
xchg
xchg
sahf
xcrypt-cbc
cmpsl
xchg
out
xchg
inc
or
and
inc
lcall
mov
mov
jl
push
iret
mov
aam
js
mov
insl
arpl
xchg
xchg
mov
sub
roll
inc
test
mov
pop
add
cld
and
xor
shll
shl
xor
xchg
sub
icebp
roll
aad
inc
adc
mov
in
cmpsl
fisttpll
out
push
mov
jp
push
mov
in
adc
mov
add
loope
cmp
or
lock
jg
movsb
mov
mov
mov
inc
xchg
adc
in
call
xor
insl
test
push
sbb
jnp
dec
add
movsl
es
or
xchg
dec
inc
cmp
xor
and
pusha
dec
enter
adc
stc
sub
mov
add
loope
push
adc
and
cmpsb
das
or
mov
es
adc
es
pop
in
xlat
or
lods
lahf
inc
loopew
add
lds
adc
mov
data16
in
fs
cmp
std
inc
test
xor
ja
cld
mov
aad
mov
in
fnstsw
xchg
enter
cmp
dec
fcomps
mov
ds
mov
pop
sahf
inc
inc
mov
mov
inc
xchg
jae
push
lds
sbb
xchg
or
movb
jne
mov
hlt
gs
sbb
clc
faddl
std
mov
pop
add
inc
push
ljmp
lds
lret
loop
sub
jb
mov
pop
adc
nop
movsl
maskmovq
imull
mov
pop
pushaw
jo
inc
jl
jne
mov
cmp
xchg
sbb
xchg
jmp
inc
call
mov
or
call
bound
and
cld
mov
shrl
push
out
add
es
add
leave
out
push
lret
cld
ljmp
cmc
divb
shll
mov
mov
add
pop
inc
loope
int
in
add
cld
cmpsl
aaa
jp
xchg
and
inc
xor
cli
cld
into
loope
lds
pop
movb
push
movsl
lds
lds
cmp
gs
std
cmpsl
and
into
idiv
xchg
scas
cmp
inc
xlat
idiv
pop
pop
ljmp
sub
inc
push
or
and
or
gs
jae
mov
add
pop
mov
xor
and
sbb
testl
sbb
sar
cld
pusha
aam
aam
test
xor
adc
aaa
sbb
cmp
je
push
pop
das
pop
or
ret
and
xchg
stos
scas
lock
xor
arpl
int
aad
sub
mov
add
mov
mov
mov
hlt
add
sub
mov
cmp
or
loopne
fs
push
inc
mov
add
xor
push
jb
xchg
add
pop
cmp
ret
mov
sbb
jbe
popf
push
sbb
popa
adc
xchg
icebp
jnp
call
cld
pop
add
in
divb
fistpl
jl
daa
aaa
mov
notb
cmp
pop
test
outsb
adc
sar
add
sbb
jns
cltd
xor
adc
jne
and
cmp
and
mov
and
popf
rcrl
jmp
cmpsl
idivb
cmc
jno
clc
daa
callw
mov
popf
xchg
push
scas
popf
hlt
pop
cmp
sahf
addr16
ss
add
mov
add
push
add
popa
notl
adc
data16
push
inc
mov
in
aad
pop
xchg
leave
daa
sub
jns
and
pop
adc
sub
jo
add
adc
xchg
pop
cmp
in
aas
adc
dec
test
fs
xor
jl
sub
sbb
mov
push
adc
daa
and
cmp
sti
mov
sti
pop
jp
mov
cmpsl
or
lahf
pop
dec
xor
cmp
lahf
and
mov
add
fistps
sbb
xchg
sub
xor
pop
nop
inc
xchg
add
test
add
sbb
cs
adc
push
cmp
fmuls
js
cld
pushf
movsl
es
es
push
adc
test
outsb
dec
add
jo
insb
movb
add
aaa
fwait
movl
push
jge
and
add
shll
sub
add
and
add
pop
bound
roll
xchg
gs
cmpsl
enter
dec
xchg
pusha
dec
add
fs
mov
cwtl
incl
cld
stc
lds
mov
jle
jno
adc
aad
dec
inc
ss
xchg
push
pop
inc
push
movhps
and
mov
and
add
and
movsb
insb
and
aas
cmp
xor
mov
lods
and
and
push
and
inc
mov
je
cmp
in
loope
mov
divl
les
xorb
mov
daa
xor
add
and
sarb
mov
and
fwait
shll
ds
fdivrl
push
icebp
and
enter
mov
sbb
shrl
aad
xchg
aam
pushw
popa
cwtl
mov
sbb
iret
mov
jge
fs
je
sbb
test
pushf
outsl
ja
adc
sbb
mov
push
xor
cmp
ljmp
mov
subb
in
jg
hlt
and
dec
mov
sub
pusha
add
in
inc
or
enter
sbb
inc
mov
cld
test
lods
or
mov
xlat
xchg
cmp
mov
adc
push
push
fdivrl
dec
jbe
add
ja
lds
arpl
rclb
xchg
mul
mov
mov
jg
jge
into
stc
insb
mov
and
ret
xchg
cli
or
or
mov
repz
jb
cld
mov
ja
pop
int
mov
pop
jle
cmp
mov
xchg
jae
pushl
xor
addr16
mov
cmp
sahf
popf
jbe
sbb
cmp
cmp
or
add
xchg
std
inc
shl
pop
out
pop
xchg
xorb
push
cmpb
js
xchg
inc
stos
fcoml
stos
sub
cmp
jge
leave
add
inc
addb
inc
inc
cmp
shll
cmp
rclb
mov
inc
enter
loope
icebp
and
inc
or
shrl
xor
xor
jbe
push
and
mov
data16
mov
add
mov
mov
hlt
js
rclb
add
push
mov
cmc
add
in
clc
adcb
stos
mov
mov
hlt
mov
jl
and
ret
adc
or
ret
cs
mov
aas
or
cli
xchg
xchg
lds
adc
mov
lds
jne
nop
jl
xchg
sbb
jle
test
xchg
mov
jb
adc
jl
test
daa
pop
negb
ja
push
mov
xchg
push
pop
frstor
fs
mov
push
stos
shll
divb
or
mov
std
and
xor
push
pop
and
adc
push
push
xchg
sti
push
in
inc
fists
mov
inc
cmp
inc
ret
insb
dec
lock
cmp
inc
cmp
test
and
jb
add
mov
adc
or
sti
sub
das
xor
cmp
inc
sub
or
es
cmc
sub
mov
mov
mov
dec
sub
xchg
scas
add
lcall
sbb
sub
ret
daa
mov
sub
or
or
cmp
inc
fs
dec
cmp
sub
mov
inc
dec
cmp
addr16
pop
lcall
mov
sub
add
out
sub
sub
loop
and
push
testb
lds
sarb
gs
dec
cmc
cwtl
xchg
test
int3
inc
cltd
xchg
pop
test
ds
fdivl
es
push
jg
and
ljmp
sbb
mov
daa
rolb
inc
cmp
in
test
imul
pop
scas
shlb
adc
xor
mov
sbb
sub
in
sgdtl
adc
add
add
jne
sbb
sub
es
sbb
repnz
pop
daa
jnp
push
push
and
cmpsl
inc
fdivl
es
aam
push
fidivs
and
xchg
mov
mov
and
dec
inc
popf
fs
dec
dec
cmp
mov
and
std
mov
and
daa
or
je
sub
and
jecxz
sbb
pop
std
movsb
mov
and
daa
push
pop
add
outsb
and
and
add
and
pop
xor
es
and
std
aas
mov
and
add
and
bound
mov
divb
pop
and
and
add
and
xor
testb
mov
and
mov
and
add
xor
add
andl
xchg
daa
insl
push
loope
add
add
mov
mov
add
jg
pop
movsb
inc
adc
es
add
lahf
and
cs
pushf
mov
and
and
add
and
xor
mov
je
xor
in
xor
xchg
push
inc
aaa
add
es
add
lods
inc
xor
mov
lds
push
std
sbb
les
add
mov
inc
inc
test
mov
divb
mov
dec
and
pushf
jle,pt
and
add
sahf
xor
aas
and
les
mov
dec
ss
mov
dec
std
xchg
insb
mov
inc
cmp
testb
add
mov
in
or
or
cmp
je
and
daa
and
sub
popf
mov
in
and
je
lods
xor
xor
mov
out
push
and
add
das
and
mov
cld
and
add
inc
dec
movsl
and
jmp
mov
std
lods
mov
and
add
xor
int
adc
mov
add
inc
and
and
add
xor
std
and
mov
mulb
add
aaa
and
lods
mov
and
movl
and
mov
std
lds
xor
out
ss
adc
inc
push
test
and
add
mov
pop
and
mov
frstor
loope
or
xor
in
add
push
mov
and
mov
and
std
out
lods
mov
and
mov
and
cmp
xor
shl
push
jecxz
xchg
and
add
lods
mov
and
jecxz
mov
mov
and
std
pushl
ja
and
add
mov
and
sbb
insb
mov
and
das
mov
and
add
push
xor
jne
jge
xor
push
mov
and
and
add
dec
xor
fisubs
movsl
std
jne
xor
xchg
add
xor
lahf
and
pushl
es
and
and
cmc
jmp
add
xor
dec
jae
cmc
sub
and
mov
push
loope
xor
sub
in
and
pop
pop
aad
sub
in
addr16
inc
push
adc
sub
in
sub
std
arpl
add
add
cmp
add
cmc
jl
in
fs
adc
sbb
sub
jbe
xlat
fnop
cmp
test
and
xchg
and
and
mov
andl
lahf
addr16
scas
ss
mov
outsl
lods
lahf
sbb
ljmp
std
lock
mov
data16
add
gs
fisttpll
rcrb
popf
add
enter
inc
adc
xor
cmp
int3
ss
sub
aad
fmuls
jnp
frstor
test
and
ja
push
or
dec
cmp
dec
lds
add
inc
fisubl
xor
aad
sbb
push
cmp
add
movsl
std
movsb
push
inc
cmp
xchg
test
pop
je
mov
ljmp
xchg
inc
inc
loope
cmp
mov
sub
frstor
movsl
lock
sbb
aas
cmc
add
and
shll
lahf
inc
bound
cmpsl
jmp
aad
inc
mov
test
sbb
cltd
xchg
xor
mov
je
pusha
sub
aad
fsubs
inc
inc
cmp
mulb
and
cltd
aad
mov
push
adc
cltd
fnstcw
cmp
mov
sahf
or
inc
adc
insl
inc
jmp
and
xchg
ss
movsl
mov
sbb
out
mov
jl
ljmp
adcl
and
movsb
mov
dec
movsb
inc
inc
lcall
ja
lcall
das
cmp
and
or
leave
xor
ja
xorl
xchg
aaa
dec
arpl
cmp
fbstp
lahf
add
xchg
xor
dec
mov
in
cmp
add
stc
mov
nop
ret
mov
xor
stc
clc
mov
gs
mov
call
dec
js
clc
jmp
mov
in
stos
mov
jnp
mov
pop
mov
in
adc
lock
adc
add
jl
adc
outsb
test
insb
mov
stc
mov
std
sub
insl
sub
inc
das
scas
jmp
dec
mov
loope
loope
mov
jnp
aaa
and
daa
xchg
fucom
add
shlb
imul
shll
adcb
fsubs
sub
and
subb
mov
xchg
std
aas
lods
shlb
inc
sahf
inc
push
dec
lds
add
lret
ret
rcrb
add
mov
push
ds
xor
add
test
je
sub
mov
or
pusha
jge
dec
sub
push
popa
push
leave
mov
inc
or
inc
jge
dec
test
and
cmpl
and
jp
add
int
sbb
push
jmp
add
test
sub
mov
scas
dec
sub
leave
mov
fs
es
mov
sahf
push
lds
arpl
leave
mov
inc
sub
add
outsb
dec
sub
popaw
and
ret
or
adc
add
es
popa
lock
cmp
add
sub
push
lods
or
cld
popa
adc
push
clc
or
hlt
imul
inc
les
mov
mov
add
stos
mov
xchg
aad
sarb
lds
push
idivb
cmp
std
lds
push
mov
lods
shr
push
dec
imul
xchg
jae
pop
fmul
cmp
add
sub
push
mov
xchg
aam
rcrl
cmpsb
sahf
dec
cmp
or
mov
int
inc
xchg
in
roll
push
dec
xchg
push
cmpsl
aaa
xchg
pushf
arpl
jae
cltd
cmpsl
cmc
aam
add
je
cmp
ljmp
hlt
mov
in
popf
mov
xor
hlt
dec
lret
in
gs
jl
call
dec
jnp
and
dec
jle
arpl
into
or
mov
jb
pop
mov
ja
add
sbb
pop
mov
jnp
xchg
sub
cmp
addr16
addr16
mov
sub
xlat
movsl
sahf
jg
add
pop
sarl
or
add
or
fnstsw
sub
cmp
mov
xor
mov
mov
jo
pusha
movsl
or
mov
fst
mov
or
mov
fstpt
jae
ja
mov
push
push
adc
out
jbe
hlt
sbb
mov
hlt
cmpsl
int
mov
push
clc
in
hlt
pop
jnp
add
movsl
adc
jae
jle
aad
add
jne
add
bound
jmp
jne
adc
sub
mov
fsubl
fwait
sti
mov
jg
xchg
or
cmpsl
aam
aad
xor
xor
cmp
sbbl
pop
adc
icebp
imul
inc
push
jne
push
add
adc
ljmp
loopne
xchg
jns
jae
js
and
and
add
cli
ja
dec
mov
push
gs
and
int3
les
jne
adc
sub
aad
push
dec
loope
dec
add
lods
xchg
mov
adc
sub
inc
mov
cltd
div
stos
mov
dec
cmc
out
adc
or
sbb
pop
push
test
mov
ss
inc
loope
sub
add
and
dec
push
gs
out
sub
xor
push
add
hlt
scas
and
xor
mov
pushf
push
outsl
movsl
insl
dec
jae
mov
jmp
in
cwtl
cltd
sbb
outsl
aaa
hlt
clc
sti
xor
jns
dec
mov
mov
ret
shrb
in
aaa
and
push
dec
dec
mov
insb
sub
jnp
inc
sbb
ljmp
cmove
repz
mov
add
and
orl
xor
dec
loope
add
sbb
push
aas
sbb
jecxz
fcompl
xor
mov
pushf
stos
sbb
mov
es
mov
lock
lds
aam
cld
push
inc
jnp
jecxz
inc
fnstsw
inc
cmp
movsl
fidivl
adc
xor
sbb
cmc
std
sub
cmp
fstpl
int
cmpsb
push
das
xor
das
jo
push
mov
sub
cs
loope
lahf
mov
aaa
cmp
mov
dec
jp
insl
das
xchg
jmp
push
imul
sbb
adc
cld
sub
scas
add
mov
je
test
cld
sbb
test
mov
shll
sub
add
dec
inc
cmp
xor
push
fdivs
aas
or
mov
sarl
sub
add
stc
sti
leave
adc
inc
orl
sub
ss
cmp
nop
sbb
sbb
xor
lahf
pop
cmp
popa
sti
jne
xor
popf
xchg
xchg
mov
mov
mov
ljmp
xor
adc
add
xchg
pop
xchg
std
out
pusha
pop
sub
add
mov
adc
int
lahf
test
outsb
popf
negl
add
and
je
cld
cltd
adc
push
push
or
or
icebp
iret
cmc
cmp
insl
in
cmp
test
gs
inc
mov
lods
adc
jae
mov
js
cs
sub
cmpsb
inc
fs
push
push
mov
and
mov
movsl
les
sbb
mov
push
js
vpunpckhdq
cld
jle
sarl
sub
add
leave
xor
and
xchg
hlt
test
in
cmp
rorl
sub
inc
mov
and
je
icebp
shll
cmc
fs
sarl
shll
add
mov
cld
xor
aam
mov
loope
std
lods
lods
pop
das
mov
add
lods
aaa
inc
or
push
add
and
movsl
xor
cmp
jmp
push
mov
or
stos
ja
std
and
add
xor
add
xchg
sub
push
movsl
cmpsb
aam
pop
or
add
or
or
push
push
cmp
je
in
adc
mov
xchg
iret
mov
gs
cmp
and
mov
mov
cmc
cltd
jb
pop
and
jl
adc
fldenv
cli
push
mov
jae
sbbl
aaa
cmpb
pop
fdivrl
in
cmp
icebp
add
dec
jle
jne
xor
int
lahf
inc
adc
gs
popl
and
sub
xlat
pop
adc
jp
inc
out
or
push
sub
pop
cltd
mov
js
dec
mov
call
lret
cmc
dec
int3
add
call
mov
ja
mov
jmp
movsb
lods
cmp
fdiv
mov
pop
adc
xor
loopne
out
ja
add
out
repnz
and
dec
ds
and
dec
ljmp
imul
add
jnp
sbb
mov
insl
jl
xor
pushf
push
stc
iret
subb
pop
lods
fmull
inc
cltd
ret
mov
pop
sub
imul
out
pop
icebp
adc
movsb
or
inc
cmp
sub
sbb
and
sbb
movsb
sub
loopne
in
rcll
movsb
repz
or
xchg
icebp
and
adc
push
ljmp
mov
add
push
xchg
mov
rcll
faddl
and
mov
xor
and
aam
jl
clc
xchg
mov
add
add
xor
or
push
or
std
inc
pop
out
sbb
movsb
lahf
pop
test
cld
shll
adc
xor
mov
mov
out
push
cmp
enter
lea
cltd
test
ret
inc
les
out
sbb
stc
add
mov
cmp
add
cmp
lods
ret
test
jle
fstpl
or
sbb
push
fs
fldenv
test
leave
jle
pop
inc
mov
scas
lds
mov
cltd
push
or
int
xchg
std
sbb
mov
cmpsb
jl
sub
cltd
scas
inc
or
enter
and
sub
cmp
popf
lds
push
pop
xchg
les
loop
in
testl
cs
sub
daa
add
rcll
orb
and
in
lahf
mov
in
in
jge
cmpsl
jo
jge
xchg
mov
adc
jo
dec
or
cmp
les
xchg
xorl
sub
adc
sub
push
push
addr16
cmpsl
leave
inc
cmp
test
movsl
lods
push
insl
leave
or
jae
clc
cwtl
xchg
sarl
cs
sbb
mov
mov
adc
lods
test
in
lds
repnz
sbb
and
leave
pop
mov
cltd
popf
lods
inc
and
cmp
test
xchg
es
aam
loope
cs
or
ret
mov
daa
jne
jbe
dec
xor
ljmp
test
fistpl
jle
dec
sbb
inc
pop
pop
fs
or
lds
xchg
shll
add
sbb
jae
fstps
subl
in
inc
ret
hlt
test
incb
movsl
jbe
xor
jl
test
sbb
inc
clc
jno
rcrl
xchg
xor
mov
mov
psadbw
test
dec
loop
mov
push
in
jae
sbb
mov
movsb
adc
gs
ret
movsl
cli
fcomps
divl
cmp
jmp
cwtl
inc
adc
cmp
push
cmp
movsl
pop
pushf
adc
xchg
mov
scas
test
ds
sub
push
insb
out
and
cmp
inc
int3
mov
frstor
and
inc
add
loopne
ss
inc
loope
cmc
xor
sbb
mov
jle
or
ret
push
or
clc
adc
imul
ret
sbb
cmpsl
cmp
test
mov
mov
cmpsb
add
jbe
je
shl
xchg
jae
stc
add
ds
mov
cmp
xchg
sahf
les
xchg
shl
jo
in
xchg
and
and
mov
lds
jecxz
jmp
sub
cltd
cs
movsb
push
popf
mov
shlb
fs
in
jmp
lock
lret
lcall
push
pop
adc
jecxz
fldl
inc
and
or
add
aaa
inc
push
jmp
add
add
aad
sbb
add
icebp
icebp
pop
in
pop
jne
rcll
inc
add
aad
lds
sub
xor
xor
pushl
lods
cmp
pop
inc
inc
pop
iret
jns
sub
fsubrp
fldenv
je
xor
clc
cmp
or
sbb
je
imul
mov
xor
fstpt
add
int3
in
cmp
and
lods
sub
dec
fwait
mov
xchg
and
pop
inc
adc
imul
out
cmp
mov
bound
or
test
cmc
js
adc
xchg
jo
lea
mov
mov
sti
xchg
add
lds
jl
loop
cmp
lods
xchg
xor
out
les
and
cmc
ja
pushf
mov
mov
outsl
push
lds
push
push
sbb
addl
rcrl
fisubs
pop
movsl
into
fadds
insb
stc
mov
cmc
jae
test
add
dec
jecxz
and
out
cmp
mov
jmp
lret
mov
add
xlat
bnd
inc
mov
jl
lds
scas
lds
fiaddl
movsl
xchg
test
adc
cmp
sub
lahf
and
jecxz
mov
cwtl
es
add
mov
sbb
addr16
sahf
out
inc
and
inc
popa
push
push
inc
and
movsb
fwait
std
jmp
jg
pop
xorb
push
add
mov
fnsave
jo
ret
fldenv
xor
inc
add
jae
addl
outsl
or
adc
push
roll
lcall
ss
add
mov
icebp
mov
sub
nop
cmp
flds
cs
rol
pusha
xor
cltd
and
orl
cs
aad
addl
and
mov
fs
adc
scas
mov
ficoml
dec
mov
push
xchg
jmp
stos
flds
icebp
pop
arpl
cli
iret
xor
xor
mov
jno
cmp
xchg
add
outsl
adc
mov
add
inc
add
cmp
das
movsb
mov
fstpl
icebp
cmc
ret
aad
aam
or
push
loope
mov
push
cld
or
lret
ret
int
add
sahf
push
sbb
add
push
cwtl
jecxz
add
lahf
mov
pop
push
and
scas
aad
dec
xor
fdiv
cmp
adc
movsb
ja
cmp
lret
adc
inc
mov
mov
pop
mov
lahf
jp
shll
jo
and
sub
scas
enter
xchg
subb
sbb
pop
inc
clc
sbb
mov
and
push
dec
mov
sub
aad
in
mov
mov
and
test
cmp
push
in
out
adc
push
adc
lods
xchg
dec
mov
mov
cmp
add
in
sub
jle
and
jbe
scas
inc
lods
sbb
outsb
out
or
pop
push
clc
sub
aad
jmp
fdivs
int3
in
mov
outsb
pcmpgtd
pop
add
mov
in
push
popa
xor
sub
rcrl
cmp
lahf
mov
shl
in
dec
xchg
popl
clc
inc
xchg
cmpsb
cwtl
mov
sbb
lea
push
dec
nop
and
hlt
mov
sbb
jmp
cld
pop
pop
and
out
test
subl
dec
dec
mov
jg
mov
xchg
call
sbb
sub
fisubrl
adc
xor
fsubrl
in
call
and
int
push
mov
add
das
push
xchg
jmp
dec
je
mov
std
xor
dec
cmp
add
adc
call
lods
inc
pop
sbb
or
push
fs
out
mov
jge
sbb
aad
sarl
jae
pop
jg
sub
add
cli
cwtl
add
sub
inc
and
inc
adc
loope
sbb
add
dec
pop
inc
adc
adc
cmp
cmc
mov
push
das
inc
outsb
sub
js
cwtl
inc
cmp
or
lds
push
lahf
jne
cmpsl
loopne
aas
add
push
adc
movsl
sub
mov
sti
ret
cmp
inc
ja
sbb
daa
xor
int
jns
std
sahf
movsb
mov
add
pop
add
push
xor
shll
xor
inc
inc
jo
cmp
js
rol
loope
cmp
js
dec
loope
push
sarl
mov
out
inc
loope
inc
xor
mov
loope
and
push
xor
and
cmp
sbb
mov
and
std
cmp
cmp
scas
outsb
adc
outsb
lock
and
addb
adcb
es
push
xchg
sbb
xchg
inc
xor
std
cmp
imul
fwait
pushl
outsb
arpl
cmp
and
add
cltd
jno
and
call
dec
add
les
lret
hlt
flds
cwtl
sti
add
ret
mov
add
pop
mov
out
int3
hlt
cmp
hlt
push
jb
icebp
faddl
pop
andl
ja
sub
dec
xchg
and
call
in
xchg
subl
and
adc
pop
mov
add
call
sub
add
jae
jno,pn
lock
xchg
lds
sub
mov
mov
aaa
jmp
mov
mov
pusha
addl
sub
mov
repz
fisubrl
and
ret
cmpsl
mov
and
daa
cmc
repz
das
jge,pn
xor
cmp
inc
adc
and
cmc
add
mov
aaa
in
sub
xor
add
inc
in
dec
inc
adc
cwtl
mov
or
lret
sbb
sbb
lock
inc
push
add
inc
mov
in
sbb
push
data16
push
lret
fstl
popa
loope
lds
setl
in
divl
shll
insb
lods
mov
pop
pop
sub
cs
dec
inc
std
test
in
inc
ror
cmp
adc
push
in
jae
ret
repz
mov
and
and
xor
and
cld
nop
sub
and
xchg
fdivl
test
lahf
sbb
pop
sbb
daa
lret
jle
movlps
outsl
inc
pop
sub
and
cltd
outsb
jb
incl
and
pushf
bound
jbe
push
rolb
xchg
and
and
lods
xor
push
mov
lds
mov
adc
lods
cwtl
adc
lahf
dec
xor
inc
sub
fldenv
sub
loop
cmc
inc
sbb
cmp
or
ja
in
add
pop
and
call
mov
mov
test
aam
lods
mov
add
rcll
daa
ja
inc
inc
repnz
cmp
adc
in
ja
jno
in
add
fistpll
xchg
mov
jl
push
xchg
push
mov
pop
stc
xor
cmp
adc
mov
mov
aad
outsb
adc
loopne
push
repz
pop
mov
pop
mov
inc
aad
xchg
lea
xor
ja
jmp
add
pusha
jl
xor
push
mov
push
xchg
ja
and
fldl
mov
xchg
out
insl
sub
imul
subb
sub
cmc
cltd
inc
push
ss
xlat
xchg
nop/reserved
and
mov
movsl
or
push
cmp
aam
mov
lds
xor
inc
inc
xor
pop
cli
ja
popf
fucom
xor
add
sub
inc
cmp
or
aaa
xchg
mov
mov
fdivs
insl
lods
mov
das
add
shll
lahf
ja
xchg
out
in
inc
jae
sbb
test
sbb
cmp
adc
mov
ret
xor
mov
sub
lds
std
xor
and
push
cmp
fidivrs
aam
dec
jo
and
popa
movsl
pushf
test
push
inc
and
call
push
jp
cmp
push
or
pusha
out
andl
je
pop
ja
clc
rcrl
movsb
or
and
adc
push
cltd
adc
mov
sub
xchg
adc
loop
fnstsw
inc
push
and
push
movsb
sub
insl
jae
cmp
ss
arpl
das
sub
mov
cmp
in
es
andl
sub
push
inc
or
inc
hlt
loope
out
sbb
cmc
ret
addl
sbb
adc
pop
out
ficoml
insl
or
divb
xor
cmc
or
in
call
ja
repnz
jmp
pop
es
cmpsb
mov
fwait
shll
xor
or
mov
mov
inc
mov
pop
sub
idivl
insl
mov
cmp
jmp
jne
dec
xor
push
bound
lods
and
shrb
loopne
push
jns
mov
jnp
jg
dec
dec
les
cmp
sbb
loop
jne
sub
pop
outsb
dec
int
inc
or
add
and
in
mov
cmp
daa
add
push
and
mov
sbb
cs
dec
aad
push
int3
cmc
cmc
int3
stos
cmc
push
cld
ss
pop
inc
pop
popa
ja
jnp
cmp
in
mov
and
mov
add
pop
xor
gs
xchg
fsub
testb
push
in
loopne
cld
movsl
xchg
xchg
sbb
fidivrs
push
ret
dec
popa
popa
inc
sub
mov
es
notb
and
push
js
push
and
rolb
fisubl
dec
cmp
mov
and
mov
fbstp
test
mov
jmp
aaa
mov
cmc
adc
cmc
stos
scas
stos
shrl
arpl
icebp
inc
ja
rcll
dec
pop
stc
js
jae
idivl
mov
sub
jecxz
in
in
sbb
lods
ja
mov
ss
dec
in
idivb
mov
mov
stc
mov
fsubr
lcall
inc
cmc
int
cwtl
and
mov
add
or
xor
mov
mov
clc
rcr
call
test
cmpsl
sbb
in
push
dec
add
popf
push
jno
fucomip
push
and
and
divb
pop
push
and
sub
cmp
jne
lods
jecxz
pusha
xchg
add
and
cmp
js
rorb
mov
sarl
stc
add
stc
test
jb
pusha
xor
cs
xor
xor
in
push
adc
and
shrb
adc
xor
pushf
ss
std
jmp
sahf
xchg
add
push
mov
xor
daa
mov
gs
add
cmc
add
int3
std
movsl
lea
xor
and
lds
jne
lds
add
sbb
add
and
hlt
mov
and
dec
aad
cmp
jbe
dec
sub
jae
inc
int3
clc
movsl
mov
inc
xchg
push
sti
out
aad
sub
imul
xchg
aad
roll
rol
int
icebp
iret
aam
movsl
jmp
or
insl
cmp
stc
mov
adc
xor
cmp
dec
rorl
jmp
fidivrl
cld
or
jp
adc
xchg
dec
outsb
mov
jnp
push
mov
cmp
stc
cmp
hlt
mov
mov
xor
xor
cmp
es
out
xor
or
unpckhps
jae
inc
add
sub
add
inc
ja,pt
insl
iret
mov
jg
cmc
mull
and
mov
and
es
sub
movsl
shrl
out
or
std
icebp
adc
sub
das
roll
push
outsl
ret
jae
cmp
adc
js
imul
aaa
out
sbb
and
sub
and
fs
dec
mov
sbb
sti
enter
dec
js
and
sub
movsb
adc
andb
add
jp
movsb
xchg
and
insl
scas
cmc
add
shr
nop
sub
dec
aam
inc
jge
ds
into
fsts
mov
sub
push
inc
xchg
rolb
lahf
inc
lods
xor
lret
in
jns
in
mov
adc
sub
inc
xor
cltd
pop
jne
iret
push
out
faddp
icebp
push
dec
cmpsl
cmc
xor
lods
into
xor
in
pusha
and
in
repz
jbe
dec
pop
mov
xor
mov
ja
mov
mov
std
fistpll
add
movsl
jb
insl
jbe
push
or
je
inc
cmc
fnsave
arpl
cmp
jmp
out
and
test
add
add
add
and
sub
mov
add
mov
cmp
cmc
sti
mov
add
movsw
clc
pop
jecxz
adc
or
cmp
aad
mov
mov
add
mov
jno
mov
sbb
loope
dec
pop
popf
ljmp
roll
popf
dec
shrw
data16
mov
inc
xor
incl
in
mov
adc
xor
xorl
pop
add
dec
ja
adc
mov
adc
add
loop
jge
jmp
movsl
pop
mov
cmp
loopne
and
xchg
lds
cmp
lahf
cmp
movsbl
rcrl
cltd
mov
nop
sahf
cmp
push
cmp
shlb
and
sub
bound
sbb
mov
incb
xchg
dec
out
aam
cmp
cld
pop
and
cltd
adc
je
aaa
out
jle
sbb
cld
cltd
cmp
vpcmpgtd
inc
push
in
xchg
jae
pop
std
jne
movsb
and
cld
pop
pop
and
mov
inc
les
in
dec
add
fnsave
popa
or
gs
data16
test
adc
pop
divb
loopne
in
test
xchg
aas
mov
repz
stc
sbb
inc
in
imulb
jns
movsl
stos
ret
insl
out
jbe
jl
jg
and
jo
es
inc
mov
data16
std
push
sbb
fldenv
lods
je
or
int
mov
mov
out
hlt
enter
and
jb
cmpsb
das
mov
xchg
jno
sbb
incl
add
add
ds
xchg
enter
mov
xor
dec
stos
fisttps
shlb
icebp
out
jle
jcxz
mov
jecxz
mov
fdivs
mov
cld
pop
push
in
inc
and
gs
jl
mov
pop
mov
add
dec
mov
aaa
pop
popf
adc
call
shrb
movsl
pop
inc
mov
xchg
aaa
inc
sbb
in
cmpsl
jl
loope
dec
das
in
pop
adc
jae
adc
stos
adc
lea
xchg
add
pop
mov
push
out
and
sub
cmp
mov
xchg
test
js
add
push
cmpsb
push
or
outsb
daa
cmc
and
and
rcr
es
mov
mov
pusha
and
cltd
jno
into
jge
and
and
add
lds
pop
dec
pushf
jns
xchg
dec
enter
cwtl
adc
pop
leave
push
push
sub
sub
cmpsl
sbb
push
scas
or
gs
cwtl
out
and
push
mov
outsb
mov
call
pop
movsb
mov
inc
in
mov
fsubrl
stos
movsb
out
adc
xchg
popf
mov
dec
std
aaa
cld
cli
and
aas
mov
std
inc
cmp
add
jae
or
hlt
jno
inc
scas
push
shll
dec
xchg
and
scas
inc
scas
cmp
ja
rcll
xchg
xor
inc
scas
add
sahf
fdivrs
cmp
sub
inc
inc
and
cmp
push
xor
push
cmp
jecxz
inc
popf
pop
sbb
or
add
pop
jge
xchg
test
out
xchg
mov
push
mov
xchg
ss
cmp
insl
xor
les
gs
out
imul
and
or
sbb
sub
jmp
add
cmpb
mov
pusha
addr16
lret
das
adc
scas
jge
test
test
das
add
add
fdivl
fisubl
and
icebp
xor
lock
add
sub
fiaddl
enter
add
lds
enter
jns
dec
mov
sbb
int
cmp
fs
mov
insl
es
jmp
mov
pusha
stc
cld
push
jne
sbb
push
nop
daa
pop
call
cmp
jbe
daa
xor
insl
cmp
xchg
lods
faddl
out
adc
ret
dec
or
or
nop
push
outsl
jbe
insb
pop
es
test
or
adc
daa
mov
jle
int
jbe
je
pop
sbb
addr16
nop
inc
in
mov
add
lret
jnp
rolb
in
mov
add
xchg
ds
cmp
jmp
jl
loope
push
cmp
adcl
cltd
dec
mov
and
and
movsl
cld
repz
push
outsl
mov
dec
imul
sbb
clc
call
mov
lret
adc
clc
mov
outsl
pushf
jns
jmp
cltd
and
xchg
je
add
daa
adc
test
loope
fs
add
pop
shll
cmp
push
mov
add
jl
fucomi
dec
dec
cmp
ss
arpl
and
imul
in
and
ljmp
pusha
iret
mov
ljmp
xchg
mov
in
jge
add
stos
adc
out
xor
ret
loope
add
fwait
out
in
inc
ds
cmova
dec
jo
pop
mov
push
pop
divl
cmc
daa
add
mov
xor
stos
push
lcall
dec
jae
push
stos
jecxz
sti
xchg
test
xlat
stc
inc
cmp
and
fs
sar
dec
add
in
loope
inc
cmp
mov
mov
and
xchg
scas
fadd
and
adc
stos
stos
xor
inc
and
cld
je
and
rcrl
sahf
inc
int
mov
mov
inc
xchg
or
imul
and
sub
test
imul
es
loopne
int
cmc
data16
imul
or
test
pop
inc
aad
hlt
pop
int3
scas
mov
movsl
push
xchg
xor
aas
movsb
push
pusha
mov
and
jmp
scas
mov
add
test
ss
gs
cmp
xlat
loope
sbbb
lods
in
scas
ljmp
int3
xor
pop
mov
pop
daa
test
in
and
push
cwtl
pop
mov
test
sub
aam
stos
add
sarl
cmp
frstor
call
sub
mov
sub
inc
push
sbb
mov
sahf
roll
movb
xchg
mov
flds
aaa
pop
sub
sub
and
imul
mov
xor
out
popf
xor
pop
pop
shr
in
mov
lahf
cmp
pop
loopne
fadd
insb
in
xor
dec
mov
jp
push
xor
in
data16
les
bound
add
arpl
divb
mov
push
or
adc
dec
pop
aam
pop
adc
adc
mov
pop
mov
cmpsl
cmp
push
lcall
mov
cmp
cmp
cltd
add
bound
xor
ret
and
pop
sub
aaa
pop
xor
shrl
dec
xor
ret
lcall
dec
loope
sub
jg
not
movb
shlb
or
lods
mov
sub
test
cmp
push
aas
mov
lds
pop
jae
jle
insl
and
rcll
sbb
out
cmp
jle
or
daa
sbb
imul
loope
mov
ja
push
push
inc
push
pop
sbb
nop/reserved
push
in
std
inc
std
sahf
das
inc
stc
jmp
mov
sbb
and
jmp
ja
dec
sbb
rclb
sub
lods
outsl
test
mov
sub
lret
cmp
mov
cld
dec
sub
or
insl
inc
and
addl
scas
dec
cltd
ret
pop
ds
sub
sbb
add
js
and
push
out
push
pop
mov
sbb
xor
imul
test
mov
cld
xchg
shll
sbb
adc
and
aam
mov
arpl
sar
popa
outsb
add
push
mov
jo
add
cmp
adc
testb
in
shrl
lods
loope
movsb
mov
push
insl
sbb
test
add
movsl
sarb
or
cld
jbe
or
hlt
in
or
inc
mov
and
push
jg
mov
inc
clc
mov
shll
out
idivl
xor
cmc
adc
cmp
movsl
mov
test
inc
movsb
daa
insl
aam
data16
frstor
xor
movsl
div
push
stos
cmp
cmp
and
cmp
mov
test
cld
xchg
jnp
sti
push
rcr
pusha
iret
fsubl
movsb
adc
and
jle
and
popa
inc
push
mov
xor
cmpsb
hlt
test
ss
mov
mov
and
jmp
dec
cltd
out
mov
fidivrl
inc
dec
in
loopne
push
xchg
lods
push
sbb
or
adc
mov
add
cld
dec
pop
mov
sub
mov
cmp
add
enter
inc
inc
lahf
and
jge
mov
ja
pop
ret
sbb
jecxz
mov
sub
pop
pop
mov
and
push
sar
mov
mov
or
test
outsb
movsb
xor
std
pop
sbb
mov
pop
xchg
clc
enter
jge
jb
and
lds
insb
sub
or
xor
jp
and
and
inc
clc
jge
cli
stc
push
inc
mov
call
pushf
out
aaa
sbb
out
ja
xchg
popf
ljmp
jne
fs
fidivrl
fistpll
xor
mov
xchg
shrb
mov
jb
ds
adc
std
cmpsb
hlt
and
adc
sub
jae
lods
fldt
scas
mov
or
inc
dec
sub
test
aam
test
or
xor
inc
scas
adc
jecxz
cmovge
jecxz
popa
in
adc
movsl
fmuls
popa
or
pop
cmp
cmc
out
dec
sbb
sarl
jno
xchg
cmp
pop
and
dec
rcll
mov
fdivrs
fdivrl
sbb
dec
sub
fstl
cmp
aaa
jae
cmc
xchg
insl
xchg
and
pop
mov
push
or
nop
std
pop
int3
inc
adc
xor
shlb
push
xor
adc
arpl
push
adc
clc
popa
mov
es
and
mov
cld
pushf
xor
sub
or
and
inc
push
ja
push
dec
imul
clc
movsl
fwait
pop
cmp
push
out
push
ja
push
inc
icebp
in
fcomps
repz
in
sub
int
cmp
loope
cmc
movsb
mov
std
push
test
lahf
and
sbb
mov
lahf
xor
mov
xor
cmp
mov
cmp
jmp
and
call
dec
or
pop
stos
sbb
int
or
mov
pop
rcr
lret
dec
xor
fwait
pop
mov
pop
pop
jle
cmp
pusha
and
mov
mov
enter
inc
mov
push
shr
sub
xor
mov
pop
enter
data16
cmpb
lcall
faddl
inc
mov
pushf
shl
pushf
in
mov
jne
repz
adc
xor
push
add
jae
mov
mov
sub
and
jae
decl
negb
notl
bound
pop
test
scas
icebp
mov
aam
and
call
mov
mov
nop
mov
jnp
ret
pop
jae
cltd
xchg
sahf
pop
xor
or
ret
cmc
fdivl
cld
inc
adc
inc
mov
sti
out
cltd
or
sbb
cltd
xchg
call
dec
movsb
and
add
and
jecxz
xor
sbb
mov
in
adc
sbb
add
xlat
inc
inc
and
ret
and
ja
outsl
xchg
or
nop
fs
push
dec
xchg
call
sbb
loopne
pop
nop
xchg
mov
add
outsl
sub
push
sbb
and
pop
or
cmpsb
fnstsw
in
sbb
ja
and
fcom
sti
lret
add
dec
xchg
push
sbb
cmp
jp
std
shr
cmpsl
daa
and
or
adc
and
xchg
mov
clc
adc
idivb
test
mov
xor
jg
cld
pop
call
mov
jp
jne
faddl
movsl
add
mov
es
xchg
outsb
adc
int
push
daa
fsubrl
sahf
and
push
das
inc
aad
das
inc
lds
and
loopne
insl
and
loopne
ret
push
popa
adc
pop
adc
pop
and
xor
pushf
aad
sub
push
push
addb
cmp
and
ss
test
es
in
mov
pop
das
shll
repz
mov
push
xor
adc
test
jecxz
in
shll
pop
lea
cld
popa
or
xchg
cmpsl
sbb
test
mov
and
cmpsl
push
cmp
stc
enter
lods
popf
in
mov
dec
and
hlt
out
xlat
das
xor
xchg
jne
push
nop
aaa
arpl
test
fxch
jb
and
xchg
sbb
cmc
and
xchg
cmp
mov
or
inc
cmp
and
in
cmpsl
cmp
icebp
add
or
pop
cmp
movsb
les
and
int3
std
cmpsl
cmp
mov
or
mov
and
and
and
push
es
out
shll
and
mov
aam
inc
sub
inc
adc
aam
les
xorb
outsl
mov
jle
sub
push
mov
xchg
and
jg
hlt
mov
pop
and
mov
adc
mov
and
sub
mov
jl
loope
adc
jmp
jecxz
vcmpsd
dec
enter
and
dec
shlb
testl
std
xchg
sub
or
cmp
mov
andb
je
push
jl
shrl
xor
std
add
loope
lds
add
jne
sub
mov
scas
in
fucom
sbb
vpminub
mov
inc
test
and
xchg
fs
sub
jl
add
sub
aad
movsb
fs
inc
cmp
add
inc
cltd
aad
sbb
add
shl
or
vpcmov
enter
inc
add
sarl
das
inc
sub
clc
add
pop
or
dec
fs
jg
and
and
push
shrb
notb
sub
cwtl
gs
mov
mov
mov
push
sub
xchg
or
mov
or
test
inc
ja
cmp
cmp
xor
push
inc
add
adc
clc
adc
imul
adc
cmp
mov
add
sbb
push
mov
sub
xchg
push
and
and
and
pop
lods
pusha
pop
mov
jl
cmc
cmp
push
ret
push
out
push
or
dec
stc
mov
sbb
cmp
imul
xchg
inc
mov
scas
cmpsb
jbe
in
scas
les
test
xor
pop
test
jle
push
int3
test
punpcklbw
cmp
call
jmp
aaa
ss
xor
shl
divl
movsl
sub
adc
pop
push
add
inc
std
movsl
xchg
xchg
or
push
or
aaa
enter
lods
test
cmp
sbb
add
mov
test
sbb
mov
wbinvd
or
jmp
xor
out
fsub
jno
lods
mov
lcall
jmp
or
andb
jae
mov
icebp
mov
push
inc
ds
lods
cmp
lea
sbb
inc
in
xor
repnz
sub
cmp
enter
mov
call
push
mov
sub
test
sub
inc
pop
int
inc
aad
xor
pop
cs
loop
or
insb
cwtl
lods
shlb
push
bound
lret
in
into
or
mov
call
popa
loope
aad
push
adc
and
mov
xchg
insl
xor
addr16
repz
pushf
inc
xchg
mov
sbb
clc
sbb
inc
les
iret
push
xor
dec
clc
xor
pop
movsb
test
pop
xchg
out
out
add
adc
std
pop
data16
inc
mov
insl
mov
push
movsb
repz
lock
test
jecxz
mov
stc
jno
ljmp
nop
sub
shll
adc
mov
mov
inc
in
cltd
xchg
fnstcw
arpl
test
inc
xlat
cltd
lds
mov
sahf
cmc
sub
inc
lahf
cmp
and
jne
adc
cmc
fimuls
xchg
sub
andl
loope
lds
lcall
or
add
imul
lods
pop
inc
sbb
add
daa
es
mov
shr
decb
xchg
cli
lret
mov
pop
mov
sbb
xor
sub
add
mov
or
dec
xchg
adc
jmp
add
movsb
enter
cwtl
and
in
xor
mov
xor
xor
add
orl
movsl
inc
call
or
movsb
cmp
es
cmpsb
lret
jnp
and
loope
imul
xor
pop
outsl
mov
std
adc
lds
pusha
mov
jge
gs
out
ss
in
andl
cmp
out
ret
and
mov
jae
sub
sbb
inc
and
push
out
dec
fadds
clc
jge
aaa
in
jbe
jns
imul
adc
jns
movsb
mov
lods
cmp
ret
addr16
jmp
push
ja
loopne
push
cmc
cmp
js
loope
xchg
cmp
pusha
xlat
cmpsl
xchg
jle
jb
pop
xchg
pop
repz
repz
fs
and
jne
mov
imul
ja
adc
mov
ret
adc
jnp
movsb
and
movsl
sbb
cmp
jne
das
mov
inc
fwait
pop
mov
pushf
mov
pusha
movsl
xor
inc
notl
dec
jl
and
out
sub
mov
add
mov
mov
sub
and
add
fs
aaa
rcll
cmpsb
mov
dec
in
lds
add
hlt
push
and
adc
out
mov
andb
repz
mov
sub
inc
xacquire
icebp
rcll
iret
icebp
movsl
mov
xchg
in
mov
and
push
cmp
movsl
or
aaa
cmpb
and
lahf
sbb
sbb
pop
daa
adc
push
inc
pop
add
scas
mov
orl
dec
lods
adc
rorl
xchg
mov
xor
push
sub
fstpl
inc
and
lahf
add
shl
fsubs
xchg
mov
stc
sub
pushf
shll
sub
cmpsb
sub
lds
xchg
in
sub
cmc
in
cmpsl
cld
lret
aas
mov
mov
out
push
inc
pop
mov
in
xchg
test
movsl
and
and
xor
std
push
in
and
cmpsl
mov
sub
add
cli
jbe
clc
xchg
sbb
mov
pop
jle
pusha
sbb
add
pop
mov
inc
xor
push
push
dec
sbb
and
imul
mov
jecxz
sbbl
lock
fwait
popa
dec
dec
pop
jnp
mov
xor
sub
dec
and
pushf
sbb
int3
in
mov
sahf
sbb
inc
outsl
scas
or
scas
movsb
xor
cltd
les
and
jle
cmpb
xlat
in
and
inc
imul
filds
inc
cmp
and
imul
aad
or
pushfw
jae
inc
cmp
add
and
cltd
xor
in
mov
cmp
adc
loope
in
movsb
cmc
dec
xchg
xor
sbbl
inc
xchg
ss
insl
sub
in
xor
and
stc
mov
test
xchg
es
fistpll
pop
ffree
cmc
fsubp
cmp
rcrl
xor
mov
push
or
xor
push
dec
pop
je
add
mov
movsl
ss
xor
dec
jecxz
dec
lods
xor
enter
or
xor
push
sub
and
and
outsl
xor
movsl
mov
movsl
out
push
imul
xor
push
mov
stos
fldcw
mov
dec
sub
or
rcr
jne
out
cld
push
into
sub
shlb
jne
cmp
aas
pop
and
clc
clc
push
cmp
mov
pop
ja
add
fnstenv
repz
cmp
mov
pop
pop
shlb
xchg
dec
jo
or
jo
push
out
pop
cmp
icebp
cmpsl
sarl
pop
xchg
popf
adcb
adc
pop
mull
out
xlat
mov
cltd
sbb
rorb
dec
call
cli
neg
pop
adc
cmp
add
lcall
sbb
nop
movhps
mov
jmp
and
jge
cmpsb
xchg
xchg
clc
faddl
aad
mov
adc
loope
adc
pop
lods
dec
shrb
cld
push
gs
cwtl
jnp
ror
dec
push
mov
xchg
orl
or
jno
and
fmul
inc
lock
inc
xor
adc
sarl
testb
push
loopne
daa
sbb
cmp
loop
cmp
push
in
jmp
out
jecxz
inc
add
mov
imul
cmpl
aad
xor
add
jg
push
cmp
int3
enter
xor
es
lahf
xor
sbb
and
sub
push
fs
xchg
in
jge
cmp
push
add
hlt
add
or
pushf
mov
sub
push
aad
in
and
daa
faddp
stc
jle
inc
xorb
lods
into
loop
je
cmc
xor
jl
lds
mov
mov
in
icebp
aad
subb
jmp
push
push
adc
faddl
test
lock
das
cmp
pop
pop
push
es
xchg
xchg
add
test
rcr
and
inc
xchg
cmp
les
jl
add
pusha
mov
cltd
dec
test
pop
mov
ja
les
add
cmp
jnp
jecxz
movsb
push
fdivrs
inc
lock
jl
adc
stc
push
xchg
add
test
mov
mov
int
sub
mov
mov
mov
xor
les
pop
adc
sub
add
repnz
imul
test
and
inc
std
add
pusha
lock
jae
or
xchg
pop
and
mov
add
test
ss
push
pop
and
jne
cmp
loop
popa
cmp
comiss
rol
hlt
adc
imul
cwtl
inc
add
mov
cld
dec
unpckhps
aad
mov
cwtl
call
pop
fnstcw
ja
jb
push
jae
lea
push
xor
and
ss
xor
xchg
icebp
pop
sbb
ljmp
mov
test
sar
adc
out
pusha
push
push
cmpsb
loope
push
adc
cmp
rcrl
cmp
jnp
adc
je
cmp
mov
imul
popf
es
sbb
or
xor
loope
cmp
mov
inc
mov
das
cmc
shrl
xor
sbb
rorl
xchg
es
and
adc
cmpsb
inc
push
cmc
mov
cltd
and
insl
enter
js
scas
pusha
int3
xor
sub
pop
sub
dec
test
aam
xchg
mov
and
dec
insb
dec
cli
cmp
cmp
dec
daa
loopne
loope
sub
idivb
push
test
mov
xor
int
je
aad
mov
xor
insb
push
je
mov
mov
add
sbb
push
mov
inc
xor
cmp
sahf
or
sahf
std
shlb
pushf
pushf
cmp
add
xchg
push
and
in
dec
jno
cltd
sub
insl
das
xlat
add
mov
dec
add
mov
clc
loop
jb
ss
orl
jl
cltd
mov
dec
add
mov
cmc
movsl
cmp
inc
push
mov
jae
xchg
sub
ljmp
xchg
mov
andb
jae
cmp
daa
inc
fildll
jmp
call
mov
es
add
jmp
dec
std
adc
jne
jno
lds
inc
xor
push
and
sbb
movsl
sub
dec
je
and
mov
int3
std
ja
adc
stc
lea
push
jbe
outsl
hlt
cmp
or
sahf
mov
mov
scas
xchg
or
int
pop
andb
pop
xor
aam
mov
adc
std
cltd
jns
dec
cld
and
popa
ja
lahf
rcll
loop
jg
adc
mov
loopne
aaa
inc
cmp
jge
dec
sti
inc
pop
gs
cld
pusha
or
lds
or
adc
push
dec
decl
imul
daa
cmp
mov
cli
mov
cli
in
cltd
sub
jns
and
mov
ja
pop
push
adc
stc
xor
shll
addr16
in
hlt
cmp
adc
int
das
xor
dec
pop
and
xor
mov
sub
je
outsl
inc
jae
cltd
and
xchg
push
aam
sub
mov
leave
std
mov
jg
in
test
cmp
shll
xor
negl
pop
cmp
test
sbb
cmp
jb
sub
clc
icebp
movsl
mov
test
cmovne
stc
jge
push
daa
jecxz
stc
add
shl
push
cmp
mov
pusha
mov
dec
lahf
je
add
push
ds
cmp
cmp
shl
mov
xor
rorl
mov
mov
add
scas
jecxz
add
pop
hlt
xchg
xchg
movsb
cmp
xor
pusha
inc
jl
jge
outsb
inc
aas
movsl
add
xchg
push
pop
nop
mov
cld
push
pop
ja
dec
and
call
mov
pop
aaa
pushf
cmpsb
adc
xchg
inc
and
rcr
mov
iret
xchg
loopne
adc
push
sahf
jge
lods
mov
sbb
inc
dec
js
lahf
cmp
je
hlt
jb
stc
lods
lcall
mov
xchg
cli
ret
fs
lret
cmc
sub
fistps
inc
jle
and
out
sti
cli
adc
adc
and
movsb
jnp
pop
push
fsubrl
out
cmp
push
inc
cmpsl
inc
push
cmc
cmp
lods
pop
leave
dec
or
sti
mov
inc
out
das
xchg
mov
dec
mov
add
cmc
jg
push
test
rclb
into
call
add
notb
aam
pop
test
adc
mov
hlt
aas
cmc
adc
and
lret
sbb
mov
or
mov
ds
push
sbb
jnp
stos
pop
sub
cmp
xchg
mov
adc
frstor
jae
add
jl,pt
jmp
adc
xchg
push
mov
ret
inc
loop
or
xchg
cmp
insl
mov
jne
jmp
xchg
sahf
jne
xchg
test
xchg
pop
pushl
xor
and
mov
cmpsb
pop
insl
inc
mov
or
mov
add
cltd
inc
inc
adc
push
js
or
push
inc
cmc
cltd
xchg
outsb
negl
insl
int3
lock
outsl
and
fucom
mov
insl
ljmp
hlt
mov
cmc
test
adc
cli
xor
jns
movsb
mov
jmp
jb
mov
cld
sbb
cltd
sbb
push
jo
mov
jb
add
xor
pop
xor
xor
lahf
push
lods
mov
pop
imul
xor
jecxz
pop
lea
movsb
xor
or
push
into
mov
jne
or
adc
sub
push
cltd
push
jne
push
mov
mov
out
sub
add
hlt
adc
adc
mov
lahf
inc
xor
cmpsb
nop
xchg
push
mov
inc
stos
cmp
icebp
clc
cmpsl
aad
test
in
mov
inc
movsl
inc
inc
push
mov
testb
mov
popa
cld
jg
or
ss
out
ja
and
inc
xchg
mov
daa
lods
rclb
and
cmpsl
scas
arpl
mov
iret
xor
xchg
xor
or
sti
sbb
outsb
hlt
and
lods
adc
sbb
and
in
jnp
lea
mov
xchg
sbb
sbb
xor
mov
jecxz
xor
jl
push
aaa
mov
inc
sbb
add
pushf
cmpsl
icebp
incb
movsl
jne
dec
xchg
inc
lods
sub
mov
enter
mov
sbb
pop
pop
mov
mov
lcall
das
das
adc
and
cmp
xor
jecxz
out
add
je
ss
xchg
jne
xchg
aas
cmc
or
jmp
adc
push
pop
insb
pop
jle
and
cmc
ss
adc
jb
stc
sub
cmp
iret
sub
mov
and
dec
in
clc
loope
add
sub
jo
pop
sub
loopne
add
jg
push
jl
and
mov
gs
pushf
add
mov
dec
and
inc
jmp
push
loope
ss
mov
movl
push
out
jle
mov
adc
bound
bnd
shll
adc
clc
adc
push
out
and
std
dec
and
sbb
les
mov
and
inc
in
sub
ljmp
mov
cmp
adc
mov
daa
lahf
cmp
stc
mov
jbe
cmp
jl
adc
loope
insb
sbb
push
dec
aas
jecxz
mov
pop
add
iret
leave
xor
loopne
push
cmc
add
loop
xor
xchg
test
fiaddl
push
inc
cmp
dec
aad
jae
insl
xchg
sub
stos
gs
dec
lods
iret
sbb
mov
dec
sub
pusha
dec
xchg
not
inc
lret
xchg
dec
mov
fucom
in
mov
adc
adc
mov
je
movsl
fld
jno
lods
xchg
ja
out
dec
xchg
cltd
add
dec
and
pusha
push
icebp
mov
jg
add
cmpl
jne
inc
subl
mov
xchg
jno
rclb
shll
sbb
mov
lods
insb
shll
clc
cmp
int3
cmpsl
je
xor
inc
mov
frstor
push
aaa
mov
std
push
sbbb
cwtl
inc
test
sbb
daa
pop
scas
inc
movsb
loopne
gs
xchg
leave
in
add
shl
shll
inc
rcr
add
mov
push
cmp
pop
jnp
and
cmpsl
mov
cmp
es
notl
insl
fs
xor
xchg
push
lret
sub
lahf
rolb
sbb
adc
push
xchg
sub
mov
mov
add
mov
mov
add
jecxz
hlt
movsb
icebp
ss
cmp
daa
stc
jle
ss
add
xor
sub
push
addb
movsb
iret
xor
jmp
xor
adc
addb
hlt
cmp
add
add
cmpsl
push
nop
ss
sbb
mov
xor
cmpsb
add
popf
mov
jmp
cli
inc
pop
cli
lcall
and
add
cmp
and
movsb
mov
adc
in
aad
cmp
shll
inc
adc
loope
and
gs
das
cmp
je
sarb
fs
jle
add
inc
jl
test
adc
pop
add
adc
movsb
and
push
cmp
ds
sub
loope
adc
inc
add
fsub
adc
mov
add
in
mov
dec
mov
out
sbb
lds
out
mov
into
pop
push
cld
sbb
out
mov
enter
and
cmpsl
jmp
or
and
imul
mov
jbe
out
dec
sub
orl
je
pop
out
adc
lock
inc
sbb
adc
test
inc
mov
adc
and
cmp
pushf
dec
xor
cmp
adc
sub
push
or
and
push
roll
popf
js
data16
inc
add
shrb
cmp
pushf
cmpsl
out
xchg
dec
test
sbb
out
adc
retw
ljmp
cmpsl
aaa
jns
pop
sbb
clc
mov
scas
xor
sbb
jecxz
stos
out
cmp
lds
push
insl
or
dec
jne
inc
xor
inc
lcall
movsb
test
push
popf
leave
sbb
pop
mov
outsl
push
lahf
sub
mov
adc
mov
cmp
aas
out
je
jnp
mov
in
and
and
xchg
sub
xchg
in
add
mov
int
or
lret
loop
jle
fldl
pop
repnz
push
xor
dec
ds
cmp
sbb
inc
inc
ret
add
push
mov
sarl
dec
hlt
mov
xor
imul
ret
xchg
and
mov
aad
mov
outsb
into
rcrl
add
sub
rcrl
cmc
lcall
adc
arpl
inc
add
adc
inc
cmp
imul
cmpsl
jne
repz
rcll
pop
sbb
ja
nop
dec
shll
int3
fistpll
cmp
mov
repz
int
inc
movsl
and
pop
cli
repnz
lock
jb
inc
adc
daa
subb
dec
fldcw
push
call
int
cmp
push
sub
or
xor
cmp
aam
movsl
mov
push
and
dec
pushw
cmp
repnz
xor
ss
mov
add
and
mov
enter
lret
add
arpl
mov
addr16
dec
arpl
jl
mov
adc
cmp
rol
and
lods
mov
jle
ljmp
imul
popw
inc
pop
leave
jge
jbe
movsl
jb
ds
jne
bound
je
inc
push
mov
sub
pop
stos
push
movsl
sbb
fimuls
hlt
mov
add
pusha
outsb
movsb
inc
sub
dec
sub
cmpl
xlat
and
sbb
in
and
cmp
in
out
inc
shl
movsl
push
sbb
in
mov
inc
popf
sbb
popa
sub
pop
aad
es
cs
divl
sbb
sahf
insl
in
lahf
and
ja
adc
xchg
ljmp
cmp
pop
loope
sbb
movsb
inc
cltd
sbb
pop
or
cmc
pop
jmp
push
addl
popf
fs
adc
pop
inc
pop
cmp
push
adc
aaa
sub
in
cwtl
cmp
and
inc
xor
lds
pop
mov
lods
push
aad
sbb
out
sbb
jmp
mov
gs
xor
cli
mov
mov
jle
jg
ret
je
lahf
ss
dec
cmp
adc
add
add
xor
int3
push
and
mov
inc
mov
call
in
sub
and
pusha
iret
add
fs
sarl
adc
sbb
add
cmp
mov
pop
in
idivb
sub
ret
in
fwait
cmp
in
mov
data16
pusha
ret
push
cmp
gs
sbb
xor
dec
xor
stc
adc
mov
and
lea
mov
fdivrl
in
push
dec
test
movsl
lock
repz
test
cwtl
add
mov
lods
mov
sub
daa
cmp
mov
jbe
mov
shll
fdivl
orl
shll
iret
in
outsb
loope
or
cmp
call
pop
das
jne
cmp
lds
xchg
lods
mov
cmp
aas
fwait
sub
in
pushl
sub
pushf
lds
pop
inc
cmp
add
xchg
and
jl
add
mov
daa
das
rcl
xlat
shlb
and
or
jnp
in
movsb
and
cmpb
test
mov
idivb
pushf
mov
mov
add
dec
mov
pop
in
xchg
inc
sbb
sub
and
aaa
movsl
lods
cs
daa
mov
ret
rclb
je
test
aaa
xor
cs
sti
fcompl
sub
test
fldl
pop
daa
out
sub
cmpsl
stos
and
stos
movsb
movsl
stos
in
stos
jnp
cmpsl
or
sub
xchg
adc
sbb
push
lods
es
mov
inc
and
insl
jae
xchg
push
pushf
lods
mov
sbb
add
pop
and
mov
xor
scas
xor
data16
pop
sti
push
xor
jnp
fcompp
push
mov
sub
jbe
add
repz
push
xchg
or
xchg
inc
or
add
mov
and
je
mov
xor
mov
stos
cmc
ja
fcomp
and
pop
add
movsl
repz
pop
or
insb
sar
imul
jmp
jne
clc
fsts
test
nop
mov
add
inc
cmp
jl
add
es
fimuls
mov
movsw
lock
xchg
and
dec
or
xchg
push
into
push
xchg
shrb
mov
stc
pop
decb
lahf
test
xor
jmp
xlat
inc
ja
inc
and
sub
inc
add
cmpsb
sub
sbb
xchg
push
js
sarl
jmp
insb
repz
outsl
int
int3
test
pop
sub
mull
or
pop
and
popf
insl
xchg
and
pop
dec
or
cld
das
notb
dec
dec
ljmp
lret
and
jge
loopne
call
mov
out
out
sbb
mov
sti
lcallw
shll
out
sub
pop
mov
aas
or
int3
and
cmp
arpl
dec
adc
jecxz
test
movb
nop
loope
xor
or
test
sbb
and
xchg
in
lret
jge
pop
or
or
frstor
and
sub
insl
popf
into
inc
fbld
sub
mov
cmp
rorb
lret
clc
push
dec
or
jns
push
mov
out
dec
push
push
push
pop
int
mov
or
mov
roll
jle
pop
icebp
hlt
out
ja
fs
dec
dec
pushf
nop
mov
cmp
push
sub
sbb
popw
aaa
iret
jne
push
xchg
lret
popf
push
ret
aam
sub
in
or
into
ja
faddl
fwait
cmc
mov
jno
inc
aas
jmp
scas
daa
cld
pop
push
cmc
lahf
pop
dec
jl
hlt
dec
sbb
fidivs
rcrl
aad
or
mov
les
aaa
pcmpeqw
arpl
push
lods
mov
iret
mov
mov
push
jo
or
ljmp
xor
repz
das
cltd
pop
xor
inc
cmp
or
mov
xor
jno,pn
inc
xchg
and
jl
push
sarb
sbb
jle
pop
std
jl
je
add
enter
dec
clc
mov
xor
dec
ss
adc
cmpsb
pushf
mov
stc
in
fisttps
sub
xchg
lret
adc
ret
mov
test
enter
cmp
je
cs
arpl
jle
gs
rol
and
mov
xchg
and
es
adc
unpcklps
mov
repz
popf
jecxz
pushf
ret
pop
mov
jg
xchg
lds
out
scas
aad
cmp
sti
push
pop
call
jmp
cmp
pushf
inc
aaa
or
addr16
jae
test
inc
cmp
mov
inc
ret
sbb
test
ss
outsl
std
adc
outsb
inc
dec
out
les
or
das
jne
rcll
sub
sbb
std
add
cmpsb
cmc
cwtl
cs
loopne
xchg
sahf
jo
gs
ja
call
xchg
repz
jl
inc
jno
popf
jo
sbb
mov
mov
mov
inc
and
insb
daa
test
xor
cmc
dec
inc
test
adc
test
fcomps
dec
addr16
add
sub
clc
inc
movsb
pop
cmp
pop
and
hlt
jb
loop
sub
sub
jns
lods
push
dec
fs
ret
xor
lods
xchg
stos
and
div
sbb
mov
lods
in
movsb
pop
inc
pop
xor
add
mov
push
ljmp
mov
in
pop
out
sbb
test
jmp
mov
add
mov
sahf
dec
int3
ret
clc
mov
sahf
xorl
repnz
sub
or
lock
nop
inc
pop
xchg
push
inc
mov
popa
inc
aad
mov
push
sbb
mov
std
popa
dec
xor
std
adc
pop
mov
rcrl
stc
ja
sbb
test
dec
or
and
mov
out
push
or
sarb
jge
sbb
sbb
inc
cmp
mov
cmp
movsl
sub
push
mov
shll
andb
lods
mov
enter
mov
in
orb
out
subl
or
cmp
shlb
add
repnz
cmp
adc
mov
jmp
inc
sbb
enter
stc
inc
push
xor
inc
aaa
lods
mov
nop
loop
and
sbb
lret
xor
add
mov
sarl
inc
enter
xor
movsl
push
fiadds
cmpsl
add
lret
add
testl
aad
xchg
or
int3
push
sub
mov
js
lods
pusha
popa
out
insb
insl
loope
inc
test
xor
in
pusha
pop
insl
adc
cmpsb
outsl
xor
das
dec
mov
push
cmp
lds
or
aaa
movsl
ret
inc
pop
out
cmpsl
scas
cmp
leave
xor
jge
rorb
mov
sbb
divl
mov
movsb
dec
push
mov
pop
mov
push
jbe
int
jae
xchg
aaa
aaa
add
push
adc
jg
movsb
ja
xchg
cmp
insb
push
sahf
es
popa
lahf
pop
mov
sbb
ja
xchg
shrb
and
cmp
add
jmp
clc
xchg
sub
sahf
jne
pop
or
mov
inc
pop
xchg
sub
test
adc
and
sub
jmp
adc
sbb
jbe
repz
ret
lahf
dec
in
nop
inc
fldenv
jno
std
nop
imulb
mov
xor
mov
mov
lcall
jg
mov
add
movsl
mov
popf
popa
stos
in
jle
inc
xor
sub
lods
shll
in
iret
ljmp
cmp
sti
insl
pop
int3
aam
sbb
jecxz
adc
inc
pop
cmp
icebp
and
mulb
movsb
lret
je
cmp
adc
xchg
fscale
fcompl
out
into
sbb
dec
add
loopne
repnz
pop
and
in
jl
out
enter
jmp
arpl
test
bound
movsl
sbb
lfs
cmp
push
inc
inc
mov
lahf
jns
out
dec
xor
hlt
mov
clc
xchg
iret
hlt
and
cmpsl
es
jg
mov
subl
pop
add
fisttpll
add
sbb
cld
in
push
cltd
xor
icebp
lret
ficomps
ljmp
test
mov
into
mov
hlt
es
add
or
sub
dec
call
insl
mov
or
std
inc
jbe
in
cmp
mov
dec
aas
pop
fs
cwtl
insl
and
imul
add
aaa
xor
cmc
inc
xchg
ja
lods
sti
mov
push
fidivrl
leave
lock
mov
dec
enter
test
xor
in
mov
jne
push
mov
lret
add
xor
jbe
lret
lock
loopne
lahf
xor
les
mov
push
push
mov
jecxz
add
or
test
cmc
sub
movsb
push
dec
insl
adc
jl
sub
inc
or
adc
jns
inc
enter
mov
adc
cmp
ret
cmc
pusha
dec
mov
pop
cmpsl
cltd
sub
popa
and
mov
adc
and
fabs
loope
addr16
mov
lea
fs
aas
jmp
pop
xchg
pop
xor
push
fsub
bound
inc
mov
cmp
test
cwtl
pop
aas
aaa
add
pop
pop
testb
lds
ljmp
jmp
xor
inc
cmp
pop
xor
leave
mov
inc
aad
aam
adc
call
or
loope
jbe
fbstp
in
std
or
pop
dec
pop
jno
popa
sbb
repz
test
loope
or
add
cs
jecxz
xor
mov
repz
fcomi
push
aam
out
pop
jmp
adc
sbb
int3
inc
pushf
dec
add
pop
pop
outsl
xchg
push
or
cs
test
mov
mov
icebp
inc
stc
insl
aam
subl
adc
xor
cs
mov
or
int
cmpsb
mov
mov
test
xor
movsb
lods
outsb
test
jne
adc
xchg
or
pushf
lock
movsb
cmp
cmpb
test
test
push
sub
mov
xchg
daa
sub
cmp
sub
mov
rclb
jb
sar
sub
cltd
mov
mov
mov
inc
sub
fcoms
es
sbb
sub
inc
jo
jb
mov
gs
push
fistpl
enter
jp
movsl
std
pop
std
mov
cmpsl
std
cmpl
std
add
repz
jg
jge
ror
movsl
lahf
test
or
call
add
jbe
jo
lods
fadds
out
cmpsl
xchg
xchg
add
mov
jne
fildl
jmp
sbb
cmp
pop
cltd
mov
test
sbb
mov
int
cs
and
popa
inc
add
call
testb
and
xor
mov
add
dec
test
jb
xor
in
nop
mov
mov
stc
daa
xor
lds
sbb
push
pop
decl
andb
adc
jo
xchg
add
les
and
movsb
pusha
ds
cli
xor
push
and
jo
into
sbb
jecxz
in
test
jecxz
shl
or
lahf
loop
mov
cmpsl
pushl
and
sub
inc
push
cmpsl
xchg
cmpsl
pop
mov
jo
jg
jecxz
or
cmp
mov
inc
xchg
adc
mov
ss
inc
ret
arpl
sbb
adc
iret
nop
mov
loop
lds
fcoml
mov
sub
pushf
push
gs
dec
cmc
movsl
stos
xchg
mov
scas
fsubp
cmp
leave
mov
lods
lods
stc
aad
xor
lods
insl
mov
mov
add
pop
mov
pop
les
call
or
mov
mov
push
js
dec
repz
mov
or
fildll
insb
cmp
inc
cmp
mov
adc
xchg
add
add
xor
sub
mov
test
hlt
ret
cltd
lahf
je
jbe
out
jp
in
data16
shrb
jmp
mov
sbb
test
fimull
outsl
or
daa
clc
jmp
lods
xchg
int3
in
mov
test
sarl
cmpsb
cmp
sbb
call
movsl
xor
mov
sub
cmp
movsb
dec
push
and
cmpsb
mov
into
gs
and
insl
dec
cmp
inc
mov
inc
pop
movsb
aaa
push
fsubp
inc
insl
movsl
vphadddq
cmpsl
aaa
mov
cmp
push
cmp
or
dec
loop
loope
or
adc
cmpsb
test
pop
aaa
sub
mov
add
mov
pop
test
pop
sbb
idiv
repz
mov
ret
dec
xor
roll
cmp
rorl
add
call
sub
sub
push
pusha
fistpll
aad
aas
stos
ljmp
add
mov
pushf
icebp
cmp
mov
lds
sbb
pop
stc
add
jnp
xor
mov
shll
push
fsubrl
dec
js
xchg
xchg
xlat
cmpsb
adc
popf
pop
mov
inc
cwtl
adc
mov
mov
hlt
dec
stc
pop
rcrl
scas
out
lret
sub
mov
test
pop
sbb
dec
stc
inc
xor
adc
ss
inc
mov
pushf
mov
dec
sti
sti
xchg
or
rorl
sbb
popa
ret
inc
cmpb
and
adc
mov
or
cmp
mov
movsb
push
add
cmp
stos
cmp
je
inc
pop
dec
out
nop
js
test
movsl
repnz
lcall
mov
aas
and
bound
mov
add
dec
inc
jae
sbb
mov
and
ret
lahf
jo
mov
add
btc
addr16
dec
xlat
scas
add
les
cld
adc
and
and
mov
add
mov
add
dec
pop
daa
jnp
adc
sbb
fwait
and
pop
adc
sarl
mov
add
fst
and
jno,pn
into
mov
sbb
je
imul
xchg
inc
xor
push
mov
inc
cltd
shr
xchg
add
jmp
add
inc
dec
jae
lea
jecxz
mov
push
pushf
aaa
or
jle
lret
fwait
push
mov
xor
and
scas
test
and
jne
stos
arpl
aas
push
movsl
shl
mov
mov
in
fdivrs
push
add
pop
cmp
sub
add
mov
jmp
cltd
rcr
sti
add
testl
mov
cmc
pushf
pop
in
jmp
bound
lahf
scas
mov
call
test
pusha
outsl
lret
add
and
xor
outsb
cltd
insb
dec
mov
mov
xchg
out
or
jns
stos
divl
mov
ja
enter
and
clc
call
mov
cmp
rol
sti
cli
std
ds
jp
and
xchg
shl
fildl
add
cmpsl
popf
daa
std
xor
xchg
jecxz
and
out
fmull
pop
add
sub
shll
mov
sbb
fbld
mov
fldt
lods
push
or
push
sub
idivb
lahf
cmp
repnz
jno
shrl
aas
dec
sbb
push
adc
out
sub
pushf
jns
int
test
lret
push
sbb
in
jg
fcoms
insl
in
iret
cmpb
dec
cmp
pop
xor
push
stos
add
addr16
movsb
loopne
ret
cli
inc
aaa
daa
and
add
sbbl
fldl
gs
dec
mov
mov
inc
xlat
jle
outsl
rcll
pop
cs
cli
neg
xchg
mov
and
ret
cmp
pop
cmp
faddl
imul
or
jmp
cmp
pop
dec
mov
loop
mov
data16
pusha
xchg
mov
loope
or
lret
in
out
fdivl
mov
sub
add
add
and
or
cmc
and
cmpsl
cld
divl
add
cmc
fwait
lds
mov
roll
movsl
test
pop
je
lea
scas
pop
and
dec
push
cwtl
push
jne
and
mov
addr16
pop
adc
xor
sahf
jne
jne
adc
sbb
loopne
or
add
es
sbb
adc
mov
sbb
jo
add
ja
xor
xlat
cmpsb
lahf
push
mov
int
add
scas
lock
add
cwtl
lea
rcll
rcrb
int3
out
jl
pop
cmp
mov
cli
inc
cmp
cmc
test
lods
inc
fs
mov
out
dec
imul
push
gs
sub
mov
jae
rol
inc
xchg
loope
stc
add
into
movsl
pop
cmpsl
adc
in
jne
adc
dec
mov
std
std
mov
and
jp
xchg
leave
xchg
mov
sub
enter
adc
push
test
cmp
mov
std
cmpsb
cmp
cmp
mov
inc
sub
repz
ds
sub
sahf
push
arpl
test
mov
loopne
sbb
push
jge
add
popa
mov
add
inc
mov
cmp
cmp
inc
push
lea
mov
aam
jp
xchg
lahf
sub
jb
je
pop
jnp
jecxz
xor
mov
aad
adc
movsb
cmp
mov
aas
cs
imul
xchg
add
mov
mov
xchg
les
mov
das
mov
das
repz
inc
cmp
sti
lods
loopne
xchg
and
push
xchg
leave
jnp
inc
push
pop
ficoms
fnsave
lds
ja
stc
inc
xchg
xchg
pop
daa
insl
sub
jmp
adc
jae
and
xlat
mov
pushf
mov
cmp
push
movsl
jbe
pop
stos
or
mov
add
sub
add
sbbb
inc
jo
push
sub
dec
stos
and
pop
mov
subb
out
mov
js
or
pop
and
mov
adc
jmp
cmp
add
push
xchg
outsl
sub
lds
in
lods
int3
xlat
out
jmp
inc
jne
es
push
and
ja
mov
test
daa
and
adc
add
sbb
mov
adc
lret
pop
jle
aas
inc
adc
dec
iret
sub
ret
fcmovnb
ds
pop
je
and
cmp
xor
ds
sub
addr16
popf
or
mov
cmp
cmp
cmc
cmp
in
jae
dec
mov
sub
fmull
adc
ret
add
mov
cmp
rcrb
xorb
loopne
in
in
cmpsl
lods
test
xor
shrb
cwtl
lret
daa
into
repnz
lcall
repz
add
cltd
test
fadds
mov
test
int3
mov
sbb
pop
out
movsl
mov
test
mov
addr16
mov
xor
pop
lahf
xchg
inc
popa
dec
mov
inc
scas
xor
push
test
add
mov
cmp
or
in
sub
mov
out
testb
pop
dec
inc
inc
cmp
leave
movsl
xchg
fcoms
ljmp
dec
pusha
enter
ret
adc
push
cld
xchg
inc
or
dec
push
mov
js
clc
popf
cmp
lret
xchg
lahf
in
cmp
test
std
sbb
mov
lcall
inc
cld
daa
mov
mov
jb
cmc
fistps
mov
adc
dec
divb
sbb
loope
gs
add
sub
mov
in
or
push
push
iret
xor
mov
and
dec
das
out
and
lds
dec
xchg
and
gs
cmpsl
dec
cmpsb
gs
and
cmp
in
sub
popa
pop
in
pop
sbb
xorb
mov
cli
repz
jno
outsb
fists
cmp
nop
iret
shll
ret
sbb
jg
dec
mov
sbb
mov
push
movsl
jae
ss
in
pop
mov
cmp
push
cs
hlt
sub
sti
sbb
pop
popa
pop
aad
sbb
cwtl
fs
and
fwait
sub
cmp
iret
add
loop
jnp
push
lods
jmp
inc
add
cmc
lahf
sub
mov
lods
lcall
lds
push
and
add
cmp
push
ret
dec
dec
inc
cmp
pop
and
xchg
lahf
sarl
cld
mov
call
mov
adc
call
mov
test
push
add
cmp
call
fstpl
cmp
cmp
xchg
in
and
and
aas
fldl
adc
pop
dec
ljmp
movsl
mov
dec
push
mov
push
cli
jg
pop
arpl
or
push
mov
adc
xor
in
jecxz
mull
inc
xor
testl
and
dec
jmp
add
dec
pop
xlat
push
push
lret
jge
test
je
or
or
shrl
test
jecxz
aad
popl
xor
lea
notl
out
gs
daa
fldcw
lds
cmc
test
sub
aas
in
pop
das
test
xchg
out
jo
pop
into
jl
rolb
addr16
mov
jae
sub
mov
inc
push
div
lods
dec
push
cmc
std
xchg
shrb
cmpsl
imul
add
lret
mov
cltd
add
inc
call
imul
xor
lcall
push
lcall
dec
call
movsl
jge
mov
imul
pop
sbb
enter
cmpl
js
clc
jae
mov
and
aam
stos
lock
int
or
mov
dec
mov
pop
sarl
xchg
mov
cmpsl
sbb
cmp
dec
mov
loope
mov
inc
xchg
aam
cs
rcrb
shl
into
pop
mov
inc
pop
push
mov
loop
or
xor
mov
shlb
stos
nop
xchg
mov
scas
movsb
add
jae
outsb
dec
mov
push
xchg
dec
ljmp
aaa
aas
and
clc
jns
aas
ljmp
push
add
pop
test
outsb
xchg
cli
inc
dec
jne
aaa
in
loopne
xor
add
xor
shlb
fimuls
out
adc
out
xchg
call
push
out
repz
mov
sub
or
hlt
adc
inc
clc
insl
test
cld
popa
ljmp
movsb
loop
cs
daa
lods
cmp
ret
jne
xor
add
and
js
nop
lea
pop
int3
mov
loop
pop
cmpsb
in
mov
faddl
push
lahf
incl
repnz
in
popa
and
mov
mov
mov
mov
sub
cmp
cmp
arpl
push
lods
mov
fiadds
adc
mov
adc
push
mov
mov
aaa
or
jmp
adc
cmpsb
negb
add
popa
ja
das
in
lret
and
mov
sar
pop
jg
fs
mov
ficoml
mulb
mov
fcmovnu
cmp
aad
sti
lea
lret
arpl
out
pop
cmp
insl
mov
mov
out
sub
sar
out
ljmp
push
lret
adc
jg
enter
repz
outsl
hlt
filds
ja
repz
xlat
mov
jmp
adc
pop
mov
pop
loopne
inc
scas
sub
outsl
cmp
and
rcrl
outsb
loop
nop
outsl
xor
pop
das
and
test
jp
cmp
fistpll
inc
lock
mov
mov
fdivl
mov
or
mov
jno
cltd
lcall
add
movsl
ss
and
or
je
test
add
and
adc
and
aam
mov
inc
sub
leave
roll
jbe
in
mov
scas
movsl
inc
fcompl
add
notb
pop
jmp
cmc
cmp
mov
rcr
mov
or
loop
mov
aad
mov
lds
test
outsl
sub
sub
mov
test
pop
jo
ss
int3
scas
pop
adc
imul
xchg
int
gs
cmp
adc
cmp
sbb
push
pop
and
test
pop
cli
fstpl
outsb
fstl
outsb
jae
jge
and
inc
and
test
fnstsw
cli
pop
mov
in
adc
xchg
inc
pop
in
inc
jmp
adc
icebp
gs
fcos
movsw
or
movsl
ret
mov
movsl
jmp
pop
cmp
sbb
add
in
nop
adc
sub
sbb
daa
cmp
clc
mov
int
cmp
cli
enter
dec
pushf
stc
sub
dec
and
inc
xor
sbb
and
pop
xor
push
cmp
and
and
sub
scas
jg
xchg
jae
loop
ss
add
mov
sbb
addl
and
ljmp
add
add
cmpsl
into
test
test
imulb
movsl
pop
sbb
sbb
int3
stc
xor
outsb
ljmp
xchg
lcall
fisubrs
and
arpl
cs
add
pop
aaa
mov
mov
push
movsb
bswap
loope
and
inc
add
xor
pop
lock
aas
mov
adc
xchg
test
sub
xor
dec
rclb
xchg
and
or
std
xor
dec
xor
movsl
test
push
cld
sbb
in
in
mov
or
push
xor
dec
cmp
inc
mov
dec
cmp
mov
jno
mov
and
add
nop
push
mov
push
mov
out
enter
rcrb
mov
push
in
divb
inc
movsl
jnp
mov
dec
sub
in
movsl
pop
mov
inc
and
cwtl
sbb
pop
sbb
lods
cwtl
jb
fs
mov
in
ret
push
cs
test
jecxz
pushf
cld
rcl
mov
aaa
add
pop
inc
sub
pushf
jp
jmp
cmp
mov
cmp
xchg
lcall
jae
fdivp
jbe
lds
popf
xor
xor
andb
stos
loopne
out
ret
pop
movsl
jb
xchg
fistps
popl
inc
fucomip
int3
movsl
gs
jmp
add
idiv
clc
mov
movsl
cmp
ss
dec
mov
mov
ja
mov
and
pop
inc
out
movsl
aad
negb
mov
dec
aad
enter
push
hlt
sbb
jns
pop
daa
add
or
and
and
inc
in
xchg
fwait
movsl
je
xchg
fstp
adc
hlt
push
and
mov
mov
ret
sbb
jo
movsl
cmpsl
sti
sbb
shll
lods
sbb
mov
loope
ret
cmp
add
cltd
ja
and
les
sub
sub
adc
jmp
ja
sub
clc
sbb
jno
pop
or
xchg
cmp
mov
testl
dec
jns
pusha
cltd
sbb
xor
xchg
inc
dec
mov
lea
pop
inc
lret
inc
rolb
stc
push
stos
stos
addr16
out
or
ret
and
xor
popf
out
push
mov
sbb
or
jmp
and
or
inc
push
lods
std
jne
and
nop
ss
inc
shlb
xchg
and
mov
fldl
cltd
fistpll
daa
cmp
hlt
and
mov
adc
add
stos
aad
and
jp
and
mov
dec
int
mov
push
and
or
fdivr
les
push
cld
push
inc
xor
push
movsb
push
roll
xor
add
mov
jl
sub
add
test
lds
dec
lock
bsr
dec
fdivs
mov
mov
outsl
push
ja
mov
mov
lea
mov
sbb
stc
push
roll
xchg
stc
inc
cmp
sahf
jl
mov
push
test
and
in
adc
inc
cwtl
jae
scas
push
dec
or
jns
or
push
adc
faddl
ljmp
movsb
fwait
cmp
add
inc
jmp
mov
call
xchg
call
xor
and
cmpsb
jl
ja
lds
iret
call
lahf
loop
add
aaa
mov
mov
xor
fimull
jmp
loope
pop
push
repnz
test
inc
pop
and
inc
das
sub
pusha
or
push
sub
and
and
inc
push
push
sti
repz
lahf
mov
mov
call
lds
add
xor
std
movsb
in
jmp
inc
and
push
inc
mov
test
loopne
test
mov
or
sub
cmp
dec
inc
daa
sub
mov
mov
nop
mov
cld
push
lods
decb
or
push
cmpsb
add
dec
lds
pop
std
rcrl
gs
xchg
cmc
aad
dec
jg
mov
cmc
pushl
fs
inc
ret
aaa
push
ss
cmc
mov
dec
sub
ja
xor
pop
mov
in
add
in
add
sub
pop
xchg
inc
subb
sahf
and
test
dec
fistpll
das
scas
jg
popa
mov
in
jge
inc
and
add
cltd
std
mov
decl
outsl
mov
lahf
jmp
mov
pop
mov
lahf
adc
frstor
xchg
inc
out
adc
icebp
adc
gs
notb
pop
imul
call
aas
in
xor
xor
or
jmp
xor
loope
insl
sub
mov
mov
fildl
loopne
pop
xchg
adc
mov
nop
jl
xor
add
dec
mov
int
push
mov
xlat
insl
in
jmp
jmp
dec
outsb
mov
dec
sbb
and
xchg
pusha
out
mov
push
mov
cmp
cld
mov
cld
sbb
and
fistpll
add
mov
xchg
fcomps
fidivs
add
pop
imul
dec
xor
jae
and
cltd
mov
les
out
inc
andl
jge
jno
inc
push
notl
stos
leave
mov
mov
sub
cs
dec
cmp
xor
lods
imul
xchg
mov
ja
cltd
daa
movsb
in
xor
dec
jns
mov
sub
sub
sahf
add
data16
inc
cltd
repnz
or
data16
into
add
divl
and
mov
in
adc
mov
adc
repz
jns
mov
mov
and
mov
fcoml
adc
test
setb
je
cmp
xor
xor
in
and
mov
imul
scas
push
xchg
aam
setbe
sub
shl
inc
cmpsl
or
notb
jge
outsb
xchg
inc
cs
push
inc
lahf
inc
daa
insl
mov
mov
mov
movsb
xchg
xor
es
sbb
in
insl
cmp
daa
shrl
inc
adc
or
push
dec
push
xor
xchg
aaa
or
cmp
sub
adc
mov
xor
or
test
repz
jb
sub
adc
pop
jo
dec
and
jne
sti
rolb
pop
adc
cmp
pop
mov
test
mov
ljmp
pop
insl
aas
hlt
ja
sub
test
fsubr
stos
dec
lods
xor
fbstp
cmp
insb
sbb
sahf
shll
push
out
jns
push
lret
pop
pop
jecxz
mov
mov
mov
fs
pop
pop
call
sub
rol
cmc
dec
outsb
mov
fdivl
in
jne
mov
ret
dec
push
inc
or
or
mov
and
mov
insl
mov
sbb
push
mov
test
add
sub
aaa
and
fdivs
mov
aas
popf
test
mov
dec
sub
ljmp
mov
hlt
rolb
sub
cmp
pusha
adc
add
push
dec
out
or
mov
and
pop
sbb
imulb
es
adc
xor
mov
outsb
cmpsl
jmp
or
mov
aad
mov
out
rclb
lods
sbb
inc
jl
dec
jmp
std
xor
out
int3
or
dec
add
cmpl
das
push
fdivs
mov
cmpsb
pop
xor
cltd
shl
cld
push
cmpsb
dec
push
das
sbb
mov
pusha
lret
and
fildl
pop
and
cmp
jle
cwtl
pop
mov
push
cmp
or
push
and
pop
and
push
inc
sarl
push
stos
aas
outsl
test
in
sub
mov
lock
mov
push
fstl
dec
push
pop
daa
sar
cmp
inc
jl
cmp
fsubrs
mov
lret
inc
xor
lea
out
insb
sbb
mov
dec
sub
int3
inc
je
dec
or
push
jecxz
inc
cld
test
inc
add
mov
sub
iret
and
outsl
inc
pop
adc
push
push
std
in
mov
aas
push
sub
es
adc
pop
dec
aad
das
inc
cwtl
es
in
in
push
aas
enter
jns
mov
xor
cld
gs
add
clc
adc
or
cmp
pusha
cmp
cmp
enter
fcomps
pop
push
out
or
ds
sbb
jmp
mov
sahf
or
cmp
out
es
loopne
div
pusha
mov
and
movsb
imul
popf
add
js
inc
xchg
cltd
dec
cmp
dec
sti
mov
outsl
dec
add
ds
cmp
pop
mov
inc
or
and
xor
mov
xor
inc
mov
addl
shrl
xor
xchg
sbb
in
add
ja
testl
ljmp
pop
or
sbb
outsl
xchg
test
and
mov
add
outsl
jp
movsl
xchg
mov
lret
int3
out
sbb
in
mulps
std
xchg
push
ud1
mov
stos
lret
cmp
addr16
xchg
xadd
add
out
push
or
insb
mov
xadd
or
nop
dec
jne
sarl
mov
ds
or
mov
aas
cmp
sarb
ret
notb
xor
or
xchg
adc
mov
push
iret
syscall
in
xor
lahf
fcoml
cmp
enter
loopne
test
or
cmp
adc
push
je
ja
negb
pushl
sub
mov
mov
std
out
xor
rcrb
pusha
pop
lahf
sti
subl
cmp
jmp
push
sbb
sub
jecxz
hlt
cmp
sti
out
nop
dec
js
and
push
cmp
dec
les
add
sbb
jbe
cmp
frstor
fs
stos
adc
or
pop
or
jecxz
sub
daa
mov
mov
les
cmp
push
ja
cmp
aas
inc
imul
mov
push
loope
cmc
and
into
fdivs
xchg
mov
js
icebp
sub
push
andb
sbb
js
jmp
xor
lahf
in
inc
cmpsb
pushf
ljmp
loop
cmp
sub
dec
sti
fnstsw
and
lods
adc
xor
test
lret
adc
xor
or
or
imul
pushf
in
sub
xchg
cmpl
sub
call
repz
pusha
push
outsl
movsb
lahf
cmc
mov
or
addl
mov
xor
shlb
xlat
xor
xchg
jbe
and
sub
inc
clc
and
rorl
or
fadds
addr16
dec
jbe
repz
pop
dec
iret
add
pop
sub
add
sbb
adc
push
das
and
sbb
push
sub
jmp
jne
jne
xchg
inc
inc
movsl
push
daa
push
ss
xchg
ret
sti
sbb
daa
je
hlt
shll
icebp
ffreep
jecxz
cmp
aaa
adc
mov
and
xchg
dec
lods
inc
sbb
pop
lods
ffreep
roll
into
mov
push
sbb
add
pop
imull
scas
lds
das
roll
add
aam
pop
add
add
push
shlb
fsubl
decb
daa
fldenv
cmp
ret
in
std
push
lock
mov
pop
mov
mov
arpl
sbb
add
ljmp
je
mov
sbb
in
hlt
push
aaa
cmp
mov
push
mov
ljmp
adc
adc
in
repz
mov
xor
sahf
decb
mov
adc
cmp
sbb
cmp
mov
add
arpl
push
mov
push
je
bound
and
dec
inc
mov
add
pop
test
bound
adc
pop
mov
es
lock
mov
movsb
xor
xor
xor
movsl
loopne
sbb
mov
xor
movsl
jg
lahf
ja
inc
xor
ss
ret
xor
cltd
and
pushf
push
int3
in
jge
fwait
adc
sub
inc
and
cmp
movsb
ja
fstps
jo
pusha
push
ja
jecxz
mov
add
stc
icebp
hlt
pop
cld
ffree
je
adc
in
pushf
xchg
adc
or
pop
and
call
das
subl
mov
in
pop
in
pusha
imul
pop
roll
xchg
push
lahf
sbb
cmpsb
pop
cmp
aad
mov
ljmp
pushf
subb
fidivs
xor
jns
out
jae
adc
loope
clc
repnz
repnz
loop
outsl
ljmp
inc
add
xchg
xor
or
fprem
test
and
int3
ret
add
ja
or
jae
movsb
shll
push
jb
xchg
ja
xor
cmp
inc
or
xlat
in
fs
lea
andb
sbb
dec
jecxz
and
ljmp
movsl
test
xor
call
iret
mov
push
iret
mov
mov
cmpsl
inc
mov
sub
test
add
inc
jno
jl
inc
frstor
pop
xchg
sahf
fadds
xor
mov
mov
inc
jp
adc
cs
pushf
xchg
in
nop
daa
int3
hlt
out
xor
adc
inc
inc
inc
jo
cmpl
cld
es
push
ss
outsl
rcrb
js
cltd
icebp
insw
rclb
pusha
pop
notl
xor
push
cmc
cmp
and
adc
in
push
je
xchg
mov
andl
xchg
dec
test
xchg
push
jne
mov
jno
test
pop
das
ja
push
ds
imull
insl
jle
mov
dec
std
dec
pop
sti
test
rorb
mov
mov
mov
pop
jb
fdivs
cmp
jle
add
loope
std
mov
nop
lds
ror
dec
pop
sbb
sahf
shll
data16
movsb
pop
lretw
test
jg
movsw
push
bound
inc
push
leave
iret
cmp
mov
add
pop
sbb
je
inc
mov
cmp
cmp
and
sub
add
xor
sahf
sbb
add
sub
repnz
mov
cmp
cmc
jecxz
xor
xchg
pop
add
lcall
push
stc
aad
inc
xor
daa
mov
push
dec
jbe
mov
push
mov
push
fadd
mov
aaa
mov
add
sub
lods
add
mov
cmp
lds
adc
mov
fwait
lea
cld
dec
int
ja
dec
adc
insb
and
mov
add
adc
cmpsb
call
adc
fcoms
inc
push
es
cmc
sub
bnd
inc
cmp
std
cmc
pop
mov
dec
aam
and
cltd
lds
in
fs
push
mov
and
lahf
filds
xor
loop
vfmaddpd
popa
lds
cmpsl
cmpl
adc
push
cmp
xchg
and
xchg
xchg
sbb
roll
ret
jae
fwait
testb
and
mov
mov
pop
pop
in
inc
inc
inc
inc
pop
aam
rcrb
leave
xor
ja
shl
push
mov
xchg
xorb
das
idivl
inc
pop
add
or
sub
cmp
and
lea
xlat
test
xor
dec
sub
jl
and
pop
test
cmpsb
xlat
sbb
mov
daa
lret
fisttps
out
mov
mov
jmp
jbe
sub
mov
xchg
je
or
sbb
inc
cltd
cmpsb
xchg
inc
ret
mov
dec
fidivrl
push
addb
xor
das
cli
lcall
clc
push
repnz
dec
inc
sar
leave
faddl
pop
adc
dec
imul
push
sbb
xor
test
in
cmc
inc
aaa
inc
call
sbb
cmp
shl
and
dec
movsb
insl
mov
and
sbb
sub
adc
fadd
das
xor
jl
sub
adc
mov
inc
gs
imul
sbb
inc
ja
push
push
add
pop
lock
fistps
jp
push
mov
inc
pop
inc
cmp
clc
movsl
sub
hlt
aam
xorb
xchg
cmc
mov
and
in
cwtl
popa
mov
jge
incb
push
pop
ds
ret
lock
imul
popf
mov
sbb
popf
lds
std
add
ret
jl
xor
pushf
ja
imul
lahf
movsl
in
shll
dec
sub
mov
aaa
fnstenv
lds
les
adc
lds
sbb
cmc
push
sub
mov
cltd
movsl
sub
jge
inc
insb
lds
pop
cmpsb
xor
push
movsb
movsb
inc
mov
leave
xor
jb
push
int
inc
bound
aaa
xchg
sub
mov
pop
pop
lret
cli
cmp
xchg
add
fcmove
divl
ja
pop
add
mov
cmpsl
or
push
pop
cli
icebp
mov
mov
jb
jae
lahf
sub
imulb
xchg
mov
test
sub
push
out
adc
mov
add
lea
inc
and
mov
fmuls
jne
mov
hlt
aad
push
in
sbb
sbb
and
mov
and
lods
push
cmc
std
aaa
ss
dec
icebp
cmp
in
sub
mov
add
and
jg
int3
inc
mov
push
inc
lock
adc
pop
cltd
jo
and
xor
int
cltd
and
mov
pop
les
sbb
movsl
mov
cmp
pushf
mov
loope,pt
sbb
xor
adc
cwtl
xor
aad
pop
int3
adc
faddl
xor
pop
je
lcall
and
pop
xor
out
sbb
adc
aad
fwait
adc
popa
add
add
leave
cltd
push
xchg
pop
ljmp
inc
sbb
dec
jp
dec
ljmp
addr16
ficoml
int3
scas
std
imul
in
xchg
pop
jb
leave
lahf
xchg
dec
cmp
mov
stc
cmpsl
fidivl
fdivl
push
gs
cmc
jl
fldcw
pusha
pop
aaa
shll
push
pushf
push
outsl
jns
call
sub
sarb
cld
lahf
mov
je
mov
push
cmc
dec
movsl
ret
xchg
inc
aaa
pop
jle
cwtl
imul
fbld
dec
sbb
insl
shl
iret
jo
add
ja
aaa
ja
add
daa
addr16
adc
roll
mov
push
enter
js
xor
aam
jo
pop
lds
add
and
dec
out
es
cmp
and
or
sbbb
dec
mov
or
mov
inc
add
out
push
sbb
push
cmpsl
nop
push
xchg
sbb
arpl
std
in
aam
sti
adc
inc
sub
mov
pop
in
xor
shll
fs
lahf
and
lock
push
arpl
fucomip
or
mov
jae
mov
xchg
jecxz
and
fs
mov
data16
ja
sbb
fnsave
pusha
xchg
sbb
dec
pop
dec
jg
and
sub
cltd
jne
leave
fs
int
out
leave
push
sbb
and
lods
popa
int
sub
adc
pop
cwtl
inc
add
inc
test
and
pushf
jg
adcb
pop
jge
push
jnp
inc
sbb
push
jg
cmpsb
scas
lahf
sbb
cmp
loopne
cmpl
rcrb
jmp
ret
push
daa
into
jge
cmc
popa
xor
sub
mov
mov
cli
cmp
out
dec
push
jecxz
lea
pusha
cmp
push
popf
add
xchg
imul
and
lods
addr16
cli
and
lods
and
ja
inc
out
ds
pop
jge
adc
or
xchg
cmp
test
mov
cmp
mov
testb
dec
out
lahf
int3
mov
aaa
gs
inc
sub
and
push
and
movsl
outsl
sbb
mov
push
or
cltd
rcrb
inc
inc
imul
ret
das
mov
call
cmp
in
cmpsl
or
push
dec
sti
push
dec
xor
int
not
enter
inc
sbb
test
ret
mov
push
pop
stc
int3
movsl
and
push
loop
xor
movsl
and
xorl
das
push
cmp
pop
scas
xchg
loop
pop
and
mov
and
xor
sbb
stc
pop
push
popf
sbb
add
mov
imul
movsl
dec
mov
dec
imul
sub
sbb
stos
ds
clc
incl
add
lods
movsl
ficomps
aam
mov
ja
adc
dec
pop
inc
and
inc
in
mov
cmp
push
flds
jle
daa
dec
loopne
inc
inc
mov
aas
jno
sub
in
push
sti
jge
or
push
sbb
jne
jle
imul
aam
mov
jge
in
mov
mov
jb
repnz
mov
in
mov
cli
ret
or
jne
mov
and
rolb
add
inc
pop
jp
movsb
mov
xor
mov
and
imul
jne
pop
insl
es
jl
loope
xor
out
arpl
call
dec
jnp
insb
mov
jnp
andl
movsl
mov
in
in
and
in
movsl
in
sarb
mov
aam
faddp
sbb
xchg
insl
decb
mov
aad
rcl
ss
es
out
xchg
add
add
aas
stos
xchg
repz
mov
adc
inc
cmc
shrb
add
inc
push
xor
xor
push
daa
rcr
inc
cmp
icebp
nop
inc
cmp
loope
icebp
subb
and
mov
hlt
jl
sbb
and
or
add
add
xor
daa
mov
cmp
add
inc
and
and
add
lods
je
int
mov
and
add
js
pusha
mov
jl
andb
cwtl
add
lods
lock
and
scas
pop
fiaddl
mov
js
test
push
adc
jg
sub
bndstx
or
aam
sbb
std
call
scas
pop
sbb
add
std
or
pushf
imul
xchg
sbb
mov
xor
in
cmpsl
push
pop
mov
lahf
out
ja
sbb
adc
adc
mov
add
lret
add
pop
leave
mov
pop
mov
scas
aam
pop
and
push
loope
cmp
insl
inc
inc
inc
inc
das
out
push
scas
cli
stc
das
sbb
mov
cmpsl
ret
fucomp
add
in
jle
je
daa
mov
daa
push
mov
movsl
sub
add
mov
adc
cmp
dec
sub
pop
rorb
jmp
inc
pop
cmp
lds
and
mov
loope
icebp
adc
mov
add
hlt
hlt
mov
sbb
mov
add
stos
outsb
cmpsb
sub
pop
mov
cwtl
ret
sbb
sbb
push
lret
push
pop
mov
pop
mov
add
sar
pop
and
inc
addr16
sub
aam
xor
movsb
js
xor
loopne
mov
fmull
cmpsl
lods
cmp
insb
movsb
xchg
int3
push
mov
push
xchg
ds
sub
jo
or
test
clc
push
mov
js
imul
aaa
loop
sub
mov
push
ret
shrb
mov
mov
push
shr
cmp
stos
xor
inc
clc
movsl
and
push
iret
enter
inc
add
imulb
jmp
lock
lahf
in
add
idivb
pop
xor
pop
dec
sbb
dec
ret
ss
mov
mov
movsl
cmc
rorb
xor
cmp
push
call
sub
aas
cmpl
imul
mov
loope
inc
cld
imul
fwait
add
es
xchg
xor
jmp
add
and
rcrl
daa
jl
jge
or
mov
jl
loope
sub
jne
psllw
in
mov
cld
sbb
std
icebp
hlt
mov
jecxz
and
xor
push
mov
into
std
data16
push
fistl
test
cmp
test
push
pop
xor
push
subb
dec
push
cli
int3
in
sbb
cmp
cmpsb
inc
daa
xor
neg
xor
push
orb
pop
dec
popa
sarl
inc
aas
jne
outsl
xchg
arpl
insl
das
jb
test
and
js
orl
and
pop
xor
jb
pop
das
push
test
adc
and
pop
jne
sbb
mov
jne
cmc
aad
pusha
dec
lods
xchg
das
push
and
add
pop
xor
push
mov
inc
and
xlat
sbb
movsl
xor
stos
mov
icebp
movsl
lds
nop
test
mov
pop
cmpsl
add
out
pop
inc
add
pop
inc
out
shll
mov
push
testl
stos
sbb
mov
mov
lock
pop
sub
sti
mov
fs
mov
dec
test
loopne
xor
mov
and
add
push
pop
ds
dec
scas
frstor
cltd
int3
pop
mulb
xor
cmp
fnsave
jns
or
xchg
push
loope
fsubs
das
pop
test
cmp
xchg
shll
ds
fnstenv
repnz
es
aad
mov
inc
dec
sub
add
jmp
mov
lds
adc
jo
adc
jg
nop
das
lea
add
sub
cmp
inc
and
add
lcall
hlt
call
mov
push
inc
je
pop
xor
push
pop
std
daa
aaa
movsl
lock
xchg
ss
dec
mov
push
xor
out
test
jmp
xchg
movsl
inc
sub
repz
sub
daa
pop
pop
sub
inc
cmc
and
or
mov
cwtl
and
imul
je
pop
inc
outsl
and
aad
inc
push
in
fs
or
add
pop
clc
adc
lahf
cmp
mov
das
and
and
mov
ja
jne
sar
ret
inc
push
adc
icebp
cmpsl
inc
cwtl
ret
xlat
mov
bound
push
and
sti
mov
pop
sub
cmpsl
imul
ss
add
pop
push
insb
movsl
mov
sbb
push
clc
in
in
lea
fsubr
xchg
and
cmpsb
cmpsb
out
pop
fldenv
adc
cmp
aas
imul
pop
sarl
xchg
loop
or
add
movsl
adc
insl
loope
and
lret
xor
test
lods
inc
lods
mov
push
icebp
push
sarb
push
sti
gs
ret
adc
pop
xor
inc
out
inc
inc
cmc
cltd
xor
loopne
mov
mov
add
or
or
pop
pop
in
in
hlt
xor
sbb
push
xchg
rcrb
iret
sbb
cltd
in
pop
jecxz
test
in
enter
xchg
jecxz
in
mov
leave
jmp
nop
cmc
or
pop
cmp
test
pop
xchg
add
inc
or
xlat
cmc
xor
mov
in
insl
xor
cltd
add
daa
push
mov
inc
inc
rorb
inc
pop
aaa
mov
mov
shll
jbe
xor
testl
sub
clc
push
js
in
and
sbb
push
lock
scas
cwtl
es
push
and
roll
sub
add
and
fldl
ret
out
lds
js
sbbb
rolb
in
aas
xor
insl
mov
jae
jl
ljmp
cli
inc
add
or
outsl
gs
sbb
mov
adc
or
dec
cmc
jmp
js
push
inc
sub
adc
pushf
jae
inc
cmp
sbb
daa
or
jge
xor
pop
in
inc
into
ja
call
mov
sbb
cmpsl
sbb
push
dec
mov
and
cmp
fisubrl
inc
cltd
adc
out
mov
enter
mov
or
loope
rcll
cmp
mov
jne
bound
xlat
cmpsb
mov
fdiv
shll
mov
neg
or
aam
and
add
push
xor
inc
mov
push
cmc
xor
add
jbe
jecxz
and
psubsw
test
mov
jnp
mov
incl
xchg
lock
xor
mov
test
add
leave
mov
mov
movsb
repnz
fsubr
clc
sahf
mov
add
adc
cmp
aas
and
out
sub
popf
pop
xlat
into
nop
inc
data16
popa
and
mov
push
shlb
xchg
das
cmp
mov
and
jbe
jmp
lcall
mov
cltd
enter
cmp
movsb
data16
fldt
push
test
dec
lods
xor
test
push
add
push
cli
in
mov
cltd
popa
lret
xor
das
push
std
or
mov
xor
sahf
sbb
adc
inc
gs
adc
cmp
popa
test
js
cmp
mov
adc
stc
jg
fwait
xchg
or
mov
add
jl
in
and
scas
int
fdivs
jle
sbb
frstpm(287
popf
cmc
mov
adc
dec
fwait
push
mov
adc
cmc
sub
push
cld
push
pushf
and
fsubl
ret
cltd
bound
fildll
add
std
jl
cmpsb
add
mov
xor
add
fwait
xchg
push
xor
mov
mov
dec
lahf
lret
test
imul
sarb
xchg
and
inc
mov
int3
test
std
inc
mov
or
into
andb
loope
adc
xchg
add
and
xor
ret
cmp
testb
inc
jns
andl
ss
or
subb
jecxz
add
jecxz
mov
mov
aas
mov
mov
mov
and
out
lods
xchg
and
pusha
push
movsl
addr16
repz
inc
sub
add
add
jl
pushf
nop
inc
aad
and
fsubs
iret
std
jbe
xor
sbbl
mov
sbb
fwait
xchg
addr16
and
cmp
rorb
cmp
adc
sub
cs
and
sub
sub
cs
ror
dec
or
cmp
jp
lds
or
lea
push
enter
test
inc
filds
jbe
lds
shll
xchg
scas
movsb
popf
mov
imul
divb
dec
fs
movsb
jmp
or
in
ret
pushf
jmp
data16
jl
insb
push
aam
movq
push
in
xor
cmp
pop
in
clc
aaa
and
add
out
add
lahf
clc
mov
push
adc
push
les
push
insb
lods
bound
dec
les
and
arpl
inc
add
sbb
adc
mov
pusha
or
sahf
ja
in
inc
rorl
js
cmp
ds
lds
pop
or
inc
sti
dec
mov
movl
into
mov
lods
pop
inc
jle
pusha
sub
push
pop
pop
pop
ss
mov
sub
daa
xor
aad
loopne
adc
jle
pusha
pop
adc
rep
xor
add
andl
jl
filds
jns
xor
dec
das
xlat
xchg
xor
sub
nop
add
mov
nop
add
adc
dec
cmp
sbb
or
mov
xchg
insl
in
mov
cmpsl
movsb
or
mov
add
fs
cmp
cli
sbb
adc
cmc
lea
sbb
fxch
jne
mov
add
jae
fidivrl
pop
jo
es
adc
das
xchg
sub
pop
dec
aaa
pop
pop
sti
xor
pop
xchg
and
shrl
xor
jecxz
imul
shr
cwtl
add
jns
add
clc
testb
and
mov
nop
call
push
inc
cmp
repnz
mov
inc
cmpsb
hlt
outsb
lahf
ror
xor
enter
lcall
pop
insl
rclb
adc
dec
std
jae
dec
stc
fs
and
shll
adc
sub
je
sbb
arpl
in
xor
call
outsb
inc
fwait
std
dec
imul
aad
sub
mov
ljmp
push
mov
es
mov
or
fmull
std
pop
enter
aaa
and
mov
push
add
pop
adc
mov
and
inc
push
es
cmp
xor
mov
cmc
pusha
mov
inc
add
in
popa
push
add
cmp
sbb
cli
fwait
push
add
cwtl
mov
stc
std
shrl
fidivs
dec
das
inc
and
cmp
daa
enter
rorl
or
mov
mov
add
test
and
add
mov
adc
shll
jbe
inc
cmp
xor
in
and
fildl
aaa
add
sbb
or
es
mov
test
aad
je
or
movsl
xor
mov
mov
dec
int3
clc
xchg
cmp
cld
and
loop
lahf
imul
cltd
mov
inc
dec
subb
jecxz
adc
call
pop
lds
movsl
mov
cmp
jl
aad
gs
sbb
add
xchg
ljmp
roll
icebp
ror
xchg
pop
int3
push
sub
xchg
into
mov
push
addr16
cmp
in
pop
rclb
and
popf
aaa
repnz
insb
imul
int
movsl
mov
dec
insb
xchg
adc
std
push
addb
test
cltd
or
adc
lds
data16
jl
and
mov
xor
mov
aam
ds
dec
and
daa
push
out
inc
imul
mov
jbe
into
and
pop
out
push
pusha
insl
and
push
orb
mov
mov
in
movsb
pusha
jmp
repz
mov
stos
xor
hlt
xchg
hlt
imul
test
push
cmp
lds
xor
lea
loop
popa
push
mov
ja
clc
or
cwtl
xchg
clc
faddp
xchg
lret
jecxz
xchg
and
gs
das
inc
and
mov
rcrl
mov
jno
test
int
fs
mov
cld
push
insl
inc
mov
loope
inc
add
ja
add
and
xor
ds
adc
pop
mov
jle
outsl
cmp
adc
fucomp
and
cmp
ret
cltd
and
or
xor
sbb
mov
mov
std
inc
gs
out
addr16
int
ja
movb
add
das
push
mov
pop
xor
inc
in
add
dec
dec
pop
dec
add
lret
fisubrl
jle
add
fidivs
nop
push
mov
lcall
cmpsl
inc
pop
inc
popa
pop
push
sbb
adc
in
fcomps
adc
cs
push
in
mov
dec
xor
cmpsl
cmp
fiadds
push
cmp
sub
or
pop
ds
push
rorl
aaa
rcll
addr16
jb
pop
push
lods
imul
mov
cltd
negb
jecxz
cwtl
pop
mov
movsl
pop
inc
sbbb
enter
test
sar
pop
movsl
repz
test
sub
xor
insb
je
push
loop
jbe
jmp
pop
daa
or
out
sbbl
test
lods
sub
inc
out
insl
ss
pop
jmp
mov
in
and
gs
mov
mov
clc
loop
adc
fs
iret
icebp
inc
adc
jne
test
mov
jmp
pop
test
cmp
movsb
xor
inc
imul
mov
dec
pop
push
aaa
and
mov
sahf
loope
mov
test
cmpsb
jae
pop
je
std
cmpsl
push
pop
pop
imul
pop
insl
sub
cmpsb
push
xor
loopne
cltd
out
in
push
in
imul
inc
or
dec
dec
xchg
cld
scas
mov
mov
loope
in
ret
xchg
push
inc
fwait
popf
test
or
jno
pop
ss
mov
stos
cmc
ja
ss
jno
ffreep
repnz
inc
dec
aam
pushf
jae
rcrl
jge
cmp
add
sbb
das
inc
in
mov
std
xor
and
daa
pop
in
into
mov
sahf
xor
pop
movsl
std
inc
mov
pusha
test
aad
jae
cmpsl
cld
frstor
aad
pop
pop
loope
int3
in
mov
mov
clc
dec
push
dec
aaa
xchg
fs
mov
mov
out
and
inc
sub
fsts
mov
ret
jno
lcall
xchg
xor
jno
mov
push
jo
xor
popl
repz
daa
and
pop
mov
in
mov
xorb
dec
cmp
xor
push
lods
push
add
and
mov
xor
shll
mov
adcl
add
cmp
aaa
mov
add
aaa
les
loop
frstor
xor
pushf
jl
je
dec
lods
jo
mov
cmc
test
jle
orb
adc
jecxz
in
and
stc
pop
mov
xchg
sbb
lea
and
icebp
lock
and
add
push
loope
and
daa
cmc
adc
mov
add
mov
and
sbb
mov
jl
cs
jle
push
and
adc
stos
in
lds
sbb
lds
push
test
and
cld
mov
mov
and
mov
cmpsl
xor
and
add
pop
sbbb
daa
jl
cmpsb
or
arpl
loopne
jnp
inc
loope
ss
pop
xchg
add
push
in
and
adc
divl
adc
sub
cld
lret
sti
aas
out
dec
loop
divl
fsubl
push
jbe
push
pop
push
pop
rcll
fstpl
push
aaa
movsl
dec
lcall
jecxz
and
mov
xor
mov
ja
sub
add
sub
and
dec
lds
inc
and
add
and
movsb
outsl
pop
and
mov
add
popf
loope
or
scas
cmpsb
fcoms
arpl
add
movl
mov
and
les
sbbb
pop
add
mov
fistpl
out
jne
pop
cmp
gs
cmpsb
pop
sbb
or
add
add
imul
dec
fists
and
mov
pop
pop
inc
test
loope,pn
sub
lods
test
jle
sbb
jb
xchg
inc
js
clc
and
test
mov
ss
inc
push
subps
test
cld
lds
inc
or
fyl2xp1
add
cmpsb
adc
mov
pop
inc
inc
pop
addr16
lcall
inc
enter
sub
xor
push
cltd
mov
adc
cmp
ret
xchg
repz
pusha
shll
jmp
adc
jae
out
lcall
dec
stos
lods
ja
sbbl
xchg
pop
cmc
imul
lods
xchg
cwtl
cmpsb
inc
rclb
je
and
xchg
cmc
aas
lock
and
in
mov
loopne
sbb
mov
movsl
or
cmp
or
and
aaa
add
xchg
or
lahf
js
sub
and
or
popf
lods
lods
jl
dec
pop
iret
insl
and
adc
shr
cmp
movsl
call
enter
mov
dec
and
in
imul
push
out
pop
dec
cmp
movsl
insb
sbb
sbb
jb
cmp
shlb
stc
sub
aam
xchg
rolb
mov
mov
sub
aad
aas
test
mov
sbb
adc
add
ja
sti
outsl
sbb
mov
pop
stc
cltd
rcrl
mov
je
pop
popf
fwait
mov
loopne
adc
hlt
xor
dec
mov
adc
and
and
pop
in
cmp
sbb
or
push
sub
test
mov
pushf
or
std
mov
out
mov
lds
sub
add
cs
add
lds
fdivrl
mov
xchg
xchg
fsubs
mov
add
aaa
pop
cwtl
jl
sbb
and
stos
inc
and
les
popa
mov
jae
out
push
mov
leave
movsl
sbb
stc
adc
mov
and
pop
pop
mov
divb
insb
add
insb
and
cmc
fstl
and
sbb
dec
loopne
jle
xchg
leave
dec
je
mov
mov
cmpsb
stos
sbb
shl
mov
call
fdivr
out
sbb
test
nop
leave
int3
movsl
std
sub
mov
sbb
dec
xchg
mov
loop
prefetch
or
xlat
mov
xchg
xchg
cmp
pushf
mov
mov
dec
adc
ret
jb
call
cmc
cltd
enter
int3
pop
std
xchg
pop
inc
add
movsl
int
xor
cwtl
and
fwait
test
sub
loopne
in
rcll
cwtl
adc
cltd
cmp
dec
pop
jne
adc
push
dec
and
jne
dec
mov
fnsave
shll
add
push
loope
hlt
pop
hlt
jae
outsb
sbb
in
ja
xor
pusha
stos
cmp
arpl
roll
jl
lret
aad
loop
mul
dec
cmp
mov
cmp
adc
sbb
jge
sbb
xor
cmp
in
insl
push
cmp
mov
xchg
xor
xchg
and
insl
push
and
sub
cltd
mov
add
push
or
in
insl
add
sahf
in
movsl
sbb
xchg
add
cld
es
mov
shll
sbb
cmp
inc
pop
imul
pop
push
lret
sbb
stc
je
pop
fstl
aas
fdiv
sbb
sarl
movsb
sbb
inc
pop
inc
cmc
fcomps
adc
movsl
cmp
pusha
test
add
out
loopne
loope
sub
mov
push
cltd
shll
loop
push
fcompl
or
xor
and
push
movsl
fistpl
cmp
push
and
jge
je
push
push
pop
add
stc
jl
xchg
sbb
pop
push
dec
cs
jecxz
adc
mov
pop
pop
push
adc
out
std
shll
cmp
pop
mov
mov
fisubrl
mov
and
push
push
mov
and
jne
dec
js
je
dec
adc
push
sbb
outsl
inc
andb
mov
inc
stos
repz
je
notl
andb
fdivp
jecxz
imul
out
or
push
out
ljmp
and
out
lock
adc
jmp
and
xor
mov
cmp
arpl
es
xchg
push
in
lock
inc
clc
xor
ds
mov
cmp
pop
mov
mov
imul
mov
xor
jmp
lcall
fnstsw
mov
pop
cmc
push
insb
or
lahf
lock
fmull
mov
sbb
dec
cmpsb
adc
nop
or
movsb
push
imul
aam
sti
mov
pushf
loopne
or
fcomps
xchg
cltd
fisubl
jnp
push
rclb
cmc
enter
dec
aad
pop
xor
pusha
bswap
sub
mov
mov
fdivr
daa
in
cltd
mov
add
fs
and
scas
ljmp
movsl
or
stc
pushf
xchg
xor
and
inc
xchg
sub
jo
movsb
lea
lea
adc
imul
mov
gs
loope
mov
aaa
dec
sub
or
inc
ror
push
xchg
sbb
mov
push
movsl
ss
mov
xor
fsubl
pop
mov
imul
enter
or
or
adc
punpckhdq
ss
xor
vpshab
add
push
mov
xchg
mov
xor
clc
sub
aam
out
inc
xor
jmp
xor
mov
xor
jns
loope
clc
decl
or
test
push
adc
dec
ds
inc
stc
aaa
push
fwait
das
aad
and
in
je
mov
cmp
outsl
test
or
or
inc
sub
adc
mov
cmc
sbb
cmp
and
ret
loope
jg
test
lock
mov
insl
xor
fnstsw
mov
test
cmp
pop
leave
pop
mov
cmp
mov
cmc
shll
mov
mov
inc
in
push
cmp
jle
movb
mov
sbb
in
jno
mov
subl
lds
pop
lock
adc
test
div
sbb
lret
fwait
insb
add
je
hlt
push
mov
add
enter
sbb
mov
dec
int3
int
inc
and
les
arpl
xor
xchg
lods
in
mov
mov
jl
push
adc
repz
in
movsl
xchg
dec
sbb
ja
inc
pop
xor
orl
xlat
shll
in
cmp
pop
mov
add
mov
in
clc
xchg
lcall
nop
cmp
insb
xor
add
xchg
add
lods
dec
xor
pop
dec
mov
pop
leave
in
and
mov
andb
inc
fwait
mov
mov
shl
mov
push
or
mov
lods
xchg
dec
call
or
sbb
js
repz
leave
push
inc
sub
mov
jne
dec
add
and
sub
scas
mov
jne
or
adc
in
out
and
outsb
and
add
mov
and
lods
add
das
xchg
pop
test
pop
loope
xor
lods
xchg
and
and
and
popf
add
pusha
mov
xor
mov
andb
out
pop
loopne
and
mov
cmp
in
fcoms
fidivl
and
pop
sbb
mov
add
or
and
je
xor
cmpsb
out
xor
aam
add
mov
push
andb
addr16
jne
data16
mov
inc
inc
and
addps
in
mov
and
lahf
cmc
bound
xor
sbb
aam
add
cmc
xchg
jl
frstor
mov
jg
hlt
jge
push
adc
sub
mul
into
and
push
inc
andb
add
xchg
fimuls
aad
pop
xor
inc
inc
mov
out
aam
add
aam
outsb
add
cmp
fwait
xchg
out
mov
adc
and
add
cmpsl
mov
add
bound
stos
mov
je
dec
bound
loopne
pushf
jge
movl
je
jp
add
add
xchg
and
cmpsb
xor
sub
cmp
and
mov
add
daa
in
add
jmp
dec
ret
jo
add
push
add
add
dec
repz
es
push
int3
pop
xchg
cmpsb
xor
adc
push
mov
cli
icebp
gs
and
and
adcl
out
movsb
add
jl
repz
and
rcrb
rolb
jno
data16
das
xor
inc
js
dec
test
add
adc
adc
ljmp
mov
es
and
push
sub
das
iret
fwait
arpl
and
add
inc
mov
daa
cmp
movsl
loopne
jns
js
jl
and
mov
xor
addr16
stos
lods
lds
xchg
pop
bound
popa
dec
jmp
cmp
adc
mov
jae
and
mov
inc
lret
ja
xor
xchg
loopne
outsl
mov
ret
push
lds
mov
ja
jbe
ds
pusha
and
pop
imul
xor
sub
jmp
sahf
pop
lods
cltd
mov
in
scas
in
cmp
incl
push
xor
lds
sub
pop
jl
popf
cltd
aaa
sbb
pushaw
adc
sarb
fisubrs
orps
push
insl
ret
loop
mov
loopne
stc
or
aaa
rcr
fs
lret
cmpb
jmp
movsb
adc
int
ss
push
ds
mov
or
mov
mov
xor
inc
adc
out
js
aad
sahf
bound
ret
and
jbe
xchg
inc
mov
push
int3
inc
in
insl
inc
movsb
inc
mov
fs
arpl
cmp
lods
dec
inc
dec
mov
sbb
pusha
daa
xor
mov
cmp
dec
sbb
and
add
and
repnz
xor
test
mov
int3
adc
pop
xor
sub
inc
jae
jmp
ds
mov
hlt
dec
test
and
mov
in
adc
pusha
add
sub
clc
adc
sbb
xchg
adc
sub
ror
adc
es
add
add
mov
cmpsb
js
incb
or
aam
sbb
bound
and
xchg
pop
ss
imulb
and
cld
cli
push
add
xchg
and
sbb
or
jecxz
loop
scas
cmc
jbe
xchg
push
inc
bound
cs
fadd
daa
sti
incb
and
xor
cmpsl
xchg
or
js
addb
arpl
sar
aam
jbe
pushf
push
add
pop
fadd
lods
adc
lds
inc
shll
in
mov
xor
movsl
test
mov
movl
add
pop
push
push
inc
fisubs
and
inc
push
and
mov
mov
xchg
push
lods
xlat
mov
scas
test
mov
pmulhw
and
jnp
push
daa
mov
sub
ss
cmp
mov
repnz
xchg
das
inc
mov
add
xchg
pop
mov
and
fwait
pop
add
push
adc
into
out
xor
xlat
in
mov
jl
arpl
mov
and
and
cmpsl
inc
ja
and
mov
test
adc
and
and
cmc
jle
push
out
cmp
maxps
sbb
and
inc
jle
mov
xchg
and
in
lahf
rorb
movsl
sarb
daa
xor
lahf
pushf
addr16
inc
iret
xchg
call
xchg
mov
mov
push
add
jbe
mov
and
mov
pop
push
or
jns
cmp
aad
inc
inc
jmp
push
mov
jge
and
inc
int3
mov
inc
dec
jle
je
fstpl
inc
movsb
enter
lds
mov
push
add
cmc
sbb
int
pop
mov
and
dec
add
dec
je
xchg
fbstp
mov
sub
adc
stc
mov
ret
mov
cmp
out
shl
add
mov
cwtl
enter
clc
call
adc
aam
jecxz
ret
clc
out
inc
mov
movsb
or
ja
inc
dec
adc
stc
mov
adc
pop
jl
shlb
push
cltd
jge
nop
outsl
push
xchg
pop
xchg
jg
fnstenv
movsl
adc
mov
xchg
push
lock
push
int3
test
daa
adc
and
jp
out
jge
mov
jbe
ret
xor
inc
dec
cmpsl
push
lods
mov
dec
addl
push
add
jge
push
dec
je
sahf
out
icebp
nop
xchg
in
loop
repz
mov
push
popf
jmp
lea
mov
xchg
fs
push
arpl
or
add
cli
insl
jle
cld
add
pop
jno
negl
outsl
outsb
and
pop
dec
dec
daa
lods
aaa
and
in
movsb
arpl
jb
xchg
sub
sbb
mov
ds
sbb
enter
mov
shll
jo
int3
mov
mov
in
ss
sbb
jae
mov
aaa
pushf
and
aaa
stc
cltd
clc
mov
mov
test
lcall
ja
mov
xchg
inc
jb
xor
mov
lahf
mov
popf
leave
clc
pusha
add
je
in
nop
cwtl
xchg
es
dec
sub
loopne
in
add
adc
and
sbb
jg
xor
ljmp
sti
fiaddl
xchg
roll
out
add
xchg
stc
and
mov
and
incl
cmp
js
or
fistpll
and
inc
mov
pop
sbb
xchg
cmp
and
movsb
mov
and
lods
adcb
xor
mov
loopne
rcrl
adc
bound
jnp
aad
les
mov
pusha
dec
dec
call
mov
xchg
inc
jmp
adc
shlb
std
xchg
push
cmp
loopne
scas
cmp
mov
in
shrl
mov
inc
mov
shl
call
enter
xchg
and
inc
or
icebp
jmp
xchg
js
clc
inc
mov
pop
jmp
aas
add
cmp
mov
lods
movb
subb
and
adc
and
test
inc
sbbl
and
js
inc
mov
lds
mov
and
movsl
idivb
mov
loopne
daa
movb
mov
and
lods
cmp
push
inc
adc
mov
or
mov
loopne
adc
frstor
lock
ljmp
adc
and
lds
dec
cld
in
cld
sbb
xlat
push
test
xchg
push
loop
and
cmp
xchg
out
add
test
mov
and
and
and
loopne
loopne
jecxz
repz
jecxz
lret
add
and
mov
pop
mov
and
add
sbbl
cmp
out
add
dec
mov
jmp
dec
xor
xchg
jmp
filds
test
adc
scas
cmpsb
shll
scas
loop,pn
imul
xor
loopne
ss
push
dec
fcoms
pop
in
mov
in
and
cmp
das
daa
jmp
rorb
add
add
xchg
stos
lret
add
cmp
pushf
pushf
and
ljmp
cmpsb
mov
out
test
outsl
call
in
das
cmp
jmp
in
mov
jne
jmp
iret
fs
mov
pop
aas
add
cmc
push
add
push
xor
inc
adc
or
insl
inc
cmpsb
stc
sbb
mov
pop
add
and
cwtl
insl
int3
test
pop
and
icebp
mov
call
scas
dec
cmp
add
xchg
icebp
and
jae
cwtl
xor
in
repz
movsb
mov
mov
arpl
mov
rorl
and
inc
rorl
inc
cmp
pushf
pop
lods
pusha
push
adc
inc
call
out
iret
jb
gs
cwtl
cmp
mov
xchg
test
cmp
inc
push
add
xor
sbb
fldl
fcmovne
mov
cmp
loopne
pusha
fdivrp
add
cld
daa
int
xor
test
mov
shll
and
cltd
xor
pop
jmp
leave
lahf
cmp
sbb
sahf
mov
push
loopne
mov
pop
das
aaa
add
mov
mulb
jno
addr16
js
push
or
out
push
pop
push
push
cmpsb
lods
push
and
insl
xchg
mov
dec
xchg
mov
inc
divl
pop
dec
cmp
adc
pop
mov
lcall
and
pop
adc
jno
cmp
jle
xor
cmpb
and
clc
lock
pop
test
jl
data16
and
roll
fwait
sti
or
ljmp
repz
mov
and
cwtl
cltd
mov
inc
xor
je
sbb
inc
add
cmp
jmp
dec
bound
push
test
jno
push
ficompl
sbb
cmp
mov
clc
jmp
insl
mov
adc
int
clc
push
test
scas
cmp
push
testl
movsb
dec
enter
roll
arpl
push
ficoml
shr
popf
daa
cltd
stc
cmp
add
add
aad
scas
push
inc
mov
testb
js
adc
lret
lahf
call
lret
inc
mov
add
mov
imull
add
inc
add
cmpsl
aaa
je
mov
mov
popf
pop
and
jo
xor
sbb
jle
int
cmp
and
fstps
and
inc
xchg
push
cmp
mov
test
repnz
ds
icebp
push
inc
sbb
movsb
test
cmp
mov
push
cld
je
dec
xchg
sub
push
xor
dec
dec
movsb
ss
and
cltd
ss
add
inc
adc
or
out
lahf
int3
punpcklwd
mov
jmp
push
out
push
fnstenv
ret
popa
cmp
sbbl
cmpsb
les
and
test
rolb
mov
in
push
cmc
xchg
addr16
push
push
insl
adc
imul
and
jno
jns
cmc
mov
mov
lcall
repnz
push
loope
push
ja
daa
imul
adcb
das
mov
xchg
cmp
adc
jns
test
and
pop
lds
cmp
and
dec
imul
adc
and
and
movsb
add
cmp
cltd
repnz
jecxz
dec
das
xor
inc
iret
bound
push
lret
inc
jl
iret
out
faddl
and
and
sub
push
and
adc
and
mov
in
in
and
loope
add
xchg
and
loope
sarl
add
jae
xchg
hlt
cmp
mov
bound
cmp
and
std
lahf
xor
dec
push
fsubl
dec
push
ret
mov
in
testl
add
mov
pushf
es
pop
sub
cmp
js
pop
and
mov
iret
push
arpl
pop
mov
fsub
add
mov
cmp
and
add
add
fcoml
cmpsl
roll
and
push
orb
arpl
testl
mov
test
es
jl
and
mov
add
pop
es
es
or
and
outsl
roll
pop
pop
adc
in
mov
mov
xor
or
xchg
es
cmp
push
push
andl
pop
sbb
mov
add
cmpsl
or
inc
jge
rol
push
test
es
pop
inc
loope
out
cli
and
loope
xor
add
shl
push
sarb
loop
push
sub
push
cmpsl
imul
xchg
inc
cmp
pop
dec
inc
jecxz
rcll
adc
lods
stc
and
es
imul
lahf
adc
jo
add
mov
movsb
in
andl
in
pop
sub
ds
add
fnstcw
leave
test
mov
or
lods
pop
add
dec
and
ret
and
addl
pop
and
xor
mov
push
and
or
dec
inc
mov
sub
loopne
daa
and
inc
lods
cld
shrb
or
std
addr16
in
in
mov
and
add
loope
daa
imul
in
push
cli
and
lock
mov
clc
cmp
mov
and
mov
xchg
out
push
add
dec
pop
dec
in
push
aaa
add
decb
in
sub
cmp
dec
lds
pop
jmp
outsl
push
inc
sti
insl
loope
into
loope
pop
loope
add
aam
add
pop
cmpsl
xchg
das
out
jnp
stc
lcall
adc
data16
and
cmpsb
cltd
out
daa
and
cmp
stc
sbb
sahf
or
cmc
and
in
mov
idivl
ds
ds
sti
test
xchg
pop
push
gs
sub
pop
ds
sahf
xor
and
inc
rcl
inc
jbe
inc
mov
sub
inc
scas
inc
in
and
and
inc
addr16
sub
mov
add
sar
push
mov
add
and
jb
mov
push
loopne
and
xchg
lds
mov
out
mov
andl
clc
cmpsl
and
bound
mov
subb
xchg
js
and
cmp
jge
xor
mov
stos
jl
and
daa
cmc
add
mov
test
mov
movsl
sub
and
xor
ficomps
repz
lods
pop
mov
inc
jae
push
dec
stos
imul
cmp
adcl
push
mov
rolb
mov
aad
ja
cmp
js
mov
out
das
jl
mov
scas
inc
scas
xor
aas
ja
shrl
sbb
or
test
je
call
inc
dec
xchg
or
pavgw
fsts
add
sarb
inc
xor
dec
and
jne
repz
cmp
daa
mov
cwtl
adcb
adc
sbb
dec
push
sub
cmc
dec
xchg
dec
xor
or
jecxz
ss
cs
cmp
incb
outsl
jbe
icebp
aaa
in
inc
inc
and
push
add
cmp
movsl
enter
adc
mov
in
fistl
out
sbb
ja
jno
xchg
ja
in
jl
sarl
mov
rcll
dec
in
push
mov
pop
mov
jl
and
and
sub
cwtl
int3
popf
sub
mov
mov
mov
xor
sahf
lds
mov
sbb
scas
mov
enter
test
inc
xchg
nop
ret
inc
lahf
add
adc
cmp
jo
xor
je
loope
xchg
fwait
mov
scas
add
push
jecxz
into
ljmp
xlat
popf
jne
lds
mov
cwtl
int
cmp
push
scas
adc
or
add
inc
movl
aaa
outsl
xchg
clc
sahf
aas
xor
mov
jl
and
cli
ljmp
push
cmp
fisubl
out
jg
movsb
mov
inc
rcll
mov
in
or
xchg
pop
in
sbb
gs
xor
lret
mov
inc
test
push
sub
fdivr
jno
cmc
int
sbb
and
or
pushf
sub
sub
int
test
idiv
inc
fbld
add
sub
ret
sub
out
sti
fistpl
push
xor
dec
and
dec
xor
or
mov
test
and
nop
pushf
xchg
fldenv
fwait
mov
or
push
ret
mov
cmp
mov
loopne
loopne
push
adc
loope,pn
gs
cmpsl
sahf
adc
loopne
out
icebp
hlt
push
data16
test
cwtl
mov
cli
xlat
fadds
dec
mov
add
sub
xchg
lds
in
lahf
paddb
movsl
scas
xchg
xchg
jmp
mov
jnp
fldcw
sbb
sub
test
add
push
rcll
push
call
outsl
push
sbb
insl
inc
or
and
add
jae
lods
jle
push
daa
pop
jg
sbb
out
xchg
es
int
mov
fbld
and
xchg
int
js
jl
hlt
mov
sbb
mov
lock
ja
sbb
andb
movb
adc
inc
test
js
lahf
inc
pop
js
push
roll
and
xor
int3
inc
cmp
cmp
xlat
popa
dec
add
jo
leave
flds
adc
cmp
xchg
dec
int3
inc
aas
pop
sub
push
loopne
jl
mov
fisubrs
aaa
je
dec
adc
test
dec
mov
movsl
lods
iret
push
xchg
add
mov
inc
ret
idivl
jnp
jo
mov
xchg
cmpsl
fwait
std
inc
sbb
mov
add
xor
fdivs
icebp
mov
push
dec
dec
and
and
leave
push
movsb
pop
jg
sbb
loopne
stc
adc
dec
inc
sbb
jnp
or
sub
fwait
mov
popl
mov
notl
pop
or
mov
sbb
xlat
and
stos
adc
mov
gs
cmp
in
hlt
cmpsl
sub
xor
outsb
or
pop
jo
std
pusha
mov
lods
add
call
std
dec
and
popf
or
cmp
in
outsl
les
pop
inc
enter
addb
dec
mov
repz
mov
loope
push
lcall
mov
cmp
xchg
movsl
pop
or
jae
add
mov
stc
xchg
jb
or
movsl
jg
mov
inc
int3
data16
gs
cmp
adc
pop
inc
sbb
cld
cmc
and
jmp
in
sub
cmp
orb
pusha
addr16
jns
sbb
sbb
bound
pushf
popa
dec
and
and
xor
pusha
aam
push
pop
push
cld
arpl
adc
dec
xor
push
je
pop
ljmp
push
push
ja
movb
xchg
pop
mov
dec
pushl
cmp
pop
pop
push
icebp
dec
cltd
jmp
fs
frstor
cltd
fcmovbe
mov
repz
inc
sub
jae
mov
sbb
push
lea
or
push
outsl
out
sub
xor
ja
pop
adc
jl
mov
cltd
pop
mov
bound
pop
jb
adc
inc
cmp
fs
ss
cltd
popf
lret
fnstsw
cmpsl
stc
out
pop
repz
jl
xchg
aaa
repz
cmp
push
call
sbb
push
loop
add
sub
rcrb
mov
cmp
xchg
mov
lcall
mov
inc
mov
loop
ds
add
gs
out
jnp
aas
lock
int3
adc
dec
sbb
stos
push
ja
adc
fs
sub
lret
xchg
push
mov
push
in
nop
adc
mov
scas
mov
xor
push
mov
push
add
roll
gs
shll
adc
out
add
ss
and
in
adc
les
add
inc
sbb
es
add
rol
push
shll
cmpsl
jns
aam
int
icebp
movsl
scas
mov
cmpsl
sub
push
add
and
push
push
mov
xor
das
shll
adc
rolb
add
cmpsb
add
adc
cmpsl
mov
jae
mov
cmp
sub
lds
cmp
lcall
pusha
jbe
sub
and
inc
movsl
ss
cs
movsb
mov
push
das
add
shl
ficoms
sbb
ds
repnz
xor
sub
or
test
loopne
inc
sbb
cmp
shrl
daa
popa
mov
mov
popf
mov
and
pop
cmp
push
das
lds
or
pop
cmpsb
and
adc
fists
aas
xchg
test
jne
cmp
or
fdivrs
or
es
jl
pusha
movsl
adc
mov
dec
sahf
and
sbb
ret
ljmp
pushf
lds
adcl
adc
sbb
lods
loopne
test
jle
sbb
sbb
push
adcl
and
push
mov
mov
add
aaa
jo
shll
test
mov
xchg
cmp
negb
imul
das
cmp
sub
daa
inc
das
ja
and
lret
pop
imul
add
dec
imul
std
dec
test
in
cltd
ja
addr16
mov
movsl
mov
ds
addr16
pop
aas
xor
add
fucomp
into
aaa
mov
movsb
push
fmul
mov
sbb
outsl
in
cltd
mov
cmp
stos
and
or
pop
jbe
or
add
adc
pushf
pop
or
xchg
lret
pop
and
icebp
dec
in
mov
jl
test
add
and
push
mov
repz
cwtl
push
popa
popa
rcrb
movsl
test
lcall
lahf
gs
xor
cmp
call
std
lds
cmp
mov
add
add
dec
mov
test
leave
cmp
daa
pop
test
arpl
addr16
sbb
mov
dec
xchg
jecxz
add
fcompl
pop
inc
pop
sub
call
dec
frstor
push
es
push
cmp
int3
xchg
insb
push
xchg
add
sub
pop
movsb
push
into
movsl
mov
rcrl
std
mov
je
int
popf
ret
sbb
in
jl
loope
lds
mov
in
push
mov
in
adc
xchg
jl
push
icebp
xor
pop
ret
aaa
and
hlt
test
movsl
icebp
lcall
pop
sti
aad
andb
sub
mov
fisubrl
fwait
xor
lea
inc
and
mov
aaa
js
lods
add
aaa
test
jno
adc
cmp
sbb
and
or
mov
inc
mov
je
cmp
cltd
mov
mov
sbb
sbb
xor
outsb
movsb
cmp
divl
sub
mov
jmp
fs
lret
orb
mov
add
sbb
mov
cld
ljmp
jle
xchg
mov
pop
sbb
jbe
jmp
sbb
dec
cli
cmp
je
push
stos
sarl
mov
in
add
gs
pop
jne
cwtl
ds
inc
aad
cmp
add
adc
das
jb
adc
test
sbb
and
imul
jmp
add
movsb
pop
adc
int3
test
push
aam
cmp
pop
in
xchg
ljmp
pop
imul
ljmp
mov
add
mov
stos
jnp
subl
cmpsb
mov
push
adc
push
add
or
rcrl
pop
lret
sti
sbb
pop
inc
scas
movsl
xchg
cmp
cmp
and
faddl
addb
lea
pop
mov
clc
ss
cmp
addr16
in
mov
adc
mov
cmc
outsb
loopne
pop
jmp
loopne
xor
dec
pushf
les
mov
ljmp
push
imul
loope
sbb
xchg
gs
insl
cmp
fstps
test
sbb
loop
mov
mov
mov
inc
pop
movsl
rcrb
adc
cmp
gs
xchg
add
rcl
cli
enter
aad
dec
lea
test
xor
int3
inc
adc
cmc
sub
cmp
popf
jl
dec
push
nop
nop
imul
test
xor
xor
in
std
std
cmpsl
pushf
les
cmp
add
cmp
in
aaa
dec
loop
xchg
ret
imul
sbb
dec
loop
dec
xor
adc
inc
and
cmc
pop
pop
jge
dec
clc
push
mov
mov
movsl
pop
icebp
cmp
mov
mov
jae
adc
inc
adc
pop
pop
pop
movsb
mov
inc
push
nop
dec
repnz
jo
mov
mov
mov
testl
fsubs
lds
or
add
pop
add
movsl
test
mov
or
mov
inc
adc
jge
sbb
lret
shl
mov
icebp
ja
repz
repz
sarb
es
push
and
cmp
dec
or
adc
xchg
cmpsl
lahf
scas
push
xor
mov
sti
cmpsl
dec
insb
insl
pushf
sub
iret
orb
loope
inc
and
jecxz
add
mov
ffreep
dec
pusha
int
ss
jecxz
pop
pusha
xchg
push
and
jne
out
cmpsl
stos
cmc
lahf
or
cmc
das
movsl
dec
sarb
mov
incl
or
int3
xor
xor
pop
icebp
insl
in
push
inc
out
adc
mov
inc
pop
imul
ja
jl
xchg
aad
xchg
pextrw
push
mov
lret
mov
adc
ret
xchg
xlat
mov
xor
adc
xor
cmp
inc
push
xor
mov
mov
mov
ja
aad
clc
imul
inc
js
sbb
enter
fldcw
cltd
adc
dec
fnsave
sbb
pushf
movsb
cltd
cli
sub
mov
and
adc
pusha
fmul
xchg
in
nop
outsl
cmc
sub
movntq
imul
mov
cmp
pop
mov
mov
das
outsl
mov
sbb
xchg
sub
movsl
add
gs
pop
ja
lahf
ds
push
scas
dec
lahf
int
out
outsb
movsb
sbb
nop
sub
cmp
movsl
mov
neg
pop
lods
mov
and
adc
jae
dec
add
sahf
push
pop
inc
push
mov
or
mov
mov
sub
mov
lods
div
lods
adc
lahf
dec
adc
mov
sahf
mov
mov
mov
push
push
nop
push
dec
and
mov
lock
stos
cmp
mov
daa
sahf
sbb
sub
mov
jns
jl
cli
jae
nop
xchg
in
aas
ljmp
add
sbb
das
jmp
iret
or
mov
rclb
jne,pn
in
pop
inc
mov
add
xlat
hlt
adc
push
daa
pop
into
mov
imul
testb
pop
imul
lock
inc
jg
mov
aas
decb
pop
fistps
in
orl
mov
inc
fsubl
outsl
xlat
and
sahf
mov
lds
lahf
push
loop
jbe
call
add
call
les
and
js
jne
out
js
and
mov
xor
stos
mov
dec
gs
stos
or
add
dec
dec
xchg
add
lods
mov
jle
or
cmpsb
arpl
int
stos
push
mov
adc
in
xor
mov
in
jnp
adc
cmp
push
das
decl
cmp
ret
cmpsl
les
gs
adc
inc
adc
sbb
or
xor
and
imul
inc
push
in
xor
or
pop
cmp
inc
leave
adc
imul
inc
sbb
dec
add
push
mov
popa
cwtl
addr16
or
pop
dec
dec
mov
sbb
outsl
xchg
and
leave
mov
lods
shl
push
ja
pop
lods
and
repz
jl
incb
enter
test
in
push
popf
test
sti
xchg
push
cmp
rcr
mov
jbe
xor
or
test
lret
int3
aam
and
push
mov
ret
inc
repnz
cmp
je
std
cmp
push
adc
inc
ljmp
aam
in
popa
add
inc
insb
fimuls
mov
sbb
and
insb
or
ljmp
popf
push
in
push
mov
and
imul
jno
in
xchg
sub
sbb
outsb
fmull
add
or
data16
jns
testl
test
inc
cmpsb
mov
mov
xor
pop
add
xchg
sbb
ds
js
nop
cmovg
mov
sub
mov
insl
inc
test
ss
jae
das
in
and
cli
cli
xchg
in
dec
add
or
cmp
mov
std
fs
pop
sub
aas
js
mov
inc
loopne
sbb
sbb
xor
or
popa
js
in
inc
xor
leave
mov
cmc
cmp
dec
mov
pusha
xor
testl
and
cmc
enter
popa
out
pop
cmp
jmp
call
pop
cmp
jae
test
jnp
lds
iret
add
cmp
inc
add
xchg
push
inc
test
inc
movsb
mov
push
pop
test
es
ja
loopne
movsl
test
adc
leave
push
push
add
cmp
xchg
stc
out
or
cmp
mov
adc
pop
nop
push
or
gs
into
icebp
sub
mov
fbld
mov
sub
push
jb
arpl
hlt
xor
in
comiss
xchg
mov
adc
push
out
rclb
pop
inc
pusha
xor
fbstp
cld
lea
cmpsb
sub
mov
pop
ret
es
in
sub
lds
mov
adc
int3
mov
pusha
sbb
inc
add
sub
pop
or
std
data16
push
cmpsb
adc
data16
and
cmp
mov
xor
push
sbb
into
or
cmp
sbb
sub
add
mov
push
and
mov
lds
adc
push
inc
mov
shrb
mov
icebp
test
xchg
stc
in
xor
add
aam
push
ds
cltd
inc
les
cmp
pop
arpl
adc
xor
or
adc
rorl
jl
psllq
pop
divb
jl
stc
insl
cmp
rol
mov
sbb
popf
add
mov
notb
inc
fwait
and
push
int3
popf
js
repnz
clc
cmpsl
xor
fwait
sbb
lahf
cmpsb
ftst
cmc
cmp
into
lcall
push
outsb
in
cmpsb
inc
mov
iret
out
sub
or
mov
insb
jl
xor
mov
mov
pop
jns
jo
xchg
mov
insl
push
or
arpl
sub
in
sbb
pop
lock
sub
or
mov
xchg
insb
and
push
gs
cmp
xchg
cmp
sti
loop
faddp
mov
into
mov
jbe
sbb
arpl
in
lock
std
or
lods
ja
int3
orb
xchg
cmp
mov
jl
es
pop
xlat
adc
or
loop
push
and
inc
fnstenv
lds
or
outsl
stc
pop
mov
xchg
jne
pusha
mov
pop
xor
xor
cmp
fwait
add
jl
sbb
mov
mov
pop
mov
lock
mov
loope
testb
cmpsb
lret
int3
adc
mov
inc
and
dec
sbb
push
int
call
pop
mov
sahf
push
mov
pushf
aaa
jo
sahf
daa
dec
gs
stc
push
push
imulb
xchg
jae
loop
ljmp
mov
cmp
push
pop
sub
cmp
xchg
push
movsl
sbb
and
add
nop
jle
inc
pusha
lock
nop
and
arpl
add
out
adc
das
mov
and
add
mov
aam
pop
pop
test
out
mov
lds
adc
and
mov
movsl
outsb
sub
ss
out
pop
lds
mov
pushf
cmc
lock
push
cltd
filds
xor
fsubs
mov
test
push
rolb
js
mov
in
rolb
cmpsb
inc
dec
sbb
sahf
cmc
sub
lds
mov
stos
dec
inc
dec
inc
push
and
repz
mov
cwtl
out
je
sar
cld
dec
pop
mov
mov
jb
cwtl
movsb
inc
sbb
iret
popf
ret
sub
and
gs
in
and
xor
cmp
pop
add
icebp
std
jnp
test
mov
push
mov
insl
inc
in
mov
jns
test
ljmp
ret
cmp
sub
lds
sbb
jns
js
mov
mov
jb
mov
stos
imull
std
pop
dec
out
and
jmp
imul
jmp
and
push
ja
insb
sub
inc
jne
dec
and
xchg
fisttpll
imul
pop
out
add
mov
or
mov
daa
mov
outsb
out
mov
clc
lds
pop
cmc
and
adc
das
pusha
dec
test
mov
xor
std
shl
aam
xor
pop
aas
das
cltd
mov
fucomp
aad
sbb
add
jl
lods
sub
mov
cmp
in
call
ret
and
inc
and
push
mov
push
bound
push
clc
leave
aad
sub
cwtl
and
insb
jmp
dec
ja
out
imul
rcll
fstps
xor
mov
dec
jge
incb
cwtl
adc
sub
clc
lock
mov
rcrl
pop
js
xchg
adc
sbb
test
dec
rcr
out
mov
push
jae
movsb
pop
ds
push
cmp
es
in
sbb
movb
cs
sar
lret
lret
dec
jg
in
push
rcll
adc
mov
sub
adc
lods
mov
test
dec
mov
dec
pop
and
loope
or
ret
mov
cmp
mov
dec
or
je
insl
inc
or
cli
into
aaa
pop
dec
test
jge
fdivrp
jl
fmuls
popf
and
mov
pop
mov
mov
jae
xor
mov
xchg
rol
leave
pop
and
insl
sub
and
in
inc
dec
adc
mov
in
cld
scas
lahf
std
sbb
es
es
stc
mov
push
sub
and
and
add
mov
mov
xor
lods
pop
jl
add
leave
fisttpll
jns
jg
aam
ss
pop
sbbb
jae
sbb
fs
pop
pop
push
xchg
ja
imull
into
loope
lret
ror
pop
sbbl
dec
xchg
in
ja
into
mov
out
and
ss
lcall
inc
outsl
mov
cmovs
inc
jg
insl
mov
in
orb
clc
addr16
inc
cmp
sub
xchg
push
int3
imulb
int3
ret
adc
vunpckhps
dec
mov
sub
out
adc
adc
into
ss
cmp
adc
imul
push
addr16
mov
cmpsl
hlt
inc
std
lds
in
pop
inc
cmp
pusha
loop
hlt
repz
lret
or
pop
enter
sub
rcll
push
cmp
outsl
mov
and
xor
inc
sub
pusha
test
not
cmpsb
cmp
add
std
cmp
insl
xchg
and
jb
mov
sahf
aam
push
xchg
in
outsb
js
iret
mov
sub
stc
jp
jmp
loop
inc
vpsubb
rcr
in
dec
sub
nop
je
xchg
loop
mov
and
in
jg
mov
cmp
ret
inc
aad
outsl
fucomp
stc
daa
and
cmp
aad
das
std
enter
ja
cmp
pop
sbb
sbb
rorl
popf
cld
adc
loop
inc
jb
orl
sub
pop
xchg
adc
mov
in
pop
dec
fucomi
mov
lds
xor
mov
lds
cmpsb
movsl
fsubr
shlb
push
adc
fidivl
mov
mov
jb
popa
cmp
js
lods
mov
int3
push
mov
movntq
pop
sub
or
mov
pop
mov
enter
and
in
lds
ret
fisubs
cmp
ret
pushf
data16
mov
jno
xchg
js
dec
cli
and
icebp
pop
neg
sahf
jle
adc
fcompl
push
and
cmc
scas
fcomip
and
and
push
and
sbb
jne
cmp
out
dec
pop
mov
mov
sahf
notb
mov
cmp
adc
jl
dec
or
push
and
std
movsb
loope
add
cmp
and
shlb
ret
movsb
and
and
ja
clc
addr16
add
jmp
add
inc
cmp
cmp
inc
and
sub
addr16
ja
sti
mov
cltd
mov
xor
inc
cwtl
cwtl
push
jmp
and
inc
movsl
mov
jge
hlt
mov
jae
inc
es
cmp
inc
mov
jbe
adc
push
jnp
js,pt
aaa
std
pop
add
sbb
inc
sbb
pushf
push
and
in
dec
jbe
xchg
out
hlt
pop
jmp
enter
push
mov
fmull
cmpsl
es
idiv
xor
std
std
xchg
pop
xchg
daa
mov
fs
in
push
mov
jo
cmp
add
xchg
or
enter
loope
mov
mov
aaa
ljmp
adc
mov
pop
ret
xor
shl
stos
push
adc
lock
cmc
mov
fidivs
xchg
cwtl
xchg
and
aad
in
sub
adc
cmpsl
xchg
xchg
adc
loope
adc
xor
ret
fnstenv
add
fdivl
pop
and
adc
xchg
pop
cmp
adc
lods
fisttps
xchg
add
clc
jp
dec
jmp
lea
xchg
faddp
mov
pop
test
fmul
xor
or
in
enter
inc
pop
imul
fucomp
cmp
loopne
sbb
sbb
mov
stos
aam
jae
in
popf
xchg
pusha
icebp
lods
f2xm1
jb
testw
shlb
in
ja
shlb
cmpsb
cli
sarl
xchg
gs
or
lahf
aaa
sbb
sub
dec
mov
mov
pushf
push
je
sbb
mov
mov
push
pop
cmp
and
xchg
cmp
lcall
jg
je
std
push
popf
pusha
cmpsb
dec
adc
pushf
mov
test
mov
enter
nop
pop
jl
lds
inc
popa
cmp
and
call
dec
iret
mov
test
cmp
cli
pop
xchg
mov
mov
or
jne
mov
add
add
movsb
mov
cli
sbb
insl
les
xor
lods
cmp
pushf
sbb
jnp
sbb
out
sub
cmp
lret
pop
push
arpl
inc
pop
cmpl
inc
and
lods
je
jp
or
dec
clc
mov
add
mov
and
rorl
mov
mov
inc
dec
dec
test
jb
cmpsl
test
add
icebp
mov
stc
cld
mov
lods
cs
mov
adc
shl
loope
add
hlt
and
mov
mov
or
inc
in
js
cwtl
and
add
ja
cltd
fnstcw
dec
cwtl
inc
pop
add
jge
test
lahf
cmc
dec
xchg
and
inc
popa
test
push
xor
mov
add
jecxz
push
sti
sbb
xor
cmpsl
insb
popf
inc
loope
mov
push
or
es
push
popf
out
pop
js,pt
repnz
push
lds
dec
pop
push
cmp
fs
shlb
fs
mov
mov
sarl
xchg
or
jb
mov
scas
jmp
mov
sub
dec
out
mov
xor
xor
scas
jg
pop
mov
xor
dec
mov
or
outsb
test
es
movups
js
outsb
sahf
cmp
mov
xor
jbe
out
mov
in
clc
push
lods
and
push
jnp
and
sub
add
mov
cmp
or
movsl
sub
and
cmp
mov
fiaddl
sbb
jl
and
test
sub
inc
hlt
incl
pusha
xchg
imul
clc
or
aaa
xor
mov
mov
dec
rcrl
pop
inc
cmc
pusha
add
shlb
outsb
cmp
pop
loopne
aaa
sub
rorb
dec
push
mov
sub
repnz
fsubl
shlb
imul
sub
lea
lahf
jne
and
movsl
xchg
inc
add
es
cltd
cmp
jno
push
push
mov
and
and
leave
movsb
outsl
std
aaa
aad
std
or
cmpsb
les
xor
mov
in
and
clc
mov
out
fwait
test
pop
scas
mov
jbe
pop
aaa
shl
mov
cmc
cmpsb
test
inc
lret
imul
fsub
jl
xchg
lods
sub
and
aad
out
mov
pop
add
sbb
sbb
mov
add
mov
sub
movb
je
cwtl
scas
jne
fcoml
fdivrl
outsl
dec
cmp
xor
outsb
lahf
adc
leave
dec
test
loope
and
jb
xchg
sbbl
dec
data16
sbb
inc
test
push
shl
add
and
sub
out
adc
lds
pushw
xor
add
das
adc
daa
adc
test
pop
test
push
icebp
js
icebp
lods
inc
fs
sub
pop
inc
mov
out
jl
add
cmpb
mov
cmp
int
mov
and
hlt
or
dec
sbb
call
clc
xor
inc
mov
add
stc
mov
daa
cmp
cli
movsb
xor
daa
out
adc
xor
mov
lahf
out
inc
cmp
das
and
pushf
lea
mov
xor
cwtl
xorl
inc
pusha
inc
jle
das
pop
and
das
sbb
mov
sbb
cmp
add
sbb
lock
push
push
clc
jbe
clc
push
mov
xor
adc
lock
pop
test
mov
xor
sbb
fcomps
addl
ss
xor
inc
aas
mov
loop
in
mov
xchg
adc
out
jae
inc
test
and
mov
and
adc
loop
xor
or
pop
cmp
enter
and
push
jl
rorl
dec
ja
nop
push
in
jae
mov
pop
add
pop
cmpsb
cltd
and
cmp
sbb
push
jo
fmulp
test
adc
and
add
nop
jae
pop
xor
pop
aam
pop
adc
or
insl
xor
cmc
add
movsl
jns
mov
xchg
loopne
add
repnz
pop
sub
pop
pop
push
mov
lcall
xor
pop
mov
loopne
cltd
sbb
fs
adc
and
cltd
lods
jnp
nop
mov
enter
mov
jle
jecxz
insb
xchg
and
fstl
je
insl
pop
and
cmp
xchg
xchg
fsub
pushf
mov
test
stc
xchg
aam
mov
test
dec
outsb
incb
add
aaa
xchg
outsb
data16
mov
xchg
test
xchg
std
imul
pop
add
movsb
ja
jae
mov
js
and
aaa
cltd
popf
out
call
mov
sti
leave
stc
fs
mov
outsl
ret
mov
loop
insl
add
loop
mov
dec
lahf
imul
lds
push
outsl
nop
mov
jbe
cmp
mov
jmp
lea
icebp
movsl
shll
push
jo
jno
pop
fsub
stos
mov
xchg
add
mov
mov
sbb
push
test
int3
lret
movsl
xorl
cltd
mov
sub
call
shlb
xor
out
adc
mov
and
dec
out
loope
xor
mov
add
outsl
adc
pusha
sahf
sub
push
adc
mov
ret
add
adc
cmp
inc
add
xor
movsl
rorb
pop
xor
push
xor
xor
sbb
inc
sbb
aad
scas
xor
or
popf
cmc
sbb
inc
mov
cli
in
mov
mov
sbb
jne
xor
jbe
ret
outsl
dec
mov
mov
xchg
data16
dec
add
mov
movsl
jg
xorl
ja
and
mov
arpl
inc
fdivl
dec
cwtl
cmpsl
dec
dec
sub
cmovg
test
mov
mov
xor
jle
dec
ss
int3
push
mov
xchg
mov
add
mov
jp
jnp
cmp
sysenter
adc
iret
cmp
xor
xor
dec
push
pop
ja
mov
dec
inc
push
adc
fsubr
aas
cltd
mov
js
sbb
mov
sbb
imul
lds
xor
push
call
fchs
dec
dec
jo
cwtl
mov
jb
or
sub
inc
mov
lock
jo
xlat
add
mov
cs
xchg
sbb
out
lea
xchg
fs
cmc
rcrl
mov
mov
xor
sbb
jnp
popa
shll
in
xor
mov
sbb
cmp
mov
mov
dec
adc
imul
xor
stc
movsl
flds
lret
cltd
cld
pushf
pop
xchg
cmc
cmc
push
fs
and
test
fnsave
pop
test
outsl
and
je
daa
mov
insl
cmp
add
or
mov
mov
adc
add
sbb
shlb
xor
push
or
into
mov
test
or
lret
mov
push
pop
fbstp
lret
enter
adc
and
gs
adc
add
scas
sbb
mov
push
out
push
hlt
addl
lahf
cmp
mov
cli
pop
dec
rclb
rep
jecxz
or
mov
imul
push
mov
prefetchnta
iret
mov
cmovno
jne
ds
and
mov
pop
inc
xchg
cmp
ret
push
pop
mov
movl
sub
lcall
ljmp
or
sahf
outsl
cld
pusha
cltd
pushf
enter
cltd
std
and
decb
dec
lea
pop
ds
xorl
and
jb
or
xchg
pop
and
adc
movsl
push
cli
es
aaa
lds
dec
aaa
mov
inc
aad
push
js
pop
test
add
aad
mov
mov
cmp
jne
cld
rorl
jmp
add
pop
popa
sub
dec
hlt
es
shl
mov
push
insl
push
adc
int
sbb
add
clc
mov
dec
dec
ljmp
xor
dec
mov
adc
sbb
dec
stos
sarb
adc
pop
std
inc
lahf
and
popa
ret
pushf
or
cltd
into
and
test
sbb
mov
adcl
xorb
xor
adc
sbb
sbb
out
test
inc
and
mov
mov
adc
testb
mov
jmp
add
aas
adc
clc
pop
arpl
add
movsl
pop
imul
cmpsl
arpl
clc
add
or
andnps
inc
sub
movsl
mov
jecxz
and
fnsave
cmp
arpl
mov
jne
dec
mov
in
lods
mov
inc
mov
in
jne
pop
inc
sbb
xorps
std
mov
xchg
aad
fs
int3
and
lcall
int
jns
mov
ja
add
inc
xchg
cltd
int3
jle
pushf
stc
rolb
xor
xor
inc
xor
int
adc
xchg
rorb
es
adc
add
and
loop
cmpsb
mov
repz
nop
sbb
add
les
outsb
dec
xchg
jge
cmc
cs
pop
or
shll
insb
mov
cmc
mov
dec
fs
imul
addb
mov
ja
in
pop
in
push
mov
and
out
jmp
punpckhdq
lahf
sbb
xchg
jl,pt
aad
or
lock
movsb
push
cmp
std
and
mul
sbb
imul
js
jae
negl
leave
cmpsl
std
leave
imul
movsl
mov
inc
cltd
jb
out
lds
jecxz
mov
stos
enter
inc
sub
inc
imulb
gs
nop
push
test
pop
call
dec
or
cld
jno
xchg
in
imul
aas
jae
mov
clc
rorl
add
aas
faddl
cmp
out
lcall
jae
sbb
adc
or
dec
and
or
add
dec
mov
dec
aaa
pop
mov
push
cmp
test
outsl
pusha
push
adcl
sbb
add
dec
sub
inc
mov
cwtl
lcall
test
xchg
mov
and
adc
aas
push
icebp
enter
adc
push
push
and
popa
jg
popa
mov
lcall
mov
mov
test
movsb
insl
and
les
in
cmpsl
mov
xchg
dec
sbb
fnstsw
cmp
xor
mov
add
in
in
enter
and
pause
inc
mov
push
xor
int
xor
gs
jmp
jle
aas
mov
daa
leave
push
hlt
xchg
and
negl
mov
adc
sbb
mov
add
sub
cltd
aaa
shll
aaa
xchg
xor
mov
loope
testl
daa
pop
iret
mov
cld
outsb
adc
clc
lea
icebp
dec
dec
xchg
imul
sti
outsb
add
negb
push
fimuls
call
xchg
xchg
test
divb
stos
movsl
rorb
jl
or
ja
push
loope
pop
cmc
loopne
dec
adc
inc
jb
fstpl
push
loopne
push
out
push
dec
sti
and
adc
je
jl
jmp
push
fisubrl
push
mov
sub
mov
jp
nop
pusha
sbb
popa
scas
add
pusha
imul
lahf
and
push
add
aam
ss
jo
es
mov
xchg
enter
xchg
inc
dec
ja
inc
daa
gs
sahf
ja
stos
cmp
test
xor
mov
adcb
or
pusha
push
adc
xchg
mov
push
dec
inc
das
ss
sarb
mov
mov
dec
push
cmpl
outsl
sarb
xor
sarb
cmc
sti
mov
dec
mov
cmp
out
lahf
or
aam
xor
cmc
mov
loop
jle
iret
sub
pop
movsb
aas
aad
decl
and
lock
xor
stos
lahf
xchg
insl
insl
xchg
lret
adc
xchg
xchg
lcall
jge
lock
jle
or
sbb
test
or
xlat
pop
or
inc
out
push
clc
push
sahf
mov
shlb
mov
movsl
pop
clc
mov
daa
clc
cmp
push
xchg
pop
icebp
fsubs
nop
enter
push
hlt
cmp
movsb
movsl
sub
in
xchg
push
mov
imul
mov
adc
dec
movsl
xor
xor
call
pop
mov
daa
movsl
test
std
popa
popf
and
ljmp
ds
outsl
movsb
mov
pop
les
enter
jno
sti
mov
add
into
mov
or
in
cs
jae
push
repnz
mov
mov
gs
das
insb
mov
inc
xchg
ja
pusha
push
gs
and
xchg
shll
push
sub
cmpsb
xor
dec
dec
lods
pop
in
inc
ja
xchg
sbb
cli
or
ljmp
xchg
mov
dec
sbb
cwtl
push
ds
jg
cmc
pop
jae
sub
pop
mov
and
add
pop
sbbb
mov
pop
shll
fs
sub
xchg
idivb
cltd
repz
lock
in
xor
cmc
pushf
int
testl
push
xchg
and
mov
sub
cmp
in
mov
sbb
xorb
repnz
jae
pop
popf
nop
inc
inc
cmp
cmc
xchg
ljmp
ljmp
aaa
sbb
daa
sbb
fisubrs
mov
rclb
adc
mov
pop
fsubl
es
in
sbb
and
inc
sub
std
mov
adcl
mov
fdivrs
adc
outsb
jne
test
jo
push
mov
and
divl
push
ljmp
mov
idivl
cmp
push
mov
decl
mov
std
out
loope
in
cltd
lods
daa
push
sbb
clc
fisttps
push
mov
pop
mov
mov
xor
hlt
enter
cmp
cld
xor
enter
dec
cli
fnstenv
mov
and
mov
and
mov
stc
in
cmp
push
cmp
sub
jbe
test
xchg
mov
ja
xor
dec
popf
adc
cmpsl
divb
cld
cmp
xchg
adc
and
mov
mov
lahf
rol
hlt
sub
fdivr
dec
pop
adc
enter
push
inc
xor
push
sbb
movsb
and
jbe
mov
out
pop
out
sub
outsl
add
add
xor
xchg
sub
and
add
clc
and
dec
jl
cmp
sbb
push
and
push
lahf
dec
xor
adc
lock
cli
out
push
mov
adc
fwait
add
jmp
lret
dec
into
cld
push
add
ljmp
inc
mov
call
mov
mov
cmpsb
in
aas
or
mov
xor
mull
in
pushf
and
or
and
ss
icebp
add
pop
fnsave
xor
addl
fwait
jg
repz
cld
jbe
movsl
xchg
mov
lret
cli
mov
nop
gs
flds
hlt
lds
xchg
in
jmp
add
cld
lret
mov
loopne
xlat
add
pcmpgtd
ret
jp
inc
mov
insb
pop
ret
mov
inc
cmp
gs
cmc
imul
add
int
scas
push
inc
add
and
cmc
xor
test
mov
sub
mov
stc
sbb
lcall
mov
xor
fsubs
mov
sub
push
mov
std
movsb
loopne
aad
icebp
sub
in
cld
int3
es
cmp
int
sbb
mov
fsubs
inc
mov
push
xchg
adc
cmpb
insl
sahf
ss
mov
mov
add
sub
xchg
mov
addr16
push
das
or
sbb
sub
addr16
aas
clc
pop
call
jns
shrl
aaa
lcall
adc
xchg
or
push
cmp
fs
mov
and
ss
negl
movsb
or
jge
sbb
pop
scas
mov
inc
mov
je
loopne
call
call
add
xor
lds
push
xor
imul
xor
jne
xchg
mov
ss
cmp
sub
push
cmp
lods
adc
xchg
movsl
jo
dec
fmull
insb
loopne
jo
jmp
push
sbb
addb
push
xlat
xor
ret
and
mov
mov
movsb
call
out
xchg
pop
xor
mov
popa
lret
je
stos
jmp
xor
or
loope
push
cli
lods
fldl
ja
or
mov
fs
pop
and
call
mov
dec
xor
fs
push
mov
cmp
sahf
mov
cvtps2pi
movsb
out
mov
sub
push
dec
aas
cld
jbe
mov
daa
sbb
pusha
mov
push
mov
push
or
dec
mov
cmpsl
dec
ret
mov
cmp
cmpsl
mov
test
or
and
jne
push
mov
cltd
xchg
mov
lcall
mov
pop
push
push
mov
leave
jg
cmpsl
push
aaa
push
arpl
cmpsb
insl
icebp
cmp
jge
shl
cmc
arpl
movsl
lds
addr16
add
clc
notl
cmpsl
mov
andb
std
cmp
stc
lods
popf
adc
jecxz
lahf
push
cwtl
adc
push
inc
int3
mov
cs
in
xor
aad
mov
call
pop
mov
test
aad
pop
lock
inc
pop
test
inc
loopne
inc
push
mov
mov
rorb
and
mull
sar
mov
push
cmpsl
jmp
jecxz,pt
sbb
pop
adc
sarl
fdivrl
pop
sub
xor
pop
andb
ret
outsl
and
mov
jmp
jb
adc
cmp
add
cmp
daa
es
and
sbb
mov
cmpsl
xor
xchg
adc
sub
lock
cltd
xor
add
adc
add
mull
mov
xchg
mov
push
jg
sbb
icebp
and
dec
cmp
sub
mov
addb
inc
mov
push
and
and
dec
fs
inc
inc
mov
mov
push
movsl
adc
dec
push
out
sbb
ja
adc
test
movsb
xchg
and
fdivrl
xchg
jo
sahf
repz
pop
jo
gs
add
push
sbbl
add
cmpsl
jge
insb
sub
fsubl
fcoms
cltd
and
addb
cmp
lret
sub
or
sti
mov
xor
leave
test
mov
movsb
aam
ja
inc
lahf
cmp
sub
std
inc
sub
scas
push
fadds
mov
enter
mov
imul
fsubl
orb
std
xor
mov
jle
push
push
test
test
ja
lret
data16
shl
sub
mov
fwait
jbe
xchg
ret
and
pop
jge
in
lret
add
push
sbb
ss
in
dec
out
pop
lret
icebp
lods
and
addr16
out
les
cmp
mov
xchg
inc
sahf
lret
outsb
mov
fistps
lret
movsb
lods
cmp
xor
add
and
aam
mov
add
fwait
cmc
je
push
aad
push
sbb
mov
mov
sahf
lock
xchg
imul
and
out
pusha
jo
adc
sbb
es
mov
or
or
fstp
call
xchg
mov
jae
vmovhps
push
call
ds
call
lock
mov
aas
gs
jns
addr16
repz
mov
std
mov
cmc
popl
scas
jl
out
pop
loopne
dec
add
adc
je
in
pop
cmp
push
lock
movsl
and
fdivr
divl
pop
jb
dec
sbb
lahf
popf
mov
sar
add
test
push
mov
xchg
inc
or
push
nop
mov
jne
test
movsb
sub
mov
daa
mov
pop
mov
jge
pop
std
in
push
pop
or
mov
cmp
lock
mov
push
stc
arpl
icebp
fists
push
cmpl
cwtl
lds
cld
pop
lret
xor
out
adc
push
mov
xchg
fdivrl
and
movsl
xor
cmp
and
sub
xchg
fsubs
bound
mov
fistl
add
test
add
bound
lcall
sbbb
mov
outsl
pop
mov
pop
adc
add
aaa
repz
mov
dec
ret
mov
mov
xchg
pop
adc
das
aas
sub
imul
arpl
dec
and
inc
cltd
add
jmp
aaa
icebp
sub
rorl
cmp
out
loopne
ffree
cmp
inc
mov
aaa
stos
pop
mov
cwtl
cltd
jo
stc
push
cld
push
mov
cltd
fdivrl
popa
jge
mov
sbb
inc
sub
outsl
sti
std
testw
fxam
xchg
mov
das
mov
mov
lahf
pop
and
inc
lods
cmp
xchg
mov
fldt
cmc
mov
test
addr16
ds
xor
mov
sbb
mov
ds
cli
jb
dec
mov
mov
sbb
call
int3
leave
mov
jl
fisubl
or
daa
sbb
rorl
sub
mov
cwtl
cmp
int3
enter
nop
adc
adc
jne
rolb
cmpsl
imul
push
adc
dec
push
mov
cmp
pop
push
lods
loope
inc
in
push
je
mov
dec
ret
movsl
or
mov
sub
adc
shlb
mov
cltd
xor
mov
xchg
fdivl
cwtl
jbe
adc
push
and
mov
mov
in
pop
xor
xchg
mov
out
or
mov
nop
mov
sub
pop
jae
stos
jae
mov
inc
enter
pop
imul
mov
aam
les
movsl
imul
mov
inc
and
int
or
rcr
add
das
sub
std
mov
xor
ja
dec
bound
sub
sti
lock
test
lods
jo
xor
mov
cmp
jae
imul
sub
mov
test
pop
xor
ret
jle
mov
ljmp
addb
pop
std
cmp
xchg
mov
aaa
jge
dec
rcrb
lods
cwtl
inc
loop
int3
js
pop
pop
lret
insb
push
jmp
lods
mov
in
fwait
sbb
pop
push
loopne
in
ja
jne
sub
lds
xor
fstps
mov
fcoms
test
mov
mov
cmc
aad
addb
in
movl
pushf
lods
cmpsb
sub
sbb
push
add
mov
addr16
test
jmp
cmp
js
scas
jmp
jo
aam
xchg
es
data16
jmp
pushf
cmp
andb
sub
push
pop
jmp
out
sub
scas
xor
or
dec
insb
inc
jbe
cmpsl
scas
sbb
sbb
xlat
xchg
xlat
in
sub
jg
lea
enter
inc
inc
shlb
cltd
outsb
aaa
std
add
add
jae
lds
add
and
jno
sub
jne
aas
inc
mov
sbb
test
scas
mov
and
mov
xchg
aas
push
in
iret
mov
push
or
xor
sub
sbb
fiadds
scas
xor
cs
mov
std
add
jae
cmpsl
adc
call
ss
push
cmc
cmp
jecxz
mov
add
cmp
cmp
xor
dec
adc
and
jp
sti
jl
call
stc
push
ror
in
jecxz
das
mov
add
dec
rolb
jmp
adc
dec
cmp
rol
mov
sub
aaa
jmp
sub
and
jns
jno
mov
iret
daa
ljmp
xor
js
mov
out
inc
stc
lret
enter
pop
repnz
aaa
mov
pop
mov
test
aas
add
in
int3
call
pop
sub
sbb
adc
or
mov
mov
xorl
cltd
or
test
pop
enter
imul
cmp
dec
loopne
xchg
cltd
imul
inc
ja
cmp
aad
popa
sub
lret
mov
fadds
lods
sbb
popf
jecxz
mov
jmp
in
mov
adc
andl
mov
cltd
jmp
test
rcrb
pop
into
mov
cwtl
lahf
and
add
sub
lret
sbb
inc
jb
xor
add
call
imul
je
mov
cmp
xor
and
sbb
icebp
rcll
xchg
call
dec
inc
movsb
adc
hlt
scas
imul
inc
leave
cltd
adc
mov
ja
jmp
push
sti
cmp
call
sahf
repz
cli
jae
pushf
mov
repnz
mov
push
int3
xchg
bound
jo
mov
or
imul
pop
faddp
cmp
cwtl
xor
adc
iret
sub
pusha
and
inc
jnp
xor
xor
les
fnstcw
xor
mov
nop
aad
movsl
fcoml
mov
lcall
sbb
lds
inc
test
xchg
xor
addl
lahf
cmp
insl
ss
xor
cld
xchg
sub
negl
inc
push
sbb
xchg
pop
or
xor
push
inc
ret
add
and
into
adc
int3
ja
lods
pop
imul
stos
jmp
xor
in
mov
in
sub
cmp
and
inc
shrb
sub
and
aas
xchg
xchg
ret
xor
pusha
int3
xor
aas
adc
and
in
sar
cli
cmpxchg
or
cltd
test
sub
ffree
stc
inc
push
mov
cs
push
fs
inc
mov
cmp
les
in
gs
dec
rcrl
out
xchg
rcr
nop
pop
ljmp
sub
push
in
shrb
in
xor
jb
ret
es
jmp
jne
push
pusha
mov
scas
cmp
test
add
mov
pop
movsl
mov
pushf
mov
dec
sbb
push
ss
cmpsb
dec
xorl
and
dec
cmp
sub
outsb
ja
mov
leave
cltd
je
lds
xor
inc
enter
pop
cwtl
mov
push
and
test
add
sub
lods
cmc
sub
push
jne
xor
mov
int3
test
and
jnp
test
push
loopne
sbb
js
mov
add
dec
mov
movsb
xor
jl
jae
inc
lods
stos
mov
add
push
jae
mov
add
cwtl
push
movsb
mov
and
bound
loope
dec
add
add
cmp
jl
es
cwtl
dec
pusha
fs
xor
icebp
dec
or
push
and
clc
push
fsubs
popa
fs
inc
iret
mov
fs
data16
sub
dec
sti
mov
out
lcall
xor
and
xchg
push
arpl
inc
icebp
dec
sti
or
and
adcl
mov
or
xorl
xor
dec
cmp
stc
daa
lods
rolb
pushf
imul
lds
daa
fcoms
out
inc
fcomps
mov
lret
loop
jecxz
dec
and
icebp
dec
inc
mov
sbb
fs
rol
jns
add
xchg
testb
mov
pop
add
scas
xlat
mov
and
lods
or
sti
loope
mull
fs
movsl
call
and
lods
sbb
aas
cmp
mov
mov
push
inc
fbld
pop
enter
sbb
movsl
in
scas
push
jge
cmpb
test
je
in
out
leave
rcrl
mov
and
orl
js
inc
daa
jl
lahf
and
mov
lods
push
loopne
dec
mov
in
jecxz
shl
and
push
fsubs
jns
add
insl
in
adc
and
mov
mov
and
int3
add
xchg
ss
rcll
mov
jecxz
inc
sub
ret
mov
jl
pop
and
out
jecxz
mov
sub
in
and
and
arpl
dec
xchg
popa
imul
and
push
xor
jbe
adc
push
jle
jnp
and
loop
and
mov
lahf
push
xorb
pop
pusha
out
cmp
adc
xor
dec
and
mov
mov
pop
mov
add
or
aam
loopne
loop
add
or
dec
mov
xor
stc
add
mov
test
inc
lds
aad
mov
ret
in
xchg
jmp
xor
pushf
mov
xor
jp
pop
loope
and
int
in
cs
test
pop
mov
lods
scas
mov
and
lret
jmp
inc
cmp
fdivrl
call
sti
jmp
icebp
dec
add
add
jge
jge
lret
pop
lahf
xor
xor
jecxz
movsl
inc
data16
push
adc
int
cmp
loopne
insb
adc
imul
inc
lods
cmp
out
mov
xchg
pushf
in
add
push
out
inc
cmpsb
adc
and
add
gs
add
in
daa
aam
mov
inc
das
shll
add
cmpsb
fdiv
nop
inc
sbb
xorl
ret
cmp
pop
les
cmpsb
sub
stc
xchg
cmpsl
inc
test
movsl
iret
mov
adc
push
fwait
adc
fiaddl
adc
in
sbb
lret
ljmp
je
mov
cmp
pop
or
stos
xor
ficoms
sub
or
pop
fisubs
jmp
mov
arpl
adc
add
loopne
movsb
mov
data16
push
sub
lds
adc
fisttpll
pop
lcall
jl
call
fwait
test
or
js
loopne
xor
inc
call
pop
mov
movb
xchg
dec
xchg
test
pop
pop
xor
fstpl
outsl
dec
fidivl
mov
or
adc
xchg
aaa
imull
js
fpatan
jne
jle
xor
dec
sbb
mov
push
in
mov
or
test
ja
cmp
call
pop
jnp
stc
fs
and
mov
mov
shl
enter
stos
add
jmp
fdivs
sbb
fsubl
rcl
aam
sbb
shlb
movsl
mov
or
imul
sbb
add
inc
mov
test
repnz
cld
jno
adc
repz
add
sub
sbb
pop
loopne
test
sbb
lret
and
clc
xchg
push
out
xchg
sub
lods
incl
mov
push
jmp
in
inc
arpl
repz
repz
or
push
sti
test
lds
xabort
jle
rcrb
sub
test
push
adc
movsb
fidivs
sbb
mov
mov
mov
les
loopne
mov
fcompl
jle
movsl
stc
cmpsl
out
lcall
ficomps
add
test
into
jmp
sub
test
sbb
dec
inc
out
sub
xor
and
clc
add
and
movsl
nop
add
cmpsl
inc
or
jmp
out
popa
fisubl
call
sub
add
stc
inc
idivb
cmpsb
ljmp
fisttpl
push
adc
mov
outsl
pusha
mov
push
sub
inc
mov
inc
call
lods
loopne
test
enter
xchg
push
mov
in
nop
pop
cs
cmp
fcomi
push
pop
and
lock
and
push
shrl
scas
sbb
jle
roll
inc
fwait
xchg
pop
sub
std
cmp
dec
mov
inc
and
sub
inc
mov
inc
mov
xor
sub
jno
lock
ljmp
fcoms
jl
icebp
xchg
jnp
ret
ja
add
movsb
inc
mov
jae
adc
sbb
and
hlt
sbb
pop
arpl
enter
sbb
xor
jnp
mov
sub
jge
push
mov
adc
movsb
inc
push
dec
imul
movsl
aam
dec
push
add
aam
divl
or
and
and
mov
rol
scas
arpl
in
adc
icebp
aad
inc
or
movsl
fcompl
jle
mov
aad
cmp
and
call
lret
scas
adc
sbb
push
cmp
inc
or
sbb
mov
mov
adc
cmp
and
pop
jl
shll
test
loopne
mov
int
push
insl
jmp
popw
jo
add
rcll
or
std
push
and
notl
cmpsl
add
pop
jns
cmc
jo
loop
nop
mov
lods
in
sub
pushf
out
pop
dec
orb
getsec
push
mov
leave
out
test
and
inc
ss
ja
mov
fnstsw
lock
std
cmpsl
cmc
sub
pop
lds
nop
imul
and
mov
gs
xor
insl
mov
shr
nop
enter
adc
dec
push
nop
pop
data16
je
mov
mov
adc
sbb
sbb
cltd
cmp
aam
in
xchg
subl
jo
out
sbb
push
loope
and
std
fs
push
fdivl
or
enter
cld
shrb
int
jno
inc
pop
add
clc
cs
jnp
imul
pop
into
call
xchg
int3
insl
sub
push
lock
push
test
and
pusha
sar
pop
mov
loop
jbe,pt
jns
mov
adc
sub
lcall
dec
pop
test
ljmp
adc
hlt
mov
adc
mov
mov
or
and
and
cltd
sbb
pusha
das
push
sbb
fnsave
int3
and
add
dec
pop
movsl
js
out
cmp
ss
cltd
xchg
xchg
setge
xchg
or
mov
inc
cmc
dec
mov
ja
lods
add
push
inc
test
add
mov
add
ds
clc
repnz
pop
pusha
adc
dec
outsl
outsl
dec
push
std
sub
and
pop
and
dec
gs
movsb
aad
xor
aam
add
in
inc
hlt
das
inc
faddl
inc
andl
fs
adc
cmp
lea
out
mov
xor
fstps
push
cltd
daa
pop
add
push
mov
into
fstl
je
inc
xor
std
iret
sub
es
mov
dec
mov
adc
add
test
add
and
pop
xor
push
mov
pop
int
jns
jge
push
push
rclb
add
outsb
outsb
stos
mov
repnz
jecxz
ss
add
inc
movsb
jmp
mov
sahf
test
rorb
int3
outsb
out
fs
insl
and
repnz
in
orl
push
pop
bound
pushl
sub
lods
inc
jb
pusha
mov
cs
arpl
lret
fnstsw
or
jae
ja
pop
cmp
mov
jae
mov
push
je
gs
mov
nop
aad
pop
daa
daa
aaa
xor
xchg
xchg
cmc
xor
inc
inc
or
inc
jecxz
push
push
clc
mov
cld
and
xchg
or
cwtl
xor
faddl
mull
mov
push
jg
dec
sbb
negl
cmp
sbb
jmp
xchg
push
ds
add
cwtl
sbb
cltd
out
and
fwait
arpl
movsl
hlt
sarb
pop
xor
out
push
call
pop
arpl
pop
pop
lret
add
lock
pop
inc
inc
xchg
pop
ljmp
decb
cmc
push
cs
mov
fstps
sbb
pop
add
xor
pop
sbb
pop
stc
clc
movsl
jnp
jne
lahf
loopne
sbb
movsb
sbb
inc
add
inc
nop
cmpsb
dec
enter
int
or
test
je
gs
int
repz
pop
cmp
push
push
xchg
outsb
sbb
inc
mov
jbe
pop
push
pop
es
jle
or
ret
xor
xchg
dec
sub
push
mov
cmp
add
add
ds
test
pop
mov
test
iret
xor
xchg
arpl
jle
add
adc
fidivl
out
in
lods
mov
aad
add
sbb
and
lea
xor
out
cmp
add
push
sub
and
xor
call
jb
cmp
jb
mov
mov
sub
jg
push
cs
pop
pop
pop
xor
jb
pushf
popf
je
ds
loopne
jbe
sahf
sub
js
lock
arpl
push
test
movsl
popa
cmp
xor
loopne
ret
sbb
jb
insb
and
sti
vpunpckhdq
pop
iret
xchg
inc
mov
insb
jp
xor
pusha
jl
cmc
fcoml
cmp
cmc
ja
mov
add
xor
pop
push
cmp
add
and
add
push
mul
in
xor
push
jl
rcll
add
cwtl
pop
sub
and
push
push
test
xor
push
mov
jmp
sub
dec
cmp
or
shrl
imul
out
xor
shll
pop
cmp
push
fst
xorl
out
inc
sub
clc
inc
ljmp
pop
notb
push
std
in
clc
push
in
push
in
mov
stos
enter
push
add
test
stos
or
inc
and
inc
and
aad
jp
cmp
scas
and
cmp
aad
push
or
dec
adc
push
xchg
xlat
pushf
in
mov
rorl
stos
cmp
cwtl
aas
push
cmp
lea
cmc
daa
in
nop
lret
ss
cmc
js
lcall
or
pop
adc
cmc
push
sti
sbbl
xor
lods
push
pop
inc
add
or
and
dec
hlt
fwait
rcll
add
lds
clc
cmpsb
cmp
fwait
push
adcb
mov
loope
je
jge
sbb
mov
es
pop
shr
xchg
mov
xchg
aas
fld1
clc
dec
add
test
inc
xor
fs
hlt
dec
cmp
mov
fidivl
call
mov
std
ja
insl
or
ret
xchg
xchg
cwtl
ss
cmova
dec
dec
fs
jbe
loop
mov
pop
int3
cmp
dec
xchg
mov
push
pop
mov
xchg
and
movups
loop
and
push
pop
mov
and
jno
mov
insb
xchg
sbb
xchg
and
push
mov
mov
ds
push
xor
dec
loop
outsb
or
jbe
es
stos
add
jb
not
adc
fmuls
ja
inc
mov
mov
repnz
xchg
cwtl
aas
out
dec
fbld
in
push
xor
sub
add
jle
dec
decl
sub
ret
sub
xor
out
insl
push
hlt
inc
inc
jmp
pop
push
lahf
std
ss
in
xor
lahf
sbb
aaa
mov
stc
sbb
sbb
jmp
mov
dec
jecxz
or
insb
and
fsubs
mov
push
lods
push
ja
out
ljmp
mov
push
lcall
mov
pop
push
push
xchg
arpl
push
ss
push
ret
and
popf
inc
mov
mov
pop
idivl
adc
pop
sbb
jmp
add
dec
outsl
dec
push
add
pop
jne
jb
adc
cmpsl
push
inc
dec
sarl
add
adc
cmp
movsl
subb
xchg
icebp
or
lahf
add
or
dec
dec
jb
shll
pop
cmpsl
scas
mov
xchg
movswl
sbb
aaa
int3
cmp
outsb
inc
stos
cmc
xor
add
push
ja
fs
sbb
pop
mov
inc
cmp
fcompl
jle
std
xor
imul
mov
int3
out
xchg
add
xor
rdpmc
cli
jmp
mov
cmpsb
inc
push
xchg
hlt
cmp
decb
lret
and
jmp
dec
push
cli
mov
push
fcomps
cltd
adc
outsb
les
pop
daa
aaa
retw
js
push
js
jne
test
les
mov
jne
dec
and
jne
lods
adc
adc
int
cli
or
xchg
push
sbbb
cs
pop
push
test
xchg
pushf
lret
aad
sbb
or
push
imul
xchg
add
mov
mov
sub
out
mov
and
add
in
sub
daa
mov
test
test
adc
jb
outsl
ja
outsb
std
push
jns
sbb
or
adc
lds
dec
icebp
js
xchg
jns
and
cmpsl
dec
cli
pop
pop
addb
stos
mov
dec
es
cmp
adc
sub
pop
ds
int3
lods
or
cmpsl
icebp
inc
stos
mov
mov
lods
xchg
jns
lcall
cwtl
inc
or
test
stc
lock
movsl
dec
iret
fcomp
stc
xor
mov
pusha
movl
testb
scas
jne
xor
pop
scas
scas
arpl
cmpsb
or
cmp
xchg
jns
xor
mov
imul
setb
or
pushaw
gs
jp
push
lahf
ss
fisttpll
xchg
pop
rclb
sbb
cmp
jbe
mov
imul
es
lock
mov
and
add
dec
cmpsb
pop
ror
mov
imul
pop
je
cmpsb
mov
jae
test
mov
lods
jmp
push
inc
repz
and
jmp
mov
jo
push
mov
push
adc
sub
outsl
sahf
outsb
jmp
and
cli
adc
push
jb
xor
pop
jne
pusha
lret
gs
aad
in
clc
xor
sbb
dec
xchg
xchg
dec
sbb
test
repnz
ja
mov
rcll
jae
cmp
dec
cs
pushf
push
insl
lock
xor
xor
sbb
or
repz
adc
std
mov
jl
sub
cmpsl
test
in
lods
ret
in
push
push
sbb
rclb
icebp
cld
cmp
orb
test
add
fstp
and
scas
add
inc
mov
movsl
imul
adc
mov
lcall
sbb
and
fisubl
call
xor
mov
cmp
mov
push
lock
aas
out
fiadds
mov
cmp
push
xchg
lahf
adc
pop
mov
mov
xchg
inc
fld1
push
ret
ficoml
je
aad
adc
mov
or
push
cmp
jae
cmp
push
sbb
out
push
sbb
jg
sbb
mov
sbb
shll
sbb
mov
dec
cld
aad
mov
jg
fwait
adc
aaa
cmp
cmc
lea
andl
dec
mov
popa
mov
cmpsl
adc
lds
sub
dec
ret
sbb
movsb
fwait
aad
adc
add
jmp
lock
out
cld
psllq
icebp
sbb
in
les
mov
ja
or
dec
popa
incl
mov
add
movsb
pop
aam
sbb
inc
mov
xchg
dec
dec
test
cmp
dec
dec
add
or
or
ds
dec
fnsave
lcall
jl
mov
inc
cmp
popa
fdivrp
outsl
cltd
fadds
jp
in
adc
scas
or
mov
jbe
mov
mov
movsb
and
add
cs
jge,pt
int
mov
int
ret
sub
cmpsb
add
inc
pop
xchg
pop
cmc
jmp
out
addr16
aaa
gs
std
lcall
bound
xor
inc
and
or
push
mov
loope
add
movsl
dec
std
mov
xor
xchg
loope
pop
jp
sbb
sbb
ja
in
inc
mov
jmp
xor
scas
bound
mov
orl
or
movsl
arpl
mov
inc
stos
inc
lods
negb
nop
jae
add
popa
xor
cltd
daa
in
lcall
mov
ret
test
push
and
pop
out
xor
mov
into
dec
and
fwait
sbb
sbb
adc
push
adc
inc
repz
inc
neg
clc
es
pop
add
mov
enter
mov
xchg
xor
add
movsl
dec
mov
loope
dec
lret
pop
sbb
mov
pop
mov
sbb
pop
lret
add
aaa
mov
mov
fnsave
inc
mov
mov
push
mov
adc
out
orb
sub
push
aad
push
mov
mov
xor
and
dec
inc
notb
jmp
leave
js
sub
xchg
xor
pop
aas
or
fldenv
in
outsb
lret
and
mov
loope
adc
dec
add
sub
enter
mov
adc
fabs
shll
fsubr
add
sub
je
sbb
or
mov
jo
fstl
jmp
sahf
mov
sub
sub
mov
cwtl
out
loope
in
push
pusha
xor
lds
adcb
aad
add
pushf
lcall
mov
inc
push
cmc
aam
scas
jmp
lahf
pop
ret
in
xor
mov
sti
js
ja
mov
es
fs
cltd
clc
add
popf
xor
out
out
mov
mov
xchg
ja
jo
pop
fldl
cmp
cmpsb
js
mov
out
aaa
leave
fdivr
lea
fwait
aaa
xor
loopne
fsubrs
push
ss
mov
rcr
pop
xor
jl
addb
jae
mov
add
fwait
add
push
cmp
add
sbb
pop
push
hlt
mov
fldcw
jno
and
mov
loop
mov
add
xchg
add
xor
push
mov
out
mov
shrb
and
xchg
pop
fbstp
ds
inc
cltd
fdivrl
adc
in
ja
inc
jmp
mov
test
push
lea
aad
add
pop
mov
aaa
ror
andb
xor
in
add
jns
out
test
decb
pop
out
cmpsb
mov
inc
sbb
mov
lock
adc
add
je
je
fsubl
arpl
sub
cltd
cmp
sahf
mov
mov
mov
dec
fisubl
dec
or
icebp
or
fsubr
int3
ss
push
sbb
addr16
daa
out
pop
dec
lahf
js
in
in
inc
test
lock
jne
dec
pop
les
cmpsb
cmc
or
jmp
orb
sti
nop
jae
and
pop
push
dec
adcb
hlt
cmp
push
inc
adc
movsl
sti
sub
push
xor
in
gs
sbb
clc
or
mov
lret
pop
out
scas
dec
dec
in
adc
push
mov
pop
orl
scas
fldenv
int3
push
hlt
lea
rcll
fiaddl
ds
pushw
imul
mov
lcall
push
or
jg
pop
xor
add
mov
jmp
enter
push
out
adc
jge
mov
pusha
and
pop
pop
cmp
jne
and
jo
push
sub
sub
cwtl
and
std
pop
or
movsb
xlat
in
ror
lret
enter
pusha
dec
adc
or
mov
ficompl
call
sbbl
and
mov
fldenv
and
hlt
jnp
xor
movsb
mov
aad
mov
xorb
shr
dec
add
jg
jmp
jmp
mov
adc
lock
push
in
lahf
adc
hlt
in
mov
push
negl
adc
cltd
aas
out
jno
jg
adc
aas
jg
lahf
hlt
cwtl
lret
jne
mov
lock
or
mov
mov
pop
add
test
sbb
and
insl
out
mov
xor
inc
cs
inc
ja
dec
hlt
cmp
push
or
into
fsubl
lods
adc
decl
gs
test
push
insl
inc
test
adcl
dec
jg
sti
sub
fs
dec
shl
sbb
push
movsl
ja
sub
cmp
xor
xor
clc
lcall
das
xor
aas
fcoms
jae
inc
cmp
mov
or
xchg
xor
aad
lock
and
sbb
xchg
pop
sbb
cmp
std
xchg
call
pop
push
arpl
mov
xchg
mov
pop
mov
sti
and
int3
jmp
pop
mov
lock
add
jl
xor
hlt
cmp
pop
push
mov
push
push
xor
insl
subb
dec
outsl
ss
xor
in
stc
and
rcr
imul
xor
adc
ss
clc
lds
pusha
add
mov
cmp
push
jg
loop
cmp
adc
cmp
xchg
sti
push
ret
cmp
and
xchg
icebp
mov
adc
dec
lds
cmp
cmp
pushf
mov
jl
mov
mov
mov
or
int
je
and
dec
mov
xor
daa
push
cld
inc
mov
lcall
push
icebp
test
lahf
xor
je
imul
or
movsl
push
mov
ds
add
adc
js
and
hlt
fsts
std
or
inc
lahf
movsb
js
push
jmp
int3
pop
mov
add
or
jmp
cmp
xor
mov
into
in
add
movsb
addr16
pushf
rcr
mov
sbb
jo
add
dec
sub
lea
inc
test
leave
lret
ret
js
xchg
and
xor
xchg
or
dec
mov
inc
push
test
test
and
inc
flds
ret
lds
and
ja
mov
add
lcall
adc
pop
xchg
pop
mov
jae
dec
cmp
dec
cwtl
gs
dec
int3
ds
mov
push
fs
inc
and
out
sub
leave
movsb
mov
fcmove
add
lds
pusha
mov
rclb
addb
push
inc
scas
xor
out
and
mov
popf
mov
xor
int3
add
fcoms
pop
and
test
inc
mov
adc
mov
xchg
xchg
fdivs
movsb
cmp
mov
mov
sbb
inc
sahf
push
xchg
jmp
push
mov
es
xchg
shr
adc
pop
jbe
je
inc
test
pop
and
movsl
mov
xor
cmc
sbb
ss
mov
scas
sarb
enter
int
fsubs
add
outsb
hlt
popa
fcomps
push
sbb
xchg
pop
enter
aaa
arpl
movsl
mov
movsb
sub
jne
je
in
add
xchg
adc
add
mov
aaa
jnp
xor
sbb
orb
jo
or
es
mov
jmp
jp
shl
xor
dec
push
sahf
clc
andl
imul
js
ljmp
ja
dec
pushf
addr16
dec
ss
mov
push
mov
add
sub
out
sub
stc
xchg
mov
hlt
adc
inc
flds
scas
jo
mov
fcoml
or
sub
jmp
add
cmp
sbb
xchg
xchg
or
adc
movsl
xor
sbb
push
addr16
aas
data16
sbb
xor
in
and
cmc
pop
cltd
push
movsb
rcl
push
out
ja
rolb
push
push
cmc
cltd
out
int3
dec
mov
mov
int3
xor
rcr
dec
jae
out
jmp
es
icebp
and
call
sbb
jge
aad
fstl
stc
cmpsl
mov
xor
mov
mov
dec
rorb
js
push
ds
and
adc
sub
mov
pop
dec
stc
cmp
jno
std
inc
repz
outsb
pop
jne
xchg
sbb
xor
mov
test
or
sub
lret
enter
cld
and
push
or
mov
testl
mov
int3
and
out
add
orl
mov
cmpsb
cmp
out
pop
mov
test
lcall
notb
adc
jge
pop
mov
sbb
push
scas
test
jmp
cmp
xor
mov
aad
pop
movsl
jl
and
push
inc
mov
dec
pusha
jae
sbb
ja
ljmp
add
jno
mov
cmp
cmpl
call
add
pop
div
pop
cmp
mov
xchg
sbb
fcoml
imul
adc
adc
xor
jle
or
push
sub
in
stos
and
or
fldt
in
and
mov
inc
xor
jge
imul
lock
mov
aas
pop
xor
je
cltd
ljmp
mov
aad
push
lcall
mov
add
cmpsb
daa
xor
popf
sbb
aad
push
inc
imul
stos
adcb
cltd
cli
mov
fistps
rolb
std
rclb
mov
int3
xchg
insl
test
js
sbb
push
pop
pusha
inc
test
js
inc
pop
add
cli
cmpsb
in
les
out
outsb
adc
pop
xchg
aad
cmp
add
inc
cmp
push
sbb
pushw
adc
std
jo
push
mov
inc
or
adc
xchg
mov
in
xor
dec
inc
gs
fs
test
inc
jne
lea
aaa
jae
clc
in
cmpsl
or
inc
mov
or
lock
adc
enter
fildll
push
ljmp
cmp
lret
xor
scas
test
mov
adc
add
inc
stc
sbb
inc
sub
push
gs
in
stos
aas
cwtl
je
adc
and
mov
pop
sbb
jae
or
sbb
cmpsl
add
filds
stc
dec
inc
sbb
arpl
or
cmc
jae
xchg
mov
icebp
or
pop
fidivrs
out
fs
xor
aaa
inc
aaa
mov
and
test
imul
sub
adc
sahf
mov
jmp
imul
imul
into
into
xchg
xor
notl
adc
and
das
xor
mov
fs
xor
pop
add
dec
pop
lahf
pushf
aaa
pop
dec
jb
and
jae
inc
cmpsl
dec
faddl
ret
cmc
ret
movsb
ja
xor
out
and
mov
adc
loop
out
xor
inc
movsl
cmp
jmp
adc
enter
sti
cmc
push
and
scas
pextrw
inc
dec
ret
add
je
xor
testb
imul
or
pop
loope
iret
cmpsl
sti
cmpsb
aas
ss
pop
dec
mov
out
js
int3
mov
push
std
divb
jp
cmc
gs
in
sub
mov
stos
xor
dec
lds
fs
add
xchg
dec
push
inc
adc
dec
fbld
lahf
xlat
mov
dec
imul
stc
repnz
in
les
shrb
dec
ja
cmpsb
movsl
cmp
arpl
add
pop
xchg
sub
stos
mov
ss
in
movsb
sub
inc
sub
xor
xchg
mov
out
sub
and
into
fsubl
repz
add
out
pop
push
pop
aaa
je
add
mov
test
imul
cli
out
out
pop
lods
divl
and
push
nop
dec
and
roll
cltd
popf
jg
jns,pn
ja
adc
pushf
scas
das
test
cmp
inc
stos
call
loopne
nop
mov
sbb
xor
idivl
sub
into
cmc
mov
pop
xchg
shlw
repnz
jns
addr16
aad
stc
cltd
xchg
mov
cmc
lahf
cmp
ret
xor
adc
sub
ret
inc
cmp
int3
cmp
ja
push
loopne
ret
pop
pop
jnp
sbb
pop
cwtl
and
enter
iret
or
int3
add
repz
cltd
pop
aam
ljmp
loopne
hlt
jl
icebp
xor
mov
in
lods
loopne
je
xor
mov
dec
fistpll
outsl
xchg
dec
xchg
push
insb
jp
cmp
cmpsb
jle
nop
mov
add
outsb
mov
clc
je
sbb
and
in
loope
pop
jl
mov
movsb
pop
jge
pushf
in
fildl
mov
jbe
adc
sahf
cmc
lods
push
lods
adc
sahf
xor
movsl
xchg
inc
jo
mov
jp
mov
dec
loop
daa
in
unpcklps
les
clc
jecxz
rcrl
cmc
andl
push
jge
lret
mov
pop
std
cmp
out
pop
mov
xlat
lods
pop
jae
rcr
cmp
pop
in
jp
pop
push
ss
outsl
in
xor
mov
cld
gs
fwait
sbb
in
jecxz
test
fimull
jmp
or
cmp
gs
add
xchg
rclb
lock
mov
xchg
aas
shlb
adc
pop
xchg
jns
add
and
lds
std
mov
pop
outsb
bound
and
or
stc
out
push
jmp
inc
sub
jp
ret
and
mov
aam
gs
loopne
mov
cmp
jle
lds
jl
daa
movsb
scas
push
in
add
hlt
in
dec
xchg
aam
lret
jo
movsb
add
and
in
mov
rolb
add
pop
add
cld
hlt
cmc
movsb
push
and
lcall
mov
dec
nop
sub
dec
add
out
inc
fsubrl
hlt
xchg
sub
and
cmpb
js
inc
rol
and
cmp
movsb
xor
adc
xchg
jne
pop
push
add
test
es
xchg
add
data16
cmp
xor
mov
mov
xchg
mov
aaa
inc
mov
and
cld
mov
js
addb
es
add
mov
jp
jl
and
cld
mov
and
je
mov
cmp
in
pop
lock
mov
lea
es
pop
inc
popa
and
mov
sbb
es
mov
mov
add
movsb
push
add
add
xorb
arpl
daa
inc
add
dec
ja
pop
outsl
mov
cmp
adc
xchg
add
push
mov
cmpsb
push
rcr
out
and
popa
pushf
jge
mov
mulb
repz
es
daa
dec
test
mov
sar
and
xor
lea
std
js
mov
sbb
addb
aad
jecxz
ret
shl
inc
out
pushf
jns
add
scas
mov
aam
daa
mov
test
cmc
mov
inc
shl
push
test
fistps
in
inc
enter
jbe
js
xor
mov
pop
cld
mov
or
subb
and
sti
push
pop
gs
movsb
mov
mov
jnp
ja
aas
dec
cli
movsb
inc
pushf
lods
aam
push
add
pop
les
xorl
pop
add
cmp
lds
std
rcll
leave
out
shl
mov
mov
ds
subl
mov
cmpsl
xchg
cs
fs
and
gs
loope
js
shll
pop
into
and
testl
jecxz
dec
sarl
arpl
xchg
in
and
push
inc
out
mov
mov
adc
ss
lcall
pop
inc
add
dec
pop
inc
add
jge,pt
pop
repz
and
pop
ret
lock
lods
mov
pop
nop
mov
daa
in
fs
dec
xchg
push
sbb
add
shll
adc
push
add
andb
repz
in
xchg
add
std
test
xor
cmc
daa
movsl
cmp
lods
gs
and
dec
inc
inc
mov
and
aad
xor
push
or
mov
and
loopne
mov
jl
roll
jnp
mov
fcompl
sub
and
loope
aas
negl
cmp
sub
adc
adc
inc
stc
cmc
icebp
in
jmp
push
push
cltd
gs
mov
sbb
ret
jmp
dec
push
xchg
pop
aas
pop
push
lock
dec
test
dec
and
xor
inc
cmc
sbb
ja
test
and
dec
or
movsl
fcoms
and
push
xchg
ficomps
push
pop
jae
mov
lds
pop
addr16
es
lret
movsl
cmp
jecxz
dec
out
jno
dec
xor
push
mov
mov
mov
das
sub
lret
xor
stos
addr16
stos
or
lret
mov
pop
cs
pop
push
loope
js
stos
movsl
or
push
fdiv
xchg
into
xor
iret
pop
shrb
test
fsubs
mov
imul
inc
mov
and
loope
pop
loope
add
add
add
les
sbb
sahf
aaa
mov
mov
dec
cmpsl
xchg
cs
loop
ja
cmp
jae
aas
call
aas
xorb
call
and
pop
xchg
cld
rcll
fcomip
cmp
cmp
dec
addr16
aam
add
fwait
into
aad
and
mov
sahf
jecxz
push
xor
or
push
cwtl
scas
aas
or
push
enter
ds
jmp
scas
jae
and
leave
ret
addr16
or
jl
sub
imul
insb
xor
xlat
xchg
push
jbe
add
outsb
xor
adc
dec
xor
mov
mov
push
shr
repnz
xchg
add
stos
xor
loope
xor
outsb
lods
rolb
xchg
adc
pop
mov
mov
add
mov
mov
imul
es
int3
xor
in
jo
jg
mov
push
cwtl
xor
dec
pop
mov
push
xor
dec
mov
mov
and
add
fwait
push
push
add
xchg
mov
mov
jg
test
inc
movsl
adc
imul
jp
cmc
jle
xor
sbb
iret
int3
movsl
or
xchg
lret
and
mov
jne
push
mov
test
dec
jge
loopne
sbb
and
mov
dec
sbb
icebp
movsb
add
mov
mov
lods
mov
fwait
insl
mul
andb
sbb
es
mov
adc
inc
lods
cmpsl
test
xchg
and
dec
test
divl
in
xor
lods
std
xor
adc
and
gs
cmp
add
fcomps
inc
mov
mov
leave
fs
shll
sub
sbb
scas
decb
pushf
push
jns
es
cmp
and
cmp
sbb
cltd
cmp
daa
hlt
push
xchg
dec
mov
aad
shl
mov
xchg
mov
or
pop
sbb
push
aad
aas
movsb
add
cmc
mov
sub
dec
sbb
popa
nop
sub
jno
inc
icebp
xchg
fwait
outsb
add
mov
in
and
sub
xchg
int
sub
es
aaa
mov
xor
and
and
sub
int
and
enter
inc
insb
sub
clc
dec
icebp
sti
es
inc
sbb
cmp
loopne
cmp
fimuls
mov
cmpsb
push
cmc
fdivs
jecxz
mov
jp
adc
insb
lea
add
xor
push
pushf
loope
cli
mov
add
sub
mov
cltd
outsb
roll
add
mov
mov
or
xor
adc
mov
pop
and
and
fstpt
and
les
mov
into
lods
jle
fisubrs
sbb
pop
and
sbb
sbb
adc
test
jo
ds
add
js
test
popf
mov
cmpsb
cmp
call
hlt
sbbl
movl
mov
adc
in
cmpsl
pop
test
fdivs
and
push
lds
pusha
lods
loop
xor
sahf
jg
nop
call
jae
dec
daa
and
xor
pop
mov
divl
imul
pop
daa
jmp
fsubl
mov
sbb
lcall
ss
sub
loop
test
es
hlt
add
aas
jb
jno
jp
add
dec
cmp
inc
ss
adc
jle
scas
in
mov
es
fadd
cld
xor
pop
test
pop
gs
pop
cltd
jne
pushf
ret
mov
and
mov
jmp
subl
and
add
pcmpgtb
out
cmpsl
je
or
adc
mov
adcb
push
mov
dec
movsb
jge
popf
stos
aas
imul
mov
push
shrb
pop
dec
sarb
js
ljmp
aad
add
shrl
lcall
push
dec
sbb
icebp
mov
cmp
repnz
pop
sbb
cwtl
or
mov
cmpsl
jne
push
outsb
jg
dec
inc
or
mov
cmp
in
xchg
pop
out
dec
cmp
pop
pop
add
jl
add
pop
and
sub
arpl
sbb
out
push
jae
repz
cld
push
cltd
stos
mov
add
pusha
fldenv
xchg
jge
cltd
cmpsb
je
and
lds
loop
or
push
xor
mov
cld
popa
adc
add
fcompl
movsl
rolb
into
pop
mov
mov
cmpl
into
mov
jle
lret
jmp
aad
cmpsb
loope
daa
fdivs
sarb
pusha
aad
adc
mov
fwait
jle
es
out
or
inc
dec
fs
cmp
rorl
imul
mov
outsl
inc
frstor
mov
aam
sub
adc
push
mul
mov
mov
and
xor
outsl
xor
and
out
cltd
add
cltd
fisubrs
mov
xchg
cld
xor
mov
xchg
aaa
xor
and
push
push
or
vmwrite
push
or
inc
sub
outsl
jg
pop
sub
inc
and
arpl
xor
lods
fnstcw
add
cmp
imul
jo
imul
cmp
aad
in
push
push
xchg
in
in
push
mov
push
movl
call
dec
cwtl
lods
mov
push
flds
sbb
imul
test
xorl
sbb
dec
cltd
sbb
cmp
pop
lret
mov
repz
mov
adc
inc
inc
in
cmc
stos
fadds
xor
dec
test
push
jae
jmp
rcrb
mov
dec
cmc
insb
push
xchg
scas
jo
xchg
cmp
clc
out
sub
sub
xchg
lods
cltd
int
push
addr16
inc
sbb
jae
pop
outsb
icebp
pop
sbb
sbb
faddl
sbb
add
push
ja
pop
jo
push
dec
aaa
mov
data16
pushf
cltd
mov
and
cmp
jl
jo
btr
ja
cmc
and
xchg
lret
xor
in
mov
xchg
inc
dec
aas
adc
and
push
jmp
mov
aam
inc
lret
inc
sub
repnz
xchg
mov
call
push
aas
imul
jno
decb
daa
and
xor
cwtl
call
cmp
inc
pop
cmp
jae
dec
movsb
adcb
gs
aad
fldcw
in
insl
scas
cmp
push
push
and
ret
cltd
inc
lds
mov
adc
jne
out
dec
stc
push
pop
mov
pop
and
jecxz
add
gs
cmpsb
mov
in
call
sahf
cld
and
rcrb
ljmp
mov
mov
hlt
fbld
xchg
movsb
aas
mov
sbb
cmp
adc
xchg
in
add
and
cmp
aaa
adc
sub
sbb
mov
fs
fcompl
stc
and
mov
sbb
or
and
mov
push
fiaddl
loop
loope
jmp
push
pop
jge
int
lods
sahf
pop
jb
or
lea
sbb
test
jge
test
xor
popa
adc
mov
push
cltd
enter
adc
mov
pop
cmpsl
mov
pushf
mov
insb
pusha
xlat
pop
push
lds
sbb
add
mov
xor
jo
sub
inc
jbe
dec
pop
js
inc
daa
pop
or
cld
jge
sti
jae
push
mov
jge
cs
push
sbb
sti
xlat
ja
aas
outsl
adc
cwtl
pushl
movsl
test
jbe
mov
mov
leave
and
sub
movsb
addr16
lret
mov
add
movsl
xor
add
adc
nop
cmp
lret
sahf
xchg
loope
in
arpl
lods
xlat
jae
fnsave
sti
movsl
std
cmp
fcoms
mov
in
fwait
mov
xchg
sub
loope
int3
cmp
xor
cwtl
push
pop
mov
cltd
pushf
add
imul
cmp
dec
inc
cmp
movsb
fildl
rcrl
mov
orb
setg
cmp
ret
stos
mov
std
fiaddl
cmp
pop
inc
dec
sbb
adc
sub
xchg
or
scas
xor
in
mov
dec
cmp
xlat
hlt
insl
sub
je
cmp
add
jmp
add
in
and
xchg
sub
inc
push
es
scas
lds
jne
sbb
push
inc
cmp
movsl
push
cmpb
pop
push
mov
cmpsl
mov
cmpsb
add
and
cmpb
ret
out
adc
nop
xor
inc
les
hlt
jg
xorl
cwtl
mov
add
and
insl
rol
inc
je
mov
and
xchg
mov
and
int
imul
sbb
out
movsb
adc
add
and
jno
shl
mov
sbb
shrb
lock
push
lods
aam
daa
sub
cld
orb
mov
movsb
shll
bound
sbb
ftst
movsl
pushf
sub
jne
sbb
mov
mov
movsl
sbb
push
pop
pop
jae
jmp
cltd
stos
stc
dec
push
xor
andb
mov
or
cltd
ljmp
in
add
iret
xchg
sub
push
cwtl
xchg
and
mov
push
cmc
icebp
inc
roll
or
shr
mov
adc
adc
popf
es
call
out
mov
fsubs
add
insb
add
inc
mov
into
pop
ss
popf
push
mov
sub
inc
subl
neg
cmp
lea
xlat
or
sbb
lret
int3
in
add
std
and
scas
je
adc
mov
and
inc
addl
dec
adc
test
sti
in
jo
adc
scas
jae
and
mov
push
jae
sbbb
adc
lea
sub
jb
lea
dec
jge
lds
cwtl
mov
cmpsl
dec
mov
fwait
jge
out
mov
and
cltd
lds
in
sub
cmp
mov
jns
xchg
cmp
xchg
sbb
rorl
push
aas
aad
push
lods
js
cmc
mov
es
xchg
repnz
fadd
das
add
jno
shrl
mov
idiv
int3
mov
enter
dec
in
xor
push
push
sub
mov
sbb
pop
jnp
jl
insb
nop
cmp
dec
xlat
inc
jnp
iret
sbb
push
inc
sbb
fwait
jns
jecxz
int3
into
rolb
test
cmp
call
sbb
loopne
cmp
shll
pop
cltd
mov
and
mov
inc
adc
pop
loope
lret
and
sbb
lods
mov
mov
jne
and
nop
jnp
lret
dec
cmc
shrl
and
imul
js
lea
or
jbe
jecxz
dec
ret
mov
adc
dec
adc
push
arpl
sti
pusha
movl
add
mov
mov
out
nop
pop
fwait
mov
sbb
sbb
test
jns
lds
outsl
pushf
mov
jae
mov
dec
cmp
mov
aad
int3
pusha
push
stos
push
jb
cmp
cmp
rolb
xchg
sbb
and
lahf
mov
fcmovne
insb
sbb
xor
mov
pop
mov
mov
jnp
fwait
or
ja
loop
push
dec
ret
test
lahf
in
aam
loop
xchg
mov
aam
in
ljmp
loopne
add
mov
adc
dec
cmpsb
mov
xchg
jnp
fwait
out
je
cmp
gs
aaa
xchg
pushf
das
std
movsl
and
cmp
sbb
testb
mov
in
es
xor
movsb
daa
aaa
xor
cmp
int3
ds
sarb
mov
lcall
mulps
in
int
inc
or
jmp
adc
mov
and
cltd
xchg
lea
test
or
mov
inc
xor
adc
or
pop
add
add
lahf
jp
xorl
stos
enter
aas
push
cmovge
fs
rolb
adc
out
mov
pop
jecxz
imul
mov
pop
ljmp
cltd
insl
das
daa
lods
loope
xor
scas
cmp
rol
mov
pop
push
stc
in
out
push
cmc
xchg
movsb
movsl
mov
mov
test
push
cmpl
int
jno
mov
push
aad
sahf
inc
aam
mov
mov
aad
lock
add
fstpl
cmp
sbb
ds
sbb
fcmovbe
je
and
dec
sbb
dec
mov
shll
shl
call
push
cmp
and
shrb
outsl
inc
dec
out
push
loopne
sbb
and
push
jmp
stc
jbe
dec
jmp
and
sub
shll
or
fcoms
push
idiv
je
into
imul
push
movb
in
inc
popf
push
mov
adc
in
push
dec
xchg
jb
cwtl
ljmp
lock
push
or
cmp
mov
pop
lds
xor
aas
pop
fmuls
ss
fnsave
mov
aad
shlb
adc
mov
sbb
xor
fildl
cmp
inc
jb
es
push
and
adc
push
mov
cwtl
scas
inc
in
adc
and
clc
push
clc
mul
addb
ficoml
add
mov
mov
xor
out
je
mov
or
sub
push
gs
loope
sahf
fcoms
xor
dec
cmp
data16
in
popf
test
push
push
movsb
add
shlb
or
pop
fists
cmp
inc
stc
xor
sti
sub
jno
mov
mov
loopne
adcb
adc
lret
pop
mov
addr16
jne
push
bound
cmp
dec
lods
sbb
cltd
gs
test
and
fsubs
int
dec
aas
mov
mov
lds
cltd
mov
std
out
fmull
jne
and
mov
mov
or
push
and
inc
sbb
daa
mov
jne
jecxz
fwait
addb
sahf
mov
ficoms
adc
inc
adc
mov
arpl
mov
push
xchg
and
in
jmp
loope
and
pop
mov
adc
test
push
mov
cmpb
mov
xchg
rorb
out
xor
mov
cmpl
push
jecxz
sbb
call
add
mov
and
add
adc
xchg
inc
icebp
imul
mov
xchg
inc
loop
cmpb
inc
pop
add
inc
js
add
adc
inc
and
ss
pusha
icebp
push
inc
sub
or
and
stc
add
xchg
shll
sub
adc
inc
sbb
in
and
jae
xor
and
adc
fwait
add
mov
jmp
lods
rol
dec
jne
and
and
bound
mov
cmc
sbb
push
xchg
jecxz
ret
mov
jle
lds
or
repz
daa
test
stc
push
adc
mov
adc
add
into
inc
mov
stos
and
push
or
xchg
inc
xor
add
movsl
cmpsl
dec
xchg
jl
and
mov
cmp
gs
sub
flds
and
sub
and
daa
loope
jg
cmc
pop
add
subl
xorb
inc
mov
cmp
mov
and
stc
sub
and
xor
jecxz
es
add
push
adc
loope
and
lods
scas
mov
fnstsw
iret
pop
mov
sar
mov
addr16
dec
loopne
int
push
ss
push
and
daa
xor
stos
and
mov
ds
out
sub
data16
adc
cmpsl
jmp
in
mov
push
test
cld
in
lds
inc
sub
jb,pt
cli
xchg
and
push
mov
push
jmp
adc
sub
sbb
pusha
in
cmc
adc
std
int3
and
cld
mov
cmp
mov
outsl
mov
in
call
pop
ffreep
cmp
in
std
cs
out
sbb
lds
dec
dec
mov
or
adc
add
in
xor
add
mov
cmp
iret
fistps
rcrb
mov
pop
jne
pop
mov
cmpsl
aad
mov
loop
shlb
jns
aas
cmp
outsl
mov
pop
push
lock
jle
add
and
jge
std
or
add
mov
push
test
mov
stc
cmp
in
clc
pop
xchg
cltd
mov
cmp
push
int3
idivl
popf
popa
cmp
push
cmp
mov
mov
pop
mov
loope
test
mov
mov
lock
test
add
or
cmp
adc
roll
push
sahf
sarb
cltd
mov
int3
cmp
push
inc
inc
xchg
movsb
cmc
es
push
scas
jns
add
inc
sbb
and
add
int3
fwait
lahf
add
sub
and
xchg
mov
lds
mov
fadd
cmpsb
jmp
in
sbb
lret
cltd
fimuls
test
fldenv
ds
shrb
push
loop
stc
lret
ret
jp
daa
adc
cmp
pop
and
cmp
cmp
mov
rcr
and
xchg
or
iret
bound
jmp
push
shlb
lahf
cmp
imul
and
clc
mov
xor
inc
cmpsl
test
jp
aas
subb
mov
ljmp
pop
adc
pop
jbe
pop
icebp
add
out
sbb
cmp
mov
arpl
or
mov
pop
pop
es
orl
js
call
fisttpll
xor
mov
out
jl
xor
sbb
mov
movsb
pop
sbb
mov
push
jl
mov
cmc
dec
loope
cld
icebp
fldenv
in
lods
pusha
dec
lods
in
xor
stos
fiadds
shrl
and
clc
cmc
push
mov
movl
add
pusha
leave
jae
push
sub
leave
clc
es
mov
pop
arpl
es
cmp
ss
out
outsb
sbb
sbb
sarb
lret
jb
push
add
adc
insl
sub
movsb
jg
sbbb
xor
sbb
push
leave
adc
cmpsb
jmp
iret
adc
pop
xchg
shrl
movsb
outsl
sub
js
lahf
xchg
in
inc
pop
xchg
push
mov
lret
nop
imul
xchg
ret
out
stc
push
mov
pop
into
fldcw
mov
push
adc
sub
dec
adc
cmc
paddq
das
fiadds
adc
popa
sub
lock
push
daa
mov
add
nop
or
imul
sub
jno
icebp
cwtl
aas
push
movsl
rcll
cwtl
das
mov
ss
cmpsl
and
or
popf
daa
mov
cmp
mov
dec
scas
loop
inc
jmp
gs
inc
mov
stc
sub
cmp
dec
xchg
cltd
push
insb
inc
out
add
decb
jmp
outsl
in
sub
test
push
and
push
roll
ret
repz
aad
aas
adc
das
and
mov
sbb
mov
or
sahf
into
mov
push
ds
in
imul
mull
test
push
add
cwtl
sbb
or
and
mov
test
mov
add
das
adc
cmpsb
aaa
insl
movsl
or
scas
nop
xchg
jle
in
jne
xor
sub
lods
add
movsl
inc
xchg
mov
in
jae
xchg
cwtl
pop
ficomps
shll
ds
std
adc
jns
aaa
pop
pop
mov
sbb
jmp
xlat
outsl
movsl
nop
testl
cmp
in
add
xchg
ja
or
mov
imulb
gs
data16
mov
push
mov
mov
or
testb
movsl
out
jae
fcompp
lods
bound
cltd
daa
stc
ret
sahf
int
gs
jnp
cltd
xor
jp
lahf
pushf
mov
enter
lds
pop
dec
jp
dec
xchg
inc
aaa
insl
dec
adc
lock
and
jmp
loopne
cmp
imul
cmp
rcrb
sbb
or
cvtps2pd
vmovhps
loop
mov
sbb
movsl
sbb
cwtl
inc
loope
dec
sub
rcrb
movsl
pop
push
pop
popf
mov
cmp
cli
movsl
mov
mov
cmpsl
emms
add
fucomip
mov
and
test
addr16
lock
and
adc
xor
cmp
jae
out
mov
loope
inc
insb
cmp
adc
data16
pop
scas
push
movsb
dec
adc
mov
cmc
dec
aam
icebp
stc
jp
retw
mov
into
sub
add
rol
clc
in
rcrl
leave
jle
ja
clc
mov
mov
scas
ret
movsb
adc
icebp
mov
push
test
cmp
icebp
test
rcrl
xchg
ja
cli
fcomi
ljmp
insb
andps
or
jmp
xchg
ret
mov
aaa
push
cltd
and
inc
int3
divb
into
clc
pop
rcl
out
shll
icebp
mov
repz
in
pop
sub
leave
ja
dec
jne
fs
mov
pop
and
xchg
inc
mov
inc
flds
pop
mov
pusha
jle
jl
aam
mov
cmp
sub
inc
mov
data16
gs
inc
bound
aaa
outsb
aaa
mov
das
push
push
push
pop
std
mov
mov
test
cmc
inc
fnstsw
mov
and
sahf
stos
inc
inc
movsl
xchg
cmpsl
or
and
add
mov
mov
xor
cmpsb
mov
pop
fnstcw
in
mov
sbb
mov
test
push
aad
dec
and
xchg
xorl
mov
sub
cltd
lea
lds
and
inc
scas
bound
jle
fprem
ja
mov
jno
shlb
xor
mov
mov
sub
shl
stos
pop
ror
call
fildl
call
and
scas
aad
aad
push
dec
mov
cmp
pop
mov
loope
add
pop
scas
xor
rcl
dec
outsl
or
pushf
repz
mov
lahf
push
sbb
mov
adc
pop
sarb
and
shr
sub
add
sbb
mov
lldt
mov
jl
sbb
mov
sub
sbb
out
fadd
sahf
imul
cmp
leave
mov
cmp
jecxz
in
rcll
or
stc
popf
and
add
and
or
cmpsb
outsb
dec
fs
dec
inc
cmp
fcmovbe
daa
out
mov
fsubr
jbe
je
daa
pop
fbstp
and
hlt
and
pop
mov
inc
cltd
jmp
cmp
call
sti
out
add
xchg
adc
ret
pop
jae
popf
mov
pop
and
lods
and
add
shll
xor
or
sbb
bound
mov
test
pushf
inc
aaa
push
ds
mov
sahf
ds
xorb
jge
sub
add
push
pop
in
std
cmpsl
xor
add
cs
test
outsl
and
mov
mov
daa
shlb
xorl
add
int
rcrb
sub
mov
mov
int3
push
cwtl
xor
adc
std
jl
or
adc
inc
movsb
mov
shr
jo
xor
inc
cs
sub
adc
fwait
in
int3
xor
imul
gs
mov
inc
push
into
cmp
mov
in
push
xchg
and
sub
mov
jmp
mov
adc
sub
push
push
and
mov
je
push
pop
pusha
shll
shlb
cwtl
mov
xchg
arpl
and
jmp
nop
int3
int3
sub
adc
cmp
inc
insl
jge
pop
lods
sub
add
jmp
sub
scas
pop
out
cmp
dec
jmp
movhlps
mov
add
sbb
mov
mov
stc
sbb
leave
pop
xchg
add
and
rol
sbb
inc
iret
cmp
sbb
icebp
add
inc
rcl
cwtl
movsb
icebp
les
in
adc
mov
push
xchg
test
repz
mov
rorb
jno
aad
ret
popa
or
inc
popf
sbb
sub
insl
in
lahf
mov
rclb
adc
shr
std
mov
dec
inc
hlt
sbb
sbb
pop
mov
int3
imul
and
mov
fwait
inc
jne
je
aaa
jae
es
ljmp
push
pushf
mov
movb
or
adc
shrb
xor
lcall
push
push
insb
inc
cwtl
std
loope
jae
jo
and
je
adc
ja
add
xor
cltd
cmpb
mov
cmp
in
inc
cltd
push
ror
gs
sarl
leave
or
in
data16
ss
int3
shl
sub
lds
push
lahf
xchg
cmc
pop
stos
xor
cmp
lea
gs
push
dec
xor
xor
xchg
loop
adc
mov
jne
divl
mov
inc
cmpsb
pop
in
dec
mov
outsl
push
mov
mov
cs
imul
enter
ds
fsubl
ja
lock
push
and
stc
dec
adc
into
repz
imul
pusha
adc
add
fnstenv
xor
in
push
jne
mov
cmc
mov
pop
fs
clc
movsl
dec
dec
jno
cmp
pop
fmull
and
fadd
aas
inc
sbb
mov
xor
pop
inc
cmc
adc
insb
ja
mov
add
test
ss
sbb
fadds
cmp
pop
xchg
mov
test
movsl
paddd
push
lds
xchg
mov
xor
pop
sarl
es
ret
movsl
shlb
in
xorl
and
das
push
aaa
dec
pop
inc
sbb
cmp
push
sbb
divb
aad
inc
in
mov
adc
push
es
and
pop
xchg
pop
in
mov
repz
mov
mov
imull
jne
je
in
mov
xchg
push
incl
dec
in
scas
xchg
rolb
outsl
jge
pop
inc
and
int3
inc
jmp
mov
xorb
push
add
lret
and
je
dec
test
dec
outsb
add
dec
mov
cmp
adc
es
idivb
movsb
cld
popf
aam
cmp
push
mov
not
popf
and
dec
pop
insl
ds
or
cltd
lea
pop
lea
jno
mov
daa
mov
dec
xchg
popl
movsb
mov
dec
mov
dec
inc
out
ja
in
movsb
xor
ja
loope
and
adc
fsubr
jne
push
jle
cmp
lock
add
and
sbb
or
inc
fidivrl
pop
sub
add
dec
push
xor
out
mov
xor
sti
dec
in
cwtl
pop
dec
xor
sub
pop
mov
fstpt
gs
arpl
jae
add
fwait
pop
jl
call
sti
rcr
cld
dec
imul
cmc
test
dec
fisttpl
dec
mov
aaa
mov
xor
add
in
call
sahf
aas
adc
pop
int3
xchg
and
sbb
lock
out
inc
mov
fwait
xchg
jmp
es
sub
fwait
js
xchg
jne
insb
out
add
and
loopne
sbbb
sub
imul
or
call
loop
inc
data16
cmp
mov
pop
push
inc
hlt
insl
jge
sub
push
jmp
cltd
sub
xor
sub
push
fistl
and
mov
mov
cmp
sub
daa
pop
int3
cmp
aad
cmp
int3
adc
and
loopne
and
ja
mov
rcl
enter
and
outsb
lret
inc
cmp
aad
cltd
jns
and
and
xor
mov
outsl
cmp
std
sub
cmpsl
xor
movsl
aam
push
clc
xchg
test
dec
mov
mov
cmp
or
jg
mov
cmp
int3
mov
enter
pop
xor
daa
divl
je
out
gs
pop
loope
mov
dec
out
sub
testb
sub
mov
or
clc
xchg
cmpsb
and
jmp
mov
popa
icebp
subl
lock
mov
sub
cwtl
clc
pushl
adc
cmp
jae
and
mov
or
movsl
ds
sbb
outsb
pop
aam
dec
push
pop
iret
loope
adc
mov
xor
and
shl
mov
inc
push
aam
cmp
push
and
loope
jns
and
xor
cmp
in
jns
daa
jo
pop
scas
in
dec
mov
pop
rdtsc
cld
cltd
or
mov
jmp
and
fcoms
or
enter
sti
insl
das
xchg
clc
loop
push
test
sub
ss
push
xchg
iret
and
fmul
add
ret
dec
mov
stos
xor
pop
mov
xchg
pop
es
xor
sub
stc
leave
lea
jo
clc
or
or
mov
mov
mov
in
mov
jne
pop
inc
aad
sbb
pushf
pusha
data16
push
xor
out
jae
ret
ret
xor
sub
sub
or
fsubrp
push
jae
jbe
or
int
cmc
xor
addr16
add
data16
mov
jge
push
sub
mov
sub
push
pop
loopne
mov
ja
sti
mov
fiadds
jb
in
sbb
ret
cmp
and
jle
clc
outsl
mov
je
sbbb
ror
movsl
les
std
add
ret
cmp
sbb
push
add
and
fstl
pop
push
inc
lods
cwtl
cmp
dec
jbe
push
xor
xchg
negl
loopne
aaa
inc
cmp
mov
sbb
repz
pop
rclb
jae
aam
inc
in
inc
xor
and
into
fdivs
jmp
popf
or
daa
xor
xor
lcall
jle
mov
test
pop
sub
aas
pop
aas
pop
cs
jl
push
add
in
sbb
inc
bound
push
xchg
out
ret
pop
sbb
pop
xor
xorl
sub
aaa
cmp
and
icebp
adc
shrl
cmovne
sub
aaa
cli
ja
push
out
dec
and
sbb
mov
xchg
mov
jge
pop
gs
inc
movsl
and
mov
add
inc
ror
aaa
pop
adc
cmp
cltd
call
mov
mov
and
cmp
cltd
cmpsl
fcompl
pop
jg
les
dec
sbb
xor
sbb
push
and
fucom
push
out
shll
sub
add
xor
fbstp
sbb
pop
and
es
nop
mov
dec
stc
lcall
js
cmpsl
hlt
xchg
out
inc
shll
inc
aad
jg
jl
adc
mov
rcrl
push
adc
movsl
and
shll
adc
cmpsb
sahf
cmp
fistpll
sub
mov
lahf
jg
push
and
lods
cs
sbb
popa
cmp
cld
mov
fwait
lahf
xor
shr
or
inc
in
xchg
sub
push
dec
dec
stos
xlat
sti
xlat
add
scas
sub
push
es
or
and
cli
lock
addb
std
outsl
movsb
lcall
sub
and
add
shlb
sub
inc
push
fxch
mov
mov
cwtl
fldl
lds
push
aad
push
add
out
jmp
dec
lods
enter
and
nop
or
xor
arpl
iret
enter
cmp
divl
xor
pusha
jl
pushf
hlt
add
xor
jae
or
out
mov
sub
icebp
mov
or
lods
jmp
adc
or
hlt
dec
das
add
mov
fsubs
test
lea
add
leave
inc
jae
pop
mov
fs
xor
out
xchg
sbb
iret
add
ja
fstps
jl
adc
mov
mov
cmp
icebp
or
adcb
aaa
loop
filds
sbb
cwtl
rorb
cmpsb
gs
fdivl
cmp
aad
rcrl
pop
inc
popa
rorb
sub
mov
leave
pop
enter
xor
in
data16
loop
ficoms
push
cmc
iret
adc
cmp
dec
dec
pop
sarl
add
leave
jmp
mov
je
mov
jl
fs
in
aam
push
out
imull
inc
pop
aaa
aaa
xchg
lret
loop
xchg
pop
loopne
and
add
dec
shll
icebp
adc
je
mov
pop
loop
jge
repnz
cld
enter
ja
and
in
mov
popa
mov
bound
or
or
dec
jbe
das
fcomp
mov
jge
jne
sub
fmuls
or
ret
popa
loope
mov
mov
into
mov
ja
and
cli
mov
sbb
mov
mov
sbb
xor
adc
not
sbb
test
cli
push
insl
inc
push
mov
fcoms
out
gs
rol
sub
or
in
xor
sub
cs
push
dec
jp
enter
sbb
push
mov
xor
test
cltd
cmp
xchg
pushf
pop
ds
pushl
adcb
inc
jmp
orl
lahf
std
cmc
sub
and
sbb
pop
inc
push
lcall
fcmovnbe
lea
std
out
cmp
mov
mov
std
mov
movsl
dec
movsb
ret
scas
adc
insl
sub
cmp
pushf
adc
enter
dec
movsb
pop
sbb
pusha
enter
icebp
int
cmp
leave
ja
mov
jno
mov
pushw
xor
or
es
lods
stc
inc
out
mov
add
in
lods
cld
sub
lret
and
add
or
mov
and
test
les
jmp
cmp
sahf
mov
call
or
sbb
mov
sub
lods
xchg
jns
cmp
lahf
or
sub
xor
dec
and
enter
jns
lods
inc
inc
pmulhw
mov
inc
or
int
and
mov
movsb
pop
into
sbb
roll
push
sub
cmp
fstps
insl
imul
add
xor
iret
loope
xchg
adc
xlat
mov
xor
cmc
sbb
add
test
out
cmpsl
testl
xor
push
mov
jae
dec
ret
in
sbb
pop
cltd
jno
pop
pop
call
push
and
mov
cmp
inc
lahf
out
pusha
fiadds
pop
push
adc
scas
sub
sub
adc
inc
dec
rclb
pusha
xchg
inc
inc
jae
lahf
jecxz
mul
icebp
cmpb
jns
adc
fs
mov
mov
mov
inc
xor
shr
pusha
mov
xchg
call
lret
out
cmpsl
mov
mov
std
je
inc
push
cmp
push
adc
repnz
jge
fcoml
daa
mov
lds
fiadds
mov
sbb
mul
inc
xor
mov
mov
sub
in
fidivl
pusha
push
xchg
sub
and
inc
mov
pop
jne
xor
lods
jmp
aas
pop
popa
and
pushf
push
add
xchg
stos
mov
in
aad
fwait
add
adc
ret
pop
std
sbb
in
mov
inc
lahf
ds
adc
dec
fdivrs
int3
call
adc
mov
and
sub
ja
push
sub
lods
cmp
popa
cmp
dec
pop
jmp
mov
nop
jno
popa
ret
sbb
scas
stos
in
in
adc
pop
pop
std
sub
mov
daa
and
xor
shlb
mov
dec
lret
and
xor
shlb
jmp
sbb
add
test
dec
mov
test
test
das
mov
inc
lods
repnz
dec
adc
lock
pop
xor
loope
and
cmp
mov
in
push
inc
push
push
sbbb
call
dec
movsb
daa
and
lock
cli
je
repz
inc
in
inc
mov
pop
inc
daa
clc
push
xchg
loop
pusha
adc
lea
rcll
scas
inc
push
push
sbb
and
jle
mov
and
clc
push
inc
js
add
mov
inc
fsub
add
mov
orb
mov
or
pop
roll
pop
jge
jns
add
adc
scas
inc
xchg
insl
inc
cmp
outsl
loopne
leave
pop
xchg
add
xor
mov
jle
and
in
sbb
add
je
cli
add
cmpsb
inc
or
jmp
shll
xor
and
xor
stos
and
mov
push
xchg
jo
lret
add
inc
in
mov
inc
add
dec
test
inc
add
cltd
popa
sbb
or
inc
mov
movsl
sub
das
addr16
sbbl
roll
repz
and
lods
mov
out
xor
sub
mov
sub
mov
and
pop
and
cmp
es
sets
mov
pop
movsb
rorb
test
xor
mov
mov
in
add
loope
jecxz
adc
push
movsl
es
mov
add
pop
test
loopne
test
jmp
mov
outsb
and
std
dec
es
jge
pushl
and
int3
js
ljmp
xchg
aaa
mov
xor
mov
and
outsl
inc
ds
jns
std
adc
and
pop
bsr
in
and
pop
pop
cmp
xor
and
shl
and
out
sub
popf
or
fs
adc
lahf
mov
cs
and
cmp
adc
and
and
cmp
dec
jnp
xchg
movsl
mov
mov
jecxz
and
and
and
and
push
clc
movsb
cmp
cli
repnz
lock
std
xor
sarl
jecxz
arpl
and
arpl
imul
rol
sub
and
andl
lods
roll
xchg
and
stc
and
add
in
ds
mov
push
add
aas
fsub
xchg
inc
and
inc
fisttps
add
pop
arpl
add
mov
add
stc
and
push
arpl
and
xor
scas
out
out
inc
jp
jo
add
add
stc
mov
xchg
test
add
inc
test
cmpsl
int
stos
and
push
rcl
addr16
int
test
movsl
popa
std
sbb
add
lret
loopne
andl
in
in
pop
push
shl
in
mov
movsb
imul
jno
out
fs
and
pop
adc
sarb
mov
xchg
cmp
shrl
arpl
jmp
and
aad
inc
ja
mov
add
jne
push
cmp
fs
test
in
and
xlat
inc
call
loope
fldenv
andl
rclb
jb
xor
ret
daa
and
lods
xor
push
lods
push
andl
and
lods
outsb
lds
mov
andb
push
add
adc
js
es
js
mov
push
js
and
and
test
inc
and
push
inc
xor
and
bound
scas
xorb
shl
andb
jecxz
mov
and
loope
subb
subl
jecxz
bound
mov
xor
and
and
mov
xor
loopne
dec
jecxz
fsub
shl
xchg
xor
mov
pushf
leave
lds
out
mov
dec
push
jne
testb
mov
mov
sub
jge
nop
inc
lods
fstpl
push
movsb
test
ret
xor
out
and
scas
cmp
pop
lcall
cmp
mov
in
or
ret
or
mov
out
adc
stc
scas
fwait
shll
xor
addr16
or
cmp
add
in
movsl
or
dec
and
dec
lods
insl
out
fsts
test
and
inc
dec
xchg
jnp
addr16
ret
sbb
adc
dec
shll
sbb
pop
jns
push
push
lret
notb
push
scas
ja
inc
cwtl
outsl
jp
push
icebp
cmc
ror
scas
sbb
and
and
leave
xor
inc
ljmp
push
jl
dec
movsl
sahf
pop
add
mov
stc
int3
pop
pop
addr16
dec
mov
xor
pop
lcall
lahf
mov
sub
cmpsl
mov
in
scas
icebp
int3
in
push
cmpsl
dec
mov
xchg
add
pop
xchg
in
sbb
xchg
movsb
cmpl
std
int3
cmp
add
movsl
pushf
dec
add
insb
faddl
movl
push
cmp
push
roll
and
in
cmpsl
das
roll
hlt
in
in
in
gs
add
andb
jno
xor
xchg
in
mov
movsb
and
int
icebp
movsb
mov
and
aaa
movsl
jge
sbb
push
or
xchg
movsb
push
mov
add
shll
add
sub
das
cmp
jne
test
inc
lock
call
je
cmpsl
pusha
push
add
or
ret
push
mov
jo
rol
cmp
push
jp
add
add
mov
dec
in
fwait
or
andl
stc
cltd
lcall
sbb
lock
cmp
add
xchg
mov
cmp
gs
and
add
jl
stc
call
mov
fldenv
mov
test
loope
and
mul
ficompl
mov
sbb
cwtl
xchg
call
lahf
inc
notb
and
imul
sti
clc
out
int
cmp
add
and
sbb
in
jnp
test
inc
sub
js
mov
dec
rorl
rolb
push
movsb
iret
addr16
jmp
fmul
pop
sahf
lret
cli
lds
cmp
cmpsl
sar
and
jg
pop
adc
dec
mov
xor
sub
cmp
dec
stos
loope
daa
std
in
jae
jl
in
cs
popa
lods
jae
clc
cmpsl
gs
outsl
and
dec
pop
and
fbstp
stc
cmp
xor
por
sbb
sub
sbb
sub
push
sbb
and
adc
inc
or
andb
and
cmp
test
ret
pop
ret
mov
stc
cmp
fdivrs
jmp
pop
int
out
push
movsl
bound
fsin
mov
roll
jp
or
add
inc
in
roll
cmp
mov
aad
in
inc
xor
pop
sub
inc
dec
inc
push
imul
mov
add
mov
adc
popa
mov
int3
pop
mov
mov
fsubl
jecxz
or
movsb
cmp
sub
push
pop
or
mov
nop
push
in
and
enter
lcall
idiv
dec
xor
int
dec
mov
into
aam
mov
pop
or
out
mov
lods
pop
clc
aaa
icebp
shl
inc
lahf
fstpl
xor
hlt
rclb
mov
push
fwait
mov
add
je
clc
pusha
int
les
adcb
or
adc
lret
mov
or
pop
xor
inc
pop
cld
jb
ds
mov
pop
and
add
cmc
add
jmp
sub
lds
push
sbb
lock
and
inc
aaa
scas
mov
out
sub
addr16
loope
mov
pushf
xor
js
shr
in
loopne
pusha
inc
add
shlb
int3
dec
inc
mov
xchg
int3
aam
in
in
test
insb
add
sbb
imul
dec
dec
cmp
and
add
add
sbb
mov
mov
mov
sub
daa
aad
lret
adc
or
dec
test
add
add
cmc
push
and
add
std
daa
movsb
loopne
add
sbb
jp
sbb
and
out
inc
mov
fcomps
push
ror
and
and
enter
aas
fmul
pop
pop
xchg
dec
mov
and
sar
outsl
push
lahf
jp
enter
mov
push
rorb
sbb
enter
mov
inc
and
mov
add
sub
mov
out
fsubl
push
cld
gs
ljmp
hlt
fwait
xor
cld
mov
int3
and
push
jl
xchg
gs
or
insl
andb
adc
sub
adc
jno
mov
adc
push
mov
iret
stos
add
lret
dec
shrb
xor
outsb
popa
int3
movsl
outsl
pop
pop
cld
jmp
and
popf
mov
inc
jecxz
jb
test
mov
shrl
sub
ja
jb
cmp
push
mov
add
fldcw
sbb
jmp
int
cmp
test
push
loopne
je
cmp
and
xchg
pop
dec
btr
and
dec
insb
andb
fcoml
mov
ja
inc
or
cmp
std
movsl
iret
xchg
outsl
ret
aad
xor
lret
inc
lahf
pop
dec
stc
test
mov
sub
in
mov
mov
mov
hlt
enter
sbb
iret
into
sbb
adc
aaa
sub
hlt
sub
fcomps
mov
sbb
inc
repnz
sbb
jne
cmp
or
sbb
xchg
adc
test
mov
in
cmp
movsl
and
push
nop
jl
adc
sarb
fs
inc
dec
jo
ret
mov
inc
das
test
inc
imul
pop
imul
jno
inc
jecxz
mov
adc
push
outsl
aaa
shlb
popf
cmp
mov
add
jp
mov
push
xor
shlb
mov
pop
and
call
jle
push
cli
outsl
cmc
movsb
lahf
test
add
lahf
nop
mov
into
mov
xchg
call
int3
out
mov
and
xlat
in
jno
and
icebp
xchg
lods
shrl
mull
xor
pop
sbb
dec
mov
movsl
mov
ja
pop
daa
and
shrd
rcrl
sbb
inc
adc
jae
pop
ds
clc
aaa
aad
sti
leave
mov
xchg
dec
pusha
and
sbb
sarb
je
jmp
push
mov
jecxz
fs
mov
xchg
cld
jle
xor
gs
and
rcl
sbb
pop
mov
movsb
movsl
nop
adc
jge
fmull
imul
sti
xchg
lds
sbb
push
add
fstpl
scas
adc
lcall
js
shlb
mov
call
scas
fsubs
push
and
stos
aas
jns
lods
les
push
dec
cs
loop
inc
gs
and
inc
mov
add
fcompl
incl
enter
sbbl
pop
push
or
add
adc
or
cmpsl
lds
mov
dec
ss
xlat
lds
pop
mov
jne
test
mov
cmp
repnz
sub
push
es
mov
pop
jb
pop
pusha
stos
movsl
adc
mov
mov
mov
cmp
enter
fdivl
std
and
inc
fs
or
cmpsb
pop
cmp
insb
add
add
outsb
je
and
cld
adc
loopne
mov
clc
xchg
mov
xor
pop
inc
mov
inc
loopne
iret
sbb
add
inc
cmc
pop
and
mov
pop
test
add
mov
ss
test
sub
inc
inc
and
gs
in
orb
cmp
mov
xor
or
idiv
xor
fs
pop
mov
sbb
hlt
mov
mov
dec
mov
dec
mov
lds
nop
shlb
mov
js
jno
lds
scas
mov
loope
adc
cmc
sub
data16
jno
adc
and
int
icebp
sbb
cmp
mov
pop
sbb
jb
pop
pop
ret
dec
cmc
adc
jbe
xor
std
idivb
popf
sti
ja
cs
lret
sub
and
testl
stc
mov
add
add
push
and
insb
add
or
stos
in
and
xor
dec
mov
scas
std
int3
lea
cmp
and
mov
mov
cmp
movb
ret
cmc
mov
push
out
int3
sub
mov
mov
xor
xor
add
cmp
pop
push
cmp
cmp
cmp
cmp
test
out
or
or
movsb
push
or
js
push
movsb
es
push
data16
movl
aam
push
movsl
xor
inc
adc
cmp
pop
loop
jnp
test
out
loopne
cld
into
std
lods
cmp
jno
cmp
xchg
inc
push
and
and
cmp
inc
sti
jecxz
loop
popw
movb
lds
pop
xor
pop
xor
pop
callw
pop
mov
cmp
dec
fs
xor
mov
int
push
add
inc
sbb
inc
push
jmp
int3
cmp
xor
cmp
inc
and
int3
or
push
cwtl
hlt
sbb
mov
xchg
pop
cmp
shrb
cmp
push
mov
imul
and
dec
es
stc
mov
mov
in
std
lds
add
sub
outsl
mov
cmp
enter
and
lea
movsl
mov
and
loop
sti
clc
mov
popa
add
jg
mov
les
sub
xchg
mov
loope
cmpsl
and
test
inc
push
lods
dec
cmpsb
ficoms
dec
pop
stos
into
int3
lds
cmp
inc
and
lock
mov
push
mov
sbb
aad
add
pop
mov
mov
shr
add
sbb
or
sbb
add
xor
dec
mov
lahf
ss
in
xchg
push
testb
cmp
pop
pop
lcall
ja
movsl
jmp
mov
pop
mov
cmp
aad
js
sbbb
add
movsl
or
jge
jae
mov
gs
outsl
mov
jns
cmp
addr16
movsb
lds
jns
and
lock
mov
enter
ret
mov
cltd
push
mov
call
ljmp
mov
and
cld
sub
jp
jmp
fisttpl
stc
pop
ret
xor
push
sbb
inc
lods
pop
mov
daa
dec
xor
popa
and
mov
and
pop
push
sahf
ljmp
in
and
pop
pop
pop
jmp
add
adc
cmp
and
dec
xor
jnp
das
sbb
or
pusha
enter
mov
push
lcall
xlat
mov
pop
call
xor
shrl
repnz
inc
sbb
cmp
add
sub
push
sbb
adc
aad
xchg
mov
or
push
mov
cs
in
xorl
cmpsl
xchg
mov
dec
push
out
les
rorb
lcall
dec
dec
and
data16
jne
ja
cmp
aad
sbb
push
add
or
push
adc
push
xor
add
stc
in
add
dec
out
in
cli
inc
push
push
jle
push
ja
inc
add
xor
sub
cs
inc
jp
daa
scas
push
or
mov
and
ja
loop
addr16
out
into
popa
movsl
lret
push
testb
mov
fwait
jge
jl
inc
rcll
cli
mov
dec
xchg
fs
ficoml
mov
nop
out
lods
inc
mov
pop
popf
dec
lock
scas
cmpsb
dec
mov
bound
or
clc
js
es
dec
mov
repnz
push
sbb
je
inc
mov
add
hlt
loope
cmp
jecxz
add
jnp
sbb
inc
call
sarl
push
es
sbb
aas
ja
out
shlb
pop
loopne
jge
int3
cltd
adc
daa
call
mov
std
inc
jno
push
ds
push
sub
imul
int
outsl
rcrl
jae
call
aaa
xchg
xchg
mov
out
data16
cwtl
test
add
lahf
cmp
repnz
sbb
aam
adc
loope
cld
in
add
jl
xor
jno
cmp
inc
push
sbb
aaa
adc
je
test
dec
jecxz
imul
cmpl
mov
jne
add
hlt
adc
jno
sub
mov
cli
jmp
xorb
lock
push
jbe
add
rcr
and
loope
push
mov
and
mov
notl
push
cltd
or
sub
les
sub
sbb
es
mov
mov
frstor
inc
inc
xchg
sarl
lds
test
add
lods
sub
lret
and
push
adc
and
ss
mov
xchg
adc
orl
sbb
xor
out
inc
lcall
and
rol
and
inc
cli
xchg
and
test
clc
add
and
xchg
jl
pusha
and
into
test
xor
std
add
leave
or
test
xchg
cmp
mov
in
in
xchg
call
dec
andb
and
shrl
lcall
cmp
add
and
pop
imul
and
mov
or
inc
mov
dec
sbb
jge
add
add
add
pop
orb
test
add
jle
scas
test
and
imul
leave
inc
loope
push
test
jl
rol
pushfw
and
push
push
nop
or
aam
xor
adc
xchg
adc
out
add
lret
xor
push
xor
push
add
data16
call
ffreep
adc
mov
inc
dec
sbb
call
dec
lds
rcl
and
shl
and
icebp
and
and
add
test
rolb
or
test
and
ficoml
rcrb
mov
mov
push
inc
xchg
fs
cmp
sub
xor
and
ret
aaa
sbb
sub
sbb
jge
ret
xorb
adc
or
inc
and
scas
jmp
out
xchg
cld
push
add
mov
test
cmpsl
dec
scas
daa
adc
mov
pop
scas
gs
xchg
jp
test
sbb
xor
jne
cmpsb
push
sbb
daa
mov
mov
add
movsb
in
xchg
lahf
dec
inc
call
and
icebp
jmp
insl
arpl
aam
cmc
push
movsl
push
pop
xchg
ficoml
mov
mov
scas
xchg
pop
mov
rol
outsl
sbb
out
xchg
pusha
leave
cmpsl
and
or
cmc
push
aas
jne
test
movsb
pop
popf
movsl
jne
fwait
cmc
lods
mov
push
pop
sbb
cmc
jne
push
shll
mov
shll
add
ret
aaa
mov
aad
repz
popa
popa
and
and
sahf
and
push
pop
frstor
stos
add
mov
mov
arpl
in
sbbb
inc
xor
movsb
xchg
cmp
ret
and
in
leave
movsl
outsl
sub
xchg
ja
pop
or
in
in
fwait
inc
push
pop
mov
push
sbb
push
enter
xor
insb
jle
sub
push
out
pop
out
pop
xchg
ss
insb
mov
mov
imul
add
push
in
xchg
adc
push
mov
cmp
cmpsb
mov
xor
aaa
inc
out
push
pop
add
lock
frstor
xchg
das
ja
pop
repz
daa
xor
lahf
xchg
mov
in
inc
out
xor
loop
sbb
fnstsw
lods
lahf
or
ret
dec
mov
cld
xchg
lahf
inc
mov
mov
xchg
pop
pop
mov
loope
pop
jecxz
outsb
xchg
cmpsl
sub
jge
jns
xchg
add
nop
das
xchg
addr16
nop
sbb
in
pusha
in
add
ret
and
add
add
add
sbb
pop
es
jae
push
repz
in
test
cmp
in
ja
ja
pop
sbb
or
clc
sarl
ss
movsl
nop
mov
inc
test
pop
inc
pushaw
jl
cmp
ss
das
mov
loope
adc
cmpsb
jnp
inc
jbe
sub
sbb
cwtl
xor
pusha
jmp
push
jp
cwtl
sbb
push
and
inc
mov
cwtl
mov
lods
mov
inc
add
lds
cmpsb
sahf
clc
jmp
insb
out
jae
adc
push
or
pop
cmpsb
or
ja
sbb
inc
or
sub
popa
cmp
inc
out
jmp
adcl
mov
cmp
cmp
mov
je
testb
cmp
call
std
test
jne
inc
ret
sahf
cwtl
xchg
pop
in
inc
mov
inc
adc
xor
in
je
xor
dec
and
and
mov
enter
xor
mov
pop
mov
mov
adc
nop
add
gs
stos
push
les
add
lahf
dec
aaa
ja
sbb
inc
jno
mov
push
inc
jb
inc
mov
sbb
hlt
gs
fsubr
mov
repz
mov
out
adc
lea
and
inc
mov
movsl
sahf
ljmp
xchg
add
pop
push
adc
fisubl
sub
push
ja
sbb
mov
insb
lcall
mov
gs
dec
daa
adc
lds
cltd
push
insl
dec
pop
xor
mov
lahf
fdivl
out
sbb
fiaddl
lds
sub
lods
xchg
xchg
pop
aam
sbb
add
icebp
std
inc
inc
scas
popa
mov
fdivrs
sbb
lcall
scas
lock
mov
mov
dec
sub
jo
add
mov
test
and
pop
dec
gs
aas
push
push
dec
xor
mov
push
dec
clc
ss
in
insb
aaa
cmc
int3
in
xchg
clc
and
clc
add
mov
aad
cmp
pop
push
int3
pop
add
pop
mov
push
ficompl
xlat
push
inc
pop
cmp
jae
mov
mov
xchg
sub
jo
out
mov
cld
push
add
jae
cwtl
ror
rcr
adc
xor
sub
sbb
sub
cmpsl
mov
es
mov
andl
ficompl
push
dec
push
cwtl
call
inc
or
out
imul
mov
and
popf
jbe
sub
mov
cmp
cmp
mov
stc
movsl
cli
mov
call
adc
and
dec
test
leave
fcomps
or
add
aaa
or
push
sub
add
lds
out
pop
out
push
jmp
mov
and
add
cmp
pop
cmp
push
push
ja
imul
and
test
lds
hlt
std
jl
mov
mov
movsb
mov
jnp
repnz
mov
je
jae
jae
pop
jbe
xchg
inc
fnstcw
dec
fs
in
adc
jno
lea
call
jae
sbb
sbb
pop
dec
or
inc
cmp
xchg
add
scas
push
lret
push
mov
and
idivb
or
inc
dec
fsubl
cmp
fbld
movsb
dec
pushf
aas
sbb
lock
cwtl
add
in
arpl
aad
push
push
cmp
xor
neg
add
es
test
inc
fs
push
push
cmp
xlat
movsl
cli
std
cmp
vpcmpeqw
gs
js
cmp
frstor
pop
add
mov
cmpsb
shlb
add
cltd
and
push
xor
adc
ja
jae
movsb
movsb
aam
sbb
fdivrs
push
je
jmp
std
call
cmp
popf
push
ljmp
fstps
xchg
xor
and
stos
in
sub
xor
cld
fdivrs
sub
mov
mov
cli
jmp
adc
adc
dec
scas
push
sub
cmp
outsl
mov
sub
mov
add
test
xchg
out
and
or
xchg
int3
fbstp
xor
cmp
movsl
xor
cmp
or
mov
sarb
ja
fnstcw
or
inc
divl
mov
icebp
sar
sti
and
sbb
fs
sbb
xor
push
mov
js
jp
add
add
pop
cmp
cmpsl
outsl
cmp
add
inc
cmp
addr16
push
lods
xchg
icebp
xlat
das
ja
pushf
ret
cli
mov
movsl
je
out
loopne
stc
cmpsl
lods
cmp
cmpsl
cs
daa
dec
leave
stos
in
cmpsl
das
and
mov
in
mov
adc
cmp
pop
sub
xchg
xchg
mov
pop
mov
cltd
push
sti
stc
or
pop
sub
adc
jecxz
in
lock
mov
out
xor
and
mov
dec
loopne
mov
daa
icebp
test
aad
pop
push
lea
div
cmc
add
sub
pop
das
cmc
fnsave
sub
ret
and
test
xor
inc
daa
pop
and
xor
pop
cmc
push
push
mov
mov
int3
je
push
pop
fwait
push
movsb
xchg
sbb
sbb
pop
mov
cmp
adc
call
cmp
fdiv
cmp
dec
shlb
shlb
lods
dec
jae
inc
rcrl
sub
je
sbb
lcall
daa
lahf
pop
loopne
sbb
cwtl
stc
push
and
test
and
sub
jle
xchg
mov
jbe
stos
mov
mov
je
pop
mov
fsubl
cmc
imul
cmp
in
mov
out
adc
ja
inc
in
mov
movsl
or
mov
divl
sbb
and
rclb
fcoml
and
cmp
fdivl
test
jbe
lret
sub
push
add
dec
cmpsb
sbb
mulb
lds
test
xchg
jmp
stos
mov
mov
mov
sbb
scas
icebp
hlt
adc
xor
mov
xchg
or
fs
cli
std
inc
dec
rorb
pop
hlt
mov
insl
push
mov
cmp
test
cmc
aam
ljmp
sbb
push
stos
shlb
lahf
cmp
push
rorl
cmp
push
shrb
inc
je
shrl
cmp
or
jp
add
bound
lock
or
xchg
sbb
and
cmp
js
adcl
bound
cmp
adc
mov
inc
lods
jae
into
xadd
imul
sub
inc
mov
mov
ds
sarb
push
xchg
jno
xor
pop
lret
ja
mov
hlt
xchg
in
notb
add
lods
out
in
cmpsb
insl
cmp
out
lods
cmpsb
and
fyl2x
sbb
std
and
cs
mov
rclb
call
out
lcall
rcl
mov
gs
lds
icebp
ret
ret
xor
mov
push
and
mov
arpl
mov
jno
sbb
sti
or
push
loop
xor
scas
xchg
jae
test
lods
loopne
ja
adc
mov
inc
rcl
arpl
ret
xor
popa
lret
pop
loopne
sub
mov
stc
inc
lcall
ret
adc
push
or
or
fnstcw
sub
xchg
ficoms
sbb
fcomps
in
js
insb
inc
adcb
rcll
fildl
movsl
xchg
dec
jp
pop
mov
cwtl
outsb
xor
lock
jg
out
xor
cmp
push
dec
insb
les
shll
vmread
sbb
cmp
mov
insb
notl
or
ljmp
sbb
xchg
lock
ss
cmp
mov
push
mov
lahf
xor
add
popl
add
push
out
in
dec
cltd
fdivp
rcrb
jb
xchg
xchg
pop
shl
jo
push
pop
push
popa
or
add
testb
dec
sbb
jbe
xchg
jp
outsb
pop
mov
fcoml
pop
jl
mov
sbb
cmp
and
scas
jae
sbb
add
fisubrl
inc
and
lods
shrl
cmp
cmc
push
in
adc
repz
pusha
jne
push
aam
mov
ja
stc
in
pushf
jns
mov
xor
aam
leave
add
pop
and
jno
in
in
add
pop
add
jae
sub
repz
adc
inc
push
dec
mov
pop
and
in
dec
xor
mov
in
jae
sub
nop
cld
outsl
fcoml
stc
test
add
aaa
hlt
inc
cwtl
es
es
add
fucomp
mov
iret
aad
or
dec
repz
push
fwait
and
in
push
push
mov
ds
xor
dec
int3
iret
xchg
enter
fsts
sbb
test
pop
in
call
jmp
and
pop
cwtl
inc
out
cwtd
adc
imul
popa
xor
je
xchg
fmul
dec
loope
test
scas
arpl
lcall
mov
add
aad
dec
mov
pop
rcll
add
pop
mov
mov
or
sub
sbb
sbb
stos
out
xor
sub
sahf
lds
int
and
xchg
ss
add
cmc
cmp
daa
inc
and
adc
cmp
ret
inc
adc
dec
sbb
not
pop
mov
sbb
mov
sbb
pop
fs
in
inc
and
adc
inc
clc
mov
in
and
in
es
sub
mov
cli
movsl
cmc
cld
fnstsw
rorl
mov
xchg
jmp
cmp
add
loopne
xchg
pop
mov
es
roll
cwtl
push
mov
lcall
lahf
mov
jb
int
add
movl
sbb
movsl
push
vpmuludq
pop
and
les
inc
inc
and
addr16
mov
mov
xor
mov
xor
cmpsl
lods
jecxz
xchg
dec
xor
mov
pop
repnz
push
dec
jnp
lods
cmp
adc
or
test
mov
jns
mov
ja
pushf
iret
imul
stc
xchg
pop
or
dec
insb
insb
jecxz
loop
mov
fdivrl
adc
jns
fs
mov
aad
mov
add
insl
cmp
in
dec
xchg
jno
add
mov
dec
jne
jb
adc
fbld
sub
enter
inc
fiadds
es
cmp
cmp
rclb
jnp
insb
stos
call
rcrl
inc
xlat
cmp
dec
arpl
cmpsl
and
and
inc
jecxz
xor
js
mov
mov
in
out
push
aaa
jge
lods
ja
jl
sbb
cmp
dec
das
and
and
rcll
mov
adc
pop
push
sbb
int
xchg
inc
ja
lret
pop
lahf
loop
das
lods
ss
dec
cmp
sbb
loope
xor
inc
and
loop
cmp
out
in
imul
mov
cmpsb
sbb
sahf
daa
cmp
mov
aam
cmp
jbe
xor
xchg
add
and
pop
xchg
test
xlat
xchg
sub
repnz
shrb
jb
lock
mov
mov
daa
adc
cmp
mov
mov
push
mov
sti
cld
inc
mov
jno
dec
add
and
xor
mov
in
and
add
ficoml
dec
cmpsb
cmpsl
mov
rorl
pop
sub
gs
mov
clc
adc
les
sbb
cltd
frstor
int
dec
and
lods
and
in
inc
push
iret
sub
loop
pop
nop
stos
data16
scas
jno
mov
inc
fsub
cmp
addr16
inc
cmp
mov
ljmp
cmp
dec
imul
sbb
in
jnp
testb
mov
daa
push
add
or
lea
into
xor
add
dec
inc
mov
mov
pop
addl
lods
pop
addr16
inc
push
rcrb
sbb
sbb
mov
dec
add
mov
sbb
pop
fiadds
mov
movsl
xlat
add
pop
ljmp
pop
sub
sbb
sub
or
lds
pop
es
fs
sub
lods
jo
pop
push
push
xor
hlt
xorb
insb
aad
add
std
mov
xchg
adc
lock
xor
test
push
push
add
loope
cmc
mov
int
mov
rorb
fistps
lea
mov
push
popf
push
insl
imulb
pushf
mov
int3
xchg
cmp
mov
cmp
je
icebp
mov
mov
pop
arpl
or
push
nop
mov
add
int
adc
not
mov
sbb
push
add
movsb
cmp
push
mov
mov
rcrb
fcoml
lock
divb
icebp
and
jae
jo
lods
cmp
jnp
jb
stc
sbb
aad
add
dec
mov
xchg
repz
and
xchg
shlb
adc
xor
or
jecxz
movsl
into
mov
andb
outsb
popa
jmp
push
mov
xor
lods
mov
sub
call
aaa
fbld
fcmove
sbb
inc
ficomps
scas
xchg
lret
pusha
test
movsb
lret
rolb
jg
std
ficoms
inc
sbb
addr16
insl
ljmp
not
icebp
push
insl
repnz
lds
rol
arpl
push
pop
and
or
test
cmp
sub
dec
and
rcll
push
and
xor
insl
gs
sub
fdecstp
mov
mov
jecxz
add
repnz
decl
std
cs
stc
notl
ret
push
std
lret
and
xor
pop
xor
jne
xor
std
and
cli
in
inc
inc
lds
flds
lret
and
loope
aas
in
aas
lahf
adc
push
scas
mov
loop
ret
test
outsb
test
pop
test
call
jge
mov
ret
cmp
stos
cmp
hlt
mov
insl
sub
fldenv
add
jl
aaa
add
cwtl
les
lods
pusha
shl
cld
adc
out
mov
add
inc
lcall
cmpsl
mov
inc
pop
pop
xor
push
enter
fistpll
hlt
mov
mov
or
pop
cmpsl
add
pushf
movsl
add
in
mov
fwait
xor
dec
test
mov
adc
insb
in
clc
adc
pop
cli
mov
jecxz
lahf
pop
dec
rclb
mov
outsb
push
sub
bound
cmp
pushf
xor
lcall
divl
xchg
aaa
imul
cli
shlb
xor
or
addr16
fnstsw
addb
fst
hlt
loopne
cld
and
push
fdivs
mov
or
fidivs
sti
scas
je
and
insl
ljmp
xchg
push
filds
gs
sti
jo
mov
xchg
movsl
andb
or
repz
inc
dec
sub
jmp
js
aam
in
pop
test
nop
or
lcall
cltd
ret
cmp
out
test
ret
sub
adc
cli
orb
imul
push
inc
jb
rcrl
push
lods
sbb
add
cltd
push
frstor
sbb
das
adc
dec
dec
repz
movb
jae
or
out
and
daa
and
js
cmp
aas
cmp
pop
xchg
cld
mov
cmp
xchg
mov
xchg
sub
mov
pushf
movsl
dec
in
insb
iret
push
xor
fcoms
hlt
test
js
cs
lods
dec
imulb
cmp
movsb
call
int3
xchg
lds
cmpsb
cmp
adc
add
iret
cmp
pop
call
js
mov
jne
xlat
loope
sbb
fisubl
adc
in
adc
pop
cmp
or
enter
ja
call
inc
sbb
and
add
xorb
mov
bound
std
pop
nop
shl
dec
out
sbb
insb
push
lea
movsb
sub
cmp
pop
nop
mov
xchg
ja
or
cmp
int3
pop
dec
push
jmp
addr16
xor
cli
dec
adc
adc
aaa
pop
stos
cmp
std
dec
adc
ret
fcoms
jge
imul
daa
inc
movsb
shll
sub
inc
xor
sbb
jo
pop
pop
cld
mov
and
leave
inc
ja
lret
nop
inc
pop
pop
fwait
or
insl
add
outsb
std
daa
cmpsb
call
push
pusha
sub
mov
repz
xchg
and
lds
ja
into
orl
xor
add
inc
and
add
mov
and
and
negl
movsb
out
es
add
inc
dec
pop
pop
rcr
xor
stc
pushf
dec
adc
xor
pop
ss
adc
adc
and
xchg
sbb
mov
pop
aas
ss
and
int3
push
jns
jo
and
daa
jge
push
inc
mov
mov
pusha
in
fbld
nop
cmp
jge
xchg
pop
call
mov
mov
mov
call
test
mov
lret
sub
lahf
adc
pop
inc
add
jp
push
shlb
test
xor
push
mov
inc
jae
or
pop
xchg
inc
sahf
inc
inc
and
xor
inc
push
fmul
jmp
inc
xchg
aad
jb
mov
cmpsl
inc
aaa
cmp
lock
in
pop
mov
xchg
lahf
popa
cmp
add
jbe
cmpsb
mov
cmp
cmp
lds
nop
pop
fmull
mov
out
mov
sub
fs
fsubl
cltd
jns
in
insl
push
push
pop
mov
repnz
das
xchg
dec
jo
xorl
mov
lods
inc
fs
ljmp
sub
cld
push
nop
popa
and
in
inc
pop
shll
notl
adc
mov
mov
xchg
daa
push
xor
push
out
dec
aaa
dec
inc
int
outsb
cmpsl
or
test
in
jb
mov
push
add
sub
dec
je
loop
int
cs
aam
inc
lahf
sbb
call
and
sbb
gs
fdivl
in
int3
enter
inc
rcrl
cld
inc
mov
pop
mov
dec
mov
dec
scas
adc
cmp
mov
es
test
imul
outsl
leave
flds
jne
jo
jb
movsl
int3
sbb
add
mov
pop
sub
ja
and
xor
sbb
mov
jecxz
inc
or
lret
scas
inc
lahf
jnp
arpl
arpl
les
jmp
popa
xor
sahf
cmp
nop
movsb
xor
pop
inc
aaa
aad
adc
and
and
xor
cltd
jbe
data16
ja
xchg
movsl
fcoms
jge
pop
push
dec
push
xchg
or
adc
insb
xorb
add
cmpsl
mov
dec
jle
les
and
test
jbe
or
xor
mov
sub
mov
inc
mov
outsl
jns
pop
cmpl
dec
stc
in
movsb
std
adc
aaa
in
sub
push
aas
popl
cmpsl
lds
fdivr
pop
jb
outsb
cmpps
xchg
in
jo
mov
xchg
mov
scas
lods
xor
sbb
cmp
jmp
pop
cmpsl
rolb
outsl
popa
adc
in
xchg
and
sbb
rcll
pop
cmp
mov
nop
mov
daa
jmp
ret
cmpsb
aad
fidivs
mov
push
inc
push
cmc
push
sub
or
and
push
and
mul
int3
sbb
xlat
pop
sbb
jle
mov
mov
pop
xor
inc
jmp
test
push
dec
inc
stc
cwtl
ds
scas
mov
lret
sub
cmp
cmp
adc
decb
mov
cltd
bnd
add
inc
adc
and
mov
adc
inc
sub
lods
cltd
mov
adc
and
dec
pop
pop
dec
mov
fsub
pop
inc
into
or
adc
or
stc
and
xor
jge
sti
lcall
or
ja
pop
sbb
cltd
lcall
mov
scas
stc
imul
jnp
js
add
cmp
lret
incl
daa
sbb
cmpsb
adc
push
sub
pushf
aaa
and
or
xchg
pop
test
stc
fdivrl
inc
cld
or
jae
cmpsb
test
push
aaa
adc
xor
imul
test
push
push
popf
mov
sbb
out
cltd
cmc
test
and
jle
fnsave
ja
fdivs
add
pushf
sub
sbb
cmc
push
mov
xor
pop
ja
cmpsb
pusha
insb
aas
adc
sbb
fdiv
or
sbb
jae
pop
test
dec
stc
andb
test
mov
lahf
outsb
xor
sbbl
call
and
push
mov
xor
data16
aaa
adcb
pop
pop
and
adc
repz
les
movsl
mov
sbb
std
rorl
pop
daa
jne
cs
enter
jmp
jle
imul
cld
sbb
pop
push
scas
dec
sbb
push
roll
jne
es
call
mov
cld
sub
push
sbb
jo
icebp
call
xchg
mov
data16
mov
notb
std
cltd
xchg
dec
mov
lcall
loope
jne
in
jno
and
dec
cmp
inc
mov
scas
add
clc
stc
xor
sub
in
add
inc
inc
lds
int
ret
jne
hlt
bound
pop
add
jns
lds
ss
jne,pt
push
inc
fisubrs
rorl
imul
lds
push
inc
push
stos
sub
test
rclb
clc
mov
sub
and
imul
gs
inc
and
movsb
sarl
leave
jae
push
aas
mov
mov
nop
jl
xchg
call
ss
dec
std
dec
or
cltd
test
in
rclb
xchg
insb
jge
loopne
push
add
lea
das
jbe
movsbl
pop
pop
pushf
scas
adc
out
and
hlt
fbld
lcall
mov
or
data16
jecxz
mov
dec
jns
add
and
aas
call
dec
push
and
mov
xchg
and
cmp
pusha
in
hlt
sub
cmp
pusha
xor
pop
jns
jmp
or
fsubl
test
lret
xchg
sar
andl
adc
mov
out
adc
xlat
adc
jl
cmc
sti
hlt
shlb
lds
notl
pop
ds
mov
cmc
dec
sbb
pop
out
pop
cmp
push
adc
repz
cmc
lahf
outsb
popa
lds
pop
outsl
loopne
push
jge
lcall
mov
dec
std
sti
dec
clc
das
mov
or
pop
in
ja,pt
push
imul
cmc
pop
es
add
addr16
loopne
insl
cltd
add
adc
cmp
in
adc
leave
dec
les
inc
pop
pop
adc
pop
in
ja
xor
cmpsb
jno
sbb
shlb
aaa
mov
mov
xor
mov
jae
lods
or
xor
int3
shl
aad
addr16
add
mov
adc
and
inc
inc
mov
sti
cmc
jmp
test
filds
popa
iret
fnstcw
outsl
mov
and
sbbb
call
jg
jle
adc
cmp
lahf
xor
adc
in
shlb
movsl
in
mov
cmc
cmp
in
adc
or
fldcw
sbb
lahf
push
repnz
pop
dec
lods
fsubrl
cld
ljmp
cmp
adc
test
mov
sub
sbb
repnz
test
mulb
cmp
movsl
rorb
stos
clc
out
imul
aad
ja
ret
and
mov
xchg
inc
xor
mov
xor
out
jmp
sub
addr16
push
and
leave
test
mov
adc
pop
inc
cld
dec
pushf
movsl
aam
inc
mov
jno
or
loop
cmp
cmp
cltd
fimuls
and
popf
movsl
stos
jno
hlt
out
imulb
mov
mov
in
in
addr16
pop
cmpsl
dec
jg
iret
outsb
movsl
repz
ficoms
mov
cmpsl
xor
mov
imul
jno
cmp
pop
imul
mov
shl
jbe
test
subb
add
push
js
mov
mov
je
or
aas
xorl
popa
fs
push
cltd
outsb
outsl
jg
repz
mov
sbb
adc
rcrl
jne
mov
movsb
enter
cmp
mov
fwait
sar
int
cmp
push
add
fmul
push
popa
adc
aad
push
loope
test
and
lret
scas
mov
imul
out
daa
mov
jo
jo
in
pusha
outsl
ljmp
cmp
pop
in
mov
pop
sub
mov
call
adc
ret
dec
jge
hlt
dec
in
jae
aad
adc
mov
test
movsb
fidivrs
cmc
jne
xchg
dec
jp
enter
cmp
stos
testb
movsb
shrl
push
lahf
sbb
mov
lds
and
jmp
popa
lcall
repz
sub
xor
fwait
ss
pushf
es
inc
int
popa
pop
push
aad
shll
dec
and
xchg
adc
movsl
scas
jbe
mov
jns
jae
andl
or
and
leave
cmpsb
push
sbb
decl
pop
xor
cmp
push
insl
jo
sub
repz
sub
and
rcrb
insb
fisubrs
push
dec
adc
add
loope
sarb
gs
out
movsb
inc
mov
pop
cmp
dec
in
or
jne
mov
push
xchg
outsl
xor
dec
ljmp
sub
adc
xchg
add
sbb
cmpsb
out
mov
cld
pop
daa
lock
cmpsb
fisubl
xchg
stos
stc
outsl
enter
bound
jno
ficoml
sbb
inc
adc
dec
sbb
or
or
cmc
xchg
mov
movsb
lds
mov
rcr
cwtl
daa
icebp
pop
inc
std
pop
dec
cld
sar
jno
mov
jp
fmull
rcrl
daa
aam
loope
out
dec
sti
into
in
mov
push
int
pop
std
push
push
sub
adc
popl
jg
int
push
or
stos
cmp
jbe
mov
cltd
push
mov
loopne
jl
sbbl
rcrb
mov
movsb
inc
xor
mov
fwait
mov
int
cmc
adc
scas
negb
cmpl
pop
mov
add
scas
clc
pop
or
jbe
enter
and
cs
iret
inc
xlat
movsl
mov
jae
mov
cmp
cmc
jnp
xor
cltd
ljmp
lods
imul
and
ja
enter
mov
in
shl
ljmp
push
push
jecxz
lret
and
sub
gs
adc
ja
sbb
lea
lret
orl
imul
mov
sub
or
xchg
sbb
lahf
and
and
clc
ljmp
cmp
adc
int3
test
je,pn
in
je
push
xor
dec
out
jo
or
jmp
test
cs
cmp
lahf
xor
cmc
loopne
xor
mov
pop
fadd
mov
cmpsl
out
push
add
mov
or
mov
scas
aam
push
imul
mov
xchg
sti
test
int
cmpsl
adc
int3
adc
lods
lods
cltd
iret
clc
jmp
xchg
in
cmp
cmp
cmp
mov
repz
ljmp
adc
lods
cltd
pop
out
clc
jmp
mov
int3
data16
fs
adc
jae
jbe
push
jae
dec
push
popf
jae
cmp
imul
sub
xchg
cmp
sbb
adc
adc
lret
cmp
mov
xchg
xor
xor
fists
lock
adcb
sbb
jae
fwait
movsl
fwait
adc
cwtl
data16
xor
jl
iret
push
stc
sbb
mov
mov
lahf
xchg
mov
pop
mov
or
adc
jne
ret
jnp
cmp
xor
lahf
pop
in
addr16
shl
cwtl
cmpsl
cmpsb
sbb
mov
xor
repz
mov
adc
and
sub
sub
sbb
mov
push
negl
in
or
clc
push
imul
test
sub
sbb
sub
ret
push
cmpsl
mov
xchg
negb
icebp
mov
adc
dec
jb
shlb
aaa
pop
int3
dec
cld
movsl
sub
dec
and
xor
jecxz
pop
out
cmc
cltd
fbld
mov
and
adc
orb
xor
mov
in
lahf
push
pop
sub
jne
adc
stc
sub
adc
push
sub
push
push
mov
xchg
lahf
out
in
scas
mov
ja
imul
push
ficomps
in
pop
adc
and
and
in
dec
push
ja
inc
mov
cmp
sub
hlt
cmpsl
ljmp
inc
aad
dec
push
push
test
xor
call
pop
iret
and
push
or
push
mov
movsb
pushf
pop
jmp
pop
je
mov
mov
inc
ret
lahf
mov
popf
scas
or
sbb
lret
cmp
lock
test
lcall
inc
dec
add
aaa
std
dec
ds
pop
clc
dec
ffree
sub
cmp
inc
sbb
lds
outsl
in
jae
nop
xor
push
mov
add
cltd
iret
push
inc
imull
adc
test
aaa
rcr
jmp
push
in
sub
and
mov
mov
mov
dec
push
sub
ds
out
pop
jp
xchg
pop
repz
pop
inc
push
je
jl
xor
sub
out
imul
in
adc
mov
adc
push
or
movsl
lods
cld
pop
mov
or
push
push
xchg
mov
xchg
lahf
nop
push
mov
fdivrs
pop
jg
adc
insl
sbb
ljmp
push
gs
fbld
outsl
fs
in
mov
sbbb
pop
cmp
mov
mov
aad
lahf
jl
add
push
cmpsb
lods
xchg
cmpsl
add
push
fsubs
lds
add
out
aas
dec
les
and
aas
cmp
lock
insb
sbb
mov
fmull
add
cmp
in
add
loopne
nop
movsl
xchg
and
cmp
sbb
cs
mov
jne
add
pop
ds
test
cmp
scas
mov
inc
int3
or
movsl
dec
xor
scas
mov
mov
push
push
outsb
xor
push
ret
clc
es
push
adcl
add
lahf
aaa
jo
add
aaa
xorl
xchg
sbb
daa
je
mov
push
mov
test
aam
mov
add
mov
ret
mov
jno
ljmp
add
sbb
mov
jl
add
bound
int
mov
and
mov
mov
leave
sbb
scas
out
lret
jnp
sbb
pop
push
daa
and
mov
fwait
cmp
add
or
ret
adc
imul
movsl
lods
lcall
push
ret
sbb
ja
cmpsb
iret
lret
sti
dec
cltd
stc
add
sbb
jl
stc
xchg
loop
mov
mov
push
hlt
out
dec
mov
mov
imul
lods
pop
inc
test
test
xor
in
push
inc
movsl
cmc
stos
dec
cmp
sbb
pop
add
aam
mov
sar
iret
xchg
lea
lods
repz
clc
jg
lds
cmp
cmp
sbb
andl
pop
cmp
ret
jge
sti
into
sbb
dec
sbb
mov
fmuls
mov
mov
mov
cmpsl
loope
negb
jmp
jb
sbb
pop
rsqrtps
push
mov
cmp
cmp
xor
cmc
xchg
mov
clc
test
int
jmp
push
pop
test
pop
fucomp
dec
cmc
cld
test
es
in
test
xchg
add
cmp
mov
mov
inc
inc
cs
sarb
xchg
popa
ljmp
pop
mov
int
pop
int3
mov
sbb
std
adc
test
inc
ficoml
aam
and
cmpsl
cmpsb
adc
mov
jg
and
mov
stos
add
mov
enter
cmp
je
jge
ja
dec
sbb
shl
mov
popf
fdivs
xchg
push
ss
pop
push
lods
mov
inc
fdivs
movsb
fildl
in
pop
fstsw
sbb
push
dec
xchg
add
jecxz
jno,pt
pop
out
in
fcomps
jbe
or
cmp
or
dec
clc
jg
add
clc
xchg
dec
ret
cld
dec
xor
sbb
dec
orb
popf
mov
mov
loopne
pop
mov
in
loope
clc
imull
mov
jns
mov
cmp
and
adc
xchg
push
ja
pop
mov
inc
push
xor
pop
lds
cmp
or
adc
call
sbb
xchg
mulb
push
mov
sub
leave
pop
out
imul
adc
jne
stc
jae
mov
es
stos
sbb
ja
aaa
scas
out
cmp
add
cwtl
xor
ficoms
test
cs
push
ficoml
and
rcl
pop
mov
mov
cmp
lods
dec
cld
out
rcll
sub
out
cld
mov
popa
repz
pop
hlt
callw
neg
sti
pop
add
sbb
lcall
add
add
aas
cmp
mov
inc
mov
add
out
inc
fsubs
add
cltd
or
in
and
push
pusha
and
repnz
sub
cmp
cmc
es
arpl
cmp
inc
clc
ss
pop
cld
es
add
pop
data16
add
adc
pop
out
out
mov
lret
and
dec
add
mov
sahf
addb
aas
adc
xchg
movsb
add
mov
adc
in
andb
cmp
aaa
cmp
inc
sbb
fs
jbe,pt
movsb
ja
in
mov
sti
scas
or
add
xchg
data16
sti
test
test
xor
mov
shr
push
or
jb
addr16
std
loopne
jo
aas
fsts
inc
mov
dec
adc
inc
inc
adc
subl
imul
ret
adc
or
sub
bound
fsubl
lds
scas
movsl
sbb
rcrw
js
bound
and
push
test
in
js
scas
in
sub
adc
pop
dec
mov
out
sub
lahf
cmp
scas
mov
jo
inc
dec
sbb
clc
fdivrs
push
jb
out
mov
in
add
aaa
test
mov
fnsave
std
in
decl
mov
dec
jle
jmp
push
ja
mov
movsl
mov
repz
mov
repz
insl
pushf
std
fsubrs
or
rorl
incb
or
and
faddl
sbbl
mov
sub
movsl
sarb
cmp
mov
mov
jo
mov
cmp
aad
sar
rcrl
dec
ja
gs
in
sbb
add
and
add
mov
in
flds
and
ja
jnp
rorl
jbe
pop
movsl
lods
cmp
xchg
rorl
cmc
mov
lahf
xor
stos
inc
sti
je
decl
or
or
sub
sub
mov
sahf
jb
inc
lds
fimull
ret
inc
lock
stc
sti
mov
pop
sbb
leave
and
xor
movsl
mov
cmp
add
loop
add
pop
jb
adc
mov
mov
jno
lds
mov
push
xchg
lock
lock
shr
jecxz
xor
shr
and
repnz
call
mov
xor
rcr
add
in
addr16
inc
inc
dec
mov
adc
push
sub
popf
notb
sub
aaa
sarl
nop
insb
je
mov
push
or
push
and
jle
lcall
mov
popf
push
xor
aas
push
shll
cwtl
mov
push
cs
adc
jae
sub
pop
mov
cwtl
inc
verw
mov
in
pop
jl
daa
lods
fadd
nop
shr
ficompl
mov
mov
leave
sbb
mov
or
sbb
cltd
clc
adc
ss
sub
pushl
lock
push
idiv
repz
xor
cs
loopne
and
int
sbb
sub
sub
gs
out
sub
roll
fstps
ljmp
sbb
jns
adc
xor
xor
imul
jmp
jbe
inc
add
daa
cmp
pop
sbb
shlb
cmp
adc
add
or
or
pop
xor
andb
fldt
add
push
pop
sub
arpl
adc
shr
xlat
jecxz
popa
daa
sub
jae
sti
dec
pusha
mov
add
inc
test
push
cmp
and
jp
or
test
addb
movsl
xor
loopne
push
fistps
scas
push
xor
in
ja
insb
aas
push
cmp
outsl
in
cmpsl
add
stos
insl
popf
xchg
enter
std
xchg
cmc
sbb
add
push
int3
adc
mov
xor
lahf
out
adc
xchg
add
into
popf
cmp
cmp
or
dec
push
hlt
lds
in
sub
movsl
jmp
cmc
sub
je
test
ljmp
add
inc
cmpsb
xchg
aas
adc
popa
ljmp
jbe
das
mov
lcall
aaa
jmp
sti
idivl
sbb
pop
pop
sbb
fsubrs
push
fisttpl
inc
adc
pop
pop
rclb
jl
test
test
add
cmp
or
out
lods
add
test
ret
sub
pop
sub
aad
sahf
cmp
aas
and
xorb
pop
mov
jge
addb
lahf
sub
mov
jns
movsl
aas
cmc
cmpsb
lods
inc
pop
faddl
mov
shll
sub
cwtl
and
pop
es
cmp
inc
popa
push
adc
ja
add
pop
inc
adc
pop
roll
sub
pusha
and
in
aaa
add
or
mov
pop
add
push
outsb
xor
sbb
inc
mov
int3
and
imulb
pusha
xor
loop
cwtl
sahf
mov
stos
dec
sub
add
ja
movsl
inc
push
movsl
rolb
xchg
inc
aaa
cmpsl
std
xor
fcom
not
add
push
fwait
adc
sub
sub
and
jbe
mov
cmp
mov
lret
cmc
mov
dec
lret
fs
out
mov
add
jl
leave
into
sbb
mov
cmc
enter
leave
mov
sbb
fidivrl
xchg
mov
push
lods
subb
push
out
ja
pusha
iret
lods
jl
lods
dec
cld
mov
or
and
mov
mov
cmp
xchg
setne
cwtl
push
sub
icebp
ja
aaa
into
cld
pusha
shll
lds
in
mov
push
movsl
fisttpl
inc
pop
mov
mov
mov
or
jecxz
pop
aas
out
and
mov
and
bound
adc
std
mov
cld
jno
lea
or
adcb
jnp
out
cltd
mov
pop
mov
cmp
test
jns
and
sahf
push
mov
jmp
sub
push
push
xor
cmc
cld
dec
js
ljmp
clc
pop
mov
shlb
ja
insl
cmp
sbb
leave
loop
ror
call
mov
dec
outsb
test
xor
adc
stc
imul
or
sbb
add
xchg
sub
sbb
mov
out
sbb
in
jnp
bound
cmp
idivb
sbb
iret
mov
inc
fiadds
sbb
mov
cmpsb
cmpsb
sbb
push
repz
jnp
sti
enter
jb
xorl
jne
cltd
xchg
frstor
cmp
imul
pop
dec
cmp
mov
out
test
and
and
mov
push
mov
addl
xchg
in
or
mov
sbb
pop
sbb
mov
mov
jmp
xchg
imul
loopne
pop
and
jg
cmpb
mov
roll
lret
sub
push
aas
jbe
pop
jae
in
pop
pop
loopne
lcall
and
and
xor
lsl
ret
fs
int3
mov
int3
fnstenv
shll
imul
jno
fisttpll
push
pop
icebp
sbb
mov
jg
push
pop
mov
ja
xchg
stos
sbb
loopne
xchg
cmpsl
jo
into
arpl
jno
je
shll
inc
fsubrl
dec
xor
subb
nop
hlt
das
mov
icebp
test
pushf
mov
or
sahf
sub
inc
add
cmp
mov
cmp
mov
movsb
leave
ret
adc
adc
mov
out
std
fisttps
xor
jg
lods
cmp
shll
stos
lahf
incl
rcrb
in
add
inc
scas
mov
ss
cmc
xor
jl
or
pop
jo
add
dec
cmp
jae
and
mov
popf
add
mov
rcl
aas
push
xchg
push
or
movsl
fdivrs
dec
icebp
and
lea
test
lea
lock
pop
mov
sbb
lods
lods
adc
pop
xchg
mov
sbb
jl
popa
pop
mov
jmp
loop
fcomps
dec
ja
sub
cmp
clc
jno
and
mov
popf
jae
jmp
dec
fmull
pop
and
mov
cmp
test
xchg
or
cmpsb
sbb
in
cli
xor
adc
adc
loopne
add
fsubr
adc
mov
and
dec
adc
cmp
das
nop
aad
push
mov
sub
mov
inc
cmp
nop
aad
cmp
cwtl
mov
cltd
sbb
or
outsl
xor
aaa
jbe
adc
mov
inc
inc
repz
mov
jbe
cwtl
cmp
inc
add
sub
ds
adc
loope
xor
cltd
jecxz
fists
and
jae
sub
out
pop
cmp
cltd
insl
dec
inc
pop
xor
and
mov
cmc
adc
ds
mov
popf
and
sbb
in
int
in
fists
push
imulb
test
mov
mov
cmp
sbb
or
cwtl
mov
pushf
call
adc
int3
lcall
leave
mulb
mov
shrl
and
addl
or
push
sub
fsubl
mov
hlt
xchg
sbb
jge
dec
notb
fwait
xor
mov
and
mov
xchg
in
pop
mov
adc
int
andb
pop
scas
testb
push
aam
pushf
in
mov
jmp
cld
imul
lret
fst
lock
les
pop
int3
xchg
and
ja
lds
sub
in
in
andb
cmpsl
inc
dec
mov
sub
xchg
aad
push
das
mov
pop
adc
sti
cmpsb
or
pusha
rcrb
pop
lar
loop
call
cmp
xchg
ficoms
aas
sar
fnstsw
add
mov
addr16
push
call
add
aad
pop
pop
mov
mov
push
popfw
in
xor
cmp
aad
outsb
js
and
daa
in
sahf
icebp
cmp
mov
popa
loope
jne
gs
ds
pop
sbb
lock
dec
icebp
mov
cmp
add
ret
lcall
jg
sar
popf
mov
inc
mov
pusha
xchg
js
jae
hlt
push
testl
movsl
mov
out
cmp
mov
rcr
les
loope
push
cmpsl
and
call
push
insl
int
jns
jo
push
ljmp
filds
sub
cltd
pop
shll
jae
test
xchg
cmp
push
cmc
push
pop
push
mov
mov
call
repz
sbb
movsl
lcall
lock
pop
xlat
mov
fs
jmp
xchg
push
jge
movsl
popa
pop
std
cltd
movsl
adc
ss
stos
clc
jnp
add
inc
arpl
lods
fbstp
outsl
loope
orl
jb
xor
movsl
shl
call
imul
pop
fwait
lgs
std
test
out
les
test
icebp
outsb
std
cmc
je
daa
das
jbe
pop
inc
jecxz
fisttps
aad
jmp
pop
outsl
cmc
jp
imul
push
movsl
pushf
and
or
mov
cmp
cmpsl
in
xchg
dec
mov
xor
mov
inc
sbb
adc
or
ret
jge
cltd
sub
push
sbb
push
xchg
in
inc
add
push
bound
pop
imul
pushf
aam
add
xchg
hlt
cmp
rorl
adc
jl
and
inc
std
into
jmp
es
push
sbb
movsb
inc
sub
pop
daa
ret
repnz
mov
cmp
out
dec
imul
ret
push
xchg
shlb
mov
fcoms
jmp
dec
xor
loope
icebp
and
xor
fcoms
test
inc
mov
hlt
aad
xor
ss
lds
inc
mov
cli
or
imulb
aas
push
loop
mov
cmpsl
movsl
in
and
mov
xor
int
push
and
mov
sub
lods
outsb
xsavec
aaa
xchg
into
loope
pop
loope
inc
sub
es
mov
call
and
jmp
xlat
neg
xchg
lock
out
pop
pop
adc
mov
js
xchg
xchg
jb
cmp
xlat
cltd
fdivp
loopne
arpl
adc
add
test
mov
bnd
lds
add
nop
pop
and
xchg
jno
and
ljmp
sti
sti
mov
push
jg
ss
mov
incb
lea
jno
stos
push
in
fidivrl
cmp
lahf
lahf
sbb
test
gs
jnp
pop
adc
filds
push
in
sub
call
adc
or
call
repnz
pop
lret
adc
dec
sbb
sbbb
movsl
push
fwait
das
test
das
cmpsl
fwait
mov
aaa
int
addr16
dec
scas
xchg
mov
lea
icebp
imul
add
pop
or
out
fdivs
in
aam
lods
pop
pop
stos
inc
call
repnz
jecxz
insl
adc
sbb
xchg
mov
xchg
test
arpl
fcomps
xor
fcmovne
push
push
shrb
hlt
cmp
lds
test
inc
sbb
and
dec
fcomps
outsb
sub
call
mov
addr16
mov
sub
pushf
notb
push
dec
mov
hlt
fdiv
in
cmp
pop
cmp
xchg
and
cld
cld
into
pop
shll
inc
sbb
cmp
pop
das
scas
aad
mov
jge
and
test
data16
ret
xchg
add
and
rcll
lock
aas
mov
mov
enter
out
lea
daa
add
cmp
push
nop
popf
cmpsl
inc
pop
insl
sub
in
push
data16
sub
insl
int3
fidivl
sub
lret
test
push
xchg
ret
sbb
push
fisubrl
cld
xor
fisubrl
arpl
call
add
js
lret
add
andnps
mov
xchg
dec
mov
ss
sub
xchg
jg
add
add
and
or
loop
inc
and
stc
inc
mov
dec
fcomip
and
dec
and
out
pop
mov
jb
xchg
pop
jg
lds
mov
cmp
int
fstpl
add
mov
das
mov
cmp
popa
je
icebp
lea
aad
sbb
sub
push
mov
sub
inc
add
sub
aaa
xchg
sbb
adc
sbb
dec
imul
dec
shll
lret
or
add
cmpsb
sbb
mov
shl
pop
sbb
int
dec
mov
mov
sbb
dec
mov
loop
sbb
push
pop
popf
aas
and
jae
daa
repz
cwtl
xor
rcll
cmc
inc
sahf
sub
andl
mov
aas
rclb
fbld
fwait
imul
push
movsb
and
iret
jmp
add
mov
pop
loop
stc
in
push
add
addr16
push
sbb
mov
sbb
and
out
std
movsl
aas
int
inc
arpl
and
les
decl
inc
dec
xor
jnp
scas
cmpsb
divl
ss
and
xor
sbb
mov
sbb
addr16
push
xchg
mov
lret
xchg
push
int3
inc
ja
jne
cmc
imul
add
idivl
jge
stc
insl
inc
les
mov
lret
and
mov
xor
mov
and
jno
out
js
call
sbb
sti
leave
pop
adc
cmp
ja
mov
mov
pop
cli
and
inc
out
mov
sbb
in
dec
mov
xor
int
rcrb
xor
push
in
xchg
lods
fdivs
mov
or
add
ss
dec
ja
mov
es
inc
sub
call
jge
mov
arpl
adc
add
imul
dec
sub
xchg
xchg
push
push
lea
inc
nop
add
fs
push
mov
xor
inc
add
iret
movsl
std
jbe
test
stc
inc
popa
daa
shll
inc
movsl
sub
clc
sbb
or
stos
xorl
popf
mov
xor
fsubrs
pop
mov
jmp
jg
fidivl
cltd
jp
ret
loop
nop
sti
pop
int3
dec
incl
mov
adc
push
subl
andb
popf
mov
loop
push
mov
lock
add
cmp
dec
popa
and
sub
mov
jmp
adc
fdivs
pop
xor
out
insl
jb
cmpsb
test
or
sub
push
pop
fistps
pop
aam
adc
sub
xchg
bound
and
pusha
adc
ret
push
mov
jl
add
adc
xchg
andb
js
push
push
movsb
or
lock
in
or
test
pop
ja
push
sub
les
cmp
dec
and
lock
dec
jge
aad
out
icebp
cmpsb
je
pop
sub
aam
mov
test
fmull
icebp
mov
mov
jns
dec
mov
mov
leave
xlat
sbbb
mov
pushf
xor
lods
mov
jl
add
pop
and
insl
mov
nop
sub
mov
dec
sub
xorl
xor
sbb
xlat
pop
nop
movsl
test
in
dec
adc
xchg
add
pop
imul
mov
repnz
push
rolb
cwtl
xor
loope
dec
xchg
insl
jmp
aad
lret
add
lods
mov
cmpsb
jge
fsubrl
stc
dec
fs
lcall
or
cmp
jae
push
loope
mov
dec
sbb
fs
hlt
pop
pusha
leave
sub
ja
fwait
out
testb
sbb
mov
adcl
in
inc
je
lahf
jl
fdiv
fs
cmpsl
xor
xchg
ror
lock
inc
sbb
push
les
lds
cld
cmp
sub
lds
out
in
sbb
xchg
pop
movsl
mov
fadd
insl
add
repz
lods
mov
test
mov
cltd
mov
in
and
scas
das
and
in
mov
test
movsl
mov
cmp
mov
jnp
std
jbe
and
xor
jge
pop
push
addl
dec
in
enter
dec
lahf
push
mov
push
in
push
add
fcmove
mov
test
xor
mov
mov
jnp
and
jae
sbb
pop
mov
push
dec
ljmp
mov
pop
cwtl
adc
andb
cmc
and
add
int
add
call
js
pop
lret
lret
add
roll
sbb
xchg
cmc
push
les
sbb
jp
push
push
cmp
or
aad
mov
out
jg
and
movsb
mov
mov
jo
dec
jl
lret
movsl
and
sbb
mov
popf
jb
dec
mov
cmp
push
xor
in
inc
dec
or
into
adc
xchg
pop
pushf
pop
stc
mov
icebp
push
imul
sub
mov
int
lea
pop
add
inc
push
mov
rcrl
jle
jl
sbb
xor
fbld
ret
push
sti
pop
sub
add
divb
jnp
cmp
in
push
repnz
es
jle
push
xor
clc
mov
inc
lds
jae
je
pushf
xlat
rcrb
je
in
adc
push
dec
mov
lret
scas
call
pop
iret
sbbl
sbb
pop
mov
push
jae
loop
or
adc
and
adcl
cmp
ja
adc
lods
or
mov
movsb
dec
das
mov
jae
push
clc
cmp
out
mov
lock
cmp
dec
cltd
pusha
out
int3
fst
lock
xlat
jle
adc
stc
es
and
mov
sbb
stc
adc
mov
pop
sahf
aad
test
lods
int
js
xchg
pop
or
xlat
xchg
cltd
into
mov
lret
cmc
jae
lods
imul
inc
movsb
mulb
cmc
pop
mov
push
lock
mov
aas
stc
push
and
popf
pop
aas
test
stos
jne
jmp
or
sbb
add
repz
mov
jae
dec
push
lods
mov
in
popa
fs
xchg
mov
xor
pop
cmp
jae
fwait
mov
cs
push
cmp
aad
mov
push
frstor
lds
hlt
jecxz
add
push
sbb
and
mulb
pop
inc
push
lds
pop
xor
xor
sub
inc
aad
ja
pusha
and
xchg
popf
pop
sbb
test
jne
in
jmp
daa
mov
and
inc
sbb
jbe
push
adc
je
stc
pop
js
xor
icebp
sti
mov
xor
adc
cmc
sar
fadds
mov
ja
sbb
lcall
adc
mov
enter
xchg
dec
sbb
xor
mov
sub
inc
mov
rclb
pop
jne
out
aas
leave
xchg
or
test
and
cmpl
aam
int3
mov
adc
inc
mov
and
cmc
xor
cwtl
lcall
push
repz
cltd
lret
mulb
xor
sbb
xor
jns
cltd
jg
sbb
jmp
mov
xor
xchg
mov
je
mov
pusha
jno
es
mov
inc
cmpsb
add
and
pop
pop
std
jae
mov
cmp
jae
out
aad
xor
int3
jge
xor
clc
insl
sbb
adc
and
cmpsl
and
xlat
mov
roll
inc
aaa
xor
ss
or
xor
mov
mov
push
out
lret
in
xor
ror
arpl
ss
adc
adc
loope
pop
pushf
repz
dec
mov
addb
stc
aaa
push
popf
sbb
xchg
and
or
mov
cmc
xor
xchg
aaa
stc
dec
das
scas
adc
mov
mov
adc
lret
aaa
cmp
push
sub
lods
mov
adc
sub
adc
jnp
mov
lret
lahf
shl
movsl
mov
mov
fldl
icebp
stos
je
xor
push
cmp
stos
jl
sub
fnstsw
dec
xor
jne
adc
push
xchg
data16
fidivrs
lahf
and
add
shlb
ljmp
gs
or
cmp
mov
out
jo
pop
aaa
enter
movsl
jg
push
mov
inc
add
cmp
in
and
jns
dec
xor
je
jge
clc
notl
pushf
xor
sub
bound
and
fwait
sub
mov
pop
jmp
jecxz
add
sbb
cmovg
insl
add
daa
ss
sbb
lods
jnp
gs
call
nop
lahf
sbb
loopne
gs
add
lret
jno
in
cltd
test
mov
sbbl
cmp
test
inc
dec
lods
jbe
loopne
testb
sbb
add
movsl
pop
cltd
xor
push
movdqa
sbbb
test
push
shlb
jb
jbe
push
lahf
movsl
sbbb
stos
mov
dec
jl
add
mov
out
jno
movsl
dec
hlt
cltd
insb
mov
pop
xchg
gs
fcompl
add
aaa
mov
clc
mov
nop
cs
retw
test
pop
push
cmpsb
cs
push
cmp
cmpxchg8b
jg
adc
or
outsl
outsl
popf
jecxz
lds
sbb
enter
push
dec
aaa
push
fs
sbb
xor
sbb
mov
push
push
daa
lods
inc
dec
outsb
push
adc
and
pop
sub
sub
xchg
cmp
flds
sub
dec
movsl
insb
jo
inc
sahf
rcll
into
arpl
mov
dec
sbb
dec
xor
cmp
dec
adc
dec
cmp
lcall
fwait
mov
gs
movsb
mov
and
xor
jmp
inc
dec
and
fcmovu
add
inc
push
push
movsl
insl
cli
adc
cmp
das
pop
sbb
cmpsb
mov
lds
pop
ss
jbe
mov
sbb
hlt
int3
inc
test
sbb
setbe
test
inc
das
inc
out
shl
mov
psrlq
mov
lret
in
aad
add
lret
dec
xor
pop
xor
in
arpl
xchg
fwait
shll
or
pushf
in
adc
and
cmp
pop
jno
loopne
shll
push
pop
inc
lret
lock
ret
pop
cmpsb
std
cwtl
cmpsb
hlt
shl
jg
xor
lods
and
ds
icebp
inc
stc
adc
inc
sbb
mov
imul
push
sar
xor
push
pop
pop
jmp
dec
in
outsl
movsb
repz
pop
xchg
aaa
sti
ds
mov
mov
cmp
jecxz
call
in
fdivrs
pop
cmp
mov
cmp
sub
pop
and
loop
pop
fimull
adcb
inc
fisubrs
aaa
bnd
pop
jbe
ds
je
cs
fldl
push
jae
std
call
pop
xchg
insl
or
jmp
pop
fisubs
out
push
in
movsl
xchg
mov
nop
sbb
rcll
out
mov
pop
icebp
nop
cld
sub
pushf
xor
leave
mov
pop
cld
or
out
fsubr
movsl
push
hlt
pop
and
xor
adc
call
xchg
std
rorb
inc
xor
xchg
aad
lahf
call
in
mov
shll
shll
shll
inc
addr16
stos
dec
out
arpl
lods
jecxz
lods
mov
es
or
adc
mov
cwtl
cmp
clc
push
push
outsl
in
dec
pop
movsl
sbb
lds
sub
pop
add
sub
mov
xor
cmp
les
es
pop
fistpll
test
inc
call
cmp
cs
lds
push
push
vpaddw
mov
rclb
inc
push
jmp
mov
mov
pop
xor
xor
sbb
push
fisubl
and
mov
aam
xor
jne
ficoms
mov
popf
xor
cmp
sbb
xchg
sub
dec
outsl
sbb
inc
leave
test
aad
adc
cmp
push
daa
jae
sahf
mov
mov
pusha
int3
xchg
in
mov
gs
xor
fwait
sbb
xchg
std
inc
ja
add
push
and
std
pop
sbb
xchg
add
mov
add
inc
movsl
push
pop
xchg
enter
loop
and
pushf
cltd
xchg
stos
cltd
push
push
cli
daa
mov
sbb
push
jl
aaa
xchg
decl
add
dec
daa
and
jno
adc
xor
add
mov
insl
jecxz
imul
add
jmp
inc
xor
fscale
enter
andb
jl
int3
xchg
adc
subl
aaa
ss
out
rorb
push
pop
adc
xor
inc
mov
lcall
jl
jbe
xchg
insl
cmp
iret
add
aas
xor
xchg
or
sbb
movsl
push
popa
add
xlat
pop
sbb
dec
pop
push
dec
mov
sbb
pop
mov
mov
add
mov
jae
xchg
aaa
adc
in
mov
pop
xor
and
ss
fdivrs
push
adc
mov
xor
sub
test
cmp
les
xor
movsl
push
in
imul
mov
cmp
jno
xor
cwtl
xor
adc
add
mov
stc
and
xchg
cmp
jnp
or
sub
ja
jne
out
arpl
icebp
enter
add
or
aam
mov
mov
shl
mov
outsl
mov
pusha
sub
add
cmp
xor
ret
hlt
aam
pop
adc
dec
push
mov
ja
rcrl
and
jno
lahf
cmpsb
imul
adc
push
mov
mov
mov
pop
out
gs
divb
adc
inc
or
adc
sbb
xchg
mov
pop
test
cmpsl
xor
mov
mov
scas
and
call
pop
mov
dec
xchg
or
pop
and
movmskps
insb
mov
xor
jbe
dec
clc
inc
pop
pop
fs
iret
pop
iret
inc
dec
xor
xchg
sub
pop
in
cmpsl
out
xchg
pop
sbb
hlt
imul
push
push
aam
dec
js
sub
lds
add
das
xor
xor
dec
out
xchg
inc
pop
icebp
dec
xorb
lea
and
rcrl
in
cmc
and
jmp
fstl
inc
or
pop
rcl
ror
and
iret
dec
stc
cmp
ja
imul
pop
lds
pop
lds
fstl
aas
xchg
ret
mov
dec
sbb
push
cmp
sti
loope
xor
xor
adc
add
xlat
pop
clc
ja
testl
xlat
rorb
out
adc
xchg
lretw
jae
vpsraw
std
insl
adc
je
adc
or
jns
sbb
mov
test
inc
mov
push
in
or
scas
movsb
int3
xchg
xor
movsl
cmp
lcall
mov
cmc
sub
repz
es
push
push
enter
cld
bts
dec
sub
dec
sbb
jne
in
out
push
adc
xor
movmskps
fisubrs
scas
cmp
ds
jp
or
test
mov
outsl
inc
and
notb
and
add
push
add
jns
shl
xchg
mov
inc
lahf
enter
fwait
xchg
out
xor
pop
cmpsb
cmc
cmp
mov
pop
fldt
jge
ret
mov
mov
jle
xor
cmc
in
inc
push
xchg
sbb
ljmp
sub
push
rclb
cld
adc
sbb
int3
mov
pushf
jecxz
mov
fs
or
sbb
test
adc
push
lods
push
mov
jo
mov
cmpsb
popf
jmp
stos
ja
xchg
test
push
inc
bound
jmp
cmp
pusha
dec
push
daa
dec
stc
xchg
cmpl
adc
mov
pop
add
adc
stos
dec
mov
lea
into
push
mov
pop
xor
push
xchg
mov
or
call
push
rcrb
and
arpl
and
popa
adc
push
repnz
adc
out
mov
xchg
cmp
push
jp
or
and
fstpl
dec
push
subl
inc
int3
xchg
add
fsubp
inc
out
je
dec
fmuls
clc
rcrb
mov
jl
loop
sbb
sub
insl
stos
mov
loope
ds
imulb
or
mov
pop
inc
push
push
add
jmp
icebp
lcall
mov
cmp
sbb
dec
pop
or
testl
mov
enter
push
fldl
loop
fidivl
cmp
lret
daa
imul
add
pop
out
or
scas
ret
pop
pop
call
hlt
mov
xor
mov
aaa
movsb
sub
sbb
imul
adc
jno
mov
test
les
mov
test
cmp
out
clc
dec
je
sub
mov
pop
push
mov
and
mov
dec
or
loope
cmpb
mov
mov
pop
std
aad
sbb
insl
push
xor
lret
jae
repnz
xchg
lret
inc
loop
mov
stos
scas
push
mov
cmp
sub
lds
pop
or
jmp
dec
cmp
pop
jmp
rcll
cmp
xchg
scas
sahf
arpl
xchg
cmp
mov
movsl
add
xor
cli
xchg
repnz
sbb
popf
lea
pop
xor
in
jbe
adc
shl
adc
mov
aam
neg
clc
lcall
fisubrl
test
push
incb
dec
movsb
xor
pop
push
fnstsw
xchg
aad
push
ja
pop
shrb
sbb
sbb
dec
push
pop
enter
loop
insb
cltd
push
inc
inc
dec
cmp
jne
fdivl
mov
and
mov
in
test
add
add
sbb
int
add
or
aad
fnstenv
sub
cwtl
cmpsl
sbb
call
stos
xchg
mov
stos
sub
fcompl
mov
pop
push
mov
and
sbb
dec
inc
lods
and
jne
cmp
or
aad
clc
xchg
inc
jmp
jae
sub
pop
pop
in
sahf
or
add
call
out
testb
outsb
inc
xor
bsr
push
add
test
mov
cltd
xlat
add
jle
ficoms
cmp
mov
jae
push
xchg
imul
inc
in
in
and
js
divb
jnp
jne
daa
rclb
ljmp
xchg
mov
add
or
adc
fsubrl
dec
leave
lock
cld
jle
in
sbb
add
mov
sbb
stc
and
loopne
scas
adc
pop
stc
push
mov
cld
loop
daa
sti
ds
js
js
xchg
pop
jge
jecxz
adc
loop
in
sub
and
in
xor
clc
jecxz
stos
jo
sub
stc
add
mov
xchg
push
fdivl
cltd
xor
jmp
sub
add
sbb
repz
mov
in
sbb
addr16
mov
fs
dec
adc
out
cmp
jmp
iret
add
pop
sub
mov
shll
mov
pop
movsb
test
lcall
dec
mov
cmpsl
sahf
pop
xor
dec
sbb
jns
cs
sub
movb
and
mov
and
jge
sti
xchg
ror
inc
iret
jbe
loopne
mov
leave
sub
out
jae
fcomps
cltd
call
popa
or
ficompl
enter
and
xchg
xchg
jecxz
or
out
mov
cmp
out
and
mov
stc
cltd
insl
fdivl
xor
mov
push
std
push
sbb
and
xchg
in
rcrl
pop
add
xchg
add
int
push
pop
mov
addr16
mov
faddp
mov
fwait
in
ret
lahf
std
roll
push
adc
push
adc
adc
sbb
add
sti
ret
dec
ret
jne
mov
sub
dec
lcall
add
mov
dec
pop
adc
gs
cmpsb
add
mov
fildll
outsl
call
jb
push
in
xchg
mov
sbb
push
fdivrs
cld
inc
add
inc
mov
in
and
xor
ja
adc
test
dec
push
test
cmp
lret
ficomps
jl
sub
jp
in
pop
jne
adc
push
and
cmp
sub
popa
mov
cmp
movsb
sub
cmp
cmc
es
movsl
pop
xchg
ja
divb
cmp
mov
ja
and
repz
adc
test
pop
xchg
pushf
out
inc
pop
cs
test
ret
push
fwait
inc
sti
adc
add
out
pop
out
in
popa
sahf
xchg
xor
push
mov
sti
cmpsl
in
mov
mov
push
xor
call
push
callw
and
inc
movsb
sbb
mov
fs
cwtl
es
push
out
xchg
sub
rolb
sbb
clc
pop
jge
nop
adc
or
add
jne
jecxz
sbb
cmp
fldl
jno
push
sbb
aas
rolb
push
and
inc
in
fidivrs
and
test
jae
and
outsb
dec
adc
xchg
insb
add
cwtl
add
ds
aaa
bound
xor
movsl
loop
jmp
cmc
std
push
in
push
sbb
movsl
ljmp
adc
mov
cmp
inc
pop
sar
push
add
push
int3
fildll
sti
pop
jl
and
xor
and
inc
mov
or
sbb
rorl
out
cld
inc
mov
and
cmp
xchg
mov
lds
jae
lock
and
mov
add
in
ss
lock
jb
dec
add
inc
pop
cmp
and
jp
je
dec
out
int
jge,pt
or
pcmpgtb
or
jno,pt
daa
cmpsl
jno
push
int3
inc
flds
sub
movsb
std
xchg
icebp
push
dec
pusha
xchg
dec
insb
in
fdivs
push
aas
xor
test
cmc
les
sbb
pop
scas
inc
fidivrl
data16
inc
ljmp
lods
add
xor
xor
and
sub
jle
and
xor
add
stos
jge
test
rcrl
stos
xor
mov
pop
and
insl
mov
int
inc
mov
lcall
popa
int
aaa
sbb
mov
movsb
mov
sbb
jne
cmp
push
insb
sbb
sahf
pop
mov
movsl
fdivs
inc
cmp
loope
fstpl
dec
dec
push
and
jnp
and
pop
mov
xchg
cmp
sbb
cmpsb
sub
test
sub
jnp
push
imul
adc
xor
mov
mov
add
adcl
add
pop
nop
mov
int
fwait
and
push
xchg
pusha
gs
es
inc
adc
xor
je
sub
in
or
xor
push
mov
add
aas
and
cwtl
push
arpl
int
pushf
jle
lods
mov
xchg
mul
xor
cmc
dec
jns
scas
cmpsb
and
ficomps
push
sbb
popf
cmp
insl
data16
sub
in
xchg
pop
lds
pop
sbb
and
push
dec
mov
movsl
push
shlb
sbb
stc
cmpsb
adc
jnp
cltd
aam
pop
add
ja
scas
mov
popf
xor
cltd
ljmp
jmp
adc
mov
into
inc
pop
jo
pop
gs
cli
add
pop
xor
or
rorb
sub
push
xor
icebp
aas
sub
loopne
test
mov
aaa
or
push
in
and
adc
lods
aad
in
mov
jae
push
jmp
mov
std
pop
adc
jae
or
cmc
mov
adc
out
loope
pop
inc
aad
shll
xchg
mov
ja
xor
daa
call
mov
xor
cmp
and
out
scas
add
sub
jmp
and
adc
dec
mov
fiadds
fs
mov
imul
or
inc
sbb
imul
xchg
inc
jnp
ret
lods
mov
xchg
push
and
movsl
sub
inc
xchg
pushf
cld
add
sub
hlt
fimull
fs
sub
repnz
mov
xchg
push
aaa
pop
xchg
popf
sbbb
je
mov
push
movsb
mov
scas
inc
pop
stc
lret
inc
xchg
js
rcl
lds
push
cmpsl
lahf
adc
dec
mov
cmc
jae
data16
sti
jbe
push
inc
pop
cmp
push
cmp
cmp
add
xlat
sahf
adc
adc
pop
shlb
aam
add
ficompl
jb
lock
roll
movsl
stc
xchg
mov
cltd
xor
shrl
jno
sub
sbb
adc
movsb
lock
sbb
jne
lds
xchg
sahf
fxch
hlt
stc
mov
jle
test
int3
sub
ds
ja
xlat
pop
rcrl
stos
xor
mov
cltd
iret
lods
and
sbb
xor
scas
jbe
jo
add
and
mov
xor
popf
repz
fwait
add
aaa
aad
jg
mov
js
rcl
std
mov
call
push
dec
mov
adc
test
sbb
cmpsb
lods
mov
mov
inc
lds
int3
lea
scas
popf
shrb
rcll
movsb
and
sbb
insl
sub
int3
jae
fistpll
add
repnz
mov
movsl
xor
loop
std
cmc
mov
sbb
les
or
cmp
xchg
adc
std
cmp
popf
jp
adc
adc
iret
cld
mov
test
ret
js
pop
xor
aas
aad
daa
stc
pop
js
aas
je
test
mov
sub
dec
mov
mov
mov
cmpsl
inc
movsl
or
lcall
push
pop
stc
sarl
push
inc
sub
xchg
mov
xor
addb
mov
add
fdivl
insb
fs
or
mov
xchg
jg
cltd
sbb
pop
adc
dec
js
mov
xor
mov
je
out
inc
dec
pop
inc
or
jl
in
gs
push
mov
fs
sbb
sahf
es
adc
xlat
cmp
push
cmpsb
ret
pop
ret
out
add
xchg
out
mov
add
into
cwtl
ds
mov
aaa
and
mov
in
and
mov
push
sbb
pop
pop
iret
add
dec
mov
add
sbb
inc
adc
xor
or
popf
rcrl
leave
and
push
jae
xor
call
lods
std
lea
iret
fisubrs
inc
mov
fdivs
std
or
fisubrl
cwtl
cmp
jae
pop
pop
pop
sub
daa
rcll
test
movsl
or
je
enter
aam
inc
xlat
xor
mov
cmpsl
xchg
adc
shll
cmp
xchg
and
jmp
mov
xchg
pusha
cmc
xor
adc
aam
out
sub
test
pusha
dec
xor
mov
xor
mov
pop
and
das
je
loope
fdivl
mov
pop
xor
pop
adc
mov
cmpsb
dec
es
mov
sub
out
negl
fdiv
test
iret
nop
js
cmp
fs
iret
adc
push
xor
xchg
mov
outsb
add
scas
inc
cmc
jecxz
dec
dec
aas
xor
and
cmc
inc
pop
std
out
leave
syscall
aaa
sbb
or
sub
mov
mov
movsl
jbe
sbb
xor
dec
or
or
xchg
dec
lods
ss
pop
xor
adc
outsl
push
or
cli
cmp
push
pushl
cld
fsub
pop
clc
cmpsb
lock
cwtl
add
and
loopne
inc
add
inc
sbb
imul
hlt
add
push
xchg
cmp
inc
dec
pop
jnp
icebp
jecxz
mov
xchg
int
add
sub
jp
dec
pop
jecxz
test
vzeroall
mov
call
xor
cltd
jp
cmovbe
dec
cmp
ss
lea
loope
insb
testl
lock
lahf
fsts
jl
xor
pop
cld
adc
jg
sbb
aaa
mov
js
xor
and
pop
lock
jge
cmp
mov
mov
cmc
std
adc
lret
vmovntpd
mov
jne
adc
test
lret
and
std
fistpl
mov
or
mov
xor
jp
sub
adc
and
dec
scas
xlat
int3
lds
clc
cltd
outsl
jmp
xor
jmp
push
dec
aaa
pop
cltd
jp
sbb
ds
add
imul
sbb
fistpll
pop
xchg
push
das
cltd
pop
es
xchg
fldt
xchg
add
cltd
mov
pushf
in
lods
cmp
movsl
test
and
aad
jmp
out
lahf
shrl
jg
pusha
shll
xchg
cltd
fucomp
mov
std
insl
ret
sbb
stos
xor
xchg
sub
add
fstpl
int
scas
or
out
repz
pop
in
adc
add
push
mov
fildll
jno
or
jb
out
nop
fs
ss
and
movsl
fwait
lret
loop
lret
ljmp
sbb
xor
sbb
cmp
gs
mov
sbb
mov
inc
scas
sub
in
cmc
push
sbb
inc
or
cwtl
cltd
lds
adc
sub
ja
dec
xchg
fs
mov
xchg
mov
xor
cltd
mov
test
into
addr16
jl
dec
mov
pop
push
and
xor
jne
in
cmc
std
cmp
or
divb
mov
mov
stc
adc
jp
xchg
pushf
jne
cmp
cmp
lcall
ds
or
pop
cmp
bound
push
sti
cli
push
xchg
idivb
pop
rorl
lods
mov
jecxz
outsb
negl
std
in
mov
and
imul
xor
clc
push
lret
xchg
ljmp
push
test
pusha
sbb
and
mov
dec
xor
mov
sbb
dec
cs
insl
cmc
ret
sbb
and
and
in
jg
in
lds
stc
adc
mov
cmc
and
addb
mov
inc
sub
add
rcrb
movsl
cmp
push
mov
lds
cmpsl
sub
add
ss
es
subl
fadd
je
movsl
mov
push
jno
and
out
imul
inc
dec
imul
cmpsb
das
adc
in
lds
cmp
mov
pop
jp
int3
jne
cmpsl
sbb
xchg
out
push
jmp
mov
aad
sbb
sbb
loop
mov
sbbl
sub
mov
pop
jae
inc
adc
xchg
fisttpll
pop
loope
cmpsb
nop
push
push
fwait
je
enter
adc
in
test
mov
dec
jge
rolb
inc
sbbl
mov
les
sbb
bnd
ror
mov
mov
jge
push
cli
insb
adc
outsl
xor
enter
mov
and
pop
mov
dec
sbbb
dec
daa
movsb
clc
push
lcall
addl
or
cmpl
push
dec
iret
pop
and
xor
cli
mov
lods
test
jl
mov
mov
test
xchg
mov
xchg
xlat
mov
push
out
insb
jbe
pop
js
push
jp
jl
shrl
cld
or
mov
sub
lret
in
scas
enter
aam
and
pop
inc
loopne
mov
mov
push
xor
mov
mov
pop
xchg
fisttps
add
fmuls
dec
inc
push
scas
aam
ja
jb
in
push
sbb
dec
and
das
daa
jae
mov
mov
mov
stos
xorl
out
clc
call
loope
jno
push
in
adc
mov
xor
lods
fisttpll
bound
jo
cmp
aam
jo
icebp
pop
jge
push
mov
insl
xor
cltd
fiaddl
adc
stos
mov
cmc
sub
lods
popa
cmp
inc
xchg
pop
fs
xlat
cmp
and
dec
popl
stc
js
pop
xlat
sbb
push
cmp
lahf
and
or
popf
shll
push
js
mov
push
imul
addl
mov
cltd
fbstp
mov
nop
movsl
push
stc
cmp
pop
adc
sbb
dec
inc
jno
sub
push
mov
inc
jmp
or
inc
cltd
inc
ss
cmc
insl
mov
fwait
push
cmp
sbb
adc
std
xchg
dec
xchg
sbb
or
dec
mov
sbb
inc
std
add
mov
or
lret
iret
aas
in
mov
out
icebp
int
xor
inc
mov
add
pop
mov
mov
arpl
movsl
bound
loop
jnp
dec
rcll
and
cld
pop
jnp
ljmp
stc
sarl
sbb
imul
std
popa
add
pop
addr16
or
and
divb
sub
orb
mov
xchg
add
and
lret
aad
add
pushf
lock
xchg
sub
mov
xchg
xor
sbb
push
cmp
dec
pop
cmc
in
jl
push
insl
mov
add
cltd
outsl
mov
mov
cs
push
mov
ret
rclb
jmp
add
xor
shrl
xor
push
cmpsl
xor
mov
inc
out
mov
add
jp
aaa
jns
leave
insl
jae
add
in
cmpsb
xor
cmp
mov
std
xchg
loopne
sbb
pop
fwait
std
call
adc
dec
mov
jg
addr16
xor
xlat
pop
jle
adc
jo
dec
and
adc
push
lock
and
and
xor
push
pop
pop
pop
mov
mov
fwait
sub
xor
out
jg
xor
mov
jae
mov
push
mov
aas
lods
out
jmp
jbe
mov
popf
ds
mov
pop
inc
adc
std
cmpsl
sub
and
xchg
std
push
loope
pushf
enter
jl
inc
test
lods
aas
push
add
jno
testl
sub
mov
fstpt
insl
cmp
stc
pop
nop
jge
adc
aaa
lahf
xchg
mov
xchg
xlat
sti
xchg
cwtl
push
idiv
jb
pop
stos
movsb
cld
push
inc
popf
xchg
cltd
dec
xchg
lcall
cmp
cmpsb
decb
xchg
pop
movb
sub
icebp
lods
imul
push
jnp
xor
icebp
push
mov
dec
jmp
std
movsl
xchg
fldenv
pusha
xor
insl
lods
and
addr16
lahf
xchg
lret
mov
jnp
inc
vpmaddwd
test
fsubrs
std
or
or
cmpsb
mov
xchg
js
mov
iret
add
cmp
lahf
push
sbb
scas
int3
icebp
mov
inc
ja
outsb
add
lcall
sub
and
pushf
xchg
push
add
rcr
or
jle
jg
lds
aad
test
lds
xchg
push
lret
dec
aad
mov
mov
dec
xchg
das
or
popf
shr
test
sbb
sbb
movsl
pop
dec
mov
ljmp
movsl
popa
sub
dec
cltd
and
push
in
push
inc
mov
push
imul
pusha
lahf
and
xor
sbb
mov
ret
call
in
or
push
hlt
adc
push
fsubl
jl
mov
std
mov
mov
test
xor
pop
or
movsl
or
adc
add
loop
mov
bound
scas
sbb
daa
dec
and
repz
add
cmpsl
mov
loop
ja
pushf
aad
outsb
lock
jmp
test
scas
je
inc
aad
loope
mov
mov
mov
xor
loopne
cmc
xchg
mov
mov
adc
and
xor
data16
clc
push
movsl
mov
aas
fsubr
shl
jmp
cmp
out
fsubs
rolb
cmp
xor
in
aad
xor
lds
mov
and
andb
sub
data16
dec
jbe
mov
lods
and
jns
cmc
dec
jo
enter
daa
mov
adc
pop
cmp
jl
inc
movsb
cmp
push
inc
cmp
aaa
ja
jmp
das
dec
mov
lcall
cmpsb
insb
shl
xor
cltd
mov
ficompl
cmpsb
xchg
lods
shrb
pop
lea
inc
repz
adc
mov
inc
jmp
shlb
mov
popa
pop
lods
mov
mov
xchg
jle
inc
dec
les
div
sbb
enter
xchg
dec
adc
pusha
fcomi
mov
or
jno
and
movsl
pop
dec
adc
and
pop
sbb
adc
je
ljmp
bound
xchg
mov
ds
scas
xor
push
add
jecxz
and
mov
lret
adc
mov
cmp
lds
cmpsl
pushf
mov
out
add
push
inc
shl
nop
xchg
dec
cmp
dec
adc
mov
je
add
cmc
lea
dec
addb
xor
pop
cmp
clc
add
xchg
and
or
add
xchg
dec
int3
lods
and
ljmp
sub
aaa
repz
and
in
sahf
jge
cmp
push
jmp
orb
dec
jae
in
adcl
aas
and
inc
repz
scas
stos
xorb
mov
inc
dec
and
or
sbb
pop
jl
ds
mov
jp
cmp
mov
cld
outsb
mov
cld
push
and
mov
mov
mov
cli
adc
in
in
pop
and
hlt
pop
xor
adc
nop
dec
std
into
stos
and
add
push
clc
fdivrl
add
jl
in
leave
out
stc
add
sbb
mov
lcall
test
ret
mov
sti
xor
xchg
add
pop
xor
inc
pop
sub
hlt
testb
sbb
ds
cmp
fisubrs
adc
ror
lret
lret
inc
mov
dec
lods
cmpsl
mul
std
movsb
push
add
imul
sahf
xchg
xchg
movsl
mov
xchg
pop
and
das
pushf
aaa
jnp
fdivl
notl
aad
mov
shl
adc
clc
movsl
sarl
popf
setno
mov
inc
mov
icebp
outsb
sub
cltd
add
and
test
jmp
std
pop
and
jge
and
push
addr16
call
cmpsb
xchg
icebp
pop
mov
in
imul
mov
dec
das
jb
or
cmp
in
enter
insb
xor
lahf
sahf
int3
shrb
subb
in
in
adc
xchg
xchg
xor
ja
cmp
sub
mov
imul
movsl
imul
out
inc
outsl
fs
push
shrb
inc
mov
pop
out
inc
hlt
xchg
sub
jg
xor
dec
push
xchg
lret
fsub
in
std
adc
mov
pushf
lcall
or
gs
loope
inc
mov
xor
leave
es
sbb
shll
sbb
ljmp
call
in
gs
inc
cli
add
ds
push
jb
add
and
fnstsw
xor
aas
xchg
add
push
xorl
lods
stc
lcall
stc
xor
sbb
inc
jecxz
sbb
add
push
inc
clc
pop
mov
ds
add
cld
cmpsl
xor
pop
ljmp
mov
les
ret
aas
mov
push
inc
push
movb
test
inc
in
movb
cmp
jae
cltd
pop
lds
shll
std
xchg
call
push
es
pop
dec
fbstp
and
sbb
mov
aam
inc
arpl
cmpsl
notb
daa
and
jecxz
cmp
insl
dec
inc
jbe
out
les
jns
mov
clc
add
add
add
cmp
sub
xchg
movsl
pop
cmpsl
cli
into
xor
lock
cs
movsl
add
and
loopne
or
imul
test
sub
in
stc
cwtl
popa
add
sub
dec
je
orb
add
mov
mov
sbb
stc
adc
sahf
lahf
xor
mov
fs
loopne,pt
lods
jl
adc
jl
imulb
xchg
add
mov
mov
pop
repz
mov
mov
movsl
lret
ss
jmp
scas
mov
pop
std
adc
mov
dec
pop
cmc
mov
jmp
push
cmp
iret
pushf
aam
xlat
mov
subb
pushf
mov
xchg
in
sub
cld
xor
movd
sarl
fnsave
mul
sbb
lcall
mov
out
stos
and
mov
mov
repz
nop
ja
push
nop
pop
cmp
mov
xchg
jo
rcl
test
mov
xor
lahf
bound
mov
je
popa
push
loope
fstl
out
adc
pushf
lods
popf
and
add
leave
or
sbb
insl
sbb
mov
in
lret
adc
out
pop
fistpl
xchg
mov
push
jne
int3
and
dec
lock
push
push
cmp
xor
xchg
mov
cltd
cmp
daa
xchg
cmp
xor
sub
jae
in
and
iret
dec
mov
cltd
daa
adc
pushf
lahf
sbb
mov
rolb
mov
mov
lcall
lahf
ss
movsb
jae
in
scas
jge
add
lea
and
in
ljmp
cmpxchg
xor
scas
adcl
cmc
inc
pop
add
imul
scas
mov
fcmovnu
pop
stos
std
ljmp
sub
jne
fsubrl
aas
jmp
adc
sbbb
lds
jno
test
push
fwait
lock
mov
and
cmc
add
mov
pop
or
shlb
sbb
icebp
mov
rcl
xchg
dec
ja
mov
jmp
pop
cwtl
dec
outsb
fwait
xchg
inc
dec
cwtl
fwait
ja
mov
icebp
enter
into
push
out
sbb
mov
xor
inc
mov
xor
cmp
push
push
cmpsl
jo
push
xchg
imul
fcoms
mov
fwait
fwait
xor
popf
out
mov
cmp
icebp
cmp
fdivl
cs
mov
pop
mov
mov
in
mov
add
aaa
sbb
dec
rcrl
lock
mov
aad
call
xor
int3
fdivrl
mov
leave
in
pop
sbb
out
mov
sub
dec
jmp
cltd
scas
xchg
or
mov
dec
not
rcll
or
mov
leave
mov
int
lret
bswap
aad
lods
and
popa
fwait
adc
add
dec
cltd
sbb
popa
pmaxsw
out
stc
push
push
mov
sahf
in
mulb
push
lock
mov
test
std
jg,pt
repz
pop
dec
push
pushf
xchg
fwait
pop
mov
lret
in
cmp
xor
popa
cmpsl
je
xor
shlb
sbb
xchg
ja
in
sub
inc
mov
add
sarb
push
or
lcall
xor
scas
jbe
sbb
inc
mov
inc
cmc
dec
push
inc
fdivrs
add
xchg
mov
fadds
adc
fdivr
imul
and
jp
sbb
cmp
inc
add
mov
mov
add
cmp
sbb
int3
imul
jns
sti
aad
dec
fisubrl
inc
call
jbe
sub
arpl
push
jb
cmp
daa
popa
dec
and
xor
inc
and
dec
xor
inc
inc
or
sub
or
xchg
push
lret
xor
ficoml
push
jmp
and
jns
bound
lret
jle
xchg
and
repz
pop
test
cmpsl
cmp
inc
inc
out
jb
xchg
push
dec
enter
cwtl
push
adc
inc
out
sbb
testb
cmpsb
sbb
lea
int
std
xchg
add
cmp
push
shlb
movsb
adc
cmpsb
xchg
test
cld
dec
mov
mov
push
push
stc
data16
push
dec
daa
icebp
and
xor
or
ret
cmp
cs
add
sbb
lcall
mov
xor
mov
bound
cld
add
push
mov
cmp
in
cltd
cmpb
callw
push
enter
cltd
jmp
jp
add
pop
mov
jmp
ret
iret
sbb
and
xor
adc
pusha
leave
out
lcall
inc
fdivrs
or
call
shlb
or
inc
mov
bound
gs
mov
add
lods
cmpsl
or
jge
cwtl
add
jle
fcompl
insb
sub
pop
mov
xchg
mov
cmp
mov
insb
and
test
out
ret
insl
add
sbb
jp
adc
scas
mov
and
add
sbb
push
lret
stos
dec
xor
xor
xchg
xorb
xor
ja
dec
int
scas
fldt
and
add
cmc
loope
jae
adc
mov
mov
sar
add
movsb
jbe
dec
movsb
sub
push
sbb
adc
call
bound
addr16
push
and
mov
insl
sub
idivb
jae
mov
sub
out
add
and
xchg
cld
add
in
lods
aas
fsts
lds
xor
mov
jne
ret
iret
xchg
ja
push
and
aad
out
in
mov
in
out
cmpsb
data16
xchg
fwait
stos
adc
mov
inc
sbb
cmpsl
test
popf
movsl
enter
fdivs
lahf
inc
sti
push
fdivrs
movsl
add
jns
lcall
push
cld
call
sbb
inc
xor
int
sub
stc
sub
adc
lret
nop
insl
cmp
push
fdiv
ret
lds
inc
int
in
push
dec
out
jb
mov
aaa
xor
mov
fwait
jae
or
std
mov
in
mov
negl
enter
jmp
rcll
mov
fisttpl
int3
cmp
daa
add
stc
pushf
pop
ss
in
frstor
push
mov
or
sbb
add
mov
out
cs
adc
xchg
add
scas
mov
mov
int3
push
call
ss
aaa
push
sbb
std
movsb
mov
pusha
cmp
fcmovnbe
mov
xor
sub
iret
xchg
add
push
or
sub
push
int3
mov
stos
enter
adc
mov
lds
push
lock
mov
out
lods
gs
push
cmp
cwtl
daa
add
lahf
rolb
jmp
cmc
mov
aad
or
xor
es
mov
xor
test
stos
mov
addr16
xchg
fneni(8087
repz
dec
and
cwtl
add
xchg
add
and
push
scas
fimuls
mov
mov
jmp
lcall
movsl
push
les
mov
cmc
cmp
in
shlb
lock
pop
in
add
adc
mov
testl
dec
loope
aad
mov
sbb
call
pop
inc
std
shl
mov
ja
add
add
je
push
lahf
sub
jmp
pop
pop
mov
cltd
pop
jmp
fdivrl
clc
cmp
dec
lret
gs
addl
mov
mov
mov
test
pop
mov
call
test
and
pop
jge
dec
test
ret
mov
mov
push
lcall
mov
push
mov
lea
pop
ljmp
fsubrl
inc
cmp
sbb
inc
mov
mov
or
int3
and
mov
pop
mov
xor
lds
sbb
addr16
pop
dec
cmp
test
cmp
mov
push
add
jl
out
or
arpl
add
inc
adc
sbb
loope
inc
cmpsl
lds
xchg
and
mov
or
xor
aad
in
jno
sub
pop
add
dec
mov
stc
and
pop
add
rcrb
inc
dec
mov
movsb
jb
imulb
leave
pusha
loope
inc
xor
enter
call
aas
mov
push
xchg
aas
shl
fdivl
das
push
push
stc
cwtl
gs
inc
xor
outsb
bound
pop
dec
push
out
imul
rclb
fdiv
cwtl
iret
je
add
stc
int3
das
sbb
lret
mov
gs
mov
cmp
pop
push
das
inc
inc
icebp
pop
push
cmpsl
outsl
mov
cwtl
dec
add
push
ret
jno
push
repnz
data16
and
aam
rclb
jnp
mov
pop
sub
in
cmp
movsb
xor
sub
insb
push
xchg
iret
test
mov
push
adc
ds
mov
dec
adc
sub
rolb
cwtl
mov
rorl
in
sub
add
mov
loopne
aaa
mov
mov
and
dec
cmp
pop
int
subl
sbb
push
cmp
or
aam
movb
cmp
iret
jge
fstl
push
dec
aas
xor
pop
aaa
push
cmc
mov
les
add
mov
test
scas
pop
mov
mov
inc
fwait
imul
insl
jae
or
lcall
xor
add
lods
push
inc
pop
add
cmpsl
push
stc
fisubrl
mov
push
cmpsl
adc
out
pop
std
sbb
daa
imul
dec
pop
test
push
cmp
mov
inc
lahf
adc
cmp
and
rcl
movsb
clc
jmp
daa
imul
push
test
mov
gs
js
cmp
in
xor
call
insl
mov
inc
jp
int3
test
pop
and
jl
and
fsubl
inc
cli
sbb
mul
pusha
mov
test
and
frstor
add
lods
sub
sbb
mov
add
mov
add
lret
xchg
test
and
mov
fabs
sbb
pusha
sbb
and
cld
and
sbb
and
add
negb
fs
jecxz
or
xchg
and
xor
outsl
mov
pop
test
gs
orl
xchg
loope
in
nop
les
lea
jge
jecxz
mov
and
mov
daa
cmp
and
lock
pop
aas
mov
cld
sub
pop
inc
add
orb
lea
lds
cmp
movsb
and
push
loop
xor
mov
and
inc
scas
add
lret
pusha
out
mov
cs
add
pop
jmp
push
adc
push
fisubs
and
xchg
addb
cs
pop
xchg
out
in
push
loopne
cmpsb
jecxz
and
rorl
iret
addr16
dec
mov
sti
mov
xor
popf
daa
xor
dec
hlt
lds
add
test
into
sarb
testb
jo
movsl
add
mov
test
inc
dec
xorl
testl
mov
adc
popf
xlat
movsl
and
and
cmp
aad
sub
imul
int3
cmp
xor
subl
cmp
divb
xor
add
and
xor
sub
shrb
iret
add
fxch
xor
pusha
and
out
loope
insb
ret
jbe
pop
and
push
fs
and
inc
xorb
sub
daa
lds
loope
and
adc
and
mov
xor
push
inc
xchg
inc
ss
add
inc
cmc
fbstp
and
shl
cmpsb
pop
pop
push
xchg
movsb
divb
and
sub
mov
rol
and
fcmovne
add
mul
je
mov
int
cmp
jecxz
andb
shl
lods
push
loop
and
test
mov
push
out
and
push
adcb
pop
stos
test
in
sbb
scas
stc
mov
loop
and
lods
cmp
ror
repz
dec
aas
push
call
clc
popf
pushf
xchg
ds
std
test
aas
inc
lahf
and
push
push
pop
jge
adcl
or
fldcw
pop
dec
lods
mov
cmpsl
nop
aam
out
movsl
enter
ljmp
repnz
jae
shrb
xor
inc
popf
sbb
mov
xor
std
jbe
xchg
xchg
ja
cmp
gs
rcll
ds
lret
lahf
xor
movsl
adc
push
or
mov
fxch
mov
push
lods
shll
mov
mov
ja
inc
mov
pop
and
cltd
filds
jecxz
jp
xor
sbb
int3
push
in
xor
dec
xor
pop
lea
addl
test
cmpsl
int
or
sbb
xor
and
xor
dec
mov
test
jmp
pop
adc
add
lret
sub
adc
jmp
adc
stos
sbb
stc
and
mov
movsl
sti
loop
xor
jle
ja
xchg
movsl
dec
lret
lds
inc
les
pop
mov
pop
insb
add
mov
movsl
pop
or
xor
adc
test
cli
jg
fsubs
movsl
pop
cld
into
out
cld
xchg
dec
in
ja
outsb
sarb
outsb
sti
xlat
cltd
lret
or
cltd
rcll
add
in
data16
push
cltd
enter
cli
notb
push
jmp
mov
xor
mov
cmp
sub
sub
pop
mov
pop
cmp
int
push
fnstcw
sub
dec
decl
ds
mov
add
jb
shl
call
gs
out
ss
mov
arpl
push
int3
mov
push
or
xchg
ss
cwtl
mov
fmull
xchg
cmp
addb
mov
enter
fiaddl
mov
fwait
jp
pop
out
dec
cmp
and
mov
icebp
or
mov
cli
or
xor
xlat
xor
lret
or
pop
jae
inc
mov
add
inc
ss
adc
jge
push
push
pop
rcl
adc
imul
inc
or
lods
fucomp
and
xor
jle
sbb
lcall
mov
pop
adc
aad
ss
data16
std
push
arpl
pop
mov
add
rcl
add
dec
mov
xchg
out
mov
mov
notb
pop
popa
pop
std
mov
ja
or
imul
scas
dec
loop
xor
jmp
loope
xor
lret
loopne
cmp
frstor
and
imulb
test
lret
test
fwait
jne
xchg
or
and
sahf
test
push
xchg
xor
adc
sbb
imul
push
sbb
gs
sub
shlb
jns
mov
mov
jns
stos
dec
outsb
jmp
mov
xchg
aaa
inc
pusha
dec
and
pop
add
lds
es
sbb
fisttps
push
jl
xor
popa
sti
in
and
mov
mov
xchg
jnp
and
pop
add
dec
xor
mov
jmp
and
adc
stc
push
inc
ds
xor
push
and
sub
xor
popa
and
inc
pop
pop
cmp
sub
xor
sbb
mull
sbb
sbb
mov
jne
xchg
push
lcall
jb
mov
inc
cltd
aaa
sbb
gs
mov
mov
cld
xor
jae
lcall
mov
push
sbb
inc
cmp
das
inc
push
add
mov
cmp
sahf
aaa
ljmp
call
cmpsl
dec
push
in
cmp
cmp
call
hlt
adc
dec
scas
sbb
sbb
inc
lahf
sbb
lret
xor
mov
lcall
adc
dec
push
xor
dec
shl
pop
movsb
push
lcall
lret
inc
pushf
push
mov
mov
loopne
cmp
test
xor
mov
ja
sub
xchg
jnp
out
adc
jnp
jne
stc
movsb
cltd
bound
aas
fcompl
mov
bound
push
je
mov
xchg
lods
imul
repnz
pushl
add
pop
int
cmc
dec
sbb
and
inc
jae
int3
lods
lock
sub
lods
sub
push
data16
imul
movsl
add
dec
jl
adc
sbb
pop
int3
ror
pop
jle
inc
mov
aaa
jo
clc
cltd
mov
call
lret
sti
out
mov
xorb
std
pop
pop
adc
mov
mov
addr16
sub
jo
daa
sub
pop
mov
std
fmull
ljmp
jb
and
pop
jbe
int
jge
shl
inc
xchg
inc
cltd
inc
sub
mov
ret
loope
jae
adc
stc
ja
push
inc
fnstenv
lea
aaa
insl
xor
cmp
popa
inc
or
mov
mov
mov
pushf
bound
inc
not
loopne
cwtl
pushf
inc
and
mov
stc
xor
out
inc
add
xchg
sti
dec
push
add
enter
xchg
pop
pop
jl
sub
jg
testb
cmc
jae
notl
popa
lahf
jb
rol
sbb
loope
cmp
loopne
outsl
insb
pushf
mov
outsl
test
movsb
fnsave
lock
dec
add
xor
stc
pushf
inc
jae,pt
sbb
xchg
imul
and
mov
cmc
es
jne
out
lds
divl
jg
arpl
cmp
cmp
lock
dec
daa
or
cmpsb
push
sbb
push
leave
adc
pop
cwtl
mov
mov
pop
sub
dec
sbb
or
mov
push
lahf
push
or
mov
mov
cmp
pusha
mov
add
in
lahf
cmpsb
sub
ja
mov
vpmadcswd
xchg
pop
xchg
pop
inc
jbe
ret
xchg
ficompl
insl
mov
lahf
xor
mov
sbb
aas
adc
sbb
mov
int
push
sbbb
xchg
xchg
inc
stc
xor
sub
mov
icebp
push
sbbl
sbb
and
xor
sub
int3
jbe
icebp
mov
mov
cli
out
nop
pop
jmp
mov
cmpsb
gs
pop
pop
daa
jecxz
mov
cmp
enter
adc
add
fnstsw
pop
mov
rcrl
pop
imul
xchg
inc
ret
push
and
imul
daa
into
movsl
mov
in
pop
add
popf
adc
xor
xor
dec
and
rolb
popf
sbb
xor
in
mov
mul
inc
cmc
lahf
scas
xchg
lods
inc
or
sbb
push
mov
ljmp
cwtl
dec
in
xor
cmp
push
movsl
inc
jne
sub
push
in
mov
adc
test
xor
pushf
jl
sahf
fisttpll
lods
pop
xor
inc
push
ja
xor
inc
and
sti
or
pop
rcll
pusha
or
fisubl
insl
rclb
in
fstl
adc
ljmp
jae
sub
mov
stos
lret
ret
push
mov
dec
jle
mov
fsubp
icebp
and
cmp
movsl
shl
cld
idivb
cli
push
pop
pop
dec
out
movsb
mov
stos
andb
scas
sub
outsl
jno
aas
xchg
mov
sub
cltd
mov
outsl
fistpll
and
cmp
jmp
mov
adc
hlt
push
out
test
mov
rolb
cltd
mov
in
call
lods
xlat
adc
adc
divl
lahf
xlat
and
rclb
dec
jnp
lahf
xchg
xchg
xchg
rcrb
jl
int3
mov
and
sbb
int
cmpsl
sub
aas
mov
std
movsb
sbb
dec
push
add
and
push
jl
mov
fs
js
fsubrp
repnz
pushf
push
sub
push
add
es
and
xor
sbb
mov
sqrtps
add
inc
sbb
cmpl
je
cmc
mov
filds
dec
aaa
fsubs
shrl
adc
or
dec
jae
add
andl
xchg
add
sub
and
pushf
xchg
mov
cmpsb
jnp
fwait
adcl
sub
sub
ljmp
pop
cmp
js
xchg
je
or
repz
stc
sbb
insl
xor
sub
sub
in
movsl
out
arpl
pop
arpl
shr
push
pop
or
dec
cs
lea
or
jmp
jo
dec
mov
roll
repz
mov
jne
mov
jbe
mov
jne
push
add
sahf
sub
or
mov
xlat
pop
in
jmp
push
fsubs
lock
push
aaa
inc
rcrl
stc
xchg
inc
les
lahf
mov
es
int3
xchg
clc
xchg
mov
dec
xchg
je
in
movsl
int3
iret
mov
adc
int3
mov
push
xlat
aaa
inc
mov
in
cmp
js
and
cmc
testl
loope
sub
lds
push
or
xor
dec
hlt
test
mov
jb
jnp
les
adc
lea
mov
sbb
add
pop
push
jecxz
pop
je
out
push
aaa
sbb
dec
mov
loopne
in
adcb
jmp
and
movsb
or
js
mov
and
cmc
test
xor
ja
cmp
pop
pop
xchg
push
mov
call
cmpsb
daa
incl
scas
scas
push
and
jmp
inc
clc
out
repz
mov
jnp
jae
pusha
shlb
add
xchg
pushf
adc
mov
popf
cli
push
or
icebp
pop
cmpsb
jle
cli
mov
mov
sar
aaa
sbb
pusha
xor
pop
sbb
clc
jno
sarl
inc
inc
or
cmp
scas
in
or
add
stos
push
imul
test
and
push
out
mov
outsb
or
cmp
xor
std
inc
mov
jecxz
mov
or
int3
xchg
cwtl
scas
jne
add
adc
stc
xor
out
mov
lods
popa
inc
mov
dec
jg
dec
out
sub
hlt
dec
and
movsl
stos
in
xor
test
dec
in
int3
int3
cmpsl
data16
xor
dec
xchg
test
les
dec
stos
cmc
mov
xor
sbb
add
in
sbb
in
ja
sub
or
dec
rcl
jmp
add
addr16
and
xchg
sbb
adc
punpckhwd
adc
lods
xchg
xchg
push
popf
push
rolb
sub
movsl
dec
push
xor
aas
dec
scas
rcl
cli
push
adc
addr16
sub
jmp
out
imul
cmp
or
inc
mov
lock
xorl
or
sbb
cmp
mov
mov
lea
inc
cmp
inc
ret
lret
mov
loope
ljmp
push
mov
xor
sarb
out
push
mov
in
movsl
pop
movsb
and
les
std
movsl
notb
and
les
mov
das
test
movsb
lds
xchg
imul
enter
in
push
and
mov
mov
out
pop
sbb
scas
sti
enter
call
push
out
mov
push
movsb
movsl
testl
aad
std
inc
cltd
cld
decl
test
and
fsubl
enter
sahf
xlat
add
call
pop
into
outsl
add
or
int
je
dec
into
pop
std
cmp
and
mov
cltd
xchg
jmp
xor
pop
cwtl
dec
test
lahf
push
cmpb
sub
jmp
rclb
sub
jmp
mov
pop
in
aam
cld
mov
lret
jge
nop
cmpsb
repnz
in
mov
cmc
mov
cmp
dec
fisubrl
insl
sub
xor
xor
xchg
adc
mov
in
xchg
mov
mov
subb
ja
das
stc
sub
jnp
lret
or
add
add
push
mov
jno
and
inc
negb
ja
nop
add
pop
lods
ss
mov
pusha
push
dec
cld
nop
dec
or
jne
xchg
add
add
pop
add
and
dec
and
sbb
mov
pushf
ja
and
or
push
nop
add
pop
jne
xor
ja
fcom
clc
sbb
pop
push
clc
aam
inc
outsb
dec
xor
push
cmp
pop
sub
and
jnp
add
fldl
mov
push
fldl
mov
xchg
outsl
cmp
dec
cld
sbb
jae
hlt
out
inc
inc
cmc
inc
push
test
sub
roll
xor
mov
lea
mov
ss
adc
push
daa
push
arpl
std
cmp
outsl
andl
push
and
xor
popa
popf
adc
sbb
dec
stc
push
mov
clc
pop
fmul
add
fnsave
in
aas
adc
mov
and
test
in
push
xchg
enter
lock
push
and
mov
clc
ret
jne
push
or
in
dec
push
insb
movsb
and
sub
cmp
cmp
loop
pxor
sbb
push
movsb
or
js
adc
negl
cmp
notb
mov
sbbl
xor
mov
sub
cmc
rolb
fwait
push
mov
cs
dec
jecxz
cmc
clc
adc
add
cs
xor
fidivl
fstpl
in
mov
xor
add
and
jl
cmp
lods
ss
add
xor
popf
stc
jno
mov
add
insl
movsl
mov
ja
in
ljmp
out
rcrb
pusha
or
stos
xor
push
mov
mov
dec
test
mov
push
pop
cmpsl
icebp
xchg
stc
inc
mov
dec
jg
inc
out
push
jmp
or
push
arpl
rolb
add
push
aaa
mov
daa
pop
inc
push
or
gs
adc
bound
stos
mov
sbb
adc
and
and
inc
cmp
pop
or
jmp
mov
aam
cs
dec
or
dec
shrl
xchg
fwait
stos
or
enter
mov
add
adc
fcomps
adc
adc
pushf
sar
push
xor
mov
daa
lods
xor
lcall
scas
and
dec
xor
push
stc
cmp
cmp
dec
jecxz
jmp
xchg
mov
and
xor
movsl
push
lcall
push
sub
sub
push
movsl
xor
mov
frstor
shll
jge
lret
cmpsl
enter
call
xchg
pop
out
sub
add
mov
loop
xchg
sbb
fwait
test
shll
xchg
xchg
incl
mov
int
pop
sahf
cli
icebp
mov
sahf
push
je
xchg
ss
mov
adc
xchg
xchg
mov
cld
js
mov
xor
jecxz
xor
movsb
dec
pop
inc
jmp
and
in
xchg
decl
pop
aad
mov
add
stos
icebp
test
add
ds
push
sahf
xor
xchg
xor
xor
push
int
cmc
cmp
in
cld
push
imul
push
in
and
cmp
add
into
orl
or
mov
mov
daa
cltd
enter
in
or
adc
push
nop
xor
mov
cld
cwtl
adc
mov
add
mov
mov
mov
sub
shrl
mov
xor
aam
outsb
cmp
xor
es
adc
clc
pop
and
scas
es
enter
inc
dec
mov
in
sbb
mov
xchg
xchg
and
xor
add
xor
insb
lcall
daa
popa
std
clc
jne
mov
adc
adc
or
out
daa
mov
mov
xchg
shlb
push
outsl
xchg
pusha
adc
emms
loope
addb
mov
jmp
add
ss
sub
sahf
cld
lds
sub
xor
out
jl
add
jecxz
rorb
xor
jl
ret
xchg
jmp
das
out
sbb
leave
mov
add
mov
push
mov
scas
pushf
shrb
sub
dec
out
sbb
sbb
or
sbb
sarl
imul
pop
popf
jmp
sahf
xchg
dec
xchg
lods
scas
pop
inc
test
mov
ret
jae
cmp
sbb
mov
cmp
popl
add
popf
insl
pushf
mov
adc
rorl
sbb
inc
cmp
mov
jg,pn
cwtl
out
shr
dec
sub
adc
xchg
dec
test
mov
cmpsl
mov
movzbl
pushf
negl
int
mov
mov
push
call
pop
daa
sbb
gs
sbb
dec
rclb
sbb
hlt
sbb
and
ljmp
pop
jne
fimull
imul
adc
xor
rorb
sbb
cmc
std
add
push
es
adc
lock
cmpsb
int3
mov
std
mov
dec
cld
adc
mov
lods
xlat
sbb
lret
and
mov
cli
sahf
and
cmc
add
mov
lahf
pop
mov
dec
lods
sbb
lcall
xor
ss
repz
out
inc
pop
rol
pop
mov
add
aaa
cmp
mov
aaa
cmovbe
xor
sbb
add
dec
dec
dec
repnz
sbb
add
testl
test
out
rcrl
ficoms
out
xor
jbe
ret
lcall
or
mov
pop
mov
in
lea
rcl
in
stos
cld
jge
sbb
jp
sbb
loope
ss
frstor
divl
cmc
adc
lcall
push
and
lret
sbb
xor
sbb
fidivs
pop
fcomip
xchg
xchg
fstpt
das
dec
xorl
loop
aad
mov
popf
out
or
push
stos
xchg
sbb
xor
lcall
cwtl
movsl
stos
call
out
repnz
sub
cmp
lea
fcoml
lahf
inc
pop
gs
stos
xor
movsl
aas
in
mov
and
out
std
mov
jae
mov
cmp
inc
scas
dec
and
add
jl
inc
daa
int
and
stc
jne
push
sbb
iret
repz
icebp
in
and
lea
sbb
dec
idivb
sub
push
and
sub
cmp
adc
aaa
ja
cltd
mov
mov
cmp
sarb
mov
cmpsb
cmc
push
xchg
mov
daa
test
and
lea
sbb
push
lea
inc
pop
lret
in
mov
jge
loope
jns
out
xchg
int
je
insl
mov
xor
pop
mov
cmpsb
sbb
push
out
repz
stos
outsb
loope
int3
out
les
loop
dec
sbbb
inc
les
jo
test
outsl
test
fs
leave
cld
and
and
icebp
sub
mov
jns
out
repz
in
scas
cmp
mov
dec
int3
adc
push
jae
roll
int3
push
cmpsb
in
push
push
sbb
imulb
leave
fistps
fs
inc
sbb
fimuls
and
adc
cltd
sbb
sahf
mov
jmp
and
lahf
cwtl
push
insb
or
pop
test
lcall
imul
movsl
and
add
adc
jl
in
gs
xchg
in
dec
jae
pop
out
jae
mov
push
xor
movsl
scas
sbb
out
loop
pop
sti
ret
add
roll
and
insb
scas
imul
xlat
dec
ds
sbb
jle
lock
sub
xlat
fxtract
xor
jb
jae
adc
filds
sbb
popa
les
flds
adc
adc
mov
mov
inc
mov
dec
add
adc
insl
movsl
inc
sbb
lret
jno
lret
cld
arpl
popf
pop
push
or
cmp
ds
int3
ds
pop
xor
fisttpll
mov
sub
xor
pop
and
mov
imul
or
mov
mov
or
dec
sub
xor
mov
out
iret
xchg
nop
test
aaa
dec
sbb
push
and
xchg
mov
hlt
lds
in
stc
pop
xchg
adcb
cmp
dec
xchg
adc
outsl
stos
sbb
adc
fs
xchg
in
movsb
jl
in
insl
sub
cmp
xor
imul
jge
arpl
out
jno
orl
nop
jae
ljmp
mov
and
mov
cmpsb
jne
pop
xlat
fucom
push
mov
lret
int3
mov
sbb
test
jo
pop
call
inc
sarb
dec
dec
cwtl
jg
and
aam
dec
add
add
fmul
and
dec
jle
and
and
sbb
mov
lcall
adc
lcall
in
adc
push
inc
mov
mov
pusha
std
or
mov
add
popf
fwait
xlat
mov
mov
or
pop
js
push
popl
pop
mov
sbb
out
mov
cmp
xor
push
mov
dec
aad
jnp
pop
popa
les
pop
movl
pop
test
mov
xor
mov
add
mov
divl
enter
int
push
clc
aad
cmpsb
xor
sub
lock
lods
xchg
mov
mov
mov
out
popa
mov
lock
mov
stos
ds
pop
aas
loop
add
xor
sbb
scas
dec
cmp
and
sahf
imul
mov
das
cmp
sbb
jle
dec
fdivrs
mov
adc
shll
push
sbbb
pop
insb
pop
add
cmp
lods
mov
frstor
enter
insl
ds
push
loope
rorb
and
dec
mov
mov
clc
xlat
stos
testb
imul
push
jbe
inc
adc
push
jmp
dec
push
addr16
movsl
push
mov
cmp
dec
sbb
jbe
aad
or
and
lcall
adc
mov
mov
cmp
enter
sub
cmp
je
lods
mov
js
dec
and
lret
dec
aad
dec
out
movb
cmp
and
pusha
dec
cmpsb
mov
push
mov
out
lock
sahf
and
stc
mov
xchg
clc
mov
push
loop
jmp
jl
push
out
bound
sbb
jp
xor
jbe
add
imul
cs
bound
jl
cmpsl
pop
sub
add
iret
mov
add
int3
and
into
shlb
int3
cmp
xor
mov
xchg
cwtl
fcoms
jno
insl
push
fidivs
outsl
movsb
mov
cltd
cmp
xor
xor
and
gs
mov
xchg
imul
sbb
sub
cs
out
inc
lret
adc
insl
pop
cmp
movsb
jp
out
mov
jmp
dec
adc
lret
push
add
cwtl
clc
xchg
mov
out
rclb
dec
jecxz
inc
cmp
out
or
fnsave
pop
push
movsb
sbb
scas
jl
dec
dec
jne
add
sbb
add
pop
push
xor
stc
roll
negl
add
jmp
mov
insl
mov
push
mov
lcall
cmp
and
cmp
popf
inc
add
add
cmc
or
pop
clc
std
sbb
xchg
pop
add
inc
mov
pop
ds
lret
mov
lahf
cltd
std
add
cld
dec
mov
jle
push
test
or
add
enter
mov
lock
push
or
jge
das
xchg
fmull
sbb
gs
jbe
test
repnz
mov
arpl
adc
pop
pop
cld
in
aad
sahf
adc
push
sub
es
iret
mov
or
inc
imul
cltd
push
xor
adc
movsb
out
pushf
add
push
popf
das
mov
les
pushf
push
pop
out
mov
shr
dec
stos
outsl
mov
mov
mov
add
jp
movsb
sbb
lcall
sbb
dec
std
andb
and
in
das
mov
sbbl
add
cmpsb
sbb
test
add
sbb
cmpsb
adc
cltd
sub
fdivrl
sub
mov
test
test
push
cmp
ljmp
xchg
or
add
and
cs
dec
shr
in
paddb
stc
and
xchg
stos
xchg
sub
and
and
xchg
fdivr
sbb
sbb
gs
mov
adc
ss
test
test
sub
xor
xorb
clc
inc
bound
pop
enter
pushf
jmp
fs
inc
scas
sbb
loop
mov
and
jno
jg
jecxz
int3
enter
insl
sbb
push
cmpsb
mov
xchg
insl
mov
lret
add
jg
nop
xor
push
mov
push
and
jp
mov
negl
jno
shll
mov
stc
lock
xchg
rcr
sub
neg
push
gs
repz
nop
adc
mov
lods
push
lahf
int3
fsub
test
dec
inc
or
in
inc
jp
pop
fidivs
adcb
push
push
adc
in
sbb
sbb
add
or
jp
dec
cmpsb
add
mov
and
add
xor
movb
popa
loopne
aam
push
xor
push
mov
and
push
testb
add
ja
mov
int
out
adc
stc
dec
push
or
rolb
xor
dec
push
cmc
jmp
mov
dec
outsb
mov
xor
mov
add
dec
adc
nop
adc
fsubs
add
mov
hlt
mov
cmp
stos
mov
push
sti
mov
lahf
push
lods
xchg
jb
pop
mov
outsl
repnz
shlb
test
mov
pusha
xchg
add
cmp
fwait
or
in
imul
add
cltd
fidivl
mov
dec
xor
enter
or
ss
and
add
xchg
cmpb
lds
out
xchg
sbb
add
in
or
adc
pop
and
out
lock
je
in
insb
dec
push
and
inc
mov
cmp
enter
adc
add
fcoml
cmc
dec
loopne
xchg
loopne
sti
inc
xchg
decl
xor
fs
cmp
outsb
dec
div
and
cwtl
mov
sub
push
and
icebp
push
mov
imul
push
or
leave
leave
cmc
jb
or
in
cs
adc
stc
jmp
xor
repnz
push
xor
ja
adc
mov
pop
pushf
decl
enter
mov
or
ror
cmp
cmp
cmc
movsl
test
cwtl
push
aaa
call
out
cmp
pop
imul
add
bound
xchg
xchg
clc
lcall
cli
ja
lods
or
imul
cltd
jge
icebp
lods
sub
mov
adc
jecxz
mov
test
leave
xchg
gs
xacquire
dec
lods
jp
loop
pop
and
sbb
push
fldenv
mov
test
test
cmp
shlb
xchg
mov
std
rcrb
gs
pushf
jmp
aam
imul
test
push
inc
nop
add
jmp
lock
jl
mov
cwtl
jge
adc
sbb
mov
pmaddwd
leave
sub
cmp
sub
jp
fldcw
lret
cwtl
jle
push
and
loope
aaa
mov
int3
pusha
mov
xor
clc
add
xorl
lahf
aad
push
lds
add
rorb
lcall
cmp
aas
pop
mov
mov
shll
xor
call
jg
loope
mov
jns
test
fnstcw
xchg
ret
jns
test
mov
mov
adc
inc
and
shl
popa
out
lds
mov
jae
mov
hlt
dec
jecxz
dec
stos
inc
ljmp
dec
jecxz
adc
cmp
out
sbb
pop
and
in
cmp
sub
repnz
ds
dec
jecxz
mov
push
cmc
outsb
mov
sub
outsb
aam
push
fdivs
rorl
push
inc
mov
xor
add
pushf
push
cmp
cmp
push
inc
lea
fdivrl
sbb
sub
ss
jl
in
cmp
es
cmc
adc
es
in
adc
adc
aad
or
or
lds
roll
mov
std
in
cmp
sbb
inc
mov
sub
aad
movsb
adc
sbb
mov
outsl
or
push
aas
ss
sti
std
popf
incl
or
push
jno
inc
hlt
gs
inc
pop
call
add
fadd
pop
pop
outsl
jne
gs
repz
incl
xor
pop
pop
fwait
xor
jae
out
stos
dec
gs
loopne,pn
aad
sbb
in
inc
sbb
js
ss
stos
sti
adc
mov
pop
js
gs
lcall
mov
or
push
or
jp
call
lods
pusha
pop
hlt
adc
adc
dec
fs
stc
or
lcall
cmpb
test
lods
cmp
int3
insb
sub
in
inc
xchg
mov
dec
lahf
aad
adc
enter
stc
mov
call
mov
cmc
mov
mov
dec
xchg
sbb
mov
rol
add
daa
cld
scas
pusha
mov
mov
sbb
les
jl
insb
das
out
and
movsb
adc
sub
add
pusha
clc
repz
movsl
xchg
push
mov
arpl
mov
fistl
xor
cmp
push
sbb
pusha
mov
jge
and
hlt
jge
in
dec
xchg
sbb
adc
dec
stc
pop
lret
mov
out
cmp
add
ja
sbbl
dec
pop
inc
or
and
jno
ljmp
mov
jmp
insb
push
fisttpll
inc
daa
cld
cmc
sti
fwait
std
add
inc
xor
data16
dec
cmp
jg
sbb
ljmp
add
cld
adc
mov
mov
test
inc
ds
inc
push
mov
ret
sarl
jl
loope
lds
and
mov
dec
movsl
imul
repz
or
test
and
push
cmp
mov
shrb
fbld
nop
mov
xchg
scas
rcrl
popa
nop
sti
xchg
lock
arpl
push
call
dec
add
cmp
and
and
cmp
mov
xor
loope
in
and
xor
scas
dec
popa
inc
repz
mov
lock
leave
jno
jb
outsl
dec
jne
sub
cmp
scas
loop
cmp
or
adc
or
aad
std
repnz
sti
xor
xor
pop
xchg
push
or
cmc
aaa
cmpsb
in
fisttpll
jl
cs
sbb
fcompl
jl
sub
cld
push
jmp
add
push
pop
imul
and
daa
cmp
push
and
cmp
je
in
movsl
aad
dec
mov
dec
adc
mov
xor
push
jmp
jl
pusha
cmp
cmc
pop
mov
movsl
dec
pop
push
sbb
and
pop
int3
in
shl
mov
mov
test
or
dec
roll
or
in
jo
xchg
inc
sbb
scas
cmc
sub
add
int
xor
pop
fdivp
sbb
dec
into
lret
cwtl
mov
or
test
mov
push
int
lods
or
jmp
sbb
jg
notb
mov
and
cmp
sbbl
shll
jo
push
and
psubusb
rcll
and
push
add
cmc
jnp
fwait
xchg
push
xchg
test
dec
decb
mov
push
std
ljmp
std
jno
push
dec
ja
sahf
and
test
lea
mov
clc
adc
std
in
pop
pop
mov
pop
xor
rorl
ret
jo
lods
mov
ds
xchg
push
ljmp
mov
cmp
pushf
xchg
fadds
cwtl
out
roll
movsb
or
adc
iret
test
fcoml
pop
movsl
pop
push
xchg
lods
mov
lret
add
mov
add
and
movsb
fld
notl
inc
cmp
and
and
andb
pushf
pushf
lds
cs
enter
sbb
leave
fwait
or
sub
adc
cmp
jo
incl
loope
ja
pop
pop
cmp
pop
jnp
pop
test
popa
ja
js
mov
jle
jbe
aad
and
push
call
cmp
sbb
xor
mov
xlat
into
fbstp
mov
lret
push
rorb
sbb
lret
ja
clc
push
xor
mov
jmp
in
jae
pop
sub
clc
lret
mulb
xchg
aad
xchg
outsl
adc
xor
sbb
add
clc
movsl
inc
add
lds
lret
arpl
xor
ja
add
int3
jae
cltd
test
mov
mov
insl
adc
jge
push
and
lret
or
and
movsb
mov
mov
mov
aas
pushf
xlat
inc
inc
push
movsl
data16
ja
and
xor
pop
mov
or
add
adc
rclb
mov
fdivrl
dec
xor
out
and
call
ret
sub
ja
cmp
inc
pop
cmpb
lcall
retw
pop
push
add
movsb
movsb
cs
jae
cli
push
cmp
dec
movsb
jae
fadds
in
adc
stos
mov
mov
stc
jbe
cld
mov
and
cli
fists
pop
outsb
push
pcmpgtw
fisttps
dec
lock
lcall
lret
adc
sbb
dec
mov
dec
fwait
push
and
add
and
rcl
ret
fst
push
lods
repz
jo
jb
lcall
dec
shll
xor
adc
lcall
xchg
mov
add
push
cmp
dec
je
popf
lds
inc
sbb
or
aaa
outsl
hlt
push
stos
icebp
shll
movsb
cmpsb
test
flds
lahf
stc
cmc
xchg
int3
jmp
xor
leave
push
or
adc
pop
mov
ja
adcl
pop
push
xchg
movsl
fwait
or
gs
xor
mov
in
push
popf
pusha
xchg
ljmp
cli
adc
in
mov
cmpsl
pop
icebp
or
jbe
cwtl
jg
mov
xor
jmp
adc
add
jp
cmc
imul
sbb
dec
cmp
mov
fcom
loopne
stos
lock
orl
std
sbb
outsl
mov
mov
inc
inc
xor
or
mov
push
mov
repnz
add
push
hlt
and
pop
xor
adc
mov
fidivrs
add
cmp
pop
sub
xchg
xchg
cmp
outsl
or
mov
sub
push
push
mov
lcall
test
dec
mov
dec
push
pop
scas
outsb
push
mov
clc
xlat
stos
lock
std
ds
ljmp
jp
mov
movsl
jns
add
push
les
aad
pop
lock
pop
sbb
std
lcall
js
mov
and
inc
dec
pop
mov
fnstcw
mov
and
mov
daa
mov
outsl
test
sbb
and
std
pop
and
movsl
inc
lahf
xor
mov
in
ljmp
lcall
imul
sbbl
dec
sub
scas
std
pop
scas
ljmp
aam
mov
pop
sub
and
jp
aad
inc
ljmp
clc
das
adc
sbb
push
test
push
add
mov
add
xchg
daa
sbb
jle
in
push
xchg
mov
add
rorl
sti
sub
pop
je
push
adc
int
and
lods
fdiv
sbb
testl
mov
push
and
clc
pinsrw
lahf
and
in
outsl
mov
popf
inc
fdivl
sbbb
mov
or
orl
std
add
inc
ja
addr16
add
inc
add
inc
add
inc
push
jae
jb
jae
adc
jecxz
pushf
and
push
fdivl
out
fisttpl
sub
or
std
nop
xchg
lods
incb
adc
pop
roll
mov
cld
mov
out
pop
sbb
ljmp
xchg
xor
push
and
aam
inc
adc
fnstsw
ss
xchg
je
lahf
pop
lods
inc
movsb
push
and
in
mov
insl
mov
movsl
or
dec
pusha
mov
push
aaa
mov
or
dec
pop
mov
push
add
popf
lods
mov
mov
jae
ret
adc
int
movsl
int3
fs
insl
adc
mov
sub
mov
fldt
mov
inc
xor
lea
fucomip
arpl
push
add
pop
shlb
cmp
int3
and
imul
ja
jmp
jno
mov
inc
sbb
nop
add
fsubl
inc
es
rolb
push
sar
daa
insl
cs
adc
push
and
sbb
loopne
sub
or
xor
xchg
mov
and
sub
xchg
aaa
ds
jge
mov
mov
and
nop
outsl
jo
pop
cmp
out
popf
daa
cs
adc
pusha
out
adc
jns
call
sbb
test
push
mov
sub
inc
fstl
stc
pop
mov
xor
scas
dec
loop
nop
push
aaa
cmp
fmuls
scas
hlt
stc
push
push
or
js
dec
adc
sub
jle
int
fsubl
movsb
cmp
stos
test
jmp
mov
cmc
rcrl
sbb
pop
nop
and
sbb
cli
or
test
test
rcrl
xchg
inc
std
pop
mov
add
add
or
aas
adc
shll
test
test
add
dec
cmp
movsb
and
mov
xor
and
and
add
inc
xor
cmc
xor
xor
dec
sahf
xor
pop
ss
jge
add
jbe
add
sbb
xor
sbb
cmp
mov
inc
mov
add
incw
das
shll
scas
xor
mov
mov
mov
sub
in
adc
lret
inc
test
lds
or
dec
icebp
aam
inc
sbb
dec
pusha
dec
in
ret
jnp
aad
xchg
and
fidivrl
mov
inc
jge
pop
call
mov
incl
xchg
cwtl
push
cmp
test
pop
out
and
adc
pop
and
sbb
xor
nop
and
lods
sub
pop
or
dec
and
jbe
push
out
dec
mov
add
adc
div
stos
insl
je
out
loopne
mov
xor
cmpb
add
ds
test
sbb
imul
subl
insb
sbbl
or
mov
add
popf
cmc
xor
mov
jne
pushf
mov
and
test
sbb
cmp
jns
dec
cmp
push
ret
add
in
insl
jb
sub
call
arpl
test
mov
out
jbe
outsb
sbb
sbb
pop
outsl
add
xor
loope
mov
push
xchg
sti
push
ret
stos
shrl
add
xchg
add
fsubs
sub
aad
leave
xor
dec
inc
lods
adc
out
push
jl
fmull
xchg
nop
pop
push
divb
xchg
cmpsl
push
dec
filds
add
test
clc
dec
cld
xchg
sbb
and
cwtl
aas
scas
cwtl
leave
xor
or
ja
mov
data16
daa
sbb
add
sbb
pop
addl
shrb
fucom
inc
sbb
movsb
cwtl
aad
pusha
push
je
cltd
nop
xchg
scas
lret
call
dec
cmp
cld
cli
nop
dec
push
repnz
and
push
sbb
int3
std
sbb
mov
and
mov
in
inc
cmpsl
push
popf
inc
dec
movsl
cs
pop
jg
andb
push
jnp
jo
mov
add
pop
adc
mov
shr
popf
daa
mov
cmp
push
adc
push
stc
adc
scas
enter
xchg
or
and
mov
push
aad
cmp
data16
mov
jmp
push
cmp
fists
jbe
sub
push
cli
je
das
mov
cwtl
push
add
std
mov
mov
dec
add
insb
cmp
cli
sahf
pop
sbb
pop
cmc
push
das
movsl
das
inc
inc
popf
imul
jmp
cli
lds
das
xor
mov
pop
ss
jge
mov
aam
rcl
adc
xor
push
repz
sub
pop
jo
push
aad
push
xor
push
hlt
cmp
stos
push
cli
xlat
mov
mov
mov
cli
xor
mov
in
mov
les
dec
push
aam
flds
adc
mov
or
rcrb
emms
xchg
xor
cmpsl
arpl
test
in
sub
aaa
pop
repnz
int3
adc
cmp
sbb
aam
push
aaa
dec
stc
fiadds
xchg
sbb
popa
mov
addr16
in
jle
roll
mov
test
xchg
sbb
std
addr16
and
mov
pop
push
inc
inc
mov
push
jmp
jno
and
dec
ret
or
xchg
add
add
sbb
mov
add
rcll
or
inc
jl
mov
xlat
mov
aaa
roll
sti
jno
and
add
mov
adc
rclb
add
test
cli
sub
xor
sbb
cmp
xor
add
ret
in
adc
adc
sub
daa
adc
mov
xor
lret
dec
jnp
arpl
inc
cmp
clc
movsl
scas
cmp
add
subb
cld
mov
mov
test
pop
jae
cmc
mov
cmc
lret
es
push
out
and
pushf
sbb
sti
mov
mov
ret
fsubrs
dec
fs
adc
outsl
xlat
test
int
shlb
js
and
call
sbb
push
data16
cmp
insb
aad
xchg
push
push
test
dec
cmp
jae
pop
xor
push
repnz
repnz
into
pop
into
inc
jmp
sahf
nop
test
imul
imul
lret
mov
inc
mov
mov
mov
pop
xchg
push
hlt
push
fnsave
and
sarb
fsubl
xor
stc
mov
and
outsb
test
lret
out
inc
adc
int3
mov
or
jne
cwtl
mov
dec
mov
push
out
psubusw
jle
cmc
inc
imul
jmp
add
cmp
add
roll
pop
sbb
fbstp
stc
jno
testl
sbb
pop
mov
dec
pop
push
add
fisubrl
xor
fstps
lds
cmpsb
dec
xor
dec
ss
or
fs
mov
push
movsl
ret
ss
adc
mov
sbb
mov
loope
cmp
sbb
out
aas
cld
sbb
fcoms
lds
mov
out
cmp
sbb
cmp
pop
rclb
mov
mov
out
cmc
mov
sbb
cwtl
repnz
test
inc
jns
inc
xlat
scas
inc
das
dec
lret
sbb
dec
cs
push
push
xchg
in
sbb
das
imul
jmp
cmpsb
mov
push
test
dec
mov
ficompl
out
sub
dec
mov
ret
aas
adc
push
cwtl
ds
dec
xchg
pop
inc
in
lahf
push
in
std
and
mov
fwait
xchg
and
push
out
popf
daa
dec
repnz
ljmp
ficoms
movsl
bound
add
mov
adc
sub
dec
addb
aas
sub
dec
aam
jno
or
or
push
sahf
push
in
aaa
int
dec
or
in
inc
ds
call
xchg
es
ljmp
xor
insl
xor
pop
inc
ja
call
mov
xor
cmp
shl
lcall
sbb
hlt
inc
jae
call
pop
pop
mov
cmp
or
in
rcr
std
adc
cmc
sub
movsl
mov
push
lcall
in
test
cmpsb
test
dec
popa
out
je
rclb
fimull
insl
cmpsb
addr16
aas
repnz
push
aad
jb
jb
aam
jae
adc
jge
add
scas
inc
mov
inc
pop
cmp
into
add
push
test
pop
push
nop
pop
sub
jne
rcrb
push
xlat
nop
movsb
xorl
xor
xorl
mov
mov
push
dec
or
loop
lock
cmc
sbb
push
mov
cmp
enter
cmp
and
sbb
mov
or
adc
sbb
jl
std
sub
lds
jl
pop
roll
cmpsb
add
push
or
cmp
mov
in
mov
xchg
jno
and
and
ljmpw
andl
and
rcll
xor
add
and
rcrb
xor
cmp
cmc
pop
dec
nop
adc
cmp
mov
or
mov
mov
aas
sbb
fidivrl
push
pop
in
les
pop
iret
and
popf
inc
sub
lds
getsec
daa
dec
movsl
pop
or
lret
out
push
cmp
or
enter
js
in
and
mov
and
sbb
roll
and
adc
jl
push
sbb
cli
cmp
add
in
push
xor
mov
aaa
inc
sub
adc
sbb
scas
inc
mov
add
jg
movsl
mov
daa
gs
repz
xchg
xor
in
aad
and
xchg
gs
inc
inc
iret
mov
push
cltd
nop
dec
out
ffree
xor
mov
das
shrb
and
mov
sub
setne
ror
pop
andb
das
add
xchg
shll
push
test
in
es
rcrl
sub
push
xchg
pop
gs
pushf
fs
rcll
and
xor
fldenv
cmp
add
ss
xchg
cmp
cmp
lds
cmpsl
add
test
sbb
sbb
je
fiaddl
ljmp
in
daa
inc
icebp
movsl
test
fs
xchg
jno
sbb
cmpsb
add
cmc
out
pop
sbb
ret
aaa
push
and
inc
push
nop
pop
frstor
sub
movsb
xor
lds
push
pop
popf
mov
adc
adc
add
pop
movsb
inc
cmp
sbb
lret
movsl
mov
push
ja
sub
out
push
jecxz
pusha
jns
outsl
movsb
mov
sub
daa
addr16
loope
adc
roll
movsl
rol
pop
daa
inc
in
lods
pop
std
movsl
das
pop
and
mov
jp
xor
mov
movsw
jge
push
pop
int3
push
dec
enter
adc
jle
aad
call
or
enter
xchg
stc
sub
enter
jae
test
inc
jae
pop
popf
mov
adc
mov
or
in
stc
movsl
push
mov
into
stc
xor
adc
ja
add
mov
adc
fs
pop
pop
stc
cmc
jge
out
sbb
imul
pop
es
xor
aaa
cltd
push
dec
cmpsb
xchg
xor
test
pop
mov
xchg
aam
push
pop
inc
outsl
popf
ja
push
dec
test
mov
daa
iret
test
lcall
icebp
pop
call
dec
push
push
arpl
mov
fwait
int3
mov
xchg
mov
test
and
in
push
fcoml
mov
inc
push
mov
mov
and
jmp
in
add
jae
xor
mov
testl
sub
pop
mov
inc
leave
cmc
loop
scas
mov
xor
push
and
lods
push
dec
iret
je
lcall
ret
mov
inc
sbb
add
dec
inc
out
jl
std
incl
lret
pop
jae
mov
nop
xor
pop
mov
das
arpl
movsl
test
jge
shll
into
cld
inc
pop
add
mov
inc
and
pop
jmp
push
inc
inc
sbb
int
jl
testl
cmp
fcomps
pop
ss
std
inc
sbb
mov
dec
loop
popf
pop
mov
enter
popf
popa
std
cmp
or
adc
in
cmp
sbb
std
sub
and
push
repnz
push
jae
sbb
das
jmp
inc
std
lds
adc
mov
fstp
mov
cmpsb
adc
lds
pop
outsl
js
je
add
fs
loope
cltd
loope
pop
or
std
xor
pop
add
pop
adc
pop
aam
mov
imul
dec
inc
or
test
gs
repz
bswap
das
adc
out
bound
mov
and
dec
inc
ficomps
scas
adc
pop
sti
xchg
xor
data16
xor
pop
arpl
sti
sub
ja
xchg
pop
pop
sbbl
sbb
jne
jge
lcall
ja
testl
sti
jne
jb
xor
xor
outsb
insb
cmp
shll
xor
cmp
xchg
maskmovq
divl
and
hlt
iret
pop
push
decb
dec
jnp
xchg
cs
lret
pop
xchg
jbe
lcall
xor
fsubrs
sub
push
dec
inc
movsl
pusha
das
pop
ds
or
call
es
mov
cmp
scas
xor
cwtl
push
loopne
aam
inc
and
fst
adc
test
and
cmp
in
add
xor
adc
cmc
mov
bound
push
lahf
sbb
xchg
ljmp
ja
div
adc
pop
push
fwait
cwtl
jae
inc
mov
test
es
pop
gs
push
pop
mov
jl
call
adc
xchg
dec
push
hlt
add
jp
sbb
sub
fldenv
xor
daa
loop
out
jge
cmp
loope
sbb
out
aam
sbb
or
sub
ffree
mov
aaa
cmp
leave
cmp
pop
mov
mov
xchg
jne
loopne
mov
inc
cmpsl
js
dec
mov
fwait
nop
mov
push
lcall
and
mov
add
bound
inc
ja
cmp
outsl
push
sti
sbb
roll
sub
cmc
inc
pop
sbb
jg
inc
mov
in
iret
sbb
cmp
cmpsb
mov
or
mov
inc
adc
adc
dec
add
and
rcrb
mov
ja
jae
in
mov
pop
add
in
jecxz
mov
frstor
or
call
inc
and
inc
jno
mov
mov
dec
dec
leave
push
mov
push
out
mov
ja
xchg
aad
cs
mov
fstl
mov
aad
ja
cmp
add
rcrb
push
cmpsb
lret
add
adc
xchg
aaa
cwtl
mov
fldlg2
sub
mov
lahf
jo
or
pop
adc
ljmp
cmp
fwait
sar
cwtl
lcall
out
cmc
mov
loopne
outsb
or
in
dec
mov
cltd
jle
sbb
sub
mov
es
clc
cmpsl
push
and
gs
xor
mov
testb
dec
add
cld
mov
sub
xor
cmpsb
xor
dec
dec
add
add
enter
push
push
cmc
push
push
repz
add
xor
stc
mov
call
jmp
lock
outsl
movsb
jmp
mov
in
dec
dec
cmp
sub
jge
sbb
and
in
ljmp
push
push
xor
cmp
add
icebp
jae
jl
cltd
imul
adc
stc
mov
in
mov
cmp
and
lds
xorb
sahf
out
cmp
clc
lock
mov
and
and
fcoms
decb
repnz
or
inc
lods
lds
arpl
inc
sbb
dec
inc
das
js
inc
ret
cmpl
adc
lret
repnz
pop
jno
mov
jg
lock
mov
and
arpl
jnp
cmp
and
in
push
ret
es
lock
pop
jmp
jl
movsl
pop
push
dec
adc
gs
or
cmp
dec
in
sub
sub
insb
lret
rolb
fildll
movsl
fisttpll
dec
mov
add
push
mov
add
mov
pop
and
ljmp
mov
pop
push
lret
shlb
shr
mov
jne
mov
mov
imul
insb
sub
xor
arpl
and
rcll
add
sbbl
sub
aad
ljmp
aam
jb
jg
jns
sbb
leave
xor
pop
sbb
xor
ja
push
fildll
ljmp
cltd
jle
add
mov
sub
cmp
sub
lds
pushf
hlt
movsl
aaa
aaa
cltd
movsl
jno
dec
ret
rorb
jecxz
aaa
and
icebp
orb
pop
xor
mov
push
movsb
mov
adc
outsl
nop
adc
sub
add
add
clc
adc
fmull
outsl
add
cs
jae
mov
lahf
xor
arpl
mov
xchg
or
aaa
and
das
fidivl
sub
bound
hlt
dec
adc
je
sbb
out
aad
movsl
cmp
add
fistpll
jae
sarb
adc
cmp
cmp
sub
nop
rclb
daa
adc
dec
je
dec
aad
les
sbb
clc
movsl
std
adc
mov
pop
sub
clc
lahf
test
test
testb
mov
cmpsl
ljmp
cli
lcall
dec
sbb
xor
repz
outsl
lods
xor
repnz
mov
ficoms
adc
cltd
sbb
mov
insl
shrl
push
filds
loopne
loopne
lods
mov
mov
cmp
test
xchg
fstps
ja
cmp
pop
mov
jno
and
es
dec
sub
xor
inc
dec
mov
xor
in
adc
out
outsb
jmp
and
dec
insb
scas
loope
pop
sarl
push
mov
xchg
mov
jl
std
ret
repz
mov
loop
jnp
sti
mov
aaa
bound
pop
je
mov
cld
aaa
xchg
lods
shll
jbe
sub
andb
clc
push
jle
and
cmc
dec
bound
cld
push
mov
mov
add
test
out
pop
mov
xchg
push
pop
sbb
stc
adc
cwtl
pop
testb
je
insb
andb
jae
sub
ss
cltd
sub
ja
inc
cmp
push
sub
testb
pusha
imul
in
in
mov
xor
inc
push
aad
inc
pop
cwtl
inc
mov
aam
mov
pusha
xor
cltd
loop
jo
mov
pusha
in
push
mov
pop
leave
scas
scas
inc
mov
ds
sbb
adc
iret
add
adcl
in
lods
xchg
pop
lcall
add
cwtl
adc
fldcw
pop
add
xchg
and
inc
add
mov
mov
mov
mov
and
sbb
cld
ja
cltd
sti
jae
movntq
cmp
push
or
xchg
addr16
fs
sbb
mov
mov
out
xchg
fdivl
cmp
faddl
mov
test
sbbl
xchg
ja
lahf
loopne
pop
sti
in
jo
and
gs
inc
pop
push
cmpsl
xchg
fs
ljmp
popf
add
js
and
xchg
int
movsb
and
ss
nop
dec
inc
insl
add
lahf
out
insl
jge
in
mov
daa
jp
push
jne
mov
addr16
mov
hlt
test
push
call
push
adc
and
mov
lahf
test
das
repz
adc
cwtl
pop
mov
dec
add
movsl
fists
push
js
inc
xchg
orb
xor
dec
popf
out
lahf
adc
std
cli
pusha
push
dec
jp
adc
inc
cmp
inc
orl
mov
pusha
testl
cwtl
xchg
dec
inc
cmpsl
mov
lahf
push
call
fs
pop
sub
stc
icebp
daa
pop
jge
and
or
lock
test
mov
jb
fsts
and
dec
movsb
xchg
jl
xor
sbb
in
icebp
fistpl
std
or
test
xor
cmpsl
push
call
mov
data16
pushl
aad
dec
and
cli
sbbl
inc
inc
ss
dec
jl
and
push
inc
sbb
jge
movsb
push
roll
adc
xchg
hlt
push
sbb
daa
xor
das
mov
mov
lcall
mov
sub
adc
push
clc
mov
scas
or
gs
stc
or
cmp
mov
stc
inc
inc
js
cmp
sbb
cmp
sahf
xlat
pop
insl
insl
cmp
ja
jo
mov
orl
cmpsl
cld
or
pop
cs
sbb
mov
jl
xor
ds
add
mov
cwtl
filds
jne
cmp
ss
mov
lock
lds
and
add
jl
pop
cld
testl
jae
sub
push
popf
add
mov
popf
lods
adc
cltd
sbb
mov
adc
clc
test
imul
mov
stc
jae
insb
dec
mov
in
mov
jae
inc
lods
jae
daa
sbb
cmpsl
fs
add
cs
fdivrp
insl
inc
xor
mov
mov
xchg
xor
sub
call
dec
xchg
cs
mov
cmpb
out
sbbl
wbinvd
adc
or
into
inc
or
mov
push
xchg
mov
fidivrs
xor
add
adc
notb
daa
neg
dec
sarl
jno
mov
xor
cld
lods
mov
enter
mov
and
cli
testl
mov
xchg
sub
cmp
movsb
cli
add
dec
mov
stc
cmpsl
outsb
xchg
out
pop
js
push
jmp
fdivrl
dec
inc
push
pop
fadds
testb
dec
js
add
jo
jbe
and
inc
dec
xchg
pushf
mov
out
jno
sahf
mov
and
aad
lds
in
movsl
jne,pn
outsb
std
outsl
gs
inc
fdivrl
frstor
push
cmpsb
ss
xchg
outsl
pusha
aad
leave
xchg
pop
stc
popa
movsl
nop
out
loop
xchg
pop
mov
jl
jg
xchg
in
dec
ds
xor
sbb
dec
dec
cmpsl
adc
ja
cld
rclb
int3
popf
cmc
popa
mov
sbb
or
sub
cmp
ss
pop
out
or
addr16
inc
pop
mov
add
adc
jmp
and
pop
mov
lods
sub
aad
lret
movsl
mov
cwtl
je
lea
push
cmp
nop
js
add
sbb
int3
adc
mov
call
aad
xor
in
call
nop
mov
mov
adc
fadds
inc
mov
ljmp
mov
ja
mov
xor
pop
cmp
inc
sbb
int3
icebp
mov
add
lods
stos
cwtl
aad
dec
aad
ja
scas
mov
xor
or
stc
dec
sahf
decl
sbb
sahf
sbb
in
lods
push
add
icebp
pushf
popa
std
cs
xchg
inc
cmp
pop
adc
jns
arpl
jl
movsl
sbb
lcall
mov
add
subl
sbb
enter
mov
push
xchg
test
add
notl
sbb
pusha
fstpl
push
and
mov
fildll
push
loopne
lds
test
mov
sub
jg
xchg
mov
out
and
lds
test
clc
push
xchg
leave
mov
and
cmc
cmp
fildl
out
xor
dec
push
xor
cli
imul
push
mov
add
jl
sbb
adc
sub
icebp
and
xor
movl
imul
fsubs
daa
cmp
mov
test
jo
je
popa
add
lahf
add
dec
sbb
mov
dec
stos
add
lds
hlt
push
adc
adc
xor
add
jb
sub
aad
and
pushf
jl
push
push
fadd
add
sbb
pop
inc
mov
xchg
insl
shr
in
sbb
sbb
add
inc
jae
sahf
daa
jg
add
mov
cld
imul
leave
ror
bound
popa
enter
dec
and
push
sbb
xchg
mov
sub
pop
dec
jno
mov
scas
stc
pop
js
cmp
mov
cmc
mov
cmp
mov
frstor
sbb
lock
push
xor
cmp
dec
xor
cmpl
add
xchg
std
pop
push
test
ds
xchg
lret
outsl
mov
imul
mov
das
cmp
inc
mov
insl
das
xor
fstpl
jnp
adc
cli
adc
aad
dec
jno
inc
adc
shll
mov
clc
dec
and
insb
inc
push
sub
sub
mov
push
inc
sub
jge
rorl
hlt
xchg
int
lret
lret
xor
cmc
movsb
push
shll
enter
add
sbb
andb
test
and
faddl
int
xchg
push
pop
or
ljmp
aaa
mov
jge
dec
pop
cmp
lahf
and
inc
jae
add
mov
mov
xchg
ja
pusha
add
and
xor
mov
xchg
int
xlat
clc
imul
decl
repnz
imul
and
dec
in
mov
cmp
dec
jo
lahf
hlt
mov
xorl
sarl
lcall
sbb
test
dec
lsl
movsl
sbb
adc
cld
jae
into
pop
sti
inc
test
mov
xlat
and
incb
dec
aaa
lahf
ja
pop
dec
rorl
and
pop
dec
movl
xor
call
pop
div
sahf
cli
mov
movsl
xchg
pop
inc
enter
push
test
in
ret
out
sub
out
arpl
rorl
mov
int3
inc
fildll
clc
jle
popa
or
and
or
es
xchg
cmp
jns
or
outsl
pop
cwtl
add
cmc
ja
sbb
push
push
test
outsl
cmp
test
inc
cwtl
sbb
jg
test
dec
sub
ja
lds
and
adc
dec
jmp
push
jns
daa
xor
lret
and
adc
in
xchg
enter
fldl
sarl
dec
or
outsb
popf
push
and
adc
and
fldl
lea
jns
xchg
xchg
push
mov
imul
fwait
cmp
les
mov
sbb
shll
icebp
push
sarl
inc
movsl
pop
lret
cli
popf
and
clc
push
mov
dec
push
push
cmp
mov
cli
and
popa
shlb
xor
mov
inc
call
hlt
hlt
or
and
add
jae
fmul
mov
popa
mov
repz
cwtl
dec
rcrl
mov
add
imul
fldt
icebp
inc
cs
les
jo
lock
out
adcl
hlt
aas
push
hlt
push
roll
push
cmc
in
mov
aaa
in
mov
out
lock
jg
xor
popf
sbb
cmpsl
and
and
iret
mov
repnz
mov
outsl
movsb
ja
pushf
pop
xchg
int3
ja
xor
mov
push
aaa
mov
jno
je
inc
aas
popa
mov
test
daa
clc
pusha
out
pop
ja
adc
in
cmp
sbbb
shll
lds
in
mov
call
es
push
mov
ds
cmp
push
adc
xlat
and
mov
insl
xchg
and
aas
cmp
jno
shrl
cwtl
cmc
add
sbb
xor
mov
jae
pop
push
test
mov
pushf
scas
add
and
cmp
pop
hlt
lcall
outsl
popf
xor
negl
movl
xchg
out
gs
or
sub
mov
xor
mov
adc
jbe
and
or
gs
test
xchg
aam
popf
inc
stc
lods
stc
inc
jg
cmpsl
mov
and
addl
cwtl
jmp
inc
in
adc
mov
movsl
xchg
dec
sbb
and
sbb
aas
mov
out
jmp
pop
push
test
or
nop
add
loope
jmp
addl
out
movsl
addr16
gs
es
pop
sbb
mov
pop
sbb
dec
jl
ja
cmp
imul
cmp
test
mov
out
shl
call
jg
cli
lods
mov
and
ss
inc
mov
dec
and
push
int
in
jns
jne
xor
in
jge
jns
mov
cmp
add
sbb
mov
cmp
test
mov
mov
pop
popf
lcall
jl
out
add
sub
cmpsl
repz
adc
xor
adc
mov
mov
std
mov
icebp
mov
xor
jecxz
jg
dec
jmp
hlt
in
mov
mov
ret
iret
cli
cmpsl
jecxz
dec
je
sbb
xor
es
lea
test
movsb
loop
fbld
pop
mov
rorl
sub
adc
das
cmp
ja
shll
add
enter
rcl
call
and
mov
jge
aas
rolb
cmpsl
cmpsl
rcll
cmpsb
sub
and
shll
dec
out
lcall
push
mov
mov
cmpsl
push
xor
add
mov
push
scas
cmc
iret
pop
xor
scas
lret
cmpsb
test
ss
aaa
lock
in
push
lcall
daa
inc
mov
cmp
xor
lea
int3
ret
fstl
xor
jne
call
mov
xor
lret
jns
mov
add
fsubrs
mov
and
jae
mov
sbb
test
mov
ret
in
stos
lods
mov
pushf
inc
and
add
inc
xor
cmp
inc
call
mov
cmc
mov
aam
gs
jae
cmp
mov
fdivrl
mov
sub
mov
scas
and
inc
shll
pop
aaa
xchg
movsl
rcrb
dec
adcb
movsb
push
loop
mov
jb
mov
mov
sbb
jecxz
imul
in
test
or
aad
stc
pop
sti
xchg
popf
push
jae
int
into
enter
inc
arpl
dec
xchg
out
and
imul
clc
pop
dec
enter
repz
into
int3
mov
cltd
pusha
pushf
and
enter
aad
pop
jo
push
xor
lahf
aas
cmpsb
imul
out
or
adc
aaa
xchg
test
push
lock
cmp
adc
adc
lea
adc
jno
pop
ficomps
ljmp
test
jb
mov
cmp
sub
mov
cmpsl
jl
push
mov
mov
xchg
fsubs
xchg
push
lea
cmp
cmpsl
cmc
dec
jbe
jge
addr16
movsb
push
mov
out
cmc
add
mov
out
sbb
jl
enter
pop
pop
movsl
push
mov
or
add
gs
fisttpll
arpl
call
dec
or
popa
repz
xor
mov
and
inc
mov
pushl
daa
cmpsl
adc
lock
mov
testb
mov
and
sub
adc
in
aad
sub
cmc
aas
or
mov
inc
inc
mov
lds
nop
cltd
scas
imulb
xchg
stc
sub
movsw
jmp
inc
lds
xor
push
fsubr
pop
pop
push
insb
ljmp
ret
jnp
push
adc
inc
stos
lods
lcall
dec
mov
iret
in
add
mov
xor
sahf
call
ja
imul
inc
rol
mov
push
pop
fstl
and
popf
xchg
out
stos
xor
and
lahf
dec
xchg
cld
and
je
cli
cmp
xor
jbe
xchg
gs
or
dec
xor
pop
lea
xorl
pop
push
lahf
sub
mov
mov
adc
dec
cwtl
and
xor
test
and
loopne
add
adc
and
out
lcall
mov
mov
inc
je
and
mov
jecxz
dec
or
movsl
bound
or
aaa
int3
cmp
ljmp
push
push
aad
mov
adc
mov
xchg
pop
and
jmp
dec
add
ret
mov
sti
jmp
sbb
loope
pop
xor
jnp
mov
and
and
sbb
ret
and
cmp
add
ds
mov
imul
mov
add
pop
sub
xor
jno
cmc
cltd
inc
adc
xor
add
mov
jmp
sub
xor
push
cmpsl
out
pop
subb
mov
pop
call
out
jle
lods
jno
push
in
cmp
cli
movsl
push
mov
pusha
pusha
movsb
sarl
sub
sbb
ja
fmul
push
dec
ja
pop
jae
jecxz
sbb
push
sbbb
popf
sbb
dec
and
out
fldenv
xor
popa
int3
mov
popf
push
dec
negb
and
or
push
orl
push
sub
scas
mov
test
push
and
jg
out
shrb
pop
jmp
or
sub
push
xor
rcll
push
js
xchg
mov
xor
add
dec
cmp
pusha
loop
out
cmc
adc
stos
xchg
dec
and
inc
jae
push
mov
int3
push
popf
dec
je
xor
jg
or
fstpt
xor
fidivrs
mov
cmp
mov
shr
aam
add
aas
mov
ds
aam
lea
stc
jno
xchg
mov
add
or
orb
lahf
jmp
in
xor
sbb
outsb
adc
out
ljmp
push
hlt
mov
cmp
inc
test
pop
push
out
pop
mov
mov
loopne
sbb
add
cmpl
cltd
inc
pusha
les
push
mov
shll
les
mov
jbe
inc
pushf
outsb
xorl
data16
in
incl
mov
rclb
sub
icebp
add
mov
out
lods
push
adcb
out
xchg
stos
lods
add
xchg
ss
mov
ja
aaa
loop
pop
or
push
mov
mov
xchg
pop
inc
movsl
inc
pop
dec
pushf
dec
shrl
cmp
int3
cwtl
xchg
cmpsl
cli
and
aad
xor
mov
pop
test
movsl
in
pop
inc
mov
out
push
testb
mov
or
push
add
cmpsl
test
pop
pushf
jbe
jne
cmpsb
fstps
xchg
fisubs
and
xorl
idiv
jne
inc
rcrl
enter
out
jmp
les
sbb
movsb
pop
stc
movsl
xor
outsb
mov
pop
inc
in
pop
gs
sub
push
mov
cmc
loopne
dec
jne
pop
mov
xchg
and
pop
pop
nop
jo
stos
mov
in
stos
bound
jge
cld
add
adc
add
or
or
and
lods
lds
fucompp
xchg
rcl
cmc
pushf
mov
andl
sbb
lcall
jo
in
cmp
add
sub
idivl
sub
jmp
inc
mov
pushf
mov
inc
mov
pop
mov
cmp
push
dec
add
dec
pushf
xlat
lea
jne
xor
shll
leave
es
push
stos
mov
mov
cmp
call
sbb
faddl
clc
adc
mov
cmc
std
arpl
mov
and
iret
mov
test
jae
test
addr16
call
ds
push
lahf
xor
out
jne
loope
or
dec
and
xor
add
js
sub
aad
inc
or
mov
dec
fstl
xchg
xchg
stc
sbb
or
clc
mov
inc
enter
xchg
add
add
and
mov
adc
mov
jge
and
clc
sti
sbb
movsl
gs
or
test
and
aad
in
jl
out
or
mov
push
repnz
cli
lret
addr16
add
sahf
neg
lret
arpl
cmp
outsl
not
cmp
lea
dec
stos
popa
jmp
test
jne
dec
push
dec
jns
add
adc
enter
push
push
scas
testl
fsubrl
js
pop
lret
jp
or
mov
stos
sub
adc
je
aaa
push
jmp
and
jnp
push
pop
inc
out
ja
leave
inc
dec
int3
adc
add
and
outsl
enter
aas
repz
bnd
jmp
loopne
pop
and
and
inc
and
cmc
cmp
in
mov
repnz
jmp
movsl
leave
jge
fwait
shlb
arpl
jnp
push
cmpsl
sbb
pop
imul
stc
popf
xchg
insb
and
icebp
adc
cs
mov
mov
cld
mov
sbb
push
idivb
pop
xor
imul
and
nop
pmaddwd
cli
xchg
dec
insl
test
xor
adc
cmp
mov
xchg
xor
sbb
in
int3
xor
and
jmp
hlt
dec
xor
imul
out
jl
das
pop
aad
scas
mov
pop
imul
icebp
imul
in
add
xor
jb
mov
icebp
repz
adc
decb
inc
jmp
daa
inc
push
or
mov
cmp
insl
mov
xor
shlb
jb
int3
aad
and
daa
push
in
and
std
pop
lods
shll
pop
outsb
cs
and
add
mov
in
imul
loope
inc
stos
in
jecxz
mov
xor
loope
and
std
or
and
in
sti
and
sbb
pop
sub
cmpsl
mov
aad
or
xchg
jecxz
adc
sub
mov
and
mov
pop
cmp
jno
les
sub
out
movsb
gs
jae
inc
jns
pop
push
lds
adcb
pop
and
push
dec
test
in
test
daa
adc
inc
jb
and
std
jl
add
std
les
jbe
fsub
insl
inc
jge
push
pusha
add
in
popl
sti
je
loope
pop
mov
or
add
and
and
cmp
jl
mov
mov
andb
mov
and
jp
movsb
push
js
push
subb
and
lods
sub
cmpsb
push
jecxz
cmpsl
and
push
add
and
fnstenv
inc
add
and
aaa
xor
loop
and
and
push
in
mov
movsl
and
jo
xor
and
inc
push
add
fcompl
mov
adc
cmp
loope
xor
mov
ds
sbb
pop
cmp
jle
and
daa
cmc
adc
xor
inc
inc
pop
addl
ret
sbb
jl
add
adc
xlat
sub
stos
in
add
jg
dec
jnp
lds
add
cmp
shlb
lea
cmp
and
push
out
and
fsubl
xor
lcall
sbb
in
push
or
push
xor
mov
fs
mov
es
popa
and
in
divl
pushf
jl
call
clc
lcall
mov
dec
inc
addr16
mov
xlat
and
shl
hlt
sbb
daa
mov
mov
rcll
mov
in
ffree
xor
xchg
push
inc
daa
loopne
or
cmp
pushf
dec
out
cwtl
loope
xor
inc
and
mov
and
and
mov
mov
sub
js
hlt
xchg
and
dec
pop
lds
and
xchg
and
movsb
outsl
pop
and
mov
cmpsb
sahf
sub
and
loope
jmp
scas
adc
arpl
add
int3
mov
out
cmp
cmp
iret
and
mov
in
mov
ds
dec
das
movsl
aaa
and
out
js
push
mov
cmp
mov
clc
mov
movsl
aaa
mov
xchg
fsub
les
loope
push
in
shrl
lds
jns
jl
xchg
inc
sti
mov
js
and
roll
mov
movsl
fnop
mov
roll
or
daa
and
dec
jmp
les
jnp
add
mov
inc
fcomps
addb
or
inc
inc
enter
mov
imul
mov
addr16
dec
in
xor
roll
divl
xor
es
cmpl
mov
in
and
mulb
cmp
adc
xor
push
rcll
and
or
xor
sub
aaa
mov
ja
mov
lods
sahf
dec
inc
and
adc
and
or
shlb
xchg
and
ljmp
xchg
sbb
loopne
push
and
and
dec
and
add
pop
xchg
andb
imul
xor
mov
das
lods
fisubs
loop
and
sti
or
repnz
popf
and
jecxz
pushf
and
push
int
xchg
test
mov
mov
enter
jecxz
das
and
add
js
xchg
ror
cmp
mov
in
push
xchg
rorb
jns
push
cld
cmp
loop,pt
and
lods
mov
adcb
rcll
rcrb
sti
dec
sub
aad
out
test
jnp
sbb
jae
test
mov
std
jmp
pop
mov
jecxz
dec
mov
aam
mov
daa
adc
ret
in
inc
xor
jl
cmc
clc
add
insb
popf
loop
sub
out
outsl
mov
and
cltd
cmc
mov
cli
cmpsb
pop
mov
mov
adc
aam
flds
push
xor
ret
out
enter
adc
std
sbb
movsl
ljmp
dec
mov
lcall
imul
ror
fcomps
call
push
stc
mov
aaa
imul
shrl
ja
hlt
add
sbb
stc
xor
scas
inc
test
xchg
pop
add
push
fwait
loopne
sub
adc
mov
sub
mov
leave
cmp
xor
movsl
jo
dec
mov
lahf
popa
sarb
push
data16
sub
add
loope
jge
subb
sbb
out
in
adc
div
idivl
inc
ret
dec
jnp
jns
add
stos
and
sbb
test
loopne
je
test
hlt
push
ror
outsl
or
pop
jle
lcall
adc
fnsave
or
cltd
fidivs
push
ja
mov
xorb
adc
movsl
cmp
push
lock
rol
mov
test
call
adcl
imul
mov
sbb
inc
jae
test
pop
scas
mov
loopne
scas
mov
cwtl
inc
int
push
popa
mov
xchg
push
push
mov
loop
pop
mov
sarl
insl
inc
inc
lock
adc
das
sbb
push
xlat
mov
add
add
jl
pop
test
and
js
in
repz
scas
xchg
and
idivl
jns
push
popa
jo
sub
lcall
cmpsb
cmp
push
mov
cmp
ljmp
sub
loopne
aad
lcall
sbb
idivb
and
dec
test
in
push
inc
shll
shrb
jp
add
ljmp
sbb
add
daa
lods
inc
pop
adc
nop
stos
cld
xchg
sub
fnstcw
jb
sub
loopne
nop
in
jae
jl
inc
ja
jmp
dec
jecxz
mov
mov
dec
mov
adc
out
inc
cli
shll
pop
pusha
cmpsb
int
mov
dec
mov
sahf
out
xor
call
mov
lcall
and
popf
mov
adc
pop
ja
in
jo
lahf
in
bound
add
lea
stc
xlat
inc
sub
and
adc
loop
int3
in
addr16
and
in
jmp
popf
out
lahf
jb
cs
lcall
rcrl
stos
jae
lahf
insl
add
sub
mov
add
cmpsl
push
repnz
pop
inc
and
adc
cmp
xchg
and
mov
xor
inc
dec
minps
imull
cltd
pusha
fadds
xor
leave
lods
ret
xchg
dec
cmp
xor
push
add
mov
popf
jecxz
dec
inc
dec
lahf
cmp
inc
les
sbb
jbe
imul
inc
in
xor
jae
in
xchg
pop
mov
sub
push
fdivs
mov
ss
ljmp
repnz
enter
push
imul
or
jg
call
es
icebp
lret
inc
and
cmp
xor
test
ss
mov
std
scas
pop
mov
orb
out
sub
cmc
and
pop
dec
xor
jne
sub
mov
and
int
jnp
xor
dec
jo
pop
inc
movb
sbb
loope
jae
fs
cld
push
imul
adc
inc
aas
mov
test
add
in
decb
sbb
cwtl
movsl
sub
adc
push
in
add
fwait
aas
stos
xchg
adc
movsb
insb
sbb
jp
or
xchg
sbb
int3
dec
pop
insb
xchg
jnp
push
xchg
xchg
bound
lock
adc
or
push
xor
inc
outsl
leave
test
mov
addr16
sub
ret
in
lret
stc
and
and
mov
insb
mov
add
jnp
cltd
mov
daa
in
mov
jae
outsl
mov
in
fisubs
shlb
stc
out
jbe
lock
loop
inc
pop
cmp
dec
mov
cmc
add
hlt
lods
push
xchg
cmp
mov
and
jle
enter
je
cmp
mov
jo
wrmsr
dec
sbbl
out
in
mov
fcompl
pop
adc
mov
aas
add
pusha
inc
or
sti
lret
mov
int3
ja
lcall
int3
adc
dec
cmpsb
and
push
xchg
inc
iret
into
fimuls
out
out
mov
jae
xchg
pop
sbb
sbb
inc
xchg
cmc
lahf
adc
popa
add
xchg
pop
or
fstpl
in
dec
jecxz
jo
mov
pushf
cli
sbb
into
popl
push
pop
inc
xor
popa
xor
jmp
mov
in
mov
cmp
cmp
clc
sbb
lods
xor
mov
clc
movsl
sub
out
repnz
aam
mov
jae
adc
imul
mov
jmp
mov
ljmp
cltd
pop
lock
sbb
inc
shlb
inc
push
movsl
push
pop
rorl
pop
out
scas
push
pop
dec
outsl
test
lahf
adc
addr16
ficompl
test
mov
xchg
push
testl
insl
or
out
and
mov
ror
mov
cmp
cmpsl
stos
xor
movsl
mov
iret
dec
push
add
mov
dec
loop
lahf
stos
xchg
imul
jae
xor
fldl
mov
push
sti
sub
js
inc
pop
pusha
or
fdivrl
dec
mov
cmp
adc
dec
mov
mov
and
pop
inc
mov
jne
orb
shl
cli
push
dec
jp
aaa
push
xchg
ret
push
leave
mov
push
loope
or
or
add
and
cmpsl
icebp
decl
mov
por
inc
pop
mov
in
mov
add
pop
call
std
iret
shll
scas
push
pop
or
adc
addl
js
or
cmpsl
in
pushf
push
mov
ss
mov
inc
pusha
jae
ja
repz
cmc
fildll
push
loopne
mov
sahf
mov
popf
stc
dec
loope
jo
aad
test
mov
jne
add
into
lret
push
push
add
sbb
int3
test
xor
lahf
sbb
add
cltd
and
jl
and
pop
cmp
xchg
scas
dec
in
jecxz
movsl
jo
add
pop
les
inc
lahf
stos
xor
imul
ljmp
and
dec
push
test
dec
cmc
gs
push
arpl
jb
xor
pop
push
jl
jo
xor
lods
cmp
cmpsl
inc
inc
mov
sub
inc
sbb
inc
aas
xchg
shr
sti
frstor
mov
movsl
cwtl
sbb
lods
loopne
fs
inc
add
test
mov
loopne
and
cmp
sub
js
jb
pop
in
adc
test
and
mov
test
imul
add
pop
in
aas
int
adc
rcrb
data16
lods
inc
push
pop
push
dec
pop
inc
pushf
pop
push
js
idivb
pop
out
mov
mov
sbb
push
push
pop
popa
sarb
inc
int
and
sub
jnp
scas
pusha
pop
js
fs
out
cmpsl
daa
mov
repnz
jmp
pop
fcmovnbe
clc
lret
scas
cmpsl
int3
cmc
mov
push
jl
add
or
mov
movsb
cmp
pop
daa
mov
xchg
call
xor
sbb
imul
in
sbb
push
jmp
xor
clc
shr
adc
cmp
mov
cmp
in
cwtl
xchg
cmpsl
push
or
jns
xlat
fucomp
cmp
fprem
aad
sbb
pop
xor
jmp
mov
iret
subl
ljmp
inc
sbb
sahf
sbb
mov
add
jmp
scas
in
and
adc
add
cld
out
out
cmc
dec
sbb
dec
pop
push
inc
jae
loopne
lock
test
mov
dec
and
add
mov
or
std
movsl
fsubrp
and
ret
jmp
push
mov
sbb
sbb
in
ja
mov
insb
and
push
pop
xor
push
dec
mov
xchg
cli
jecxz
in
pop
jg
mov
stos
and
dec
xor
and
lahf
pop
xchg
subl
xchg
jne
cmp
idivb
push
pop
fwait
int3
sub
pop
mov
lods
and
aaa
stos
dec
mov
out
pusha
imul
sbb
xchg
and
rorb
aam
xor
call
mov
pop
arpl
xor
fadds
dec
int
daa
cmc
and
shrl
addl
inc
lods
push
inc
lea
pop
roll
scas
sbb
loopne
out
cmp
cmc
sub
pop
pop
addr16
repz
mov
dec
gs
mov
xchg
lea
xchg
cmp
adc
sbb
stos
pushf
cmp
inc
sbbl
test
add
mov
in
daa
or
xor
int3
xchg
cmpsl
daa
mov
shlb
in
push
mov
dec
jl
lahf
ret
lret
sahf
pop
pop
or
dec
mov
ror
jnp
out
adc
test
add
shll
aad
out
into
movsl
sbb
repnz
add
es
addb
mov
adc
xor
fdivl
iret
mov
mov
push
sahf
sbb
call
inc
mov
icebp
jbe
movsb
bound
and
jbe
mov
xor
clc
xchg
out
mov
sti
sbb
frstor
pop
push
or
pushf
inc
lods
mov
xor
mov
stc
insl
xor
scas
push
add
xchg
pusha
mov
push
dec
sbb
lahf
adc
and
vfrczsd
inc
jl
dec
test
push
adc
cmp
or
lahf
outsb
mov
jb
cmc
cmp
jge
inc
xchg
mov
sbb
push
hlt
add
lret
out
push
push
push
test
repnz
nop
dec
dec
dec
cmc
or
nop
pop
ror
push
fstps
in
xchg
cmp
jmp
or
popf
mov
mov
cmc
jno
push
or
xor
lea
dec
hlt
std
dec
mov
scas
xchg
mov
in
das
inc
std
mov
adc
lahf
mov
xor
imul
xor
data16
arpl
push
and
xor
aam
out
and
movsl
hlt
cmp
cmp
in
aaa
cmpsl
jmp
out
add
fistps
pusha
out
shlb
jbe
es
sub
or
cld
inc
fdivl
ja
jo
xor
fldenv
in
icebp
lock
inc
mov
sbb
jl
push
je
jno
sub
inc
jl
and
mov
sub
or
dec
daa
divl
mov
cmp
enter
insl
ss
xor
mov
xlat
lcall
jne
mov
mov
vmovapd
shlb
es
xchg
sbb
aad
hlt
cmc
ss
and
inc
sbb
jle
int3
mov
ja
mov
lahf
xor
jb
inc
aaa
push
jne
pop
orb
ret
cltd
inc
mov
shlb
lds
jbe
ret
add
and
cmp
inc
mov
xor
jp
mov
add
add
dec
test
xchg
jp
lea
jae
ret
mov
sahf
inc
dec
movsl
cwtl
xor
sub
mov
out
mov
cmp
arpl
sub
pop
add
lahf
leave
mov
cmc
rcll
adcb
repz
push
adc
ss
jbe
shrb
mov
jmp
fstpl
jbe
repnz
inc
jl
repz
scas
addb
in
pusha
mov
in
mov
pusha
push
push
aam
push
pusha
mov
push
nop
popf
jns
divb
stc
mov
and
jne
mov
sub
inc
push
sbb
test
dec
jo
int3
add
push
push
jae
testb
ja
mov
mov
mov
mov
xor
xor
pop
call
sbb
jo
pop
stos
mov
adc
ss
pop
mov
mov
xchg
xor
push
mov
cmp
sbb
mov
mov
mov
fists
lcall
jae
lahf
and
sbb
mov
xchg
pop
test
lea
fcomps
out
fmuls
cltd
scas
xchg
sti
out
aad
ljmp
cmc
iret
sbb
add
xlat
and
nop
and
sub
push
cmpsl
push
decl
fs
pusha
sub
cld
divl
gs
ja
inc
pop
jmp
in
cmp
jnp
fisubrl
cltd
jbe
mov
inc
clc
cmpsl
and
pushf
aad
rorb
cltd
cmp
push
mov
test
data16
inc
inc
rorb
incl
ds
mov
jo
fld
xchg
lahf
hlt
shrb
out
xor
push
jae
jo
adc
xchg
inc
pop
cmp
xchg
enter
stos
adc
mov
push
movsb
repz
adc
out
pop
pop
int
mov
push
mov
stc
or
imul
shl
popf
sbb
std
inc
dec
pop
dec
mov
jl
jmp
mov
shl
push
xchg
cmp
aaa
sub
pop
mov
loope
sub
lcall
adc
pushf
rcrb
lret
jmp
mov
mov
cli
add
lahf
jmp
jmp
imul
insl
out
mov
rol
cld
dec
fs
add
inc
jg
cmpsb
push
pop
cmp
inc
add
shll
adc
adc
cmp
or
ljmp
in
push
and
jmp
or
adcb
icebp
xor
adc
push
lret
dec
sub
loopne
inc
jo
inc
add
out
xchg
jo
dec
call
dec
mov
movsl
lods
adc
movsl
cmp
mov
loopne
fisubl
loop
mov
pop
jnp
loope
sbb
hlt
in
mov
push
sub
push
sub
mov
std
xor
xchg
sbb
push
aaa
stos
stos
push
aaa
cmp
push
cmp
daa
mov
cmc
mov
daa
xor
fistpll
mov
gs
xor
pop
sbb
mov
and
std
sbb
movsl
cmpsb
add
xorl
inc
test
fnstenv
nop
mov
and
and
fdivl
push
mov
frstor
imul
mov
shr
xor
out
popf
scas
clc
pop
mov
adc
movsb
movsl
lock
xchg
mov
outsl
jmp
gs
mov
pop
inc
cmp
lret
add
mov
push
loope
out
icebp
push
sbb
dec
push
pop
push
aas
ljmp
push
xchg
add
mov
push
cmp
and
add
add
sub
fs
dec
jge
inc
sbb
test
mov
lret
and
mov
sub
mov
in
jae
lret
xor
mov
in
and
testb
out
je
sahf
loop
ja
frstor
outsl
mov
inc
pop
movsb
xor
pusha
mov
pop
xor
es
imul
or
test
mov
sub
lds
pop
pop
xor
push
and
push
add
sbb
out
test
fidivrl
inc
inc
pop
jne
icebp
aaa
sub
nop
and
ss
fs
enter
inc
cmpsl
jg
inc
std
push
jle
repnz
mov
hlt
int
adc
dec
roll
pusha
inc
aad
lcall
movsl
popa
inc
and
movsl
fcompl
sub
mov
int3
dec
push
popa
mov
xchg
lret
sti
sub
jns
daa
test
and
cwtl
xor
pop
xor
movl
or
push
inc
shlb
cmpsb
aaa
xchg
jmp
or
mov
dec
add
sahf
decb
rcll
mov
ficompl
pop
mov
pushf
ss
dec
add
jo
sbb
sbb
bound
xchg
out
dec
push
daa
push
sbb
into
or
and
cmp
jnp
add
adc
xchg
outsl
arpl
aaa
std
xor
xor
jmp
lods
pop
std
inc
rcrl
stc
in
and
and
push
pop
xchg
or
or
lahf
dec
mov
pop
popf
ja
mov
sbb
sbb
mov
cwtl
test
aad
sahf
and
add
cmpsl
adc
dec
in
or
bound
pop
in
hlt
int
xchg
int3
pop
in
sub
sbb
shr
pop
push
pop
repnz
cmp
es
sbb
push
xor
ret
xor
out
xor
dec
cmp
jbe
cmp
sub
movsb
jl
sarl
add
mov
push
push
adc
and
dec
mov
add
and
xorl
ljmp
jo
cmp
in
cmp
mov
push
jnp
inc
jecxz
lea
data16
aaa
add
jae
jne
stc
out
es
dec
jae
fstpl
clc
xor
add
inc
pop
gs
rolb
inc
xor
test
and
mov
sub
sbb
sub
jae
xchg
pop
add
popa
mov
test
ds
adc
clc
add
roll
in
pop
es
mulb
xor
movsl
push
lods
popf
or
je
jne
insl
aaa
clc
pop
mov
std
mov
mov
push
ja
lret
push
sbb
loop
or
aam
insl
push
mov
outsb
aaa
aaa
add
jg
adc
cltd
pop
es
pop
push
xor
mov
xchg
xor
fprem
add
popf
pop
jecxz
mov
add
mov
cmpl
or
fildl
xchg
aaa
jns
jmp
pop
mov
test
ret
lds
lds
jmp
addr16
out
std
xor
in
outsl
movsb
push
incl
int3
lods
push
mov
test
jno
ljmp
push
cmc
xor
mov
cmc
jmp
adc
icebp
cld
dec
lock
mov
xor
sbb
enter
rorb
add
jecxz
dec
xor
scas
out
add
jge
push
call
movsl
int
push
sub
push
or
jno
xchg
lea
fisttps
xchg
in
mov
icebp
dec
lahf
jl
inc
pop
dec
dec
mov
movsl
mov
nop
in
lds
jecxz
adc
sahf
mov
lcall
cmc
fwait
sbb
pop
repz
lock
push
add
sbb
and
in
xor
mov
jo
cmp
add
ficoml
loopne
jge
add
add
out
ror
pop
or
push
sub
mov
add
divb
add
nop
jnp
ret
out
adc
adc
and
imul
rcl
sbb
cmp
mov
jb
outsb
inc
scas
mov
push
mov
fsubrl
and
das
test
jae
cmp
ja
insl
xor
xor
and
test
pop
add
mov
dec
mov
mov
sub
popa
das
repz
decb
scas
enter
cmc
sbb
cmc
xor
out
pop
aas
inc
add
push
cmpl
xor
sti
leave
jg
sub
add
push
mov
and
fucomip
test
jg
push
test
loope
fdiv
adc
icebp
lds
inc
jne
sbb
and
jno
push
test
lods
cs
push
add
arpl
mov
insb
jmp
dec
es
pop
jo
xchg
ja
push
push
add
call
lret
adc
out
addr16
jb
xlat
pop
cmpsb
mov
or
dec
mov
addl
adcb
mov
adc
ss
inc
lds
cmp
pop
or
and
xchg
nop
push
imul
fldenv
aaa
push
pop
in
arpl
mov
into
mov
dec
gs
mov
dec
or
negb
sahf
push
out
and
loope
pop
xchg
cmp
lahf
pop
push
aam
push
idiv
sahf
jne
xor
mov
shlb
int3
aas
sbb
daa
aad
in
cmpsl
jo
adc
bound
enter
xor
addr16
cmp
sbb
mov
cli
and
orl
fsts
lret
xchg
movsb
sub
fstl
push
aad
lds
cmpsl
pop
xor
sti
pop
es
cmp
arpl
ss
lcall
xchg
iret
mov
sbb
mov
lea
fidivs
lds
icebp
mov
std
sub
dec
mov
inc
incb
mov
in
jns
jl
sbb
jg
and
cli
adc
sub
in
sbb
and
insl
in
jo
fisubs
mov
adc
mov
scas
mov
stc
movsl
popf
jecxz
add
test
sub
cmp
jmp
int3
jmp
adc
out
shrl
mov
movsb
pop
xchg
daa
cld
jb
std
pop
and
lea
aaa
sbb
mov
sub
pop
and
iret
or
sub
add
adc
fildll
inc
addr16
pop
dec
je
clc
mov
dec
sub
mov
out
int3
scas
mov
gs
mov
mov
in
lahf
dec
cs
push
testl
les
add
pop
and
ret
xchg
adc
loope
mov
add
and
mov
ficoml
or
sbb
dec
cld
and
fwait
inc
mov
cmp
adc
cmp
jl
popf
testl
jmp
mov
or
movsb
sbb
xor
mov
jmp
mov
pop
push
adc
loope
inc
stos
xchg
xor
in
mov
dec
and
ja
inc
clc
movsl
cltd
cmp
sub
rorl
roll
mov
jmp
stc
cmpsl
mov
inc
ds
inc
add
jne
inc
inc
adc
inc
aam
jne
inc
add
or
loop
lds
push
mov
jl
popa
dec
push
incb
cmpsl
gs
icebp
xchg
dec
and
mov
pushf
push
pop
clc
mov
pusha
pusha
sub
cmpsl
push
and
aaa
ror
inc
adc
scas
inc
sub
xchg
cmc
sub
test
fcoms
jge
ss
mov
sbb
shlb
scas
hlt
cmp
dec
ret
mov
fwait
push
mov
add
xchg
int3
xchg
hlt
sbb
jg
movsb
das
test
xchg
xor
dec
xor
dec
pop
shll
or
mov
mov
cmp
pop
in
xor
sub
add
mov
lahf
mov
push
pusha
cli
dec
push
xlat
cmp
xlat
cs
jo
flds
dec
mov
and
adc
jl
call
sub
cltd
mov
mov
mov
push
inc
adc
inc
xor
mov
lods
inc
xor
pop
cmc
xchg
inc
gs
in
xchg
insl
cmp
cwtl
mov
test
jl
jge
mov
icebp
inc
xchg
mov
sahf
fistpll
and
cmp
std
mov
xchg
jne
cmpsb
loopne
sub
movsb
jnp
cmpsl
addr16
inc
jmp
les
lods
xor
push
shll
pop
cmp
jecxz
jo
jp
sbb
xchg
lock
repz
sbb
sti
inc
mov
aaa
add
sahf
aas
jnp
int
nop
lcall
push
call
xor
add
out
ret
sbb
dec
popw
cmp
daa
or
gs
das
fidivs
enter
xchg
xchg
add
push
push
ja
pusha
iret
adc
sub
push
inc
inc
aas
in
sbb
xchg
fs
mov
add
sbb
xchg
ror
and
dec
scas
sbb
out
sahf
aam
loop
xor
xor
dec
fs
pop
add
add
inc
mov
cmp
add
lods
adc
loope
ja
adc
xor
jl
adc
add
and
inc
aad
jl
add
inc
mov
in
sbb
imul
mov
notb
or
roll
and
movsl
popf
and
test
xchg
xchg
sbb
cs
call
lahf
xor
cli
and
dec
xchg
inc
xchg
jbe
push
testb
mov
jns
pop
js
xchg
pop
sub
data16
inc
sbb
dec
shll
jae
sub
lahf
lds
jno
out
mov
movsl
cmp
in
sar
cmp
xchg
rcrb
movsl
aam
xchg
mov
aaa
ljmp
sbb
sbb
lods
shll
inc
outsb
pop
inc
push
push
mov
call
sub
or
push
lods
cmp
xor
negl
cmp
sub
mov
dec
cltd
xchg
jb
fwait
test
pop
daa
in
mov
jl
push
aad
shll
mov
mov
xchg
or
jmp
adc
mov
clc
aaa
daa
adc
loopne
mov
cmp
out
in
jp
inc
and
lock
fnstenv
mov
jecxz
dec
adc
push
and
in
jmp
jo
les
and
push
jbe
push
gs
inc
test
xchg
sbb
ret
bnd
movsb
xchg
push
jo
cmpsl
es
mov
js
adc
cli
test
int
std
addr16
aaa
lods
fwait
inc
sbb
xchg
aas
call
cli
pop
cmpb
lods
inc
jbe
ret
scas
out
popf
mov
movsl
and
or
jbe
insb
jne
in
mov
nop
cmc
xor
in
aaa
add
cmp
cmp
lahf
cmc
lock
xor
aaa
arpl
outsl
sub
call
or
adc
repz
or
mov
mov
outsl
loopne
xor
add
xchg
sbb
daa
mov
lahf
cmpsb
cmc
jnp
nop
sbb
subl
or
inc
and
mov
inc
ljmp
mov
jl
std
adc
lret
loopne
fmull
movsl
inc
pop
xor
and
popf
enter
adc
inc
cmp
lret
or
mov
sbb
enter
add
inc
cmp
xchg
fildl
in
push
call
cmp
sub
mov
mul
das
jmp
aaa
std
int3
and
fmul
jle
ret
in
xchg
and
cmp
in
aam
xchg
pop
sbb
sahf
cwtl
add
dec
outsl
pop
pop
adc
pop
das
dec
jl
stc
push
sti
dec
aaa
dec
movsl
sti
and
lret
mov
and
insb
subb
mov
cmp
jl
cli
sbb
in
jmp
je
icebp
pop
inc
rclb
aam
or
inc
cmpsl
sub
shl
push
dec
ss
jno
jmp
movsb
ficomps
push
int3
scas
inc
mov
cmp
mov
cmc
add
sub
and
les
cmp
test
mov
lods
dec
sbb
data16
bswap
push
inc
clc
aad
sbb
test
js
cmc
call
clc
cmc
xor
cmp
pop
hlt
pop
cmp
jl
mov
inc
adc
pusha
cwtl
jae
and
xor
push
jbe
xor
xchg
jnp
and
aad
pop
in
push
sti
push
ror
sbb
call
dec
cmpsl
sbb
cmp
cld
adc
cltd
rcrl
shll
xchg
std
adc
adc
xor
jb
add
inc
xchg
mov
lds
add
movsl
in
adc
adc
scas
push
lcall
jg
int
dec
adc
jns
jge
push
mov
lret
es
sub
daa
add
jmp
xadd
adc
dec
rorl
repz
xor
shr
test
pop
push
xchg
pusha
sbb
mov
out
jae
pop
cmpsb
cmp
add
xor
fmull
dec
ss
pop
pop
test
pop
insb
cmp
scas
xor
add
es
mov
cltd
xchg
push
jmp
push
sbbb
shll
pop
push
pop
cltd
je
je
out
mov
xchg
out
ja
insl
cmp
jae
cmp
call
in
std
add
cmp
ljmp
fs
sub
pusha
push
jecxz
lods
pop
xor
push
add
mov
cmc
imul
xor
cwtl
mov
mov
pusha
push
rcll
lea
and
stc
std
js
ljmp
push
cld
mov
cltd
pop
jno
in
mov
sbb
mov
mov
cmc
push
and
or
dec
sarl
pop
in
cmp
je
stc
leave
dec
rorl
sti
adc
and
das
aas
ja
mov
xlat
lock
fwait
imul
movsl
cmpl
insl
testb
lods
pop
and
mov
xor
sub
ret
xchg
push
ds
stos
jae
sub
movsb
idivl
xchg
fdivrp
inc
aaa
or
dec
lds
or
jle
sarl
mov
fwait
dec
mov
jbe
cmpsb
sub
insb
xchg
sub
push
push
inc
sub
ljmp
mov
sbb
mov
lods
test
movsb
pop
and
std
int
stc
jl
outsb
and
dec
xchg
and
jnp
or
mov
clc
ret
gs
popf
sbb
es
mov
loop
addr16
add
scas
movq
stc
stos
add
pop
std
scas
mov
clc
nop
mov
test
ret
mov
mov
in
sub
mov
stos
xchg
inc
cltd
push
imul
mov
aad
pop
nop
movlps
mov
and
lds
cmpsb
dec
ds
xlat
or
sbb
cmp
or
sub
ffreep
std
sub
insl
in
sub
cmp
in
push
mov
push
or
cmc
or
ja
fnstsw
mov
sbb
cli
or
cmp
movsl
push
xchg
pop
addb
lret
mov
sahf
jne
inc
jne
push
fiaddl
and
divl
test
lods
mov
test
or
push
lods
push
xchg
cmp
sub
lock
mov
fsubrl
mov
clc
mov
mov
jo
push
or
cmc
adc
mov
pop
adc
orl
adc
inc
in
lods
sbb
cmp
into
add
ja
cmp
sub
clc
notl
testl
mov
jecxz
push
lret
pop
loope
rcl
inc
stos
jno
clc
mov
jb
aaa
lahf
sbb
mov
movsb
jmp
ds
xchg
cltd
call
lret
test
test
lds
inc
xor
jg
xor
cmp
popa
xor
in
push
gs
mul
cmp
dec
pusha
and
fidivrs
addb
add
stc
and
ja
or
stos
out
gs
push
sbb
xchg
mov
dec
pop
xlat
jne
inc
cmp
mov
stos
xchg
add
push
ret
test
gs
test
addr16
std
prefetchnta
dec
sbb
bound
rcr
mov
xor
mov
sar
add
inc
add
ss
pop
jge
enter
movsl
dec
lret
mov
xor
adc
push
ja
loopne
pop
mov
ss
call
ret
add
out
push
pop
and
mov
mov
cmc
dec
fs
gs
clc
loopne
aad
mov
pop
out
push
loop
mov
lods
ljmp
sbbl
dec
adc
xchg
xor
inc
mov
dec
aad
pop
shll
mov
xchg
jae
or
pop
adc
sub
out
sub
mov
adc
cmp
push
clc
add
ljmp
push
and
aam
adc
mov
ja
hlt
sub
iret
push
mov
mov
hlt
mov
filds
data16
std
jnp
js
lahf
sub
fdiv
inc
popa
shll
mov
and
or
jle
push
add
jne
std
xchg
stos
in
sbb
pusha
push
repz
adc
mov
or
xchg
jmp
pop
leave
adc
int
jbe
mov
pop
add
sub
aad
pop
mov
ds
adcl
pop
xchg
push
jbe
notb
aad
int3
ret
in
and
movsl
cmpsb
mov
push
daa
lods
sub
sub
jmp
or
cmpsb
mov
mov
mov
mov
lret
mov
cwtl
and
sub
inc
or
out
call
adc
ds
enter
sar
add
pop
mov
lea
rcll
int3
xchg
mov
cmp
ret
rorb
xchg
imul
inc
mov
insl
xor
cwtl
test
and
mov
cmp
mov
dec
push
rcl
inc
lret
or
add
icebp
jne
xchg
and
or
test
shl
leave
sbb
push
lds
lahf
cmp
add
sub
imul
flds
add
cmp
int
cld
jne
sbb
dec
test
sub
loopne
fdivl
mov
jne
and
adc
lahf
mov
and
push
lahf
cmpsb
cli
cltd
jl
out
outsl
jnp
xor
ja
lahf
mov
imul
push
jg
ror
rolb
push
jb
xchg
mov
pop
sbb
pop
es
sbb
push
int
movsl
xor
inc
sbb
mov
xchg
mov
push
cmc
adc
mov
cmp
stc
pusha
loope
mov
cmc
ret
add
mov
lock
pusha
adc
and
leave
and
and
and
in
adc
jle
enter
inc
hlt
and
arpl
rclb
cwtl
pcmpeqw
ss
daa
add
pop
adc
in
inc
mov
inc
popa
mov
add
lcall
mov
mov
xchg
and
lret
inc
gs
rclb
jmp
pop
out
cmpsl
vmovshdup
mov
adc
mov
dec
rcl
call
fxch
mov
iret
xor
dec
push
or
or
mov
divl
push
scas
cmp
adc
notb
inc
jmp
pop
sub
pop
inc
push
push
sbb
sbb
xchg
dec
cmp
mov
sub
and
rcll
cwtl
int
in
dec
push
or
popa
cmp
pop
aaa
fnstenv
pusha
fwait
mov
test
out
sahf
cmp
mul
cmpsb
dec
mov
out
hlt
test
addb
push
ds
xor
inc
push
mov
insb
leave
dec
sub
lods
outsb
cld
cmpsl
std
cltd
ljmp
mov
push
stc
add
cmp
xor
xchg
xchg
sbbb
jle
aas
pop
push
xchg
sbb
in
js
je
xor
add
jo
mov
push
push
adc
push
mov
mov
js
mov
test
jnp
icebp
push
cmp
sbb
das
jae
cmp
add
in
mov
mov
lret
mov
fdivr
add
sub
inc
push
dec
dec
dec
je
lcall
xchg
repz
mull
movsl
call
mov
fwait
pop
adc
dec
sub
xchg
mov
jo
mov
jp
int
insl
andb
add
and
mov
call
pop
mov
and
and
std
jo
stos
sbb
stc
decl
xchg
sub
xor
sbbb
inc
sub
push
cld
fldt
repnz
in
mov
mov
in
sub
jbe
jle
insb
mov
sub
sub
mov
dec
push
xor
divl
gs
dec
and
pop
push
aas
or
inc
in
inc
movsb
cltd
movsl
jmp
or
jmp
and
push
aaa
fisttps
pop
cli
outsl
popf
fidivl
dec
lret
push
push
aad
sbb
cmp
adc
or
into
aaa
adc
pop
stc
xchg
mov
and
stos
leave
add
push
add
jg
inc
into
cli
add
add
repz
adc
ja
cmp
out
std
cmp
add
movsl
stc
mov
je
std
jae
xorb
test
dec
xchg
adcl
cmp
lods
cmpsb
jl
inc
loope
sbb
jg
roll
xor
sbb
jle
inc
or
push
mov
adc
jl
or
push
movsl
das
mov
fsubl
xchg
push
pop
aas
in
sub
and
adc
clc
push
leave
adc
mov
mov
xlat
les
sub
push
xor
push
in
add
ret
or
loope
jno
neg
in
xlat
das
das
fldcw
aaa
pop
fwait
jmp
out
pop
add
clc
push
add
pop
xchg
imul
add
or
lcall
jmp
test
dec
jmp
data16
or
dec
aad
sub
pop
jle
and
movsb
int3
int
test
cs
ss
xor
insl
aad
pop
fistl
adc
mov
pop
jae
pop
and
sbb
sbb
jne
es
testb
out
push
test
mov
negb
cmp
outsl
rcrl
stc
cmp
cmpsl
loopne
sti
dec
xlat
pop
shll
lcall
pop
mov
cmp
rolb
std
jae
push
sub
mov
add
daa
arpl
or
add
imul
in
jl
in
dec
gs
jmp
jmp
cld
push
pop
xor
push
fwait
pop
js
mov
jmp
pop
push
dec
add
or
push
repz
and
inc
jae
inc
ret
pusha
rclb
and
clc
or
ds
mov
jl
mov
movsb
ja
push
fstpl
xchg
outsl
pop
xchg
lret
mov
inc
das
mov
inc
lds
sahf
sbb
lods
jne
and
and
adcl
rsm
fnstsw
add
cs
xchg
aaa
jnp
mov
cmpsl
iretw
jnp
and
lret
push
sar
in
rcll
aam
gs
mov
repz
dec
inc
push
mov
fwait
jge
add
add
mov
ss
out
or
jo
mov
mov
dec
mov
or
push
ja
cmpsb
outsb
scas
lahf
push
pusha
shl
pop
enter
aaa
pusha
pop
scas
lock
jp
jae
loop
pop
jmp
in
movsl
or
scas
cltd
lret
in
test
scas
sub
aad
repnz
and
rorl
cmpsl
inc
mov
sub
and
cmp
sub
imul
addr16
adc
lret
test
mov
and
addl
addr16
sub
xor
int3
movsbl
lds
jg
fs
insl
xor
adc
test
stc
scas
in
jns
repnz
sub
pop
das
cmp
xchg
iret
or
in
cmpsl
jno
mov
cld
and
es
mov
and
repz
and
das
out
test
add
fs
adc
leave
push
push
cmp
xor
mov
mov
fidivl
jns
mov
add
mov
push
pop
out
pop
sub
ja
repnz
pop
and
lcall
icebp
mov
fstpl
mov
pop
mov
inc
sahf
test
jl
sub
and
mov
cmp
insl
mov
cltd
das
lock
cmpb
xchg
or
adc
xor
in
cmc
andb
sbb
stc
pop
mov
int
xchg
roll
inc
jmp
popa
mov
pmullw
and
daa
push
imul
movsb
cltd
loop
push
add
test
pop
jno
je
cmp
sub
pop
push
iret
mov
shll
xchg
xchg
aas
out
xchg
inc
sbb
xchg
repz
shl
dec
push
popa
mov
aad
dec
jo
adc
rolb
addr16
mov
imul
xor
sahf
pusha
nop
shrl
mov
cmp
push
and
roll
adc
and
xor
add
ret
mov
rolb
jo
xchg
dec
daa
sub
loope
insb
cmp
test
notb
xchg
push
out
stos
cltd
xor
xlat
jne
mov
inc
cmpsl
xchg
mov
int3
sub
jno
dec
lcall
aad
rclb
and
lods
inc
nop
push
mov
iret
ss
lea
fnstenv
sub
xchg
or
fsubrl
fucomp
add
mov
mov
jle
cmp
mov
cli
pop
xor
mov
jl
inc
dec
popf
out
sub
xorb
pop
aas
notl
push
jae
cmp
cs
sti
bnd
adc
fstl
xchg
movsl
test
js
mov
stc
or
das
lea
clc
movsl
std
cmpb
fwait
push
sahf
cmpsl
jae
and
test
movsl
mov
cmp
mov
lcall
mov
inc
mov
movsl
dec
out
icebp
add
inc
push
nop
mov
jae
mulb
mov
push
test
cmp
out
xor
cmp
scas
iret
push
fldl
aam
fdivl
mov
dec
fcomps
scas
sti
and
dec
in
and
cmp
cmp
sbb
mov
popf
mov
mov
xchg
xchg
pop
pop
jb
push
fcmove
push
push
add
dec
stc
xlat
pop
shlb
dec
cmpb
pop
loop
xchg
xor
mov
and
fldl
mov
stc
and
mov
cmp
mov
sbb
add
ljmp
inc
stc
aad
mov
pop
push
ja
stc
in
stc
aas
cmpsl
int
fs
fistl
pusha
add
shll
std
inc
jae
lds
add
aaa
push
in
inc
sub
and
in
inc
popa
lods
stc
in
inc
inc
std
inc
cltd
mov
aad
roll
add
sbb
sbb
jbe
cmp
dec
cltd
andl
aaa
cltd
jmp
out
push
ret
cltd
and
test
sub
fcoms
aad
mov
xor
push
mov
push
adc
or
dec
imul
xchg
xchg
add
repnz
jbe
ja
ret
pop
jo
lea
ds
xor
cs
adc
and
pop
mov
adc
inc
ror
insl
cmp
in
gs
push
hlt
data16
dec
pop
lahf
adc
sub
ja
test
dec
mov
in
ljmp
push
lds
in
addr16
mov
mov
lods
enter
imul
out
es
xor
gs
cs
dec
mov
xchg
hlt
out
mov
movsb
or
fdivs
sub
in
in
lret
aaa
push
es
stos
rclb
push
xchg
mov
dec
sbb
mov
add
push
inc
pushf
outsb
fcoml
inc
add
test
xchg
mov
cli
cwtl
testl
ljmp
popf
jmp
jne
popf
xchg
pop
data16
roll
push
icebp
sti
jae
stc
std
loope
push
fs
xchg
lods
test
add
movsl
stos
pop
sbb
sbb
xor
jo
sub
call
stc
imul
mov
add
dec
mov
push
daa
call
jmp
test
inc
mov
inc
cltd
xlat
add
in
adc
aam
bound
jmp
mov
xchg
sbb
dec
mov
sbb
stc
xor
jge
enter
addr16
adc
inc
stos
jmp
dec
dec
mov
or
xchg
xor
in
lds
or
mov
std
cltd
sbb
mov
repnz
pop
incb
or
cmp
inc
adc
adc
xor
ret
shll
push
or
xchg
outsl
mov
xchg
pop
mov
jnp
xor
fstps
mov
jge
aas
in
imul
pop
insl
dec
mov
push
outsl
push
cwtl
cmp
mov
movsl
aam
push
repz
setp
or
test
jmp
std
lock
sbb
test
jmp
fnstcw
sub
int
out
sbb
and
cmp
sbb
mov
ss
lds
mov
int3
dec
xor
inc
push
in
inc
push
add
and
call
or
xchg
push
and
push
add
and
shlb
adc
aad
repnz
push
dec
adcl
cmp
testb
sarb
in
movsl
loopne
sbb
mov
or
mov
lahf
scas
jns
mov
sub
push
pop
and
cmc
mov
xor
push
xchg
xor
or
dec
jge
pop
out
cs
js
xor
cmpsl
sub
or
dec
or
lods
xorb
shr
mov
adc
stos
shll
sbb
adc
cmp
dec
ja
gs
lds
pop
mov
hlt
mov
push
adc
mov
pop
and
mov
cmpsl
sbb
dec
mov
xor
gs
xchg
push
cmp
mov
pop
xchg
daa
mov
ds
dec
xchg
pushf
or
cmp
jg
xor
mov
sub
insb
mov
adc
dec
sub
mov
imul
jo
adc
xor
fbstp
push
enter
pusha
int3
inc
mov
jo
push
xchg
push
cmp
int3
sbb
lahf
aam
movsb
jl
ret
je
xor
mov
and
inc
repz
insl
sub
xor
adc
dec
in
and
daa
frstor
sub
push
cmp
inc
daa
cmc
xor
orb
adc
sub
add
and
pop
adc
jge
subb
pop
inc
add
subb
mov
adc
cmp
loope
mov
and
sahf
sbb
loope
mov
movsb
xchg
shlb
popf
enter
push
fs
stc
outsb
push
daa
fistps
sbb
mov
nop
and
outsl
test
daa
mov
and
sub
adc
adc
movsl
jae
push
es
ja
push
mov
mov
fsubr
pop
or
jle
push
clc
jno
ljmp
inc
dec
mov
mov
mov
xor
mov
out
js
pop
add
xor
cmp
add
and
add
jp
aaa
pushf
pusha
jp
adc
inc
pop
cmove
fdivrs
in
sbb
or
dec
dec
sbb
movsb
and
or
xor
cltd
movsb
int3
inc
sbb
int
and
cmp
mov
clc
test
fsubs
rorl
add
movb
test
not
sub
repnz
scas
lea
add
fucomp
add
enter
out
inc
xor
stc
add
xchg
mov
loopne
mov
aam
les
adc
lahf
xchg
adc
lcall
call
ret
mov
jmp
cmc
call
in
subb
jne
add
outsl
ja
cmpb
lret
sbb
idivl
inc
in
add
xor
aaa
and
mov
and
dec
cld
mov
std
loop
ret
imull
pop
add
flds
pop
popf
push
mov
add
mov
stc
cmc
inc
jmp
out
and
push
repz
pop
pop
xor
jnp
mov
lcall
mov
pop
sbb
shl
loopne
sub
and
icebp
xor
daa
push
add
and
dec
add
xor
sub
jg
cltd
insl
jnp
popa
out
test
rcr
in
in
fmull
mov
sti
sarb
jo
insl
fisubs
add
icebp
cmpsb
popf
mov
and
lcall
movsl
ficoml
xor
xor
repnz
inc
lds
loopne
lock
mov
and
out
movsl
dec
mov
cltd
divb
mov
cmpsb
mov
push
sbb
lahf
sbb
add
mov
pop
jne
mov
xchg
push
jmp
inc
mov
jl
clc
shlb
rcll
and
or
xor
push
pusha
dec
mov
repz
clc
sti
xor
aaa
int3
push
jb
cwtl
insb
xchg
and
into
stos
cld
sbb
pop
dec
sbb
call
popl
cmp
pop
aaa
xchg
lods
add
push
mov
movl
pop
out
cli
adc
mov
cli
in
cltd
cli
pop
rcl
mov
mov
jo
and
into
popa
sub
add
int
lcall
outsl
iret
pop
addb
dec
sbb
inc
pop
sub
popa
mov
push
jns
add
push
pop
cmp
movsb
push
icebp
sub
cmp
std
cmp
movsb
cltd
add
or
int
aam
pop
xor
pushf
lods
push
inc
insl
sub
jmp
sbb
fmuls
incl
jns
aaa
inc
out
adc
lahf
and
sbb
std
push
pushf
jecxz
mov
mov
es
movsb
lret
adc
sbb
call
rcll
inc
and
mov
fsubs
jne
jmp
aam
cmp
loop
dec
in
out
in
add
and
xor
dec
rorb
dec
xor
and
jno
xor
add
enter
adc
shll
push
ss
xchg
int
and
ljmp
in
sbb
sahf
lods
or
mov
out
dec
or
aad
shll
shll
hlt
ret
or
repnz
or
ret
sub
or
mov
out
xchg
xchg
pop
shll
hlt
xchg
add
movsl
aas
loop
mov
xor
outsb
fidivrs
jl
cmp
lret
clc
sub
mov
pop
adc
popf
addr16
fcompl
dec
lret
stos
sbbl
test
and
jns
xchg
es
ret
cmp
push
add
jmp
dec
fmul
or
mov
add
add
xchg
or
inc
outsl
insl
and
fisttpll
cwtl
aam
mov
hlt
cmpsb
jp
inc
push
loopne
loop
dec
xor
ja
push
jmp
stos
movsb
cmpsl
or
pop
and
test
divb
mov
ret
cmp
int3
push
mov
pop
ss
jae
xchg
fstp
cmp
mov
lds
movsb
dec
lods
fiaddl
es
adc
dec
or
ret
or
xor
data16
call
imul
inc
add
mov
imul
and
addr16
and
jno
jp
mov
repnz
xor
jnp
cmp
gs
push
jo
mov
push
push
add
mov
jae
or
adc
bnd
call
lahf
test
mov
out
mov
add
xchg
add
push
xchg
lods
aas
fldl
aam
mov
jne
dec
movsb
popf
in
sub
into
fistpll
mov
lcall
pop
pop
ljmp
dec
outsl
xchg
inc
xor
ret
stc
clc
adc
cmp
and
add
jecxz
push
cmc
cmp
sbb
aad
pop
jb
adc
xor
enter
cltd
gs
pop
cwtl
shlb
or
icebp
adc
movsl
cmpsl
push
pop
pop
shl
xchg
sbb
mov
pop
cmp
daa
movsl
hlt
call
jmp
pop
cli
adc
pop
and
mov
aad
scas
aam
jmp
outsl
push
std
pmulhuw
lahf
fadds
add
push
xor
clc
pop
mov
loopne
mov
sub
in
xor
cmc
scas
out
jl
and
inc
fcompl
add
fsubrl
inc
out
fwait
push
fldt
cmp
lret
push
cli
or
and
sbb
cli
shll
nop
ficompl
mov
or
sbbb
xchg
pop
enter
and
pop
rorl
push
and
mov
cltd
icebp
and
jne
mov
add
bound
arpl
pop
enter
xor
inc
jmp
lock
test
fs
cmp
loopne
or
xor
movsb
out
bound
push
add
sbb
inc
movsl
loop
fsubrs
mov
jno
jg
add
dec
mov
mov
mov
sbb
xor
mov
dec
xchg
xor
aaa
and
xchg
test
adc
dec
stos
push
scas
xor
and
inc
jae
ficomps
out
call
dec
in
shl
addl
enter
clc
push
daa
stc
insb
int
repnz
test
dec
pop
push
into
cltd
mov
cwtl
pop
push
pop
push
lock
xchg
fadd
add
or
add
dec
inc
and
dec
mov
xor
loop
daa
popf
sbb
fisubrs
cmp
nop
in
jmp
outsl
xorl
lds
test
sahf
aam
push
fcompl
dec
and
sar
adc
add
pop
push
push
divb
nop
push
aaa
mov
mulb
movsl
les
movsl
ret
jg
dec
dec
push
add
or
xor
xlat
shlb
insl
pop
ljmp
jmp
dec
out
push
gs
cmpsl
mov
add
adc
mov
sbb
jge
std
insl
inc
adc
mov
sbb
icebp
int
adc
jecxz
and
shrl
mov
lahf
mov
sti
jb
shll
int
pushf
roll
and
ret
dec
movsb
push
sbb
loop
cmp
mov
mov
cmp
inc
jg
je
and
xor
sub
inc
cmp
cld
cmp
mov
insb
pop
addl
mov
lret
pop
xor
fidivrl
push
movsl
leave
xchg
inc
addr16
imul
sub
cltd
test
cmpb
into
adc
mov
sbbl
jno
sbb
incb
push
push
and
or
push
sbb
cmpsb
int3
cltd
push
js
dec
insl
idiv
sbb
pop
cmpsl
mov
jle
mov
out
sar
inc
xchg
jno
lods
orl
jae
add
movsl
je
ret
jg
push
out
pop
stos
aas
or
daa
test
ljmp
ljmp
mov
pusha
dec
xor
mov
adc
lds
fisttpll
mov
push
scas
shll
mov
lret
nop
mov
insl
fbstp
sub
xor
enter
daa
lret
xchg
mov
lcall
xchg
dec
inc
adc
add
cmc
mov
fwait
sub
test
mov
fstl
repnz
dec
mov
mov
dec
mov
in
pop
jmp
sbb
mov
in
pop
call
test
add
jle
push
test
sub
mov
cld
mov
orb
adc
cld
pop
add
leave
std
add
cmpsl
sarl
in
xor
mov
gs
mov
mov
std
xchg
addb
xchg
cmp
cwtl
inc
pop
jl
add
push
mov
ss
xor
scas
sbb
and
xor
movsb
in
inc
jne
sub
ss
jbe
or
adc
cwtl
out
dec
es
mov
int
mov
pop
push
dec
or
push
and
add
clc
jg
jecxz
insb
sub
nop
decb
fidivrl
outsl
jae
cmp
rcll
add
mov
jecxz
or
mov
insb
arpl
dec
adc
fwait
movsl
std
fidivl
sbbl
sbb
mov
sbb
mov
aaa
xor
pop
lock
lods
cmp
pop
xchg
push
inc
cmp
jmp
mov
gs
and
imul
test
add
mov
enter
add
add
decb
mov
fwait
push
gs
jle
sbb
nop
sbb
add
out
mov
rcl
lea
pop
xor
xchg
icebp
lods
fists
cmpsb
imul
adc
out
mov
sarl
cmp
cmp
cmp
ror
mov
mov
movsl
or
dec
sbb
mov
shrb
jmp
aaa
mov
xchg
notb
loope
sub
add
stc
add
adc
adc
xchg
xor
dec
out
icebp
repz
push
sbb
arpl
mov
xchg
xor
dec
xor
je
negl
sub
sub
adc
inc
or
dec
mov
mov
cmp
lods
add
sbb
push
jle
mov
fwait
xor
add
xlat
cmp
or
outsb
shll
clc
dec
push
jmp
push
aad
lock
into
std
je
out
cmpsb
aas
aas
ljmp
jns
jle
jb
aad
test
jne
dec
scas
loope
lods
imul
mov
and
xchg
mov
clc
lret
lds
adc
xor
mov
xchg
adc
push
xor
push
and
in
arpl
ret
popf
and
fbld
ds
push
lahf
cltd
ds
sahf
repz
insl
clc
lock
ds
cmp
inc
push
adc
std
in
inc
ss
or
in
in
jb
insl
imull
or
or
cs
mov
jnp
in
lahf
loop
std
loope
add
sub
sbb
addr16
pop
adc
std
aam
xchg
std
xor
pop
add
daa
mulb
push
movsl
mov
mov
test
sub
mov
enter
cmp
in
add
jecxz
les
push
orl
add
stos
cmc
dec
fs
cli
add
add
es
mov
cmpsl
hlt
mov
mov
pop
jns
out
dec
cmp
sub
cmp
inc
jbe
mov
ds
cmp
inc
pop
ja
in
rcll
and
call
js
xor
add
cli
movsb
das
icebp
lea
pop
mov
cld
sbb
sahf
jl
frstor
and
lret
pop
orb
sub
adc
lea
cmc
mov
addl
rcrl
je
frstor
and
jl
sbb
in
subl
ds
std
divb
and
sbb
pop
int
push
stc
sbb
out
sub
jmp
ret
aaa
xchg
jae
lock
fstp
nop
or
jmp
cmpsb
mov
jmp
je
cltd
inc
sbb
out
sub
mov
or
sbb
ljmp
lret
mov
mov
lcall
cmp
fldenv
cs
jne
cmp
pushf
inc
das
jno
dec
mov
dec
mov
pop
add
pop
sbb
inc
xlat
mov
addr16
popf
fcmovbe
xchg
and
mov
sbb
popf
mov
xchg
xlat
xchg
add
sbb
pop
inc
lods
inc
mov
jmp
sti
daa
dec
int3
or
jle
push
movsb
push
ljmp
fisubs
and
shrl
push
lahf
push
mov
sub
sub
and
mov
mov
inc
add
test
sub
int
or
mov
in
out
or
movsl
pop
sbb
mov
push
test
test
cmp
lret
outsl
call
mov
jl
popa
shrb
xchg
pop
cmp
add
add
test
sti
lret
lds
es
dec
ret
ss
inc
movsl
add
popa
jle
xor
test
je
and
shlb
jns
and
lock
cld
test
call
fldt
lahf
and
cltd
jo
popf
insl
mov
shll
loop
sub
std
popf
insl
mov
mov
fucomi
pusha
sub
rorb
cli
pop
ja
xchg
and
xor
sbb
mov
cwtl
sbb
shr
cmpsb
mov
xor
shlb
clc
push
or
js
enter
nop
and
sbb
mov
xor
dec
ret
pop
imull
adc
std
dec
mov
cs
loope
out
xor
cs
dec
lahf
leave
xor
pop
xchg
sub
mov
lret
add
ss
leave
dec
mov
loopnew
stos
lahf
insb
xor
add
adc
loop
sbb
stos
popa
add
dec
pusha
dec
or
add
movsb
mov
jne
test
push
orb
pop
mov
inc
cltd
and
inc
inc
inc
shl
ja
and
mov
daa
pushf
mov
push
dec
push
sahf
imul
out
mov
bound
out
cli
add
and
test
filds
ret
out
sbb
push
in
movsl
rcll
scas
mov
outsb
add
cs
xchg
sub
push
add
xor
lea
aam
mov
shlb
and
add
pop
rolb
add
mov
or
and
sub
pop
jge
aaa
fnsave
notl
xchg
lods
mov
xor
jge
pushf
cwtl
loopne
icebp
ja
pop
popa
cmpsb
repz
subb
mov
pop
jno
mov
sub
mov
shll
pop
cli
imul
arpl
pop
loop
or
out
jb
xor
add
cwtl
cmpsb
sub
and
and
or
cmpsb
mov
cli
jge
test
int3
pop
mov
sbb
xor
popf
out
adc
dec
fstl
push
leave
test
adc
subb
mov
ljmp
jge
stc
sub
mov
lret
sbbl
mov
out
imul
gs
push
stc
cltd
jno
add
enter
in
pusha
sbb
decl
sub
or
pop
adc
and
cli
push
repz
jle
or
testb
dec
and
xor
jge
or
cmp
dec
cmp
mov
int3
insl
cmp
in
and
push
jb
imul
jns
call
cmp
sarb
mov
jg
sahf
shlb
in
lds
movq
cmp
sarl
insl
ret
pop
add
push
testb
sub
sahf
cmp
or
daa
xchg
xor
push
daa
jp
stos
jno
xchg
xlat
add
mov
ds
xchg
movsl
inc
fcom
add
and
pushf
in
dec
xor
xor
xor
cmpsl
push
lahf
movsb
adc
push
xor
lahf
in
cwtl
jbe
inc
push
xor
ljmp
mov
push
movsb
icebp
sbb
daa
int
sbb
sbbb
mov
sub
test
filds
xor
test
aas
pop
add
ljmp
pop
jo
pop
and
hlt
in
aam
jge
inc
xorb
xlat
sbb
int3
ja
sbb
add
rcr
js
in
jae,pt
into
mov
xchg
push
int3
fldcw
inc
sarl
sbb
arpl
outsb
inc
ffree
out
pop
cmp
ret
pusha
jae
mov
pop
cmp
push
and
push
test
lock
push
lcall
das
mov
push
popl
xor
mov
mov
dec
cmpsl
in
xor
in
mov
js
jp
mov
in
and
xchg
or
int
cmp
dec
pop
xchg
or
inc
inc
adc
cmp
and
push
inc
loop
test
xor
xor
inc
aaa
ret
pop
pop
mov
xchg
push
shlb
movsl
inc
cmc
lods
cmp
out
mov
sbb
cmc
daa
cmp
mov
fs
sti
xor
pop
adc
daa
cwtl
push
jge
xor
pop
inc
jp
notb
mov
roll
pop
mov
into
mov
push
jl
shlb
add
sahf
sub
inc
jne
xchg
and
mov
add
pop
enter
mov
out
nop
ja
imul
je
out
or
and
int
int
notl
mov
cmp
fs
das
inc
pop
xor
dec
jg
xor
and
ret
push
push
sub
dec
adc
daa
mov
sbb
je
sub
and
ss
adc
in
dec
mov
push
mov
mov
data16
ja
test
cmc
xchg
and
cltd
xchg
xor
adc
add
cmp
sub
xchg
push
push
das
add
scas
stc
mov
in
xchg
xor
pop
aas
aas
cld
sbb
into
and
mov
sti
mov
cwtl
push
mov
pop
lock
lds
sub
das
cmp
mov
scas
and
jae
jecxz
dec
and
pop
cltd
bound
shlb
in
add
and
adc
hlt
movq
or
cld
jno
in
sub
jnp
ds
aas
sahf
mov
outsb
std
push
leave
aam
push
rcll
je
dec
icebp
cmp
cmc
popl
inc
mov
sbb
pop
test
sbbb
cltd
hlt
sub
iret
sti
shll
popa
jae
dec
testl
imul
clc
sbb
gs
and
std
lea
sbb
mov
add
dec
pusha
adc
ljmp
xor
xor
daa
in
jb
mov
add
push
repnz
mov
stc
icebp
int
push
mov
adc
add
stc
jae
pop
push
adc
cmpsb
xchg
mov
scas
xchg
adc
jno
add
jge
inc
push
push
xor
sbb
mov
adc
cs
hlt
push
xchg
ficompl
test
and
mov
mov
test
test
data16
nop
jmp
push
and
out
insb
jmp
loope
lahf
add
out
loopne
fsubr
movsl
mov
movsl
sub
addr16
repz
adc
push
or
jmp
arpl
test
fidivrl
xlat
lods
and
jbe
cmc
add
loopne
in
movsl
push
xchg
out
int
xchg
daa
scas
pop
jmp
aaa
jae
loope
daa
sbb
and
jns
imul
in
xchg
sbb
cmp
mov
enter
pop
cli
sbb
or
cmp
or
mov
sahf
xor
stos
sbb
lea
icebp
daa
sbb
xchg
ja
or
add
fdivrs
xchg
sbb
sbb
sbb
mov
push
es
cltd
gs
repz
xchg
shl
int
jo
in
pop
mov
jl
fldl
dec
cmp
add
movsl
sbb
xchg
mov
push
enter
movsl
iret
jle
shrb
mov
loop
sbb
adc
repz
cmp
lcall
in
movsl
mov
adc
test
imul
sub
ss
add
sbbl
cmp
cwtl
cltd
sbb
test
mov
jl
mov
jp
jne
cltd
lret
xor
movsb
shl
adc
and
ret
movb
xchg
adc
bound
lods
sub
and
mov
imul
hlt
ss
pop
imul
cmc
add
test
test
push
and
inc
int3
lret
xor
sbb
imulb
mov
add
mov
cld
xor
out
push
xor
sbb
pop
sbbb
adc
movsl
lds
cmc
or
pop
xor
mov
cmc
cmp
push
enter
lock
out
mov
orl
xchg
xchg
sbb
pop
lock
push
int3
cwtl
jmp
cld
inc
and
pop
jae
repz
add
xchg
jns
clc
movl
fs
jle
inc
aas
pushf
jle
loopne
addr16
add
mov
cmp
mov
mov
movsl
push
sub
sbb
jge
xor
sbb
sbb
test
mov
add
cmp
mov
sbb
cltd
mov
xchg
jecxz
cmp
sti
xchg
adc
mov
in
jg
in
cmp
cld
test
lds
cmp
dec
jae
lods
xchg
pop
pop
mov
adc
sbb
xchg
fbld
inc
add
lret
arpl
in
lds
or
or
out
test
adcb
cmc
add
pop
and
outsl
push
sbb
cmc
cmpsb
adc
adc
ds
pushf
mov
jb
jno
mov
aad
mov
cld
push
mov
dec
inc
jb
int3
lahf
xor
das
leave
or
jno
sbb
adc
repnz
ret
cmp
mov
add
add
mov
lds
jle
jne
mov
mov
pushf
adc
dec
out
pop
js
xrelease
add
add
aad
fs
fdivp
and
pop
outsb
cwtl
sbb
xchg
std
ja
ljmp
add
mov
mov
das
jne
es
jg
pop
cs
loope
mov
xor
cmp
push
adc
fcmovu
lahf
mov
imul
test
inc
and
jmp
dec
out
mov
das
loopne
pop
or
mov
incb
clc
push
push
adc
mov
int
ja
cmc
cmp
std
dec
aaa
xor
push
dec
outsb
pop
xchg
jl
and
inc
sbb
out
sbb
decb
jns
jae
sub
dec
ret
in
shrl
pop
scas
or
in
out
inc
insl
inc
jae
es
cs
sbb
adc
pop
jns
movsb
push
aad
sub
rcll
xor
scas
je
xor
add
sbb
mov
xchg
shrl
xor
mov
cwtl
iret
dec
mov
sub
mov
add
std
pop
adc
in
or
push
lahf
arpl
mov
lea
bound
inc
mov
aas
shrl
add
mull
cmp
hlt
inc
and
gs
cmp
outsl
lcall
dec
inc
and
sbb
xchg
mov
mov
xchg
sub
cmp
add
pop
mov
outsb
dec
fucomip
stc
dec
fnclex
push
jl
decb
icebp
xlat
mov
push
and
nop
and
sbb
pop
les
adc
dec
stos
mov
out
jmp
inc
mov
cmp
outsl
fldl
dec
mov
push
add
and
ja
cmpsl
mull
lods
mov
rcl
add
sub
stos
popf
push
call
pop
scas
add
lret
and
cmp
pusha
inc
std
and
dec
jecxz
popa
in
loop
movsb
inc
pop
mov
cmp
aad
in
pop
movsl
push
idivb
imul
push
imul
sbb
icebp
std
push
add
gs
sbb
in
mov
rorb
mov
in
sbb
cmc
jno
pop
icebp
adc
push
xor
push
or
inc
adc
add
mov
popf
and
lcall
ds
jle
fldl
jae
into
mov
pop
out
adc
add
add
andb
push
cld
fldenv
daa
inc
jmp
mov
push
adc
xchg
jae
sbb
xchg
aam
jp
cmp
ljmp
cmp
sub
pusha
outsl
sbb
sub
inc
mov
add
mov
and
dec
or
ja,pt
addb
push
inc
xorb
std
pushf
jle
js
out
in
clc
call
dec
sbb
adc
add
and
xchg
sub
es
xchg
nop
test
jnp
adc
push
ss
outsl
cmc
ja
xchg
cmp
xor
add
mov
cmc
call
sub
xor
fiadds
dec
fsubrs
les
mov
sub
cmc
sub
inc
or
loope
add
and
movsb
js
and
mov
in
xor
xor
mov
cmpsl
lret
adc
mov
mov
rclb
jge
mov
sbb
daa
add
cli
xor
sbb
mov
xor
hlt
adc
pop
es
mov
jns
loop
test
sub
aaa
lods
nop
in
and
outsl
shr
rolb
xchg
ja
jo
cmp
dec
scas
enter
inc
and
mov
cltd
aad
push
mov
lret
mov
jnp
pop
push
push
cmpsb
xchg
cmp
lret
std
addr16
push
lcall
outsl
mov
push
addr16
push
push
dec
arpl
int
in
dec
lcall
loop
test
call
negl
sub
fdivrl
jge
subb
add
push
inc
xor
outsb
mov
int
dec
or
add
sub
jno
and
mov
and
inc
dec
ja
adc
mov
js
add
mov
push
fstp
and
test
bound
push
jecxz
mov
inc
aam
les
jmp
cld
mov
pop
nop
shlb
cmpsl
addr16
test
and
mov
loop
fwait
out
inc
mov
mov
mov
repz
cmc
call
or
movsl
mov
or
test
xchg
push
mov
add
jecxz
mov
sbb
mov
mov
lds
fcoml
sbb
xchg
or
jne
mov
cli
sbb
jae
scas
inc
xlat
ret
testb
in
mov
idivl
test
test
xchg
aaa
cmp
and
nop
add
loop
out
push
jl
push
sbb
mov
arpl
mov
inc
sbb
lea
js
aaa
jne
fistl
ss
mov
cmp
mov
inc
rcrl
daa
test
ret
and
insl
arpl
dec
cmp
push
andl
rcrl
hlt
push
add
mov
insb
cmp
fadd
sbb
or
mov
dec
repz
adc
inc
cmp
lods
xor
pop
outsl
or
std
mov
je
in
sbb
lcall
loopne
int3
out
jmp
pop
xor
movsl
cltd
mov
sub
inc
stc
jp
mov
int3
mov
dec
in
sbb
jecxz
lret
repnz
push
xchg
bswap
sbb
clc
adc
ds
pop
mov
inc
mov
inc
lds
inc
movsb
ret
jns
shll
fs
sub
je
ret
jmp
fldl
xor
das
jmp
incl
movsl
xor
or
dec
xor
test
fcmovnbe
or
lcall
mov
stc
js
cmp
call
decl
cmp
gs
push
xchg
fnstenv
jecxz
in
sbb
dec
clc
xchg
pop
mov
cmp
sbb
jbe
ss
push
je
xor
and
arpl
cmp
in
add
movsl
roll
ja
xchg
adc
cli
aad
int
add
adc
fucom
popf
adc
enter
rcr
and
xchg
xor
sbb
call
xchg
add
outsb
imul
lret
orl
dec
imul
sbbl
mov
lock
jmp
out
scas
aaa
inc
ja
dec
sbb
push
mov
xor
jno
loope
out
xlat
outsb
sub
into
xor
out
mov
mov
mov
xor
xor
mov
jle
xor
mov
and
ror
inc
scas
out
cld
subl
push
repz
jne
gs
cmp
lds
add
test
lret
insl
popa
and
sub
xor
pop
mov
lods
and
add
sahf
bound
mov
int3
push
mov
pusha
test
jae
repnz
inc
sub
jle
sub
adc
jmp
gs
aas
call
and
aaa
stos
sub
ja
sbb
fidivl
lret
gs
adc
inc
imul
mov
sbb
cmp
ficompl
mov
mov
loope
inc
mov
movsb
dec
scas
inc
inc
pop
ss
mov
nop
push
mov
cmp
xchg
in
cmp
cli
adc
repz
cmc
in
lret
outsl
xchg
jo
gs
cmpsb
sub
dec
sbb
shr
movsb
sub
icebp
jb
dec
test
nop
cmp
pop
sbb
repz
fwait
jae
push
out
push
mov
inc
push
popf
subl
xchg
test
push
in
adc
sbb
inc
or
cld
je
in
ds
mov
push
and
add
jne
stc
jp
adc
mov
push
inc
mov
ss
jb
loop
pop
jecxz
rcrb
call
movb
and
add
xor
mov
jae
xor
int
int3
lods
fadds
push
shrl
sahf
je
xor
dec
and
cmp
insb
mov
movsl
jg
mov
fcoms
and
jbe
ljmp
rcrb
sub
mov
adc
sbb
aas
mov
js
int3
sbb
scas
gs
dec
adc
pop
jns
int3
dec
clc
sbb
push
xor
cmp
mov
je
aaa
xor
fwait
rorb
xor
out
add
repz
mov
jl
dec
call
je
les
ljmp
xlat
xor
xchg
add
lcall
push
add
mov
ljmp
outsb
xchg
test
mov
int3
and
pop
testb
cli
ss
daa
sub
mov
xchg
out
mov
in
inc
icebp
mov
insl
sarl
push
sub
xor
dec
int
imulb
push
imul
test
leave
les
jmp
jae
sbb
nop
add
sub
insl
pop
push
adc
stc
loop
cmpsb
div
leave
sbb
in
test
jne
out
cmc
cmp
sub
jecxz
pop
push
pop
dec
fmull
je
cltd
ds
lods
jns
or
sbb
adc
and
inc
mov
mov
add
xor
sbb
mov
int
inc
fadds
cmp
je
lods
dec
xchg
jp
ret
idivl
popf
cmpsb
jmp
xchg
or
adc
xchg
sub
test
movb
dec
popf
and
mov
jo
fnstenv
and
aad
repz
adc
mov
aaa
lds
inc
adcb
jae
cmp
pop
mov
lret
sub
add
add
adc
loope
fwait
inc
xor
xchg
inc
push
in
cmpsb
pusha
sbb
iret
add
mov
add
stc
cmpsb
inc
adc
adc
test
and
mov
add
cmp
aaa
in
adc
mov
std
je
mov
add
aas
cmc
dec
fs
jmp
pop
sub
std
push
dec
xor
pop
fmul
sub
mov
add
sbbb
call
test
in
fbld
int3
cmp
mov
pop
sub
cmp
add
sbb
lcall
mov
aam
jmp
icebp
in
sbb
aaa
dec
inc
pop
sbbb
add
lea
jno
nop
testb
xchg
cmp
clc
and
fs
dec
pop
arpl
sbbl
inc
cld
sub
and
dec
addb
insl
dec
inc
fcompl
add
loop
roll
adc
mov
inc
mov
and
int
xchg
pop
pop
xor
and
movsl
jne
gs
loop
jl
cmpsb
pop
lcall
dec
adc
fbld
add
nop
inc
dec
bound
dec
fwait
movsb
shlb
ret
pop
and
cmp
sbb
mov
push
and
test
sbb
aam
cmp
inc
daa
mov
mov
mov
int
adc
or
setle
in
arpl
es
in
rcrb
cld
fwait
push
or
lds
lcall
xor
sub
add
jp
xchg
sahf
jle
in
and
aad
cmc
gs
xor
in
ror
aad
dec
in
dec
int
frstor
mov
dec
aad
in
pop
add
pop
mov
dec
daa
mov
insl
mov
dec
pop
loop,pt
mov
pop
inc
mov
incb
fnstsw
and
sbb
add
and
sahf
mov
repnz
int
mov
jp
test
stc
jecxz
ficoms
fsts
ljmp
jle
std
out
outsb
ret
ja
xchg
sti
out
inc
sbb
lods
fsubl
or
aad
movaps
dec
cmc
jecxz,pt
inc
cs
mov
test
pop
fcoml
repz
cmpl
sarl
das
dec
test
add
mov
add
xchg
repz
in
aam
repz
cs
pop
aam
cwtl
gs
mov
mov
ss
mov
mov
mov
cld
fucomip
pusha
fldl
xchg
scas
and
xchg
ret
inc
ja
lret
xor
add
sub
dec
leave
mov
rcll
shl
leave
xor
sub
popf
lahf
lret
lahf
test
xchg
sub
adc
cltd
jl
cmpsb
test
lcall
leave
movsb
je
cmp
gs
sbb
mov
frstor
cld
in
jmp
iret
das
fwait
icebp
fcomp
jne
loopne
mov
inc
test
cmp
mov
add
fbstp
jae
in
int3
sahf
je
mulb
mov
loope
ror
inc
in
movsl
test
out
call
pop
inc
movsb
push
lcall
out
adc
xorl
sahf
push
push
mov
and
lea
and
fisttpl
cmc
push
cwtl
push
ret
aaa
data16
in
push
loopne
jecxz
ret
rorb
mov
pop
xchg
loopne
call
dec
add
jmp
dec
jne
jbe
mov
sub
and
shlb
mov
xchg
test
or
jge
push
js
fdivs
sbb
mov
dec
je
js
mov
imul
insb
aam
int3
aad
call
mov
push
dec
cmpsl
sub
mov
repz
add
es
lock
dec
jo
xchg
sbb
call
add
testl
out
pop
and
sbb
mov
jle
dec
sub
or
push
xor
mov
rol
lret
cmp
mov
cmp
jl
inc
push
and
test
hlt
mov
mov
movsl
ss
insl
and
arpl
xorb
scas
pop
ret
pop
pop
icebp
mov
mov
inc
ffree
in
int3
std
out
pop
adc
adc
adc
mov
mov
das
test
call
xchg
xor
add
mov
out
hlt
sub
add
add
loope
and
sbb
push
fnsave
and
add
insl
dec
xchg
inc
xor
pop
mov
lock
gs
cltd
std
push
add
mov
ds
dec
mov
mov
lahf
call
mov
ja
arpl
inc
add
jne
lcall
leave
into
fidivl
or
sti
outsl
xor
rorl
push
rcll
push
loopne
xlat
in
fisttpl
cmp
add
sub
lret
jno
sbb
lods
stos
in
clc
jmp
inc
pop
push
push
add
pop
or
jmp
sar
cmpsl
mov
enter
push
in
test
add
mov
fidivs
jle
cmp
pop
push
and
and
jmp
mov
sbb
jge
enter
add
add
dec
cmpsb
dec
test
push
inc
and
fdiv
and
cmp
adc
or
mov
and
inc
inc
loope
aaa
pop
lcall
mov
push
cmpsb
jge
ja
daa
insl
stc
jecxz
or
popa
sub
cmp
pop
jae
add
aas
sbb
mov
in
std
pop
pop
jl
sbb
addr16
push
jp
mov
or
icebp
cld
mov
clc
fwait
cmc
cltd
fldenv
test
pusha
xchg
and
push
xor
mov
and
je
mov
jl
add
fcompl
and
jg
ljmp
cmp
pop
into
mov
fucomip
mov
inc
sbb
and
jno
rcll
cmc
adc
sub
mov
adc
sbb
sahf
push
shl
add
and
fimuls
fs
sub
jno
dec
push
sub
mov
inc
fcomi
add
lock
mov
push
jo
ds
sbb
and
cmc
cltd
sbb
cmp
int3
cwtl
or
repz
inc
adc
cmp
mov
scas
in
fs
push
call
std
js
sbb
lahf
orb
or
sbb
sbb
inc
in
and
pop
out
jmp
sub
andb
xlat
add
cmpsb
mov
pop
nop
add
add
enter
inc
adc
cmp
sub
xchg
int
cld
inc
pop
daa
and
cmpsb
pop
push
jp
inc
sarb
mov
mov
xchg
push
notb
cmpsb
lods
inc
es
xor
fs
xor
sub
fldcw
inc
add
leave
call
push
dec
das
mov
and
fidivrl
or
dec
add
or
xchg
aaa
rclb
fwait
insb
cltd
in
test
jl
xor
mov
dec
jnp
or
mov
adc
mov
js
pop
cmp
daa
sbb
mov
negl
popa
and
call
sbb
movsb
adc
nop
test
scas
jge
push
and
scas
mov
rol
nop
pop
lock
cld
mov
hlt
ja
dec
mov
cld
mov
jl
movsl
insl
xor
movsl
sbb
pop
scas
mov
call
loope
fcmovb
add
xchg
mov
dec
jnp
ja
mov
sbb
cmp
dec
ss
xchg
sbb
push
fsts
ret
mov
ja
mov
xchg
mov
and
mov
dec
fsubrs
cmp
ss
mov
inc
rorl
jns
daa
push
add
dec
rcrl
mov
scas
mov
push
test
out
cmp
cmp
push
les
jnp
jg
xor
lock
cld
add
jbe
ja
aas
mov
mov
imul
jnp
cs
adc
lret
push
movsl
fldcw
pop
imul
dec
in
mov
nop
push
je
xor
insb
outsb
lods
xor
lahf
xor
xor
cmp
dec
add
insb
jb
notb
jno
jg
sbb
jmp
or
mov
mov
mov
stmxcsr
leave
jge
testl
shll
add
in
movsl
pop
mov
pop
dec
mov
rcl
mov
and
sub
dec
inc
or
inc
test
addr16
addr16
pop
xlat
pusha
xor
test
movsb
lods
mov
in
in
inc
sub
xor
sbb
incl
cmp
adc
repz
jl
jne
inc
cmp
movsl
push
or
fsubrs
fldcw
mov
rorb
or
sub
cs
jg
pop
mov
mov
mov
jo
dec
push
imul
xor
and
les
dec
mov
inc
add
jg
push
add
sahf
adc
cmp
dec
add
xchg
and
loopne
dec
add
cmp
and
xchg
clc
sub
push
jnp
fimuls
mov
mov
sbb
mov
jne
adc
out
and
push
and
dec
inc
repz
ja
out
outsl
movsl
xchg
and
pusha
mov
mull
inc
xor
aad
jno
aad
ja
nop
pusha
pop
pop
cmpsb
cld
mov
aaa
jne
movsl
add
aaa
mov
mov
mov
push
out
jle
push
jle
add
xchg
sbb
jmp
scas
int
push
movsl
test
cs
cltd
push
fistpl
loope
stos
lea
push
mov
cld
movsb
in
mov
pop
xor
add
aaa
es
dec
mov
sbb
mov
mov
cmp
fbld
frstor
hlt
mov
aaa
xlat
lods
hlt
sub
imul
sarb
arpl
inc
lods
sysret
push
sti
insb
and
daa
and
bnd
lock
pop
adc
dec
cltd
les
aad
inc
inc
xor
or
mov
movsl
aas
inc
push
aaa
cwtl
cltd
xor
xor
stos
and
movsl
loope
jg
into
fistpll
int
inc
add
mov
adc
insb
leave
and
fstps
outsl
sbb
mov
cmp
lods
push
lret
into
scas
add
mov
or
aas
shrb
in
into
add
jb
lods
add
and
adc
and
icebp
add
in
and
cmc
jmp
fldenv
xor
out
cld
dec
dec
fldl
mov
outsl
push
movsb
sarl
push
push
pop
xor
in
sbb
les
push
repnz
pushf
jecxz
shrb
and
movsb
mov
cwtl
ds
out
int
dec
adcb
das
pop
cmc
cltd
xor
std
adc
push
cmp
cltd
into
cltd
fidivl
or
mov
mov
mov
jnp
int3
inc
mov
shrb
into
std
xchg
fs
inc
inc
and
aam
jg
divb
je
pop
dec
or
jne
loop
dec
mov
inc
push
gs
stc
pop
xchg
cmp
push
negb
cmp
cmp
push
cmp
jg
cmc
inc
mov
pushf
xor
cmp
cwtl
sbb
ja
outsl
ret
pop
mov
cmpsl
loope
les
mov
inc
cmp
and
pop
inc
movsl
cmp
outsl
test
imul
cmp
insl
test
imul
xchg
lcall
xchg
nop
ret
mov
xor
sub
inc
or
push
mov
mov
mull
add
es
mov
cld
aas
inc
xchg
mov
fsubp
enter
adc
adc
stos
enter
mov
je
sbb
sbb
push
orl
hlt
or
gs
mov
cmpsb
mov
leave
in
movsl
imul
icebp
mov
and
mov
int3
fdivrs
pop
jmp
inc
xlat
mov
jge
mov
sub
test
clc
and
in
sub
jo
jmp
sbb
psrlw
pop
in
insl
cmpsl
jle
adc
push
fdivrl
sub
xchg
jmp
mov
popf
std
mov
arpl
adc
daa
jl
jmp
xor
int
idivl
popa
pop
pop
mov
push
pop
xlat
xor
mov
cmp
sbb
roll
hlt
add
repz
cld
notb
pop
mov
movsb
in
push
jle
pushf
inc
ljmp
movb
icebp
jae
aas
adc
mov
lods
outsl
add
jp
mov
pop
and
inc
lods
loope
inc
popf
dec
rol
pop
frstor
and
pop
daa
mov
adc
mov
inc
rcl
cli
out
mov
push
sub
test
lcall
mov
or
fimuls
push
mov
test
xor
cmpsl
add
mov
arpl
mov
es
movsl
cvtdq2ps
mov
es
jl
dec
add
cmc
test
mov
adc
scas
enter
mov
inc
frstor
dec
test
cld
sub
out
jmp
push
pop
add
push
orb
lds
or
jnp
mov
dec
leave
fs
enter
cmc
cmp
inc
and
dec
pop
test
cmc
movsb
inc
mov
ret
dec
rcll
ror
aas
pop
cltd
ds
adc
ss
dec
cmpsl
jp
jl
xorb
jmp
xlat
mov
outsb
clc
jp
mov
jbe
arpl
loopne
addr16
xchg
ret
or
shlb
test
jle
add
in
add
mov
jecxz
sub
mov
mov
sbb
inc
jb
cmp
sub
test
repnz
jb
cltd
mov
xlat
and
testb
cmp
fisubl
adc
cwtl
pop
cmp
leave
rcll
lds
mov
xchg
add
sbb
dec
cmpb
outsb
or
lahf
sub
jmp
mov
testb
imul
repnz
daa
pop
adc
push
movsl
push
cwtl
test
outsl
insl
dec
cmp
lods
mov
push
mov
mov
dec
dec
testb
push
push
data16
or
lods
movsb
les
lds
sub
pop
imul
loop
sbbl
ljmp
ds
sbb
mov
xor
je
or
mov
dec
jns
lret
sub
aaa
jb
mov
popl
dec
lods
and
and
adc
lahf
xlat
add
xor
cmc
sub
into
cmc
pop
rcrl
xor
adc
or
cmp
adc
pop
cld
pop
jnp
movsb
andl
lret
sbb
inc
int3
push
jge
pop
std
mov
and
and
stc
dec
push
jmp
cmp
popa
cmc
pop
push
sar
add
lds
mov
adc
cltd
xchg
cs
insb
cmc
std
and
adc
aad
rolb
movsb
adc
repnz
pop
cmp
sbb
cltd
mov
sahf
jae
sbb
mov
pop
mov
jnp
leave
flds
jmp
stc
and
add
jb
dec
xchg
ljmp
dec
cli
gs
cmp
minps
jbe
or
push
lea
cld
and
lods
cmp
enter
add
cmp
xor
pop
aas
ja
jbe
aam
movsl
push
lahf
aam
inc
xor
push
es
pop
sub
inc
or
mov
pop
lds
jecxz
add
cmpsl
icebp
lret
or
sahf
mov
inc
inc
mov
cmpsl
sub
notl
cmc
arpl
dec
adc
loopne
xor
xor
or
in
pushf
int
int
sub
cmpsl
fstps
sahf
add
xor
mov
and
mov
and
and
out
or
lret
subb
loope
sbb
and
loope
fldcw
sbb
push
mov
cmp
repz
mov
cltd
xchg
aas
inc
jne
jecxz
xchg
jmp
in
adc
sbb
push
and
daa
jg
pop
adc
out
ja
rcll
adc
repz
push
and
lret
lds
inc
pop
pop
mov
jno
aaa
std
je
mov
hlt
and
lds
sbb
sahf
js
lahf
or
and
lock
fsubr
pop
mov
fisubl
and
jle
int3
cmp
sbb
cld
add
jmp
mov
in
into
add
add
jns
adcb
popa
mov
test
sbb
mov
in
mov
stc
or
push
and
dec
adc
xor
push
rcr
mov
cmp
leave
loope
fcompl
push
leave
dec
testb
repz
int
xchg
xchg
xor
lods
test
add
sbb
movsl
mov
xchg
add
stos
rorl
and
xor
mov
aad
adc
fiaddl
push
push
sub
jns
jo
add
fwait
fwait
andl
dec
pop
xlat
and
movsl
cmovp
cli
mov
adc
dec
jno
xchg
lret
pop
cmpsl
stos
test
mov
jns
mov
es
add
adc
adc
lret
mov
xchg
push
sbb
xor
xor
call
out
lods
jbe
lods
shll
in
ljmp
pop
out
pop
cmp
add
fadds
je
sub
in
clc
mov
push
movsb
pop
daa
movsb
jb
xor
jo
mov
sub
cmpsb
imul
lret
jle
push
adc
aaa
mov
and
jle
iret
xchg
movsb
add
dec
sub
fdivrl
repz
sbb
adc
pusha
int3
mov
mov
jns
js
or
sahf
jmp
dec
andl
dec
cmp
nop
in
mov
lret
test
inc
fsubr
or
mov
xchg
cmc
pusha
push
push
cmp
imul
adc
cmp
adc
movsl
aam
push
push
or
pop
leave
ret
stc
cmp
fisubs
ficoms
sbb
outsl
repz
inc
vmload
inc
pop
lea
test
mov
enter
aaa
add
sti
test
adc
inc
stos
xor
mov
jb
inc
std
add
xchg
mov
mov
enter
jno
pop
lret
cld
pminub
xchg
in
pop
shl
mov
lds
lock
sub
in
cs
cmp
mov
mov
push
pop
mov
insl
shll
jmp
cmp
cmp
fwait
cmp
es
xor
das
in
mov
stos
xor
sarl
rcl
mov
inc
pop
cs
mov
mov
lret
mov
aaa
cmp
das
movsb
movsl
mov
lods
push
push
fldcw
pop
jmp
pop
cmp
lds
mov
adc
pushf
movhps
rol
pop
pop
xor
iret
mov
imul
pushl
and
fsubr
inc
push
lds
cltd
add
inc
imul
sub
cmp
mov
mov
jmp
mov
and
add
cmp
mov
in
sti
add
imul
push
mov
cmp
cltd
popf
sub
push
cmc
jnp
pop
in
sub
pop
cmpsb
lea
lds
in
inc
jae
mov
inc
idivl
mov
bound
les
cs
xor
sub
push
mov
xchg
dec
lahf
jge
sub
mov
std
stc
cltd
dec
jge
lods
imul
xchg
mul
popa
outsb
loope
add
cmpsb
adc
call
mov
cltd
mov
call
call
and
mov
dec
lds
push
xor
cmpsl
out
and
or
xor
mov
jae
insl
cmp
mov
enter
jb
dec
mov
fstps
and
pop
or
add
xor
push
mov
mov
push
or
push
inc
aaa
fs
fcomi
xchg
pop
es
and
pushf
cld
push
or
dec
cmp
lcall
xor
or
popa
adc
int
clc
dec
sub
mov
mov
out
data16
popa
cmpb
mov
call
loopne
mov
cmp
data16
pop
subl
jle
in
pop
cmp
es
and
aad
mov
xchg
or
mov
lcall
rclb
shlb
mov
es
fsubrl
xor
xchg
sbb
xchg
xchg
scas
cmpsb
out
inc
inc
sarl
adc
lock
test
jl
aad
gs
mov
das
imul
mov
decb
mov
repz
and
sub
les
push
inc
dec
and
shll
ss
add
mov
dec
int3
mov
push
dec
in
sbb
outsl
enter
pop
push
into
icebp
lods
mov
pusha
pop
incl
in
xchg
mov
stc
mov
cmp
aaa
adc
push
or
xchg
in
mov
cmpsl
jbe
rolb
hlt
stc
cltd
ret
pop
js
inc
add
mov
xor
inc
cmp
add
add
test
mov
mov
out
mov
mov
movsb
push
std
cmpsb
imul
out
inc
mov
jg
mov
cmp
int3
lret
in
shll
adc
sub
pop
cmp
lock
and
ja
cmpsb
xchg
xor
push
out
xchg
in
int3
and
cwtl
or
aaa
mov
push
xchg
sbb
jno
stos
jne
xchg
je
lods
inc
cmp
aam
lds
call
jae
das
mov
and
mov
mov
dec
out
and
pop
xor
ljmp
cmova
add
pop
mov
sub
add
jns
and
pop
xchg
sarb
int
es
push
inc
jae
test
movsl
rclb
shll
call
ss
mov
xor
gs
loop
pop
test
daa
or
jo
mov
pop
dec
faddl
fnsave
inc
gs
test
xchg
movsl
sbb
pushf
cmp
push
mov
mov
das
std
sbb
jne
xor
xchg
adc
inc
jnp
mov
sbb
and
shlb
pop
lcall
push
dec
inc
adc
lret
push
scas
lods
xor
aam
cmp
sub
jmp
in
mov
xchg
ja
pop
loop
sub
and
leave
adc
xchg
pop
cmc
add
lret
insb
out
fnstsw
pop
jmp
mov
jl
sub
add
add
and
jae
mov
adc
or
sub
or
adc
int3
xchg
cmp
sub
push
pop
push
dec
mov
sub
jle
movsb
xchg
cmp
xchg
cmc
popf
bound
imulb
adc
movsl
popf
icebp
lds
ror
add
mov
call
fdivl
cmp
pop
push
filds
dec
cmc
into
lods
inc
fsts
divb
xchg
bound
pop
cli
lahf
xchg
in
sub
scas
fwait
inc
lds
push
dec
in
add
mov
sub
mov
pop
pop
xchg
mov
push
adc
dec
dec
stos
sbbl
dec
insl
lods
cs
cmc
shlb
sahf
cwtl
sub
test
mov
push
mov
in
mov
mov
adc
mov
cmp
ss
add
sbb
dec
cwtl
mov
mov
or
mov
jecxz
and
sub
cld
jo
xchg
lea
dec
std
movsl
ficompl
pop
pop
loopne
push
xchg
sbb
fiadds
lods
or
inc
je
jae
es
jnp
into
jge
insb
cwtl
rclb
push
adc
lcall
jmp
push
sub
data16
cmp
sbb
sarb
cli
pop
sub
std
mov
rcr
mov
xchg
scas
pop
push
rcll
adc
in
sub
jne
jecxz
inc
sub
cbtw
xchg
and
jbe
movsl
push
int3
cmp
clc
popf
out
xchg
mov
cmc
lret
push
iret
stos
pop
mov
cmpsl
sti
ja
mov
and
and
lahf
mov
pop
enter
adc
sbb
or
adc
addl
pusha
dec
in
fwait
add
cmp
jl
fs
inc
mov
daa
pop
fiadds
lds
push
fcomip
xchg
repz
sahf
fcmovnbe
cmp
inc
sbb
xchg
pop
push
ds
jno
les
pop
add
es
daa
inc
testl
xchg
out
cli
sub
je
push
test
dec
mov
dec
and
mov
shufps
adc
mov
mov
mov
xor
fs
cmp
ss
fwait
divb
push
rolb
sar
jmp
adc
adc
push
or
cltd
push
add
loopne
notl
push
orl
xor
jbe
sub
push
jl
add
data16
adc
into
jno
xchg
and
mov
lret
inc
jnp
mov
clc
mov
in
aam
mov
add
and
and
cli
mov
rcll
das
std
insl
inc
les
gs
sbbl
add
mov
lds
jmp
xor
fstps
out
daa
mov
cmpsl
inc
in
mov
mov
or
dec
jp
sub
ret
pop
mov
jmp
in
adc
fisubs
test
jle
inc
jns
mov
fdivp
cwtl
push
inc
inc
stc
sbb
adc
jnp
addb
lahf
int
insl
out
dec
and
jmp
mov
in
lds
jns
jmp
mov
push
xchg
out
movsl
das
push
mov
xchg
mov
js
adc
mull
or
pop
mov
das
mov
lret
mov
mov
dec
add
in
in
xchg
lea
jne
xor
movsl
xor
out
jmp
sub
js
inc
xlat
mov
test
add
mov
mov
mov
nop
fldl
mov
test
cmc
aam
and
dec
jg
add
leave
mov
xchg
pop
outsb
xchg
and
lock
out
mov
call
cli
sbb
xor
stos
pop
mov
lods
movsl
test
mov
sbb
roll
test
decl
cmp
js
add
inc
loop
mov
and
and
inc
push
dec
or
inc
jb
push
inc
stos
jbe
and
mov
mov
jbe
aas
stc
xchg
fidivl
std
inc
or
cli
dec
jb
xor
icebp
mov
divb
in
outsl
xchg
nop
and
push
jg
ds
int3
insl
cmpsl
dec
mov
sti
sub
cmp
negl
add
inc
and
fbld
jo
cmp
sti
jo
inc
mov
xor
icebp
pop
add
stc
popf
jne
jmp
or
push
in
pop
out
xor
out
jle
andl
dec
lock
popf
xchg
push
push
pop
jne
mov
movsb
fnsave
in
decb
xor
sti
and
out
jmp
je
daa
addr16
shl
ja
or
pop
and
sub
add
mov
aad
inc
in
and
sbb
jmp
inc
dec
ficomps
xlat
adc
stc
std
cs
roll
mov
out
jnp
xlat
test
ja
push
popa
ss
ret
loope
mov
clc
sub
add
cld
call
pop
in
inc
inc
movsl
in
arpl
push
mov
sub
imull
dec
push
mov
out
jp
and
push
dec
rclb
sbb
sbb
cltd
stc
sahf
pusha
rorb
sbb
out
cli
sub
fmull
jae
stc
sub
jae
push
hlt
fsubr
add
imul
mov
sti
gs
push
movsl
aas
push
and
mov
dec
mov
imul
mov
inc
movb
in
rclb
xor
mov
aaa
movsb
outsb
test
and
cltd
aaa
out
aaa
repz
ja
in
mov
or
scas
inc
pop
xor
dec
lahf
daa
test
shl
dec
xchg
js
xchg
scas
mov
test
or
inc
pusha
mov
mov
es
jbe
jo
sub
inc
or
rcll
int3
push
cs
addb
mov
call
pop
pop
orb
mov
in
rcrl
or
jecxz
sub
icebp
test
add
je
fisttps
shl
sarl
movsl
add
xor
mov
in
jnp
inc
cmpsb
hlt
lret
daa
repz
je
dec
outsb
sub
mov
sub
sub
lds
scas
cli
jmp
mov
data16
mov
mov
loop
pusha
shlb
inc
das
cmp
jo
dec
fstpl
movb
shl
jecxz
push
and
mov
test
out
mov
dec
push
push
or
arpl
in
and
insb
lods
push
lds
sub
rcrb
push
xchg
mov
pop
pop
cltd
add
or
cltd
daa
mov
std
lret
sbb
nop
loopne
dec
sbb
xchg
pop
and
mulps
adcb
add
adc
loope
ss
push
loopne
ret
push
dec
movzwl
pop
pop
rcll
xchg
mov
rcrl
mov
mov
pop
add
hlt
inc
int
mov
enter
adc
xor
mov
test
aam
add
ja
jno
and
sbb
sarb
mov
adc
leave
xor
ss
mov
dec
push
dec
lods
push
cmp
cmp
imul
mov
xor
outsb
test
fbld
pop
arpl
icebp
add
adc
add
dec
and
incb
mov
push
jle
notl
dec
mov
pop
mov
scas
testl
and
mov
sbb
cmp
ret
lods
jle
mov
divl
sub
sub
movsl
fbstp
loop
mov
loope
aam
sti
adc
imul
mov
clc
lock
test
movsl
mov
aaa
fwait
test
stc
inc
sub
pop
jmp
cs
xchg
popa
xchg
ret
cmp
pop
jl
in
in
pop
out
adc
test
add
clc
fcmovne
movsb
divb
mov
push
loopne
ficoms
xchg
dec
and
xchg
les
mov
aas
jno
call
ljmp
jo
rcrl
dec
not
cmp
iret
pop
sub
mov
and
in
in
sbb
jp
leave
sub
lea
pop
inc
lods
pusha
shll
mov
cmp
lahf
add
ss
sub
fwait
mov
scas
lcall
stos
sub
xor
xchg
push
xor
push
mov
rcll
iret
xor
dec
push
dec
adc
mov
dec
rcr
call
add
or
pop
out
pop
pop
repz
pop
mov
clc
cmpsb
add
loope
cmc
add
and
jae
enter
cltd
mov
or
stos
inc
out
divb
dec
imul
mov
dec
jmp
inc
xchg
mov
pop
mov
push
test
push
out
lds
mov
ss
fdiv
cltd
fisttpll
fisttpll
sbb
add
dec
pop
xchg
testl
mul
dec
mov
sahf
add
mov
mov
inc
subl
in
sub
adc
stos
dec
and
sahf
repz
cmp
repz
cmp
rolb
add
test
aad
mov
add
test
jnp
imul
aad
repnz
jb
lds
clc
fnstenv
mov
je
dec
divb
mov
not
push
mov
nop
cli
enter
test
mov
jae
in
pop
not
orl
sbb
nop
enter
jl
pop
pushf
nop
ds
jnp
test
sarl
test
adc
ss
mov
movsl
mov
popf
push
and
mov
andb
or
mov
dec
mov
pushf
push
mov
push
pop
shlb
sbb
xchg
add
add
mov
pop
imul
push
mov
fnsave
int
jne
cmp
ret
aas
roll
push
or
and
or
pop
sub
jns
pop
push
and
ss
cli
lcall
mov
lcall
push
inc
sbb
lahf
xor
mov
pop
or
dec
cmp
movsb
add
insb
clc
adc
inc
mov
je
pop
int3
jae
je
jbe
cmp
addr16
xchg
loop
fldcw
xchg
xchg
ja
push
insl
mov
loope
mov
xchg
pcmpgtw
sti
jle
adc
cwtl
shr
in
adc
xchg
and
cmc
cmp
push
movb
push
aas
adc
mov
sub
inc
mov
push
add
rcr
lock
das
lods
inc
mov
cli
jmp
rcll
adcb
adc
jg
arpl
xor
movsl
out
fwait
push
mov
xor
loopne
stos
out
mov
mov
dec
mov
and
jmp
cld
ret
bound
repz
ret
sbb
add
xchg
ret
add
rolb
aaa
aaa
cmp
stos
pop
pop
imul
std
stos
insl
scas
leave
aaa
push
cmp
dec
adc
pusha
inc
pop
and
cld
jne
mov
jb
dec
xchg
pusha
pop
add
xor
xor
mov
dec
push
fildl
dec
popa
mov
mov
pop
outsb
sub
mov
shr
test
inc
jbe
je
push
inc
add
jo
lret
insb
das
add
shll
or
push
das
mov
xor
push
rcll
push
loope
xchg
lds
loop
jae
popf
adc
cmpsb
sbb
cmp
mov
subb
add
jmp
push
clc
ret
call
jb
and
pop
call
push
mov
inc
mov
mov
clc
jg
xor
mov
add
mov
dec
jl
sub
cmp
jle
loope
pop
cmpl
sbb
test
aad
cwtl
jbe
cmp
ljmp
pop
add
mov
mov
mov
mov
add
out
or
js
in
aad
xor
push
xchg
cmp
frstor
pushf
xchg
daa
movsl
lahf
mov
fistps
mov
pop
std
inc
aaa
into
inc
push
cmc
outsb
mov
mov
enter
clc
push
icebp
mov
xor
sub
scas
push
pop
fs
pop
sub
aaa
test
stc
idiv
inc
inc
xchg
add
jb
mov
jecxz
ss
movsb
test
stc
xor
and
jae
jbe
pop
mov
push
cmp
ja
ljmp
xchg
xor
mov
pop
outsl
jbe
cmp
add
ret
xlat
sbb
cmova
dec
test
sarl
or
dec
push
xor
mov
pop
in
and
into
pop
popf
cmp
clc
pop
add
mov
push
nop
rcll
stos
arpl
push
rol
cmp
jle,pn
mov
das
fs
test
dec
pusha
pop
dec
es
cmp
test
jns
mov
insl
lock
mov
inc
inc
xchg
xchg
cli
in
adc
cmc
xor
lahf
adc
aaa
movsl
repnz
mov
ret
adc
push
das
lds
inc
jmp
js
mov
xchg
add
mov
pusha
jns
stc
pop
fmull
arpl
dec
pop
stos
pushf
fisubl
clc
out
std
cmpsl
out
jne
mov
mov
sub
mov
jp
cltd
and
and
xor
pop
jne
push
jb
xchg
or
lea
test
sti
dec
pushf
stc
jne
ss
or
or
clc
ss
pop
dec
add
aaa
push
scas
inc
aam
adc
push
pop
jb
in
push
aaa
pop
pop
rol
cmpsb
mov
or
pop
mov
add
adc
rorl
pop
add
jge
add
dec
out
sbb
add
mov
cmp
enter
cmpsb
in
push
lahf
leave
sub
xchg
outsl
add
mov
or
push
pop
jp
xchg
sub
cmp
push
jnp
mov
push
shlb
push
lret
mov
inc
fnstsw
push
aaa
push
loopne
call
adc
inc
repz
sbb
cmp
xchg
pop
and
add
jecxz
or
lock
sub
sub
jl
pop
mov
adcl
mov
xor
push
mov
inc
mov
xchg
mov
pop
dec
jo
out
sbb
insl
sub
cld
xchg
addr16
test
adc
jb
and
popa
mov
push
cmp
mov
fs
mov
jns
push
and
sub
lret
negl
aad
xor
mov
dec
hlt
add
dec
add
lds
sub
mov
xor
sbb
xchg
and
loop
je
mov
dec
jge
in
xor
cli
in
sbb
mov
mov
int3
jne
lret
inc
xor
mov
and
stc
popa
aaa
decb
cmpsl
add
cmp
sub
lahf
cmp
and
adc
mov
outsb
or
es
loopne
stos
int3
sub
test
jmp
shlb
push
mov
xchg
and
cld
cmp
sbb
aam
dec
push
mov
cld
jns
mov
cmpsl
sub
lahf
cs
cmp
js
add
mov
dec
cmpsb
jmp
in
inc
sbb
pop
stc
mov
shlb
daa
jle
pop
roll
mov
daa
shll
and
shlb
push
and
dec
pop
or
stc
mov
stos
add
fucomip
leave
out
and
andl
mov
xchg
movsl
push
mov
cmc
out
jb
xchg
lock
ficoml
cmpsl
aad
push
sbb
les
lods
mov
add
mov
jno
cmp
shll
mov
test
int3
xchg
cmp
sub
xor
sbb
cmpsl
int
ud2
cmp
test
mov
jne
pop
out
ret
aad
jg
or
add
xchg
outsl
jg
addr16
outsl
das
inc
adc
movsl
enter
psrld
int
loope
leave
das
cmc
aaa
das
jns
fs
pop
and
xchg
add
test
sar
sub
sub
sahf
xchg
mov
sub
xchg
out
sbb
mov
sbb
das
mov
and
mov
out
cmpsl
stos
xor
xchg
pop
fsubrs
adc
jbe
gs
push
xchg
mov
gs
jbe
mov
iret
call
jo
outsb
and
cmp
jae
pop
lcall
lcall
pushf
std
mov
dec
and
dec
push
testb
das
scas
inc
cmpsb
adc
mov
ror
insl
inc
stos
xor
leave
dec
dec
cmp
jle
mov
mov
xor
sbb
inc
push
push
mov
pop
mov
fimuls
je
loopne
fdivrl
and
ds
fisttpll
xchg
inc
mulb
addl
fbstp
cmp
pop
aas
sub
pop
test
loopne
scas
cmc
outsl
mov
fists
sub
mov
jmp
test
es
pop
or
stos
ror
adc
push
inc
das
insl
sub
loopne
cmp
cmp
sub
cltd
sbb
or
jl
scas
inc
mov
mov
cmp
pop
inc
pop
cmp
aad
std
or
std
inc
pushf
cmp
mov
and
mov
aam
xor
dec
popf
xor
xchg
aas
push
lock
inc
lret
cli
cwtl
in
sti
daa
and
mov
test
cmp
cmc
addr16
clc
lds
push
ret
js
mov
and
and
mov
and
add
sbb
lods
inc
and
jecxz
sbb
xchg
pop
je
add
pop
test
ret
xor
enter
in
xor
cmc
mov
rolb
ss
mov
in
outsb
test
jl
cmp
or
cmpsl
ja
ror
pop
and
mov
cltd
lea
dec
test
rorl
pop
sbb
cmp
or
dec
fiaddl
xchg
xchg
pop
shlb
lret
jae
lahf
xor
lods
or
mov
outsl
sub
add
clc
add
cmpsb
pop
mov
xor
mov
mov
clc
jnp
movsb
cmp
add
das
jne
insl
loope
cmc
push
in
cmp
add
jp
or
fimuls
shl
sbbb
xor
ss
pop
pop
xor
mov
xchg
adc
les
xchg
je
in
push
aas
jne
mov
mov
ja
fidivs
push
mov
push
jl
call
mov
add
jns
adc
out
sbb
add
adc
ds
sbb
out
in
test
dec
stos
out
cs
jecxz
repnz
ret
sbb
cmp
jge
or
mov
cltd
jle
std
cmp
fisttpl
cmc
cmpsl
xor
jb
negb
test
mov
jmp
int3
sub
rclb
sti
xchg
mov
jbe
jae
and
insl
outsl
jmp
rcl
subl
cmpsb
std
adc
xor
decl
dec
daa
icebp
rorb
lcall
adc
mov
mov
mov
mov
fwait
mov
out
xchg
test
mov
roll
stos
add
jle
add
js
ljmp
repz
bound
stos
test
mov
sub
cmp
clc
xor
cs
mov
popf
enter
pop
bound
shlb
push
ljmp
jae
jmp
ret
sub
mov
mov
in
btr
mov
cmp
dec
cmp
test
rorl
cli
aad
cmp
jae
sbb
mov
xor
shl
fdivs
mov
mov
in
push
sbb
hlt
js
roll
sbb
mov
pop
inc
dec
lods
sub
xchg
cmp
imul
adc
sub
pop
xchg
cwtl
pop
shlb
out
jno
inc
push
popf
sub
pop
ljmp
xor
push
jmp
and
dec
ja
mov
mov
and
mov
sbb
cmp
push
sub
ss
pop
add
daa
aaa
popl
bound
sbb
enter
cmp
lahf
push
stos
sub
sub
addr16
sbb
sbb
add
jmp
xor
cmc
das
rep
adc
push
add
fstps
and
jbe
movsb
pop
sbb
jl
mov
testb
xor
adc
cs
sub
pop
pop
pop
int
dec
pop
mov
mov
test
dec
outsl
mov
push
mov
test
add
fldl
jecxz
loop
lock
xchg
daa
and
add
and
push
daa
cld
leave
add
scas
lret
stc
cmp
push
mov
mov
out
lcall
sub
inc
shr
movsl
mov
nop
cmc
test
insl
les
jo
adcl
rcl
stc
cmp
sub
sub
xchg
jno
popl
ss
adc
je
icebp
mov
andb
lret
mul
pushf
outsl
cld
stc
lods
jbe
xchg
ds
inc
mov
pmullw
lea
push
mov
sbb
idiv
inc
std
movsl
jb
inc
push
or
fbld
sbb
arpl
xchg
adc
test
pop
fistl
cld
mov
jmp
cmc
idivl
stc
adc
mov
je
add
sbb
xor
push
jo
fcmovb
aas
movsl
int3
adc
pop
clc
ret
lock
mov
jge
daa
push
cmp
in
fidivrs
sbb
xchg
sbb
insl
xchg
dec
addr16
xor
das
cmp
xor
mov
pop
sub
mov
imul
mov
bound
ja
icebp
mov
into
or
inc
sub
adc
mov
jg
mov
pop
lds
test
xchg
push
or
pusha
rolb
mov
xor
mov
adc
pushf
jne
in
arpl
insl
ja
in
jo
adc
or
shlb
sti
mov
out
insb
or
add
cltd
push
js
xor
push
cmc
mov
int
pop
cmp
sub
xchg
mov
mov
sbb
std
mov
dec
add
and
insb
pop
icebp
rep
push
mov
ds
inc
out
hlt
int3
out
add
and
clc
jne
popa
jns
rcrl
out
jne
push
jnp
mov
mov
lods
push
cmp
xor
xchg
mov
adc
mov
push
add
pop
and
and
int3
xchg
ret
cmp
adc
aas
mov
es
or
mov
gs
rcrl
or
pop
test
insl
rcrl
inc
rcr
in
addr16
test
aad
xchg
xor
push
xchg
or
push
lret
lods
jns
pop
ds
ja
lahf
test
add
insl
int
add
mov
ljmp
or
filds
sti
and
aaa
pop
push
sbb
mov
data16
icebp
lods
popf
push
and
or
int3
push
mov
std
mov
push
ljmp
mov
roll
lret
push
xor
pop
fmuls
notl
sbb
adc
add
daa
mov
adc
pop
dec
sbb
out
in
nop
imul
xor
dec
sbb
xor
dec
jno
into
add
mov
pop
and
es
or
pop
add
sbb
call
xchg
inc
ljmp
push
imul
inc
and
imul
mov
shl
pop
mov
pushf
shlb
aas
jge
xor
das
test
jp
test
xchg
mov
add
xchg
pop
xor
mov
jle
lock
int
cmc
dec
popf
jle
imul
xchg
mov
cmpsb
ss
pop
imul
adc
adc
inc
jl
sbb
pop
cs
sbb
sub
orl
pop
arpl
pop
dec
pop
cmp
add
outsl
mov
adc
and
cmpb
ret
dec
sarb
xor
iret
aad
mov
sub
int3
clc
mov
nop
lds
dec
adc
daa
andl
mov
and
mov
cmpsb
jl
in
shrl
add
adc
or
xor
pushf
sarl
cmp
popa
lods
je
fnstsw
mov
mov
xor
mov
test
mov
xor
jl
xchg
jmp
dec
das
fwait
inc
mov
push
push
cmp
add
mov
or
xchg
std
dec
loope
sbb
xchg
sbbl
fiadds
cmc
cli
inc
mov
repnz
mov
int
stos
mov
and
imul
push
std
or
in
aaa
es
pusha
popf
nop
fstps
das
je
jae
insl
and
cmpsl
xor
aad
test
sbb
sar
jl
pop
inc
dec
cmc
add
fbld
es
xor
cld
nop
insb
daa
pop
xor
cld
jge
and
scas
fistpll
cmp
stos
add
sbb
pusha
xchg
add
in
icebp
add
es
mov
fwait
mov
or
cltd
dec
shrb
gs
ss
dec
ret
or
mov
pusha
mov
xchg
lret
addr16
stc
clc
lcall
or
mov
cmp
xor
xchg
nop
inc
adc
mov
sbb
ret
push
cmp
pop
jae,pt
enter
cmc
in
xchg
cwtl
hlt
shll
mov
insl
mov
or
mov
or
sar
ret
xchg
cmpsb
cmpsb
xor
test
bound
jno
arpl
mov
into
subb
inc
fcompl
xor
jmp
pop
adc
ffree
adc
push
xchg
or
xchg
dec
out
cmc
mov
push
xor
or
cltd
rcrb
xor
xchg
aas
push
inc
jno
cli
cmpsl
or
jo
cltd
arpl
add
dec
cmpsl
add
push
mov
cmpsl
or
lds
cwtl
cmp
adc
stos
jo
cmp
shl
pop
movsb
les
pop
negl
pop
inc
ja
jne
out
xchg
sbb
mov
mov
add
loopne
cltd
ret
cmp
xorl
xor
js
cmp
xchg
mov
or
mov
pusha
inc
pop
adc
cmpsl
fdecstp
dec
out
add
jnp
cs
fisubrs
cmc
xchg
pusha
inc
and
adcb
mov
daa
in
inc
hlt
inc
push
mov
loope
loope
or
mov
shlb
jbe
add
cmpsb
ror
sub
inc
mov
dec
jg
or
push
xor
ja
jmp
fsubrl
or
mov
pop
mov
cmp
sbb
fs
imul
cmpsb
cmc
cmc
add
xor
cmp
mov
cmpsb
push
cmp
ret
sbb
dec
in
dec
stc
mov
stc
sub
or
daa
pushf
mov
shlb
mov
dec
mov
sub
mov
add
paddsb
clc
andl
xor
or
jmp
daa
mov
jne
inc
push
inc
mov
add
xor
mov
dec
and
mov
cwtl
aaa
outsl
into
pushl
shlb
sbb
fsubs
jnp
pop
jae
loopne
repnz
sbb
xlat
mov
addr16
call
mov
in
push
aas
dec
jge
lods
and
push
dec
mov
inc
pushf
aaa
mov
pusha
and
imull
xor
pop
mov
adc
xor
add
lds
lods
push
jb
xor
in
popf
out
hlt
fistpll
sub
movsl
adc
cwtl
jp
lret
mov
lcall
and
or
mov
xor
sub
cmp
inc
ss
xchg
scas
adc
or
hlt
and
out
mov
sbb
adc
arpl
fildl
jmp
mov
test
test
add
rcll
movsl
xchg
enter
lods
lods
mov
pusha
dec
loop
mov
repz
mov
decb
sbb
jle
mov
hlt
mov
std
inc
cmc
mov
notb
inc
lods
adc
and
cmc
sub
pop
xchg
xor
call
hlt
sbb
lcall
gs
xchg
inc
sub
mov
mov
inc
lods
or
aam
cld
and
ja
inc
and
pop
push
scas
jae
mov
in
sbb
push
pop
add
ficompl
lahf
inc
dec
add
push
inc
roll
dec
icebp
or
gs
sti
lock
xor
pushf
ret
or
inc
int3
mulb
les
xor
out
sti
in
adc
pop
and
dec
adc
cmp
shll
jge
adc
outsb
jno
cltd
lods
pop
mov
in
lock
leave
fsubrl
pusha
out
cmp
pop
bound
dec
das
ss
pop
dec
mov
scas
dec
push
push
cmpb
add
jae
ja
pushf
in
scas
jae
adc
mov
loopne
mov
and
add
ret
iret
test
push
sahf
es
pop
rorl
in
push
std
clc
inc
jmp
cmpsl
es
pop
or
dec
and
mov
pop
push
shlb
ja
movsl
rcll
push
cwtl
fwait
movsb
lcall
adc
aaa
clc
push
jne
sbbb
cmpsl
stc
or
xchg
ja
scas
pusha
adc
ljmp
mov
in
or
cld
lret
movsb
cmp
aad
aas
cmp
int
xchg
add
inc
jge
push
in
xor
stos
add
enter
dec
mov
aaa
mov
sbb
xor
mov
add
dec
add
movsl
jecxz
outsl
push
aad
out
pop
mov
loop
mov
lahf
lret
push
dec
and
jnp
jmp
push
pop
cmp
pushf
sti
mov
test
cld
jns
cs
hlt
cltd
or
bound
mov
or
push
popf
fsubl
sbb
jmp
mov
in
mov
and
mov
cltd
out
call
sbb
xchg
mov
aas
sub
rcrb
sahf
sbb
jnp
and
dec
shlb
mov
les
sbb
mov
clc
dec
and
mov
jge
imul
outsl
pop
dec
lahf
cld
nop
mov
add
xor
cmc
pop
and
sbb
mov
push
popf
add
outsb
dec
push
jle
roll
movsl
hlt
push
fsts
mov
or
movsb
push
aad
test
rclb
repz
adc
test
fcoml
mov
hlt
mov
lret
stc
out
adc
cltd
clc
cmp
lods
add
sbb
icebp
mov
insb
push
arpl
movsb
jge
sbb
das
mov
mov
cmp
sbb
mov
gs
adc
movsl
adc
inc
xchg
call
mov
scas
cmp
inc
add
pop
pusha
stc
mov
aad
cwtl
adc
das
sbb
cmp
inc
addr16
int3
ja
jno
out
jecxz
fs
mov
push
mov
mov
or
test
gs
out
push
mov
rcll
mov
mov
sbb
gs
int3
inc
outsl
cwtl
mov
sbb
inc
push
jmp
pushf
fisubrl
or
inc
stc
dec
jmp
pusha
lret
aaa
mov
stc
adc
jmp
loop
out
stc
xor
fs
sbb
dec
add
cmp
jmp
std
ret
sbb
cwtl
pop
sbb
movsl
jle
loope
fnstcw
movsl
aad
sbb
add
pop
into
sub
and
sub
inc
dec
insl
add
shrl
jae
xchg
xor
in
les
pop
dec
outsl
ficompl
stos
loope
push
dec
es
adc
pop
xchg
mov
xchg
aaa
add
test
sahf
push
in
add
fcoml
sar
adc
js
leave
fiadds
add
and
ror
lock
pop
into
out
hlt
add
mov
sbb
fnsave
sub
jo
push
dec
push
jno
jp
addb
push
stos
cmp
in
jp
push
les
cltd
push
cs
dec
mov
call
pop
push
pop
push
mov
std
lods
stos
aam
xchg
scas
sbb
loopne
mov
xchg
iret
cmp
movsl
mov
pop
jno
xchg
fists
push
in
daa
cmp
mov
add
cmc
inc
in
pop
repz
aad
cmp
shl
add
rcrb
pop
jg
fs
lret
in
dec
loop
cmp
cld
mov
in
push
popf
movsb
call
in
adc
movsl
addb
pusha
push
in
push
dec
lret
repz
jl
lahf
xchg
sub
push
inc
and
mov
test
add
xchg
add
push
mov
out
mov
push
stc
jnp
cmp
xor
std
and
mov
adcl
mov
mov
jge
ds
stc
mov
pop
push
stc
xor
add
adc
cwtl
pop
push
jmp
rcrl
mov
fucomi
inc
jae
and
stc
sbb
in
xorl
test
daa
movsb
sub
rcrl
insl
pusha
add
std
adc
in
adc
sbb
mov
mov
mov
mov
in
pop
test
aas
push
cmp
lds
xor
das
test
xorl
int3
push
sub
push
fdivl
loopne
mov
push
pop
add
push
mov
jno
inc
mov
push
cmp
pop
test
xor
jns
enter
mov
and
cmp
cmpsl
jg
mov
lret
lods
jne
mov
pop
pop
cmpsl
mov
mov
jp
les
add
xchg
mov
ret
add
les
or
adc
mov
mov
ja
clc
xor
out
cmp
sub
adc
sbb
lret
cs
out
repz
ljmp
in
add
aaa
mov
cld
into
mov
push
dec
push
add
push
cmp
inc
idivb
out
fidivrl
add
mov
mov
and
mov
pusha
mov
sbb
and
mov
mov
mov
sbb
xchg
dec
adc
lock
and
adc
arpl
out
jmp
mov
nop
cmp
sbb
xchg
add
clc
rol
dec
cmp
push
jl
mov
xor
sbb
or
cmp
cli
outsl
lds
add
es
push
shl
and
sub
inc
lds
ret
adc
lock
ja
loopne
rcr
mov
aaa
xchg
cmc
add
notl
movsb
mov
mov
jge
add
pop
inc
ror
in
or
icebp
push
in
stc
add
cltd
stc
fstps
pop
sbb
lods
test
mov
mov
inc
daa
int3
aas
fbstp
sbb
aam
adc
stc
adc
jo
shrb
sbb
xor
xchg
xor
sub
inc
and
adc
fistpll
cmpsl
in
sbb
mov
inc
rorl
push
cmp
sbb
test
mov
cmp
daa
xor
pop
sub
pushf
push
aam
call
ds
mov
adc
mov
pop
sbb
out
add
shlb
xchg
add
mov
shr
adc
cmp
fsubs
xor
sbb
subl
mov
and
jo
sbb
sbb
inc
mulb
repz
mov
cltd
mov
pop
cmc
xchg
rol
flds
aad
push
mov
ret
clc
push
call
add
enter
mov
jmp
lods
push
in
xor
adc
lahf
dec
jge
fdivl
enter
call
sbb
and
loope
xor
out
dec
mov
push
mov
cltd
jp
sbb
fadd
mov
shlb
xchg
mov
out
mov
inc
mov
dec
fiaddl
and
stc
xchg
mov
cmc
xor
pmaddwd
mov
inc
xor
test
pop
xchg
out
pop
imulb
int
or
mov
mov
cltd
call
dec
outsl
jno
or
jns
add
sbb
out
test
insl
dec
cmp
mov
and
mov
das
sub
imul
sbb
lcall
add
js
jg
ss
cmpsb
out
int3
cltd
lods
fcoml
aas
es
sub
hlt
xchg
mov
sub
push
pop
mov
cmpsl
or
mov
sar
jns
aam
leave
lea
and
mov
sbb
jle
pop
fdivrs
pop
dec
add
xchg
pop
aad
jno
repz
and
hlt
cmc
lds
subl
cmpsl
push
sub
add
cmp
xlat
add
mov
push
lret
lds
jmpw
pop
xor
push
hlt
ret
xchg
xlat
ss
out
in
movsb
lock
sub
ror
add
lret
push
icebp
movsb
mov
aad
out
daa
pop
hlt
adc
push
or
lock
rol
sar
arpl
js
xchg
xchg
add
in
and
aas
and
sbb
mov
int
mov
mov
inc
es
lret
out
mov
jmp
xor
pop
and
cltd
mov
xchg
sti
imul
mov
adc
rcrb
mov
icebp
mov
lret
test
inc
pcmpeqd
out
movnti
or
pop
ss
dec
add
test
xor
mov
aas
mov
cmp
lret
mov
sbb
movsl
cmp
pop
insb
dec
aaa
and
push
jnp
cmp
aam
and
xchg
cmp
mov
cli
nop
gs
pop
pop
adc
adc
gs
jbe
das
dec
mov
mov
in
push
fcmovb
push
ja
pop
push
sbb
pop
cmp
in
push
pop
mov
dec
and
inc
je
movsb
aad
pop
add
loop
mov
add
daa
sbb
mov
roll
push
xlat
rolb
shll
les
aaa
jne
push
xchg
and
mov
xor
pop
cs
add
movsl
outsl
add
inc
push
mov
dec
sbb
mov
les
mov
leave
sub
fisttps
inc
pop
mov
test
or
jge
roll
out
xchg
add
pushf
ret
rcr
sub
mov
mov
pop
pop
sbb
push
das
cs
daa
movsl
test
jge
jbe
call
movsl
ja
mov
dec
dec
imul
fldlg2
cmpsb
pop
into
push
push
lcall
mov
cltd
cmp
pop
cltd
arpl
daa
movsl
pop
add
sbb
lahf
inc
ds
aas
sbb
or
dec
xchg
mov
xchg
lret
test
mov
repnz
xor
mov
and
push
mov
cmp
and
mov
xor
movsl
lods
testl
fisubrs
xor
clc
call
push
push
xor
adc
lods
mov
push
inc
mov
cmp
dec
lret
nop
imul
aad
dec
jecxz
movsl
leave
inc
push
cli
or
pop
and
jb
cmp
mov
mov
dec
add
pop
or
jmp
add
aam
fadds
fsubl
jp
imul
fs
pop
lahf
jl
xor
mov
or
cmc
pusha
rol
mov
popf
clc
sti
mov
mov
inc
cmpsb
xor
inc
scas
adc
jo
pop
and
imul
std
jle
dec
push
subl
mov
xchg
ret
loope
das
xchg
and
push
insl
out
lods
lods
cmp
bound
pop
pop
pop
movsb
movsl
hlt
pop
inc
cmp
nop
inc
cmc
mov
lods
jg
data16
or
xchg
fstpl
mov
test
icebp
sti
mov
into
dec
pop
in
icebp
outsl
jmp
push
je
test
arpl
inc
pop
add
lds
mov
mov
fisubrl
out
outsl
add
pop
icebp
enter
lahf
enter
gs
dec
adcb
dec
cltd
sbb
mov
push
mov
push
int
xchg
fidivl
addr16
rclb
in
mov
mov
shrl
cmpsl
push
sti
adc
cltd
or
ss
cmp
cmp
xor
sbb
into
push
lret
mov
cmpl
icebp
icebp
pop
mov
aaa
xor
jecxz
call
repz
push
pop
pushf
push
add
test
inc
mov
push
inc
or
scas
stos
or
pop
xchg
push
int
dec
push
mov
or
pop
xor
nop
cmp
dec
cmp
mov
test
cmp
jb
cmpl
loop
mov
loopne
sub
mov
into
rclb
sahf
pop
dec
cmpsl
pusha
xchg
xor
cmc
add
push
mov
dec
xchg
mov
ja
aaa
cwtl
pop
cld
lcall
jb
pusha
fnstsw
aaa
mov
rcrl
pop
pop
cmp
mov
inc
jns
faddl
fisubrl
loopne
cwtl
bound
les
mov
mov
and
jae
clc
push
mov
jo
inc
cltd
popf
ds
pop
rolb
out
xchg
push
xchg
adc
outsb
or
or
or
lret
push
mov
sub
cwtl
sub
inc
mov
dec
bound
xor
push
push
or
mov
mov
std
mov
out
in
lahf
pop
xor
mov
cmp
adc
add
hlt
repz
push
and
loop
mov
rcrl
add
pop
mov
and
jne
cli
sub
je
test
push
push
mov
or
dec
mov
ds
push
dec
cmc
xchg
mov
cmpsl
insb
dec
dec
pusha
mov
iret
into
cmp
push
and
in
push
sbb
push
sbb
loop
test
or
ja
and
aaa
in
jb
test
jo
xor
dec
gs
adc
fidivrs
jo
cmc
inc
insl
pop
addr16
lea
jp
int3
adc
ja
cmc
daa
shll
adc
adc
shl
and
mov
xlat
repz
or
pushf
lds
enter
jno
jge
mov
aas
bound
int
imul
ljmp
dec
movsl
push
aaa
inc
adc
mov
jge
loope
std
sbb
sub
in
daa
mov
test
xchg
dec
ret
jne
and
sub
in
add
jmp
jl
sbb
push
cmpsb
icebp
fstpl
sub
inc
loope
adc
or
push
xor
in
aaa
daa
js
mulb
xor
daa
mov
fsts
icebp
lds
outsb
xor
cmp
jbe
xchg
pusha
push
pop
in
in
out
aaa
jle
jg
iret
lret
sub
sbb
iret
xlat
add
mov
add
jne
add
mov
mov
sarl
or
shll
pop
mov
shlb
aaa
lock
mov
cmp
pop
int3
movsl
scas
mov
pop
int
pusha
popa
jae
xor
inc
xlat
inc
push
push
das
fwait
daa
mov
addl
lock
dec
xorl
xor
jl
sub
xor
repz
mov
sub
jns
jo
and
inc
xor
inc
inc
cmp
cmp
dec
das
sbb
pop
dec
xchg
dec
iret
mov
pusha
mov
xchg
scas
sbb
cmp
cmp
inc
and
test
call
adc
pop
lea
decb
inc
jnp
dec
test
fcomp
inc
cmp
pushf
jle
sti
cli
jp
loope
and
popf
add
sbb
cld
out
dec
pop
jmp
in
and
inc
outsl
clc
cmp
mov
adc
in
imul
xchg
and
cmp
jne
scas
or
rorl
cmpsl
xor
or
adc
std
cltd
push
in
sub
xchg
pop
mov
cmc
sub
mov
add
ss
fs
ret
pop
sub
daa
xchg
xor
mov
adc
sub
dec
cmp
mulb
movsl
mov
adc
ja
sub
adc
push
fstl
sub
push
data16
lock
xor
shlb
cmp
add
mov
sub
in
leave
push
xor
dec
push
pop
sub
test
push
mov
ds
mov
mov
mov
mov
pushl
inc
inc
in
cmpsl
and
lods
in
adc
or
or
pop
inc
and
ljmp
xchg
test
aad
add
icebp
adc
adcb
je
xchg
aam
roll
dec
and
push
rcl
add
fwait
mov
fnstcw
loop
repz
xchg
sar
ret
pusha
cmp
lock
sbb
pop
mov
lods
pop
sarl
pop
cli
shlb
rorb
in
push
jg
pop
xchg
in
push
test
les
jo
leave
in
sub
scas
push
sbb
lcall
repnz
cmpsb
mov
aaa
jnp
and
stos
push
jne
and
add
outsl
add
popa
jge
mov
push
jno
jl
std
jmp
mov
mov
popa
xor
xlat
dec
and
movsl
push
aaa
cli
nop
dec
push
and
dec
fwait
mov
mov
xchg
push
xor
iret
sbb
and
mov
and
sub
cmp
sub
inc
test
in
stc
cmp
rcrl
rcll
mov
and
mov
mov
push
cmpsl
test
popf
cmp
jl
or
push
dec
mov
pop
xchg
ja
daa
ret
mov
xor
rcll
movsb
pusha
imul
insl
cmp
jae
outsb
or
daa
rcl
inc
fs
fldl
add
add
mov
mov
pop
daa
cmpsl
and
push
add
xchg
cli
inc
mov
mov
gs
or
loopne
addr16
movsl
frstor
mov
addr16
rorb
mov
movsl
xorl
push
aad
inc
cwtl
cmp
inc
mov
dec
pushf
ss
int3
in
cltd
scas
jp
xor
add
rolb
decb
aad
inc
daa
out
into
popf
xchg
paddsw
pushf
inc
cmp
or
loopne
stos
adc
add
gs
in
movsb
mov
dec
add
stos
cmpl
insl
mov
fisubrl
sahf
outsl
bound
test
sti
aas
mov
sbbl
cld
repz
popa
sbb
sbb
add
out
jl
inc
test
ss
mov
jmp
pop
int3
sbb
or
fidivs
sbb
fisttpl
add
mov
fstpl
mov
dec
leave
add
movsl
push
decb
pop
or
je
test
sbb
add
adc
dec
pop
popa
adc
jbe
and
jle
je
je
lods
cwtl
pop
es
mov
imul
stos
dec
jne
loop
adc
mov
xor
lock
lds
fists
imul
and
sbb
pop
fcomps
gs
lock
sub
out
push
mov
fs
xor
js
or
std
aaa
ss
lcall
mov
in
mov
fldenv
add
push
outsl
sbb
mov
in
xor
arpl
leave
pusha
xchg
cmpsb
out
add
movsb
mov
add
push
cli
std
sbb
aam
sub
test
push
adc
cmp
push
loope
icebp
and
pop
addb
push
mov
sbb
add
movl
pop
loop
in
fwait
loopne
pusha
jne
xchg
das
negl
arpl
and
testb
mov
sbb
andl
xchg
and
pop
jne
push
or
mov
lahf
xchg
popf
jle
add
and
or
xor
jbe
xchg
sub
adcb
sbb
mov
adc
subl
cltd
push
test
arpl
cmp
xor
fistl
in
gs
or
inc
pushf
add
sbb
add
movsl
xlat
add
dec
push
fisubs
stc
cmpsl
mov
dec
jmp
popa
roll
outsl
js
jmp
xorb
push
xor
test
adc
xchg
out
push
ja
std
add
shrb
aas
call
push
push
aas
test
sbb
mov
icebp
xor
and
adc
mov
mov
inc
inc
mov
sbb
mov
mov
pusha
lahf
and
adc
add
jb
xor
inc
dec
inc
mov
popf
push
daa
adc
jecxz
adc
icebp
pop
xchg
cwtl
sub
sub
pop
cmp
and
inc
and
outsl
lock
inc
sub
xchg
add
push
leave
cmp
das
call
int
pop
add
aad
dec
sub
aam
push
sar
pop
cmp
mov
adc
sub
sub
pusha
test
add
cmpsb
sub
loop
ffree
or
js
sti
shll
mov
clc
xchg
repnz
test
into
pop
shlb
fsubrs
lods
aam
es
dec
sub
lods
dec
fs
push
sbb
xchg
cmc
adc
movsb
ljmp
lret
lds
incb
xor
push
in
enter
addb
in
dec
sbb
push
or
mov
inc
lock
rolb
push
or
sub
mov
stos
sub
pop
dec
cmc
mov
pop
jmp
lcall
add
push
mov
and
movsl
stos
lds
rolb
cmp
loope
cli
jae
std
sub
in
int3
sub
sahf
mov
mov
es
sbb
vmovshdup
pop
mov
es
or
jo
lock
icebp
out
hlt
outsl
das
sbb
test
pop
aaa
jb
mov
int3
std
outsl
fadds
mov
scas
push
aam
mov
movl
mov
mov
pop
fildll
xchg
push
push
gs
bound
je
add
jecxz
sub
cmp
dec
jnp
daa
repnz
fiaddl
mov
ror
dec
out
call
xchg
cmpsl
mov
out
sbb
ds
loop
out
mov
add
adc
std
mov
or
out
call
jae
sbb
jge
sbb
repz
xor
mov
fmull
cld
movsl
js
mov
lods
fs
pop
mov
test
inc
lahf
xchg
popf
xchg
xchg
in
cmpsl
sub
inc
sahf
xchg
push
push
xor
push
sbb
psubusb
out
lds
add
sub
lods
sbb
xlat
test
sbb
xor
jns
cmc
add
jg
in
sbb
mov
add
daa
mov
pop
mov
pop
in
out
add
test
adc
lods
jbe
sbb
mov
xchg
jl
and
sbb
xor
and
hlt
add
cmpsl
call
outsl
pop
idiv
addr16
sbb
sbb
inc
mov
pusha
sbb
push
and
lahf
shll
cltd
or
ja
and
les
pop
addb
or
cmpb
stc
jns
mov
fldcw
and
je
nop
mov
mov
fistpl
or
fisttpl
pusha
std
jl
mov
adc
dec
in
adc
jns
ret
stc
movsl
sbb
cmp
and
xor
mov
pop
xchg
and
mov
roll
daa
mov
icebp
cwtl
xchg
dec
outsb
dec
int3
adc
sbb
inc
fsin
icebp
dec
cli
pop
insb
mov
addr16
cltd
insl
pop
mov
sbb
cmp
jns
ss
aad
mov
mov
mov
lret
ds
fdivs
dec
dec
cmp
xor
add
cmpsb
fstpl
iret
ljmp
orb
iret
xchg
jo
js
xchg
pop
or
data16
dec
lret
icebp
pop
sbb
dec
addr16
shlb
les
icebp
addl
push
pop
ror
push
jg
aaa
dec
and
jp
mov
icebp
jbe
jmp
pop
movsb
or
dec
loop
push
outsl
scas
xlat
mov
xchg
sub
xor
stc
mul
sbb
cmc
in
push
mulb
sbb
push
std
iret
mov
dec
loope
cmp
mov
mov
sub
sub
lock
test
ret
insb
fisubl
lods
loope
fwait
call
test
out
sbb
cmpsl
out
out
mov
sti
in
cmp
xchg
gs
cmc
cltd
decb
mov
sahf
jne
negb
xchg
popa
sbb
fstps
push
icebp
xor
xchg
nop
in
mov
add
loope
popf
fldcw
in
outsl
sub
std
sbb
lock
sahf
add
push
xlat
push
shrb
shl
out
roll
pop
jne
jo
mov
mov
adc
out
mov
neg
pop
and
or
popa
jge
fld
and
shl
and
and
cmpsl
cmpsl
pop
inc
mov
mov
ds
aad
push
jmp
shrl
mov
into
int
stc
sbb
loopne
in
sbb
adc
loope
jle
mov
push
adc
or
sbb
data16
push
shlb
inc
xor
addb
mov
inc
scas
add
out
cltd
lea
out
mov
sub
gs
sbb
add
loopne
ja
xlat
jbe
std
bound
outsl
dec
shrl
movsl
test
sbb
pusha
adc
sub
aam
push
pop
cmpsb
mov
cmpsl
rcll
jg
loope
sub
in
mov
or
rol
daa
mov
add
or
cmc
push
inc
fsts
in
pop
xchg
aad
mov
xchg
movsb
in
pop
lds
sbb
inc
xorl
inc
add
es
cmpsl
aad
loopne
aas
rclb
in
mov
inc
sub
push
icebp
add
xor
or
in
xchg
pop
pop
jb,pt
out
fadd
sbb
out
xchg
aam
xor
pop
es
mov
aad
loopne
add
xorb
inc
adcb
pop
jg
sbb
aam
xlat
cwtl
mov
mov
icebp
leave
test
sbb
fisubs
js
add
fnstenv
xor
stos
frstor
add
test
sbb
bnd
jmp
insl
sub
push
or
add
sub
push
fsubrs
and
push
cltd
rcrb
or
fistpll
cltd
insb
insl
dec
pop
jno
test
es
jbe
ja
in
sbb
xor
gs
push
add
add
adc
cmp
cmc
mov
popf
int
pop
inc
cld
jb
jg
call
mov
lret
in
and
adc
lahf
int
movsl
pop
mov
cmc
outsb
xchg
fsubrl
test
in
mov
jecxz
ljmp
sub
lahf
mov
test
mov
cmp
sub
loop
decl
imul
clc
mov
test
or
mov
push
mov
mov
in
add
pushf
inc
faddl
sub
cltd
xlat
and
mov
inc
sub
call
inc
and
xchg
rorl
sub
dec
dec
mov
call
lret
cmp
dec
faddl
add
push
in
mov
add
clc
pusha
pop
xor
pop
shl
cmp
add
stos
jb
jne
js
enter
and
clc
mov
cmp
mov
or
mov
out
push
inc
or
adc
fs
pop
mov
pop
in
test
sbb
addr16
dec
fnstsw
icebp
xor
out
outsl
xchg
mov
lds
aad
enter
mov
and
lcall
cmp
xor
and
sub
adc
les
inc
xor
pop
mov
fidivs
rcll
cs
mov
mov
mov
shrb
out
jae
movsl
push
je
cmp
pop
mov
shld
pop
cmp
dec
xchg
adc
fldcw
jns
mov
aam
pop
jns
pop
std
xchg
push
fidivs
sbbb
adc
pop
fistl
je
or
sbb
movsb
nop
add
inc
inc
sbb
pop
ljmp
pusha
push
dec
cwtl
jnp
sbb
pop
cmp
sbb
or
cmc
jmp
adc
lea
inc
xor
and
es
je
les
daa
or
outsb
imul
push
jnp
aam
cmpsl
and
mov
in
std
mov
lds
sbb
push
cmp
xlat
nop
sbb
pushf
mov
call
push
mov
xchg
mov
mov
test
or
icebp
jl
push
sub
aas
mov
push
in
cmpb
add
pop
cmp
ret
fwait
and
xchg
loop
sbb
inc
add
test
sbb
mov
and
mov
sbb
pop
mov
mov
sbb
cmp
ret
push
pop
mov
jns
and
or
lods
cmp
pop
and
cmp
xchg
adc
or
cmpsl
in
mov
loopne
push
fwait
mov
push
sub
mov
inc
mov
gs
decl
movsl
mov
in
mov
mov
xor
push
xor
cmp
scas
test
or
mov
cmp
push
add
mov
xchg
mov
adc
cmp
pop
xchg
cli
negl
clc
call
xchg
pop
dec
insl
cs
movsl
jne
ss
dec
cmc
ja
adc
mov
push
cld
ret
outsl
ja
ljmp
adc
mov
mov
cmp
outsl
xor
mov
jns
xor
test
adc
nop
pop
xor
in
jp
push
lds
and
cmp
lahf
cmc
cwtl
sahf
hlt
or
adc
cmp
sub
xor
and
bnd
pop
daa
das
out
mov
sbb
mov
stos
mov
jge
enter
pop
aad
sbb
gs
test
mov
and
mov
push
std
jnp
jecxz
cmp
sub
lods
cld
int3
or
push
pusha
push
insl
das
add
out
mov
jne
out
imul
add
jo
or
mov
mov
mov
xor
and
xor
ja
mov
and
fwait
xor
mov
push
iret
sub
or
sub
sub
repz
mov
and
add
std
mov
jae
cmp
push
daa
and
shll
pop
jno
lods
lret
sbb
dec
fs
push
pop
movsl
cli
stos
mov
mov
xor
adc
negb
and
sbb
push
inc
popa
adcl
adc
iret
push
mov
ja
icebp
sub
adcl
inc
and
outsl
fwait
and
in
shl
nop
and
xor
mov
cmp
cmc
test
movsl
push
fmul
aam
adc
nop
xor
mov
insb
mov
jo
mov
xor
mov
jp
pop
mov
adc
cwtl
push
js
mov
jb
or
repz
lods
jmp
mov
cld
inc
jo
das
sbbb
popf
add
sbb
sub
add
lret
shrb
cmpsl
test
outsl
cmc
sub
and
data16
popa
lods
pop
mov
xor
mov
out
xchg
dec
sbb
push
es
cmp
stos
mov
aas
daa
imulb
lea
pushf
int
add
sub
pop
mov
cwtl
and
and
mov
push
inc
or
add
std
je
mov
lds
mov
adc
inc
jmp
mov
movsb
sbb
iret
addb
aam
lock
lret
or
push
adc
dec
arpl
add
sbb
in
cltd
stos
test
xchg
lock
xchg
mov
lret
test
pop
pusha
mov
sub
jae
inc
jno
jb
cmp
pop
adcl
test
lods
in
xor
ss
sbb
sbb
cltd
mov
in
mov
sbb
mov
les
inc
sbb
cmc
pop
jns
jae
push
in
fcoms
cmpsl
int
xor
mov
jae
push
mov
inc
mov
in
xchg
lret
ja
xor
jge
outsl
scas
or
sbb
out
stos
dec
das
mov
push
cmp
fidivl
add
sahf
pop
daa
lret
and
lods
xchg
out
out
clc
dec
ljmp
popa
fisubl
inc
add
fisubl
aad
mov
sub
jle
add
lods
push
push
movsl
xor
dec
mov
pop
add
or
lahf
jmp
dec
insb
out
adc
stos
das
pop
xor
stc
adc
cmp
cltd
jne
int3
and
mov
int
xchg
cmc
sarl
adc
xor
jnp
pop
mov
and
xor
mov
andl
sbbl
and
sbb
mov
je
cltd
insl
inc
push
inc
add
dec
stos
adc
inc
cmp
mov
sub
push
sub
push
lods
loopne
inc
dec
cmp
or
adc
cwtl
cltd
and
pop
leave
in
into
and
test
out
bound
inc
mov
movsl
mov
xorl
mov
adc
test
or
mov
mov
pop
loope
fiaddl
dec
mov
or
cli
jp
mov
test
xlat
and
in
mov
insl
lret
sbb
ds
call
mov
xchg
xchg
jae
mov
pop
mov
jmp
mov
add
cmc
xchg
lret
out
je
movsl
mov
push
rsqrtps
adc
dec
lret
arpl
and
inc
in
push
and
push
dec
scas
push
nop
adc
mov
adc
stc
jno
dec
cmp
push
test
pop
fadds
repz
aad
lds
cmpsb
jae
addr16
dec
es
mov
xchg
cmpb
pop
das
and
adc
sub
mov
cmp
mov
shlb
cmp
cwtl
fmull
pop
mov
inc
sub
xor
cmp
aaa
ret
push
mov
in
leave
adc
insb
lds
push
insl
push
cmpl
push
mov
mov
cmp
sbb
adc
ljmp
mov
dec
and
cmc
ret
sub
and
loope
sbb
das
mov
lds
aaa
aas
adcb
nop
mov
das
les
ja
pop
jmp
lds
addr16
js
fisubrl
repnz
dec
and
jae
repz
or
and
in
shrl
push
or
push
mov
andb
xor
mov
arpl
add
shll
add
adc
pop
call
sbb
adc
mov
pushf
push
pop
xor
xor
insl
lods
pop
mov
in
jp
add
dec
cmp
xor
mov
mov
cwtl
in
add
inc
push
test
lret
cmpl
mov
cmp
insb
lock
inc
sub
jl
movsb
cmp
jmp
fisubrs
fisubrs
ss
aaa
lcall
rol
mov
sbb
dec
cmp
push
sub
and
sbb
in
in
xorl
cmc
dec
adc
aad
dec
jge
mov
hlt
cwtl
sub
outsl
lock
jae
adc
pop
inc
push
sti
cs
push
loopne
add
pop
xchg
sbb
sub
add
ud1
outsl
or
shl
outsl
mov
loope
jb
shll
cmp
adc
dec
push
jmp
jbe
pop
xchg
mov
je
mov
jg
xchg
adc
adc
aaa
out
daa
and
xor
loope
ret
inc
rolb
jmp
enter
cmc
mov
xchg
add
push
mov
mov
push
daa
jo
cmp
fwait
cmp
xorb
xlat
and
xor
fnstsw
cmc
cmp
mov
aam
mov
jge
rorl
mov
popf
adc
ja
mov
bnd
dec
and
js
jne
sub
std
std
push
fdivl
pop
gs
adc
add
ja
pop
mov
sub
and
ja
pop
mov
cltd
jmp
sub
loop
pushf
cmp
mov
dec
arpl
es
js
xchg
movsb
je
and
int
sub
fistpl
outsb
fimull
pop
or
mov
and
push
mov
aaa
adc
hlt
andl
or
push
cmp
enter
leave
imul
dec
mov
popf
mov
cli
adc
push
aad
out
pop
add
xor
cmp
cmp
and
adc
cmp
cmp
mov
cltd
insl
cmp
add
movsb
mov
cmpsl
sub
rorl
divb
mov
ss
ret
pop
inc
inc
sbb
add
notl
pusha
mov
lahf
aaa
in
inc
mov
pop
loope
nop
cmp
add
push
jno
jne
lds
test
rclb
leave
cmp
enter
sahf
add
adc
or
notb
dec
adc
subl
dec
ret
shrl
and
add
ds
mov
data16
mov
lret
mov
lods
jmp
xor
mov
and
addr16
fadd
push
pop
clc
push
cs
rol
jmp
test
lods
dec
mov
mov
xchg
pop
imul
movsl
xor
push
and
mov
lret
push
in
js
adc
fisubl
int
jae
mov
int
clc
sbb
mov
sahf
lea
out
push
mov
lret
mov
mov
and
pop
lods
adcb
cmpsb
ds
inc
pop
inc
ret
adc
cmpsb
and
std
in
scas
mov
mov
xlat
inc
pushf
data16
lcall
and
add
ljmp
cmpsb
mov
in
inc
ds
roll
jecxz
dec
inc
inc
and
les
jno
mov
cmpb
repnz
jae
pop
imul
imul
leave
shr
pushf
cmp
adc
das
popf
sbb
push
push
leave
out
dec
sbb
dec
jnp
fmul
icebp
mov
cmp
and
sti
mov
test
enter
adc
out
stc
or
push
xor
sub
shll
sahf
pushf
divl
subb
sub
adc
andl
mov
adc
xor
mov
idivl
mov
sbb
xor
ds
pop
hlt
jmp
std
mov
aas
call
icebp
shrb
adc
test
test
lods
jne
test
pop
dec
fbstp
jne
cld
push
cmc
in
or
sbb
rcrl
mov
in
adc
jns
or
lahf
int3
xor
in
inc
xor
std
jbe
ja
clc
pop
ss
pop
and
popa
lods
std
xor
js
insl
cmp
add
jg
or
cmp
lock
push
jge
into
fnsave
arpl
xchg
hlt
sub
daa
sub
insl
cmpsl
mov
mov
mov
and
mov
loope
or
loope
sub
test
xlat
cmc
push
jae
dec
orb
inc
mov
arpl
adc
insb
dec
rorl
aam
das
and
mov
nopl
daa
lods
jno
cmp
sub
xchg
dec
clc
cmpb
mov
lods
in
pop
push
pop
outsl
push
mov
jge
dec
call
ja
repz
sbb
clc
push
mov
sbb
sub
xchg
mov
cmpsl
in
pop
stos
mov
out
out
iret
es
lret
rolb
es
dec
dec
outsl
xor
mov
mov
xor
int
or
mov
in
mov
sbb
xor
sbb
rorb
cmp
inc
aam
pusha
xor
adc
mov
movsb
push
mov
and
daa
xor
mov
lret
or
mov
aad
in
test
shlb
jmp
mov
movsb
mov
repz
push
call
push
jge
imul
stc
push
push
or
lahf
pop
mov
pop
loopne
test
je
mov
jg
icebp
in
mov
xor
xchg
or
imul
movsb
int3
sbb
cmp
mov
cmpsb
fwait
idiv
inc
fisttpll
pop
adc
xchg
pop
and
aad
add
lahf
cmp
pop
xchg
cli
mov
mov
in
push
pop
aas
inc
sub
and
push
pushf
rolb
dec
mov
stc
mov
mov
test
or
sarl
push
ja
sbb
adc
fld
push
sbb
pop
testl
int
imul
add
das
cmp
lock
fldenv
lret
pop
xchg
xchg
iret
xchg
lock
lock
cmp
jae
mov
movsl
pop
xor
mov
cmp
sub
call
adc
mov
pop
out
in
xchg
data16
rolb
out
cltd
lret
lods
pusha
jo
out
in
adc
repnz
pop
aaa
push
mov
sbb
dec
adc
add
pop
js
mov
shll
mov
loope
jl
mov
cmpsb
or
push
pop
push
adc
or
or
xchg
inc
xor
lret
jnp
lods
fs
pmaddwd
in
sbb
fdiv
cmp
fs
outsl
ja
or
mov
adc
in
inc
cltd
mov
test
mov
xor
adc
and
lret
inc
cmc
int3
out
or
dec
sbb
adc
adc
imul
in
push
add
in
sub
or
sub
sub
imul
aam
jge
std
cltd
jge
push
ljmp
xor
loop
rcr
movsl
xor
dec
imul
std
lahf
xor
adc
mov
xchg
cmp
imul
fucomp
and
mov
stc
stc
mov
sub
and
icebp
add
mov
sbb
adc
icebp
add
xlat
sub
push
cmp
push
lods
pop
pop
mov
outsl
mov
dec
int
mov
mov
fs
xor
cmpsl
scas
nop
scas
mov
outsl
out
xor
gs
aaa
movsb
data16
rcl
rorl
and
out
movsb
les
cmp
cmp
or
mov
ds
movsb
cmp
lcall
mov
insb
ret
jo
and
aad
mov
push
and
mov
stc
cld
imul
pop
mov
xchg
fstpl
sbb
std
push
dec
testl
or
xor
cmp
cmp
or
fistps
add
ja
movsb
insl
sub
inc
pushf
pop
sbb
add
push
mov
cmp
aaa
pop
cmp
inc
xchg
out
and
dec
xor
jge
push
xor
mov
pop
ret
xchg
or
mov
inc
je
mov
in
mov
mov
adc
cmp
frstor
or
scas
push
and
cmp
icebp
aas
pushf
and
sbb
add
mov
leave
cs
std
sub
xor
in
and
sbb
aas
jg
ret
cmp
rol
push
lret
addr16
shlb
orb
mov
inc
or
pop
sub
repnz
and
into
mov
popl
popa
xor
leave
adc
dec
jno
repnz
in
mov
sub
pop
adc
sub
cmp
and
xchg
adc
lret
cltd
mov
repz
add
mov
or
pusha
sbb
icebp
or
repnz
xor
out
mov
cmpsb
testl
imull
js
movsl
cmpsl
scas
ljmp
inc
popa
mov
and
je
out
pop
jmp
mov
sbb
cmp
rcr
push
push
sbb
and
or
xor
imul
es
xor
sub
fs
add
mov
mov
lds
xchg
mov
mov
mov
sbb
lahf
nop
loope
push
cld
mov
inc
cmc
cmp
vpaddsw
and
jmp
nop
orb
cmp
or
inc
inc
sbb
pop
movsb
outsl
xchg
insb
inc
pop
scas
mov
lods
push
pop
mov
dec
inc
jg
lock
movsl
in
inc
pop
loope
mov
adc
pusha
jo
movsb
jmp
jo
daa
xchg
sbbl
xor
icebp
insb
bound
test
sub
aad
leave
jns
sahf
xor
inc
mov
decl
pop
enter
or
test
mov
add
and
jno
mov
xor
cli
fldenv
adc
sbb
mov
fcoms
ret
adc
adc
add
movsl
leave
xchg
scas
cmpsl
xchg
stc
xchg
sbb
movsb
xor
out
mov
aaa
les
sub
cmp
xor
stc
cmp
stos
jbe
ja
in
cmp
mov
pop
sbb
xchg
sbb
adc
fisubl
fadds
div
push
ret
mov
cmp
pop
and
sbb
cmp
addb
cwtl
cmp
adc
outsl
inc
shll
xchg
jae
clc
es
inc
jg
or
add
push
pop
out
clc
push
lcall
mov
imul
sahf
insb
sahf
cmp
xchg
lds
adc
stos
fld
roll
add
push
sahf
shr
cmp
shll
pop
add
sub
pop
mov
fsts
mov
xor
aam
sub
mov
jne
and
mov
popf
mov
je
or
fcoml
lret
movsl
pop
andl
and
mov
adc
add
adc
and
pop
insl
add
pushf
mov
sbb
lds
pushf
ja
imul
jnp
cwtl
cmp
test
lds
mov
rcrl
xchg
movsl
jbe
es
jo
pop
jne
enter
lea
mov
adc
jnp
push
es
cmp
pusha
int3
xor
push
mov
cmpsl
inc
lcall
adc
lds
and
loope
jg
dec
and
ret
hlt
cmp
mov
sbb
inc
xchg
mov
jmp
loopne
xor
mov
cmp
xor
mov
jmp
adc
stos
and
add
and
add
sub
in
pop
test
cwtl
cli
xchg
inc
mov
sub
orl
enter
cmp
mov
mov
fisubs
in
enter
mov
push
pop
or
dec
cmp
test
sarb
insb
cmp
js
sbb
dec
pusha
inc
subb
xor
mov
fldl
les
mov
mov
hlt
mov
dec
cmp
sub
imul
repz
cs
jne
stc
bound
xor
adc
inc
and
dec
pusha
adc
jle
loopne
adc
xor
dec
das
icebp
dec
cs
jne
push
or
xor
pop
cmp
sbb
fisubrs
les
xchg
leave
mov
popa
or
fcmovnu
add
ret
mov
xor
aam
jnp
std
pop
sub
pop
inc
dec
mov
bound
inc
cmp
popa
push
stc
cmc
cmp
ds
mov
inc
outsb
jae
fldenv
or
xchg
lods
in
ds
movsl
jg
sahf
mov
stc
jno
fidivrs
dec
dec
mov
es
shrb
jnp
cwtl
outsl
loop
fimuls
aas
mov
jg
pop
mov
loope
or
mov
sbb
mov
aas
mov
lret
mov
cmp
cwtl
push
and
sub
pop
movsb
dec
daa
xchg
cmc
mov
ds
ds
dec
mov
adc
or
sub
inc
cltd
rclb
and
mov
xor
ljmp
cmpsb
icebp
mov
dec
ss
cmp
mov
pop
push
mov
or
frstor
ret
xor
orb
popf
push
push
cli
cmpsb
stos
and
xchg
out
cmp
cmp
pushf
ljmp
movsl
cmp
xor
sarb
push
mov
enter
subb
push
inc
std
inc
dec
dec
cwtl
mov
jl
ret
sub
pop
xor
movsl
jb
mov
jae
fldenv
mov
jle
test
sub
mov
sbb
popl
cmpsl
mov
mov
sub
fs
xor
mov
pop
pop
mov
ja
les
sbb
cmp
das
ds
ja
jno
add
enter
adc
cmp
cmp
outsb
ds
jg
xchg
loope
and
es
or
jle
lds
cmpsl
out
add
loopne
and
mov
lds
out
pop
in
push
aad
lods
cmpsl
add
add
mov
loop
fistpl
xor
mov
lcall
xor
sbb
inc
stc
mov
mov
fldenv
std
mov
xor
cmp
divl
xlat
roll
pop
sarl
lret
jecxz
mov
shll
jl
or
lock
icebp
cmp
mov
adc
movsb
testb
adc
adc
or
jmp
iret
add
sbbb
inc
je
adc
rcrl
adc
push
sub
xchg
and
dec
hlt
jno,pn
inc
mov
aas
inc
jo
sub
and
test
shrb
or
test
in
add
sub
mov
out
lods
es
and
pop
stc
icebp
jb
sub
es
jle
test
jne
in
gs
in
aam
push
ret
and
outsb
test
cmp
std
movsb
cmc
lods
inc
cmp
bound
lds
pop
ds
push
mov
movsl
pop
test
movsb
pushf
je
ss
jae
mov
in
aas
rol
sbb
rorl
std
cmc
adc
mov
add
inc
sbb
aam
and
push
out
adc
inc
jmp
dec
test
js
pusha
jb
and
sbb
cld
test
mov
or
cmp
outsb
imul
and
xor
into
ret
and
sbb
lods
xor
in
lds
daa
in
ss
repz
mov
lds
cltd
dec
lahf
pop
inc
lods
and
jmp
jl
sbb
dec
loope
mov
in
cmpsb
pop
int3
lcall
leave
dec
sub
mov
sub
jns
lea
adc
out
test
or
jns
or
push
imul
jo
es
mov
hlt
stos
icebp
data16
adc
jae
shl
add
daa
enter
loope
sbb
movsl
mov
or
test
test
mov
je
push
flds
in
movsl
test
cmp
rorl
subl
ficomps
ss
mov
add
cltd
adc
js
lods
mov
test
xor
jno
lods
inc
and
mov
jl
je
fnstsw
outsl
push
mov
dec
rcrb
mov
xor
mov
inc
jbe
aas
cmc
lods
cmp
mov
sbb
cmp
xchg
or
cld
and
sub
insl
xor
and
movsl
mov
subl
push
pop
cli
es
cltd
xor
xchg
xor
xor
adc
ret
and
mov
das
cmpsb
or
push
jne
sbbl
js
mov
js
cltd
inc
loop
adc
inc
leave
add
call
jnp
pop
lret
add
add
jle
and
std
aaa
mov
xchg
aam
sbb
pushf
jo
sbb
addr16
into
ss
jge
or
pop
mov
and
call
sbb
mov
inc
jbe
ljmp
cmp
mov
notl
fs
std
pop
jp
inc
inc
pop
or
pop
scas
or
stos
pusha
adc
icebp
and
jbe
pop
cltd
out
mov
pusha
pop
add
mov
push
xchg
cli
mov
inc
adc
adc
cld
in
roll
mov
add
sub
push
data16
add
push
int3
cmp
adc
aam
ss
je
in
pop
fnstcw
push
pop
out
in
out
or
sub
xor
clc
cmc
rcr
jg
mov
pop
pushf
mov
leave
cwtl
push
fcmovnb
or
les
sub
inc
testb
or
sbb
and
mov
push
sub
xor
jae
dec
das
and
or
aad
in
inc
sub
sbb
gs
std
rolb
fnsave
mov
push
adcb
sbb
es
repz
cmp
cmp
test
and
shll
std
add
jecxz
ljmp
mov
js
arpl
mov
std
sub
jo
xor
push
or
jne
inc
jb
mov
push
cld
add
ss
lret
and
movb
ss
jo
repz
ret
inc
cmpsl
pop
cmp
sbb
mov
xchg
mov
imull
inc
or
mov
add
fistl
jecxz
lock
repz
movb
jb
mov
mov
rcl
add
in
fs
das
sub
test
adc
js
lock
cmc
das
ljmp
out
and
cltd
aad
cmpsl
cs
nop
lock
mov
cmpsl
das
cmc
lea
jo
les
inc
inc
sbb
aad
and
jne
bound
leave
mov
test
ljmp
movsl
xor
or
xor
aaa
adc
ficomps
mov
and
scas
out
and
xor
pop
mulb
out
mov
xor
xor
adc
mov
inc
data16
mov
aad
mov
int3
stos
mov
in
cmpsl
or
cmp
insb
jmp
ret
add
cmp
in
dec
xor
push
and
ljmp
add
popa
aad
xchg
ss
push
and
enter
push
idivb
movsw
lods
cwtl
inc
mov
sub
in
in
push
jno
shll
mov
stc
loopne
mov
adc
cmpsl
incb
in
mov
mov
aas
add
inc
ja
cmc
mov
jmp
mov
negb
arpl
andb
adc
lahf
clc
sbb
loopne
in
in
in
cmpsl
cltd
add
add
lcall
adc
push
cld
and
cltd
push
add
lahf
cmp
push
mov
repz
dec
jl
and
xor
push
sub
mov
int
mov
insl
inc
adc
inc
push
jno
xor
jbe
push
or
dec
jmp
movsl
mov
incl
test
cmpsl
pop
jmp
cmc
cmp
add
shlb
aad
loop
mov
mov
fwait
cmovno
jns
incl
movsb
movsl
mov
xor
aas
mov
stos
sub
adc
test
ja
inc
out
and
push
cmp
add
sbb
std
inc
jl
rolb
je
sub
add
sbb
sub
lcall
dec
aas
std
mov
dec
push
pop
and
sbb
sub
cmp
loope
push
and
cs
fnstcw
adc
mov
xchg
cmpsb
add
scas
jae
leave
cmp
movsl
inc
loopne
mov
xchg
mov
mov
sub
cmp
pop
addr16
adc
pop
dec
adcb
lahf
adc
push
test
xor
mov
add
rcrl
movsb
xchg
mov
add
daa
in
jb
insl
cmp
add
je
xorl
sub
fsubrl
fldcw
cmp
jmp
xor
loop
ret
add
jmp
ffree
pushl
add
cli
cld
out
add
mov
in
cmc
or
jle
adc
sub
loope
cmp
and
mov
and
movsl
add
loopne
push
push
cmpsb
lds
test
inc
jge
out
outsb
gs
mov
jbe
inc
sub
rclb
add
cmpsb
add
fistpl
aad
cmp
add
int
pop
and
sahf
xor
shrb
cwtl
inc
in
cmc
in
adc
testb
or
mov
lds
lock
jge
fs
movsl
xchg
add
aad
or
xor
cmp
std
lock
add
dec
dec
pop
push
ja
call
std
pop
sub
fldenv
pop
arpl
push
xor
outsl
mov
xor
add
pop
xor
xor
fiadds
int
sbb
sbb
mov
lret
divl
movsl
add
mov
cmc
xor
and
jne
sbb
cmc
cmp
add
xor
cmp
adc
rcrl
in
mov
imul
cmp
mov
imul
add
std
movsl
rcrb
je
dec
and
jae
dec
push
repnz
sahf
in
inc
dec
repz
movsl
or
in
pop
lods
jns
out
sarl
xor
add
fldcw
dec
out
in
jle
daa
jo
aaa
xor
mov
shrb
mov
mov
ja
jmp
pop
mov
xor
sbb
ljmp
shlb
pop
imul
test
and
int
gs
popa
repz
cmp
test
cltd
cmp
xor
or
adc
jmp
imul
and
xor
add
loopne
insl
pop
cmp
sub
loope
mov
jbe
or
xor
cwtl
or
daa
adc
cwtl
inc
and
inc
sub
cmp
cltd
rcrb
add
mov
xchg
jae
fstl
or
add
jne
cmp
lock
pop
ds
sti
xchg
fisttpll
rcpps
add
inc
xchg
data16
stc
add
mov
rorb
mov
xchg
push
aaa
xor
and
inc
shlb
dec
or
call
data16
loope
add
adc
pop
adc
nop
push
std
aam
lods
pop
xor
roll
or
adc
and
test
test
sbb
dec
mov
sbb
xor
in
movsl
dec
jns
in
movsb
insl
and
mov
addr16
cmp
mov
enter
cmp
fbstp
add
orl
push
ljmp
andb
or
pop
fwait
sbb
jl
test
pop
fistpll
sub
adc
mov
loopw
icebp
xchg
stos
and
mov
adc
and
pop
test
or
arpl
insl
pop
sbb
pop
cmpsb
popf
jecxz
pop
cmc
int3
mov
lahf
test
pop
test
mov
cmp
xchg
cmpsb
add
dec
inc
xchg
adc
mov
popf
sub
les
les
sbb
mov
xchg
adc
add
pop
mov
jae
push
jae
and
push
mov
xor
push
lea
xchg
cmpsb
or
cmp
sti
ja
in
cmp
mov
repz
inc
leave
movsb
cli
inc
neg
aas
in
add
repz
aas
inc
movsl
imul
aas
pop
mov
xchg
inc
pop
mov
out
movsb
add
or
adc
pusha
sar
push
cmp
cmc
pop
push
dec
push
push
aas
pop
fstl
mov
cmc
xor
lahf
inc
shl
js
gs
shr
or
sar
into
adc
and
xor
and
xchg
ds
pusha
shll
out
in
xchg
aas
mov
mov
pop
test
rorb
das
mov
add
inc
mov
mov
rclb
xchg
jl
cmpsl
add
popa
xchg
into
dec
movsb
adc
mov
mov
out
jnp
and
pop
lret
insl
cmp
aas
pop
movsl
nop
movsl
imul
icebp
push
hlt
enter
jae
dec
stos
ficompl
test
popf
roll
sbb
and
or
cmpsb
dec
adc
es
or
int
sub
add
mov
cld
js
je
add
outsl
add
add
jnp
add
cmpsl
push
adc
icebp
hlt
cltd
fidivrs
dec
mov
fcomps
xor
sbb
fldl2e
pop
mov
in
mov
movsl
mov
xchg
stos
clc
jne
insl
mov
icebp
fsts
sbb
dec
push
pushl
adc
pushf
out
mov
cmpsl
test
int3
add
or
out
jle
dec
cmp
bound
add
cmp
jmp
test
sub
lods
add
insb
movsl
loope
shlb
mov
out
or
js
std
xor
add
repnz
insb
stos
add
dec
loopne
frstor
add
or
or
push
sbb
cmpsb
xchg
orl
lret
adc
cmp
psubd
cmp
fimuls
popf
pushf
sub
or
popw
imul
adc
adc
mov
inc
ja
dec
dec
mov
inc
pusha
int3
je
sbb
inc
jmp
in
aas
xchg
add
hlt
adc
or
add
call
jge
inc
and
hlt
fdivs
movsl
jns
xchg
jno
adc
loope
test
iret
dec
mov
xchg
xchg
imul
mov
stos
sub
xchg
ror
mov
add
nop
nop
aam
or
or
jb
add
cwtl
popa
daa
push
ss
adc
es
sub
leave
inc
clc
sbb
mov
sbb
pushf
call
pusha
insb
lods
addb
lahf
cmpsl
sub
insb
test
rep
sub
inc
mov
add
xor
icebp
icebp
add
inc
and
push
in
add
fwait
cmpsl
xor
add
lods
in
test
outsl
and
pop
jno
rorl
sub
and
cmp
out
and
push
out
sbb
adc
inc
xlat
daa
jge
ret
mov
inc
xchg
std
inc
cmp
mov
and
sbb
push
inc
leave
je
cltd
outsl
rclb
xlat
jp
les
dec
pop
dec
inc
in
xchg
popa
lods
ds
or
nop
inc
and
shlb
fsubrl
iret
jg
mov
mov
mov
lea
pop
shll
ss
and
jmp
mov
repnz
inc
test
int3
mov
mov
or
and
shlb
push
cmp
xor
xor
adc
sbb
xchg
loopne
xor
cs
ret
and
stos
push
fstpt
cmp
cmp
and
icebp
mov
or
mov
adc
inc
test
test
inc
or
stos
mov
pop
pop
push
mov
into
jl
push
jp
or
mov
and
inc
jnp
shl
push
outsl
cmp
mov
fs
arpl
mov
fbld
sarl
xchg
sub
mov
fdivrl
sbb
add
fs
jae
or
imul
hlt
pushf
std
xor
cmp
mov
sbbl
inc
push
mov
jp
sarb
adc
ds
or
out
in
rorl
ret
xor
mov
aas
addl
sub
sub
inc
sub
gs
lcall
mov
and
in
add
fildl
out
mov
aas
push
xchg
jns
iret
in
cmp
push
mov
jg
fadds
fidivs
dec
cmp
sub
adc
cltd
or
sahf
out
stc
or
inc
xchg
add
mov
and
or
es
xchg
imul
out
add
cmp
test
adc
adc
repz
xor
sbb
add
mov
mov
into
and
push
jmp
fnsave
int
sti
push
enter
mov
cwtl
inc
ljmp
cmpsl
movsl
popf
js
xor
andl
xchg
or
pop
fsubs
pop
push
dec
pushf
hlt
movsl
rorl
jp
lret
repnz
mov
mov
adc
or
cmp
pop
cmp
sub
and
add
fs
adc
cmc
and
int3
imul
mov
test
test
and
xchg
jecxz
push
bound
or
out
outsb
ja
mov
and
and
cmc
xor
cmp
repnz
jae
cmp
mov
jge
icebp
mov
call
int
jmp
fisubs
shlb
push
pop
orb
idivb
stos
add
shl
add
sbb
pop
dec
add
sbb
or
push
push
cmc
sar
adc
fdivs
aad
ja
or
lahf
shl
imul
jo
sbbl
lret
fists
cmp
clc
movsl
int3
shlb
dec
mov
int3
push
mov
in
inc
lods
and
pop
into
stc
out
jp
pop
shlb
das
push
lods
std
jnp
xchg
test
sub
cmc
clc
jge
cld
mov
in
test
cmp
cmp
popa
cmc
inc
sbb
sbb
icebp
add
cmp
les
iret
icebp
icebp
outsl
or
jns
and
adc
xchg
fsubs
dec
enter
fists
sbb
nop
mov
cmp
mov
in
and
inc
cmp
cmpsl
xchg
cwtl
js
fldl2t
nop
inc
rcrl
push
mov
xor
jl
in
jmp
daa
ret
xlat
or
mov
std
jmp
pushf
push
imul
loope
xchg
cmpsl
pushf
or
rclb
gs
mov
pop
jnp
mov
std
mov
popf
jmp
xor
gs
inc
rclb
pop
ss
push
adc
stos
and
adc
sbb
sbb
adcl
xchg
repnz
xor
pop
aaa
mov
sarl
scas
cmp
es
pop
push
push
mov
clc
xchg
pop
or
fistps
dec
loope
pop
test
insl
xchg
pusha
dec
or
jo
shll
cltd
stos
fisubrs
jne
add
movl
movb
and
cmpsl
mov
cmp
pusha
aas
into
mov
xor
inc
inc
xchg
cmp
je
pushf
inc
shlb
cmp
mov
xor
mov
add
sub
cmc
adc
jnp
mov
pop
xor
cmc
movsl
fs
cmp
xchg
cld
lea
js
decl
mov
sbb
popf
pop
mov
imul
sbb
mov
test
push
loopne
jecxz
lcall
fidivrs
shlb
movb
addb
rcll
xor
sarb
cmp
aas
xor
cld
or
and
mov
fnstsw
push
in
push
test
aaa
shl
push
and
mov
in
and
jbe
mov
or
dec
nop
dec
lahf
fwait
sub
cmpsb
push
cmp
pop
data16
sub
sbbb
push
fsts
xor
push
pop
add
bound
add
mov
xor
movsb
xchg
and
aas
loopne
inc
and
pop
into
mov
fistl
lock
mov
fstpl
or
adc
cmp
rcrl
incb
mov
and
push
mov
lcall
or
js
sub
mov
sub
sbb
mov
mov
lcall
fisubl
loope
popf
cli
stos
add
and
xor
fbld
sub
cwtl
and
cltd
fists
cmp
push
nop
and
in
inc
add
daa
imul
add
mov
outsl
add
jl
test
cltd
dec
mov
test
ss
out
cmp
clc
jecxz
les
inc
mov
ja
les
add
add
test
dec
les
dec
in
or
lds
je
jnp
lods
dec
push
fcomi
xlat
jmp
iret
sbb
mov
cld
inc
cmp
movsb
lea
in
add
fstpl
push
movsl
mov
ret
shr
cmp
inc
sub
sbb
pop
sub
or
mov
nop
and
and
sub
std
icebp
dec
outsl
push
xchg
fldl
cltd
and
inc
push
sub
aam
dec
pop
and
cmpl
mov
daa
cmp
mov
mov
and
mov
xor
mov
in
rcrb
cmp
jle
add
in
mov
add
movsb
push
add
test
test
lea
xor
sahf
push
inc
and
out
cltd
mov
mov
inc
and
push
jp
stc
mov
and
xor
add
push
inc
lret
mov
stos
rcl
lods
mov
or
and
pop
ret
in
and
cltd
cmc
mov
mov
lods
roll
xor
cld
xchg
xor
pop
cmc
lea
mov
ja
push
push
fcompl
fiaddl
fldl
test
sbb
cmpsl
mov
out
mov
mov
sbb
cltd
jmp
lods
and
repz
pop
add
xchg
inc
std
sti
pop
cwtl
lea
inc
cmp
pusha
or
js
adc
test
insl
bound
les
inc
sbb
mov
clc
mov
call
add
or
lods
push
sbb
or
cmc
ja
mov
clc
shlb
imul
jmp
add
add
lds
movsl
inc
repz
stc
jmp
sbb
enter
and
pusha
insl
sbbl
push
lods
mov
mov
or
lret
out
sar
xor
or
rorb
sbb
or
mov
sahf
adc
sub
in
mov
dec
pop
cmpb
push
ret
xchg
push
daa
pop
add
xor
inc
mov
push
fildl
inc
in
and
dec
mov
scas
mov
fstps
and
and
subb
inc
adc
lret
rclb
sub
xor
pop
idivb
nop
mov
jnp
add
nop
xchg
lds
pop
test
sub
mov
ja
cmp
dec
adc
dec
mov
hlt
fnstenv
stc
roll
fldl
xor
jecxz
inc
inc
push
inc
mov
jle
ret
dec
jns
mov
fwait
mov
cs
inc
pcmpgtd
call
les
pop
stc
ds
mov
pop
aad
inc
jmp
frstor
clc
add
leave
jns
mov
ret
and
fbstp
add
inc
add
dec
movsb
mov
and
mov
rorb
out
xlat
addr16
outsb
pop
test
push
roll
jg
hlt
sbb
and
mov
dec
adc
add
cmp
xchg
imul
ja
xchg
ret
std
negl
and
imul
sti
mov
scas
mov
in
out
into
jno
stc
fwait
cli
xor
xor
test
sub
mov
mov
movsl
jmp
push
cmp
ja
and
dec
cmc
jecxz
mov
push
fs
dec
mov
cmpsb
push
cmp
subb
inc
mov
adc
rcrl
push
stc
sbbl
int3
xor
aad
cmp
mov
add
fdivrp
lds
and
xor
push
and
push
pop
inc
arpl
jp
fidivrl
leave
and
call
pop
mov
pop
aam
lret
add
cmc
in
add
faddl
ljmp
mov
ja
and
das
cmc
dec
adc
hlt
in
inc
and
sbb
test
and
dec
cltd
fmuls
or
stos
add
pop
shll
push
mov
loopne
jge
xor
cmpsb
out
mov
jns
divl
jae
test
ja
ja
mov
inc
jmp
repz
dec
adc
jmp
jg
inc
js
sbb
daa
and
mov
cwtl
push
jle
ret
mov
mov
jne
push
push
gs
inc
int3
cwtl
pop
push
pop
pop
fwait
adc
push
push
sti
insb
insl
or
icebp
sub
and
sbb
daa
iret
mov
or
adc
jno
xor
dec
iret
mov
cmp
lock
int
jo
test
push
dec
test
stc
pop
xor
jl
sbb
push
mov
mov
imull
or
jns
inc
dec
sub
out
push
hlt
add
rcl
sqrtps
xlat
popf
fisttps
inc
add
dec
jp
dec
jbe
icebp
or
pop
and
or
rorl
cmp
adc
ja
cmc
stc
cmp
idivl
scas
cwtl
mov
xor
test
jp
ja
testl
adc
sub
dec
lds
int3
mov
mov
pusha
inc
sbb
dec
in
xor
cmp
and
loopne
movsl
or
negb
pop
call
sub
pop
jns
mov
pop
mov
mov
pop
inc
mov
adc
movsl
aam
das
aad
lods
mov
sub
in
rcrl
add
inc
in
adc
movb
and
cltd
ljmp
test
mov
mov
movsl
dec
push
mov
adc
test
or
out
shlb
cmc
adc
mov
mov
fnstcw
xchg
loope
lds
inc
out
mov
loop
test
cli
addr16
nop
xchg
pushf
dec
stc
fwait
fs
movsb
std
stos
lret
lahf
and
inc
sub
and
cltd
xchg
xor
pop
lds
dec
push
inc
popa
add
mov
lret
negl
mov
jo
mov
repz
mov
lock
mov
sbb
mov
fsubs
nop
push
mov
or
push
lahf
dec
stc
push
or
mov
mov
jnp
pop
sub
mov
sub
ja
mov
punpckhwd
dec
loope
subl
daa
mov
roll
in
inc
sbb
outsb
or
dec
test
ds
xchg
jae
cmp
add
cmp
repz
lret
mov
call
rcll
roll
loope
pop
mov
leave
es
xor
cmp
add
xchg
push
xor
pop
movsl
and
jg
repz
or
insl
sub
sahf
mov
xchg
inc
mov
rolb
std
cli
scas
mov
pushf
lret
pop
incb
fwait
gs
js
pusha
lahf
jb
pop
adc
xor
cmpb
inc
out
pop
jno
adc
push
int
ds
js
iret
push
and
cmp
fucomip
xchg
push
jo
daa
or
mov
inc
lcall
rcl
cmp
lock
sahf
mov
mov
sbb
mov
mov
scas
jmp
loopne
add
jmp
add
call
or
sbb
inc
incb
and
movsl
mov
daa
clc
adc
and
adc
lret
mov
dec
iret
push
sbb
in
jmp
leave
ficompl
int3
lret
and
or
cmp
xor
and
xor
leave
insb
fcoms
gs
cmp
push
imul
xor
dec
push
and
xchg
leave
test
push
cli
sbb
and
add
sub
popa
call
cmp
pushf
adc
xor
add
sbbb
lods
cwtl
shr
cmpsl
gs
aad
movsl
gs
jle
aad
int3
xchg
aas
lret
lods
jp
and
and
movsl
lcall
subb
loop
gs
and
add
sbb
inc
or
loope
adc
stos
in
mov
pop
cmc
pusha
ljmp
inc
inc
test
xchg
xchg
jne
test
push
fs
aas
test
test
lock
mov
and
mov
int3
jae
dec
mov
mov
std
cli
scas
out
mov
mov
jo
popf
imul
cmp
fs
int
stc
sbb
and
sbb
cmpsl
xor
icebp
cmc
push
fldt
shll
sub
pop
rcl
mov
inc
cmpsb
dec
inc
mov
je
dec
lods
shrl
addl
mov
arpl
jbe
push
sbb
daa
cs
and
in
psadbw
aaa
pop
add
jno
xor
mov
out
test
xor
xchg
testl
test
in
and
sub
sbb
mov
shrl
jnp
adc
nop
out
test
cld
das
and
mov
repz
leave
jb
and
es
xor
xadd
inc
mov
rcrl
inc
daa
in
stos
pop
nop
mov
mov
std
movsb
les
add
mov
and
bound
mov
movsl
mov
std
cmp
add
scas
jno
test
jl
xor
mov
aad
hlt
xor
repz
inc
sub
pushf
testb
cmc
add
nop
xor
adc
mov
cmc
mov
mov
push
pop
adc
dec
aaa
repz
inc
scas
imul
and
push
testb
dec
roll
mov
shll
iret
xchg
loop
xor
gs
xor
pmulhw
sub
mov
jae
pop
inc
stos
call
std
or
ret
adc
add
add
psubw
push
jecxz
cmp
mov
dec
orl
je,pt
push
je
sub
jecxz
test
mov
ja
add
data16
cld
pop
into
lahf
cli
gs
dec
or
mov
cmp
xor
xor
and
jno
data16
test
mov
mov
cltd
push
push
push
call
mov
div
roll
xchg
sbb
mov
inc
push
test
mov
nop
jmp
lcall
out
push
cmp
repnz
mov
cmp
ss
fidivrl
sub
incb
cmpl
and
xchg
rolb
movsb
ror
fdivrl
pop
mov
mov
mov
xor
pop
daa
jle
mov
jmp
call
jg
jnp
cmp
sbb
adc
jg
pop
std
xchg
pushf
test
aaa
lds
jl
pop
mov
gs
jp
imul
inc
insl
test
mov
iret
gs
xor
adc
jg
xchg
push
fucomip
ret
push
push
mov
dec
inc
cmp
xchg
jg
lcall
add
cmpsl
mov
mov
out
pop
idivl
dec
fldl
sub
xchg
inc
xor
pop
xchg
sub
and
inc
push
add
jp
adc
out
pop
xorb
std
mov
insb
out
and
fnstenv
mov
es
out
test
xchg
jae
jmp
insl
pushf
jl
mov
xor
outsl
in
dec
movsl
inc
faddl
sbb
and
inc
lods
cmpsl
repz
mov
sbb
enter
lods
ss
sahf
pusha
bsr
jmp
mov
push
orl
cmc
adc
icebp
ja
jbe
jl
popf
inc
daa
loop
and
pop
lods
push
cmc
xchg
sbb
pop
bound
sbb
movsb
movsl
xor
mov
rcrb
mov
mov
jecxz
mov
std
adc
clc
mov
es
dec
pop
add
fwait
sbb
aad
xor
out
push
data16
sbb
and
inc
push
inc
data16
lret
mov
std
dec
mov
mov
cmp
mov
add
mov
adc
push
dec
xchg
dec
test
je
lods
hlt
andb
jae
sbb
dec
ret
mov
xchg
and
mov
pop
add
push
lahf
cmp
mov
add
pop
ss
jl
xor
cmp
icebp
and
shlb
mov
sbb
loope
xchg
adc
outsb
dec
sbb
arpl
pop
shlb
pop
xchg
std
imul
or
adc
push
dec
imul
inc
mov
pop
fidivrs
insb
mov
pop
test
push
inc
int3
movsb
and
cmp
lea
jl
sbb
addr16
or
mov
lea
daa
lea
or
gs
movsl
mov
mov
dec
adc
xor
push
mov
loopne
push
pop
pop
and
mov
test
repz
mov
push
pop
std
xor
cmp
movsb
scas
inc
or
mov
loope
mov
or
push
fs
mov
and
popf
daa
cmp
movsb
inc
in
inc
mov
lahf
jo
mov
es
inc
push
dec
or
jbe
and
adc
jmp
insb
ljmp
addr16
pop
sbb
in
test
jno
sub
out
add
xor
mov
mov
jle
fisttps
or
out
leave
in
mov
and
das
mov
pop
ret
pop
ds
dec
loope
outsb
push
cs
shrl
pop
jl
outsl
lret
dec
and
adc
in
sub
lret
call
mov
in
test
imul
jge
mov
and
xchg
ds
sub
je
adc
jb
or
push
mov
movsb
sbb
shlb
lret
jmp
push
repz
and
ret
pop
dec
notl
rcll
data16
pop
sub
dec
insb
arpl
xor
and
inc
sbb
je
pop
out
rcr
loope
in
cmp
gs
rol
test
push
insl
ret
dec
test
add
xlat
lds
outsb
nop
js
sub
je
xor
push
cmpsl
mov
imul
and
push
in
test
ja
clc
dec
adc
lock
lcall
loopne
lds
sbb
jmp
incb
rcrb
push
jl
push
icebp
mov
add
ret
dec
jecxz
mov
sahf
cld
inc
nop
cwtl
push
or
cmp
lds
or
dec
ffree
call
jge
faddl
push
cli
lahf
std
icebp
add
mov
ja
sub
andl
cmp
and
adc
insb
inc
dec
lds
dec
push
mov
pop
sub
test
cmp
cmp
mov
xchg
in
pop
popa
jecxz
jo
enter
pop
cmp
sub
outsb
rcl
ss
int3
mov
push
dec
push
pop
cli
mov
je
fadds
daa
les
cltd
xor
and
imul
or
ja
push
mov
push
test
cwtl
cwtl
mov
inc
mov
cmpl
lahf
cmpb
mov
dec
andl
rolb
fsubrl
nop
cmp
jae
ds
mov
pop
gs
repz
rcrl
cmp
mov
xor
out
mov
push
loop
pop
xorl
lods
jle
inc
xor
repz
bound
and
call
cmp
je
cli
in
mov
std
orl
ss
and
pushf
mov
sub
stos
add
or
inc
dec
adc
int3
push
stc
mov
and
sbbb
sbb
push
in
and
lea
add
mov
pop
xor
sbb
shlb
pop
mov
nop
fstps
imul
adc
aam
jno
cmpb
jne
mov
add
and
or
jg
add
xor
lds
cmp
sarb
std
pop
push
sbb
adc
enter
jl
pop
in
and
mov
mov
cmc
adc
ret
sbb
test
out
add
aam
mov
push
sbb
sub
fwait
mov
sahf
mov
rclb
and
cmc
clc
movsb
iret
and
pop
and
cmpsl
bound
cmp
adc
mov
push
mov
adc
cwtl
and
cmpsb
xor
pop
adc
jle
and
mov
lods
ss
out
xchg
stc
test
mov
mov
je
test
xchg
push
pushf
pop
inc
aam
xor
sbb
pusha
cwtl
arpl
inc
gs
ja,pn
popf
sbb
out
push
leave
xor
xor
lods
and
push
out
cmc
out
xor
or
cmpsb
mov
fisubrl
pop
into
push
or
shrl
xor
aaa
lret
les
jnp
xchg
xchg
jmp
xchg
xchg
cmp
xlat
mov
clc
lods
sub
jne
adc
inc
pop
mov
lock
int3
clc
mov
dec
xor
xchg
dec
and
add
mov
adc
dec
sbb
jbe
or
enter
add
cmp
enter
in
fistpll
insl
and
out
sub
shrb
cs
sbb
stc
es
lods
insl
push
jl
mov
test
pop
sub
test
mov
add
add
sub
hlt
cli
inc
xor
ror
rcl
std
sbbl
fldl
iret
cwtl
sbbb
add
out
int
mov
xor
sbb
jne
jmp
fnstenv
adc
xlat
repz
in
inc
cltd
pusha
je
test
cmpsl
push
cmc
pop
inc
and
ss
and
cmpsl
sti
and
inc
and
out
cmp
dec
test
std
push
loopne
sub
dec
jle
popf
dec
sarb
mov
adc
jno
pop
shll
sub
fs
mov
dec
push
mov
mov
adc
fwait
pusha
sbb
sbb
dec
add
add
lret
lods
jecxz
adc
mov
or
cli
jg
push
mov
hlt
mov
push
xor
out
inc
and
xchg
or
pop
jmp
sbb
and
push
shll
lcall
jae
xor
ljmp
nop
push
or
pop
and
and
xchg
or
mov
pop
xchg
lds
cmp
xor
shll
fs
clc
aad
cmc
and
xchg
scas
lahf
add
ret
and
mov
and
insl
add
inc
add
mov
int
out
add
add
adc
mov
vandnps
dec
std
out
mov
and
push
mov
push
clc
xchg
sub
ds
mov
aad
gs
aam
testl
adc
cwtl
fs
pop
movsb
idivl
je
cmp
lods
push
jl
inc
jne
add
pushf
inc
lods
fs
fistpl
jle
and
mov
add
jo
or
dec
lret
std
jne
xchg
dec
sbb
ss
add
js
jno
sub
adc
fildl
clc
movsl
mov
and
lcall
jmp
mov
aaa
and
sbb
xor
cmp
inc
sub
das
int3
divl
lahf
or
mov
cwtl
mov
add
loopne
scas
cmp
jb
imul
scas
ds
lea
aaa
dec
push
mov
das
jmp
mov
pop
sbb
icebp
rcll
mov
pop
mov
sbb
shl
mov
cli
jmp
mov
push
mov
rclb
push
out
pop
in
add
dec
insl
fimull
xor
mov
ljmp
fcoml
cmc
mov
pop
in
bound
mov
mov
inc
mov
push
int
jnp
inc
cmp
mov
filds
xor
movsb
cmpsb
jae
test
push
xchg
sbb
aaa
outsb
lahf
sti
mov
sub
in
leave
xchg
test
lods
popf
stc
stos
sbb
dec
bnd
sub
cwtl
and
gs
test
fstps
sbb
and
pusha
clc
cmc
test
xchg
lods
push
icebp
jle
les
sbb
add
sbb
cmp
pop
dec
movsb
jae
pop
xchg
std
xor
je
cltd
sub
mov
cmpsl
push
pop
int
stos
fstpl
loop
fucomp
loope
add
ss
rcl
and
adc
out
mov
outsl
repz
or
ret
sub
aad
and
mov
cmp
push
mov
push
and
gs
adc
inc
popa
inc
adc
cmpsl
jecxz
aaa
dec
and
sbb
add
pop
fwait
int3
xchg
notb
cmc
mov
jle
out
jecxz
mov
jnp
add
adc
mov
insl
aad
movsl
and
mov
xchg
sub
add
inc
and
data16
or
push
dec
mov
jmp
pop
sbb
mov
or
inc
mov
shll
sarb
or
lahf
test
enter
or
or
movsb
inc
lea
cmp
adc
sbb
nop
clc
sbb
int3
je
mov
aas
push
xchg
pop
stc
inc
sarl
test
sbb
test
ja
call
fstps
pop
iret
and
cli
mov
inc
cmpb
cmpsb
std
lret
mov
loopne
and
xor
mov
cs
cs
int
int3
out
stos
push
in
hlt
repnz
andb
and
adc
pusha
shl
cmc
sbb
xchg
pop
sbb
adc
dec
mov
mov
fildl
and
cwtl
jle
imul
jae
and
clc
call
mov
add
xor
cwtl
mov
fcompl
or
fwait
inc
outsl
fldl
in
mov
lods
mov
mov
nop
out
mov
cmp
mov
or
insb
jle
mov
xchg
dec
std
sbb
ds
jae
shl
cmp
add
popf
mov
pop
rol
icebp
pushf
ja
stos
adc
adc
in
cltd
or
xchg
mov
hlt
push
or
and
push
adc
movsl
mov
shr
mov
add
adc
jle
data16
add
cmpsb
add
and
adc
add
mov
dec
or
ljmp
inc
in
movsl
adc
pop
andb
out
popa
out
daa
rcll
sti
repnz
int
test
cmp
mov
cmp
xor
mov
mov
mov
ja
fists
adc
cmpl
push
cmp
and
mov
mov
xor
mov
fxch
nop
insb
es
push
ret
xchg
ret
xchg
xchg
jp
lods
clc
xor
out
pop
cwtl
add
ret
sub
cmpsb
shll
jg
movsb
repz
dec
push
int3
lcall
adc
mov
fstl
arpl
inc
mov
dec
dec
jg
in
push
enter
in
movsb
scas
icebp
cwtl
sbb
adc
push
dec
mov
arpl
outsl
lods
in
mov
sbb
inc
and
js
lods
pusha
lock
jge
inc
or
add
pop
ljmp
loope
and
and
and
mov
ret
mov
adc
inc
mov
sti
mov
adc
cmp
hlt
mov
and
rcrl
mov
jno
cmp
add
addr16
ja
movsb
dec
std
roll
movsl
jg
jb
push
ret
mov
mov
jae
push
jecxz
rcrb
fisttpll
icebp
sub
mulb
fdivr
and
sahf
adc
nop
push
sub
sbb
xchg
mov
aad
adc
out
add
stos
mov
imul
adc
inc
das
mov
out
rcll
inc
xor
neg
cwtl
stos
idiv
loopne
push
lahf
cs
je
repnz
push
xchg
ss
test
daa
push
inc
dec
xor
add
mov
clc
adcb
shll
test
add
mov
cltd
jg
addl
fcmovnbe
pop
test
sub
pop
sub
dec
sub
stos
jo
and
pop
emms
xchg
cmpsl
mov
mov
jno
mov
pop
leave
pop
add
sarl
push
cltd
js,pt
rcll
stos
inc
pushf
lahf
test
test
push
int3
test
loope
ja
pop
in
shll
mov
xchg
inc
lods
fmul
mov
mov
adc
adc
inc
add
jp
xor
ljmpw
xchg
mov
test
movsb
or
popa
jge
push
add
mov
push
push
sub
and
push
dec
lret
jae
movsb
daa
dec
xchg
nop
call
sarl
mov
loope
and
inc
daa
add
cmp
test
lds
ret
sbb
add
jge
cmp
and
jmp
in
in
int3
loopne
outsl
sub
jbe
addb
inc
jns
cld
xchg
adc
inc
cmp
add
lds
jmp
cld
jg
sbb
mov
adcb
out
sbb
lret
outsb
call
push
jns
and
leave
and
lods
or
push
sub
mov
dec
jmp
rcrl
xchg
jmp
setl
flds
mov
negl
aad
mov
jmp
sub
insl
fisubrl
rorb
popa
jae
rolb
call
and
xor
push
xor
in
cmp
mov
sub
and
or
jbe
scas
sbb
xchg
push
pop
inc
add
fcmovu
inc
mov
movsl
stos
ret
js
sbb
rcrb
add
je
dec
data16
mov
dec
std
or
mov
ss
xchg
and
js
lret
mov
pop
mov
fdivrs
sub
jp
incb
adc
gs
std
movsl
lcall
add
sbb
dec
cmp
add
sub
pusha
jae
sbb
jne
mov
jo
mov
dec
repnz
push
hlt
push
mov
leave
in
out
movsb
xchg
sti
push
xrelease
mov
sub
stc
add
cmp
dec
adcb
fiaddl
adc
aad
mov
xchg
cltd
mov
xchg
rcrl
fcoml
clc
call
cmc
push
sub
jecxz
cmp
xchg
fstps
cmpsb
inc
xor
dec
add
add
dec
adc
rcr
outsl
push
imul
pop
adc
inc
out
movsb
sbb
mov
jb
cmp
cmc
pusha
dec
push
fwait
leave
mov
in
lds
fmull
in
movb
adc
cmc
popa
cmp
je
sub
cld
fldpi
lock
loopne
push
enter
inc
push
push
cmpsl
jmp
jl
xchg
movsb
and
fwait
out
xchg
fstps
in
ja
cmp
push
addr16
and
cmc
mov
cmp
xor
je
sbb
rclb
sarl
test
mov
adc
lret
popa
idiv
add
gs
sub
jmp
sbb
cmp
mov
in
jbe
lods
add
into
push
xchg
les
pop
and
mov
das
cmp
out
ret
in
mov
stos
loopne,pn
sti
inc
pusha
and
push
insb
shlb
outsl
shlb
cltd
negb
test
fwait
gs
lods
sbb
hlt
add
sahf
dec
rcrb
fadds
fldt
test
mov
push
loopne
movsb
pop
and
cmp
sbbb
stc
out
cmpb
jae
rorb
jae
movsb
jecxz
pop
daa
cmp
fsubr
dec
cld
adc
pop
jge
fstl
sbb
mov
pusha
adc
inc
pop
cld
lahf
js
mov
icebp
out
mov
sbb
inc
loopne
cmp
js
sarb
nop
sbb
fcoms
ss
xchg
dec
jae
push
ror
inc
and
add
insl
pop
add
mov
mov
data16
mov
pop
adc
cltd
popf
out
paddw
mov
sub
jmp
mov
inc
and
and
mov
adc
das
repz
ret
pop
test
lahf
and
scas
jmp
ror
push
stc
jg
jle
aas
mov
iret
inc
stos
xchg
push
shll
out
cmp
aam
insb
pop
pop
pop
dec
jne
and
call
mov
mov
aam
enter
mov
xor
stc
test
cmpsl
aam
jg
mov
daa
jno
cmp
mov
cmp
or
sbb
dec
jle
fadds
mov
mov
push
sbb
movsl
xor
lret
cld
gs
insl
out
cmp
xor
fnstcw
xchg
out
adc
std
repz
adc
in
add
sbb
leave
lods
in
add
pusha
fsts
mov
add
jnp
daa
iret
pop
xor
xor
test
or
dec
push
dec
inc
insl
dec
sbb
inc
or
push
out
hlt
xchg
aam
test
inc
int3
xor
in
js
push
cmpsb
aad
cmp
jne
adc
add
subl
fadds
and
add
or
jecxz
ja
cmp
push
in
insl
jnp
test
pop
pop
mov
test
pop
pushf
dec
xor
jne
jmp
xchg
cmc
inc
or
xor
in
jmp
mov
arpl
scas
push
lret
popl
xor
push
test
and
mov
jge
jo
loope
lods
fidivrs
and
push
aas
cmpsl
lret
mov
add
jbe
jmp
movl
mov
mov
and
aad
inc
add
inc
jnp
ss
add
dec
bound
or
fstps
adcl
aaa
sarl
sub
mov
and
mov
out
std
dec
ds
sahf
pop
mov
ds
lds
sub
add
push
lea
sub
jne
jae
sarl
ja
lahf
ret
adc
pusha
lods
sbb
gs
sub
int3
lds
mov
shll
test
xor
rol
add
lock
sub
and
cs
lock
test
repnz
daa
aaa
and
daa
fisubl
xchg
dec
std
mov
test
pop
mov
cli
clc
mov
imul
cmp
imul
jnp
xchg
xchg
clc
ret
bound
mov
mov
insl
pusha
cli
add
sbb
lcall
cmp
icebp
gs
mov
out
mov
pop
mov
jae
loope
xlat
or
mov
inc
xchg
cmc
aad
cli
xchg
mov
std
cmp
inc
dec
std
loope
mov
push
push
inc
pop
gs
insl
sub
add
mov
jl
ret
loopne
push
imulb
and
pop
outsb
std
movsl
ljmp
fnstcw
cmp
xlat
cltd
ret
sti
and
scas
mov
rclb
xchg
dec
pop
fsubrl
mov
jo
inc
dec
jecxz
and
xchg
jo
mov
test
sbb
or
scas
inc
pop
ljmp
mov
pop
pushf
xor
adc
pop
mov
cwtl
fbld
dec
push
psllw
hlt
mov
push
mov
ja,pt
xchg
push
fbld
das
arpl
sbb
jge
mov
mov
dec
push
push
add
mov
sub
add
jmp
pop
dec
fists
movsb
jmp
inc
stos
int
mov
cmp
inc
mov
out
pop
std
clc
dec
push
movsl
push
imul
pop
or
jae
popf
scas
into
mov
mov
adc
add
pop
addr16
rcll
repnz
xchg
add
add
daa
inc
lods
cmp
xchg
pusha
pop
jg
roll
adc
cmpsl
popa
popa
icebp
sub
sub
dec
adc
cmc
rcll
cmp
mov
in
rorl
fists
imul
and
pushf
cmc
add
mov
sub
inc
and
sub
sti
in
cmp
and
testb
jmp
daa
rcrl
sub
xchg
xlat
dec
adc
loop
int3
notl
popf
xor
inc
sub
xor
push
test
push
iret
pop
mov
and
pop
push
and
push
sub
and
outsl
push
adc
cmpsb
es
xchg
sbb
add
push
and
mov
aad
cli
out
std
sbb
mov
and
mov
call
pop
adc
cmc
pop
ss
negb
dec
and
xor
bound
xor
jp
popa
ficompl
clc
hlt
into
inc
ja
cli
push
gs
clc
dec
push
stc
cltd
ffreep
mov
mov
mov
mov
rolb
decl
in
sub
mov
imul
adc
mov
adc
adc
pushf
es
cmp
shll
xchg
xor
movsl
call
clc
cmp
xor
sub
mov
call
std
push
jmp
rcll
lods
ja
and
es
push
mov
sbb
jle
sub
adc
cmpsl
addr16
pop
and
hlt
and
lods
push
sbb
jmpw
fistl
mov
into
sbb
stos
js
cltd
sbb
or
pop
lret
xor
aad
jle
clc
mov
xor
in
inc
pop
or
int3
and
fidivl
add
add
enter
or
inc
inc
jae
sbb
pop
shlb
insl
iret
or
js
fs
mov
dec
push
add
inc
adc
fistpl
xor
clc
cli
xchg
in
shlb
movsl
gs
dec
sub
add
in
mov
mov
mov
fsts
pop
aam
movsl
or
sbb
add
mov
or
outsb
shrb
ja
xchg
roll
add
lahf
imul
lahf
shrb
movsl
cmp
ja
lods
loopne
ret
das
push
cmp
cmp
shlb
pop
dec
xchg
adc
das
sub
cmp
add
ja
inc
aam
negl
and
mov
sub
xchg
repnz
fbld
cltd
loop
sub
dec
js
inc
jbe
push
cmp
rol
push
xchg
imul
out
jmp
sbb
sub
pusha
xor
sbb
mov
repz
les
lods
cmp
add
ja
jno
into
cmp
ss
xchg
and
inc
test
stc
xchg
in
out
mov
cmp
fdiv
sub
pop
addr16
sbb
push
add
mov
in
push
cmc
xor
jle
fcomps
add
sbb
pop
mov
sub
mov
rcl
cmp
movsb
jbe
xor
inc
push
stc
xor
xchg
lds
pop
mov
mov
mov
ret
std
xchg
xchg
mov
cwtl
pop
sarb
fs
pushf
enter
pop
push
ss
adc
adc
std
notb
sub
sbb
call
adc
sub
in
test
mov
xchg
mov
and
loope
ss
std
jecxz
aam
repnz
sbb
negb
pop
add
cmpsl
mov
movsl
test
pop
aaa
mov
sbb
pop
xchg
dec
or
xchg
xchg
mov
mov
add
std
movl
mov
hlt
cli
mov
adc
ret
xchg
test
add
push
test
dec
enter
push
add
jmp
cwtl
xor
adc
cs
sti
std
test
into
dec
cli
ja
icebp
push
cmp
add
sahf
add
xchg
add
ja
and
add
stos
xchg
repz
movsl
std
sar
cli
sub
jge
sbb
sbb
mov
mov
adcb
syscall
cmpsb
cmp
in
inc
cltd
jmp
das
movsl
mov
shll
pop
cs
jae
add
mov
mov
mov
adc
push
sbb
shrl
lock
in
push
mov
cmp
inc
rcrl
std
out
in
aad
mov
xor
lahf
or
int3
push
push
cmc
mov
test
sti
and
lds
push
jne
and
pusha
sbb
xor
and
std
cmp
mov
dec
dec
mov
inc
mov
imul
dec
pop
pop
int
xor
mov
popa
pop
and
fsubr
xlat
and
push
sar
mov
adc
xchg
test
and
sbbb
shll
ss
adc
pop
ja
pop
stos
dec
je
rcll
add
fimull
pop
sub
pop
out
int
sbb
aaa
adc
enter
sahf
daa
fnsetpm(287
jb
data16
out
or
flds
mov
mov
test
add
inc
push
mov
into
push
and
or
pop
jecxz
and
cmp
loope
ficoms
xor
and
add
and
lahf
fists
adc
ret
ss
mov
jle
call
pushf
and
jecxz
sbb
xchg
add
fld
add
pop
push
lods
mov
jl
or
add
or
mov
dec
xor
test
push
loopne
mov
jns
leave
ret
xchg
add
cmp
mov
andb
cs
in
jge
mov
push
mov
add
xchg
or
mov
and
sbb
jg
mov
ret
mov
shrb
sbb
mov
adc
stos
dec
lods
hlt
inc
push
aaa
mov
cltd
loope
ffree
cmp
int3
inc
mov
scas
jnp
adcb
ss
xchg
cmpsb
imul
dec
mov
cmc
mov
adc
mov
mov
pop
jo
rorl
inc
out
push
xchg
cs
ret
push
in
xchg
stc
mov
scas
mov
clc
sbbl
and
mov
adc
mov
popa
or
pop
mov
xor
pop
xchg
movsb
pop
clc
xor
inc
rcrb
jbe
dec
xchg
in
jo
jo
dec
adc
xor
push
pushf
std
inc
out
pop
jmp
mov
dec
xor
gs
test
aam
and
filds
popa
movsb
and
cltd
lret
xor
popf
lods
xchg
add
cmp
cmpsl
xchg
mov
stos
std
std
push
test
pushf
scas
testl
inc
cmp
or
xor
fnstcw
xchg
ja
pushf
sbb
push
adc
ljmp
mov
sahf
es
mov
fidivrs
daa
data16
add
pop
mov
ds
sub
and
push
xchg
outsb
xor
xor
cmc
testl
mov
aaa
js
push
lods
pop
mov
jp
push
ss
cmpsl
test
sub
es
dec
xor
lea
or
rolb
pop
pop
mov
pop
mov
aaa
cmp
mov
and
ror
inc
fiadds
and
cmp
aad
scas
mov
cmc
push
sub
aas
add
and
and
or
sub
iret
sahf
in
push
xchg
pop
cli
and
cmp
xchg
daa
repnz
addr16
mov
cmp
lahf
jb
mov
leave
jecxz
dec
xchg
mov
mov
mov
ds
or
push
adc
sub
enter
loope
rol
dec
mov
sub
dec
xchg
cmp
xchg
sti
movsb
in
ret
test
xchg
cmp
push
pop
mov
mov
stos
dec
fidivl
cwtl
add
enter
fcmovne
dec
iret
or
add
iret
lds
mov
mov
popf
add
xchg
js
popa
jmp
insb
movsl
loop
std
es
mov
loopne
shrl
sbb
aad
xchg
imul
inc
mov
dec
sbbb
ds
movsb
ret
pop
xor
pop
jp
je
mov
adc
loope
mov
out
xchg
jb
xlat
fsubl
outsb
push
out
fcompl
push
adc
cld
imul
in
xchg
dec
aas
mov
std
or
call
incb
jmp
add
dec
arpl
inc
shrb
pop
ror
sti
jbe
cmpsl
mov
pop
cmp
fs
scas
push
sbb
pushf
mov
inc
icebp
xor
popa
jns
outsb
std
icebp
aaa
inc
jbe
mov
mov
scas
aam
cltd
ret
sbb
sub
xchg
pop
mov
add
inc
inc
iret
add
loope
aam
and
and
lds
sbb
push
je
aad
fucom
aas
and
cmpsl
jle
sti
repz
xchg
shlb
push
xchg
push
dec
fnsave
mov
dec
push
xor
add
pushf
mov
xorl
sbb
inc
lods
adc
ljmp
inc
inc
cmp
out
test
leave
cmp
xchg
div
or
fcmovu
fisubrs
jno
xor
and
xorb
pcmpgtb
call
les
ja
test
mov
sub
mov
sti
and
push
out
jp
pslld
loope
inc
aam
cmp
stc
push
cmpl
xchg
inc
aas
xchg
jge
add
push
repz
fs
and
int
sub
add
lock
dec
and
sbb
cld
ss
xchg
cmp
cld
icebp
je
ja
and
stos
cmp
aam
dec
stos
call
lock
mov
cmc
adc
jl
cmc
ret
aaa
cmp
sahf
sub
in
cmpb
movsb
hlt
inc
dec
inc
iret
insb
cmpsl
xor
movsl
xchg
fists
dec
fs
loopne
jae
pop
popf
add
mov
rolb
or
sub
jg
mov
movsb
and
inc
sub
pop
add
inc
mov
js
inc
enter
int3
adc
sub
fs
mov
xor
jo
sbb
adc
std
loope
push
mov
sbb
jne
dec
push
xor
in
int3
mov
sbb
cli
mov
lcall
stc
scas
inc
sbb
xor
shrl
sbb
push
mov
mov
dec
adc
icebp
fwait
decl
jb
xchg
cmp
xchg
xor
fwait
inc
mov
test
sbb
cmp
xor
add
mov
into
lahf
in
add
push
add
xchg
dec
lock
std
and
pop
or
cmc
cmc
scas
sub
imul
lret
cmove
outsl
xchg
pop
lret
add
push
daa
cmp
dec
hlt
mov
inc
add
cmp
enter
adc
cwtl
push
adc
dec
pushf
inc
cltd
rclb
cs
fst
xlat
in
mov
test
xchg
fldenv
aas
divb
ss
or
out
or
mov
jae
adc
sub
fisttpll
icebp
lahf
test
mov
mov
sub
cli
mov
xchg
mov
adc
leave
xchg
clc
cmp
je
inc
jg
pop
sti
mov
pop
lods
and
into
cld
mov
in
inc
and
clc
enter
add
and
cltd
movsl
cs
pop
lods
sub
mov
aaa
jecxz
ret
and
rcrl
cmpsl
jge
fistpll
mov
decl
jl
hlt
aam
sub
loope
into
nop
sahf
popf
xchg
jmp
js
call
sub
int3
scas
test
out
xor
push
push
mov
outsl
sbb
outsl
push
shll
mov
mov
add
stos
mov
iret
aam
movsb
and
fcomi
addr16
adc
cmp
inc
insb
pop
mov
in
pop
arpl
call
and
daa
add
and
popa
insb
pop
cmc
and
test
add
add
ret
mov
popa
push
cmp
pop
or
dec
sub
jp
lret
pop
icebp
add
pop
pop
icebp
pushf
in
ljmp
fldcw
inc
imul
es
cmpsl
and
add
jle
aas
add
add
jp
test
ljmp
push
movsb
xchg
jmp
and
outsb
mov
add
jbe
test
cmpsb
adc
cmc
cmp
divl
dec
cmp
push
nop
dec
sub
dec
xchg
stos
cmp
sar
or
pusha
mov
jp
fsubrp
xlat
fs
movsb
iret
xchg
out
divl
unpckhps
das
or
sti
divl
je
pop
pop
mov
fwait
aas
cmp
and
lds
xor
jno
sub
or
repz
je
jae
je
adc
es
adc
jns
scas
cmpl
mov
stc
sahf
cmpsl
mov
imul
sbb
scas
fildl
mov
dec
clc
rorb
mov
jae
sbbl
aaa
push
andl
bound
mov
sub
ss
and
pushf
ss
cmp
inc
ja
jle
mulb
enter
and
jecxz
add
stos
cmp
daa
mov
lock
call
jae
insl
jle,pn
int
shrl
xchg
push
and
cs
ja
dec
jnp
shl
out
inc
test
mov
cli
and
mov
xchg
pop
mov
sbb
xor
adc
jge
jo
sub
sbb
fdivrl
cmc
and
dec
or
and
call
add
sti
and
pop
inc
push
jle
je
push
sbb
mov
mov
stos
aad
gs
out
out
in
test
rcr
and
and
sub
add
sbb
inc
test
flds
ljmp
adc
mov
sbb
ds
icebp
shlb
adc
gs
hlt
shll
xchg
repnz
ja,pn
fcmovne
negl
inc
movsb
ja
xor
add
push
loopne
and
movsb
mov
or
dec
fisttps
mov
jg
sub
shll
push
sti
inc
in
add
sbb
adc
loopne
jae
jns
jns
pop
imul
sbb
and
lret
xorl
add
mov
in
call
icebp
cld
hlt
and
scas
mov
dec
add
mov
cmp
in
add
cmp
pop
rclb
sub
out
cmc
mov
sub
cmc
xor
mov
xor
jne
sbb
mov
mov
incb
sahf
push
out
daa
fwait
aaa
gs
adc
jg
nop
pusha
cmp
mov
xchg
pop
rcrb
out
xor
pshufw
and
adc
in
popa
leave
and
mov
fwait
and
push
in
les
inc
xlat
fiaddl
insl
jno
push
add
repz
mov
mov
push
rclb
mov
into
jne
add
mov
mov
mov
inc
mull
pop
or
pop
jne
sbb
movsb
and
pop
add
cmc
lea
xchg
inc
sub
lock
push
dec
cld
add
fisubl
das
xchg
pop
pop
repz
mov
add
movsb
sbb
xchg
inc
les
ja
inc
rolb
in
or
movsl
push
push
adc
and
stos
in
lock
movsb
mov
iret
sbb
in
and
xchg
hlt
enter
enter
adc
cltd
data16
daa
mov
mov
xchg
inc
cmpsl
ljmp
movsl
xchg
fwait
decl
cmp
in
mov
xor
xlat
cmp
mov
lds
pop
cld
fwait
ja
push
mov
sbb
and
lods
fld1
lcall
lds
jae
sub
jg
push
int3
int
outsl
inc
cmc
dec
adc
aaa
xchg
jae
sub
cltd
mov
sahf
leave
dec
push
xor
sbb
test
loopne
je
lahf
jne
push
add
sbb
in
arpl
pusha
sub
push
nop
jae
add
das
subb
sti
inc
std
movsl
jns
mov
and
stos
out
stc
ljmp
or
xchg
or
frstor
xchg
adc
fidivl
lock
xchg
sbb
mov
imul
jle
jb
shrb
cli
pushf
loope
add
nop
dec
cwtl
cmp
roll
lret
inc
push
pop
xor
jae
mov
mov
mov
jb
fdivr
arpl
ja
es
sbb
mov
stc
xchg
jno
loop
nop
push
stos
pop
inc
mov
mov
fldenv
sub
mov
cmp
pop
cmp
pop
pop
adc
jge
add
sub
mov
cmp
xchg
adcb
outsl
push
mov
cmp
mov
lds
es
adc
sub
icebp
and
mov
aad
js
mov
insb
and
push
add
dec
std
out
lds
jb
sbb
inc
sahf
mov
fisttpll
ss
cmp
in
mov
mov
xchg
adc
xor
and
mov
lea
xchg
mov
pop
pop
add
aaa
test
cs
push
jae
mov
std
xor
adc
sub
scas
aaa
mov
cmp
add
jl
sbb
cmp
sub
out
push
xor
jecxz
push
dec
jbe
mov
and
adc
mulb
and
fstpt
std
and
mov
pop
sar
call
sbb
es
push
sbb
cwtl
lcall
add
adc
jb
sbb
pop
cmp
adc
call
hlt
or
mov
add
xor
jns
call
push
mov
add
outsl
and
xchg
pop
add
sub
jg
mov
in
cmp
mov
mov
es
push
jb
jmp
mov
shll
flds
out
rcrb
mov
mov
hlt
mov
sbb
pop
lcall
xchg
cmp
adc
push
mov
iret
aaa
mov
cmp
pop
inc
mov
icebp
jns
mov
cmpsl
xlat
sbb
andl
loop
push
cwtl
mov
fisttpll
stc
movsb
mov
cmpb
imul
fs
jne
push
pop
xor
aaa
shll
sub
inc
adcl
or
popa
dec
std
and
jp
mov
mov
sbb
ds
adc
inc
ss
or
mov
and
mov
adc
xchg
push
cld
test
lods
shrb
bound
mov
fdivrs
mov
mov
frstor
jb
aaa
sbb
movsl
inc
into
xor
test
std
cmp
leave
shll
xor
inc
or
dec
clc
dec
xchg
lret
icebp
cmc
cmovb
andb
jecxz
jmp
test
and
pop
std
mov
push
psubsw
sbb
and
hlt
add
mov
xchg
gs
mov
mov
xor
mov
test
cs
and
jb
push
add
add
imul
cmp
enter
mov
mov
xchg
ja
in
push
enter
loope
das
out
mov
cmpsl
insb
inc
jb
jno
xchg
arpl
adc
rcrb
mov
inc
mov
mov
cmpsl
mov
mov
dec
fldlg2
fistps
cmp
mov
in
mov
mov
jle
xchg
xor
cmp
push
add
fnstsw
mov
cs
leave
sub
xchg
mov
xchg
ds
data16
adc
popa
sub
in
in
out
sub
sub
out
int3
xchg
adc
fs
push
popf
jp
dec
xor
pop
icebp
and
ss
rcll
inc
xor
cmp
je
movsb
cmpsb
dec
mov
add
imul
xor
xor
adc
add
fisttpll
xor
pop
pop
rcrl
xor
cmp
iret
cmc
cmpsl
jg
jno
mov
cwtl
sahf
pop
push
mov
cmp
xchg
or
xchg
cmp
iret
jno
add
icebp
in
pushf
jnp
mov
test
enter
or
stos
pop
bound
jb
mov
push
das
fnstenv
dec
ret
icebp
or
mov
ret
push
adc
dec
hlt
in
adcl
cmp
addr16
lret
mov
mov
add
xchg
ljmp
pop
mov
fwait
mov
push
fistpll
jae
mov
jle
sbb
sub
adc
mov
mov
mov
cmp
jecxz
fbld
inc
nop
adc
dec
rcrb
mov
test
aam
fistps
cli
and
xor
call
cmp
mov
cmpsb
mov
call
cltd
push
icebp
adc
ror
mov
jle
out
push
out
and
pop
ja
jmp
je
pop
nop
aaa
or
push
neg
push
xlat
lret
je
dec
pop
push
mov
jmp
or
nop
jmp
test
add
inc
jg
sub
add
enter
pusha
orb
lock
pushl
add
dec
jnp
fs
sbb
lock
lods
std
push
das
mov
stc
inc
pop
mov
xchg
xor
je
mov
ja
shlb
or
iret
sbb
mov
mov
test
mov
int3
jmp
mov
cmc
xchg
fs
dec
and
nop
pop
lods
cmp
pusha
call
add
xor
ret
imul
jne
int
out
mov
test
push
ja
sub
jae
shll
lcall
cmp
js
ret
ja
insl
das
das
shll
dec
mov
adc
sub
mov
cmp
or
push
add
lahf
or
push
inc
popa
cltd
pop
das
in
push
jp
sbb
scas
in
mov
push
outsb
xor
sbb
sbb
cmp
addr16
mov
jne
shl
test
xor
sahf
rcl
out
add
fidivrs
jne
fcomps
test
inc
xlat
cld
xchg
push
jo
add
mov
std
cmp
sbb
jae
out
dec
sbb
inc
mov
pop
sbb
into
lods
cmp
imul
and
add
jg
leave
cli
loope
leave
test
or
dec
sbb
dec
fs
popa
lods
add
imul
push
mov
movsb
mov
inc
mov
rcrl
orb
or
inc
jmp
xchg
inc
pop
xor
mov
enter
daa
push
stc
xchg
mov
mov
push
xchg
mov
inc
sti
xor
jle
das
push
out
jge
mov
aam
or
insl
fisubrl
add
shlb
pop
movsl
cmp
jne,pt
and
pop
adc
ret
outsb
cmpsb
bound
jbe
mov
lock
pop
fistpl
mov
push
cmpsb
lds
and
and
aam
add
stos
lods
mov
loop
ja
and
pushf
cld
fwait
std
xor
sbb
shr
out
pushf
mov
push
cmp
ja
sbb
or
sub
or
mov
push
and
cmp
mov
stos
add
dec
pop
xchg
adc
xchg
iret
ljmp
pop
pop
ret
insb
mov
sbb
jne
rcrl
out
mov
cltd
ds
popf
jae
jnp
cmp
lods
enter
roll
lock
cwtl
mov
test
adc
add
popa
call
push
add
dec
xor
adc
lods
sti
xor
sbb
cwtl
das
cmpsb
ss
push
push
push
sbb
jle
pop
jae
dec
in
jle
sub
shl
cltd
sub
cmp
xchg
push
shr
and
push
adc
out
xor
leave
xchg
push
push
ficompl
jge
shlb
les
out
xchg
sbb
and
pop
jnp
rcrb
cmp
push
daa
ss
lahf
cmp
adc
cmpsl
pop
shl
mov
test
xchg
fsubl
push
sbb
decl
pop
rorb
cltd
hlt
jns
push
sahf
inc
pop
pop
and
movb
jmp
sti
std
stc
and
sub
rclb
push
pop
fwait
cmc
push
aas
fdivrl
aas
push
cwtl
das
lds
dec
inc
xor
sbb
cmp
sub
cltd
insl
adc
pop
out
xor
sub
loope
add
cmpsl
and
mov
test
fstpt
lods
xchg
pop
data16
push
ljmp
leave
sub
imul
jecxz
mov
test
mov
pop
xor
mov
popf
inc
inc
push
testl
aas
idivl
and
add
adc
mov
inc
cmp
mov
in
daa
adc
das
mov
or
leave
push
js
test
xor
popl
push
jne
mov
stc
les
hlt
lds
mov
clc
hlt
shll
cmpb
adc
add
aad
lret
xchg
push
jl
int
mov
xor
sbb
sub
xor
in
daa
cltd
cli
jecxz
mov
jp
lret
int
mov
jl
aas
mov
test
ret
sub
mov
mov
inc
and
add
jnp
xchg
subl
imul
jae
mov
cmp
cmc
in
aaa
cmp
jo
xchg
mov
enter
std
pop
or
xor
add
mov
repnz
mov
or
jmp
cltd
test
cmp
lahf
mov
repz
roll
xchg
inc
xor
out
cmpsl
xchg
js
sbb
mov
data16
mov
mov
call
xlat
xchg
adc
stc
and
pop
mov
mov
in
in
xor
mov
stos
ret
push
pop
xor
daa
mov
or
sub
lods
popf
rcl
lret
and
loopne
or
out
clc
xchg
roll
add
inc
inc
mov
lds
loop
std
ss
add
movb
sar
out
fidivl
and
in
mov
inc
pusha
fs
cmp
jmp
jo
and
ja
ss
cmc
bound
cld
xor
sub
int3
loopne
and
xchg
cmp
in
push
arpl
mov
pop
lods
subl
shrb
notl
and
dec
and
daa
or
mov
pop
or
notl
movsb
pop
sbb
int3
fmull
jl
mov
jns
pop
xorb
stos
in
push
pop
jo
sbb
mov
adc
sub
js
lds
xor
aas
mov
push
cmp
inc
jae
insl
ss
repnz
mov
pushf
not
push
pop
pushf
fxch
je
pushf
popa
shlb
pop
out
xor
out
dec
outsb
sbb
push
add
mov
sbb
out
add
fisttps
rep
pop
imul
push
add
or
sti
repnz
rcrl
xchg
mov
test
mov
push
sbb
imul
sub
pop
inc
jae
push
cltd
imul
mov
and
adc
push
add
and
decl
lahf
inc
inc
and
je
sub
aad
sbb
aas
cmp
add
xchg
push
mov
adc
scas
repnz
addl
sbb
push
xor
jl
cmp
in
dec
pop
add
aad
add
mov
adc
stc
inc
loop
aad
movsb
call
lds
test
daa
cmp
outsb
cmovp
xchg
insb
inc
or
shll
dec
fwait
push
add
icebp
push
inc
add
arpl
lock
in
inc
mov
and
inc
push
int3
push
jne
jg
mov
cmp
shl
adc
mov
inc
loope
xor
dec
movsl
mov
shll
mov
cmc
adc
and
sbb
andb
mov
mov
fadd
rcrb
sbb
mov
push
rclb
and
xor
out
mov
repz
gs
jae
sbb
hlt
mov
filds
enter
push
leave
mov
or
lcall
movsb
das
xor
cmp
pusha
inc
popa
push
rorl
xor
pop
stos
test
out
xor
jmp
frstor
pop
mov
sahf
pop
xor
xchg
mov
add
pushf
mov
mov
clc
or
and
inc
lds
push
dec
lods
icebp
pusha
adc
mov
adc
cld
pop
mov
mov
pop
mov
fmull
add
roll
cmp
dec
sarl
add
fcomi
mov
jne
cmp
imul
mov
xchg
push
test
and
sbbb
sbb
es
lods
clc
iret
ss
fcoms
pop
lcall
lahf
sahf
scas
stc
and
add
and
clc
call
loope
ret
cmp
sub
add
mov
add
rorb
and
sbb
xchg
cmp
push
add
lahf
sbb
call
jp
in
jns
gs
dec
push
mov
cmp
icebp
clc
push
mov
xchg
dec
jp
sbb
xor
dec
clc
pop
popf
je
push
or
push
xchg
sbb
push
push
inc
testb
lret
je
xor
lret
mov
xor
adc
shll
push
add
jmp
mov
add
aaa
push
lods
popa
sar
jg
sbb
mov
jmp
imul
mov
and
repnz
cmp
adc
or
mov
mov
sahf
cli
inc
sti
or
lcall
mov
xor
in
pop
sub
dec
cmp
adc
cmp
fists
cld
cld
add
sub
cmp
xchg
iret
xor
xor
pop
pop
or
and
sbb
fstp
mov
shlb
lret
cmp
sarl
pop
pop
iret
test
outsb
cmp
push
cmp
sbb
movsb
shll
mov
in
aam
fisubl
mov
stos
jbe
dec
fwait
pop
or
adc
lretw
push
fldenv
jg
in
subb
lods
pushf
aaa
sbb
push
mov
inc
mov
and
dec
add
add
mov
xchg
cmp
xor
mov
and
jmp
aas
add
lret
fcoml
push
xor
mov
or
popa
out
jne
pop
add
psubd
jae
inc
push
call
jl
lods
cmpsl
push
sbb
mov
lret
and
and
fs
adc
pop
mov
ja
mov
jp
sbb
lds
enter
pop
fldcw
xor
pop
fsubs
push
sbb
add
ja
mov
das
icebp
and
imul
and
xchg
call
and
and
adc
filds
lret
loopne
stos
in
dec
jne
sbb
add
adc
xchg
int
or
fadds
pop
sub
jnp
cmp
movsb
cltd
loop
sarl
fistpl
mov
mov
test
outsb
rcrl
mov
pushf
testb
out
mov
mov
jge
stc
sbb
ljmp
and
cmp
jl
adc
adc
or
shrb
xor
gs
mov
push
push
paddsb
mov
cmp
inc
cltd
add
sahf
pop
push
xor
mov
clc
loop
mov
sub
add
loope
mov
stc
test
mov
cmp
and
adc
dec
sti
ret
add
shll
mov
ds
shl
mov
adc
jecxz
fldl
pusha
dec
push
ja
add
call
inc
jle
cmp
les
in
hlt
das
int3
aad
outsl
in
pop
cmc
push
dec
sti
jbe
and
pop
hlt
cs
les
shrl
push
inc
pusha
enter
lea
xor
sahf
mov
cmp
push
xlat
je
icebp
loope
cs
lahf
stc
xor
loope
test
cmc
mov
mov
and
pusha
je
pop
mov
inc
fs
pop
arpl
movsb
into
pop
adc
and
leave
push
mov
xchg
dec
push
hlt
cmp
imulb
rcrl
sub
or
enter
sbb
push
mov
cmp
data16
cld
pop
mov
dec
aaa
test
jns
mov
rcrl
int
adc
xor
imul
push
and
sbb
xor
mov
mov
loope
daa
std
cmpsb
cltd
mov
xor
add
inc
rcl
add
or
mov
movsl
pop
mov
mov
ss
cltd
daa
int3
cwtl
push
jno
in
push
jno
pop
mov
jg
shlb
decb
cmp
dec
dec
xor
mov
daa
mov
lea
add
push
inc
test
and
add
add
inc
cwtl
out
mov
mov
cmp
mov
out
add
xor
scas
inc
ret
jmp
mov
test
mov
shrl
inc
adc
fcompl
jge
out
loop
adc
sbb
icebp
push
std
lea
adc
cmp
call
sub
sahf
je
pusha
imulb
ds
add
mov
mov
pop
mov
insl
push
sarl
push
daa
xor
adc
inc
and
xor
mov
decl
int3
mov
dec
and
sbb
jno
in
ja
and
out
mov
dec
sub
int3
scas
repnz
add
push
cs
call
cltd
fwait
inc
pop
jg
clc
stos
cmp
cmpsb
scas
pop
negb
mov
add
cltd
add
fs
in
adc
notb
cmp
push
and
xor
or
mov
int3
mov
fnstsw
sbb
inc
stos
hlt
mov
dec
sbb
int
sbbl
movsl
insl
and
mov
stos
add
dec
in
rolb
ret
cmp
cmp
daa
push
int3
xor
cmp
nop
stos
xchg
or
sbb
adc
insl
push
mov
and
inc
lods
mov
mov
in
add
in
leave
cmpsb
push
ret
js
lds
push
loopne
jg
xor
add
gs
aas
test
test
jle
je
cmpsb
or
jl
ret
dec
mov
lea
adc
adc
inc
cmp
ret
xchg
inc
out
jb
jle
in
add
fucom
stos
test
xchg
repz
fwait
pop
sbb
sub
mov
push
movsl
insb
jo
jnp
inc
and
leave
or
inc
loopne
fldenv
movsl
adc
add
movsl
cs
enter
inc
or
lods
mov
gs
mov
adc
pop
ret
pop
add
in
add
popa
mov
push
sub
mov
xchg
sbb
ds
mov
sub
dec
mov
cmp
sbb
mov
xor
fs
lods
jae
or
mov
mov
dec
loope
or
mov
hlt
into
sub
cwtl
and
cltd
jl
out
test
std
cwtl
fisttpll
mov
xor
idivl
int
hlt
dec
inc
call
mov
mov
jl
sbb
sahf
mov
pusha
enter
enter
xchg
cmp
loope
pop
shrl
push
jb
outsl
ficomps
gs
aaa
inc
mov
xor
cmp
push
add
movsb
hlt
mov
mov
adc
movsb
pop
push
stos
popa
sbb
cwtl
mov
xchg
sub
out
sbb
sbb
loope
sbb
and
add
daa
mov
push
and
std
inc
test
pop
xchg
mov
rcll
mov
adc
cmc
sbb
dec
mov
int
mov
pop
pop
sbb
adc
pop
sub
imul
aad
rcr
push
add
push
xchg
addl
xor
mov
sbb
add
cld
lods
cwtl
and
das
mov
mov
mov
adc
xor
adc
ljmp
das
jmp
sbb
xorb
mov
jb
pop
adc
data16
push
xchg
inc
cmp
dec
and
xchg
sub
xor
mov
pop
mov
mov
cmp
mov
in
iret
push
cli
lock
pop
filds
dec
jecxz
mov
inc
popa
mov
pop
mov
add
inc
sbb
in
xor
jbe
pop
ljmp
hlt
jns
lahf
jmp
test
cmpsl
jne
adc
add
in
push
xor
xchg
mov
lcall
repz
dec
ret
sub
nop
js
shll
into
aad
lock
xor
jno
rorb
push
push
repnz
sub
mov
push
stos
mov
sub
jecxz
pop
jmp
pop
andb
add
hlt
pusha
std
movsb
jmp
lea
push
in
jb
cmpsl
mov
add
mov
pushf
and
test
imull
jnp
lock
repz
call
fisubl
mov
or
mov
fstpt
cli
and
cs
mov
lods
insl
lea
ljmp
pop
mov
mov
jge
adc
mov
and
xor
add
pop
loope
test
push
cmc
cmp
mov
cli
ror
fsubl
arpl
pop
sbb
xor
fsubrs
adc
mov
cmp
mov
sbb
hlt
xor
fldl
xchg
xchg
or
in
jecxz
popa
addl
pop
dec
mov
or
adc
not
and
shlb
in
and
or
jae
fwait
push
xchg
or
pop
in
mov
lahf
xchg
lock
cld
mov
dec
jle
jmp
xorb
test
add
and
lods
loopne
movsb
je
jo
cwtl
or
mov
sbb
les
or
es
ss
inc
lock
cmp
movsl
cmc
sub
pushf
push
pop
jno
lods
pop
popf
std
sahf
ljmp
les
sbb
addl
or
sbb
mov
ret
mov
movsb
pop
mov
and
repnz
cmp
dec
repz
pop
xchg
icebp
adc
mov
add
lds
cmc
les
or
test
add
and
cwtl
daa
jae
pushf
addr16
es
nop
mov
repnz
lods
rcrl
and
add
adc
add
and
je
or
push
pusha
int3
movsb
movaps
clc
add
inc
daa
clc
add
sbb
loop
dec
in
and
daa
aaa
xor
cwtl
popa
push
xchg
jle
in
cmc
xchg
in
movsb
call
push
mov
xchg
aaa
sbb
adc
sub
ss
nop
das
test
push
xchg
xchg
adc
in
jmp
mov
mov
xchg
adc
xchg
push
out
out
ret
scas
popl
inc
dec
mov
mov
jo
aaa
outsb
fnstsw
sbb
pop
lods
and
xor
dec
out
lods
test
sub
sbb
stos
mov
pop
jmp
dec
adc
jnp
lods
xchg
sbb
lret
push
lods
jo
icebp
movsl
hlt
cmc
mov
int
or
mov
add
adc
fsubrs
adc
test
or
jae
sbb
rcr
add
inc
mov
mov
in
lret
cmp
movsl
push
pushf
dec
out
and
arpl
lret
mov
pop
int3
dec
add
xor
stos
ja
add
pushf
scas
test
cs
mov
xchg
push
inc
and
iret
pop
push
xor
sbb
out
mov
popa
mov
inc
adc
in
lds
add
mov
cmc
lods
push
jae
pop
and
push
and
aas
add
fwait
jge
and
rolb
test
clc
enter
leave
movsb
imul
push
xor
adc
shr
xchg
cmp
daa
out
das
adc
adc
sub
enter
les
jp
lea
cmc
lahf
sbb
ja
sub
xlat
xor
pop
cmc
xchg
push
iret
testb
push
gs
xchg
inc
fisubrs
fwait
mov
or
inc
outsb
out
mov
and
movsl
dec
cmp
xchg
ds
push
or
sbb
inc
and
in
dec
dec
std
sub
bound
sub
or
outsl
pop
lret
mov
xchg
lret
cmp
inc
imul
add
sar
mov
pusha
jge
inc
cltd
stos
inc
test
dec
and
sub
jo
icebp
and
mov
pop
pushf
mov
pop
xor
call
imul
or
arpl
outsl
push
jne
clc
xchg
out
loopne
jbe
pop
mov
push
push
jb
inc
push
add
sbb
or
movsb
push
fwait
xchg
or
add
mov
dec
pop
and
dec
xor
add
inc
mov
dec
movsl
test
jl
mov
dec
loop
xchg
les
or
outsl
in
ljmp
adc
fs
xchg
fdivrl
outsl
test
int3
mov
mov
xor
aam
data16
mov
cmp
mov
call
lahf
cmc
nop
xchg
das
pusha
loopne
addl
xor
in
pop
sub
mov
lret
jmp
shld
mov
mov
ja
add
cltd
mov
aad
mov
sbb
stc
or
insb
or
cwtl
jmp
loopne
fstps
enter
ss
mov
inc
sbb
movsb
jg
fucom
mov
xchg
xchg
xor
test
hlt
add
jno
in
xor
xor
or
stos
mov
xor
add
jmp
ds
or
arpl
or
xor
out
sub
imul
xchg
mov
push
in
insl
inc
aas
adc
xchg
dec
icebp
out
fnstsw
adc
repnz
dec
sub
mov
cmp
cs
inc
sbb
clc
sub
lock
pop
inc
push
mov
cmpsb
movsb
test
movsb
das
daa
cmp
imul
cmc
inc
outsl
stc
loopne
test
fldcw
hlt
inc
leave
daa
clc
sti
ljmp
rclb
ja
mov
push
int3
dec
mov
and
nop
int3
dec
xor
clc
sub
push
aam
adc
push
mov
jo
mov
mov
xchg
ds
test
gs
jl
dec
test
fistpl
pop
pushf
mov
clc
movsl
xchg
lret
sub
cmpsl
cmp
jae
clc
dec
jge
or
dec
sub
std
outsl
je
out
in
lock
xor
add
mov
xor
add
les
xor
cmpsl
callw
hlt
mov
sub
std
pusha
xchg
jo
test
lcall
sbb
data16
das
mov
lock
adc
aaa
xor
pop
shll
xor
daa
mov
insb
lcall
inc
ja
push
jp
ds
jae
cli
inc
andb
stos
add
out
add
lods
mov
iret
mov
adc
cmp
sbb
fbld
scas
cmp
ret
add
test
rolb
adc
add
test
mov
add
pop
pop
and
call
pop
loopne
bound
xor
mov
sub
cli
lcall
or
cltd
icebp
mov
jae
add
cmc
pusha
shlb
in
popf
adc
leave
fcoml
jno
out
or
js
xchg
sbb
mov
pop
adc
cmova
out
dec
movsl
adc
pop
outsl
inc
cmp
push
in
push
xchg
es
subl
sbb
jne
inc
mov
jae
addl
inc
daa
test
imul
cmp
sbb
imull
pop
negl
cmp
inc
inc
pop
push
push
cli
pop
mov
mov
stos
sub
jb
cmc
stos
out
or
cmp
int
ret
mov
arpl
xchg
repz
sarb
and
cwtl
and
pop
push
ret
and
test
add
and
xor
jo
jns
or
ret
aaa
add
shr
xor
loope
jne
cmc
mov
add
cwtl
enter
lahf
xor
imul
lds
push
mov
js
das
leave
jae
mov
insb
in
and
movsl
pop
mov
xor
outsl
rcrl
std
ljmp
aam
aaa
insb
xchg
in
dec
imull
xchg
ljmp
xchg
in
xabort
sbb
test
push
fdivrs
adc
inc
sbbl
test
mov
or
lds
mov
sbb
jecxz,pn
mov
mov
sbb
mov
test
ss
jb
and
dec
xor
push
es
sbb
push
mov
mov
mov
push
es
loopne
sub
mov
sbb
mov
lds
ljmp
fcoml
stc
mov
xchg
pop
push
push
fmuls
adc
call
xor
fmuls
push
stc
pop
jg
aam
js
xor
xchg
decl
adc
jecxz
stc
mov
int
dec
jns
mov
lock
and
movsb
mov
mov
lock
in
in
push
into
mov
pop
or
inc
in
sub
imul
adc
fsts
arpl
cwtl
cmp
cmp
out
movsb
dec
sbb
fs
mov
xchg
push
jge
lods
pop
iret
jp
das
stc
adc
cmp
shrb
push
lods
adc
gs
sbb
inc
lds
scas
cmpsb
test
imul
out
mov
icebp
xor
outsl
sub
jns
ffree
ja
mov
jne
sub
lds
repz
sub
outsl
sbb
and
add
aad
in
int3
aaa
adc
pop
sbb
sbb
lcall
movsl
iret
xor
or
mov
in
add
mov
aaa
pushf
jb
mov
mov
cmp
or
mov
add
add
fildll
mov
and
mov
mov
cmp
dec
pop
loope
in
ss
xlat
jl
repz
dec
mov
sarb
add
incb
jno
sbb
hlt
or
in
adc
inc
cwtl
mov
push
sub
inc
sbb
ss
adc
mov
das
cmp
std
in
sub
xor
aad
inc
lods
stc
pop
xor
icebp
xchg
dec
jge
addr16
lods
sbb
test
out
add
mov
mov
push
xor
push
dec
rorl
ret
or
popf
mov
push
fdivl
call
jo
rorb
dec
nop
or
mov
movsb
xchg
adc
cmp
pop
int3
fs
adc
mov
lret
xchg
sub
inc
push
push
and
and
push
jge
popf
dec
inc
adc
jae
push
mov
aam
into
xchg
pop
or
icebp
sbb
das
and
sbb
mov
test
or
dec
xchg
add
pop
das
xchg
cmp
xchg
inc
or
mov
stc
cltd
mov
stc
pop
adc
cmp
inc
sbb
adc
or
in
push
das
mov
ljmp
xchg
sbb
cmp
sub
xchg
mov
push
adc
sbb
and
lret
jnp
rcll
cmp
addr16
sbb
movsl
xor
push
jl
inc
rorl
sbb
js
sub
push
adc
mov
nop
in
leave
adc
xor
or
mov
movsb
dec
jbe
xor
cs
add
push
test
shll
add
neg
sahf
mov
daa
loopne
lea
in
or
rcrb
mov
push
aas
adc
adc
mov
inc
sub
imul
addl
cmpb
jnp
call
pop
lea
in
out
jne
inc
aam
mov
out
bound
imul
lea
xor
cli
lock
cltd
loope
js
mov
pop
xor
mov
xor
and
bound
call
cmc
cmp
xor
jno
scas
mov
add
adcl
sub
sti
mov
andb
das
lcallw
loope
and
adc
movl
daa
insl
sub
xorl
adc
ja
daa
andl
jge
and
xchg
and
stc
and
cmpsl
mov
enter
pop
mov
cmp
andb
and
shll
dec
add
cltd
test
lds
jns
jg
fstpl
and
aaa
sbb
sbb
stos
mov
test
lock
fiadds
lods
mov
je
mov
pop
mov
cmp
jbe
jle
jl
addr16
mov
push
add
dec
inc
mov
jns
enter
cwtl
mov
rclb
daa
ss
lahf
inc
ret
cmp
mov
test
test
ss
dec
stos
aaa
fcompp
cmc
inc
roll
cli
xor
int3
bound
sarl
xchg
loopne
loop
inc
shlb
sub
inc
mov
mov
mov
inc
lahf
enter
push
test
or
fsts
in
out
ret
xchg
dec
or
pop
xchg
cmc
inc
cmp
cmp
xchg
fdiv
push
mov
std
rcrl
daa
dec
cmc
movsl
inc
stc
xchg
lcall
xchg
nop
push
push
cmp
stc
pop
sbb
or
in
inc
mov
ret
subb
aad
or
enter
inc
sbb
mov
fmuls
lret
add
rcll
sbb
sti
aam
jmp
outsl
and
les
xor
pop
cmp
ja
cld
faddl
sub
and
cmp
or
inc
lock
insb
inc
ja
dec
test
push
out
adc
in
shrl
cmp
stc
xor
xchg
mov
xchg
sub
into
movsl
dec
jne
add
inc
mov
inc
push
xchg
mov
into
push
inc
shll
es
mov
mov
xor
clc
adc
cmp
cmp
adc
pop
add
and
frndint
cmp
mov
xlat
clc
mov
or
cmpsb
mov
inc
or
jge
lcall
lods
aas
fwait
sub
lcall
scas
stos
jp
and
or
lods
mov
mov
and
xchg
cmp
xor
adc
sarl
mov
cmp
cmc
sub
ja
adc
adc
cmp
idiv
stc
push
mov
mov
clc
lcall
shll
mov
mov
sbbl
xor
push
xchg
aaa
xor
add
mov
adc
ja
inc
dec
int3
cmp
rcrl
aas
out
mov
pop
inc
or
js
daa
movsb
int
jge
cmp
sbb
dec
or
and
mov
mov
daa
frstor
mov
add
sahf
mov
and
jo
add
mov
mov
shl
cmpsl
push
pop
mov
or
mov
and
jns
inc
in
ja
aaa
sbb
daa
push
es
and
sbb
cmp
in
imul
repnz
gs
cltd
push
mov
inc
xorps
xchg
addr16
std
adc
sbb
xor
aas
gs
test
imul
cld
imul
aaa
and
cld
push
hlt
sbb
cmp
int3
stos
test
int3
jbe
shll
mov
mov
pop
and
dec
pop
sbb
push
testl
jecxz
xor
and
lret
lock
shll
cld
xorl
fnstsw
cmp
aas
cmpb
adc
xchg
std
popw
inc
cwtl
push
cld
add
fisubrs
mov
inc
cli
lea
lds
pop
xor
mov
and
jo
sahf
mov
cmpsl
mov
popf
std
mov
adc
pop
mov
mov
xor
mov
cmp
inc
mov
mov
test
in
cmc
jg
pop
jns
adc
hlt
dec
xor
in
mov
dec
mov
jmp
xchg
arpl
aas
pop
es
pop
or
push
popf
mulb
xchg
sti
std
insl
icebp
ja
and
adc
sti
bound
jle
jl
in
mov
add
shrb
daa
cmpb
inc
pop
or
lahf
in
dec
add
jns
or
mov
repz
mov
xchg
mov
lods
mov
fsubrl
mov
es
sbb
repz
and
mov
lahf
xor
lock
jle
inc
incl
lods
sub
cmc
nop
lods
mov
pop
xor
cmp
cld
les
mov
mov
jo
mov
shl
ds
lret
outsb
aaa
inc
mov
mov
dec
mov
adc
dec
mov
dec
sti
add
pop
jl
mov
shll
push
mov
xchg
test
testb
jmp
jmp
mov
jg
inc
cmp
dec
push
inc
pop
mov
xorl
sahf
jle
cmc
mov
ss
test
out
cmp
push
mov
vpunpckhqdq
call
push
js
mov
adc
and
push
push
jno
cmpsb
xor
adc
push
sbb
sbb
sub
xor
adc
daa
out
int
push
test
in
daa
or
leave
lahf
cmp
std
rcl
andb
je
cmp
pop
andl
cmpsl
hlt
into
sbb
cmp
lock
loopne
mov
mov
xor
push
push
addr16
clc
test
xchg
out
xor
inc
and
ja
adc
in
xor
and
repz
daa
arpl
or
pop
xor
out
in
ds
or
xor
xor
addr16
push
or
sbb
add
push
sub
inc
dec
inc
push
cmc
add
lods
xchg
addl
cmc
dec
mov
adc
mov
fiaddl
cwtl
push
jo
cmp
or
dec
ds
fld
xchg
cmc
dec
sbb
mov
lods
add
push
clc
js
adc
cmp
inc
cmp
sbb
mov
push
clc
xchg
xchg
xor
sub
jg
lods
mov
aas
push
inc
stos
in
rcrl
xor
pop
xor
insl
lret
std
fldenv
add
jmp
movsb
insb
in
rol
pop
pop
aas
mov
ljmp
and
mov
dec
in
andl
mov
xorb
cmp
xor
mov
scas
cmp
jbe
pop
cld
push
pop
pop
sbb
push
aas
and
fsubs
insl
sub
add
data16
adc
mov
aas
xadd
adc
cmp
gs
add
add
mov
cmp
adc
hlt
jae
stc
ja
flds
cwtl
push
ret
pop
mov
cmp
cwtl
lods
lods
inc
push
pop
push
dec
rorl
imul
vsubpd
pop
sbb
cmp
adc
jmp
stc
lock
cmp
xchg
jmp
cmp
cltd
sahf
xor
lea
push
faddp
and
mov
jmp
cmpsl
insl
pop
inc
daa
shll
lret
sbb
cmpsl
test
test
ljmp
sarb
xchg
add
cmp
push
je
sahf
xchg
xchg
adc
pop
push
cmp
movsb
rol
mov
es
xlat
in
sbb
cs
push
xor
dec
jl
push
pop
mov
xor
sbb
loope
test
shll
sub
data16
leave
mov
hlt
scas
push
add
xchg
sub
mov
arpl
incb
cmp
fldt
in
and
lret
or
or
lods
fsub
jle
mov
and
sub
add
scas
outsb
icebp
sub
ja
mov
je
inc
aad
test
inc
cld
cltd
jmp
test
mov
cmp
imul
icebp
hlt
lahf
shl
repz
repz
popl
cli
shl
and
nop
cs
out
cld
loope
je
cmp
and
pop
add
lods
xor
popa
ljmp
gs
inc
jne
cmp
mov
xchg
ds
or
sahf
push
fst
fsubrl
in
or
je
into
ret
inc
jne
mov
int3
icebp
add
lds
gs
cld
pop
bound
ja
pop
aas
popa
divb
xor
dec
daa
dec
gs
faddl
adc
or
cmp
mov
sbb
test
aad
es
mov
rcrb
sbb
xor
xchg
mov
enter
aaa
push
fld
aas
push
inc
ret
ss
lret
sub
shll
cwtl
icebp
sbb
xchg
cmp
mov
xor
cmp
fldenv
in
cmpsl
test
mov
sub
and
push
cmp
inc
fmull
mov
add
movsb
inc
push
xchg
mov
ret
sub
test
loope
or
mov
std
jl
push
add
sub
mov
popf
add
lods
push
push
push
mov
fidivrl
nop
pusha
and
ljmp
ret
in
dec
mov
and
testb
add
adc
cltd
int3
lds
xor
pop
or
xchg
jmp
into
mov
lods
ret
incl
cwtl
xor
sbb
inc
std
adc
mov
sti
mov
lods
enter
aas
adc
in
xchg
sbbb
ds
sub
cmpsl
inc
push
sbb
movsb
sub
or
aas
lret
rcrl
aas
cmp
mov
or
imul
fs
mov
cwtl
movsl
mov
and
test
loopne
jmp
stos
icebp
sub
test
mov
mov
mov
int
pop
dec
adc
ds
cltd
hlt
rcrb
arpl
adc
push
lds
pop
and
add
or
ret
xchg
sub
outsl
pop
out
add
push
stos
add
mov
add
mov
lods
imul
imul
mov
dec
cmp
out
xor
cmp
add
cmpsl
push
sbb
mov
cmp
cmc
xchg
pop
into
xchg
clc
rclb
pop
pop
hlt
test
shl
cwtl
adc
lods
pop
sbb
mov
mov
or
xor
or
pop
fwait
repz
jnp
ds
pusha
adc
add
clc
add
xlat
and
cmp
xor
loope,pn
jge
stos
sarl
mov
out
cmc
sahf
mull
sarl
push
and
imul
and
lds
mov
movsl
std
mov
and
mov
mov
add
movsb
xchg
test
and
lret
cmp
inc
mov
in
sub
sub
loopne
cmc
jo,pt
xor
mov
adc
mov
adc
add
mov
cmp
addr16
fsubs
in
movsl
das
sahf
das
mov
insl
inc
dec
sub
jne
adc
add
dec
je
sbb
ss
pop
call
outsl
mov
inc
cmp
nop
dec
fdivr
sbb
lret
pop
es
std
and
cmc
in
lea
push
xchg
sbb
pop
mov
jmp
pop
cwtl
lods
stc
cmp
cmp
mov
cmp
lret
jno
and
dec
cmp
daa
std
xor
inc
movsl
cli
sbb
fwait
mov
mov
pop
mov
sub
inc
adc
dec
adc
xor
pop
xor
sbb
push
aad
jp
adc
inc
add
rcll
or
sbb
mov
mov
out
insb
inc
ret
loopne
cmp
stc
dec
daa
adc
or
sahf
adc
cmp
std
jmp
push
sbb
cwtl
movsb
cmp
loope
jne
and
adc
pop
cmp
push
addb
or
xchg
mov
or
inc
or
mov
mov
outsb
movsl
jb
cmpsl
pusha
cwtl
and
pop
push
enter
or
mov
out
cwtl
popa
dec
sbb
xchg
pop
or
cwtl
std
mov
cmp
ds
lods
out
and
movsl
inc
in
and
cmp
cmpsl
mov
ret
stc
movsl
jl
jb
push
mov
adc
jge
add
push
mov
sub
or
popf
pop
xor
je
outsl
pop
repz
xchg
fisttpll
sbb
js
scas
sbb
sbb
in
repz
out
and
cmp
push
dec
shlb
out
lock
mov
and
push
vmovaps
sub
add
jno
lock
wbinvd
data16
sahf
pop
lret
and
call
cwtl
pop
push
popf
rcl
and
pop
xor
mov
loopne
insl
rclb
add
icebp
fs
push
inc
sbb
mov
add
and
rcll
das
mov
mov
in
mov
out
add
and
loopne
dec
mov
pop
sahf
sub
in
inc
int3
popa
cmp
add
test
in
pop
add
add
stos
add
pop
sbb
and
add
and
mov
inc
repnz
test
stc
mov
jbe
loope
add
pop
inc
lahf
sbb
mov
aaa
inc
ret
add
add
and
cld
daa
xor
jl
mov
mov
add
cwtl
jmp
mov
movsl
fs
sbb
adc
jecxz
inc
sbb
mov
jge
cmp
out
and
xor
es
mov
mov
jl
lcall
rcll
mov
push
and
in
sti
das
inc
adc
fistl
pop
add
cmpsl
pop
in
cmp
jo
add
mov
pop
mov
in
ds
daa
mov
xor
cmp
aaa
repz
repz
xchg
mov
push
lahf
push
lahf
xlat
inc
inc
mov
xor
mov
arpl
data16
sbb
shrb
xchg
sub
xchg
jl
push
js
mov
movsb
add
fisttps
adc
or
in
repz
dec
cld
pop
cs
or
mov
xor
mov
mov
out
js
dec
aad
push
mov
sub
xor
sub
mov
jbe
inc
aad
stos
or
jle
ret
hlt
scas
dec
inc
in
sahf
xor
push
mov
pop
adc
stc
and
int
icebp
out
repz
fs
mov
mov
adcb
insb
pop
das
in
int
movsl
jmp
and
cmp
jl
int3
pusha
pop
adc
sub
or
inc
lods
and
mov
pop
mov
repz
add
cmp
jg
enter
mov
lahf
ds
cwtl
lret
inc
mov
add
push
dec
or
sub
movsl
lret
jmp
mov
das
es
or
mov
xchg
sub
movsl
push
pop
pop
in
daa
clc
call
cli
mov
daa
std
orb
adc
cwtl
adcb
xor
pop
fwait
lret
imul
mov
out
add
sti
and
xchg
sbb
ret
add
into
popf
dec
add
add
in
add
adc
sti
shll
mov
sbbb
push
xor
js
insl
gs
mov
sbb
jo
xor
sub
jns
lds
dec
xor
pop
je
aad
xor
xor
sbb
movsl
xchg
out
pop
and
lock
jecxz
test
outsl
jnp
inc
cli
adc
xchg
insb
pop
shl
ljmp
and
movsb
test
and
call
sub
cli
test
jge
push
gs
jno
mov
push
mov
xchg
cs
in
ret
adc
push
nop
lcall
loopne
mov
adc
int
cld
fwait
in
scas
adc
mov
xor
test
pusha
cli
xor
push
add
push
icebp
mov
insl
ss
mov
mov
loope
stos
call
add
and
insb
sub
aas
or
mov
and
cs
jp
push
mov
and
and
lods
pushf
ret
test
addr16
adc
add
push
or
test
push
dec
clc
clc
pop
add
in
mov
xor
and
jl
addb
inc
mov
and
pop
sub
mov
push
pop
cmp
sbb
xor
push
cmp
push
inc
cmpsb
jne
bound
mov
mov
stc
xchg
stc
push
int
sbb
and
popa
lret
rcll
push
xchg
in
or
mov
and
adc
popf
mov
and
cld
jp
sub
in
mov
and
and
push
ljmp
cmp
addr16
shll
sub
in
push
mov
jg
daa
fs
pop
push
ja
jmp
sub
or
or
out
add
push
lock
clc
push
std
in
mov
popa
jge
ja
xor
andb
scas
and
jbe
inc
mov
mov
arpl
inc
inc
std
popa
lds
xchg
lahf
fucom
cmp
xor
inc
cmc
xor
mov
add
sub
add
inc
mov
push
outsb
lret
sbb
data16
jle
pushf
adc
cs
clc
cwtl
popf
mov
inc
test
movsb
mov
xchg
int
faddl
cld
push
ss
je
push
lret
std
jge
jmp
add
pop
sub
fucom
xchg
rol
or
cmpsb
ja
nop
push
test
inc
and
push
mov
aaa
and
xchg
mov
iret
xor
outsl
movsb
lods
aas
pop
mov
sub
dec
mov
xchg
push
add
sbb
inc
xor
inc
leave
or
xchg
cmp
stos
sub
xor
mov
lock
pop
and
cltd
frstor
add
insb
add
xor
xor
mull
jns
mulb
mov
xor
repz
sbb
and
mov
inc
adc
and
mov
jne
add
es
push
repz
cmp
cmp
gs
jbe
lds
or
jecxz
ret
frstor
inc
sbb
dec
je
shlw
sbb
adc
fadd
or
mov
push
cmc
cwtl
movsb
test
sbb
add
ds
faddp
push
pop
mov
jbe
xor
mov
adc
enter
mov
xchg
pop
mov
cmc
aaa
lret
test
iret
lock
arpl
testl
movsl
not
jb
inc
dec
sbb
cmp
dec
movsl
inc
lcall
outsl
dec
and
pushf
xlat
cmpsb
push
dec
pusha
out
pop
jmp
add
push
push
or
xchg
std
popa
lds
outsl
adc
ret
push
out
lds
jne
xchg
sbb
or
xchg
and
xor
push
jns
in
inc
ss
popa
xlat
in
test
ds
mov
test
cmc
call
or
cmp
mov
mov
push
push
mov
ljmp
ja
add
dec
ss
js
add
jnp
dec
sbb
pop
sub
pop
das
push
gs
push
sti
rcll
mov
std
pushw
aam
xchg
cmp
jbe
xor
js
popf
cmp
mov
cwtl
dec
and
jne
movnti
jecxz
cmc
jne
je
and
push
mov
jmp
repz
jb
imul
dec
addr16
daa
and
nop
fisttps
inc
iret
cmc
fcompl
jae
pop
daa
add
dec
cmc
cmp
and
jl
add
cltd
inc
sahf
inc
sub
cld
jne
lods
and
cltd
fbstp
and
pop
pop
mov
xor
pop
or
xchg
jmp
fcmovb
stc
unpckhps
inc
push
pusha
sbb
or
or
hlt
dec
mull
in
ja
and
or
adc
mov
fists
pop
cmp
sbb
mov
jge
dec
out
mov
je
loope
scas
xor
rcrl
pop
cmp
pop
push
stos
and
aaa
mov
sub
xor
add
xor
arpl
adc
inc
sbb
ja
insl
push
pop
out
fwait
pop
jo
popf
lret
sub
mov
jnp
ret
and
push
cmc
das
mov
outsb
jne
add
pop
iret
adc
int
jp
lods
pop
xchg
dec
adc
inc
out
cmp
xor
and
cs
and
push
adc
jo
das
cwtl
add
fldt
mov
sbb
das
jns
loope
mov
bound
push
add
inc
leave
call
in
sbb
add
or
stos
sti
shrl
dec
push
jl
and
push
in
push
std
out
and
cmpsb
mov
and
mov
sbb
lcall
fs
js
jbe
mov
mov
cmc
push
pop
mov
pop
push
dec
sub
push
and
cltd
mov
pop
cmp
sbb
loop
bound
sbb
scas
fdivs
cmp
add
mov
lods
sbb
sbb
adc
inc
mov
fprem1
cs
add
sarl
mov
pop
sbb
popa
call
xchg
in
pusha
clc
outsl
sbb
cmp
repnz
mov
adc
int
xlat
mov
hlt
enter
mov
sub
or
stos
jne
and
mov
xor
cmpsl
mov
test
cmp
sbb
mov
call
leave
movsl
pop
pop
jae
out
and
mov
xchg
faddl
and
dec
or
xchg
inc
push
rol
adc
mov
in
or
lahf
mov
mov
ss
inc
or
jb
out
jmp
or
adc
jl
insl
xchg
jae
add
daa
sbb
sbb
jmp
dec
cmp
movsl
add
lds
mov
adc
arpl
mov
adc
and
pop
jae
fimull
fldcw
imul
and
sub
dec
adc
ds
pop
test
and
sub
cmp
dec
xchg
pop
sahf
dec
xor
scas
add
sub
inc
arpl
roll
xlat
cmp
aad
adc
aas
stc
gs
inc
loopne
xor
aaa
sbb
stc
cltd
add
test
mov
rorb
pushf
loope
fdiv
lret
dec
mov
inc
shll
mov
mov
mov
shll
add
gs
movsb
adc
lods
jp
mov
ljmp
stc
call
push
add
mov
scas
jo
shl
fsts
jne
mov
pop
push
mov
test
ret
mov
fistl
ss
arpl
dec
mov
mov
add
jo
jg
mov
cmp
xor
inc
adc
add
sbb
dec
cmpb
loopne
adc
push
ficoms
call
cltd
movsl
dec
sbb
mov
lea
jmp
lods
and
mov
testb
or
movsl
sbb
pop
cmp
or
push
add
jbe
addr16
or
push
fsubs
in
call
movsl
int
hlt
push
int
inc
std
xchg
jl
jmp
loope
xorl
subb
addb
movsl
jno
cmp
outsl
mov
lea
xor
sub
stos
call
xchg
and
sub
sbb
push
lea
int3
dec
movb
and
stc
cmc
add
pop
ds
js
push
daa
sbb
sti
push
cltd
imull
es
mov
sub
enter
cmp
sbb
push
mov
mov
mov
stos
mov
ret
clc
pop
mov
pop
mulb
xchg
mov
cwtl
sbb
fcmovbe
push
cmc
out
mov
jne
mov
stos
fadds
inc
pop
fwait
cmp
ja
jno
les
mov
pop
mov
jp
cwtl
xor
fwait
jne
dec
push
pop
sbb
inc
jae
cmp
and
sbb
loop
dec
mov
mov
call
stc
jne
mov
sbb
insl
pop
and
or
jb
ja
shlb
or
pop
pop
jge
add
push
mov
cmc
cmc
mov
stos
frstor
cmpsl
mov
sub
adc
xor
lods
sub
add
es
mov
or
movsb
out
sbb
push
shll
jnp
mov
lret
xor
dec
adc
dec
stc
mov
outsb
xchg
je
sbbb
sbb
and
fsub
inc
and
inc
mov
shlb
ficompl
mov
imul
icebp
cld
dec
jne
cs
cmp
je
loope
inc
test
cltd
outsb
xor
pusha
icebp
adc
popa
sahf
addb
cmp
test
sbb
sarl
jmp
adc
cltd
xor
clc
ss
pop
adc
pop
mulb
inc
ja
xchg
clc
in
jae
xor
mov
inc
cld
inc
mov
fstps
imul
popf
iret
cld
xor
lods
icebp
inc
jae
jp
cwtl
dec
sub
cld
loope
or
in
add
jmp
pop
aad
movsl
lock
addr16
sub
nop
cltd
mov
lds
andb
or
popa
jne
mov
std
push
jle
mov
fstl
xchg
mull
inc
ljmp
fisttpl
scas
repnz
dec
fidivrs
fwait
dec
aam
mov
cmp
push
addr16
test
pop
arpl
push
fildll
dec
xor
js
pop
jbe
pop
xlat
lret
cld
lods
and
mov
cmp
in
adc
les
loope
lds
pop
lods
inc
dec
fistpll
jae
out
cld
push
cli
mov
sub
xchg
dec
xchg
sbb
jae
sub
jnp
push
dec
xchg
xchg
or
jecxz
gs
pop
out
mov
jl
mov
xchg
out
push
loopne
lds
cwtl
iret
jae
jmp
js
inc
mov
xchg
xchg
inc
sbb
sub
and
mov
shll
add
cmpsl
sub
adc
sti
cwtl
cmpsb
or
pop
dec
or
pop
fdivl
cmp
hlt
sub
je
movsb
dec
daa
hlt
nop
mov
cli
sub
add
mov
jbe
loopne
in
insl
lods
xor
adc
sbb
sbb
mov
mov
mov
mov
mov
dec
push
pop
into
movsb
leave
sbb
mov
shrb
add
xor
dec
jo
mov
repz
mov
lahf
sbb
jge
out
call
mov
and
addr16
int3
in
ffree
add
push
call
mov
je
sti
mov
mov
imul
sub
pop
andb
adc
movsb
mov
or
fnstsw
lds
xchg
adc
or
cmp
or
xchg
imul
test
cmc
das
mov
adc
fdiv
sub
js
gs
sahf
aad
push
jg
ja
and
in
cltd
lret
xor
fdivs
mov
fs
lods
dec
inc
stc
pop
mov
pop
pop
ljmp
fisubrs
ds
cmp
sbb
fldt
aaa
xor
push
and
insl
inc
lret
push
push
cmp
sub
or
and
push
cwtl
cmpsb
dec
adc
cmp
sbb
xchg
mov
sbb
add
repz
inc
insl
xor
inc
ret
push
mov
add
and
adcl
in
pop
out
inc
mov
mov
clc
and
mov
out
out
test
jg
sub
imul
mov
push
daa
add
movsb
aas
mov
mov
std
adc
xor
inc
jae
pop
roll
lds
daa
daa
lahf
cmp
les
sub
mov
stos
fwait
shl
dec
lcall
add
adc
inc
je
cltd
cltd
xchg
fdivs
jmp
stc
cmp
ret
add
mov
bound
dec
and
sbb
sbb
jb
int
pop
int3
test
ds
fstl
mov
daa
adc
ret
cmpsl
jns
repz
insb
ljmp
sbb
jecxz
out
cwtl
pop
lret
test
in
scas
out
add
cmp
adc
int
cmp
aad
jnp
gs
xchg
in
fdivrl
loope
in
cmpsb
add
in
sti
cmpsb
into
test
imul
lahf
mov
test
and
arpl
and
and
adc
adc
insl
mov
or
sti
outsb
dec
mov
mov
push
or
cmpsl
int3
mov
or
cmpsl
aam
adc
inc
clc
mov
lret
pop
loopne
jo
leave
mov
test
movsb
mov
mov
test
popf
iret
dec
sbb
syscall
jae
push
loope
push
rolb
scas
or
sbb
cmp
inc
dec
lret
cmp
push
jg
ret
aam
aam
sub
pusha
test
movsl
sbb
sub
aaa
idivl
xor
push
inc
push
lahf
and
std
mov
out
adc
mov
addb
movd
in
jl
nop
addb
loopne
add
push
xchg
xchg
out
inc
and
inc
xor
mov
or
pop
repnz
or
xor
pop
or
stos
int
dec
mov
mov
call
mov
jae
push
xchg
jg
shl
sub
fisttpll
cmp
sub
mov
sub
cmc
sbb
pop
cmp
push
in
cmp
movsl
scas
or
roll
add
lahf
mulb
xlat
mov
cmpsl
and
xor
aaa
aaa
mov
push
flds
inc
scas
bound
push
mov
mov
xchg
out
xchg
bound
fisttpll
sbb
dec
in
xor
and
xor
pushf
adc
push
and
xchg
mov
ret
and
jl
and
inc
add
cs
xor
push
aad
cmp
cmpsl
movsl
clc
mov
cmp
ret
add
ret
jle
mov
movsl
mov
test
mov
push
iret
jno
pop
shll
sub
mov
or
jns
jmp
leave
in
sbb
jbe
jmp
cmc
sti
test
jb
sar
inc
dec
repz
lret
rol
jae
dec
jb
dec
dec
int3
adc
loop
cmp
hlt
in
pop
or
mov
sbb
into
inc
enter
xchg
ljmp
imul
sbb
ja
pop
mov
push
sbb
jle
and
cli
in
xlat
orb
push
repz
sbb
repz
pop
mov
adc
mov
adc
jg
es
xor
xor
sbb
nop
jae
rcr
pop
les
sub
shlb
inc
pop
adc
popf
scas
add
mov
sbb
dec
jge
jmp
sub
dec
cmp
inc
addl
pop
movsb
adc
inc
cs
sub
dec
rdtsc
pop
jae
jbe
lock
cwtl
push
les
or
in
add
in
sbb
dec
sub
xchg
scas
dec
pop
jnp
mov
loop
pop
popf
adc
into
mov
clc
rolb
fnstcw
aam
fildl
dec
mov
jbe
lock
cltd
mov
sbb
daa
movsl
rcr
mov
push
outsb
jns
sbb
out
jne
add
mov
dec
nop
aaa
iret
adc
test
or
insb
aam
xchg
movsl
mov
jmp
adc
insb
or
fimuls
filds
jns
pop
xor
repnz
mov
es
push
fcompl
gs
cmp
in
aad
and
lods
shlb
push
sub
cmpsl
or
iret
std
lcall
xor
out
lds
or
outsl
push
push
lcall
mov
mov
jo
cmc
sahf
push
pop
sub
inc
ret
js
or
mov
sub
mov
scas
jmp
stos
dec
mov
cmpsl
jecxz
shlb
mov
loope,pn
dec
pop
adc
mov
movb
push
out
xor
sahf
pop
mov
mov
push
scas
adc
xlat
xchg
adc
nop
arpl
add
cli
xchg
lock
es
adc
in
cmp
cs
fwait
push
or
inc
jnp
ja
mov
jns
mov
outsl
adc
jmp
adc
xor
add
jle
xchg
mov
sbb
mov
pusha
dec
movsl
pusha
mov
test
movsl
jb
fistpl
aas
jecxz
and
dec
dec
mov
add
jl
mov
add
jp
ret
add
ss
cmp
xor
inc
mov
int
pop
ds
stc
jge
cli
loopne
test
inc
push
xchg
and
adc
mov
inc
sbb
daa
or
adc
ja
or
lock
inc
inc
mov
cld
and
add
movsb
cmp
cmp
cmp
imul
gs
and
movsb
jo
sbbb
enter
scas
push
int
in
add
or
add
xchg
and
call
cmpsl
xchg
movsl
inc
sbb
jge
ja
pop
stos
data16
xchg
stos
add
dec
ds
out
enter
mov
js
dec
daa
sahf
or
cmp
xchg
imul
dec
repnz
jl
mov
add
adc
mov
and
cmp
mov
or
lahf
mov
je
stc
gs
sbb
and
std
jle
daa
push
in
out
clc
sub
loopne
and
mov
fadds
cltd
sbb
in
push
scas
jmp
movsl
jnp
outsl
jo
adc
data16
loopne
mov
cmp
or
loope
in
sbb
inc
lahf
jmp
jae
mov
cmp
cmp
and
mov
in
insl
subl
dec
mov
pop
nop
pushf
std
jmp
jecxz
mov
lahf
mov
pop
ret
mov
dec
mov
add
mov
iret
jbe
lods
sub
test
dec
dec
and
cmc
adc
fsubs
jns
jge
mov
xchg
jmp
pop
or
jnp
dec
cmp
lret
jl
jns
test
jmp
daa
icebp
cmpsl
iret
rcr
movsb
cwtl
push
test
xlat
lahf
sbb
shll
fstl
mov
cmp
or
dec
cmp
inc
sbb
sbb
sub
sbb
bound
lea
loope
mov
dec
jnp
jmp
test
clc
adc
divl
out
adc
push
cmp
cmp
jl
es
mov
mov
jb
mov
movsb
or
xchg
sbb
sti
in
js
or
pop
mov
cmp
enter
cmp
add
lahf
mov
stos
fistl
pop
cmp
sbb
push
cli
jecxz,pt
cmp
inc
xchg
lret
out
fidivrl
ret
js
sbb
xchg
pop
out
test
mov
adc
rorb
xor
push
sti
xor
ret
add
lret
repnz
mov
jnp
xor
push
rcrl
jnp
into
sbb
or
mov
cs
insl
push
adc
gs
les
inc
imul
and
cs
mov
hlt
adc
call
clc
movsl
push
cltd
popa
dec
mov
loope
push
jp
movsl
cltd
addl
insb
xor
sbb
popf
ljmp
inc
xor
insb
into
ret
ljmp
and
xchg
sbb
dec
lock
gs
jmp
add
jae
fs
aam
jmp
mov
lock
cmpsb
sarb
push
jecxz
call
jno
std
jecxz
xor
pop
mov
les
add
cmpsl
inc
out
pop
popf
inc
sbb
or
lock
cmp
cmpsl
pop
xor
mov
mov
and
xchg
or
push
jb
iret
sub
in
stc
cmpsl
roll
add
nop
push
rolb
addr16
cmpsl
insb
jb
testl
cmpsl
sbb
pop
cmpsl
mov
insl
cltd
push
movsl
xchg
pop
jecxz
ss
mov
mov
mov
xlat
notl
adc
mov
pushf
xchg
stc
mov
xchg
inc
mov
jne
popa
hlt
mov
pop
jns
or
icebp
fnstenv
aam
cltd
fidivs
lea
and
sbb
shl
mov
scas
fsubr
enter
mov
scas
cld
xchg
pop
or
jp
and
cwtl
or
imul
jge
mov
std
movsl
cs
sahf
mov
sub
push
movsl
adc
hlt
xchg
inc
stc
push
mov
cltd
push
addr16
data16
outsl
jae
cmp
pop
mov
in
arpl
aaa
lock
pop
rorb
cmpsb
adc
insb
inc
stos
ja
out
movsb
jl
outsb
and
pop
xchg
ljmp
imul
mov
es
lds
push
sub
mov
fisttpll
mov
std
bnd
frstor
dec
jle
test
mov
loope
push
fwait
dec
xor
xchg
jmp
and
xor
mov
xor
jmp
fldenv
call
mov
adc
ljmp
fldenv
call
xor
jmp
cli
sbb
in
mov
clc
add
pushf
das
inc
xor
lahf
test
mov
dec
jmp
sbb
mov
and
xor
mov
pop
gs
sub
pop
pop
fmull
jge
mov
pop
mov
push
ret
xor
xor
and
xor
xchg
and
ljmp
sub
fnstenv
or
inc
test
cli
out
adc
inc
sub
jae
into
int
iret
mov
jmp
push
dec
outsl
pop
mov
movsb
imul
jnp
or
int
or
jg
sub
mov
inc
repz
aad
add
and
xchg
dec
inc
cmp
sbb
addb
test
inc
xchg
inc
sub
or
add
test
add
jge
dec
sub
inc
dec
cmp
mov
stos
fs
sub
leave
mov
adc
decl
mov
aaa
push
sbb
add
inc
stos
scas
rcl
imull
inc
mov
inc
or
add
inc
mov
stc
mov
add
inc
adcb
addl
xchg
ret
mov
add
xor
and
lods
gs
les
outsb
add
popf
outsb
add
popa
mov
test
lcall
movsb
sbb
ja
popf
pushf
stc
adc
sti
inc
mov
xchg
test
xchg
add
mov
mov
add
inc
ljmp
or
pop
aas
or
sbb
leave
fs
cld
inc
in
adc
lret
xor
xchg
icebp
cmp
cmp
movsb
cmpsl
dec
mov
adc
mov
int3
test
push
ret
pop
and
cmpsl
in
mov
and
lds
js
xchg
and
jg
dec
or
enter
or
cmp
sbb
pusha
out
sbb
xchg
and
addb
test
test
xchg
addb
xor
sbb
mov
js
inc
roll
arpl
testl
mov
aam
add
push
adc
mov
and
add
mov
and
movsb
loope
xor
lds
mov
and
and
add
add
aas
inc
es
and
cmp
ret
jecxz
pushf
and
and
push
add
js
and
pop
loope
cld
les
and
les
aam
push
sarb
in
cmp
xorl
loope
icebp
sbb
out
adc
dec
and
daa
scas
out
lds
cmp
and
imul
arpl
xor
bound
rclb
adcb
daa
inc
lds
adc
cmp
ja
mov
adc
xchg
or
scas
mov
ja
mov
orb
pop
jp
lds
movsb
lds
push
and
adc
pop
or
mov
addr16
and
xor
sbb
jo
add
sbb
je
mov
add
add
test
inc
add
jge
cmc
stc
xor
inc
add
jmp
jl
ds
inc
sbb
add
dec
aaa
cmp
dec
xorb
aas
iretw
cmp
ret
inc
mov
in
or
nop
jl
push
inc
aas
mov
mov
in
jo
ds
insb
cmp
aam
subb
pop
addb
and
mov
daa
icebp
inc
aas
jae
jbe
daa
ja
shl
test
lock
aaa
stos
and
nop
or
pop
out
lret
pop
mov
dec
or
daa
cmc
decl
push
movsb
sub
and
and
mov
jb
dec
add
jae
sbb
xchg
repz
sub
cmp
mov
add
add
or
add
xlat
cmp
xchg
cmpsb
cmp
ret
lock
xchg
cmp
popa
jp
ret
or
addl
add
xor
ret
or
inc
andb
and
and
js
es
out
ljmp
fldl
lret
test
movsl
push
cmp
ret
insb
es
add
aad
pop
mov
inc
jl
mov
xor
mov
cmp
test
push
movl
jg
xchg
mov
mov
lods
push
mov
sub
jecxz
pop
movsl
icebp
pop
inc
mov
pop
add
daa
or
push
xchg
test
cmp
lds
xchg
shll
jno
lds
in
add
jl
movsl
dec
inc
in
and
hlt
mov
mov
xchg
inc
push
inc
lds
mov
add
les
inc
pop
imul
inc
in
dec
call
xor
add
shll
xor
sub
cld
lahf
movsl
adc
mov
jnp
clc
add
xor
mov
mov
xorl
sbb
flds
fstps
jle
cmpb
pop
fldl
je
sub
xchg
add
jge
dec
jmp
or
xchg
jo
outsb
rolb
pop
xor
lds
rol
data16
inc
jne
flds
dec
pop
mov
sbb
sub
xchg
sbb
inc
add
inc
xchg
or
sbb
fwait
cmp
inc
add
pop
lret
in
cmc
test
cmpsl
push
sub
incl
xchg
jbe
fcoms
loopne
divb
and
cmp
es
add
sbb
out
cmp
call
jmp
inc
xchg
adc
add
xor
mov
lahf
js
loopne
mov
scas
pop
hlt
dec
xchg
or
mov
xor
jg
push
or
adc
add
and
push
mov
or
add
ret
in
inc
push
cmpsb
and
add
jbe
lods
mov
and
mov
mov
inc
daa
cmpsl
imul
sbb
jge
push
jno
andb
inc
std
push
add
mov
and
pusha
clc
and
adc
js
fmull
jg
or
sub
sbb
mov
arpl
pushf
xchg
out
lds
stos
ja
mov
jne
mov
and
adc
and
aaa
jle
mov
cmc
and
mov
js
test
push
or
sub
mov
adc
les
clc
mov
or
inc
xlat
or
cmpsl
inc
lods
std
add
insb
in
jl
std
nop
lds
out
mov
repnz
mov
cmpsl
test
cmp
mov
push
stos
cmpsl
idivl
out
lods
and
popa
ja
mov
loopne
shll
movsl
ja
adc
jg
in
mov
cmpsl
scas
add
push
ret
cld
movsb
divl
enter
addr16
mov
jle
aas
sar
mov
mov
pop
xchg
lret
shll
loope
nop
aas
pushl
mov
dec
push
xchg
add
inc
rolb
repz
adc
pcmpgtd
enter
and
xchg
lods
inc
xchg
or
out
pop
push
pusha
add
lock
out
int3
xchg
adc
inc
jnp
les
lds
stos
cmp
jo
lahf
mov
pusha
in
inc
mov
mov
adc
jno
xor
cmp
cli
add
adc
sbb
xor
sub
movsb
in
add
mov
scas
add
mov
adc
fwait
iret
fisubrs
dec
fs
pop
and
aaa
js
cli
cmp
add
mov
cmpsb
cmc
add
adc
dec
stc
rorl
jae
stc
lods
and
ja
xchg
inc
mov
in
movsl
mov
int3
mul
add
fcmovnbe
stc
jl
jns
in
lds
bound
add
pop
mov
shlb
inc
xchg
jnp
mov
and
popa
mov
xchg
add
mov
sbb
xchg
std
cmp
fstp
mov
nop
adc
xchg
sahf
adc
lret
xor
mov
cltd
push
jnp
hlt
imul
adc
test
stos
add
cmp
adcb
xor
das
test
mov
xor
lock
mov
cmp
movsb
std
xor
cmp
or
inc
cmc
das
sbb
xlat
xchg
cmc
mov
fs
test
arpl
orb
push
cmp
pop
ja
jmp
imul
adc
addr16
clc
push
sti
cmpsl
cmc
xor
leave
nop
xchg
xor
popf
mov
add
roll
sbb
in
and
xchg
push
and
pop
cmp
mov
pop
and
std
sbb
inc
mov
and
std
pop
mov
and
mov
mov
push
add
test
add
iret
movsb
cwtl
roll
inc
mov
push
popf
ret
dec
or
sub
je
jo
push
add
andb
and
dec
les
cmp
sbb
push
cmpsl
and
int3
jno
adc
add
movsl
lret
int
sbb
aaa
fidivrl
and
dec
sbb
pop
adc
test
inc
in
ret
sub
push
xor
arpl
xor
data16
call
push
stc
add
adc
jae
pop
xchg
fnstenv
test
add
call
movsl
sbb
jl
and
adc
inc
and
fwait
imul
rclb
aas
ljmp
call
pop
call
pop
pop
aad
and
mov
shrb
ret
adc
andl
push
stc
xor
sbb
int3
in
inc
xor
dec
jb
aaa
int3
jae
cmp
fsubr
jns
jge
cmp
movsl
int
dec
jae
lahf
add
cld
mov
ja
xchg
xor
cli
test
jge
ds
fbld
shr
dec
add
pop
ret
and
sahf
and
jns
orl
sub
cltd
jno,pn
and
lea
cli
mov
test
mov
add
inc
dec
daa
mov
stos
ljmp
test
je
mov
cmp
adc
aad
push
test
mov
shll
xchg
inc
add
and
adc
xor
push
gs
lcall
iret
cmp
fistpl
push
mov
dec
test
inc
fwait
add
sbb
in
sbb
les
int3
enter
pop
popf
imul
gs
out
imul
mov
cld
lahf
xchg
movsl
stc
out
pop
cltd
jle
or
sbb
lcall
aam
cmc
inc
lods
imul
pop
xor
aaa
lret
stc
jae
mov
or
cld
out
and
inc
sub
cltd
xchg
jno
cmp
or
popa
in
cmpsl
mov
cmpsb
jne
movsb
xchg
pushf
cltd
cli
jno
movl
mov
negb
cmp
sbb
cltd
rcll
lea
ss
out
loopne
fisubl
inc
mov
aaa
and
and
loopne
lret
stos
dec
sub
outsb
sub
mov
shr
out
jle
and
and
inc
test
jle
hlt
dec
mov
ficoml
pop
inc
adc
adc
popf
mov
sub
sbb
pop
jecxz
scas
loope
ds
or
mov
mov
add
sub
cs
sub
gs
jmp
int3
or
cs
adc
cmp
mov
push
inc
cmpsl
mov
rorb
lgs
clc
aaa
popa
xor
test
pop
cmp
ret
sub
fsubs
test
pop
shlb
jae
les
dec
imul
adc
repz
push
jne
push
gs
and
lahf
cmp
xor
dec
mov
arpl
ret
sbb
cmpsl
aaa
lock
ja
cmp
inc
sub
movsl
lock
sub
sub
or
lods
int3
lcall
and
cmp
jmp
mov
pop
aaa
ja
inc
pop
adc
stc
std
rolb
adc
and
add
sahf
lock
mov
loope
sub
scas
cmp
movsl
cltd
push
fcompl
sbb
push
and
sub
push
cmpl
cmc
inc
dec
dec
mov
movsb
and
aad
lock
lds
sub
inc
or
lret
stc
cmpsl
xor
mov
in
sahf
mov
movsl
jb
sbb
jg
daa
lret
jbe
call
or
sbb
adc
add
movsl
in
pusha
jl
add
mov
adc
dec
adc
cmp
cmpsl
mov
xchg
or
xor
leave
sti
fstps
notl
jmp
and
lret
add
cmc
movsl
cwtl
sbb
movsl
mov
and
pop
add
adc
sub
inc
jnp
call
lods
sub
xchg
out
pusha
std
cmpsl
or
sbb
jbe
inc
adc
jmp
jne
dec
mov
sbb
cmp
inc
mov
test
inc
xchg
js
test
mov
sub
mov
and
int
repnz
cmp
sti
addl
aaa
pop
mov
jmp
out
xor
loope
and
aaa
mov
into
out
hlt
mov
xchg
dec
inc
push
ja
mov
add
inc
shl
pusha
int3
adc
cmc
inc
or
dec
je
movsl
out
mov
push
mov
pop
out
pop
add
jb
rclb
out
cmp
fstl
dec
std
mov
leave
xlat
jl
mov
cmc
and
mov
pusha
inc
jae
data16
in
add
test
jg
sahf
sbb
into
pop
push
xchg
sbb
mov
pop
aad
in
std
aaa
in
xor
sarb
je
lahf
hlt
dec
jbe
stc
add
xor
shll
and
inc
push
and
sub
push
fstpl
and
jmp
dec
fucom
xlat
and
aaa
mov
mov
sbb
leave
or
movsl
bound
xlat
dec
fidivrl
mov
and
jnp
adc
and
push
ja
int
cli
pop
mov
sub
xorb
push
xor
out
sbb
sub
es
repnz
inc
inc
cltd
in
jb
add
lahf
std
and
sahf
or
jg
cmpl
notb
and
jae
adcl
push
pop
inc
adc
aam
movsb
cltd
sub
xchg
les
cwtl
mov
pop
xor
cmp
mulb
ja
pop
add
dec
push
popa
dec
ds
shl
movsb
pop
jge
test
out
xchg
push
into
inc
out
push
insl
in
loopne
sub
test
or
mov
frstor
sbb
test
popf
sti
jns
rcrl
test
mov
or
ds
sarb
and
int3
mov
in
addr16
adcb
les
xchg
pop
push
add
sbb
and
mov
mov
pop
xchg
movsl
imul
ss
sbb
loop
cmpsl
cmp
pop
xchg
stos
into
jge
mov
outsl
jbe
jno
cmp
sub
add
inc
movsb
dec
mov
sar
push
fstpl
lcall
dec
adcl
pop
sbbb
add
jl
movsb
and
inc
icebp
insl
inc
movsb
mov
test
adc
push
xor
shl
stos
jae
pushf
mov
mov
std
cmp
gs
daa
lret
mov
mov
cmp
mov
and
fdivl
movsb
stc
and
daa
gs
call
mov
fcmovu
popa
add
loope
push
and
or
cmpsl
jbe
mov
fdivr
push
mov
add
push
push
mov
out
insb
shlb
popa
lea
or
in
adc
dec
fwait
inc
adc
les
cltd
push
sub
mov
xchg
add
sbb
movaps
pop
push
jb
and
cs
les
mov
jbe
mov
adc
insl
sub
pop
insl
mov
and
imul
ds
int3
inc
movsb
mov
cmp
fwait
xchg
add
add
jne
inc
nop
pinsrw
add
gs
popa
enter
es
xchg
cmpsl
nop
lods
push
aas
ss
divb
aaa
data16
cwtl
sub
das
imul
lret
mov
add
add
pop
mov
cmp
mov
ficompl
test
dec
ss
mov
cmp
cmp
adc
push
jne
inc
ficoml
arpl
test
xor
shl
in
int3
scas
bound
xchg
loope
mov
fs
and
ficoms
addr16
mov
cmp
pop
sti
xor
cmp
and
mov
cmpsb
adcl
jg
adc
das
mov
dec
pop
js
mov
or
mov
in
setne
movsl
sbb
and
mov
dec
sahf
mov
push
packssdw
cmc
mov
test
adc
xchg
sub
push
and
bound
testb
shrb
xlat
sbb
mov
jmp
and
and
sti
mov
arpl
add
pushf
adc
int
rorl
ja
lret
or
push
fs
sbb
xchg
mov
push
mov
and
mov
stc
or
lahf
lock
fsub
ss
pop
nop
outsl
xor
xor
mov
emms
xchg
ret
xor
movsl
shll
cld
clc
test
cmp
movsb
add
inc
mov
and
fmul
dec
push
mov
repz
push
mov
and
jecxz
cmp
rcl
mov
das
aaa
mov
andb
ljmp
lahf
or
xchg
ds
xor
cmc
add
scas
sbb
insb
lret
aaa
mov
or
sub
pusha
pop
xor
repnz
fxch
out
xor
loope
jecxz
cmc
sbbb
adc
sub
test
adc
in
fistpll
aas
cld
inc
aad
in
nop
adc
jmp
aad
xor
dec
adc
cmpsl
jne
mov
push
pop
sbb
fcoms
sbb
jnp
mov
inc
or
inc
sbb
fists
repz
push
lds
jle
or
gs
mov
mov
push
icebp
mov
call
cmc
inc
push
lcall
imulb
mov
mov
pop
adc
ficoms
repnz
test
and
dec
xor
push
sahf
xor
in
inc
or
call
pusha
fs
ss
imul
dec
and
mov
sub
xor
add
sub
and
rcr
ss
add
mov
adc
and
jne
cmc
clc
adc
mov
in
pop
rclb
leave
inc
adc
clc
adc
push
mov
jbe
dec
inc
sarl
cmc
lods
ret
and
stc
mov
aam
adc
clc
jae
and
mov
enter
in
sbb
rorl
and
loopne
mov
jmp
add
mov
jae
ljmp
sahf
jno
pop
aad
cli
sbb
inc
leave
sahf
out
ret
shrl
rcrb
xchg
or
mov
cld
pop
in
jbe
jp
je
ss
jb
xchg
xor
out
sub
lods
push
and
cmp
dec
stc
daa
jl
sub
sub
sbb
sbb
test
and
loope
lret
mov
shll
lret
sbb
and
int
call
mov
jnp
insl
outsl
cmp
inc
ja
lcall
loope
jl
and
jl
stc
fstps
js
test
or
or
hlt
xor
adc
test
pushf
add
in
cmp
les
xchg
je
inc
movmskps
addr16
sub
or
fnstsw
push
mov
adc
dec
or
into
jmp
push
or
inc
mov
jl
repz
mov
push
cmp
push
jne
and
lds
and
push
fwait
test
xor
jg
xchg
pusha
xchg
mov
ss
inc
mov
dec
js
add
inc
mov
cmc
cltd
sahf
mov
sbb
or
std
push
add
mov
sahf
sbbb
aad
fbstp
add
xchg
fcompl
pop
test
in
rorl
ss
add
mov
jg
push
btr
pop
gs
adc
ss
add
data16
push
inc
xor
push
sbb
dec
ret
and
dec
pop
mov
sub
sbb
out
jb
dec
ds
not
push
cmp
adc
push
add
in
and
mov
js
mov
and
dec
cmp
int3
xchg
pop
push
xorl
lea
inc
test
sub
sarb
xchg
sbb
ja
cmp
jne
jnp
and
pusha
mov
icebp
or
xchg
mov
inc
xor
sub
je
and
incl
mov
lods
cmp
adc
adc
data16
rcl
shlb
cmp
out
imul
push
mov
pop
scas
test
clc
popf
and
or
lcall
mov
imul
lock
movsl
lahf
sub
adc
and
sysret
mov
sbb
dec
xchg
es
xchg
cmp
out
adc
lahf
jle
lcall
shrb
jge
add
or
mov
adc
pop
shrb
ror
push
cmp
lods
pop
mov
push
jne
adc
divb
sub
sub
out
negl
mov
int
push
inc
movsl
push
imulb
std
lods
ret
rorl
das
add
rclb
mov
fstl
or
sub
sbb
ret
movsl
jne
aaa
and
jge
cmc
cmp
sub
lds
emms
fcoml
test
jecxz
cmp
das
add
lret
mov
icebp
inc
out
xor
xor
mov
mov
or
push
xor
xchg
dec
pop
int3
ret
lods
push
mov
adc
push
jg
pushf
jae
fsts
movsl
pop
cmp
jp
pusha
adc
repz
mov
or
dec
fwait
jns
mov
insl
popa
inc
leave
sbb
push
inc
mov
ljmp
test
das
sbb
cld
in
fs
mov
pop
ss
and
mov
movsl
push
push
add
jbe
data16
test
in
in
call
fidivrl
int3
or
es
std
push
jnp
mov
jecxz
or
movb
mov
outsb
and
cmc
push
add
sbb
dec
cmpsl
xor
sbb
xor
xor
rclb
es
test
xchg
pop
cs
pusha
popf
or
out
or
sbb
lcall
push
push
cmp
sbb
ljmp
cmp
adc
adc
daa
out
sbb
cmp
pushl
adc
inc
in
dec
xor
leave
lea
xor
jg
push
dec
pop
xor
add
js
test
inc
mov
movsb
clc
sbb
mov
dec
adc
cmp
jae
icebp
mov
pop
mov
ja
dec
lds
inc
push
adc
push
adc
add
jae
daa
inc
in
pop
adc
and
add
shlb
adc
jnp
xlat
mov
sti
dec
cmp
bound
sbb
and
pop
aas
pop
add
cmp
cwtl
es
and
outsl
sub
and
lahf
sub
xlat
sbb
scas
imul
inc
icebp
loopne
cmpl
call
in
push
dec
dec
mov
add
movsl
stc
xor
les
pop
sbbl
and
daa
xor
in
pop
shll
test
adc
out
or
and
mov
push
arpl
jnp
inc
movsl
mov
cli
and
and
mov
fistpll
jns
in
or
pop
outsl
add
in
mov
sub
cmpsb
mov
aad
and
push
ds
out
nop
sub
into
idivl
adc
xchg
or
sahf
nop
xor
push
pop
cli
mov
jp
jge
cmovae
movsl
mov
fadds
enter
aad
cmc
leave
fnstenvs
popf
es
cmp
push
in
mov
push
mov
cmp
and
test
ficompl
cld
push
out
cmp
sbb
lret
nop
lea
xchg
rcrl
mov
and
add
cmpsb
mov
add
jno
shrl
shrl
xchg
or
pusha
push
mov
add
in
pusha
andb
les
pop
inc
mov
std
sub
stc
ljmp
insb
ja
push
lods
xchg
add
or
xchg
cltd
mov
adc
xchg
pusha
xor
inc
fidivs
mov
cmp
sbb
xchg
sub
fsubl
mov
test
ret
fisttpl
mov
js
movsb
ds
lret
mov
xchg
cmc
aad
mov
jmp
sbb
imul
inc
shrl
pop
jne
jmp
xchg
mov
cmc
or
test
vdivps
les
cli
push
ds
sub
mov
cmp
daa
lea
cmc
call
sbb
jle
in
sub
and
push
iret
adc
inc
jle
in
xor
inc
pop
dec
ss
lret
adc
or
mov
addr16
test
push
aad
aaa
sub
add
das
jbe
adc
in
cmc
mov
pop
dec
pop
adc
popa
ds
lret
int
mov
sub
push
push
adc
xchg
mov
jbe
fnstsw
iret
pushl
add
or
pop
and
arpl
mov
gs
inc
call
inc
dec
adc
and
js
es
cmp
das
inc
sub
jne
repz
imul
and
lahf
jle
xchg
gs
inc
push
jmp
addb
sub
loope
sti
jae
outsl
mov
inc
pop
adc
xor
cltd
data16
mov
mov
cwtl
daa
mov
mov
pusha
ds
mov
push
inc
mov
push
push
shll
mov
popf
mov
cld
sub
push
sbb
inc
fisttpl
pop
ja
add
mov
insw
les
sub
push
ret
outsl
cmp
gs
movsl
mov
test
mov
stc
fidivrl
sahf
inc
or
shlb
sub
pop
and
insb
xlat
lahf
popa
pop
stc
cmpsl
adc
mov
add
push
dec
movsb
cmp
test
ss
mov
aad
cmp
shrl
cld
pop
add
mov
xlat
repz
out
add
or
dec
in
or
in
jb
mov
scas
movsl
out
clc
and
xor
add
in
sbb
push
iret
das
in
mov
xchg
mov
outsl
test
rorl
cli
bound
cmp
and
shrb
cld
xchg
movsb
jl
inc
jne
movsb
cltd
addr16
mov
mov
cli
repnz
hlt
jb
cltd
sahf
push
hlt
dec
sbb
mov
push
cld
xchg
dec
stc
and
adc
mov
rcrl
insl
push
mov
mov
lods
jp
das
test
sarb
dec
test
or
jp
aas
xor
pop
mov
dec
ret
int3
adc
inc
add
roll
es
and
leave
addr16
and
jns
mov
in
lds
lods
adc
ss
add
inc
shlb
mov
scas
add
mov
jl
fsubl
stos
scas
add
cmc
jae
ret
cwtl
cmp
enter
push
scas
test
add
push
movsl
stc
popa
xchg
pop
mov
in
lahf
icebp
and
jle
xor
and
and
mov
mov
ss
and
je
mov
sub
scas
add
push
movsl
push
xchg
daa
and
sti
scas
dec
lea
in
mov
lahf
shl
add
pop
mov
int3
lcall
stos
cmc
and
cmpsb
sahf
mov
scas
mov
jl
push
or
or
add
push
dec
leave
jge
div
jp
popf
push
mov
adc
cmp
and
add
sub
mov
push
cltd
push
add
aam
jbe
fsts
adc
xorb
cmpsl
insb
pop
xchg
mov
jb
xor
scas
add
int
test
movsb
dec
ret
pop
push
adc
fisubrl
adc
mov
xlat
mov
not
iret
xchg
call
shll
and
movsb
mov
lock
xlat
xchg
push
sbb
mov
jb
in
xor
cs
cmc
pop
mov
jg
vpsubsw
jg
lret
mov
cltd
mov
cmp
and
popa
xchg
leave
daa
or
daa
or
or
ret
add
subb
add
mov
dec
cmpsb
add
clc
xchg
movsb
adc
clc
add
inc
cltd
add
mov
ds
cmpsb
pushf
xchg
pusha
sahf
pop
add
daa
fnstcw
sbb
jae
aad
jbe
lcall
add
arpl
push
jg
stc
call
adc
dec
jg
add
shr
and
dec
loopne
adc
mov
dec
and
lds
and
addr16
jecxz
mov
cmpb
insl
rorl
push
xor
mov
xchg
mov
ja
mov
or
xchg
outsl
mov
fnstsw
jge
pop
ss
roll
sub
jg
lods
icebp
xor
xchg
pop
xor
push
mov
cmp
imul
xor
add
sbb
jp
push
lea
pop
cmp
inc
cltd
ja
nop
lcall
out
int
inc
jp
lods
mov
hlt
xor
cs
in
pop
adc
add
mov
ja
push
sub
mov
pop
dec
push
shlb
jl
sti
sbb
orb
push
lods
adc
scas
add
dec
adc
cmp
imul
stos
push
mov
das
mov
inc
rcll
stc
jbe
mov
outsb
inc
fsubrs
jp
pop
dec
std
call
mov
mov
jae
inc
js
push
mov
or
leave
cmp
dec
scas
inc
jge
mov
ljmp
xchg
mov
in
out
xchg
inc
and
aad
xor
or
cmpsl
xlat
lods
xor
lods
mov
call
repz
dec
insl
inc
mov
test
roll
cmp
jmp
pop
or
adc
ljmp
aam
lods
xor
cmp
dec
pop
data16
hlt
ja
movsl
cmpsb
or
mov
test
enter
mov
ret
aas
loopne
not
in
in
ret
es
sub
insl
dec
cmp
cmp
in
and
out
xchg
mov
lods
fstpl
inc
shl
data16
cs
adc
adcb
pop
xor
xchg
movsb
loopne
imulb
push
test
mov
add
mov
adc
fldz
push
add
and
stos
dec
in
jno
inc
mov
movsl
aas
cmp
loope
add
aas
inc
aam
push
je
add
jnp
mov
jle
jmp
daa
insl
mov
sub
add
dec
rorb
jbe
mov
cmc
loopne
sub
ja
xor
aam
pop
and
inc
ljmp
lock
flds
movsl
push
pop
loopne
test
mov
rorl
jae
mov
std
pop
hlt
and
mov
adc
sub
scas
lods
xor
test
jo
gs
aas
mov
xor
out
sahf
lods
adc
and
pop
rcrb
inc
cmp
inc
push
sub
bound
xor
or
shrl
cmp
inc
iret
stc
pop
sub
addr16
xchg
sbb
subl
inc
xor
in
icebp
push
inc
mov
stos
add
mov
aas
pop
adc
add
dec
cld
out
xor
inc
jo
and
gs
fwait
pop
cwtl
lds
add
lock
pop
pop
hlt
sbb
sbb
lcall
cld
sub
dec
pushf
push
in
add
sub
sbb
mov
je
add
cmp
nop
icebp
outsl
shll
cmp
js
movsb
loope
xor
jo
aaa
cmpl
adc
jecxz
add
mov
push
jae
sub
sbb
or
push
pop
cli
andl
add
jmp
subb
mov
sub
and
mov
mov
dec
and
std
in
in
push
decb
lods
inc
or
mov
adc
outsl
adc
add
mov
call
mov
insb
ficoms
pushf
xor
jg
nop
and
dec
dec
pushf
sbb
das
cmp
int
adc
xor
mov
mov
jb
and
and
outsb
pop
lret
dec
mov
lods
or
fwait
jle
mov
mov
pop
inc
pop
cmpsl
in
int3
pushf
cmp
movsl
and
dec
cltd
nop
push
mov
push
daa
dec
sub
test
imul
mov
out
idiv
cwtl
adc
std
inc
loope
cmp
fdivl
sub
aad
adc
arpl
mov
cmp
out
mov
pop
ja
push
push
mov
and
fs
mov
pop
xchg
push
or
pop
sbb
mov
inc
lahf
push
add
push
push
pusha
sbb
loope
cmc
in
xor
divb
clc
inc
xor
sub
sub
pop
push
cmc
pushw
mov
xchg
mov
add
lods
xchg
mov
cmp
mov
fdivrs
movsb
adc
sub
std
xchg
mov
mov
popa
fsubr
add
js
cs
mov
push
notl
inc
mov
pop
addl
subl
push
out
int3
call
movsb
mov
movsl
mov
inc
mov
jge
std
mov
mov
scas
push
das
loopne
lea
adc
sub
ja
loop
movsl
dec
or
clc
ds
test
je
movsl
call
pop
jl
xor
inc
out
in
ret
mov
nop
sbb
mov
inc
xchg
and
js
repz
loope,pn
adc
imul
clc
loop
jmp
push
jae
adc
ret
mov
frstpm(287
push
je
ja
xchg
mov
cs
aam
push
shl
pop
fldcw
sub
add
mov
sub
jb
push
cmp
scas
push
mov
push
dec
inc
fldenv
jae
lahf
push
ljmp
ja
call
lret
in
jecxz
jo
mov
jge
mov
cmp
dec
test
push
jns
mov
stc
mov
rcrb
xor
xor
cmc
push
vorpd
push
sbb
shlb
sti
insl
sub
mov
inc
and
addr16
int
aas
xlat
arpl
and
out
add
mov
lock
mov
sub
mov
into
repz
in
rclb
mov
lock
and
sbb
cwtl
sub
add
rorl
nop
popf
icebp
pop
aam
mov
fdivr
lcall
mov
push
es
fnsave
jg
lock
arpl
sbb
movsl
in
pop
lock
out
or
rcll
jmp
fcomp
cld
or
jp
and
addr16
or
ljmp
popf
stc
sbb
adc
shl
cmp
push
sbb
jp
flds
movsl
or
push
xchg
cmpsb
movsl
movntq
out
xchg
push
in
mov
dec
dec
outsl
cmpsb
lods
std
gs
testl
out
cmp
movsl
xor
and
pop
mov
jns
ds
das
pop
pop
sub
daa
arpl
add
sub
imul
scas
leave
jmp
cld
mov
bound
js
aas
in
cmpl
xchg
pop
sbb
jle
lock
pop
sbb
push
pop
xchg
lahf
shlb
lock
aad
js
add
testb
sbb
mov
ja
xor
mov
ret
mov
roll
in
lcall
add
adc
adc
inc
pop
cmp
mov
dec
pop
xchg
fs
inc
leave
mov
jne
adc
adc
adc
mov
std
add
sbb
cwtl
jnp
fdivrs
add
push
aaa
ret
xchg
aam
jne
pushf
and
pop
cld
pushf
fdivrs
fcmove
mov
shll
push
lds
popa
aad
or
mov
add
push
loope
je
lods
dec
sbb
add
aaa
adc
nop
or
js
adc
fstpl
or
je
mov
dec
outsb
sbb
adc
out
mov
inc
pop
popa
ja
dec
or
js
out
sbb
push
cltd
ss
test
inc
sarl
arpl
in
lahf
call
jle
adc
push
cmp
add
pop
pop
sbb
and
xor
cltd
mov
mov
ja
std
orl
xor
cbtw
ja
andb
test
enter
xchg
outsl
idivb
scas
daa
stc
mov
fwait
sarl
sub
daa
imul
sub
add
mov
cmpsl
mov
leave
cmpl
daa
icebp
mov
xchg
mov
mov
mov
scas
sbb
push
test
data16
scas
jne
movsl
imul
jbe
mov
xchg
sub
movsl
jne
adc
pop
xchg
or
xchg
cmc
test
add
push
and
loopne
sbb
cmp
jne
sbb
xor
call
mov
sub
push
mov
mov
cs
mov
pop
mov
jbe
add
and
ss
out
popa
aaa
fmuls
sbb
bound
scas
scas
pop
adc
aad
sbb
ffreep
fldcw
fdivl
rorl
sbb
pusha
adc
das
jb
add
push
sub
push
push
test
adc
test
xchg
aaa
mov
nop
sti
cmc
pop
stc
and
adc
aas
mov
mov
scas
push
loope
sbb
sub
pop
fcoms
imul
jae
lods
sub
adc
imul
sub
lock
sti
les
pop
xchg
xchg
push
sub
pusha
and
sti
test
push
cmc
int3
xchg
insl
out
outsl
clc
or
ret
mov
or
mov
inc
call
popa
in
pop
aas
pop
cmp
dec
xor
repz
cltd
mov
inc
dec
and
cmp
adc
daa
fisttps
ror
xor
dec
loope
add
in
stc
cmp
pop
out
cmp
lahf
sbb
inc
dec
xlat
sub
test
ret
cmp
imull
imul
hlt
cmp
mov
cmpsl
std
adc
and
fsubrs
out
pop
rclb
in
add
notl
cmc
cmpsb
int
xor
fs
and
js
add
ftst
push
cmc
mov
add
jo
inc
daa
pusha
es
add
jp
xor
push
das
cmp
daa
movsl
dec
dec
sbb
cmp
jnp
movsl
and
movsl
aas
imul
out
mov
addb
int
mov
rcl
ret
push
aad
enter
aaa
bound
mov
cwtl
shr
inc
mov
xor
pop
insl
cwtl
mov
popa
push
and
js
inc
daa
imul
leave
lock
pop
sub
push
jae
pop
rcrl
add
and
enter
lods
pop
or
lret
fnstsw
gs
inc
pop
or
in
icebp
popf
adc
sub
pop
jns
pop
bound
cmp
xchg
cld
adc
in
push
out
sti
mov
push
jge
or
cmp
adc
inc
xor
sub
into
lock
aad
mov
adc
xchg
lds
leave
push
xor
push
push
test
pop
add
cmp
es
xor
fdivrp
shrl
jae
loope
adc
daa
aad
push
pop
icebp
mov
fsubr
or
scas
jmp
jle
cmc
inc
adc
cld
push
mov
mov
jmp
fldenv
std
dec
cli
lods
dec
shrl
mov
rcll
jae
dec
push
xorl
mov
nopl
ja
les
mov
dec
out
adc
test
mov
xchg
cmp
add
aad
cmp
cmc
cltd
iret
lcall
adc
sub
inc
imul
xor
adcb
ficomps
inc
enter
popa
cltd
ds
jno
popa
call
loopne
push
xor
cli
or
push
cs
mulb
fstps
cmp
inc
or
add
cli
mov
inc
inc
inc
mov
pop
cmc
cmp
ja
push
add
and
dec
xchg
sti
mov
push
cwtl
lret
sbb
dec
loop
or
adc
mov
xor
test
hlt
inc
pop
push
insb
pop
push
and
sbb
loopne
sbb
inc
and
cmpsl
out
popf
jae
cwtl
out
out
call
adc
aam
clc
jb
aaa
or
in
jb
std
and
xor
aad
movsb
insb
inc
repz
stc
push
in
into
es
jle
cmp
ljmp
xchg
adc
sarb
cli
jge
cltd
push
jecxz
add
and
stos
add
jb
and
sub
sub
cmp
cwtl
dec
pushf
aaa
push
mov
and
aad
mov
inc
mov
sbb
gs
stc
and
imul
cld
and
adc
dec
cld
inc
mov
sti
add
out
loop
cwtl
data16
lahf
sub
adc
outsl
mov
adcb
add
and
bound
out
out
aam
test
iret
jnp
or
scas
xchg
jno
jae
and
fs
sbb
gs
push
es
mov
popa
call
in
push
mov
mov
and
fmuls
nop
cld
out
lds
dec
xor
icebp
mov
xchg
add
movsl
inc
clc
sub
jg
add
out
outsb
xor
xor
fadds
mov
je
orb
addr16
ret
or
adc
cmc
pop
xor
xchg
mov
faddp
add
add
jnp
int
ret
sub
sbb
pop
das
jle
pusha
push
mov
mov
jnp
out
cmp
es
xchg
xchg
xor
push
and
aam
adc
cld
push
loopne
icebp
mov
xchg
jg
add
xchg
cmp
jnp
clc
fisttpll
push
push
sahf
dec
mov
int
add
pop
xchg
adc
and
scas
add
stos
popa
ja
jge
in
jmp
adc
add
mov
imul
mov
jae
std
jno
cmp
mov
add
aad
push
das
sbb
push
mov
mov
mov
jb
repnz
adcb
cmpsl
add
aaa
cmp
mov
adc
in
call
dec
push
shll
in
pop
jg
mov
push
mov
arpl
jl
gs
aaa
pop
lds
jle
fsubrs
out
inc
rolb
movsb
adc
cmp
ret
je
push
lret
cli
cmp
add
cmpsb
inc
or
repz
and
jb
add
int3
sbb
dec
inc
push
cmpsl
mov
insb
push
cmp
movsl
int
sbb
xchg
out
out
jmp
dec
mov
movsl
sbb
fwait
add
pop
test
imul
dec
pop
xor
rcrb
pop
movsl
add
sub
clc
and
or
add
add
xor
cwtl
std
dec
xchg
addl
cltd
sbb
inc
repz
movsl
cmc
cld
in
adc
adc
pop
xor
cmpsl
push
lcall
adc
pop
push
movsl
sbb
outsb
xor
je
mov
push
in
clc
mov
pop
shll
mov
push
fmul
js
sub
adc
xchg
push
xchg
jge
testl
xchg
out
popf
mov
mov
jg
in
sub
cmp
shlb
mov
add
int3
mov
ja
sbb
mov
add
icebp
pop
push
aad
scas
mov
in
inc
push
std
xchg
sbb
aaa
jg
mov
adc
outsb
stos
flds
or
lea
test
outsl
mov
sbb
jae
fs
xchg
xor
mov
adc
xchg
mov
shrl
ret
stc
cmp
inc
sbb
sarl
or
xor
pushf
and
divl
lods
xchg
repnz
or
inc
add
adc
cli
inc
and
xchg
adc
clc
jge
or
rorl
outsb
std
ret
xchg
adc
cmp
and
cmpsb
inc
cmp
movsl
mov
addb
or
adc
cmpsl
movsl
dec
aad
lock
sbb
push
mov
mov
dec
sub
enter
stos
sbb
sbb
mov
ja
fistpll
sbb
adc
cli
and
sub
icebp
mov
pop
popa
addr16
jp
push
icebp
stc
mov
dec
sub
jl
rclb
je
push
push
fldcw
aaa
add
xor
sti
sub
mov
jle
sub
fsubs
pop
mov
es
sub
lret
xor
add
jge
data16
idiv
dec
mov
push
iret
aas
inc
lds
movsl
pusha
xchg
mov
and
loope
mov
lods
pop
cmc
mov
jmp
xchg
pop
data16
pop
push
mov
shll
cmp
fldl
mov
xchg
or
out
enter
push
mov
xor
add
add
mov
jecxz,pt
or
mov
jg
pop
dec
add
sub
xchg
adc
wrmsr
nop
inc
mov
mov
cmc
mov
xor
push
cltd
jl
jmp
xor
je
shrl
movsb
jo
add
push
pop
insb
shlb
sub
ljmp
jb
pop
push
jae
xchg
leave
pushf
sbb
cmpsb
les
add
ds
sbb
inc
mov
pop
sbb
cmp
mov
ljmp
in
mov
aad
pushf
mov
shlb
push
add
shll
andl
addr16
rorl
mov
add
sub
push
push
ja
dec
xor
sbb
hlt
pop
shrd
stc
cmp
add
inc
movsl
push
push
fwait
cmp
icebp
out
cld
push
mov
cmpsb
xor
xor
jp
nop
popa
dec
into
pop
and
mov
mov
iret
adc
aas
stc
fldl
in
popf
mov
cmp
ret
loope
divl
sbb
mov
ss
pop
mov
add
and
mov
mov
and
lahf
hlt
cmpb
shrb
stos
stc
cmp
loopne
fldenv
je
mov
sub
aaa
adc
ja
sbb
adc
inc
dec
mov
sbb
stos
sbb
add
je
movsb
pushf
jno
cwtl
lds
popf
aad
jne
int3
cmpsl
addl
cmp
mov
mov
xchg
mov
pop
push
cmp
es
aad
jne
xor
fdivrl
pusha
xor
pop
sbb
push
mov
jnp
ljmp
cmc
xor
xchg
fsubs
test
sbb
adc
pusha
xchg
push
in
pop
or
inc
cmp
rcll
mov
push
adcb
sub
dec
mov
dec
or
mov
and
xor
add
loope
and
adc
xchg
es
add
push
js
or
inc
addr16
xor
scas
jg
add
inc
add
es
sbb
sbb
test
gs
or
movsl
mov
dec
out
movsl
je
std
cmpsl
mov
mov
aaa
insl
pop
pop
dec
rcrl
dec
adc
sub
inc
cs
out
jmp
fists
xor
jae
dec
or
test
aaa
adc
pop
and
ret
adc
xchg
push
testb
mul
daa
arpl
push
cmp
mov
dec
and
jge
dec
push
ja
xor
gs
push
outsb
xlat
movsl
mov
aad
cmp
ljmp
int3
add
add
hlt
inc
shll
ljmp
mov
pusha
and
or
mov
mov
mov
pop
outsl
mov
sbbl
mov
cmp
sub
pusha
sbb
jne
int
addr16
or
sbb
mov
loop
out
and
mov
xchg
cli
fdivl
sub
les
inc
in
hlt
and
popf
sub
and
adc
or
vminsd
pop
sub
aad
sub
lds
sub
cmc
les
mov
mov
jo
dec
jp
popa
pop
add
bound
sbb
call
and
mov
adc
cli
in
sbb
gs
jp
or
xor
sti
pop
leave
daa
mov
cmp
mov
les
nop
lret
sub
cltd
out
lds
out
inc
mov
das
push
enter
or
xor
mov
cmp
int
rcrl
mov
xlat
jae
cmp
inc
test
xchg
fdivr
lret
sbb
jo
push
fwait
rcll
pop
mov
out
ret
pop
pop
in
pop
or
mov
push
jae
jb
sbb
aaa
mov
dec
jmp
out
popa
jns
sbb
cli
in
jge
insl
xchg
mov
lods
sarb
incl
mov
nop
lcall
pop
mov
das
jne
scas
arpl
push
mov
jmp
repz
and
shlb
test
xchg
and
stos
clc
pop
loop
movsb
sti
fnstenv
sub
stc
and
insl
inc
inc
cmp
mov
mov
push
or
insb
sbb
nop
sbb
cld
rcll
xchg
popf
add
ficomps
xchg
jae
bound
push
inc
and
in
push
xor
bound
ljmp
icebp
ja
adc
and
inc
aaa
and
sbb
mov
in
add
add
mov
aaa
lahf
push
sbbb
inc
dec
jnp
xor
adc
insl
out
dec
pop
fwait
lahf
xchg
xchg
lds
pop
pop
jae
stc
gs
stc
mov
js
mov
aam
sbb
add
inc
jl
lahf
pop
sbb
stc
jne
leave
mov
gs
mov
push
out
or
or
or
pop
jl
sub
mov
jmp
repz
call
xor
cmp
push
pop
add
fnstenv
negl
sahf
in
fsts
or
push
xchg
push
aaa
imul
rorl
clc
repnz
dec
hlt
cmp
push
sub
test
jne
xchg
je
stc
jne
jmp
mov
fwait
sub
or
popf
sub
pop
lods
in
jnp
add
add
jp
sbb
loopne
fidivrs
aam
movsl
int
push
movsl
or
std
jae
mov
inc
cmp
js
xchg
mov
sub
inc
arpl
adc
sahf
mov
push
and
pop
push
lods
test
ss
add
cltd
fisubrs
pop
lea
je
push
push
cmp
cmp
inc
hlt
pop
cld
fwait
mov
xchg
adc
sub
data16
orb
clc
scas
mov
std
mov
pushf
cld
dec
jp
jle
cmc
cltd
movsl
mov
fprem1
or
movsl
lock
ljmp
mov
adc
mov
push
roll
push
or
add
aaa
lret
out
mov
dec
or
push
add
push
ss
push
cltd
call
jbe
test
fdivs
sub
aad
test
and
cmp
daa
add
inc
mov
lds
jns
jle
aas
add
push
cmpsl
mov
sub
jb
clc
movsl
mov
imul
cmp
cmpsl
ja
int3
int3
in
cmp
test
mov
in
xchg
push
add
movsb
mov
test
ret
adcb
mov
mov
mov
xchg
stc
cltd
sahf
or
ja
sub
movsl
jmp
popa
dec
mov
in
loope
aad
sub
and
pop
clc
shll
movsl
dec
cltd
rcll
fstpt
out
sbb
pop
sub
inc
cmp
in
clc
call
fbstp
jp
xor
xchg
ret
cmp
mov
pop
push
mov
fdivs
or
pop
or
add
dec
or
jmp
lods
xchg
int3
sub
in
xor
mov
cmp
ret
or
daa
mov
je
roll
cmp
jno,pt
insb
in
fwait
pop
add
add
or
data16
call
sbb
pop
lret
mov
cli
pop
scas
push
lods
call
lret
clc
fs
movsl
mov
shll
jns
jns
xor
jo
xor
fnop
lahf
lds
adc
in
movsl
pop
movsl
cmp
fisttpll
jo
xor
das
and
sbb
clc
mov
mov
outsl
pop
adc
dec
xchg
movsl
arpl
ds
outsl
jae
pushf
cwtl
adc
or
les
sbb
lahf
mov
mov
fistps
cltd
or
mov
pop
and
lret
sub
xchg
mov
lea
inc
popa
das
mov
inc
cmp
push
lahf
xor
imul
or
sbb
imul
sub
xchg
lods
and
push
andl
xchg
cmpsb
sarl
xor
cmp
adc
movsb
or
cmp
fdivr
loopne
iret
fwait
sub
js
cmc
mov
push
shll
cmc
test
pusha
les
popa
or
push
pop
add
hlt
std
sbb
movsb
int3
push
in
hlt
sbb
xchg
pause
sbb
pop
andl
aaa
xor
popa
sarl
sbb
repz
xchg
or
add
mov
jp
pop
fdivrs
sbb
pop
mov
jns
lcall
out
sbb
or
jbe
jmp
je
shr
xchg
fiaddl
mov
push
in
xor
pop
out
fcmovb
push
cmc
jb
pop
in
enter
test
lahf
cmp
aas
xor
lahf
xchg
push
adcl
clc
movsl
mov
mov
or
jno
add
data16
in
inc
idiv
fwait
and
xor
push
cmp
out
aas
xor
xchg
pop
xor
bound
sub
fmuls
cmp
push
sbbb
arpl
pushf
in
test
mov
jle
int3
jne
mull
mov
push
adc
mov
sbb
xor
gs
popf
xchg
sub
or
stos
ret
out
daa
or
push
test
sub
sub
cld
xchg
adcb
out
or
pop
scas
ret
push
inc
xchg
sub
cltd
fstpl
inc
jne
pop
push
in
andl
sbb
into
sbb
mov
movsb
repz
mov
dec
mov
push
xor
test
xchg
dec
push
inc
pop
push
sbb
ret
inc
cmp
xchg
loopne
xchg
cmp
mov
mov
ja
mov
xor
cmp
negl
jp
mov
or
xor
cld
lods
cmc
shll
push
jnp
movsl
in
cmp
es
xor
push
je
aas
ss
fistps
sbb
pop
int3
jle
pop
inc
repnz
sbb
out
sbb
mov
in
cld
sbb
or
je
adc
pushf
xchg
cmp
daa
jne
xor
sbb
data16
dec
adc
push
int
mov
scas
xchg
and
ret
and
fs
mov
and
xchg
sbb
loopne
cmp
lret
cmp
mov
or
dec
sbb
es
pop
and
inc
xchg
movsb
adc
fsubrl
sti
call
cltd
jns
imul
call
ss
pop
sbb
sbb
lahf
mov
and
sbb
dec
int3
sub
sub
pop
test
jbe
fldlg2
cmc
adcl
fmuls
lods
idivl
sub
sbb
mov
test
adc
push
cltd
mov
mov
jge
pusha
iret
xor
lock
cld
repnz
int
mov
pop
mov
cmpsl
loop
fs
clc
push
and
inc
add
xchg
cs
adc
lret
add
lcall
add
and
jno
imul
pop
dec
xchg
pop
into
push
xor
imul
inc
shrl
les
pop
fstps
lret
xchg
aad
mov
dec
mov
rclb
mov
sub
dec
xor
movsl
xor
add
inc
pop
imul
jle
aam
addr16
fwait
call
ljmp
dec
mov
je
pop
jae
mov
jno
and
jnp
xchg
lcall
lahf
jmp
pushf
and
and
rclb
sbb
adc
cwtl
and
push
sbb
jbe
mov
icebp
push
sbb
mov
cmp
pusha
sbb
aaa
mov
jbe
sar
xor
lcall
scas
add
push
xor
out
call
mov
ja
insl
xor
xorl
cmp
bound
test
mov
sub
movsl
push
insb
cmpsl
testl
xchg
inc
pop
cs
cli
pop
push
stc
mov
or
nop
gs
dec
dec
movsb
shl
dec
movsb
xchg
loop
fs
add
test
pop
and
lods
outsb
push
adc
xchg
dec
es
jb
fsubs
and
mov
divl
mov
lahf
jle
mov
test
das
push
and
and
pusha
adc
mov
ljmp
shll
inc
lcall
mov
jne
aaa
xor
fmul
aam
aaa
pop
add
cmp
movsl
pop
in
mov
popf
push
cmp
out
vmovdqa
mov
pop
loopne
push
in
cmp
movsb
mov
mov
and
push
shll
fcoml
inc
adc
sbb
and
mov
sbb
push
in
hlt
or
mov
icebp
push
inc
fsubl
mov
ja
das
repnz
inc
sbb
dec
sbb
in
idiv
or
in
cs
push
pop
orl
and
leave
mov
push
cli
sbb
add
sbb
es
dec
and
aam
outsl
scas
insb
nop
push
mov
in
int3
sub
cld
mov
neg
mov
mov
loopne
lods
push
adc
mov
sub
xor
mov
cs
loop
mov
and
adc
aas
ds
lods
add
dec
repz
repnz
lods
mov
xor
adc
sbbb
cli
les
test
ljmp
jle
cmp
mov
sub
outsl
enter
or
inc
cmp
lods
nop
and
xchg
xlat
out
pop
es
fmull
clc
xlat
imul
xor
lea
mov
je
outsl
xor
jle
jbe
stos
push
cmp
and
mov
inc
cltd
sbb
jae
imul
jne
sub
jb
pop
and
mov
jne
fiaddl
dec
or
fsub
push
jmp
ret
outsl
fldl
xchg
adc
gs
mov
adc
dec
lahf
jb
mov
mov
lret
movsl
xor
lahf
dec
sub
adc
aad
movsl
dec
pusha
inc
and
adc
insl
add
cwtl
mov
or
inc
xor
or
lods
pop
ficomps
push
test
push
and
dec
sub
sub
imul
and
lods
push
adc
jbe
xchg
or
test
scas
cmp
cld
sbb
jl
ss
insl
xchg
lods
push
lods
mov
and
hlt
inc
sti
cmp
mov
movsb
pop
hlt
test
xchg
gs
sbb
xor
push
popa
icebp
sbb
in
testb
or
and
xor
push
call
push
jb
inc
adc
inc
fadds
cs
ret
adcb
mov
mov
dec
adc
in
mov
and
pop
in
in
shll
lds
mov
out
mov
jecxz
mov
cmp
and
hlt
jle
stos
xor
jle
out
fdivl
rcr
mov
xchg
and
pop
lahf
adc
pop
rcr
jmp
push
add
std
add
cwtl
cmpsb
sbb
and
loopne
sbb
daa
pushf
fldl
push
add
xor
in
sbb
outsl
outsl
mov
es
insb
rcrl
loope
mov
add
mov
lock
adc
mov
shlb
sti
xor
and
push
dec
cmpsl
aam
sub
test
clc
lea
sbb
notl
nop
scas
fcomps
fdivp
pop
jmp
mov
in
mov
movsl
lret
fstpl
or
cltd
notb
ret
lods
dec
push
cli
add
mulb
cmp
jnp
mov
xor
fidivl
sbb
fs
xchg
arpl
add
or
loopne
sbb
sbb
rol
and
es
sbb
in
cmp
and
cmp
sbb
jne
ret
or
push
cli
xchg
cmpsl
inc
xchg
mov
daa
push
or
clc
xlat
adc
cmpsl
enter
sbb
imul
mov
ret
loope
loop
and
cmc
pop
sub
mov
xor
jl
sub
fldenv
ret
xchg
adc
in
in
aad
test
enter
movsb
cmc
jmp
mov
xchg
dec
mov
dec
jmp
in
xor
mov
push
sub
and
jmp
sub
enter
pop
cs
nop
pop
cmpsl
xchg
push
xchg
add
add
icebp
push
sbb
cmpsl
pop
add
inc
mov
mov
dec
outsl
mov
pop
dec
mov
movsl
je
pop
ss
mov
and
out
dec
int
ret
loopne
jne
xchg
add
push
gs
xor
test
dec
xor
jg
stos
pusha
and
xorb
stc
push
push
mov
dec
test
and
mov
jg
stc
sbb
xor
sar
sbb
add
daa
push
ud1
dec
ds
daa
orb
sub
sbb
addr16
jo
dec
in
out
pop
push
xchg
or
daa
sub
std
xchg
adc
inc
lock
rorl
xor
dec
std
sbb
add
jle
push
xor
out
sub
cs
movsl
xor
mov
ret
aam
and
inc
push
dec
lret
xchg
cmc
popf
cwtl
jmp
xchg
clc
ja
movsb
inc
popf
mov
imul
popf
pusha
pop
sub
mov
movsl
xchg
movsb
arpl
mov
push
push
cmp
xor
cwtl
shll
mov
fildl
push
xor
stc
mov
pop
mov
outsb
jae
in
lds
inc
stc
stc
in
notb
out
lcall
clc
mov
mov
arpl
aam
add
stc
xor
daa
rcrb
cmp
inc
and
push
xor
adc
xor
js
xchg
pusha
pop
addr16
das
sbb
xlat
out
flds
mov
push
jle
in
sub
adc
cwtl
lret
add
pop
rcl
aam
jnp
add
cli
or
clc
xlat
out
mov
mov
clc
adc
test
push
aad
aaa
sub
xlat
mov
add
lea
and
cli
add
sub
or
mov
mov
mov
add
lahf
andl
sbb
dec
xchg
lcall
add
pop
mov
or
dec
and
inc
lods
mov
loop
sti
lods
pop
jns
loop
jo
sbb
pushf
fwait
rolb
es
sub
pop
outsb
ss
movsl
jne
lahf
jno,pt
and
js
in
shll
dec
jae
rclb
adc
add
xor
cmp
es
add
lods
daa
inc
lahf
nop
mov
sbb
pop
or
add
inc
xchg
add
fisttps
adc
adcb
cmp
push
fs
add
or
inc
sbb
add
stos
cmpsb
add
popf
cmc
call
mov
ja
jbe
sbb
xor
adc
icebp
jmp
cmc
test
adc
cmp
or
fiaddl
add
jbe
fistpl
mov
testl
add
mov
rcll
sub
cli
xchg
es
sub
xlat
and
push
arpl
insl
jmp
push
imul
mov
inc
loopne
sub
sbb
pop
mov
gs
xor
daa
add
xor
sar
add
inc
or
lahf
fsub
mov
or
pop
imul
inc
sub
jnp
nop
int3
test
push
cmpsl
sub
ss
insb
mov
pop
sub
jo
shll
lret
pop
std
fistpl
neg
flds
adcl
inc
jno
cmp
mov
push
pop
mov
loopne
push
inc
leave
dec
call
cmp
cmp
add
and
mov
jp
xchg
insl
gs
xchg
add
scas
mov
and
push
cli
mov
test
shlb
hlt
dec
lahf
mov
or
xor
add
adc
add
jne
xor
mov
push
push
icebp
fcomps
adc
insl
push
fdivrs
fidivrs
stos
lds
xchg
or
push
fcomi
adc
addr16
push
push
rclb
sub
shll
xor
add
inc
pop
mov
add
aad
and
outsb
pop
jo
add
cmp
or
add
dec
imulb
push
jbe
or
movsb
out
mov
cltd
push
xor
sbb
pop
lret
sbb
pop
lret
sbb
mov
popf
cmc
call
jl
into
cwtl
in
mov
mov
aaa
sub
rcll
sub
roll
and
add
or
data16
es
xchg
push
dec
xchg
mov
ret
lea
notl
adc
pop
jecxz
popa
aad
aaa
jl
add
adc
ss
pop
sti
fs
xchg
and
fwait
decl
ret
sub
add
and
cmovg
out
mov
jecxz
hlt
leave
js
xor
cmp
push
out
ror
and
xchg
mov
in
pop
rorb
insl
or
mov
and
shl
mov
lds
or
mov
movsl
nop
jae
in
push
add
and
mov
pop
jmp
shll
stos
nop
ljmp
dec
add
lahf
push
add
jno
add
int
jmp
mov
aas
jmp
mov
std
inc
mov
jl
loope
imul
nop
inc
jns
mov
jle
aad
jns
out
xlat
pop
cwtl
mov
cltd
ret
dec
pop
mov
mov
test
xchg
xor
sahf
outsb
into
sbb
and
push
pop
nop
push
mov
push
cmp
push
fnstsw
and
jl
imul
and
dec
jp
dec
ljmp
adc
pop
enter
and
and
fwait
and
and
push
cld
push
lds
imul
das
repz
arpl
pop
test
jg
pop
call
scas
popf
xchg
lock
lods
lahf
push
mov
jb
ret
mov
cmp
mov
mov
mov
hlt
mov
enter
push
test
daa
xor
int3
add
daa
gs
cmp
jl
lcall
mov
adc
inc
std
sbb
sti
add
pop
mov
rcr
jmp
adc
jl
out
and
push
sbb
xor
lock
xchg
push
rorl
pop
or
mov
call
xchg
jle
clc
test
or
jns
mov
int
jle
xor
mov
std
add
sub
popa
hlt
xor
mov
inc
cmp
clc
add
aad
mov
loopne
add
push
loop
movsl
mov
aad
ficomps
sub
add
inc
push
lock
aaa
or
ret
popa
and
leave
adc
cmc
call
movsl
mov
out
sbb
ja
pusha
and
imul
rep
filds
inc
call
cs
jae
cli
mov
inc
push
cmpsl
ds
dec
sarl
push
inc
ja
insl
sub
inc
fwait
mov
and
les
push
pop
xor
ljmp
lock
sub
ret
movsb
cmp
call
push
bound
mov
mov
mov
xor
add
pop
inc
enter
sahf
adc
jl
add
lahf
fmuls
push
mov
scas
daa
inc
das
clc
inc
inc
mov
jo
repz
sbbb
aas
mov
sbb
jnp
cmp
insl
push
insb
adc
sub
test
push
xor
and
inc
or
mov
xor
jp
and
out
leave
sub
xor
push
stc
ja
cmp
cmp
movsb
and
and
hlt
pushf
ficomps
xor
call
movsb
and
iret
cmp
mov
les
out
xor
in
adc
fidivrs
int
xor
mov
xlat
clc
inc
nop
jb
js
jne
and
mov
inc
jp
popf
jmp
adc
or
sbb
stc
ret
stos
mov
add
aad
pop
jmp
xlat
lods
inc
and
std
fwait
shlb
add
and
xchg
aaa
cwtl
pop
je
popa
sbb
test
scas
xlat
jl
jge
mov
aaa
sbb
ds
cmp
and
icebp
sbb
jle
imul
nop
xor
iret
jno
jl
fsubrp
mov
repz
mov
ja
and
sbb
test
lods
xor
push
fbstp
mov
cmp
hlt
repz
es
mov
in
adc
xchg
ss
dec
shll
push
add
jnp
pop
inc
enter
int3
pop
or
stc
lret
pop
xor
pop
sub
push
mov
and
in
add
and
roll
add
and
add
jno
inc
xor
sbb
and
scas
dec
sbb
loopne
mov
fmull
repz
imul
movsb
inc
outsb
aaa
sti
divl
dec
lret
add
dec
inc
pop
cmp
mov
outsb
sbb
jle
dec
add
xor
addr16
mov
daa
add
cltd
xchg
jl
add
mov
adc
jmp
xchg
popf
inc
popf
cltd
xchg
pushf
xor
shlb
mov
dec
fsubl
call
push
call
lods
xor
sbb
stos
rorl
pop
sub
adc
add
lods
repz
pop
test
adc
pop
pop
sbb
stos
and
jp
sbb
dec
jne
jo
daa
or
stos
xchg
jge
push
daa
and
jae
mov
clc
or
ljmp
sub
cltd
popa
pushf
js
adc
js
and
add
mov
sub
pusha
and
cmc
in
cltd
jne
push
sar
cmp
in
repz
es
mov
sub
dec
in
pusha
add
sub
push
mov
add
or
inc
pop
sub
cmp
or
cmp
js
add
in
mov
jmp
rorl
loop
pop
sub
add
pop
lret
popf
enter
out
dec
xor
fldl
in
mov
add
inc
mov
xor
jle
adc
mov
pop
cmpl
dec
and
push
xchg
add
mov
data16
cmp
outsl
xor
out
or
inc
sbb
dec
test
in
inc
icebp
sbb
ss
scas
jne
sbb
pop
and
in
imul
pop
or
out
into
jns
arpl
dec
sub
iret
sahf
loope
mov
rorb
jno
je
jecxz
sub
cs
ja
in
loopne
dec
int
std
movsl
adc
cmp
or
jno
inc
and
jl
mov
inc
int3
or
sub
inc
cld
in
pushf
lahf
push
out
mov
xor
in
es
popa
cmp
mov
pop
mov
in
dec
test
mov
dec
jp
enter
add
iret
test
daa
add
in
mov
stc
pop
jbe
lods
sbb
cmp
dec
or
cwtl
dec
je
call
push
or
jne
add
imul
jo
xor
adc
xor
xchg
xor
notl
hlt
and
ss
xor
push
add
out
cltd
mov
dec
xor
sarl
cmc
add
adc
int
push
and
and
into
test
cmp
addr16
xor
sahf
jl
and
xor
sbb
mov
cmpsb
dec
and
ficompl
and
pusha
sbb
outsl
aad
ret
pop
jecxz
mov
inc
sbb
and
mov
in
sub
rcll
jmp
mov
sub
fwait
add
push
sub
cltd
das
dec
aas
outsb
and
testl
or
pop
xchg
aaa
or
test
or
je
add
cltd
test
adc
or
pop
adc
cmp
xor
xchg
imul
adc
es
xlat
sub
mov
pop
call
adc
sti
push
and
add
sbb
mov
in
adc
pop
xor
hlt
fistl
in
movsl
xchg
jo
push
xor
call
test
out
repz
mov
add
inc
mov
pop
jbe
call
lds
xchg
mov
adc
inc
cmp
inc
pop
and
insb
pop
fwait
mov
xchg
test
inc
jbe
jmp
jl
lock
insl
mov
mov
pop
inc
pop
mov
fs
sbb
cmp
cmp
jle
imul
sbb
pop
sbb
es
mov
jge
movsb
repz
xchg
cmp
mov
xorl
push
scas
jmp
jecxz
dec
jnp
push
call
shl
mov
mov
gs
fsub
movsl
fldl2t
in
and
sbb
decb
aaa
cwtl
xor
rcl
sub
fwait
jne
subb
mov
je
ja
mov
sub
cmp
aaa
sub
dec
xlat
sbb
push
push
mov
fucom
and
mov
jne
sbb
aad
jno
es
pop
cltd
mov
or
inc
mov
lods
mov
dec
push
jae
and
jmp
rolb
cmc
mov
pop
out
add
sub
jecxz
jl
in
mov
mov
popf
test
adc
push
jmp
jp
into
dec
aaa
aaa
sahf
popa
stc
xchg
movsl
jecxz
mov
mov
jmp
cltd
add
stos
xor
cli
out
out
dec
lock
cmp
lahf
out
pop
xchg
pop
test
loop
add
cmp
sar
bswap
and
lods
aas
sti
and
fwait
orl
sbb
dec
icebp
es
ss
xorb
stc
pusha
mov
lds
push
cld
out
out
aam
push
sbb
jl
cmp
or
or
xchg
scas
adc
xchg
mov
insb
popa
es
pusha
push
aam
mov
or
lret
inc
orl
xor
insb
jg
out
jle
ljmp
xor
and
movsb
cmp
in
or
hlt
aad
data16
push
pushf
add
les
sub
adc
mov
add
push
mov
andl
dec
push
aaa
sbb
neg
ret
cwtl
dec
or
mov
cwtl
add
mov
push
push
popa
xor
movsb
pop
sub
or
or
push
insb
cmpsb
sahf
nop
xor
push
xor
ret
in
push
add
pop
sub
lahf
mov
sbb
loopne
and
jmp
cld
adc
and
inc
lahf
push
sub
jne
mov
xchg
ljmp
sti
push
inc
xchg
or
dec
adc
and
out
and
pusha
in
inc
and
jae
sahf
push
das
test
pop
fstp
daa
push
into
out
mov
cmc
imul
or
jne
je
inc
and
test
cltd
xchg
hlt
xlat
pushf
js
fdiv
scas
fmuls
push
movsl
sbb
popa
dec
dec
mov
sub
xchg
test
cmp
mov
dec
stc
and
test
adc
mov
sub
push
sub
cmp
loope
flds
add
adc
cmpsl
aad
inc
je
loope
mov
and
ja
xor
add
adc
lock
mov
cmp
mov
push
pop
mov
arpl
push
loope
insl
rclb
movsl
mov
sbb
push
bound
jg
adc
je
js
xchg
xor
pusha
sub
mov
cld
jne
push
inc
jmp
jbe
mov
scas
adc
xchg
pop
sbb
shrl
mov
push
repz
pop
es
cld
adc
pop
xor
jl
xorb
mov
ret
mov
xchg
cmp
mov
in
xchg
sbbl
add
aaa
js
dec
mov
mov
mov
adc
add
add
out
jle
andb
mov
mov
outsl
ss
in
sub
jae
mov
pop
daa
in
call
add
xor
and
les
cmp
loope
pop
push
or
lds
sbb
cmpsl
in
add
adc
loopne
cld
pop
push
andl
jbe
xor
int3
add
cmp
and
or
inc
adc
cld
addr16
lahf
jge
popa
notl
push
js
clc
daa
xchg
or
push
std
je
xor
sub
or
sub
pop
adc
sub
and
add
add
cmc
dec
test
data16
add
sub
adc
xor
aad
insb
test
cwtl
jge
xorb
aad
pop
cmpsb
hlt
pop
add
mov
adc
inc
pusha
gs
inc
xchg
push
adc
and
mov
inc
mov
pushf
daa
les
mov
es
pushf
or
frstor
insb
subl
cmpsl
movsb
divb
lock
ret
leave
es
cs
into
sub
push
ds
push
sub
lds
mov
sahf
mov
xchg
popl
mov
je
jmp
inc
and
or
xor
mov
add
inc
adc
rcll
hlt
icebp
push
mov
push
aad
in
movsl
je
adc
xchg
xchg
sarb
sbb
mov
test
add
cmpsl
mov
jmp
push
div
icebp
mov
push
mov
xor
mov
rorl
stos
xor
in
mov
adc
cmp
dec
sbb
jo
inc
lods
pusha
mov
cmpsl
popa
adcb
mov
inc
mov
fs
leave
cmc
cmp
iret
gs
push
xor
es
mov
je
jge
cmp
daa
push
subl
ss
add
mov
loopne
pop
pop
mov
lahf
popaw
inc
enter
nop
bound
sbbb
mov
xchg
pop
movb
sarb
lods
pop
or
cld
push
je
xor
xor
dec
out
sub
adc
pop
push
inc
adc
dec
cmp
mov
adc
dec
imul
cmp
adc
or
add
aaa
push
inc
aad
dec
movsb
sbb
outsb
jl
pop
add
inc
imul
pop
push
xchg
test
ds
addr16
sbb
jns
push
sbb
mov
shll
and
jle
pop
or
hlt
mov
test
mov
add
inc
dec
sub
push
jl
mov
push
gs
xor
cld
mov
inc
cmpsl
mov
shll
repz
sub
movsl
jns
mov
mov
fnstsw
sbb
cld
adc
addr16
push
rcl
fnstcw
outsl
mov
jg,pt
jecxz
jl
ds
mov
ja,pt
mov
xchg
xor
cmpb
adc
test
jb
sbb
test
xchg
int
sbb
adc
dec
sub
shlb
dec
repz
dec
pop
ja
insb
push
gs
rolb
adc
in
xchg
js
push
add
sub
js
pushl
cs
gs
cltd
mov
xor
dec
or
pop
jmp
push
mov
fsubs
es
push
and
and
hlt
ss
movsb
sub
mov
mov
mov
ret
pusha
dec
add
add
push
sbb
stc
mov
xor
out
jmp
outsl
fwait
and
jns
movsb
xor
add
ja
push
sub
jl
push
shll
add
adc
mov
and
dec
pop
cmp
adc
or
out
mov
xor
xchg
add
bound
mov
mov
movsb
lahf
pop
sub
cwtl
repz
add
aam
lahf
cmp
andnps
ror
lods
mov
cmp
cmp
daa
mov
fs
popa
daa
gs
jmp
cmc
test
inc
std
push
pushf
jg
in
aaa
loop
jecxz
lods
pop
mov
pusha
mov
mov
ss
mov
daa
lds
stos
mov
ss
stos
or
outsl
in
xor
pusha
mov
mov
sbb
add
je
shrb
mov
mov
push
sub
fs
cmp
inc
mov
nop
jo
push
xchg
push
add
mov
shll
and
pop
jmp
adc
movsl
mov
aad
cmp
mov
lret
and
aam
pop
les
inc
cmp
movsb
mov
mov
enter
fisubs
mov
cmp
jo
mov
xor
jbe
jmp
rorl
in
pop
mov
and
mov
mov
cmp
jno
and
movsl
fs
push
sbb
scas
cwtl
lds
cmc
dec
repz
repz
mov
sub
push
mov
jns
add
sub
add
adc
rorl
xor
pop
adc
and
dec
in
mov
sbb
ss
mov
cmc
sbb
xchg
cmp
addr16
jne
xchg
insl
scas
mov
mov
push
jbe
mov
xchg
xorl
adc
jae
cwtl
nop
pop
daa
cmp
data16
fucomip
sub
imul
push
mov
cmp
jl
bound
notb
jmp
push
cmp
jp
ja
jmp
dec
int3
sub
lcall
add
aaa
and
sub
aam
cmpsl
mov
in
mov
sbb
add
jno
lods
lods
jne
inc
and
test
enter
pusha
cmp
and
mov
divb
add
aaa
in
or
xor
lds
cwtl
mov
bound
pusha
and
fwait
notb
add
sbb
mov
lahf
movsb
dec
mov
pop
adc
es
inc
add
int
fsubl
sub
inc
sub
icebp
into
sbb
xor
add
popa
xor
mov
lock
int3
jae
xor
inc
and
push
cmpsl
cmpsb
iret
gs
fldcw
test
es
jnp
mov
pop
in
push
sub
call
and
cmp
jae
rclb
dec
adc
jne
sub
clc
push
pusha
push
cmp
cltd
hlt
xchg
dec
sub
cmp
shll
add
mov
and
sbb
push
dec
int
mov
fdivs
or
xor
and
and
movb
mov
ss
dec
sbb
aaa
adc
movsl
popa
xor
lcall
cmp
sub
mov
push
lods
cmp
inc
enter
mov
xor
cmp
pop
dec
push
xor
imul
iret
xor
cmpsl
jns
cmpsl
cmc
pusha
ror
sbb
jp
sbb
mov
add
pop
clc
mov
aam
xor
cmp
mov
cmp
jns
push
es
xorl
fsin
mov
repnz
sahf
loopne
ret
fisttpll
mov
and
jb
ja
repz
cmp
add
cmp
sbb
dec
push
addb
inc
lods
push
cmpsl
pop
mov
pop
test
add
mov
jmp
lds
sbbl
es
lock
adc
cmpsl
test
add
add
dec
imul
dec
test
jno
adc
mov
nop
in
mov
add
mov
mov
inc
add
test
out
sbb
xchg
and
imul
mov
mov
sahf
fucom
das
ljmp
shll
pop
mov
in
loopne
loop
push
cmc
movsb
shlb
repnz
jae
and
mov
and
insl
cmc
scas
add
lock
mov
mov
movsl
cli
push
aaa
jl
pop
add
pop
movsl
ret
cld
jl
fstpl
repnz
fs
mov
pop
and
xchg
cmp
jo
shlb
fsubrs
and
movsl
imul
stos
dec
clc
sbb
je
sub
ljmp
cltd
pop
sbb
inc
mov
adc
pushf
sbb
adc
jle
jl
adc
mov
jne
pop
js
xchg
fstp
test
pop
and
adc
idivl
notl
cltd
xchg
lods
add
mov
inc
sbb
lret
arpl
clc
or
add
inc
les
int
sub
mov
mov
call
sbb
mov
lods
mov
sub
rcrl
jae
in
sub
movsl
hlt
fsubl
mov
sub
xor
push
mov
clc
std
adc
popf
shl
dec
push
jns
mov
and
pop
rcr
mov
aam
add
cmpsl
mov
sub
mov
xor
xchg
out
nop
lds
cld
mov
test
add
push
sar
lahf
sub
icebp
pop
retw
xchg
lahf
movsl
outsl
jbe
jle
out
ss
dec
xor
loop
bound
mov
sbb
cmp
fcoms
cmp
adc
dec
in
xchg
sahf
mov
sub
in
mov
es
cmp
mov
dec
fdivs
hlt
out
lods
lahf
outsb
xorl
in
push
sbb
cmpsl
push
mov
jl
dec
jp
sub
es
imul
or
pop
mov
dec
pop
sbb
fnstcw
pushf
push
cmp
pop
mov
ljmpw
jl
in
dec
aaa
iret
xchg
sbb
divb
inc
jnp
cmp
loope
xor
aam
jl
loope
sbb
xor
push
or
add
sub
mov
rolb
add
mov
pusha
icebp
mov
and
sbb
in
cmp
stos
xor
xchg
push
or
popf
rorb
mov
leave
sub
lret
ja
xchg
cli
and
add
mov
cmp
loop
lock
mov
sub
nop
add
mov
mov
mov
inc
xchg
jno
fwait
mov
iret
scas
scas
mov
stc
and
test
iret
pop
and
xchg
sbbb
std
dec
sub
leave
jmp
outsb
outsl
in
in
outsb
dec
pop
movsl
push
jbe
div
aaa
fadd
inc
ljmp
insl
aaa
loop
xchg
mov
cmc
add
mov
and
mov
call
ja
rep
in
daa
cmpsb
xchg
lods
jae
aam
roll
sbb
shll
cmpsl
mov
test
movsl
movsb
xchg
add
daa
push
adc
pop
loop
or
sub
scas
adc
test
fidivs
xchg
mov
lcall
add
addb
add
pop
jg
out
bound
cli
dec
movsb
je
lret
fcomps
xor
and
push
jne
negl
aas
adc
imul
pop
fbld
int
rcrl
or
addl
mov
add
rorb
mov
xlat
inc
iret
push
xlat
jp
mov
push
push
pop
cld
xorl
outsl
push
push
xor
pusha
les
fs
cmp
ja
movsb
mov
ss
add
cld
pop
jecxz
out
std
xchg
sbb
movsb
divb
adc
cltd
das
or
nop
mov
dec
test
xlat
andb
xor
lret
dec
movsl
lock
add
ds
int3
cmpsb
pop
inc
and
lock
xor
pop
mov
or
ret
fidivrs
aad
cmp
push
mov
or
stc
cmp
cmpsl
ss
xchg
je
lods
add
and
pop
push
aaa
or
cmp
add
mov
lret
inc
in
pop
repnz
adc
cmpsl
enter
sub
mov
mov
push
aad
mov
dec
or
jbe
inc
iret
add
es
sub
jmp
daa
adc
add
stos
adc
adc
xchg
ds
mov
lea
mov
jp
push
std
daa
in
call
xlat
cld
lret
pop
cld
or
jns
jmp
push
aas
mov
out
xchg
lods
push
pushf
test
pop
addr16
mov
cld
or
cmp
lods
dec
cmp
jne
push
outsb
daa
jp
xchg
test
clc
add
push
pushf
and
xchg
movsl
xchg
sbb
xchg
inc
daa
xlat
push
sub
hlt
in
adc
pushf
mov
mov
and
aad
sbb
lcall
popa
aad
lahf
movsb
shrl
adc
loop
mov
int
pop
mov
aam
and
mov
mov
jmp
sbb
in
cmpsb
cltd
lea
jle
aad
clc
lods
rcr
add
cmp
mov
jle
and
jne
rep
xor
decl
lcall
or
gs
call
adcb
cmc
sub
ds
mov
out
int
mov
and
sbbb
push
test
and
in
clc
movsl
lds
out
xchg
add
cli
dec
dec
lods
push
or
out
shr
cltd
cld
rorb
cmc
cmp
xor
mov
sub
add
cld
and
test
mov
out
pop
loop
and
mov
mov
dec
loope
pop
dec
mov
std
movsl
stos
insl
cltd
mov
cs
push
mov
subb
lods
xor
out
sahf
nop
test
aad
rorb
fwait
push
mov
and
adc
xchg
pusha
push
enter
leave
mov
dec
and
test
cmc
pusha
adc
stos
xchg
fnsetpm(287
mov
mov
xchg
cmp
or
lahf
in
shlb
dec
and
and
test
jae
je
or
scas
pop
push
pop
adc
dec
xor
not
adc
rep
shl
pop
inc
mov
sahf
xor
popa
inc
sub
mov
lock
bound
inc
pop
pop
sbb
or
pushf
orl
sbb
pop
xorl
adcb
test
into
in
and
jo
mov
inc
push
scas
sti
ds
cwtl
imul
cmc
mov
or
and
cmp
outsb
pusha
test
clc
lahf
add
incl
cmp
fbld
test
push
das
mov
mov
test
dec
sti
sti
push
mov
xor
cmp
jge
loope
mov
and
dec
mov
xor
cltd
or
add
dec
and
cmp
add
sbb
jmp
ja
sbb
rclb
test
pop
lds
stc
mov
loop
inc
jle
stc
inc
pop
sub
sahf
adc
dec
outsl
inc
mov
dec
cmpsl
lretw
divl
mov
and
mov
add
add
cmc
mov
mov
aaa
lahf
lds
roll
stos
addr16
add
repnz
cmp
fimull
aaa
mov
out
and
scas
imul
cmpb
sbb
test
dec
push
ss
adc
in
aaa
icebp
ljmp
nop
pop
je
mov
jae
dec
outsl
push
pushf
nop
aas
mov
jne
enter
in
lret
inc
mov
in
jns
push
jmp
mov
cmp
dec
addl
xor
mov
in
and
ja
push
cld
inc
xchg
movsb
call
imul
stc
xor
or
cmpsb
push
jle
mov
loope
daa
push
sar
push
jns
cmp
dec
lods
jns
inc
push
lcall
jns
sub
inc
inc
cmp
jle
jb
mov
mov
xchg
mov
add
fs
and
out
cmc
jbe
mov
fldcw
xchg
icebp
push
push
add
out
mov
xchg
shrl
mov
mov
mov
mov
push
mov
jbe
enter
add
in
jmp
mov
or
dec
mov
and
or
nop
add
mov
out
add
cmp
jl
mov
mov
push
mov
inc
scas
pop
mov
mov
jae
sbb
fstpt
faddl
mov
inc
dec
rcrl
lock
lcall
adc
mov
sbb
mov
inc
jno
call
add
xor
xor
xor
movsb
das
test
xchg
and
movsb
out
hlt
imul
loope
movsb
jbe
cmp
popl
gs
and
and
pushf
xchg
int3
sub
sarl
jl
in
cmp
and
loope
add
xchg
imul
inc
xor
xchg
aam
xor
add
mov
movsb
ss
call
xor
jl
fs
dec
mov
xor
mov
push
scas
sbb
mov
inc
test
out
add
sti
xchg
and
lods
cmp
fsubs
cmpsl
sub
cmp
cmp
jecxz
into
pop
or
lds
mov
cmc
and
sub
xor
sbb
shl
pop
sbb
and
stc
lods
sbb
iret
inc
or
mov
pushf
add
adc
rcll
daa
xor
out
mov
in
xor
es
lds
adc
xchg
movsb
jl
ljmp
jbe
in
push
mov
test
mov
add
add
inc
mov
add
daa
test
ss
pop
fsubl
ret
push
mov
rcll
mov
test
cmp
cmp
lods
pop
mov
xchg
out
jmp
and
cmp
mov
ds
and
dec
pusha
cmc
or
mov
xchg
dec
jmp
push
cld
mov
stc
push
movsl
cld
xor
mov
pusha
shll
dec
push
dec
scas
jle
jle
inc
push
mov
sub
xor
add
movl
clc
std
inc
or
mov
or
loopne
cltd
mov
or
cld
dec
or
jbe
lock
or
dec
in
lret
push
dec
ret
jmp
sbb
repnz
push
stos
fdivrl
pop
push
xor
lds
ret
xchg
loopne
nop
data16
mov
sub
and
cmp
xor
push
divb
cmp
push
ss
in
mov
ljmp
cmp
and
mov
inc
shrb
lds
xchg
shll
nop
pop
std
xor
imul
enter
and
push
push
add
mov
mov
cmp
jne
dec
dec
les
pushf
cli
sub
fstl
and
aam
xor
ror
inc
into
xor
dec
push
andb
sub
out
dec
leave
dec
push
xlat
inc
mov
ja
mov
mov
xchg
mov
pop
arpl
jbe
movsb
cmp
push
rcll
pop
xor
sbb
mov
and
repz
jg
inc
out
pop
jo
dec
in
mov
js,pn
insl
jbe
and
mov
jge
lods
cmp
outsl
ja
in
xor
pop
dec
fwait
test
jo
sahf
movsl
xchg
cli
data16
imul
push
mov
in
imul
or
xor
and
fs
testl
and
mov
add
fildl
cmp
inc
push
or
std
and
cmpsl
jbe
mov
xor
xor
test
cmp
sub
mov
mov
mov
mov
and
xor
mov
and
in
in
test
ds
and
cmp
mov
ja
in
aad
ficomps
outsl
imul
xchg
arpl
jo
pop
fbld
gs
mov
adc
into
jae
mov
pushf
pusha
nop
movsl
aaa
dec
insl
loopne
jb
pop
cmp
push
iret
clc
push
call
cltd
and
xchg
mov
jbe
sub
jo
sub
sub
rolb
inc
adcb
sbb
sarl
push
xchg
mov
test
xor
push
inc
inc
sbb
nop
add
jne
daa
and
int3
lret
outsb
mov
aaa
insb
pop
inc
hlt
jne
cmp
in
xor
sub
mov
dec
cmp
outsl
push
adc
fwait
mov
xor
fwait
mov
mov
and
mov
and
cmc
or
sbbl
test
maskmovq
testl
xor
pop
pop
movsb
ret
jge
in
mov
movsb
pusha
ljmp
pop
sbb
cmp
cmp
and
xor
fsubrs
mov
cmp
int3
in
adc
and
stc
and
add
enter
insl
sub
aad
popa
mov
cmp
sub
pop
imul
dec
and
inc
ss
hlt
mov
and
fstpt
xor
adc
inc
dec
sub
ss
pusha
sbb
cs
jl
icebp
push
sub
push
es
iret
data16
mov
mov
daa
imul
push
mov
das
mov
inc
sub
push
daa
push
add
cmp
call
cltd
mov
and
fmuls
movsl
push
mov
and
test
repz
add
leave
je
jbe
xor
cmc
cld
mov
daa
aad
xor
xchg
imull
mov
mov
mov
jno
rcrl
loop
mov
hlt
mov
or
mov
fwait
push
bound
rol
cmpsb
daa
nop
loop
aaa
add
nop
cmp
inc
std
in
test
mov
mov
push
int
lret
sbb
pop
bound
add
aaa
stc
cmp
sbb
pop
enter
and
mov
xor
sub
add
dec
lret
outsb
fsub
lahf
push
cmc
and
cmp
aam
xorl
loope
movsb
push
mov
aad
inc
jmp
xchg
in
iret
loope
mov
shll
adc
loope
mov
mulb
hlt
ss
movsl
mov
xor
push
sahf
nop
pop
std
loope
cmc
cmp
push
mov
movsb
mov
cmp
push
add
popl
jle
cmc
cmp
shll
push
ja
mov
mov
cmp
es
and
jb
mulb
xor
repz
inc
xchg
adc
push
jmp
xchg
bound
int
clc
out
dec
fiaddl
or
shlb
fs
cltd
iret
popf
in
std
movsl
cli
mov
mov
xor
cmp
mov
and
and
mov
dec
sub
pop
adc
sub
insb
leave
fstpl
inc
or
add
add
xchg
shrl
shl
idiv
ret
in
adc
mov
sahf
cs
repz
pop
add
add
cmc
sub
rcl
out
mov
sbb
mov
jmp
loopne
fisubl
neg
nop
stc
inc
jbe
pop
jmp
mov
cmp
cmp
dec
mov
add
add
mov
sbbl
pop
cmc
sbb
stc
xchg
mov
arpl
out
jno
call
add
adc
or
pushf
je
pusha
rcll
ret
cld
hlt
rolb
mov
mov
inc
sbb
xor
movsb
push
ret
pop
in
sbbl
aaa
movsl
dec
stc
jno
into
insl
cwtl
mov
mulb
cmpsl
in
loopne
push
icebp
jbe
in
push
iret
cmp
repnz
aad
xorb
adc
xor
mov
daa
leave
pop
mov
mov
out
cld
mov
ret
adcb
es
jl
mov
and
mov
xchg
imul
push
pop
sub
jmp
pop
sub
push
std
fs
jnp
inc
popa
cwtl
shll
adc
sub
aad
shll
popa
fnstsw
or
mov
sbb
jnp
cmp
cmp
ja
movsl
mov
inc
aas
stos
cmpsl
add
and
cltd
sti
loopne
repnz
outsl
cmp
push
mov
sub
cmp
and
adc
pop
sbb
addr16
inc
popa
dec
aam
cmp
cmp
xorb
xchg
mov
jnp
fwait
sbb
fcompl
and
scas
inc
int3
add
xor
pop
outsl
mov
ds
lds
in
adc
or
aaa
sub
clc
addr16
aaa
in
movswl
test
jb
scas
cmc
push
daa
jo
loopne
mov
dec
nop
or
in
inc
and
sbb
mov
sub
daa
add
mov
inc
and
mov
and
mov
push
das
jo
stos
repnz
mov
cmp
pop
mov
mov
and
add
mov
ja
mov
test
mov
sub
jle
sbb
pop
out
fimuls
mov
xchg
test
mov
mov
call
outsb
or
push
clc
mov
div
pop
leave
es
and
pop
movsl
leave
aaa
sub
es
jg
cmpsb
sbb
adc
mov
ds
xorb
or
mov
int
add
jl
ss
add
add
cmp
int
jl
sub
mov
xor
shll
and
loope
and
cmc
sub
mov
js
add
mov
je
clc
xor
hlt
or
cmpsl
movsl
ds
or
lahf
mov
push
lahf
pop
lock
push
pop
cmp
xor
add
movb
lcall
sub
mov
movsl
mov
xchg
mov
test
in
adc
stos
push
pushf
inc
iret
and
lahf
mull
dec
adc
push
cmp
imul
jnp
xorb
inc
jb
mov
insl
int3
xor
or
push
pusha
adc
xchg
adc
push
push
test
jle
sti
mov
dec
add
xchg
icebp
movsl
call
cmp
out
popa
fcmovu
jp
fidivrs
call
xor
addr16
jnp
in
gs
call
fdivrl
sbb
mov
aam
jbe
and
in
out
mov
loopne
and
or
mov
rcrl
enter
lret
cmp
or
in
xor
and
insl
adc
dec
cli
cmpsl
ja
mov
mov
sub
fcmovnu
add
jl
cltd
popf
mov
out
dec
sub
mov
aas
inc
or
cmc
push
mov
add
pop
sbb
push
inc
fdiv
inc
mov
push
pop
and
mov
pop
and
sbb
call
adc
addl
pop
cmp
mov
pop
je
mov
and
add
daa
dec
ret
add
jo
and
data16
ljmp
adc
push
call
lods
int
shl
out
imul
pop
imul
nop
mov
jmp
stc
iret
je
loopne
sbb
icebp
aaa
lock
xor
cli
popf
sbb
cmpsb
jmp
pop
test
and
icebp
pop
jo
stc
mov
cld
cltd
xor
push
jo
movsl
dec
in
pop
cli
orb
mov
cs
xchg
pushf
dec
cmp
lods
ret
popf
lcall
js
add
and
jo
mov
jb
push
sbb
leave
sahf
or
or
and
and
sub
out
repz
fsubrs
dec
add
movsl
shll
cwtl
clc
add
movsl
icebp
add
cmpsl
push
mov
inc
clc
cmp
cwtl
xor
sahf
mov
nop
daa
jo
cmpsb
notl
test
rclb
inc
adc
lods
mov
test
add
cltd
out
xchg
or
cli
fwait
nop
inc
pop
mov
and
fisttps
inc
loop
inc
rorl
xchg
and
movsl
test
sarb
mov
mov
es
push
ficoml
adc
pop
std
gs
cmp
ja
rorl
pop
out
mov
je
pushf
jecxz
gs
sbb
filds
pop
cli
daa
clc
jo
aas
fsubs
fsubr
rol
cmp
dec
push
push
sar
loop
call
cmp
sub
adc
push
daa
imul
adc
xor
movsl
fcompl
inc
adc
mov
cld
cmc
enter
mov
repnz
sahf
mov
jnp
adc
out
jbe
cwtl
xor
sbb
out
test
mov
add
jo
out
and
rorl
mov
scas
pushf
push
rorl
testb
mov
push
sbb
mov
dec
ret
pusha
stos
mov
pop
into
icebp
pop
mov
mov
jae
std
ret
mov
xor
add
jmp
push
insl
pop
cwtl
mov
dec
dec
and
int
mov
movsl
mov
repz
pop
in
jne
data16
and
leave
ja
inc
in
xor
mov
sahf
or
and
add
loopne
les
push
cmc
nop
cmc
scas
ljmp
test
xor
movsb
push
cmp
es
test
sbb
dec
jno
mov
sbb
adc
add
lret
push
mov
cmp
cmc
mov
ret
in
sti
fmull
es
aam
ja
xorb
push
mov
scas
movsl
push
es
jg
or
sti
or
push
ficoms
mov
repz
pop
push
or
fisubrl
and
push
movaps
jecxz
sahf
sahf
cld
xchg
in
mov
insl
ds
in
out
xchg
lret
mov
adc
lret
mov
jne
cmp
jns
mov
arpl
in
in
xchg
cmpsb
ljmp
xor
fnsave
cltd
sub
daa
xor
sbb
scas
test
cmp
pop
lods
stc
sub
jns
cmc
adc
cmp
incl
test
sbb
or
sub
pop
or
pop
inc
sub
ss
push
loopne
lds
movsl
dec
pop
out
inc
xor
lahf
xor
movsb
pop
pop
subl
push
bound
cmp
dec
cmp
push
shll
xor
or
mov
pop
push
fcmovbe
mov
adc
sbb
pop
insb
adc
or
xor
inc
sbb
sub
inc
aam
jge
call
in
pop
add
or
jg
sbb
sbbl
gs
mov
cmp
mov
clc
jmp
push
std
dec
mov
push
lahf
insl
jbe
sub
daa
and
xor
fwait
aaa
arpl
roll
sbb
mov
sahf
jo
cmp
adc
mov
mov
cli
sarl
mov
pop
sti
mov
adc
into
mov
call
inc
push
dec
iret
xchg
mov
mov
xchg
movsl
cmp
or
dec
fldt
push
scas
repz
fsubs
mov
lods
icebp
mov
movsl
sbb
stos
mov
das
loope
jge
in
dec
mov
cltd
mov
mov
pavgw
adc
ds
and
jecxz
enter
es
pop
mov
mov
adc
mov
lds
aad
subl
nop
std
add
add
xchg
mov
or
adc
pop
push
das
and
add
sbbl
in
lock
sbbb
fsts
subb
dec
nop
and
jae
test
in
fdivl
xlat
sar
dec
cmp
mov
call
mov
jmp
inc
cmp
sub
inc
cmp
inc
cmp
xor
sub
dec
mov
jae
sub
cmp
hlt
or
sbb
cmc
fs
ja
ror
scas
sub
add
sar
test
pop
in
cs
in
cmpsb
xchg
es
push
into
aaa
and
pop
and
xor
dec
rorb
std
push
loope
xor
jns
ds
mov
pop
mov
loope
stos
xlat
xor
repz
cltd
jmp
push
mov
mov
jae
jnp
dec
or
mov
in
mov
paddq
pop
std
out
movsl
iret
shrb
imul
dec
ret
xor
jge
sbb
pop
lahf
aaa
ja,pn
and
pop
mov
cmc
cmpsb
sahf
std
mov
jle
inc
clc
mov
inc
mov
ret
je
pop
mov
sbbl
adc
add
add
mov
jo
mov
test
repnz
fstpl
into
adc
mov
or
xchg
mov
add
sahf
dec
add
sub
mov
mov
push
add
testb
nop
clc
loopne
mov
mov
sahf
pusha
outsb
std
add
dec
xor
pop
leave
fs
cld
out
fisttpll
ljmp
jne
xchg
jle
sub
mov
jg
xor
lods
jmp
std
jle
fwait
std
fisubrs
mov
cmp
xor
aaa
aad
test
push
roll
mov
rolb
jmp
add
aam
repz
push
cmp
mov
mov
test
sbb
pushfw
loop
std
in
jo
cmp
mov
inc
loope
in
xor
push
dec
ja
and
jns
add
add
mov
cmp
daa
out
ja
sub
outsb
cld
xorb
add
loope
jg
std
and
lret
stc
out
mov
cmp
aaa
jg
insb
cmp
push
sbb
ss
jl
repz
movsl
xlat
aam
push
mov
lcall
jge
loopne
gs
out
inc
mov
dec
test
add
dec
in
negl
bnd
or
cmp
iret
cld
xchg
jp
push
jne
addl
cmp
xor
mov
ret
adc
jg
mov
sub
mov
loope
test
add
cmp
cmp
and
fs
adc
loope
cmp
aad
pop
dec
rolb
loopne
cwtl
or
xchg
es
dec
xchg
add
icebp
daa
lahf
lods
xchg
lock
lock
mov
stos
jmpw
fs
push
push
sbb
jp
lret
cld
xchg
jge
loope
pop
mov
ret
and
imul
inc
pop
dec
and
nop
cmp
fcoml
cmp
sub
inc
icebp
xchg
inc
sbb
cmp
dec
push
daa
cmp
out
push
daa
int
sbb
add
add
mov
fistps
aam
mov
inc
xchg
movsl
sub
es
push
movsl
cmp
jmp
je
aad
or
test
lcall
or
push
sbb
jl
xor
mov
and
lea
pusha
add
mov
jmp
daa
inc
and
and
dec
sub
movsl
mov
add
popa
mov
icebp
add
ret
test
mov
ss
inc
test
adc
sbbl
sbb
dec
sbb
lahf
jle
and
iret
test
insb
in
pop
mov
subl
divb
aaa
xchg
sub
imul
cmp
sti
std
adc
adc
std
or
pop
inc
xor
leave
xchg
jmp
loop
jbe
mov
jb
adc
pop
fadds
mov
js
imul
rcl
inc
call
out
xchg
cmpsl
or
jb
and
adc
popf
xchg
push
mov
xor
jb
imul
insb
cmp
sub
sahf
mov
cmpxchg
shrl
bound
lds
dec
add
push
adc
jne
cmp
jne
cli
in
sbb
mov
insb
ffreep
adc
sbbb
mov
jns
dec
leave
xchg
xor
push
dec
push
ret
dec
ja
cwtl
loop
xchg
or
repnz
adc
add
scas
test
or
pop
inc
mov
dec
inc
mov
and
and
sbb
push
in
or
mov
jns
sbb
dec
test
movsl
aad
rcrl
testl
pop
orb
iret
push
sti
sbb
inc
std
jae
addb
in
jmp
inc
cltd
out
decb
shll
outsl
xchg
cmc
sbb
add
jl
xchg
test
fdivrl
aam
inc
mov
cltd
sbb
mov
clc
xor
cltd
jecxz
pop
rcrb
mov
mov
push
fmuls
roll
dec
jnp
insl
in
movsb
stos
das
xchg
movsl
inc
push
jmp
jb
gs
je
enter
dec
mov
adc
je
jmp
js
test
cltd
dec
dec
pop
mov
clc
xchg
sbb
clc
ja
loop
or
mov
aas
call
daa
add
sub
mov
mov
bnd
in
mov
xchg
pushf
pop
cmpsl
daa
adc
pop
and
sub
xchg
leave
std
sub
repz
add
add
nop
push
xor
mov
hlt
mov
fadds
mov
mov
mov
lahf
leave
mov
push
aaa
and
popa
out
test
int3
lock
sbb
gs
gs
pusha
lea
fwait
movd
sub
sub
jnp
adc
dec
icebp
jb
sti
mov
mov
adc
mov
addr16
xchg
adcl
add
pop
push
add
xchg
movsl
mov
and
lahf
mov
cmc
ds
movsl
add
and
in
daa
add
les
or
orb
cmp
or
sbb
jge
push
cmp
ret
mov
cmp
es
mov
loopne
inc
test
and
dec
ds
shr
xchg
or
xchg
icebp
mov
mov
dec
shll
and
jle
add
leave
mov
cmc
stc
es
loop
cwtl
lcall
lods
cs
sbb
gs
xor
sub
data16
push
sub
sub
js
xchg
jg
in
inc
cmpsl
mov
test
add
pop
lret
mov
je
rcl
sbb
mov
dec
sub
lock
clc
icebp
and
mov
repz
fnstsw
mov
ret
popa
int3
das
xchg
xor
add
lds
mov
push
pop
out
inc
repz
int
push
xor
es
ja
mov
xor
lret
iret
lea
sub
mov
xchg
cmpsl
mov
fdivrl
stc
arpl
and
es
cmp
xchg
ficoml
js
pusha
fiaddl
nop
dec
lcall
inc
out
rcrl
std
mov
test
and
in
sub
lods
inc
pop
adcl
mov
mov
js
pop
pop
push
testl
or
inc
inc
mov
fs
test
fiadds
or
mov
add
cld
push
or
out
jl
into
stos
mov
mov
and
addr16
lods
nop
mov
stos
jle
and
int3
mov
push
xor
add
push
pop
jl
call
mov
rol
push
sbb
int3
inc
push
xor
out
jl
jne
dec
mov
loop
adc
aaa
xchg
push
lea
mov
push
inc
rorl
mov
adc
sar
jo
xor
xor
sub
aaa
orl
mov
fwait
icebp
xor
add
in
fnsave
movsb
aaa
out
sbb
pushf
in
gs
mov
das
xor
mov
das
in
jne
sbb
mov
enter
std
enter
inc
and
cmc
jmp
xchg
mov
sbb
xor
and
mov
jp
sbb
add
test
shr
jge
fsubrl
adc
add
mov
jmp
push
xor
xchg
and
push
ss
out
pop
sbbl
push
faddl
in
cmp
sbb
repnz
pop
das
mov
cmpsl
aas
xchg
jecxz
test
pop
mov
repz
dec
cmpsb
lods
testb
xor
adc
sti
imul
outsb
aas
xor
inc
mov
aaa
int
stos
jne
mov
movsl
mov
aad
call
sbb
cmc
andl
fildl
cmp
std
mov
adc
adc
adc
bound
dec
pop
jl
sbb
repz
and
cld
cltd
sti
cmpsl
inc
jge
aaa
int
je
xchg
addr16
adc
sbb
repnz
xor
dec
je
rorl
jbe
jae
adcb
xor
mov
and
mov
mov
sub
mov
and
jne
stc
mov
add
and
pop
cmp
xlat
loope
rorl
pop
xor
xchg
pop
push
xchg
std
push
push
popa
pop
cmpsb
fs
xor
imulb
cmp
xchg
or
sbb
jge
jge
in
xor
cmp
std
push
jl
mov
out
cmp
xor
cmp
fstpt
jge
mov
aas
push
imul
enter
mov
outsb
jecxz
push
cld
filds
es
cmp
sar
adc
add
movsl
insb
dec
bound
cmpsl
stc
stos
outsl
lcall
fs
repz
jae
push
aam
hlt
insb
push
push
shll
mov
nop
cmc
lret
shrb
cmpl
lret
inc
mov
daa
repnz
sarl
pop
mov
jns
daa
outsl
dec
loopne
aad
stos
ds
cmpsl
push
ss
push
mov
or
data16
mov
sbb
ds
adc
dec
mov
jg
fs
shll
mov
jg
aad
fs
and
push
loop
in
pop
mov
and
sbb
lret
jl
repz
mov
push
fs
fwait
inc
ficompl
push
pop
xor
mov
out
insb
inc
sub
mov
lea
rclb
xor
adc
loope
add
aad
ljmp
adc
xchg
xadd
push
mov
dec
pusha
pushf
rolb
int
out
adc
enter
xchg
test
add
fs
ss
xchg
divb
and
pop
in
call
ss
push
cmp
divb
xchg
mov
mov
je
xchg
es
jbe
mov
iret
sbb
aam
push
cmp
ljmp
push
xlat
fcmovb
subl
push
lods
or
push
pop
jecxz
and
sbb
movsl
iret
adcl
mov
sub
hlt
xchg
jge
xchg
jbe
push
xor
push
xorb
xchg
inc
aaa
sub
push
and
jo
jl
mov
cld
jbe
jne
push
inc
push
repnz
in
sub
subl
cmc
rol
pop
shll
int3
mov
int3
cs
mov
xchg
stos
lods
add
in
and
test
sub
arpl
in
mov
loopne
mov
pop
adc
ret
mov
lahf
dec
loop
in
mov
mov
nop
inc
cmp
enter
rol
pop
movsb
inc
xor
sti
mov
add
daa
adcl
sbb
xchg
xchg
ss
sbb
mov
fistpll
push
or
mov
cmpsb
xchg
jle
cmc
rcll
jge
in
dec
fcmovne
mov
popa
loop
cwtl
hlt
add
out
outsb
pop
movsb
movsb
and
inc
inc
lock
dec
or
icebp
daa
or
test
cs
daa
scas
cmp
sbb
fyl2x
add
cmp
xor
pop
rcll
lock
cmp
enter
test
rcrb
adc
loop
sbb
cmp
inc
sti
pop
add
dec
out
mov
pop
rcrb
jp
into
cmc
call
loopne
add
hlt
add
push
lods
in
adc
icebp
inc
xor
mov
mov
push
sub
enter
aad
fstl
cmp
pop
insb
test
cmp
loopne
fidivrl
icebp
sbb
bound
cmp
and
pop
or
pop
mov
popf
call
pop
ror
and
fsubs
sub
mov
lahf
adc
mov
lcall
clc
jl
and
mov
shll
lcall
enter
dec
jmp
aad
inc
push
ret
xor
inc
xor
std
aaa
and
movsl
gs
filds
sarl
sub
dec
sub
das
sbb
xor
or
insl
in
adc
out
hlt
add
sahf
in
daa
pop
icebp
gs
idivl
lea
and
pop
lea
mov
xchg
adc
fcmovb
std
or
std
call
std
pop
sub
pusha
js
push
int3
aaa
add
movsl
lea
or
dec
jecxz
lock
xchg
mov
add
call
aad
fisttpll
shl
rcl
ljmp
sub
mov
dec
mov
add
mov
outsl
pop
clc
in
pusha
push
int3
ja
loopne
ret
pusha
ret
push
jae
call
cli
test
das
cltd
ficompl
loop
adc
movsl
pop
mov
lock
data16
xor
sbb
je
mov
sub
test
arpl
dec
jle
and
sub
jae
push
fadd
and
lock
xor
movsb
nop
gs
addr16
sub
mov
addr16
cmp
rcl
dec
repz
fwait
fs
ss
ja
push
mov
pusha
and
dec
sbb
adc
xchg
idivb
mov
mov
aaa
cld
push
ja
xchg
int
movsl
xchg
fidivrs
jne
out
aad
loopne
movsl
inc
and
loopne
xchg
lods
shll
or
insb
in
mov
lods
pushf
rcl
std
repz
data16
test
leave
pop
mov
inc
and
push
test
and
test
mov
into
sub
out
add
out
js
jmp
jecxz
pop
mov
and
add
jl,pt
or
cld
push
push
add
or
adc
cltd
decl
and
daa
add
out
lret
icebp
imul
cmpsl
notl
adc
add
mov
add
es
or
xchg
sub
test
mov
push
int3
pusha
xorb
jmp
xchg
push
cwtl
cwtl
aas
inc
xorb
negb
divb
cwtl
cmpsl
xchg
pop
test
clc
mov
ss
jae
or
add
jle
cmc
sub
daa
hlt
mov
jl
mov
jl
insb
mov
mov
push
shlb
hlt
dec
aaa
mov
push
call
cmpsl
nop
cli
jbe
and
adc
loopne
cwtl
mov
mov
push
in
jns
push
add
hlt
jge
cmp
mov
mov
divb
cmp
dec
adc
pushf
movsl
sarb
push
mov
xlat
push
divl
test
mov
in
nop
movd
add
xchg
push
sti
sbb
pusha
enter
xor
sbb
inc
cmp
xor
test
xor
and
push
sub
dec
inc
cmp
add
pusha
jmp
push
adc
jmp
add
in
jnp
aad
movsl
hlt
popa
pop
daa
mov
roll
ja
fcoml
popf
ss
cwtl
and
xor
push
add
in
setge
lcall
add
push
sub
hlt
cmp
jle
pop
fs
fdivrs
je
and
das
xchg
pop
xchg
pop
dec
jmp
add
mov
daa
push
ss
jl
fs
repnz
stos
nop
mov
and
or
pop
ss
test
sti
nop
daa
mov
test
mov
stos
test
je
dec
scas
ret
cmpl
in
cltd
jbe
ja
mov
mov
lock
xchg
in
pusha
mov
add
add
sbb
sub
mov
mov
cmpsb
in
stc
insl
jl
or
lock
les
lock
test
shll
nop
jge
int
fs
adc
jb
mov
xchg
xor
pop
in
lahf
mov
lret
sahf
nop
repz
add
cmc
sub
test
xchg
arpl
shll
lret
mov
cmpsb
fmulp
fnsave
jnp
loopne
mov
sbb
test
xor
jae
jmp
mov
loope
mov
jno
stos
add
out
and
inc
aad
mov
push
test
aam
xor
adc
pop
rol
fs
cltd
xor
pop
lret
enter
sub
push
mov
js
sbb
nop
movsb
push
icebp
push
mov
mov
into
pusha
xor
jmp
jl
nop
jne
and
imul
insb
mov
mov
int
push
inc
jb
add
dec
add
xor
movsb
mov
cli
mov
mov
fxch
jne
or
lds
lret
xor
call
stos
ds
lock
repz
mov
push
addl
stc
mov
lods
dec
mov
in
add
rcl
scas
mov
loopne
fnstsw
lcall
enter
lcall
or
and
sbb
call
mov
ja
enter
push
pushf
dec
pusha
scas
mov
sbb
mov
mov
stos
inc
mov
push
unpckhps
daa
jae
popf
push
aad
lds
clc
xorl
and
and
ljmp
int
xchg
or
pop
and
push
int3
out
dec
add
inc
sahf
daa
pusha
sub
or
mov
add
cmp
shlb
pusha
xor
cmp
cmp
pop
inc
xor
inc
stos
fistpl
and
nop
fiadds
iret
cmp
mov
aas
push
cmpsl
sti
and
into
dec
insl
icebp
jne
lods
lret
mov
test
mov
push
or
dec
mov
lret
popa
mov
or
mov
adc
test
mov
dec
push
test
and
pop
inc
andl
int3
pop
ret
fldcw
fisubs
mov
andb
out
rorl
and
lret
cli
ret
mov
jl
adc
push
scas
xor
dec
popf
std
cmp
stos
dec
inc
push
repz
je
or
and
in
or
sbb
ss
mov
test
lods
pusha
pop
xor
js
push
andb
test
adc
popf
aaa
or
mov
push
push
dec
popf
adc
and
daa
add
mov
call
daa
pop
call
movsb
and
sbb
mov
xor
out
lcallw
sbb
mov
sahf
lret
cmc
mov
push
int3
mov
call
mov
push
shlb
shll
data16
mov
inc
and
aaa
xchg
std
daa
mov
mov
cmp
or
sbb
int
sbb
lret
push
add
pop
in
push
sub
movsl
sub
pop
bound
popa
daa
mov
sbb
mov
push
mov
adc
add
mov
xor
data16
xchg
test
or
or
adc
jmp
shrb
cmp
push
fsubl
insl
sub
or
cs
mov
insb
sub
or
ljmp
pop
cld
stos
add
stos
movsl
daa
sbb
test
fistpl
dec
je
in
add
add
adc
or
movsl
pop
xor
mov
sahf
rorl
loope
rcll
sbb
jns
out
jns
stc
pop
jle
add
add
out
imul
cwtl
mov
insl
jae
fldenv
addl
imul
dec
fs
hlt
imul
jmp
mov
sub
mov
stc
sbb
adc
cmpsl
jbe
push
rcrl
hlt
jp
pop
movsl
js
push
inc
or
mov
mov
pop
push
ja
and
jo
les
test
add
insl
add
mov
mov
mov
or
ss
mov
add
ja
rcll
cmp
add
and
push
or
add
rorl
dec
out
xchg
mov
sub
sti
andb
cmp
adc
xor
dec
mov
je
jmp
cltd
and
fdivl
inc
pop
jecxz
adc
xor
sbb
leave
sbb
cmovb
add
icebp
inc
pop
xchg
cmc
pop
dec
loope
cltd
fisttps
sbb
mov
cmpsl
cmp
mov
fucomi
insl
xorb
mov
xor
shl
jmp
xchg
sbb
insb
mov
inc
lcall
imul
mov
xor
mov
sar
test
gs
iret
pop
test
cmp
loopne
xchg
xor
cltd
jne
lea
adc
cltd
or
sarb
cwtl
sbb
fisubs
ficompl
stos
push
mov
popa
fwait
test
inc
add
jae
or
sub
mov
xor
fistps
out
pop
addr16
popa
sbb
clc
clc
xor
test
add
sbb
cmpsl
out
lods
mov
jb
loope
xchg
mov
lahf
lret
jle
and
push
mov
shrl
pop
dec
call
jge
sbb
pop
jl
cmp
add
repz
je
mov
dec
fdivrl
subb
and
mov
shl
pop
int3
jle
es
outsl
mov
ret
loopne
mov
sti
or
addr16
stos
push
xchg
jmp
inc
test
sbb
clc
dec
sbbl
ds
cmpsl
std
xor
jns
dec
repz
or
and
or
call
sbb
xor
mov
ret
jp
cmpsb
dec
mov
sub
push
repz
xlat
mov
hlt
nop
in
pop
arpl
sbb
jne
add
add
inc
dec
insl
xchg
imul
sbb
andl
and
sub
sub
in
cli
mov
jns
jmp
dec
pushf
js
and
sbb
sbb
jecxz
jbe
cli
mov
push
in
mov
loopne
stc
or
fcompl
mov
sbb
outsl
lret
and
ljmp
xor
sub
in
cmpl
movsb
dec
inc
jl
ja
je
cmp
adcb
jl
inc
test
imul
mov
dec
jb
dec
push
ss
enter
jecxz
xchg
imul
daa
mov
inc
jmp
sub
lds
jae
mov
lcall
subl
out
cmpsl
int3
es
cld
jmp
mov
jge
xlat
movsl
stos
pop
leave
jne
pop
dec
call
cmp
out
aaa
loopne
call
fs
cltd
sbb
cs
xor
shl
pop
jb
popf
fs
ret
dec
gs
jbe
imul
pop
or
pop
fisttpll
add
out
and
cld
jmp
mov
daa
int
lret
add
xchg
cmp
lds
inc
inc
cmp
mov
adc
movsb
inc
cmp
jmp
ja
mov
or
push
mov
mov
cwtl
in
inc
push
mov
es
fldcw
mov
inc
jge
lret
mov
testb
fbstp
jne
pop
rorb
gs
pop
das
xor
movsl
xchg
cmp
adc
jo
sbb
inc
fistps
cli
jge
imul
push
icebp
inc
icebp
push
adc
sahf
and
cmp
add
cmpsl
sbb
in
sbb
aaa
push
mov
and
stc
jecxz
loopne
hlt
pop
lcall
pop
out
mov
daa
pop
sub
mov
adc
add
daa
cltd
mov
fldenv
xchg
cmpsl
jmp
xchg
add
stos
push
pop
ret
xchg
es
push
adc
pop
or
inc
push
notl
loope
cld
aaa
or
movsl
add
stos
inc
fcomi
sub
ret
sub
test
and
jae
les
push
mov
pop
jns
popf
mov
ret
mov
xor
flds
add
pusha
out
jb
sahf
lret
clc
fwait
movsb
dec
rolb
es
in
ss
adc
scas
lahf
push
dec
sti
push
mov
mov
xlat
add
mov
bound
test
sarl
iret
cmp
inc
cs
push
insb
push
xor
adc
adc
mov
inc
stos
out
push
in
pop
cli
and
dec
inc
ljmp
sbb
lods
dec
lds
test
pop
sbb
inc
adc
test
adc
push
icebp
pop
mull
and
dec
aad
inc
push
fcmovbe
dec
out
jns
rcr
cltd
mov
aad
mov
mov
shll
out
xchg
nop
add
stc
sub
test
inc
pusha
mov
loop
aad
add
inc
daa
jae
hlt
push
and
daa
or
cmp
and
push
add
scas
fidivrs
cmp
mov
jne
clc
lret
jge
xchg
mov
inc
sbb
sbb
outsl
mov
loope
ja
mov
pushf
adc
je
pop
sbb
sub
inc
mov
js
ss
pop
gs
sti
ja
sbb
sbb
popa
lcall
cmp
aas
pop
and
and
xor
xlat
retw
mov
je
xchg
clc
cld
cltd
out
xchg
cli
cmp
push
insl
mov
dec
cld
pop
jae
lds
and
pushf
jae
das
pop
lea
ljmp
mov
out
insl
in
mov
cmp
push
xor
orb
sub
xor
lods
push
and
outsl
push
add
push
adc
jno
add
push
add
int
xabort
mov
rcll
negb
mov
retw
sbb
rorl
sbb
jp
divl
leave
std
stc
stos
pop
add
in
pusha
int
adcl
push
push
push
and
sub
call
notl
fsubr
mov
inc
lret
xchg
inc
sahf
add
push
push
inc
xor
mov
inc
push
adc
nop
mov
out
fbstp
dec
icebp
pop
sub
iret
icebp
dec
mov
pusha
or
out
popf
aaa
dec
jmp
cmp
sbb
sti
daa
clc
sbb
movsl
arpl
aam
push
jne
mov
push
aaa
jne
mov
xlat
ret
int3
jne
sbb
popa
ja
in
dec
std
adc
aad
rcrl
mov
mov
or
xchg
and
jne
sbbb
sbb
lret
mov
decb
fists
mov
mov
add
mov
mov
jl
scas
dec
or
mov
jmp
xchg
inc
pop
ja
cmpsl
mov
mov
ja
call
cwtl
jmp
add
mov
into
lods
shll
inc
adc
dec
cwtl
xchg
dec
add
call
xchg
sbb
das
cltd
imull
xchg
mov
jl
add
in
cmpsl
jbe
repz
mov
and
sub
jecxz
popa
add
hlt
repz
rcrb
mov
dec
out
rclb
mov
pop
test
stos
lahf
or
cmpsb
enter
jo
int3
aad
std
mulb
or
xchg
in
pop
cld
xor
xor
cmp
lret
sub
sbb
and
fbld
mov
sub
jae
lds
inc
vpsllq
stc
mov
mov
add
insb
daa
cmp
jle
adc
xor
test
in
sbb
push
or
aad
movsl
add
andb
loopne
sbb
sub
xchg
add
add
add
pop
jne
gs
push
fidivrl
sbb
mov
pop
or
jne
mov
popa
push
sub
test
jb
push
and
push
pushf
aam
mov
pop
push
inc
icebp
mov
cmpsb
repz
pop
scas
add
pushf
loope
or
test
fs
jb
ds
mov
cmp
cs
pop
sbb
aam
and
lcall
clc
lock
shrb
fcoms
repz
int3
imul
sbb
mov
std
mov
push
in
xor
lds
in
test
mov
or
aaa
dec
movsb
out
cs
xor
lods
mov
mov
outsb
insb
add
add
pop
mov
outsl
and
mov
aad
ljmp
add
or
push
xchg
pop
or
lds
fmuls
movsb
pop
and
cltd
fimull
mov
rol
pop
and
push
cld
push
orw
js
push
xor
fadds
test
mov
adc
xor
mov
out
rolb
imul
aaa
std
adc
mov
stos
jp
xor
adc
fisttpll
pop
xchg
cmpsl
adc
mov
andl
or
inc
test
imull
add
cmpsl
sbbl
jle
rorb
ds
out
add
roll
and
ss
adc
nop
push
in
pop
in
xchg
psubusb
cmc
jns
aaa
dec
or
cmc
add
in
std
push
ja
fs
xchg
scas
mov
jge
enter
dec
jae
push
lret
and
fs
jmp
pop
sbb
xchg
pop
fcoms
xchg
dec
mov
dec
test
call
and
cmpsl
fsubl
mov
dec
clc
pop
adc
cmp
inc
sub
inc
fst
sbb
int
enter
mov
sbb
jae
pop
out
jne
push
cmp
sbb
xchg
mov
clc
xchg
rcrb
push
pop
arpl
xor
mov
cmc
movsl
test
push
inc
mov
int3
xchg
stc
aad
lds
push
add
cwtl
mov
mov
loope
call
sbb
jno
mov
xor
cmc
xchg
sub
addr16
jmp
cs
aas
pop
mov
pushl
sbb
add
stos
std
subb
xor
test
aad
shll
movsl
mov
mov
mov
and
cltd
mov
mov
clc
mull
adc
popa
rcll
cltd
xor
in
push
mov
pop
aaa
sbb
sbb
gs
test
jge
das
inc
pop
push
rcrl
mov
sahf
push
push
nop
push
push
rcr
nop
pop
jmp
jnp
stos
lret
mov
cmc
and
and
rorb
and
cmc
aaa
mov
fcoml
push
cmp
cltd
sbb
xchg
ret
jbe
cmp
mov
mov
lock
mov
sub
lock
add
or
dec
dec
sub
push
sbb
cmp
jbe
pusha
push
addr16
in
xchg
das
xor
mov
dec
test
add
adc
cwtl
test
sbb
rolb
or
pop
pop
imul
adc
adc
hlt
push
lret
lret
pop
mov
call
and
stc
pop
pop
daa
add
std
mov
imul
xchg
xor
fwait
xor
xchg
mov
and
lahf
cmc
popf
or
mov
lcall
mov
sub
pop
cltd
xchg
leave
add
jle
loope
and
movsl
repz
lret
test
shll
daa
sbb
mov
test
outsl
test
mov
mov
and
ds
jl
pop
adc
sub
adc
push
mov
test
cmpsl
sbb
rorb
push
cmp
scas
shrl
push
mov
sti
je
push
push
hlt
roll
inc
xor
popf
pop
test
cmp
movsb
aam
pop
adc
push
lods
add
test
shll
jl
pop
mov
fidivl
fs
lock
dec
insb
aas
mov
testb
inc
sbb
imul
pop
movsl
es
dec
pop
push
pop
sbb
int3
aam
and
mov
push
scas
jg
xchg
push
pop
shll
jl
test
flds
xchg
jbe
fists
lock
adc
jmp
testl
repz
and
test
in
stc
dec
or
movsl
add
inc
add
mov
aaa
js
mov
dec
add
sub
add
es
add
inc
pop
cmp
rcl
ljmp
dec
add
mov
mov
xor
popf
in
pop
or
mov
aas
hlt
dec
insl
out
sbb
xor
adc
int3
xchg
and
add
cmpsb
int3
cmpsb
push
add
clc
xchg
mov
iret
dec
arpl
jge
arpl
hlt
cltd
or
mov
in
jge
cmpsb
and
test
imul
int
cmp
test
mov
es
mov
xor
aaa
ds
or
cmpsb
mov
or
and
mov
fs
test
in
or
call
insl
js
push
jmp
sti
pop
dec
icebp
or
dec
xchg
popa
mov
mov
or
dec
push
push
sbb
mov
pusha
and
daa
in
cmp
inc
aad
xor
sbb
daa
push
cmp
dec
xchg
ja
scas
inc
int3
xor
sbb
jne
je
sbb
xor
mov
lret
push
sbb
sub
loopne
cltd
add
addr16
movsl
xchg
or
aaa
es
cmp
and
cmpsb
mov
add
rcrl
pop
aad
test
lcall
fdivrs
fdivrs
xor
sbb
out
mov
xor
das
cmp
test
xor
loope
lods
and
jns
jno
push
mov
out
rol
gs
mov
lds
cli
leave
mov
mov
sbb
mov
hlt
das
sub
mov
hlt
add
daa
data16
adc
aad
popa
loop
sub
push
cmp
xor
lret
adc
jg
movsb
dec
rorl
shll
jg
gs
movsl
jae
lock
imul
imul
dec
add
sub
dec
xchg
outsb
int
ljmp
jecxz
cwtl
loope
sbb
ljmp
lret
jnp
sbb
cmp
dec
and
push
pusha
lcall
or
loopne
and
loopne
sbb
push
and
and
sub
sbb
fcmove
mov
outsb
lret
loopne
jmp
stc
push
pop
sbb
add
icebp
sbb
clc
add
call
mov
and
shll
dec
ja
aad
pop
or
add
mov
cmc
call
push
loope
rclb
xor
inc
mov
push
lahf
mov
arpl
xchg
fstl
mov
lahf
sti
jne
cmpsl
aam
in
push
popa
lock
addb
imul
dec
clc
pushf
js
icebp
xchg
push
stos
out
add
sub
mov
out
pop
push
daa
rorl
movsl
test
or
lock
rclb
shll
xor
sbb
mov
mov
es
loop
lods
pop
aaa
mov
jp
cmpsb
add
dec
aaa
mov
mov
push
or
pop
lcall
inc
pop
es
loope
stos
aaa
lret
or
push
je
jae
push
push
aam
aaa
arpl
xor
les
pop
mov
lret
or
sub
lods
jge
lock
insl
repz
lock
daa
cwtl
and
xor
es
xchg
cmc
push
pop
aam
ret
int
cwtl
mov
in
mov
pop
addb
fs
mov
sbb
xchg
cmp
into
in
roll
jecxz
lret
nop
add
cmpl
pop
mov
arpl
mov
sar
cmpsl
mov
pop
xor
jl
sub
mov
fsubr
add
push
push
call
sbb
add
lods
xchg
cmc
pop
xor
mov
jae
push
in
dec
jp
aam
adc
adc
push
cmpb
mov
jmp
add
push
call
ljmp
jmp
inc
jne
xchg
xor
inc
sbb
in
decb
aas
dec
jg
out
test
int
push
mov
mov
aam
lcall
daa
xchg
add
out
ficompl
or
movl
mov
add
jecxz
nop
jl
mov
xchg
jno
inc
int3
clc
daa
test
inc
test
mov
loope
adc
sti
aaa
lods
addr16
mov
imul
movsl
hlt
sbb
sbb
adc
outsb
mov
jno
dec
ja
popf
hlt
dec
mov
lret
cli
nop
lcall
nop
mov
les
and
mov
push
push
mov
cmc
je
jmp
jg
and
sahf
movsb
fisttpl
xchg
add
repz
xchg
mov
mov
clc
dec
or
das
call
lods
jge
sbb
pop
nop
mov
clc
xor
filds
mov
test
mov
mov
sub
jne
mov
mov
and
aaa
push
push
cmpb
mov
aas
add
in
pop
sub
pop
adc
add
stos
xchg
mov
loopne
xor
and
mov
cld
fidivrl
add
jnp
mov
xor
rolb
jl
push
clc
mov
or
push
xor
and
pop
add
sti
xor
jns
xor
jo
jo
dec
pushf
int3
push
ret
lds
push
jbe
lret
cmp
aad
cmp
cmp
movsb
or
sub
sub
mov
out
mov
iret
pop
into
test
sub
aaa
out
cmp
lret
fdivrs
sub
test
icebp
cmc
push
pushf
daa
sub
mov
inc
pushf
rorl
mov
xor
pop
jecxz
push
push
lahf
adc
fisubl
lods
or
cmp
jle
cmpb
icebp
mov
fs
dec
xchg
rorb
lds
push
pushf
xchg
movsb
packssdw
lods
push
sub
shl
shl
ret
adc
sbb
xchg
mov
cmpsl
gs
xor
movsl
mov
dec
add
fcmovu
shl
cmp
aaa
shll
shl
push
in
jmp
imull
jl
sarb
pslld
xchg
xchg
and
subl
das
xor
jl
es
aam
out
push
pop
mov
jmp
lcall
shll
inc
sbb
mov
push
xor
je
jl
dec
xor
movsl
xchg
cmp
insb
sahf
and
and
out
add
cmc
mov
cmpl
pop
enter
sbbb
lcall
lds
fsts
pop
iret
test
cs
nop
push
icebp
push
ds
outsl
jno
test
mov
nop
mov
mov
leave
leave
xor
cmp
imul
jne
sub
roll
jno
xor
cmp
sahf
sub
fidivs
sbb
and
popf
mov
cwtl
sub
cmpsl
mov
outsb
fnsave
mov
mov
xchg
scas
jecxz
cmp
xchg
lret
loopne
and
outsb
decl
jae
lock
daa
sbb
sbb
mov
pop
ja
push
dec
push
shrb
aam
sub
dec
ss
hlt
lea
aam
jbe
lods
aam
add
jl
ljmp
sarl
fildll
roll
mov
jmp
sti
sbb
sbb
js
push
push
mov
call
movsl
icebp
add
call
push
mov
into
jmp
mov
loop
stos
popf
ja
mov
es
lret
in
lods
insb
mov
pop
or
xor
cmpsl
movsb
push
popa
ss
xchg
andb
jecxz
lds
push
adc
in
pop
or
jg
test
repnz
cmp
mov
cmp
jg
lds
repz
xchg
lds
add
and
adc
xchg
inc
jnp
cmp
xor
fistps
imul
mov
daa
jl
mov
fstpl
gs
push
dec
push
mov
movsl
or
mov
sub
outsl
aas
add
pushf
mov
and
imul
mov
adc
movsl
pop
and
cwtl
pop
sbb
aas
aaa
push
xor
lcall
movsl
out
dec
mov
insb
daa
sub
ss
sub
ds
push
push
sbb
outsl
das
mov
addr16
mov
jg
js
pop
sbb
cmpsl
cmp
mov
das
pop
xchg
ret
cld
dec
and
mov
sahf
xor
xchg
pop
and
jle
mov
jbe
add
pop
pop
outsb
push
pop
sbb
add
push
push
sub
mov
mov
cmc
sub
je
add
es
flds
jae
sbb
shll
in
sub
dec
ds
sub
pop
stos
idiv
mov
sbb
pushf
jno
dec
and
pop
test
clc
jo
or
pop
sbb
inc
cwtl
pop
xor
pop
fstpt
outsl
inc
mov
pop
jle
scas
jnp
xorl
std
ljmp
push
shrb
sarb
pop
adcb
loop
stc
jbe
push
cmp
aam
out
dec
sbb
enter
insl
aam
int
fnstcw
mov
js
jmp
lods
popa
movsl
in
xchg
jl
in
stos
ljmp
dec
js
loop
mov
mov
clc
ficompl
es
stos
hlt
mov
outsb
mov
testb
divb
sub
daa
fsubrp
cmp
out
xlat
xchg
rcll
in
sti
inc
pop
adc
xor
and
stc
clc
lcall
shll
nop
fldenv
sbb
ja
jno
mov
sti
cmc
je
pusha
mov
andb
mov
pop
push
inc
sti
push
xchg
dec
cmpsl
es
jne
adcb
mov
push
es
and
add
decl
fiadds
aam
mov
push
push
incl
cmp
add
imul
movsl
inc
dec
dec
mov
outsl
pop
sub
sub
sbb
push
popa
lock
movups
stc
gs
sahf
dec
ds
test
mov
lea
add
lods
arpl
jge
scas
and
arpl
pop
sbb
pop
or
pmullw
xchg
mov
jmp
call
cld
andb
addb
repz
mov
cmpsl
xchg
and
imul
aam
ds
sti
fwait
xchg
push
es
mov
add
mov
add
push
cmc
push
mov
filds
addb
cli
movsl
shr
xorb
dec
fwait
sbb
mov
sub
xor
push
out
add
dec
imul
jmp
adc
jne
es
shlb
inc
movsl
push
add
add
jbe
adc
cld
push
pop
scas
lock
leave
pop
vcvtps2pd
stc
pop
movsb
push
xchg
enter
xor
loope
jbe
lods
pop
loope
mov
in
push
ja
test
add
adc
testb
jo
andb
gs
stc
imul
dec
insl
inc
aam
icebp
pop
mov
faddp
sti
push
pop
adc
in
jnp
push
mov
xchg
cwtl
jo
call
cwtl
bound
mov
repnz
daa
scas
jno
test
add
lods
push
or
mov
mov
sub
sub
fs
sarl
jmp
xchg
repz
ja
aas
jae
add
adc
jns
xchg
call
shrb
sub
dec
pop
loop
rcll
pop
mov
pop
add
add
dec
xchg
mov
loop
je
cld
fs
test
sub
imul
fdivrp
jo
cs
inc
jl
call
push
jmp
mov
popf
call
scas
aaa
xor
mov
into
add
xchg
lds
pop
cmp
mov
lret
mov
ds
loop
xor
jo
lods
adc
dec
ja
js
int3
pop
mov
pop
push
jno
int3
mov
int3
lret
mov
and
mov
stc
jl
dec
lcall
ja
and
push
loopne
pusha
pop
sbb
cltd
jo
push
in
pop
mov
jle
leave
cmp
mov
sbb
mov
stc
les
mov
jmp
xor
insb
das
in
xor
sub
jno
xlat
hlt
std
enter
ret
sub
mov
cmp
sti
aad
push
mov
test
mov
ret
data16
mov
fs
loopne
adc
dec
movsb
rorl
repz
sbb
add
aad
repnz
fs
push
xchg
rcrl
xchg
ficomps
sbb
push
cmp
mov
dec
cmc
pop
int3
xor
sub
xchg
fsubp
push
cmp
sbb
add
jae
inc
out
and
ja
push
faddp
dec
pop
cmpl
test
pop
loop
rolb
adc
push
ljmp
repz
call
and
out
movsl
mov
mov
idiv
xchg
sbb
jge
add
push
fwait
je
daa
popa
add
lahf
jmp
notb
mov
std
movsl
sarb
xchg
add
pop
mov
push
jns
sti
daa
js
xchg
mov
mov
xchg
inc
int
inc
sbb
mov
in
sbb
mov
cmp
and
inc
sub
cmp
jbe
adc
xor
scas
call
in
xchg
movsl
stos
sbb
jnp
mov
cmp
mov
cs
js
mov
jge
nop
pop
hlt
pop
in
dec
adc
mov
popf
in
popf
popf
cwtl
sbb
add
jg
mov
mov
inc
cmc
push
lahf
inc
dec
and
cwtl
arpl
adc
add
and
pop
pop
ss
xor
pusha
mov
icebp
lahf
test
call
pushf
icebp
adc
mov
or
lret
mov
popa
neg
test
or
mov
jge
fwait
testb
and
outsl
cmpsb
mov
or
inc
mov
jle
sti
ret
js
fs
mov
aas
out
mov
les
sbb
fadds
mov
aad
aas
and
int
mov
out
inc
adc
sub
cmp
loope
fnsave
push
sub
mov
imul
andb
cld
aaa
xchg
mov
push
mov
jl
xor
scas
addl
cmp
ds
lret
imul
jg
sbb
ja
sbb
add
sbb
pop
call
mov
pop
dec
jg
lret
add
cltd
mov
adc
aaa
sbb
nop
adc
pop
test
aam
dec
jmp
out
in
fsubp
pop
ja
and
sbb
aas
cs
testl
jae
and
arpl
test
jne
cltd
or
ret
push
flds
mov
sbb
adc
repz
mov
imulb
mov
int
sub
stos
inc
sahf
shll
sti
movsl
cltd
adc
dec
mov
rcll
adc
dec
jnp
mov
and
das
ja
nop
dec
fsubr
in
icebp
lods
inc
push
mov
data16
fldenv
imul
xlat
mov
cmp
sub
std
mov
in
loop
adc
mov
insb
sub
jae
les
push
sbb
sub
in
mov
push
cltd
cmp
movsl
in
add
movsl
cmp
decb
cmpsl
pushf
idivl
lret
push
iret
cmp
xor
pop
jb
leave
and
inc
adc
test
cltd
mov
and
pushl
insl
sub
pop
jae
and
cmp
and
jae
sub
push
movsb
xchg
or
movsl
and
hlt
sub
mov
outsl
aad
pushf
dec
mov
xorl
mov
popa
cltd
es
xchg
xchg
jb
cltd
xchg
fs
sbb
cltd
sub
mov
pop
mov
in
arpl
ss
jo
bound
push
add
mov
rcrl
jnp
mov
outsb
je
cmp
lods
movsb
push
cmp
adc
push
fildl
rcrl
add
sbb
and
and
test
push
sbb
cmpsb
movl
jg
in
movsl
orl
fsub
popf
sbb
and
push
mov
push
cltd
fsubrp
add
xor
inc
aad
stos
lds
adc
xchg
not
mov
in
in
cmpsl
leave
in
popf
adc
mov
ret
stos
mov
inc
rep
iret
test
ret
stos
into
sub
mov
jl
je
pop
add
cli
lods
inc
mov
jp
shrb
lahf
inc
in
loope
sub
lods
jg
es
adc
xor
or
pop
jns
insb
mov
fs
ja
in
lock
push
mov
push
mov
sbb
cmp
cmp
roll
dec
push
mov
lahf
xor
lods
pusha
jl
cmc
int
mov
dec
xor
mov
xchg
out
icebp
inc
push
outsl
and
ret
and
sysenter
push
sti
cwtl
lret
mov
mov
rcrl
mov
call
cmp
push
outsb
mov
add
pop
cli
out
lds
cmpsl
push
jecxz
or
enter
sti
iret
mov
cwtl
mov
ds
cmp
cmp
add
adc
cld
jl
aam
dec
and
cmpsb
rcl
fstpt
or
dec
xchg
jle
loope
rcl
pop
sbb
cwtl
xor
and
add
push
sbb
in
andb
jmp
push
movsb
stos
adc
mov
xchg
jmp
es
cmpsl
in
xlat
lret
loop
xor
cmp
lret
shlb
jnp
push
cmpsl
cmpsb
adc
rcrl
icebp
addl
into
push
repnz
adc
sub
imul
xchg
inc
mov
push
push
into
push
aam
xchg
shll
pop
inc
add
popf
scas
xor
cmpsl
add
fxch
cmp
ds
sub
ja
inc
jl
in
cmpsl
xor
shlb
mov
call
cmp
and
shl
jmp
and
fdivl
addb
cli
mov
jmp
add
icebp
aad
add
add
cwtl
enter
pop
or
inc
int3
cmp
fs
xchg
pop
sbb
fsts
loope
mov
lret
pop
rorl
jle
mul
mov
cltd
mov
mov
jmp
sbb
mov
ja
push
xchg
dec
add
loopne
mov
push
cmp
in
mov
and
call
ja
data16
pusha
rclb
mov
fadd
adc
sub
mov
mov
mov
popl
out
ds
je
adc
cmp
insb
add
xor
loope
movsb
dec
ss
cmp
mov
rorl
test
gs
mov
jl
insb
in
add
xchg
dec
mov
arpl
mov
insb
sbb
sti
sbb
shl
fwait
outsl
push
mov
pop
lcall
jae
aas
pop
test
mov
cmpsl
inc
test
or
jb
lds
and
xlat
xchg
shll
and
leave
jp
aaa
mov
pop
mov
mov
and
flds
test
mov
repz
das
push
inc
popa
test
or
cmp
mov
inc
cmp
lret
ds
push
mov
jb
pop
scas
xlat
dec
movsb
test
mov
ret
cld
jbe
add
or
aad
mov
shlb
lahf
push
aad
fdivrl
add
mul
mov
fimull
or
mov
shlb
sbb
push
out
cs
lods
std
in
mov
xorl
pusha
ret
test
loope
icebp
jo
les
inc
cmp
into
add
sbb
pop
movb
ret
out
dec
clc
out
movsl
sbb
mov
mov
sti
cmc
inc
or
sbb
arpl
xchg
jae
add
aaa
icebp
cld
dec
jb
xchg
push
dec
into
fists
cmp
movsl
dec
outsb
jo
fs
mov
mov
add
daa
add
loope
js
icebp
nop
add
or
adc
cmp
xor
adc
aaa
int
lahf
repnz
js
pop
aas
cwtl
mov
adcl
sub
loopne
jl
pop
mov
cld
sti
mov
int3
loopne
enter
imul
hlt
jbe
and
push
mov
mov
cmp
adc
js
out
insb
fbld
xchg
mov
xor
sub
in
xor
pushf
cmpsb
mov
aam
sub
push
loopne
dec
cli
sub
inc
cmp
cwtl
out
stc
cs
jmp
xor
cltd
mov
aaa
add
lcall
in
xlat
pop
or
sub
jo
insb
jo
shlb
dec
mov
pop
pusha
fcomi
stos
incb
out
fs
lahf
jae
out
dec
add
xlat
mov
mov
cld
call
and
dec
cmp
lds
std
xor
iret
jno
mov
add
sbb
xor
mov
dec
add
rorl
jl
mov
repz
sbb
in
fdivr
sub
jne
das
in
dec
mov
rol
movsl
cmp
cld
fmull
aaa
sub
and
mull
cmc
bound
std
jae
mov
pop
sub
push
loopne
imulb
dec
fbld
loopne
mov
fsts
in
or
sbb
adc
sbb
es
lods
push
mov
cs
and
lods
repz
and
mov
sbb
pop
and
mov
shll
mov
in
fidivrs
cli
push
lcall
mov
test
jp
popf
cmpsl
jno
stc
dec
fsubl
lea
out
xchg
xor
jbe
dec
stos
and
movsl
pop
jne
adc
lret
xlat
ja
mov
pop
mov
sti
imul
loope
or
aaa
imul
and
xor
xor
cltd
xchg
pushf
popf
mov
sahf
push
adc
dec
inc
mov
gs
pushl
sub
xchg
sbb
add
loope
gs
ret
dec
cmp
mov
lds
cs
push
jl
jno
stos
cmpsb
xor
test
and
inc
cmpsl
es
mov
cmp
das
roll
and
pushf
movsl
jg
daa
mulb
std
outsl
loopne
in
test
ss
jp
mov
lcall
jge
sub
shl
xchg
dec
dec
and
cmc
mov
xor
and
aad
out
aam
mov
xchg
inc
jg
inc
fs
xor
cltd
jne
int3
cmp
inc
pushf
jae
xchg
in
dec
lahf
cmp
sub
out
sti
lds
enter
sub
and
and
mov
xchg
leave
xchg
sbb
xchg
fisttps
sub
pusha
insl
and
sub
adc
fs
xor
sbb
and
mov
insl
inc
into
aas
add
inc
and
dec
xchg
ss
cmpsb
jl
adc
loopne
inc
jns
lcall
jbe
loope
and
out
movsl
cmpsb
cltd
out
lea
or
in
dec
mov
ja
int3
inc
sbbb
int3
xchg
je
sub
clc
aam
mov
mov
mov
mov
cmpsb
mov
imul
cmp
addr16
jae
insb
ret
push
xor
mov
in
sbb
mov
js
mov
jae
mov
rorb
je
xchg
mov
mov
mov
cmpsb
jmp
add
mov
xchg
mov
xorl
lods
call
fsubl
or
dec
es
in
rcr
xlat
or
and
adc
add
insb
and
or
mov
push
and
popa
sbb
push
xor
lock
cmpsl
inc
mov
ret
scas
hlt
out
mov
aas
nop
jns
add
jne
enter
adc
dec
outsl
sbb
and
test
mov
and
xor
inc
add
mov
gs
dec
cmpsl
inc
test
iret
sbb
xor
addr16
cmc
imul
movsb
sbb
sbb
jae
lock
dec
pop
daa
test
and
jne
add
lods
adc
cmp
or
lods
dec
stc
jmp
xlat
idivl
adc
sbb
jmp
lea
adc
mov
imull
divb
aas
fnstenv
xorl
into
cmp
pop
scas
mov
mov
mov
and
cmpsl
test
loop
in
les
pop
inc
lds
add
pop
dec
movsb
movsb
js
vcvttss2si
sbb
adc
std
cmp
xchg
xor
mov
or
or
push
jb
lcall
dec
or
sbb
call
out
sbb
sub
iret
mov
xchg
cmpsl
cmp
pusha
in
xor
adc
cmp
into
inc
sti
inc
jno
push
and
lea
ljmp
inc
enter
jo
cwtl
insl
pop
jl
xchg
and
cmpsb
mov
jo
jecxz
stc
test
mov
int
pop
dec
and
push
xor
cmp
push
es
cmp
and
cmc
xchg
in
stc
mov
xor
stos
adc
mov
push
jmp
push
xor
cmp
lea
cmpsl
pop
test
imul
rcl
scas
testl
fldl
sbb
test
in
mov
xor
sub
jne
jmp
and
push
sub
pop
imul
push
popa
dec
dec
loopne
xor
pop
add
ljmp
icebp
out
mov
inc
lds
stos
adc
mov
mov
push
and
add
out
gs
imul
adc
cli
inc
cltd
inc
jno
inc
xor
xor
and
mov
lret
push
std
add
and
pop
inc
icebp
xor
in
or
adc
sub
rorb
ljmp
leave
xor
ja
or
cmp
inc
inc
xor
movsl
enter
add
iret
push
addr16
add
mov
add
je
mov
and
ss
and
andl
pop
pop
xchg
and
movsb
mov
add
pop
xor
leave
mov
xor
dec
enter
jne
test
inc
adc
xor
test
sbb
inc
add
add
mov
ja
jb
mov
xchg
cmc
movsl
adcb
mov
imul
test
cld
add
scas
fnsave
add
lock
aaa
pop
mov
gs
mov
sbb
dec
add
call
shrl
mov
cwtl
cli
or
mov
popl
sub
loope
test
ja
sub
lds
jae
pusha
rcrl
rcll
xchg
mov
in
movsl
inc
inc
push
fdivrp
int
fcom
jmp
repz
testb
jmp
sbb
aam
lret
dec
arpl
hlt
shl
xchg
mov
or
xor
adcl
and
shll
cwtl
xor
sarl
imul
sub
xor
mov
add
sbb
xchg
test
loop
sbb
mov
jmp
xchg
sbb
sbb
xlat
and
inc
or
sub
dec
and
xor
sub
sbb
int
xchg
sbb
adc
iret
add
adc
inc
js
jnp
pop
cli
popa
inc
test
js
mov
adc
pop
jge
sbb
scas
add
lcall
leave
ret
xor
fsubrp
stc
pop
dec
inc
sub
movsl
aad
xchg
fwait
mov
adc
or
int3
sub
pop
dec
jg
je
repz
cmc
add
dec
jo
or
cltd
mov
jbe
and
dec
adc
push
add
push
ss
lcall
inc
pop
jmp
push
push
add
adc
popa
aaa
dec
pushf
sub
adc
cld
xchg
or
in
dec
mov
repz
aam
leave
fnstcw
push
fs
clc
add
mov
and
movsl
je
adc
jl
lahf
stc
nop
test
mov
xchg
lods
cltd
sbb
pop
jecxz
xor
and
shll
pop
inc
aad
cmp
ret
xchg
sbb
adc
pop
sbb
xor
lret
sub
cmc
push
adc
sbb
test
push
xor
testl
int3
sbb
movd
in
jne
roll
shll
in
sub
pop
vpsubb
cmc
push
inc
cwtl
pushf
sbb
jne
xor
mov
dec
cmc
imul
sbb
sbb
adc
sub
cld
dec
jge
sbb
jmp
fs
rcrb
sahf
cmc
add
sbb
stc
div
mov
sbb
in
stc
xchg
cmp
sub
cmp
jge
lret
and
rolb
or
mov
test
inc
je
insl
ss
inc
jae
js
imul
cmp
enter
dec
lods
pusha
and
sbb
xchg
movsl
aad
xchg
inc
add
fwait
stos
je
jne
jno,pt
dec
mov
fidivrl
xchg
add
jae
inc
inc
sbbl
cltd
mov
cmp
rcll
mov
test
loop
imul
inc
in
shll
jns
sub
or
cwtl
mov
fldt
mov
jl
icebp
inc
mov
out
and
mov
cld
mov
pop
cmc
clc
repnz
jg
jle
out
pop
and
mov
xchg
int
and
cmp
fcoml
in
xor
sbb
and
or
nop
push
jbe
mov
pop
push
popl
lds
in
mov
repz
testl
mov
mov
ficoms
mov
gs
xor
dec
test
icebp
aaa
int3
adc
push
add
mov
add
int3
lcall
jg
shrl
jno
and
sub
push
in
mov
lcall
jmp
je
pop
xchg
insl
js
imul
call
jg
sbb
insl
sub
cmp
test
pop
push
cld
sbb
pop
inc
mov
inc
adc
lret
mov
adc
stc
in
adc
ret
xchg
pop
int
pop
cmp
sbbl
jle
cwtl
orb
inc
call
aaa
push
add
add
in
adc
add
aad
adc
idiv
cltd
mov
lock
or
mov
leave
and
out
mov
int
dec
and
cs
and
insl
out
std
gs
movsb
decb
movsb
adc
jecxz
lret
arpl
int
ret
mov
mov
daa
insb
inc
hlt
push
dec
add
xor
adc
jns
sbb
mov
movsl
jg
leave
repnz
lods
or
call
or
xor
cltd
cwtl
dec
sbb
lret
xor
mov
sub
enter
lahf
test
add
inc
leave
jae
dec
and
and
hlt
jo
sub
iret
aad
xor
frstor
stos
push
inc
sub
and
shll
sbb
in
out
mov
enter
ffree
rcl
cs
xor
pop
mov
movsl
sbb
cmp
mov
inc
dec
gs
out
inc
add
and
call
ficomps
jo
xor
insl
and
cli
outsb
pushf
mull
xchg
lock
adc
lcall
out
and
push
pop
pop
ja
inc
push
mov
mov
add
movsl
add
mov
out
jbe
cmc
lds
fsubs
aad
xchg
in
and
mov
mov
movsl
add
xor
xor
mov
fnstenv
push
cmpsl
fnsave
xchg
ffree
ret
test
adc
icebp
aaa
sub
gs
shl
xlat
ja
add
ds
pop
repz
sahf
add
or
pop
sub
cltd
out
je
push
jmp
and
fnstenv
xchg
sbb
inc
lcall
sti
mov
dec
dec
mov
inc
fnstenv
fisubrs
enter
mov
jne
cmp
inc
and
ss
cltd
sbb
mov
cmc
and
cli
int3
mov
imul
fdivs
push
inc
sbb
andl
sbb
ja
or
lds
add
add
xchg
push
in
push
stc
cld
pop
mov
aaa
and
mov
sbb
pop
std
pusha
and
dec
mov
or
popl
mov
cmp
ja
std
mov
lds
pop
cltd
rcl
es
sub
cmc
sbb
rcll
or
mov
sbb
cmpsw
cmc
pushf
pusha
sti
pushf
ja
push
repz
fwait
ss
adc
test
cltd
sbb
xor
stc
xlat
cmp
dec
test
mov
out
sbb
sbb
insb
jle
mov
jmp
and
dec
adc
sub
and
jne
mov
and
divb
adc
mov
xorb
test
pusha
xchg
dec
aad
sub
xchg
shlb
dec
test
jne
xchg
mov
mov
mov
pop
hlt
jne
push
jnp
add
std
pop
fwait
pop
mov
mov
xor
mov
call
adc
vrsqrtss
outsl
jns
sbb
in
cmp
mov
lods
cmp
imul
adc
int3
scas
out
pop
int3
shrl
ljmp
push
mov
push
jg
xor
and
jmp
inc
push
jae
pusha
shll
add
and
fcoms
ljmp
aad
rorl
cmpsl
mov
fstl
and
sbb
cmp
fisttps
cmpsb
cmp
inc
sahf
lahf
test
data16
push
sbbl
and
ret
jle
push
repz
into
jne
clc
mov
push
jmp
flds
bound
ljmp
pop
rcr
pop
es
pop
mov
and
fcomi
or
sarb
popa
nop
das
xchg
scas
jl
adc
cmp
cmp
xor
cwtl
pop
xor
in
mov
scas
xchg
ror
sub
lods
movsb
add
sub
xchg
fs
lds
sub
mov
dec
outsb
and
xorl
cmc
xor
and
mov
fisubl
xor
cmpsl
ss
je
push
push
xor
push
push
jae
and
jge
inc
inc
jae
pop
push
xchg
sbb
enter
movsl
hlt
fmull
cmpsb
or
push
sahf
push
pusha
iret
rorb
mov
call
inc
popa
jo
lret
add
pusha
dec
jmp
insl
lea
jae
mov
outsl
daa
xor
fisubrl
imul
decl
popa
mov
int3
idivb
mov
xor
cwtl
dec
jns
mov
in
mov
and
add
clc
imul
negl
insl
adc
movsl
lods
jmp
outsb
mov
aaa
sbb
jge
lcall
movsl
adc
mul
inc
ret
loopne
into
insb
or
inc
aad
das
sub
movsl
sti
andl
adc
cmc
cli
and
stos
insb
test
leave
nop
sbb
and
push
nop
and
pop
mov
cwtl
aad
rcll
adc
ljmp
mov
dec
pop
adc
and
rcrl
scas
hlt
jl
sub
cmpsb
outsl
adc
cmc
movsl
and
pop
push
fisubl
pushf
jae
mov
inc
cmp
insl
push
repz
adcb
xor
jecxz
movsb
cmp
je
mov
and
add
sbb
out
cltd
mov
sub
fcmovnu
fcompl
test
push
test
insl
loope
xchg
in
pushf
loope
call
dec
or
addr16
popa
mov
push
mov
in
adc
popf
je
mov
mov
sbb
jecxz,pt
cmpsl
dec
and
push
fwait
out
add
js
lods
leave
push
cmp
inc
inc
jle
mov
mov
das
rcll
cmp
jge
sti
inc
ret
mov
jne
rorb
loopne
sub
das
rclb
lds
lock
pusha
cmp
std
push
xchg
or
out
jle
mov
fsubrl
jl
movsb
pop
add
xor
ja
ror
das
movsb
inc
paddusw
mov
movsl
std
and
cmp
sbb
roll
and
gs
pop
data16
das
mov
mov
shll
and
js
test
daa
mov
das
ret
pop
jmp
test
inc
mov
sub
pop
shll
icebp
mov
iret
mov
inc
fdivs
and
js
jb
movsb
loop
fwait
into
jmp
movsb
movsl
push
dec
push
dec
adc
add
mov
es
mov
mov
inc
test
add
in
mov
jg
pop
test
sub
call
stos
ja
fldz
clc
icebp
push
je
js
sub
jns
ja
gs
movsl
outsl
and
es
dec
out
out
pop
ja
loope
adc
mov
sbb
jne
cmp
cmp
lahf
data16
mov
and
fwait
mov
ja
cmp
jp
inc
cmp
and
xor
sbb
dec
repnz
or
ret
push
add
movsb
arpl
cmpsl
loopne
repz
popa
and
clc
jae
mov
ficomps
movsl
xor
clc
and
or
fs
ss
std
jg
mov
inc
movsb
add
inc
pushl
jmp
arpl
in
out
jae
je
dec
xor
jle
lock
mov
adc
shll
andl
fcmovnbe
push
aas
push
fcmovbe
cwtl
mov
mov
pop
repnz
add
adc
in
cmp
divl
push
stos
and
movq
and
jnp
dec
push
pop
sub
lock
jmp
jle
jmp
lahf
imulb
les
test
mov
push
mov
lahf
test
jb
jecxz
das
aas
inc
in
sbb
add
cltd
enter
ljmp
xor
mov
mov
pop
pop
sbb
lods
mov
es
sbbl
and
lds
pop
rolb
dec
xor
xor
xor
add
push
movsl
adc
adc
push
mov
lea
jo
movsl
fs
les
xchg
mov
cltd
sbb
mov
mov
loope
out
movsl
xor
add
out
loope
mov
add
fs
adc
fiadds
mov
in
insl
sub
sbb
aad
stc
cwtl
pop
sbb
add
sbb
sub
sub
js
adc
mov
add
mov
sub
dec
xchg
jg
xor
cmp
and
loopne
mov
rorb
xor
jmp
int
mov
cmp
arpl
aad
jmp
loop
cld
cltd
sbb
sub
inc
push
movsl
cmp
or
mov
inc
das
pop
jnp,pn
stc
inc
lcall
popa
std
inc
xchg
orb
jne
dec
out
ja
in
movsb
add
bound
cmpl
xchg
mov
push
adc
pop
mov
movsb
imul
or
mov
lret
cmp
int
movsb
cmp
leave
mov
jae
lahf
mov
lods
cmp
je
xor
sti
xor
and
int
add
mov
stc
std
test
mov
je
test
sub
aad
inc
mov
sbb
cltd
jp
jg
mov
insl
movsl
cwtl
mov
inc
inc
imul
dec
sub
mov
fidivrl
xor
sub
sub
test
mov
and
or
inc
add
fs
adc
in
fsts
cmp
mov
or
int3
ja
aam
mov
xor
shll
sbb
leave
xorl
je
movsl
scas
add
andb
repnz
cmpsl
mov
jmp
adc
loopne
adc
cmp
and
or
cmp
sbb
xor
clc
jns
arpl
sti
and
and
imul
in
mov
dec
fsubs
outsl
mov
push
pop
int
cli
shll
xor
in
movsb
mov
cmp
out
pop
mov
jb
push
adc
jg
fiaddl
fdivr
aam
adc
pop
adc
adc
and
stos
and
sbb
push
pop
test
popf
dec
sbb
int
dec
pushf
in
mov
pushf
or
mov
cltd
jo
and
aam
out
jl
neg
in
pop
sbb
inc
loop
mov
int3
loope
fs
inc
in
int3
add
or
fstps
repz
xchg
in
and
lock
jmp
test
add
insb
sub
es
in
xor
add
push
outsl
adc
shrl
pusha
push
and
cmpsl
sub
movsl
mov
dec
cli
into
out
sahf
ja
inc
mov
insb
mov
pusha
dec
inc
in
dec
arpl
adc
fwait
arpl
adc
stc
and
adc
imul
es
or
dec
jge
and
sbb
stos
cmc
sbb
les
add
dec
dec
out
cmpsl
loopne
jno
fwait
xchg
clc
sbb
xor
push
test
adc
ficoml
lea
or
push
mov
mov
jb
pop
and
iret
and
addr16
mov
inc
cmp
mov
shll
jg
ret
and
jno
lret
adc
sub
sub
mov
shll
and
push
clc
faddl
pop
movsl
mov
jno
data16
xor
cltd
ret
stc
sbb
pop
cmp
mov
cmp
cmp
sub
movsb
clc
or
stos
rcl
inc
push
movsb
xchg
mov
jae
mov
sbb
lea
sub
movsl
push
ficoms
add
pop
inc
out
addr16
into
pop
ds
sub
icebp
and
shrb
orl
push
mov
mov
mov
cmp
sub
xlat
lcall
imul
pop
mov
xor
and
push
push
jmp
lods
movsl
andl
sbb
push
mov
jecxz
mov
xchg
dec
stc
cmpsl
incl
aam
and
push
frstor
icebp
inc
ja
ret
jbe
pusha
pop
and
mov
cmp
clc
and
int3
mov
push
call
test
cwtl
fidivs
stc
add
xor
pop
jo
ds
gs
outsl
dec
sbbl
int3
pop
mov
mov
popf
push
dec
or
xor
jge,pn
adc
imul
and
jecxz
fadds
mov
or
aas
lds
movb
cmp
shll
sub
dec
pop
scas
mov
inc
popa
xor
push
xor
add
and
jmp
repz
or
cmc
ja
rcrl
mov
leave
lods
cmp
mov
add
int
rorl
dec
pop
loop
jmp
dec
cwtl
add
popf
jns
movl
push
shll
frstor
mov
cli
mov
mov
movsl
jbe
ljmp
rol
xchg
fs
fdivrl
jo
adcb
stos
and
in
out
ss
lahf
adc
jmp
mov
push
test
cmp
push
sub
adc
add
notb
scas
dec
stos
push
sbb
test
leave
jl
or
ror
insl
ret
dec
sbb
mov
xchg
push
lahf
push
pusha
xor
movsl
mov
sub
xchg
mov
aad
jae
mov
aad
xor
sti
xchg
imul
xchg
sub
jo
sbb
aad
push
outsl
popf
in
push
jno
test
fwait
fwait
add
xor
or
inc
or
movsl
ss
add
decl
mov
mov
iret
dec
inc
movsb
dec
in
lret
or
test
popa
shlb
int3
loope
ljmp
rol
pop
sub
scas
push
imul
mov
ds
out
negl
movsl
stc
cmp
mov
add
sub
mov
loopne
push
push
sarb
dec
test
inc
pop
dec
pop
pushf
cmp
xor
into
adc
movsl
lahf
and
mov
and
add
jl
in
lret
mov
mov
cltd
push
xchg
ss
add
outsl
nop
ja
cmp
std
adc
add
imul
ljmp
int
add
iret
cmc
push
push
movsb
adc
in
xchg
nop
or
sahf
push
mov
call
iret
and
aaa
movsb
stc
mov
cmp
jno
aaa
hlt
xlat
es
stc
aam
aaa
dec
and
aas
adc
divl
pop
roll
mov
ss
lcall
xlat
in
jmp
cmp
pop
cld
inc
push
daa
faddl
test
pop
pop
mov
push
int3
mov
out
shl
pop
jb
test
xor
mov
mov
shlb
pop
add
loope
mov
cltd
repnz
xor
orps
push
addr16
lret
aaa
lret
cld
and
and
repz
das
xchg
push
push
lret
cmc
movswl
or
jp
rorl
out
movsb
imul
movsl
movsb
test
mov
stos
inc
cmp
cwtl
pop
cwtl
shrb
fmull
cli
and
inc
push
fwait
insb
lahf
push
adc
xor
sti
push
xchg
pop
cmp
push
int3
dec
repz
test
das
leave
add
sub
xchg
push
inc
lods
data16
cmp
pop
in
movsl
frstor
sub
lods
into
sbb
ds
push
ja
push
add
int
mov
out
add
xchg
das
or
xchg
inc
cmp
mov
cmp
scas
test
mov
cmpb
add
dec
adc
pusha
out
xor
cmc
ljmp
push
mov
jne
pop
and
js
adc
push
cmc
movsl
nop
je
fsubrp
lret
sbbb
popf
mov
mov
ja
mov
repz
cltd
pop
xchg
mov
pop
repz
test
inc
and
clc
dec
ret
add
sub
popa
faddl
aam
loope
jb
mov
pop
cmc
xor
nop
out
sbb
imul
and
xchg
lahf
stc
jne
and
push
inc
push
ret
mov
loope
cmp
cmpsl
fcomps
inc
sbb
cmp
flds
fldl
push
call
jae
sbb
data16
sahf
test
mov
lahf
cld
test
and
mov
pop
push
and
test
cmp
mov
rolb
push
sbb
sub
lcall
adc
pop
in
xor
adc
mov
nop
iret
loopne
xchg
inc
mov
mov
cmp
dec
mov
fisubrl
pusha
xor
adc
sub
jg
jno
lret
pop
pop
mov
xor
insl
out
aaa
stc
cmp
aaa
mov
mov
or
xor
cltd
inc
insl
sbb
jo
fs
inc
dec
jo
lds
ljmp
lods
inc
xchg
ja
adc
cmp
and
cmp
and
in
iret
dec
xor
and
sbb
test
addl
inc
xchg
dec
xchg
lock
mov
pop
add
in
pusha
mov
mov
mov
dec
xor
push
std
dec
adc
inc
mov
rcll
in
arpl
mov
and
scas
and
ret
sbb
cmc
loop
push
popa
push
xchg
pop
dec
clc
xor
mov
cmp
dec
cmp
icebp
dec
and
movsl
adc
test
cmp
stos
sbbl
into
stos
shrb
std
ja
mov
repnz
movsl
mov
inc
push
pop
cmc
mov
sub
mov
and
nop
lahf
adc
and
mul
fnstcw
cli
fbstp
xor
add
loopne
add
int3
push
push
inc
push
ss
sbb
fmulp
int
stos
xor
mov
shll
rcrl
jns
ss
xor
xlat
popa
xor
loopne
add
loopne
jae
js
xor
xor
movsb
cmp
roll
cmp
xor
pop
clc
lods
mov
sbb
mov
sti
daa
dec
cmp
mov
daa
nop
add
jp
sbb
dec
pop
pop
xlat
mov
push
sub
xor
adc
cmp
push
pushf
and
imul
push
addb
je
pop
cmp
jl
loop
dec
aas
jle
scas
rorb
popa
mov
jle
mov
mov
mov
ja
and
add
mov
cmp
pop
std
add
sbb
popa
xor
ja
jl
inc
and
cld
mov
adc
xchg
cmp
jecxz
cmp
jmp
cmp
mov
out
mov
dec
adc
into
pop
jbe
add
dec
aaa
jnp
cld
lea
cld
lds
dec
mov
xchg
jo
cld
ficoml
int
js
rorb
cmc
mov
mov
mov
lcall
push
mov
adc
sub
mov
and
push
xchg
or
pop
dec
es
out
cmp
out
dec
or
int
lock
lea
popw
add
popf
or
imul
gs
push
out
into
mov
sbb
push
xchg
test
inc
sbb
sub
jmp
push
fbstp
lock
frstor
dec
ret
mov
xor
sub
sub
scas
or
js
push
stc
jmp
pop
or
ss
and
aam
inc
cmp
sar
fstl
cli
push
sbb
dec
pop
test
ds
jae
scas
jno
in
pop
in
pop
xchg
inc
test
popf
mov
movsb
ja
sub
in
or
cmc
inc
lds
dec
xor
lds
dec
inc
into
jge
and
in
xlat
adc
push
lcall
push
xchg
pop
and
mov
push
popa
lret
pop
iret
xchg
ret
lock
ja
mov
into
push
std
call
ret
adc
cmp
in
dec
jae
out
mov
mov
in
jmp
popa
mov
pop
inc
or
cltd
add
push
cmp
jnp
cmp
stc
sub
fsubrl
add
sub
gs
sub
pop
in
mov
or
dec
dec
mov
push
movsl
je
test
sbb
push
sub
and
sub
add
adc
adc
jp
mov
mov
cmp
xor
xchg
test
mov
or
push
and
cmp
leave
xchg
push
mov
mov
dec
cmp
loope
lock
mov
loope
loope
movsb
and
nop
jns
pusha
inc
xor
adc
ja
xor
cltd
adc
push
adc
or
mov
pushl
adc
ffreep
in
cmp
adc
and
cwtl
inc
and
imul
loop
pop
or
mov
in
movsb
das
sub
sub
mov
jne
push
or
and
sub
add
cld
jae
sbb
mov
aam
xchg
mov
cmp
and
cmp
mov
sub
add
in
div
je
je
popf
push
jle
call
adc
out
stos
cmp
arpl
inc
int
sti
push
leave
ss
out
pop
stos
sbb
in
and
lcall
push
jmp
add
outsb
or
cmpsb
pop
adc
mov
sahf
cmp
fisttpll
jae
imul
cltd
fidivrs
test
gs
xor
stc
add
mov
iret
gs
jle
xchg
in
call
std
and
dec
mov
pushf
int
and
lret
loope
jno,pn
in
iret
sarb
pop
ds
iret
cmp
cld
mov
adc
or
xchg
mov
call
jl
xor
int
lods
stos
orl
inc
enter
cltd
shll
out
cli
repz
cmp
mov
cmpsb
imul
bound
movsl
int3
in
sbb
push
xor
movsb
fdivrs
lret
test
js
pop
jbe
xchg
les
cmp
sub
out
imul
sub
inc
cmp
xchg
add
cltd
xor
cmp
ljmp
lds
das
cmp
call
adc
stos
in
xchg
pusha
push
cmc
pop
pop
loope
add
shll
cmp
vpcmpgtd
icebp
push
mov
dec
mov
cltd
xor
lahf
add
xchg
fdivrl
add
or
mov
gs
lcall
std
mov
shll
xchg
mov
push
lahf
push
sub
in
inc
insl
fs
imul
sbb
push
fwait
sbb
jbe
sub
xlat
ss
cmc
in
push
fsubl
mov
leave
lahf
mov
push
std
stc
cmp
jne
pop
cmc
pop
cld
cmp
xchg
shl
cmc
mov
in
sbb
push
mov
dec
out
xchg
adc
mov
decl
push
sbb
ss
dec
and
ss
in
lahf
xor
loopne
pop
cmc
mov
enter
jmp
dec
pusha
enter
xor
adc
test
inc
dec
push
imul
mov
sub
ss
in
out
add
cli
dec
loop
pop
mov
jne
mov
es
cmc
dec
and
cwtl
lcallw
pop
jle
cld
push
arpl
insb
xor
dec
dec
adc
stos
std
imul
imul
dec
xchg
sti
ret
inc
aaa
in
adc
mov
mov
push
out
cmp
mov
inc
xchg
and
aad
std
jne
sbb
cmp
divl
mov
add
fsubr
mov
clc
mov
jbe
lahf
mov
sub
push
ja
push
popa
xlat
pop
cmc
xchg
dec
into
roll
clc
adcl
dec
jmp
sub
cmpsl
lds
push
and
mov
std
cmp
insb
fs
push
icebp
lcall
xlat
adc
addl
jmp
mov
cwtl
xchg
mov
jmp
aas
mov
pop
loope
in
add
pop
mov
and
clc
xchg
dec
fsubs
lahf
sbb
imul
dec
jecxz
cmc
cmpsl
push
and
add
add
and
mov
cmc
adc
shlb
pop
or
cmp
push
and
xchg
dec
xchg
jae
ret
fdivr
test
cmp
cld
or
in
stc
pop
push
inc
or
xor
add
iret
mov
cmc
dec
insb
gs
or
aaa
test
test
inc
aad
inc
pusha
icebp
ja
fcmovbe
cld
hlt
scas
pusha
or
push
push
jge
imul
jae
cmpsl
adc
loope
push
jno
mov
jle
add
adc
orb
xchg
fwait
mov
cmovns
xchg
xor
sti
in
sbb
xchg
cmpsb
mov
cmpsl
adc
mov
int
frstor
rolb
cmp
test
fistps
xor
cmp
dec
xorb
inc
lret
pushl
pusha
push
cmp
imul
out
movsl
das
push
pop
xchg
jno
mov
rcl
aaa
mov
lahf
add
xchg
pusha
dec
cmp
in
mov
sbbb
cmp
int
mov
sbb
push
ljmp
clc
aas
popa
mov
mov
int3
jmp
mov
out
jae
and
xlat
dec
fnsave
js
cld
rorl
lods
mov
add
das
in
and
cmp
mov
xchg
ja
cmp
cs
cmp
mov
sbb
sarb
xor
xor
push
push
or
or
mov
fadds
in
pop
fbstp
fnstenv
sub
inc
mov
dec
enter
mov
pop
aaa
xor
rclb
daa
out
push
dec
data16
jle
shrl
sub
mov
loope
adc
sub
sbb
fstl
push
dec
aad
sti
lds
pop
push
lcall
and
nop
int3
in
bound
in
jbe
pop
pop
xor
pop
sbb
testl
fiaddl
inc
or
fisttpl
and
movb
sbb
xchg
lahf
iret
xchg
lods
jae
popa
and
lods
dec
jle
sbb
inc
mov
dec
daa
imul
push
and
rcrb
sbb
and
lret
lcall
cld
fsubl
sahf
mov
inc
sbb
movsl
arpl
add
cmp
imul
dec
push
loop
repnz
xchg
enter
add
mov
jbe
and
add
pushf
sahf
mov
loope
out
add
es
js
test
arpl
cmp
pop
mov
test
call
xor
lahf
test
dec
cmpsl
or
push
sbb
or
subl
imul
xchg
add
pop
in
or
push
sub
daa
test
inc
lcall
int3
mov
push
movsb
sub
test
popf
out
add
sbb
mov
gs
mov
scas
sbb
lret
stc
cli
sbb
stc
vunpcklps
push
bound
jae
insl
aas
in
nop
add
mov
xor
repnz
inc
jae
jmp
cmp
sbb
add
jge
ljmp
push
add
and
push
sarb
fcoml
outsl
daa
mov
lods
pop
adc
sbb
push
incl
sub
pop
xchg
xor
out
insl
inc
jg
pop
xor
bound
lret
shll
in
cld
add
fimull
mov
jbe
mov
sub
sbbl
arpl
mov
pop
imul
daa
jne
in
mov
sti
cltd
outsb
dec
sti
popf
imul
sbb
repz
sbb
movsl
adc
sbb
testl
inc
or
stc
jecxz
call
in
inc
cmpsl
in
cmp
mov
sahf
js
out
mov
push
mov
xchg
xor
sti
je
mov
dec
or
push
mov
xchg
movsl
pop
cmp
pusha
push
cmp
lds
mov
dec
clc
test
xchg
push
in
jae
insl
adcl
repnz
adc
clc
out
daa
jnp
into
and
pop
imull
xchg
sub
xor
inc
subl
cwtl
pop
sub
shll
int3
movsb
int3
pop
dec
iret
inc
dec
adc
pop
inc
test
insb
mov
pop
adc
mov
es
sbb
sbb
fdivr
test
mov
mov
mov
sbb
jb
dec
loope
jg
shlb
push
mov
xchg
fdivrl
sub
test
stc
sbb
cli
adc
repz
pop
es
adc
inc
pusha
adc
dec
pop
push
es
jmp
pop
mov
in
movsl
lret
cwtl
xor
push
fcoms
pop
or
cltd
xchg
push
push
or
lds
dec
mov
push
adc
cmp
mov
std
clc
pop
pop
clc
movsl
lock
mov
insl
or
stos
es
out
lods
xor
cmc
push
adc
bound
shl
sub
xchg
push
gs
cld
xchg
imul
cmp
mov
pop
bswap
pop
std
shr
pop
jne
daa
cmpsl
in
add
xchg
int3
jo
in
xlat
pop
jne
ja
aam
jbe
lea
add
mov
imul
adc
and
jne
pop
and
imul
stc
std
imul
jle
xchg
out
jmp
xor
out
sub
dec
mov
and
xchg
sbb
fs
cwtl
mov
outsl
inc
sub
mov
shr
movsl
mov
repz
xor
ja
mov
mov
sub
je
out
into
mov
or
fwait
inc
pop
out
movsb
imul
mov
fs
xor
fisttps
in
js
arpl
flds
ja
pop
and
add
jne
mov
repnz
inc
add
jg
andb
sbb
push
mov
nop
dec
and
mov
add
nop
in
pop
or
dec
dec
jns
sbb
and
or
and
and
cmp
and
cmp
xchg
xchg
pop
push
mov
sar
shll
inc
cltd
pop
mov
and
or
sub
ret
in
inc
mov
jmp
div
add
pushf
loop
xlat
test
in
inc
lods
mov
sbb
es
mov
movsb
out
xor
mov
loopne
scas
popa
and
add
add
push
testl
inc
out
rcl
cld
mov
ret
rclb
sub
aam
daa
rcll
ficompl
imull
push
mov
rcl
jae
dec
and
lahf
and
mov
adc
ss
daa
int
in
pop
or
inc
mov
pop
adc
fldl
inc
or
cmpsb
cmp
push
or
sub
daa
aam
test
pop
or
popf
and
arpl
shl
xchg
push
call
data16
rorl
jns
mov
dec
sub
les
push
add
and
mov
clc
inc
idiv
jo
in
mov
jecxz
out
shl
test
ret
xchg
adc
je
nop
mov
cmp
hlt
ljmp
in
sub
jp
loope
mov
out
clc
add
loopne
xor
mov
pusha
or
push
and
sub
push
test
testb
push
out
cmpsl
test
ss
popa
int3
jecxz
call
ljmp
mov
cmp
xor
push
pop
cltd
je
dec
popf
scas
xor
mov
ret
push
inc
adcl
cwtl
mov
in
mov
push
inc
pop
pop
push
push
pushf
movb
adc
loopne
xor
movsl
add
aaa
ljmp
jbe
adc
inc
jbe
clc
testb
test
mov
push
scas
cld
mov
outsb
mov
movsb
cmp
mov
cmp
lods
sbb
push
dec
inc
mov
lcall
xchg
cmpsl
push
xchg
lcall
adc
xor
sub
shlb
and
imul
pop
adc
daa
adc
jmp
outsb
rcr
cltd
mov
mov
gs
inc
pop
dec
lcallw
jmp
jne
fidivs
push
mov
aaa
test
lret
xor
and
sub
push
pop
aad
lret
push
add
das
dec
divl
aam
dec
scas
sub
adc
pop
pop
xchg
mov
je
insl
sub
xchg
dec
sbb
movsl
mov
andl
inc
mov
cmp
jo
mov
jae
jns
cmp
pusha
aad
fs
and
push
pop
mov
cltd
add
sahf
and
mov
lods
cmp
xorl
in
and
inc
ret
out
sub
and
movsb
dec
pop
cmp
add
idivb
nop
cli
cmpsl
in
sbb
fwait
or
jmp
and
sub
imul
jbe
ret
mov
xor
stc
loope
pop
test
pusha
pop
out
xor
push
insb
xlat
aaa
dec
pop
mov
pop
cmpsl
pop
rcrb
mov
cld
xchg
aas
xchg
gs
and
add
movsl
lock
ja
add
sbb
jae
loope
xor
js
sub
inc
dec
repz
mov
rcll
jbe
ja
hlt
rorl
jg
sbb
add
inc
sbb
adc
lock
push
call
push
pushf
xchg
and
testl
jle,pt
iret
out
lds
mov
mov
cmp
add
mov
push
add
xchg
fcomps
push
jmp
dec
arpl
mov
xchg
push
pop
enter
hlt
push
lea
movsb
jmp
adc
nop
adc
xchg
cs
inc
cmc
mov
sub
cmp
inc
or
push
jmp
inc
movsl
xchg
lcall
es
mov
or
jne
test
adc
mov
test
jo
sahf
adcb
fcompl
xchg
loopne
mov
sbb
mov
and
lods
lret
daa
inc
inc
mov
std
int3
add
stc
pop
adc
movsb
cltd
lret
int3
cmpsl
cmovp
int
filds
xor
or
movsl
cmc
cli
lods
or
lret
out
stc
sbb
xchg
rolb
inc
in
mull
inc
and
lahf
das
shr
cli
loop
lods
dec
and
in
mov
mov
push
std
pop
and
cs
cmc
shl
ljmp
mov
dec
xor
mov
test
push
test
incl
mov
sti
shlb
jae
in
xchg
mov
je
adc
in
mov
add
lds
movsl
inc
rcrl
lea
pushf
notl
pop
mov
cmp
in
loope
sbb
lods
mov
inc
push
cwtl
and
xor
xor
sub
int
fwait
or
sub
and
add
es
ja
jmp
arpl
adc
pop
mov
cmc
daa
je,pt
cwtl
mov
ja
cmp
scas
in
adc
or
mov
adc
add
sbb
jge
std
pop
cld
into
ss
sub
inc
fs
pop
ja
ss
push
sub
nop
inc
insb
cltd
mov
cmp
cmp
data16
push
and
adc
inc
and
add
pop
and
cmp
mov
aad
testl
repz
stos
test
int3
pop
fnop
in
inc
or
cmp
or
adc
pop
adc
call
cmp
and
add
insb
mov
add
incl
in
cwtl
adc
sub
add
sbb
scas
mov
cmc
and
fmuls
push
jne
lahf
ret
push
sub
mov
cmp
mov
inc
cltd
ret
add
lcall
insl
lds
imul
in
xchg
loopne
xor
arpl
inc
and
mov
pop
sbb
aaa
or
lds
sub
add
sbb
cli
stos
pop
daa
add
xor
add
xchg
shll
out
add
push
out
mov
stc
gs
mov
mov
cmp
aaa
xorl
cs
stc
pop
adc
and
inc
in
cmp
movsl
inc
sub
dec
sbb
sub
mov
into
cmp
aad
xor
cmp
mov
inc
ja
stos
jno
movsb
mov
fxch
mov
add
xor
es
cltd
jecxz
popa
cmc
adc
int
movsl
push
inc
inc
cltd
pop
insb
frstor
jbe
inc
into
jns
sub
test
std
inc
mov
aas
xor
xor
and
adc
dec
sub
add
sub
pop
mov
xchg
pushl
push
movsb
inc
inc
call
clc
or
aaa
push
mov
xor
jmp
adc
aaa
lds
or
gs
in
jae
mov
stos
and
fwait
cltd
add
sub
sub
movsb
loope
mov
sbb
test
add
sbb
sbb
int3
loop
aaa
or
in
cmc
jne
add
lds
mov
cmp
jecxz
cwtl
xor
cli
xor
sub
imull
inc
ds
or
loope
jle
mov
cmp
popf
dec
mov
and
stos
jmp
jp
jmp
jg
mov
std
adcl
rcll
xor
enter
jl
adc
fs
push
cwtl
pop
add
mov
jle
pop
xchg
cmpsb
in
loopne
decl
jg
jae
int3
out
sub
dec
stc
sub
cmpb
jae
loop
and
pop
je
test
jg
lods
add
cmp
out
cltd
es
inc
push
push
sub
and
sub
ret
out
xchg
fs
clc
ret
pop
cmp
dec
icebp
dec
jns
popa
pop
aam
inc
roll
imul
push
test
xor
mov
cmp
sbb
inc
push
and
cmc
jnp
ss
ljmp
and
or
out
in
dec
divb
push
and
push
js
pop
mov
push
int3
leave
xchg
loop
add
jmp
mov
shll
and
pop
pop
lret
aas
xor
sub
cs
adc
dec
sbb
xor
push
cmp
adcl
and
xchg
pop
push
std
js
sbb
mov
cmp
and
xchg
les
sbb
and
insb
sbb
icebp
and
mov
in
lods
add
int3
inc
jp
sbb
push
testl
inc
test
std
ja
test
std
sub
pop
sti
jb
mov
imul
in
dec
dec
sbb
ds
push
mov
xchg
inc
mov
outsl
mov
pusha
hlt
lcall
jo
mov
sub
pand
xchg
and
dec
pop
cmp
es
scas
in
add
sti
jb
dec
and
stc
ljmp
outsb
loope
insl
movsl
lahf
ret
dec
sarl
jne
xchg
dec
test
jecxz,pn
sbb
pop
mov
popa
fnstcw
imul
gs
adc
add
and
or
out
jnp
add
pop
mov
lret
xorl
sbb
rol
movsb
cmp
loopne
adc
pop
xor
rcll
test
jl
outsl
jno
mov
sub
mov
int
int3
add
adc
rolb
adc
jae
cmp
ja
sbb
xchg
stos
fucomp
sub
hlt
cld
in
decl
pushf
inc
loop
cwtl
std
mov
sbb
outsb
mov
adc
popl
sbb
jl
push
xor
add
lds
xor
cmc
mov
xor
gs
mov
xor
je
cmp
mov
sbb
xchg
aam
xchg
mov
xchg
mov
mov
cltd
call
mov
push
sub
mov
fistpll
ljmp
fwait
loop
pushf
mov
jbe
xor
mov
mov
push
mov
push
ret
lret
add
adc
dec
push
pop
adc
test
cs
push
inc
scas
inc
sub
or
mov
in
dec
mov
xchg
cmp
ja
les
adc
mov
movsb
js
push
adc
xor
clc
sbbl
sarb
stc
dec
repz
scas
cmpsl
xor
movsl
mov
push
cmpsl
sbb
dec
ljmp
mov
or
pop
dec
and
dec
test
add
cmp
add
or
lods
cltd
mov
jb
jae
sahf
xchg
mov
push
adc
aaa
mov
and
and
adc
int
loopne
mov
dec
cmp
adc
adc
into
andl
es
in
clc
fdivr
cwtl
cmp
test
xor
pop
call
cmc
or
mov
sbb
xchg
repnz
push
gs
cmp
inc
sub
sbb
inc
or
fisubl
pop
enter
lods
dec
pop
push
icebp
movsl
mov
icebp
add
repz
adc
in
test
push
jmp
bnd
jmp
cmovae
xchg
in
mov
stos
movsl
and
mov
movsb
jmp
pop
add
add
jecxz
cmpb
pop
xor
push
sbb
mov
cmc
inc
fcos
gs
or
call
movsb
jae
sbb
and
insl
out
xchg
mov
mov
hlt
cmp
test
repnz
out
or
nop
dec
lods
lahf
pushf
stos
sbb
sub
cmp
iret
in
in
jne
lret
mov
adc
lock
push
xchg
decb
in
popf
sub
lods
gs
cmc
dec
scas
in
and
subb
adc
testl
inc
sbb
cltd
push
mov
push
jb
inc
lret
cmpsl
add
jp
fidivl
outsl
jmp
adc
mov
sbb
push
fdivl
movsb
jecxz
mov
sti
dec
jl
stc
repnz
adc
enter
mov
cmpsl
dec
dec
jne
repz
loope
imul
cmp
fidivrs
idivb
mov
lahf
je
mov
jae
xor
pop
mov
mov
and
ret
stos
and
movsl
movsl
push
mov
and
out
jbe
sbb
lret
add
cmc
pop
mov
add
pop
push
inc
cmp
and
xor
cmp
aad
pop
inc
xor
add
pop
sbb
daa
sbb
inc
cmp
push
and
inc
cmp
and
std
into
pop
push
mov
push
jns
xchg
inc
icebp
mov
popa
dec
fsub
in
iret
lcall
and
push
mov
xchg
push
adc
sbb
fld
je
jae
inc
pop
cmpsl
push
pop
gs
aas
movsl
lea
dec
cmp
ja
sub
lds
cs
mov
or
in
sub
leave
cmc
cmp
sahf
test
out
inc
jp
jecxz
cmp
fisubs
push
mov
dec
jb
ds
and
xorb
and
push
mov
mov
outsl
loope
adc
and
divb
xchg
fidivl
aaa
aad
loope
scas
andb
jae
sub
jb
mov
adc
cmp
sub
or
xor
xor
and
jo
int
insl
xor
stos
push
xor
popa
or
mov
adc
call
pop
xchg
out
in
xchg
pushf
hlt
xchg
sbb
das
push
adc
and
lahf
add
mov
pushf
adc
lahf
icebp
cmp
inc
add
lods
mov
mov
cltd
xchg
enter
cld
push
mov
clc
mov
std
jmp
add
mov
sbb
aad
aam
mov
lock
je
ret
hlt
inc
int3
dec
xchg
sub
test
daa
xorb
sub
pushf
in
xchg
in
fucomp
call
sti
adc
hlt
test
aas
and
add
je
pop
cmp
imul
and
and
jnp
xor
iret
mov
sar
lds
shll
arpl
pop
and
dec
or
loope
pop
mov
mov
fistpll
cmpb
loopne
std
clc
xchg
mov
cmc
jle
inc
aam
cwtl
shrl
mov
mov
bound
imull
movsl
aaa
adc
test
sub
mov
mov
xchg
xor
cmpsl
nop
sub
negb
jb
adc
loope
rol
mov
int3
pusha
js
js
into
lock
ljmp
stos
mov
and
push
lock
cmp
lahf
add
xchg
mulb
and
jae
aaa
dec
xchg
rolb
fs
aaa
out
mov
dec
ds
imul
xchg
cmpsb
pop
pop
aaa
gs
sbb
mov
push
push
test
inc
mov
movsl
pop
fwait
jnp
fistpl
hlt
add
and
jle
test
push
pop
scas
add
lret
in
mov
and
pop
pop
jae
jg
mov
sbb
sbb
dec
cmc
and
sub
imul
cs
loope
lock
cs
movsl
jp
xor
int3
xor
out
adc
pop
adc
mov
stos
out
in
bound
faddl
movsl
adc
adc
cs
in
loopne
push
movsb
jb
and
andb
add
mov
push
mov
mov
dec
daa
xchg
push
lock
lahf
push
into
xchg
xor
mov
or
jmp
cld
add
xchg
jb
loopw
fnsave
add
push
mov
mov
movsl
add
push
push
movsl
outsb
js
int
fucomp
testb
cwtl
dec
andl
jb
push
pop
sub
lret
decb
cmc
pop
popa
cld
rolb
cltd
adc
outsl
fsts
and
mov
adc
ljmp
add
or
pop
or
push
sbb
das
dec
pop
dec
in
push
aas
rcrl
push
xor
sarl
mov
xor
mov
and
daa
in
lret
dec
pop
faddl
sbb
aam
mov
sub
xlat
xor
jge
mov
pop
push
inc
jp
imul
loopne
xchg
jns
movsb
dec
fdivl
dec
pop
stc
and
cmp
ds
jae
mov
pop
daa
xor
and
xor
xlat
lret
aam
xchg
cmpsl
adc
out
inc
aaa
insl
sbb
ss
xlat
sahf
mov
lds
jmp
cmp
inc
jge
xchg
setl
and
data16
mov
lea
mov
jg
aam
mov
lods
fisubrs
es
push
fdivr
sbb
mov
mov
mov
add
pop
gs
sub
cmp
dec
or
or
inc
inc
inc
fstl
xor
clc
iret
je
test
test
mov
pushf
sub
pop
or
or
mov
mov
lret
push
faddl
mov
pop
add
mov
jb
lret
out
and
int
test
pop
scas
shlb
jg
mov
sbb
mov
call
dec
and
or
mov
push
or
jne
and
push
or
cltd
xchg
and
cmp
lds
push
adc
cmc
lret
cmp
mov
imul
jg
bound
in
roll
das
cmp
inc
nop
test
notl
dec
pushf
or
push
lds
call
jl
call
aam
and
push
cmp
fstpl
adc
push
fstl
stos
xchg
out
jge
rorb
pop
and
add
lret
orl
push
in
xor
in
sbb
jns
jb
adc
sbb
sub
out
fisttpll
pop
and
xor
stos
and
rcrl
jbe
cmpsb
imul
shl
enter
ret
jp
in
xchg
pushf
pusha
dec
ja
mov
pushf
int3
cmp
in
rcrb
mov
sub
jge
or
testl
test
leave
outsl
iret
push
jmp
adc
xchg
faddl
test
dec
push
mov
or
xchg
fsubs
mov
and
pop
mov
rcr
adc
outsb
movsb
nop
fsubl
inc
sbb
cmp
lods
cmp
js
and
push
test
fdivs
ljmp
dec
imul
push
inc
sti
cmp
jae
rolb
cmpsb
pop
jge
xchg
push
lods
xchg
dec
and
aam
aad
inc
adc
xchg
jnp
cmpsl
imul
movsl
xchg
lahf
sbb
mov
dec
es
lock
fcoml
inc
pop
sub
and
fcomps
cltd
out
add
cli
lahf
cmp
mov
jmp
ljmp
cmp
sub
in
and
mov
addr16
push
mov
test
loope
xorl
inc
lahf
xor
cmc
into
sub
daa
push
mov
test
fiaddl
fwait
ret
popf
or
xor
aas
mov
mov
int3
in
xchg
pop
mov
pop
loopne
jg
ja
stos
pop
sub
jl
cwtl
adc
popf
pop
mov
push
dec
pop
push
idivb
daa
dec
gs
sub
mov
push
sub
pop
std
mov
push
clc
xchg
int
je
inc
scas
inc
dec
imul
scas
fldl
push
arpl
stc
add
in
lods
and
jno
sbb
dec
pop
pop
ja
or
jb
sbb
vshufps
or
addr16
cmp
neg
dec
insb
push
sbb
mov
popa
stc
and
dec
sub
xor
and
sub
bound
or
cli
or
or
outsb
pop
jno
loope
xchg
outsl
icebp
mov
jnp
in
rcrb
enter
cs
aad
sub
aas
mov
repz
fsubrs
and
std
and
sub
inc
jne
inc
vminsd
popf
aaa
out
or
sub
icebp
adc
test
and
xchg
jno
popf
push
dec
daa
sub
add
jne
sbb
test
neg
je
fmulp
stos
call
dec
sub
out
dec
shlb
lods
ljmp
movsl
outsl
jecxz
movsb
adc
pop
not
mov
test
push
add
aas
inc
cmp
movb
sub
and
loop
loope
xchg
inc
mov
lea
dec
daa
adc
dec
mov
aam
lods
cmp
dec
fildll
push
fs
shrl
stc
push
inc
jbe
aad
in
mov
cmp
and
dec
sub
aad
cltd
rcll
hlt
mov
and
std
sub
and
es
and
mov
jne
mov
sub
xchg
mov
mov
bound
je
push
pop
mov
dec
lods
notl
push
fdivl
pop
movsl
sbb
xchg
jg
dec
fadd
adc
sbb
hlt
movsl
dec
adc
stc
jmp
aas
jb
mov
rolb
in
lahf
outsl
lods
out
in
jmp
fldenv
arpl
in
add
sbb
lods
xchg
mov
pop
sbb
push
push
shll
cmpsl
outsl
test
call
orl
int3
mov
loopne
add
xor
mov
sti
insl
fcompl
xchg
inc
loop
icebp
cltd
inc
cmp
push
cltd
dec
repz
xchg
push
int
jmp
add
dec
pop
pop
pop
mov
cltd
xor
inc
add
cltd
iret
and
test
por
jg
rolb
or
push
inc
xchg
cld
or
stc
dec
shlb
aaa
cmp
shr
cmp
push
and
adc
push
mov
add
movsl
push
jns
mov
push
in
cmp
movsl
dec
jmp
push
aas
add
test
int
lea
push
loop
ja
imull
ss
std
jge
xor
stos
icebp
and
xchg
test
rcl
dec
add
mov
sub
pop
loop
add
movsb
cmp
cld
xchg
mov
dec
sbb
inc
lods
jae
push
idiv
lods
repnz
in
and
add
jns
mov
and
xchg
and
or
imul
dec
xor
adc
les
cmp
push
aam
mov
pusha
subb
push
mov
sahf
pop
jno
lret
jae
rcrl
add
sbb
icebp
dec
jo
movb
fadds
jae
push
xor
mov
int
push
mov
or
cmp
int3
add
and
mov
xchg
mov
dec
in
lret
add
pop
test
loopne
dec
and
mov
push
mov
insl
cmp
test
imul
loop
loop
mov
xchg
jbe
add
outsl
mov
lds
mov
mov
lea
dec
sbb
lret
aad
jbe
aad
sbb
movsb
leave
fcom
jbe
push
cmpsl
push
out
jp
fbld
inc
add
jecxz
test
xor
sbb
test
lcall
xchg
test
data16
roll
out
and
add
je
sub
ss
lcall
mov
and
out
cmp
add
cld
int
mov
js
lds
stos
lock
pop
aas
mov
cmp
nop
cmpsl
mov
ret
stos
fdivrp
push
fldl
and
xor
jl
and
inc
in
int
xor
adc
or
mov
jae
mov
mov
dec
xchg
mov
iret
std
inc
leave
jge
jbe
adc
xor
xchg
movsl
xlat
jge
aam
mov
adc
hlt
and
or
mov
js
mov
mov
jbe
outsb
imul
dec
incb
movsl
jns
and
in
lea
and
shl
cmp
loope
adc
push
and
sub
out
insl
dec
mov
mov
and
inc
popf
sub
es
jb
mov
loope
jne
sbb
bound
in
movsl
add
add
and
sar
fdivl
movsl
fisubl
mov
repz
pop
in
xor
addr16
test
mov
sbb
and
gs
xchg
out
mov
je
push
and
fcomps
cmc
rorb
jb
ror
in
bound
sahf
mov
aas
je
mov
js
jmp
add
inc
shll
and
cltd
shll
lahf
pop
outsb
mov
inc
xor
jb
popa
jb
inc
dec
mov
fisubs
daa
and
std
sub
xor
shrb
cmp
jns
xor
add
mov
cltd
lret
cmp
mov
aam
xor
push
out
and
and
mov
adc
push
fbld
sub
pop
sahf
fists
push
addr16
fisttpl
fstpt
lods
dec
jnp
mov
stos
mov
dec
mov
repnz
sbb
call
dec
push
jp
cmovo
test
jnp,pt
pusha
in
bound
add
pusha
or
pop
and
inc
cltd
int3
in
negl
push
pop
les
add
and
in
mov
push
ret
mov
xchg
jmp
lahf
xor
ret
cmpsb
xorl
push
jns
add
cmpsb
push
inc
lahf
and
mov
and
sub
dec
mov
cmp
pop
or
mov
pop
push
inc
repz
adc
call
or
sub
xor
nop
mov
add
sbb
in
cmp
vpor
xlat
out
int3
in
stos
sbb
adc
ljmp
movsl
repnz
sub
adc
rolb
add
fdivs
mov
mov
ds
push
ljmp
dec
out
dec
or
test
imul
leave
test
push
data16
std
aas
mov
fwait
jmp
mov
and
sub
leave
xchg
fcomp
fnsave
dec
mov
in
or
je
lea
push
xchg
mov
lret
adc
push
pop
test
mov
icebp
std
fistps
adc
sub
stc
das
sbb
xor
xor
loope
add
test
cmp
or
mov
xor
inc
adc
add
cs
push
outsb
xor
mov
dec
pop
jb
pop
mov
movsl
lea
ret
nop
out
cli
jp
cmp
mov
xor
ja
xchg
push
inc
out
push
dec
loope
xor
cmp
shl
mov
sbb
jmp
pop
nop
mov
mov
ljmp
test
fmuls
xor
cld
insb
mov
fsub
test
and
fnstsw
scas
xor
test
jne
mov
dec
jmp
pop
testb
test
nopl
pop
es
call
push
leave
pop
mov
test
call
mov
cmpsb
jbe
fisttpll
add
fstpl
inc
xchg
gs
push
fucomip
stc
in
cmpsb
popa
jns
lea
mov
lea
mov
adc
insb
ljmp
inc
or
xor
or
pusha
int3
lcall
add
push
and
in
mov
cmp
dec
push
fwait
xchg
aas
push
aas
sub
add
mov
popa
lds
popl
push
inc
push
dec
mov
int
aam
and
and
mov
mov
and
std
xor
div
mov
sahf
adc
cmp
cmp
mov
call
xchg
inc
ds
pusha
adc
or
add
or
push
rcr
cmpsl
nop
test
mov
clc
imul
and
pop
mov
and
loope
jmp
or
xchg
xchg
es
sub
movsl
pop
push
into
push
out
or
fs
cwtl
and
dec
movsl
push
mov
jp
cmc
out
pushf
mov
mov
adc
add
fsubrs
mov
mov
xlat
dec
xchg
iret
mov
mov
movsl
cltd
cwtl
pop
mov
adc
call
divl
cmp
mov
mov
mov
clc
cltd
mov
loope
dec
xchg
call
pop
jl
pop
in
ljmp
mov
add
enter
and
push
push
lahf
cli
cmp
std
fstps
pop
or
adc
jne
gs
adc
pop
or
in
sbb
cmpsl
dec
into
jle
push
rcrb
dec
ss
pop
movsl
inc
je
xchg
or
cli
loope
mov
mov
cltd
sbb
jae
das
fisubrs
mov
pop
clc
jae
add
aam
and
in
loopne
fadd
cmpl
lods
mov
cmp
push
dec
std
and
xchg
lock
pop
add
sub
cld
push
add
sbb
adc
pop
mov
aam
ljmp
cmc
cmp
movsl
cmc
inc
add
and
dec
imul
lds
mov
jecxz
les
sbb
in
adc
in
movb
mov
call
rcr
xor
xor
cmpsb
adc
into
lret
movsl
cmpsl
mov
sub
cs
inc
insl
je
aad
insl
cmp
mov
mov
adc
inc
dec
inc
push
sbb
xchg
lea
sbb
mov
jnp
in
in
gs
inc
repz
jmp
lahf
in
and
mov
dec
cmp
int3
pop
xchg
scas
push
mov
adc
pop
xchg
int3
sahf
stos
repnz
and
push
dec
mov
cmp
cs
or
rcl
jp
faddl
ljmp
movl
pop
loope
movsb
in
mov
push
push
test
mov
sbb
and
aaa
adc
movsb
mov
mov
gs
push
jns
mov
add
out
jbe
push
jmp
xlat
rcrl
lret
call
adc
daa
enter
xchg
xor
fistpll
push
sub
or
imul
sarb
fisubrl
or
mov
cmp
es
lds
and
cmp
pop
push
daa
mov
mov
push
ret
jno
sbb
dec
push
jbe
and
xchg
and
cmpsl
jl
das
cli
adc
js
mov
pop
aam
sub
mov
jge
pushl
dec
imulb
dec
loop
fidivs
data16
mov
outsl
repz
movsl
loope
cmp
and
adc
or
push
in
fs
adc
fwait
jge
js
lar
fnsave
mov
call
call
and
dec
pop
addb
dec
test
daa
aam
or
mov
adc
push
add
push
adc
cmpsl
inc
mov
lahf
dec
sub
adcb
push
add
movsl
xor
in
cli
dec
data16
cmp
pusha
test
dec
lret
sbb
popa
pop
cmp
ja
pusha
dec
and
jl
push
add
add
pop
fs
iret
sub
jg
sub
fsubr
movsl
push
mov
xlat
out
xchg
inc
xchg
jmp
sbb
xor
adc
popa
enter
adc
cmp
cwtl
loopne
mov
lods
sbb
lahf
or
cmpsl
scas
mov
adc
push
or
xchg
pusha
xor
or
sbb
xor
mov
pop
jno
movsb
fimuls
push
or
enter
aam
pop
pop
push
insl
jge
std
sbb
jae
movsl
xchg
dec
repz
or
fiaddl
pop
adc
adc
shll
jle
ret
and
fisubs
mov
mov
mov
and
inc
pop
xor
stc
mov
fwait
jle
stos
pop
push
jp
cmp
xor
sarb
into
int
lret
adc
incb
push
cmp
leave
jmp
cmpsb
mov
je
add
xchg
mov
sub
mov
xchg
xlat
mov
js
mov
nop
adc
in
xchg
cmp
mov
jo
mov
mov
sub
mov
jne
subl
aas
in
ja
gs
ret
add
clc
mov
xchg
push
xor
dec
mov
cltd
adc
adc
dec
jge
push
lret
js
std
movsb
ja
test
and
xchg
pop
ficoml
xchg
xchg
cmp
test
inc
js
lcall
ret
add
adc
mov
test
or
ja
or
fcmovnb
clc
adc
notb
pop
mov
jnp
imul
loopne
push
add
push
lds
sub
lds
inc
cmp
data16
dec
test
lock
pop
or
inc
pop
adc
movsb
daa
adc
data16
or
and
imul
jb
hlt
adc
insb
out
stc
pop
sub
or
out
xor
xchg
push
imul
cwtl
cmp
inc
call
push
mov
cmp
into
shll
and
cmp
adc
add
outsl
and
sub
in
xchg
in
sbb
fadds
pop
not
mov
mov
cmp
cmp
sub
fsubrl
in
mov
ret
movsb
popf
sarb
test
dec
aaa
pop
and
sbb
push
lds
and
loopne
test
sbb
movsl
push
hlt
mov
mov
sub
cmove
mov
dec
jg
rolb
test
or
xor
mov
idivb
mov
fnstenv
jne
or
lods
cmp
jl
push
inc
dec
sub
lcall
sub
add
cmc
sbb
addl
adc
pop
cs
dec
push
pushf
sbb
cltd
cli
std
dec
or
add
jae
dec
and
mov
rorb
push
sbbl
pop
sbb
sbb
dec
inc
jg
clc
movsl
cmpsb
stos
add
xor
orb
lret
ret
jg
mov
xor
addr16
imul
ffreep
imul
xor
add
ret
movsl
xor
pop
mov
sbbb
cmp
inc
daa
incb
dec
enter
jno
or
mov
decb
icebp
inc
jl
xchg
jnp
dec
lds
cmp
or
addr16
sbb
mov
inc
xor
adc
or
dec
scas
inc
pop
and
inc
aam
jnp
daa
or
pusha
xchg
or
inc
scas
lods
dec
les
je
xlat
sbb
dec
dec
pop
shl
rorb
jb
pusha
out
lahf
jae
fistpll
adcl
lock
roll
sbb
xor
push
icebp
push
inc
xchg
sbb
cli
mov
mov
sbb
jne
daa
adc
dec
subb
sub
sbb
into
and
sbb
add
ret
cmc
ds
add
in
std
gs
ret
xchg
dec
jle
inc
add
inc
xlat
xor
insl
and
add
or
lods
pusha
adc
lds
test
push
std
or
movsl
cmp
cmc
sbb
test
mov
enterw
loope
and
ss
inc
jb
jge
mov
lret
pop
mov
mov
mov
fdivs
cltd
mov
call
push
movsl
cli
ret
inc
sbb
movsb
sub
mov
scas
jecxz
pushf
test
push
int3
xor
sub
lcall
push
daa
sub
sbb
adc
repz
cmp
mov
loopne
inc
mov
mov
test
in
xchg
int3
fsubrl
sub
cs
inc
movsl
mov
inc
ds
inc
lds
fnstsw
jge
out
test
adc
jae
ret
fmuls
out
ret
inc
xor
xor
mov
mov
mov
jmp
jecxz
cmp
in
jg
fildl
in
jge
lcall
cmp
inc
popa
sub
mov
adc
add
push
push
loop
cmp
jnp
inc
es
xor
mov
xchg
pusha
and
arpl
mov
xor
xchg
add
mov
mov
jg
and
mov
push
push
ret
push
and
mov
jbe
out
in
icebp
cmp
jge
or
jp
insb
dec
enter
push
ljmp
xor
movsl
movsb
xchg
mov
and
lret
mov
add
or
fwait
data16
inc
jo
and
pop
dec
dec
test
scas
loope
cmpsl
imul
in
sarl
mov
lds
adc
mov
dec
and
outsl
sbb
jp
test
inc
push
jae
cmpsl
inc
or
hlt
inc
std
cltd
cmp
mov
push
add
jb
lock
jle
ret
pop
jg
and
rolb
lret
imul
pop
xor
mov
xor
xor
rcll
adc
pop
leave
xor
lock
ror
xor
sub
push
adc
sbb
xor
cmc
cmp
and
xor
in
mov
test
dec
sbb
fstps
je
cltd
ret
dec
hlt
jns
jb
insb
cltd
addl
push
dec
mov
mov
lcall
gs
cmp
ds
cmp
add
jae
lahf
ja
fldenv
int
mov
movsb
adc
mov
gs
mov
out
fs
mov
movsl
stc
sbb
sbb
test
sub
inc
and
mov
cs
fisttps
ficompl
call
cmp
fisttps
pop
notl
aas
xorl
mov
xorb
push
sbb
test
pop
xor
fs
lcall
xor
mov
and
adc
aaa
push
mov
lea
mov
cld
fwait
inc
ret
std
imul
pop
daa
adc
ret
mov
add
and
inc
sub
jecxz
mov
mov
aam
push
test
sbb
in
cmp
call
mov
test
sahf
cmc
enter
sub
sahf
aaa
xor
cmc
push
repnz
mov
cmpsl
push
pop
cmp
mov
push
adcb
sbb
aam
or
xor
data16
popa
js
pop
and
sbb
cmp
push
daa
dec
leave
lods
jg
push
adc
fstp
or
mov
adc
popa
pop
imul
and
out
jbe
lahf
ret
jns
jae
bound
hlt
mov
pop
test
adc
sbb
sbb
jno
sarl
cmp
inc
es
outsl
cld
nop
aad
stc
inc
and
pop
shll
xchg
repz
loop
movsb
enter
sub
enter
xorb
inc
push
cwtl
popa
adc
pop
shlb
sbb
jp
addr16
cmpsl
add
mov
lahf
ret
cmp
outsb
shll
insb
loop
dec
pop
icebp
push
mov
and
ja
xor
add
movsl
cltd
inc
pop
in
repnz
sub
cmp
mov
arpl
xorb
cmc
nop
out
repz
shr
adc
testb
mov
cld
idivl
and
jge
and
dec
pop
shl
out
or
or
cld
sbb
movsl
out
xchg
jo
das
dec
mov
insb
sahf
add
jle
sahf
sbb
pop
or
jo
cmpsb
push
jae
lret
fcompl
adc
inc
std
dec
and
mov
xchg
cmp
add
add
sbb
mov
sub
in
adcb
push
adc
pop
cmc
xor
push
push
lds
rorb
sbb
shlb
jnp
sub
xor
nop
sub
test
lock
adc
hlt
jo
imul
and
cltd
dec
sbb
lea
ja
push
inc
or
and
js
in
cld
mov
push
movsb
mov
lds
pusha
fstpl
outsl
inc
and
movsb
enter
test
movsl
and
movsl
jne
mov
ja
cmp
or
cmp
dec
filds
jne
popa
jb
or
sqrtps
lahf
mov
cmpsl
push
mov
dec
jge
add
mov
clc
cmpsl
push
add
cmc
cmpsb
and
imul
push
or
add
cli
ljmp
add
add
std
std
inc
in
xor
out
test
add
mov
je
divl
sti
shll
dec
xor
ret
imul
fdivs
jno
inc
fwait
pop
sub
mov
out
cltd
xorl
nop
jae
outsl
cwtl
ret
or
mov
fadds
aad
pop
sbb
xchg
pushf
cld
lret
cwtl
sbb
pop
or
fsubs
mov
sbb
pop
dec
dec
mov
cmp
scas
test
int
cld
in
xchg
or
mov
cmp
pop
imul
mov
lock
sub
sbb
jae
das
xor
movsb
inc
int3
mov
ljmp
adc
stc
cmp
mov
xchg
mov
mov
repz
pop
out
or
dec
insl
sub
inc
dec
xchg
sub
cmpsl
pop
movsl
mov
mov
movsb
inc
out
sub
dec
jne
pop
mov
xchg
out
gs
lret
mov
test
cld
jbe
xchg
jge
cmpsl
or
mov
push
scas
sub
pop
fs
das
mov
sub
mov
sbb
dec
in
add
mov
xchg
xor
shl
leave
repnz
gs
inc
sbb
cmpsb
in
xorb
mov
jnp
jl
test
adc
out
xor
js
test
mov
mov
jmp
lret
fwait
sahf
or
popf
rorl
dec
adc
mulb
mov
sarb
xchg
sub
jb
xor
inc
popa
sub
fdivl
mov
stc
add
sahf
hlt
fisttpll
jbe
lahf
subb
mov
dec
mov
leave
sbb
enter
inc
xchg
mov
xlat
mov
jmp
lock
mov
lahf
cmp
and
lds
sbb
out
aad
daa
sbb
movsb
mov
jae
inc
js
push
or
mov
adc
popa
and
insb
lret
xchg
or
mov
or
ret
lock
sub
leave
cs
inc
jmp
cmpsl
mov
subb
cmpsl
mov
inc
aas
sbb
mov
cmp
or
cwtl
adc
jnp
pop
or
inc
movsb
popa
sbb
cs
inc
into
push
daa
and
push
movsb
sbb
sub
push
test
cwtl
jge
adc
cmp
xchg
cmp
inc
jecxz
mov
cld
fnsave
xchg
mov
add
rorl
cwtl
xor
js
inc
ljmp
pop
mov
mul
ss
test
movsl
fidivrl
xor
loop
mov
mov
roll
jmp
xor
out
aad
inc
push
std
fstl
movsl
lock
add
mov
leave
xor
inc
loopne
lods
jg
and
sbb
aaa
fsubs
insl
sbb
add
add
inc
mov
push
pop
mov
incl
cmp
shrb
add
inc
xorb
ror
fdivl
sbb
rorl
and
push
cld
mov
adc
loope
or
out
pop
bswap
adc
leave
jecxz
sbb
cmc
push
xor
dec
lods
in
stc
xor
fistl
jae
cltd
and
inc
pop
fdivrl
pusha
cmpsb
ret
cli
or
shr
lds
push
add
mov
pop
in
sbb
jae
sub
int3
add
mov
clc
inc
nop
es
jbe
adc
pop
aam
test
pop
jns
aaa
fidivs
cmp
fs
push
pusha
icebp
jbe
shll
mov
aad
mov
in
and
sub
jnp
cmp
jno
mov
inc
mov
movsl
dec
inc
add
mov
pusha
ret
outsb
cli
or
adc
inc
pop
inc
jnp
ss
pop
adc
pop
pop
std
insl
inc
leave
mov
or
adc
in
clc
inc
aam
pushf
je
popf
aad
sub
out
test
dec
cld
enter
add
ds
mov
adc
shrl
push
mov
mov
inc
cmp
fstl
in
jno
sbb
fldenv
scas
lret
ja
int3
data16
adc
fsubl
sub
test
popa
stc
repnz
inc
sbb
cmp
call
push
popa
push
daa
add
add
mov
mov
and
adc
mov
jno
lret
lds
sar
sti
adc
fucom
lcall
hlt
pop
push
test
pop
mov
dec
clc
jle
push
cmp
fcmovne
lods
inc
sti
stc
in
add
sub
dec
rorb
xchg
and
stos
lret
ret
scas
jecxz
ret
jge
jmp
push
lret
xchg
ret
cld
and
mov
adc
stc
xor
fcom
out
inc
or
aad
cltd
jmp
std
outsb
sub
mov
lahf
jo
cmp
push
lahf
xchg
in
jl
icebp
divl
add
cmp
mov
push
int
hlt
fimuls
orb
leave
dec
push
and
inc
or
pop
xor
adc
je
shrb
test
movsl
cld
jmp
mov
pop
fsubrl
clc
jmp
pushf
mov
sti
cmpsl
pusha
sub
jno
test
push
mov
sub
ss
and
push
and
mov
xchg
movsl
push
mov
xchg
lcall
xor
ja
add
pop
push
leave
push
lds
add
in
imul
movsl
fmul
fiadds
mov
mov
mov
mov
es
mul
cs
fadds
xchg
or
rclb
in
add
add
dec
sbb
testb
ss
xor
std
mov
into
jno
jg
inc
fnstenv
lods
das
int3
pushf
mov
inc
call
pop
jo
mov
fisubrl
pushf
cltd
or
mov
adc
adc
push
addb
dec
in
mov
dec
mov
adc
iret
ljmp
dec
and
xor
xor
add
dec
out
jno
inc
xor
lret
nop
dec
mov
aam
shll
mov
adc
cmp
pusha
jo
icebp
jb
sarl
mov
jmp
inc
pop
movsl
test
ja
mov
sub
stos
sbb
gs
jnp
mov
mov
fwait
mov
movl
mov
lahf
in
fwait
je
jl
and
xchg
dec
mov
ret
fwait
push
mov
jo
ret
push
nop
sbb
in
add
sub
clc
dec
jno
jg
push
icebp
ss
push
cmp
add
mov
aas
xor
mov
jl
stc
jae
sahf
and
outsl
mov
sbb
lods
test
pop
sbb
rol
xchg
cltd
mov
shrb
mov
mov
xor
test
sbb
fisubrs
mov
das
xchg
in
sbb
dec
push
push
hlt
test
sbb
adcl
adc
pop
mov
and
imul
dec
sub
aaa
cmpb
push
jbe
daa
sbb
inc
lahf
or
adc
add
outsb
push
cmp
xor
fstpl
inc
xor
dec
sub
pop
mov
add
pusha
lds
sahf
cmp
test
xchg
pushf
lahf
mov
loop
and
xchg
js
shl
imul
sbb
lock
imul
sub
ret
lods
push
jno
inc
or
sub
int3
jecxz
cltd
sbb
add
stc
stc
ret
mov
add
or
xor
pop
cmc
popa
add
movsb
mov
dec
repz
decl
push
ja
pop
cmp
je
cld
lcall
test
loope
pushf
xchg
cwtl
mov
test
cmc
fwait
xchg
cmp
adc
xor
sub
outsb
test
xchg
in
and
jp
test
inc
mov
pop
pop
mov
in
imul
loop
test
es
mov
cmc
xchg
sbb
outsl
xor
inc
xchg
and
addl
dec
lds
jbe
and
sbb
add
inc
mov
iret
jne
mov
lahf
test
lds
js
xchg
add
ret
mov
daa
test
clc
movsl
add
dec
fcoms
mov
jl
lret
dec
sbb
pop
das
or
cmpsl
mov
out
adc
in
mov
jb
les
call
mov
aaa
fwait
lds
inc
scas
dec
pop
mov
and
idivl
mov
sub
cltd
mov
lds
or
inc
mov
daa
dec
adc
or
cmpsl
mov
and
jns
cwtl
arpl
push
mov
push
js
pop
push
sub
sub
stc
xor
adc
pop
xor
sub
aad
push
sti
test
aaa
jnp
add
stos
jne
lock
gs
push
in
dec
mov
sti
inc
sub
je
sub
stos
test
or
popf
out
push
lds
sbb
push
mov
cltd
neg
push
mov
adc
mov
aad
add
test
sub
sbb
xchg
cmp
pushf
dec
cmp
dec
mov
mov
push
sbb
popa
or
or
mov
cmp
ds
gs
push
cmp
scas
and
cmp
pop
loopne
cmp
cmc
adc
add
pop
mov
cmpsl
cmc
cwtl
popf
cld
mov
jecxz
inc
andb
rcrl
lcall
jnp
xor
fadds
jae
dec
mov
sbb
mov
movsb
mov
xchg
in
cmp
jae
call
test
jl
adc
jl
xlat
lock
in
cmp
adc
and
dec
push
out
jnp
cmc
lock
loop
into
fisubs
repnz
in
pop
mov
adc
cmc
clc
cld
and
cmp
and
cmc
call
pushf
lods
lods
out
mov
add
hlt
dec
push
sbb
pop
ljmp
sub
inc
ja
lods
pusha
xor
test
sbb
mov
popa
xor
mov
and
jcxz
cmpsl
jecxz
pop
xchg
lods
or
mov
dec
rcll
cltd
sub
daa
in
sti
scas
adc
add
sbb
hlt
loop
mov
jecxz
in
add
xor
fiaddl
jmp
mov
mov
and
cmp
test
lea
fmul
push
imul
fiaddl
xchg
test
jne
scas
out
in
jmp
cmpsl
data16
inc
pop
call
clc
jle
xchg
movsl
outsl
jno
inc
dec
and
ficompl
pop
cli
dec
pop
mov
in
popf
mov
and
xor
push
inc
push
and
xorl
xor
mov
aad
mov
inc
push
sub
cmp
test
dec
imul
jp
popf
dec
orb
mov
out
inc
and
cmp
out
cmc
and
dec
mov
push
or
movsl
int
xor
std
mov
mov
movb
subb
mov
or
xor
push
add
sbb
sbb
leave
mov
mov
inc
outsl
mov
push
fstpl
dec
dec
stc
adc
mov
mov
stc
popf
pop
jns
mov
xchg
mov
mov
add
outsl
mov
gs
shl
inc
test
aaa
or
or
icebp
fucom
mov
xor
push
push
adc
mulb
sbb
dec
adc
jge
insl
cs
adc
lods
xchg
lods
inc
pop
add
or
ret
icebp
int3
out
sbb
jbe
dec
shrb
stc
and
fcmovnb
daa
sub
cmp
push
pop
movsb
fldl
movsl
jbe
test
xor
inc
aas
es
ret
dec
ss
xor
cmp
cli
mov
int3
mov
arpl
cld
mov
and
dec
xlat
pushl
dec
lods
aam
jmp
stc
xor
out
clc
sbb
daa
xor
testb
lods
call
outsl
xchg
add
aad
je
lods
add
insb
out
out
loop
mov
or
add
push
mov
aad
mov
lods
je
xor
xor
adc
pop
jge
push
dec
out
or
xor
cmp
mov
add
inc
insl
mov
cmp
daa
push
fmull
jg
push
mov
and
nop
and
mov
add
mov
xor
leave
jmp
ror
push
and
and
dec
jnp
mov
push
repz
sub
cmp
fldl
lret
js
jle
xor
icebp
daa
int
mov
inc
pop
out
ja
mov
adc
push
xor
sub
inc
cmp
mov
pusha
shlb
loop
shl
pop
mov
pusha
ds
adc
mov
mov
call
inc
sbb
inc
scas
mov
jl
xchg
imul
inc
lea
pusha
push
mov
test
rcrl
sbb
in
enter
nop
mov
mov
rclb
or
push
ljmp
or
cli
push
je
and
mov
xchg
gs
lods
xor
movsb
push
cld
jl
in
je
shll
push
gs
sahf
add
lahf
aad
mov
movb
push
stos
and
fbld
jns
fmul
jbe
ret
pop
clc
in
cmp
jecxz
pop
mov
addr16
cmp
in
movsl
incb
imulb
es
popa
ljmp
aaa
cld
pop
ja
jb
js
sbb
jecxz
dec
mov
xor
dec
or
sar
rol
cmc
sbb
push
jb
ret
cmp
sbb
mov
xor
ret
mov
ds
or
mov
mov
ss
push
lods
dec
hlt
popa
mov
push
mov
pusha
in
push
push
mov
ja
xchg
out
xor
cs
push
sahf
xchg
mov
jle
push
lock
fistpl
xchg
sbb
inc
jno
jmp
dec
jo
and
repz
shrl
imul
out
adc
stos
or
daa
cmp
mov
int
push
cmpsl
lods
and
dec
pop
mov
xchg
xor
pop
xor
jle
fcoms
push
push
jne
imul
ret
push
and
and
mov
ja
pop
push
int
clc
sbb
cmc
jecxz
test
loopne
pop
cmp
fcmovne
in
add
cltd
adc
sub
cmpsl
fs
jo
add
hlt
mov
inc
adc
pop
jg
jne
add
dec
push
pop
mov
jl
adc
mov
jmp
cs
daa
ds
push
mov
adc
dec
imul
movsb
aam
add
fs
mov
inc
clc
sub
subl
mov
nop
sbb
push
cltd
addr16
inc
and
cmc
in
std
add
and
push
popf
incb
push
inc
stc
rolb
out
je
xchg
int3
fadd
sarb
pusha
adc
push
mov
add
add
lret
loopne
int3
sti
push
sbb
push
cwtl
ffree
xchg
dec
jns
jne
sbb
mov
sbb
sbb
add
sub
dec
jp
scas
mov
fwait
pushf
adc
and
sbb
or
sar
stc
cmc
mov
pop
std
cmpsl
mov
cwtl
je
cmpsb
or
cmp
out
xorb
jne
iret
lods
or
pop
mov
ret
sbb
add
jl
sbb
mov
xchg
sbb
shr
jmp
gs
rcr
das
or
xchg
loopne
sub
iret
jge
or
lods
mov
test
push
ds
std
roll
repz
sbb
call
push
jo
aaa
call
mov
add
enter
lds
cmp
dec
pop
mov
dec
push
sti
ss
stc
dec
jmp
inc
leave
lahf
movsb
les
dec
sbb
and
mov
mov
jne
mov
imul
push
lds
mov
mov
mov
orl
jno
xchg
je
xchg
js
hlt
shlb
pop
xlat
gs
scas
and
lock
arpl
aam
xor
inc
ret
lds
pop
jl
xor
jb
cltd
push
or
pop
loope
lcall
xchg
add
cmpsl
divb
pop
xchg
or
xchg
sub
scas
in
or
sub
sbb
sub
ja
jl
je
std
jne
add
sbb
cmp
pop
cmp
sbbb
stc
dec
sbb
xor
stos
and
mov
xorb
push
movsl
push
sbb
adc
push
and
jp
mov
jg
lock
add
aas
jae
mov
pop
or
mov
xchg
insl
mov
adc
and
cltd
xchg
jno
cmp
inc
mov
fchs
mov
jle
sbb
fwait
inc
mov
mov
push
pop
ret
xchg
lret
stc
int3
shrb
add
sub
jae
add
lahf
xorb
xchg
loopne
mov
add
daa
mov
xor
adc
ss
inc
add
jge
push
pop
fmul
test
enter
das
inc
pop
jnp
xchg
mov
adc
pop
and
xchg
ja
adcl
jae
int3
jbe
or
sub
ds
jmp
xor
cmc
clc
mov
cs
push
data16
and
repnz
je
aaa
stc
dec
xor
test
add
sbb
enter
adc
sbbl
jne
and
jae
ss
mov
jl
shl
iret
test
lods
mov
aaa
pop
adc
insl
jnp
and
and
in
sub
ret
inc
movb
cmpsl
ret
add
pop
andb
faddl
push
popf
cmp
and
inc
mov
cmp
outsl
and
cmpl
jae
pop
fs
movsl
repz
xor
imul
dec
or
les
xchg
cmp
sub
pop
sti
sub
mov
add
sti
pop
sub
dec
and
and
sbb
mov
dec
hlt
jg
pop
call
push
loopne
test
aas
adc
shll
pop
pop
xchg
adc
inc
ds
aaa
in
std
loope
ja
sbb
sub
mov
stc
mov
mov
movsl
imull
es
mov
xor
add
gs
xchg
mov
loop
sub
fistpl
je
std
push
cmp
dec
push
icebp
mov
mov
outsl
sarl
jg
pop
cmp
mov
ljmp
mov
jg
das
add
int3
push
loope
inc
xor
jg
push
in
xor
push
cwtl
call
lods
dec
loope
icebp
xor
or
lock
xor
mov
std
ret
jbe
pop
push
aam
jmp
push
push
bound
test
inc
and
ljmp
aad
inc
std
inc
pop
shlb
pop
gs
fistps
and
cmpsl
in
cmp
jnp
out
lret
sbb
mov
out
ja
iret
xor
popa
dec
es
jne
jl
inc
test
sub
cwtl
imul
imull
call
js
cwtl
out
xchg
pop
test
bound
and
movsl
fmull
or
xor
and
ss
fldpi
push
leave
std
pusha
pop
dec
es
fsubl
andl
push
xchg
aas
or
cmp
xor
fdivl
mov
and
add
xchg
xchg
insb
fidivs
aad
push
mov
loop
out
cmpsl
jg
shll
sti
mov
popf
add
inc
imul
adc
stos
test
in
fs
add
mov
sbb
cmp
cmp
cmp
inc
pop
into
and
test
jae
adc
ljmp
mov
adc
push
in
and
mov
out
popa
xchg
or
xchg
insb
mov
in
mov
or
lock
inc
nop
fwait
cmc
push
fdivs
push
ds
cmpsb
jb
lds
sbb
cltd
jl
gs
and
xchg
pop
jb
call
xor
add
and
popa
push
mov
shll
shlb
js
xchg
cmp
loop
push
cmpsl
cltd
and
add
test
push
call
pop
es
cld
sub
dec
xchg
jae
out
js
jo
outsb
outsb
xchg
xor
inc
and
rorl
xchg
xchg
cwtl
ret
push
mov
inc
adc
xchg
cmp
bound
stos
in
push
mov
pop
sub
test
pop
int
add
xor
sahf
jp
sbb
pop
pop
popl
jae
cld
test
sbb
xchg
addr16
sbb
cmc
fstps
dec
push
out
test
push
in
add
jae
sub
pop
and
cli
out
gs
aam
std
and
xor
rcll
pop
and
movq
in
jle
cmpsl
adc
dec
gs
xor
pop
push
pop
imul
das
les
cmp
pop
fmuls
sahf
add
shrb
xor
cltd
inc
inc
aam
and
int3
fimull
jae
stc
jno
scas
push
pop
lock
cmp
sub
push
adc
leave
lds
push
js
mov
cmp
cmp
sbb
mov
ja
adc
add
adc
inc
lods
fwait
xor
clc
and
es
push
mov
lret
sub
das
negl
adc
scas
xor
cmp
fwait
mov
stc
xor
sahf
js
cmp
mov
push
lahf
in
add
adcl
dec
pop
inc
aaa
rclb
fcomip
mov
mov
pusha
xor
stos
sbbb
pop
jne
ja
xchg
sub
push
xchg
rcll
filds
adc
sub
add
adc
add
stc
and
mov
cmp
push
push
and
arpl
push
pop
int
jns
imul
sahf
xor
fdivs
cmpsl
push
pop
jmp
ja
pop
and
test
push
aaa
and
xorb
sub
call
and
add
jl
pop
and
xchg
and
dec
in
jecxz
add
out
mov
mov
jg
jbe
mov
inc
dec
and
xor
push
mov
mov
mov
cmpb
mov
out
inc
roll
sbb
stc
out
cmp
sti
xor
jnp
inc
pop
test
mov
inc
add
cmpsl
pop
push
xchg
aam
test
push
fstps
push
movsl
pop
into
in
cmp
imul
or
jae
sbb
shll
mov
mov
pop
cmc
mov
movsl
xchg
nop
ja
andl
gs
jmp
add
adc
mov
jo
xchg
cltd
xchg
xchg
fcompl
mov
xor
loope
mov
cs
fwait
xchg
dec
int3
movsb
data16
and
jle
add
mov
lds
add
lods
enter
movsl
popf
dec
stc
xchg
addb
out
psubw
xor
dec
cmp
sub
mov
pop
ljmp
dec
mov
rcrl
clc
cmp
sub
mov
mov
fisttpll
scas
hlt
loop
stos
lods
fiaddl
cmp
xor
xorl
and
icebp
scas
cmpsl
lods
adc
in
bound
fimuls
jecxz
push
mov
dec
pop
pop
inc
out
pop
insl
inc
lcall
or
mov
jnp
imul
pusha
ljmp
sub
dec
aaa
test
jno
stc
scas
xor
in
stos
mov
sbb
mov
xor
and
xor
inc
dec
std
xor
daa
dec
test
lcall
lods
iret
ss
push
movsl
lds
jl
fwait
cli
mov
fidivs
xchg
out
std
into
nop
ja
push
push
insl
mov
leave
cmpsl
enter
movsl
lods
das
mov
xchg
ret
jae
inc
je
inc
aam
push
popf
insl
push
inc
jno
imul
sub
ror
dec
je
rorb
mov
sysexit
std
mov
inc
and
push
fisttpll
adc
cltd
add
leave
lret
dec
out
or
dec
inc
call
cmc
sub
mov
xor
sub
dec
popf
push
scas
pushf
cmc
inc
cmp
test
inc
adc
and
pop
jle
lds
push
mov
add
pop
lret
fdivl
cmp
mov
and
push
je
adc
jg
lret
or
jmp
sbb
mov
loopne
and
inc
test
xor
insb
adc
lds
iret
mov
divl
dec
mov
and
jne
push
into
cmpsl
clc
adcl
inc
mov
cmp
clc
ja
fwait
cmpsl
sub
jge
inc
in
cmpsb
adc
jns
das
mov
push
mov
inc
pop
dec
movsl
cmp
inc
sub
cmp
mov
iret
adc
enter
xor
ds
fsubrs
in
aas
pop
inc
gs
and
std
and
stos
mov
sbb
ds
mov
test
in
int3
or
adc
js
test
mov
add
xor
mov
je
hlt
inc
jge
xchg
xchg
or
jl
cmp
and
out
sub
in
icebp
and
pop
dec
push
mov
mov
add
loop
or
push
insl
jmp
outsl
dec
addr16
repnz
mov
je
or
ss
fstpt
cmpsb
or
cmp
pop
cltd
pop
pop
imul
aaa
adc
mov
sbb
push
cmp
adc
pop
rclb
frstor
jne
jnp
mov
push
sub
repz
pop
int3
mov
push
es
vcvtpd2psx
ja
mov
dec
pop
add
inc
call
hlt
jbe
mov
push
xor
ror
mov
sbb
mov
lock
cmp
push
pop
in
cmp
cwtl
lods
push
vpshlw
fistl
fcomp
add
sub
and
js
lods
hlt
ss
test
jge
pusha
sbb
pushf
stc
and
xor
icebp
pop
in
andb
xchg
lds
lret
test
sar
mov
pop
pop
or
mov
dec
in
jns
movsb
jae
js
adc
sbb
pop
sub
jge
jecxz
icebp
mov
out
jae
mov
push
cmp
loope
pop
icebp
sbb
aas
inc
dec
inc
push
loop
or
inc
or
and
mov
lds
popa
mov
notl
jne
push
mov
call
clc
xchg
or
stc
aas
mov
dec
out
movsl
cmc
jl
inc
leave
test
shrl
popa
clc
sarl
cmp
jbe
cltd
mov
rcrl
xor
cmp
aas
popa
lock
and
lret
out
rclb
enter
sub
loope
xor
xchg
out
int
dec
jp
out
lods
dec
xor
cmp
rcrb
popa
daa
mov
mov
lahf
xor
ret
jne
mov
cmp
or
fucomi
sbb
lds
pop
subl
dec
aaa
add
xor
or
cmc
aas
out
add
mov
cmp
jge
inc
insl
or
lods
inc
push
mov
jbe
pop
and
sarl
stc
inc
and
jp
sbb
mov
inc
or
rolb
stc
imul
addr16
mov
mov
jnp
lock
sub
sbb
cmp
inc
cmc
scas
and
shlb
aas
imul
testl
in
sub
lahf
add
gs
adc
in
fldenv
push
and
out
loope
inc
hlt
cmc
and
int
jmp
stos
cmpl
add
sar
mov
pop
and
inc
pop
xor
neg
aas
push
mov
adc
dec
pop
jne
gs
pushf
dec
int3
inc
mov
js
les
ds
sub
sbb
mov
mov
add
dec
mov
sbb
repz
lret
hlt
mov
scas
mov
jns
bound
adc
mov
add
aaa
repnz
jmp
cwtl
addr16
es
xchg
inc
jl
into
cmpsl
sub
movsl
push
inc
cmp
push
sub
imul
cld
call
cld
lods
push
lcall
add
bound
xchg
pushf
mov
cmp
lahf
aaa
lods
push
xor
jg
or
push
dec
inc
stos
mov
xor
and
mov
mov
and
push
mov
jge
add
clc
mov
shlb
jg
std
adc
sahf
mov
popf
push
flds
icebp
push
cmp
cmpsb
aaa
inc
sbb
fwait
dec
fxtract
repnz
rorb
push
inc
inc
xchg
lahf
cmc
sti
shll
das
in
sub
cmp
sub
adc
add
rcrb
andb
lods
xchg
ja
or
out
rcr
push
and
cltd
call
cmp
rolb
mov
jo
dec
jbe
fnstsw
popa
bsr
sub
jo
mov
data16
add
ja
xchg
pop
aad
inc
shl
add
cwtl
gs
int
lods
pushf
in
js
push
mov
cs
into
jno
fldenv
lods
mov
shll
cmp
movsl
jo
mov
or
pop
mov
and
aad
sub
es
je
and
dec
add
mov
add
mov
or
xchg
loopne
cmp
dec
imul
adc
in
mov
in
xor
push
inc
out
aas
dec
adc
dec
jmp
cmpsb
xor
cmp
aaa
syscall
popa
shlb
daa
and
mov
jmp
pop
adc
cwtl
dec
mov
cmp
fcoml
add
xchg
mov
cmp
cmpsl
inc
jb
dec
add
push
daa
insb
mov
pop
xchg
and
ret
sbb
ret
int3
push
out
jb
stc
fdivrs
lret
jb
sub
cs
sub
mov
inc
adc
lods
jmp
sbb
pop
sub
inc
pusha
dec
leave
addl
pop
xor
or
push
sti
std
cmp
stc
into
repz
sub
or
stc
cmp
ja
or
testl
test
fsubl
insb
mov
dec
and
fwait
mov
inc
xor
lods
les
dec
xor
dec
daa
sub
lahf
mov
jo
mov
test
repz
lret
xchg
cmp
subb
inc
and
in
subl
cld
inc
cwtl
aam
jmp
and
pop
cmp
cmp
aam
lahf
test
addr16
jmp
and
dec
lret
mov
jae
xchg
rolb
cmp
pop
dec
adc
and
out
jge
add
cld
mov
pop
and
adc
push
add
lahf
cltd
js
int3
cs
sahf
in
loopne
pop
mov
push
dec
xor
sub
aaa
int
sbb
and
jnp
xchg
inc
sub
fsubs
and
cmc
dec
push
xor
cmpsl
sti
cmp
sub
in
fcompl
movsb
cmp
test
mov
stc
cmc
cmp
sub
xor
push
cltd
mov
lds
int3
ffreep
adc
adc
jbe
repz
ja
or
movsb
dec
lahf
cs
jnp
lahf
mov
xor
inc
adc
lret
cmpsb
pusha
and
ljmp
fisubrs
xor
sbb
add
xchg
leave
test
movsl
aaa
nop
fcompl
clc
stc
movsl
test
mov
xor
push
xor
adc
call
pop
and
in
mov
cld
sbbb
lods
sbb
movsl
mulb
hlt
je
jae
aas
outsb
inc
test
ret
shll
mov
pop
scas
cmp
add
icebp
shll
xor
in
rcrl
cmp
sub
ds
loopne
push
inc
mov
mov
sub
push
jge
lahf
push
fisttps
mov
add
imul
cmp
mov
stc
adc
push
shlb
push
pop
and
das
cmp
lds
adc
cmp
mov
in
xchg
outsl
fsubr
daa
mov
adc
dec
shll
fwait
lods
int
std
cmp
mov
dec
mov
dec
das
movsb
popf
cmp
stos
or
std
ret
mov
in
aaa
dec
mov
shll
cmc
lods
imul
xor
mov
ss
lcall
xor
call
test
call
push
mov
mov
mov
aaa
push
aaa
push
inc
out
cmpl
cmp
out
out
sbb
fsubr
rolb
cmpsl
data16
scas
fstpt
inc
or
ss
and
mov
daa
cld
and
adc
push
xor
mov
movswl
test
mov
shrl
fnstenv
inc
xchg
test
xor
xor
insb
push
mov
out
sub
dec
and
mov
aas
and
xor
jae
sahf
orb
fwait
daa
jmp
add
dec
push
movsl
inc
int3
testl
sbb
fistps
int
adc
and
and
in
add
stos
ror
movsb
popa
xor
fs
sub
movsl
jg
dec
or
xchg
and
pop
adc
lods
inc
inc
mov
mov
jle
mov
add
dec
xor
inc
jne
mov
xchg
sbb
cltd
push
mov
jbe
stc
adc
lock
push
les
rolb
lods
sar
and
dec
cld
xor
and
pop
pop
imul
inc
jl
std
pop
pop
push
cmp
inc
pushf
leave
jle
and
test
sub
inc
out
push
push
loope
jo
xchg
fwait
jmp
int
cmp
mov
insl
mov
roll
nop
xchg
test
add
push
mov
inc
and
adc
lock
xor
push
sbb
fdivs
out
or
sbb
mov
clc
mov
inc
push
aaa
jb
fs
js
adc
cmp
inc
lds
xchg
daa
out
xor
inc
cmp
mov
das
pop
in
push
daa
js
pushl
lock
filds
inc
inc
popa
inc
test
sbb
add
cld
hlt
call
or
mov
enter
rcl
cmp
nop
mov
imul
or
pop
notb
sub
dec
notl
mov
xchg
push
std
js
addr16
inc
push
xor
mov
xor
and
mov
cltd
mov
jg
lds
pop
cwtl
inc
cli
pop
or
xor
adc
xchg
jg
xlat
hlt
xchg
lods
pop
repnz
cld
adc
sub
incl
adc
pop
mov
lock
adc
das
stc
xchg
inc
scas
and
add
movsb
insl
lret
or
shll
jo
aas
sahf
rcrl
cwtl
push
xor
daa
out
jecxz
pop
push
je
dec
cmp
gs
pop
rolb
divl
es
testl
cmc
les
dec
push
in
push
ficomps
movsb
lret
lock
pop
or
mov
gs
xor
mov
pusha
imul
and
add
in
ljmp
ret
push
sub
and
and
mov
mov
xchg
in
loope
cmp
cmp
cmp
bswap
xchg
clc
inc
aas
sub
mov
mov
push
sbb
mov
rcrb
das
cs
inc
fistpl
lods
int3
cld
sahf
mov
cmp
movl
adc
test
inc
out
dec
je
sub
sub
push
xor
outsb
push
sbb
dec
and
ljmp
gs
sbb
jle
aas
mov
lret
jecxz
or
cwtl
jg
filds
adc
shll
add
icebp
mov
add
mov
jno
add
and
lahf
add
xor
cmp
pop
xchg
mov
ja
mov
jae
test
in
and
lds
shr
lret
test
imul
aas
xor
popa
pop
and
fdivl
js
sub
mov
popa
lods
jae
add
jle
out
xor
lcall
xchg
test
xor
andb
or
adc
aas
in
cltd
add
outsl
movsb
into
mov
xchg
or
xor
jmp
and
std
btr
imul
aam
and
jns
jmp
fwait
xchg
add
sbb
dec
stos
loope
sub
sbbl
test
adc
popa
or
cmc
popf
mov
aas
or
test
and
jl
lods
pop
adc
mov
pop
jbe
cli
mov
sbb
nop
test
sbb
inc
pusha
xor
dec
movsl
sbb
cmc
cmp
das
and
lods
jecxz
add
jp
movsl
mov
dec
dec
test
jne
stos
outsb
int3
pusha
sbb
pop
mov
and
add
dec
loope
mov
dec
in
dec
mov
fsubl
movsb
ja
es
adc
dec
lret
ficoms
mov
pop
cmpsl
ss
sub
hlt
out
ja
movsb
sub
inc
mov
push
adc
cmp
jecxz
xor
ret
push
shll
mov
jecxz
clc
xchg
push
xor
dec
push
scas
and
andb
push
repz
add
fs
je
and
xchg
loop
sbb
push
or
scas
and
mov
jno
xor
outsl
aad
jle
int3
mov
cmpsl
jb
fxsave
pop
sbb
cmp
jae
je
or
pop
jne
mov
cltd
ljmp
shll
arpl
stos
rolb
in
sub
cmp
add
fsubs
gs
dec
daa
gs
mov
xor
call
lds
imul
push
or
out
js
out
mov
cmp
xchg
inc
dec
sub
outsb
and
dec
test
add
pop
mov
cmp
cmc
sbb
pop
adc
pop
pop
xor
push
pop
adc
pop
cltd
fsubs
and
jne
iret
add
clc
push
std
ja
mov
dec
idivb
call
out
and
pop
jl
movsl
fstl
sub
roll
sbb
push
jecxz
add
jne
gs
imul
ss
dec
test
aad
add
add
cltd
adc
testb
dec
and
add
xor
xlat
sbb
pop
sbb
mov
stc
das
in
aas
mov
in
or
sbb
pop
fsubl
arpl
lods
xchg
sbb
sub
add
inc
cmp
cmp
add
jbe
pop
xchg
xor
nop
lahf
pushf
mov
hlt
and
fs
jg
push
lcall
push
sub
xchg
cwtl
xchg
cmp
addb
sbb
cmp
add
outsl
sbb
mov
adc
dec
adc
dec
inc
lods
cmp
ret
mov
pop
adc
and
addr16
xor
inc
fsubl
and
inc
pushf
sbb
jno
sub
je
ss
cmp
cmp
movsl
mov
cmp
xchg
xor
xor
mov
ljmp
cmp
and
mov
das
mov
das
dec
jmp
lahf
in
jp
sbb
mov
add
subl
add
xlat
cmc
movsb
sub
sbb
sub
xchg
push
xlat
sbb
sbb
mov
out
sub
sbb
lcall
xlat
jb
push
ret
insb
mov
xor
lahf
js
cmp
dec
lds
cs
stc
jb
jp
adc
je
loopne
push
pop
cmp
rcrl
ja
xchg
es
in
fldenv
cmpsb
jmp
add
xor
dec
adc
sub
sahf
sar
pushf
inc
popf
or
sub
sub
ret
out
imul
pop
std
inc
stc
sbb
aas
inc
cmp
cmpsb
fsubrs
aad
nop
cltd
lret
dec
lret
push
out
shlb
dec
push
ds
movsl
or
cwtl
aas
in
xor
loopne
mov
std
xchg
pop
arpl
sahf
xchg
sub
nop
xor
sub
push
sub
scas
test
dec
dec
adc
sub
in
mov
scas
sub
mov
mov
xchg
cmp
gs
and
mov
push
repz
loope
jne
add
xor
gs
es
scas
dec
sub
aas
fdivrl
gs
xchg
lds
cmp
xorl
or
add
pop
jmp
ret
add
movsb
pop
jmp
out
or
mov
cltd
ret
mov
fstpl
add
jb
xchg
jg
lcall
mov
data16
into
mov
push
ds
or
inc
pop
mov
scas
pop
stc
add
mov
imul
mov
adc
mov
in
push
daa
int3
cltd
hlt
out
inc
mov
aam
and
filds
mov
sbb
sbb
cli
int
add
fwait
push
in
sub
add
adc
pop
pop
jge
inc
jl
icebp
test
jcxz
ja
adc
lahf
test
sbb
negb
in
xor
cltd
gs
or
mov
ret
cmp
orb
fld
mov
dec
mov
cmp
imul
cmp
stos
clc
push
sub
hlt
cld
mov
mov
or
cmc
sahf
cmp
and
and
imul
int
sti
push
dec
inc
mov
popf
cmp
add
ret
mov
dec
shlb
sbb
adc
mov
jbe
xchg
ss
cmp
repz
daa
xor
and
pop
enter
loop
dec
mov
mov
call
popf
fcomps
cmp
out
jae
mov
xchg
ds
pop
test
mov
inc
aam
inc
xchg
pop
mov
ds
mov
pop
adc
fnstenv
lahf
je
cmpsl
cmp
dec
jp
in
add
or
ds
or
add
pop
sti
pop
int
cmp
leave
in
cltd
out
push
imul
in
and
sti
cmc
out
mov
cld
loope
insl
sbb
sahf
add
mov
imul
add
and
xchg
sbb
mov
or
aas
addr16
cld
mov
cmp
in
fsubs
mov
mov
jl
out
out
pusha
and
loope
cwtl
std
pushf
shll
xor
and
and
adc
lea
inc
out
cltd
das
sbb
mov
cmp
or
add
scas
mov
mov
dec
cwtl
sbb
mov
push
inc
sbb
cs
push
daa
in
icebp
push
pop
mov
sarb
aas
outsb
mov
jo
enter
aaa
jns
adc
std
xor
or
aas
cmp
jo
adc
inc
test
jl
pushf
mov
test
clc
aas
clc
pusha
cmpsb
mov
js
cmpsl
insb
loope
mov
jecxz
mov
in
ds
popf
cmp
jne
stc
mov
insl
mov
and
dec
sti
push
inc
xor
dec
sbb
stc
cmp
jp
xor
cld
cmp
sbb
inc
inc
lahf
sub
loopne
popa
mov
inc
jno
xor
cmp
sub
aas
xor
inc
mov
std
add
and
xor
and
jle
andb
divl
sub
jbe
in
inc
fsubp
je
and
pop
movsb
fstpl
les
mov
sti
and
fbstp
cmc
mov
out
aad
jno
inc
stc
xchg
int3
jecxz
and
jmp
dec
sub
pushf
and
xor
and
jno
jg
xor
lcall
sbb
mov
clc
sbb
addb
inc
pop
xor
fnsave
mov
movsl
lods
cmpb
push
dec
xchg
adc
dec
imul
jae
add
add
fisubrs
mov
add
push
adc
push
dec
add
mov
mov
jmp
xor
push
mov
rol
test
push
call
sbb
xor
mov
mov
dec
jecxz
add
jbe
test
push
jl
test
aaa
cli
icebp
movsl
push
sti
adc
mov
rorl
icebp
and
cmpsl
push
push
call
cmp
enter
std
pop
sub
outsl
or
jecxz
xchg
insb
cwtl
scas
pop
jge
push
lods
xor
add
and
inc
xchg
pop
cmc
mov
loopne
add
sub
clc
inc
pop
pop
mov
scas
popa
std
ja
popa
pop
jle
stc
lret
push
test
call
cmp
je
ja
cmp
push
and
aam
loop
lods
fistpl
cmp
and
mov
or
out
jp
cmpsl
repz
add
aaa
cmc
popf
xor
mov
sbb
hlt
cmc
cmp
pushf
jae
mov
xor
hlt
daa
cltd
dec
fbstp
das
push
test
aaa
inc
addl
xor
aaa
xor
stc
sbb
sbb
mov
or
jns
dec
fiadds
in
insl
sbb
jg
push
loope
cmp
std
cmpsb
adc
jae
dec
in
xchg
scas
es
and
aaa
addr16
faddl
out
push
mov
xor
insb
mov
jbe
and
frstor
rclb
adc
and
jl
daa
je
and
mov
test
or
jno
gs
cld
imul
jge
jbe
in
notl
xlat
sahf
adc
and
stc
push
xor
mov
pop
aaa
lds
mov
je
add
int
push
cmc
push
repz
and
shlb
or
pop
push
xlat
dec
mov
push
xor
pop
stc
sub
and
cmp
aas
cmp
out
shlb
add
inc
xchg
sub
mov
pop
imul
aaa
mov
aam
ret
lret
mov
int
scas
ret
cmc
imul
inc
in
es
pop
add
cmc
inc
cmp
and
sub
sbb
lods
adc
idivl
adc
ret
test
pop
sub
movsb
mov
iret
cmp
jae
loope
ds
pop
shrl
adc
js
xchg
lea
int
mov
ja
adc
or
mov
aas
dec
pop
jecxz
jge
in
and
cmp
sub
and
cmpsb
jno
popa
cmp
std
and
add
inc
sub
fsts
fimuls
mov
lret
jbe
jecxz
lcall
mov
loope
ja
inc
daa
add
nop
or
dec
daa
fldenv
movsb
mov
mov
lret
ljmp
lds
jp
sub
insl
sbb
jnp
inc
or
inc
ss
xchg
jne
add
mov
into
and
ret
and
mov
enter
add
xor
lea
int
jg
ss
scas
and
add
sbbb
push
and
and
xor
pop
andb
cmc
cmp
out
and
sub
icebp
or
pusha
or
and
adc
adc
cmp
jle
popa
fcom
adc
sbb
cli
sbb
outsl
xchg
rorl
cld
out
in
fldcw
and
xchg
mull
xor
icebp
sbb
mov
add
icebp
push
aam
mov
outsl
fwait
jmp
ljmp
test
adc
push
shrl
sbb
sbb
idivl
fwait
add
mov
pushf
xchg
gs
push
and
sub
in
lods
sub
add
pop
and
inc
pop
out
adc
or
adc
adc
push
xlat
loopne
jno
add
add
or
xchg
sub
fidivs
sub
and
pop
or
shr
inc
fildl
sub
imul
clc
insl
add
mov
sbb
insl
out
pop
mov
mov
testl
xchg
jge
mov
jbe
dec
sub
mov
xor
and
mov
sti
inc
in
cmp
fsubp
adc
adc
sub
call
repz
cmp
sub
lahf
fcomps
aaa
aam
enter
and
pop
in
fadd
xor
mov
push
test
fstps
xorl
mov
pop
test
inc
inc
test
in
nop
jae
ljmp
cld
int3
cmp
ss
in
movsl
or
pop
sbb
out
cmp
mov
add
push
dec
in
in
mov
ss
out
add
jp
int3
cld
cs
cmc
sub
movsl
jb
out
stos
inc
lods
push
mov
mov
call
fnstsw
sbb
pushl
subl
out
cmp
cli
push
in
fmul
dec
rcll
leave
add
into
jl
xor
cmpsl
es
out
pop
sbb
add
push
sbb
call
mov
test
pop
aam
sbb
xor
pop
mov
and
inc
aam
divl
movsl
cmp
cli
mov
ljmp
add
out
in
cmp
cmp
std
test
mov
in
push
mov
add
xchg
dec
gs
fadd
xchg
and
cmp
xchg
jecxz
xchg
imul
dec
fdivrs
mov
push
nopl
js
adc
mov
call
add
fsubrs
pop
dec
add
test
mov
hlt
cmpl
test
sub
jbe
pop
loope
jne
xor
pop
lock
xor
push
sub
xchg
and
pop
aaa
inc
pop
jge
xor
hlt
inc
inc
mov
sti
add
mov
xlat
xor
sbb
dec
gs
sbb
mov
xor
pop
xchg
push
sub
sti
ss
mov
sub
cmp
adc
pop
hlt
cmpsl
cmc
xchg
mov
ja
inc
fs
insl
sub
pop
shrb
aaa
pushf
out
or
addr16
add
es
adc
cmp
push
xor
mov
mov
movsb
out
push
mov
insl
rol
js
inc
test
xlat
mov
fs
jecxz
push
sahf
push
addr16
adc
insb
das
cmp
dec
sbb
call
dec
clc
and
movsl
and
xor
arpl
jb
rcrl
mov
mov
cmp
neg
sar
movsl
or
or
jne
out
add
loop
or
push
inc
pop
movsl
sub
xchg
mov
adc
jae
lret
repz
stos
mov
cmp
inc
push
lods
cli
lcall
lds
frndint
call
arpl
pop
jmp
or
jne
bound
and
and
ret
push
cld
and
std
add
repnz
lds
push
stc
cwtl
jne
pop
push
push
jb
pop
and
fwait
and
mov
pop
sbb
movsb
pop
and
cwtl
es
lods
mov
dec
cmpsl
addr16
aaa
movsb
adc
xchg
fstl
and
jne
icebp
jle
outsl
aaa
movsb
adc
adc
test
pop
cmp
inc
jae
sti
nop
xor
inc
mov
dec
pop
ljmp
scas
ret
fs
jb
out
je
mov
stc
dec
dec
and
and
mov
mov
mov
mov
hlt
mov
lahf
mov
pop
int
inc
add
dec
mov
es
cmp
cmpsb
cmp
sahf
sar
fwait
mov
inc
mov
fninit
lds
mov
add
push
clc
in
bound
test
or
mov
and
std
fs
insb
adc
testl
ret
adc
xor
inc
test
mov
mov
mull
add
xor
push
adc
cmpsb
dec
lods
add
loope
mov
or
xchg
loope
cwtl
cmp
scas
icebp
imulb
out
btc
loop
mov
and
in
pop
mov
testb
lods
push
and
and
hlt
scas
jecxz
outsb
add
and
fsubr
loop
stc
testb
adc
nop
add
sub
sbb
push
adcb
dec
lods
pop
cmc
icebp
push
sub
fwait
loope
repz
cmp
out
adc
scas
or
pop
mov
xor
std
cmp
xor
xchg
dec
and
jae
imul
ret
mov
mov
ret
and
lret
jae
dec
xchg
xor
dec
add
test
add
std
mov
and
call
stos
fiadds
cmc
call
mov
pushf
dec
call
cmpsb
shlb
jle
or
scas
out
sbb
decb
je
ret
mov
out
xchg
ss
out
ss
mov
add
testb
jecxz
movsb
pushf
mov
add
xchg
aaa
ja
dec
stc
xchg
jge
pop
or
inc
fbstp
push
mov
jne
xor
jl
leave
cmp
jl
insb
fs
das
ret
xchg
es
mov
in
mov
mov
cs
xor
lods
in
cmp
add
mov
adcl
mov
loope
mov
mov
xchg
std
out
mov
pop
adc
mov
enter
fdivrs
fldl
cmp
sbb
lea
sbb
add
lds
mov
add
adc
add
sbb
or
repnz
insb
cmp
in
inc
loopew
xchg
cmc
add
jae
hlt
jbe
cmp
out
aas
test
push
add
cmpsl
and
mov
in
roll
add
inc
xor
pminub
cli
cmpsl
mov
loop
js
and
add
jp
mov
xor
lret
andb
mov
icebp
daa
out
test
xlat
mov
dec
sbb
add
ret
mov
rorb
jbe
jne
in
mov
xchg
mov
sub
fsubs
sbb
in
aad
jle
ror
imul
idivb
in
cmp
lock
cmp
or
daa
pop
jae
rcrl
int3
dec
lods
sbb
adc
movsl
out
mov
sbb
lods
inc
mov
cmpsl
pop
cmp
cmp
in
stc
sub
fwait
ds
mov
or
leave
shrl
ret
test
fs
and
repz
add
loopne
icebp
mov
in
das
jb
sbb
aad
sbb
add
mov
sbb
jb
jns
loope
aaa
mov
jge
jl
sbb
in
adc
mov
cli
push
and
mov
inc
sbb
clc
hlt
pop
sbb
fwait
lds
aad
add
js
pushf
pushf
cwtl
aas
add
cmp
pop
gs
nop
jge
in
push
inc
add
lsl
sbb
mov
add
push
jle
sti
aaa
outsl
pusha
xor
cltd
enter
push
jle
sub
pmuludq
stos
data16
jle
adc
fwait
lods
mov
fisubl
push
in
mov
je
and
sbb
add
std
out
aam
dec
inc
pop
jns
pop
hlt
xor
sti
adc
xor
xchg
cld
xor
push
jae
mov
stos
out
xor
stos
inc
mov
imul
repz
mov
js
mov
movsb
in
push
fs
sbb
and
ret
dec
ss
adc
mov
lret
pusha
addr16
pop
sub
roll
xor
notl
jl
out
jecxz
xlat
jmp
or
cltd
adc
cs
dec
arpl
nop
addr16
int3
sbb
in
and
mov
push
push
and
sti
ja
mov
mov
pop
cmpsb
pop
mov
shll
testb
rcll
sbb
jno
fdivl
xor
jmp
divl
jo
adc
je
lods
scas
add
cmp
dec
sbb
int
roll
cmpsb
dec
xchg
pop
adc
mov
or
fsub
stc
clc
sub
dec
sub
cmc
js
test
lods
xchg
pop
mov
jg
pop
add
mov
jl
cli
adc
fcomi
notb
sub
pop
or
std
lahf
mov
jecxz
idivl
out
loope
insb
xchg
jmp
fwait
mov
aaa
and
icebp
jmp
add
cwtl
cs
testl
les
inc
sbb
pop
jnp
cmp
dec
hlt
push
sub
xchg
and
mov
sar
jp
pusha
pop
lahf
add
cmp
lds
jne
and
test
add
sub
dec
cmp
push
out
xchg
dec
rcrb
jl
mov
scas
add
mov
jge
adc
lahf
push
cmpsl
dec
test
ficompl
add
sub
cmp
inc
sbb
and
inc
orb
sbb
inc
out
cltd
or
jae
pop
cmp
cmp
cmp
mov
mov
test
or
out
mov
rcll
fsubl
fdivr
mov
divl
jno
push
pop
mov
filds
cwtl
enter
imul
pop
jns
sbb
outsb
das
pop
stos
rcll
mov
stc
int
push
aaa
daa
xor
xor
cmp
pop
movsb
or
inc
or
mov
popf
mov
movsl
or
jge
aaa
es
dec
xlat
outsb
cmpsl
dec
lcall
push
lret
xchg
and
bound
add
insb
in
cwtl
jg
cltd
lds
sub
pop
pushf
mov
cmpsb
jmp
inc
shll
push
cmp
push
dec
mov
add
loope
pusha
lock
add
mov
xor
sbb
jge
lds
dec
add
cmp
shlb
add
fidivs
lds
cmp
jne
lea
daa
xor
sub
ret
and
stc
sbb
adc
mov
push
add
dec
enter
adc
push
pop
adcb
lds
ret
lods
jl
dec
dec
cli
xchg
cltd
xor
fdivr
and
push
pop
nop
mov
out
cmp
pop
inc
fsubs
clc
iret
xorl
mov
push
enter
mov
sarl
cmpsb
jmp
sbb
dec
sbb
orb
stos
xlat
mov
push
clc
jne
dec
aaa
sti
mov
jge
adc
popa
icebp
pop
insl
aam
lret
mov
dec
aaa
add
cmc
pop
mov
cmp
stos
nop
ja
inc
or
pop
es
pop
in
int
lahf
cmp
idivb
and
lahf
xchg
nop
cmc
cmp
and
and
fsubl
mov
adc
sahf
or
inc
sub
stc
sub
pop
push
cmpsl
scas
xchg
andl
mov
outsb
rcll
repz
jne
clc
inc
pop
scas
ss
dec
pop
mov
dec
mov
mov
roll
outsb
xor
je
jge
test
sbbb
out
add
scas
test
out
into
and
imul
add
arpl
fs
sbb
stos
das
hlt
pop
adc
and
mov
pop
hlt
sub
sub
jmp
es
ja
shrl
and
clc
jmp
ljmp
xlat
and
fdivp
icebp
test
shlb
lret
jo
pop
and
cwtl
xor
jmp
je
lods
jmp
or
into
sub
and
cld
and
cwtl
movsb
jg
push
or
call
loope
decb
sub
inc
das
daa
scas
cmp
movsl
xchg
jl
cmp
and
inc
lods
clc
xchg
mov
mov
mov
aad
std
cmp
adc
mov
ds
int3
sub
xor
push
bound
add
mov
jns
scas
loopne
pop
sub
fmuls
insb
repnz
sub
cmpsl
inc
and
sbb
push
pop
movsl
mov
dec
loopne
push
dec
popf
mov
in
sub
adc
push
push
inc
addr16
and
adc
les
jo
pop
pop
repnz
imul
es
lods
inc
enter
je
cwtl
das
jbe
scas
push
incl
imul
and
mov
das
mov
dec
dec
jb
hlt
xor
mov
cmpsb
add
mov
int3
mov
or
and
push
cs
sahf
push
mov
pop
add
daa
push
ds
jl
mov
out
sbbb
push
out
and
cvttps2pi
loopne
js
and
add
adc
or
add
jecxz
outsl
and
lods
cmp
in
adc
hlt
xchg
dec
xor
hlt
cmc
mov
pop
cmpsb
and
push
xor
and
paddusb
push
push
call
add
mov
add
mov
les
fbstp
xor
adc
es
lret
jle
inc
subb
and
mov
popf
sbb
inc
mov
fmul
adc
add
test
mov
das
mov
lret
jmp
out
add
adc
test
test
add
add
mov
mov
movb
push
or
neg
std
cmpsb
xor
mov
push
lret
inc
sbb
xlat
out
push
clc
ror
imul
cwtl
xchg
jge
xchg
shll
mov
and
je
daa
xorps
jp
testl
ret
je
cmp
or
cltd
sahf
ds
jl
mov
xchg
xchg
fdivl
idiv
mov
sbb
movsb
cmp
out
xor
sub
sub
cmp
popa
fsubl
add
cltd
and
movsb
xor
ss
inc
ja
lahf
and
inc
jmp
sbb
mov
and
push
or
xor
cmpsl
icebp
ret
mov
mov
inc
jmp
shlb
sahf
mov
adc
mov
sub
cli
fisubs
sbb
pusha
insl
subl
call
int
mov
push
xchg
es
mull
inc
mov
or
inc
ja
call
sbb
testb
mov
iret
dec
mov
pop
push
loope
jmp
ja
fnstenv
fs
movsl
pslld
cmc
test
mov
pushf
add
sub
cmp
lods
aad
lea
jo
ljmp
xor
push
mov
and
cwtl
sbb
andb
call
push
mov
and
dec
dec
rcr
daa
add
cli
mov
decb
lods
sub
test
xchg
and
dec
loopne
mov
pop
mov
enter
xor
mov
fisubrl
das
and
push
and
fldl
and
lds
inc
sbb
push
or
pop
call
mov
loope
or
or
test
jecxz
or
into
adc
pop
or
cld
xchg
jg
cmpsb
cmc
mov
pop
adc
cmp
sub
out
test
and
and
mov
push
cwtl
or
and
sub
lea
rolb
repz
lods
mov
mov
stc
sub
push
test
clc
pop
call
out
mov
int3
mov
push
jno
xor
movsb
jo
sbb
add
xor
daa
stos
test
cmp
test
int
jbe
pop
sub
shlb
je
pop
and
jne
or
xor
cwtl
inc
stc
cmp
pop
jmp
mov
pusha
add
xchg
stc
push
lods
adc
not
fsts
ja
lahf
mov
or
push
mov
push
mov
icebp
push
push
inc
clc
sbb
test
enter
push
fstps
pop
insl
sub
xor
pop
and
fsubs
add
jg
mov
xlat
cmp
ja
in
shrb
enter
sub
sbb
cs
mov
scas
clc
and
scas
mov
jg
pusha
dec
and
das
cmc
mov
mov
mov
clc
and
es
add
push
lahf
mov
lods
leave
and
pop
cmp
mov
adc
cld
addr16
sar
movsb
lcall
sti
dec
lods
mov
rcrb
cmp
loope
aad
mov
cmp
insl
xchg
push
daa
fs
xor
rcl
mov
jge
movsl
stos
mov
push
outsb
xchg
fwait
jge
imul
pop
xchg
shlb
cmpsb
subb
std
ficompl
test
sub
and
cwtl
rorb
in
dec
negb
ret
jmp
adc
mov
je
or
subl
cmp
dec
les
xlat
pusha
xor
dec
and
dec
sarb
cmpsb
in
sbb
adc
inc
xchg
lahf
cmpsb
ss
add
push
sbb
cwtl
lret
and
dec
push
test
in
pop
jbe
aam
xchg
push
std
or
idivl
lds
jbe
mov
sbb
xchg
adc
xor
mov
ret
mov
shrl
push
fwait
or
adc
test
mov
fs
mov
in
cltd
jl
pop
lret
pop
mov
adc
popw
add
pop
scas
mov
cld
aad
inc
mov
lock
sbb
jne
pop
popf
adc
jp
mov
adc
dec
ror
inc
mov
clc
cmc
ds
fmul
daa
xor
xor
loop
in
out
shll
cmc
push
mov
jbe
jmp
and
stos
xchg
xchg
test
in
jae
ja
dec
jecxz
outsl
les
xchg
lret
sti
add
stc
xchg
jmp
mov
cmp
outsb
in
mov
cli
xchg
mov
and
lods
ss
gs
cltd
ret
popa
nop
adc
add
out
xor
fwait
repz
mov
gs
ss
push
jp
mov
jno
and
aaa
dec
test
aas
scas
pop
cld
jecxz
xor
ss
pop
inc
sbb
mulb
mov
enter
xchg
lcall
pop
clc
call
mov
pop
xor
sti
cmp
dec
in
cmp
or
cmp
data16
sbb
mov
xchg
xchg
jecxz
adc
push
lods
sbb
and
aaa
add
insl
cwtl
mov
cmp
mov
in
lcall
repnz
jle
pop
loopne
iret
push
sbb
push
mov
cmp
ja
pop
stc
out
daa
das
wrmsr
addr16
in
push
sub
lock
jne
or
insb
mov
pop
in
ja
std
lock
movsl
fmull
ja
fucom
sub
push
add
punpckldq
add
fucomp
es
test
jg,pt
add
rcrl
xor
pop
mov
stc
ds
lods
jl
sub
push
xchg
pop
sbb
adc
sub
sub
add
pop
jno
jl
adc
xlat
jnp
xor
dec
dec
mov
outsb
sub
mov
test
mov
jbe
fisubs
mov
push
adc
xchg
add
movsb
shrl
test
insl
dec
mov
dec
je
sarl
lret
stos
fidivs
cltd
clc
jns
or
movsb
lea
jge
insl
push
mov
loope
and
mov
jge
sbb
scas
push
mov
add
push
add
mov
arpl
lds
mov
fdivrp
add
add
ja
aaa
dec
xor
or
or
aad
sbb
and
jge
insb
mov
mov
pop
add
mov
shl
cltd
ljmp
repnz
mov
lods
insl
ss
fldt
mov
xor
jl
push
jno
test
stos
mov
out
insl
jecxz
pop
and
scas
mov
test
cmp
add
dec
dec
jns
loopne
dec
jb
adc
ret
push
in
jo
outsb
fldt
loopne
rcrl
xchg
add
cvtpi2ps
xor
cwtl
inc
xchg
mov
mov
or
xor
cmp
or
gs
mull
and
dec
dec
popa
dec
nop
xchg
push
cld
mov
add
in
cmpsb
je
jns
sbb
lea
mov
and
push
mov
ja
inc
push
add
mov
pop
mov
add
adc
outsl
cmc
pop
sbb
adc
outsb
cmp
adc
xchg
add
int3
or
ret
pop
dec
movsl
xlat
sbb
int
push
pop
push
mov
cmp
es
and
imul
mov
aas
leave
jg
imul
test
repnz
jnp
leave
gs
leave
shlb
add
cmc
cmpsb
ss
outsb
adc
cmp
mov
push
cmpsb
ss
imul
fisttpll
inc
shrb
outsl
mov
nop
jne
push
addr16
pop
jle
fs
inc
popa
push
call
sbb
add
mov
pop
mov
outsl
pop
or
in
roll
js
and
ret
les
idivl
inc
mov
mov
sarb
jno
add
test
movl
pop
shll
push
je
inc
popa
sahf
lret
data16
testb
mov
movsb
ljmp
sub
pushf
add
push
or
pop
add
cmp
inc
mov
xchg
dec
push
out
xchg
ficomps
stc
hlt
movsl
sub
push
loope
js
stos
movsl
or
lret
mov
push
loope
pushf
clc
test
xorl
addr16
mov
call
rorl
sbb
mov
enter
push
fidivl
jl
jmp
pop
mov
pop
rclb
push
xchg
add
loope
sbb
sbb
scas
push
xchg
jge
stc
pop
mov
cmp
fwait
lock
mov
or
cmc
xlat
mov
mov
rcr
adcb
lret
jns
add
mov
adc
add
lcall
add
cld
push
int3
sbb
es
nop
test
jecxz
call
pop
or
popa
add
je
dec
loopne
js
pop
ficoms
in
cmp
test
pusha
jmp
out
xor
in
stos
lea
lods
adc
xchg
inc
nop
push
andl
insl
ss
sub
jmp
add
sbb
lods
outsb
inc
sub
inc
cli
mov
test
inc
or
inc
cld
adc
test
cmp
jmp
xor
cmp
cmpsl
adc
stos
icebp
inc
movsb
xchg
loope
xchg
jge
mov
sbbl
jno
mov
ss
cs
cmc
xor
jne
pop
jo
adc
mov
nop
adc
in
enter
push
add
dec
stc
add
gs
hlt
sub
ss
cmp
ja
dec
push
std
scas
iret
xchg
je
pushf
xchg
shrb
adc
mov
xlat
gs
ja
jp
inc
sbb
bound
cltd
movsl
mov
push
cmp
inc
es
add
cmp
mov
xor
mov
adc
int
stos
jns
orb
aad
shlb
mov
push
mov
xor
ss
pop
xchg
sti
or
idiv
and
icebp
mov
add
or
shll
jb
fistpll
dec
int3
pusha
cs
inc
xor
loopne
sbb
sub
out
pop
mov
push
ljmp
cs
shrb
jle
sbb
iret
mov
pop
mov
insb
adc
jp
mov
scas
or
pop
sbb
mov
sub
pop
lock
add
push
lcall
cmp
inc
fwait
dec
popf
ret
jmp
mov
out
fs
out
sub
xchg
mov
xor
ja
in
xor
dec
mov
add
push
aaa
mov
nop
dec
and
sub
mov
js
xchg
inc
jecxz
sbb
and
add
pop
cltd
fsubrp
mov
iret
cmp
imul
iret
popf
faddl
xor
adc
push
mov
mov
out
call
shl
adc
add
out
sbb
shll
inc
sbb
in
inc
pop
lahf
jg
adc
pushf
test
test
loope
rclb
les
sbb
sbbl
pop
inc
mov
sub
in
push
push
push
int3
stos
popf
cwtl
jle
ret
xor
or
pushf
test
loope
clc
jl
xchg
jmp
sbb
push
sarl
and
fadds
shll
add
xor
testb
addl
cltd
aad
lea
daa
insl
cmp
sysret
pop
xor
adc
aas
movsl
cmp
out
mov
repnz
or
sbb
xchg
divl
xchg
sub
in
ja
dec
mov
outsb
pop
cmp
dec
clc
mov
mov
movsl
lret
mov
cmc
mov
test
dec
fldcw
pushl
cld
cmpb
sbb
mov
mov
lods
pop
xlat
nop
xor
daa
pop
aaa
mov
insl
push
test
leave
sti
pop
mov
movsl
je
nop
lock
cmc
mov
cmc
movsl
sbb
outsb
jmp
out
push
lcall
xchg
cmp
clc
jno
dec
stos
in
push
cmp
cmc
mov
mov
sahf
and
pop
sti
ljmp
jno
dec
ja
mov
cli
xchg
jg
test
adc
imul
add
mov
jnp
mov
mov
inc
imul
in
sub
or
pushf
in
mov
xor
push
pop
adc
movsl
sbb
lahf
and
and
ja
pushf
mov
xor
push
fisttpll
mov
shlb
icebp
lahf
sub
in
movsl
popf
shl
mov
mov
js
addl
add
nop
cmp
pop
pop
ja
push
cmp
shll
mov
mov
sub
std
sbb
fs
mov
dec
sub
lds
inc
inc
lahf
lahf
cmp
push
push
xchg
cmp
or
test
cmc
movsl
out
mov
or
aaa
sbb
jge
jg
movsb
adc
sub
mov
cltd
sub
loope
lods
ja
dec
sbb
adc
cmc
fldenv
add
sub
lahf
std
cmp
push
test
mov
push
cmp
dec
test
push
scas
push
mov
repz
mov
pop
scas
fcoms
xchg
rcll
or
sahf
sub
push
push
cmp
mov
dec
aas
jp
je
and
scas
dec
sbb
and
add
data16
jbe
lcall
shlb
pop
xor
push
or
adc
movsl
mov
xchg
les
push
cmp
fsubs
dec
add
out
movb
jb
sub
add
cmp
int3
dec
xor
mov
sti
mov
sbb
or
out
jnp
jp
sub
stos
sub
pop
mov
adc
pop
dec
dec
sbb
dec
in
ret
lea
in
sub
or
or
xchg
xor
lahf
sbb
enter
mov
or
cmp
shll
popa
out
sub
ds
sbb
xchg
enter
test
add
sbb
fnsave
push
shrb
mov
in
repz
pop
pop
and
jnp
and
add
jg
shlb
std
or
adc
popa
sbb
mov
stos
rcll
dec
in
inc
add
cltd
pop
mov
xor
xor
scas
sahf
xchg
push
mov
pusha
jmp
popf
imul
dec
sub
pop
pop
test
pop
movsl
lds
sub
jb
dec
inc
lods
into
call
cmp
ja
inc
fwait
jno
add
cmp
stc
xor
sti
fwait
cmp
add
inc
fsubs
stc
and
lcall
les
and
pop
jmp
push
sbb
mov
in
insb
mov
push
jae
icebp
rolb
mov
pop
mov
repz
data16
inc
jl
arpl
inc
call
nop
adc
and
sub
xchg
jge
aad
adc
test
mov
stc
cmp
mov
adc
sbb
mov
ss
mov
pop
dec
mov
movsb
and
sub
test
cmp
jne
mov
sti
mov
ja
jo
lods
mov
mov
rcl
add
mov
cmpsl
cwtl
jae
pop
add
jbe
js
inc
lea
aad
and
pop
dec
je
mov
jl
in
sub
inc
xchg
or
daa
or
je
sub
and
mov
jns
in
in
add
sbb
dec
fstps
test
mov
ss
je
xor
or
ja
rcrb
xor
cltd
jecxz
adc
pop
mov
cld
cltd
mov
rcr
sbbb
lret
push
aas
cmc
sub
add
jl
pop
fldcw
decl
addr16
xor
inc
daa
add
adc
inc
es
sti
cs
cmpsl
pop
popf
movsl
into
adc
shrb
jae
pop
mov
sub
and
adc
jae
shl
in
sbb
jb
fwait
testl
fbld
sub
inc
fs
rcrl
daa
mov
popf
sbbl
and
xor
out
sahf
lods
mov
sub
pop
sub
pushf
pop
jecxz
loope
mov
lds
repz
cmp
mov
icebp
cltd
lret
movsb
cmp
push
jo
push
loope
lcall
cltd
ljmp
out
and
aaa
push
shlb
jg
pop
ds
pop
lret
shll
xchg
test
and
dec
add
imul
dec
fcoms
enter
lret
sbb
push
or
mov
mov
jb
inc
push
vaddps
test
jbe
jmp
sbb
push
ret
xor
and
mov
cmp
ja
fwait
insl
ret
mov
cmc
aad
insb
pop
insl
enter
iret
rcr
scas
sbb
adc
inc
gs
dec
loope
cmp
inc
bswap
and
cmp
mov
push
xchg
mov
shl
jo
sbb
cmp
and
in
cmp
xchg
jnp
repz
xor
dec
je
into
cmp
add
jecxz
pop
dec
pop
dec
out
jge
jns
and
cmp
addl
push
cmp
and
int3
inc
dec
dec
push
push
push
stc
in
add
aaa
cli
pop
loop
mov
mov
add
dec
sub
hlt
add
xlat
lea
loope
add
rcl
aas
aaa
movsl
fidivs
sahf
inc
lret
cmp
jae
jb
lock
xor
adc
jbe
imul
mov
jne
movsb
push
lds
dec
lock
cwtl
xchg
mov
stos
dec
adcl
js
inc
sub
xchg
mov
clc
js
sub
movsl
int3
xchg
jo
sbb
cmc
ja
inc
xor
mov
dec
xchg
and
rcrl
mov
xor
call
sbb
ljmp
push
mov
lds
push
test
aam
mov
sbb
ss
or
popf
lods
mov
movsl
xor
and
fs
pop
jg
cmpsb
js
jnp
pop
es
pop
or
and
sbb
int
stc
push
jl
add
mov
mov
and
test
jge
in
and
adc
xchg
jae
xchg
mov
cmc
clc
mov
pushl
pop
pop
mov
add
jnp
inc
or
and
shlb
sbb
out
lods
mov
mov
mov
fs
les
or
or
icebp
int3
stc
std
movsb
popf
jns
and
daa
and
popa
cmp
cmp
pop
push
mov
jne
loopne
repz
cmc
xor
dec
cmp
mov
pop
xchg
mov
dec
inc
cmp
pop
push
push
rcrl
inc
sbb
mov
jnp
sub
in
adc
fwait
shlb
test
cli
cld
or
popf
pop
jle
loop
cs
movsl
lds
enter
nop
push
testl
pusha
scas
cmp
data16
icebp
clc
push
ror
es
jbe
std
sub
inc
lahf
and
inc
and
loopne
iret
push
std
xchg
cmpsb
cmp
add
cmpsl
sbb
movsl
inc
push
xor
lods
aad
adc
sbbb
jl
fstps
mov
xor
gs
and
sbb
ja
out
mov
mov
or
xchg
inc
dec
fldcw
cmpsl
iret
imul
jo
mov
mov
xlat
and
jne
sub
sbb
push
xor
mov
jge
xchg
cmc
in
cwtl
out
clc
and
movsl
and
adc
cmp
pop
cmp
jg
sbb
add
movsb
push
dec
push
fwait
mov
xchg
jae
popa
or
dec
aaa
cltd
pop
std
cmpsb
jmp
notb
pop
data16
movsl
sbb
push
jnp
and
mov
inc
sbb
add
pusha
jae
mov
or
lods
push
repz
mov
cmpsb
xor
sbb
push
cwtl
pop
imul
out
cmp
push
jg
mov
adc
xor
je
cmp
pop
cs
xchg
addb
dec
daa
or
push
pop
idivb
cs
jbe
push
cltd
push
cmpb
shl
and
out
xlat
jl
and
cmpsb
fwait
xor
call
testb
test
xlat
roll
mov
sub
iret
icebp
mov
ljmp
pop
push
jg
jnp
sbb
xor
push
lods
add
adc
sbb
xchg
cltd
ja
mov
cmp
pop
js
xchg
lds
adc
push
add
mov
jb
aaa
int3
jae
cmp
pop
jb
dec
cld
hlt
test
dec
jne
cmpsl
ds
incb
add
or
xlat
inc
xor
outsb
daa
fdivs
cwtl
popf
mov
pop
jp
jo
push
xchg
std
adc
test
roll
pop
lds
add
push
cmp
int3
out
xor
push
out
dec
xchg
mov
cmpsl
movsl
mov
data16
mov
ss
out
inc
sbb
lcall
pop
out
cmp
adc
out
push
in
dec
add
fidivrl
cs
sub
cmp
mov
fwait
out
push
mov
dec
jb
cvtps2pi
pop
sbb
std
push
push
push
mov
lea
inc
fstps
adc
subb
loope
jbe
push
mov
sahf
pop
dec
and
mov
push
sbb
fs
xchg
sbb
cmp
daa
bound
std
pop
add
push
and
mov
ds
push
pop
popa
jmp
mov
xor
inc
xchg
clc
xor
ja
cmpsb
div
movsb
testl
mov
leave
sbb
jno
mull
lret
aas
dec
lret
lock
and
dec
pusha
jo
mov
xchg
pop
jge
and
test
lock
fdivl
faddl
out
cs
lock
cmp
and
mov
and
lcall
ss
mov
call
inc
push
sbb
insb
dec
pop
stos
adc
xor
pop
mov
xchg
aad
popf
ret
rorl
aaa
fpatan
mov
push
ss
fdivs
test
pop
adc
jo
repnz
or
push
jl
stos
adcb
rolb
xchg
pop
cmp
pop
mov
ss
add
push
in
inc
scas
xorb
xor
mov
sub
pop
cmp
sbb
outsb
jle
xchg
es
mov
push
int3
and
push
mov
pop
rcll
sbb
cmp
aaa
cmpsl
jo
sub
mov
sub
sub
sbb
xchg
sbb
mov
mov
pop
test
imul
sbb
and
mov
adc
movsb
xor
mov
sti
sti
mov
out
cmp
icebp
add
push
les
popf
mov
iret
sub
stc
and
xchg
jl
xchg
fnstenv
aaa
cmp
lods
les
dec
xor
gs
inc
jl
in
arpl
jne
jmp
rcl
jmp
push
dec
lods
faddl
and
xchg
aaa
aad
ljmp
push
outsb
stos
sbb
jne
pop
ja
pop
out
imul
mov
stc
push
push
push
ja
lds
inc
sub
pop
inc
add
adc
cmp
fisttpl
stc
pop
std
sbb
das
cmc
int3
out
mov
xor
ljmp
inc
aas
fstps
clc
push
testl
nop
lods
mov
jp
inc
mov
mov
in
inc
xchg
push
sub
dec
pop
push
fdivrl
sbb
mov
cmpb
dec
cmc
and
pusha
int
jae
out
pop
mov
fs
push
push
jge
mov
mov
jns
mov
mov
mov
sahf
xchg
jp
mov
outsb
sbb
lahf
in
inc
leave
pop
imul
ret
push
std
mov
aaa
out
cmp
sub
imul
lock
sbb
outsl
and
imul
cmp
add
mov
pop
adc
and
mov
sub
mov
mov
xor
xchg
push
fnstenv
aad
add
cmp
push
enter
push
mov
aad
lahf
out
into
in
movsl
cld
stc
xor
jge
push
out
xor
repnz
gs
aas
ljmp
lock
jl
sarl
nop
cltd
and
xor
leave
mov
test
ret
sbb
call
lds
daa
jg
mov
sbb
ret
mov
loopne
sbb
ret
mov
test
and
xor
inc
ljmp
push
shr
js
sbb
jne
jl
sti
std
dec
inc
or
fwait
mov
jno
and
mov
push
testb
sbb
sub
sbb
lods
mov
mov
xor
inc
mov
imul
pop
mov
bound
xchg
scas
sub
mov
and
lds
mov
sub
clc
xchg
stos
mov
mov
cli
ret
mov
adc
pop
mov
mov
jge
mov
imul
lock
or
xchg
jp
adc
mov
adc
test
aas
jl
sar
add
out
arpl
add
in
movsl
ja
data16
mov
xorl
add
scas
xor
ret
mov
sbb
ds
pop
cmp
mov
or
mov
lods
add
subb
add
sbb
ja
cmpsb
in
sub
xor
cmp
movsl
ljmp
jmp
xchg
std
mov
add
cmp
lods
inc
add
gs
stc
adc
or
mov
mov
aaa
push
mov
or
and
ja
lods
sub
in
xorl
ja
sub
fnstenv
xor
dec
sbb
xor
and
add
enter
stc
jae
je
cwtl
es
jnp
stos
inc
sub
and
mov
shl
mov
xor
jne
add
stos
xchg
std
daa
popa
push
xchg
cwtl
push
xor
out
int
inc
jno,pn
xlat
sbb
mov
add
int
shlb
push
add
mov
inc
mov
pop
xchg
repnz
mov
out
push
or
std
call
out
xor
adc
xor
adc
fdiv
dec
div
mov
sub
push
dec
sti
in
mov
std
push
and
das
popf
jl
sbb
jae
shl
sarb
test
push
repnz
es
je
mov
xchg
imul
ret
adc
jmp
sub
cmp
aam
and
pop
movsb
mov
xor
into
inc
mov
fstpt
stc
fnstenv
dec
js
mov
and
jae
xor
jnp
je
xchg
mov
cmc
inc
push
ret
sbb
std
and
or
fidivl
jmp
pushf
sub
lods
ret
fsubl
cmp
aam
jo
mov
rolb
ret
pop
std
sbbl
jno
les
call
aaa
in
sti
mov
movsl
add
stc
mov
test
cwtl
jns
insb
std
dec
movsb
ja
mov
movsl
test
js
loope
ret
mov
pop
adc
and
loope
adc
add
inc
inc
add
dec
mov
in
loope
xchg
ret
cs
dec
add
and
and
mov
or
sbb
and
sbb
and
add
mov
int
or
es
mov
cli
fistpll
pop
adc
jg
cmp
in
in
and
lods
sbb
add
dec
lds
sbb
mov
mov
mov
std
and
mov
inc
mov
aad
int
dec
in
punpcklwd
fs
loopne
movsl
mov
mov
fiaddl
sbb
hlt
les
lret
and
xor
mov
and
pop
mov
fisttps
jge
ror
ret
inc
lods
loope
add
add
test
mov
lds
adc
fidivl
dec
and
mov
mov
push
inc
std
or
adc
push
mov
mov
in
arpl
shll
mov
in
dec
mov
jmp
sbb
sahf
mov
dec
mov
mov
sub
inc
std
movsl
pop
popf
cmpsb
inc
fbstp
pusha
sbb
inc
or
xchg
popa
stos
sbb
adc
gs
fisubrs
inc
inc
int3
out
push
js
jecxz
xor
adc
data16
inc
subb
fisubs
hlt
pushw
out
add
xchg
mov
pop
and
in
add
sbb
inc
adc
pop
mov
arpl
pop
dec
js
cs
cmp
push
dec
adc
xor
mov
push
xchg
les
or
push
pop
out
call
mov
or
rolb
test
imull
lahf
or
gs
lock
adc
adc
sahf
inc
ja
sbb
mov
pop
mov
mov
adc
xchg
iret
pop
jle
add
push
cmp
inc
in
call
sub
sub
sub
cli
in
push
push
pop
rcll
test
stos
mov
hlt
jecxz
dec
or
pop
xor
push
add
adc
inc
mov
imul
inc
out
daa
sub
and
data16
in
pushf
dec
ja
lahf
lds
add
cs
sub
enter
inc
sahf
and
cmp
fnstcw
imul
mov
int
bound
jb
pop
shrb
jo
and
and
mov
iret
lahf
outsb
leave
sbb
jnp
pop
xor
xor
ja
bound
inc
cmpsb
inc
jae
sbb
add
cwtl
mov
dec
pop
data16
mov
movsl
cmp
sti
add
adc
jb
xor
mov
add
fistpl
push
out
inc
cmpsl
adc
jns
in
xchg
cltd
bound
cmp
addr16
add
push
mov
jge
daa
out
sbb
movsb
shl
jae
cwtl
pop
and
cmpsb
xchg
cmpsb
inc
rclb
xor
jge
pushf
add
sbb
dec
mov
repz
xor
adc
push
mov
cmp
and
jnp
std
sbb
ss
imul
push
adc
dec
pop
imul
xchg
aad
sub
fisubs
mov
iret
xor
mov
sbb
out
inc
mov
dec
adc
outsl
adc
inc
jne
or
pop
stos
push
sbb
inc
mov
testb
je
push
adc
push
push
inc
sub
daa
xor
add
aam
icebp
out
mov
test
cwtl
sbb
pop
sbb
gs
mov
inc
mov
gs
mov
ja
dec
mov
mov
mov
jl
jne
cmc
pop
xor
or
push
pusha
adc
sub
outsl
mov
sahf
mov
lea
cmp
arpl
repz
pop
push
jo
mov
cltd
stc
lods
ss
push
fistps
popa
inc
jecxz
xor
mov
daa
leave
sbb
lods
jmpw
xchg
mov
inc
mov
pop
jp
push
mov
mov
dec
fbstp
or
and
call
enter
jge
mov
scas
add
xchg
adc
add
jp
inc
pop
call
pop
mov
and
insl
mov
rolb
gs
aad
push
pop
test
pusha
out
pop
jae
popf
xor
stos
popa
sub
xor
sbb
stc
jle
adc
xchg
sub
mov
jmp
and
lea
cmp
cmpsl
std
and
std
cmpsb
test
xchg
or
in
pop
xor
sbb
fwait
pop
ss
loope
and
or
fsubrl
mov
call
jo
add
xor
mov
jmp
lret
pop
sbb
sar
xlat
add
or
mov
jo
inc
cmp
aaa
add
clc
in
sbb
in
out
and
lods
loopne
ret
shlb
or
xchg
lea
cwtl
ret
jmp
dec
dec
mov
sub
es
jae
cmp
add
xchg
push
mov
mov
mov
fsubs
jp
mov
adc
add
and
xchg
mov
cmp
out
inc
xchg
aas
pushf
xchg
cs
sub
lret
js
ficoms
in
es
and
cmc
bound
add
mov
sbb
shl
pop
xchg
je
outsb
xchg
out
lret
mov
ljmp
xchg
cmc
jne
lds
inc
fs
sbb
ret
inc
add
fistps
repnz
incl
cmc
ja
incb
add
cmpsb
sbb
pop
subb
std
xor
divb
add
std
or
xor
pop
es
test
mov
popa
adc
enter
rcrb
scas
leave
pop
fldenv
loope
or
sub
out
fmull
jb
sar
pop
mov
std
scas
mov
mov
movsb
xchg
dec
mov
insb
aam
cwtl
mov
sbb
xor
aaa
lret
and
std
push
mov
mov
cmpl
lcall
xchg
daa
mov
into
mov
mov
pusha
mov
jmp
cld
movsl
je
insl
jb
sub
jae
jne
cmp
jne
loopne
mov
cltd
fstps
stc
inc
jae
daa
dec
jl
in
xchg
aas
xor
cmp
or
fdivrl
mov
call
jns
inc
fistps
mov
shl
and
insl
lods
dec
push
fsubrs
outsb
imul
sub
clc
or
ret
shlb
xchg
pushf
pop
cwtl
out
sub
test
and
and
call
fst
sbb
popf
shll
rcrl
addr16
jnp
inc
jae
cwtl
dec
addr16
emms
in
es
das
xchg
cmp
add
mov
es
call
inc
adc
jb
je
lret
es
xor
mov
test
inc
ja
sub
in
lret
popa
inc
fstps
pop
incl
sub
test
mov
aas
ret
mov
mov
mov
aaa
repz
mov
cmp
loopne
daa
xor
push
inc
pop
mov
jno
mov
jmp
and
rorl
lret
std
cmp
cwtl
cmpsb
leave
lds
jo
and
xor
leave
pop
or
and
mov
add
stc
lahf
cmp
and
hlt
int3
cwtl
and
or
mov
or
sub
sub
sti
add
cmp
mov
sub
call
pop
dec
mov
mov
aaa
shll
inc
in
adc
mov
aas
add
bound
test
in
xchg
movsl
adc
mov
jae
dec
je
and
jae
dec
add
imul
add
inc
cmp
and
dec
pop
mov
mov
adc
adc
sbb
les
jl
push
mov
mov
mov
xor
cli
push
mov
je
push
vcmpsd
add
xchg
mov
into
sub
cmp
out
jle
jae
push
andl
popa
dec
adc
fcomps
pop
cmp
call
lcall
push
scas
sti
test
xor
cmp
addr16
pop
pop
dec
mov
cmp
clc
push
xlat
mull
inc
xchg
pop
and
jae
adc
cs
movsb
fbstp
xlat
ljmp
je
xchg
or
mov
dec
sbb
test
jp
or
and
ss
cmp
sub
mov
jnp
in
call
jbe
mov
cmpsb
adc
push
mov
in
adc
sahf
out
cmpsl
sbb
rorl
jnp
or
nop
icebp
addr16
shl
pop
ljmp
sub
lcall
out
sub
aas
jmp
aas
test
outsl
and
xchg
cmpsb
pop
out
addb
inc
cltd
xor
scas
fmuls
push
int3
push
xchg
xor
mov
scas
and
sbb
mov
adc
sbb
in
shll
popf
mov
repnz
jo
xor
xor
mov
xor
pop
and
mov
add
popf
das
mov
aam
mov
and
lret
mov
jno
jmp
loopne
dec
hlt
cmp
sbb
jl
cmp
mov
cltd
adc
mov
and
in
inc
pop
lds
cmp
or
xchg
cmp
popa
nop
sbb
jae
in
add
push
sar
pusha
dec
adc
push
inc
jmp
nop
sbb
sbb
cmpsl
inc
xchg
mov
sub
add
cmpsl
sub
xor
in
jbe
and
bound
mov
cs
pop
shr
and
pop
mov
dec
movsl
outsb
nop
jecxz
mov
add
pop
imul
lret
cmpsb
in
mov
sbb
jge
xchg
enter
insl
xchg
jne
sbb
fiaddl
sub
mov
sbb
out
jnp
push
lods
inc
fwait
loopne
dec
bound
push
jmp
shll
imul
or
xlat
jns
mov
sub
sbbl
xchg
je
int3
pusha
push
mov
sub
mov
mov
fidivrl
das
mov
push
dec
test
push
push
jmp
push
enter
and
cld
mov
cmp
ds
stc
out
cli
push
fcmovb
jmp
negl
pusha
or
and
adc
cmp
mov
aad
xchg
and
or
mov
adc
shll
fnstsw
pop
xor
rcrl
sub
or
sub
std
inc
push
mov
sbb
adc
push
popf
sbb
cmp
out
mov
shll
pop
lret
and
mov
mov
mov
test
ret
mov
adc
shll
sub
rolb
sarl
sbbb
push
fstpl
xor
in
sub
pusha
cmpsl
and
dec
xor
cltd
and
jnp
or
sbb
aam
xchg
mov
popa
stc
cmp
push
imul
sub
inc
movsb
push
cmc
lea
inc
sub
and
xchg
pop
arpl
int
sbb
es
mov
ljmp
cmc
or
lods
and
jnp
inc
out
jae
mov
jmp
xor
lret
rclb
xor
cltd
fwait
sub
and
inc
sbb
pop
fucomp
sbb
mov
iret
or
mov
daa
or
pusha
mov
dec
call
std
sub
and
int3
sub
sub
sahf
xor
jno
jae
jae
pop
mov
sub
and
incl
jne
push
mov
mov
fistl
jae
sbb
ja
jnp
mov
popa
movsl
pushf
mov
cmpsb
lds
test
mov
in
xchg
movsl
mov
loop
div
daa
mov
jno
jns
in
bnd
sahf
sbb
dec
in
add
mov
lcall
out
add
call
gs
mov
cmp
clc
shrb
and
imul
xchg
push
decb
xchg
gs
divl
add
and
and
add
inc
jae
adc
xchg
dec
mov
pop
mov
pusha
shll
movsb
lahf
pop
ss
mov
scas
add
xchg
jno
inc
test
addr16
int3
xchg
jmp
inc
xlat
pop
outsb
test
sbb
push
or
add
sbb
jbe
and
cmpsl
fdivl
pop
ja
je
jmp
mov
or
mov
popf
adc
xor
and
or
daa
daa
and
loope
adc
leave
adc
test
repz
and
sbb
jno
ja
pusha
pop
inc
fisttpl
lret
mov
gs
push
mov
bound
jne
dec
pop
mov
pop
jno
mov
lahf
jp
pop
ss
in
in
dec
sti
pop
xchg
testb
sbb
add
jecxz
aaa
jbe
mov
das
xor
xlat
inc
xchg
js
push
xchg
and
fwait
pop
or
cmpsb
into
xor
xchg
loope
cld
fs
shl
mov
push
je
cmpsl
adc
sbb
mov
es
repz
leave
mov
xor
insb
sbb
add
lahf
daa
pop
mov
icebp
icebp
jbe
mov
lahf
in
cwtl
popf
jne
jb
dec
add
mov
out
sbb
mov
decl
rcr
sbb
cmp
test
inc
xor
push
sbb
dec
sbb
add
and
fdivs
insl
outsl
call
or
cld
push
cli
adc
dec
in
cli
in
and
mov
fbstp
mov
dec
insl
push
lods
jecxz
xchg
dec
xor
in
movsl
ja
jle
ret
mov
shrb
sub
mov
test
push
in
jbe
ret
cltd
lds
pusha
dec
cmc
es
stos
jle
and
sbb
pop
jne
add
push
cmp
add
pop
js
in
inc
adc
sub
das
sbb
adc
pop
sbb
and
inc
stc
hlt
push
xor
jne
sbb
scas
or
hlt
call
jl
mov
pop
or
outsb
loope
sub
ds
xlat
push
fistpll
aaa
cltd
push
shll
dec
cmp
pushf
sbb
cltd
ljmp
insl
mov
loop
out
pusha
sub
je
and
or
scas
sbb
test
cmp
mov
aad
and
negb
pop
add
inc
pop
out
xchg
aas
pop
adc
push
jmp
mov
lods
mov
fxch
insb
rclb
call
cmpsb
sub
insb
mov
sarb
mov
je
mov
mov
jnp
pop
decl
jae
dec
nop
in
jmp
call
cmp
pusha
sbb
and
mov
dec
adc
add
adc
add
sub
lret
lcall
mov
ljmp
loopne
sahf
and
scas
cltd
scas
xchg
outsl
inc
fdivs
push
in
or
lret
bound
pop
pusha
popa
jmp
ja
adc
sub
int3
lret
je
inc
popf
add
out
jbe
sbb
fwait
push
lea
aaa
cmp
xor
sbb
jne
xor
fadd
mov
je
pop
cwtl
push
push
or
cmp
sub
pop
sbb
test
mov
mov
mov
pop
pop
fbstp
insb
clc
mov
inc
cmc
imul
inc
xor
cltd
movsl
or
lods
sub
xchg
fadd
push
dec
jle
pop
ss
add
fstps
test
data16
jmp
insb
imul
push
pop
push
jae
dec
rcrb
inc
cltd
sbb
hlt
or
lret
div
sbb
test
sub
fwait
sbb
leave
lds
adc
cmpsb
sti
xchg
push
pop
ja
stos
xor
dec
mov
jl
sti
std
push
sbb
into
mov
loop
mov
xchg
add
aad
adc
push
jmp
and
ds
mov
xchg
aad
push
and
clc
and
or
xor
jb
sbb
sahf
mov
jge
or
movsb
jae
cmc
push
xor
scas
pop
gs
fsub
loopne
add
int3
adcl
out
jmp
push
enter
clc
in
sub
xlat
sbb
rcrb
out
ja
stc
or
adc
and
mov
test
and
outsb
pop
sbb
xor
mov
mov
push
pusha
scas
cwtl
pop
dec
rol
push
lahf
icebp
cmp
insl
push
int
add
mov
dec
jo
ja
and
lcall
call
out
clc
and
movsl
cmp
and
int
pop
xor
rorl
sbb
xchg
cli
sti
xchg
lds
sbb
inc
push
repz
xchg
lahf
and
inc
outsl
pop
lods
dec
rorl
pop
repz
cmp
push
push
fldl
stc
in
lods
std
ljmp
add
mov
push
xor
jno
scas
mov
jns
jmp
push
test
loope
divb
lahf
xor
sahf
call
jo
rcrb
cld
push
dec
push
pushf
xor
out
pop
loope
call
mov
mov
repz
mov
jo
jnp
inc
add
jle
jecxz
inc
scas
out
xchg
into
mov
mov
movsb
aad
rol
jmp
cmpsb
subl
into
lret
cmp
notl
mov
insl
xchg
ja
mov
lock
inc
inc
movsl
jl
nop
es
ds
and
inc
xchg
out
pusha
in
mov
or
fs
xchg
mov
mov
add
sahf
in
push
sub
icebp
clc
mov
hlt
push
mov
mov
lods
in
push
and
in
nop
nop
push
add
pop
call
into
inc
lods
icebp
stos
add
shrb
test
into
or
push
pop
xor
fcmovbe
and
popl
daa
push
stos
nop
mov
loopne
movsl
stc
sahf
shll
inc
lahf
loopne
je
aam
lahf
sbb
sbb
jge
jecxz
scas
lods
adc
jge
int3
in
les
ja
dec
test
jae
and
xor
sbb
jo
jp
jge
arpl
sub
cli
in
stos
in
es
push
out
adc
inc
stc
imul
shrl
or
or
imul
scas
test
pop
iret
add
jmp
pop
or
nop
mov
dec
add
or
ret
pop
add
mov
sub
lods
inc
push
leave
call
mov
inc
cmc
jae
mov
jle
loopne
mov
xchg
into
xor
ja
add
fsubs
in
pop
das
ss
fbstp
cli
repz
fisttpll
dec
fisubs
add
imul
dec
daa
mov
loopne
xor
mov
ss
adc
adc
in
cltd
sbb
cmpsb
dec
inc
popa
imul
lock
inc
sbb
mov
push
mov
or
fiadds
dec
addb
push
mov
cmp
arpl
sahf
cwtl
je
pushf
sub
or
jno
pop
fcoms
sbb
mov
xchg
ljmp
fcoms
cmp
sub
mov
inc
mov
sahf
js
mov
les
mov
sub
adc
adc
push
xchg
stc
pop
out
dec
jmp
and
cld
xor
fcoml
jbe
push
add
and
sub
mov
ficoml
mov
xor
xor
and
cs
arpl
add
sub
mov
out
inc
test
mov
sub
lods
mov
add
adc
adc
jmp
jmp
add
and
outsl
fs
sbb
pushf
push
shll
shlb
mov
cmc
in
mov
jmp
pusha
roll
mov
cmpsb
jb
adc
xor
dec
in
stc
ljmp
xchg
popa
dec
push
cwtl
jbe
jns
shrl
lea
push
dec
push
test
outsb
hlt
fdivl
sbb
int3
lock
or
jmp
scas
mov
ss
daa
sub
js
ds
push
enter
test
mov
or
inc
loop
fdivrs
fprem
js
popa
push
xchg
cmp
add
jmp
or
loope
aad
pop
xor
int
scas
cmp
cld
mov
les
add
or
aad
mov
call
mov
insl
lds
mov
xlat
mov
adc
pop
adc
pusha
bound
cs
sbb
inc
lret
fcoms
cmpps
sub
pop
movsb
insl
into
inc
out
mov
jnp
jmp
sbb
daa
inc
xlat
nop
inc
and
xchg
call
cmpb
sbb
stos
cmp
sbb
pop
pop
sbb
jo
das
xchg
mov
faddl
dec
add
movsl
push
inc
push
mov
nop
ret
mov
ret
gs
and
aaa
mov
daa
inc
pushf
or
mov
xchg
push
and
imul
adc
dec
inc
adc
movsb
mov
sub
sbb
mov
dec
aas
enter
pop
add
stos
fs
mov
adc
sub
mov
mov
pop
push
inc
push
in
inc
sub
std
xchg
cmpsl
push
cmp
div
mov
test
rol
push
and
leave
out
leave
mov
mov
pop
adc
sub
or
fcompl
jg
in
push
inc
xchg
aaa
call
outsb
sti
pop
mov
sbb
adc
push
inc
pusha
int
outsl
dec
and
popf
repnz
xor
ficompl
outsl
jnp
jmp
dec
repnz
pop
pop
push
push
mov
push
and
ret
cmp
gs
sbb
mov
stc
mov
xchg
shlb
cmp
push
movsl
cmp
adc
mov
inc
out
or
imul
sbb
lret
aam
push
xor
aaa
sbb
lret
call
inc
out
mov
cwtl
inc
adc
jne
pop
out
sahf
mov
push
inc
sub
shll
push
rcrl
dec
mov
pop
mov
jne
shll
daa
adc
js
roll
loope
mov
movsl
xor
aad
outsb
and
shr
loope
rclb
in
cld
pop
jge
xor
aad
jbe
mov
in
dec
sti
es
aaa
adc
jne
mov
aas
sbb
add
mov
enter
adc
adc
add
sbb
aad
test
dec
dec
aas
pusha
fwait
lahf
popa
sbb
xor
dec
mov
test
nop
pop
in
dec
sbb
movb
mov
xchg
add
add
cmp
cmp
inc
xchg
in
dec
xchg
add
cld
cmpsb
cmp
lock
add
push
sarb
arpl
and
mov
and
ljmp
idivb
pop
xor
movsb
xor
lret
popa
xchg
cmp
mov
add
cmp
mov
mov
cmpsl
push
adc
xor
leave
jecxz
dec
ljmp
cmp
ss
pop
cmp
xor
jmp
sub
mov
mov
inc
mov
ja
repz
adc
dec
push
xchg
pusha
cld
cmp
mov
adc
ret
xor
add
mov
xor
adc
icebp
loopne
icebp
sbb
sbb
js
shll
add
and
add
popa
cmp
out
ja
jo
call
sub
rep
in
and
sbb
imul
pop
adc
pop
and
cmp
jecxz
mov
dec
int
fsubs
mov
push
testl
popa
mov
xor
jae
dec
test
mov
popa
bound
mov
test
lods
mov
xchg
lds
ret
add
push
sbb
imul
xchg
jmp
inc
ljmp
cmp
add
cmp
aas
mov
es
pop
cltd
jle
and
jns
sub
sbb
xor
cmpsl
push
lock
mov
mov
aaa
sub
je
mov
or
jno
inc
adc
popa
sbb
mov
push
hlt
mov
nop
pop
add
xchg
or
ds
leave
ret
sbb
out
mov
cltd
cmp
jo
and
cs
or
adc
add
xchg
mov
push
xchg
dec
adc
punpckhdq
or
add
movsb
jno
sbb
test
imul
outsl
in
add
sub
test
jno
test
mov
push
cld
int
sub
cmp
xchg
lock
mov
stos
dec
xor
jge
pop
sbb
xchg
mov
std
call
dec
sti
enter
jmp
stos
inc
jle
and
inc
incb
pop
ds
mov
xor
mov
jge
out
xchg
in
jns
ffreep
jg
mov
dec
pop
sbb
mov
sbb
jge
add
scas
std
push
lds
aad
loope
popa
adc
fsubrp
push
int3
test
scas
fs
cltd
mov
cmp
es
movsb
mov
ror
adc
xor
inc
pop
in
pop
jp
ficomps
ret
xor
lret
pop
insb
sti
adc
fsubrp
test
inc
inc
pop
es
mov
movsl
in
repz
dec
jle
sbb
cmpsb
jne
iret
sub
push
aad
cwtl
addl
outsb
mov
push
outsl
pop
es
bound
ret
outsb
cs
insl
std
and
cmc
cmpsb
out
rcrl
fs
jmp
testl
sub
ja
fs
jb
mov
inc
pushf
add
mov
popf
test
sbb
push
inc
stos
imul
push
mov
cmpsl
je
dec
dec
pop
in
sbb
daa
lods
and
jns
or
sbb
loopne
in
sbb
dec
icebp
sub
cmpsl
loope
xor
js
pusha
dec
mov
add
push
es
add
aaa
outsl
sahf
and
jne
daa
xor
adc
loop
mov
iret
mov
pop
xor
mov
je
push
out
mov
shlb
or
or
adc
icebp
or
sbb
xchg
jae
fmul
push
clc
jbe
pop
lods
ficomps
mov
icebp
movsl
popa
mov
and
mulb
out
jo
mov
lods
add
in
lea
movsb
pop
lret
sub
sbb
and
adc
pop
icebp
add
mov
negl
pop
jo
sbb
add
jae
int
lahf
and
inc
ljmp
and
jg
mov
nop
sbb
adc
mov
pop
add
rclb
sub
xchg
add
std
push
aaa
idivl
push
sub
shll
std
add
shrl
icebp
repnz
and
sti
in
jbe
and
xchg
cmc
rorb
or
jo
and
out
inc
push
pop
push
and
pop
pop
shlb
sbb
dec
test
jbe
dec
sbb
jl
imul
hlt
addl
fs
xchg
pop
std
rorl
loope
cmp
stc
stc
in
inc
mov
aas
ljmp
mov
mov
sbb
js
sub
dec
popa
in
aas
adc
push
xchg
shlb
inc
or
add
movsl
adc
add
inc
sti
push
aaa
clc
adc
rcrl
jne
adc
movsl
adc
in
pop
inc
in
aad
or
jae
sbb
add
mov
pop
or
and
xor
in
mov
gs
mov
mov
add
cltd
xchg
pop
int3
outsb
and
out
pop
aaa
cli
fldl
sbb
and
pusha
pop
rcrl
dec
mov
cmc
int3
outsb
inc
out
add
insl
fs
das
jae
push
jno
jne
jle
lds
jne
and
out
push
fwait
lods
and
push
clc
dec
cld
and
lods
das
add
add
sbb
xchg
mov
into
loopne
ffreep
cld
jo
adc
js
repz
inc
into
cwtl
lods
push
fmulp
lods
jne
lods
nop
call
cwtl
add
shlb
push
adc
add
and
cmp
jae
xchg
int
shl
mov
jns
mov
lods
ret
enter
mov
adc
dec
ja
cltd
and
xor
scas
test
shlb
cmp
divb
ret
dec
gs
fadd
and
cmp
pusha
data16
int
imul
cmp
jecxz
test
das
or
pusha
lds
jecxz,pn
xor
or
or
fldenv
cmp
mov
movsl
cmc
adc
sub
pop
sub
pusha
mov
xchg
loope
sbb
fists
push
add
inc
jp
push
mov
pop
push
les
test
cltd
in
pop
scas
sbb
jge
fsubrs
pusha
cld
fsubrs
ret
sbb
pop
stc
jmp
cwtl
xor
xlat
es
repnz
cmp
mov
xchg
push
ljmp
je
jge
stos
les
dec
imul
in
adc
out
dec
cmp
out
sbb
inc
mov
mov
adc
std
xor
iret
pop
pop
cmp
frstor
xor
pop
cmp
dec
xchg
imul
xchg
and
call
movsl
push
xchg
push
xchg
pop
jb
mov
inc
cs
cmp
or
icebp
adc
xor
dec
std
popf
mov
std
pop
imul
lcall
add
inc
movsb
ja
and
int3
nop
mov
cli
and
test
add
or
imul
loope
nop
pop
loopne
and
mov
int3
cmpsl
add
xor
push
sub
jae
cs
in
cltd
pop
mov
jb
xchg
sbb
jle
sbb
movsl
mov
in
mov
sbb
bound
les
dec
jo
test
jne
int
sub
dec
imul
mov
xchg
xchg
pop
sbb
inc
adc
ja,pn
mov
lret
in
movsb
inc
sub
mov
jmp
mov
lds
aad
jecxz
fwait
mov
aad
sahf
jns
out
scas
push
or
xor
and
cmp
or
adc
mov
out
mov
cltd
lds
stc
ja
sbb
mov
in
sbb
add
in
xorb
lods
jne
jg
loop
in
and
shr
pop
aam
fisttps
daa
hlt
shlb
cmp
push
xchg
icebp
sub
stos
rorl
movsl
fs
mov
pusha
and
adc
aad
sbb
and
or
pop
sahf
fwait
imul
add
sbb
pop
orl
add
xor
mov
add
mov
mov
jnp
push
pushf
pop
cmp
jnp
mov
lcall
mov
rorl
andl
pop
lods
and
test
jmp
fdivs
dec
push
mulb
push
cmp
inc
lret
mov
pop
mov
in
addr16
push
pop
push
jg
push
dec
or
pop
push
ret
cmp
dec
mov
and
pop
ds
pop
inc
mov
lahf
sub
cmpsl
and
cmp
mov
push
cmp
or
cwtl
movsb
dec
and
mov
rcrl
add
cwtl
jg
and
std
std
or
dec
or
xor
and
int3
pushf
xchg
sub
push
aas
add
or
push
cmpsl
or
mulb
imul
ds
xchg
cld
sub
std
dec
dec
lods
gs
lahf
sub
mov
dec
call
cmc
add
xchg
movsb
movsl
cmc
xchg
add
jl
cwtl
dec
aas
add
inc
or
inc
fmull
and
mov
mov
std
aaa
xor
and
lea
dec
cmp
cmp
push
xor
in
int3
test
cmc
and
stc
aad
cmp
push
in
cmp
call
push
sbb
pop
call
pop
outsl
inc
es
mov
xor
pop
es
jb
pop
xor
sub
imul
pusha
sub
add
js
div
xor
and
mov
nop
pusha
cmp
ljmp
mov
jne
out
adc
xor
lcall
stc
test
pop
jle
mov
xchg
repz
cltd
mov
push
mov
inc
lock
les
ds
bound
call
repz
jmp
sbb
fldt
movsb
cmp
dec
jae
inc
cmp
fcmovb
mov
xchg
sbb
sbb
dec
es
cmp
lahf
add
mov
lods
lcall
xchg
and
daa
add
mov
gs
xorl
rolb
push
aad
sbb
cmc
rorl
pop
in
test
stc
lock
push
std
sahf
ljmp
addr16
mov
mov
sar
out
test
xchg
mov
pop
dec
sub
ja
cmpsb
sub
movsl
repz
in
imul
cmpsb
pop
push
test
subb
and
lds
gs
iret
outsl
adc
out
inc
xchg
add
jl
dec
mov
enter
push
xor
sub
popf
jnp
fildl
outsb
pop
icebp
cltd
out
movsb
int
jns
push
xchg
xchg
aad
in
push
movsb
jge
jmp
jnp
into
jb
sub
pusha
sarb
mov
cltd
xlat
pop
daa
mov
out
stc
dec
or
in
pop
stc
inc
push
mov
movsl
cli
fucomp
addr16
adc
fdivr
xchg
lods
repz
push
xor
dec
mov
adc
jae
aaa
lods
vpsadbw
push
inc
stc
fs
or
out
xor
lcall
test
sbb
mov
pop
insl
sub
xor
sbb
xor
imul
clc
inc
xor
les
mov
psubd
movsb
mov
insl
push
fmuls
cmp
js
xchg
sbbl
inc
jns
aam
mov
mov
inc
jae
xchg
adc
fiaddl
test
add
aad
lcall
sahf
dec
pop
add
mov
sub
and
sbbl
jo
insl
push
add
aad
jge
jecxz
adc
add
cmp
cwtl
xchg
and
leave
nop
jge
lea
andb
movsl
pop
gs
xor
aad
add
or
cld
cltd
mov
inc
ljmp
pop
xchg
outsl
ja
nop
cmp
pushf
mov
pop
jl
xor
add
add
and
jle
cmpsl
js
xorl
fcompl
shl
dec
xor
out
lds
and
lock
mov
cmp
and
movb
push
not
and
ret
repnz
push
nop
or
add
test
es
addr16
nop
sub
mov
push
xor
shlb
cmp
fsubl
lods
addr16
sbb
test
daa
clc
dec
arpl
sbbb
cmp
xor
mov
dec
aad
cvtps2pi
gs
mov
pop
jmp
cmp
int
inc
or
pop
pop
in
in
dec
std
sbb
je
push
out
sbb
add
dec
gs
lret
lock
int3
push
sbb
lcall
xor
pop
xlat
lret
pop
xor
dec
enter
gs
push
jae
pop
lds
ret
mov
mov
jg
test
or
sar
add
xchg
daa
and
les
cltd
sbb
sbb
pop
in
aaa
fwait
hlt
add
stos
cmp
aas
xor
ret
or
and
cmp
sbb
cmpsl
ljmp
push
hlt
mov
inc
mov
or
loop
jnp
loope
mov
xor
sti
xor
inc
ret
lahf
and
or
call
xchg
and
xor
push
xchg
mov
mov
hlt
jae
in
dec
dec
lods
in
adc
outsb
clc
jae
adc
fnsave
leave
dec
ljmp
cmp
cmpsl
inc
xor
jg
out
cwtl
mov
pusha
sbb
push
fcomi
pop
stc
sub
add
mov
pop
dec
shlb
mov
call
lods
sbb
cmp
in
call
neg
lock
pop
int3
mov
leave
dec
dec
push
sub
addr16
and
xchg
dec
fldl
and
add
imul
jae
je
inc
in
mov
mov
cwtl
push
adc
mov
in
sahf
testl
loop
jno
andb
out
mov
cld
xchg
fwait
xor
rcrl
add
add
adc
add
cwtl
es
jp
daa
jb
mov
lret
lea
add
aas
or
or
inc
loopne
cwtl
addr16
sub
pop
dec
push
bound
pop
xor
aad
mov
notb
cld
pop
add
in
movsb
dec
inc
cli
addr16
inc
sbb
add
adc
scas
aad
cmp
pop
cmp
dec
mov
jnp
push
or
cmp
mov
repz
sti
loopne
cmp
or
push
or
mov
mov
clc
or
ret
loope
pusha
clc
push
stc
adc
test
in
shl
inc
cltd
xchg
cli
pop
stc
jmp
or
hlt
jle
and
xchg
mov
push
mov
sbb
aaa
pop
or
inc
dec
shlb
hlt
cmpsl
jecxz
js
dec
jbe
add
jae
je
cmp
in
dec
addb
pop
cltd
mov
cmc
ja
nop
pushf
scas
add
sbb
imul
lahf
push
subb
cwtl
inc
cli
cmp
pop
mov
pushf
mov
dec
mov
cmp
loop
dec
insl
loop
xor
bound
pop
sbb
mov
pop
mov
inc
xchg
sbb
lods
and
movsl
cld
mov
and
pop
repnz
int
mov
mov
cld
movsb
push
jmp
and
clc
xchg
cmp
aas
push
cld
xchg
fisubs
imul
push
outsl
push
std
insl
cmp
xor
dec
or
gs
jae
dec
mov
subl
cmpsb
or
jne
and
pop
mov
xchg
rcrl
cli
mov
insl
inc
shrl
cmc
sub
and
and
and
xchg
fsubrp
iret
push
xor
adc
inc
xor
sub
dec
pusha
xor
jno
rolb
pop
sbb
dec
sbb
adc
mov
mov
dec
rcrb
faddl
ja
cmp
sub
mov
add
inc
cld
sub
jmp
fistps
movsl
dec
mov
imul
push
jle
fnstcw
lcall
sbbl
ds
repz
cs
push
ja
xor
data16
inc
jo
insb
pop
xchg
cmp
in
jge
test
cld
xor
and
ljmp
test
or
shl
push
std
cltd
dec
aaa
jnp
add
pop
xor
out
xchg
lea
adc
inc
add
cld
or
aaa
stos
xchg
pop
jge
mov
int3
fdivp
in
push
rol
add
push
sbb
pop
ret
loop
mov
movsb
mov
and
fmuls
xchg
pop
popa
jae
rclb
dec
mov
mov
popa
insl
lea
jae
lea
fadd
mov
out
int
notl
enter
fnsave
mov
push
loop
int3
loopne
ljmp
cmc
sarl
adc
insl
lock
in
addr16
dec
push
push
sub
fs
add
mov
mov
jne
and
jmp
cmpsl
xor
xchg
aaa
popf
div
stc
push
cmp
clc
not
popa
and
clc
in
lret
jb
cltd
push
jecxz
mov
ja
ljmp
in
cltd
xchg
fistpl
jo
pop
jo
sbb
xor
xchg
mov
sub
cmp
and
test
shll
cmpsl
insl
fnstcw
cltd
negb
dec
xlat
test
xchg
sbb
and
mov
push
mov
nop
sbb
dec
add
cld
jge
mov
es
dec
sbb
cltd
je
inc
iret
mov
mov
push
push
rcl
cmp
movsl
xor
pusha
mov
pop
dec
xchg
lea
mov
fwait
std
mov
cld
push
pop
jns
and
hlt
mov
shrl
fwait
or
mov
mov
ficompl
mov
cmc
stc
adc
lds
pop
cmp
rol
dec
negl
add
mov
sahf
xchg
rolb
push
call
lea
mov
popa
and
dec
ja
out
inc
daa
fsts
mov
int3
cmp
mov
dec
imul
test
out
imul
mov
jmp
call
mov
outsl
inc
hlt
es
jmp
shrl
nop
ret
cwtl
loop
pop
mov
xchg
aas
push
mov
pop
push
xlat
dec
jle
pop
mov
nop
jle
popa
cmp
xchg
mov
js
dec
addr16
fdivl
aam
pop
fidivrl
or
std
adc
add
ds
js
xor
rcll
jl
push
jae
cmp
pop
or
push
push
cmp
popa
pop
scas
gs
imul
add
pop
lock
scas
and
pop
inc
sbbb
adc
xor
aad
js
jns
loop
cld
inc
sti
or
enter
sbb
pop
cwtl
sub
jmp
pop
inc
xchg
lds
ds
cmp
ljmp
shrl
lods
sarl
adc
fs
cli
push
nop
movsb
dec
dec
xor
mov
fnstenv
aam
cwtl
mov
loope
es
or
pop
xchg
jecxz
cwtl
frstor
notb
mov
push
pusha
rol
xchg
loope
cmpsb
add
or
std
and
sahf
inc
shl
mov
js
dec
mov
push
mov
adc
inc
sahf
and
jnp
dec
pop
xchg
lcall
pushf
jg
add
fstl
push
xor
bound
fucomi
add
roll
xlat
sub
rcr
popa
xor
ljmp
dec
or
sub
js
mov
sub
and
and
inc
push
mov
jmp
ja
or
mov
lea
sbb
cmc
jmp
mov
and
inc
jge
dec
cwtl
jge
mov
pop
mov
jge
sbb
fsts
jae
scas
lds
test
inc
rcr
adc
bound
daa
out
ret
adc
push
lret
mov
xchg
aas
or
pushf
and
and
jp
adc
sbb
fsubl
jl
add
xor
push
mov
inc
ffree
mov
or
repz
fistpl
mov
cmpsb
fisubl
out
or
ja
loop
scas
pop
cli
movsl
mov
and
ds
cltd
push
jg
inc
mov
xor
daa
xchg
and
xchg
aad
inc
mov
cmpsl
dec
jb
stos
push
in
and
cmp
sar
mov
jmp
arpl
hlt
xor
movsl
mov
push
add
push
push
rcrl
jae
inc
dec
or
movsl
test
mov
pop
fisttps
sub
pop
jle
shll
mov
mov
out
inc
cld
lock
ds
xchg
int
push
jo
mov
in
dec
add
sarl
xchg
or
ss
xchg
adc
jae
push
sub
pusha
ljmp
cmp
shlb
jno
cmc
mov
add
adc
and
inc
add
add
stos
dec
andb
mov
dec
cmp
dec
mov
push
dec
scas
and
aas
out
jno
add
loope
hlt
cwtl
jae
xchg
gs
aas
jl
mov
fldl2t
jae
push
push
jne
jle
shr
sub
push
daa
push
or
in
clc
xchg
mov
xor
pop
mov
jo
dec
mov
push
shlb
fdivrs
pop
fwait
out
ficomps
pop
xchg
and
pusha
add
mov
out
jl
cmp
int
or
mov
push
lret
pop
lcall
pop
and
insl
xor
rorl
cmp
in
movsl
push
shl
cmp
xchg
pop
loope
push
js
fmuls
sti
add
lods
fsubl
xlat
ret
sbb
sbb
andb
jo
push
mov
lock
fmul
enter
js
and
sbb
mov
lret
ret
jns
sbb
lods
aas
jl
shlb
jae
add
adc
icebp
jns
add
pop
in
out
adc
out
jg
cmpsb
jle
loopne
lcall
xor
ret
lahf
jle
in
movsl
movsb
push
jl
fs
dec
jecxz
pop
negl
in
out
mov
cmp
dec
inc
fwait
sub
or
inc
out
in
or
testb
jbe
test
pop
pop
pushf
add
push
cmp
mov
mov
xor
xor
out
push
pop
add
or
xchg
gs
out
sbb
in
arpl
adc
push
faddl
xor
icebp
adc
mov
xchg
mov
mov
and
xor
loop
sub
mov
in
stc
pusha
adc
push
aaa
cmp
push
push
cwtl
mov
sbb
sbb
xchg
add
mov
or
mov
xor
call
mov
rclb
push
aas
repz
and
jnp
arpl
ss
mov
push
pop
mov
lret
fisubl
inc
pushf
add
and
pop
aaa
jmp
mov
out
aaa
push
sub
gs
ficompl
jae
pop
xor
and
popf
or
ret
inc
inc
aaa
int3
xchg
jle
mov
jbe
movsl
sbb
adc
dec
dec
je
mov
pusha
jl
and
roll
sti
rcrl
fidivrs
clc
mov
mov
dec
adc
mov
cmp
jecxz
add
xchg
clc
sub
js
ret
add
xor
cmp
sbb
mov
pop
jbe
adc
mov
frstor
xchg
sub
mov
lret
xor
xor
or
repz
cmp
outsl
in
pop
adc
les
and
loop
test
movsl
sbb
pusha
pop
pop
sbb
add
aas
and
fsubs
out
movsb
fsubs
mov
ss
fnsave
mov
inc
sbb
push
les
int
lret
jae
clc
and
jne
push
call
dec
daa
xor
test
push
lahf
cmp
in
ret
es
mov
gs
push
cmc
imul
lret
std
inc
cmc
orl
cmp
or
sbb
xchg
jne
cmpsl
mov
cmp
cmp
out
movsl
mov
arpl
sub
mov
mov
and
movl
subb
jle
sti
sub
in
pop
xor
jecxz
mov
jmp
mov
lahf
xchg
jge,pn
aam
fwait
repnz
sarl
lahf
or
mov
mov
gs
mov
jmp
inc
repnz
sub
jns
mov
out
mov
mov
push
out
pop
repz
jne
mov
dec
and
out
add
cmc
fcomps
pop
inc
dec
add
mov
xor
das
aam
mov
adc
sbb
mov
imul
addb
ret
cmp
icebp
cmp
and
nop
enter
sub
das
sub
and
pop
popa
loopne
pop
lods
dec
pop
adc
push
sbb
xchg
fs
cmpsl
lcall
mov
das
push
lods
test
cmp
pop
test
pop
in
jae
repz
adc
ljmp
dec
pop
dec
sbb
lret
fstp
sbbb
add
cmp
negb
fildll
or
mov
sub
jne
ret
fsubs
sar
mov
mov
ss
mov
cltd
jecxz
imul
sbb
xchg
pusha
xor
mov
lock
mov
or
sbb
vpsllw
flds
movsl
mov
mov
in
std
xchg
mov
cltd
mov
jbe
fldcw
push
test
mov
in
dec
jmp
call
add
pop
sbb
pmaddwd
cmc
cmp
in
in
popa
adc
str
int3
test
nop
push
gs
push
sti
test
add
xchg
mov
dec
call
cmp
and
and
call
xchg
lahf
pop
lock
nop
pop
iret
cli
test
and
notl
pop
and
adc
dec
and
fbld
loop
into
xchg
daa
lahf
in
and
mov
outsl
lods
imul
imul
push
gs
mov
sub
mov
mov
cli
jecxz
jmp
fwait
mov
mov
data16
out
int3
dec
mov
fwait
movsl
dec
out
movsl
inc
mov
lds
push
xchg
pop
push
sub
xchg
mov
daa
mov
aas
fistps
scas
xchg
xchg
lahf
xor
cld
xchg
shll
outsb
cli
in
jb
bound
movsl
push
cmp
mov
jne
mov
dec
adc
enter
loopne
cmc
jbe
xchg
cmpsl
mov
add
and
ja
ds
and
cmpsl
cmpsb
cld
lcall
jmp
repnz
fsts
jae
into
dec
data16
mov
dec
lods
sub
in
dec
xchg
or
sbb
subl
das
inc
jge
les
xor
dec
fs
sbb
inc
cwtl
dec
sub
pop
cmp
add
inc
divb
xor
lret
xor
add
cmp
mov
push
out
outsb
les
fcomps
shll
inc
push
pushf
sub
nop
jo
ret
or
and
push
es
xchg
sbb
es
mov
mov
mov
movntps
subl
jno
pop
rep
cmc
push
sbb
jno
sub
sbb
xchg
cmp
xchg
dec
scas
mov
insl
xor
jns
insl
adc
gs
or
jno
int
sub
movsl
sbb
loopne
popa
jl
and
lock
iret
xchg
mov
inc
mov
dec
inc
add
xor
mov
inc
cwtl
sbb
lahf
mov
repz
xor
xchg
shll
movhps
jmp
cmp
outsl
mov
hlt
and
movsl
adcl
and
fcoms
lahf
xlat
mull
xor
cmp
jne
adc
fbld
mov
add
frstor
mov
mov
pop
inc
fsubrl
daa
test
inc
fxch
in
aad
mov
xlat
adcl
cmpsl
xchg
test
xchg
std
or
inc
ss
add
adc
and
clc
cltd
mov
ljmp
orl
xor
pushf
test
push
add
push
test
add
xchg
cmpsb
xlat
test
push
pusha
ret
stc
pslld
stc
and
enter
push
popf
imul
mov
ja
stc
and
sbb
xor
pop
or
fstpl
add
jo
add
leave
mov
push
add
call
adc
cmp
inc
and
ss
jl
dec
add
push
and
mov
jp
ret
xor
fisttps
or
push
lods
sbb
rolb
inc
dec
mov
in
pusha
nop
ljmp
idivb
pop
push
dec
sbb
sbb
out
push
cwtl
sub
sub
cli
xor
loope
mov
jbe
cmp
xchg
push
out
push
mov
loope
xchg
push
mov
sbb
fmulp
rol
push
shl
cwtl
mov
sub
push
or
sbbl
ds
add
call
ja
mov
sbb
sar
pop
aas
fbld
mov
decl
jne
inc
outsl
push
pop
fimuls
lea
lds
mov
movsb
xchg
mov
mov
out
dec
mov
popf
cmc
or
inc
mov
mov
push
inc
sti
cmp
cmpsb
pop
imul
in
lcall
dec
xchg
ficompl
dec
inc
push
dec
in
sbb
sub
xor
mov
add
insb
inc
loopne
push
test
and
lods
adc
stos
or
int3
inc
sub
in
mov
out
xchg
cmpl
movsb
ja
insb
pushf
inc
sbb
sub
add
repnz
stos
add
pop
push
mov
cmpsb
jae
daa
and
xchg
mov
in
imul
call
insl
pop
je
pusha
mul
mov
pop
mov
cld
and
inc
and
pushf
and
jns
jmp
or
cmc
pop
push
daa
iret
in
pop
cmp
mov
push
test
enter
imul
inc
sub
push
pop
xlat
jg
pop
and
pop
push
test
or
add
and
push
dec
xchg
or
and
dec
cmpsl
mov
scas
aas
inc
aaa
sarl
inc
fwait
cmc
sub
mov
jno
add
mov
std
xchg
fldenv
fcomip
icebp
mov
ja
cmp
aaa
sarl
adc
xor
sbb
adc
out
cld
cwtl
shll
cmp
and
push
ja
mov
cmp
int3
sbb
inc
in
xchg
add
or
xor
aam
mull
mov
inc
jne
pop
and
sti
push
ljmp
inc
hlt
mov
add
and
loop
imul
jge
adc
sub
aad
pop
fs
js
push
int
pop
roll
and
fsubl
xchg
pop
nop
out
popf
mov
pop
jp
std
cmp
in
es
shrl
loopne
sbb
movsl
pop
inc
ljmp
push
jmp
xor
cltd
push
pop
cli
mov
popf
mov
stc
pusha
iret
out
mov
pop
stc
ljmp
jecxz
cmc
outsb
lds
xor
popf
cmc
enter
add
pop
popa
mov
push
dec
out
pop
stos
outsl
andl
and
pusha
and
pop
mov
pushf
and
inc
mov
insl
sub
add
sti
lahf
jb
dec
cmpsl
das
cmp
add
jb
dec
push
cmp
imul
mov
aas
jmp
adc
pop
add
cmc
lahf
cld
imul
xchg
bound
or
add
dec
mov
sub
jmp
sbb
inc
jmp
jmp
xchg
sti
mov
cltd
mov
sub
mov
or
inc
jnp
ror
repnz
and
push
imul
mov
movsl
out
rcl
or
cmpsl
test
cmp
xchg
mov
push
andb
call
aam
or
stos
sbb
push
xchg
rol
test
sbb
aaa
xor
fisubs
out
push
xor
mov
cmp
hlt
scas
and
les
movb
pop
dec
sbb
repnz
imul
imul
cld
dec
mov
pop
dec
inc
subps
push
das
das
inc
loope
sbb
push
scas
push
and
mov
dec
xor
das
fmul
push
or
es
cltd
mov
fst
cld
and
flds
call
enter
aaa
mov
daa
add
gs
fldcw
inc
dec
lock
and
add
sbbl
cmp
loope
mov
cmp
add
push
sbb
fdivl
adc
inc
lcall
out
adc
in
inc
movl
pop
lds
xchg
push
sti
xchg
jne
push
iret
xorl
push
in
orb
mov
xchg
lds
inc
inc
out
mov
and
or
push
or
fwait
maskmovq
es
xor
xchg
mov
xchg
mov
mov
adc
dec
sbb
scas
jbe
sbb
jmp
mov
mov
popf
mov
jo
sahf
movsb
pop
fwait
insl
test
xchg
push
adc
sbb
mov
lahf
movsl
xorl
mov
imulb
or
inc
pop
jb
insb
push
loop
xchg
add
ss
jno
lahf
push
dec
mov
rolb
leave
inc
and
add
mov
in
push
rcrb
xor
adc
pop
fld
repz
sub
cmp
arpl
mov
jge
repz
and
lahf
mov
jno
dec
xchg
jge
enter
lock
aam
imul
jmp
add
ss
push
fs
ja
je
inc
add
add
and
outsb
add
or
test
insl
lahf
mov
xchg
add
rcll
outsb
push
adc
pop
and
iret
in
adc
mov
pop
es
add
pop
cld
mov
push
pop
and
lock
xor
mov
sbb
movsb
lret
hlt
sub
push
out
adc
or
mov
cltd
je
or
les
push
push
out
aad
or
cmp
loopne
mov
push
add
xor
jne
cmp
int
lods
inc
ret
ja
pop
xor
xchg
cwtl
pushf
xchg
and
cmp
add
cltd
push
lock
mov
fwait
mov
aaa
stos
lcall
addb
popa
lahf
push
dec
data16
js
mov
mov
sbb
in
loopne
add
repnz
pop
popf
fcom
mov
sbb
sbb
jecxz
movsb
xor
jg
pusha
xor
aad
add
es
mov
add
push
mov
xor
pop
insl
out
out
es
pushl
and
inc
jle
mov
jb
ja
ds
std
adc
inc
push
add
xchg
lods
cmp
call
mov
add
sbb
mov
adc
cmp
or
clc
xor
fwait
adc
dec
cld
sub
addr16
cmp
pop
and
xor
xchg
and
dec
in
out
fmull
pop
sub
cwtl
pop
sbb
cmp
aaa
ja
xchg
fists
jae
out
sbb
mov
or
and
jl
hlt
loop
popl
cltd
and
mov
jnp
mov
mov
inc
pusha
std
mov
xchg
cmp
subl
fwait
jg
popa
adc
add
out
repz
cmp
jae
call
cltd
movsl
cld
dec
add
mov
or
xor
movsl
add
ret
pop
adc
repz
fisubrl
cmp
popf
into
fbld
iret
shll
cltd
xor
shlb
insl
cs
cmc
adc
adc
insb
xor
dec
scas
mov
add
ja,pt
inc
push
add
sbb
aaa
xor
fsubl
cmc
push
ret
lods
mov
call
subb
sbb
cltd
mov
xor
push
ffree
mov
add
mov
mov
mov
sbb
pop
mov
in
test
inc
and
fistps
mov
xor
mov
sub
gs
sbb
push
mov
mov
xor
inc
inc
dec
orb
lret
or
imul
sbb
cmp
iret
jecxz
mov
out
test
cmp
hlt
and
movsl
aas
jbe
push
addb
pushl
xor
addr16
in
mov
xchg
lret
jmp
movsl
movsl
nop
inc
aaa
int3
lods
xor
ret
sub
xor
and
ljmp
movsl
das
and
cmc
fcomps
pop
lock
xchg
mov
xor
inc
push
lds
or
repz
push
jecxz
lds
xchg
dec
jbe
jecxz
out
pop
mov
hlt
push
pop
sbb
mov
cltd
fbld
pushf
mov
xor
push
add
xchg
cmp
inc
push
cltd
movsl
out
lahf
mov
mov
lahf
divl
adc
jecxz
cld
das
out
or
pop
xchg
push
jmp
or
sub
jbe
lock
ret
or
xchg
sahf
inc
sbb
dec
sub
in
sbb
negb
mov
inc
adc
jno
negb
popf
popa
jno
sarl
jmp
aas
imul
int3
push
jno
ds
push
adc
mov
push
ljmp
out
sub
sub
mov
mov
loop
into
push
ljmp
jmp
adc
pop
jns
adc
or
lahf
push
push
in
outsl
xor
jg
rorb
sarb
and
test
pop
lea
pop
leave
test
sbb
xchg
loop
pusha
pop
lods
push
add
iret
push
out
popf
pusha
push
int3
xlat
mov
and
mov
and
sahf
repz
ljmp
andb
in
call
inc
and
mov
inc
jle
test
lahf
add
and
mov
inc
jne
push
repz
sbb
aaa
jp
pop
in
js
idivl
and
cmp
lds
lcall
dec
dec
lock
mov
popf
in
fcoml
rol
je
push
lods
mov
jge
stc
ja
inc
xor
nop
ret
lcall
pop
test
push
int3
int3
jp
icebp
lret
lods
add
icebp
jp
nop
cmc
and
push
jae
pusha
inc
scas
imul
lds
sar
xlat
cmp
ret
call
fldenv
imul
push
cwtl
jp
mov
xor
add
cld
and
jne
adc
add
insl
push
dec
sbb
push
cmp
in
adc
es
dec
fadd
cli
ds
dec
out
mov
cwtl
es
std
sub
sub
adc
xor
fldenv
rorb
and
dec
push
pop
xor
and
ljmp
cltd
mov
fidivrs
mov
inc
and
out
scas
xchg
xor
push
cld
in
push
scas
sti
and
call
pop
mov
dec
sub
sub
ja
gs
fsubrs
rcll
gs
popf
and
mov
cmp
je
fistpl
mov
jne
movsb
in
in
std
mov
pusha
cmp
int
ljmp
stc
sbb
stos
jae
mov
pop
mov
mov
or
stc
adc
or
fisubrs
aas
negl
lcall
xchg
sti
fs
cmpsb
cmc
mov
shrl
sub
loopne
rcl
std
dec
call
cltd
mov
cmpsl
cltd
or
rcrb
cmp
cmp
mov
sbb
out
lret
inc
cmp
add
cmp
xchg
fst
leave
outsl
mov
push
sbb
push
mov
les
fnstenv
aam
lods
jbe
divl
dec
scas
stc
int3
in
out
push
or
mov
pop
dec
int
popa
jle
lds
push
jno
xor
call
mov
jae
cmp
cmpsb
and
ss
add
div
xchg
fstl
pop
sbb
enter
testb
lock
push
es
mov
push
test
sub
faddl
jge
and
scas
mov
mov
es
fsts
lret
mov
cmp
mov
pop
or
dec
repz
test
adc
cmp
pop
inc
inc
xlat
in
xor
subb
mov
ffreep
std
or
add
scas
insl
sbb
aaa
ret
cmp
int3
shll
lret
inc
cwtl
mov
push
jp
rorl
iret
test
jp
js
cmp
jecxz
das
lahf
xor
ds
dec
adc
xor
cmp
mov
jmp
jp
bnd
cli
cmp
mov
jae
xlat
outsl
scas
stos
inc
inc
sbb
out
or
sub
pop
sahf
loop
adc
test
push
es
jb
ss
sbb
mov
cmc
jo
xor
psrld
and
lock
mov
cmpsb
push
pop
jp
jmp
inc
pusha
push
add
in
ljmp
daa
and
or
sbb
or
jmp
lds
in
in
xor
adc
push
mov
jle
mov
shlb
sti
jmp
or
pusha
addr16
das
mov
int3
scas
jmp
adc
pop
sbb
into
or
push
lahf
push
dec
adc
imul
xchg
xchg
cmp
sbbb
xchg
pop
jns
nop
aaa
lock
je
ljmp
icebp
mov
ljmp
mov
and
inc
xchg
mov
and
mov
imul
in
ds
xchg
or
jmp
mov
xor
dec
xor
aaa
or
jmp
push
sub
jl
shlb
push
das
cs
call
cmp
and
jmp
adc
inc
pop
mov
sub
mov
push
hlt
aam
xchg
cmp
repz
in
pop
xchg
mov
fstps
xchg
inc
mov
and
mov
adc
shrl
or
scas
lea
in
cmpl
sti
ljmpw
fdivrs
test
push
and
test
ds
ss
into
int3
dec
mov
fucom
mov
out
push
sbb
xchg
mov
out
and
cmp
inc
add
push
cmp
iret
xchg
je
aas
nop
cmc
insl
fisubs
cltd
into
std
dec
lcall
dec
in
movsl
push
push
jle
out
mov
adc
inc
or
in
add
enter
aad
dec
mov
test
push
ja
outsl
jp
add
leave
xlat
out
stc
loope
sbb
cmp
inc
adc
call
dec
jecxz
dec
call
aad
mov
int
add
dec
cmc
and
and
and
dec
mov
rolb
frstor
sbb
fwait
cld
mov
pop
dec
jmp
outsl
push
fnstsw
std
sub
aad
ficomps
mov
insl
in
add
rdrand
adc
mov
push
jae
in
adc
test
inc
repz
aas
jb
js
xor
sbb
and
int
dec
insl
adc
adc
mov
nop
fs
and
cmp
repz
inc
adc
push
add
int3
xlat
and
pop
orl
mov
imul
and
test
testl
pop
cli
pop
cmpb
cmp
ficoml
jge
cwtl
inc
and
adcl
loopne
fcmovnu
call
push
sbb
sbb
jl
jecxz
dec
enter
sub
call
divb
pop
incl
jns
notl
dec
cmc
mov
xor
movsb
adc
pop
fmull
sub
iret
push
adc
movsl
outsb
outsl
nop
ljmp
add
inc
rcll
and
pop
ret
xorb
jbe
mov
mov
cwtl
adc
out
std
inc
and
orl
sub
xor
jns
mov
and
repz
xchg
mov
cmpsb
outsl
cld
notb
pop
shrl
fstpl
fistps
adc
dec
js
cld
or
lea
popf
lds
or
inc
and
enter
divb
jno
pmullw
mov
iret
add
mov
jmp
scas
and
pop
mov
or
loopne
pop
jp
mov
push
and
jg
jmp
addr16
inc
dec
test
lods
in
call
pop
push
add
and
pop
sbbl
call
cmpsl
pop
ljmp
xchg
dec
rorb
adc
push
rol
jge
shl
sahf
mov
pop
stc
dec
push
insb
push
sbb
hlt
stos
dec
and
xor
ja
mov
sub
imul
mov
jnp
pushf
test
inc
ljmp
cs
pop
push
push
xor
add
mov
in
mov
std
cmp
idiv
mov
lock
dec
out
rorb
outsb
add
mov
mov
in
cmpsl
or
cmc
bound
mov
push
outsb
cld
sti
clc
call
imull
mov
shll
lahf
in
in
stc
push
mov
arpl
adc
sub
mov
aaa
pop
cmp
jecxz
mov
movsb
mov
loope
in
push
mov
mov
fldt
mov
loope
std
notl
je
icebp
sub
stc
sbb
or
dec
mov
add
mov
push
jmp
jecxz
movsl
jle
jmp
pop
enter
rclb
mov
ficoml
jno
push
jb
inc
loopne
scas
pop
std
les
add
andl
lds
into
dec
mov
insl
lds
cmpsl
aad
scas
jmp
lret
and
xor
cmp
mov
cmc
mov
in
inc
jo
mov
and
adc
push
out
jl
into
ja
stc
stos
movsl
test
loopne
or
mov
mov
out
push
scas
std
xchg
insl
cmp
mov
cmp
fwait
movsb
rclb
gs
dec
loope
push
jl
pop
xor
movsl
ror
and
ss
pop
aaa
jmp
divb
aad
mov
bound
stc
mov
cmp
out
mov
lret
enter
add
cbtw
fidivrs
or
add
mov
stc
xchg
test
lods
inc
pop
lds
dec
jl
and
nop
xor
push
movsl
jnp
and
and
flds
test
mov
fdivl
push
mov
inc
roll
add
in
gs
inc
pop
iret
sub
pop
adc
fwait
push
in
cmp
dec
daa
and
mov
jle
jmp
gs
and
cltd
aad
and
push
es
shll
in
and
roll
loope
lfs
das
jmp
adc
and
sbb
mov
add
pop
scas
in
dec
jns
mov
lock
xchg
add
pop
fimuls
stos
fs
cmp
xor
cmpl
pop
sbb
lods
sub
dec
sbb
cmpsb
and
popf
and
cmp
cltd
fdivrp
pop
ljmp
mov
dec
and
into
rorl
mov
aad
jmp
pop
xchg
sbb
icebp
xor
mov
ja
push
pop
sbb
dec
jnp
push
repz
push
in
sbb
sbb
lret
pop
push
rclb
enter
mov
mov
inc
and
clc
pop
insw
mov
pushl
and
mov
add
sbb
stc
inc
add
xchg
jge
mov
inc
pop
out
ja
mov
xchg
loopne
std
pusha
push
test
add
loop
fs
jl
push
xorl
lret
fstps
shr
lds
xor
mov
test
mov
push
cwtl
inc
movsl
xchg
jb
push
iret
inc
lret
ds
std
jge
jo
cmc
pop
aaa
lods
mov
clc
inc
or
pop
cltd
jg
stos
cwtl
rolb
imul
nop
xor
sbb
imul
pop
repz
mov
jle
and
pop
inc
pop
jne
mov
lcall
lea
das
clc
sub
test
pop
inc
add
sub
xchg
push
pop
out
cmp
cmp
mov
and
repnz
adc
mov
insb
dec
sbb
gs
mov
dec
dec
jl
jp
push
add
lods
in
stc
cmp
mov
insl
jno
mov
fmulp
jge
sbb
xchg
mov
adc
jge
call
mov
push
shll
insl
ja
mov
push
sahf
enter
sbb
or
xor
mov
adc
cwtl
xor
xorb
cs
jl
popf
adc
int3
xchg
cmp
ljmp
imul
ja
pop
out
mov
and
sbb
fidivl
pop
stc
stc
cmp
aam
and
imul
jp
cmpsl
or
cmpsl
aaa
out
push
ja
sahf
mov
inc
mov
add
std
push
push
enter
pusha
int3
and
mov
jae
stc
std
cmpsl
mulb
dec
in
add
and
lods
imul
not
in
test
mov
and
test
lret
and
mov
in
mov
pop
fbld
rol
dec
lock
rcrl
add
mov
cmpsl
xor
cmp
sti
stc
sbb
and
andb
mov
fisttps
daa
cld
add
std
and
mov
sub
cmpsb
outsl
decl
mov
in
ja
sbb
icebp
jne
cwtl
inc
loope
lahf
shlb
dec
sub
pop
inc
mov
mov
rorb
fs
sbb
jmp
jne
in
imulb
int3
inc
scas
dec
adc
sbb
test
lret
sub
popf
xchg
stc
lds
pop
pop
and
xor
scas
outsb
push
in
sbb
and
lret
aaa
mov
or
sahf
mov
mov
sbb
push
add
lret
push
xor
cmpl
call
sbb
ret
xchg
and
std
gs
dec
push
lds
in
push
mov
das
rclb
and
add
cwtl
jns
xor
pop
push
lods
add
scas
pop
imul
add
imul
rorl
icebp
ja
out
cmp
mov
loop
sahf
out
jns
pop
ljmp
cmp
les
push
test
inc
stos
pop
cmp
fsubl
mov
mov
jb
repnz
mov
pop
testb
xor
pushf
add
ffree
hlt
in
lds
jne
sub
mov
ds
bound
lret
sbb
int3
mov
dec
dec
sub
repnz
sub
jg
dec
mov
int
in
pop
or
sbb
loopne
notl
jae
sbb
sti
in
ds
sbb
or
push
sub
and
or
jne
lods
cmpsl
jnp
adc
test
in
fwait
imul
inc
mov
in
jno
jl
xchg
stos
scas
jmp
pop
imul
mov
fs
jbe
mov
pop
jle
sbb
cmp
pop
dec
and
push
shlb
pop
fwait
mov
mov
arpl
mov
std
and
int
inc
in
dec
adc
and
cltd
or
cli
mov
jg
and
scas
test
loop
mov
in
daa
gs
sbb
dec
xchg
dec
xor
aas
and
je
mov
cltd
repnz
je
inc
or
addr16
add
or
sub
cltd
es
xor
pushf
into
pop
pop
mov
sti
mov
xchg
in
sub
add
pop
mov
sbb
push
test
mov
xor
mov
mov
add
cmc
or
dec
adc
scas
adc
pop
fsubrl
insl
adc
adc
adc
dec
push
jnp
jb
mov
adc
leave
xchg
sbb
sarb
movsl
sbb
scas
mov
xchg
and
popf
leave
movl
fistpll
sahf
dec
dec
lods
mov
aad
inc
xor
adc
cmp
repnz
pusha
je
xchg
cltd
out
xchg
pusha
lret
jmp
shl
sbb
nop
cwtl
out
push
cltd
lods
dec
sbb
shlb
inc
enter
cmp
sub
ds
jne
add
or
fidivrl
and
fiadds
mov
jbe
fbld
fwait
xchg
insb
repz
mov
ret
pop
mov
cmp
xadd
jge
lods
mov
in
sub
icebp
cmp
ljmp
mov
sub
sbb
mov
daa
mov
add
sbb
xchg
clc
push
arpl
mov
sbb
or
jns
inc
lods
movsl
fnsave
xchg
stos
cmp
enter
pop
push
push
mov
xor
mov
cmp
jbe
pop
out
mov
pop
fldt
adc
or
inc
test
push
push
mov
cwtl
or
ljmp
out
xchg
and
out
imul
int3
pop
fmull
xchg
sbb
popf
xor
xor
lcall
or
adc
call
ja
sbb
mov
mov
sub
jge
cmp
push
pop
jle
outsb
mov
aas
and
inc
enter
dec
test
repnz
mov
xor
ja
icebp
adc
adc
sub
outsl
lcall
movsl
nop
in
jge
xorb
ja
dec
movsl
jo
pxor
adc
add
pop
push
popf
jl
repnz
js
pop
ror
sub
sub
pop
mov
add
and
stc
test
fwait
mov
das
hlt
mov
dec
cld
jl
or
ljmp
test
shll
ds
jae
je
add
pop
cmp
lods
movsb
dec
jecxz
pop
jbe
insl
sbb
push
adc
add
loope
xor
rcll
mov
pop
push
push
sahf
mov
dec
jo
mov
jmp
push
rorl
mov
call
pop
clc
shrb
cli
sbb
lret
push
test
mov
jg
movsl
std
call
pop
rorl
icebp
clc
add
addr16
cmp
cmpsb
xchg
jns
mov
in
xor
or
inc
cmpsl
pop
mulb
add
pushf
mov
fnstcw
fiaddl
sbb
cmpsb
sbb
and
inc
pop
jbe
xchg
loop
mov
and
in
cs
int3
push
push
or
js
mov
adc
pop
lds
pop
imul
inc
outsb
pop
imul
xchg
xor
mov
js
jae
inc
xchg
cmpsb
push
repz
movsb
fdivr
gs
mov
push
pushl
and
xchg
out
and
push
jge
fstl
jle
mov
and
mov
and
fistpll
xchg
inc
fistpl
mov
and
mov
icebp
pusha
stc
jno
mov
ret
pop
push
cmp
dec
mov
adc
sti
lods
test
xchg
jg
xchg
dec
xchg
cld
lock
jl
bnd
and
push
pop
int3
les
jmp
and
pop
fsubrl
inc
orb
adc
cmp
xchg
inc
lock
or
lcall
pop
std
test
std
out
int3
mov
xchg
push
sub
jmp
dec
rorl
addr16
aam
xor
cmp
jl
mov
add
dec
in
jmp
inc
or
inc
mov
insb
xchg
fsubl
dec
and
sbb
cli
subl
sub
mov
cmp
ja
imul
lret
int3
hlt
or
divl
dec
lcall
and
scas
cmp
inc
std
ja
shlb
dec
leave
ds
push
nop
mov
call
pop
mov
out
cltd
enter
cmpsb
dec
adcb
lret
enter
cmp
fildl
or
xor
in
adc
mov
fldt
adc
je
cmp
or
pop
and
and
jnp
dec
popa
mov
lea
jle
call
pop
repnz
imul
add
sub
pop
data16
insb
hlt
lcall
in
pop
dec
mov
cmc
cs
ds
xor
push
jns
pop
mov
pop
leave
mov
pop
inc
lcall
dec
mov
add
push
data16
aam
xchg
dec
daa
verr
sahf
dec
das
add
jbe
loope
movsl
out
lret
and
int
orb
lds
mov
push
incb
pop
scas
js
lds
les
ret
inc
push
and
pop
xchg
add
or
inc
out
fsubs
pop
mov
mov
or
aam
pop
lret
and
outsl
xor
cltd
jp
cmp
lahf
dec
loopne
adc
mov
or
out
das
shll
cmp
pop
inc
imul
sbb
and
add
cmp
arpl
sbb
add
outsb
mov
in
and
movsl
lret
dec
xchg
lahf
jl
mov
pusha
gs
fadds
decl
jae
or
inc
adc
pop
mov
inc
mov
adc
popa
ja
shrl
inc
cld
mov
inc
in
xchg
sbb
pop
push
imul
cmp
inc
iret
test
cltd
mov
cmp
inc
es
fnstcw
push
add
ja
xor
adc
xchg
out
aad
xchg
fldl
jg
or
das
and
psrld
emms
or
sub
arpl
jl
repz
in
xor
int3
nop
mov
fs
ljmp
movsl
lods
sbb
mov
inc
mov
loopne
stc
and
dec
lret
fsubr
outsl
push
sbb
ss
loope
insl
sub
inc
pusha
popf
test
cmc
jne
stos
pop
inc
mov
out
ljmp
and
adc
lret
test
lret
pop
xchg
icebp
sti
cltd
ret
cmpsb
mov
cmp
xchg
ljmp
lret
jecxz
clc
pop
insb
scas
cmpsb
sbb
ljmp
fimull
mov
push
ret
sbb
mov
inc
ret
sbb
daa
add
std
cmp
push
sbb
arpl
pop
lds
jmp
pushf
and
cld
xor
pop
lods
cmc
cmp
sbb
adc
gs
add
push
cltd
in
inc
jmp
adc
movsb
xor
outsl
icebp
cmp
aam
inc
dec
sub
arpl
les
rorb
gs
fbstp
js
and
je
bound
aam
cmp
leave
cwtl
mov
and
mov
pop
pop
shll
les
jae
repz
push
mov
arpl
sti
and
je
mov
int
les
insl
loope
aad
cmc
shl
lcall
testb
mov
out
test
xchg
or
nop
lods
adc
mov
das
xor
loope
jle
sbb
int3
fs
xchg
aad
push
mov
sub
cmpsl
push
adc
stc
mov
clc
jmp
mov
js
push
and
in
in
mov
xchg
mov
ljmp
add
rolb
or
jg
arpl
insb
dec
adc
in
dec
adc
cwtl
fiadds
cltd
cmp
ficoms
in
out
jbe
ds
imul
add
cwtl
pop
in
aad
pop
sahf
fistl
and
mov
imul
push
subb
sub
das
inc
lahf
int
movsl
add
iret
out
repnz
gs
rorl
and
pop
std
adc
data16
lcall
pop
cmpsb
mov
sbb
push
add
insl
add
pop
popa
lds
add
je
xor
addb
xchg
mov
mov
lcall
jge
pop
enter
sbb
xor
xchg
inc
inc
mov
jge
in
adc
adc
jns
jae
adc
cmp
jg
inc
js
flds
ret
faddl
jp
mov
scas
pop
mov
cmp
jae
or
sbb
mov
push
gs
es
je
aad
popa
loopne
out
aad
jne
lret
add
stc
jae
fdivrs
dec
arpl
inc
lcall
aam
mov
pop
ja
inc
repnz
nop
clc
into
je
pop
in
dec
sub
jb
inc
in
and
test
xchg
sbb
lret
jnp
add
dec
test
es
add
cmp
shlb
mov
push
imul
sub
test
in
movsb
add
outsl
in
mov
cmp
cmp
cmp
fcmovnb
es
and
jg
outsb
rol
mov
pop
cmp
inc
test
iret
dec
and
xor
fmuls
inc
mov
int3
out
push
sub
shll
nop
sub
mov
jg
lea
leave
push
and
fcmovne
js
mov
je
mov
movsb
pop
fimuls
mov
loop
mov
loopne
cmp
insb
sbb
nop
inc
les
gs
xor
pop
inc
push
ret
add
outsl
jmp
xor
xchg
mov
fs
sbb
dec
push
jmp
cwtl
inc
js
movsl
in
ja
frstor
add
out
insl
std
rep
inc
faddl
lds
xor
adc
sbb
insb
or
xchg
fimull
inc
repnz
je
fsts
in
sub
imul
push
int
jo
fsub
mov
ret
dec
das
add
in
add
test
mov
insl
sub
lds
or
in
xchg
xor
sbb
push
xchg
outsb
mov
std
lock
jg
push
mov
pop
fnstenv
or
cmp
mov
out
insl
cmp
pusha
pop
je
out
xchg
int
adc
test
aaa
jne
mov
in
data16
jno
adc
push
out
fldln2
adc
arpl
and
je
inc
jg
lods
or
neg
dec
lock
sbb
loope
mov
loopne
fldl
imul
repz
aaa
dec
in
and
adc
mov
aad
mov
sub
cmc
loope
movsl
or
cmp
test
add
stos
add
ss
mov
cmp
es
push
push
fiadds
mov
gs
mov
lcall
std
fnstenv
xor
push
xor
pop
outsb
adc
ljmp
stc
int3
in
sbb
xor
adc
pusha
faddl
and
incl
daa
loope
nop
dec
pushl
cwtl
adc
sub
and
xor
aas
daa
xor
and
push
andl
mov
push
push
cmp
inc
and
mov
and
sarb
xor
xor
and
mov
jae
gs
or
xor
lcall
pop
xchg
fstl
lods
cld
cwtl
pop
mov
dec
add
mov
in
or
or
lods
ja
fcomp
inc
shl
cmp
dec
pop
dec
xor
dec
mov
leave
and
insb
rcrb
repz
bound
ja
jg
cmp
repz
jb
ss
pop
lds
or
fwait
dec
xchg
out
shll
xor
fisttpll
mov
outsl
mov
and
pop
mov
pusha
mov
cwtl
sbb
xchg
push
ret
pushf
pushf
jle
mov
and
xor
and
enter
cli
push
inc
cmp
loop
xchg
enter
lahf
jbe
testl
mov
dec
lock
mov
aas
cmp
nop
and
pop
pop
stos
fnstsw
dec
movsl
fldcw
jl
or
xor
lods
dec
lcall
hlt
mov
out
and
jae
adc
xchg
movsb
inc
data16
fiadds
add
mov
dec
xchg
add
bound
inc
xor
xchg
push
adc
lock
inc
jno
push
jp
sbb
mov
mov
hlt
in
call
dec
mov
je
stc
jns
fs
hlt
leave
inc
jnp
out
in
mov
jmp
pop
pop
in
insl
ss
or
jp
dec
out
adc
xlat
mov
mov
in
pop
push
scas
lret
out
jns
and
pushf
rcr
xchg
ds
dec
cmc
fcmovnbe
mov
or
incl
push
pop
idivl
out
cmc
test
aaa
cmp
and
inc
mov
lea
mov
cmp
and
jl
xchg
daa
mov
subl
push
push
dec
pop
cmp
out
cmpsb
xor
push
add
dec
fadds
mov
test
repz
sbb
int3
or
cmp
fsub
scas
pusha
pusha
dec
fdivrp
inc
sub
pusha
imul
insl
inc
outsb
jp
fbstp
push
leave
push
jmp
sub
sub
mov
out
stc
clc
cld
add
sbbb
gs
mov
test
jle
ret
sbb
fisttps
out
xchg
mov
movsb
cmp
dec
mov
add
aad
outsb
adc
mov
xor
pop
mov
lahf
adc
fimuls
fwait
and
or
sub
movsl
jno
xor
pop
xchg
out
aaa
xor
mov
or
fadds
xchg
in
add
loope
xchg
mov
xchg
mov
xchg
int
push
sbb
xlat
xor
cwtl
add
iret
xlat
cmpsb
mov
xchg
and
icebp
dec
jp
mov
xchg
outsl
ret
jne
into
dec
sbb
xor
je
fpatan
add
cwtl
gs
loop
loope
xchg
cmpsl
add
mov
rcrb
cmp
sub
jge
lock
nop
push
mov
out
adc
and
push
mov
int3
push
mov
inc
dec
dec
xchg
mov
movsl
push
dec
leave
hlt
sti
pop
daa
and
cmp
aaa
mov
pop
xchg
lahf
shr
lods
int
cmc
mov
sti
adc
sub
fcmovb
cmp
out
mov
add
xchg
lock
push
rcrb
pop
jmp
ds
addb
or
mov
dec
orb
movsl
xor
lods
push
cmp
pusha
dec
in
in
and
mov
inc
push
jb
mov
sub
push
ljmp
mov
cmp
cmpsb
pop
lcall
in
push
and
pop
jno
adc
jae
add
mov
addl
leave
add
mov
js
imul
sub
or
rcll
loop
mov
mov
ss
lea
arpl
out
imul
inc
aam
ds
fisubrs
out
lret
or
and
xor
jl
movsl
sbb
lds
xchg
mov
aad
mov
dec
in
arpl
jle
je
out
mov
push
xor
or
adc
push
xor
dec
lea
in
movsl
test
mov
mov
out
test
in
dec
iret
pusha
mov
mov
pop
daa
cltd
add
xchg
sarb
sub
push
test
mov
and
sbb
push
lcall
xor
imull
jne
xchg
push
mov
pop
inc
jns
int
sub
addr16
sbb
inc
sarl
lret
stc
dec
adc
jno
lds
daa
cs
push
sub
cmp
and
fcomps
cmp
push
scas
cmpsb
lock
jmp
cltd
std
sbb
and
inc
ja
mov
add
xor
pusha
xor
and
sbb
loop
xchg
ljmp
cmp
jne
in
xchg
lcall
repnz
arpl
cmp
mov
sti
ds
repnz
add
cltd
pop
mov
jg
pop
xchg
dec
fldl
mov
jne
dec
sbb
out
push
pop
js
cltd
push
ret
imul
lods
adc
gs
xor
aaa
and
decl
sbb
sub
add
adc
clc
movsl
mov
ja
mov
adc
mov
aas
mov
jno
sub
shll
je
push
cld
addl
dec
mov
sub
or
sbb
dec
test
cltd
fdivl
fs
daa
push
mull
and
push
adc
jle
rorb
sub
test
jle
fldenv
pushf
mov
dec
cld
out
jmp
mov
dec
inc
xor
cmp
ds
sbb
in
xlat
inc
fwait
inc
rcrb
mov
and
imul
enter
jmp
test
insl
ja,pt
jne
jb
sbb
xor
dec
mov
or
into
dec
mov
in
and
jg
and
add
out
add
fdivrp
mov
jmp
lock
rorb
add
fiaddl
mov
inc
ret
mov
testb
sbb
push
std
lret
ja
scas
std
cmp
sub
inc
xor
mov
es
test
push
and
ret
add
sub
hlt
fcmovnb
cmc
addr16
incb
fldenv
cmp
lock
mov
push
cmp
and
mov
add
mov
jo
adc
dec
fs
jnp
xor
add
or
mov
lret
pop
test
push
insl
addl
or
fsts
or
push
cli
and
and
aaa
test
mov
dec
notb
movsl
push
scas
dec
and
mov
es
call
call
cmp
adc
jge
push
add
sub
adc
xor
test
in
fstl
aaa
add
push
sub
adc
lahf
jl
in
xor
lahf
pop
mov
aad
es
and
sub
divl
xor
dec
xor
mov
adc
lret
mov
dec
add
dec
and
out
call
push
sub
cmc
xchg
in
sub
push
adc
out
aaa
or
mov
popf
sub
sti
loope
cmc
xchg
aad
add
lds
or
dec
daa
nop
pop
xchg
repz
movsb
vunpckhps
hlt
push
in
mov
add
push
add
inc
aaa
inc
xchg
or
adc
je
xor
cmp
mov
enter
sub
inc
shrl
lahf
add
shrb
pushw
or
add
pop
inc
fwait
negl
icebp
jnp
jb
lock
cld
add
movsl
mov
dec
and
sub
ret
enter
sub
add
stc
mov
decb
das
out
lock
ficomps
jne
int3
lcall
pop
ljmp
push
decb
nop
inc
dec
out
dec
cmp
cmp
aaa
jnp
dec
mov
dec
fcomps
lahf
imul
in
pop
xor
test
cld
and
stos
adc
push
pushf
out
adc
jne
ret
mov
push
leave
mov
dec
addb
and
mov
outsl
scas
jbe
pop
test
addr16
xor
es
mull
cmpsb
adc
sbb
insl
stos
ds
xor
mov
or
xor
xchg
and
sbb
add
mov
lods
jg
cmp
xor
fstp
dec
xor
or
sbb
les
inc
add
leave
jns
xchg
pusha
mov
mov
pop
inc
add
xor
cmp
sub
inc
lods
cmp
ret
cwtl
js
lods
sbb
icebp
push
xchg
adc
in
insb
mov
jl
dec
cmp
test
inc
daa
mov
lahf
fdivr
fistl
cmpsl
ret
loopne
cmpl
aam
lahf
lds
out
rcr
inc
out
add
lcall
outsb
pop
sbb
sub
js
xchg
sub
outsl
stc
cmp
pushf
xor
lds
jge
stos
push
movsb
test
in
push
pusha
dec
pop
fiadds
sarl
push
and
in
mov
ss
fs
in
pusha
lds
mov
add
in
outsl
aad
dec
inc
lock
and
flds
or
push
int
push
frstor
mov
out
xor
out
cwtl
inc
sti
cmpsb
and
and
mov
js
mov
dec
in
adc
loope
outsb
fisttpll
push
pop
sub
inc
das
aad
lds
inc
mov
inc
in
clc
jae
or
shll
inc
mov
ja
jmp
ret
add
or
out
imul
orb
sti
adc
std
mov
and
movsb
popa
ss
ljmp
sti
repnz
push
aam
test
or
add
mov
fcompl
stc
test
xor
mov
xor
in
fs
dec
and
and
xchg
out
int3
mov
loopne
mov
sti
cmc
pop
and
lods
int
jns
xor
jmp
push
movb
stc
repz
pop
cwtl
addr16
or
je
outsl
je
adc
push
and
add
mov
pop
xor
pop
scas
test
in
roll
dec
mov
movsl
inc
lcall
int3
and
push
mov
sub
dec
xchg
fs
push
enter
cwtl
sub
add
jae
pop
mov
mov
sub
add
lret
sbb
fidivrs
pop
mov
xor
sbb
pop
std
add
push
pop
aad
xor
int3
andl
sbb
mov
fs
inc
mov
xchg
inc
aaa
cmp
test
clc
dec
lcall
pop
cmp
inc
jno
inc
sbbb
add
adc
dec
lret
jbe
sbb
imul
sarb
sub
lcall
and
cltd
inc
pop
lcall
ss
sub
jecxz
mov
fidivl
mov
add
adc
cmpsl
and
pushf
add
sub
fstp
jmp
mov
cmp
insl
fisubrs
sub
cmp
sahf
adc
iret
in
and
out
add
in
add
movsb
sbb
fs
inc
stos
lahf
std
cmp
inc
movsb
adc
imul
dec
xor
movsb
inc
xchg
adc
sbb
enter
pop
push
and
jae
stc
in
idivl
pop
loope
movsb
mov
jo
pop
mov
lea
or
pushf
bound
add
mov
jle
mull
pop
mov
mov
add
push
stc
dec
cmp
push
pop
mov
dec
test
ds
clc
rcrb
nop
jno
loope
lret
clc
inc
mov
out
outsl
xchg
cltd
aaa
add
loope
add
fs
and
sar
push
imul
xor
sub
xor
dec
inc
dec
pusha
cmp
add
mov
cmc
push
call
cmp
clc
sbb
in
dec
cltd
pop
cwtl
and
arpl
and
adc
pop
jmp
movb
dec
xor
lret
jae
pop
jno
xlat
ret
cmp
mov
and
ds
jno
add
add
pop
mov
xor
add
rolb
int3
xchg
cwtl
sbb
shll
xchg
pop
adc
mov
mov
mov
inc
fdivrl
cmp
push
inc
fmuls
xchg
hlt
pavgw
xor
and
cmp
loop
mov
test
imul
cmp
inc
inc
add
ljmp
adc
adc
int3
mov
cmp
mov
lods
or
jg
cs
mov
mov
mov
sbb
push
cld
push
mov
mov
inc
decl
push
adc
mov
cwtl
lea
leave
jne
xor
int3
movsb
jecxz
ss
flds
negl
add
aam
int
imul
out
jae
add
xchg
xchg
jne
ds
outsl
test
adc
mov
call
sub
adc
ljmp
loope
mov
cmp
mov
push
aas
fsubrs
push
add
cmp
cltd
jb
bound
in
sti
movsb
clc
push
xor
push
fsubs
aas
dec
jnp
jne
lret
jmp
push
mov
sub
jle
inc
ja
cmp
fidivl
pop
scas
jns
out
std
mov
cmp
cmp
fs
jecxz
sarb
lahf
fidivs
add
jae
adc
sbb
stos
enter
fdivs
cmpsb
imul
mov
daa
cmp
add
data16
add
loope
mov
lahf
out
les
sbb
int3
lock
sub
cmp
add
ja
cwtl
sahf
xor
insb
push
dec
mov
icebp
cltd
lret
jns
and
jae
cld
stos
ja
popf
mov
add
or
push
test
xchg
movsl
dec
pop
cwtl
add
aad
xchg
mov
adc
mov
ja
pop
mov
loopne
cmc
ja
lcall
aas
int3
pusha
mov
xor
xor
sbb
jne
cmc
movb
clc
ja
movsl
xchg
mov
adc
add
test
push
pop
sub
dec
xor
and
in
xor
and
lahf
pop
ljmp
in
xchg
ficoml
inc
leave
add
loop
add
xchg
in
std
into
lcall
aam
in
test
inc
shlb
fsubr
push
or
cmpsb
xchg
or
and
adc
sbb
mov
cs
cmpsl
add
cmpsl
insb
push
jp
mov
push
and
adc
je
pop
add
lea
xor
dec
push
ja
mov
shlb
pop
sti
fwait
add
jp
fsubs
jne
mov
push
xchg
movups
out
dec
cltd
and
sub
mov
nop
int3
popa
and
mov
imull
cmpsl
pushf
das
dec
ss
cmp
push
push
jnp
mov
pop
iret
inc
mov
xchg
arpl
xor
test
xor
push
test
call
mov
xor
aaa
mov
add
or
movsl
test
adc
push
call
push
xorl
jne
pop
pop
cwtl
cmp
dec
push
mov
add
test
mov
fs
in
xor
rcll
xchg
sbb
pushf
test
imul
mov
push
sub
test
loop
mov
mov
push
dec
and
faddl
cmp
adc
pop
or
jle
xchg
ror
push
ss
ficoms
loopne
insb
pop
mov
lahf
sti
mov
call
pop
lock
fnstenv
push
inc
or
cld
test
dec
movsl
mov
lods
and
nop
ljmp
push
and
call
or
pop
jae
xchg
mov
std
xor
pop
cmp
dec
sbb
imul
loop
inc
inc
and
inc
fdivs
or
in
out
inc
sbb
in
enter
icebp
fs
or
push
mov
sbb
pop
movsl
out
shll
pop
jns
and
inc
jb
or
dec
xorb
inc
int
call
push
movsb
xor
dec
mulb
dec
fistps
mov
ljmp
out
push
clc
inc
sarb
push
lds
shll
sub
mov
ret
out
and
ja
ja
sets
in
pop
and
aad
inc
inc
les
jge
js
inc
lods
dec
cmp
rolb
clc
rclb
in
pcmpgtw
call
mov
xchg
int3
stos
push
sbb
cwtl
push
and
add
lret
adc
outsl
subb
frstor
pop
lds
es
sub
adc
pusha
shll
in
adc
int3
cli
and
inc
out
mov
jmp
loop
mov
sbb
xor
xor
mov
js
add
inc
stos
movsl
fmull
jl
enter
rcrb
enter
pop
xor
cmc
shll
out
outsl
inc
mov
dec
dec
sti
cmpsb
xchg
xor
lea
outsb
cmp
and
jno
mov
orb
into
pushf
loope
fstp
adc
mov
out
testl
ficoml
cmp
jae
sbb
jl
je
gs
dec
and
cmp
sub
sbb
sub
sbb
lock
mov
ret
rcrb
sahf
rclb
lods
xor
sbb
push
add
inc
add
cmp
in
lret
addr16
inc
outsb
pop
jle
in
insl
and
or
cwtl
inc
cli
out
mov
int
into
clc
repz
add
cmp
xchg
pusha
fwait
lds
shlb
aad
push
cmp
je
popa
cmpxchg
mov
lods
xor
jns
adc
push
sbb
mov
dec
aam
push
sbb
or
mov
mov
leave
and
cmp
dec
pop
pop
mov
jae
and
add
dec
aad
add
adc
jne
orb
mov
or
push
repz
dec
enter
outsb
lods
sbb
push
or
add
stos
xchg
jle
outsl
adc
int3
aas
push
adc
jae
das
test
shlb
mov
mov
ds
push
dec
sbb
mov
jae
dec
or
xor
cld
fwait
sub
add
inc
inc
clc
out
push
cmp
fsubp
pop
fwait
test
clc
push
lds
sbb
cli
movsb
push
cmp
pushf
movsl
mov
mov
cmp
pop
fwait
stos
sbb
in
and
cmp
and
xchg
jp
mov
sbb
cwtl
xor
daa
cmp
out
inc
cmp
jnp
jno
mov
loop
sar
add
and
lcall
in
arpl
mov
cmp
lret
in
hlt
sbb
insl
shlb
add
and
push
or
test
sbb
aad
dec
jb
lret
movsb
insb
push
cmp
pushf
or
and
dec
add
lret
mov
mov
inc
mov
or
in
stc
dec
aad
mov
daa
outsl
mov
dec
add
sub
push
test
add
lds
sub
mov
in
pop
and
pop
xchg
mov
sbb
stos
fcoms
add
dec
nop
pushf
adc
nop
and
mov
in
fimull
pushf
repnz
js
mov
lahf
add
or
outsl
int
roll
adc
mov
push
insb
mov
in
sbb
xor
cltd
out
sub
scas
call
xchg
clc
daa
pushf
sub
mov
fadd
jmp
hlt
imull
scas
lret
std
enter
loopne
std
call
sbb
ljmp
pop
nop
cmc
cmp
pushw
push
cmp
jb
idivb
loopne
adc
jo
out
daa
ficomps
imul
std
mov
pushf
or
cmp
inc
in
cmp
dec
cmp
add
dec
rcll
jmp
xchg
xor
aad
sbbb
jns
dec
cwtl
insb
pop
cs
cmp
test
adc
out
pop
pop
jae
push
push
mov
xchg
sbb
add
cwtl
inc
int3
and
inc
outsb
adc
jge
int
lret
and
cmp
push
clc
fcompl
data16
in
sbb
xchg
hlt
dec
inc
mov
dec
push
and
popa
push
scas
dec
pop
ret
mov
movsl
xlat
jge
fdivl
push
cmp
mov
pop
pop
add
sub
gs
aaa
ja
jbe
lds
inc
fnsave
mov
popf
mov
sbb
ja
mov
and
jge
lret
rcrb
and
rcll
call
adc
stc
mov
ficoml
and
dec
imul
imulb
mov
pop
jl
lret
je
cmp
add
mov
stos
ss
push
rol
cmc
nop
mov
aas
popf
cmp
inc
shr
xor
sub
in
add
xor
cwtl
mov
addl
sahf
and
jmp
lods
pop
jp
test
cmpsl
fldenv
std
cltd
aam
xchg
dec
leave
sbb
xor
lods
mov
inc
and
packuswb
push
cs
xchg
orl
mov
mov
mov
sbbb
dec
xor
mov
lods
sub
call
in
xchg
rcll
lods
fcompl
daa
cmp
lock
inc
and
xchg
cmp
inc
popa
pusha
movsb
outsl
pushf
jl
mov
mov
jmp
outsb
out
out
icebp
and
sub
xor
les
jmp
xor
fucomi
xchg
clc
outsl
repz
es
fimuls
mov
pop
aas
insl
dec
sbb
sbb
add
and
gs
sbb
sbb
in
gs
lds
sbb
lcall
mov
push
mov
sahf
mov
cmp
inc
gs
testl
shll
data16
sub
idivl
xor
pop
and
popf
sub
int3
sbb
loopne
fisttpl
add
in
ret
in
rol
xlat
outsl
jb
scas
out
pusha
lock
jno
xor
std
sub
bsf
pop
loop
xor
int3
pop
mov
and
sbb
sti
sbb
loopne
dec
push
jmp
movsb
int3
xlat
aas
rolb
shlb
aam
fistpll
add
out
xor
sub
mov
fwait
xor
sub
inc
jne
dec
mov
je
dec
inc
jecxz
cmc
xor
pop
mov
add
imul
mov
sbb
ja
mov
bound
stos
xchg
xchg
repz
inc
mov
and
je
inc
sbb
movsb
sarl
mov
xor
sbb
or
mov
sbb
jae
cmpsl
cmc
xchg
jge
repnz
and
jae
bextr
in
insl
mov
int3
pusha
mov
outsl
leave
dec
cmpsl
repz
pushf
or
lret
mov
mov
pop
inc
xor
ja
in
repz
mov
push
xor
cmp
imulb
cmp
movsl
insl
jmp
pop
insl
daa
shl
lock
in
cmp
and
imul
cmp
stc
xchg
ja
mov
add
ja
or
rcll
dec
mov
gs
aaa
and
add
mov
cmpsb
gs
xchg
stc
popf
imul
mov
ljmp
imul
imulb
inc
cltd
fists
cmpsb
adc
lret
sti
outsb
mov
push
cmp
and
insb
sti
jg
and
xchg
sub
sub
lea
insl
pop
and
stc
insl
pop
or
mov
xor
pop
mov
cmc
sbb
clc
push
leave
fcompl
in
mov
jmp
filds
sub
xchg
dec
dec
push
mov
and
mov
cwtl
repnz
test
out
inc
mov
rclb
das
out
inc
xor
xor
mov
jns
or
shlb
mov
aas
jle
iret
std
mov
leave
dec
sti
test
dec
aaa
mov
mov
xchg
fs
out
repz
jecxz
sbb
cmp
adc
test
gs
add
push
imul
or
sbb
call
cmpb
sbbb
add
ja
lods
mov
adc
adc
fs
int3
inc
mov
fnstenv
cmp
ja
ds
xor
add
cltd
cmpsb
add
sbb
es
clc
repz
pop
xor
es
xchg
fmulp
orl
push
daa
cmp
aam
test
js
sub
nop
xchg
rolb
ficomps
enter
int3
repz
mov
xor
mov
ljmp
push
gs
es
mov
cltd
clc
scas
int3
cld
jl
movsb
mov
lret
sahf
int
ficomps
mov
cli
dec
aaa
nop
cmpsl
aaa
enter
push
pushl
in
daa
je
cmp
and
aad
mov
push
adcb
movsl
insb
fwait
pop
ja
in
cmpsb
cmp
sbb
adc
imul
je
mov
jmp
pop
stos
mov
notb
repz
mull
cmp
pop
push
mov
or
pop
psubw
push
mov
out
lods
cld
push
cmp
mov
shlb
fstpt
mov
aaa
mov
popf
pop
std
shll
mov
jle
or
push
and
pop
mov
cmp
inc
mov
cmp
push
je
lcall
sti
sub
and
or
stc
add
aam
js
xor
push
cmpsl
dec
cmp
inc
les
dec
movsl
adc
mov
mov
push
add
sbb
jne
movsb
and
jmp
add
aam
icebp
sbb
push
stos
jns
pop
and
mov
fimuls
das
lods
cmc
jg
pop
mov
mov
cmc
incb
inc
inc
mov
mov
jp
std
pop
je
cmpsb
cmp
out
jbe
add
pop
dec
mov
push
jne
jmp
add
data16
ljmp
in
lods
jae
pop
cld
inc
add
jecxz
xchg
mov
lds
out
cmp
cmpl
and
fcoms
out
lock
repz
in
dec
fsubrl
xlat
and
lea
pop
popa
scas
push
iret
xchg
jmp
pop
shlb
mov
repz
mov
popa
dec
jns
js
div
and
cltd
js
jmp
sub
pusha
xor
cmp
std
cmc
mov
push
sbb
and
mov
cmc
frstor
mov
insb
fbld
cmp
add
xlat
mov
iret
cmp
aam
ljmp
sub
cmp
add
adc
jmp
movsb
movsl
xor
add
xchg
das
aaa
imul
clc
cmc
jp
cmc
insl
gs
jle
cmc
xor
out
mov
mov
pop
sbb
in
imul
xor
jmp
mov
js
sub
add
pop
sti
push
ss
and
sarl
in
xchg
jecxz
and
ret
daa
lods
fistpl
ds
pop
cld
pop
dec
in
loope
add
mov
mov
add
pushf
xchg
aam
call
in
es
mov
sbb
leave
mov
push
inc
clc
add
cmpsl
xchg
xor
fsubp
pushl
xchg
ja
and
nop
cmp
mov
frstpm(287
cmp
lar
dec
mov
cmpsb
push
ret
jno
leave
add
add
or
ficoms
sbb
nop
ss
fnstenv
shr
and
mov
pop
ret
inc
mov
xchg
mov
ret
adc
dec
push
cmp
jle
pop
testl
daa
in
cld
sub
mov
hlt
push
and
xor
cmp
movsb
xor
mov
mull
fldl
adc
xor
in
mov
mov
lret
ljmp
add
xor
sarl
std
push
adc
jno
in
ss
sbb
or
cmpsb
cltd
pusha
jmp
add
xlat
adc
call
sbb
cmpsb
push
loop
sub
sbb
lcall
dec
mov
shlb
inc
inc
mov
pop
add
adc
idivb
fadds
cltd
inc
cmp
add
into
xor
push
and
pop
sbb
xor
mull
out
cmc
push
push
add
xor
stos
and
cmp
arpl
mov
and
les
in
mov
sbb
repnz
push
or
pop
repz
sub
test
pusha
push
imul
fldl
sub
mov
dec
fs
add
mov
inc
iret
or
cltd
ficoml
nop
insb
inc
push
call
jge
or
push
mov
xchg
jmp
inc
sbb
inc
dec
inc
sbb
das
cltd
or
decl
lock
paddusw
icebp
add
push
sti
dec
xlat
pop
add
or
xorl
scas
repz
lcall
dec
jo
ret
sub
fnstenv
out
mov
xor
sub
lahf
or
pop
movb
jb
pop
mov
cmpl
lods
clc
mov
sar
sbb
and
pushf
movsl
addr16
repnz
push
mov
scas
and
add
movq
nop
cmp
sbb
pop
std
cmp
and
inc
repz
test
ds
sub
pop
frstor
aas
repz
jae
mov
jns
mov
je
mov
scas
rclb
std
inc
jbe
push
pop
mov
data16
aam
imul
mov
dec
stos
cmc
ret
insb
mov
lahf
xorb
outsb
xchg
rcr
out
jl
dec
lret
xchg
mov
fdivrl
mov
mov
aaa
cmp
add
pusha
push
and
aam
cmp
ficomps
cmp
dec
or
lcall
mov
cld
pop
mov
inc
dec
movsl
outsb
mov
or
jg
inc
jns
push
jmp
cmp
dec
cwtl
cmp
cmp
cmp
inc
int3
repz
mov
dec
sbb
enterw
dec
xor
movsb
cmp
fwait
sahf
sub
mov
jmp
leave
lds
cli
and
out
or
push
mov
popa
test
ds
jecxz
jbe
dec
dec
movsb
test
mov
jb
mov
cmp
mov
or
add
nop
and
ja
or
enter
jae
lock
push
mov
int3
inc
lds
addr16
js
int
sbb
sahf
in
mov
cmpb
or
cmc
cmpsb
add
pop
jnp
aam
mov
push
test
dec
adc
xchg
adc
pusha
or
add
push
jl
lock
jle
sbb
repnz
pop
mulb
adc
and
lret
pushf
add
sahf
movsb
int3
fcomip
push
mov
pop
sub
nop
loopne
repz
scas
hlt
cmp
sbb
fwait
notb
cs
mov
in
and
inc
mov
mov
add
dec
xor
sub
dec
cwtl
sub
push
and
daa
pop
ja
loope
adc
daa
xchg
insl
in
jge
mov
sbb
iret
jb
test
xor
loop
mov
xbegin
adc
movsl
jae
pop
sbb
ljmp
mov
cmp
xchg
lcall
xchg
mov
xor
inc
jae
lds
cmp
sahf
stos
push
outsb
add
popa
jne
cmpsl
push
mov
xor
fs
push
fldt
das
add
cwtl
lcall
and
mov
movsl
icebp
outsb
jge
out
push
loope
fdivrp
inc
sbb
clc
repz
add
mov
arpl
subl
ss
shlb
rol
jno
and
lds
data16
pop
or
mov
stos
cltd
in
xchg
rol
lods
adc
push
sub
cltd
fcmovb
out
push
mov
hlt
sahf
pop
sbb
sub
lcall
sbb
push
mov
push
das
fcomip
sub
mov
stc
xchg
push
xlat
and
xor
push
push
sbb
xchg
pop
sub
cmp
push
mov
loopne
in
int3
lret
push
add
lds
mov
int3
mov
sahf
mov
xor
sbb
mov
ficomps
insl
dec
adcb
aad
dec
in
fisttpll
pop
mov
sub
adc
into
repnz
or
fwait
jno
gs
sub
pusha
dec
mov
pop
jecxz
jo
shlb
adc
mov
lcall
testb
jae
out
inc
lea
scas
inc
pusha
enter
xchg
and
fidivrs
faddl
das
and
iret
push
inc
lock
inc
inc
movsl
gs
push
cmp
xor
je
cmp
out
pop
sbb
xlat
jge
popa
std
mov
inc
inc
gs
in
jmp
out
or
arpl
imul
dec
cli
fmuls
or
adc
sub
inc
dec
cmp
mov
cwtl
add
mov
mov
sbb
outsb
push
push
loop
mov
mov
fadds
dec
xchg
fistpl
pushf
xchg
mov
add
pop
mov
aam
data16
test
loopne
and
push
shr
inc
push
cmp
stos
iret
lods
push
aaa
xchg
pop
lcall
testb
and
inc
data16
loopne
scas
or
test
pop
push
mov
data16
xlat
std
mov
xor
dec
movsl
xor
sbb
and
in
dec
repz
loop
mov
les
test
in
jae
cmpsl
hlt
and
cmp
cltd
movsl
cmc
mov
pop
fwait
ljmp
repz
and
daa
add
dec
out
cmp
inc
cmpsb
push
cmpl
sbb
dec
dec
add
cmp
cmp
jns
sbb
movsb
pop
cmp
push
sub
mov
out
std
cmc
pop
cmp
push
jns
push
jmp
inc
inc
sbb
loope
dec
fnstenv
clc
dec
shlb
mov
inc
nop
jmp
ret
movsb
and
mov
fs
push
inc
stc
movsl
mov
and
int3
xor
and
cmpsl
mov
sbb
sbb
and
stc
mov
pop
andb
cli
jmp
roll
pushf
cltd
mov
or
out
cltd
ja
dec
jns
movsl
jmp
sbb
mov
shll
repz
pop
jl
cmp
push
jmp
sbb
xchg
sub
adc
add
dec
or
jl
inc
movsl
jg
push
idiv
cmpsl
or
push
fnsave
adc
push
ljmp
push
add
hlt
mov
add
stos
faddl
data16
xor
outsl
hlt
aas
sub
cmpsl
fistpll
and
repz
mov
mov
xchg
daa
mov
mov
mov
lods
cld
ja
aad
cmp
mov
sub
add
and
lcall
in
mov
xor
pop
in
push
jmp
mov
cmp
push
jo
or
pop
test
dec
movsb
push
sub
std
loope
insb
mul
outsb
cmpsb
aaa
movsl
arpl
hlt
fimuls
dec
testb
mov
mov
pushf
mov
inc
dec
xchg
or
cltd
mov
ret
mov
lret
jecxz
insl
les
and
insb
xor
out
ret
push
sti
and
in
in
push
cld
ret
xor
xchg
cmpsb
cmc
dec
lods
dec
inc
rolb
add
or
jle
pop
add
pop
inc
ja
xchg
ljmp
rol
loop
inc
repz
fwait
lock
push
movsl
dec
add
fbld
mov
push
sub
mov
movsl
adc
es
pop
jl
xor
sub
je
mov
mov
push
jg
cmp
cltd
subl
insl
fiadds
add
push
and
insl
cwtl
addl
xchg
mov
push
fadds
sbb
pop
fmulp
add
cld
arpl
es
cltd
mov
orps
dec
mov
adc
add
sub
int3
add
mov
fimull
sub
cmp
rolb
rolw
incl
dec
incb
mov
mov
sub
sbb
fstpl
in
ja
dec
sbb
rcll
and
out
ja
or
sub
std
and
jne
loop
xchg
jmp
and
dec
jmp
push
pusha
mov
xchg
fisubrl
pop
inc
adc
scas
inc
dec
adc
cmp
xor
and
mov
imul
cltd
out
aaa
insb
mov
or
or
sub
push
add
dec
push
jmp
or
clc
lock
cmp
pop
loopne
fwait
mov
push
das
mov
sub
in
and
jg
dec
sbb
sbb
inc
cmc
push
cmc
pop
lcall
adc
out
mov
pop
push
jnp
repz
icebp
cmp
outsl
btc
jge
aaa
pushl
push
jbe
aaa
adc
les
sahf
adc
and
pop
xchg
push
fisubrs
enter
xor
and
imul
je
dec
in
ljmp
loop
in
dec
fnstsw
pop
cmp
add
cltd
xchg
in
cwtl
movsb
adc
roll
mov
aas
clc
movsl
cmp
add
mov
push
repnz
divb
or
sub
add
jg
test
test
das
notl
jmp
push
or
inc
mov
xor
pusha
push
leave
stc
jge
dec
aaa
aad
in
repnz
enter
or
pop
popa
cltd
lret
cmp
in
and
mov
ja
jmp
xchg
xchg
sub
daa
add
jl
or
loopne
ss
and
mov
sbb
lcall
lds
add
xlat
push
addr16
call
test
ja
pop
fsubl
nop
divb
pushf
add
cmpsl
and
mov
push
out
mov
imul
stc
xor
sahf
mov
arpl
out
dec
lds
mov
lds
rep
cltd
gs
add
rcrb
stos
ret
stos
push
mov
pop
or
shl
sbb
daa
or
data16
ja
rcrl
mov
divb
loope
shll
shrl
xor
inc
std
lahf
inc
xchg
xchg
xor
push
sub
inc
and
cmp
push
fisttpl
adc
lahf
xchg
sub
lds
lahf
data16
cmpsb
ret
cmovae
cmp
loope
cmp
and
insl
pusha
inc
insb
ja
frstor
outsb
mov
fwait
dec
xchg
aad
adc
adc
pop
mov
std
push
lds
sti
out
jmp
add
sti
lcall
pushf
sbbb
adc
xchg
in
and
xchg
ljmp
mov
pop
daa
int
dec
add
push
ds
or
cltd
sub
sbb
cmp
shlb
gs
jmp
jmp
sbb
push
or
or
add
sub
push
xor
std
std
sbb
mov
sti
mov
mov
in
daa
out
pop
and
or
mov
xor
sbb
mov
aad
cltd
stos
dec
lods
adc
dec
inc
imul
movsb
pusha
nop
inc
dec
enter
mov
push
mov
insl
ss
mov
and
jne
pop
int3
sub
cmp
imul
scas
dec
cltd
jns
xchg
jg
mov
xchg
mov
inc
mov
mov
xchg
arpl
js
mov
lds
je
dec
xor
dec
aam
ficoms
push
sbb
mov
cltd
adcl
iret
adc
dec
ss
pop
inc
dec
pop
adc
inc
jmp
inc
pop
lds
dec
repz
scas
addr16
xchg
fidivl
jae
xor
shll
dec
cmp
push
cs
adc
cmp
add
xor
cltd
fdivrl
adc
jp
nop
dec
xlat
pushl
rclb
and
adc
dec
pop
std
or
fcoms
filds
xchg
inc
cmpsl
pop
mov
nop
test
mov
fdivl
push
mov
sub
inc
pop
enter
cmp
int3
dec
add
movsl
clc
arpl
add
sbb
xchg
divl
inc
and
xchg
rcrl
in
sarb
adc
or
adc
fsubrl
xor
mov
pop
ja
push
mov
xchg
enter
lahf
test
cmc
sti
gs
fnstsw
ja
pusha
sub
mov
das
aaa
and
ficoms
xor
ss
ja
add
xchg
or
fwait
andl
js
mov
lret
xchg
popf
test
daa
add
mov
sbb
imul
and
xchg
xor
xor
ja
popf
push
lds
sbb
pop
xor
inc
jb
cwtl
mov
movsl
mov
stc
mov
add
adcb
ja
sbb
sbb
lods
add
cmp
cmp
xor
cwtl
paddsw
lock
daa
add
add
pushf
mov
sbbl
or
adc
jl
lds
xchg
jmp
mov
cmp
leave
xchg
jb
cmp
mov
mov
loopne
cmp
scas
cmp
imul
sbb
cmpsb
or
xchg
pushf
ficoms
add
into
mov
xor
push
and
adc
sub
int
dec
aas
adc
fistpl
jmp
fnsave
pop
xchg
movsl
nop
jns
aam
ss
add
mov
and
sub
aaa
imul
cmc
inc
enter
je
xchg
sbb
pushf
adc
fbld
mov
decb
call
mov
in
xlat
mov
in
in
xor
sub
xor
push
insl
repnz
cmp
xor
jmp
add
cli
fmull
pop
loopne
pop
int3
sbb
notb
and
andl
xchg
add
mov
int3
lods
and
sub
ljmp
stc
xor
test
xchg
outsb
push
insb
int3
add
jno
test
call
cwtl
imul
lock
xor
js
xchg
idivl
movsl
ds
testl
outsl
inc
cmp
xor
test
aam
push
mov
mov
sahf
sbb
dec
or
clc
mov
ss
and
xchg
daa
or
jo
dec
fwait
jecxz
dec
mov
cwtl
mov
xor
loopne
inc
sbb
and
cwtl
dec
das
lea
jb
aam
push
adc
sub
mov
mov
popf
sbb
mov
call
lods
sarb
lahf
lahf
pop
xchg
cmp
pop
dec
push
sbb
sbb
jne
fcoml
adc
shrl
shlb
enter
sub
in
roll
stos
ljmp
and
cmp
cwtl
push
mov
cltd
or
add
cmp
popf
aas
lods
push
clc
fisubl
cmp
add
sub
pop
movsl
mov
popf
and
pop
and
fcompl
mov
in
mov
and
inc
push
push
sti
popf
sti
lock
mov
or
mov
daa
fsub
sbb
fsubl
mov
mov
ds
ja
push
inc
adc
pop
and
les
jae
xor
and
push
cmp
sub
and
addl
mov
mov
call
pop
cmp
in
movsb
daa
mov
ja
in
daa
cmp
inc
addr16
in
daa
cmp
pop
es
rcll
inc
notl
aaa
jno
cmp
xor
sarl
mov
mov
mov
jmp
and
push
ljmp
push
sub
mov
stc
add
lret
in
mov
in
js
mov
jp
cmc
push
ficoml
test
bound
std
jae
cltd
inc
jno
push
icebp
cwtl
push
adc
push
sub
loope
and
ljmp
js
rol
xor
mov
sbb
out
mov
add
fwait
into
mov
and
cmc
cmpsl
fwait
sbb
cwtl
icebp
push
mov
dec
fildll
xchg
push
fcoml
add
push
adc
movsb
out
push
pop
out
sbb
cltd
lret
scas
push
dec
add
jmp
adc
ret
sub
xor
cmp
jle
xchg
inc
dec
in
dec
in
adc
inc
or
nop
inc
cmp
cs
or
lea
inc
xchg
and
xor
or
sbb
or
imul
cmp
inc
jns
and
fidivrl
cmpsl
je
push
sub
xor
xor
call
adc
mov
lret
fsubs
mov
mov
setle
push
pop
test
filds
mov
and
xchg
movsl
imul
das
es
notb
inc
mov
cwtl
cli
pop
pop
pop
cmc
cli
int
and
add
pushf
aas
enter
imul
jae
nop
out
inc
mov
dec
xchg
movsl
cs
dec
cld
inc
iret
gs
adc
dec
sarl
int
sbb
inc
jbe
daa
popf
mov
lea
push
std
cs
sbb
dec
in
jp
push
adc
adc
adc
mov
insl
xchg
nop
jno
sbb
aaa
movl
fists
loope
pushf
movsb
or
int3
xchg
loopne
mov
xchg
das
xchg
aam
xor
lea
mov
fcoml
clc
mov
inc
sti
lahf
cmp
add
gs
popf
mov
repz
jbe
xchg
std
pop
or
fimull
inc
jecxz
in
xchg
inc
and
mov
mov
rclb
jle
cmpsb
shr
add
jae
vorps
jns
in
xor
fsts
repz
jb
jae
test
and
repnz
xchg
cmp
ficomps
lahf
filds
rol
aas
fidivl
lock
jb
and
jge
inc
mov
in
js
pop
test
inc
cltd
add
inc
mov
in
ret
js
sub
sbb
aad
and
dec
cmp
mov
cmc
mov
cs
cmp
mov
sub
push
lds
cmpsl
out
push
sbb
sbb
mov
adc
sub
sub
test
inc
popf
pop
mov
dec
dec
mov
out
out
cmc
inc
mov
pop
jle
dec
je
cmc
inc
inc
mov
push
popf
mov
sub
push
imul
sub
adc
into
cltd
roll
push
out
xor
adc
outsb
icebp
inc
cmp
aad
test
clc
mov
clc
jne
or
in
xchg
adc
in
cmc
dec
adc
pop
lahf
cmp
js
clc
sub
push
or
mov
ljmp
lods
inc
mov
aam
mov
push
dec
mov
lods
cmp
xchg
mov
ret
push
mov
or
adc
rorb
dec
stc
movsl
in
cld
ds
roll
aad
adc
ljmp
outsl
sub
push
mov
adc
push
popf
or
cmc
or
xchg
addr16
or
leave
cmpsl
lock
mov
inc
out
ja,pn
mov
dec
or
hlt
push
sbb
cmp
out
loop
push
scas
mov
bound
dec
pusha
sub
pop
push
pop
stos
push
mov
je
mov
cltd
ficompl
or
add
dec
in
scas
cmpsl
sarl
inc
pusha
nop
jae
insb
or
inc
pop
add
pusha
xor
or
jbe
xor
cmp
cltd
test
out
xchg
pop
mov
xor
lcall
push
pushf
movsl
cmp
adc
cmp
or
sbb
ss
mov
adc
mov
les
mov
aas
hlt
push
aas
add
lock
pusha
rcll
mov
mov
mov
cmp
and
enter
cmpsl
mov
pusha
bound
nop
jae
cmp
pop
add
xsha256
cmpsb
adc
in
add
push
test
popa
pop
cmp
movsb
lods
icebp
icebp
es
cmc
and
shll
mov
mov
in
in
pop
cli
cmp
daa
hlt
and
loop
and
dec
cld
fs
popa
aad
mov
fs
xor
dec
add
sub
push
mov
mov
sub
dec
pop
pop
cmp
aam
stos
adc
aad
hlt
mov
daa
or
xor
xor
cmpsb
jmp
inc
mov
add
hlt
ret
stos
test
fistps
xor
call
cmpb
push
mov
mov
jne
lret
mov
jbe
inc
cmp
jne
int3
add
std
test
push
adc
fxam
add
loope
sbb
or
sbb
cmc
add
jmp
shll
pop
push
bound
into
out
jno
mov
cltd
xchg
fs
cli
dec
jle
fistpll
cmp
pop
sub
arpl
clc
jle
mov
clc
sbb
lahf
cmc
call
sub
lds
xchg
xor
pop
nop
xchg
mov
rorb
dec
inc
and
sbb
and
test
and
or
jmp
jge
nop
in
lret
push
adc
fnsave
mov
xor
xor
in
xlat
mov
pop
jae
jge
fsubs
shl
sahf
data16
jmp
jmp
add
fdivrl
es
xor
and
cmp
cmpsb
sbb
pop
rcrl
pop
leave
into
test
cmc
adc
xor
movsl
push
sbb
dec
mov
fstpl
ja
sarl
call
cmpsb
sbb
pop
xlat
mov
push
arpl
jl
enter
xchg
sarb
jns
or
sub
sbb
add
sbbb
inc
ja
mov
xchg
das
icebp
dec
pop
sbb
movsb
mov
cwtl
cld
push
aas
stos
ljmp
cmp
and
das
cmp
and
cmp
movsl
lock
mov
cmp
mov
mov
mov
jno
subl
pop
or
iret
lds
ds
or
xor
in
stos
out
in
in
or
stos
jae
in
cmpb
and
mov
dec
xor
lds
push
mov
dec
mov
sbb
and
movsl
bnd
jl
ret
outsl
jl
lds
ja
cld
jns
push
pop
adc
popa
sarl
adc
xchg
into
push
mov
sbb
push
cmpsl
loopne
and
movsb
cltd
dec
push
push
mov
xchg
mov
cltd
cmp
mov
movsb
push
dec
mov
sbb
adcl
and
lret
int3
mov
test
inc
or
mov
xor
cmc
xor
pop
pop
add
dec
or
sub
in
lret
std
or
and
mov
popa
stc
lds
loopne
jo
pop
adc
push
lahf
jns
in
or
jns
dec
stc
xor
movsl
aam
cmpsb
jle
and
xchg
cmpsl
imul
pop
call
xchg
shl
lahf
add
jecxz
and
pushf
mov
cli
xor
test
xchg
adcl
jge
sahf
xor
sub
sub
pop
cmp
lds
xlat
add
inc
clc
in
mov
cmp
xchg
lret
xor
dec
lret
sbb
out
scas
ja
mov
add
sti
xor
inc
cmp
loopne
imul
mov
cmp
xor
jge
pop
popa
repnz
dec
xchg
cmp
insb
int3
loopne
mov
sub
sbb
sbb
enter
in
mov
repz
add
xor
and
lret
in
or
imul
jae
and
xchg
lds
ret
xor
add
mov
jno
sbb
ja
xor
mov
pushl
mov
std
test
dec
or
dec
cwtl
push
and
and
push
mov
repz
push
repz
cmp
push
enter
ret
cmp
cltd
test
fs
repnz
popa
es
dec
jne
add
pushl
pop
sub
repz
popa
sbb
adc
mov
xor
and
stos
dec
mov
push
xchg
push
aam
mov
cmc
cmp
push
ljmp
call
cmpsb
push
ficomps
notb
cmc
in
xor
das
push
dec
lret
arpl
not
jge
or
out
sub
loope
xor
fs
outsl
test
adc
sub
adc
xchg
movl
mov
sbb
cmp
adc
and
imul
cmpl
add
rorl
inc
fs
pop
add
in
call
cld
stos
add
cmp
cmp
and
ss
adc
loope
xchg
daa
or
arpl
mov
cld
mov
inc
mov
jecxz
adcb
pop
dec
cmp
inc
push
inc
adc
sbb
or
mov
push
lods
in
out
arpl
cmp
movsl
movsw
imul
cli
notb
cmpsb
or
xchg
mov
cmp
xor
pop
jl
cltd
repnz
shll
vpmaddwd
loopne
jb
or
in
dec
mov
or
push
push
add
sbb
enter
cwtl
sub
std
mov
sub
sub
imul
lock
xor
cmp
fwait
mov
inc
lret
in
sbb
jno
mov
or
inc
and
into
cwtl
lret
and
jns
xchg
cli
movsb
dec
pop
fdivrl
jp
dec
adc
dec
movsb
mov
or
sub
jmp
jecxz
jp
sbb
lds
lahf
push
pop
xchg
loop
cmp
pop
jns
jp
mov
cwtl
mov
xchg
icebp
mov
mov
dec
or
adc
cmp
fwait
insl
sub
mov
cmp
sbb
sbb
lea
sub
pop
push
dec
in
cwtl
es
dec
pop
inc
das
lods
sub
add
cltd
push
arpl
cs
lret
cltd
inc
in
in
test
frstor
cmc
hlt
and
adc
rcrl
inc
popa
inc
leave
dec
decb
inc
jnp
mov
adc
sbb
imul
js
mov
adc
pusha
add
inc
mov
inc
fisttps
and
cmp
sub
pop
cmp
addb
cltd
nop
rcll
in
mov
push
sub
jg
imul
mov
sub
cmp
and
add
mov
imul
nop
es
sub
mov
testl
mov
xor
lock
ja
cmp
cmp
arpl
sbb
and
adc
sub
adc
in
out
dec
and
cmp
dec
les
insl
ds
push
pop
or
out
sub
cmp
xor
adc
enter
adc
rcll
ja
push
rorl
ror
dec
sbb
in
fnstcw
push
cld
cmp
jo
pop
inc
fisttpll
in
mov
push
lret
ret
pop
cmp
jo
jg
inc
out
sbb
fsubs
in
adc
call
dec
nop
pop
mov
and
lea
movsb
dec
mov
adc
mov
pop
std
lds
ret
cwtl
cmp
add
jno
std
cmp
adc
mov
int
popa
out
dec
push
jbe
fldenv
imul
inc
add
pushf
mov
cmp
in
dec
jp
int3
sbb
cmp
lds
or
cmpsl
adc
mov
fwait
xchg
faddp
jno
xchg
out
stc
cmp
inc
adc
in
push
int
repz
testl
cmp
je
les
leave
test
add
mov
fidivrs
push
pop
cmp
cmp
int3
nop
clc
cmp
std
sarb
in
insl
movsl
dec
and
mov
dec
arpl
cmp
sub
pop
inc
xchg
and
les
int
in
dec
inc
cmp
inc
cmp
nop
call
and
gs
sub
sar
cld
enter
jg
jb
push
adcl
pop
ljmp
push
or
cmpsb
adc
leave
loope
fdivrs
cltd
jb
pop
loope
push
nop
mov
sub
out
or
pop
cwtl
out
std
xor
sub
cmp
ds
inc
ja
mov
or
lea
je
mov
rcrl
daa
jecxz
pop
outsl
fwait
shlb
inc
jg
sbb
sbb
pop
jle
fdivrs
and
or
adc
mov
cld
xchg
and
cmp
es
or
popa
add
mov
dec
xchg
xchg
rorl
xchg
in
fimuls
xchg
sar
gs
aas
and
lods
sub
and
add
pop
adc
daa
xor
jbe
adc
imul
pushf
dec
mov
mov
cmp
push
or
sub
jp
outsl
or
sub
ficoms
push
inc
jecxz
repnz
inc
ja
test
sbb
pop
lahf
push
jae
fs
out
pop
or
repz
mov
push
cltd
out
or
mov
mov
jmp
std
jg
ret
or
inc
lds
cmpsb
and
mov
cltd
inc
sahf
stos
push
cmp
cs
outsl
inc
mov
rorl
nop
pop
sub
fisubl
aad
add
add
fadds
in
ljmp
pop
inc
iret
imul
insl
or
sub
imulb
lock
mov
add
dec
lods
pop
inc
lret
pop
cmp
aam
jae
xchg
xchg
aam
xor
idiv
dec
sarl
mov
or
pop
add
cmp
aam
mov
das
movsb
add
sbb
inc
insb
mov
int
mul
inc
inc
cmc
pop
push
ja
and
in
cmp
movsb
or
jns
aaa
int
push
mov
outsl
dec
pop
aas
mov
cmpb
ljmp
out
adc
fwait
adc
cltd
jecxz
lcall
out
movsl
pop
lret
or
int3
pop
cmpsl
and
cmc
add
xchg
xchg
call
gs
or
data16
or
fwait
dec
cmp
jae
addb
mov
dec
in
or
xor
scas
hlt
imul
pop
dec
jge
int3
aam
or
mov
jl
cwtl
lret
adc
cmpb
sbb
in
pop
movsl
or
js
and
mov
imulb
cmc
out
mov
aas
cmp
or
lahf
in
and
and
lret
inc
popa
cld
and
ret
inc
adc
lds
icebp
inc
test
jl
lock
lods
jnp
pop
movsb
xchg
mov
cmp
in
and
or
mov
push
xchg
adc
jl
hlt
in
faddl
lods
push
sti
xchg
out
outsl
mov
inc
in
xchg
jae
push
pop
pusha
jmp
ficoml
sub
dec
sub
jnp
or
adc
test
adc
les
xchg
out
sbb
dec
inc
mov
jns
stc
daa
pusha
jmp
dec
aam
in
jl
loope
adc
rcll
sub
aad
mov
movsl
dec
mov
arpl
and
and
push
es
xor
mov
aad
mov
aaa
in
in
pop
mov
cwtl
mov
sub
outsl
xor
add
xor
loope
push
cmp
mov
pushf
mov
std
inc
jae
enter
das
jg
inc
and
adc
int3
in
jecxz
les
cmp
lahf
and
inc
leave
loopne
mov
std
stos
and
pop
mov
pop
test
ja
loop
xchg
mov
js
ja
sub
sbb
in
sbb
dec
sub
cmpsl
push
or
add
xchg
xor
icebp
xchg
stos
push
sub
add
jmp
cmp
in
fbld
pop
outsb
inc
sub
andb
cmp
call
sub
les
cwtl
pusha
cld
pop
test
aaa
mov
hlt
dec
ret
cmpsl
dec
or
in
lcall
in
lods
push
orl
inc
mov
adc
scas
cmp
push
lods
es
dec
nop
movb
xchg
ret
inc
add
mov
inc
or
jb
pushf
dec
jae
loope
test
mov
inc
cli
loopne
sub
push
aam
bound
jb
or
sbb
scas
sub
push
inc
subb
push
inc
popf
in
inc
pop
nop
jg
push
cmp
push
pop
inc
jl
jl
scas
cmp
imul
cmp
lds
test
inc
aam
subb
sub
inc
sbb
mov
add
movsb
leave
js
push
mov
inc
adc
cmp
sbb
push
push
sub
aad
hlt
or
gs
dec
aas
lret
in
xor
lods
mov
stos
leave
arpl
adc
adc
push
stos
push
loope
mov
ljmp
stc
adc
imul
add
loopne
cltd
mov
je
cltd
out
clc
push
dec
inc
add
pusha
lcall
jg
push
testl
mov
inc
ja
pusha
dec
xchg
outsl
adc
daa
sub
call
add
lea
test
arpl
sbb
push
inc
jg
inc
mov
push
stos
repnz
or
sbb
lahf
xor
jae
adc
movsl
cs
and
xor
inc
inc
ja
lahf
test
or
cmpsb
push
and
sub
inc
adc
testb
test
int3
enter
inc
or
daa
push
mov
jno
ficoms
pop
add
inc
xchg
fdivr
rcll
pop
neg
cld
push
int3
adc
call
xchg
or
cs
es
movsl
mov
push
xor
popa
mov
sbb
ljmp
ja
imul
out
outsl
adc
mov
mov
mov
xchg
xor
jg
aad
mov
xlat
add
cltd
sub
dec
push
movsb
pop
mov
and
inc
shrb
cltd
add
sti
xchg
jmp
push
sbb
mov
or
aas
pop
int3
adc
add
test
cmc
xor
fnstenv
and
aaa
push
xor
ja
add
stos
dec
jle
orl
shll
fdivr
xlat
fucomip
push
pop
xor
mov
jl
sub
mov
mov
dec
jae
rolb
gs
xlat
mov
push
lods
data16
fdivl
mov
pop
out
pusha
push
push
dec
jmp
xchg
pop
lock
add
je
das
dec
mov
jbe
dec
sbb
sub
xor
xchg
test
xchg
cmc
in
js
mov
orl
xor
adc
xor
unpckhps
jge
adc
xlat
xchg
imul
movl
and
and
lea
cmpsl
pop
push
adc
mov
mov
fisubl
sub
imul
cltd
add
or
mov
pop
jne
scas
mov
ret
incl
lahf
out
popa
add
clc
mov
aas
rcr
and
adc
pop
fbld
repz
xor
lret
jae
pop
mov
sahf
dec
xlat
dec
push
xor
xchg
inc
addr16
xor
lret
xchg
cmp
shl
adc
dec
jne
mov
mov
es
dec
jmp
adc
jne
fdivl
sub
xchg
insl
call
push
mov
jge
mov
dec
xchg
and
mov
clc
jo
and
loopne
pop
pop
pusha
adc
dec
popf
hlt
sar
je
in
mov
pop
decl
ljmp
fldl2t
mov
adc
add
out
cmp
xor
xchg
js
enter
mov
and
adc
xchg
popf
xorb
outsb
loopne
jnp
nop
xchg
xor
and
lods
lret
mov
insl
aam
dec
pushf
or
pop
sbb
dec
push
daa
xor
scas
cld
sbb
lods
roll
lahf
lds
sub
mov
js
fmull
sub
mov
or
mov
inc
out
ret
nop
sub
mov
fidivs
push
dec
icebp
inc
dec
leave
in
mov
push
mov
mov
test
in
data16
fs
xchg
loopne
push
cmpsb
dec
in
add
movsb
sub
and
filds
lret
push
outsb
or
repnz
es
pop
movb
jmp
ret
sub
orl
in
stc
sub
xor
leave
mov
mov
in
xor
dec
jl
sarb
xor
rolb
pop
les
adc
sahf
lret
lods
ds
jge
mov
adc
mov
sbb
int3
aas
repz
mov
ret
xchg
adc
jle
enter
mov
cmp
in
repnz
aas
fs
mov
adc
arpl
pop
shrl
jl
mov
sbb
cmp
in
or
popf
mov
cmp
ljmp
xchg
ja
mov
add
dec
test
cmp
inc
add
or
movsl
xchg
xorl
cld
or
cwtl
cwtl
xchg
mov
aaa
xor
cmp
fcomp
inc
xchg
and
mov
mov
xor
js
and
jno
or
mov
cmp
movsb
inc
inc
sbb
jle
add
jl
je
ss
jnp
adc
js
in
lods
and
jle
push
pop
in
inc
das
push
lcall
scas
in
lea
cltd
push
pop
js
mov
mov
pop
cmp
cmpsb
scas
hlt
jl
fsubr
cli
mov
ja
pop
or
lods
outsl
sub
cmc
data16
in
addr16
add
push
cld
mov
jge
sub
inc
adc
push
adc
lods
loope
int3
in
mov
xchg
cli
cmc
sti
pop
addb
sahf
inc
sub
and
and
jae
xor
jne
adc
push
andb
lea
cmp
xchg
std
enter
rcl
aas
imul
sub
and
shrb
adc
mov
mov
fildll
fcompl
sbb
sub
xchg
stos
push
clc
jge
jns
jecxz
or
or
cmp
fprem1
xor
cwtl
dec
in
xor
jge
and
push
pushf
mov
cwtl
loopne
and
sahf
sub
loop
sbb
imul
lods
push
sbb
add
add
mov
in
into
sub
jl
rcl
sbb
push
lahf
xchg
test
enter
mov
xchg
jp
jns
lret
out
sarb
adc
lods
outsl
sbb
xchg
imulb
and
adc
ret
repnz
mov
sub
sarb
cmp
push
test
mov
std
fdivl
xchg
cmpsb
gs
imul
adc
sub
frstor
outsb
addr16
push
pop
js
mov
jo
jge
jmp
pop
pop
xor
inc
sub
mov
jo
and
xor
jmp
inc
in
pop
push
mov
mov
call
out
mov
pop
mov
inc
arpl
xchg
jo
xor
sub
xchg
dec
iret
or
push
push
jmp
or
lahf
addr16
adc
popa
sbb
mov
rcll
subl
cmpsl
and
dec
dec
sbb
xchg
repnz
in
push
xchg
sti
test
call
add
mov
mov
cmp
sysexit
add
ja
lea
daa
push
jecxz
and
or
jae
xor
aas
xchg
add
adc
push
xor
out
adc
ret
sti
movsl
mov
mov
adc
add
sti
cmp
inc
jnp
inc
notb
icebp
dec
in
push
das
dec
push
pop
push
popa
mov
jo
push
xor
and
sub
lcall
iret
cmp
repz
mov
fcmovb
cmpsl
pushf
scas
test
xor
ret
cmp
pop
add
std
enter
xor
and
lock
sub
inc
sub
adc
repnz
xor
push
add
inc
icebp
int
sti
das
sub
cmc
test
lods
adc
adc
jecxz
fsubrs
pop
pop
es
jae
push
cmc
mov
push
out
sub
sti
out
mov
pop
enter
mov
xor
decb
push
add
push
insl
out
mov
jne
clc
lcall
cwtl
fisubrs
push
fidivrs
xchg
mov
je
push
aad
push
jmp
mov
jle
das
test
cmp
inc
mov
xor
popf
call
in
in
add
and
sub
cmp
cmp
aam
cmp
mov
sub
cmp
xchg
xor
loope
stos
adc
add
jns
scas
pop
add
shlb
rolb
cltd
dec
sub
cwtl
adc
cli
ljmp
mov
cld
push
jns
out
ljmp
cmp
dec
in
push
cmp
movsl
adc
sub
xchg
xchg
sbb
sub
sub
rolb
inc
pop
ret
jno
icebp
addr16
jmp
js
loop
gs
test
cmp
cltd
sti
lock
pushf
sbb
or
sete
stos
add
cmp
push
pop
jge
sbb
mov
ret
add
lds
sub
mov
repz
pop
outsl
push
sbb
cltd
push
push
loop
push
push
sbb
push
in
popf
sbb
bound
xchg
adc
xor
mov
daa
in
dec
pop
inc
mov
push
test
cs
mov
and
std
fs
es
sbb
ds
push
scas
arpl
xor
sbb
jo
aam
mov
psubusw
movsl
adc
and
pop
enter
push
pop
stc
or
or
push
or
sub
push
adc
cmpsl
fs
nop
test
pushf
adc
sti
test
pop
push
add
imul
jecxz
sub
jb
aas
pop
lahf
xor
shlb
push
and
ds
adc
mov
push
pop
dec
or
imul
pop
gs
and
cmpsl
dec
ss
dec
add
test
xchg
das
add
push
cltd
sbb
add
repz
push
push
mov
push
push
out
and
setl
dec
inc
stos
pusha
insl
adc
add
xchg
mov
in
cmc
jle
sub
cltd
in
pop
cmp
xor
jge
lock
xorb
pop
enter
call
lret
iret
mov
out
mov
stc
mov
je
jne
icebp
mov
leave
mov
in
xchg
aas
dec
ss
mov
or
push
jae
ret
in
add
sub
lret
dec
push
and
mov
ljmp
mov
movsl
dec
stc
pop
mulb
jae
mov
fwait
dec
enter
jbe
push
pop
shlb
dec
adc
imul
lahf
xor
call
mov
cmpsb
push
cmp
cmp
mov
push
inc
cmpsl
mov
pop
mov
mov
fs
mov
test
test
ljmp
cld
bound
sub
scas
sbb
mov
std
daa
pop
sbb
daa
mov
adc
mov
jmp
xchg
and
mov
push
mov
jmp
es
aam
sarb
ja
pop
ljmp
xor
sbb
inc
int3
cmp
cli
jl
cmpsl
shl
mov
loopne
lret
sbb
test
ficoms
add
sti
loope
xchg
xchg
add
xchg
fmull
mov
xor
js
sbb
sbb
inc
mov
in
mov
cld
cmpsl
pop
adc
adc
and
mov
inc
stos
imul
dec
in
mov
mov
jp
ds
out
xchg
xor
pusha
into
push
cmc
nop
cltd
push
ljmp
adc
ret
pmaxub
jnp
add
out
addr16
idivl
push
movsl
add
dec
add
rcrl
outsb
and
sarb
push
adc
push
in
shrb
add
js
sub
insb
std
mov
daa
ja
aad
dec
push
fs
daa
bound
popf
ljmp
mov
out
dec
test
sbb
mov
pop
lcall
jae
sti
out
sbb
cmp
dec
add
lock
test
clc
jg
xor
and
out
test
pop
mov
incb
lock
gs
out
shl
dec
cltd
jno
fcoml
test
fcom
adc
mov
mov
fbld
call
fnsave
pusha
add
jg
xor
icebp
mov
mov
and
test
and
or
adc
xchg
mov
hlt
hlt
aas
push
cmc
inc
in
push
jae
out
inc
xchg
enter
stc
inc
lcall
add
and
bnd
cwtl
inc
add
sahf
shl
push
test
inc
jg
add
mov
orl
lods
push
ljmp
in
movsl
dec
and
loope
ja
sbb
arpl
stc
add
add
cmpsb
add
dec
ja
std
or
rclb
fnstenv
int
sbb
ret
jne
adc
lods
dec
clc
clc
movsl
and
jmp
xlat
mov
xorb
jae
inc
and
sub
inc
cltd
daa
stos
lods
stos
dec
mov
cs
rcl
ret
push
in
or
adc
stos
jle
in
loope
adc
add
mov
inc
mov
dec
mov
sbb
in
add
cmp
sbb
xor
jge
or
mov
lcall
pop
mov
es
and
arpl
mov
xchg
call
leave
std
test
and
adc
dec
xor
mov
out
push
and
xor
and
fidivl
mov
enter
or
lods
scas
aad
fdivl
gs
and
into
je
ds
cmp
push
in
sbb
jg
lret
insl
das
cmp
sbb
shll
sbb
ja
test
xor
imul
mulb
lcall
dec
cmp
cmc
jle
inc
and
xchg
out
pop
pop
mov
dec
sbb
dec
xor
out
out
call
push
or
cltd
rclb
mov
push
movsl
std
inc
imul
sahf
xchg
push
sbb
shlb
ja
test
in
mov
incb
aaa
mov
sbbl
inc
ret
imul
pop
inc
inc
leave
je
xor
dec
inc
add
sbb
push
stc
or
in
jae
sbb
jne
xchg
outsl
mov
inc
pop
xchg
in
or
aam
cmp
inc
aad
dec
dec
xor
jp
in
jmp
xor
jno
sbb
pop
bound
mov
add
stos
dec
sbbb
add
iret
xor
push
cltd
data16
xchg
std
cmp
aam
inc
clc
ret
int
daa
mov
lret
push
and
scas
pop
addb
clc
lret
mov
or
add
jno
or
jbe
lret
mov
add
imul
xor
stc
xor
decl
loope
test
sti
cmp
sub
mov
stc
cmpsl
lock
fwait
push
or
repz
jmp
test
ja
call
xchg
add
push
xor
icebp
or
pop
test
pop
std
insb
call
xchg
pop
clc
dec
movsl
roll
outsb
in
testl
sub
dec
mov
xchg
mov
dec
adc
cmpsl
push
mov
pop
shlb
lds
movsl
insb
cli
std
fisttps
cmpsb
shl
cmpsl
xor
out
sbb
sbbb
test
int3
gs
or
jecxz
lds
inc
pop
sbb
int3
pop
fdiv
mov
js
mov
mov
sbb
mov
dec
ss
lea
inc
lea
test
fpatan
mov
pop
movsl
sahf
xchg
test
je
sub
test
lods
aam
scas
in
cmc
mov
xor
repnz
fidivl
mov
inc
pusha
rorl
shll
mov
mov
xchg
lret
sbb
add
adc
pushf
lds
mov
outsb
pop
hlt
pushl
dec
jecxz
pushf
sub
mov
add
dec
scas
clc
ror
inc
scas
imul
cld
cmc
movsl
out
push
enter
fisttpll
in
leave
cltd
movsb
xchg
push
ror
mov
cmpsl
xchg
imul
test
adc
test
xor
cmp
add
mov
sbb
sbb
sahf
test
pop
pop
push
sbb
lock
je
stos
enter
sahf
jle
mov
bound
fmuls
pushf
pop
mov
sahf
movsl
mov
or
shll
sub
and
push
fldenv
test
add
push
movsb
mov
sbbl
fidivl
aam
test
xor
pop
imulb
xchg
int3
and
mov
add
sbb
push
ja
stc
pop
sbb
adc
lcall
fdivl
and
add
fs
cwtl
mov
sub
lods
inc
in
push
cmp
js
into
xor
push
popf
mov
xchg
or
mov
dec
xchg
jmp
and
inc
or
dec
popa
imul
dec
add
imul
lahf
add
sub
in
mov
xor
daa
lcall
test
movsl
push
jno
into
data16
cmp
arpl
adc
inc
mov
cmc
lods
cmp
push
xchg
inc
or
aas
sbb
fsubl
outsl
shrb
or
in
test
mov
nop
es
mov
lahf
mov
cmpsl
out
push
mov
cmp
dec
mov
sub
mov
add
arpl
in
ja
jg
adc
inc
hlt
and
sbb
mov
ds
pop
pop
adc
cmp
jmp
cmp
cmc
idiv
add
cmp
out
mov
pop
es
sbb
sbb
push
dec
xchg
jbe
es
divl
movsl
jle
dec
bound
test
and
out
and
fsubrs
xor
and
cltd
add
test
pop
cmp
stos
je
rolb
dec
add
adc
cmp
mov
out
lock
pushf
ja
sbb
mov
jo
ds
aaa
pop
xor
push
xor
icebp
xchg
jae
mov
fiadds
push
xchg
out
add
add
stos
lds
cmp
inc
out
sahf
rcrl
sbb
fdivl
push
sub
xchg
lods
das
push
sub
adc
adc
xor
leave
out
ss
add
mov
aad
aas
add
jecxz
sbb
or
lret
aas
shlb
int3
pop
mov
loope
es
cltd
jno
cltd
icebp
adc
insb
pushf
lods
daa
cmpb
stos
push
adc
adc
add
cwtl
or
jno
sbb
cmp
movsl
jnp
jne
add
cmp
push
cwtl
adc
adc
movsl
stc
push
dec
lcall
mov
mov
lret
sub
xchg
or
jne
jo
mov
and
adc
mov
mov
mov
add
cmp
add
cmpsl
pop
das
movsl
sbb
lock
mov
pop
into
outsl
sti
xchg
mov
jne
jb
inc
cld
cmp
inc
mov
push
push
fs
icebp
jmp
fs
lcall
add
insl
inc
stc
roll
and
pop
lahf
inc
enter
push
dec
push
mov
push
hlt
push
stc
add
xchg
mov
imul
jns
jae
clc
or
mov
xchg
mov
cmpsb
notl
aam
inc
push
or
pop
mov
and
pop
jg
pop
lret
lods
dec
sbb
lock
mov
les
clc
inc
mov
add
adc
mov
lds
gs
mov
cmpsl
and
pop
lcall
adc
inc
pop
push
cmp
push
adc
sbb
mov
push
xchg
movsb
enter
imul
jg
adc
in
jl
push
and
loopne
jecxz
mov
mov
mov
jb
scas
mov
dec
push
add
pop
xor
push
sbb
ljmp
js
int3
cltd
add
mov
test
test
ljmp
dec
fistpll
es
push
aad
dec
idivl
aaa
jmp
lds
mov
loope
jno
jo
js
inc
xor
mov
popf
xlat
inc
mov
jecxz
jb
inc
in
cmp
sub
pcmpeqb
xchg
out
pop
cld
jmp
mov
cmc
push
stos
test
mov
aad
data16
out
int3
push
jb
cmc
lock
stc
call
lock
lret
rcrb
lds
or
and
mov
sbb
mov
and
std
into
sbb
xor
jno
adc
pop
xchg
movsl
xchg
dec
pop
imul
aad
cmp
mov
adc
mov
cwtl
dec
es
sub
test
mov
pop
inc
icebp
sbb
mov
cmp
enter
out
or
jne
xchg
cltd
popf
fs
pop
imul
lock
pop
xor
or
idiv
pop
mov
add
dec
dec
rcrb
lds
hlt
enter
sbb
jbe
mov
mov
mov
add
movsb
enter
aaa
ret
cmpsb
cmpsb
stos
xchg
mov
loope
push
aaa
sub
pop
sbb
adc
mov
pop
push
aas
fdivp
mov
mov
mov
inc
sub
popa
aam
dec
mov
add
dec
add
pcmpgtb
pop
add
test
xchg
cmp
test
and
adc
gs
push
aad
icebp
jle
push
mov
inc
adc
inc
pop
lret
pop
subb
mulb
es
ljmp
inc
push
and
repz
push
lret
mov
jg
mov
int3
adcb
pushl
js
xchg
nop
popf
in
and
sbb
mov
outsl
gs
popf
cmp
cmpl
ret
push
sub
stc
jl
mov
mov
sub
fsub
jae
aas
shlb
lods
inc
scas
das
decb
into
in
push
inc
and
icebp
xor
outsl
dec
fbld
adc
adc
dec
cld
and
sbb
stos
lret
fwait
and
lahf
mov
sub
sub
xor
bound
gs
cltd
sub
int
leave
lock
and
fmull
adc
dec
in
into
push
sbb
in
lahf
or
rcll
daa
imul
add
mov
mov
jp,pt
fwait
aas
movsl
icebp
imul
jnp
inc
lahf
add
add
ret
push
sbb
mov
aad
lock
pop
push
clc
movsl
je
pop
lds
testl
and
add
lods
movsl
cmc
out
rcr
xchg
sbb
std
inc
pop
repz
dec
aaa
inc
cmp
imul
adc
cmpsb
in
xchg
sbb
adc
jae
add
xorb
lcall
mov
dec
cmc
lea
mov
push
lahf
jmp
ljmp
sbb
dec
jmp
out
iret
mov
mov
mov
push
icebp
call
mov
add
outsl
cmpsb
and
mov
push
ds
push
fbstp
and
repnz
adc
pop
stc
les
test
ret
mov
inc
clc
ret
pop
inc
mov
icebp
cmp
nop
fdivrl
fcmovnb
inc
in
xchg
cwtl
add
cld
push
outsl
push
xor
jge
xchg
ljmp
stos
gs
add
push
inc
push
inc
pop
push
in
mov
outsl
inc
and
and
sbb
xlat
push
sbb
rorl
lods
int
adc
sub
les
pop
add
ret
mov
mov
dec
mov
jp
ret
xor
sub
lds
sbb
dec
xor
inc
test
or
cmpsb
sbb
jl
in
xchg
cmp
int
repnz
je
pop
mov
fwait
ljmp
push
fisubl
sti
cmp
or
aaa
pop
jecxz
sbb
js
mov
jo
sti
repz
popa
scas
shl
xchg
adc
mov
inc
cmpsb
cmp
divb
sub
jbe
push
sub
lcall
xor
and
and
movsl
jmp
jae
insb
cwtl
lcall
push
lahf
cmc
add
push
sbb
out
cmp
or
leave
fwait
lcall
stc
push
pop
or
sahf
lret
pop
imul
and
aad
ja
stos
inc
and
dec
xchg
pushf
jns
divl
add
imul
jno
fwait
mov
cmp
mov
cmp
pusha
out
rolb
mov
pop
bound
cmpb
insb
popa
jle
inc
push
fcoms
ljmp
bnd
std
dec
movsl
mov
insb
push
mov
ljmp
jae
mov
or
sbb
stc
jno
inc
nop
cmp
xlat
push
fbld
xchg
movl
or
mov
fwait
dec
movl
mov
ljmp
cmp
std
sbb
notl
sbb
stos
pusha
neg
gs
cs
lea
pop
jl
aas
add
and
rolb
das
add
adc
pushf
xor
enter
iret
leave
pop
or
mov
adc
mov
leave
sub
or
cmp
repnz
movsb
add
xor
cmp
test
scas
or
gs
loope
xor
outsb
dec
pop
add
xor
cmc
icebp
add
test
je
mov
jl
das
inc
jle
or
jmp
movsl
cwtl
outsb
movsb
cmc
in
jae
and
outsl
aas
fdivr
leave
test
stc
xor
insl
cmp
sbb
push
aam
sti
push
cmpsl
sub
dec
push
add
aaa
jg
pop
push
loop
sbb
stc
mov
data16
lret
ja
pop
xchg
and
mov
outsl
or
mov
sub
dec
jne
testb
pop
test
fldcw
sub
andl
cmc
lock
and
xor
cmp
ljmp
pop
pop
push
movntq
out
pop
out
adc
ret
mov
sub
clc
pop
dec
add
mov
jb
jge
sbb
mov
mov
xchg
sbb
repnz
cmp
cltd
loop
addb
push
xchg
out
inc
jae
in
or
sti
ret
cmp
mov
mov
cmpsb
sbb
js,pn
sti
sbb
lret
cmpsl
jmp
jo
cmpsb
stos
sub
mov
shlb
mov
inc
inc
fneni(8087
mov
addr16
lahf
cmp
and
mov
fwait
mov
and
lahf
daa
fnstcw
orl
mov
pop
push
inc
das
and
inc
mov
xchg
dec
ffree
in
faddl
pusha
sub
push
int
dec
jmp
push
xchg
mov
xor
pop
js
dec
jns
adc
fmull
call
adc
movsl
out
in
sbb
aam
gs
iret
xor
or
and
cld
and
movsb
nop
lock
add
and
rorl
mov
push
pushl
arpl
jle
imul
cwtl
cs
mov
in
inc
inc
movsb
dec
lcall
push
and
xchg
test
jmp
mov
inc
jae
into
mov
jmp
scas
cmp
or
pop
sub
cli
push
popf
adc
subb
cld
movsl
or
lea
cld
sarl
xor
pop
ja
dec
sub
dec
or
push
dec
ja
inc
pop
pusha
xor
inc
push
sbbl
push
jl
ds
arpl
inc
lret
pusha
xor
pop
xor
loop
inc
sti
rcrl
jbe
pop
jno
mov
sbb
pushf
scas
fsts
sub
jno
leave
inc
nop
cmp
dec
mov
mov
std
or
pop
sti
and
push
inc
or
add
add
lahf
jp
cltd
ljmp
stc
adc
jne
movsl
or
dec
push
stos
cmp
popa
call
xorl
cmp
dec
push
in
ret
add
mov
mov
movsb
adc
xchg
dec
nop
shlb
mov
jbe
fidivrl
jne
pusha
push
aam
movsb
or
lods
test
push
cltd
add
cmp
mov
jle
lahf
add
or
mov
cmpsl
mov
cmp
je
mov
imul
xchg
loop
test
and
popa
add
dec
push
pop
movsl
cltd
pop
mov
sbbb
sbb
push
jae
ja
inc
sub
pop
or
cwtl
in
fs
adc
cltd
xchg
mov
mov
cs
iret
insl
jle
in
mov
push
pop
jl
out
sbb
add
xor
es
adc
neg
cmp
test
test
mov
add
and
adc
add
shlb
int3
sbbl
lds
mov
cmp
adcl
inc
mov
ficomps
and
or
push
push
fisubl
movsb
aad
xor
xchg
jle
lods
and
and
pop
es
incl
fadds
add
std
data16
jmp
xchg
subb
cwtl
aam
push
jns
jmp
loope
je
push
dec
rcll
icebp
jae
mov
stc
jmp
test
and
jl
jno
cmp
mov
jmp
cmc
stc
fdivrs
icebp
xlat
dec
xlat
or
bound
lods
insb
inc
push
cmp
dec
pop
repz
xchg
out
mov
mov
cs
loop
rorb
cmp
push
cwtl
aaa
or
mov
not
mov
and
jge
rolb
push
cmp
sbb
aad
in
add
ljmp
jne
popf
pop
xchg
ljmp
lret
and
mov
inc
xchg
dec
loop
sar
stos
insl
into
xor
add
rolb
in
cltd
mov
in
cmp
adc
popf
jno
cmp
sysenter
jg
lock
faddl
mov
cmpsl
loopne
sbb
rcrl
push
cltd
or
jp
adc
lret
inc
push
push
inc
fcoml
clc
dec
pusha
pop
hlt
lahf
xor
xor
inc
sub
inc
push
mov
or
jno
sub
mov
cmpsb
jae
sub
add
ja
mov
push
xchg
cmpsb
cmc
out
les
xor
aas
and
ljmp
add
popa
sbb
mov
ja
adc
std
cmc
and
divl
pusha
addr16
mov
dec
aaa
add
cli
or
jp
js
xchg
jbe
daa
lcall
xchg
testb
xor
mov
jno
mov
push
dec
int3
dec
push
add
mov
negl
xchg
rol
or
lcall
cli
enter
adc
fbstp
rol
gs
fnsave
bound
push
aam
xchg
shlb
mov
or
dec
sbb
xchg
das
xchg
and
jmp
sti
ljmpw
push
cmpl
mov
fwait
orl
cmpsb
and
pop
xor
call
push
bound
cmp
aas
mulb
and
push
mov
add
popf
adc
std
fldln2
xchg
dec
sbb
push
mov
inc
scas
testb
pushf
in
shlb
fisttps
push
ret
decl
iret
aaa
push
add
pop
pop
jne
cwtl
inc
dec
les
push
xor
leave
xor
aam
mov
jne
xchg
adc
sub
inc
mov
fnstsw
dec
fcoml
mov
push
int3
cmp
cltd
stos
nop
xor
in
xor
sub
xor
cwtl
out
mov
push
jecxz
add
add
mov
rclb
jp
es
ss
pop
and
mov
ljmp
insl
cmp
push
std
inc
ja
stos
mov
mov
xor
mov
sarl
xor
mov
aas
push
add
int3
cmpsl
inc
jmp
nop
sub
adc
xchg
in
dec
xchg
insb
scas
mov
xor
cmpsl
sti
inc
cltd
sbb
or
out
and
std
es
cli
hlt
outsl
jb
xlat
clc
in
mov
cmp
loop
pushf
stos
jmp
mov
lret
loope
sub
cwtl
inc
test
xor
jmp
cld
sbb
inc
adc
mov
jne
cmc
and
lret
daa
xchg
cmp
add
cmp
jne
fsts
ja
xchg
fistpl
mov
cmpsb
das
inc
test
das
cmp
shll
mov
sahf
fstpl
cwtl
push
adc
test
pop
int3
xchg
lea
ds
shlb
or
dec
ficomps
mov
lods
test
negb
cmp
or
adc
mov
and
mov
mov
cmp
out
pop
sbb
ljmp
xor
clc
and
cld
mov
addr16
mov
pushf
cmc
mov
out
ja
movsb
mov
mov
jbe
and
fldl
movsl
cmpsb
push
pusha
lock
pushf
cmpsb
cli
decl
lahf
push
repz
add
lock
add
outsb
pushf
push
fisubrs
mov
and
mov
adc
sbb
jbe
sbb
outsl
pop
xchg
pop
jl
push
pop
adc
sub
popa
lds
xor
gs
scas
and
sahf
lds
mov
out
fistpl
shl
xchg
cmc
ds
sti
call
in
mov
sbb
bound
inc
cld
push
out
scas
push
test
pop
and
pop
pushf
cmp
sar
pop
data16
push
push
mov
lahf
cmovnp
jg
mov
hlt
negl
sbb
sbb
out
push
adc
daa
mov
iret
cmp
cld
call
sahf
je
inc
mov
lret
std
dec
jns
rorl
jl
inc
mov
in
or
clc
lcall
pop
or
mov
and
push
pusha
and
cltd
enter
push
test
xor
mov
cli
es
mov
fcomi
add
push
daa
cmp
out
stos
std
or
pusha
sub
cltd
cmp
or
lods
daa
inc
nop
mov
lahf
aaa
adc
in
push
and
xor
shrl
add
daa
mov
cmp
icebp
push
lea
daa
and
xchg
addr16
adc
xor
mov
mov
into
add
loopne
or
dec
inc
lea
mov
repz
add
lea
push
aam
sbb
add
pop
cmp
inc
or
std
ja
and
sub
cli
fisubs
mov
lret
clc
xchg
mov
and
fucom
lods
imul
add
add
stos
mov
cmovle
pop
aas
rcll
stc
not
jge
cmpl
insl
das
shrb
mov
add
pop
sti
sbb
movsb
mov
add
mov
xlat
or
scas
or
scas
and
aad
xchg
icebp
sub
daa
lods
in
sarb
xor
cmc
std
and
pushf
jns
inc
mov
sub
fwait
mov
cmp
ja
iret
test
add
shrb
test
inc
cmpsl
mov
mov
dec
mov
jbe
test
cmp
leave
imul
sti
sub
and
in
xor
push
cltd
sbb
mov
push
int3
sub
es
xor
das
add
ja
sub
inc
mov
add
jae
and
jno
push
push
sahf
icebp
scas
mov
jl
popa
sbb
rolb
das
out
cwtl
sub
xor
imul
mov
ret
in
cmp
mov
add
cmc
xchg
std
imul
mov
in
insb
inc
adc
rcrb
or
iret
xor
neg
cmp
test
mov
cwtl
lcall
push
popa
cs
mov
mov
jg
popf
mov
rol
jne
cli
jne
jne
outsb
cmc
jb
popa
inc
faddl
test
xchg
lods
je
scas
fdivs
pop
mov
outsb
call
jne
sbb
adc
mov
sbb
and
jmp
repz
add
sub
jne
sbb
adc
fdivrs
std
lahf
cmc
mov
icebp
lret
repnz
xor
pushf
and
mov
cmc
add
sub
mov
push
stos
ljmp
std
clc
mov
mov
xor
xlat
xor
sbb
dec
xor
fstl
push
cmpsb
jno
and
lods
adc
push
fwait
push
imul
mov
cltd
jns
and
pop
sub
mov
or
arpl
adc
divb
ds
cmp
pop
and
push
sub
mov
leave
cwtl
mov
test
sbb
arpl
cmp
js
mov
lods
cmc
sub
push
ret
xor
out
aaa
nop
movsl
scas
or
clc
sub
push
sbb
or
std
hlt
inc
fwait
movsl
call
movsb
gs
and
push
test
shlb
movsl
nop
cltd
add
mov
mov
rcrb
mov
inc
xor
inc
mov
nop
into
push
pop
ja
inc
rclb
or
in
push
pop
cmp
in
mov
js
movsl
sbb
mov
xor
xor
cwtl
mov
dec
cmp
cmc
pop
sbb
mov
mov
pop
clc
xchg
cwtl
sub
add
or
icebp
xor
cmc
in
and
mov
cmc
ljmpw
cs
out
jmp
shl
cmpsb
es
xorb
cltd
in
cmpsl
adc
in
jmp
pop
push
mov
add
sub
jo
adc
sti
xor
mov
inc
push
enter
add
or
test
clc
jnp
jbe
fnsave
sub
dec
lods
movsb
nop
adc
mov
mov
xor
movsl
int
stc
xchg
into
icebp
sbb
cmp
push
mov
and
xor
xor
dec
pushf
and
mov
jo
in
lods
sbb
sbb
xor
dec
jae
inc
addr16
jae
pop
add
popf
mov
fwait
jmp
mov
dec
std
mov
xchg
cltd
outsb
fcmovnb
push
test
imul
jbe
repnz
orl
lahf
popa
pop
pop
xchg
and
or
test
dec
mov
out
mov
movsl
lcall
data16
mov
in
mov
insb
and
jnp
mov
js
adc
sub
xor
or
jmp
cltd
outsl
cwtl
cmpb
mov
lods
push
add
pusha
stc
push
fcoml
repnz
add
and
in
in
divl
add
arpl
ret
pop
cld
test
jl
inc
adc
adc
sub
aad
imul
dec
orl
and
out
out
mov
adc
in
repz
mov
inc
jae
sbb
cmp
es
lret
mov
and
es
ja
in
xchg
loope
sub
add
and
dec
int3
mov
dec
popa
sbb
mov
and
adc
fabs
cwtl
pop
sub
inc
shlb
push
movsl
ljmp
dec
or
xor
push
add
aad
dec
add
sahf
ss
out
rcrb
add
dec
jmp
xor
pushf
call
mov
sbb
iret
inc
cmp
je
sar
and
lea
dec
mov
mov
outsl
inc
add
xor
movsl
divl
xor
dec
add
js
je
pop
adc
gs
aas
add
mov
shlb
repnz
add
js
test
adc
sub
and
mov
cmp
push
jno
mov
cltd
mov
dec
stos
imul
adc
sbb
insb
mov
cmp
sub
xchg
sbb
imul
subl
dec
and
clc
testl
imulb
ja
in
and
add
sub
movsb
testb
lods
fs
sub
cltd
sub
cmp
cltd
cmc
jbe
and
dec
int3
idivb
out
ds
das
sti
sti
dec
ja
in
int3
and
imul
fisubrl
mov
xchg
jns
je
push
pop
mov
out
push
jge
and
js
sbb
or
xchg
dec
pop
xor
xchg
or
push
add
dec
mov
jle
push
mov
adc
arpl
inc
inc
push
cmp
xor
ds
iret
cmp
cmp
int3
or
out
sbb
pop
inc
and
dec
je
cwtl
lds
sub
lcall
pop
lea
jbe
gs
mov
call
push
push
pop
fs
mov
push
cmp
ret
rorb
stos
rcr
and
dec
jb
out
popa
push
and
push
or
aaa
push
call
test
stc
mov
jmp
push
test
xchg
hlt
and
xchg
ffree
add
or
scas
pop
add
andnps
pusha
in
ja
inc
test
cmpsl
insl
pop
and
dec
add
and
dec
fimull
mov
jge
xor
int
jmp
mov
repz
lds
jge
xchg
xchg
mov
or
inc
push
adc
sub
sbb
cld
and
mov
and
jecxz
xor
xchg
mov
in
int3
cmp
and
push
cmc
add
mov
jp
fdivrs
add
imul
aas
das
adc
mov
cltd
lock
shr
mov
or
sbb
adc
push
cmp
out
and
out
sub
pop
lds
cmp
push
fwait
pop
lds
mull
and
es
xor
push
mov
loop
cmp
sbb
cmc
mov
dec
aaa
mov
ljmp
and
fs
xor
mov
mov
dec
jl
clc
push
loopne
mov
jecxz
mov
inc
mov
aaa
jle
adc
movsl
pusha
push
mov
push
add
imul
cltd
dec
dec
or
fsub
and
mov
add
ja
mov
fadd
movsl
cmp
add
add
sbb
mov
jne
mov
cmp
mov
cld
mov
ss
hlt
imul
aad
testl
xchg
mov
sub
cmp
imull
push
bnd
sub
loopne
test
jne
in
popf
or
fdivrs
imul
xlat
mov
es
push
adc
xor
scas
mov
addr16
add
test
stc
das
inc
add
push
sub
xor
pmuludq
lds
addr16
test
lcall
movsl
pop
das
in
test
add
fs
and
or
lock
sub
pop
int3
pop
dec
push
aad
sbb
sub
fwait
imul
sub
pushf
or
dec
sti
xor
mov
pop
pop
push
das
mov
add
xchg
push
orb
enter
outsb
push
test
and
aaa
or
pop
popa
insl
int
ljmp
sub
data16
and
dec
inc
out
pop
sarl
mov
push
imul
int
or
mov
out
xchg
adc
mov
ja
mov
adc
mov
cmp
pop
push
xrelease
enter
or
movsb
add
inc
call
jle
and
ja
sbb
notb
ds
or
sub
mov
and
xchg
jl
clc
in
adc
push
sbb
into
cmp
cmpsl
das
and
fstpl
das
imul
sub
imul
out
fdivs
jp
ljmp
inc
cmp
sahf
data16
mov
mov
mov
repnz
dec
add
movsl
lret
lods
pop
ss
and
push
add
add
xor
jae
push
pop
daa
jo
out
test
out
js
loope
jle
xor
daa
out
jae
mov
dec
mov
int
in
shrl
fiaddl
in
cltd
cli
cmc
adc
jne
inc
xor
lds
ja
jp
out
adc
sbb
mov
int
inc
scas
int
xchg
xchg
add
add
cmp
fidivrl
jp
sbb
lods
and
jl
add
testb
cmp
dec
lods
int
dec
daa
sarb
push
dec
aad
aas
cmpsb
nop
sub
std
call
sbb
inc
test
jae
in
push
je
cmpsb
and
imul
pop
test
out
sbb
adc
mov
ja
dec
sbb
int3
sub
push
adc
shl
pop
cmc
cmp
lds
lds
pushf
push
xor
cmc
pop
or
pop
gs
aad
or
sbb
aas
scas
in
sub
xor
adc
cmp
mov
inc
adc
sbb
sets
ret
loopne
push
pop
mov
sahf
loope
mov
xchg
das
aad
ds
mov
sub
mov
cli
adc
out
add
adc
push
cmp
icebp
sbb
daa
jp
sbb
mov
push
sub
hlt
mov
in
out
les
sbb
popf
xor
stos
add
dec
enter
sbb
jle
push
fistps
imul
xor
mov
dec
hlt
mov
mulb
cmp
inc
outsb
aam
pop
rcl
push
sbb
sub
cwtl
call
fsubs
mov
imul
and
pushf
sti
mov
cmp
mov
xor
test
test
add
push
mov
enter
imul
sbb
mov
jg
add
movsb
cmp
inc
xor
xor
fdivp
mov
or
fwait
xchg
stos
pop
adc
xor
jae
mov
cmp
mov
sbb
in
mov
dec
mov
sbb
rcrb
or
lret
lods
and
add
xor
dec
bound
iret
and
lds
push
and
jge
daa
dec
push
mov
test
cmp
pop
addl
movsb
push
aam
push
push
test
fs
adc
mov
sbb
pop
iret
sbb
cmp
xor
dec
push
lretw
sarl
rorb
adc
shlb
mov
xchg
inc
fldt
and
adcl
pop
cmp
inc
dec
icebp
inc
clc
lods
popf
in
xor
jecxz
push
pop
xchg
sbb
push
xor
fadds
sbb
test
push
scas
xor
xchg
pop
mov
out
scas
int3
xor
fdivrs
das
jg
mov
push
pop
sbb
mov
out
mov
push
xchg
lret
pop
xor
mov
lock
lock
notb
push
add
inc
out
or
push
ret
jnp
incl
and
sahf
sbb
imul
lahf
or
push
cmc
cmpsb
xchg
jecxz
adc
xor
enter
mov
cmp
or
dec
lods
inc
stc
adc
icebp
int3
in
xor
mov
loop
cwtl
mov
mov
insb
stc
cwtl
sub
daa
std
hlt
xchg
jo
das
ret
mov
cld
outsl
std
arpl
or
insb
and
add
mov
dec
je
cltd
jge
mov
fs
add
and
cli
adc
xor
jb
mov
or
fcmovnb
and
ja
test
mov
shlb
jle
sub
cmp
cmpsl
aaa
mov
loopne
mov
cli
dec
pop
add
dec
jb
mov
stc
lahf
or
imulb
sub
jecxz
push
std
out
mov
pushf
adc
out
sahf
xchg
aas
loop
mov
adc
push
xchg
push
mov
enter
sbb
pop
add
cmp
lock
add
adc
fisttps
pmulhuw
sbb
push
out
lcallw
inc
or
push
add
lahf
sbb
adc
out
push
cmc
or
cmpsl
popf
xor
cltd
addr16
and
xchg
inc
sbb
gs
lret
mov
insb
ds
outsl
setle
mov
jne
and
loop
test
push
ss
pop
xor
sarl
mov
test
push
ret
or
xor
add
pop
scas
cmp
movl
int3
stc
xchg
adc
add
mov
movsl
cli
and
lods
test
out
inc
test
cmp
push
add
adc
adc
dec
xor
add
push
sbb
sbb
pusha
out
push
inc
rolb
cmpb
push
and
out
mov
and
mov
jle
cld
cld
mov
push
outsl
inc
inc
pop
out
nop
jb
popf
aad
dec
aam
mov
xor
push
mov
pusha
fsts
push
xor
ficoms
addr16
movsl
lcall
and
lahf
cmp
insl
adc
inc
test
xchg
and
ss
sarb
ja
repnz
popa
loopne
xor
rorl
adc
pop
out
jne
std
cmpsb
mov
cltd
loop
or
ja
aas
xchg
fstps
out
push
cmpsl
push
add
das
xlat
out
mov
inc
push
fwait
stos
push
lock
sbb
movsb
push
adc
pop
gs
in
pop
or
mov
jl
xor
testb
xchg
aas
inc
and
pop
testb
ds
stc
ds
pusha
add
in
inc
xor
sub
xor
sbb
arpl
fstps
cmp
and
jecxz
xchg
lock
hlt
dec
sbb
pop
inc
ret
stc
pusha
loope
ja
mov
sub
fisttpll
filds
pop
test
les
push
cli
pop
adc
and
mov
mov
es
ss
lret
push
adc
ret
dec
and
pop
jge
iret
dec
push
cltd
fcomip
mov
xchg
in
sub
jg
sbbl
in
dec
jmp
fcmove
sbb
cltd
int
xchg
shlb
in
imul
fnstenv
sbb
push
pop
andb
jae
xor
push
adc
pop
daa
mov
nop
cltd
xchg
sub
dec
adcb
mov
pop
testb
and
js
or
push
cmc
mov
pusha
mov
push
test
insl
mov
and
rorb
mov
std
push
lock
mov
aas
sub
add
daa
es
lds
hlt
push
std
or
sub
roll
mov
std
inc
dec
mov
std
movsl
dec
push
sub
imul
scas
and
jmp
add
mov
pop
add
mov
inc
fmul
pop
xchg
movsl
movsl
add
fucomp
inc
pop
dec
mov
and
out
cmp
xchg
lods
inc
fdivl
mov
xor
jo
fnstsw
dec
mov
mov
jnp
mov
xchg
mov
add
dec
int3
inc
imul
mov
pop
data16
adc
sbb
adc
mov
and
push
add
cltd
or
jp
adc
mov
push
mov
sbb
cmp
jg
push
mov
fs
sbb
out
jae
icebp
and
or
mov
lret
out
mov
enter
pop
push
popf
je
add
ss
sahf
iret
cmp
pop
xor
mov
add
movsl
test
mov
loopne
push
or
pop
pop
aam
insl
xor
jp
cmp
mov
lods
into
dec
repz
push
add
or
imul
mov
pop
xlat
movsl
sub
dec
xchg
in
mov
sub
adc
jae
inc
lds
push
jle
jae
lret
sub
mov
aad
enter
xor
jbe
int3
pop
xchg
sahf
loopne
pop
cltd
mov
jae
pushf
dec
je
mov
icebp
movsl
push
mov
and
push
jns
stc
out
aam
loope
lods
push
push
push
nop
incb
pop
rolb
int
sahf
xorl
mov
mov
insl
test
mov
icebp
je
xchg
sbb
stos
clc
ss
dec
xor
jo
bound
stos
and
loope
dec
gs
pop
pop
jp
fnsave
shll
call
fs
pushf
mov
lret
fcomp
cmp
dec
adc
sub
insl
pop
push
insl
cld
jmp
jge
imul
add
pop
enter
into
stos
cmpsl
fdiv
mov
ljmp
clc
add
adc
in
test
jno
pop
sub
and
xlat
inc
dec
fsubl
xor
push
push
or
lods
sbb
push
pop
and
lret
mov
sub
push
test
and
push
lock
mov
insl
sbb
add
and
mov
mov
mov
shrb
and
inc
iret
iret
pop
sbb
push
mov
pushf
ljmp
addl
pop
in
movsl
mov
cmp
xor
in
out
sub
ds
dec
jg
xor
xrelease
mov
loope
fldcw
mov
and
xchg
cmp
jns
ret
or
adc
lahf
incl
imul
and
aad
dec
nop
arpl
mov
jbe
arpl
jmp
sub
std
movsl
and
mov
xor
mov
pop
jp
enter
movsl
add
or
movsl
ja
cmp
inc
xchg
add
cmp
lret
lock
mov
pop
inc
sbb
cmp
jmp
sbb
in
lea
scas
push
ja
jbe
lret
sbb
adcl
aaa
or
xchg
in
inc
daa
xchg
add
lock
pop
lods
inc
inc
in
popf
add
jns
fmuls
daa
test
popa
fcmovnbe
pusha
lahf
add
addl
cltd
lods
test
ret
fst
xchg
in
repnz
pusha
pop
mov
xor
sbb
outsl
dec
jmp
push
mov
adc
divb
jno
dec
mov
or
xchg
fldt
aaa
daa
mov
scas
push
outsb
adc
and
lsl
fstps
xchg
pop
sub
cmp
dec
mov
dec
pop
test
test
insl
int3
jmp
push
mov
mov
movsl
adc
cli
inc
xor
sbb
mov
add
dec
jg
dec
cmp
mov
and
insl
dec
ds
cmpsl
push
push
call
and
and
shlb
aam
jle
mov
shrl
insb
scas
lds
jl
or
and
and
ficomps
adc
and
lds
cmp
add
jo
cmc
cld
movsl
in
dec
idiv
fs
fsub
fiadds
sbb
mov
pop
loop
lods
jge
movsl
scas
insb
adc
mulb
mov
es
repnz
rolb
mov
inc
mov
in
add
or
dec
ss
das
mov
add
and
rcr
mov
pop
jbe
cmp
jns
fiadds
sbb
xchg
dec
dec
cmp
push
xor
or
icebp
je
clc
cli
loopne
stc
dec
mov
fs
pop
mov
push
mov
neg
lahf
lds
fwait
sbb
in
mov
in
jo
jns
jne
lcall
cmp
pop
mov
fwait
inc
cli
xor
jb
popf
xor
inc
fcoml
cmp
xchg
mov
insl
ss
and
xor
cmpsl
aad
cmc
inc
sbb
cmpsl
dec
add
int3
gs
mov
jp
add
test
shrb
pop
adc
mov
insl
insl
fdiv
mov
inc
clc
jg
push
loopne
xchg
and
int
mov
das
aad
arpl
popa
les
scas
cmp
shl
rcrl
xor
ja
clc
and
insb
iret
ret
stc
push
mov
mov
add
mov
mull
adc
cmc
decb
dec
imul
int3
and
push
adc
mov
or
loop
and
div
jb
ret
shl
adc
dec
loope
push
clc
cmp
and
pushf
std
mov
gs
inc
mov
push
scas
stc
xchg
in
std
in
add
xchg
and
inc
xchg
jnp
std
jmp
xor
mov
mov
movsl
mov
mov
and
mov
pushf
data16
cld
shl
or
out
xchg
jecxz
test
out
mulb
add
inc
in
shl
jbe
push
mov
jae
gs
push
mov
sbb
stc
sbbb
movsb
enter
add
mov
push
dec
ss
jge
push
nop
je
cmp
mov
push
jg
mov
inc
aam
cmpsl
inc
rcrl
add
sbb
sti
pop
out
shl
lret
xor
lea
adcb
ds
test
jb
xchg
adc
mov
clc
and
pop
mov
pop
mov
pop
mov
xor
cltd
mov
mov
rcrl
subl
cmp
mov
stos
movsl
idivl
xor
cmp
mov
add
imulb
xchg
push
fidivl
xchg
mov
jo
pop
divl
mov
ljmp
and
push
pushf
sti
lcall
aas
mov
cwtl
lock
movsb
shll
push
sub
dec
adc
daa
or
sub
jno
xor
data16
std
ja
mov
int
and
cwtl
add
das
cmpsl
insb
call
bound
data16
and
ja
and
movsl
mov
mov
inc
jl
cwtl
idivb
mov
sbb
sub
popa
call
ljmp
mov
cwtl
or
xlat
and
aad
data16
ret
std
sbb
mov
subb
mov
sbb
test
nop
negb
jl
xchg
push
jecxz
push
clc
in
out
aaa
adc
mov
inc
std
or
adc
repz
xor
cmpsl
test
ret
dec
adc
in
add
stos
cwtl
pop
jl
xchg
fwait
pusha
pusha
imul
call
push
and
cmc
movsb
int
mov
and
push
lock
mov
pop
sahf
ja
adc
cwtl
xor
pop
aad
out
loopne
fcompl
dec
cmpsb
inc
jb
jbe
pop
xor
add
cltd
loop
sbb
xchg
shl
lods
and
push
in
push
mov
sti
shll
mov
sbb
sub
add
push
call
mov
mov
adc
jmp
repnz
test
jg
repnz
in
dec
jecxz
sti
call
jnp
repz
lahf
or
mov
sbb
adc
std
ffree
es
adc
lods
pop
sbb
cmp
cli
sub
std
dec
mov
jmp
mov
sti
pop
xchg
test
rorb
mov
sub
in
dec
lahf
sbb
add
ret
je
inc
fstpl
push
xor
lock
mov
rol
sbb
mov
adc
dec
and
sarb
in
jne
inc
add
mov
and
out
daa
or
add
add
pop
inc
outsl
fdiv
adc
and
adc
jo
insl
insl
fdivrs
mov
mov
repnz
clc
enter
jne
push
xchg
movsb
dec
leave
sbb
xchg
jns
int3
push
jae
loop
sbb
cmpsb
test
pop
stc
int3
call
push
add
jmp
shl
xchg
pop
aad
es
mov
inc
jecxz
add
iret
aad
cmp
es
cmp
daa
cmp
inc
jecxz
fcmovbe
or
lds
pop
ja
stc
sub
cmp
mov
xor
mov
or
lods
adc
xchg
and
icebp
inc
push
xchg
sbb
pushf
inc
test
add
jbe
pop
mov
push
ss
std
es
es
in
sub
movb
cmc
xchg
cmc
lea
cmc
mov
sbb
cld
or
adc
jl
fs
mov
int
pop
mov
xor
jl
and
xor
mov
stos
or
push
inc
cmpsl
push
gs
and
mov
and
add
je
sub
in
js
sbbb
and
popf
mov
and
add
sahf
xor
mov
std
lods
mov
and
add
mov
inc
pop
scas
and
std
es
and
add
mov
and
std
adc
dec
and
add
mov
bound
add
xchg
xor
pop
and
cmpsl
mov
and
add
xor
gs
data16
and
std
ss
and
add
mov
and
lds
add
mov
xchg
mov
insl
push
cmp
addb
and
cmp
popf
data16
xlat
adc
add
mov
inc
outsl
xor
add
mov
lahf
mov
inc
cs
mov
and
add
mov
and
std
cmpsb
mov
and
add
mov
xor
mov
je
xor
in
and
jecxz
inc
aaa
jecxz
jmp
iret
std
jbe
ss
xor
and
lds
and
and
daa
push
inc
add
and
mov
add
jg
pushf
shlb
movsl
and
std
outsb
mov
and
add
mov
and
scas
pop
cmc
and
dec
ss
ficomps
and
add
mov
and
in
or
and
outsb
and
jecxz
or
or
cmp
je
lods
sbb
out
cmp
lods
push
jecxz
and
std
add
mov
out
and
xchg
mov
and
add
mov
and
and
movsl
mov
mov
and
add
xor
fsubl
or
inc
mov
and
add
mov
xor
and
xchg
inc
mov
and
int
std
mov
xor
mulb
ds
xchg
aaa
mov
inc
cmp
inc
aaa
and
mov
xor
add
fs
mov
std
xor
es
ss
inc
push
daa
cmpb
test
aad
adc
xchg
and
and
add
cmpsb
inc
inc
movsb
pop
sub
and
std
add
add
mov
inc
inc
ret
and
loope
and
and
add
mov
and
sbb
adc
add
and
add
sub
cmp
dec
cwtl
push
out
aas
push
add
daa
je
add
jne
mov
es
pop
mov
and
add
mov
ja
xor
out
xchg
std
dec
mov
and
add
cmp
lods
insb
and
add
mov
and
std
mov
jne
pop
push
mov
and
xchg
aas
mov
and
push
mov
and
add
xor
xchg
and
push
add
mov
and
std
test
jecxz
and
or
inc
cmp
and
xchg
negb
js
jg
mov
xor
hlt
ljmp
cmp
lret
push
stos
shlb
inc
aas
inc
and
xchg
std
xlat
test
les
adc
fst
cmp
dec
rolb
dec
fwait
andb
call
dec
inc
dec
mov
in
dec
enter
xor
call
inc
sub
jg
ja
jnp
sub
mov
dec
cmp
in
lahf
xor
xchg
push
ja
pop
xlat
in
xor
cmp
cld
jno
inc
iret
inc
xchg
xchg
ret
mov
xabort
dec
sub
addr16
or
stos
cs
fisttpl
mov
clc
insb
mov
pop
mov
lcall
or
out
icebp
jle
arpl
pop
push
hlt
cmpsl
adc
in
adc
jl
jnp,pt
out
dec
fistpl
lds
sub
xchg
dec
xchg
ljmp
sub
jg
push
mov
push
or
mov
aaa
adc
movl
or
pop
das
sub
cs
and
sbb
mov
pushf
cmp
inc
xchg
adc
mov
mov
xor
mov
sbb
add
lds
mov
imul
jg
pop
cmp
jge
pop
inc
cs
insl
imul
nop
lods
pop
mov
add
or
mov
xchg
mov
je
mov
push
cmp
xor
or
ljmp
incl
movsb
mov
mov
sbb
rcl
xor
sub
pop
cmc
mov
jle
cld
pushf
popf
clc
repz
mov
dec
lea
push
mov
sub
aas
xor
cmp
mov
in
call
adc
scas
test
inc
inc
cld
push
add
jecxz
les
movsb
and
add
lods
sub
pop
add
clc
sbb
cmp
push
cli
data16
leave
fistl
and
adc
mov
ja
push
or
lods
imul
dec
outsb
xchg
test
pop
stc
xlat
stc
cli
push
lods
in
sbb
add
mov
mov
popf
and
sti
enter
adc
and
les
xor
sub
xlat
in
jae
dec
pushf
xor
inc
outsb
mov
roll
hlt
arpl
shl
enter
xor
adc
frstor
xor
adc
aaa
lea
lahf
aaa
sub
mov
jmp
frstor
sbb
in
cld
les
pushl
lahf
or
int3
cmp
jnp
pop
jns
in
lahf
push
in
fcomp
call
imul
ret
fwait
pop
mov
mov
loope
xchg
rolb
mov
sbb
icebp
pop
mov
jl
sub
mov
loopne
loopne
cli
stos
fdivl
enter
les
pop
pushf
clc
fidivrl
mov
ret
cmp
xchg
in
xchg
in
outsl
std
cmp
ss
cmp
insb
shll
pop
and
lods
mov
stc
mov
aas
cmp
or
xchg
mov
loope
fistpll
divb
mov
add
aas
pop
lods
sbb
cmp
adc
and
aam
mov
xor
fdivs
cmpsl
xchg
jl
pop
xorl
mov
xchg
or
add
outsl
adc
out
lods
fcmovb
orb
or
leave
repz
dec
shl
sbb
outsl
xchg
xchg
shl
xchg
fildll
mov
outsl
or
mov
inc
cld
jbe
sub
mov
shlb
pop
stos
mov
imul
xlat
add
xchg
adc
xor
aas
jb
jo
mov
out
pop
or
mov
mov
mov
test
addr16
imul
addr16
jae
outsb
add
cmpsl
loope
jno
insl
subb
cmpsl
adcl
mov
cmpsb
inc
xor
mov
jnp
aam
notl
xlat
mov
or
int
sub
sbb
call
and
push
mov
xchg
cltd
movsb
in
and
es
les
push
loope
xlat
hlt
insl
sti
lock
mov
cmp
rolb
mov
jl
ja
popf
fwait
out
out
push
and
je
loope
jmp
or
mov
std
shlb
cmp
gs
cld
sub
mov
in
mov
out
mov
inc
sarl
in
cmp
mov
outsl
cld
mov
lea
fs
adc
js
je
mov
std
add
push
xchg
into
std
icebp
mov
fdivl
xchg
addr16
es
mov
ret
jp
je
ja
lods
in
push
out
int3
mov
xor
mov
and
xchg
movsb
andb
adc
jle
sbb
es
inc
dec
jnp
lods
mov
adc
aad
mov
jle
lock
std
aaa
fs
xchg
pop
dec
ret
sbb
pop
mov
adc
jle
loop
xlat
mov
test
insb
sti
xchg
movsb
jbe
push
idivl
cmpsl
inc
fnstenv
xchg
pop
test
roll
dec
and
pusha
mov
pushf
adc
inc
subl
jmp
stc
int3
mov
jg
cwtl
repz
gs
cmp
int
popf
xchg
and
push
sbb
adc
aam
popf
cld
dec
in
add
xchg
and
add
push
adc
lds
hlt
or
ud1
pop
mov
add
sbb
mov
icebp
daa
hlt
sti
mov
aaa
in
cmc
jmp
sbb
hlt
push
add
and
or
sub
xchg
add
stos
cmp
mov
ret
iret
mov
jmp
jne
dec
push
mov
pop
paddusb
xor
xor
jp
aas
jne
lods
and
subl
sbb
fildll
stc
xor
mull
test
and
mov
fwait
or
jl
inc
cmpl
inc
clc
dec
cmpsl
mov
jbe
add
aas
idivl
cld
and
mov
cli
adc
adc
jbe
push
movsb
cld
lahf
push
adc
test
and
out
inc
and
int
in
add
and
cmp
arpl
cwtl
mov
cmpl
iret
jnp
and
xor
stos
adc
nop
lds
mov
mov
pop
mov
push
sahf
mov
jle
xor
push
cmc
mov
aas
stc
xchg
mov
leave
xchg
incb
ja
mov
mov
cwtl
loope
lock
ljmp
mov
adc
sub
in
fwait
es
xchg
xchg
dec
push
call
sarb
scas
sar
push
xchg
divl
testl
dec
cltd
mov
mov
cmc
lea
and
jle
fcomps
and
and
lret
mov
scas
jg
mov
cmp
push
lret
and
inc
sbb
aam
mov
sbb
adc
xchg
dec
and
test
xchg
data16
jae
xchg
mov
scas
adc
jae
and
push
inc
subl
mov
inc
cmp
mov
aam
mov
xor
jg
sbb
jb,pt
mov
jle
icebp
loopne
es
icebp
cmp
dec
std
sahf
adc
daa
lods
cmp
les
mov
orl
sahf
jns
and
mov
movsb
jmp
or
ffree
mov
ds
jl
loop
stc
lcall
sahf
es
mov
and
inc
test
pop
sti
stc
mov
gs
cmp
clc
push
sbb
sub
mov
add
jle
xlat
mov
adc
sub
into
cld
sub
cli
mov
lods
jae
scas
idivl
mov
jle,pn
ds
aas
xor
jge
sbb
jnp
cmp
repz
dec
movsb
filds
dec
fdivrl
mov
pop
add
mov
es
cltd
sbb
or
outsl
jmp
pop
rorl
xabort
xor
mov
test
loope
aas
xchg
add
and
adc
pop
in
or
subb
pop
mov
pop
fcoms
dec
xchg
negl
xchg
lds
or
ja
lods
arpl
sub
add
fs
inc
insb
jge
adc
stos
insl
cmpsl
jae
xorb
cmpsb
sbb
cmpsl
testl
out
xchg
mov
sbb
notl
mov
in
bound
ja
mov
outsl
mov
xlat
and
es
clc
ja
test
lret
ja
xchg
sti
inc
ja
cmc
in
dec
aaa
or
or
ds
cmc
outsl
mov
stos
push
and
xor
mov
cmc
pop
aam
pop
decb
pushf
mov
gs
das
fnstenv
aas
fnsave
mov
stc
add
cmp
mov
mov
roll
shl
fs
cmp
sbb
or
es
int
hlt
and
vpunpcklqdq
add
jg
imul
in
jo
jecxz
nop
sbb
mov
and
jle
or
jns
mov
stc
sbb
pushf
cmpsl
xchg
icebp
add
lods
mov
xchg
js
mov
sbb
mov
cld
aam
xor
sbb
jo
adc
std
cmp
or
ret
orl
mov
xchg
repz
mov
mov
xor
adc
movsl
ds
testl
pop
adc
icebp
add
and
dec
xchg
jbe
jl
cmc
arpl
cmpsl
test
push
mov
cmp
sbb
xchg
sbb
xchg
mov
int3
subb
pop
add
das
mov
popa
lea
mov
mov
sub
pop
push
pop
mov
icebp
leave
pushf
jno
pop
xor
lret
jbe
stc
xchg
push
cmp
icebp
or
and
fwait
add
jl
add
stos
mov
pop
add
cs
pop
test
mov
int
mov
xchg
inc
sub
cmp
inc
adc
pop
xchg
xor
jmp
or
jbe
lds
or
mov
loope
int
adcb
lock
enter
xor
popa
cmpsl
sbb
sbb
outsl
mov
push
inc
and
lods
cs
mov
out
sub
in
mov
dec
add
xor
mov
and
mov
jnp
mov
outsl
mov
pop
divl
mov
out
out
ss
jae
push
mov
mov
sub
lods
jb
ss
xor
sbb
mov
and
mov
fldl
das
xchg
enter
lea
jo
pop
mov
xchg
xchg
jnp
mov
sub
std
xchg
outsl
jl
cwtl
sub
and
lods
mov
mov
cli
sub
nop
ss
mov
xchg
or
aaa
mov
hlt
rorb
cmc
add
sbb
in
mov
stc
push
xchg
je
in
jp
sbb
movsl
xchg
pop
int
pop
out
pop
xchg
xchg
xchg
das
add
lret
arpl
cld
and
mov
insb
sbb
inc
repnz
mov
fs
sub
pop
push
mov
in
inc
fs
leave
jecxz
addb
shll
fs
and
and
xor
cmp
ja
aad
and
push
xor
mov
shll
adc
cmpsb
adcb
pop
cs
inc
ja
mov
pop
inc
mov
sbb
leave
add
in
jnp
fwait
fs
sti
and
movsl
into
sub
jge
push
adc
pop
jecxz
addl
adc
add
fdivrl
mov
mov
les
add
xor
aad
push
mov
fs
cmpsl
xorb
movsl
loopne
push
push
sbb
adc
add
push
adc
fs
fldenv
out
ret
es
xchg
jne
movsb
aam
adc
pushw
ret
xchg
andl
lods
addr16
jno
mov
hlt
rol
mov
xor
out
sub
and
mov
jle
leave
jecxz
and
addl
insb
mov
inc
in
in
ret
jg
xor
shl
and
and
push
inc
test
sar
js
inc
es
cmpsb
daa
add
movsb
repz
repz
addb
movsb
sub
pop
in
cmpsl
xchg
inc
mov
xor
shrl
stc
inc
rorl
in
xchg
fs
push
addr16
fs
xorb
cmp
aaa
gs
fcoms
decl
stc
inc
shrl
fprem
aaa
jo
stos
adc
xor
insb
popl
add
push
dec
sbbl
cmp
aaa
xor
add
push
xor
std
mov
add
and
xor
inc
std
xor
movsb
xor
imull
lret
cmpl
and
addr16
pop
int
sub
pusha
cld
movsb
es
pop
les
jae
push
int
out
sub
sbb
push
int
popa
cmp
popw
xchg
cmpl
movsb
and
notl
jg
add
cmpsb
add
cmp
int
sub
mov
add
shll
mov
mov
notl
xchg
or
jno
cmp
sub
std
pop
int
add
sub
sub
aad
xchg
int
lods
or
cmp
in
and
adc
in
call
and
cmc
and
jg
movsb
movsb
and
andb
scas
inc
clc
and
add
pop
mov
and
add
add
push
pop
add
mov
and
out
in
scas
and
xchg
and
aad
sub
cmc
es
bound
add
cmp
inc
out
cmpsb
mov
jg
vmovhps
and
xchg
out
inc
mov
addl
les
out
and
andb
mov
gs
loope
out
shll
cld
fs
out
mov
lds
jne
gs
sti
pop
mov
data16
arpl
and
mov
push
insb
inc
mov
xor
int3
flds
xorl
adc
sbb
divl
ret
int
scas
cmp
mov
and
divl
sahf
insb
pushf
add
sahf
dec
mov
in
aad
cmp
inc
cld
adc
hlt
pop
xchg
pop
ret
rorb
movsl
xor
shrb
xchg
les
inc
xor
or
mov
rcrb
fisttpll
pop
xor
sub
sub
aad
mov
testl
add
in
rol
cmc
lock
movl
adc
std
inc
fs
adc
jbe
nop
cmpl
mov
mov
pop
loopne
movsb
repnz
add
in
daa
add
cmp
mov
je
clc
dec
inc
xchg
cmp
xchg
es
outsl
mov
xchg
movsl
cmp
lock
xchg
xor
gs
xorb
mov
adc
mov
mov
loope
fldl
inc
dec
adc
mov
cwtl
push
adc
aaa
repz
pop
fdiv
or
lret
dec
xor
xor
xor
add
mov
xchg
test
push
lds
xchg
vpcmpgtb
inc
imul
mov
mov
fadd
add
shrb
aam
shl
cmp
mov
push
xor
adc
push
mov
cltd
and
push
inc
sbb
adc
and
or
pop
mov
push
ljmp
pop
sti
jne
inc
mov
xchg
les
arpl
rcll
ret
mov
inc
lret
push
and
out
rolb
stos
enter
add
test
inc
aad
daa
or
outsl
mov
movsl
sub
jbe
pop
ret
sbb
fidivrs
push
inc
enter
jl
xor
popa
sub
xchg
call
int3
xchg
loope
and
jnp
pop
fidivl
adc
mov
je
jle
repz
jg
in
inc
xchg
lds
stc
adc
sub
jnp
roll
aad
test
push
sub
add
dec
mov
aaa
xchg
adcb
xor
repnz
das
cmp
ja
mov
adc
cwtl
cmc
shl
sub
mov
jg
cmp
add
cmp
shlb
in
cmp
and
clc
xor
jo
addb
xor
mov
and
js
shlb
lods
add
lock
or
loop
mov
daa
sub
adc
out
in
and
std
mov
xor
mov
sub
jle
xchg
in
mov
xchg
and
je
add
movb
pop
stos
ja
jae
ja
shll
fs
xchg
jg
pusha
mov
cmpsl
sub
and
adc
fwait
add
lock
or
add
xor
mov
dec
repz
je
adc
xor
divl
push
clc
sub
and
jl
cmpsl
xchg
dec
es
jnp
movsl
lods
xor
push
mov
inc
pop
movsl
inc
aas
mov
jl
shl
adc
pop
and
cmpsl
xchg
add
lods
cmpsl
cld
mov
ja
fiaddl
adc
push
aaa
inc
xchg
lock
adc
and
sarb
mov
scas
in
sarb
mov
std
and
inc
cmp
xchg
es
es
jno
cmp
in
into
push
pop
mov
movsl
ss
cmpsl
je
mov
aad
aaa
inc
repz
mov
push
mov
mov
xchg
js
and
mov
mov
aam
or
popa
mov
mov
mov
cld
cmp
out
xor
xor
push
adcb
call
xchg
sbb
mov
out
xor
fnsave
fnsave
fcompl
enter
add
cld
inc
and
imul
xor
cmpb
xor
nop
int3
into
xor
rol
sarl
test
std
ffreep
mov
je
neg
test
inc
das
push
mov
jge
out
adc
pop
in
daa
notl
sub
or
hlt
enter
pop
cmp
pop
xchg
addr16
adc
xchg
cmpsl
movsl
xchg
adc
jb
mov
aad
cmc
test
mov
inc
jge
popa
jge
aas
adc
jl
ja
inc
xor
adc
lock
push
push
loopne
mov
inc
int
in
add
inc
inc
sbb
in
movsb
lds
xchg
mov
popf
add
mull
jmp
and
mov
adc
daa
loope
call
cmp
mov
or
in
jecxz
jnp
iret
and
or
bound
in
fcomps
loopne
jnp
rcrb
cmp
cmpsl
cmp
xchg
and
dec
lods
call
out
in
cli
orl
je
push
bound
fs
lds
sub
mov
sub
jecxz
and
test
in
int
in
inc
out
hlt
mov
ds
adc
addb
jmp
shll
sub
out
cmpsb
adc
out
cmp
mov
and
xchg
mov
xor
movsb
inc
lods
int
lds
pop
xor
mov
jg
popf
cmp
daa
jae
xchg
xor
iretw
add
xor
outsb
add
or
jg
in
orl
iret
inc
mov
push
ficomps
sbb
mov
mov
daa
mov
outsl
loop
cmpsl
sbb
add
jge
std
jae
and
mov
out
scas
das
and
fbstp
pop
cmp
pop
and
jg
fst
xchg
inc
outsl
mov
and
addr16
xchg
and
ja
imul
aam
mov
shl
mov
lds
jnp
dec
sub
xchg
imul
out
push
mul
test
mov
xchg
addr16
sbb
adc
popa
jg
jle
sub
clc
jae
in
inc
leave
dec
cmpsl
add
sbb
andb
xor
mov
jl
rolb
sbb
test
movsb
push
cmpsl
in
inc
leave
addb
out
leave
loope
rol
daa
andl
mov
roll
cmp
mov
stos
mov
data16
outsl
push
fs
data16
and
movsb
fdivs
push
add
addr16
pop
pop
xor
mov
and
int3
xor
cmpsb
pop
in
and
push
and
daa
jp
mov
inc
cmc
pop
lds
lds
aad
xchg
lds
jge
stos
xchg
mov
xchg
out
push
addr16
sub
scas
lahf
jle
or
test
hlt
aaa
lds
insb
mov
mov
jl
mov
les
nop
add
dec
mov
in
int3
lods
inc
xchg
mov
or
and
push
cmpsl
les
in
out
inc
push
inc
jge
sub
or
mov
sbb
or
mov
lods
call
mov
loopne
es
push
ficomps
xchg
cmpsl
idiv
mov
xlat
xor
pop
mov
arpl
test
in
jl
negl
retw
pushw
and
movsl
std
and
mov
test
sbb
mov
mov
in
mull
test
adc
xor
lds
mov
sbb
cmpsb
int3
xor
movsb
xor
in
scas
add
imul
mov
adc
adc
jl
and
mov
xor
adc
and
mov
fwait
imul
pop
or
clc
push
fsubrl
jae
test
rclb
push
subb
notl
adc
mov
and
mov
xchg
clc
mov
mov
mull
pop
or
pop
mov
das
and
add
pop
in
pop
repnz
pop
aaa
push
stos
inc
adc
mov
movsl
popf
jne
gs
nop
and
cmp
sub
mov
inc
add
or
mov
and
cld
mov
dec
adc
xor
push
adc
xchg
xchg
xor
xor
stos
mov
dec
sub
pminub
loopne
xor
jg
sbb
mov
jl
sbb
lods
jle
jge
mov
js
int
aaa
cmp
mov
sarb
aas
jno
pop
mov
inc
push
xor
clc
add
movsb
inc
loopne
mov
push
dec
clc
and
fs
mov
out
cmpsl
fwait
sub
lds
mov
mov
cmc
test
test
cltd
add
pop
push
lds
add
mov
pop
cld
fbld
in
push
loopne
push
addr16
sahf
cmc
nop
dec
xchg
movsl
icebp
xchg
mov
mov
inc
cmc
jmp
xchg
mov
fs
cmp
mov
mov
dec
cmpl
dec
xchg
mov
push
xor
xor
mov
ret
in
xchg
or
divb
and
sbb
cmp
es
mov
dec
je
cld
adc
int3
mov
daa
xor
dec
shrl
in
movsb
stos
aaa
mov
cs
push
ljmp
push
lds
adc
or
or
lcall
xor
into
test
push
pop
cmpsl
mov
movsl
out
das
add
out
adc
xchg
int3
adc
mov
test
loope
gs
mov
test
cmp
jns
mov
add
aas
shl
packuswb
mov
inc
in
and
mov
pop
aam
ret
in
nop
pushf
cmp
cmpsl
js
aam
repnz
cmp
aam
fwait
cld
ljmp
xor
mov
in
scas
xchg
xchg
jg
lods
ja
xor
std
and
push
add
xor
mov
roll
add
cmp
pop
test
cmp
and
ss
cld
push
in
dec
rcll
mov
or
pop
xchg
fyl2x
cmp
imul
adcb
out
xchg
test
pop
mov
cmp
add
fiaddl
push
sbb
push
mov
mov
and
imul
in
xchg
mov
js
je
jo
insb
mov
cld
mov
adc
repnz
popfw
mov
es
inc
movsb
in
test
std
and
and
jge
mov
xchg
ja
sbb
cli
mov
cmp
cmpsb
sbb
push
inc
ss
xchg
xchg
sbb
lds
and
push
les
popw
inc
popa
mov
mov
or
cmpsb
and
inc
mov
jb
push
movsl
sub
xlat
mov
and
fs
jecxz
and
in
movsl
gs
jo
xchg
out
les
jne
inc
mov
mov
sub
or
cmpsb
add
out
cmp
test
cmc
mov
mov
or
gs
jg
pop
pop
fs
fs
sub
les
shl
fs
in
and
inc
add
add
daa
scas
pop
cwtl
add
cs
add
cmpsb
in
add
addr16
mov
subl
add
cmpsl
repz
jecxz
sbb
mov
or
nop
dec
mov
cmp
imul
in
or
or
add
nop
mov
xchg
inc
ret
xor
and
repnz
sbb
sbb
movsl
out
adc
repz
xchg
xor
mov
in
dec
scas
mov
inc
aam
push
xchg
ss
loope
add
std
les
mov
xor
loope
out
cmp
adc
enter
test
inc
cmpsl
add
sbb
ja
add
xor
std
and
add
add
xor
shl
add
xor
fldenv
mov
aad
push
call
add
std
pop
mov
and
add
mov
and
movsb
xor
cmp
and
xor
ss
and
cmc
and
stc
sub
mov
shll
and
adc
jo
add
mov
in
clc
and
loopne
push
xchg
adc
xchg
sti
xchg
add
mov
jbe
inc
and
cmp
adc
add
mov
ret
aam
mov
xchg
stos
cwtl
push
testl
in
icebp
adc
ss
cmpsl
enter
adc
jnp
xor
shlb
inc
int
leave
pop
and
std
addr16
sbb
pop
jns
add
and
mov
testl
das
jae
xchg
incl
jl
xchg
sbb
sub
add
cmp
add
inc
xor
inc
std
sub
mov
and
add
in
and
in
and
cmpsl
add
pop
cmpsl
add
push
out
jl
add
mov
and
xrelease
sub
movsb
and
add
mov
and
std
add
mov
push
push
and
ss
jl
add
mov
and
add
or
stc
adc
addr16
add
mov
and
add
adc
or
mov
daa
cs
cmpsl
mov
enter
aad
push
ss
xorb
es
and
dec
xor
and
add
movsb
and
add
xor
or
and
and
add
mov
and
std
movsl
mov
push
push
into
loope
add
std
int3
mov
and
add
and
aad
cmp
cmpsb
add
mov
and
std
test
and
pop
xor
pop
and
addr16
or
inc
and
and
xchg
add
mov
and
std
gs
xor
adc
shll
leave
and
std
cwtl
mov
and
add
mov
inc
cmp
push
mov
and
add
inc
or
sub
cmp
and
xor
and
std
addr16
and
add
mov
and
std
out
or
test
or
xor
add
fs
cld
mov
and
add
lock
and
add
in
std
loopne
gs
xlat
add
and
std
inc
mov
and
add
mov
and
std
mov
and
add
and
mov
xor
fwait
and
xchg
add
xor
xchg
cmpsb
std
xorl
mov
daa
and
lds
imul
arpl
out
pop
mov
and
es
and
add
lds
vmovaps
andb
add
cmp
xchg
mov
lods
mov
add
popw
xchg
and
pop
and
and
push
stc
inc
movsl
add
cmpsl
inc
cmc
cmp
lahf
add
and
std
sub
mov
out
cmpsb
add
and
fidivs
test
xor
lds
into
std
fs
and
add
inc
pop
add
cmp
testl
aaa
pop
shl
movsl
or
gs
shll
movsb
dec
cmp
leave
pop
in
cmpsl
sub
popa
out
cmpsb
dec
cmp
movsl
dec
cmp
jge
leave
pop
gs
and
leave
pop
movsb
push
sub
popa
cmpsl
or
addr16
cmp
jge
leave
pop
cmpsb
push
sub
mov
dec
shll
in
ss
shll
cmp
jge
leave
pop
addr16
daa
sub
popa
or
ret
popa
out
movsl
dec
cmp
and
dec
cmp
push
in
mov
dec
shll
or
out
cmp
cmp
leave
pop
movsl
push
sub
in
movsb
sub
popa
in
cmpsl
dec
cmp
daa
leave
pop
out
cmpsb
sub
mov
dec
shll
popa
movsb
or
fs
cmp
push
sub
shl
cmpsb
or
dec
push
or
out
cmp
and
jge
leave
pop
fs
and
mov
dec
shll
dec
cmp
jge
leave
pop
push
pop
leave
pop
out
movsl
sub
shll
sub
popa
and
es
cmp
daa
push
out
mov
dec
shll
dec
shl
movsl
or
gs
shll
movsb
dec
cmp
leave
pop
in
cmpsl
sub
popa
out
cmpsb
dec
cmp
movsl
dec
cmp
jge
leave
pop
gs
and
leave
pop
movsb
push
sub
popa
cmpsl
or
addr16
cmp
jge
leave
pop
cmpsb
push
sub
mov
dec
shll
lds
ss
mov
sbb
in
dec
insl
in
mov
adc
and
xchg
or
xchg
and
std
sub
cs
jecxz
xchg
sub
and
xlat
test
jmp
and
fadds
ffreep
jp
std
sub
es
aad
or
push
and
int3
cmp
pop
cld
cmp
pop
stc
sbb
iret
xor
jle
cmp
movl
testl
in
or
scas
sub
sbb
xor
inc
sub
xor
cmpsl
test
mov
lds
xor
es
add
cmp
aaa
mov
mov
inc
jl
add
je
inc
out
adcl
dec
faddl
add
iret
nop
add
jmp
loope
movl
pop
push
push
cwtl
inc
sti
lds
pop
lock
jne
daa
inc
and
xchg
clc
or
sub
add
dec
cmp
icebp
push
cmova
mov
pop
les
adcl
xchg
and
cld
or
test
add
sub
adc
add
popl
dec
testl
movb
push
ror
les
push
and
addr16
sahf
inc
les
loope
dec
inc
xor
icebp
inc
dec
xchg
pop
add
inc
dec
jns
add
in
cmp
xor
repnz
lds
aaa
aad
sbb
cld
xchg
int
test
sub
fsub
popf
test
or
pushf
and
ds
mov
lret
mov
hlt
jp
cmc
add
xor
lds
sub
ss
adc
in
mov
and
inc
andb
pop
imul
push
xor
or
and
pop
lds
aaa
std
sbb
fnsave
lds
fs
inc
aaa
in
add
ret
inc
mov
xorb
mov
pop
cld
add
fiadds
xor
add
outsl
add
aam
cmp
push
enter
xchg
mov
daa
lds
sub
sbb
pop
inc
jae
sti
xor
sbb
repz
aaa
or
push
ds
je
repz
fst
inc
in
inc
int3
idivl
xchg
jne
and
sub
push
pop
clc
sub
sub
hlt
xchg
lds
rcrl
mov
iret
lds
addr16
inc
push
sbb
and
test
out
add
iret
adc
xlat
mov
rol
les
addr16
ss
test
push
pop
mov
outsl
add
les
add
lcall
cmc
or
addr16
lcall
mov
and
jle
and
jp
and
inc
or
push
or
scas
or
imul
push
sbb
cmpsl
loopne
in
faddp
xor
inc
loopne
mov
add
xchg
sbb
lods
enter
or
cld
ficoms
push
jo
loope
rorb
cmc
mov
inc
mov
lcall
je
shrl
lds
mov
jp
aad
outsl
jo
mov
inc
or
jl
icebp
mov
sbb
loop
jnp
movsb
pop
push
mov
mov
sbb
arpl
add
sahf
daa
int
fiadds
push
mov
mov
jbe
sarb
xorb
hlt
aam
adc
mov
enter
mov
mov
push
jle
cld
vpslld
xor
xchg
jae
std
push
xchg
pop
ss
insb
mov
out
fs
dec
inc
in
jle
mov
inc
mov
fcoms
pushf
jae
push
and
dec
int3
loop
pop
jle
fbstp
fnstcw
jbe
push
mov
stc
jns
fcomip
int
sbb
add
mov
imul
jg
jl
lods
lods
mov
insl
dec
push
hlt
hlt
inc
int
cwtl
scas
xlat
dec
add
es
jbe
jne
arpl
mov
add
icebp
ss
lods
fnsave
push
ds
in
pop
ja
cmpsb
mov
pushf
mov
jmp
stc
xchg
jo
mov
and
mov
addr16
jb
mov
cld
outsb
adc
rolb
jecxz
mov
insl
lods
ja
mov
push
jl
adc
out
jl
mov
aad
cld
mov
xchg
hlt
or
sub
mov
jne
stos
push
orl
xchg
js
imul
neg
adc
pop
mov
stos
movsb
outsb
aad
in
aam
sbb
and
xchg
sub
decl
xchg
pop
add
imul
mov
in
pop
adc
daa
mov
fimuls
out
sti
mov
mov
arpl
xchg
pop
xchg
jbe
jecxz
adc
mov
dec
scas
pop
pushf
mov
add
incb
mov
or
cld
cmp
xor
xor
jmp
mov
hlt
pop
loope
xchg
rcr
xchg
sar
mov
sbb
fidivs
jge
dec
or
jnp
sbb
or
je
fsubrl
sti
xchg
imul
push
std
mov
je
in
ja
push
jns
aas
insb
sub
aam
in
xchg
mov
testb
inc
pop
inc
xor
mov
sbbl
lds
inc
mov
cmp
cmp
cmp
add
cmp
pop
sub
gs
cmpsl
inc
imul
decl
inc
xor
jno
dec
add
pop
xor
dec
fadds
or
or
mov
es
sub
mov
inc
xor
dec
stc
cmc
push
sbb
ret
push
sbb
aaa
xchg
mov
adc
jecxz
std
aad
test
xor
mov
inc
scas
int
aas
pop
in
cmp
scas
nop
aam
clc
ja
vunpcklps
pop
filds
push
and
or
arpl
jg
loopne
adc
mov
xor
inc
jl
lods
cmp
popf
rcr
jg
and
jmp
mov
in
push
xchg
or
xor
sbb
fistl
leave
inc
dec
daa
dec
addr16
inc
and
test
insl
js
imul
mov
sarl
rorl
sti
movsb
mov
fs
mov
xor
lds
pop
addr16
insl
out
pushf
addr16
cld
adc
xchg
xchg
hlt
aam
cmpsl
mov
xorl
jg
pop
and
push
push
inc
xor
mov
divl
mov
cmp
sub
mov
sub
push
fcoml
out
and
sub
sbb
cmp
lds
pop
pop
jl
sbb
clc
push
out
fsubl
loopne
xor
dec
jecxz
mov
mov
stos
cmp
jecxz
je
sub
loope
out
jb
jl
mov
push
shll
lock
shll
inc
cmpsl
mov
das
cmp
test
push
fisubrs
lock
add
fcoms
xor
lea
pop
xchg
stos
xor
sbb
add
push
sbb
sbb
sbb
mov
mov
and
xor
pop
pop
movsb
lds
push
add
add
dec
fsubs
push
xor
and
cld
fisubl
add
or
lods
lret
push
sub
fnstenv
pop
cmp
cwtl
push
and
adc
mov
pop
adc
into
arpl
int3
sub
popf
addl
adc
aad
icebp
sub
push
add
push
add
pop
cmp
les
sbb
inc
popa
std
out
cmp
xor
aam
clc
out
mov
int3
int3
jp
cmpl
int3
popa
cwtl
pop
xchg
dec
out
in
xchg
jo
iret
xchg
dec
imul
add
add
add
add
cmp
pop
jns
in
pmullw
xor
dec
cli
add
xor
fs
xor
pop
inc
stos
ret
fisubs
ja
mov
jb
pop
rcr
mov
ja
or
clc
imul
arpl
fwait
xor
fmul
stos
imul
mov
xchg
inc
cld
jnp
dec
ret
xor
inc
int3
xchg
jb
xchg
jge
out
pop
ja
out
xor
xchg
ja
and
jbe
mov
js
scas
add
xor
mov
push
imul
fisttps
add
clc
and
cmp
leave
push
add
inc
aaa
add
inc
xor
faddl
inc
add
cli
mov
jge
add
je
add
jge
mov
and
xor
or
dec
inc
pop
jo
mov
xor
and
cli
xor
add
outsb
or
and
test
inc
xchg
aam
and
jne
mov
repnz
xchg
scas
call
and
roll
int3
inc
push
and
out
mov
jg
int3
xlat
push
jbe
ja
lods
rclb
push
add
cwtl
inc
mov
or
cmp
and
and
pop
inc
insl
adc
out
or
ss
xrstor
xchg
mov
stos
and
int
ret
cmpsb
push
sbb
inc
sti
cmp
sub
sti
jno
sub
and
or
clc
xchg
jnp
xchg
je
aaa
adc
aam
adc
pop
sub
ret
test
jno
add
add
aas
and
dec
or
dec
icebp
xchg
adc
or
xchg
test
add
mov
arpl
push
fdivl
xchg
cmp
add
xchg
sub
in
jb
into
int3
add
adc
inc
popl
jge
shll
adc
lcall
mov
aas
add
in
gs
adcl
es
arpl
into
jmp
adc
sbb
jmp
xchg
xor
imul
mov
sbb
clc
ret
dec
adc
adc
clc
jo
fs
cld
js
icebp
sbb
and
popa
ds
js
mov
or
int
xor
xor
push
pop
pusha
test
cltd
mov
mov
out
pop
adc
sub
fucomip
arpl
mov
jae
add
ja
inc
mov
mov
out
pushf
cltd
push
fists
or
adc
push
mov
lds
xor
or
xchg
int
mov
jle
lock
repnz
je
call
iret
ret
add
add
les
hlt
cmpl
mov
add
fdivl
inc
dec
sbb
xchg
aas
inc
push
cltd
add
dec
sbb
jle
stos
cwtl
cmc
test
data16
loopne
les
icebp
hlt
popa
inc
and
cmp
insb
and
jne
hlt
sub
inc
add
add
test
in
lock
and
lcall
mov
xor
inc
mov
sub
xor
sub
inc
add
aas
xchg
cs
call
enter
xor
cmp
mov
and
add
dec
inc
mov
dec
jl
addr16
and
les
xchg
xor
mov
and
dec
xor
and
add
dec
es
ret
cmc
jecxz
and
std
or
dec
pop
and
cmp
mov
repz
xchg
fisubrs
and
xor
lds
and
push
and
inc
hlt
xor
aad
test
xor
pop
add
leave
mov
cmp
loope
cs
inc
hlt
dec
loop
sahf
xor
aad
je
and
xor
cmpsl
push
cmp
xor
pushf
repnz
mov
inc
rol
cmp
test
daa
push
cmpsl
ds
or
xor
ss
mov
mov
mov
int
ljmp
add
sub
rolb
js
enter
das
adc
mov
in
je
aaa
xor
inc
jno
dec
mov
rcll
roll
cmp
movsb
pop
je
dec
push
popf
and
xchg
ret
and
sub
leave
mov
imul
pop
inc
sub
out
test
mov
sbb
inc
mov
xchg
dec
mov
xor
jnp
loope
and
andl
pop
imul
jge
mov
add
inc
es
mov
mov
aaa
jge
inc
jecxz
and
test
or
pop
add
lret
cmc
roll
cmp
mov
cmc
mov
inc
testb
cli
cmp
lods
sub
daa
cmp
and
jns
jns
test
orl
insb
test
and
sti
test
sbb
movsl
das
mov
les
pop
xchg
out
jbe
and
adc
inc
aam
js
loop
dec
mov
pop
dec
push
push
add
aad
xor
sbb
xor
xchg
test
call
xchg
push
aad
cmpsb
push
test
insb
sub
in
insb
xchg
fbstp
in
cmp
out
sbb
push
xchg
or
lcall
int
mov
ret
vandps
jg
inc
fwait
mov
cld
and
push
jge
into
jne
out
ja
movsl
lock
sub
inc
sbb
dec
jl
or
xor
fidivrl
hlt
inc
das
mov
cld
adc
mov
aaa
pop
cmp
insb
dec
inc
sub
sub
pop
dec
movsl
jg
lds
xor
xor
xchg
push
xor
inc
mov
sbb
add
aaa
negl
and
sysret
pop
xor
adc
imul
lret
fwait
sbb
adc
xchg
sub
lds
int
sbb
sub
iret
add
in
fisttps
aad
mov
and
pusha
sbb
push
mov
adc
mov
outsb
and
pop
jp
xchg
mov
pop
movsl
and
pop
repnz
mov
jmp
cld
inc
aaa
pop
std
jb
int
int
ret
lret
das
adc
xlat
ss
dec
adc
xor
sub
mov
das
and
push
sbb
mov
sti
xchg
mov
or
scas
in
add
mov
arpl
mov
push
iret
mov
lahf
stos
dec
adc
test
inc
cmp
pop
cmp
jle
jp
in
add
push
mov
pop
cld
pop
rol
cmp
jge
fwait
push
lock
cmpsb
ficomps
fdivrl
pop
clc
mov
inc
cmc
inc
push
and
not
ficoms
adc
or
ret
outsb
lahf
cld
je
setl
lret
sbb
adc
sti
scas
adc
inc
push
and
xchg
sub
scas
into
add
lea
scas
mov
jmp
push
pcmpeqb
push
fisttps
adc
mov
sbb
jge
std
sub
mov
clc
xchg
int3
divl
lret
shlb
gs
sub
dec
mov
or
outsb
mov
in
das
jl
xor
add
lods
pop
gs
cld
inc
in
push
hlt
mov
pushw
fiadds
cmpsl
test
mov
lods
xchg
and
cld
cmpsl
lret
cmpsb
repnz
les
add
xor
mov
or
jge
into
or
daa
cmpsl
inc
add
lods
xchg
out
sbb
aas
movsb
add
icebp
and
scas
inc
mov
cmpsl
push
das
push
lock
push
xor
mov
ja
std
and
mull
pop
inc
pushf
xchg
fs
inc
movsb
and
cmc
stc
les
jmp
movsb
shrl
pop
cmp
inc
sub
and
adc
xor
aas
leave
paddw
loope
aas
stos
test
xor
and
jecxz
xor
das
add
or
jbe
in
lds
pop
or
loopne
and
in
sarb
and
adc
test
cmc
popa
jle
xor
mov
loope
sub
xor
xor
add
xor
loope
jo
push
sahf
arpl
jg
lahf
cmp
mov
adc
or
test
and
pop
les
ret
inc
add
daa
or
ret
test
scas
aas
add
xor
jp
stos
fs
xchg
inc
bound
xchg
and
inc
sbb
cmc
scas
sbb
les
xor
xor
in
shll
inc
and
and
mov
jecxz
xor
nop
sbb
fs
std
popa
and
ret
out
cs
out
xor
shlb
cmp
lea
sub
inc
iret
icebp
mov
ja
and
or
mov
leave
mov
pop
test
negl
mov
mov
add
cmpsl
cmc
inc
push
pushf
in
out
lea
out
sbb
dec
lret
rcr
idivb
mov
mov
xchg
test
outsb
ja
cmp
add
lods
lds
mov
or
inc
adc
dec
xor
divb
mov
lds
out
sub
add
sbb
lea
scas
mov
jl
shufps
push
in
push
and
push
mov
mov
fs
jmp
cmpsl
and
iret
cld
fs
jle
sbb
mov
sbb
and
inc
cmp
idiv
negl
sbbl
push
xchg
adc
xchg
fidivrl
repnz
inc
sub
add
maskmovq
testl
mov
pop
mov
mov
out
mov
dec
mov
sub
xchg
sbb
test
sub
or
push
add
js
ja
pushf
fcom
aaa
xchg
push
jle
xchg
sub
and
jne
sarl
les
add
xor
xor
cmpsb
mov
movsb
lds
stos
jmp
aam
xor
sahf
pop
jbe
mull
or
dec
xchg
cmp
in
inc
cmp
adc
test
pop
iret
aam
pushl
dec
aad
sub
xor
mov
adc
dec
jno
mov
and
or
add
popf
jne
test
or
pop
and
xor
mov
in
iret
push
sarl
out
add
fbld
sbb
or
test
mov
pop
xor
sub
ss
mov
lock
ss
je
repz
mull
pop
sbb
mov
sbb
ret
xlat
dec
dec
test
and
aad
cs
dec
test
push
mov
mov
loop
and
pop
loope
jl
clc
and
mov
add
sbb
xchg
add
fisttpl
and
add
push
sbb
shll
filds
scas
dec
sahf
out
cmp
sbb
sbb
scas
jbe
in
dec
test
aas
xor
out
cmp
inc
add
jnp
lahf
add
repnz
lods
out
sub
cs
mov
test
dec
xchg
ljmp
add
in
dec
and
xor
out
sub
aaa
mov
pop
adc
lock
cmp
mov
jne
mov
pop
jmp
add
xlat
aas
mov
movsb
dec
jo
sbb
test
jg
sbb
jg
fmull
and
loope
sbb
xchg
addr16
xchg
das
in
push
stc
bound
fxam
inc
xchg
les
xchg
push
sbb
xchg
les
popf
pop
mov
repz
pop
scas
test
mov
mov
ja
jl
fucom
push
insb
and
adc
lock
cmpsb
or
fildll
adc
push
and
inc
lds
mov
mov
sbb
movsb
add
mov
shll
andl
mov
and
cmpsb
jae
dec
sub
mov
and
dec
jns
dec
cmpl
enter
sbb
cmp
jg
testl
xor
jbe
cmpsb
nop
insb
jmp
and
push
adc
or
dec
iret
jmp
popf
pop
cld
in
add
mov
cmp
mov
adc
fisttpll
xchg
mov
add
test
dec
insb
push
loopne
in
and
cwtl
dec
mov
imull
loope
sbb
fadds
and
jle
int
jle
adc
and
adc
sub
add
sbb
mov
sub
dec
xchg
dec
ret
or
fnstsw
repz
adc
lock
ret
ds
xor
dec
ja
inc
xchg
dec
es
nopl
mov
fsubl
sbb
mov
pop
and
scas
fbld
adc
push
in
adc
pop
es
pop
fsubrl
sahf
sbb
xor
and
in
es
and
enter
dec
sar
das
loope
test
adc
fdiv
test
sbb
and
pushf
jbe
mov
clc
test
cmovns
mov
test
and
pop
dec
push
add
mov
and
push
jecxz
mov
iret
daa
add
mov
pop
pop
mov
or
lock
jbe
mov
add
int
inc
sub
lret
and
sbb
shll
mov
add
mov
pop
cli
ja
cmpb
sub
dec
push
xchg
dec
push
cmp
mov
sub
in
sub
addr16
xchg
or
push
dec
cmp
pop
int3
push
clc
mov
add
xor
in
sbb
cmp
frstor
aad
cld
xor
cmp
jl
pop
call
dec
jnp
mov
or
aad
loope
imul
paddsw
sbb
add
or
ljmp
int
mov
loop
mov
outsl
scas
mov
rcl
int
add
dec
lds
xchg
notb
and
insb
jne
push
call
dec
xchg
in
sub
mov
mov
sub
or
mov
ret
mov
scas
xor
push
xlat
and
push
std
cmp
pop
sub
cmc
ss
cli
lahf
push
mov
dec
ja
into
mov
sti
std
icebp
jne
lret
aam
cmp
popf
adc
mov
xchg
pop
mov
adc
add
sbb
xor
jbe
mov
mov
and
ja
repz
sub
es
addr16
sbb
or
push
cmpsb
or
aaa
mov
ret
in
dec
or
arpl
pop
int3
sub
jmp
or
or
mov
iret
adc
setb
in
inc
mov
movsl
dec
and
adc
push
or
and
xor
mov
imul
mov
sahf
xchg
jb
cmp
mov
hlt
cld
mov
add
jmp
add
xor
dec
lods
outsl
addr16
push
adc
mov
mov
daa
or
aas
movsb
lods
sub
outsb
dec
mov
in
inc
mov
pop
mov
testl
jmp
cmc
sbb
stos
xor
decb
sbb
ficomps
cmpsb
movsl
cltd
out
push
adc
arpl
jbe
lcall
push
ja
and
paddw
dec
leave
in
inc
outsl
jno
test
pop
inc
sub
mov
adc
add
jne
and
push
in
stos
jge
subl
jne
pop
jne
in
lret
add
or
and
addr16
fadd
ja
leave
mov
inc
gs
jecxz
xor
mov
int3
ds
inc
xchg
mov
aas
mov
in
push
xor
stos
mov
into
loopne
push
push
sti
out
scas
fisubrs
sub
mov
push
daa
adc
push
sub
xlat
lods
and
movsb
ja
pop
ss
cmc
push
push
mov
and
subb
sbb
or
pop
or
imull
add
sti
xor
out
sbb
cmc
xor
jl
push
aaa
xchg
imul
sbb
jo
cmpsl
add
loop
adc
jg
sub
ret
aas
add
jecxz
std
nop
and
pushf
cli
je
ja
xor
hlt
les
popf
sbb
ja
int3
lods
xor
data16
or
cmp
xor
mov
out
push
adc
jae
mov
out
or
pop
pushf
cmp
adc
jbe
outsl
sub
cmp
test
jle
xchg
cvtps2pi
push
mov
mov
mov
add
mov
mov
add
xchg
xchg
mov
stos
cmpsl
outsb
test
and
dec
fwait
push
sbb
sub
push
sbb
and
xlat
inc
pusha
xchg
xor
mov
adc
sub
jbe
sub
xchg
push
in
xor
outsb
mov
cli
xor
cld
pop
sbb
hlt
cmp
aad
cmpsb
push
jbe
stos
hlt
jmp
and
mov
loope
divl
inc
xor
hlt
outsl
insl
xor
jne
iret
cld
cs
ret
std
out
lock
addb
shrb
xchg
xor
cmc
sbb
in
dec
push
xchg
xor
mov
inc
or
mov
adc
adc
test
les
dec
mov
sub
jmp
outsb
jl
mov
cmp
mov
iret
inc
mov
hlt
loope
test
outsl
or
lods
or
addr16
popf
cmp
mov
cmp
sub
int
xor
xchg
cmp
add
out
push
imul
outsb
test
loop
cmp
mov
and
pop
mov
sbb
sub
movsb
mov
mov
orl
aaa
dec
fs
and
iret
fs
shlb
testl
add
ret
sub
hlt
or
in
or
push
mov
jb
dec
and
push
inc
push
and
xchg
repz
aas
es
and
jl
sub
lahf
ret
das
jnp
mov
inc
aas
and
sub
aas
daa
std
adc
pop
sub
inc
xchg
movsl
push
mov
sti
fstl
stos
xchg
scas
negb
push
mov
jl
mov
sub
idiv
insl
pop
pop
pop
inc
sbb
das
cmp
fisttpll
jle
or
es
std
cmp
rol
cmpsb
lods
cmc
jecxz
sub
std
sbb
cmc
push
fldl
hlt
adc
in
xabort
idivb
xor
cld
icebp
and
rcll
sub
mov
mov
je
adc
nop
fs
dec
pop
ja
push
push
dec
lahf
jno
inc
cmpsb
xchg
mov
aaa
fs
test
mov
outsl
sub
mov
and
and
adc
in
cmpb
and
jbe
mov
add
jns
out
popa
movsl
push
stos
adc
xchg
xchg
xchg
out
mov
cmp
mov
imul
mov
jbe
pop
out
jnp
cwtl
pop
jecxz
adc
xor
push
sbb
icebp
out
add
adc
sar
test
jl
movsl
and
orl
movsl
push
adc
add
adc
push
lods
dec
mov
mov
push
or
fs
adc
or
jb
outsl
dec
push
xchg
xchg
add
fwait
testb
pushf
xor
pop
out
stos
jmp
sbb
stos
push
or
ljmp
scas
pushf
movsb
scas
push
inc
mov
jg
inc
cmp
adc
inc
xor
or
mov
dec
and
mov
loope
dec
fists
jns
and
gs
sub
push
je
lods
mov
mov
movsb
or
mov
fbstp
xor
fwait
jl
in
in
mov
xchg
addr16
andl
cld
ss
xor
and
push
cmp
sti
insb
loope
jae
test
cmp
xor
sub
hlt
ret
add
test
aam
mov
fwait
add
je
xor
leave
addb
lds
out
inc
jo
test
mov
es
xchg
js
add
jne
in
push
add
aaa
xor
adc
xorl
addr16
daa
inc
sub
sub
pop
cmp
les
and
add
mov
xor
aad
adc
and
cmp
xor
push
or
movl
add
and
aam
cmp
xor
add
add
in
mov
inc
in
cmpsb
daa
adc
idivb
aam
loope
mov
es
inc
fldl
and
in
cmp
xor
adc
add
addr16
inc
inc
leave
mov
and
push
mov
and
daa
les
mov
hlt
inc
mov
daa
aad
inc
inc
std
mov
and
xor
and
push
movsb
mov
xor
push
daa
test
aam
xor
and
leave
xchg
mov
or
dec
xor
movsb
add
cmc
add
pop
out
lds
add
inc
lds
shl
sbb
lcall
divb
sub
rcll
pusha
pop
shll
movb
push
and
and
xor
jg
xor
insb
aam
cltd
adc
je
jb
inc
fs
adc
mov
mov
push
cmp
inc
adc
mov
push
push
xor
es
cmp
or
shrl
mov
dec
fwait
xchg
and
les
xchg
dec
sub
mov
cmpsl
call
cmp
daa
mov
insb
cmp
push
fsubrs
xor
push
es
xor
cmp
mov
jg
pusha
cmpsl
add
je
or
sahf
add
es
and
push
push
in
iret
mov
inc
cwtl
mov
aas
xlat
je
jmp
and
mov
pop
sub
mov
push
jmp
mov
andb
and
mov
and
out
test
rcrl
sbb
loop
aad
sysenter
push
imul
mov
out
sbb
mull
mov
adc
decb
notl
negl
aaa
mov
negb
and
mov
stos
mov
push
add
clc
fs
cmpsb
xchg
clc
push
mov
xchg
mov
mov
mov
xor
jl
test
mov
pop
and
push
bound
stos
mov
mov
xchg
add
mov
daa
icebp
mov
mov
add
mov
xor
in
mov
add
aad
sysenter
in
sbb
in
sbb
mov
mov
daa
jae
cmp
sbb
jmp
mov
add
push
mov
je
cmc
cmp
in
pop
push
and
mov
pusha
xchg
mov
and
inc
inc
jns
adc
cmpsb
daa
sti
je
stos
and
dec
push
andl
mov
xchg
xor
inc
inc
add
in
clc
fs
xchg
fs
pop
jl
bound
dec
sti
xchg
sti
lds
je
jmp
inc
cmp
xor
clc
divb
xor
in
cmc
mov
dec
mov
and
inc
or
cmpsl
je
mov
mov
mov
xor
sub
xor
gs
test
push
rolb
mov
daa
es
fldl
xchg
mov
leave
adc
pushf
fnstenv
sub
mov
and
in
lcall
aaa
pop
stc
mov
js
mov
add
inc
sbb
dec
adc
movsb
cmp
xchg
movapd
mov
mov
ds
push
jg
pusha
std
mov
jmp
adc
leave
xor
or
movsl
stos
cmp
push
and
jp
xor
adc
xor
push
cmp
daa
or
and
add
aad
mov
in
push
bound
sar
adc
mov
xchg
adc
les
adc
or
mov
mov
adc
adc
mov
andl
lea
cld
mov
cmpsl
sbb
mov
ss
out
cmp
xchg
xlat
xor
mov
daa
addr16
dec
mov
das
cld
pop
es
pushl
pop
divl
cmpsl
daa
imull
and
xor
mov
dec
mov
das
cld
es
sub
es
jmp
movsl
test
filds
jg
aam
xlat
mov
add
push
push
mov
ret
not
hlt
fwait
pushf
and
inc
jge
shl
xor
cs
and
cwtl
mov
sub
xor
inc
pop
adc
movsl
inc
ret
and
xchg
xchg
std
cmpsl
mov
adc
jbe
push
mov
add
jnp
sbb
xchg
nop
and
fs
in
mov
and
xchg
shl
and
and
lds
mov
andl
repz
test
addl
jl
add
sbb
mov
mov
add
cmp
gs
mov
adc
je
sub
icebp
stos
jl
mov
xchg
sbb
shr
js
mov
mov
loop
adc
pop
sysenter
cmpsl
or
mov
and
jg
xlat
ja
aaa
pop
and
add
clc
xchg
xor
sti
mov
in
jo
stc
push
mov
daa
gs
dec
mov
das
in
lds
es
add
xor
xor
sbb
adc
test
xor
dec
test
pop
adc
test
pop
ja
jmp
cmpsl
daa
popa
inc
push
shlb
adc
add
adc
jmp
ljmp
mov
jl
mov
jle
cmpsb
pop
aam
and
in
and
mov
and
pop
cmp
pop
out
in
lds
daa
mov
xchg
push
cmc
add
popa
push
mull
add
es
mov
and
pop
sub
push
push
inc
ja
cmpsl
ss
mov
push
jbe
mov
add
sbb
or
rcll
cmc
xor
scas
mov
push
jbe
insb
cli
mov
add
push
popa
dec
inc
je
xor
es
xor
ret
in
or
push
push
lods
add
inc
mov
inc
push
jmp
adc
sub
mov
shl
es
cmp
mov
cmc
movsl
repz
cmp
jge
bound
mov
mov
and
or
push
cmp
dec
inc
enter
fs
loope,pt
jg
jp
inc
movsl
jb
mov
aad
sbb
loop
daa
mov
push
sahf
fs
hlt
outsb
sbb
adc
jo
stos
and
aad
add
pop
push
jge
xor
mov
shl
sub
mov
mov
mov
std
sub
addr16
and
xlat
jmp
mov
jg
pusha
xchg
fildl
das
inc
mov
mov
and
xchg
out
mov
xor
and
pop
repz
test
jecxz
idiv
jl
add
and
test
pop
cmp
adc
aad
pop
pop
dec
add
sub
ja
lods
adc
lcall
inc
mov
dec
push
mov
cld
loope
sbb
mov
mov
out
out
and
inc
repz
and
or
or
pop
idivb
add
jmp
xchg
mov
shll
inc
mov
push
inc
dec
mov
jecxz
push
or
jge
jmp
addr16
add
cmp
cld
pushf
ss
mov
jg
mov
rol
mov
mov
jbe
sbb
out
in
stos
mov
add
cld
cld
mov
cmc
mov
mov
add
and
es
dec
adc
clc
mov
mov
jl
repz
mov
xor
and
push
shll
aam
push
shrd
loop
mov
es
aas
test
popa
inc
push
mov
in
imul
popf
in
lds
jmp
es
lret
shll
test
jge
test
imul
jmp
cs
cwtl
sarl
xchg
or
fnsave
loopne
push
jne
test
and
mov
outsl
inc
addl
sbb
sbb
xor
icebp
xchg
es
out
cmp
popa
sbb
mov
shr
pop
les
aam
xchg
xchg
pop
mov
pop
ficoml
in
and
dec
inc
mov
xchg
std
pop
mov
push
adc
push
xchg
mov
movsl
and
pop
sub
or
mov
int3
cmp
xor
and
mov
incl
mov
push
and
and
inc
mov
mov
clc
les
jne
inc
rol
les
aas
and
sub
ja
adc
into
fs
mov
and
pop
dec
mov
das
push
ds
mov
sbb
mov
dec
mov
jle
leave
jecxz
je
sbb
mov
mov
rcrl
cmp
mov
lds
les
sub
ss
jmp
test
mov
mov
adcl
add
jmp
cmc
sbb
jo
sbb
out
aaa
popa
stos
inc
inc
stc
adc
xchg
sbb
jns
test
movsb
mov
test
cmpb
dec
pushf
push
imull
jne
inc
add
aam
clc
push
pushf
pushf
mov
movsl
push
pop
sbb
in
hlt
and
cmpsl
xchg
hlt
and
push
mov
es
and
mov
xor
insb
rorl
push
fwait
mov
xor
sub
mov
mov
xchg
cmc
inc
int
dec
add
sbb
ret
mov
mov
mov
mull
aam
jbe
vunpckhpd
cmp
push
push
lock
sbb
add
push
mov
ret
bound
mov
cmpsb
add
mov
jl
je
out
pushf
movsl
push
xchg
adc
mov
adc
jl
mov
movsl
dec
xchg
push
cmpsb
enter
cmp
addl
roll
adc
enter
jns
and
movsl
aad
and
xchg
adc
mov
sbb
movb
add
stos
push
and
sbb
sbb
and
test
mov
lds
popa
xchg
mov
test
mov
inc
sub
push
push
push
les
lods
pop
and
in
inc
ror
cmp
adc
push
add
ret
dec
cld
dec
inc
inc
cmp
mov
add
mov
sahf
sbb
xor
mov
es
jbe
add
outsl
arpl
add
add
jg
clc
pop
in
inc
mov
jg
dec
mov
add
add
or
shll
mov
pop
popf
andb
shl
adc
and
xchg
push
mov
cmpsb
cmpb
xor
mov
mov
int
sbb
add
add
aad
or
and
xchg
and
repz
and
repz
jp
icebp
out
in
out
in
jmp
push
and
xor
and
ss
es
dec
cmp
mov
add
inc
test
xchg
in
sub
cmpb
adc
add
scas
popa
mov
test
movsl
push
xchg
pop
out
out
mov
cmp
ja
xor
scas
in
xchg
ss
or
mov
xchg
xchg
in
or
lea
lds
outsl
stos
rorl
mov
clc
mov
xor
inc
and
pop
cwtl
mov
mov
clc
test
add
scas
leave
jae
sub
cmpsb
dec
xor
dec
inc
mov
inc
and
mov
jbe
xchg
and
vpsllw
mov
mov
dec
xor
out
xchg
mov
in
and
xchg
repz
cmpsb
mov
and
gs
jp
xor
cmpsl
and
mov
or
fs
xor
or
xlat
addr16
cmp
data16
and
sub
mov
cmp
das
pushf
adc
xchg
test
or
and
std
add
or
in
inc
in
jne
mov
loop
repz
jle
mov
and
gs
movsl
std
xor
push
push
cwtl
sub
mov
call
in
adc
add
mov
popa
inc
cwtl
and
mov
mov
xchg
in
pop
jne
repz
jle
mov
and
gs
leave
aas
cld
mov
adc
es
es
sbb
in
or
es
jecxz
rolb
push
shll
inc
cs
xor
xlat
push
add
sar
in
push
xor
clc
or
les
in
ss
push
in
lock
push
mov
outsb
in
pop
add
mov
add
pop
xor
daa
shl
hlt
dec
out
xor
and
std
mov
lods
push
in
mov
es
add
mov
and
push
xchg
test
loop
std
roll
push
decl
stc
add
add
mov
and
add
jge
mov
in
push
mov
xchg
hlt
in
std
add
es
or
xor
inc
in
cmpsl
aam
xor
notl
push
push
repz
test
in
jmp
sbb
loopne
rep
in
aam
mov
outsb
in
std
pop
mov
push
xor
xchg
xchg
lods
in
daa
std
les
stos
clc
hlt
leave
sub
push
es
mov
stc
cmp
cmp
sbb
cmpsb
and
icebp
cmp
insl
inc
out
in
rcrb
or
mov
imul
cmp
roll
and
cmp
xor
cmpsl
test
in
and
xchg
add
cmpsl
inc
and
adc
add
add
push
add
pop
add
push
add
and
icebp
sub
add
inc
and
pop
stc
fs
cli
aas
loope
inc
mov
aad
xchg
addr16
inc
mov
lds
add
les
mov
hlt
cmp
cmpsl
int
add
ret
int
out
mov
push
je
mov
xchg
add
inc
cwtl
fs
ss
mov
arpl
sbb
adc
adc
adc
mov
into
shlb
mov
mov
xchg
adc
jge
int
or
add
mov
std
xchg
adc
jge
int
in
es
loope
fstl
aad
shr
test
int
es
pop
leave
jge
int
rcrl
and
mov
mov
mov
adc
jge
int
mov
or
xchg
mov
push
mov
testl
jl
loopne
sbb
sbb
out
ja
mov
popf
mov
cmp
divl
and
lods
add
lds
mov
mov
out
loopne
flds
xor
out
mov
pop
inc
xchg
loopne
daa
arpl
loope
loopne
out
in
pop
cmp
dec
inc
mov
addb
mov
adc
adc
add
loop
enter
cwtl
lds
hlt
jbe
xchg
xchg
inc
and
mov
push
fs
xorb
mov
xlat
clc
jbe
loope
push
test
shl
inc
xchg
and
cmp
gs
xchg
push
jne
aaa
daa
jecxz
xor
pop
les
in
daa
hlt
mov
cmpsl
loop
jecxz
jbe
add
fsts
mov
inc
aam
add
add
and
mov
mov
xchg
lcall
js
out
push
andb
test
add
out
ret
test
and
shll
add
daa
out
loope
dec
inc
xchg
mov
xor
and
popa
mov
xchg
jecxz
inc
mov
pop
loope
and
daa
pusha
neg
pop
rcll
andl
jecxz
inc
loope
stc
and
pusha
movl
mov
sbb
xchg
sbb
in
cmp
shlb
loopne
mov
stos
or
sbb
loope
ja
mov
iret
je
sub
sbb
inc
ja
or
mov
test
inc
fs
fs
xchg
jg
mov
clc
ja
arpl
push
mov
stos
daa
sbb
fs
lret
push
testb
movsl
out
or
and
fs
lret
jno
cmpsb
jl
jg
mov
push
lds
in
outsl
dec
xor
je
mov
cmp
hlt
insl
adc
stos
mov
add
push
cmpsb
inc
xchg
ljmp
and
movsl
lds
fs
or
adc
xor
cmc
dec
dec
xor
fisubl
mov
pushf
fs
ds
xor
out
jo
push
mov
inc
pop
mov
shl
xor
ret
aad
adc
repnz
cs
in
mov
inc
or
jg
xor
ds
sub
stc
hlt
sarb
and
ja
mov
add
or
pusha
or
adc
dec
mov
nop
rcrl
cmpsb
inc
cmc
push
cmc
jb
inc
icebp
mov
cmp
fs
adc
and
add
xchg
xorb
xor
jae
mov
scas
and
cli
fsincos
push
xor
fs
add
in
push
cmc
fdivr
stc
or
daa
sti
xor
stc
movsb
outsb
out
cmp
shl
call
xchg
stc
test
xchg
sti
push
add
pop
enter
mov
jne
adc
std
pop
mov
xor
in
cmc
fs
mov
dec
stos
pop
cmp
andl
mov
or
popa
movsb
cmp
fs
jl
call
daa
icebp
mov
jnp
lds
sub
call
inc
std
adc
call
les
stc
mov
fs
movsb
je
push
inc
notl
in
cmc
movsb
sub
in
mov
call
iret
hlt
pushf
jmp
mull
push
cwtl
push
fs
mull
pop
jge
pushf
cmp
mov
xchg
out
mov
fnstsw
testl
xlat
js
jmp
push
jne
jne
imul
shll
sub
stc
data16
in
dec
fs
adc
mov
divb
and
pop
or
daa
stc
movsb
mov
hlt
imul
sar
fs
xor
inc
outsb
sub
cmc
mov
icebp
fs
xchg
cmpsb
jbe
jecxz
cmp
movsl
repz
mov
mov
mov
push
add
xchg
jnp
mov
push
icebp
cmc
aam
or
inc
mov
icebp
scas
add
mov
xor
xor
les
adc
lds
xor
in
testl
adc
cmc
daa
data16
adc
lods
sub
dec
lds
xchg
jo
push
sarb
cmpsl
loopne
cmc
ret
imul
jg
aaa
loopne
push
push
scas
lret
in
les
loop
incb
cli
fstpt
aas
loope
adc
cwtl
cmp
fdivl
add
movsb
mov
std
es
les
lock
movsb
daa
mov
inc
cmp
xor
pop
test
fcoms
lcall
dec
pop
mov
fs
jne
fucom
stos
repnz
xor
aas
stos
sub
test
fs
mov
jmp
fnstcw
cmc
xchg
out
pop
clc
pop
mov
imul
dec
mov
sub
or
mov
lret
aad
clc
movsl
lds
fs
fbld
xchg
mov
and
jbe
inc
cmp
push
movsb
shrl
pop
lret
jae
stos
adc
into
fsubl
in
ss
mov
cmc
int
mov
xor
pop
pop
hlt
cmpsl
stos
faddp
mov
sub
int
xchg
dec
in
pop
aad
inc
leave
movsb
xchg
test
andl
and
and
sbb
mov
sub
mov
mov
loope
xor
and
rclb
inc
movsb
jmp
cwtl
out
xor
push
add
je
mov
or
icebp
les
test
clc
jae
mov
cmc
ss
adc
mov
or
or
dec
clc
xchg
xor
call
imull
and
ss
ret
and
jbe
gs
cmp
and
movsl
scas
addr16
pop
jmp
daa
test
cmpsl
mov
cld
mov
pop
push
sub
mov
in
hlt
xchg
movsb
dec
pushf
sub
aaa
jmp
cmpsb
ret
lock
and
icebp
xor
fiadds
cmp
hlt
les
mov
pop
test
xlat
sbb
mov
mov
ss
test
and
clc
xor
int3
jb
cmp
bnd
pop
imul
jne
add
cmc
jge
mov
mov
inc
adc
les
add
and
pusha
inc
xchg
cmpsl
adc
sbb
mov
int3
loopne
jnp
test
jmp
mov
cld
and
inc
cmp
mov
or
jp
adc
std
test
rcr
mov
inc
cmc
push
sub
sbb
add
mov
xchg
aad
dec
shll
in
push
mov
mov
xor
fnstsw
xchg
xor
test
movsb
xor
mov
in
add
cmp
sub
rcrl
das
ja
daa
xchg
test
test
push
dec
or
and
pushf
mov
add
jmp
lea
mov
xchg
sbb
add
xor
outsl
mov
add
movsb
jo
ja
int3
ret
ss
cmp
sub
ds
adc
cmp
jnp
les
mov
imul
inc
jnp
xor
xor
inc
test
cmp
test
cmp
push
daa
xor
incl
movsb
aad
or
inc
mov
mov
outsl
lahf
outsb
xor
lds
pop
xchg
mov
push
mov
push
lea
cmc
or
outsl
mov
cmc
inc
inc
adcl
or
inc
jae
jbe
push
and
std
jb
cmp
mov
in
sub
mov
mov
sbb
cmp
test
pop
mov
jne
aas
lods
clc
hlt
mov
jne
fwait
push
je
fs
cs
in
test
mov
mov
cmc
fidivs
cmp
add
cmp
insb
xchg
cmc
movsl
aaa
adc
inc
sbb
mov
out
push
xor
xor
cmc
or
push
imul
aas
scas
in
cmp
push
xchg
xchg
in
sub
pop
call
xor
xor
cmc
ja
and
ss
inc
lock
dec
and
mov
test
cmpsb
jg
xor
daa
out
xor
dec
and
xchg
pop
or
roll
cmpb
jo
unpcklps
pop
mov
and
jmp
addb
in
inc
adcl
cmpsb
and
jae
xorb
push
xor
sub
ja
fldl
test
pop
sbb
mov
mov
mov
cmc
inc
or
mov
shll
cmpsl
test
test
movsl
xchg
cmp
add
std
jg
lds
mov
test
aam
mov
test
incb
pop
jge
in
push
fsts
jne
inc
xchg
sbb
mov
in
push
adc
mov
in
inc
cwtl
mov
jae
pop
aad
movsl
aas
std
test
adc
ficoms
addr16
mov
mov
sti
dec
pusha
sbb
aaa
pop
xchg
push
aad
in
fdivl
mov
in
xor
cmc
jne
adc
sti
aad
popf
cmc
in
cmpsl
das
test
add
mov
push
push
les
sub
aam
jbe
cmpsl
cmc
push
cmc
sbb
and
and
adc
xor
mov
dec
lods
movsb
ss
jbe
xor
cmp
in
and
loopne
and
cmc
jno
jge
in
and
xchg
cwtl
xor
mov
xchg
lods
testb
xchg
push
cld
js
add
cld
hlt
pusha
arpl
or
movsb
scas
pop
idivl
add
cwtl
push
cmp
std
arpl
daa
inc
adc
lret
enter
out
xchg
sbb
adc
sbb
sbb
xor
test
and
mov
outsl
rcl
mov
push
jmp
aam
pop
cmp
mov
mov
leave
fldl
sub
or
scas
inc
sbb
inc
es
mov
les
adc
cld
cmpsl
aad
popw
testb
and
sub
mov
ret
dec
jno
mov
sbb
filds
inc
or
lds
mov
jbe
test
sbb
xchg
cmpsl
inc
push
cld
mull
fwait
int3
ja
cltd
movsb
movsl
xchg
pop
add
add
push
xchg
mov
sbb
inc
lock
sub
mov
inc
aad
and
cld
push
aad
jns
lock
ss
cmp
and
and
sbb
sbb
xor
fadds
or
scas
mov
pmaddwd
jbe
cmc
in
test
xor
mov
xchg
inc
popl
add
scas
inc
lds
sub
and
aas
and
cld
stos
inc
add
xor
cmp
pop
pop
sbb
jg
icebp
fstpt
lock
and
add
hlt
mov
mull
mov
pop
push
out
test
xchg
outsb
and
cmovbe
out
fs
cmp
add
sbb
arpl
sti
push
xchg
arpl
inc
outsb
je
test
test
add
das
and
outsb
mov
mov
inc
and
test
inc
and
hlt
mov
sbb
pushf
lahf
xchg
mull
repz
rcll
or
arpl
xchg
lds
idivb
mov
jg
jnp
pop
pop
mov
adc
rcll
cmp
push
push
add
aaa
xor
inc
push
outsb
ror
add
std
mov
xchg
adcb
adc
mov
cli
xor
and
icebp
cmpsb
mov
and
inc
sbb
and
jnp
lret
movsl
mov
pop
add
sbb
lock
cmc
mov
in
xor
sahf
pusha
aad
out
jb
add
or
in
xchg
xor
pop
imul
out
andb
addr16
jecxz
inc
adc
inc
aad
add
out
je
vhaddps
jl
loope
sbb
pop
nop
xor
sbb
scas
push
ss
jp
test
and
jns
push
mov
lods
out
inc
aas
in
cmpsl
cmp
test
std
and
je
sbb
sub
sub
pusha
iret
icebp
and
rclb
sub
das
inc
cmc
xchg
push
fstl
outsl
imul
negl
jecxz
aad
mov
addr16
ljmp
iret
xor
add
mov
mov
push
sbb
add
insb
vshufps
std
push
icebp
roll
cld
imul
xchg
je
bound
testl
cmp
aad
daa
inc
test
or
ret
xor
idivl
push
mov
lods
ficompl
in
movsb
stc
push
push
sbb
es
sub
and
stc
lock
movsb
bound
pop
stc
cmpsl
jb
std
stc
xor
jmp
add
inc
cmpsl
dec
daa
jecxz
fldl
push
cs
in
nop
jecxz
mov
jbe
cmpsl
mov
sbb
xchg
shll
add
sub
pop
cmp
aas
movsb
in
pop
inc
add
add
xchg
xchg
std
sbb
in
xchg
cld
jnp
inc
movsb
in
adc
hlt
fcmovnbe
xchg
mov
das
test
jbe
pop
imul
add
pop
das
fs
and
fdivrl
jne
out
shlb
dec
stos
mov
test
mov
and
notl
fs
cmp
in
push
add
and
lahf
js
cmpsb
lret
cmp
jae
cmp
xchg
adc
movsb
frstor
es
xchg
jecxz
mov
cmp
mov
or
push
mov
pop
jbe
push
icebp
cmpsl
mov
pop
out
xor
mov
mov
iret
lods
cld
cmc
xlat
inc
je
std
aas
inc
pop
pop
incl
int
sbb
testb
clc
dec
lds
cmpsl
mov
or
in
addb
ss
in
sbb
adc
aaa
add
testl
inc
xor
in
mov
add
adc
or
je
or
test
lret
adc
repz
shr
or
jmp
push
stc
inc
and
test
icebp
lods
addr16
xchg
mov
and
mov
std
add
fwait
ss
aam
add
add
xchg
loop
dec
sub
and
pop
aad
std
sbb
addr16
jb
inc
or
out
loopne
xorl
and
addb
cmp
lods
add
mov
xchg
out
into
jmp
adc
push
fnsave
inc
out
jmp
mov
hlt
sbb
cmp
xor
xchg
pusha
fldcw
and
sbb
fiaddl
test
out
mull
mov
inc
mov
jbe
shll
daa
pop
jne
in
js
mov
scas
mov
test
mov
adc
in
pop
pop
movsl
in
cmc
and
mov
push
mov
test
fwait
das
push
mov
subl
mov
movsb
in
mov
mov
add
push
jle
mov
es
xchg
jnp
orb
inc
sbb
addr16
add
xchg
cmp
outsl
out
and
jmp
in
push
cmc
pushl
test
ja
dec
mov
insl
and
ja
xor
mov
xor
jo
test
sti
out
inc
aam
pop
cld
out
jl
or
in
push
push
aas
jb
icebp
sub
stc
pop
mov
sbb
sub
inc
sub
xor
mov
loope
mov
add
stc
adc
sbb
mov
jl
data16
je
sbb
mov
adc
in
gs
or
inc
test
push
test
ret
andl
jmp
shll
out
shll
and
push
int
xchg
xorl
jl
xor
aam
add
xor
aaa
push
ljmp
xchg
or
loop
mov
lds
inc
add
jg
xlat
mov
mov
cltd
or
add
cmp
std
xchg
aad
mov
test
jle
xor
shll
loop
cmpsb
scas
pop
bound
in
xchg
fnstsw
mov
loopne
xor
pop
enter
xlat
loop
cmpsb
pusha
xchg
stc
add
xchg
adc
xor
aaa
pop
mov
xor
cmp
lods
hlt
les
lahf
dec
sub
in
cmc
test
dec
xchg
dec
and
lahf
cmp
fsubrl
cmpsb
cmpsb
popf
adc
xchg
add
daa
push
cwtl
mov
push
xchg
mov
and
push
data16
in
test
nop
cmpsb
xchg
rcr
cmp
inc
cmpsl
or
mov
leave
mov
and
in
lods
in
mov
xchg
sbb
and
movsb
xchg
xor
add
in
inc
movsb
daa
aad
jne
jo
sbb
inc
scas
and
mov
in
test
pusha
les
out
and
pop
lahf
add
sub
push
and
fisubs
jbe
in
and
ss
dec
popf
test
repnz
and
jecxz
mov
insl
aaa
lds
mov
jnp
mov
movb
jne
xor
out
jbe
cld
mov
movsb
test
mov
mov
popa
cmc
xchg
test
pop
in
es
je
aad
sbb
sbb
push
shll
cmp
mov
out
addb
jg
add
pushf
mov
xchg
mov
in
sbb
daa
cmc
aam
and
xchg
fcmovu
mov
lds
sub
mov
adc
and
mov
test
test
pop
cmpsb
cmp
out
loopne
inc
push
dec
enter
fnsave
daa
in
sbb
mov
xchg
sub
mov
fnstsw
filds
addr16
xor
xor
ret
test
and
mov
xlat
mov
xchg
clc
pop
enter
test
das
sbb
cld
sub
shll
adc
ds
sub
push
scas
mov
fs
xor
and
test
repz
sahf
out
sbb
inc
add
add
mov
and
cmp
scas
pop
cmp
and
sub
clc
xchg
dec
hlt
and
xor
std
lds
push
mov
xchg
xchg
int
fs
push
out
xor
sub
add
jge
adc
loope
or
cmp
jne
in
sti
cmpsl
inc
jle
clc
lret
and
int3
addr16
in
and
add
mov
fwait
div
mov
mov
mov
xchg
fsubs
inc
mov
enter
cmpb
aad
xlat
or
sti
jmp
ljmp
mov
int
stc
and
and
inc
cmpsb
std
add
sbb
sarb
loope
in
inc
ja
cmp
xchg
es
cmp
and
cmc
or
inc
adc
flds
aad
xor
xchg
xchg
adc
xchg
aaa
mov
xlat
xor
in
and
sub
push
jmp
xor
pop
mov
jne
psrad
push
xor
mov
and
std
adc
not
cmp
mov
test
fdivp
mov
xchg
sub
adc
insl
add
push
xorl
in
bound
aam
les
cmpsl
mov
outsb
mov
lods
sbb
inc
fst
and
xor
jnp
jg
mov
loopne
test
mov
test
adc
cmpsl
add
mov
ja
cld
lods
test
mov
movsb
push
push
test
stos
das
mov
shll
mov
lcall
sbb
and
lds
mov
fs
fldl
and
negl
test
mov
add
xchg
xchg
pop
call
aam
addb
jnp
nop
jg
mov
xchg
and
stc
and
std
mov
push
jo
and
xor
sti
das
ja
and
les
push
aad
xchg
mov
aaa
and
inc
add
std
insl
mov
mov
gs
sub
add
in
jne
or
jns
sbb
xor
jno
call
in
add
aaa
sti
lock
test
mov
cmc
cmpsb
mov
xchg
sbb
outsl
movsl
xor
push
adc
pop
pushf
mov
das
es
sbb
lds
sarl
in
cmpsb
data16
sbb
test
cmpb
leave
inc
adc
popa
faddp
cmp
and
insb
mov
ret
in
xchg
aad
xor
jg
les
popa
es
inc
sbb
adc
ss
call
lds
mov
jae
movsb
mov
cmc
movsb
add
aam
cld
shlb
imull
scas
cmp
push
mov
push
dec
xchg
cld
cmc
out
sub
or
jecxz
cmc
test
pop
cmc
xor
sahf
in
mov
cmpsb
cmc
xor
aaa
mov
daa
push
cmc
daa
je
cmp
sbb
cmc
aas
fldl
shll
sub
adc
inc
xor
out
test
in
movsb
mov
add
leave
mov
lods
push
jo
cmp
pusha
cmpl
push
mov
outsb
cmpsl
inc
or
and
in
in
jecxz
xchg
add
mov
xchg
dec
daa
push
hlt
add
movsl
daa
cmpsl
mov
xchg
mov
in
sbb
in
xor
xchg
jle
les
test
je
out
out
sbb
jle
shrb
mov
stos
mov
in
aaa
mov
scas
jp
mov
adc
jmp
aam
movsb
testl
movsl
mov
test
mov
test
mov
out
aas
stos
sbb
xor
out
mov
inc
and
or
aad
fistpl
cmc
mov
inc
mov
or
cmpsb
arpl
imul
xor
les
cmpsl
jp
popa
cmp
push
je
add
jge
into
mov
les
movsb
je
mov
jbe
adc
ja
imul
sub
gs
add
xchg
xchg
xor
lods
xor
xchg
mov
jnp
and
dec
mov
sahf
add
in
jbe
gs
xor
movsb
jbe
call
or
rclb
jnp
inc
aad
pop
mov
push
add
sbb
inc
sbb
and
movsl
push
xchg
aaa
cwtl
adc
movl
es
pop
test
inc
inc
mov
add
loope
sub
lahf
mov
xor
nop
inc
lds
in
lock
mov
je
sub
mov
inc
cmc
movsb
bound
mov
lods
call
shll
lods
inc
aaa
add
call
imul
xor
and
xor
cmp
divb
nop
testl
push
mov
jge
or
push
and
test
pop
in
mov
pop
cwtl
cmpsl
movb
in
addl
aaa
leave
xlat
xchg
dec
cli
and
aas
add
cmpsl
ds
fnsave
xchg
int3
scas
pop
pop
xchg
cmp
jmp
fnsave
rcll
dec
pop
pop
inc
pushf
movl
inc
push
sub
push
pop
xchg
cmp
test
cmc
dec
out
fld
inc
push
push
push
loopne
mov
inc
je
movsb
mov
cmpsl
std
in
cmp
push
push
mov
pop
out
outsl
in
xchg
aad
xchg
jnp
mov
and
or
fldl
lds
push
roll
sub
int3
pop
jnp,pt
xchg
nop
add
jl
hlt
dec
test
add
mov
jbe
arpl
jne
xchg
fnstenv
fs
pop
mov
push
rolb
mov
jle
or
jnp
push
inc
and
add
sbb
jmp
in
lret
jae
nop
orb
cmp
pop
repz
int
fs
dec
mov
pop
addr16
out
fadd
les
in
inc
movsb
pop
cwtl
pushf
mov
push
jbe
inc
sbb
xchg
jmp
fldl
inc
ja
lret
dec
je
pusha
sarb
aad
inc
jecxz
mov
sbb
aaa
mov
gs
shll
sub
mov
je
push
xor
sub
scas
out
mov
mov
lret
mov
repz
movsb
sbb
mov
xor
test
and
aad
xchg
mov
test
cmp
inc
jbe
cwtl
xor
add
dec
add
cmp
mov
inc
aad
jb
push
push
cs
aam
pop
inc
xor
in
cmp
xchg
std
cmp
loope
mov
ljmp
icebp
xchg
icebp
inc
and
jns
add
inc
add
pop
xchg
and
mov
cwtl
mov
rcl
je
es
add
xchg
push
fs
popa
xor
clc
popf
mov
roll
sbb
frstor
je
xchg
mov
jecxz
lods
jmp
loope
negl
adc
loope
inc
movl
xchg
aaa
repnz
dec
mov
lods
and
sbb
and
cmp
pop
and
push
mov
ljmp
inc
inc
xlat
pop
mov
test
sti
cmpsb
cmp
add
mov
xchg
mov
add
hlt
andb
mov
and
sti
pop
and
pop
xchg
dec
mov
xchg
sbb
mov
fwait
inc
hlt
idivb
push
mov
repnz
test
mov
cmp
push
cmp
in
jl
aad
sbb
adc
lahf
sbb
dec
cmc
int
mov
push
insb
adc
lds
xchg
idivb
cmp
mov
lds
notb
sub
xchg
cmc
push
movsb
test
cmp
and
adc
jne
sub
mov
and
test
mov
roll
cmpsl
pop
mov
loope
and
in
mov
inc
push
pushfw
aaa
mov
jb
xchg
add
mov
lds
jnp
xchg
push
inc
aad
je
jecxz
dec
push
pusha
mov
test
andb
mov
mov
stc
in
pop
aam
or
out
in
lds
pop
lahf
ret
addl
cmpsb
adc
cmc
mov
in
mov
and
mov
push
in
adc
jbe
jmp
and
ffreep
jecxz
adc
mov
mov
xchg
jp
test
ss
std
hlt
ja
out
mov
or
push
insl
cmovbe
add
xor
xor
cmc
pop
addb
push
loopne
jmp
jl
add
loope
call
test
and
mov
add
and
push
mov
sbb
test
adcb
cmc
mov
mov
lock
std
jb
xlat
movsb
in
ja
popf
inc
jb
js
lds
in
clc
pop
pop
aad
lds
or
adc
pusha
push
xor
repz
xchg
loop
mov
or
fsubrl
inc
js
aas
addr16
xchg
sbb
mov
mov
loope
call
leave
cmc
notb
inc
add
push
sbb
mov
movsl
fsubs
pop
outsl
fcoms
adc
mov
cmc
adc
xchg
es
jecxz
mov
xchg
ljmp
add
mov
aam
adc
add
xchg
fsubs
cltd
xchg
test
cmc
jmp
pop
js
jecxz
inc
xor
pop
dec
xchg
aam
cld
jo
fisttpll
cmp
ja
pop
sbb
cmp
add
adc
stc
push
ljmp
add
test
mov
hlt
add
es
add
mov
dec
and
add
cs
inc
mov
mov
add
dec
jo
jnp
in
hlt
pusha
xor
jbe
xchg
aad
gs
cmp
insl
in
movsb
dec
cmpsl
inc
negl
je
outsl
add
dec
xorb
out
xchg
mov
in
push
and
mov
mov
mov
fdivrl
fdivrl
add
xchg
cmpsb
test
jl
xchg
lds
pop
inc
addr16
xor
mov
push
xchg
inc
mov
addr16
js
xor
adc
test
and
mov
mov
xchg
and
cmp
jbe
lods
movsl
adc
out
movsb
in
mov
inc
shlb
jl
jo
out
xchg
mov
mov
enter
lds
movsb
mov
push
mov
push
faddl
inc
in
test
aam
into
shrb
cmpsl
add
je
pop
je
repnz
mov
frstor
lds
daa
inc
sbb
cwtl
sub
mov
pop
cmpsb
push
ret
insb
xor
ret
cmpsl
frstor
cmp
out
adc
aad
or
mov
pop
punpckldq
aam
add
je
aad
loopne
dec
xlat
inc
aad
mov
fs
jecxz
and
sbb
jecxz
test
loope
test
stc
inc
outsb
jnp
mov
xor
add
dec
ja
xchg
fdivl
in
in
cmp
mov
pop
mov
in
or
jbe
and
lods
aad
push
cmp
sar
cmp
movsb
popa
or
adc
movsb
lods
pop
idivl
cltd
dec
popa
movsl
cmc
and
movsl
sub
xor
adc
push
sbb
addl
fisubl
addb
adc
cmp
mov
aam
lods
add
in
mov
pop
and
frstor
and
sbb
outsb
xchg
jns
movsb
int3
jne
fadd
xchg
lock
pop
jbe
push
lahf
add
ja
xchg
lret
clc
cli
cmpsb
fcomi
in
xchg
add
push
adc
adc
loope
aas
andl
xchg
out
and
cmpsb
addb
test
call
pop
sbb
int3
push
in
enter
add
clc
je
push
xor
icebp
in
test
mov
push
movl
je
dec
andb
lock
in
xor
test
rorb
inc
and
mov
nop
test
inc
les
fsubs
testb
xchg
cs
and
test
test
mov
push
xchg
inc
in
rol
mov
xchg
mov
inc
aad
fs
push
adc
pusha
dec
mov
push
pusha
in
fs
inc
movsl
mov
dec
cld
je
std
pop
cmp
cmp
lds
dec
cmpsl
daa
jns
mov
dec
daa
mov
pop
pop
jecxz
pop
xchg
xchg
push
testb
fdivrl
fldl
xor
test
sarb
push
xchg
dec
ret
mov
lds
aad
je
je
adc
sub
dec
push
mov
in
mov
ja
fstl
xor
or
pop
mov
pop
cmpsl
xor
daa
insb
cmpsb
inc
mov
les
add
mov
mov
adc
pop
les
cmp
ja
and
push
cmpb
jno
daa
pop
ret
add
movsb
test
insl
pop
out
testb
shll
movsb
stos
inc
sarl
mov
cmpsl
xor
cmp
xchg
pop
mov
adc
xor
lds
adc
movsb
mov
cmpsb
ja
and
mov
inc
adc
add
test
jno
pusha
add
xor
test
mov
jne
aas
xchg
jbe
mov
mov
jbe
xchg
xchg
gs
or
or
sub
in
fs
dec
movsb
pop
xor
mov
shrl
cmpsb
xor
daa
cmpsb
nop
je
popa
mov
jne
add
aaa
icebp
inc
movsb
movsl
mov
adc
inc
dec
inc
in
cmpsl
pop
aaa
xchg
aad
push
push
in
fnstsw
mov
inc
mov
shll
add
fnsave
push
stos
mov
xor
mov
adc
push
or
xlat
inc
mov
jmp
es
nop
push
xchg
out
ja
jne
sbb
addb
aam
pop
cmp
stc
je
add
cmpsb
xchg
ss
test
ljmp
shlb
xchg
xor
ss
adc
sbb
addr16
iret
les
fs
cmpsl
pop
test
les
xchg
loope
test
push
sbb
sub
cwtl
ret
scas
enter
clc
or
jmp
fs
adc
cmp
out
dec
lds
data16
mov
cmc
xchg
pop
shll
jae
insb
push
inc
aam
push
loopne
jg
lock
filds
aas
cmpsl
pop
lock
int
notl
mov
daa
bound
mov
test
test
jecxz
cwtl
notl
jnp
jbe
notb
dec
sahf
jp
arpl
pushw
clc
push
std
inc
andl
mulb
and
push
es
cmc
inc
inc
stc
test
aad
je
cmp
lds
test
and
xlat
lahf
lds
xchg
inc
sub
pop
mov
out
addr16
inc
xchg
sbb
adc
inc
pop
and
out
adc
xchg
je
aad
lret
adc
mov
inc
mov
aad
mov
inc
negl
div
hlt
repz
cmpsl
inc
cmc
cmpsl
and
xchg
mov
mov
outsb
mov
inc
xor
dec
add
xor
test
pop
jge
sbb
mov
add
into
push
sbb
arpl
insb
mov
mov
sub
or
hlt
adc
push
in
add
andb
jge
xlat
aad
icebp
mov
xchg
sbb
mov
jbe,pt
xor
aad
nop
xor
stc
jmp
test
insb
mov
rol
in
cmp
add
mov
mov
lcall
push
jno
mov
stos
xor
mov
aam
daa
xchg
dec
xor
adc
out
sub
or
push
imul
or
fnstenv
dec
mov
xlat
cmp
pop
lds
cmp
mov
mov
mov
enter
xor
xchg
xchg
loop
bnd
sub
pushf
jmp
mov
shl
int
test
imul
mov
or
movsb
mov
scas
pop
aad
popf
mov
sbb
push
pslld
rorb
cmp
mov
frstor
call
jae
mov
cmpsl
mov
movl
outsl
mov
nop
js
subl
xchg
fs
fsubrl
cld
scas
jmp
xlat
leave
mov
dec
std
lds
int3
call
daa
push
rcrl
rcrl
mov
mov
sti
in
mov
inc
xor
mov
jp
ljmp
lods
mov
cmpsl
idivl
jbe
aad
xchg
cmc
repz
add
std
repz
push
sbb
and
flds
pop
mov
pushf
rclb
arpl
insb
cli
inc
cmp
jo
ja
aad
loop
insb
icebp
pop
icebp
aad
in
jmp
fdivrl
push
cmc
or
mov
jne
push
in
scas
push
test
outsl
xor
cld
mov
and
sbb
repz
lods
push
mov
jge
xchg
call
or
cmp
outsl
lods
adcl
xor
or
test
ja
out
jno
jl
sti
int
movsl
dec
add
in
imul
lahf
sbb
or
sbb
adc
xchg
mov
in
jecxz
jge
mov
and
jbe
aaa
aas
arpl
loopne
push
sub
adc
push
lret
ret
mov
jae
scas
push
push
clc
int3
or
xchg
je
lea
das
fs
ficoml
adc
cmp
ljmp
repz
mov
and
add
xchg
mov
adc
pop
mov
xchg
cmp
pop
stc
pop
jne
push
outsl
mov
mov
ret
lahf
pop
and
icebp
data16
mov
je
pop
insb
mov
std
jae
inc
rolb
xchg
push
dec
mov
daa
daa
mov
cmpsb
fimuls
pop
je
notb
xlat
pop
lds
mov
sahf
mov
scas
push
lock
and
mov
dec
push
mov
clc
imul
cmpsl
jecxz
mov
or
xchg
clc
inc
test
sti
push
add
test
mov
outsb
in
and
sub
scas
cmpsl
and
cmc
shll
stos
and
ret
xor
pop
mov
jmp
mov
mov
xchg
jbe
and
and
cwtl
jbe
mov
rcrl
outsl
cli
jnp
out
lock
pop
xchg
dec
rcrb
dec
arpl
mov
mov
and
jne
mov
aaa
fsubrs
repz
cs
pop
cmpsl
sub
push
lret
cmpsb
jnp
pop
mov
jae
mov
pushf
fnstsw
notl
shll
mov
in
sbb
cmp
mov
push
test
mov
in
push
mov
outsl
push
loopnew
std
mov
add
add
dec
xchg
or
js
and
jno
lods
mov
adc
pop
je
mov
mov
cld
ss
fbld
enter
dec
add
aas
testb
mov
jmp
adcb
mov
jg
push
das
jbe
cld
mov
shl
jl
jnp
mov
inc
fcomps
xchg
clc
data16
std
scas
movsb
mov
push
push
xchg
jmp
jg
jnp
sub
add
lahf
mov
daa
xor
addr16
mov
jnp
push
mov
fs
mov
cmp
add
inc
pop
out
push
rorl
push
lcall
cmp
mov
xor
sbb
mov
jnp
xor
jae
jp
cmc
mov
gs
cld
popf
lods
jge
jnp
stos
cmp
outsl
mov
xchg
es
lahf
in
mov
cwtl
dec
jbe
rorb
add
mov
imul
xchg
fistpll
sti
mov
xor
mov
mov
mov
cld
in
push
mov
mov
mov
mov
arpl
shrb
out
adc
mov
xor
adc
xchg
xlat
sub
daa
shlb
mov
xchg
sbb
jle
int3
data16
push
ficoms
push
in
and
nop
sub
adc
test
fucomp
fwait
movsb
mov
sub
add
xor
sbb
in
adc
ret
insb
je
call
insb
xchg
test
dec
mov
shlb
dec
rcl
icebp
mov
cwtl
je
cmpsl
ffree
sti
mov
pop
and
push
cld
mov
cltd
outsl
xor
inc
fsubs
xchg
push
in
xchg
in
add
mov
adc
movzbl
xchg
pushf
mov
hlt
xchg
pop
push
idivb
repz
daa
lret
lds
add
cmp
jecxz
sbb
xlat
and
cmp
int3
dec
mov
pop
std
imul
jle
inc
imul
cli
mov
mov
stos
and
xchg
ja
and
mov
movsb
imul
add
lock
mov
ja
mov
mov
inc
xchg
data16
inc
pop
gs
testl
imul
jmp
shlb
mov
imulb
popf
sbb
xchg
dec
push
shr
sub
stc
ss
jb
movsb
add
or
pushf
testl
popl
adc
lret
xchg
add
aad
or
jb
pop
inc
mov
adc
rcll
pop
shll
test
sub
loop
sbb
stc
aas
dec
mov
int
xor
xor
in
xchg
shll
movsb
popa
sbb
jae
add
mov
sbb
loope
sub
push
out
dec
rcrl
mov
lods
es
xor
inc
fwait
out
push
lahf
mov
idivl
add
add
sbb
fwait
add
xchg
pop
outsb
mov
xchg
dec
mov
xor
sub
jbe
shl
xchg
aam
imul
mov
add
xchg
fists
push
adc
imul
adc
cmpsl
mov
in
inc
mov
and
xchg
loop
jl
mov
nop
pushf
in
pop
fwait
jmp
add
xor
aas
add
add
push
mov
stos
mov
mov
pop
aad
mov
adcb
rcll
pop
mov
dec
out
hlt
pop
xor
imul
dec
hlt
inc
or
xor
ja
outsb
sbb
xor
nop
hlt
test
gs
mov
mov
mov
cmpsb
xor
fwait
insb
dec
cmc
aas
cmp
mov
push
adc
adc
dec
mov
mov
test
stos
fwait
lahf
mov
mov
out
pop
mov
xorb
popf
or
aas
and
jmp
test
cs
adc
filds
mov
and
jae
jnp
mov
push
adc
mov
jae
jle
add
fistpll
es
mov
mov
lds
mov
lock
lds
xchg
cld
xchg
sbb
mov
push
fistl
sbb
mov
push
add
mov
ret
push
mov
and
loopne
mov
ss
ret
pushf
je
sbb
lods
jmp
lea
mov
mov
fidivrs
hlt
mov
sbb
inc
hlt
jl
sbb
inc
test
pop
scas
arpl
insl
in
mov
lods
repz
mov
mov
and
mov
mov
xchg
arpl
cli
push
xchg
mov
sbb
negb
test
and
repnz
test
enter
loop
clc
popf
jbe
movsb
xchg
shl
pusha
lcall
inc
das
mov
ljmp
outsl
adc
adc
movsb
lods
push
jmp
mov
xchg
mov
jle
int3
and
xchg
dec
xlat
gs
xlat
xlat
pop
fsubr
out
push
lcall
scas
push
jmp
and
imul
mov
pop
pop
inc
mov
aad
mov
mov
and
xchg
test
and
lods
nop
aam
shrl
xchg
out
xor
mov
jl
add
aad
scas
mov
shll
mov
and
cmc
lods
sub
mov
sbb
add
cli
ss
push
and
adc
jbe
sbb
shrb
add
dec
sbb
mov
mov
mov
pop
sbb
mov
jne
add
sbb
int3
mov
fsubl
scas
lods
aam
jmp
mov
fistl
test
cmp
fcomip
jne
add
cwtl
pusha
and
aaa
dec
cmpsb
sarl
leave
mov
out
mov
outsb
mov
pop
fdivl
push
out
cwtl
and
cli
outsb
xchg
mov
jo
repnz
aaa
push
mov
and
scas
aas
jb
aad
dec
xchg
mov
shll
shl
mov
mov
out
insb
cmc
xchg
lock
orb
inc
mov
arpl
mov
pusha
xchg
add
mov
xor
js
lahf
xchg
enter
sbb
fstpl
dec
fcomip
cmpsl
out
lds
movsb
push
mov
fdiv
sbb
mov
jns
es
inc
jb
inc
or
jge
iret
xor
push
insb
repnz
pop
mov
arpl
xchg
xchg
lods
dec
nop
pop
or
mov
rcrl
and
movsl
pop
stos
pushf
add
xorb
ret
mov
ds
mov
and
mov
shll
add
clc
and
adc
mov
or
sub
movsb
mov
test
shrb
lret
cwtl
call
mov
xor
lcall
cs
pusha
or
sbb
out
and
lock
clc
mov
imul
mov
and
mov
clc
fwait
in
popa
jae
jnp
pop
lods
mov
sti
nop
mov
lcall
add
or
js
xchg
cmp
mov
int
push
cli
das
dec
repz
and
or
push
or
dec
mov
in
imul
ja
in
out
push
jl
rcrb
jle,pt
daa
repz
sahf
aam
adc
mov
leave
testl
adc
shll
xor
dec
sti
mov
sti
mov
and
loopne
mov
in
push
adc
xor
dec
movsb
daa
sbb
or
adc
mov
les
sbb
jae
cmpsb
sbb
scas
xor
xchg
lds
xchg
std
xchg
movsb
mov
rcrl
pop
inc
add
add
sahf
iret
sbb
out
cmp
bound
or
and
sti
idivl
mov
cmpsb
adc
push
adc
imul
aaa
mov
adc
or
jmp
sub
and
out
dec
add
pop
cmp
xor
sbb
lds
cmpsb
jle
mov
lock
pop
lds
mov
cmpb
cltd
aaa
jnp
repnz
lods
loop
sub
xchg
arpl
mov
push
icebp
std
dec
arpl
pushf
mov
sbb
data16
mov
loope
aaa
dec
pushf
test
nop
call
outsl
fnstcw
inc
mov
push
je
gs
push
cld
ror
aam
lret
jle
into
pushf
or
cmpsb
in
xchg
jp
add
push
add
dec
jb
lds
out
sbb
pop
inc
mov
enter
call
pushl
push
push
jge
sbb
je
xor
cs
xchg
jb
or
fsubrl
mov
cmp
push
xchg
mov
push
jns
scas
adc
arpl
jae
movsb
clc
mov
aam
xor
std
rclb
push
inc
popa
cld
pushf
mov
and
xchg
ss
push
add
xchg
cmp
in
jmp
sub
lds
pusha
or
popf
jnp
dec
push
int3
cmp
dec
jbe
xchg
dec
xor
inc
cmp
pop
stos
movsb
hlt
sbb
repnz
insl
push
out
imul
or
xor
mov
addb
xor
clc
xchg
popa
cmpsl
dec
add
and
sub
mov
cmp
pop
and
sbb
fbld
push
mov
xor
pushf
std
fcoml
sti
and
mov
mov
ljmp
lahf
stos
sbb
bnd
repz
dec
mov
dec
mov
ljmp
into
jno
mov
xchg
add
int3
movsb
and
xchg
and
into
pop
jmp
and
or
in
mov
or
sarb
dec
jecxz
push
inc
and
roll
in
sbb
out
push
xchg
loopne
mov
and
fwait
data16
pop
mov
pop
pusha
jecxz
pop
pop
mov
mov
and
cmpsb
xchg
cwtl
adc
test
loop
mov
ret
sbb
pushf
mov
mov
js
jae
mov
call
hlt
and
jl
xchg
pop
mov
out
stc
imul
mov
dec
sbb
mov
dec
sbb
mov
mov
sti
adc
mov
ret
jmp
xchg
lahf
lret
sbb
mov
sub
enter
jg
fsubr
aaa
jb
scas
or
pop
pushf
repz
repnz
jecxz
test
sbb
jnp
fldl
stos
jae
rclb
sbb
cmp
loope
mov
mov
lods
dec
pop
aaa
sub
sbb
sub
xchg
and
mov
enter
push
sub
cld
mov
mov
xchg
es
lret
jl
add
cld
cli
cld
stc
mov
imul
ja
pushf
mov
pop
aad
push
adc
and
test
mov
sub
and
mov
mov
sub
xor
xor
push
outsl
sti
mov
insb
xchg
jg
aas
sbb
xlat
xchg
jbe
testl
add
mov
outsl
inc
jnp
cld
pop
jl
xchg
mov
data16
jmp
test
mov
mov
lahf
cmc
ljmp
sbb
cmc
mov
out
jecxz
adc
sbb
pop
hlt
mov
push
roll
iret
lods
push
lea
sub
jno
cmp
xlat
fsubs
repnz
negl
jl
add
mov
pop
bound
xchg
jns
movq
pop
enter
mov
scas
fisttpl
cld
sbb
in
jmp
sbb
xchg
xor
jecxz
cld
xrelease
rcrb
or
setl
iret
cmp
fmul
sbb
popf
push
jb
js
lea
arpl
aad
mov
xor
pop
ds
add
dec
xchg
call
jl
fdivrs
stos
mov
jecxz
mov
cmpsb
outsb
push
std
shr
jnp
rolb
clc
and
sub
sbb
in
mov
arpl
sahf
mov
xor
pop
sbb
data16
mov
pop
jne
and
ja
sarl
mov
and
cld
mov
fsubs
int
loop
fwait
clc
xchg
jmp
lret
push
or
sbb
faddl
repz
leave
xchg
stos
in
imul
sarb
mov
rcl
or
movsl
cmp
pusha
bound
jbe
lea
or
jmp
cmpsb
lea
fldt
test
lea
jnp
cmp
mov
movsb
dec
mov
cli
add
cmp
shll
cwtl
and
lods
movsb
aam
sarb
cmc
mov
dec
mov
mov
xchg
test
bound
jns
xchg
gs
ljmpw
lcall
adc
out
roll
mov
fisubl
or
bound
mov
imul
push
mov
es
leave
xlat
jmp
icebp
sbb
out
push
xor
scas
hlt
ja
pop
sbb
pop
mov
mov
mov
add
bound
jecxz
je
decl
sbb
push
lock
leave
fs
loopne
pop
or
ret
insb
ss
les
sub
loop
jbe
shlb
aam
push
add
std
xchg
push
mov
xchg
insl
pop
mov
mov
mov
testl
adc
fs
insl
movsb
xchg
pop
rol
pop
repz
mov
pop
outsl
ret
mov
iret
push
jo
loopne
rorl
stos
jg
outsl
pop
fwait
outsl
push
pusha
lret
lods
jg
add
scas
nop
ficomps
in
push
sbb
orl
add
ja
loopne
ds
and
adc
dec
mov
mov
add
iret
scas
jne
stc
movsb
xchg
out
mov
mov
nop
in
xchg
sbb
popf
mov
mov
sarl
int
lds
imul
pop
lds
jno
mov
test
dec
jnp
mov
in
fsubs
pop
and
pop
xchg
cmc
xchg
shl
adc
and
jl
dec
paddusb
lret
adc
in
loope
jnp
mov
mov
in
jle
fsubrs
cmc
mov
std
mov
and
push
lcall
fistpll
or
or
or
cltd
nop
fsubrl
int3
imul
lods
pop
lods
adc
xlat
mov
popf
sbb
push
push
mull
std
mov
add
cmp
sbb
jmp
jbe
add
ficompl
ja
push
ret
and
jb
and
pop
xchg
fsubs
jmp
mov
lahf
stc
nop
out
gs
out
xchg
in
and
mov
outsb
mov
decl
mov
mov
inc
pop
cmc
aaa
push
adc
xchg
fsubs
aaa
xor
scas
repz
insb
out
test
nop
rclb
shlb
mov
lods
fists
and
insl
xor
push
insb
mov
xchg
out
enter
imul
dec
xchg
js
mov
cmpsb
stc
cmp
test
mov
mov
addr16
sti
cltd
arpl
ja
mov
stc
loop
inc
pop
and
jecxz
data16
sbb
sti
jg
insb
jb
aaa
cli
scas
jbe
push
jge
sbb
cmp
mov
aas
xchg
mov
ljmp
cltd
add
enter
mov
lds
shlb
pop
and
arpl
cld
jae
xchg
jae
ss
stos
xchg
loop
divl
or
movsb
mov
push
pop
sub
mov
sti
mov
hlt
jb
xchg
pop
mov
pop
pop
cwtl
adc
xor
les
out
xchg
push
fidivs
aam
fsts
jle
jle
dec
and
cld
fcoml
mov
mov
cmp
out
mov
sahf
xchg
adc
pop
mov
mov
std
lahf
push
inc
sbb
mov
or
mov
adc
repz
int
js
jns
or
mov
mov
xchg
and
cld
push
and
xor
push
cmovg
xchg
inc
mov
adc
mov
xor
push
mov
push
repz
ja
ljmp
bnd
and
dec
les
dec
in
sbb
xor
cmp
daa
pop
bnd
lcall
push
jmp
mov
les
sbb
insl
int
loop
pop
cwtl
mov
push
jb
lahf
pusha
mov
lcall
push
aas
mov
movsl
pop
mov
stos
lods
mov
in
jp
fdivs
sbb
pop
inc
addr16
out
xor
call
ret
addr16
sbb
sbb
push
xor
pop
loope
aaa
int3
mov
mov
call
shrb
mov
sub
mov
xor
js
cmpsb
aam
mov
loopne
cmp
jae
mov
ret
add
sub
push
js
add
add
int3
in
sahf
push
insl
pop
pop
stc
xchg
pavgb
jge
pop
add
xchg
sahf
xchg
bound
mov
or
xchg
mov
xor
dec
xor
icebp
cmpsl
dec
mov
hlt
jmp
push
sbb
data16
int
mov
ss
sub
xchg
cmp
push
xor
lea
stos
mov
enter
movzwl
loop
lahf
aam
push
xchg
dec
fmull
mov
and
xlat
mov
xchg
shlb
bound
fiadds
mov
nop
mov
lock
rol
movsb
sbb
jl
jl
inc
in
xchg
shll
mov
cmp
add
adc
mov
in
lcall
sbb
fs
inc
push
xor
movsb
cltd
pop
imulb
sub
xchg
mov
push
cmpsl
push
xor
sahf
test
xchg
fs
jge
fistpll
xchg
or
outsb
movsl
je
jp
sub
add
mov
cmp
xor
dec
stos
pop
pop
in
cmpsb
sbb
iret
xchg
pop
fists
sahf
sbb
stos
popf
or
mov
mov
daa
divb
xor
bound
push
mov
fstps
dec
cld
lods
lret
or
add
xchg
adc
les
mov
call
divb
in
std
mov
mov
movsl
adc
xchg
mov
in
mov
xchg
notl
iret
nop
pop
sbb
enter
divb
pop
loop
incb
mov
adc
jle
rorb
enter
mov
xchg
or
mov
popa
mov
sbb
jecxz
mov
int
push
decb
insb
popl
movsl
sbb
mov
jle
jnp
dec
mov
adc
lock
jnp
je
ret
xchg
dec
mov
sbb
decb
xchg
rclb
arpl
es
lods
mov
loope
mov
and
bound
cld
mov
jecxz
insl
test
add
xchg
mov
sbb
mov
lods
decl
mov
ja
nop
xchg
imul
mov
movsb
dec
mov
fnsave
loop
fwait
jnp
pop
shrb
mov
and
lahf
scas
push
enter
pop
adc
rorl
js
pop
je
xchg
mov
sbb
out
jl
lock
push
jmp
in
add
mov
sbb
das
and
adc
add
and
pop
or
mov
iret
jae
fldt
push
mov
mov
jmp
lea
dec
jmp
scas
fmull
popa
cwtl
cwtl
fs
pop
mov
pop
test
or
or
dec
gs
mov
jae
int3
call
notl
cmp
jge
pop
sub
lods
sbb
test
xchg
aam
mov
mov
sbb
jnp
xor
xchg
push
mov
pop
jae
aad
xor
cli
push
repnz
lret
push
or
xchg
out
rorl
adc
loop
nop
mov
outsb
mov
loop
mov
loop
and
lahf
clc
test
dec
pop
pop
jne
fdivrl
pop
push
jg
fsub
or
jbe
fiaddl
lret
dec
test
stos
pop
stos
mov
mov
xchg
shrl
and
outsl
cli
push
mov
rclb
jbe
xlat
repnz
sub
arpl
sti
mov
gs
or
test
xchg
adcl
mov
cmp
cmp
fwait
add
sbb
pop
andl
mov
lock
imul
ds
fdivrs
shlb
pop
cwtl
mov
pop
jmp
andb
push
jne
xor
push
mov
or
movsl
xchg
push
mov
jp
push
mov
jo
popa
inc
jle
add
insl
shr
popa
nop
mov
xchg
dec
jnp
shlb
sbb
or
mov
and
xchg
arpl
xchg
jg
lret
jle
enter
imul
jne
lods
inc
arpl
pusha
push
mov
arpl
in
fmul
scas
jge
hlt
push
push
jmp
xchg
loop
sbb
mov
mov
inc
movsb
xor
mov
push
and
xor
add
jecxz
fwait
jecxz
sbb
mov
sbb
mov
insl
shrb
mov
fwait
scas
push
fs
mov
add
xlat
sti
adc
divb
push
jnp
mov
add
sbb
pop
jg
mov
xchg
sbb
lcall
movsl
add
pop
daa
movsb
mov
jl
ljmp
hlt
and
call
xchg
pop
faddp
push
test
xor
ror
out
pop
mov
mov
add
loopne
pop
arpl
stc
adc
and
mov
cs
dec
out
je
inc
pop
push
cmp
ds
lret
xor
xchg
mov
pop
aad
je
and
xlat
pop
add
icebp
cmpsb
jbe
and
fwait
add
adc
sbb
jmp
adc
dec
mov
adc
mov
mov
stc
pusha
or
movsl
and
cltd
mov
test
inc
jp
pushf
mov
dec
push
add
add
inc
cltd
cmpsl
nop
fs
adc
repz
scas
jo
jle
cld
lock
jnp
aad
xlat
out
xchg
sbb
inc
mov
sbb
mov
add
out
jmp
jb
jnp
push
clc
mov
mov
dec
ss
ljmp
insb
enter
orl
dec
cmp
enter
out
int3
in
mov
or
lcall
std
xor
call
or
jnp
jle
jno
fs
or
int3
mov
dec
loop
mov
shlb
es
jne
aaa
mov
lods
mov
mov
cli
xor
jg
mov
jp
ret
xor
and
aad
popa
test
lret
loop
sbb
shlb
mov
int3
mov
rolb
stos
pop
adc
jbe
dec
push
jp
mov
xchg
hlt
push
ljmp
lds
nop
fcoms
jne
neg
out
jecxz
mov
push
faddl
jb
dec
iret
dec
sbb
aad
fdivs
dec
lret
scas
xlat
fsubrl
cltd
and
jl
int3
jnp
enter
pop
fadds
mov
adcb
pop
xor
or
mov
ja
aaa
outsb
adc
fimuls
lock
pop
or
jbe
dec
push
cmp
fucompp
push
dec
xlat
aam
icebp
adc
call
ljmp
add
lret
mov
xor
adc
mov
test
dec
outsb
cmc
mov
xchg
pop
aam
arpl
rcl
hlt
bnd
scas
mov
dec
sti
loopne
sbb
jnp
pop
enter
shlb
inc
jbe
addr16
test
mov
je
jmp
jno
fldcw
xchg
mov
aam
imul
mov
xchg
in
pop
mov
jle
out
adc
jmp
add
repz
and
orl
mov
testb
pop
test
nop
xchg
sub
pop
push
jno
out
aaa
sbb
dec
cwtl
call
movsb
lret
cli
test
or
int3
pop
sub
call
sahf
push
sbb
test
mov
aam
and
add
lds
pop
scas
rorl
sti
or
out
mov
lret
sbb
repz
mov
stc
test
dec
xchg
cmp
and
icebp
movsl
test
inc
push
subl
repz
and
mov
bound
mov
adc
or
sub
inc
dec
dec
es
popa
sbb
and
add
sub
pusha
cmpsl
and
ss
jg
movsb
in
adc
les
pusha
xchg
mov
push
out
mov
jg
jecxz
and
data16
inc
out
mov
mov
sub
sub
out
js
dec
nop
and
in
das
and
push
iret
ss
in
les
xor
and
add
lock
mov
mull
in
addb
and
adc
inc
movsl
in
xor
xchg
xchg
add
out
mov
jg
jecxz
pop
mov
hlt
sub
add
in
xchg
movsb
add
fs
pop
or
and
test
pop
jg
jecxz
out
inc
psubb
in
or
out
movl
add
inc
es
jg
jecxz
rcl
test
sub
mov
and
adc
inc
psubb
fs
jg
jecxz
add
and
in
mov
pop
sub
and
adc
daa
pop
mov
jl
loop
cmpsb
adc
xchg
movaps
mov
es
jl
pusha
push
aad
scas
add
mov
mov
lds
and
test
xor
xor
mov
aad
scas
fs
icebp
cmpsl
mov
in
shll
pop
roll
in
scas
fs
cmpsb
les
adc
stos
movsl
data16
andb
out
clc
in
xor
test
xor
xchg
out
add
lds
ss
in
mov
inc
jne
in
scas
lds
fs
pusha
addr16
sub
mov
ss
fnstcw
sub
inc
xor
jl
adc
adc
lds
aaa
push
test
inc
addr16
cmp
pop
add
jl
fs
push
aad
movaps
jmp
jg
cmpsl
jecxz
pop
insl
andb
push
sub
mov
lds
out
repnz
cmpsb
adc
xchg
mov
in
es
aad
scas
addr16
movsb
mov
inc
mov
pop
sub
mov
test
fs
pop
adc
test
popa
in
addb
cmp
cmp
inc
xchg
movsb
add
xchg
mov
jl
mov
ja
sub
lea
add
in
inc
mull
xor
in
scas
sub
loopne
in
cmpsl
mov
jg
jecxz
adc
das
inc
xchg
cwtl
pop
xchg
out
aad
fs
dec
push
jno
jecxz
inc
add
jmp
stc
add
je
shlb
insb
jle
xchg
inc
cmc
and
daa
test
lds
les
test
jne
jbe
cmc
jmp
jmp
fidivl
cmp
cmp
adc
rcr
push
add
sbb
hlt
lock
mov
cmc
mulb
add
xor
add
mov
cmc
std
push
pop
adc
ds
icebp
mov
mov
in
xchg
enter
and
adc
inc
mov
pop
es
aam
and
aaa
aam
popa
add
out
xor
xor
inc
hlt
adc
movsb
repz
daa
and
mov
add
mov
mov
jecxz
pop
std
pop
adc
and
cmp
movsl
xchg
push
cmc
jbe
repz
mulb
push
mov
fildl
shll
xor
int3
addr16
sarb
mov
cmpsb
push
xor
lods
adc
repz
andb
ds
mov
jecxz
and
and
add
mov
and
and
std
push
pop
add
add
xchg
sti
in
dec
ret
lcall
mov
cmpsb
jg
add
xor
and
or
fstpt
inc
pusha
mov
and
mov
cmpsb
cmp
mov
pop
cld
push
clc
and
cmp
and
pop
hlt
sarb
cmp
es
xchg
pop
mov
and
arpl
adc
call
das
sub
lret
in
sub
in
sub
jne
loopne
push
jge
loope
fdivr
test
fdivrl
fdivrs
test
fdivs
xor
add
sub
lret
rol
sub
shlb
adc
pop
push
jge
loope
enter
cmp
mov
les
les
pop
mov
and
arpl
adc
mov
mov
and
mov
and
std
and
add
mov
and
std
add
mov
addr16
add
mov
and
adc
fs
and
add
xlat
push
jbe
push
ss
les
test
cwtl
in
mov
cmpsl
lds
jecxz
and
icebp
jne
test
and
add
mov
lods
and
gs
lods
addr16
xor
stos
lds
cld
mov
dec
cmpsb
pop
xchg
cmp
push
inc
xor
jmp
sub
cmpsl
push
lds
out
mov
mov
xor
test
test
jo
xor
xor
ja
lds
cmp
insb
dec
push
loopne
cmc
mov
cwtl
es
pop
gs
leave
add
push
int
testb
and
sbb
dec
xchg
loop
std
aaa
int
lds
inc
lret
xchg
out
movsb
cli
lds
adc
iret
je
and
mov
addr16
pop
xchg
jge
jmp
xor
inc
cmc
or
mulb
mul
movsb
jle
fnstenv
mov
xor
out
das
testl
cmpsb
sub
adc
loopne
adc
mov
adcb
daa
das
and
data16
out
movsb
ljmp
ja
and
pop
and
std
data16
or
lret
xor
sbb
or
mov
pop
dec
mov
and
leave
mov
mov
and
jmp
lds
pop
std
les
divb
xor
and
out
aam
shl
sub
xchg
cld
jne
sub
pop
dec
cld
in
movsb
daa
adc
add
xor
xchg
cld
xor
faddp
xor
dec
add
dec
mov
mov
mov
xchg
cmp
mov
out
cmp
ja
inc
or
pop
add
jle
mov
shl
ret
insb
xor
mov
adc
inc
jmp
adc
and
push
in
ret
add
mov
fnstcw
int
mov
sarb
mov
xchg
mov
mov
ja
fs
sub
ss
ss
movsb
push
lds
mov
mov
xchg
std
sbb
adc
ja
cmc
loope
add
jne
mov
mov
xchg
pop
mov
rcll
jl
insb
xor
mov
push
int
sub
es
pop
jmp
jmp
fstp
jbe
ja
mov
arpl
fsts
add
ja
test
shl
aad
fabs
rcr
dec
sbb
adc
ja
or
leave
pop
sub
rcrl
sub
shll
fidivl
mov
lds
xor
mov
cmpsb
xchg
fcomp
rcrl
dec
jl
and
mov
and
add
mov
and
std
aad
shll
xor
mov
cmpsb
and
std
lods
xor
add
xchg
pop
mov
pop
addr16
aam
xchg
pop
mov
jbe
idivb
mov
and
addr16
and
inc
push
xchg
and
repz
add
movsl
int3
pushf
addr16
imul
jns
mov
and
shlb
add
and
add
jb
adc
sbb
and
je
cs
cmp
movsb
and
arpl
std
daa
out
movsb
sbb
into
and
daa
inc
xor
mov
mov
jecxz
xor
out
pop
fists
inc
push
push
mov
push
sub
add
outsl
add
movsb
cmp
mov
mov
test
cld
push
movsb
faddp
arpl
clc
ss
mov
xchg
data16
jle
lret
testb
rol
push
push
aaa
pop
xchg
push
pop
je
ja
cmc
adc
push
pop
push
xor
push
aaa
ret
cmp
rol
test
test
xor
adc
loope
std
mov
test
das
xor
xchg
sub
pop
cmc
jl
pusha
bound
rclb
xor
shll
mov
addr16
push
xor
dec
add
aad
pop
cmc
jl
pusha
bound
aam
test
push
addr16
sub
je
pop
sub
iret
repz
push
jbe
cmc
daa
pusha
mov
sub
test
sub
jmp
nop
mov
jecxz
sbb
leave
inc
cmc
jl
cwtl
jne
repz
jbe
test
addr16
in
and
xchg
push
and
inc
es
and
xchg
rcll
aad
cmp
pop
adc
xchg
sbb
call
cmp
mov
es
mov
xor
in
cmp
cwtl
adc
fadds
jl
loope
std
in
push
inc
cmc
out
pusha
push
addr16
xchg
push
scas
cmp
add
loope
adc
inc
cmc
dec
data16
cwtl
jbe
pop
std
jle
loope
fcoms
test
stc
jl
push
cmpsl
addr16
cmc
es
add
mov
cmc
mov
addr16
xchg
push
scas
xor
icebp
push
push
xchg
in
es
hlt
jge
fs
xor
icebp
fcoms
mov
shl
scas
mov
and
cmp
es
mov
mov
daa
loope
xchg
jl
loope
std
testb
push
mov
push
sub
and
out
aad
daa
addr16
xor
adc
inc
roll
push
pushf
pop
addr16
fsts
xchg
in
rcll
addr16
leave
mov
cmc
jbe
push
mov
int
divl
and
arpl
int
push
jle
in
clc
xlat
jbe
shr
mov
sahf
push
lea
rol
lds
push
daa
mov
das
xor
pop
mov
lcall
mov
mov
jle
mov
call
popa
std
xchg
inc
cmc
vaddsd
addr16
mov
mov
jle
cwtl
lods
push
addr16
fcmovnbe
xor
jbe
mov
push
cmp
cmpsl
test
test
data16
movsb
in
insb
inc
push
leave
inc
cmc
test
pop
divl
movsb
aam
push
add
stos
jbe
test
mov
xlat
xor
js
xor
cmc
les
es
js
cwtl
andb
cmc
xchg
fdivr
cwtl
cmpsb
pop
mov
je
jbe
xor
cmc
push
test
nop
mov
xchg
and
movsb
aad
xor
push
mov
push
push
test
pop
mov
and
mov
aad
xor
mov
loope
fcoms
mov
roll
in
mov
cmc
inc
pop
xchg
mov
adcb
in
test
xchg
div
jl
jle
mov
js
inc
mov
push
inc
mov
loopne
adc
test
pop
jo
inc
dec
mov
jmp
push
bound
aam
test
frstpm(287
shrl
push
pop
push
jbe
cmc
add
icebp
shll
push
xchg
push
mov
fs
jl
loope
repz
jle
sub
dec
push
lds
xor
popa
loope
add
sub
aad
movaps
es
movaps
mov
fisubrs
out
out
add
stc
add
es
mov
xor
cmp
pop
movaps
mov
aad
movaps
mov
add
les
aaa
aad
mov
mov
and
mov
data16
imul
pop
push
in
in
jbe
mov
xchg
cli
stc
mov
test
adc
or
out
adc
pop
mov
and
add
movl
jno
push
dec
xchg
jne
xor
inc
and
gs
je
and
movsl
lds
and
std
push
mov
dec
mov
in
xor
push
mov
jne
jmp
cmpsb
add
outsb
cmpsb
data16
out
je
jno
daa
mov
xor
test
in
aam
rolb
jecxz
pusha
xchg
fadds
test
or
xor
in
aam
shlb
cli
adc
adc
rcrb
out
jae
and
aaa
cmp
cmp
dec
sub
jns
aas
xor
ja
cs
mov
jbe
fdivrl
xor
sbb
xchg
pop
hlt
push
loope
les
cmp
mov
jp
pop
sub
jl
mov
push
jbe
arpl
sbb
jl
mov
xchg
les
cmpsl
and
mov
and
pop
and
pop
mov
cmp
or
int
stos
jnp
ret
adc
push
scas
mov
and
xor
mov
sti
push
xchg
movsl
pop
xchg
xor
jg
sbb
rcrl
add
and
push
sbb
call
repz
dec
pop
cmpsl
aaa
aam
xchg
test
test
repz
cmc
mov
push
pop
xor
movsb
adc
test
out
movsl
movsl
mov
xor
sub
adc
adc
mov
pop
negb
cmpsb
rclb
mov
mov
sub
or
out
add
std
mov
and
xor
xchg
and
mov
and
testl
mov
fs
mov
inc
push
and
std
push
add
outsb
es
test
mov
and
out
adc
xor
add
gs
lret
jmp
stos
mov
in
leave
xchg
xchg
cli
push
pop
leave
and
and
jbe
xchg
pop
ss
jg
movsb
es
xor
or
test
cli
inc
and
add
repz
xlat
insl
mov
xor
repz
mov
pop
and
and
xor
pop
xchg
and
bound
call
add
sub
push
fidivs
mov
pop
cwtl
pusha
movsl
test
sti
add
es
jne
lds
mov
and
out
and
xor
adc
jmp
mov
lret
and
aad
cld
leave
xor
ficoml
add
xchg
cmpsb
cld
addl
mov
hlt
daa
pop
fcoml
cmc
movsb
xor
lds
xor
nop
lods
es
and
daa
ret
push
mov
add
test
out
daa
fmul
push
jo
xchg
daa
mov
xlat
dec
and
push
mov
fidivl
je
addr16
push
arpl
xchg
daa
dec
and
fcoms
in
mov
arpl
push
ljmp
mov
scas
inc
add
xchg
push
and
cmpsl
ss
or
shll
push
mov
test
loope
add
test
daa
jne
addr16
nop
stos
daa
cmp
mov
ds
push
and
daa
pop
xor
mov
mov
or
inc
or
xor
xlat
or
cmp
and
out
daa
pop
xor
mov
out
jp
push
addr16
xor
decb
rcll
icebp
add
fmull
daa
inc
addr16
das
xor
test
mov
xchg
stc
xor
cmpsl
push
std
push
into
adc
cmc
jle
loope
adc
test
xchg
inc
call
mov
jl
push
mov
push
pop
in
jle
loope
adc
push
jb
push
nop
sbb
inc
addr16
xchg
push
cltd
push
fs
es
mov
ss
push
aaa
roll
shl
xchg
in
into
or
out
aam
xor
xchg
jbe
out
xlat
xchg
out
mov
mov
push
mov
ss
mov
xor
add
es
out
adc
sub
mov
push
mov
outsl
cmpsb
pop
imul
inc
nop
arpl
inc
or
and
jbe
fidivl
xor
pop
and
daa
and
inc
xor
gs
je
inc
xchg
xchg
mov
and
push
stos
daa
push
dec
xor
push
add
xor
out
movsb
fcoms
mov
notl
ss
sbb
movsb
loopne
or
aaa
mov
sbb
lds
jecxz
test
xor
les
popa
hlt
xchg
cwtl
or
push
push
pop
notl
jle
sub
and
pop
cmp
xlat
and
popa
dec
pop
test
pop
dec
mov
add
and
jge
rclb
clc
scas
xchg
jle
rclb
cmp
mov
sbb
push
mov
sub
les
jge
lahf
pop
cli
aad
popf
jmp
divl
aad
leave
push
xchg
jne
leave
aad
arpl
push
fisubrs
xchg
mov
push
push
enter
inc
addr16
or
cmc
mov
fcmovbe
mov
jo
xchg
and
mull
xchg
outsl
push
hlt
push
sbb
in
sub
xchg
and
out
cmpsb
mov
xor
pop
mov
mov
loop
clc
jbe
xor
in
and
shlb
in
hlt
pop
mov
add
jg
cmc
push
inc
ror
in
aad
call
lret
mov
ret
adc
fiadds
aad
mov
out
jbe
outsl
sub
out
cli
aad
std
jl
mov
test
mov
aad
dec
push
sbb
aam
aad
pusha
push
mov
aad
call
add
push
sti
xorl
outsb
aad
repz
ret
push
jge
push
call
mov
push
fisubs
cmc
cmpsl
push
add
xlat
adc
repz
repz
or
mov
push
jns
test
dec
aaa
in
sbb
mov
dec
push
xor
mov
push
loop
arpl
mov
sbb
jg
daa
mov
into
repz
arpl
outsb
push
clc
jno
shll
push
es
call
add
nop
mov
mov
push
mov
push
jns
xor
mov
lds
push
pop
and
lahf
push
rolb
xor
sbb
addr16
push
into
rep
and
mov
mov
daa
mov
shll
cmp
adc
es
gs
call
fs
cwtl
mov
xlat
xchg
mov
mov
hlt
popa
pop
pusha
mov
test
popa
mov
aad
lds
inc
aam
mov
daa
xchg
jbe
lods
mov
and
popa
pop
sbb
shlb
out
test
cmc
mov
mov
popf
es
cmpb
ljmp
rcrl
mov
loop
sbb
or
jle
in
repz
cmp
xor
cmp
push
es
push
mov
ret
jbe
stos
push
loopne
sbb
incl
xchg
jne
cmc
add
in
shl
shll
push
push
and
xorb
es
cmpsb
add
xchg
push
push
cmc
jl
arpl
addr16
shll
mov
jmp
ret
push
xor
ja
mov
pop
xor
mov
push
and
addl
dec
push
in
sbb
es
bound
sbb
push
les
jge
mov
xor
and
in
ud1
and
call
lds
fs
mov
mov
aam
pop
mov
jg
pop
call
mov
xor
aaa
cld
bound
divl
push
mov
adcl
and
mov
and
add
mov
ja
cs
movsb
add
and
movsb
inc
xor
mov
inc
pop
daa
les
test
notb
mov
push
add
cmpsb
push
es
and
in
je
cmp
pop
les
daa
ja
pop
std
dec
data16
adc
call
bound
jmp
jnp
lcall
jo
mov
cmp
inc
xor
in
mov
call
sbb
xchg
and
and
mov
and
jge
in
cmp
es
mov
pop
jge
in
cmp
insl
test
adc
inc
xor
push
inc
cmc
inc
cmp
xor
fs
loope
std
ss
xor
lods
lcall
push
xchg
mov
dec
jb
out
lods
loop
and
test
imull
sub
xchg
mov
pop
fs
in
je
and
pusha
andl
sub
data16
xor
popa
cwtl
sbb
vpmulhuw
mov
push
add
push
es
idivb
mov
dec
push
cmp
bound
es
in
repnz
push
push
out
xor
inc
mov
sub
pusha
aad
test
push
mov
jbe
es
fs
and
call
lods
push
ss
push
and
lcall
or
and
mov
cmp
jge
jmp
xor
ficompl
xor
sub
test
xor
cwtl
sbb
and
int3
inc
hlt
repz
push
push
jle
repz
rcrb
int3
inc
hlt
repz
push
push
repz
into
cwtl
sbb
and
int3
inc
hlt
repz
push
push
incb
lret
jl
lret
inc
fsubrl
popa
hlt
mov
aam
mov
xchg
or
and
mov
arpl
ret
jmp
xchg
or
and
mov
arpl
mov
data16
or
call
mov
cld
call
jns
cmpl
inc
cmc
cmpsl
cmp
mov
push
push
lret
push
repz
addr16
jne
xor
movsl
jb
xchg
jne
fstl
clc
xchg
mov
roll
scas
add
js
scas
push
inc
cld
aaa
test
mov
aad
pop
mov
sub
pop
mov
cld
jno
push
sub
cmp
in
push
push
mov
movsl
popa
in
test
jno
push
ret
push
jge
fs
push
add
cmp
cmc
lds
cmp
mov
cwtl
mov
out
mov
jbe
xor
mov
push
pop
pushf
test
xor
mov
inc
pop
dec
push
cmc
xchg
test
jmp
out
stos
xchg
movsl
push
mov
mov
test
aam
les
xlat
daa
add
add
push
adc
es
xor
repz
aam
repz
test
xchg
test
mov
push
addr16
and
repz
movsb
ds
jmp
and
cmc
les
movsb
xor
sti
inc
jecxz
pusha
push
adc
movsb
add
jge
mov
je
pop
cmp
cmc
xor
mov
push
mov
ljmp
and
das
mov
push
test
push
push
popa
jo
push
add
pop
mov
movsb
jns
cltd
test
sahf
cmpsl
popa
add
iret
add
push
inc
cmc
mov
mov
ja
inc
cmp
push
enter
lret
push
hlt
addr16
popa
add
sbb
mov
add
repz
jge
or
jae
repz
add
add
xchg
push
mov
stos
icebp
mov
or
add
iret
mov
mov
push
loopne
gs
mov
out
movsl
test
popl
out
push
dec
stos
adcl
or
and
sbb
pop
testb
fs
mov
xor
notl
xchg
cmp
mov
movsb
out
push
xor
jge
test
xchg
dec
add
push
mov
dec
push
fcoms
jns
cwtl
add
push
cmpsl
cmc
mov
pop
into
xchg
pop
push
popa
jb
mov
jo
add
adc
test
push
test
adc
arpl
hlt
roll
cmp
ret
push
jge
cmp
shlb
aad
mov
daa
mov
cmpsl
stos
movsb
clc
adc
imul
ret
push
jge
mov
test
xorl
adc
or
push
push
push
popa
push
push
sbb
xchg
mov
jbe
cwtl
jne
mov
mov
daa
jge
sub
into
push
outsl
sub
stos
adcl
sahf
cwtl
in
cmc
lds
sbb
in
stc
push
push
pop
out
movsl
jmp
jne
lret
mov
xchg
movsb
dec
lret
push
sbb
xchg
or
push
jge
outsl
inc
fdivp
cmp
stc
jno
cmpsb
aam
cmp
xor
aaa
shl
xchg
stos
leave
xor
sbb
mov
mov
idiv
pop
push
add
jle
and
xor
mov
cwtl
cmpsb
xchg
cld
movsb
xor
movsl
in
pushf
jns
push
mov
testl
inc
subl
mov
inc
mov
in
xchg
inc
adc
inc
push
imul
or
les
xlat
xor
jo
cwtl
add
pop
sbb
push
jp
sbb
test
jmp
loopne
cwtl
sbb
daa
pop
rolb
xor
loope
adc
xchg
mov
xor
ja
mov
repz
ds
mov
daa
loop
jge
push
pop
xchg
add
push
test
out
mov
shr
daa
push
testb
call
jo
mov
popa
or
push
sahf
shlb
mov
cmp
addr16
mov
xor
xchg
stos
xor
movsb
ja
shlb
mov
mov
je
test
lea
insb
addl
out
xchg
mov
xor
insb
gs
lcall
mov
lds
pop
sub
and
cmp
ss
hlt
shr
xchg
xchg
insl
daa
mov
xchg
popa
add
inc
push
mov
cmp
aam
int3
xor
xor
xor
fs
nop
xor
push
xor
push
mov
out
sub
and
and
ss
dec
fistl
and
mov
std
add
sbb
sbb
add
cmp
adc
adc
mov
and
arpl
mov
and
mov
jle
lret
movl
add
std
cmp
lds
fs
adcb
fwait
lds
outsl
mov
xor
movsb
mov
loop
loop
testl
in
testl
lcall
shlb
in
and
and
std
mov
xor
cwtl
sbb
sub
call
ja
arpl
xor
xchg
or
in
hlt
stos
test
cwtl
add
push
cmpsl
cmc
in
arpl
cwtl
jb
test
push
addl
pusha
xchg
push
daa
arpl
cwtl
outsl
inc
insl
sub
mov
mov
insb
xor
mov
cmovne
push
popa
cwtl
std
mov
inc
sahf
jl
add
jbe
aad
mov
insl
sub
sbb
test
add
pop
jbe
out
movsb
test
jbe
push
fcompl
test
cwtl
add
int
mov
xchg
or
cwtl
and
leave
add
addr16
dec
pop
inc
cmp
fwait
inc
shl
lds
in
push
push
cmc
pusha
movl
jne
ss
lds
cmc
dec
dec
inc
add
in
fcoml
inc
test
cmovne
push
popa
dec
mov
mov
inc
sarl
movsb
imul
push
decl
and
mov
out
movsb
imul
push
pushl
stc
outsl
insb
adc
movsb
fsubs
push
inc
outsl
sub
dec
roll
mov
inc
enter
cli
mov
push
sbb
loope
add
fcoms
out
and
enter
push
jge
and
jo
test
adc
fstps
scas
inc
cli
and
shl
fisubl
outsl
je
outsl
hlt
mov
aam
and
pop
addl
movaps
or
xchg
cwtl
xor
popa
aaa
ljmp
mov
loop
enter
or
shll
mov
dec
cmp
pushf
ss
je
gs
addr16
rcll
push
mov
push
jns
cmpl
push
sub
push
mov
push
popa
mov
xor
sbb
movsl
ja
daa
repz
xchg
hlt
xchg
or
mov
and
and
and
xchg
push
push
gs
add
push
push
rcl
pushf
mov
pop
add
cmpsl
xchg
mov
mov
dec
push
lock
jge
mov
dec
pop
je
sbb
sbb
loopne
sbbl
scas
cmc
jmp
jbe
push
mov
mov
pop
xor
sbb
leave
push
mov
and
push
pop
in
adc
adc
xchg
in
es
sbb
pop
mov
and
fidivl
mov
pop
sbb
faddl
in
fisubl
jmp
or
add
push
mov
cmc
in
sbb
or
push
push
lretw
mov
add
push
sub
nop
jbe
insl
sub
xchg
addr16
je
jmp
jg
movsl
cltd
fisubl
hlt
cmpsl
mov
sub
mov
push
cmc
stos
popl
add
jae
popa
xor
fbstp
push
xor
and
flds
mov
and
and
adc
lds
je
xlat
push
xor
dec
movsb
jmp
and
ja
dec
loope
jecxz
fadd
mov
xchg
jecxz
jecxz
fadd
mov
ficoms
mov
jecxz
xchg
les
add
ljmp
push
outsl
dec
int
cmp
dec
push
hlt
ljmp
mov
push
push
push
fcoml
arpl
adc
push
jno
ja
xchg
xchg
push
cmpsl
pop
mov
push
jmp
scas
mov
aad
movsl
pushf
push
movsb
xchg
pushf
inc
jo
jecxz
mov
lea
cwtl
cld
test
xor
jbe
mov
xchg
daa
nop
pop
gs
leave
add
int
ja
sub
mov
test
sub
xchg
mov
jl
addb
mov
js
and
movsb
cmp
push
mov
jle
cmpsl
out
movsb
cmp
mov
jo
push
mov
dec
cmp
push
mov
insb
adc
movsb
pop
insb
out
jle
jp
mov
lds
nop
adc
jne
cmc
mov
push
xchg
mov
cld
sub
pop
arpl
mov
pop
mov
push
pop
sub
fs
sub
loopne
mov
xchg
xchg
movsb
push
add
and
add
mov
or
mov
je
dec
daa
dec
mov
ss
xchg
push
mov
es
xchg
push
into
ret
repz
fs
pop
jnp
dec
cwtl
add
hlt
pop
aam
fsubr
pop
xchg
adc
cmp
stos
cli
xlat
mov
jo
loopne
fmuls
bound
fs
and
sub
xchg
inc
mov
divl
push
cltd
fmuls
xlat
push
inc
add
inc
xchg
mov
fmuls
popa
pushf
in
aaa
mov
add
fidivrs
ss
xlat
insl
sub
mov
mov
add
in
arpl
imul
in
test
es
ret
jo
xor
xor
push
test
es
cmp
and
dec
xor
xor
jmp
pop
adc
dec
push
enter
and
mull
sub
xchg
pop
mov
sub
add
xchg
pop
push
xlat
or
xor
ret
xor
movsb
in
inc
push
add
mov
fcomps
xlat
jbe
push
fdivl
xchg
in
jo
add
loopne
movsb
mov
in
pop
push
lret
pop
xchg
mov
push
xchg
fisubrs
xor
xchg
cmpsl
lcall
sbb
jg
test
cmpsl
insl
sub
mov
xlat
hlt
mov
jbe
inc
cmc
inc
xor
rcl
ret
push
jge
xchg
xlat
add
cwtl
out
movsl
cmc
in
arpl
test
xlat
ret
push
jge
add
ljmp
xchg
ljmp
ljmp
mov
jbe
mov
test
dec
pop
xchg
cmp
xchg
enter
adc
mov
push
test
xor
adc
pop
push
xor
popa
test
push
int3
gs
xchg
push
cmp
insb
test
test
adc
adcl
pop
daa
daa
test
adc
push
mov
sbb
push
pushf
adc
es
and
daa
mov
test
jle
in
aam
fs
mov
xor
cwtl
sbb
inc
jbe
adc
xor
mov
jl
push
xchg
loopne
test
push
push
add
std
and
jle
addb
cmp
push
test
xchg
idiv
movsl
adc
in
xor
repz
mov
outsb
hlt
aas
cmc
in
adc
xchg
xchg
or
cmp
es
mov
icebp
add
cmp
xchg
movl
in
andb
adc
and
in
jl
mov
mov
addr16
movsl
sub
cmp
push
xor
ds
je
rcll
daa
jo
test
insb
loope
jmp
pusha
xchg
shrl
jo
push
mov
gs
cmp
sub
sbb
imul
pop
xor
mov
daa
pusha
fadds
pop
das
xor
and
mov
pop
ss
push
mov
and
and
aaa
and
cmp
aad
mov
mov
add
fistpl
fsubl
lret
xchg
xorl
cld
out
xchg
out
out
adc
push
daa
dec
cmc
add
les
ss
jg
pop
out
push
int3
mov
adc
int
test
adc
xchg
xor
pop
push
inc
aam
push
addl
rcll
xlat
xchg
out
jbe
mov
xorb
sub
es
cmp
imul
xor
pop
iret
pop
mov
sysenter
divl
fildl
add
and
test
adc
cmpsl
push
scas
xchg
mov
xor
inc
mov
sub
movsb
imul
xchg
push
add
loop
leave
int3
xor
aad
pop
addr16
push
xchg
and
xor
in
sub
adc
xor
sub
xor
je
push
in
push
jge
dec
jb
push
cmp
xor
jo
push
xchg
ss
push
rcl
fdivl
mov
mov
fwait
and
or
fdivs
push
jne
fdivs
les
push
cmp
and
pop
sbb
stos
out
ja
dec
mov
loopne
adc
jb
push
ja
das
inc
dec
int3
pop
sbb
and
inc
enter
cmp
fdivrs
hlt
mov
adc
or
push
daa
ljmp
fs
or
or
add
add
xor
add
and
std
ljmp
pop
fisubl
mov
jl
push
lahf
lds
les
add
mov
and
aam
enter
aaa
aad
loopne
push
ja
ret
inc
mov
push
inc
daa
xor
std
mov
jl
fadd
adc
out
test
xor
push
outsb
xlat
mov
mov
push
mov
dec
xlat
ljmp
ror
int
fdivs
fbld
stc
sub
sub
jg
sub
sbb
and
cltd
pushf
cmpsb
xor
shll
jmp
cmpsb
xchg
mov
jo
mov
fstps
mov
fs
test
mov
cmpsb
mov
ja
and
xor
mov
jo
lods
jo
xlat
xchg
insl
xor
pop
jmp
add
push
mov
cmp
cmpsl
jo
out
xchg
fsubl
jl
scas
daa
ljmp
fdivrs
cmpsb
mov
loop
stos
add
mov
pop
inc
cmp
pop
cmc
jns
icebp
add
push
and
shrl
lret
loopne
int3
mov
add
push
fistl
sbb
leave
push
nop
in
push
leave
daa
add
jbe
push
xchg
sti
sbb
push
in
sub
xchg
daa
mov
sbb
js
daa
fmulp
push
nop
loop
int3
test
jo
xchg
and
jne
outsl
sub
xchg
loop
hlt
mov
jo
cmpsb
in
movsb
dec
push
mov
push
mov
push
popa
mov
dec
jle
cmpsb
xchg
jo
cmpsb
xchg
xchg
movsb
jns
mov
push
jge
cmpsl
jno
mov
hlt
jp
icebp
add
in
aad
sbb
daa
mov
push
and
fdivrs
mov
loope
add
addr16
and
dec
fiaddl
test
mov
daa
in
push
adc
jnp
jbe
cmp
out
xchg
mov
cmp
sti
mov
jecxz
add
sbb
daa
pop
xor
mov
jno
mov
hlt
jle
xor
addr16
out
dec
xchg
add
test
push
push
fs
repz
xor
jbe
mov
outsl
sub
jno
mov
imul
push
jbe
imul
je
push
daa
ret
push
jge
fs
jne
addr16
mov
add
fmulp
push
mov
jmp
add
xchg
movsb
pop
lret
xchg
int3
push
push
popa
int
int3
es
daa
jne
sbbl
push
jbe
push
loopne
int3
or
pop
shll
push
jl
movsb
push
jne
sub
pop
xor
dec
push
call
push
hlt
sbb
jns
add
xchg
adc
xor
gs
cwtl
sbb
adc
push
loop
aam
xchg
sbbl
loopne
xor
sbb
push
fisubrs
les
dec
shll
dec
mov
popf
push
test
push
xor
bound
pop
push
xchg
sbb
repz
push
jle
jecxz
xchg
sbb
mov
addr16
push
xchg
mov
mov
push
adc
cmpsl
pop
jb
data16
jle
pop
push
popa
int3
cmpsl
int3
inc
xor
inc
sbb
out
mov
jnp
arpl
std
jmp
loope
sub
mov
mov
push
movsb
js
hlt
pusha
pop
aad
ud1
rorl
add
in
popa
in
ud1
sbb
stos
outsl
push
dec
mov
cmp
xor
es
mov
and
jne
test
mov
lds
out
and
into
out
dec
leave
pop
daa
fisubrs
test
pop
fiaddl
fimull
cmpsb
gs
jo
insb
push
mov
addr16
push
jo
fiaddl
add
sbb
gs
push
lret
movsl
add
mov
pop
addr16
xchg
insb
sbb
in
xlat
sahf
and
hlt
xor
xchg
adc
faddp
leave
in
addb
lcall
movsb
jle
fstl
daa
jecxz
addb
popa
xchg
loopne
testl
xchg
movl
test
aaa
jb
inc
add
pop
xor
cli
inc
aad
mov
sub
push
jge
rcll
movsb
mov
xchg
xchg
je
adc
rol
pop
std
movsl
int
pop
jge
mov
push
sbb
jbe
pop
sbb
movsb
loopne
lahf
or
daa
adc
xor
lahf
sbb
cmpsl
inc
jecxz
and
stc
cmpsb
mov
jbe
lahf
daa
xchg
or
popa
or
mulb
pop
notl
movsb
jle
lret
testb
add
dec
xchg
hlt
inc
xlat
push
and
int3
sub
xor
int3
mov
mov
testl
push
repz
popa
cmc
fnclex
movsb
and
dec
xor
lds
push
out
movsb
or
loop
cmpsl
xchg
in
hlt
xchg
jecxz
je
or
cmc
lds
nop
mull
cmpsl
push
push
lret
dec
mov
or
mov
sbb
push
fisubrs
cmpsb
fs
dec
push
stc
les
jge
test
pop
es
in
arpl
fs
push
pop
cmp
sbb
xchg
sub
xor
mov
inc
cli
ret
push
push
inc
fdivrl
jbe
jge
pop
xlat
add
mov
push
cmp
sti
mov
cmp
jge
imul
mov
int
repz
cld
leave
push
mov
adc
iret
add
fcoms
pop
push
or
pop
adc
mov
xchg
push
cltd
aam
mov
adc
repz
cmpsl
push
sar
or
push
dec
pop
add
std
outsb
push
inc
cmc
out
inc
fs
lret
push
pop
cmp
rcll
push
jb
mov
or
mov
mov
arpl
push
pop
xchg
or
or
pop
es
daa
test
add
lret
push
pop
ret
push
jge
aad
pop
cmp
nop
mov
cmc
inc
xor
outsl
sub
cmp
std
fs
lahf
xchg
cwtl
icebp
push
arpl
fstps
pop
nop
mov
out
daa
xchg
ja
into
sub
test
cmp
mov
sub
and
rcl
rcll
lock
sub
mov
add
mov
xlat
pusha
add
sbb
pop
repz
mov
xchg
inc
cmpsb
xor
fsts
pushf
pop
es
xrelease
lret
test
push
inc
in
lds
outsb
inc
mov
es
push
lcall
popa
cmc
subl
mov
push
call
xchg
jne
push
add
jbe
cmpsb
pop
mov
lret
jle
mov
inc
stos
sub
cmp
sub
xor
aas
push
sbb
addr16
push
incb
push
sahf
xor
and
mov
inc
aad
pop
test
push
or
mov
pushf
push
cmpsb
jg
arpl
ljmp
in
cmc
nop
arpl
jb
cmc
xchg
arpl
repz
add
movsb
call
xchg
jne
roll
popa
fisubl
movsb
xchg
movsb
mov
xor
mov
push
ret
push
jge
out
call
movsl
mov
xchg
push
lds
sbb
mov
push
mov
xchg
lds
ja
aam
mov
pop
mov
push
popa
lahf
fidivs
hlt
loopne
sbb
sub
xor
and
jo
push
movsb
xchg
fdivs
xchg
cmp
out
xchg
xor
or
mov
in
xor
orb
aam
cmp
out
xchg
xor
dec
push
fdivrs
xor
xchg
mov
adc
adc
add
jbe
jle
rclb
sbb
or
ds
add
xlat
xchg
adc
outsb
cmc
jb
ja
jne,pt
addb
xchg
add
arpl
aam
mov
add
push
loopne
in
jbe
xor
sub
cmc
dec
pop
xchg
inc
je
xor
jb
es
pushf
in
cmp
mov
inc
mov
inc
out
outsb
xchg
data16
das
lock
test
inc
jo
lods
cmp
mov
push
aad
das
lds
mov
push
ss
lds
cmp
daa
movsb
inc
xor
push
adc
mov
xor
xor
mov
add
es
loopne
sbb
test
push
jne
addr16
pop
je
sub
bound
cmp
es
fs
add
sbb
cmp
mov
pop
pop
pop
jle
in
cmp
push
pop
je
cmp
es
sbb
daa
push
pop
ss
and
sbb
push
movsl
add
sbb
cmp
mov
push
mov
xchg
adc
pop
add
adc
into
adc
or
hlt
loope
adc
mov
add
sbb
in
or
push
frstor
add
aam
hlt
std
cld
loope
add
inc
sub
add
in
jbe
in
add
jge
fdiv
xor
xchg
mov
arpl
add
les
in
and
xchg
es
mov
sbb
push
fidivrs
push
in
xchg
cmp
ss
inc
mov
cmpsl
addr16
in
cmp
mov
mov
in
in
shll
call
jle
in
clc
addr16
lock
out
cmp
push
push
jbe
loopne
out
add
cmc
inc
sub
cmp
rol
repz
push
add
adc
pop
dec
push
into
dec
iret
inc
dec
repz
notb
sbb
insl
loope
cwtl
gs
stc
lock
aaa
lds
dec
dec
pop
neg
xor
jg
int
int
lds
in
sub
int3
mov
mov
popf
adc
pusha
sbb
add
jmp
xlat
xor
pusha
mov
mov
mov
outsb
jbe
mov
mov
push
mov
xor
pop
push
sub
add
dec
cltd
notb
out
mov
and
mov
push
add
cmc
pop
xor
in
xor
xchg
divl
divl
test
rcll
outsl
cmp
shrb
vmovmskps
mov
mov
push
xchg
and
and
addr16
inc
lods
test
lds
movb
add
push
daa
adc
aaa
xor
push
daa
fs
inc
ja
push
test
xchg
out
movsb
adc
mov
and
std
imull
xchg
add
popa
sbb
ljmpw
in
je
aas
sti
xchg
rcll
push
cmpsl
cmc
in
arpl
mov
add
aam
xor
pop
data16
or
push
mov
pop
sub
jl
jmp
xor
aad
sub
push
stos
pop
mov
lea
imul
data16
adc
sbb
sbb
test
les
ds
test
inc
cmc
and
ffreep
rcll
adc
je
adc
pop
fbstp
or
popa
adc
sbb
inc
add
xor
add
outsl
int3
push
scas
test
adc
push
cmp
mov
mov
int3
push
jno
dec
movsb
or
test
mov
mov
stos
mov
out
out
push
jne
xor
andb
rcr
and
in
pop
pop
and
std
lds
scas
mov
gs
mov
movsb
lret
and
push
dec
sub
pop
fidivl
iret
push
sbb
scas
ss
dec
and
cmp
int3
xor
push
adc
xchg
mov
pop
pop
jl
jno
movsl
add
jne
jge
sbb
out
aam
sub
outsb
movsb
lcall
add
jo
mov
inc
cwtl
loop
cmp
sub
arpl
test
repz
push
push
sub
mov
pop
pop
imul
add
aad
and
cli
sahf
mov
fwait
movsb
enter
andl
push
jo
lcall
inc
loopne
mov
push
sub
cmpsl
push
push
jmp
mov
daa
lock
sbb
addr16
sbb
pop
out
inc
push
jmp
push
sti
and
push
mov
push
jbe
add
push
or
and
push
push
cmp
jae
add
mov
adc
in
xor
push
adc
jge
cmpsb
push
push
mov
movsb
jge
xchg
or
daa
mov
or
xchg
sbb
mov
fcoms
mov
push
jl
jbe
pop
push
cmp
push
popf
pushf
daa
daa
add
ss
aad
jecxz
fsubr
rcll
push
jge
in
pop
xchg
loopne
adc
xor
pop
pushf
fcoms
xchg
or
call
jo
hlt
movsl
hlt
and
es
test
repz
xchg
call
xor
bnd
imul
jb
addr16
push
shll
pop
cmpsl
push
aam
sbb
add
fdivl
enter
ret
xchg
movsb
adc
and
fdivp
fs
mov
rclb
cmp
nop
ljmp
sub
test
int3
and
nop
out
in
out
movsl
xchg
push
test
jmp
jne
je
leave
sbb
mov
push
push
cmp
xchg
test
cmp
push
push
popa
pop
push
push
sbb
add
daa
aaa
in
pop
pop
cmc
cmp
cwtl
cmc
ljmp
ljmp
lret
call
lret
mov
cmc
fmulp
push
mov
jge
shl
out
add
mov
cmc
xchg
or
sbb
out
scas
adc
jle
popf
fsubrs
jge
fbstp
and
outsl
mulb
push
mov
push
add
je
aaa
test
or
out
xchg
cmpsl
cmc
push
xor
popf
out
adc
push
nop
fisubl
and
push
pop
xchg
pop
aaa
fdivrs
outsb
xchg
jbe
test
xchg
mov
and
add
mov
jl
push
mov
and
mov
jne
cmp
jge
hlt
push
enter
popa
push
dec
lds
ss
push
fisubl
pop
fmuls
add
rol
cwtl
loope
addr16
arpl
fldenv
shl
inc
test
adc
into
mov
into
pop
aaa
mov
fists
mov
and
imul
hlt
hlt
dec
call
les
mov
aam
gs
je
dec
les
jmp
push
mov
les
fsubs
cmc
and
dec
fadd
fmulp
push
xchg
and
adc
je
ret
hlt
repz
ret
push
jns
xor
les
cli
movsb
dec
sbb
mov
push
or
hlt
and
pushf
pushf
xchg
les
push
popa
xchg
pop
sbb
les
push
sbb
gs
push
mov
mov
fdivs
repz
les
movsl
int3
enter
mov
les
push
cli
fs
or
jno
ss
push
xchg
mov
or
mov
cmpsb
outsl
sub
pop
mov
fadds
xlat
insl
movsb
sti
aad
testb
xchg
jbe
hlt
iret
out
sub
sbb
xchg
mov
es
cmpsb
dec
and
cmpsb
stos
in
jne
inc
dec
xor
out
and
mov
push
iret
fs
daa
add
and
gs
outsb
movsb
out
movsl
jae
and
mov
or
add
sub
ret
cwtl
and
iret
fs
rcll
and
lcall
adc
cmpsb
push
push
popa
cmpsb
mov
daa
outsb
push
movsb
push
cli
montmul
cmpsb
push
push
gs
pushf
cmpsb
push
jb
xchg
push
pushl
je
mov
sbb
mov
add
movsb
mov
fmulp
push
nop
mov
pop
aam
shrb
xlat
fiadds
movsl
and
xchg
movsb
dec
add
push
adc
fwait
pushf
and
and
movsb
mov
jbe
push
xor
das
test
push
mov
push
jge
dec
or
movsl
push
call
cld
int3
adc
data16
xchg
out
cmpsb
pop
aam
mov
dec
xor
dec
inc
cld
cmpsl
xor
pushf
mov
sbb
push
fcoml
cmp
sbb
mov
outsl
push
outsl
xor
pop
mov
jmp
lea
pop
and
lods
movsb
and
xchg
jb
sbb
jnp
cmp
cmp
loopne
jmp
out
cmc
subl
ss
imul
std
and
cwtl
add
push
mov
jl
push
in
testl
jnp
add
jnp
test
push
dec
push
sub
test
insb
inc
fcoms
movsb
adc
sub
push
sbb
test
negb
ja
repz
push
jbe
cmc
movsb
sub
xor
mov
push
or
mov
test
xor
test
push
mov
mov
inc
push
test
xor
pop
clc
test
je
icebp
inc
ljmp
pop
xchg
push
jbe
push
in
and
xchg
test
aaa
das
push
loope
add
enter
xchg
push
xor
mov
movsl
sub
in
or
addr16
in
out
dec
mov
mov
dec
xchg
lea
ja
mov
cmp
aad
sub
add
sbb
popa
aad
cmpsb
in
mov
rcll
shll
arpl
leave
push
mov
lret
xlat
popf
xor
cmp
arpl
testb
mov
fcmovb
test
push
inc
or
and
xlat
mov
stos
aad
out
fstl
add
loop
jmp
or
cwtl
les
xor
and
aaa
es
pushf
hlt
rcll
sbb
fistl
mov
data16
and
mov
mov
pop
imul
mov
adc
inc
lret
int3
cmc
in
out
movsb
lret
xchg
sbb
cmp
push
jle
loope
pop
xchg
xchg
rol
push
jge
cli
test
hlt
sbb
push
and
std
xchg
hlt
sbb
mov
ficoms
push
add
cmp
out
out
xor
out
aad
lret
cmp
rcrb
mov
xchg
aaa
push
jecxz
fidivs
cmc
out
xlat
xchg
inc
mov
xor
add
testl
fiaddl
jne
shl
int3
inc
nop
inc
mov
into
inc
fwait
stos
les
push
push
sub
loop
andl
push
andl
sbb
push
inc
gs
mov
dec
inc
aam
xor
les
and
pop
mov
les
testb
aam
sbbl
xchg
movsb
fdivrs
lds
pop
mov
push
mov
and
cli
push
loopne
add
aad
in
lds
jo
push
mov
xor
cmp
add
push
popa
xchg
xor
in
pop
push
push
adc
mov
mov
add
cwtl
push
mov
jl
cmpsl
in
outsb
xlat
outsl
sub
ja
xor
adc
addr16
nop
mov
cmp
jmp
push
sub
add
push
push
push
cmc
add
cmp
push
jbe
push
nop
add
add
add
cmp
xlat
xchg
or
xor
push
add
push
loop
test
roll
push
jo
movsl
ja
mov
xor
andb
pop
pop
push
cmp
shll
idiv
jbe
test
cmc
cmpsb
sub
mulb
push
fs
sub
pop
dec
inc
jl
add
test
aaa
mov
push
adc
pop
pop
idivb
push
jo
fiadds
dec
push
mov
sbb
xchg
idivl
es
and
inc
nop
in
aam
sub
cmp
sbb
mov
jne
mov
fmull
xchg
mov
push
aaa
aam
movsb
popf
sbb
dec
push
enter
fsubr
mov
in
xchg
aam
in
cmpsb
int
push
jb
xchg
jg
push
lods
push
stos
adcl
ds
push
and
enter
lds
mov
hlt
loope
pushf
push
and
jae
imul
fstpl
test
push
jbe
push
sbb
push
sbb
pop
or
push
jb
jge
movsl
mov
mov
std
xchg
shll
inc
cmc
pop
les
adc
or
notl
push
push
adc
pusha
testb
pop
movsb
es
add
imul
cmp
popf
or
pushf
xlat
fcoml
xchg
sbb
pop
daa
jg
dec
call
cmc
cld
push
test
dec
out
enter
jnp
in
push
push
cmc
add
cs
iret
push
pop
push
popa
cwtl
mov
adc
jne
test
out
jnp
xchg
push
xlat
daa
mov
add
clc
jb
pop
xchg
movsl
gs
inc
xor
je
dec
push
xchg
clc
xor
mov
fs
xchg
pop
ljmp
ljmp
jbe
es
dec
loop
mov
xor
rolb
xchg
std
push
xlat
xor
mov
loop
and
dec
jo
daa
leave
jo
mov
jo
lds
shll
shll
mov
jo
sarl
shll
xchg
jo
test
lods
pop
jecxz
lods
xor
daa
shll
test
movsb
xchg
test
mov
in
cmp
movsb
mov
mov
sbb
xchg
adc
sbb
test
push
adc
pop
je
adc
or
or
lock
mov
push
pop
hlt
adcb
aas
imul
dec
xchg
cmpsl
adc
clc
cmpsb
xor
mov
mov
inc
repz
out
add
pop
outsb
push
cmp
fdivs
mov
xor
pop
aam
aam
out
cmp
shll
cmpsl
xorl
jge
mov
push
xchg
movsb
rclb
rcll
ret
push
jge
mov
xor
add
je
push
add
xor
mov
push
mov
pop
movsb
jge
shr
jne
movsb
dec
mov
popa
pop
cwtl
push
lret
jne
or
sti
push
inc
mov
pop
or
or
push
push
push
popa
pushf
std
in
out
mov
and
in
sub
cmpsl
push
push
jmp
shrl
add
mov
cmpsl
push
fbld
push
lret
xchg
inc
mov
push
and
movsl
sub
add
mov
and
and
dec
push
mov
xchg
enter
addl
jmp
push
sub
add
out
imul
cmpsl
lds
xchg
adc
or
mov
test
test
xor
inc
sub
hlt
bound
leave
push
xchg
hlt
add
outsb
sti
xchg
cmpsb
jle
repnz
sbb
jbe
aaa
test
and
cmpsl
and
lret
sub
mov
sti
xor
enter
aaa
je
adc
push
fdiv
xorl
xor
pop
pusha
adc
movsb
outsb
xchg
push
cli
lcall
xchg
inc
fwait
and
clc
push
je
mov
data16
stos
fwait
ja
lcall
jg
sub
jo
ss
arpl
dec
aam
push
xchg
insl
aaa
push
xor
cmc
cld
lahf
movsb
sbb
adc
and
xchg
sbb
fdivl
lahf
iret
push
mov
gs
call
or
jne
and
push
add
stos
xchg
push
push
rcrl
jnp
popa
sbb
inc
outsb
push
fcompl
popf
push
cmpsb
fs
or
pop
mov
adc
dec
icebp
add
cmc
mov
mov
rorl
push
aaa
test
inc
xor
inc
out
popf
pop
pop
mov
push
mov
sbb
pop
ret
push
jge
mov
xor
sub
add
jle
cwtl
fadds
gs
mov
push
xor
pop
xchg
push
add
xor
and
push
or
xchg
mov
or
push
push
push
and
push
repnz
popa
in
push
rorb
add
out
sbb
ss
inc
fmulp
push
nop
and
jno
inc
scas
cmp
cwtl
cmc
adc
in
or
push
inc
push
std
push
into
mov
pop
add
fwait
divb
dec
push
inc
ret
push
jge
cli
daa
cld
shlb
cmp
push
cmc
xchg
mov
pop
mov
inc
adc
dec
jp
mov
ret
les
lock
add
rorl
sub
addr16
push
gs
cmpsb
out
pop
mov
sbb
movsl
inc
pop
int3
lea
xchg
test
gs
popf
mov
lret
xchg
inc
cmc
push
cmc
aad
xor
mov
push
ficomps
cmpsb
out
push
daa
mov
jne
fnsave
loop
scas
lock
movsb
pushf
lret
mov
pop
leave
push
je
lcall
in
add
push
mov
jnp
mov
jae
dec
or
dec
loop
loopne
ds
mov
add
xchg
push
call
test
enter
dec
push
enter
inc
xchg
daa
jge
cmc
and
dec
fbstp
cmpsl
push
push
fs
sbb
imul
push
loop
mov
cwtl
aam
mov
ljmp
add
daa
xchg
mov
push
aam
movsb
in
mov
sbb
dec
mov
test
out
hlt
mov
mov
add
push
mov
lret
mov
lds
addl
lret
andl
dec
push
pop
dec
sub
clc
cmc
xor
xor
xchg
sbb
xlat
lahf
rcll
dec
push
decb
sbb
xor
mov
xchg
aaa
mov
and
and
xor
pop
sub
mull
stos
xor
cmc
add
fwait
xchg
inc
jge
fdivs
add
add
mov
dec
mov
pusha
mov
test
ja
shrb
cmc
fidivl
enter
sbb
fisubrs
arpl
dec
jle
adc
mov
and
push
popa
push
mov
lods
push
lods
push
mov
jp
sbb
movsl
mov
jne
repnz
mov
jbe
das
push
push
movsl
fsubrl
arpl
adc
test
bound
addl
nop
mov
test
es
sti
pop
mov
pop
imul
jne
or
movsb
adc
cli
insl
cmpsl
or
jo,pt
or
jb
roll
pusha
pop
leave
pop
cmp
sub
fs
xlat
bound
test
xchg
add
cmpsl
daa
adc
icebp
aaa
xchg
sbb
and
idivl
dec
push
leave
scas
divl
sub
or
sub
push
inc
int
inc
dec
xchg
les
inc
jg
inc
cmp
sub
xor
out
cmp
jb
mov
inc
jl
je
mov
inc
movsb
fs
repz
cs
inc
mov
mov
stc
inc
fidivrs
mov
sub
cmp
fildl
jg
xor
pop
add
lds
and
or
imul
add
cmpsl
addr16
loop
xor
sbb
sbb
sub
sub
xchg
jg
mov
std
add
sub
mov
mov
pop
or
hlt
inc
mov
and
dec
loope
sub
mov
xor
xor
popa
int
lds
stos
nop
xor
push
xchg
and
cmpsl
push
mov
add
jge
loope
or
fdivrs
xor
add
ret
pop
mov
sub
or
mov
adc
roll
pop
xor
pop
adc
adcb
rep
inc
out
xchg
xlat
int
shll
inc
ja
xchg
cld
push
jbe
xchg
cmpsl
nop
cmc
aad
jne
insb
adc
adc
mov
adc
jge
clc
xlat
pop
sbb
adc
pop
pop
jp
cmpsl
aas
pop
dec
cmp
mov
cmc
sub
cmp
aas
ret
pop
stos
loope
or
push
inc
hlt
jle
or
sbb
xor
scas
hlt
xor
cld
fwait
mov
and
popa
cmc
std
and
mov
adc
mov
lods
sbb
xchg
jg
xorl
insb
cmpsb
movsb
and
insl
hlt
lahf
mov
movsb
stc
rcrl
mov
les
add
adc
movsb
nop
es
les
loop
addr16
ja
cld
data16
xor
mov
push
subl
adc
add
lahf
addr16
push
jle
xchg
push
mov
sub
lods
push
mov
shrl
inc
mov
movsb
push
clc
push
adc
test
push
and
test
sbb
shlb
jl
ret
mov
mov
ds
jg
xchg
sub
xor
jecxz
cmpsl
ret
mov
es
and
out
inc
in
mov
es
pusha
and
cmp
pop
stos
and
xor
pusha
mov
cmpsb
arpl
es
mov
mov
and
jb
adc
mov
inc
mov
mov
xchg
mov
mov
leave
adc
js
sahf
push
sbb
cmp
or
mov
jmp
jnp
adc
cmp
cli
pop
fs
pushf
xchg
hlt
mov
jg
add
in
movsl
jge
xchg
in
mov
mov
or
js
adc
jl
adc
jge
aaa
mov
aam
add
je
add
pop
test
aad
or
mov
push
jl
popa
pop
dec
es
test
jns
xor
mov
popa
jl
and
nop
dec
adc
xchg
ret
insb
stos
testl
jb
add
mov
hlt
sub
adc
xor
je
mov
fs
xor
xchg
subl
xor
lods
cmp
sbb
xorl
aam
pushf
push
lods
mov
les
in
mov
mov
cld
inc
mov
repz
test
jecxz
rcl
adcb
cmc
xchg
gs
les
das
aam
movsl
jle
lods
cmc
pop
es
movsb
hlt
fnsetpm(287
out
fwait
and
addr16
mov
divl
jmp
arpl
push
scas
je
adc
inc
lods
add
fidivl
jl
jecxz
lret
in
pop
push
xchg
cmp
aaa
pop
and
jnp
cmpsl
out
idiv
add
lock
je
jle
cmp
loopne
xor
mov
outsl
push
add
jle
int
and
sbb
pop
movsb
xor
mov
mov
mov
lods
sbb
cmp
daa
lods
mov
fidivs
sbb
inc
xlat
insb
add
cmp
test
inc
icebp
jmp
add
je
test
push
xlat
xchg
sub
and
cmpsb
xchg
aad
jbe
idivl
jge
mov
scas
inc
sti
mov
xor
push
cld
pop
mov
movsl
add
cwtl
and
jecxz
adc
mov
sbb
pushf
jbe
call
fdivrl
jbe
mov
push
xchg
mov
outsl
in
mov
or
movsb
mov
and
mov
out
pop
inc
inc
ficompl
adc
sub
call
fs
mov
mov
cmp
cmp
or
ds
daa
mov
mov
adc
xor
xor
mov
jg
movsl
fisttps
sub
xor
cmc
inc
mov
inc
xchg
movsb
xchg
mov
testl
scas
mov
or
std
fwait
icebp
out
js
fldenv
in
adc
xchg
mov
jmp
mov
out
hlt
adc
test
sub
push
cmp
xchg
test
js
cmp
imul
pushl
mov
cmp
outsb
push
sbb
mov
inc
ret
daa
icebp
inc
ja
cmp
xchg
pop
hlt
or
pop
arpl
pop
fstl
add
mov
xor
add
fidivl
jg
jo
rcrl
hlt
jns
test
loope
xchg
stc
sbb
lods
sbb
outsl
and
push
jmp
push
mov
dec
aam
fs
push
cmc
mov
and
mov
mov
loopne
or
cmpsl
mov
mov
add
mov
jl
and
lret
jbe
pop
pusha
in
pop
mov
add
jae
xor
jmp
faddl
cmc
inc
mov
outsb
and
js
jl
xor
mull
mov
pusha
cmp
xor
int
lds
shlb
cmpsl
sub
jecxz
mov
and
movsb
push
inc
and
mov
bound
jne
testl
cmc
lret
aaa
imul
icebp
rcl
jmp
out
and
xchg
xchg
mov
loopne
add
insb
mov
addr16
movsb
clc
hlt
sbb
sti
fbstp
sbbl
pusha
mov
fidivs
adc
imul
push
mov
dec
xor
cmp
movsb
sbb
aad
inc
xor
inc
xor
sbb
fdivl
mov
fstpl
lods
int3
adc
arpl
pushf
adc
or
xor
or
aam
xchg
movsb
push
and
sti
cwtl
mov
mov
adc
jl
mov
in
xchg
inc
xchg
push
inc
mov
mov
inc
mov
movsl
xlat
stc
sarl
fnsave
pushf
stc
lods
pop
xchg
mov
xchg
aaa
mov
and
xlat
dec
fnsave
data16
push
mov
adc
adc
in
pop
lock
aad
das
sub
jbe
push
xchg
mov
je
fs
push
xchg
mov
sub
add
dec
hlt
ja
popa
pop
mov
in
dec
cmpsl
hlt
aam
mov
xchg
mov
in
dec
lea
je
cmp
mov
mov
adc
int3
aam
and
pusha
ss
add
dec
sbb
pop
xchg
mov
sub
xchg
xor
add
add
jg
ja
mov
and
or
daa
add
xchg
fs
aad
sti
mov
int3
pushf
aad
in
adc
sub
adc
aas
aad
xchg
mov
ja
add
das
out
push
sub
mov
mov
sub
mov
cmc
mov
fs
push
pop
or
fadd
cwtl
inc
sbbl
mov
stc
mov
xchg
sbb
add
xlat
loop
xor
or
inc
pop
inc
mov
or
sbb
enter
aaa
add
imul
mov
lods
mov
loop
mov
mov
in
pop
jbe
movsb
xchg
or
jl
lods
in
adc
addr16
mov
jns
in
shlb
ljmp
insl
cmpsb
xchg
fsubrl
mov
out
es
in
out
add
pushf
or
pushf
test
sub
dec
adc
xor
bound
aam
fs
sbb
and
add
ja
mov
hlt
mov
push
fsubl
and
xlat
pop
add
gs
call
inc
aam
sub
lods
scas
jmp
movsl
loopne
add
fadd
adc
mov
push
rclb
lods
loope
cmpsl
je
aas
sbb
out
out
les
imul
pop
addl
inc
jbe
mov
fwait
adc
rcll
xor
push
cmp
or
mov
cmpsl
jo
fstpl
loopne
xor
pop
rol
cmpsb
or
fisubs
and
jp
mov
gs
inc
sub
loopne
xlat
ret
fcom
jl
dec
pop
hlt
nop
out
ret
addr16
cmpsb
cmp
pop
add
mov
movb
js
jle
out
hlt
dec
jb
jle
mov
inc
testb
nop
mov
push
mov
sub
and
or
and
std
call
pop
inc
xlat
push
mov
pusha
sahf
fildl
inc
xchg
scas
jmp
add
jb
mov
lds
mov
xchg
push
and
insb
mov
test
adc
pop
call
mov
sub
xchg
arpl
jg
pop
jle
mov
xor
xor
cmp
or
mov
mov
mov
sbb
fucompp
cmp
dec
std
js
or
sbb
divl
add
leave
mov
xchg
pop
nop
mov
cmpsb
xchg
gs
testl
pop
loope
pop
or
jmp
push
add
jecxz
push
push
mov
mov
pop
jns
movl
call
mov
loopne
jns
lock
pop
aam
cmpsl
mov
jbe
mov
jge
icebp
notl
mov
add
iret
cmc
enter
mov
push
adc
das
cmp
aas
sbb
imul
mov
xlat
pop
stc
dec
nop
push
xor
push
add
std
add
or
lea
test
ss
jle
hlt
cld
jg
lds
es
jge
inc
sahf
stc
add
cmp
sbb
es
outsb
sbb
add
jbe
popf
jne
adc
jle
or
and
pop
int3
mov
je
cmp
add
pop
paddb
out
ret
pop
sbb
mov
or
add
add
and
test
jne
les
add
inc
pushl
sbb
das
adc
dec
mov
in
mov
btc
sub
loope
pop
in
ljmp
cwtl
loopne
mulb
or
pusha
in
xchg
pusha
and
fwait
mov
pop
in
aad
mov
rcrb
xor
or
push
arpl
mov
loopne
push
push
fs
xchg
mov
mov
mov
pop
mov
mov
push
adc
sbb
xchg
xchg
and
enter
and
add
xchg
mov
inc
mov
in
add
addr16
popa
mov
mov
inc
popa
aaa
dec
xchg
xlat
cmp
mov
call
sbb
lods
adc
shr
ficomps
lods
test
jl
cmp
push
or
fucomp
callw
xor
je
cwtl
loop
in
adc
jbe
xor
mov
mov
stos
cmp
jmp
pop
es
sub
mulb
ja
mov
ja
je
das
sub
movsb
je
das
cmp
mov
scas
pop
sbb
adc
or
fnstsw
daa
iret
mov
xchg
outsl
jp
mov
out
cli
xchg
enter
les
movsb
sub
xchg
xchg
xchg
les
call
sub
out
in
mov
push
in
jmp
xlat
es
jbe
pushf
jne
cwtl
mov
movsb
and
in
jecxz
adc
xchg
insl
mov
xorl
mov
xlat
hlt
xchg
lock
ja
faddl
xlat
hlt
or
ss
inc
pop
rcrl
hlt
sti
mov
adc
or
test
xchg
xchg
mov
and
cmpsb
fsubrs
inc
xor
shrl
lods
jno
je
leave
push
lahf
sbb
int3
lahf
xchg
push
repz
popl
mov
mov
scas
nop
jecxz
mov
add
push
ret
movnti
ja
push
cld
aad
sub
mov
mov
xlat
inc
lock
and
cmc
push
push
push
jle
lods
insl
test
clc
mov
xchg
cwtl
pop
xor
mov
pop
rcl
insb
add
sbb
les
hlt
daa
je
test
inc
xor
and
jbe
fcoml
sti
push
xchg
das
in
or
mov
mov
push
and
xchg
fs
stos
jecxz
xor
push
xor
lahf
xor
jmp
pop
frstor
mov
mov
push
xor
std
test
daa
sbb
fstpl
and
call
les
xchg
jnp
sbb
xchg
add
enter
xorb
repz
xchg
and
mov
subb
bound
lea
adc
adc
cmpb
pop
pushf
pop
ljmp
ds
outsl
testl
cmpsl
xor
mov
jle
in
and
jg
xchg
in
pushf
jo
movsb
mov
fs
ret
and
cmp
insl
jecxz
repz
and
add
push
mov
xchg
adc
testl
je
pop
push
xor
mov
cmpsl
jmp
mov
fcompl
je
popa
int3
fdivl
test
lds
je
int
addr16
jle
in
inc
jle
pop
pop
pop
out
data16
push
sti
mov
gs
addr16
dec
xlat
daa
fs
add
out
insl
ja
or
inc
out
cmpsb
insl
lcall
int3
fwait
es
jge
push
cmpsl
arpl
or
in
ror
je
daa
addr16
cmp
decb
test
cmp
pop
add
mov
add
sbb
mov
pop
aaa
nop
scas
lret
hlt
or
lds
cmp
add
xor
mov
and
mov
pop
gs
inc
xor
mov
movsl
cmp
or
std
test
xchg
pop
dec
add
lds
sub
ret
flds
or
sbb
xor
les
cmp
jns
les
xchg
pop
dec
repnz
push
testb
test
add
push
lds
push
movl
in
cmp
stc
stos
iret
xlat
test
inc
cmpsb
xchg
sbb
hlt
out
push
movsl
or
fwait
add
jle
mov
shl
nop
insb
pushf
mov
xlat
adc
mov
ds
aas
outsl
mov
fisttpll
mov
jg
jnp
les
in
push
das
mov
incb
fsubrs
jle
mov
shlb
stc
or
ljmp
add
xchg
add
rcrb
push
sti
cmc
aas
call
ss
pushf
arpl
pop
pusha
push
fldcw
lods
in
xlat
or
xor
inc
call
xchg
ret
rol
cmp
shll
xor
leave
mov
lock
aas
cld
pop
movsl
jmp
nop
cmc
stos
mov
mov
add
pop
out
mov
jl
push
add
pop
cmp
mov
add
iret
xchg
sbb
ss
and
xor
stc
jg
xchg
jne
add
in
mov
push
add
inc
in
jnp
out
pop
mov
shll
sbb
jge
pop
mov
sub
mov
and
enter
lcall
insb
divl
jle
jno
mov
dec
lock
jecxz
jmp
jle
jecxz
imul
mov
inc
hlt
das
sbb
enter
out
xor
cmc
in
sub
xlat
pop
push
xchg
pop
popf
adc
inc
mov
cmp
out
push
or
mov
pop
and
mov
and
jecxz
lods
fs
xor
fs
mov
movsb
imul
mov
js
mov
pop
xorb
and
jnp
outsl
in
xchg
push
jno
xchg
mov
movsl
int3
mov
xchg
lock
scas
int3
inc
aam
mov
jbe
jnp
jge
jecxz
fwait
jnp
xchg
lods
out
sub
mov
adc
lahf
xchg
fisttpll
inc
pop
and
push
mov
sbb
out
das
loopne
aas
jge
scas
add
adc
call
stc
inc
jle
mov
pop
jge
lock
mull
cmp
add
push
call
sahf
fs
fcmovne
xrelease
out
jl
cmpsl
stos
out
sarb
mov
mov
or
call
jl
stos
inc
dec
aam
sbb
mov
cmc
jnp
lods
sub
rolb
fdivs
xchg
in
in
shr
mov
mov
inc
mov
test
aam
cmp
mov
les
sub
jg
stos
dec
jb
pop
adc
xchg
mov
aam
mov
dec
pushf
xchg
scas
mov
push
ja
mov
mov
je
mov
lret
jmp
jmp
imul
enter
test
push
mov
and
out
adc
mov
lds
mov
push
and
adc
jae
ss
and
pop
adc
nop
add
xor
stos
xchg
xlat
mov
stos
in
xor
mov
mov
xor
add
mov
aad
outsb
adc
add
icebp
jnp
jbe
test
mov
mov
pop
xchg
iret
mov
cmp
sbb
pushf
mov
call
adc
add
ja
and
push
rcrb
sarb
add
and
lods
mov
xlat
lcall
pop
fdivr
add
lock
cmpsl
loopne
pushf
push
scas
loopne
mov
movsb
movsl
xchg
cmc
pushl
xchg
sub
mov
test
xchg
mov
mov
or
or
add
aaa
imul
insb
js
dec
inc
cmp
or
pop
cld
and
sbb
dec
mov
insb
adc
pop
lods
add
fdivl
ja
push
xor
sbb
push
mov
and
hlt
mov
push
push
ja
orl
pushl
scas
outsl
out
nop
movsb
cmp
test
sbb
mov
repz
lcall
pop
dec
cld
test
jbe
and
mov
stos
add
sbb
enter
and
ljmp
test
outsl
scas
testb
je
enter
fists
push
push
xchg
ja
lods
es
scas
dec
xchg
fsubrs
sub
aas
cmp
xchg
mov
mov
loop
fdivl
mov
mov
es
hlt
pop
mov
push
push
or
std
mov
insl
ljmp
sub
and
jnp
pushf
iret
xlat
das
and
cltd
mov
mov
mov
jmp
sbb
pop
lahf
das
call
in
pop
std
test
mov
out
xchg
in
jbe
out
lcall
or
or
lods
push
hlt
jmp
ret
lahf
pop
and
xchg
loope
jg
jmp
pusha
dec
sbb
test
sbb
lods
shlb
cmp
jg
aad
jge
add
mov
push
test
or
ret
lds
mov
ret
push
cmc
mov
mov
inc
mov
data16
or
orb
cmpsl
div
push
adc
inc
mov
cmpsb
xor
add
movsb
ficomps
sti
shlb
pop
inc
psubusw
cmp
int
xor
lods
add
ja
sahf
loop
add
vunpckhps
jg
mov
out
push
and
xchg
movsb
mov
negb
fdivl
popa
fisttpll
aas
and
mov
push
in
pop
and
jmp
xlat
mov
jg
push
or
jle
test
xor
ljmp
jge
jmp
jle
movsb
sbb
mov
inc
addr16
jecxz
roll
mov
sub
ficomps
jmp
xchg
push
push
sti
pusha
xchg
out
or
int3
sub
fdivp
jno
outsl
loop
fwait
pushf
mov
mov
imul
test
mov
inc
insl
in
sarl
xchg
sub
jmp
out
push
or
in
aas
push
mov
cmc
cmp
mov
ljmp
and
out
mov
enter
int
iret
cmp
pop
out
and
arpl
and
loop
mov
cmpsl
into
jbe
xchg
mul
mov
nop
rclb
and
pop
in
out
push
pop
sbb
jnp
clc
int3
icebp
mov
arpl
cmp
mov
add
mov
xor
jl
mov
xchg
mov
jae
stos
pop
lcall
inc
lods
mov
push
bound
outsb
nop
stos
mov
and
iret
xchg
adc
or
sbb
dec
popf
ljmp
lods
mov
clc
sbb
lcall
pop
cmp
gs
adc
mov
push
fs
and
mov
stc
outsl
mov
jne
mov
xor
push
cld
movsb
in
outsl
adc
fbstp
lcall
mov
dec
clc
test
mov
mov
testb
dec
stos
outsl
sarl
sub
jle
jnp
pop
nop
mov
jge
outsl
jb
inc
jb
fs
es
cld
aad
or
sbb
enter
lock
out
out
xlat
fucomp
stos
mov
add
cmp
pop
and
dec
sahf
mov
and
jnp
jno
lahf
fcoms
jg
dec
fistpll
es
xchg
sbb
test
jl
cltd
wbinvd
and
in
jg
cli
jle
fldl
mov
mov
pop
mov
in
stc
call
ja
es
jmp
push
outsl
movsb
and
loop
mov
callw
int3
test
aad
inc
add
pop
lcall
out
inc
mov
mov
xchg
ds
jl
dec
inc
idivl
cmp
fistpl
cwtl
dec
sub
fbld
popa
daa
and
pop
cld
mov
xchg
std
jb
push
or
out
mov
test
add
rorl
xchg
pop
mov
data16
push
lods
xlat
and
js
jne
mov
cmc
lods
arpl
and
xchg
mov
mov
cmpsb
in
sbb
pop
movsb
xlat
lods
lret
icebp
inc
mov
pushl
sbb
push
jmp
mov
xchg
movzwl
lds
fsubrl
or
movsl
fdivr
popf
mov
pop
aam
fstl
adc
and
stc
jnp
pop
pushf
cwtl
movsl
testb
or
mov
mov
push
dec
mov
jns
std
cmp
cmpsb
ja
sub
inc
mov
sub
jg
scas
repz
mov
mov
pop
mov
repnz
jge
mov
push
xchg
or
cld
dec
cmc
lods
and
jbe,pt
iret
fsubp
lcall
aas
mov
mov
or
neg
nop
stos
movsl
mov
hlt
or
aam
outsl
aad
mov
aad
jb
mov
pop
dec
mov
jns
mov
mov
push
in
scas
xchg
mov
pop
pusha
into
pushf
xchg
ficoms
jno
inc
imul
fsubr
dec
pop
jle
xor
int3
mov
pop
mov
jb
popf
ficoms
call
out
int3
mov
ss
push
jl
pop
fmull
xlat
nop
xchg
xor
jmp
fwait
xchg
jns
std
cmpsl
jle
out
mov
out
shr
push
sbbl
in
mov
shll
xchg
outsb
iret
xor
addl
popf
jl
stos
mov
jae
push
fsubrl
jb
pop
outsb
nop
lret
cmc
mov
push
or
in
add
stos
xor
jmp
imul
xchg
jp
and
loop
fcompl
fiaddl
xchg
lahf
jne
int
mov
sbb
cli
adc
arpl
xor
sbb
add
or
xchg
sbb
repnz
fsubs
add
mov
mov
or
dec
cmp
insb
mov
cmpsl
sti
mov
ficomps
repnz
dec
lods
mov
mov
mov
aas
jg
aas
or
test
and
xchg
add
cli
out
gs
add
jne
xchg
daa
lods
jmp
es
mov
add
int3
pusha
dec
or
out
movsl
lahf
push
enter
or
cmpsb
outsb
popa
movsb
sub
clc
mov
sahf
push
je
adc
jo
pushf
insl
in
pop
inc
and
ljmp
fcoms
mov
lds
sbb
das
cmpl
push
cmc
daa
sarl
pop
pop
or
cmpsb
cltd
nop
stc
add
jg
jl
lods
mov
dec
mov
or
cmp
sti
sahf
ja
arpl
cmp
jae
inc
cld
xor
outsl
bound
sti
xor
jnp
in
jne
push
mov
sbb
jl
fdivp
jbe
sbb
or
mov
xlat
rcrl
mov
dec
mov
sbb
enter
rep
or
cs
movsb
xchg
cmp
ss
call
pop
nop
jg
insb
out
push
movsb
jle
add
mov
sbb
shl
shrl
out
lahf
nop
loop
subl
jnp
mov
mov
fadds
add
add
adc
in
mov
or
paddw
scas
or
cmpsb
out
jle
ja
and
mov
xor
clc
push
or
mov
pop
xchg
jo
cwtl
lods
and
in
pusha
outsb
movsb
je
mov
ds
fdivrs
loopne
dec
std
lods
nop
in
mov
xchg
and
xor
push
pushf
pusha
mov
jg
sbbb
mov
jge
mov
shl
jb
mov
sub
fmull
mov
popa
pop
jle
outsl
hlt
sbb
add
clc
lods
sub
pop
pop
into
jae
xchg
aas
mov
cli
pop
repnz
mov
and
lods
xlat
stos
jmp
roll
scas
jno
push
out
scas
pop
adc
loopne
mov
cmpsb
test
fsubrs
fmulp
in
fstpl
gs
jb
and
push
test
dec
loop
inc
sbb
pushf
lcall
add
adc
insl
rcl
xor
cmpsl
mov
clc
xor
mov
push
mov
sbb
mov
or
cli
push
push
mov
outsl
clc
sub
shlb
jno
dec
popa
nop
testl
xor
lods
fs
jmp
insb
add
ljmp
test
fsubrl
insl
test
adc
int
sbb
sbb
mov
pushf
jge
test
jge
push
popa
clc
sbb
push
xchg
and
sahf
xor
jp
mov
lea
push
mov
mov
push
mov
jecxz
mov
or
int
fcompl
jnp
pop
nop
and
mov
jne
int3
mov
jnp
ja
popf
push
mov
nop
xchg
mov
inc
mov
sbb
xchg
imul
jnp
mov
jnp
arpl
fildl
aaa
jo
insb
ja
cmp
mov
aam
shrb
dec
push
xchg
adc
dec
outsb
shrb
insl
orb
xchg
pop
outsb
mov
push
movsl
jle
idivl
imull
push
das
data16
mov
and
add
push
data16
jmp
sbb
data16
movsl
movsb
jecxz
cmpsl
aas
mov
or
mov
das
lcall
mov
or
or
stc
test
test
push
hlt
repnz
data16
cltd
or
es
test
jmp
xchg
xchg
add
jae
dec
scas
int
add
jl
push
adc
inc
adc
push
xchg
sbb
sbb
pop
or
aaa
push
sub
jle
clc
pop
mov
xchg
mov
mov
es
cld
int3
jle
pop
repz
xlat
out
jle
push
pushf
mov
pop
nop
shll
ja
push
inc
and
xor
fdivs
movsl
push
mov
call
cli
shlb
pop
movsl
lahf
mov
sub
lods
push
pushf
jge
pop
lcall
or
mov
jnp
fs
mov
jle
pop
popf
mov
add
adc
cmpsb
shr
jg
fs
popf
hlt
aaa
xchg
and
jge
sub
mov
pop
pop
jg
lds
out
lret
iret
xchg
or
sbb
push
cmpsl
jbe
and
jecxz
rcl
cmpsl
in
mov
pop
jle
jge
jne
ja
imul
push
mov
ja
xchg
orb
jne
repz
pcmpeqb
sbb
xor
ds
loop
popa
hlt
fadds
enter
ret
lret
ja
lock
bound
notl
pop
fildll
popa
push
test
testl
into
pop
xor
xchg
mov
pushf
jne
jbe
pop
jmp
xchg
out
fimuls
cmp
gs
les
cmp
mov
mov
sbb
repnz
xchg
jecxz
push
inc
jp
and
iret
cmpsl
pop
mov
cmp
adc
xchg
dec
dec
hlt
lcall
sbb
pop
decb
cld
loopne
mov
sahf
mov
test
movsb
enter
dec
and
jmp
clc
sub
or
xor
xlat
imul
out
mov
push
mov
sbb
mov
into
jg
je
lcall
into
xchg
push
mov
and
dec
lods
mov
insl
mov
ja
jg
jl
lods
popa
push
mov
decl
mov
scas
je
shll
ret
cld
vpmadcswd
nop
insb
icebp
xchg
pop
cwtl
test
outsl
stc
call
push
mov
jbe
mov
lcall
mov
cmpsl
inc
decb
and
xchg
or
push
xchg
dec
xor
and
add
sbb
xchg
bndldx
pop
inc
in
repz
push
push
test
add
sbb
leave
fistpll
pushf
pop
jmp
dec
xchg
cmpsl
movsl
dec
sub
xor
push
frstor
in
jb
xchg
push
mov
ret
mov
dec
aam
cmpxchg
push
sbb
testl
rcrl
xchg
mov
pop
pop
cltd
aad
popa
cwtl
movsb
fists
or
fwait
movsb
mov
fsub
je
xchg
in
mov
out
rep
xchg
fwait
test
jnp
out
hlt
jns
sti
xchg
cs
lahf
or
push
dec
lret
fdivrl
jnp
and
test
mov
ret
stc
dec
dec
data16
lcall
scas
pop
ja
adc
xchg
out
or
ss
add
in
inc
out
xorb
loopne
or
dec
mov
adc
and
in
cmp
mov
jae
sub
jmp
bound
pop
cmp
mov
sbb
int3
xor
mov
ds
sbb
mov
test
cmpsl
push
div
andl
dec
push
out
out
adc
jo
mov
pop
insl
mov
xchg
pop
xchg
adc
mov
stos
xor
mov
ficomps
jg
cmpsl
push
inc
mov
push
push
push
dec
popf
or
jns
mov
mov
fadd
fwait
or
cltd
enter
xor
mov
sub
daa
lds
and
outsl
add
sbb
cltd
pop
test
cwtl
cmpsl
fcoml
or
sub
or
jns
ljmp
test
xchg
int
outsb
in
sub
jmp
je
xchg
clts
aaa
mov
add
mov
ja
pop
dec
mov
lods
xor
lcall
mov
push
dec
sbb
mov
pop
add
stos
mov
test
lods
rcll
enter
leave
dec
test
mov
pop
dec
ds
gs
ljmp
jb
jl
jg
mov
jo
mov
repz
dec
daa
push
fprem
mov
jbe
mov
cwtl
adc
and
movsl
jge
or
mov
fdiv
dec
test
push
pop
cli
in
popa
movsb
jae
adc
lahf
popa
popf
iret
scas
repz
lods
dec
cld
mov
decb
push
pop
sbb
cwtl
xor
clc
mov
orps
pop
mov
ss
int
mov
sub
add
add
cmp
cmpl
mov
int3
sub
mov
lock
or
pop
pop
fsubrs
fmull
adc
lahf
insl
sbb
ljmp
mov
ljmp
or
mov
cmc
sbb
fiadds
sbb
fisubrs
mov
xchg
and
add
fdivrp
dec
mov
lods
mov
lock
sub
dec
dec
and
pop
insl
jge
mov
fdivrp
gs
test
jne
mov
imul
sarl
ret
xchg
mov
sub
call
gs
add
outsl
lret
in
not
jbe
dec
jb
mov
mov
jns
mov
mov
sar
ss
arpl
cmpsl
inc
lock
rclb
add
jmp
mov
mov
push
mov
enter
sub
mov
ljmp
fiadds
in
jmp
aad
pop
call
jmp
into
ret
mov
scas
dec
jge
pop
and
in
int3
imul
mov
loop
push
ljmp
sbb
cmp
hlt
jg
push
hlt
push
scas
jae
mov
dec
or
in
fmull
mov
sbb
call
je
int3
imul
repz
cld
ljmp
dec
in
out
dec
and
add
or
jb
inc
loop
mov
ljmp
jp
mov
pop
xor
mov
scas
sahf
mov
push
xchg
xor
push
aam
rorb
jmp
add
lret
pushf
mov
add
sbb
jbe
fimuls
popa
or
repnz
aam
fsubrs
mov
or
hlt
sarl
movsl
inc
add
iret
insb
mov
mov
mov
add
fisttpll
ja
ror
pop
imul
mov
add
imul
lock
push
lret
into
jle
mov
not
rcll
dec
pushf
push
or
mov
fcompl
fwait
lret
notw
pop
jne
or
mov
xor
sti
das
sti
nop
iret
adc
fists
std
clc
aas
shr
sarl
jl
jae
or
push
enter
pop
push
and
cmpsb
cmp
orl
test
out
xchg
mov
xor
out
cmc
mov
jl
mov
and
addr16
jecxz
mov
lcall
arpl
push
xor
mov
lret
mov
arpl
mov
arpl
ficompl
mov
mov
jle
dec
ljmp
xlat
fwait
scas
and
mov
lds
hlt
mov
mov
inc
push
sbb
aam
int3
repz
jg
sub
sti
lods
pop
mov
cmpl
inc
mov
ja
cld
and
imul
jge
lret
fsubr
add
adc
int
and
xchg
jg
scas
xchg
loop
fs
jecxz
imul
mov
jge
xchg
rcrl
and
push
mov
adc
imul
in
in
lret
xlat
sub
dec
xchg
xor
movb
mov
sbb
scas
sbb
in
sub
mov
jb
dec
sbb
dec
fsubl
gs
fsubl
and
mov
divb
in
lods
inc
jge
hlt
fdiv
mov
popf
xchg
cld
call
movsb
xor
sahf
fcoms
stos
sbb
dec
movsl
inc
jp
aas
test
dec
mov
mov
ss
shrb
aaa
es
mov
negb
jmp
movsb
dec
lock
ja
cltd
arpl
mov
xchg
rcrl
sbb
mov
movsl
lahf
lods
pop
mov
xchg
fsubrp
jg
mov
push
jge
jnp
cmpsb
push
nop
adc
dec
xchg
xor
cltd
call
in
dec
test
sahf
int3
lcall
js
mov
aas
and
incl
out
pop
cwtl
outsb
lcall
push
jne
sbb
and
push
nop
mov
insb
ljmp
adcl
jne
or
mov
mov
and
mov
and
out
sbbl
aas
aam
int3
push
dec
mov
sbb
cld
enter
enter
shll
mov
xchg
fs
shlb
pop
cwtl
push
es
mov
jmp
inc
pop
lret
movsb
fs
jae
in
loopne
sbb
push
xchg
jb
das
popa
and
jl
cmc
cld
jmp
sub
cmc
add
aam
clc
mov
pop
jg
or
push
out
stos
lds
enter
mov
cmpsb
loope
movsb
mov
pop
lock
leave
mov
xchg
cmpsl
std
mov
lods
fnstenv
movsl
int3
call
sbb
mov
stc
leave
mov
orl
mov
ss
and
imul
sbb
push
cld
cli
mov
mov
sbb
clc
inc
lcall
jbe
xchg
mov
ss
insl
out
mov
jno
cwtl
fstpl
or
je
pop
push
sbb
push
jl
icebp
adc
sub
xor
fcompl
xchg
ficoms
mov
jno
xlat
pop
lahf
xor
fdivl
sbb
sub
push
enter
mov
pop
jae
xchg
popf
jg
dec
mov
mov
cltd
jp
stos
mov
mov
popa
add
mov
test
sbb
mov
sbb
int3
bound
pop
jle
lret
push
xchg
pop
ss
dec
mov
notl
in
push
jg
out
test
xor
fwait
in
scas
pop
fsub
stos
daa
decl
sub
lcall
arpl
xor
xlat
hlt
stc
and
jbe
stos
enter
pmaxsw
mov
cmpsb
jnp
dec
adc
sub
xchg
cmpsl
rol
fstl
push
lea
lret
es
aaa
ljmp
std
loopne
popa
dec
jge
mov
fs
adcb
mov
lods
and
mov
outsb
data16
mov
mov
xchg
mov
sti
xchg
and
dec
sbb
jge
push
mov
fs
mov
push
mov
aad
nop
testb
push
and
dec
sti
les
add
sub
xchg
mov
divl
lret
mov
mov
xor
ljmp
xchg
in
sahf
fadd
iret
pusha
cmp
jecxz
dec
xlat
sbb
jmp
adc
fsubrs
push
pop
decl
jne
pop
in
jge
insb
sub
loopne
mov
aam
dec
idivb
pushf
inc
or
into
mov
cli
lea
pop
popf
push
sahf
ljmp
aam
ss
sub
outsl
loopne
jnp
cli
dec
pop
test
push
jmp
jl
pop
inc
decb
outsl
dec
or
inc
pop
jns
sub
in
ds
repz
push
mov
in
loopne
mov
mov
lods
mov
lock
fwait
test
cmp
andl
mov
sbb
mov
dec
ja
shlb
insb
jg
cs
iret
xchg
sbb
loopne
ja
clc
cmpsl
mov
push
int3
push
push
repz
push
push
sti
lds
pop
mov
lods
cmp
lock
xor
fdivl
popa
arpl
cmc
dec
push
mov
pop
out
and
jae
adc
adcl
pop
paddusb
pop
mov
pushf
test
inc
pop
jle
xchg
dec
pop
gs
push
jae
aaa
notb
mov
fs
sbb
jl
data16
pop
outsb
pop
dec
lcall
mov
insl
rcl
pop
cltd
andl
mov
push
pop
sub
iret
test
inc
enter
jno
int3
inc
dec
mov
pop
or
mov
popf
data16
pushf
jge
pop
and
dec
xor
iret
mov
lock
mov
int
mov
js
out
outsb
aaa
xchg
int3
xor
popf
loopne
dec
call
pop
jp
mov
jge
mov
push
cmovl
mov
fldl
xchg
enter
hlt
ror
sbb
lods
pop
push
jbe
mov
data16
call
ror
ss
dec
mov
pop
mov
mov
scas
scas
or
push
cltd
nop
stc
dec
pusha
dec
arpl
mov
dec
arpl
in
mov
repnz
mov
and
orl
inc
scas
cld
lret
popa
mov
addr16
mov
call
out
fwait
push
movsb
jle
mov
pusha
aas
sbb
sti
mov
push
insb
int3
cmp
cld
push
mov
xor
movl
je
call
mov
loope
pushf
mov
std
pushf
test
sahf
push
aam
jmp
nop
hlt
lds
les
mov
gs
cli
xchg
push
pop
jge
jno
lods
sbb
enter
fsubrp
lds
or
sbb
and
test
jge
lahf
and
mov
dec
jns
push
jnp
aaa
cmp
push
sbb
jbe
imul
mov
repz
jb
sti
or
andps
gs
add
lea
pop
call
iret
lods
in
call
rclb
jno
ljmp
popa
push
dec
mov
push
or
mov
fcoms
mov
push
push
xchg
scas
movsl
and
adc
int3
add
cltd
shrl
add
in
daa
imul
mov
cmp
jmp
add
popf
dec
cld
sbb
call
inc
arpl
pop
aad
mov
ljmp
cmpsb
pop
imul
shll
jae
push
shll
data16
cltd
jbe
mov
jle
aam
cld
imul
cmova
aam
sbb
mov
dec
gs
push
or
call
pusha
jbe
push
pop
pop
test
popf
jbe
ja
dec
pushf
lods
mov
jle
cltd
xchg
cmp
xchg
ja
shlb
leave
in
repz
xchg
jl
mov
mov
xorb
dec
or
dec
mov
fwait
inc
xchg
in
sub
jne
jno
cmp
mov
fdivl
fdivp
sahf
push
mov
and
pop
push
out
jae
push
mov
movsl
and
lret
mov
xchg
repnz
loopne
cli
ss
scas
fidivl
mov
pop
insb
jge
push
dec
sbb
data16
cmp
lds
or
push
add
dec
mov
lcall
stos
insl
scas
and
inc
jg
repz
mov
leave
mov
mov
push
jl
xchg
repnz
jae
lahf
outsl
push
pop
ktestw
jmp
in
stos
dec
push
pop
cwtl
push
sbb
mov
mov
dec
jg
test
jmp
mov
adc
mov
sub
jge
push
jo
int
ljmp
or
push
inc
sbb
popf
push
jg
mov
mov
jge
stos
test
adc
shll
dec
jo
mov
dec
pop
mov
pushf
out
lret
aam
and
adc
out
dec
ja
icebp
scas
fwait
add
shrb
add
mov
sub
cld
loope
jne
iret
push
or
adc
hlt
jb
sbb
xchg
aad
inc
mov
mov
imul
jnp
cmpsl
divb
xor
xchg
dec
xchg
pop
bound
addb
jecxz
push
cmc
add
xchg
std
xchg
mov
sbb
xchg
jo
pop
enter
lods
pop
scas
fisttps
push
push
mov
jb
dec
jmp
or
dec
jmp
jae
mov
repz
push
repz
nop
aam
outsl
lret
int3
iret
jg
sub
pop
div
jmp
sbb
pop
dec
sti
arpl
and
mov
mov
repnz
dec
xchg
and
les
in
jl
dec
cld
mov
and
jmp
insl
in
outsl
push
scas
sbb
mov
push
pushf
fbld
fadds
push
pop
pop
test
dec
jbe
mov
test
movsl
jg
call
repnz
movsl
ljmp
ljmp
jmp
jbe
sub
sbb
xchg
xchg
sti
add
mov
fwait
test
pop
enter
push
in
std
xor
pop
adc
add
stos
outsl
push
push
mov
cmc
cmp
cmp
jecxz
push
clc
mov
xor
hlt
mov
push
dec
enter
and
jmp
rcll
xor
mov
push
fwait
loope
xlat
out
pushf
jp
sti
xchg
mov
call
push
and
pop
xor
cmpl
inc
mov
jbe
scas
mov
push
dec
jb
xlat
jg
out
cmpsb
outsb
pop
fsubrs
mov
push
xor
or
enter
sbb
mov
push
ss
lea
inc
push
inc
mov
add
pop
mov
add
or
je
mov
stos
mov
fwait
enter
lahf
xor
movsl
scas
mov
push
push
adc
ljmp
nop
mov
outsl
in
and
xor
sub
sbb
ret
pushf
int3
mov
or
cmp
jmp
sbb
push
mov
fcoml
dec
gs
xchg
or
sbb
arpl
push
scas
push
cmp
fsts
push
xchg
mov
pop
and
daa
mov
dec
mov
gs
mov
popf
or
nop
aam
movsl
lods
mov
push
sbb
in
cmpsb
push
or
jbe
repz
into
pop
rcr
pushf
mov
dec
popa
daa
mov
fcompl
arpl
add
cwtl
cmp
lahf
enter
or
mov
aaa
lcall
push
stos
push
and
jg
icebp
lods
mov
mov
mov
push
arpl
ffree
push
and
pop
movl
mov
dec
or
xchg
xchg
mov
mov
aaa
sbb
imul
lods
aas
jns
mov
cmp
lods
dec
xor
or
sbb
xlat
mov
test
mov
nop
lock
xor
push
popa
lahf
mov
lcall
rolb
jecxz
addb
dec
fmull
sbbl
xchg
jl
and
adc
add
adc
and
pop
cwtl
frstor
jae
xchg
mov
xchg
fiadds
mov
jg
int
adc
push
cmpsl
fstpl
sahf
add
in
push
and
into
push
mov
mov
adc
or
insb
int3
lea
popf
shll
mov
cltd
ljmp
mov
gs
dec
push
push
push
iret
xchg
cwtl
jge
jb
lods
loop
mov
jle
add
imul
stos
mov
adc
fs
movsl
lods
scas
adc
enter
sahf
lret
dec
repz
mov
add
pop
fwait
inc
lds
fmuls
in
cmpsb
int3
dec
push
sahf
mov
push
sub
dec
loopne
and
mov
cmpsl
lods
mov
sbb
jnp
sub
dec
out
jne
out
pop
scas
test
cli
insl
xlat
jb
jle
jns
push
cld
jnp
lcall
hlt
jge
ljmp
mov
pop
or
add
ror
xchg
cs
fcomps
insb
mulb
mov
pop
popa
mov
out
dec
and
mov
or
push
cmp
mov
or
das
int3
dec
and
pop
cltd
clc
jle
ja
in
push
popf
sarb
pop
movb
adc
fisubrl
mov
movsl
int3
and
inc
loop
jo
dec
mov
pop
xchg
push
mov
push
nop
jb
cmpsb
sbb
xchg
into
and
fisubrs
xchg
jge
in
xchg
pop
mov
mov
lcall
mov
push
lods
push
cmc
sbb
and
adc
je
jne
mov
fcomip
xor
cmp
out
iret
sbb
mov
jnp
sbb
decb
hlt
popa
mov
dec
and
push
xor
and
xor
dec
dec
jne
pop
pop
fbstp
jge
lcall
lret
mov
nop
jmp
int
shrb
mov
cmpsb
test
pop
dec
jmp
fiadds
push
hlt
push
hlt
pop
lock
lea
push
pop
loopne
cli
pushf
sbb
inc
sbb
int3
lods
push
jne
movsl
data16
insl
fdivrl
andl
mov
pop
hlt
call
lcall
je
pop
mov
push
push
cmp
insl
dec
dec
jne
inc
ficoms
out
bound
push
add
add
push
pop
data16
mov
cmpsl
nop
xor
xor
or
mov
sbb
pop
jp
add
mov
call
mov
stos
pop
arpl
insl
and
jae
call
ja
pop
or
sub
testb
mov
fidivl
js
insl
out
jbe
fdivl
lods
jnp
push
jo
push
ret
xchg
jne
xchg
popa
popa
insb
sbb
mov
dec
out
mov
out
cld
sahf
or
mov
dec
sbb
insl
mov
xor
out
xor
pop
add
jp
bound
jbe
lret
mov
out
xchg
scas
lods
sbb
jno
dec
xchg
xor
push
cltd
lret
sbb
jo
lock
fisttpll
cmp
imul
push
sbb
out
jb
mov
mov
insl
xchg
mov
mov
ljmp
dec
xrelease
rorb
or
xchg
enter
mov
leave
pop
aaa
fdivl
lods
add
push
ds
int
test
push
mov
mov
movsl
jg
jnp
push
aad
cld
jmp
nop
dec
jnp
aam
push
sub
nop
ljmp
mov
movsl
xchg
sbb
scas
lret
jmp
jne
adc
push
or
mov
stos
sti
popf
cwtl
add
dec
jmp
outsb
jg
gs
loop
in
push
add
jg
aad
test
mov
outsb
test
inc
mov
out
dec
int3
dec
mov
mov
inc
rorb
cmpsl
push
fsubrl
dec
fidivrl
out
lret
jg
lahf
xor
fisubrl
daa
pop
nop
inc
imul
xchg
jne
jae
cmpsb
push
jle
sub
pop
jno
outsb
out
xchg
mov
xor
adc
fmull
mov
pop
mov
pushf
in
aas
jecxz
je
into
push
mov
pop
xchg
sbbl
int
enter
mov
cwtl
imul
shlb
pop
or
jle
lcall
das
push
xchg
add
fs
jecxz
out
outsb
push
loop
mov
inc
and
rcr
mov
iret
fdiv
outsb
jge
ffreep
shrl
aad
adc
movsb
lcall
mov
ja
xor
push
aad
cmp
lods
dec
testl
sarb
outsb
xchg
jmp
ss
and
data16
aad
inc
cmc
jmp
dec
movsb
push
sub
ret
push
inc
aam
xlat
adc
shr
push
and
es
cltd
mov
movsb
enter
mov
jno
push
jl
sbb
es
sbb
pop
mov
inc
orl
cmc
int
jne
out
or
mov
lods
add
sub
sub
xchg
pop
sbb
dec
shr
sti
or
outsb
mov
sub
add
add
and
in
mov
stc
call
xor
mov
roll
icebp
sahf
xchg
aam
pop
and
push
ret
add
stc
mov
pop
test
dec
dec
adc
or
fcmovu
jg
in
icebp
loope
xchg
sbb
flds
pushf
xor
push
jo
mov
mov
add
jbe
je
lret
inc
mov
add
and
jns
cmp
repz
subl
mov
out
mov
call
inc
adc
adc
adc
lds
push
sbb
movsb
fsubrl
mov
xchg
jge
lods
jo
xchg
fdivl
hlt
sbb
fbld
sub
xor
es
nop
or
test
loope
mov
add
lods
mov
test
mov
add
insb
mov
data16
lret
in
mov
or
inc
add
cmc
push
jae
int3
outsl
or
movsb
lods
dec
mov
mov
fldt
add
push
pop
std
call
pop
aaa
addr16
jbe
dec
add
fidivrl
xor
pop
insl
movsb
sbb
mov
mov
in
ja
sti
dec
sbb
mov
lret
movsl
das
std
lock
js
jl
xor
mov
icebp
inc
enter
sub
aad
push
shrb
pop
jg
ja
outsl
imul
dec
push
cmp
dec
sbb
dec
sti
dec
jmp
fisttpl
dec
mov
dec
mov
dec
push
pop
dec
dec
dec
cmp
dec
sbb
dec
cli
dec
ljmp
pop
adc
inc
inc
mov
sub
mov
lea
mov
fs
pop
mov
mov
movsl
mov
out
jnp
add
xchg
mov
mov
je
fs
dec
cmp
mov
add
hlt
jns
jns
jns
jns
jns
test
dec
leave
mov
movsl
mov
pcmpgtw
push
ret
push
cmpsb
push
xchg
push
xchg
push
push
push
push
inc
push
ss
jmp
mov
cmpsb
mov
out
insb
cmpb
jl
arpl
mov
dec
adc
cmp
sti
ljmp
movsl
loop
loope
pop
rcrl
mov
mov
dec
jo
pusha
dec
push
dec
inc
dec
xor
dec
adc
dec
lock
loopne
rorb
dec
mov
mov
dec
jae
arpl
dec
inc
dec
xor
dec
adc
dec
repz
jecxz
rorl
dec
mov
mov
in
or
cmp
sti
sbb
stos
ljmp
xchg
ret
add
fildll
out
popf
stos
jns
add
out
pop
test
xor
mov
or
sqrtps
sub
insb
sbb
xchg
aaa
test
frstor
mov
push
cmpsl
push
mov
fs
incb
fwait
ret
in
jg
ja
outsl
cmpsl
addr16
pop
xchg
dec
addr16
push
dec
inc
dec
mov
ds
pop
aad
pop
cmpsb
sub
daa
stos
movl
dec
jg
ja
out
xchg
or
or
pusha
test
pop
fistpl
push
jge
dec
add
or
mov
data16
gs
movsl
bound
pop
stos
pop
jp
cmp
je
pop
ds
and
dec
mov
movsl
pushf
xchg
mov
sub
roll
std
dec
sub
mov
cmp
loope
xchg
mov
inc
pusha
xor
adc
clc
mov
pop
pop
jno
pop
aad
add
cmp
mov
daa
cli
or
inc
dec
sbb
mov
push
dec
pop
dec
ds
and
dec
ljmp
jl
pop
or
or
in
or
or
les
in
leave
test
and
scas
je
pop
stos
cmp
and
int3
test
push
test
out
lret
test
jbe
pop
test
push
test
pushf
xorb
lret
addr16
pop
sarl
iret
sub
push
lret
out
dec
xlat
js
rcll
roll
iret
div
out
push
dec
mov
cmpsb
dec
xchg
dec
xchg
dec
push
dec
inc
dec
ss
es
push
dec
push
dec
testb
dec
dec
movsl
dec
xchg
dec
test
dec
gs
push
je
xor
addr16
dec
aad
lds
dec
movsb
add
push
push
inc
push
xor
and
adc
add
hlt
push
in
aam
les
push
lds
push
xchg
push
addr16
push
push
inc
push
aaa
push
daa
push
pop
push
pop
push
out
xlat
push
lds
push
cmpsb
push
xchg
push
xchg
push
push
push
push
inc
push
ss
es
push
aas
dec
out
das
jns
jns
jns
imul
mov
cmc
cli
in
aad
lds
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
test
insb
jno
and
or
cmovle
push
or
sti
add
jp
inc
mov
fidivrs
jns
jns
test
pop
inc
xchg
jle
addr16
push
test
or
add
in
leave
or
loop
cmp
adc
in
popa
aam
lods
popa
xchg
popa
imul
mov
add
popa
mov
push
jg
ja
dec
loop
ret
dec
in
push
rclb
push
aaa
fbstp
out
dec
pop
dec
testl
mov
cmpsb
dec
xchg
dec
xchg
dec
dec
push
dec
inc
dec
ss
es
push
dec
push
dec
testb
dec
dec
mov
movsl
dec
xchg
dec
test
dec
xchg
xor
push
add
dec
aad
lds
test
jge
pop
fbstp
pop
inc
ja
outsl
adc
pop
jb
cs
out
dec
push
stc
xor
or
hlt
or
or
or
testb
xor
call
lahf
and
dec
repnz
ret
dec
pop
or
icebp
bswap
or
cmp
and
or
hlt
push
fdivrl
xchg
dec
sub
dec
into
dec
cltd
aad
jl
sarl
int
sti
adc
ja
or
cmp
js
sti
icebp
mov
nop
cli
insb
mov
add
jns
jns
jns
jns
jno
pushf
dec
mov
je
popa
and
cld
add
dec
or
and
ret
lods
stc
jo
mov
in
pusha
insb
iret
pop
pop
pop
push
or
adc
out
frstor
sti
sbb
sub
movsl
mov
mov
incl
cmp
push
mov
mov
mov
je
inc
and
cwtl
sti
cmp
sub
cmp
daa
mov
test
test
and
and
add
loop
ret
mov
dec
cld
dec
aam
lods
hlt
xchg
inc
push
sbb
pusha
je
movsl
sub
push
mov
push
scas
fists
jo
shl
ror
iret
mov
insl
lret
pop
sub
insb
add
test
sub
and
add
mov
cmp
and
adc
add
hlt
or
or
or
xchg
ja
addr16
dec
inc
popa
aaa
popa
daa
popa
pop
popa
pop
popa
mull
popa
xlat
popa
popa
mov
cmpsb
popa
xchg
popa
xchg
popa
popaw
push
popa
inc
popa
ss
es
push
popa
push
popa
mulb
popa
popa
popa
mov
push
xchg
push
test
pop
xlat
test
aad
lds
xchg
test
fs
xor
and
adc
data16
jns
jns
jns
jns
jge
add
test
not
dec
ja
outsl
pop
aad
pop
push
ror
sarl
push
xchg
shll
or
fisubrs
fstl
test
xor
sub
sub
mov
cli
test
jns
jns
jns
jns
jge
in
dec
ss
sbb
dec
loop
dec
test
dec
push
aad
dec
add
lcall
dec
jne
pop
push
pusha
sub
icebp
mov
xchg
xor
and
inc
pop
movnti
add
and
mov
int3
adcl
and
ret
in
lds
popa
movsb
popa
xchg
popa
test
pop
shlb
inc
popa
xor
and
adc
add
hlt
popa
in
aam
les
popa
cmpsl
mov
xchg
push
addr16
push
push
inc
push
aaa
lcall
pop
dec
pop
sbb
or
mov
cmpsb
and
add
jbe
popa
push
popa
push
popa
mulb
je
push
mov
dec
adc
gs
push
xchg
xor
pushf
int
lret
in
aad
lds
push
movsb
stos
test
push
test
insb
adc
add
hlt
jge
mov
popa
cmpsl
jo
lds
aad
je
lcall
jae
aas
mov
xor
jge
xchg
aam
scas
aad
fidivl
imul
les
and
pop
cmp
push
cld
mov
xlat
lret
lods
call
lret
pop
es
movsl
push
in
test
pop
pop
ret
popa
in
popa
mov
push
add
xor
dec
testl
and
dec
pop
les
sbb
cmp
sub
test
aaa
movsl
daa
xchg
pop
test
jne
out
inc
leave
xlat
lret
lret
mov
cmpsb
aas
mov
dec
push
dec
inc
loopne
popf
pusha
lock
mov
roll
sarl
iret
sbb
jno
and
pop
enter
outsl
mov
aaa
sub
xchg
push
cs
insb
xor
je
sti
mov
xchg
mull
sub
ud0
cmp
xchg
dec
popf
dec
orl
rorl
xchg
cs
int
lret
scas
leave
mov
je
add
ds
lods
xchg
outsl
dec
out
xlat
dec
dec
mov
cmpsb
dec
xchg
dec
xchg
dec
dec
push
dec
inc
dec
into
stos
lea
sti
and
jecxz
aam
popa
fnstenv
stos
movsl
shll
pusha
lods
jnp
iret
scas
sub
fdivs
inc
daa
add
xchg
movsl
push
cmp
fsubrl
mov
ds
sub
shll
pusha
prefetch
jb
push
cmp
push
int
movsb
mov
xchg
lret
mov
pop
push
pop
notb
aad
xor
or
cmc
or
sbb
test
movsb
test
fisttpll
dec
push
dec
inc
dec
xor
and
add
hlt
dec
in
aam
int3
fisttpl
push
ds
lea
mov
inc
movsb
inc
or
test
jl
pusha
js
test
sbb
xchg
pop
xchg
jns
sub
cmpsl
sub
test
mov
jl
mov
and
je
stos
aas
push
mov
divl
add
neg
cmc
cld
outsl
sbbl
adc
dec
lret
dec
stos
dec
decb
aad
insb
and
lock
rol
push
cmp
gs
cmp
les
or
or
sbb
fs
out
mov
testl
sub
movsl
mov
jne
lcall
jne
aad
into
sub
pop
daa
test
sub
stos
mov
cmp
push
hlt
movsl
rclb
gs
scas
push
jb
popf
std
xor
push
cmp
shll
or
inc
or
mov
imul
lret
jns
jns
jns
jns
jge
mov
xchg
out
or
adc
mov
test
daa
mov
movsb
ficoms
push
adc
ja
outsl
lock
pop
stos
push
dec
mov
pop
inc
adc
xchg
stos
inc
xchg
arpl
aad
jl
jmp
or
in
sbb
stos
pushf
subl
xchg
sub
mov
sub
sub
out
test
push
mov
cli
xchg
sbb
fdivrl
rcrb
stos
test
jg
dec
test
push
fidivrs
jge
addr16
dec
insl
aad
jo
shll
cmp
mov
xchg
int
push
mov
mov
clc
popa
enter
fdivl
push
pop
push
lret
out
mov
ss
sbb
test
lret
jne
aad
adc
iret
mov
pop
lret
xor
lahf
ds
and
add
test
push
test
fs
dec
test
pusha
in
mov
or
sbb
movmskps
sbb
lods
dec
cmp
sbb
sub
in
out
pusha
dec
movb
lods
and
idivl
mov
in
mov
daa
adcl
dec
ss
es
push
and
inc
sbb
popa
popa
mov
movsl
popa
xchg
popa
test
ja
push
push
jmp
stos
ja
pop
stos
jmp
stos
test
adc
les
push
mov
dec
mov
cli
pop
or
mov
shlb
cmp
push
mov
xchg
or
xor
std
mov
addr16
cmpsb
dec
xchg
faddl
or
or
or
or
or
sbb
inc
mov
test
popa
gs
inc
pop
xor
mov
addr16
xchg
std
xchg
sub
xchg
pusha
push
das
fcoml
push
out
sbb
pushf
popf
pop
leave
mov
out
sbb
ds
xlat
mov
lret
xlat
lret
sti
mov
movsb
xchg
mov
pushf
stc
push
and
stos
dec
stos
sub
or
add
push
mov
test
and
test
push
ret
iret
and
and
outsl
lahf
sbb
movsl
push
and
shlb
dec
jle
nop
mov
mov
ja
or
inc
sbb
test
mov
jbe
lods
jmp
fldt
xchg
mov
dec
push
cmp
pop
mov
stos
cmp
outsl
adc
push
in
aad
lds
movsb
or
mov
and
or
popa
add
hlt
popa
in
les
popa
cmpsl
popa
xchg
popa
xchg
push
push
outsb
mov
aaa
lret
daa
lret
pop
lret
pop
lret
test
lret
mov
cmpsb
lret
xchg
lret
xchg
jbe
lretw
push
lret
inc
lret
ss
es
push
lret
push
lret
idiv
out
pop
jmp
movsl
test
jne
out
push
inc
push
add
inc
push
rol
in
dec
movsb
mov
or
xor
and
mov
test
aam
inc
mov
sub
push
jge
mov
ja
notl
jle
dec
sbb
and
xchg
shlb
popaw
push
popa
inc
popa
es
push
popa
push
ja
out
push
push
movsl
push
xchg
push
test
dec
rclb
pusha
xor
add
out
push
into
into
fcompl
fucomip
out
sbb
test
cld
shll
lea
and
push
jne
jmp
out
test
sub
and
xor
sub
sub
test
ss
push
test
inc
cmp
insl
cmp
and
adc
testb
in
aam
les
dec
cmpsl
or
or
push
xor
xchg
ljmp
and
or
sbb
in
inc
or
lods
testb
xchg
jl
sbbb
out
adc
out
pxor
popa
test
mov
xchg
dec
out
lods
xchg
out
push
out
add
xorl
out
and
mov
out
mov
jno
dec
xchg
loopne
popa
es
push
xchg
push
dec
testb
movsl
xchg
test
leave
gs
push
data16
xor
iret
add
leave
lret
movsb
lret
xchg
lret
test
je
aad
jmp
jbe
jge
test
in
aam
les
xchg
test
addr16
aaa
test
pop
push
fisubrs
mov
in
push
fnsave
outsl
fldenv
pop
test
mov
adc
pop
mov
push
testl
push
mov
or
xor
push
test
leave
gs
jecxz
xchg
fisttpll
aad
lds
in
adc
popa
ja
into
dec
push
dec
inc
test
sub
test
xchg
dec
xlat
dec
nop
mov
sub
es
gs
test
ret
popa
popa
mov
movsl
dec
and
test
pop
or
sub
cmp
rcll
sti
in
lgs
push
xchg
push
test
sub
fs
and
adc
add
insb
dec
in
aam
les
xchg
ja
addr16
inc
lret
aaa
lret
daa
lret
pop
lret
pop
lret
test
sti
mov
in
xchg
push
xchg
jle
test
dec
es
sub
out
dec
mov
movsl
push
xchg
push
test
push
push
in
vpmaddwd
add
xchg
add
mov
mov
movsb
jns
insl
cmp
cmp
inc
dec
xor
and
adc
and
aam
leave
mov
cmpsl
cmp
ja
addr16
hlt
out
leave
es
push
test
push
push
mov
movsl
dec
push
leave
test
jne
gs
push
data16
xor
mov
jno
out
push
lds
push
movsb
push
xchg
rcrl
xchg
xor
dec
inc
test
inc
jge
popa
add
in
aam
or
or
or
or
inc
or
or
or
and
gs
dec
xlat
fadd
cmp
xchg
mulb
inc
lret
ss
es
push
lret
push
lret
test
lret
lret
lret
mov
movsl
lret
xchg
incl
aam
cmp
dec
mov
cmp
fsubrs
scas
ss
push
dec
sbb
movsl
dec
or
add
jmp
and
sub
sbb
sub
loopne
fsubp
pop
bound
ss
movsl
dec
out
inc
out
pop
xchg
fsub
dec
in
fwait
insl
cmpsb
mov
xchg
cmpsb
and
pop
mov
lods
pop
jg
ja
outsl
jne
inc
lods
pop
xor
movsb
pop
iret
test
ret
stc
sbb
xchg
jl
push
mov
xor
and
dec
and
lret
push
sti
aaa
mov
lods
push
push
dec
pop
push
adc
decb
movswl
pop
iret
or
xlat
out
sbb
ficompl
pop
gs
sub
ja
push
lea
push
or
nop
rolb
lahf
ret
lods
dec
dec
dec
das
dec
shl
jbe
sti
dec
jle
mov
mov
scas
and
enter
or
enter
popl
cmpsl
scas
sahf
and
popl
push
lahf
dec
ret
sub
pushf
xor
add
dec
arpl
mov
inc
outsl
dec
popa
cli
popa
js
or
cmp
mov
mov
xor
addr16
fistpll
insl
stos
jns
jge
xchg
or
cmp
dec
sub
xor
mov
dec
test
loop
setno
push
pop
bound
inc
pusha
hlt
mov
add
orl
les
dec
gs
cmp
jl
mov
push
cli
pop
arpl
in
cmp
sbb
push
in
xchg
xor
aas
jge
and
mov
mov
loopne
pop
xchg
fidivrl
out
jge
test
cmp
mov
mov
clc
roll
sbb
pop
cmp
fwait
mov
stos
aaa
jae
iret
cmp
jge
mov
popa
xchg
popa
jbe
aas
and
mov
xor
or
test
dec
dec
aad
jmp
hlt
scas
push
pusha
cmp
xor
xchg
clc
test
jne
jbe
leave
mov
outsl
out
push
cmp
jecxz
popf
sbb
pop
push
fimuls
mov
lcall
push
sti
cmp
pop
sub
pop
cmpsb
fisttpll
out
or
hlt
sbb
stos
dec
dec
dec
sub
adc
dec
fcomps
mov
imul
jge
inc
dec
scas
pop
sbb
out
dec
mov
cmp
dec
jge
ja
fs
add
jbe
clc
mov
pusha
jl
mov
dec
gs
mov
dec
lods
lcall
outsl
jnp
pop
xor
std
rorl
fs
sub
lret
test
sub
fldcw
pop
mov
cli
add
mov
jecxz
pop
out
or
xchg
jo
jge
lods
fxch
sub
stos
outsl
sub
xor
repnz
addr16
pop
push
inc
xlat
jg
and
jecxz
xor
and
mov
add
pop
xor
pop
aam
push
add
jbe
and
mov
lahf
rcrl
cmp
sbb
jmp
ds
jl
mov
ja
mov
sub
in
xchg
mov
arpl
jle
jge
mov
popa
cs
and
or
xor
ret
push
jl
call
inc
pop
add
jmp
push
add
push
mov
mov
pushf
cmp
ds
mov
popa
arpl
popa
punpcklwd
ja
mov
cli
push
cltd
push
dec
push
sub
sarl
jle
jle
enter
adc
or
gs
dec
lock
call
ss
xorb
or
sbb
gs
enter
jge
fwait
test
sub
push
sti
mov
call
test
lds
inc
inc
mov
jb
inc
outsl
fsubrp
pop
jl
insb
lds
loopne
arpl
mov
lretw
mov
test
inc
out
xchg
leave
out
sti
mov
test
sbb
inc
push
clc
jo
mov
mull
inc
movsb
jl
jp
loop
inc
aam
movsb
fisttpll
ret
punpckhdq
ret
mov
inc
cli
dec
jmp
xor
std
mov
xor
or
or
ljmp
ret
or
jp
push
xchg
enter
jg
daa
aas
sub
cmp
outsb
pop
arpl
xor
pop
aas
inc
aaa
inc
push
sbb
inc
cmp
or
jno
aad
clc
pushl
or
add
int3
daa
fidivl
fbstp
xchg
aad
je
aaa
fnsave
data16
movsl
push
push
std
aad
fadd
mov
imul
movsl
scas
and
push
dec
andnps
jbe
and
daa
add
out
xor
adc
dec
or
sbb
test
pop
pop
push
cmp
and
push
call
cltd
push
xor
cmc
dec
aas
mov
xor
test
jbe
jmp
push
test
dec
cmc
sarl
sti
fidivrs
insl
imul
push
mov
mov
enter
cmp
push
sbb
push
out
sbbb
roll
mov
add
movsb
pop
push
mov
ljmp
sub
std
pop
jno
pop
out
lret
inc
mov
clc
mov
cmpsb
ss
cmpsb
movl
pop
fcompl
sbb
out
fwait
pop
out
in
jbe
cltd
add
xchg
int
fadds
xchg
jo
pop
xchg
out
mov
das
inc
xchg
fistpl
in
xor
push
cli
jns
jge
in
out
mov
popa
sub
insb
adc
test
jl
dec
add
or
inc
in
dec
pop
sbb
ds
dec
xor
xchg
int
mov
xlat
jmp
push
fstl
cmp
xchg
pop
and
inc
ja
fstpl
sub
roll
test
sbb
das
xchg
or
out
in
adc
add
loopne
outsl
jns
jge
push
mov
fs
sti
or
mov
insl
sub
subb
lods
dec
sub
add
in
aas
xchg
lahf
test
iret
popa
and
js
fwait
or
or
mov
sbb
orl
xor
addr16
add
or
sub
in
cmp
cmp
lcall
pusha
dec
pop
sbb
mov
dec
or
mov
xchg
and
imul
hlt
dec
xchg
std
xchg
pusha
dec
cmp
idivb
inc
leave
pop
and
shr
iret
mov
stc
cli
in
mov
out
sub
sub
mov
gs
mov
cli
test
hlt
sbb
hlt
popa
int3
popa
cmpsl
popa
jg
cmp
jns
jge
out
outsl
leave
mov
outsb
fists
pop
hlt
xor
jmp
rcl
leave
iret
lret
sahf
jmp
test
movsl
out
outsb
nop
shl
shll
xchg
inc
mov
aas
sti
xchg
je
jl
inc
cmp
sub
and
xor
popf
push
mov
pop
cld
mov
xor
dec
ss
pop
and
out
pop
std
stc
gs
addr16
clc
jle
pop
dec
mov
in
aad
insb
lods
rcrl
or
into
xor
ss
mov
loop
cmpsl
fnsave
mov
xchg
inc
pop
push
mov
xchg
sbb
and
daa
push
push
cmp
lods
test
dec
mov
adc
add
loop
mov
test
dec
jle
out
sbb
ss
out
jg
dec
or
lret
jmp
push
xor
mov
cltd
push
adc
inc
test
sub
xor
ljmp
sbb
ret
je
mov
jg
sub
fcompl
mov
in
daa
ss
lahf
push
mov
pop
push
jecxz
and
in
in
mov
paddw
pop
mov
loope
jne
dec
mov
std
and
pop
stos
movzbl
clc
pop
mov
aas
push
mov
jle
bound
das
sbb
nopl
movsb
pop
cltd
mov
rcll
jg
and
cmp
in
gs
int3
xchg
in
push
into
cmpsl
mov
pop
shlb
hlt
out
movsl
sub
dec
ja
adc
aaa
ficompl
jge
imul
sbb
in
test
xor
cmp
jae
es
cmp
pop
cmp
ret
pusha
fstl
pop
pop
mov
das
add
call
push
jg
jnp
pop
mov
ret
popa
out
pop
sbb
push
sub
dec
cmp
jge
test
ja
sbb
aas
or
movzbl
xchg
dec
and
inc
call
dec
aas
mov
push
add
inc
in
or
jne
xchg
inc
test
and
test
push
pop
in
xor
adc
sub
push
test
fsubr
dec
mov
ror
ret
ds
or
std
ja
inc
gs
sbb
insb
or
ljmp
fcompl
jg,pt
repnz
sub
mov
cltd
add
pop
and
mov
mov
jcxz
addb
inc
enter
inc
decb
out
lcall
repnz
mov
popf
movsb
sub
stos
mov
and
dec
stos
pop
push
inc
fidivl
out
jmp
xchg
pushf
push
and
sbb
out
and
stos
xchg
out
mov
fisubrs
jae
mov
and
pop
pop
push
xchg
jmp
insl
jg
cmc
dec
ja
enter
mov
sub
add
call
and
xor
pop
sahf
or
cs
cmpsb
lcall
push
mov
dec
test
push
rorl
hlt
mov
cmp
ljmp
jns
inc
iret
inc
lahf
aaa
sbb
mov
xor
in
pusha
or
or
or
and
gs
cmpl
sahf
imul
jns
push
mov
out
xlat
dec
rcrl
dec
sti
sbb
fucomip
mov
cmp
test
ljmp
in
roll
adc
and
xor
lea
and
xor
enter
iret
xchg
pop
test
mov
cmpsl
std
xor
stc
leave
inc
add
je
push
xchg
pop
das
xor
pop
addl
ret
cmp
pop
gs
jmp
daa
push
mov
popf
push
pop
xchg
or
or
pop
fcompl
dec
sub
insl
mov
ret
xlat
out
test
inc
xor
movsl
sarl
js
inc
fiadds
out
add
mov
mov
fstp
call
pop
in
fwait
push
adc
and
lret
lock
daa
out
pop
in
in
lock
shlb
pop
movsb
nop
inc
inc
sahf
xchg
push
sub
push
mov
dec
and
dec
mov
and
sbb
cmpsb
push
aad
xor
push
test
dec
dec
dec
outsl
jno
and
test
xor
movsl
idiv
aas
mov
xor
test
stos
dec
outsl
int
int
lret
mov
imul
int
lret
mov
insb
lret
push
lret
sub
add
fadds
push
adc
lret
dec
xchg
mov
sub
cmpsb
jge
xchg
sub
dec
mov
scas
pop
push
xor
cmpsb
pop
pop
and
fs
outsl
sub
adc
cmpsl
fmuls
mov
sub
xor
aam
push
je
int3
out
cmp
mov
cmpsb
cmp
mov
popf
mov
gs
jg
ja
aad
insb
mov
pop
pusha
insl
add
and
fcomps
movsb
sbb
mov
push
jge
int3
outsl
sti
aas
addr16
lahf
dec
lcall
mov
xchg
pusha
dec
push
xchg
and
pop
jmp
mov
fcompl
xchg
push
out
dec
adc
mov
in
int3
scas
push
cmc
mov
iret
mov
xchg
mov
out
mov
mov
out
or
pop
in
dec
sbb
scas
aas
aam
add
ja
outsl
sahf
or
ds
shr
inc
adc
fs
dec
or
cmpl
mov
scas
addr16
or
cmp
jno
mov
dec
or
iret
jmp
push
xor
jecxz
and
pop
mov
lea
insb
xchg
jb
pop
stos
xor
leave
sbb
popf
popa
out
cmp
inc
bound
nop
xchg
or
xchg
dec
adc
cmpsb
test
inc
mov
popa
pop
mov
cs
mulb
lret
or
leave
sti
cmpsb
pop
jp
ds
jae
sub
ret
inc
cwtl
add
sbb
push
inc
dec
pop
mov
fists
xchg
and
sub
mov
xchg
sub
xchg
mov
adc
dec
and
and
movsl
enter
dec
addr16
fsubl
mov
cmc
cmp
mov
jge
jmp
adc
std
in
add
add
aaa
popf
cmp
mov
xchg
pop
push
in
dec
sbb
ss
sub
jne
gs
ja
data16
add
scas
and
push
jle
bound
adc
hlt
dec
cmpb
jg
repz
pop
or
jmp
dec
jno
adc
test
and
aas
testl
push
in
sbb
mov
ffree
push
cmpsl
jg
pop
jg
loopne
ja
mov
out
popa
daa
mov
cmpsb
cli
mov
sbb
pop
pop
ljmp
pop
xor
ja
sbb
mov
mov
dec
push
add
dec
mov
inc
inc
adc
or
fwait
repnz
aas
stos
out
test
mov
push
sbb
in
xchg
ja
xor
test
into
test
cmp
gs
xorb
sbb
incl
iret
xor
lea
xchg
pusha
push
test
mov
mov
outsb
adc
pop
cmp
sti
sbb
es
pushf
aaa
daa
adc
call
jg
pop
in
loopne
popf
mov
xor
and
xor
sahf
and
ds
and
pushw
sbb
mov
leave
adc
shrb
test
or
aas
test
jg
or
mov
inc
pop
fdivl
lahf
push
and
jle
mov
imul
xor
cmpsb
xchg
and
or
cmp
inc
fnstsw
lcall
push
out
dec
je
insb
mov
lret
mov
dec
rorl
cmp
pop
mov
xlat
int3
add
pop
mov
mov
cmp
ds
mov
push
fdivs
sub
lods
test
bound
xchg
jns
xor
adc
cmc
mov
leave
jo
insb
jge
adc
rdtsc
cmp
pop
sbb
dec
fsubr
sbb
mov
sub
icebp
test
xor
aaa
scas
jne
gs
and
pop
inc
scas
outsl
nop
cmpsb
sub
pop
mov
xchg
mov
out
int3
sbb
std
pop
sbb
ja
lahf
sub
push
loopne
out
dec
and
and
sti
inc
in
dec
jg
jmp
xor
sbb
xchg
inc
out
add
movsl
out
aad
jl
sti
sub
cmp
mov
or
push
enter
dec
mov
js
cmp
insl
sbb
or
pusha
jo
rorb
mov
mov
and
int3
vxorps
xor
dec
mov
pop
hlt
ja
loopne
xchg
push
dec
lods
mov
push
mov
jo
pop
push
or
cmp
sarb
loope
mov
int3
and
fmul
daa
roll
push
repz
test
popa
ret
or
push
inc
dec
sbb
cld
mov
pop
test
inc
jle
pop
or
cmp
and
mov
xor
pop
cmp
in
xchg
mov
pop
push
or
aam
aas
dec
push
and
xlat
xor
leave
sub
push
dec
sti
addb
stc
jl
stc
lods
adc
stc
je
insb
cmc
int3
jg
std
pop
shll
jo
into
in
out
sbb
daa
test
and
pop
test
gs
test
sub
mov
xor
mov
add
std
cmp
mov
xchg
mov
repz
outsb
pop
cmp
push
add
aam
xor
mov
and
stos
in
jecxz
rol
shll
iret
or
push
pushf
push
repz
xchg
jge
fmull
ss
xchg
xor
imull
aas
and
aad
jl
sti
lock
mov
cmp
imul
call
ja
and
cmp
xchg
decl
jl
divb
movsb
push
cmp
and
out
in
mov
jmp
popl
insb
jle
jmp
mov
add
test
cmpsl
add
fstps
notb
rol
iret
pop
std
xor
and
sub
stos
xchg
push
xchg
aad
shrl
test
mov
inc
mov
icebp
dec
mov
mov
test
gs
jmp
inc
pop
fcompl
push
sbb
or
cmp
mov
in
push
stc
lods
cmp
jae
push
in
mov
xchg
shlb
pop
cmpb
dec
sahf
dec
nop
jl
xor
xchg
in
nop
xchg
mov
ja
shll
loop
mov
mov
cwtl
cwtl
cli
mov
push
jbe
setno
pop
xchg
push
std
pop
cli
test
or
repz
ret
dec
mov
int
std
xchg
aas
std
mov
popf
repz
xchg
in
insl
pusha
add
fcompl
dec
out
sbb
mov
jb
mov
leave
ljmp
or
fwait
aas
shlb
popf
das
add
iret
inc
aas
fnsave
gs
add
ja
int3
mov
inc
and
mov
xchg
lret
mov
fs
subb
inc
repnz
push
xorl
loopne
cld
adc
or
mov
inc
sahf
mov
dec
xchg
out
pop
cmp
mov
imul
mov
xchg
je
cmp
aas
mov
mov
jb
xchg
push
mov
test
add
cmp
fstpl
add
nop
test
pop
xchg
xchg
mov
jmp
dec
fmuls
or
lea
jo
and
cmp
pop
mov
aas
int3
in
aad
jmp
gs
test
add
jmp
out
sti
jle
mov
or
xchg
add
std
dec
xchg
pusha
js
pop
stos
mov
in
call
pop
scas
test
dec
leave
popa
inc
std
or
lods
adc
cmpsb
test
add
sbb
xchg
ss
mov
xor
dec
les
add
cmpsb
ja
out
nop
scas
adc
mov
aad
sbb
sbb
xchg
xchg
aam
fsubrl
dec
std
pop
lea
dec
mov
mov
addr16
cmp
test
mov
and
lods
xor
stc
add
lods
mov
sti
cmp
or
lods
sbb
jne
in
and
pushf
dec
mov
and
push
pop
movsb
ja
outsl
mov
push
sbb
xchg
mov
xchg
dec
jnp
arpl
jecxz,pt
movsb
std
add
push
popf
repz
cmc
pop
cmpsb
mov
hlt
stos
pushl
dec
vpor
sahf
jo
loopne
outsl
and
out
mov
xor
lret
mov
test
xchg
mov
into
xchg
out
jmp
stos
pop
xor
iret
mov
mov
ss
push
or
gs
ja
jle
outsl
adcb
test
stc
fsubs
mov
int3
cld
push
lods
and
inc
and
pop
ds
scas
out
gs
jno
out
dec
xlat
dec
sarl
iret
popa
std
xor
add
das
lcall
shlb
je
repz
out
jmp
mov
jbe
mov
push
cmpb
pop
cmp
sbb
out
jg
sbb
out
insb
testl
fldl
sbbb
outsl
jno
pop
stc
sub
xchg
std
nop
sbb
push
pop
subb
mov
jnp
arpl
faddp
mov
inc
xchg
and
pushf
or
dec
cwtl
jge
push
lock
aam
setg
push
iret
jns
mov
mov
xchg
mov
mov
xchg
cmp
sbb
push
in
fisubrs
sub
jge
cmp
inc
dec
das
dec
ds
mov
aas
adc
pop
cmp
stos
mov
mov
data16
mov
outsl
test
pop
xor
andb
inc
test
shl
xor
or
jl
out
sbb
cmp
pop
xchg
out
or
or
and
dec
pop
dec
inc
or
push
pop
mov
ja
pop
xorl
outsl
out
test
negb
out
pushf
outsl
out
movsb
rcrb
movsb
mov
lods
xchg
sub
loopne
into
jb
jle
xor
lock
pushf
out
movsb
lock
adc
add
loopne
and
add
loop
ret
sbb
mov
or
sbb
es
xor
and
sub
jge
and
shll
mov
mov
divb
inc
enter
adc
jge
dec
push
mov
ja
pushf
xchg
test
scas
loopne
popa
xor
ss
rcrb
dec
ds
push
out
jle
enter
jl
xchg
cmp
jg
sbb
jne
pop
pushf
dec
fiadds
pop
pop
xchg
adc
repnz
into
xchg
mov
rorl
aaa
adc
cmp
std
pusha
jmp
lods
xchg
add
cmp
push
mov
cmp
sbb
push
aam
dec
sbb
and
jle
xor
dec
adc
pop
sbb
fnstsw
movl
test
dec
cmp
inc
sbbb
mov
sub
xor
xchg
test
sarl
lahf
int
nop
and
fistps
inc
in
jae
xor
cmp
sti
cwtl
mov
sub
roll
mov
enter
rcrb
in
cmp
aas
jp
ds
or
jecxz
fs
test
inc
js
test
sub
rolb
rol
out
ja
dec
pop
xor
aas
lods
mov
std
lea
mov
mov
insb
lret
dec
aaa
ds
in
in
adc
xor
pop
mov
sub
pop
ret
and
cld
dec
or
push
sub
fsubrl
scas
std
xor
add
std
and
out
push
inc
mov
movsb
aam
cld
jg
negb
lret
sbb
clc
sbb
add
xlat
xor
mov
jnp
push
lods
and
add
mov
sahf
fwait
cmp
ds
mov
je
jb
push
xchg
mov
aas
in
mov
les
andb
mov
in
cmp
jecxz
push
dec
and
mov
sbb
push
ja
aad
call
and
outsl
mov
push
mov
std
js
xor
ficoms
xchg
mov
je
int
push
scas
xor
push
repz
bound
jne
std
adc
es
pop
test
mov
movl
sahf
jl
js
je
mov
lea
lret
mov
cmp
int3
fs
mov
jbe
rcrl
inc
sbb
in
addr16
jge
and
pusha
xor
mov
out
dec
loop
test
adc
movsb
and
mov
movsl
rcll
and
sub
roll
in
nop
xchg
mov
add
cmp
int
je
sub
dec
mov
idiv
test
les
mov
dec
inc
addps
mov
ds
out
fcom
xchg
jle
sarl
stc
dec
push
test
outsb
pop
pop
mov
jmp
daa
les
or
mov
sub
xchg
outsb
mov
inc
mov
pop
ds
or
in
fiaddl
push
jg
adc
scas
or
cld
and
sub
or
jne
leave
xor
add
cmpsl
aas
jle
push
or
scas
in
push
rol
out
jecxz
les
lahf
jmp
or
pop
incl
stc
and
cmpsl
mov
and
les
xchg
lret
inc
insl
mov
dec
and
int3
jg
enter
mov
dec
lock
or
aam
les
xchg
enter
push
xor
cmpsb
mov
push
mov
je
mov
push
push
mov
sub
insl
movsl
int
push
pop
sub
lahf
cld
ds
adc
mov
mov
jle
aas
out
xchg
test
and
sub
bnd
xchg
pusha
ret
inc
xchg
cmc
je
ja
gs
sbb
outsl
inc
jl
push
fs
cmc
inc
cmpsl
pusha
fwait
dec
out
in
jbe
pop
std
lahf
movsl
mov
nop
stos
or
in
adc
or
cs
mov
pop
loopne
aad
aam
push
xchg
fsubrs
cmp
shlb
cmpsb
cmp
or
mov
add
or
or
xor
jmp
or
movsl
mov
gs
cmp
jne
dec
xor
movsl
adc
cmp
out
movsl
insb
pop
cmp
sub
pop
out
in
nop
mov
jb
cld
sbb
mov
lds
leave
scas
lret
pop
out
xchg
out
lret
inc
or
mov
jl
fwait
push
inc
or
scas
or
or
sbb
cmp
sub
ds
jne
std
lret
and
pop
push
push
orl
gs
int3
sub
fnstsw
cmp
push
cmp
out
int3
es
add
dec
cwtl
push
pop
rcrb
cmc
jg
add
and
cmpsb
aad
sbb
movl
jmp
mov
inc
pop
aas
dec
sbb
jnp
movsl
xchg
jmp
xor
rol
shll
les
sti
fnstsw
int3
cmpl
stos
cs
sti
je
into
dec
mov
leave
pop
cpuid
xchg
jo
les
stos
mov
movsl
repnz
outsl
int
sti
movsb
ja
roll
movsb
shl
ror
jmp
or
or
and
adc
idivl
je
mov
cli
jne
jle
notb
stc
or
jne
nop
je
in
sbb
mov
push
push
and
pop
movsb
adc
repnz
jno
aaa
jmp
test
mov
inc
jl
dec
jmp
mov
dec
and
fstp
sub
std
fnstsw
lds
push
les
repnz
cmp
xor
and
inc
pop
lret
nop
shl
faddl
scas
insl
sub
fs
decl
xor
xchg
dec
xor
out
sbb
aas
fcompl
gs
fdivs
in
int3
repz
push
dec
scas
in
cmp
out
movsl
pop
mov
rolb
ja
xor
mov
cli
testb
inc
dec
aaa
shrl
sbb
xchg
inc
loope
inc
pop
stos
add
sbb
test
ja
outsl
dec
cmc
sbb
mov
mov
pusha
into
inc
jl
mov
cmp
and
roll
fimuls
in
aas
out
in
addr16
pop
or
cmp
call
dec
dec
sbb
test
dec
push
cmp
adc
pusha
arpl
sbb
adc
pop
jg
into
stc
call
cmpsb
test
cmpsb
and
xor
mov
mov
inc
es
dec
leave
fsubl
or
iret
outsb
int
sti
inc
dec
or
in
pop
bound
and
das
sub
jmp
test
fsubrl
add
out
lea
je
fs
cmovl
bound
out
inc
test
jne
pusha
dec
xor
xor
cmpsb
xchg
or
out
ds
iret
dec
pop
inc
icebp
js
je
jo
jmp
std
nop
insb
arpl
test
ds
ss
xchg
std
popa
pop
sbb
ficomps
xlat
push
aas
bnd
movsb
lahf
ds
push
mov
mov
cmp
dec
sub
sahf
test
in
xor
jmp
in
pop
stc
dec
cmp
sti
adc
addl
movsl
and
stos
pushl
test
ret
cmpb
aad
ret
or
iret
dec
jmp
push
mov
cmp
and
std
mov
sub
idivb
xchg
pop
xchg
adcb
cltd
xlat
test
mov
jg
addr16
pop
or
mov
jno
xor
dec
sbb
es
jmp
andl
jmp
xor
xchg
dec
fdivrl
clc
jno
cmpsl
inc
mov
adc
sbb
aas
pop
outsb
ja
in
gs
fistpll
jne
int3
ds
cmp
xlat
add
test
push
push
enter
cmp
ds
sbb
mov
outsl
fwait
and
mov
mov
psubsw
or
sbb
mov
insl
inc
test
ja
inc
fisubrs
dec
and
rolb
mov
mov
or
sbb
sbb
ds
shrb
cmp
aas
nop
sub
stos
fs
mov
fdiv
cmp
into
jle
testb
xlat
outsl
dec
gs
es
xchg
repz
lahf
sub
push
popf
xchg
jne
leave
insb
popa
mov
push
dec
gs
imull
pop
int
ljmp
xor
stc
inc
xchg
inc
mov
inc
push
mov
nop
ret
loop
mov
xor
mov
xor
scas
jno
das
and
lods
in
xlat
iret
and
clc
cmp
xchg
jge
addr16
dec
ljmp
ds
fisttpll
hlt
cs
push
mov
jge
push
cmp
lret
xlat
inc
mov
dec
mov
lahf
and
xchg
repz
and
inc
add
and
ja
or
dec
aaa
aas
dec
mov
jmp
cmp
in
mov
idivb
fdivl
lds
in
pop
jne
inc
es
in
xchg
adc
fnsave
test
hlt
hlt
push
in
add
xor
dec
xchg
lea
mov
pop
test
test
stos
mov
movsl
out
jb
push
sub
ja
loop
out
inc
add
mov
xchg
jne
popa
iret
fs
push
dec
cli
ss
mov
test
push
xor
mov
pop
mov
es
dec
push
pop
loopne
and
jle
data16
dec
xor
ds
jnp
jbe
test
cs
cli
insl
dec
mov
add
leave
aaa
lret
pop
jmp
xor
std
dec
mov
sub
ret
jge
inc
testb
fs
pop
mov
test
aaa
fiaddl
ljmp
jl
std
movsl
test
dec
addr16
push
sub
adc
out
cmpsl
push
mov
out
in
stc
pop
cmp
jge
dec
out
in
jp
out
shrb
iret
sbb
in
ja
int
std
jo
test
and
lods
or
insl
out
jmp
push
dec
xchg
and
pop
cwtl
and
cmp
inc
ds
aas
add
repnz
aaa
mov
xor
lock
mov
lret
inc
hlt
stc
push
jg
ja
enter
fmull
dec
leave
icebp
ljmp
ss
push
movb
xorb
jbe
jne
stc
mov
in
dec
xor
pop
inc
mov
ret
mov
lret
inc
std
jae
js
es
push
mov
sub
data16
in
std
adc
idiv
mov
les
xor
xchg
adc
int
mov
adc
or
iret
and
mov
repz
xor
or
cmp
pushl
in
pop
rcr
stos
std
xchg
xchg
stc
faddp
adc
xchg
dec
mov
sub
push
decl
ja
hlt
iret
rcrl
test
xor
mov
pop
xchg
cmp
sbb
pop
in
push
fisttpll
dec
mov
fcoml
lds
loope
dec
in
loop
loop
cmp
shll
push
test
jne
mov
xor
push
jg
pop
mov
je
in
ja
std
std
insb
rol
mov
out
das
and
and
sbb
cmp
push
sbb
cmp
and
outsl
push
test
ret
mov
addr16
loopne
dec
push
pop
mov
inc
out
xchg
aas
xor
add
in
ja
jecxz
cwtl
rcr
cmpsb
test
xor
fs
dec
movsb
sarl
pop
xchg
pop
cmp
gs
push
xchg
int
add
mov
adcb
bnd
jbe
in
xor
cli
jge
imul
gs
push
shrb
and
ret
or
mov
cli
lahf
or
push
cmp
out
imul
fildl
les
testl
test
inc
mov
cmp
movsl
cmp
addr16
sbb
pop
aas
bound
ljmp
cmp
js
sub
sbb
js
xchg
test
jns
repnz
add
dec
jne
fisttps
cmpsb
fdivrl
cmp
xor
cmp
and
pop
or
jge
dec
into
mov
and
and
idivl
outsb
ret
mov
xor
in
sbbb
add
nop
shr
mov
push
lret
inc
mov
jg
xor
push
popf
xor
into
mov
out
jnp
fiadds
cmp
in
push
aas
mov
mov
insb
pop
jecxz
cmp
lods
dec
sbb
es
cmpsl
clc
mov
movsl
push
repz
inc
enter
inc
mov
xchg
jmp
jbe
lods
adc
add
test
xor
mov
out
and
inc
mov
push
sti
inc
cltd
or
fs
movsb
jns
pop
dec
mov
pop
or
hlt
mov
mov
inc
out
cmp
mov
imul
test
mov
movsl
rcll
in
fsubl
push
inc
adc
sub
sarb
mov
popa
lea
int
mov
or
sbb
js
sub
push
cmpsb
je
loop
mov
mov
push
mov
repz
roll
sbb
cs
in
sahf
stc
cmp
xchg
std
push
decl
in
rcll
out
sbb
push
rorb
cmp
adc
aam
dec
ja
mov
dec
int
in
lret
sbb
or
and
in
sbb
sbb
add
sbbb
aas
aaa
bound
pop
clc
xchg
gs
jle
add
lods
int
repz
pop
xchg
pop
pop
push
ror
mov
sbb
xor
mov
push
push
jmp
pop
jmp
push
add
cmp
and
idivl
in
dec
mov
test
aad
jne
xor
xor
mov
inc
mov
je
and
cmc
rcll
push
fisubl
and
adc
mov
add
mov
cld
lret
sub
aaa
cltd
inc
adc
and
int3
lea
int
stos
outsl
mov
in
mov
add
pop
in
repz
ja
iret
cmp
in
rcl
mov
les
sub
pop
mov
fdivl
pop
jg
fdivs
out
call
out
mov
lds
ds
shlb
ss
stc
adc
jl
imulb
int
jmp
inc
dec
mov
pop
data16
pop
xor
pop
mov
push
lds
sub
aaa
xchg
cmp
sbb
xor
xchg
push
or
inc
cmp
shll
aaa
push
add
test
inc
adc
subl
pop
xor
lods
fmul
sbb
mov
daa
xchg
ds
test
aas
aam
cld
pop
cld
test
push
in
jl
lahf
dec
popa
imul
pop
dec
dec
dec
fbstp
es
jae
add
rorb
cmc
fdiv
sbb
enter
pop
adc
pop
xchg
ficomps
or
aam
movsl
cmp
mov
add
lock
inc
inc
out
cmp
jl
loop
ret
sahf
fdiv
sub
sbb
js
rorb
mov
jmp
mov
sbb
jne
popa
or
es
pushf
sbb
xchg
mov
dec
jb
scas
jle
imulb
test
pop
aaa
or
push
lods
unpckhps
add
and
in
or
je
fs
push
notl
xor
and
adc
add
mov
popa
mov
or
and
xchg
aaa
fistps
pop
or
repz
std
inc
movsl
fmull
mov
inc
jge
popa
out
and
ja
std
movsl
cmp
and
popa
sub
lret
dec
aad
dec
repz
mov
stos
sbbl
push
outsl
shll
pop
stos
jns
fisubrs
gs
subl
mov
mov
sub
or
imul
or
xor
jne
cwtl
into
or
cli
data16
pop
out
mov
insb
decb
pop
sbb
jl
sbb
xchg
dec
sbb
or
out
sbb
lds
mov
xchg
pop
push
fdivr
xchg
outsl
jbe
pop
ja
xchg
std
push
mov
xchg
xchg
xchg
dec
nop
cmc
dec
pop
std
enter
pop
mov
sbb
lea
add
hlt
mov
insb
pop
int3
push
push
es
stos
pop
jb
cs
pop
pop
pop
xchg
pop
jle
push
outsl
outsb
or
jecxz
outsl
outsb
jb
jbe
xor
mov
xlat
sub
dec
in
in
lret
sub
push
jmpw
sub
mov
cwtl
sbb
pop
stos
sbb
cld
xchg
or
and
aas
testb
pop
popa
cwtl
dec
stc
jmp
cld
sbb
push
iret
push
aad
sti
loop
addr16
pop
mov
mov
mov
and
cwtl
dec
aas
incb
xor
inc
aas
or
and
pusha
xrelease
movsl
cltd
push
sub
mov
xchg
js
cmp
movl
sbb
jb
xlat
dec
mov
fldenv
xor
sbb
punpcklbw
add
push
push
std
add
mov
loop
ret
and
xchg
dec
nop
xchg
xor
out
add
ljmp
and
scas
xchg
pop
pushf
cmp
pop
mov
inc
popf
je
fs
add
test
aas
xor
push
not
repnz
jg
dec
ret
movl
test
xor
aas
or
mov
mov
dec
mov
add
insb
call
test
xor
sbb
xor
in
scas
stc
insl
fs
or
mov
addr16
and
mov
ja
std
or
sbb
xchg
inc
in
mov
loop
ret
mov
adc
hlt
mov
sbb
cmp
addr16
sub
fs
pusha
add
pop
stos
fists
push
or
add
inc
int
cmp
outsl
test
inc
push
mov
adc
insl
adc
aad
xchg
xchg
jmp
jmp
or
popf
sbb
cs
pop
jp
sub
sbb
stos
fdivrl
sub
stos
jle
cwtl
movsw
adc
pusha
sbbl
cld
pop
cmpsb
inc
push
ljmp
ss
mov
sbb
sub
xor
xchg
jne
gs
lahf
aad
sbb
dec
std
sti
xchg
xor
sub
ret
ficoms
and
dec
add
mov
leave
es
or
out
aas
push
mov
pop
adc
sub
fdivl
stos
scas
sub
repz
ficoms
in
movsl
sub
lods
sub
dec
inc
lods
pushf
and
push
adc
mov
inc
push
mov
xchg
mov
push
lret
cs
mov
hlt
jne
popa
cmp
fcompl
sbb
xchg
fs
mov
sub
test
mov
cmp
rorl
movsb
addr16
in
xor
std
and
movsb
xchg
dec
sbb
ljmp
lahf
or
arpl
jmp
jge
outsl
insb
in
faddp
in
outsb
jne
stos
andb
pop
mov
fidivl
lods
sbb
push
out
adc
pusha
subb
iret
ljmp
leave
pop
out
and
das
call
out
and
push
popf
test
sub
imul
push
movb
js
and
in
cmc
and
sub
les
mov
and
jge
mov
pop
movsb
mov
push
loop
pop
or
outsl
add
xlat
pop
stc
sbb
xor
jb
dec
mov
addr16
and
data16
jbe
sub
mov
nop
rcl
je
sbb
and
dec
mov
flds
xor
jle
xor
xchg
jne
mov
add
int3
jne
dec
dec
add
enter
or
cld
push
xor
xchg
add
aad
push
std
sar
std
loopne
sub
mov
lods
or
stc
sub
in
enter
pop
sbb
jl
xor
sub
or
sub
fnstenv
fs
mov
ret
je
adc
fistpll
push
idiv
data16
push
or
sbb
dec
and
jbe
mov
aas
xchg
dec
mov
icebp
pop
or
rcr
test
pop
sbb
cmp
das
sbb
and
mov
push
or
xor
mov
repz
jo
movl
nop
dec
sbb
inc
add
mov
sbb
std
jb
add
jecxz
add
push
js
mov
cmpsb
inc
mov
mov
gs
pop
gs
pop
mov
js
or
mov
imul
leave
imul
lret
or
push
fisttps
or
popf
jle
out
pop
add
inc
out
jno
mov
dec
dec
and
cmp
sbb
ss
cmp
cld
mov
sahf
adc
mov
add
adc
out
sbb
mov
adc
xchg
xchg
adc
xchg
push
sub
outsl
and
pop
push
lods
jge
sbb
mov
mov
xor
xor
xchg
es
jecxz
add
imul
sbbl
cmp
add
insb
and
rcrb
xchg
scas
pushf
outsb
stos
enter
xor
loop
insb
xor
mov
jb
pop
mov
jae
das
and
and
xorb
xchg
es
xchg
seto
es
mov
pop
mov
jle
cmp
aad
xchg
push
outsl
sbb
ds
push
dec
jae
int3
push
mov
in
mov
iret
iret
xor
push
rclb
pop
dec
shrl
mov
loopne
adc
out
adc
test
jb
insb
popf
xchg
pop
sub
fiaddl
daa
inc
cmp
call
xor
popf
xchg
sahf
or
mov
lret
ljmp
push
insl
xor
pop
test
shlb
sbb
dec
cli
insb
or
daa
cmp
test
test
mov
int
and
add
repnz
lahf
add
lret
pop
and
push
cmp
lahf
or
repz
add
pop
sbb
data16
xor
and
sti
test
ret
movsl
mov
jno
or
je
cld
data16
push
js
xor
sbb
in
adc
mov
mov
sub
push
insb
cmpsl
nop
pop
and
sub
aaa
dec
insb
stos
iret
mov
repz
inc
mov
aaa
lods
cmp
xchg
roll
inc
repz
dec
mov
xor
add
rcrl
dec
jae
fimuls
jbe
mov
iret
hlt
pop
mov
jmp
fsubs
out
test
fmul
sbb
fbld
in
ja
xlat
pop
jmp
jge
out
and
xchg
loope
bound
sub
mov
xchg
sbb
aam
movsb
push
push
pop
pushf
pop
fisttps
or
out
sbb
mov
sbb
gs
xor
mov
and
push
ret
aad
and
scas
loopne
mov
inc
or
push
mov
or
popa
std
je
sub
lret
cli
in
mov
xchg
sbb
cmp
push
movsl
movsl
fildll
adc
daa
data16
pusha
dec
inc
out
xchg
in
jno
inc
inc
push
adc
xchg
data16
add
pop
sbb
lcall
inc
sub
test
xor
imull
inc
das
pop
aam
or
fsubs
aas
push
int
lahf
or
or
stos
inc
dec
mov
jg
jae
adc
jle
xchg
out
push
insl
push
in
pusha
je
pop
in
mov
push
iret
inc
decl
gs
sbb
std
test
mov
and
into
std
ja
sbb
dec
mov
sti
mov
sub
adc
arpl
mov
data16
mov
push
lret
mov
jne
std
and
in
jmp
inc
sbb
nop
cmp
pop
sti
mov
or
outsl
sub
enter
dec
pop
and
aad
sti
pop
daa
lea
pop
jne
pop
ds
jno
addr16
clc
xchg
fildl
push
fs
mov
mov
mov
pusha
sub
stos
shlb
test
test
into
in
push
push
aad
sti
jnp
lahf
movsl
test
lret
xor
push
mov
rcrl
les
mov
aas
in
outsl
aaa
movsb
gs
test
test
pop
enter
loop
pop
std
adc
sub
movsl
int
sub
aam
jbe
lds
test
insl
rcl
decl
add
insl
jmp
xchg
push
or
sbb
push
fstpl
js
and
mov
lock
and
and
dec
or
hlt
testl
or
or
or
test
xchg
dec
nop
inc
mov
mov
jmp
jns
xor
clc
mov
sti
cmc
decb
xchg
xchg
dec
shll
fs
dec
mov
sub
cmp
ljmp
or
and
cmp
iret
test
ja
pop
out
cmc
pusha
pop
sbb
repz
addr16
inc
push
in
dec
pop
sbb
out
push
jg,pn
in
jl
aas
dec
pop
push
push
stc
scas
sbb
cmp
inc
loop
mov
cmp
mov
push
sbb
pop
fcompl
shlb
xchg
add
enter
mov
idivl
enter
inc
insl
inc
stc
cmp
or
push
jge
mov
fnstenv
cmc
dec
sbb
addr16
dec
out
lret
adc
jle
test
xchg
push
test
add
test
gs
ja
int3
mov
aaa
cmp
push
fdivl
jmp
outsb
jmp
or
mov
sub
push
mov
xchg
mov
in
insb
jbe
aam
inc
xor
sub
into
mov
pop
mov
std
mov
int3
xchg
jbe
xor
push
hlt
push
xor
insl
ja
aad
out
inc
movb
dec
iret
inc
mov
fwait
aad
std
push
adc
xchg
shll
mov
movsl
xchg
sbb
jg
xchg
cmp
or
sub
movsb
xchg
inc
je
dec
and
add
lods
mov
xor
mov
and
mov
xchg
outsl
mov
xor
test
xor
jae
and
jle
test
sbb
and
cld
in
int3
inc
data16
or
sub
stos
push
mov
shlb
scas
fcmove
fs
mov
cmp
divb
mov
aad
aaa
lock
push
gs
and
dec
lods
lods
fcoml
mov
adc
pop
adc
push
push
aam
pop
jle
and
test
das
fsubrs
xor
ja
in
or
sbb
shrl
hlt
jmp
iret
pop
mov
ja
lds
or
cmp
or
fucomp
xor
mov
inc
sbb
cmp
dec
mov
popa
subl
fcompl
or
cmpsl
imul
pop
or
or
sbb
add
or
xchg
repz
ret
pop
mov
fisttpll
decl
xchg
and
xchg
ds
xchg
mov
ljmp
dec
fmulp
stos
lret
cmp
push
and
push
stc
in
or
cmpsl
lahf
push
cld
xor
ret
cmpsl
cwtl
jge
mov
pop
test
int
out
mov
xor
jge
xor
jb
sbb
aas
dec
fisttpl
or
xchg
mov
std
stc
xchg
pop
jo
insb
dec
or
mov
inc
sti
popa
jecxz
xchg
nop
push
ret
xchg
out
sbb
add
ja
adc
dec
mov
xor
test
cmp
xor
xor
pop
jle
test
imul
push
inc
pop
sbb
sbb
aas
loop
fmull
pushf
and
sbb
jge
dec
sub
add
cltd
mov
lea
push
inc
and
sub
int3
faddl
aad
mov
inc
enter
pop
cmpl
mov
or
sbb
out
dec
out
lret
ds
xchg
out
sbb
mov
mov
ja
jno
pop
xchg
out
nop
and
jge
dec
aas
mov
xor
pop
push
mov
xchg
or
pop
dec
jne
cmp
sbb
ds
xchg
sbb
lods
dec
push
std
in
test
hlt
dec
addr16
and
push
loope
mov
or
add
dec
out
and
cmpsl
jmp
xchg
push
loop
scas
shlb
sbb
mov
fs
and
add
sub
stos
mov
push
xchg
mov
cli
pop
out
cmp
into
and
dec
xchg
das
nop
pop
les
js
cmc
push
movsl
and
outsl
fdivr
and
lcall
aas
inc
sbb
and
mov
shll
aas
mov
xchg
mov
shlb
pop
enter
into
daa
pop
and
cmpsb
and
rclb
test
jle
fadd
ds
add
inc
mov
push
add
arpl
mov
data16
dec
jge
icebp
cmp
sahf
dec
mov
push
cs
jne
adc
mov
sub
stos
ja
std
push
xchg
cmp
xchg
call
addr16
daa
aas
push
xchg
and
mov
xchg
dec
nop
ret
js
cmp
inc
pop
outsl
mov
push
aad
ss
mov
pop
pop
pop
gs
xlat
gs
ret
ret
lahf
aas
push
mov
pop
push
mov
cmp
cwtl
movsl
adc
or
std
pop
and
scas
out
dec
aas
add
lock
mov
dec
call
or
xchg
or
xor
lds
aas
push
mov
mov
mov
xor
repz
add
int
or
dec
mov
mov
fdivl
ds
jno
and
dec
mov
or
pushl
mov
jp
mov
test
xchg
std
or
mov
or
mov
mov
lcall
pusha
insl
mov
xchg
ffree
loopne,pt
inc
movsl
aad
or
leave
xchg
loopne
iret
and
mov
and
or
data16
or
aaa
lds
ds
pop
push
int
cmp
or
pop
lcall
in
mov
xchg
les
ret
jnp
mov
das
jg
dec
outsb
cmp
mov
xor
aas
lods
mov
iret
jg
or
jecxz
mov
std
mov
push
mov
icebp
outsb
sbb
les
aaa
adc
mov
ret
or
mov
sahf
ss
aas
idiv
gs
lock
pop
push
or
jno
int
movsl
stc
adc
int3
test
lret
repz
push
add
mov
inc
into
insb
pop
and
jnp
xchg
or
jmp
xchg
popf
jno
push
xor
push
pushf
in
sub
test
mov
sbb
jne
xchg
fsubrl
mov
fimuls
mov
daa
pusha
push
and
sti
adc
mov
jl
push
xchg
iret
shll
xchg
add
dec
push
sbb
pop
iret
mov
sub
das
movsl
dec
mov
sbb
outsb
dec
mov
cli
xchg
jmp
pop
notl
daa
mov
out
fadd
or
call
sub
mov
data16
lahf
and
pop
in
les
push
cmp
inc
lds
xor
loope
xor
and
gs
into
or
in
push
pop
dec
fdivs
faddl
sarl
xlat
mov
aaa
je
in
rcll
mull
in
loopne
sub
mov
aaa
je
mov
sbb
hlt
xor
fdivr
jle
in
or
or
xor
aas
sahf
add
push
aad
jmp
mov
iret
sub
jne
in
cmc
add
xor
pop
gs
test
addr16
or
out
and
out
adc
add
push
imul
pop
mov
ja
jns
shl
mov
lret
sub
mov
mov
stc
filds
lea
test
data16
aas
inc
inc
testl
jmp
push
int
in
xorl
sahf
or
dec
and
sbb
ret
les
clc
xchg
ds
add
ds
mov
adc
roll
jmp
and
addb
sbb
mov
or
push
test
sub
out
daa
lret
inc
mov
pop
ds
ret
int
pop
sbb
out
cmp
test
in
pop
shll
push
lods
push
lcall
mov
cltd
cmpsb
test
mov
int3
dec
sbb
je
push
shll
sbb
push
loope
or
gs
or
movsb
dec
mov
pusha
or
sbb
scas
push
pop
dec
cmp
and
or
aam
mov
push
push
shlb
lea
sbb
test
and
fnstenv
push
cltd
test
add
testl
or
nop
mov
popf
xor
mov
push
adc
xor
movsb
sbb
cmpsb
cmpsl
ret
popa
or
xchg
lahf
push
sub
fildll
push
mov
or
and
sysenter
insl
adc
jb
adc
mov
sub
ljmp
and
cwtl
add
sbb
cmpsb
jae
iret
shll
sbb
dec
imul
push
aaa
es
or
dec
cltd
lods
roll
xlat
addr16
sbb
sub
test
xor
into
xor
sbb
in
testl
jg
push
dec
popa
lret
inc
sbb
dec
fs
jle
or
test
aas
push
sub
push
popa
pop
in
data16
adc
xor
in
aaa
and
int3
and
lea
rol
dec
loop
mov
push
dec
xlat
int3
xor
out
and
dec
leave
jge
xchg
sbb
or
add
nop
lods
shlb
inc
jge
xorl
inc
or
sub
out
mov
cli
jmp
pushf
hlt
mov
not
xchg
in
inc
pop
sbb
movsl
les
adc
or
mov
dec
xor
aaa
pop
fbld
int
jne
clc
or
and
test
jmp
push
jle
xor
sbb
ret
pop
es
jecxz
inc
lods
bound
fdivrs
lahf
leave
sbb
iret
mov
pushl
movsl
test
ret
cmpsl
outsb
dec
test
push
mov
inc
fbld
mov
jne
sti
pushf
mov
pmaxsw
and
dec
sbb
and
clc
push
xor
sbbl
andnps
jmp
and
mov
aam
push
outsb
jbe
imul
jmp
and
xchg
sbb
sbb
out
int3
iret
ds
push
in
dec
lret
insb
jmp
pusha
hlt
jg
cmp
nop
addr16
fs
insl
scas
ss
mov
nop
push
dec
es
xchg
jmp
and
imulb
stc
jo
lea
mov
inc
ja
popa
out
pop
es
push
divb
das
mov
cmp
xchg
mov
push
ja
xor
pop
jmp
rcrl
dec
mov
int3
cs
and
or
lret
jecxz
std
int3
dec
ds
push
inc
imul
mov
lahf
and
mov
adc
inc
xor
decb
out
or
aas
aad
gs
and
in
insb
shr
std
mov
test
popa
xchg
push
xchg
lds
dec
ds
ret
mov
sahf
popa
push
popa
inc
mov
pop
cmp
popa
mov
outsl
inc
stc
inc
xchg
std
nop
or
inc
mov
insl
inc
xchg
dec
std
dec
test
dec
sbb
jmp
mov
jb
aaa
xchg
cwtl
sbb
pop
loopne
dec
pop
mov
sbb
pop
cmp
fidivrl
mov
stc
mov
inc
mov
pop
jmp
cmpsl
and
pusha
insl
and
push
adc
pop
pop
loop
mov
shlb
jbe
jmp
xor
fs
push
push
mov
sbb
insl
outsl
or
rcrb
mov
fs
insb
mov
movsl
dec
mov
push
cmp
inc
and
clc
mov
fmuls
xchg
pop
sbb
das
fdivrs
add
es
dec
aas
push
loope
popf
jl
or
cmpsl
pop
popa
pop
daa
pushl
adc
inc
outsb
mov
push
push
fcomps
aam
cmp
mov
ja
jb
into
rorb
push
into
and
test
stc
mov
mov
ja
in
ss
and
popa
je
push
out
inc
sbb
xchg
iret
pop
dec
in
movl
out
sbb
cmp
jle,pt
lock
test
rcl
es
fnstsw
in
pushf
in
jp
sub
gs
mov
pop
ds
add
jmp
outsl
mov
in
imul
jmp
xchg
sbb
sub
dec
xor
or
xchg
dec
dec
inc
xor
mov
jo
clc
mov
rorb
sbb
cmc
mov
jl
lcall
lods
pop
mov
jle
sub
or
push
add
add
push
arpl
mov
out
mov
and
fs
sbb
ret
pop
or
sbb
and
cwtl
test
xor
sti
add
mov
loop
dec
sbb
out
or
iret
xor
idivb
inc
in
xor
and
mov
rcrb
outsb
in
movsb
jmp
mov
dec
testb
mov
cli
cld
cmpsb
movsb
and
dec
test
ja
outsl
sub
add
push
mov
dec
xor
push
mov
xchg
mov
icebp
dec
inc
fbld
mov
sbb
int3
imul
aam
roll
xchg
pop
cmp
add
mull
push
sbb
mov
cmpsl
mov
inc
test
sub
push
movsl
out
jb
out
ja
loopne
int
mov
sbb
movsb
call
or
dec
dec
and
push
popa
and
sbb
outsb
mov
std
ds
fisttps
and
push
add
sbb
in
mov
frstor
jle
and
mov
movb
test
test
fwait
cmp
gs
in
pop
add
addr16
ds
jnp
cmp
jle
scas
jmp
ret
jbe
idivl
and
jmp
jmp
sbb
sbb
inc
cmc
xor
leave
push
std
out
ds
cmp
mov
xchg
add
inc
pushf
xchg
je
xchg
in
pop
hlt
mov
xchg
lcall
test
and
adc
cmp
jns
and
jae
add
dec
ds
std
push
movsb
lods
sahf
xchg
ljmp
es
inc
jmp
push
mov
mov
xor
popf
sub
inc
jne
std
je
or
ds
add
dec
int3
sarb
std
push
stc
and
jg
and
pop
sbb
adc
mov
arpl
iret
jns
adc
mov
fildll
or
or
inc
jg
idiv
nop
test
mov
movsl
add
adc
iret
repnz
cmp
outsb
addr16
and
imul
mov
jmp
in
cmpsl
and
pushf
sub
enter
imul
ds
int3
jmp
pusha
push
mov
dec
in
shrl
in
xlat
xchg
iret
and
lcall
out
jne
shll
cmc
mov
dec
std
push
sub
pop
test
pop
add
and
and
fmul
aas
aas
jae
jne
sti
aas
aaa
inc
into
lods
shl
std
rclb
imul
outsl
outsl
fmuls
sub
mov
sahf
mov
in
add
ds
mov
andb
sbb
cld
ds
push
sbb
or
scas
sub
push
roll
call
fmul
add
out
sbb
movsl
test
push
ss
rcrl
mov
orb
cmpsb
push
jmp
adc
aaa
xchg
in
mov
outsb
and
testl
mov
cmc
lods
sub
inc
fistpll
xchg
call
mov
lea
sbb
and
out
jne
xchg
ljmp
stos
imul
ja
int
movsl
push
xchg
inc
roll
cmp
sbbb
xchg
pop
sbb
scas
adc
mov
arpl
mov
aas
pop
lock
cmpsl
or
xchg
jg
test
std
insb
push
pop
jae,pt
aaa
xchg
repz
aas
hlt
nop
stos
pop
sub
jmp
inc
dec
sub
push
repz
daa
fmull
dec
jo
lret
mov
out
ja
and
mov
andb
daa
xor
add
xor
pop
push
ja
rorl
sahf
add
or
jnp
xor
cld
add
ja
stc
cwtl
fs
ja
pop
push
adc
inc
pop
mov
push
push
dec
lret
sub
mov
out
and
xor
in
pop
inc
mov
cs
dec
push
aaa
dec
fldt
nop
gs
rorb
and
cmp
xor
and
adcb
loop
popfw
out
out
sbb
jbe
in
ret
or
data16
push
in
ret
fs
in
int3
cmc
sete
mul
cmpsl
jne
pop
inc
lods
pushl
mov
mov
dec
mov
mov
and
xchg
dec
popa
mov
jne
std
xchg
cmp
lcall
cmovb
into
mov
pop
adc
pop
xchg
mov
dec
cwtl
sub
mov
add
std
test
ffree
scas
xchg
mov
les
scas
enter
pop
inc
pushf
or
pop
test
sbb
ds
shlb
movsb
movsl
pop
cmp
in
xchg
pop
movsl
mov
sbb
frstor
test
sub
xor
movb
in
lahf
pusha
xor
jo
cmp
dec
outsl
dec
clc
sti
loopne
jl
out
dec
jmp
ljmp
cmp
les
fwait
pmullw
mov
xchg
jno
mov
pop
xchg
jg
xchg
into
inc
iret
jp
mov
fwait
or
add
jg
ja
sbb
test
js
inc
stc
jnp
inc
nop
loope
sbb
adc
or
int3
fdivrs
das
jnp
movsl
mov
or
mov
inc
mov
sub
enter
sbb
iret
divl
gs
repnz
jns
iret
stos
repz
pop
stc
pop
dec
ja
daa
xlat
xchg
in
inc
xchg
testb
mov
jecxz
outsl
outsl
fidivs
sub
dec
pushf
mov
lea
mov
pop
test
movsl
sbb
xchg
mov
and
popf
std
mov
aas
imul
or
je,pt
jne
int
stc
inc
mov
loopne
into
nop
clc
aaa
sahf
andl
rolb
push
adcb
push
subb
sub
xchg
mov
popa
pop
or
loopne
subl
testl
pushf
mov
jnp
pop
cmp
stc
imul
xchg
push
sti
daa
mov
pop
sbb
subb
sub
ljmp
fmuls
out
pop
pushf
pop
pop
mov
xor
fwait
daa
das
sbb
and
insb
lods
push
fcoml
insb
jmp
in
movsb
mov
mov
cwtl
jmp
daa
cld
mov
jg
je
sub
and
push
lods
fidivrs
mov
gs
xor
sbb
dec
sub
xchg
sub
pop
or
repz
dec
ja
outsl
add
pop
int3
sbb
cld
iret
lock
outsl
repnz
movsb
push
sbb
cmp
add
ret
pop
sbb
mov
mov
fnsave
test
push
xchg
out
xchg
inc
mov
xchg
lcall
mov
push
mov
js
mov
int3
jmp
subb
and
pop
lahf
lret
sub
fsts
pop
dec
mov
inc
aaa
inc
mov
dec
mov
dec
dec
lcall
testl
lcall
pop
js,pt
cmp
push
jle
push
std
jmp
mov
scas
jge
xlat
and
or
sbb
sbb
sbb
ljmp
jl
mov
cmp
sub
jl
or
cld
aas
sbb
stos
pop
ret
test
xor
jecxz
jmp
xchg
xchg
ret
loop
dec
sbb
mov
adc
adc
mov
xchg
aam
out
pusha
and
nop
loopne
cmp
xchg
repz
lds
add
out
lahf
jmp
mov
xchg
and
scas
repnz
jge
push
and
mov
and
mov
xchg
in
inc
jl
cmpsl
gs
cmp
push
ljmp
mov
into
sub
jmp
and
adc
insl
stc
jle
pop
dec
jge
push
sub
fs
and
mov
dec
push
jle
cmc
lds
jbe
jne
push
addr16
bound
xor
sahf
push
ret
inc
xchg
jge
imul
cs
decl
scas
outsl
and
sub
in
sbb
aas
or
into
fs
sub
out
jge
hlt
in
sub
mov
push
inc
mov
out
add
negb
dec
ds
mov
aad
xorl
cmc
mov
xor
in
shr
outsb
mov
aas
cld
mov
pop
sbb
ds
in
ret
xchg
or
and
test
xchg
xor
jle
xchg
mov
pushf
mov
hlt
filds
xor
inc
aas
cmc
es
pop
pop
int3
in
and
imul
mov
call
test
jne
int3
push
mov
xor
inc
lods
aas
dec
or
pop
inc
sbb
xchg
mov
adc
lods
icebp
jl
stc
mov
insb
xor
sub
fcoml
pop
roll
ljmp
xor
adcb
dec
mov
xor
hlt
movsl
test
xchg
stos
pop
mov
in
xor
sbb
inc
adc
pop
push
mov
ja
loop
lods
leave
ret
into
cli
sahf
enter
or
aaa
outsl
mov
dec
and
test
aas
ffree
aam
int
int
sti
imul
dec
pop
loop
orb
mov
test
pushf
xor
xlat
enter
adc
mov
enter
push
and
in
and
adc
add
arpl
inc
xchg
mov
xchg
ret
mov
mov
out
push
sub
add
sub
jmp
out
test
sbb
insl
pushf
adc
fistpll
or
sti
jne
xchg
loope
scas
stc
jl
jbe
ds
inc
jmp
loop
cmp
out
pushf
out
sbb
cmp
xor
nop
or
aad
jl
adc
xchg
add
mov
jmp
test
xchg
push
imul
movsl
pop
test
add
push
sbb
xchg
mov
jmp
lret
ret
ret
xor
loopne
cmp
pop
and
and
mov
or
mov
or
roll
mov
out
loop
cmc
push
cmpsb
jnp
xlat
xchg
filds
aas
dec
jg
lds
cmp
or
lods
fsubrp
xor
jns
insl
xrelease
fmuls
or
aam
cmpsb
ds
subb
test
aaa
inc
lcall
inc
xchg
adc
pushf
sbb
in
sbb
and
addr16
int3
push
cmp
aam
std
pop
cmp
aam
sbb
inc
push
jmp
iret
or
test
sbb
xchg
inc
push
nop
mov
and
sbb
mov
xchg
mov
sbb
imulb
dec
mov
movsb
icebp
xchg
aam
hlt
aaa
popf
adc
je
popa
xor
es
inc
outsb
sbb
mov
ljmp
std
fwait
outsl
mov
out
adc
and
pop
adc
iret
jae
aaa
add
mov
out
addr16
xchg
es
add
pop
sbb
push
je
sbb
mov
scas
out
dec
xor
dec
shll
pop
cmpsb
cmpsb
aam
stc
je
mov
jo
mov
xor
rclb
and
hlt
cmpsb
xchg
sbb
push
dec
pop
sbb
cmp
inc
pop
inc
xchg
mov
or
mov
or
scas
mov
mov
jmp
ds
imulb
test
xor
push
inc
outsb
lahf
lods
pop
std
sbb
pop
push
mov
shlb
cwtl
push
or
mov
sti
inc
aas
fnstenv
lea
push
movb
jmp
mov
roll
mov
pusha
cwtl
mov
out
pop
xlat
mov
addr16
push
or
dec
mov
es
mov
repz
in
iret
loopne
enter
outsb
sbb
xchg
lahf
or
inc
lods
add
mov
push
notl
push
fadds
xchg
addr16
push
jb
fstl
ds
test
inc
in
cmpsl
bound
push
fistps
mov
xor
out
xchg
loopne
int
out
inc
aas
push
xlat
xchg
test
xchg
in
in
pop
xor
sbb
in
lahf
xor
push
aaa
out
cmpsb
sbb
aad
mov
insb
in
in
and
xchg
cwtl
mov
out
and
inc
dec
arpl
and
mov
sahf
sbb
xchg
add
sbb
xchg
push
sbbb
ss
push
clc
cs
test
fdivl
mov
mov
jbe
es
add
pop
ja
mov
xchg
pop
mov
jmp
gs
pop
jl
out
jmp
fsubl
and
push
in
decl
inc
sbb
out
pop
xor
ret
push
mov
int
fsubl
aam
sub
in
mov
dec
stos
cmpsb
out
cmpsb
sahf
mov
cmc
dec
sbb
lea
gs
scas
or
cmp
jge
mov
xchg
xchg
aam
std
push
xchg
mov
sub
mov
ss
leave
imul
jbe,pt
hlt
mov
push
addr16
adc
sahf
sbb
xchg
mov
xor
rclb
dec
xor
ja
jbe
xor
push
notl
lret
rcrb
jo
pop
xchg
pop
adc
scas
add
pop
repz
mov
cli
ja
in
add
out
mov
fcoms
in
dec
subb
add
xor
mov
dec
xor
xor
in
inc
movsl
push
sti
pop
in
pushf
movsl
insb
out
movsl
jl
and
cmc
dec
push
sub
ja
xchg
aad
mov
mov
mov
mov
mov
push
shld
nop
mov
cmpsb
mov
xchg
data16
cmp
ret
mov
repnz
mov
fs
adc
push
push
mov
daa
idivb
and
cmpsb
ret
jo
lds
das
stc
xchg
pop
pop
xchg
mov
out
xchg
repz
xchg
call
cld
cld
lcall
adc
jle
hlt
ffree
xor
push
test
push
jcxz
in
dec
cmp
out
pop
in
out
data16
pusha
in
test
adc
jl
jbe
xor
inc
jg
push
sbb
dec
mov
mov
lea
cmc
hlt
movsl
mov
into
dec
hlt
dec
aam
mov
clc
lods
stos
push
mov
lcall
cmc
mov
and
add
and
pop
xor
dec
jns
pop
and
mov
ljmp
mov
sbb
in
xlat
sbb
inc
adc
and
adc
cmp
test
lret
lret
or
and
pmuludq
pusha
sbb
adc
push
pusha
test
mov
mov
mov
aad
push
cmp
mov
jae
aas
add
cmp
inc
xor
inc
lods
mov
cmpsl
sub
cmc
popa
push
stos
aaa
add
xor
sbb
fs
test
aad
or
inc
mov
cmpsl
jne
cmp
or
shrl
sbb
jg
clc
mov
int
vmovaps
ja
or
sub
fwait
sub
add
rcrl
stc
or
push
mov
test
imul
or
mov
mov
add
cld
jl
inc
cwtl
or
lds
inc
jnp
sub
cmp
xor
movsb
or
ret
sbb
mov
test
jmp
cmpsl
jl
clc
inc
fcoml
lret
sbb
js
or
mov
lret
ja
idivl
and
mov
sub
dec
aad
sub
push
adc
fdivrp
out
jae
and
test
insl
and
sub
pop
dec
xchg
fsubl
test
inc
inc
sub
jnp
lahf
sbb
movsl
insl
mov
out
xor
push
pop
push
or
mov
cmc
xor
insb
push
pop
inc
sahf
jbe
sbb
lea
inc
xchg
in
jecxz
rcl
das
dec
inc
inc
sub
lahf
jbe
insb
repnz
int
nop
cli
xor
ja
dec
stc
hlt
cmp
rolb
dec
pop
sub
std
dec
inc
add
jp
jge
movsl
xor
mov
addr16
mov
jns
inc
sub
mov
inc
mov
or
movsl
jp
inc
pop
sub
add
sbb
xchg
insl
setl
push
mov
mov
jnp
xchg
movsb
pop
jno
sahf
mov
sbb
push
inc
jp
movsb
out
arpl
dec
pop
stos
cmp
scas
inc
pop
add
xlat
clc
sub
inc
push
rorl
aaa
push
xchg
lock
push
in
cmp
movl
aam
mov
ss
cmp
cmc
in
js
decl
jl
fs
xor
push
mov
fisubs
sbb
add
pusha
aaa
jl
inc
xchg
jnp
mov
shlb
or
imul
push
fimull
mov
mov
aad
call
jnp
stc
int
jge
cmovno
or
adc
inc
inc
pop
shrb
mov
into
inc
inc
push
rol
sbb
push
pop
inc
test
aaa
cmc
pusha
cltd
xor
addr16
lods
and
cmp
adc
mov
add
xorl
mov
test
repz
mov
cmp
in
xchg
out
pop
inc
fimull
movsl
cmp
lock
insl
xor
test
cmpb
notb
xlat
mov
fyl2xp1
or
movsl
xchg
cmc
int
inc
out
sub
mov
and
loop
mov
push
aas
pop
ds
sbb
xor
test
xchg
sub
popa
dec
insb
adc
pop
hlt
cmp
pop
mov
sub
mov
sub
addr16
and
imul
pushf
repz
inc
dec
int3
pop
sub
cmc
ficoml
inc
mov
mov
les
inc
sahf
or
fsubs
lret
std
icebp
popa
jnp
inc
int
sbb
inc
adc
or
add
repz
addr16
jne
sub
sbbb
mov
jb
inc
sub
xor
adc
add
mov
sbb
scas
imul
es
pop
es
inc
dec
test
mov
shl
stc
xor
lds
mov
les
daa
gs
or
test
movsb
xchg
loopne
test
in
aad
jne
test
sub
mov
adc
cmp
cmc
sbb
aad
xor
inc
sub
or
inc
jno
or
jp
cltd
push
push
stos
inc
xor
mov
or
adc
push
pop
lds
cmpsl
sbb
pop
cmp
pop
les
pop
dec
pushl
stc
sbb
inc
call
mov
add
inc
mov
rolb
jns
clc
shll
insb
pop
pusha
aad
and
decb
xor
xchg
cmp
push
mov
pop
mov
sbb
cmp
inc
or
add
dec
insl
sbb
xor
xchg
and
arpl
stos
std
std
test
cmp
pusha
and
adc
jg
jnp
aad
lods
pop
and
inc
call
icebp
xchg
fnsave
or
popl
loope
in
mov
cmp
cmpsl
or
and
xor
cltd
jb
out
jl
aad
cli
mov
scas
mov
shll
scas
pop
jge
or
movsb
lret
jmp
int3
test
mov
gs
or
mov
ret
lds
repnz
or
inc
jl
add
arpl
hlt
fidivrs
xlat
das
inc
aad
lret
aaa
lods
jp
fwait
inc
pop
mov
into
or
jmp
lods
sbb
cmpsl
lods
jecxz
pop
xchg
out
jb
jge
cmp
sbb
mov
xchg
and
cmp
aaa
or
fists
push
inc
ret
les
jbe
mov
filds
lret
xor
inc
mov
mov
xor
sub
mov
cmp
lock
jp
inc
sub
test
push
stos
rcrl
ja
mov
push
out
and
les
inc
sub
fcomps
lods
sub
xchg
mov
push
int3
in
inc
imul
inc
repz
xchg
dec
out
stos
fldl
aam
push
push
test
jp
xor
cmp
imul
lret
inc
cmpsb
mov
sub
pop
jns
inc
in
jmp
add
inc
mov
dec
cmc
jle
adc
dec
sbb
and
cmpl
mov
cmp
inc
rep
sbb
jns
in
jo
cmp
aam
mov
iret
inc
sbb
dec
xor
daa
or
inc
pop
scas
sarl
sti
xchg
inc
jb
sub
mov
push
pop
inc
fsubl
mov
xchg
dec
and
xor
addb
lret
add
inc
std
or
mov
or
popf
mov
loope
cwtl
push
rol
std
pop
inc
or
inc
popa
shll
icebp
jns
xchg
inc
cmp
aas
jmp
xchg
adc
insl
push
sbbl
push
inc
sbb
repz
cmp
cmp
fdivs
shlb
call
sub
hlt
outsb
test
movsb
std
std
dec
pop
out
inc
das
or
jmp
sub
lds
movl
insb
pop
or
cmpsb
jo
aad
shll
fdivrl
adc
inc
mov
cli
repnz
leave
dec
sub
inc
lock
xchg
std
pop
inc
sub
jae
stos
inc
ja
and
adcb
add
inc
inc
into
sahf
add
out
fbld
mov
mov
out
das
dec
cmp
sbb
ret
stc
cmp
popf
add
adc
jnp
cmpsl
adc
roll
mov
xchg
pop
mov
notb
test
test
mov
pop
mov
or
cmp
inc
cltd
insb
push
sbb
rolb
clc
out
sbb
pop
fnstcw
jns
pop
or
pop
mov
mov
leave
mov
mov
dec
inc
ja
lcall
add
jbe
pop
sub
pusha
or
hlt
adcb
inc
sbb
sbb
dec
jb
movsl
or
mov
shll
or
xchg
mov
adc
cmp
inc
and
sbb
in
sbb
mov
jecxz
inc
sub
jbe
pop
inc
shrb
adc
or
pop
sahf
ret
xchg
and
gs
or
add
inc
lret
mov
mov
je
sbb
fildl
scas
shll
mov
or
pushf
jge
inc
xchg
cmpsb
ficompl
inc
inc
pop
mov
lods
sub
flds
mov
cmp
inc
dec
out
pushw
test
cmp
jp
and
pop
fwait
pushf
or
outsl
popl
dec
out
sbb
addl
or
inc
inc
cmp
add
andl
ss
icebp
adc
xchg
cmc
inc
mov
adc
inc
pop
iret
loopne
imul
loope
pop
cmc
cmp
call
or
add
pushf
lret
ss
test
xor
mov
push
rorl
imul
loope
call
inc
enter
lahf
pusha
loopne
popa
inc
test
nop
adc
push
mov
inc
mov
cmp
bound
out
sub
fldl
push
fiaddl
and
cli
testb
inc
icebp
xor
enter
mov
lods
pop
push
test
outsl
mov
dec
mov
repz
ret
aad
dec
aas
add
mov
inc
arpl
jb
pop
int3
jl
inc
pop
leave
hlt
xchg
jae
lret
test
and
daa
ss
inc
subl
inc
lret
xchg
insl
push
inc
pop
add
mov
repnz
rcl
inc
lock
test
xchg
dec
hlt
pop
out
inc
pop
sbb
subb
sub
jp
addb
pushf
inc
xor
sbb
movsl
lea
insb
add
jno
loop
lret
pop
pop
test
pop
pop
add
adc
lahf
test
rorb
adc
sub
cmp
aaa
inc
je
nop
sbb
dec
pshufw
or
aas
cltd
out
bound
js
leave
dec
rol
sub
sahf
jnp
sub
xlat
dec
or
pusha
cmpsb
inc
in
jne
push
sbb
std
push
imul
or
sti
sbb
inc
int3
push
xor
fbld
addl
lock
mov
enter
out
inc
push
test
dec
in
test
inc
push
xor
movsl
test
add
dec
loope
cmp
sbb
sarl
xchg
push
or
jnp
xchg
inc
call
icebp
pop
aas
scas
mov
cld
cmp
sarl
inc
xchg
mov
inc
decl
cmp
test
sub
data16
jge
lret
icebp
sub
rorl
lahf
fadds
push
cmp
inc
push
or
or
push
inc
pop
out
imul
inc
mov
adc
cmp
mov
jl
test
fsts
inc
lods
pushf
arpl
fidivrl
mov
je
scas
cmp
and
push
push
mov
out
inc
xchg
iret
cmp
sub
gs
mov
std
and
lcall
and
mov
hlt
inc
fwait
es
test
mov
outsb
mov
lods
xor
mov
lds
in
iret
inc
pop
addr16
ja
or
sbb
or
xor
dec
push
cmp
das
pusha
hlt
cli
push
aaa
xchg
cwtl
mov
xchg
sub
xchg
and
je
js
scas
aam
inc
jo
push
stc
hlt
inc
push
mov
cmc
pop
or
jp
push
inc
pop
es
mov
insl
or
pop
clc
fcmovb
jecxz
fldt
inc
cltd
aas
sub
rcll
inc
test
in
add
and
inc
cmp
adc
rolb
push
std
mov
stos
sub
xor
outsl
repz
mov
inc
and
jb
inc
inc
inc
cmp
mov
inc
sbb
mov
sub
inc
xchg
popl
fisttps
sbb
xchg
stos
push
inc
subl
mov
inc
push
data16
cwtl
ss
sbb
xchg
enter
jne
push
mov
dec
push
jge
xor
les
jecxz
in
mov
inc
xchg
rcrl
mov
stos
or
sbb
lcall
lret
lods
sub
sbb
inc
sub
dec
mov
sti
push
mov
push
mov
test
inc
mov
dec
lret
dec
cltd
inc
rcrl
cmpb
popa
jbe
in
jno
xor
in
adc
popa
xchg
outsl
push
sti
insl
mov
test
add
adc
cmpsb
or
insb
int
icebp
jge
mull
xor
jno
pop
push
inc
push
push
fs
call
dec
arpl
adc
fadd
je
jl
enter
cmp
xchg
pop
xor
idivl
ret
mov
imul
pop
fwait
out
mov
movb
shrb
bound
popa
into
inc
inc
out
jb
gs
ficompl
daa
push
std
cmp
mov
or
inc
mul
repnz
lcall
jb
insl
ret
movsl
int3
mov
or
es
mov
movl
inc
sbb
xor
dec
es
inc
aaa
xorb
rcrl
inc
mov
add
inc
test
addr16
xchg
push
aas
adc
mov
pusha
lock
js
or
adc
scas
aas
mov
cmp
arpl
ret
or
cmp
xchg
inc
inc
imul
inc
xlat
adc
insb
jmp
add
sub
pop
imul
enter
jmp
cmp
pop
inc
dec
jns
nop
insb
mov
fimull
dec
inc
push
cs
movsl
dec
aas
sbb
xchg
lods
and
and
fiaddl
std
fcom
inc
outsb
dec
sarb
bound
aad
rcl
inc
in
addl
jae
mov
mov
ret
aas
cmp
and
scas
push
js
int
lods
test
inc
mov
push
xlat
popf
mov
int3
bound
in
push
icebp
sbb
push
sub
cmc
aad
xor
jg
jp
sub
push
mov
mov
enter
fstpt
jecxz
data16
shrl
jne
adc
xor
mov
inc
shlb
bnd
sub
mov
rclb
sub
aaa
lds
xor
mov
jmp
mov
addr16
ds
repnz
daa
and
cmpsb
inc
inc
and
movsb
cmp
out
xor
addr16
push
mov
push
in
aaa
in
je
dec
out
xchg
inc
stos
testl
fsubrl
loop
scas
mov
or
daa
out
mov
arpl
xchg
mov
add
mov
sti
in
sub
lcall
lds
push
push
cmpsb
adc
inc
sbb
repz
inc
inc
leave
mov
shrl
and
add
int
lcall
cli
or
loop
lds
rcrb
out
test
adc
cld
and
inc
cmp
cmp
into
pop
movsl
jl
cmpsb
xchg
ret
sub
dec
lret
bnd
xchg
mov
lds
inc
dec
xchg
inc
inc
fwait
pop
insl
out
mov
jmp
scas
notl
les
xchg
in
jmp
sbb
inc
sti
mov
imul
mov
leave
shlb
dec
xchg
fsubrp
mov
sub
pop
test
out
mov
js
mov
mov
dec
leave
and
xor
mov
adcl
js
les
mov
jmp
sub
scas
jnp
ret
pusha
jmp
xchg
cmp
push
push
pop
add
test
xchg
aam
test
dec
lret
mov
test
cwtl
in
xchg
cmpb
mov
test
call
xchg
addr16
into
cli
pop
sub
fwait
mov
or
sbb
dec
sub
jmp
pop
test
xchg
inc
std
test
pop
mov
imul
xor
xor
pop
sbb
imul
mov
xor
movsb
sub
fbstp
lods
scas
jns
sete
inc
mov
push
out
mov
mov
mov
movsbl
sub
clc
stc
lahf
btc
mov
neg
dec
add
cmc
sbb
mov
mov
cmp
test
pushf
pushf
lea
je
push
sub
push
cmp
call
orb
mov
xchg
sub
in
pop
mov
push
movsb
pop
aas
repz
xchg
scas
neg
dec
or
add
std
cld
dec
sbb
mov
mov
insl
push
and
pop
push
jmp
cltd
jbe
das
loop
dec
sbb
and
pop
mov
addb
add
xor
adc
add
add
cltd
adc
add
adc
sbb
add
adc
lcall
add
add
add
mov
mov
movb
lea
jmp
call
pushf
call
sar
mov
cmc
cmc
pushf
add
mov
pusha
lea
jmp
add
movw
lea
jmp
pusha
pushf
lea
jne
jmp
mov
push
push
pushf
lea
jmp
lahf
bt
sets
bt
mov
pushf
dec
pushf
sub
mov
bt
push
stc
add
movw
mov
pushf
push
pushl
lea
jmp
movl
sub
jmp
pushf
mov
jmp
rol
or
aaa
mov
mov
push
pusha
add
jmp
pushf
pushl
popl
pushf
pushf
lea
jmp
movzbw
not
pushf
rol
rol
shrd
inc
xor
jmp
movl
pushf
mov
push
mov
push
jmp
pushf
test
pusha
or
push
stc
xor
movb
inc
push
jmp
push
push
pushf
pushf
movl
lea
jmp
call
push
dec
pushl
push
pushf
pushf
lea
jmp
pushf
popl
jmp
pushl
xor
test
sub
lea
jle
pushf
pusha
mov
pushf
movw
pushf
mov
lea
jmp
jmp
cmc
push
stc
cmp
and
bt
cmc
cmp
jmp
mov
movw
push
pushf
pushl
ret
xor
bsr
xadd
mov
btr
mov
pusha
cmc
pusha
mov
add
mov
mov
mov
pushf
pushf
pushf
lea
jmp
rol
rcl
bsr
movzww
test
bt
jmp
pushf
pusha
movw
pushf
repz
popl
pushf
movb
pushf
mov
mov
pushl
jmp
jmp
mov
lea
jno
pusha
pusha
mov
call
push
mov
push
jmp
push
jmp
push
pushf
movl
pusha
repz
popl
pushf
jmp
push
mov
movl
jmp
not
shl
mov
movzbw
xor
stc
btr
rcr
rol
and
shr
add
ror
rol
ror
bswap
not
movzbw
movzbl
dec
setbe
pushf
call
jmp
push
mov
pushf
mov
call
pushf
call
call
pusha
pushl
pushl
mov
pushf
jmp
pusha
cmc
test
add
movb
jmp
sub
jmp
jmp
mov
movb
pushf
divl
jmp
jmp
call
mov
push
mov
call
mov
pushf
sub
jmp
xor
cmp
stc
bsf
mov
xadd
shld
jmp
shld
mov
setge
mov
cmc
call
pushl
jmp
mov
pushl
popl
cmc
bt
add
test
jmp
jmp
mov
push
mov
lea
jmp
shl
cmp
not
xchg
mov
test
rol
mov
clc
cmp
push
sub
clc
test
shl
jmp
bswap
pushf
pop
mov
call
call
jmp
mov
pushl
pusha
lea
jmp
pusha
cmp
test
not
clc
sub
push
pushf
call
add
jmp
popf
pusha
push
push
lea
jmp
pusha
mov
movb
pushf
movw
lea
jmp
test
shr
pusha
jmp
jmp
mov
call
jmp
xor
stc
call
lea
jne
bsf
xorb
movzbw
pushf
mov
mov
push
lea
jmp
pushf
sub
mov
jmp
mov
jmp
add
bt
ror
push
mov
xor
pushf
pushf
sub
call
pushl
popl
movw
pushl
pushf
movb
lea
jmp
mov
jmp
movb
pushf
popl
pushl
call
call
pushf
pushl
popl
movb
movb
push
mov
lea
jmp
call
push
pusha
mov
mov
pushf
push
pushf
movb
lea
jmp
pushl
jmp
shl
call
pushf
pushl
popl
push
pushf
lea
jmp
call
mov
movb
mov
pusha
pusha
jmp
ror
pushl
bt
cmp
test
xor
jmp
cmp
btr
mov
mov
sete
bt
add
not
call
sub
lea
jo
cmp
shr
jmp
add
pushf
jmp
clc
mov
cmp
clc
jmp
jmp
ror
pusha
adc
or
mov
cmc
stc
dec
sbb
mov
test
bt
sub
stc
jmp
pushl
pushf
mov
push
pushf
push
mov
lea
jmp
mov
lea
je
pushf
push
mov
mov
pushl
lea
jmp
pusha
jmp
call
aas
btr
mov
jmp
test
call
call
pushl
popl
movl
movw
lea
jmp
movl
pushf
popl
pushf
jmp
cmc
and
or
mov
stc
pusha
sub
pusha
add
mov
pushf
popl
pushf
call
pushf
popl
pushf
jmp
rcl
mov
and
neg
and
mov
cmc
pushf
add
clc
shrd
call
call
pushf
pusha
lea
jle
repz
pushf
jmp
mov
pushf
pushf
mov
push
pushf
push
lea
jmp
pusha
mov
pusha
push
mov
jmp
shl
mov
pusha
lahf
notl
shl
mov
lea
jl
test
bt
sub
cmc
test
push
and
push
push
pushf
popl
push
pushf
pushl
popl
pusha
lea
jmp
bts
pushl
popl
mov
movzbl
push
btc
movzbw
mov
mov
xchg
rcr
ror
movsbw
ror
bswap
not
pusha
sets
inc
bsf
adc
mov
not
neg
push
dec
lea
pusha
sub
rcl
movzbw
mov
sar
mov
test
rcr
pushf
add
add
rcr
inc
mov
mov
shl
cmp
movsbw
shl
add
cmc
btc
jmp
xor
push
call
add
cmc
ror
cmc
call
mov
movb
movl
push
lea
jmp
test
add
inc
mov
bt
add
pusha
pushf
push
pushf
popl
pushf
call
mov
push
push
mov
movw
lea
jmp
clc
and
dec
or
mov
bt
push
pushl
call
btr
aad
rcl
mov
mov
xor
shld
bts
mov
jmp
bt
cmc
add
pushf
pushf
call
pushl
pushf
mov
push
lea
jmp
movsbl
mov
stc
bt
stc
cmp
add
push
mov
pushf
movw
lea
jmp
lea
jp
pusha
mov
pushl
push
movl
pushf
popl
push
jmp
mov
pushf
pushf
pushf
lea
jmp
mov
mov
jmp
push
mov
mov
mov
push
push
lea
jmp
lea
jle
pushf
pusha
mov
push
movb
pushf
movb
lea
jmp
ror
test
pushf
add
call
pushf
jmp
mov
movw
lea
jmp
pushl
pushf
mov
call
btc
sub
rdtsc
call
mov
pushf
lea
js
pusha
mov
pushf
push
mov
pusha
movb
pushl
pushf
mov
call
cmp
push
call
mov
push
pushf
movb
movb
lea
jmp
jmp
movb
movb
jmp
jmp
and
pushf
mov
call
mov
mov
rcl
adc
mov
shr
shld
inc
sub
call
mov
call
mov
call
mov
mov
pushf
call
inc
btr
clc
bts
mov
shr
neg
mov
push
cmp
pusha
not
cmc
pusha
not
test
call
call
push
pusha
add
jmp
mov
movb
lea
jmp
bt
ror
pushf
jmp
push
clc
ror
pushf
xor
cmp
test
cbtw
stc
cmc
cwtl
jmp
shrd
lahf
or
mov
adc
mov
call
add
jne
clc
sub
pushf
call
not
lea
mov
jmp
shr
clc
or
mov
test
bt
bt
cmp
sub
pushf
pushf
stc
call
jmp
test
pushf
pusha
sub
pusha
mov
mov
push
pushf
mov
lea
jmp
call
stc
movzbl
stc
clc
cmp
xor
cmc
call
lea
jle
push
movb
mov
pushf
push
pushf
mov
lea
jmp
pusha
mov
mov
call
jmp
not
lea
stc
mov
clc
test
cmc
test
add
pusha
mov
pushf
push
lea
jmp
cmc
xchg
cmp
clc
mov
cmc
jmp
push
pushf
mov
pushf
pushl
pushf
pushl
lea
jmp
movsbl
mov
cmc
pusha
push
jmp
pushl
mov
mov
movw
movb
pushf
lea
jmp
jmp
mov
call
jmp
jmp
call
pushf
movb
push
jmp
mov
movb
pusha
pushf
popl
pushf
movb
pushf
pushl
popl
pushl
lea
jmp
pushf
mov
push
lea
jmp
mov
mov
mov
push
movw
lea
jmp
push
jmp
cbtw
test
pushl
push
cmp
cwtl
bt
sub
jmp
mov
neg
stc
add
cmc
mov
bt
cmp
test
sub
pusha
jmp
mov
call
call
mov
call
mov
pushf
pushl
pushf
lea
jmp
pusha
jmp
mov
pusha
push
movw
lea
jmp
call
jmp
pushf
popl
jmp
add
movzbw
aad
mov
and
mov
cmc
call
bt
add
call
movl
pushf
mov
mov
pushl
ret
aad
btc
pushf
mov
pushf
sub
test
cmp
test
add
jmp
mov
mov
or
inc
bswap
pop
btc
daa
pop
daa
pop
pusha
mov
or
rdtsc
bsr
not
mov
movsbw
cltd
or
mov
inc
daa
bswap
mov
daa
mov
das
mov
shrd
add
and
mov
pushf
cld
movb
pushl
popf
pushf
movw
pushl
ret
jmp
lea
jne
bswap
or
mov
jo
and
push
stc
cmp
cmp
mov
lea
jne
btc
movzbl
add
bsr
xorb
lea
push
jmp
mov
clc
mov
pusha
call
cbtw
cmc
mov
call
pushf
popl
jmp
pushf
mov
pushf
pusha
movw
lea
jmp
mov
movw
mov
pushf
pushf
popl
pushf
push
pushl
popl
movb
mov
movl
lea
jmp
call
adc
sbb
call
pushf
popl
push
push
pushl
popl
pushl
lea
jmp
push
mov
pusha
lea
jmp
pusha
movb
push
jmp
add
lea
jae
bt
ror
stc
pushf
jmp
pushf
mov
pushf
push
mov
mov
movw
mov
push
pushf
lea
jmp
mov
movb
pushf
pushf
lea
jmp
call
sub
call
mov
pusha
push
call
sub
test
sub
bt
not
pushf
cmp
jmp
call
pushf
mov
lea
jbe
pushf
mov
movb
pushf
lea
jmp
push
dec
push
dec
mov
lea
jae
pusha
dec
stc
clc
test
stc
xor
call
lea
ja
jne
rcl
rcr
bsr
xorb
bswap
call
jmp
add
add
cmp
xor
pushf
xchg
pushf
movl
pusha
pusha
mov
jmp
bt
test
xchg
cmc
lea
jbe
xor
push
ror
cmp
cmp
add
lea
jns
cmc
add
call
clc
call
call
movsbw
inc
mov
jmp
pushf
push
mov
call
call
rcr
not
mov
cmc
cmc
rol
cmp
stc
clc
add
jmp
mov
pushf
pusha
lea
jmp
clc
cmc
jmp
mov
movw
pushf
popl
push
jmp
pop
ror
shl
not
rcr
rcr
and
stc
rcl
mov
xor
mov
push
mov
push
sub
call
inc
movzbw
rol
or
neg
shl
sub
bswap
mov
stc
movb
cmp
add
jmp
pushf
push
push
pushf
popl
call
push
call
add
pushf
lea
jmp
setl
add
shl
mov
btr
clc
add
clc
shld
shrd
xor
jmp
mov
mov
call
pushl
popl
push
mov
movw
lea
jmp
dec
movl
stc
cmp
jmp
movb
mov
push
mov
pushf
push
call
pushl
popf
push
pusha
lea
jmp
mov
mov
pushf
call
pushf
mov
pushf
pusha
movb
pushl
ret
pusha
lea
push
call
jmp
mov
pusha
pushf
pushf
mov
lea
jmp
jmp
mov
mov
mov
pushf
pushl
pushl
push
lea
jmp
push
jmp
bt
clc
pusha
ror
test
xor
mov
test
pusha
stc
cwtl
mov
sub
pushl
mov
pushl
push
movb
movl
lea
jmp
stc
cmpl
pushf
mov
jmp
mov
pushf
pushl
popl
movb
push
lea
jmp
call
movb
jmp
call
pushl
popl
pushf
lea
jmp
mov
movb
pushf
pushl
pushf
lea
jmp
add
pushf
mov
lea
jmp
stc
pusha
movw
sub
pushf
cmc
and
call
pushf
jmp
pusha
mov
pushf
jmp
cmc
xchg
pusha
cmp
clc
mov
xor
jmp
cld
lea
jle
pushf
pusha
pusha
rep
and
movzbl
test
shl
mov
sub
mov
jmp
rdtsc
pusha
lea
mov
movsbw
movl
lahf
call
lea
jne
push
xor
pushf
xorb
lea
movzbw
mov
push
mov
movl
pusha
lea
jmp
call
mov
push
mov
lea
jmp
push
pusha
mov
pushf
push
movw
push
lea
jmp
jmp
cwtl
daa
aas
mov
test
pusha
sub
jmp
mov
jmp
call
pushf
mov
call
mov
pushf
lea
jmp
sub
clc
clc
pushf
ror
pushf
inc
cmp
pusha
neg
pushf
test
pushl
cmc
sub
pushf
movb
jmp
mov
push
pusha
mov
jmp
mov
push
pushf
pushf
mov
lea
jmp
bswap
test
pusha
call
pushf
cmp
neg
clc
clc
pushf
add
clc
pusha
mov
cmc
sub
mov
mov
call
test
pushl
popf
movb
lea
jmp
movl
mov
jmp
mov
call
movb
pushl
mov
jmp
push
push
pusha
mov
push
pushf
pushf
popl
jmp
stc
ror
push
pusha
xchg
pushf
xchg
bts
ror
mov
pusha
mov
lea
xchg
clc
rol
bswap
push
bts
xchg
push
xchg
pushf
lea
xchg
call
cmc
rol
ror
test
xor
shr
movsbw
add
movzbw
pushf
jmp
movzbl
lahf
mov
mov
call
pushf
pusha
repz
popl
push
call
pusha
call
rol
lea
jae
push
pusha
pusha
dec
cmc
call
mov
call
setb
mov
neg
sbb
mov
pushf
pushf
clc
add
jmp
pushf
mov
pushl
pushl
pushl
pushf
lea
jmp
not
jmp
push
jmp
call
mov
pusha
mov
call
pushf
pushl
popl
movb
pushl
push
mov
lea
jmp
mov
cmp
clc
sub
jmp
clc
and
jmp
call
cmc
xchg
jmp
pusha
push
repz
popl
movb
pusha
jmp
jmp
pushl
mov
call
pusha
mov
pusha
push
jmp
pusha
push
pusha
mov
pushf
movb
lea
jmp
pushf
rol
not
movsbw
dec
setno
test
cmp
neg
ror
ror
shld
bsr
add
pushf
stc
rcr
movzbl
call
pushf
mov
push
mov
movb
mov
lea
jmp
mov
pushf
push
movw
lea
jmp
push
xchg
rcl
xadd
mov
rcr
dec
add
mov
mov
test
clc
sub
pushl
bt
cmc
shr
call
rcr
rol
dec
xor
btr
bt
ror
ror
xor
and
and
shl
movzbw
movsbl
shld
mov
cmc
cmp
add
push
pusha
mov
push
pushf
lea
jmp
call
sub
jmp
call
mov
pushf
jmp
pushf
jmp
cwtl
bswap
mov
push
lea
js
cpuid
stc
cmc
push
movl
sub
push
pushl
bt
cmpl
pushf
mov
lea
jg
pushf
mov
mov
mov
pusha
push
mov
mov
jmp
stc
stc
push
cwtl
push
bt
sub
mov
call
pushf
push
call
bt
ror
test
bt
jmp
xchg
pusha
jmp
push
lea
je
cmc
pushf
jmp
push
mov
pushf
mov
mov
lea
jmp
mov
call
btr
mov
call
pushl
pushl
popl
mov
lea
jmp
pushl
mov
movb
movb
push
call
bt
shl
pusha
pushf
jmp
pushf
repz
popl
push
mov
call
xor
jmp
push
push
testl
dec
jge
add
sbb
add
mov
testl
and
testl
loopne
clc
add
and
add
testl
push
adc
add
testl
js
testl
dec
testl
loopne
clc
add
int3
testl
sub
testl
fcomps
clc
add
cmp
add
testl
adc
testl
xor
testl
adc
clc
add
lods
testl
dec
mov
add
aaa
clc
add
or
add
testl
adc
testl
jo
testl
js
testl
dec
testl
lock
testl
push
insl
testl
adc
testl
mov
testl
mov
testl
shlb
sarb
add
push
testl
sbb
clc
add
stc
testl
nop
ss
add
sub
testl
jo
testl
mov
testl
js
testl
js
testl
cwtl
testw
clc
add
testl
sub
testl
sub
testl
dec
jge
add
testl
adc
testl
push
and
add
sti
testl
mov
and
add
testl
enter
fcomps
clc
add
cmp
add
testl
pusha
push
testl
lock
testl
js
testl
adc
testl
jo
clc
add
testl
push
push
testl
mov
push
testl
or
testl
pusha
cmp
testl
loopne
clc
add
sub
add
sbb
add
testl
rolb
add
sti
testl
js
testl
js
testl
shlb
add
stc
testl
sub
testl
sub
testl
js
testl
adc
clc
add
push
testl
lock
add
push
testl
sub
add
cmp
add
cmp
add
daa
clc
add
testl
js
testl
dec
jl
add
testl
dec
jge
add
maskmovq
testl
sub
add
pop
clc
add
pop
clc
add
push
testl
push
push
testl
dec
sbb
add
or
add
mov
testl
cmp
testl
nop
ss
add
mov
testl
dec
jge
add
testl
sub
add
cmp
clc
add
testl
js
testl
adc
testl
rclb
add
testl
sub
testl
sub
testl
pusha
test
add
inc
testl
loopne
clc
add
push
testl
nop
pushf
testl
subb
add
testl
sbb
clc
add
testl
subb
add
test
add
testl
lock
add
testl
cmp
add
push
testl
mov
or
add
mov
clc
add
mov
testl
rolb
add
testl
jmp
pushl
popl
movb
push
lea
jmp
mov
pushl
call
pushl
jmp
mov
mov
pushf
pushf
lea
jmp
jmp
neg
jmp
shl
sbb
mov
or
cmc
clc
add
sbb
not
xor
movzbw
not
bt
ror
shl
shl
ror
neg
bswap
btc
rcl
bswap
add
dec
push
add
pusha
movzbw
shl
btr
mov
jmp
ror
clc
push
add
cmp
add
movl
bt
jmp
xchg
movl
mov
call
jns
push
movl
pushf
repz
popl
pushl
mov
pusha
push
mov
pushf
call
cmc
rol
movb
add
call
repz
popl
jmp
push
lea
jne
cmp
jmp
pushf
mov
pushl
lea
jmp
repz
popl
call
rep
clc
rcl
movsbw
shld
mov
ror
neg
shl
mov
pushf
jmp
jmp
lea
jne
movzbw
setp
mov
clc
and
jmp
movw
pushf
mov
pushf
mov
pushl
call
pushf
mov
pushf
popl
call
jmp
pusha
call
aas
xchg
rcr
mov
movzbw
shrd
pusha
cmc
mov
cmp
mov
push
cmc
add
stc
shld
movl
push
jmp
pushl
popl
pushf
pushl
lea
jmp
pushf
pushf
jmp
push
push
jmp
pushf
mov
movw
pusha
push
mov
pushf
mov
pushf
pushl
push
pushf
lea
jmp
mov
pushl
mov
pushf
call
cpuid
call
mov
call
pushl
popl
mov
movb
mov
movb
lea
jmp
lea
jne
btc
rcr
sub
and
mov
bt
and
cmc
pusha
pusha
cmp
call
movb
repz
popl
jmp
push
mov
pushf
pusha
push
pushl
lea
jmp
jmp
bt
call
ror
test
stc
xor
cmp
pushf
cwtl
cmp
sub
jmp
pusha
lea
jne
mov
xorb
movzbw
bswap
pop
push
pusha
push
lea
jmp
pushl
mov
mov
jmp
bswap
pusha
mov
movw
movw
push
pusha
lea
call
jmp
pushf
sub
push
mov
call
pushf
mov
mov
push
lea
jmp
pushf
mov
call
mov
pushf
mov
movw
lea
jmp
movsbw
call
pushl
sub
call
xor
call
mov
jmp
jmp
mov
call
adc
inc
rol
test
mov
cmp
mov
cmp
pusha
test
mov
sub
push
stc
bt
shl
call
push
pushl
popl
pushl
lea
jmp
mov
pushf
pushf
push
lea
jmp
push
mov
push
push
mov
pusha
jmp
dec
mov
bt
add
pusha
pushl
pusha
push
lea
jmp
add
pushf
mov
pusha
lea
jmp
dec
push
movb
movb
mov
lea
jmp
bt
sub
movb
lea
push
call
push
repz
popl
call
shl
mov
dec
ror
shr
mov
pushf
add
jmp
stc
add
jmp
jmp
rol
mov
pushf
add
mov
lea
jmp
pushf
mov
pushf
lea
jmp
jmp
pushf
push
jmp
movb
decl
movb
push
lea
jne
jmp
pushl
pusha
lea
push
std
pushf
xchg
std
movzbl
push
mov
pushl
push
movb
jmp
movb
mov
pushf
mov
pushf
call
mov
mov
movw
pushl
lea
jmp
pushf
sub
push
mov
pushl
push
lea
jmp
mov
call
bts
mov
cmc
pusha
add
pushf
call
mov
pusha
mov
movb
stc
test
jmp
lea
jne
pusha
lea
je
push
test
sub
movl
pushf
jmp
pusha
pushf
pusha
repz
popl
pushf
pushf
pushf
mov
movw
mov
push
movb
call
sbb
add
push
not
movb
mov
jmp
pushf
stc
bt
stc
ror
stc
pusha
xor
push
stc
sub
jmp
pusha
sub
push
movb
call
jmp
cmc
movzbl
bsr
mov
clc
clc
clc
pushf
add
pushf
pusha
push
pushf
lea
jmp
repz
call
mov
pushf
push
mov
pushl
pushf
push
mov
lea
jmp
cmp
rcl
movzbl
cmc
add
pushf
cmp
xor
cmc
lea
js
pusha
ror
cmc
call
mov
call
or
xor
bsf
movzbl
movb
mov
pushf
or
jmp
pusha
call
shr
bsf
pusha
lea
stc
cmp
pushf
pusha
lea
ja
lahf
dec
mov
xor
add
push
lea
movsbw
sub
bts
lea
ror
and
bsr
sub
not
movzbw
mov
lea
bswap
not
pushf
pusha
mov
std
bswap
bswap
mov
jmp
jmp
jmp
jmp
xor
push
mov
cmc
cmp
pushf
push
shl
clc
shr
jmp
rdtsc
sar
mov
cmc
rcl
mov
cmc
jmp
shld
rcl
push
mov
bt
clc
push
add
pushf
lea
jmp
movb
mov
call
pushf
popl
jmp
jmp
push
push
dec
cmc
xor
cmc
rol
jmp
mov
call
and
mov
shr
stc
mov
jmp
jmp
shr
jmp
