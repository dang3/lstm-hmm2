ljmp
inc
mov
add
cmp
cmp
cmpsb
add
inc
int3
sub
xchg
addr16
jmp
incl
popf
cmc
cs
fwait
mov
repz
xchg
push
xorl
xor
fidivrs
inc
dec
das
mov
mov
cmpsb
pushf
iret
jb
cmp
outsb
loop
cmp
sbb
pushl
test
adc
push
mov
nop
cmp
mov
es
push
add
incl
add
pop
fcomps
add
push
fisubrs
add
sbb
data16
lcall
or
shll
sti
stos
push
pop
movsl
rolb
or
das
inc
icebp
xchg
stos
les
pop
sub
nop
mov
inc
mov
in
mov
imul
lcall
mov
or
ds
loop
mov
mov
push
mov
mov
pushl
cltd
rcl
ds
mov
out
cmp
int
mov
ret
rcrb
push
jge
jmp
shrb
push
xor
adc
popf
jb
out
xchg
push
mov
xor
jmp
adc
adc
and
pop
mov
xchg
and
push
aam
pop
sub
lret
jmp
jecxz
aam
push
adc
mov
in
pop
mov
icebp
imul
mov
xor
mov
decl
push
push
lcall
stos
jge
mov
mov
js
stos
push
jge
stos
scas
call
lret
stos
icebp
lea
das
cs
xlat
pop
gs
mov
sub
inc
cmp
sbb
pushl
pop
pop
idiv
jle
out
sbb
push
out
mov
push
push
repz
fbstp
jae
inc
push
lahf
and
sti
das
pop
mov
mov
jns
dec
mov
mov
in
decl
rclb
aas
decl
cmp
mov
add
and
enter
mov
decl
xor
and
mov
pop
adc
shrl
in
or
lds
jmp
sbb
cltd
sub
adc
fists
repnz
cs
sbb
and
pop
movsl
negb
ljmp
dec
inc
mov
or
xchg
repz
push
mov
adc
add
jmp
mov
mov
lea
dec
lods
push
push
repnz
cmp
fsubrs
out
xor
mov
mov
rclb
add
xchg
loop
mov
jmp
ljmp
add
cmc
mov
pop
ja
and
fs
push
xchg
mov
sub
lcall
subb
xchg
mov
xchg
xlat
xchg
bound
xor
cmp
cmpsb
push
mov
pop
fimuls
mov
mov
mov
xchg
push
mov
lret
in
movsl
popf
shlb
adc
cli
arpl
jmp
stos
lahf
pusha
in
cmc
pusha
test
xchg
or
xchg
cmp
leave
mov
adc
leave
movsl
outsb
notb
cld
popa
push
xchg
mov
mov
push
push
mov
sub
mov
lcall
mov
sar
jmp
cmc
in
in
lret
cmp
xlat
sbb
shlb
call
jne
sbb
xchg
sbb
decl
movb
in
jbe
cmc
mov
rcrb
decl
xor
pusha
cmp
int3
cmc
fistpl
mov
cmpsl
shlb
dec
jbe
lcall
rolb
in
sbb
ss
jno
lea
stos
dec
rcr
mov
cld
popf
pushl
lret
inc
jnp
lret
in
mov
lds
lods
fiadds
inc
call
in
mov
jnp
adc
push
daa
imul
mov
popf
adc
pop
cli
aad
call
mov
loope
xchg
and
neg
das
fmuls
into
xchg
adc
mov
push
mov
dec
dec
mov
ss
or
mov
cld
movl
test
fwait
shrb
out
and
int
movsb
or
lret
jp
cmp
mov
push
mov
xchg
lcall
bound
mov
xchg
out
je
sub
inc
sbb
test
decl
jo
outsl
adc
sahf
xor
dec
ss
decl
xor
mov
lcall
repnz
sti
jmp
cmc
cmpsl
jns
je
pop
repnz
jge
test
push
shr
ss
jb
testb
sub
jg
or
xor
insl
loop
cmp
pop
popf
in
sub
imul
adc
pushl
ljmp
mov
arpl
pop
rorb
push
mov
xor
jmp
sbb
clc
stos
pop
in
lds
bts
stc
and
sbb
sarl
pop
iret
lret
out
clc
lcall
pop
mov
stos
mov
mov
and
or
sbb
cmpsl
sbb
jmp
bound
out
rorb
mov
cmpsl
jg
in
xchg
pusha
andl
pop
aad
scas
daa
repnz
add
add
sbbl
adc
pushl
out
or
addr16
jae
ss
xchg
cld
in
xlat
test
or
cmp
inc
cmpl
cwtl
or
sub
push
sub
add
lcall
cld
lods
shll
out
adc
sbb
lcall
ljmp
inc
sbb
insb
js
sahf
sbb
insb
sbb
fcompl
sub
in
rcll
std
lcall
dec
shrb
push
sub
jne
fcmovnu
pop
pop
or
and
mov
lahf
xchg
outsl
xchg
xchg
aaa
mov
out
sub
cmp
incl
dec
cmpsl
push
xchg
mov
push
and
push
pusha
imul
inc
add
mov
or
xchg
jnp
out
outsl
jae
pop
aaa
es
adc
adc
int3
and
xchg
jmp
xchg
call
rcrl
outsl
dec
rorl
adc
add
sbb
cmpsb
jmp
xor
xchg
pop
lock
jp
notb
mov
cmpsl
aas
fstpt
in
call
sti
call
js
xchg
arpl
adc
lcall
add
out
cmp
cmp
sbb
bnd
lret
mov
ficomps
clc
pushl
es
push
std
and
and
sbb
push
mov
sbb
incl
mov
call
outsb
jne
cltd
out
ret
outsl
sar
jg
lahf
cld
mov
adc
sub
addr16
or
lods
mov
jge
xor
xchg
je
ja
les
mov
adc
mov
or
push
dec
loop
clc
in
push
pop
ret
sub
pushf
notl
aaa
movsl
int3
pop
xor
inc
fsts
add
fwait
inc
shlb
push
sbb
mov
dec
jmp
xchg
lods
in
hlt
sub
repz
inc
sbb
stos
test
sub
pop
dec
mov
xchg
arpl
cmc
push
inc
adc
xchg
add
and
dec
mov
decl
imul
add
out
nop
dec
lds
popa
rorb
ljmp
sbb
mov
push
add
sar
pop
cmp
pop
sub
cmp
cld
into
add
adc
sbb
jg
mov
call
jmp
dec
pop
inc
mov
repz
mov
cmpsb
or
in
jns
lods
jo
lods
call
cld
lcall
shrl
jnp
outsb
pop
stc
divb
fdivs
loope
insb
clc
lahf
and
pushl
jle
push
add
or
incl
dec
lcall
jbe
scas
dec
decl
cmp
push
xchg
mov
xchg
fwait
minps
mov
push
enter
shll
lock
decl
jb
iret
lods
rol
clc
inc
inc
mov
imul
jl
cmp
xchg
xchg
inc
dec
out
jg
stos
lret
and
adc
stc
adc
or
xchg
sub
aas
incl
notb
xor
mov
cld
inc
ficoms
mov
mov
and
jmp
push
ljmp
xchg
int
xor
dec
mov
mov
sar
push
push
mov
jo
shrl
std
loop
jecxz
xchg
repnz
fdivrl
dec
add
fwait
test
sar
xlat
in
bound
pushl
lods
jmp
fs
cmc
ja
das
inc
fwait
and
les
notb
push
push
mov
rcl
xchg
clc
ljmp
test
xchg
decl
jmp
jne
je
jne
aas
testb
add
sub
ret
jbe
decl
sbb
popf
rclb
out
xchg
into
push
dec
cmp
xlat
jno
mov
lcall
divl
sbb
cmp
adc
dec
mov
mov
mov
push
rclb
js
out
pop
mov
ljmp
rcr
xor
ljmp
je
push
mov
lods
idivl
pop
cmpsb
cmp
sbb
fcompl
shll
xchg
lds
dec
in
cld
imul
mov
call
filds
or
sti
add
jb
rcrb
push
movsb
dec
cli
insl
inc
mov
xchg
sbb
jmp
test
dec
je
cmp
and
sub
inc
push
mov
or
jge
call
jno
icebp
adc
je
sub
movsb
std
loopne
inc
or
inc
cli
dec
in
mov
ja
call
out
pop
pop
ret
pop
out
adc
xlat
sub
adc
insl
call
incl
mov
add
repnz
sbb
outsb
xor
call
pop
push
mov
std
hlt
mov
jecxz
js
or
lea
lcall
mov
in
jns
jae
xlat
or
mov
xor
out
sub
cmc
mov
mov
xchg
popf
test
repz
test
and
or
jmp
add
in
lods
les
outsl
push
jb
icebp
std
sub
mov
jo
mov
adc
mov
push
cwtl
test
cmp
push
fbld
mov
sub
fisttps
test
pop
enter
jbe
xchg
mov
cmp
lods
fucomi
and
decl
fnstcw
mov
xorb
aas
out
jno
xor
pop
xor
lock
jmp
ljmp
movl
jecxz
mov
cmpl
fildll
ss
enter
call
sub
jnp
xor
sub
mov
or
push
cmp
or
mov
lcall
ljmp
cmc
lret
xor
scas
in
insb
nop
cmp
mov
andb
ljmp
not
sub
mov
adc
or
cmpsl
cmc
inc
jmp
inc
in
daa
jg
mull
loope
rcl
gs
or
push
push
dec
dec
jnp
adc
inc
add
decl
addb
mov
sarl
je
mov
jmp
push
dec
jb
aas
dec
xor
xchg
sbb
divb
cmp
pop
iret
mov
sub
cmp
lcall
mov
dec
mov
mov
stos
and
xchg
test
leave
fs
out
in
and
mov
mov
or
push
lcall
xorb
popa
adc
lcall
xor
xchg
test
cmp
inc
out
cs
cmp
in
scas
fcmovnu
inc
pop
or
pop
jecxz
rcrl
dec
fcmovb
xor
stc
fisttpll
aam
idivl
push
jge
pop
cli
add
fidivl
mov
stc
or
sub
inc
jg
sahf
push
outsb
cli
xchg
dec
jg
xor
dec
jge
pop
sub
sub
and
out
mov
cmp
pop
xchg
xchg
jo
mov
adc
sbb
mull
jne
or
in
cmp
fsubrs
ds
jo
rclb
lahf
pop
inc
sahf
dec
jb
iret
call
cmp
push
cld
mov
inc
sub
loopne
jo
vshufps
into
subb
das
pop
gs
pushl
movsb
js
inc
int3
sti
ss
stos
scas
xor
inc
xchg
jle
jmp
mov
lods
cwtl
mov
xor
iret
fbstp
mov
push
or
push
jecxz
jbe
mov
sub
cmp
jl
scas
push
dec
rcr
pushf
mov
add
push
ds
or
fisttps
cwtl
push
sbb
incl
jno
xor
and
das
mov
test
xchg
lret
sbb
sbb
test
push
add
inc
into
inc
mov
add
aaa
rolb
shl
js
popa
in
decl
lock
lods
loopne
nop
lahf
xchg
icebp
fidivs
roll
jg
enter
jmp
xor
or
pop
inc
fwait
mov
adc
mov
pop
lock
filds
sub
or
cld
ja
ljmp
dec
push
mov
or
mov
clc
decl
xor
fstps
loopne
mov
scas
das
sar
sti
pop
stc
xor
mov
test
xchg
jns
xchg
divl
lcall
pushl
push
popa
sub
lods
inc
adc
test
add
std
or
lcall
push
inc
test
push
add
jle
xchg
cwtl
and
or
jno
loopne
lahf
repnz
sub
aas
jno
mov
in
pop
ja
adc
neg
aam
mov
mov
decl
or
xor
loopne
cmp
jmp
sahf
push
pop
ljmp
inc
push
pop
loop
lods
pusha
and
jle
cld
addr16
in
or
and
pushf
sbb
mov
jb
sub
dec
mov
adc
dec
mov
lods
mov
into
clc
inc
insb
or
xchg
xchg
dec
sbb
mov
loopne
adc
push
fsubl
xor
outsb
lods
int3
pop
int
lods
inc
je
add
add
pushf
or
inc
fstl
divl
incl
mov
sub
addr16
in
jmp
data16
jg
add
mov
add
inc
sub
xor
das
clc
lcall
outsb
sbbl
push
pop
decb
call
mov
ja
and
fucom
rol
movsl
ficompl
xlat
mov
pop
sarb
lcall
orps
popf
lods
jae
fwait
push
lds
insb
test
scas
int3
push
or
push
push
mov
std
in
test
outsl
in
mov
mov
jae
jle
sbb
mov
imul
mov
fsubp
sarb
push
int3
mov
ljmp
sbb
sbb
ljmp
pop
cvtps2pd
into
test
inc
ja
or
jecxz
inc
pop
push
popl
jae
mov
pop
into
jmp
or
jo
fidivl
ret
in
scas
add
stos
loope
mov
ja
jmp
out
mov
xchg
out
dec
or
mov
movsb
push
xchg
mov
int
and
jl
push
ljmp
pop
xor
shll
jl
out
mov
jmp
fistl
mov
xchg
lea
lods
xlat
mov
outsb
enter
pop
sti
mov
pushl
in
aam
mov
insl
push
fsubr
hlt
jnp
adc
mov
stos
push
jl
sar
mov
in
dec
cmpsl
dec
jp
jbe
adc
sbb
mov
cmp
sar
call
out
insl
roll
push
dec
stc
lods
xchg
sub
icebp
sarl
hlt
sub
sti
pushl
push
sbb
sub
sbb
subps
addr16
imul
cmp
into
xchg
jg
ret
inc
jecxz
loopne
sahf
stc
clc
int
and
in
sbb
adc
movsb
push
push
pop
pushf
incl
insb
or
and
clc
mov
add
stc
mov
ljmp
je
or
inc
and
xlat
pushf
dec
lret
sbbl
es
push
inc
dec
or
xchg
scas
cmp
shlb
mov
pushf
sbb
xor
jbe
add
hlt
xchg
es
lcall
add
popf
sub
les
cmpsb
arpl
stos
mov
scas
jb
mov
cmpsb
pop
xor
mov
stos
and
adc
sbb
mov
pop
cmp
shlb
pop
add
fcomip
jg
add
mov
add
or
pop
jnp
adcb
ljmp
inc
shll
sbb
adc
mov
inc
les
pushl
sbb
jp
mov
push
ret
fs
ja
add
int3
pop
push
or
test
or
jmp
jno
addb
testb
and
and
jge
mov
jg
inc
adc
fidivl
sbb
loope
mov
jbe
xchg
dec
sbb
insb
repz
pushl
test
lods
push
mov
test
movsl
pop
xchg
sbb
jns
push
mov
call
pop
lret
jnp
cmpsl
in
mov
and
stc
mov
mov
or
mov
fisttps
push
test
in
js
jmp
fadds
pushf
gs
xlat
xor
pop
hlt
jmp
jecxz
xchg
sarl
cmpsl
and
ss
dec
sahf
scas
leave
test
ret
aaa
cwtl
sbb
incl
inc
push
sub
or
mov
push
call
in
push
inc
mov
sub
add
pushl
or
inc
xchg
gs
pop
mov
adc
sub
cmp
lcall
pop
lds
lea
int3
push
lods
stc
push
popf
inc
mov
rorl
mov
in
pusha
jae
mov
imul
int3
call
cmp
dec
mov
pop
inc
pop
ds
mov
jp
and
inc
or
and
mov
mov
lret
movl
hlt
enter
orb
push
dec
bnd
imul
aas
pop
jne
push
int
cmp
cmp
pop
lock
call
dec
pop
add
and
cltd
into
mov
mov
int3
decl
outsb
movsb
hlt
test
iret
mov
mov
mov
xchg
xor
jecxz
inc
enter
mov
lcall
ja
outsb
mov
lods
add
enter
mov
fdivrl
sbb
lods
jecxz
adc
rcll
push
mov
arpl
jle
cmp
jge
sbb
aam
mov
pop
es
fisubrs
int3
int3
ss
sub
pop
pushl
push
and
dec
js
push
or
inc
mov
xchg
jg
sub
jmp
lcall
stos
sub
test
fmul
pop
dec
jnp
pop
repz
pushl
arpl
cmpsl
sbb
push
cmpsb
icebp
js
dec
xchg
cmpsl
nop
inc
sub
and
insl
push
adc
pusha
ja
aaa
mov
mov
gs
subl
icebp
xchg
fcoms
scas
sub
call
hlt
loope
dec
sub
push
lock
mov
xchg
pushf
pop
es
call
mov
inc
push
in
pushf
bound
cmc
mov
arpl
rcll
std
and
xchg
mov
pop
mov
jae
pop
popa
fcomps
mov
call
mov
and
mov
push
push
nop
aad
test
xlat
jp
movsb
lret
push
data16
jg
mov
cmp
cld
comiss
hlt
jg
fdivl
jge
inc
jg
call
fistpll
push
xchg
popa
push
ret
push
es
cmp
decl
xchg
incb
testl
pusha
add
fists
in
pop
loope
mov
lcall
scas
adc
cltd
mov
cmc
xor
rorb
aad
xchg
jns
inc
jne
lret
incl
loop
mov
add
or
popa
mov
dec
or
xor
ljmp
add
xor
insl
mov
sub
call
sar
roll
and
dec
sarl
add
xchg
lods
mov
jp
ds
mov
call
xor
push
or
pusha
std
movsb
cmp
pop
data16
xor
cmp
push
mulb
or
jns
repz
imul
cmp
popf
call
xchg
rcrb
pushl
out
xlat
lds
push
cli
add
cmp
sbb
or
stos
lods
mov
and
fisubl
stos
rol
adc
sub
push
cmc
xchg
mov
xor
lcall
xchg
test
lcall
push
adc
jnp
inc
int
aas
fwait
mov
sar
icebp
inc
aad
xchg
stos
mov
out
pop
sub
lahf
loop
jnp
jbe
call
and
pop
fstpl
addb
js
fs
mov
cmp
inc
pop
stos
incl
popa
sahf
inc
xchg
mov
jle
gs
mov
xchg
cwtl
decl
decl
xchg
adc
fsubrl
fistps
movsb
xchg
iret
cmp
std
jg
decl
adc
ret
push
mov
cld
sub
inc
lods
shll
popf
mov
pushl
es
inc
es
sbb
xchg
stos
mov
mov
inc
mov
lcall
jge
push
sbb
shlb
inc
inc
loopne
pop
push
jno
js
push
add
inc
inc
xchg
add
outsl
lret
fwait
mov
cmp
cltd
cmc
xor
pop
stos
sbb
pushl
outsl
or
mov
sub
dec
pop
scas
insl
push
push
push
jb
test
sub
sbb
jmp
in
jp
lea
movsb
loopne
repz
cmp
dec
incl
scas
inc
subl
add
test
adc
int
out
mov
pop
loopne
std
dec
push
xor
mov
push
jle
fsubp
xchg
ds
push
je
add
cmpsb
sub
mov
push
call
and
cwtl
outsl
sub
pop
push
lcall
inc
fdivr
jge
test
and
sar
lahf
pushl
jae
jg
arpl
dec
dec
pusha
add
ja
cmp
pop
jmp
cmp
ret
movsb
ret
out
ljmp
cmc
nop
mov
imul
loopne
pop
inc
daa
mov
xchg
popf
jno
lock
ljmp
ss
add
stos
lods
mov
nop
in
push
pushl
mov
sub
fwait
xchg
std
jecxz
xchg
ljmp
jbe
enter
int3
and
ljmp
iret
mov
pop
jnp
push
adc
test
xchg
fnclex
repnz
pushl
mov
xchg
dec
push
or
into
push
addl
jmp
aas
and
imul
out
push
sbb
es
xchg
or
push
jb
mov
push
sarl
decl
sbb
mov
pop
leave
push
aaa
repnz
adc
in
shrl
mov
mov
inc
lods
test
ficoms
and
mov
or
ret
call
xlat
xor
mov
in
mov
xchg
cld
pop
idiv
mov
inc
xor
aas
push
rclb
jmp
push
pusha
mov
push
adc
dec
sbb
mov
pop
pop
jnp
xchg
scas
leave
out
lahf
ja
sub
dec
mov
push
call
and
aad
push
cmpsl
js
ljmp
test
add
lcall
mov
fstpl
cld
pop
xor
shrb
dec
jg
lcall
loopne
repnz
mov
xor
repz
repz
add
inc
in
mov
cmp
das
push
adc
xor
movsb
rolb
lret
pop
fimuls
push
movsb
or
call
out
shlb
stos
jb
ret
or
enter
push
mov
xchg
es
xor
jmp
pop
lret
or
sub
inc
jb
lock
fsubrl
sub
and
ljmp
cmp
out
mov
repz
pop
ret
sub
mov
inc
sbb
test
jg
iret
mov
dec
sbb
xor
mov
xchg
xchg
pop
lods
dec
and
cmpsl
jbe
ret
xor
cmp
cmp
mov
xor
rcrl
lods
mov
mov
jmp
jg
add
push
inc
jl
xor
loop
stos
in
idivb
dec
fucomp
jg
aam
loopne
mov
insl
leave
push
lds
lcall
sbb
call
int
xorl
inc
push
xchg
mov
dec
xor
loope,pn
ret
ss
inc
pop
pop
lds
test
imul
ljmp
sahf
jmp
int3
cmp
adc
push
push
dec
jnp
icebp
xor
repz
movsb
cmpsl
stos
pop
xchg
movsb
cld
decl
xchg
jb
sub
add
sub
adc
test
test
xchg
mov
adc
incl
aaa
push
loopne
in
adc
pop
shll
fdivs
xor
insl
jns
decl
negb
ficoml
push
jg
mov
mov
repnz
ffreep
call
cwtl
rorl
fidivrs
out
xchg
jmp
and
jae
jmp
imul
inc
shr
cmc
jle
mov
adc
jns
sbb
aas
pusha
pop
mov
andb
lods
mov
push
test
push
sub
shl
pushf
clc
and
push
in
ds
loop
cwtl
and
decl
sbb
push
fidivrs
hlt
addr16
lods
mov
movsb
inc
bnd
frstor
cli
mov
mov
aaa
mov
cmp
movsb
inc
mov
hlt
rolb
cmp
loopne
in
xchg
push
ljmp
cmp
mov
and
cmc
popa
movb
movsb
daa
push
imul
dec
hlt
out
adc
and
and
pop
sub
xchg
sub
loopne
cmc
cwtl
cmp
adc
fbstp
sbb
or
jb
es
gs
cmpsb
mov
cmp
add
ljmp
leave
cwtl
fcomps
adc
cs
addr16
enter
pop
and
push
stos
pushl
push
fwait
outsb
pusha
mov
clc
inc
test
jns
out
test
test
lret
and
sub
cs
push
jecxz,pt
fiadds
push
mov
call
insl
inc
lcall
enter
and
mov
lret
sub
jg
xor
pushl
stc
xor
pop
fcos
jecxz
lods
sbb
das
imul
dec
or
pop
bound
ljmp
insb
add
xchg
fnstcw
sub
movsl
in
lahf
xchg
mov
cmpl
xchg
ljmp
xchg
push
sub
inc
imul
xor
cld
and
dec
mov
add
incl
sbb
sbb
fs
jmp
arpl
stc
mov
lcall
mov
stc
testb
mov
push
aas
mov
leave
push
jb
or
push
inc
ljmp
jmp
add
push
popf
gs
dec
sti
xor
imul
push
movsb
mov
pushl
enter
pop
sub
cmp
mov
pop
push
mov
pop
and
push
ljmp
sub
and
das
sbb
xchg
testb
dec
pushl
icebp
jg
out
sahf
in
adc
inc
and
out
fldt
incl
lock
xchg
out
adc
jge
imulb
mov
repz
xchg
xchg
mov
decl
loope
iret
cmp
cmp
test
sbb
sub
or
jae
jmp
mov
sar
mov
cmc
call
adc
mov
jae
or
popa
gs
mov
sub
fucomip
mov
xchg
xchg
jnp
push
push
fimuls
aas
sbb
in
stos
add
idiv
incl
dec
sbbl
call
dec
or
jecxz
arpl
fmull
jb
lcall
adc
dec
adc
xor
jb
in
mov
jno
xor
jecxz
mov
in
jmp
flds
idivb
dec
and
imulb
clc
cltd
add
hlt
lcall
rep
xchg
xchg
rcll
je
mov
and
sbb
pusha
repnz
aad
fists
test
jns
hlt
scas
mov
decl
jmp
pop
mov
dec
jno
xchg
test
fwait
adc
imul
xchg
mov
ljmp
aam
lret
mov
sub
mov
sub
insl
mov
push
ud0
sub
and
in
push
shrl
stos
and
xor
jo
decl
xchg
icebp
jo
cmp
stos
push
imul
dec
xor
addr16
xlat
push
fdiv
call
jbe
cwtl
imul
push
xchg
cli
subb
mov
push
and
aam
into
jb
mov
ret
push
xlat
lret
or
repnz
mov
data16
jbe
sbb
fists
nopl
js
sub
xor
into
mov
cli
pushl
mov
pop
mov
adc
sub
out
cmc
inc
sti
jae
jg
addr16
out
inc
outsb
test
pop
push
push
ret
inc
cmp
daa
mov
mov
push
mov
pusha
jne
int3
mov
add
lock
cli
repnz
pop
je
hlt
mov
xchg
bound
mov
xor
mov
gs
cmp
pop
or
inc
int
orl
adc
mov
jo
div
rclb
mov
mov
and
dec
xchg
in
add
mov
mov
leave
mov
test
test
incl
loop
dec
into
sahf
das
pop
and
push
mov
stos
adc
xchg
jae
inc
das
lahf
test
js
sti
jmp
mov
bound
mov
inc
fs
shr
lds
and
xchg
xor
call
outsb
not
imul
pushf
test
and
ret
mov
xor
pushf
in
popf
pop
enter
xor
ljmp
or
inc
dec
pop
inc
outsl
xchg
nop
and
cmc
rcrl
setne
mov
je
dec
mulb
xorb
ja
mov
imul
jns
dec
add
mov
mov
sti
or
sub
sti
mov
mov
addb
sarl
loope
lods
push
xchg
dec
loop
test
pushl
daa
sti
mov
or
mov
faddl
xchg
push
inc
sbb
inc
inc
inc
or
pop
mov
call
or
aaa
xchg
mov
dec
dec
stos
out
das
cmpsl
cmp
loope
cltd
addr16
in
fisubs
popa
xchg
loope
sar
jmp
sbb
mov
dec
push
mov
mov
sarb
sub
cmp
fisubrs
add
xor
sub
popa
es
add
dec
pushf
mov
push
dec
js
jge
ja
jbe
test
and
cmp
dec
mov
fdivs
incl
sti
mov
inc
stos
in
dec
iret
out
add
xchg
and
dec
dec
fwait
adc
sub
jo
scas
fiaddl
or
xor
jecxz
xor
xchg
or
in
pop
inc
inc
repz
jmp
insl
sub
pop
and
outsb
test
jp
inc
shl
push
negl
push
push
stos
pop
fistpl
ljmp
int3
ljmp
jne
and
xchg
std
push
inc
sar
xchg
push
inc
testb
xor
lea
jne
xchg
pop
lahf
xor
push
and
dec
jg
out
incl
jae
ror
outsb
pop
fwait
jno
push
pusha
subps
fprem
dec
arpl
decl
xchg
sar
fwait
dec
mov
sub
int
lock
mov
add
mov
ret
sbb
cli
or
adc
jno
rcrl
in
jecxz
loop
js
mov
ljmp
dec
lock
mov
push
mov
push
data16
dec
add
push
mov
out
fs
lea
pushl
sbb
cltd
hlt
jmp
or
fcomi
adcl
cltd
testb
loopne
js
das
mov
mov
cmp
incl
loope
push
pushf
pop
lret
fimuls
out
dec
repz
imul
sbb
call
xchg
pop
clc
hlt
pusha
repz
cwtl
mov
push
xor
jmp
adc
cwtl
push
pop
or
std
push
xor
add
sub
mov
fidivl
mov
push
scas
fcoms
xor
push
cmpsl
insl
fcmovnbe
jmp
jae
push
sbb
nop
fildl
add
arpl
push
mov
xor
pop
cmp
jg
movsb
pop
mov
adc
push
sahf
rorb
pop
push
inc
lret
mov
mov
call
loopne
push
daa
sub
adc
or
popa
dec
fwait
adc
adcl
push
mov
scas
mov
cmp
pop
dec
push
aas
jmp
int
cs
into
subb
sbb
ljmp
cmp
cmp
sub
je
popa
jge
sbb
ret
mov
inc
jmp
jmp
cmp
or
add
dec
lret
negl
std
lods
mov
ds
lcall
jo
das
cmp
cmp
out
push
out
mov
fisttpll
mov
jmp
out
add
pusha
pusha
sub
xchg
xor
ret
inc
add
mov
rclb
and
jle
mov
sub
outsl
mov
rorb
jmp
sbb
jl
shll
add
mov
int3
sbb
and
lods
jbe
std
inc
out
stos
je
sbb
lcall
sbb
push
xchg
nop
sub
jge
fwait
loope
xorl
lret
xchg
out
faddl
decl
loop
push
fldt
insb
xchg
dec
test
pushf
jmp
mov
add
jge
cmp
lcall
js
jl
int3
popf
aaa
cltd
jae
cmpsl
sub
imul
ret
add
jg
sahf
ret
mov
pushl
add
mov
dec
cmp
pop
mov
psubsb
mov
push
pushl
jl
inc
imul
out
push
xor
xchg
clc
fdivr
cmp
mov
mov
decl
ds
jae
gs
jno
mov
jl
out
push
cmc
or
adc
outsb
aam
push
movsb
pop
pushl
cld
mov
push
out
testl
ja
sbb
adc
adc
int
stos
out
cwtl
jne
cwtl
ret
call
push
jecxz
mov
and
xchg
cmp
ljmp
pop
out
jo
push
setbe
sub
cld
or
jp
xchg
adc
movsb
mov
clc
xchg
or
xchg
sub
into
or
xchg
lret
decl
ficomps
out
out
add
idivl
mov
out
pushf
arpl
mov
ret
mov
cmp
xlat
pop
mov
fdivrl
rorb
roll
stc
sbb
jge
jmp
add
jns
push
or
adc
popf
dec
add
cltd
xor
sbb
pushl
lcall
cwtl
cwtl
pop
dec
xchg
jle
jo
lds
xchg
or
mov
push
sub
push
mov
push
jo
jg
scas
add
pushl
pop
cmp
dec
xchg
fimull
sbb
stos
push
add
shlb
movsb
mov
mov
mov
incl
lahf
negl
or
pop
loop
cmpsl
jle
popf
push
leave
mulb
dec
jmp
xchg
xchg
enter
gs
aas
out
insl
dec
sub
push
cmpsl
fs
sub
dec
pusha
mov
fldcw
push
stos
push
mov
xchg
notb
popf
xor
out
out
sub
push
cmc
lcall
out
js
add
pop
int3
push
adc
data16
mov
mov
lcall
cmp
ret
mov
lds
xor
xor
cli
sbb
mov
inc
call
je
adc
jae
mov
adcb
lods
jmp
lcall
cmp
scas
mov
clc
mov
out
xor
push
rolb
inc
aad
call
ret
rcrl
jne
add
xor
push
fiadds
aad
push
inc
sbb
cld
jg
pusha
cmpsl
mov
push
cmp
lcall
in
jl
into
or
pushl
stc
lahf
sbb
inc
and
push
scas
or
int
dec
adc
mov
cmp
and
inc
arpl
scas
sar
imul
stc
adc
fdivrp
jg
ljmp
int
out
cwtl
pushl
int
ds
movl
and
idiv
incl
push
sub
pop
mov
jns
cmpb
mov
mov
ljmp
ljmp
cmp
fs
xchg
xchg
push
or
outsl
inc
and
leave
stos
data16
jb
ucomiss
js
ljmp
addr16
xor
out
add
int
insb
in
ret
jnp
nop
in
xor
das
std
mov
outsb
out
out
xor
ss
xchg
and
inc
mov
ret
jmp
sbb
iret
lods
adc
dec
imul
aad
jl
or
xor
nop
jecxz
ljmp
pushf
dec
filds
sub
sti
iret
arpl
out
sahf
fstl
cmpsb
pushl
fists
or
scas
mov
loope
sbb
cwtl
imul
mov
je
pushf
lods
ljmp
jno
cmpsb
lret
sbb
shll
call
int
pop
loope
dec
popf
sbbl
xor
jle
push
or
ds
decl
xchg
mov
das
incb
mov
outsb
in
in
sub
cmp
ljmp
stc
shll
std
lods
sub
jge
fdivs
and
stos
dec
push
shl
mov
pusha
sbb
adc
cmp
inc
xlat
clc
mov
jo
aaa
mov
mov
pop
stc
push
mov
add
pop
dec
cmpsl
pop
push
xchg
ret
mov
xlat
cmp
test
sub
lds
inc
sbb
out
mov
adcb
xor
mov
inc
sbb
dec
mull
push
daa
xor
push
inc
jo
mov
repnz
incl
add
loope
iret
loope
daa
cmp
pop
test
es
fadds
daa
xchg
jge
imul
call
cs
jns
mov
push
adc
pop
arpl
je
inc
sti
not
push
ljmp
adc
fcomip
pushl
push
ljmp
and
adc
divl
cmp
and
push
sti
and
es
loop
jns
sub
in
push
lock
jb
movsl
loopne
ljmp
pop
jl
pop
push
lock
sub
hlt
aad
rcl
ret
jo
ror
mov
cli
decl
pop
cmp
sub
and
push
jmp
lock
push
ljmp
lds
lea
xchg
sbb
cmp
lret
mov
inc
pop
lret
xorb
inc
subb
pusha
sti
sbb
dec
adc
insl
push
lods
movsb
dec
outsb
adc
cli
jnp
sbb
js
xchg
or
dec
push
adcb
mov
jnp
jno
or
sub
loop
jmp
or
ret
fidivl
or
mov
stc
aad
mov
inc
ja
adc
and
sbb
outsb
mov
dec
outsl
aam
mul
inc
push
cmp
xchg
inc
pop
icebp
adc
out
out
and
test
loopne
sbb
out
dec
mov
jb
add
xchg
stc
ret
incl
lret
dec
repnz
repnz
les
mov
popf
pushf
jmp
call
sub
pop
xchg
in
cli
xchg
imul
pop
sbb
lods
xorb
jo
das
cli
jmp
fnstcw
dec
xchg
adc
adc
lods
or
iret
incl
jg
js
cmp
call
cmp
fwait
mov
fimuls
or
call
call
lds
test
nop
shll
fs
push
aaa
or
add
std
aaa
aad
or
std
in
cltd
adc
adc
fimuls
out
outsl
cli
push
data16
fidivrs
sbb
cs
loop
pop
decl
jg
frndint
sub
arpl
repnz
fstps
jg
inc
sbb
push
lock
xor
arpl
or
int3
mov
repnz
sbb
cmp
shll
mov
ljmp
mov
xor
popf
mov
aas
mov
push
mov
icebp
lock
dec
or
stos
sahf
xor
dec
rcrl
adc
mov
sbb
sub
and
je
sbb
enter
adc
jb
jmp
fs
int3
in
push
fwait
movsl
dec
movsb
mov
stos
dec
cmp
sar
call
jbe
mov
xor
arpl
shlb
mov
mov
jl
or
pop
outsb
inc
cmp
push
sub
dec
test
mov
xlat
orb
dec
test
imul
push
mov
mov
sbb
std
imul
pop
scas
jns
dec
pop
shr
fcos
dec
jmp
pusha
es
inc
xchg
fbstp
xchg
imul
in
pushl
mov
ds
shl
lods
jo
in
jge
jl
cli
push
lcall
jmp
mov
mov
cs
imul
jg
enter
cmp
inc
pop
cmpsl
outsl
cmp
xchg
inc
mov
fists
or
push
xchg
ret
lcall
and
scas
xchg
add
push
aaa
hlt
hlt
cmpsl
adc
push
scas
mov
incl
enter
push
xorl
repnz
lret
jmp
cmpsl
stc
mov
push
xor
sub
pusha
sub
sbb
push
jl
shll
movsl
loop
dec
pop
lods
cld
jg
jge
int
xor
aaa
data16
sbb
jmp
adc
push
push
out
stos
test
jbe
js
mov
mov
movsb
jmp
aam
add
or
pop
pusha
fdivrl
and
call
ja
adc
xchg
dec
addr16
xor
xrelease
daa
dec
decl
stos
jb
or
shll
pop
pop
ss
decl
dec
push
pop
insl
inc
ljmp
clc
sahf
dec
daa
mov
xchg
adc
lods
mov
jne
mov
mov
subl
dec
cmp
fiadds
adcb
push
push
push
jg
jmp
mov
mov
jmp
jle
outsb
je,pt
push
loop
adc
jne
adc
lock
test
out
stos
test
mov
pop
gs
insl
lret
popa
inc
dec
lret
pusha
mov
in
jg
lret
mov
dec
gs
bound
insl
shrb
cld
mov
add
aaa
out
lcall
dec
sub
pushl
stos
or
cld
or
or
call
cmp
pop
sbb
call
xchg
loope
add
stos
pop
mov
jge
aaa
and
mov
es
add
outsb
cmp
ja
fstl
add
and
mov
fdivl
js
push
lret
push
inc
shr
xchg
stc
sbb
push
in
cmp
xchg
inc
loope
jmp
in
idivb
pop
jge
in
test
notb
push
adc
cmc
jnp
push
push
ljmp
xchg
sub
jno
movsl
dec
cmp
es
cmp
xchg
sarb
in
jecxz
ja
push
sar
jmp
mov
cmp
add
loop
push
xor
sti
dec
enter
imul
inc
inc
push
int3
push
jl
daa
dec
sub
in
pop
xor
pushl
scas
adc
fmul
enter
pop
xor
adc
sbb
int3
fwait
mov
dec
jmp
jp
mov
mov
mov
and
mull
and
out
fdivr
jg
pop
sbb
pop
aas
adc
add
fwait
add
mov
and
mov
dec
push
enter
push
xchg
leave
lret
imul
cltd
aaa
mov
in
out
call
push
inc
out
pop
aas
test
jl
xchg
jge
hlt
sbb
pop
or
das
fdivr
decl
and
xchg
mov
xchg
xchg
loopne
out
stos
cmp
ljmp
out
clc
andb
jb
jno
cltd
stos
cmp
mov
jmp
scas
dec
les
push
call
das
dec
and
jg
mov
sbb
cmp
imul
dec
es
adc
pop
sbb
cmp
mov
stc
xchg
sub
sub
xchg
lcall
enter
push
fdivl
mov
push
dec
outsb
add
jge
sub
ljmp
xchg
pop
lods
popf
pop
sbb
subb
cmp
jl
add
shl
iret
pop
push
add
sti
xchg
dec
cmp
lock
stos
mov
sbbl
xchg
mov
arpl
scas
out
ret
and
imul
test
mov
pop
jbe
push
pop
daa
mov
es
xchg
insb
push
call
ret
fldenv
xchg
bound
cmp
xor
sbb
gs
adcl
lahf
push
xchg
mov
incl
push
sahf
adc
ret
es
inc
cs
outsl
clc
sbb
and
test
clc
jg
les
add
test
pop
loopne
adc
in
xor
xchg
and
sub
out
mov
pusha
cmpsl
and
jge
xchg
pop
jmp
push
lods
cmp
fmul
jbe
movsl
sbb
dec
xorl
std
addb
aad
scas
call
rolb
or
or
jg
fidivs
pop
dec
add
mov
jg
pusha
nop
popf
adc
lcall
mull
pop
lret
pop
jp
or
orl
jbe
out
hlt
pop
das
cli
xchg
out
fimull
cmp
int3
adc
pop
mov
jnp
adc
pop
data16
or
decl
dec
xchg
mov
mov
xor
dec
test
mov
mov
lahf
orl
add
outsl
pop
pop
cmpsb
test
xor
int
mov
jmp
lahf
mov
testb
fisubrl
sbb
loopne
jle
mov
jnp
ljmp
decl
rorl
lahf
inc
xlat
andb
mov
push
cmp
out
inc
jo
fdivrs
aam
mov
xorb
out
pop
mov
xchg
stos
jecxz
mov
jns
mov
pop
xchg
insl
rol
add
mov
or
call
rcrl
pop
sub
dec
mov
dec
fisttpll
mov
xlat
cld
decl
lock
pushf
adcb
mov
xor
decb
pop
mov
pop
out
fsts
adc
fcoms
into
push
movsl
in
push
jle
xor
in
lcall
lds
lcall
lahf
add
cltd
add
ja
xchg
mov
xchg
incl
cld
jmp
loop
and
sub
lock
jno
jl
ljmp
xor
push
and
push
add
jo
push
es
mov
sti
bound
cmp
pushl
dec
ret
dec
dec
push
cmpsb
adc
push
bound
scas
mov
add
pop
pop
lock
ljmp
shrb
add
shl
jg
mov
sbb
inc
rorb
fbstp
lahf
test
rorl
cli
jo
out
aas
add
lods
push
jge
fsub
xlat
jmp
orl
and
in
add
sub
sub
out
jecxz
or
adc
in
jmp
mov
je
pusha
popa
in
addr16
cmpsb
es
ret
sarl
dec
and
cmp
jb
mov
adc
cmp
pop
push
loop
add
push
or
cmp
movsl
inc
mov
fwait
push
pop
xor
and
data16
jmp
adc
icebp
or
sbb
sub
les
xchg
add
cli
adc
or
fwait
xlat
push
and
in
and
incl
iret
andb
fldt
fwait
lods
clc
jnp
mov
gs
insb
cltd
inc
dec
lcall
sbbl
arpl
sbb
jmp
jecxz
out
add
call
daa
call
push
test
adc
add
push
adcl
mov
mov
test
mov
mov
or
mov
cli
xor
push
loope
jb
inc
cmp
ljmp
jp
add
dec
push
mov
sub
add
adc
sbb
sti
dec
ja
sub
xchg
dec
lahf
cmp
jo
out
xlat
lds
sbb
int3
insb
dec
ja
loop
xchg
icebp
out
push
and
fcmovu
sub
call
in
les
dec
inc
ds
and
or
fs
xchg
jecxz
mov
ljmp
adc
hlt
pop
div
push
repnz
les
mov
in
or
push
push
jp
stos
inc
adc
mov
xchg
pop
test
mov
add
add
or
sarb
sub
pushf
mov
pushl
add
mov
les
and
movsl
mov
mov
pop
std
mov
fisubrl
inc
das
jns
push
js
mov
adc
arpl
xchg
imul
js
paddusb
fwait
jns
push
stc
insb
mov
call
cwtl
or
jle
ficoms
insb
ret
ds
jnp
dec
outsb
pop
sbb
cwtl
pusha
or
mov
call
das
xor
cmpsl
add
insl
cld
decl
pop
or
stos
sub
lea
mov
addr16
or
push
xchg
addb
cmc
in
ret
xchg
push
lcall
sahf
fucomp
or
sub
mov
scas
adc
mov
adc
dec
xor
into
out
lahf
xor
sub
aam
test
mov
mov
int
push
dec
shrb
push
daa
ss
out
sub
sub
mov
test
mov
ds
sub
aas
xor
and
nop
jb
lods
mov
mov
inc
mov
inc
sub
daa
sbb
dec
adc
aas
inc
sbb
push
mov
xchg
std
jbe
fldt
shll
xchg
rcr
adc
push
cmp
call
ss
rep
ret
xlat
xlat
cli
bound
sti
lods
sbb
loope
xchg
xor
push
pusha
jmp
and
ljmp
addb
aas
inc
mov
sub
stc
or
lret
aas
pop
or
add
call
mov
nop
or
movsb
clc
lcall
loop
shll
pop
int3
ret
and
outsb
loope
stc
cwtl
pop
mov
ljmp
je
adc
sti
push
dec
pop
dec
call
add
decl
lock
mov
dec
loope
sub
jmp
push
sub
lahf
fwait
hlt
xor
imul
inc
push
andb
dec
xor
sahf
and
out
cs
and
lcall
ss
inc
mov
mov
mov
jge
cwtl
or
fisttpll
shll
fwait
mov
decl
add
inc
repz
jo
sbb
mov
push
or
lcall
clc
mov
rclb
mov
jb
pusha
lds
into
dec
leave
push
mov
call
call
cmp
xor
or
in
push
subl
push
lcall
out
imul
inc
xchg
repnz
dec
fcomps
addr16
lret
fbstp
decl
or
or
mov
xchg
je
js
mov
pop
add
sub
incl
mov
push
mov
add
cmpsl
daa
adc
add
mov
ljmp
bswap
std
xchg
ficompl
push
xor
lcallw
loopne
testb
jg
decl
insb
cmc
adc
cwtl
je
inc
cmpsb
js
push
xor
shr
gs
divl
jmp
fs
out
pop
dec
xlat
outsl
xchg
dec
int
idivl
vaesdeclast
sbb
test
mov
loopne
inc
fs
push
scas
inc
mov
pop
movsb
inc
stos
sbb
add
mov
fstl
dec
mov
jnp
inc
das
mov
ja
in
lret
into
adc
data16
mov
pushl
dec
aas
ljmp
sub
jp
cmp
xchg
testb
lea
decl
aam
mov
bound
cwtl
push
in
je
iret
test
jg
inc
dec
iret
dec
adc
mov
decl
push
fsubrl
aad
xchg
push
mov
gs
or
sbb
push
pusha
pop
pop
fstpl
xchg
rclb
shlb
lahf
sbb
jns
les
lcall
mov
call
inc
mov
lcall
xor
dec
test
pushf
pop
mov
out
pusha
hlt
push
bound
loop
sti
fnstenv
inc
or
lcall
inc
mov
lds
xchg
cmp
push
or
je
call
cmp
jmp
jne
xor
into
cli
rol
push
inc
and
mov
dec
fidivrl
cld
dec
mov
out
jno
test
mov
stc
sub
loope
jo
call
loop
pop
push
xchg
xchg
bound
xchg
jle
sub
outsb
lret
sti
js
xchg
incl
cld
push
es
mov
enter
inc
xorb
jecxz
lret
movl
insl
sub
stos
or
sub
adc
shlb
and
call
pop
xchg
in
inc
arpl
andb
sbb
data16
mov
scas
adc
call
adc
xlat
cmp
test
in
pop
scas
leave
add
add
lret
and
stc
push
roll
cmp
xchg
dec
pop
inc
insl
mov
jg
push
or
sbb
in
sub
in
std
pop
add
add
lock
out
or
les
ljmp
lods
fcomps
negb
mov
and
jmp
incl
call
and
push
pop
in
int
insb
addr16
cmpsl
lods
leave
dec
sub
inc
decl
adc
pushf
enter
xor
stc
mov
hlt
sub
jle
cmpsl
adc
jne
push
daa
pop
gs
in
push
rol
jb
push
or
mov
idivl
decb
pop
ficoml
es
mov
aaa
cld
incl
or
push
loope
cmp
ss
xlat
push
cli
sub
xchg
aam
add
mov
mov
stc
into
push
inc
repz
jb
orb
mov
movsl
cwtl
decl
xor
divb
xor
xor
jecxz
clc
mov
xor
call
mov
mov
cmp
insb
pop
jecxz
insl
mov
lret
call
cld
iret
push
sub
sbb
dec
pop
fwait
cmp
cmpl
out
test
pop
jl
mov
add
fwait
and
gs
sbb
fs
lcall
outsb
iret
fcmove
movsb
rclb
jg
mov
sub
hlt
fxtract
add
xor
adc
inc
pop
xorl
aam
or
mov
ds
sar
dec
add
outsl
pop
pop
mov
inc
xchg
int
popf
out
loope
shlb
fisttpll
xchg
mov
sub
cmpsb
ljmp
mov
call
push
pushf
xchg
shl
inc
cmp
xchg
fwait
cmp
sub
mov
jle
jmp
xor
lds
ds
mov
into
add
pushl
pop
arpl
ja
iret
out
ffreep
pop
loopne
mov
mov
pop
aas
jmp
cmpsl
cld
arpl
sti
in
or
cmp
push
jmp
adc
mov
cli
cmp
lea
ljmp
ljmp
sahf
enter
jb
lea
pop
jb
sub
push
lock
int
xchg
cld
incl
out
push
sbb
outsb
adc
rcrl
sub
je
mov
add
inc
leave
sbb
mov
jg
leave
insl
fcomps
ret
mov
out
ret
sub
cmp
inc
aam
jge
stc
jb
push
mov
lea
inc
push
loope
sbb
lret
outsb
jl
fsubs
cmp
and
fbstp
imul
inc
mov
lahf
std
inc
jp
xor
mov
pop
cmc
jl
or
mull
and
dec
mov
jbe
pop
push
mov
xor
lcall
gs
push
arpl
xchg
scas
test
aad
xor
lcall
jmp
inc
mov
daa
add
sbb
push
decl
add
and
jbe
dec
lret
scas
outsl
cmp
filds
vmwrite
out
std
incl
cmpsb
test
pusha
xchg
loope
rcr
outsl
mov
js
insb
sbb
mov
push
nop
push
mov
pop
cmp
mov
rcrb
mov
pushl
xchg
xchg
jp
or
dec
xchg
inc
shll
push
fisttpl
in
in
xchg
jne
fwait
xchg
or
ljmp
xor
out
cltd
mov
insl
insl
xchg
lods
stc
int
mov
xchg
jmp
addr16
cmpsb
mov
insb
imul
and
pop
mov
cwtl
mov
repz
jmp
dec
xchg
add
imul
push
dec
jge
mov
jmp
ljmp
add
fs
call
or
fldt
js
pop
or
dec
push
dec
mov
xchg
fstpt
adc
fnstenv
jecxz
push
and
call
stos
inc
gs
test
push
jns
jo
and
jg
pushl
and
or
pop
or
aad
adc
fidivrl
in
ret
call
cs
and
ds
xchg
xlat
addb
pop
push
pop
fsubr
add
std
push
addb
in
iret
sub
repz
lea
mov
pop
pop
in
jp
addr16
sbb
cwtl
ljmp
mov
mov
cmp
push
inc
inc
in
push
mov
jbe
inc
movb
nop
pushf
cmpsb
cli
dec
popa
popa
loop
fisubrs
adc
ljmp
inc
repz
add
pushf
push
repz
notl
mov
sbb
sbb
mov
repnz
test
enter
pop
sbb
loopne
js
das
xor
xchg
sbb
hlt
mov
incl
negl
insl
lods
and
loope
jp
arpl
mov
and
xor
inc
faddl
inc
lods
loopne
pop
inc
mov
pop
dec
push
jmp
pusha
fldenv
insl
mov
rolb
jecxz
cmp
cld
dec
xlat
adc
lea
cmp
inc
cmc
hlt
sbb
cmp
cmp
decl
dec
imul
push
mov
jo
ret
dec
mov
cmp
shrl
inc
rorb
cli
outsl
push
mov
inc
jecxz
mov
stc
lds
mov
and
sbb
mov
cmp
sti
andb
movsl
push
stc
rcll
pushf
gs
jp
mov
push
jle
icebp
mov
test
imul
outsl
jl
movsb
test
or
dec
das
mov
addb
inc
test
push
stos
out
jmp
jnp
sub
shll
cmp
dec
jecxz
pop
clc
fildll
xchg
in
addr16
xchg
xchg
lock
cmp
test
sbb
or
jne
and
aas
data16
inc
les
ret
and
and
in
call
cld
jmp
lods
dec
xchg
mov
fisubrl
outsl
push
mov
aam
add
decl
or
jge
mov
inc
jecxz
mov
es
push
outsl
dec
mov
jmp
imul
iret
lods
insl
in
sub
sub
push
xchg
cs
mov
push
cmp
call
jecxz
cld
push
pusha
adc
fsubl
cmp
dec
pusha
push
jnp
push
scas
sahf
mov
aad
lret
jecxz
dec
push
push
loopne
hlt
lea
jb
cwtl
arpl
jns
ds
ljmp
ret
hlt
leave
or
sub
jb
fwait
cld
cmp
pop
and
xor
sti
mov
gs
xlat
fists
add
inc
das
mov
xor
xor
fildl
cmp
rorb
sarl
loope
sub
mov
orb
jecxz
aam
jg
mov
aad
dec
inc
sbb
inc
jnp
sub
xchg
or
jmp
cli
ja
pop
push
repnz
jmp
stos
cmpsl
fs
pushf
push
std
gs
xchg
faddp
inc
xor
lcall
call
fcmovnb
rol
and
mov
mov
jbe
es
test
lock
decl
movsl
fisubl
xchg
sbb
xor
pop
mov
ljmp
jge
jnp
cs
sbb
xor
cli
cmp
and
std
inc
lods
adc
mov
cmpsb
cmp
loopne
or
data16
movsl
jb
sbb
incl
sbb
fidivrs
sbb
stc
icebp
push
jle
outsb
jmp
inc
adc
jmp
pop
pop
sub
xor
test
call
push
mov
icebp
in
lds
push
test
or
scas
add
push
jl
sub
pusha
rorb
scas
iret
jb
push
jnp
adc
and
popa
or
mov
ret
jge
gs
pop
adc
lahf
ds
xor
incl
mov
mov
or
push
pop
les
fwait
xor
mov
ljmp
sub
and
jge
mov
aad
pop
xchg
mov
mov
repz
xchg
mov
dec
ud0
incl
iret
pop
xor
aaa
or
jb
daa
insl
fdivs
jo
call
push
in
jp
inc
pushl
mov
sub
sub
std
test
fistl
mov
mov
mov
dec
push
inc
lret
sbb
jge
out
push
mov
pushf
arpl
pusha
imul
mov
gs
inc
adcb
sub
pop
mov
mov
dec
dec
xor
sbb
dec
and
or
mov
cli
push
sub
bound
and
jl
daa
sarb
and
jle
pop
in
shr
inc
mov
stos
or
ja
adc
ljmp
movsb
pop
mov
or
pop
lret
addr16
cmp
insl
mov
jg
xor
dec
lcall
arpl
subb
xlat
insl
hlt
dec
movsl
shrb
dec
or
scas
mov
sti
mov
mull
jecxz
ficompl
gs
push
lahf
dec
std
adc
pop
js
jmp
xchg
outsl
sbb
mov
push
mov
jp
out
clc
mov
rcl
xchg
mov
mov
mov
jo
push
jo
dec
mov
mov
mov
cmp
jns
and
lret
lret
push
cld
nop
jle
or
add
dec
mov
dec
fbstp
mov
cmp
xor
inc
add
out
dec
xor
decl
scas
jnp
cmc
outsb
inc
les
xchg
xchg
add
sarb
fbld
jnp
push
nop
mov
call
std
xchg
jns
mov
or
mov
pusha
jle
sbb
inc
push
sbb
push
push
push
push
xor
pop
jns
pop
sub
mov
mov
in
add
dec
ss
js
js
xchg
xchg
sbb
movsb
and
xchg
jno
xlat
insb
add
jge
ds
and
lret
inc
push
mov
ljmp
adc
or
mov
inc
push
cmpsl
cmp
repz
cmp
dec
mov
sub
add
imul
or
xor
test
sti
in
addr16
shlb
sub
xchg
mov
in
loop
loope
pushl
test
pushf
int3
pushl
jmp
add
mov
pop
lods
out
lcall
mov
outsl
shrl
popf
inc
and
idivb
ja
insb
or
testl
inc
adc
scas
and
int3
hlt
sahf
jo
and
fwait
xor
inc
lcall
pop
sub
sub
cltd
pusha
mulps
cmpsl
lds
fwait
aam
pop
loopne
shrb
add
lahf
cmp
inc
xor
std
adc
jmp
mov
xchg
fwait
push
mov
mov
and
repz
mov
bound
scas
lods
pop
add
pop
in
mov
call
testl
jnp
mov
fstpl
mov
xor
pop
out
jmp
xchg
in
dec
pushl
lahf
cmpb
lahf
adc
ret
and
mov
sub
xchg
xor
or
lcall
mov
ds
sub
xor
pop
test
jmp
fildl
vstmxcsr
mov
pop
mov
test
std
jmp
sub
popf
inc
pushf
aam
mov
jb
jecxz
mov
xor
cmp
dec
mov
adc
loope
pop
rcll
fwait
int3
scas
leave
aas
out
jo
js
pop
mov
jbe
mov
xor
lcall
sub
xchg
ret
mov
adc
dec
dec
mov
cmp
mov
push
fwait
cmp
stos
call
and
daa
inc
inc
dec
jnp
adc
scas
scas
pop
push
mov
pushl
mov
idiv
push
fisttpl
mov
inc
sahf
push
mov
out
sbb
mov
fcompl
pushl
scas
int
mov
jmp
mov
ja
jmp
add
mov
or
jl
repnz
das
clc
jg
jno
lea
in
ja
pop
scas
or
movups
sub
jl
sbb
lcall
js
insl
dec
cmpsb
add
das
je
movsl
or
dec
xor
inc
dec
mov
push
mov
jg
call
adc
icebp
push
dec
jmp
addb
repz
incl
rolb
mov
mov
rcl
push
cwtl
outsl
mov
popf
ds
lret
clc
fcmovnb
rclb
incl
into
adc
imul
ds
and
out
ss
mov
mov
stos
fbld
fisttps
decl
push
or
das
and
sahf
add
imul
jge
jne
cld
sub
jmp
hlt
xor
mov
sbb
sbb
push
addr16
mov
call
aas
testl
and
mov
sbb
out
and
lcall
jge
shlb
sbb
lret
scas
push
jae
dec
or
xlat
pop
cld
pushl
push
pushf
cwtl
pop
rcl
mov
xchg
jns
mov
jg
pop
mull
sub
sahf
bound
cs
loop
xchg
decl
inc
or
icebp
popa
jle,pn
divb
jnp
sbb
fldl
scas
pop
fcomip
incl
data16
subb
jno
dec
testl
ljmp
mov
cmp
or
dec
out
ficomps
rolb
test
mov
repz
nop
push
sbb
test
inc
xchg
scas
mov
xor
ljmp
add
stc
jo
test
xchg
sub
imul
das
pusha
jo
int3
pushl
popa
stc
sub
ja
lret
cltd
dec
and
pop
and
pop
lret
sub
adc
ljmp
sbb
sbb
dec
int3
stos
scas
pop
ficoml
pop
in
pop
xor
sub
ljmp
jg
imulb
xchg
popa
repz
sub
dec
mov
decl
cltd
or
stc
sti
mov
lahf
lea
aam
xchg
or
push
jne
mov
dec
sub
fcompl
pop
sub
movl
and
jg
sbb
lea
out
cli
incl
in
or
ss
int3
outsb
cmp
aas
les
dec
sahf
mov
nop
test
mov
jbe
in
mov
dec
iret
sbb
inc
out
iret
mov
cs
adc
out
cli
pushl
dec
sarb
sbb
shl
jle
enter
mov
inc
sbbb
mov
cs
push
pop
hlt
and
mov
out
and
stc
sbb
push
arpl
inc
sub
jb
mov
push
push
xchg
test
scas
mov
fistl
decl
sub
fcompl
lock
or
push
push
cmp
movsb
mov
xor
inc
fisubl
ljmp
dec
dec
and
xor
fs
lret
adc
sub
xlat
pop
jmp
mov
xor
lahf
loopne
addr16
adc
test
out
clc
pushl
in
xorl
insl
dec
mov
cwtl
or
fs
ljmp
sub
add
mov
stos
cld
shrl
sub
ljmp
xor
push
mov
lds
mov
repnz
cmp
nop
mov
mov
test
sbb
insl
ljmp
cmp
inc
cmc
add
out
cli
ss
pop
lock
call
add
scas
xchg
adcl
repz
nop
push
icebp
fstp
mov
sub
nop
pushf
ljmp
mov
enter
mov
add
mov
cmp
pop
into
decl
jnp
xchg
popf
push
sbb
sbb
mov
shlb
das
test
fldln2
adc
movsl
inc
pop
sbb
ficoml
sub
push
sbb
pop
cmc
mov
incl
xchg
add
mov
pop
push
jle
cs
inc
cmp
add
mov
decl
push
repnz
clc
in
pop
clc
rol
fsubs
or
pop
dec
mov
cmp
insb
and
jmp
cmp
pop
and
pop
dec
ret
icebp
sub
sbb
outsb
filds
in
pop
cmovbe
call
cmpsb
gs
pop
loop
test
mov
jmp
jg
inc
jno
cli
mov
pop
push
mov
outsb
mov
jb
hlt
loop
dec
xor
incl
jge
jbe
jg
sbb
ret
push
lds
and
aad
ret
or
decl
lock
pop
jns
mov
adc
push
mov
push
cmc
call
ljmp
jp
ret
add
rcrb
sahf
xchg
stc
and
fistpll
inc
pop
dec
stc
and
sbb
in
push
fisubrs
cs
sbb
rcll
ja
movsl
push
test
negl
stos
pop
push
inc
dec
fs
push
adc
call
stc
repnz
jmp
int
test
sbb
pop
mov
push
jecxz
int
decl
pop
add
sub
ret
lds
jle
sub
out
pop
scas
jp
addl
inc
cmp
jne
add
dec
push
fdivrp
lcall
outsb
dec
lret
andb
and
dec
push
gs
cmpsl
add
adc
cmp
insb
ljmp
and
cli
scas
repnz
sti
lods
adcb
fbld
jg
or
lret
in
pusha
cmp
test
aaa
adc
sbb
popf
cmc
and
loop
fists
mov
mov
ss
cmp
adc
sub
mov
mov
lret
sub
pusha
jge
mov
scas
or
fwait
and
xchg
lcall
fldcw
push
or
xchg
mov
frstpm(287
sub
out
lret
cmp
mov
add
sub
dec
roll
jb
mov
lcall
incb
push
fidivl
in
sub
sub
in
call
push
call
addr16
scas
inc
sahf
lcall
inc
arpl
pop
add
lock
ljmp
sbb
xchg
cmc
sub
adc
adc
subl
aas
push
or
incl
pop
mov
push
stc
loop
mov
adc
pop
mov
xchg
mov
mov
pusha
adc
iret
pop
and
jp
cld
js
pop
test
and
out
dec
rorb
cmc
shl
xchg
xchg
xchg
cmp
je
push
fs
ss
std
popf
outsl
pushl
lret
pop
fldcw
adc
mov
mov
icebp
sbb
mov
ljmp
pop
xor
add
and
push
sub
and
jmp
out
pushl
fldcw
fmull
jnp,pn
arpl
aad
imul
enter
outsl
out
cli
mov
mov
xchg
pop
mull
loope
cmp
mov
sub
push
cmpb
inc
sub
inc
pop
incl
test
dec
loopne
sbb
dec
adc
leave
lea
adc
xchg
std
push
inc
mov
nop
mov
ficomps
cmp
sub
cli
jp
ret
adc
push
xor
insb
xlat
flds
push
pop
arpl
dec
inc
rorb
xor
shll
jne
xor
push
cmp
mov
jg
js
dec
mov
sub
sbbb
push
fcompl
dec
dec
xchg
mov
shr
incl
sbb
push
jb
push
stc
or
xchg
push
mov
loopne
mov
pop
icebp
mov
mov
mov
cmp
fnstenv
insb
scas
cli
inc
inc
xchg
in
cmp
or
cli
insl
pop
mov
add
cmp
loop
mov
cmp
mov
push
push
imul
fdivl
sarl
cmc
stos
cmpsb
pop
aas
dec
sar
mov
pop
outsb
sbb
jg
jo
loop
gs
xor
jns
mov
pop
adc
dec
nop
add
fsubrp
fs
mov
xor
inc
fwait
daa
pop
and
cmp
loopne
xor
lcall
jns
scas
pushl
js
xchg
xor
jnp
pop
pop
ljmp
neg
mov
pop
ret
hlt
aas
shrl
lcall
fstps
cmp
cmp
test
scas
mov
insb
fildl
into
bound
stc
fsubr
mov
movsl
out
push
and
in
leave
push
in
xorb
incb
imul
decl
mov
stos
cli
out
sbb
repnz
sbb
scas
dec
pop
incl
lahf
jb
ds
add
lea
jle
xchg
jle
xchg
sbb
decl
cmp
cwtl
imul
daa
jg
push
into
lret
cmc
jge
aad
mov
sahf
mov
ljmp
mov
popf
cmpsl
shr
add
insl
test
lods
sahf
sbb
lcall
cmp
and
out
daa
mov
incl
dec
iret
nop
add
iret
jle
iret
mov
sub
pushl
inc
test
or
out
mov
mov
ds
sete
insl
sbb
pushl
std
cmp
or
sbb
mov
add
adc
pushl
outsl
mov
xor
lcall
shl
or
sub
ret
in
jg
cmpsb
inc
sub
les
dec
das
mov
fisubs
pop
lds
outsl
shrb
or
or
push
jbe
jne
wbinvd
inc
gs
psrlw
ljmp
gs
js
mov
lods
push
lods
not
xchg
jg
movsl
in
or
xchg
lods
rclb
leave
sub
gs
push
rcl
adc
daa
xchg
decl
cld
rorb
adcb
es
dec
mov
xchg
inc
add
stc
cmp
pop
roll
mov
mov
push
jle
xchg
cmpsl
sub
mov
pop
mov
mov
imul
call
push
xchg
inc
xor
loope
cmp
xor
cmpsl
pop
mov
pushf
ja
mov
push
and
std
or
repz
cmp
jns
ljmp
push
out
movsl
arpl
rolb
cwtl
jbe
negb
dec
cltd
dec
sub
adc
out
scas
aam
push
call
mov
into
fwait
inc
jl
mov
icebp
inc
stos
aam
out
cmc
bound
mov
insb
je
mov
bound
mov
aaa
cmp
dec
lock
xchg
adc
mov
mov
pop
lret
mov
call
andb
in
mov
mov
dec
lcall
arpl
std
pop
inc
ds
mov
jmp
sub
cmpsb
inc
dec
push
insb
inc
lds
aam
jp
xchg
and
mov
stc
loope
icebp
pop
loopne
pushl
stos
mov
rcll
sbb
dec
pop
ss
push
mov
xchg
int3
loop
mov
stos
mov
adc
dec
dec
mov
jmp
add
dec
pop
ja
call
pop
ret
add
cmpl
jg
xor
hlt
pop
or
orl
addb
or
jnp
ljmp
test
inc
jmp
mov
fyl2x
idivl
popa
push
arpl
js
pop
popa
shlb
out
pop
insb
arpl
lcall
mov
decl
xchg
jp
inc
and
mov
leave
mov
lret
sub
ljmp
loopne
and
jmp
pushf
mov
add
stos
lret
or
call
insb
out
xchg
int3
in
cwtl
jo
dec
movsl
cmp
pop
mov
shrb
andb
inc
push
ljmp
stos
mov
sbb
jae
popa
decb
push
cmpsl
and
cmp
mov
adc
movsb
sahf
faddp
mov
icebp
es
out
adc
lcall
push
xchg
stos
mov
rol
jg
loope
inc
fcoms
jo
mov
or
popf
lcall
inc
add
in
sahf
popa
xor
dec
jg
jno
nop
and
xor
mov
scas
mov
mov
adc
or
jae
jns
sbb
xchg
lcall
pop
lods
sub
cltd
fstps
daa
or
mov
push
mov
xor
test
call
loopne
fwait
mov
clc
add
cmp
fmuls
les
insl
pop
lock
jo
xor
xor
cli
es
pusha
mov
call
out
insb
ret
shrb
outsl
mov
sub
push
jae
ja
sub
dec
adc
ljmp
pop
or
sbb
repnz
aaa
std
addr16
call
adc
ljmp
cmp
pushl
imul
mov
sbb
in
mov
add
jmp
arpl
aad
ljmp
imul
xchg
rcrb
dec
xlat
dec
pushl
fnstcw
cwtl
cmpsl
dec
mov
pop
mov
xlat
fwait
scas
push
inc
clc
jmp
add
in
pop
inc
jl
in
out
jge
fcmovbe
jne
pop
push
aad
pop
mov
fcomip
out
jbe
testl
daa
dec
or
out
icebp
out
mov
inc
xor
cmpsb
js
dec
cld
out
mov
lcall
popf
subl
aas
out
pop
insb
inc
jmp
fsub
stc
out
ljmp
cmpsl
or
mov
xchg
loopne
push
pop
xchg
in
cmpsb
or
aaa
push
roll
inc
add
add
cld
jg
add
mul
jg
jae
sub
pusha
fs
enter
add
mov
lret
pop
das
xchg
lahf
enter
mov
ss
sti
dec
out
nop
push
push
sub
xorl
incl
adc
das
push
jge
push
andb
clc
mov
add
lret
cmp
aam
mov
add
call
std
test
add
cmp
mov
or
loop
jo
dec
jge
add
loop
mulb
leave
pop
adc
mov
push
loop
fidivl
xchg
mov
call
out
cmpsb
pop
push
xor
loopne
add
inc
ds
out
add
dec
std
adc
lcall
outsl
adc
iret
and
jg
jg
rolb
flds
dec
or
add
insl
cs
incl
lods
push
cli
jle
shll
inc
jb
push
and
negb
mov
repnz
ss
cmp
pop
mov
scas
mov
push
loopne
or
mov
lret
xor
inc
incl
and
and
movsl
and
and
imul
fldcw
call
jmp
psubsw
push
movsl
cmp
push
fsubl
mov
add
repnz
cmp
scas
clc
ljmp
cmp
and
push
shlb
mov
push
imul
pop
push
stos
ds
sahf
or
addl
ljmp
xchg
subb
adc
dec
xlat
lret
fistl
or
and
jge
lret
sub
inc
mov
xor
and
repnz
pop
or
bound
ss
scas
mov
arpl
pushl
fbld
adc
popa
xchg
dec
push
cmp
imulb
sbb
push
aam
xor
decl
push
lods
lods
aam
movsl
fcom
push
call
or
test
adc
sub
scas
cli
decl
fs
fwait
mov
and
cld
jo
pop
insl
lods
sub
lcall
loopne
cmp
stos
push
xor
jb
cmp
sbb
iret
sbb
inc
jle
ds
stos
cmp
cmpsb
cs
sub
movsb
xchg
mov
sub
and
push
dec
or
insb
or
jmp
and
int
jb
mov
aaa
mov
add
out
push
or
ret
xchg
subl
mov
call
stos
setl
ret
test
stos
shrl
fstpt
jge
fisubrs
lcall
cmp
mov
sbb
das
and
clc
jno
sbb
mov
decl
or
mov
and
int3
insb
rclb
pusha
pop
pop
jecxz
aas
scas
test
mov
pop
xlat
mov
add
jmp
movsb
jae
imul
dec
or
pop
pop
xor
adc
mov
test
jmp
testb
sbb
adc
or
push
dec
rcr
sub
decl
mov
xchg
in
cmp
je
sub
inc
xchg
or
and
jmp
scas
cmp
cs
in
outsl
dec
mov
mov
xlat
push
push
adc
mov
mov
mov
mov
cmp
xlat
sub
rorb
xchg
subb
cli
cmp
subb
lcall
loope
dec
lods
pop
orb
fistl
jne
add
call
or
std
mov
adc
in
sbb
mov
cmp
ss
das
fcomi
pop
nop
xchg
insb
mov
leave
push
cli
or
xchg
and
cmp
mov
cld
and
call
out
test
ljmp
mov
dec
sub
add
aas
adc
or
pop
add
std
jg
cmp
scas
dec
dec
imul
cmp
jmp
fiadds
scas
xor
repz
cmp
sub
scas
test
jbe
out
add
push
sub
pushf
pop
xchg
sahf
call
decl
test
outsb
cli
mov
jb
std
cmp
xchg
cmp
xor
mov
je
movsb
repnz
adc
decl
jg
nop
xchg
jo
in
repz
fistpl
adc
jne
jge
ret
shrb
jbe
mov
sub
sub
cmp
xchg
mov
and
out
sub
mov
dec
mov
lock
sbb
out
or
sbb
adc
int3
mov
aaa
pop
subl
fsts
jne
cmp
outsb
jg
stc
or
enter
inc
idivb
cmpsl
aas
or
inc
pop
test
outsl
jo
push
clc
push
pop
xor
lcall
dec
test
add
jae
xchg
stc
xchg
out
stc
mov
xor
incl
cli
inc
mov
out
pop
mov
or
mov
pushl
push
xor
ret
or
cmovb
xchg
jp
jecxz
adc
mov
gs
decl
pushf
fcomps
int
inc
aaa
push
subl
stos
enter
jmp
mov
sub
movsl
push
sti
and
adcl
clc
inc
inc
ret
hlt
xlat
fcomp
dec
fistpll
fdivrp
fsts
and
sub
add
dec
test
ds
aas
sahf
jb
or
pop
stc
push
adcb
cmc
into
incb
repnz
ljmp
mov
and
push
insb
nop
in
pushf
daa
xor
cmp
adc
in
mov
push
lahf
and
testl
bound
inc
andl
inc
sub
icebp
push
push
icebp
inc
pop
decl
dec
mov
mov
xchg
add
incl
outsl
addl
inc
pop
dec
push
loopne
jae
cvttps2pi
mov
xor
sbb
ret
mov
jbe
decl
and
mov
loope
test
sbb
mov
pushl
mov
sub
jno
mov
mov
mov
adc
mov
testb
popf
rolb
add
jle
les
inc
add
cmp
aam
fcomip
shrl
pop
int
rclb
ljmp
pop
jo
cmp
push
mov
shl
add
cld
inc
into
shld
xor
insb
xor
xchg
ja
add
cmpb
lcall
jle
call
jno
mov
jg
xlat
ja
gs
push
xchg
dec
or
push
aam
jne
jmp
call
and
cli
pop
xchg
push
lret
dec
js
into
sub
fwait
pop
adc
mov
mov
loope
call
mov
shrb
sub
out
aam
shll
lcall
aad
stos
out
stc
push
sbb
jmp
push
pop
or
cli
jge
repz
cmpsl
cmc
inc
hlt
ds
mov
mov
push
jno
js
inc
mov
mov
sbb
pop
es
mov
pop
lcall
ror
jae
into
cmp
xchg
mov
pushl
dec
test
dec
jae
mov
insb
dec
pop
movsl
cmpsb
and
stos
jg
stos
push
mov
cmp
call
loope
sbb
jge
rcrb
cmp
fxch
xchg
jae
imul
jne
and
ljmp
cmpsb
lods
insb
cmp
pop
dec
mov
shrb
pop
pop
pop
push
sub
lcall
rolb
test
aas
xchg
lcall
and
cmpsb
dec
mov
lcall
ljmp
mov
shlb
repnz
inc
add
sub
js
call
mov
jle
lods
push
es
pop
cmp
push
in
ljmp
push
test
dec
fstpl
xlat
jmp
mov
leave
pcmpeqd
sub
popf
fists
xchg
dec
in
pop
std
lret
adc
mov
imul
std
aaa
out
push
sbb
test
jno
jbe
adc
fwait
das
ret
push
add
stos
incl
lahf
inc
test
xor
cli
jge
ja
cmpsb
push
orl
ljmp
sti
mov
pop
dec
and
pop
inc
out
sub
scas
sahf
fs
fcmovnu
push
mov
repnz
mov
hlt
jne
lahf
mov
pop
and
adc
mov
shr
xchg
inc
add
out
jp
rcr
les
aam
pop
lea
pushl
les
xchg
pushf
dec
fisttps
mov
pushf
sub
hlt
test
push
loope
mov
ljmp
xbegin
pusha
fiaddl
xor
stc
popf
mov
clc
les
or
ljmp
cs
adc
or
lret
mov
xchg
cmc
add
sbb
sub
shr
clc
cmp
sbb
mov
lcall
lock
dec
rclb
nop
insl
std
dec
das
clc
call
arpl
cmp
negb
or
xchg
fwait
push
add
inc
push
mov
cmp
inc
push
adc
xor
rsm
xchg
incl
inc
jbe
inc
or
mov
mov
push
xchg
fadd
mov
sbb
and
insl
sub
pop
ljmp
inc
push
stc
pop
adc
cltd
jl
fisttpl
pushl
loopne
je
pop
insb
addr16
lock
jbe
scas
shr
fcmovnb
fnstcw
fs
jmp
clc
mov
xchg
rolb
cwtl
into
repz
addr16
call
lock
dec
gs
lcall
out
mov
push
inc
sbb
outsl
mov
xchg
mov
inc
sub
pop
pop
cmp
cmp
outsl
enter
push
or
test
rcrb
stc
push
ror
jge
incl
outsl
pop
mov
cmp
rcrb
test
aam
pop
iret
or
mov
cld
lcall
js
push
add
xchg
push
or
cmp
repz
outsb
into
jg
sub
ds
push
test
or
iret
push
mov
sbb
test
push
xchg
jne
sahf
es
flds
xchg
lea
inc
dec
dec
pushw
shlb
aam
lods
pushl
and
xchg
add
roll
ffreep
stos
add
pop
cs
cmp
xor
inc
subl
xor
mov
fimuls
sbb
mov
jnp
push
cmp
dec
jmp
xor
xor
jl
psadbw
xchg
call
lock
jns
xchg
push
rorl
sar
jmp
sbb
pusha
pop
or
cwtl
mov
aaa
jo
add
fwait
push
int
rcrl
outsl
cmp
jne
mov
ljmp
test
lock
ljmp
sub
arpl
mov
scas
mov
js
pop
mov
sub
mov
dec
fstps
clc
xchg
jmp
sbb
jl
jnp
add
cs
cmpl
mov
push
adc
pop
fwait
sub
push
xor
imul
sbb
mov
or
push
add
inc
call
and
xor
xchg
jmp
aas
mov
jle
xchg
mov
cmp
call
lcall
mov
fdivrl
dec
mov
mov
mov
cmp
mov
sub
cld
xlat
fildl
mov
push
and
lods
lods
dec
icebp
dec
mov
es
out
aad
call
lods
aaa
scas
mov
lods
mov
cmp
jo
push
icebp
sar
jb
dec
dec
xor
lret
cmp
xchg
jg
stos
popa
lcall
cltd
mov
ds
call
insb
aad
shl
ret
dec
pop
imul
mov
cmp
mov
push
mov
call
adc
aam
arpl
dec
test
call
popf
mov
mov
lcall
sbb
mov
stc
add
or
jno
ds
dec
in
nop
call
sti
aas
pop
mov
xor
lds
mov
mov
call
jg
adc
pop
int
lahf
cmp
jbe
push
rcrl
push
push
jecxz
stc
xchg
adc
imul
imul
lahf
mov
lods
or
ret
cmp
jnp
scas
cmp
lret
xchg
pop
outsb
xchg
mov
mov
jno
js
imul
jmp
cmp
sub
mov
push
fildl
xchg
mov
cmp
clc
jl
sbb
mov
mov
pop
sub
lcall
mov
lock
pop
jo
add
call
shrl
xchg
lds
enter
call
ljmp
test
and
mov
jl
repz
xchg
inc
push
lret
nop
lret
fisubl
jmp
sbb
push
lret
jecxz
pusha
or
jge
imul
inc
pop
mov
jp
sar
decl
mov
adc
pop
adc
popa
xlat
lcall
test
imul
mov
das
les
out
push
pusha
outsb
movsl
push
jo
adc
adc
cmpsb
mov
cwtl
pop
add
pop
pop
xor
ljmp
jae
mov
mov
lods
cs
pushl
in
xchg
push
das
xor
aad
fsubrl
loop
push
lods
fsubp
int
lcall
movsb
inc
out
in
jno
add
aam
lea
ror
stos
ret
out
sti
fistpl
cmp
pop
fbstp
push
or
ret
fistl
arpl
pop
outsl
lock
mov
inc
aam
lret
cmp
popf
xor
out
adc
jmp
fbld
sbb
shlb
xor
sti
scas
and
dec
paddw
dec
std
rcll
xor
sbb
out
clc
jmp
cltd
push
mov
outsl
mov
sbb
jns
sti
add
cli
decl
sub
in
jo
loopne
dec
add
mov
nop
pop
out
ficoms
dec
in
and
dec
enter
fmul
cmp
add
sahf
mov
jmp
stc
orl
insb
add
sub
push
inc
test
imul
lcall
pop
enter
es
aad
xor
and
jnp
jb
and
jae
adc
ljmp
sub
lcall
lock
jae
add
fstp
mov
or
repz
negb
xor
jp
adc
sub
xor
xor
mov
ljmp
pop
xor
popf
sbb
pop
mov
arpl
dec
movsl
idivb
mov
jg
jmp
mov
jnp
sub
inc
test
xor
inc
inc
mov
lock
ljmp
cld
fdivs
cmp
and
dec
shll
jb
jns
add
inc
mov
jg
incl
mov
sub
pop
insl
pop
decl
push
sub
push
inc
xchg
jmp
push
inc
xor
and
push
mov
popa
test
add
idiv
mulb
fs
jnp
and
lock
cmp
lret
jge
psubb
pushl
in
mov
hlt
mov
iret
or
or
push
and
mov
andb
arpl
ret
fcomps
add
outsb
decl
insl
mov
out
cltd
sub
mov
push
lock
es
cmpsb
and
jecxz
decb
cmc
pop
shr
or
inc
inc
add
les
ljmp
icebp
and
repnz
pop
dec
push
jmp
pop
sbb
jg
stos
inc
dec
pop
pop
dec
outsb
mov
push
mov
add
dec
and
mov
add
mov
lods
xor
add
or
xchg
mov
imul
incl
add
adc
or
adc
sbb
sbb
mov
rdtsc
pop
mov
lcall
and
daa
arpl
leave
push
xchg
add
lcall
jmp
shl
inc
gs
ds
icebp
lcall
xchg
adc
mov
fcomip
into
movl
mov
xor
sbb
jg
iret
push
and
or
push
and
cmc
sbb
aas
xor
cmp
dec
pop
fcomip
fnstcw
add
or
xor
popf
and
adc
mov
fwait
adc
les
call
bound
mov
cwtl
pop
xchg
and
js
lcall
daa
loope
mov
scas
mov
leave
inc
jnp
dec
xor
xchg
jmp
inc
dec
fstl
mov
idiv
cmp
pushl
mov
movsl
sbb
pop
inc
std
mov
outsl
insl
int
movsb
rcrb
jge
sub
push
mov
rolb
and
sub
inc
jbe
dec
loop
jle
bound
inc
jecxz
lcall
pop
xor
sub
orb
push
test
inc
xor
pop
mov
xlat
dec
xchg
dec
push
pushl
bound
cld
cmpsb
push
cmp
dec
inc
fisubl
inc
jl
xor
cmp
fsubr
in
mov
out
pop
cmp
incb
xor
xor
lahf
adc
sbb
cmp
fistpl
into
out
lods
stc
add
add
cmpsb
mov
cmp
icebp
push
pop
push
ret
ja
ficoml
lea
loop
inc
iret
inc
enter
iret
cltd
pop
push
jb
ja
add
jmp
dec
lcall
and
inc
je
pusha
push
jns
hlt
lcall
lret
push
mov
mov
scas
add
popa
int3
jg
das
inc
clc
nop
in
xor
mov
test
adcb
jmp
cli
cmc
call
xchg
fdivl
ret
cmp
test
mov
arpl
pushl
cmp
jo
jmp
repz
and
mov
es
pop
push
xor
and
mov
mov
das
test
dec
mov
hlt
push
in
pop
arpl
sub
call
incl
fildll
aad
insl
adc
rclb
daa
in
cmp
inc
out
out
imul
int3
pop
cs
sub
das
inc
pop
ret
xchg
xor
pushl
lds
rcrl
dec
bound
loope
imul
mov
mov
leave
pop
adc
pop
pop
cmp
inc
cmp
call
bound
pop
test
and
inc
pop
fs
inc
pop
add
dec
push
std
test
xchg
sahf
jl
movb
fs
stos
iret
cwtl
pop
push
jl
stos
inc
sbb
cs
xchg
lcall
insb
ret
and
mov
push
pop
dec
out
dec
sub
mov
out
lcall
xor
mov
adc
mov
outsl
inc
mov
test
mov
sub
lcall
addr16
pushl
neg
add
hlt
fidivs
pop
xchg
dec
inc
cmpsb
cwtl
js
test
repnz
xor
mov
call
jb
mov
stos
or
add
sub
dec
fists
lret
icebp
jae
adc
sub
jmp
fcmovne
ret
pushl
enter
cmp
nop
fildl
or
sar
adc
popa
add
imul
xor
mov
cwtl
dec
or
or
add
push
push
xor
dec
adc
lcall
and
mov
mov
in
pop
in
ljmp
decl
jnp
push
sbb
or
jae
xor
fidivs
inc
dec
imul
shr
xchg
stc
decl
jns
scas
xor
mov
rcrl
and
mov
popa
loopne
mov
xorb
pop
stc
decl
and
add
sub
or
sub
dec
fidivrl
lcall
popa
jne
jns
std
nop
sbb
imul
les
mov
hlt
dec
push
cltd
cmp
jp
mov
pop
pop
xor
mov
aaa
loop
push
dec
movsb
xchg
mov
ljmp
mov
fnstenv
xchg
imul
cmp
push
cmp
xor
clc
adc
or
or
sbb
pop
repnz
sbb
out
cli
call
xchg
outsb
orb
std
mov
mov
call
dec
outsl
mov
popf
mov
mov
xchg
mov
ds
out
sub
push
or
dec
movsb
scas
lcall
sub
or
xchg
lahf
movsb
pop
mov
je
int
call
incl
cmpsb
add
ret
data16
fbstp
and
fists
rcll
and
xor
sub
xchg
fcmovu
gs
pop
insb
cmp
cmp
mov
dec
lcall
mov
inc
incl
fdivrl
out
lcall
fnstcw
jmp
ljmp
adc
dec
xchg
in
or
mov
sbbb
ss
dec
push
lret
out
mov
outsl
rcl
adc
jo
push
clc
into
mov
jnp
mov
dec
mov
xchg
cld
inc
das
inc
fisubs
cmp
rorl
inc
mov
or
sti
data16
fsubrs
je
orl
lcall
push
call
enter
push
lods
push
cmp
jmp
sub
dec
and
jmp
mov
paddusw
das
sti
mov
xchg
jnp
call
cli
xlat
push
movsl
add
loope
push
popf
inc
stos
pop
outsl
add
enter
push
loopne
mov
nop
lret
sarl
cmp
data16
and
xlat
lods
stos
jb
mov
call
jmp
filds
mov
movsb
repnz
sub
xchg
hlt
and
push
mov
pop
loopne
andl
dec
cmpsb
dec
popa
pop
fdivs
cmpsb
cltd
in
inc
dec
push
loope
ret
mov
stos
loopne
jl
jbe
mov
popa
scas
test
test
fldenv
xchg
inc
out
cli
lcall
push
nop
cwtl
cmp
rcll
mov
pop
scas
jmp
mov
pop
mov
cli
dec
idivb
movb
fisubl
pop
scas
mov
clc
call
addr16
lea
sub
popa
or
mov
leave
sub
or
fwait
out
pusha
test
push
sbb
push
xchg
inc
cmp
pop
pop
and
rcrb
lret
orb
popf
mov
cmp
inc
ds
pusha
test
dec
sbb
mov
mov
xchg
lea
push
jge
or
daa
sbb
fidivl
mov
ljmp
dec
inc
loopne
or
mov
lcall
sub
cli
outsl
lret
cwtl
xchg
aas
push
pushl
sbb
lcall
sti
mov
inc
outsb
sbb
lea
lahf
sarl
jp
cmp
movsl
sub
pop
fldt
or
mov
mov
mov
arpl
scas
cmp
push
lock
incl
jae
shlb
icebp
filds
ret
xchg
into
stc
mov
jmp
push
xor
mov
in
mov
stos
sbb
inc
jnp
dec
stos
rcl
movsb
repz
or
cmc
or
lcall
push
adc
add
sub
lret
pusha
mov
mov
jns
adc
pushl
fstpt
inc
hlt
pop
lods
lods
inc
mov
cmp
xchg
xchg
pushf
push
mov
outsb
gs
or
fnsave
dec
mov
pushf
sub
in
add
pop
xchg
mov
imul
js
pop
outsl
mov
jmp
mov
cmpl
xor
mov
and
cli
call
xor
pop
jp
mov
inc
jns
pop
fs
mov
inc
ss
cli
decl
pusha
pop
sbb
movl
or
scas
or
sub
sbb
and
incl
inc
mov
mov
add
mov
add
xchg
ss
cmp
test
cmp
inc
push
pop
and
insb
inc
mov
subl
incl
xor
cmp
outsb
cld
ja
pop
push
pop
mov
xchg
in
sbb
mov
and
ljmp
or
xchg
dec
xor
mov
addb
sahf
xorl
mov
dec
cmp
mov
incl
daa
iret
popf
and
dec
js
mov
mov
mov
pushl
call
cmc
clc
scas
fdivrs
pop
cld
add
je
lret
lret
movsl
xlat
cmp
cmc
pop
call
pop
ror
mov
outsb
mov
fildl
jmp
daa
fimuls
mov
sub
incl
adc
sub
push
test
mov
addr16
push
stos
push
movsl
into
ja
das
lcall
call
jmp
testl
sbb
sub
sbb
outsl
stos
pop
hlt
fdivrs
jno
inc
orb
sti
push
addl
jns
pushl
lds
pop
mov
not
or
lret
or
int3
ss
shrb
decl
cmp
ficomps
pop
jo
xchg
cwtl
les
xchg
je
dec
sbb
push
es
aas
xlat
popa
cmp
call
stos
sahf
jl
mov
pushl
in
loop
jecxz
xor
loopne
pop
ret
jmp
sbb
sub
std
mov
jmp
and
jp
scas
pop
push
dec
and
sbb
adc
pushl
sbb
inc
cmpsb
ret
insl
xchg
adc
pop
mov
adc
popa
ljmp
push
lods
inc
mov
es
inc
lea
cmp
roll
pusha
jb
movsl
inc
jg
pop
stc
sub
cmc
pop
jmp
adc
xor
and
sbb
out
fcompl
std
lahf
pop
aad
sbb
xlat
movsb
or
fidivrl
ret
test
xchg
sbb
out
sbb
push
aaa
js
dec
and
mov
lcall
ja
in
cmpsl
add
movsl
repz
scas
dec
xor
adc
aaa
pop
sarl
push
addr16
mov
inc
addr16
xchg
inc
inc
cmpsl
data16
add
int3
cli
lea
mov
mov
lcall
repnz
iret
lds
aas
es
inc
es
sar
mov
fdivl
lcall
sti
imul
stc
andl
sub
clc
or
xorps
aam
sbb
cmp
pop
pop
mov
add
mov
out
sbb
sub
xchg
inc
or
pushf
inc
std
push
sub
ljmp
cmp
xchg
or
inc
pop
sub
mov
addr16
filds
jne
push
hlt
jbe
pop
mov
decl
lock
sbb
inc
outsl
jns
or
jmp
out
insl
cmp
repnz
cmp
or
dec
out
test
ljmp
cli
pushl
mov
mov
outsb
sub
mov
std
call
push
fidivrl
adc
add
mov
and
add
xchg
mov
popf
xor
lds
add
shrb
mov
inc
sarl
insb
push
les
add
sub
cld
pop
sti
dec
jbe
push
dec
mov
pushl
scas
or
adc
sub
xchg
add
jl
or
push
decl
das
mov
dec
in
mov
cmp
sub
decl
mov
jge
sbb
add
aam
xlat
sti
int
inc
jl
sbb
and
mov
push
fcoml
enter
or
add
mov
test
jnp
lahf
cli
outsl
push
cmpb
jnp
dec
into
adc
dec
add
add
mov
inc
ffree
ret
aam
pop
mov
sub
push
jmp
stos
gs
xchg
adc
rol
mov
shrl
or
push
int
jg,pn
hlt
decl
enter
out
cmp
mov
ret
ror
sub
ljmp
mov
adc
adc
pushf
xor
dec
adc
decl
dec
push
bound
movsl
jg
inc
dec
ret
arpl
shl
sub
mov
ljmp
cmpsl
xor
in
adc
out
jmp
pusha
xchg
and
or
decl
pusha
add
mov
insl
rcrl
out
sub
xchg
int
mov
test
lods
jl
test
mov
lahf
sub
mov
cmpsl
sar
jmp
cmpsb
lods
lret
vmovsd
aad
jnp
mov
es
xchg
addr16
mov
ljmp
dec
push
shrb
sbb
xor
cmc
adc
mov
outsl
cli
decl
mov
out
out
push
sbb
test
popf
jecxz
test
xor
fbld
inc
push
sti
mov
cs
ja
nop
popa
pop
xchg
pushl
insl
cmc
out
xchg
mov
shll
fs
mov
mov
dec
push
inc
fnstenv
add
aam
test
mov
lret
mov
pushf
iret
stos
add
jmp
lcall
or
adc
pushf
popf
leave
jge
mov
std
mov
jge
imul
and
lcall
add
and
rorl
sbb
xor
das
clc
jmp
xchg
cmp
mov
mov
in
jno
sbb
data16
jmp
cld
pop
stos
mov
inc
push
adc
mov
movsb
fisttpl
cs
lret
mov
xchg
fists
pop
pop
aam
add
loope
xor
inc
xchg
sbb
xchg
or
add
xor
in
pop
nop
and
sbb
cmc
movsl
mov
and
mov
fldl
mov
out
test
mov
jmp
mov
jno
mov
lcall
call
popa
addb
mov
mov
mov
fs
mov
cmp
mov
popf
push
push
mov
divb
test
rorl
dec
sub
dec
and
or
stos
cld
sbb
fsubl
popa
mov
leave
xchg
fisubrs
mov
inc
rcll
incl
fmul
int
inc
xchg
ss
jmp
icebp
cmpsb
mov
or
notb
push
inc
and
stos
jge
movsb
inc
push
xor
jmp
orl
jp
push
fs
jmp
mov
or
add
sar
call
and
push
cwtl
push
pop
pop
jb
cltd
xchg
lret
jecxz
cmp
mov
loop
ljmp
das
xchg
sarb
adc
xor
call
and
cmp
aaa
std
dec
sahf
repnz
out
into
sub
gs
or
movsl
inc
sahf
xchg
lcall
and
subb
and
xchg
ficoml
pop
lcall
xchg
es
in
fs
inc
jmp
ret
push
xchg
popf
inc
adc
pushl
fs
mov
test
int
jle
daa
loop
pushf
in
cmp
mov
cmp
pop
dec
aas
and
jmp
test
mov
dec
cmp
or
test
decl
popa
push
cmc
arpl
xor
sbb
jae
pop
rcr
or
je
ss
inc
test
add
and
pop
outsl
rorb
jp
mov
push
outsl
inc
or
fistl
adc
jge
das
sbb
movb
sti
jnp
test
hlt
rcrl
push
mov
ljmp
pop
outsb
sahf
ss
fidivs
repz
or
cmp
lea
and
incl
sub
fs
cli
shll
sbb
sub
mov
hlt
lea
cmpsl
jb
xchg
icebp
popa
repnz
dec
decl
loope
jle
cltd
adc
jbe
jp
outsl
pop
inc
adc
pop
and
and
cltd
mov
decl
sbb
jmp
pusha
dec
sub
add
sbb
sbb
sub
sti
sbb
or
push
cld
mov
in
jl
mov
add
call
jmp
inc
sub
int3
repnz
mov
inc
pop
and
adc
aad
divl
lcall
hlt
xchg
mov
lret
lods
sub
and
jae
repz
mov
sub
dec
cs
push
xor
iret
inc
dec
out
xlat
out
push
push
jmp
add
xchg
mov
in
mov
les
pushf
sub
rolb
jle
incl
fnstenv
dec
icebp
stc
popf
push
fsubl
push
in
cmc
dec
dec
cmpsb
xchg
decl
pop
pushf
movsl
stos
cmp
sbb
inc
test
ret
gs
jnp
jg
shll
mov
jb
std
rorl
lcall
gs
or
mov
jg
adcl
sbb
push
inc
jg
or
ljmp
cli
add
xchg
jp
sub
push
pop
pop
pop
gs
inc
adc
pop
xchg
fcos
mov
and
stos
jg
xchg
dec
lods
cli
movsb
lods
sub
pop
push
pop
xchg
mov
lcall
nop
jo
or
push
push
fwait
sbb
in
xor
cld
inc
jmp
popa
sbb
sbb
js
call
cli
jecxz
xchg
cmp
ret
mov
push
int3
outsl
clc
incl
jae
aas
out
sbb
dec
pop
jl
pusha
out
mov
jo
movsb
mov
dec
xchg
lds
cmpsb
xor
xchg
push
cli
or
push
nop
movsb
test
popf
imul
sub
inc
arpl
jo
iret
sarl
imul
lock
rcr
jnp
xchg
lods
or
loopne
popf
pop
fwait
jbe
clc
jmp
fwait
popf
cmpsl
shll
in
xchg
pop
adc
mov
ljmp
pop
cmp
pop
jg
in
cmc
sub
push
or
mov
outsl
fstp
mov
insl
sbb
or
sbb
test
dec
test
decl
pop
cmp
aam
mov
jg
scas
inc
and
add
enter
neg
jl
rorl
jno
ljmp
std
dec
pop
pop
stos
jo
std
sub
mov
test
out
push
sub
jl
call
std
fstl
out
jg
sbb
mov
xchg
mov
lods
addl
mov
roll
test
cli
daa
cmovl
insb
or
inc
add
ja
cmp
push
scas
nop
daa
mov
andb
xor
mov
add
imul
add
jmp
adc
pop
lcall
add
lds
fistps
int3
jbe
cmpsl
fiaddl
test
in
push
jmp
adc
cmc
cwtl
pop
inc
lods
das
jge
sbb
inc
sub
fs
push
pop
pop
dec
mov
popa
and
ljmp
shrl
lahf
mov
mov
adc
xlat
mov
ljmp
je
inc
call
call
adc
repnz
les
incl
mov
fwait
or
in
xchg
or
test
ret
clc
popf
adc
dec
push
mov
mov
aaa
push
mov
mov
int
pop
cmpl
mov
in
out
adc
xor
loopne
dec
aad
push
xchg
jl
repnz
mov
fbld
pop
ret
push
lds
xlat
jb
test
imul
mov
inc
pop
jmp
inc
ja
cmp
dec
lds
lods
jge
rorl
lods
decl
movsb
xor
lea
out
loopne
fildll
xor
pop
cmc
cmp
jns
lcall
xchg
insb
push
and
inc
shll
stos
in
lods
xchg
pop
test
mov
inc
les
adc
mov
insb
xchg
mov
gs
jb
sub
daa
int
mov
clc
incl
cltd
lret
repz
pop
adc
movsb
iret
test
pop
jp
repz
std
stos
xor
out
es
js
or
lcall
arpl
ds
sahf
xchg
lock
call
jp
push
and
inc
sbb
mov
mov
mov
dec
fbstp
std
lret
pusha
ljmp
scas
and
repz
add
addr16
call
jae
cltd
mov
fdivp
fwait
icebp
inc
pusha
gs
pop
lods
enter
xor
incl
ljmp
icebp
ja
pop
jp
pop
lret
test
xchg
out
movsb
bound
xchg
call
mov
decl
xor
pop
xor
imul
mov
inc
sbb
push
out
mov
dec
test
xchg
fldl
push
and
pop
inc
loop
movsb
push
jg
push
stos
inc
and
mov
les
mulb
jge
repz
dec
cwtl
insb
in
stc
or
xchg
push
and
pop
mov
sbb
insb
in
inc
inc
in
out
clc
shll
mov
fdivs
ja
test
fsub
sarb
mov
in
or
sarb
cmc
dec
xchg
bnd
mov
xor
into
clc
ljmp
mov
mov
mov
push
mov
jecxz
bound
lret
in
loope
fdivrl
sahf
mov
test
mov
mov
ret
sub
adc
decb
cmp
lock
pop
movsb
fs
int3
mov
lcall
pop
xchg
jmp
mov
inc
ret
outsb
or
inc
lock
sti
ja
dec
lods
je
jge
sbb
push
pop
cld
cs
lret
jnp
int
pop
and
jno
adc
pushl
dec
and
orl
stos
loopne
push
sub
into
mov
adc
jge
pop
pop
fdiv
lahf
test
ljmp
mov
leave
sbb
xor
cli
and
cmp
decl
mov
lcall
adc
out
jne
sbb
imul
mov
bound
decl
pop
scas
mov
mov
or
xchg
dec
mov
insb
cmp
mov
fs
mov
rorl
push
push
sbb
mov
adc
xor
jg
and
call
dec
push
cmp
jge
and
push
cmp
dec
add
das
push
inc
and
jle
movhps
andl
aas
xchg
ljmp
push
dec
pusha
std
inc
dec
xchg
xor
adc
movnti
xor
ljmp
inc
adc
ss
pop
mov
shrb
jns
call
inc
fimuls
or
fwait
push
inc
scas
mov
mov
jmp
push
in
inc
aaa
jecxz
cmpsb
fld1
adc
jp
cmp
push
adc
add
hlt
or
or
clc
fmuls
lret
pop
dec
fsubrl
movsb
hlt
and
bound
cld
adc
imul
ljmp
outsb
mov
daa
cltd
sub
lret
jl
jnp
stos
fdivrl
test
xor
mov
push
or
mov
lock
icebp
mov
and
loope
pop
call
mov
ljmp
mov
fistl
mov
or
add
jmp
push
cmpsl
jno
ret
cmpsl
cmpsl
in
adc
outsl
jg
lcall
or
sbb
lods
push
mov
dec
std
es
add
fs
pushl
mov
lret
and
bound
xchg
xlat
fs
mov
push
lea
addr16
cmp
dec
cmp
lret
scas
inc
mov
mov
mov
out
mov
jmp
stc
cltd
stos
in
pop
inc
or
ljmp
dec
in
push
clc
enter
sub
jns
scas
clc
incl
lods
outsb
shl
jge
pushf
test
or
jae
xor
adc
push
sbb
jmp
incl
xchg
rcr
ljmp
add
jb
jo
xor
xchg
cmc
mov
inc
push
popl
and
mov
lock
in
mov
and
mov
sti
lret
mov
ret
call
iret
loope
cli
scas
mov
xor
or
imul
inc
in
decb
aad
xchg
loope
dec
push
idivb
cmp
leave
jne
test
mov
lds
adcb
mov
fcmovu
inc
add
dec
xor
mov
test
shrl
or
mov
sub
jno
sub
aam
pop
jne
pop
mov
pop
in
setns
jecxz
mov
jne
sarb
push
xchg
cmc
lods
popf
scas
pop
outsb
cmp
inc
xchg
jle
mov
push
jmp
inc
hlt
xor
xlat
jle
push
pop
inc
dec
dec
sbb
mov
or
gs
xor
call
xor
jae
pop
clc
cs
outsl
aam
dec
nop
std
add
sbb
jg
jmp
xchg
dec
pop
sub
lods
jne
js
and
jmp
lcall
jbe
loop
fisttpll
call
je
ret
cmpb
add
push
cmp
call
pop
sub
imul
pop
push
test
pop
cltd
std
xchg
cltd
ja
call
aad
pop
add
adc
rcl
jnp
dec
add
or
ljmp
incl
fidivl
shr
movsb
fidivs
mov
mov
and
cmp
cld
ret
adc
int
or
mov
mov
pushl
clc
in
lret
stc
je
mov
jno
cmpsb
inc
xorb
out
decl
push
int
aam
push
cmp
push
scas
js
data16
push
jno
arpl
fs
push
pop
jmp
push
in
shlb
movsl
xor
push
cmp
push
shrb
jecxz
aad
call
xchg
sub
test
inc
mov
cmp
push
hlt
and
pusha
xchg
xchg
pop
add
fimuls
mov
push
inc
add
ds
incl
mov
add
push
mov
rcr
mov
or
les
in
push
xchg
lcall
sub
jmp
lock
adc
mov
or
mov
push
add
fwait
or
cmp
pop
outsb
js
ret
jb
xlat
or
lods
xchg
cwtl
push
fsts
ds
in
out
dec
xorl
push
or
xchg
sti
in
xchg
push
sbb
mov
add
rorl
test
pop
stos
xor
decl
lret
dec
lods
mov
mov
mov
lods
out
notb
and
xor
cmp
cmp
jmp
jns
cmpsb
dec
lahf
and
lock
cmp
jge
sub
in
push
push
test
pop
mov
daa
jo
loope
pop
hlt
rolb
roll
pushl
stos
lods
movsl
and
pushf
aam
inc
jg
adc
clc
test
and
pushf
divl
pop
popf
out
fcos
mov
enter
pop
mov
mov
jmp
popa
cli
test
cld
xchg
sub
lcall
call
clc
pop
xor
clc
aaa
lea
push
lods
imul
pop
xchg
stos
std
pushl
sarl
mov
dec
sahf
mov
xchg
imul
add
test
scas
jle
test
add
std
jmp
int
add
cltd
jnp
adc
loop
sbb
out
or
call
mov
pop
movsl
and
fldenv
and
loop
fldl
or
decl
inc
nop
cwtl
push
sbb
and
pushf
fdivrl
es
pop
movsb
pop
ret
pop
cmc
incl
sbb
add
int3
xchg
mov
cmpsb
mov
shrb
xlat
out
add
shl
dec
cli
pop
jmp
push
loopne
and
mov
cmp
sub
ljmp
add
pop
fld1
arpl
fldcw
jne,pt
inc
and
lret
xchg
mov
cs
repz
lods
jne
pop
loopne
sub
hlt
call
out
dec
pop
inc
sbbl
insl
xor
xchg
push
mov
cmc
or
or
push
fmuls
ret
push
dec
fadd
push
hlt
push
js
into
pop
nop
xor
lcall
pushl
lret
inc
xchg
and
outsl
and
jg
js
in
dec
mov
cltd
das
dec
and
xchg
fs
xchg
mov
jb
adc
add
or
inc
icebp
and
cmpxchg
sbb
jp
jae
jg
ss
ret
pop
scas
cmp
icebp
dec
test
in
jb
es
in
xlat
or
inc
sbb
insl
dec
int
pop
add
or
push
push
jnp
imul
jg
pusha
sbb
scas
addb
rorl
stos
xor
incl
sub
pop
arpl
dec
stc
addr16
cld
dec
out
jmp
push
jmp
jno
xor
mov
jmp
ljmp
outsb
ljmp
mov
mov
out
dec
outsb
jl
mov
icebp
jl
je
sbb
fs
incl
cld
dec
sbb
cmpxchg
add
ss
cmp
nop
mov
jmp
and
xorb
jge
mov
mov
clc
jmp
xchg
out
fsubs
insl
bts
out
and
mov
push
insb
cltd
or
push
call
pushl
cmp
stc
push
xchg
push
out
push
sub
xor
push
ss
cmc
cmp
cmpsb
std
dec
jmp
cmpsb
popf
pop
sub
inc
sbb
lcall
fbld
stc
scas
ljmp
rclb
outsb
pop
inc
sbb
pusha
or
js
adc
push
nop
and
pop
mov
jecxz
push
sbb
push
inc
xchg
pop
mov
jns
imul
fisubl
fcomip
enter
pop
cmp
push
out
leave
cmp
outsb
adc
dec
loopne
test
lcall
jo
xchg
jp
cmpsl
andl
loopne
mov
sbb
sahf
jmp
out
scas
mov
es
and
je
lds
adc
pushl
aaa
lret
mov
mov
mov
xor
mov
out
mov
clc
jmp
jle
mov
jbe
mov
push
xchg
inc
dec
lahf
in
loop
add
enter
push
mov
lods
scas
xchg
paddw
dec
push
ds
stos
inc
dec
xor
xchg
imul
arpl
and
stos
or
scas
sar
call
ret
or
lds
aas
dec
pop
lods
int
scas
nop
lods
add
pop
dec
out
lea
or
incl
sbb
inc
fbstp
adc
jp
cmp
mov
pop
hlt
mov
dec
cmp
aas
fucom
in
dec
in
xchg
mov
push
push
fisttps
pop
dec
mov
ljmp
mov
and
popf
addb
arpl
xor
sbb
aaa
cld
dec
mov
mov
adc
idivb
pop
push
mov
push
jl
ret
inc
and
add
loopne
jmp
arpl
and
jne
sbb
popf
sti
shlb
pop
hlt
and
pop
jb
test
das
lahf
out
mov
in
lahf
mov
sarb
ds
outsb
pop
xchg
cmp
scas
push
mov
rol
mov
fcomip
aaa
addb
das
and
mov
or
out
push
jle
sbb
call
repz
jne
fstl
cld
pusha
pop
cwtl
dec
leave
jbe
jg
out
adc
dec
test
int3
test
dec
dec
and
push
pcmpeqb
fsubl
shl
pop
jp
xor
pusha
popf
push
jle
pushf
insl
cli
clc
adc
xchg
xor
in
call
pop
movsl
pop
xchg
xchg
add
fsubrl
or
jecxz
fdivr
mov
shrb
xchg
jae
dec
adc
shlb
push
mulb
idiv
mov
push
dec
scas
lret
push
cmp
jno
imul
push
call
movsl
cmp
mov
inc
pop
mov
push
add
fdivrl
cmp
pop
clc
add
xlat
mov
or
jmp
inc
mov
mov
dec
lret
xor
xlat
popa
dec
sbb
bnd
jl
sbb
scas
adc
into
add
mov
xor
mov
adc
outsl
lods
sti
pop
std
add
mov
rcrb
pop
lahf
call
ljmp
hlt
jo
fimuls
inc
lock
xchg
pop
nop
andb
cmp
mov
mov
shrl
sub
lods
mulb
pop
jl
clc
inc
inc
sbb
mov
mov
in
insb
xchg
jae
lods
scas
mov
repz
popa
push
cld
pop
cmp
arpl
vrcpss
call
out
test
call
pop
ja
enter
arpl
add
lcall
decl
faddp
xor
cmp
jb
mov
int3
jl
out
js
gs
xchg
shlb
es
ds
sub
jge
call
jge
xchg
addl
movsb
mov
enter
or
pop
mov
or
add
fiaddl
ret
cltd
out
orl
jg
lret
and
mov
cwtl
repnz
loopne
ficoms
xchg
ss
inc
call
lret
xor
sub
lcall
push
add
add
ss
mov
jmp
xchg
je
and
aas
pop
mov
add
inc
mov
xacquire
decl
adc
mov
mov
jmp
out
pop
inc
fcmovb
in
inc
fcmove
in
jnp
mov
ljmp
cmp
test
bound
sbb
adc
mov
jnp
cli
dec
sti
in
movsl
dec
jge
fistpll
pop
or
xchg
lahf
push
or
jmp
or
xor
lock
push
jge
dec
xchg
sub
adc
jge
cmpl
daa
in
fstps
mov
mov
arpl
dec
pop
outsb
ret
xor
push
test
cwtl
mov
mov
jae
add
aam
dec
jecxz
loopne
mov
test
aas
dec
mov
lcall
mov
dec
fcmovnu
stos
sbb
in
inc
xlat
mov
or
mov
nop
call
inc
leave
js
incl
call
sti
icebp
add
pop
mov
insb
xor
imul
sahf
andb
ret
jmp
cmpsl
push
mov
cmpsb
mov
cs
add
mov
shll
ljmp
sbb
leave
mov
iret
fisubl
inc
mov
pushf
aam
or
mov
lods
inc
cmp
mov
imul
out
clc
ljmp
rolb
jge
sbb
mov
mov
adc
lcall
ret
fwait
ret
adc
push
mov
mov
cs
aaa
jg
dec
cmp
push
ret
add
decl
stos
ret
in
lret
ss
jns
aaa
rcl
jp
xor
adcl
in
flds
xchg
and
mov
rolb
push
lcall
cmp
cmpsl
popf
shl
iret
add
dec
and
jg
ljmp
adc
fcomps
add
ret
lods
or
out
decl
repnz
lcall
popf
lods
jl
xchg
push
and
test
push
push
jge
lahf
inc
dec
insl
sbb
mov
pushl
aas
jge
rdtsc
stos
adc
sbb
xlat
dec
pop
pop
flds
jmp
push
dec
mov
adc
jp
je
test
sub
jae
mov
push
cwtl
scas
shl
mov
popf
ljmp
sub
jl
cmpsl
xor
xchg
cmp
pop
xchg
add
dec
adcb
jmp
in
call
pop
lds
loopne
mov
add
dec
nop
inc
mov
or
hlt
das
cmpsb
pushf
jg
imul
push
out
shrb
inc
imul
jg
call
movsb
xchg
mov
in
lcall
cmp
lods
mov
jmp
call
mov
adc
xchg
dec
cltd
rolb
dec
xlat
pop
adc
adc
ret
inc
jmp
divb
xchg
xchg
inc
add
stos
xbegin
test
iret
jmp
xchg
sbb
xchg
ret
add
or
sub
mov
clc
jae
jg
mov
inc
mov
call
mov
cli
jmp
js
imul
mov
popf
rorb
je
or
and
call
adc
imulb
push
dec
fwait
cmp
outsl
ficoms
push
or
jne
mov
mov
incl
mov
mov
or
idivb
jg
repnz
sbb
pop
xor
jmp
xchg
ret
mov
dec
adc
dec
fisubrs
pop
shl
fldcw
add
ljmp
mov
fidivrs
jecxz
xor
jl
lock
xchg
test
xor
fdivr
decl
mov
fstpt
cmp
mov
pop
lea
and
mov
xor
mov
adc
movsb
incl
aad
scas
sub
cli
pop
pop
fimull
xor
push
sahf
mov
daa
mov
aaa
cld
mov
xor
push
or
push
pop
adc
jmp
push
ja
fldt
mov
dec
pusha
jo
mov
in
decb
adc
cmp
ds
nop
dec
lret
dec
jnp
cld
add
hlt
lret
int3
ffreep
stos
stos
and
imul
mov
into
pop
mov
icebp
mov
push
andb
es
pop
outsb
cmp
or
lcall
mov
inc
mov
jge
roll
push
mov
call
les
insb
and
jge
test
and
dec
mov
test
xor
ds
or
push
pop
sbbl
push
dec
pop
sbb
xchg
xchg
decl
push
xchg
jmp
push
in
imul
mov
decl
outsl
jb
pop
mov
and
imul
jne
repnz
mov
cmp
mov
hlt
inc
pop
pop
int
dec
pop
sbb
dec
jbe
aad
jne
into
aam
sti
and
incl
pop
fwait
enter
sahf
nop
mov
dec
in
add
dec
and
dec
push
ud0
decl
stos
fcmovnb
lock
cmc
loope
adc
xchg
fbld
jns
enter
imul
in
lcall
cmc
cmp
push
push
nop
int3
push
dec
out
jge
addb
incb
push
xchg
incl
into
rorb
jbe
pop
jb
ljmp
mov
or
xchg
inc
movsb
xchg
mov
dec
push
mov
xchg
clc
stc
xor
xor
sbb
int3
adc
ljmp
clc
es
lea
bound
lods
jae
sti
fadd
scas
cld
out
jb
pop
lock
jmp
add
add
inc
movsl
xchg
sub
outsb
mov
xchg
ljmp
xchg
mov
mov
lcall
repnz
push
mov
jbe
pop
mov
test
or
test
ljmp
push
add
lahf
adc
lods
cmp
andl
and
out
dec
fcomip
arpl
imul
adc
dec
enter
mov
adc
xor
mov
pop
mov
xor
push
jnp
addr16
pop
pushf
stos
jmp
mov
jne
mov
roll
scas
sbb
push
xchg
or
dec
sbb
inc
jnp
call
push
add
sahf
xchg
cltd
push
xlat
jle
jb
cld
daa
mov
orb
decl
fs
cltd
sub
out
lahf
dec
lock
and
pop
negb
mov
xchg
sbb
loop
lds
arpl
add
imul
fcompl
sbb
cwtl
imul
sar
pop
sub
lods
cltd
imul
sub
cmp
pop
pushl
pop
test
sbb
dec
loopne
jecxz
call
roll
sar
scas
aad
mov
and
in
pop
dec
dec
nop
test
and
insl
xor
sub
cld
mov
pavgw
cmp
clc
mov
mov
push
repnz
out
fldcw
int
imul
enter
popa
fsubl
sub
shll
adc
gs
dec
out
pop
loopne
inc
xchg
xor
mov
jecxz
or
cld
inc
std
jg
jbe
movsl
montmul
cmpsb
test
daa
mov
js
xchg
in
jp
incl
fistpll
movsb
jle
fiaddl
xchg
xchg
imul
mov
fwait
mov
sbb
pushl
sub
hlt
pop
cmp
cmpb
mov
jno
jns
mov
mov
sub
or
test
push
out
lock
call
fisttps
fsubr
ds
adc
pop
ljmp
imul
jmp
push
fldt
rolb
fisubrs
push
cmpsb
dec
cmp
mov
sar
mov
mov
lahf
inc
stc
cmp
xor
jae
or
fisttps
sti
xor
xchg
push
xor
lret
xchg
mov
das
mov
xor
push
xor
xor
xchg
shrb
fucom
jo
mov
push
cmp
test
fldenv
cltd
test
jae
sub
pop
int3
insl
lods
dec
je
loop
lret
inc
push
incl
lods
inc
hlt
and
movsl
fstpl
sbb
test
insl
js
jb
fisttpll
dec
rcrl
push
mov
testw
sub
fmul
stos
jbe
pop
pop
sbb
adc
push
jno
decl
jne
sbb
sub
addb
cmp
or
inc
js
aaa
shl
jmp
enter
or
mov
sahf
mov
cmp
rcll
ffreep
xchg
mov
aam
popf
rol
jo
out
stos
test
or
fs
leave
nop
pop
sbb
adc
repnz
fucom
in
or
push
mov
cmp
sarl
mov
div
xor
inc
mov
call
js
mov
or
lcall
cltd
scas
fldl
cmpsl
push
cld
push
testb
outsl
fcompl
leave
sub
add
cmpsb
adc
mov
jp
xor
cmp
out
mov
jae
addr16
call
addr16
cmp
out
les
test
pop
lret
mov
push
call
sbb
push
cmp
fbld
out
push
adc
dec
xor
push
mov
mov
sub
out
aad
out
rcrl
dec
pop
push
mov
dec
mov
sub
sbb
stc
inc
add
neg
or
mov
sbb
mov
pushf
sbb
scas
push
xchg
inc
je
jae
adc
scas
mov
jmp
outsb
stos
hlt
iret
sbb
add
imul
ret
cmp
test
in
sub
mov
call
lret
nop
add
ja
mov
push
jbe
adc
ja
xor
rclb
decl
sbb
pop
mov
addb
push
roll
push
popa
or
lret
cmp
pushl
push
addr16
adc
or
adc
mov
push
pop
aaa
pop
aad
lea
ljmp
addr16
add
jne
loope
jg
iret
xchg
inc
sarb
fisubl
pop
rcrb
xchg
mov
pusha
dec
rclb
adc
sbb
or
cs
jp
or
lret
dec
mov
popf
mov
add
jl
dec
and
fldt
int
xor
push
insb
jnp
pop
scas
fabs
cmp
fmul
jmp
mov
push
inc
mov
mov
fsubrl
arpl
into
jp
jb
incl
nop
push
dec
daa
pushf
cmc
sub
inc
fdiv
xchg
xor
shrb
pop
outsl
push
lds
pop
incl
push
inc
mov
out
fimull
sub
xchg
incl
fsubrl
nop
scas
adc
lods
stc
dec
xlat
jge
and
movsb
stos
insl
xchg
mov
mov
clc
out
xorl
arpl
scas
outsb
jg
daa
shlb
jnp
mov
jbe
and
fs
push
data16
mov
pop
jle
push
pop
jmp
lcall
call
mov
sarb
loope
in
lods
hlt
ljmp
fs
icebp
push
xor
sbb
push
shl
jae
stos
scas
lahf
inc
repz
ds
dec
cmpps
jl
and
mov
lea
and
adc
push
cmpsl
push
lcall
mov
es
clc
and
cmc
jno
fs
imul
sub
jle
pop
cmc
inc
int3
push
je
test
lret
mov
sbb
scas
mov
js
sub
lcall
es
and
negb
lds
adc
mov
mov
cmp
sub
xchg
arpl
adc
stos
jle
incl
decl
lret
lret
cmp
mov
sahf
adc
mov
dec
xchg
pop
scas
data16
xchg
pop
cmp
inc
lcall
inc
cmp
add
es
sub
data16
cmpsb
cmp
add
mov
inc
call
mov
mov
sarl
and
in
add
sbb
xor
out
pop
mov
cmc
stos
arpl
int
mov
xchg
xchg
or
push
addr16
dec
pop
test
jnp
lahf
maxps
repz
sahf
dec
mov
lcall
loopne
jnp
in
es
push
cmpsb
js
or
lods
mov
sub
int
ljmp
jle
inc
or
inc
mov
in
and
mov
int3
fwait
ret
xor
mov
lcall
mov
xchg
lcall
in
inc
loope
jg
and
jo
cmpsb
jmp
mov
movsb
in
cmp
pop
daa
fs
in
mov
es
mov
mov
std
idivb
push
pop
sbb
imul
lcall
jne
jno
divl
push
jg
leave
pop
ljmp
push
cwtl
cltd
fstl
dec
ljmp
fldenv
or
dec
fsts
and
jp
inc
sbb
aam
inc
pop
mov
lahf
or
shl
mov
push
fdivl
jge
cwtl
and
mov
push
ljmp
pop
mov
mov
pop
outsb
dec
ret
sbb
fstpt
pusha
jl
mov
clc
inc
lcall
jmp
pusha
push
inc
adc
and
sarb
decl
push
fldcw
addr16
fcomps
push
dec
enter
sbb
int
stc
inc
shll
popa
clc
call
xchg
jne
pop
sbb
xlat
cmp
pop
sub
lods
jle
aaa
xor
fdivrs
shl
lock
aaa
dec
add
ds
lods
cmp
ljmp
and
add
sub
push
pop
outsb
xlat
je
push
pop
in
loop
je
lret
add
jmp
cwtl
xchg
or
popa
in
lds
mov
fs
pop
stos
push
test
ljmp
insb
mov
pop
dec
dec
pop
mov
lcall
repz
sbb
lock
sub
xchg
fbstp
jno
test
pushl
fs
in
test
sti
pop
hlt
stos
pop
xor
pop
push
xchg
andb
pop
out
fs
mov
jg
xor
inc
xor
test
mov
xchg
aas
pusha
cmp
dec
or
xor
jmp
repnz
pop
lods
xchg
movsl
bound
push
jne
nop
rorl
jo
in
decl
jno
rclb
add
leave
clc
movsb
mov
arpl
in
adc
inc
out
call
dec
mov
lcall
xchg
das
es
call
xchg
inc
push
in
mov
xchg
push
test
out
xor
call
sahf
outsl
adc
and
dec
push
sbb
and
cmp
xchg
pop
mov
call
nop
sub
jecxz
lret
pop
sbb
jmp
outsl
fwait
cmp
jge
or
ljmp
outsb
jl
cmp
pop
dec
pop
mov
jmp
and
inc
in
ds
or
jnp
int3
js
jns
cmp
pop
ja
in
loope
mov
jmp
mov
jo
cwtl
hlt
and
shlb
mov
xor
adc
push
cmp
or
inc
fisubl
shll
int3
adc
ljmp
sbb
nop
lods
loop
daa
or
or
adc
adc
dec
fs
adc
mov
leave
push
sbb
sub
into
mov
dec
stc
cld
cmp
cmpb
jle
jp
fwait
std
sar
aad
xor
mov
mov
into
jecxz
sub
ret
xchg
dec
rclb
jae
js
inc
fistpl
cmp
dec
ficoms
push
in
or
pushl
std
popa
jge
fildl
mov
xchg
fdivs
lahf
lcall
lcall
lcall
ljmp
in
adc
stc
sub
insl
mov
lea
cmp
mov
push
or
call
jno
sbb
xor
mov
icebp
jp
mov
pushl
xor
iret
mov
rcrl
xchg
not
ljmp
cmp
and
mov
push
push
int3
fisttpl
xor
and
mov
cmp
or
push
push
cmp
jp
test
and
out
xchg
shll
call
mov
sbb
js
push
add
or
mov
lahf
push
cwtl
repnz
sub
jg
jmp
or
pushf
push
aad
es
and
push
mov
shlb
and
xchg
adc
mov
jne
xchg
out
cli
stos
add
and
xor
xor
sahf
loop
push
in
mov
push
sub
xlat
mov
mov
scas
push
push
or
xchg
fstl
inc
js
cmovp
jae
xor
push
dec
mov
les
mov
in
rorb
push
loope
outsb
mov
pushf
add
mov
jno
add
adcb
inc
leave
dec
lret
es
mov
cmp
cmp
mov
sbb
lea
loop
es
pop
stc
push
mov
call
mov
ljmp
sub
jge
pusha
lods
or
jmp
jnp
movsb
or
stos
dec
cmpsb
out
jnp
aad
dec
sub
lcall
cmp
jmp
ret
lret
pop
mov
clc
test
mov
ljmp
inc
fldcw
mov
dec
xchg
lods
fiadds
negb
daa
or
mov
cli
in
xchg
insl
mov
inc
cmp
fisttpl
lcall
jbe
ljmp
call
xchg
push
les
sub
inc
push
mov
shr
jg
mov
xor
inc
or
xor
ror
and
in
xchg
sarb
ds
dec
push
ds
mov
lea
scas
sub
mov
dec
enter
gs
sbb
aas
sbb
xor
cmp
pushl
dec
in
adc
fcompl
inc
and
jge
ss
pop
and
negb
ljmp
dec
cld
pop
rcll
movsl
pop
les
das
nop
int
adc
ret
stc
fwait
mov
cs
mov
pop
mov
mov
sub
mov
add
pushf
push
and
mov
add
in
pop
shlb
data16
mov
cmp
lods
insb
mov
jl
xchg
dec
cmp
fcomp
dec
mov
cmp
mov
iret
insl
fwait
sarl
test
pusha
pop
sbb
inc
mov
cld
pop
push
call
jle
sbb
lea
add
daa
xchg
jmp
add
incl
xor
xor
cltd
cmpsb
imul
fcmovnb
lret
xlat
mov
decl
push
pop
xor
movsb
adc
mov
repz
dec
cmp
jae
negb
loope
sbb
outsl
incl
mov
xor
lcall
jno
mov
mov
imul
xor
cwtl
xor
pop
sbb
punpcklwd
loop
lcall
or
cs
jp
repz
popf
imul
jge,pn
jg
fidivs
cmp
xchg
and
or
ret
ljmp
add
arpl
mov
sub
in
imul
dec
mov
push
insl
nop
jo
flds
and
jmp
push
xor
pushl
sub
das
icebp
inc
inc
stc
in
dec
xchg
or
pop
pop
ret
xchg
xorl
loop
push
popa
mov
and
ljmp
and
adc
jmp
dec
xchg
dec
xor
mov
das
fsubl
sar
out
flds
fwait
mov
push
or
sbb
xor
xor
or
daa
fdivl
inc
ret
fdivrl
ja
mov
mov
or
cld
subl
or
fs
enter
mov
int
inc
incl
jp
sub
mov
add
pop
mov
cli
das
cmp
incl
cmp
adc
mov
or
les
scas
jl
push
or
inc
xor
jecxz
cmp
mov
mov
push
adcb
aas
dec
js
adc
lds
in
xchg
sbb
lds
test
push
lcall
or
dec
xlat
pop
jl
and
movsb
repz
lea
add
xchg
mov
clc
out
xor
es
hlt
dec
pop
mov
push
add
addl
mov
pop
or
scas
mov
cwtl
insl
sbb
gs
adc
incl
jl
cs
adc
jns
jmp
mov
xor
inc
fsubrs
pop
nop
fistpll
dec
jbe
xor
int3
add
outsb
pop
jno
mov
std
decl
mov
cmp
adc
xor
or
aad
push
popa
sti
lcall
daa
jl
lahf
mov
loop
test
sub
inc
les
jmp
mov
dec
mov
paddw
imul
shrl
jmp
pushl
scas
ja
or
hlt
mov
imul
mov
xor
pop
push
mov
js
pushf
negb
clc
imul
mov
sbb
add
sbb
sub
lret
pop
test
in
call
mov
xchg
inc
gs
lods
mov
ret
ret
adc
add
cltd
adc
fs
pop
pushf
jecxz
inc
clc
xchg
xchg
jg
test
push
mov
jl
lock
or
iret
adc
punpckhdq
incl
cld
incl
repz
imul
jmp
adc
mov
cmp
mov
movsb
outsl
and
jmp
jg
insb
lock
push
daa
fidivrl
movsl
and
sbb
pop
xor
incl
fs
jmp
daa
lods
inc
add
repnz
clc
jmp
sbb
leave
addb
cmp
enter
jmp
sub
pop
jl
pushl
mov
in
xor
xchg
ja
push
mov
pop
sub
xor
and
or
jp
ja
jmp
icebp
in
mov
mov
lcall
xchg
pop
pushl
xor
movsl
jo
ja
inc
ror
and
mov
out
sbb
adc
incl
jecxz
pop
outsb
inc
je
dec
mov
dec
insl
xchg
push
dec
pop
mov
sub
mov
jo
pushf
pop
and
ss
sbb
test
adc
pop
mov
cwtl
in
mov
inc
aad
adc
and
pushf
push
jle
ljmp
sub
or
enter
add
scas
mov
js
test
mov
jp
imul
ss
push
ret
or
call
mov
lcall
xor
add
mov
test
das
xchg
inc
pop
mov
cli
cltd
xchg
ljmp
push
daa
scas
in
cmpsb
mov
loop
or
jl
pop
mov
imul
pop
sub
call
fmul
mov
insl
cmp
inc
xlat
test
jne
fildll
bsr
lcall
xchg
es
andl
and
sub
shll
jmp
cli
shl
dec
jb
ljmp
and
call
mov
pop
push
sub
and
je
fs
mov
out
mov
pushl
test
outsl
leave
cmp
jl
sbb
pop
mov
jno
mov
and
call
shll
sub
outsb
push
mov
cmp
aaa
mov
ret
mov
jmp
xchg
incb
pop
lret
in
in
mov
cltd
stos
fistpll
mov
ljmp
or
fidivl
test
inc
arpl
test
push
cwtl
aam
jmp
cltd
pavgw
or
cltd
dec
idiv
lret
or
dec
ss
pop
ret
out
pushl
pop
add
mov
push
fcomp
das
sbb
xlat
rcrl
out
fldt
or
and
outsb
mov
xchg
mov
xlat
pushf
dec
push
adc
xchg
pop
pusha
aaa
or
add
or
push
sub
mov
mov
add
sub
dec
cs
incl
sub
xor
ja
xor
cli
out
out
jmp
stos
jns
lcall
push
rorl
aam
xchg
iret
push
xchg
loopne
lods
xlat
inc
lock
loop
xor
mov
lcall
insb
cmp
ds
sub
movsl
jecxz
nop
sbb
call
ret
jecxz
inc
loope
pop
cmp
shlb
jno
cwtl
push
repz
dec
fisubl
ljmp
hlt
test
mov
xchg
andb
inc
jp
push
ret
shlb
incl
adc
lods
ljmp
getsec
addb
cltd
dec
mov
imull
test
cmp
pop
cmc
rcrl
mov
jmp
sbb
in
sub
ljmp
pop
daa
sarb
push
sbb
outsb
mov
push
mov
xor
outsl
dec
sti
jae
dec
enter
pushl
sbb
fcoms
daa
into
out
lds
shlb
xor
or
sub
xor
mov
popa
pop
insb
push
inc
rcrb
mov
or
jae
add
xchg
sarb
mov
jl
or
daa
sub
xor
xchg
nop
add
lds
lcall
mov
xor
jne
pop
int
sbb
ffree
add
mov
cld
decl
test
negl
and
nop
rol
xor
sti
xchg
aas
roll
cmp
repnz
xchg
sub
adc
adc
nop
in
xchg
repz
xor
ret
lds
pushl
xchg
adc
or
mov
or
ja
jno
inc
ud0
ljmp
loope
cmc
push
inc
cmp
leave
pop
fidivs
decb
mov
jnp
into
fstpt
inc
ljmp
popa
push
jmp
clc
sbb
jg
push
inc
dec
lret
jge
dec
xorl
call
and
xor
push
pop
js
lock
mov
loop
inc
pop
clc
inc
lret
mov
pushl
xchg
jb
sbb
add
fnsave
andb
mov
xchg
add
xchg
push
jge
nop
cltd
jo
cs
xchg
leave
adc
dec
mov
add
mov
jmp
mov
cwtl
cmp
adcb
nop
roll
or
sarb
xor
icebp
lds
divb
cmp
cmp
xchg
sub
adc
jl
imul
call
sbbl
inc
mov
xchg
nop
insw
push
mov
rcll
mov
sbb
sahf
mov
insl
xchg
inc
ds
popf
sbb
rorl
pop
push
call
test
out
xchg
dec
out
adc
mov
or
imul
cmp
mov
mov
sbb
pop
into
sahf
lret
push
push
mov
ljmp
test
adc
addr16
in
cmp
sub
jmp
lock
test
inc
mov
std
les
int
adc
jmp
adc
out
mov
loop
rcrb
adc
cmp
inc
js
push
mov
addr16
cwtl
je
mov
clc
xchg
cli
bound
cmp
add
incl
in
loopne
pushf
sub
shl
icebp
mov
mov
aad
or
push
mov
out
adc
xchg
ret
lcall
icebp
pop
adc
aam
mov
hlt
mov
adc
negb
add
mov
xchg
aad
xorb
push
sbb
or
test
iret
sti
mov
lcall
xor
and
les
push
retw
les
cmc
mov
mov
scas
add
call
scas
pop
mul
test
daa
dec
adc
push
mov
mov
inc
pushf
dec
xchg
incl
inc
or
add
adc
inc
mov
into
call
cmp
xchg
shll
fucomip
pushl
sbb
inc
mov
sub
cmp
cmc
gs
mov
pop
push
add
mov
lods
cld
ljmp
fwait
jns
aas
stos
push
xor
sbb
rcrl
mov
xor
call
push
cltd
xlat
pop
adc
adc
imul
ds
xor
cwtl
cmp
inc
and
lcall
push
sbb
clc
xlat
mov
cmp
aas
pop
sbb
inc
lock
ljmp
ss
xchg
loop
mov
cwtl
test
notl
xchg
sbb
mov
dec
decl
imul
fimuls
loopne
add
insb
sbb
dec
mov
ljmp
and
push
cmp
ret
push
loop
pop
push
add
decl
repnz
and
xchg
mov
jne
pop
adc
and
or
shrb
fwait
inc
scas
sbb
es
ds
lea
cmp
shll
dec
das
sub
sbb
in
inc
pop
out
xchg
inc
and
jle
loope
push
pop
jg
cli
add
jmp
mov
fnstcw
dec
stc
movsl
and
xchg
adc
int3
cmp
popa
pop
cwtl
imul
in
and
pop
pop
mov
lea
inc
cmp
mov
jnp
test
dec
inc
ret
jmp
mov
xor
test
push
xchg
cmp
or
test
pushl
push
fistpll
lahf
in
movsl
mov
into
sub
stc
js
int
clc
jg
jmp
inc
stos
inc
in
push
dec
sub
outsb
jl
or
push
out
pop
imul
sbb
jecxz
stos
int3
rolb
dec
xchg
xchg
imul
mov
adcb
sub
push
mov
fisubl
cwtl
jecxz
jg
inc
out
adcl
push
pop
mov
sbb
loop
rolb
jmp
les
call
pop
pop
cld
rcrl
leave
test
pop
and
test
sbb
mov
sub
jno
ljmp
shrb
jmp
lfs
leave
out
mov
movsb
lcall
cmp
mov
xorl
ljmp
push
nop
sbb
jno
push
mov
addl
data16
call
int
call
imul
clc
movsb
xor
xor
mov
ljmp
sbb
sub
scas
cmp
cs
je
xor
cmpsb
shrb
adc
sub
jmp
popf
xchg
xchg
inc
jb
popa
jbe
xor
les
lcall
jae
jmp
xor
pop
outsl
dec
push
mov
shl
sbb
mov
jae
jb
jo
pushl
loop
ljmp
sub
movsl
push
test
ds
enter
jecxz
les
sbb
and
xchg
push
xor
mov
xchg
dec
inc
shll
stc
pop
arpl
cs
adc
loope
jmp
pop
push
sub
jle
insb
inc
lahf
lea
sahf
je
lods
push
add
cld
adc
imul
daa
sahf
aam
pop
sti
insb
mov
dec
les
mov
and
lock
decl
ffreep
adc
adc
pop
pop
jne
arpl
mov
xorb
mov
jne
or
jns
ret
jno
pusha
cmp
lcall
repz
das
or
in
adc
incl
sbb
xchg
in
jno
push
fwait
mov
fistl
lea
out
mov
ljmp
cmp
cltd
ret
sub
jno
lcall
faddl
cmp
ds
push
jg
cmp
xchg
inc
cltd
push
ret
inc
mov
fcoml
push
xchg
sbb
xchg
cmpl
mov
pop
fldl
sub
sbb
movsl
xchg
cmpsb
imul
decl
jmp
pop
icebp
push
out
sbb
jno
call
jmp
xchg
mov
stc
pop
dec
jp,pt
lods
sub
scas
or
icebp
mov
xchg
or
sub
add
mov
in
cmpsb
cmp
cwtl
cmp
pop
roll
sbb
dec
xchg
lcall
jmp
icebp
stos
cs
mov
fimuls
data16
and
cmpl
dec
pop
adc
nop
das
test
push
cs
leave
fwait
or
inc
std
call
mov
sbb
rcr
ljmp
cmp
xchg
ret
jge
ss
call
call
std
aaa
dec
cmp
mov
adc
mov
mov
ret
mov
call
call
cmc
fiaddl
xor
dec
pop
out
push
or
push
popf
fsubr
sti
fldcw
xor
add
scas
dec
pushl
push
sbb
inc
cld
rclb
aam
int3
pushf
add
movb
jmp
dec
ja
jno
rorb
popl
popa
fisttpl
xor
or
push
cmp
fistl
jecxz
pop
pop
incl
stos
cwtl
rorl
sub
loop
or
xor
jo
stos
lcall
jl
cmp
repz
scas
out
cmc
aad
xchg
or
jns
xor
ljmp
mov
int
pop
sti
arpl
pop
sub
mov
imul
push
enter
dec
and
inc
xchg
sbb
arpl
mov
push
push
mov
or
jg
pushl
lods
scas
jns
cld
sahf
cld
pushf
in
hlt
movsb
jno
test
repz
call
mov
sub
das
call
lea
push
fisubs
testb
push
mov
mov
pop
pushf
add
mov
jae
and
mov
stos
mov
pop
paddd
out
push
cwtl
push
or
mov
repnz
cmpl
fwait
and
fstpt
movsl
mov
in
sti
int
cmp
xchg
lret
imul
ja
push
cmpsl
aas
dec
fcoml
testl
xor
jle
imul
addr16
sub
movl
or
add
push
aam
stos
xchg
mov
sub
jg
mov
push
aam
iret
sbb
xchg
cltd
push
ret
pop
mov
jmp
fcos
ljmp
inc
sbb
adcb
popf
mov
cmp
jnp
cmp
pop
call
test
mov
cwtl
cmc
adc
mov
add
pop
xor
jno
jns
out
mov
decl
push
mov
push
lock
add
ds
mov
dec
fisttps
or
jae,pn
incl
int3
stos
in
jbe
fisubs
or
sahf
inc
mov
jb
lods
push
pop
popf
pushl
jg
test
pop
inc
repnz
stos
cltd
push
dec
dec
push
mov
add
sub
xchg
lock
call
mov
movsb
push
mov
jle
stos
pop
sahf
pop
outsb
adc
xchg
out
xchg
int
ljmp
cli
jb
shrl
sbb
xchg
push
xchg
enter
sub
add
mov
incl
arpl
adc
jge
jne
mov
aad
clc
xchg
testl
jnp
ljmp
sub
notb
js
xchg
cltd
mov
loopne
lret
es
lahf
rcrb
cmp
fwait
int3
lcall
loope
decb
lds
jno
and
lds
loop
xchg
das
cli
xchg
add
jle
lock
sub
jmp
lds
jbe
fmull
jge
push
call
add
outsb
lcall
pop
jecxz
cltd
mov
mov
mov
xorl
dec
call
popf
cwtl
movsb
pushf
pushf
or
in
stos
in
cmp
rcl
pushl
pop
jmp
xor
push
je
hlt
sarb
fnstenv
jg
pop
imul
mov
fdivr
lock
int3
sbb
enter
mov
ljmp
push
sbb
inc
loope
jmp
jnp
test
add
jp
adc
fstl
push
ljmp
mov
imull
jmp
movsl
movsb
addr16
mov
cld
xor
sub
add
cmp
pmaxsw
xchg
xchg
adc
push
mov
icebp
pushf
movsl
clc
cmp
pop
xlat
push
dec
inc
mov
cmp
jbe
cltd
fdivrl
out
int3
aaa
mov
insb
lods
or
jp
adc
xchg
mov
xor
movb
push
aam
inc
in
rcrb
ret
lods
xchg
jbe
pushf
daa
jbe
lahf
ss
enter
out
shlb
mov
pushl
loopne
jg
mov
je
or
clc
adc
negl
popf
test
data16
jg
jg
inc
xor
fnstsw
imul
aam
mov
and
xchg
inc
xchg
decl
lods
nop
decb
adc
xchg
dec
test
xor
aas
push
jnp
jno
int
aas
pop
inc
call
or
push
bound
and
inc
fidivl
lods
ja
inc
and
adc
scas
clc
jmp
pushf
mov
ficoms
push
imul
ljmp
loope
ror
push
ja
pop
ja
dec
repnz
cwtl
loope
push
xchg
lcall
jmp
sbb
ja
dec
jb
mov
mov
jns
ljmp
inc
cmpsl
incl
mov
mov
out
jmp
pop
enter
lcall
sarb
decl
or
fdivp
and
icebp
mov
aad
inc
xchg
inc
stos
and
test
mov
cli
cmp
insl
adc
lods
insl
setge
pusha
out
xor
ss
push
and
jb
sti
jbe
test
jge
jnp
sbbl
scas
or
stos
mov
movsb
mov
hlt
push
mov
sub
loop
dec
scas
rclb
decl
dec
outsl
fs
aas
loope
std
lock
mov
xor
pushw
xor
mov
push
mov
mov
pop
sbb
dec
sbb
xor
mov
scas
ljmp
test
mov
mov
loopne
clc
insb
fisttps
bound
cwtl
out
jg
call
mov
cmp
in
xlat
cmpsb
js
out
js
push
mov
imulb
ds
jmp
pop
xchg
cmp
jp
jb
in
in
outsl
mov
pop
into
aad
xchg
int
data16
and
call
sbb
lcall
rcrb
rolb
popl
incl
stos
jmp
aam
icebp
dec
add
jecxz
out
out
fwait
jp
call
cld
xor
mov
sbb
mov
cmp
mov
test
fnsave
xlat
fimull
out
sub
out
int3
xchg
shll
jmp
ja
ljmp
add
or
fwait
icebp
fisubrl
divl
insl
outsb
cmpsb
or
je
sub
push
lock
jmp
dec
push
sub
fcmovne
lds
insl
call
or
mov
and
jmp
idiv
incl
fildl
rorb
jmp
xlat
lea
push
pop
lret
incl
pop
or
pop
cmp
fs
push
loope
aaa
sbb
out
mov
incl
aad
aad
push
mov
int3
add
xchg
jbe
ja
or
insl
inc
xor
pushf
push
call
dec
out
inc
fldenv
sti
mov
pop
add
add
xchg
aaa
xor
mov
xchg
jge
cs
fdivl
scas
fs
push
cmp
cli
insb
lahf
sarb
jnp
in
mov
imul
andl
jno
xchg
cmp
ss
iret
push
jb
xor
daa
push
ljmp
aaa
mov
sti
leave
mov
pop
insl
and
ret
sbb
mov
sar
test
rcll
sbb
outsl
cmp
shr
orb
xchg
xor
std
add
ljmp
jnp
addr16
inc
or
add
sub
das
arpl
jns
imull
jae
std
fcomip
call
leave
jecxz
out
rcl
ffreep
sub
pusha
mov
rcll
mov
clc
fwait
dec
imul
mov
in
xchg
pusha
test
inc
mov
hlt
jmp
pop
dec
nop
movsb
imul
lds
dec
adc
repnz
nop
sbb
mov
mov
psrad
imul
mov
and
pushl
ds
in
mov
jg
imul
mov
inc
xor
mov
decl
dec
jo
xor
imul
cmp
test
fistps
xchg
or
inc
push
dec
test
lock
xor
and
jmp
adc
rcr
scas
mov
add
mov
insb
addl
in
xor
adc
lcall
lcall
mov
int
call
fincstp
dec
add
test
dec
cmp
jge
cwtl
outsl
pusha
mov
ret
jg
js
mov
pusha
loop
jmp
and
fs
pop
xlat
pusha
or
negl
add
ret
jne
sbb
loopne
sarl
in
pop
jmp
iret
cmpsb
xchg
cmp
movzbl
xchg
stos
xor
jns
inc
sub
faddl
repnz
lcall
dec
cmp
pushf
inc
lea
out
sub
inc
das
jge
push
mov
in
jne
inc
xchg
movsl
sbb
in
pusha
jae
dec
clc
xchg
xchg
cmc
lcall
pop
xor
jne
push
daa
out
xor
adc
mov
cld
cs
add
mov
adc
decl
dec
sbb
xor
dec
fisttpll
and
popa
cmpsb
mov
into
mov
push
data16
inc
jl
push
xlat
loopne
mov
mov
mov
rcrl
addr16
or
fnstsw
cld
push
repz
inc
mov
mov
push
mov
js
je
scas
enter
incl
sbb
mov
test
fstpl
call
lcall
and
testl
push
lcall
and
mov
and
pop
ret
lcall
jg
shlb
xchg
add
add
imul
jmp
insl
cmp
inc
jno
sub
fdivr
push
mov
incl
cmpsb
cmc
jns
lock
cmp
js
jecxz
pushf
pop
sub
lods
or
repz
addr16
mov
in
out
cmc
outsl
jecxz
dec
iret
fidivs
call
loope
into
movl
inc
lock
clc
test
leave
jbe
data16
sbb
cmp
jnp
or
pop
inc
or
scas
cmpsb
jle
push
std
jp
fiadds
stc
mov
cltd
cs
push
inc
push
test
sahf
mov
decl
cltd
sub
scas
xor
sub
add
xlat
addr16
push
push
lds
repnz
sbb
and
dec
outsl
imul
ret
out
sahf
sbb
mov
cld
dec
sbb
dec
roll
or
inc
or
cmp
dec
test
lret
or
sbb
scas
stc
movsb
mov
lcall
flds
cmp
bound
or
or
dec
and
mov
data16
bound
test
arpl
pop
cmpsl
xchg
inc
loope
xchg
xor
iret
push
imulb
incl
sub
push
xchg
dec
jns
push
pusha
and
out
clc
inc
add
xor
sub
cld
or
aam
mov
test
out
push
rcrl
and
repnz
lds
enter
icebp
push
xorb
mov
cmp
xchg
xchg
outsb
jge
or
jle
push
mov
xchg
int
inc
dec
or
sbb
je
sub
shll
adc
shrl
mov
cmp
subb
test
jge
xchg
test
push
xor
xor
rcl
es
jmp
sbb
push
je
mov
mov
ja
pop
imul
lock
push
sbb
sbb
aaa
xor
repnz
push
pop
rorb
leave
xor
mov
xchg
repz
mov
out
in
pop
lahf
mov
pop
incl
lret
cmp
sub
pop
push
sbb
pop
mov
ljmp
inc
lcall
push
mov
inc
xchg
mov
push
lahf
sbbb
pushl
icebp
mov
icebp
jns
xchg
add
loopne
sbb
imul
mov
jo
xchg
rolb
cmp
mov
stc
mov
push
call
test
add
cld
pusha
mov
dec
inc
int
and
push
mov
lcall
jmp
enter
mov
divb
mov
inc
jg
xor
cltd
sbb
mov
push
jecxz
push
dec
test
scas
stos
jmp
imul
mov
fwait
mov
pop
mov
mov
outsl
inc
notl
mov
mov
mov
andb
adc
pop
nop
xor
mov
call
mov
push
and
xchg
les
aaa
push
pop
aam
popf
inc
jecxz
mov
or
stc
repnz
jg
dec
rcll
scas
stc
fistpl
mov
int3
stos
add
adc
dec
push
jo
clc
xchg
stos
je
pop
arpl
mov
in
inc
mov
dec
imull
adc
call
notl
pop
fistpll
mov
xchg
or
jb
dec
push
mov
sahf
mov
xlat
nop
jmp
xor
mov
pop
movsl
add
pusha
adc
cmp
jp
bnd
inc
rcrl
inc
ret
cmp
shrl
repz
lods
push
lods
imul
flds
pop
out
clc
das
shlb
in
mov
jb
andb
std
lcall
sarb
lods
jns
push
mov
mov
push
mov
cmp
mov
sbb
xchg
mull
sbb
mov
imull
push
jle
push
jb
pop
lock
cmp
mov
in
jp
mov
push
sbb
jae
add
call
inc
cmp
mov
int
outsb
mov
and
ja
shr
clc
addb
adc
decl
ljmp
data16
cmc
jl
jnp
test
aad
ss
fpatan
outsb
mov
mov
mov
jb
stos
outsl
adc
ucomiss
das
and
inc
fwait
mov
das
sahf
out
inc
fsts
fs
ret
fst
jp
in
mov
data16
sub
dec
push
dec
aam
xchg
cld
xor
out
ret
loopne
add
jecxz
add
lds
jmp
pop
push
push
xchg
movsb
sbb
rolb
jp
jg
xchg
pop
sbb
or
push
xor
mov
call
push
jecxz
add
inc
ljmp
sbb
mov
cld
or
push
xchg
pushl
add
mov
rolb
and
cld
xchg
cmpsb
inc
cli
xchg
jg
mov
lea
stc
jmp
aam
out
out
adcl
mov
jo
adc
mov
decl
pushf
cld
mov
jmp
lahf
jns
push
mov
sqrtps
pop
int
daa
mov
push
stc
inc
sbb
adc
mov
or
xchg
inc
sbb
xchg
lods
xchg
ss
pop
test
mov
inc
mov
ljmp
inc
nop
and
cmp
lret
decl
xor
popf
out
call
pop
mov
cmp
mov
sub
incl
push
jge
mov
adc
mov
mov
rcrb
aam
mov
sbb
mov
jmp
pop
pushf
sbb
mov
lods
out
outsb
and
dec
and
sti
push
ljmp
inc
filds
nopl
cwtl
mov
mov
fimuls
inc
mov
pop
add
sbb
add
cmc
incl
addr16
sbb
mov
hlt
fs
fsubs
aad
mov
sbb
fistpll
add
lcall
loop
adc
xchg
or
cmp
push
nop
mov
pop
lds
ljmp
stos
pop
jecxz
repnz
inc
jbe
mov
jb
shll
pushl
es
ljmp
pushf
out
or
lods
pop
xor
in
dec
movsl
cmp
ss
cld
jp
cli
mov
add
scas
pop
sbb
mov
ljmp
dec
cmpsb
or
or
movsb
mov
and
scas
popa
lahf
mov
add
pushl
sar
mov
outsl
mov
add
decl
xchg
pusha
push
divl
sub
mov
loopne
mov
mov
lcall
pushf
popf
jge
daa
pop
cmpb
les
in
and
mov
imul
incl
test
fstps
push
push
add
jl
sub
adc
cmp
lcall
xchg
pop
mov
or
lcall
mov
push
xlat
jae
jmp
stos
pushl
popa
cmp
popa
xor
inc
movsl
jl
imul
fbld
cmp
clc
das
cli
ljmp
cmp
test
cmp
add
ljmp
in
ret
mov
mov
sar
call
cmp
push
adc
pop
xor
fdivrl
push
or
jbe
gs
dec
sbb
decl
lea
test
ljmp
and
fidivrs
xlat
insb
rol
incl
sub
inc
sub
mov
sub
sahf
or
insl
xchg
test
jmp
dec
lea
aad
test
mov
inc
repz
ss
test
dec
cmp
inc
inc
jp
int3
cmp
lea
and
out
js
push
push
iret
xor
mov
push
xor
mov
mov
loopne
pop
mov
dec
xchg
std
int
jae
mov
imul
ljmp
into
push
stos
or
inc
dec
pushf
rcll
jecxz
push
sub
xor
cmp
mov
lods
add
and
sub
push
jmp
mov
or
mov
pushl
rolb
jno
lds
xchg
out
shll
dec
jno
xor
sbb
inc
and
lahf
and
dec
movsl
mov
mov
mov
pop
pop
lock
daa
and
mov
jmp
jle
loopne
xchg
push
adc
jo
out
in
pushl
push
iret
push
sub
loopne
and
jae
mov
pushf
fmull
adc
repnz
in
push
clc
xor
aas
push
add
rolb
dec
cwtl
xchg
xlat
je
xor
cltd
scas
out
ljmp
sbb
xchg
or
adc
cmp
mov
mov
rcl
shlb
sbb
out
xchg
push
jecxz
adc
pop
and
lret
scas
incl
xor
es
push
push
cmpsb
frstor
adc
sbb
shrl
test
daa
or
inc
mov
push
and
xchg
mov
call
mov
sub
dec
sub
dec
dec
lcall
sbb
pop
add
call
pop
cltd
popa
or
mov
test
xor
adc
fxtract
push
jmp
fists
cwtl
or
dec
or
in
icebp
aad
daa
mov
out
mov
hlt
lcall
pop
cmp
dec
mov
cwtl
lret
cmp
mov
lcall
jge
xor
sahf
lret
cmp
cltd
in
aas
jno
adc
mov
push
sbb
add
es
mov
loopne
stos
cltd
dec
mov
daa
aas
pop
lods
mov
pushl
int3
aaa
cwtl
mov
xchg
pop
push
mov
xchg
sbb
cmpsl
outsl
clc
pushl
adc
pop
lea
clc
ret
add
pop
inc
cmp
sbb
jle
inc
in
sub
inc
inc
in
xor
es
and
fucomi
int
jg
cli
pop
or
sahf
stos
sbb
mov
ss
movl
mov
fld
adc
insb
arpl
test
mov
pushf
push
fistpll
mov
cli
decl
jle
rolb
lock
dec
mov
pusha
enter
testb
call
cwtl
push
lret
push
cmp
mov
ret
fwait
mov
jle
mov
idiv
jmp
sbb
xor
add
ret
dec
cmp
jp
and
mov
pop
ljmp
xchg
daa
jno
push
in
pop
icebp
xchg
and
fsub
jmp
sbb
mov
mov
or
dec
sti
bound
add
rcrb
inc
mov
pop
or
adc
adc
in
in
adc
or
call
lret
test
pop
lods
xchg
pop
push
and
out
push
add
xchg
mov
decl
cmpsb
bound
mov
outsl
mov
cs
and
insb
incl
int
cmc
adc
ss
dec
popa
inc
mov
pop
ret
test
add
mov
iret
inc
inc
or
inc
pusha
jp
in
cmc
add
test
adc
icebp
jg
dec
adc
add
push
ss
repnz
push
mov
push
mov
clc
cmp
insl
fxch
inc
pop
out
loop
xor
call
faddp
andb
clc
xchg
lods
hlt
mov
jbe
repz
sbb
call
int
cmp
jmp
adc
mov
sub
js
stc
adc
mov
incl
xor
jg
lahf
ss
or
adc
push
sub
adc
push
push
sbb
call
dec
jmp
cmp
jmp
pop
in
jge
mov
inc
pop
cmp
movsl
or
incl
cmpb
fsubs
addr16
xchg
and
vmovq
jno
inc
inc
mov
shl
pusha
pop
js
cli
les
sbb
cmc
rorl
and
adc
xor
mov
or
in
push
pushl
stc
sub
psrlq
sbb
sub
push
mov
out
dec
decl
push
ja
push
enter
dec
mov
xor
push
xchg
mov
stos
lods
incl
test
cmp
loop
fnstcw
cmpsl
mov
imul
xchg
add
lcall
std
mov
sbb
pushl
mov
push
adc
pop
mov
dec
les
imul
pop
dec
pushf
mov
cmp
out
out
push
mov
mov
pop
test
push
std
decl
inc
jge
adc
mov
sbb
sbb
jmp
xor
cs
cmp
mov
data16
dec
jg
xchg
jmp
mov
xchg
push
lods
clc
outsl
cmp
ret
push
sbb
data16
cmp
cmp
fiaddl
mov
mov
cltd
pop
test
roll
add
ja,pn
repnz
sbb
out
and
cmp
mov
stos
sarb
enter
dec
addr16
push
cmpsb
incl
cmp
jnp
dec
push
inc
push
mov
cltd
pop
mov
mov
call
cs
out
sub
jge
fcoml
push
fimuls
jmp
ljmp
adc
ljmp
inc
cwtl
sbb
dec
jl
cli
call
loop
jle
or
push
jne
adc
aaa
loopne
js
pop
add
mov
mov
mov
out
add
sahf
out
adc
and
popa
mov
mov
adc
add
and
cmp
xchg
sar
lcall
addb
loop
cmp
inc
jg
pop
sub
mov
ret
das
insb
cmp
jbe
pusha
leave
add
ja
pop
in
out
jle
xor
bsr
dec
xor
mov
push
lods
mov
icebp
and
stc
mov
ficoms
test
dec
pushl
icebp
mov
pushf
xchg
jge
mov
jl
dec
pusha
jle
vphadduwq
xchg
xchg
pop
loop
jmp
mov
popf
cmp
out
and
ret
mov
or
loope
clc
inc
mov
inc
imul
jmp
cld
in
fcoms
decl
sarb
mov
fdivp
aad
sbb
dec
pusha
mov
out
adc
and
mov
or
push
popa
xchg
pop
incl
push
push
cwtl
ret
mov
xlat
jl
out
cmc
lds
mov
cmp
cld
int
xchg
cltd
xor
mov
xor
mov
jg
jmp
stos
xchg
jb
test
addr16
js
jecxz
push
push
push
sbb
lock
incl
dec
and
cs
cli
mov
outsl
cmpsb
insb
mov
mov
stos
stos
pop
pop
push
sarb
test
addb
enter
stos
lahf
xor
iret
call
cmpsb
outsl
ret
stos
fwait
pop
push
iret
jno
mov
popf
in
mov
jmp
inc
xchg
pop
inc
repz
xlat
jmp
or
sbb
popf
push
out
jb
jbe,pn
aam
lods
cmp
xor
incl
je
nop
in
jl
and
pop
jbe
gs
loopne
loop
scas
jg
ret
inc
ss
mov
cltd
mov
frstor
ficoml
shll
test
cs
mov
cmp
mov
xchg
call
sub
iret
sub
jg
dec
movsb
data16
repnz
sbb
or
rcll
pop
jecxz
and
mov
js
and
mov
sub
pushl
xor
cmp
jcxz
sahf
pop
int3
inc
adc
sbb
in
sahf
push
jle
push
mov
incl
ja
cwtl
push
mov
test
cmp
into
mov
jo
mov
filds
add
movsb
mov
xchg
mov
xor
je
pop
out
popf
dec
add
pusha
mov
mov
mov
dec
int3
cmpsl
data16
pop
pop
xchg
and
pop
mov
dec
xchg
adc
sbb
hlt
sahf
call
pushf
ret
pop
xchg
push
lods
dec
outsb
fists
addr16
scas
in
in
dec
sub
or
sti
test
cmp
push
adc
mov
frstor
push
cmp
xchg
adc
ret
mov
jns
mov
data16
sbb
inc
movsl
inc
or
cmc
cmpsl
cmp
adc
push
loop
pushl
pushl
xchg
cmp
sbb
dec
ret
pusha
fxch
nop
int
jmp
lea
fstpl
ljmp
aad
pop
push
jo
xor
mov
add
ljmp
scas
scas
push
outsb
imul
mov
push
repnz
sbb
decl
lcall
xlat
push
aam
in
or
insl
cmp
lock
ljmp
jge
repz
aad
or
outsl
clc
in
mov
fcomip
dec
outsl
push
and
dec
fiaddl
pop
pop
push
sbb
fidivrs
push
and
cmp
ljmp
pop
jns
roll
lods
push
enter
loopne
jns
xchg
mov
pushf
mov
push
std
incl
xchg
sub
adc
in
mov
mov
sbb
lea
sbb
je
xor
mov
pushl
xchg
cltd
cltd
dec
mov
cmpsb
lods
daa
in
xor
hlt
in
push
jns
add
decl
roll
push
movsl
inc
inc
nop
arpl
or
dec
iret
sbb
cmp
cmp
fcomip
ljmp
cld
pop
xor
mov
fnstenv
cmpb
lock
ljmp
mov
dec
cmc
arpl
jb
jb
ret
in
mov
add
ljmp
xchg
std
out
loop
mov
addb
flds
repz
andl
test
incl
cmp
mov
fildl
mov
pop
push
cmp
out
dec
nop
cmp
imul
mov
pop
insl
dec
out
bound
jmp
fidivrl
adc
inc
lods
jo
mov
in
sbb
sub
xchg
popa
jg
test
test
ljmp
sbb
xor
data16
addr16
pop
or
xchg
shll
fldenv
call
scas
lret
stc
xchg
popf
les
in
mov
andl
movsb
dec
gs
and
jmp
fs
cmp
loope
icebp
xchg
inc
and
cmc
jmp
popa
cmp
xor
inc
aam
pop
ja
push
outsb
dec
xchg
pop
mov
push
or
negl
pop
xchg
ljmp
push
mov
rorb
dec
jns
out
cmp
rcr
xlat
xor
imul
lcall
push
xchg
test
sub
push
sub
pop
inc
add
push
mov
jecxz
mov
and
lods
aaa
in
sub
lock
into
stc
push
pop
jmp
pop
push
dec
mov
dec
movsb
imul
int3
or
ss
das
inc
shl
jmp
inc
inc
pop
xlat
sub
inc
lods
ss
ljmp
or
xor
xchg
mov
adcb
call
mov
add
mov
xchg
gs
iret
pushf
xchg
je
orb
notl
fdivr
ljmp
ljmp
mull
jnp
or
loop
pop
mov
movaps
fs
clc
repz
and
test
jnp
inc
pop
xchg
mov
lahf
xchg
mov
int
data16
lcall
je
xchg
sub
push
xchg
out
clc
ffreep
fwait
icebp
loope
sbb
adc
in
mov
mov
das
pop
lods
mov
xor
out
adc
test
jle
cmc
loop
jne
mov
cwtl
jb
pop
pusha
jle
add
inc
jbe
mov
pop
aam
icebp
lods
xchg
add
incl
jne
lock
add
addr16
loopne
into
aas
cmc
lea
ljmp
negb
shlb
lock
mov
or
loope
mov
pop
dec
pop
stc
popf
push
lock
add
cmp
aas
dec
cs
lock
mov
add
sub
fnstsw
cld
add
daa
cmp
repnz
sbb
mov
inc
push
jge
mov
dec
jge
jno
fs
pop
sub
sbb
lods
cmp
lret
push
in
jns
jg
icebp
pushl
in
mov
push
inc
je
xor
lret
adc
decl
push
arpl
add
push
pushf
out
xchg
push
in
ds
call
add
cli
in
cmp
out
push
push
js
in
loopne
mov
push
stos
jg
decl
jl
sahf
fs
mov
gs
xor
mov
mov
and
jmp
adc
xor
xchg
pop
mov
push
sub
mov
fbld
decl
cmpsl
dec
or
mov
mov
inc
loopne
pop
xor
insb
push
adc
mov
inc
or
das
dec
call
aad
imul
icebp
push
shrl
das
jl
aas
lea
les
dec
lcall
mov
add
out
push
xor
lcall
pop
fisubl
dec
into
decl
test
pop
in
in
test
cli
sub
and
jb
dec
cmp
incl
cltd
stos
in
nop
pop
fidivrs
jo
outsb
repnz
mov
insb
aaa
xor
lret
call
scas
test
cld
call
test
mov
icebp
mov
dec
jnp
outsb
sub
adc
sbb
cmp
hlt
cmp
or
in
add
repnz
and
incl
dec
pop
outsl
pop
in
pop
jb
sub
bswap
inc
rorl
fmulp
incl
cli
lods
loope
pop
adcb
fs
and
xlat
addr16
rcl
push
js
ror
pushf
xor
std
incl
scas
pusha
cmc
xchg
cmp
pop
add
xchg
mov
dec
push
push
xchg
push
push
cs
jg
je
cwtl
mov
push
or
aas
mov
jns
pop
bound
jns
inc
mov
pushl
sub
jge
repz
fs
mov
xchg
ja
nop
inc
cld
decl
roll
add
add
push
lock
push
scas
push
pushl
adc
push
mov
pop
scas
xchg
push
popf
add
loope
cmp
insb
call
xchg
jmp
dec
mov
jbe
add
mov
xor
int3
dec
and
cmpsb
mov
pusha
cmp
push
notb
xor
out
sarb
xchg
lods
inc
mov
andb
call
cmp
pop
fmull
imul
mov
movsb
push
mov
shlb
jmp
out
mov
imulb
inc
mov
es
pop
ljmp
mov
inc
xor
jg
xchg
add
ret
pop
mov
sub
or
scas
push
imul
dec
daa
push
movsb
mov
sbb
or
nop
in
sbb
pop
cli
add
incl
xchg
psubq
pushf
mov
add
hlt
mov
mov
add
fsubs
in
call
pop
popf
lcall
and
xchg
stc
jno
incb
das
fadds
jmp
popa
out
push
adc
int3
adc
jmp
in
cmp
iret
jae
xchg
pop
inc
sub
xor
xchg
sar
push
fwait
pusha
lock
or
cmp
or
rcll
leave
gs
jecxz
repz
lods
fdiv
jg
pusha
arpl
inc
mov
cmp
insl
and
ret
xor
pushl
sbb
scas
dec
push
dec
mov
add
and
mov
mov
popa
mov
imul
and
rcrb
sbb
std
shll
incl
test
add
sub
xor
adc
pop
out
mov
dec
jbe
stos
lcall
cli
into
jbe
add
test
aad
xchg
adc
mov
jp
aas
and
push
push
mov
lcall
aad
fst
mov
xor
jbe
pop
daa
daa
and
pop
cmp
out
cs
call
or
push
mov
xor
xchg
int3
outsl
push
cmp
scas
cs
xor
lods
sti
cmp
call
xchg
add
add
outsl
sahf
mov
push
add
stos
push
leave
or
inc
daa
lcall
mov
bound
push
jecxz
jnp
sub
or
sub
cmp
mov
push
jae
lcall
fisttpll
out
sbb
gs
gs
sub
lret
call
lods
mov
xchg
scas
hlt
push
stc
mov
cmp
scas
xchg
std
xchg
add
call
sub
arpl
jmp
sbb
ret
cli
jle
mov
inc
xchg
fmuls
sub
xchg
imul
dec
or
test
ljmp
pop
push
mov
fcomp
negl
pop
xchg
mov
sub
shll
es
out
dec
jecxz
lret
incl
fdivl
cmc
push
outsb
cmp
jae
lods
cmp
adc
mov
aad
mov
lcall
out
jb
scas
push
push
pop
ss
or
dec
lods
clc
mov
sahf
aam
and
inc
in
inc
pop
stos
adc
out
cmp
cmpsb
sbb
mov
das
repz
jmp
mov
div
movsl
xor
pop
mov
xchg
out
gs
out
mov
call
mov
xchg
mov
adc
or
ja
fldl
cmpsb
sub
jecxz
into
fs
std
mov
sub
push
ljmp
pop
jecxz
mov
aaa
std
incl
xchg
mov
adc
or
in
imul
nop
sbb
pushl
jp
sub
xor
out
subl
mov
push
stc
fadd
push
int
sub
cmpsb
sub
lock
pushl
add
lret
repnz
or
mov
ljmp
cwtl
js
dec
mov
mov
repz
les
dec
icebp
sbb
cld
cli
std
cs
call
mov
cmp
outsb
repnz
xor
push
dec
jno
adc
cltd
test
ljmp
scas
push
pavgb
jae
sbb
inc
mov
push
lods
sub
inc
adc
cmpl
pop
pop
lds
mov
mov
test
cli
aam
ljmp
popa
and
popa
outsl
into
cmpsb
xchg
mov
divl
lret
push
xor
call
les
gs
push
or
out
test
sbb
pop
enter
roll
cwtl
sbb
call
popf
jae
pop
lcall
dec
fimull
mov
mov
out
in
cmp
push
into
dec
pop
push
add
lock
ja
in
inc
sbb
sbb
bound
jmp
hlt
rcr
mov
sub
jae
fadds
mov
add
lock
lea
lret
sbb
call
inc
stos
orl
mov
adc
xchg
pop
jle
push
sbb
mov
imul
fidivrl
call
cmpsb
lock
ja
pop
inc
cli
push
ljmp
inc
ljmp
or
js
sbb
out
sbb
rdmsr
decb
mov
pushl
or
jecxz
sub
mov
pushf
lds
or
out
gs
lea
push
adc
out
jg
and
cwtl
arpl
daa
in
add
test
add
or
cmp
xchg
dec
std
decl
mov
cli
mov
lock
push
ljmp
lds
js
aas
dec
in
out
bound
lahf
and
push
adc
mov
pop
lcall
decl
pushl
inc
out
inc
mov
cmp
mov
cmp
insb
jno
sbb
call
dec
rorl
stos
xchg
push
add
pushl
addr16
enter
popa
hlt
int
test
cmp
and
nop
xchg
in
aam
lock
out
pushf
push
mov
push
test
mov
shlb
call
pushf
leave
mov
test
push
enter
ljmp
mov
mov
jne
sub
mov
inc
iret
mov
ljmp
jg
ret
adc
adcl
pop
js
ljmp
sub
cltd
scas
cmp
lcall
mov
lock
scas
les
jp
cltd
push
ljmp
lods
rcrl
adc
sbb
pop
dec
sub
int3
jg
sbb
jmp
pushl
out
mov
push
jae
sarl
mov
movsl
test
mov
mov
mov
adc
jnp
insb
pop
xlat
dec
and
and
cmpsl
mov
fcos
jl
outsl
cli
lcall
inc
xor
xchg
test
rclb
add
mov
scas
mov
call
mov
mov
aaa
mov
sub
push
ljmp
aad
aam
aaa
fwait
mov
incl
add
or
repnz
cmpsl
mov
fsub
dec
cmp
decl
inc
dec
sar
mov
push
xchg
repnz
push
fs
sti
sub
fcmovb
stc
inc
mov
mov
mov
push
fdivs
or
mov
pop
inc
inc
xor
jmp
test
call
fldl
je
xchg
xor
ss
ljmp
lcall
add
inc
pop
out
lds
mul
je
faddl
fcomip
clc
add
dec
in
je
xchg
add
push
sti
push
popa
mov
pop
insb
xchg
decl
or
jge
inc
popa
push
pop
pop
xor
jbe
adc
cli
and
push
test
loopne
icebp
cmp
mov
adc
add
fstpl
sub
push
call
pop
jno
push
dec
ret
xchg
jns
dec
loopne
lds
sub
fwait
pushf
cmp
jmp
mov
pop
add
fisttpl
inc
jno
inc
jmp
push
out
sbb
push
scas
mov
das
xchg
lret
ja
daa
stc
adc
xor
mov
adc
shll
stos
lret
pop
sub
add
jne
lcall
mov
idivb
fnsave
inc
xchg
mov
ror
lods
jl
adc
push
hlt
ljmp
sbb
cmp
fnstenv
neg
cmpsb
leave
mov
nop
idivb
dec
lcall
incl
adc
and
and
xlat
stos
in
adc
int
mov
shll
shll
mov
and
push
mov
sbb
ljmp
mov
pop
pop
repnz
icebp
jmp
mov
ljmp
add
scas
out
jbe
inc
fimuls
mov
xchg
sub
dec
lea
stos
pushl
jge
adc
mov
mov
data16
decl
aam
add
jne
cmpsb
xor
out
cwtl
mov
sti
inc
enter
xchg
outsl
cmpsb
ljmp
cli
call
inc
jo
dec
jae
jnp
jmp
jl
pusha
mov
stc
stos
pop
aas
jb
call
mov
dec
pop
mov
not
test
iret
ret
cld
push
inc
leave
loope
mov
adc
mov
jl
jmp
jno
lret
xchg
jp
push
repnz
and
pushl
sub
push
leave
xlat
xchg
fwait
popa
out
dec
cmp
xchg
call
jbe
jge
out
lcall
ljmp
jecxz
pop
stos
adc
push
pop
jnp
mov
cld
add
sbb
cmp
call
mov
sub
popa
mov
dec
jle
nop
push
out
sbb
add
test
jp
cli
addr16
mov
push
std
cwtl
jo
dec
iret
xor
in
ljmp
test
psllw
loopne
les
xchg
in
and
cmp
lcall
cmp
pushl
dec
fidivrs
pusha
or
or
imul
stc
mov
add
pop
test
lea
shrb
ljmp
push
push
and
push
push
testw
stos
call
scas
xchg
cmpsb
pop
sub
cmpl
mov
fistpl
test
out
xchg
mov
mov
or
aad
jmp
testb
hlt
fidivrs
lock
nop
sbb
ja
incb
imul
push
mov
push
mov
adc
decl
fcmovu
pop
mov
lods
inc
gs
out
and
adcb
push
cmc
fs
ds
pop
and
add
in
add
clc
inc
adc
testl
scas
sbb
sub
mov
sub
pop
gs
fadd
pop
xor
or
stos
lcall
sub
inc
pop
ja
mov
aas
mov
pop
cmp
sti
repz
enter
mov
push
out
in
pop
inc
add
addb
decl
and
sub
sbb
repnz
shlb
in
imul
mov
push
insb
add
jecxz
push
inc
xchg
mov
lods
and
push
out
lcall
inc
xchg
xchg
or
shll
mov
int
push
test
rcrl
mov
pop
pop
inc
shlb
cmp
xchg
pop
add
cmpsb
fldt
mov
adc
push
jmp
mov
push
jp
mov
scas
mov
pusha
and
pop
cwtl
test
jns
shlb
std
jno
mov
mov
cmp
jmp
jl
jbe
test
into
inc
fucomip
pusha
lods
jne
out
or
scas
cli
clc
inc
stos
fimull
call
adc
aad
jle
enter
lahf
inc
sbb
mov
pushf
lds
es
sub
mov
xchg
addr16
inc
mov
hlt
aas
and
add
or
ljmp
sar
pushf
pop
mov
xchg
movsb
lods
cmp
add
mov
xchg
sbb
call
test
idivl
loop
xchg
jmp
mov
hlt
movsb
fwait
lcall
or
lods
adc
xchg
std
mov
lods
sahf
sub
sub
xor
add
push
sbb
and
xor
mov
mov
rol
inc
fcomps
inc
mov
mov
scas
add
es
cmp
ja
inc
incb
add
jmp
pop
lods
dec
inc
xor
lcall
fs
faddl
pop
out
lods
andl
aaa
mov
and
mov
imulb
test
dec
out
repnz
cmp
cmp
or
add
movsb
lret
cmp
incl
cmc
push
or
cmpsl
push
push
push
mov
jb
pop
push
and
xchg
int3
sbb
mov
mul
mov
pop
fimull
sub
loopne
mov
int3
fnsave
bound
jb
jno
decl
mov
mov
pop
jno
fisttps
or
sub
cmp
lock
xor
pushf
sar
mov
push
adc
icebp
mov
lcall
ja
push
xor
cmpsl
outsl
pusha
repz
lcall
and
dec
enter
sub
mov
mov
push
xor
cmc
mov
fwait
sbb
call
ljmp
adc
or
jb
sub
enter
dec
adc
incl
jmp
push
jno
inc
inc
mov
shl
pop
lcall
not
subb
and
pop
lods
es
movntq
jbe
dec
insb
nop
sub
mov
jmp
ficompl
cs
shrb
rcrl
sahf
cwtl
mov
and
push
push
push
mov
and
push
scas
push
cli
and
xchg
or
lock
lea
incl
inc
cmp
sub
add
mov
jno
mov
das
cli
incl
mov
mov
imul
ss
ljmp
test
and
movsb
jp
dec
sub
sub
outsb
imul
loope
mov
jmp
inc
outsb
gs
mov
dec
xchg
int
push
xor
xchg
inc
or
pop
aam
lcall
xchg
xor
or
jno
stc
movsb
roll
roll
cmp
dec
lret
incl
fistpl
out
jo
mov
push
rorl
repz
pushl
adc
movsl
fbld
xchg
mov
incl
stc
jecxz
adc
or
cmp
jmp
inc
xorl
pop
push
cmpsb
jo
lret
push
add
shrl
int
movsl
lods
lret
mov
jmp
adc
xchg
popa
ja
sti
mov
cmpsl
rorb
fptan
scas
test
cmpsb
insl
cltd
dec
jecxz
sbb
je
mov
cmp
shl
mov
call
inc
repnz
add
mov
out
fcmovnu
insl
pushf
mov
cmp
popf
mov
outsl
imul
or
loopne
jns
push
and
mov
sbb
jecxz
xchg
xor
loop
sar
pushl
mov
sub
sahf
or
pop
aam
mov
dec
movsb
sub
dec
inc
dec
ret
sti
rcrb
add
lcall
loop
call
xor
in
jg
gs
xor
pop
jmp
lds
pusha
adc
push
push
pop
cld
or
cli
mov
lcall
fmull
inc
inc
or
icebp
incl
mov
test
cld
es
mov
rol
cli
mov
mov
push
cwtl
fdecstp
mov
mov
xchg
mov
pop
sbb
mov
cld
divb
mov
or
sbb
movsb
aad
mov
out
fs
ljmp
push
push
call
in
add
add
and
ss
add
sbb
jmp
incl
insl
test
pop
and
xor
pop
inc
mov
aad
popa
mov
jnp
out
decl
cmp
lret
mov
shrb
fcomip
mov
sub
xchg
frstor
push
jbe
pushl
adc
lods
or
push
mov
cmp
and
fnstenv
mov
outsl
sti
inc
jp
cltd
inc
rclb
xchg
fsubl
mov
dec
cmp
push
shll
decl
icebp
iret
pusha
inc
and
lods
sarl
idiv
out
or
adc
sahf
mov
push
out
push
adc
inc
jae
mov
call
icebp
jbe
inc
xor
jae
mov
add
pop
adc
jle
push
add
push
call
mulb
fisttpll
pop
out
mov
push
mov
push
sub
cli
call
insl
test
pop
xor
daa
fsubl
jl
in
mov
adc
jmp
shr
test
ss
test
arpl
cmp
push
cs
dec
iret
push
mov
lcall
int3
sbb
mov
or
dec
ret
push
decl
mov
pop
mov
stc
cmp
int
pop
xor
mov
mov
sar
ljmp
mov
jp
dec
mov
mov
fwait
lcall
jno
test
mov
shrb
cmp
mov
mov
pop
sub
sarl
outsl
shlb
sub
cli
test
push
jp
push
test
into
mov
outsb
mov
add
ljmp
imul
and
rol
pop
stos
test
xlat
inc
push
cmp
test
daa
jp
decl
sbbl
sti
insb
movsb
jne
pop
xchg
mov
xchg
cmp
jmp
pop
jg
add
xchg
mov
inc
inc
mov
icebp
jns
add
jne
call
rorl
rcr
push
lods
xor
pop
leave
ret
cmpsb
cmp
pop
cmp
cld
aam
mov
pop
pop
adc
push
or
lods
les
push
out
or
or
jmp
hlt
cltd
and
repnz
cwtl
and
mov
cli
les
clc
fbld
cmp
cli
out
inc
outsl
clc
jmp
add
imul
cmp
outsb
or
rcll
pushf
lret
sbb
push
mov
daa
mov
pusha
and
pushl
push
add
mov
xchg
enter
das
mov
pusha
cmpsl
fwait
lahf
or
mov
ljmp
inc
js
jb
xchg
cmc
mov
fwait
adcl
sub
mov
sub
mov
adc
ss
outsb
hlt
mov
rclb
sub
inc
rorb
mov
mov
out
adc
lret
outsl
jns
in
and
cmp
mov
aas
aaa
push
fwait
mov
jns
push
xchg
mov
dec
sahf
subl
movsb
test
clc
cmp
push
inc
dec
pop
sub
aad
shl
in
sub
mov
dec
decl
jg
dec
pop
mov
popf
jnp
mov
lret
fldt
add
jle
push
outsb
add
pop
sub
and
pushl
lods
jmp
jo
sub
mov
enter
cmp
sub
mov
mov
fadds
cmp
flds
mov
mov
dec
or
test
mov
jmp
outsl
cmp
and
pop
icebp
incl
test
lock
xchg
and
dec
arpl
and
ss
pop
fadds
clc
or
adc
rorb
ja
mov
fldl
dec
sbb
and
jnp
shl
dec
cmp
lcall
mov
je
loopne
sub
mov
bound
shrb
std
ljmp
jne
sahf
in
adc
inc
or
inc
mov
jmp
inc
ja
call
outsl
xchg
mov
fstl
push
pop
pop
jge
std
adc
cmp
aas
jmp
out
clc
adc
icebp
sti
dec
dec
xchg
jbe
jmp
jmp
cmpsb
sbb
in
ret
inc
push
push
addr16
inc
testb
sbbl
jg
aas
cmp
rcrl
decl
loop
mov
les
push
sub
cmp
imul
mov
lea
ljmp
adc
jne
int
icebp
mov
cmp
or
add
fsubrp
mov
jnp
pop
in
call
fldt
lds
adc
pop
jo
es
cld
das
rcr
fs
cltd
scas
lcall
pop
mull
lcall
movsl
mov
xchg
out
jns
lret
mov
inc
xchg
xchg
das
cld
mov
sbb
rolb
loop
fld
mov
rcrl
pop
xchg
movsb
pushf
or
inc
and
lea
cmpsl
iret
and
pop
and
xchg
push
cmp
mov
and
inc
add
orb
incl
cltd
sbb
sbb
push
test
mov
cmp
mov
je
into
stos
mov
push
push
and
shrb
mov
insb
fnstcw
outsb
jbe
out
sbbb
fisttpll
dec
inc
cmp
jmp
mov
call
clc
jb
pop
subb
cld
dec
in
push
cmp
pushl
pop
sti
cmp
sub
mov
daa
stc
adc
fidivs
adc
sub
push
adc
decl
xlat
xchg
xor
xchg
inc
sub
pusha
pushf
test
loop
mov
in
sub
cld
sahf
in
cmp
js
mov
or
mov
xor
aas
dec
dec
add
and
fistpl
dec
in
stc
movsb
faddp
mov
sub
cld
sub
sbb
das
ficoml
and
lret
fimull
cmp
jmp
jecxz
cltd
scas
gs
fsubs
scas
shrb
into
sub
jl
repz
jmp
fs
xor
std
xor
mov
jmp
xlat
insl
scas
outsb
jecxz
add
outsb
pop
loopne
or
sub
fsubrs
xor
push
scas
xor
pusha
cmp
cmp
into
lret
test
dec
jge
and
in
mov
lds
in
or
xchg
dec
add
xlat
cmp
int3
adc
ljmp
incl
mov
repnz
nop
pop
subb
add
dec
test
inc
jmp
inc
fdivrl
mov
or
std
stos
and
pop
pop
frstor
sbb
xchg
mov
aam
ja
pushl
notl
ja
xor
fdivrl
jno
je
fstl
rol
cs
mov
mov
ljmp
rorl
cmpsl
pushf
inc
sbb
aam
aaa
negl
cmp
jns
out
and
fidivs
cmpsl
mov
fs
dec
sbbl
cmp
sbb
inc
les
adc
pop
les
jmp
stos
ffreep
shr
stos
insb
scas
mov
sbb
in
lock
addb
enter
call
aas
adcl
jne
ret
loop
out
rdmsr
jl
xor
cmp
int
call
or
mov
ss
jmp
out
mov
nop
fmull
cld
inc
push
jg
rcrb
ljmp
mov
xor
pop
mov
in
das
in
imul
inc
lock
pop
andl
lods
and
iret
add
icebp
push
stos
orb
sbb
rclb
cltd
cltd
adc
adc
iret
out
add
cld
adc
pushf
sub
jb
mov
lcall
add
jns
mov
stos
popf
add
jne
ret
cli
sbb
popf
xchg
xor
ljmp
outsl
enter
enter
iret
decb
call
mov
insl
cmp
call
int3
test
icebp
inc
jmp
adc
pop
out
cli
adc
insl
xor
lret
gs
outsl
jns
or
clc
cmp
out
sub
xchg
mov
mov
arpl
movsl
loop
mov
add
fdivrs
jge
ds
data16
push
mov
add
mov
test
mov
pop
lret
push
stc
jg
pusha
mov
arpl
out
fildl
mov
daa
aad
jmpw
movsl
int
sub
xorb
mov
call
pushl
les
sub
and
add
dec
add
inc
mov
push
icebp
aaa
gs
incl
enter
inc
lock
cwtl
fcmovb
push
xchg
cltd
cmc
test
test
daa
sti
pushl
xor
int3
pop
push
int3
add
xchg
push
mov
inc
ret
adcl
cmp
lock
ret
loop
mov
jl
cltd
fistpl
or
ljmp
fcomip
in
aam
push
test
cli
test
mov
cmpsb
cmp
jns
std
inc
inc
push
loop
jmp
hlt
nop
scas
sti
jmp
ss
in
cmpsl
pop
adc
pop
add
adc
add
mov
add
push
push
dec
gs
rolb
jmp
aaa
push
sub
stc
jo
mulb
push
popf
jg
movl
fwait
mov
pushl
stos
dec
jg
add
jg
xchg
and
out
sub
adc
sub
test
loop
lea
dec
stos
in
enter
leave
das
lea
sbb
or
fistpll
inc
and
pop
aaa
mov
xchg
xor
ljmp
leave
testl
or
or
mov
jb
push
push
push
in
pop
lret
loope
loopne
lcall
cld
jbe
and
jecxz
xchg
push
popa
icebp
jnp
fdivr
enter
mov
push
jbe
xchg
xor
popa
out
dec
popa
ds
cmpsl
and
inc
push
mov
pushl
inc
xlat
sbb
sub
dec
push
dec
in
testb
lcall
jmp
aad
idivb
mov
lds
sub
sbbb
cmp
rorb
aam
call
pop
js
test
xchg
dec
daa
mov
xchg
mov
or
adc
incl
mov
mov
lcall
xchg
lods
incl
jns
lcall
xor
daa
xrelease
mov
call
lcall
push
test
cmp
pusha
sub
pop
and
das
scas
jl
dec
jmp
lret
jle
xor
push
out
mov
xchg
inc
xlat
ljmp
popf
inc
dec
xchg
shr
imul
or
push
std
xor
ret
dec
sahf
jnp
pushf
xor
ret
pushl
inc
jge
outsl
add
jbe
jbe
dec
es
fsubl
and
push
cmp
jg
in
push
xlat
mov
popf
aas
add
pop
aad
int3
stos
push
insb
lea
pushl
outsb
iret
movb
shlb
insl
sti
sub
movsb
jbe
adc
dec
lcall
cld
push
push
push
mov
jecxz
cli
rcrb
call
fbstp
std
dec
enter
jo
sbb
mov
pop
orb
sub
inc
incl
shlb
mov
mov
ja
test
adcb
lret
cmp
fld
out
fsubrp
jnp
ja
cmpsl
bnd
jl
mov
jno
lret
lcall
call
imul
ret
dec
pusha
fxch
xor
in
cmpsl
pop
nop
pushf
cmp
push
pushl
outsb
sbb
pop
add
jnp
lods
push
pop
jle
movsl
xor
addr16
or
xchg
add
cli
sub
push
sub
stos
push
dec
fisubl
sbb
arpl
fimull
mov
adc
jns
arpl
cmp
lcall
lahf
sbb
mov
icebp
int
pop
jb
mov
mov
mov
lds
xor
out
sub
add
enter
cld
arpl
lock
stos
or
mov
push
mov
pop
loopne
jae
jnp
and
cmpsb
cmc
sbb
jmp
fidivrs
mov
stc
xor
popa
dec
pop
or
sub
dec
ss
out
ljmp
or
add
insl
and
sbb
popf
mov
movsb
mov
sub
das
call
lahf
add
xor
aaa
mov
enter
hlt
pop
out
cld
sbb
call
and
sub
sbb
jne
daa
adc
jno
test
dec
mov
sbb
gs
mov
xor
xor
pop
xchg
sub
std
stos
aas
jns
gs
add
das
js
shlb
push
loop
inc
test
imul
inc
lcall
lds
mov
sbbl
dec
int3
insb
jl
daa
lret
push
add
adc
in
loopne
jne
rcll
or
inc
or
cli
scas
into
stc
adc
cmpl
das
sarb
sub
jbe
fdivrl
int
adc
fisttpll
mov
add
or
fisubl
xchg
add
jle
out
in
and
movsl
xchg
aad
cwtl
fwait
cmp
das
push
add
ret
ljmp
push
in
jmp
mov
adc
jmp
mov
arpl
pop
arpl
in
dec
clc
dec
lcall
test
jbe
cmp
aaa
adc
adc
mov
add
mov
test
and
aas
push
imul
test
jecxz
lock
repnz
adc
mov
fildll
adc
push
fsubrl
pusha
lcall
mov
or
adc
incl
dec
push
mov
xchg
push
adc
push
andb
fnstcw
repnz
or
sbb
ljmp
hlt
arpl
ljmp
gs
daa
in
lret
shl
fiaddl
fs
lcall
cmp
out
js
out
xor
mov
mov
outsb
test
pop
test
pop
add
subl
inc
enter
test
push
aam
out
pushl
out
xchg
mov
adc
ljmp
rcr
sbb
mov
push
cmp
xor
repz
pushf
dec
push
sahf
mov
lock
lcall
pop
sbb
add
mov
movsb
fs
pop
jno
xchg
adc
mov
insb
xor
mov
pop
and
push
mov
mov
mov
ds
xor
ss
ret
fisubl
out
and
jle
adc
adc
outsl
mov
dec
cmpsl
adc
mov
sub
sbb
fildll
jno
pusha
loopne
xchg
aaa
adc
cmp
mov
and
jno
ds
mov
lock
pushl
dec
pop
incl
and
dec
into
adcl
adc
lcall
js
leave
push
sbb
mov
cmc
pop
cmc
rorb
mov
mov
inc
push
lret
mov
pushl
xchg
xlat
ret
int
and
adc
lahf
pop
mov
push
call
adc
mov
push
dec
pop
stos
push
pop
fsubs
js
aad
ret
push
xchg
mov
call
push
imul
add
jno
push
sub
fidivl
repz
mov
and
pushl
jmp
sahf
add
push
jns
filds
adc
mov
std
jbe
fdivrl
jmp
push
dec
pop
dec
xlat
dec
fwait
in
dec
inc
cld
in
push
andl
les
push
fimull
xchg
xchg
rolb
data16
incl
cmp
pop
jl
je
cltd
pop
push
int3
adc
sub
and
add
test
ljmp
push
insl
lahf
push
cmpsl
mov
sbb
pop
adc
xor
mov
jb
pop
lcall
ljmp
push
dec
inc
push
movsb
filds
push
push
aam
in
clc
jmp
lods
cmp
jo
bound
jge
mov
aaa
cmpsb
call
sub
push
fdivrl
es
cmpsb
stos
push
mov
mov
pushf
pop
cmp
mov
push
orb
lods
movsb
clc
jno
mov
ljmp
les
pop
jmp
mov
rorb
pop
dec
dec
mov
or
rcr
mov
int
lea
frstor
jge
push
inc
cwtl
add
sub
ja
dec
or
xchg
shll
add
jmp
incl
xchg
mov
cltd
jl
mov
mov
xchg
jnp
xor
sti
pushl
jle
inc
pop
aam
pop
fwait
or
cmc
les
pop
mov
jbe
icebp
jmp
mull
mov
sbb
jge
and
xchg
inc
pop
cmp
incl
xor
mov
jl
loope
and
int
outsb
mov
cmp
mov
push
inc
lcall
mov
mov
popf
lods
call
dec
mov
push
aaa
pop
add
int3
or
adc
mov
add
inc
dec
xor
incl
jp
cld
gs
add
or
hlt
int3
jnp
add
and
xor
ret
fdivrp
push
pop
mov
push
xchg
fdivrl
xchg
sub
dec
mov
sub
jmp
mov
rolb
cmp
inc
insl
xchg
and
fildl
cmp
arpl
call
cwtl
xor
out
addr16
jo
lea
sbb
pop
and
daa
sub
in
push
fcomps
in
out
jle
fstpl
jae
fsub
jbe
and
shr
adc
jmp
lock
mov
out
xchg
mov
daa
ret
cmpsb
mov
in
add
jb
ljmp
jl
mov
xor
popa
dec
mov
or
add
jg
call
fists
push
mov
movsl
or
jno
pop
fldenv
daa
fsubs
nop
adc
xchg
out
lea
inc
cli
push
xor
adc
pop
pusha
mov
lds
call
pop
sub
repz
sarl
mov
push
in
dec
int
xorl
lcall
cmp
pop
repz
pop
addr16
test
stos
pop
xor
ud0
pushl
lods
sub
xchg
sbb
mov
cmpsb
bnd
stos
and
test
ja
lock
fildll
es
mov
loopne
fldl
ret
fildl
arpl
std
insb
inc
jb
mov
loope
jmp
test
icebp
sbb
movsl
pop
or
mov
cmp
or
shl
jmp
insb
xor
push
gs
ficoml
add
loop
dec
in
test
push
mov
push
sub
insl
mov
pop
jecxz
das
fwait
xchg
repnz
ds
xchg
push
loop
in
and
fucomp
outsb
es
das
jmp
in
ds
repnz
push
or
ljmp
mov
mov
sbb
aas
mov
loop
cld
lahf
aas
out
shrl
incl
hlt
cs
loopne
inc
test
cmpsl
inc
movsl
cmp
xchg
xchg
ja
jmp
mov
jg
cli
into
mov
loop
arpl
xor
stc
inc
and
lds
call
stc
sub
lret
adc
out
int3
inc
xchg
cli
and
scas
incl
loopne
pop
es
jmp
dec
pop
pop
repnz
movsl
loop
imul
push
xchg
lret
jge
inc
or
mov
jmp
sar
fcom
imul
pop
mov
sub
jmp
test
mov
data16
xor
mov
jecxz
out
fildll
jno
data16
adc
mov
stos
sub
in
scas
mov
jo
mov
and
dec
leave
imull
inc
outsb
fs
pushf
mov
ljmp
gs
iret
push
lcall
xor
or
jns
add
rcr
cmp
icebp
pop
add
loopne
mov
incl
jl
out
cld
or
sbb
push
sbbl
jo
jne
push
js
js
cmc
fcmovne
lahf
pop
and
pop
add
sbb
clc
test
lcall
mov
loop
push
jns
dec
mov
iret
lret
jle
mov
dec
push
push
mov
sbb
push
adc
imul
add
jmp
xchg
inc
xchg
pop
call
lods
cmp
inc
cmp
test
stos
cmp
fucom
sub
mov
loop
loopne
jg
cmp
inc
les
loope
add
push
mov
mov
fwait
xlat
mov
xor
jnp
jl
lret
push
xor
inc
cmp
cld
cli
jg
push
out
jecxz
aas
dec
pop
inc
cmp
sub
outsl
test
sub
clc
movsb
sbb
ljmp
mov
sbb
call
sub
es
sbb
cwtl
push
inc
sbbb
mov
call
fstpl
ror
sbb
pop
dec
or
lret
inc
or
jle
sub
clc
incl
inc
pop
jbe
jne
and
xchg
clc
xlat
incb
and
lods
ret
ljmp
jle
cltd
mov
aas
push
jno
pop
outsb
pushf
stc
insl
out
cltd
lret
jg
frstor
mov
ja
adc
sbb
adc
dec
scas
int3
outsb
ds
cmp
xchg
aaa
cmpl
push
iret
mov
filds
mov
xchg
fldenv
incl
ljmp
inc
mov
roll
dec
outsl
scas
or
aam
push
mov
cmp
xlat
jp
or
jns
ds
call
pop
or
mov
dec
xchg
cwtl
js
ss
push
sbb
add
sub
jge
bswap
cwtl
cmpsl
pushf
js
enter
push
sbb
jecxz
push
in
xchg
lods
pop
mov
mov
mov
mov
pop
adc
lret
jo
imul
std
outsb
call
imul
int3
jns
aam
inc
pop
mov
lahf
xchg
stos
rorb
xchg
jo
sbb
test
jnp
mov
mov
pop
out
push
inc
fisttpl
jp
jae
pop
es
add
push
icebp
inc
sar
ljmp
outsb
xor
cld
lret
pop
inc
push
repz
xchg
jo
icebp
repz
mov
imul
mov
dec
std
or
xorb
mov
add
fldt
mov
dec
fdivl
shll
dec
movaps
hlt
cmp
jmp
jo
mov
xor
insl
sbb
or
jp
mov
pop
jle
push
jns
jbe
or
fstl
dec
pusha
jbe
ljmp
out
jno
cwtl
inc
nop
jnp
jmp
push
adc
adc
hlt
sub
dec
int3
ljmp
imul
stos
and
adc
leave
lahf
cmp
pushl
iret
mov
add
test
sbb
std
loop
mov
into
xlat
or
cmpsl
sti
pop
imul
and
dec
leave
cmp
bound
mov
pushl
or
ja
fisttpll
adc
cltd
mov
fdiv
jb
jmp
pop
jmp
test
push
imul
int
lods
std
and
cmp
mov
aad
pop
xorb
mov
incl
xor
xor
jmp
movlps
sbb
jmp
mov
sub
lea
xchg
and
cmpsl
psadbw
mov
cld
mov
repnz
popa
enter
inc
mov
mov
pop
loopne
cmp
out
repz
lret
rolb
sar
mov
and
aam
sbb
out
mov
cmp
cmp
adc
mov
xchg
testl
jmp
fwait
mov
sti
push
xlat
aad
popa
dec
call
mov
inc
adc
mov
decl
aaa
inc
inc
push
xor
sub
pop
mov
xchg
mov
jmp
pop
mov
adc
jne
add
push
imul
mov
into
dec
sub
iret
push
leave
mov
cmp
xor
stos
nop
cmpsb
sti
mov
sub
aas
and
sbb
jecxz
sub
cld
pop
js
pop
std
insl
repz
sahf
ljmp
sub
mov
loope
cwtl
addr16
push
lods
jl
shrb
mov
mov
icebp
cmpsl
je
pop
lcall
xor
call
aad
loope
xor
lods
fidivl
ljmp
clc
cmp
jo
dec
call
xor
lds
cmp
ret
in
push
mov
mov
or
add
sbb
dec
inc
clc
lods
pop
sbb
ja
jg
dec
fisttpll
pop
call
and
sub
rolb
push
decl
push
or
xchg
adc
loope
jbe
adc
sbb
push
cs
incl
jp
ret
sbb
inc
pusha
lock
addr16
xor
lcall
mov
cmpsb
pop
cwtl
mov
ficoms
mov
or
je
in
jae
pop
mov
dec
fcomps
aad
lcall
mov
and
add
popl
mov
push
adc
inc
mov
mov
sbb
xchg
jg
cwtl
add
mov
adc
sbb
lods
out
jnp
iret
add
sbb
add
decl
dec
xchg
jmp
pop
mov
adc
pop
leave
movsl
into
outsb
jmp
test
incl
cld
add
dec
push
and
cmpsb
shll
mov
scas
clc
incl
ds
push
jnp
mov
dec
inc
and
mov
ficoml
decl
xchg
cli
jb
jle
out
rorl
add
ficoms
or
jmp
mov
cmpsb
mov
jg
lods
push
and
and
ja
movsl
mov
pushf
add
pushl
add
sbb
jnp
mov
adc
stos
and
stc
in
cmpsl
xor
decl
or
inc
stc
ret
or
sub
pusha
rorl
inc
lds
mov
ljmp
push
cmp
sub
js
test
mov
mov
and
push
clc
mov
push
push
inc
int3
pop
in
sbb
inc
push
rcr
mov
fisubl
call
adc
mov
lods
data16
xchg
inc
pop
mov
movsl
jg
call
pop
popa
dec
xor
std
mov
sub
fcoml
pushl
std
test
jb
inc
fwait
lods
push
je
call
xchg
mov
pushl
add
adc
je
lcall
and
xorb
lds
cmp
les
adc
xor
test
or
xchg
adc
inc
mov
test
loopne
cli
ljmp
mov
and
cwtl
push
lea
shl
xor
ja
dec
sbb
es
lcall
mov
push
nop
jg
cltd
xor
cmp
mov
decb
cmp
mov
fstpl
out
iret
xor
aad
aam
fistpll
jge
out
lahf
out
loopne
out
or
scas
call
int3
cmpsl
jb
fcoml
cmp
adc
stos
jg
push
in
jae
lcall
xor
les
dec
iret
ds
lcall
bound
stc
cmpsl
push
push
es
gs
jge
in
mov
cmpsb
or
inc
cld
decl
mov
or
in
add
adc
fsub
loope
stos
mov
movsb
mov
lcall
nop
fists
lock
lahf
lods
push
add
mov
inc
mov
mov
fnstcw
dec
pop
sub
and
orl
adc
pop
mov
decl
mov
cwtl
or
das
cmp
sbb
xor
fistpl
push
lods
ficoml
ss
fwait
xchg
pushf
pop
decl
xchg
adc
xor
jae
leave
jp
push
outsl
lahf
test
daa
push
sub
pop
fisttps
fistl
jb
loope
xor
mov
add
in
decl
scas
daa
mov
mov
rolw
fnstsw
add
push
jbe
divb
push
xchg
or
pop
inc
cmp
add
jae
sbbl
repnz
loop
pop
pop
ljmp
mov
xor
pushf
and
xor
mov
dec
mov
sub
jnp
scas
adc
cmpsb
rcr
sbb
bound
inc
lods
cmpl
cld
fsubs
pop
push
aam
out
cmp
push
dec
sahf
push
adc
mov
or
push
outsb
lods
arpl
xor
sub
lret
mov
dec
shlb
clc
jge
adc
inc
aas
add
cmpsb
push
or
stos
dec
sbb
mov
dec
and
cltd
xor
jns
pop
pop
fidivrs
mov
jnp
cltd
add
pop
aas
mov
sbb
adc
aam
idivb
inc
cmp
lds
add
rorl
lods
mov
loop
sub
pushl
cmp
ljmp
lcall
js
and
pop
add
push
mov
clc
incl
mov
mov
inc
hlt
inc
add
insb
or
fldt
push
insl
mov
add
mov
xchg
lahf
mov
shlb
mov
pop
aas
sbbb
sub
lcall
push
inc
neg
scas
in
imul
xor
push
pushl
mov
fs
push
test
imul
lcall
sahf
lret
enter
cmpsl
lock
xchg
mov
cmp
cmp
push
add
dec
inc
out
cmc
cwtl
int3
sar
inc
push
std
mov
cli
data16
adc
and
add
aad
nop
and
jg
mov
jge
add
adc
in
dec
inc
cli
fnsave
sahf
and
out
and
fcomip
inc
roll
xor
xor
js
xor
lods
mov
adc
and
inc
push
mov
aaa
mov
in
mov
adc
cmp
out
call
pop
xchg
dec
jno
sarb
shll
mov
lcall
or
jg
test
push
mov
sbb
ret
mov
rcll
in
inc
cmp
mov
lcall
pushf
sbb
push
jno
enter
and
or
lcall
cmp
mov
push
push
jno
jb
xor
adc
jno
test
mov
cmp
es
push
lret
loope
sbb
loopne
rcrl
test
cmp
pushf
cmpsl
or
mov
dec
inc
xchg
test
lret
popa
scas
and
divb
outsb
xchg
push
shlb
les
aad
sahf
or
lods
lods
push
lcall
fdiv
sub
inc
pop
mov
cmpb
sub
cmc
decl
loop
mov
rcrl
jo
adc
push
dec
and
pushl
xchg
push
pop
inc
push
jb
xchg
inc
mov
enter
adc
pop
ss
cli
fstps
lock
ret
mov
add
sbb
fcomp
xchg
clc
sbb
and
movsl
adc
xor
sbb
fdivs
mov
mov
lds
cmp
loop
mov
insl
je
jb
outsl
push
bound
std
lcall
add
fcompl
xor
lds
jp
sub
cmc
aaa
leave
jle
aad
jmp
lods
ss
mov
lcall
mov
xchg
mov
sub
pushl
ss
mov
ds
repnz
dec
ljmp
inc
outsl
hlt
pop
add
int
jmp
loope
cmp
into
ret
mov
add
repz
ljmp
mov
std
jge
and
in
jmp
xor
lcall
stos
ljmp
test
cmp
sub
or
jo
adc
or
outsl
pushl
aad
sbb
adc
jl
push
enter
fcmovbe
xlat
fcomip
push
xchg
mov
xchg
sub
repnz
mov
lret
pop
sar
incl
in
xchg
push
notrack
and
in
aaa
je
jne
cmp
stc
inc
aas
arpl
divl
mov
bound
sbb
fldenv
mov
es
nop
sub
aaa
call
xchg
shl
mov
sub
adc
stos
shll
sbb
xchg
xchg
pop
incl
in
ficomps
mov
push
fsts
mov
incl
xchg
mov
ret
xor
stc
mov
mov
rcrb
mov
arpl
decl
xchg
jg
jb
jl
jo
bnd
sub
add
sbb
dec
enter
dec
lret
clc
decl
cli
call
inc
and
je
lret
aaa
pusha
jg
mov
xchg
jmp
pop
out
push
cmpl
ljmp
add
add
push
insb
lahf
pmulhuw
mov
mov
jnp
test
inc
icebp
push
rolb
test
jmp
ds
push
inc
out
jp
inc
daa
xor
and
pushl
and
push
lock
cmp
inc
xchg
repnz
clc
decl
inc
int
dec
outsb
xchg
dec
shlb
fistpll
test
aaa
pushl
xor
outsl
icebp
add
pop
pop
popa
mov
jg
icebp
mov
les
mov
cmp
jmp
xor
xor
popf
sub
enter
push
ror
fcmovbe
cld
aaa
andl
call
mov
inc
push
jge
into
adc
and
addr16
mov
xchg
inc
arpl
call
sub
sarb
leave
sbb
test
cltd
xchg
jb
loop
jo
incl
cmp
in
push
push
daa
fcmovnu
mov
sub
cmpsl
divb
pusha
adc
cmp
decl
nop
in
jb
aas
inc
xchg
sub
mov
cli
dec
cmp
hlt
decl
mov
xchg
hlt
fisubs
movsb
adc
clc
xchg
mov
cli
mov
mov
int
fwait
mov
or
fdivl
jg
inc
out
fs
push
dec
cmp
subb
dec
dec
jnp
and
jnp
clc
fsubr
int
push
test
sub
jge
ljmp
faddl
pop
cmp
mov
int
fwait
in
jle
xchg
and
push
std
loopne
push
mov
jno
sbb
loope
lods
mov
sbb
cli
shrb
lahf
and
jl
in
adc
fst
mov
and
nopl
or
add
mov
inc
cs
pushl
mov
sbb
jbe
xor
or
lret
fmull
aam
in
rcrl
and
and
cmpsb
addr16
imul
lds
push
rcl
or
out
and
cmp
icebp
sub
movsl
int3
icebp
dec
incl
and
jnp
mov
out
push
leave
test
sub
aaa
push
jno
mov
dec
xchg
mov
mov
js
xor
push
cli
mov
or
pop
push
test
xchg
lods
mov
xchg
or
or
inc
ljmp
idivb
add
adc
push
jns
sbb
adc
lcall
popa
enter
sbbl
dec
test
call
pop
pop
dec
push
call
mov
jb
and
sti
cltd
ret
push
add
inc
pop
in
shrb
addb
andl
icebp
mov
test
imul
mov
int3
lcall
mov
lods
mov
push
sbb
cmp
add
jo
ljmp
cmp
fstps
add
testl
and
sbbb
inc
cmp
aaa
std
push
push
fs
sti
dec
cmp
out
push
loope
xor
push
es
push
mov
rcrb
lock
loop
dec
xchg
rolb
xchg
dec
cmpsl
movsl
mov
dec
mov
ljmp
mov
neg
clc
jae
sti
xchg
mov
imul
aam
into
pop
mov
incb
inc
adc
sub
mov
inc
inc
dec
je
repz
ss
ljmp
sarb
xchg
adc
scas
sub
out
mov
fucom
hlt
adc
outsl
idivl
pushf
dec
mov
xorb
sahf
js
sub
or
pop
cwtl
sub
inc
ret
lock
in
into
sub
pop
test
sbb
mov
sub
or
inc
mov
sbb
sarb
cmp
push
into
and
mov
nop
test
pusha
mov
adc
mov
leave
insl
fisubs
call
dec
cmp
sub
jl
lock
outsl
aam
push
adc
xlat
cwtl
or
add
int3
leave
ljmp
stos
icebp
push
aam
cmp
icebp
cwtl
pop
add
jmp
adc
mov
adcb
jg
cmp
xor
push
imul
dec
or
lea
pop
std
incl
cmp
add
out
aas
std
add
cmp
lcall
mov
out
dec
lods
or
lds
push
and
pop
aam
push
push
mov
mov
xchg
sarl
jg
cmp
decb
xchg
cmp
mov
lcall
clc
cli
sub
outsl
mov
push
add
xchg
pop
sahf
stos
or
sbb
pushl
sbb
push
aaa
in
scas
lock
cmp
ret
mov
pop
xchg
call
arpl
in
xchg
xor
fadd
add
add
push
pop
pop
lds
in
add
or
cmp
cmp
inc
mov
rdtsc
sub
adc
int3
hlt
mov
xor
cltd
mov
outsl
push
ret
xchg
int
fst
or
mov
gs
lcall
aaa
add
je
push
push
into
test
les
mov
out
sbb
or
decl
add
mov
js
sbb
repnz
int3
sub
stc
ret
xor
ljmp
cmpsl
clc
pop
out
bound
ljmp
or
mov
lcall
jl
xchg
lahf
lds
aam
sub
aaa
test
sub
sti
cmp
aam
scas
fldt
in
cld
cmp
lret
cmpb
icebp
loope
leave
fcomps
ljmp
mov
jg
xchg
imul
mov
daa
sub
shrb
pop
paddw
ljmp
insl
mov
pmullw
mull
out
pushf
stos
push
mov
mov
repz
insb
loope
aas
leave
push
xchg
stc
pop
cli
lods
rcrb
sbb
cmp
mov
incl
es
cmpsb
jo
push
lods
xchg
into
pop
jne
push
jmp
leave
cmp
pop
pop
addb
xchg
mov
in
clc
inc
push
jge
outsl
scas
ret
jb
int3
push
mov
scas
sub
jb
mov
mov
incl
ret
mov
pop
push
call
in
stc
and
inc
aas
mov
push
stos
rclb
rcrb
std
imul
mov
xchg
add
call
in
fisubrs
iret
adc
repz
push
push
aad
test
lcall
arpl
jnp
jge
rcrl
fidivl
add
xchg
test
aas
pop
xor
pop
roll
pushf
dec
inc
jg
stos
ret
inc
lcall
arpl
insl
push
push
inc
fwait
add
or
aad
insb
fldt
js
mov
mov
mov
lea
pusha
push
sarb
xchg
jne
pusha
jecxz
push
or
add
daa
dec
mov
xchg
out
add
mov
enter
pushl
sub
mov
adc
push
jne
nop
and
das
enter
pop
aam
cmc
js
lret
push
ss
jbe
shrl
imul
sar
call
xchg
cmp
pop
mov
fbld
into
pop
shll
nop
loopne
pop
scas
frstor
and
std
sub
inc
mov
cmp
ds
push
std
add
adcl
pop
or
pop
jg
ljmp
adc
push
xor
push
dec
push
test
add
push
cli
js
loopne
adc
mov
push
mov
icebp
add
ss
fdivs
decl
lret
daa
inc
add
test
dec
xrelease
and
pushl
jmp
and
into
lcall
sarb
xor
mov
iret
or
pop
in
andb
add
or
adc
jge
in
jge
movsl
incl
sub
mov
mov
lea
pop
test
incl
jmp
mov
fcompl
dec
std
pop
stos
sub
pusha
adc
mov
jmp
inc
lods
cmp
incl
xchg
sbb
testl
cmp
ret
pop
loope
add
sarl
addl
incl
jg
fists
mov
inc
pop
pop
imul
pop
push
mov
and
pop
cmp
sub
xchg
stos
shrl
dec
les
movsl
fists
sub
sbb
and
aaa
aas
movsl
mov
movsl
stos
in
or
loopne
shll
aas
jg
addr16
mov
into
lods
inc
out
ss
xchg
js
mov
mov
and
jb
faddp
call
add
sbb
dec
inc
ljmp
xchg
std
cmp
test
pop
nop
jmp
mov
cs
sti
imulb
adc
pop
lods
cli
je
cltd
fists
dec
in
call
repnz
mov
jmp
movsb
mov
jnp
loope
push
or
in
sbb
xchg
nop
adc
je
out
fistpll
mov
cld
mov
xchg
lods
js
mov
mov
outsb
cli
sahf
mov
fstpt
mov
inc
pushl
xor
mov
pop
jnp
pushl
icebp
mov
sub
bound
xor
ljmp
fldl
mov
jae
push
fmul
cltd
pop
mov
and
pop
sub
lea
add
jmp
es
shll
adc
in
roll
mov
test
sbb
lcall
pop
and
adc
sbb
push
and
xchg
out
imul
bound
add
mov
jmp
xchg
jo
sbb
jno
mov
lahf
out
outsl
mov
sar
jmp
loop
pop
mov
jp
cmpsl
imul
xchg
mov
arpl
popf
lcall
movsb
aas
incl
jbe
jno
lock
pop
nop
ficomps
inc
ds
js
sub
rolb
mov
push
in
jge
adc
xor
andl
mov
mov
push
lcall
add
das
mov
or
mov
sbb
leave
dec
sti
bts
push
or
js
adc
clc
divl
cmp
dec
xchg
and
cwtl
aam
iret
push
ljmp
clc
lods
fwait
mov
mov
mov
mov
mov
or
dec
jl
aam
xchg
adc
pushl
xchg
inc
mov
dec
aas
and
adc
fmulp
shlb
jno
add
lcall
jmp
loopne
pop
cmp
shl
lcall
dec
ljmp
pop
mov
outsl
dec
mov
mov
iret
loop
mov
imulb
dec
lcall
mov
xchg
inc
and
movsl
mov
xchg
xchg
push
pop
fs
inc
xor
mov
icebp
dec
push
mov
add
xor
shrl
in
incl
daa
sub
cmc
test
fstl
loopne
lods
loope
add
cmp
call
shlb
push
rcrl
push
pop
cmpsb
fwait
jno
lea
and
movsb
jmp
mov
int3
inc
mov
sbb
sub
dec
push
popa
add
mov
jp
lret
lcall
sub
xchg
mov
xor
mov
call
lcall
xchg
jne
das
test
cwtl
sub
lods
mov
jmp
mov
call
jo
out
lods
xlat
adc
mov
ja
sbb
addb
xor
ljmp
loopne
pushf
inc
in
cmp
jns
cli
mov
mov
mov
int3
and
mov
cmpsl
xor
lcall
or
mov
and
hlt
dec
mov
ret
adc
rorb
mov
das
mov
mov
in
pushf
sbb
or
int
push
or
call
fs
js
mov
or
pop
cmpb
and
cs
shll
and
lcall
mov
sub
adc
imul
jmp
movsb
adcl
pop
jle
fstpt
mov
mov
sub
add
mov
inc
push
sbb
call
dec
insl
or
cmp
and
push
push
sub
push
pushf
push
sbb
lcall
fisubl
stos
into
pop
pusha
push
xlat
dec
in
inc
jb
icebp
cmpsb
shrb
stos
ret
mov
movb
adc
mov
or
imul
or
add
aas
icebp
sahf
in
mov
xchg
adc
mov
pop
int3
insb
mov
mov
jg
or
aam
push
lret
and
mov
stc
mov
jmp
rolb
shll
adc
mov
in
dec
jae
cld
fiaddl
pop
inc
pushl
lcall
inc
stos
jne
loope
sahf
mov
stc
out
xor
xor
jmp
cltd
test
inc
out
aad
movsl
mov
pshufw
mov
subb
stc
add
fdivrs
shll
addr16
fistps
faddl
add
pusha
ljmp
and
incl
in
xor
jbe
xchg
aas
cwtl
int3
out
loop
sub
mov
dec
out
cmp
dec
mov
mov
inc
sub
xchg
mov
xor
xor
sahf
sbb
movsb
lahf
xor
push
add
jmp
insl
call
and
cmpsb
decl
das
dec
es
xlat
scas
cmc
fstpl
sbb
sub
xchg
add
mov
jg
decb
hlt
ss
daa
dec
or
adc
and
pop
mov
repnz
dec
ljmp
or
into
push
and
dec
inc
in
mov
fstl
fadds
inc
fdivr
ljmp
insb
stos
and
sbb
cvtpi2ps
gs
negl
rorl
inc
lods
sbb
arpl
jno
lock
xor
rorb
push
incl
push
dec
mov
push
imul
sub
cld
and
cld
incl
jmp
arpl
sub
jl
lret
pop
and
data16
ja
cs
incl
shl
stos
pop
stos
enter
pusha
popa
js
fwait
jle
lahf
fnstsw
push
popf
popa
jo
int
stc
sbb
dec
inc
enter
das
push
jecxz
insb
pop
inc
pop
aaa
xchg
adc
in
std
fwait
icebp
sub
fistl
or
mov
prefetch
sbb
aaa
jmp
adc
lock
and
mov
push
push
mov
imul
cli
mov
rorb
sbb
dec
imul
popf
mov
jmp
dec
js
mov
sbb
inc
and
cmpl
mov
ljmp
xchg
sub
jge
pop
shr
xchg
sbb
inc
push
xchg
mov
lea
js
call
dec
or
adc
shrl
movsl
push
outsb
stc
cmp
and
mov
cmpsb
leave
decl
repz
pop
ss
adc
clc
lcall
push
decl
push
les
fmulp
jl
inc
adc
dec
std
nop
iret
movsl
adc
stc
jmp
mov
lds
sahf
xchg
dec
aam
into
aad
sub
movsb
dec
fwait
dec
mov
repnz
popf
adc
mov
imul
iret
daa
enter
inc
sar
decl
or
jbe
xchg
fstps
sahf
jbe
decb
xchg
es
xchg
dec
jl
jle
jg
pushf
jle
inc
stos
stos
pop
fistpll
push
pusha
mov
mov
sbb
dec
lds
lcall
mov
lcall
and
nop
nop
push
jl
ljmp
sti
test
xlat
add
mov
sbb
fcomip
lcall
incb
mov
into
es
sbb
jmp
inc
stos
adc
out
stc
jmp
add
movsl
jbe
stc
push
dec
movsb
dec
dec
fs
js
push
jmp
cmp
cwtl
imul
sar
push
cld
jmp
dec
out
pop
icebp
hlt
iret
fisttpl
orb
mov
cmpsl
mov
aas
xchg
lcall
mov
fldln2
mov
pop
or
faddl
and
push
adc
xor
xchg
mov
cli
sbb
xchg
push
adc
cli
xor
jo
bound
lods
dec
pop
sub
xchg
aad
notb
dec
fbstp
adcb
ret
mov
cmp
jge
jg
add
std
mov
jle
test
in
insb
xor
mov
dec
fcmovb
decl
xor
pop
fwait
int3
dec
ljmp
mov
push
jp
les
pushl
push
push
mov
inc
and
test
inc
jnp
outsb
shr
add
mov
cs
decl
roll
sub
dec
cmp
and
and
xchg
aas
inc
adc
out
dec
movl
lds
xchg
fcomp
jp
jg
and
pushl
mov
mov
loopne
sbb
sub
movsl
xor
mov
rolb
push
pop
mov
jae
stos
popf
enter
inc
stc
lret
int
repnz
fstl
push
lods
in
and
push
cmp
and
movsb
test
cmp
mov
daa
fnstenv
mov
and
pop
or
mov
ror
addr16
shrl
call
xchg
lcall
dec
movsb
mov
lahf
in
inc
cmpsl
loop
cmpb
xor
stos
out
lret
insb
cmp
sub
inc
mov
jno
out
inc
inc
ljmp
push
xchg
mov
mov
sub
test
movsl
stos
mov
std
cmp
data16
or
push
pop
je
nop
push
insl
pusha
inc
test
pop
pop
mov
mov
cmp
xchg
mull
mov
int3
jno
jl
rcrb
adc
decl
in
aad
popa
push
jmp
and
adc
fstpl
imul
popa
or
and
dec
addr16
lcall
stos
lea
push
xchg
fcom
pop
pop
cmc
outsl
xchg
sbb
xchg
test
sub
cmpsl
push
dec
xor
push
jnp
lret
sbb
jmp
cmp
adc
push
sarl
sarb
pop
xchg
xchg
dec
repnz
es
mov
pop
in
shll
test
outsb
loope
mov
jg
test
and
in
scas
pop
sarl
out
adc
jg
pushl
jb
sbb
sbb
push
mov
push
cli
in
dec
mov
loopne
inc
mov
cvtdq2ps
push
je
fcmovnu
xor
daa
and
scas
fdivr
call
into
mov
jle
filds
outsl
fwait
pop
or
xor
adc
ljmp
sub
enter
pusha
jb
rcrb
xchg
decl
push
dec
andb
decl
sbb
push
add
mov
inc
sbb
push
clc
and
pop
cmc
clc
aaa
test
pop
int
jle
mov
aaa
ret
xchg
or
mov
jle
fst
ret
inc
cli
movsl
iret
jmp
mov
dec
or
cmpsb
xor
pop
xor
push
testb
inc
cmc
sub
push
pop
and
cmp
xchg
jmp
data16
arpl
jp
sbb
sbb
cmp
icebp
outsb
stos
stos
mov
or
adc
lcall
orl
xor
push
xchg
add
adc
shrl
call
nop
popf
jns
js
int3
rolb
das
cmpsl
mov
lock
decl
push
addr16
mov
and
adc
mov
ljmp
pop
mov
out
sbb
enter
sub
mull
int3
mov
incl
jne
rcll
adc
arpl
push
out
add
push
sbbl
push
test
pushl
scas
out
mov
repnz
pop
mov
xchg
andl
inc
push
pop
insl
addl
inc
das
xchg
mov
mov
out
lret
jle
cmp
outsl
nop
in
cmpsb
cmp
push
popf
xor
cli
incl
jmp
cmpsb
fs
out
inc
sbbb
imul
stos
cmp
scas
cli
inc
fs
fstpl
ljmp
jo
das
push
jl
mov
popa
aaa
pushl
lcall
movsb
mov
repz
in
adc
rclb
mov
pop
sti
add
incl
push
and
cmp
push
out
pop
into
andb
add
jecxz
jg
popf
cwtl
pushf
push
mov
mov
ds
or
mov
dec
hlt
xlat
mov
pushl
add
inc
jle
and
mov
pusha
stos
sbb
fcomip
lcall
mov
outsb
jmp
insb
cmp
pushf
test
xor
sarl
aas
das
sbb
aaa
or
push
add
or
or
pushf
out
xlat
cmp
jnp
push
ficoml
mov
inc
xchg
gs
pop
std
cld
or
xchg
out
pop
mov
cmp
mov
les
sub
xor
sub
mov
mov
decl
dec
gs
int
mov
or
icebp
loop
pop
scas
xorl
pop
adc
mov
call
adc
mov
adc
jnp
aad
mov
adc
and
pop
push
push
cmp
pop
fcomip
decl
xchg
and
and
in
cmp
fincstp
decl
fld
shll
mov
test
outsb
inc
push
icebp
incl
rol
jnp
in
push
jne
scas
sub
iret
sub
out
cs
loopne
in
call
fdivrs
jnp
xor
cld
add
cmp
cs
mov
add
push
mov
push
mov
cltd
scas
jne
outsl
pop
stos
insb
push
fnsave
lods
pop
jns
jmp
into
das
cli
mov
bound
mov
stos
pushf
jg,pt
daa
inc
xchg
jle
jl
jnp
scas
pop
mov
push
inc
add
inc
cmp
and
xor
fdivrs
cmpsl
flds
ljmp
push
sbb
test
xchg
ja
xor
mov
cli
push
into
mov
pop
shlb
andl
jmp
mov
mov
xchg
in
dec
repnz
dec
jb
sub
dec
mov
mov
dec
fnsaves
js
jne
sahf
mov
fldenv
int3
iret
or
pushl
shlb
pop
mov
add
cli
stos
call
mov
add
pusha
dec
push
arpl
call
dec
fsubr
fs
fld
jne
es
mov
out
fwait
xchg
gs
ljmp
rcrb
mov
mov
sbb
loope
cmc
mov
test
call
aas
hlt
lcall
and
cmpsl
ret
mov
lret
mov
cli
popf
add
call
std
mov
sbb
lods
aas
dec
sub
jns
cli
pop
push
push
or
incl
or
test
lcall
sbb
push
not
mov
into
bound
sub
sti
xchg
and
jbe
jmp
cmpb
dec
or
outsb
mov
or
cmp
lds
stc
stc
fmull
loope
mov
jb
lods
push
into
xchg
push
into
push
cmp
lock
jb
xchg
hlt
popa
je
inc
push
subb
jge
shll
xorb
fdivrl
movb
sti
insb
or
jne
jnp
out
and
ljmp
mov
mov
jbe
mov
pop
cmp
ljmp
sti
jmp
shrl
clc
add
adc
mov
or
or
push
cld
incl
insb
iret
push
jmp
adc
cmp
sub
mov
jmp
pop
adc
add
cli
sub
ljmp
sub
shrl
ret
xor
inc
movsl
cld
cli
or
lea
jle
mov
jg
sahf
pop
lcall
add
sub
sbb
sti
loop
lods
and
call
test
sbb
jmp
test
in
inc
sbb
or
push
loope
lret
mov
nop
sbb
mov
pop
pop
inc
jb
sub
mov
inc
dec
in
mov
lock
fs
ret
fwait
aam
decl
push
gs
bound
push
gs
aaa
jmp
cli
iret
xchg
fs
mov
fildl
cmp
mov
stos
decl
mov
clc
push
sarb
ret
sub
xchg
jo
add
insb
or
mov
icebp
push
lea
sub
cltd
pushl
int
jne
stc
mov
adc
push
js
pushf
mov
movsb
or
pop
and
lcall
pop
pop
xor
add
and
std
ds
pushl
cld
fbstp
adc
jmp
out
stc
mov
shll
sub
jmp
fiadds
call
rcll
jns
fs
leave
imul
jp
jle
call
hlt
or
movsb
mov
pop
call
aam
or
fbstp
xchg
xchg
fidivrl
adc
jmp
in
mov
test
sti
mov
mov
sti
js
mov
das
push
out
push
and
das
clc
jbe
outsb
xchg
adc
fcmovne
ret
ljmp
mov
or
mov
mov
pop
xor
popa
pop
xor
ds
dec
sub
mov
mov
dec
inc
push
das
mov
lds
inc
push
xchg
dec
push
out
data16
xlat
sbb
sbb
je
jae
aas
loop
icebp
in
movsb
ret
xorb
incl
xchg
imul
stc
mov
sbb
minps
outsb
xor
sar
call
movsb
repnz
add
rolb
inc
inc
clc
jge,pn
xchg
scas
std
hlt
repz
inc
jo
filds
incl
inc
dec
lret
mov
jns
xchg
cmp
inc
out
and
and
das
or
or
icebp
incl
mov
push
mov
decl
xchg
and
lcall
mov
xchg
fwait
sbb
fidivrl
hlt
add
sahf
inc
mov
les
jl
and
in
jnp
sub
dec
push
sub
inc
adc
decl
add
and
fsubs
mov
sub
cli
aad
pop
fistps
push
lcall
inc
fsubrl
int3
lds
mov
out
sbb
push
adc
daa
nop
inc
incl
loope
test
pop
insl
insb
push
adc
les
or
mov
jecxz
stos
dec
adc
mov
sahf
aaa
les
mov
lods
jno
and
data16
lret
sarl
leave
test
lods
mov
xchg
xchg
ljmp
xrelease
loope
inc
shlb
out
pop
ret
in
jg
test
decl
lea
inc
imul
loope
ret
pop
cli
mov
loop
or
cli
lcall
jns
imul
inc
iret
cwtl
jnp
test
xor
jecxz
adc
sbb
outsl
es
loope
cmp
ret
adc
fwait
xchg
repnz
xorb
test
ljmp
leave
dec
loope
cld
jl
mov
popf
mov
xlat
lcall
fistl
dec
add
ja
incl
mov
jne
imul
sub
and
lcall
add
hlt
subl
push
sub
xor
shl
xchg
movsb
test
loopne
pushl
lret
sub
pop
sti
pop
push
mov
out
es
call
int3
pop
out
xlat
cld
xchg
dec
push
into
in
movq
scas
shlb
in
mov
out
daa
cli
decl
pop
cmp
lret
mov
pushf
insb
popa
sbb
clc
inc
jge
test
dec
lods
mov
push
mov
sbb
or
push
adc
jmp
aas
mov
inc
loop
fwait
jmp
gs
mov
push
sub
dec
xor
inc
aam
cmp
jg
incl
mov
faddl
pop
xchg
lret
out
cmp
pushl
shl
push
dec
mov
js
sub
cmc
add
and
pop
and
mov
mov
fs
sbb
ret
inc
mov
popa
orl
shlb
xorb
lret
ja
jno
in
add
out
data16
clc
bound
test
lea
lods
stos
pushf
repz
lcall
pop
cmp
xchg
out
mov
pop
ror
inc
es
sahf
mov
and
incl
jae
inc
gs
scas
rorb
outsb
and
mov
fmuls
movsl
icebp
sub
xchg
inc
insl
stc
sbb
icebp
std
jge
mov
decl
je
and
popa
aaa
lret
mov
sete
lods
call
adc
push
sub
das
cli
mov
sub
lods
sahf
jne
lcall
ljmp
outsl
inc
mov
push
or
mov
xchg
jmp
sbb
dec
mov
pop
pop
mov
int
xchg
jge
int3
insl
push
bound
movsb
pop
pop
roll
mov
push
xor
push
shrl
mov
xchg
adc
scas
pushf
popa
sub
jb
pushl
int
aad
lock
cld
sbb
adc
mov
mov
pushl
cmpsb
loope
dec
cmc
dec
sub
xchg
dec
ja
in
lret
clc
out
jo
in
ljmp
inc
xor
jb
dec
pop
mov
pop
ds
into
mov
pushl
pop
out
mov
xchg
xchg
notl
dec
fsubr
cwtl
mov
pushf
jl
repz
xchg
jbe
ljmp
in
arpl
push
clc
aam
insb
data16
xchg
aas
fdivl
mov
push
call
mov
test
mov
cmpsl
mov
and
lock
arpl
or
xor
sub
call
rcrb
ja
clc
fwait
dec
cmpsl
mov
sub
sti
cmc
and
lcall
ljmp
cmp
lahf
jl
iret
shll
xchg
add
lcall
pop
pop
and
adc
aad
lcall
nop
leave
pop
loopne
jg
sub
mov
int
and
inc
mov
fnstsw
jne
es
and
dec
andl
test
dec
call
or
jnp
or
xchg
in
cli
pop
test
rclb
and
push
pop
pop
shlb
pushl
xchg
xlat
sbb
sub
loop
xchg
fsts
jno
xor
push
insl
dec
mov
inc
loopne
ret
add
pop
mov
popa
inc
pop
xor
adc
mov
sbb
inc
cmp
fisttps
frstor
scas
dec
in
je
add
pop
fcomp
sub
dec
or
inc
and
hlt
ljmp
daa
jmp
pop
arpl
jl
push
int3
lock
jg
into
inc
test
loope
inc
aaa
and
dec
js
sub
imul
ds
dec
xchg
inc
sti
jns
loop
pop
adcb
cmc
adc
xchg
inc
fisubrs
sahf
rorb
call
and
pop
pop
sub
xor
xchg
pushl
mov
jmp
add
sti
into
mov
pop
sub
push
lods
fwait
jecxz
aam
aas
call
add
mov
push
imul
pop
push
sub
mov
sub
mov
out
push
shlb
dec
mov
dec
xchg
or
sbb
out
popf
call
and
inc
daa
push
nop
mov
sbb
pop
xchg
push
mov
pop
adc
cld
movsl
mov
sahf
cwtl
add
stc
and
test
cmp
or
decl
mov
mov
loopne
fimuls
mov
decl
sbb
lret
xchg
cmp
sbb
xchg
xor
ret
or
mov
lcall
inc
xchg
sbb
sbb
xorb
jns
ljmp
pusha
lea
cli
mov
push
fwait
mov
into
jb
loop
fisttps
subb
stos
xchg
or
dec
shll
xchg
or
out
fdivr
mov
fwait
lahf
xor
pusha
lret
leave
jecxz
aas
mov
test
dec
push
jnp
stc
int
pusha
ds
sbb
jg
or
push
cwtl
sbb
xor
nop
add
inc
jle
dec
jmp
sub
mov
mov
fs
roll
xchg
add
scas
and
outsl
hlt
mov
mov
hlt
cli
jns
or
or
lods
mov
push
cmc
nop
ljmp
into
dec
push
lret
pop
popa
daa
jbe
mov
inc
aaa
lds
mov
inc
mov
ljmp
fisubs
xchg
dec
inc
imul
add
lcall
fwait
ret
ret
and
xor
mov
adc
push
sub
les
pop
lret
inc
mov
mov
mov
push
jle
aaa
fwait
mov
dec
out
lcall
mov
jno
imul
dec
mov
adc
cmp
cmp
cmp
aas
incl
lds
scas
dec
sub
jl
lcall
push
push
xchg
inc
dec
insb
ficoms
notb
std
popf
push
add
push
lret
fdivs
sub
call
pop
dec
and
jge
lock
arpl
and
xchg
dec
aaa
das
cmpsb
jl
mov
in
mov
in
mov
outsb
adc
dec
shrb
add
xor
pushl
pop
pop
sub
dec
sbb
jle
inc
mov
pushf
andb
xchg
xchg
pop
push
lret
es
jmp
testl
dec
mov
out
imul
loope
jae
push
add
ljmp
mov
test
orb
fisttpll
lock
adc
sar
mov
xchg
cmp
dec
popf
loopne
cmp
jns
sbb
inc
loop
cmp
add
lcall
icebp
cmp
cmp
mov
lcall
and
ret
scas
jnp
inc
sub
in
push
jmp
lods
icebp
in
stos
rcrb
je
push
sub
fistpl
xchg
divb
ret
sub
or
xchg
dec
roll
add
cmpl
lock
jmp
mov
adc
push
loope
leave
hlt
mul
sar
iret
sbb
cli
mov
xor
sbb
mov
cmpb
pop
aad
cmp
out
mov
push
sbb
inc
xor
imul
pop
imul
dec
cmp
ljmp
call
xchg
mov
mov
xchg
jmp
xor
insb
hlt
adc
mov
push
pop
push
push
add
xor
popf
mov
adc
decl
scas
xor
gs
pop
icebp
outsb
or
mov
push
mov
sti
push
push
fs
mov
sbb
ljmp
pop
rolb
push
int
jg
decl
mov
ss
nop
es
push
loop
std
stc
pop
or
or
push
stc
insb
loope
mov
mov
in
jo
movsl
stos
add
push
mov
cwtl
dec
or
mov
popf
rcr
int3
sbb
sbb
and
inc
pop
pop
scas
mov
sbb
mov
add
call
std
ja
inc
aaa
mov
outsb
xor
or
sti
pop
xchg
in
jb
cmc
add
mov
or
inc
fisubrl
insb
push
aas
loope
mov
scas
push
mov
fmull
je
push
jl
inc
ret
shl
fsubrs
push
and
aaa
mov
daa
outsl
pop
rcrb
push
push
call
and
into
jmp
xor
popa
out
sub
mov
scas
rep
mov
inc
cld
in
xlat
adc
incl
pop
cwtl
fwait
icebp
sbb
mov
inc
aaa
bound
pop
mov
mov
push
addr16
jg
ljmp
out
fdivrs
into
xchg
inc
push
mov
sub
cmp
loop
jmp
sbb
push
movsl
ret
dec
fs
scas
adc
mov
aas
outsb
cmc
mov
cmp
cmp
mov
or
sahf
mov
push
mov
xor
or
push
into
push
shlb
test
dec
mov
insl
lea
and
mov
out
daa
push
loopne
cltd
xor
lcall
fsubs
les
xor
shll
in
inc
sub
and
fsubrp
inc
jmp
lods
pop
das
stos
daa
fdivrs
aaa
mov
js
push
stc
dec
jae
mov
popa
mov
incl
lret
mov
xchg
and
pop
mov
lea
jbe
lcall
subb
push
ljmp
mov
sbb
lods
cmp
and
inc
jb
xor
jne
mov
add
cli
aad
icebp
pop
incl
sub
repnz
lea
cwtl
sbbb
call
fwait
sub
sub
dec
add
daa
cmp
sbb
ss
repnz
dec
or
mov
add
sti
movb
stc
jno
sbb
notb
addr16
test
incl
inc
xor
movsb
imul
sbb
shl
ljmp
push
cmp
or
xor
cmp
into
jbe
stos
dec
clc
fadds
pop
movsb
jl
scas
clc
mov
jge
mov
and
daa
daa
bound
jne
pusha
enter
shrb
and
inc
push
stos
inc
out
jmp
push
mov
or
std
aas
pop
dec
and
mov
inc
aam
js
push
decl
mov
xor
lock
cli
xor
push
adc
jne
ss
xchg
xchg
inc
cmp
test
shrb
or
push
addb
add
es
out
leave
cmc
inc
pushl
adc
fidivrl
repnz
pop
out
mov
add
cmp
mov
jno
xlat
mov
mov
fsubrl
add
push
lods
mov
clc
jg
cmpsl
sbb
sub
in
mov
xor
loope
xchg
pop
std
decl
je
movsl
or
fucom
cmp
divb
jbe
rorb
test
pusha
mov
sahf
rcl
pop
or
test
push
out
cmp
push
push
jecxz
js
cmpsb
add
lret
lret
stc
cmp
mov
hlt
and
xchg
pop
test
decl
data16
push
mov
in
sub
nop
cmp
sub
jo
jg
aam
cmp
enter
les
cmp
jmp
xchg
jae
ljmp
push
mov
scas
iret
jns
sub
mov
inc
pushf
sub
xchg
stc
cld
xchg
mov
sbb
loope
scas
mulb
lahf
cmp
pop
cmp
fst
push
call
ljmp
loop
xchg
xchg
fsts
or
jb
jae
movsl
inc
and
mov
sarl
mov
cltd
lret
jmp
push
inc
lahf
pop
or
pushf
sbb
out
int3
cmp
pop
lcall
dec
decb
xchg
jmp
into
fprem
lcall
lcall
mov
rorb
movsb
das
insb
adc
mov
pop
pop
cld
jmp
or
cmp
out
fidivs
inc
inc
lcall
sbbb
call
scas
sbb
cltd
mov
notb
jne
dec
hlt
mov
pop
lret
lods
pushf
mov
int3
call
test
clc
in
ljmp
in
cmp
ja
lcall
call
push
mov
jbe
cwtl
clc
or
imul
inc
movsb
aam
incl
paddw
imull
mov
xor
xchg
scas
loopne
in
rcr
push
pop
add
mov
rcll
into
add
mov
jb
ret
or
out
sub
push
mov
daa
test
pop
jp
pushl
mov
and
xchg
jl
mov
cmp
lcall
sbb
jbe
adc
xchg
mov
pop
jg
scas
inc
inc
ficomps
jno
jl
mov
xor
pop
sub
and
or
xchg
mov
and
mov
sub
cli
mov
jecxz
movsl
jae
cmpsb
jl
pop
mov
xchg
push
lods
push
push
decl
cli
stos
jnp
or
mov
dec
cmpsl
aad
jae
inc
or
xor
std
pushl
jnp
pushf
ljmp
call
mov
push
adc
into
decb
mov
push
lea
or
loop
xchg
popf
sbb
jns
push
ret
scas
sub
inc
in
fdivrp
pop
mov
scas
adc
lods
repnz
adc
push
loop
jo
incl
xchg
pop
lret
cmp
mov
xchg
mov
clc
out
aam
xchg
shl
mov
or
les
sti
clc
sbb
jb
push
mov
jg
jl
or
cli
call
mov
test
clc
add
or
inc
clc
dec
or
cmp
mov
xor
push
push
sub
or
pushl
xorl
sbb
sub
stc
jecxz
xchg
xor
and
sbb
or
incl
jnp
sub
adc
mov
inc
add
mov
dec
mov
pop
shl
mov
fdivr
ljmp
popf
mov
push
scas
cmp
xchg
mov
notl
and
shll
xchg
pop
inc
xchg
in
xchg
fldenv
xchg
sub
inc
int3
xchg
out
lcall
inc
outsl
jg
jmp
popf
mov
xor
mov
push
push
dec
jns
in
fldl
mov
mov
call
xor
jb
or
jb
lods
push
xchg
add
lahf
mov
outsb
addr16
popa
hlt
out
ja
clc
inc
xchg
jns,pt
rcr
and
xor
jl
dec
addl
fdivl
in
testl
into
mov
push
and
loopne
mov
imul
sub
pop
sub
lods
shll
out
add
decl
and
pop
inc
fldl
jns
xchg
shrb
mov
pop
xor
cmovl
ljmp
mov
push
and
mov
push
das
pop
or
pop
lock
jo
incl
ss
jns
adc
icebp
or
push
push
mov
inc
out
sub
inc
ja
mov
incl
cld
call
cmp
imul
push
xlat
popa
cwtl
sub
pop
outsb
dec
xor
or
lret
pop
jnp
or
inc
xchg
mov
jge
ljmp
andb
dec
sarb
xor
jl
fdiv
xor
add
mov
fs
add
xchg
pop
push
mov
mov
push
mov
aaa
or
je
popf
stos
mov
in
jle
cwtl
mov
cld
int
ret
pop
push
cmp
testb
adc
adc
push
sar
ljmp
clc
pcmpgtw
jne
lods
outsl
sub
inc
cmp
mov
mov
jno
push
stos
outsl
sahf
movsl
jmp
add
sbb
in
pop
leave
ret
clc
mov
iret
popf
cwtl
add
push
mov
decl
pop
out
jnp
jno
sub
xchg
negl
inc
cmpsl
cwtl
xchg
loopne
push
repnz
aaa
jg
mov
pop
popa
cmp
xor
jo
and
enter
xor
les
cld
sub
pop
lds
cld
mov
push
push
je
xchg
mov
fld
inc
pop
leave
push
jg
int3
cmc
mov
xor
jne
jae
push
and
pop
out
scas
xchg
inc
push
inc
push
xlat
cmp
icebp
orl
dec
cvtpi2ps
imul
jg
ja
pop
lea
mov
push
pop
mov
mov
repz
gs
fcoml
jmp
xchg
daa
fisttpll
daa
in
cmpl
lcall
fstpl
pop
push
bound
cmp
das
sar
add
jp
adc
or
inc
shr
dec
xchg
and
push
imul
je
push
insl
imul
imul
imul
adc
jns
into
xlat
imul
decl
xchg
jl
sbb
ret
mov
popa
inc
pop
lret
xor
add
xor
or
mov
cmp
in
push
xor
hlt
mov
dec
push
data16
jle
mov
mov
loopne
push
incl
cld
jne
mov
fwait
mov
cmp
orb
ds
subl
lcall
xchg
repz
repnz
jno
push
mov
add
pushf
xor
punpckldq
push
cmp
lcall
ja
mov
scas
xor
cmpsl
push
arpl
aaa
lods
sbb
jmp
push
shrl
pop
jl
scas
pop
dec
jo
xchg
lds
lods
adc
mov
scas
xchg
sbb
js
ss
je
cmp
cli
nop
add
jmp
call
cmpsb
aad
lods
jbe
mov
out
fisttps
cs
data16
dec
repnz
mov
rclb
stos
aad
or
xchg
adc
ljmp
jp
adc
push
cli
inc
jg
add
jno
jns
popa
pusha
insl
bound
sbb
cmc
mov
fwait
push
xor
repnz
xchg
fisubrs
aas
stos
dec
sahf
movsb
js
mov
dec
mov
push
and
fcompl
lcall
pop
std
sahf
fisubs
cmp
dec
cld
pop
xor
loopne
ja
dec
nop
incl
pop
cmp
js
jb
push
unpcklps
jge
pop
lcall
sbb
dec
sbb
dec
mov
mov
and
or
jmp
mov
lods
mov
jg
incl
fisttpll
inc
into
and
mov
mov
fdivrp
decl
ds
cmp
pop
jns
lods
push
jb
pop
sahf
push
shrb
push
addr16
out
out
cld
pushl
dec
mov
lds
jmp
or
inc
xor
lret
nop
sbb
test
xor
stc
daa
mov
rol
xor
aas
push
test
clc
js
xchg
pushl
and
shll
orb
aas
ja
mov
scas
push
hlt
mov
hlt
mov
in
lret
addr16
sar
pushl
pop
adc
inc
jp
jg
pushf
jmp
js
lods
dec
jg
in
cmpsl
cltd
mov
inc
decl
pop
mov
leave
push
pop
outsb
jne
jecxz
cwtl
sahf
mov
and
adc
test
push
test
add
inc
cmp
push
fistpll
jnp
das
inc
or
jle
loop
xor
xor
cmp
inc
lcall
out
repz
nop
ret
jp
daa
and
rclb
insl
es
push
cld
lahf
sbb
insb
push
roll
lret
or
dec
js
pop
xchg
call
fcompl
inc
ja
insb
add
add
xchg
xlat
jp
cltd
jne
dec
ds
push
push
dec
dec
xchg
cli
add
dec
pop
aas
xor
clc
fmuls
sub
ljmp
jge
popa
pop
sbb
mov
rcrb
shl
rcrl
jbe
pop
sub
incl
mov
dec
test
enter
jno
xlat
jle
movsb
add
push
adc
ret
incl
or
rcrl
repnz
lahf
mov
jo
sub
push
aad
call
outsl
pop
jp
fnstsw
repz
mov
rorl
test
cltd
fcomps
ret
std
decl
jae
in
and
leave
pop
push
aaa
pop
ljmp
mull
das
cli
pushl
sbb
icebp
push
lods
lcall
pop
adc
mov
pop
dec
pushl
fdivl
out
sub
hlt
sbb
imul
cmpl
push
pushl
out
in
into
addr16
out
pop
inc
sbb
test
inc
test
pop
jl
out
inc
mov
xchg
call
xor
fisubrl
cmp
mov
arpl
push
dec
ret
aas
mov
es
push
popf
sar
incl
test
adc
or
jmp
mov
movsl
jmp
popa
sub
outsl
cmp
icebp
push
je
xchg
push
fisttpl
test
pop
sbb
xchg
popf
jno
sti
ljmp
ljmp
lock
jbe
xor
test
sub
push
pop
shlb
and
ss
decl
adc
imul
fs
vmovups
cld
mov
lock
incl
rol
fdivrs
mov
push
pop
push
jbe
lahf
ljmp
mov
aaa
and
mov
insl
inc
push
adc
and
notl
into
rcrl
lods
xchg
aam
mov
dec
inc
jmp
add
gs
loop
push
lods
lret
jnp
push
hlt
xchg
dec
xor
adc
ljmp
icebp
push
call
mov
daa
sub
pushl
jp
dec
push
and
or
xor
inc
add
cmp
mov
insb
repnz
sbb
pushl
mov
sbb
addr16
orb
mov
mov
popf
sbb
stos
das
cli
pop
sub
subl
sbb
jb,pt
loope
cmp
mov
push
repz
jl
loop
mov
dec
sti
mov
or
fsubl
enter
fbstp
test
push
daa
xor
in
jp
inc
pop
bound
adc
jp
std
sbb
mov
pop
lahf
mov
popl
push
cld
dec
stos
data16
std
push
daa
push
test
leave
fmulp
das
cmpsb
pop
cmpsb
ja
mov
adc
jmp
imul
clc
test
loope
jle
dec
adc
mov
ljmp
lcallw
dec
mov
sbb
mov
dec
scas
xchg
pushf
sar
incl
js
push
mov
mov
and
mov
scas
adc
scas
pop
pop
lret
xchg
inc
xchg
loopne
std
decl
lods
mov
push
xchg
ret
xorl
in
movsb
xchg
add
loope
mov
aaa
je
dec
adc
pop
pushl
mov
sbb
pop
cs
leave
xlat
pop
mov
fistpl
out
add
test
push
xchg
js
push
test
pop
jge
cmc
mov
jne
mov
aam
push
mov
xor
sbb
lcall
dec
inc
and
fildll
jnp
fisubrs
test
ret
addb
decl
popf
fidivl
outsb
aam
xchg
mov
sbb
std
inc
iret
mov
lock
outsl
test
cmp
sub
icebp
and
outsb
inc
mov
jecxz
xchg
repnz
gs
pop
push
sbb
fs
pushl
lcall
ss
mov
mov
pop
subl
cltd
jl
adc
dec
dec
fsubrs
xor
call
sti
rcll
and
xchg
jmp
jne
ds
fdivs
fisttpl
pop
or
and
pop
mov
mov
xor
and
pushf
rcrl
mov
jle
aad
leave
pop
je
jae
jnp
insl
nop
adc
cmp
xchg
dec
shrl
adc
push
out
jl
dec
hlt
mov
jle
lds
jne
test
sti
popa
sub
mov
cwtl
sub
dec
nop
jmp
popf
pop
in
pushf
push
loop
mov
pop
or
incl
lods
pusha
xor
mov
inc
loopne
jae
jb
pop
mov
mov
decl
hlt
push
rcrb
dec
pop
out
and
out
in
in
and
repnz
in
mov
call
call
inc
rcrb
shrl
pop
jecxz
les
ljmp
ljmp
clc
push
cmp
outsb
popa
mov
mov
sbbb
sub
xchg
jmp
jecxz
jb
packuswb
pushf
mov
movsb
add
call
dec
data16
ficomps
in
stos
xchg
inc
mov
cmpsb
lea
out
xchg
shll
mov
rol
xor
cli
add
and
inc
insl
in
lds
enter
jp
repnz
imul
das
lock
lds
xor
dec
add
push
dec
sub
arpl
pop
pop
cmp
call
int
orl
jbe
add
das
cs
mov
in
incl
push
mov
inc
frstor
int3
mov
dec
or
inc
mov
cs
test
cltd
xchg
popf
fs
cmp
xchg
je
push
mov
xchg
jno
push
xor
xchg
aaa
cwtl
test
pop
fiadds
outsl
cli
fidivs
lret
lcall
test
divb
std
rcr
idivl
xor
decl
aam
cltd
add
mov
repnz
push
jp,pt
add
jecxz
and
icebp
adc
adc
sbb
stos
lahf
mov
ret
push
dec
push
test
xchg
imul
outsl
decb
shlb
pop
xor
push
daa
out
jg
mov
les
into
mov
jmp
jle
lret
mov
pushl
and
shrl
dec
or
add
push
sbb
mov
mov
addl
fstpl
stos
inc
mov
popf
jns
pop
lea
loope
inc
shlb
sbb
dec
cmp
fld
push
ja
call
sbb
sbb
lcall
pop
aad
cmp
lock
jp
add
outsb
inc
movsl
mov
jno
jmp
gs
lcall
xor
inc
sahf
mov
test
out
cwtl
mov
mov
and
es
jno
lcall
mov
cmp
dec
mov
fsts
mov
mov
loope
push
ja
push
inc
aaa
mov
dec
mov
aas
mov
testl
pop
cmovs
adc
js
int3
mov
cwtl
nop
lea
dec
mov
mov
xor
sti
test
sbb
adc
pop
dec
jecxz
sar
cmp
push
test
and
ljmp
xchg
sub
lret
push
das
jmp
shlb
mov
lcall
push
and
push
adc
jb
testb
ss
ret
clc
push
cld
jmp
xlat
out
subb
test
mov
ljmp
jo
cs
jmp
jp
cmp
jle
lea
ljmp
dec
imul
sahf
lahf
cmp
jns
daa
rclb
addl
xchg
push
testl
call
mov
jae
push
dec
ja
lods
stos
mov
mov
add
scas
xor
jl
test
inc
cmp
push
jg
gs
lret
mov
mov
add
xchg
enter
mov
jmp
lret
sub
dec
mov
lds
dec
inc
mov
jp
outsl
lret
ds
ljmp
fcos
test
int3
mov
icebp
fs
fisttpll
ljmp
push
xchg
popa
iret
cmp
neg
adc
aas
adc
sub
std
out
or
hlt
xor
jmp
xchg
pushl
addb
push
insl
push
push
addr16
push
or
mov
mov
push
xchg
jg
inc
xor
icebp
add
lcall
ljmp
cmp
adc
xor
or
inc
fs
aaa
xorb
and
std
mov
ljmp
fidivrl
and
add
mov
inc
adc
or
mov
pop
jle
mov
lcall
scas
pop
lods
and
je
xchg
sbb
out
jno
cmpsb
adc
repnz
xor
mov
push
adc
mov
mov
add
dec
mov
sbb
inc
cmp
lahf
lret
cltd
in
xor
sub
jno
aam
mov
add
add
sbb
lods
je
jmp
mov
mov
push
shll
repnz
jl
mov
in
repnz
xchg
push
adc
cmc
or
ljmp
sub
inc
faddl
lea
in
xchg
call
cld
pop
and
xchg
sbb
mov
cmp
std
hlt
rclb
ljmp
sbb
pushl
std
adc
mov
daa
pop
push
pushf
dec
ror
xchg
mov
jecxz
dec
jae
js
je
xchg
lret
and
movsl
or
jl
ljmp
ret
or
jg
je
sbb
aam
in
lods
cli
jno
push
fisubrl
mov
push
adcl
cmpb
and
jmp
in
push
pop
std
inc
ret
rcrl
mov
push
mov
fcom
mov
mov
cmpsb
call
sub
add
sub
dec
jp
xlat
loope
inc
xor
push
js
adc
out
push
jmp
lods
push
jg
push
mov
mov
ljmp
pop
pop
in
icebp
jnp
aaa
ret
repz
add
sub
mov
or
js
jmp
adc
inc
or
test
push
out
iret
stos
cmp
jle
lret
scas
sub
pushl
test
fimull
push
mov
out
rorb
js
jb
loopne
mov
mov
lock
xchg
test
pop
sub
mov
std
ljmp
pop
in
or
js
push
pushf
xor
shlb
imul
jp
out
pop
jns
adc
outsl
dec
xor
jle
testb
dec
cmpsl
cmpb
out
cmp
mov
jl
mov
jae
imul
mov
mov
call
push
jle
loop
and
add
sbb
push
xchg
pushl
mov
mov
jae
clc
jo
ret
jg
std
xchg
inc
mov
popf
icebp
sub
mov
dec
add
jno
jb
lea
addr16
push
test
xchg
lret
mov
ret
movb
pop
push
shll
pushl
adc
cmp
sbb
loope
jle
jne
cld
xor
jnp
sub
in
lcall
iret
into
es
mov
fs
xchg
add
std
out
push
xchg
mov
jmp
push
cmc
in
xchg
add
jno
cmp
cmp
stos
shrl
in
pmulhw
pop
or
gs
lcall
sbb
mov
cmp
add
push
cmp
popf
push
xchg
sbb
cmp
jb
lcall
dec
dec
xchg
inc
imul
fs
and
cmp
jae
mov
insl
ljmp
decl
mov
mov
pop
dec
shll
xor
cs
xchg
shlb
jmp
call
int3
adc
lds
je
loopne
fninit
std
push
push
jg
fcomip
jmp
lahf
ja
jno
mov
js
out
insl
cld
mov
xchg
sub
ret
ljmp
enter
rcrl
cmp
movsb
imul
test
mov
push
push
mov
inc
pushf
lret
ss
dec
mov
xor
push
dec
inc
xchg
sar
push
insl
fsubrl
mov
xchg
or
daa
jbe
or
je
call
imul
stc
lods
mov
vorpd
adc
in
xchg
loopne
cmp
push
or
or
stc
sub
in
xchg
sarb
fwait
js
lcall
pop
inc
xchg
jg
or
adc
jl
outsl
xor
mov
daa
pop
outsl
mov
shrl
adc
pop
cmpb
jo
insb
xchg
cltd
cmp
into
cmpsb
dec
or
dec
fstl
and
movsl
stos
cmpsl
xor
xchg
jnp
sar
int3
pop
sar
incl
cli
adc
inc
mov
dec
loope
dec
icebp
mov
or
jo
pop
pop
outsl
or
ljmp
lds
roll
filds
in
pop
and
or
jb
mov
pushl
xor
fildl
adc
mov
inc
ljmp
xor
ljmp
les
cld
lods
fldt
mov
inc
ret
mov
jp
mov
pop
push
inc
sar
call
push
xchg
mov
in
xor
ret
ss
std
mov
dec
adc
dec
out
in
xlat
decl
out
in
xor
mov
stos
cli
dec
bound
outsb
lahf
mov
psraw
mov
fmulp
subb
popf
xor
jno
xor
xchg
sbb
mov
ja
mov
cs
fiadds
mov
arpl
outsl
cmp
xchg
fcoml
xlat
cmpsb
inc
jmp
pop
lock
pop
xor
ret
dec
in
cmp
add
test
mov
es
add
lock
sub
cmp
jecxz
dec
cmp
repnz
fs
mov
call
das
jmp
xchg
dec
in
adc
incl
es
test
mov
jecxz
add
pop
lret
aam
iret
test
pusha
incl
cld
push
hlt
pushf
push
jnp
mov
int
loope
push
dec
add
push
je
adc
inc
xor
pop
push
xor
or
jecxz
mov
mov
or
cmp
mov
lcall
jns
sarb
test
jle
add
out
mov
mov
fwait
cwtl
clc
scas
mov
lea
fnsave
addl
out
cmp
shlb
dec
lcall
sub
call
arpl
clc
or
je
das
mov
cmp
and
lods
icebp
cmpsb
xchg
jae
inc
insb
imul
repz
push
sbb
pop
xchg
ljmp
shll
idiv
xchg
xchg
les
imul
jecxz
dec
adc
stos
mov
or
xor
in
sbb
les
cli
dec
fs
out
ds
sahf
lods
mov
dec
and
cmpsb
xorb
xor
in
sbb
pop
inc
jge
lcall
add
sbb
mov
clc
nop
jmp
loopne
ja
xor
fimuls
xchg
adc
mov
fwait
mov
test
add
cmp
jl
popf
incb
notl
mov
popf
jnp
adc
and
pop
mov
incl
mov
and
dec
aad
mov
je
mov
in
and
ret
jb
incl
dec
xchg
stc
addr16
scas
fidivs
or
ljmp
ljmp
push
cmp
lods
pop
into
push
xchg
jae
xchg
or
stos
jmp
mov
scas
xchg
sarl
mov
xchg
push
cmp
dec
push
push
adc
and
push
push
in
mov
dec
sbb
ljmp
shll
jmp
sti
mov
push
pop
faddp
xchg
pop
fisubrl
decl
dec
mov
xor
mov
mov
cmp
push
dec
js
or
lods
ljmp
clc
push
and
mov
dec
aad
aas
sub
xchg
mov
mov
push
in
incl
adc
mov
jecxz
mov
outsb
mov
pop
test
test
lret
jmp
adc
jge
mov
cmp
or
fcompl
shl
sub
ud0
call
loope
jo
fwait
pop
jno
in
iret
sbb
inc
xor
test
cmp
das
cli
call
out
mov
aam
roll
call
es
inc
addr16
cmp
test
push
sbb
adc
sub
out
xor
aam
adc
ljmp
mov
sbb
aas
sbb
mov
rcrb
clc
adc
call
push
xlat
fadds
insl
mov
call
arpl
push
sub
mov
xor
inc
mov
call
sub
xor
push
add
cld
stc
adc
iret
xor
pop
test
incl
lods
jb
sbb
jle
repnz
xlat
sbb
xchg
call
dec
jns
pushl
cld
leave
js
cmpsl
enter
out
cmp
mov
pop
jb
sahf
cmp
jge
mov
pop
adc
xchg
jns
xchg
jg
or
mov
mov
push
mov
jbe
jmp
ret
popf
push
icebp
decl
inc
arpl
mov
jl
push
and
mov
outsl
push
call
cwtl
popf
loope
fisttps
sub
sbb
int3
inc
ss
cld
cltd
xchg
enter
xchg
stc
pop
in
jns
mov
pop
push
sub
repnz
xchg
jge
loopne
sahf
aas
jno
jb
out
enter
decl
xor
icebp
rol
lret
in
mov
mov
out
cmp
lcall
mov
fucomip
test
lret
out
fdivr
popf
outsl
scas
scas
dec
xchg
aas
inc
cli
mov
decl
lahf
push
push
mov
idivb
fisubrl
leave
aas
xchg
inc
mov
orb
dec
iret
fisubrl
pop
adc
mov
fmull
xor
lods
ljmp
lret
mov
imul
add
ljmp
std
xlat
ret
sti
mov
dec
push
adc
pop
cli
mov
xchg
sub
xor
inc
std
or
mov
fs
sbb
inc
stos
mov
icebp
push
add
fidivrs
push
add
dec
and
cmpsb
ljmp
test
bound
cmp
push
pop
push
gs
sub
mov
fsts
jle
movsb
cmp
and
or
xor
rep
jbe
xchg
fisttpll
test
incl
sbb
xor
ret
and
add
ljmp
jg
fcoms
mov
iret
and
push
sub
mov
shl
adc
test
sbb
pushl
mov
bound
out
test
cmp
pop
sbb
pop
or
std
outsl
cmp
lret
int3
mov
dec
ja
cmp
pop
lea
icebp
call
nop
ret
inc
mov
dec
pop
jp
pop
popa
in
push
aas
stc
jno
push
sub
pop
pusha
sub
xor
mov
lds
dec
jl
xchg
pusha
adc
pushl
cld
jmp
stos
gs
cld
arpl
mov
pop
inc
mov
fdiv
icebp
ljmp
pop
stos
repnz
icebp
mov
loope
jle
out
sbb
xchg
adc
mov
ljmp
and
sbb
and
jg
push
mov
push
das
cli
dec
dec
into
jmp
push
xchg
sbb
ret
imul
fcomi
jge
pop
outsl
jns
xchg
leave
dec
jmp
lret
xchg
roll
xchg
add
xor
ffreep
test
out
mov
add
hlt
leave
fnstcw
shll
jo
cmc
jp
insl
cmc
dec
mov
pusha
xor
fld
inc
es
test
pushl
test
imul
pop
stc
xor
inc
std
cli
fiaddl
scas
inc
adc
loopne
sub
jb
js
pop
and
test
push
mov
xlat
pop
xchg
sub
jbe
push
or
dec
mov
push
ret
or
pop
jae
incb
out
scas
mov
pop
push
sbbb
cmpb
lcall
sbb
or
jmp
or
push
sbb
ljmp
inc
dec
out
push
adc
incl
sahf
nop
mov
cmp
push
jp
xor
fst
xchg
jp
and
lea
push
movsl
xlat
mov
and
xor
push
cmc
repz
cmpsl
dec
repnz
insl
js
cld
cmp
jae
push
mov
and
movsl
pop
adc
stc
pop
jns
pop
adc
xchg
push
cmp
jg
mov
push
lahf
push
mov
jne
sub
gs
and
negb
xchg
mov
fstps
sbb
jmp
pop
in
into
xor
push
adc
leave
test
mov
xor
cmp
adc
xor
mov
adc
and
inc
call
incl
iret
cmp
xchg
push
imul
rcr
aas
jecxz
mov
push
call
mov
cmp
dec
shll
dec
rcrl
sub
jbe
jmp
rcrb
adc
dec
jae
mov
imul
mov
cmpsb
fs
lcall
imull
out
andb
inc
inc
dec
and
jge
mov
js
sub
inc
movsb
cmpsb
decl
sarb
mov
sbb
jnp
adc
push
sbb
jne
push
push
sti
mov
stos
dec
outsl
pop
mov
decl
jne
repnz
xchg
or
mov
rcl
cltd
pushf
sar
call
mov
add
or
sub
fstcw
or
dec
lock
inc
cmpsb
add
or
daa
add
call
jle
gs
stos
jle
dec
test
lcall
enter
xchg
outsb
jmp
or
mov
hlt
cmp
lcall
push
cmp
jbe
popl
pop
imul
add
jge
mov
in
jno
pop
stos
mov
sub
ljmp
lcall
cs
in
sbb
xor
push
rclb
cltd
jb
out
dec
cmp
lcall
jno
add
push
adc
int
adc
popf
or
sub
fistps
inc
sub
gs
dec
jo
bound
jb
rorl
in
lret
cmc
das
clc
call
jp
xlat
scas
int3
sub
int3
shrl
fsubs
lods
mov
lods
daa
addl
ljmp
outsb
push
mov
enter
dec
hlt
mov
adc
in
scas
incl
mov
xorl
cmp
mov
and
sbb
rol
jns
outsl
mov
call
push
repnz
hlt
cmpsb
xchg
out
arpl
loop
cwtl
cmp
leave
jg
sti
aaa
jmp
clc
test
push
or
stos
sbb
std
jmp
mov
jge
cmp
inc
cwtl
mov
stos
jns
jge
inc
pop
or
mov
xchg
inc
mov
adc
idivb
aas
push
ja
mov
aaa
std
int3
popa
push
and
aas
mov
insb
js
test
lods
or
and
aaa
std
pushl
ljmp
adc
lea
sbb
andl
jl
dec
adc
fwait
jno
das
lods
bound
pop
pop
movsb
stos
pop
pushl
repnz
sub
inc
int
dec
xchg
ret
sbb
imul
icebp
sbb
std
pushl
imul
mov
pushf
adcb
sub
mov
imul
or
cmp
out
dec
add
decl
pop
dec
popa
pop
mov
in
and
in
mov
std
jns
add
pushl
dec
inc
adc
seta
leave
outsl
push
lock
cmp
lcall
jo
adc
sbb
xor
mov
nop
dec
popf
cmp
xchg
pop
mov
jmp
fmuls
fisttpl
pop
add
sub
shrb
clc
es
adc
loope
inc
in
sbb
push
jg
add
ds
int
or
add
dec
and
rcl
cmp
lea
cltd
inc
mov
dec
lock
xor
cmpsl
aaa
cmpl
imul
incl
sub
sub
bound
inc
adc
scas
mov
push
cmp
dec
xchg
push
es
mov
adc
in
movsb
adc
out
push
push
cltd
jle
xchg
aaa
jecxz
dec
stos
jecxz
cmpsl
imul
repz
adc
lds
mov
cwtl
cmc
into
dec
pop
iret
popa
push
ret
push
test
xor
imul
push
enter
mov
or
cmp
orb
imull
mov
and
pop
jmp
push
scas
jbe
pushf
sahf
fsub
in
adc
dec
xor
test
lret
aam
mov
call
addb
xor
fwait
call
mov
lcall
leave
and
jg
dec
lock
imul
mov
and
sbb
dec
add
std
out
jmp
scas
xchg
inc
pusha
xor
sbb
aaa
push
dec
repnz
jl
inc
add
add
dec
es
jmp
sahf
repnz
sarl
inc
push
icebp
and
mov
mov
adc
jo
das
lea
test
jmp
mov
aas
out
hlt
scas
mov
inc
xchg
popf
iret
fwait
decb
pop
fcmove
shll
push
mov
lcall
clc
mov
stos
cld
mov
pop
push
inc
mov
adc
mov
xchg
jb
fs
or
ljmp
inc
cmpsl
cmpsb
sar
cld
mov
aam
xor
and
mov
jno
call
enter
pop
xor
inc
test
fwait
mov
std
mov
fisubl
or
pushl
xchg
cmpsb
jecxz
movsl
addr16
push
mov
xchg
pop
jle
cld
xor
or
mov
adc
push
push
shr
insb
mov
gs
cmpsb
push
inc
pop
ret
jg
pushl
les
jl
add
dec
sahf
imul
jno
ja
clc
pop
pop
mov
out
call
repz
arpl
jge
sub
jmp
or
sbb
dec
pop
sub
inc
push
adc
cmc
sub
or
popa
xchg
fldcw
sti
cltd
in
xchg
adc
mov
push
lock
loopne
mov
push
sub
mov
sbb
mov
ret
mov
lret
mov
push
nop
ljmp
lods
sbbl
inc
inc
mov
xchg
mov
shlb
pop
mov
adc
arpl
mov
xor
xchg
fstpt
adc
pop
ja
jg
sbb
cs
xor
iret
mov
mov
lret
adc
inc
xor
xchg
lcall
scas
pushl
daa
fidivrs
stos
lea
xchg
xlat
pusha
xlat
mov
xchg
pusha
outsb
adc
pop
pushf
mov
ret
cltd
dec
xlat
jl
movsb
lahf
addr16
loop
and
jl
mov
fs
jmp
in
sarb
mov
push
int3
cmp
mov
pop
fcomp
push
loopne
gs
cmp
fs
xor
cmp
add
fistps
stc
jmp
jecxz
dec
jle
out
lret
dec
and
repz
xor
push
das
sar
outsb
rcl
aas
xchg
dec
sbb
adc
mov
aad
aam
pop
cld
mov
cld
push
and
out
fs
sbb
push
fimuls
jl
pushl
xor
mov
icebp
pusha
adcl
xchg
adc
mov
aaa
and
push
jmp
jmp
sub
adc
bnd
mov
sub
loopne
fwait
shrb
xor
rcrb
jb
sub
jecxz
ss
decl
call
ret
sahf
in
shl
mov
ljmp
and
mov
sub
das
repnz
jno
push
roll
mov
aam
push
jbe
cltd
shl
nop
test
jns
rolb
in
ficompl
xchg
jae
adc
fsubs
jne
mov
leave
fnstenv
insb
fnstcw
daa
pusha
cbtw
jbe
test
ljmp
pop
pushl
clc
int
movsl
popf
or
and
mov
adc
lcall
lock
xchg
add
pop
cltd
out
icebp
notl
jns
incl
mov
jge
icebp
js
cs
sbb
pop
lret
orl
cs
cmp
jg
ret
sub
mov
lds
add
mov
call
dec
mov
push
fbstp
sub
lds
pushf
mov
add
aad
aam
call
pushl
pop
cs
test
adc
pop
dec
ljmp
and
sbb
das
clc
jns
jo
push
cld
lret
test
in
mov
les
ljmp
or
xor
inc
inc
jnp
testl
scas
lods
mov
idiv
pushl
xchg
nop
or
push
fxch
push
shlb
and
inc
mov
add
addr16
or
test
cmp
xchg
mov
fucomp
pop
lds
fucomip
push
rcll
jmp
outsl
shl
mov
icebp
mov
lea
movsb
inc
cltd
mov
stos
imull
ud0
cmp
adc
into
dec
lock
cmp
mov
imull
cwtl
lahf
push
sub
cld
pushl
mov
sub
ja
ret
cmpl
movsl
mov
cmp
jle
xchg
sti
mov
or
jge
jnp
addr16
mov
mov
inc
incl
ss
add
adc
or
jno
mov
push
sub
les
xchg
adc
jns
in
bound
xor
call
jo
pop
jo
outsl
mov
inc
lea
mov
incl
lcall
std
iret
out
mov
mov
mov
push
pop
scas
mov
decl
daa
jo
sti
mov
fdivs
sub
adc
and
icebp
in
scas
cmp
cwtl
fldl
arpl
add
or
test
lcall
cmpsb
and
clc
jns
in
dec
and
adc
cmp
mov
adc
ret
and
addr16
arpl
daa
mov
mov
rcrl
jg
jns
addr16
mov
cmpl
jmp
add
dec
sub
aad
push
std
loopw
cmp
les
jns
cmp
lock
mov
iret
cltd
inc
pushf
aas
push
outsb
cmpsb
js
dec
insb
inc
lcall
add
nop
cmc
iret
cmpsb
inc
ds
xchg
pop
call
clc
scas
mov
jo
aas
pop
test
cs
in
jo
jmp
jbe
into
subl
in
aaa
or
push
icebp
mov
div
mov
fwait
lret
xchg
fcomip
call
fs
mov
ret
outsl
cmp
add
add
loope
dec
fildll
incl
and
push
mov
push
vmovaps
stos
pop
xchg
or
cmp
ficoml
lcall
cld
or
vmwrite
jae
mov
xchg
xchg
insb
pop
fstpl
lret
jmp
stos
jecxz
fwait
mov
test
sub
outsl
shl
sbbb
decl
fimuls
xchg
dec
cmp
faddp
cmpsb
stos
push
add
jg
pushf
sbb
fcompl
outsl
mov
dec
mov
cmp
stos
cli
pop
cmp
lock
lcall
movsl
imul
mov
shrb
pusha
push
in
repz
lahf
xlat
lcall
jecxz
push
sbb
mov
sub
inc
dec
xchg
lock
decl
jle
dec
push
pop
xchg
or
mov
cmp
pop
jge
call
sub
sbb
cmp
pop
shrl
test
loopne
or
dec
int3
sbb
or
icebp
repnz
je
xchg
iret
decl
mov
mov
mov
or
xchg
and
pop
ja
call
stc
xchg
push
xor
push
loop
cld
nop
pop
dec
mov
leave
into
mov
dec
andb
fmul
xchg
mov
pushl
sti
xchg
mov
decb
jne
aas
xchg
push
sahf
aad
stos
pop
pusha
lret
lea
out
imul
mov
fadds
shlb
push
sbb
aas
es
jmp
pushl
lods
in
sahf
jbe
and
lods
cli
mov
jecxz
push
test
push
sbb
fidivl
pushl
addl
jne
pop
xchg
lcall
sbb
insl
mov
dec
decl
aam
mov
cmp
enter
inc
mov
mov
es
roll
sub
call
inc
fcoml
cmp
mov
clc
mov
mov
xchg
dec
jp
lcall
jecxz
nop
fs
and
bound
xor
aaa
test
xchg
lcall
sub
jle
rcrl
scas
mov
mov
in
and
pop
fcoms
dec
in
mov
hlt
test
xchg
xchg
pusha
pop
add
push
xchg
sti
imul
call
aaa
cmp
jbe
int
add
nop
sar
es
int3
in
insl
ud0
pushl
shrb
mov
test
in
faddl
mov
mov
xlat
cs
cmp
fcomip
and
cmp
xor
int
jbe
pushl
and
insl
loop
mov
or
cmp
stos
movsb
in
adc
mov
inc
cmp
inc
cmp
xlat
fdivr
pushf
pushf
mov
push
sbb
test
dec
xchg
sbb
mov
je
jo
pop
int
mov
nop
and
aam
shlb
data16
cmpsl
xchg
jmp
or
test
mov
out
pop
mov
add
pop
xchg
call
sbb
lea
sar
jmp
stos
mov
in
dec
aad
repz
mov
cs
cld
push
pop
or
and
add
mov
ljmp
pop
dec
int
outsb
mov
cmp
xor
mull
fadds
sbb
lcall
mov
inc
mov
call
out
jl
xchg
push
jne
test
ret
movsb
push
lcall
jns
push
insl
push
or
fbstp
mov
xchg
mov
pop
cmp
dec
jae
mov
insb
pop
ret
les
pop
out
push
outsl
in
enter
sub
or
mov
inc
pop
cmpb
push
shl
lea
cmp
and
inc
das
sbb
lret
mov
jmp
mov
cs
out
pop
cld
outsl
in
fistl
data16
adcb
mov
adc
sub
pushl
dec
push
shlb
push
in
xchg
mov
movsb
or
xor
push
jl
test
xchg
lds
jmp
inc
es
loop
dec
addr16
push
sbb
stos
mov
les
faddl
incl
push
xor
outsl
sub
sub
push
into
xor
mov
dec
inc
inc
or
decl
inc
sub
xchg
mov
bnd
dec
ret
repz
andb
sbb
jmp
push
pushl
xor
xor
adc
mov
imul
jnp
jle
mov
sub
pop
hlt
jmp
aad
outsb
pusha
popf
outsb
cmc
andl
rolb
xchg
and
stos
shlb
fs
mov
stos
inc
push
mov
push
or
ffreep
es
in
js
fldt
repz
faddl
jl
inc
dec
push
sbb
and
inc
jmp
push
pop
cmpsb
aas
jo
pop
inc
fisubs
cmp
cmp
lcall
xchg
mov
adc
shll
dec
cmc
in
fldenv
outsl
ja
scas
jp
push
sbb
add
pop
hlt
lea
mov
fnsave
fdivrl
xor
insb
insb
mov
dec
sar
filds
andl
mov
jge
push
addr16
jl
add
sarb
int
push
data16
pushf
lcall
cltd
in
stc
jmp
shll
add
lret
inc
pop
or
xchg
mov
mov
mov
fildll
sbb
fmuls
cmp
jmp
mov
dec
inc
js
sbb
fimuls
call
xchg
jo
clc
lcall
les
adc
ficompl
pop
jg
movsl
jmp
lods
adc
jmp
sub
jmp
dec
xchg
sub
or
lret
mov
fisubrl
mov
cmpb
or
push
pop
imul
mov
out
cli
add
add
daa
sub
leave
mov
mov
adc
mov
ljmp
push
sub
dec
nop
test
sbb
decl
inc
push
fbstp
or
cwtl
xlat
push
out
add
jno
iret
repz
or
dec
jl
in
cmpl
filds
int
int3
add
xchg
push
sbb
mov
mov
leave
add
adc
stos
enter
mov
inc
jae,pt
dec
decl
xchg
ret
jl
enter
push
test
scas
repnz
adc
call
jmp
mov
add
dec
loop
pop
pop
cmp
xchg
xor
enter
adc
xor
incl
push
ss
and
mov
sti
inc
stos
pop
ljmp
iret
mov
sahf
inc
xchg
mov
cmp
push
jbe
xchg
lret
sub
or
xor
in
and
orl
push
jae
outsl
pop
je
loopne
aaa
cld
jo
xor
dec
shll
fiaddl
add
test
cli
mov
out
enter
cvtpi2ps
dec
mov
mov
test
out
sub
adc
xor
mov
xlat
jg
sbb
xor
sub
push
hlt
sub
xchg
in
sti
push
xchg
insl
push
mov
aam
dec
aad
orl
add
in
leave
xchg
mov
add
fucomp
icebp
imul
fdivl
fstpl
inc
pop
mov
push
pop
popa
scas
movsl
mov
xor
sarl
jge
movsl
mov
call
add
add
add
aas
xchg
adc
pop
testl
jmp
scas
or
negb
add
sbb
leave
rcrl
jmp
pop
call
filds
inc
mov
scas
ret
add
aaa
or
jno
xor
jg
mov
jne
pop
cltd
addr16
pop
mov
test
inc
fnstcw
fbld
push
dec
xchg
pop
inc
shr
fmuls
xchg
fsubrl
add
xchg
sub
cmpsb
jecxz
test
movsb
pushf
mov
dec
xorb
ret
incl
aam
lds
adc
ljmp
je
bound
push
inc
or
js
xor
push
les
push
sub
insl
pushl
or
add
cmp
mov
imul
stc
imul
rorl
hlt
cmovne
push
in
mov
sbb
sbb
push
dec
or
stos
mov
cmc
insl
mov
cltd
lcall
dec
std
lds
scas
pcmpgtw
fisttps
idivb
push
and
decl
in
add
outsb
xchg
mov
push
shl
fstps
or
rcrb
or
or
pop
adc
incb
mov
rclb
push
stos
vmptrst
mov
fcmovnu
and
movsl
cmpsl
pop
lods
push
mov
mov
add
push
shr
cmpsb
pop
jg
cmp
mov
mov
fcomp
cmp
fists
mov
call
std
cld
ds
xchg
dec
dec
shl
divl
fistpl
jmp
ret
xchg
repz
in
fisubrs
push
daa
lea
nop
jns
dec
rcrb
bound
call
fisttpl
inc
ror
inc
mov
xor
fxch
icebp
add
xor
les
jo
mov
test
xor
xchg
push
js
adc
bound
lods
adcb
movl
add
pop
mov
inc
mov
daa
mov
ljmp
loope
cltd
aas
jp
popa
cs
ret
pushl
jmp
pop
push
push
xor
in
sbb
ss
js
push
adc
lcall
call
or
popa
fsubr
mov
clc
std
cmc
imul
mov
mov
or
pop
ret
mov
pop
testb
pop
inc
mov
jmp
jae
std
or
jno
xchg
mov
std
adc
imul
adc
orb
jg
lcall
pusha
dec
dec
mov
xor
neg
mov
dec
cs
aam
mov
and
add
pop
jmp
repz
adc
outsl
xchg
ja
dec
and
dec
scas
in
test
add
cmp
mov
add
or
ja
sbb
sbb
dec
outsb
push
gs
jle
frstor
xchg
dec
mov
sahf
cmp
jbe
xchg
sahf
fdivrs
jp
mov
xor
lock
adc
pop
hlt
lcall
and
into
mov
andl
dec
movl
dec
pop
aad
repnz
pop
cmp
in
add
mov
inc
stc
int3
xchg
mov
cmc
clc
push
movsb
movsl
mov
mov
inc
repz
cmp
ret
aaa
sbbl
decl
jnp
mull
clc
or
scas
jns
pop
pop
cmp
pushl
js
stos
aad
lahf
movsl
xor
cwtl
push
push
shlb
jle
dec
mov
jbe
stc
jg
decl
shlb
xchg
inc
dec
mov
sahf
mov
insl
loop
cmp
xchg
loopne
ljmp
add
outsb
xchg
jae
subb
cltd
and
test
test
test
outsb
mov
pop
inc
das
mov
in
mov
lock
ss
jo
cmp
leave
ss
cltd
adc
dec
fcoms
insb
fwait
je
inc
out
cmp
inc
sbb
insl
popf
out
mov
stc
imul
ljmp
sbb
repnz
cmp
xchg
pop
test
xchg
mov
pop
adc
cmpsb
nop
xor
or
and
and
popa
jbe
push
sbb
inc
inc
orl
pop
add
xchg
fidivrl
jo
adc
or
lcall
dec
data16
mov
andb
mov
pop
jle
ss
sbb
addl
jle
shll
or
movsl
sub
xor
sbb
and
xor
insl
push
dec
cltd
fcomip
cmp
rorl
xchg
repz
xchg
push
cmc
fidivrs
sbb
dec
xor
pusha
push
sub
hlt
outsl
mov
pop
mov
stc
and
test
push
push
add
jg
mov
sbb
andl
comiss
into
add
dec
jne
lcall
mov
insl
sahf
stos
in
cs
stc
or
mov
or
dec
negb
and
push
insl
cli
inc
push
sbbl
test
nop
jl
xchg
ljmp
add
push
xchg
sbb
push
sub
ss
iret
aam
pop
pop
mov
pushl
out
dec
mov
inc
sub
push
xchg
addr16
mov
push
mov
push
cld
arpl
xchg
jne
pop
cmpsb
cmp
xor
mov
or
incl
call
imull
sub
movsl
pop
lcall
mov
jmp
push
jle
ja
sbb
call
movsl
faddl
test
mov
lret
jns
lcall
sbb
mov
loop
push
es
sub
clc
mov
jg
jo
sarl
adc
jecxz
shl
adc
lcall
pushf
loope
adc
push
ret
or
dec
cmpb
xchg
fidivrs
lahf
mov
xor
dec
xchg
mov
pop
jbe
popf
or
cli
clc
call
pop
pushl
jge
push
ret
xor
cmp
fst
and
push
enter
aam
jmp
mov
call
sub
out
loop
cmp
adc
mov
scas
push
ficoms
sub
push
ss
jecxz
decl
inc
jbe
fs
lock
sti
int
fimull
outsl
fsubl
add
push
into
out
clc
mov
adc
jb
into
and
xchg
xchg
popf
mov
adc
or
mov
aad
repz
ljmp
test
out
mov
ljmp
push
ja
xchg
jg
sbb
cltd
pop
test
in
lret
push
ljmp
push
sbb
push
xor
stos
test
int
push
loope
inc
test
push
pushf
hlt
cmp
push
jo
add
mov
sub
aas
adc
daa
sub
stc
js
pushl
pop
fdivrs
popf
cs
daa
mov
xlat
lds
xchg
pop
out
xor
mov
add
ljmp
sub
cld
mov
roll
into
jns
inc
shlb
sbb
ja
sub
and
incl
mov
push
lea
or
adc
push
insl
cwtl
lock
dec
sbb
incb
mov
add
dec
pusha
push
lds
push
add
dec
push
in
cld
adc
xchg
decl
popa
adc
xor
cmp
or
xor
push
xchg
fdivrl
dec
cmpsl
sub
sahf
jo
call
pusha
lds
mov
out
push
mov
in
lret
dec
xchg
ret
inc
repz
std
adc
jo
sub
mov
mov
clc
test
sub
xchg
pop
mov
bound
ja
inc
mov
fcos
mov
es
and
sbb
loope
shlb
mov
packssdw
lcall
dec
sahf
xor
xchg
and
mov
push
pop
cmp
jae
and
jae
xchg
iret
or
ljmp
jecxz
pop
jnp
add
inc
popa
xorl
clc
sbb
popf
je
adc
adc
push
sub
ljmp
pop
mov
dec
in
jl
mov
mov
idivb
je
pop
hlt
mov
and
fisubs
push
mov
mov
xchg
lret
or
mov
adc
fldt
jecxz
add
push
jmp
or
or
fwait
jle
jmp
pop
test
mov
inc
cmp
mov
sbb
mov
ret
out
mov
repnz
mov
pop
jbe
push
cmp
scas
push
pop
or
push
ret
push
call
cmc
mov
ljmp
jb
mov
mov
popa
xchg
xchg
push
cs
insb
mov
push
mulb
add
xor
in
icebp
inc
cmpsl
jl
out
aas
out
shlb
add
bound
or
cmc
pushl
mov
pop
mov
sub
ljmp
cmp
outsb
fcmovb
call
push
out
gs
std
and
adcl
add
lret
sub
pushl
xchg
jle
xor
sahf
jge
cli
or
jnp
jle
dec
push
lcall
inc
es
jbe
or
xor
subb
add
push
dec
adc
push
xor
or
xlat
pusha
cmp
pop
icebp
inc
dec
popf
rorb
adc
pushl
xor
add
pop
cli
push
insb
push
aam
or
aaa
push
push
daa
in
push
mov
int
int
mov
or
pushl
mov
in
sbb
and
fistpll
adc
jb
sub
xor
xchg
in
pushl
imul
sbb
jb
xlat
push
lock
lret
mov
std
addl
pushl
mov
mov
lods
cmp
sbbl
decl
sbb
sbb
sub
movsb
jns
pop
inc
inc
push
int
dec
addb
pop
loope
inc
out
cs
data16
pop
fnsave
lds
add
mov
sub
mov
or
adc
push
js
das
push
insb
lcall
decl
push
loope
daa
xchg
sub
pop
mov
mov
scas
jae
ljmp
decl
sbb
sub
shlb
cmp
shll
incl
lds
and
push
es
js
jbe
mov
dec
mov
mov
add
icebp
movsb
adc
leave
out
call
enter
hlt
jnp
or
jg
out
jmp
mov
neg
jle
adc
cmpsl
cmp
aad
push
lcall
les
enter
das
adcb
cld
pop
daa
xchg
inc
push
or
push
mov
sbb
add
subb
add
test
lods
lret
outsb
mov
cwtl
add
pusha
mov
ljmp
add
jg
clc
xchg
loop
fwait
pushf
fimull
in
into
imul
xchg
loope
jmp
ss
push
cmc
fists
jbe
sbb
sub
adc
pushf
cwtl
or
mov
sub
jg
shlb
fstp
add
test
cmp
hlt
push
adc
test
lcall
cmp
mov
pop
push
push
add
sbb
andb
adc
cmc
or
pop
xchg
hlt
or
cmp
pop
push
cld
lret
and
out
dec
mov
jmp
mov
jae
out
mov
jp
jmp
std
adc
in
cmp
loop
sarl
jmp
xor
aad
push
dec
xchg
pop
jge
out
outsb
scas
sub
and
jne
dec
test
ljmp
pop
clc
cmp
fadd
sbb
add
js
and
inc
or
sub
ljmp
inc
dec
sbb
das
xchg
sbb
pop
dec
mov
and
ljmp
in
jmp
cli
cwtl
xor
xor
fdivl
xor
jns
scas
jmp
jp
xchg
decl
push
addr16
or
sub
data16
incl
jp
sbb
test
dec
mov
fisttpll
inc
aad
cmc
cmp
dec
cld
fcomip
lcall
lcall
adc
hlt
xchg
jg
pushl
xchg
cmp
repz
cld
notb
in
int3
pusha
mov
rep
movl
and
jmp
mov
dec
sahf
out
adc
or
popa
push
jb
inc
arpl
jmp
daa
mov
xchg
fldenv
dec
jae
pop
sbb
mov
and
call
test
or
sbb
out
adc
movl
jnp
push
cld
dec
stc
popf
scas
leave
sub
dec
out
sub
fcmovnu
inc
mov
push
repnz
lret
out
mov
gs
fwait
daa
clc
mov
jmp
pop
sub
pop
cmp
fs
push
js
inc
push
lock
mov
or
aam
ljmp
mov
imul
pop
lods
insb
jge
push
in
jnp
insb
fisttpl
out
dec
mov
or
incl
in
andb
mov
inc
push
adc
inc
push
loopne
or
cwtl
push
adc
ficoms
test
xor
mov
fnsave
dec
sbb
nop
add
out
cmp
test
and
bound
lcall
jmp
fistpll
ja
cltd
and
test
cmpsb
fdiv
sub
xor
js
in
lock
push
dec
lcall
adcb
ss
out
outsl
mov
cmc
std
cld
push
loop
lods
test
add
and
test
cmpsl
pop
movsb
or
inc
lods
cwtl
int3
jmp
jle
mov
js
es
sti
mov
or
fldcw
notb
ljmp
fidivrs
in
outsl
leavew
scas
jecxz
daa
out
pop
loopne
int3
lods
pop
je
sti
hlt
or
fistpll
push
out
fsubr
mov
ret
repz
sbb
repz
in
popa
inc
int3
pop
das
jg
cmp
xor
sub
daa
mov
dec
jp
aad
cmp
fcomip
jmp
negl
xchg
inc
mov
cmc
lock
ljmp
push
cmpsb
fistpll
loopne
rorl
imul
xchg
adc
insl
iret
test
push
jns
call
or
mov
xchg
scas
lret
pop
dec
leave
in
mov
pusha
mov
loope
call
lea
sbb
push
cmc
mov
cmpsb
add
std
sbb
test
cld
out
lcall
loop
sbb
dec
xor
or
fsubs
push
filds
mov
push
rcrl
ret
inc
jb
shll
stos
mov
mov
adc
fdivrs
inc
mov
mov
outsb
js
push
int
int
ret
incl
aad
je
pop
popf
rclb
inc
or
dec
fmulp
mov
aam
and
mov
testb
mov
rorb
add
mov
cli
aaa
repnz
push
js
in
ljmp
int3
mov
inc
and
fnstcw
jno
scas
sbb
mov
jp
fldenv
shld
sahf
imul
cmp
pop
decl
push
icebp
shll
xchg
lret
movsl
ss
dec
or
add
jo
xchg
jmp
incl
leave
in
sub
aad
adcl
iret
loope
repz
fildll
sarl
add
add
dec
movsl
lods
cmp
mov
jmp
js
sahf
sbb
outsl
les
adc
mov
sti
adc
pop
push
dec
xchg
stc
and
jge,pn
add
or
dec
test
mov
aas
out
in
push
pusha
lods
mov
decl
or
mov
mov
and
jo
lods
lock
mov
int3
mov
push
hlt
arpl
scas
repnz
sub
scas
fwait
das
and
loop
ljmp
iret
rol
push
xchg
loope
push
sbb
pop
cmp
xchg
in
ljmp
nop
adc
dec
inc
lret
or
outsb
jno
jmp
sub
dec
pop
test
cmp
scas
xor
daa
or
and
xor
pusha
das
std
insl
push
sbb
cld
repnz
sbb
add
nop
push
popf
push
fisubrs
mov
popa
js
subl
std
inc
ds
sbb
sti
ljmp
fiaddl
jb
outsl
sub
push
std
push
mov
sub
cmp
xchg
jg
inc
shrb
pop
mov
popa
fisubl
jl
leave
xor
jmp
insl
jle
fsubr
subl
test
cmp
incl
adcl
cmp
cmpb
xor
or
lods
pushl
pop
sbbl
xor
andl
loopne
cmp
xrelease
jge
jg
sub
xchg
sbb
ret
jae
push
aad
imul
pop
movsl
jg
adc
outsl
stos
push
cli
addb
dec
js
jp,pt
in
scas
ja
sbb
cmp
lahf
outsl
arpl
inc
push
mul
pushf
jno
lds
dec
mov
mov
rcl
mov
in
clc
incl
mov
cmp
cmp
pushw
pushf
out
ror
stos
popf
ljmp
xchg
enter
pmaxsw
xchg
or
cmp
jle
lcall
or
push
lea
jmp
pop
movswl
test
xchg
sbb
jno
shll
or
out
mov
dec
jo
ret
hlt
fidivs
add
jae
imul
decl
add
sti
sub
pushf
adc
fldcw
rcl
std
notb
ljmp
push
clc
aad
outsb
stc
push
insl
aas
dec
aam
xchg
inc
clc
mov
outsl
mov
inc
xchg
jmp
cmp
dec
inc
pop
stos
lret
lods
sub
sti
pop
mov
call
popa
sbb
sbb
outsb
cmp
inc
ret
sti
push
pop
out
outsl
jecxz
test
mov
aam
call
inc
jle
mov
ret
cmpsb
xchg
cs
dec
mov
mov
jecxz
test
mov
xor
push
fldcw
testb
or
aaa
lds
adc
push
push
out
sbb
or
sarb
inc
cltd
lods
cmp
inc
xorl
fisubs
int3
mov
mov
mov
xor
jmp
stos
test
sarb
test
jno
jns
adc
sbb
mov
or
in
pushl
subb
mov
xchg
xchg
cld
inc
in
and
add
sarl
jb
pop
sbb
leave
sbb
repz
out
incl
jl
ja
negb
ret
push
jl
push
in
add
cld
fsubrl
push
lret
ja
lods
nop
outsb
xorl
ljmp
test
or
cmpl
jne
xlat
inc
sbb
cmpsl
mov
ljmp
pushf
fwait
ljmp
outsl
aaa
or
mov
or
mov
lock
call
xor
arpl
dec
fstpt
int3
js
rorb
dec
sbb
sub
mov
mov
or
mov
push
sub
stos
xchg
add
jg
incl
jecxz
cmp
je
les
sub
add
fcos
incl
repnz
rcrb
sub
sbb
je
aad
jmp
mov
jb
addr16
insb
jne
or
lock
and
jle
std
movsb
mov
fstl
movb
mov
lds
imul
mov
loope
scas
ljmp
les
mov
aam
jbe
orl
leave
lea
iret
lock
jmp
jp
push
mov
pop
add
cs
cmp
loopne
pop
and
out
decl
mov
mov
insl
loopne
adc
push
aad
testb
inc
lods
inc
xchg
xor
mov
push
call
or
push
nop
insl
cs
cwtl
or
psrad
clc
pushl
sub
cwtl
mov
jg
dec
mov
int
push
dec
scas
test
pop
inc
mov
dec
aas
jp
faddl
inc
faddl
mov
in
hlt
push
cmp
lods
jbe
push
xchg
imul
push
rcrl
and
lcall
add
or
pusha
mov
add
push
imul
mov
adc
ficoms
xor
adc
pop
aad
ljmp
nop
mov
adc
jae
das
jnp
gs
pushl
mov
push
and
aam
daa
ljmp
adc
inc
pop
push
inc
push
sbb
xchg
js
add
pop
aaa
lods
dec
ja
xchg
imul
and
jb
sarb
push
push
fsubrl
sbb
addr16
push
add
mov
inc
ret
outsb
jg
mov
inc
jbe
lods
jb
jmp
xor
sbb
mov
add
imul
std
cmp
call
repz
stos
jmp
pop
inc
sbb
addb
cmp
subl
or
stc
push
decl
sbb
jp
idivl
pusha
je
jne
js
sub
aas
addb
js
mov
ljmp
call
loope
inc
dec
push
sbb
and
mov
mov
ljmp
rolb
pop
xor
ss
add
sbb
xchg
dec
aas
mov
lcall
pop
repz
cmpb
in
sub
inc
loop
mov
std
outsb
sub
ret
mov
clc
mov
mov
push
lods
es
pop
mov
cmp
sti
mov
or
pop
jb
lret
call
cltd
inc
dec
es
sub
mov
rcr
call
fstpt
mov
pop
ljmp
ljmp
mov
imul
scas
adc
call
or
sub
push
popa
sub
dec
sub
or
dec
enter
adc
pushl
jmp
lcall
aad
inc
pop
pushf
shlb
shrb
scas
ja
clc
mov
jmp
shlb
adc
stos
clc
push
add
jbe
lret
pop
jne
loope
dec
ret
lcall
xor
call
int3
xchg
es
mov
rcll
push
dec
mov
sti
or
loopew
adc
bsr
or
xor
adc
inc
mov
aaa
stc
cli
jno
mov
jmp
fwait
das
sbb
mov
jnp
movb
bound
scas
or
dec
xor
out
pop
ljmp
test
adc
add
jne
gs
sahf
out
or
fcmovnbe
call
pop
ret
adc
fdivr
jmp
shr
sarl
cmpsl
sbb
leave
arpl
sar
call
or
or
lret
pop
adc
adc
cs
jbe
enter
mov
outsl
les
jo
xor
in
out
mov
lock
int3
ljmp
or
shrb
pop
mov
inc
leave
je
dec
out
add
jl
unpcklps
jbe
jb
push
lret
shll
call
push
mov
lret
cmp
mov
mov
incl
lahf
jge
pop
leave
stc
push
xor
scas
dec
jg
mov
cld
sub
mov
pushl
cs
sub
fs
push
mov
xchg
gs
shll
dec
pop
lret
lea
jns
loop
adc
std
mov
inc
xor
rorl
nop
aaa
dec
sbb
sub
add
ret
std
jno
fisubs
mov
call
add
add
jg
pop
add
mov
lods
jo
out
sub
mov
lcall
jnp
out
mov
dec
or
mov
xchg
pop
push
mov
sbb
stc
jge
xchg
mov
inc
insl
push
bnd
aad
cmp
jnp
sbb
insl
out
in
push
mov
or
add
fs
mov
out
movsb
mov
shlb
int3
lcall
out
xor
lcall
pop
mov
sub
xchg
pop
cmc
ss
push
cwtl
out
xchg
jl
mov
push
sti
jmp
ljmp
orl
mov
sub
jge
pop
add
jb
loop
lret
cmpsl
push
dec
lret
mov
adcl
dec
mov
push
lods
cmp
cli
mov
xchg
in
decl
jne
sbb
cmpsl
daa
or
loopne
mov
scas
fnstcw
ljmp
daa
mov
hlt
outsl
cmpsb
inc
aas
xor
pop
inc
andb
xchg
aam
daa
add
jecxz
stc
test
add
xchg
out
cmp
fbstp
xchg
adc
pop
dec
sub
sbb
test
mov
daa
ds
call
loopne
jmp
inc
pusha
mov
add
sub
sub
outsl
sbb
and
ljmp
out
or
xchg
int
push
jns
out
push
jge
lods
push
loopne
adc
addl
loope
sbb
addr16
mov
sbb
mov
test
fcmovnbe
pushl
test
cmp
add
dec
or
repnz
pushf
add
movsl
xor
jno
mov
cmpsl
dec
jg
pop
xchg
ljmp
incl
sti
imul
mov
mov
pushf
adc
xor
push
jp
mov
mov
adcb
jg
mov
movsb
enter
out
pushl
fcmovb
pop
xorl
out
leave
jne
dec
mov
add
nop
or
jg
ljmp
dec
xchg
int3
lret
leave
test
std
fs
enter
and
mov
decl
and
pop
push
push
cmpsl
jg
xchg
iret
stc
and
fidivrs
pop
or
clc
cld
pop
insl
push
or
js
loope
arpl
mov
lcall
jle
cltd
or
movsl
aaa
mov
push
roll
lds
aam
scas
mov
adc
pushl
scas
xor
sub
rcrb
xchg
xchg
cs
pop
pop
sbb
addl
xchg
or
popf
cld
fnsave
dec
pop
cmp
xlat
cmpsb
mov
sbbb
xchg
sub
hlt
xor
addr16
or
mov
xchg
jl
movsb
mov
push
sbb
and
mov
dec
mov
pop
or
lcall
dec
test
fstl
mov
add
push
aad
outsl
fidivrs
lcall
lock
ljmp
jmp
mov
popf
xlat
xlat
lods
repnz
lods
xor
incl
inc
sub
pop
ret
mov
push
movsl
popl
dec
sbb
sbb
call
repnz
jo
js
testb
fadds
jp
xchg
add
dec
cwtl
inc
jno
incl
std
or
andl
push
shll
add
test
pusha
loopne
pop
test
mov
jne
repz
pop
adc
insl
adc
imul
mov
adc
test
jns
movsb
or
out
cli
dec
push
xchg
cs
xchg
js
or
lret
pop
enter
xlat
movntq
out
dec
ljmp
dec
mov
out
jns
push
in
and
jbe
inc
and
jae
scas
mov
jg
xchg
sarb
stc
dec
ljmp
mov
hlt
xor
lcall
pop
push
test
jmp
push
stc
btc
jmp
mov
or
and
incl
xor
cmp
mov
pop
sub
loopne
pop
ljmp
out
lcall
jmp
xchg
and
or
push
in
int3
loop
xlat
push
cmp
aam
sbb
dec
inc
dec
andl
or
cltd
movsb
sub
mov
out
pusha
test
nopl
fcmove
xlat
pop
inc
xchg
xchg
or
jnp
jecxz
jbe
cmp
xchg
inc
popf
daa
insl
dec
mov
cmp
sbb
jns
mov
lcall
xlat
pop
xorb
adc
mov
out
icebp
pop
mov
lock
jmp
and
loop
or
cmp
cltd
jmp
popa
aam
das
pushw
and
jmp
adc
icebp
addr16
push
inc
sbb
clc
xor
sahf
nop
mov
fcompl
and
inc
mov
cmp
mov
and
lcall
lcall
mov
iret
test
and
sbb
dec
stos
mov
push
int3
fisubrs
dec
push
out
mov
inc
cmc
lret
mov
adc
pop
cmc
mov
inc
mov
cltd
xor
dec
pop
mov
lcall
aad
xor
add
mov
jb
adc
push
loope
xchg
xor
mov
jl
cmp
out
pop
adc
loopne
mov
cmp
divb
xchg
dec
orb
pop
mov
inc
les
mov
jmp
lcall
dec
inc
bound
repnz
adc
stc
inc
mov
out
jecxz
jmp
decl
test
lock
inc
ret
ret
orb
lods
add
push
xchg
adc
or
dec
test
mov
fistpl
dec
pop
push
lahf
pop
or
inc
cmp
mov
mov
mov
inc
jl
dec
jp
mov
rorl
mov
scas
jl
ucomiss
orl
out
mov
lret
lcall
popf
fwait
push
pop
mov
das
sbb
lret
aam
out
dec
sub
add
jnp
jecxz
lret
jg
call
pusha
bound
mov
pushf
push
mov
in
incl
pop
pop
movsb
mov
addr16
mov
jo
imul
adc
or
pushl
rcl
negl
mov
enter
jmp
jecxz
int
push
mov
shl
scas
pusha
pop
sub
hlt
scas
sbb
adc
sti
lahf
cmp
scas
push
lcall
pushl
jle
or
cltd
add
in
push
shll
ja
clc
incl
in
xchg
popa
incb
xchg
ret
mov
jge
out
icebp
out
mov
jnp
ret
xchg
jp
gs
test
sub
jp,pt
mov
jmp
sbb
in
pop
sbb
mov
cli
out
cwtl
xchg
pop
gs
jno
inc
lock
dec
mov
xchg
jmp
mov
or
ds
cld
fsin
jl
inc
iret
dec
fmulp
xor
jns
jae
incl
sub
add
leave
movsl
pusha
add
ss
or
lret
mov
lret
jp
decl
xchg
mov
adc
jne
mov
xchg
aaa
mov
xchg
dec
lods
push
ja
push
inc
mov
data16
aam
fcmovbe
jle
fildll
cmp
int
add
mov
ljmp
pop
in
push
inc
sarl
popf
sub
add
imul
xor
inc
fistpl
inc
in
pop
repz
cmp
repz
inc
mov
mov
cmp
mov
pop
lock
jne
das
and
and
movsb
xor
lcall
lock
mov
decl
mov
aaa
inc
or
int3
leave
test
lock
lds
jmp
rorl
xchg
int
or
lcall
aad
cmp
mov
movsl
lea
add
cmp
fsubrl
decl
fmull
int3
cmc
fsubl
andb
dec
push
pop
jge
ss
push
fs
xor
pushl
into
pop
xchg
sub
push
movsb
push
cmp
or
aaa
ffree
inc
or
mov
push
popa
mov
subb
iret
dec
test
sahf
sar
enter
jg
data16
inc
cmp
movsl
lods
fidivl
clc
loope
rcl
jb
xor
iret
lret
adc
push
filds
orl
add
pop
jo
pushl
sbb
imul
xchg
xlat
gs
mov
dec
in
sar
lcall
jmp
mov
inc
inc
insb
mov
cli
fdivl
out
sti
mov
inc
mov
jmp
add
popf
bound
pop
adc
inc
fisttpl
mov
add
adc
in
push
rep
dec
das
pop
push
jno
cmp
cmpsl
inc
cmpsb
lcall
mov
pop
pop
call
xchg
dec
das
mov
popa
mov
mov
movsb
sub
clc
out
roll
iret
ret
es
lea
add
lds
stos
push
xchg
dec
decl
pop
inc
jmp
cwtd
popw
test
cmp
enter
shlb
mov
sar
ret
xor
and
jp
inc
dec
xchg
scas
ret
mov
pop
or
add
pop
push
jmp
push
popf
cli
ficompl
ljmp
shll
dec
insl
jns
popl
ljmp
scas
pop
xchg
int3
enter
push
outsl
jg
pushl
mov
mov
icebp
xorl
gs
ljmp
mov
and
mov
and
js
jle
das
jl
push
adc
imul
adc
jle
shlb
jg
lahf
and
mov
jo
xor
cwtl
sbb
out
xorl
add
decl
stos
mov
and
fxam
pop
das
jmp
jle
gs
pop
popa
sbb
fwait
pop
aam
imul
push
add
call
std
repz
xor
sbb
rorl
push
sti
inc
fldenv
pop
js
stos
or
lcall
sbb
cmpsb
scas
lods
mov
cmp
lret
repnz
lds
push
loope
test
and
ret
sub
movsl
pop
aaa
test
sbb
pop
aaa
dec
push
out
cmp
jge
in
out
sub
mov
ljmp
xor
adc
lock
push
pop
inc
into
adc
pop
inc
xchg
insb
jnp
or
inc
aad
std
dec
cmp
cld
push
cmp
inc
fldt
pop
repz
int
movsb
jb
pop
or
mov
push
pop
das
int
js
mov
sbb
leave
call
mov
ljmp
mov
jp
and
and
mov
pop
repnz
int3
daa
xor
sub
call
out
clc
enter
cwtl
nop
or
aas
cmpsb
dec
xor
xchg
int
stc
cmc
or
add
decl
adc
in
xor
cmp
in
sub
pop
fs
test
and
ds
jo
jp
into
pop
push
xchg
or
gs
imul
jmp
rclb
mov
lock
incl
inc
xor
lcall
inc
aaa
dec
sub
xchg
lea
jo
out
xchg
lcall
mov
inc
add
sbb
mov
or
aas
jl
or
insl
pop
fsts
call
adc
sti
xchg
sbb
inc
sbb
int
push
mov
iret
ss
jg
decl
fdivs
subb
popf
jne
inc
xor
adc
mov
in
pop
add
xor
pop
jns
sahf
push
in
sbb
or
push
loop
mov
lcall
stos
xchg
and
pop
dec
fucom
jl
nop
cld
pop
mov
ljmp
jb
fs
pop
push
lods
aad
and
jae
idivb
inc
adc
push
mov
incl
fmull
daa
sub
and
mov
jns
and
push
cld
pushl
jl
into
test
push
push
sbb
jecxz
aam
jmp
popl
xchg
jno
mov
cmp
notl
push
in
push
jmp
lret
das
icebp
cmp
sub
shll
dec
fisubrl
vpcmpeqb
inc
sub
sar
lock
add
aas
jns
icebp
lcall
inc
dec
or
outsb
and
int3
ljmp
add
std
aas
adc
fistps
aad
mov
and
pusha
dec
jecxz
imulb
add
pop
xchg
cmp
out
adc
xor
and
add
mov
sti
jno
ret
call
inc
dec
push
in
dec
and
cld
aas
or
sub
push
imul
jl
jmp
cmp
inc
in
jp
stos
jo
stos
cld
adc
lds
mov
xor
and
jg
aas
mov
mov
ret
std
repnz
mov
push
mov
cmp
xchg
pushf
push
inc
xchg
stc
test
or
inc
jmp
or
sub
mov
push
push
jmp
jmp
cmpl
sub
fidivrs
popf
pop
out
cmp
fstpt
cli
pcmpeqd
in
xchg
insl
jl
fdiv
ja
push
stos
mov
xor
outsl
lcall
push
lret
les
in
imul
sub
cld
dec
rcll
ss
es
mov
fildll
adc
and
not
les
and
push
inc
xor
inc
in
adc
leave
rolb
js
nop
jno
push
mov
mov
stc
lock
pop
loopne
fimull
aam
fcmovnu
lods
out
inc
jmp
mov
cmp
pushl
out
mov
psubb
and
push
xchg
push
xor
jae
lret
push
mov
lahf
aaa
inc
lcall
add
push
xchg
dec
bound
in
ja,pt
add
pushl
shl
mov
aas
push
jno
cld
cmp
mov
insl
mov
decl
repnz
mov
stos
lcall
fisttps
call
sub
xchg
scas
xchg
jae
jg
mulb
adc
xchg
xchg
pop
or
cltd
cmp
ret
pushl
pop
add
test
push
pop
pop
and
mov
out
sbb
iret
push
shlb
call
aas
or
sub
push
ret
sub
lahf
or
std
call
nop
decl
jns
mov
mov
dec
jns
sub
cmpsl
in
outsl
adc
and
out
cli
negl
adc
stos
xchg
push
out
push
cmpb
enter
jle
lahf
sub
mov
or
push
mov
call
flds
jbe
mov
mov
aaa
push
std
incl
data16
aad
xor
ret
outsl
sahf
lods
xchg
jns
cs
jmp
mov
dec
push
pusha
add
fwait
test
cwtl
in
lcall
jb
xchg
sub
fninit
loope
pop
mov
push
pop
dec
push
daa
or
outsb
lods
sub
decl
out
int
int
inc
mov
mov
mov
cld
lds
push
fisubs
adc
push
or
xchg
subb
sub
cmc
inc
ja
ljmp
out
fwait
cmpb
add
pop
mov
ljmp
sbb
add
std
mov
arpl
cmp
das
mov
mov
adc
lcall
ret
out
mov
test
jl
call
or
xchg
lods
pop
std
inc
fiadds
addr16
cli
mov
int3
jns
loop
sub
lcall
jecxz
loope
lods
daa
push
pop
fdivs
in
in
icebp
test
lret
mov
loopne
lret
ljmp
sbb
push
mov
xchg
jl
js
int
ret
mov
lods
mov
or
jmp
mov
rorb
mov
and
stos
stos
repz
loopne
loopne
loop
add
pop
add
xchg
xchg
mov
ds
jle
fdivr
jne
repnz
incl
lea
dec
pop
shr
je
scas
push
fs
push
push
inc
pop
sarb
sahf
es
jmp
lds
inc
mov
jecxz
in
pop
out
push
sbb
adc
in
add
jmp
pop
hlt
cmp
sub
decl
fstps
roll
mov
cmp
mov
jnp
jmp
add
std
in
push
and
fsub
mov
pop
jne
jae
mov
movsl
push
insb
cli
dec
aam
stos
call
std
incl
sub
lods
cmp
sub
cld
mov
les
or
mov
mov
scas
jne
fnstsw
cmpl
adc
negl
pop
jo
sbb
pushl
ror
sti
addr16
inc
inc
dec
insb
fdivrl
inc
push
les
outsb
movsl
loope
sub
or
cmc
sub
pop
movnti
sar
in
pushl
mov
mov
ret
xchg
push
enter
mov
jg
les
jo
lahf
push
mov
sahf
out
hlt
adc
fcoms
xchg
jbe
mov
lcall
mov
rcrl
push
fisttpll
popa
ljmp
jle
dec
pop
adcl
mov
daa
inc
jno
out
jo
sbb
daa
idivb
jo
out
pop
or
lock
pusha
jmp
sbb
sub
pusha
mov
xor
push
mov
decl
jno
xchg
dec
out
push
xor
inc
addr16
jo
cld
mov
lcall
incl
call
sbb
jg
pop
hlt
dec
push
push
repz
clc
and
add
push
arpl
and
push
mov
dec
sahf
push
xchg
add
bound
jbe
dec
call
sti
sub
and
inc
shrl
mov
xchg
push
sbb
fcomip
icebp
push
cld
data16
sbb
inc
adc
out
xchg
push
loopne
cwtl
jl
cli
lcall
scas
loopne
scas
lea
jle
mov
mov
mov
xchg
fcmovne
out
cmp
ljmp
cmp
je
out
pop
push
out
mov
mov
stos
sub
sbb
dec
stos
dec
push
in
mov
nop
lret
push
adc
sti
push
mov
ret
popf
popw
cli
mov
loop
mov
fistpll
nop
mov
and
mov
dec
ljmp
aaa
test
mov
dec
lock
mov
cmp
movsl
ror
sub
sahf
push
cli
adc
xor
in
add
aad
cmpsl
cld
xor
mov
add
mov
cld
decl
pop
mov
and
dec
xor
and
mov
pushf
dec
sub
sbb
cmpsl
add
mov
jg
push
mov
push
stos
clc
jb
lods
iret
fildl
xlat
ja
add
decl
cltd
adc
in
jno
sub
stc
mov
fwait
mov
jne
pop
cmpsb
mov
xchg
mov
mov
cld
std
jmp
inc
cltd
jle
aaa
mov
les
outsl
add
inc
push
sarl
jns
pop
jb
xchg
cmpsl
sbb
inc
popw
sub
adc
mov
add
les
test
xchg
ljmp
jns
aas
dec
push
sarb
ss
cmp
in
js
sub
jp
mov
mov
pushf
ljmp
fiaddl
push
repnz
add
ljmp
mov
icebp
or
call
cld
aad
out
aam
cmpsl
cmp
mov
cld
popf
mov
or
mov
icebp
lcall
cmpsb
xor
repz
cmp
test
fists
mov
jmp
cltd
pop
and
pushf
mov
cwtl
pop
leave
test
aad
dec
faddp
sbb
mov
push
test
sub
add
xchg
call
mov
je
stos
sub
fistpll
fwait
cs
call
gs
test
and
jmp
mov
sahf
or
sbb
lea
add
int3
mov
ds
incl
mov
sahf
lods
and
data16
inc
nop
mov
pusha
rcrl
mov
jl,pn
enter
cli
sub
fwait
mov
shr
push
jl
mull
mov
scas
inc
jmp
xchg
lods
xor
jmp
dec
sbb
sbb
jl
add
addr16
sbb
shlb
sbb
ljmp
aad
in
fisubl
test
mov
xchg
cmp
mov
xor
xorl
pop
cmp
pushl
daa
push
jmp
sub
fwait
or
pop
jecxz
fpatan
cmpsl
adc
lcall
xchg
push
jp
daa
cmc
ret
cmp
mov
sub
mov
lcall
movzbl
add
test
mov
fs
ret
fcomip
decl
xor
xor
flds
mov
aaa
xchg
mov
hlt
testb
incl
addr16
ds
jae
addl
not
lret
xor
pushf
sub
cmc
decl
daa
outsl
mov
sti
sti
lods
cli
push
call
aaa
or
sbb
pop
inc
mov
mov
loop
es
and
into
in
push
push
loop
xchg
mov
test
adc
mov
gs
cmp
cmpsb
imull
ror
pop
nopl
dec
xchg
jle
idivb
mov
mov
pushl
dec
mov
test
adc
in
inc
jl
push
inc
loop
decb
mov
cmpsb
mov
mov
cmpsl
popf
iret
dec
insb
mov
xorl
decl
or
push
mov
cmp
pop
pusha
sti
xchg
inc
pop
stos
inc
insb
xor
lahf
pop
stc
jb
mul
fstps
jp
xor
nop
lret
mov
stc
inc
mov
icebp
pushl
ror
inc
add
sti
sar
int
xor
into
je
std
xor
add
inc
sbb
mov
fildll
mov
std
repnz
std
nop
cmp
decl
ds
add
sbb
scas
push
out
jne
lret
imul
icebp
decl
lock
add
add
hlt
jp
xor
lea
int3
scas
xchg
js
jg
sti
std
rorb
lcall
clc
movsl
mov
sbb
cmp
call
repz
sub
popa
popa
in
and
push
lahf
cmpsb
out
push
adc
inc
jmp
or
stc
sbb
in
cli
test
mov
or
push
movsl
or
push
jmp
jb
cmp
sbb
fs
mov
nop
out
jecxz
jae
inc
fdivr
incl
xor
pop
xlat
adc
sbb
mov
adc
mov
pop
mov
jbe
cmp
sub
add
dec
jmp
or
push
mov
hlt
adc
or
pop
sub
incl
jnp
dec
xchg
jmp
xchg
fdivrl
xor
push
pushl
stc
mov
mov
clc
jb
lods
mov
scas
sub
out
je
mov
jl
mov
and
add
lcall
mov
clc
incl
or
in
aaa
lea
shl
push
mov
test
lcall
lahf
cmc
jo
dec
mov
mov
fcom
add
aas
int3
aas
ljmp
std
les
adc
sti
cmp
cli
int
inc
frstor
shlb
lock
push
jecxz
clc
xchg
mov
dec
hlt
imull
pushl
aas
mov
xor
dec
pop
or
lcall
push
jecxz
lret
std
lods
aam
sti
mov
incl
cmp
leave
sbb
aaa
and
in
in
insl
sub
lds
cmc
aaa
cld
inc
push
sahf
sbb
pop
jae
icebp
loope
mov
xor
ficoms
push
cmp
pop
int3
sbb
jp
inc
loopne
xchg
data16
xor
addb
jns
out
ret
or
fs
mov
lcall
mov
cmp
sbb
sub
add
add
stos
lret
scas
clc
dec
jg
shrl
icebp
cmp
xor
mov
dec
xchg
xchg
out
mov
inc
decl
jb
insb
pop
sbb
and
pushl
adc
add
addr16
lea
sbb
inc
sbb
cltd
into
jnp
incl
jmp
dec
sarb
jge
mov
insb
xor
cmp
outsl
mov
push
jg
fildl
fimuls
mov
movl
adcb
pop
add
jnp
pop
into
sti
dec
pop
and
std
push
inc
or
xchg
add
in
cmpsl
push
out
adc
push
sbb
test
dec
xchg
push
or
push
icebp
js
xchg
ljmp
sbb
jbe
call
push
cmc
jb
ret
out
mov
xchg
mov
imulb
sub
or
or
pushl
pop
dec
cmpl
ljmp
loop
jp
mov
inc
jnp
xchg
xor
shr
cmp
dec
iret
lea
mov
ret
loop
inc
shlb
inc
jno
dec
and
ljmp
incl
les
ret
nop
jecxz
and
jo
imul
cltd
jmp
bound
lods
add
mov
add
daa
xor
loope
lods
ljmp
cmc
cmc
pop
xchg
xor
push
dec
clc
in
sub
and
add
push
mov
dec
mov
sbb
jmp
inc
sbb
arpl
push
xorb
push
lea
mov
decl
jmp
out
inc
enter
scas
shll
cmpsl
mov
mov
or
mul
fidivs
xchg
stos
int
negb
testb
popa
jecxz
or
std
push
pop
popa
dec
mov
push
dec
cwtl
data16
push
stos
or
imul
cmp
shrb
jge
inc
lea
imul
push
xor
mov
and
lods
adc
xor
cltd
shrl
iret
aam
cmp
adc
add
sti
mov
stc
adc
lods
insb
mov
fidivl
movsl
xchg
lock
fiadds
ds
and
in
call
std
sti
inc
in
mov
push
mov
mov
mov
and
lds
inc
shlb
icebp
jg
mov
aam
inc
out
jo
mov
add
adc
arpl
pop
inc
roll
outsl
mov
mov
sbb
mov
repnz
cmp
mov
call
lods
mov
fidivl
les
dec
popf
lcall
dec
fiaddl
pop
mov
sbb
xor
mov
stos
div
fsubl
push
and
das
clc
call
jbe
fimuls
adc
pop
stos
mov
or
cmp
pushl
shrb
xor
lods
pop
adc
hlt
jg
jb
dec
in
dec
pop
jns
sub
pushl
es
push
pop
mov
repnz
or
jge
dec
lcall
incl
xchg
mov
stos
mov
or
cmpsl
gs
add
stos
jno
jno
xlat
sbb
jmp
in
in
in
ljmp
pop
loope
dec
mov
xor
cmp
or
add
push
mov
stos
pop
stc
and
xchg
push
loope
xchg
sbb
movsl
aas
cmp
cltd
jbe
mov
call
lret
jb
ljmp
mov
repnz
int3
jl
sub
jg
test
aam
xlat
gs
out
push
and
icebp
xchg
in
and
mov
pop
mov
or
ds
enter
and
jg
lcall
jmp
adc
movsb
sbb
das
test
loope
jmp
xchg
adcl
or
jmp
lcall
mov
jb
sbb
inc
jnp
mov
xor
mov
fsubs
cld
sarb
cmp
iret
nop
int3
fs
jmp
orb
mov
push
test
out
mov
into
ret
sub
js
call
mov
xchg
getsec
push
ja
mov
out
adc
dec
out
xor
jns
call
out
sub
je
icebp
and
pop
inc
mov
iret
loopne
test
mov
lock
pushl
cmpsb
ret
int3
adc
cmpsl
inc
dec
adc
mov
xchg
lcall
test
rorb
xchg
test
popa
adc
sub
pop
cwtl
loope
cmpsb
into
and
call
repz
mov
xor
jns
in
das
dec
arpl
dec
mov
pop
add
incl
cld
jae
test
in
int3
in
sub
jmp
and
mov
sbb
cmp
mov
inc
dec
mov
mov
ret
add
movsl
ja
fdivl
sbb
call
call
jge
hlt
fwait
inc
popf
xchg
je
pop
cmp
ss
mov
out
xor
sub
inc
lea
mov
gs
inc
iret
jae
push
adc
call
pushf
cmpsb
jo
add
or
xchg
mov
lret
mov
jmp
or
jl
sti
mov
inc
cmp
and
jg
sbb
xorl
or
fistl
jl
or
sti
pushl
scas
mov
jecxz
xchg
mov
push
xchg
aad
inc
push
xlat
jne
ljmp
or
sub
sbb
cli
jmp
lds
insl
xorl
test
pop
sub
add
imul
pop
pop
shlb
sbb
xor
dec
lds
ljmp
decl
mov
pop
jbe
enter
mov
ret
jo
addr16
jg
jmp
mov
xor
mov
add
push
loopne
or
mov
cmp
decl
fmul
mov
popa
cmp
mov
mov
sahf
cmc
sbb
pushl
or
pop
out
jl
mov
jmp
idivl
inc
mov
iret
xor
call
and
jp
test
test
xor
imul
push
aaa
mov
fcmove
mov
lods
aaa
rcl
roll
lahf
popa
sbb
push
insl
xchg
pop
popf
cs
cmc
jmp
ror
repnz
lcall
jmp
incl
push
je
aam
ljmp
dec
mov
scas
sub
jne
inc
cli
outsb
movsl
in
jmp
fnstenv
mov
test
sahf
mov
inc
out
cli
xor
repnz
stos
test
aas
rorl
xor
sub
cmp
dec
repnz
mov
inc
inc
xor
out
daa
adc
cltd
ds
dec
call
iret
int3
inc
pop
push
dec
fdiv
loopne
cwtl
imul
dec
cmp
lahf
stc
mov
in
test
or
scas
jmp
pusha
test
cmpsl
iret
push
sbb
inc
movsb
mov
push
incl
cld
testb
sbbb
pop
inc
mov
dec
jae
push
ficompl
cmp
ljmp
icebp
andb
adc
fiaddl
add
sub
bound
subl
pop
cwtl
pop
ret
add
sub
push
decl
jmp
pop
mov
inc
cmp
rcr
aad
mov
repz
jg
dec
sbb
cmc
or
xchg
das
mov
or
dec
adc
or
call
dec
sub
cmpsb
pop
push
sti
adc
pop
clc
adc
adc
mov
scas
test
sbb
insb
aad
call
inc
popa
fsub
daa
pushl
cmp
mov
xor
loop
loop
inc
scas
out
out
xchg
xchg
mov
jae
rolb
pop
adc
pop
dec
inc
fsubl
inc
jbe
inc
pop
push
nop
sti
dec
mov
mov
jno
incl
sub
push
sti
fs
mov
fs
mov
pop
sbb
add
test
call
or
in
ljmp
sbb
into
sbb
aas
and
mov
pushl
dec
sbb
mov
mov
movsl
dec
jne
mov
mov
jo
push
ljmp
jno
mov
push
iret
test
hlt
mov
jne
xchg
mov
clc
mov
ljmp
push
cmp
shl
int
es
mov
cmp
jg
and
daa
xchg
sub
push
pop
jl
lret
jae
movsl
inc
mov
push
mov
cmp
push
mov
mov
or
mov
jg
lods
data16
and
and
movsl
incb
scas
jmp
jmp
sar
xor
or
js
mov
lea
dec
insl
adc
jle
fprem
lahf
pop
repz
jge
mov
xchg
mov
sahf
fidivl
mov
mov
ljmp
popa
aam
adc
inc
sti
pop
mov
jbe
inc
xchg
out
stc
scas
daa
enter
popf
push
fwait
xchg
lcall
std
add
xlat
mov
fs
lahf
incl
mov
inc
cltd
mov
mov
pop
push
mov
pop
outsb
addb
dec
popf
push
js
lock
sbb
sub
test
pop
dec
push
or
and
call
repnz
cmpsl
dec
test
test
xchg
es
std
cltd
jb
mov
out
add
jge
jmp
rorl
outsl
mov
dec
lret
inc
dec
inc
int3
js
lea
ds
and
inc
jmp
mov
mov
sub
jle
adc
pusha
test
or
std
jb
mov
clc
imul
test
sbb
cli
iret
xchg
xor
or
cmp
inc
std
gs
lods
insl
lret
je
sahf
inc
add
fcomps
sub
jns
out
mov
lea
push
out
xchg
xor
adc
mov
testb
test
xchg
sarb
incl
aad
testl
je
dec
fisubl
push
jmp
jae
push
pop
dec
jmp
push
cmp
popl
faddl
stc
pop
push
xchg
fwait
dec
lcall
mov
push
pop
inc
jne
xchg
mov
cwtl
mov
mov
rcl
stc
testl
fcos
lcall
in
sbb
mov
jbe
ljmp
mov
and
aas
jno
rolb
mov
pushl
or
mov
mov
leave
outsl
dec
into
fldt
test
pop
jns
jmp
dec
dec
fsubrs
pop
lods
cmp
mov
out
xor
and
sbb
jmp
fiaddl
ror
fadds
jmp
stc
hlt
test
imul
or
test
test
lcall
pop
int
or
orb
stos
xor
rcrl
jno
jecxz
mov
inc
mov
ljmp
mov
mov
or
lods
out
movsb
rclb
fistps
ljmp
push
xor
inc
pop
lods
test
outsl
xchg
aam
test
jo
dec
mov
std
cmp
push
mov
dec
sub
add
xchg
pop
lret
cmp
sahf
adc
sbb
dec
mov
add
mov
sti
dec
ret
xchg
int
decl
push
cld
mov
imul
push
mov
stos
push
dec
test
mov
dec
ja
mov
fidivrl
lret
adc
and
sarb
ret
inc
push
cmp
imul
mov
je
mov
cld
or
rcrl
in
push
cmpsl
and
ljmp
mov
sbb
add
jl
and
ljmp
jb
and
jb
cmp
xor
pop
xchg
stos
mov
out
rclb
test
ljmp
testl
push
cltd
std
mov
jns
jno
adc
andb
push
push
scas
xchg
call
push
iret
jmp
dec
sti
jecxz
sub
sub
cwtl
int
fwait
jns
cmp
into
xor
js
pop
sub
movsb
or
out
std
ss
arpl
imul
jecxz
cwtl
notl
cld
outsw
fsubrs
xchg
test
xor
rolb
aas
notl
jle
or
or
pushl
pushl
in
dec
or
aam
pop
incb
jp
lock
inc
aam
cs
in
and
movsl
sub
ds
adc
add
mov
mov
lods
push
fcompl
jne
out
sub
frstor
and
cli
fmul
push
addb
mov
clc
pop
test
pushl
mov
and
test
pushf
jge
pop
sbb
insl
pop
inc
pop
or
out
inc
arpl
test
dec
mov
fchs
sbb
mov
out
sbbb
mov
inc
mov
filds
jns
fisttpll
jo
shlb
mov
adc
push
mov
jmp
mov
test
sub
push
pop
adc
or
push
decl
gs
das
cmp
call
loop
xchg
xchg
or
int3
inc
mov
or
add
mov
mov
mov
fisubl
push
jg
call
mov
add
hlt
repnz
adcl
shlb
loop
xchg
xchg
enter
call
mov
xor
shr
fwait
rcl
pop
filds
xor
js
add
adc
icebp
jmp
add
mov
hlt
sarl
loop
leave
popf
push
fldenv
add
mov
or
std
pushl
push
push
jg
mov
mov
out
sub
or
scas
sub
xor
mov
ds
sub
pushl
mov
sbb
lock
mov
or
cmp
in
jno
jecxz
call
mov
mov
pop
hlt
push
das
mov
jmp
in
sub
ds
push
mov
addr16
adc
idiv
call
mov
inc
push
pop
pusha
add
mov
mov
cvtps2pd
test
add
xor
pushl
inc
pop
lods
dec
mov
ljmp
aas
in
fildll
das
pop
mov
cmpsb
push
mov
dec
pop
fldenv
negl
stos
cmpsb
ss
dec
leave
lcall
cmc
dec
cld
imul
je
lods
sub
jne
xrelease
loop
lcall
add
xchg
orl
mov
jns
mov
in
push
or
aas
push
decl
mov
fs
out
add
push
mov
insl
xchg
jb
imul
adc
hlt
or
xlat
push
loopne
jmp
pop
xchg
add
pushl
sbb
push
push
mov
outsl
mov
mov
pop
ljmp
sbb
mov
mov
add
loope
rcr
pop
cmp
cmc
ds
xor
mov
or
sub
jmp
mov
jae
mov
bswap
dec
lea
sbb
stos
scas
lods
dec
lret
cwtl
adc
dec
push
sbb
dec
incl
xlat
and
ljmp
pop
sbb
testl
fcomps
cmp
mov
in
stos
xchg
jg
mov
cli
mov
mov
lods
xor
jne
mov
test
mov
ljmp
scas
sar
jmp
jecxz
adc
jecxz
les
xor
xor
dec
xlat
inc
in
fmull
mov
mov
rcrb
scas
cmpsl
fucomp
push
jmp
jmp
imul
imul
std
xchg
pop
loope
in
cmp
sub
pusha
mov
repz
push
xor
shll
add
mov
lcall
jp
push
add
xor
shll
lahf
in
movsl
sub
jp
iret
ja
call
pop
and
dec
rcr
in
ljmp
mov
fwait
mov
push
mov
ljmp
movsl
iret
dec
push
pop
das
lock
xchg
mov
loop
dec
ds
in
cmp
inc
or
mov
ljmp
movsl
mov
or
and
aaa
faddl
incl
cmpsb
aas
sahf
dec
push
and
popf
or
xor
xchg
xor
push
rol
stc
mov
sub
ffree
es
lds
push
adc
stos
lret
jmp
nop
sahf
add
xor
sub
mov
stos
or
outsl
clc
jmp
pushf
loope
pop
sbb
addr16
dec
enter
push
cmc
push
dec
or
loopne
inc
cmp
cli
push
dec
or
and
lret
cli
cld
ja
test
sbb
mov
ret
decl
xchg
sti
aad
out
inc
hlt
push
add
js
xor
mov
mov
mov
adc
pop
rcrb
xor
jmp
mov
push
outsb
jb
jg
xlat
xchg
push
cmp
inc
ret
mov
jmp
push
ror
fdivp
mov
mov
ljmp
sarb
dec
addl
shlb
xor
std
mov
add
scas
fimuls
jp
xor
jle
and
sub
jg
pop
mov
jmp
fbstp
into
mov
dec
jle
or
test
fwait
adc
adc
sbb
fimull
test
sub
mov
jae
mov
js
jecxz
pop
dec
dec
mov
outsl
shufps
decl
mov
int3
pop
pop
or
xchg
lret
leave
aad
jns
sub
pop
sbb
adc
dec
add
call
push
and
fidivl
insl
dec
mov
ljmp
test
in
xor
sahf
cltd
push
cwtl
xlat
dec
mov
pop
sbb
std
mov
fnsave
jns
adc
pusha
aad
into
and
pop
jge
ficoms
jecxz
insb
mov
hlt
inc
ss
and
out
push
ds
or
jle
stc
pop
cmp
or
mov
push
lret
sub
ja
jmp
adc
add
repz
inc
pop
les
sub
add
iret
add
push
adc
enter
mov
add
imul
and
dec
cmp
mov
pop
addr16
mov
lods
pop
addr16
xor
mov
rcrb
jbe
andb
imul
cld
sub
sti
loopne
pop
fisubrs
push
mov
ljmp
and
or
sbb
dec
shll
outsb
mov
jbe
lcall
cmc
mov
or
pop
cmc
pop
adc
imul
das
push
cld
jmp
sub
sti
insb
xchg
ja
into
push
incb
pushf
or
jno
std
jle
and
loope
es
sub
movl
sbb
and
sbb
decl
pop
mov
je
pop
dec
push
ja
mov
adc
aas
jae
or
pusha
xchg
lcall
out
fcmove
negl
rorb
fiaddl
daa
and
sbb
dec
lret
fisubrl
or
shrl
push
mov
inc
xor
add
xor
inc
test
mov
sub
sub
popf
mov
mov
pop
pop
lods
test
rclb
loope
sbb
sub
nop
cmc
mov
adc
movsl
xchg
dec
insb
mov
icebp
out
sbb
and
pop
inc
in
fmul
mov
out
call
mov
xchg
add
xchg
stc
je
inc
addr16
push
mov
daa
sbb
inc
push
pop
icebp
mov
xchg
and
divl
fwait
jp
sub
ds
sub
movsl
mov
push
jge
lcall
push
push
adc
lock
hlt
dec
mov
cmc
sub
lcall
adc
lds
cmp
sub
jae
and
jp
daa
pop
ret
jne
mov
jg
pushl
lahf
jp
shrl
ror
ss
xchg
push
mov
push
call
test
lcall
imul
aam
sub
inc
nop
inc
dec
push
inc
jno
lret
outsb
fwait
negb
push
mov
sti
subl
inc
lcall
nop
repz
in
dec
mov
push
sub
outsb
out
cmpb
jmp
mov
jg
jmp
cmpsl
push
push
test
adc
or
sbbl
scas
ljmp
jbe
insl
mov
jl
add
aas
popf
fldl2t
sbb
pop
sbb
fldcw
mov
in
xorl
pusha
add
sar
imul
xor
or
dec
enter
sahf
xchg
lcall
push
pop
adc
pop
addr16
cld
out
cld
loop
mov
mov
addb
push
pop
aad
pop
inc
sti
stos
inc
in
sarl
push
xor
mov
pop
ja
lea
or
dec
loop
jl
aam
or
dec
leave
inc
mov
push
push
scas
insl
rcll
dec
or
mov
out
js
in
sahf
lds
inc
push
js
or
pushl
ljmp
add
ds
fmull
mov
dec
loop
hlt
pushl
adc
xchg
mov
imul
ljmp
pop
movsl
movsb
push
and
clc
imul
ret
xchg
pause
jmp
jbe
fstpt
or
push
nop
ds
push
dec
subb
data16
cmpsl
add
add
or
insl
js
pop
push
or
jg
decb
fdivs
push
inc
add
sub
adc
loope
adc
cmp
ud0
cld
or
jecxz
xlat
push
aam
out
xchg
mov
xchg
fwait
outsb
orl
idiv
stos
add
or
in
push
inc
mov
lea
mov
mov
int3
fucom
dec
dec
xchg
hlt
test
cli
outsl
pop
sub
lahf
shr
stc
shll
sbb
idiv
mov
jae
repz
loop
jne
cld
das
sub
test
inc
mov
outsb
cwtl
push
lods
outsb
aas
push
call
lret
aas
push
data16
pop
mov
jg
sbb
jnp
fsubp
faddl
sub
int3
push
call
sbb
shl
mov
fwait
xor
insb
int
popa
outsb
mov
pop
rorb
mov
dec
sbbl
or
lea
test
push
mov
and
cmp
dec
jae
pushf
and
push
negb
ficompl
pop
ret
dec
sbb
push
ljmp
cmp
mov
cltd
clc
jecxz
cltd
cli
jg
or
mov
adc
jle
fucomp
xchg
pop
std
mov
out
arpl
test
sub
cmc
out
sub
push
push
jmp
lds
xchg
pop
sbb
mov
xchg
ljmp
cli
insb
xor
rorl
jp
jp
je
insl
cmp
sub
lods
xchg
decl
testl
sbb
clc
sbb
bound
pop
fldt
mov
incl
lock
push
jg
and
ljmp
add
ss
push
loope
adc
mov
fnsave
inc
xchg
and
pop
push
add
pushf
jg
and
cld
cmp
call
mov
popa
ljmp
stos
and
addl
fildll
stos
shlb
lcall
mov
dec
xor
xor
mov
cld
jnp
jne
jnp
xchg
stos
int3
fiadds
xor
std
ljmp
cli
cld
inc
xchg
lds
adc
pop
jnp
mov
lcall
adc
add
pushl
xchg
xchg
test
sti
jnp
xor
sub
dec
inc
lods
jbe
incl
rorb
mov
pop
fs
int3
sub
es
mov
cmp
div
jg
test
jp
xor
mov
jne
sbb
dec
repz
in
stos
fisttpl
cmp
enter
pop
lahf
mov
ja
jp
pop
sub
cs
pushl
in
jns
push
jp
jle
jge
movsl
xchg
jl
mov
mov
push
imul
and
mov
mov
mov
push
fxch
xor
incl
fs
push
mov
daa
jns
sub
sub
mov
mov
jp
in
rorb
dec
xchg
es
mov
pshufw
mov
jo
xor
fucomi
mov
add
std
sbb
jp
xchg
cmp
decl
dec
inc
xor
test
adc
xor
std
sbb
inc
mov
jg
cwtl
xor
movsl
call
lcall
jg
mov
out
dec
ljmp
jge
hlt
fs
push
andb
outsl
xlat
leave
ljmp
mov
or
pop
and
lea
insb
lret
nop
mov
rcrb
frstor
fwait
ljmp
ffreep
nop
inc
jae
fisubrl
xor
add
fldt
ret
or
popf
test
lock
out
lcall
pop
sub
int
xor
push
cmp
jmp
cmpsl
fs
das
mov
mov
pop
clc
shlb
push
imull
jne
stos
pop
jle
jle
mov
cli
dec
jbe
ret
adc
push
inc
call
int
pop
aas
mov
ljmp
xchg
and
pop
xchg
scas
sti
btr
adcl
lock
in
imul
pushl
xchg
jae
lods
imul
push
ja
roll
push
xchg
movsb
jp
xlat
popa
jmp
push
dec
iret
mov
sub
inc
sbb
xchg
mov
sbb
lahf
mov
cmp
ror
test
ficompl
jo
leave
sub
cmovns
jmp
mov
outsb
mov
jge
xchg
bound
sbb
or
adc
subl
ljmp
repnz
push
sub
repnz
out
push
in
xchg
mov
jg
inc
mov
rorl
add
mov
ds
ret
xchg
pushl
jg
popf
and
mov
push
imul
addr16
inc
sahf
sbb
sar
aaa
std
inc
push
pushf
and
test
mov
jae
pop
pop
jae
and
dec
pusha
push
out
test
cmp
addr16
xchg
out
jecxz
into
movsl
in
jbe
scas
xlat
sub
mov
pushl
adc
jecxz
sub
gs
lcall
dec
mov
inc
fcoml
pop
ljmp
clc
decl
push
insl
mov
mov
jp
fsubl
or
push
aaa
jo
mov
jecxz
stc
push
sub
incl
lds
imul
into
mov
dec
outsb
cmp
aad
es
mov
in
xor
loope
fists
mov
lahf
int3
ss
xor
or
ljmp
sub
add
dec
ds
mov
lea
retw
adc
movsl
jg
imul
mov
inc
cmp
out
iret
mov
dec
lahf
mov
ja
stos
xchg
mov
ss
pushf
cmpb
push
pop
add
icebp
popa
sub
ret
pop
mov
mov
decl
mov
cmp
push
push
movsl
aad
inc
dec
lcall
inc
ret
fdivs
and
out
repz
ljmp
shl
sub
pop
push
leave
popf
xor
int
sbb
pushf
push
pop
in
lcall
in
hlt
incl
in
xchg
cld
dec
fwait
jg
lret
jle
fwait
cmp
ret
insl
dec
lcall
cwtl
pop
xchg
jno
cmp
jle
adc
lcall
sub
fildl
roll
sub
in
inc
je
clc
stos
adc
push
je
xchg
js
jecxz
jge
loop
adc
ror
and
out
cmc
mov
in
shlb
rorl
push
mov
lds
fs
xor
xor
pushl
xor
sarl
push
or
das
inc
leave
mov
cmpsb
and
jae
jge
push
ljmp
incb
test
ret
cmp
mov
lahf
mov
xchg
mov
sub
imulb
je
jecxz
sbb
xchg
push
cmp
and
ljmp
fucomp
lds
nop
cwtl
aas
xor
and
cmp
dec
call
int
aad
ljmp
movsb
ret
xchg
cld
in
cmpsl
js
imul
imul
std
mov
insl
rclb
pop
xor
stos
lods
mov
fwait
pop
ljmp
cli
xchg
shr
fcomip
decl
cmc
mov
cmp
cmp
sub
loopne
adc
adc
adc
mov
adc
xor
sub
xor
jecxz
clc
or
lds
fistpll
mov
lcall
or
addl
cltd
mov
dec
jnp
dec
addr16
lret
push
jae
sbb
inc
ds
ds
or
pop
or
adc
push
data16
mov
mov
loope
dec
repnz
ljmp
adc
mov
adc
push
mov
out
mov
call
add
les
aas
sbb
jp
xchg
cmp
jge
pushf
popa
jecxz
inc
push
inc
adc
out
pop
lret
sub
mov
cmp
imul
and
clc
jmp
in
sub
aam
inc
cmp
pop
mov
sbb
je
mov
add
in
in
ds
nop
iret
fs
insb
ljmp
xchg
mov
sbb
jne
insl
sbb
gs
jmp
pop
lret
lcall
out
fwait
stos
add
mov
push
cld
add
scas
test
xor
rcl
scas
pop
cmpsb
push
ret
dec
leave
mov
jg
hlt
pop
cwtl
repnz
mov
jne
and
mov
call
insl
ret
hlt
bound
mov
imul
popf
xor
ljmp
jle
pusha
add
outsb
andb
loopne
sahf
shr
or
ljmp
pop
aaa
insl
nop
call
fdivrl
ljmp
subb
std
stos
sub
sbb
sbb
cmp
inc
sub
xorl
subb
xor
jmp
pop
or
es
outsl
mov
adc
lcall
movsl
fwait
xchg
inc
gs
std
dec
dec
sub
add
sbb
fdivrl
jl
aad
mov
daa
mov
out
mov
jg
insl
jp
push
xchg
adc
loop
cltd
adc
cmp
sahf
dec
mov
lock
jg
stos
adc
sub
push
sub
jnp
dec
jg
lcall
out
inc
test
adc
ljmp
stos
pop
xchg
fists
inc
shl
ret
cmpsb
mov
jl
fisttpll
dec
outsl
pushl
enter
test
push
mov
ljmp
push
in
mov
bound
cmp
mov
dec
dec
xchg
cmpsb
imul
xchg
mov
in
fdivr
incl
fsub
in
pop
repnz
cmpsl
sahf
inc
cmp
ss
pop
jns
mov
not
add
push
xor
incl
lret
pop
jnp
loopne
cld
and
out
lds
cmp
mov
aaa
sub
ja
pop
push
scas
les
je
lret
push
rclb
scas
ret
call
push
js
mov
pop
lods
mov
fnstsw
mov
lret
push
xor
pusha
and
call
xchg
pop
adc
sbb
call
out
ret
mov
mov
or
hlt
gs
inc
pop
cmc
inc
clc
js
mov
sahf
mov
add
pop
pop
int
orl
arpl
pop
xlat
jecxz
filds
add
mov
or
xor
out
ret
mov
adc
mov
aam
out
push
inc
jg
inc
inc
adc
ss
ret
stos
incl
cld
xchg
jp
stos
pop
mov
imul
dec
pushf
scas
cmp
test
pop
out
jge
inc
sub
push
jo
and
leave
int3
aaa
cld
inc
hlt
jae
or
ljmp
jnp
fidivrl
adc
jmp
pmullw
push
testb
xchg
jnp
fsubrs
test
jl
orl
je
sbb
repz
pushl
push
mov
cs
mov
das
mov
div
in
fwait
sbb
dec
das
out
pushl
cld
cmp
jge
inc
jp
movsl
push
lret
mov
inc
sub
shll
dec
call
jnp,pt
and
mov
sub
popf
rolb
sti
cmp
mov
js
mov
divl
jns
testb
loopne
sbb
cwtl
daa
jb
push
adc
push
fsts
push
add
hlt
movsl
call
add
loopne
decl
loopne
mov
pop
add
clc
dec
ret
inc
xor
add
adc
mov
cli
outsb
jo
mov
dec
adc
add
cmpb
lods
les
mov
and
sub
lret
loop
cmc
cmpsl
jmp
jns
sti
loopne
decl
push
push
xchg
and
push
mov
and
imul
pusha
cmpsl
mov
cmp
mov
leave
outsb
push
rcrl
jns
fcomip
pop
cltd
push
scas
push
ret
cmc
insl
jno
out
dec
mov
and
adc
gs
insl
clc
decl
out
jmp
push
lods
stos
mov
mov
das
arpl
call
sarb
cmpsl
cwtl
jne
mov
roll
jae
mov
incl
int
mov
fstl
movsb
push
loope
cmc
add
xor
ficoml
adc
rorb
incl
in
data16
or
inc
mov
jns
sbb
jmp
xor
cmp
js
sti
sub
xchg
adc
movsb
ljmp
in
imul
in
jmp
orb
fcomip
mov
test
int
btc
cmpsb
adc
lahf
icebp
iret
cmpsl
mov
mov
push
mov
or
ss
pusha
adc
jb
cli
sbb
jo
xor
jmp
cmp
aad
lods
lret
in
adc
sub
ljmp
pop
ret
sbb
add
jmp
push
outsl
movsl
fsubs
jnp
flds
or
movsb
sbb
pushl
xor
aas
mov
xchg
lods
push
inc
out
add
jmp
test
scas
iret
push
outsl
xchg
jbe
out
ret
xchg
and
lcall
or
inc
push
or
add
lcall
cmp
push
insb
scas
arpl
dec
bound
and
and
jg
jg
push
add
xchg
pop
orl
inc
ret
add
incl
jle
xchg
clc
rorb
pop
pop
pop
fcmove
mov
mov
aas
into
sbbb
jg
call
int3
jae
arpl
das
xor
xor
sub
lock
mov
add
mov
incb
fidivs
sub
jae
dec
xchg
add
js
movsl
pop
sub
lods
pop
xor
out
adc
xchg
insl
ja
icebp
jbe
xchg
std
insl
test
pop
inc
icebp
mov
mov
push
int3
xchg
pop
pop
adc
ja
cld
decl
inc
in
adc
push
lods
test
jmp
stos
ss
in
xchg
dec
int
aam
jns
xlat
dec
movsb
add
jmp
or
mov
push
push
loop
rcll
jmp
and
cmc
pop
shll
mov
stc
jb
sahf
dec
test
and
adc
incl
adc
jecxz
or
dec
xchg
pop
das
in
cli
adc
adc
ljmp
lea
adc
fcomps
push
and
outsl
test
inc
in
ljmp
iret
stos
mov
enter
in
out
xor
mov
ret
inc
or
xlat
inc
inc
jg
dec
in
pop
inc
test
pop
cli
testb
lcall
out
les
sub
aad
movsl
roll
lock
outsl
js
mov
cld
cmp
out
xchg
icebp
in
shr
xor
inc
jbe
sbb
cs
mov
mov
insl
pushf
loopne
aam
imul
push
xchg
loop
xchg
repz
in
negb
loop
mov
fstps
inc
dec
testb
mov
push
pop
push
push
sbb
or
sbb
mov
cmp
pop
mov
sar
call
stos
mov
jle
hlt
scas
filds
fcomip
and
daa
das
mov
add
fcompl
inc
xchg
jnp
ss
stos
mull
sbb
sbb
inc
arpl
idiv
jb
jle
mov
push
fcomps
fisubrs
ret
rcl
xlat
fs
aad
adcl
rcrb
ljmp
enter
xor
subb
lcall
movsb
decl
test
andl
sub
roll
ret
push
call
loope
pop
loopne
mull
into
push
leave
or
enter
cmp
add
inc
xchg
mov
cmpb
adc
test
bound
clc
mov
ljmp
test
aam
mov
mov
mov
out
sbb
call
lock
and
test
inc
add
call
incl
fmul
mov
test
pop
inc
lea
rolb
pushl
pop
mov
cmc
fisubl
xchg
xchg
insb
lahf
js
mov
xchg
lahf
cli
inc
decl
in
fistpl
pop
cmp
jo
mov
int
jp
cli
popf
inc
roll
ljmp
cmp
mov
pop
mov
popa
cmp
clc
fists
mov
adc
lret
daa
or
mov
add
mov
test
popa
pop
fs
jg
xchg
mov
and
hlt
outsb
outsb
mov
jbe
ss
inc
pop
mov
inc
push
lret
call
mov
or
jo
push
cli
add
and
test
and
mov
outsl
incl
dec
jle
and
subb
add
mov
lret
or
adc
xor
lcall
insl
mov
or
iret
js
repz
dec
enter
fisubs
or
das
clc
push
or
sub
hlt
es
sbb
inc
push
lea
mov
in
adc
decl
into
or
jmp
dec
test
std
in
daa
loopne
cmp
mov
insl
and
jmp
rolb
nop
movsb
add
and
orb
mov
sbb
out
jns
add
aaa
and
decl
cmp
ret
pushf
lock
push
in
and
or
enter
cmp
fbld
ds
in
ret
rcrl
loopne
push
jb
fsubl
lcall
ljmp
sbbb
jo
sbb
cmpsb
jmp
in
jmp
push
cmp
loope
clc
std
in
aad
fwait
jg
xchg
imul
dec
pop
mov
in
mov
pop
test
je
pushl
push
fs
sahf
mov
dec
push
cmp
cs
mov
mov
out
cli
out
jp
cltd
push
push
ljmp
pop
hlt
cmc
test
inc
mov
call
pop
ja
pop
enter
pop
shlb
xchg
adc
lds
add
out
cmpsl
xchg
daa
fwait
mov
movb
call
xchg
bound
stc
lret
cmp
sub
xor
gs
pushf
ljmp
clc
movsl
outsl
aas
push
stos
pusha
inc
stos
xchg
jnp
mov
lock
jmp
xor
and
lea
in
ljmp
les
aaa
jge
mov
scas
add
decl
lock
fwait
mov
inc
jle
xchg
adc
push
test
outsl
xchg
cld
fildl
cmpb
decl
or
in
add
repnz
pop
sbb
inc
pop
pop
addl
repnz
cmp
push
jp
in
sahf
mov
fdivp
aam
push
pop
pusha
decl
inc
ljmp
xchg
scas
inc
js
adc
add
in
adc
js
xchg
push
mov
and
pop
add
je
mov
sub
mov
incl
in
fs
add
in
cltd
jp
cli
cmpb
jbe
jo
fcmovbe
pop
movsl
js
cld
cmp
cmp
push
lcall
jp
inc
adc
test
push
mov
pop
insb
push
enter
icebp
cmp
std
jns
adc
call
xorb
insb
fidivrl
hlt
ret
bound
dec
xchg
shrb
shlb
add
pop
jno
cli
jo
dec
cmp
and
icebp
movsl
pop
and
pop
ja
ljmp
cmpsl
pop
push
lret
out
sahf
xchg
dec
call
outsb
and
mov
lcall
sbb
sbb
jl
test
and
out
sbb
in
outsl
clc
ljmp
mov
mov
push
mov
fs
int
decl
pop
adc
les
dec
popa
push
fimuls
pushl
std
lcall
aas
scas
aam
cmpsb
mov
roll
fsubr
sub
iret
pusha
rclb
lcall
in
jnp
pop
sub
xor
dec
jge
fcomip
push
enter
hlt
xor
jmp
sub
push
lcall
out
arpl
xor
push
hlt
xor
pusha
sub
xor
test
ljmp
negb
push
pop
dec
stc
imul
int
stos
pushl
std
rol
hlt
sub
dec
movsl
cmp
push
negb
or
inc
daa
movsb
xor
mov
sub
cmp
dec
out
imul
repz
cmpsb
nop
testb
pop
lock
sarb
mov
lods
adc
mov
xor
pop
lea
lock
movb
or
pop
push
mov
pop
lcall
out
fstl
insb
cs
dec
jge
add
sub
jg
enter
aam
push
cli
fidivrs
addr16
nop
cmp
pushf
das
imul
sub
sbb
pusha
aaa
loop
inc
clc
add
lcall
push
in
ss
in
ss
xor
imul
add
clc
pop
xor
popa
mov
dec
std
jecxz
and
jl
cli
mov
scas
imul
ja
dec
negl
fildl
hlt
jb
int3
jns
ror
arpl
pop
push
std
jmp
push
and
mov
jae
inc
jmp
imul
jno
cmp
mov
jmp
pop
test
xor
insb
dec
adc
int
es
or
pop
jno
xor
xchg
outsl
bound
cld
cmp
push
iret
xchg
clc
scas
pushl
or
pop
mov
sub
sub
cltd
mov
lods
loopne
lcall
dec
inc
jle
lock
das
cmpsl
sbb
add
aam
adc
test
mov
or
push
js
sarl
rcl
inc
mov
lea
ljmp
lret
inc
jmp
jb
hlt
adc
sbb
repnz
push
pop
push
mov
inc
inc
and
dec
in
cmpsl
repnz
xchg
scas
ss
or
aad
call
cld
ljmp
xorb
sub
sub
popf
flds
ja
mov
aam
or
cli
mov
testb
push
adc
call
jbe
lahf
lret
sub
or
das
ud0
outsl
ljmp
xlat
push
push
sub
test
xchg
and
out
in
cmp
sub
sub
jg
xchg
popa
or
xchg
sbb
in
inc
leave
sub
incl
test
and
cmp
dec
inc
jge
sahf
xor
xchg
xlat
sti
jp
push
clc
in
sub
cmp
out
mov
pop
arpl
dec
bound
aaa
lcall
roll
sarb
inc
fs
mov
fbld
mov
cmp
imul
incl
or
or
rcll
push
nop
je
jp
mov
icebp
sar
add
push
fistps
inc
js
mov
xchg
jmp
inc
mov
in
jbe
and
loop
jp
in
vpmulhw
daa
or
xor
rcr
iret
rcrb
or
decl
insl
ljmp
xor
arpl
sahf
jecxz
jg
sub
pop
push
adc
push
fdivs
mov
cmp
in
loopne
imul
mov
push
in
rdmsr
cmp
ljmp
sub
aam
lea
mov
ret
push
test
ljmp
in
and
add
out
mov
je
push
mov
dec
mov
push
inc
sbb
rcll
jmp
fidivrl
dec
xor
cwtl
pop
xchg
pop
clc
push
popf
in
loope
movsb
jl
repz
adc
ficompl
jmp
push
xchg
mov
mov
ja
fcom
inc
mov
stc
mov
jno
fldenv
incl
mov
dec
mov
mov
roll
sbb
les
sahf
std
inc
std
or
mov
cmpsb
cmc
ret
call
adc
in
dec
mov
insb
pop
imul
jbe
ficoml
push
mov
cmp
pop
outsb
jns
fstpl
orb
das
shrb
or
loop
fcoms
jl
out
inc
add
int
psrlq
pop
sub
mov
lret
lea
jl
push
insb
mov
ljmp
push
dec
push
add
scas
jecxz
mov
push
pop
shlb
loopne
shl
push
xchg
add
ja
xchg
mov
or
mov
incl
cmc
outsb
push
rorb
mov
iret
sti
loop
adc
outsl
fists
aaa
jns
es
incl
mov
mov
sbb
loopne
ret
jp
adcb
or
mov
mov
and
aad
scas
cmp
jg
mov
inc
clc
dec
or
nop
xchg
shll
mov
mov
push
pusha
mov
decl
or
or
pop
cmp
lret
das
lahf
xchg
mov
je
popf
sar
pop
xchg
jge
push
push
shl
je
lds
inc
ds
arpl
jbe
jmp
nop
lea
cli
sub
dec
movsl
inc
sbb
mov
mov
pushl
data16
xchg
clc
and
loop
repnz
xor
xor
cmp
xchg
mov
imul
loop
outsl
adc
sbb
out
cmp
adc
jb
sbb
inc
insb
inc
call
xchg
imul
das
sbb
ret
jg
mulb
pusha
pop
gs
aad
push
push
or
mov
cmp
or
ljmp
or
sbb
xor
sbb
push
mov
dec
cmpsl
rclb
loopne
cwtl
dec
xchg
push
ja
call
cs
mov
pop
jnp
sub
mov
popf
dec
imul
inc
mov
call
fmul
push
add
sti
push
jg
movsl
dec
push
mov
sarb
sbb
xor
pop
outsb
mov
lcall
aaa
stc
adc
fiadds
arpl
push
push
call
gs
repnz
xlat
pop
stos
ljmp
jmp
iret
mov
add
icebp
adc
sbb
push
mov
jae
mov
cmp
mov
sbb
subb
mov
movsb
sub
inc
mov
add
inc
std
lcall
pop
pop
push
repz
and
xchg
jbe
mov
call
inc
and
ljmp
movsl
cltd
jae
xchg
hlt
fsts
fidivrs
test
cli
out
sbb
sti
mov
leave
lret
stos
cwtl
leave
sub
scas
pushl
icebp
jl
jb
mov
sub
cmp
ret
cmp
cmpsb
stc
add
jae
sub
mov
lcall
push
add
or
pop
fildl
dec
lods
cli
mov
and
lds
sbb
rolb
inc
mov
xor
push
mov
fisttps
xor
aaa
xchg
sub
mov
mov
sbb
pushl
xchg
pop
and
push
lock
xor
mov
pop
int3
mov
dec
pop
pop
dec
in
outsb
mov
les
jg
lcall
or
add
call
sbb
sub
push
adc
inc
inc
fimuls
test
addb
into
mov
jmp
xchg
adcb
mov
xchg
and
roll
clc
ljmp
xlat
jecxz
xchg
sub
xor
pop
mov
inc
popa
shrl
decb
ljmp
les
mov
das
mov
xchg
fwait
es
movsb
test
arpl
test
mov
push
sub
jne
lock
ljmp
mov
xchg
cwtl
out
jb
sbb
pinsrw
cld
or
call
jg
cmp
test
or
fdivs
cwtl
clc
lods
and
std
mov
mov
outsl
test
jge
ror
adc
call
adc
jmp
in
mov
cld
push
dec
imul
ljmp
xor
ss
ja
in
in
jg
and
test
cmp
or
sub
testl
scas
call
scas
js
xor
test
and
pusha
mov
xor
xchg
pushl
aaa
dec
fsubrs
xor
outsb
add
dec
pusha
push
stc
rclb
scas
mov
in
fs
jmp
push
lret
adc
xchg
fistl
sbb
int
push
es
push
jbe
adc
decl
push
adc
mov
dec
scas
lods
adc
sub
pop
pusha
mov
adc
push
mov
xchg
push
call
push
xchg
or
addr16
decl
popa
inc
dec
add
das
jae
out
decl
lock
pop
dec
out
add
daa
gs
cmp
stc
fstl
aam
inc
pushl
and
lret
xchg
lods
pop
mov
cli
mov
jge
gs
incl
pop
adc
ds
orl
testl
mov
add
fcoml
fwait
dec
std
stos
jg
sub
inc
xor
das
jb
jmp
call
popf
xchg
nop
addr16
cmp
fldcw
sub
fisttpl
mov
fwait
cmp
mov
sub
or
mov
jns
inc
cltd
mov
mov
ljmp
xor
addr16
aam
or
mov
and
shlb
frstor
je
and
xor
adc
mov
jns
cmp
ss
push
popa
dec
push
lods
imul
jmp
cmp
add
adcb
jl
push
ja
fcomip
repnz
jno
js
into
call
call
push
pop
or
xchg
test
add
lcall
insl
lahf
add
fcomi
es
sub
xor
mov
push
dec
cld
int3
inc
call
insl
mov
xchg
adc
js,pt
popl
pop
repnz
mov
rorb
add
enter
pop
add
aam
jmp
outsl
sbb
mov
call
inc
xchg
or
inc
outsl
ljmp
imul
in
aam
into
xchg
insl
push
or
ljmp
mov
int3
ret
or
aad
xchg
out
cmpsb
jp
enter
cmp
mov
add
mov
or
outsl
addb
fimull
leave
jae
pop
cmp
inc
addr16
cmp
ljmp
loope
push
fisubs
test
xchg
shlb
mov
sub
fcmovb
test
push
in
loop
mov
movsb
cmp
sub
sbb
add
or
sti
jno
test
jmp
fisttpl
cmp
xchg
std
xor
lcall
lahf
pop
push
pop
fdivl
lret
dec
popa
daa
xchg
jl
test
dec
ss
or
lcall
sbb
or
xchg
sbb
out
repnz
inc
scas
call
gs
rorb
call
test
xchg
cmp
jne
call
pushl
adc
xchg
addr16
int3
fwait
dec
push
or
pop
adc
lods
int3
ds
lds
cmpsb
xchg
or
ljmp
pushf
out
das
xor
and
mov
ffreep
data16
jmp
aaa
cmp
pop
pop
dec
jg
es
gs
daa
xchg
pop
mov
clc
ret
lock
or
sub
pushl
cld
jmp
icebp
dec
jecxz
jb
add
or
sub
dec
cs
mov
gs
test
and
out
dec
jp
inc
mov
out
cli
xor
rclb
sbb
loop
insl
cltd
pop
jbe
fistps
hlt
ja
lcall
push
jno
sarl
loope
loope
sub
decl
mov
xlat
mov
out
jno
in
add
adc
xchg
insb
jp
cmp
cmc
push
jo
adc
dec
inc
inc
cmp
cwtl
inc
fwait
imul
xchg
xchg
or
movsb
in
add
testl
jmp
sar
stos
jmp
xlat
das
mov
out
movsb
pop
or
loope
cmp
mov
push
mov
mov
test
ret
cmp
dec
mov
dec
jb
or
repz
sbb
decl
cltd
jle
icebp
push
pop
sbb
xor
sbb
fcomip
jmp
jle
and
jne
sbb
data16
pop
cwtl
scas
daa
jg
in
inc
sub
call
and
pusha
les
scas
aaa
scas
ljmp
lcall
enter
jno
mov
jp
lods
mov
aaa
jmp
lahf
cmc
add
lret
div
jae
xor
xchg
sub
pop
imul
pusha
add
outsb
dec
out
push
roll
mov
call
sti
xchg
aaa
ja
dec
fs
lea
pop
jnp
pop
es
pop
mov
mov
mov
stos
pop
mov
loop
jp
jbe
add
add
push
notl
sti
xchg
inc
sbb
pop
cmp
lock
ficomps
std
imull
in
js
pop
hlt
lcall
mov
push
xlat
stc
leave
stos
mov
and
imul
jnp
das
xchg
mov
jmp
xchg
js
sub
and
aad
jg
cmp
mov
es
lret
xchg
cmp
andb
outsl
gs
cs
decl
scas
insl
jnp
cmpsb
and
dec
push
lds
xor
in
adc
gs
outsl
shrl
or
push
ss
call
adc
shr
and
pushf
in
xchg
mov
pop
pop
arpl
ret
mov
sbb
xor
pop
lea
icebp
movsb
pop
and
dec
jmp
stos
outsl
xchg
dec
pop
sahf
dec
mov
mov
mov
sub
pop
js
dec
mov
or
sub
dec
jne
jb
leave
xlat
mov
adc
decl
mov
js
outsb
imul
out
push
dec
mov
dec
push
xchg
mov
mov
repz
mov
and
pop
out
es
int
fisttpll
xchg
jo
jns
imul
or
call
cmp
mov
sub
or
mov
decl
and
cmp
jno
in
mov
jl
mov
outsb
mov
cli
in
pshufw
mov
fcom
mov
xchg
sti
add
pushl
int
push
sbb
jo
rolb
mov
mov
cmp
fucom
stc
icebp
decl
inc
aaa
push
sbb
and
ss
rol
jae
jnp
cs
cmp
nop
addr16
sbb
lods
nop
loopne
scas
sub
enter
or
mov
lcall
test
movsl
push
jne
pop
add
pop
push
xchg
ljmp
jmp
jg
inc
cli
xor
iret
sbb
andb
bound
in
push
add
iret
or
fwait
clc
mov
aam
das
incl
cmc
pop
pushf
repz
pop
aam
cmp
addr16
dec
push
lcall
roll
cli
xchg
mov
push
mov
pop
lahf
in
xchg
bound
js
jg
xor
in
out
push
adc
lds
xchg
xor
je
jg
movsb
test
insl
xor
rorl
test
adc
test
fstp
inc
lods
xchg
data16
mov
cmp
pop
cmp
inc
cmp
jns
lret
incl
testl
xchg
cmp
out
aad
lahf
pop
push
inc
out
mov
push
inc
jg
decl
add
rcl
add
and
mov
fimuls
out
sbb
dec
out
out
pop
mov
int3
test
mov
and
sub
sub
and
mov
ljmp
rcr
cli
andl
shl
push
cmc
mov
movsb
and
inc
lret
and
dec
loopne
clc
or
test
test
or
push
inc
bound
imul
decl
clc
lock
inc
mov
fsubrs
jbe
sbb
test
popa
aaa
lcall
xor
lods
mov
xchg
cltd
pop
ss
push
add
mov
mov
cld
cmc
jmp
scas
jl
lods
jae
ja
push
lcall
call
jae
mov
push
dec
or
sbb
push
add
mov
dec
popa
sar
decl
mov
lret
inc
xor
mov
js
shr
addr16
ljmp
sarb
xchg
jo
cmpsb
rorb
push
leave
sub
dec
into
fdivr
test
out
pushl
shlb
jle
or
dec
or
jg
test
repnz
shll
xchg
movsb
lret
jle
jl
mov
in
mov
push
ret
insb
pop
xchg
push
test
incl
test
cmp
sub
push
cmp
stos
lock
std
incl
jp
out
jecxz
std
das
ret
mov
mov
fs
mov
iret
push
mov
ss
mov
rcrb
pushf
mov
dec
mov
jmp
xchg
inc
push
add
inc
ljmp
rorb
shlb
aaa
out
add
mov
add
inc
add
lret
aas
add
ljmp
in
push
or
xchg
dec
push
sahf
mov
stos
lret
nop
mov
sbb
aad
jmp
jnp
and
cmp
jg
inc
sbb
lock
mov
push
je
std
dec
mov
adc
ret
adc
divps
and
or
movsl
stc
push
test
movsb
inc
dec
ljmp
mov
jns
and
jmp
cmp
lea
movl
xor
jo,pn
xchg
pop
cmpsl
outsb
dec
dec
xchg
adc
dec
lods
outsb
jno
mov
mov
hlt
ja
int3
adc
inc
mov
stos
fwait
dec
loope
rorl
mov
push
mov
mov
push
jns
insb
scas
repnz
add
incl
inc
sub
mov
sbb
outsb
mov
xchg
xor
cmp
sub
add
fildl
ljmp
ja
push
inc
addr16
sbb
add
and
sub
jg
xchg
pusha
xchg
js
rep
lcall
popf
xchg
shr
lds
xchg
add
jle
fwait
mov
sarb
sbb
xchg
int
xchg
sub
lcall
daa
and
aam
mov
inc
mov
daa
mov
jb
push
jg
cmp
rorb
or
pop
hlt
call
sub
icebp
repnz
mov
enter
jmp
lods
movsl
ljmp
mov
ss
leave
jl
sub
adc
cld
out
enter
stc
out
jp
inc
mov
ret
adc
mov
decl
in
loopne
sbb
add
add
cltd
lea
dec
loop
cmc
inc
iret
jge
fmull
call
pop
inc
lods
cmpsl
push
pop
test
jnp
jmp
jge
mov
cld
add
or
jnp
ljmp
int
mov
xchg
test
das
out
push
test
aam
lods
lcall
jb
mov
lcall
push
js
or
mov
mov
aaa
rclb
mov
pushf
int3
insb
sbb
mov
fists
push
inc
leave
into
shr
cwtl
out
and
repz
cmp
jle
jg
jnp
jne
lcall
cmpsb
inc
into
stos
mov
mov
pop
add
jmp
pop
in
sub
ret
stos
lret
and
mov
insl
add
in
inc
iret
gs
add
dec
xchg
and
pop
push
stc
sub
xor
popf
push
clc
int
dec
js
fs
xor
ret
xor
daa
pop
push
mov
call
xchg
movsl
pushf
std
scas
adc
lea
movl
ljmp
cli
popa
stc
push
es
add
inc
sbb
inc
int
call
nop
fidivrs
in
sbbb
stc
add
cmp
mov
and
cmp
dec
loopne
mov
enter
xchg
stos
sub
sahf
or
lcall
loopne
insb
mov
xchg
mov
gs
bound
and
cltd
cmp
sbb
incl
cmc
roll
pop
test
orb
and
jg
mov
xchg
lret
stos
dec
mov
dec
pop
je
adc
inc
lods
addr16
inc
jp
ret
icebp
lcall
inc
in
mov
hlt
mov
cmp
stos
pop
lock
fcompl
data16
mov
leave
xchg
dec
xchg
and
sbb
decl
dec
imul
mov
jnp
fwait
push
add
add
jns
add
leave
dec
add
incl
push
and
lret
js
sarb
mov
es
dec
lret
dec
xchg
aam
mov
in
aaa
ja
clc
jmp
lods
das
push
scas
subb
sbb
ja
jmp
mov
daa
rcr
adc
dec
gs
in
insb
lahf
pop
push
fwait
mov
call
xchg
xor
imul
xor
cmp
call
mov
in
push
dec
shlb
xor
imul
subl
mov
cs
outsl
js
ljmp
jae
hlt
lds
aas
xor
scas
push
cmc
decl
pop
add
push
in
and
pusha
pop
sub
test
push
add
mov
ljmp
negl
jne
and
rorb
or
sub
loop
adc
adc
jmp
cmpsb
fcomps
and
in
cmp
sahf
dec
jecxz
xor
push
mov
xchg
push
adc
jmp
ja
rorb
mov
push
pop
push
frstor
jp
shrl
adc
lcall
cltd
jno
pop
lock
pop
test
rorl
xchg
in
std
out
addr16
insb
scas
dec
les
fistpl
pop
push
cmp
clc
xchg
scas
lds
aam
or
cli
jg
movsb
fdivrs
adc
mov
xchg
mov
daa
pushf
das
lret
and
incl
cltd
andl
and
xchg
nop
imul
xchg
add
ljmp
mov
outsl
data16
movsl
mov
das
mov
addl
into
pop
sub
sti
and
pop
sarl
cmc
addl
hlt
in
or
aam
outsl
mov
push
dec
pop
mov
cmpsl
sbb
dec
and
cld
adc
sub
jbe
pop
fucomip
and
mov
adc
jno
xchg
fmuls
pushf
arpl
incl
sbb
scas
repnz
sbb
das
or
lret
ljmp
jge
lods
int
ljmp
or
fucomi
cmpsl
mov
inc
rcl
push
xchg
mov
idivl
lahf
fs
cli
mov
lcall
out
sbb
fsubs
adc
sbb
mov
fwait
test
fbld
daa
push
decl
pop
out
xchg
jecxz
dec
lcall
lcall
ds
push
mov
fisttpl
xchg
in
xchg
jg
adc
daa
outsb
mov
cmp
inc
cli
aad
pop
in
imul
fiaddl
adc
cmp
add
xchg
adc
ljmp
arpl
dec
push
push
dec
cmp
cli
das
push
out
test
inc
neg
pop
push
ss
cld
lods
push
inc
out
loope
ss
xchg
adc
mov
jnp
or
fildll
inc
xchg
shlb
mov
pop
lcall
or
fs
mov
jecxz
inc
push
pushf
mov
aas
xor
mov
jnp
mov
aad
decl
enter
int
push
daa
lods
pop
mov
loop
call
add
jne
ss
mov
in
loopne
iret
fiadds
mov
clc
jmp
push
into
push
mov
cmp
jmp
xor
mov
cmp
repz
jmp
cmp
je
or
inc
popa
jl
icebp
jno
jb
fdivs
sbb
out
inc
std
ja
shll
push
or
mov
pushl
mov
push
nop
or
adc
cmpsb
inc
sahf
add
enter
stc
pushf
sar
std
pop
push
xor
add
call
mov
cltd
jg
cld
mov
add
jg
pop
pop
scas
cmpsl
test
shrb
cmp
jge
std
dec
mulb
inc
or
data16
ja
add
js
decl
aas
fadds
lds
fistpl
or
insb
jne
sahf
popf
lods
mov
jmp
pushf
cmc
xchg
mov
adc
aas
scas
sti
adc
add
fcmovnb
les
cmp
fcomip
jno
jne
sbb
lret
cmp
rcl
in
stos
mov
aas
sub
dec
adc
dec
das
inc
add
mov
sub
repz
xor
mov
dec
fadds
cmp
call
fcoms
xor
insl
sti
shrl
movsb
lret
xor
or
fsubs
push
add
das
xchg
push
ror
rcrl
rol
pop
push
iret
dec
daa
and
fistps
inc
sub
mov
insl
jo
push
ljmp
add
push
add
jl
rclb
add
cmp
daa
aam
sub
xor
lcall
aas
pusha
push
incl
jnp
je
sub
negl
adc
pop
mov
xchg
jnp
sub
add
incl
jl
xchg
push
stc
movb
outsb
int
pushf
mov
cmp
and
mov
sub
sub
or
ror
ss
push
mov
cmpl
mov
cmp
ja
add
dec
push
icebp
mov
loopne
inc
lods
sub
ss
repnz
push
sbb
scas
push
hlt
mov
inc
sbb
inc
xor
mov
jp
xchg
jp
in
popa
incl
pop
or
clc
sbb
xchg
cmp
push
ss
jae
scas
push
insl
mov
cli
pushl
in
into
movsl
inc
pop
call
xor
insl
fisubrs
jno
jecxz
cmc
or
cmp
sub
fisttps
mov
fsubr
adc
aaa
mov
fisttps
das
nop
mov
cmp
sahf
jg
add
jno
jp
aad
std
fwait
call
fldl
scas
sub
stos
mov
push
xchg
adc
ljmp
call
and
insl
mov
push
das
ror
repz
inc
loope
clc
fwait
rcrb
incl
mov
sbb
data16
movsb
hlt
pop
mov
shll
push
rorb
lcall
aad
push
mov
sub
xor
inc
jnp
inc
jmp
dec
aad
dec
mov
aas
loop
add
rcl
fsubp
ljmp
daa
movsl
js
hlt
ljmp
adc
jp
add
ficoml
and
std
jne
add
jmp
lds
fwait
int3
push
pop
sbb
imul
jecxz
test
iret
jb
aad
sbb
xchg
js
jmp
pop
lods
adc
jmp
imul
std
call
orl
sub
pushf
stc
test
mov
add
das
out
ss
lods
decb
mov
aaa
add
dec
adc
decl
pop
inc
push
imul
cld
ljmp
mov
cld
je
test
fisttps
lcall
push
adc
stos
negl
lods
sbb
or
call
outsb
adc
rclb
adc
addb
repnz
ss
call
fdivr
cmp
lcall
or
sub
movsb
mov
test
out
adc
sar
pushl
into
jmp
pop
imul
adc
mov
add
xchg
sbb
ljmp
fmuls
fdivrp
dec
or
fdivrs
addr16
mov
adc
and
fwait
xor
cmp
mov
popf
mov
mov
mov
decl
mov
and
xlat
xchg
sbb
ljmp
and
xchg
cmp
mov
decl
adc
mov
xchg
sbb
adc
mov
test
jle
shll
aad
sub
dec
decl
add
inc
jmp
or
in
or
scas
sahf
cmp
xchg
cmp
nop
mov
incl
cld
push
test
mov
insb
fs
pushl
mov
dec
cmp
xchg
or
sti
rcl
testb
jp
stc
jne
pop
in
cmpsl
pop
push
into
jb
mov
setge
mov
push
cmp
hlt
in
push
lcall
cmp
fmul
leave
cmp
ret
fisubs
into
test
call
clc
movsl
mov
les
ja
out
das
jp
push
call
outsl
repz
insl
sbb
imul
xchg
mov
inc
adc
js
inc
sar
incl
lret
ljmp
ja
xchg
sbb
sbb
stos
xchg
les
in
out
mov
jmp
dec
cmp
popa
outsl
add
cmp
add
pop
dec
repnz
fmul
or
mov
pop
enter
loope
jg
jmp
lock
and
rcrb
xchg
test
sub
aaa
pushf
jg
dec
inc
xchg
adc
fldt
push
xchg
popf
das
popf
or
adc
jne
jg
jmp
ds
sub
loopne
rcr
xchg
dec
icebp
loopne
es
jno
adc
decl
mov
or
mov
mov
mov
cli
cs
push
sbb
or
mov
call
mov
sbb
js
xor
cmpb
decl
mov
push
pop
enter
clc
jp
test
inc
sahf
sbb
sbb
sub
xchg
decl
cmpsl
dec
pop
daa
adc
jo
xor
out
pop
adc
mov
cli
pushf
xor
inc
sahf
cltd
lock
incl
xchg
fs
fwait
aas
jle
dec
bound
mov
jbe
popf
mov
ja
mov
dec
cmc
call
cld
xchg
cmpb
fcompl
dec
sub
shrb
and
rolb
push
repz
push
add
and
lock
lret
mov
call
inc
inc
loope
add
in
pop
mov
and
test
iret
xchg
inc
incl
xchg
and
aas
xor
adc
mov
js
add
out
push
mov
subl
pushl
push
mov
in
pop
ret
shlb
pop
stos
and
loopne
and
mov
pop
mov
xchg
sbb
push
cmp
add
int
jp
mov
dec
jle
add
repnz
cmp
js
into
sar
in
add
mov
push
fadd
push
outsl
cld
iret
push
adc
xchg
cmp
cli
inc
dec
icebp
mov
nop
incl
jno
dec
mov
xchg
movl
std
and
icebp
sbb
ljmp
add
add
cld
xor
fwait
jbe
or
call
std
push
push
bound
jb
scas
mov
pusha
mov
cmp
cli
decl
push
add
jae
movsb
pop
stos
xor
xchg
and
xor
stc
xor
dec
sbb
ljmp
inc
das
add
xor
xchg
or
arpl
scas
sarl
imul
adc
popa
scas
imul
lods
int
ret
ss
push
sub
inc
mov
inc
loop
outsl
mov
xor
push
dec
jle
or
sti
arpl
mov
add
pop
daa
shll
mov
ljmp
dec
outsl
ss
aam
xchg
push
cmpl
iret
test
lods
in
xchg
clc
negl
loopne
cmp
push
sub
pop
xor
je
jne
xchg
xchg
cltd
add
xor
jg
call
pop
jle
scas
scas
add
bt
mov
stos
cmpsl
dec
mov
arpl
jo
pusha
dec
movb
imul
mov
mov
xor
movq
xor
dec
clc
push
call
std
incl
outsb
test
mov
in
loopne
pop
xor
cld
adc
mov
ret
adc
pop
sub
fwait
push
shll
or
or
imul
dec
mov
dec
cmp
sbb
test
pushf
movsb
push
daa
std
or
jmp
mov
push
pop
add
push
stos
sub
testb
fiaddl
mov
lods
mov
sub
loopne
sub
pop
rclb
dec
cltd
sahf
jecxz
xchg
loopne
insl
mov
rcll
fcomip
incl
push
add
xchg
sarb
push
inc
orl
adc
push
sub
ljmp
test
cmp
daa
cmp
sub
jns
addl
add
nop
cmp
stc
loope
hlt
test
mov
lcall
addr16
mov
jb
cmc
movsb
fidivs
sbb
mov
mov
lcall
shrl
lret
pop
addr16
shl
inc
sti
pop
jg
inc
sbb
movsb
in
rorb
clc
sbb
cmc
jmp
mov
nop
addr16
aas
cmp
mov
inc
mov
and
mov
mov
mov
jo
cmp
jl
jmp
sbb
addr16
xorl
dec
mov
lcall
outsb
sbb
jo
outsl
add
inc
add
jmp
in
add
jmp
and
mov
cmpsl
inc
mov
fcomps
fstpt
mov
lahf
decl
shl
and
cwtl
call
sbb
lahf
fs
mov
or
jb
and
add
rol
cmp
insl
sub
leave
sub
mov
cmp
cld
incl
jb
inc
lock
insl
fistpll
sub
sti
pop
push
lahf
bound
sbb
std
mov
push
repz
xchg
ja
pop
in
ret
scas
nop
adc
jo
lock
call
cmp
dec
push
jbe
ret
out
and
repnz
test
mov
inc
clc
mov
mov
cltd
mov
push
std
cmc
js
xchg
jg
clc
add
pop
je
arpl
out
test
push
sbb
push
pop
dec
cs
incl
leave
adc
push
insb
popf
js
and
inc
jo
adc
hlt
mov
mov
andb
test
fwait
insl
std
decl
inc
lret
ret
xchg
andb
add
lods
int
in
mov
xchg
and
push
testl
jmp
idivb
cmpsl
adcl
xchg
inc
decl
push
sub
or
fsts
test
in
rcr
ljmp
fsubr
stos
cmp
std
rcrb
mov
mov
into
jo
scas
push
push
ret
inc
pop
sbb
popa
or
sbb
incl
xchg
dec
mov
add
cmc
xchg
sbb
and
and
movsb
mov
incl
jle
jo
and
dec
mov
push
xchg
dec
decl
jb
in
xchg
pop
out
push
in
or
cmp
scas
enter
xchg
js
dec
loope
aaa
fstpl
das
sub
lcall
ror
xchg
dec
mov
mov
mov
and
add
subl
xchg
push
outsb
add
push
popa
xor
cmp
mov
repz
out
or
repz
mov
call
push
add
mov
sbb
xor
das
insl
inc
fstpt
jns
popl
jmp
icebp
or
lock
fisubrl
cld
jge
xor
pop
adc
jb
xor
jmp
test
adc
mov
or
inc
cs
jnp
fcomip
int3
sahf
inc
pusha
cli
xchg
mov
clc
jge
push
xor
std
lea
aam
scas
xchg
clc
mov
lods
adc
fimuls
xchg
arpl
cltd
loopne
repnz
cmp
mov
adc
adc
mov
fistpl
sbb
add
decl
das
scas
xlat
and
aaa
mov
push
mov
push
fnstcw
pushl
int
or
mov
adc
shll
pop
loop
sahf
push
fisubs
push
mov
jl
inc
add
adc
sub
xchg
dec
jne
add
sbb
fwait
hlt
xchg
lcall
imul
loope
xor
inc
push
out
push
icebp
inc
scas
test
jmp
out
enter
test
dec
sub
push
call
lock
jle
add
stos
decl
mov
movsl
leave
outsl
jmp
jbe
lods
cmpsb
mov
daa
mov
shr
ljmp
or
adc
sbb
mov
push
dec
pusha
cwtl
lahf
lret
repz
imul
aaa
das
clc
fcmovb
jle
jg
mov
add
or
adc
cmpsl
ret
sub
incl
imul
pop
iret
cmp
xor
mov
mov
push
cmpsl
lods
jp
stos
pushl
lcall
inc
mov
out
daa
pop
dec
ret
fmul
ror
push
stos
fiadds
push
sbb
pop
mov
repz
aad
lods
xor
std
and
pusha
ret
enter
ja
ljmp
loopne
adc
stc
mov
movsl
jbe
out
stos
sub
dec
xor
imul
mov
or
das
sti
popa
add
lods
out
xor
fmull
nop
and
lods
bound
push
push
mov
int3
sub
cmp
adc
mov
pop
aaa
and
cmp
call
mov
sti
cmp
add
imul
iret
and
dec
bound
fisubrl
rclb
into
jecxz
insb
cmp
incb
sbbb
xchg
outsb
insb
and
repnz
lahf
mov
loopne
clc
or
pop
je
sub
loop
pop
pop
pop
icebp
ljmp
cld
dec
ja
shll
in
add
in
leave
inc
xchg
repnz
decl
in
in
insl
adc
and
int3
jno
mov
lock
ret
in
leave
jae
dec
cmp
sahf
call
xchg
fbstp
inc
jp
xchg
sub
adc
pop
rcl
xor
bound
ljmp
push
push
and
dec
imul
fwait
sbb
sbb
rorb
addl
decl
imul
mov
pop
add
mov
call
fxch
mov
and
popf
xchg
pop
ljmp
test
sbb
or
popf
ss
fcos
or
js
stos
mov
xchg
xchg
aad
ljmp
push
fmul
dec
sbb
test
ret
xor
aad
popf
xchg
aas
jo
jns
xchg
roll
hlt
test
std
das
aad
out
mov
jnp
std
or
dec
test
shll
xchg
stc
aaa
or
ljmp
bound
gs
aas
std
dec
cmp
fwait
ds
jmp
sbb
push
pop
out
add
push
and
jae
push
rep
xchg
cmpsb
call
data16
icebp
adc
call
lods
sub
dec
xor
scas
add
into
insl
cli
movsb
call
cmp
repnz
arpl
bswap
jecxz
scas
push
dec
repz
in
movsb
dec
pop
xor
pop
xchg
dec
jb
mov
ljmp
push
fists
xchg
loope
cmp
sbb
mov
inc
lcall
into
sub
xchg
bnd
lods
pushl
jecxz
fstp
sub
sub
stos
fldenv
dec
lock
sbb
xchg
xor
into
mov
inc
push
int3
pop
dec
daa
out
or
nop
clc
call
sub
addb
and
test
sbb
fbld
jg
scas
mov
jbe
clc
je
sub
adc
jge
xchg
in
test
adc
pushl
or
loopne
lret
xorl
inc
pop
sub
jmp
jbe
shll
pushl
out
fmull
rorb
imul
and
lcall
mov
aam
and
push
sahf
std
pop
mov
jnp
mov
add
popf
push
daa
ljmp
lods
adc
push
push
sbb
add
pop
imul
lret
int3
outsl
decl
sub
jp
jb
push
push
mov
push
mov
dec
mov
rclb
lcall
aaa
sub
cwtl
mov
dec
lahf
and
loop
xor
xchg
pushl
std
decl
dec
pop
dec
adc
cmpl
mov
push
addr16
pop
adc
aad
insb
push
das
dec
or
data16
mov
add
xchg
xchg
inc
cmpsb
fiaddl
sti
pop
jbe
mov
lahf
jbe
sarb
mov
stos
mov
es
stos
repz
stc
cmp
testb
xor
push
ljmp
clc
in
std
and
nop
push
mov
leave
repnz
insl
dec
int3
xor
inc
mov
pop
push
std
call
fisubl
loopne
inc
loop
xchg
test
cmc
mov
add
scas
cli
mov
push
popw
jns
mov
je
add
lret
lret
cli
outsl
fcmovnu
ds
push
sbb
xchg
and
aam
push
fisttpll
mov
sbb
cmp
mov
or
adc
inc
mov
ja
call
mov
inc
bound
mov
lds
clc
and
pushl
inc
or
mov
or
sbb
dec
pusha
aas
ficoml
in
or
cli
idiv
fstpt
push
push
int
ss
mov
cs
push
aad
adc
outsb
ljmp
incl
dec
aam
mov
push
push
imul
lods
fmulp
clc
fcomip
cmp
mov
push
in
jo
adc
dec
jo
mov
and
sub
loop
sbb
call
adc
fmull
test
adc
pop
sub
mov
outsl
push
cwtl
sbb
mov
loopne
pushl
div
scas
lea
adc
idivb
clc
fimull
lret
lcall
mov
and
sub
int3
or
hlt
or
sub
xchg
cmc
pop
loope
xor
ljmp
adcb
add
mov
popa
push
mov
jbe
lcall
and
out
sub
xchg
add
aam
insl
out
nop
mov
ljmp
inc
pushf
int3
and
jnp
inc
les
and
aam
sbb
aaa
xor
insb
pop
jae
and
stos
push
mov
daa
jo
ja
fdiv
jp
adc
dec
xor
loope
es
jmp
lea
jbe
xchg
jnp
mov
jae
add
scas
shlb
les
fdiv
mov
popl
es
xchg
cmp
js
in
ljmp
rcrl
cwtl
daa
and
jns
fcoms
jne
pop
outsb
aam
ja
decl
clc
enter
mov
pop
dec
or
sbb
ljmp
test
sub
cli
pusha
stos
aaa
cmp
xchg
stos
or
fcmovu
idiv
incl
lret
xor
adc
test
aas
imull
clts
cmp
mov
xchg
pop
lods
mov
out
cs
push
idivb
push
lcall
mov
jns
ss
sar
jmp
and
loopne
sub
dec
das
xor
dec
int
pop
std
ljmp
fisubrl
jp
inc
ds
push
shl
dec
push
dec
xchg
popa
decl
lcall
cltd
sub
pop
dec
dec
dec
jmp
cwtl
lea
push
push
jp
pop
psubq
aas
scas
ret
imul
and
pop
sbb
ja
sti
cmp
add
mov
into
sarb
popf
outsb
div
int
mov
cmp
dec
pop
sbbb
inc
mov
xchg
mov
incl
and
pop
rcr
mov
xor
fistpl
gs
xchg
lcall
or
scas
dec
or
scas
xchg
mov
dec
test
sbb
jg
mov
ljmp
mov
fisubrl
fwait
sub
or
pop
repz
fadd
aam
push
in
push
cmp
fwait
xor
mov
lods
sbb
inc
pop
loopne
push
popa
add
call
iret
std
mov
inc
add
lahf
cli
xlat
xchg
cltd
test
jno
not
mov
xchg
lret
decl
or
jge
pop
mov
in
add
ss
dec
push
dec
test
test
lcall
loop
dec
mov
fisubs
cmp
inc
add
call
mov
pusha
in
or
xchg
andl
sub
jmp
dec
mov
xchg
popf
mov
bswap
mov
sbb
mov
iret
xor
scas
dec
jae
fisttps
arpl
icebp
mov
adc
or
stos
sbb
mov
adc
in
loopne
push
mov
jmp
add
mov
push
xorl
inc
add
cmp
das
sar
inc
sub
mov
lret
cmp
ret
fisttpl
arpl
jmp
repnz
add
lret
mov
dec
gs
xlat
cmpsb
aaa
jb
xlat
hlt
js
cli
xor
std
ljmp
arpl
dec
sarb
jmp
or
sbb
ficompl
incl
outsl
mov
imul
adc
out
inc
xor
mov
lock
or
rcrl
rcr
or
aaa
stos
fsubrs
or
mov
pop
sarl
movsb
cmp
in
shlb
repz
jmp
sbb
call
jo
adc
inc
push
aad
dec
in
adc
xor
xchg
ret
ds
incl
sub
data16
cmp
or
lret
cltd
lods
inc
push
pandn
inc
cmp
in
jg
cld
daa
es
mov
loopne
mov
pop
lret
xor
jmp
sub
cli
decl
fstpt
jb
lret
cwtl
test
xor
lods
orb
lods
cmpb
jbe
push
or
mov
xchg
rcrb
adc
jg
lcall
mov
pusha
or
cld
xor
stc
mov
dec
in
sbb
inc
loope
jmp
jns
mov
dec
nop
movsb
shl
cmp
fnstcw
and
hlt
je
push
decl
inc
mov
jno
inc
and
test
push
xor
call
std
lcall
pop
f2xm1
inc
test
mov
inc
scas
xchg
sti
movntps
mov
xchg
jge
shr
jecxz
push
jmp
push
outsl
mov
js
sbb
decl
and
push
mov
pusha
push
frstor
fldenv
mov
aas
jb
or
mov
insl
lods
mov
cmp
push
sbb
push
xlat
cmp
mov
sahf
pop
insb
mov
sbb
aam
adc
in
lds
aaa
mov
mov
cld
xlat
or
scas
cmpsb
ret
subl
pop
ja
lahf
test
xor
lcall
loop
inc
daa
xor
ffree
xor
insl
fidivrs
and
mov
lahf
clc
jecxz
lahf
in
sub
lea
push
jb
int
lock
pop
outsl
int3
cmpsl
mov
push
aad
mov
fwait
rclb
sbb
fmull
es
mov
scas
ljmp
lea
sbb
mov
mov
nop
int
and
cltd
jecxz
mov
sbb
push
out
jecxz
ljmp
cli
jnp
scas
pop
cmp
mov
jnp
xchg
push
mov
jo
scas
lcall
pushf
xor
sub
lret
xchg
cli
mov
mov
lock
sar
inc
ret
mov
aad
gs
mulb
adc
movsb
sahf
mov
ret
mov
cmp
mov
sub
or
and
into
push
mov
cmp
stc
stos
cld
data16
jmp
mov
mov
xor
mov
rorb
mov
pusha
xor
cli
roll
cmp
jne
jmp
ds
insb
stc
call
out
dec
ds
jge
lods
pop
sub
mov
faddp
and
test
fs
daa
jle
jns
push
aas
outsl
je
data16
jb
cmp
ficoml
incl
lret
imul
out
orl
mov
jmp
iret
mov
in
ret
out
pop
popf
decl
sarb
or
inc
xor
pusha
cwtl
xor
mov
scas
aaa
call
lret
xor
pop
sbb
sub
mov
mov
xchg
movsl
arpl
mov
mov
mov
sub
adc
pop
dec
shrl
dec
les
std
aas
dec
cwtl
lds
dec
push
push
insl
popa
mov
xchg
mov
cmp
scas
stc
cli
les
mov
fs
and
mov
decl
jmp
sub
mov
lcall
out
xor
insb
lods
movsl
xchg
out
add
sub
sahf
insl
int3
in
aam
pusha
es
gs
xchg
enter
push
dec
mov
fsts
add
hlt
clc
jp
adc
in
xchg
xor
ss
push
mov
jo
pop
adc
incl
lods
sbb
jae
mov
push
and
flds
test
call
inc
popf
cli
jmp
popf
add
mov
dec
sbb
dec
push
mov
in
sar
fistps
jp
mov
jge
or
mov
roll
ss
jmp
mov
lahf
lahf
dec
xchg
lods
insl
mov
scas
adc
loop
data16
dec
pop
nop
scas
mov
fbstp
fs
adc
arpl
out
cltd
in
mov
decb
loope
clc
jmp
jae
mov
test
enter
cmpsb
jl
cmp
push
popf
nop
inc
pop
mov
lcall
call
outsb
dec
push
sarl
cmp
cli
out
xchg
loopne
fptan
push
ss
add
cmpb
sbb
call
xchg
movsb
mov
std
dec
xor
andb
add
xchg
jb
mov
lret
idiv
fsubl
fwait
test
orl
or
out
push
xchg
popf
out
in
test
jbe
pushl
pop
ja
sbb
jae
jmp
mov
adc
out
mov
mov
cs
sbb
add
jmp
mov
repz
sbbl
mulb
adc
mov
outsl
nop
daa
sbb
incl
loope
pop
mov
xchg
push
das
orl
cwtl
mov
mov
cwtl
cmp
jo
stc
pop
nop
fisubrl
cld
idiv
incl
xchg
xchg
pop
mov
xchg
jne
arpl
pop
outsb
ds
pop
xchg
or
bound
add
dec
add
pop
pop
mov
div
sbb
inc
pop
decl
cmpsl
leave
mov
cmp
clc
dec
xchg
xorl
int
and
mov
pop
lcall
xor
and
sub
outsl
stc
imulb
outsl
sti
pop
js
mov
adcb
loope
push
jne
lock
adc
jle
or
xchg
andl
xchg
xor
leave
std
xchg
outsl
xor
push
xor
lods
cmp
js
loope
dec
jmp
or
mov
push
push
mov
out
rcll
les
aad
orb
jns
ljmp
in
dec
int
dec
adc
cmp
out
cltd
stos
mov
pushl
ret
ret
xchg
push
dec
and
sub
jge
push
jne
insl
sets
xchg
mov
mov
jmp
adc
sub
mov
sbb
push
ljmp
das
jp
mov
rol
cmp
sub
mov
dec
jae
punpckhbw
loopne
test
pop
repz
push
loopne
jmp
jne
pop
fstpl
push
pop
sbb
clc
ss
icebp
push
inc
outsl
jbe
or
add
xchg
std
inc
mov
jge
add
mov
test
add
push
xchg
xchg
outsb
mov
dec
xor
mov
mov
jg
jmp
mov
insb
lret
shl
data16
loopne
mov
xor
jmp
aaa
or
mov
jns
lods
movsb
xor
cli
inc
loopne
call
xchg
test
clc
pushf
adc
jbe
out
adc
decb
test
adc
orl
pop
xchg
jp
mov
mov
mov
push
jp
movsl
push
lret
into
inc
push
mov
and
or
add
dec
std
incl
test
fcoms
in
cld
fdivs
dec
into
jp
jne
stc
out
imul
hlt
out
push
sti
pop
push
or
mov
sahf
cmp
cwtl
leave
data16
arpl
test
cmp
ret
and
ja
cwtl
push
push
adc
jmp
lahf
stos
cmpsb
jle
incb
ljmp
sarb
mov
push
mov
in
aaa
sti
insl
pusha
xchg
ret
jge
aam
mov
test
fiaddl
testb
out
xchg
mov
mov
repz
decl
push
sbb
or
cwtl
or
mov
mov
leave
test
in
cltd
sub
pop
dec
int
ret
jp
enter
xor
add
icebp
call
mov
dec
mov
add
mov
shrb
sub
jmp
imull
add
int
jge
xor
mov
mulb
nop
add
and
and
aaa
sub
lock
in
les
shll
lea
pop
hlt
cli
rorl
out
dec
mov
scas
movsb
cmc
jg
iret
scas
xchg
shll
sub
stc
jmp
aad
ljmp
ret
test
push
inc
popa
clc
dec
mov
sarl
lock
and
dec
hlt
andl
gs
mov
addr16
fwait
imul
xchg
add
dec
add
mov
or
mov
jo
decl
std
mov
je
mov
lea
xchg
stos
fnstenv
push
fisubl
ljmp
add
cmp
cli
sbb
jb
scas
gs
loop
adc
jo
and
call
std
in
inc
fs
pop
jne
and
push
mov
fildll
ljmp
sub
mov
in
mov
xor
push
stos
popa
mov
fcoml
cmp
fs
ljmp
imulb
test
lds
or
call
sti
mov
sub
fimuls
xor
xchg
push
xchg
hlt
incl
mov
je
adc
mov
xor
add
push
int3
sub
sahf
fstl
test
ljmp
lods
sti
ja
call
jecxz
sub
mov
les
jg
lcall
fwait
sub
bound
jl
jg
xchg
mov
mov
and
jae
xchg
into
loopne
hlt
jmp
cltd
and
call
bswap
lods
mov
lcall
sub
aad
int3
pop
xor
sub
inc
fstps
push
xor
cmpsb
in
lcall
dec
mov
push
fdivl
dec
clc
push
and
fstpt
push
pushl
sub
les
dec
test
sub
xchg
jmp
jg
lock
ljmp
sub
dec
fistpll
mov
push
jle
dec
jl
cld
decl
je
sarb
mov
into
enter
call
test
pop
jbe
pop
int3
movsl
es
mov
loope
add
loopne
dec
scas
sbb
add
inc
ljmp
sub
mov
mov
or
jp
mov
leave
cwtl
dec
dec
add
iret
call
je
nop
push
mov
sbb
push
ljmp
mov
test
jl
cmp
or
mov
mov
loope
pop
mov
test
lcall
popf
jae
mov
or
lahf
bound
repz
mov
decl
adc
jb
xchg
mov
adc
adc
and
int
sbb
decl
mov
fwait
sub
les
cmp
xor
sahf
push
ja
incl
repnz
jecxz
xchg
cmc
iret
cmp
mov
out
sub
incl
adc
insb
pop
jl
lcall
add
jp
push
xor
cmpsl
cmc
pushl
loope
cltd
or
cs
faddl
insb
xlat
scas
iret
into
push
jg
xchg
scas
fldt
mov
inc
cld
add
mov
dec
xchg
sub
inc
cmc
roll
mov
and
jmp
stos
repz
jae
stos
sbb
jmp
pop
lea
adc
sbb
mov
out
popa
out
dec
loop
imul
outsb
incl
push
mov
adc
ljmp
call
fisubl
jnp
stos
jbe
jmp
fisubs
fcmovu
out
adc
inc
incl
fistpl
jl
jne
insb
add
lods
loopne
pushf
sub
cltd
js
adc
jmp
mov
out
lret
push
rclb
jae
loope
cmp
push
lock
data16
jg
data16
mov
sbb
ret
push
das
sarl
gs
lahf
cmp
cmpsb
incl
mov
cmp
jbe
lcall
nop
jge
xor
pop
pop
aas
jp
mov
xchg
pop
jae
jg
inc
add
and
jle
dec
mov
or
fyl2xp1
enter
xchg
inc
outsb
movsl
sbb
call
push
jp
mov
add
xchg
dec
push
pusha
cwtl
xchg
stos
std
cmpsb
pop
mov
xchg
adc
dec
mov
xor
outsl
je
faddl
jbe
jb
jno
fiaddl
and
in
fisubs
hlt
or
je
add
jns
push
mov
aas
lds
lock
stos
into
stos
roll
push
fsubl
sbb
sbb
loopne
enter
repnz
das
xor
pushl
iret
lds
xchg
add
push
inc
lods
divb
jle
daa
cmpsb
insl
lahf
stc
fnsave
and
prefetch
or
mov
mov
nop
movl
push
add
xlat
add
js
outsb
addr16
clc
pushl
xor
xchg
xchg
cmp
inc
test
cmc
cwtl
fildl
jge
pop
insb
incl
jecxz
mov
dec
fsts
jns
cltd
cmc
and
out
aam
xchg
cmp
push
inc
cmp
ljmp
es
lea
dec
lods
push
mov
arpl
loope
es
mov
incl
in
inc
add
outsl
and
out
xchg
lret
add
into
and
ret
pop
xchg
add
decl
addr16
xchg
dec
add
lea
xchg
std
add
xlat
inc
pop
je
rcll
sub
push
push
mov
sarb
sub
test
into
push
inc
ljmp
cmp
repnz
xor
mov
mov
mov
call
push
xchg
ja
outsb
add
cmp
pop
push
and
xchg
ljmp
lcall
add
lret
lahf
inc
jmp
and
repz
popf
pop
and
lret
cmp
push
cmp
jmp
dec
and
xchg
into
aad
jmp
dec
push
jecxz
scas
push
scas
xchg
mov
mov
js
movsl
inc
pop
nop
cli
pushl
add
ret
inc
push
sub
push
cmp
cmp
clc
xlat
cmp
mov
ret
xchg
sub
fisubs
mov
inc
shl
dec
loope
fdiv
mov
test
loopne
xor
cli
push
sub
mov
test
mov
scas
gs
ret
cli
cwtl
and
cmc
popa
leave
out
clc
sti
jg
pushf
out
pop
outsb
mov
and
cli
stos
jns
dec
xchg
push
daa
pushl
ljmp
sub
stos
or
sub
adc
out
xor
push
scas
clc
xor
lret
subb
ret
lahf
adc
stos
testb
jge
inc
mov
das
inc
add
call
sbb
push
call
cmp
add
mov
decl
loopw
repz
lret
pop
popf
or
cmp
in
loopne
cmp
xlat
out
daa
cmp
cmp
adc
jb
lcall
aad
shrl
xchg
test
clc
jmp
mov
xchg
les
scas
inc
fiadds
fucomip
call
pop
mov
jp
nop
ljmp
popa
push
mov
es
fpatan
es
add
in
and
scas
mov
stos
in
xor
call
sbb
cmp
ret
lcall
cltd
adc
cld
shr
mov
ret
jl
lcall
insl
xchg
flds
mov
gs
les
inc
int
repnz
out
mov
xchg
add
std
cltd
jmp
ss
pushf
fadds
jp
int
mov
mov
lret
std
adc
leave
in
xor
aaa
std
jmp
nop
test
stos
rcrb
std
fistpll
xor
out
sub
push
sarl
mov
out
cmpsl
push
cld
cmpsb
aas
sar
incl
adc
fstpt
js
inc
pop
aas
adc
cs
popf
pop
insb
push
ljmp
or
inc
ret
xchg
fisubl
hlt
inc
inc
stc
push
xor
aam
dec
mov
xor
and
clc
push
scas
and
lds
push
adc
add
cmp
push
or
pop
cmp
sbb
mov
mov
xor
inc
cmp
decl
and
cmp
jb
outsb
mov
xchg
mov
jno
jne
stos
mov
cmpl
repnz
fs
lods
mov
xchg
adc
jmp
mov
decl
lret
clc
or
fcoml
int
push
orb
mov
push
vmovntps
push
popa
push
cmp
xor
push
ljmp
xor
fcoms
mov
sbb
xchg
or
das
clc
pop
pop
adc
mov
dec
into
popf
or
pop
rep
daa
sub
push
or
lcall
popf
shlb
insb
sub
icebp
js
movsb
repnz
add
pop
inc
xchg
push
sbb
in
lcall
les
push
jle
jmp
dec
push
test
movsb
scas
adc
lods
cmpsl
xor
cmp
pop
incl
stos
cs
add
mov
shll
mov
pop
popf
ret
or
idiv
call
testl
jae
and
xor
pop
xchg
testl
rolb
pop
or
outsl
mov
iret
jne
adc
das
stos
jl
mov
mov
jp
ja
fs
incl
cmpsl
sbb
mov
fildl
loope
movsb
mov
sub
call
rorl
cld
pushl
sbb
shlb
xchg
pop
jge
dec
int3
insb
mov
inc
add
push
add
add
not
push
insl
fildll
xchg
mov
mov
cmpsb
sbb
cmp
filds
aad
push
dec
push
pop
je
xchg
cmp
popf
hlt
pusha
jae
enter
imul
jmp
and
lock
push
xchg
ja
sti
jns
loope
sub
xchg
jne
fistl
push
jns
xor
mov
pop
sbb
sub
movsl
lods
ret
mov
add
pushl
push
and
mov
pop
push
xor
aas
mov
pop
pop
les
push
cs
decl
mov
cmp
in
add
sbb
jge
pop
aad
int3
xor
fnstenv
fcomps
adc
adc
push
das
xchg
cld
sbb
inc
imul
jmp
mov
insl
imul
dec
and
icebp
push
stos
or
ret
jmp
and
insb
or
dec
mov
or
js
rcrl
lods
jl
cmp
or
add
adc
pop
nop
out
mov
or
mov
pop
and
scas
mov
decl
fistpll
add
cmp
mov
push
lahf
cld
inc
bound
xchg
sarb
ret
or
pop
add
pop
notl
push
jmp
mov
lock
sarl
sub
loope
subl
xor
leave
xchg
scas
pop
fisttpl
pop
out
or
or
fs
bound
fldl
hlt
dec
xor
push
fistl
movb
mov
adc
or
jo
hlt
into
ja
jg
cmp
lcall
adc
mov
stos
loop
push
andb
cmp
jg
testb
pusha
aad
out
xorps
xchg
insb
das
mov
and
lcall
mov
or
aad
lcall
std
dec
cmpsl
addr16
les
hlt
add
cmp
popf
aam
inc
out
cli
ss
xlat
cli
cmc
lahf
lea
mov
mov
loop
stc
adc
je
imul
and
xchg
lcall
fmulp
sbb
rclb
cmp
or
fs
mov
inc
cmp
jne
jle
jmp
ja
xlat
mov
rcrl
xchg
orb
mov
std
xlat
cltd
jnp
pop
clc
pop
aam
adc
or
movsl
mov
dec
jbe
popf
into
xchg
push
nop
jmp
jle
lret
in
jg
jl
and
insl
xchg
es
lods
aad
or
lcall
sbb
mov
shl
cld
loop
jnp
or
pop
sbbb
xchg
incl
push
rcrl
movb
into
ret
imul
adc
aad
aaa
push
decl
lock
dec
hlt
push
cmpsb
out
cmp
adc
popf
roll
pop
cmp
pushl
cli
xlat
loopne
inc
add
inc
cwtl
scas
addl
inc
ja
cmp
push
push
jno
or
das
cli
mov
lcall
icebp
jl
leave
pop
ds
cmc
in
in
lods
adc
clc
mov
adc
iret
push
and
push
lea
sbb
add
subl
and
pop
dec
mov
pop
mov
pop
jg
xchg
jo
jle
dec
repz
cmp
into
sub
js
mov
sbb
hlt
adc
dec
imul
sub
xor
push
orb
loop
andl
bound
jge
into
or
stos
cmp
jmp
mov
lock
push
mov
out
inc
test
mov
adcl
or
sar
jb
mov
mov
push
ret
or
out
iret
lahf
rcl
int3
jg
mov
rorl
push
in
ret
adc
sbb
xchg
add
dec
push
clc
mov
decl
sarl
rclb
aad
aas
icebp
sarb
cmp
outsb
mov
lret
add
mov
xorl
lret
and
call
inc
adc
xchg
stos
dec
test
lods
inc
dec
fisubl
negl
enter
pop
in
test
cmpsb
andb
in
aas
and
sbb
jl
dec
stos
push
aad
add
fdivp
fcoml
pop
adc
push
xchg
cwtl
dec
pushf
ja
jne
cld
or
sub
mov
hlt
cmpsb
sub
add
sbb
cld
add
ss
in
dec
bound
cmp
sbb
jbe
jp
outsb
dec
xor
adc
fdivl
xlat
sub
out
mov
cld
push
into
xorb
mov
sub
scas
out
jno
cwtl
rorb
clc
aaa
leave
pop
stc
push
mov
cmp
xchg
jns
arpl
mov
js
inc
cs
jg
popa
mov
insl
call
repnz
je
mov
push
xchg
gs
mov
push
call
mov
cld
stos
bound
les
ljmp
js
ret
push
adc
push
pushf
push
rol
outsl
cs
call
arpl
push
test
ss
fnstsw
jo
js
or
out
call
aam
add
or
adc
inc
adcl
jle
sub
mov
ret
lar
data16
adc
xor
cmpsb
jnp
filds
push
data16
std
iret
insb
push
sbb
decl
xchg
fdivl
sbb
les
cmp
dec
cmp
pop
mov
mov
sahf
xchg
jg
insl
sub
in
xor
xor
insb
cli
pushl
sub
pop
inc
dec
or
add
clc
shlb
inc
fsubrs
call
dec
xchg
add
or
aaa
ja
inc
pshufw
add
sti
mov
pushl
mov
test
jmp
insl
dec
in
hlt
and
fmul
test
jle
mov
add
roll
xor
stos
sub
inc
arpl
decl
lock
fs
push
int3
shrl
rcll
sub
repz
into
lcall
inc
jns
inc
push
adc
pop
div
mov
jmp
mov
insl
ud1
dec
dec
fistps
mov
push
push
mov
or
clc
fwait
int
inc
das
insl
cmp
fldcw
rcll
outsl
out
mull
adc
fwait
decl
xchg
fs
shlw
int3
mov
scas
addr16
mov
jmp
ljmp
into
mov
mov
xchg
pop
inc
sbb
push
pop
rorb
cmc
out
xchg
pop
ja
lods
lcall
les
movsl
clc
pusha
xchg
pop
or
sub
push
xor
mov
decl
xor
push
daa
insl
stos
ds
and
pop
push
or
dec
push
ja
in
ficomps
incl
mov
mov
adc
aad
loope
icebp
mov
xchg
loopne
jp
das
add
bound
mov
loop
cmp
std
mov
mov
in
adc
jmp
xchg
mov
push
jg
jge
loopne
rcl
and
mov
call
in
mov
ret
std
and
xchg
fs
xor
mov
clc
incl
stos
das
ret
cmp
lds
jo
push
mov
sub
dec
popa
bnd
repz
out
jle
in
dec
mov
sbb
test
movsb
inc
test
hlt
mov
mov
sbb
in
xorb
fs
push
mov
out
mov
pop
call
jns
or
lcall
out
pop
int
aam
mov
sbb
adc
pushl
dec
jbe
hlt
sbbb
popf
les
xchg
mov
mov
inc
mov
inc
rorl
push
xchg
das
pushl
inc
idivb
dec
fsubrl
push
stos
clc
emms
inc
scas
ss
add
pop
push
pop
imul
ret
xchg
xchg
and
push
int
aas
pop
roll
mov
mov
popf
and
nop
dec
add
aad
popf
sti
xchg
test
mov
cwtl
adc
movsb
and
loope
call
enter
sti
mov
in
mov
add
mov
push
outsl
cmp
or
inc
loopne
pushl
xchg
jmp
sbb
and
in
jl
scas
xchg
dec
insl
pop
test
and
mov
arpl
push
or
dec
sbb
arpl
into
aaa
pop
stos
jge
cld
stc
das
cld
pushl
dec
mov
dec
jbe
insl
clc
add
mov
mov
push
in
sahf
pop
xor
jg
and
data16
pop
int3
push
pop
mov
ret
fiaddl
fstps
push
cmpb
adc
mov
inc
push
jnp
sub
mov
ljmp
mov
cmp
adc
mov
lods
and
pop
jecxz
jmp
lcall
mov
nop
push
leave
dec
lahf
imul
fdivs
pop
divl
jmp
fsubs
cmp
lahf
hlt
scas
fprem
mov
xor
int3
cmp
cmp
xchg
mov
add
and
pushl
pop
shl
cmc
and
add
fists
movsb
fildll
test
mov
cs
lcall
ss
xchg
bound
je
jno
insb
xor
adc
jl
testb
add
jg
jmp
leave
sahf
lea
fimull
xchg
inc
test
js
add
stc
clc
incl
rol
dec
subb
outsl
test
aaa
mov
test
jne
loop
mov
push
incl
sti
push
xorb
lret
ss
and
mov
mov
push
mov
push
pop
mov
repz
imul
sbb
jecxz
jl
mov
xlat
ds
repnz
push
add
adc
shll
stos
mov
cs
cmp
jnp
jmp
jle
sti
pushl
push
inc
rcl
mov
divl
fistpl
loope
mov
jle
aas
pushf
pop
inc
stos
lods
mov
daa
jbe
push
and
decl
push
aaa
adc
js
das
mov
rclb
sbb
mov
das
hlt
sti
cmp
test
add
pop
mov
mov
cmp
mov
mov
jbe
filds
fildll
sub
jbe
pop
lahf
iret
insl
mov
sub
mov
sub
lea
xchg
pop
xor
loopne
sub
push
sahf
inc
mov
jo
in
pushl
push
ret
int3
push
jmp
or
rcrl
cmpsb
mov
pop
cmc
call
movsl
hlt
scas
or
pusha
aam
test
cld
add
pushl
xchg
jo
movsb
push
or
adc
mov
cld
mov
bound
arpl
sub
pushf
mov
mov
xchg
pushl
xor
sub
mov
push
sub
mov
ljmp
mov
lock
call
loope
cltd
scas
lahf
push
jecxz
jbe
scas
jo
mov
mov
add
inc
movsb
daa
out
outsl
add
mov
xchg
jp
pop
loop
sbb
aas
mov
in
stos
pushl
js
enter
push
mov
pop
movsl
call
mov
loope
cmpsb
inc
out
sbb
pushl
lock
push
mov
jae
std
pop
add
push
inc
lea
push
loopne
lcall
xor
xor
mov
and
bound
fidivs
adc
fisubrl
lea
add
decl
hlt
popf
pop
lock
dec
mov
or
adc
mov
mull
mov
jmp
stos
lcall
jecxz
cltd
mov
fisubrl
popa
fisttps
pop
sbb
in
or
shlb
jmp
stos
dec
mov
das
cmpsl
sub
xor
push
or
xor
loope
cmp
pushl
fs
push
mov
enter
mov
test
aam
jle
jle
sub
icebp
xchg
mov
lret
sbb
pop
out
jge
xor
pop
cs
pop
std
or
pop
fmull
mov
jp
enter
mov
xorl
ret
dec
jg
int3
iret
lret
imul
lods
sbb
test
sbb
js
xchg
inc
movsb
xor
data16
mov
xchg
insl
push
pop
pop
clc
xchg
sub
fnsave
icebp
dec
xchg
pop
pop
fwait
pop
pushl
aad
jbe
jl
push
inc
and
xchg
pop
outsl
loope
xorl
mov
mov
adc
repnz
push
addr16
mov
inc
pop
fcomip
ljmp
lods
adc
cmc
pop
mov
cmpsb
adc
out
pop
mov
mov
jb
pop
xor
xchg
jo
jbe
int
add
aaa
mov
xchg
adc
ljmp
out
push
imul
sahf
ja
jp
call
roll
pop
push
push
jb
xchg
lea
add
out
push
out
loope
add
test
inc
mov
mov
shrl
mov
lcall
imul
decl
xor
dec
adc
push
or
push
int
lret
stc
jecxz
incl
pop
or
mov
push
out
lods
lret
adc
aad
cmc
idivb
push
mov
imul
idiv
lcall
add
push
mov
or
push
or
mov
stos
pop
jae
jge
pushf
lret
push
jp
lods
dec
mov
lcall
rolb
push
test
mov
addr16
xor
adc
adc
add
dec
mov
sbb
movsl
aaa
mov
mov
pop
sbb
jecxz
test
bound
cmp
mov
mov
enter
idivl
icebp
loope
getsec
mov
mov
and
outsl
clc
or
cmp
xchg
xor
add
adc
lcall
out
iret
or
sti
movsl
pop
mov
lods
jp
leave
pop
add
popf
pop
loop
adc
in
decl
xchg
in
xchg
int
icebp
cmpsb
nop
out
aaa
std
inc
inc
and
push
or
cmp
push
add
cmp
pop
sbb
adc
sbb
push
or
lods
insl
dec
fidivs
inc
arpl
add
call
mov
lret
sti
pop
xchg
jne
xlat
pusha
cmp
test
dec
in
jo
scas
stc
mov
scas
rclb
jg
lock
sub
mov
adcl
mov
adc
lret
out
psubq
fisttps
clc
xor
mov
into
lret
paddw
add
cld
mov
mov
in
lock
testl
lahf
adc
scas
push
es
cmp
mov
decl
jns
mov
sbb
xlat
or
sub
push
mov
mov
mov
dec
inc
movsl
negl
and
shlb
and
or
mov
jns
call
les
js
xchg
pushf
rorb
cmp
les
xor
test
testb
mov
add
jmp
jmp
cld
push
mov
pop
add
aam
sub
pushl
jae
pop
arpl
sti
sahf
push
mov
cltd
les
add
sbb
cmp
inc
incb
faddl
lcall
cld
stos
adc
das
mov
mov
outsb
movsl
lcall
xchg
popa
into
pop
xor
fisttpll
push
cltd
lock
ljmp
mov
shlb
dec
xchg
sub
xchg
hlt
xor
andb
flds
adc
ljmp
ret
xchg
fwait
inc
adc
mov
repz
pushf
movsb
fwait
lea
jg
fld1
scas
les
inc
mull
bound
ret
imul
mov
sti
subl
std
jmp
lods
xchg
adc
xchg
pop
pusha
or
mov
pause
push
mov
out
or
xor
sub
push
xchg
repnz
dec
mov
ja
pushl
outsb
sbb
insb
lods
xchg
test
subb
fmuls
xchg
sbb
aaa
sarl
lcall
jbe
lahf
test
push
dec
idivl
or
rolb
pop
push
jmp
fnstsw
shll
shrl
imul
aad
adc
pop
mov
rolb
fcompl
jns
and
ljmp
outsb
cmpsb
mov
pop
sbb
xchg
ja
inc
jg
mov
push
clc
cmp
fcomip
jmp
lret
popa
mov
ss
mov
fidivrl
add
pop
in
sbb
push
xlat
es
mov
cmp
inc
sbb
sub
pushf
xchg
jp
xor
out
push
mov
pusha
outsl
notb
pusha
and
out
and
int
lock
decl
dec
popa
sar
insl
mov
pop
add
ds
ljmp
hlt
lds
cmp
mov
push
test
push
xor
or
pop
inc
loope
pop
mov
sbb
test
nopl
popa
mov
mov
push
test
xchg
push
jg
mov
adc
cld
sahf
jnp
pop
xchg
jge
add
xor
in
lcall
enter
insl
bound
enter
sarb
out
icebp
xchg
movsb
push
adc
inc
fwait
shrb
fwait
bsr
addr16
cmpsb
lods
add
dec
adc
adc
pop
movsb
lcall
gs
cmpsb
jno
sub
push
inc
ds
push
or
ljmp
incb
js
out
inc
and
add
clc
imulb
mov
lret
decl
movsl
ja
sub
mov
shr
xchg
data16
mov
sahf
push
orl
lret
pushf
movsb
xchg
adc
aam
out
sbb
jmp
dec
push
ds
sub
jno
std
int
dec
lds
test
xchg
punpckhwd
cwtl
dec
and
repnz
es
incl
push
add
cmp
xchg
jmp
and
mov
mov
scas
dec
cld
or
add
dec
xchg
adc
sbb
mov
dec
inc
aad
sahf
sbb
mov
into
sub
mov
pop
pop
enter
lods
fmuls
xor
and
push
in
dec
sar
incl
sbb
add
or
pusha
xchg
test
lea
or
add
inc
inc
sub
ret
inc
cli
imul
inc
adc
sbb
pop
and
loope
aam
push
push
call
ljmp
rorb
sbb
sub
shlb
es
sub
ja
sbb
mov
out
insl
push
mov
add
jp
cs
push
jnp
test
jmp
or
adc
jp
imul
or
mov
and
incb
mov
sbb
in
imul
mov
decl
adc
inc
sub
lock
sub
add
fwait
sub
lea
adc
or
std
fidivrs
leave
jbe
cld
lret
mov
daa
mov
in
inc
icebp
jns
and
jmp
aaa
push
jl
adc
test
pop
pop
inc
cmc
in
sbb
out
clc
jg
hlt
sbb
and
hlt
es
and
fmuls
xor
pop
call
mov
xor
or
sbb
xchg
stos
or
add
test
std
dec
mov
aaa
stos
dec
dec
rorl
pop
sub
adc
decl
hlt
test
push
cmpsb
cli
out
lods
incb
push
data16
jg
add
pop
xor
pop
call
clc
adc
fisttpl
jne
ljmp
mov
pop
sub
pop
popa
pop
test
rol
mov
add
inc
lcallw
cld
pusha
jle
xor
rorl
lods
xchg
mov
pop
frstor
fisttpl
fcomip
pushl
stos
adc
jns
xchg
mov
fidivrl
mov
sub
ret
xchg
dec
ss
or
ljmp
mov
sbb
cmp
xor
gs
test
lcall
dec
xlat
inc
jae
adc
pop
inc
push
pop
or
arpl
sti
or
sahf
jns
ljmp
cmp
lcall
inc
mov
push
out
xchg
xor
jmp
and
incl
and
je
dec
jmp
inc
cmp
and
stos
add
lret
jnp
mov
push
cltd
bound
aaa
js
in
ja
pop
or
inc
decl
in
lcall
gs
loope
mov
in
shl
and
jmp
adc
ljmp
and
in
jle
aad
outsb
xchg
pop
ss
inc
aam
add
or
shr
stos
xchg
int
cmp
rorb
cwtl
sti
dec
fldl
sarl
and
sbb
call
cmp
data16
xor
jae
into
xor
mov
stos
adc
jae
lcall
test
adc
das
pop
out
nop/reserved
testl
or
mov
mov
aas
pop
sbb
cmp
cmp
xchg
ljmp
sti
clc
jo
pusha
mov
pop
mov
call
push
inc
mov
nop
pusha
cli
and
out
movsb
ss
or
dec
ljmp
mov
and
jns
pop
gs
sysexit
mov
sub
out
int3
lahf
frstpm(287
fistps
lahf
or
lock
sub
jg
push
movsl
pop
sub
mov
mov
adc
cmp
mov
out
push
inc
ljmp
ljmp
mov
dec
nop
mov
adc
arpl
faddl
loope
mov
pushf
and
decl
call
adc
iret
icebp
adc
inc
popa
mov
test
add
cmp
mov
adc
add
decl
repnz
mov
movsb
stos
adcl
test
sub
jge
mov
dec
xchg
xchg
and
mov
dec
xchg
es
pop
jl
sti
jg
fstps
add
mov
loope
sbb
mov
divl
dec
xor
decl
mov
cmp
mov
lahf
fmull
test
ljmp
nop
enter
and
and
mov
dec
clts
in
aaa
and
mov
sbb
stos
das
push
sbb
mov
js
mov
jle
mov
jmp
mov
es
jmp
cmc
dec
arpl
jb
ljmp
fwait
inc
stc
lcall
pop
push
push
mov
add
aaa
outsb
pusha
es
nop
xchg
push
xchg
call
in
xor
in
pop
jmp
std
push
cmp
scas
and
sub
mov
cmp
xchg
das
cmp
movsb
cltd
sub
ljmp
jnp
lods
jb
pusha
push
jle
cmp
pop
in
rorl
dec
cli
ss
call
std
push
outsl
dec
sub
scas
sub
pop
ret
sbb
sbb
arpl
mov
mov
int3
pop
addl
cmpsb
cmp
ljmp
mov
mov
in
pop
ud0
decl
xchg
cltd
push
cli
cmpsb
and
ljmp
aas
xor
pop
sbb
aaa
mov
sbb
enter
jmp
mov
mov
mov
cmc
adc
mov
imul
xor
add
sar
ljmp
mov
pop
jo
stos
cltd
jg
cmp
inc
sub
shlb
mov
inc
push
mov
fcomip
cmp
test
fdivrl
mov
xor
add
hlt
test
dec
xchg
call
cmp
pop
shrl
jb
xchg
imul
mov
sub
mov
fdivp
mov
push
sbb
xor
ja
xor
pop
sbbl
cmp
dec
int3
js
mov
arpl
xor
int3
btr
push
sub
pushf
mov
pushl
and
and
inc
jmp
movsb
jbe
dec
pop
or
call
add
out
jp
clc
cmpsb
pop
push
inc
push
dec
pop
pop
movsb
pop
mov
fidivl
into
adc
call
fdivs
aad
js
cmc
push
adc
jmp
dec
xor
in
or
ljmp
and
or
xor
dec
jge
je
pop
insl
andb
inc
mov
jmp
into
in
fiadds
xor
cmpsl
and
push
or
and
cld
push
mov
jmp
push
repnz
ret
dec
and
std
roll
and
or
push
ds
aaa
in
insb
lods
or
mov
dec
jb
push
ljmp
jl
imul
mov
movsl
outsb
nop
mov
rorb
xchg
jmp
out
call
lea
add
cmc
lods
mov
mov
add
incl
adc
les
ror
cmp
mov
shlb
out
imul
out
mov
xor
adc
inc
out
push
lods
std
fnstcw
xchg
sbb
jb
mov
mov
ret
nop
mov
cld
and
arpl
cmp
mov
cmc
negl
ja
rolb
outsl
and
jbe
enter
pushl
test
lods
push
icebp
pop
pop
enter
loopne
adc
adc
inc
mov
incl
sub
sbb
sub
xchg
jae
push
nopl
and
lret
dec
roll
push
sbb
loopne
jmp
rol
cmc
pop
lea
incl
sbb
hlt
lret
sub
sub
push
xor
jno
gs
jo
push
decl
dec
fs
cmpsb
mov
repz
icebp
push
gs
aas
or
call
loop
pop
cmp
icebp
sub
adc
mov
lock
push
mov
ja
ljmp
xlat
add
mov
push
add
adc
ss
or
xor
dec
adc
jmp
test
mov
sub
ret
bound
cs
push
xchg
jl
jmp
pusha
mov
int
cltd
mov
inc
jge
jo
lock
jg
adc
call
int3
aam
xchg
push
mov
mov
cs
xor
cmp
aad
jge
nop
lds
pushfw
nop
mov
mov
in
xchg
jmp
adc
ds
sub
sub
roll
or
dec
pushl
stc
jp
mull
jae
sbb
pop
inc
je
pop
lods
inc
ss
jg
adc
mov
imul
jmp
mov
mov
pop
pop
negl
push
xchg
xchg
push
lret
and
insb
jecxz
stos
daa
data16
jg
fsubrs
xchg
aaa
std
cmp
xchg
mov
fisubrs
daa
jbe,pt
sbb
movsb
adc
pop
dec
push
add
jmp
add
fiadds
sarl
rcrb
ret
pop
or
jmp
int
pushl
sbb
jbe
pusha
inc
call
mov
push
and
add
stos
mov
addl
jmp
repnz
push
aaa
mov
sub
pop
xchg
push
insl
cmp
jg
inc
jb
inc
mov
jne
inc
inc
dec
les
adc
mov
movsb
mov
and
dec
pop
jne
adc
fnsave
xchg
pop
test
sti
pushl
out
orl
cmpsb
or
mov
jne
jmp
enter
cmpsb
insl
ljmp
fldenv
vaddsd
inc
add
popa
test
xor
push
fsubrs
jmp
les
cmp
lods
pushl
push
data16
dec
ja
sahf
pop
js
jo
jg,pt
pop
fisubrs
int3
push
into
mov
pop
pushf
mov
shrl
xor
add
cmpsl
daa
jg
cmp
push
outsb
fdivs
sbb
iret
or
loopne
in
jg
aaa
dec
cmove
loope
jecxz
mov
push
lods
loop
fsubp
sub
pop
sub
jmp
mov
xchg
mov
js
addr16
xchg
jno
jmp
and
adc
xchg
mov
mov
push
lret
or
loopne
sub
cwtl
xchg
in
ljmp
cld
shl
jle
push
fimull
jge
aam
add
lret
arpl
jmp
aam
pop
xchg
cmpb
movsb
ljmp
jge
xorb
imul
call
repnz
inc
aaa
test
insb
sub
jecxz
cmpsl
mov
xchg
stc
mov
mov
sub
jb
ljmp
pushl
lock
cmc
mov
sbb
int3
divb
sar
jnp
sub
mov
daa
lret
mov
push
sti
int3
shrb
push
inc
jg
mov
push
add
xor
sbb
fimull
push
jg
lret
popa
inc
fcoml
data16
mov
pop
rcll
push
sub
incl
and
cmc
adc
jb
xchg
adc
sarb
and
mov
adc
lds
dec
lahf
mov
xchg
ja
pop
fbld
add
jecxz
mov
lds
fdivr
jnp
in
pushl
lret
lods
popf
mov
pop
add
movsl
mov
mov
or
lcall
push
cltd
sub
xor
iret
mov
test
fcos
dec
xchg
mov
adc
outsb
loope
lock
xor
cmp
lds
lcall
push
scas
lods
dec
pop
jno
cmc
lods
out
push
push
int
jg
fisttps
pusha
inc
adc
adc
xchg
imul
test
pop
decl
roll
adc
in
popa
popf
dec
dec
int3
sbbl
jmp
jbe
mov
fdivrp
mov
jmp
xor
jbe
mov
pop
adc
adc
incb
xor
enter
jg
adc
cmp
mov
frstor
adc
jmp
test
stos
xchg
inc
ret
sub
and
pop
mov
enter
dec
lds
ljmp
sbb
lcall
sbb
adc
add
jmp
lock
fistl
arpl
outsb
pop
enter
mov
not
and
gs
insl
loope
adc
push
arpl
lcall
stc
idivb
push
orb
sub
add
fbld
cld
xchg
lret
int3
xor
xchg
clc
pushl
ret
or
test
sbb
push
fistl
push
dec
sbb
or
mov
mov
or
fnsave
js
xor
pop
mov
lea
cwtl
fsubs
inc
test
xchg
mov
jno
mov
push
cltd
es
loopne
or
sbb
in
imul
call
push
out
or
push
sub
add
dec
mov
clc
call
icebp
out
test
and
aam
xchg
lock
inc
and
pop
inc
cmp
bound
lods
fbstp
fists
in
mov
sbb
or
out
lret
sub
or
loop
nop
lea
enter
idiv
ljmp
mov
xor
into
pop
test
pop
fcompl
dec
xor
or
mov
xor
and
or
in
pop
cmp
int3
pop
fst
aas
stos
add
jg
ja
lcall
popa
ss
xchg
out
push
in
dec
mov
xchg
sbb
mov
push
sarb
ja
mov
mov
jbe
sub
mov
call
and
add
or
decl
jl
push
lds
testl
jg
test
cmpsl
call
mov
mov
adc
dec
xlat
loope
data16
test
add
inc
movsl
sbb
xchg
xchg
jle
aas
mov
lcall
lcall
mull
sbb
mov
sbb
ja
cwtl
push
fwait
sub
push
add
mov
or
hlt
mov
jns
shl
mov
leave
cmp
lea
ljmp
scas
jo
or
xor
daa
int3
pop
xor
mov
in
insl
push
push
add
cwtl
sub
or
fidivl
and
cmpsl
lock
dec
call
loopne
sub
loopne
jo
xchg
mov
rcrl
mov
xchg
add
leave
in
iret
dec
shlb
aam
sbb
mov
nop
loopne
sar
ljmp
cmp
xorb
cmpsb
pushf
push
enter
mov
or
dec
lret
pushl
outsb
nop
sbb
cmp
shrb
add
jnp
aas
lret
inc
and
xor
pushl
mov
xlat
lods
popw
ficoml
lret
cli
dec
mov
add
test
jmp
rolb
pop
mov
mov
leave
in
push
lret
adc
xchg
in
mov
movsb
mov
jg
rcrb
inc
dec
rcrb
mov
and
push
fstpl
fistl
pop
sbb
jmp
add
stc
inc
loopne
fadds
xchg
pop
ljmp
mov
push
sub
in
mov
aam
leave
push
dec
cmp
pop
pusha
push
sub
ljmp
aam
xchg
movsb
and
adc
lret
ljmp
ljmp
aaa
sahf
int3
pop
pop
repz
icebp
inc
xchg
ljmp
clc
pushl
jg
in
testb
decb
xchg
movsb
insb
stos
cltd
aad
mov
ret
ficompl
pop
fmull
dec
icebp
sub
or
xchg
cli
mov
xchg
xor
fwait
mov
out
fsubr
ds
cs
popa
cmpsl
push
ljmp
cmp
jno
pop
pop
outsb
sub
mov
das
repz
adc
into
icebp
decl
cmp
ja
in
lods
jno
dec
imul
push
push
ficoms
mov
incl
mov
push
jb
pop
movsl
jns
popa
or
dec
fnstsw
sub
idivl
cmp
and
jbe
push
xchg
imul
push
repnz
shrl
rcll
pushl
push
lods
xor
in
fcmovbe
ja
out
mov
fstpl
dec
xchg
dec
fstpl
inc
push
jne
leave
jb
in
subb
xchg
cmc
and
mov
and
dec
inc
popa
add
or
mov
xor
addb
mov
push
mov
add
xor
xor
sub
xor
mov
hlt
mov
jne
imul
mov
push
xor
lods
cmp
popa
cltd
xchg
cwtl
pop
sub
push
mov
or
mov
sub
fadd
stc
cli
lcall
xchg
and
fnstsw
inc
push
ud2
push
ss
pop
test
mov
test
aam
in
movsl
mov
jno
incl
orps
xchg
daa
rorl
pop
xchg
ficomps
push
insb
push
in
popa
fdivrp
jmp
pop
hlt
pop
ja
fmul
and
out
frstor
gs
and
sbb
fsubp
pushl
ret
rcrb
cmp
loop
lcall
mov
fidivl
jo
gs
mov
shlb
icebp
das
push
loopne
cmp
icebp
xchg
sbb
jmp
or
dec
sub
xor
add
inc
inc
stos
pop
lock
mov
push
lcall
call
rorl
sbb
and
mov
int3
push
dec
push
mov
lahf
jecxz
lret
addr16
mov
out
call
std
lock
mov
lret
cltd
push
clc
inc
test
popa
leave
mov
mov
loope
ffree
xchg
xchg
push
pushl
mov
cmpl
mov
mov
mov
jmp
mov
mov
icebp
test
nop
sub
jb
adc
xchg
dec
cmp
jmp
push
fdivrs
addr16
pushf
movsb
in
push
or
xor
pusha
data16
pop
call
cld
bound
popf
mov
mov
pushf
mov
test
cmpsb
xor
incl
mov
rclb
das
pop
xchg
xchg
mov
cld
inc
dec
jg
adc
jg
ljmp
cmpsb
cli
imul
sub
xchg
lcall
pushl
out
sbb
push
xchg
mov
xchg
cmp
adc
je
sub
lcall
mov
jp
or
hlt
and
lret
imul
out
or
adc
jmp
lret
aas
xor
mov
in
rol
fiadds
xchg
pop
pop
mov
popa
repnz
lcall
add
pushf
mov
lods
fisttps
add
dec
ja
js
push
push
jmp
clc
ja
jae
pushf
shrb
push
nop
xor
mov
inc
lock
mov
mov
mov
jp
xor
cmp
lock
sub
or
mov
mov
mulb
xchg
sbb
jnp
stc
cli
adc
test
jns
movsl
xchg
subb
sub
cmp
mov
lcall
jmp
fwait
repnz
dec
sbb
fldcw
arpl
lea
movsb
and
fimuls
push
popf
in
jmp
fimuls
xor
lret
clc
mov
push
fistpll
pop
hlt
insb
pushl
jno
inc
mov
push
cli
cmp
int
iret
cltd
adc
loop
inc
mov
mov
mov
mov
fldt
push
sub
inc
fisttpll
lret
loope
lret
xlat
mov
jecxz
mov
push
jmp
xchg
mov
aad
push
pop
fwait
add
xor
int
cmp
incl
gs
adc
jle
cmp
mov
fiadds
jmp
xorl
xchg
adc
xor
xor
mov
lcall
mov
lods
xor
test
mov
decl
cmpsb
pop
repz
rcrl
jno
inc
ficoml
mov
test
insl
sti
ljmp
clc
lcall
mov
loopne
cmp
adc
adc
sub
pop
scas
cmp
dec
call
pop
ljmp
pop
aas
mov
jns
xchg
arpl
xchg
inc
cmp
jle
pushf
daa
jo
incl
push
test
sbb
outsl
div
cld
iret
in
and
dec
in
add
nop
lret
add
jmp
dec
jno
or
xchg
dec
inc
sub
pusha
cmc
scas
lods
sahf
movl
ret
decl
out
xor
sbb
xor
inc
adc
out
mov
insb
and
fisttpl
test
push
scas
loop
push
inc
int3
push
loopne
pushf
fistpl
push
push
and
xlat
subl
pushl
pusha
int
mov
fcmovnu
addr16
in
xlat
mov
dec
loope
add
pop
fiaddl
cmpsb
mov
sbb
adc
std
pop
adc
rolb
add
mov
call
fwait
add
jmp
test
loopne
js
mov
popf
cmp
ret
outsl
dec
pop
out
mov
data16
aad
aam
cmp
in
cs
xor
pop
dec
repnz
xchg
popa
fildl
ljmp
shl
or
hlt
in
dec
add
mov
jg
pop
mov
fdivr
add
push
xor
jnp
dec
mov
xor
dec
stos
idiv
lcall
jmp
mov
lret
push
mov
push
test
scas
cmp
dec
cmc
mov
outsl
call
cmp
mov
lock
sbb
mov
pop
ds
fsubs
jmp
repnz
adc
roll
test
add
fisubs
lds
add
inc
xchg
mov
out
test
xchg
sarb
call
or
push
fwait
mov
cmp
outsl
cmp
xchg
mov
imul
clc
lods
incl
mov
inc
rol
pop
mov
out
leave
lock
xchg
mov
adc
jg
adc
mov
es
cmp
pop
aad
test
ljmp
test
inc
xchg
jmp
movsl
aaa
data16
ret
mov
jle
push
fnstenv
push
aam
into
push
negb
pushl
xchg
daa
mov
cltd
sbb
sbb
jl
repnz
nop
xacquire
jns
mov
cld
pushl
lea
or
insb
pop
mov
dec
dec
pusha
jmp
outsb
out
mov
adc
out
and
loope
incl
lds
call
sti
cmp
in
cmp
rcr
add
cmp
iret
pushf
add
lret
xlat
cmp
and
mov
out
xchg
xor
jg
lcall
jno
inc
mov
or
and
test
in
cmp
in
decl
aaa
pop
in
pop
jg
fnstenv
sbbb
pop
lret
push
rcrl
sbb
mov
jge
out
and
sbb
xor
push
push
hlt
push
jnp
decl
jle
ja
push
sub
push
or
js
mov
fwait
cli
es
mov
ret
ljmp
das
sbb
push
xchg
mov
inc
mov
xor
test
pushl
dec
js
fildll
push
sub
cmp
adcb
call
cltd
dec
stos
pop
pop
repnz
xor
or
cmp
push
jbe
mov
xorb
jmp
movsl
shlb
push
mov
or
cmpsl
jmp
sub
mov
and
shll
cmc
inc
ret
jo
mov
outsb
add
xlat
cltd
fwait
cmp
cmp
out
arpl
jl
mov
rcr
fs
call
push
xchg
pop
inc
mov
cmp
xchg
faddl
xchg
cmp
ljmp
cmp
lret
aas
in
int
ret
sbb
ljmp
cmpb
ljmp
add
aam
call
int3
pushf
out
icebp
cmp
aam
pop
mov
inc
std
lcall
xor
mov
pop
add
adc
xchg
inc
std
jg
lcall
add
mov
and
pop
sub
and
incl
fcos
mov
lcall
ljmp
ja
cmpl
es
ljmp
loop
pop
mov
sti
flds
aad
es
jnp
jle
pushl
jmp
dec
aam
in
sub
out
mov
or
xchg
mov
mov
mov
mov
fnstsw
addl
sub
mov
add
inc
or
xchg
inc
adc
stc
push
orb
test
call
out
ret
adc
test
mov
movsl
add
cmp
add
incl
stos
pop
addb
push
sti
sub
ss
mov
pop
jnp
arpl
in
ljmp
loope
clc
jae
out
ja
mov
xchg
pop
popa
ljmp
js
jl
jge
iret
or
push
or
lcall
mov
addr16
insb
cmpsl
fnstcw
jl
aaa
or
or
pop
cld
sub
gs
aaa
setnp
jmp
mov
dec
cmpsl
cmp
dec
mov
out
mov
mov
add
je
and
call
outsl
int
dec
sbb
cmpsb
push
mov
mov
in
ret
xor
ljmp
mov
addb
push
add
cli
pop
repnz
es
sbb
mov
pop
push
js
ljmp
clc
cmp
fisubl
jb
lea
testl
mov
sbb
dec
inc
xorl
ret
dec
sbb
in
xchg
dec
push
lahf
push
xlat
lret
xchg
into
repz
adc
int
or
sub
popf
mov
jnp
push
xor
cmpsl
mov
jmp
sahf
xchg
rcrb
push
pop
loop
pop
pop
popf
cmp
xchg
mov
sub
mov
xor
sub
push
mov
push
sbb
out
adc
mov
add
add
pop
add
xchg
xchg
pop
fldt
mov
outsl
lcall
jge
stos
push
rsqrtps
addr16
outsb
ja
mov
leave
and
shll
mov
shl
scas
mov
adc
ret
cmp
fistpll
inc
outsb
popf
data16
ljmp
outsb
es
dec
xchg
jge
cmp
loopne
jmp
jge
sbb
call
jle
cmp
decl
jo
cmp
add
hlt
pop
insb
lods
jnp
push
jae
cli
mov
dec
add
sbb
call
cmp
sarb
cmc
lock
clc
dec
out
iret
imul
es
test
jg
sbb
push
jp
adc
mov
stc
xor
jbe
fldenv
push
pop
add
xchg
sbb
call
scas
ficoml
push
pop
pmaxub
lods
test
adc
mov
fcmovbe
jnp
dec
sub
jmp
xor
adc
loopne
lds
cli
dec
and
lea
imul
xor
lcall
pop
mov
pusha
iret
sarl
xchg
pop
push
inc
add
or
inc
movsl
jle
add
mov
aam
pop
int
nop
dec
js
lea
cli
sarl
cmp
mov
mov
xor
and
or
decl
lock
je
aam
iret
and
mov
pop
xor
imul
sub
mov
jp
scas
mov
and
rclb
insb
pop
mov
mov
inc
and
out
and
xchg
mov
mov
hlt
mov
mov
in
inc
stc
mov
mov
pusha
dec
cmpsw
jmp
lods
mov
loope
ds
mov
inc
sub
sarb
fstpl
test
scas
jb
jmp
pushl
push
sar
add
push
adc
xchg
adc
jbe
sub
test
mov
xor
out
inc
enter
arpl
in
rcrb
das
sbb
sbb
add
fs
fisubl
mov
sbb
jb
push
call
jmp
repnz
popf
adc
lock
aaa
pop
or
loopne
mov
out
ret
setae
inc
xchg
sbb
cmpsb
inc
idiv
decl
in
lret
add
scas
fs
push
push
int
mov
mov
test
xchg
cmpsb
lock
iret
into
test
dec
ja
scas
inc
push
pop
cld
call
icebp
push
es
or
leave
jbe
fwait
or
mov
daa
dec
push
data16
or
hlt
std
jg
movsl
sub
je
mov
sti
pop
cmp
push
das
jae
call
daa
fisubs
popl
add
dec
je
sub
fwait
les
mov
and
fwait
fcomip
incl
out
enter
xlat
push
icebp
andl
cs
ss
pop
jmp
mov
xchg
push
lret
adc
mov
sub
add
lcall
lret
iret
adc
aaa
sti
sbb
pushf
std
adcl
call
outsl
aas
clc
lock
push
dec
push
jo
and
dec
push
push
cld
loop
ja
stos
sub
xchg
pop
cmp
stos
jb
leave
aad
mov
push
add
pop
and
in
mov
inc
jg
dec
jbe
movsl
fisttps
xchg
sub
inc
aad
and
decl
and
xor
scas
js
mov
pop
dec
scas
sbb
jne
pop
pop
aad
add
mov
and
outsl
adc
decl
cmp
adc
add
mov
into
out
pop
xchg
pop
nop
pop
pop
loop
in
incl
push
or
lahf
and
faddl
xor
call
std
ljmp
pop
ds
loop
adc
xchg
or
mov
dec
lret
int3
fcos
call
outsl
pop
gs
or
cmp
leave
mov
adc
inc
dec
bound
sbb
pushl
xor
cmpsb
scas
adc
lock
jmp
std
mov
test
mov
stos
push
incl
repnz
jno
or
jmp
inc
fdiv
je
and
sub
imulb
mov
sbb
sub
repnz
adc
jmp
and
jnp
or
lods
jg
out
ds
mov
mov
notb
dec
ja
push
subl
into
pop
dec
fadd
xor
mov
pop
mov
decl
stos
popf
mov
mov
pop
xchg
inc
adc
call
pushf
mov
cmpsl
inc
push
out
out
addb
and
ret
push
pusha
je
pusha
decl
adcb
cli
js
gs
sbb
ret
es
and
enter
cmp
aas
lods
pop
scas
mov
pop
lcall
xor
shll
inc
aaa
movsb
loope
inc
pushl
xchg
movsb
pop
fsubl
in
adc
push
pop
cmp
jmp
mov
aam
add
orb
pop
push
jne
mov
push
adc
inc
cmp
and
cmpsl
push
xor
sar
jg
pushl
les
xor
mov
push
mov
jne
mov
jge
cmpsl
xchg
ljmp
cmp
or
xchg
addr16
sub
out
enter
cmp
sbb
xlat
cmpsl
sub
mov
dec
mov
popf
xor
mov
sub
add
sti
dec
push
and
imulb
scas
ret
or
sub
jg
stos
aad
dec
nop
jle
sbb
mov
lock
lcall
or
orl
lock
jl
jg
push
test
sub
add
nop
jno
xor
and
mov
movb
jge
jo
jo
mov
mov
add
shlb
pop
and
mov
mov
daa
cli
mov
jg
push
and
js
sub
std
filds
clc
test
or
mov
ljmp
rclb
push
mov
arpl
into
shrl
popf
sbb
das
clc
push
fbstp
repnz
mov
and
xor
decl
pop
or
push
mov
popa
inc
mov
dec
out
decb
les
fisttps
pushl
sbb
and
dec
pop
int
or
mov
out
pop
push
test
call
loop
or
cmp
je
add
out
pop
cs
nop
dec
pusha
nop
and
in
out
mov
pushl
mov
daa
xchg
mov
jmp
inc
icebp
jl
mov
insb
cmp
incl
mov
jb
fst
push
fstl
lahf
adcb
pushl
cmpsb
rdpmc
cmp
ljmp
inc
sub
icebp
shr
shrb
jg
daa
scas
mov
sarb
decl
or
addr16
mov
sbbb
jb
inc
adc
xchg
fwait
shr
daa
andl
decl
add
add
mov
mov
pop
adc
cmp
jmp
xchg
add
pushl
cltd
punpckldq
pop
add
adc
popa
jg
add
sbbl
daa
pop
sub
data16
jne
cs
sbb
mov
mov
mov
sub
sar
xchg
lods
or
mov
outsb
xor
ljmp
mov
mov
xchg
mov
sbb
decl
popf
cmp
fists
stos
sub
mov
mov
lds
cmp
mov
call
cltd
outsl
addr16
movsl
jo
xchg
or
pusha
mov
mov
add
pop
sbb
mov
call
subb
pushf
pusha
inc
push
es
mov
arpl
mov
add
cld
or
sbb
stc
in
addb
mov
pop
xor
in
loope
loope
add
xchg
popa
add
jo
outsl
insl
incl
lcall
jnp
fs
or
daa
push
push
pusha
add
dec
into
jmp
aaa
std
lcall
pop
push
adc
in
xchg
sub
and
pop
rorb
jg
push
fs
popf
cmp
jo
sub
xor
aam
enter
lods
dec
mov
outsl
fdiv
ss
or
mov
xor
push
or
xor
movsl
or
inc
ljmp
rolb
sbb
pop
add
dec
dec
test
jns
and
out
jmp
xor
fsubrs
nop
rcrl
mov
push
jo
test
test
mov
and
sbb
inc
lcall
mov
mov
push
xchg
test
dec
cmpsl
sub
and
mov
add
pop
inc
shr
insl
or
lret
int
lret
outsl
es
dec
mov
adc
sbb
bound
jmp
adc
cmp
and
pop
jo
rcl
daa
cwtl
in
pop
adc
xor
mov
outsl
ljmp
lret
or
repnz
dec
mov
push
or
sti
mov
or
cmp
aas
lret
cmp
xchg
lahf
inc
pusha
arpl
out
shll
mov
pop
adc
mov
stos
jmp
lea
fwait
out
rcrl
divb
inc
ret
subb
aam
dec
out
sbb
push
inc
fwait
jmp
dec
sub
ja
sbb
dec
pushl
pop
and
jp
repz
ds
add
cmp
decl
dec
rcll
xchg
es
fwait
xor
xlat
test
jg
into
and
mov
incl
loope
sarl
ljmp
js
ficoms
repnz
jg
sbb
ja
pop
adc
mov
pop
lea
sbb
mov
and
jmp
aas
ret
stos
adc
fisttpl
inc
ror
dec
lcall
mov
call
xchg
push
pop
mov
pop
insl
decl
jo
pop
pop
cmp
inc
ljmp
shll
pop
mov
xor
in
out
sbb
mov
adc
or
push
fwait
popa
in
add
mov
test
sti
sub
decb
test
ror
xchg
dec
dec
loopne
fisttps
fistl
pushl
data16
mov
xor
fucomp
xor
push
mov
imull
pop
faddl
clc
sbb
fs
cmpsl
fldt
push
loopne
clc
jmp
movsl
xor
mov
pop
scas
into
mov
fwait
dec
pop
cmp
nop
jg
xor
call
std
or
data16
dec
popf
lret
cmpsl
sbb
adc
jle
xor
not
pop
mov
add
addb
pop
pop
push
fdivp
lea
outsb
js
fildll
pop
fcmovb
incl
fcos
call
frstor
dec
mov
xor
test
arpl
cs
fists
aaa
sbb
call
clc
push
xchg
fsubrl
inc
fwait
imul
incl
add
div
imulb
push
jp
outsb
out
push
outsb
adc
enter
mov
incl
iret
leave
push
loopne
pop
test
loope
aas
sub
pop
mov
shrl
pop
movsb
stos
movsb
iret
sbb
mov
pop
sti
jg
call
dec
nop
in
pop
or
in
ljmp
jl
cs
jns
cmp
mov
mov
mov
mov
iret
inc
mov
sti
jne
push
sub
inc
int
jle
pop
fidivrs
sti
sbb
xchg
lock
mov
adc
decl
ja
out
bndstx
sti
fidivl
enter
push
add
push
loop
mov
push
movsb
xor
lahf
or
imul
insl
les
jmp
xchg
push
dec
add
and
aas
fadds
sbb
pop
mov
dec
add
decl
xor
jg
xchg
mov
cld
inc
iret
jecxz
cmp
xchg
xor
pusha
dec
popa
jp
incl
cmp
xchg
in
push
rorb
cwtl
jle
fcoml
int3
jb
xchg
or
jmp
inc
and
pop
ljmp
mov
pop
dec
and
pop
inc
mov
sub
repnz
mov
subl
mov
xchg
mov
mov
bound
mov
push
inc
es
push
and
scas
cli
pushl
scas
inc
sbb
push
cli
hlt
jb
jecxz
sub
inc
lds
loopne
mov
loope
dec
jl
fildl
es
andb
mov
incl
mov
and
mov
das
cltd
mov
enter
dec
movsl
push
fdivr
mov
dec
inc
out
pop
xchg
pop
pusha
jno
mov
rclb
loop
mov
call
pop
addl
fists
insl
mov
aam
inc
movsl
out
hlt
dec
nop
lds
icebp
mov
add
dec
cmpsb
pop
fidivl
loopne
stos
sbb
mov
jmp
ljmp
inc
add
cmp
in
sub
movsb
in
add
dec
adc
lods
add
jmp
xchg
nop
lret
data16
rcrb
add
cmc
ljmp
mov
mov
jae
sbb
shll
jg
int3
pusha
inc
or
pop
and
cmc
jp
add
cmp
pop
shrl
cli
jge
in
pop
xchg
xchg
repnz
xor
xchg
lds
cs
ljmp
jne
mov
pop
movl
iret
lret
repnz
lods
mov
fisubl
mov
out
xor
out
cmpsb
mov
sahf
shr
lahf
lret
jg
xchg
icebp
add
pop
lret
mov
jno
cmp
sbb
nop
push
pushl
jg
pop
loop
sub
fwait
add
and
mov
mov
test
sub
out
mov
mov
aas
push
hlt
dec
test
ss
pop
mov
les
jp
xchg
xchg
jp
lahf
inc
jecxz
inc
stos
lcall
or
jl
shrl
sub
xlat
add
in
in
jo
cmp
mov
subb
mov
sahf
mov
test
test
jg
movsl
clc
les
inc
std
sahf
push
sti
roll
jecxz
in
lcall
cmp
inc
bound
scas
mov
imul
outsb
dec
mov
loope
jl
aaa
cmp
incl
mov
hlt
or
push
ret
xlat
jbe
jae
ret
repz
fcomps
pushl
and
cmp
mov
enter
sbb
sub
xchg
incl
jge
sub
jp
enter
jle
adc
sbb
push
push
mov
bound
sub
pushl
or
xchg
dec
sub
aad
jecxz
inc
aaa
insl
leave
inc
inc
xchg
sar
push
int
dec
scas
clc
call
mov
loope
aaa
add
fadds
int3
int3
mov
lcall
popa
pop
lahf
cmp
jo
jp
mov
cmp
and
add
jns
sub
daa
aas
ds
sbb
jo
xchg
jle
xor
sbbb
push
or
cmp
pushl
test
inc
sub
cwtl
push
inc
pop
ljmp
dec
adc
jle
ljmp
mov
cmp
lds
shl
push
loopne
jo
mov
push
push
data16
fld
inc
or
in
out
and
shl
mov
in
popf
stos
sub
cmp
dec
shlb
cld
inc
push
aaa
add
dec
ret
push
gs
ret
inc
imul
loope
dec
les
call
mov
mov
movl
ret
xchg
jmp
pop
xchg
mov
mov
call
sbb
push
jns
jnp
std
jecxz
out
out
adc
or
mov
ljmp
std
stos
inc
sbb
decl
fwait
aad
mov
fcmovb
pop
ficomps
mov
inc
fiadds
pop
popa
cmp
cmp
sub
shrb
jo
jge
ss
cli
sub
decl
and
fstpl
lds
mov
dec
cmp
arpl
in
popa
call
pop
mov
jmp
cmp
pop
in
test
xchg
mov
dec
out
pushl
mov
sahf
js
adc
dec
adc
xor
fcomip
pushl
es
mov
pop
rcrb
sbb
aaa
mov
arpl
mov
cmp
push
call
fldt
mov
shrb
pop
ja
ljmp
stos
ljmp
rcr
leave
mov
xchg
cmp
push
pop
sti
imul
das
clc
aam
dec
sarl
xor
jmp
jl
cld
or
dec
sub
ljmp
cmc
test
cmp
pusha
in
push
inc
adc
movsb
mov
add
mov
xor
mov
jmp
adcb
out
out
sbb
mov
sub
ljmp
js
test
adc
div
sahf
mov
jmp
mov
call
insb
jecxz
mov
sar
jl
add
jns
ror
clc
loope
jle
push
aaa
dec
ljmp
je
push
fldenv
dec
sahf
test
or
sub
out
pop
shll
mov
imul
jmp
pop
setle
cmp
inc
jecxz
jmp
sbb
stos
add
loope
lret
in
mov
lcall
lock
ja
inc
test
sub
jg
aad
out
xchg
inc
push
cld
cmp
nop
dec
inc
loop
inc
adc
jg
fistpl
inc
xor
sbb
or
rcrb
mov
dec
jmp
nop
or
xchg
les
in
clc
cmpsl
xchg
icebp
jle
fildl
pop
int3
and
lcall
push
fsts
pop
mov
jns
paddsw
jg
ljmp
lock
and
out
call
pop
aas
sub
fstl
cld
push
add
fcompl
rcrb
mov
cld
pop
inc
xlat
test
pslld
out
je
jno
sub
movsl
push
addb
xor
incl
push
or
movsl
fdiv
adc
mov
icebp
lret
negl
adc
mov
mov
das
loopne
jmp
pop
xchg
mov
mov
ret
hlt
add
outsl
call
lock
push
sbb
fcom
adc
dec
sub
gs
dec
mov
in
fistps
xchg
sti
xlat
sbb
movsl
imul
call
aas
pushl
adc
adcl
mov
cmp
filds
addr16
or
leave
sbb
add
xor
leave
push
pop
sbb
push
mov
stos
cltd
ja
mov
flds
outsb
sbb
cmp
lahf
call
test
rorb
aas
int
es
jne
or
cmp
rcrl
or
fadds
rcl
mov
andb
mov
movsb
arpl
aas
call
push
decl
int
push
adc
mov
jp
addr16
dec
fs
dec
enter
loop
jg
jle
add
inc
jmp
hlt
adc
gs
adc
pop
adc
fldt
and
push
mov
jnp
xlat
xchg
pusha
inc
or
jbe
nop
mov
call
xor
jno
adc
push
mov
cmp
add
out
xor
inc
mov
push
cmpsb
dec
cld
shll
int3
mov
xchg
and
pushf
push
loopne
repz
lock
mov
lret
sbb
cmp
dec
fldt
and
cs
mov
jg
iret
sahf
adc
sub
xchg
cld
adc
add
rclb
test
cli
ljmp
ss
sbb
cwtl
les
push
mov
call
pop
fbstp
mov
dec
pop
sub
cs
or
ja
xchg
lret
adc
es
int3
push
xor
mov
mov
lcall
xchg
jns
and
decl
jg
loop
xchg
push
test
xchg
leave
jbe
dec
rcr
jmp
pop
mov
xchg
lods
lcall
jmp
adc
sub
xchg
lods
mov
xchg
cmp
insb
movsl
xor
loope
push
orl
call
pop
icebp
sub
lcall
addr16
repz
sub
hlt
mov
and
cs
add
decl
pop
ljmp
icebp
aam
jo
and
out
lahf
cmp
mov
adc
jmp
iret
orb
jns
pop
sbb
mov
bound
push
es
cs
fs
ljmp
int
dec
xor
cmc
mov
movsl
aas
dec
daa
or
sub
insb
add
decl
std
inc
push
lods
jnp
in
outsb
push
in
cmp
fisubs
and
push
incl
scas
out
stos
pop
xchg
mov
test
xchg
scas
dec
push
cltd
clc
jmp
mov
cmp
aaa
lret
addr16
mov
dec
fdivrs
xchg
pop
xchg
ja
mov
dec
test
cmp
or
in
xchg
scas
pop
add
mov
out
xchg
inc
arpl
es
jp
mov
popa
jnp
stc
sub
lea
dec
push
ljmp
pushl
pop
sub
js
cwtl
jg
ja
inc
outsb
mov
jp
rcrb
int3
add
ljmp
lods
in
stos
cmp
mov
gs
sahf
and
jo
pop
and
daa
lret
jmp
mov
mov
inc
xchg
xor
and
xor
je
je
mov
call
cltd
jecxz
push
sub
pop
pop
dec
ljmp
mov
lcall
inc
fwait
add
xchg
push
pop
sub
repnz
add
inc
pop
stc
imul
sub
nop
mov
lock
decl
popa
sub
aas
aas
sbb
pop
adc
sar
call
xchg
rcr
insl
jl
fcompl
lods
push
dec
xchg
mov
lcall
pop
inc
test
lock
lea
ret
dec
lds
into
jl
mov
adc
jae
add
lods
inc
movsb
test
mov
aad
sbb
pusha
push
xor
js
enter
ret
in
jle
and
xchg
mov
mov
inc
push
dec
xchg
jge
xor
pop
daa
xor
jmp
insl
mov
fdivr
cli
pushl
js
xchg
cmp
push
inc
das
push
ds
decl
sbb
xor
lret
loop
adc
repnz
pop
shrb
mov
sbb
sti
ljmp
mov
mov
mov
testl
add
incl
cs
cmp
jnp
decl
xor
faddl
cmp
cmpsb
decl
push
sbb
ljmp
dec
arpl
pop
xchg
adc
fs
adc
pushl
inc
xchg
push
loop
fs
sub
and
push
jb
pop
mov
lcall
jmp
adc
shrl
stos
popf
repz
rcl
inc
lret
lcall
dec
stc
sub
fwait
push
lret
mov
cmp
pop
lea
pushl
sti
push
jmp
dec
xbegin
and
xor
and
xchg
cmpsl
pusha
repnz
ud0
ljmp
rcrb
test
insl
lods
jp
jecxz
das
mov
js
mov
addr16
cmp
mov
jno
jae
test
fnstcw
jno
jg
lock
int3
lret
orb
jmp
jle
cwtl
inc
mov
lock
ljmp
xor
adc
jns
adc
and
jb,pt
pop
inc
je
testb
movsl
lcall
leave
divl
sbb
mov
ljmp
clc
jmp
sbbb
movsl
scas
sub
pop
push
xor
pop
mov
push
fsubs
jno
outsl
stos
dec
mov
add
movsl
jg
jae
inc
sub
in
arpl
lahf
and
mov
into
cmpb
mov
or
mov
pop
mov
mov
xchg
adc
pop
pusha
fwait
adc
add
subb
jmp
scas
das
andl
enter
inc
jbe
pop
and
xchg
insl
aam
test
ljmp
sub
pop
xchg
mov
mov
cmp
sub
cs
inc
lahf
gs
decl
mov
sub
hlt
repz
testl
sbb
lret
jne
ljmp
stos
lret
mov
or
dec
cmp
add
and
xchg
lcall
or
fildl
repnz
mov
cld
push
mov
pop
pop
mov
dec
roll
mov
outsl
mov
shl
std
repnz
out
push
movsb
clc
rcll
dec
test
dec
loope
pushf
mov
xchg
shlb
outsl
iret
pop
cmp
xchg
shlb
int
pop
adc
sbb
enter
jecxz
xchg
shll
or
push
adc
stc
lods
shrb
sub
cmp
js
repnz
imul
mov
jge
icebp
mov
inc
sub
xor
idivb
andb
ds
lcall
into
cmc
in
push
add
roll
data16
push
in
push
mov
call
lds
subb
pusha
inc
inc
pop
mov
fs
mov
add
and
test
fadds
in
aas
push
mov
pop
lahf
mov
fisubrl
incl
xor
mov
test
dec
add
fstpl
and
decl
or
cmp
out
lea
or
push
aaa
push
push
jno
dec
jecxz
ja
mov
sub
dec
pop
push
sbb
sbb
out
mov
cmp
out
clc
stos
cmp
inc
sub
push
cs
movsl
clc
fcom
insl
sub
shll
negb
sysenter
add
sti
dec
fcomip
xchg
cmp
xchg
xor
incl
jno
pop
mov
xchg
cmc
xchg
pop
int3
xchg
cmp
mov
xor
call
fadd
aaa
sub
sbb
cmp
leave
or
ret
mov
outsb
test
mov
imul
push
negl
rcl
add
out
xor
cs
dec
jmp
roll
dec
xor
adc
mov
xchg
inc
mov
nop
enter
repz
mov
push
cld
incl
dec
cld
mov
xchg
insl
fdivs
and
cs
fs
sarl
test
jg
add
loop
mov
scas
pop
mov
fldl
call
push
decb
push
add
lods
enter
cmpsl
dec
jno
lcall
std
sti
adc
popf
lock
mov
adc
adc
sub
jmp
fadd
jns
inc
fdivr
ljmp
outsb
xchg
sahf
lods
into
xchg
aam
jb
ja
ds
dec
add
sub
inc
push
rcrb
js
jmp
mov
mov
aam
or
loopne
adc
sbb
rcl
insb
addr16
dec
vmovd
adc
clc
push
loope
inc
outsl
mov
sbb
call
push
imul
cmp
les
test
push
xorb
xchg
sub
mov
lcall
movb
mov
xchg
pop
inc
pop
in
mov
lea
adc
pop
decl
xor
wbinvd
fldenv
mov
je
sbb
xlat
push
pop
test
insl
sbbb
jmp
cmpsb
aam
pop
dec
mov
daa
jmp
jnp
lahf
aas
fcmove
jp
inc
aaa
fwait
mov
inc
xchg
aam
dec
incl
shll
adcb
das
jmp
mov
mov
push
adc
call
cmp
cmp
mov
cmp
dec
mov
push
stc
and
outsl
decl
popa
out
and
enter
add
out
push
mov
xchg
sarl
mov
je
cmpsl
xchg
adc
out
addl
mov
add
and
pop
daa
sub
ljmp
cmp
in
sbb
xor
ljmp
sbbl
mov
push
orl
push
fbld
push
xchg
inc
or
cwtl
dec
sub
test
lcall
adc
jbe
and
shlb
in
sub
add
pushl
clc
ja
popf
inc
adc
in
adc
and
decl
jmp
sti
jle
jge
push
sbb
cmp
mov
loope
xchg
out
ljmp
ljmp
mov
xchg
jb
mov
jmp
xchg
in
mov
popf
gs
mov
inc
pushl
cmp
int
mov
test
jb
mov
dec
lods
adc
int
int3
dec
mov
jne
jmp
je
mov
rcrl
pop
out
pop
icebp
and
jns
clc
push
shr
mov
inc
cmp
mov
enter
fisubrs
insb
jb
scas
fbld
add
mov
popf
jnp
fcomip
lcall
sbb
in
insb
lock
adc
push
loopne
scas
fistps
scas
dec
ss
call
lds
dec
xorb
ja
cmp
neg
mov
pushf
shr
push
movsl
xchg
imul
lcall
cwtl
jno
test
aam
adc
adc
mov
movsb
add
shrb
pop
sub
test
into
or
jg
cmp
cs
push
test
inc
jmp
mov
cmp
dec
test
add
es
mov
lods
cmp
mov
cmp
sub
push
ljmp
dec
jbe
jnp
int3
mov
stos
ja
push
jb
es
and
cltd
fsubs
cmp
mov
sub
lcall
lods
push
mov
scas
bound
ds
cmp
lcall
sub
dec
cltd
arpl
pop
fidivrs
add
add
hlt
mov
test
addr16
and
adc
lret
mov
loope
clc
int
jne
sahf
mov
add
stos
js
pop
sarb
push
xchg
call
cmpsl
push
push
mov
xor
fnstsw
cmp
jo
xchg
scas
sbb
sbb
xchg
push
mov
mov
xchg
push
daa
icebp
mov
pop
jp
outsb
mov
divb
sub
push
jg
ss
movl
xchg
or
mov
cwtl
mov
jno
mov
lcall
sahf
sarb
sub
sahf
cmp
test
jne
mov
test
push
add
cmp
sbb
dec
icebp
adc
jmp
ljmp
mov
into
ljmp
jmp
popf
loop
je
or
push
jp
movsb
into
push
add
xchg
sbb
ss
stc
mov
xor
mov
mov
testl
incl
push
std
sub
inc
mov
callw
push
movsl
ret
test
pop
cld
push
cltd
clc
ret
jg
mov
stc
dec
adc
sub
lcall
fdivrl
repz
andl
es
pusha
jle
call
inc
mov
sbb
and
cwtl
jae
mov
les
ljmp
inc
jecxz
xchg
out
mov
jecxz
mov
test
fldl
in
cmp
pushf
icebp
sub
dec
repz
push
adc
lods
lds
in
inc
mov
cmp
fistpll
cmc
jbe
cmp
jg
call
insb
xchg
adc
divl
test
pop
cmpsb
aaa
mov
adc
fimuls
aaa
std
incl
insl
cmpsl
xor
mov
or
mov
mov
xchg
xchg
notb
cmpsb
ret
or
cmp
ljmp
cli
xorl
dec
daa
and
loopne,pt
stc
push
sarb
cli
incl
push
scas
nop
mov
out
fsub
pushf
push
mov
sbb
in
push
add
sbb
or
mov
dec
mov
adc
addr16
sub
cmp
pop
ficompl
push
lcall
pushf
fbstp
int
cmp
or
out
push
arpl
orb
call
xchg
out
and
cmpsb
xchg
jno
xchg
mov
lahf
and
scas
pushf
sbb
sub
sbb
inc
icebp
cmc
out
lcall
roll
dec
scas
push
cmpsb
or
lods
test
sbb
and
jecxz
cs
sbb
call
and
cmp
orl
jns
mov
fmuls
pop
aam
ljmp
movsl
test
cli
xor
pop
mov
or
inc
es
mov
mov
and
push
sbb
or
push
loopne
shlb
enter
xchg
xchg
xor
push
or
or
js
out
pop
rcrb
nop
outsb
call
loope
negb
xchg
pop
pop
cmpsb
jmp
shlb
shlb
ljmp
aas
mov
jns
rcrb
std
pop
icebp
shll
xchg
inc
mov
fldl
xchg
push
jg
jg
or
inc
call
aaa
sub
ljmp
pop
or
sub
add
mov
insb
in
sbb
imulb
sbb
loop
mov
push
dec
and
fwait
loopne
adc
jnp
roll
fwait
pop
in
lods
adc
add
call
inc
and
or
pop
orb
cmp
scas
add
xchg
dec
pop
test
adc
xchg
ss
fwait
sbb
fadds
out
pop
dec
lcall
mov
and
inc
int
negb
and
adc
push
stos
push
sub
mov
daa
mov
ret
cmpsb
adc
cmpsl
xchg
hlt
out
test
sub
pushl
xorl
stc
adcl
xchg
dec
repnz
js
pop
sub
mov
or
jmp
add
sub
pushf
cs
adc
pop
jbe
pop
cmp
jnp
mov
testl
call
sub
push
pop
push
inc
sub
inc
test
shlb
add
clc
ffreep
imul
repz
ljmp
cwtl
and
bound
loope
mov
mov
ds
mov
mov
lret
hlt
insl
cmp
jg
hlt
rdmsr
rcrb
test
push
rcrl
popf
scas
lea
das
repz
mov
inc
cld
imull
movsb
lret
jmp
cmp
push
jp,pt
mov
add
dec
aam
mov
pop
cmc
incl
jno
stc
clc
lock
pop
loop
jecxz
pop
icebp
or
jg
xor
mov
push
roll
add
fbld
or
pop
jae
cmc
roll
mov
repnz
pushf
imul
data16
test
jbe
mov
mov
xchg
xchg
jnp
lods
shl
jg
jne
adc
sbbl
cli
call
adc
push
pushf
fsub
insb
hlt
shll
aaa
test
lret
stos
loopne
sub
sbb
arpl
sahf
ss
incl
or
add
add
push
arpl
sbb
call
jmp
adc
sub
xchg
stos
fwait
clc
call
inc
pop
pop
jg
mov
and
rorb
decl
push
cwtl
imul
mov
cmp
int3
mov
jmp
adc
lods
insl
icebp
or
jl
scas
add
xchg
das
cs
mov
xchg
jo
movsl
decl
adc
pusha
cltd
clc
sub
or
fldl
mov
pop
sub
sarb
xchg
mov
adc
sub
push
xchg
out
cs
data16
push
stos
dec
jmp
add
jg
repnz
pop
test
dec
mov
push
adc
out
push
sub
scas
inc
and
lds
mov
std
lods
push
mov
out
cld
loopne
inc
mov
lods
outsb
mov
pop
ret
add
lock
scas
lret
fdivrl
cli
dec
out
incl
ja
push
add
loopne
lock
xchg
clc
inc
loope
testl
cmpsb
jnp
xchg
movsb
imul
add
call
mov
gs
mov
ja
sub
jg
jae
les
das
rcrb
subb
test
pop
mov
adc
jg
dec
add
incl
scas
lret
add
pop
jp
jp
jle
inc
popf
call
or
xor
and
add
dec
sbb
lahf
cmp
std
dec
inc
adc
test
lcall
repz
mov
loopne
mov
xchg
bound
mov
pop
dec
cld
decl
xor
sahf
push
push
mov
fs
popa
ret
pop
jo
jno
cmp
xchg
cmp
mov
or
mov
add
mov
outsl
fisubrs
outsl
xor
mov
xchg
shl
cmp
jge
aam
sar
pushl
daa
adc
mov
push
push
push
mov
scas
and
push
pushl
mov
add
subb
mov
mov
les
popa
ljmp
rorb
lret
in
fmull
adc
outsl
or
mov
clc
ljmp
mov
xchg
push
cmpsl
data16
xor
pop
call
ljmp
xor
jecxz
mov
into
xchg
xchg
movsl
xchg
pop
dec
test
aas
insb
outsb
lcall
mov
cs
jo
sbb
cmp
gs
aas
cmp
lahf
cwtl
sahf
and
xchg
add
pop
sbb
hlt
movsb
inc
leave
and
movsl
lea
ljmp
rol
clc
popa
adc
cli
into
arpl
push
xchg
sub
jnp
fistpl
movsb
jg
or
sbb
jmp
enter
imull
pop
jge
sbb
cmp
pop
mulb
pushf
clc
pusha
jle
insl
jne
inc
cltd
cmp
inc
in
ja
jne
sbb
jae
call
fs
mov
mov
inc
sub
in
test
jmp
xorb
aam
decl
popa
dec
cmp
sbb
iret
mov
jb
and
popa
pop
xor
jl
xchg
sbb
mov
out
loop
dec
out
loopne
cmpsb
lret
xchg
mov
mov
inc
ljmp
or
mov
sbb
pop
enter
jne
outsb
mov
sub
dec
push
scas
sub
cmc
or
incl
fisttpll
push
imul
shrl
xchg
arpl
pop
cld
shl
push
dec
push
or
dec
mov
jmp
es
std
pop
or
imull
rcll
jae
mov
pop
jge
pushl
ds
roll
or
pusha
pop
mov
cmpl
or
cwtl
adc
aas
dec
jg
push
daa
movsb
pop
inc
ret
rol
jno
call
pushl
scas
fwait
iret
or
inc
jnp
lock
sahf
sub
fnstenv
lcall
das
add
int3
test
iret
cmc
pusha
push
enter
std
sbb
lret
jl
outsb
ret
pop
adc
add
lret
imul
mov
xchg
ljmp
jp
cmc
or
repnz
mov
in
adc
cmp
aas
lahf
lret
and
lcall
mov
cmpb
fadds
adc
dec
push
aam
shlb
lods
shll
xchg
xor
dec
jae
and
lret
lods
ljmp
mov
daa
and
iret
in
ret
jmp
sbb
callw
repz
push
jl
jns
insb
pop
fwait
das
pushf
inc
sub
lcall
and
imul
pop
lock
pop
lret
push
sbb
dec
in
in
sbb
sbb
ret
pop
aad
call
push
ror
and
cld
or
lds
adc
gs
jg
adc
cld
inc
pop
xor
cmp
fmul
rorb
sahf
cli
loop
leave
inc
sbb
mov
xlat
decl
jecxz
mov
add
mov
xor
ljmp
cli
fisttps
sbb
hlt
add
mov
in
add
pop
test
xor
bound
push
jp
jmp
mov
sbb
clc
jg
xor
call
xchg
xchg
mov
inc
cmp
incl
jne
add
add
outsb
pop
push
leave
xchg
bswap
push
push
int3
or
sahf
js
add
mov
jp
loopne
mov
mov
js
or
cmpsl
es
cmp
pop
sub
inc
int
xchg
scas
mov
std
pop
push
mov
aaa
sbb
mov
xchg
jnp
ret
fsubs
pushl
pop
test
cltd
int
xor
lret
sti
mov
rcl
push
mov
sub
incl
cld
lcall
loop
test
mov
hlt
sbb
mov
jmp
inc
call
je
jno
rcl
mov
es
ja
mov
pop
cmc
clc
xor
sahf
inc
push
ja
and
jnp
sar
and
pop
mov
sbb
push
add
mov
sub
notl
out
mov
jnp
inc
outsb
or
les
enter
mov
sub
incl
loop
cmc
mov
sub
pop
nop
mov
stc
icebp
sub
incl
jmp
out
sbb
in
into
jo
fistps
mov
push
loopne
out
movsb
push
insl
stos
data16
stc
pushf
push
das
enter
cmp
mov
sbb
adc
aas
lock
dec
push
xchg
sub
xor
pusha
xchg
loopne
lcall
fs
test
add
gs
and
jno
or
fildll
out
test
mov
filds
inc
xchg
add
and
jg
stos
pusha
loope
lcall
sub
outsb
lea
xor
push
pop
and
imul
lcall
mov
pop
rcrb
in
jg
dec
mov
sbb
sub
int3
mov
push
and
add
push
add
dec
sti
loopne
ret
idivb
mov
cmp
lcall
into
mov
jae
cmc
popf
xor
sub
andb
cld
popa
iret
test
sahf
insl
lcall
mov
stos
fsubp
xlat
sti
sbb
pop
aas
fdiv
outsl
int
adc
sbbl
std
call
int
scas
inc
nop
fs
icebp
sahf
push
roll
push
aad
popa
aad
subl
push
pushf
sbb
push
mov
dec
inc
push
mov
sbb
sahf
dec
imul
mov
js
ss
icebp
jl
xchg
cmp
mov
scas
clc
arpl
dec
pop
inc
movsb
stos
sbb
rcr
call
jg
test
fdivr
mov
pop
cld
jne
dec
fdivr
incl
xor
push
cmc
mov
mov
xor
sbb
inc
call
mov
mov
pushf
rorl
dec
cmp
and
clc
loopne
iret
out
test
mov
add
nop
xchg
int3
movsb
fs
repz
incl
inc
into
pop
filds
lods
jp
movb
xor
fisubl
iret
pop
mov
push
push
or
out
imul
mov
sub
fimuls
ss
out
nop
jecxz
cmpb
lods
add
ljmp
test
mov
cmp
pop
push
in
jo
stos
cmpsl
sbb
or
ficompl
popl
pop
sbb
or
call
or
sbbl
fists
push
adc
add
call
repz
fisttps
pusha
std
sti
push
xorb
lret
aad
add
mov
loop
cmc
pushl
sub
push
orl
dec
mov
sti
pusha
out
lret
mov
orl
call
jge
xchg
les
cmpsb
pop
and
push
push
pop
or
addb
or
pop
ss
cmpsl
lods
daa
or
fsubrs
mov
pop
imul
stc
and
movsb
inc
pop
orl
jae
pop
pop
sub
xor
pop
add
add
movaps
jmp
scas
dec
popf
mov
gs
pop
xor
pop
push
mov
push
mov
cmp
dec
dec
in
jnp
push
cmp
subl
or
iret
or
jmp
lods
adc
mov
or
pop
dec
dec
imul
ret
mov
pushf
push
fsub
inc
pop
cmc
mov
cmpsb
cmpsb
aas
adc
dec
loope
test
inc
xchg
push
mov
push
mov
lods
xchg
out
ficoml
mov
pop
mov
dec
int
int3
jecxz
jecxz
sub
mov
add
inc
jg
sbb
aam
call
dec
cmpsb
std
pop
cmp
lock
pop
xchg
push
ljmp
scas
add
frstor
push
inc
into
movsl
mov
pop
sbbl
pop
jb
out
hlt
lds
fnstcw
shlb
jp
jge
inc
lds
incl
mov
push
sub
mov
and
inc
sahf
or
movsb
sahf
jg
xor
sbb
imul
mov
dec
xchg
je
sbb
xor
and
ds
mov
pop
xchg
inc
pop
adc
jae
push
gs
iret
adc
adc
ljmp
jns
mov
mov
inc
or
outsl
daa
xor
repnz
inc
push
or
fdivrs
push
pop
xchg
and
outsb
jl
stos
mov
iret
cmp
push
aaa
jg
dec
sbb
push
cmp
mov
ljmp
call
jmp
das
add
cld
adc
shll
sbb
ljmp
mov
stc
popa
push
out
mov
out
icebp
or
ficompl
outsl
cli
std
adc
jno
xor
ds
cltd
xchg
sub
cmpsb
nop
arpl
ja
cmpsb
jmp
enter
or
cmp
mov
roll
sub
dec
jo
mov
push
lds
aas
call
xchg
jmp
rolb
scas
xor
add
addr16
xchg
or
aam
ljmp
rolb
jmp
outsb
dec
popf
stos
loop
mov
imul
call
loopne
in
add
insb
sbb
enter
ret
xor
out
scas
adc
pop
cwtl
add
push
pop
push
fisubrl
out
adc
decl
imul
movsl
xchg
add
mov
or
inc
out
mov
scas
clc
ljmp
pop
xchg
js
lret
xchg
bnd
dec
outsb
dec
mov
outsl
jne
sar
test
decl
sbb
push
jmp
loopne
inc
shrb
xor
jns
icebp
jbe
nop
fmull
mov
or
adc
xchg
cmpsb
mov
fs
gs
cmp
dec
stos
sbb
ror
mov
push
fisubl
mov
push
inc
jl
fdivs
arpl
or
int
decl
bnd
in
dec
in
out
pop
jmp
insb
popa
mov
shll
adc
jmp
decl
mov
into
push
psadbw
push
outsb
fsubr
and
pop
sbb
fidivs
ds
mov
into
sub
push
pushf
and
idiv
decl
push
or
call
cltd
mov
mov
cmpsl
dec
and
cmp
decl
push
stos
lret
andnps
out
cli
pop
fldl
mov
mov
push
or
or
inc
pop
fstpt
pushl
adc
pop
loope
pusha
pop
jge
pop
jns
aaa
std
pop
ljmp
and
imulb
or
in
and
ljmp
push
movsb
add
ret
lahf
adc
jno
pop
ret
push
sbb
xchg
lcall
aad
leave
test
in
in
call
adc
insb
xchg
in
cld
adc
out
cli
insl
ja
ljmp
aaa
jmp
push
movsb
cmp
les
mov
pop
adc
ljmp
leave
das
aad
jne
es
xor
jmp
jecxz
in
lea
inc
xchg
idiv
clc
add
mov
movsb
sbbl
fs
scas
adc
gs
enter
pushl
sbb
je
mov
add
add
loopne
add
mov
inc
and
aas
jp
aaa
and
bound
sbb
push
stc
loop
fcomps
cmp
cs
adc
mov
test
xchg
mov
mov
lcall
repz
fsubrl
outsb
ds
fcmovu
push
das
inc
push
fmull
cmc
test
stos
lcall
gs
mulb
scas
aad
test
jmp
lcall
mov
jne
popf
jl
xchg
and
adc
aaa
iret
sahf
flds
faddp
jg
fcompl
xchg
ret
xor
sub
clc
stos
int3
and
call
in
movsl
pushf
xor
adc
add
out
push
xchg
cmpsb
inc
daa
loope
add
into
or
jle
sbb
decl
mov
push
mov
ja
sti
mov
scas
popf
fidivrl
arpl
out
mov
ds
enter
pushf
aas
adc
mov
es
dec
popa
pop
popa
testb
insb
xor
inc
mov
mov
mov
subb
mov
xor
sbb
insb
and
xchg
cmp
pop
adc
sbb
pusha
sbb
hlt
repnz
sub
movsb
dec
lods
and
mov
dec
in
cmpsb
out
in
push
dec
pop
mov
and
incl
sbb
pushf
push
xor
aaa
jle
push
outsl
and
pop
push
jne
in
enter
jmp
add
xchg
push
sbb
xchg
jle
mov
icebp
mov
ja
sbb
xor
imul
push
jns
and
cmp
xchg
xchg
fsubrl
mov
rcr
arpl
loopne
lcall
push
sub
icebp
rcr
mov
scas
mov
pop
ud0
pop
lret
lcall
dec
dec
cmc
pop
push
outsl
push
pop
xor
scas
clc
lcall
scas
sti
sbb
push
jle
repnz
and
xchg
lret
dec
dec
adc
repz
sub
or
test
lcall
out
ljmp
jle
sbb
hlt
bound
nop
and
jp
ret
data16
cltd
shrb
push
std
pushl
dec
cld
add
pop
add
icebp
jge
and
inc
mov
cli
aam
pop
add
dec
mov
cwtl
test
popf
rcll
push
incl
jle
mov
popf
es
push
and
mov
or
sub
pop
icebp
call
orb
push
ficomps
rorb
and
shl
push
sub
lcall
or
push
mov
std
mov
addl
out
xchg
sbb
xor
or
push
call
sbb
mull
stc
lret
sarb
mov
or
testl
mov
mov
add
mov
ror
aas
mov
jmp
xchg
xchg
inc
pop
popf
test
push
je
add
add
xchg
jo
gs
jmp
rorb
cmpsl
test
and
sti
stc
dec
cmp
ret
mov
adcb
jge
dec
decl
sbb
sub
out
int
add
and
gs
pop
add
leave
int3
lcall
dec
jno
jnp
fldl
mov
pop
stos
test
jge
jne
xchg
sub
loopne
sub
and
mov
in
pop
popa
mov
ret
out
or
repz
push
aam
jnp
push
cmp
incl
inc
jl
negb
movsl
cmp
es
loopne
mov
push
and
jmp
xchg
ret
pop
jbe
lods
adc
push
rcl
ljmp
das
mov
fsubp
ljmp
mov
stos
inc
adc
push
or
mov
inc
and
add
sti
call
inc
je
dec
shrl
inc
push
mov
sbb
jg
or
call
fidivrs
jmp
xchg
mov
out
neg
and
mov
divb
ljmp
cmp
and
mov
mov
enter
clc
mov
scas
jbe
stos
mov
outsb
icebp
lcall
mov
dec
push
scas
outsl
cltd
push
ljmp
in
stos
stos
jge
dec
mov
cli
aaa
ljmp
push
mov
cmc
push
xor
cld
and
fcom
fstl
in
in
mov
stos
mov
fwait
adc
outsl
dec
lahf
cltd
and
in
setp
sbb
jo
ljmp
inc
loop
ret
mov
lods
jmp
call
ret
fdiv
cmp
xchg
inc
fsub
cwtl
and
pusha
or
stc
out
jbe
int3
xor
mov
jmp
push
add
mov
mov
out
cmpl
jae
sub
bound
inc
out
call
in
pop
arpl
dec
jmp
leave
into
cli
adc
pop
xchg
xchg
call
mov
or
cmp
addr16
dec
mov
xor
sub
call
adc
fmulp
iret
xlat
sbb
lea
pop
push
sahf
xorb
inc
lea
pop
lock
pushl
pop
testb
inc
enter
les
vmptrld
mov
xor
scas
mov
or
mov
mov
jg
add
adc
adc
pop
inc
mov
push
pop
clc
jmp
call
loop
push
jge
data16
pushl
push
sti
xchg
push
les
xlat
loop
ret
cmp
shrb
push
or
mov
clc
jns
faddl
fs
xor
in
xchg
call
dec
cwtl
xchg
mov
incl
or
mull
repz
movsb
dec
call
movsl
dec
push
push
pop
dec
cmp
bound
leave
pop
dec
mov
and
add
push
loopne
into
call
sub
cmc
scas
push
push
cld
mov
sar
decl
in
sbbl
jae
in
sub
enter
decl
mov
xchg
xchg
mov
dec
cltd
and
or
push
or
xchg
sbb
xor
stos
in
dec
scas
data16
sub
push
xlat
push
mov
jb
sub
push
xchg
lods
es
mov
push
cmp
stos
in
sahf
push
adcb
xchg
imul
sbb
out
mov
ljmp
xor
push
lock
sbb
fldcw
fs
inc
les
das
sbb
mov
jmp
or
adc
test
xor
jp
jg
fidivrl
push
xchg
mov
pop
push
ret
mov
add
and
les
xchg
inc
ss
call
loopne
mov
cwtl
mov
sti
int
dec
sub
push
jns
movsb
push
or
or
jecxz
insw
inc
popa
sbb
mov
jle
cmp
pop
imull
imul
jmp
jle
sar
and
cmp
mov
jp
and
mov
add
add
mov
jns
jl
int3
sbb
aaa
and
and
fdivrl
push
subb
jo
xlat
insl
pop
inc
mov
xlat
xchg
leave
sub
and
mov
inc
lods
push
rorb
xchg
jmp
cmpsl
movsl
pop
fmuls
cmp
sub
mov
push
push
dec
inc
adc
loope
and
nop
mov
adc
aaa
xchg
out
lahf
dec
dec
jae
pop
add
xor
mov
out
das
sub
sar
xchg
lds
lea
xor
xlat
rolb
sbb
jle
cmp
fbstp
pop
cmp
outsb
lea
lods
push
mov
decl
movb
push
les
xchg
push
mov
and
decl
aaa
lds
idiv
mov
push
lret
dec
je
sub
lcall
inc
add
adc
popa
mov
cmp
data16
mov
std
fcomip
cld
les
dec
sbb
or
arpl
jg
jae
push
cmp
jg
mov
sub
xor
roll
outsb
data16
xor
es
sbb
test
std
lods
fdivrp
scas
ss
ss
iret
cwtl
cwtl
or
push
adc
imul
and
xchg
inc
ror
stc
lds
mov
pop
into
and
addb
jmp
xchg
js
ficoml
pop
cs
or
jg
mov
mov
mov
data16
push
xor
in
test
add
decl
shlb
push
imul
pop
clc
dec
loopne
out
pushl
mov
stc
inc
jl
mov
aas
out
lods
cwtl
mov
xchg
outsb
mov
inc
jne
decl
xor
call
aam
repz
mov
pop
pushf
loopne
mov
sar
ljmp
xchg
dec
dec
out
mov
shlb
cmp
jp
push
pop
add
aam
jge
call
sbb
out
lds
mov
mov
sbb
outsl
mov
pushl
movsb
jo
lcall
mov
je
jmp
outsl
outsl
dec
dec
mov
pop
enter
pop
lret
ficomps
popa
mov
or
loopne
xor
cmp
jo
lods
mov
and
fadd
movsl
or
mov
subl
icebp
cs
js
hlt
or
loopne
mov
dec
pushl
and
dec
test
and
sub
ret
dec
push
aaa
std
jg
fmulp
dec
popf
push
aas
addb
mull
mov
cmc
dec
rorl
cmp
or
pop
jbe
cs
inc
dec
shlb
jg
jmp
pop
dec
mov
sub
jmp
ja
mov
mov
dec
add
subl
lea
xor
sbb
and
sbb
bnd
ret
pop
in
dec
lret
incl
and
push
sbb
stc
lea
into
pop
mov
leave
jmp
pop
sub
addr16
mov
inc
push
sbb
push
enter
stos
repnz
dec
cmp
pop
int3
cmp
lcall
fiadds
jbe
cwtl
xchg
jp
cmp
aas
stc
pop
ja
sub
mov
ljmp
inc
mov
pop
add
loope
cwtl
sub
xor
mov
adc
call
cmpb
xchg
push
jmp
mov
xchg
push
ljmp
insb
sub
in
push
scas
iret
mov
jp
scas
jnp
inc
jne
out
add
shrl
xchg
mov
push
in
test
pop
add
mov
dec
pop
test
adc
das
bound
ljmp
cmp
pop
std
adc
mov
pop
aam
dec
jns
movsl
jle
int
push
xor
in
mov
xchg
mov
pop
jle
jnp
lcall
call
aam
adc
sbb
xchg
and
scas
cld
xor
inc
movsl
xchg
xchg
adc
incl
jmp
outsl
add
xchg
test
adc
jo
repz
sub
sbb
iret
push
jg
icebp
out
mov
push
lcall
sub
lret
and
jg
test
jecxz
sub
je
jecxz
subb
scas
mov
popf
dec
inc
or
sub
jle
lret
xlat
repnz
flds
lret
cmp
jg
test
xor
cmp
je
and
xor
pop
xchg
sub
movsl
clc
xchg
cmp
call
xchg
ficoms
cli
icebp
ficompl
and
mov
adc
xchg
mov
sub
lcall
and
ljmp
clc
cmc
popf
fsubrs
xchg
sbb
andl
repnz
pop
adc
push
cmp
xchg
jb
mov
lds
sub
mov
pop
push
imul
ljmp
xchg
cld
leave
clc
sbb
ficompl
fstl
dec
and
cmp
dec
test
mov
lcall
leave
jb
pop
aam
sbbl
inc
sbb
popl
mov
cmpsb
cmp
sub
inc
incl
jbe
pop
lret
aas
xor
pop
fidivrl
in
ds
nop
fnstenv
inc
lret
cs
pop
lock
add
inc
scas
or
lahf
push
mov
jae
xchg
sbb
call
repnz
lock
mov
jg
jne
push
punpckhwd
sarl
fmul
jb
ljmp
add
xor
xchg
mov
imul
cld
popa
mov
inc
push
dec
cld
cmc
insl
incl
sbb
stos
add
xor
mov
jns
fisttpl
movsl
cmp
mov
inc
ja,pn
fs
and
pop
stos
nop
daa
sar
lcall
shr
scas
rcrb
push
mov
in
in
jns
rolb
jge
and
clc
mov
or
fisttps
sub
lods
bound
add
scas
mov
push
aad
repnz
cltd
inc
jmp
fmull
ss
and
jl
jmp
add
ds
cmp
das
ja
xchg
mov
sar
call
jno
gs
std
mov
subb
jo
mov
add
dec
sub
leave
inc
bound
and
frstor
dec
sbb
cmc
mov
sti
sub
jo
mov
inc
or
fistpll
punpcklbw
fistps
cwtl
lock
addb
fildl
fbstp
inc
pop
push
aas
sub
dec
insl
mov
add
shrl
cld
ret
je
push
lret
jg
and
adc
sahf
mov
sub
push
mov
mov
pop
aad
pushl
sbb
ss
out
sbbl
loopne
mov
dec
arpl
popa
addl
decl
mov
mov
mov
cltd
mov
pop
push
std
jmp
cmc
sub
daa
inc
or
dec
iret
pop
xor
inc
push
jmp
xchg
lods
inc
ror
fldenv
push
and
mov
jne
decl
add
loope
mov
jb
repnz
mov
mov
cmp
mov
das
int3
jbe
adc
mov
aaa
arpl
push
aad
mov
decl
fidivs
das
outsb
sbb
cmc
test
stos
pop
out
out
clc
mov
dec
lea
jle
mov
ljmp
call
cmpsb
pop
xchg
shl
out
pusha
fidivl
cmp
mov
dec
movsb
cltd
or
cmc
jnp
dec
inc
test
test
loop
out
or
mov
jbe
add
incl
cmp
test
mov
pop
mov
cmp
cltd
sub
movsl
in
lea
mov
ljmp
inc
sub
decl
mov
push
cwtl
push
pop
pop
mov
repz
clc
mov
dec
imul
decl
outsl
mov
mov
sbb
mov
ret
jno
or
pushl
into
xchg
xor
sbb
pop
ja
push
pop
imul
fs
pushl
orb
repnz
jge,pn
mov
cld
shrb
adc
xchg
dec
movb
hlt
jle
adc
imul
popf
mov
popa
mov
push
mov
pop
sbb
aas
stos
cmp
outsb
mov
xorb
les
push
clc
in
mov
jbe
jbe
mov
das
inc
inc
push
outsl
cmp
push
mov
mov
sbb
jmp
mov
pop
push
adc
aam
lcall
jmp
daa
xor
push
dec
jmp
fcomi
shll
mov
dec
pcmpgtb
lods
repnz
incl
pop
sub
and
fcomi
ret
fwait
pop
filds
js
add
push
mov
or
pop
jg
and
in
loop
xor
decl
js
or
dec
sbb
cwtl
sbb
sbb
cmp
xor
push
dec
push
cli
mov
xchg
jmp
adc
fwait
dec
lds
mov
xchg
sarb
mov
rclb
xor
mov
lret
or
in
insl
lods
mov
fs
sub
pop
mov
inc
pushl
cmp
cmp
js
clc
pop
adc
xchg
out
mov
xchg
repnz
inc
xor
inc
bound
mov
loopne
adc
loope
nop
cli
stos
jp
xor
in
jmp
push
and
fwait
cmp
insb
mov
imull
gs
xchg
push
dec
fstp
stc
jmp
mov
movsb
leave
fisubl
cmp
sub
jmp
mov
and
cli
sub
mov
jmp
and
insl
bound
ss
ljmp
dec
cli
es
push
mov
js
push
cmpsl
je
insb
xor
out
mov
clc
aaa
sbb
mov
push
imul
mov
aam
das
clc
out
popa
cmp
mov
or
sbb
aam
pop
aam
xor
sub
out
mov
xchg
int
in
mov
jmp
int3
dec
movsl
lock
lods
ss
popf
scas
lcall
es
xchg
leave
sub
call
dec
pop
stos
pop
daa
push
add
mov
mov
jge
movsb
les
aaa
push
ret
add
test
adc
hlt
fldl
cmp
cld
loopne
andb
rcll
js
out
mov
pop
ret
jg
push
sub
pop
sbb
and
mov
outsb
pop
xor
cld
ljmp
jb
adc
pop
call
push
dec
hlt
dec
cmc
call
addb
lds
ret
lret
aas
xor
adc
mov
aaa
std
cmp
or
jbe
fdiv
idivl
add
gs
push
pop
in
inc
cmp
inc
hlt
push
stc
shrb
call
fidivl
cmpsl
lods
ret
or
pop
mov
fstp
loop
and
mov
ljmp
outsb
aad
jmp
cmp
or
adcb
stos
or
adc
decl
mov
dec
sub
pop
mov
push
rcrl
test
sbb
push
pop
sahf
mov
mov
lods
cmp
xchg
fdivl
ljmp
mov
mov
pop
xchg
add
cmp
inc
sbb
push
rolb
mov
aad
adc
das
clc
xchg
or
sbb
inc
scas
cmpsl
adc
cmpsl
clc
mov
insl
push
mov
push
les
sbb
jae
xchg
xchg
jmp
xor
xchg
pop
ds
jno
cmp
cmp
mov
jns
adc
sub
arpl
repnz
inc
lcall
adc
data16
and
scas
cmp
sbb
mov
fists
push
mov
repz
into
dec
fcomps
jl
lcall
mov
mov
sbb
pop
push
scas
dec
fwait
push
pop
ljmp
incl
aas
push
add
inc
dec
sti
inc
repz
mov
add
repz
xor
xchg
ljmp
jecxz
xor
addr16
dec
inc
pop
mov
mov
test
xor
add
decl
sbb
xor
mov
xchg
push
and
stc
pushf
test
inc
cmp
xchg
incl
fiaddl
add
cmp
dec
lret
adc
loop
sbb
call
adc
movsb
push
jle
mov
mov
sub
imul
mov
push
cmp
cs
ret
shr
pop
jg
jge
shrl
mov
sub
inc
or
push
sbb
rcrb
pushf
test
mov
das
iret
stc
stc
and
lret
in
push
call
imul
pop
xlat
mov
pop
fs
jp
mov
sub
das
add
and
test
mov
stos
add
lcall
xor
in
cmpsb
ror
outsl
outsb
push
push
nop
or
lahf
xchg
sub
test
push
lcall
pop
fimuls
cmpsb
dec
or
divl
bound
push
imul
or
or
jp
lods
push
loopne
data16
mov
pop
clc
gs
fcoml
add
or
test
outsl
test
and
sub
and
mov
mov
adc
add
push
mov
pop
jl
pand
or
fadd
lcall
sub
jp
lret
dec
pop
shl
iret
mov
testl
scas
lods
lds
mov
add
stc
sbb
ds
pop
cmpsb
mov
jnp
jge
jle
jg
std
add
push
mov
lods
jle
jb
xchg
bound
push
test
sti
xchg
lcall
out
or
pop
cld
aaa
decl
int
into
add
fcmovbe
jno
pop
cltd
lcall
ret
stos
jno
leave
stos
pop
cmp
loope
arpl
cwtl
add
mov
clc
lcall
sbb
mov
iret
jo
dec
add
xor
das
nop
inc
push
std
mov
mov
sbb
aam
pop
and
xchg
movsl
outsl
mov
icebp
and
mov
pop
dec
call
bound
sub
xchg
sti
inc
mov
jmp
into
or
andb
idivb
pop
mov
aam
jb
pop
cld
jmp
rcl
mov
sbb
cmc
js
lds
mov
mov
or
ljmp
fiaddl
int3
xorl
pop
cmp
int
add
insb
adc
loope
dec
sub
test
and
leave
repz
call
stc
sub
dec
fwait
mov
dec
call
int3
push
sbb
pushf
scas
push
roll
clc
jo
stc
divb
std
call
xlat
add
fbstp
pop
das
add
mov
sbb
test
jp
ret
jmp
lock
xchg
mov
xchg
sub
mov
push
out
cmp
pop
into
xor
decl
inc
out
sbb
and
adc
xchg
imul
jbe
hlt
pop
pop
aad
xchg
lret
mov
call
imul
lea
mov
mov
cmp
fdivrs
inc
push
roll
jle
push
xchg
scas
pop
int3
loop
loopne
jmp
jo
pushf
bnd
hlt
xor
push
decl
mov
scas
adc
or
ss
add
adc
or
mov
ljmp
pop
jnp
mov
pop
ljmp
inc
bound
mov
xor
and
clc
cli
stos
or
fidivs
test
dec
add
out
xchg
sbb
divl
or
pop
pop
and
call
loopne
out
cmp
cwtl
into
cmp
inc
cli
imul
cmp
ss
jg
add
adc
sbb
adc
imul
inc
push
scas
dec
mov
or
incl
fidivrl
lret
push
rorl
call
xchg
xchg
lcall
push
clc
decl
mov
jp
sarl
sbb
xchg
jl
xchg
loope
movsl
mov
push
jb
out
clc
dec
das
push
and
pop
ret
mov
push
stos
xchg
dec
and
push
jecxz
das
sar
or
incl
xchg
test
loopne
repz
clc
xchg
hlt
push
jmp
pop
push
add
dec
out
mov
test
mov
xchg
fwait
scas
clc
dec
adc
les
or
pop
aaa
mov
test
call
mov
aaa
mov
adc
xchg
add
stos
test
enter
cmp
test
call
add
movsl
inc
or
mov
icebp
fsub
pop
sbb
cwtl
mov
jg
xchg
cs
mov
dec
mov
aam
sub
sbb
pop
insb
add
and
mov
lcall
scas
insl
mov
scas
test
xchg
addr16
jg
adc
bound
dec
xor
lcall
daa
shl
decl
std
scas
dec
mov
pop
xlat
sbb
jle
packssdw
cli
sarl
test
cmp
fldcw
lock
mov
add
dec
xchg
ja
ljmp
mov
add
scas
test
hlt
add
add
scas
mov
jmp
aam
or
notb
jecxz
pop
push
xorl
mov
int
push
jge
mov
scas
sbb
jl
addr16
xor
in
ja
decl
xor
nop
jno
fwait
dec
pop
daa
icebp
cmp
push
jns
arpl
inc
fmuls
dec
call
jns
mov
mov
mov
mov
iret
xchg
andl
call
jo
mov
je
es
sbb
test
insl
aam
sub
xchg
scas
cmp
stc
jg
pushl
pop
pushf
lods
loope
push
or
pop
scas
loope
ret
inc
push
scas
mov
imul
popf
hlt
mov
or
inc
pop
ljmp
adc
cmp
jmp
rcrb
incl
jl
dec
xchg
or
jnp
sbb
pop
hlt
dec
fcomps
pop
pusha
cld
mov
jle
into
pop
cmp
in
sbb
and
in
iret
stc
inc
jle
loopnew
dec
jp
cmpsb
stos
mov
add
inc
sub
and
fnsave
pop
xchg
pop
test
das
jmp
out
es
stos
ja
andl
pop
jne
sbb
repz
mov
and
loopne
stc
and
in
loope
cmp
push
xchg
inc
lcall
cmp
mov
aaa
or
fiaddl
push
lods
jecxz
ret
mov
in
aam
scas
xchg
rcrb
xchg
mov
scas
add
xor
mov
popf
adc
in
ss
lods
sti
test
lcall
test
pop
cmp
pop
mov
xchg
xchg
and
mov
or
pop
inc
cmp
jg
shl
loopne
xor
push
lcall
jle
xchg
mov
and
mov
insl
js
fcoms
push
cmpsl
ja
fsubr
push
push
jge
cmp
je
adc
scas
ja
lret
dec
ljmp
bound
scas
mov
in
mov
pop
fldl
es
push
repz
cmp
inc
sub
mov
push
fbld
mov
test
popf
or
decl
ss
dec
lods
and
ss
pushl
adc
inc
pop
popa
jle
jne
mov
xor
ret
mov
pushf
jg
movsl
clc
addr16
dec
sarl
xor
or
imull
cmc
pop
ret
test
mov
xlat
dec
cld
adc
lods
fadds
call
dec
es
pusha
in
lods
jne
pop
outsb
push
sahf
popf
cwtl
icebp
mov
ljmp
adc
shll
cltd
rcrl
call
push
add
lods
lea
inc
mov
lret
xlat
cwtl
das
jns
pusha
and
push
test
loope
jg
ljmp
mov
out
pop
jmp
in
sub
and
add
es
fwait
pop
dec
lea
mov
mov
out
clc
jmp
leave
sbb
orl
insb
push
push
xor
repz
fisubl
push
mov
jmp
std
sahf
add
and
jle
sub
andl
sbb
jg
sbb
pop
dec
add
mov
push
mov
and
ficompl
inc
loopne
sub
arpl
and
adc
stos
xor
pop
das
clc
loope
cmp
push
mov
sbb
int3
fnstsw
decl
jmp
and
inc
jbe
insl
xchg
lock
mov
mov
les
in
int3
push
jae
adc
pop
test
sub
imul
nop
lcall
push
outsb
ss
imul
push
lcall
imul
sbb
cs
clc
jmp
sub
adc
push
mov
ljmp
pop
pop
pop
jecxz
xchg
push
sub
mov
push
dec
dec
jae
cmp
or
call
inc
outsb
sarb
enter
mov
push
in
test
sahf
push
lret
or
inc
test
sub
xor
sbb
out
aad
mov
adc
decl
pop
fisubl
xchg
mov
dec
or
mov
mov
inc
mov
pop
mov
out
cli
stos
loop
adc
popf
xchg
dec
adcb
mov
pop
push
jge
add
push
lea
sti
loope
dec
push
mov
cmpsl
cmp
call
jno
es
test
mov
lods
fs
push
sbb
rorb
lret
rcrl
push
sub
cmp
aas
stos
inc
aam
out
push
shl
sub
cs
out
adc
dec
mov
call
xor
xchg
in
cmp
and
jno
xchg
mov
fsubr
loopne
leave
or
jge
mov
xorb
mov
jp
addl
arpl
ljmp
pop
jo
xchg
mov
fisttpl
and
gs
pop
adc
lret
or
cmp
sbb
ja
xor
mov
ljmp
ss
xchg
in
mov
sub
sbb
jg
jle
movsb
pusha
fs
and
clc
xchg
leave
test
sbb
jmp
insl
or
in
adcb
jmp
push
arpl
or
repz
inc
ror
fcmovnb
outsl
aam
jmp
fmuls
mov
mov
pop
fstpl
inc
loop
jg
icebp
outsb
push
clc
ror
subb
add
jmp
clc
addl
jle
shll
cmpsb
lock
ret
ljmp
inc
movsl
mov
movlps
ljmp
mov
sbb
sbb
ret
cmp
xlat
xchg
cmc
pop
stos
mov
sub
inc
add
add
pushl
int
xor
fidivl
add
add
ljmp
push
in
in
insl
cmp
adc
pop
push
stos
iret
aas
xor
mov
iret
sbb
jmp
imul
push
notb
pop
xor
inc
inc
aad
xchg
and
sbb
cli
and
mov
mov
outsb
and
inc
ljmp
xchg
repnz
jg
jmp
outsl
shr
js
mov
sti
stos
dec
sbb
int
imul
sbb
push
mov
data16
orb
mov
lods
bound
in
jl
xchg
mov
sbb
outsb
and
in
dec
or
in
ljmp
xor
push
jge
lods
psrld
inc
je
ja
in
xchg
test
dec
fcoms
mov
xor
filds
jg
adc
mov
stos
push
cmp
dec
movsl
jg
lods
std
scas
jno
mov
ds
popa
outsl
or
scas
sub
push
adc
les
outsl
push
or
jl
mov
fdivrl
inc
sbb
or
pop
adc
mov
movsl
popa
mov
call
cmpsl
int3
in
out
int
stos
jno
orl
ret
lret
repz
pop
jmp
sub
shll
test
loopne
mov
movsl
jle
jecxz
mov
lahf
incl
ljmp
leave
pop
jnp
in
cmp
gs
shll
push
mov
lcall
and
adc
das
test
stos
imul
xchg
xchg
jb
lahf
inc
je
sbb
nop
lock
xor
push
push
icebp
rcrl
into
push
aas
ret
xor
orb
xchg
jge
mov
adcl
mov
and
out
pop
pop
cmc
ljmp
lcall
mov
fidivrs
roll
ss
lret
mov
sub
rcll
xor
incl
mov
scas
int
lods
es
lods
sub
jle
fcmovbe
out
negb
mov
incl
ja,pn
mov
adc
lret
mov
cmp
imulb
sub
add
call
out
sbb
mov
adc
sub
dec
dec
popaw
inc
jge
lods
mov
adc
add
test
or
movsb
mov
pop
jecxz
das
in
fscale
mov
sub
pop
adc
fdivl
jnp
int3
mov
je
jg
jecxz
in
js
call
xchg
aad
push
inc
ror
stos
enter
incl
cmpsl
add
ret
fadds
dec
xchg
lret
sahf
jmp
insl
jge
enter
jmp
push
mov
pop
cmp
mov
jmp
hlt
adcl
test
fs
sub
sub
mov
movsb
shll
jmp
adc
dec
es
inc
pop
mov
adc
nop
daa
lret
and
mov
xchg
or
xor
ljmp
xchg
pop
mov
sahf
lock
mov
pop
popf
jo
in
jno
xchg
je
push
test
iret
push
xchg
xchg
mov
push
and
mov
test
scas
int3
cltd
lods
cli
push
ljmp
fs
hlt
call
std
call
mov
in
mov
jo
hlt
lahf
sbb
push
xchg
popa
scas
fsubl
scas
cli
incl
fwait
xorb
mov
out
push
dec
cld
fs
push
ljmp
sar
mov
jae
aam
fdivrp
or
ret
lcall
cld
pop
mov
push
push
movsb
ds
and
clc
add
mov
mov
pop
loopne
push
cmp
ja
mov
out
fldcw
cmp
push
pop
jle
push
jp
xchg
sarb
dec
pop
inc
in
aas
fs
pop
cld
lds
std
push
push
std
das
clc
pushl
enter
mov
int
cli
incb
cmp
and
decl
inc
movsl
stos
pop
pop
lock
add
inc
jge
vmread
mov
out
or
mov
daa
push
sub
pop
ret
sub
xor
cmp
jmpw
aaa
std
jmp
mov
jne
call
fadds
aad
cltd
js
pusha
pop
jle
aam
test
pushl
jle
fbstp
sbb
mov
dec
mov
adc
test
outsb
sbb
ret
push
adc
jp
xlat
out
mov
shrb
jp
shrb
pushl
jo
lea
mov
or
shll
mov
dec
pop
das
jp
mov
clc
lcall
test
int3
roll
jecxz
mov
repz
mov
pop
add
adc
incl
loopne
mov
xchg
fwait
pop
inc
jmp
movsb
cmpsb
push
mov
inc
inc
icebp
js
xor
cld
outsl
loop
insb
ja
je
inc
movsb
and
cs
lret
rcrb
data16
pushl
push
call
movsl
xor
inc
movsl
mov
repnz
adc
inc
test
xchg
bound
std
incl
lods
jle
hlt
push
xchg
mov
mov
es
inc
lret
imul
imul
lea
stos
bound
mov
ljmp
adc
pop
sub
insl
xchg
jbe
mov
das
mov
mov
push
cmp
cmp
lahf
shrl
mov
mov
decl
push
fistl
dec
into
xchg
fiaddl
add
sti
xor
push
fiaddl
imul
mov
inc
inc
in
aam
daa
sub
jg
cwtl
pop
push
loopne
xchg
lret
push
int3
push
mov
test
outsl
out
rcrb
popf
call
mov
stos
lcall
lcall
jmp
and
add
pushl
mov
push
adc
sar
jg
rol
hlt
dec
lds
lahf
push
cwtl
sbb
loop
or
es
ljmp
push
inc
out
out
stos
jmp
or
inc
insb
sbb
sub
ss
mov
cmp
push
push
std
cmp
pop
push
adc
iret
cmp
fs
notl
or
clc
ljmp
inc
mov
push
in
or
push
subl
sub
test
sub
cltd
pop
je
clc
jmp
or
sub
popa
sub
sbb
push
in
cmp
stos
mov
movsb
out
call
add
lods
sarl
decl
cmp
das
mov
jmp
adc
pop
das
jl,pn
sub
adc
adc
hlt
inc
mov
and
inc
das
mov
lods
cmp
mov
dec
loop
ljmp
fidivrs
jecxz
imul
or
out
jnp
popa
icebp
push
mov
out
das
mov
incl
lret
decb
push
jb
mov
jge
loop,pt
cmp
xor
xor
xor
push
popa
adc
sub
mov
scas
loop
cmp
jmp
loope
adc
dec
clc
pop
dec
cmpsl
jae
add
incl
push
sbb
stc
and
js
pop
js
fld
or
scas
cmp
xor
fstpl
frstor
mov
out
out
es
adc
arpl
rclb
movsb
xor
in
es
idiv
outsl
adc
and
mov
pop
cwtl
inc
in
pushf
dec
cmp
ljmp
or
stos
dec
popa
jo
mov
icebp
jmp
lds
mov
jnp
or
incl
cmp
js
lret
inc
push
xchg
icebp
fmul
fbld
xchg
mov
cmpsb
divb
cli
fdivr
add
sbb
lods
push
mov
mov
insl
cmp
push
das
shrb
incl
in
and
sbb
into
mov
adc
lret
mov
cmpsb
cmp
or
add
enter
mov
inc
mov
push
sbb
jg
or
jle
aad
dec
or
repz
xchg
out
push
push
adc
test
sahf
mov
std
inc
lret
mov
jo
fisubrs
lahf
jmp
daa
and
dec
mov
lret
jge
pop
aam
inc
outsb
mov
es
loop
add
pop
inc
mov
ds
ljmp
push
cld
cmc
testl
pop
xchg
mov
push
dec
outsl
in
mov
arpl
pop
fisubrl
loopne
mov
fimuls
or
sbb
or
arpl
ret
rorb
ljmp
ret
sahf
xchg
and
xchg
inc
push
jg
push
cmc
inc
mov
out
mov
sbb
in
cmc
or
sub
xchg
add
lcall
jb
ja
in
in
push
mov
orb
into
arpl
pop
incl
loopne
push
cmovb
mov
sti
cmp
mov
xor
jnp
inc
jne
sbb
push
xchg
inc
ss
mov
arpl
data16
les
jecxz
mov
lcall
icebp
out
xchg
xor
in
cltd
lods
test
getsec
lods
fstpt
negb
pushf
inc
mov
das
call
lea
pushf
mov
enter
mov
cmpsl
add
push
in
movaps
mov
xor
jmp
subl
out
shlb
xor
ret
decl
clc
pop
inc
fcoms
cs
mov
lds
mov
bound
jecxz
jmp
out
insl
sub
cmp
jle
xor
icebp
adc
data16
lcall
decl
mov
fimull
cmp
aaa
add
call
incl
mov
jbe
loopne
jmp
dec
push
jp
loop
xor
mov
fimull
jns
int3
cmp
pop
and
cmc
jg
movsb
inc
fdivrl
sub
enter
mov
loope
dec
shlb
mov
inc
pop
xchg
fst
adc
aam
lods
xor
mov
and
clc
arpl
mov
or
lcall
and
loop
mov
pop
cmpl
dec
scas
pop
sub
daa
bnd
in
xchg
mov
jl
mov
jmp
adc
aas
xchg
cmp
jno
cmc
inc
jbe
jns
in
sub
lock
lcall
incl
and
lret
mov
cli
and
mov
xchg
jp
mov
add
jg
arpl
or
inc
jecxz
addr16
fwait
imul
clc
test
pop
js
dec
cmp
divb
adc
sub
cmp
pushl
shl
push
pop
and
inc
repz
and
jne
mov
pushl
aam
and
mov
mov
pop
mov
pop
xor
lret
xchg
and
push
lret
stos
mov
ljmp
xchg
pushf
std
pop
or
push
sbb
inc
aaa
and
jge
xchg
or
xor
iret
or
ljmp
es
or
fs
push
jns
dec
lds
scas
fwait
add
scas
push
cld
sahf
shr
call
out
imul
sarb
sbb
sbb
mov
ljmp
pop
mov
pop
insl
int
in
cmc
mov
and
mov
cmp
and
das
cli
jmp
adc
add
add
insb
or
mov
mov
fbstp
inc
sbb
pop
loope
cmp
pop
bound
notb
daa
sub
orl
ds
jmp
xorb
decb
leave
rcrb
aas
or
test
cmp
call
mov
out
aas
sub
xchg
ret
cmpsl
dec
scas
call
pusha
cltd
xor
cld
and
imul
mov
jmp
jae
sbb
push
je
pop
xchg
xor
int3
int3
add
das
das
xchg
je
sbb
lods
sbb
decl
arpl
mov
cmpsb
jp
dec
aaa
and
mov
movsl
outsb
jmp
and
pushl
jg
inc
es
mov
jb
xchg
movsl
in
in
rclb
cld
mov
inc
dec
and
pusha
sub
in
cmp
xchg
imul
decl
mov
adc
cs
iret
es
clc
sub
call
ljmp
push
loopne
pusha
xor
inc
xor
mov
fcompl
sbb
mov
xlat
inc
mov
adc
jns
mov
nop
out
and
cli
nop
mov
inc
adc
movsb
push
inc
cmp
pushl
call
sub
or
pop
mov
mov
mov
sbb
popa
aad
jmp
fsubrl
mov
pusha
jge
hlt
dec
insb
mov
pusha
std
lret
int
jns
shrl
pop
mov
nop
aad
mov
jae
je
mov
sbb
ljmp
je
jle
jb
insw
fdiv
repz
sbb
fldt
cmc
push
ja
cmp
push
cmp
push
into
add
in
inc
xchg
pop
sbb
cli
ret
repnz
dec
pop
lock
lcall
nop
rclb
sbb
fldenv
mov
adc
decl
mov
mov
dec
inc
shl
adc
addr16
inc
sub
pop
decl
adc
xor
in
xor
xchg
std
ficompl
xchg
test
jg
hlt
jne
scas
and
pop
mov
xor
call
je
in
shll
mov
cmp
adc
adc
repz
sbb
fisubrs
bound
fiaddl
dec
inc
decl
icebp
fsubrs
dec
lods
into
sub
add
dec
in
mov
jp
mov
ret
push
jns
into
adc
pushl
fdivs
ret
lahf
push
call
pushl
in
movsb
in
sbb
insb
xor
xchg
in
mov
popa
lret
push
repnz
xor
xchg
outsb
mov
lcall
xchg
out
dec
fs
jg
xchg
data16
cmpsl
jg
mov
stos
mov
fmul
dec
mov
pavgb
fdivrs
xor
mov
in
dec
sbb
push
push
sahf
cli
jl
clc
mov
and
jle
into
dec
call
std
decl
push
xor
and
jp
jp
out
push
inc
sub
cmc
adc
jae
mov
inc
sub
movsl
jg
incl
loope
std
aad
enter
sbbb
xor
or
jg
lods
sbb
dec
sbbl
andb
sub
pop
sbb
xor
jmp
mov
and
and
test
inc
jp
and
aaa
push
mov
mov
jno
inc
dec
fldcw
sahf
dec
mov
cmpsl
cmp
call
das
les
jns
test
push
sbb
xchg
mov
lds
sub
call
pop
inc
sbb
jnp
cwtl
test
idivb
push
push
lock
clc
sbb
out
jge
mov
fs
inc
aas
sub
sub
imul
call
mov
xchg
dec
cmpsb
popf
mov
out
lret
fnsave
pushl
movsb
repz
ret
inc
push
sti
cmpsl
sahf
pop
inc
pop
mov
xor
cmpsb
mov
ljmp
shr
jp
xchg
mov
jl
or
pop
and
and
ds
ljmp
mov
push
dec
jne
repnz
outsl
cmc
pop
std
push
sbb
insb
std
pop
mov
mov
push
jmp
imul
test
rcrb
pushl
adc
icebp
dec
daa
push
insb
jl
mov
push
mov
lret
mov
movsl
gs
ljmp
add
push
cmp
sbb
pop
fidivl
loopne
cmp
adc
pop
push
lock
mov
stc
jg
xchg
loope
lock
push
or
jmp
aas
pop
movsb
mov
jns
adc
ljmp
out
cmp
pop
filds
pop
ja
sub
gs
orl
inc
setns
pop
sar
loopne
push
pop
lock
jg
das
icebp
popl
mov
cli
mov
shll
inc
push
out
fwait
sub
clc
xor
push
add
incl
cmpsl
jl
sbb
dec
pushf
fcmove
lcall
scas
push
outsl
mov
cli
lds
ds
ss
cld
fs
mov
fildll
mov
shl
outsl
cmp
movsb
pop
xchg
lcall
scas
shlb
mov
jno
ret
fmull
mov
icebp
aas
or
and
or
ja
cmp
mov
call
cmpsl
sbb
pop
mov
jle
ds
and
push
mov
xchg
cs
xchg
mov
cmp
lcall
xor
in
and
orb
push
xchg
sti
pushl
dec
dec
stos
out
jge
dec
ja
das
out
cmpsb
stos
push
cli
aam
push
push
jno
roll
and
xchg
lock
jg
or
call
adc
sub
dec
jmp
call
pop
adc
pop
push
call
cmp
xor
jae
jns
pop
mov
aam
sub
arpl
lock
ljmp
rorl
sbb
push
test
ret
mov
push
les
cmpsl
sar
pop
xor
push
inc
imul
fists
inc
imul
cwtl
pop
cmc
jg
cli
insl
push
jnp
sub
lret
and
mov
cmpsb
push
mov
scas
xor
ficoml
movsl
dec
cmp
je
push
in
out
mov
test
jmp
mov
adc
imul
jo
dec
xchg
leave
inc
cld
fwait
dec
or
dec
in
inc
jbe
outsl
test
dec
leave
cmp
jmp
adc
mov
inc
sbb
inc
inc
lods
dec
out
dec
xor
add
dec
adc
dec
jg
jp
rclb
pop
icebp
or
cli
cmp
lods
cltd
cmp
cmp
fsubp
insl
adcb
decl
pop
inc
xchg
adc
cwtl
popf
pop
in
dec
jnp
mov
cmp
repz
lret
je
mov
jne
xchg
mov
testl
pushf
or
push
cltd
mov
pushf
daa
adc
sar
xchg
lods
push
inc
icebp
or
inc
std
repz
mov
cli
in
mov
std
insl
xlat
addr16
sbb
adc
testb
mov
stos
scas
mov
ljmp
sub
push
loopne
les
or
dec
icebp
in
fdivrl
shl
inc
push
add
mov
decl
lcall
call
ljmp
mov
stos
cld
and
fildl
aas
mov
push
sbb
xor
inc
out
add
aad
inc
sbb
sbb
sbb
aad
cmp
lods
inc
pop
jno
inc
mov
incl
sbb
insb
cmc
movsb
imul
fwait
and
mov
rcrl
add
daa
inc
push
inc
loope
xlat
dec
mov
lahf
fadds
push
cwtl
jno
sub
dec
jb
jle
cmp
and
pop
daa
xor
sbb
push
data16
lea
call
in
mov
imul
jbe
push
fldcw
call
adc
test
scas
jmp
std
rol
xchg
divb
dec
adc
pop
fildll
pushl
push
mov
mov
mov
cmp
scas
stos
movsb
addr16
xchg
jb
je
mov
and
add
popf
std
subb
fstp
mov
push
daa
pop
mov
fildll
mov
and
sarl
sub
insl
dec
mov
faddp
and
pushf
js
mov
call
pushl
fildll
and
mov
jae
lods
and
pushl
stc
subb
push
fiadds
xchg
cmpsb
pop
add
jne
mov
call
lea
out
lret
sub
jecxz
shl
out
cld
aad
add
filds
aas
push
mov
ret
dec
testb
hlt
xor
pop
lahf
test
fldl
incl
pop
sahf
push
inc
xchg
pop
in
mov
das
inc
lret
add
mov
loop
adc
std
shll
xor
mov
jmp
outsb
idiv
pushl
jmp
add
mov
loop
or
sbb
lahf
and
dec
and
clc
scas
into
int3
xor
pop
mov
mov
cs
ja
out
xchg
mov
insl
fdivrl
ljmp
aas
aad
out
iret
cmp
imul
lods
pop
test
repnz
outsb
int3
das
jl
jo
cmp
aas
inc
mov
mov
scas
xchg
data16
int
xchg
push
lcall
xchg
mov
jno
stos
fdivr
dec
xchg
cmp
mov
call
dec
nop
push
out
roll
jg
jg
push
cld
sbb
incl
adc
rcrb
mov
push
adc
xor
cltd
add
fcomi
xor
push
adc
stc
cld
stos
jne
pop
mov
inc
js
add
cmp
mov
movsb
pop
arpl
jmp
mov
rcr
xor
mov
cmpsb
add
fcomip
jmp
jae
loope
adc
stos
mov
push
jbe
adc
orl
xor
cli
jmp
js
mov
mov
sbb
xor
mov
sti
jp
decl
push
mov
shlb
out
out
push
fdivrp
jns,pt
ss
stos
popf
popf
sbb
lcall
jnp
dec
test
imul
adc
push
hlt
xchg
inc
adc
mov
ljmp
popf
sbb
std
addr16
frstor
repz
subb
push
push
dec
dec
movb
jg
loopne
sbb
jecxz
push
inc
mov
xor
or
jg
pushf
adc
out
sahf
adc
rcll
jnp
mov
cmpsl
pop
inc
pusha
pushl
push
les
test
test
addr16
jg
call
hlt
inc
mov
aas
insl
ds
fwait
add
xchg
xchg
repnz
sub
rcl
call
stc
imul
push
adc
pop
mov
std
mov
out
jns
flds
push
push
push
mov
cmp
mov
jge
jge
xor
push
mov
inc
mov
scas
or
sbb
das
cmc
push
jl
dec
inc
cmpsl
loopne
pushf
mov
xchg
inc
icebp
pop
add
inc
sbb
and
into
lret
outsb
das
test
pop
movsb
lock
and
jge
pushl
in
mov
out
stc
insb
push
pop
jnp
sub
int
or
jnp
mov
jne
xchg
outsl
xchg
push
and
cmc
jno
imul
xchg
and
ret
call
decl
stos
cmpsl
or
gs
stos
ficoms
mov
dec
jae
pop
insb
fisubrs
xor
and
incl
bound
rclb
popl
fmul
push
mov
sub
fbld
inc
pop
adc
cltd
jp
gs
decl
xchg
in
movsl
rcll
xchg
inc
cltd
mov
push
pop
cli
test
ljmp
repnz
stos
inc
ljmp
or
cmpsb
jmp
pop
or
lock
push
je
and
mov
add
inc
cltd
add
inc
insb
mov
lret
repz
pop
push
or
andb
lds
mov
sub
or
icebp
enter
ljmp
jo
pusha
adc
or
xchg
arpl
sub
imul
loopne
incl
push
stos
cmp
adc
push
or
pop
in
adc
scas
aad
mov
push
jmp
xor
mov
cmpsb
mov
insl
mov
jg
xchg
in
xchg
sbb
xor
imul
or
mov
xchg
cs
maxps
lods
push
aas
sub
loop
aas
lea
das
mov
pusha
jno
stos
sub
popa
in
pop
jl
mov
aaa
pusha
xor
pushl
mov
fildll
and
das
outsl
push
push
xchg
test
and
lret
mov
ljmp
push
das
adc
pop
notl
jge
lret
cmp
outsb
sarb
daa
xchg
fsubs
sub
sahf
in
adc
sahf
pop
cld
call
jmp
mov
push
andb
stos
inc
pop
sbbl
and
mov
pop
push
clc
mov
ljmp
lahf
add
loope
jecxz
jmp
fiaddl
rorl
lret
lret
jmp
pop
cltd
lahf
mov
sub
test
in
dec
iret
push
sahf
aas
sub
incl
xchg
adc
mov
push
push
adc
jg
ud0
out
cli
ffree
shlb
pop
testb
xor
inc
mov
fbld
call
xor
pushf
in
mov
xchg
dec
ret
fnsave
mov
fistl
pop
int
pop
xchg
jo
sub
dec
imull
in
pop
clc
scas
adc
pop
stos
int3
sarb
cld
mov
jle
pusha
test
xlat
xchg
repz
ljmp
sahf
xchg
dec
sub
jp
pop
roll
in
outsl
mov
mov
and
add
jnp
jmp
jns
fiadds
es
decl
jne
lret
stos
popf
ret
xor
repz
inc
cs
lods
and
and
lods
sbb
sub
fldl
push
jmp
inc
pop
mov
repnz
or
jae
icebp
lock
xor
icebp
sub
pop
call
dec
jg
adc
mov
cmp
inc
hlt
in
in
movb
add
stc
cwtl
popl
jge
aaa
jle
pop
dec
lret
incl
and
sbb
movsb
pop
mov
aam
jge
aas
test
jmp
mov
jle
cmp
inc
loopne
jmp
xlat
sarb
pop
xor
js
rcrb
xor
sbb
incl
add
out
xchg
cmp
in
jbe
dec
xchg
add
mov
ds
push
adc
pop
lock
and
inc
jne
xchg
inc
mov
fstpt
sbb
decl
cmp
bound
sbb
and
imul
mov
testb
pop
cld
mov
dec
shrb
dec
or
lds
nop
pop
rcrb
popa
add
jmp
mov
scas
imul
dec
in
clc
jmp
dec
je
mov
lcall
xchg
lcall
lcall
pop
sti
fwait
iret
aaa
mov
test
js
insb
adc
cmp
pop
orb
pop
pop
dec
cmpsl
scas
jmp
xchg
enter
std
and
nop
cmp
call
ret
xor
inc
sub
shll
dec
out
pop
roll
push
call
incl
mov
outsb
sbb
sbb
dec
lret
xor
add
pop
cmc
ljmp
xlat
add
pop
addr16
mov
addb
xchg
shlb
popf
insl
shr
clc
incl
lock
cltd
mov
adc
or
subl
inc
insb
or
push
adc
or
stc
mov
mov
loope
jg
push
js
insb
add
xchg
push
outsb
arpl
sbb
or
inc
test
adc
mov
sbb
jmp
pushf
cmc
cmpl
addl
nop
or
ljmp
sar
nop
sbb
test
xor
int3
mov
inc
sub
xlat
inc
addr16
loop
pop
fcoms
outsl
add
ret
jg
call
add
pop
xlat
dec
mov
fcomps
or
push
sub
lcall
xor
xlat
imul
lea
pop
adc
aaa
push
mov
out
lods
lcall
pop
stos
inc
adc
test
imul
andb
loop
into
xchg
xor
lods
stos
incl
decb
mov
inc
out
jo
ret
sbb
pushf
shll
xlat
jbe
lahf
or
jge
or
xchg
ret
jbe
adc
and
mov
push
or
jmp
test
fsubp
dec
repnz
pop
push
pusha
pop
imul
dec
std
lcall
adc
mov
lret
jne
arpl
jp
stos
fs
decl
push
js
into
push
mov
out
arpl
pusha
sarb
test
pop
and
cmp
jo
adc
call
mov
ja
lcall
rcrb
push
adc
push
dec
push
adc
pop
xchg
sub
mov
jp
dec
movsb
call
add
into
xchg
mov
xchg
adc
pop
xor
icebp
fadd
ds
cli
or
fistps
loopne
adc
mov
cli
sub
in
scas
xchg
lea
inc
sbb
and
fstpt
sub
push
xor
inc
mov
popa
push
dec
fsubrp
fistpl
xorb
imul
adc
jecxz
add
je
xorb
and
daa
sub
fmul
xchg
outsb
mov
sub
or
xchg
pop
jmp
cli
test
mov
ljmp
ret
in
jae
mov
inc
mov
leave
out
popf
decl
lahf
adc
pop
cltd
pop
stos
push
inc
adc
subl
lea
mov
dec
jle
lock
in
push
sbbl
testl
bound
decb
pop
sbb
jmp
jmp
loopne
push
jnp
lahf
lret
inc
leave
mov
or
jp
arpl
loop
mov
sbb
mov
neg
mov
ss
xor
jl
pop
aam
push
mov
adc
ljmp
and
fsubl
cmpsl
jnp
aam
push
js
or
pop
push
add
cmp
mov
jg
pusha
add
push
mov
gs
xlat
or
leave
inc
dec
xchg
test
in
ljmp
pusha
sti
jne
std
sbb
add
out
and
sbb
incl
test
sbb
jle
push
jno
incb
sub
jne
push
call
fwait
mov
lret
adc
push
fisubrs
lods
shlb
ljmp
icebp
xchg
and
lock
aam
push
js
ljmp
inc
xchg
xor
out
ret
aam
test
mov
fnstenv
xchg
sub
push
xchg
lock
test
shl
fcmovnb
or
inc
mulb
cwtl
inc
or
jmp
cmp
or
add
or
into
insl
xchg
xchg
mov
in
jmp
addr16
out
inc
lods
pop
lods
lret
mov
inc
xchg
cmp
sbb
out
cli
call
orl
sbb
mov
adc
ljmp
mov
lods
movsl
xchg
jnp
lods
arpl
xor
mov
arpl
inc
mov
pop
or
fisttps
in
in
ds
dec
insb
push
in
addb
ss
add
push
xor
aad
scas
cmp
sbb
call
stos
cmp
xchg
jle
jb
jb
ret
pushf
arpl
dec
pop
dec
and
push
add
jg
sbb
dec
add
add
xchg
xchg
mov
pusha
sbb
jg
cmpsb
push
xchg
shll
lea
loopne
mov
jae
inc
dec
lret
pushl
xchg
jmp
jge
rcr
dec
sbb
push
jge
fldl
int
ficompl
lock
call
bound
pop
shlb
dec
xchg
pop
adc
mov
push
sub
cmovb
das
clc
inc
xchg
xor
popa
mov
test
sub
mov
ret
push
cmp
jl
lcall
fstpt
call
mov
push
rclb
adcl
sbb
pop
ljmp
or
jo
inc
add
xor
sbb
cld
es
jge
sub
mov
aam
shlb
dec
xor
out
push
shl
fsub
jo
push
or
mov
mov
dec
outsl
cmp
and
addl
f2xm1
sbbb
jmp
sbb
or
cld
fsts
sarb
cmc
push
jb
add
dec
sbb
and
cld
fwait
imul
mov
pop
xchg
loopne
dec
mov
push
add
fwait
in
pushl
leave
mov
xchg
les
dec
push
xchg
pop
daa
insl
jle
sarb
lea
inc
mov
in
and
enter
divb
or
adc
negb
incl
cld
sbb
loopne
xor
adc
fdivrs
aaa
int
out
mov
sbb
xchg
cld
fcomip
push
ss
mov
mov
sbb
xchg
repz
pop
iret
xchg
lcall
dec
mov
mov
pop
pop
mov
decl
lds
fs
sahf
jns
test
cmp
cltd
cmp
mov
movsl
incl
repnz
outsb
push
mov
fs
adc
sub
popf
inc
mov
ja
stc
leave
out
clc
decl
xor
xor
pop
pop
add
mov
int3
sbb
pop
mov
xlat
push
pop
sbbl
movsb
clc
fstl
iret
out
lcall
fcomip
cmc
fcmovnbe
pusha
or
jne
jl
loope
sahf
clc
jg
pop
movb
push
lods
dec
xchg
jo
out
pusha
inc
push
pminub
incl
or
aaa
mov
jge
fcompl
mov
in
decl
test
rcll
xorb
mov
adc
ret
or
xchg
xor
call
mov
shll
mov
mov
mov
pop
in
sbb
mov
jmp
inc
and
scas
nop
push
sub
pop
cmpsl
aas
and
xor
testb
sub
adc
cmp
cli
imul
repnz
xlat
aad
aaa
sub
mov
sbbb
rcl
inc
lret
outsl
adc
cltd
repnz
test
rcrb
out
inc
xchg
inc
or
inc
mov
ljmp
jnp
jge
das
sbb
push
pop
stos
sti
inc
das
or
mov
or
jle
xchg
xchg
xor
fcomps
pop
add
pop
dec
mov
cld
lods
es
sar
jg
mov
testb
enter
add
jl
adc
data16
in
ds
call
cmpb
jns
lret
cwtl
cltd
int3
cmp
cwtl
jne
push
cmp
loop
test
or
clc
dec
hlt
mov
int3
movsb
jo
negl
jns
adc
mov
pop
and
pop
rcll
iret
mov
aam
ljmp
cmp
cmc
ss
fmull
mov
in
mov
xchg
incl
pop
mov
or
pop
dec
clc
xor
dec
pop
icebp
fcmovnu
fists
leave
pop
aam
clc
decl
push
dec
cmc
insb
and
cmc
icebp
sub
push
ljmp
mov
fisubs
cmpsl
outsl
cli
jb
icebp
xchg
fildll
or
imul
incl
mov
std
jb
or
jmp
push
jae
test
pushf
lods
add
xchg
fildll
push
mov
pusha
push
sub
icebp
or
pop
pushf
gs
rol
mov
js
in
add
loop
subl
test
ljmp
sub
and
add
push
add
adc
outsb
decl
pushl
mov
ljmp
push
dec
jge
mov
mov
scas
popa
cs
adc
lods
dec
arpl
inc
fldt
mov
push
stos
outsb
xchg
pop
ret
mov
lret
sbb
lcall
adc
jmp
xor
xchg
aam
addl
je
repnz
loopne
inc
push
addr16
fdivrl
in
jg
lret
fsubrs
cmc
cmpsl
test
iret
ficoms
cltd
iret
ret
in
mov
mov
or
ljmp
cs
lea
mov
pop
rorl
into
loope
mov
jle
jbe
adc
mov
test
ljmp
and
adc
das
sti
or
movsb
orl
mov
ljmp
jecxz
and
in
push
and
fadds
inc
leave
push
inc
cld
fcomip
outsb
shlb
ja
adc
stos
into
jg
inc
out
out
sub
push
push
push
cli
cmp
sub
shlb
xchg
scas
ljmp
xchg
aad
dec
ror
mov
je
push
ss
test
shl
cmpsb
adc
mov
lods
mov
dec
pop
arpl
ljmp
pop
dec
pop
nop
mov
iret
add
xchg
stos
or
jb
dec
daa
sbb
sbb
movsl
inc
clc
enter
fisubl
inc
sbb
pop
loopne
fisubs
idiv
out
es
and
push
fiadds
repnz
add
cli
movsl
pushl
in
cmp
push
cmp
cmp
insl
out
hlt
dec
fcomip
pushl
cltd
cmp
rcrl
lods
sub
fnop
sub
xor
out
sbb
cmpsb
fisttps
jmp
ficompl
gs
push
sub
out
loopne
cmp
enter
push
or
mov
mov
and
mov
decl
imul
or
inc
in
pop
in
cwtl
pop
xchg
jecxz
int
mov
ljmp
sbb
sub
jae
mov
jne
stc
adc
and
add
nop
daa
or
add
clc
fnstenv
pop
sti
adc
jmp
das
cli
ljmp
pop
mov
int
dec
test
push
call
mov
sub
lods
ljmp
mov
add
idivl
lcall
push
adc
inc
jmp
mov
jl
loopne
push
mov
jle
xlat
push
cmp
mov
cmpb
fbld
jo
aad
mov
movsl
add
pop
stos
cmp
xlat
mov
in
jge
xchg
inc
enter
lret
adc
out
ljmp
or
insb
lahf
outsl
rcrb
adc
call
mov
push
mov
mov
adc
mov
inc
jecxz
push
enter
push
clc
rcr
jecxz
into
and
or
leave
sbb
sti
xchg
incl
cli
pushl
decb
inc
xchg
push
jnp
xchg
adc
int
push
pop
enter
lock
jmp
push
cltd
lcall
rcrl
inc
dec
es
inc
enter
decl
lock
lcall
leave
dec
pop
xor
jb
push
in
cltd
cltd
cs
imul
cmc
mov
inc
inc
jns
cld
test
xor
cs
xchg
adc
mov
fsts
pop
pop
cli
pop
push
setno
mov
repnz
out
fwait
call
lret
pop
in
outsl
in
cli
fcomp
inc
gs
bound
ret
push
xor
xchg
sbb
call
fwait
test
sub
stos
imul
sub
cld
nop
jns
pusha
loop
ret
test
mov
adc
pushl
popf
or
shrl
movsb
push
or
mov
out
lahf
jp
pop
push
lret
pop
mov
ljmp
push
xchg
push
pop
je
xchg
addl
sub
cmp
stc
mov
aaa
out
mov
sub
mov
sbb
fldt
ja
and
cwtl
pop
and
lcall
pop
in
dec
push
xor
pop
pushf
lahf
les
mov
sub
inc
fisubs
lods
out
pop
jg
jmp
ret
shll
xlat
jp
pop
cmpsl
xor
test
cmpsl
aas
into
clc
push
mov
popf
or
adc
test
pop
popa
inc
leave
lcall
inc
and
add
dec
mov
addr16
add
je
mov
fimuls
pop
hlt
cmpb
pop
dec
and
hlt
inc
daa
cmp
incl
adc
xchg
rclb
cmp
shl
out
cmp
jl
sbbb
mov
xchg
out
xor
aas
mov
andl
icebp
push
dec
mov
and
mov
or
in
xchg
push
sub
jle
push
lcall
xor
call
sbb
ret
test
bound
or
mov
fxam
mov
call
mov
push
test
pop
in
movsb
push
push
hlt
mov
sub
jmp
xchg
push
xor
jecxz
push
ds
in
dec
adc
adc
or
jbe
mov
aad
sbbl
lcall
mov
in
hlt
arpl
lahf
mov
loope
out
shll
xchg
dec
test
xor
push
pop
push
bound
sbb
in
ja
out
cwtl
call
lcall
decl
rorb
mov
push
pop
jno
pop
and
je
ret
ret
mov
push
mov
pop
dec
cmp
inc
or
mov
cmp
out
loope
das
adc
jg
in
fiaddl
xchg
lahf
hlt
mov
mov
mov
cs
insl
sbb
sbb
push
pop
add
or
aad
xchg
in
inc
arpl
mov
inc
push
mov
push
mov
dec
not
sahf
xchg
and
js
out
xchg
jg
pop
add
test
push
popf
call
mov
pop
repz
lcall
loop
sub
out
push
inc
mov
out
test
stos
rcrl
clc
lds
popa
ss
sbb
and
cld
pop
daa
jnp
or
xor
icebp
mov
or
fisubs
out
scas
in
icebp
decl
lods
sti
dec
or
sbb
leave
mov
fbld
test
xor
adc
nop
popf
mov
sub
insb
clc
sub
decl
pop
inc
jmp
pop
add
cwtl
popa
les
or
lods
fstpt
pop
jg
sub
pop
dec
add
mov
lea
icebp
mov
cli
ljmp
cmpsl
dec
sbb
push
sbb
iret
fwait
in
popa
mov
push
ljmp
fwait
ljmp
mov
push
decb
leave
mov
in
jle
sahf
xlat
in
aam
jne
lcall
add
or
xlat
mov
jge
scas
mov
pushl
fsubrs
jmp
mov
sub
pop
cli
cmpsb
dec
xchg
ret
pop
sahf
inc
notb
sub
ljmp
shlb
pop
arpl
add
insl
fsts
clc
and
fnstsw
ljmp
loop
sbb
fwait
mov
pop
jne
cmp
push
xchg
xchg
or
icebp
push
inc
adc
lods
pusha
incl
fstpt
mov
pop
cwtl
in
fstp
jb
inc
cmp
xchg
jecxz
aam
ret
shl
ret
dec
call
sub
in
sti
adc
insl
xchg
icebp
test
cmp
adc
std
adc
sub
inc
dec
sub
xlat
mov
js
push
sub
faddl
add
jg
fs
or
push
mov
sbb
movl
jmp
cmp
inc
mov
and
push
jne
mov
xlat
stc
and
jp
dec
mov
add
out
sub
dec
ret
cmp
jg
and
pushf
jle
stos
loopne
or
cli
mov
push
pop
ss
into
xor
fcomip
mov
loopne
adc
mov
sbb
mov
xor
loopne
incl
push
and
cmp
dec
aaa
push
imul
pop
xor
jns
pushf
repz
xlat
iret
jg
or
lock
push
pop
dec
imul
bound
addr16
lods
jae
pop
cmp
mov
lcall
mov
jmp
fisttpl
aas
jbe
fsubs
arpl
push
dec
sarb
mov
pop
movsb
sub
cmp
pop
dec
clc
decl
pop
nop
negl
aas
lret
mov
out
clc
xchg
enter
pop
lret
shl
xchg
sbb
push
inc
outsl
out
jmp
push
jmp
mov
cmp
push
loop
adc
lcall
aas
ss
adc
dec
mov
mov
das
bnd
add
imul
jno
int3
ljmp
push
and
xor
dec
inc
or
adc
repnz
sub
jp
js
outsb
mov
cmp
lods
sub
jns
cmp
push
dec
mov
cld
lds
and
inc
scas
xchg
subl
in
jg
or
movsb
xor
cld
inc
popa
sub
mov
fcos
pushl
movl
rcll
icebp
jbe
repz
mov
stc
mull
push
faddl
filds
ds
dec
dec
adc
fcmovu
mov
lds
pop
push
xor
mov
sub
mov
sbb
lea
decl
inc
lret
jl
pop
je
ret
fildl
adc
ficoml
shll
call
ret
add
add
mov
add
ret
xchg
add
push
into
add
jmp
pop
out
lahf
push
scas
or
ljmp
xchg
insb
mov
jmp
or
mov
xchg
pop
int3
incl
and
and
lods
pop
loopne
mov
or
shrb
cmp
test
ljmp
inc
xchg
sub
ds
ret
cmp
out
dec
jnp
sahf
cmpsl
add
jg
sbb
loopne
add
push
cld
rol
jns
jmp
hlt
loope
pushl
popf
pop
ficomps
jecxz
int
add
push
std
adcb
negl
or
push
mov
loop
jge
cmp
sahf
mov
adc
xor
pop
sub
mov
int3
and
xor
fcom
mov
das
push
push
sub
or
sbb
incl
mov
add
push
xchg
aad
xchg
cmp
jecxz
imul
dec
daa
sbb
repz
and
jmp
push
inc
cmpb
jae
popa
or
lods
jmp
pop
mov
std
mov
sar
jecxz
xchg
aaa
cmp
incl
fistpl
imul
shrl
aaa
push
lods
sub
data16
cli
sub
lcall
mov
and
cli
int
inc
inc
enter
push
lods
and
pop
call
stc
fldt
lret
pop
clc
daa
cmpsb
js
cmp
es
incl
bound
dec
stos
test
xchg
mov
fs
push
aaa
icebp
fwait
push
mov
dec
aad
inc
jg
int3
xchg
fs
ljmp
cwtl
aam
out
subb
or
in
inc
jmp
cmpsb
call
lea
ds
lds
int
out
cs
or
loop
out
in
nop
repnz
cmpl
mul
scas
mov
jg
popf
lods
xchg
and
mov
out
fadd
nop
sbb
pop
jo
repz
decl
jo
and
sbb
imull
sub
xchg
pop
jnp
mov
mov
ljmp
adc
in
iret
sbbl
call
arpl
out
mov
fadds
lods
inc
mov
mov
sbb
sbb
adc
pop
lock
loopne
mov
ret
add
mov
cmp
notl
or
ljmp
push
je
mov
push
js
enter
mov
test
dec
mov
jns
stos
dec
std
aam
and
sub
pop
sar
fisubrl
push
daa
push
sub
gs
push
insl
pop
fldt
and
xor
jge
ss
ja
xor
cmpsb
hlt
xor
and
pushf
mov
call
lods
push
lret
xchg
rorl
gs
shlb
pop
lea
test
jg
lds
mov
xchg
dec
imul
xor
testl
mov
cmp
sbb
pop
mov
cwtl
mov
insb
mov
adc
in
popf
movsb
cmpsb
or
pushf
loopne
ljmp
aaa
data16
dec
cltd
lea
negl
aad
mov
rclb
loopne
icebp
roll
arpl
aaa
inc
scas
fdivr
ljmp
or
in
mov
cli
push
and
inc
cmc
mov
xchg
ljmp
ds
aam
mov
sbb
scas
add
shrl
mov
and
add
or
mov
jne
or
sbb
loope
jmp
out
jge
flds
imul
sbb
sbb
loop
test
adc
and
jmp
shrb
dec
push
fst
mov
adc
ljmp
mov
inc
fldenv
ljmp
xlat
lock
lods
dec
push
incl
push
xlat
xchg
cltd
out
and
mov
js
int3
call
fimull
xor
sbbb
dec
test
leave
leave
dec
pushf
scas
stc
xor
mov
dec
divl
cltd
pop
enter
xchg
sbbl
cmp
jne
xchg
adc
push
add
call
sbb
mov
sub
int
jp
paddq
jecxz
jg
call
and
add
inc
mov
jno
cltd
sub
inc
pop
xor
fdivrl
sbb
fimuls
cmp
test
ret
xchg
lcall
sub
mov
call
cmp
mov
jle
ret
cmpsl
adc
call
sbb
rcrb
jle
popf
xor
push
sub
pop
addr16
mov
ljmp
test
xchg
rol
mov
fs
cmpsl
inc
xor
js
and
cmpsl
jecxz
add
mov
rcrb
pop
jno
out
andl
mov
push
inc
stos
push
or
decl
jge
push
inc
push
div
add
xor
pop
icebp
push
out
fldl
mov
and
mov
add
jg
cli
das
std
xlat
daa
arpl
push
loopne
fucomi
dec
out
in
mov
xchg
mov
movsl
or
lcall
sub
popa
jnp
dec
ljmp
jp
rcl
inc
loop
push
mov
ljmp
jns
dec
cmpsb
xor
sbb
or
ss
or
xor
lahf
xor
and
pop
mov
rcr
dec
cmp
jbe
rorb
mov
push
cmp
stc
sub
aaa
outsl
mulb
push
dec
xchg
out
jno
into
lcall
mov
fcomip
lret
stos
mov
outsb
mov
lret
addl
jg
cmc
cld
mov
stos
inc
pushf
dec
xor
push
int
rclb
out
dec
std
sbb
les
mov
mov
adc
sbb
push
xor
test
lods
repnz
pushl
dec
sub
inc
jne
mov
fstpl
cmp
shl
cmc
mov
lcall
pop
hlt
xor
shll
jb
push
sbb
lea
or
call
clc
clc
lock
shrl
dec
sti
jae
mov
xor
pop
dec
cmp
ljmp
aaa
sbb
xor
pop
mov
pop
subl
mov
push
mov
stos
mov
push
out
into
mov
add
idivl
ds
cwtl
or
xlat
rol
dec
loope
lods
push
dec
mov
cld
sti
lods
std
stos
stos
fnstenv
ds
jl
icebp
pop
loop
ja
pop
jnp
jg
jl
lock
xchg
ljmp
stos
dec
adc
cmp
iret
loop
aaa
adc
lcall
jecxz
push
push
sbb
add
pop
cmp
jno
imul
fstpl
lock
jmp
nop
lods
push
and
ss
std
mov
call
std
and
cwtl
xchg
mov
leave
mov
add
or
sbb
mov
scas
std
mov
push
fsubs
repz
mov
jge
mov
inc
fbstp
jae
cmc
lret
scas
aaa
lcall
dec
sbb
mov
mov
fnstenv
aaa
stos
cs
movsl
lock
call
xchg
add
shl
sti
sbb
push
lcall
mov
pop
push
xchg
mov
lcall
pop
pop
mov
xor
cmpsl
mov
sub
js
out
pusha
aas
aas
cmp
lcall
cmpsb
hlt
mov
inc
sbb
clc
jae
adc
sub
lahf
fidivl
daa
and
cld
mov
sub
lcall
fiadds
fildll
jecxz
daa
and
ljmp
mov
xchg
fcomp
stc
lds
sahf
jmp
in
fsubr
jo
out
mov
sub
test
in
mov
cli
jb
adc
adc
jge
jae
dec
sbb
inc
pushl
cld
sbb
add
das
inc
mov
aas
mov
pusha
and
decl
jmp
pop
sbb
mov
bnd
stos
scas
popa
dec
cld
fsubr
fistl
decl
sbb
xchg
push
cmp
arpl
insb
movl
and
orb
sbb
cs
add
pop
lock
in
mov
in
add
jge
jg
push
leave
int3
into
push
dec
fldcw
int
lds
push
adc
adc
out
push
in
xor
call
mov
sbb
gs
mov
jno
outsb
bound
pop
inc
pop
or
leave
adc
lahf
inc
mov
stos
fcomps
inc
add
sarb
push
popa
xchg
adc
cltd
adc
jne
mov
push
sar
ljmp
mov
loopne
inc
mov
jb
cmpsl
and
cmp
incl
ds
jns
aad
movsb
subl
int
imul
arpl
outsl
add
fdivrs
sub
push
ret
sbb
push
icebp
ljmp
outsb
xchg
fisubrl
stos
jbe
pop
add
inc
addr16
and
or
fbld
scas
mov
test
jp
bound
ret
jb
mov
sarb
outsb
dec
mov
jmp
jg
sbbl
mov
dec
ret
add
push
inc
xchg
inc
repz
and
leave
sbb
decl
loopne
cmp
rorb
xchg
out
mov
mov
ret
call
enter
mov
in
xchg
adc
and
inc
pusha
mov
dec
or
push
lods
inc
stos
mov
adc
jne
incl
pushl
sbb
sub
enter
push
mov
xor
dec
mov
jmp
sbb
cwtl
stos
jnp
sub
xor
inc
mov
ss
push
sbb
es
cmc
mov
lods
int
jg
lds
inc
push
movsl
dec
pop
mov
inc
insb
sbb
aas
idivb
mov
inc
popa
cwtl
fs
inc
jbe
inc
aaa
loopne
dec
inc
test
pop
cmpsb
xor
jmp
loope
mov
jmp
call
jp
cmp
mov
add
mov
stos
adc
push
sbb
add
xchg
mov
bnd
add
repnz
jnp
xor
and
xchg
incl
sbb
xor
out
xor
imul
sub
sbb
and
and
sar
call
iret
incb
jne
pop
sbb
cwtl
cmc
fldcw
xor
imul
jmp
pushl
les
push
push
cmp
and
sti
jle
fcomp
roll
imul
mov
rcl
int3
inc
ljmp
jns
push
add
add
dec
andl
std
lods
adc
mov
mov
das
je
call
xor
push
movsl
jge
dec
in
fwait
stc
dec
jnp
bound
es
sub
sub
pop
ljmp
mov
xchg
lds
lret
test
movsl
test
jmp
scas
mov
dec
scas
inc
xor
add
adc
jmp
sbb
and
xchg
sar
call
nop
inc
lds
pop
add
cmp
push
mov
enter
add
iret
pop
test
ja
std
inc
pushl
std
iret
sti
sbb
pop
cmp
test
adc
inc
aaa
std
ljmp
adc
mov
maskmovq
pushf
sub
mov
call
jnp
pop
push
cld
or
repnz
dec
imul
jnp
in
pop
outsb
decl
jecxz
imul
out
hlt
outsb
push
mov
add
cmpsb
ret
rclb
mov
sub
mov
mov
mov
aaa
fwait
mov
pop
loope
movsl
outsl
pop
sbbb
jle
call
idivb
and
jg
jmp
sti
push
adc
inc
xchg
dec
jne
lahf
std
sbb
add
aaa
addr16
fbld
test
push
inc
pop
mov
cmp
cmp
dec
sub
or
lock
fsubs
cwtl
dec
ljmp
add
pop
mov
shlb
mov
imul
pop
cmp
adcb
call
cmpsb
mov
icebp
push
add
es
fstps
adc
jmp
bswap
fdivrl
mov
enter
mov
xor
pop
xor
jecxz
mov
imul
pushl
loope
cld
inc
dec
jnp
mov
clc
add
cli
sub
out
cmpl
fisubs
jg
sarb
dec
pop
mov
jbe
lods
cmp
cmp
lret
movsl
jmp
call
dec
push
push
lcall
cwtl
insb
pop
mov
sbb
pushl
cli
and
and
ret
cwtl
xchg
xchg
mov
call
aaa
es
inc
pop
jb
mov
pop
push
sbb
jl
lods
xchg
fstpt
lods
mov
jmp
adc
fmull
pushl
and
or
int
mov
cmpb
jmp
aaa
push
dec
aaa
sbb
or
nop
cld
das
push
mov
out
push
jno
test
ss
and
in
scas
fisttps
jle
cwtl
mov
mov
scas
pop
bound
aaa
cwtl
xor
lea
xchg
pushl
pop
ja
lret
mov
fbstp
push
addl
je
arpl
cmpsb
sub
pushl
adc
cmp
or
jecxz
ret
cli
sub
inc
pop
test
lret
outsl
ljmp
mov
lret
popa
mov
addr16
lret
sbb
clc
negl
mov
fcomip
cmp
imulb
not
pop
and
fldt
mov
fsubl
cwtl
inc
xchg
lods
sbbb
incl
sub
daa
adc
dec
sub
mov
iret
fistpll
faddp
out
out
out
in
jo
or
call
lea
dec
inc
shrb
mov
inc
cmpsl
xor
push
fsts
imul
jmp
shl
jle
mov
xchg
fimull
idivl
lock
sub
cmp
dec
insb
jbe
cmp
out
dec
cmp
xchg
push
adc
daa
xchg
xchg
xchg
call
pop
addr16
or
outsl
xor
rolb
pop
pop
mov
mov
adcl
pushl
lcall
cmp
xchg
dec
lea
jo
arpl
cli
cli
mov
lcall
cmpsb
aaa
and
nop
das
push
stos
mov
je
cs
ljmp
sbb
dec
cs
in
dec
mov
je
imul
stos
mov
cmpb
decl
test
push
xor
add
inc
pop
fstp
xchg
test
jmp
inc
pop
push
popa
xorb
inc
es
mov
jno
ljmp
mov
xchg
cmp
push
outsb
adc
nop
push
sahf
pushf
bound
outsl
mov
fs
dec
sub
dec
jmp
clc
test
addr16
out
fmull
pushl
dec
fdivrs
mov
jmp
mov
pop
cmpsb
iret
mov
hlt
jno
fnstcw
je
and
fiaddl
or
cltd
roll
arpl
push
int3
nop
mov
xor
xor
lock
xchg
fcomp
cmp
inc
arpl
cmp
mov
pop
lods
dec
lds
and
mov
push
sbb
xchg
repz
lcall
loop
cmp
and
mov
ja
mov
sub
cltd
push
xchg
lds
icebp
pushl
mov
insb
movb
add
jge
inc
ret
jo
lcall
decl
or
sbb
dec
mov
mov
pop
repnz
fstpl
add
pushl
pushf
iret
loope
fisubl
sbb
jo
push
mov
sub
mov
mov
shrl
dec
jg
lcall
into
repnz
sbb
and
in
shlb
inc
push
in
push
hlt
rcll
mov
and
mov
cltd
outsl
ss
call
cmc
pop
mov
imul
xlat
adc
cmp
ljmp
bound
popa
push
jne
shl
xor
push
jp
xchg
into
pop
push
xlat
outsb
mov
add
ja
shl
stos
in
push
aaa
jno
mov
mov
insl
loope
mov
dec
fdivl
pop
cld
bound
ljmp
sub
les
mov
mov
gs
ljmpw
data16
movsl
stos
push
xchg
std
cmpsl
and
jbe
cmpsb
xor
ss
lock
lcall
or
mov
test
adc
aas
inc
push
hlt
xchg
add
dec
pop
inc
js
imul
in
pop
xor
imul
or
mov
imul
jne
mov
decl
leave
mov
loop
inc
inc
repnz
sbb
enter
andb
jmp
ljmp
inc
popf
ficompl
lock
push
mov
sbb
xor
loopne
incl
push
in
xor
mov
popf
dec
ret
jge
mov
aas
sub
decl
sbb
dec
adc
bound
daa
das
lods
outsl
cli
sbb
or
push
jmp
cld
jae
ret
jp
add
jae
inc
push
movsl
ljmp
and
addb
cmp
and
and
pusha
imul
aaa
test
cmp
stos
cmp
xor
add
sti
aaa
aam
sbb
pop
xchg
jae
idivb
and
adc
dec
cmc
repnz
push
add
jg
sub
fcoml
movsl
dec
cmp
jb
adc
movsb
test
ljmp
ss
std
fistpll
fidivl
jne
ret
clc
ljmp
insl
ja
sub
add
lock
xchg
xchg
mov
in
into
call
mov
out
xor
and
pusha
hlt
or
ret
mov
idivb
jl
incl
sub
xchg
inc
ss
icebp
mov
cmp
pop
in
mov
xlat
xchg
adc
push
xlat
mov
sub
push
stos
scas
sahf
and
pusha
adc
mov
add
push
das
mov
bt
mov
pop
push
pshufw
je
ljmp
sbb
test
les
mov
jl
adc
adc
call
jmp
push
jge
imul
add
rcrl
pop
out
add
es
jnp
adc
stos
add
leave
mul
movsl
loop
inc
pop
js
mov
or
push
mov
clc
xor
std
jne
jo
jmp
fdivl
sbb
out
sbb
scas
shr
loopne
inc
mov
das
sar
jg
or
inc
push
shll
sbb
hlt
data16
nop
mov
sar
cmpsb
add
jmp
inc
xchg
pop
or
xor
iret
adc
in
mov
push
jp
inc
inc
push
push
xor
mov
sbb
daa
push
sbb
ljmp
jno
lahf
add
mov
test
xchg
dec
lea
push
and
out
inc
jge
aaa
mov
xor
jl
push
pop
mov
lcall
mov
popa
repnz
mov
fdivr
loop
stos
int
mov
mov
insb
xor
mov
pushl
inc
push
mov
test
sub
sub
sub
jg
dec
cld
mov
outsb
mov
inc
aam
jmp
sub
insb
in
dec
mov
aam
xchg
push
mov
mov
cmp
std
jmp
call
movb
incl
xor
addr16
mov
addl
aas
push
adc
mov
data16
push
dec
pop
pop
pop
cmp
xchg
jge
les
inc
aas
gs
add
jp
addl
cld
jmp
pop
bound
sbb
adc
mov
sub
xchg
jo
test
mov
mov
addl
cmovnp
sbbb
sub
es
pop
imul
stc
xchg
push
sub
fmuls
dec
pushl
pusha
xor
pushf
stos
sub
sub
fnstsw
sar
mov
orl
mov
jo
shrb
call
ss
pop
xlat
insb
adc
xor
clc
scas
shrb
jns
imul
jg
jmp
add
std
pusha
movsb
xchg
dec
xor
iret
inc
xlat
push
sub
mov
lcall
out
test
mov
testb
inc
push
and
jo
sbb
jg
shll
and
jmp
and
mov
pushf
call
inc
shrl
sbb
sub
cltd
mov
fst
cs
out
xlat
data16
or
call
cmpl
jg
insl
jmp
xor
and
jnp
outsb
pop
pushf
sub
mov
fwait
sbb
sub
insb
or
sub
imul
add
incl
ja
sbb
lret
add
xchg
rcr
xchg
xchg
aam
hlt
les
imul
pop
push
shll
sbb
adc
mov
sbb
imul
jno
or
lds
jne
loope
jae
aaa
cld
call
test
test
jle
fcomps
clc
mov
lea
decl
push
mov
das
mov
or
ret
scas
push
mov
cmpsb
repz
out
adc
and
int
lds
dec
and
pushl
push
adc
in
sub
rorb
xchg
push
cmp
icebp
and
call
cld
ds
test
lcall
popa
rorb
dec
in
xor
leave
jmp
jmp
jns
cmp
test
pop
sub
sahf
adc
sbb
ss
lods
sbb
jp
jmp
push
loop
jmp
jbe
xor
add
test
jmp
movsb
out
jmp
sub
ljmp
push
xor
add
pop
jns
inc
aas
jl
cmp
inc
leave
nop
jp
sub
mov
push
inc
mov
jns
push
aas
xchg
push
push
call
push
bound
inc
shll
movsb
mov
mov
or
sub
xlat
or
xchg
andl
cmp
gs
jg
test
dec
pop
add
mov
sbb
call
or
in
aam
lret
or
or
lcall
incl
inc
mov
bound
out
dec
lret
pushf
ds
out
sarl
js
out
cli
inc
js
subl
adc
in
inc
cmpsb
xchg
inc
push
adc
mov
jl
xor
sbb
iret
shl
add
outsb
push
clc
leave
lahf
stos
in
shr
adc
jl
jmp
adc
push
leave
mov
lea
add
mov
and
lea
out
shl
fstpl
bound
aad
adc
or
pusha
clc
pushf
mov
arpl
pop
int3
push
push
jmp
les
ljmp
or
jnp
clc
push
lahf
mov
sbb
or
xchg
icebp
add
decl
jmp
pushf
std
iret
int
push
jnp
dec
push
push
add
jge
scas
sbb
pop
sahf
in
jmp
std
repz
stos
and
test
sahf
sub
sti
mov
or
or
pop
ss
jl
pusha
sahf
sti
aad
out
mov
xchg
sti
test
inc
pop
nop
pushf
mov
sarl
jle
cmp
mov
jl
adc
insb
les
cmp
dec
adcb
add
aaa
sub
xor
gs
sbb
jge
jns
pushl
push
adc
lret
jnp
fstl
in
hlt
mov
mov
pushf
pushl
dec
sub
dec
movsl
mov
sbb
pop
test
iret
shrb
aas
daa
jmp
incl
mov
jae
adc
movsl
inc
jns
add
inc
insl
xchg
test
push
jo
or
or
ret
fists
pop
mov
pop
and
mov
lahf
aam
mov
es
out
mov
sub
imul
mov
je
cmp
pushl
xchg
incl
andl
cmp
mov
sahf
dec
jne
lret
in
jno
lcall
les
test
push
adc
xor
loop
je
cmp
repz
pop
in
mov
push
jmp
adc
scas
sarb
scas
cmp
sahf
xchg
sbb
clc
lods
ret
sub
sub
cltd
add
mov
inc
test
cmp
repz
stos
dec
jp
in
push
imul
xlat
into
orb
pop
cmc
jbe
mov
sub
fwait
xchg
int
out
decb
cld
decl
ret
daa
mov
sub
mov
subb
fwait
jl
repz
pushl
pop
dec
loop
in
mov
std
add
dec
jb
push
inc
lods
inc
and
sbb
nop
pop
pop
xchg
int3
cmp
scas
sahf
dec
sub
addb
adc
call
sub
idivl
fucomip
mov
das
jns
ficompl
xor
mov
cmp
sub
push
mov
jmp
aam
add
mov
and
ljmp
popf
push
outsb
adc
in
xor
in
repz
mov
cmp
jle
mov
xchg
cmp
adc
jle
test
cmp
mov
mov
out
test
or
adc
push
jbe
ljmp
cmp
mov
ret
jns
cmpsb
jns
js
fs
js
xor
out
sub
pop
and
call
sub
out
adc
mov
and
call
cwtl
int3
add
xchg
jp
lods
arpl
adc
in
sbb
dec
xchg
aam
pop
das
xchg
pushl
nop
xchg
cmovb
mov
lods
movsl
jg
pop
popf
and
lea
test
fisttpl
jmp
repnz
adc
je
movsl
mov
in
mov
rcll
call
jl
flds
fmuls
movsl
mov
int3
outsb
jle
ljmp
xor
incl
ficoml
pop
popa
fsubrs
negl
jmp
daa
out
jae
orb
call
jg
sbb
mov
xchg
push
add
jl
push
adc
cmp
dec
and
pop
mull
jmp
mov
push
imul
mov
adc
lea
pop
aas
mov
js
pop
lock
ljmp
cmpsl
mov
idivl
inc
add
mov
popa
mov
add
outsb
repz
lds
mov
sub
incl
pop
test
pop
push
fldenv
lock
repz
jnp
xor
enter
test
decl
mov
xchg
inc
jo
shr
cmp
aas
push
dec
add
sub
push
mov
ljmp
cli
mov
push
aad
arpl
dec
mov
pushf
xor
ljmp
fldl
or
inc
enter
es
mov
pop
adc
testl
or
ja
push
dec
jg
xor
test
add
jl
or
loopne
rcrl
sub
dec
mov
loop
inc
in
mov
lods
cmp
pop
push
mov
cwtl
fwait
outsb
pslld
fdivrs
add
jle
nop
jmp
inc
out
adc
ror
jbe
fildll
push
cmp
lds
mov
lret
outsb
push
xchg
sbb
and
fdivrp
mov
xchg
out
push
dec
lods
xchg
pop
dec
mov
push
shl
nop
sti
inc
imul
fisttpll
jb
cmp
mov
les
push
sar
lcall
sbb
aam
sub
pop
pop
or
pop
mov
es
inc
jmp
int
adcb
ljmp
jmp
mov
mov
inc
arpl
stos
push
es
das
push
add
inc
jne
xor
cmp
cmp
add
xchg
pop
fimuls
mov
fwait
inc
lods
pushf
and
mov
in
inc
mov
int
mov
out
scas
dec
xor
pop
movsl
sti
adc
fnstsw
inc
loopne
or
out
sub
mov
enter
iret
and
sbb
jl
icebp
adc
js
sbb
movsl
inc
sbb
test
pop
mov
lcall
push
sbb
imul
gs
rorb
dec
test
inc
and
dec
call
popf
or
sub
push
lret
fcmovnb
gs
mov
outsl
sbb
loopne
sub
lcall
andl
hlt
shll
xchg
sbb
jg
add
test
dec
mov
add
add
cmpps
bound
rclb
into
xchg
out
adcb
sub
mov
lcall
mov
lcall
imul
jbe
jmp
nop
push
add
dec
push
sub
jae
stc
mov
cltd
pop
fistpll
mov
and
fstpl
push
xor
xchg
clc
in
incl
movsl
push
icebp
cltd
sub
sbb
push
cs
shll
inc
mov
sbb
mov
shrl
iret
into
fnsave
scas
jne
fcoml
dec
mov
lcall
ljmp
sahf
in
inc
lret
aad
push
scas
outsb
sub
cmp
xchg
aam
xchg
add
outsl
cli
leave
shr
mov
fcoms
repz
roll
jne
push
or
test
sbb
jnp
sub
xchg
mov
sbbb
es
ficompl
jge
lods
pushl
cwtl
or
xacquire
xor
pop
inc
hlt
scas
lock
adc
cld
jmp
xchg
mov
xor
mov
mov
jmp
add
pop
sub
push
mov
push
in
arpl
cmp
incl
ljmp
add
or
enter
fsubl
insb
jb
enter
call
scas
out
cmpl
dec
lods
in
pop
test
cmp
fcomi
std
push
rcll
lcall
dec
clc
push
pop
add
pop
push
sarb
packsswb
dec
jmp
sti
lods
xchg
aas
es
inc
push
push
jge
mov
outsb
xorb
cmp
push
inc
mov
mov
push
jmp
ljmp
cli
pushl
cmp
or
stos
rol
loop
jge
mov
cmp
imull
jg
test
lods
shll
push
cld
inc
xorl
clc
add
ret
cmp
xlat
movsb
push
iret
scas
push
sub
xor
out
xchg
fldenv
push
inc
sbb
xor
clc
cmpsl
dec
lods
movsl
push
inc
mov
aad
or
std
sbb
in
or
jmp
stos
fs
dec
cmp
lods
mov
push
dec
mov
mov
jo
mov
xchg
popf
sub
add
dec
sbb
inc
and
incl
loopne
out
popf
dec
adc
dec
push
pop
popf
sahf
test
cltd
aas
loopne
cmc
mov
in
or
adc
dec
jo
inc
aas
pop
push
test
addr16
fwait
mov
dec
pop
push
cmp
push
add
mov
adc
cli
out
lahf
shlb
enter
loop
lcall
xchg
cmc
push
sbbl
arpl
xchg
jno
and
jno
sub
lods
dec
jmp
movsb
mov
jb
push
jle
mov
mov
xor
mov
das
mov
rcl
lcall
or
lcall
mov
add
push
pop
and
or
mov
imul
add
cmp
les
jp
pop
mov
cmp
mov
and
mov
mov
dec
cmp
stos
addr16
inc
or
call
or
xchg
inc
jnp
lods
xchg
mov
cmc
jo
inc
xchg
mov
xor
mov
mov
ss
pop
rorb
rcrw
test
in
adc
outsb
sbb
push
sub
sbb
loope
es
dec
dec
ljmp
ret
rcll
jg
decb
loop
divb
mov
jnp
sub
pop
sbb
push
push
ja
decl
dec
xchg
test
shrl
mov
aaa
les
sub
jmp
into
push
xor
std
incl
mov
inc
mov
pop
mov
dec
iret
inc
mov
orb
cs
stc
push
fldenv
nop
scas
mov
mov
addr16
cmp
push
xchg
inc
pop
adc
jne
fs
decl
jl
jmp
push
in
out
pop
lods
xor
xlat
dec
jg
xor
or
mov
jmp
push
jp
push
lcall
dec
sbb
xor
jbe
sub
vcvttps2dq
xchg
sbb
adc
call
push
loop
fwait
mov
dec
push
imul
jnp
cmp
ljmp
adc
add
push
es
adc
mov
popf
ljmp
xor
lods
out
sub
and
arpl
and
pop
orb
xchg
call
fucom
cmc
xchg
cmp
and
inc
sub
scas
cmp
push
pusha
fildll
and
mov
push
add
lods
xchg
pop
jg
mov
dec
jecxz
mov
fsub
sub
shl
sti
lods
outsb
call
outsl
cli
out
stc
sbb
sti
jmp
rcrb
dec
xor
shll
and
div
add
je
incl
pop
in
pop
jle
dec
jp
xchg
std
stos
lret
ror
sub
testb
inc
das
jo
push
iret
inc
push
mov
jle
xchg
add
ret
xor
and
xchg
jle
pushf
popa
xor
ljmp
pushl
aam
sub
jb
clc
pop
mov
dec
lahf
mov
xchg
sub
loope
mov
cs
xor
inc
out
or
ljmp
dec
xchg
loop
xchg
jb
bnd
gs
jle
xor
scas
mov
add
ja
incl
xor
inc
sbb
decl
or
cmpsb
icebp
xchg
mov
pop
add
mov
call
into
aas
lret
ss
cmc
push
dec
inc
sahf
pop
mov
push
pusha
fdivl
fiaddl
sbb
outsl
mov
adc
icebp
sarb
and
pusha
cmc
adc
cmc
ja
outsl
push
lcall
pop
rcl
mov
bound
loop
call
les
jge
push
jg
push
or
roll
mov
int3
popa
push
cli
sbb
cmp
je
pop
jo
dec
xor
and
mov
hlt
or
inc
mov
jl
xchg
lcall
ret
cmp
mov
xchg
push
fnstcw
jmp
scas
push
push
out
pusha
jmp
test
sahf
mov
mov
test
out
outsb
jo
jecxz
adc
in
fcoms
mov
loop
lea
je
call
loopne
lcall
out
pop
sub
dec
dec
dec
mov
xor
and
or
fists
lret
push
ret
dec
add
dec
data16
out
cwtl
sub
cmc
gs
xchg
sti
insl
and
xchg
xor
adc
xchg
dec
cli
stos
xor
jo
mov
lcall
sbbb
lock
loopne
lcall
loopne
sahf
pop
nop
lds
push
in
inc
push
or
ljmp
mov
fadds
pop
lods
mov
jo
out
outsl
ficoml
pushl
mov
int3
je
bound
dec
mov
in
xlat
cmpsl
aas
testl
mov
sahf
dec
xchg
fidivrs
pop
mov
sti
out
adc
movsb
icebp
insl
mov
lcall
scas
lret
pop
xor
mov
in
pop
xlat
or
insb
int
jmp
inc
test
call
xchg
mov
pop
cmpsl
adc
rsqrtps
shr
cli
fcomip
push
push
or
adc
dec
cmp
pop
incb
xchg
push
xlat
dec
lds
call
cld
and
cmp
fcoms
push
dec
xchg
arpl
jbe
jl
add
push
mov
mov
pop
mov
push
inc
pop
push
daa
mov
adc
adc
mov
push
dec
sbb
les
icebp
sbb
das
inc
xchg
add
test
pusha
sbb
ljmp
sub
insl
scas
or
std
ror
or
out
adc
jnp
cmp
push
cmp
cltd
inc
xor
rcrb
pop
sti
insb
inc
mov
xor
sar
std
ja
pop
cmc
repnz
push
ss
push
pushf
cltd
xchg
scas
ja
cld
call
mov
dec
mov
fwait
push
aad
ljmp
pushl
cmc
mov
mov
dec
imul
rolb
cltd
cmp
repnz
adc
mov
sbb
fs
inc
adc
sub
out
push
push
insb
cmp
lods
arpl
cmp
fnstsw
gs
cmp
inc
and
popf
jl
movl
call
stc
lahf
xchg
rcll
std
je
adc
mov
es
inc
cs
push
mov
push
aas
push
xchg
pavgb
clc
pop
push
xchg
dec
and
mov
inc
xchg
xchg
lods
xor
ja
in
pop
lcall
stos
fs
mov
jl
mov
enter
jge
push
or
in
call
cmp
add
and
jp
js
jp
icebp
sub
stos
sub
xchg
or
fbld
decl
aas
cmp
lea
cwtl
sub
mov
sub
decl
das
inc
stc
insl
push
push
pusha
add
fisttpl
ret
mov
and
xor
add
pop
and
movsl
push
dec
or
lods
ljmp
loop
xor
in
sbbl
dec
push
cs
std
cmpsl
pop
loopne
fists
xchg
xor
mov
cwtl
incl
imul
xor
dec
xor
adc
inc
in
lret
jo
incl
js
scas
jle
imul
imul
movsb
xchg
mov
dec
push
sub
xor
cmp
lret
ljmp
subb
adc
pop
fbld
fadds
test
test
out
mov
mov
outsb
push
mov
pop
add
sbb
setnp
push
lcall
fisubs
jmp
iret
mov
je
stc
xor
aaa
out
dec
add
xor
jmp
ljmp
iret
ret
and
mov
or
rcr
cmp
lock
adc
xchg
and
aad
mov
mov
or
aad
call
addr16
cli
lcall
lods
sbbl
jno
jl
and
sbb
xchg
movsb
xor
out
and
ljmp
cmp
scas
inc
out
fadds
xlat
mov
xor
dec
inc
push
out
pop
cmp
jecxz
mov
or
and
add
lret
sub
xbegin
or
decl
mov
loopne
xor
mov
fsts
rorl
xchg
xor
pop
adc
and
out
or
add
xchg
push
popf
js
mov
cmp
aas
mov
ljmp
and
inc
movsb
and
movsb
aam
adc
push
cmp
into
addb
mov
cmp
push
sub
call
std
aad
mov
aaa
lods
cli
clc
rorl
decl
dec
mov
xor
shl
pop
mov
cmc
jg
xchg
or
movsl
fwait
push
xchg
addr16
jg
les
into
push
dec
sbb
lcall
push
cmp
push
shrb
cwtl
in
sub
out
inc
imul
fcmovbe
lcall
pop
leave
in
pusha
aas
mov
jecxz
lea
sbb
cwtl
shlb
or
mov
call
mov
mov
mov
dec
fstps
xor
fwait
lock
ljmp
repnz
lret
shl
mov
imul
movsl
mov
lock
jg
dec
ret
pop
cmpl
mov
xchg
sahf
push
das
clc
incl
shlb
add
add
fs
xchg
lcall
insb
std
jp
mov
fwait
sti
test
movsb
xchg
and
jmp
pop
into
decl
inc
mov
add
inc
daa
clc
decl
shll
mov
dec
dec
or
jne
lcall
outsb
scas
sub
incl
push
shrb
mov
or
scas
xlat
aas
mov
je
lea
lock
addb
pusha
testl
dec
es
add
jae
sub
jb
cmp
std
dec
arpl
fdivr
cmp
mov
pushl
jg
pop
mov
add
mov
pop
sbb
dec
in
in
aad
pop
loop
decl
outsl
xchg
cmp
dec
push
xchg
inc
ret
mov
xor
ds
jae
jbe
bound
mov
inc
clc
jae
lcall
cld
push
je
icebp
imull
adc
in
loop
adc
arpl
iret
outsl
add
mov
mov
decl
jno
stos
popf
push
fwait
mov
ret
out
sbb
cld
xchg
cmp
push
test
aaa
cld
lcall
jae
call
in
pop
cmp
clc
dec
mov
cmp
lock
bnd
jge
movsl
lcall
ficomps
inc
add
hlt
adc
and
roll
cmp
xchg
sbb
or
pop
inc
lcall
pop
dec
push
jg
add
cmp
and
add
add
pop
movsb
mov
incl
pusha
in
and
xchg
cmpsb
stos
or
sbb
lods
dec
cwtl
push
sub
xchg
pop
icebp
jmp
cvtpi2ps
jp
pop
scas
aaa
mov
pop
shlb
loopne
sbb
incl
sbb
add
ret
push
inc
mov
pop
pop
popa
stos
rcrb
call
dec
sub
sbb
adc
jb
mov
xchg
arpl
lds
icebp
movsl
imul
jno
call
cwtl
push
add
mov
jge
js
es
imul
inc
outsb
ret
jbe
adc
fcomip
pushl
movsl
sarb
or
cld
xor
jae
mov
repnz
sbb
decl
and
jg
sahf
fisttpll
jne
or
gs
adc
or
decl
jl
insl
call
cmpl
jecxz
xor
jnp
faddl
jecxz
add
and
clc
jmp
imul
push
dec
pop
cmp
lcall
and
sub
aad
rolb
pop
cmpsl
bound
loopne
hlt
lret
cmpl
adc
std
ljmp
data16
jnp
sub
mov
xchg
push
lret
xchg
jne
or
add
cmpsb
rorl
roll
sbb
inc
pushw
jmp
or
jg
outsb
mov
jmp
ss
mov
dec
mov
fwait
dec
shll
push
and
stos
add
scas
fsubl
push
mov
ljmp
fsubs
pop
mov
or
sbb
jmp
xor
jnp
ret
mov
or
jmp
fwait
pop
inc
pop
fsubr
inc
or
jge
sbb
push
ja
fptan
push
outsl
mov
imul
adc
in
repz
out
pop
and
inc
mov
bnd
test
dec
adc
push
dec
rcrb
xchg
xchg
sub
xor
add
sbb
fbld
shll
xor
loopne
sti
mov
loope
lods
lds
add
incl
and
bound
es
pop
sbb
dec
adc
dec
add
loopne
jg
sbb
add
fwait
mov
jmp
scas
pop
sahf
les
push
mov
test
or
incl
aaa
jg
xchg
lcall
sbb
scas
mov
inc
dec
int3
sub
inc
lods
pop
mov
xor
sbb
or
cltd
divb
jmp
enter
xor
add
mov
cld
sub
inc
cli
and
rcrl
mov
pop
push
jmp
loopne
iret
insb
pop
inc
enter
push
or
call
icebp
or
inc
aam
fs
add
mov
cmc
arpl
or
hlt
js
jne
call
cmp
push
pop
sbb
push
int3
fimull
mov
xor
orb
xchg
mov
fs
in
scas
leave
jne
inc
xor
mov
incl
xchg
and
pop
or
or
call
cmp
cs
js
sub
leave
and
mov
outsl
inc
stos
jo
inc
xor
push
jo
mov
std
rcr
pop
xchg
dec
push
jns
jo
xchg
lcall
inc
jmp
popa
inc
pop
imul
add
sti
into
dec
test
adc
jmp
stc
shlb
xchg
xchg
jae
and
out
xchg
cmp
loopne
sub
inc
fwait
rclb
lea
adc
sbb
loop
mov
mov
push
ds
jno
rcrb
inc
in
push
mov
incl
fsub
xor
jmp
test
add
inc
mov
pushf
loope
cmp
sub
or
aas
das
clc
ljmp
mov
int
scas
out
bound
push
popa
add
push
ret
lock
outsb
sbb
lock
out
addr16
fistpl
icebp
fs
sub
call
sub
pusha
xor
ret
push
add
inc
push
rcrb
inc
jmp
dec
sub
cmp
jg
sarb
movsl
ret
outsb
push
add
lret
cltd
mov
push
dec
loope
decl
mov
and
push
jle
movsb
jl
sbb
rcrb
jle
inc
pop
cld
call
nop
fs
pop
imul
ds
mov
xchg
ljmp
cli
daa
inc
aam
mov
mov
stos
push
cld
inc
jae
sbb
and
or
lods
mov
call
test
int3
bound
push
test
icebp
and
add
xorb
mov
sub
incl
push
or
scas
test
loopne
in
rcrb
lods
or
xchg
push
mov
pop
es
loopne
shrl
jnp
pop
xchg
mov
leave
pop
or
sarb
cmp
incl
and
push
fwait
xchg
xorb
cmp
mov
sbb
mov
and
scas
clc
in
pop
sbb
jmp
ds
subps
xchg
popf
sub
mov
test
ljmp
lret
cmp
pop
dec
ret
stos
in
jno
push
sahf
cmpsl
jmp
dec
outsb
dec
andb
scas
loope
mov
xor
in
cmp
xor
jmp
pusha
loop
fdivl
icebp
std
mov
cmp
push
scas
test
sub
jge
sbb
mov
cmpsb
icebp
jmp
dec
loop
jbe
cld
out
dec
push
dec
sub
imul
mov
lods
out
sbb
js
shlb
dec
ja
ja
dec
daa
hlt
xchg
push
pushf
scas
push
cmc
incl
mov
out
sti
push
mov
mov
add
jp
orl
fdivrl
stos
mov
lcall
mov
cmpsb
sub
fs
icebp
inc
mov
inc
jg
xor
sub
or
pop
sub
pushf
stos
cltd
or
aad
cli
pop
clc
lcall
les
cmp
dec
push
adc
inc
loopne
iret
push
cwtl
mov
dec
je
jp
rcll
mov
int3
enter
test
call
inc
pop
mov
stos
dec
outsl
sbb
xchg
mov
and
adc
push
cld
pushl
and
pavgw
mov
and
xor
iret
ja
cli
call
or
mov
xchg
push
call
cmp
ret
sbb
sbb
call
push
in
sub
sbb
jecxz
mov
lock
lods
fstl
stc
dec
notb
mov
fistpll
and
decl
out
inc
push
sub
adc
sbb
imulb
stos
lea
rclb
mov
sub
call
jae
jnp
arpl
imul
inc
cld
xchg
mov
mov
in
jne
and
dec
lret
std
mov
decl
sbb
pop
mov
lods
dec
add
int3
jnp
lods
ja
push
js
cmp
ja
movsl
int
incl
cwtl
lea
loopne
fwait
cmpsl
adc
call
cmp
jp
jl
test
sub
sti
dec
sar
mov
mov
xchg
jno
sub
aam
mov
adc
and
inc
and
insb
push
sub
sub
dec
arpl
sbbb
jno
mov
jecxz
daa
lds
add
xchg
mov
jl
mov
cmpsb
repnz
ret
push
cmc
mov
inc
push
cmp
adc
mov
test
insb
fs
cmp
incl
jg
int
or
mov
adc
sub
nop
in
dec
insl
test
out
decl
xchg
mov
dec
loopne
nop
push
sbb
call
outsb
pop
and
xchg
dec
lahf
jns
loope
cmp
cvtdq2ps
pop
lcall
test
xchg
cmp
pushf
pop
add
mov
lret
xchg
ret
incl
mov
shl
shll
push
and
mov
adc
jne
push
call
popa
mov
xchg
mov
repz
out
cli
dec
test
push
mov
xor
add
mov
adc
adc
and
lods
aam
lcall
pop
add
adc
mov
mov
xchg
pop
mov
inc
loope
ljmp
ret
out
pop
lock
add
cmp
lahf
push
jle
or
ljmp
clc
in
sbb
nop
and
dec
aas
stos
insb
insl
pop
loopne
outsb
mov
cmp
in
jne
aaa
cld
ljmp
mov
jp
in
cli
dec
notb
add
test
out
mov
call
test
sbb
scas
and
fcos
decl
aaa
add
insl
in
jno
jecxz
inc
jb
jmp
lahf
cmpsl
jecxz
sbb
bound
incl
mov
into
stos
data16
or
out
xor
jge
dec
insl
dec
inc
jns
call
fnstsw
int
push
add
lods
mov
es
int3
stos
std
ds
adc
aad
repz
inc
je
imul
sbb
sbb
push
mov
ljmp
inc
jo
arpl
push
das
ss
lea
mov
mov
les
nop
cld
popf
stos
or
in
clc
incl
stc
mov
jle
cmp
and
in
popa
push
adcl
and
clc
mov
fsubl
cld
fildll
jno
and
and
mov
jge
sbb
pop
out
out
cli
aaa
mov
and
test
into
shrb
cli
xor
into
fistpl
mov
ss
sbb
adc
cltd
mov
dec
out
sub
pop
cwtl
dec
scas
aaa
fcmove
xchg
inc
pop
inc
stos
fcmovne
and
out
xor
cmp
test
mov
mov
repnz
mov
repnz
loop
into
pop
repz
push
mov
pushl
rcr
shll
mov
sbb
adc
vmovmskps
rcl
sub
stos
inc
dec
mov
sahf
sbb
jns
push
mov
ljmp
scas
mov
dec
arpl
in
test
xor
mov
das
xor
mov
pop
cs
lcall
push
sub
push
dec
sti
lods
pushf
jl
push
sbb
inc
pop
stos
xchg
sub
lds
xchg
sbb
ljmp
imul
adc
mov
mov
adc
enter
pushf
dec
aas
mov
adc
clc
or
lcall
subl
adc
mov
mov
mov
sub
xchg
filds
lods
push
add
or
xchg
ljmp
jns
pop
push
popf
pop
push
hlt
lods
dec
adcl
fsub
xor
std
mov
rclb
dec
arpl
cmp
imul
pop
sub
xlat
cmpb
jg
fwait
jmp
mov
mov
jg
das
out
push
mov
push
aaa
cmp
inc
aad
mov
decl
mov
sbbl
xor
lods
hlt
arpl
cmp
mov
xchg
mov
jb
je
and
sarb
imul
incl
pop
lcall
das
mov
push
jns
pop
and
mov
std
pop
lods
jl
aaa
std
pushl
dec
or
test
aad
cwtl
sub
mov
pop
test
xchg
cmp
jb
pop
mov
lcall
mov
push
sbb
repnz
xchg
push
call
sub
leave
cli
sbb
cmp
pushf
js
add
hlt
xor
je
clc
mov
call
and
jmp
and
sbb
inc
mov
mov
cmp
sub
push
ret
gs
imul
cwtl
adcl
sub
jmp
pushf
cli
out
fiaddl
ljmp
and
push
xlat
in
jb
inc
in
ljmp
je
push
js
inc
stc
jns
push
cmp
xor
mov
int
js,pt
aaa
xchg
subl
xlat
pop
rclb
xchg
incl
inc
pop
mov
lcall
incl
lea
inc
push
jge
xchg
and
cltd
mov
xor
mov
popf
xor
incl
mov
mull
and
push
jmp
ljmp
rcrb
enter
push
mov
in
dec
jnp
jb
adc
xlat
push
sub
cld
mov
jg
iret
fwait
sbbl
pushf
data16
loop
mov
into
ljmp
xor
cmp
push
out
mov
test
data16
decl
lock
pop
or
jo
jbe
call
fnstcw
gs
call
cltd
pop
lret
and
leave
dec
bound
mov
adc
or
xchg
inc
ljmp
lock
push
pop
imul
outsb
push
incl
shrl
je
scas
pop
adc
stos
dec
fiadds
icebp
push
jns
adc
insl
sbb
jbe
jmp
repz
xlat
and
iret
test
or
les
mov
lcall
sbb
jnp
push
fdivr
andb
pop
and
sbb
sub
das
clc
mov
inc
cltd
push
and
mov
ret
and
ret
jmp
pop
mov
sbb
cmpsl
out
int3
call
loope
adc
mov
jmp
xlat
pop
sbbl
sub
xorb
jp
add
jb
jno
sub
mov
int3
jns
inc
scas
cld
in
sbb
and
call
inc
cmp
ja
jbe
jo
adc
insb
mov
sarb
int3
mov
mov
mov
pop
lds
repnz
lods
testb
mov
dec
push
adc
rolb
idivb
inc
push
mov
das
or
and
sub
or
hlt
mov
inc
movsl
lcall
inc
pop
cvtpi2ps
mov
or
repnz
dec
adc
jmp
and
pop
cld
jg
out
xchg
cmpxchg
lcall
sub
mov
int
jno
cmp
mov
and
mov
pop
xor
sbb
into
lods
lcall
cli
fimuls
cmp
cmp
addr16
sti
lock
or
cs
or
push
mov
sbb
in
xor
aaa
pop
les
jne
push
cli
jbe
mov
popa
and
decl
stc
mov
mov
dec
jns
mov
cmp
aas
mov
mov
mov
pushl
push
loopne
mov
dec
push
aad
sub
push
pop
cmp
das
outsb
test
jmp
cld
fcomps
stos
test
jg
pop
cmp
pop
cmpsb
mov
ds
or
data16
and
jmp
push
sahf
jne
rcrl
sbb
es
mov
divl
inc
mov
cmp
jmp
lret
test
cmp
insl
mov
popl
stc
pop
mov
sub
frstpm(287
arpl
fmulp
test
jl
xchg
loop
shlb
cmpsb
cmpsb
adc
lods
test
adc
das
jle
jg
dec
cld
fwait
sbb
xor
xor
daa
lea
dec
or
nop
or
call
add
pushl
xchg
movsb
in
sbb
push
push
xchg
cmpsl
pop
adc
aaa
jge
and
je,pt
int
pushl
inc
imul
inc
pop
in
fists
stc
cltd
jbe
xchg
pinsrw
ds
pop
jmp
pop
js
mov
jae
les
xor
cmp
outsl
in
cmp
jbe
dec
jnp
lcall
pop
lods
pop
mov
or
pusha
aad
inc
pop
push
mov
sub
imul
loopne
inc
mov
sti
jne
loop
push
mov
pop
in
test
jle
xlat
jp
sbb
lcall
call
outsl
imul
jmp
incl
js
inc
sar
mov
cmp
jmp
popa
ret
and
fnstcw
ret
dec
neg
rorl
insl
loope
sub
sub
jg
pmaxub
ja
maxps
push
sahf
imul
orl
repnz
adc
es
ljmp
bound
in
clc
ljmp
ja
fcomip
push
xor
insb
imul
addl
cwtl
fcmovne
into
adc
je
iret
jmp
loope
fbld
ss
in
fdivr
fisubrl
in
push
sti
fdivrl
mov
rcr
jecxz
decl
mov
lock
adc
xor
gs
subl
lcall
ret
fmull
cmp
lret
push
ret
das
cmpsl
imul
int3
sti
ret
mov
adc
rcrb
pop
pusha
jmp
std
aam
scas
or
mov
lods
sub
dec
cmc
pusha
adc
imul
cmpsb
xor
pop
loopne
push
mov
in
test
stos
sbb
lcall
lcall
pop
in
pop
adc
add
sub
dec
fists
in
stos
hlt
inc
call
jmp
mov
repz
das
and
sbb
in
bound
ljmp
sbb
sahf
fisttps
xor
pop
imul
lock
imul
or
or
jno
mov
sbb
adc
pop
sbb
roll
les
in
out
sbb
outsb
fstpt
jb
scas
es
scas
mov
cwtl
jg
sbb
jg
ljmp
bound
add
push
je
pop
enter
rcrl
or
dec
pushl
xor
cltd
or
push
insb
adc
int
enter
mov
dec
xor
and
popa
fildll
dec
add
mov
lods
jge
sarb
std
jg
mov
or
xor
in
add
imul
mov
mov
sbb
inc
jge
jecxz
inc
jge
lds
cmc
jl
out
cmp
nop
mov
mov
clc
pop
dec
call
sbb
ljmp
and
cld
ljmp
push
lea
mov
xchg
sbb
sub
cwtl
fldl
sti
jmp
jp
insl
jl,pt
ss
push
mov
lret
add
adc
movsb
loope
stc
lods
and
push
flds
sbb
cmpsb
into
mov
sbb
ljmp
call
loope
adc
pop
je
lcall
stos
pop
stc
aam
sub
mov
adc
mov
cmp
sbb
ss
jo
mov
clc
jne
jb
fidivrs
mov
dec
xor
and
push
fsubr
hlt
fs
jno
sub
enter
lods
cmp
lcall
imul
push
jbe
xor
mov
fiaddl
xor
ds
add
std
ljmp
jg
pop
shrl
insl
sbb
lcall
or
pop
mov
aam
pop
lock
fcmove
jp
push
or
daa
dec
ljmp
hlt
iret
sbbb
int
jbe
je
nop
bound
fistps
xchg
or
ret
cmp
fiaddl
imul
inc
lock
mov
sbbb
xor
in
insb
xchg
jns
inc
adc
cmp
inc
fs
dec
adc
mov
jo
mov
ljmp
cmp
dec
mov
shrl
cmp
dec
fisubl
std
mov
fs
sti
xchg
in
add
incl
int3
xchg
out
and
dec
cmp
inc
cmpsl
inc
arpl
mov
ficoms
ret
hlt
adc
das
in
fwait
stos
popa
insl
or
enter
fcomip
pop
sub
sub
inc
pmaddwd
mov
call
mov
out
mov
seta
call
jg
movl
hlt
rol
mov
sti
cmp
inc
cmp
and
imul
cmpsl
ljmp
mov
lods
sub
dec
adc
and
andb
loop
dec
clc
lcall
incb
fsubrl
xor
pop
imul
fwait
ja
imul
out
cli
jmp
in
dec
dec
mov
rcl
inc
pushf
cmpsb
out
jge
dec
xor
fcom
loope
cmp
mov
cmp
mov
js
adc
mov
xchg
icebp
mov
shlb
inc
add
fimuls
faddl
dec
test
mov
mov
jb
loopne
pop
sbb
js
dec
mov
popf
addb
mov
dec
outsb
ret
aaa
jnp
pop
mov
pushl
xor
pop
out
popf
or
pop
mov
push
mov
bound
cld
ret
aaa
xor
ret
call
jae
iret
cmp
decl
movsb
out
mov
mov
push
and
out
daa
out
andl
push
lret
pop
or
sbb
call
push
roll
inc
cmp
aaa
dec
mov
mov
loop
cltd
pushl
div
mov
sub
out
sahf
test
xor
cmp
je
mov
ljmp
adc
adc
fcom
iret
lds
xor
out
mov
lds
jecxz
mov
repnz
adc
out
mov
xor
ds
cmp
scas
mov
hlt
mov
mov
mov
fs
pushl
mov
mov
test
xchg
jmp
es
lcall
adc
add
call
outsb
cmp
movsl
push
xchg
lret
xor
imul
or
add
mov
sar
decl
jmp
or
and
jns
sub
ds
dec
dec
adcb
jg
arpl
cwtl
pop
aad
mov
sahf
loope
jno
mov
fstl
lret
insl
hlt
in
adc
add
ljmp
sar
mov
iret
inc
fimull
push
insl
and
out
jle
mov
xor
scas
add
cmp
sub
add
mov
pop
ret
loope
mov
inc
pop
pop
inc
ret
test
xor
xor
js
stos
out
ljmp
or
ja
arpl
xchg
in
clc
ret
mov
jle
jle
dec
mov
call
push
pushl
jp
push
cwtl
pusha
mov
jae
jne
mov
pop
pushl
lret
scas
mov
test
xor
aas
jmp
dec
jg
das
mov
fs
fstpt
out
out
ret
lea
movsb
ja
jmp
ja
lea
and
insl
fs
sbb
out
push
inc
mov
xlat
enter
sbb
ljmp
pop
sub
cwtl
mov
adc
in
push
jle
inc
sub
mov
dec
sbb
cld
dec
add
je
add
mov
pushl
jb
pushf
std
and
ljmp
mov
pop
decl
push
enter
lcall
adc
inc
dec
xor
and
xlat
mov
push
or
imul
xchg
les
orb
rcrl
mov
loopne
pushl
test
pushf
mov
inc
mov
mov
and
cmpb
call
mov
mov
insb
in
xchg
adcb
dec
inc
ret
dec
lahf
add
outsb
dec
shll
hlt
call
adc
insl
jbe
xor
orl
int3
inc
int
lcall
pop
xlat
mov
pop
hlt
inc
andb
inc
or
out
inc
gs
mov
incl
icebp
sub
jne
xchg
jnp
scas
shlb
loop
sahf
pop
add
mov
inc
int3
jp
into
adc
ud0
push
sbb
sbb
lds
repnz
jo
add
pop
ljmp
fwait
sub
incl
mov
mov
call
lcall
mov
push
mov
jp
in
pop
mov
mov
je
jbe
pop
fldl
mov
stos
sbb
mov
pop
jno
sbb
ljmp
stos
clc
pop
into
fdivl
cmp
inc
popf
popf
pop
rolb
call
aam
std
adc
fdivrs
movsl
aad
shr
enter
pushl
jmp
outsb
lret
pop
aad
push
mov
inc
push
fcoml
adc
pushl
fwait
popf
testb
push
call
fdivr
iret
lahf
mov
jmp
sbb
and
xchg
sarl
stos
mov
mov
push
mov
stos
jecxz
jg
call
xchg
push
mov
jmp
les
dec
push
sbb
dec
ss
ret
mov
ljmp
bound
add
pop
cmp
jg
js
repnz
jae
shr
repz
inc
push
dec
ss
adc
out
inc
and
or
jg
fyl2xp1
and
aad
lods
xor
in
xor
sarl
and
ja
lcall
cmpsl
lahf
imul
xor
and
cmpsl
shl
leave
clc
jmp
jmp
rorb
mov
repnz
imul
mov
mov
pop
andb
ljmp
mov
pop
push
daa
sbb
sbb
lahf
xor
fwait
inc
xor
dec
popf
xchg
inc
nop
aam
inc
pop
ljmp
aam
ficomps
in
jnp
enter
lods
lea
and
cmpsb
inc
test
rcrl
mov
pop
adc
es
push
or
out
je
add
or
ljmp
fmull
mov
add
jg
scas
je
call
fcoml
or
icebp
mov
fidivrs
fstpl
das
jb
pop
lret
add
arpl
xorl
add
xchg
xor
add
ljmp
xor
insb
bound
pop
mov
movntq
lret
mov
mov
sub
xchg
addr16
lods
or
arpl
xchg
in
push
pushl
sbb
bound
or
mov
insb
push
flds
mov
sbb
mov
into
decl
adcb
adc
pop
repz
xor
mov
jmp
adc
pushf
pop
mov
lea
js
call
fs
dec
dec
in
cmp
loopne
jle
push
jg
inc
sar
aas
in
inc
inc
hlt
sbb
movhlps
pushl
data16
push
adc
inc
push
shll
mov
adc
xor
sbb
jg
incb
sbb
mov
clc
jae
pop
dec
pushf
out
out
pushf
aas
sbb
mov
add
es
mov
xor
shrb
mov
push
adc
pop
movsl
mov
adc
pushl
fistl
dec
adc
arpl
popa
cmp
fnstsw
lcall
mov
adc
in
fldl
pushf
fs
jle
dec
clc
fs
lcall
sbb
idiv
orb
cmp
jb
push
lcall
or
xchg
fcoml
jmp
outsb
xor
cmpsl
push
insb
adc
repz
call
cmp
in
mov
adc
or
fistl
cmp
ficompl
out
daa
cmp
pop
xor
xor
pop
ljmp
dec
or
cmpsb
xchg
adc
sub
shlb
add
mov
ljmp
lret
mov
mov
cmc
mov
mov
lods
cli
mov
mov
ljmp
xchg
pop
les
lret
pop
nop
scas
xchg
and
jne
das
ljmp
cmp
orb
adc
add
xchg
mov
cmpsl
xor
ljmp
test
mov
data16
jb
loopne
daa
imul
ljmp
mov
in
lahf
xor
fbld
mov
pop
mov
sbb
jo
dec
aad
mov
aas
orb
push
add
jns
mov
lcall
lcall
mull
or
jne
cmp
ja
fimull
lods
mov
sub
incl
pushf
stos
shlb
sbb
dec
popa
int
mov
and
pop
xchg
scas
lds
cli
sub
jmp
adc
mov
and
push
and
jmp
sub
out
and
stos
pop
scas
jmp
aas
sti
mov
adc
dec
sbb
jne
lock
cmc
pop
push
mov
jbe
ljmp
inc
idivl
in
pop
scas
clc
incl
lret
ficompl
sti
imulb
mov
inc
cwtl
shll
jae
push
xchg
xor
adc
mov
jbe
sahf
mov
inc
lock
mov
or
call
mov
imulb
in
mov
inc
xorb
ficompl
and
enter
cmp
and
lcall
jbe
outsb
adc
insb
mov
dec
sti
pop
jno
sub
decl
insb
xchg
clc
or
outsb
pop
sbb
int
test
or
dec
test
pushl
cmp
jno
pop
cmpsl
repnz
push
sti
mov
jle
xchg
cmpsl
and
mov
cli
jmp
out
mov
jp
jle
aam
pop
icebp
cmpsl
fdivrs
mov
jmp
insl
data16
out
pop
mov
cmp
push
mov
hlt
fstl
movsl
jne
pop
lds
daa
cmp
inc
adc
push
xchg
cltd
sbb
mov
push
push
mov
mov
aaa
cld
call
jecxz
mov
mov
push
stos
mov
popf
in
or
ja
jmp
lods
mov
aam
in
lods
mov
nop
adc
or
in
or
ljmp
and
add
cmp
xchg
mov
scas
test
adcl
das
cld
lock
jp
mov
in
je
shl
scas
out
inc
movsb
out
jmp
shrl
vphadduwd
xchg
inc
lahf
xchg
xor
inc
repz
es
mov
daa
orl
adc
dec
repz
sub
out
jbe,pt
push
movsb
sub
mov
xchg
fidivl
out
out
fsts
jae
push
jl
dec
add
inc
jmp
std
fsubs
lea
mov
nop
jmp
xor
out
mov
adc
push
jle
andb
and
fsubrs
push
jne
fs
testl
push
adc
cmc
shrl
sbb
adc
jp
bound
ds
push
jg
mov
mov
mov
push
dec
insb
sub
sbb
jmp
int
imul
push
std
jg
push
pop
and
stos
push
stc
mov
pusha
cld
pushl
push
std
test
and
mov
daa
xor
fildll
jg
push
arpl
jbe
cmp
cwtl
or
dec
adc
jg
jle
jb
cmp
lods
stos
outsl
jg
cwtl
cmp
lret
insl
insl
scas
dec
sub
mov
jns
xor
and
call
lods
in
mul
add
into
jg
scas
inc
add
push
repz
cmc
dec
or
cmp
addb
mov
lcall
jnp
call
lds
sahf
or
dec
xor
popa
pop
pop
faddp
nop
mov
cs
and
ljmp
js
ret
mov
fadds
fstps
mov
adc
push
rcll
sar
jmp
dec
outsb
sbbb
cmp
pop
dec
adc
in
cmpsb
ret
mulb
push
or
loope
mov
xor
int3
sar
in
xchg
cmpsl
add
das
add
lcall
scas
in
sub
mov
sbb
stos
pop
mov
or
xorb
xchg
fs
mov
mov
clc
out
shll
mov
push
lcall
jbe
mov
int
cmc
xor
lcall
and
aad
sub
repnz
pushf
sar
mov
inc
sbb
imul
decl
je
fnstenv
aam
sbb
push
aas
out
inc
subb
and
push
incl
popl
nop
daa
repnz
jne
popa
jb
lods
jmp
popf
loopne
jno
and
ljmp
clc
jnp
mov
outsl
push
xor
lock
pop
and
dec
outsb
js
xchg
push
aaa
mov
cmp
add
push
sbb
sahf
pop
push
ss
pop
push
test
mov
jne
mov
jmp
fiadds
jb
cmc
addr16
mov
push
push
std
sbb
dec
addr16
xor
js
jo
call
popa
aam
orl
fmulp
pop
pushf
gs
pop
stc
and
in
cld
fcomip
insb
adc
lcall
rcrb
sub
movsb
incl
cmp
insl
or
stos
out
mov
jmp
xor
lahf
decb
test
or
stc
mov
or
pop
mov
nop
and
jno
xchg
push
inc
cli
fiaddl
add
out
mov
push
imul
fistl
push
call
jp
jle
cmp
js
icebp
faddl
xor
xchg
shrl
int
loope
stos
and
jge
incl
push
sbb
popf
test
ror
push
cmp
push
frstor
test
int
clc
or
cmp
xchg
pushl
outsb
das
mov
mov
inc
int3
lret
pop
push
adc
call
frstor
xchg
jo
and
shlb
leave
sbb
cmp
ljmp
xchg
sarb
lea
into
or
jg
in
fldcw
lahf
push
aaa
cld
incl
and
add
in
pushf
out
test
mov
leave
lcall
pushl
test
addr16
ja
ror
push
cmc
adc
lock
sub
call
js
cmpsb
gs
jmp
aam
mov
fucomi
clc
pop
lock
insb
shlb
jp
jbe
jne
enter
lret
pushl
incl
cmp
out
popa
pop
xor
sub
add
adc
jmp
push
cltd
ret
addr16
pushl
sbb
add
call
inc
js
xor
int3
or
pop
loopne
fldcw
add
enter
cmc
sarb
call
cmp
jne
jne
loop
rcrl
cmp
ja
mov
pop
and
pop
sahf
addl
lahf
jae
lock
pop
adc
loopne
push
lock
xchg
pop
js
incl
or
and
arpl
mov
scas
sbb
cmpb
leave
subb
lcall
mov
push
or
test
dec
add
xor
test
add
pusha
daa
cli
or
arpl
nop
call
movsb
cmp
fdivr
dec
iret
pop
mov
jb
jecxz
in
cmp
sub
ljmp
daa
inc
pop
jns
aam
push
and
out
test
xorl
jg
es
adc
sbb
push
call
cld
mov
in
mov
decl
bound
add
adc
xchg
aam
arpl
and
mov
xor
push
cmp
lcall
push
aam
pop
fdiv
int3
fcomps
dec
jns
test
decl
cmc
inc
pusha
jle
and
imul
lret
jns
pop
push
push
mov
and
fnstenv
std
decl
out
insb
xchg
pop
and
out
jmp
xor
inc
jecxz
push
test
ss
mov
sbb
push
mov
xlat
mov
or
sbb
stos
sar
ljmp
push
movzbl
jmp
sub
fistpl
or
arpl
outsl
lahf
shrl
or
lcall
movsb
ss
lret
sub
sbb
dec
mov
out
xlat
xchg
push
repz
call
add
rcll
or
test
fsts
lcall
and
mov
sarl
push
cld
dec
ret
cmpsb
mov
push
shlb
mov
dec
push
cmc
push
and
in
sbb
mov
mov
sub
xchg
ficoms
popa
jl
mov
iret
cmpsl
xor
mov
and
add
mov
lcall
in
fists
das
sub
fs
mov
or
incl
push
lahf
js
sahf
data16
cwtl
nop
pop
sbb
pop
mov
cmp
scas
sub
jmp
dec
and
addl
ret
into
cmp
push
mov
ficoml
mov
jmp
inc
jecxz
mov
rcl
call
scas
scas
aas
xor
or
test
inc
fcos
call
cwtl
shl
xor
aas
jge
push
pop
mov
dec
xchg
xchg
jnp
xchg
sti
pop
add
jae
push
das
mov
in
dec
jno
gs
pop
jno
pop
rclb
dec
sbb
adc
leave
xchg
add
mov
ljmp
in
arpl
sub
xchg
stos
lcall
fwait
lods
out
mov
movsl
jge
dec
mov
cmp
or
or
sbb
pushl
leave
cmp
mov
fwait
and
and
imul
call
and
insl
out
jge
jae
fildl
xorl
repz
inc
push
ljmp
xchg
mov
andl
xchg
sbb
or
loopne
pop
dec
ficoml
call
adc
dec
push
movsl
leave
xchg
pop
daa
or
shl
sti
lret
sbb
mov
in
inc
fcoml
jns
sbb
jmp
pop
dec
xchg
adc
inc
shll
in
nop
out
pop
je
imul
jle
dec
stos
push
lret
push
enter
pop
incl
push
stos
xchg
sahf
dec
pop
mov
std
jge
mov
add
pusha
enter
dec
sub
lock
mov
push
ds
aaa
lcall
mov
out
rorb
adc
aaa
or
lret
add
rclb
ljmp
lcall
call
xor
movsb
jmp
pop
add
loope
fidivs
jno
sti
pop
cmpsb
out
pop
cmp
sahf
out
aam
jmp
push
xor
iret
iret
mov
and
and
nop
out
cmc
sbb
and
negl
jg
aas
cltd
in
push
test
sbb
test
mov
dec
cmp
sub
xchg
push
lcall
adc
mov
outsb
fsubrp
loop
adc
pop
subb
mov
xor
pushl
push
sbb
cs
repz
or
add
cmp
fmuls
mov
out
cld
lret
call
mov
in
shll
aad
and
ret
add
cmp
pop
out
push
sub
mov
sub
push
fadds
inc
js
movsl
dec
pop
inc
inc
fdivr
jg
adc
cmp
roll
cmp
or
icebp
repnz
dec
and
xchg
fwait
add
jp
sar
push
sub
cmp
cmp
nop
test
rclb
call
pushl
xor
jb
movsb
ja
pusha
andl
stos
cld
stos
in
push
jmp
push
jnp
adc
inc
jl
push
ja
inc
cmp
push
pop
bound
cmp
dec
gs
test
pop
mov
sbb
jmp
push
push
ss
fwait
jmp
repz
pop
stc
cmp
fst
adc
lret
xor
pop
pop
push
nop
loopne
sub
arpl
push
dec
pop
fidivrl
adc
adc
lods
xchg
mov
xchg
movsl
jl
scas
dec
push
xor
inc
add
mov
jo
dec
incl
push
push
lea
jno
xor
icebp
push
dec
sub
xchg
les
jg
nop
inc
aaa
xchg
adc
jmp
orl
jecxz
xchg
out
cli
pushl
ss
popf
and
int
repnz
mov
mov
inc
mov
jae
lods
popa
ljmp
dec
addr16
xchg
out
and
out
hlt
mov
lds
out
inc
lcall
and
mov
pop
mov
jae
test
ja
jae
lret
clc
lds
xchg
inc
dec
xchg
sub
inc
pop
pushf
movsl
jecxz
mov
fwait
xor
in
ljmp
cmp
xchg
mov
add
mov
leave
cwtl
fisubrs
push
gs
sahf
fldt
call
jbe
aaa
jmp
gs
dec
rcrb
xchg
testb
add
ljmp
jnp
xchg
push
in
into
fs
lock
add
and
icebp
push
mov
cld
loop
cmpsl
adc
add
fstpl
hlt
fisttpl
aas
or
cmp
dec
adc
aas
movsl
adc
adc
lret
or
aaa
or
out
mov
shld
lahf
stc
jg
inc
cld
jo
inc
sahf
mov
jle
mov
fnstsw
and
fiaddl
mov
pusha
out
push
js
sti
fcom
jae
cmp
pop
push
nop
and
jbe
cmp
pushf
lcall
pop
add
push
xchg
jns
leave
dec
push
fstp
push
fnsave
icebp
ror
out
pop
xchg
dec
adcb
push
inc
pop
pop
cltd
jge
pop
sub
out
ljmp
loope
and
lret
addr16
inc
xchg
xchg
sbb
mov
cmp
call
aas
scas
in
in
inc
pop
jno
sti
jnp
jecxz
js
je
mov
addr16
push
pop
xchg
movsb
mov
leave
xchg
scas
fsubrl
adc
pop
and
and
or
pop
xor
movsb
int3
jmp
pop
ljmp
ret
cmp
clc
add
add
dec
repz
or
sub
and
clc
sub
lret
arpl
out
and
xchg
sbb
jp
xlat
jne
sub
jmp
es
add
insb
pop
iret
mov
insl
mov
icebp
jp
je
sbb
call
or
mov
cltd
push
out
ljmp
pushf
pop
leave
cltd
xchg
incl
jmp
inc
mov
aaa
nop
insb
sti
popa
mov
sbbl
adc
fsts
sub
jmp
js
enter
daa
pop
jbe
pop
cmp
or
jno
dec
inc
int3
imul
in
and
cli
ljmp
repnz
mov
negl
mov
clc
mov
mov
das
out
push
dec
or
xchg
stos
cmpsl
lahf
push
imul
cmpsb
sbb
lock
in
push
and
int3
mov
sahf
mov
add
inc
shll
out
adc
add
scas
inc
ljmp
shll
pusha
or
hlt
mov
call
nop
sbb
std
fimuls
pushl
jg
xchg
imul
xchg
cs
je
and
inc
mov
lcall
push
sub
adc
test
enter
add
pushf
mov
fisttpl
pop
dec
sbb
out
cli
incl
xchg
push
out
sahf
push
mov
test
sub
int3
idiv
mov
pushl
test
pop
pop
add
lret
fucom
xchg
push
mov
jne
dec
cmp
xor
pop
les
ljmp
sar
cli
mov
inc
test
mov
jno
adc
mov
cmp
repz
mov
push
loop
jmp
cmp
aas
cmpb
jmp
clc
or
jo
push
cld
fmul
test
sar
push
pop
repnz
hlt
sbb
jb
and
aam
mov
or
push
popl
test
push
mov
cmpsb
lahf
cmpsb
loope
out
mov
mov
fistl
mov
xchg
rolb
jne
pop
clc
cmp
pop
in
jne
push
shll
mov
pop
dec
cli
cmpsb
pop
lcall
pop
pop
add
subb
outsb
push
and
lret
movsl
or
and
inc
add
lcall
or
shr
and
outsl
loopne
push
lock
mov
lcall
incl
test
sarb
popf
adc
dec
test
mov
loopne
rolb
aas
daa
pop
lea
cmp
call
mov
mov
push
pop
adc
outsl
xchg
loop
stos
movsl
fiadds
lahf
in
cmp
mov
sub
aas
sub
and
mov
roll
fcomps
add
xor
ljmp
call
or
call
lea
in
mov
mov
add
inc
fwait
les
and
inc
movsl
test
dec
dec
xchg
adc
jmp
test
pop
xor
mov
sub
pop
push
cmp
xchg
cmpsl
decl
nop
aad
gs
stos
sti
movsb
out
sub
dec
inc
dec
sbb
pop
mov
je
push
ss
pusha
ja
pop
mov
add
clc
or
xlat
mov
rolb
cld
leave
ret
clc
stc
flds
sarl
xor
sub
sti
decl
adc
sub
test
call
test
lods
loopne
out
ja
add
decl
xchg
dec
and
jo
in
xor
dec
loop
nop
or
and
outsl
fcoml
aaa
cld
incl
pop
lcall
sbb
dec
gs
cmp
leave
enter
incl
mov
mov
mov
add
sub
mov
cmpsb
call
cmp
test
jp
mov
pop
mov
inc
xchg
jmp
cli
stos
rcl
jg
mov
int
cs
cli
int
cmp
aam
mov
cmp
les
push
ss
and
in
sbb
jmp
cmp
mov
cmp
test
incl
sub
lods
sub
in
popf
jb
lahf
pushf
out
mov
mov
shlb
mov
cmp
das
mov
xchg
add
mov
mov
popf
int
pop
mov
pushl
iret
imul
fwait
jp
push
out
ss
push
xchg
incb
xor
test
jmp
movsb
jae
inc
popa
jae
testb
outsl
sub
dec
adc
popf
and
aas
push
int
data16
pop
vmovddup
mov
arpl
lahf
test
lcall
loop
lahf
dec
xchg
fisubrl
xchg
movsl
fsubrs
pusha
and
fcomip
xchg
inc
push
lock
xor
jbe
test
xchg
js
jp
jne
sbb
ljmp
pop
cmc
gs
push
into
inc
stos
xor
add
sub
out
cli
dec
hlt
call
out
dec
pop
add
daa
fisttpl
leave
inc
data16
cmp
je
call
xchg
or
rcr
cmc
jmp
cmpsb
sbbl
pop
aaa
dec
data16
jmp
cmp
std
xchg
out
sbbb
in
mov
sub
dec
in
mov
add
pop
scas
out
rcll
add
in
fldcw
mov
daa
xor
dec
push
or
mov
pushl
loope
repz
pop
ret
mov
mov
pop
xchg
jg
mov
jmp
push
scas
leave
jns
jae
cmp
cmc
adc
out
cltd
push
jle
dec
dec
push
clc
dec
mov
jge
jge
ljmp
add
dec
popf
fldt
imul
scas
sub
add
ja
inc
mov
call
pop
popf
lods
sub
rclb
fmul
aam
mov
scas
ljmp
or
bound
mov
or
inc
outsl
leave
aaa
pshufw
mov
or
cmc
sub
inc
mov
push
mov
outsl
clc
lcall
push
loop
jmp
sub
in
mov
inc
xor
mov
nop
jp
lea
sub
mov
push
sbbl
inc
push
mov
test
sbb
loope
jmp
sahf
and
adc
mov
sbb
loope
and
in
lahf
pop
jb
push
mov
mov
push
and
or
scas
sti
cmc
or
push
cmpsl
inc
cmp
and
rcll
in
inc
push
aaa
mov
lock
incl
aad
stos
cltd
imul
sub
mov
cmp
mov
pop
xchg
fstl
pop
cltd
psubsb
adc
lcall
sti
push
js
in
fsubrs
outsb
mov
mov
xor
lods
call
inc
adc
adc
pop
movsb
xor
xor
rclb
cmp
add
cwtl
jnp
adc
xchg
sub
std
stos
sub
cmpl
insb
and
xchg
sbb
adc
mov
mov
dec
gs
pop
out
data16
xor
xchg
nop
xchg
loop
push
jecxz
decl
sbb
lds
sub
rcr
adc
fimuls
insl
gs
jecxz
inc
cmpsl
or
adc
jns
ss
push
cwtl
pop
fdivrs
adc
insl
mov
and
loope
lcall
pop
and
insb
bnd
nop
movsb
cmp
lret
mov
in
sub
loop
aaa
ret
dec
clc
bound
pop
lcall
js
push
fisubl
lahf
xchg
push
sub
xor
daa
sub
xor
pop
lods
rclb
mov
ds
or
push
dec
jl
cmc
icebp
out
inc
xchg
adc
sub
mov
incl
push
shlb
lcall
xchg
orb
sbb
dec
div
jmp
jno
cwtl
inc
xchg
imul
sahf
pop
subb
pop
jnp
jnp
xchg
push
push
sbb
mov
inc
in
movsb
ljmp
loop
inc
and
faddp
int
mov
es
jbe
inc
aam
adc
popf
and
fisttps
lea
inc
cld
push
xchg
cli
pop
sbb
int3
jmp
ljmp
stc
xor
cli
inc
movsl
mov
movsb
mov
sbb
mov
mov
dec
ss
es
push
in
sbb
push
sahf
dec
outsl
repz
jmp
sahf
xchg
add
adc
adc
lret
pusha
out
lahf
out
jo
pop
iret
es
fwait
mov
clc
lcall
jns
or
pushf
dec
sbb
dec
lods
shrb
fldl
incl
cld
mov
sahf
lret
loope
jo
sub
mov
or
sahf
pop
lods
popa
mov
inc
pop
dec
scas
push
sbb
push
xorb
and
push
mov
aam
cmp
mov
xchg
mov
decl
stc
bound
in
sbb
outsl
mov
das
mov
sbb
ss
inc
mov
decl
fcomip
mov
push
dec
sub
out
nop
pop
sbb
es
mov
jmp
push
call
cld
or
lahf
inc
outsb
pop
jne
fmuls
movsb
mov
test
mov
jmp
das
js
das
pop
cld
mov
mov
and
in
fsubrl
cmpl
xchg
pop
arpl
mov
pop
and
mov
mov
inc
and
ljmp
mov
push
out
ja
ljmp
inc
xor
inc
cmpb
movsl
push
sub
insb
cld
pushl
jae
add
jae
adc
subl
outsl
sbb
sub
or
push
push
lods
and
cmp
sub
incl
mov
repnz
mov
jb
fmuls
mov
mov
pop
push
pop
xchg
inc
clc
fnstcw
adcb
fsubs
imul
adc
cmp
mov
lcall
pop
xor
dec
fcompp
clc
sar
sarb
adc
mov
aas
mov
or
sti
ret
pushl
addr16
mov
and
mov
fisubrs
adc
je
mov
jl
push
push
and
sarl
sbb
cmpsl
pop
push
dec
push
popf
cmc
cmpsb
das
dec
xchg
fisubl
iret
adc
mov
in
std
fneni(8087
repnz
loop
inc
push
stc
inc
xchg
mov
out
mov
subps
sub
xchg
inc
pushl
dec
xor
hlt
push
pop
xor
lret
sbb
mov
repz
cmp
dec
and
and
incl
imul
stos
incl
push
les
outsb
pop
clc
pop
push
pop
ds
in
adc
pushl
jo
test
fistps
outsb
jo
leave
cmp
lods
jle
inc
js
in
jnp
lods
call
mov
mov
ret
mov
xor
push
outsb
aam
mov
jl
outsb
dec
and
test
insb
inc
sbb
loopne
pop
push
jp
jo
loope
mov
inc
icebp
push
decl
or
shrl
inc
sub
sub
and
add
decl
rorl
lock
iret
xchg
push
sub
gs
gs
ret
sar
mov
jno
decl
inc
pop
inc
push
inc
rcl
insl
push
ljmp
int3
lcall
fcoml
in
mov
jmp
inc
rol
cltd
fistps
jne
sbb
lcall
and
das
into
mov
cmp
cmp
sahf
movsl
loope
insb
mov
and
fwait
movsb
decl
lock
jns
aad
fsubrs
xlat
dec
sbb
stc
std
mov
call
lret
xchg
fstpl
sarb
daa
nop
cmp
pop
outsl
popf
imul
mov
pop
push
xlat
jmp
arpl
mov
cmp
mov
cli
fcom
fsubrp
sbbl
call
sbb
dec
loopne
out
cmc
add
sub
push
loope
xor
sbb
push
add
pushl
ds
imul
xchg
es
jmp
mov
not
or
jp
cli
lcall
mov
ficompl
jb
enter
aas
push
rcrb
dec
test
test
sub
cmp
xchg
pop
or
and
add
add
cmp
cmp
imul
sahf
pop
cmpsb
push
inc
stc
test
push
push
lods
add
sbb
jno
xchg
lcall
jp
xchg
pop
in
push
in
pop
dec
je
mov
ret
adc
call
mov
popa
push
xor
sbb
adc
dec
sahf
inc
inc
leave
hlt
inc
lret
sbb
sub
lcall
add
jmp
lods
bound
sbb
outsb
sbb
je
je
call
xchg
fmul
mov
mov
push
and
gs
out
mov
push
sbbb
jg
movsb
decl
jmp
cmp
cwtl
enter
mov
adc
push
xlat
sbb
jmp
jno
xor
pop
loopne
ss
or
ja
pop
jg
arpl
negl
xor
ret
xor
jmp
fildll
pop
pusha
or
or
cmp
pop
jbe
incl
or
add
sbb
scas
inc
lret
mov
sar
inc
push
xchg
xor
sbb
addr16
sahf
imul
mov
ljmp
icebp
sbb
cwtl
rcrl
mov
ljmp
lahf
xchg
mov
add
xor
gs
jnp
and
fdivr
push
adc
adc
js
and
mov
es
mov
xor
in
int
pop
mov
mov
pushl
dec
les
mov
mov
xchg
push
imul
xor
mov
nop
adc
in
cmp
pop
lret
cmc
scas
out
fstpl
ljmp
js
js
pop
pop
aad
aam
ljmp
aad
cmp
xor
int
fcmovnbe
mov
push
clc
jmp
dec
pop
jae
jbe
cli
mov
mov
jbe
lcall
inc
out
pop
dec
dec
mov
insl
pushf
outsb
icebp
dec
loopne
mov
frstor
call
mov
in
mov
push
cmp
loopne
mov
hlt
sub
push
cld
mov
arpl
pusha
in
sub
fidivrl
push
sbb
sar
cmp
test
les
int
rcr
adc
mov
cmp
out
mov
pushf
jle
leave
mov
jb
scas
lahf
gs
jp
insl
inc
dec
cmc
or
je
cltd
jp
hlt
adc
sahf
push
imul
jo
lcall
stos
xor
mov
rorl
int
pop
stos
xchg
push
jnp
push
jecxz
inc
into
pushl
sbb
dec
frstpm(287
lods
pop
in
xlat
mov
sti
push
in
lahf
adc
out
mov
dec
pop
addr16
jg
incb
in
fidivl
push
fdivl
sub
int
mov
or
xor
fdivrp
mov
loope
ja
xor
sbbb
ljmp
scas
mov
jp
icebp
nop
ljmp
jo
xor
cmp
inc
fwait
push
dec
push
inc
and
or
ficoml
mov
dec
ja
and
out
repnz
shrb
dec
outsl
cmp
push
add
jmp
inc
fdivs
std
lcall
nop
push
and
mov
or
push
xchg
leave
mov
lahf
jecxz
and
mov
sub
push
push
das
and
mov
sub
fwait
and
movsl
idivl
pop
sbb
dec
dec
fwait
push
mov
hlt
ret
sub
jo
mov
or
add
mov
fisubrl
and
loop
sbb
pusha
adc
jp
or
add
push
in
fisttps
xor
testl
dec
xchg
and
ljmp
add
add
stos
sub
mov
test
and
push
xchg
mov
pop
imul
lcall
leave
and
test
rclb
js
call
and
loop
in
mov
scas
in
sti
lods
jbe
cmp
popf
clc
inc
jg
jmp
and
push
sub
movsb
mov
fldcw
add
pushl
movsl
xor
adc
jne
or
mov
or
lahf
and
adc
lock
aad
icebp
rclb
adc
aaa
scas
seta
enter
xchg
arpl
cmp
bound
adc
inc
aas
jno
add
cmp
xchg
xchg
sarl
lods
mov
jo
mov
sub
xor
sub
das
adc
adc
mov
jle
jbe
fidivs
add
lcall
or
inc
lahf
mov
lods
neg
fdivrl
das
inc
cld
test
jae
dec
mov
jmp
cmc
rorl
pushl
adc
pop
xchg
cli
add
imul
lds
cmpsl
jae
mov
jle
dec
xchg
ret
incl
sahf
xchg
aaa
les
lahf
sub
inc
cmp
jg
lcall
lds
xor
pop
jnp
xchg
sub
add
lcall
dec
popaw
adc
mov
inc
xchg
cmp
jg
mov
inc
pushl
enter
test
in
and
jae
jo
xchg
in
aam
in
sbb
ja
das
pop
nop
icebp
jmp
out
cmp
imul
icebp
ljmp
push
mov
sub
stos
dec
dec
jg
imul
jb
movsl
mov
pop
aaa
decl
push
sub
or
xchg
pushf
sub
lcall
jbe
inc
push
xchg
rcl
lods
popw
loop
cmp
stos
cld
and
jmp
icebp
cmp
sub
stc
arpl
aad
loopne
gs
loop
cli
and
mov
enter
scas
jnp
out
test
insl
fmuls
test
iret
add
mov
jg
icebp
mov
add
mov
outsl
fisubrl
cmp
add
sbb
add
insl
push
lea
lods
lcall
out
mull
xchg
pop
test
or
in
ljmp
mov
inc
lock
mov
push
fldcw
and
mov
test
cmp
popa
stc
int
test
sub
cmp
es
js
ss
pop
pop
inc
jle
sbb
pop
mov
lcall
lahf
test
rcr
sahf
insb
push
and
pushf
mov
outsl
mov
js
aad
loopne
pushl
mov
lea
or
pop
or
dec
xor
cmp
add
jg
cmp
scas
imul
aad
loop
mov
sbb
cmc
add
mov
cli
arpl
push
shl
into
or
push
or
aam
add
shlb
dec
adc
ljmp
fsub
dec
add
mov
sti
cwtl
adc
jae
mov
lcall
cmp
rclb
idivl
mov
daa
testb
scas
test
cmc
mov
push
or
cld
jnp
outsl
xchg
in
cwtl
test
dec
mov
ljmp
fs
xchg
cmp
roll
std
popf
mov
shlb
in
out
cli
call
sbb
sahf
adc
pusha
mov
repz
push
fbld
or
test
loopne
ds
mov
jmp
push
cmpsb
fnstcw
hlt
lret
add
aas
lds
pushl
cld
das
push
jp
inc
in
xor
popf
je
sbb
int3
add
jb
jnp
cmpsb
call
test
popa
dec
lahf
xchg
xchg
and
xor
push
arpl
les
fisttpl
aaa
pop
rcll
push
xor
stc
subl
loopne
sbb
jl
or
inc
inc
sarb
decl
test
sbb
pusha
scas
ds
ja
add
mov
stc
adc
mov
fsubrp
add
jecxz
mov
add
adc
decl
pop
mov
xchg
adc
ja
mov
sbb
loop
cmp
outsl
or
incl
dec
mov
jbe
sub
rcr
inc
pushf
int
stos
jecxz
mov
and
data16
push
imul
in
pushf
subb
lock
aas
push
cmp
or
setge
lret
adc
in
ret
cltd
sar
ljmp
or
sbb
mov
sarb
repnz
call
test
jmp
and
cmp
add
cmp
jmp
lahf
pop
fs
dec
and
cmp
jg
push
clc
lock
insl
inc
pop
cmpb
clc
push
ljmp
out
push
jl
mov
xchg
xchg
jbe
cmp
mov
lcall
xor
les
xor
fs
lahf
mov
pop
lock
lods
push
push
pop
std
cli
sub
lods
jl
movsl
xchg
sub
ds
loop
pop
push
lds
decl
lret
je
pop
pop
cltd
add
or
mov
jnp
cltd
in
popf
inc
arpl
scas
jo
pop
icebp
or
and
incl
repnz
jo
xchg
jg
pusha
ja
xlat
in
js
fdivl
push
add
aam
inc
jo
add
fidivrs
lcall
getsec
pop
test
and
mov
fstl
cmp
mov
stos
cmp
out
cmpb
dec
mov
mov
call
fidivrs
mov
scas
mov
bound
lahf
or
vpunpckhwd
decl
add
mov
cmp
xor
aad
ret
pop
shl
pushl
xchg
pop
aas
jb
cmp
sub
or
dec
cwtl
das
xchg
mov
stos
dec
in
inc
mov
out
mov
ja
sub
jns
adc
lods
pop
pop
xchg
xlat
out
fbstp
xor
or
call
cmp
lods
dec
cli
add
pop
xchg
sbb
das
pop
lock
aam
jo,pt
mov
inc
lret
dec
call
loopne
les
cwtl
fnsave
mov
mov
shll
xchg
ret
into
add
pop
insl
dec
dec
fs
or
jb
jmp
in
test
push
mov
mov
pop
mov
sarl
sub
clc
xor
out
add
dec
lea
lahf
ss
in
mov
adc
std
cmp
pushf
addb
test
push
sub
ljmp
sbb
decl
rcll
push
lahf
std
xchg
mov
in
xor
pop
out
pop
out
stos
push
arpl
fbstp
jmp
sbb
filds
repz
pop
add
pop
arpl
movsl
xchg
mov
add
or
mov
roll
rolb
sbb
xchg
repnz
jp
iret
inc
addr16
dec
hlt
rcll
into
push
loope
or
mov
call
stos
mull
int
mov
jns
mov
push
xor
aas
repz
jge
xlat
jo
jno
push
xor
pop
repz
mov
jno
cld
cmpsb
jg
cli
inc
popf
hlt
out
mov
inc
test
jp
adc
pop
loope
jmp
test
pop
adc
xchg
cltd
cmp
push
cwtl
mov
pop
je
jecxz
and
decl
cmp
xchg
in
rorl
cwtl
bound
xchg
call
out
sbb
mov
outsb
mov
cli
mov
je
fwait
sarb
rcll
lcall
pop
push
xlat
push
stos
jbe
mov
cmp
push
push
sub
lds
jg
mov
je
xchg
fdivrp
icebp
mov
sbb
mov
lret
adc
jmp
scas
adc
mulb
xchg
xchg
cmc
aas
xchg
xor
lock
sub
lahf
incl
xor
outsb
test
add
das
sbb
xchg
adc
pushf
jmp
xor
and
jmp
jmp
hlt
or
stc
push
push
js
inc
dec
mov
lea
das
add
arpl
dec
push
dec
shrb
sub
jle
out
fisubl
jns
inc
inc
xor
incl
outsl
imul
testl
vpcmpeqd
out
push
enter
cmp
xor
mov
ljmp
div
aas
test
jp
inc
jp
push
inc
in
cli
pop
sub
adc
xchg
jg
dec
mov
dec
lea
ljmp
repz
aaa
xchg
inc
sbb
jmp
jae
dec
std
lcall
addb
push
mov
adc
xchg
add
cwtl
test
pop
hlt
pushl
mov
mov
sahf
out
shlb
inc
xor
add
lcall
sbb
mov
mov
cmp
call
int
adc
lds
jg
lds
dec
adc
ljmp
cli
out
cmc
sbb
add
ljmp
sarl
mov
push
ja
and
sbb
fmull
push
pushl
fbld
mov
ret
dec
adc
fstps
jge
mov
xor
push
sub
lock
sbb
sub
lret
push
sub
shlb
sbb
pop
xchg
mov
in
call
mov
jl
rclb
repnz
loop
ja
jnp
add
cmpsl
outsb
leave
clc
incl
stc
lcall
scas
adc
cmp
xchg
sub
sbb
paddusb
ret
sbb
pop
roll
adc
jl
ljmp
jg
xchg
adc
frstor
je
outsl
test
or
cmc
aad
add
js
pop
add
cmp
or
out
mov
mov
push
or
mov
and
xchg
lcall
enter
xchg
dec
jnp
movsb
orl
push
dec
movsb
ljmp
mov
out
dec
ljmp
push
mov
insl
js
cwtl
rcr
mov
adc
jp
pop
cmp
jno
lcall
mov
and
fsubs
adc
inc
das
lock
decl
stc
mov
div
push
pop
int3
cmpsl
adc
add
dec
ja
or
incl
mov
loopne
out
cmp
lea
jne
mov
das
sbb
outsb
out
or
ljmp
fiaddl
push
repnz
fwait
das
adc
movb
jg
or
xchg
mov
lret
shll
and
cmp
dec
pop
addb
push
pushl
inc
push
xorb
stos
ret
popf
lahf
ljmp
rcrb
cli
inc
nop
jle
xchg
cmp
scas
cwtl
add
test
push
pop
xchg
insl
sti
pushl
into
push
arpl
shr
cmove
fildll
pop
daa
jae
add
mov
fwait
out
add
arpl
sti
cmp
sti
inc
out
jmp
lock
pushl
mov
jo
das
and
push
lret
pop
cmp
test
xor
call
out
je
xor
sub
or
add
fs
int3
sbb
cmpl
pop
pop
je
mov
dec
mov
sti
mov
xor
sbb
or
push
loope
test
sub
sarl
les
pop
dec
lret
pop
icebp
mov
pop
and
adc
int3
add
pop
fcmovb
stos
lcall
test
adc
mov
xchg
and
mov
int
cmp
aam
push
scas
adc
mov
ljmp
cltd
enter
cmp
add
pop
lea
imul
incb
mov
sub
lds
stc
imul
int3
jae
xor
jno
and
mov
push
push
lods
jmp
dec
mov
xchg
lcall
xor
outsb
jno
hlt
cli
mov
jno
mov
and
stos
cs
es
mov
roll
mov
push
push
or
fwait
mov
pop
arpl
mov
mov
out
outsl
dec
jg
push
xor
adc
cmpsl
dec
mov
ljmp
sahf
pop
inc
inc
cmp
pushl
pop
jbe
pusha
add
jge
push
aas
push
insb
jbe
xlat
inc
push
call
adc
inc
jg
jmp
arpl
in
cmp
int
mov
testb
scas
popl
mov
mov
push
ret
jecxz
jo
cwtl
mov
mov
cld
pushl
lret
dec
cmp
ficompl
lods
adc
into
fmulp
imul
ljmp
fdivrl
mov
cmp
dec
and
enter
pushf
push
aad
cmc
jmp
mov
in
movsl
or
sbb
ss
xchg
and
dec
call
adc
subb
sub
lret
test
enter
jb
mov
jns
ret
sarb
je
clc
sub
cld
js
jmp
movb
fmull
push
sar
dec
ror
xchg
inc
mov
add
inc
je
out
clc
dec
data16
dec
cmp
ss
push
stc
mov
jge
sbb
xlat
fcomip
cli
test
jle
dec
cmp
in
dec
imul
lods
and
stos
ljmp
rcl
xchg
jno
cltd
out
push
xchg
cmp
or
sub
jmp
add
add
clc
inc
call
and
pop
adc
cmp
aaa
dec
test
movsl
sbbl
cld
inc
mov
or
lcall
jmp
pop
mov
mov
lods
sub
in
popf
inc
les
clc
ret
decl
jmp
fidivrl
and
xchg
idivb
cld
push
cmpsl
cmpsb
je
mov
jns
ljmp
and
rclb
xorb
push
lret
jno
adc
push
inc
dec
add
mov
ss
push
sar
ljmp
sbbl
mov
inc
cmp
mov
aad
inc
xor
add
mov
repnz
pop
fldenv
xor
xchg
clc
jl
decl
jl
push
sub
sub
jne
not
pop
mov
out
stc
in
das
cltd
xchg
leave
repnz
mov
jo
jmp
sbb
js
or
pop
pop
adc
pop
loopne
xchg
cmpsb
sbb
mov
aas
dec
or
arpl
out
cmp
ljmp
xchg
and
lock
inc
leave
add
mov
iret
mov
call
dec
inc
ja
fdivrl
mov
movq
sti
addr16
test
lea
jp
and
scas
pusha
addr16
loopne
nop
mov
adc
in
cmp
and
in
cmp
stc
cld
je
xchg
mov
xchg
pop
pop
adc
pop
lea
pusha
cwtl
cmpsl
adc
dec
lcall
je
jecxz
inc
mov
loop
sbb
pop
pmovmskb
int3
sub
cmc
xor
in
jno
push
pop
loopne,pt
push
insb
jo
bound
imul
pop
roll
inc
les
mov
push
out
mov
jg
pop
test
xlat
jno
rorl
cmp
sbb
dec
pop
sbb
sbb
mov
shll
in
pop
push
lea
mov
fucom
mov
adc
andl
push
jmp
add
addr16
mov
xor
gs
mov
or
sbb
lcall
outsb
xor
adcb
sub
shr
cmp
fstpt
add
dec
mov
in
jl
mov
sub
sub
fwait
dec
hlt
and
mov
xchg
cmc
enter
inc
fldcw
jae
mov
decl
mov
mov
je
hlt
clc
orb
jmp
xor
jle
mov
cmpsb
mov
xchg
add
out
add
mov
inc
sbb
ljmp
into
ljmp
cmc
xchg
sub
test
movsl
dec
push
int3
and
pushl
std
xor
cmp
dec
std
mov
push
xchg
sub
pop
es
sbb
call
fiaddl
loope
ret
cmp
xchg
pop
adc
ds
test
js
lods
mov
leave
cmp
ljmp
lds
fldl
clc
out
mov
adc
addl
pop
mov
or
fwait
push
jbe
dec
jg
sub
incb
ja
sbbl
leave
mov
jmp
push
imul
loope
pop
cli
ljmp
roll
push
push
js
and
sti
ret
test
mov
xlat
test
call
cmp
lahf
jle
test
inc
ret
ret
nop
jle
fnstcw
adc
and
mov
mov
sbb
jno
call
push
sarb
ljmp
int3
clc
and
xor
dec
jp
mov
add
scas
add
mov
outsb
nop
inc
sbb
dec
add
lea
or
sbb
jg,pn
jae
ljmp
sub
mov
es
adc
or
sahf
mov
dec
or
sub
ret
decl
lods
sub
dec
divl
add
cmc
lods
add
pop
call
orb
lret
dec
xchg
test
cld
ss
in
into
ret
push
xor
fs
jmp
dec
daa
lock
jae
aaa
arpl
cld
mov
jnp
test
mov
jb
pushl
mov
cltd
inc
dec
mov
xor
jle
adc
add
jl
insl
call
aam
dec
mov
and
insb
xor
cltd
add
cmp
adc
ljmp
xor
test
movsl
test
dec
and
dec
in
mov
out
jmp
adc
jmp
push
sti
mov
popa
sub
mov
aam
adc
sbb
mov
push
add
adc
lods
adc
aaa
ljmp
xchg
outsl
in
adc
call
cmp
push
loop
sahf
rclb
lcall
inc
cmp
push
adc
dec
lds
ja
mov
mov
shlb
nop
adc
or
fisubs
lock
jmp
lods
mov
pop
test
sbb
sub
insl
bound
push
jmp
mov
cmp
or
cli
add
cld
decl
jae
lods
stos
xchg
or
insb
xor
mov
cmp
call
jns
adc
jge
movsl
jno
in
outsb
flds
inc
insb
add
into
add
pop
and
ljmp
sti
test
sub
add
shlb
xchg
leave
mov
ljmp
pusha
jbe
xchg
pop
cwtl
add
insb
cmpsb
and
mov
push
jmp
mov
nop
dec
std
jmp
sarl
aad
push
sti
jp
xchg
testb
dec
mov
movsb
popa
call
popf
aam
idiv
jmp
mov
xchg
popf
scas
push
or
js
lds
loope
loop
sbb
xor
aas
pop
ret
pop
dec
ret
repz
mov
pop
int
mov
imul
push
repnz
xor
imul
jecxz
call
lret
jl
rclb
insb
mov
imul
fcomps
mov
cmpsl
or
mov
inc
fdivrl
test
loope
pushl
popf
imul
scas
lret
push
or
cmp
sub
das
shr
aam
jns
outsb
sti
cmpsb
mov
push
test
stos
mov
mov
incl
mov
mov
mov
in
xchg
aam
xor
clc
inc
jmp
sub
mov
rorb
enter
ret
xchg
fs
test
cmp
fcoms
scas
dec
aaa
jo
sbb
je
ljmp
in
cmpsb
inc
mov
mov
jmp
ja
pop
add
test
lret
stos
movsb
cltd
cmc
outsl
add
or
dec
scas
pushf
mov
shl
inc
insl
pop
decl
subl
imulb
adc
in
jo
and
push
outsb
mov
lock
jo
add
dec
ja
pop
xchg
ljmp
addr16
mov
in
sub
je
mov
xchg
push
ficompl
test
dec
and
xchg
pop
test
dec
push
imul
shrl
sbb
std
mov
push
repnz
gs
adc
daa
pop
inc
daa
lcall
pop
out
ljmp
sbb
jecxz
xchg
pop
jbe
lret
jle
rclb
call
or
sbb
mov
pop
jge
dec
jbe
shr
dec
inc
pop
test
loop
testb
xchg
popa
sub
mov
dec
das
enter
stos
cld
test
and
inc
ljmp
mov
pusha
imul
mov
or
jecxz
loop
or
dec
outsb
jmp
pop
xchg
ret
mov
cli
sahf
xor
cmp
call
pusha
ja
aas
cmp
sar
das
sar
fnsave
dec
ja
shl
xor
fsubs
ficoml
mov
inc
fsubrl
lods
call
hlt
mov
dec
push
ss
in
push
or
push
enter
orl
mov
test
repz
mov
sbb
jl
repnz
imul
pop
mov
mov
aaa
push
ss
test
or
lcall
bound
adc
xor
push
in
and
ljmp
decl
jo
pop
push
mov
inc
fcoml
ljmp
dec
xchg
sti
stc
push
push
sbb
sahf
push
jno
outsl
xlat
repz
pushl
iret
push
xchg
repz
dec
adc
pushf
das
mov
neg
bound
cs
dec
cmp
inc
and
fdivs
inc
sbb
pop
mov
sbb
loope
in
mov
pusha
pop
mov
lds
in
test
dec
adc
fdivrp
and
mov
xchg
fdivrp
call
or
std
or
dec
pop
jle
ret
jle
mov
rcll
inc
icebp
loope
push
fcomps
xchg
fs
lods
push
out
mov
mov
dec
push
aam
mov
cmp
xlat
add
push
xchg
popf
negl
stos
pusha
pop
movsb
mov
xchg
push
add
adc
pop
sub
mov
icebp
stc
repz
decl
inc
sub
mov
mov
addb
and
pop
repz
sar
decl
jp
mov
out
lock
stos
notb
sub
daa
pop
xchg
cmp
xor
push
lret
pop
fdivrl
outsl
xor
repz
dec
pushf
and
jnp
hlt
add
mov
daa
mov
incl
xchg
scas
pop
xlat
inc
and
enter
inc
or
push
xlat
test
or
jmp
jmp
mov
repz
inc
push
or
loop
leave
cmp
das
push
add
loop
add
movsb
dec
fs
xchg
push
push
push
push
out
dec
sub
int
adc
push
int
out
inc
es
inc
fistps
or
inc
sarb
xchg
cmp
daa
or
dec
mov
test
arpl
pop
out
mov
and
shlb
inc
fldcw
inc
jmp
ljmp
cmpsl
pop
inc
cltd
scas
orl
jb
inc
mov
pop
add
mov
jp
lcall
xor
lret
xlat
jne
mov
xchg
test
scas
stos
jp
lret
fisubrl
pop
mov
testl
pop
ficompl
lock
xor
inc
sar
fisubrl
sbb
and
sbb
cmp
inc
daa
fcmove
add
test
cmp
and
jp
mov
enterw
test
orl
lcall
cli
in
ret
out
pop
mov
cmp
fwait
xchg
out
or
or
mov
cmp
mov
insl
js
jo
popa
loop
mov
lods
jne
dec
inc
jb
add
out
stos
sbb
jl
decl
or
mov
and
mov
testl
xchg
cld
mov
outsl
and
xchg
or
mov
and
xchg
daa
fimuls
inc
lcall
fistpl
pop
cltd
dec
sbb
jle
bound
xchg
push
int
or
xor
popa
cld
out
mov
sbb
jg
and
inc
push
cmp
sub
or
cwtl
cwtl
and
ret
addr16
push
sahf
clc
sub
lcall
push
data16
pop
sti
or
cmp
cmp
sub
pusha
mov
pop
int3
jg
aam
js
adc
sbb
stos
int3
into
xchg
pop
adc
flds
fsub
jl
push
in
lcall
and
push
mov
das
aam
add
jle
mov
ljmp
divb
or
and
ja
rcl
adc
scas
ret
jno
mov
xchg
mov
je
clc
dec
out
ja
sbb
imul
addr16
fstps
pop
jmp
test
loope
lds
mov
cmp
out
dec
mov
in
push
lcall
push
out
scas
jmp
rcrb
or
mov
jl
adc
decl
and
ret
icebp
pop
inc
in
cmp
movsl
inc
sbb
cmp
pop
sar
push
jge
push
add
test
mov
stc
frstor
fwait
lcall
ja
and
add
and
and
lods
clc
cmp
decl
jb
sub
fidivrs
jl
out
mov
mov
jg
xor
jmp
test
mov
test
pop
jb
pushl
icebp
orb
in
cmpsl
inc
xchg
push
outsl
lret
jmp
incl
adc
mov
in
pop
fsubrs
mov
push
fdivrs
fisttps
cld
scas
adc
xchg
enter
dec
jne
dec
adc
pop
cmp
lret
add
lcall
lods
das
imul
jge
and
xor
pop
rcl
mov
jg
pop
bound
pusha
icebp
es
scas
bound
inc
adc
add
sub
loope
mov
hlt
push
dec
incl
jmp
jmp
call
jecxz
imul
push
in
and
mov
sbb
subb
mov
jl
mov
ljmp
std
imul
add
and
xor
aas
fsubrl
cld
imul
pushl
jns
mov
lret
aaa
push
mov
jle
repnz
into
test
in
aas
pusha
pop
sub
pushl
mov
dec
pushf
pop
mov
push
clc
xchg
into
inc
pusha
adc
pushf
lret
cmp
call
xor
pushf
out
mov
cmpb
pop
je
jg
pop
mov
jg
push
push
dec
push
jo
stos
add
mov
inc
out
dec
jle
sbb
in
xchg
xchg
push
adc
fimuls
push
ja
fwait
cltd
lock
imul
orl
push
jl
aas
mov
neg
and
decl
pop
jl
sbb
dec
xchg
jne
mov
fidivrl
mov
cmp
enter
inc
and
and
mov
dec
ja
jbe
addr16
mov
sahf
decl
cmpsl
jle
stc
out
decl
je
and
mov
jecxz
popa
gs
iret
call
mov
aam
pop
dec
lahf
popa
sbb
or
jb
fdiv
sar
inc
xor
sub
mov
ljmp
push
or
push
ds
test
adc
jle
movsl
adc
mov
sar
push
add
push
lret
dec
cmp
mov
ljmp
out
mov
xchg
inc
nop
repnz
adc
dec
inc
insb
test
inc
test
push
fs
fcoml
roll
mov
das
pop
test
movb
jne
push
add
aam
push
pop
sub
mov
les
popf
push
inc
test
or
push
shll
jl
mov
and
ja
pusha
cmp
mov
inc
loopne
push
sbbl
jg
sub
lahf
movsb
push
or
inc
jecxz
inc
mov
pop
rol
cmp
shl
inc
push
in
add
adc
xchg
add
dec
push
imul
mov
fsubrs
push
cs
popf
push
daa
fdivr
fldlg2
mov
push
xchg
mov
out
mov
mov
sbb
rolb
call
push
push
mov
xchg
loop
leave
repz
addl
imul
call
int
fucomi
add
iret
add
jae
push
in
jl
adc
cmp
das
sbb
cli
in
test
push
loope
push
lods
jmp
out
lcall
dec
adc
pushf
sbb
lcall
es
adc
jno
movsb
addl
test
sbb
push
ja
enter
sar
pushl
push
insb
in
test
add
aad
in
jmp
jecxz
cld
sub
std
arpl
xchg
incl
mov
aaa
push
cmova
and
movb
in
out
mov
call
cmpsl
mov
mov
sbb
cld
prefetch
or
push
std
data16
xchg
cwtl
pop
sbb
mov
das
lods
inc
rclb
call
orb
pop
imul
xchg
cmp
addr16
test
js
jg
fs
cmp
adc
inc
inc
repz
inc
ss
lcall
and
mov
add
push
push
imull
push
sub
or
mov
mov
fnstsw
icebp
dec
inc
jg
test
mov
jns
es
js,pn
sub
addr16
jmp
mov
cmp
jecxz
dec
std
jo
inc
jb
lock
jns
push
frstor
fs
or
pop
int3
lret
int
ljmp
mov
cmp
repnz
mov
test
pushl
dec
cld
xor
in
outsb
pop
outsl
test
lcall
and
xchg
out
das
cli
decl
lret
ds
xchg
sahf
addr16
cbtw
int
inc
mov
xor
cmp
adc
dec
ret
mov
xchg
jnp
push
das
sub
fildll
orl
outsb
mov
decl
mov
xchg
insb
aad
and
stos
cmc
mov
lds
aam
mov
fidivs
xor
scas
or
add
jmp
mov
pop
fcmovnb
sbb
mov
mov
dec
andl
xor
in
and
test
adc
pop
loop
mov
jae
jp
push
imul
push
int3
sbb
adc
out
stos
jne
xchg
aaa
add
dec
cli
ljmp
xchg
arpl
pop
xor
and
xchg
mov
shr
pop
inc
and
mov
les
mov
test
lods
inc
dec
xchg
fldl
mov
sahf
mov
dec
and
mov
outsb
lcall
and
mov
in
mov
cmp
mov
in
std
mov
fisubs
adcl
lcall
mov
jne
mov
test
inc
hlt
add
cmc
xor
or
push
decl
popf
insb
lret
insb
cmp
scas
push
in
jl
and
jmp
jb
das
sub
xchg
insl
out
icebp
mov
sub
cwtl
sub
cmc
fucomp
sub
sbb
pushl
mov
outsl
add
jl
cmp
and
push
call
movsl
setne
cmp
call
jle
push
mov
imul
xchg
mov
lret
cld
mov
int
xorb
mov
shll
mov
scas
and
shr
aaa
adc
or
loop
adc
mov
nop
push
dec
scas
imul
decl
xchg
mov
lods
pop
in
dec
ss
loope
sbb
dec
sub
push
push
sbb
cmp
or
mov
sub
outsb
cltd
add
cld
mov
sbb
mov
shll
xchg
push
xor
jo
outsl
pop
into
mov
lock
adc
lahf
xchg
arpl
lcall
sub
dec
sahf
neg
or
sbb
mov
add
mov
fcmovbe
scas
pushl
out
int3
movb
sbb
pop
inc
push
pop
push
cmp
pushl
rolb
jb
in
je
inc
das
push
or
mov
push
xchg
or
lcall
jp
mov
js
inc
into
out
fisttpll
insb
jnp
pop
add
arpl
cmp
fdivl
mov
imul
mov
pushl
nop
push
stc
or
lods
daa
dec
jmp
pop
sub
add
icebp
jg
push
fimuls
ret
mov
loop
bound
jns
ja
cmpsb
adc
mov
push
and
lret
aas
ljmp
pushl
std
jb
dec
or
inc
xchg
push
push
mov
jg
stc
mov
and
je
int
mov
sbb
pusha
inc
lea
jmp
and
lcall
push
mov
inc
aam
aad
ret
adc
leave
adcb
fwait
cmp
xor
decl
xchg
icebp
lea
je
leave
jb
cmpsl
insb
out
sbb
inc
enter
ja
lret
repz
test
mov
sahf
xchg
call
pop
ds
cmp
call
add
adc
inc
sub
outsb
outsl
jno
out
mov
and
stos
call
xorb
sbb
leave
int3
dec
jl
mov
cmp
jp
inc
scas
xor
jg
or
ret
iret
cmp
mov
das
sar
pushl
sbb
cmc
jl
ja
push
pop
testl
dec
hlt
mov
jp
insl
xor
out
insl
dec
jg
add
jb
pop
in
jns
and
decl
push
enter
mov
and
out
rol
pushf
push
dec
dec
inc
gs
sbb
gs
out
inc
int3
aaa
adcl
pushf
mov
shl
pop
cmp
dec
push
cmp
inc
sbb
cli
mov
sub
mov
decl
es
mov
lcall
sbb
aad
dec
test
hlt
pop
cmpsb
xor
mov
or
pop
mov
fistpll
call
sbb
jl
lods
js
mov
cwtl
jbe
popf
mov
jae
push
push
adc
cmp
shr
mov
lret
xchg
sub
incl
lcall
cmpsl
sub
cli
decb
adc
rclb
lods
pop
fsubrl
ljmp
mov
xchg
pop
clc
cwtl
add
repnz
hlt
shlb
loope
and
jecxz
int
hlt
cmc
gs
inc
add
repz
push
jmp
js
add
mov
add
in
in
pop
scas
nop
cmp
je
xchg
mov
sbb
mov
std
in
sub
movsl
xchg
ss
pop
add
push
in
rclb
scas
movb
ror
add
ljmp
adc
jae
lret
aaa
pop
pop
mov
stos
and
lret
mov
incb
push
lods
pop
sarb
decl
sarb
push
inc
push
pop
push
ljmp
adc
cmp
mov
call
aaa
jo
fstps
sub
cmp
mov
ds
decl
mov
xchg
adc
sbb
mov
lock
pop
and
popf
in
add
push
jmp
subb
sbb
icebp
jae
fdivrp
and
icebp
jecxz
lret
insl
cmp
push
outsl
xchg
or
lret
push
stos
or
xor
cmp
sbb
in
mov
or
jmp
out
jmp
pop
or
stos
or
jbe
cmp
mov
decl
aad
pop
pop
and
pop
adc
repnz
lcall
cmc
jmp
pop
sub
insl
jmp
pop
orb
iret
leave
pop
add
sub
cmp
scas
xlat
clc
add
jb
stos
sbb
fst
sub
shll
scas
xchg
jg
cmp
inc
out
subb
test
mov
jnp
cmpsb
xor
and
cmp
int3
or
cld
fs
and
pop
push
outsl
add
dec
mov
nop
jecxz
push
cmpsb
aam
out
sbb
inc
adcl
mov
scas
cli
icebp
sbb
mov
jg
fistl
dec
mov
loopne
mov
add
mov
lods
mov
lret
xorb
cmpsl
inc
and
pusha
mov
xor
mov
cmp
adcl
insertq
mov
jle
out
nop
add
pop
in
fistpll
push
pop
mov
decl
xorl
cld
xchg
adc
loop
incl
scas
dec
int3
ss
xchg
pop
cli
repnz
inc
imul
ja
lds
push
jo
inc
int
arpl
adc
lock
dec
mov
movsl
js
mov
and
aad
lcall
movsb
jne
and
mov
and
pop
mov
stos
push
ffree
push
rol
push
push
mov
push
shl
sub
scas
add
lock
push
rcrl
mov
int
sbb
std
call
dec
sbb
add
jnp
aam
std
sbb
stc
cmpsb
aas
xor
loop
dec
pusha
enter
call
dec
inc
mov
popa
test
mov
pop
mov
in
pop
lcall
add
cmp
fnstenv
fsubl
sub
into
cmp
cmp
clc
pushf
jb
jns
je
push
out
mov
test
inc
std
shl
pop
or
cmp
ljmp
cs
popa
inc
cmp
stos
out
add
jle
call
jecxz
mov
inc
cs
pop
js
jg
fildll
pop
mov
adc
lea
xor
xor
lods
dec
into
stc
inc
fldenv
in
sahf
dec
ja
lahf
dec
popl
push
test
lahf
fistl
cld
out
lds
pushl
fisubrl
sbb
mov
dec
cwtl
cmp
push
lods
and
or
aas
test
inc
sarl
fnstsw
ret
adc
mov
fisubl
push
push
jbe
dec
test
sbb
sar
mov
js
bound
cmp
adc
lcall
insb
mov
mov
mov
aas
pop
adc
mov
sub
sub
jne
push
sbb
lcall
lock
enter
jno
stos
pushl
add
insl
inc
fimull
jns
addr16
aam
jo
pop
or
pushl
and
enter
cltd
cli
andl
fdivl
or
lcall
cwtl
fimuls
mov
into
inc
lods
in
or
lea
popf
fcomip
shlb
scas
jns
sbb
jge
ljmp
js
adc
mov
fcom
pop
outsl
aaa
fstps
dec
cld
pop
das
mov
dec
mov
sbb
or
mov
sar
dec
xor
push
das
sbb
or
mov
mov
xchg
xor
jmp
into
out
adc
push
and
or
lcall
push
jecxz
ret
or
add
iret
inc
popf
popf
pop
cmp
pop
call
ljmp
dec
dec
push
scas
xor
das
out
aam
ja
mov
pushf
inc
scas
repz
pushl
je
push
jo
imul
cmpsl
sbb
lock
mov
fwait
call
mov
sub
mov
push
and
xchg
ja
mov
test
out
ret
repz
out
insl
nop
jge
jecxz
ljmp
add
mov
xor
pop
push
aad
sub
push
decb
jns
dec
stos
cli
xchg
jno
and
decl
sub
es
std
ret
pushf
movsl
out
repz
ja
pushl
inc
xchg
sub
xor
sbb
inc
leave
insl
mov
call
push
sbb
in
movsl
sarb
mov
ds
pop
mov
mov
popf
pop
imull
lcall
or
out
and
jmp
test
pushl
dec
and
push
notl
adc
fsubp
stos
rol
or
sbb
hlt
fsubrs
call
daa
pusha
sbb
scas
jno
popa
ret
dec
aam
sub
lcall
jmp
jne
sbb
in
les
mov
pop
int3
push
jg
push
daa
mov
insb
aas
mov
and
lahf
dec
adc
incl
fisttps
lret
insl
lods
hlt
jne
mov
sbb
cmp
mov
adc
incl
pop
jne
aad
adc
mov
int3
xor
pop
out
decl
and
icebp
adc
pop
fmull
jge
mov
lock
jmp
lcall
negb
adc
test
inc
cmp
lahf
push
mov
pop
cmp
js
jle
fimuls
sbb
add
mov
lret
gs
outsl
inc
cmp
cmp
mov
shrl
repnz
aad
movsl
outsl
fldenv
jbe
imul
jg
sub
lock
mov
or
or
push
std
decl
jnp
push
addr16
pop
pop
mov
push
push
adc
aaa
call
loop,pn
shll
and
decl
data16
stc
pushf
jae
cwtl
in
mov
cld
imul
jmp
pop
jecxz
add
jecxz
das
int3
mov
adc
add
les
shr
mov
inc
jp
dec
pop
xchg
xchg
incl
in
roll
mov
jnp
pop
sbb
test
xchg
mov
scas
lret
fwait
ljmp
cltd
pop
push
loop
mov
stos
int3
mov
cltd
lods
cmp
push
in
pop
ret
push
jg
mov
cwtl
adc
xchg
pushf
rol
inc
outsl
inc
outsl
cltd
mov
pusha
loopne
imul
sbb
rclb
xlat
inc
insb
push
pop
pushf
jmp
jle
outsl
sub
push
xchg
cmp
outsb
int3
ja
call
add
add
mov
jle
cmp
enter
sbb
pushl
imul
fcmovb
sbb
cli
data16
mov
sti
mov
or
jb
insl
adc
call
add
fisubrl
cli
inc
fcoms
xchg
jbe
int3
xor
and
aaa
in
cmp
sarl
inc
scas
mov
fadds
add
into
enter
add
shlb
or
daa
cwtl
add
nop
mov
dec
flds
sahf
outsb
bound
and
ljmp
push
mov
out
iret
push
or
dec
scas
xor
rorb
gs
pop
mov
pushl
pop
stc
jmp
call
ds
and
jg
adc
xchg
mov
mov
pop
cld
inc
mov
push
xchg
jns
inc
mov
or
inc
pop
scas
cmpsb
iret
xor
lds
ja
cli
inc
mov
mov
and
mov
popa
adc
stc
insl
xorb
jge,pt
mov
adc
andb
lret
notb
cmp
mov
cmpsl
and
cmp
pop
stos
or
out
sub
stc
daa
mov
xchg
sbbl
jb
dec
outsb
iret
pop
call
add
jb
test
movsl
movsb
lcall
jmp
repnz
push
mov
xor
loope
cmc
sbb
repz
dec
mov
test
jmp
arpl
mov
or
ljmp
push
pop
mov
inc
fwait
repnz
call
pop
pusha
sub
adc
xchg
mov
jns
inc
mov
xor
mov
icebp
jmp
jge
xchg
push
mov
add
fiaddl
add
int
ja
dec
ljmp
or
jnp
sbb
fidivs
jg
jns
test
decl
mov
mov
jecxz
lcall
inc
mov
js
aam
add
add
call
jnp
aas
in
push
mov
ljmp
dec
ja
push
ss
popa
clc
popf
test
fsubrs
decl
ja
aaa
scas
inc
repz
in
mov
cwtl
popf
cmpb
out
cli
push
pop
shll
mov
sahf
pushf
xchg
pushf
dec
ljmp
adc
and
mov
call
lret
pusha
ret
fs
jecxz
and
das
repnz
mov
lods
movsl
cli
addb
mov
rorl
lcall
hlt
imul
inc
xor
jg
incl
jns
negl
push
or
jg
cmpsb
xorb
lods
mov
pop
xchg
fldcw
cld
jnp
pop
xor
sbb
loop
cmp
movsb
push
mov
fs
mov
fcoml
adc
push
clc
jne
inc
es
outsl
jp
loope
cmp
jl
es
adc
xchg
cld
add
mov
mov
jmp
adc
inc
or
mov
das
push
das
cli
stos
and
push
lret
jge
jo
call
call
push
jnp
into
insb
sub
xchg
push
adc
dec
sbb
sub
in
cld
jg
mov
xchg
sbbl
or
andb
inc
push
xor
xchg
mov
fidivrl
and
push
aaa
xchg
clc
ljmp
jns
bound
xor
repnz
cli
lcall
iret
jnp
xchg
push
movsl
pop
xchg
dec
test
lcall
push
cmpsb
je,pn
lcall
push
fidivrl
ja
mov
sbb
in
dec
gs
mov
pop
test
pushl
cwtl
pop
cmp
or
ret
mov
test
xlat
xchg
mov
call
jns
inc
jo
std
and
lcall
stos
dec
jo
lock
xchg
mov
lock
mov
jmp
lret
pop
in
mov
fbld
mov
mov
lcall
push
jmp
sbb
push
cmp
es
cmp
sub
mov
lods
lret
lea
ljmp
and
adc
add
xchg
scas
sbb
dec
lods
sbb
decl
and
add
add
repz
outsl
out
add
jbe
jne
pop
or
sub
pushl
call
sbb
sub
and
mov
adc
movsb
lds
sub
in
add
out
repnz
mov
fnstcw
repz
jmp
pop
push
pop
cmp
and
or
xchg
inc
jo
mov
mov
mov
sub
add
jb
pop
pop
or
popf
shrb
push
jg
in
lods
testb
xor
ret
pop
test
mov
mov
xor
aaa
loopne
fldt
iret
mov
mov
and
ret
cli
rclb
iret
arpl
and
pop
dec
adc
lods
inc
cld
or
icebp
sbbl
mov
aam
std
aaa
std
outsl
jno
nop
lahf
imul
lods
fyl2xp1
mov
test
icebp
lcall
dec
outsl
sbb
sub
scas
lcall
xchg
dec
dec
sub
sub
test
outsl
adc
and
xor
fs
pop
js
ljmp
pop
inc
pop
lea
aam
insb
pop
pop
sub
jo
sub
leave
mov
mov
fcomip
ret
pop
cld
mov
dec
loop
pop
outsb
dec
push
addl
push
cmp
movsl
rclb
int
ret
fldcw
filds
repnz
mov
add
jg
mov
sbb
movsb
inc
bound
pop
push
cmp
jbe
xchg
sub
call
fdivs
in
xor
faddl
adcb
jp
pop
xchg
mov
adc
insl
aad
inc
decl
ss
lret
jnp
adc
sbb
dec
rcrb
aaa
enter
mov
lcall
test
test
sub
fcompl
in
xchg
test
jl
aaa
or
mov
bound
insb
inc
jg
lea
inc
or
popa
ljmp
gs
lcall
jae
incl
lea
or
fcoml
repnz
xchg
push
add
xchg
push
inc
pushf
mov
stos
mov
mov
imulb
jae
data16
shlb
and
cwtl
imul
sub
incl
mov
insb
pushf
mov
repz
jle
stc
scas
and
data16
pushl
pushf
in
lret
mov
xor
rolb
sub
adc
out
sbb
and
incl
lea
inc
sti
push
fisubl
call
rcll
jle
shrl
dec
in
sbb
dec
stos
pop
dec
adc
aaa
rclb
dec
push
push
insb
test
add
mov
xchg
popa
js
in
xchg
jnp
loop
adc
pop
stos
jmp
jo
mov
inc
lods
cli
add
in
sub
mov
pop
lds
subb
or
cmp
pushl
jge
testb
test
jne
sub
cmp
sar
pushl
shr
sub
jle
add
cwtl
mov
jnp
jle
lock
jg
sub
sbb
pop
loopne
ret
dec
sbb
ffree
mov
mov
mov
xchg
stos
inc
mov
pop
shlb
lds
out
inc
filds
xor
es
jbe
loopne
decl
cwtl
jp
add
cmpsb
sbb
pop
fdivr
ljmp
imul
sub
rcll
scas
outsl
dec
imulb
and
flds
in
lods
xchg
inc
arpl
dec
push
call
into
xchg
mov
in
push
cwtl
xchg
test
adc
cld
je
inc
xchg
sbb
mov
mov
negl
test
mov
call
test
out
notb
jns
shr
in
addr16
add
sub
mov
or
sbb
sub
jno
push
out
xchg
jo
mov
xlat
push
rorb
into
push
mov
push
repnz
sub
cmp
incl
out
mov
push
push
aam
test
inc
jg
decl
shlb
rcll
add
loope
push
pushf
loopne
imul
cltd
lods
sahf
jecxz
pushl
xchg
xchg
adc
xchg
scas
pop
out
and
sub
jne
xorl
mov
jmp
bound
and
jne
jmp
inc
mov
inc
movsb
fcmovnbe
int3
out
clc
in
movsb
or
xchg
les
stos
pop
mov
aaa
jecxz
out
or
enter
jmp
jmp
add
leave
add
movsl
cmpsb
in
add
jp
xor
or
inc
dec
out
clc
mov
push
insl
mov
push
ja
in
adc
fs
fcompl
pop
add
cmp
push
js
cld
jl
lret
pushl
pop
shrb
movsl
mov
push
inc
ljmp
cmpb
inc
add
call
and
lock
leave
sub
sbb
and
xor
shll
decl
and
mov
mov
lods
jb
add
dec
mov
in
cmc
and
mov
bound
jbe
jp
jp
or
and
mov
sti
sbb
or
mov
dec
jmp
fwait
sbb
test
mov
mov
fbld
in
loope
lret
sub
jns
pushl
notl
push
xor
cs
lods
aad
jg
test
test
repz
and
cmp
pushl
test
mov
cli
lret
dec
mov
int
frstor
in
cmpsb
mov
cmpl
mov
xchg
push
dec
call
imul
arpl
jg
leave
clc
xchg
enter
pop
dec
xchg
in
inc
loopne
dec
pop
js
dec
pop
jg
call
dec
je
popa
sbb
filds
pusha
in
adc
aad
aad
mov
jg
loope
cmp
or
fsincos
xorb
pushf
into
xchg
arpl
ljmp
pop
mov
add
push
sub
repnz
jns
inc
test
popa
xor
jecxz
jmp
fistl
sub
dec
jae
dec
jnp
jg
ret
scas
cli
rclb
pusha
imul
ljmp
sbb
push
adc
shlb
sub
or
or
or
jle
arpl
out
inc
int3
mov
int
sbb
jl
bound
cltd
test
cmp
fildl
add
mov
fwait
adc
cmp
out
out
xlat
loop
mov
pop
cmc
sbb
stos
push
jl
pop
pushf
mov
in
push
sbbl
pop
cld
movsl
sub
dec
cmp
int
mov
jmp
mov
and
fsubl
hlt
lahf
dec
pop
test
sub
ret
stc
lcall
in
sub
add
sbb
adc
push
xor
daa
in
cld
inc
push
ja
ja
mov
movsl
xchg
and
mov
shlb
ljmp
inc
jns
decl
jb
daa
mov
push
pop
stos
xor
stc
xchg
out
popf
add
lea
inc
incl
stos
repz
xchg
sub
es
out
lret
xor
pop
stos
cmp
cmp
jg
into
cmp
mov
adcl
call
sub
aam
mov
fsub
adc
dec
push
inc
push
sbb
xchg
mov
in
pop
and
jae
adc
mov
ljmp
cmp
xor
dec
xchg
test
pushf
pop
add
les
sarb
call
fwait
pop
ret
shl
add
in
xorb
stos
test
arpl
xchg
scas
dec
insl
std
pop
fiadds
lock
dec
mov
dec
into
mov
andl
add
data16
fistpl
mov
dec
xor
push
insl
pop
arpl
jge
adc
cmc
pushl
xor
inc
jbe
jbe
out
or
sti
addr16
roll
mov
int
push
jne
pop
cmpsl
and
out
pop
and
cltd
decl
push
jbe
pop
xchg
lods
popa
das
fidivl
pusha
testb
jmp
inc
mov
xor
and
sub
shl
in
mov
add
int
icebp
sbb
sar
cmpsl
les
xchg
shll
sub
loope
lock
push
xlat
lock
fistpll
jp
mov
decl
sbb
jb
dec
lock
push
cmp
lds
sub
arpl
push
jecxz
jbe
cld
mov
out
dec
push
cmp
jg
fsubs
pop
sub
cli
clc
sbb
push
sub
jg
push
std
in
inc
imul
pop
dec
enter
popf
mov
lock
xchg
jecxz
iret
push
lret
inc
xchg
pop
ret
cwtl
fldt
inc
fndisi(8087
dec
stos
sbbb
push
xor
cmp
sub
pop
outsb
xchg
jbe
icebp
in
in
push
xorb
ds
hlt
or
ljmp
or
imul
lcall
push
fistps
mov
add
mov
lds
cmpsl
jnp
mov
adc
mov
push
mov
jmp
pop
cld
test
inc
in
push
imul
call
mov
in
xchg
jle
dec
aas
data16
sbb
addr16
imul
loopne
roll
mov
call
mov
pop
sub
inc
popf
push
fisubl
mov
adc
call
std
inc
adc
jge
popa
xorb
mov
shll
cmp
pop
call
jg
or
mov
xchg
sahf
popa
lock
call
rol
test
lods
and
xchg
es
adc
sbb
cmp
je
jns
sub
shl
shlb
stc
nop
sbb
cmpl
mov
test
xchg
jbe
xchg
ljmp
lcall
data16
fildll
pop
jns
lock
pop
or
filds
or
mov
repz
mov
out
test
daa
repz
fisubs
mov
pop
mov
mov
cmp
shl
into
mov
or
push
xchg
or
mov
idiv
mov
dec
mov
fsts
cmp
fwait
jg
cmc
pushl
insl
jmp
pop
sub
xor
adc
mov
lock
lret
adc
pop
out
ret
sbb
call
mov
lret
dec
outsl
push
cmp
test
mov
ljmp
dec
gs
mov
jle
sbb
call
roll
fwait
and
ljmp
out
push
xchg
push
les
in
xchg
jo
dec
out
jnp
pop
xchg
lea
pop
add
scas
jle
in
lds
mov
dec
pushf
or
push
mov
ja
push
test
pusha
sub
and
mov
dec
out
loope
xor
cld
add
pop
pop
ljmp
outsl
std
or
fisttps
dec
imul
push
pop
movsb
push
sbb
js
fidivrs
mov
add
out
ss
mov
inc
adc
mov
pushf
mov
es
and
ljmp
and
xchg
das
loope
adc
adc
inc
in
inc
cmpsb
pop
in
and
xchg
int
jg
push
mov
ljmp
movsb
das
push
push
mov
push
aad
call
mov
pop
mov
dec
mov
dec
pop
pusha
mov
lcall
jne
jmp
mov
insb
mov
decl
in
scas
aad
pop
add
adc
sahf
call
jo
ret
test
repz
idivb
mov
decl
mov
ja
scas
lock
jp
mov
or
aas
outsl
imul
jb
push
orl
addb
mov
or
mov
ss
inc
ret
fidivl
pushf
jmp
in
clc
inc
test
scas
mov
jle
lods
sbb
mov
rcll
test
dec
pusha
vpmovzxwd
pop
decb
pop
int
xor
out
sbb
lods
cwtl
or
insl
mov
call
mov
jg
out
sub
sarl
int
push
hlt
enter
cmp
icebp
sub
pop
call
push
pop
jnp
iret
notb
xlat
ret
out
jmp
rclb
sub
ljmp
mov
int3
ret
inc
push
mov
sbb
jmp
or
mov
adc
cmp
loop
mov
cmp
push
aaa
pop
and
in
out
lahf
loopne
jge
push
aaa
or
sahf
arpl
int3
inc
adc
lock
stos
ret
xchg
loope
xor
divb
cmc
and
pushl
xchg
movsl
sub
sub
call
dec
xchg
inc
push
out
xchg
pop
fsubrs
popl
adc
ljmp
dec
aam
rolb
popa
ret
pushl
adc
adc
loop
decl
inc
clc
mov
ds
js
add
insb
xchg
lcall
dec
test
mov
xchg
dec
xchg
ss
stc
test
dec
inc
out
and
mov
out
cltd
adc
mov
jg
rorb
push
sub
lret
xor
pop
popa
adc
fdivp
mov
aam
decl
lock
inc
push
shll
and
out
in
add
pop
int3
incl
pop
mov
ja
movsb
adc
xorb
rcl
out
add
ss
pop
sar
les
lds
push
aas
inc
or
fcom
jae
lcall
inc
or
push
call
dec
js
out
mov
arpl
aaa
imul
and
hlt
lret
test
je
inc
call
mov
loopne
and
add
xchg
clc
mov
dec
mov
jns
ja
pushl
iret
xor
stc
pop
subb
or
push
shlb
call
xchg
ret
dec
pop
add
push
or
leave
adc
pop
mov
cs
cmpsb
fldcw
cmc
sub
jg
mov
cld
fiaddl
sbb
std
rol
mov
sub
les
mov
iret
sub
ss
add
push
je
adc
lcall
aaa
pop
or
lcall
loop
jmp
pop
mov
add
xchg
stos
lds
aas
dec
add
ljmp
mov
push
sub
call
or
or
loope
adc
fnstcw
lcall
dec
pusha
mov
push
push
shlb
fnsave
jp
cltd
incl
loope
cmp
pop
ss
mov
jne
push
and
mov
incl
lret
aaa
fsts
cmp
insb
mov
lcall
fcmovne
jl
adc
lods
stos
inc
movsb
incl
sub
les
cmpsb
outsb
mov
xor
xor
cmp
sar
sbb
decl
stos
mov
mov
add
dec
jp
fcos
jle
iret
repz
xchg
ret
sub
stc
jecxz
mov
inc
or
pop
or
adcl
rorl
xchg
shrb
enter
pop
xchg
fistps
dec
popa
cmpl
adc
cmp
shll
leave
lcall
push
movsb
inc
cmp
adc
jp
mov
hlt
pop
and
cmc
xor
imul
or
decl
mov
mov
lcall
add
es
pop
sbb
sti
mov
int
jnp
push
imul
jae
ljmp
aaa
fmul
icebp
inc
lret
pop
jecxz
sub
mov
clc
ja
dec
fmull
movsb
sub
mov
push
cmc
rcrl
bound
movsl
or
stos
push
popa
bound
mov
pop
xor
in
in
pushl
cmpsb
xlat
push
mov
pop
ljmp
or
mov
add
push
std
decl
add
sbb
jg
loopne
fsubrl
mov
xor
jmp
and
stos
jmp
pop
stos
xchg
rolb
ret
or
rcl
pusha
inc
push
mov
loopne
enter
ss
mov
mov
jle
inc
mov
fbld
mov
dec
rclb
cli
inc
jae
aad
std
jp
pop
add
loopne
xchg
nop
mov
add
sub
mov
jmp
sbb
push
mov
inc
outsl
in
ja
jl
sbbb
mov
in
les
imul
pushf
jmp
pop
xorl
js
dec
aas
or
pop
out
enter
loope
into
lcall
jnp
sbb
fcoms
jecxz
mov
pushl
loop
shrl
mov
pop
loop
fisubrl
cltd
push
dec
and
in
cmpb
sti
lds
mov
icebp
cld
pop
inc
loopne
mov
fbstp
fs
pop
sub
repnz
jg
pusha
out
dec
xor
push
mov
pop
mov
mov
pushf
jge
push
push
add
mov
and
aad
in
bound
pusha
sarb
jns
pushf
out
hlt
jbe
mov
jle
iret
loopne
or
pop
inc
sbb
pop
pop
int3
mov
lods
xchg
icebp
ljmp
loope
into
cmp
dec
jp
and
push
sti
clc
icebp
cmp
call
cmpsl
out
hlt
aam
outsl
addr16
mov
jo
int
sub
sahf
fcomip
ljmp
stos
jae
add
push
xchg
mov
imul
ret
mov
mov
call
leave
cmp
sub
sbb
adc
loopne
push
fimuls
scas
sbb
inc
inc
xor
les
sbb
jmp
ficoml
xchg
jge
mov
sub
pop
lock
and
sub
sbb
mov
stos
int3
or
ljmp
dec
sub
jl
add
jg
xchg
jmp
aas
cli
adc
or
and
mov
in
cmc
cmp
and
stos
incl
fwait
and
std
xor
xor
adc
mov
push
into
xorl
ret
xchg
sub
mulb
into
xor
pushl
enter
mov
and
loop
mov
int
daa
ss
outsb
lcall
shl
mov
or
dec
push
cmp
sbb
enter
test
popa
inc
gs
call
test
lds
or
xor
inc
testl
das
ds
insb
jns
pop
gs
mov
push
pushf
jns
ds
outsl
adc
push
idivb
fisttps
outsl
out
mov
adc
adc
aas
jp
cld
hlt
cmp
xchg
stos
sub
fcmovnb
mov
jmp
fbld
movsb
out
mov
es
lea
xchg
lock
cmp
jne
pop
pop
xchg
int
outsl
mov
std
fldl
cmovnp
imul
seto
adc
popf
jg
mov
lock
sub
sub
mov
aam
popf
out
add
clc
sub
out
mov
lcall
xchg
sub
out
int
setnp
hlt
fidivs
pushl
cld
les
daa
movsb
clc
mov
adc
jp
xchg
add
pop
inc
cmp
jbe
xchg
add
or
xchg
lret
das
push
or
sbb
pushf
adc
ret
and
cld
mov
mov
outsb
xchg
mov
lret
push
and
out
mov
and
rorb
fisttpll
pushl
addl
in
mov
shlb
mov
fwait
daa
dec
dec
sbb
mov
std
stc
shrl
dec
and
mov
mov
inc
sbb
test
cmpsl
in
inc
data16
loope
call
cld
jg
sub
lcall
jg
shlb
push
shr
and
jle
jns
cmpsl
pop
mov
decl
add
mov
add
test
xchg
pushl
orl
stc
pop
xchg
mov
sarl
fidivrl
add
mov
nop
ljmp
inc
lods
add
and
hlt
pop
mov
jo
fmuls
adc
and
mov
inc
or
pop
adc
call
ljmp
int3
sub
aaa
cld
lcall
pop
lret
jo
std
xchg
ja
mov
daa
push
push
out
jge
loope
filds
decl
out
adc
mov
xor
sbb
add
xlat
mov
mov
push
fsubrl
lods
loop
sbb
out
inc
push
orl
dec
sbb
arpl
hlt
dec
das
into
or
icebp
inc
and
jg
insl
fwait
push
in
cmp
jbe
mov
and
mov
lahf
shl
cmpsl
lds
add
mov
fildll
jmp
incl
jmp
push
adc
jo
imul
orb
ficompl
push
icebp
dec
dec
stc
cmp
adcb
cmp
or
mov
cwtl
jbe
jmp
decl
lock
das
pop
fcmovnb
mov
mov
pushl
leave
xor
and
vpsubsb
jo
cli
mov
xchg
jecxz
pop
cltd
jg
into
and
adc
pop
xor
popf
mov
insb
add
add
fdivrp
aad
rolb
cmp
xchg
jb
xor
imul
push
sahf
lcall
xchg
mov
testb
sbb
dec
xchg
call
and
xlat
mov
inc
xchg
jno
out
dec
bnd
scas
xchg
or
in
dec
pushl
mov
lcall
jg
jns
ljmp
fdivrs
ljmp
adc
xchg
pop
shrl
sub
adc
jns
test
mov
cli
mov
ror
dec
es
lcall
lret
test
and
cmp
jmp
loope
std
sahf
pop
push
push
lret
cli
pushl
and
adc
outsb
mov
call
and
xor
ror
repnz
jno
sub
mov
js
test
icebp
pushf
jo
fucom
outsb
mov
or
fldt
outsl
jg
pop
bound
dec
push
adcl
jae
xor
mov
in
fadd
call
mov
arpl
inc
dec
test
jns
or
cmp
push
dec
adc
sbb
and
fcompl
pop
adc
mov
ljmp
pop
jbe
bound
jmp
and
int
test
push
inc
arpl
ljmp
lret
call
or
loope
ret
fisttpll
call
cmp
sub
les
dec
add
push
call
std
mov
jmp
mov
sbb
ja
je
or
adc
add
in
xchg
xchg
and
dec
or
add
por
pushl
inc
xor
lock
xor
enter
push
arpl
stc
mov
ret
push
js
mov
inc
in
push
and
xor
or
inc
movsl
out
inc
mov
fisttpl
fcos
pushl
loop
test
inc
sub
push
in
mov
push
movsl
mov
in
fistps
incl
or
mov
cmp
imul
incl
jle
mov
idivw
push
fsubp
les
sti
mov
jns
jnp
jle
es
push
xchg
mov
or
jae
fcomip
fisttps
xor
mov
ret
cltd
pusha
mov
cli
inc
push
or
pusha
mov
lcall
dec
rclb
xchg
btrl
nop
xchg
lahf
dec
push
mov
sahf
xor
lock
outsb
decl
aad
lret
movsl
out
mov
in
inc
pop
dec
mov
roll
mov
sub
jnp
addr16
xchg
sub
adc
lea
ds
mov
cmp
mov
pushl
dec
in
movsb
incl
pop
in
fdivrs
movsb
jbe
ret
idiv
lcall
adc
pop
mov
pop
addr16
xchg
out
pushf
or
nop
repnz
jp
dec
pop
cmc
ljmp
xor
inc
jo
cld
xchg
fisubrl
mov
mov
sti
push
mov
jmp
dec
push
daa
aad
cmc
adc
or
pop
testl
mov
jp
or
ljmp
ja
test
mov
nopl
stos
movsb
arpl
xor
stos
mov
jg
jp
fnstsw
ja
dec
mov
rolb
xor
push
xor
sar
mov
xchg
in
mov
call
sub
inc
test
jo
fiaddl
call
nop
cli
push
and
out
nop
test
and
and
mov
out
jae
jmp
outsl
jmp
jns
jae
out
xchg
fidivl
xor
gs
jae
movsb
or
add
jae
into
mov
xabort
jg
repz
dec
dec
jb
mov
ret
pop
f2xm1
addb
xchg
mov
fildll
cmp
repz
ret
push
pop
cwtl
push
data16
mov
cmp
lcall
shl
sbb
push
pop
mov
ss
fsubrl
inc
rsm
out
jmp
rclb
dec
int3
xor
xchg
bnd
cmc
decl
stc
or
pop
test
nop
mov
out
pusha
popf
or
mov
test
lcall
mov
mov
cld
xor
push
sahf
push
push
nop
dec
ljmp
mov
mov
and
jno
pop
or
sarl
fists
jo
push
push
rorb
xor
loop
pushl
fimuls
xor
insb
gs
outsl
incl
lret
rcrb
lret
or
mov
fdivs
push
ret
pop
cmp
es
pop
add
fisubrs
mov
mov
mov
mov
into
jmp
in
mov
cmpsb
ret
add
icebp
cmp
std
jecxz
adc
xchg
add
in
fcom
cmp
in
push
ja
jge
je
cwtl
cld
data16
call
pusha
fwait
pop
mov
data16
push
dec
fnstcw
mov
mov
or
jmp
mov
dec
in
mov
adc
cmp
stos
ret
ud0
jno
sbbl
mov
out
or
sbb
mov
ljmp
xor
cmp
fisubs
mov
daa
lods
mov
cwtl
jge
dec
adc
jmp
xor
push
neg
cmp
lret
je
jnp
jns
in
sbb
iret
decl
xchg
sub
sbb
nop
test
jge
mov
test
xchg
imul
dec
inc
mov
in
repnz
push
lret
shll
rclb
outsl
jl
mov
fcoms
decl
lret
jae
cwtl
push
cltd
or
jno
lds
jne
and
inc
jp
addr16
clc
decl
mov
js
mov
mov
or
in
push
jb
mov
cld
incl
add
and
pop
lahf
inc
out
sbb
filds
cld
push
in
ret
jae
int
jno
cwtl
cmp
outsb
xor
ljmp
dec
push
outsl
sbb
dec
sbb
getsec
cld
std
ret
mov
loopne
ljmp
push
sbbb
pop
sti
cld
loop
andl
or
fsubrs
jb
das
mov
pusha
mov
aam
jecxz
ds
shll
lcall
or
loopne
ficomps
mov
lods
dec
imul
fiadds
lcall
movb
lods
inc
pop
imul
es
mov
mov
jmp
shrb
add
ljmp
mov
pop
cltd
int
pop
aas
and
lret
loopne
jo
pop
sbb
les
lock
lods
xor
subl
aaa
sarl
cmp
jg
cmpl
int3
fbld
mov
adc
push
out
cli
xchg
gs
leave
xlat
subb
jle
cwtl
pushf
xor
jbe
hlt
and
test
mov
out
in
sbb
push
cld
xchg
notb
call
mov
mov
ja
dec
inc
pusha
ret
xor
ljmp
cmpl
push
test
or
ljmp
mov
insb
pop
push
or
jmp
call
outsl
arpl
in
aad
push
pop
adc
pop
int
pop
adc
ret
push
lret
add
jmp
mov
mov
mov
pop
fdivl
mov
sbb
fildll
pop
in
gs
adcl
push
mov
push
clc
rclb
or
out
stos
inc
adc
cltd
and
cmp
sbb
stos
call
lahf
icebp
xor
push
jecxz
stos
fnstcw
leave
or
loopne
xor
and
sahf
scas
mov
push
fisttpl
out
imul
mov
jne
push
mov
jb
mov
or
and
mov
fadd
out
mov
pop
cmpsb
push
pop
xor
insb
scas
mov
or
or
decl
iret
sub
roll
push
mov
ss
decl
cli
fwait
mov
sbb
xchg
mov
ss
enter
jge
arpl
ljmp
cmp
pop
mov
add
rclb
adc
incl
inc
or
mov
lock
and
cmp
mov
popf
insl
clc
popf
xchg
outsl
subb
pop
dec
out
mov
aaa
xchg
cmpsb
push
jg
decl
jle
int3
xchg
scas
out
add
or
xchg
fidivrs
push
sbb
lcall
mov
ss
out
stc
cmp
jbe
mov
test
and
cs
call
mov
mov
push
mov
rcrl
add
pushw
mov
in
popf
xorl
stos
ljmp
inc
lret
jg
sub
sbb
xchg
add
add
imul
decl
stc
push
jge
add
sbb
push
push
lret
clc
flds
sub
pushl
test
fidivrs
ss
mov
push
sbb
int3
add
adc
pop
sbb
pop
mov
or
jb
iret
daa
or
cmp
jnp
jne
lahf
push
jp
xor
ja
outsb
cmpl
push
jg
mov
call
adc
add
mov
or
scas
push
mov
cwtl
sub
pushl
in
sub
jl
xor
pop
add
pushf
push
jmp
adcl
stos
sbb
std
cmc
add
dec
test
stc
fs
xlat
cmp
or
gs
incl
cmp
aad
mov
decl
pusha
outsb
mov
pop
xchg
cmpsl
cmp
sti
movsl
pop
push
loope
fildl
sbb
push
mov
fnstsw
and
icebp
mov
mov
outsl
lcall
jmp
fsubrl
shl
sub
cmpsb
jl
cltd
out
mov
popf
js
push
jge
ljmp
pushf
arpl
push
in
enter
cmpsb
data16
dec
lds
std
cmpsb
fstpl
sbb
or
push
push
adc
popf
adc
push
jecxz
enter
xchg
jp
adc
sbb
in
inc
insb
or
xor
out
mov
jmp
clc
cmpsl
or
pop
or
call
jae
bound
pop
push
push
fldenv
pcmpeqw
mov
push
test
test
mov
xchg
xchg
sbb
nop
lret
mov
rcrb
dec
add
cmpsb
pusha
pusha
mov
cmpsb
jmp
push
in
sub
in
pop
pushf
les
pop
in
aam
pop
mov
or
push
stc
negb
mov
fists
xor
repnz
icebp
xchg
sub
rorb
in
das
out
repnz
cmp
mov
inc
scas
mov
incl
mov
jg
dec
loope
out
mov
mov
push
xor
cmpsb
mov
pop
jne
lret
mov
ja
sub
jno
push
clc
push
cmc
nop
mov
pop
movsb
xor
sbb
mov
xchg
adc
adc
xchg
jg
orl
pop
stos
pop
fildl
decl
pusha
dec
test
mov
or
mov
and
aaa
fs
call
sti
cmp
jle
mov
outsl
icebp
jbe
mov
sti
pop
mov
or
in
lcall
ds
adc
cmp
mov
test
decl
mov
pop
pop
dec
sahf
loop
filds
or
jns
sub
rcrb
std
ds
cmp
add
mov
hlt
popa
sub
pusha
sbb
xor
call
pop
icebp
call
mov
and
ss
push
mov
adc
pop
jg
or
dec
push
addl
mov
aad
and
jmp
and
inc
mov
xchg
adc
loopne
ljmp
rolb
popa
or
dec
mov
pop
xchg
sub
jmp
mov
mov
jb
mov
jmp
cmp
dec
xchg
adc
xor
pop
mov
lea
loop
and
jecxz
cmp
push
sub
inc
fsub
bound
fldt
sub
jo
jg
adc
in
mov
dec
std
clc
ret
mov
inc
test
lods
aad
lcall
ljmp
test
addr16
in
or
inc
xchg
clc
sub
arpl
ret
inc
xchg
lcall
add
mov
or
dec
inc
insb
inc
ja
pop
and
xchg
push
add
jg
lcall
mov
sbb
dec
fadd
pop
int
shrl
mov
mov
jg
rorb
sbb
add
sahf
add
lds
decl
pushf
and
test
dec
out
xor
inc
ss
inc
xlat
xorb
push
lahf
mov
sbbb
inc
adc
push
call
call
push
push
sub
add
inc
push
fidivs
mov
inc
mov
popa
subl
mov
mov
clc
mov
mov
cmp
xchg
cmpsl
mov
lahf
xorps
jne
mov
decl
sbb
in
cmc
aas
or
inc
test
scas
pop
pop
jno
xor
out
call
and
xchg
stos
xchg
mov
pop
enter
stc
and
andb
pop
push
insb
mov
out
jmp
rolb
mov
lcall
sub
or
or
outsl
clc
jmp
lahf
and
pushf
iret
std
out
mov
mov
insb
dec
dec
sti
mov
repnz
jmp
lret
aas
lea
lock
inc
mov
add
and
pop
rcrb
mov
mov
clc
mov
in
pop
and
mov
or
sub
sbb
incl
xlat
ret
xor
pop
scas
adc
das
fxtract
push
pop
ret
xor
call
test
decl
imul
or
jae
pop
xchg
addr16
les
pop
dec
insl
leave
lcall
incl
mov
dec
cltd
jns
mov
jns
xchg
loop
into
sti
add
mov
or
ljmp
push
out
pushf
add
sbb
pop
mov
mov
iret
push
iret
inc
add
or
and
ret
mov
jecxz
test
testb
mov
out
outsb
aaa
loop
inc
leave
mov
js
jns
and
and
jmp
loope
insb
lods
enter
loopne
loop
ficomps
aam
dec
dec
inc
cltd
dec
mov
out
inc
into
add
dec
jne
int3
push
les
mov
jae
pop
les
sbb
inc
scas
cli
jmp
dec
sti
push
insl
xor
and
push
add
jae
or
inc
jae
push
testl
mov
or
jl
fnstenv
cmpsb
push
and
and
addb
or
mov
cmp
cmp
addb
mov
dec
mov
jg
orb
cmpsl
fsubrl
mov
dec
ss
fbld
push
jo
dec
push
sbb
je
sbb
lret
rclb
cli
xor
pop
xchg
dec
mov
out
or
sahf
arpl
lahf
test
xchg
push
ds
lret
jmp
cmp
lds
xor
cmpsl
push
popf
push
test
mov
sub
loope
ljmp
adc
jae
mov
dec
push
sbb
push
sub
test
mov
mov
and
dec
cmp
decl
xchg
or
ljmp
xchg
aaa
adc
cmp
ljmp
negl
lret
iret
fdivl
out
rorl
std
sub
lret
or
push
push
call
out
lret
sbb
fisubrs
jg
or
mov
cs
fadds
loop
jge
cmp
popf
std
ljmp
jle
push
or
rcrb
jg
arpl
out
test
cmp
inc
repz
addr16
inc
data16
pushf
movsl
fdivr
xchg
jns
jge,pt
sub
decl
lock
cmp
pop
push
outsl
fisubrl
test
sbb
jmp
add
nop
test
call
shlb
popf
sub
rolb
inc
clc
jmp
and
fwait
stc
call
mov
sar
ljmp
sub
sarl
and
rcr
or
icebp
loope
push
jmp
jne
out
dec
jmp
ljmp
gs
sub
mov
roll
ss
call
loopne
xbegin
mov
sbb
inc
ror
push
repnz
ljmp
icebp
popa
orb
inc
out
xchg
lret
movsb
sbb
popa
sti
mov
es
stos
or
mov
sub
mov
pop
push
lret
out
push
mov
in
je
and
pop
cmp
fcompl
add
xor
insb
pop
jmp
or
push
jle
in
sbb
subb
mov
in
mov
add
loope
loop
int
clc
or
decl
jle
and
out
popf
push
lods
inc
xor
cmp
sar
add
mov
or
orl
and
dec
pop
adc
xchg
cmpsl
and
incl
stc
inc
cs
fstl
scas
mov
fwait
repnz
lret
loopne
out
mov
jns
pop
or
and
clc
aam
add
sub
lcall
cld
cs
jmp
lds
cmp
cmpsl
mov
jo
rcrb
inc
fistl
iret
and
push
ret
setbe
loope
aam
leave
int3
lcall
das
mov
dec
pop
mov
outsb
pop
call
subb
adc
push
mov
icebp
les
lds
inc
mov
dec
cltd
lods
divl
fsub
cltd
cvtps2pi
mov
cld
jmp
jne
sbb
xchg
lock
jae
push
sbb
xchg
push
xchg
movsb
pop
mov
jg
and
std
jle
or
ljmp
and
iret
add
js
shlb
leave
shlb
jb
out
jmp
mov
insb
shr
decl
mov
sub
je
mov
xchg
sahf
xchg
in
out
clc
ljmp
ds
sti
add
dec
push
adc
sahf
mov
pop
jns
lret
mov
jmp
dec
sbbl
aad
popf
jmp
cmp
js
jle
decl
pop
jl
sahf
mov
xchg
push
mov
mov
mov
mov
lea
mov
imul
adc
cld
call
in
dec
inc
adc
hlt
in
add
dec
jg
ret
mov
lods
push
fldl
pop
mov
in
into
and
mov
lcall
test
and
lret
fwait
lea
or
xchg
ffreep
nop
push
int3
repnz
lea
loopne
incl
xorl
data16
sbb
xchg
popa
call
xchg
or
and
bnd
sbb
in
cmp
lods
mov
dec
ret
or
jle
jne
insl
jmp
hlt
lret
in
mov
je
or
insb
data16
fs
pusha
mov
mov
pcmpeqw
add
scas
cli
call
aam
sbb
ror
bound
inc
push
jnp
add
js
pop
cmp
jmp
das
ss
xorb
stos
je
ja
and
pushl
fwait
jp
push
push
inc
fucom
lret
xchg
jno
mov
shlb
hlt
adc
dec
xchg
or
decl
ss
ret
jno
movl
std
xor
mov
cmpsl
mov
fisttps
adc
cmp
inc
adc
sbb
outsl
xor
lcall
or
mov
out
fistps
sbb
add
mov
mov
add
mov
cmp
mov
cltd
cmpsb
negl
xor
lcall
mov
sub
sbb
cmp
sbb
je
je
lcall
jle
call
je
xlat
push
sarl
cs
fidivrs
dec
dec
cld
sub
aaa
std
jno
out
gs
movsl
adc
jo
xlat
inc
xchg
or
jg
cmpsl
or
call
cwtl
sahf
pop
int3
mov
push
js
cmp
int3
mov
pop
flds
mov
lcall
mov
xor
and
addr16
xor
push
add
pop
push
jecxz
inc
sar
pushl
mov
inc
and
mov
cs
icebp
push
aaa
mov
fistpl
jg
test
icebp
mov
push
decl
loope
mov
xchg
out
insb
mov
lcall
lret
mov
mov
mov
loopne
mov
repnz
and
jl
sbb
repz
out
cli
sub
and
xchg
popa
add
daa
push
sbb
lcall
jmp
mov
push
sub
dec
lret
push
stos
xchg
jmp
xchg
xchg
fisubrs
pop
xorl
cwtl
sub
aaa
adc
leave
cmp
push
push
jmp
mov
into
mov
dec
or
cmp
pop
inc
mov
push
xor
insb
mov
jb
repz
js
pushl
push
mov
test
jge
or
fs
lahf
insb
or
fisttps
jg
lea
xlat
mov
daa
test
sar
in
push
jg
test
lock
mov
xchg
push
sahf
cmc
hlt
rcrl
incl
jg
in
dec
div
out
cwtl
add
sub
cli
xchg
cmpb
push
aam
fmuls
incl
in
in
je
and
jo
xchg
sub
sbb
dec
or
andl
incl
rolb
xchg
mov
mov
jmp
xor
adc
cmp
xor
scas
push
int
inc
cmp
pop
ret
lods
call
imul
xlat
xchg
loop
sub
outsb
and
ret
lcall
ljmp
in
lds
cmp
and
jno
dec
mov
sahf
out
or
jne
aad
cmp
js
insb
mov
repz
out
fs
cmpsb
sub
decl
lret
in
jno
mov
out
cmp
inc
nop
clc
gs
test
fucomip
sti
in
stos
enter
mov
push
dec
add
pop
cmpl
pop
pusha
shlb
add
inc
mov
ja
sub
sbb
fisubl
inc
or
ljmp
dec
call
xchg
in
in
cmpb
lods
cld
mov
stos
push
and
movsb
mov
js
data16
mov
add
stos
cli
jb
inc
pop
out
xor
rolb
push
push
enter
add
jecxz
call
mov
push
pop
and
sub
xchg
xor
out
mov
enter
lock
mov
je
pop
sub
pop
mov
mov
push
and
lret
inc
add
call
jle
xor
imul
fisubl
pop
cli
out
mov
clc
std
int3
xlat
outsl
mov
dec
xchg
add
ljmp
lea
stos
sbbl
cmpsb
mov
or
mov
test
jmp
test
shr
sbb
push
std
lcall
jae
sub
xchg
pop
jbe
cmp
or
stos
push
ja
xchg
fnstsw
mov
call
pop
cmc
jbe
inc
mov
ss
dec
jns
mov
arpl
sub
daa
or
jge
pushl
adc
sub
xor
insl
aad
add
cwtl
mov
iret
outsb
adcl
mov
mov
sub
xchg
mov
jg
fs
xchg
lock
push
int3
mov
cltd
xchg
shlb
popf
sti
scas
mov
ljmp
and
or
dec
mov
xchg
imul
and
pushl
cmc
dec
icebp
sub
jae
pop
sub
and
push
push
push
lods
xor
pop
imul
push
adc
orl
test
add
cmp
push
arpl
xchg
dec
in
inc
cmc
sbb
in
adc
das
inc
push
xchg
or
gs
ficoms
sub
cmp
cmpsb
xchg
jnp
mov
mov
ss
push
or
or
outsl
aam
sub
lods
jg
ljmp
test
int3
cli
lcall
dec
mov
popf
mov
sub
call
cmp
pusha
push
inc
cmp
call
jl
loope
popf
mov
sarb
into
test
dec
jle
ss
jno
push
mov
fcmovnu
movsbl
and
loope
and
dec
shll
cmp
imul
adc
das
rorb
xor
ljmp
out
lds
faddl
push
and
pusha
dec
or
mov
orl
mov
negb
mov
movhlps
mov
inc
cmp
fst
lods
insb
mov
dec
mov
repnz
nop
xchg
das
cli
pop
loopne
outsb
mov
add
and
divl
fdivr
incl
bound
lock
decb
mov
roll
mov
jb
inc
lock
xchg
jl
decb
call
sahf
adc
shl
sbb
push
ficomps
xor
ljmp
sbb
mov
std
inc
mov
test
cmp
xchg
ljmp
jle
test
pop
ja
mov
pop
cmpsb
nop
push
daa
sub
in
decl
cmp
test
xor
xchg
daa
mov
roll
in
rcrb
ja
jmp
daa
int
sahf
cmp
adc
dec
popf
mov
insb
rclb
pop
loop
adc
xchg
adc
xchg
sahf
test
in
dec
and
cmp
and
bound
dec
call
xchg
mov
xor
lods
out
sahf
pop
xlat
add
or
jno
lret
lret
push
fdiv
mov
fidivrs
outsl
mov
stc
outsb
jmp
mov
mov
and
push
or
repnz
out
imul
lret
sbb
lock
pushl
mov
xor
or
rclb
cs
mov
add
mov
inc
mov
pop
adc
iret
rorl
mov
cs
decl
cmp
jmp
jmp
sbb
outsl
addl
mov
mov
roll
add
ljmp
mov
xchg
movsl
sub
and
sub
orl
pop
ja
dec
push
or
lock
sti
mov
sbb
adc
xor
ljmp
test
cld
and
lods
push
mov
setnp
sbb
mov
mov
pushl
pop
aaa
sbb
xchg
sahf
aas
roll
in
arpl
add
das
rorl
xchg
mov
test
pushl
je
orl
lret
aam
dec
or
mov
shll
test
call
maxps
fldenv
xchg
mov
xlat
add
adc
aad
pop
lock
mov
xlat
jbe
aad
loope
out
cmp
pushl
cmc
sbb
sub
cmp
push
xor
adc
mov
mov
rolb
fcomip
frstor
mov
jge
mov
inc
pop
cli
cmp
ret
jae
add
lcall
aam
xchg
cmpsl
mov
pop
pop
pop
outsl
lods
clc
lock
inc
or
cmc
fbld
jg
mov
push
xor
out
xlat
daa
and
push
pop
xchg
icebp
jnp
or
sbb
decl
insb
jo
push
push
fsub
inc
xor
idivl
mov
mov
cs
xchg
push
in
subl
push
sub
repnz
add
jg
insb
mov
sub
les
iret
add
out
cmp
loop
cmc
je
cmp
in
stos
sbb
mov
int3
adc
mov
call
xor
in
mov
xchg
push
adc
outsb
sbb
out
push
push
mov
and
xchg
xchg
inc
out
fbld
out
xorl
lret
shll
or
pop
lahf
lods
icebp
out
clc
call
sbb
call
xchg
outsl
fcmovnu
pusha
cli
rcrb
in
call
adc
sti
push
jb
popa
out
test
jge
add
lahf
add
jb
push
jge
xchg
lcall
neg
push
enter
adc
push
cmp
adc
jmp
mov
fs
lds
jmp
enter
mov
clc
mov
shlb
outsl
push
mov
push
mov
iret
iret
fisubs
pop
leave
or
adcb
cld
pop
pop
cli
cmpsb
pop
add
and
xlat
aas
xor
lcall
cmpsl
jnp
mov
and
jb
mov
lock
mov
addr16
in
jmp
inc
xchg
nop
addr16
icebp
addr16
ds
jl
cmp
test
popf
inc
hlt
add
add
imul
inc
adc
cmpl
decl
div
lods
add
xchg
ja
jb
xchg
lret
cld
sub
stos
dec
cld
incl
emms
repnz
xchg
outsl
aad
xor
cmp
mov
pushf
ficomps
sahf
and
subb
mov
push
mov
bound
cli
ljmp
clc
ret
pushf
pushf
sbb
frstpm(287
movsb
add
pop
or
mov
popf
sarb
cmp
mov
jg
xchg
nop
in
std
mov
xchg
out
dec
mov
test
ror
int3
push
mov
incl
sub
xchg
pop
decl
dec
fcoms
stos
in
push
add
or
mov
or
push
mov
scas
js
push
mov
lock
cwtl
outsb
test
xor
pop
cli
inc
xor
mov
xor
scas
fwait
addr16
adc
cmpl
test
ljmp
sbbb
jae
ds
pop
frstor
in
out
inc
addr16
xchg
test
xor
loopne
ds
lea
xchg
xchg
out
dec
xchg
je
test
mov
mov
jg
aam
dec
arpl
add
and
add
jg
or
loop
sbb
cmp
pop
hlt
jae
enter
xor
sar
mov
imul
mov
sbb
adc
jmp
cs
push
sarb
popf
push
dec
fidivl
icebp
sub
pop
cs
movsl
pop
jb
push
sub
push
imul
and
cmp
insb
xchg
test
sbb
mov
and
aaa
cmovns
clc
mov
jbe
sub
jno
adc
push
sahf
xor
jmp
enter
cld
xor
jecxz
popf
sti
jnp
jne
mov
dec
mov
cli
call
gs
movsl
imul
addr16
jecxz
push
fbstp
cmp
inc
adc
dec
ljmp
es
sub
inc
test
pop
xadd
pushf
fnstcw
pushl
in
push
nop
push
cmp
mov
rclb
push
sahf
clc
xor
lods
and
and
jmp
mov
add
jns
xorb
lea
mov
gs
ret
rcpps
mov
mov
int
push
rorl
push
push
xor
xor
jns
imul
jmp
push
mov
mov
jnp
shll
popa
arpl
or
idivb
and
cmpb
jns
out
frstor
jg
outsl
jo
sub
sub
mov
pop
sub
and
imul
xchg
adc
push
cmp
dec
jmp
fsub
xorb
enter
out
fistps
and
mov
xchg
js
std
nop
mov
aad
stos
popf
xor
lds
jmp
int
dec
imul
aas
add
inc
adc
adc
mov
jmp
flds
ret
adc
int3
jp
sbb
jbe
jg
mov
cmp
push
repz
push
test
sub
cmpsb
mov
cmp
rcr
mov
jmp
push
lea
push
push
add
mov
imul
scas
fstpt
addr16
js
fldenv
sbb
incl
fildll
mov
movsl
pop
mov
bound
dec
jbe
lods
rorb
fldl
loope
cmp
add
jne
in
mov
hlt
sti
rorl
pop
xchg
out
into
xchg
aas
mov
add
pop
hlt
cmp
jge
jb
dec
loopne
mov
pop
mov
in
sbb
and
sahf
int
dec
dec
fcompl
dec
nop
jne
inc
mov
push
or
sahf
pop
mov
cmc
outsl
fnsave
call
fwait
pop
cmpb
lea
subl
dec
lock
clc
scas
dec
and
add
mov
adc
xchg
aam
rcll
mov
cmp
ljmp
scas
rorl
or
test
pop
push
mov
pop
xchg
dec
sti
test
push
fcomip
fisttps
push
sbb
lret
bound
add
cmp
pop
call
sbb
icebp
sbb
jno
int3
cmpsl
sbb
out
fistl
or
std
mov
jmp
jno
fmul
int
add
lcall
ret
dec
cmp
sbb
fs
stos
or
jbe
jg
jno
jecxz
inc
push
into
hlt
or
xchg
sbb
jge
or
lods
out
mov
add
ja
hlt
or
sub
stos
jmp
pop
mov
push
cmp
mov
sbb
sti
push
jnp
inc
and
xchg
xor
std
xor
push
push
xor
addr16
int3
loope
imul
fwait
jbe
inc
enter
adc
out
call
jns
mov
pop
xchg
pop
mov
sbbl
fcmovbe
mov
mov
int3
mov
test
jp
mov
pop
cmp
pop
lcall
sbb
insl
loop
fmull
push
loop
sbb
decl
bound
lock
xchg
dec
test
xchg
pop
rclb
mov
dec
dec
add
push
mov
nop
xor
lcall
inc
or
dec
dec
mov
imul
push
dec
imul
clc
movl
arpl
or
push
stc
mov
dec
pop
dec
pushl
adc
adc
in
inc
push
push
jp
jmp
xchg
jg
cld
mov
cmp
insl
inc
cmp
mov
mov
enter
jno
les
pop
push
xor
push
jp
ljmp
cld
mov
shll
aaa
dec
aad
xchg
cmp
cmp
ja
mov
nop
or
repz
adc
lret
mov
jmp
addb
sub
repnz
mov
outsb
mov
pushl
pusha
push
pop
jns
mov
shll
arpl
rcrb
add
jmp
leave
bound
and
daa
insb
pop
loope
dec
into
mov
inc
in
fldl
mov
enter
cmp
mov
xchg
cmc
xchg
and
push
fnstcw
out
pop
decl
rcr
notb
movsl
fs
lds
add
xchg
add
test
xor
add
pop
lock
mov
movsb
mov
push
test
inc
mov
adc
aad
pop
mov
nop
loope
and
dec
cmp
ljmp
shlb
jmp
jge
andl
push
add
sub
add
pop
pusha
ljmp
sbb
push
sub
and
sarl
daa
inc
cmp
pusha
lcall
xor
add
mov
xchg
sbb
fldcw
sub
out
cli
decl
fisubrl
mov
movsb
push
pushf
adcb
jo
inc
inc
leave
lcall
addl
add
sti
fs
sbb
aad
mov
ja
idiv
lcall
dec
ret
inc
je
lods
and
xchg
in
lock
push
arpl
xchg
xor
pushf
dec
jmp
jecxz
andb
sbb
lds
rclb
rorl
bound
jnp
dec
push
fists
dec
inc
fmul
jge
pop
xchg
test
outsb
pusha
xchg
ret
movsb
inc
cmpsl
dec
jne
ds
mov
inc
mov
mov
iret
hlt
mov
addr16
pop
mov
push
loop
jecxz
jmp
or
and
nop
es
incl
ljmp
aad
sbb
adc
add
cld
nop
dec
into
ljmp
mov
xchg
push
jecxz
leave
test
das
outsb
mull
push
aaa
fldt
pop
cli
sub
loop
or
mov
push
xchg
cwtl
pushl
fcmovnu
inc
or
bnd
and
xchg
sbb
xor
adc
xchg
sbb
sub
sbb
inc
pusha
int3
mov
ret
ljmp
cmpsl
inc
mov
out
xor
lret
sti
pop
clc
lea
cmp
std
mov
jecxz
movsl
dec
cld
push
rolb
add
das
clc
push
dec
stc
mov
sbb
mov
inc
lcall
call
daa
sahf
mov
daa
and
orb
xor
dec
and
jo
xchg
cmpsb
bound
inc
sbb
addr16
fs
push
lods
je
dec
mov
mov
lret
xor
xor
ret
pop
cmpl
inc
pop
sbb
test
fdivrs
les
pop
stc
lret
or
jns
or
dec
sub
jmp
inc
cmpsl
lcall
inc
and
in
cmp
mov
jnp
dec
out
add
call
lock
pop
rcll
loopne
push
pop
sub
cltd
decl
jmp
jp
add
insl
dec
jecxz
mov
xorl
incl
mov
cmpl
mov
and
test
xchg
ja
loop
dec
push
xchg
sub
cmovo
jb
jle
faddl
stos
xchg
daa
xor
outsl
push
mov
imul
push
ljmp
nop
mov
sti
nop
int3
fldenv
mov
popa
jae
mov
arpl
jmp
pop
loope
rcrb
mov
cmp
adc
adc
into
sub
mov
ljmp
push
aas
or
ljmp
pusha
popf
and
pop
adc
das
pop
lahf
fisttps
jle
shrb
ss
es
push
mov
into
or
jae
mov
test
dec
push
sbb
push
adc
dec
lock
adcb
push
add
loope
das
movsl
mov
inc
jg
and
cld
cli
ja
add
mov
gs
divb
fdiv
dec
inc
cmp
outsl
popa
fs
add
mov
push
mov
pop
dec
imul
push
call
sbb
in
inc
loopne
movsb
or
das
dec
loope
adc
ljmp
fists
dec
dec
fisubl
cmp
push
fbld
decl
mov
jbe
xor
les
mov
js
adc
sbb
add
iret
or
pop
in
jb
dec
push
cld
mov
or
inc
sbb
sub
xchg
stc
je
lods
popa
lret
pushl
push
push
out
aaa
adc
xchg
sub
mov
push
jg
test
dec
dec
mov
leave
pop
mov
or
cmp
jmp
push
sti
decl
ret
iret
les
mov
cmpsl
testb
imul
sub
rorb
decl
mov
mov
cmp
adc
xchg
jae
aaa
pop
sub
out
cli
out
arpl
stc
cld
mov
repnz
push
push
ljmp
clc
sub
ljmp
dec
inc
rcl
lcall
push
aad
lcall
inc
sub
cmp
jmp
cmp
cmpsl
repnz
test
out
mov
stos
inc
mov
lcall
dec
in
pusha
pop
add
addr16
outsb
pop
ljmp
mov
pop
mov
ret
cld
pushl
lret
nopl
fs
test
mov
pop
mov
jg
add
insb
repz
xor
add
out
mov
lcall
and
mov
push
dec
push
mov
ja
ja
stos
dec
in
lret
xchg
decl
push
push
cmpsl
repz
push
data16
and
lds
popa
popa
xchg
sub
xchg
inc
sarb
les
ss
jl
test
ret
pop
aas
add
jne
and
sbb
jecxz
push
std
lds
out
pop
into
sbb
dec
push
imul
aad
cwtl
dec
int3
lret
in
mov
inc
fs
lods
inc
divb
mov
ret
lret
mov
cs
cmc
test
add
xor
nop
sar
add
xchg
icebp
or
push
jl
xor
pop
das
xor
call
adcb
fadds
mov
cmpsb
call
icebp
adc
inc
out
test
sbb
and
outsb
xorl
ljmp
inc
decl
movsb
cmp
movsb
lret
je
loop,pt
fdiv
lods
ljmp
insb
sub
pop
pop
xor
add
mov
test
dec
jmp
dec
mov
testb
xchg
aaa
aas
movsb
popa
ja
cld
hlt
sub
lcall
fwait
lret
mov
faddl
pop
insb
push
test
fsts
inc
xchg
jae
arpl
dec
dec
test
test
stos
imul
pushl
push
or
pop
jns
in
inc
jecxz
xlat
fistpl
ret
add
lods
icebp
test
movsl
mov
xor
daa
lods
test
cld
sbb
add
out
call
andl
test
jns
cld
and
xor
stos
pop
inc
in
fisubrs
mov
out
subb
sub
in
xchg
push
cmc
xorb
inc
dec
cmp
xor
pop
mov
lods
jmp
add
out
jnp
pop
or
cmp
xor
ss
aas
cmp
or
popa
cmp
push
mov
cmp
add
inc
and
dec
xor
mov
mov
dec
cmpsb
pop
test
push
pop
pop
pop
bound
fcmovu
rcrl
add
sub
pop
negl
decl
jbe
mov
xchg
lahf
mov
xchg
mov
xchg
nop
mov
push
pop
cmpsl
scas
clc
xchg
fucomp
out
mov
jno
lock
cld
int3
pop
fwait
mov
push
icebp
dec
inc
idiv
lcall
inc
mov
sbb
loopne
inc
jae,pt
pop
inc
xchg
scas
daa
push
xor
mov
pushl
je
jp
cli
inc
and
fwait
into
lret
cmp
jl
dec
ljmp
jg
cmp
xlat
int
xor
mov
in
pop
ljmp
inc
and
sbb
movsb
fildl
sbb
mov
in
mov
jg
sub
inc
cmp
jle
cmp
jmp
pop
mov
mov
xchg
jl
popa
stos
adc
les
jl
inc
mov
incl
mov
jl
nop
shlb
loop
adc
xchg
and
push
into
pop
ljmp
mov
icebp
mov
leave
outsl
sub
fnstsw
loopne
dec
orl
incl
sti
dec
mov
xchg
adc
and
sub
push
jne
dec
mov
and
test
incl
or
xor
ret
scas
push
dec
and
push
sbb
loope
cs
test
lcall
cmp
cmp
stos
or
pop
xchg
movsl
pusha
xchg
lcall
xlat
add
jg
scas
push
sarl
lcall
lock
cmpsl
adc
sahf
cmp
decl
inc
std
stc
add
popf
jmp
mov
sub
add
loop
lods
test
out
push
sbb
sahf
in
rcrl
push
xor
and
pop
dec
call
xor
mov
inc
lock
mov
push
xor
mov
cmpsb
repnz
in
call
cli
mov
fidivrl
in
test
sti
pushl
mov
les
and
xor
imul
mov
ja
jmp
jmp
imul
arpl
pop
lret
or
movb
ret
sub
test
inc
inc
js
cmp
push
sbb
pushl
mov
jnp
ss
aad
int3
xor
ret
push
push
mov
dec
push
call
and
cmpsb
inc
adc
sub
xlat
inc
mov
aam
clc
pop
push
pop
mov
repnz
into
outsb
xor
cmp
call
sbb
test
daa
sub
xor
daa
push
in
xchg
das
xor
lcall
shll
or
mov
sbbl
test
fsubs
mov
loope
mov
inc
not
out
xchg
inc
mov
call
push
sub
inc
push
xchg
inc
mov
scas
andl
cmp
and
cmp
loop
ljmp
cmp
enter
sub
mov
movsb
add
push
sub
sub
ss
mov
es
cli
lahf
stos
in
push
mov
mov
std
fstpl
fisttpl
int
push
jecxz
adc
and
sahf
jmp
dec
or
out
mov
mov
mov
lods
fstpt
jns
cmp
inc
jo
cld
scas
cmp
cwtl
stos
add
add
mov
lcall
sbb
jns
sbb
pushl
mov
cmp
fs
in
hlt
enter
pushf
jae
sbb
rclb
ljmp
bound
enter
into
and
fs
dec
mov
sti
divb
movsb
int3
fsubl
incl
decl
scas
add
jp
or
lret
call
adc
loopne
jmp
mov
inc
aas
inc
hlt
jge
sbb
push
cs
jg
cwtl
out
or
test
sbb
mov
add
cmp
into
jno
andb
fwait
inc
dec
xor
addr16
jae
xchg
incl
pop
pop
adc
stos
pop
imul
std
fidivrl
push
lock
lcall
test
and
mov
xlat
jmp
rcl
fsubr
decl
imul
jmp
jne
mov
push
lahf
jns
xchg
aaa
mov
icebp
push
notl
dec
outsb
dec
gs
shr
or
lock
xchg
fs
and
data16
lods
push
sarb
nop
test
sbb
popa
inc
xchg
pop
lds
scas
xchg
shrl
push
nop
sub
mov
push
inc
dec
leave
jl
sbb
aam
ret
inc
bound
or
in
add
lcall
loop
enter
loop
push
jg
fistpll
insl
xor
test
clc
out
sbb
pop
xor
dec
ljmp
xchg
or
jmp
push
shrb
shrl
or
fisttpll
movsb
les
incl
shl
out
lods
dec
movhps
pop
mov
add
ljmp
xlat
dec
inc
fcomp
and
pop
js
ss
or
js
push
fsts
sub
ret
xchg
in
mov
lret
mov
out
sbb
adc
push
ja
xor
jo
das
js
mov
push
mov
jl
mov
inc
add
fdivrl
jb
outsb
fs
jl
test
rcrl
out
orb
rorl
stos
in
bnd
push
scas
add
cwtl
aad
adc
jg
or
test
jae
fld
inc
mov
js
outsl
data16
xchg
and
ljmp
pop
rorl
mov
icebp
inc
jmp
aas
aaa
dec
in
inc
sbb
pushl
subb
leave
sub
mov
pushf
es
xchg
hlt
fsubp
decl
clc
mov
ret
mov
decl
cmc
mov
and
jle
xor
xlat
insl
dec
shrb
sti
sahf
jno
rcrb
mov
jo
ja
clc
fistl
or
shlb
add
clc
ss
outsl
std
fprem
pop
or
jae
sub
or
sub
sub
repnz
fimull
add
pushl
push
lock
ja
xor
xchg
decb
aaa
xor
mov
mov
xchg
sahf
pop
sbb
ficoms
inc
lods
and
mov
mov
jg
push
stc
adc
jne
fiadds
dec
loopne
repnz
cs
jecxz
aaa
stc
dec
lcall
stos
add
pop
fadds
and
gs
dec
mov
add
pop
scas
mov
test
push
and
daa
das
xchg
sub
xchg
cmp
fcmovnb
out
sbb
mov
aam
inc
dec
cltd
fcomip
lcall
movsb
std
popa
mov
cmp
add
das
push
shll
cmp
adc
lock
xor
call
in
jae
inc
xchg
jmp
xchg
add
mov
lods
adc
stc
mov
nop
dec
je
es
inc
in
int3
out
ljmp
imul
cwtl
out
lods
sarb
xchg
jle
xlat
inc
fsts
mov
sbb
insl
call
rcrl
inc
jl
sbb
xor
lret
decl
mov
sbb
mov
add
sbb
push
daa
ret
loop
mov
dec
cmp
or
ljmp
inc
cmp
xchg
push
jbe
out
enter
stos
push
or
stos
iret
pop
dec
addr16
insl
mov
sub
xor
daa
sti
adc
or
xor
jmp
rcrb
pusha
nop
rcrl
jb
push
mov
push
or
fwait
dec
xchg
add
aas
push
cwtl
xchg
xchg
addb
cmp
jae
adc
xchg
ret
add
and
stc
jg
in
xor
push
lock
mov
and
mov
hlt
mov
aas
jge,pn
mov
mov
or
push
push
fs
lahf
mov
or
sbbb
mov
add
jmp
lock
std
cmp
fstps
fst
adc
and
movd
decl
out
push
mov
xchg
xchg
into
dec
cmp
pop
inc
add
push
stos
inc
sub
mov
jns
push
xchg
xchg
aam
sarb
pop
inc
cmc
in
jp
pop
pop
lea
sbb
in
add
mov
xchg
fildl
call
outsl
and
or
ret
lods
mov
mov
repnz
xor
test
nop
push
fildll
dec
mov
inc
test
mov
mov
jbe
dec
mov
aad
adcl
pop
jbe
inc
fwait
pop
and
jnp
sahf
xor
cmpsl
sbb
add
decl
lea
popf
push
filds
enter
push
xchg
inc
mov
push
stc
aam
jae
mov
jnp
enter
rcl
xchg
add
sub
or
cmpsb
mov
mov
cs
mov
enter
sahf
and
arpl
pop
popa
inc
add
jg
and
mov
jl
inc
sub
stos
fbstp
xlat
pop
push
push
repnz
fcomps
lret
cmp
inc
and
decl
fld
pop
cmc
outsb
push
jb
xchg
cwtl
xchg
cmpsl
mov
fsubs
bound
ret
mov
cmp
push
lcall
add
std
sub
adc
add
xchg
sbb
lcall
hlt
add
out
adc
mov
adc
dec
adcl
mov
dec
mov
lcall
jge
mov
push
mov
outsb
add
dec
clc
jg
xchg
jo
push
push
inc
sbb
or
jmp
dec
push
dec
mov
lods
aaa
jb
stos
cltd
ljmp
out
gs
cmp
dec
xchg
sarl
pop
fnstenv
adc
jb
push
adc
call
std
fimull
lds
les
sub
xor
inc
out
or
mov
push
ljmp
dec
dec
cmp
repz
out
mov
cmp
incl
in
push
idiv
dec
push
jecxz
and
aam
inc
inc
clc
call
mov
jle
cmpsb
out
adc
pushf
ds
fistpl
xor
call
adc
mov
xor
les
fcmovb
scas
shll
cmp
sbb
cld
in
pop
pop
cs
add
fisubrs
push
push
cmp
push
mov
incl
cwtl
inc
rep
jne
mov
cli
push
fsubrs
cwtl
push
loop,pn
pop
hlt
push
stos
jge
lods
push
in
sbb
cwtl
std
pop
cmp
insb
sbb
or
mov
add
sub
cmp
add
mov
fiaddl
pop
sub
das
cmp
mov
std
mov
jp
in
adc
mov
in
in
aas
mov
jno
push
incl
scas
adc
fs
lret
sub
xchg
fs
dec
fsubp
and
sub
decl
ret
sahf
push
sub
xchg
push
es
std
sar
incl
and
rcll
into
das
pop
mov
mov
cmpsl
adc
sbb
cld
incl
add
mov
js
nop
repnz
pop
shll
enter
dec
inc
add
fisttps
cmp
mov
push
icebp
and
lods
mov
decl
inc
xor
lcall
call
mov
pop
xchg
mov
xchg
arpl
pop
not
jns
pop
cmpb
inc
iret
call
mov
sbb
jmp
xchg
por
in
arpl
in
mov
fstpl
data16
fwait
ljmp
jmp
call
sahf
addr16
push
lods
lahf
push
lcall
out
fsubrl
out
clc
lahf
jp
mov
pop
loop
popa
in
rol
fnsave
or
popf
cmovae
call
popa
jbe
fsubrl
jle
fldcw
imul
mov
orl
incl
inc
pop
movsb
cmp
subb
jecxz
incl
cld
adc
shll
pop
xor
addr16
mov
les
sub
xchg
mov
jmp
pusha
xchg
jae
ja
mov
or
ds
push
xor
lods
leave
arpl
ret
shlb
rorb
inc
sbb
sbb
sbb
les
out
loope
inc
test
out
add
mov
mov
jp
imul
and
dec
and
lcall
in
mov
int
mov
jl
adc
add
or
out
xchg
push
jmp
outsl
ja
and
sbb
inc
ja
and
adc
shl
mov
adc
lret
cmp
adc
ljmp
aaa
xlat
loope
mov
sbb
test
rol
or
popf
dec
enter
sahf
mov
popa
das
push
jmp
pushf
cli
fistpl
mov
dec
sub
mov
jns
mov
push
push
leave
push
fnsave
lock
notb
enter
or
cmpsb
sbb
in
sbb
daa
rorl
incl
aam
add
fdivs
in
mov
jnp
dec
cwtl
jp
jae
test
or
sub
mov
loope
movsl
push
jns
mov
scas
and
mov
mov
out
sub
clc
roll
lock
js
scas
dec
dec
jl
dec
cmp
gs
jmp
lock
sti
jnp
dec
pusha
xor
dec
mov
xchg
imul
push
test
push
stos
out
scas
add
mov
fimuls
mov
adc
xchg
loop
sbb
stc
call
shlb
xchg
das
rolb
shlb
jmp
adc
cmp
add
shll
or
stos
aaa
mov
and
clc
pop
xor
int
fimuls
jno
jg
and
jo
icebp
lret
rcl
pop
xor
mov
incb
and
js
das
and
in
mov
push
mov
jo
out
add
ljmp
mov
incl
mov
or
mov
xlat
adc
nop
add
pcmpgtb
xorl
jmp
call
sbb
xlat
ret
sbb
adc
mov
icebp
push
mov
dec
lahf
sbb
ljmp
sbbb
sbb
push
movb
mov
pushf
mov
outsl
loop
fcomip
jmp
push
sbb
lret
shrl
test
movsb
leave
sub
mov
mov
xchg
call
mov
int3
cmpsb
or
dec
insb
push
jnp
cmpsb
pop
fstpt
aas
add
mov
xlat
mov
aaa
push
mov
and
pusha
loopne
and
sbb
cmp
add
xchg
pop
sub
mov
scas
mov
pop
push
jg
jg
xor
push
dec
mov
out
xchg
adc
push
and
mov
hlt
dec
cmp
or
dec
inc
out
aas
lret
mov
push
pop
je
lahf
aaa
test
mov
test
idivb
cli
or
inc
in
dec
mov
push
add
hlt
jns
fsubs
movsl
mov
sbb
mov
les
xchg
mov
repz
fs
cld
movsb
jmp
sub
pop
lock
incl
outsl
inc
dec
push
loopne
daa
iret
call
jl
pop
jns
push
push
fwait
jnp
and
es
mov
fdivr
pop
dec
shlb
insl
adc
scas
jmp
jg
jae
xor
xchg
call
ret
adc
loop
push
xlat
fidivrs
int
subl
dec
xchg
lret
mov
add
xchg
mov
incb
imul
and
imul
sbb
popa
mov
cmp
dec
cmp
jge
repnz
les
dec
imul
movsl
xchg
push
ja
aaa
jge
mov
mov
mov
aaa
jmp
fcomip
andb
mov
dec
jns
test
int3
mov
mov
cltd
daa
pushl
cli
push
adc
ds
xor
scas
mov
pop
inc
in
jg
pop
fsub
mov
pushf
out
push
test
es
fiadds
sbb
pushf
cmpsb
lahf
ret
pop
xchg
movsl
add
xchg
jnp
jp
add
or
sub
pushl
pop
dec
mov
xor
xor
push
lret
push
jbe
adc
mov
in
inc
mov
push
je
outsb
stos
or
cmp
into
and
adc
out
mov
incl
mov
lahf
incl
bound
jno
and
inc
ficompl
out
inc
xchg
adc
lds
fsub
pop
sahf
jp
call
jle
push
cltd
test
int3
adc
add
or
or
or
sub
cli
incl
inc
scas
fs
push
or
ss
or
dec
sub
push
sbb
call
call
inc
mov
sub
ljmp
jbe
ja
pop
ficoml
push
lcall
pop
cltd
sti
push
add
nop
mov
in
sub
xor
fsubs
int
add
jae
jg
xor
cmp
into
sbb
fwait
jle
mov
inc
insl
lods
mov
and
out
in
mov
repz
adc
cld
in
and
test
in
adcb
lock
test
cmc
pop
dec
xor
cltd
mov
mov
out
dec
iret
sbb
or
or
clc
insb
mov
sub
cmp
add
mov
or
lcall
into
popl
lods
bound
sub
xchg
sbb
sar
lcall
jmp
shrl
push
jno
mov
iret
mov
out
mov
ljmp
mov
xchg
jb
popf
in
push
js,pt
pushf
lcall
mov
xchg
add
decl
ds
pop
lcall
imul
lods
push
jo
pcmpgtd
mov
pop
dec
je
insl
mov
mov
hlt
xchg
cmp
popa
inc
scas
xchg
hlt
mov
mov
inc
shr
sbb
xor
lcall
notl
pop
mov
out
jmp
mov
push
mov
ficoml
xor
inc
or
jae
mov
cwtl
enter
arpl
lret
inc
and
jo
sahf
cmp
out
inc
cmp
lcall
sbb
dec
push
pop
cmp
in
test
ss
mov
lods
mov
in
fists
decl
cmpb
pop
stos
sete
cmpsb
cltd
or
nop
jbe
xchg
sar
call
jb
add
out
jne
cmp
or
push
inc
js
jmp
or
ljmp
xchg
lock
jo,pn
das
mov
es
jle
jecxz
sar
dec
and
call
xchg
add
xor
inc
cmp
mov
push
push
adc
lret
cwtl
ss
pop
addr16
pop
repz
in
incl
mov
dec
dec
adc
sub
jl
push
push
xchg
push
rcrb
dec
sbb
inc
loop
lcall
or
sahf
enter
or
add
sub
jecxz
loop
adc
or
shrl
or
outsl
out
pop
lahf
dec
jp
push
sub
sahf
pop
aad
lds
loopne
decl
mov
inc
fdiv
xor
in
mov
mov
sbb
pushf
push
mov
add
and
and
test
push
ficompl
mov
jmp
jmp
add
scas
cmpb
in
in
jg
xchg
notl
out
loopne
add
incl
jp
jp
fnstcw
sbb
movsb
sti
lea
jne
push
lret
test
mov
decl
inc
call
ret
ja
pop
dec
push
push
cli
call
rol
adc
lret
mov
sbb
push
or
call
jp
stos
mulb
sti
inc
jmp
mov
loope
pop
ds
out
inc
mov
je
jnp
decl
push
mov
jns
xor
sbb
add
cmp
push
pop
jmp
jmp
pop
xchg
mov
add
cmp
xor
lock
and
arpl
ss
mov
pop
lcall
mov
sahf
adc
out
sub
mov
mov
call
lret
add
adc
ss
testl
gs
add
hlt
xlat
fisttps
aas
js
decl
mov
sub
int
test
mulb
mov
in
clc
flds
sbb
and
xchg
pop
and
bound
loopne
fistl
push
add
push
mov
cmpsl
fcoms
jecxz
jns
add
xor
je
in
cmc
mov
inc
nop
andl
push
sbb
ss
mov
or
or
and
jg
jmp
mov
stos
gs
in
dec
cmc
fnstsw
arpl
xchg
push
movsb
call
popa
insb
add
push
fmuls
cwtl
cwtl
test
and
call
stos
sub
xchg
mov
jg
sbb
inc
pop
dec
aam
lcall
sub
dec
cmp
dec
fdivrs
rorb
xlat
decl
mov
es
xor
mov
dec
add
in
mov
mov
pop
outsb
testb
popa
mov
xor
jmp
inc
pop
cmp
and
leave
imul
rcrl
call
lock
inc
push
outsl
outsb
sub
fisubrl
aas
push
mov
and
xorb
jbe
xchg
push
call
mov
or
sub
pop
cmp
mov
inc
dec
bound
enter
imul
jnp
xor
repnz
cmp
adc
mov
decl
fistpll
adc
push
ret
or
jp
js
inc
sahf
pop
imul
mov
inc
adc
sub
push
pushl
lods
clc
push
cmp
xchg
call
bound
mov
je
decl
sub
cmpsl
xchg
rclb
enter
or
dec
jmp
aam
dec
dec
mov
pop
mov
inc
outsb
inc
aas
dec
icebp
call
sbb
push
sub
subl
loopne
std
jno
push
mov
fiadds
arpl
and
call
mov
or
iret
fdiv
adc
filds
sub
adc
jge
cmpsb
ljmp
fsubl
xor
inc
loop
sahf
sub
faddp
jno
ficompl
outsl
mov
mov
jmp
push
ja
loopne
add
mov
das
sbb
ret
mov
or
out
ud0
addb
int3
cmc
cld
pop
mov
push
ljmp
inc
cmp
inc
jo
sahf
jle
dec
cmp
cmp
lock
jecxz
xor
dec
or
xchg
sub
push
cld
mov
cmp
pop
cld
ljmp
inc
mov
es
or
mov
fwait
inc
cmc
add
pop
dec
xchg
inc
outsl
push
mov
in
xchg
dec
adc
ja
xor
lock
jns
inc
mov
incl
aad
pop
mov
add
dec
lcall
sbb
dec
pop
push
adc
ss
movq
icebp
push
and
pop
xlat
adc
insb
and
jp
dec
sbb
xlat
and
or
or
ret
clc
fildll
push
in
lahf
jo
leave
push
and
cmp
pop
fwait
adc
dec
sbb
and
es
jecxz
jb
in
outsl
sarl
ljmp
scas
jecxz
mov
jbe
fcmovnb
test
xchg
sub
or
mov
sar
sarl
mov
fwait
inc
gs
es
jb
imul
scas
jbe
inc
lods
mov
xor
fildll
insb
scas
sbb
sub
sbb
outsl
call
mov
mov
ja
stc
outsb
cltd
insl
fimull
rcl
hlt
or
mov
and
dec
or
mov
in
test
cmpsl
xchg
lahf
xor
add
decl
ret
lods
cltd
or
or
mov
adcl
jmp
jmp
popa
mov
xchg
xor
mov
nop
and
cli
test
sar
sub
in
lock
sub
pop
sub
pop
mov
mov
cmpsl
ficoms
dec
mov
jmp
mov
jl
cltd
push
xor
xor
cmc
pushf
stc
jb
jp
test
sar
jmp
sub
jp
pop
loop
fs
das
js
jp
popa
push
repnz
rcr
pushl
rorb
adc
mov
and
fiaddl
inc
mov
and
incl
insb
cmp
mov
idivb
xchg
inc
cmp
cmp
mov
mov
icebp
jae
adc
iret
sub
inc
int3
sbbb
into
mov
lock
mov
cmpl
clc
sahf
gs
aam
adc
pushl
std
addr16
jo
pop
pushf
outsl
dec
dec
insb
and
js
aam
pop
cmp
stos
cmpsb
call
mov
mov
inc
ret
add
mov
xchg
cmp
inc
loopne
jl
in
repz
pushf
imulb
loope
push
rclb
rcl
arpl
loop
pushf
mov
adc
icebp
scas
inc
xchg
sbb
icebp
push
mov
in
push
cmp
js
sbb
mov
mov
and
cli
or
mov
xchg
push
fcmovne
das
out
decb
incl
je
loopne
stos
sbb
enter
inc
xchg
or
jno
xchg
jmp
push
inc
cmp
bound
add
rorl
push
xchg
decl
rorb
sbb
daa
dec
scas
popf
cwtl
sbb
cmc
cwtl
jecxz
jge
in
push
es
aad
icebp
jmp
xor
pop
mov
cli
repz
call
cltd
shlb
je
ss
lret
lcall
sub
scas
cmpsl
ja
ds
call
dec
adc
shld
flds
insb
call
adc
call
jle
je
aam
das
test
sbb
and
incl
cld
xchg
inc
jne
push
and
and
and
inc
xlat
cltd
pop
cltd
inc
pop
sbb
ljmp
notl
and
xor
sub
fwait
movb
mov
imul
mov
sub
jge
xor
lcall
mov
xor
mov
mov
loopne
mull
les
icebp
pushl
lret
call
pop
negb
repnz
cmovp
stos
lcall
push
jg
mov
inc
cltd
and
add
mov
psubw
ljmp
mov
and
push
repnz
fstpt
aas
in
test
push
xchg
ds
xchg
icebp
push
mov
sub
ljmp
cli
mov
sbb
lret
or
push
stos
das
push
icebp
mov
addr16
adc
add
decl
inc
sbb
das
lret
jne
push
subl
push
mov
aad
mov
ljmp
das
sub
fcomip
scas
add
add
je
pop
imul
cmc
adc
add
mov
aam
cmp
daa
sub
fisubrl
je
lods
sbb
ljmp
rol
mov
popf
das
sbb
jl
push
in
das
hlt
cmp
rol
jno
rcrb
bound
movsl
adc
xchg
push
call
mov
test
add
rolw
inc
in
or
adc
or
jg
mov
dec
push
mov
sub
or
sub
data16
sbb
call
sub
mov
push
dec
test
adc
and
decl
es
ficoml
clc
jg
fdivrl
rcll
xor
sbb
loop
sbb
push
ljmp
pop
sbb
sub
xchg
add
popa
dec
loop
out
sbb
cmp
xchg
ds
mov
and
cmpsl
xor
repz
xor
jp
sbb
cmp
test
ljmp
movsl
lret
cmpsl
push
subb
xor
cld
lret
imulb
adc
mov
push
jo
fnstcw
cmp
icebp
mov
outsb
sbb
lock
dec
loope
pop
or
lods
loop
pushl
xchg
ss
imul
popf
mov
inc
cmpsb
ds
jge
push
sub
cli
inc
jg
call
adc
cwtl
mov
ret
fstl
and
jb
test
dec
fnstenv
ret
mov
fwait
push
and
xchg
cs
loope
clc
cmpsb
pushl
push
xchg
dec
dec
sahf
jmp
push
lahf
cmpsb
dec
loop
ljmp
lods
inc
adc
loope
pushf
mov
mov
mov
movsl
aaa
adc
sbb
decl
pop
pop
mov
es
xchg
insl
xchg
lock
pop
outsl
and
popa
pop
dec
int3
jnp
std
inc
push
pop
lahf
lahf
push
popf
inc
push
sbb
sub
fwait
xchg
cld
jns
jne
ljmp
stos
dec
push
mov
out
xor
cmpsl
mov
cmp
clc
pop
lock
sub
dec
mov
or
iret
mov
ljmp
xchg
jnp,pt
pusha
lock
in
mov
or
stos
leave
dec
fistpll
push
add
scas
and
call
push
push
cmp
les
mov
call
loop
out
test
pushf
adc
jle
and
hlt
ljmp
add
mov
loop
add
insb
mov
push
sbb
sbb
ljmp
js
or
insb
add
jg
jmp
adc
or
mulb
shll
outsl
dec
in
adc
inc
push
aaa
push
jne
pop
ja
jmp
adc
int
dec
loope
jns
and
push
pop
jp
fwait
mov
je
inc
pop
jnp
call
add
fdivs
loope
push
roll
popl
loop
call
mov
and
test
xchg
dec
mov
adc
push
sbb
jno
pop
unpcklps
in
adc
or
inc
xchg
fs
jns
adc
ljmp
cmpsl
outsl
dec
mov
ja
cmp
ja
cmpsb
dec
divb
nop
pop
pop
mov
mov
call
out
sarl
xchg
add
incl
jo
sub
arpl
pop
loopne
jg
mov
mov
outsl
mov
call
int
stc
mov
push
pusha
fcmovb
insb
dec
jno
pop
xchg
add
cmc
ja
repnz
ljmp
pop
mov
aas
negl
inc
push
mov
inc
sbb
or
mov
jo
mov
lcall
lcall
or
fidivrs
and
xchg
cmpsl
mov
inc
or
pop
mov
jl
imul
sar
mov
add
test
lods
fmuls
sub
cmp
mov
sbb
cmpsb
jo
test
cmp
mov
adc
cmp
sub
sbb
push
cmp
mov
leave
lea
mov
adc
mov
insl
push
pusha
pop
fcoml
mov
test
add
das
cmp
jg
inc
mov
mov
jle
dec
add
dec
sub
repz
jmp
mov
and
inc
sbb
sti
movsb
mov
or
mov
das
mov
jnp
or
push
jg
bound
fucomi
inc
int3
pop
mov
sbb
jl
or
xorl
gs
mov
xor
cmp
xor
rcr
pop
jg
dec
sub
cmp
xchg
out
outsb
out
pop
mov
scas
add
or
ja
fisttpll
ja
cld
sarb
or
lods
mov
and
jg
xchg
push
in
inc
xchg
lock
xchg
outsl
in
xchg
enter
insb
sbb
mov
xchg
cltd
sbb
sub
loopne
ljmp
rorb
fldt
mov
or
push
jle
cmp
dec
or
dec
mov
dec
sbb
ss
das
xchg
xor
lret
dec
xchg
clc
sub
arpl
sarl
ljmp
cmp
subb
xor
stos
ljmp
xchg
pushl
pushf
daa
jne
push
enter
sub
sub
mov
fidivrl
dec
leave
std
push
daa
sbb
repz
sbb
ljmp
call
adc
ret
cld
push
cld
or
xchg
adc
and
mov
das
and
xchg
addr16
mov
ljmp
das
dec
scas
dec
xchg
add
test
pop
push
imul
pminsw
scas
push
in
icebp
mov
imul
xchg
in
jle
mov
or
inc
pop
out
fcompl
call
rcl
or
xor
push
jg
mov
int3
lods
in
testb
pop
decl
mov
loop
iret
jmp
in
aaa
cmpl
fs
lret
inc
push
jo
mov
lea
mov
pop
inc
xchg
loope
addr16
shll
cwtl
push
push
inc
and
cmc
cmp
adc
jmp
push
fadds
pop
data16
call
or
adc
adc
subl
imul
cmpsb
lods
or
jmp
lds
outsb
add
adc
clc
das
xor
xchg
jg
pop
cmp
ret
fwait
scas
lret
adc
decl
cmp
icebp
shll
jp
lret
dec
xchg
adc
push
mov
fwait
xor
mov
sahf
neg
mov
ljmp
cwtl
adc
xchg
dec
pop
jp
push
incl
pop
sub
mov
add
mov
pop
dec
or
pop
xor
fsubl
out
dec
mov
movb
push
sub
dec
sbb
pop
mov
or
cmp
jmp
daa
cmp
imul
stos
insb
dec
repnz
inc
cwtl
lods
mov
mov
ret
into
adc
or
popa
dec
fdivl
imulb
xor
jle
push
and
mov
inc
pop
sub
icebp
pmullw
jne
or
js
or
lcall
stc
test
jno
jecxz
pop
cmp
xchg
fdivr
xchg
pushf
or
incl
sbb
push
push
and
imul
pop
push
movsb
push
push
adc
fcoml
lea
xchg
pushl
std
ds
jne
pop
jmp
mov
jno
ja
adcl
cmp
ret
lcall
popl
xor
fs
sahf
aas
sahf
loope
adc
addr16
mov
fwait
xchg
pop
aas
cli
or
clc
ljmp
int
mov
mov
adc
mul
lds
hlt
pop
bound
and
fbld
out
sbb
stos
mov
mov
push
popf
cli
mov
pop
push
cmp
clc
cmp
in
jno
test
xor
loopne
xchg
mov
push
sbb
or
clc
shrl
pop
movl
jmp
bound
mov
jnp
sbb
inc
daa
insb
sub
cwtl
icebp
inc
jecxz
sar
outsl
loopne
fs
loopne
add
lcall
lcall
xchg
cwtl
ja
cmpsb
xchg
inc
inc
data16
or
adc
push
inc
in
pushf
pusha
xor
imul
insb
es
jmp
pop
ret
icebp
push
fs
dec
add
and
enter
repnz
jl
xchg
xor
test
scas
pushl
xor
loope
enter
xchg
mov
xorb
and
sub
mov
push
lods
lods
hlt
or
roll
pop
cltd
fisttps
jmp
cmc
fistl
mov
push
addr16
cs
out
arpl
mov
adc
xchg
or
idiv
decl
cmp
int
cmpb
aas
jg
out
inc
push
cmpl
push
loop
pop
adc
xchg
adc
mov
mov
jle
mov
jb
int3
cmpb
ljmp
mov
loop
jnp
movb
jnp
sub
pop
or
push
ret
add
pop
test
int3
sahf
loop
loopne
mov
loop
or
repnz
pop
and
int
sar
mov
ret
bound
out
ret
mov
ss
fwait
sbb
sahf
pushl
pop
movsb
jle
cmp
lea
dec
and
xchg
fsubs
add
incl
or
and
mov
push
push
dec
sub
mov
dec
inc
adc
idiv
jg
incb
push
loop
dec
add
sti
xor
push
pusha
mov
mov
mov
adc
pop
jg
push
adc
inc
loopne
test
xor
and
out
ljmp
push
notl
cmp
ds
popf
imul
jg
out
ds
push
and
jo
ds
add
std
xchg
lods
in
fcom
push
ja
xchg
dec
movsb
push
incl
data16
sbb
cld
clc
movsb
xor
or
mov
and
aam
jl
mov
mov
pusha
jg
or
push
push
sub
push
loopne
rolb
clc
psrlq
inc
adc
pop
pop
inc
aad
ljmp
inc
jo
stos
sbb
mov
jge
mov
aaa
jp
sub
sahf
mov
jl
and
xchg
xor
jl
in
adc
fdivr
incl
arpl
pop
hlt
push
lds
inc
mov
xchg
mov
sahf
add
mov
decl
sti
movsb
cmpl
jb
lcall
dec
mov
pushf
add
sti
adc
xchg
mov
sar
mov
in
jb,pt
out
inc
lahf
cmp
pop
bound
ljmp
sub
insl
sbb
jno
adc
outsl
pushf
cmp
dec
loop
sub
dec
call
sti
sti
xor
ss
cmc
les
pop
addl
push
or
mov
or
jl
pushf
pop
mov
sub
popf
aad
imul
jae
aam
nop
jecxz
pop
mov
pushl
jmp
sbb
sub
jle
inc
mov
hlt
imul
arpl
shl
cmp
enter
int
and
push
ds
or
push
dec
repz
out
mov
inc
stos
push
neg
aam
pushl
xchg
andl
xor
or
popf
push
ds
arpl
cli
xor
cld
jns
mov
pop
into
cmpsl
or
fcmovb
adc
aam
in
decl
push
mov
inc
in
mov
mov
xor
lea
outsl
xchg
std
lcall
inc
aas
imul
jno
jp
lds
lods
idiv
jmp
pop
mov
inc
mov
mov
pop
pusha
and
sbb
mov
sti
sbb
pop
dec
cmpsb
push
dec
xor
sub
cs
cmp
sbb
jmp
sbb
outsl
xchg
mov
mov
pop
jnp
pop
mov
xor
incl
sub
pop
rolb
push
in
leave
pop
mov
mov
xchg
add
xchg
subl
fsubrl
adc
cmp
jg
mov
movsl
daa
jl
aaa
fcomp
inc
mov
enter
lret
sbb
sarl
jae
cwtl
sub
pop
adc
pusha
jl
mov
ljmp
mov
pop
mov
imul
bound
ljmp
jmp
mov
mov
cmp
dec
jmp
xlat
add
pop
rclb
jmp
out
cmp
or
insl
ror
arpl
push
cmp
xor
sub
or
lret
push
xchg
lcall
lods
jmp
fisttpl
rorb
sbb
sahf
sbb
stc
inc
inc
sub
leave
xchg
dec
inc
pop
stos
jns
xchg
mov
or
negl
mov
test
test
jmp
mov
incl
mov
and
rcrl
movsl
pop
jno
sub
mov
cmpsb
mov
xor
out
imul
pop
into
ljmp
fldpi
in
cmp
orb
call
lret
dec
loopne
addr16
adc
sar
dec
cmc
mov
jp
cs
mov
call
ror
repz
jns
cmpsl
sbb
dec
incl
stc
mov
cmc
pop
jno
sahf
sti
and
lock
stos
in
lcall
mov
xor
roll
nop
jae
xchg
cli
ja
mov
inc
adc
rcl
addb
adc
mov
out
in
cs
push
mov
cli
push
aam
jp
push
pusha
or
imulb
outsb
xchg
mov
jae
xor
sbb
jne
xor
mov
daa
outsb
jl
es
repnz
ljmp
xor
add
mov
jns
lea
test
fidivl
mov
cmp
lret
add
add
xor
aaa
fwait
cli
cs
loopne
or
xchg
lcall
mov
add
push
xchg
jge
xor
int3
jl
sbb
popa
cmp
jmp
mov
int
xor
ret
out
mov
or
lret
pop
or
sahf
pushl
fs
inc
inc
lock
sarl
and
adc
pop
cmp
pusha
pushf
fs
pop
call
cmp
cld
add
sarl
dec
sbb
pop
mov
mov
dec
fists
xlat
imul
sub
jg
xor
mov
stos
xchg
xlat
xchg
xchg
cmc
idiv
mov
inc
jb
cmp
call
shrb
in
sub
orl
push
addb
lds
decb
hlt
sar
cmp
mov
adc
in
cmp
ret
ret
rorl
bound
mov
or
icebp
ljmp
mov
mov
jne
sub
jns
stos
dec
and
mov
jg
fucom
lods
outsl
clc
decl
bound
push
fdivrs
pusha
fsubs
outsb
dec
movsl
insb
adc
mov
cltd
sbbb
pop
sbb
ljmp
sar
decw
mov
hlt
xchg
lcall
subb
dec
pop
fcomp
adc
aam
push
mulb
movsl
mov
jg
fldcw
fcomip
nop
cld
sub
xchg
xor
test
cmp
pop
fs
out
cmc
xchg
cmp
outsl
xor
incl
xor
hlt
mov
lods
mov
ret
dec
sbb
jmp
pushf
daa
mov
fcomip
incl
sbb
insl
pop
mov
mov
add
mov
enter
dec
into
xchg
lcall
sbb
sbb
clc
cli
int
xlat
lret
push
sti
pop
sub
movsl
mov
sahf
sub
loope
fcmovnb
dec
ss
dec
push
arpl
push
adc
jle
jo
mov
ret
mov
rcr
sub
pop
scas
clc
incl
mov
jno
out
jno
or
xchg
mov
jle
cmpsl
add
test
xor
xor
xchg
jae
pop
xor
lods
and
data16
and
repnz
clc
pushl
hlt
jmp
cmpl
jbe
mov
leave
stc
jb
lcall
iret
push
mov
sbb
popf
mov
cmp
mov
lock
hlt
xchg
mov
cmp
xchg
lock
jb
add
decl
sahf
xchg
inc
jle
cmc
sti
hlt
mov
aam
xor
mov
insb
loope
pusha
fdiv
pushl
xor
ja
test
sti
mov
imul
insl
dec
test
or
loopne
push
testb
xchg
jecxz
sbb
pushl
loopne
dec
fwait
ret
out
push
or
shll
jbe
insl
mov
mov
lret
jmp
inc
rcrb
sbb
cwtl
xor
bnd
sbb
pop
or
das
sahf
dec
andl
decl
add
in
push
mov
push
dec
imul
jle
ljmp
repnz
stos
bound
cmp
cmpsb
or
xor
int
std
in
int3
filds
jmp
imul
and
inc
out
xor
ror
fistpl
add
cmpsl
mov
in
ds
and
mov
jmp
ljmp
aas
push
xchg
mov
mov
mov
add
push
ficompl
sti
mov
popf
insb
dec
imul
jno
movsb
pop
ret
icebp
inc
inc
jo
inc
sub
mov
std
pushl
cmp
mov
testl
fs
jg
loope
xlat
or
cli
push
cmp
dec
andb
mov
xor
mov
ret
popf
gs
sbb
icebp
mov
aas
pop
lret
sahf
stc
xor
pop
cmp
stos
or
icebp
daa
mov
outsl
push
xor
clc
decl
push
adc
jle
std
testl
jecxz
mov
leave
xchg
ss
sbb
mov
cmc
sub
call
jbe
iret
in
jg
jmp
aas
int3
sub
pushf
stc
lock
mov
mov
ss
push
dec
ljmp
cmp
xor
das
push
shrb
das
pop
mov
mov
inc
adcl
cmp
pop
pop
adc
je
mov
dec
fistpll
ficoml
aaa
std
xlat
out
scas
mov
andb
mov
mov
xor
out
inc
lcall
adc
ret
ret
jne
or
decl
in
rcll
mov
push
inc
std
cmp
jbe
roll
add
imul
jae
dec
out
xor
shl
xor
insl
mov
cmp
and
sub
loop
fldl
push
xor
call
cmp
jae
pop
setb
add
dec
xchg
ja
jge
ds
mov
sbb
push
call
or
push
xor
inc
das
sarb
insb
push
and
or
call
movsb
push
or
sub
test
aas
stos
mov
enter
pop
out
jmp
mov
add
test
ret
pushl
lods
bound
negb
add
call
jg
xchg
in
or
sub
stc
out
mov
mov
loop
in
stc
iret
mov
dec
cld
sub
cmpsb
cltd
push
out
jne
idiv
incl
jp
aas
jo
jl
cmp
fldl
test
cmp
mov
out
test
cmp
dec
nop
mov
fsubrs
lcall
ret
sbb
cld
mov
xchg
push
mov
aaa
imul
in
jmp
cmp
test
iret
lods
jle,pt
sbb
lods
repz
push
int
es
ljmp
frstor
mov
mov
int
nop
xchg
and
xor
call
popa
mov
adc
mov
cs
mov
mov
jmp
cmp
shll
mov
sbb
or
sub
and
cmp
and
sbb
mov
cmpsb
adc
loopne
push
pop
pop
cli
pop
lret
pop
andb
rol
sbb
inc
add
lcall
jbe
fucom
inc
bound
jns
mull
inc
xorps
jmp
js
lock
inc
cmp
dec
jl
in
jge
ljmp
push
cmpsl
or
and
sub
inc
fcomip
jg
shlb
mov
subl
mul
or
decl
push
jg
addb
inc
test
dec
lret
xor
pop
lret
and
icebp
pushf
aaa
mov
fistpl
jno
shll
fdivrl
icebp
fwait
outsb
cmovnp
lcall
add
jmp
xor
mov
xchg
jne
ja
sub
adc
and
es
push
dec
lods
inc
adc
in
adc
jle
in
xor
outsl
adc
sub
fs
add
ljmp
xor
sti
in
cmp
jl
sbb
test
or
dec
testl
xchg
add
xchg
cld
pop
and
mov
adc
repz
std
mov
decl
sbb
inc
test
push
pop
mov
stos
mov
aas
add
mov
mov
xchg
push
mov
or
add
dec
cli
pop
inc
clc
jmp
add
rcll
mov
pop
cmc
lret
and
fstpt
or
js
push
mov
insb
pop
xor
out
push
mov
cmp
out
or
sbb
js
inc
and
sahf
repz
add
pushl
out
iret
std
mov
push
jo
mov
xor
ja,pn
hlt
dec
test
mov
cli
filds
call
jbe
fs
js
cmp
hlt
mov
pop
enter
hlt
push
sub
dec
mov
stc
out
mov
sahf
loopne
mov
orl
mull
lock
xchg
ljmp
call
push
fs
sbb
mov
sarb
mov
not
imul
shll
stos
in
ret
sbb
mov
mov
pop
mov
stc
or
das
mov
lcall
clc
out
lcall
fwait
add
idivl
repz
clc
push
jg
ljmp
mov
jle
pop
clc
das
mov
and
fs
pushl
mov
data16
cltd
ror
mov
mov
pop
mov
daa
lret
pop
push
cld
push
movsl
dec
dec
jb
cmp
mov
mov
adc
inc
xor
mov
sar
fcompl
push
rcrb
mov
test
dec
mov
sti
inc
mov
push
inc
out
daa
mov
jge
int3
in
or
push
mov
xchg
adc
outsl
cli
aas
jnp
testb
pushf
iret
xchg
sub
lods
repnz
or
push
xchg
fldcw
cld
leave
cmc
adc
loop
jnp
dec
cmpsb
xchg
lods
addr16
test
mov
scas
cmpsb
loope
cmpsb
ret
mov
pusha
sar
call
mov
lods
pop
sub
in
sahf
mov
push
xchg
mov
mov
cmpsb
call
mov
shll
push
pop
push
push
addl
mov
sar
lcall
pop
xchg
or
or
and
push
test
inc
mov
adc
sbb
pop
pop
add
out
jo
popa
call
sbb
movsl
es
sbb
decl
xchg
inc
mov
into
cwtl
leave
mov
mov
sub
or
lcall
jle
mov
cmp
add
add
je,pn
int
xchg
lcall
faddl
add
jg
mov
ss
fwait
push
push
or
aad
cmp
lcall
int3
jg
mov
mov
push
adc
lock
repnz
rol
jmp
and
insl
cmp
cwtl
push
aas
jle
sub
negb
mov
adc
jmp
shlb
dec
inc
fwait
or
gs
adc
pop
lock
or
movb
insb
pop
cld
call
rcll
rcll
jno
cmp
stos
popf
aam
mov
and
lret
arpl
push
inc
test
add
pop
mov
mov
pop
mov
dec
inc
add
xorb
movsb
jne
fsubp
and
movsb
lock
pusha
cld
lcall
aaa
popf
ss
gs
scas
out
loope
mov
mov
jge
rcrb
or
xor
lahf
popa
out
loope
mov
pushl
mov
push
aas
pusha
sub
sub
sbb
jmp
mov
cld
jmp
repnz
stc
adc
mov
data16
push
xlat
mulb
in
sub
call
and
cld
inc
out
sahf
cmp
or
das
pop
mov
inc
push
in
push
mov
sahf
xlat
mov
std
add
cld
shll
shll
lcall
aaa
jnp
enter
dec
jmp
ret
repz
repz
int3
fsubl
pushl
lock
jmp
cmpsl
insb
into
repnz
scas
add
stc
gs
int3
pop
fldl2t
mov
xchg
das
repz
imul
jge
or
hlt
mov
cltd
fstpl
test
and
hlt
ljmp
adc
and
mov
scas
ljmp
in
or
popa
into
cmp
fxch
fidivrl
dec
cmc
aas
movsl
xchg
or
test
cltd
push
pop
adc
sti
decl
lock
shl
scas
mov
sar
insb
push
adc
or
and
pushl
mov
pop
insl
test
add
test
push
les
mov
aam
pop
imul
mov
incl
and
adc
or
jae
push
pop
stos
sbb
and
shrl
jmp
cmpsl
pop
pop
dec
mov
faddl
faddl
lock
or
ljmp
jnp
call
or
sar
mov
out
je
lret
std
cltd
push
fisubrs
call
inc
lahf
push
mov
cltd
push
sti
lods
or
dec
cwtl
test
hlt
ljmp
jae
out
popa
div
mov
mov
mov
outsl
out
clc
fbstp
imul
lret
stos
ret
in
adc
xchg
jl
fsts
incl
mov
push
xchg
daa
mov
pop
lods
xchg
sbb
add
fildll
push
stc
mov
xor
test
mov
cli
aas
and
mov
out
enter
sbb
out
inc
ss
and
sub
inc
push
aad
call
sub
popa
jmp
and
xchg
pop
mov
cwtl
outsl
xchg
push
jmp
xlat
add
setno
cmp
cmp
lret
xchg
lahf
lods
mov
pop
outsb
cmc
decl
pop
adc
pop
lods
inc
ret
es
cli
mov
in
insb
pop
mov
aam
es
stos
stos
fs
in
mov
sub
dec
je
fwait
lret
shlb
lret
pushl
push
jl
cmp
push
roll
push
fs
push
out
imul
jl
call
push
inc
and
cld
pop
pusha
sbb
fsubs
fists
lds
cli
mov
clc
jmp
inc
fldenv
pusha
imul
out
pop
mov
pop
out
push
clc
addl
sub
pop
mov
fstpl
adc
or
ljmp
sbb
adc
xchg
add
pushl
mov
ficoml
ret
ret
leave
mov
push
push
ficoms
mov
lahf
mov
cltd
jmp
movsl
mov
das
leave
test
inc
mov
out
mov
sub
sub
push
decl
aad
sbb
aam
inc
inc
jb
out
out
stos
jge
xor
test
add
pop
repz
cmp
sub
call
pop
std
dec
jge
mov
mov
incl
mov
lock
scas
cmp
ret
fstl
lds
dec
pop
clc
lcall
cltd
mov
push
fmull
pop
fcmovnb
cld
jb
incl
cli
ud0
mov
in
lea
push
mov
icebp
outsl
pushf
mov
sub
dec
mov
cmp
cld
dec
mov
jl
xor
lret
daa
mov
out
cwtl
nop
mov
insl
xlat
push
jmp
mov
cmpb
push
pop
pop
add
inc
sub
outsb
gs
push
mov
jae
scas
xor
pop
aam
xor
arpl
cmpsb
xor
cmp
jecxz
mov
lea
hlt
js
cmpl
or
mov
pushw
pop
mov
dec
out
scas
lcall
lcall
repz
out
mov
cli
push
pop
or
push
xchg
xor
push
imul
jecxz
mov
jmp
sbb
mov
cld
and
orl
pusha
jg
loop
or
pop
mov
mov
jmp
fs
sbb
add
mov
in
cmc
and
dec
stos
jne
pop
imul
xchg
pop
mov
adc
jmp
mov
std
sub
jnp
mov
call
jge
clc
sub
iret
lock
jge
cld
dec
dec
aaa
push
lcall
cld
xor
leave
ret
int
insb
scas
pop
sub
xchg
and
sub
fisttps
push
mov
pop
jle
clc
ss
int3
dec
in
adc
dec
sbb
jl
sbb
call
andb
or
xor
adc
ret
and
clc
jg
xchg
cmp
pushf
ss
mov
sub
mov
cmc
call
mov
xchg
push
add
fidivl
push
addr16
dec
es
and
lcall
int3
mov
cmpsl
xorb
fcmovne
mov
incl
adc
xor
lcall
repnz
mov
push
cli
insl
sbb
adc
and
fxch
js
hlt
subps
scas
jge
lcall
cmp
aaa
lock
stos
sub
jmp
loopne
fcomps
das
test
jg
sub
adc
call
addr16
addr16
sub
mov
dec
mov
sar
pop
inc
sbb
lds
in
cmp
divb
sahf
aaa
cld
pushl
popa
add
push
jns
push
fsub
pop
inc
push
js
imul
call
mov
por
dec
sub
idivb
fs
lret
push
push
xor
cmpsb
fbstp
push
mov
dec
cmp
sti
rolb
and
cmpsl
cmpsb
das
clc
ljmp
add
repz
dec
in
push
negl
idivl
dec
loop
dec
cmp
jg
adc
in
mov
xor
xchg
jp
out
and
and
call
jmp
mov
out
jp
call
insb
or
mov
push
add
pop
cs
push
int
pushl
add
adc
icebp
pop
scas
repz
aam
fistl
orl
jge
jmp
cmpsl
mov
pushl
lahf
mov
cmp
pop
or
subl
int
rorb
jg
out
and
movsb
imul
ret
lret
sub
pushl
mov
fsubs
bound
fsubrl
add
sub
inc
incl
jge
cmpsl
cltd
xchg
inc
sub
ss
xor
lods
sbb
loopne
jmp
icebp
ljmp
inc
cwtl
es
lock
add
out
push
lret
loop
mov
push
xor
mov
xchg
bound
mov
dec
push
push
dec
sub
push
lock
xchg
sbb
jmp
or
xchg
rorl
inc
sbbb
cmpsb
ret
les
inc
loop
cld
xor
jmp
rcr
or
push
add
jb
sub
inc
popa
xchg
add
movsb
lcall
popa
push
adc
mov
std
addb
mov
fwait
ret
push
adc
pop
xorl
iret
stos
sarb
xchg
ljmp
aad
int3
int
repnz
fidivl
decl
cmp
or
sbb
or
pop
push
scas
test
popf
test
jmp
jne
stos
jp
xorb
popf
mov
jae
adc
je
push
add
out
or
bound
sahf
aam
into
push
fnsave
xor
mov
fldenv
or
and
aad
jae
inc
or
push
or
xlat
or
inc
cmpsl
incl
call
jle
bound
push
add
lret
cmp
inc
scas
repnz
clc
aam
leave
dec
xchg
rclb
cmp
leave
mov
inc
mull
ss
orb
adc
lcall
push
jmp
rcrl
jmp
sbb
nop
imul
decl
dec
xor
int3
outsb
test
imul
pmaddwd
rcll
mov
push
adc
shr
bound
ret
inc
pop
push
ljmp
insl
add
dec
addb
test
repz
jmp
mov
js
rolb
cmc
decl
dec
sbb
mov
sub
mov
and
testb
mov
loopne
daa
adc
adc
or
fidivrl
jg
push
xchg
and
xchg
lahf
repnz
push
into
outsb
adc
cs
bound
cmp
xor
and
xor
sub
test
dec
out
inc
jbe
aas
into
enter
shr
lcall
cmp
in
sub
or
test
popa
gs
ret
arpl
cmp
add
ljmp
push
loopne
pop
mov
push
and
inc
aas
sbb
data16
sbb
mov
push
or
lret
push
nop
out
insb
mov
lods
ja
lcall
inc
push
outsb
bound
or
jl
aam
out
lock
incl
jmp
mov
ljmp
out
jns
dec
subb
std
jg
inc
lahf
loopne
mov
scas
fistps
sub
mov
pusha
clc
into
inc
ficompl
push
arpl
incl
adc
add
js,pt
stos
dec
lods
push
or
dec
push
icebp
adc
push
sub
jmp
jg
fsubs
fists
lock
sbb
fldcw
inc
mov
xchg
pop
mov
inc
mov
sahf
shlb
mov
jne
lcall
jg
pushl
or
mov
out
mov
aaa
jle
jecxz
insl
js
unpcklps
subb
mov
int3
sbb
lds
testb
cmp
lret
xor
outsb
or
mov
or
std
push
jg
loope
inc
and
movsl
mov
push
cmp
decl
into
mov
out
mov
sub
les
les
cltd
stc
stos
dec
decl
push
xchg
pusha
jne
mov
sbb
jge
out
insb
cmp
call
push
cmp
lea
cmpsb
cmp
mov
aad
out
repnz
xchg
pusha
cli
jg
and
pop
xchg
jecxz
imul
leave
dec
mov
xchg
movntq
push
out
call
add
adc
push
test
jae
xor
fists
jp
loopne
pushl
pop
ret
or
fstps
inc
lea
enter
push
ficoml
gs
decl
fst
jb
jnp
fisubrl
and
dec
out
pop
pop
gs
lcall
out
jp
and
cmp
sub
sub
add
cmpsl
xchg
sbb
pop
popa
sbb
and
adc
or
cmc
lcall
inc
lods
jp
mov
cwtl
leave
insl
out
add
mov
push
je
out
clc
fbstp
push
loop
jg
or
fdivrl
mov
mov
pop
push
test
inc
rolb
rcrl
lea
jg
scas
insl
xchg
pop
lods
daa
add
xorl
inc
mov
mov
fs
ljmp
fisubs
movsl
push
mov
scas
pop
mov
mull
jg
lds
push
lock
pushw
clc
xor
xchg
push
in
enter
cmc
mov
rep
pop
pop
ret
mov
lret
jle
out
outsl
bound
dec
ljmp
xchg
xchg
clc
call
je
push
adc
ljmp
call
mov
divb
ljmp
lock
ja
das
stos
movl
loop
popa
sub
adc
test
lret
adc
jmp
xchg
inc
and
and
mov
or
fidivl
dec
push
aas
add
decl
mov
leave
ds
jge
ffreep
ja
cmp
mov
les
mov
mov
jp
cs
or
push
pop
and
incl
cmpb
lahf
dec
mov
cli
xorl
pop
popf
pop
mov
lcall
cmove
loopne
mov
divl
iret
aaa
ficompl
cmc
repz
jbe
sar
and
incl
push
ret
adc
sub
decl
mov
dec
cli
adc
repnz
movb
or
cmp
lea
mov
inc
out
xor
push
push
stos
cmp
and
cmp
jbe
call
call
popa
mov
add
sbb
mov
adc
pop
xor
insl
jg
daa
adc
ret
test
jmp
xchg
mov
push
push
mov
cld
lock
inc
mov
and
cmp
gs
out
ss
or
mov
jmp
inc
in
fistpl
scas
je
fisubrl
insl
fidivs
pushl
in
fs
sbb
pusha
cmp
mov
aad
pop
sbb
call
xchg
xchg
incl
inc
cli
adc
sub
sbb
lods
pop
push
bound
in
push
push
fistpll
push
ja
mov
and
gs
decl
and
je
dec
add
push
lds
xchg
in
popa
lahf
adc
jmp
mov
sbb
inc
push
cli
decl
fcomps
pop
stc
outsb
inc
adc
pop
pop
ja
test
inc
js
jnp
pop
cmc
outsl
mov
mov
orb
add
test
adc
mov
jg
movsl
inc
andb
jmp
sbb
decl
or
xor
xlat
jbe
adcb
lret
pop
out
mov
test
decl
dec
dec
inc
jmp
rolb
in
sub
jno
sarl
int
push
xor
hlt
decl
popf
sti
pop
or
adc
bound
inc
xor
pusha
mov
push
pop
xor
ljmp
cmp
jns
arpl
adc
ljmp
rcrl
xchg
int
in
jp
adc
inc
lock
jg
mov
leave
dec
jle
cmp
aam
mov
inc
addr16
dec
jmp
call
jge
mov
scas
mov
inc
call
inc
pop
rep
push
testl
mov
inc
jmp
sbb
xchg
and
jo
cltd
scas
stos
xor
xor
sub
decl
inc
decl
fs
and
and
mov
cwtl
mov
clc
inc
in
jmp
mov
inc
dec
aad
jecxz
bound
pushf
xor
cmp
xorb
push
cmp
lea
adc
movsb
push
or
mov
ljmp
cmpsl
xor
xchg
mov
adc
insb
pop
mov
call
jne
mov
in
ds
jle
jae
out
sub
jle
mov
mov
mov
call
cmpsl
lods
inc
push
lods
push
loope
mov
iret
xor
out
adc
push
mov
inc
notb
push
incl
add
pop
mov
data16
add
daa
pop
pop
xchg
stc
mov
push
lock
jmp
inc
cld
or
push
jns
ret
cmp
lret
dec
jle
movsl
push
adc
sub
mov
mov
lcall
scas
test
jnp
cmpsl
xchg
addr16
mov
mov
pushl
xchg
outsb
sbb
sbb
jl
ja
fucomip
cmp
xchg
cmp
inc
jmp
sub
fisubrs
cli
push
fcoml
rcr
xchg
inc
jle
aas
fsubs
add
lock
pusha
iret
adc
inc
icebp
mov
cld
rcrl
xor
mov
adc
mov
call
rcrb
add
jb
mov
pop
jg
sbb
in
xchg
add
mov
notb
cli
mov
mov
push
xchg
and
fcmovbe
decl
and
sub
call
cmp
dec
add
cmp
pop
dec
pop
or
pop
mov
pop
pushl
mov
loope
cmpsl
push
nop
stos
fs
pop
test
in
sbb
decl
std
mov
movsl
jecxz
pusha
ret
or
shrl
adc
jecxz
mov
inc
push
mov
lock
jg
adc
sbb
fwait
cmp
fwait
dec
xor
mov
call
std
aaa
mov
fistpll
adc
jnp
inc
orb
mov
mov
cmp
test
decl
and
dec
mov
les
xchg
mov
sbb
in
sub
jmp
inc
fidivrl
and
push
lods
adc
pop
imul
call
pop
pop
stos
insl
lcall
push
sub
sbbl
enter
inc
sti
xor
les
fdiv
pushl
fisttpl
das
mov
lret
cmp
cmp
in
inc
fldcw
pushl
or
repz
fiadds
repnz
out
or
ljmp
jg
mov
call
cltd
insl
pop
les
clc
xchg
mov
jp
adc
dec
mov
nop
xchg
adc
ret
das
test
fldl
out
mulb
movsb
mov
mov
push
xor
pop
bound
sub
dec
lock
gs
adc
cmpsb
lea
push
js
cmp
sbb
mov
jl
lret
or
pushl
add
push
aad
add
mov
xor
jns
sub
mov
sub
pop
lods
dec
test
fbld
add
mov
jno
repz
dec
cmc
push
push
mov
fcomip
test
inc
xorb
mov
outsb
repnz
mov
rcll
std
fisubl
jno
lcall
xchg
dec
push
cmp
loope
ja
mov
decl
es
mov
pushf
jbe
jmp
jbe
cmp
and
ja
stos
es
popa
das
movsb
ljmp
shrl
popa
fimull
je
pop
cmp
jg
ljmp
pop
insl
xchg
subb
test
in
inc
mov
cmp
insl
cld
incl
movsb
or
cmp
xor
mov
hlt
ds
arpl
incl
mov
add
xchg
jmp
shl
dec
sarb
lcall
xor
pop
lret
and
pop
push
lahf
jb
sbb
jbe
sbb
pop
adc
jg
pusha
cld
in
iret
mov
dec
xor
call
pushf
lcall
add
adc
enter
into
aam
std
negb
mov
inc
andb
mov
stos
jmp
inc
cmpsl
mov
into
fwait
mov
cwtl
lods
mov
jl
sbb
cs
inc
pop
pop
out
imul
adc
cmp
lcall
lahf
and
mov
or
lcall
jbe
movsb
roll
dec
inc
inc
dec
test
mov
icebp
ljmp
fs
dec
sub
mov
mov
push
cmc
pop
add
addr16
test
push
mov
xchg
push
dec
sub
test
cld
mov
xchg
cmp
cmp
movsb
xchg
int3
xchg
jo
daa
call
ljmp
or
ret
or
xchg
cltd
jbe
fwait
ret
fcompl
loope
push
enter
mov
fdivl
subl
push
loop
sub
ljmp
dec
js
nop
aad
mov
les
jmp
repnz
cltd
test
stos
enter
cmp
sahf
mov
and
jb
xlat
xor
fcomip
call
loop
mov
push
ja
lea
mov
jmp
xor
call
fildl
jb
rcr
das
push
dec
or
xor
roll
rclb
idivb
aad
filds
and
int
jno
dec
and
clc
int
jmp
xchg
sbb
and
push
cmp
ljmp
jle
fwait
pop
jb
loope
pop
adc
add
fs
popf
push
adc
aas
mov
loop
push
sub
add
jns
out
dec
ds
sbb
jecxz
jb
cmpsb
jg
lea
or
mov
movd
and
inc
out
decl
or
stos
sub
lcall
xchg
divl
outsb
xchg
pop
mov
push
popa
mov
xlat
in
add
mov
mov
mov
fwait
fs
push
mov
add
das
sub
or
int
lds
repz
shlb
aad
les
mov
cmpsb
mov
in
cmp
call
dec
add
inc
xchg
sarl
scas
ja
mov
mov
xor
fs
push
icebp
dec
lcall
mov
gs
sbb
push
in
pop
or
int3
sub
ret
cs
mov
in
adc
repnz
push
mov
mov
cmp
xchg
lock
jmp
std
mov
pop
insl
out
xchg
lods
inc
arpl
imul
and
pop
pop
jns
or
pop
mov
incl
and
in
rcl
rcll
mov
adcb
mov
fwait
xchg
pop
xchg
mov
jge
mov
or
out
fcomi
arpl
mov
sub
adc
stos
hlt
pusha
push
sti
lea
jg
std
pop
push
notl
fmul
test
lods
xor
inc
aam
pusha
mov
call
sbb
lods
aad
push
adc
dec
add
inc
jnp
push
push
mov
cld
or
fcomp
cltd
sbb
mov
lcall
mov
lods
push
es
sbb
dec
es
mov
pop
loopne
dec
xchg
fisubs
decl
mov
scas
hlt
loop
in
stos
push
rolb
jle
mov
scas
popa
sbb
out
fucom
add
cli
ljmp
out
mov
sub
test
jg
push
pop
sahf
pusha
jl
cmp
add
cltd
aaa
insl
std
pushl
mov
mov
cmp
mov
stos
push
and
aaa
add
inc
add
inc
push
lcall
add
incl
subl
incl
inc
shl
loopne
ja
push
xor
jle
mov
add
pop
and
cmp
cld
cmp
mov
cmpsl
or
decl
daa
aas
lods
mov
popf
jbe
inc
test
dec
jg
nop
dec
insl
pop
sbb
loope
sbb
lcall
jno
movsb
ss
fwait
insb
jle
pop
out
mov
out
outsb
fwait
aam
lret
lcall
and
lret
sahf
mov
popf
rclb
loopne
jb
xlat
dec
shll
jl
jl
mov
push
add
fs
cli
xchg
movsb
in
js
push
test
jmp
cs
fsubrs
push
fiadds
and
fisttpl
push
int
pop
nop
jecxz
add
xchg
stc
gs
inc
fisttps
cltd
pop
std
xchg
jecxz
lock
pop
das
xchg
ljmp
push
cltd
jno
js
push
loope
xchg
or
jg
pop
jmp
mov
jg
mov
cwtl
cmp
mov
or
movsl
jg
jo
mov
ljmp
sar
ljmp
and
mov
pop
dec
and
mov
fcomip
shl
imulb
sar
outsb
scas
mov
ret
jge
pop
or
sti
fwait
push
scas
mov
jmp
mov
mov
hlt
xor
lods
or
xorb
rclb
nop
jbe
pusha
sbb
add
enter
lcall
xlat
lret
inc
call
lcall
mov
fcomps
inc
insl
push
lock
xorl
lret
mov
sbb
repz
decl
mov
jo
mov
lret
icebp
mov
js
lcall
lcall
ficomps
into
add
call
pusha
push
inc
mov
jmp
sub
push
pushf
into
inc
ljmp
jnp
lds
xchg
movsl
icebp
mov
push
getsec
and
loopne
jmp
hlt
leave
stos
ljmp
fldt
inc
pop
mov
aad
xor
jo
mov
lret
out
subb
xchg
mov
pop
repnz
cld
mov
loop
pop
push
xchg
mov
mov
mov
repnz
fs
mov
mov
mov
je
or
js
orb
pop
lret
push
jne
and
into
lods
in
jae
mov
add
iret
ja
mov
fdivr
sbb
xchg
loopne
call
mov
fsts
lea
cmp
fiaddl
sub
scas
fstpl
xchg
cmp
mov
dec
mov
inc
push
addr16
fiaddl
and
pop
dec
jne
lcall
addr16
hlt
cmp
inc
inc
fwait
cmp
loopne
or
ljmp
cmp
movsl
dec
lret
xchg
pop
dec
jo
xchg
or
xchg
fcmovb
jle
inc
out
jge
cmp
and
or
mov
ljmp
cmp
sti
mov
push
fdiv
das
sub
aaa
add
repz
cmpsl
dec
insl
js
cmpsb
mov
jmp
inc
test
ss
inc
xchg
fsubl
jne
fsubs
ds
fcoml
mov
cli
mov
and
sbb
xchg
les
xchg
jmp
dec
call
lret
push
inc
mov
ret
push
cmp
mov
incl
andb
dec
fisubrs
iret
and
imul
enter
dec
loop
xorl
cli
mov
push
jne
rolb
adc
jmp
fistpl
adc
and
xchg
enter
lods
mov
test
cmp
rolb
int3
mov
call
jo
lret
adc
fidivs
inc
cwtl
icebp
inc
enter
jecxz
xchg
inc
add
jg
and
mov
mov
popa
mov
aaa
cld
jmp
arpl
mov
jno
pop
lret
loop
hlt
pop
pop
ficoms
into
les
incl
adc
push
xor
repz
xor
fs
sbb
add
and
dec
dec
lods
inc
scas
popf
xchg
inc
fbld
mov
cwtl
sarl
jl
jne
mov
movsl
dec
lret
sbb
cmp
shll
mov
inc
mov
fsts
cmp
xchg
mov
iret
pop
fistpll
xorb
enter
scas
or
outsb
lret
test
xchg
pop
sbb
and
sbb
pop
lcall
fwait
call
cmp
lock
fisubrs
inc
adc
adc
call
sub
sti
das
cmp
popl
in
xchg
push
in
aam
jb
ljmp
repnz
fisttps
mov
rorl
lds
mov
roll
outsl
push
aad
repz
mov
mov
cmp
hlt
test
jae
insl
mov
pushf
jae
ja
vandnps
mov
ds
cmpsl
stc
dec
fcmovne
cmc
lds
test
int3
pop
std
out
int3
inc
pop
in
xor
incl
cmpsb
mov
cmp
cwtl
sub
jb
pop
jbe
xor
mov
pop
fadd
pushl
sbb
mov
and
paddb
inc
jge
shlb
xchg
iret
push
mov
push
js
pop
ret
or
sbb
and
jae
aam
vmulps
adcb
jmp
cmp
lret
xchg
mov
fldl
mov
test
call
fst
pushf
das
cs
pop
mov
or
icebp
pop
enter
fnstsw
xchg
fimuls
leave
dec
mov
pop
adc
or
mov
cld
decl
repnz
movsl
inc
out
cmpsl
mov
enter
adc
mov
pushl
lahf
jae
cmp
mov
decl
stc
push
push
jae
mov
jmp
jns
jl
lret
dec
mov
pop
pop
es
dec
sub
adcb
pop
mov
mov
add
out
ljmp
xchg
movsl
in
mov
pop
sub
pop
mov
outsb
sub
out
adc
cld
adcb
xchg
pushl
test
sub
hlt
push
aas
cmpsb
rorb
mov
sbb
ja
dec
or
adc
ljmp
outsl
out
rcll
mov
fisttpll
call
test
movsb
mov
rolb
lcall
lock
lds
xchg
jbe
adc
and
jp
loop
stos
loop
out
sbb
mov
push
cld
pop
push
add
xor
xchg
xchg
ror
call
lcall
enter
sbb
dec
mov
ret
aas
or
jp
ljmp
arpl
xchg
or
xchg
loop
scas
mov
xchg
rcl
xchg
cmpb
ljmp
and
cmpsl
pusha
fiadds
and
fidivl
mov
rolb
push
mov
jg
out
push
add
mov
test
cmp
push
cmp
jp
push
enter
and
sub
les
lahf
call
fs
lds
or
lods
xor
cmp
and
sahf
xchg
cmpsb
inc
push
ljmp
lock
jge
adc
mov
call
lds
mov
xchg
stos
out
pop
jnp
jmp
jne
adc
loop
js
shrl
sub
ret
fisttps
popa
icebp
outsl
cmc
aaa
outsl
inc
push
lret
cwtl
cli
mov
dec
lods
call
xchg
cld
lcall
xor
scas
sub
repnz
fs
aam
mov
cmp
popf
mov
daa
lcall
das
clc
cs
mov
xchg
dec
push
or
movsl
cmp
cmp
pop
int
mov
or
pop
mov
dec
popa
sub
imul
popa
jo
imul
push
je
fisubrl
fwait
cmp
inc
decb
fnstsw
or
cmp
cmp
cmp
clc
fldt
dec
inc
repnz
sub
xchg
push
push
dec
cs
mov
es
push
in
lret
mov
pop
arpl
nop
dec
test
or
call
jmp
jmp
mulb
scas
pushf
jnp
pop
dec
mov
jmp
insb
mov
mov
inc
stc
or
imul
jecxz
dec
decl
imul
stos
jae
mov
jb
pushl
in
push
cmpsb
mov
shlb
test
lea
push
sub
mov
and
jmp
xchg
cmp
adc
xchg
lcall
mov
and
jecxz
jb
jns
xor
sar
in
imul
mov
xor
xchg
push
jae
test
insb
loop
lods
jg
pop
ss
push
xor
inc
das
mov
cmp
fsts
mov
jmp
xchg
xchg
sub
cltd
les
xor
inc
ror
cld
scas
xor
jmp
pop
mov
adc
mov
mov
in
into
mov
xchg
insb
insb
ds
in
ljmp
sahf
pop
inc
cmp
pop
and
stos
mov
sahf
jmp
pop
std
jge
lods
mov
lea
mov
xchg
mov
inc
jp
add
decl
test
outsl
push
sub
testb
stos
test
gs
mov
into
adcb
fwait
stc
inc
push
movsl
test
cwtl
call
imul
jne
jnp
bnd
out
sahf
sbb
jnp
stos
adc
xabort
sub
pop
inc
popa
call
adc
std
mov
jno
aam
jb
into
jp
xchg
cmc
lcall
out
roll
pop
push
xor
lods
fcmovu
pop
mov
push
sar
push
std
fistps
sbb
xchg
roll
pop
call
or
add
sarb
pushl
std
jmp
loopne
out
xorb
sbb
lods
stc
je
js
dec
sbb
push
sub
or
sub
fisubs
mov
lahf
mov
jmp
pushl
imul
sub
or
lahf
inc
mov
mov
mov
or
jmp
in
xor
inc
pop
cmp
sbb
insl
sbb
mov
push
cmp
mov
adc
mov
lea
lock
lcall
cmp
rorb
sub
add
cltd
sbb
pop
mov
aaa
mov
imul
cmp
je
jg
lods
pop
pop
and
subb
lods
pop
call
call
fwait
inc
mov
sub
pop
and
ret
mov
pushf
push
dec
incl
sbb
sbb
inc
insl
in
mov
and
sub
push
aas
jne
pusha
and
push
ljmp
dec
or
andl
mov
mov
scas
sti
decl
jecxz
loop
inc
lret
cmp
std
add
push
popa
ljmp
cmc
cld
insb
fnstsw
decl
xor
int3
ret
sbb
mov
mov
inc
lcall
mov
inc
xchg
jl
mov
popf
rol
ja
fcomip
adc
sbb
into
adc
jbe
adc
cmpsl
xor
xor
jg
xchg
gs
push
fmull
add
mov
cmpsl
sub
and
insl
or
hlt
out
in
push
xor
cmc
nop
in
jecxz
pushl
rcrb
dec
xor
std
into
addr16
shrb
sti
sbb
sahf
jg
stos
and
push
mov
sti
push
dec
jmp
gs
lcall
adc
lret
jp
lods
sub
mov
cmpsl
jno
movsb
push
inc
pop
adc
cmovo
pop
repnz
aaa
add
cmp
lcall
mov
pop
cltd
pop
clc
jl
jns
adc
xchg
mov
pop
pop
mov
jnp
stos
mov
call
jge
call
imul
aad
fisubrl
mov
aas
imul
mov
jne
or
incl
adc
cltd
fnstenv
in
int
mov
das
imul
fstpt
les
cmp
cmp
int
pushf
into
or
outsb
arpl
mov
orl
xchg
or
and
mov
and
push
mov
push
gs
loop
push
sti
icebp
sbb
dec
test
lods
out
je
int3
push
mov
outsl
loopne
cld
mov
stos
scas
xor
and
ret
xchg
sub
daa
sub
idiv
addr16
mov
mov
aaa
mov
clc
cmp
decl
mov
scas
mov
cmpsb
push
fildll
clc
lods
popa
mov
cld
fdivrs
lret
push
sti
sahf
sbb
or
dec
xor
or
dec
mov
pop
cs
xor
and
jno
ljmp
lock
inc
shrl
push
in
xchg
call
mov
lret
ljmp
xchg
mov
ror
add
ds
mov
mov
add
xchg
movsb
push
outsb
mov
or
cld
call
jbe
xchg
cmc
pop
pop
push
lahf
cmp
sbb
es
lods
lret
clc
jle
sar
sub
mov
ficoms
and
push
jae
stos
jl
adc
push
xchg
ret
mov
das
inc
cmpb
xchg
imulb
cmp
insb
in
mov
adc
out
xorb
ss
imul
add
std
int3
je
or
or
pushf
movl
jmp
push
loope
mov
pop
push
out
jae
das
jecxz
jne
adc
mov
fwait
add
lods
push
and
in
aaa
mov
cmp
out
pop
and
cmp
aas
fsqrt
leave
sbb
fsubr
xchg
sbb
jg
ljmp
dec
lret
outsb
loope
adc
pusha
mov
and
shr
xor
inc
pop
ds
mov
fldt
nop
cs
lcall
shrl
iret
sub
adc
fimull
sub
add
orb
xchg
cmpsb
cwtl
xor
inc
pop
cmpsb
pop
subl
jmp
xchg
push
jno
cmp
ljmp
push
movsl
movsl
mov
push
inc
push
cli
jno
mov
mov
ffree
ret
js
fsubl
icebp
mov
cld
stos
movsl
imul
aas
adc
ljmp
add
jnp
js
xor
in
icebp
or
sub
fmull
mov
int3
leave
sbb
incb
and
cmp
sub
lret
and
call
sbb
cmp
cmpsb
arpl
jp
mov
add
shlb
mov
clc
aas
add
scas
cmp
popa
arpl
xor
mov
stos
dec
jo
and
lods
imul
mov
adc
or
ljmp
pushl
or
jp
ds
jns
iret
test
sbb
loope
push
call
lods
shl
test
mov
and
adc
mov
fwait
test
sbb
incl
je
pop
outsl
test
cltd
add
imul
dec
cltd
pop
pop
sbb
divb
jmp
adcb
push
push
in
xor
lcall
push
sahf
mull
aas
adc
mov
js
mov
push
sub
xchg
in
xchg
lock
fcomip
rol
into
mov
push
xchg
and
hlt
jo
fs
xor
movsb
and
out
cmpsb
out
decl
mov
sub
stos
mov
push
push
mov
pusha
and
mov
ja
or
and
lods
jg
inc
cld
movl
xor
cmp
sahf
xchg
iret
in
jae
cmovno
sbb
aaa
test
stos
jg
xor
dec
bound
ljmp
fsubrs
dec
xlat
fisubrl
ljmp
add
push
sbb
push
xchg
popf
dec
push
or
bound
fdivr
jns
mov
call
cmp
adc
aad
or
ret
insb
and
xchg
in
gs
and
inc
adc
pop
adc
and
jl
push
test
adc
int
xlat
shlb
lret
call
in
sub
fildl
mov
fwait
mov
or
cmp
jnp
jg
lcall
cltd
inc
jmp
inc
mov
sub
push
ret
loope
pop
pop
loopne
jg
pusha
cwtl
repnz
outsb
fists
add
nop
dec
push
decl
fdivrp
bound
sahf
xchg
pop
pop
pop
fiaddl
addb
mov
sarl
sti
stc
pop
mov
sub
shrb
shlb
bound
lret
or
jg
int
jg
mov
push
lret
lds
cmc
and
lods
cmpsb
fiadds
std
lock
jmp
ds
cmp
mov
mov
leave
sbb
shl
sub
in
sbb
iret
jne
or
decl
xchg
arpl
and
data16
loopne
psubsw
push
out
js
jns
or
ret
sub
lcall
push
lahf
mul
lcall
les
decl
xlat
ljmp
push
lock
or
pusha
push
sti
add
cmp
adc
out
nop
lock
sbb
jmp
call
fsubrs
ret
addl
in
and
mov
push
mulb
cmp
pop
movsb
jg
loop
mov
push
jge
lea
dec
inc
xchg
xchg
and
push
ret
call
push
repz
xor
dec
xchg
out
inc
cld
xlat
inc
and
loop
adc
decl
roll
mov
iret
loop
or
cmp
xchg
cld
repz
popa
inc
fwait
sub
ljmp
sbb
aas
mov
pop
jle
call
std
jmp
cwtl
push
cmp
sub
aaa
call
fcomip
cs
fidivrs
dec
mov
inc
mov
jge
jg
jns
scas
call
cli
mov
pop
xchg
sbb
test
rcl
mov
decl
mov
insl
jmp
dec
pop
adc
ss
jle
push
jbe
and
xchg
rep
add
incl
psrld
pop
adc
mov
push
fisttpll
stos
lcall
dec
push
sbb
popa
out
je
xchg
clc
pop
loop
movsb
test
and
sub
xchg
push
mov
push
sarl
aaa
push
in
lods
rep
add
sar
decl
pop
mov
lds
popa
js
inc
nop
jp
push
adc
mov
jg
dec
or
test
scas
xchg
inc
nop
inc
dec
scas
pop
cli
push
je
into
dec
jg
decl
xlat
insb
or
shl
ret
scas
jp
out
or
xor
jmp
add
scas
mov
xchg
popf
mov
pop
movsl
imul
pop
enter
jne
fs
push
cmc
fdivr
jmp
enter
sbb
jecxz
sti
fadd
pop
sbb
or
dec
je
data16
add
leave
add
adc
mov
incl
dec
mov
xor
dec
jno,pn
cmp
inc
cmp
cmp
add
shrb
mov
ficoms
inc
inc
incl
adc
sbb
outsb
xchg
xorb
dec
mov
lret
dec
pop
sahf
adc
mov
xchg
int
mov
jmp
sbb
xchg
push
mov
testb
jg
dec
rcrb
or
out
daa
lock
inc
add
xor
push
das
clc
sub
lret
repnz
inc
pushf
pop
mov
shlb
sar
loope
push
sarb
scas
inc
gs
call
psubsb
leave
jg
call
dec
sub
pop
and
cwtl
int3
enter
sbb
fisubl
jbe
pushl
push
xchg
dec
xor
int3
gs
mov
push
call
add
daa
cli
jg
pushl
repnz
test
cmp
test
clc
xchg
loop
or
sbb
add
push
rol
mov
xor
mov
idiv
jmp
mov
and
lock
lods
fxch
pushf
jno
mov
xor
fldl
ljmp
test
cli
int
jmp
int
push
and
push
xchg
sbb
sub
inc
jbe
mov
call
push
fistps
lret
stos
enter
jbe
cmpsb
lods
mov
and
mov
pushl
mov
push
sub
fldlg2
add
jne
mov
mov
lahf
cmpsb
loopne
push
cmc
jmp
das
fwait
rcr
clc
and
fstps
and
cmp
sub
mov
sub
bound
inc
lcall
sbb
adc
adc
incl
in
fwait
repnz
test
cmc
and
subb
or
inc
sbb
lods
ret
mov
or
gs
jmp
pop
test
inc
loopne
or
std
xlat
mov
mov
cmpsb
inc
mov
enter
xchg
xchg
jl
inc
and
into
sar
jmp
adc
push
adc
xor
movb
dec
pop
popl
sub
mov
pop
hlt
lcall
mov
fdivrs
xchg
mov
mov
adc
mov
lds
or
push
scas
jg
jl
mov
adc
fwait
clc
mov
mov
push
sub
pop
clc
push
in
mov
ja
out
lret
sbb
xor
jecxz
cmp
in
js
lret
movsb
cmpsb
cs
jno
push
jl
cmp
inc
xchg
inc
push
bound
dec
hlt
int
rol
cltd
stc
sbb
ss
call
fcomp
adc
sub
sarb
call
mov
cmc
xchg
iret
mov
lcall
inc
fs
test
icebp
fstl
jnp
movsb
adc
repnz
mov
mov
arpl
outsl
call
clc
push
xchg
adc
fwait
xchg
out
mov
push
jnp
ss
add
cmpb
jg
pushl
iretw
fisttps
and
and
iret
movsb
cli
out
insb
fidivl
mov
pop
decl
insl
std
pop
pop
lcall
cmpsb
rcrb
dec
jmp
insl
jge
push
mov
popa
cmc
fmulp
ficomps
xor
sbb
mov
lret
in
push
inc
in
mov
push
sub
fisubs
pop
jmp
insl
xor
jmp
push
negb
sti
ret
mov
dec
and
mov
fs
popa
stc
cmp
add
fdivr
call
je
adc
je
fwait
and
cwtl
loopne
lods
int3
and
xor
mov
clc
clc
mov
mov
stos
into
mov
shl
mov
mov
pop
sub
fbstp
es
or
aad
xor
xchg
js
lcall
addb
test
or
jo
push
pop
cmp
cmp
xor
jae
mov
pushl
call
mov
sub
insl
mov
in
lret
mov
xor
incl
mov
divl
lret
int
fs
or
jp
inc
xor
adc
mov
sub
jg
push
lds
int
hlt
mov
call
and
push
icebp
repz
mov
fmull
lock
xchg
adc
ss
dec
dec
xchg
inc
jge
je
jmp
xchg
ljmp
cmp
dec
fwait
pop
out
mov
sbb
ret
adc
sub
call
xor
jns
adc
into
lret
jmp
cmpsl
inc
lea
lods
cmp
pop
xchg
xor
shlb
push
mov
pop
pop
and
pushl
cmp
jg
jb
loope
loope
in
cmp
fstpl
scas
add
fildll
fidivrs
pop
mov
andb
or
imul
ljmp
clc
xor
jecxz
dec
or
jae
jae
mov
jo
sbb
incl
push
xchg
pushf
sub
iret
es
in
fdiv
inc
incl
push
push
shll
push
cmp
jno
int3
out
pop
int
mov
incl
cltd
inc
incb
jle
mov
ljmp
jp
jmp
push
push
nop
xchg
mov
jle
push
add
in
or
std
ror
adc
incl
jno
mov
pop
mov
inc
inc
ja
cmp
push
cmp
cld
inc
pop
incl
popa
subb
ljmp
xor
fsub
out
jo
lret
pop
and
test
pop
movsl
cltd
mov
jl
incl
in
lds
shll
sbb
dec
add
out
mov
out
jno
sbb
lret
push
mov
nop
sub
orb
stos
lret
push
pop
jbe
sub
jle
aad
add
cmc
or
and
jmp
scas
insl
mov
stos
or
clc
enter
fdivs
mov
pop
mov
mov
call
lahf
lea
jmp
mov
lods
inc
fimull
shrl
dec
xor
pushl
repz
inc
and
xor
add
popa
cmp
lock
pop
shll
pushl
sbb
movsl
sub
sahf
xor
or
popl
rolb
fistpll
cwtl
mov
lcall
xchg
cmpl
lret
or
mov
andb
lcall
pop
xor
jb
ja
insb
and
lods
repz
loop
xchg
mov
cwtl
jg
out
js
add
mov
dec
aaa
ljmp
push
adc
incl
movsb
insl
push
pop
adc
repz
fnstsw
mov
jecxz
aaa
jnp
daa
in
adc
sub
out
aas
add
sbb
push
jecxz
xor
lahf
add
insl
mov
xor
or
mov
xchg
insl
pop
pop
inc
ror
dec
adc
lds
or
lcall
jle
add
movsl
mov
xchg
fwait
dec
rcl
sub
lds
cmp
out
lcall
cmp
or
mov
movsl
add
or
jbe
dec
jmp
addr16
call
mov
roll
test
pop
pop
movsb
add
rcrl
aad
test
inc
xchg
xchg
cwtl
sub
pop
decl
add
fbld
push
mov
outsl
out
pop
mov
and
cmp
xchg
sbb
std
and
push
call
in
es
adc
daa
cmpsb
std
ss
lcall
insb
das
in
scas
add
popf
fwait
push
sbb
and
faddp
stos
adc
aas
ljmp
mov
loop
inc
push
pop
add
inc
jp
pop
aas
vmread
movb
sub
lcall
outsl
cli
stos
push
inc
fwait
add
or
aam
sub
inc
je
loop
decl
cmp
inc
mov
daa
sub
movsb
pop
xchg
pop
test
fisubs
inc
shll
idiv
push
sbb
sar
inc
cli
js
jl
lret
mov
or
pop
mov
leave
mov
jge
mov
fs
jecxz
fimull
loope
popf
scas
in
add
push
mov
jno
clc
cmp
data16
xor
hlt
sbb
jecxz
pop
scas
daa
jno
es
ds
fisttpl
fs
xor
or
fildl
or
and
imul
dec
cmp
shlb
and
sahf
scas
popa
adc
in
decl
push
repnz
or
repz
loope
loope
bound
sub
ljmp
adc
lret
xor
adc
mov
clc
sbb
fisubl
test
inc
lea
sbb
arpl
lea
sbb
fbld
fstpl
jns
loope
sbbb
rol
imul
mov
sbb
xchg
jbe
shlb
lock
loope
sbb
scas
incl
mov
mov
sub
sbb
adc
lret
adc
push
lods
bound
rorb
std
jne
out
mov
pop
adc
dec
rcrl
test
mov
jne
jg
imul
sub
mov
mov
hlt
loopne
xchg
cmp
adc
dec
clc
pop
cld
adc
nop
scas
imul
mov
enter
jo
sub
ss
stos
pop
shl
scas
xor
or
push
dec
out
cli
das
sub
rcll
lods
lret
push
jb
jge
jo
frstor
xchg
add
push
mov
push
incl
jp
jge
adc
ds
mov
into
cs
and
popa
hlt
dec
incl
add
push
or
inc
aad
cli
mov
dec
mov
fs
nop
or
orb
push
pop
jbe
test
sbb
xchg
sub
pop
push
mov
sarb
xchg
xor
pop
test
sahf
outsb
test
dec
pop
je
push
addr16
sbb
iret
lahf
adc
jnp
sbb
mov
jns
xor
aaa
data16
ret
jle
es
cli
mov
pusha
rolb
into
add
lret
mov
and
cld
ljmp
aam
sahf
js
shrl
sbb
ss
xlat
inc
mov
and
push
out
push
xchg
xchg
ljmp
and
dec
add
xchg
mov
jnp
dec
push
lock
xlat
sbb
add
or
mov
add
sbb
scas
iret
int3
cmp
call
jle
repz
mov
or
ds
pusha
pop
cmp
dec
pop
cmpsl
leave
jnp
scas
rcll
loope
or
insb
xchg
pop
lea
int3
lahf
pushl
int3
les
lret
push
aas
pop
mov
cs
leave
sub
mov
push
pop
lcall
incl
fisttpll
inc
xchg
jne
mov
in
adc
lods
sub
xchg
pusha
mov
movsb
dec
pushl
mov
call
push
in
mov
mov
xor
mov
mov
aaa
addb
mov
push
rcl
incl
fsubr
test
fiaddl
pop
pushl
push
sub
dec
add
fldenv
mov
out
push
arpl
movsl
ja
out
mov
push
subl
in
jae
push
xor
scas
pop
jne
fisttps
jge
pop
dec
dec
int3
stos
cmpsb
rolb
cli
jmp
ja
icebp
int3
into
out
cmpb
lcall
push
mov
push
mov
push
call
pop
jp
push
add
or
xchg
mov
test
dec
test
in
mov
dec
lcall
out
leave
inc
xchg
xlat
lods
sbb
pop
loope
push
repz
inc
imul
testl
pushf
fwait
imul
mov
mov
sbb
scas
imul
pushf
in
stos
incl
call
xchg
mov
sub
sub
xor
test
xchg
pop
decl
xor
ljmp
rclb
fdivl
push
daa
rol
es
mov
imul
sub
mov
je
insb
in
in
xchg
sub
jg
ret
pop
je
add
xchg
xor
dec
mov
cmp
add
std
cmpl
ljmp
icebp
movsb
pop
push
out
cmc
push
enter
mov
call
xchg
cmp
jne
inc
xor
mov
cmp
popa
scas
xchg
cs
sahf
fiadds
cld
pushl
or
int
cltd
pop
xchg
dec
cli
outsb
rorb
jg
adcl
popa
out
push
lods
jns
inc
inc
pushl
and
adc
mov
pop
or
sahf
mov
xchg
xchg
icebp
dec
movsl
inc
pop
xor
xchg
scas
mov
add
cmp
push
add
xor
cmc
rcll
pop
subb
mov
dec
adc
sub
js
in
sub
call
jmp
mov
and
nop
mov
loopne
add
pop
lcall
rclb
insl
test
lcall
or
jno
shlb
pop
jb
int3
dec
stc
xchg
test
ljmp
jl
xchg
out
es
test
mov
mov
xor
loop
jnp
adc
adc
insb
jmp
sahf
fwait
test
pushl
push
mov
adc
sbb
inc
adc
adc
cmp
jg
push
daa
lods
dec
outsb
mov
push
test
rolb
add
sub
inc
gs
fidivs
mov
out
sub
loopne
dec
push
div
adc
aad
or
sbb
adc
inc
pushl
dec
dec
inc
insb
daa
xchg
aaa
inc
filds
pop
mov
shll
adc
and
lcall
sub
add
popa
cltd
and
push
adc
cmp
in
pushf
jne
aas
sbb
test
decl
pop
fcmovbe
dec
lahf
mov
mov
sub
mov
push
gs
in
push
push
sub
sbb
dec
bound
fbstp
and
js
sbb
xor
lds
xchg
movsl
lds
out
in
pop
jecxz
outsl
push
xchg
call
loopne
inc
or
mov
adc
inc
sarb
sub
push
daa
addr16
inc
std
pop
daa
xchg
xchg
xor
insb
mov
lret
or
xchg
mov
add
or
test
or
adc
cmp
adc
stc
cmc
mov
adc
flds
rcl
push
popf
imul
add
or
out
mov
adcl
loop
and
mov
mov
add
cli
repz
mov
ret
pop
fistl
shlb
pop
ljmp
jl
dec
stos
xchg
subb
sbb
mov
popa
outsb
popf
push
leave
mov
loop
mov
push
sbb
incl
inc
test
sub
xchg
xchg
mov
in
or
and
mov
ljmp
cli
mov
movsb
adc
xchg
inc
jb
sbb
sahf
adc
sbbb
ljmp
mov
dec
incl
sub
fs
cmp
clc
xchg
imul
in
adc
dec
mov
jp
cmp
dec
push
shlb
mov
add
shrl
fmuls
dec
negb
xchg
out
arpl
jmp
mov
das
mov
jmp
jge
sbb
sti
and
incl
mov
rclb
push
aad
aad
push
in
lods
cmp
sbb
sub
ja
and
in
test
clc
es
sub
pop
or
adc
sub
loop
cmp
add
in
mov
fsubrl
jns
fisubrl
insb
andb
mov
push
jecxz
cld
call
aad
les
sub
jle
ret
and
sarl
ret
rep
arpl
push
lods
push
lret
ss
cld
lcall
cmp
pusha
inc
push
add
jb
cmp
popf
int
lahf
call
xlat
lds
call
mov
xor
and
xor
jno
in
imul
dec
pop
add
ljmp
cs
in
dec
push
cmp
xor
int
rclb
inc
mov
push
out
in
cs
lahf
ret
jmp
cmpb
push
pop
mov
fwait
sbb
lock
fmull
pop
mov
arpl
call
mov
les
sbb
les
ret
or
mov
call
insb
stos
and
lret
jg
scas
jnp
and
fucomip
sub
cwtl
mov
out
dec
call
add
push
ret
es
mov
or
imul
cmc
jno
fwait
add
popf
mov
cmp
inc
add
mov
les
sub
lods
in
mov
mov
ss
mov
addr16
push
push
bound
hlt
push
cmc
cmc
ret
or
out
pop
jge
lods
add
std
sbb
push
cmp
inc
or
mov
lock
add
and
mov
sub
and
push
xchg
out
pop
xchg
incl
add
fstpt
sahf
out
dec
repz
pop
dec
das
sahf
jge
mov
xor
loop
loop
out
or
shlb
mov
lcall
xlat
cmp
or
cli
fs
int3
pusha
dec
cmovae
stc
jl
es
fimull
incl
cli
rcll
sub
jg
or
push
and
and
adc
mov
call
aad
rcr
inc
sbb
push
ljmp
repz
dec
add
ljmp
add
mov
incl
fcmovnbe
mov
hlt
arpl
roll
fiaddl
sub
add
and
cld
add
push
nop
cs
lcall
sbb
mov
sub
push
decl
movb
adc
push
arpl
dec
jbe
adc
call
add
inc
sbb
mov
jmp
stc
and
dec
sub
out
mov
cmc
ljmp
jle
adc
test
cs
in
mov
pop
cmp
movsl
dec
cmova
inc
dec
hlt
mov
push
pop
and
pop
mov
repnz
decl
mov
xchg
inc
cmp
bound
data16
test
mov
out
and
sub
sub
lods
cmp
mov
xlat
stos
dec
cld
pop
les
rcrl
cmp
push
push
dec
lods
popa
jp
fisubrl
pop
adc
stos
imul
sbbb
inc
adc
icebp
cltd
jne
xor
mov
test
subl
jmp
mov
push
cmp
dec
int
rcll
adc
push
cld
pop
subl
ljmp
push
aas
xlat
jb
incl
icebp
into
scas
stc
cmp
les
jg
mov
xchg
pop
scas
cltd
mov
cmp
in
adc
mov
movsb
aaa
aad
mov
in
mov
sbb
mov
jp
lods
sar
jmp
add
aas
mov
xor
adc
xchg
out
test
ljmp
rol
shl
jmp
aam
sub
inc
push
or
mov
rolb
dec
sbb
decl
popf
inc
pop
jno
sbb
lock
stc
addl
mov
add
mov
xor
std
fists
mov
xchg
pop
inc
test
pop
fildll
cli
lcall
movsl
xchg
daa
and
js
add
mov
pop
imul
push
jg
adc
rcrb
rolb
push
loop
scas
pop
and
iret
sbb
inc
incl
jecxz
iret
xchg
repnz
xor
jae
arpl
xchg
clc
pop
sub
pop
inc
cmp
andl
mov
sbb
insb
lcall
inc
rorb
mov
addr16
or
mov
adc
jle
sub
in
xchg
lcall
test
adcb
pop
decl
cmp
stos
clc
mov
push
cwtl
mov
out
or
aam
push
adc
je
push
adc
xor
mov
shl
dec
sub
push
cmc
hlt
std
ds
lahf
ljmp
out
lods
icebp
jns
inc
fldt
push
movl
cmp
shlb
pop
leave
roll
jg
call
and
stos
rclb
iret
jecxz
inc
xor
fcmovne
jae
je
out
adc
insb
cmpl
cmp
jecxz
jnp
xor
rolb
mov
add
aam
aas
outsb
or
dec
faddp
inc
cmc
sbb
call
not
iret
fs
clc
dec
push
test
mov
xor
jg
je
shll
dec
lea
and
movsb
sbb
push
addr16
insb
xchg
inc
xchg
push
fiadds
enter
push
add
push
inc
xchg
call
in
testl
jl
jae
incl
cmp
rcrl
adc
scas
lock
out
lret
sti
xor
mov
xchg
mov
out
jg
pop
cmp
into
lds
pop
shr
popf
idiv
xor
pop
cmpsb
mov
sub
popf
or
jg
lcall
push
in
pusha
mov
lret
insl
rcrb
mov
jge
int
decl
push
xor
jmp
mov
call
pusha
and
stos
sub
je
xchg
xchg
add
dec
adc
pop
sub
movsb
jno
and
xchg
xchg
mov
jg
push
mov
test
adc
mov
dec
sub
mov
ljmp
mov
and
loope
ljmp
or
int
ds
mov
dec
and
gs
cs
into
cmp
cltd
add
pop
lahf
xor
cmp
jp
fcos
call
out
sub
jge
movsb
xchg
jmp
xor
movaps
test
adc
scas
mov
push
add
jno
outsb
adc
out
add
aad
clc
sbb
pushl
stos
fwait
aas
mov
sbb
inc
clc
or
push
mov
repnz
in
cmpl
cwtl
and
mov
lret
inc
test
dec
add
lods
sar
dec
push
dec
dec
loopne
pop
jbe
loope
lds
insl
and
lret
inc
cwtl
loope
sbb
cmp
jmp
repz
jl
mov
cltd
inc
adc
add
movsl
test
ficomps
jg
pop
test
push
pop
lds
or
lods
repz
pop
mov
test
ljmp
inc
or
daa
pop
mov
lret
js
jb
js
dec
mov
test
mov
call
movsl
sub
lds
xlat
push
aam
push
scas
movsl
mov
xor
filds
decl
push
mov
rorl
push
jae,pn
push
mov
sbb
pop
lock
popf
mov
lods
fistl
xlat
xchg
push
out
inc
push
and
jg
testb
imul
fldenv
fildl
cli
xchg
es
out
div
push
inc
pop
mov
mov
cwtl
cmp
push
lods
aam
fcompl
pop
mov
sbb
jmp
pop
jmp
adc
popf
and
xchg
out
mov
cltd
stc
test
jns
je
inc
jp
lcall
fsubs
jg
xchg
mov
dec
js
aam
pop
divb
push
inc
add
incl
lds
add
stc
clc
pop
mov
pop
int3
pushf
nop
into
cmp
cmpsb
scas
mov
jg
movsl
lea
push
es
cmp
mov
movsb
mov
xlat
mov
inc
mov
push
xchg
iret
xchg
push
mov
stc
das
inc
dec
sbb
iret
or
pop
ja
inc
adc
decb
je
rcrl
jecxz
push
nop
dec
jl
icebp
out
xor
scas
sar
xchg
sbb
cmp
ljmp
repnz
cmp
ljmp
pop
into
fdivs
pop
ds
lea
lcall
into
les
pushf
inc
mov
inc
xchg
push
cmpsb
mov
add
mov
jnp
push
aaa
mov
call
xchg
les
fwait
add
mov
ficoml
sub
push
ds
push
add
fsubl
mov
lea
test
in
mov
sub
fidivl
xchg
sbb
pop
or
push
sub
sub
pushl
shlb
cs
sub
xchg
mov
into
or
mov
incl
loopne
mov
lock
neg
adc
inc
rorl
js
mov
aam
incl
cwtl
call
pop
addr16
xchg
stos
lret
cmp
cwtl
fnstsw
rclb
inc
dec
cltd
add
xchg
negl
movsb
aaa
test
out
mov
mov
int
in
daa
nop
ljmp
xor
cs
push
out
daa
mov
cmp
pushl
push
or
add
outsl
out
pop
scas
cmp
rcrl
xchg
inc
fs
in
push
xchg
push
pop
cwtl
popf
or
clc
decl
or
int3
lea
incl
js
scas
sbb
movsb
test
adc
out
dec
lret
loope
pop
jle
das
incb
clc
xchg
or
in
push
mov
xor
inc
mov
sarl
inc
pop
imul
icebp
inc
out
jb
or
and
sbb
mov
insl
jo
pushf
and
in
push
push
and
xorb
or
sahf
sti
movsl
sbb
jmp
aad
fs
mov
aam
cmc
mov
xor
gs
jmp
call
rorb
imul
hlt
ret
sahf
ret
fdivl
mov
test
pop
cs
mov
mull
mov
imul
pop
jbe
ret
lcall
jno
mov
fnstcw
xor
inc
fsub
xor
jmp
inc
cmpsb
enter
into
stc
sub
sarb
xor
pop
mov
stc
inc
pop
jnp
add
loope
dec
pop
out
and
jp
ret
jae
xchg
dec
sub
sub
outsl
divb
nop
mov
rolb
adc
fadds
loopne
cli
packsswb
rclb
mov
dec
jo
ja
adc
cmp
xchg
mov
pushf
std
xchg
mov
adc
mov
mov
xor
or
cmc
mov
cli
push
sahf
loope
lcall
lock
jecxz
insb
pop
inc
sbb
mov
dec
repnz
dec
outsb
or
mov
cmp
stos
inc
xchg
call
xlat
mov
jno
cmp
sub
inc
mov
inc
adc
mov
incl
das
in
sbb
jbe
stos
push
mov
cmp
xchg
das
lds
incl
out
mov
cmp
jle
push
xorb
pop
jo
cmp
jg
outsl
cli
dec
mov
scas
cmp
dec
mov
and
add
jmp
in
inc
push
adc
ret
out
pushf
js
jp
scas
or
jecxz
decl
dec
lret
test
and
je
cmp
popf
jbe
insl
test
cmp
xor
scas
mov
pushl
leave
adc
lds
ljmp
push
xchg
xchg
pop
mov
ret
incl
jae
mov
test
fstpl
inc
jg
adc
and
nop
mov
push
push
outsl
mov
out
sub
add
pushl
mulb
jmp
jge
movsl
push
mov
pop
stos
push
mov
sub
cmpsb
sbb
pop
and
push
or
ja
sar
lcall
sbb
ja
stos
pop
pop
sub
or
cmpl
cli
scas
jge
les
cmp
in
les
jp
push
mov
or
inc
pop
dec
jno
stos
dec
ficomps
loop
mov
cmp
mov
fs
pop
adc
ja
fwait
shrb
notb
jp
popa
int
decl
jmp
inc
scas
jecxz
addr16
insl
mov
dec
inc
xchg
add
xor
decl
cmpsb
rclb
in
xor
or
pushl
out
mov
rcl
mov
sar
inc
xor
jge
adc
ja
orl
fsub
jmp
mov
mov
mov
test
andl
pushl
sbb
dec
int
outsb
jns
scas
out
xchg
dec
ret
mov
pushf
sbb
insl
cmp
inc
aaa
inc
xor
mov
fwait
int
cmp
loope
call
call
dec
dec
cwtl
or
aaa
and
movsl
mov
decl
cld
or
jmp
dec
jae
aad
push
test
mull
incl
fidivs
and
mov
iret
bound
xor
pop
lock
jge
iret
test
lahf
mov
or
dec
ret
sbb
pop
jl
fsubl
cmc
fsubrl
sbb
idiv
call
xor
js
clc
add
jnp
cmp
fcmovu
ljmp
push
and
inc
push
dec
jo
sbb
mov
jg
loop
dec
or
pop
sub
mov
mov
sbb
mov
rclb
enter
notl
dec
jmp
ret
repz
push
jg
xor
adc
filds
out
sbb
aas
data16
inc
or
add
sub
in
sub
ja
scas
nop
sar
out
out
sahf
push
int3
xor
push
push
sbb
mov
int3
push
outsb
leave
xchg
jle
out
pushf
jg
mov
mov
sub
ss
adc
sub
call
xor
sub
jae
mov
jg
jmp
aad
outsb
or
mov
aas
add
push
gs
pushl
xor
int3
push
imul
mov
lret
aas
cmpsl
out
orb
dec
ss
decl
orl
xchg
testb
add
mov
jb
hlt
jp
aam
jbe
pop
outsb
jp
cmp
clc
out
and
test
mov
mov
jp
push
in
ljmp
rorl
jne
lcall
sbb
lcall
sarl
mov
js
lcall
clc
jne
inc
xchg
stos
ljmp
mov
addb
sub
into
call
negb
ljmp
es
movsl
nop
cmpsl
jbe
lahf
pop
mov
mov
inc
outsb
lea
shrb
iret
xor
incl
xchg
lods
rep
mov
mov
sbb
loopne
dec
xor
fiaddl
fs
adc
call
ljmp
rep
popa
push
ljmp
inc
in
xchg
stos
or
mov
out
test
mov
std
jg
stos
ss
cld
inc
sub
push
add
mov
hlt
jmp
lods
daa
sub
xchg
and
cmp
pop
mov
or
insl
decl
add
stc
mov
mov
mov
add
jl
decl
and
arpl
les
sub
xor
mov
mov
sbb
jg
sub
mov
sbb
daa
and
ljmp
push
push
push
loope
push
push
sarb
js
jne
sahf
enter
cmc
out
iret
aam
and
pushl
add
cli
mov
popf
mov
xchg
loop
and
or
sub
or
sbb
pusha
push
sub
xor
mov
fisubs
cwtl
xor
imul
jle
jmp
cmc
xor
pop
lcall
push
test
call
lock
sub
loop
and
enter
orl
and
ret
and
decl
cld
ret
sbb
xor
cwtl
push
iret
jo
sbb
push
and
and
imul
add
loopne
xchg
rcl
std
xor
jmp
sbb
mov
aaa
ss
popa
int3
in
pop
cld
mov
mov
outsb
pushl
cli
xchg
mov
adc
sti
enter
cld
mov
pushl
lret
shrb
xchg
stc
andb
mov
incl
and
sti
popa
push
or
push
push
inc
jbe
mov
jb
push
xchg
aas
movsl
fdivl
in
in
sub
sbb
movsb
xor
movsb
fiadds
mov
andb
decl
mov
add
sbb
pop
sbb
call
outsb
mov
jmp
or
lea
pop
inc
data16
shll
movsb
sub
into
mov
clc
repz
cld
mov
outsb
sbb
divl
xchg
xor
sahf
fstpl
inc
imul
xchg
push
cmpnleps
shlb
or
cmp
lock
push
dec
jecxz
insb
loopne
ljmp
mov
movsl
jmp
frstor
cmp
pop
cmc
call
ljmp
mov
ja
cwtl
nop
sbb
xchg
ja
test
push
and
add
jae
lcall
cld
sbb
pop
and
scas
fcmovnbe
jg
sub
adc
xchg
in
cli
pushl
fsts
dec
addl
incl
les
loope
addb
scas
shll
pop
fmulp
stos
push
lds
pushl
jae
and
in
mov
sbb
mov
ja
inc
mov
jg
outsb
xchg
frstor
mov
pop
rep
arpl
rorb
std
decl
and
out
push
repnz
lods
pop
das
imul
xor
adc
icebp
xchg
outsb
mov
js
mov
pop
shl
mov
repz
in
mov
ss
xchg
imulb
jo
outsl
fcomip
decl
jg
and
lock
je
faddl
inc
lods
fwait
hlt
call
aaa
repnz
das
push
fildll
cli
cli
inc
cmc
fbstp
into
mov
out
mov
or
fxch
add
pop
inc
lea
int3
aad
jno
add
std
xchg
cmp
and
sbb
mov
jg
dec
cld
in
push
mov
inc
cli
int
test
mov
in
inc
lods
add
pushf
sbbl
and
rolb
adc
incl
bound
decl
push
adc
xchg
int
sbb
add
fisttpll
mov
adc
cmc
pop
aad
lds
adc
std
jle
jmp
popa
inc
cmp
fwait
call
scas
icebp
imul
mov
fistpl
scas
call
jl
movb
pop
mov
mov
xchg
xor
pusha
stos
addb
push
pushf
pop
pop
test
jmp
push
xchg
loope
mov
cmp
and
subb
sub
dec
lahf
es
fstp
mov
mov
dec
addr16
push
inc
sub
negb
push
inc
push
sbb
jmp
mov
or
cmp
mov
hlt
cmp
shl
push
insb
push
jle
aas
mov
mov
out
push
mull
push
cmc
addr16
cmp
cmp
loope
sub
dec
sahf
push
jno
cmp
and
inc
out
xchg
decl
pop
xchg
sbb
loop
xchg
repz
push
dec
popf
rorb
lods
popf
lods
loop
fsub
xchg
pop
fdivrl
add
mov
lret
test
add
fbld
test
mov
es
cld
loop
xlat
xchg
test
call
mov
adc
cwtl
mov
rep
decl
lret
inc
incb
and
inc
inc
jle
mov
in
mov
mulb
push
daa
xchg
dec
fdivr
call
push
dec
xor
jo
add
inc
jecxz
jge
cmc
xor
sar
pop
pop
pop
movsl
cmp
ljmp
jmp
push
jbe
imul
lock
pop
cwtl
adc
ret
mov
xor
inc
lcall
ret
scas
scas
sbb
les
dec
notl
stos
popa
mov
call
mov
fxch
pop
add
cwtl
mov
int3
jle
stos
movsl
cmp
cmp
xchg
cli
adc
or
jg
call
test
cmp
adc
fidivs
pop
scas
inc
adc
inc
sahf
test
sti
ja
cmp
lea
push
xor
in
sbb
mov
fs
fldcw
pop
sbbl
lock
dec
push
popa
scas
andl
ljmp
jnp
pop
test
in
or
int
popf
sub
imul
push
fstpt
decl
stos
vmovupd
sar
cli
mov
mov
push
test
mov
popf
test
sbb
pop
sub
imul
or
decl
lcall
push
push
xlat
into
arpl
add
xchg
out
clc
inc
sbbb
push
sbb
out
cwtl
ss
sub
lock
mov
das
push
inc
fsubrs
push
or
jns
mov
sub
test
dec
xchg
adc
push
mov
inc
pop
insl
lret
ljmp
mov
or
addr16
add
sub
ss
hlt
scas
scas
pop
imul
incl
int
sar
mov
fisubrs
mov
sahf
mov
aaa
jge
inc
mov
push
lret
mov
xor
xchg
xchg
cmp
sar
and
mov
cs
je
in
call
xchg
pushf
push
or
jle
jge
inc
jmp
faddp
sbb
push
xor
insb
je
decl
cli
scas
lret
arpl
jp
jno
and
sti
adc
jmp
dec
dec
fcomip
fisubl
icebp
ja
pop
hlt
mov
movsb
scas
add
push
mov
leave
mov
call
ljmp
mov
popa
jmp
fnstcw
testl
dec
pushf
mov
imul
pushl
xor
jmp
jmp
out
das
pop
iret
and
cmp
aas
and
adc
add
mov
das
mov
decl
dec
pop
les
ljmp
mov
loopne
incl
cwtl
mov
imul
lahf
loopne
jno
ret
inc
ja
jmp
add
repz
sarb
es
clc
lods
sti
out
mov
jg
cmp
jle
sbb
and
notb
aad
pushf
add
cmc
cmpsl
push
pushl
stos
aaa
inc
incb
lods
pop
imul
sahf
cli
mov
cmp
test
icebp
in
loope
shr
xchg
lret
imul
adc
add
decl
jno
mov
mov
lcall
jne
dec
ret
lock
test
movsl
inc
push
xlat
push
dec
mov
add
incl
push
out
jl
jle
jmp
ficompl
mov
ljmp
repnz
sub
pushl
push
mov
or
leave
pop
pop
or
lds
je
repnz
lea
pusha
ret
cmp
jmp
inc
xchg
mov
shrb
int
outsb
mov
cli
call
fcomip
js
xchg
mov
shll
lds
repnz
cmc
mov
mov
movsl
and
and
lock
lcall
xchg
call
das
xlat
xor
scas
shlb
orl
fidivrs
call
inc
dec
pop
mov
mov
push
cltd
adc
jg
test
sbb
cmp
ret
xlat
xor
pop
fiaddl
daa
aaa
bound
daa
jae
addr16
ljmp
rclb
cld
arpl
lock
mov
or
decl
lock
xlat
mov
fs
push
cmp
fsubrs
orb
xchg
aad
fidivrl
push
cld
ljmp
mov
sarl
and
and
mov
inc
mov
in
lcall
shll
mov
mov
sahf
popf
or
inc
repnz
mov
sbb
push
pop
xor
lods
scas
data16
into
inc
rorb
aas
pop
in
mov
lcall
or
es
and
and
or
pop
mov
mov
rcrb
loope
push
pop
push
adcb
aad
dec
ja
dec
mov
inc
pop
inc
or
sti
mov
lea
lea
scas
ljmp
sti
lods
sub
incl
mov
out
mov
xchg
hlt
mov
cmp
adc
je
nop
or
dec
adc
or
fsubl
das
or
jg
adc
aas
cmpsb
pop
sub
in
int3
or
push
push
jecxz
xchg
test
cli
call
lods
in
adc
decl
pusha
test
cmp
jg
clc
icebp
out
nop
cs
addr16
ret
ja
sbb
rcl
add
dec
out
addr16
in
pusha
mov
fcoml
mov
pushf
clc
inc
and
movsl
jle
sbb
addl
mov
adc
call
mov
out
into
out
stos
sbb
cmp
aaa
scas
lcall
cmp
pop
inc
ljmp
cli
ret
cwtl
cli
jns
xchg
stos
sub
iret
sbb
xor
mov
shrl
xchg
out
scas
imul
mov
ljmp
xchg
js
out
mov
enter
xchg
or
ja
cmpsb
sbbb
outsl
cmp
das
push
pop
jo
aam
call
and
cld
xor
lret
pop
ret
lcall
add
in
aas
jmp
aas
xchg
cmpsb
rcll
xor
or
mov
dec
cmp
mov
pop
xor
outsb
cmpb
js
sbb
cmp
call
loopne
pop
lea
loop
mov
or
adc
jne
lcall
jle
in
mov
sbb
xchg
test
lods
add
dec
adc
cmp
int3
cs
push
push
jo
icebp
js
adc
pop
xchg
repnz
insl
mov
adcb
lock
jecxz
add
jg
nop
scas
xor
push
aad
and
cmpsl
or
and
jmp
imul
xchg
aaa
jg
inc
and
in
sub
sub
hlt
aaa
push
outsl
push
mov
sbb
movsb
incl
popa
aam
hlt
push
xchg
fsubl
mov
or
in
cs
mov
in
lcall
lods
scas
and
jg
add
and
das
imul
inc
mov
in
lret
mov
ret
cmp
repz
adc
mov
sbb
in
and
test
dec
push
ss
aas
fwait
xor
dec
jbe
xor
fimuls
imul
dec
decl
jno
sub
adc
mov
ds
add
jp
lods
je
dec
pop
std
ljmp
scas
inc
xchg
aad
mov
clc
nop
ljmp
pushf
sub
sub
negb
and
inc
pushl
cmpsl
in
ss
mov
mov
sahf
shrb
xchg
sbb
or
and
pushl
das
shll
mov
sub
jg
out
addr16
adc
in
lods
inc
cmp
dec
cmp
bswap
jns
push
pop
xlat
mov
cli
push
gs
in
fbld
adc
jl
jae
pop
push
cwtl
pop
nop
mov
push
cmp
mov
je
dec
inc
push
addb
iret
cltd
ret
leave
inc
jbe
dec
xor
jg
sbb
ljmp
xor
push
inc
dec
fstl
insl
cmpsl
gs
std
aad
leave
pushf
popa
xchg
fsub
cmp
out
xchg
xor
movsl
imul
pop
into
jge
jg
inc
fdivs
xchg
into
push
stos
and
sahf
push
xor
cmp
cli
call
mov
repnz
insb
ret
jmp
je
mov
outsl
xchg
fimuls
test
sar
lcall
dec
mov
clc
sub
sbb
jae
into
xchg
sub
mov
icebp
xor
pop
xor
adc
dec
inc
push
incl
nop
mov
push
jp
adc
in
es
mov
mov
jmp
sub
ds
add
xchg
dec
jmp
mov
test
mov
jle
dec
pop
orl
inc
mov
imull
cmpl
mov
clc
lret
cmp
aaa
pop
mov
add
mov
ret
pushl
loope
fiadds
cltd
push
fiadds
xchg
lock
adc
call
inc
mov
popf
jge
or
sbb
mull
orl
mov
dec
fstps
push
ljmp
dec
int3
rolb
rorl
mov
mov
jmp
mov
cs
adc
mov
sti
hlt
or
out
imul
push
mov
dec
or
fldenv
sbb
pop
push
std
mov
push
cmp
ljmp
sub
sbb
pop
neg
jp
pop
pusha
adc
or
ljmp
jmp
push
push
sub
adc
lret
test
push
out
mov
arpl
jmp
cwtl
cs
jg
mov
adc
cli
mov
mov
xor
xchg
pop
mov
or
dec
dec
jle
dec
or
and
mov
call
int3
mov
fnstenv
das
mov
pop
or
dec
loopne
or
fistpl
push
addr16
imul
xor
push
inc
cli
pushl
test
outsb
ja
cli
mov
ljmp
loope
nop
or
cmp
loopne
pop
cmp
loopne
jae
shll
jne
cmp
jg
mov
fs
pop
repnz
xchg
outsb
lahf
iret
jge
add
xlat
decl
in
adc
mov
or
popa
pop
push
adc
popf
aam
push
mov
xchg
int3
out
push
enter
sub
add
and
icebp
push
cmpsb
pop
add
ljmp
int
dec
fbstp
adc
pop
lock
sarb
lcall
xor
mov
rcl
cld
pop
push
sahf
xchg
std
clc
filds
mov
cmpsb
inc
mov
xor
fwait
adc
sbb
mov
inc
stos
fsubl
ss
cmp
mov
int
les
jne
lods
out
dec
movb
fcoms
dec
mov
push
les
test
outsl
call
push
enter
fisubs
fucomip
outsl
lea
pop
mov
cmc
cmp
lock
xor
jmp
sbb
rorb
mov
je
cmp
imul
jnp
jbe
lret
movsb
adc
jmp
sub
sub
push
jo
adc
xlat
fmulp
ljmp
shl
mov
movsb
je
or
icebp
xor
mov
out
mov
fisttpll
out
inc
push
adc
add
jmp
aam
movsb
fs
jg
pop
jo
popf
cmp
ja
push
xchg
stos
push
subl
inc
es
cmp
stos
lods
mov
dec
ficompl
dec
mov
xor
ss
out
xor
fdivp
mov
adc
iret
mov
push
shlb
lret
xbegin
inc
cli
mov
push
insb
mov
das
pop
arpl
sub
std
insl
adc
out
adc
repz
fisttps
dec
or
les
mov
test
sbb
pop
movsl
mov
loop
jo,pt
push
jge
fdivrs
mov
std
adc
jns
in
jnp
xchg
scas
jg
sub
es
mov
add
inc
fcomip
lahf
sbb
lea
mov
outsb
mov
lret
xchg
or
mov
mov
aad
lret
cmpsb
pop
arpl
sti
js
loop
adc
sub
xchg
lods
pop
ljmp
mov
mov
scas
jmp
pop
mov
outsl
and
das
int3
loope
cli
inc
fisubrl
add
sub
mov
or
xor
lcall
sbb
mov
movsb
vpsubd
addr16
std
stos
mov
jmp
movl
mov
and
mov
nop
push
es
mov
arpl
cmp
incl
inc
scas
xlat
stos
add
int3
ret
ja
sti
cmp
out
push
cmp
lcall
dec
mov
sub
and
dec
pop
mov
pop
aam
insb
mov
xchg
js
jnp
push
fdivrl
loop
je
dec
sub
sbb
loopne
pop
jp
lret
jecxz
mov
mov
cmp
mov
jo
jmp
mov
xchg
and
sub
dec
mov
inc
pop
out
add
shl
push
aam
idivb
lock
xchg
xchg
or
test
dec
pop
push
dec
loopne
out
shrb
xchg
cmp
sbb
inc
mov
pop
sub
into
lret
sarl
mov
out
fsubs
shll
incl
pushl
stc
rolb
pop
dec
les
jb
and
inc
pusha
int
pop
jmp
jl
lock
inc
ret
add
dec
mov
cli
fcoml
push
fwait
test
xor
fstl
adc
lcall
fidivrs
in
pop
add
push
mov
mov
loop
push
sub
mov
push
pop
cmp
mov
cld
pop
nop
aas
js
addr16
cmp
insb
xor
add
or
nop
sbb
push
pop
mov
or
fisttps
mov
test
and
or
int
mov
push
negl
jecxz
adc
std
dec
aam
js
scas
add
push
pop
imull
lret
lret
push
mov
xchg
inc
scas
js
cltd
xor
movsb
popa
mov
in
add
scas
dec
out
mov
hlt
fs
add
pop
pushf
xchg
mov
mov
loopne
adcb
adc
sbb
ficomps
aam
xchg
push
adc
cmp
fstpt
sub
push
movsl
fisubl
push
cmp
lds
jns
xchg
xor
idivl
inc
pushl
clc
xor
bnd
mov
inc
mov
decl
clc
dec
test
addb
clc
mov
popa
adc
inc
sub
icebp
call
dec
pop
push
pop
cmp
inc
or
stos
inc
mov
pop
sub
ljmp
adc
std
xchg
xchg
faddl
sbb
addr16
pop
mov
subb
rcrb
cmp
jg
mov
cmp
push
pop
pop
lock
add
incl
xchg
mov
aad
and
pop
mov
inc
and
jmp
dec
hlt
fwait
sbbb
scas
sub
arpl
cmp
push
mov
arpl
push
push
je
cmp
mov
inc
cmp
sbb
jmp
sbb
testl
jle
decb
and
jecxz
jmp
jg
inc
cld
xor
test
xchg
decl
adc
loopne
adc
adc
repnz
js
decl
mov
xchg
or
inc
xchg
inc
mov
test
pop
cmpb
pushf
rolb
mov
sbb
orl
mov
dec
pop
andb
sub
adc
std
cmp
cmp
sub
je
insl
mov
and
jg
shlb
scas
or
mov
xchg
jg
movsl
bound
fs
pushl
stos
mov
mov
outsl
out
inc
push
xchg
mov
mov
ljmp
jmp
sub
jle
xor
stc
dec
rol
xchg
inc
push
fdivl
decl
dec
int
mov
and
jmp
jno
cli
push
aad
or
push
call
mov
xlat
pop
inc
cmc
arpl
cs
pushf
fdivrs
cmp
cld
call
pop
sahf
cltd
sub
pop
cli
add
push
cmp
aaa
or
in
aas
sub
mov
insl
pusha
adc
dec
fs
test
pop
or
call
add
test
dec
lods
sbb
adc
dec
pop
cmp
leave
and
adc
jb
jg
loopne
in
push
aam
sub
sub
fnsave
cs
ret
ljmp
mov
sub
xlat
jle
shl
or
pushl
jno
and
push
repz
add
sub
outsb
jge,pt
cmp
mov
cmpsb
add
fisttpll
out
pop
out
mov
mov
rcll
push
lods
pop
cmp
push
sar
ljmp
dec
sub
xchg
and
push
fdivrp
push
lea
jg
jg
cld
testb
pop
inc
sahf
xchg
out
test
xchg
jo
add
jge
pop
xchg
sbb
cmpsb
bound
xchg
fsubrs
fildl
std
arpl
aas
fsubs
jg
pop
rcrb
rcrl
roll
lock
lods
push
push
adc
or
mov
call
adcb
loope
mov
idivb
call
jmp
adc
jb
test
cmpsb
adc
pop
pushl
mov
cs
dec
xchg
cli
dec
cmp
mov
fcmovbe
outsb
movsl
and
ljmp
mov
in
cli
or
push
mov
ret
sbb
add
cwtl
push
daa
mov
mov
pushl
int3
gs
adc
clc
aam
fadds
jp
jmp
add
push
and
lock
jns
test
and
or
mov
les
mov
inc
mov
clc
scas
dec
ljmp
pushl
imulb
fidivs
cld
sub
into
adc
jmp
and
sbb
repnz
jl
or
sti
in
lea
pop
push
jb
inc
ja
pop
adc
scas
loopne
cmp
mov
lods
test
icebp
stos
push
adcl
mov
fcmove
push
mov
pop
lock
sbb
mov
jle
cmp
rolb
mov
ljmp
cmc
gs
sub
jg
es
inc
in
and
iret
pop
and
testl
lods
cmp
jg
jb
enter
jle
arpl
and
mov
mov
fs
in
lcall
xchg
test
lock
push
push
les
nop
fidivl
sub
add
mov
decl
ja
jle
xchg
sti
sbb
mov
mov
sarl
pushf
lret
ljmp
mov
lods
aas
int3
aam
subl
decl
int
mov
loope
xchg
out
add
rorl
xchg
sahf
cmpsb
les
gs
sub
push
imul
popa
loop
in
or
dec
lock
fimull
lret
popa
dec
push
mov
call
add
pop
or
dec
mov
inc
out
fucomip
fsubr
xchg
inc
hlt
in
add
cld
pushl
lret
pop
cmp
sahf
inc
mov
cmp
mov
sar
decl
sub
jp
out
pop
in
push
fisttps
xchg
icebp
jno
sub
sbb
negl
jne
mov
scas
stos
jmp
lahf
jae
arpl
ja
nop
lock
aad
xor
jns
jg
inc
mov
mov
ljmp
jge
xor
adc
enter
mov
xchg
or
cwtl
mov
gs
pop
pop
push
add
bound
aaa
inc
shrb
call
fdivr
mov
push
jbe
pushl
inc
push
mov
cmpl
daa
vpcmpgtw
sbb
scas
std
fisttpl
sub
jmp
push
pusha
out
cmp
mov
push
loope
ret
mov
add
aaa
stos
sub
nop
repnz
imul
jp
incl
and
movsl
mov
push
scas
inc
filds
sbb
inc
outsb
out
mov
add
fisubs
das
mov
pop
sarb
stos
out
pushf
stos
movl
mov
add
and
clc
ljmp
jbe
adc
cmp
lods
jbe
jmp
xor
push
mov
jnp
imul
cs
cmp
push
cltd
nop
ljmp
out
nop
cmp
jl
push
jmp
cld
scas
push
out
lds
outsl
sub
scas
xchg
and
jnp
fld
lcall
test
pop
jecxz
adc
or
jl
sbb
mov
cvtps2pd
mov
jmp
lods
mov
or
adc
jle
roll
sbb
mov
enter
stos
sub
lcall
data16
pushf
shl
mov
inc
andb
stos
xor
sub
imul
mov
pop
lock
rolb
das
int3
xchg
inc
lds
clc
adc
mov
orl
call
dec
xchg
cwtl
hlt
mov
mov
scas
pop
push
adc
jno
xor
jg
mov
push
xchg
sbb
pop
xor
xor
mov
mov
xchg
fs
and
jno
std
adc
js
clc
mov
in
ds
push
iret
jp
scas
adc
mov
cmp
mov
xor
push
call
adc
mov
pop
ret
adc
pop
pop
mov
pushl
out
add
mov
push
test
xchg
insl
push
scas
inc
push
lret
aam
mov
incl
in
adc
data16
inc
mov
or
scas
push
push
arpl
jg
fldl2t
outsb
rcl
ds
lcall
les
xchg
lods
jno
cmpsb
movb
shlb
pop
fs
aam
sbb
mov
inc
jmp
out
ss
fsubrl
cmp
mov
jmp
decl
jl
sbb
sarb
pushf
mov
pusha
cli
jbe
xor
dec
mov
filds
into
aaa
sub
xchg
cltd
add
cli
js
cmp
cmp
nop
jb
arpl
pop
int
mov
adc
add
stos
jne
sti
ljmp
clc
adc
xor
ret
cltd
and
mov
push
jb
stos
mov
jecxz
out
lods
int
ret
push
pop
fs
icebp
aaa
loope
xchg
adc
test
adc
stos
icebp
lock
and
and
insl
loope
incl
or
test
mov
xchg
out
fwait
cmp
sbb
mov
lret
dec
enter
jecxz
cwtl
fcmove
cmp
sbb
mov
push
cmp
xor
call
lods
pop
pop
cmpl
sub
test
int3
shr
fimuls
jb
call
jl
inc
adc
addr16
mov
decl
xchg
inc
stos
fisttps
int
in
iret
hlt
out
stc
jb
push
push
sar
inc
incl
sub
mov
mov
push
insl
push
stos
lds
aas
out
cmpsl
jne
push
add
push
and
jmp
push
dec
sbb
cmp
mov
push
fnstcw
xchg
enter
inc
outsb
out
pop
aad
mov
pushl
lds
sub
sub
xor
pop
mov
jg
dec
stos
test
mov
filds
mov
lcall
sub
insb
mov
notb
xchg
xor
adc
inc
fists
fisttps
or
in
js
cmc
das
out
cltd
jp
decl
sub
xchg
not
jmp
cmp
xor
aaa
xchg
add
fmuls
sbb
hlt
daa
jb
inc
sub
clc
xchg
arpl
cmp
push
enter
fistps
cs
inc
push
shlb
mov
inc
and
mov
cmpsb
jl
stc
incl
repz
and
test
inc
aas
rolb
mov
rcll
ljmp
scas
cld
movsb
outsb
and
in
andb
in
xor
inc
push
sbb
push
jno
call
xchg
inc
inc
aam
sbb
add
lock
hlt
mulb
clc
decl
test
dec
int3
pop
add
cmp
jge
fldl
xor
xlat
inc
aad
lock
dec
repnz
ljmp
adc
xchg
int
imul
mov
call
pop
cmp
push
mull
adc
fld
sub
popf
sbb
add
sbb
in
pop
hlt
dec
xor
inc
sqrtps
pop
jge
cmp
dec
pop
sbb
mov
dec
mov
ljmp
push
jg
fsubrl
fbstp
cmp
pop
mov
mov
rolb
negb
sub
scas
add
jge
and
and
lcall
nop
cmp
int
in
rcl
cli
jp
mov
mov
es
movsb
fdivrl
jl
push
aas
and
fistpll
cwtl
xor
fwait
cmp
inc
mov
jno
jbe
inc
xor
jo
lcall
sub
les
cmc
pop
dec
js
adc
push
shrb
pop
in
and
ljmp
inc
xlat
and
aad
pop
or
call
iret
cmp
decl
push
jae
add
push
jne
stos
jmp
fnstenv
out
adc
lahf
or
sub
cmp
out
sub
scas
and
cmp
jmp
pop
daa
dec
cmpsl
push
lcall
and
sbb
outsb
sbb
ret
or
in
cmp
pop
xor
gs
fsubl
in
aad
push
xchg
js
push
popf
cld
addr16
pushl
cmpsb
pop
jnp
push
into
scas
cmp
push
and
push
nop
mov
sbb
xor
ret
mov
stos
mov
push
pop
pop
mov
xor
rclb
scas
enter
loope
leave
cmpsb
mov
addr16
fcomip
iret
daa
dec
adc
sub
mov
or
xchg
pop
fs
orb
call
jg
lcall
stos
mov
fmull
inc
movsl
stos
sbb
fsubrl
mov
cmp
mov
insb
sbb
fsub
xor
decl
out
adc
test
repnz
xchg
jl
jg
fwait
in
aaa
jg
push
out
cmpl
incl
pop
out
cli
jmp
jmp
das
ljmp
mov
scas
fdivs
pop
addb
mov
jmp
call
out
push
mov
mov
mov
in
mov
dec
adc
ss
call
and
or
hlt
add
mov
lock
pop
dec
mov
sti
outsb
or
incl
xchg
clc
dec
mov
addr16
subb
js
loope
or
ljmp
xchg
idiv
stos
inc
clc
neg
jae
push
mov
dec
leave
sub
lcall
decb
cmp
dec
repz
xchg
icebp
and
push
stos
jg
dec
mov
jle
mov
mov
push
aas
jns
adc
add
fnstcw
pop
push
stos
jl
mov
pop
imul
movsl
rcll
stos
cmpb
insl
js
mov
sub
cltd
enter
push
sahf
xchg
decl
in
clc
sub
outsb
mov
mov
pop
ret
xchg
pop
mov
mov
dec
pushl
sub
loopne,pn
mov
lcall
jl
jmp
push
enter
cld
stc
push
aas
cld
sets
aaa
pop
stos
or
or
push
add
incl
pop
in
jb
inc
and
notb
dec
cmp
jno
lds
insl
int3
mov
jp
call
cmpsl
or
stos
jo
loope
xchg
and
cmp
sub
mov
xor
mov
and
jmp
js
incl
pushf
sbb
sti
jge
fwait
data16
imul
mov
or
les
sbb
ljmp
in
ja
mov
sub
jns
adc
adc
lcall
ljmp
inc
pop
and
js
inc
push
push
fisubs
mov
mov
sar
call
fs
sahf
inc
cmp
mov
repz
cltd
push
dec
fcomip
push
imul
adc
xchg
inc
mov
and
repnz
xchg
lcall
sbbl
xlat
jae
mov
or
arpl
aad
mov
test
outsl
daa
cltd
mov
incl
and
mov
dec
or
ret
scas
adc
sbb
ljmp
push
test
mov
lcall
xchg
xchg
sub
lea
mov
loope
decl
mov
aam
ret
in
or
js
push
sar
pop
jl
jnp
in
inc
mov
xor
xchg
xchg
adc
mov
in
jmp
loop
sub
int3
adc
fwait
and
xchg
lcall
jl
in
lods
repnz
inc
nop
test
aad
fsubp
jmp
xor
pop
nop
jb
cld
lcall
mov
fnsave
sbb
cmc
cmpsb
arpl
mov
jbe
jge
ret
mov
incb
add
jecxz
xor
sarl
or
cli
jmp
cmp
sti
mov
jge
mov
imul
push
dec
add
cmp
mov
cld
jp
mov
add
mov
jno
notb
lods
lods
fstl
and
sbb
lret
mov
xchg
pop
mov
sbb
pusha
fnstenv
gs
mov
ss
add
xchg
jg
fsubl
outsb
mov
add
sbb
sar
in
scas
push
int3
ljmp
cld
cld
adc
ds
rcl
jg
ljmp
push
cmp
ljmp
aad
cwtl
pop
push
push
pop
enter
adc
addb
jl
cmpsl
add
push
mov
push
sbb
fdivrl
inc
ficompl
adc
pop
cmp
or
insl
in
ljmp
dec
add
je
test
mov
jg
repz
jl
sar
lcall
fsubs
ja
addr16
xchg
ss
pushf
xchg
dec
out
loope
icebp
push
sub
add
jle
scas
test
ljmp
mov
or
in
daa
jmp
insl
repnz
fdivl
je
test
ret
in
fcoms
aad
lock
jne
and
push
loopne
fstpl
fs
movsl
pusha
and
call
inc
mov
outsb
push
jle
mov
mov
call
movsb
inc
and
sub
pop
and
mov
jbe
arpl
test
nop
push
std
jmp
add
jb
js
jno
push
mov
jb
sub
test
add
push
jecxz
or
xor
daa
and
inc
and
pushl
sub
test
push
push
and
jmp
cmp
xchg
stos
iret
adc
jmp
jns
mov
addr16
icebp
dec
rcl
aad
mov
jb
xor
sub
ljmp
cli
stos
movups
jo
pop
jp
jecxz
xchg
mov
pushl
das
aaa
aaa
sub
pop
cmp
jns
sbb
ljmp
fs
insb
lret
inc
mov
inc
mov
add
fcmovnu
jnp
int
mov
adc
pop
and
leave
mov
incl
sarl
add
push
lds
fidivl
xchg
lock
icebp
decl
outsb
aas
inc
lret
rclb
sub
inc
int
inc
sahf
adc
push
mov
jp
and
out
pop
lods
addl
fistl
pusha
fs
and
mov
lcall
cld
push
bound
xchg
int3
in
rcrb
inc
pushf
sbb
mov
push
jmp
pop
jmp
sbb
jge
sahf
addr16
inc
daa
incl
push
icebp
push
sbb
sbb
pop
push
jae
js
pop
jb
mov
jmp
roll
divl
negb
mov
or
inc
jg
insb
es
mov
sub
pop
enter
std
cmp
aaa
rcl
pushf
adc
frstor
js
ljmp
fcmovb
loopne
sahf
dec
je
inc
popf
jo
repnz
popa
fbld
xor
and
mov
movsl
fcoms
fildll
jmp
nop
pop
inc
pop
cmpsb
aad
adc
mov
stc
movsb
or
cmp
roll
or
lcall
sbb
dec
ficomps
dec
xor
mov
into
inc
mov
jl
sbb
out
push
adc
xchg
fsts
push
stos
call
push
xorl
ss
or
inc
cmc
lcall
testl
lcall
dec
iret
adc
and
mov
aaa
ja
cmpsb
jmp
sub
inc
pop
shlb
sbb
pop
cmp
mov
cs
jecxz
shll
cmp
lds
scas
jne
movsl
mov
mov
addr16
mov
inc
mov
es
decl
cmp
loopne
mov
add
les
sbb
clc
mov
in
jp
sti
ss
inc
fistpll
jo
add
pop
rolb
call
jb
test
inc
insw
shrl
stos
mov
fwait
dec
mov
sub
outsl
scas
cmpsl
pop
dec
sub
cmc
ljmp
cli
or
jns
out
xchg
sarl
lcall
lret
cmp
xor
imul
mov
push
arpl
inc
arpl
push
call
dec
daa
das
mov
sub
inc
add
rcl
or
js
popa
cli
inc
cmc
push
in
cmp
andl
push
outsb
lret
jmp
mov
aaa
sub
ret
pop
in
loope
into
movsb
out
xorb
gs
sub
dec
or
or
dec
pop
inc
mov
lcall
cltd
adc
cmp
pop
lods
cwtl
add
add
in
pop
jg
mov
es
icebp
mov
movsl
icebp
xchg
inc
xchg
leave
addb
ret
mov
incl
push
cs
test
rol
loope
jecxz
inc
jae
ss
sbb
ror
mov
lcall
sbb
pushf
stos
inc
mov
add
ja
jmp
adc
jb
cmp
push
pop
dec
push
push
jp
sub
mov
and
in
add
pushl
bound
pop
pushf
jb
jmp
add
test
std
xor
jae
mov
out
xchg
sub
cmp
pop
or
sbb
jmp
imul
leave
and
jp
out
xchg
rorl
mov
push
dec
daa
lahf
adc
cmc
in
pop
sti
inc
frstor
add
lods
sub
xor
mov
popf
sbb
ja
cmpsl
imul
je
stos
dec
idiv
decl
inc
cmp
loop
inc
mov
jle
sub
mov
movsb
sub
mov
inc
insb
mov
stc
add
jecxz
sbb
pop
and
add
cmp
cmp
add
or
icebp
pop
imul
inc
fsubrs
ljmp
incl
shlb
xchg
adc
cltd
inc
scas
insl
sub
cld
cld
jl
movsl
jb
incl
or
mov
outsb
popa
sahf
pop
xor
add
arpl
xchg
inc
sub
loope
call
xchg
pop
repz
mov
sbb
pop
jo
mov
sbb
aas
test
lcall
incb
xor
les
adc
test
cmp
pop
cmc
movsb
jle
sub
ret
fidivl
push
arpl
dec
aas
jp
andb
ss
inc
mov
mov
add
add
fildll
push
and
push
xchg
repnz
jns
xchg
out
mov
popf
xchg
cwtl
jg
rcl
leave
insb
loopne
inc
repnz
ja
jmp
in
rclb
and
out
adc
lods
ss
ud0
stos
ficomps
cli
fs
jl
lods
hlt
and
or
xor
cmp
cli
pushl
mov
repnz
in
or
inc
movl
adc
cmp
lock
dec
movsb
je
insb
mov
xor
inc
cld
and
mov
imul
jg
out
movsb
in
iret
aaa
push
call
out
add
loope
cmc
in
data16
jg
fcompl
js
push
push
sahf
and
and
fisubs
sub
mov
imul
lcall
sti
jne
xchg
repnz
pop
jo
xchg
lods
rcr
nop
ffreep
jno
ficompl
mov
mov
add
mov
push
and
call
cli
leave
lahf
push
dec
enter
jae
in
in
shrl
pop
ljmp
mov
or
sahf
loopne
lcall
jo
adc
rolb
ret
movsl
jo
or
pushl
cmpsl
into
addr16
lock
xchg
mov
scas
pop
xchg
ljmp
cwtl
mov
test
into
fmull
je
xorb
call
andb
movsl
dec
sbb
sub
and
mov
call
dec
rolb
loopne
adc
out
push
into
pop
movsl
fbstp
outsb
fcos
inc
pop
clc
xchg
arpl
sbb
and
outsb
or
push
ljmp
ljmp
leave
add
or
sbb
adc
enter
adc
and
and
dec
sti
ljmp
int3
dec
cmp
out
stos
in
xchg
lods
leave
push
inc
pop
jbe
mov
add
ss
rcrl
out
mov
mov
in
inc
js
cmp
mov
cli
sbb
stos
sub
cmpsl
dec
addl
xor
jg
lcall
sbb
xchg
push
add
and
rcll
add
and
or
jmp
imul
dec
nop
inc
daa
jne
les
out
push
pop
jmp
xchg
ja
dec
xor
ss
inc
mov
push
mov
jmp
clc
jbe
sbb
mov
dec
mov
mov
jnp
inc
imul
mov
lret
clc
jmp
mov
in
cmp
cmp
ja
xchg
les
pop
and
pop
aaa
dec
sbb
mov
jae
call
push
mov
xor
in
push
pop
push
mov
or
push
xchg
in
mov
es
ljmp
mov
dec
xchg
cmpl
push
ret
jl
ret
cmp
xchg
add
fildll
mov
xchg
jmp
mov
arpl
ljmp
fdivrs
pop
not
lahf
push
cmp
aaa
movsb
ljmp
movsl
pop
std
push
sahf
mov
lcall
les
bound
xchg
aas
xor
sub
cmp
mov
pop
and
jb
sbb
and
xor
sub
fcomip
das
sbb
ja
cltd
nop
jno
inc
popa
data16
mov
and
jmp
aaa
mov
incl
push
arpl
cld
ret
push
inc
pop
add
fistpll
xchg
mov
fldenv
xchg
lcall
cmp
xor
pop
xlat
in
jle
lahf
jae
in
sub
xchg
mov
outsb
ljmp
jno
jns
in
fadd
xchg
inc
scas
insb
jl
and
push
mov
jle
add
je
aas
incl
or
or
push
into
mov
clc
or
mov
and
sbb
ficomps
insb
mov
pushl
hlt
mov
adcb
fcmovnbe
mov
in
mov
ja
dec
and
call
xchg
or
mov
jmp
mov
cmp
inc
sti
sbb
pop
mov
sbb
mulb
push
mov
push
das
cmpsl
and
mov
mov
xchg
mov
xchg
enter
inc
mov
repz
daa
add
cmp
dec
ret
dec
dec
gs
pop
pop
incl
pop
clc
sub
xchg
hlt
test
inc
aam
test
xchg
adc
sbb
mov
mov
imul
rcrl
test
shlb
or
add
inc
outsl
xor
lcall
out
pop
fstl
mov
add
xor
dec
les
out
decl
ret
xor
jb
testb
mov
fsubp
push
out
mov
mov
inc
xor
in
sub
jno
mov
stc
xor
push
nop
mov
scas
call
in
adc
pop
dec
jl
gs
sbb
mov
movl
repnz
mov
insl
loopne
shrl
ljmp
jg
enter
push
push
and
loop
lods
in
push
test
xor
repnz
inc
cld
ljmp
xchg
xchg
fs
add
gs
fmul
and
inc
jmp
jg
push
pop
scas
mov
aaa
stc
loope
dec
adcl
mov
add
jmp
dec
adc
xor
pushf
int3
mov
test
in
mov
push
repz
push
bound
in
push
xor
mov
cmpsb
insl
or
in
sub
inc
and
insl
add
and
push
adc
push
mov
repnz
or
mov
lret
dec
repnz
adc
adc
aam
or
xchg
xor
out
push
push
mov
dec
push
inc
lds
mov
scas
dec
repnz
call
cmc
or
pop
mov
rorb
jge
lods
mov
xor
or
icebp
fwait
cmp
jp
mov
fstpt
cmp
jmp
aam
shrl
cld
test
cmp
push
add
gs
movsl
or
jg
or
jno
dec
push
xor
jbe
hlt
fwait
sub
adc
iret
es
adc
add
push
xor
or
inc
pusha
testb
or
cld
dec
dec
gs
cmpsb
mov
ljmp
mov
push
daa
or
daa
je
mov
jo
adc
dec
incl
lock
pop
popf
inc
stos
or
and
push
push
gs
call
cmc
inc
dec
ds
outsl
dec
arpl
jns
imul
jns
cmp
std
cltd
ss
decl
and
xchg
jecxz
mov
dec
xor
inc
loopne
gs
push
scas
lods
and
push
mov
sti
scas
push
mov
fstl
scas
clc
imul
xor
fbld
ss
mov
jle
dec
pop
add
daa
es
push
popf
push
mov
loope
jmp
jb
test
jb
adc
bound
and
mov
js
cli
add
sti
and
xchg
xchg
xchg
push
mov
std
ljmp
cmp
mov
iret
fistpll
mov
jl
insb
xchg
pushl
mov
sbb
jmp
mov
xchg
mov
dec
insl
dec
out
lods
pop
push
sar
lcall
sbb
mov
push
xchg
mov
push
sub
inc
inc
add
aaa
data16
mov
mov
push
sbb
scas
jmp
or
lcall
mov
icebp
lcall
and
jno
bound
pop
jge
xor
clc
aas
jbe
lcall
fisttps
fwait
adc
cmpb
mov
xchg
pop
xchg
ret
cmpsb
ret
fbld
ljmp
jmp
cmp
lods
cwtl
ret
jg
inc
scas
pop
lret
dec
setle
faddl
mov
push
sarb
and
mov
inc
insb
test
xor
mov
fstps
cli
mov
dec
push
inc
ficoml
sbb
cmp
xchg
or
jg
add
loopne
es
test
out
cmp
popf
add
scas
sub
mov
aam
pop
and
mov
jo
and
lds
cmp
mov
xor
outsb
aas
enter
xchg
ljmp
xor
mov
push
pop
sub
mov
lods
dec
sub
imul
aas
mov
lds
push
lahf
push
add
adc
out
jmp
mov
mov
mov
dec
push
xchg
inc
xchg
lahf
bound
sbb
xor
dec
mov
decl
add
push
inc
push
lahf
insl
in
fbld
out
mov
or
adc
or
test
decl
xchg
xchg
pop
into
shlb
dec
pop
pop
fistl
dec
je
lock
add
sbb
loop
fdivrs
add
jo
mov
jg
inc
cmpb
sub
xor
mov
flds
fcmovb
ljmp
cmc
adc
popf
or
test
clc
mov
dec
iret
inc
jg
cmp
fiadds
push
xchg
test
or
psubw
call
sbb
into
inc
int3
cwtl
and
jae
cld
stos
sub
mov
xchg
xchg
sbb
repnz
mov
or
xchg
push
mov
decl
clc
fs
cmpsb
out
fdivrl
cmp
stos
stc
loopne
out
pop
outsb
mov
pop
rorl
jl
mov
aaa
inc
into
xchg
ja
sub
push
lods
fs
incl
icebp
dec
xchg
fnstenv
sub
stos
mov
cmp
inc
lret
sbb
xchg
dec
jle
jl
pop
clc
incl
cmp
and
or
push
repz
mov
in
loopne
adc
pop
cld
outsl
faddl
xor
fwait
sub
inc
adc
dec
imul
sar
pushl
dec
mov
mov
lea
and
xor
rorl
mov
add
aad
jg
xchg
fdivl
cld
dec
push
loopne
stos
adcl
mov
test
clc
cmp
lcall
data16
lods
lds
and
sub
stc
jnp
xorb
inc
sbb
mov
sub
mov
ljmp
js
stos
repz
dec
ds
jbe
inc
jg
mov
adc
cs
mov
call
mov
jb
incl
lahf
out
jl
jle
mov
mov
sahf
and
pusha
inc
fwait
cmp
xor
or
sub
and
enter
incl
fdiv
insl
inc
sub
add
shlb
fmul
mov
xor
loope
pushl
inc
push
scas
daa
jmp
push
ds
dec
repz
push
xor
es
lock
mov
pop
cld
jmp
inc
ja
gs
ficompl
and
sub
cli
int3
mov
lock
incl
jecxz
fstp
js
or
add
cmp
leave
clc
cmpsb
fbld
xchg
push
lea
cmpl
inc
jmp
xor
xor
jg
push
pop
push
aad
push
adc
cmp
pushl
xor
jns
sarl
pop
int
or
ja
notb
scas
pop
push
mov
dec
dec
cmp
stos
outsb
add
xchg
pop
icebp
mov
sub
dec
incl
xlat
shll
gs
cmp
or
xor
adc
adc
arpl
pop
negb
arpl
ljmp
es
xor
mov
lock
xchg
jle
add
scas
lret
mov
pop
jmp
pushl
mov
push
sbb
xchg
das
fiaddl
jl
jp
xchg
xchg
rcrb
sub
ret
xchg
and
and
pop
pop
inc
jge
sub
jle
push
lcall
inc
pop
lods
ljmp
jns
sti
push
mov
out
jl
fadd
ss
cmovno
stc
insb
in
dec
mov
ret
in
repz
outsl
jge
push
fwait
or
cli
pushl
and
mov
hlt
cmpb
push
enter
and
mov
sahf
add
leave
sbb
mov
sbb
repz
push
sbb
ja
into
add
sahf
call
jl
mov
orl
mov
push
adc
inc
fstps
lcall
and
inc
out
nop
add
add
les
call
in
es
or
nop
sar
pushl
call
sub
push
test
mov
push
loopne
xchg
adc
clc
shrl
incl
adc
push
adc
fxtract
sub
imul
fwait
mov
mov
dec
dec
or
pop
or
jg
add
add
ret
xchg
out
pop
clc
mov
incl
jmp
sbb
xchg
jnp
inc
mov
stos
int
repnz
data16
mov
repz
ljmp
lret
sbb
fidivl
scas
fisubs
cld
xor
cmpsl
dec
xorl
pop
movsb
shll
xchg
lods
int
xchg
stos
notl
out
push
xchg
stos
add
das
mov
mov
sbb
pop
cmpsl
mov
lret
add
mov
push
adc
xlat
stos
mov
xchg
out
clc
pushl
pop
and
outsb
aad
ficomps
lret
mov
test
xor
test
incl
mov
push
dec
mov
pop
bound
inc
sbb
movsb
addr16
dec
jbe
add
mov
ret
rclb
xchg
ret
jecxz
fnstsw
jmp
sub
inc
xor
lock
and
js
xor
mov
ljmp
mov
sub
pushl
inc
xor
jl
mov
popf
aam
dec
nop
and
ss
test
mov
adc
movsb
fiaddl
pop
cmp
push
sbb
xchg
xor
rolb
ljmp
sbbl
dec
mov
test
sbb
call
mov
imul
add
dec
lock
push
push
mov
stos
std
pop
scas
xchg
fs
imull
movl
push
pop
mov
jnp
mov
mov
ficompl
lcall
sahf
jg
adc
stos
ds
popa
lret
repnz
inc
gs
aam
add
or
cld
decb
popf
inc
cltd
repz
xchg
inc
xchg
dec
pop
fwait
and
fsubl
cmp
jle
outsl
ficompl
aam
in
pop
insl
sbb
sti
out
lods
sub
int3
mov
sarb
sti
and
sarl
loope
stc
imul
and
inc
fst
sbb
call
hlt
test
cmp
iret
jl
imul
or
decl
call
push
lods
mov
stc
mov
cld
pushf
mov
mov
test
adc
mov
and
test
repz
pushl
jmp
loop
adc
adc
pop
and
cli
gs
sbb
aam
xchg
cmpl
xchg
subl
dec
adc
frstor
rcrb
xor
cltd
fidivs
scas
cmpsl
insb
incl
test
mov
aas
cmp
ret
shrl
or
scas
cmp
jb
jmp
cmp
inc
incl
mov
arpl
sarb
xchg
aas
ret
push
fisttpl
fcmovnbe
and
pop
jbe
movsb
out
lods
cmp
ret
jae
jecxz
es
flds
sahf
das
stos
xor
test
sar
incl
lock
jle
jg
xor
dec
cmp
adc
xchg
ja
pop
popf
lret
lahf
stos
cmp
ds
ds
fisttps
mov
sbb
dec
cmc
sbb
push
call
mov
lret
rcrl
stos
orl
jb
mov
mov
adc
sbbb
repz
mov
jg
push
dec
jp
sub
mov
leave
cli
sub
shl
mov
mov
pop
cmp
cs
lods
dec
cmpsl
push
adc
mov
fbstp
add
incl
pusha
mov
cli
rorb
mov
dec
or
into
movsb
jno
jb
js
icebp
sarb
push
enter
outsb
outsb
sahf
call
rcrl
mov
cmp
imul
dec
xor
jg
mov
ja
repnz
sub
daa
dec
in
jmp
mov
hlt
mov
jg
pusha
mov
iret
int
fstpt
sbb
mov
cmp
push
aas
xor
dec
add
jo
stc
jnp
fdivs
pop
inc
jno
es
push
jmp
ficoml
jg
negl
and
repz
xchg
into
pop
jno
cmpb
scas
adc
pushl
cld
xor
or
lock
ljmp
sbb
cld
lcall
push
sahf
mov
jecxz
pop
xchg
add
xor
inc
test
add
out
int3
push
jle
imulb
ret
ret
in
das
and
incl
jns
jnp
fistl
sbb
mov
xlat
adc
xlat
nop
dec
mov
mov
mov
loopne
int3
pop
xchg
mov
cmp
test
sub
lds
incl
test
in
lods
push
jo
decl
ss
pop
inc
orl
mov
or
scas
icebp
inc
pop
das
clc
jmp
cmp
cmpsl
dec
xorl
int3
or
jno
pushl
pop
xor
push
mov
add
lcall
add
dec
sar
aaa
das
leave
jp
in
cltd
xor
push
nop
jae
cmc
rcr
movsb
andl
loop
lods
stos
pushf
dec
mov
cmpsl
sbb
fdivs
mov
push
int
ret
imulb
jbe
in
xor
cli
inc
sbb
push
mov
adc
xchg
lods
or
xchg
insb
mov
xchg
xor
ljmp
push
lods
cmp
adc
add
out
clc
ds
insl
sti
vmwrite
jne
mov
rcrb
add
insb
cmc
inc
ja
decl
wbinvd
jle
and
adc
xor
sub
sbb
cmp
dec
xchg
mov
imul
jmp
dec
notb
mov
mov
movsl
push
in
mov
cmp
stos
mov
cmp
cmp
add
push
sbb
or
mov
ljmp
sub
sbbl
or
mov
fsubrs
mov
call
in
icebp
jg
push
xchg
bound
rorb
jge
cmp
ret
insl
in
pop
sbb
push
test
aaa
jecxz
lcall
sub
cmp
jg
jmp
jge
mov
jl
cld
xor
pop
mov
pushf
idivb
mov
xchg
rcr
les
and
out
les
incl
dec
xchg
arpl
add
movsb
mov
pusha
mov
jle
sub
xorl
into
lret
cmp
push
and
or
cmpsl
lret
xor
cmp
enter
jb
and
jmp
lea
mov
dec
mov
xor
popa
dec
jecxz
cwtl
jno
jle
inc
ljmp
call
scas
adc
dec
push
popa
std
gs
out
jns
inc
fwait
xor
push
jg
hlt
test
xor
jbe
sbb
mov
sub
xor
jmp
iret
into
pop
bnd
int3
insb
pop
fildl
fidivl
jo
dec
lcall
fwait
sbb
incl
aad
aas
and
stc
mov
aas
cmp
xor
inc
in
push
pop
dec
lahf
mov
pop
pop
jmp
call
test
pop
jb
icebp
mov
popa
movsb
cmp
repnz
js
xchg
sahf
dec
in
sbb
sub
lcall
jo
aad
xorb
mov
dec
adc
test
dec
push
sahf
mov
out
dec
aas
outsl
mov
add
clc
stos
pop
or
lcall
imul
fnstcw
arpl
or
test
cmp
dec
outsb
bound
shlb
iret
rorb
xchg
and
xor
pop
aad
ja
call
jo
xchg
js
dec
int3
out
and
test
inc
arpl
dec
shlb
xchg
add
mov
cmpsl
stos
jl
aas
jne
sub
xchg
sub
pushf
push
mov
dec
dec
sbb
scas
xor
sbb
test
addr16
subl
enter
mov
sbbl
movsb
xchg
aad
pusha
andl
in
and
addl
push
mov
arpl
mov
shrl
iret
aaa
or
inc
push
ss
mov
jns
add
call
iret
pop
ja
movb
push
mov
xor
sbb
insb
nop
call
jle
pusha
pushf
xacquire
dec
push
leave
add
mov
aad
mov
in
mov
decl
cmp
push
ja
mov
ds
imul
stos
mov
adc
in
dec
adc
ljmp
inc
lock
jecxz
jp
addr16
mov
sbb
repz
mov
aam
loop
rolb
and
xor
aaa
jb
fidivrl
incl
and
dec
or
xor
cmp
adcl
mov
xor
ljmp
add
scas
aad
imull
inc
es
test
lds
enter
ret
ud0
outsl
cli
inc
mov
push
subl
sub
adc
dec
jb
push
sub
ja
lods
xor
std
insb
and
repz
pop
sti
cmp
or
jns
popf
aas
push
int
dec
imul
sub
pop
mov
lret
fistps
rcrb
rorb
mov
mov
dec
mov
mov
inc
mov
inc
jl
or
nop
mov
jno
inc
jg
jmp
jns
js
call
pop
decl
aam
sbb
xchg
pop
es
andl
call
idivl
lds
bound
cwtl
adc
clc
mov
pop
add
jno
aam
cld
pop
pop
testl
repnz
outsb
xor
fadds
and
mulb
decl
adc
mov
les
jle
cmp
incb
call
aaa
pop
pop
push
cmp
add
cmp
jno
stc
or
pop
and
push
and
adc
adc
ljmp
xor
in
dec
scas
mov
and
movsb
cld
push
fbld
mov
pop
insl
adc
ljmp
mov
ret
or
mov
add
pslld
sub
jno
outsb
sub
push
lcall
in
jle
lods
in
ror
or
mov
mov
add
sahf
pop
fmul
push
test
pop
add
pop
or
or
test
inc
xchg
or
lcall
loope
push
pop
lock
fwait
enter
jmp
xchg
clc
mov
cmp
lret
leave
out
pop
jmp
inc
pop
stos
int3
jmp
jecxz
inc
ds
jg
stc
sbb
pop
sti
mov
repz
inc
push
add
mov
mov
xchg
fcomp
pop
cmp
push
inc
dec
sub
mov
dec
pop
mov
popf
incl
test
pop
inc
sbb
or
loope
notb
int3
pushf
xchg
push
insl
loop
inc
lret
sbb
jg
ljmp
inc
insl
mov
ficoms
and
or
shr
movb
pop
add
jmp
xchg
mov
add
and
jmp
outsl
add
sar
dec
ss
mov
decl
mov
fcompl
cmc
push
pop
imul
lcall
sbb
pop
mov
pop
sbb
mov
mov
jmp
push
loopne
call
pop
mov
dec
lret
inc
mov
std
jl
nop
or
cmp
inc
hlt
dec
mov
adc
rorl
jo
sub
fstl
mov
cli
daa
cltd
aaa
jl
mov
mov
iret
dec
mov
xlat
jl
inc
test
mov
or
in
nop
and
inc
popa
lret
or
je
ds
pushl
pop
mov
dec
inc
jne
lahf
xchg
popa
sub
fistpll
xchg
mov
sahf
and
scas
test
cmpsb
adc
jb
adc
aad
jbe
shlb
fisubrs
push
xchg
xchg
lock
mov
pop
les
cld
adc
jo
dec
mov
jp
mov
adc
pop
push
pushl
cmp
ret
jnp
jbe
mov
ret
out
dec
mov
test
jg
aas
sbb
insl
adc
ljmp
xor
lret
cltd
mov
pop
and
std
push
or
jne
decl
cld
cmpsl
cmp
jecxz
inc
daa
push
mov
inc
stos
xor
add
pop
stc
bound
lock
lcall
jmp
addr16
fildl
jg
stc
ja
xor
insb
mul
mov
clc
fsub
push
aaa
jns
push
pop
movsb
outsl
ja
add
popf
leave
pop
decl
pop
mov
push
cmp
and
xchg
or
mov
xchg
ljmp
pop
or
push
push
loope
repz
inc
popf
ret
adc
push
pop
xchg
inc
inc
ljmp
pop
test
les
mov
push
inc
mov
mov
ljmp
push
cmp
mov
jge
mov
jb
insl
inc
hlt
pop
push
push
movsb
pusha
daa
imul
rcl
sub
cmp
lea
in
daa
ret
out
sbbl
add
clc
incl
jg
fisttps
in
xor
or
xchg
push
adc
out
ljmp
xchg
push
insb
rclb
popl
orb
sbb
sbb
cmp
add
loop
cmpsl
adc
js
mov
in
pop
pop
aam
sbb
fisttps
dec
mov
push
push
cmp
call
lcall
movb
sarb
jb
rolb
fcmovb
dec
sahf
jmp
sbb
inc
jb
aam
xchg
mov
pop
or
test
fs
mov
jns
and
shll
mull
outsl
fildl
ljmp
rorl
mov
into
mov
dec
mov
pop
push
sub
jbe
push
add
fsubs
pop
ficoms
enter
push
push
aad
call
cmp
lret
xor
jb
push
sbb
shlb
sbb
jg
negb
repnz
xor
jge
test
cmp
and
sub
mov
push
loopne
testb
into
dec
test
mov
jae
popl
sbb
mov
jmp
hlt
xchg
mov
mov
decl
inc
insl
mov
cmp
cli
jns
testl
shl
test
outsb
pushl
popa
and
push
inc
fcmove
mov
mov
xchg
push
call
add
and
out
jnp
xor
push
test
je
jo
mov
mov
mov
push
mov
scas
fs
repnz
adc
call
xchg
push
testb
xor
sarl
clc
outsb
hlt
xor
pusha
ficomps
lock
push
std
ja
jnp
add
sbb
pushl
lcall
rcll
pop
mov
push
inc
fidivrl
push
daa
lock
lock
cmpb
sbb
gs
stos
loop
lcall
or
insb
mov
bswap
lea
mov
push
fs
mov
inc
stc
out
ljmp
cli
loopne
hlt
pushf
mov
mov
dec
pusha
inc
jb
imul
sub
mov
pop
mov
inc
jecxz
divb
test
ret
lcall
jno
into
jns
adc
icebp
aam
jmp
daa
jecxz
dec
lods
cli
mov
sub
sub
mov
popf
adc
sbb
cmc
call
sbb
scas
lea
nop
lds
xchg
and
imul
ljmp
cli
cmp
sbb
addr16
mov
jne
cmp
call
jnp
sbb
inc
imul
iret
inc
flds
dec
xor
xchg
add
push
mov
mov
and
push
sbb
mov
dec
push
rolb
pushl
push
rclb
mov
lods
pop
cld
je
jge
dec
dec
add
xchg
decl
cmpl
decl
ror
iret
add
mov
popf
je
and
pushf
xor
mov
xchg
lret
xchg
int3
xchg
pop
inc
jmp
rorl
int3
pop
ljmp
dec
fwait
inc
clc
cmp
or
pop
pop
stc
mov
fadd
insl
inc
adc
push
push
les
dec
or
mov
lcall
lcall
icebp
xchg
int3
mov
xor
idiv
xlat
sbb
dec
cli
mov
ss
and
mov
adc
mov
out
mov
out
lcall
push
enter
lods
fisttpl
mov
push
call
cli
loopne
mov
pop
js
icebp
dec
pop
push
mov
mov
xchg
sbb
out
and
inc
dec
mov
arpl
arpl
push
clc
ljmp
sub
jae
leave
push
stos
data16
sub
aaa
addl
xor
sbb
push
or
bound
pushl
int3
mov
add
jne
jecxz
roll
mov
and
fdivrp
jno
outsl
cli
pushl
pushf
push
jne
shrb
jge
popa
inc
and
es
pushl
push
xchg
mov
xchg
mull
pop
push
sti
cmp
and
push
pop
lahf
jns
pop
rol
pop
fisubs
call
mov
test
test
and
sbb
fwait
and
fbstp
bnd
cli
es
sahf
dec
mov
mul
stos
mov
ret
lahf
sti
xchg
push
sbb
mov
jns
xchg
cltd
addl
sahf
cmp
out
les
cld
mov
mov
jl
in
pop
xchg
js
ds
ljmp
decb
push
iret
lcall
das
in
int
add
mov
dec
mov
cmp
incl
xor
adc
data16
add
xor
in
dec
xchg
pop
add
incl
in
xor
sbb
or
adc
loope
fdiv
pop
loope
outsl
xchg
pop
add
call
mov
mov
adc
es
jg
ljmp
dec
int3
adc
clc
ret
movsb
loopne
and
fwait
movsl
call
icebp
jne
jae
push
sahf
ja
mov
jns
insl
stos
fists
call
pop
xor
fmuls
lods
pop
cli
and
xchg
call
push
push
mov
pop
mov
sbb
cmpsb
enter
adc
sahf
xchg
aad
jbe
ss
jmp
repnz
jp
adc
add
or
mov
fs
mov
in
sub
out
mov
insl
movsb
bound
orl
jmp
test
pop
hlt
decl
nop
mov
mov
pop
mov
xchg
jbe
aaa
dec
jg
push
decl
xchg
and
inc
mov
dec
rcll
aam
jg
dec
movsb
inc
shlb
pop
cmp
inc
pop
fcmovb
insl
loop
sub
aad
ljmp
nop
pop
insb
in
enter
pop
clc
repnz
sub
push
mov
mov
pop
test
es
adc
push
xchg
lock
shl
pushf
xchg
inc
aam
scas
cmpsl
adc
mov
xchg
fistpll
fwait
fs
lds
mov
ljmp
clc
test
cli
in
mov
mov
cmp
pop
dec
imul
imul
cltd
xor
nop
subl
jg
xchg
stc
js
mov
sbb
inc
fidivrs
jle
das
sar
adc
sub
mov
mov
mov
aaa
mov
jb
pop
sbb
aas
jl
add
cmpsl
push
push
pop
sbb
sub
sti
ret
adc
jb
mov
incl
pop
push
add
lods
adc
test
adc
xchg
mov
sbb
push
jp
movsb
lock
pop
arpl
jbe
mov
jmp
outsb
cmp
iret
mov
sub
cmp
mov
ja
or
notb
imul
ficoml
mov
in
push
inc
call
dec
dec
mov
in
outsb
pop
push
dec
stos
lret
xchg
mov
push
andb
push
jae
sahf
lret
push
mov
xor
dec
adc
pop
cmp
push
and
sbb
addb
dec
or
push
mov
stos
aad
mov
pop
shr
lea
and
cmp
pop
cmpsl
test
rcrb
push
and
int
es
jo
adc
push
inc
stos
jo
repnz
scas
mov
testb
incl
inc
jg
rclb
lcall
mov
or
pop
das
and
push
je
ljmp
sub
and
scas
bound
pop
mov
dec
inc
mov
lret
hlt
fbld
movsl
adc
inc
js
cmp
fs
lods
xchg
and
pop
insl
add
mov
jle
and
or
lcall
and
sar
or
adc
and
mov
ja
pop
cld
fildll
insb
inc
pusha
sbb
push
aad
call
push
or
mov
decl
fisttpll
andl
mov
sub
adc
jmp
aam
mov
xchg
ficomps
jg
popa
jbe
adc
dec
imul
push
add
lds
ds
roll
insl
mov
outsl
shll
sarl
adc
call
out
mov
ret
jl
pushl
pop
push
jge
xchg
pop
xor
mov
clc
push
insb
stos
repz
jg
imul
dec
stos
pop
push
repnz
js
aas
jg
inc
and
sbb
mov
call
rcll
pop
sbb
ljmp
aaa
adc
incb
lods
rorb
roll
stc
add
icebp
ljmp
xchg
push
push
lods
cs
insl
pop
xor
xor
in
inc
lcall
cmp
out
mov
or
aas
adc
cmpl
jmp
outsl
mov
jno
shlb
ljmp
loope
daa
ret
ljmp
std
or
or
xchg
in
add
adc
mov
out
xchg
mov
sti
psrlw
sub
add
xor
mov
add
pop
gs
sub
pop
adc
cmp
push
insl
push
dec
andl
je,pn
jne
decl
mov
or
xchg
jle
into
pop
xor
test
data16
clc
or
inc
sbb
mov
cli
lcall
movb
or
add
add
hlt
mov
add
ljmp
popa
imul
or
push
lods
add
mov
aam
pop
and
mov
stos
jnp
rcrb
nop
jbe
dec
pop
gs
das
mov
incl
adc
sbb
sti
int3
jbe
shr
jg
shrd
mov
std
incl
xor
leave
aam
pushf
movsb
outsb
outsb
mov
ljmp
push
push
ljmp
ljmp
hlt
inc
xor
pop
fstl
dec
mov
out
cwtl
jmp
xchg
nop
loopne
jno
xlat
mov
pop
add
xor
mov
movsl
and
jmp
stos
jge
lea
dec
inc
cmpsl
out
test
test
shll
jbe
ljmp
and
shrl
ficoml
jmp
les
call
pusha
ror
das
xchg
add
dec
imul
xlat
jb
rcr
jne
fsubr
das
jno
or
decl
lock
lret
inc
iret
out
or
sub
push
adc
mov
push
push
sbb
loope
movl
or
sbb
lea
fidivrs
mov
fcoml
aad
mov
push
pop
mov
mov
mov
and
cld
fs
cwtl
repnz
ljmp
jp
rclb
insb
aad
ja
cli
dec
inc
mov
cmp
jge
xor
cld
sar
out
adc
push
repnz
pop
jo
movsb
cmp
sbb
push
cmp
xchg
jp
dec
jbe
xor
cmpb
xchg
mov
and
call
jae
das
mov
add
pushf
fst
sub
cmc
push
sbb
jae
sub
pop
mov
pushl
mov
inc
data16
std
jo
popf
xchg
int3
dec
gs
mov
jle
out
sub
jge
lcall
fwait
orb
cmp
inc
fsts
ss
and
jne
int
clc
pop
push
lcall
and
shll
push
dec
push
test
orb
mov
rcr
and
hlt
cmc
in
sub
imul
icebp
push
cmp
fcomip
lcall
hlt
cmpsb
out
sti
daa
push
cmpsb
lods
pop
shll
mov
daa
jns
dec
push
std
ljmp
ss
outsb
mov
in
icebp
jns
stos
in
sbb
cmp
mov
mov
jl
mov
mov
mov
xchg
lcall
dec
gs
dec
js
mov
add
push
xchg
bswap
and
lds
loopne
add
xchg
mov
scas
jp
loopne
mov
neg
xchg
mov
js
and
ljmp
sahf
push
jle
xchg
scas
pusha
mov
hlt
popa
fnstenv
jp
xchg
rolb
push
inc
in
dec
xor
lcall
cwtl
test
ljmp
repnz
and
jnp
jbe
cmp
mov
adc
data16
pop
cltd
push
push
cwtl
mov
mov
sub
incl
sub
cmpsb
sbb
outsb
dec
loop
dec
aad
lcall
fdivrl
sub
or
loop
psubsw
jmp
hlt
sub
fsubrs
sarl
xlat
jnp
push
mov
jp
int3
xchg
mov
cmp
mov
mov
iret
jl
push
pop
mov
leave
pop
push
mov
stos
pop
scas
int
or
frstor
dec
adc
call
sub
mov
decl
mov
test
inc
add
pusha
mov
sub
stos
sbb
cld
scas
es
incl
sahf
xchg
outsl
lret
loop
mov
xor
scas
push
sub
or
das
orb
ja
xchg
sbbb
sbb
sar
sbbb
add
shl
dec
or
test
lret
scas
andl
ja
scas
push
and
sbb
mov
sub
pop
inc
jmp
mov
daa
xchg
fstpl
mov
mov
aam
jl
fisttpll
rep
movsl
inc
incl
setge
dec
in
lret
mov
mov
shrl
push
xchg
out
jl
or
ljmp
popl
sti
push
jne
mov
test
add
inc
pop
cld
testb
sbb
push
pop
pop
cwtl
or
sub
gs
mov
insb
ror
jmp
ret
shl
mov
inc
sub
ljmp
scas
dec
addr16
mov
adc
and
mov
lret
cmp
mov
insl
sub
cmp
push
outsb
inc
sub
call
xorps
xchg
inc
push
mov
and
insw
lret
jno
inc
into
xor
clc
jmp
test
pop
dec
fstpl
std
mov
rclb
adc
lods
test
incl
out
mov
xchg
ror
pop
int
imul
xchg
je
call
push
mov
sbb
jg
insl
fsubrl
std
cmp
out
cwtl
test
cli
incl
xor
jb
sub
xchg
loop
pop
adc
test
ffree
repz
jmp
lret
sarb
mov
cmc
or
icebp
xor
call
inc
sar
mov
and
or
xchg
jns
add
cltd
ljmp
xor
mov
dec
scas
jo
ss
dec
lods
mov
add
pushl
jbe
mov
out
pop
xlat
xor
cmp
sbb
cmp
jg
lcall
out
or
mov
ja
outsl
loopne
jbe
fisubs
adc
mov
fs
sub
xchg
rorb
dec
scas
jnp
adc
test
outsb
and
mov
xor
cmp
add
out
or
dec
and
loop
dec
mov
add
call
cwtl
sti
sarl
add
xorl
pop
ret
jmp
movsb
jbe
nop
dec
clc
out
sub
push
nop
mov
lcall
mov
add
xchg
into
imull
call
push
out
imull
lcall
xchg
std
sub
push
add
out
ljmp
clc
or
scas
mov
lret
into
je
jge
ret
jg
pop
mov
cs
decl
fcompl
fbstp
push
mov
mov
leave
mov
cmp
pushf
jo
sbb
outsl
les
iret
pop
push
mov
in
movsb
xchg
dec
mov
sbb
xchg
scas
fildll
ss
movsb
test
sbb
mulb
sub
call
ja
lea
fcom
in
fcoml
xchg
add
fcmovnbe
in
aas
sbb
and
call
sbb
mov
aam
mulb
inc
outsb
in
cli
and
lds
clc
iret
jge
inc
cmpsl
or
jb
sbb
jg
mov
call
sbb
aas
xor
fwait
cmp
dec
push
loop
aaa
shrb
stc
cmp
lret
mov
inc
fwait
sbb
or
sub
push
sti
into
jg
decl
repz
mov
sbb
xor
mov
jle
cltd
sar
jno
push
xchg
into
popl
inc
push
sub
xchg
mov
mov
movl
lods
xchg
fldt
cltd
imul
ret
ljmp
stos
in
dec
dec
cmp
rol
sahf
cmp
mov
push
pusha
pop
and
je
sarl
and
test
add
pop
outsb
adc
out
fcomip
or
add
outsl
shll
icebp
rorl
dec
loope
dec
sub
mov
add
sbb
or
incl
dec
or
or
outsb
lret
cmp
adc
adc
xor
addr16
cmp
mov
jl,pt
sbb
cmp
leave
mov
adc
into
insb
iret
aas
test
dec
jmp
jl
std
add
rcl
das
rcrb
iret
bound
xchg
popf
insl
mov
xchg
sbb
inc
popa
in
xchg
jae
fs
mov
pop
xor
dec
sub
stos
rcl
jnp
fidivrl
or
pushw
mov
lahf
cs
sahf
fdivl
mov
xchg
ja
ljmp
jle
ret
adc
cld
fldl
mov
aas
pusha
aaa
out
enter
jg
mov
jnp
push
std
lods
int
cli
jmp
pop
into
and
pop
negl
test
sbb
fstps
imul
jecxz
jg
add
dec
inc
addl
mul
scas
fnsave
pop
xchg
ja
movsb
mov
popa
ljmp
pop
sbb
inc
sti
mov
fstpl
or
adc
fcmovu
lock
fstps
popf
shrb
cmp
shrl
adc
sbb
lods
mov
and
ljmp
cmpsb
ljmp
jno
pushf
inc
push
mov
into
cmp
dec
adc
inc
adc
addr16
jmp
mov
jnp
nop
les
dec
pop
mov
add
lods
jg
adc
aas
lods
pushl
aam
xchg
jb
popf
test
xchg
pop
mov
jg
mov
mov
stc
cmc
stos
imul
call
test
jmp
arpl
pop
xchg
bound
add
mov
dec
mov
or
jmp
incl
pop
mov
ficompl
xor
sbb
frstor
cld
call
ds
dec
mov
fs
fs
outsb
pop
jmp
jg
fnstcw
push
and
hlt
clc
cltd
jge
bnd
xor
call
rclb
adc
xchg
push
pop
jbe
and
cmpsb
adc
lock
pushl
loope
sub
add
sub
sub
jge
ljmp
mov
and
or
nop
mov
jmp
test
rorl
mov
add
bound
scas
jns
ror
adc
sahf
push
xlat
das
sub
inc
aad
inc
mov
inc
clc
or
lret
fcompl
in
incl
in
pop
in
mov
ljmp
and
pop
mov
jecxz
pop
and
call
iret
mov
shll
in
rolb
jae
pushf
and
icebp
lret
cmp
xchg
popa
mov
loop
sbb
mov
xchg
imul
mov
push
rcr
push
lods
fst
jmp
xchg
insb
outsl
outsl
loope
ret
mov
xchg
pop
push
out
sarb
clc
push
andb
push
inc
jl
xchg
adc
jmp
push
add
cmp
inc
sbb
imulb
shl
fisubrs
ja
jmp
pop
clc
mov
loopne
jge,pt
shll
xlat
inc
dec
fsts
pop
stos
in
inc
add
call
pushl
out
or
sbb
mov
cld
stos
enter
mov
ljmp
add
mov
jmp
pop
inc
pop
sbb
xchg
jecxz
nop
inc
mov
fwait
call
int
pop
mov
jl
and
scas
mov
sub
jg
pop
push
lret
inc
jb
fsubp
les
inc
stc
orb
clc
stos
dec
xchg
lahf
js
lcall
ret
inc
pop
mov
sar
jmp
int3
and
ss
out
shrb
push
andl
jmp
mov
push
push
inc
pop
xchg
add
mov
in
xchg
imul
jo
xchg
shl
nop
adcl
in
inc
pop
mov
lea
gs
adc
inc
xor
lcall
sub
rolb
jmp
orb
imul
jmp
pushl
hlt
lods
pop
push
cli
pop
cltd
xchg
mov
dec
ret
sub
cmp
push
inc
or
popf
xor
and
sub
rorl
jmp
sbb
mov
pop
rcrb
and
dec
pop
std
dec
imul
mov
or
stos
gs
add
xchg
pop
cmp
mov
add
sub
jecxz
test
mov
cmpsb
outsb
loopne
fmull
dec
repz
sub
jmp
sbb
icebp
arpl
cmp
dec
in
call
push
sahf
lahf
mov
xlat
mov
rorl
mov
decl
xor
add
mov
and
les
adc
enter
scas
push
out
mov
xchg
int3
sar
jmp
das
mov
and
fisubrl
outsl
loopne
ret
and
add
inc
in
insb
inc
in
loope
pushl
sarb
fistps
lret
jno
cltd
or
push
in
xor
cmc
cmpsl
enter
lcall
decl
test
sbb
mov
mov
roll
js
jl
ja
pop
pop
shr
aas
popa
jbe
adc
add
lcall
call
jle
int
in
nop
push
pcmpeqw
sbb
pushl
jo
or
mov
rclb
adc
mov
or
xchg
test
in
push
loopne
xor
orb
fnsave
xchg
cltd
and
popf
jecxz
fstl
insl
sbb
mov
inc
mov
xchg
cli
inc
adc
ret
adc
and
loopne
pop
or
and
popf
ljmp
fisubrl
and
lahf
in
jne
fimuls
into
sbb
lcall
lcall
shr
and
push
sbb
sub
dec
insb
imul
clc
and
jmp
add
push
clc
pop
addb
xchg
sti
mov
jmp
loop
icebp
dec
mov
and
pop
call
std
stos
iret
push
shlb
std
iret
dec
mov
mov
shr
adc
incl
lea
cmpb
push
repz
andb
mov
andl
cli
jge
adc
clc
imull
or
ljmp
inc
outsb
push
out
push
mov
dec
sti
cli
sbb
mov
mov
sar
lret
cli
cmp
mov
cmp
jne
sahf
lahf
sbb
or
lcall
push
ds
arpl
scas
out
sarl
repz
fidivs
scas
xor
ja
xlat
nop
ljmp
fsubrp
xlat
pop
cmp
call
or
push
gs
inc
pop
iret
push
jns
xlat
inc
pushf
loope
sub
decl
lea
scas
ret
arpl
call
clc
js
test
pop
ror
xor
mov
out
loop
repnz
pop
jns
pusha
xor
ljmp
jno
push
cmpsb
mov
jl
aam
fwait
mov
pop
fs
and
pop
mov
sub
shlb
enter
add
sahf
rcl
jle
call
inc
dec
orb
add
scas
les
mov
jmp
in
sbb
sbb
cmp
sub
mov
out
jg
inc
movsl
add
call
pushl
and
mov
mov
xor
pop
jmp
iret
jno
sbb
cmp
and
and
aas
addr16
lret
jb
jmp
out
xchg
movsb
jmp
insl
push
pop
ja
sar
sbb
fnstcw
and
jecxz
xorl
push
mov
loope
pop
insb
push
inc
or
cli
imulb
jmp
enter
xor
pop
add
inc
loope
push
dec
xchg
jo
or
pop
jb
arpl
fwait
lods
inc
push
pop
ror
mov
into
adc
in
lock
idiv
lret
adc
sar
ja
fsubrl
jecxz
lock
ljmp
and
mov
mov
jl
outsl
sarb
aam
icebp
ds
ds
mov
pop
mov
arpl
fstps
cld
dec
add
mov
add
add
xor
jno
pushl
cmpl
add
dec
cltd
cld
fwait
rcll
push
jecxz
imul
jmp
jg
rcrl
into
cmpsl
dec
add
daa
loope
xchg
inc
cmpsb
mov
decl
adc
pop
push
cmc
into
cli
push
dec
out
fmull
sub
fwait
jp
clc
dec
push
mov
or
pop
push
aas
lret
js
xchg
lea
adc
out
xor
call
jmp
inc
cmpsl
jo
or
xorl
pop
jl
jmp
inc
mov
mov
push
bound
das
outsl
lret
test
in
lds
ja
push
ljmp
push
sbb
mov
fistps
pop
fsts
dec
mov
jg
cmpl
ret
sahf
sub
xlat
pushf
lret
lods
push
adc
sar
or
scas
pop
mov
cmp
in
icebp
out
scas
add
es
sahf
into
negb
inc
xchg
push
daa
dec
sub
cli
mov
or
out
outsb
jmp
xchg
cmp
arpl
jp
nop
lcall
sti
decl
loope
lods
mov
and
in
or
sub
dec
movsl
incl
call
int3
pop
adc
jb
shlb
push
stos
cmp
outsb
fwait
clc
mov
pop
and
sub
lock
test
in
pop
ss
cltd
mul
subb
push
push
push
and
lcall
insb
lret
sub
mov
pop
and
outsl
cltd
lods
mov
call
iret
xor
adc
mov
xor
andb
jmp
call
adc
lods
movb
testb
mov
mov
dec
ljmp
push
push
and
xchg
addr16
js
repnz
and
inc
inc
lret
fsubrl
frstor
sbb
out
fdivrs
aas
push
sahf
cmp
mov
repnz
outsl
in
sar
and
fs
sub
frstor
inc
orl
jo
loope
push
xchg
and
decb
lret
mov
insl
inc
mov
call
add
add
incl
addr16
cmpsl
or
loopne
sub
pop
pop
andl
cmc
add
ja
jle
jmp
pusha
fiadds
push
call
fwait
cltd
xchg
movsl
andl
das
ret
dec
gs
insl
stos
iret
sbb
sbb
ja
inc
int
mov
movsl
lret
lret
repnz
push
pushf
sub
lds
sahf
icebp
mov
jmp
cli
and
cld
sub
pushf
cmpl
sbb
mov
test
outsl
popa
bound
stc
push
add
sbb
push
push
mov
pushf
jbe
ds
sahf
mov
and
adc
ljmp
mov
aam
pop
cs
jnp
rcr
insb
andl
xor
mov
inc
mov
adc
jge
pusha
decl
inc
mov
mov
sub
pop
pushf
adc
xchg
decb
xor
outsl
cs
jp
jg
push
mov
and
adc
outsb
pop
sub
and
aas
dec
dec
ljmp
jne
inc
xchg
add
adc
lcall
mov
and
push
pop
jecxz
mov
aam
es
mov
add
scas
inc
xor
mov
mov
cmp
pop
icebp
pop
jae
test
mov
lods
jbe
testb
sbb
mov
test
std
cmp
ja
cmp
pop
ja
xor
mov
bound
xchg
mov
xor
sti
jle
mov
out
sarl
and
and
xchg
call
stos
mov
pop
orb
jno
or
and
mov
mov
mov
add
mov
std
adc
call
call
mov
xlat
pop
test
inc
call
fwait
or
decl
or
jl
mov
pop
pop
jmp
push
fmul
dec
andb
pushf
test
pop
xor
inc
cmp
push
or
shrb
and
add
out
jmp
loopew
pusha
mov
hlt
xchg
adc
mov
adc
in
adc
dec
mov
add
sbb
out
out
test
pop
inc
jmp
or
mov
popa
addr16
loop
sbb
jl
ds
call
dec
mov
in
icebp
jbe
fwait
enter
sbb
cmp
aam
mov
lahf
add
jg
jmp
outsb
lods
and
mov
aad
adc
push
push
or
repz
mov
mov
adc
inc
shl
fwait
mov
dec
shlb
xchg
pop
cmp
jne
mov
or
rcrb
loop
or
test
inc
sub
mov
mov
or
and
pop
arpl
push
inc
adc
adc
xchg
jmp
ret
xor
inc
push
mov
test
mov
mov
mov
dec
push
xchg
cpuid
lcall
pop
pushl
xchg
jg
add
jle
inc
or
stc
push
cwtl
clc
dec
sub
movsl
mov
pushf
mov
dec
popa
adc
sub
ljmp
inc
bound
maskmovq
divl
push
into
into
add
cld
and
xorb
imul
jg
push
mov
cs
inc
aam
lods
dec
mov
inc
adc
decl
andb
push
mov
cmp
lock
dec
fld1
test
cmp
call
insb
adc
es
pop
stos
jle
mov
ret
xchg
mov
das
sahf
push
add
dec
adc
or
movsb
sbb
dec
add
aaa
test
enter
jg
or
lcall
scas
stc
mov
push
inc
adc
mov
add
loope
push
pusha
adc
or
divb
rolb
add
movsl
or
out
cwtl
les
cmp
hlt
stos
cmpsb
test
ja
idiv
lcall
test
push
or
dec
mov
push
mov
adc
push
lahf
inc
push
or
jg
sbbb
xchg
or
pop
push
loope
cld
jg
ljmp
jb
dec
mov
pop
xchg
fmull
push
and
inc
aad
andl
sahf
fistps
mov
in
or
jae
out
frstor
pop
add
rorl
iret
or
bnd
ret
jo
in
rclb
incl
mov
dec
adc
fs
jp
xchg
and
xor
lea
ljmp
jg
jmp
cmp
cmp
add
mov
test
fstps
fstl
lds
mov
cmp
cmp
adcb
push
jmp
cld
icebp
jns
das
jae
mov
cmp
lcall
cwtl
fisubl
aas
pop
nop
icebp
sbb
push
xchg
push
cwtl
fnstcw
outsb
out
hlt
leave
lods
cmp
or
test
dec
outsb
cmpsb
and
cmp
jb
dec
icebp
popf
and
out
clc
cmp
stos
pushl
loop
mov
mov
cmpsb
mov
push
pop
dec
loopne
fiadds
jae
mov
jp
out
push
pop
lock
cli
mov
test
incl
fildl
insl
cltd
rclb
aaa
mov
mov
cwtl
lahf
mov
and
movq
ljmp
ja
fcmovne
in
mov
addr16
cmpsl
out
sbb
push
ds
push
jno
stos
imul
mov
inc
mov
or
mov
sbb
dec
jmp
dec
cli
fldcw
sub
xlat
sarb
inc
sbb
jmp
sbb
or
cmp
ljmp
sbb
lcall
jp
hlt
jnp
insb
mov
mov
sysexit
mov
mov
inc
dec
or
call
mov
fbstp
daa
stos
push
adc
add
fisubrs
incl
pop
cmc
int
mov
sti
dec
lcall
push
or
jns
movsl
cld
push
data16
mov
daa
stc
push
mov
dec
push
fdivl
arpl
xchg
out
mov
incl
dec
xchg
push
fwait
mov
lods
in
clc
rcrb
js
pop
adc
jmp
push
cmp
xor
pop
add
fldl
mov
cltd
lret
lret
add
mov
test
jmp
lret
leave
push
xlat
jge
bound
and
scas
popf
add
arpl
jne
call
or
mov
lcall
fs
jbe
lcall
cmp
icebp
fs
imul
xchg
aaa
sub
jge
mov
cmp
in
add
jmp
sbb
xchg
cmp
mov
cmp
push
cmp
in
scas
or
pushf
adc
shrl
in
pop
cmpsl
cmp
shll
enter
xchg
mov
aad
ljmp
cltd
cmp
cmp
jns
mov
sbb
fidivl
xchg
sbb
arpl
ljmp
mov
repnz
jl
mov
mov
call
jno
add
pop
dec
cmc
in
jb
hlt
dec
mov
stos
sarb
loop
inc
sti
testb
ja
cmp
mov
nop
mov
lret
lahf
mov
or
sub
incl
adc
popa
xchg
add
inc
mov
movsl
add
mov
call
sarb
rolb
inc
outsl
xchg
mov
std
mov
decl
jecxz
jg
sbb
push
jle
dec
andl
mov
cs
hlt
xorb
ljmp
loopne
or
push
jns
dec
je
or
xchg
out
call
std
push
ret
outsl
jb
add
outsb
test
fdivrp
sbb
mov
mov
incl
dec
movsl
outsl
push
popf
inc
adc
sub
push
nop
shll
ret
icebp
outsb
xor
incl
mov
lcallw
mov
adc
cmp
test
and
add
xor
push
int3
das
pop
es
iret
inc
into
adc
dec
xchg
fbstp
push
xchg
mov
faddl
mov
cmpsl
in
inc
fildll
enter
mov
js
jb
mov
cli
mov
clc
pop
and
lods
push
jnp
or
call
ret
pop
jl
iret
mov
js
int
test
mov
add
push
and
fs
call
cmpsb
jecxz
mov
fs
outsb
mov
scas
pop
lods
push
dec
pushf
dec
mov
pushl
adc
fs
int3
dec
and
cmpb
insb
xorb
cmp
outsl
jmp
xchg
pop
cmpsb
push
mov
clc
decl
sbb
jb
jbe
rcrl
scas
and
nop
mov
mov
fwait
sub
call
dec
sbb
adc
jge
lods
dec
roll
fldenv
enter
in
rcr
or
dec
mov
xor
repz
add
scas
xor
pusha
lahf
jle
adc
cmp
jmp
inc
or
shlb
inc
fistpll
daa
pushl
pop
push
bound
inc
push
inc
fistpll
xor
popf
push
mov
ds
in
or
cmpsb
sahf
bswap
pop
fists
cld
fsub
dec
pop
mov
push
mov
add
inc
jp
lcall
mov
pop
adc
adc
fisubrs
std
sbbl
mov
mov
ficompl
and
pop
inc
clc
jg
add
pop
lock
aaa
and
sub
out
movsb
jnp
rcl
addr16
mov
es
sahf
dec
lds
aas
aam
test
fcomip
ljmp
jo
mov
cmc
and
jge
fwait
inc
mov
jmp
xor
roll
sub
push
cmp
iret
arpl
mov
and
cmc
inc
add
jecxz
in
rcl
pop
add
jo
lods
fs
mov
clc
cmp
test
decl
fs
dec
out
in
mov
in
cmpsb
fstpt
xchg
test
push
cmp
jg
ljmp
mov
mov
add
int3
lcall
adc
popf
decl
out
mov
dec
out
inc
ret
iret
gs
gs
enter
movb
xor
lret
mov
fidivl
mov
cmp
js
out
push
xchg
or
lret
sub
xor
jmp
inc
push
in
cmp
mov
inc
jmp
xor
aad
push
in
fcmovne
or
out
cli
pushl
adc
inc
test
mov
lock
xchg
pop
popa
filds
test
fwait
jl
mov
or
jge
incl
inc
fcomps
cmc
push
jmp
ret
ficomps
pop
arpl
cli
test
popa
pop
call
mov
jmp
stc
or
push
mov
lea
inc
mov
dec
gs
lcall
xor
int
mov
inc
pop
ret
roll
das
ret
out
ljmp
mov
and
inc
out
insb
popf
cmc
push
in
xchg
ja
lea
repnz
fistpll
push
inc
arpl
jp
jo
popf
ret
jno
mov
push
mov
jge
fldt
lret
push
pushl
lcall
into
pop
cmp
sbb
fs
jmp
clc
cmp
cmp
loopne
mov
hlt
xchg
xchg
cmp
adc
bound
cmp
and
das
shrb
mov
mov
imul
or
push
mov
leave
push
out
frstor
xchg
xchg
push
repnz
aad
lock
fwait
xchg
inc
cli
pop
xor
lcall
or
in
out
and
incl
dec
jl
sub
push
movsl
dec
inc
out
push
notb
lcall
shlb
mov
shl
xchg
pop
int3
fildl
push
aaa
and
adc
jg
jo
pop
stos
xor
rcrb
insl
rcl
cmp
dec
outsl
jecxz
iretw
rol
cmp
ja
sbb
loope
cltd
cwtl
add
movl
pushf
aam
test
sbbl
mov
loopne
cltd
mov
fnstenv
jmp
std
fmuls
je
inc
repz
iret
jnp
cmp
mov
shlb
mov
mov
push
in
je
jmp
insl
cli
rorb
rcrb
int
cmp
xor
xor
jno
mov
lcall
popa
xor
xor
adc
dec
call
pusha
push
mov
lock
ds
outsb
sar
mov
test
jns
or
and
ljmp
inc
shrl
jmp
lcall
mov
aam
mov
cs
in
jbe
mov
jb
dec
loop
push
ja
call
cmpsb
mov
jmp
pop
pop
movsb
push
cltd
pop
add
ret
push
movsb
in
out
add
xor
adc
sbb
pop
test
ljmp
ja
and
sti
and
push
fistps
dec
pop
inc
setne
mov
and
icebp
xchg
sub
add
jle
int3
push
lahf
jno
xor
push
inc
sub
sahf
cmpsb
pop
add
cmpsb
sub
mov
cmpsb
shlb
add
mov
jmp
and
mov
lret
xor
jg
mov
leave
movsb
dec
mov
cmp
decl
pinsrw
lcall
xlat
sub
clc
cld
push
mov
insl
xor
push
fistps
or
call
das
sbb
mov
mov
inc
pop
icebp
outsb
sahf
cmp
xchg
divb
xchg
pop
dec
jge
inc
and
pushl
das
pop
neg
push
dec
pop
inc
mov
insb
lcall
adc
sub
inc
lds
add
cmp
sub
std
call
mov
mov
mov
push
sub
cmp
cmp
adc
decb
mov
arpl
or
pushf
pop
arpl
lds
jg
and
add
decb
inc
imul
popf
sub
fucomi
movsl
mov
xor
mov
lock
fisttpll
dec
cli
fwait
cmc
ss
sbb
pop
inc
neg
loopne
xor
in
push
int3
push
std
inc
sub
sar
loope
test
sub
lods
clc
or
bound
xor
iret
push
in
idiv
jg
cwtl
insl
dec
inc
mov
push
test
mov
mov
xchg
fsubs
sbb
lahf
cmp
xchg
lock
mov
rcrb
sbb
decl
push
ljmp
pop
subb
xchg
dec
lock
mov
and
mov
pop
push
scas
test
repz
stc
into
sub
push
add
sti
in
pop
xchg
and
xchg
sub
mov
out
fs
pusha
ret
adc
out
push
test
push
divl
imul
mov
decl
xor
xchg
sbb
idivl
fcomip
aaa
or
in
push
daa
jmp
cmp
push
push
push
pop
mov
and
or
adc
mov
jb
sbb
je
out
clc
cmp
add
incl
pop
xor
dec
jno
sub
pop
mov
xchg
movsb
pop
sbbb
dec
andl
push
cmp
pop
call
jmp
xchg
dec
push
cli
dec
cmpsb
leave
push
mov
sub
decl
mov
outsb
mov
dec
jae
repnz
pusha
lahf
jb
repnz
das
jge
pushl
es
jmp
push
ja
jne
addl
les
nop
inc
popa
mov
pushl
cmp
jae
cwtl
push
sahf
jg
xor
incl
add
xchg
xchg
mov
fstpt
scas
cli
and
xor
vorps
fdivs
rcr
insb
adc
call
inc
lock
ret
adc
fimull
test
inc
pushl
push
dec
mov
cmpsl
fistps
fimull
mov
push
add
call
sub
cltd
aad
cmc
push
cltd
sbb
decl
rcrl
aad
shlb
xorl
lret
sti
std
pop
or
cld
into
cltd
mov
cld
out
sub
shll
shlb
test
ds
push
aad
push
push
sar
int
ds
dec
mov
push
and
stc
aad
decl
mov
mov
xor
push
pop
shr
movsl
and
clc
mov
mov
mov
fldt
push
pop
imul
xchg
jp
mov
cltd
mov
loop,pn
sahf
imul
test
mov
orb
or
shll
call
and
test
xor
sbb
outsl
insb
loopne
test
jmp
cwtl
stos
pop
sub
or
imul
inc
xlat
inc
fisubrl
ljmp
or
js
jge
lret
js
push
pusha
popa
jp
dec
incl
xor
scas
hlt
lods
insl
jnp
fiadds
lcall
aas
fldl2e
setns
xchg
call
xchg
cvtps2pd
rcrb
stos
sub
push
ret
mov
rolb
pushl
add
sbbb
loope
js
cmp
jnp
out
cmpsb
mov
jns
push
repz
ret
cmp
push
pusha
or
ljmp
xor
push
mov
cs
daa
jecxz
aaa
std
fists
test
cwtl
ljmp
subb
or
incl
ret
repnz
jmp
mov
push
fnstsw
push
ret
adc
mov
cmp
daa
or
pushl
lea
lret
popa
aad
cs
lods
scas
pop
ljmp
ret
mov
cwtl
pop
imul
or
out
cs
pop
dec
fidivrs
daa
daa
ljmp
test
repz
imul
cmp
add
fcmovnb
cmp
add
sbb
mov
fcoms
and
lret
lcall
mov
ljmp
cltd
mov
sub
mov
xor
push
ds
ljmp
cmp
jbe
lahf
jg
insl
xchg
data16
es
mov
jae
arpl
ljmp
xlat
xchg
ret
push
outsl
and
sahf
adc
loope
dec
add
fnstsw
call
bnd
fimuls
add
ds
and
cld
scas
mov
leave
in
pop
jae
cmp
sbbl
xchg
jecxz
cmp
xchg
sahf
and
mov
add
enter
adc
add
cmpsb
and
mov
jg
add
movsl
pop
rcll
push
push
mov
dec
add
adc
incl
sbb
cmp
and
cmc
jnp
xor
mov
test
mov
jmp
xor
decl
ss
lods
mov
mov
fidivrl
sbb
les
test
sbb
or
lods
mov
mov
insl
imul
xor
ficoml
and
add
lods
pop
jecxz
inc
cmp
out
mov
shr
mov
icebp
in
stc
loope
ss
pop
js
jecxz
icebp
mull
jle
rclb
push
add
mov
jmp
push
push
dec
xchg
insb
lods
pop
loop
daa
fwait
and
sbb
test
mov
xchg
and
les
and
mov
mov
fwait
mov
ror
dec
incl
add
mov
xor
push
sub
sti
stc
aas
arpl
push
xchg
xlat
loopne
adc
je
and
cld
pushl
outsb
push
jge
in
xlat
inc
cmp
push
aaa
jnp
fdivr
jg
fs
jl
push
sbb
int3
mov
sub
jbe
sub
mov
std
cli
mov
cli
fldt
mov
adcb
inc
push
movsb
jno
add
nop
jno
lcall
mov
inc
add
fbstp
and
and
cmp
dec
mov
fbld
test
js
sub
icebp
aam
lods
int
adc
mov
mov
mov
je
test
lret
mull
mov
xchg
inc
call
sahf
out
enter
push
ljmp
andl
cs
popa
cmp
xor
sbb
add
std
push
aam
push
test
popf
sub
dec
loopne
sarl
clc
or
jnp
mov
ljmp
sbb
and
cmp
arpl
mov
into
fwait
scas
jne
loopne
scas
sbb
mov
push
or
or
call
xchg
pusha
mov
loop
dec
movsb
push
push
iret
mov
cmp
aam
gs
sub
imul
mov
push
call
iret
mov
std
mov
sarb
cmpsb
adc
mov
ds
mov
push
and
mov
pop
ret
cli
dec
pop
mov
mov
movsb
and
std
shll
sarl
dec
hlt
ljmp
das
insl
lret
negb
or
fstl
adc
adc
jmp
sbb
adc
xor
cmp
mov
sbb
pop
subb
rclb
ljmp
cltd
stc
mov
movl
mov
mov
js
jg
aaa
jno
subb
mov
loop
rcrb
loop
push
jp
loop
and
cmpsb
mov
loop
ljmp
cld
out
fisubl
jne
lcall
shll
push
lcall
iret
inc
scas
inc
inc
gs
xchg
popf
lret
cmc
sub
push
ret
lds
push
pop
mov
mov
pop
xchg
or
je
mov
jnp
lcall
mov
and
pusha
cld
jmp
dec
lret
jbe
sbb
mov
and
xor
sbb
cs
mov
inc
pop
add
stos
dec
pop
cmpsb
and
xor
cmpsb
stos
cmp
inc
dec
cld
xor
jnp
lods
aam
mov
incl
sub
jmp
addb
mov
imul
adc
adc
dec
in
xchg
je
popf
pop
sbb
in
nop
xor
out
push
stc
mov
adc
mov
call
orl
cwtl
imul
movl
adc
fxch
mov
adc
mov
pcmpgtb
out
sbb
into
pusha
adc
xor
in
cltd
cmp
call
movsl
lea
cwtl
sbb
in
pop
inc
jg
jnp
inc
jae
movsl
in
mov
jno
loopne
call
jmp
adc
push
add
and
decl
sub
cld
sbb
jns
cmp
pop
or
negb
call
fisttpll
mov
dec
jo
xchg
xor
cmp
or
cmpsb
sub
lock
fs
fsubrl
in
lcall
stos
mov
repnz
mov
pusha
mov
out
xorb
stos
pop
or
call
in
and
aad
rol
ret
fmuls
test
and
push
leave
pop
repz
push
pushl
pop
ljmp
ja
xor
sbb
or
sbb
int
fimuls
and
lcall
lret
rol
repnz
out
idiv
movsb
add
xchg
jl
cmp
mov
ss
pop
pushf
repz
add
cmp
ficoms
js
sbb
lcall
push
data16
call
or
clc
add
sbb
leave
je
aad
dec
xor
movsb
jecxz
cmp
ljmp
pop
sahf
push
jp
lcall
xorl
xchg
jb
mov
decl
sahf
cmp
clc
cmp
xchg
stos
lret
out
fcoms
pushl
sub
jp
sarl
push
add
or
jne
jnp
adc
and
dec
call
cmp
add
int3
xchg
pusha
lds
sbb
std
mov
mov
and
pop
pop
stos
jecxz
gs
mov
bound
cli
jmp
add
leave
roll
hlt
mov
and
es
add
and
aaa
shlb
imul
cmpsb
ds
mov
iret
push
adc
sarl
ljmp
outsb
fisubs
std
push
je
rcrl
pop
jo
je
mov
out
xor
adc
incl
and
and
cmpsb
pop
clc
adc
cmpsb
sti
cmp
addr16
dec
ja
repnz
jle
add
jmp
stc
adc
cmp
dec
mov
cltd
dec
pop
lcall
test
mov
xchg
inc
jne
int3
xchg
es
arpl
das
sar
test
push
neg
movsl
lds
mov
pop
decl
or
jae
adc
add
je
push
scas
pop
inc
or
jns
imul
arpl
data16
pop
nop
enter
jp
jl
jmp
fistps
jg
xorl
mov
ds
call
push
lcall
mov
jp
imul
decl
icebp
pop
outsb
and
xchg
test
xchg
sbb
fwait
push
push
fcomps
mov
lea
push
call
mov
ret
lret
aaa
adc
dec
lcall
and
loop
pop
or
fildll
push
pop
jae
lods
jmp
push
pushf
cwtl
repnz
add
decl
mov
mov
add
cmp
mov
xchg
cld
pop
pop
int
cmp
clc
ja
shrb
xacquire
inc
je
decl
sbb
or
push
inc
push
dec
pop
push
sub
xor
cs
cld
mov
xchg
mov
nop
jge
xor
push
fsubr
mov
push
les
lret
jecxz
lods
and
into
sub
dec
shll
incl
xchg
fistl
and
xchg
lret
pop
popa
adc
mov
out
out
xchg
cmp
inc
sarb
enter
lcall
lret
loop
into
popa
sti
or
mov
pop
cmp
jl
xor
sbb
hlt
mov
orl
data16
pop
addr16
lods
jns
fwait
jne
cmp
jmp
cld
arpl
rorb
sub
icebp
out
and
cmp
xor
ljmp
mov
iret
je
xor
or
sbb
mov
xchg
clc
aas
clc
incl
les
xchg
mov
shl
popa
inc
add
pop
cmp
inc
popa
xchg
test
adc
in
lcall
cmpsb
roll
mov
add
push
aad
and
ljmp
fisubrl
mov
out
sahf
mov
je
sbb
call
push
hlt
andl
mov
mov
mov
lods
mov
in
sub
lcall
int3
mov
lret
mov
and
aaa
lret
insl
fidivl
push
fdivrs
sbb
call
fisttps
lret
cmp
dec
inc
fildl
in
js
idiv
decl
mov
mov
lahf
outsl
inc
out
in
add
lds
jle
or
cmp
cmpsb
mov
cmpsb
xchg
push
imulb
gs
sub
sub
push
pop
imul
iret
js
mov
pop
push
or
lcall
sbb
xorl
ds
incl
jge
mov
or
sub
test
insb
sarb
out
icebp
mov
sti
adc
add
mov
incl
fdivr
jo
aaa
mov
fdivr
or
inc
jg
xor
jmp
mov
pushf
hlt
cmpsb
daa
notb
das
shlb
push
pusha
pusha
lock
cli
mov
bound
lock
mov
lock
dec
scas
xchg
cmpsb
in
lock
pushl
sub
xchg
pop
jb
mov
loop
jle
call
in
dec
xor
mov
xchg
xor
clc
decl
nop
pop
jg
std
cli
test
arpl
and
sbb
jb
imul
roll
sbb
out
cmp
daa
movsb
fiaddl
call
push
add
enter
pusha
cmpsb
mov
loop
pop
loopne
fst
ret
cmpsl
imul
loop
movsb
ljmp
js
sbb
mov
fnsave
jmp
mov
repz
inc
push
mov
push
xchg
negl
in
mov
push
push
loopne
and
mov
mov
inc
pop
fs
cltd
inc
into
and
pop
jl
cmpsb
aas
mov
shrb
cmp
pop
add
xchg
jmp
repnz
push
out
lcall
sub
inc
dec
stc
into
sbb
add
call
xchg
lods
mov
sub
sub
jno
test
leave
cmp
stc
sar
pushl
xchg
outsb
adc
pop
icebp
xor
mov
xor
inc
push
mov
rcrb
mov
dec
leave
add
inc
repz
popa
icebp
ljmp
or
mov
xor
mov
in
sub
popf
and
hlt
jecxz
pushl
dec
pusha
xlat
popf
jns
mov
imulb
xchg
test
xchg
dec
add
cmp
sbb
aas
mov
jbe
aam
pop
out
jp
jl
jg
cmc
mov
and
int3
add
xor
call
adc
aas
mov
idivb
push
mov
sub
lods
mov
addb
jae
and
cld
js
jmp
in
mov
inc
jo
or
xor
xor
fmuls
push
mov
jns
pop
shl
out
std
aam
ret
fmuls
xor
pop
out
loopne
hlt
inc
sar
mov
and
inc
xor
dec
cmp
decl
lods
cwtl
out
mov
jmp
testl
ja
in
jmp
out
mov
mov
adc
cmp
out
inc
inc
jl
pop
push
lret
mov
or
imul
pop
adc
cwtl
mov
lcall
lods
inc
push
fcompl
xor
cmp
incb
xchg
or
insb
aad
pop
or
decl
mov
pop
sbb
lds
sub
xor
mov
stos
inc
stos
and
ret
mov
xor
cli
pushl
inc
stc
outsl
cmpsb
lret
add
push
adc
loop
lds
mov
sbb
ficoml
adc
ljmp
pushf
adc
ljmp
cmp
mov
decl
or
out
cltd
fstps
mov
outsl
js
je
movsl
lcall
adc
hlt
jmp
pop
sbb
pop
adc
push
outsb
mov
jno
in
mov
adc
sbb
repnz
out
and
mov
mov
loopne
lcall
iret
xor
ret
arpl
pop
dec
add
iret
lds
sbb
xor
mov
add
xchg
popa
repz
call
out
push
gs
ljmp
and
mov
pop
ljmp
movsl
xchg
je
add
sahf
mov
fcmove
push
sbb
incl
pop
sbb
sbb
push
lret
in
out
shlb
add
in
mov
pop
jmp
lcall
inc
jo
cmp
lcall
fstpl
int
popa
xchg
lcall
neg
cmp
nop
sbb
sbb
shll
in
outsb
sahf
mov
add
repnz
push
int3
push
pusha
mov
jg
mov
js
add
mov
mov
fsubs
sub
add
inc
mov
cltd
add
insb
add
clc
scas
mov
sahf
jge
pop
jmp
imul
xor
sbb
popf
inc
and
inc
sub
enter
push
arpl
mov
cmp
mov
inc
cmpsb
push
push
bound
inc
jecxz
mov
movsb
icebp
xchg
xor
pushl
and
mov
aas
lahf
std
out
shlb
push
ret
ja
test
popf
cmp
pushf
adc
call
mov
pop
push
cmp
std
pop
dec
add
jg
lcall
aam
idiv
cli
or
dec
imul
pop
dec
wbinvd
in
into
in
dec
jae
je
lret
imul
ljmp
insl
and
ret
mov
rclb
xor
ljmp
add
xor
add
decl
rcrl
sub
aad
out
pop
bnd
rcrb
scas
test
xchg
xor
or
call
fdivl
xor
mov
mov
ljmp
inc
and
sarb
inc
inc
icebp
cwtl
pushf
jg
fistps
incl
push
pop
bound
jno
popa
test
jl
mov
cmc
dec
push
push
sar
jecxz
loopne
pop
enter
mov
ljmp
dec
pop
sahf
cwtl
jnp
xchg
mov
xchg
jmp
js
or
mov
sar
stc
mov
imul
mov
push
adc
fwait
rcl
jp
mov
add
push
mov
pop
cld
stos
popa
jecxz
pop
add
push
aam
test
lret
cmp
lock
mov
cmp
out
jno
push
cmp
xchg
ret
and
mov
or
in
inc
fisttpll
loopne
sub
pop
jecxz
lret
les
out
or
scas
lcall
mov
dec
loope
and
pushf
sub
jp
popf
mov
fcomps
cmp
xchg
ljmp
mov
aam
dec
sbb
mov
xchg
cmp
sub
inc
mov
test
cmc
outsb
scas
cmpsb
dec
jnp
daa
and
mov
pop
push
dec
cwtl
pop
adc
sub
add
in
xlat
rcrb
in
dec
hlt
adc
inc
pop
test
inc
es
loopne
push
aam
push
jmp
aad
inc
inc
pop
fsubp
cli
push
xor
cmp
jp
jne
fcompl
leave
cwtl
or
jmp
adc
bound
and
aaa
dec
ljmp
addl
faddl
jecxz
sub
mov
in
ret
add
ja
mov
fdivr
dec
cli
pop
mov
jne
or
dec
popf
adc
dec
movsb
cli
xchg
cmp
arpl
dec
and
cld
mov
lock
stos
ljmp
nop
jb
ljmp
mov
mov
loopne
mov
xor
push
mov
aad
ljmp
jmp
call
jnp
bound
addr16
in
std
mov
call
mov
cmp
sti
jmp
jbe
je
mov
sbb
mov
pop
add
jmp
xlat
mov
jb
in
xor
cli
mov
push
test
fcomip
addr16
mov
push
sahf
pop
sbb
pmuludq
ljmp
sub
sarb
es
pop
or
and
out
fiaddl
pushl
xlat
xchg
xor
jbe
into
outsb
push
imul
int3
dec
xor
ss
enter
outsl
clc
mov
je
cmpsb
jmp
pop
cmp
mov
incl
add
xor
rcr
xor
jns
cmp
push
sti
jne
lret
insb
and
int3
jnp
out
dec
popf
mov
call
ljmp
pop
fmul
xor
shll
movsl
add
arpl
loopne
daa
daa
pop
loope
loopne
repz
call
ficompl
cltd
out
out
data16
xchg
loopne
adc
sub
pop
mov
adc
out
push
push
fwait
inc
pop
or
ret
pop
cltd
jo
decl
dec
lcall
mov
lea
mov
mov
call
adc
cmpsb
pushl
mov
pop
insl
arpl
aam
hlt
inc
mov
sti
inc
pop
jmp
ss
cli
cwtl
and
jge
negb
sub
mov
aaa
inc
mov
mov
cmpsb
inc
incl
in
mov
xlat
jae
pop
test
inc
rcrb
pop
xor
decl
test
pushf
cmp
sbb
sub
pop
jno
ficoml
mov
and
dec
mov
rcr
shl
jmp
mov
gs
lcall
inc
cmpsb
push
sub
pop
add
ret
mov
stos
int
mov
rol
gs
fists
push
jbe
lret
add
push
push
sub
lcall
js
pop
xchg
or
pushl
ret
push
mov
mov
xor
jno
pop
rcl
fdivl
popf
push
mov
xchg
clc
jmp
jo
mov
call
std
xlat
pavgw
lea
shll
mov
add
pop
sti
lds
shl
add
jno
cmpsl
aam
add
or
jg
or
push
or
sub
outsl
loop
adc
scas
sti
ret
push
inc
sub
sub
stos
pop
incl
adc
push
mov
loope
js
pop
decl
popa
sti
pusha
mov
dec
xor
or
mov
or
sbb
jo
cmpsl
incl
jno
jae
sub
mov
fsubrl
adc
notl
mov
mov
mov
outsl
mov
cmpl
loop
add
xchg
add
xchg
push
cltd
mov
cli
loopne
sbb
cmc
sub
xor
cmc
push
xchg
add
or
out
aad
or
push
outsb
lods
addr16
rorb
and
scas
mov
xor
add
outsb
inc
call
add
popf
xchg
cmp
lahf
adc
lcall
sub
xchg
nop
jns
mov
dec
cmp
jmp
out
call
je
outsl
fst
and
out
and
repz
call
rcrb
add
mov
add
push
js
ljmp
lret
scas
mov
cmp
roll
dec
inc
xchg
pop
push
or
ljmp
lock
or
xchg
sub
out
test
xchg
out
adc
mov
lods
push
inc
and
xchg
sbb
pop
dec
jmp
mov
outsb
push
push
insb
popf
repnz
bndstx
adc
ret
stc
dec
jnp
push
lret
jecxz
addr16
inc
std
inc
in
adc
push
lods
movl
mov
push
pop
test
ja
std
push
fiaddl
cmp
mov
dec
sub
push
das
fsubr
push
fiadds
jle
push
mov
enter
add
sub
jg
pop
sbb
push
pop
ds
add
cli
test
cmp
mov
xchg
lret
notl
enter
push
jnp
lret
fsubs
xchg
fsubs
mov
sahf
mov
rcr
mov
aaa
push
inc
mov
and
sub
out
add
call
imul
mov
movsb
xchg
or
insb
push
jle
fwait
sub
sub
mov
adc
into
and
mov
pop
dec
jg
notb
jg
outsl
sbb
inc
pop
movsb
push
sbb
je
clc
fwait
dec
ss
lds
jnp
lahf
loopne
and
dec
mov
jle
fimuls
scas
stos
pop
sub
mov
aas
into
push
aam
pusha
testb
inc
jns
test
idiv
cmp
testb
pop
and
inc
sbb
mov
cmp
inc
ljmp
test
inc
or
rcrl
ret
outsb
jae
sti
xor
jle
aad
mov
xor
decl
std
cli
shrl
leave
aad
push
dec
repz
cmp
xchg
xchg
mov
rcr
mov
imul
cld
mov
fcomip
decl
insl
push
or
fimull
mov
pop
pop
push
add
xor
out
pop
xchg
pop
cwtl
and
mov
and
xor
sbb
aad
mov
call
ljmp
push
std
in
mov
shrb
jns
adc
push
pushl
sub
loop
xchg
cmp
test
sub
xchg
aas
sub
fidivrl
inc
or
cmp
enter
pushl
loop
in
lret
insb
test
cmpsb
pop
add
cwtl
adc
cwtl
xchg
stos
test
pop
cli
loope
cmpsb
ljmp
and
cwtl
sub
mov
lock
ljmp
int3
clc
aaa
mov
shlb
arpl
mov
add
test
adc
lcall
or
sbb
push
cmp
add
mov
test
inc
js
cs
inc
xchg
lock
pushf
mov
xchg
jge
sbb
nop
and
push
pop
inc
inc
or
pushf
js
es
fcomip
push
xorl
mov
andb
cmc
dec
sbb
ljmp
mov
fcoms
and
insb
cltd
inc
mov
jns
fisttps
adc
popa
push
loope
lret
ljmp
fdivr
mov
orb
js
mov
iret
and
sti
jns
xchg
jns
cmp
cs
mov
mov
dec
push
out
loop
jg
cmp
jg
push
xor
pusha
ficoml
jg
add
xchg
call
sub
and
sbb
test
notb
xchg
lock
dec
and
lret
pop
jno
mov
jb
insb
je
std
out
call
pop
in
and
js
mov
movsl
jg
call
int
arpl
xor
in
ljmp
enter
push
mov
fisubrs
inc
pop
ljmp
xor
in
loop
stos
xor
dec
dec
fs
sbb
pusha
dec
xchg
in
push
incl
stos
pushl
dec
inc
rcrb
xchg
mov
adc
mov
test
sbb
ljmp
popa
arpl
hlt
xor
cmpsl
fwait
xor
sbb
loope
nop
pop
push
jecxz
sub
sar
mov
mov
movsl
rorb
jg
jmp
andb
sub
sub
push
xor
pusha
mov
mov
cmpsb
int3
or
pushl
outsb
lahf
cwtl
ss
aad
sbb
jo
add
or
cmpsb
repnz
mov
leave
ret
insl
pop
pop
sub
fisttpl
mov
and
in
xor
jmp
xchg
pop
push
jo
inc
add
jbe
dec
jmp
jle
mov
arpl
gs
jmp
cmp
xchg
jl
out
adc
dec
bound
lcall
xchg
out
push
adc
mov
and
mov
sbb
pop
in
jbe
dec
aam
cmp
call
shlb
repz
push
adc
stos
adc
or
loop
std
sbb
sbb
mov
mov
std
jmp
cwtl
js
mov
jb
adc
pushl
aad
arpl
out
mov
incl
scas
imul
cwtl
ffreep
test
sbb
lods
sub
xor
inc
inc
dec
aaa
adc
lods
out
loope
iret
xchg
xor
xchg
xchg
xchg
aaa
in
or
pushl
add
cmp
lds
or
cltd
fisubl
cltd
lret
inc
out
mov
jp
imul
mov
mov
hlt
mov
pushf
out
xchg
decl
cwtl
enter
aam
pop
pop
loopne
cmpsb
xchg
imul
xchg
pop
add
jnp
ret
cmpsb
lcall
mov
xchg
inc
add
insl
icebp
cli
in
dec
jmp
push
stos
cld
repz
pusha
jge
test
inc
enter
outsb
lret
xor
or
jae
mov
in
cli
sub
pushf
mov
or
repnz
pushl
and
imul
stos
fwait
lods
cmp
fstps
movsl
cs
ljmp
ficomps
mov
adc
je
sub
fwait
movl
lcall
ret
push
in
mov
jmp
adc
and
sbb
push
int
mov
fistl
mov
xchg
rorb
pusha
pop
or
inc
out
or
jl
mov
pop
int
jg
or
inc
out
stc
inc
stos
movsl
pop
pusha
les
xor
or
push
fcoml
jge
mov
mov
xlat
mov
inc
mov
rolb
or
insb
push
and
mov
stos
loope
vpcomq
shll
cmp
fistl
iret
outsb
out
cmp
push
scas
sub
cmpsb
fdivrl
scas
stos
sub
stos
movsb
mov
push
fs
inc
jg
dec
cld
and
and
ds
and
cld
jns
xor
inc
enter
lret
mov
push
add
cltd
addr16
add
andl
es
dec
pop
mov
pop
inc
adc
mov
inc
adc
andl
ljmp
xor
xor
stos
das
mov
fwait
mov
xor
scas
mov
jb
xchg
and
or
das
add
cmp
mov
sbb
xor
jb
or
sbb
lahf
andl
lds
or
sbb
jg
jp
lds
andb
adc
cmpsb
das
test
loope
adc
inc
mov
xlat
mov
clc
mov
movsb
mov
sub
in
std
insl
sbb
add
or
popf
dec
xchg
dec
cld
das
rorb
xor
testb
sbb
adc
fists
inc
rorb
add
pop
or
stos
xor
dec
mov
xor
add
ljmp
cmp
ljmp
and
add
mov
mov
or
xlat
dec
jmp
movsb
stos
xor
xchg
filds
add
call
xor
shl
adc
mov
jmp
lods
ret
imul
dec
mov
lcall
push
in
push
mov
add
pop
gs
mov
stos
sbb
mov
lea
jle
out
jp
cmpb
jne
decl
push
cmpsb
int
int3
mov
or
std
pop
fs
xor
lds
dec
and
out
push
inc
jnp
call
loop
jmp
sarb
mov
mov
sbb
mov
add
pop
mov
jg
mov
adc
imul
mov
mov
cmp
ljmp
in
cwtl
jecxz
fs
ret
pop
out
cmp
lcall
call
adc
test
xlat
mov
xchg
cmpsb
in
xor
cmc
decl
mov
sbb
cs
adc
mov
in
ss
xchg
decl
in
pop
lcall
jbe
pop
testb
push
mov
ret
or
ficomps
or
cmp
fwait
inc
pusha
jmp
xor
jb
dec
cmpsb
push
loop
jns
xor
ljmp
mov
mov
repz
mov
add
mov
int3
cltd
cmpsl
and
sub
call
fbstp
adc
sbb
xchg
add
lcall
ss
hlt
inc
jae
clc
dec
xchg
and
in
adc
sbb
jmp
mov
insl
jne
xchg
fabs
jb
dec
or
and
dec
adc
testl
cmp
push
xor
jle
lret
adc
mov
shrb
cmp
lcall
in
les
sbb
push
adcl
cs
ss
into
scas
gs
jmp
cwtl
sbb
xchg
sbb
xor
lea
icebp
fs
push
add
call
mov
cmp
add
imul
std
or
stos
and
xchg
jne
shr
movl
add
adc
mov
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
sub
pusha
mov
mov
cltd
xchg
add
fiadds
push
mov
test
sbb
or
vmovddup
incl
popf
mov
test
dec
jle
loop
dec
mov
jle
jo,pn
call
jnp
loop
dec
pushf
jae
xchg
or
mov
inc
or
gs
stos
stos
cmp
sbb
out
decl
push
adc
pop
scas
test
fs
jnp
jns
jle
imul
jmp
incl
rolb
cmpsl
push
pop
daa
adc
cmc
hlt
or
aaa
add
incl
lcall
mov
jle
loop
pop
lock
mov
incl
fisubs
jl
push
aaa
push
adc
lahf
dec
pop
adc
pop
pushl
push
mov
push
mov
push
call
cmc
gs
lods
jle
pop
fsubs
mov
rorb
mov
ljmp
repnz
fwait
into
insb
sbb
xor
es
gs
fisttpl
cli
push
and
pop
or
fdivrs
fld
sub
filds
mov
mov
inc
stc
out
and
cmp
imul
ja
roll
fs
insb
imul
xor
lds
mov
inc
pop
ja
test
mov
fstl
ret
test
std
xor
cmp
inc
in
lcall
adc
test
test
xor
mov
jp
push
pop
lds
stc
cld
cli
incl
adc
cmp
add
pop
andb
mov
xor
add
xchg
and
arpl
int
lock
stos
mov
lods
cmpsb
lock
icebp
rolb
xor
pushl
mov
sub
shrl
xchg
jle
movsl
mov
pop
out
mov
dec
pusha
leave
push
xchg
call
cmp
dec
lahf
jp
jo
in
imul
leave
sub
inc
and
mov
push
pop
ret
lret
leave
aaa
mov
shrb
fstl
adc
cld
out
mov
lods
ljmp
inc
cmc
sub
jb
push
lods
add
hlt
and
insl
icebp
loopne
and
je
mov
pop
sbb
and
dec
fbld
xchg
std
pushf
loop
jb
xor
aam
mov
jp
add
push
cmp
or
inc
iret
lret
jbe
ret
sub
xchg
test
or
pushl
je
stc
jns
hlt
roll
mull
xor
push
sbb
stos
adc
mov
mov
sbb
shr
xchg
mov
push
lahf
or
pushf
cmp
sbbl
dec
in
mov
std
fmuls
inc
cmpsb
mov
push
mov
scas
add
pop
jbe
adc
stc
fmuls
mov
loopne
in
mov
lods
jge
xchg
in
mov
aad
jmp
idivb
pop
aaa
mov
cld
fmul
mov
outsl
imul
das
xchg
shll
out
xchg
xchg
add
push
test
popa
shrl
movsb
cmp
inc
in
lret
pop
imul
addb
sar
clc
ret
xchg
add
jae
cmpl
insb
ja
dec
or
iret
jbe
jle
jg
xchg
cltd
sbb
xor
or
dec
inc
jg
lds
mov
repnz
frstor
jge
inc
nop
mov
ja
mov
fstp
daa
cltd
sub
mov
insl
xchg
insl
ret
decl
add
push
rolb
xor
jno
sub
sar
ljmp
popa
pushf
and
repz
jle
cmpl
mov
imul
and
mov
xor
test
mov
sbb
inc
test
xor
out
out
adc
insb
rclb
sbb
and
ja
xlat
sar
sbb
popf
icebp
stos
call
icebp
push
sahf
shll
repz
xor
dec
lods
adc
mov
mull
xor
es
and
lahf
jae
out
fmul
mov
push
pushf
decl
in
and
pusha
cmp
or
das
pop
add
sahf
pop
sarl
mov
fucom
jmp
out
test
sbb
push
sbbl
in
pop
cld
mov
sti
popa
and
xor
int
cli
outsb
mov
sbb
push
jb
add
jo
clc
jg
sub
cld
mov
cmp
cmp
or
lret
sbb
arpl
pusha
in
ljmp
mov
cmc
adc
pop
adc
xor
mov
aad
hlt
mov
stc
mov
sbb
adc
dec
push
inc
jg
lcall
inc
aam
cmc
push
cmc
call
popa
mov
insl
fwait
inc
negl
xchg
gs
mov
push
mov
inc
icebp
mov
test
and
pop
pop
sub
cmc
cmp
dec
popa
dec
or
test
inc
jbe
mov
pop
scas
lods
pop
inc
int3
lea
imul
push
mov
shll
repnz
fistps
loope
or
and
adcl
pop
loopne
subl
add
mov
lock
mov
sbb
enter
jge
popf
mov
add
jae
fcom
out
jmp
fs
cmp
icebp
mov
sbb
push
mov
ret
jmp
cmpsb
js
sbb
mov
push
fxch
dec
push
inc
ret
add
push
movsl
or
insb
fistpl
mov
decl
cmc
into
xchg
push
jge
orb
int
popa
cmp
je
loopne
movsb
aas
jp
mov
pushl
pop
dec
inc
pop
out
cs
sbb
push
jbe
add
cli
xchg
out
xor
jne
lcall
push
jl
push
fidivrs
push
dec
sub
push
cmpsb
inc
cli
mov
xor
fstl
jg
cmpsb
cmc
pushf
mov
icebp
cmp
push
xor
cmp
lcall
out
aad
movsb
int
inc
dec
and
cmc
sbb
xor
xchg
cmp
fwait
decl
xchg
mov
jo,pn
out
imul
pop
pop
int3
pop
mov
cmp
call
sub
sar
mov
pop
jno
xchg
add
inc
xchg
xchg
sti
das
mov
insb
cmp
jmp
jmp
int3
dec
mov
fldenv
jmp
loop
pop
and
xchg
mov
xchg
inc
mov
loope
and
jmp
xor
and
push
out
nop
pop
movsl
inc
add
cltd
lret
scas
inc
inc
dec
mov
fcomip
cmp
mov
scas
lret
mov
jne
mov
jecxz
or
ljmp
loope
inc
jno
mov
and
negl
aad
inc
jl
scas
xchg
push
xchg
cmp
jmp
sti
adc
mov
fnstsw
push
ljmp
scas
mov
push
ljmp
push
add
mov
loop
roll
ss
hlt
jmp
sbb
in
and
iret
and
and
out
jmp
xorb
aam
popa
xchg
icebp
mov
fadd
and
out
xchg
fs
inc
filds
dec
ss
popf
iret
mov
jbe
repz
mov
das
fwait
dec
sahf
nop
out
cmc
in
add
out
jg
cwtl
xor
xchg
or
bound
dec
stos
xor
or
test
cli
mov
std
lcall
out
inc
pop
jmp
sahf
pop
insb
adc
rorb
push
xlat
add
scas
js
adc
push
xorb
jp
decl
jle
sub
lods
ja
mov
std
ja
lea
stc
sbb
push
aaa
xor
jmp
sub
test
mov
lahf
xor
dec
add
cltd
arpl
jg
pop
add
arpl
fidivs
cmp
cmp
movsb
bound
pop
mov
incl
aaa
cmp
mov
ljmp
dec
jnp
lcall
mov
xchg
stc
aam
mov
subl
push
push
into
clc
mov
jmp
mov
das
jmp
sarb
and
js
scas
mov
and
call
test
xor
mov
cmp
mov
xchg
popa
aad
stos
inc
je
repz
mov
mov
fwait
insl
data16
mov
lods
mov
mov
cmp
call
lcall
push
sbb
sub
nop
sbbl
lock
cmpsl
sub
push
test
add
jmp
xor
js
dec
inc
adc
shlb
inc
add
stc
push
or
sti
lret
sbb
and
decl
loope
xchg
pop
xchg
fnstcw
pop
dec
lds
stos
dec
pop
push
sub
clc
mov
decb
mov
fildll
xlat
adc
fsubrl
mov
fidivl
jmp
fucomi
movsl
pop
dec
jns
sti
inc
mov
aad
mov
jb
out
jge
xchg
iret
xor
mov
mov
cmpsb
jp
cmc
pop
addr16
dec
push
mov
mov
les
sahf
sub
es
jnp
mov
filds
dec
and
mov
or
jne
push
ss
div
out
ds
jg
jmp
stos
ret
cmpsb
dec
push
imul
or
xor
subb
add
ljmp
cmpsl
fisttpl
stos
loopne
xor
iret
dec
push
jo
and
ljmp
jmp
push
mov
push
addr16
sbb
dec
or
daa
stc
add
jg
fisttpl
pusha
xchg
or
jp
psrlq
js
call
daa
and
shlb
movsl
mov
pop
dec
aad
movsl
sbb
sbb
ljmp
fs
add
sub
shl
xchg
testb
pop
jnp
adc
mov
lods
mov
inc
cld
add
mov
mov
fdivrs
std
out
jp
lods
push
shll
mov
and
mov
push
call
inc
adc
addr16
fimull
add
js
insb
movsl
aam
mov
in
jge
js
cmpsb
loop
decl
imul
cmp
mov
dec
shlb
imul
cmp
decl
jne
nop
push
bound
and
mov
pop
jp
aas
imul
decl
push
scas
outsl
inc
ss
div
push
inc
in
jle
cmp
pop
adc
cmp
xchg
lcall
push
sbb
ljmp
jmp
ljmp
mov
dec
sub
ds
jno
push
sbb
int
and
mov
fcmovb
shlb
data16
fcmovnu
dec
paddb
jae
xchg
add
notl
cwtl
push
aaa
jmp
leave
aaa
mov
aad
or
fwait
jecxz
sub
push
movsb
mov
inc
pop
xchg
outsb
xchg
mov
pop
jg
into
movsl
dec
jbe
andl
mov
fdivrl
mov
pushl
sbb
pop
lea
int3
lods
dec
jg
adc
lret
pop
iret
lret
call
daa
or
cltd
adc
inc
insl
jle
inc
stc
xchg
adc
stc
int3
sar
add
adc
psubd
cmp
add
pop
or
adc
lock
xchg
xlat
push
xchg
insb
jmp
rclb
test
cs
in
stos
pop
or
dec
cmp
pop
loopne
push
lea
orb
mov
adc
mov
mov
sub
mov
pop
cmp
mov
mov
push
int
cmp
cmp
and
imul
adc
push
pop
cmp
lahf
add
pushl
test
pop
rorl
push
pop
mov
idivl
pop
cmp
in
and
cmpb
test
mov
xchg
daa
cmc
arpl
mov
out
jle
fstpl
pushl
xchg
mov
jg
addl
pusha
push
popf
sahf
pop
je
inc
in
ret
cmpsb
cmpsl
enter
mov
aad
fistpl
iret
add
test
add
push
repz
adc
push
cmp
mov
jp
jnp
ret
jne
lcall
lds
push
jb
add
out
jg,pt
xchg
arpl
mov
or
pop
fisubl
movsl
pushl
ja
in
mov
shll
sub
fimuls
mov
push
xchg
sub
lcall
stc
jge
stc
lods
xchg
or
adc
push
inc
and
mov
fdivrs
mov
decl
test
mov
adc
insb
andb
xchg
pushf
rclb
push
test
call
xchg
cmp
or
movsb
pop
imul
out
leave
test
lea
out
inc
ja
testl
jmp
mov
repnz
xor
rcrl
pushl
nop
and
sbbb
cwtl
jge
xchg
inc
insl
aaa
mov
pop
ret
je
popf
inc
or
sarb
push
enter
mov
aas
imul
scas
fnstcw
mov
inc
jmp
mov
shr
xchg
decl
cmp
fnstsw
int
shl
ror
cmp
roll
outsb
jg
lock
mov
aas
xchg
daa
inc
sti
mov
jne
cmpsl
int
xchg
pop
jbe
dec
je
mov
jle
mov
call
mov
jg
roll
dec
xor
sbb
movsl
push
jle
in
sub
mov
cmp
sbb
adc
mov
jae
dec
jmp
lcall
push
jge
out
inc
mov
out
add
push
mov
push
hlt
or
ljmp
jmp
jo
or
cltd
jo
push
inc
iret
mov
mov
shll
sub
jmp
sub
inc
lret
jmp
pop
fmull
xchg
sbb
pop
sbb
jmp
jg
or
incl
pop
xorl
das
out
mov
xchg
sub
push
inc
dec
jne
inc
xor
cltd
loop
fwait
in
cmp
cmp
fsubl
mov
lcall
cmpsl
jmp
popa
push
or
mov
test
pop
scas
mov
pop
aad
sbb
mov
pop
lret
in
leave
lods
lea
jmp
mov
jl
xchg
outsl
push
cmpsb
fldenv
mov
inc
sbb
out
and
mov
iret
lret
xchg
ljmp
mov
out
shll
loopne
or
fwait
outsl
aad
call
ret
mov
jl
jg
fs
add
and
push
xchg
jp
xor
xor
add
jmp
stos
push
inc
lret
mov
call
mov
push
inc
push
je
cmp
or
xor
scas
push
lret
decl
mov
stc
add
and
inc
cmp
dec
push
fsubl
cwtl
inc
scas
or
cmp
shr
jmp
std
mov
stos
add
cmpsb
lock
cli
and
and
xlat
bound
fadds
xchg
jg
incl
lahf
stos
in
inc
dec
cltd
inc
sub
scas
aaa
ret
nop
adc
or
ljmp
xchg
out
pop
out
mov
test
push
loop
or
adc
sub
inc
xchg
incl
loopne
orl
jg
xchg
pop
mov
push
and
jg
decl
xchg
dec
cld
orb
mov
inc
sub
mov
inc
xchg
incb
stos
cli
or
adc
xor
pushf
in
jae
incl
ss
and
pushl
shlb
js
push
jle
add
jo
leave
sbb
xchg
inc
clc
imul
ss
clc
push
imul
mov
mov
push
shl
push
icebp
pop
ret
adc
repnz
incl
pusha
fldenv
xor
pushl
int3
js
gs
icebp
mov
cmp
jge
lcall
push
xor
mov
lcall
and
jb
out
insb
mov
jmp
push
mov
sub
mov
mov
lock
lods
xchg
incb
shlb
push
adc
pushl
sbb
lods
jb
in
push
sarl
ss
outsb
mov
sub
and
mov
mov
and
pop
scas
pop
hlt
jg
scas
test
sahf
in
dec
sub
cmp
cmpsl
sahf
pop
es
faddl
xor
insb
mov
aaa
jne
push
adc
dec
cs
jp
inc
xor
and
and
rcrl
sti
jae,pn
jl
xchg
add
fists
mov
sbb
hlt
imul
xor
int3
ss
aas
mov
mov
dec
mov
ljmp
xchg
mov
ja
ljmp
push
lock
aas
sub
lock
std
bound
cli
dec
pop
xchg
and
jecxz
cmp
scas
adc
decl
test
mov
test
nop
clc
jns
dec
cmp
imul
pop
cmpsl
cmpsb
jecxz
mov
call
insb
inc
push
mov
jge
push
mov
dec
popa
les
rol
xchg
add
adc
pusha
scas
mov
dec
jmp
xor
call
in
movlps
sbb
shlb
mov
decl
pop
in
lahf
insb
hlt
pop
repz
std
ret
and
lea
sub
dec
sar
call
push
inc
mov
dec
ljmp
sub
out
cwtl
xor
fsubs
and
ljmp
lcall
nop
imul
nop
not
mov
xlat
push
xor
jno
sub
fisttps
ljmp
fiadds
mov
lds
cld
mov
cltd
aas
lret
pop
jmp
ds
data16
jmp
ds
sbb
pop
iret
or
pop
insb
cltd
xor
sar
or
mov
nop
mov
add
je
mov
std
dec
rcrl
test
cmpsb
xchg
outsl
dec
xchg
pushf
mov
lret
jg
inc
shll
insb
sti
push
jmp
decb
sbb
ljmp
jmp
mov
repz
push
add
adc
pop
mov
xor
and
decl
pusha
lods
add
sbb
push
fildl
pop
test
push
mov
jmp
fdivl
sub
mov
xchg
cltd
mov
popf
sub
and
mov
adc
incl
dec
insb
jae
add
cmp
test
cwtl
push
xor
icebp
out
out
pop
xchg
pop
push
jbe
push
add
in
mov
xor
jl
push
pusha
pop
filds
mov
orb
sahf
jne
dec
arpl
push
test
sahf
add
dec
sbb
pop
ficoms
mov
push
outsl
insb
ljmp
arpl
rcl
add
mov
inc
fcoms
sub
sub
sti
or
fstl
dec
outsl
xor
cli
xchg
call
sbb
ret
test
sbb
inc
mov
in
pop
mov
cltd
imul
stos
test
call
stos
imul
sbb
outsl
outsb
and
cltd
or
mov
std
addb
dec
loopne
sahf
lcall
dec
das
dec
xchg
jbe
out
xchg
push
notb
dec
push
fwait
lock
out
mov
dec
dec
adc
mov
mov
sti
push
or
outsl
xchg
sbbb
repnz
je
test
cmp
dec
mov
ss
or
xor
push
mov
pop
and
imul
decl
pop
stc
incb
sbb
or
jge
jae
add
ds
or
add
fidivl
lret
push
insb
enter
shl
push
in
inc
cmpsb
repnz
call
mov
xlat
cltd
mov
int3
lret
or
mov
je
jmp
xchg
jg
xchg
sub
pushl
push
mov
lods
sbb
cmc
jge
ljmp
xor
enter
incl
dec
addr16
cmp
push
enter
sti
dec
mov
in
sbb
fmul
enter
sar
ljmp
pop
xchg
adc
insl
inc
mov
or
fldt
imul
jg
outsb
xor
xchg
dec
jecxz
lods
std
test
lret
ja
lock
out
cmp
mov
call
xchg
sahf
cmpsl
test
dec
orl
mov
loope
xchg
and
mov
mov
decl
decb
inc
imul
inc
int3
push
fsubr
lods
mov
dec
add
ljmp
xor
mov
loope
test
xor
insb
loopne
inc
jl
loop
in
and
mov
jle
fstpl
add
push
das
neg
jmp
imul
sub
mov
jo
clc
push
mov
inc
enter
scas
inc
mov
insl
into
daa
cmp
sti
fcmovnb
add
and
mov
sbb
dec
enter
sbb
cmc
repnz
clc
push
inc
cmp
loopne
popa
xor
addr16
iret
mov
xchg
xchg
cmp
lret
stos
out
out
shrb
lods
push
and
adcl
stc
outsb
cmp
sub
or
ljmp
push
inc
fmull
xchg
add
bound
and
or
xor
fcomip
test
inc
sbb
xlat
fst
jnp
hlt
pop
lret
adc
mov
cmpsl
scas
scas
cli
jns
hlt
das
sub
jl
sub
cltd
imul
cmp
dec
and
add
adc
int
lds
adc
pop
popf
dec
fcoml
ror
sbb
sahf
fcmove
stc
xchg
add
loop
outsl
fsubrs
mov
hlt
mov
aam
or
divl
fsubrp
loop
push
in
pop
jmp
fcomps
data16
adc
xchg
mov
inc
out
sub
mov
call
jmp
fidivrl
sub
std
push
mov
inc
test
pushl
std
fcomps
hlt
aaa
mov
call
push
inc
mov
pop
call
jbe
push
roll
stos
or
jnp
jns
push
mov
and
hlt
lods
decl
dec
inc
cmp
sbb
pop
pop
adc
stos
xchg
incl
nop
push
decl
push
adc
fwait
jmp
add
into
xor
push
dec
imul
ljmp
mov
dec
sti
cmpb
and
ret
mov
mov
cmc
daa
aam
ljmp
lods
sbb
and
orb
lock
scas
xchg
sub
out
lods
scas
clc
mov
inc
jp
inc
je
loopne
xor
or
subb
aad
push
add
pop
dec
mov
xorb
insl
xchg
fsubr
incl
push
into
jnp
fcompl
stos
aas
ds
ficomps
adc
push
cmc
mov
cmp
dec
jae
jmp
xlat
pushl
pusha
or
fimull
test
push
mov
inc
pop
push
dec
mov
mov
int
test
pop
imul
imull
mov
call
lods
mov
xor
sbb
cmp
cmp
cmc
sti
jg
or
nop
in
decl
aas
imulb
cmp
popa
test
dec
ffreep
jl
stos
pop
pop
lcall
mov
pushl
jp
inc
mov
and
xchg
mov
dec
jmp
mov
stos
jne
repnz
lahf
push
inc
ret
orl
popa
jbe
mov
xor
cmp
incl
fisttpll
sbb
mov
cltd
shrl
or
lock
test
mov
jg
outsl
sbb
aam
or
mov
and
rcrl
cs
xlat
imul
push
pushf
mov
cmp
jmp
add
cld
aaa
jae
jae
adc
out
addl
imul
call
mulb
dec
xor
gs
mov
push
xor
enter
dec
in
xchg
incl
cmpsb
pop
pop
pop
dec
fisttps
fucom
popl
popf
sub
mov
add
mov
imul
pop
ret
lcall
ja
mov
mulb
mov
nop
dec
cmpsb
push
ficomps
xchg
sti
pop
mov
mov
clc
sbb
mov
xor
mov
dec
out
add
not
nop
mov
sbb
popa
sahf
jb
lcall
jmp
insl
cmp
ja
test
xchg
jne
sbb
rorb
sar
jmp
mov
fcoms
icebp
mov
mov
xor
adc
and
call
fsubrl
in
shlb
sti
cmp
stc
sub
xchg
fst
cmpsb
add
fs
incl
lret
or
ret
sbb
pop
scas
xchg
mov
sub
aaa
fnsetpm(287
sub
dec
xchg
fwait
xor
cld
decl
out
adc
aad
and
fists
push
push
sub
adc
incl
or
adc
xchg
xor
xchg
jnp
imul
cs
push
aam
sub
icebp
div
ljmp
test
push
stos
bnd
iret
sbb
and
roll
fcomps
dec
sbb
sbb
fnstenv
xchg
ret
pop
inc
xor
pop
scas
rcll
in
pushf
shlb
cmp
repz
pop
push
lret
cmp
add
loop
mov
ss
test
add
jae
dec
call
loopne
push
jns
mov
jmp
in
sbb
jns
jmp
adc
jmp
xchg
popa
jle
xchg
sub
imul
dec
test
xor
test
inc
sahf
call
je
jmp
mov
xor
lock
shlb
and
icebp
es
dec
ficomps
call
decl
push
clc
adc
stos
cs
inc
gs
popa
cltd
mov
loopne
ljmp
int3
jnp
outsb
pop
subl
and
push
push
mov
push
je
pusha
jl
in
call
in
addr16
add
js
mov
cmp
movsl
jp
fcompl
incl
xor
jbe
and
sub
fnsave
mov
cmp
mov
shl
jecxz
pusha
movsl
decl
jne
mov
mov
icebp
xlat
mov
scas
cs
daa
sbb
sarb
lahf
cmp
fildll
cmpsl
inc
push
enter
jge
icebp
sbb
lahf
test
decl
ss
pop
dec
lock
stc
lret
xchg
mov
mov
ljmp
sub
cmp
mov
imul
or
inc
cmp
push
decl
sub
jae
sbbb
stc
test
inc
hlt
pushf
add
std
scas
xchg
cmpb
mov
push
imul
xor
or
movsl
scas
cs
pop
xor
jae
or
inc
out
addr16
push
adcl
sub
pusha
jnp
arpl
ss
lea
rcl
adc
in
pushl
addr16
mov
out
xchg
daa
popa
roll
cmp
add
incl
aas
call
into
jne,pn
jns
xor
roll
rcrb
ss
ljmp
mov
dec
lods
sbb
aas
popa
cld
inc
pop
jecxz
jae
js
test
icebp
pushl
mov
out
data16
push
jbe
mov
and
jecxz
dec
test
int3
incl
cmp
or
sub
ret
fwait
add
ljmp
orl
pop
mov
call
sbbl
roll
push
cmp
sbb
pushl
jnp
jmp
sbb
out
pop
cmpsb
stos
mov
inc
adc
adc
jno
dec
inc
jmp
rclb
pop
push
pusha
loope
sti
jbe
mov
fnsave
mov
dec
dec
pushf
pop
imul
dec
cmovbe
ds
repz
adc
jbe
add
xor
decl
xor
sbb
int
fstpl
dec
lock
ret
lcall
ss
mov
in
inc
or
push
loopne
movsl
inc
enter
pop
divb
call
xchg
push
pop
popf
cmp
outsl
hlt
aad
inc
xchg
jne
xor
repz
add
iret
decl
fxtract
outsb
daa
jmp
mov
lods
mov
or
or
fsubrl
decl
dec
mov
inc
std
shr
rol
xor
xchg
addr16
adc
enter
in
test
pushl
es
test
jbe
xor
in
adc
push
mov
cmc
ljmp
jmp
insl
and
add
mov
inc
js
movsl
add
add
fisttps
xor
pop
inc
repz
test
lock
mov
xor
mov
lcall
cmp
cld
and
push
xor
mov
mov
sbb
sub
jmp
loop
shrb
xchg
mov
sbb
jbe
int3
aas
xlat
sub
imul
scas
cli
fidivrl
xchg
fstpt
in
and
lahf
cwtl
mov
enter
inc
inc
movsb
ljmp
lret
lods
jp
std
and
data16
repz
mov
jae
cmpsl
mov
add
pushl
cli
leave
inc
int
rol
cli
mov
in
cmpsl
aam
jo
test
ret
mov
adc
lcall
in
push
inc
or
lret
xor
std
out
mov
leave
xchg
and
fisttps
outsb
sahf
hlt
or
xchg
jb
sti
and
repz
cmp
incl
scas
int3
cmp
push
jmp
cs
pop
test
xor
jp
or
push
inc
cmp
jecxz
mov
jg
add
mov
movsl
jmp
sbb
nop
xchg
push
outsl
dec
sbb
into
pop
je
push
out
xchg
sbb
cmc
lods
gs
add
jnp
and
adc
cmp
adc
clc
pop
aas
and
pop
jae
mov
inc
xchg
xor
and
jmp
test
cmp
sbb
inc
xchg
pusha
sub
insl
sahf
push
ljmp
inc
xor
mov
js
mov
jle
lods
xchg
adc
xor
lret
cwtl
ds
push
cmp
xor
into
sub
jmp
sti
and
inc
sub
rorl
sbb
mov
jae
jnp
lcall
add
dec
xchg
ret
push
nop
mov
jg
jbe
push
and
push
jae
loop
insb
lcall
inc
jno
test
mov
mov
cmp
cld
inc
xchg
in
iret
ret
push
and
lea
ljmp
mov
into
add
imul
xlat
pop
and
sbb
sub
ljmp
jno
lahf
dec
call
pushf
mov
dec
jbe
xchg
divl
cmp
mov
or
jnp
pop
sub
jmp
lods
jge
call
push
or
sub
fadds
outsb
lcall
adc
lcall
or
xchg
mov
adc
pop
and
fcomps
mov
pop
ljmp
adc
notb
add
dec
and
push
mov
frstor
mov
cld
lcall
push
aaa
mov
std
dec
fcos
and
jb
test
int3
dec
cmpsb
dec
jno
mov
push
in
push
lret
mov
jle
loope
push
bound
fwait
sbb
mov
in
ret
std
adc
rcrl
inc
dec
sbb
or
mov
pop
add
and
push
dec
sub
sahf
dec
dec
sub
adc
sbb
data16
das
test
mov
incl
dec
push
mov
push
cmp
ljmp
and
jle
aam
out
adc
fimull
mov
jae
mov
sub
sahf
or
pop
adc
or
out
sbb
adc
mov
or
xor
pop
mov
stos
add
in
cmp
sub
in
jo
cmpsl
xchg
and
pop
xlat
cltd
xor
fld
insl
test
lret
decl
jnp
mov
cmp
cmovae
into
mov
xor
call
inc
cmp
jnp
sub
call
popf
fisubs
adc
pop
sbb
sbb
in
ret
push
addb
sar
and
fisttps
clc
mov
in
push
leave
or
sub
xchg
sar
dec
notb
cltd
cli
jp
ret
jle
push
mov
int
int
xor
frstor
jne
ljmp
ds
sti
test
testl
stos
mov
lcall
movsb
out
test
push
je
pop
movl
inc
sbb
sar
fbld
dec
repz
mov
dec
scas
lods
push
push
cmp
pop
loop
xchg
test
incl
hlt
mov
mov
mov
jle
mov
scas
decl
icebp
out
data16
xchg
sbb
lahf
pushf
pop
fldenv
fldt
shl
pop
std
lcall
test
cmpsl
mov
ret
xchg
inc
mov
test
pop
xor
nop
dec
pop
rorl
cli
and
mov
outsl
adc
lods
test
mov
lahf
sub
in
adc
repnz
mov
ljmp
sbb
pop
stos
inc
or
ret
dec
push
or
inc
mov
mov
cs
jg
jmp
push
pop
jo
mov
rolb
lds
incl
mov
inc
mov
push
cmpsb
stos
mov
mov
movsl
arpl
decl
dec
push
pmaxsw
xlat
ret
das
dec
out
cmpsl
into
pop
test
test
out
rcl
daa
stc
mov
iret
push
das
shrb
and
dec
inc
cs
pop
cltd
cld
das
in
add
push
insb
daa
and
xchg
ljmp
mov
ljmp
ljmp
addr16
inc
insb
cmp
fdivrl
in
fldcw
lahf
cli
sbb
pop
mov
mov
loope
and
cwtl
xchg
mov
loopne
fiadds
add
pop
fnsave
test
decb
and
leave
dec
or
stos
scas
adc
pop
int
fs
and
dec
in
adc
mov
ljmp
xlat
jle
faddl
test
outsb
loope
test
and
push
push
dec
jbe
add
and
loopne
mov
mov
jle
mov
jg
sti
les
add
addb
jb
sub
cld
mov
cmpsb
outsl
mov
in
xchg
mov
and
sbb
xchg
jnp
push
enter
and
add
mov
jmp
insl
jmp
mov
mov
and
and
out
dec
xor
mov
jno
add
cmp
mov
pusha
mov
jg
xchg
sbb
jmp
sub
ret
addl
cmp
fwait
or
dec
xchg
add
mov
push
push
dec
insl
sbb
inc
mov
scas
je
call
mov
stc
cmc
push
sbb
pop
sbb
lcall
clc
mov
lret
rcrl
pop
jg
jecxz
jle
nop
sbb
cwtl
scas
in
ficompl
dec
test
aad
sbb
cvtpi2ps
jmp
ljmp
xlat
xchg
adc
mov
xchg
aaa
cmp
ds
lcall
pushf
jp
inc
aaa
jge
mov
loop
loop
jge
and
lods
rol
xor
call
popa
stos
xchg
push
jle
sub
mov
mov
icebp
inc
adc
mov
mov
dec
cltd
subb
and
repnz
icebp
dec
push
jo
roll
icebp
jo,pt
fimull
out
dec
mov
push
nop
or
mov
cmp
incl
mov
pop
jnp
sbb
lahf
adc
bound
sub
mov
das
xchg
les
bound
lret
icebp
mov
sub
pusha
div
fsubl
mov
fistpll
je
sbb
mov
adc
push
jle
loope
mov
push
mov
ja
lcall
pushf
mov
cmp
ljmp
cwtl
xchg
pop
inc
fwait
mov
dec
pushl
fs
jne
xorb
push
add
mov
aam
cld
repz
pop
mull
fisttpll
pushf
rclb
mov
jp
incl
lods
or
cmp
stc
jno
cs
push
push
ret
pop
adc
cmc
xchg
jle
fs
in
mov
ret
mov
hlt
icebp
pop
sbb
insl
testb
jmp
ljmp
icebp
cmpsb
sub
mov
cmpsl
addb
decl
sysret
add
pop
arpl
dec
adcl
sbb
inc
fcmovnbe
ret
lods
pop
jo
mov
bound
icebp
decl
add
xlat
rcrl
and
mov
mov
test
lcall
pop
pop
loope
xchg
ss
scas
fldpi
push
loopne
xchg
rcl
fs
ja
scas
dec
push
xchg
jmp
clc
js
aam
stos
mov
xchg
gs
fnstenv
push
ja
cmp
mov
or
ljmp
aas
pushf
test
and
xchg
in
mov
mov
inc
adc
and
mov
dec
leave
xor
add
push
xchg
dec
ja
ret
aad
je
sahf
stos
hlt
rcrl
sti
mov
and
jmp
xchg
popf
es
fstl
sub
jnp
in
ret
mov
jmp
out
insl
xchg
jbe
cld
incl
mov
xor
pop
stos
into
xchg
cmpsb
mov
fisttpl
inc
push
sbb
addb
and
cmp
sub
push
adc
in
push
xor
push
out
jmp
cmpl
pop
jae
test
std
pop
add
lcall
mov
rorl
sub
ss
inc
sub
testl
hlt
sub
in
cltd
sti
idiv
mov
stc
mov
dec
add
orl
mov
call
sub
in
pop
pusha
fs
arpl
test
scas
add
add
out
xlat
pop
std
cmpsl
pushl
cld
cmp
enter
aad
adc
stos
add
xchg
xor
or
into
icebp
jns
ret
bound
adc
int
dec
dec
jne
mov
jg
das
out
mov
cld
decl
rep
inc
fldenv
out
mov
cmp
in
aam
xor
xchg
imull
fidivrl
xchg
sti
mov
stos
inc
sbb
stc
jbe
jl
jae
sbb
or
jg
aad
add
imul
scas
fdivl
pop
mov
mov
mov
xchg
adc
sub
daa
cltd
lods
mov
loope
xchg
pop
mov
incl
push
stos
loope
inc
cmc
cmp
dec
scas
pop
push
dec
lahf
jmp
jae
in
incl
sbb
mov
and
dec
jg
inc
in
jnp
xchg
push
xchg
pop
jmp
cli
lock
jg
mov
bound
pop
xchg
rcl
movsb
in
stc
fs
or
decl
les
inc
jno
cmp
popf
ret
jne
and
ja
les
aas
cmp
mov
nop
movsb
imul
xor
shrl
pop
cmc
incl
and
pop
hlt
nop
int
das
sbb
rcrb
lcall
inc
mov
push
cmpsl
lds
insb
aad
call
imul
movsl
jb
in
fldl
dec
xor
pushl
bound
adc
pop
testl
popf
repnz
lock
enter
and
inc
xchg
ds
dec
jne
pop
scas
aam
or
xchg
jmp
push
jns
fists
xor
mov
repnz
rcrb
fcmovu
xor
cmp
enter
adc
add
int3
xchg
rcll
roll
mov
out
subl
ljmp
pushl
sbb
cmp
jp
and
xor
imul
add
sti
ja
stos
movsl
dec
dec
push
mov
adc
pop
incl
cld
inc
mov
cmp
xor
andl
ret
mov
lcall
jmp
xchg
xchg
sbb
or
jns
out
sub
inc
xor
insl
aaa
ja
std
add
decl
inc
sbb
insb
lea
push
xor
adc
sub
aad
mov
ljmp
mov
xchg
mov
dec
mov
in
xchg
in
loop
scas
rorl
test
movsb
pop
nop
add
jbe
cmp
ljmp
rcrb
das
mov
dec
in
out
cwtl
out
aad
push
sahf
sub
leave
push
idivb
js
pop
pushf
out
sbb
jo
daa
adc
scas
push
xchg
inc
insb
into
jae
loopne
inc
lret
mov
incb
xchg
inc
pop
push
pop
in
mov
sbb
push
adc
sbb
sbb
lcall
push
mov
xchg
cwtl
push
loope
cmp
jns
in
gs
adc
imul
pusha
arpl
add
xchg
mov
xchg
out
movsl
sbb
loopne
xchg
pop
add
jg
mov
mov
int3
push
cmp
imul
and
xchg
movsl
add
sub
repnz
ljmp
adc
in
sbb
std
sub
fbld
inc
les
leave
jo
and
jnp
pushl
jb
enter
negb
in
jmp
inc
push
xchg
lahf
leave
scas
jp
and
pop
xchg
or
into
mov
dec
nop
and
ja
mov
xor
pop
jge
add
inc
inc
dec
mov
jp
mov
mov
sti
jmp
jb
xchg
push
clc
and
stc
sub
adc
scas
ljmp
inc
push
aam
leave
sti
mov
std
sahf
add
jmp
test
dec
xorl
stos
loopne
int
jge
imul
push
lds
push
call
das
push
call
mov
pop
inc
inc
data16
notb
cmp
test
jae
clc
mov
mov
fwait
clc
pop
jecxz
push
mov
addr16
mov
push
mov
ja
dec
icebp
std
call
add
pop
ret
sub
in
int
insb
xchg
mov
insl
lret
pushl
mov
fwait
xorb
pop
xor
mov
add
push
sbb
pop
dec
dec
push
cmp
jnp
stc
rcrl
inc
les
jl
add
lret
xor
imul
lods
or
adc
jmp
cmp
dec
inc
xor
iret
mov
pop
inc
das
mov
js
cmp
aad
mov
ljmp
pop
stc
fidivrl
pop
or
repnz
push
mov
loopne
mov
ljmp
mov
repz
rol
or
sbb
repnz
mulb
push
addb
sahf
in
jmp
popa
je
mov
dec
or
aam
out
data16
add
adc
inc
mov
push
dec
aam
jmp
cltd
push
add
xor
pop
xor
fwait
lds
xchg
or
pop
neg
jl
inc
sahf
inc
repnz
out
mov
test
je
jg
cltd
das
lcall
add
out
test
aad
jle
lods
mov
cmp
pop
call
outsb
add
push
stos
mov
scas
dec
add
lahf
test
scas
call
lcall
pop
mov
lcall
push
popa
or
decl
clc
dec
cmp
and
mov
push
xor
mov
neg
call
and
insl
adc
loopne
jg
sub
shll
push
fdivp
xchg
incl
stos
pushf
sbb
xchg
jo
cltd
jge
add
inc
call
call
jg
mov
movups
jo
jle
leave
movsb
lock
or
insl
mov
push
or
incb
std
xchg
mov
insb
dec
lahf
jmp
sub
test
sbb
sub
xlat
lea
loop
rolb
dec
mov
xchg
mov
jmp
ljmp
pop
jae
xor
fs
pop
sbb
add
imul
mov
daa
ljmp
rorl
jle
fs
pop
or
adc
add
das
jbe
insl
add
stos
call
sbb
xor
push
jg
ds
and
fdivr
out
das
clc
cs
cmp
add
pop
sbb
cld
xchg
lock
xchg
imul
fdivr
adc
mov
lcall
repz
pop
out
jo
int
outsl
leave
cmp
dec
out
push
pop
cmpsb
fs
cmp
lcall
mov
dec
inc
mov
lcall
mov
mov
jg
push
stos
loop
in
ljmp
cli
fisubl
add
ss
cmp
dec
mov
pushf
jle
mov
movsl
fstl
hlt
incl
pop
aas
lret
sbb
inc
or
mov
xlat
ja
mov
jg
ljmp
jle
pop
jle
or
jmp
stc
roll
pop
add
dec
xchg
call
cli
cmpsb
movsb
mov
scas
add
testb
gs
adc
xchg
mov
fistps
and
jo
push
xchg
xchg
lods
mov
or
inc
fldl
push
xor
jmp
lods
jl
loope
lret
mov
rcrl
test
stos
push
push
sub
sub
jg
subb
and
mov
ljmp
add
testl
sub
xor
ja
sbb
out
lea
inc
ret
add
repz
xchg
and
das
das
mov
push
mov
sahf
dec
movsl
test
call
pusha
ds
or
mov
aam
mov
xchg
pop
loopne
arpl
fldl
mov
call
in
movsl
jle
and
or
jns
sarl
fistpll
pushf
hlt
pop
sbb
mov
ljmp
push
aad
imul
sbb
pop
stos
mov
call
and
loope
dec
pop
sbb
mov
cmp
inc
fldt
stos
les
cli
xor
xor
add
clc
js
add
call
sarl
xor
in
test
dec
mov
bound
xor
decl
mov
es
loop
pop
flds
cmp
dec
dec
pushl
repnz
mov
mull
pop
loopne
jle
xchg
jecxz
push
inc
xor
mov
inc
lods
push
pop
sahf
mov
jp
decb
or
mov
and
and
pop
add
lahf
nop
mov
jmp
cmp
cmc
imul
out
pop
pushf
cld
jbe
sub
notl
and
call
and
lret
jns
xchg
add
add
cs
or
adc
pop
mov
xchg
call
dec
fdiv
incl
mov
mov
cmpsb
cmpsb
lds
test
dec
jp
jno
shl
add
pusha
loopne
sahf
mov
cmp
dec
push
cmp
mov
or
outsl
sub
pop
aad
mov
mov
jbe
cltd
cli
mov
ret
jne
xchg
dec
jg
pushl
aas
mov
xchg
cmp
pusha
lret
arpl
jg
pop
fisubrs
jmp
push
pushl
les
fdivr
adc
mov
loop
and
jmp
xchg
pop
xchg
insl
mov
sub
add
sti
pop
roll
mov
mov
shll
cmp
cli
add
dec
ljmp
lahf
add
aad
sbb
sub
imul
popa
faddl
pop
mov
lcall
push
mov
push
inc
lods
push
push
sub
das
push
dec
or
test
dec
lods
mov
dec
xchg
ret
mov
cmpsw
push
jmp
fwait
fnsave
lea
rolb
rol
push
and
jbe
mov
push
or
call
popf
shll
adc
lods
pop
aas
and
testl
mov
call
mov
jno
xchg
iret
mov
mov
sahf
imul
lods
dec
call
mov
adc
dec
inc
adc
shrl
cli
mov
jmp
jmp
add
mov
cmp
adc
add
cmp
test
push
xor
leave
dec
ljmp
push
adc
out
cmpsl
dec
xchg
xor
sbb
aaa
inc
loopne
adc
lods
add
decl
push
aad
lahf
in
sti
fdivl
std
stos
lcall
into
cli
push
fcomp
sar
cli
inc
sub
jnp
subb
test
scas
xchg
popa
pop
lret
mov
push
adc
jl
adc
mov
pop
es
loope
adc
arpl
pop
mov
pushf
and
push
out
imul
dec
adc
lds
pusha
xchg
stos
pusha
in
inc
mov
cmp
mov
lcall
js
cmpsb
mov
inc
lcall
mov
mov
jecxz
lods
int
incl
add
xchg
push
popa
push
fmull
shrl
inc
test
push
push
call
add
sbb
inc
sti
pop
or
movsb
jge
and
mov
int3
lds
mov
subb
pushl
aam
fisttpll
pusha
fcom
outsl
or
dec
cmp
pop
stos
cmpsb
xchg
imul
pushl
das
fwait
cmp
lods
in
into
xchg
or
insb
push
xor
mov
lcall
scas
sbb
inc
pop
jmp
cld
jle
sub
push
fsubrl
push
fs
call
push
xor
ret
and
jle
addb
mov
mov
pop
lahf
pop
cmc
jp
test
adc
ljmp
mov
dec
sbb
cmp
jae
mov
cmp
cmp
lret
pop
into
inc
loope
mov
jmp
jo
mov
inc
mov
imul
test
imul
stos
lock
repz
das
sar
das
mov
pop
push
into
sub
cmp
out
sarb
sbb
cld
push
sub
nop
mov
or
pushl
sbb
push
jbe
lods
adc
out
aam
nop
shlb
scas
iret
fisttps
decl
and
insl
sbbb
sbb
cltd
inc
inc
lea
xchg
sbb
incl
or
repz
in
out
leave
in
mov
dec
leave
fildl
mov
inc
idiv
push
notl
lret
dec
add
or
pop
call
bnd
lcall
scas
dec
xor
sub
mov
shr
in
dec
and
cs
call
sahf
jecxz
pushf
lret
lsl
jmp
movsb
inc
mov
das
xchg
cmp
lcall
rcl
rclb
or
pop
and
cli
inc
cltd
arpl
jae
mov
call
fisttpll
cld
out
add
js
imull
or
scas
inc
std
and
ljmp
mov
addl
xor
push
inc
imul
testb
testb
jne
sbb
jmp
xchg
lcall
stc
add
cmp
xor
sub
ja
in
dec
xchg
xchg
repnz
incl
sar
lcall
cmp
cwtl
cmp
test
sti
shlb
inc
lret
roll
jmp
lcall
fsubrl
jp
fbstp
ss
in
sbb
scas
sbb
cmpsb
mov
call
xchg
fnstcw
add
js
inc
stos
arpl
imul
mov
dec
xchg
clc
dec
xor
cmp
lea
std
cmc
test
imul
inc
pop
ror
pushl
mov
jle
scas
je
fs
lods
shrl
xchg
add
std
clc
xchg
fbstp
jbe
int
test
out
add
pop
or
shll
sbb
cmp
bound
jmp
imul
pop
addb
add
arpl
xor
mov
sub
adc
lcall
shlb
test
xchg
mov
push
stos
mov
lret
push
les
xor
lcall
into
das
sar
sub
cltd
setae
cmp
mov
xor
xor
call
in
fcomps
loope
jg
adc
pop
dec
fnstsw
pop
test
ljmp
bswap
inc
cmpsb
dec
mov
test
mov
ja
lret
mov
insb
movsb
mov
jns
ljmp
jmp
or
sub
jae
jo
jmp
jecxz
pushl
cld
sti
xchg
outsl
les
std
cli
fidivl
ret
mov
sbb
push
in
hlt
add
dec
out
or
cmp
out
jbe
scas
sbb
mov
xor
dec
xchg
lods
jg
outsl
cli
jmp
sbb
data16
pop
sbb
xlat
pop
sti
add
data16
fbld
push
shr
add
sub
inc
push
jne
mov
cmpsl
lcall
gs
and
mov
or
cmpsb
cmpsb
test
outsl
cli
out
cli
mov
dec
mov
sbb
fcmove
add
sub
lcall
std
jb
mov
cli
mov
cmp
fildl
inc
or
incl
shlb
pushf
int
sub
test
sbb
testl
sub
lcall
call
or
fxch
and
insb
mov
jl
pop
lfs
pop
cmpsb
aas
mov
call
fbstp
fnstcw
jae
hlt
add
mov
cmp
mov
lcall
jp
push
fisttps
adc
push
lock
je
outsl
mov
jne
mov
mov
inc
pusha
out
jg
adc
mov
adc
dec
mov
lcall
jbe
lret
sarl
xchg
jo
div
cmp
sarb
mov
pop
call
mov
add
push
mov
pushf
icebp
xor
arpl
decl
pop
and
and
add
adc
in
mov
fwait
int3
mov
fsubrs
incl
xchg
into
push
pop
and
iret
inc
cs
insb
ljmp
jo
sub
cwtl
loope
cmp
out
cli
jmp
call
xlat
adc
mov
and
das
dec
lea
movsl
mov
xor
cmp
mov
sarb
mov
pavgw
jle
shlb
push
idiv
jle
imulb
fidivrs
xchg
pop
push
int3
mov
popf
rclb
aad
cmp
push
icebp
loope
mov
jae
in
xor
mov
mov
cmp
dec
adc
fisubrl
rcl
push
adc
mov
mov
push
cmp
ss
push
push
stos
fists
xchg
sub
mov
dec
cmc
sbb
push
push
aam
shll
test
mov
les
jno
and
decl
icebp
ficompl
outsl
dec
cmc
dec
hlt
sub
lea
loopne
repnz
sbb
lcallw
push
xchg
and
aaa
popf
dec
in
andb
push
dec
das
jle
fwait
inc
pushl
xchg
mov
in
int3
int3
xor
push
lea
in
add
mov
pop
cmp
jmp
xchg
fs
and
cmp
and
push
jp
addl
lcall
mov
jg
out
int3
fnop
pop
mov
jle
mov
adc
push
dec
js
popa
ja
cld
inc
mov
add
xor
loopnew
out
popa
mov
jno
mov
lret
hlt
dec
cltd
xchg
out
clc
pop
mov
je
insb
rcl
adc
xor
xor
mov
ljmp
outsb
inc
and
and
pop
mov
jno
fisttps
dec
movsb
mov
or
imul
pop
rolb
mov
pop
out
insl
jno
pop
push
insl
arpl
inc
cmp
ds
push
and
or
stos
jp
push
sahf
lea
xchg
push
imul
push
sar
lcall
xchg
outsb
mov
imul
jnp
cmp
xor
icebp
fisttps
cli
sbb
cmp
je
adc
rorb
adc
pushl
outsb
gs
shrl
or
les
testl
les
add
xchg
and
adc
in
pop
loopne
pop
fstpt
jp
sbb
adc
cmpsl
test
inc
mov
repnz
sub
xchg
ret
icebp
jne
jne
faddp
push
and
loop
pop
xchg
or
sbb
or
mov
decl
cmp
inc
ret
mov
mov
mov
invd
add
test
xor
incl
and
and
and
jns
ret
in
sbb
je
lcall
add
dec
xchg
jge,pn
je
sub
setp
divl
incl
xchg
repz
sbb
ja
loopne
ljmp
js
cs
jmp
jae
jo
pop
hlt
incl
icebp
in
mov
add
adc
push
outsl
xchg
int3
and
decl
xor
rorl
iret
es
inc
mov
inc
cmp
arpl
out
mov
ds
hlt
aam
decl
jno
xlat
repz
pop
test
fsubrl
bound
add
jmp
cmovo
xor
sub
mov
mov
negl
sbb
mov
jp
out
adc
ljmp
in
jecxz
or
and
aad
adc
jle
jo
inc
jecxz
fildl
lods
sub
or
push
adc
dec
mov
jae
cmp
decl
jnp
pop
dec
mov
dec
push
push
push
les
loope
and
push
clc
stc
inc
decl
jmp
mov
push
pop
dec
jne
test
inc
testl
sub
imul
stos
call
adc
or
push
cmp
or
add
push
sbb
call
ljmp
arpl
ffreep
fucomp
and
lods
push
inc
jle
jg
xchg
mov
dec
xchg
icebp
jge
pop
call
orl
call
fwait
in
lds
fadd
xor
sbb
xchg
and
adc
fdivl
out
rcrb
pushl
cmp
test
mov
int
push
mov
lret
mov
aad
pushl
or
in
mov
xor
xchg
mov
cmp
dec
mov
jmp
aad
or
mov
mov
jmp
adc
sub
push
adc
dec
cld
dec
mov
and
mov
and
xor
xor
add
pop
push
or
incl
mov
sbb
bound
xchg
push
xchg
icebp
mov
test
lcall
xchg
add
psubb
cmpsb
mov
dec
and
idivb
gs
mov
dec
call
sar
int
arpl
mov
push
pop
mov
or
arpl
mov
ljmp
dec
add
ss
lcall
addr16
int
and
mov
push
lods
dec
js
sbb
or
loope
push
xchg
fisttpl
cmp
adc
push
jg
outsl
stos
push
jb
sahf
fs
mov
rolb
sub
movsb
xchg
push
or
sub
rorb
ljmp
xchg
in
cmp
inc
dec
jle
daa
sbb
mov
out
repnz
adc
fcoms
popa
sar
mov
daa
xor
insb
add
imul
pop
popa
add
js
imul
pop
icebp
jmp
call
repz
shll
lock
test
cmc
movsl
int3
pusha
push
lcall
mov
xor
outsl
adc
call
orb
sarb
push
add
loope
stc
insb
shlb
leave
stos
es
ljmp
lret
mov
mov
mov
mov
mov
insb
popa
ds
add
jp
dec
xor
insb
fwait
pop
jb
mov
adc
div
pop
repz
fwait
popa
sbb
cmp
pop
rcr
fcmove
mov
popf
out
sarl
mov
push
in
into
jae
push
in
pushf
cmpsl
lcall
dec
mov
mov
nop
cli
test
shll
imul
enter
imul
sbb
mov
sbb
daa
fwait
psrlw
xlat
or
and
cmc
xor
les
push
cld
jg
mov
adc
adc
lea
shrb
mov
incl
data16
stos
mov
clc
cld
int3
jmp
scas
test
shl
push
mov
lock
push
jo
lcall
hlt
cs
js
dec
fwait
sub
fldl
shlb
in
loop
seta
incl
out
lcall
xor
xchg
fwait
push
loope
testl
in
imul
mov
into
je
adc
mov
jno
out
jb
lods
popa
clc
add
aaa
inc
xor
incl
lock
enter
and
cmp
lret
ljmp
outsl
daa
add
fmuls
lcall
imul
lret
das
inc
test
cli
push
xchg
add
xchg
and
add
ljmp
fucomi
push
and
test
aam
dec
cmp
xor
xchg
mov
inc
cmp
leave
inc
or
jbe
sbb
sub
call
inc
fstp
mov
iret
sub
cmpsl
pop
and
cmp
rorl
mov
nop
inc
and
jb
incl
sar
addr16
mov
mov
mov
data16
cltd
pop
xchg
mov
out
outsl
clc
incl
cmpsb
jge
pop
rclb
xchg
fistpl
lcall
cld
in
cld
movsb
in
jl
adc
push
and
xor
je
fisubrl
dec
fstps
cmp
cmp
in
push
ljmp
cmp
iret
cmpxchg
mov
jge
call
pushl
cmp
out
sub
int
dec
std
bound
jae
pop
jae
addr16
cmpsb
lcall
cwtl
inc
pop
loope
hlt
insb
iretw
cmc
sbbb
sbb
jmp
sti
dec
out
and
lods
out
adc
addl
and
mov
pushl
std
decl
aaa
ret
stos
in
imul
xchg
fisubs
lahf
cmp
stos
cwtl
mov
fwait
decl
mov
mov
cmp
inc
add
cs
sti
pop
shlb
add
gs
push
iret
or
jnp
stc
int
xor
std
push
sbbb
decb
stos
adc
jae
mov
rorb
push
fcoml
cmp
sbb
movsb
xor
vmovdqa
js
push
loopne
xchg
sahf
dec
std
shll
lods
mov
mov
scas
shlb
test
dec
mov
std
mov
pushf
mov
out
decl
leave
pop
pusha
imul
push
out
rol
stos
test
fiaddl
xlat
jge
pushl
loopne
xchg
jmp
adc
sbb
adc
add
decl
cmp
lds
shl
ret
jno
mov
mov
test
inc
adc
insl
sbb
call
icebp
cmp
cltd
cmp
push
jno
rol
fdivrs
lock
jl
ss
test
hlt
cmp
mov
sbb
ds
inc
jno
mov
push
push
push
int3
push
scas
stos
and
dec
sbb
cmp
data16
inc
pop
pop
aas
pop
out
cmpsl
inc
inc
mov
loop
int
xchg
cs
ljmp
aam
dec
ret
dec
cmc
es
int3
lcall
stos
xchg
xor
test
sub
dec
insb
push
scas
cmpsl
jge
cs
push
dec
leave
popa
sbbl
xor
flds
ljmp
jl
lret
push
enter
aaa
cmp
push
xor
je
fisttpl
test
sarl
xorl
pusha
icebp
lea
loopne
ljmp
popa
call
mov
and
mov
xor
mov
imul
dec
cmp
inc
mov
jo
jb
fcomip
adc
sub
mov
mov
pop
mov
push
push
out
popa
icebp
xor
dec
dec
mov
decl
jp
adc
nop
or
adc
add
or
jmp
decl
movnti
xlat
mov
outsb
push
call
pop
push
adc
std
in
push
fcomps
ljmp
mov
or
push
arpl
jmp
sti
in
mov
loopne
mov
and
add
ljmp
movsb
sub
movsl
jl
cmpsb
inc
xchg
test
lock
enter
in
or
lds
ficoml
xor
jne
sbbl
in
cld
and
xor
or
orb
pop
cmp
xchg
in
sbb
jo
cli
or
cwtl
cmpsl
lds
cli
xchg
fcomi
mov
adc
mov
jmp
fisttpl
lahf
push
aam
dec
jne
or
xchg
fst
xor
cmpb
cs
movl
decl
fcompl
dec
repnz
pop
fstpl
shrb
xor
in
test
jmp
jmp
gs
leave
push
rcrb
fwait
in
jmp
test
pushl
xchg
shrl
jb
adc
adc
jg
pop
sbb
ljmp
jp
mov
stos
dec
lods
into
pusha
mov
sub
daa
mov
ret
jge
push
std
adc
ret
rclb
fcmovb
pop
mov
mov
push
sub
sub
push
push
insb
sub
jg
lcall
shll
or
data16
lea
push
int3
sub
movsl
cmpsl
stos
xchg
das
je
adc
ljmp
cmp
pop
in
aaa
inc
mov
pop
jp
add
pop
repnz
popf
or
decl
jmp
pop
pushf
insl
rclb
pop
rcrl
inc
or
aam
mov
xchg
or
ljmp
in
pop
aaa
sahf
std
popf
jbe
not
test
insb
jo
leave
pop
clc
ret
int3
int
rorl
sbb
cli
js
addb
dec
dec
xor
push
mov
add
xor
rcll
push
lea
stc
sub
in
push
iret
mov
sahf
lret
mov
inc
shlb
fmull
iret
push
inc
pop
inc
mov
cmp
push
popa
dec
loope
bt
adc
or
call
cli
andb
mov
adc
scas
mov
iret
ret
jmp
mov
mov
ss
in
push
adc
add
sahf
lock
in
aad
lcall
test
jl
and
xchg
stos
andb
ret
les
mov
add
imul
call
clc
adc
rcl
and
andb
push
dec
in
xor
ds
lcall
loopne
mov
cmc
mov
add
inc
dec
imul
mov
call
shl
xor
pusha
test
adc
test
jg
sub
mov
and
lcall
inc
das
xchg
pop
push
sub
in
ret
inc
xor
es
ss
call
sbb
mov
jbe
bound
jnp
sahf
pop
or
ror
mov
inc
lea
and
cmp
ficompl
stc
sbb
dec
inc
fisubl
insl
dec
mov
adc
test
jae
hlt
adc
adc
fwait
ror
lcall
sub
notl
pop
jle
and
push
cli
jl
and
push
loopne
repz
subl
das
xchg
sbb
xor
iret
cld
cmp
scas
mov
jne
pushl
sbbl
push
mov
mov
fs
shr
sbb
jne,pt
lcall
add
mov
imul
add
or
fdivrl
lcall
pop
test
scas
repnz
adc
pmuludq
xchg
roll
inc
aad
jge
push
fstpt
outsl
push
adc
jns
mov
lahf
pop
cmc
xchg
jo
mov
sub
pop
add
cmp
jecxz
inc
out
cmp
or
test
lock
jmp
or
jmp
jle
push
lret
jnp
popf
push
xchg
add
push
add
lcall
insb
aaa
call
test
and
addl
fwait
jne
mov
mov
xchg
faddl
aad
sti
xor
popf
lahf
jg
pop
sub
insl
jno
insl
js
mov
sti
rol
sub
mov
stos
cmpsl
jecxz
push
lcall
dec
cmp
movsb
inc
jo
xchg
shl
clc
cs
dec
mov
mov
rol
mov
hlt
lcall
sbbb
fcmovnbe
mov
ret
bound
jp
and
push
xchg
add
jg
xor
leave
outsb
repnz
push
mov
daa
push
mov
xchg
add
sub
jo
mov
or
inc
fildl
lret
mov
push
adc
mov
popf
push
ds
cld
mov
push
add
pop
jecxz
push
data16
sub
xchg
pusha
xor
adc
mov
sub
popf
sar
dec
xor
dec
add
mov
insb
jbe
rorl
fld
aaa
imul
push
or
sbb
sbb
mov
cmp
mov
stc
pop
sbb
cmp
jge
mov
or
jge
sbb
inc
add
idivl
push
in
jne
stos
std
cli
incl
cltd
scas
sub
icebp
or
fidivrs
cmp
inc
lds
adc
scas
ret
movq
dec
jnp
out
add
lock
pop
jg
jp
sbb
pop
mov
pushl
xchg
mov
cwtl
xor
andl
inc
pop
cmp
or
xchg
aas
cmp
push
mov
sarl
or
dec
rcr
mulb
mov
js
movsb
aas
push
rclb
std
jge
cld
jae
mov
jo
ds
out
fs
lods
jl
push
push
sti
xchg
out
sbb
call
mov
inc
mov
push
ficomps
dec
gs
mov
outsw
inc
adc
incl
lods
mov
mov
fdiv
and
out
icebp
inc
mov
call
call
ljmp
leave
outsl
icebp
pop
adc
cmp
jo
fisttpl
shrl
fsubr
cli
jmp
sbbl
add
out
mov
in
rcll
sar
in
jmp
insl
inc
in
sbb
popa
movsl
mull
fists
loop
jg
fadds
jle
dec
cmpsb
mov
or
and
sbb
repz
in
mov
call
mov
icebp
jns
cmpsb
add
fwait
orl
or
movhps
ljmp
rclb
je
int
xchg
loope
cltd
pop
cmpsb
mov
dec
dec
push
mov
into
sbb
add
rorl
xlat
push
bound
or
loope
lds
out
aam
mov
xchg
push
mov
adc
pushf
test
mov
xor
xchg
mov
test
adc
ljmp
or
imul
loop
fimuls
cmpsb
mov
loope
jmp
call
lds
imul
ja
and
loop
add
adc
dec
fisubs
in
jp
out
mov
clc
inc
or
scas
lods
loopne
stc
fwait
ret
sti
push
leave
punpckhwd
or
call
es
xor
jns
ret
dec
or
fbstp
stos
pop
stos
ss
adc
lock
test
add
jmp
xchg
les
clc
clc
lcall
inc
mov
ljmp
jns
push
movsb
dec
cmp
insl
xchg
ljmp
ret
jnp
inc
add
adc
xchg
push
sbb
mov
out
out
mov
idiv
lcall
imul
insb
testb
ss
and
popf
xchg
inc
outsl
lods
mov
sub
rolb
pushl
scas
add
sbb
pushf
aam
push
mov
call
push
call
and
xor
inc
cmp
push
mov
lcall
filds
mov
rolb
mov
push
fldl
stc
ljmp
int3
in
test
lea
scas
mov
push
in
test
dec
jg
push
aam
arpl
mov
dec
sbb
jl
leave
jae
mov
in
and
adc
or
jle
decl
ficoml
lods
popa
mov
dec
es
inc
fld
push
gs
fmull
leave
lcall
pop
in
in
mov
mov
push
mov
push
popf
sbb
dec
dec
incl
fidivrl
popa
ret
jl
test
bnd
and
xor
les
stc
mov
and
aas
jne
shl
add
jo
cmp
jno
and
movsb
or
mov
push
cmp
mov
dec
xchg
jbe
and
out
clc
pop
sbbl
call
jecxz
inc
addr16
add
jmp
aas
fcoml
enter
aad
sbb
cmp
into
gs
mov
push
dec
mov
adc
scas
incl
sarb
bnd
xlat
mov
inc
mov
jb
xor
ja
call
push
arpl
mov
fidivl
in
xchg
jo
popf
aas
nop
rdtsc
jbe
pop
and
stc
aad
jecxz
in
push
std
lret
or
fisttpll
cmp
lret
andl
adc
jnp
adc
decl
jle
or
jmp
loopne
jnp
xor
pop
lahf
sub
das
add
sub
cmp
fsubrs
fwait
pop
and
sarb
inc
xor
adc
test
pushf
dec
jmp
mov
push
add
mov
jmp
insb
bound
lock
sub
out
clc
mov
int3
stos
ficompl
mov
push
inc
sub
jl
mov
out
enter
subb
outsl
and
sbb
mov
jbe
lods
and
mov
cmp
or
pusha
jno
insl
pop
or
cwtl
pop
fisttpl
scas
pop
mov
fsubl
mov
js
outsl
mov
inc
mov
mov
ljmp
rolb
pushf
lret
mov
xchg
into
call
lcall
mov
cmp
pop
inc
jmp
jno
xchg
in
push
cltd
mov
inc
in
sti
jns
imul
and
dec
dec
fnstcw
dec
je
out
ja
push
mov
daa
mov
imull
call
in
sysexit
jns
dec
icebp
push
stc
mov
jg
ljmp
into
add
and
mov
lods
loop
mov
das
inc
push
adc
std
jl
cmp
push
mov
xor
or
dec
inc
or
ja
xchg
in
std
mov
mov
sub
cmpsl
dec
aas
or
xorb
test
adc
xor
dec
test
and
jmp
imul
adc
out
add
out
insb
pop
or
push
or
insl
adc
shll
pushl
mov
sbb
cld
pusha
inc
jnp
jle
inc
jno
sbb
push
sbb
jmp
jno
cltd
jne
rcrb
and
pop
fwait
push
xchg
push
ret
addr16
ljmp
cwtl
aaa
shrl
sti
mov
jo
and
pop
push
or
sbb
pushl
repz
add
xchg
sbb
test
shlb
xchg
jns
rorb
lcall
adc
das
sahf
iret
out
cli
movsl
xchg
pop
or
popa
into
xchg
sub
test
into
outsl
imul
dec
rorl
mov
frstor
sub
addr16
inc
lock
decl
adc
jns
fwait
cmp
xor
aam
xorl
movb
or
jb
xchg
xor
and
cld
test
jne
mov
adc
jcxz
mov
cmpsl
loopne
pop
pop
mov
cmpsb
sahf
mov
push
out
pushl
cmpsl
movsb
xchg
mov
mov
push
jo
dec
xlat
mov
arpl
out
and
sub
jno
push
fisubrs
add
push
test
jp
cmp
push
loop
push
arpl
in
ljmp
enter
ja
dec
sub
sbb
test
gs
and
sar
jg
rorl
in
inc
mov
out
pusha
iret
in
out
jmp
pop
cld
cmp
and
clc
and
imul
or
xchg
stos
sub
popa
mov
push
es
pop
sbb
cmp
xor
add
pop
jge
sbb
movsb
push
cmp
aam
push
cmpsl
add
call
rorl
xchg
jmp
mov
push
inc
scas
div
lods
test
ss
dec
jmp
and
repz
addl
fimuls
dec
pop
cmp
jecxz
int
push
cmp
add
jg
cltd
sbb
aaa
stos
adc
idivl
mov
jmp
and
pop
xlat
sub
push
daa
rol
shlb
adc
popf
in
mov
pop
mov
outsb
cmp
dec
xor
pop
loop
and
or
jge
fnstsw
jl
stc
aam
call
xor
dec
cld
ds
add
push
jnp
les
lret
aaa
push
ljmp
cmp
orl
lock
mov
dec
mov
sti
jp
inc
inc
out
jg
out
adc
cmp
mov
inc
sti
push
xor
dec
jne
add
or
lret
fmuls
sbb
out
xchg
stos
jo
ljmp
enter
lods
sti
sbb
jno
dec
cmp
jae
fbld
ret
shrl
inc
loop
mov
repz
hlt
and
sbb
adc
jg
add
mov
divb
sub
mov
fcoml
decl
xchg
adc
loop
ljmp
sub
push
test
pop
ds
jmp
mulb
out
dec
jns
adc
adc
sbb
stos
mov
nop
outsl
ja
push
xor
shll
push
in
out
pushf
fnstcw
xor
insl
call
popa
clc
bound
cmc
pop
icebp
pop
cmpsl
push
mov
dec
pop
test
sahf
js
mov
fidivl
insb
add
lahf
jge
jb
xchg
pop
stos
lret
add
jp
mov
sahf
fs
lcall
xchg
mov
rclb
std
and
and
enter
push
adcl
pop
rcrb
stos
or
cmp
incb
xchg
adc
add
or
dec
das
mov
jmp
mov
mov
pop
bound
xchg
xor
cs
cmp
jg
mov
loopne
ja
mov
sub
inc
test
bound
ss
incl
lret
lds
ljmp
mov
or
cli
mov
push
decl
xor
testb
stos
mov
cli
push
cmp
dec
inc
mov
mov
incb
repz
push
inc
dec
xchg
fidivrs
out
shlb
push
jno
test
cmp
sbb
fs
xor
nop
lods
lds
mov
dec
pop
and
fs
pop
fisubrl
ljmp
mov
andb
fcoml
pusha
mov
sub
inc
pop
pop
pushf
test
lcall
repnz
mov
pop
sub
pop
jmp
push
clc
or
xchg
daa
cli
push
push
scas
out
fldt
adc
mov
orl
loope
cmpsl
jb
outsl
mov
test
dec
loopne
add
mov
hlt
dec
xchg
movsb
mov
fwait
cwtl
mov
cwtl
mov
jnp
rep
sub
jmp
bound
jbe
push
cmpsb
dec
jg
xchg
or
sbbl
cltd
jne
jno
outsb
pop
dec
pop
cmp
lcall
inc
mov
mov
mov
xchg
iret
out
insl
xor
mov
jle
mov
es
fwait
xchg
push
sub
push
repnz
mov
xlat
cwtl
movsb
pop
sbb
xor
fnsave
ret
add
adc
gs
sbb
xchg
movsl
aas
add
into
ret
roll
cld
mov
jge
testb
hlt
adc
jnp
jnp
sbb
cmp
scas
cli
cmp
xor
enter
dec
or
adc
or
mov
lcall
pop
loop
pop
test
clc
das
mov
sbb
imul
int
lcall
jmp
aaa
sahf
mov
mov
es
mov
xor
js
outsb
popa
andl
lods
mov
test
pop
jp
mov
xor
mov
jnp
int
shrb
sub
cmp
jmp
cmp
push
addr16
ret
dec
leave
push
push
les
jno
out
sbb
scas
sbb
incl
sbb
push
pop
les
mov
aam
aam
daa
mov
call
aaa
pushf
shlb
fldl
lret
dec
lods
jo
idivl
cmp
and
inc
dec
mov
push
cmpsb
int
xchg
mov
cmp
mov
dec
mov
jb
and
mov
xchg
mov
cmp
mov
mov
sbb
sbb
faddl
xchg
pop
push
mov
mov
clc
mov
dec
movsl
cwtl
lcall
repz
addr16
aas
rorl
scas
mov
pushl
cld
sbb
aad
sub
jmp
iret
subb
mov
jmp
decl
fwait
mov
in
mov
sti
faddl
push
mov
push
push
or
je
add
jno
mov
mov
sub
testl
xchg
movsb
je
mov
and
mov
lcall
push
addb
sbb
daa
enter
fsubrs
inc
fsubrp
mov
call
testb
call
ss
pop
es
int3
into
sbb
push
ljmp
inc
mov
push
insl
jns
shr
cmp
inc
mov
mov
jmp
sub
cmc
js
xchg
add
adc
cmc
mov
jne
nop
jp
xchg
aaa
mov
jnp
out
mov
sbb
test
jnp
or
cmp
insb
daa
dec
jns
and
pusha
das
jge
jmp
stos
cmp
or
lcall
fstl
jmp
push
mov
jbe
test
mov
aaa
xchg
cmc
lcall
jne
cmp
adc
mov
mov
test
arpl
fdivrp
fcomip
scas
dec
aam
inc
addr16
push
push
sub
mov
mulb
add
lea
call
gs
jl
cmc
mov
cs
fdivl
cs
mov
in
dec
cs
ljmp
scas
pop
iret
mov
pop
add
pop
mov
pop
jle,pn
dec
addb
jmp
decl
and
lahf
cmp
sbb
out
lret
icebp
xchg
fsubrl
fstpt
loope
incl
in
inc
pop
adc
add
fldenv
out
jecxz
lahf
add
std
ljmp
and
in
mov
stos
pusha
adc
lea
push
pop
mov
das
cli
push
es
movsb
and
shll
je
filds
dec
les
mov
add
enter
loop
mov
xchg
rclb
insl
cli
incl
inc
mov
ror
subb
jbe
hlt
adc
decl
pop
xchg
cltd
push
aas
push
popa
pop
push
add
ljmp
xchg
dec
inc
shlb
pop
scas
adc
adc
mov
insb
dec
int
fldt
sar
adc
incl
leave
jge
std
add
sbb
clc
adc
mov
fdivrl
lcall
roll
add
ja
cmp
jg
out
sub
lods
push
inc
cmp
test
sbb
lods
mov
out
pop
pop
mov
mov
mov
push
sbb
inc
pop
shr
jg
out
shr
loopne
mov
mov
fs
fiaddl
test
loopne
mov
rolb
mov
mov
xor
out
sub
inc
mov
adcb
adc
sub
iret
int3
sbb
ljmp
cltd
cmp
or
pushl
dec
jge
das
jbe
gs
inc
sub
rcl
jmp
fnstsw
mov
incl
outsb
in
dec
adc
mulb
cmp
addr16
mov
lcall
pop
cmpb
mov
pop
push
pop
jae
jbe
lcall
das
jle
and
xchg
fmull
pop
add
jb
cmp
leave
mov
fidivrs
loop
fsubl
mov
in
or
cmpsl
fimuls
lock
das
sbb
mov
fwait
cwtl
sub
jmp
filds
inc
setno
sub
mov
xchg
cmpsb
data16
call
push
rorb
test
inc
cmc
cmpsl
sub
jg
cmpsb
jle
xchg
and
lcall
jno
and
mov
int
inc
sarl
or
sbb
stc
ds
pushl
xchg
adc
pop
xor
mov
ljmp
arpl
call
repz
cmc
jmp
pop
lcall
sbb
outsb
or
sub
push
sti
ss
aas
inc
sbb
lods
sub
jnp
fsubrs
add
fadds
jae
jge
sub
stos
movsb
sar
decl
xchg
aad
ss
push
adc
inc
mov
mov
push
xchg
test
add
lcall
inc
push
mov
xchg
sbb
mov
sarl
pushf
into
xlat
hlt
mov
add
mov
imul
lods
outsl
push
inc
mov
mov
fdiv
test
xor
ljmp
dec
cmp
or
loopne
lods
test
pop
sbb
fs
fucomi
fdivrl
and
nop
jg
decl
popf
flds
ds
jle
je
call
leave
or
inc
cmp
adc
pusha
arpl
or
push
stos
or
movl
jns
sbb
addr16
shlb
xor
adc
ds
sti
jle
inc
and
das
pop
pop
out
clc
imul
loopne
fucomi
addr16
fcmovnb
adc
dec
jmp
test
ss
je
out
fdivrs
stc
cmp
xchg
sub
lods
add
test
pcmpeqd
lcall
cmp
pop
fisttpl
jns
je
loope
mov
fidivrs
or
das
or
ret
push
insl
mov
push
inc
rcrl
cwtl
mov
insl
int
mov
mov
ljmp
xor
stos
out
pop
sahf
or
jg
lods
cmp
sub
icebp
dec
jo
arpl
ja
lahf
pop
nop
cmp
cmpsb
clc
rorl
cld
std
push
adc
inc
andb
push
lahf
fsubs
fwait
adc
cltd
sbb
dec
xor
incl
data16
dec
enter
xor
xchg
sbb
lcall
sbbb
xchg
fs
cmp
jl
jb
or
imul
test
mov
incl
inc
lret
shll
insl
cmpsb
dec
pop
sbb
push
dec
mov
xor
sbb
jae
scas
cli
jmp
lea
fldcw
xor
enter
sti
sub
lcall
jb
push
aam
inc
adc
adc
iret
mov
jg
xor
add
pop
test
fiaddl
mov
ret
lcall
icebp
sbb
mov
cmp
out
sahf
es
loopne
jb
testl
jno
int3
ja
pop
insb
pop
test
mov
mov
loopne
in
rcr
inc
push
add
xor
in
insl
push
push
lods
cmp
jle
call
lock
jmp
xor
mov
and
mov
lock
lods
lds
cld
call
xor
aam
ret
inc
adc
xor
ljmp
push
mov
xor
insl
mov
sbb
fistpll
adcb
dec
xchg
std
mov
call
dec
sbb
add
xor
mov
imul
jb
add
sti
scas
call
add
call
iret
test
jmp
cmp
inc
nop
pop
jo
cli
jg
xor
cmp
in
sbb
xchg
mov
out
inc
into
mov
test
lds
adc
test
pop
sbb
add
rcrb
sub
inc
adc
inc
mov
movsl
arpl
out
loope
sahf
xchg
mov
out
cmp
jmp
mov
xlat
mov
clc
es
add
jmp
mov
mov
jmp
or
push
mov
dec
cmpsb
icebp
movsb
lcall
insl
ud0
lock
mov
jg
ljmp
push
outsb
jb
xor
push
jp
out
lret
insl
mov
decl
cs
and
movsb
sub
sbb
mov
mov
xor
xchg
test
dec
stc
jg
jnp
insb
hlt
xchg
push
inc
loope
es
stos
jle
inc
call
repz
decl
test
sbb
cs
mull
xor
xlat
jne
stos
jmp
dec
les
dec
xor
fcom
sbb
or
ljmp
mov
sbb
xor
lods
and
mov
push
mov
xchg
imul
sbb
filds
lret
movsb
test
mov
ds
faddl
mov
inc
fxam
push
xchg
repnz
adcl
out
and
mov
mov
rcrb
jnp
out
addl
jno
lahf
xchg
sarl
ret
inc
mov
ficomps
inc
mov
call
push
jno
xchg
jae
jae
dec
xor
mov
js
cmp
cmp
decl
push
inc
popf
add
mov
stos
out
cmp
test
push
and
test
jb
ljmp
sub
inc
nop
inc
ds
ss
bound
cmp
push
mov
sub
dec
stos
scas
daa
cmpsl
inc
sbb
add
pop
sub
push
jnp
xor
push
mov
negl
adc
or
arpl
stos
jp
mov
push
outsb
sub
inc
data16
test
dec
adc
inc
jge
sti
mov
mov
mov
incl
jle
adc
fcomps
xor
sub
lods
jmp
or
cmpsb
cmp
push
insb
add
js
cmp
xchg
sbb
jge
rorb
pop
fldl
add
loop
cmp
sub
sbb
dec
decl
lock
adc
mov
mov
lock
aaa
mov
add
orb
sub
inc
stos
jle
inc
ret
xchg
fdivrl
push
outsb
test
outsl
sar
aam
incl
push
push
aas
pop
mov
pop
adcl
pop
and
cld
roll
and
lds
or
sub
loopne
mov
repnz
loop
rcr
loope
cmp
and
dec
cltd
aaa
mov
and
loop
xor
fnstcw
xor
test
rclb
dec
adc
les
mov
mov
jo
sbb
xor
push
in
mov
sbb
cmp
mov
cli
stos
in
lea
in
and
insl
loop
pop
cmp
call
jns
ret
jno
xor
push
dec
and
push
out
popf
pop
js
and
call
dec
pushf
push
cmc
add
fisttps
hlt
xorl
add
stos
call
inc
sub
pusha
mov
push
mov
lahf
lahf
or
sbb
insl
stc
cwtl
addb
outsl
cli
inc
push
inc
mov
outsb
or
imul
inc
mov
add
lcall
push
loop
mov
sarb
test
push
fdivrp
test
test
dec
repnz
dec
xchg
mov
out
dec
push
int
xchg
jbe
xchg
pop
cli
shl
pop
xchg
pop
bound
dec
fscale
push
icebp
or
dec
xorl
mov
push
mov
or
cmp
adc
xchg
adc
sarl
xor
xchg
je
lcall
ja
fnstsw
cwtl
clc
mov
inc
add
sahf
out
xchg
cltd
xchg
js
jle
std
jmp
ljmp
mov
fs
inc
add
jle
xor
lret
sbbb
clc
jmp
adc
add
dec
negb
scas
xor
testb
inc
aas
push
push
push
jb
in
sbb
jle
addb
or
jns
mov
jecxz
inc
jb
call
shrb
fistl
push
mov
fists
not
outsl
dec
mov
push
out
xchg
xlat
and
data16
pushl
inc
cmp
sbb
in
push
adc
add
mov
sti
das
push
call
inc
call
sub
scas
gs
add
pop
test
or
sar
ljmp
lea
fisubrs
ljmp
jmp
mov
mov
jg
fistps
or
jge
inc
clc
mov
inc
repz
jne
jg
push
sbb
add
jmp
lods
mov
fadds
loop
es
mov
jmp
ja
mov
popf
or
jne
out
cmp
pop
bound
jo
inc
push
or
rorb
mov
ucomiss
scas
sbb
loopne
pop
mov
xchg
inc
pop
out
mov
adc
orb
pop
sbb
or
icebp
outsl
xor
push
jns
rcrl
test
jmp
ljmp
insb
push
mov
mov
ret
decb
pushl
mov
mov
ficomps
xchg
test
inc
lret
jg
mov
mov
cmp
inc
movsl
int3
push
sbb
jg
jge
add
dec
js
push
pushl
jns
nop
stc
adc
ror
lret
es
cwtl
mov
mov
test
jg
jmp
adc
add
xor
std
mov
cmp
mov
mov
pop
hlt
incl
mov
lods
dec
and
ljmp
js
bound
fwait
cltd
ljmp
adc
cs
call
cmp
cmp
test
xor
out
push
sti
pop
sub
xor
out
pushf
mov
pop
hlt
call
push
or
xchg
in
dec
imul
inc
inc
pop
rcll
pop
and
fs
cld
call
daa
inc
sbb
mov
jns
lret
cmpsb
icebp
loop
inc
in
aam
repnz
lds
int3
call
or
mov
das
mov
pop
clc
dec
ja
inc
jae
and
lods
inc
outsl
cli
jmp
das
lret
add
adc
daa
xchg
mov
enter
cmp
jmp
jno
mov
pop
xor
sub
adc
add
cwtl
imul
push
pop
sahf
das
clc
jmp
pushf
jecxz
adc
shrl
aaa
ja
js
out
into
shl
lret
inc
mov
adc
test
into
pop
cli
or
hlt
jge
mov
jle
mov
daa
mov
mov
xor
adc
add
loop
mov
notl
imul
push
into
inc
pop
stos
std
xchg
sbb
call
in
test
and
dec
sti
loope
add
insb
jmp
decl
sub
or
mov
stos
push
mov
lret
xor
mov
cmp
and
mov
lea
xorl
and
frstor
and
push
lcall
inc
pop
les
pop
dec
and
pushf
mov
cli
dec
pop
push
es
cmp
call
push
filds
jnp
adc
fs
stos
lods
std
mov
mov
mov
push
adc
andl
hlt
xor
mov
pop
mul
pop
sbb
sbb
jg
decb
cmp
push
decb
imul
and
sbb
es
jp
add
scas
mov
pop
inc
jo
dec
dec
mov
xchg
jbe
inc
in
pusha
mov
fldt
aam
shll
and
pop
test
push
jne
mov
loop
xchg
sbb
inc
and
add
int
sub
cmc
jle
fldpi
mov
hlt
imul
push
ja
adc
xchg
jmp
pop
dec
rcr
dec
and
add
sub
incl
ret
ljmp
inc
dec
jge
inc
jbe
cld
push
jbe
mov
xchg
imul
cmp
imul
mov
into
cld
fdivrl
mov
xor
mov
test
pop
in
xor
and
leave
jmp
mov
cld
inc
mov
xchg
add
mov
insb
mov
call
test
repnz
adc
push
mov
push
push
xor
xor
mov
test
ds
decl
bnd
mov
sahf
sbb
xor
loope
jle
out
and
cmp
push
sub
sub
decl
les
test
xor
ficoms
enter
push
cmc
pushl
and
dec
test
insb
popa
mov
fwait
push
push
sbb
cmp
mov
jle
mov
iret
inc
add
inc
ljmp
mov
repnz
lahf
stos
dec
lret
loope
out
lcall
pop
add
lods
sub
outsl
sub
movsb
sub
xor
and
ljmp
clc
dec
ret
imul
mov
ljmp
ficoms
std
and
mov
mov
push
imulb
stos
lahf
rcrl
jl
call
test
lods
sbb
pusha
mov
jae
outsl
je
mov
lcall
test
mov
ss
push
mov
xchg
jge
inc
jae
call
push
jge
adc
xor
mov
test
jmp
sbb
dec
jle
pushl
jae
mov
push
mov
jmp
rcl
nop
pop
lahf
and
inc
repz
cli
mov
ret
jp
in
and
dec
movsb
pusha
fisubl
out
call
and
lds
jns
or
inc
or
xor
lods
movsl
lldt
std
pushl
push
nop
in
push
mov
cmp
pop
mov
jb
mov
cmp
pushl
popa
adc
nop
test
push
add
jae
stos
dec
mov
mov
ret
push
rcrb
test
jg
inc
sub
pop
gs
add
cmp
lret
cwtl
sar
ljmp
arpl
jle
mov
bound
pushf
xlat
xor
lds
pop
inc
cmpsl
pusha
imul
loopne
call
gs
sub
push
inc
or
es
es
xchg
mov
mov
push
shrl
movsb
pushf
dec
leave
addr16
xlat
sub
mov
inc
fs
insb
fxch
jmp
pop
cmp
xchg
add
insb
pusha
jp
rclb
mov
lret
cwtl
or
incl
popf
and
and
mov
rol
jmp
xchg
lcall
cli
xor
mov
lea
decl
inc
data16
ja
movsl
testb
mull
in
jl
lret
lea
xchg
data16
ljmp
push
or
xchg
add
popf
push
pop
imul
into
incl
adc
dec
lock
or
xor
xchg
sub
mov
mov
or
call
xchg
lret
sub
js
lock
lds
adc
cmp
cmp
or
shlb
pushl
sahf
push
js
mov
xlat
xchg
nop
fnstsw
push
adc
push
lods
mov
lods
mov
pop
rorb
mov
repz
inc
fistpl
icebp
jg
sub
popa
mov
sub
pop
sti
inc
jp
cwtl
push
ja
call
push
movsb
or
xlat
mov
sbb
mov
out
les
dec
lahf
dec
adc
daa
frstor
or
jl
jmp
cmp
xchg
insl
cs
aam
or
push
call
or
lcall
push
jnp
out
adc
shlb
inc
js
or
lret
pushf
dec
in
call
rolb
lods
ror
push
push
xchg
push
arpl
mov
insl
inc
dec
mov
jl
mov
loope
test
shrl
add
jp
xor
lret
xor
add
mov
das
aaa
push
shlb
sbb
and
lret
sbb
fstl
scas
out
mov
add
pop
int3
ds
pop
arpl
ss
cmp
mov
and
mov
cmp
sbb
rcll
into
icebp
xchg
in
mov
xchg
enter
or
cmp
lds
xchg
cmp
inc
jne
fmuls
aas
roll
roll
scas
or
jecxz
push
pop
imul
dec
push
and
lock
decl
jnp
iret
push
xchg
or
dec
repz
add
outsl
or
aam
orl
mov
fidivrs
call
jns
jno
decl
movsb
xchg
sub
data16
aaa
sbb
fsubl
stos
xchg
jp
icebp
inc
sbb
xchg
jp
fiaddl
mov
ss
fstpl
lods
push
gs
jno
dec
mov
pushl
sbb
mov
inc
pusha
and
cltd
mov
pop
or
test
xchg
ret
ljmp
mov
dec
adc
imul
push
pop
xlat
mov
push
mov
sub
jg
jbe
call
icebp
scas
in
les
inc
fisttpll
pop
inc
les
fisttps
das
dec
mov
jmp
push
fstps
test
push
pop
leave
das
insl
push
je
imul
adc
dec
lcall
mov
pop
in
mov
sbb
push
outsl
test
test
or
incl
sub
sbb
aam
sub
repz
or
hlt
sbb
push
repnz
cwtl
push
lcall
jmp
xor
xchg
jle
or
add
jns
ljmp
xor
ljmp
push
int
jg
jb
lret
push
scas
movsb
rclb
int
enter
in
add
shr
push
xor
xchg
add
xchg
fadd
cmc
and
xor
pop
push
lcall
xchg
popa
les
push
push
or
add
mov
sub
cmp
push
xor
jp
xchg
pop
adc
jnp
incl
cmp
sbb
aam
or
dec
fwait
aas
cli
daa
cmc
dec
push
jl
jg
jmp
insb
rorb
push
lret
dec
outsb
dec
jb
shlb
sub
adc
scas
jns
add
inc
int
outsl
dec
inc
mov
enter
cmc
int
and
inc
scas
sbb
jmp
mov
imul
cmp
cmp
sahf
je
shll
and
inc
out
movsb
adc
xchg
fnstcw
add
fnstcw
ret
inc
test
xchg
lret
insb
cs
jo
jno
xchg
ljmp
sub
pop
push
pop
lcall
shlb
fsubrl
jmp
jecxz
jo
lock
cmp
ja
imul
popa
jp
xor
nop
and
cwtl
aaa
lcall
add
pop
pop
es
shlb
inc
add
adcl
dec
jle
lock
fldt
dec
stos
pop
call
loope
popa
lock
dec
stos
push
sub
pushf
mov
in
les
sbb
cmpsl
add
incl
adc
cmp
out
dec
or
inc
pop
je
cmp
sahf
jecxz
sbb
xchg
gs
in
movsl
pushf
outsl
push
cld
add
mov
xor
mov
push
sahf
adc
pop
cmp
lret
fnstenv
lcall
dec
mov
xchg
leavew
es
and
not
add
sti
int
addb
mov
jle
push
pop
pushf
pushf
cmp
inc
dec
inc
cmp
pop
and
call
js
das
or
lock
ficoms
je
orb
push
movsb
mov
arpl
pop
adc
jge
pop
mov
testb
dec
xor
push
ficompl
jg
jge
cli
gs
scas
out
ret
xor
push
cs
aad
push
incb
scas
sti
sbb
bound
mov
pusha
or
or
inc
ja
shrl
into
push
jo
lret
jle
mov
mov
cs
fidivrs
mov
fadds
js
sahf
jno
into
fisubl
pop
call
xor
repnz
jp
sbb
ljmp
mov
mov
mov
fst
icebp
fimull
inc
movsb
ljmp
test
dec
adc
add
adc
add
cmpsl
cmpsb
mov
jg
mov
ss
gs
ror
aam
add
scas
call
outsl
adc
cmpsb
mov
dec
pop
mov
mov
pop
cmc
pop
mov
js
pop
push
jg
jmp
push
fsts
mov
xchg
fldcw
pop
cmp
fidivrs
push
sbb
call
dec
xchg
sub
push
dec
pushf
mov
ret
rorl
test
lds
mov
cmp
out
xor
loopne
sbbb
loop
pop
stos
pop
fildll
dec
sbb
lods
mov
cmp
pusha
sti
jbe
js
out
pop
adc
jle
cmp
xor
jmp
lret
decl
push
cmp
sbb
jne
mov
jl
mov
pop
iret
jns
scas
mov
jmp
inc
inc
jo
xchg
pop
fcmovne
mov
mov
mov
cmp
mov
fnstenv
insl
movsb
stos
repz
pushl
ss
mov
mov
push
dec
das
adc
mov
call
sub
mov
push
adc
movsb
call
xchg
mov
jae
push
cli
xor
sbb
add
xor
adc
jo
mov
or
decl
pop
push
das
imul
pop
push
test
les
rorb
imul
push
das
cli
cmp
adc
shlb
cmpsb
jmp
adc
mov
sti
mov
jmp
mov
outsb
int
shl
mov
push
decl
add
or
bound
hlt
leave
outsl
dec
inc
into
dec
push
or
add
push
push
mov
mov
std
dec
or
js
iret
rclb
lock
je
out
cs
xor
loope
inc
cmpsb
mov
jns
nop
pusha
pop
inc
negb
fldt
push
add
dec
lods
call
mov
xorb
repnz
inc
insb
lods
inc
inc
pop
ds
cli
pop
fcoms
cmc
fstps
pop
jmp
into
addr16
sbb
sub
in
push
mov
inc
xchg
cwtl
mov
aaa
push
xor
nop
dec
jp
dec
ret
mov
jge
adc
inc
mov
hlt
decl
or
xchg
dec
sarb
nop
lahf
scas
pop
and
fidivrl
cwtl
jb
adc
fcoms
out
cmp
fimull
mov
scas
jmp
pop
mov
dec
jp
adcl
xchg
add
cmp
inc
lahf
lahf
loope
incl
outsl
lods
movsb
loop
xor
fs
and
jl
mov
jne
dec
pop
xor
jecxz
pop
cmpl
push
inc
cmc
outsl
sarb
hlt
mov
idivl
das
popa
push
mov
mov
and
cmp
jmp
mov
pop
mov
add
xchg
aaa
bsf
dec
pop
push
pop
xor
stc
aas
out
jae
pop
rcr
decl
xchg
mov
fimuls
jne
xchg
xchg
cmp
ja
addr16
fcomip
call
loope
sub
xor
or
aas
shll
pop
jl
in
and
test
insl
loopw
roll
in
adcb
sahf
loope
icebp
sahf
into
in
push
mov
call
cs
push
sbbl
repz
mov
jp
mov
or
cmp
ljmp
int3
loope
mov
mov
ret
fidivs
stc
imul
jg
mov
test
push
das
ret
mov
pop
insl
or
insl
mov
cmc
pushl
fs
call
nop
movsl
rcll
push
addr16
xlat
adc
subl
stc
add
jmp
stos
inc
xchg
jb
mov
sbb
push
sbb
inc
add
fsubr
adc
xchg
test
dec
mov
out
sbbl
sub
ss
push
xchg
popa
aam
cmp
fidivrl
decb
push
jo
rcll
popa
sub
mov
and
xchg
adc
dec
addr16
push
scas
jge
jmp
stos
mov
inc
pop
aaa
mov
mov
cmpsb
or
pop
in
scas
lods
dec
cwtl
add
ss
sbb
lcall
ja
inc
shrl
cmpsl
push
out
xor
scas
stos
mov
dec
hlt
pushf
lods
adcb
cld
mov
and
and
mov
sarl
inc
jmp
jns
cmp
cmp
ljmp
daa
inc
sbb
mov
and
out
sbb
dec
xor
shl
rcll
lods
repnz
decl
mov
ds
add
into
icebp
pop
lcall
sub
sbb
rcl
mov
outsb
test
sbbl
xchg
push
in
in
pop
lcall
incl
jmp
inc
sub
xor
sbb
xor
mov
clc
clc
dec
xchg
jnp
pusha
xor
push
sub
cmovns
and
adc
mov
sbb
xchg
xchg
mov
lret
lea
stos
je
mov
inc
cmpb
and
test
push
hlt
jmp
ret
mov
mov
mov
add
push
and
and
push
fsub
std
aad
or
dec
mov
incl
sub
fisttpl
xchg
stos
sbb
fucomip
mov
scas
js
and
cmpsb
adc
mov
cmpb
xchg
jg
lock
stos
rcll
fs
movsl
ds
stos
lret
jmp
jo
lods
outsb
loope
xor
jmp
and
cmp
repz
or
in
push
and
in
test
sub
push
gs
ljmp
sbb
aam
and
stc
out
cmp
roll
gs
push
sub
mov
pushl
fucomi
xor
std
jge
add
ds
sub
fisttpl
or
rcll
add
incl
cmp
pop
xchg
xor
mov
sub
jg
and
xor
pushl
push
push
outsb
mov
and
hlt
int
stos
pcmpeqd
xor
lods
sti
call
dec
nop
and
inc
xchg
and
sub
dec
loope
lds
outsl
jmp
jl
jecxz
incl
hlt
fisubl
mov
adc
mov
out
loopne
fs
arpl
mov
mov
mov
andb
test
test
jle
push
sbb
push
pushl
xchg
mov
popa
scas
mov
ja
dec
pop
popf
test
xchg
addl
dec
call
cmp
lock
ror
test
jae
mov
js
arpl
ret
ljmp
inc
xchg
sbb
dec
inc
adc
rcrb
pop
aad
call
cmp
pop
outsb
sub
sub
dec
push
into
push
push
dec
pop
pop
mov
sahf
test
ljmp
cmc
push
mov
decb
repnz
clc
push
inc
xchg
xor
aam
ljmp
dec
sub
lock
fdivs
lcall
test
pop
lret
xchg
hlt
int
mov
outsb
pop
dec
mov
mov
loopne
adc
sbb
daa
mov
lcall
cmc
dec
xor
ljmp
test
imul
or
repnz
xor
or
pop
imulb
mov
ja
inc
add
cmp
adc
and
idiv
or
subb
pop
test
insb
cs
in
and
lcall
mov
sbbl
nop
sub
lods
les
push
cmc
inc
adc
mov
decl
sub
push
lods
xlat
and
push
xor
iret
xor
sub
bound
sub
dec
repz
lock
inc
push
xor
and
pushl
push
xchg
mov
mov
or
incl
pop
loope
hlt
sbb
iret
imul
sbb
cltd
pop
stc
pop
add
incl
inc
filds
push
mov
iret
xchg
out
sbb
xchg
aam
data16
pushl
jmp
cmpsb
ret
mov
xchg
imul
scas
andb
lcall
xchg
inc
sbb
movsb
sbb
mov
popf
test
inc
data16
dec
pop
lahf
cmp
pop
jne
sbb
mov
call
popf
cmp
pop
xchg
mov
mov
sahf
pop
jge
mov
mov
das
es
cmp
jmp
mov
pop
or
imul
sbb
sub
push
aaa
ret
cmp
loop
popf
jl
lret
mov
rcl
pusha
mov
cltd
push
jno
call
and
mov
roll
popa
mov
xor
add
mov
jecxz
sub
mov
fistl
sbb
dec
push
stc
jns
or
andb
int3
xor
sbb
clc
pop
mov
push
fidivl
and
sub
stos
outsl
or
lcall
sub
inc
fcmovbe
shrb
jb
add
iret
sub
mov
mov
popf
out
test
sub
gs
pop
adc
jbe
dec
int
decl
call
dec
cmp
sub
lods
cmp
rcl
dec
lods
testb
cld
ljmp
mov
call
adcb
pop
mov
jmp
add
adc
aas
call
lcall
jp
sbb
push
pop
push
ret
xchg
add
stos
int
and
jp
out
xlat
scas
ljmp
pushf
fnstenv
dec
lret
insb
mov
aaa
add
mov
in
mov
ljmp
lock
jno
push
mov
mov
sub
repz
add
mov
in
inc
xchg
mov
add
stos
jecxz
cmpsl
popa
or
adc
and
call
aam
js
inc
clc
push
shrl
xchg
sbb
dec
push
inc
sub
mov
ljmp
call
xor
jmp
in
mov
dec
leave
lea
fsubp
ljmp
jecxz
dec
push
xor
and
mov
pop
int
xor
ljmp
adc
push
add
sahf
popf
or
lea
push
dec
jae
mov
dec
scas
sbb
xor
push
cmp
sbb
mov
or
outsl
in
cli
sbb
sbb
xchg
pushf
hlt
subl
pop
icebp
jnp
pop
and
lahf
pusha
jp
jg
mov
lds
mov
fwait
jns
dec
movsb
jg
cmp
jmp
cmpsb
push
push
cli
mov
mov
ret
xor
sub
cli
pusha
imul
pushl
ficoms
push
repnz
rcrb
stc
cmp
repz
leave
pop
bound
es
xchg
aaa
std
call
jmp
add
sub
cwtl
aad
scas
jmp
iret
and
int
shr
lahf
and
jmp
divb
sub
pop
jg
push
int
hlt
aam
out
loope
cmpb
out
mov
popa
and
xchg
int3
adc
or
and
outsl
cmp
vpmacssww
cmpsb
xchg
xchg
jecxz
incl
lahf
lcall
xor
rdmsr
scas
cmc
test
cmp
mov
in
sbb
xchg
scas
ds
js
xor
or
xchg
data16
icebp
pop
push
repz
mov
out
clc
sub
xchg
dec
push
out
or
cmp
repnz
in
ss
call
ja
loop
push
stc
in
mov
pop
insl
mov
jmp
arpl
lcall
xchg
xlat
cmp
inc
pop
sbb
adc
cmc
jae
adc
cld
ds
incl
js
negl
adc
pop
dec
jp
sub
loop
das
mov
mov
jle
jb
adc
cmp
pop
sbb
dec
inc
clc
jns
in
sub
call
rcrb
fiaddl
dec
ss
adc
and
sub
pop
mov
push
mov
sbb
dec
cmp
imul
aas
std
addr16
inc
inc
sbb
sar
lcall
inc
stos
pop
jge
cmp
adc
fisubl
jne
and
dec
mov
mov
subb
push
dec
mov
cmp
mov
cwtl
sub
loope
es
in
ja
mov
sti
mov
sub
push
mov
sub
mov
jae
or
inc
cmp
jmp
rcll
daa
iret
xor
xlat
in
aam
loop
sub
addb
pushl
popf
jnp
ss
dec
add
fprem
sbb
jl
lahf
insb
shr
cmpsl
jg
in
lret
push
jo
out
mov
aad
mov
in
or
inc
jnp
lock
sub
mov
and
pop
sbb
shrb
dec
out
int
insl
test
jmp
sti
cmc
pushl
std
adc
es
and
adc
mov
jl
lcall
movsb
daa
pop
popl
jb
lods
sbb
or
dec
jp
imulb
loope
pop
jns
rclb
ficomps
test
in
fdivr
outsl
cli
pop
ss
inc
mov
lcall
push
jecxz
clc
filds
decl
cltd
inc
push
aam
inc
fs
xor
dec
pop
dec
and
cmc
test
adc
incl
sub
pop
pop
lods
mov
fadd
inc
daa
std
sbb
shrl
mov
jecxz
xor
jne
iretw
es
call
out
lock
cmp
sahf
xor
mov
mov
aas
xor
inc
pop
jl
fs
lcall
pushl
rcrb
xchg
rolb
jle
dec
jle
adc
mov
pop
or
out
idivl
lds
and
aad
xchg
add
incl
iret
jle
call
fs
cmpl
and
sar
or
test
xor
jmp
adc
xrelease
scas
daa
cltd
xor
or
repnz
test
pushl
andb
inc
mov
sub
sbbb
sbb
notb
add
mov
add
addr16
fdivs
or
pop
sub
inc
push
xchg
jnp
cmp
pusha
test
pop
xor
dec
mov
ljmp
loop
sub
cmc
mov
xor
inc
jb
pushf
jo
push
imul
mov
adc
xchg
mov
lods
push
mov
pushf
cmp
push
dec
pop
mov
pop
pop
xor
ss
dec
clc
fcomip
inc
sub
lahf
popa
mov
xchg
cwtl
bound
mov
jb
bound
add
jg
test
clc
pop
xor
pop
lock
mov
push
xchg
sub
mov
mov
xor
loopne
frstor
data16
mov
mov
fildll
cmp
loop
daa
cmp
xor
push
std
addr16
dec
repnz
or
pop
or
mov
cltd
xchg
in
cld
lahf
lcall
pushl
mov
add
mull
repz
or
cmpsb
rorl
push
jb
jb
jl
add
adcb
scas
mov
test
into
call
cmp
mov
or
xchg
xchg
add
adc
xor
fwait
pop
in
pop
pushl
incl
xor
loope
xchg
or
lods
repnz
negb
fldt
insl
call
and
test
js
cmp
xchg
filds
inc
or
stc
xlat
insb
int3
adc
add
popa
mov
xchg
adc
testb
sbb
push
inc
pop
mov
jge
in
mov
addr16
pushl
aaa
mov
mov
dec
mov
cmpsl
mov
js
adc
xchg
shlb
mov
in
sub
xchg
flds
out
fucomi
imul
hlt
outsl
cmp
jns
sahf
daa
xor
pop
push
xchg
dec
scas
test
call
js
adc
jg
xchg
mov
imul
sbb
ljmp
in
test
push
ljmp
imul
mov
clc
loop
fistpl
idiv
cmp
fs
xlat
or
cli
mov
out
lcall
insl
xlat
imul
dec
test
ljmp
test
das
mov
cmp
test
jbe
fwait
insl
icebp
push
repnz
sahf
cmp
sub
mov
dec
push
jle
xor
inc
jecxz
gs
inc
cmp
out
loopne
movsl
mov
bswap
and
fidivrl
jmp
pop
adc
add
repnz
mov
jmp
std
inc
mov
les
lods
inc
fs
or
mov
scas
jmp
add
scas
xor
fstpl
je
pop
dec
cmpsl
add
test
jbe
xchg
lcall
push
cmp
jae
loopne,pt
call
inc
sub
jbe
imul
and
cmp
ljmp
sub
shrl
pop
ror
fiaddl
les
sub
ret
mov
inc
iret
mov
lret
arpl
mov
mov
inc
push
jno
pop
js
imul
rcl
cmpb
aas
aaa
neg
mov
decl
xchg
bound
cwtl
mov
mov
or
call
test
clc
movsl
stos
ljmp
iret
sbb
ds
mov
sahf
or
icebp
leave
decl
popf
mov
sbb
cwtl
push
xor
mov
mov
jl
scas
push
decl
pop
mov
lcall
sbb
dec
js
mov
cs
pushl
fstl
or
add
mov
sub
jg
mov
scas
or
xor
decl
into
cltd
gs
scas
mov
mov
test
fld
mov
fcoms
or
sti
dec
mov
mov
and
popa
rclb
scas
jae
jno
adc
jmp
inc
loopne
mov
dec
cmpsb
fistps
and
iret
fisttps
out
and
pushl
cld
das
add
insb
cli
loop
adc
push
mov
bound
sub
call
xor
jbe
cld
lods
call
jne
or
ljmp
popf
add
pop
mov
ret
or
or
imull
and
ljmp
mov
and
mov
addr16
push
icebp
adc
lods
out
inc
dec
jmp
call
loopne
dec
mov
dec
loopne
xchg
mov
test
dec
and
lret
ret
loope
jp
push
cwtl
outsb
fwait
pop
jle
pop
test
aas
inc
push
sub
jb
push
and
lods
jb
mov
loopne
rcrl
mov
arpl
jmp
fnstcw
or
jl
lahf
pop
and
mov
fsubrp
cmp
push
jl
jmp
xchg
mov
into
scas
push
push
cmp
push
inc
jnp
ds
faddl
sbb
movsb
jb
mov
rorb
fimuls
rclb
incl
pop
pop
pop
ds
dec
and
xchg
mov
dec
sub
inc
mov
xor
out
es
sub
mov
enter
cwtl
jbe
mov
push
dec
push
insb
addr16
ficoms
call
cwtl
push
rcrl
xor
mov
ret
push
aaa
in
push
ror
dec
jecxz
sub
mov
scas
mov
add
jo
cmpsl
pushf
mov
jle
cmp
ljmp
or
jo
push
sbb
pop
pop
cmp
scas
sbb
pusha
shlb
lcall
loop
jae
addr16
xlat
push
push
or
stos
push
or
jb
std
cmp
sbb
movsb
aam
mov
cld
push
lret
sar
fsubs
mov
test
dec
ja
nop
add
cmpsb
pop
adc
jo
hlt
sub
fsts
call
dec
hlt
sub
inc
dec
out
ret
lods
sbb
jmp
je
inc
fwait
jle
mov
push
call
aad
adc
cwtl
cltd
mov
inc
rol
adc
stc
fidivl
ret
xor
out
stc
adc
ret
jae
xor
mov
cli
adc
ds
hlt
cmp
incl
add
xchg
leave
sbb
inc
jbe
mov
or
and
adc
ljmp
push
inc
pop
leave
and
lcall
mulb
fdivp
pop
cld
mov
pop
mov
inc
mov
xor
popa
fmul
inc
aad
ljmp
push
jp
mov
inc
jne
or
pop
sahf
pop
pop
jmp
lds
mov
ja
push
sbb
subl
inc
sahf
popl
jbe
push
loopne
jmp
sub
add
jno
xchg
xor
pushf
cmp
mov
jge
cmp
sbb
ljmp
cld
in
popa
jne
cltd
shlb
inc
cs
and
das
nop
out
adc
xor
mov
movsl
shlb
mov
std
sbb
fstpl
xor
jns
push
fcmove
push
movsl
mov
int3
out
icebp
mov
xchg
cmpsb
mov
cwtl
mov
out
adc
cmp
and
loope
mov
out
pop
cmp
lcall
dec
ljmp
or
not
mov
jne
jno
and
mov
fnstenv
cmp
call
add
inc
shlb
out
mov
sbb
sub
fs
jg
sub
xor
inc
or
aad
pop
push
test
stos
incl
insb
stc
mov
push
das
xchg
popa
mov
mov
shll
mov
mov
cmp
xchg
inc
out
xor
sbb
jecxz
das
addr16
push
inc
lret
sub
cwtl
or
xor
mov
lock
stc
cli
add
pop
mov
sub
clc
sbb
decl
loopne
fiaddl
sti
xor
test
mov
jmp
xor
jmp
and
pop
pop
sbb
stos
dec
mov
add
mov
int3
int
idivl
ljmp
and
jmp
test
fisubrs
xchg
push
xor
jmp
in
call
loop
das
hlt
xor
lods
ret
xor
xchg
repnz
in
jnp
inc
mov
fsubs
sar
lcall
dec
jle
lock
xor
mov
mov
cmp
jecxz
sbb
cmpb
adc
mov
movb
icebp
mov
push
lret
inc
cmpsb
xor
and
cmpsl
insl
add
cli
cwtl
imul
xor
mov
ja
in
arpl
xchg
xchg
imul
mov
fcomip
test
fwait
out
xor
mov
aam
nop
ds
cld
loope
push
clc
jecxz
ljmp
and
pop
stc
inc
ret
pop
data16
aaa
fyl2x
arpl
pushf
rcl
mov
mov
or
jl
mov
or
lods
adc
movsb
dec
ja
int3
inc
in
inc
pop
dec
mov
cmpsl
lcall
movsb
imul
loop
and
scas
and
sbb
lcall
jg
xchg
fnstsw
mov
out
mov
lahf
push
loopne
iret
adc
adc
pushl
cld
jmp
pop
mov
xchg
push
jo
call
jbe
push
in
cmp
clc
out
lcall
roll
push
hlt
mov
mov
mov
frstor
pushf
insl
sti
int3
xchg
movsb
cmp
xchg
xor
in
or
jmp
data16
incl
pusha
dec
or
stos
int
mov
inc
mov
mov
fmulp
xor
pop
xchg
and
orl
incl
loope
pop
loop
outsb
jnp
or
mov
into
xlat
notb
dec
pop
fcoms
inc
cld
sub
or
mov
dec
xchg
pop
jg
lcall
push
sub
dec
dec
loopne
incl
adc
ret
inc
out
rorb
rolb
mov
push
mov
or
call
xor
jnp
shl
test
enter
pop
test
jg
mov
inc
stos
test
mov
mov
lds
or
and
stc
mov
test
pushf
push
rolb
lcall
ljmp
sarb
lcall
test
std
pop
in
ja
sbb
lcall
jmp
cmc
les
add
movzwl
shrl
frstor
leave
shrl
test
fwait
push
push
mov
test
aaa
lahf
leave
lahf
lcall
int
dec
inc
pop
outsl
jo
call
loopne
adc
rclb
sbb
incl
sti
shlb
push
in
jae
pop
ja
xchg
repz
mov
pop
xchg
aad
fistps
pushl
sub
lcall
scas
pop
out
add
out
call
ret
jnp
adc
in
mov
inc
dec
jae
repz
add
jo
std
lret
fucomp
or
clc
ljmp
stos
jne
mov
int3
mov
add
popf
or
add
ljmp
add
mov
mov
dec
popf
stc
xor
sub
inc
lret
cs
inc
jo
out
jbe
stos
adc
adc
sub
pushf
inc
adc
xchg
sub
dec
mov
sarl
cmp
mov
push
push
fistpl
jg
push
or
insb
enter
test
in
sahf
inc
ficoml
fsts
sbb
inc
jno
shrl
inc
cld
out
stos
or
repz
mov
xlat
orl
incl
push
sbb
mov
and
adc
mov
mov
out
incl
adc
push
sbbl
lcall
and
add
sub
and
gs
inc
dec
testl
into
xor
cmp
pushl
adc
sbbb
and
mov
in
movb
jbe
incl
push
and
adcb
jb
push
add
push
out
adc
std
je
ljmp
pop
or
adc
fnstcw
cs
push
sahf
jo
fucomip
gs
or
decl
sbb
ds
test
jno
or
inc
aam
push
enter
clc
out
sub
sub
pop
pusha
popa
jecxz
popf
in
in
add
pop
jl
rclb
cmpb
lcall
mov
mov
ljmp
das
sbb
int
lds
cwtl
inc
add
cmp
xchg
cmp
in
mov
roll
add
sub
das
shlb
aad
add
cmpb
call
xchg
je
hlt
jno
cmpsl
mov
pop
mov
push
cmp
push
repz
les
adc
aaa
ljmp
sbb
jno
and
out
in
dec
jb
cmp
xor
mov
pushl
fucomp
xor
sub
in
mov
pop
imul
repnz
faddl
iret
sbb
loope
sbb
cmp
test
les
jecxz
shll
call
dec
out
test
push
data16
jmp
insl
or
pop
fwait
cmp
inc
xor
jge
mov
jnp
rclb
jge
div
pushf
push
out
cmp
inc
cwtl
jecxz
ljmp
bound
addr16
mov
and
pop
push
cmp
xchg
cmp
pushl
dec
aas
xchg
xor
pop
shrb
dec
dec
out
in
mov
xlat
mov
testb
pushl
xor
addl
iretw
lcall
jge
repz
mov
adc
cltd
scas
adc
jge
sub
adcl
mov
push
add
repz
mov
jmp
movsb
lret
jg
adc
mov
and
cmp
insb
cmp
push
lods
call
fwait
hlt
into
test
mov
mov
mov
inc
arpl
push
xchg
mov
out
test
inc
enter
xchg
jne
test
push
bnd
mov
decl
mov
sbb
dec
pop
xor
push
popa
shrb
leave
cwtl
popf
lcall
mov
jle
dec
shlb
or
lret
ja
cld
nop
mov
inc
int3
out
xchg
fcmovne
mov
loopne
test
insb
bound
lahf
sahf
mov
scas
call
sar
mov
sbb
cli
orl
nop
mov
in
add
leave
jge
ljmp
cs
mov
pop
lods
push
loop
pop
and
loope
ss
les
call
jge
mov
repnz
popa
fbstp
ds
or
or
roll
mov
sub
cld
jge
insl
xchg
fsubr
lods
mov
ds
adc
lcall
adc
dec
loop
push
je
push
call
dec
pushf
cltd
jl
push
inc
jne
sub
movsl
xor
decl
cmp
add
push
iret
insl
insl
adcb
test
xor
xor
mov
or
xorb
movsl
andb
push
or
sub
xchg
aas
fsubs
jecxz
lods
insl
pushl
cmp
sarb
in
cld
lods
ja
mov
fcompl
pop
popa
mov
clc
jg
add
mov
rolb
aaa
hlt
imul
lcall
mov
mov
jecxz
sbbl
cmovo
clc
pushf
xchg
rorl
aad
stos
push
in
inc
mov
adc
sbb
shll
push
cmp
jg
xchg
adc
fdivs
decl
sbb
das
jnp
xchg
sub
xchg
gs
aam
shll
call
loop
xlat
in
and
push
imul
hlt
sbb
clc
test
imul
daa
out
clc
ja
fidivl
mov
xor
fldcw
adc
pushl
repnz
stc
mov
nop
jge
fisubrs
sarb
mov
rolb
test
call
sub
rcrl
adc
mov
sbb
psubb
dec
icebp
in
jmp
mov
dec
fadds
mov
ret
std
bound
test
shlb
int3
push
lret
jle
insl
inc
mov
insl
faddp
ljmp
lahf
mov
pop
loop
sub
pop
adc
sub
pop
test
stos
js
pop
push
sub
imul
incl
add
cs
lahf
shrl
cld
movsl
xchg
pop
subb
fcmovnu
pop
out
dec
dec
mov
mov
pop
cmc
call
mov
push
stos
mov
mov
aam
js
adc
and
outsl
cmp
icebp
test
mov
push
jecxz
sub
loope
btr
push
call
loopne
iret
shll
data16
pop
bound
push
inc
pusha
into
jp
sbb
decl
fwait
ds
mov
fldt
cmp
dec
jae
lret
decl
sub
shlb
mov
aas
lahf
add
xor
lret
xor
pushl
std
mov
rorl
mov
inc
rolb
inc
adc
jg
mov
les
sbb
repnz
cmp
jnp
xchg
mov
out
jp
inc
incl
movsl
mov
cmp
inc
test
insl
fucom
xor
jmp
mov
repnz
sub
imul
sbb
decl
movsb
push
and
cmpb
shll
xor
shll
daa
dec
sahf
lcall
js
inc
xor
ja
add
add
lcall
aaa
call
decl
xchg
ret
ret
data16
jecxz
aad
pop
xor
pusha
pop
imul
jmp
fisubs
aaa
scas
pop
inc
xor
out
outsl
rcll
cmp
cli
and
xchg
jp
mov
ljmp
ja
call
fwait
sbb
mov
add
push
inc
test
jp
call
scas
jnp
mov
pop
or
scas
jl
fsubp
das
frstor
add
mov
jmp
cwtl
jns
shrl
xchg
or
mov
out
mov
sbb
int
sarl
fildll
je
cmpsl
enter
mov
mov
xor
lds
or
les
push
cmp
sub
lods
insb
jbe
pusha
fs
addr16
sbb
xchg
jl
icebp
mov
push
pop
adc
push
or
and
mov
cld
test
sub
fwait
inc
inc
aad
enter
dec
clc
out
cmp
or
fs
mov
dec
lret
dec
imul
add
push
push
mov
ljmp
sub
adc
ljmp
mov
stos
bound
add
into
movsb
jmp
lods
jle
sub
test
adc
in
sarl
outsl
jg
mov
dec
ljmp
mov
adc
dec
xor
mov
cmc
jb
push
cmpb
jg
inc
and
mov
jle
mov
mov
sti
pop
pop
decl
test
mov
sub
negl
stos
iret
lret
call
add
out
out
lret
lods
dec
push
mov
ljmp
mov
test
mov
jmp
clc
xchg
sti
fists
jp
fstpl
mov
leave
xchg
mov
and
mov
jae
sahf
cmpsl
cmp
popa
scas
jns
lods
sbb
pop
addb
fbstp
ds
or
fstps
add
int3
adc
sbb
jmp
decl
lret
psrlw
clc
jno
mov
adc
aam
mov
or
decl
jo
mov
cmp
sbb
xchg
outsb
jmp
popl
incb
sub
rcrb
fstps
add
xchg
xchg
je
int
sbb
addr16
pop
test
lahf
shr
gs
sbb
inc
jl
out
cli
mov
mov
cmpsb
lea
lcall
sbb
mov
leave
lcall
xchg
add
dec
popf
fistpll
xchg
jg
mov
jno
nop
cmp
push
cld
ljmp
lods
jmp
jno
lret
lods
out
movsb
outsl
mov
decl
xchg
std
loopne
out
insl
adc
add
cmp
and
xchg
cmp
mov
test
leave
push
xchg
xor
jge
imul
ds
xchg
mov
add
push
sbb
dec
dec
lods
xchg
out
jnp
mov
xor
jmp
ljmp
sub
test
iret
int3
inc
push
movsl
sarb
xchg
xchg
mov
sub
lcall
fcomip
repnz
xor
xchg
iret
or
stos
sbb
arpl
sbb
fists
mov
sti
addr16
sbb
push
pop
push
lea
cmp
sub
outsl
mov
pop
dec
ljmp
in
out
mov
mov
cwtl
cmp
scas
xchg
pop
out
cli
add
cmp
adc
adc
idivw
jg
ljmp
jmp
xchg
pop
adc
mov
ljmp
or
lret
ret
sub
imul
decl
or
jnp
mov
ficompl
movsb
das
popf
push
jmp
subl
xchg
scas
mov
sbb
ljmp
cmc
sub
movsl
addb
fnstenv
cmp
incl
xchg
mov
ljmp
std
xor
cmpsb
jo
ljmp
push
push
mov
in
adc
and
fucomip
sti
and
and
ljmp
clc
in
scas
xor
inc
and
hlt
pop
or
enter
inc
das
adc
jg
xor
jmp
dec
pop
jl
test
pop
jne
cmp
sbb
call
xchg
pop
punpckhbw
and
pop
cmp
adc
or
cwtl
adcl
adc
ljmp
pushl
repnz
leave
jg
mov
jns
popf
sub
and
rcr
jg
add
js
xor
pushl
mov
dec
test
mov
sub
pop
dec
xchg
pop
cmpsl
adc
call
add
dec
out
cmp
xchg
rcr
inc
mov
add
inc
push
or
sarl
popf
loopne
mov
push
pushl
push
sarl
aad
mov
jno
inc
shl
dec
lcall
inc
push
sbb
ljmp
adc
mov
xchg
push
int3
mov
push
mov
movsl
dec
mov
jbe
jno
inc
cwtl
jb
mov
lahf
popf
or
mov
mov
stos
pop
and
call
mov
jmp
fwait
mov
pop
push
addl
xchg
xlat
jmp
jno
mov
add
fiadds
adc
push
jle
mov
jg
loope
add
outsb
adc
mov
je
adc
xor
mov
jg
sub
mov
or
cld
jne
aad
push
mov
or
ret
insb
roll
idiv
jmp
push
out
int3
jmp
push
xor
jb
sbb
sub
pushl
pop
fistpl
outsb
dec
out
adc
int
imul
pusha
lods
mov
pushw
cmp
fcomip
push
jbe
or
lret
mov
xchg
jno
or
push
push
push
mov
ljmp
incl
push
pop
lahf
test
int
sub
sbb
pop
in
mov
adc
mov
ja
movsb
mov
lods
notb
call
dec
imul
repnz
sub
mov
mov
stc
into
xchg
insl
mov
dec
sbb
out
mov
or
incl
pop
jnp
jg
xchg
add
and
ljmp
sti
mov
dec
insb
outsb
mov
mov
and
ja
mov
mov
fs
mov
sbb
shl
lods
es
dec
cmp
cmp
incl
aas
call
jmp
cli
movsb
and
clc
push
sub
std
data16
incl
out
mov
scas
out
mov
dec
push
push
ret
ds
pop
dec
adc
mov
cmp
push
inc
ja
inc
jle
aad
push
js,pt
dec
dec
xor
fidivl
rolb
incl
repnz
lds
shrb
daa
test
xchg
or
or
mov
sbb
push
dec
mov
adc
aas
loope
sar
decl
out
sbb
sbb
fxam
xor
sub
faddl
dec
jmp
sti
pop
int3
sti
aam
jle
inc
mov
out
dec
scas
xor
dec
in
sti
jmp
mov
mov
cli
test
jbe
pop
sub
add
adcb
cmp
inc
sub
push
cmp
fsubs
pop
test
and
dec
xor
jbe
sahf
gs
fsubrs
cmp
es
in
mov
icebp
imul
inc
cmp
mov
jmp
ud2
jle
push
loopne
mov
push
out
or
insl
push
sbb
xchg
xchg
push
into
mov
mov
cmp
popa
outsl
or
stos
nop
xchg
xor
mov
faddp
popf
js
mov
push
jge
cmp
sahf
pusha
sub
lcall
mov
orb
adc
cwtl
pop
ss
push
jne
pop
mov
cmp
pop
fdivr
nop
mov
and
js
ljmp
push
xlat
xchg
and
pop
fwait
lods
mov
rolb
or
cs
popf
mov
aad
pop
fst
add
mov
or
cmp
ljmp
subl
cmpsl
dec
xchg
xor
and
add
fadds
scas
mov
fwait
in
xor
popf
loope
jb
lcall
jmp
or
or
ss
fsubp
das
rcll
incl
pop
mov
jns
xchg
leave
pusha
cmp
sub
fwait
mov
lock
pop
inc
iret
pop
sub
push
gs
push
cmpsb
sarb
cmp
or
pop
sbb
and
jmp
inc
stos
jp
js
icebp
jle
lcall
test
sub
clc
call
inc
lds
cmp
mov
ljmp
fstl
repz
incl
sub
aaa
pop
and
jae
sbbb
and
mov
push
stos
in
repz
jge
inc
mov
jne
pop
stos
pop
mov
mov
sbb
outsl
xchg
rclb
aad
ret
ljmp
je
jg
mov
cmpsl
sbb
call
xchg
gs
and
sub
call
or
push
iret
jmp
xchg
enter
jmp
push
mov
dec
and
pop
pop
adc
dec
loopne
mov
addr16
add
sbb
hlt
arpl
add
cmp
add
xchg
ja
pop
idiv
lods
and
addr16
sub
sarb
rcrb
incl
xor
imul
out
rclb
testb
sti
inc
fsubl
cmp
ss
outsb
out
loope
mov
mov
fwait
mov
test
pop
out
clc
cltd
xor
out
dec
icebp
stos
lods
push
aam
xchg
in
loope
and
icebp
incl
rclb
mov
jp
cs
jb
stos
sahf
jb
ljmp
movsb
sub
call
insb
push
cmp
mov
iret
in
mov
mov
cmpl
and
or
fstl
jl
sub
mov
popf
fistps
inc
lcall
dec
xchg
push
or
cld
push
data16
adc
hlt
and
or
sar
pop
loopne
dec
repnz
mov
lret
mov
dec
xor
adc
mov
decl
pop
test
and
xlat
lds
inc
jo
lods
pop
bound
repnz
jmp
leave
rclb
adc
jecxz
adc
push
xchg
jmp
lret
shlb
sbb
imul
mov
mov
cmp
sbb
push
sub
push
adcb
aas
clc
inc
imull
das
cli
pushl
push
daa
push
fnsave
js
loopne
mov
dec
jl
popf
or
int3
imul
or
lcall
outsl
inc
jg
mov
fidivrl
mov
ja
mov
in
adc
jmp
xchg
rclb
pushl
pop
mov
push
cmc
test
pop
mov
shll
fucomip
mov
sar
shlb
push
ret
sbb
adc
sti
and
jbe
loope
aam
pop
aad
incl
loopne
xchg
cmp
or
mul
sbb
lods
iret
fadd
dec
dec
jo
lcall
cmpsl
push
push
movsl
icebp
in
dec
push
ljmp
pop
arpl
mov
sar
scas
sub
xchg
rorl
fmuls
pop
jns
mov
push
sub
stos
das
std
jl
outsb
shl
dec
popf
out
dec
or
inc
int
js
pushl
ss
pop
cmpsb
xchg
cmp
xchg
add
sbb
dec
lahf
adc
incl
aam
mov
std
shrl
ret
js
jle
and
lods
es
xor
xchg
push
sub
xchg
ljmp
inc
mov
push
jbe
icebp
xchg
xchg
arpl
clc
push
in
sti
mov
sar
incl
movsb
dec
cmc
mov
jbe
dec
mov
jbe
mov
cli
jg
jp
lds
out
push
test
jb
xorb
add
add
js
jg
push
enter
mov
mov
mov
mov
inc
jle
pop
sbbl
xor
inc
mov
decl
scas
lods
fs
mov
and
lods
out
std
in
add
push
push
cmp
pushl
inc
cmpsl
sbb
fsub
aam
pop
add
ret
mov
dec
mov
daa
push
or
cwtl
sahf
popf
decl
fs
push
pop
and
sbb
pop
xor
dec
lods
aaa
pop
jno
xchg
es
ljmp
push
andb
and
lret
mov
insl
dec
mov
lods
push
cmpl
xchg
push
push
pop
fnstcw
scas
adc
jns
push
xor
cmp
mov
mov
mov
fbstp
mov
jo
adc
inc
sarl
sub
fsts
cmpsb
clc
xchg
inc
pop
in
pushf
jbe
ljmp
push
add
sub
xor
push
ds
jnp
dec
jle
and
jmp
adc
pop
cmc
incl
sahf
sbb
cmp
inc
sub
xchg
sbb
push
mov
push
stc
js
jmp
mov
xor
push
inc
in
decb
pop
push
sub
dec
and
pushl
push
in
insb
xchg
fstp
sbb
stos
fcompl
in
mov
repz
and
mov
lcall
decb
xchg
lcall
sti
sub
jl
pop
hlt
lcall
sbb
js
mov
xor
out
das
inc
pop
or
ljmp
mov
rcrl
xchg
fs
decl
lods
jae
mov
mov
mov
es
lcall
test
stos
lock
lods
pop
lock
push
repnz
stos
jmp
pop
call
decl
sahf
leave
lea
cli
push
adc
lret
mov
or
out
dec
fcomps
push
push
xchg
xor
xchg
ret
ljmp
fidivs
mov
inc
movsl
dec
pop
or
fucomp
hlt
fbstp
fwait
sub
gs
pop
and
xchg
filds
pusha
lret
cltd
mov
dec
in
add
imulb
push
xor
popf
inc
sahf
das
and
push
sahf
pushl
add
aas
xchg
inc
xchg
jge
or
xchg
xchg
cld
cmpsl
enter
mov
cmpsb
addr16
mov
int3
add
and
fistpl
dec
xor
ljmp
dec
enter
or
mov
mov
test
and
mov
lcall
adc
sub
mov
insb
nop
gs
ljmp
leave
ss
dec
je
fists
popf
nop
mov
pushl
lahf
repz
ja
add
aaa
xchg
mov
push
incb
ljmp
stc
push
cs
xor
fs
sbb
js
fldt
push
push
fnsave
int3
in
xchg
jl
arpl
inc
xlat
dec
sahf
idivl
call
int
mov
js
push
xorl
sub
dec
xchg
cli
icebp
aad
lcall
pop
mov
mov
loope
lcall
lods
fcmovnbe
mov
pusha
mov
ss
and
stos
mov
insl
pushf
addr16
jge
xchg
faddl
sub
xchg
cmp
lcall
lret
jns
add
push
outsl
loope
test
cmp
pop
stc
in
push
cltd
shll
mov
icebp
call
ficoms
sbb
mov
inc
inc
cmp
inc
jmp
mov
decl
js
test
test
pushl
cmpsl
mov
lock
popa
dec
outsl
cltd
xchg
movsl
int
nop
push
data16
push
cmp
cmpsl
in
or
add
jge
xchg
aaa
in
and
mov
lret
mov
mov
loopne
mov
mov
cmp
mov
xlat
ficoml
jbe
or
mov
ljmp
push
xor
sbb
jae
fsubl
icebp
sarb
and
sub
sbb
clc
out
incl
sar
arpl
fimull
cli
leave
rclb
daa
mov
xor
mov
dec
jmp
inc
push
shr
mov
cltd
xor
ja
aaa
pop
inc
xor
adc
mov
call
push
cli
sbb
jle
rcrb
dec
jecxz
jnp
jo
lcall
cmp
ljmp
popa
sub
mov
add
mov
or
mov
push
push
repnz
js
jl
test
jnp
or
and
pushl
stos
inc
and
and
dec
cwtl
iret
daa
pop
inc
inc
call
sub
repz
jl
lcall
iret
mov
push
sub
xchg
inc
ds
jge
jge
lahf
adc
arpl
dec
mov
mov
lock
in
decl
aam
lret
ja
out
lret
add
flds
jl
sbb
ja
icebp
cwtl
inc
scas
sub
pop
inc
xchg
fidivl
aad
inc
andb
cmp
loopne
in
in
jno
mov
push
mov
test
mov
push
ljmp
push
jl
jle
cmp
or
shl
lods
add
mov
insl
push
jp
mov
dec
sar
mov
int3
mov
push
cmp
cmp
push
jg
outsl
cli
cmp
orb
leave
stc
dec
xchg
cld
ss
cmp
add
sub
imul
dec
jle
shlb
inc
pop
mov
mov
lcall
lea
jecxz
and
mov
ss
cmp
pop
aam
loope
xchg
mov
jmp
jle
jg
call
repz
add
aas
inc
cmpsb
cld
std
out
mov
mov
jp
pop
xchg
mov
jl
sbb
inc
xor
fcompl
js
adc
cltd
pop
into
imulb
xlat
jmp
pop
scas
xor
sub
aam
pop
push
cld
int3
mov
sbb
mov
js
lcall
data16
xchg
insl
sbb
push
xor
icebp
pop
lods
icebp
aaa
fimull
pop
or
jmp
lret
outsl
mov
das
stos
data16
jmp
xor
mov
xchg
mov
fistps
fnstenv
aad
xchg
fimuls
xchg
roll
push
sub
iret
jnp
test
es
pop
das
dec
cltd
or
xor
push
xor
mov
pushl
loop
pop
pushl
testb
sahf
push
add
fsts
das
push
test
notb
pop
cmc
inc
addl
push
and
adc
rorb
rcll
inc
gs
lods
ljmp
int3
sbb
nop
stos
xorl
or
cmpsl
xchg
xchg
fwait
and
fwait
leave
in
jecxz
mov
cmp
jno
in
mov
pop
pop
jo
push
xchg
dec
loope
add
jp
mov
cmp
jg
xor
iret
movsl
shrb
cmpsb
mov
pop
jb
jne,pt
push
dec
enter
lcall
jae
in
into
rclb
cld
out
std
jmp
mov
aam
repz
loopne
and
xchg
inc
xchg
add
in
fwait
lcall
add
jge
push
xchg
push
ljmp
lcall
mov
push
adc
rcrl
out
xchg
or
dec
push
and
mov
stos
jmp
lret
repz
mov
mov
cmp
and
xchg
xlat
pop
cld
in
dec
faddl
cmp
and
testb
mov
stos
pop
test
jmp
fdivrp
fldl
mov
xchg
sbb
fidivl
fidivs
outsb
jnp
popa
clc
push
sbb
mov
out
sbb
jg
call
or
test
fdivrs
xor
sbb
cmp
in
mov
mov
shll
fistl
sub
in
loop
add
mov
jmp
in
inc
jle
shll
pusha
inc
mov
xchg
stos
mov
mov
sahf
fwait
pushl
cmp
mov
sbb
push
mov
dec
stos
pop
insl
mov
mov
push
push
jg
mov
stc
es
cmpsl
push
xor
test
stos
xchg
jmp
jns
mov
test
stc
enter
icebp
add
popa
aam
stc
jmp
and
decl
pop
lods
daa
mov
out
orb
mov
movnti
lret
push
orb
lock
add
xchg
rcrl
cs
pusha
test
cmc
cs
incl
test
inc
jg
nop
cwtl
adc
pop
movsl
cmpsl
xor
cmp
pop
ljmp
inc
cmpsb
mov
cmp
mov
sub
mov
data16
pop
sbb
or
decl
insb
in
dec
pop
adc
lods
pop
mov
xchg
inc
cli
push
pushf
data16
sub
jg
mov
adc
xchg
jmp
add
xchg
mov
cli
sbb
lods
mov
mov
test
repnz
incl
stos
and
sbb
rsqrtps
int
movsb
test
add
std
xor
je
lock
jmp
scas
ljmp
push
or
aas
adc
or
enter
daa
stos
and
lahf
xor
mov
imull
hlt
jmp
lods
mov
and
xchg
or
in
leave
or
cmpsb
ss
fistps
fildll
cmp
sbb
cmp
xchg
lahf
add
xor
xchg
jmp
and
inc
popf
lcall
into
outsl
out
xchg
pop
xchg
clc
test
aad
lret
pop
jae
jmp
mov
lahf
inc
xchg
jo
sarl
or
test
ljmp
add
pushf
xchg
rcrl
enter
arpl
scas
mov
call
addr16
dec
sbb
out
adc
ja
sbbb
xchg
ja
jno
scas
lcall
mov
sbb
addr16
pushf
ret
pusha
pop
push
ds
or
decl
bound
xchg
add
add
jmp
adc
inc
mov
fisubrl
decl
mov
xchg
dec
pop
or
mov
test
mov
fstp
icebp
inc
ret
cmp
xorl
mov
fistpll
js
std
push
mov
xchg
xlat
cmp
movsl
fcoml
rorb
or
cwtl
dec
pushl
push
jge
xor
mov
stos
sub
mov
sbb
cmp
jmp
pop
xchg
jle
aam
dec
lahf
nop
mov
adc
dec
fcmovu
mov
jno
push
lret
in
lock
outsb
repz
lcall
mov
sarb
popf
stos
ret
imull
cmc
xchg
clc
dec
push
push
arpl
ret
mov
ljmp
fadd
cmpsb
negl
fcoms
xor
in
dec
pop
stos
jmp
stc
mov
ret
and
int
shrl
lahf
mov
dec
inc
sub
add
add
decl
rclb
icebp
sub
mov
repnz
jo
and
sbb
stc
jnp
vcvtss2sd
repnz
xchg
push
leave
pop
xor
pop
xor
lcall
loopne
jae
dec
cmp
push
or
push
addl
and
push
test
jle
push
lods
cltd
fstl
sbb
or
clc
and
loop
pop
sbb
call
push
outsb
pop
out
jnp
shlb
xchg
cmpl
imul
lcall
mov
dec
dec
fcoms
call
jge
repz
sub
adc
inc
xor
mov
ljmp
mov
orl
gs
mov
incl
out
in
loop
leave
call
test
out
xchg
cmp
insb
ljmp
hlt
cld
subb
xor
pop
inc
iret
push
pop
xchg
loopne
movswl
cld
fwait
mov
sub
jmp
inc
pushl
addr16
call
xchg
fisubrs
negb
lret
lods
cmp
lret
sar
aam
inc
dec
pop
imull
jmp
repz
or
mov
or
sub
cmpl
or
lret
sbb
mov
int3
pushf
push
ja
mov
scas
sbb
xor
icebp
jo
sarl
jno
add
xchg
ljmp
lcall
push
subl
cltd
pop
jge
sub
mov
jmp
dec
mov
in
cltd
notb
xchg
aas
aaa
hlt
pushf
fs
lahf
push
sub
loop
pop
adc
cld
call
add
outsl
iret
jb
fcmovb
mov
imul
pushl
lock
xor
and
cmc
ljmp
daa
in
ss
out
xchg
adc
mov
inc
mov
movsl
outsl
sub
ret
out
stos
into
push
jmp
jecxz
push
and
aad
sbb
mov
mov
mov
cmp
ljmp
push
adc
addl
mov
je
jge
lcall
pop
subl
int3
jmp
dec
mov
jo
pop
cld
mov
sub
in
test
push
lcall
das
ljmp
call
lret
loope
dec
jno
pop
popa
dec
cwtl
fldt
dec
mov
push
ss
mov
sub
mov
popa
jecxz
fdivs
push
lret
xchg
ss
xchg
insb
dec
decl
int
cwtl
pop
fiaddl
mov
popl
mov
inc
pop
cmc
sbb
std
stos
decl
sbb
sbb
nop
cmovl
push
test
fsubs
and
xlat
cmp
xchg
sub
jmp
or
xor
mov
outsb
mov
xchg
popa
mov
das
add
aas
je
xchg
add
cmp
lcall
jge
push
ficoml
mov
mov
cmp
inc
dec
jbe
xlat
adc
mov
jle
mov
gs
and
aaa
fmul
inc
in
mov
test
or
insl
dec
pop
call
fbstp
sub
dec
jns
ja
add
push
je
ljmp
enter
jo
pop
push
pop
jp
dec
pushf
arpl
shl
enter
lcall
push
push
cmp
in
test
out
into
mov
adc
add
add
jle
push
dec
inc
sahf
cs
inc
f2xm1
cltd
dec
pop
faddl
jno
adc
into
jbe
cmp
movsl
shrb
ror
push
incl
lret
sbbb
ret
ja
inc
imul
add
int
cmpsb
add
xchg
or
lcall
sbb
inc
jmp
xor
jno
pop
add
lcall
out
dec
lahf
adc
outsb
addr16
outsb
dec
loope
xrstor
fldenv
lock
clc
decl
sub
cmpsl
dec
sub
ret
cmp
xchg
lods
push
jo
shrb
pop
ljmp
stos
xchg
mov
test
mov
rclb
inc
mov
dec
mov
add
xchg
dec
nop
inc
cmp
decl
and
rcr
aam
negb
jo
xor
sub
push
mov
sub
pop
mov
pop
lea
pop
dec
jp
subb
aam
and
aas
lea
imull
push
cmp
inc
inc
lea
mov
cwtl
sub
ljmp
sbb
sbb
ljmp
jne
pop
pop
dec
jmp
mov
cmp
std
jmp
mov
std
dec
fdivr
mul
cmp
in
not
mull
mov
mov
dec
add
call
mov
jmp
xor
shrd
mov
cld
inc
jp
lcall
adc
sub
mov
or
int3
setle
jo
imul
shr
ja
outsb
jp
incl
ficompl
enter
mov
loopne
cld
pop
shll
pop
lahf
pop
pushl
scas
adc
call
adc
shll
bound
push
jg
lahf
fsubrp
fcmovnbe
cmp
pop
ret
decl
into
jp
cmpsb
out
out
or
cmp
jne
cmp
xchg
dec
cld
call
sbb
mov
mov
aad
dec
jecxz
pushf
inc
pop
ljmp
bound
mov
xchg
and
sub
pop
gs
mov
inc
ljmp
dec
loope
jnp
mov
mov
imul
jmp
mov
inc
loop
xchg
and
call
sub
cmp
xor
push
or
mov
lcall
mov
jno
inc
and
cmp
in
mov
stc
xchg
decl
inc
or
xlat
push
inc
cmp
push
mov
pop
shr
fsubs
mov
out
int
fistpll
mov
js
jp
movsb
dec
int3
daa
sahf
xchg
push
popa
add
cmp
dec
dec
and
ljmp
xchg
mov
scas
push
or
hlt
test
push
out
push
xor
ljmp
mov
pop
mov
jecxz
call
pop
out
push
mov
add
fistps
repnz
clc
xchg
sub
and
fidivl
lcall
mov
push
or
lods
outsb
and
jle
pop
adc
in
les
lret
call
adc
xor
repz
pop
int3
std
in
sarl
sarb
lahf
inc
ds
push
mov
hlt
xor
adc
mull
xor
ljmp
pop
btc
std
add
mov
dec
fwait
xor
jns
loop
outsl
in
push
rorb
fldt
pop
ss
decl
shlb
push
mov
loop
arpl
iret
mov
pop
scas
sahf
cwtl
cs
xchg
push
pushl
ret
push
xchg
cmpsl
and
mov
out
mov
paddb
iret
aad
inc
sbb
ljmp
jp
or
mov
sbb
pop
movsl
adc
jmp
jecxz
test
sub
pushl
in
add
insl
add
in
xorl
aaa
mov
dec
push
xor
icebp
lcall
push
mov
call
ss
xor
jae
fstps
add
lcall
xchg
lahf
mov
jo
loop
cli
xor
xchg
es
ret
add
ljmp
pusha
scas
xor
sbb
ja
aaa
dec
not
sub
or
jg
sbb
fdivs
pop
std
xchg
push
fs
ljmp
jg
enter
subb
mov
cmpsb
add
fisubs
mov
popa
lcall
jae
push
add
cmp
fistl
mov
sbb
lock
mov
cmp
fstps
push
stos
pop
sub
sbb
push
andb
das
outsl
pop
clc
in
and
decl
adc
jmp
cmp
hlt
out
fwait
inc
and
cmp
mov
push
out
aas
push
push
xor
push
stos
ljmp
push
in
test
lahf
jmp
fsubs
dec
push
mov
in
jmp
mov
xor
sub
addr16
push
outsb
ja
sub
icebp
das
xor
pushl
or
pop
dec
hlt
sbb
add
insl
negl
lea
sti
lods
cmpl
jmp
cmp
cmpl
mov
cmp
test
cmpsl
clc
pop
pushl
test
dec
dec
sbb
push
jns
rorl
adc
jns
leave
inc
sqrtps
incl
filds
test
nop
and
sub
in
and
out
jo
addb
call
push
jo
mov
es
in
movsl
cmp
pop
xchg
divl
fwait
dec
inc
pushl
cmp
fstpt
clc
xchg
inc
jmp
cld
mov
push
push
outsl
daa
add
ljmp
xchg
loop
push
std
icebp
loopne
sub
enter
push
test
imul
ljmp
add
xor
hlt
dec
sub
mov
add
repnz
movhps
jmp
std
xchg
scas
dec
fdiv
je
and
out
push
rol
sti
iret
cltd
jle
sahf
gs
inc
mov
push
adc
pop
sub
mov
lods
hlt
jnp
test
std
dec
sahf
mov
sbb
add
outsb
sub
pop
inc
filds
ljmp
fidivrl
lods
test
add
int3
data16
xchg
cmpb
xchg
incl
xchg
cmpsb
sbb
mov
add
push
popf
mov
sbb
fiaddl
ret
push
out
mov
mov
pop
imul
adc
insb
and
pop
cmp
aaa
cld
outsl
inc
adc
lret
mov
movsb
mov
clc
rclb
pop
cmp
push
pusha
ljmp
lock
call
and
in
cld
dec
adc
arpl
cld
stos
mov
push
cmp
fs
scas
mov
sbb
lods
fs
incl
xchg
pop
dec
sub
push
xchg
out
add
dec
xor
dec
mov
inc
cld
add
jmp
xchg
push
fs
fists
add
in
and
stos
xchg
jo
insl
rcll
jmp
xor
mov
sahf
jae
xchg
cmp
mov
cmp
mov
into
out
hlt
fisubl
incl
adc
js
mov
ffreep
cmpsb
xor
pop
sub
pop
mov
ss
ljmp
cmpsb
jge
pop
cmp
jnp
pop
or
call
lea
decl
mov
test
add
test
push
rol
mov
push
ret
push
add
stc
es
hlt
fnstenv
repz
pop
cli
mov
in
jp
mov
add
push
bound
mov
decl
inc
jg
dec
xor
popf
daa
or
pop
add
jg
lret
imul
mov
clc
add
inc
loop
mov
mov
incl
xchg
pop
sbb
xlat
mov
int3
dec
mov
dec
addl
adc
dec
dec
mov
bound
int
jle
pop
adc
or
call
pushf
imul
xor
incl
shl
ja
cmp
mov
and
enter
and
fistpl
sbb
jg
call
dec
mul
test
push
ficomps
aad
pusha
shlb
xchg
mov
inc
mov
stos
lret
inc
push
dec
xor
les
pop
aad
cli
or
stos
call
push
adc
data16
push
sti
and
or
push
orb
ljmp
adc
int
xor
mov
cli
sub
fldenv
lcall
ljmp
cli
inc
mov
sbb
cmp
xchg
enter
addb
jnp
lret
jg
call
xor
aam
and
sahf
inc
cmp
mov
aad
mov
call
repnz
add
jp
in
loop
sub
mov
mov
and
pushl
ss
adc
inc
pop
mov
sbb
push
jns
in
mov
decl
repnz
jmp
mov
push
popa
sub
aam
sbb
pop
cld
shrb
lcall
xchg
int3
ss
xchg
add
xlat
push
ja
testl
in
xor
mov
mov
call
std
and
mov
je
in
xor
andb
ds
ret
loope
pop
ret
pop
loope
sbb
lahf
xchg
jo
sti
call
iret
add
fcomps
int3
rcrl
ja
lcall
and
fiaddl
sbb
mov
adc
mov
jmp
mov
jp
out
xchg
pop
inc
and
loopne
lea
loop
mov
cmp
add
jmp
inc
jp
ror
or
lds
push
cmp
movsl
addr16
pushl
cmc
xor
cs
xchg
lret
cmp
sub
call
sub
add
inc
or
inc
jne
stos
int3
cwtl
mov
jno
les
dec
test
pop
lods
shl
sti
jmp
mov
dec
movsl
inc
ljmp
mov
xchg
lods
push
sub
fcompl
xchg
or
decl
or
mov
ret
sbb
and
cmp
jp
inc
pop
js
es
pop
push
xor
aaa
in
jne
adc
push
adc
call
dec
sub
cs
dec
inc
scas
jg
cmp
and
fs
call
or
xor
inc
fisubs
cmp
jmp
imul
jne
js
aaa
jb
loop
or
push
fcomip
mov
call
aaa
or
mov
inc
test
fdivs
std
pop
shrl
sti
inc
cwtl
push
jmp
mov
mov
jg
leave
shll
jle
pop
stos
cmp
cs
rcrb
mov
push
pop
mov
data16
call
scas
fsubl
mov
cmp
lahf
bound
shlb
cmp
xchg
jl
jmp
and
sbb
fs
mov
sbb
pop
cwtl
lods
add
mov
xor
loopne
cmp
cmp
push
mov
nop
xor
es
push
inc
repz
sbb
int3
mov
mov
jne
test
out
mov
ret
test
int3
mov
cmp
cmc
and
push
popa
sbb
fisubrl
or
push
ljmp
movsl
icebp
cmc
call
js
cmp
cmp
aad
das
test
lcall
or
mov
pop
shrl
ret
lods
dec
inc
xchg
stos
pop
add
inc
enter
cmp
pusha
pusha
je
dec
mov
sahf
mov
icebp
mov
jp
sbb
mov
sub
xor
xchg
inc
ss
out
inc
imul
lods
mov
push
sub
test
jle
jne
jmp
mov
decb
xor
call
push
outsl
mov
cmp
xor
sbbl
shrb
fnstsw
xchg
cmovae
cmc
in
icebp
push
or
jns
pushl
and
in
pop
add
mov
jmp
rep
and
leave
test
outsl
add
dec
push
jae
cmc
ljmp
sub
ret
sbbb
inc
dec
or
rcr
aaa
cld
call
jb
push
push
jecxz
xchg
mov
xor
and
incl
arpl
hlt
sub
mov
pusha
sahf
fldt
xchg
mov
lods
leave
jmp
push
gs
decl
inc
cld
dec
mov
icebp
test
xor
jns
cmp
addl
icebp
adc
jmp
cmp
mov
mov
leave
test
jl
pushf
push
cltd
rorb
incl
and
pusha
loopne
fists
sbb
insb
mov
ret
pop
lret
jp
pop
lret
daa
ljmp
iret
std
jbe
das
sbb
cs
fsub
in
or
cmc
lock
mov
rol
xor
lret
div
jo
push
movsl
mov
mov
cmp
add
fmulp
test
imul
jo
jnp
inc
ror
push
ljmp
in
fidivrl
and
lcall
sar
inc
mov
jmp
dec
repnz
fcoml
cld
loop
call
insl
in
fcoms
xorl
aad
js
hlt
sbb
xor
js
out
imul
dec
jb
jge
cmp
cli
cmp
clc
out
mov
andps
jecxz
pushl
and
cwtl
push
jg
jne
jb
mov
enter
jno
clc
xor
and
pop
loopne
mov
shll
xlat
dec
ret
gs
push
outsl
cli
call
sub
clc
shl
xchg
xchg
cmc
dec
mov
fnstenv
dec
add
int3
and
push
pusha
adc
test
das
ds
outsb
add
dec
dec
imul
or
in
outsb
or
push
pop
ds
into
cmp
xor
ja
stos
push
cld
pop
ljmp
popa
inc
rorb
mov
sub
dec
and
push
push
jo
cmp
cmp
mov
mov
jnp
mov
cmp
das
or
movb
inc
jle
lret
or
push
shlb
mov
or
lcall
push
adc
push
push
bound
jb
mov
jo
and
add
shl
rorb
mov
push
std
cmp
pushf
int3
adc
fcomip
decl
jg
push
mov
ljmp
push
es
mov
mov
adc
shlb
xchg
push
call
iret
int3
fucom
adc
adc
sbb
lcall
mov
in
scas
xchg
mov
lahf
out
mov
into
nop
enter
je
mov
jge
ret
repnz
add
fwait
or
inc
test
add
idivb
pop
lcall
pop
loopne
jmp
mov
sub
cmp
xchg
fildl
lahf
pushl
std
stos
sub
enter
cmp
stc
les
rcll
decl
je
lahf
push
enter
das
cmpsl
push
js
mov
cld
and
popa
loope
xchg
and
fistpll
cmp
adc
fsubrs
int
sbb
dec
sahf
icebp
push
in
lcall
ljmp
lcall
inc
insl
cmp
int3
repz
dec
mov
inc
pushl
hlt
mov
inc
xor
xor
addr16
xchg
pop
int
inc
outsb
stos
daa
sar
lcall
ror
xor
dec
pop
push
xchg
cmp
mov
lods
cmp
test
sub
decl
lcall
mov
mov
xchg
enter
lds
fcmovne
pop
adc
incl
cmpsl
mov
hlt
xchg
or
push
add
cwtl
mov
ljmp
add
sub
pop
xor
data16
lods
in
notb
push
enter
xchg
les
scas
cli
call
and
ret
mov
xor
xor
test
sub
adc
fsubl
and
clc
incl
call
ret
mov
fisttpl
and
mov
ljmp
push
movsb
out
sub
repz
cltd
push
repz
cmp
sub
adcl
pushl
ret
push
test
xor
ja
cli
xlat
ds
jp
lahf
cmp
inc
les
mov
xlat
mov
sbb
pop
iret
jbe
rorb
hlt
cmpsl
push
mov
decl
cmpsl
movsb
add
and
push
and
stc
xchg
xor
xchg
das
xchg
mov
or
aaa
call
dec
ret
jns
add
jp
xchg
daa
ja
loopne
xor
mov
ljmp
sub
leave
dec
fistps
loop
arpl
dec
cwtl
std
add
movzwl
pop
lods
ljmp
jmp
aaa
xor
or
sbb
sbb
mov
fcomip
fcom
jg
rolb
mov
shrb
push
inc
lock
xchg
dec
mov
inc
add
insb
lahf
jae
loopne
push
out
aad
fmuls
and
addl
fisubs
mov
bt
lahf
mov
negb
jg
ds
loop
call
pop
movb
push
aaa
dec
or
in
outsb
subb
fsubrs
xchg
xchg
stos
mov
call
loopne
pop
outsl
test
push
decb
mov
or
sbb
or
lea
sbb
xor
xchg
lea
fistl
mov
mov
cmc
aad
clc
insb
cmp
test
mov
loope
aam
push
imul
cmp
push
dec
fwait
and
sub
jecxz
xor
push
loop
bound
incl
jecxz
mov
outsb
lahf
xor
inc
insl
sub
cmp
jmp
mov
sbb
rcll
inc
add
fs
mov
add
add
outsb
jnp
push
dec
add
push
add
pop
mov
sbb
inc
and
dec
pop
push
cmp
mov
dec
aaa
push
pop
dec
add
fstpt
mov
adc
dec
xchg
jne
push
loop
push
inc
mov
fidivl
push
mov
push
xchg
dec
xor
cmpxchg
out
cs
repnz
mov
pop
add
inc
push
out
jns
imul
aas
inc
ss
inc
orb
leave
jnp
inc
mov
out
dec
mov
inc
adc
inc
push
push
insl
aad
loopne
sbb
push
inc
sti
xchg
fidivl
push
pop
lcall
mov
push
mov
xor
push
bound
scas
aaa
sub
cmp
pop
in
mov
aaa
push
jo
lcall
mov
ret
fucomip
sbb
dec
out
repnz
inc
out
jo
cs
cs
xchg
adc
jbe
fidivrs
inc
into
inc
push
inc
push
inc
mov
ja
mov
xor
push
iret
inc
pop
mov
push
out
sub
dec
lcall
adc
dec
push
inc
mov
mov
scas
adc
jbe
push
sbb
add
mov
or
push
adc
pop
dec
mov
in
loopne
sbb
push
push
or
les
dec
dec
daa
adc
mov
mov
push
add
enter
xor
addl
inc
jnp
cmp
add
push
and
fs
fldl
add
lea
out
xor
incl
ud0
sahf
sbb
xor
add
insb
shlb
add
out
push
notb
cld
pop
push
pushf
pop
jle
pop
lock
loopne
aas
rolb
dec
pop
add
pop
push
cwtl
nop
jg
add
push
or
sbb
les
and
and
shlb
mov
add
jg
fldcw
add
push
out
ficompl
lahf
cmpsl
out
cmp
ss
cmp
add
pop
clc
paddb
test
fsin
aas
pop
cs
pop
add
mov
cmpsl
addr16
mov
push
pop
lock
add
pushl
mov
fnstsw
imul
add
push
in
cmp
out
jle
rolb
jl
js
pusha
inc
xor
mov
mov
lock
sahf
push
xor
adc
cltd
pop
ja
inc
fidivl
jg
add
xchg
repz
decl
loop
jne
xchg
push
jno
xchg
int
repz
cmp
jbe
lret
comiss
sub
fimuls
outsb
daa
add
cmp
stos
aaa
pop
std
clc
push
and
aas
rcrb
pop
out
insl
outsl
mov
pop
push
inc
pop
outsl
add
clc
popl
adc
pop
jbe
add
jns
fstps
sbb
mov
jnp
inc
nopl
ds
push
xor
out
pushf
xlat
pop
in
les
test
xchg
inc
aas
nopl
pop
push
add
push
mov
and
pop
cld
push
cmp
fcoml
aaa
pop
xor
and
lock
cmp
dec
add
std
or
data16
insb
push
sbb
push
sub
inc
add
add
inc
shll
xor
out
enter
xor
push
sbb
test
test
add
push
loopne
push
xor
insb
mov
js
adc
sbb
cmp
sbb
insl
mov
pop
or
test
push
shl
xlat
insb
pop
jge
or
adc
push
add
sbb
push
fwait
stos
xor
dec
fmull
inc
pop
movsl
jbe
pop
es
xchg
add
testl
lods
pop
les
cmp
pop
xchg
sbb
es
add
mov
add
imul
add
push
xchg
or
movsb
adc
ret
fdecstp
ds
push
ret
add
xor
lods
jl
aas
sbb
add
subb
or
lock
sbb
push
int
mov
sbb
sbb
cld
aas
jl,pt
cmp
push
sbb
test
insb
iret
data16
mov
rcrb
and
adc
xchg
int
or
cmp
aas
xor
and
pop
es
inc
mov
jnp
push
popw
xchg
jnp
jbe
cmpsb
push
pop
clc
pop
pop
pop
insl
mov
mov
aad
out
addr16
xchg
and
push
mov
add
pop
pandn
in
bswap
push
shrb
cmp
out
add
mov
and
fs
subb
add
push
fcomp
imulb
xor
adc
cs
ds
mov
fists
aaa
adc
fisttpl
push
pop
js
and
jle
add
jmp
or
add
cmp
xorb
push
push
aas
faddl
insl
rolb
repnz
pop
jne
push
rol
add
xchg
aas
pop
cmpsl
add
xchg
and
leave
seta
add
push
jnp
addb
out
in
adc
add
and
add
out
add
sarb
fs
mov
cmp
subl
mov
fbstp
das
cmp
and
fsubrp
scas
mov
es
xor
mulb
adc
and
ja
mov
or
dec
push
dec
push
mov
andl
dec
push
push
daa
outsl
enter
xor
daa
xchg
push
divl
lahf
dec
daa
dec
addl
xor
inc
daa
mov
xlat
mov
adc
clc
push
xchg
xlat
mov
lahf
incl
sub
cmp
xchg
jns
xor
cmp
xchg
mov
xor
and
daa
fidivrl
movsl
daa
dec
sub
push
aas
push
xor
mov
ret
xlat
dec
cmp
cmp
jns
jae
in
jbe
and
push
es
imul
out
and
push
and
and
push
pop
cmp
cmp
jmp
dec
pop
idivl
pop
push
cmp
inc
ss
xlat
push
cmp
insl
out
lret
push
and
push
pop
xchg
loope
mov
or
adc
xsavec
loop
daa
push
xbegin
enter
mov
jb
pop
push
xchg
adc
sbb
in
out
xchg
inc
inc
inc
or
mov
mov
dec
push
pop
es
lods
insb
movsb
cld
daa
inc
aad
push
push
dec
in
jns
dec
pop
daa
mov
out
in
jns
enter
cmp
xchg
inc
add
add
clc
daa
add
daa
add
lods
or
pop
repz
or
inc
cmp
dec
pushf
es
add
popa
and
fistpll
shrb
inc
arpl
daa
ds
pushf
cmp
pop
shll
xor
arpl
cmp
cwtl
roll
add
lahf
push
rolb
in
cmp
out
fs
fisttpl
fcoms
daa
push
cltd
cmp
xor
daa
mov
jbe
daa
dec
lret
ljmp
inc
inc
es
daa
cmp
mov
fwait
jle
xor
popa
mov
fucomip
repz
xor
xchg
push
sbb
rcll
adc
fbstp
jo
ret
add
inc
inc
sar
or
or
jns
stos
movsb
sub
push
repz
daa
insl
in
jb
movsb
arpl
cmpl
push
ss
mov
frstor
es
bound
stc
fchs
inc
in
push
inc
sub
xchg
out
push
daa
xor
jmp
mov
insb
adc
mov
stos
inc
push
shlb
in
xor
push
inc
mov
and
js
shrl
daa
fsubrs
sub
pop
ss
cmp
jmp
dec
push
mov
in
adc
xor
dec
xchg
daa
sub
stos
inc
push
insb
xor
ja
imul
jmp
pop
pushf
icebp
mov
mov
test
or
sub
cmp
jle
adc
cltd
xchg
call
xchg
sbb
clc
cmp
sahf
lods
daa
jl
daa
fs
xor
daa
push
jl
gs
clc
or
sbb
xchg
es
mov
daa
dec
xor
dec
xor
jbe
insl
daa
dec
daa
dec
daa
dec
jae
mov
daa
clc
dec
je
dec
sarb
addr16
cmp
adcl
rorl
dec
out
aas
sbb
cmovle
lahf
mov
cmp
cltd
xchg
movsb
loope
push
mov
gs
out
subl
nop
repz
orl
movsb
aaa
mov
and
dec
cmpsl
out
sbb
mov
add
mov
push
mov
jns
ja
inc
daa
mov
dec
mov
and
push
dec
push
inc
sbb
pop
adc
cmp
sub
movb
xor
pusha
cmp
pop
jmp
je
inc
cmp
push
pushf
mov
pop
enter
rcr
insl
cmp
aaa
into
aaa
rol
int3
shll
and
add
gs
sub
aaa
sub
loopne
out
lret
insl
mov
adc
rorb
and
mov
in
testb
fnsave
push
and
pop
dec
jmp
pusha
and
xchg
add
aad
jns
and
push
lahf
push
sub
adc
jne
mov
shrb
sahf
pop
outsb
addr16
mov
pop
xchg
mov
pop
xor
add
xchg
push
in
js
xor
pop
mov
lock
fidivs
dec
add
jnp
xor
or
fistl
push
into
or
insb
stc
cs
xor
add
dec
and
xor
out
xchg
lcall
jnp
out
push
xor
cwtd
int3
jns
jns
ja
push
cwtd
int3
jmp
xor
cwtd
int3
dec
xor
lods
out
push
cwtd
int3
xlat
icebp
loopne
repz
push
xor
adc
out
sbb
push
lods
push
jo
pop
jo
inc
push
cs
daa
pop
lock
push
cs
ljmp
sbbb
jo
push
push
cs
ja
cmp
push
cs
push
cs
outsb
loopne
cmp
inc
push
cs
push
pushf
loopne
push
loope,pn
add
int3
decl
cmp
cs
test
xor
push
push
cs
lcall
add
sbbb
push
push
cs
incl
orb
ja
or
test
or
push
call
xor
add
push
stc
cmp
ffree
in
sub
push
cmp
cs
fsubrl
push
mov
dec
inc
cmp
push
daa
pop
jno
push
jno,pn
cs
icebp
dec
jo
push
cs
lcall
push
cs
push
cs
jl
jo
rcrl
add
adc
or
push
cs
push
sub
or
push
call
push
cs
jns
mov
cmp
push
data16
addr16
in
popa
insb
cs
cmp
decl
push
cs
push
cs
pushl
arpl
sub
fmull
cs
push
fmull
push
mov
cs
or
mov
ljmp
push
push
mov
push
cs
call
adc
or
cs
push
cs
jmp
in
into
push
jns
cs
dec
xchg
orb
sbb
data16
add
dec
add
push
push
add
cmp
ljmp
add
xchg
xchg
xchg
enter
addb
xchg
mov
add
mov
fsubr
in
into
test
add
add
out
icebp
add
push
fucomp
add
fcmovu
xlat
out
ficoml
insl
popf
jnp
add
sbb
add
and
push
in
add
insl
mov
push
add
popl
adc
and
in
insb
add
add
or
push
mov
or
pop
add
pop
add
add
aas
outsl
sbb
xor
out
adc
xlat
das
cmp
add
imul
inc
add
aaa
imul
data16
in
fcmovnu
jnp
ljmp
add
sbb
dec
lea
das
fistl
pusha
int
pop
jno
add
mov
fadds
lea
test
adc
add
push
popa
fisubs
stos
ss
divl
lods
addl
mov
fsubrs
insl
nop
fcomps
and
cmp
pop
inc
jo
cmpl
mov
nop
hlt
out
mov
movsl
idivb
jge
imul
cmp
pop
cmpb
sbb
sbb
insb
insl
fstpt
cmpl
jg
pusha
lds
jg
xchg
jg
sub
or
jo
dec
add
loopne
or
loop
mov
in
sbb
adc
enter
pop
jnp
inc
cmp
not
fidivrs
mov
loop
sbb
or
loop
ficompl
xor
cmp
xor
mov
int
cmpl
fldl
sub
sub
xchg
inc
outsl
in
lods
fldl
inc
pop
inc
aas
ficompl
imul
aas
inc
adc
fidivrs
inc
fisttps
adc
fiaddl
sbb
dec
int
and
nop
out
push
push
and
pop
add
adc
add
sbb
nop
add
fidivl
mov
rdtsc
cmp
arpl
cmp
outsl
in
inc
cmp
add
inc
cmp
or
out
testb
int3
adc
add
mov
xor
mov
icebp
loope
push
pop
cmp
lods
jecxz
jo
pop
cmp
adcb
and
sbb
push
xchg
cmp
jecxz
jae
mov
add
inc
sbb
fimull
icebp
cmp
xor
mov
fimuls
pop
in
imul
adc
add
sbbb
loop
mov
mov
aas
push
xlat
ficoms
jne
xchg
out
add
push
xlat
dec
add
fwait
jl
repnz
adc
dec
in
dec
fidivrs
cmp
lods
icebp
or
xchg
insl
aas
push
cmp
xor
nop
mov
add
mov
mov
cmp
mov
ficomps
mov
mov
fisubs
jp
int
adc
dec
cmpsl
in
dec
add
add
pop
sbb
out
mov
xchg
js
add
jecxz
lods
jecxz
pop
rcrb
loope
cmp
jnp
imul
sbbl
addb
out
dec
add
xchg
push
inc
into
ss
jbe
cmp
adc
xor
inc
lock
cmp
mov
xlat
pop
or
ss
or
inc
loope
mov
out
xor
inc
jp
jbe
pop
add
xor
push
or
push
cmp
pop
aas
xor
jecxz
pop
xorb
xchg
cmp
xlat
orl
fldl
mov
lods
xor
add
lods
jg
jg
mov
out
iret
inc
push
jg
mov
xlat
pop
cli
test
pop
adc
out
fcomi
xor
icebp
mov
xlat
mov
xor
jl
cmpsl
cmpl
push
xorb
pop
lods
adc
lods
dec
push
aam
into
add
inc
cs
adc
jo
pop
and
or
outsb
test
or
mov
add
inc
add
cmpl
and
loopew
cmp
fidivrs
pop
or
and
adc
inc
das
lods
dec
fildll
adc
insl
cmp
filds
nop
add
divl
aas
jge
insl
fcmovnu
or
insb
insl
insl
insb
jno
mov
push
outsb
pop
jo
push
out
sbb
or
sub
int
push
sub
jnp
cmp
xchg
nop
add
adc
popa
inc
adc
inc
cmp
dec
out
out
or
push
and
inc
or
das
inc
mov
aaa
and
adc
bound
leave
xchg
and
push
and
aas
sub
sbb
push
ficomps
aaa
inc
adc
mov
mov
inc
adc
inc
imul
sub
cmpl
adc
jg
or
pop
jnp
cmp
shlb
in
xor
mov
insb
or
mov
inc
and
adc
lea
jg
mov
inc
incl
enter
lret
jo
aam
lods
or
test
sub
inc
add
adc
dec
gs
add
fists
push
popa
add
jae
add
imul
fiadds
inc
or
add
incl
sti
add
inc
push
insb
out
inc
add
or
mov
sub
pop
jg
xor
add
push
inc
mulb
outsl
mov
push
insb
push
popa
and
adc
out
out
popf
cmp
data16
insb
loop
add
cmp
jne
push
and
outsl
dec
and
inc
in
fmull
dec
pop
mov
mov
push
bound
lock
xchg
cmp
outsl
jbe
fcomi
mov
bound
jae
push
mov
push
bound
repnz
jl
xchg
ret
jne
sbb
popa
dec
rcrl
jne
nop
or
ficoml
push
out
int
fs
jae
sbb
and
imull
sahf
bound
and
mov
imul
jo
je
loopne
ds
push
xor
outsb
cmp
push
ja
addr16
push
sbbb
jb
ja
addr16
lahf
das
or
out
mov
inc
repnz
repz
dec
cmpsb
insb
ucomiss
mov
inc
xor
popa
mov
mov
fistl
cmp
inc
pop
icebp
or
dec
fldt
push
push
js
movaps
mov
pop
jb
fst
cs
or
pop
pop
add
xchg
mov
data16
or
inc
cmp
sbb
push
lods
pop
jmp
addr16
pop
cmp
clc
push
jne
or
inc
mov
push
rorl
jb
sbb
cmp
cs
xor
outsl
aas
daa
add
mov
mov
mov
jne
jo
je
into
mov
or
out
bound
jb
mov
xchg
popa
add
mov
dec
inc
es
outsb
hlt
pop
sbb
mov
jbe
aas
push
add
insl
lahf
jae
sarl
adc
out
add
cmpsl
ss
dec
ret
jbe,pt
fiadds
mov
pusha
jb
insb
out
inc
fisubrl
cmpsb
mov
push
push
or
rolb
mov
arpl
pop
pop
sbb
push
das
or
xor
jo
dec
or
les
ljmp
out
jmp
push
imul
pop
push
pop
push
push
cmp
daa
outsb
pop
aad
ja
inc
xchg
or
das
mov
ja
or
das
adc
sbb
or
cmp
fidivs
jno
adc
mov
imul
ret
popa
or
stos
stos
push
adc
push
xor
and
add
push
or
out
fwait
mov
push
iret
or
xchg
gs
push
xor
comiss
or
xlat
out
or
daa
gs
or
jbe
out
bound
xchg
mov
idivb
sub
add
sti
push
scas
aam
push
adc
int
push
jg
jnp
sbb
mov
adc
mov
lss
mov
or
dec
dec
dec
xor
lock
cmp
push
lret
scas
insl
mov
lock
sub
xor
xchg
mov
out
aad
cmp
packssdw
inc
fiadds
jp
and
jne
sub
add
xchg
mov
pushf
fisubs
jmp
xchg
cs
add
push
popa
dec
jnp
jbe
pop
push
es
addr16
mov
imul
pop
and
and
mov
aas
inc
cs
mull
or
out
and
sarl
ja
push
xor
dec
adc
rol
xor
xchg
add
push
rcrb
adc
das
stos
jo
mov
fbstp
je
sbb
jno
inc
stos
cmp
dec
mov
or
je
sub
inc
or
sub
outsl
daa
push
sbb
mov
sbb
lods
pop
push
mov
cmp
lods
sbb
jae
aas
sbb
xor
add
stos
cmp
les
pop
sub
dec
mov
mov
and
push
nop
cwtl
xor
pop
wrmsr
and
add
mov
dec
cmp
adc
jns
ja
jo
or
pop
pop
jge
lret
arpl
roll
inc
jb
stos
mov
sbb
out
hlt
sbb
xchg
mov
mov
xor
popa
iret
div
dec
lea
sub
arpl
loop
push
xchg
daa
lods
out
insl
jb
jnp
push
scas
rcll
add
pop
mov
jle
pusha
inc
mov
push
inc
sbb
adc
mov
jnp
and
adc
jmp
aam
add
adc
pop
popf
xor
and
les
outsb
insb
mov
or
loop
jg
sub
lea
push
dec
stos
push
sbb
jo
add
cmp
mov
fadd
pop
xor
pop
mov
pop
stos
inc
push
lcall
pop
sub
loop
xor
pop
inc
jne
sub
lret
loopne
or
push
mov
inc
xlat
dec
nopl
outsl
lea
pop
fs
ret
dec
imull
adc
and
outsb
mov
sarl
mov
sbb
movlps
mov
insl
dec
sub
push
ss
test
jae
ljmp
jns
fists
xlat
add
inc
xchg
inc
push
push
pop
outsl
rclb
stos
or
cs
add
dec
mov
loopne
and
outsl
push
addr16
adc
add
push
imul
jp
pusha
lds
fnstenv
pop
les
ret
pop
push
and
les
dec
je
fbstp
cmp
and
push
add
sbb
js
inc
or
aam
jecxz
add
lods
push
push
test
dec
pop
mov
ja
fnsave
sbb
push
aas
push
in
les
outsl
inc
sbb
and
adc
jae
icebp
push
dec
daa
and
in
mov
xchg
adc
fwait
sub
mov
jo
xchg
cmp
icebp
ficomps
push
xchg
sbb
and
popa
xor
xor
outsl
jg
jnp
inc
mov
addr16
inc
addb
push
and
add
cmp
xor
push
scas
add
sbb
dec
dec
das
xchg
out
sti
shlb
outsl
sub
sub
sub
xchg
adc
addr16
aad
inc
scas
push
outsl
sbb
or
imul
mov
femms
sub
es
xchg
mov
add
push
mov
mov
push
aaa
cmp
inc
add
push
repz
mov
sbb
cmp
mov
sub
imull
pop
mov
inc
pop
ret
add
dec
jae
add
and
ja
or
dec
adc
pusha
and
popa
mov
mov
inc
popa
or
jp
into
mov
push
and
addl
jo
adc
adc
jo
push
rolb
jbe
dec
pop
dec
jl
pop
cmpsb
push
sti
arpl
jg
mull
and
test
outsb
jo
jo
dec
push
add
xchg
or
cmp
sub
addr16
add
xchg
xlat
je
ss
jae
fwait
movb
inc
mov
mov
fdivl
and
lcall
pop
ja
sbb
push
out
xchg
push
dec
xor
inc
pop
sub
push
xchg
xchg
fwait
pop
loopne
cs
mov
iret
daa
push
mov
and
or
sbb
ja
stos
imul
outsl
ret
cmpsl
add
dec
das
adc
sub
dec
mov
push
inc
cli
sub
pusha
lea
cmpb
das
pop
cli
out
mov
push
jb
loop
dec
sbb
push
insb
inc
out
pop
jo
mov
sbb
out
mov
jb
mov
fiadds
cmp
das
test
xor
xlat
xor
fucom
gs
ret
mov
xor
jbe
ljmp
add
sub
cmp
test
lds
je
pop
jae
and
lea
iret
out
xor
xchg
push
pop
or
loop
or
pop
and
sbb
sbb
mov
add
pop
mov
aas
pop
adc
mov
inc
je
jne
xchg
jp
addb
pop
lods
shl
pop
push
movsl
inc
ja
inc
dec
inc
gs
lock
aas
orb
jae
out
sbb
push
mov
jb
outsl
stos
arpl
push
mov
jae
pop
test
ja
mov
iret
jnp
mov
or
dec
dec
scas
fcmove
sbb
pop
jmp
shrl
ret
mov
popa
pop
shll
inc
sub
mov
pop
mov
add
pop
bound
adc
adc
dec
or
lcall
out
sbb
in
mov
push
lcall
add
jo
mov
dec
dec
sti
pop
mov
pop
bound
jae
fs
xorl
int3
sbb
divl
xchg
push
shrl
out
outsl
mov
shrl
cmpsl
xor
sbb
sbb
rolb
and
pop
cmp
adc
ficompl
out
addr16
sbb
push
dec
pop
clc
mov
das
bound
loop
mov
cltd
je
sub
mov
push
fldt
mov
lahf
pop
je
push
adc
dec
mov
andl
push
and
mov
and
xchg
dec
mov
out
add
xchg
pusha
rcl
and
test
mov
xchg
pop
or
xchg
out
adc
and
pop
popa
adc
cmpsb
pop
pop
pop
mov
sub
jae
sub
daa
ficompl
jo
pop
scas
cmpsl
mov
push
adc
cmp
into
cwtl
inc
imul
imul
idivb
push
jb
adc
arpl
cmpsl
push
sub
pusha
push
out
mov
test
sub
xlat
push
pop
inc
adc
push
arpl
fisubrl
push
mov
fistl
sbbl
lods
mov
adc
arpl
sbb
movsl
or
stos
pop
jne
loopne
pop
andb
loope
daa
sahf
and
ja
mov
leave
addr16
adc
fldt
nop
push
add
mov
and
imul
adc
xor
shrl
aaa
push
mov
xstore-rng
cmpsl
xorb
pop
push
daa
jecxz
bound
xlat
jmp
aad
mov
xor
xor
mov
inc
or
mov
sbb
xorl
rolb
sbb
sub
push
not
scas
cmp
push
pop
push
add
fs
mov
in
idivb
pop
xchg
or
imul
scas
jp
loopne
insl
fcmovnb
aas
iret
inc
and
add
dec
cmp
push
inc
dec
push
gs
je
dec
pop
dec
push
add
add
pop
pop
mov
idivl
push
and
mov
add
lods
sarl
cs
scas
add
js
insb
orl
sbb
pop
je
pop
pop
or
sbb
subl
mov
test
inc
pop
jae
scas
pop
dec
mov
stos
and
fldl
subb
je
imul
jae
push
arpl
cmpl
jp
aam
sbb
xlat
jbe
add
gs
aaa
add
adc
adc
out
and
mov
sti
imul
aas
inc
arpl
jae
dec
movl
xchg
lcall
les
cmpsl
inc
pop
stos
lods
scas
xor
xchg
mov
jp
ret
testb
or
add
stos
imul
cwtl
push
fists
pop
pop
push
hlt
shll
add
inc
xchg
imul
xor
arpl
mov
jmp
jecxz
shll
adc
mov
jae
or
rclb
push
mov
add
jmp
sahf
jecxz
cmp
jge
sti
mov
and
inc
in
add
pop
cmpsl
xor
inc
xchg
insb
scas
pop
mov
lahf
cmp
sbb
sti
dec
mov
test
mov
mull
popf
inc
jnp
xorl
push
pop
rorb
mov
mov
leave
popa
int
jmp
cmp
cmpsl
mov
pop
xorl
cwtl
notl
iret
imul
call
adc
pop
push
ja
push
or
lea
cmpb
test
pop
shrl
push
mov
add
or
xchg
pop
jp
and
push
arpl
pop
lcall
or
xchg
mov
stos
stos
xor
xchg
jmp
or
or
sbb
scas
cmp
test
xlat
adc
lods
je
ret
push
incb
or
dec
sub
add
scas
sbb
loope
jbe
divl
loope
add
adc
dec
pop
leave
jno
sub
jae
fimuls
xor
leave
jo
pop
adc
jmp
xor
stos
or
stos
xor
pop
pop
and
add
xchg
outsl
push
sbb
and
push
imul
mov
xchg
mov
add
sbb
repz
out
scas
cmpsb
cwtl
jne
lahf
or
das
inc
sub
jecxz
scas
pop
push
pop
hlt
add
inc
mov
xchg
cltd
pop
das
mov
outsl
test
mov
add
scas
sub
orl
pop
ss
jns
outsb
je
scas
or
imul
aas
ret
push
outsb
or
mov
adc
fadd
fadd
inc
iret
and
xchg
ljmp
dec
cmp
xorb
repz
add
fwait
cmp
mov
add
fucomi
aas
stos
add
dec
imul
test
push
jp
popa
bound
push
sbb
gs
gs
push
je
insb
adc
lahf
iretw
je
adc
outsb
or
jb
outsl
ja
push
push
jns
pop
adc
inc
outsl
outsb
push
dec
pop
inc
insb
popa
jae
sub
push
push
dec
fidivs
fistl
sbb
dec
and
addr16
popa
outsb
je
cmpsl
mov
xchg
push
mov
jbe
adc
arpl
gs
cmp
inc
jb
jo
imul
xchg
jp
js
out
outsb
arpl
fisubrl
mov
insl
insl
inc
je
insb
push
adc
fstpt
outsl
jb
push
push
dec
popa
je
or
push
in
xor
fisttps
fisubs
pop
push
adcb
outsl
pop
popl
cmp
sti
xor
adc
push
je
repnz
pusha
mov
jb
sub
in
or
sbb
push
in
insb
insb
inc
push
dec
sub
cmp
mov
adc
outsb
jne
in
pop
mull
outsb
mov
int
insl
addr16
mov
sub
mov
adc
je
xchg
sbbl
addr16
adc
sub
mov
addr16
pop
mov
gs
sbb
push
dec
dec
lock
dec
adc
imul
imul
inc
je
xchg
shl
inc
dec
jne
cmpsb
jae
dec
pop
les
scas
inc
setl
cmp
inc
xchg
push
gs
dec
jo
pop
mov
push
in
push
insb
inc
imul
push
orb
push
bound
jno
pusha
rcr
outsl
inc
sub
outsb
ret
loopne
cmp
fimull
xor
and
push
ljmp
xchg
xchg
testl
push
mov
fstpl
add
ja
mov
xchg
push
fiaddl
cmp
or
dec
cmpsb
std
rcll
insl
bound
js
xor
outsb
sbb
adc
jo
jae
inc
push
imul
je
dec
sbb
add
inc
jne
sbb
pusha
outsb
dec
or
pop
fisubl
jo
inc
dec
outsb
adc
mov
imul
bound
into
push
fstpl
dec
push
popa
xchg
shrl
jbe
adc
jbe
xchg
sbb
inc
push
cmpsb
push
sub
and
loope
dec
fbld
movsl
mov
insb
add
outsl
mov
jecxz
dec
clc
push
adc
aaa
fcoml
push
or
shlb
in
sahf
push
inc
xor
dec
mov
add
push
sbb
out
gs
popa
sbb
xor
icebp
mov
xor
data16
aaa
sub
fdivrs
push
pop
push
jbe
add
push
mov
or
dec
arpl
or
imul
sahf
jle
mov
cmp
or
inc
test
popa
arpl
inc
enter
xchg
or
in
mov
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
daa
cmp
or
gs
xor
add
or
dec
fs
jno
adc
jae
add
adc
jns
or
push
out
cmpsb
pop
aaa
mov
sub
push
dec
dec
push
nop
pop
or
js
jae
fstp
mov
add
mov
mov
pop
cbtw
popa
mov
sbb
add
dec
popa
sub
or
mov
inc
loopne
call
mov
int3
mov
outsb
pop
add
xchg
je
adc
xor
imull
adc
jae
cmp
addr16
imul
push
mov
addr16
lods
adc
or
in
out
dec
and
mov
inc
push
aad
pop
pop
push
rclb
jne
mov
push
xlat
shll
push
inc
lock
or
adc
bound
adc
or
dec
mov
pop
inc
movsl
push
add
cmpsl
sbb
jo
unpckhps
nop
add
sbb
push
or
jno
jno
or
mov
xor
je
repz
pop
jo
fs
adc
add
pop
or
cmp
dec
jo
jb
sub
cmp
popa
imul
sbb
and
xchg
mov
mov
andb
add
subb
cmp
ss
jns
mov
jg
in
fistpl
test
ficoml
cmp
and
dec
jae
pop
inc
dec
and
sarb
and
fildl
mov
imul
lods
inc
inc
or
fadds
mov
in
in
pop
or
nop
pop
sbb
gs
inc
add
jb
fisubrl
dec
mov
or
add
adc
daa
pushf
imul
push
mov
fbld
out
jmp
pop
cmp
inc
insb
insb
outsl
ja
gs
ja
push
in
or
dec
jbe
aaa
mov
pushl
pop
dec
insl
gs
test
gs
push
add
gs
push
add
rcl
xchg
dec
dec
inc
xor
or
rolb
jne
pop
and
inc
or
sub
pop
or
roll
pushf
or
enter
or
dec
pop
push
jb
sub
jecxz
xor
lret
adc
insl
bound
push
mov
ret
popf
pop
cmp
or
pushf
or
add
pop
xchg
andl
aaa
add
mov
adc
inc
cli
jne
push
gs
movl
bound
dec
ljmp
push
or
call
addr16
adc
jb
jbe
subl
push
subps
enter
cmp
mov
xchg
cld
jns
cmpsl
jle
pop
mov
mov
mov
daa
pop
sbb
lods
mov
add
and
adc
and
or
pop
pop
add
cmp
sahf
ss
sbb
nop
into
sbb
int
iret
sbb
imul
xchg
sbb
cltd
pop
xchg
sbb
nop
adc
and
stos
add
fimull
inc
xor
movb
leave
push
lds
sub
pop
jno
out
nop
or
push
inc
push
clc
ret
mov
adc
fs
jo
add
xlat
hlt
pop
int3
fadds
jge
push
inc
inc
xor
xor
pop
dec
and
xor
add
dec
sub
test
or
outsl
pop
jne
xor
into
pop
inc
pop
jnp
inc
adc
add
mov
out
test
cmp
pop
enter
adc
and
pop
call
ja
or
sahf
or
jecxz
cmpsb
dec
mov
jb
cltd
add
cmp
or
inc
push
dec
popa
outsb
inc
dec
push
mov
inc
mov
push
ljmp
push
mov
add
push
imul
dec
pop
dec
jnp
mov
test
add
fisubrs
outsl
fs
pop
and
test
xchg
ljmp
jb
and
add
gs
adc
and
push
fs
xchg
add
push
orb
outsl
jae
push
imul
cmc
nop
les
scas
in
push
add
jb
addb
mov
jbe
sub
dec
mov
dec
roll
fs
icebp
and
into
sbb
dec
lods
cltd
dec
and
lods
push
pusha
xor
pop
fcoml
je
inc
sbb
cmc
scas
and
jo
xor
mov
push
popa
outsl
movsl
inc
cmp
cmpsb
jns
pop
inc
or
data16
mov
orb
nop
dec
xchg
decl
fidivrl
leave
or
jne
scas
clc
ljmp
adc
add
push
in
cwtl
in
xchg
dec
or
push
imul
or
sbb
test
test
or
xchg
mov
add
cwtl
inc
inc
cmp
lret
js
adc
dec
loopne
pop
xchg
sub
and
push
and
shll
add
loopne
pop
pop
mov
xor
pop
add
inc
mov
jle
pop
and
push
push
push
insl
sub
mov
mov
outsl
cmp
outsl
xchg
xchg
xor
arpl
les
or
cmpsb
test
or
xor
loopne
add
imul
push
jae
rclb
xchg
or
push
stos
sub
rorl
mov
stos
and
inc
adc
jbe
mov
add
or
push
in
pop
adcb
sub
inc
inc
mov
mov
mov
dec
movups
outsb
sbb
dec
xchg
pop
jns
and
add
cmp
and
adc
inc
add
dec
outsb
outsl
adc
adc
sub
mov
inc
repnz
sbb
stos
sub
loopne
outsl
xchg
dec
enter
dec
add
sbb
ja
ja
imul
push
imul
xchg
lcall
add
or
sub
addr16
inc
xchg
jecxz
in
les
pop
mov
xor
lahf
fs
adc
imul
push
push
push
add
fists
push
nop
adc
hlt
jmp
dec
shl
adc
inc
inc
enter
js
in
dec
shrl
je
or
cld
montmul
cmpsb
add
andb
push
adc
dec
repz
dec
or
nop
mov
dec
adc
or
add
and
cmp
push
and
dec
inc
push
and
addb
and
in
and
test
inc
and
enter
or
jae
add
clc
leave
mov
fimuls
imul
clc
sbb
add
imul
clc
imul
clc
push
test
subb
roll
clc
imul
add
clc
add
andb
push
nop
add
sub
add
adc
xor
inc
add
outsb
and
pop
loopne
cld
add
dec
outsb
inc
jb
inc
outsl
ja
pop
sbb
popa
mov
in
sbb
sub
cmp
add
test
add
and
add
mov
push
add
fisubs
and
leave
inc
add
adc
test
sbb
pop
add
pop
aaa
enter
sbb
aaa
xor
xchg
xor
cltd
jecxz
cmpsl
jns
subb
pop
inc
sbb
adc
test
cmp
or
add
xor
pop
sbb
mov
leave
push
adc
jb
dec
or
sbbl
add
adc
addl
xchg
pop
add
and
jb
enter
jno
inc
xor
or
inc
es
sub
sub
adc
mov
inc
es
xor
nop
sub
xor
adc
in
scas
xor
sub
inc
cmpsb
adc
stos
mov
and
jb
ss
adc
ret
sbb
adc
mov
adc
inc
aaa
lock
data16
sahf
pop
lret
push
inc
mov
xor
sbb
cmp
flds
push
push
pusha
pop
or
mov
repnz
jmp
xor
addb
mov
sbbb
repnz
and
rclb
dec
mov
push
jl
nop
sub
dec
or
pop
and
dec
jle
push
adc
pop
xor
cld
fnstenv
cs
add
adc
pop
pushf
ret
or
cld
dec
xlat
pop
adc
out
add
adc
xchg
xor
add
and
push
pop
jne
push
jnp
push
xchg
and
xor
xorb
mov
movsb
jg
jnp
fwait
push
or
mov
cmpsb
add
imul
lock
jo
fninit
pop
jb
cmp
mov
roll
push
add
rcll
lods
adcb
xchg
xchg
push
xlat
test
nop
xchg
or
push
xchg
dec
push
repnz
jo
add
or
cli
sub
fwait
movsb
sahf
dec
mov
xchg
xor
push
xchg
inc
addl
jns
or
pop
xchg
dec
adc
sbb
mov
sub
in
shl
xchg
leave
push
jns
in
and
pop
dec
popa
mov
add
leave
push
push
subb
outsb
and
fs
adc
add
enter
mov
cmpsb
push
int
and
and
dec
and
fistl
xchg
jp
lcall
mov
add
fs
arpl
add
and
lret
adc
xchg
xor
into
cwtl
mov
nop
lret
enter
cmp
mov
xor
push
movsb
inc
mov
shrl
add
adc
or
fdivs
and
mov
cld
lcall
pusha
jmp
lods
test
sbb
scas
push
fwait
inc
push
stos
nop
mov
stc
and
xor
pusha
xchg
jbe
ret
pop
into
das
and
imul
xor
dec
into
sahf
mov
xor
inc
adc
add
xor
inc
scas
xchg
dec
dec
xchg
and
mov
addl
fiaddl
cltd
lahf
dec
dec
add
fs
sub
push
fwait
add
enter
cmp
sbb
inc
fwait
add
fs
mov
xchg
movb
nop
ss
nop
push
mov
and
add
or
pop
pop
xor
jb
stc
enter
dec
jae
or
pop
xchg
adcb
test
mov
rcrb
test
xchg
sub
movsl
cmp
xor
add
sub
test
push
pusha
imul
cmp
add
mov
xor
adc
and
cmc
testl
cmc
nop
and
addr16
push
movlps
andnps
adc
lret
rorl
dec
sub
sbbl
add
xor
push
sub
inc
and
adc
pushf
or
add
add
mov
mov
adc
cmp
xor
push
add
shll
lcall
add
mov
add
loopne
pop
out
and
jnp
lahf
jge
pusha
xchg
push
daa
pop
aas
popa
insl
pop
dec
dec
push
outsb
data16
push
lcall
rclb
pop
ja
mov
dec
popa
mov
jne
add
xor
cmp
in
nop
add
push
mov
xchg
jne
jecxz
rolb
loopne
inc
mov
xchg
dec
dec
mov
sbb
xor
enter
nop
xorl
pop
mov
adc
mov
xchg
jmp
add
add
mov
jo
testl
cmp
aam
dec
add
loope
adc
adcl
test
xor
xchg
aam
mov
imul
mov
add
push
jp
cmp
push
imul
inc
es
or
xor
and
mov
sbbl
jne
jp
sbb
sahf
movsb
mov
dec
push
pop
dec
push
push
push
pop
push
jae
and
sub
add
dec
inc
sbb
push
cmp
xor
bound
inc
jne
insl
or
addl
jl
sbb
mov
adc
jg
and
add
sbb
mov
pop
arpl
dec
or
push
andb
stc
imull
gs
ret
lea
in
mov
jle
mov
pop
pushf
addr16
pop
out
lea
push
in
cld
adc
add
push
jg
dec
inc
or
inc
push
inc
bound
mov
jg
lods
lods
pop
mov
mov
jo
sbb
test
jmp
orb
js
decl
test
pusha
imul
mov
push
movsb
sbb
rorl
out
out
and
sub
pop
mov
push
and
imul
insl
mov
push
data16
stc
ffreep
push
roll
pop
lret
pop
movsb
jg
arpl
push
xor
sbb
jnp
jnp
mov
je
and
lods
gs
stc
ret
pop
fsubs
test
pop
jp
pop
scas
jae
pop
out
cwtl
loope
sti
inc
add
xchg
cld
sbb
fwait
inc
fwait
repnz
insl
jnp
cmp
jae
dec
or
adc
inc
lret
inc
pushf
cmpl
cmpl
incl
adc
or
push
push
jne
inc
jne
imul
xchg
rorb
add
sub
jb
sub
cltd
test
xor
cmc
add
inc
lret
push
dec
jno
mov
ja
inc
add
adc
xchg
dec
push
sbbb
sar
adc
subb
add
jnp
movsb
orb
leave
shl
sub
push
fs
mov
cli
xchg
sub
dec
mov
pop
popf
sub
push
adcl
out
mov
pop
lods
imul
push
nop
mov
or
ljmp
dec
jmp
or
fwait
xor
mov
add
add
xlat
mov
imul
mov
sub
or
or
rolb
cltd
mov
jo
add
or
mov
push
push
mov
jo
fadds
push
jne
mov
xor
shlb
push
adc
pop
popf
fldl
inc
mov
mov
mov
dec
add
addb
adc
mov
jno
push
js
lea
inc
cwtl
xlat
add
mov
push
jne
stos
hlt
je
add
add
sub
pop
nop
jae
jne
std
or
loopne
dec
imul
scas
or
lea
inc
push
test
add
and
lahf
dec
xchg
inc
inc
dec
mov
mov
jae
les
push
sti
add
negb
mov
jnp
push
dec
loop
jnp
xchg
sbb
cwtl
adc
push
inc
rolb
data16
leave
push
movsl
push
jmp
orl
mov
mov
leave
add
mov
subps
add
adc
in
mov
adc
je
insb
ret
scas
inc
pusha
nop
or
ja
xlat
sub
or
iret
shll
jbe
push
mov
push
xor
pop
dec
cmp
sbb
pop
int
lahf
inc
or
gs
jns
dec
adc
mov
mov
pop
pop
push
mov
mov
push
jg
and
pop
sub
sbb
sub
stc
mov
cwtl
cmp
pop
adc
pop
dec
gs
sbb
sub
push
mov
sbb
dec
push
outsl
push
or
std
add
mov
or
gs
adcb
adc
adc
fs
mov
and
or
cmp
push
add
int
add
jecxz
add
mov
push
pop
pop
sbb
push
sbb
jmp
sub
jge
push
sub
out
lods
aas
addl
lods
mov
xlat
popf
adc
cmp
mov
mov
sub
xchg
les
aad
add
test
in
cs
or
inc
sub
dec
or
aad
mov
fcompl
adc
adc
push
mov
test
mov
inc
add
add
or
push
jnp
inc
mov
roll
xchg
xor
add
pop
push
jb
push
int3
addb
bound
sbb
loopne
or
insb
or
pop
adc
xchg
jl
add
push
xor
sbb
jns
push
nop
add
mov
and
stc
addb
xor
mov
mov
fwait
out
cmp
dec
mov
push
dec
scas
ljmp
add
pop
orb
sbb
adc
clc
push
jp
mov
js
mov
mov
jmp
xchg
cmp
clc
dec
fstp
inc
inc
mov
daa
xchg
adc
and
dec
xchg
mov
rcl
xlat
and
add
inc
stos
sbb
fstpt
adc
or
push
popf
repnz
js
jecxz
inc
or
sub
leave
push
add
jo
inc
pop
aas
pop
xor
mov
adc
inc
add
xchg
test
xor
cltd
add
xor
pop
lds
movsl
xor
and
and
xor
push
sbbl
insl
jecxz
sbb
sub
addl
test
addl
inc
or
test
jno
add
andl
mov
addl
add
les
push
add
roll
adc
xchg
dec
inc
xorl
leave
add
arpl
jno
mov
push
inc
xchg
push
and
xorl
cltd
and
inc
and
add
mov
addl
add
sub
addb
cmp
movsb
std
fs
push
or
add
xor
addb
test
and
icebp
add
nop
outsl
dec
or
inc
bound
scas
gs
cmp
xchg
and
nop
inc
adcb
mov
mov
xor
and
data16
xor
ffreep
lds
add
loopne
enter
or
sub
ret
cmp
or
jge
inc
adcb
add
xchg
adc
add
inc
pop
and
mov
dec
pop
pushf
or
popa
inc
rorl
movsl
xchg
pop
popa
cwtl
arpl
mov
and
mov
jb
sub
mov
nop
inc
push
bound
sbbb
dec
bound
push
cmp
std
pushf
sub
mov
mov
adc
push
enter
loop
test
les
arpl
addr16
bound
rorb
pop
inc
and
dec
mov
rcll
mov
and
push
inc
dec
sbbb
hlt
push
and
imul
pop
loopne
cmpb
xchg
fs
enter
fmull
add
push
or
dec
adc
add
jg
sub
dec
push
ss
mov
dec
pop
or
stos
inc
xlat
push
push
aam
sbb
sbb
pop
imul
sub
insb
ds
or
and
add
imul
imul
add
pusha
xor
cmp
imul
sbb
or
addl
add
sbb
test
in
add
mov
in
sbb
or
push
movsl
test
mov
sub
xchg
adc
pop
roll
inc
jns
cwtl
je
or
sbb
rolb
push
in
or
test
dec
add
mov
and
fs
mov
dec
xlat
push
movl
loopne
add
add
icebp
test
icebp
push
push
pusha
jb
icebp
pop
push
dec
movsb
mov
xor
call
xor
xor
sub
inc
add
mov
push
push
xchg
mov
sub
push
and
jne
loop
mov
xor
jo
rolb
enter
push
stos
and
fldl
sub
sub
adc
xchg
mov
adc
iret
add
test
or
loope
mov
mov
or
mov
adc
and
sub
push
addl
lahf
mov
test
add
push
pop
das
mov
inc
enter
sub
cmp
ret
cmp
pop
inc
loopne
cmp
popa
push
xchg
jne
leave
sbb
lahf
push
stc
add
icebp
mov
sbb
jge
rcrb
fcomps
loop
and
lcall
jbe
roll
xor
and
add
sub
pusha
mov
notl
inc
or
out
inc
xchg
or
stos
mov
pusha
push
bound
fidivrl
lret
add
xchg
mov
imul
xchg
dec
jecxz
mov
aad
bound
add
test
sub
mov
inc
popa
bound
out
mov
mov
and
or
aam
mov
andl
inc
xor
pop
push
inc
dec
insl
aad
add
out
xor
ret
jo
js
mov
add
dec
outsb
cmpsl
and
mov
insb
or
add
sbb
add
xor
sub
nop
xor
xor
fs
cs
nop
xor
inc
mov
aaa
fcoms
cmp
in
sbb
cmp
andb
addps
in
dec
scas
mov
sub
sbb
pop
xorl
jo
xor
and
and
nop
sbb
nop
dec
xor
adc
xchg
xor
inc
add
pop
xor
ss
nop
mov
rolb
sub
cmp
xchg
test
inc
cmpsb
xchg
add
cmp
and
lock
and
xor
fiaddl
sbb
ss
pop
jg
cmpsb
or
xor
xor
stos
or
cmpsb
xor
dec
lcall
addl
mov
or
add
jb
aaa
cmp
xchg
pusha
or
into
pop
pop
or
or
push
xchg
pusha
dec
or
sbb
insl
xchg
sbb
xor
fs
jo
add
fldt
xor
loope
or
adc
adc
add
jb
jns
pop
sbb
outsl
addl
fs
bound
xor
adc
inc
xchg
dec
nop
xchg
popa
or
pop
adc
sbb
sbb
add
pop
mov
jmp
ja
cs
aam
jo
rcrl
xchg
jl
adcb
pop
or
popa
daa
andb
dec
sahf
sub
orb
xchg
rcrb
or
es
and
cmp
add
in
sub
lods
dec
xchg
sub
or
xor
add
pop
cmp
imul
or
add
nop
imul
xor
push
pop
aas
lcall
cmpsb
jbe
jbe
mov
inc
repnz
ret
stc
xor
xchg
push
mov
xchg
daa
add
loopne
and
clts
add
in
fbld
aam
lods
insl
sti
mov
push
iret
sbb
in
jle
lcall
adc
adc
repnz
ja
add
push
addb
adc
pusha
sbb
xor
das
roll
arpl
jno
jge
xor
pop
xor
bnd
cmp
popa
les
or
jae,pn
xchg
scas
popa
lret
cmp
adcl
mov
leave
xchg
xor
pop
dec
mov
push
popa
mov
xor
jb
or
cwtl
and
imul
pop
and
movsl
push
orl
push
pop
add
movsb
scas
lods
sub
pop
nop
mulb
addr16
das
lcall
xor
lods
gs
cmp
jge
inc
or
scas
out
push
and
fdivrs
fcompl
push
daa
inc
mov
xlat
js
xor
sub
and
push
js
cmp
xchg
adc
rol
pop
sub
push
sti
lea
xor
adc
xorb
pusha
dec
dec
jno
push
cmp
ds
xchg
mov
pop
push
jp
mov
adc
add
adc
mov
aaa
or
daa
xchg
add
jp
rclb
mov
push
adc
add
das
andb
xor
arpl
call
mov
xor
add
xor
in
pusha
sbb
xor
push
shlb
cltd
arpl
movl
push
cmp
sub
popa
lret
shlb
adc
adc
mov
jno
mov
add
mov
int
repz
test
xor
add
add
xor
xor
ficoms
gs
and
adc
stc
and
push
fmul
add
pop
or
ret
xchg
adc
adc
sqrtps
add
add
xor
push
add
xor
sbbl
and
xor
jb
push
push
pop
enter
xor
xchg
dec
adc
xor
adc
gs
enter
xor
leave
push
sbbb
inc
inc
add
roll
xor
rorl
les
or
orb
ljmp
leave
movsl
add
adc
orb
push
push
adcb
push
cmpsb
mov
les
cli
adc
cmp
push
scas
pop
and
inc
jge
aam
aaa
addb
stos
sahf
pushf
pop
xchg
ret
jne
les
dec
cwtl
add
pusha
xchg
insl
arpl
adc
push
es
scas
dec
sbbl
psrlw
dec
stc
cmpb
pop
adc
inc
pop
shlb
insl
add
add
outsb
push
into
push
rorb
and
push
sbb
fwait
in
arpl
adc
dec
jne
dec
add
orl
rorw
dec
sbbl
mov
nop
inc
and
jne
test
icebp
sbb
add
jp
stos
adc
ret
inc
insl
loop
test
inc
mov
imul
lds
adc
jnp
or
add
push
push
dec
ficomps
or
jne
dec
out
lea
cwtl
mov
call
xchg
xchg
adc
push
or
pop
int3
xchg
or
testl
dec
jbe
addr16
lret
push
outsl
out
ds
xchg
push
push
bound
jae
jg
lsl
scas
push
in
ret
sub
inc
js
inc
ss
pop
dec
add
dec
mov
dec
loope
aam
jle
js
jp
pop
test
dec
xor
jbe
mov
push
add
and
cmpl
test
cmp
push
dec
push
fstl
lds
pop
sti
sbb
dec
dec
stos
mov
cmpsl
jo
gs
test
sbb
jo
pop
js
notl
jne
pop
push
fsts
add
aam
sbb
shll
or
xchg
pop
popf
and
jmp
bound
pop
xchg
hlt
aaa
dec
push
mov
pusha
jg
jl
pop
mov
jb
sbb
cmp
mov
adc
jbe
nop
addr16
mov
xor
xchg
and
and
and
mov
cmp
ret
sbb
push
inc
push
or
add
ljmp
add
sbb
data16
call
mov
pop
xor
dec
and
cwtl
pop
push
jg
cmp
je
cmp
das
ja
cs
mov
adc
arpl
push
outsb
das
and
mov
in
mov
nop
sub
decl
mov
mov
out
test
xchg
mov
arpl
shlb
jns
pop
test
push
sbb
or
addr16
fsub
cli
pop
das
push
add
jo
or
xchg
out
add
push
ret
push
dec
push
cmp
mov
aas
inc
fs
jg
dec
mov
punpcklwd
in
ja
ljmp
mov
data16
jo
addr16
mov
xor
or
cwtl
imul
push
cmp
push
mov
mov
es
and
pop
nop
in
add
shrb
push
jno
sbb
fxch
in
dec
push
fdivrs
mov
sahf
push
push
xor
pushf
inc
imulb
or
jbe
es
sbb
cmp
mov
dec
push
sbbl
or
pop
pushf
stos
pop
add
pop
xchg
xchg
push
bound
out
add
push
popa
jne
xor
jns
lcall
jne
or
jo
push
add
adc
and
in
bound
cmp
pop
sbb
loopne
push
add
iret
adc
or
dec
add
aam
inc
pop
inc
sbbb
cltd
xorb
cltd
or
repnz
gs
dec
int
push
add
clc
or
mov
xchg
mov
lret
mov
mov
adc
jo
jb
cmp
add
addb
test
sbbb
add
mov
pop
loop
imul
push
push
xor
mov
sahf
xchg
push
jne
mov
pop
add
mov
adc
dec
jg
or
out
or
pop
mov
xchg
popf
das
add
fldt
shlb
call
das
xor
xchg
mov
xor
lea
clc
addl
add
inc
push
sbb
shrl
fiaddl
aaa
in
xor
stos
and
and
pop
fsubrs
and
xor
push
enter
xor
add
push
imul
xor
cmpb
mov
leave
inc
test
inc
mov
add
inc
or
fstpt
icebp
loope
or
or
add
add
jb
xchg
adcb
mov
xor
mov
mov
jb
popa
hlt
push
addl
adc
mov
aad
adc
jns
aas
pop
add
pop
push
bound
pusha
add
mov
sbb
ret
push
sbb
add
and
aaa
lcall
popa
fs
jp
jno
xorb
push
xchg
xor
dec
inc
fcoml
and
add
imul
xor
push
imul
aaa
les
outsb
popa
ret
fsubr
pusha
mov
pop
adc
addb
or
dec
insb
inc
enter
mov
dec
in
jbe
insb
add
add
imul
lock
jb
mov
test
or
mov
pop
jb
imul
and
dec
push
inc
fcoms
push
mov
adc
or
nop
notl
inc
xchg
andb
in
jle
insl
insb
or
cltd
push
icebp
mov
push
xor
and
mov
and
enter
xchg
add
inc
push
ja
and
insl
cmp
insb
sbb
insb
sbb
or
sbb
adc
out
sbb
push
xchg
das
xchg
or
lahf
adc
xchg
pop
scas
stos
jns
or
mov
andb
cmp
dec
pop
pop
pusha
adc
push
inc
inc
call
das
inc
lock
jns
outsb
cmp
push
test
rorl
pop
fs
mov
orb
cmp
xchg
add
scas
and
inc
inc
cmc
dec
insb
xchg
inc
pop
cvtdq2ps
scas
pusha
mov
lahf
adc
cmp
push
jb
int3
popf
bound
nop
mov
push
push
adc
movsl
cwtl
ficomps
pop
mov
push
dec
add
or
das
sub
inc
fistl
aad
leave
scas
inc
mov
imul
add
out
add
clc
dec
pop
imul
ret
fmuls
lods
cmp
cmpsb
sarb
add
inc
pop
arpl
mov
adc
scas
push
nop
mov
jb
inc
jne
outsl
insl
imul
pop
adc
push
dec
and
rorb
and
out
bound
adc
adc
stc
adc
and
and
jmp
dec
jg
or
imul
push
cmp
sbb
movsb
xchg
pop
fs
popa
add
adc
outsb
data16
dec
imul
inc
add
sbb
sub
jp
add
in
fidivs
mov
mov
movsl
add
xor
jecxz
add
mov
jbe
push
or
and
mov
or
inc
insb
jns
push
jge
push
pop
ss
inc
dec
or
ss
outsb
pop
sbb
dec
add
push
sbb
enter
cmpsb
cmpb
add
mov
shlb
add
flds
into
adc
cld
or
adc
cltd
add
in
insl
sti
push
call
add
aas
pusha
mov
adc
add
xor
stos
mov
adc
jae
add
push
loopne
outsb
jae
insl
or
and
test
xchg
adc
adcl
cmp
aad
xlat
pop
popa
inc
adc
adc
lock
dec
bound
popa
and
leave
es
test
dec
inc
mov
adc
inc
shlb
and
fwait
jo
mov
insb
outsl
jae
out
loopne
enter
dec
outsl
fs
jecxz
movsb
pop
push
add
pop
inc
mov
and
or
lods
loop
xchg
xchg
in
or
pop
xchg
nop
lcall
cmp
adc
adc
shlb
shlb
or
jne
sub
in
push
scas
push
adc
adc
and
popa
faddp
testb
adc
sub
dec
jbe
cltd
sbb
mov
sub
ja
pop
movd
push
add
outsb
add
adc
or
jle
sbb
xchg
xor
dec
pushf
push
sub
test
adc
cld
add
adc
push
push
addl
in
ljmp
mov
sub
shll
push
inc
ss
mov
imul
int3
pusha
jb
jae
je
pop
fcoms
pop
fistpl
mull
cltd
stos
push
xor
aaa
cmc
mov
or
sti
mov
inc
adc
and
xchg
dec
test
and
mov
lock
sbb
lods
or
lods
push
imul
inc
sub
decb
dec
or
xor
andl
imul
shlb
gs
jb
mov
cmc
mov
jmp
mov
sub
imul
test
adc
ret
ja
cli
mov
jns
inc
jle
jno
or
xchg
add
pop
push
or
xor
addr16
in
pop
stos
aam
push
mov
lret
jae
sub
add
mov
jae
imul
sbb
or
push
pusha
sub
cmpsb
hlt
imul
jae
ret
adc
or
add
daa
dec
sarl
popa
mov
sub
fistps
orl
arpl
pop
adc
gs
push
xor
or
dec
pop
rcrl
xor
sti
mov
pusha
fld1
or
and
sbb
inc
test
mov
mov
and
incl
loopne
sub
or
xor
icebp
paddsw
gs
inc
and
or
or
adc
xor
mov
cmpb
push
testb
dec
subb
cmpsb
add
cltd
or
popl
aad
and
xor
dec
imul
add
pop
pop
inc
or
je
sub
or
lcall
aaa
lcall
pop
lahf
pop
fs
fld
movl
mov
ss
mov
cltd
jne,pn
inc
fs
mov
jnp
cmp
cmpsl
adc
mov
loope
insl
xor
jae
xor
add
xor
mov
push
pop
daa
shlb
jbe
fidivl
jae
sti
add
push
test
jmp
or
dec
lea
inc
stos
adc
dec
and
pop
sbb
aaa
and
add
fsubl
cmc
mov
es
scas
or
dec
dec
add
add
push
adc
decl
dec
jbe
adc
xchg
rclb
inc
nop
cmc
sub
xor
das
sub
pop
xlat
or
test
push
inc
mov
push
leave
adc
cltd
jns
cmpsb
inc
int3
add
xor
cwtd
pop
out
pop
push
push
shll
inc
into
ret
pop
or
inc
and
add
cmpsb
pop
xor
xor
dec
push
and
fcoms
push
pop
inc
dec
test
mov
out
in
pop
pop
mov
inc
mov
xor
mull
pop
mul
push
insl
add
inc
fsubrl
cmp
incl
mov
adc
push
add
xor
and
xor
negl
and
incl
rclb
pop
aaa
add
das
decl
and
push
pop
imull
dec
xor
idiv
stos
mov
cltd
pop
int3
push
incl
pop
iret
sbb
xchg
aam
add
xor
inc
lock
dec
push
popw
mov
incl
das
jl
fadds
ret
addl
andl
push
adc
fcoms
and
mov
out
mov
push
popw
out
imul
mov
stos
dec
roll
pop
pop
andb
or
loopne
xor
push
pop
testl
pop
enter
out
incl
or
pusha
fadds
pop
xlat
pop
sbb
out
data16
jne
pop
pop
pop
divl
notl
pop
or
decl
jno
adc
test
int3
sub
jbe
push
sbb
mov
jg
lea
cmpsl
push
nop
push
inc
sbb
xchg
jno
cmpsl
inc
dec
ds
imul
mov
dec
add
fstps
push
out
std
add
mov
incl
add
sti
pavgw
movzbl
out
psubb
add
cld
pop
add
pop
stc
in
inc
pop
aas
sub
out
ret
rol
ret
repz
imul
add
inc
push
push
call
jb
push
daa
ret
add
mov
cmpsb
fcoml
xchg
add
and
in
pop
subb
xorb
xor
sub
jae
dec
or
add
push
rorl
xorl
sub
lcall
mov
lods
jbe
or
test
adc
testb
pop
push
mov
sub
out
inc
gs
cmp
adc
sub
sbb
sub
jg
pop
or
insb
dec
jne
jo
bound
nop
jnp
enter
popa
insb
dec
lods
add
sti
and
mov
push
insb
lret
pop
shlb
or
xchg
xchg
daa
push
inc
or
push
jo
or
and
addr16
daa
or
insb
xchg
jae
jns
sbb
je,pt
bound
or
shlb
inc
mov
or
fwait
adc
and
arpl
jecxz
jo
cmp
orb
mov
andb
call
cwtl
adcb
add
cld
imul
push
and
xchg
add
test
add
or
push
dec
push
jecxz
testl
ljmp
cmc
enter
xor
sub
sub
dec
inc
adc
je
push
push
mov
fldt
or
inc
or
insb
dec
repnz
adc
aas
cmp
movsl
or
mov
popa
sub
dec
mov
jns
loope
sbb
and
imul
pushf
xchg
cmp
pop
inc
xchg
in
nop
shlb
dec
push
addl
add
sub
adc
push
jg
pop
bound
aad
cmpsl
xchg
test
add
lods
mov
ret
addb
inc
jno
add
or
add
adc
add
inc
sub
adc
fisttps
and
pusha
sahf
std
mov
popa
or
roll
dec
insl
sub
add
loope
orb
xchg
movd
outsl
add
add
cmp
orl
add
mov
and
sub
add
ljmp
pusha
dec
jns
inc
inc
dec
ret
sub
imul
add
pusha
add
adc
xlat
addb
dec
and
stos
inc
lret
call
add
adc
pop
jmp
cmp
flds
or
jmp
cmp
add
or
push
add
outsl
or
adcl
adc
jae
outsl
jp
fiaddl
imul
or
adc
leave
mov
or
mov
add
add
and
int3
add
sub
test
jnp
or
push
mov
jb
jmp
add
xor
into
cmpsl
add
adc
scas
mov
add
cwtl
loopne
mov
cmp
leave
rcl
push
orl
adc
sbb
iret
add
hlt
je
movsl
je
inc
adc
mov
dec
popa
mov
sub
iret
adc
outsb
popa
insl
rolb
jmp
push
pop
push
jae
pop
and
addb
movsb
add
add
outsl
icebp
pushf
test
pop
push
pop
sbb
jmp
mov
jb
adc
cs
insb
sbb
or
fidivrs
sbb
jbe
push
jp
or
sbb
addl
and
xor
sti
fs
push
inc
das
adc
xchg
test
jb
xchg
xchg
sub
pop
imul
sahf
fcmovnb
sti
fstpl
mov
or
outsb
popa
jbe
ret
or
cltd
lret
rclb
dec
xchg
pushf
sbb
xorb
cmp
pop
fisttps
and
je
roll
mov
js
mov
inc
adc
ret
in
push
pop
adc
inc
mov
leave
dec
push
cli
in
scas
cltd
pop
sarb
subb
inc
nop
and
add
xchg
ret
push
repz
jo
dec
mov
faddl
test
pop
and
shl
mov
ljmp
inc
cmp
lds
xchg
jnp
es
mov
inc
scas
lods
in
and
inc
popf
sbb
xlat
sbb
or
test
ljmp
fisubrs
ret
and
shll
sub
and
mov
pop
sbb
jb
sub
adc
and
and
dec
jge
scas
add
xor
mov
and
ret
nop
add
out
cmp
sbb
mov
push
mov
insb
add
push
addr16
mov
push
cmp
or
add
push
adc
daa
inc
pop
jb
int3
fwait
xor
push
or
pusha
mov
and
dec
or
sub
xor
or
sub
push
insl
movsl
ret
push
es
ret
cmp
pusha
mov
outsb
add
sbb
adc
mov
pop
push
scas
add
sbb
cmp
cmp
lock
sub
lret
pop
xchg
jo
cmc
push
es
fisubrl
cmp
inc
mov
ss
mov
add
fcoms
push
mov
testl
xchg
popf
pop
sub
or
sarl
xor
ss
or
xor
adc
lods
nop
ficoml
ror
ret
push
or
adc
scas
mov
jae
cmpsb
movsl
xchg
fistpl
scas
inc
orb
add
xchg
cltd
shlb
mov
push
push
adc
mov
add
and
fdivp
rorl
add
incl
test
insl
and
jg
or
adc
stos
fnsave
pop
fidivl
pop
and
mov
aaa
cwtl
mov
setns
arpl
cmp
add
incl
or
push
jno
decl
push
mov
add
dec
lret
push
adc
adc
push
and
faddl
ret
pop
cltd
and
lret
add
insl
pop
pop
push
andb
or
sar
mov
sbb
xor
push
push
add
leave
fsubs
push
addl
pushl
sub
and
inc
xor
inc
pusha
les
sbb
sub
push
sub
xor
add
sldt
inc
testb
pop
xor
adc
daa
mov
sahf
ljmp
es
int3
test
pusha
insl
xchg
xor
add
shll
pop
inc
push
push
dec
lods
dec
test
dec
and
call
fs
mov
call
inc
pusha
addr16
pop
outsb
pop
pop
arpl
int
inc
xor
add
xor
mul
js
or
jge
push
pop
testw
incl
push
outsl
int3
pushl
dec
push
xor
int3
jmp
pop
mov
push
incl
jo
or
lcall
jl
push
add
rcll
push
jmp
pop
xor
out
lcall
inc
add
repz
and
dec
pop
dec
push
mov
pop
incl
push
sub
add
jbe
incl
lea
outsl
inc
decl
incl
ds
call
dec
test
adc
push
and
seta
addb
mull
fsubrs
xor
loop
push
int3
cltd
out
inc
roll
pop
xchg
pop
inc
push
push
sbb
inc
ljmp
movsl
jmp
jmp
or
popf
inc
sbb
pop
push
dec
ljmp
mov
inc
inc
pop
incl
mov
cltd
iret
sub
push
sar
pushl
mov
inc
movlhps
inc
sub
add
call
lcall
mov
out
mov
and
idiv
push
das
ja
aaa
or
push
scas
push
pop
mov
mov
pop
push
push
dec
or
stos
ret
inc
popa
adc
or
int3
jmp
add
pop
pop
sbb
loope
ud0
inc
dec
lods
or
insl
test
or
subl
ret
cltd
call
or
lds
addr16
push
aad
gs
or
pop
or
fadds
jne
inc
and
stos
sar
lcall
outsl
add
cltd
iret
or
inc
pop
rorb
add
pop
outsb
lcall
bound
outsl
pop
pop
data16
adc
popa
mov
inc
movntq
lea
push
sub
dec
lods
sub
insl
fnstcw
add
mov
out
rolb
adc
or
movlps
sldt
int
sbb
adc
pop
mov
sarb
xchg
pavgb
lock
cmp
ret
shr
fldcw
push
aas
jb
cld
jg
mov
cmpsb
fiadds
fsubs
or
xchg
and
insl
xor
add
mov
or
sub
xchg
sub
dec
inc
sub
inc
lea
cld
scas
sbb
jmp
pop
inc
push
ret
call
in
std
lcall
mov
sub
cmpb
jne
mov
xor
je
add
lea
push
push
pushl
sbb
adc
push
jmp
mov
clc
shlb
dec
pop
test
je
jmp
call
subb
push
pushl
call
jle
fcmovnbe
pop
mov
mov
dec
pop
push
push
sub
sbb
and
push
cmp
jne
push
pop
ret
xor
neg
sbb
inc
adc
call
jp
inc
push
nop
mov
cld
pop
mov
add
pop
jle
mov
push
mov
xor
imul
sub
xor
movzwl
pop
push
out
fucomip
or
in
add
push
dec
dec
outsl
jl
pop
xor
call
jmp
mov
pop
lods
jne
stc
xor
dec
dec
jl
incl
mov
inc
je
adc
sub
call
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
push
mov
pop
pop
mov
btc
jg
mov
out
add
flds
jne
loop
sbb
jmp
int3
adc
div
fs
xchg
decl
or
cmpsb
out
cmp
out
xchg
sbb
inc
xchg
add
cmp
and
or
lret
mov
int3
rolb
pop
dec
cwtl
xchg
mov
push
stc
icebp
lret
jne
cwtl
inc
xor
pop
adc
mov
adc
arpl
mov
cmc
stos
xchg
adc
xor
xchg
idiv
pushl
mov
inc
addr16
aad
mov
xorb
insl
dec
sbbb
mov
out
ljmp
dec
xorb
sub
in
xlat
loope
jbe
push
incl
or
pop
mov
push
or
in
data16
cmpb
mov
clc
xchg
cmpsb
pop
jb
test
inc
scas
xchg
pop
rolb
stc
sar
ds
pushf
stos
lock
pushf
sbb
loope
pop
or
and
sub
andb
mov
jne
std
mul
dec
cwtl
pushf
pop
jle,pn
loope
stos
push
int
xchg
jne
adc
iret
int3
pusha
cmpsb
dec
cmp
out
dec
repnz
dec
sub
sbb
loope
push
mov
repz
std
push
jmp
add
mov
adc
sbb
stc
cmp
xor
mov
rorl
pop
outsb
fdivrp
out
jbe
xor
xchg
call
cld
aas
dec
lret
enter
push
push
mov
lods
cli
pop
mov
std
ss
out
jae
lea
mov
repnz
scas
pop
loopne
jns
call
rorl
lret
mov
jb
popf
movsb
mov
ret
jecxz
jnp,pt
std
lcall
testb
xchg
jns
cmp
push
xor
adcl
rclb
std
loopne
lods
fidivs
jle
mov
sbb
and
push
xor
xchg
popf
outsl
pushl
push
and
xchg
mov
lahf
sub
adcl
mov
xlat
push
mov
push
mov
mov
adc
add
push
fwait
ret
outsl
xchg
into
iret
inc
mov
ds
pushl
mov
pop
jle
jle
shrl
jns
es
add
fwait
jnp
xor
scas
fisubl
cmp
add
ret
dec
lock
int3
dec
lods
int3
idivl
out
pushl
sbb
cmp
mov
push
mov
mov
or
mov
or
jmp
mov
ljmp
imul
loop
andl
es
movsb
xor
mov
js
mov
loope
dec
and
in
ret
mov
mov
test
out
std
jmp
sahf
push
mov
push
dec
out
xor
ss
mov
jl
jnp
movsb
xor
adc
nop
fistpl
orb
outsl
mov
push
out
push
adc
out
add
jg
or
cmp
ds
cmp
jne
ljmp
aas
outsl
cmpsb
mov
ret
mov
jmp
ljmp
shrl
std
add
dec
pop
or
out
insl
mov
cmp
jmp
in
ja
cli
out
mov
out
out
stos
mov
cli
jecxz
push
lods
or
out
sti
out
jne
ret
mov
int3
fcmovu
mull
mov
in
push
xchg
or
jne
or
popa
sbb
inc
addr16
in
out
adc
in
adc
mov
fs
outsb
enter
out
cmp
push
add
sub
scas
xor
mov
imul
add
xchg
aaa
sub
out
add
or
negb
dec
add
lahf
pushf
es
mov
in
outsb
adc
sbb
jbe
mov
loop
pusha
xor
cld
call
bound
mov
mov
neg
xor
in
xor
fs
test
sbb
aad
jnp
push
mov
icebp
mov
je
cmp
scas
call
mov
xlat
in
mov
xchg
inc
mov
std
ror
scas
jbe
mov
pop
bound
test
dec
dec
dec
in
aas
pop
xchg
insb
and
sub
loopne
vsqrtsd
nop
mov
inc
and
and
std
and
mul
cmp
shrb
push
loop
repz
mov
sbb
cmpsb
xchg
icebp
std
jg
adc
loope
jmp
push
mov
in
dec
jne
test
fstp
dec
and
aas
jmp
lahf
popa
jg
mov
add
outsl
leave
in
mov
dec
aaa
leave
inc
push
mov
ljmp
imul
out
jne
fs
push
push
loop
mov
mov
pop
test
loop
xchg
cmp
subl
icebp
mov
int3
jle
and
mov
sbb
incl
subl
outsl
pop
loop
les
mov
add
add
xchg
clc
sub
sub
loope
sub
idiv
fldt
xchg
imul
mov
out
leave
icebp
out
fadd
cmp
dec
xchg
and
adc
clc
das
dec
mov
jecxz
ljmp
test
je
mov
xor
adc
rcrb
pop
aas
jl
das
pushl
cmc
add
inc
pop
jae
scas
mov
daa
mov
pop
bound
and
and
ljmp
cmp
stos
fistpll
push
outsl
call
mov
rolb
aaa
push
shrb
adc
es
enter
decl
int
pop
cmp
or
or
jp
daa
or
ss
fucom
pop
in
insl
sub
daa
dec
add
pop
cmp
jno
idivb
push
lea
xchg
mov
fcmovbe
add
scas
push
rorb
xchg
sbb
fcmovb
inc
sbb
xor
mov
call
aas
lahf
pop
into
stc
mov
imul
std
dec
movsl
dec
popa
pop
andb
add
xor
push
shl
movsl
add
push
jmp
gs
and
or
inc
ljmp
mov
pop
adc
call
jl
jns
xor
hlt
ss
pop
andl
xchg
push
add
rcr
mov
push
aam
cmpsl
push
scas
cmpsb
aas
pop
sar
sub
das
or
mov
xchg
xor
jae
test
in
sub
jno
mov
dec
or
ljmp
mov
xor
ljmp
adc
cmp
dec
inc
push
popa
push
push
in
fstl
stos
and
pusha
sub
pop
inc
inc
mov
xchg
xor
js
xchg
cmp
out
aaa
mov
orl
insb
mov
or
mov
jmp
mov
xor
or
dec
leave
fdivrl
sbb
shll
push
outsl
push
push
fdiv
add
mov
dec
adcl
add
ficompl
xor
pop
rclb
mov
dec
xor
mov
sub
jno
push
lock
adc
movsb
add
or
jmp
jb
lock
and
sub
mov
cmp
int3
jnp
popa
ret
call
xchg
in
pop
dec
in
pushf
adc
enter
pop
ret
mov
shll
mov
xchg
sar
lods
test
push
adc
jg
out
std
clc
mov
insb
icebp
adcb
xchg
test
in
xor
in
mov
fcomip
cwtl
sbb
fdivr
cmpsb
and
mov
test
jmp
jp
cmpl
loope
into
inc
lock
repnz
pop
pop
je
in
jne
mov
jg
pushf
roll
insb
bound
push
movsl
mov
mov
call
ficoml
xchg
test
shrl
test
mov
jnp
fs
popa
jge
jmp
push
pop
adcl
mov
xor
sub
xchg
movsl
add
es
jge
inc
adc
jl,pn
pop
xor
sbb
adc
pushl
jbe
mov
test
xchg
fsubrl
pop
jecxz
out
ror
sbbb
inc
jg
cld
dec
dec
inc
pushf
les
push
inc
inc
inc
filds
es
cmp
imulb
or
insl
push
xor
xchg
pop
in
fimull
cld
pop
leave
xchg
pop
push
mov
push
mov
sub
in
pop
in
push
pushf
daa
into
insl
or
pop
enter
fimull
in
std
adc
leave
leave
leave
and
inc
pop
leave
leave
leave
leave
jae
lcall
iret
outsl
jg
andb
movsb
jg
fs
jo
and
fdivr
add
lahf
add
add
push
pop
sbbb
ljmp
loope
cld
dec
fsubl
and
and
adc
add
mov
call
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
pushl
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
fisttps
xor
and
push
out
mov
shrb
add
or
inc
call
enter
sub
sbb
push
dec
add
arpl
je
and
orl
enter
jb
cmp
movsb
sbb
mov
and
nop
in
jb
decl
test
lock
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jmp
push
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
jb
cmp
out
sbb
shrb
call
in
adc
add
mov
mov
add
fbld
shrb
je
lock
sbb
mov
add
sti
pop
lods
or
pushl
xor
mov
js
and
nop
add
push
push
mov
adc
mov
call
call
add
ljmp
fistpl
lret
add
mov
sub
mov
lsl
lea
mov
sbb
jmp
sbb
inc
cmp
jne
push
stc
jecxz
pop
push
cmp
add
jg
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
decl
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
decl
adc
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
lea
icebp
lcall
nop
jmp
cmp
inc
pop
mov
push
add
call
jne
and
call
daa
inc
xchg
or
add
incl
in
add
jmp
in
rorl
add
jg
sbb
fcomip
jmp
jl
jle
sbb
call
add
sub
add
decl
loopne
mov
add
pop
mov
insb
ror
add
mov
fmuls
cld
lcall
int
pop
and
sbb
into
mov
add
stos
cmp
js
mov
cmp
into
add
fildll
inc
incb
sub
jmp
fldcw
test
add
stc
loop
xchg
adc
shlb
addb
or
xchg
add
mov
out
sbb
pop
xchg
sub
mov
mov
mov
cmp
pushl
cld
push
sub
mov
cmp
out
or
mov
add
cmp
push
incl
push
push
dec
shl
clc
mov
cmp
sarl
lods
fs
incl
mov
mov
or
push
clc
stos
fs
and
mov
cld
decl
popa
sbb
pop
or
push
push
mov
pop
pop
jns
mov
sahf
cmpl
ja
test
insb
in
hlt
dec
test
adc
or
add
add
jmp
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
clc
decl
add
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
or
incl
or
add
sbb
adc
and
mov
cmpsl
int3
pusha
add
cld
push
rcrb
pushl
or
cmp
fsubs
adc
add
call
lods
sub
hlt
mov
sbb
xchg
addl
mov
mov
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
in
mov
jle
nop
pop
jbe
sbb
mov
loopne
add
adc
add
std
sbb
jbe
pop
pop
rorl
sub
bound
cltd
mov
pop
pop
xchg
xchg
ret
sub
mov
repz
out
xor
mov
xchg
push
aas
adc
or
sub
inc
movsl
test
cmp
in
push
js
fistps
mov
cmpl
inc
add
sub
dec
inc
je
pop
mov
pusha
aaa
mov
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
loop
call
inc
add
pop
add
push
push
dec
pop
sbb
sub
push
add
stos
add
and
das
and
int3
mov
std
sub
cmp
pop
movsl
pop
and
push
call
fwait
or
push
add
lcall
cwtl
cli
aas
sub
bound
sbb
scas
add
jg
jmp
push
lea
lret
pushf
cwtl
push
call
jbe
xor
incl
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
cld
add
xchg
inc
inc
jne
mov
cmpsl
dec
ret
inc
dec
lret
loop
jmp
cmc
jne
cmp
dec
xchg
adc
jp
and
push
adc
incl
inc
dec
stos
or
adc
mov
push
lds
mov
jl
testb
jecxz
add
pop
lock
or
fidivs
hlt
iret
subl
mov
mov
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
or
dec
jp
push
mov
rcrb
outsb
sbb
pusha
dec
pushl
cmp
xor
popa
xor
pop
repz
jle
mov
adc
sub
sahf
scas
roll
push
inc
mov
incl
adc
das
enter
mov
rolb
decl
cmp
inc
mov
mov
movb
pop
repnz
add
inc
xchg
sub
ret
jmp
in
add
les
push
dec
decl
test
aad
sar
inc
sbb
xchg
enter
rcrl
xchg
xchg
and
lcall
je
aad
adc
dec
mov
mov
add
aas
add
adc
add
push
addb
pushl
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
decl
pushf
adcl
or
stc
jb
loopne
cmp
subb
add
mov
sub
add
imul
jg
sbb
jp
fbstp
mov
sbbb
out
mov
add
lcall
ja
addr16
push
loope
cmp
call
add
scas
les
mov
add
cli
add
jl
mov
sar
add
dec
shll
add
stos
ret
inc
inc
or
pop
popa
or
incl
mov
ljmp
in
jg
adc
adc
and
clc
mov
test
repnz
and
mov
ret
ljmp
outsb
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
push
scas
enter
test
into
mov
sbb
add
addl
sub
cmp
mov
mov
mov
push
pusha
add
incl
xchg
fs
fnstcw
fdivs
mov
or
clc
sti
ljmp
and
add
adc
repz
pop
xor
inc
or
andl
movsb
mov
sar
pushl
inc
mov
dec
xchg
fsub
je
adc
bound
sub
jns
iret
fs
scas
lds
push
xchg
imul
loopne
subb
sbb
push
aaa
jmp
out
mov
lcall
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
pop
icebp
inc
ljmp
or
or
mov
xchg
xor
mov
sub
add
cltd
sbb
pop
cmp
test
movsb
xor
data16
jae
rorb
push
xchg
sub
dec
jg
rcrl
pop
xchg
and
lcall
insb
xchg
cmp
fs
add
jl
mov
pusha
loopne
outsb
sub
xor
mov
or
pop
mov
sbbb
test
andl
inc
mov
jmp
mov
add
adc
lcall
pop
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
lret
mov
and
or
enter
addr16
sarl
psubusb
es
mov
inc
add
lock
lcall
jg
inc
add
sbb
xlat
xor
adc
lea
outsl
pusha
call
incl
xorb
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
stos
out
adc
jmp
sbb
add
inc
mov
mov
ljmp
call
push
push
stos
adc
dec
pusha
popa
sar
and
add
push
add
pop
fcoms
stos
call
pop
ljmp
push
cmpb
incl
and
add
add
mov
or
nop
xlat
lret
jg
icebp
pop
pop
sti
add
je
fbld
push
es
xchg
fdivr
ljmp
js
sbb
mov
jmp
dec
rdtsc
movsb
sub
das
cli
or
jge
dec
cli
jp
adc
sbbb
mov
fsts
mov
inc
mov
dec
mov
cwtl
jecxz
lock
shlb
call
xchg
dec
gs
decl
repnz
lods
mov
dec
cld
pop
xchg
pusha
leave
sbb
mov
sub
push
mov
pop
sub
stos
mov
xor
jmp
std
add
sbb
push
lods
adc
shlb
xor
adc
mov
faddl
aas
push
sti
jmp
push
mov
add
jg
test
jns
jg
sbb
lock
cmpsl
inc
inc
js
shlb
add
nop
decl
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
mov
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
cwtl
decl
jg
sub
lods
push
push
or
sub
xchg
and
sbb
cmc
xor
insb
mov
inc
push
cmpsl
xor
jo
and
jle
dec
dec
push
ss
inc
sub
and
cmpsb
pop
movsb
data16
jb
mov
inc
jo
jmp
xor
adc
jne
sbb
add
or
test
jns
add
mov
or
lcall
pop
je
mov
out
push
or
mov
jne
testl
aas
enter
dec
sub
cmp
sbb
and
cmpsb
fcomip
xchg
mov
dec
or
popa
jno
push
xorb
decl
sbb
xchg
or
add
add
mov
testb
add
inc
test
fcomip
add
add
and
orl
add
js
loopne
cmp
push
cld
rcrl
push
adc
or
icebp
adc
mov
sar
mov
movsb
add
test
pop
add
movsl
xlat
adcb
in
out
decb
inc
sub
jg
jo
dec
ret
xlat
pop
mov
mov
pop
and
nop
enter
add
mov
add
mov
pop
cmp
add
sub
mov
incl
add
data16
jge
sub
sub
mov
bound
fdiv
add
add
test
roll
cwtl
sahf
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
decl
lock
mov
push
mov
lahf
jno
jl
cmp
or
push
push
lret
jb
ret
sbb
ljmp
shrb
dec
and
lock
xlat
pop
sbb
fldl
test
mov
xchg
js
ret
jl
push
pop
cmp
jge
push
cli
idiv
ljmp
bound
in
sub
sahf
movsb
xchg
pop
and
leave
fadds
dec
jbe
mov
cmp
jle
adc
fcoml
push
nop
jg
decb
fdivrs
xor
adc
or
jmp
dec
jmp
outsl
mov
sbb
mov
outsb
cld
loope
adc
jg
pop
push
outsl
dec
adc
adcl
sahf
rolb
add
insb
sbb
loop
shl
sbb
lahf
ret
in
dec
sbb
clc
adc
mov
call
push
push
jno
pop
pmaxsw
mov
jo
ljmp
inc
and
cmp
or
adc
xlat
adc
add
test
fmull
push
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
ret
sar
cmpsl
popa
stc
call
lods
and
sbb
pop
cld
call
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rcll
fcomip
cmc
mov
repz
pop
mov
mov
jmp
lret
or
in
das
clc
dec
into
cmp
fadds
lret
cs
jecxz
in
call
sbb
push
push
push
mov
adc
adc
rcrb
leave
push
push
push
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
cmp
dec
xor
divl
and
sub
rep
mov
and
add
xor
les
add
jl
jmp
call
std
aas
dec
sbb
mov
cmpsb
inc
or
add
in
pusha
push
test
decl
jmp
cld
mov
add
aas
cmpb
cmc
or
jne
ljmp
pop
jnp
or
add
ret
add
jmp
rcrl
sti
push
pop
pushl
sbb
inc
add
mov
test
and
sbb
dec
or
push
fcomip
int
bound
in
cmp
addb
jg
call
mov
clc
or
rolb
je
fbld
push
ret
mov
sub
cmp
add
push
jmp
xor
mov
xchg
add
sbb
push
add
ds
sub
jo
ja
ljmp
pop
enter
addr16
inc
add
imul
jbe
pop
mov
decl
inc
jns
mov
add
dec
fsubr
xchg
pop
loope
sbb
testb
add
test
pop
in
add
sub
mov
jl
xchg
outsb
fstps
add
mov
iret
push
sub
pop
sbb
cli
decl
cmpsl
dec
push
sbb
or
cwtl
nop
pusha
movl
mov
arpl
inc
adc
int3
sha1nexte
lock
mov
inc
add
xchg
fiadds
pop
adc
neg
lret
call
mov
push
inc
bound
mov
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
incl
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
decl
add
push
add
pop
lahf
add
je
mov
or
xor
cmp
incl
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
andl
xor
add
mov
fbld
ds
cmp
fs
das
clc
call
mov
loopne
data16
or
dec
xor
or
jbe
jp
xchg
call
sub
test
vfmadd213pd
mul
mov
xchg
add
dec
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
adc
inc
rcrb
mov
movb
orb
lock
add
dec
rclb
flds
cmp
das
clc
xor
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
lcall
repz
leave
ljmp
mov
push
add
mov
clc
mov
cmp
and
imul
and
js
popa
pop
pop
or
pop
mov
mov
ja
decl
add
cwtl
aas
sbb
jmp
add
add
mov
sub
decl
jb
insb
fcoms
jne
push
out
int
ljmp
fbstp
mov
dec
push
jle
js
sub
fidivs
in
inc
mov
mov
push
xor
ret
andb
sub
inc
nop
jbe
adc
addb
ret
or
incb
pop
add
pop
aad
test
jmp
je
add
incl
add
sub
leave
jne
cmp
pop
jns
mov
pop
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
call
std
cld
and
dec
mov
mov
sbb
setg
pop
pop
loope
jo
jl
inc
cld
call
orb
pop
loope
dec
rolb
or
pop
jg
add
mov
and
xor
mov
and
jne
loop
add
mov
sub
or
roll
popa
mov
push
call
hlt
pop
push
push
inc
and
dec
clc
jae
in
cld
push
push
das
push
je
add
call
push
xchg
cs
sub
xor
xor
movl
scas
clc
mov
clc
mov
enter
lcall
add
inc
subb
sub
mov
sub
add
loop
clc
or
sti
mov
pop
sub
dec
inc
push
push
xor
pop
inc
add
insb
popa
cmp
pusha
cmp
push
sub
add
div
je
mov
inc
push
add
popa
sbb
mov
inc
xchg
fimuls
adc
add
pop
hlt
jo
xor
cmpsb
and
sbb
push
push
lcall
jl
cs
add
sbb
out
mov
ss
incl
cld
js
hlt
jbe
xchg
pushf
adc
mov
cs
rcrb
divb
mov
enter
incl
lret
sub
and
call
cmp
cwtl
dec
add
add
mov
ds
sbb
inc
out
sbb
push
pop
incl
cld
add
mov
call
xchg
sub
lret
xlat
or
add
rolb
push
sbbb
pop
movsb
mov
in
leave
mov
call
rcrl
pop
addr16
in
cmp
call
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
push
lcall
jo
add
adc
push
and
movsb
daa
add
ret
mov
les
lcall
call
rolb
shll
add
add
scas
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
out
clc
pop
lock
nop
pop
sbb
call
pop
add
ja
adc
pop
loopne
inc
sbb
test
push
mov
mov
in
loope
hlt
out
je
adc
add
in
pop
or
or
sbb
fwait
repz
pop
sbbb
or
inc
add
lret
or
incl
sbb
add
xor
pop
and
or
call
add
clc
cmp
in
jp
lret
aam
cli
mov
call
cmp
pop
pushf
xor
loope
sbb
adc
imul
in
push
mov
decl
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
ljmp
clc
incl
mov
jmp
loopne
jle
push
adc
movsl
cwtl
leave
mov
sbb
popa
sub
or
jne
or
mov
push
ret
outsl
pop
pushf
add
sbb
std
aaa
add
imul
loope
pop
push
loop
cmp
call
adc
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cli
or
cmpsb
cmp
cmpl
push
sbb
call
cld
call
or
mov
decb
test
lret
push
dec
call
adc
mov
mov
cmp
jg
push
cli
mov
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
ret
cmp
xor
sub
xor
fimull
sti
mov
or
popa
mov
sub
incb
out
pop
cmp
add
add
add
fildl
ljmp
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
scas
clc
or
pop
add
shlb
mov
stc
or
dec
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
std
fcomip
outsb
les
and
mov
shlb
jmp
sahf
enter
push
push
mov
clc
mov
jno
mov
in
add
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
mov
add
cmpsl
adc
dec
das
or
je
jg
outsl
jg
loop
jne
sbbl
xchg
mov
incl
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
jg
pushf
das
enter
xchg
adcl
mov
xor
and
mov
mov
lcall
fs
arpl
ljmp
and
mov
dec
xor
cld
push
push
or
and
test
cmp
jg
ljmp
pop
push
push
push
or
enter
stos
adc
mov
outsb
xchg
push
xor
mov
incl
push
mov
and
add
std
lock
add
inc
mov
pop
icebp
fwait
xchg
push
addr16
adc
push
adc
sub
lock
decl
cmp
scas
fs
xor
mov
jo
pop
cs
jg
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
fcomip
ljmp
xor
cmp
aas
jg
pop
repnz
in
call
inc
add
add
jecxz
dec
rorb
pusha
jle
fdivr
inc
aas
sub
xchg
mov
pop
xor
sub
cmp
cs
popa
call
push
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
lcall
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
ljmp
lea
pop
and
pop
sub
mov
or
xchg
repz
lock
jmp
lret
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
out
cli
stos
mov
sbb
rorl
fdivs
ss
sbb
inc
leave
cli
inc
mov
pop
or
add
aaa
nop
fldenv
xchg
call
xchg
inc
stos
or
and
std
stos
in
mov
mov
hlt
dec
adcb
inc
cmp
mov
xchg
push
subl
je
hlt
dec
add
test
dec
pop
pushf
xchg
scas
pusha
ds
je
push
or
lcall
add
add
test
jle
dec
out
xchg
xor
mov
decl
cmpb
call
addr16
ds
mov
movsb
shll
add
sti
add
dec
xchg
xor
loopne
out
xor
pop
lock
cmp
add
cmpb
test
daa
insb
shrl
in
xchg
mov
push
adc
jge
mov
movsl
popl
jmp
add
or
test
mov
inc
movsb
adc
call
aaa
cs
or
mov
icebp
or
decl
hlt
inc
or
inc
mov
mov
xor
lcall
lcall
add
adc
jne
or
movb
mov
dec
ret
and
testl
aaa
inc
inc
sbb
incl
inc
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
nop
jae
lcall
incl
cmp
adc
mov
call
mov
pop
clc
pop
inc
add
add
decl
repnz
cmp
push
mov
xchg
sub
mov
incl
loop
mov
push
shr
lcall
leave
sbb
mov
pop
pushl
ja
push
and
push
cwtl
pop
push
add
jae
cmp
add
mov
hlt
data16
mov
scas
clc
pushl
sub
ret
add
jb
lock
loope
sti
and
and
cmp
mov
jg
test
sarb
sub
add
mov
sub
pop
or
decl
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
ljmp
or
cmpb
sysret
mov
shl
out
cmp
add
jg
pop
push
cld
xor
sub
mov
cmpl
mov
add
lret
pop
mov
mov
faddp
sub
push
outsl
fisubl
rcrl
cmpsb
inc
leave
and
das
mov
push
mov
push
cmp
mov
popf
jle
gs
mov
mov
jmp
adc
sbb
inc
adc
cs
ret
sub
jl
lock
fcomip
lock
push
ss
push
lea
call
imul
pusha
sbb
xchg
add
or
sbb
inc
add
mov
jg
mov
dec
cld
fisubl
and
inc
jg
shl
pop
inc
add
jg
xchg
js
adc
pop
pop
testb
xchg
mov
outsb
xchg
ljmp
mov
movb
jle
push
stc
cmp
jo
sbb
jne
pop
dec
or
ljmp
movl
xchg
cld
hlt
outsl
add
pop
movb
inc
movsl
mov
cmp
and
pop
in
incb
mov
jp
lock
pop
in
xor
es
pop
push
xchg
icebp
or
ljmp
and
push
add
jge
fs
sbb
sub
push
icebp
ja
add
xchg
inc
and
jmp
popf
add
fldlg2
mov
cmp
mov
lds
loope
xchg
inc
lret
mov
cmpsl
push
loop
roll
push
or
jmp
rcll
push
inc
sbb
pop
add
or
add
pop
jo
mov
fcomip
imul
rcrb
in
adc
gs
inc
xor
bound
and
xor
pushl
ret
sbb
push
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
cli
incl
add
cmp
and
repnz
scas
pusha
add
rcrl
push
lcall
jmp
popa
jo
ljmp
mov
leave
xor
cmp
decl
add
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
and
popl
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
aaa
add
mov
sar
add
push
sub
push
lods
ljmp
js
into
ja
xchg
cld
add
jne
and
add
mov
iret
lret
arpl
add
bndldx
push
push
pop
aas
jae
dec
clc
ljmp
inc
or
stos
add
pop
call
push
push
push
aam
in
mov
dec
xor
inc
cld
dec
adc
mov
mov
adc
aas
push
aam
fadds
into
inc
add
jmp
lcall
out
outsb
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
outsl
mov
decl
xchg
push
mov
lcall
loope
jp
int3
ret
dec
ljmp
and
decl
fmuls
pop
inc
add
movb
lcall
ret
add
andl
or
lcall
or
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
jmp
stos
popa
jecxz
lret
pop
adc
adc
std
das
xor
movsl
fcoms
inc
les
inc
xchg
ds
push
mov
sbb
sub
xchg
paddusb
movsb
adc
nop
incl
cld
incl
push
lds
int3
pop
pop
scas
xchg
mov
and
mov
es
pop
jl
cmp
jge
or
xchg
test
sbb
push
hlt
leave
xchg
outsl
cli
jmp
add
xor
pmulhw
adc
sahf
outsb
mov
ljmp
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
sti
adc
lea
sub
jg
add
push
lock
cwtl
dec
xchg
fildll
xchg
std
pop
cmpb
mov
ret
js
mov
inc
pop
xor
jle
jg
pop
inc
aad
adc
cmpsb
lds
or
mov
scas
cli
in
pop
xchg
push
xor
inc
cmp
jle
jno
jbe
lret
outsl
clc
mov
hlt
cmpl
cmp
pop
add
dec
mov
popa
sbb
lcall
jmp
or
cmp
and
scas
adc
fdivl
or
xchg
add
xor
sar
dec
sarb
icebp
push
cmp
mov
out
loop
jmp
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
pushl
sbb
cmp
sub
add
lcall
add
lock
dec
pop
sub
cmp
and
jne
lods
loopne
adc
push
push
scas
push
ficompl
push
or
test
cmp
dec
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
pop
sbb
lcall
lock
sub
push
cmp
add
out
clc
pop
or
mov
xorl
dec
call
cltd
and
jmp
cmp
call
sub
in
and
cs
jg
push
mov
and
inc
repnz
ret
scas
jl
push
js
cwtl
popf
ret
out
adc
cmpsb
movsb
in
xor
cmp
in
sub
enter
pushl
cmp
sub
xchg
sbb
clc
or
dec
or
sar
scas
decl
sarb
adc
jnp
xor
jmp
scas
ja
clc
jmp
mov
adc
or
and
out
clc
aas
xor
push
fildll
sbb
push
or
jo
in
add
test
shrl
pop
stos
sbb
and
push
lock
fs
call
mov
sub
adc
add
mov
push
dec
xchg
loop
loope
jmp
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
pop
loopne
out
add
jmp
nop
or
jmp
js
aas
pop
jge
aas
movsb
repz
decl
pop
or
xchg
sti
push
mov
int
repz
push
lahf
mov
call
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
cld
popf
inc
lock
adc
and
lahf
cs
and
xor
cld
xchg
cs
cmpb
xchg
stos
jo
and
mov
cltd
lds
test
cld
ljmp
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
scas
clc
pushl
test
or
cmp
xor
and
daa
stos
adcb
gs
inc
add
jl
je
outsl
cld
sbb
mov
pop
push
rorl
sub
xor
ficoml
rorb
jbe
adc
addb
stc
pushl
pop
xchg
push
cmp
inc
gs
enter
add
jmp
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
ljmp
inc
push
adc
insb
lea
xchg
scas
cli
aaa
cld
pop
loop
inc
xchg
jne
xchg
add
mov
imul
and
cmpsl
pushl
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
cmp
clc
mov
mov
add
test
out
pop
test
xor
inc
lcall
shll
subb
or
nop
inc
mov
popa
and
jge
hlt
lcall
xchg
or
pushf
leave
in
push
add
and
fdivl
adc
xor
jg
das
cli
inc
sub
cmpsb
dec
pushl
sub
dec
dec
cltd
ljmp
add
pushl
xor
add
leave
pop
aaa
xchg
inc
incl
mov
loop
add
adc
pop
adc
clc
or
add
in
sub
adcw
or
push
inc
in
and
in
nop
pushl
std
pop
push
and
pop
push
xor
loop
add
loop
xchg
into
mov
fs
fiaddl
adc
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
ljmp
dec
sub
in
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
outsl
cli
call
adc
out
jno
pop
pop
sbbb
popa
mov
push
push
sbbb
decl
shrl
mov
int
clc
or
dec
sbb
push
pop
and
outsl
nop
fwait
aam
adc
mov
lds
jb
mov
orl
adc
and
sbb
out
incl
cld
inc
stc
mov
pop
or
outsl
out
mov
xchg
fildl
cmp
sub
mov
clc
jg
je
jmp
call
mov
ret
sahf
add
pop
aas
pusha
cmp
scas
mov
sbb
jge
lods
add
or
fwait
ret
xor
fucomip
bound
jle
daa
add
adc
xchg
in
push
fmuls
and
adc
adc
xchg
jmp
mov
or
dec
pop
pop
sbb
int3
jnp
and
pop
vrangess
and
push
call
push
fdiv
add
inc
inc
lcall
push
adc
lcall
jnp
adc
push
aam
mov
mov
pop
jmp
aaa
std
in
pop
clc
mov
sub
jecxz
es
enter
jg
and
push
mov
dec
cmpsb
dec
jmp
add
jmp
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
and
rclb
mov
cmp
pop
clc
cltd
inc
push
or
sbb
incl
dec
mov
push
and
push
sub
cli
mov
inc
hlt
lcall
add
std
sub
sahf
fists
jnp
lock
decl
outsl
xor
lds
xor
add
scas
fcomip
ss
sbb
movb
jne
std
scas
cmpsb
loop
xor
add
int3
pop
cmp
aaa
std
call
add
sbb
push
testl
flds
rol
xchg
pop
lcall
xchg
or
inc
add
add
mov
roll
int3
push
orl
test
fcomip
incl
jmp
push
arpl
and
ds
repz
gs
cmp
inc
sarb
movsl
sub
xor
lds
mov
dec
loopne
cld
add
cli
xor
hlt
outsl
orl
and
idivb
mov
jg
incl
sbb
jo
js
addl
dec
loop
mov
lcall
pushl
cmp
roll
or
jl
jp
popf
rcrl
out
push
push
sbb
add
or
pop
mov
call
out
cli
cmp
sarb
daa
jns
add
xchg
lock
call
sbb
inc
and
aad
ja
add
push
jle
push
lcall
cmp
lds
test
imull
sbb
sarb
mov
cmp
cmp
mov
push
andb
or
orb
mov
loopne
jp
sbb
lcall
ljmp
scas
dec
push
xlat
cmp
lock
jg
std
bound
in
inc
lods
in
jmp
jg
lcall
decl
fdivl
ficompl
imul
pusha
push
hlt
ljmp
incl
add
popf
xor
lock
push
repnz
push
cs
adc
inc
lcall
lods
jmp
enter
cli
js
or
ret
incb
adc
loope
cmp
xchg
pop
hlt
mov
inc
push
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
cmp
or
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
fcomip
xlat
incl
cmpsb
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
incl
clc
push
xor
dec
repnz
fisttpll
or
cld
jg
pop
bound
and
mov
movl
dec
rclb
jl
inc
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
ljmp
add
rorb
movsl
js
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
ljmp
push
push
sbb
pop
sbb
cmp
std
cmp
ret
jmp
ljmp
sub
cld
add
ds
xor
jmp
xchg
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
cli
dec
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
push
aas
jae
jg
incl
sbb
mov
hlt
mov
call
clc
decl
mov
cmp
js
adc
sar
mov
add
add
sub
cmp
add
dec
sbb
ret
clc
lcall
test
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
mov
loop
repnz
inc
add
cmp
xchg
add
call
xor
xor
repz
jge
or
pop
lret
adc
incl
jmp
cli
loop
pop
push
sub
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
lcall
filds
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
fists
scas
mov
loopne
cli
je
outsl
mov
push
dec
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
incl
das
add
test
inc
jb
mov
adc
je
ljmp
mov
and
mov
and
call
push
mov
mov
mov
shrb
or
aas
sub
lds
sbb
dec
lcall
flds
in
mov
je
lock
xchg
inc
add
inc
mov
incl
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
ljmp
out
jle
lahf
adc
mov
add
sar
decl
sub
cs
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
jmp
xor
adc
imul
jae
subb
dec
dec
subb
mov
je
std
mov
dec
movsb
sbb
lcall
fdivrs
movsl
add
stos
mov
xchg
inc
and
aad
mov
or
dec
test
daa
or
push
or
add
cwtl
inc
or
lcall
in
and
outsl
insb
lods
cmp
je,pn
xor
mov
push
add
dec
in
dec
adc
mov
cmp
push
inc
cld
cmp
aaa
cld
mov
inc
mov
mov
cmp
cld
jne
sub
xchg
mov
incl
cmp
out
sub
ret
fisubl
cld
jae
add
add
loopne
movsb
jge,pt
loop
mov
bound
js
lcall
call
cmp
pop
shl
lock
sub
decb
idiv
mov
dec
xchg
and
test
mov
cli
push
mov
stos
loopne
fbstp
cmp
mov
aam
das
mov
ret
addb
push
xchg
rcrl
pushf
fadds
mulps
and
nop
sti
mov
sbb
xchg
push
mov
leave
dec
in
scas
cli
ja
add
xchg
xor
dec
xor
imul
out
xchg
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
ljmp
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
cld
lcall
dec
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
mov
andb
dec
and
cltd
sqrtps
push
pusha
cmp
jg
and
cmp
and
sub
mov
pop
decl
push
ljmp
sub
jnp
enter
add
xchg
or
push
cmp
stos
sub
aad
hlt
outsl
incl
popa
push
lea
pushl
inc
gs
clc
fsubs
hlt
outsb
cld
inc
add
dec
addb
sbb
lds
add
dec
sbb
adc
jg
sub
pop
jmp
movb
nop
push
xchg
mov
inc
pop
pop
push
popa
sbbl
or
je
incl
loopne
leave
outsl
imul
adc
dec
add
xchg
mov
pop
ret
movsb
loop
push
mov
adc
ljmp
push
cwtl
xchg
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
lcall
sbb
fcomps
and
pop
add
jg
ljmp
jb
add
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
addr16
jmp
and
ret
fadds
inc
cmp
add
sbb
decl
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
inc
and
xchg
cmp
push
jecxz
sahf
sub
fisttps
cmp
adcl
nop
stos
cmc
pushl
or
push
inc
mov
mov
mov
in
fidivrs
nop
jbe
pop
movsb
or
mov
push
add
sbb
mov
popa
pop
adc
push
or
lret
mov
sarb
add
icebp
inc
movsb
pushl
dec
lds
jo
add
adc
lret
out
int3
adc
jl
or
fwait
sbb
outsb
stos
dec
jg
jmp
lcall
add
sub
mov
mov
aam
inc
test
pop
pop
ret
or
or
dec
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
pushl
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
mov
pop
lock
call
add
imul
jbe
icebp
mov
mov
mov
jle
inc
mov
and
inc
enterw
stc
ds
push
mov
jo
nop
sub
push
pop
add
inc
sbb
xor
push
pop
jmp
add
incl
jp
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
pop
jno
rorb
cmp
mov
addb
push
mov
xchg
add
pop
hlt
mov
pop
push
mov
incl
ret
xor
movsb
mov
push
sub
inc
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
mov
aam
loope
cmp
or
sbb
add
out
xchg
lods
ret
test
shll
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
or
cmp
push
mov
loop
test
decl
sub
pop
adcb
arpl
pop
sub
or
lcall
aaa
add
jl
pushf
cmp
call
aad
jae
jle
popf
loop
sbb
xchg
fldt
push
in
dec
sbb
fmulp
shl
jmp
call
mov
xor
jg
jo
and
mov
ret
neg
dec
aam
inc
add
add
xor
xchg
push
packuswb
sar
clc
decl
out
cmc
ret
andb
aas
test
decl
jno
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
cmp
adc
mov
sub
sbb
and
lcall
add
and
adc
addb
xchg
rcrb
and
sub
or
test
pop
jecxz
add
mov
xor
mov
add
cli
jbe
cmp
cmp
pop
cmp
xchg
add
sub
pop
mov
add
jmp
lods
jo
pop
ljmp
adc
fdivr
nop
lods
outsb
xor
xchg
dec
ljmp
add
or
push
push
add
int3
pop
into
sbb
rorl
mov
incl
pop
jp
add
movsl
sbb
loopne
palignr
loopne
add
lret
into
js
or
sbbl
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
lcall
aas
cmp
test
lds
jg
add
cmpsb
iret
decl
pop
hlt
call
loopne
mov
lds
cmp
inc
loopne
jmp
pop
mov
test
stos
or
jg
xchg
push
mov
inc
imul
add
cmp
outsl
clc
decl
shlb
cmp
fimull
inc
sahf
popf
sti
ljmp
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
incl
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fimull
testl
xchg
bswap
sar
jg
jmp
cmpsl
pop
faddl
fdivrs
mov
push
add
jecxz
outsb
or
xchg
aaa
xchg
addl
xchg
mov
xor
in
lcall
mov
lock
push
movsl
mov
popa
sti
in
popf
and
cld
stc
repz
mov
add
subb
and
pusha
les
call
pusha
bound
jnp
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
mov
adc
ljmp
mov
push
dec
in
mov
jge
pop
jo
add
sbb
leave
icebp
call
jmp
or
inc
pop
adc
cmp
or
fcomip
lcall
pop
iret
add
sub
inc
jecxz
mov
dec
pop
mov
outsb
jne
xor
push
shl
add
xlat
cmp
add
jb
ja
into
rep
sub
mov
test
incl
pop
add
in
movsb
xor
shr
push
pop
push
mov
xor
out
xchg
out
loop
push
and
add
or
addl
pop
mov
dec
add
pushl
mov
mov
shrb
adc
mov
cli
jnp
push
jb
cmp
in
add
enter
cmp
loop
call
hlt
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
incl
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
ljmp
pop
mov
cmp
cmp
dec
cmp
xchg
mov
inc
call
divb
cli
lock
push
push
add
sar
inc
xor
shrb
add
int3
ja
jmp
or
inc
xor
pop
xchg
mov
xor
les
in
sub
pop
add
std
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
or
addr16
cli
insb
daa
jmp
int
add
or
xchg
decl
lcall
xor
adc
es
call
jl
add
adc
adc
sub
sbb
mov
stos
mov
and
mov
clc
scas
jge
adc
xchg
pusha
movq
andl
jmp
aas
js
pop
sub
les
lret
dec
adc
mov
clc
adc
xchg
xor
inc
addr16
or
int3
scas
xlat
add
fildll
xchg
and
ds
inc
adc
dec
stos
bound
pop
icebp
jg
jl
jle
sub
xor
dec
dec
in
jns
sbb
insb
cld
ljmp
add
das
mov
push
js
pop
test
mov
adc
push
jns
dec
pop
push
sub
sub
fisubl
sbb
test
mov
mov
inc
ljmp
fs
adc
pushf
ret
addb
xor
and
cs
jmp
call
int3
sub
rorb
neg
add
mov
ljmp
and
or
mov
lret
push
or
movsb
add
call
outsb
decl
bnd
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
mov
adc
movsb
dec
hlt
add
inc
dec
push
lcall
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
lcall
jmp
xchg
cmp
or
cmp
pop
sub
ret
sbb
sbb
ret
call
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
in
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
add
mov
sbb
shrb
and
in
jb
cmp
mov
ljmp
jl
js
je
cmp
insb
add
fs
pusha
enter
pop
jb
std
ljmp
ret
add
call
or
aam
shrb
int3
add
enter
fcomip
ja
mov
add
lods
sbb
add
movsb
and
mov
shll
mov
and
push
call
movzwl
sar
mov
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
scas
dec
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
jg
call
push
jle
cmpxchg
ret
dec
pushf
add
pop
bound
pop
and
xor
or
decl
and
push
repnz
and
xchg
cmc
enter
push
clc
cmp
sbb
and
sti
jle
xchg
std
enter
add
mov
jecxz
lcall
fs
and
xchg
out
push
or
jmp
cmp
jmp
add
xchg
in
enter
out
jb
cmp
sbb
mov
jl
aad
xchg
cmc
cmp
in
fidivrl
fistpl
pushf
frstor
ficoms
pop
push
shl
inc
cmp
add
adc
xchg
jg
call
inc
xchg
leave
jb
cmp
lret
sbb
and
and
into
xchg
mov
mov
mov
pushl
inc
mov
mov
inc
mov
and
ljmp
mov
in
mov
sbb
mov
movsl
aaa
call
ljmp
cltd
xchg
sbb
push
jg
push
inc
xor
xor
test
ljmp
insb
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
decl
push
mov
pop
mov
and
leave
lahf
add
mov
incb
sub
adc
jge
jo
loope
xchg
pop
idiv
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
xlat
ljmp
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
insb
jg
outsl
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
pop
mov
sbb
je
loopne
popa
dec
insb
lock
fstps
cli
jmp
adc
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
decl
cs
or
inc
imul
mov
pop
testb
aas
pop
clc
and
push
or
push
and
jnp
and
fimuls
or
mov
std
incl
xor
je
inc
imul
dec
add
jmp
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
cmpsb
fcomip
outsl
aam
inc
test
lcall
sarb
loopne
pop
call
pop
cwtl
insb
xchg
sbb
xchg
mov
dec
call
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
in
lcall
mov
cld
mov
pop
jae
jo
movsb
xchg
in
xor
xor
add
push
mov
fadd
mov
lcall
add
inc
arpl
pop
and
incl
add
mov
cmp
scas
out
inc
pop
adc
dec
int3
adc
inc
pop
cmp
test
pop
pop
and
ja
orb
les
imul
nop
adc
scas
pop
dec
inc
add
inc
out
dec
jo
imul
incl
sarl
mov
inc
or
mov
xchg
pop
push
mov
and
mov
sbb
inc
popa
outsl
xchg
fs
lock
push
test
call
cld
jmp
jb
push
mov
lcall
cmp
and
call
repnz
pusha
sub
dec
mov
incl
pop
add
add
xor
imul
ljmp
cmp
fcomip
decl
sbbb
cld
int3
hlt
lret
mov
stc
mov
sbb
shrb
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
in
incl
mov
push
lea
daa
js
lahf
pusha
inc
or
aam
les
jl
dec
sub
mov
decl
xlat
shrl
pop
pop
loope
adc
outsl
mov
pop
cmc
jp
ja
sub
and
pop
jne
jmp
and
jbe
push
mov
call
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
scas
std
ljmp
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
ljmp
sub
pop
lods
xchg
sub
mov
adc
inc
push
ret
pushl
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
clc
and
call
pop
sbbb
add
push
jge
mov
mov
push
sbb
dec
sub
adc
add
inc
ljmp
call
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
push
sbb
ja
test
xchg
fcoml
sub
fs
push
incl
inc
xchg
or
insl
adc
dec
pop
mov
sub
xor
lods
add
shll
or
mov
fisttpl
adc
and
fistpll
cld
jne
xchg
cmp
xchg
dec
and
add
sub
add
fs
aas
cmp
fisubrl
xchg
fsubrp
cmc
sbb
test
jns
in
pop
nop
dec
stc
push
and
push
imul
popf
icebp
inc
cmp
pop
add
les
rorb
call
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
cmp
dec
push
movsb
xor
xorl
cli
pop
dec
mov
test
mov
jmp
sub
sbb
xor
jo
ja
mov
test
or
mov
clc
mov
push
mov
negb
adc
jo
stos
enter
stos
add
mov
xchg
sti
inc
jnp
add
sub
rcrb
inc
cmp
incl
shrb
and
sbb
mov
jo
cmp
push
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
std
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
sahf
rolb
adc
push
dec
mov
shlb
jg
sub
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
incl
stos
and
adc
or
in
cmp
data16
popf
inc
out
es
cmp
arpl
sub
or
lret
sub
packuswb
bnd
sbb
sub
push
dec
in
cwtl
jg,pn
decl
jb
inc
add
sarl
andl
lock
es
mov
incl
shlb
lret
daa
pop
push
sbb
test
adc
jl
stos
jmp
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
inc
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
dec
push
test
fldl
or
jp
add
sbb
mov
jnp
mov
xor
xchg
push
mov
incl
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
dec
sbb
mov
pop
cmp
sbbb
icebp
loop
cwtl
push
fcomip
mov
adc
sbb
sbb
in
fimuls
xorl
sbb
and
mov
jb
pop
movzwl
pusha
pop
adc
mov
sbb
add
lret
idivb
jo
fstpl
mov
incl
pushf
sbb
xor
cld
and
movsb
or
es
hlt
test
decl
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
ljmp
sub
mov
push
cli
add
dec
lret
adcb
sub
shrl
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
adc
incl
std
push
pop
xor
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
jg
incl
pop
movsl
push
xchg
fs
dec
dec
mov
clc
rclb
enter
aaa
sub
pop
push
pop
add
movsl
mulb
push
mov
sub
pushl
mov
add
pop
inc
or
cltd
jo
push
subb
aas
ja
pop
loopne
dec
add
mov
in
xor
fwait
jmp
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
mov
cld
fwait
fldenv
in
lods
mov
push
pop
mov
sarb
mov
out
jne
cs
dec
test
cmp
inc
cld
sbb
push
roll
dec
push
fistpll
ljmp
add
xor
push
lea
inc
sbb
add
pop
sti
incl
in
add
jmp
pop
stos
cmp
arpl
dec
jl
stos
sub
incl
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
pop
cld
fnstcw
cld
sti
add
pop
jbe
mov
dec
je
movl
mov
add
arpl
jg
cmp
fcoms
and
idiv
lcall
mov
mov
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
ljmp
mov
addl
into
add
pop
rolb
cmc
ljmp
rclb
test
cmp
pop
or
adc
shlb
incl
aas
sub
sbb
jmp
xor
decb
inc
jmp
call
mov
pop
ficoml
adc
jo
jns
fnsave
pushl
bound
fists
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
jae
push
fildl
lcall
js
loopne
add
incl
cld
movsb
xchg
or
scas
jl
movsl
or
aaa
add
push
add
jmp
mov
and
or
jb
sar
mov
imul
mov
rolb
movsl
addb
xchg
jmp
loope
jmp
pop
cmp
ja
call
sbb
fstps
mov
test
hlt
es
pusha
xchg
fsubrl
inc
jmp
mov
cmp
iret
and
xchg
lea
xor
fadds
cmovle
pushl
adc
jle
mov
in
mov
or
jns
decl
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
out
cli
ljmp
shll
lea
inc
cltd
les
test
orb
jg
das
lcall
push
das
sarb
maskmovq
testl
jg
je
fwait
sbb
dec
into
icebp
call
mov
out
adc
mov
dec
ret
cld
fildl
push
mov
add
sub
idiv
call
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
adc
dec
call
xchg
decl
shlb
rorb
xchg
sub
fiadds
cmp
xchg
pushl
mov
psubd
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
incl
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
std
call
std
adc
dec
xchg
js
or
inc
xor
and
incl
pop
mov
daa
repnz
sbb
aad
pushl
mov
xor
mov
add
jmp
test
add
divb
call
fwait
mov
push
inc
dec
and
sbb
sub
xor
mov
and
loop
and
inc
inc
ljmp
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
cmpsb
call
std
and
lret
push
adc
lret
jbe
out
incl
mov
addl
xor
pop
mov
call
xchg
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
cmp
jmp
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
std
lcall
rclb
xchg
sti
lods
xor
sub
cltd
loope
imul
adc
lret
mov
cmc
addb
mov
test
sub
cmp
test
jecxz
movsb
jne
dec
outsb
add
out
aad
jnp
jmp
inc
xlat
mov
jo
ret
xorb
fstpt
cmpsl
dec
push
dec
sar
jmp
inc
cmp
adc
push
stc
adc
jne
pop
cld
ljmp
or
mov
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
stos
call
sub
push
xor
inc
insb
mov
fmuls
mov
add
in
decl
out
insb
cmp
fcmovu
xor
ljmp
nop
mov
fsubs
cmc
xchg
push
fimuls
cmp
xor
push
addb
inc
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
ljmp
add
pop
inc
push
cmp
cmp
xchg
imul
iret
scas
jg
je
sarb
ljmp
add
jg
lock
in
fildl
fdivs
or
xor
pop
jg
lcall
nop
pop
cmpsb
push
add
push
jo
fldl
push
imul
mov
pushl
data16
mov
loope
aas
mov
pop
xor
shrb
sarb
lcall
push
fs
pop
rcrb
adc
pop
jle
hlt
ficompl
fs
fisttps
jmp
xor
push
or
xor
push
cmp
cs
fdiv
sti
pop
dec
push
cwtl
sub
aad
inc
and
incl
imul
and
xchg
divl
pop
cld
jb
test
enter
loopne
add
sbb
adc
inc
fdivrl
rcll
call
add
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
ds
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
or
daa
ja
jle
add
aas
js
cmp
cltd
sbb
in
in
inc
xlat
in
jmp
bound
jle
mov
pop
dec
incb
lock
sub
jg
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
idivb
ret
or
dec
out
xor
and
mov
mov
pusha
in
lods
xchg
inc
adcb
outsl
mov
lcall
pushf
add
pop
or
hlt
inc
sbb
adc
or
cld
call
std
lods
push
std
enter
sub
mov
aad
or
push
pop
mov
incl
sarb
ret
dec
jno
and
daa
inc
jmp
add
jg
mov
add
jl
test
adc
jno
add
adc
in
and
push
xorl
lods
mov
sbb
add
or
push
cs
xchg
fsubrs
mov
xlat
cmc
fcomip
aaa
mov
mov
sub
shl
add
in
loopne
dec
insb
sub
popf
fistpll
pop
mov
adc
mov
icebp
aas
cwtl
je
ljmp
pushf
dec
dec
stos
mov
pop
in
testb
adc
jmp
add
mov
inc
push
add
fldenv
push
hlt
adc
lret
inc
mov
ljmp
push
and
mov
or
add
jo
pop
mov
adc
movswl
call
pop
jns
sub
cs
out
jle
fstl
stos
int3
dec
bound
dec
xchg
fildll
loope
add
dec
scas
or
fdivr
push
cld
loop
add
sbbb
sahf
loope
adc
push
loopne
clc
stos
mov
fcompl
and
xchg
mov
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
fisubl
cmpsl
in
xchg
sub
xchg
dec
adc
int
adc
mov
push
cwtl
sbb
add
pushl
mov
dec
shrb
mov
cld
adcb
jb
pop
pop
inc
adc
ljmp
repnz
idiv
test
in
dec
push
orl
mov
lcall
sub
mov
bound
mov
sbb
test
mov
lcall
roll
jmp
fimuls
mov
mov
pcmpeqb
call
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
adc
fcomps
lea
out
push
out
adc
dec
repnz
add
jno
rol
in
mov
pushl
jecxz
xor
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
mov
daa
sub
lea
adc
dec
cld
sbb
testl
xor
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
jmp
push
cld
in
mov
xor
ss
inc
jp
mov
aaa
pop
lock
decl
jmp
dec
pop
data16
mov
lea
xchg
sub
dec
jne
scas
and
mov
sbb
sbb
pushf
sub
or
add
add
jg
lods
mov
jno
lods
push
xchg
fwait
push
call
sbb
mov
add
push
xor
les
fildll
xchg
cmc
or
pop
aas
cld
shlb
lret
cwtl
xor
loop
dec
adc
add
je
mov
xchg
adc
adc
pop
xchg
mov
ljmp
adc
inc
test
inc
sub
xor
test
push
xchg
xchg
xorb
jmp
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
jmp
add
pop
movsb
mov
je
and
jne
and
cmp
in
cmp
xchg
pop
push
sub
enter
add
inc
add
mov
mov
mov
lcall
sbb
adc
add
and
sarb
out
cld
lcall
jbe
mov
cld
cmp
push
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
or
fstpt
mov
sti
call
pushf
mov
das
add
jg
call
stc
and
inc
stos
je
rorl
pop
add
cwtl
ljmp
fcomip
dec
adc
jne
pop
clc
sti
add
add
pop
xor
incl
cmp
cmp
subb
cmpsb
push
ud0
test
add
decl
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
decl
scas
push
push
add
push
mov
andl
mov
jmp
xor
adc
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
incl
xchg
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
or
mov
fadds
aaa
enter
dec
mov
je
jmp
xor
lock
mov
mov
lret
les
sbb
inc
cmp
aam
pop
mov
je
call
xor
push
addr16
dec
movsl
add
out
sub
or
ss
dec
std
fistps
pop
push
mov
and
fs
add
or
cmpsl
dec
xchg
mov
xor
sbb
add
shrl
jmp
sbb
lcall
std
mov
cld
jge
dec
movsb
imul
in
arpl
popf
or
cli
mov
pop
ret
out
pop
shr
pusha
xor
push
inc
rcrl
incl
imul
sub
mov
mov
add
call
cld
pushl
xor
mov
xor
in
dec
inc
hlt
test
stos
int
arpl
adc
ljmp
lahf
push
push
in
push
dec
das
push
or
ljmp
push
add
cmp
adcl
push
adcb
sbb
dec
cld
mov
mov
push
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
jmp
rclb
xor
adc
mov
jbe
in
test
mov
cmp
out
stos
jne
sarb
pop
mov
push
push
dec
and
sbbl
jmp
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
pushl
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
pushl
ljmp
fwait
pop
cmc
sarb
lret
dec
pop
fsubrs
fimull
add
cmc
ret
add
sub
and
mov
pushf
mov
fmuls
cld
add
push
std
or
xor
pusha
lret
push
mov
xchg
mov
fwait
cld
jmp
pop
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
test
push
adc
cwtl
cmpsb
insb
cmp
sbb
stos
mov
ljmp
shl
sub
test
test
xor
imul
out
add
das
pop
cld
incl
push
iret
js
fimull
sbb
add
mov
dec
in
repz
clc
decl
mov
adc
add
inc
ret
and
add
or
mov
push
cs
out
dec
lret
int
add
repz
inc
ds
xchg
add
loope
and
cmp
cld
ljmp
sbb
inc
xchg
and
mov
decl
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
div
incl
lret
pop
jbe
push
xor
jle
add
imul
pop
add
add
and
incl
pop
rcl
xor
ret
movl
shrb
decl
jae
add
test
lock
xorb
ret
add
imul
or
and
sbb
mov
mov
fnstenv
mov
sbb
pusha
mov
js
sahf
into
ret
adc
shll
add
cmp
push
xchg
mov
mov
iret
sub
pop
sub
clc
or
sbbb
mov
cmpsb
mov
add
mov
or
lods
popl
lock
movsb
push
xchg
mov
or
adc
incl
add
push
repz
mov
lcall
mov
jg
test
and
mov
push
sub
add
cmp
sub
je
sbb
enter
sbb
pop
enter
push
jo
mov
call
xor
cmpsb
mov
add
inc
pop
cmp
int3
int3
ffreep
push
nop
jmp
push
lret
mov
lahf
add
xchg
mov
jl
cmp
addb
sub
pop
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
decl
adc
mov
fs
or
aam
out
shlb
sbb
je
ljmp
jo
adc
in
arpl
add
in
ja
ret
incl
mov
xor
add
imul
out
add
sti
fmuls
cmp
jle
adc
pop
mov
add
xor
pushl
std
or
ret
push
xor
enter
fs
faddl
or
adc
push
sahf
pushf
and
add
call
inc
out
add
pusha
dec
call
inc
mov
jg
ljmp
movsb
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
jg
sub
scas
lea
and
pusha
xor
add
dec
jns
movsb
xor
out
call
mov
mov
add
test
xchg
cmp
addb
adc
ljmp
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
cli
call
mov
imulb
add
inc
and
sbb
jge
es
add
hlt
pop
adc
ljmp
add
hlt
add
sub
fs
pop
inc
adc
push
sbb
lock
ljmp
out
or
add
incl
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
ljmp
and
push
in
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
and
jae
and
xchg
add
adc
ret
mov
psubq
jnp
cmpb
movsb
pushf
les
filds
sub
xchg
xor
add
test
jmp
add
cmp
pushl
push
add
jge
xchg
cmp
mov
cli
mov
sub
lcall
mov
push
dec
fcoms
adc
and
faddl
mov
cli
push
out
loop
jl
dec
mov
adc
inc
xchg
int3
cltd
add
call
mov
pop
xchg
gs
add
in
nop
adc
ljmp
call
dec
incl
or
or
daa
add
pop
and
es
incl
adc
add
loopne
sub
dec
adc
mov
cwtl
or
jg
mov
dec
jmp
lcall
pop
xchg
imul
fisttps
inc
jo
fadds
adc
mov
fldlg2
aas
outsb
mov
incl
xorb
xor
fs
and
push
sbb
data16
rclb
or
or
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
idiv
fcomip
mov
inc
or
mov
or
js
mov
call
fsubrp
insb
mov
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
fwait
incl
inc
sub
fldl
lea
dec
push
xchg
adc
sub
repnz
xor
fcomip
adc
cmp
aam
xchg
adc
push
inc
cmpl
push
mov
in
shlb
nop
lock
cld
pop
loope
nop
add
fcomps
call
sahf
add
push
xcrypt-cfb
cmpsl
and
sub
sub
add
mov
loopne
xchg
add
insl
in
or
js
in
pop
xchg
cli
ljmp
shlb
lods
pop
cmp
xchg
lods
aas
sub
outsl
xor
and
mov
jnp
test
pop
ret
pop
mov
inc
loope
cmp
clc
in
int
cmpsl
mov
into
and
daa
add
mov
out
xchg
test
imul
nop
cs
push
pop
add
mov
lock
dec
fldcw
fisubs
inc
mov
mov
pop
jne
ljmp
push
cmpsb
pop
and
mov
sub
decl
mov
and
add
sub
loopne
stos
les
ss
xor
adc
pushl
pushl
add
nop
sbbl
or
adc
call
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
call
or
sub
xor
sub
shl
cmpsb
or
push
inc
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
lcall
sub
cwtl
pop
inc
xor
nop
sub
rclb
int3
dec
scas
add
stos
lcall
fcomps
add
lcall
mov
push
mov
call
push
aam
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
idiv
std
enter
mov
xor
mov
mov
cltd
inc
mov
or
inc
mov
dec
jne
adc
int3
push
xchg
stos
inc
ljmp
pop
jp
mov
pushf
mov
mov
mov
sbb
push
aam
pop
das
pop
in
repz
loope
in
adc
lcall
add
imul
pop
xor
or
std
stos
lea
je
xor
fiadds
rcl
inc
enter
repz
aas
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
das
and
ljmp
int
andb
loopne
testb
jg
incl
repz
mov
push
add
mov
call
lcall
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
mov
push
xor
mov
adc
aaa
adc
shrb
je
jmp
mov
call
add
jmp
addr16
andb
mov
jae
incl
add
pop
into
enter
loope
mov
jns
adcb
into
push
incl
or
cmp
add
ficompl
rolb
imul
dec
xorl
add
jne
push
push
mov
loopne
mov
and
add
dec
sbb
mov
push
out
or
nop
pop
lcall
sti
outsb
or
xor
pop
and
daa
mov
call
shlb
adc
das
cli
fwait
incb
cld
fnstenv
mov
sahf
adcb
mov
fcomip
adc
jae
xchg
jne
cmp
pop
xor
mov
incl
gs
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
pop
cmc
adc
mov
mov
out
pop
adcl
add
mov
push
cli
mov
adc
jno
add
in
fs
incl
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
pop
mov
sub
push
inc
loope
push
andps
lds
adc
add
mov
jmp
push
sub
jmp
adc
sub
icebp
or
decl
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
mov
push
shrb
mov
mov
je
jb
adc
sarl
or
leave
add
sar
outsb
ret
js
lahf
xchg
incl
test
in
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
clc
mov
out
sbb
add
add
out
push
stc
test
lcall
mov
or
jmp
add
fucomi
add
push
sub
lock
jg
incl
add
cld
xor
fucomp
clc
adc
push
pop
adc
lock
call
push
adc
cmpsb
sub
mov
add
dec
xlat
push
hlt
lcall
std
add
pop
inc
fmuls
pop
pop
sbb
ret
hlt
fistps
enter
xchg
adcl
jmp
mov
ljmp
and
and
cld
adc
add
add
sbb
xor
dec
icebp
iret
push
jge
fcoml
mov
cmp
std
adc
mov
inc
cld
mov
pop
or
lcall
or
pop
rcrl
mov
sub
add
ret
pop
inc
add
pop
incl
std
push
lock
hlt
clc
clc
inc
and
mov
mov
es
mov
sub
add
loopne
aad
std
mov
xchg
dec
jno
push
int3
pop
loope
insl
ret
xchg
cld
fs
jmp
or
inc
sub
int
insb
and
pusha
fimuls
dec
decl
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
hlt
push
and
cmp
incl
sbb
aas
add
xchg
aaa
and
xor
push
jmp
das
and
incl
push
push
add
add
rolb
or
or
jl
or
or
add
xor
xchg
mov
cmp
fcoms
call
add
or
xor
xor
mov
lock
rclb
add
andl
adc
jg
mov
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
adc
inc
or
sub
adc
jge
mov
cmovnp
or
decl
je
and
je
xchg
cld
mov
jmp
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
jmp
leave
aam
enter
adc
aam
push
sub
xchg
mov
jmp
sub
out
dec
pop
jmp
add
xchg
inc
xchg
and
lcall
enter
pusha
ret
nop
and
sub
or
mov
fwait
jle
mov
inc
mov
add
outsl
mov
ljmp
jo
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
ret
lret
or
rcrb
or
inc
pop
ret
stos
fcomip
out
cmp
imul
push
or
lock
stos
or
sti
adc
dec
sbbb
data16
fildll
xchg
pop
push
push
xchg
pop
sub
add
sahf
jo
call
mov
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
jb
outsb
push
inc
ret
sub
mov
cwtl
mov
or
and
sub
cli
pusha
push
nop
movsl
add
pop
lock
shlb
loopne
and
jbe
fcomip
mov
push
cmp
fnsave
in
mov
cmp
mov
or
mov
mov
mov
xor
xchg
add
fimull
sub
adc
mov
loopne
jl
mov
sbb
mov
ja
decl
lea
jno
cmp
test
aam
ja
ret
fiadds
cmp
mov
loope
call
push
adc
add
pushf
dec
mov
xor
les
ret
mov
pusha
out
add
adc
stos
insb
dec
nop
outsb
pop
in
or
push
enter
pop
ss
jl
mov
xor
incl
and
jb
add
data16
fadds
cmp
std
dec
popf
inc
test
add
mov
push
push
lret
mov
mov
ret
pop
mov
sbb
addr16
dec
jecxz
cli
out
jb
xlat
adc
add
sub
adc
add
outsl
mov
push
jle
add
pop
pop
cwtl
cmpsb
add
cld
sahf
sbb
rcrl
sar
ljmp
shrd
cmpsl
fildl
sub
sbb
push
loop
in
cmp
inc
xor
pop
push
out
cs
pop
daa
lcall
mov
mov
inc
mov
jmp
jns
add
decl
imul
sbb
xor
pop
ja
cli
mov
imul
testb
leave
dec
in
ss
jmp
xchg
int3
daa
mov
and
and
inc
cwtl
dec
pop
cmp
addr16
dec
inc
call
das
outsl
jp
pop
inc
add
pop
add
push
cld
push
nop
shll
and
push
in
frstor
es
lcall
pusha
sub
or
mov
cmc
cmp
xor
dec
jle
ja
jg
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
cli
jnp
shlb
andl
jmp
mov
lea
data16
mov
sub
addr16
push
cmp
test
pop
incl
cmp
and
xchg
xor
add
je
add
jno
clc
xchg
ljmp
daa
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
jg
xchg
lock
dec
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
cld
jmp
int
add
pusha
jne
push
mov
movsl
lcall
push
lock
xorb
inc
jecxz
dec
pop
fsubrl
lods
sar
jmp
call
leave
mov
cli
das
add
or
call
icebp
inc
inc
out
or
aaa
lret
sar
cs
jmp
push
pslld
repz
fbstp
lahf
leave
push
add
aad
add
call
push
rcll
popf
cmp
lcall
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
push
push
mov
sub
jb
push
and
mov
cld
xor
jg
aas
outsb
pop
std
lcall
and
jne
push
or
add
lods
or
pop
nop
jle
int3
stos
das
lcall
rclb
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
inc
incl
loope
movl
push
add
mov
imul
mov
addl
insb
lds
fwait
mov
sub
mov
lock
dec
cmpsb
and
adc
jo
outsb
jmp
call
sar
add
sbb
repnz
dec
push
in
add
ljmp
sbb
add
mov
aaa
pop
jp
outsl
faddl
and
xor
out
push
add
lret
rorb
clc
cmp
aam
mov
and
fdivrs
sbb
add
insl
divb
mov
shl
add
scas
jle
jmp
int3
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sar
cmp
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
mov
stos
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
decl
enter
in
dec
mov
shufps
dec
stc
or
mov
decl
js
xor
pop
gs
jl
sbb
stos
incl
jb
and
jo
je
ljmp
lock
push
mov
add
std
fisttps
ljmp
mov
cld
ja
ja
xchg
and
adc
sysenter
addr16
sbb
into
xchg
test
call
jae
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
incl
nop
mov
inc
pop
add
dec
jne
or
mov
cmp
ljmp
cmp
mov
dec
adc
sarb
jae
inc
jb
sub
xchg
ror
add
jle
cmp
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
incl
pop
dec
jo
mov
mov
aam
test
int3
add
xor
sbb
jnp
jp
xor
in
rdtsc
js
clc
fiadds
and
sub
push
adc
cs
incl
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
jbe
repz
adc
add
or
pop
push
mov
add
mov
mov
add
sub
movsb
or
icebp
incl
cmpsb
sbb
sub
mov
js
sarb
inc
int3
ret
xchg
lea
enter
jne
jp
cmp
ljmp
mov
push
mov
call
inc
lods
enter
test
jno
jmp
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
sbb
sbbb
loop
push
clc
movsb
js
push
or
je
movsb
cmp
jg
out
jo
adc
in
jg
addr16
negb
pusha
outsl
adc
add
call
mov
cmp
aam
adc
loop
scas
lods
cmpsl
gs
or
ljmp
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
aaa
std
inc
mov
orb
mov
jge
je
mov
sbb
inc
jle
sub
pop
or
cs
cmpb
jb
push
pusha
and
jmp
test
pushf
cld
add
inc
lds
add
jae
enter
mov
dec
daa
jl
lcall
shl
ds
mov
mov
adc
je
add
or
add
fcomip
mov
add
push
adc
and
pop
add
ret
mov
cltd
sub
mov
or
mov
les
jne
mov
loope
pusha
ret
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
call
add
lret
sbb
dec
stos
and
div
outsl
fldcw
jl
incl
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
jg
xor
push
in
daa
bound
or
mov
dec
fadds
xchg
or
add
add
pop
add
out
jo
in
cli
ljmp
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
mov
xor
add
push
add
aad
test
jmp
pop
pop
data16
cmp
ret
xchg
jae
bound
in
incl
add
int
mulb
fistl
mov
rorl
aaa
cld
incl
notb
pushf
faddl
inc
mov
andb
mov
or
ffreep
ljmp
add
jae
loopne
inc
loopne
movsb
sub
sub
ret
fcomip
inc
mov
es
dec
push
int3
or
nop
test
in
fnstenv
std
cmp
fcomip
incl
fwait
out
mov
cwtl
mov
je
push
push
add
sub
sub
add
clc
jg
pop
add
pop
or
loop
jne
add
test
jg
jmp
sub
or
add
add
outsl
or
pop
sti
lods
dec
sub
sub
add
add
push
jg
add
adc
mov
mov
mov
xor
dec
sub
mov
inc
mov
mov
in
imul
cmp
shr
jg
mov
icebp
or
push
out
and
dec
testl
call
jmp
insb
jmp
add
lock
add
xchg
pop
mov
cmc
les
pop
hlt
sbb
dec
je
xor
stc
fsts
jle
jne
push
mov
lcall
mov
push
xor
out
inc
xchg
jmp
xor
ret
push
push
mov
pop
insb
clc
xchg
je
cmp
push
ja
decl
or
lahf
add
jne
shll
or
sbb
je
inc
and
xchg
adc
push
push
out
dec
clc
stos
jmp
cmp
mov
lods
or
loop
shlb
lods
cmp
dec
shrb
ljmp
xchg
mov
or
pop
mov
push
add
push
addb
xor
and
cli
cs
sub
jl
shll
cmp
gs
pushl
xchg
icebp
inc
orl
lcall
lret
sti
xchg
mov
hlt
push
in
lahf
pusha
arpl
cmp
mov
jno
scas
xor
scas
sub
mov
ja
add
rcrl
add
pop
in
test
sbb
dec
je
dec
sub
inc
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
pushl
mov
sarb
jl
jmp
in
faddl
lock
mov
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
mov
dec
pushf
xchg
and
ret
or
call
int
sub
cmc
fiadds
pop
hlt
loopne
cmp
fdivr
or
adc
xor
scas
and
and
sbb
movsb
mov
lock
add
mov
add
iret
nop
lea
pop
jmp
jae
and
movsb
sub
add
clc
mov
std
xor
mov
dec
hlt
mov
mov
les
in
sar
jle
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
imul
insb
ljmp
incb
sub
push
andl
jle
lss
leave
adc
repnz
jne
mov
xor
and
icebp
add
pusha
mov
test
cld
incl
cltd
cs
rorl
and
cmp
loop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
cld
jmp
mov
inc
loopne
rolb
loope
xor
in
jo
cmpsl
fsub
fstsw
cmp
call
cli
loopne
pop
je
fidivrl
xor
jne
lea
jnp
mov
shrb
mov
in
add
fsubrl
mov
xor
pop
cld
sub
ror
in
out
dec
jns
lea
mov
cmp
cmp
push
adc
fmull
inc
mov
ljmp
js
adc
in
jmp
shrb
cmpsb
xor
bound
pop
adc
xchg
xchg
and
pop
lret
and
cmpsl
icebp
adc
push
int3
shr
mov
jg
or
ret
mov
pop
push
add
test
or
mov
loope
mov
jns
out
pop
repnz
repz
jg
and
pop
mov
mov
mov
push
fidivl
jae
jne
nop
mov
push
sarb
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
ljmp
or
add
and
pcmpeqw
dec
bnd
popa
mov
sub
sbb
lods
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
sar
stos
mov
jbe
incl
stc
sub
push
mov
pop
xor
and
pop
out
fwait
xchg
jge
clc
incl
loop
sub
loopne
call
ds
popa
lds
aam
or
ljmp
into
call
add
add
add
inc
xor
inc
icebp
incl
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
cli
das
push
add
daa
ret
cwtl
or
push
add
push
jl
add
sbb
fistpll
jmp
sahf
incl
test
jl
mov
or
std
push
incl
mov
nop
test
loopne
xor
sbb
dec
out
lock
jmp
pminub
xchg
xchg
hlt
jmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
mov
ljmp
nop
sbb
mov
adc
mov
test
push
rolb
or
call
mov
addr16
sub
and
and
jo
pop
adc
out
mov
add
incl
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
call
xrelease
jae
mov
and
xor
inc
clc
enter
jg
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
pop
and
and
lea
pop
hlt
inc
add
add
sbb
sbb
outsb
cmpsb
add
mov
mov
xchg
add
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
push
pusha
ret
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
mov
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
clc
pushl
sbb
fdivs
jae
xor
fistpl
out
ljmp
into
sti
test
add
js
stc
fdivs
jae
add
adc
jl
cmc
mov
aam
xchg
sarl
out
dec
pop
mov
lock
repnz
xchg
jbe
mov
cmp
in
addb
inc
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
call
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
lcall
bound
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
outsl
cli
jmp
aas
sar
adc
mov
in
jne
or
xchg
inc
inc
fsub
adc
add
pushl
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
jmp
xlat
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
mov
jg
fisttpll
lret
and
test
jbe
mov
int
fbld
add
add
or
adc
in
pop
test
std
call
popf
clc
mov
xor
add
int3
pop
fstl
jmp
fcomip
adc
pop
xchg
jl
sub
add
sub
lock
mull
ljmp
test
scas
popf
orb
push
xor
cmp
or
push
cmp
mov
movsl
pop
int3
scas
test
dec
shl
popf
scas
or
pop
lret
addl
les
inc
incl
xchg
mov
or
test
test
ljmp
xchg
mov
ret
xchg
jb
cmpsb
mov
ret
fistpll
inc
inc
decl
lock
add
dec
cmpsb
mov
es
mov
mov
mov
push
or
loop
pop
add
jns
xor
adc
decl
icebp
loopne
inc
push
scas
fldenv
cmp
mov
jle
push
sahf
in
add
icebp
lcall
cld
cwtl
pop
mov
jo
add
xor
aam
fstpl
aam
shll
dec
jbe
inc
mov
addb
adcb
filds
sub
dec
loop
add
mov
decl
mov
lret
lea
sub
dec
xor
cs
adc
pop
sbb
and
movl
jo
jle
jne
pusha
ret
sbb
lcall
arpl
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
ljmp
push
inc
orb
fists
inc
subl
fldt
mov
hlt
ret
and
push
add
call
push
pushl
ljmp
in
sbb
bound
jg
jle
dec
add
shlb
test
add
inc
cmp
jge
mov
pop
stos
jmp
mov
pop
sub
xchg
pop
mov
mov
ret
xor
sbb
add
push
sub
ljmp
in
in
mov
and
inc
shll
pop
sbb
push
sbb
jecxz
inc
mov
xchg
jno
pusha
inc
std
mov
jl
jno
mov
into
mov
addb
push
jle
mov
int3
inc
mov
lock
dec
add
push
mov
xorb
bound
arpl
sbb
push
add
outsl
jo
xorb
pushl
js
add
xor
push
xor
cmp
das
add
sub
lcall
sub
cmp
daa
nop
mov
or
clc
dec
xor
inc
pop
mov
incl
scas
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lcall
cmp
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
movsb
lcall
mov
adc
je
outsb
push
sarb
mov
add
ljmp
push
iret
push
cmp
pushf
rorb
add
sub
ljmp
ljmp
imul
lahf
fwait
repnz
mov
nop
jmp
fmul
add
ret
cld
incl
aaa
daa
sub
sub
lock
ret
imul
lcall
sbb
loop
sbb
or
inc
dec
dec
jbe
lods
jg
aam
mov
aad
add
subl
and
sbb
dec
mov
ljmp
pop
mov
lahf
mov
or
jg
dec
push
das
bound
jno
repnz
fcomip
or
fsts
aas
push
stos
add
aam
dec
leave
dec
clc
inc
add
cli
lcall
ud2
cmpsl
add
jae
lcall
loopne
add
push
pop
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
push
mov
add
clc
addl
xor
xlat
test
adc
cmpsl
cltd
adc
leave
je
inc
jmp
xor
jns
fcmovnbe
incl
or
js
adc
add
jmp
or
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
push
std
push
add
nop
xchg
insb
push
pop
lock
lock
jp
mov
cmpb
mov
lcall
mov
mov
jg
lds
sub
xchg
add
lods
shll
out
dec
call
adc
push
sbb
notl
and
inc
in
and
mov
sbb
faddp
ret
cld
mov
add
add
cltd
lods
fbstp
add
add
cmp
push
cmp
negb
xor
or
cld
dec
xor
mov
pop
ljmp
pop
push
in
adc
outsb
dec
fbld
movq
mov
or
hlt
or
loopne
out
call
add
push
inc
in
adc
pop
std
in
mov
shll
sub
adc
push
mov
push
fdivr
out
clc
mov
jp
ss
inc
pop
lcall
test
push
incl
aam
fs
add
xor
jno
add
cltd
sbb
ret
jge
incl
push
or
lock
loop
and
adc
clc
aas
jb
out
in
sbb
incl
xor
and
cmp
lods
test
je
iret
lock
jl
leave
ljmp
cmp
mov
mov
pop
in
or
movsl
lea
imul
jmp
dec
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
fcomip
sahf
cmp
pop
mov
not
jb
and
mov
frstor
add
cmp
add
sub
jle
add
lcall
add
add
adc
push
push
and
mov
mov
loop
out
icebp
inc
or
cs
into
sub
cmp
ljmp
fldt
jbe
in
aas
xchg
stos
adcb
imul
or
jmp
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
stos
cmp
dec
pushf
or
inc
add
pop
push
lods
pop
lahf
jle
pushl
add
adc
sahf
add
scas
jno
xchg
lret
or
icebp
jmp
ss
add
add
stc
xchg
in
add
mov
arpl
dec
jg
pop
rol
pop
movsb
add
mov
mov
or
ljmp
or
inc
jle
pop
mov
jo
hlt
pop
dec
xchg
inc
lcall
in
mov
flds
call
scas
das
ficoml
fsubs
push
add
fidivrs
js
insb
xlat
fs
pusha
xchg
add
andb
push
jns
cld
jne
call
adc
mov
or
sub
xchg
pop
push
sub
xchg
jl
jmp
inc
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
lcall
add
fsubl
push
add
inc
fstpl
idivb
ljmp
xor
adc
jo
mov
lock
jns
stc
sub
mov
cli
in
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
mov
xor
cmc
adc
inc
int
add
ja
ljmp
adc
xor
rorb
cld
push
or
pop
incl
push
popa
adc
mov
xchg
fwait
sub
jmp
aad
jecxz
bound
sbb
out
ljmp
bound
add
outsl
jl
cmpsb
nop
mov
adc
into
incl
cld
incl
outsb
push
loop
dec
out
ja
and
fs
mov
cld
jmp
inc
jb
xchg
adc
std
add
jbe
and
inc
out
call
fbld
or
cmp
dec
sub
dec
xor
push
adc
and
mov
pop
je
clc
clc
iret
mov
sub
cwtl
std
jo
pop
add
mov
xor
scas
jae,pn
jns
xor
in
pop
ja
or
ljmp
and
add
cld
xor
js
daa
lret
pop
and
add
mov
jae
jle
lock
rorl
jmp
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
xor
cld
mov
inc
hlt
ljmp
pop
popa
lahf
sub
sub
add
fisubl
xlat
fbld
or
mov
cmp
dec
jno
outsb
sbb
ss
add
adc
sbb
mov
loope
aas
mov
xchg
dec
fsub
xor
jae
jp
in
out
xchg
sarb
loop
mov
and
call
mov
jecxz
inc
mov
call
sub
aaa
pop
lods
fadd
sbb
shrl
cmp
ljmp
sarb
cmpb
sti
rcrb
pop
hlt
pop
jmp
adc
icebp
fld
pop
mov
push
in
ss
in
cmp
rorl
mov
mov
loopne
push
das
mov
rorb
xor
mov
dec
adc
xchg
clc
scas
bound
xor
jecxz
ret
mov
imul
jae
sub
sub
jns
jp
push
jne
pop
jmp
stc
lret
je
mov
mov
xor
clc
fsubrl
pop
and
xor
push
lods
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
call
fwait
shlb
insl
nop
cmp
pushf
push
mov
mov
push
mov
mov
xchg
call
imul
sar
in
repz
xchg
movsb
adcl
int3
push
add
mov
pusha
mov
add
roll
and
or
cmp
sub
add
test
xor
call
push
out
into
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
push
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
cmp
mov
movsl
sub
es
clc
add
pop
pop
ret
mov
push
dec
dec
mov
out
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
pushl
out
ljmp
popf
push
dec
repz
or
mov
xlat
mov
or
je
nop
xchg
adcb
jmp
pop
xor
cmp
shlb
add
dec
adc
add
xor
sub
dec
rclb
loope
jmp
out
xor
pop
jae
mov
loopne
ljmp
pop
ja
or
movb
fmull
std
incl
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
hlt
mov
pusha
xchg
push
mov
sub
fwait
js
sbb
call
sbb
mov
repnz
mov
cmp
jg
pop
sub
aaa
xlat
inc
aam
test
mov
mov
and
fimull
test
inc
clc
add
stos
enter
lcall
sbb
test
and
inc
xchg
mov
sub
mov
pop
push
ret
ljmp
bound
inc
aam
dec
rclb
fiadds
incl
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
pop
loopne
test
pusha
out
aad
clc
sub
mov
or
mov
push
add
or
sbb
out
or
or
shll
pusha
and
call
test
add
fs
sbb
fldt
cli
push
and
inc
adc
add
aas
jmp
xchg
and
faddl
sbb
shll
repz
sub
jnp
movsl
or
sub
test
dec
popf
pop
test
roll
pause
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
decl
fiadds
sbb
add
leave
in
pusha
xchg
test
and
fcmovbe
xchg
sbb
ss
pushf
and
sbbl
aas
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
movsb
icebp
jmp
xlat
into
inc
push
cs
add
jns
ljmp
cwtl
push
in
das
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
decl
fsubs
dec
and
shll
enter
jmp
repz
out
dec
enter
mov
mov
daa
jg
stc
or
xchg
add
mov
test
daa
clc
xor
xchg
sub
or
cmpsl
dec
add
inc
les
lods
jb
or
inc
xlat
pusha
pop
mov
lret
pushl
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
add
sbb
inc
or
add
add
jmp
mov
xlat
js
andl
lahf
jnp
ret
push
mov
ljmp
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
pushl
xor
xchg
add
rolb
dec
call
mov
fcomip
decl
mov
add
test
fnstenv
mulb
hlt
adc
call
bound
aam
adc
rcll
imul
add
and
rcr
xchg
shl
mov
pop
cmpsb
fcos
pushl
mov
call
movsb
mov
pop
add
and
or
and
incl
cmp
hlt
in
mov
jl
lea
add
ljmp
sub
mov
in
push
loop
mov
and
out
in
inc
adc
ljmp
rclb
sti
sub
mov
jns
addr16
pop
sbb
and
sarl
add
sbb
les
cmp
mov
rcr
outsb
test
jecxz
xchg
cmpsb
mov
pop
clc
scas
mov
pop
mov
pop
cmp
mov
shll
out
adc
pop
add
ret
inc
adc
cmovge
outsb
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
decl
imul
and
cwtl
cltd
jb
add
xlat
cltd
fistl
cli
xchg
lcall
inc
push
push
hlt
inc
sub
cltd
sbb
add
mov
test
pop
fiaddl
lds
pushf
loope
dec
fcoms
mov
jb
repz
jg
call
fisttpll
dec
pop
jmp
sbb
push
in
lds
ud0
ljmp
jecxz
fstpl
or
mov
cmp
fwait
das
test
mov
mov
pushl
movsb
pop
push
sbb
and
pop
testb
repnz
ljmp
rorb
mov
add
popa
imul
faddp
cmp
test
hlt
xchg
push
shrb
or
std
or
adc
mov
adc
aad
rcrl
jmp
call
mov
push
shrb
sub
std
mov
mov
decl
lea
popf
ljmp
dec
les
mov
mov
scas
cltd
nop
jae
jp
jmp
cli
cmpb
push
push
bound
adc
push
mov
add
xchg
int3
jmp
or
decl
add
cmovnp
testl
pop
mov
inc
nop
mov
jle
adc
call
sub
add
into
fldl
xchg
clc
loop
outsb
aaa
std
pushl
jge
add
push
add
adc
xor
xchg
sub
adc
add
and
sub
cmp
dec
pop
mov
cmp
and
or
or
add
jbe
scas
jns
ds
gs
lock
and
lcall
loopne
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
cmp
fnsave
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
add
rorb
leave
add
xchg
inc
stc
jmp
cmp
movsl
sbb
addr16
in
xchg
cmp
lock
mov
aas
jle
test
dec
decl
adc
jg
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
scas
add
or
int
test
jne
loopne
cld
sub
loopne
jp
dec
xor
fdivl
mov
add
icebp
incl
cmp
jno
add
sbb
loope
test
pop
and
lock
or
xchg
mov
and
push
mov
sbb
mov
sbb
fcomip
push
enter
jl
xchg
in
mov
add
pop
loop
and
lret
cld
das
clc
decl
adc
jo
mov
mov
or
lock
adc
inc
xor
hlt
jmp
ret
sbb
iret
movb
adc
sbb
lahf
or
mov
mov
addb
movsl
sub
popa
dec
pop
loop
mov
jmp
lds
cmp
fsubrl
mov
jle
ljmp
pop
outsl
mov
sarl
xchg
pop
aad
ljmp
int3
or
add
scas
cld
fscale
dec
cli
cmp
into
adcb
mov
lea
lock
pop
stos
inc
nop
sub
mov
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
jg
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
loopne
clc
imul
jnp
stos
xor
jno
aam
icebp
mov
rcrl
out
in
fcoml
inc
sarb
push
jbe
ret
pop
popfw
ja
inc
and
js
lcall
in
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
incl
and
shlb
sub
mov
test
sbb
and
jg
shlb
ja
add
and
adc
sbb
mov
aad
or
sti
ds
shlb
in
xchg
sbb
sbb
in
mov
dec
mov
pop
hlt
jmp
clc
pop
dec
inc
jl
mov
xchg
cmp
stc
push
push
mov
incl
mov
in
mov
fildll
cmp
out
adc
adc
inc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
decl
ror
sbb
add
dec
lds
bsf
subl
sahf
pop
pop
push
decl
jb
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
pop
lcall
lods
cmp
adc
call
fistpl
call
push
cmp
sbb
mov
repnz
mov
dec
sbb
lea
mov
mov
test
es
clc
cmpsb
sbb
lcall
decl
mov
js
fsubrs
or
fstpl
clc
mov
push
and
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
xlat
jg
add
fmuls
and
cmp
add
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
push
or
and
or
and
cli
lcall
sbb
adc
pop
or
push
mov
pop
decl
push
inc
dec
and
adc
jmp
mov
push
mov
out
jno
cld
scas
clc
mov
add
adc
addb
xchg
ss
scas
or
ret
sbb
inc
loop
pushl
push
mov
dec
rclb
pop
mov
int3
add
stos
fdivs
jecxz
mov
test
mov
imul
sub
cmpl
mov
pop
mov
cmp
xchg
mov
inc
or
test
xor
incl
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
pushl
sub
dec
out
and
aaa
add
pop
rolb
movsb
or
pushl
jae
jnp
iret
or
xor
xchg
adc
or
mov
and
inc
lcall
pop
pop
arpl
lcall
mov
in
jg
mov
add
or
adc
std
loope
inc
incl
mov
cld
push
push
out
popa
cmpsl
dec
hlt
popf
sub
add
mov
cs
pusha
rol
notb
jg
in
jg
cli
and
hlt
xor
ljmp
cltd
fsubrs
push
mov
push
mov
xchg
push
pop
xor
add
push
leave
jo
adc
ret
mov
clc
adc
jg
pusha
jp
fisubrl
push
and
in
rolb
adc
sub
add
pop
lock
jg
cmp
repnz
into
ret
add
lcall
je
mov
jmp
aaa
cld
decl
push
loop
pop
add
cmp
jb
rolb
mov
sub
inc
push
fstl
jle
pop
cli
cmp
mov
fstpl
sbb
xchg
lcall
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
clc
pushl
sub
outsl
inc
addl
jg
dec
cmp
fdivrl
pushl
jecxz
inc
in
rorl
fwait
mov
lret
and
jg
adc
ja
or
icebp
jb
or
mov
xchg
cmp
push
adc
xchg
push
mov
or
sub
sub
and
or
jp
std
inc
adc
sti
pushl
movsb
imul
addb
jns
daa
lods
sbb
and
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
out
mov
rcrb
es
testb
aaa
mov
adc
inc
ljmp
cmp
insb
adc
enter
adc
addb
rolb
fidivl
pop
decl
notb
jmp
sbb
cmp
cmpsb
mov
shl
or
cld
pop
pop
das
pop
pop
mov
mov
incl
pop
xchg
cmpsl
aad
sub
call
add
adc
mov
jb
enter
scas
xor
push
add
cltd
sub
xchg
in
mov
incl
das
mov
call
aam
inc
add
xor
jle
daa
pop
push
add
popf
in
xor
nop
subl
int
push
pushf
inc
aam
push
cmp
ljmp
stos
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
decl
sbb
nop
inc
jl
notb
adc
or
cmp
call
push
pop
add
into
add
lods
xchg
cmp
or
xor
xchg
lods
xor
insl
adc
mov
pop
mov
sub
mov
inc
cli
ljmp
rcrb
push
faddl
dec
add
push
xor
cmp
mov
push
nop
push
mov
out
adc
jb
or
add
mov
pushl
addl
sbb
or
add
sbb
les
jg
movsl
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
sar
mov
sbb
push
pop
jle
test
xor
or
xchg
movsb
jg
push
mov
push
scas
mov
lock
push
pushf
push
fwait
aaa
inc
mov
call
lahf
dec
add
xchg
push
arpl
mov
push
mov
add
es
pop
or
xchg
stos
inc
mov
add
repz
mov
fwait
enter
cmc
aaa
std
stos
insb
adc
stos
fbld
and
icebp
xor
mov
fistpll
push
dec
mov
lcall
in
add
push
add
mov
jo
adc
roll
pop
push
inc
insb
ljmp
cmp
add
and
push
mov
cmpsb
push
iret
push
mov
es
mov
sbb
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
jmp
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
mov
jmp
aad
push
loope
pop
push
loopne
adc
jmp
xor
mov
enter
ljmp
decl
cmp
adc
pop
in
mov
inc
repnz
pop
out
enter
jmp
mov
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
incl
fcoml
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
sti
test
push
and
mov
repnz
aaa
mov
lods
hlt
xchg
jae
call
sbb
jbe
mov
add
out
cli
jmp
in
dec
push
pop
jle
cld
es
mov
jmp
jl
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
call
mov
pop
dec
push
dec
das
iret
mov
cmp
push
mov
ss
or
fs
int3
ficoml
pop
icebp
dec
call
dec
push
pop
sub
mov
xchg
xor
adc
mov
pop
xchg
clc
mov
adc
xchg
adc
push
clc
xchg
lds
cmp
roll
adc
sar
jmp
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
add
mov
ret
fistpll
lcall
sub
mov
and
jns
mov
shl
ljmp
or
popa
pop
call
loopne
ja
adc
stos
and
mov
push
sub
dec
movsbl
pop
cmp
pop
jl
pushl
cs
sub
rcr
or
dec
mov
enter
add
mov
adc
push
rcll
adc
shlb
loope
adc
push
push
addb
sub
inc
sbb
cmp
pushl
mov
test
mov
add
mov
aas
dec
out
adc
jmp
pop
inc
std
repz
mov
push
mov
nop
or
sbbl
adc
enter
sub
sub
xor
int3
fmull
pop
pop
pop
ja
xor
leave
call
xorps
mov
outsb
jl
divl
orl
sub
add
lea
hlt
lcall
rorl
and
mov
mov
les
ljmp
push
bound
add
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
lcall
add
out
xor
cld
or
sub
mov
nop
mov
lret
imull
popa
and
in
adc
cmpsb
jg
jbe
call
add
movb
cmp
insb
daa
ja
in
xchg
cld
leave
jl
cmp
xor
pop
or
add
pop
call
cld
jle
sbb
pop
sahf
and
rclb
mov
sbb
call
or
xor
jbe
popa
add
gs
es
stos
pop
icebp
pop
cld
add
cmp
lret
roll
fdivl
test
mov
sti
ds
add
test
enter
fsubs
mov
mov
js
aas
push
add
std
pop
pop
call
push
jecxz
cltd
adc
rcr
std
call
nop
and
inc
fcomp
mov
add
ljmp
clc
or
mov
adc
adc
hlt
cs
and
push
ja
add
jg
or
into
nop
out
add
cmpsb
ljmp
lcall
dec
outsb
sub
jp
push
xchg
adc
shrb
add
iret
inc
call
cmovbe
mov
and
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
pop
cld
decl
sarl
or
mov
inc
jb
ret
pop
arpl
mov
xor
push
xchg
js
icebp
mov
jg
sub
scas
sbb
filds
add
xchg
in
add
push
in
inc
subb
fs
ljmp
call
dec
mov
icebp
mov
mov
push
cmp
jmp
test
and
jb
mov
nop
add
push
push
decl
xor
and
inc
js
xchg
sbb
lock
nop
pop
repz
incb
cld
les
push
pusha
sbbl
cmp
pop
dec
xchg
cmp
and
sarl
cld
add
mov
and
in
jg
sbb
and
xor
add
or
call
sub
sbb
lret
jnp
inc
add
adc
add
ror
test
push
inc
test
dec
xor
icebp
and
xchg
pop
pop
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
or
out
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
jmp
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
dec
adc
test
cmp
mov
mov
pop
cltd
push
mov
add
or
or
or
dec
pop
sbbb
xchg
push
dec
add
mov
cmc
test
call
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
call
lcall
pusha
cmc
adc
mov
inc
rolb
dec
stos
nop
push
lods
fidivrs
mov
in
sbb
dec
mov
jecxz
int
addb
and
push
pop
add
decl
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
jmp
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
outsl
js
add
or
xor
xor
aas
add
sbbb
notl
fdivrs
inc
adc
mov
jae
icebp
jnp
xorb
inc
and
ja
lea
mov
test
push
stos
test
jb
rep
cwtl
sub
cmc
loope
out
mov
mov
add
mov
fwait
add
pop
stos
add
pop
mov
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
xlat
call
std
and
sub
nop
pushf
xor
push
ret
add
enter
int
leave
or
xchg
imul
in
subb
add
pop
icebp
decl
cmpsb
rcll
cwtl
hlt
or
aas
jg
mov
add
lea
aad
lock
inc
sub
mov
sbb
addr16
mov
int3
call
inc
int
or
sub
cmc
push
cmp
incb
sbb
sbb
gs
out
iret
add
jae
lea
orb
call
jg
cmc
jg
or
adc
mov
xor
sbbb
aad
mov
dec
add
jb
incl
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
aaa
add
sub
adc
jo
ss
call
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jmp
mov
and
ss
jg
push
adc
jo
mov
mov
aaa
test
xchg
pop
dec
push
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
incl
int3
push
and
cmpsb
test
sbb
rcll
aas
sub
orb
ret
and
pushl
push
cmp
aas
sbb
outsl
xor
jg
pop
enter
cmp
pop
aas
fsubs
add
push
dec
push
call
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
pop
add
xor
mov
loopne
insb
fs
les
mov
jg
ljmp
jno
add
push
lret
inc
mov
out
jb
xor
xchg
mov
scas
jg
jne
jle
jecxz
push
add
add
cmp
mov
ret
xor
mov
mov
jne
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
idiv
push
inc
lods
cmp
fstpt
orb
sbb
stos
loop
lcall
fisubs
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
or
pop
inc
jecxz
push
pop
in
push
pop
aas
inc
push
mov
sti
shr
notl
cmc
add
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
das
clc
add
jmp
sbb
pop
mov
add
mov
ljmp
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
aam
cmp
ljmp
testb
inc
fbld
cmp
cli
jmp
or
add
or
adc
cs
inc
push
add
js
mov
iret
adc
sbb
push
decl
shl
inc
push
mov
loop
or
cmp
or
inc
stos
xor
inc
add
and
pusha
enter
repnz
aad
mov
or
call
iret
and
pushl
adc
jns
pop
jp
scas
jg
inc
movb
fisttpl
fcomip
loope
push
out
mov
sub
ret
insb
ljmp
push
and
ljmp
push
xchg
call
mov
das
jecxz
or
cmp
mov
incl
sub
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
std
jg
cmp
fs
and
nop
pop
cld
mov
push
push
pop
out
ljmp
sbb
inc
xor
or
push
std
add
cmp
ja
mov
lcall
decl
mov
lods
sbb
fnstenv
and
add
mov
inc
add
and
jmp
cmpl
fistl
push
js
decl
test
jmp
nop
add
adc
adc
pop
jg
incl
pop
xor
add
mov
jmp
push
clc
imul
adc
cld
xchg
mov
jno
add
incl
or
jge
mov
sub
xchg
add
inc
sti
les
xor
incl
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fadds
sbb
add
or
rolb
clc
xor
clc
lcall
xlat
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
leave
ret
test
and
xor
ljmp
mov
leave
es
das
testl
loopne
in
mov
pop
mov
mov
orl
int
push
fsubl
mov
jbe
incl
loope
ret
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
lcall
addr16
and
add
sub
ror
sub
cwtl
pop
lock
pop
loopne
aas
inc
inc
cwtl
or
decl
lock
push
outsl
test
rorb
jnp
jp
mov
and
lcall
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
incl
inc
scas
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
scas
in
movsl
xor
cmp
jge
mov
and
xchg
push
lcall
div
inc
scas
lcall
sbb
sub
int
sub
out
clc
inc
ffree
add
ret
inc
jl
mov
packssdw
mov
jge
lea
jg
fadd
outsl
call
xor
movsl
nop
mov
movsb
push
roll
or
and
inc
stos
decl
std
and
inc
decl
repnz
shll
loope
mov
call
cld
out
xor
sub
cs
inc
or
sbb
xor
add
jo
and
imul
ljmp
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
push
scas
dec
adc
add
int3
push
call
loope
lcall
cmc
push
mov
add
adc
sar
decl
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
xor
sbb
orb
xorl
add
subb
decl
imulb
pop
or
scas
testl
xor
cld
nop
pop
sub
mov
outsb
test
xor
push
cld
jg
or
jnp
lock
js
call
nop
imul
lods
mov
inc
pop
mov
xchg
jno
std
shrl
ror
mov
inc
jns
cmpsb
mov
mov
cmp
adc
mov
xchg
pop
lock
mov
rolb
adc
or
cmp
lcall
incb
adc
push
enter
mov
pusha
es
icebp
imul
sub
mov
pop
or
sarb
dec
push
ljmp
add
adc
addl
sub
add
movsb
cs
in
rorl
jbe
mov
pop
adc
sbb
xor
mov
adc
adcb
in
lcall
and
add
mov
sbb
mov
cs
cwtl
or
add
decl
jmp
movsb
pop
cmp
out
cmc
inc
push
repnz
dec
nopl
adc
incl
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
pop
inc
cmpl
scas
add
aam
in
or
clc
mov
cld
inc
or
js
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
ljmp
mov
test
add
lahf
call
clc
incl
jmp
push
orl
sar
pop
jno
ljmp
mov
mov
xchg
pushf
sub
and
insl
hlt
test
aas
mov
and
cmp
or
in
sbb
add
repz
cs
js
inc
ljmp
movsb
test
mov
add
sbb
mov
pushl
out
push
jo
cmp
pop
adc
movb
fwait
sub
add
adc
outsl
clc
jmp
xchg
pop
out
inc
daa
subb
addb
out
pop
aam
mov
mov
sbb
add
rorl
loopne
add
rcl
fnstenv
movb
movsb
add
jg
fcomip
inc
in
fistpl
and
jle
clc
jo
pop
ds
stos
pushl
test
push
lods
les
out
and
popa
hlt
inc
sub
fnstsw
add
out
fdivrl
adc
pop
ljmp
int3
shl
or
pushf
push
sar
push
pop
xchg
add
add
or
pop
mov
popf
adc
andb
sbb
mov
and
dec
push
mov
ss
pop
and
push
lds
mov
test
sahf
and
loop
push
loope
jge
hlt
out
adc
jg
dec
icebp
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
jmp
enter
or
sub
xor
cmp
movsb
inc
mov
frstor
pop
repz
mov
call
push
cmpb
rcr
adc
lcall
mov
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
loope
fistpll
add
pop
xchg
arpl
cli
pop
shl
popf
fidivrs
mov
decl
cs
sbb
pop
add
push
pop
pushl
cld
ja
add
aas
cld
test
lock
add
and
push
lret
and
jmp
insb
outsl
rcrb
or
lahf
xlat
push
cli
and
imul
or
pusha
jg
aad
lds
adc
or
mov
jae
call
sub
pop
int
adc
jmp
add
jmp
pusha
call
mov
test
ljmp
adc
cs
mov
ljmp
xchg
pop
adc
sub
jmp
loop
jns
add
or
dec
aas
call
addb
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
icebp
lcall
add
out
cmpsl
xlat
into
xchg
add
or
test
call
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
shll
stos
cmp
add
xor
or
test
jne
scas
adc
push
rcr
mov
loop
rep
and
jg
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
decl
out
dec
fnstcw
aaa
xor
mov
sarl
movsl
sar
jmp
enter
lahf
jmp
insl
enter
sbb
pop
adc
mov
mov
stos
pop
jg
push
aaa
and
or
ja
aas
shll
incl
inc
or
lea
or
mov
test
mov
cli
sbb
sub
xchg
or
jns
jae
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
cmp
cmp
pop
or
js
aam
xor
lods
pop
dec
sbb
mov
sbb
pop
sub
jle
mov
sbb
mov
sbb
in
popa
sub
or
divl
cld
and
les
pop
call
jecxz
mov
dec
xchg
mov
mov
decl
lock
or
push
sbb
and
fnsave
dec
add
std
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
hlt
ja
aas
movsb
sbb
bnd
ja
lcall
add
lcall
xlat
out
rorl
adc
pushl
cmc
lock
loope
icebp
fcomip
push
mov
xchg
push
adc
iret
xchg
shrb
mov
aaa
lcall
mov
loope
or
aas
incb
lock
mov
imul
add
sbb
sbb
push
decl
cmp
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
call
mov
mov
aam
call
popf
mov
pusha
ljmp
cli
jmp
call
pop
fdivrl
loop
jmp
mov
ret
cmc
xor
mov
push
mov
lahf
xorb
cltd
jns
pushl
sub
aaa
shrl
or
ret
out
shr
mov
push
incl
pusha
inc
in
fucompp
jb
cli
mov
lcall
pushl
add
xchg
xor
mov
or
xchg
arpl
incl
or
orb
lcall
add
ljmp
addl
cli
jmp
jmp
inc
xchg
rolb
adc
push
or
inc
pushf
and
pop
loope
jno
xor
mov
push
xchg
adc
pop
xor
sub
cmp
dec
cmpxchg
sar
cli
mov
aam
adc
dec
std
push
test
out
cmp
test
ljmp
sbb
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
incl
sbbl
sub
xor
minps
add
aam
mov
les
sbb
sbb
cmpsb
xor
jmp
cmp
loop
add
cmpsl
jmp
pop
cmp
incl
and
aad
cld
sub
sbb
add
ss
sbb
test
std
jmp
inc
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
decl
mov
and
pop
ret
xor
add
neg
sub
sbb
pop
test
inc
jecxz
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
mov
push
add
mov
jp
ret
nop
ftst
pop
add
adc
and
xchg
call
cld
out
mov
adcb
add
and
mov
out
call
pushl
les
mov
fs
xor
jg
out
add
jl
adc
aas
xor
xchg
loop
ljmp
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
call
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
popa
mov
inc
std
es
or
pop
push
std
and
incl
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
sti
jmp
or
rcr
cmp
ljmp
xor
xchg
incl
outsb
xor
movsb
add
shll
dec
pop
ljmp
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jge
sbb
jp
jecxz
call
sti
add
sub
push
ss
dec
add
call
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
decb
sub
pop
add
mov
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
cld
mov
pop
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
lcall
adc
clc
jecxz
add
repz
add
ljmp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sbb
ljmp
es
push
push
stc
arpl
lcall
push
mov
inc
divl
rolb
jp
pusha
cmp
incl
sarl
or
mov
mov
movsl
repnz
push
dec
sub
subb
xor
ljmp
lock
cmp
subl
cld
mov
pushl
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
out
cli
sbb
ret
je
inc
fisttpl
je
and
inc
jle
push
pop
push
xor
test
pushl
and
cld
std
push
stos
mov
filds
test
pushl
sbb
decl
cmpsb
loop
das
jle
add
and
cmp
jmp
push
imul
cli
into
in
outsl
inc
add
loope
das
add
mov
xchg
pop
and
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
lcall
jbe
xchg
dec
enter
jle
push
mov
add
xor
lods
outsb
subl
xlat
cld
and
push
sti
push
and
add
mov
xor
call
xchg
jns
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
decb
leave
adc
mov
xor
dec
mov
jae
pop
cmp
inc
shl
or
insb
cld
ds
or
jmp
icebp
shrb
cltd
cmp
push
or
mov
mov
sub
cwtl
jnp
push
adc
xor
cmp
mov
sbb
xor
mov
xor
gs
xchg
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
bound
dec
cmpsb
push
loop
int3
stc
sub
adc
or
sbb
jo
pushl
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
ljmp
decl
fimuls
stos
sub
les
cmp
daa
adc
scas
sbb
inc
jg
pushl
aas
adc
test
pop
or
inc
add
push
pop
sub
adc
out
cli
sub
jmp
or
push
xchg
pop
add
js
subl
pop
sbb
jg
jecxz
icebp
scas
fiaddl
bound
dec
or
push
dec
enter
and
sbb
and
shl
xor
lret
decb
push
dec
adc
or
ljmp
decb
popl
repnz
aas
call
lock
jo
push
aas
jne
xor
decl
add
ret
jg
insb
push
jle
or
call
add
jge
pop
dec
mov
stos
push
mov
inc
aam
sar
in
push
std
aaa
std
jne
jp
cs
add
mov
in
int3
pop
add
lcall
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
in
std
add
fldt
and
push
dec
jo
sarb
add
pop
add
or
dec
add
call
and
xor
jbe
pop
shrb
shl
add
sbbl
pushl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
jg
jmp
xor
dec
and
dec
or
add
lods
test
loopne
in
decl
lock
or
xor
imul
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
pushl
call
cmp
push
and
push
push
mov
mov
dec
into
idiv
mov
add
inc
sbb
and
sub
nop
sub
and
dec
pop
xchg
sub
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
push
aad
cli
cmp
enter
outsl
clc
push
hlt
push
mov
jmp
test
xchg
ret
ss
hlt
psrad
dec
mov
or
jg
lea
movzwl
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
rcll
rorb
and
mov
jg
je
xor
sbb
mov
jp
jo
adc
incl
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
add
or
jb
fwait
add
ljmp
inc
jb
push
pop
sbb
decl
or
or
aad
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
add
nop
mov
sbb
out
lret
rolb
jae
enter
mov
fadd
jb
int3
add
inc
shrb
inc
push
and
and
mov
add
push
mov
push
popa
loope
and
jl
or
ss
mov
jmp
outsb
daa
data16
jp
loopne
xor
jl
sub
std
pop
popa
ljmp
and
lret
xor
clc
pushf
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
decl
sbb
icebp
and
cmpsl
add
adc
ljmp
add
sarl
mov
inc
push
aam
dec
add
pop
hlt
or
in
push
fdivrs
out
or
push
adc
xchg
jg
fwait
sub
add
in
xchg
pop
enter
aam
add
mov
jmp
push
or
or
inc
fwait
jg
rcrl
inc
mov
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
outsb
or
lock
add
add
decl
jne
pop
push
cmp
add
xor
rorb
je
jcxz
icebp
and
jg
mov
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
incl
lds
jle
adc
call
int
mov
or
inc
push
in
or
xchg
pop
imul
sar
mov
enter
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
incl
ffree
sbb
inc
faddl
adc
aam
aad
ret
xlat
sarb
inc
js
adcb
adc
add
incl
shrb
shlb
popa
xor
shlb
scas
xor
pushl
cmp
in
call
add
shlb
cld
sarl
and
incl
sarb
ds
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
jmp
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
faddl
into
and
loopne
and
mov
div
jecxz
and
data16
and
mov
cmp
mov
stos
mov
mov
inc
bound
addr16
decl
sub
andb
sbb
shrl
stc
shrb
sbb
ljmp
inc
imul
add
test
push
mov
add
push
cmpb
jg
jg
ja
sbb
cmp
cmpl
fidivs
mov
loopne
into
mov
mov
jbe
jb
mov
mov
jae
lcall
incl
mov
jno
jo
mov
push
rcll
xchg
rclb
inc
xchg
push
xchg
cli
fcomip
pushl
xchg
push
push
xchg
rclb
xchg
addl
pop
and
pop
sbb
mov
lahf
sbbl
fwait
inc
pop
mov
cmp
lcall
cwtl
std
mov
dec
std
dec
fmuls
mov
dec
ret
mov
pop
dec
add
cmp
push
jmp
addl
push
xchg
inc
addb
clc
jmp
pusha
push
out
or
push
push
add
jecxz
clc
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
incl
push
push
push
fimull
or
add
rcrb
fmull
dec
pop
mov
dec
lcall
adc
and
in
add
call
mov
jbe
scas
cmpsl
out
add
sbb
adc
and
outsl
out
repnz
xor
push
rcll
test
mov
pop
add
call
mov
push
iret
inc
arpl
call
add
xadd
fwait
data16
jg
insb
pop
rcl
scas
fsubrs
cld
mov
mov
bnd
dec
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
loopne
fwait
cmp
leave
loope
add
call
ljmp
ljmp
test
hlt
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
lcall
jbe
cld
movsb
and
shl
push
xor
pushl
pusha
add
movswl
test
add
stc
inc
inc
je
jle
push
or
mov
sbb
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
decl
push
pusha
jne
add
mov
push
xchg
push
add
pop
xchg
pushl
repnz
shl
jbe
add
std
pop
sbb
push
add
sub
iret
push
add
sbb
mov
add
xor
sub
push
cmp
adc
ljmp
fucomip
test
shlb
ds
dec
dec
adc
aaa
cld
jmp
or
leave
inc
mov
adc
repz
jbe
bnd
add
push
cli
lds
lock
test
ret
jecxz
mov
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
jg
add
jno
dec
rep
popf
mov
into
push
mov
adc
clc
ret
sub
aad
icebp
and
call
fadd
addr16
fdivp
lock
stos
fsts
out
adc
scas
and
adc
xchg
jno
pop
or
decl
lock
cmp
push
js
push
adc
inc
and
out
mov
adc
dec
aas
test
push
les
adc
jmp
jo
in
xor
adcl
add
pop
daa
dec
repnz
adcl
imul
jbe
repnz
sbb
xchg
icebp
push
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
lock
lcall
push
stc
ret
sub
adc
pushf
lods
pop
mov
add
cmp
ljmp
pop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
dec
ja
pushf
mov
xor
cmpsl
in
lock
decl
sbb
fdivl
xor
add
add
repnz
clc
repz
add
and
movsb
lock
arpl
dec
mov
pop
pop
in
decl
fs
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
incl
sub
mov
jg
mov
adcb
repz
adc
sub
icebp
lcall
pop
sbb
mov
adc
stos
and
adcl
dec
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
jne
test
or
arpl
sub
decl
xchg
mov
cld
test
repnz
xor
pushf
and
add
lcall
repnz
repnz
out
push
loopne
adc
mov
insb
in
dec
sbb
inc
loope
andb
dec
jg
jmp
dec
repz
sub
mov
and
cld
les
adc
scas
xchg
test
xor
add
dec
or
or
repnz
cmp
inc
push
je
push
or
and
daa
lock
pop
add
das
sar
mov
jo
and
add
repnz
cwtl
or
add
daa
add
call
jmp
pop
or
mov
xorl
dec
nop
mov
and
ljmp
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
lcall
loopne
fs
cmp
add
enter
jmp
or
jnp
vunpckhps
pop
loopne
repnz
mov
clc
pop
jne
and
scas
xor
push
and
aas
incl
fists
xchg
sbb
js
xor
pop
cmp
lea
faddl
mov
aad
mov
lret
sub
mov
mov
add
pushl
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
jmp
xchg
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
call
pop
daa
add
ret
or
dec
cmp
sbb
jmp
sub
std
test
pop
call
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
pushl
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
shr
mov
mov
sti
lret
xorps
mov
xchg
xor
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
call
in
jb
test
movsb
ljmp
adc
xlat
jmp
xchg
lea
inc
add
cmc
call
or
lret
mov
push
or
in
dec
adc
sub
adc
add
das
aam
push
mov
and
or
add
jns
incl
mov
rorb
cmpsb
shll
mov
lcall
adc
cld
sti
push
cld
ljmp
arpl
fiadds
sbb
jb
es
push
pop
add
ljmp
add
cwtl
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
call
dec
sahf
add
sub
lock
dec
shrb
and
mov
stos
shl
icebp
cmpb
mov
add
cmp
in
push
add
push
data16
lcall
pop
dec
cmp
jne
loopne
ljmp
sub
cld
ficoms
or
cli
repnz
jne
lcall
in
push
adc
cld
repz
aas
add
mov
mov
mov
sbb
add
pop
sbb
incl
sub
fwait
add
xchg
jl
add
mov
sbb
mov
mov
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
pushl
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
ljmp
or
mov
and
mov
xchg
insb
mov
call
jne
add
mov
jnp
jecxz
lret
cmpsb
mov
mov
ljmp
orb
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
add
mov
lahf
push
mov
mov
push
cld
das
clc
outsb
stc
push
adc
sahf
pop
fldl
jp
movsl
decl
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
cmp
call
jg
call
movl
mov
out
or
pushl
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
incl
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
and
jmp
add
or
mov
push
pop
hlt
scas
add
incl
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
jg
fists
ret
pop
shl
call
lock
ljmp
insl
fdivrs
jecxz
sbb
dec
push
xchg
and
and
sbb
push
push
ret
sbb
dec
dec
xlat
rclb
mov
call
fnstsw
call
push
sbb
add
data16
add
jmp
inc
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
ljmp
loop
lea
js
jecxz
mov
movsb
mov
mov
cmpsb
in
and
or
inc
movsl
dec
xor
jl
fwait
out
jo
lret
jo
sub
ret
mov
inc
adc
js
mov
incl
xlat
imul
sub
mov
jl
add
addb
adcb
fbld
aaa
cmp
jge
repnz
pop
stos
sbb
or
sbb
dec
imul
mov
cmp
test
or
jnp
push
incl
repnz
push
incl
or
pusha
leave
rolb
or
push
sbb
dec
adc
adc
push
mov
or
bound
rol
js
out
and
pushl
push
es
inc
lahf
fs
dec
insb
push
push
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
incl
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
adc
dec
pop
or
jo
shlb
and
jg
aam
verw
test
pop
mov
mov
dec
cmp
call
std
call
and
divps
jp
mov
xchg
and
lret
push
jg
incl
decl
frstor
mov
loop
or
adc
in
add
nop
mov
repnz
shrb
add
sbbb
cmp
jo
mov
movsl
mov
mov
inc
pop
xor
cwtl
adc
add
adc
mov
fdivrs
cmp
outsl
and
ficoml
add
push
inc
mov
fisttps
cmp
mov
std
add
test
inc
sub
btc
dec
mov
xchg
popa
mov
ljmp
inc
mov
add
mov
mov
jne
pushl
add
pop
add
push
cmp
cmc
adcb
out
clc
aaa
cld
push
push
mov
mov
cmpsb
jae
xchg
gs
mov
add
pop
cld
or
add
mov
xlat
pop
icebp
mov
and
push
pop
pop
add
test
sbb
mov
data16
cltd
outsb
add
dec
push
mov
pop
out
pop
out
enter
stos
mov
mulb
add
or
test
sti
mov
je
and
or
and
xor
call
jl
adc
jl
mov
rclb
xchg
xchg
fmull
jo
aam
sub
push
mov
push
sbb
pop
mov
test
xorb
mov
mov
sbb
mov
or
xor
in
push
lcall
fidivl
divb
lret
inc
add
sbb
ja
push
and
sub
dec
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
incl
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
mov
sub
pop
inc
pop
jl
push
push
icebp
mov
pushl
pusha
jmp
xchg
into
ljmp
push
inc
adc
hlt
pop
test
imul
jp
adcb
int
mov
mov
daa
incl
ret
adc
subb
scas
xchg
adc
sub
test
add
pop
cltd
test
and
mov
ljmp
int3
push
arpl
pushf
mov
cmp
clc
jb
cmp
jbe
dec
push
pop
sub
push
jecxz
sar
inc
push
pusha
push
shr
test
aam
les
mov
dec
std
add
push
lcall
xor
test
mov
ljmp
data16
mov
scas
test
jmp
xor
inc
dec
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
jmp
mov
or
jne
adc
mov
call
sub
pop
mov
clc
jg
inc
clc
test
in
jmp
in
jns
loope
and
pop
mov
cmc
mov
adc
xchg
push
lahf
std
insl
sbbb
sub
ljmp
jae
pushf
jo
xchg
ljmp
jb
cwtl
pop
jmp
int3
call
jl
xchg
jg
xchg
fidivrs
test
sbb
adc
add
pop
ret
dec
or
cmp
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
scas
xchg
lock
inc
xor
adc
sbb
orb
mov
add
rorl
out
mov
push
sub
fsubrl
push
les
sbb
aaa
ljmp
adc
inc
add
jb
lds
pop
sub
ret
ds
push
jmp
push
test
dec
inc
mov
ds
enter
and
inc
test
js
mov
aad
cmovp
popa
ficomps
push
and
add
cli
xor
pusha
scas
mov
jecxz
add
push
mov
mov
arpl
call
sbb
ret
xorb
inc
inc
cmp
clc
push
ror
sbb
clc
mov
cld
cmp
out
sub
xor
mov
popf
sbb
inc
fisttpl
icebp
pop
lock
inc
adc
fiaddl
pop
or
cmp
or
inc
imul
xor
ja
jnp
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
mov
xor
cs
in
aas
loopne
fmull
clc
mov
mov
xor
into
or
fstl
imul
or
or
andb
push
pop
in
incl
loopne
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
fisttps
decb
pop
jne
xchg
aam
inc
or
mov
ret
pushl
rclb
clc
pop
adc
xchg
push
pop
mov
mov
pop
mov
xchg
ret
inc
insb
mov
push
push
je
pusha
shll
add
out
cli
movsb
jecxz
jo
loop
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
call
mov
orl
pop
add
adcb
mov
cmpsb
jle
xchg
loopne
mov
mov
gs
push
and
jmp
sbb
xchg
jo
add
cmp
call
jae
call
mov
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
dec
incl
mov
jnp
test
add
pop
mov
clc
cld
fcomip
outsl
cli
addl
cmpsb
jp
xor
xor
xorps
jg
incb
xchg
cmp
test
ljmp
out
push
mov
adc
dec
jg
cmpsl
inc
pop
sub
fcomip
call
sbb
xchg
cmp
aas
in
sub
sbb
pop
jg
fbstp
xor
add
dec
jo
inc
imul
cmp
mov
mov
xor
jle
push
sbb
es
decl
jbe
and
push
leave
mov
and
stos
lea
dec
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
std
jg
cmpsb
std
or
divb
adc
pop
test
pop
rolb
mov
pushl
or
add
add
add
and
test
cmp
ret
jge
mov
decl
enter
add
pop
or
insb
mov
dec
jg
xor
incl
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
mov
das
adc
xchg
jmp
loope
cld
inc
or
call
adc
push
cld
fbstp
sarb
lock
or
sub
cmp
or
or
outsb
adc
mov
and
push
sbb
jne
cmp
aad
stos
outsl
xor
scas
jnp
or
ljmp
mov
ljmp
rcrb
mov
sbb
mov
mov
jnp
add
sub
pop
in
enter
jmp
or
xchg
jbe
pushf
jmp
movsb
scas
add
incl
aam
pop
loop
adc
addr16
enter
or
add
test
add
cmpsl
stos
and
pop
cmpsb
shrb
cmp
pushl
fwait
rorb
mov
add
sub
mov
add
jae
jmp
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
fbld
cmpsb
sub
push
pop
ret
inc
dec
jmp
jmp
nop
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
mov
inc
cltd
dec
sub
pop
out
lods
mov
call
dec
sub
daa
lret
pop
in
call
test
jne
sub
lcall
stos
mov
and
ret
mov
add
insb
jg
lahf
push
adcl
push
jl
jmp
jmp
and
push
push
lcall
adc
stos
pop
cmp
addb
push
data16
mulb
cld
mov
push
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
cmp
pop
ret
inc
in
scas
loopne
mov
adc
stos
or
and
incb
mov
sub
imul
sbb
out
fwait
lock
mov
ljmp
cli
ja
rcrb
sbbb
lods
add
ljmp
adc
add
pop
out
mov
push
stos
movsb
lret
les
rcl
jmp
adc
jp
add
pop
pusha
enter
add
mov
pop
pop
mov
loope
incl
jb
xchg
xor
mov
adc
add
mov
cli
sub
ljmp
clc
orb
or
pop
movsb
shl
mov
push
stos
adc
pop
icebp
fsubs
or
lock
jno
je
clc
lds
cld
in
xchg
push
nop
mov
mov
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
pop
push
stos
inc
cmpsl
stos
pop
push
lahf
lods
mov
sub
int
sbb
xor
lcall
fadds
or
push
adc
call
push
fisubl
xlat
cmovb
sbb
push
xor
jecxz
and
lea
push
clc
out
addb
imul
mov
mov
push
xchg
and
push
push
ud1
bound
ljmp
cmp
push
or
or
int
pop
adc
xor
or
or
ja
add
pop
sbb
in
scas
test
nop
xchg
subb
sbb
popf
lock
decl
push
xchg
popa
movsl
lcall
jo
mov
and
mov
call
mov
jmp
mov
or
ret
pop
inc
xchg
fcomip
xorl
jns
repz
jo
or
cs
and
push
int
fimull
test
push
fsubrl
mov
add
xor
shl
stos
mov
cli
test
popa
mov
hlt
adc
decl
sub
movsl
repnz
add
xchg
inc
loopne
cld
test
lcall
mov
repnz
arpl
stos
mov
rorb
jg
or
inc
xor
clc
loope
jae
rcr
adc
mov
inc
or
push
mov
mov
outsl
decl
adcb
or
fsubs
inc
add
fwait
adcb
or
rorb
jg
repnz
imulb
es
mov
sbb
in
mov
sub
pop
test
mov
mov
addr16
mov
and
jbe
pop
pop
mov
movsl
push
rol
push
add
jo
adc
cmp
sbb
adc
add
pop
stos
xchg
lock
push
mov
add
inc
mov
mov
pop
lds
mov
aad
and
add
ljmp
les
add
sub
and
push
jae
add
add
sar
incl
sbb
test
loope
mov
mov
les
dec
dec
shrb
xor
outsb
dec
push
sbb
push
mov
add
std
adc
xor
test
clc
cmp
clc
insl
push
inc
js
outsl
cmpsl
sub
jo
sub
jns
and
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
jmp
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
ljmp
sar
xchg
dec
xchg
pop
sub
push
sub
and
fwait
xlat
repnz
jl
push
out
push
incl
mov
pop
xchg
clc
ret
add
sub
imul
je
call
call
sbb
add
es
push
hlt
and
mov
dec
fs
mov
mov
push
pop
xor
mov
scas
xor
sub
insb
test
inc
add
lods
push
cltd
mov
les
je
and
dec
movsl
test
in
repnz
cltd
cs
xor
push
add
pop
sete
incl
ljmp
dec
xchg
add
push
mov
subl
cli
das
mov
ljmp
sub
ret
fcomip
ljmp
xchg
adc
adc
adc
lahf
mov
fbld
mov
lcall
xor
stos
lds
fsubr
push
ret
mov
add
gs
ljmp
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
jecxz
pop
icebp
stos
push
cmp
and
push
ds
push
mov
add
stos
adc
jl
mov
mull
mov
add
jg
sub
add
add
jno
jb
call
or
les
repz
push
inc
addps
and
lahf
jp
lock
and
mov
xor
dec
les
jmp
out
cmpsb
cld
jl
add
imul
add
test
dec
mov
decl
mov
test
add
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
adc
repnz
cltd
sub
std
repnz
decl
outsb
add
push
xchg
test
in
add
adc
rclb
testb
and
mov
bound
int3
add
call
or
sub
push
sbb
jns
inc
or
lds
lea
xchg
mov
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
ljmp
mov
push
insb
stc
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
pushl
cld
cs
out
jbe,pn
cltd
adc
xchg
push
pop
inc
jae
call
mov
and
dec
in
sub
lock
fbstp
outsb
add
jge
fimull
in
inc
jle
mov
inc
sbb
mov
cwtl
mov
mov
repnz
xchg
xor
jg
add
jnp
sub
incl
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
incl
and
and
aas
sub
outsl
jbe
and
xchg
shlb
push
jg
test
mov
pop
and
pop
sti
sub
bound
mov
lcall
and
xchg
les
lock
cld
fidivl
add
xchg
cmpsb
or
bnd
pop
xchg
decl
add
cmpsb
dec
test
jg
sbb
push
and
in
or
aam
adc
jo
cld
cmp
inc
xorb
aaa
addr16
in
ss
and
sub
jo
dec
shlb
lcall
add
imull
cmpsl
pop
sbb
push
add
in
movsb
pop
mov
pushl
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
jmp
clc
and
sbb
aam
and
pop
mov
adc
cld
adc
addb
jmp
sbb
subl
aam
in
push
mov
cmp
pop
andb
movsb
push
or
mov
flds
sbb
call
cs
inc
in
or
sub
and
adc
leave
mov
imul
sub
call
addl
fisubrl
xchg
pop
scas
dec
mov
cmpsl
mov
jmp
imul
lods
lds
xchg
cmpb
stos
dec
sbb
push
and
mov
movsb
mov
fwait
call
loope
add
sbb
lods
hlt
bound
add
cmp
test
jp
pop
enter
std
jle
repnz
mov
ds
sub
and
mov
out
mov
mov
cmp
jno
rorl
add
ljmp
outsl
mov
pop
leave
adc
jno
incl
mov
adc
mov
jmp
add
or
jl
pop
adc
scas
addb
cmpsl
bound
insb
xchg
leave
push
dec
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
call
addr16
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
ljmp
add
idivb
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
adc
push
jo
push
mov
sub
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
dec
loop
fildll
add
mov
xor
hlt
lret
mov
dec
or
mov
mov
cmpb
sbbb
cli
xor
rcll
iret
test
aam
xchg
sub
decl
cmp
jne
add
fcom
and
mov
pop
pop
mov
jb
shr
in
pop
lock
pushl
cmp
cmp
push
int
add
test
jns
test
jnp
loop
pusha
pop
out
inc
pop
mov
fdivr
jge
psrld
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
popa
push
mov
xchg
js,pt
sbb
call
shll
mov
rolb
ficompl
pop
loopne
cmp
jnp
pop
incl
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
incl
add
sti
sub
andb
xorl
sbb
test
jp
hlt
mov
fildl
rorb
mov
xchg
and
enter
add
icebp
add
and
imul
movsb
or
jbe
pop
add
jle
push
xor
mov
adc
sbb
out
add
mov
lcall
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
jmp
mov
and
bound
popf
adc
enter
popf
sarb
scas
cmp
and
jg
aaa
std
test
cmp
cmp
pop
mov
push
ljmp
loop
stos
push
jns
popf
ror
add
pop
pop
test
clc
stc
outsl
cmp
xor
scas
adc
mov
cli
jnp
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
or
mov
or
push
out
jbe
jmp
adc
and
xchg
mov
or
inc
lock
cmp
inc
mov
adc
leave
in
push
jmp
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
adc
arpl
popa
inc
cmp
jge
xchg
outsb
les
pop
sahf
hlt
mov
sbb
push
bnd
punpcklbw
aam
inc
rcrb
scas
orb
imul
ja
lock
jecxz
jge
adc
nop
dec
outsb
sbb
cld
mov
out
xchg
or
pop
xor
jle
decl
or
mov
hlt
inc
sti
jmp
movsb
and
ss
adc
mov
mov
lcall
in
ds
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
cld
jmp
or
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
call
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
cld
pop
incl
push
ja
jae
adc
inc
aam
lcall
inc
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
decl
xor
mov
in
pusha
iret
inc
jg
and
push
dec
shlb
ljmp
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
lock
enter
jbe
pop
les
sbb
shlb
dec
jge
test
lock
mov
mov
outsl
imul
push
jecxz
jno
fs
pushl
xor
mov
xor
stos
ja
dec
arpl
cld
mov
jno
popa
imul
add
insl
jnp
inc
ret
sub
sbb
call
adc
or
add
xlat
int
cmp
sti
adc
xor
sub
je
sarl
orl
pop
cmp
mov
jl
decl
xchg
cmp
js
xchg
in
or
cmp
incl
pop
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
pushl
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
std
call
test
das
jle
clc
xor
std
shrl
jecxz
fs
insb
push
rorb
leave
or
lods
out
nop
popf
lock
aad
pop
shll
mul
cmp
push
sbbb
cli
pop
movb
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
fwait
inc
pop
hlt
stc
pop
mov
rcl
sahf
sbb
push
call
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
ljmp
xor
add
jmp
push
push
mov
psubb
mov
ljmp
lret
in
add
mov
mov
rolb
idiv
jmp
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
cmp
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
call
cld
fmul
sub
rorl
rolb
and
pop
jg
push
std
inc
or
xor
and
data16
out
and
call
rorl
fcomip
sti
adc
sbb
mov
mov
sub
sub
enter
inc
pushl
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
fwait
sar
cmp
sbb
pusha
test
pop
adc
loop
pop
mov
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
push
push
lcall
jo
inc
je
js
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
inc
or
xchg
inc
mov
adc
call
pop
xchg
mov
out
out
mov
clc
jmp
or
int
fstl
jecxz
xchg
imul
cli
scas
mov
incl
cmpsb
sub
movsb
mov
leave
fsubrp
pushl
incl
lds
and
andb
xor
filds
jmp
jne
add
pusha
insl
cli
test
enter
incl
mov
jnp
pusha
pop
in
cs
pop
bound
and
je
int3
int3
sbb
int3
fdivr
call
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
lcall
jle
push
sar
or
mov
push
lods
call
sub
test
cmp
jmp
add
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
jg
mov
loopne
cmp
sbb
and
mov
jp
ljmp
insb
and
roll
add
mov
sbb
das
pop
rcrb
mov
test
add
clc
daa
xchg
add
call
pop
add
mov
pop
popa
add
xor
xlat
adc
call
gs
scas
lret
ljmp
or
mov
adc
popa
sbb
mov
lea
lcall
xor
lock
lahf
or
add
out
jg
add
lds
add
ds
cmp
add
ja
sub
cmpsb
decl
lcall
shrd
xchg
cmp
dec
add
adc
jne
pop
roll
add
sub
aas
stos
stos
in
sbb
ljmp
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
mov
push
or
cs
add
jae
jmp
add
push
pop
iret
cmp
gs
lock
cmpsb
mov
das
adc
out
rcrb
pop
push
sub
add
push
cmp
jle
movsb
cmp
mov
aam
mov
lods
lret
shrb
cmp
addr16
pushl
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
fbld
sbb
jb
xor
sbb
cmp
xchg
movl
inc
add
incl
or
dec
sbb
or
shlb
std
dec
ret
andb
lock
pop
sar
incl
mov
js
pop
test
mov
cmp
pushf
adc
jbe
sbb
outsl
loopne
mov
das
scas
int3
pusha
push
add
add
je
les
data16
out
xchg
jno
add
add
mov
clc
jmp
daa
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
ljmp
fmul
and
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
outsl
cli
incl
test
aas
dec
add
or
mull
sar
pop
dec
out
call
call
pop
icebp
das
jl
out
je
jg
loope
sub
push
mov
ffree
add
jg
pop
cmc
xor
jmp
outsb
inc
dec
loopne
pop
sub
dec
xchg
inc
sbb
cmp
aad
or
les
nop
mov
pushl
clc
out
jmp
mov
mov
icebp
mov
clc
ljmp
cli
push
lret
mov
testb
sub
pop
sbb
fcmovb
add
cmp
pop
icebp
insl
jecxz
popa
out
mov
push
loopne
dec
clc
int3
jno
mov
or
lcall
les
rcrb
push
mov
cmp
push
cmp
lods
pushl
decl
imul
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
ljmp
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
lcall
xor
add
cmp
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
fistpll
out
add
cmp
es
xlat
pop
sbb
add
xor
sub
push
lahf
fdiv
mov
decl
scas
enter
xchg
add
cmp
push
push
clc
sbb
inc
mov
ret
fbstp
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
adc
jmp
pop
inc
push
pop
pusha
shll
arpl
xor
js
and
cli
aaa
ss
call
lcall
rorl
stc
gs
sarb
loopne
dec
cli
int
hlt
addb
adc
or
xor
dec
push
fs
stc
and
add
pop
push
out
fwait
loope
lock
mov
and
mov
lcall
mov
cltd
pop
inc
xchg
jnp
xchg
add
shlb
sahf
mov
push
stc
test
sbb
out
xor
inc
push
iret
and
add
in
addr16
adc
or
sbb
nop
stos
sbb
mov
popf
cmc
in
fsubs
adc
and
xchg
xor
fstps
nop
test
scas
mov
fadds
mov
shrb
sbb
cmc
ja
gs
pop
jmp
cmp
dec
sub
rol
getsec
outsb
mov
inc
inc
jle
adc
test
xlat
or
add
add
loop
std
incl
push
add
pop
cli
std
push
inc
clc
jo
xor
call
mov
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
pushl
add
or
dec
fstpt
cmp
inc
outsl
and
pushl
pop
divb
inc
mov
mov
std
ljmp
cmp
jnp
xor
cmpb
pop
sbb
cmpsb
out
mov
jmp
xchg
jne
xchg
jle
xor
inc
call
scas
mov
push
lea
imul
xchg
std
jg
cmp
lock
repnz
bound
jnp
xlat
decl
fs
ljmp
int3
adc
mov
add
xchg
pusha
clc
jg
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
pushl
dec
xchg
mov
dec
add
call
jne
ljmp
inc
test
sub
mov
pop
push
call
inc
pop
iret
sub
cld
shlb
pushf
push
lret
or
insb
pop
cmp
pushl
icebp
mulb
dec
shll
xlat
loope
jb
inc
aas
and
orb
lcall
decl
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
mov
jmp
cmc
and
ds
jo
add
loop
dec
sub
mov
outsl
addb
fadds
xor
adc
in
ljmp
pop
adc
daa
push
sub
test
add
cmpsb
or
or
xlat
push
xorb
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
xlat
call
jl
into
lret
fidivl
jbe
test
xor
mov
jg
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cld
ljmp
cmp
dec
pop
jb
adc
dec
push
loope
lret
jmp
cmp
pop
xchg
lcall
adc
jl
sbbb
movsl
ret
imul
aas
push
pop
xchg
jg
adc
sbb
push
add
fs
and
dec
dec
scas
nop
jle
push
lret
xor
dec
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
and
xchg
scas
sub
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
jle
add
fmull
sbb
pop
jge
pop
ret
xchg
out
mov
or
cmp
dec
xor
xchg
adc
pop
cmp
fstpt
dec
push
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
call
adc
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
pop
shr
jne
and
mov
test
xchg
sbb
out
and
aad
or
jae
mov
addb
fs
jg
lds
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
out
push
cmp
mov
es
cld
cmpsb
stc
pop
or
pop
jp
loopne
stos
pop
dec
movb
xchg
fwait
cmp
jmp
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
hlt
ljmp
cli
cltd
inc
xor
test
scas
rcll
add
loop
mov
fstpt
sbb
push
jmp
adc
ja
jo
dec
sub
out
enter
sub
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
incl
adc
mov
shl
add
or
add
add
fstpl
pop
add
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pop
lock
pushf
sarb
mov
adc
mov
imul
lcall
cmc
sub
jp
std
fcoml
pop
cmp
frstor
movsl
add
push
dec
and
mov
add
out
pusha
jno
shll
add
xor
push
push
roll
incl
je
inc
sbb
sub
mov
shlb
lea
cmp
fadds
sub
xlat
test
loopne
xor
add
cli
xchg
orl
jp
or
cmp
sub
test
incl
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
lds
cwtl
sbb
mov
push
out
dec
cmp
decl
sbb
cld
cmovb
out
sub
sbb
fistl
imul
fstpt
sub
add
rol
and
lcall
clc
adc
movlps
push
repnz
call
cmp
orb
test
dec
shr
loop
pop
sub
or
loopne
pusha
ljmp
nop
xlat
das
aas
cmp
and
lock
push
or
enter
cmp
lahf
cmp
in
mov
add
or
pushl
jnp
xor
shl
add
cmp
nop
mov
fsubr
cld
call
and
out
jb
test
sbb
inc
out
sub
ljmp
clc
ja
inc
testb
int3
or
xlat
jle
pop
jbe
mov
pop
hlt
pop
dec
int3
rclb
ss
pop
adc
in
add
repz
mov
hlt
je
and
push
mov
sti
pop
arpl
pop
add
push
mov
mov
jmp
cmpb
int
sub
jmp
jle
lock
shl
jle
icebp
jne
sbb
pop
fs
sbbb
aad
xchg
or
inc
fisttpl
jmp
jo
add
mov
jmp
lret
test
hlt
loope
push
stc
sub
sub
xchg
push
xchg
clc
xor
jg
inc
mov
add
adc
fcomip
jmp
arpl
iret
mov
push
scas
clc
jg
and
sbb
sti
pop
and
xchg
pop
nop
or
and
jmp
add
imul
loopne
jb
arpl
cmp
push
mov
stos
push
setb
jno
ret
idiv
mov
pop
sub
and
and
adcl
ret
fadd
shrl
lock
call
cld
cmp
je
pop
inc
push
xor
lahf
adc
inc
fldl
mov
fmuls
imul
loop
mov
test
repnz
xchg
pop
pop
push
andb
and
jb
mov
push
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
ljmp
ret
into
sbb
or
aaa
jge
sbb
nop
lods
scas
int
push
add
ljmp
jge
mov
cld
stos
mov
ljmp
out
mov
xchg
adc
test
pop
stos
sbb
shrb
mov
pushl
mov
nop
xchg
dec
xor
xor
call
pop
add
decl
incl
xchg
add
cmp
jmp
in
cmpl
jbe
stos
pop
inc
ds
incl
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
jg
add
dec
lret
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
icebp
sbb
movsb
in
pop
jle
hlt
or
pusha
call
dec
into
aad
sub
lds
incl
jmp
mov
jne
sbb
or
inc
jnp
or
push
xchg
negb
jg
cmp
push
jae
mov
push
loopne
daa
test
hlt
outsb
divl
and
loop
mov
movsb
lcall
xchg
push
inc
das
ljmp
mov
and
jno
mov
lahf
jle
nop
decl
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
jg
call
or
xchg
jno
sub
in
add
daa
mov
mov
mov
or
repnz
sarb
cltd
dec
rclb
decl
jmp
mov
out
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
rcl
incl
adc
push
test
popf
mov
out
mov
or
push
ljmp
sti
cmp
inc
movsl
push
lahf
add
xor
daa
test
push
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
jmp
jge
cmpb
lea
ret
scas
ja
decl
decb
movsb
mov
mov
mov
or
adc
movl
loopne
incl
je
xorb
ljmp
call
inc
pop
adc
shlb
add
fldenv
aam
addr16
stos
mov
mov
call
add
dec
mov
pop
fmuls
inc
pop
pop
sbb
ja
sbb
pushl
cmp
jne
xorl
cmpsb
adc
cli
sbb
decl
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
xchg
add
cmp
push
push
and
xor
jl
and
imul
iret
into
es
in
lret
sub
aam
xor
hlt
in
ror
cmp
sbb
push
mov
ds
jne
popa
and
cld
and
idiv
add
mov
mov
inc
cwtl
test
sbbl
rcl
mov
mov
xlat
mov
adc
rcrl
xchg
cmp
ja
mov
incl
cmpsl
scas
sub
ljmp
cmp
aad
out
popf
je,pn
add
mov
hlt
iret
push
bound
jp
gs
adc
cmp
popa
cmp
call
mov
jns
or
pushf
cwtl
hlt
lcall
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
lcall
lret
call
xor
add
inc
mov
popf
adc
add
ljmp
push
adc
xor
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
push
dec
sub
leave
inc
data16
adc
pop
and
mov
sbb
add
push
cmp
inc
dec
jmp
mov
add
xlat
jns
shll
rorb
xchg
pop
daa
out
loopne
mov
outsl
cli
mov
add
call
or
xor
jmp
push
add
sub
sub
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
mov
adc
and
cmp
jne
ficomps
lock
clc
adc
es
lcall
or
adc
add
in
cmp
shlb
jne
andb
or
sbb
fnstenv
inc
test
loope
out
dec
ret
and
shlb
xor
movsb
out
cmpsb
jle
cmp
loopne
inc
push
dec
test
sbb
sub
or
fdivr
add
dec
lods
mov
or
filds
push
add
add
test
nop
push
cmp
jg
movsb
leave
push
adc
and
loopne
lcall
push
jl
mov
addl
clc
and
decl
in
or
or
dec
orb
in
ficoml
add
add
mov
decl
adc
mov
in
stos
xchg
loope
jge
mov
movb
loopne
mov
call
jne
add
sbb
out
testl
cmc
lock
pop
and
jge
lcall
adc
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
out
inc
mov
jmp
inc
dec
insb
cltd
outsl
sub
int
mov
add
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
decl
xlat
jbe
mov
jo
sub
std
push
les
adc
pop
aam
aaa
jmp
xor
subb
enter
mov
call
cld
mov
ret
ljmp
outsl
and
or
pop
lcall
mov
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
jmp
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
cs
cwtl
add
jmp
and
ljmp
inc
xchg
or
ficompl
mov
sbb
xchg
enter
dec
stos
in
jnp
lret
pop
loopne
mov
push
mov
cs
cmc
or
cmp
lock
mov
popa
push
sbb
adc
repz
xchg
jg
mov
mov
hlt
lret
add
rcll
sub
ljmp
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
dec
test
xor
push
mov
pusha
and
add
jmp
bound
lcall
adc
mov
adc
loopne
inc
mov
cwtl
mov
xor
popa
jae
xor
clc
stos
fnstsw
push
dec
je
and
adc
push
icebp
ja
pop
std
hlt
js
out
fs
decb
popa
mov
xchg
or
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
call
mov
call
leave
add
xor
movsl
addb
addb
in
adc
and
push
lret
pop
fsubrs
subb
negl
ljmp
mov
cmp
add
mov
adc
mov
mov
inc
orb
inc
mov
sahf
adc
sbb
add
mov
fwait
shrb
in
add
mov
push
push
mov
jmp
mov
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
inc
incl
movsb
dec
and
xor
subb
pushf
fidivs
or
push
frstor
push
jb
cmp
lock
lahf
adc
xor
movsl
outsl
xchg
icebp
push
cs
and
pop
push
sbb
cli
das
and
add
shll
xor
dec
jp
incl
gs
ret
push
sub
popa
mov
or
jge
dec
sbbl
movsb
enter
sbb
mov
or
ljmp
jecxz
jl
mov
test
adc
mov
inc
pop
lock
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
sbb
dec
loop
adc
push
dec
sbb
jg
incl
bound
pop
cmp
dec
repz
xchg
pushf
dec
subl
cli
or
mov
shlb
dec
out
idivl
xchg
add
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
mov
call
inc
or
add
xchg
out
cli
lcall
ds
pop
daa
cli
les
sbb
fcoml
or
fcomip
outsb
into
incb
mov
adc
rclb
pusha
jge
push
xor
les
jae
in
push
rorl
jg
push
je
int3
jmp
fdiv
pop
cmpxchg
mov
rolb
lea
mov
mov
dec
push
pusha
idivb
lock
inc
or
jge
je
jg
and
add
sbb
xor
les
mov
mov
jmp
hlt
mov
add
or
push
ljmp
jmp
loopne
mov
add
mov
inc
xchg
add
add
loope
inc
add
cmp
inc
push
pop
adc
sub
decl
add
stc
or
push
or
sbb
movb
sub
mov
pusha
roll
pushl
mov
jge
dec
push
or
jbe
mov
sub
call
js
jmp
sbb
cmp
mov
lret
repz
mov
repnz
add
ret
push
cwtl
decl
test
push
or
lea
call
cmp
cwtl
xor
mov
pop
dec
or
incl
fcompl
and
outsl
push
push
mov
rcr
mov
cwtl
mov
and
test
pop
sub
xchg
inc
sub
andl
decl
mov
ss
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
jg
decl
add
jecxz
imul
xor
scas
sbb
cmp
shr
decl
mov
inc
in
jae
insb
cmp
mov
xchg
push
loope
fwait
pop
xchg
cmpsl
add
adc
sahf
xchg
sub
push
jne
jbe
mov
push
bound
aam
cmp
repnz
mov
ljmp
cmp
das
addl
aam
adc
ret
mov
jmp
loop
add
jmp
loope
adc
cmp
adc
pop
aam
pop
cld
mov
es
sti
sub
push
shll
and
add
in
incl
incl
shrl
es
dec
fdivl
xchg
cmp
mov
add
add
lcall
ljmp
sub
das
cmp
pop
and
ss
ljmp
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
pop
hlt
pushl
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
adc
fdivrl
and
nop
loopne
clc
in
inc
in
lret
adc
sub
call
cwtl
mov
adc
mov
sti
jne
fcos
mov
les
dec
out
lds
mov
jp
fldt
add
jl
xchg
hlt
shlb
jne
in
aas
push
lea
add
pop
sub
js
sub
cli
cmpsb
mov
orl
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
hlt
ljmp
sub
subb
xchg
loop
inc
push
xor
add
push
mov
data16
cmp
adc
decl
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
inc
add
jmp
aam
and
mov
lcall
jmp
mov
mov
and
test
lds
fcomip
jg
mov
mov
jle
add
xor
pop
inc
insb
out
mov
outsl
jg
push
cmc
inc
mov
xchg
xor
add
lea
cli
push
jmp
decl
jle
jne
xchg
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
lock
ficompl
movsb
pushf
sbb
lods
lds
fnstsw
mov
jmp
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
and
pushl
out
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
sub
js
cltd
mov
fbld
jg
push
or
or
or
or
add
sub
add
cld
xchg
aam
mov
xor
add
adc
shlb
test
fstp
movsl
fs
lds
or
and
pop
mov
lock
cmpb
pavgb
mov
push
jg
sub
pop
call
ljmp
in
insb
mov
nop
adc
jge
sbb
and
mov
adcb
push
ds
dec
in
inc
jmp
xor
movsl
jb
stos
lcall
incb
push
mov
dec
fisttpl
jne
and
data16
lcall
sbb
and
add
adc
sbbl
aas
loope
in
add
movsb
or
dec
fsubr
sbb
call
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
inc
incl
add
xor
and
enter
ss
ds
jg
mov
dec
cmp
fsubl
lock
loop
cmpsb
pop
mov
push
mov
inc
add
push
fdivl
and
mov
addl
decl
dec
movsl
mov
mov
in
lds
nop
mov
call
std
push
mov
xchg
mov
xor
lahf
out
xlat
shlb
pushl
js
jnp
cmp
inc
add
push
jg
inc
flds
sub
decl
add
push
addb
je
pop
aas
add
sbb
stos
jg
rorb
fdivrl
pushf
xor
cwtl
mov
pop
mov
xchg
dec
mov
jb
jns
pop
lock
inc
cmc
add
xor
or
loop
fldl
and
leave
iret
sub
incl
outsl
mov
jo
add
out
jp
cmp
xchg
std
cmpsb
rolb
outsl
pop
add
sub
call
ss
mov
dec
add
loope
nop
adc
jae
add
rcrl
incl
cmp
lahf
xchg
ret
inc
cltd
je
adc
or
xchg
shlb
and
mov
jmp
loop
lret
lock
movl
mov
or
push
ror
xchg
clc
movsb
sbb
adc
test
in
push
nop
mov
add
add
lcall
sbb
lret
push
sub
call
ljmp
or
out
rorl
adc
or
jmp
das
mov
decl
into
add
repnz
dec
hlt
adc
and
mov
inc
lock
push
adcb
shll
sub
dec
and
sbb
mov
mov
jp
add
jg
mov
push
mov
rclb
inc
jp
fxch
xor
xchg
mov
or
dec
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
mov
jno
push
mov
sti
aam
sbb
lret
les
movsb
push
decl
nop
in
pushf
cld
push
or
push
in
inc
sarl
mov
mov
int3
aam
dec
std
inc
in
cld
lock
add
out
repz
adc
pop
pop
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
divb
not
sub
fidivrs
decl
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
pop
cmpb
add
mov
xchg
hlt
ror
inc
jge
lcall
jno
mov
pop
mov
test
out
decl
push
mulb
xor
repz
push
add
jne
mov
andb
incl
stc
imul
ja
cs
mov
or
je
decl
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
cli
call
dec
add
cmp
shlb
nop
addr16
mov
jae
xlat
dec
push
fcomip
bound
push
adc
dec
sub
dec
inc
and
dec
mov
inc
pop
xor
xor
mov
xor
popf
push
pop
rcrb
jnp
je
shrb
and
dec
inc
into
sbb
adc
daa
mov
ja
push
cmp
mov
jno
sti
pop
mov
test
jp
movsb
out
pop
stos
xchg
pop
std
jmp
add
and
mov
fstpt
pusha
scas
pop
insl
iret
mov
xchg
test
push
push
jg
xchg
push
mov
cmc
pop
pop
add
pop
fmul
jge
pushl
jg
ret
pause
mov
dec
add
or
fs
jmp
lock
rcr
test
shrb
lods
and
cmpsb
in
sub
out
clc
lcall
mov
out
push
pop
jmp
mov
push
jno
sar
les
and
inc
mov
mov
aam
mov
mov
mov
fwait
ljmp
clc
clc
adc
add
ljmp
es
mov
add
push
movzbl
mov
into
mov
clc
shlb
int
jb
mov
and
incl
fldt
dec
ljmp
or
movsb
push
push
ljmp
push
mov
adc
adc
ljmp
mov
lcall
push
je
lock
test
push
jae
stos
pop
and
je
decb
icebp
sub
mov
mov
and
xchg
mov
call
dec
mov
sub
rolb
or
loopne
pop
cmp
pop
mov
fs
cmp
out
adc
stos
hlt
cmp
add
jmp
cmpsl
outsb
orl
mov
or
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
jg
filds
sbb
push
sbb
sbb
or
xor
lea
nop
mov
mov
mov
mov
pop
sub
jl
add
and
jo
inc
jg
aaa
and
push
jae
out
test
add
sbb
xor
jge
add
sbb
fs
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
rcll
ja
addl
je
push
xchg
add
sbb
mov
inc
aaa
jmp
call
pop
push
add
mov
rolb
jg
incl
loopne
ds
dec
sub
fsubrs
or
push
jl
sbb
ret
xor
clc
pop
push
incl
sbb
hlt
sti
jmp
cmp
inc
cmpsb
clc
cmpsb
pop
xchg
stos
mov
mov
inc
pop
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
incl
mov
scas
loope
out
and
mov
cld
add
leave
idiv
mov
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
jg
pop
cmc
rol
inc
mov
or
adc
mov
mov
inc
add
bound
push
ja
pop
add
in
out
dec
inc
das
inc
dec
mov
push
mov
mov
leave
mov
imul
sarb
cwtl
mov
adc
pop
rcrb
mov
ficoms
and
jno
or
adc
mov
xor
add
stos
clc
jbe
jns
hlt
insl
xchg
jns
ja
nop
jle
nop
arpl
push
mov
mov
es
inc
push
adc
pop
cmp
pop
leave
cli
std
mov
mov
scas
jnp
add
add
jp
jg
mov
ret
pop
movsl
mov
mov
cmp
mov
nop
lock
in
sbb
ljmp
inc
ljmp
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
lcall
loop
std
sub
popa
fcom
inc
sbb
add
cvtpi2ps
jg
int
push
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
pushf
out
mov
movsl
xchg
shrb
and
jo
in
mov
jg
pop
jmp
scas
adc
jle
jg
and
fcom
push
ljmp
cli
mov
fists
jl
jg
add
cmpb
inc
sbb
and
inc
fs
or
call
fmuls
push
out
add
dec
mov
inc
push
pop
pop
inc
lds
cmp
fwait
pop
push
xchg
adc
sbb
inc
outsb
jne
and
add
loopne
sub
dec
sub
outsl
add
inc
aas
xor
add
hlt
mov
mov
push
adc
xchg
scas
mov
mov
push
pop
test
fsubrs
add
in
or
sub
jmp
mov
incb
or
movsb
and
inc
lock
mov
jg
pop
cmp
mov
repnz
sbb
pop
inc
in
xor
fwait
data16
mov
mov
add
jmp
lock
xor
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
incl
jecxz
in
mov
mov
sub
dec
add
push
jne
mov
or
loop
stc
pusha
add
fs
add
movsb
adc
sub
decl
cmp
lods
jae
add
or
shl
add
push
pop
push
cmc
call
adc
adcb
sbb
sbb
pop
push
and
and
dec
jmp
add
sub
sub
sub
cs
bound
add
cmp
dec
pop
clc
dec
inc
icebp
sbb
fcomip
cs
insb
sbb
loopne
and
cmp
and
jp
and
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
xor
pop
js
jge
lods
sub
jns
sbb
in
jle
fstl
add
repz
adc
sti
mov
movl
mov
loope
in
adc
sbb
enter
mov
ljmp
stos
lods
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
add
adc
movb
int
and
lcall
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
mov
push
cmp
testb
std
add
jo
or
add
jmp
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
incl
inc
sti
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
incl
lret
iret
add
xchg
cmp
xchg
xchg
lcall
inc
lds
sahf
lahf
ss
out
movsl
das
cmpsb
cmpsl
lock
cmpsb
jg
jg
inc
mov
adc
jge
mov
lds
lret
lcall
call
add
ror
sbb
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
not
clc
sti
stc
incl
cwtl
enter
mov
sbbb
pop
or
or
or
dec
push
mov
cmp
and
add
inc
xorb
rorb
decl
mov
jge
add
cwtl
and
mov
mov
mov
rol
sbb
dec
adc
fstl
sar
filds
in
in
xchg
aad
xchg
clc
ds
ret
mov
mov
dec
mov
fsubl
mov
mov
icebp
mov
sbb
inc
shlb
add
and
add
imul
pushl
std
pop
and
loopne
add
dec
outsl
adc
or
inc
call
aas
cmp
jg
cmp
loopne
pushl
rolb
cltd
pop
xchg
or
lds
push
push
rolb
add
pop
xchg
call
mov
pop
push
xchg
les
pop
loopne
lock
loop
loopne
inc
mov
or
sub
pop
loopne
cmp
aam
add
fmull
fwait
add
je
or
inc
hlt
sub
dec
hlt
decl
lock
xor
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
call
loopne
popf
insl
mov
or
adc
push
cmpb
loopne
xlat
shl
push
incl
jo
jecxz
out
xor
add
pusha
addr16
mov
das
in
cli
je
roll
xchg
aam
call
jmp
sub
mov
adc
mov
adc
push
cmp
ss
inc
incl
mov
and
loope
add
xlat
cmp
xor
push
jae
test
jp
mov
mov
inc
jl
mov
add
or
pop
sub
pop
leave
decl
xor
cld
cmp
fwait
or
ret
push
pop
andl
outsl
sahf
jo
push
add
sub
ja
sub
ss
adcb
or
jle
add
jg
lcall
jno
data16
gs
ret
ja
mov
cmp
cld
pushl
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
fwait
or
out
pop
daa
sbb
lds
scas
mov
cld
jg
pop
jno
push
add
push
fstl
add
xor
stos
ret
negb
pop
cld
jle
dec
imul
sbb
push
repz
cmp
mov
outsl
incl
mov
jno
add
out
inc
out
mov
sbb
jo
push
ljmp
rclb
decl
in
sar
mov
xchg
xchg
jle
and
sbb
push
push
test
outsl
cli
out
mov
fists
mov
subb
adc
sub
incl
popw
mov
add
repz
ret
xlat
in
mov
mov
jg
fsub
push
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
inc
scas
out
and
mov
inc
sub
jne
sbb
push
out
cmpsb
mov
notl
cmpsb
in
cmp
add
jle
push
out
lret
sbb
push
pop
test
pop
sbb
je
adc
cld
inc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
and
mov
push
sub
add
scas
push
hlt
and
out
lock
into
movsl
fdivl
jmp
popa
lcall
cmp
mov
inc
addr16
lock
mov
push
mov
es
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
incl
cwtl
les
add
out
xor
dec
jno
mov
mov
mov
loopne
add
shlb
add
scas
clc
les
jp
jle
daa
sbb
adc
das
decl
pop
fdivr
cmp
lret
add
out
add
and
mov
push
rolb
fildll
add
rorb
imul
cmp
xor
mov
std
movsl
mov
incb
cmp
inc
jo
add
out
add
insl
loop
incl
push
hlt
pop
out
push
je
repz
lcall
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
cmp
pop
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
ljmp
jg
add
cmp
mov
adc
rolb
loopne
pop
mov
jno
cmp
jo
add
insl
mov
das
insb
dec
push
sbb
cmp
cli
jo
ja
sub
es
lock
mov
cli
call
mov
add
leave
jno
sbb
leave
in
add
cmp
adc
inc
call
pop
pop
out
in
cli
push
std
mov
out
xchg
dec
and
ljmp
ss
ret
mov
inc
cmp
sbb
jmp
xchg
add
lock
mov
cmc
mov
aaa
std
outsb
loopne
scas
aas
jle
js
and
js
loopne
ja
dec
call
ror
xchg
cmp
subb
or
or
lods
and
aas
lock
xchg
fdivr
stos
jg
dec
loopne
cmp
sti
subb
shrl
pop
lds
test
aad
incl
lahf
nopl
shr
inc
daa
xchg
rcl
mov
movsb
lret
lcall
mov
mov
xor
arpl
ja
jo
and
mov
lock
scas
add
mov
sub
dec
lock
clc
fistl
stc
lea
sbb
or
jg
loop
push
or
lcall
mov
cmp
add
pop
mov
in
shlb
and
std
in
cmp
add
subb
js
jg
leave
jb
dec
mov
jle
add
dec
and
add
jb
add
mov
push
pop
int3
pop
test
jne
mov
jp
push
lock
call
cmc
xchg
rclb
inc
inc
aas
add
pushf
adc
sbb
in
dec
mov
add
cltd
es
adc
push
rep
and
jle
pushl
bound
mov
movsb
cli
cld
sbb
push
xchg
xchg
insb
cmp
and
pop
notl
add
mov
hlt
decl
clc
jne
ds
lds
lcall
out
sub
add
jl
jle
or
add
adc
clc
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
sti
incl
adc
mov
lret
jb
add
sub
test
pop
and
sbb
jg
mov
pop
mov
sbbb
mov
xchg
mov
jg
lcall
lds
add
data16
mov
cltd
mov
push
or
adc
cmpb
dec
scas
xchg
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
cli
decl
scas
adc
mov
in
fwait
xor
ret
jns
repnz
mov
pop
aam
dec
aas
jecxz
jg
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
mov
jl
seta
push
mov
fldcw
sub
dec
mov
movsb
push
incl
es
mov
ds
pop
sub
jle
xchg
mov
jmp
fbld
in
push
or
dec
int3
sbb
inc
add
lea
and
pop
sbb
mov
mov
flds
test
sub
sbb
inc
adc
ljmp
cmp
or
add
xchg
adc
add
pop
stc
repnz
cmp
and
arpl
incl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
incl
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
push
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
clc
aaa
mov
test
add
mov
in
ret
out
xor
mov
add
mov
mov
filds
adc
and
add
call
jmp
mov
out
cmp
sti
das
xor
roll
fbstp
mov
and
push
mov
add
and
je
or
add
stos
add
add
aaa
sbb
inc
js
jg
cmc
cli
pop
je
add
pop
dec
mov
cmp
jg
test
cmpsb
lea
divb
adc
mov
or
ljmp
rcll
xchg
lret
push
mov
sub
dec
pusha
test
ficoms
je
into
dec
sahf
inc
pop
movsb
xchg
fmull
ss
incl
jle
and
rorb
lock
jne
addb
inc
pushl
inc
aad
add
lock
pop
add
pop
scas
mov
bswap
fcoml
ficomps
das
in
aaa
lcall
and
and
pop
pop
pop
sbb
mov
out
xor
inc
gs
sahf
decb
pandn
add
and
inc
or
mov
fwait
jbe
adc
sbb
push
or
or
mov
jmp
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
decl
jmp
add
roll
sub
outsl
cld
dec
clc
adcb
pop
aam
clc
cli
inc
add
lahf
or
test
loopne
mov
pop
std
ja
xchg
push
daa
lock
shlb
add
andb
add
cs
mov
fcmovnu
clc
add
add
cmp
into
lds
jmp
loope
and
test
imul
mov
test
pop
adc
sti
daa
aad
cmpb
jge
insb
or
test
lcall
sub
call
cmp
sbb
loopne
add
lock
notl
cmp
call
jl
mov
push
shlb
add
pop
insb
ret
stos
lds
int
decl
mov
dec
sbb
add
xor
loopne,pt
add
les
mov
test
ja
fdivs
add
andl
add
lcall
add
mov
jno
jg
cmpsb
jg
mov
mov
pop
pop
dec
sub
and
es
enter
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
call
test
sbb
xchg
pop
rcr
ret
add
add
or
pop
cmp
hlt
loopne
nop
addl
sub
aaa
incl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
push
addr16
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jg
mov
cmp
xorb
and
mov
nop
adc
popf
add
mov
sub
ret
jmp
mov
cmp
sbb
movsl
mov
mov
add
ja
xchg
cmpb
test
sub
push
jg
add
in
das
mov
stc
xchg
xchg
les
or
add
dec
inc
lcall
mov
repz
imul
clc
mov
jbe
push
lea
add
clc
pushl
lock
shl
mov
mov
scas
clc
sub
jecxz
call
sbb
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
les
scas
enter
adc
adcb
or
cli
repz
mov
inc
call
and
jl
inc
rorb
add
add
add
pop
out
jmp
mov
incl
cltd
jle
xchg
adc
add
add
in
mov
jle
push
imul
add
sbb
fdivp
pop
and
insl
add
outsl
adc
mov
jg
sub
sub
repz
in
jnp
adc
mov
sub
or
jae
push
add
data16
push
jmp
sbb
call
jne
add
out
or
inc
add
loop
pop
in
and
jo
inc
mov
inc
sbb
loopne
or
test
add
call
out
inc
add
jl
mov
lods
in
movups
loope
aaa
push
clc
incl
sbb
rclb
stos
mov
test
test
js
push
incl
outsl
pop
movsl
push
add
sub
enter
rcrl
loopne
clc
mov
xlat
lock
push
inc
cli
mov
cwtl
sub
fwait
cmp
subb
lods
ficoml
fs
mov
daa
hlt
jg
call
mov
sub
jo
ret
mov
adc
jbe
mov
xor
mov
ret
pop
and
and
jae
nop
mov
sub
out
cli
inc
dec
insb
add
mov
rclb
push
mov
fs
cs
jmp
mov
pop
inc
mov
pop
mov
push
xorb
jg
movsb
nop
add
jmp
test
jmp
ret
add
add
jo
bound
dec
pop
and
decl
push
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
add
and
pop
les
xchg
shll
loopne
jmp
dec
add
clc
inc
fmul
lcall
cmp
ja
clc
mov
cmc
daa
pusha
hlt
xor
sub
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
incl
or
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
aam
sub
clc
jp
ret
das
add
mov
sbb
js
iret
cmp
ljmp
testl
add
out
add
loop
test
xchg
std
sub
sbb
imul
cmpsb
shlb
mov
add
jbe
xchg
jg
lahf
lea
dec
mov
dec
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
int3
rcrl
mov
incl
push
outsb
jns
sub
add
mov
mov
dec
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
ljmp
push
mov
jmp
lret
incl
pop
mov
aam
and
lcall
out
adc
sub
les
add
sbb
adc
decl
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
sub
push
push
cmp
cmpb
addl
cmp
imul
scas
fcomip
popa
aas
jo
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
lcall
xor
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
idivl
lret
inc
push
xchg
ret
push
or
mov
jne
pop
pop
shlb
jo
adc
loopne
shufps
lcall
andb
mov
cmpsb
pop
divb
jne
jle
add
cli
loop
push
sbbl
loopne
or
add
ljmp
and
adcb
lds
add
push
sub
lock
shr
sub
ljmp
ja
adc
inc
cwtl
add
mov
outsl
ret
jg
and
pop
repz
inc
add
mov
das
insl
in
jg
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
push
cld
xchg
adc
mov
lea
lock
jmp
adc
mov
scas
add
pop
es
inc
adc
ljmp
insl
cmp
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
scas
lcall
mov
add
imul
xlat
popa
movl
sbb
or
clc
scas
jnp
sarb
inc
and
lcall
enter
xchg
jbe
jno
cs
sub
int
rolb
sub
pop
cmc
pop
push
mov
cmp
rol
or
add
ja
js
mov
sbb
ds
dec
std
ljmp
mov
inc
rcl
test
das
xchg
ret
decb
cmpsl
sub
and
repz
mov
or
test
sbb
pushf
test
decl
aad
les
loop
fisttpl
jmp
ljmp
pop
jmp
pop
andb
int
rolb
and
in
pop
sar
decl
xchg
add
ljmp
add
jge
ljmp
fimull
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
out
cli
mov
mov
push
add
dec
jns
xchg
sti
pusha
jo
add
push
mov
incl
cmpsl
xor
stc
add
rclb
shrb
push
inc
cli
inc
mov
sub
adc
or
call
std
loop,pt
add
add
adc
adc
xor
cmp
xor
ljmp
inc
mov
pop
push
pop
add
filds
sbb
mov
mov
std
mov
pop
pushf
add
jmp
and
das
bound
add
inc
dec
pop
insb
xchg
mov
jmp
push
push
icebp
test
xadd
lea
push
call
xor
pushf
pop
adc
jmp
inc
movb
or
mov
sub
and
pop
sbb
or
mov
xor
insb
lods
in
push
pcmpeqw
pop
jp
pop
dec
enter
or
ljmp
mov
mov
mov
add
fistpl
add
inc
scas
and
pop
clc
incl
push
xchg
inc
stc
sbbb
sub
pop
scas
xor
or
push
jo
add
mov
add
imul
sbb
add
add
push
add
ljmp
cmp
addb
lods
adc
in
daa
add
call
in
adcb
mov
sahf
xchg
fisttpll
hlt
out
mov
incl
clc
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
incl
movsb
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
ljmp
shlb
mov
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
mov
sbb
add
push
incl
or
xor
clc
aad
jae
add
inc
nop
mov
movhps
std
lahf
rorb
push
icebp
push
imul
xchg
incl
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
ljmp
mov
cmp
adc
sub
daa
mov
sbb
jg
mov
outsl
adc
sub
mov
add
sub
std
pushl
add
jne
mov
ljmp
push
add
push
clc
jg
xor
loope
mov
stos
fcomip
push
mov
jno
cld
adc
add
push
clc
pop
jb
add
sbb
mov
push
jbe
lods
xchg
je
mov
push
decl
mov
jmp
lods
cmp
mov
pop
je
dec
add
das
pushf
and
hlt
je
push
pop
ljmp
xor
scas
ds
inc
or
fildll
icebp
push
jp
push
cmp
push
das
clc
in
fwait
add
push
iret
in
xor
add
jmp
popf
sub
cli
incl
mov
pop
xor
mov
xor
inc
adc
dec
mov
pop
ljmp
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
enter
pop
and
push
dec
jns
add
js
xor
and
ljmp
and
sti
idiv
pop
add
mov
in
xor
cmp
scas
mov
rol
push
sbbb
incl
test
ljmp
cmpb
mov
push
push
lahf
pusha
pushf
add
sub
inc
verr
mov
jg
xlat
or
mov
sbb
fldl
repz
mov
jg
sti
out
push
ljmp
lods
dec
add
leave
fmull
jne
decl
fdivs
inc
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
pop
add
mov
add
imul
movl
lock
mov
test
jo
or
stos
jle
cmpl
jns
loopne
jl
stc
scas
push
xchg
rclb
mov
ds
add
dec
add
cld
dec
loopne
aas
dec
and
xlat
push
lret
pusha
cmp
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
call
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
or
jae
pop
jmp
add
loop
fldenv
loopne
ljmp
ljmp
jmp
cmp
shll
fcompl
ja
lea
es
mov
loopne
stos
call
rorb
ficompl
add
add
push
and
jle
test
sub
call
sbb
add
xor
call
mov
inc
fdiv
fcmovb
inc
mov
lods
jb
rolb
cli
push
push
sub
sub
les
fldcw
loopne
ljmp
pop
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
xor
sub
mov
aad
inc
stos
cmc
decl
or
cld
sbb
push
jmp
or
das
sbb
shlb
jp
bound
inc
jge
pop
mov
shll
push
push
ds
repnz
roll
push
mov
push
mov
xchg
xor
mov
idiv
pop
cs
add
push
add
sub
out
js
xchg
jecxz
adcb
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
jg
adc
loope
orb
sbb
xchg
popl
js
cs
adc
sbb
jecxz
idivl
push
mov
in
pop
loopne
lds
and
push
xchg
pop
sbb
pushf
sub
rolb
sub
dec
jo,pt
addl
les
jmp
rclb
call
sbb
jmp
push
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
mov
add
lret
mov
sbb
cmc
xlat
push
xchg
and
rorb
jmp
add
shrb
add
mov
pop
jb
and
sbb
call
inc
cmpsb
mov
xchg
stos
add
lcall
mov
push
mov
or
adc
and
xchg
loop
aaa
cld
int
sbb
inc
out
mov
sbb
repnz
push
outsl
cli
fildll
test
inc
fstps
sub
loop
lret
or
decl
mov
push
pop
add
inc
ds
mov
and
add
mov
add
cwtl
push
mov
sbb
movsb
inc
mov
lock
pushl
pop
pop
pop
rolw
js
mov
daa
mov
pop
push
ljmp
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
incl
jle
cmp
xchg
lret
popf
sbb
in
cld
imul
je
pop
call
enter
push
cld
jmp
or
sbb
pop
pop
sarb
xchg
sbb
add
add
jge
mov
nop
pushf
adc
mov
jo
dec
add
adc
and
add
incl
jmp
clc
hlt
cmp
push
xchg
sbb
movsb
outsb
push
add
sub
shrl
or
scas
mov
pop
xchg
jmp
push
lret
dec
mov
lea
pop
and
ljmp
or
or
and
bound
inc
mov
mov
and
inc
ds
jb
test
icebp
lret
ud2
mov
ljmp
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
ljmp
cld
fadds
and
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
push
inc
mov
shlb
mov
clc
pushl
add
fstpt
add
and
push
lods
fdivrs
loop
enter
mov
jl
push
mov
cmp
in
movsl
pop
sub
cmp
add
popa
sub
sbb
push
daa
mov
xchg
cmp
xor
std
in
xor
fcoms
jbe
sar
adc
call
or
dec
lret
jg
adc
xchg
add
cmp
jno
clc
test
add
adc
mov
add
cmp
loopne
fdivs
add
inc
std
stos
add
mov
dec
stc
sub
scas
xchg
mov
pop
cmc
ret
incl
pusha
push
adc
movb
pop
pop
mov
and
and
add
decl
das
add
iret
fwait
cmpsl
or
inc
or
pusha
or
jg
jae
stos
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
rorb
add
push
jl
jmp
fadds
fimuls
dec
jmp
fsubs
jmp
pusha
adc
test
push
add
out
sub
cmpsb
prefetch
aas
add
incl
push
jle
dec
xchg
mov
imul
sbb
aas
fwait
ror
lcall
call
xor
cmp
push
push
scas
pop
sbb
fs
inc
call
cld
call
inc
and
cs
xchg
add
adc
pop
fsubrl
lock
mov
sub
pop
mov
popf
push
decl
sub
adc
push
pop
lods
xchg
cmp
jmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lcall
call
adc
and
pop
test
das
in
or
or
dec
add
jmp
je
bound
fcomps
add
sub
daa
push
lods
dec
xchg
jo
dec
or
jg
sti
and
cli
mov
fnstsw
adc
mov
inc
jge
rcrb
lea
xchg
nop
sbb
ljmp
jle
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
jg
jmp
mulb
lcall
mov
dec
and
jge
shrb
cmpsb
incl
add
cmpb
orb
jge
shlb
xchg
inc
clc
and
inc
add
and
daa
mov
pop
sbb
jg
mov
icebp
je
add
sub
mov
lcall
shlb
xchg
aam
pop
loope
ds
adc
repnz
loopne
js
bound
das
cli
lea
es
mov
hlt
pop
mov
fisttpll
adc
adcb
mov
jmp
stos
rcr
mov
push
jmp
and
pop
lea
fdiv
fucom
jno
call
pushl
sub
inc
add
inc
subb
push
mov
in
or
cld
mov
fucom
add
inc
bound
fsubrp
inc
xchg
hlt
ja
clc
jmp
sbb
je
pop
test
pop
push
push
outsb
fs
dec
incl
sti
insb
pop
lods
cmp
out
lock
mov
and
pop
fildll
add
lock
pop
dec
jge
jl
jg
and
push
cld
lcall
mov
add
roll
pop
pop
jo
pushf
stc
mov
push
fcomip
test
cmp
and
nop
lds
xchg
sti
push
loop
inc
add
orb
ljmp
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
les
cli
inc
call
cmpsl
outsb
loop
ja
dec
sbb
ret
dec
pop
inc
pop
hlt
data16
or
xchg
dec
jg
mov
inc
subl
push
icebp
lock
pop
jbe
add
push
das
int
xchg
call
push
fdivr
in
into
test
scas
xchg
call
enter
fbld
incl
add
or
insb
adc
cmp
nop
jl
in
cmp
pop
add
pop
mov
lock
ds
pusha
scas
lods
dec
es
cld
sbb
ficoms
inc
out
fwait
shlb
call
hlt
pushl
pop
add
or
adc
or
movb
lcall
cld
add
fdiv
push
ret
add
aaa
sub
decl
icebp
mov
das
out
xor
sbb
call
std
imul
inc
mov
or
push
sub
xor
push
das
adc
nop
dec
xor
mov
decl
add
fs
hlt
test
jl
imul
decl
fldl
sbb
test
pushl
cmp
lock
ljmp
into
add
inc
cmpsl
jg
xchg
mov
xchg
inc
and
fisttps
ffreep
add
jmp
outsl
iret
das
push
std
out
clc
or
fistl
mov
mov
sbbb
inc
call
or
in
add
or
add
push
and
out
and
mov
std
out
aas
or
addb
decl
or
je
add
mov
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
jg
or
pop
loopne
xor
shrb
or
lcall
jmp
push
xor
or
push
mov
add
rcrb
fidivs
mov
and
push
pop
or
xchg
lock
fbstp
nop
lods
je
add
pusha
decb
ds
adc
dec
mov
into
sbb
call
sahf
notl
mov
jmp
add
mov
in
sbb
outsl
clc
jmp
jle
add
gs
sub
mov
mov
or
subb
popf
ret
sbb
sbb
inc
incl
fmull
sbb
pop
pop
orb
lea
hlt
jg
out
pop
fwait
xchg
add
jne
cmp
dec
mov
lock
ljmp
je
mov
push
sti
and
lock
leave
sub
hlt
jl
iret
adc
pusha
mov
sub
ljmp
and
int3
mov
sub
pop
stos
add
sbb
out
mov
add
mov
stc
and
mov
sub
daa
ja
lock
adc
or
cmpsl
decl
mov
ja
js
push
loopne
xchg
add
mov
stos
in
movsl
sbb
ljmp
jle
push
popf
pop
ret
dec
jp
sub
mov
cmp
jmp
mov
cmpb
jo
mov
cld
mov
add
mov
pop
push
xchg
cmp
mov
out
data16
mov
test
sbb
insb
pushf
add
outsb
push
je
scas
xor
or
cltd
sbb
or
cwtl
das
pop
ss
stos
call
dec
lock
or
mov
add
mov
hlt
add
xchg
fildll
es
out
or
or
xlat
mov
adc
xor
je
or
sbb
add
inc
add
inc
add
popf
add
std
bound
sub
xchg
and
mov
add
aaa
xor
sub
ljmp
xchg
fsubs
dec
jp
jge
inc
sarb
sub
clc
pop
add
jmp
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
es
iret
test
xor
push
jle
adc
add
inc
je
sarl
sub
fs
or
outsl
cmp
add
mov
and
cmp
out
je
lea
jo
fsubs
and
mov
add
in
mov
mov
cmp
dec
scas
in
pop
sub
pop
push
adc
ja
mov
and
xchg
call
xchg
aam
cs
clc
add
lea
and
cmc
outsl
incl
and
adc
scas
and
inc
xchg
mov
fildll
movb
orb
idiv
push
std
pop
rclb
iret
jns
lahf
sub
or
sbb
cmpsl
inc
pushl
adcl
cwtl
adc
inc
sbb
sub
std
outsb
cmpsl
std
jmp
adc
xor
movl
fcomp
xchg
cs
cltd
cmp
push
test
push
test
add
icebp
shl
adc
jle
mov
xorl
cs
fsubl
jmp
ljmp
adc
ljmp
rorb
push
adc
cltd
lods
bound
or
jno
dec
jmp
or
sub
cli
lcall
je
dec
rcrb
jmp
pop
and
pop
sahf
fadds
pop
rcrb
sbb
ljmp
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
pop
mov
mov
ljmp
jmp
or
push
add
xchg
movsb
mov
mov
mov
mov
movb
std
call
jle
adcl
jmp
pop
add
adc
mulb
lods
push
and
mov
push
add
sbb
push
lcall
push
nop
and
mov
push
pop
xchg
mov
fldl
inc
pop
ljmp
cmpl
cli
push
add
adc
das
clc
lcall
push
rolb
scas
stos
sub
addl
mov
add
call
std
popf
mov
shlb
int3
jo
inc
jo
decb
xchg
call
in
pop
sub
lcall
sbb
and
sbb
andl
pushl
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
movsb
push
sar
or
pop
inc
nop
add
push
jg
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
dec
inc
out
clc
setae
cld
jo
and
insb
std
fildll
in
push
call
out
jns
dec
jg
and
push
cmp
cmp
aam
push
pop
xchg
scas
loopne
hlt
decl
sub
add
cmp
xchg
clc
xchg
aas
hlt
fildll
call
sub
loopne
and
add
out
xchg
and
mov
mov
enter
sbb
lret
xlat
sbb
inc
add
leave
and
cmp
push
jmp
lret
arpl
add
add
and
lock
lret
pop
hlt
decl
sub
adcb
mov
out
aad
pop
mov
and
push
mov
decl
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
loopne
pop
in
aam
lock
push
inc
mov
cld
mov
cmp
push
sub
pushl
dec
pop
in
add
xor
mov
lret
fildl
shlb
mov
nop
cmp
mov
lea
jno
movsb
aaa
ret
mov
imul
dec
jg
incb
outsl
jg
ds
orb
incl
addr16
jne
pop
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
call
mov
and
rcrb
lret
jmp
xchg
call
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
mov
xor
cmp
sbb
jg
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
pushl
cwtl
add
test
jmp
or
cmc
mov
and
xor
jp
cltd
out
and
adc
pop
mov
loop
jecxz
smsw
scas
add
xchg
lds
push
mov
mov
shrb
or
inc
jle
sub
stos
andl
or
add
fbld
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
mov
push
sbb
outsb
adc
notl
jg
inc
shlb
pusha
push
jmp
jge
cwtl
cmc
or
pop
add
iret
push
dec
inc
stos
xor
mov
cmp
dec
rclb
xor
jg
mov
xchg
in
outsl
sbb
or
mov
xchg
mov
cld
jmp
lcall
jmp
adcl
aad
push
cli
test
xchg
and
jae
or
jb,pt
sbb
je
pop
pop
stos
cmp
mov
cmc
decl
sub
jmp
mov
xor
jae
and
ret
add
push
jl
aaa
add
inc
das
clc
jg
divl
mov
pop
dec
sub
add
push
xchg
mov
mov
xor
xchg
cmpsb
ficompl
outsb
daa
in
es
fwait
clc
das
xchg
in
verw
loope
adc
std
call
shrb
mov
or
inc
mov
add
adc
pop
pop
clc
or
mov
add
shlb
inc
popf
std
pcmpeqd
test
fistpl
mov
dec
out
mov
out
xchg
pop
pop
cli
imul
mov
cmpsb
movsl
bound
adc
pop
xor
bound
push
js
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
mov
outsl
clc
jl
test
imul
sbb
outsb
fisubl
ss
sub
add
clc
mov
inc
lock
shl
jns
adc
xchg
and
das
fs
scas
or
inc
call
dec
add
pop
add
add
jmp
je
jbe
repz
xor
add
xor
push
and
push
jle
sbb
mov
pusha
loop
orl
mov
sub
mov
mov
test
push
pop
cmp
push
and
jmp
add
push
outsb
test
add
das
adc
sub
or
jmp
fchs
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
mov
jp
push
cmc
stc
lcall
mov
call
pop
mov
fwait
adc
sub
mov
pop
lcall
xor
cli
push
call
fs
aad
jmp
push
push
mov
adc
daa
dec
push
cld
xchg
int
lahf
cld
pop
stos
jecxz
sbb
adc
pop
inc
pop
orb
pop
fcomip
jmp
sbb
jnp
jae
mov
inc
adc
mov
or
jmp
mov
arpl
inc
out
shrb
hlt
xchg
cli
lcall
lret
pop
add
movl
leave
push
rcrb
or
inc
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
loop
inc
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lock
mov
sub
mov
daa
jge
add
dec
add
mov
inc
sti
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
or
in
cmp
pop
cmpsl
or
mov
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
ljmp
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
jmp
sahf
test
push
sub
xchg
fsub
mov
mov
lods
add
incl
lea
xchg
lock
outsl
push
jmp
rolb
add
call
std
xchg
cmp
enter
cmp
push
scas
nop
dec
or
push
lock
testl
incl
test
loopne
push
adc
inc
clc
stos
clc
jg
dec
jbe
shld
push
mov
sbb
dec
call
push
xchg
dec
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
lret
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
lcall
jmp
and
or
pusha
into
movl
loopne
and
int3
pop
pushl
fmull
nop
push
nop
dec
stos
push
hlt
test
mov
jae
cld
push
add
popa
aam
jp
das
clc
incl
cmp
inc
cmpsb
dec
xchg
add
mov
push
xor
jg
pop
mov
adc
repnz
adc
repz
jle
popl
mov
sub
mov
dec
push
cmp
cmp
fmulp
mov
clc
mov
sub
dec
cld
test
push
imul
hlt
call
push
push
adc
pop
xlat
mov
lret
push
mov
xchg
jg
cmc
jg
mov
mull
in
add
stc
in
lahf
lods
fists
cltd
ja
and
bound
xor
push
dec
pop
sar
lcall
pop
add
jmp
dec
or
mov
scas
jecxz
hlt
mov
cmp
push
dec
cmp
xchg
ljmp
sub
dec
cld
or
and
pop
adc
push
push
mov
int3
jmp
hlt
add
inc
push
xchg
in
push
inc
xor
decl
jbe
xchg
or
adc
push
lret
pusha
and
ljmp
filds
aam
movsb
jp
jbe
fcoml
push
pop
popa
dec
cmc
sar
xor
inc
imul
push
cld
cmp
lods
pushf
xchg
add
inc
rclb
cmp
ljmp
mov
stos
pop
cmpsb
les
mov
jg
xchg
mov
and
and
je
shlb
push
loop
test
mov
sbb
fmull
push
sub
or
pop
psubsb
push
in
hlt
jmp
xor
leave
adc
adc
add
movsl
sbb
add
je
mov
xchg
outsb
mov
jg
cmp
push
add
mov
test
and
bt
jle
mov
ficoms
pop
xchg
dec
pop
push
repz
xor
cli
mov
imul
mov
inc
add
or
and
inc
ja
fsub
push
cmc
and
clc
dec
push
add
cli
and
and
cld
xor
mov
pushl
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
fcomip
jg
lret
add
out
dec
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
outsb
adc
cli
lock
push
cld
mov
adc
jb
mov
insl
add
fwait
add
inc
push
push
imulb
ss
call
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
and
cld
ljmp
sub
push
in
adc
dec
cli
lahf
xchg
addl
push
fildl
mov
xor
es
loop
mov
mov
ret
or
jl
add
and
add
rcrl
xor
jg
inc
add
inc
push
stos
mov
inc
cld
fwait
test
xor
add
data16
xchg
cmpsb
add
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
cmp
flds
daa
and
or
dec
scas
clc
ljmp
adc
xor
shlb
mov
or
lcall
repnz
je
mov
ret
int
mov
xor
lcall
roll
lds
pop
into
or
jae
and
push
fdivrs
pop
mov
enter
incl
add
dec
pop
pop
in
lock
leave
sbb
ret
add
into
inc
negb
lcall
mov
lock
int3
push
shll
mov
popf
out
and
call
lods
mov
shr
int
and
loop
pop
cmpsl
cmp
and
add
jbe
lcall
jge
insb
lahf
and
shufps
add
les
pop
test
mov
push
jnp
out
sub
cltd
pop
subb
dec
push
fidivrs
ss
xor
inc
aaa
scas
xchg
icebp
pushl
scas
mov
clc
add
lret
fistpll
push
movsb
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
mov
sahf
and
aam
rcrl
js
and
add
add
mov
push
add
hlt
orl
mov
mov
subl
adc
hlt
decl
icebp
int3
push
add
sub
jb
scas
aas
and
sbb
xor
cmpl
ljmp
pop
std
cmp
adc
in
jmp
xchg
xchg
lock
pop
lea
ljmp
add
jne
cli
or
jecxz
cmp
daa
pop
mov
repz
pop
or
or
adc
push
sbb
add
add
ja
cmp
push
jmp
ds
add
call
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
icebp
out
out
cmp
push
push
xor
sbb
mov
rcr
les
or
cli
test
aam
mov
out
subb
cmp
insb
xchg
adc
cmpsb
hlt
sbb
std
or
sbb
xor
int
cmp
push
aad
out
cli
incl
adc
cltd
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
cmpsb
mov
lcall
fidivl
jle
jmp
gs
pop
rcll
in
imul
jg
jp
outsb
repz
push
xchg
shlb
xor
lods
cltd
dec
fmuls
das
adc
ljmp
adc
sbb
inc
mov
loopne
push
add
lcall
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
outsl
cli
call
and
imul
fs
rol
push
mov
sbb
lret
call
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
ljmp
jo
lock
push
mov
jge
cmp
xchg
add
or
mov
mov
mov
mov
and
test
cmp
cld
push
rolb
add
jg
loop
std
adc
scas
push
les
dec
add
popl
fbstp
dec
loopne
add
sub
add
lcall
mov
mov
fwait
jbe
mov
sbb
je
add
loop
aas
push
xor
xchg
aam
inc
cmpb
insb
std
and
add
pop
add
cmp
loopne
cld
loopne
add
test
xor
push
out
mov
clc
pop
add
insb
xor
loopne
mov
stc
mov
orb
inc
movsb
jo
pop
pop
out
pop
cld
scas
les
lock
push
cmc
je
xchg
push
mov
popf
les
and
ljmp
or
fimuls
addb
sbb
mov
sub
sti
popa
mov
adc
add
pop
xor
jmp
sub
push
pop
jmp
popa
jp
lahf
out
loopne
add
hlt
pushl
cltd
bound
xor
jne
aam
das
cli
call
add
push
sahf
outsb
setae
jno
loop
add
mov
dec
cs
andb
push
xor
gs
lcall
js
sub
adc
push
sbb
cmc
adc
pushf
or
call
jmp
scas
scas
cmp
aam
mov
inc
js
push
pop
mov
jo
pop
fcomip
mov
add
mov
xchg
or
popf
mov
mov
jae
ja
ret
fidivrs
adc
fcomip
and
sub
lods
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
mov
sbb
mulb
cmc
pop
dec
cmp
pushl
jo
jb
test
aad
bound
icebp
mov
add
cwtl
ds
and
loopne
pop
push
mov
adc
mov
mov
in
fstps
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
aaa
adc
loope
and
push
ret
or
sub
call
jmp
cmpb
sbb
dec
push
jp
inc
gs
add
or
addb
add
cmp
or
sub
int3
rcr
mov
mov
jl
sbb
mov
or
xchg
ljmp
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
stos
sub
and
aam
push
add
jns
int3
nop
fcompl
add
inc
je
mov
xor
xchg
jl
icebp
call
lods
xor
mov
pop
rorb
fistpll
mov
cmc
out
jl
aas
stos
or
adc
cwtl
mov
adc
lcall
ja
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
ljmp
jnp
repnz
push
sub
pop
lea
test
push
bound
add
sbb
add
ja
jmp
cmp
add
or
jae
stos
sbb
inc
nop
cltd
dec
lret
adc
flds
lods
test
call
cld
jo
mov
mov
nop
movsb
jg
out
pop
jae
mov
cmc
add
xchg
jl
in
inc
repz
pop
mov
test
mov
add
pop
push
add
sub
mov
sub
or
or
ja
push
or
hlt
xor
movl
iret
mov
inc
mov
jmp
add
pop
push
rcrb
sub
in
lds
sahf
adcb
add
hlt
scas
and
adc
call
dec
push
push
cmp
fcomip
gs
and
lahf
add
ret
add
aad
call
lods
pushl
cld
pushl
test
pop
testl
xor
dec
cmp
lret
inc
out
cli
dec
mov
out
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
decl
and
in
mov
in
mov
fwait
mov
decl
xchg
aas
mov
mov
xchg
imul
mov
mov
mov
shlb
lea
aam
inc
fdiv
push
lock
decl
jg
inc
mov
jle
fiaddl
loopne
xor
add
sbb
fistps
in
aad
notl
call
mov
push
andl
jo
mov
push
mov
setb
pusha
rclb
cli
add
jne
popf
je
dec
rcr
addb
and
mov
sbb
add
or
inc
add
xchg
add
or
decl
cmp
loopne
jg
clc
xorl
scas
aaa
push
inc
add
popa
enter
decl
xchg
dec
and
push
inc
jl
jge
cmp
arpl
mov
jmp
mov
insl
ret
stos
push
mov
and
sub
jg
mov
dec
std
or
adc
lret
inc
xor
jmp
scas
movsl
out
shl
adc
xchg
pop
push
push
cli
stos
mov
xchg
vprotb
and
add
xor
jle
xchg
sahf
rorb
call
and
mov
add
outsl
dec
pop
jecxz
mov
push
es
test
call
mov
rcrb
js
mov
sub
pop
andb
add
adc
add
push
lret
es
xor
add
pop
lock
clc
xchg
scas
mov
call
into
mov
je
dec
add
repz
jo
xor
stos
and
sahf
pop
ret
cmp
pop
xor
dec
adc
in
call
fbld
ljmp
sbb
inc
push
push
push
jo
pop
jmp
pusha
hlt
or
pop
add
dec
movsl
push
loop
xor
decl
sbb
ret
in
mov
xchg
roll
push
pop
cmpsb
xor
inc
in
mov
jmp
push
or
sbb
add
mov
adc
decl
nop
lahf
in
add
jg
test
and
decl
or
mov
in
and
clc
pop
or
inc
add
jl
xlat
inc
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
incl
cld
mov
adc
dec
aas
fstpt
jmp
push
or
mov
adc
jl
jmp
pop
cmpsb
roll
adc
inc
call
push
xchg
push
and
push
fs
outsb
sahf
mov
mov
loop
add
cmp
mov
dec
xor
fidivrs
sub
sub
add
mov
lahf
push
push
add
outsb
or
inc
and
sti
push
in
mov
ljmp
aas
pop
push
adc
adc
mov
add
testl
filds
test
std
push
add
push
or
push
dec
inc
mov
cmp
hlt
mov
bnd
add
jmp
call
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
into
movsb
outsb
xor
popa
ret
pop
sub
lock
inc
aaa
or
or
fs
jb
ret
or
lcall
es
inc
call
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
pop
cld
pushl
lret
loop
out
xchg
xchg
pop
mov
int
dec
ret
and
test
lcall
and
les
and
jbe
mov
into
incl
xchg
pushf
inc
inc
jae
mov
adc
add
mov
or
jmp
cwtl
rolb
add
repz
jge
clc
call
lahf
test
or
mov
sub
jno
rolb
pop
cmpsb
fcoml
mov
add
negb
sub
mov
mov
fisttps
mov
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
ret
movsl
daa
scas
clc
push
js
lods
rclb
push
sti
sar
xor
jne
sub
xchg
incl
cld
incl
cmp
je
push
mov
testb
mov
pop
call
or
ljmp
cmpb
adc
incl
push
mov
rcrb
test
cmc
gs
repnz
mov
andb
movl
pop
or
adc
cli
ljmp
cmp
hlt
inc
add
hlt
jae
cli
in
adc
shrb
or
xor
call
xlat
jg
call
dec
mov
out
or
in
jbe
test
cwtl
cmpsl
or
add
cmp
cmp
js
jnp
je
and
adc
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
add
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
pushl
nop
add
jmp
inc
daa
dec
adc
imul
out
decl
inc
std
pop
or
sub
hlt
pop
jp
cmp
es
insb
seto
sti
inc
cmp
sbb
mov
mov
inc
pusha
adc
sbb
xor
sbb
insb
add
jg
incl
adc
cmpl
dec
adc
pop
add
cmp
inc
mov
and
test
jbe
sub
push
and
pop
and
add
dec
add
lock
fstps
xor
leave
js
inc
mov
dec
jg
add
je
ja
or
call
add
add
jo
xchg
rolb
decl
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
pushl
cmc
push
jo
enter
xchg
test
add
mov
push
mov
add
add
mov
and
mov
repnz
bound
ja
adc
lret
xchg
call
and
pusha
aad
pop
lods
adc
test
enter
sbb
nop
jne
jg
add
dec
add
and
loopne
js
xchg
test
mov
inc
adc
mov
jae
ljmp
outsl
xor
sub
lcall
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
mov
lahf
cmpsb
add
push
cld
in
lret
mov
shr
xchg
dec
xlat
xorl
mov
ret
lock
dec
sar
mov
jne
ss
mov
mov
adc
or
cmp
movsb
in
idiv
pop
int3
cmp
or
fnstenv
icebp
mov
xor
xchg
loopne
inc
clc
hlt
or
adc
sub
sub
loop
nop
in
popf
inc
mov
lcall
sub
mov
dec
out
mov
test
dec
pop
add
hlt
aas
inc
jg
lock
lods
pop
jecxz
cld
xchg
cli
les
pop
add
pushl
test
mulb
ror
and
shlb
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
subl
dec
add
sub
outsb
cmp
repnz
fcomip
or
push
cli
inc
adc
xchg
ja
ljmp
adc
push
hlt
out
dec
popf
ret
xor
sbb
insl
cmp
pop
cld
mov
fs
sub
inc
push
jg
jl
jne
push
dec
fdivrs
in
mov
repnz
lcall
loopne
and
rcrl
call
call
jmp
pop
or
push
mov
cmp
cmp
mov
or
sub
cmc
xlat
mov
mov
cmp
gs
int
cltd
call
sbb
mov
pop
lods
jne
insb
sahf
xlat
adc
or
mov
lea
pusha
push
movsb
and
outsl
pushl
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
xchg
ljmp
fwait
cvttps2pi
xchg
inc
mov
mov
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
ljmp
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
jg
loopne
movsl
scas
mov
add
jl
sub
mov
dec
rcr
insb
pop
fcomps
dec
xor
or
push
ljmp
out
or
xchg
shl
in
lea
adc
jmp
int3
rorl
test
and
das
ss
jae
movsl
lcall
mov
inc
fcomps
jns
xchg
sub
cmp
mov
in
jne
incl
dec
decl
jl
inc
push
repz
jae
push
jmp
fdivrp
incl
cs
add
test
rorb
pusha
aam
sub
xor
js
mov
sbb
adc
sbb
pop
enter
adc
cli
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
or
call
cmp
cmc
mov
add
inc
xor
mov
aaa
enter
dec
inc
or
and
mov
idivl
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
lcall
mov
adc
adc
xor
ljmp
mov
and
or
inc
stos
mov
add
mov
int3
pop
lock
decl
es
add
mov
mov
push
jp
lahf
fidivs
outsl
adc
inc
sub
dec
add
push
sub
xor
arpl
clc
sarl
jg
fsubrp
pop
lahf
pop
xor
pop
pushw
mov
es
pushl
ljmp
pusha
add
sub
push
andl
push
fsubrp
jb
clc
add
jg
mov
add
cwtl
jmp
jbe
leave
fadd
jmp
mov
inc
pop
push
in
daa
mov
mov
cli
pop
std
lcall
push
in
push
dec
and
fdiv
ljmp
push
orb
mov
push
ljmp
stos
mov
cmpsb
je
add
sub
filds
loope
pusha
xor
in
xor
mov
dec
and
jle
loopne
mov
mov
xchg
into
add
test
popa
test
xchg
and
adc
pop
sub
push
add
out
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
add
call
pop
push
cmp
pop
leave
mov
xor
jg
adc
push
cltd
stc
pop
add
sub
or
add
ds
add
cmc
decl
lock
xor
sti
movsl
adc
cs
loopne
or
add
mov
jp
adc
scas
or
jmp
mov
movsl
movsb
in
clc
fmulp
push
xor
sub
pop
cmc
arpl
dec
or
fmuls
push
add
lds
pop
jmp
addb
mov
stos
dec
int
cmpsb
pop
jae
packssdw
std
lcall
cmp
dec
test
scas
push
stos
cmpb
lock
mov
push
call
and
repz
clc
mov
test
call
lock
or
add
add
daa
outsb
or
mov
push
pushl
orps
ljmp
inc
adc
or
add
push
and
in
jae
pop
xchg
ror
add
out
sub
clc
lcall
push
add
cmpl
jbe
dec
cmp
int3
push
jmp
ja
iret
sbb
pop
shl
xchg
add
pop
jge
movsb
cli
mov
add
aad
cli
mov
and
pop
inc
mov
mov
leave
xlat
jbe
mov
cld
adc
xchg
in
adc
les
jnp
repz
or
js
ficoms
lret
or
pop
fdivs
push
dec
jmp
lahf
rcr
lret
xchg
add
pop
inc
push
fsubs
cmp
loop
sbb
jno
jnp
fstps
in
sub
mov
stos
cmovg
ret
mov
movsl
push
mov
jl
push
scas
adc
lahf
fisttps
ljmp
dec
aad
pop
pushf
mov
call
loopne
clc
mov
subb
mov
pop
inc
dec
es
fs
adc
cs
sbb
clc
mov
mov
idivb
nop
inc
mov
shlb
or
cs
mov
stos
icebp
ljmp
jle
rolb
or
sbb
mov
pop
call
adc
rorl
mov
cmp
jg
mov
or
xchg
mov
loopne
and
mov
rorb
data16
popf
ror
imul
loopne
pusha
scas
loopne
pushf
js
ja
dec
in
pop
and
das
js
push
push
or
or
cmpb
add
popf
popa
mov
cmp
std
nop
adc
fs
xor
andl
pushl
push
sbb
aas
gs
jo
fisubrl
fs
lds
es
cmp
shrl
and
and
shrb
jg
pop
aad
pop
repz
leave
repnz
sti
jno
add
xor
mov
fcomip
loopne
xchg
out
insb
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
call
xlat
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
or
das
jne
mov
pop
cmp
dec
hlt
push
sub
cld
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
decl
jg
xor
adc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
mov
lods
jl
hlt
std
std
bound
add
mov
and
or
mov
pop
push
repz
mov
pushl
push
pop
test
sub
stc
add
lea
and
outsl
dec
rorl
jmp
adc
jmp
std
sbb
dec
outsl
or
repnz
sbb
call
mov
add
in
push
dec
jg
inc
mov
es
mov
push
adc
insb
std
incl
cltd
in
adc
enter
sbb
das
fcmovb
jb
stos
or
in
sub
cmp
xchg
add
loopne
adc
lds
addb
pop
repz
mov
in
push
cld
incl
into
xchg
in
mov
inc
pop
adc
rolb
sub
stos
fiadds
sbb
pop
pop
call
sub
test
imul
cltd
ds
adc
push
mov
mov
aaa
lea
push
loopne
jg
push
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
loop
insb
repnz
dec
inc
pop
mov
cld
andl
mov
scas
mov
xchg
pop
xor
or
push
inc
dec
xor
out
jmp
add
cmp
add
xor
add
and
pushf
add
clc
leave
xchg
adc
incl
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
call
cwtl
hlt
xchg
add
sbb
add
or
stos
lock
mov
dec
repnz
or
ss
sbb
pop
ljmp
movsb
lcall
push
cmp
lds
lret
ret
or
call
and
add
xor
cld
jno
mov
adc
les
push
xor
mov
movsb
outsl
cli
pushl
enter
iret
les
xlat
mov
and
test
dec
or
pop
cld
pushl
das
jno
xchg
daa
mov
adc
jmp
arpl
test
or
jg
and
pusha
jne
lods
and
fwait
sub
add
inc
or
popa
push
je
call
les
push
xor
or
into
push
out
mov
cmp
iret
adcb
out
outsl
add
cmpsb
pop
cmpl
cmp
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
fcomip
push
mov
ret
pop
mov
test
mov
cmpsl
xorl
xchg
iret
adc
jmp
int3
pop
dec
pop
add
mov
cltd
add
adc
fcomip
jno
jmp
xor
je
mov
push
hlt
ss
adc
add
jg
movsl
mov
mov
bound
xor
xchg
mov
addr16
in
loopne
fisttpl
push
jle
adc
push
jno
inc
jp
pop
push
xchg
or
jg
loope
int3
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
lret
packssdw
fisttps
pop
add
adc
lret
lea
or
cmp
push
xor
test
mov
dec
nop
or
mov
dec
lahf
add
mov
lcall
je
dec
cli
inc
add
outsb
sub
ret
mov
dec
lods
cmp
das
sarb
adc
xor
pop
mov
call
cli
or
fadds
xchg
mov
insb
add
sub
add
sub
jb
pop
cmpb
mov
dec
pop
lds
xchg
adc
iret
mov
mov
in
das
lods
pop
add
add
ljmp
in
inc
mov
and
lods
adc
jg
cmp
push
cmp
jge
fs
sub
daa
jp
ds
inc
andb
adc
jbe
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
fildll
cmp
fstpl
xchg
cmp
fistpl
xchg
and
ficoml
pushl
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
or
decl
ret
leave
adc
jmp
xchg
sbb
addr16
pop
jmp
mov
ficomps
mov
sbb
push
add
addl
jo
add
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
int
ljmp
shl
mov
sbb
and
daa
sbb
adc
negb
inc
or
dec
fsubs
adc
pushf
ds
sbb
loop
jg
pushl
rolb
lods
jbe
jp
cmovl
fisubs
lea
jecxz
lods
mov
dec
xor
mov
add
shlb
jae
push
xor
gs
push
sub
jg
adc
les
push
jg
pop
sahf
das
jns
lods
je
in
jge
mov
jb
inc
hlt
inc
add
shlb
cmp
fiaddl
out
or
add
clc
incl
bound
sbb
rcll
xlat
mov
mov
decl
jne
cmova
and
lock
ret
loop
scas
sbbb
or
incl
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
incl
in
dec
gs
sub
leave
fs
mov
cld
test
test
imul
fistl
push
aas
fsubrs
out
clc
mov
sub
sub
imul
or
cmp
bound
outsb
loopne
mov
pop
sbb
add
pushf
test
inc
xorb
rclb
adc
pop
push
jmp
pusha
push
daa
idiv
call
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
dec
cmp
add
into
pmaxsw
dec
xchg
popa
xchg
mov
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
bnd
dec
ljmp
inc
pop
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
mov
call
daa
cmp
insl
cmpb
dec
pop
sub
dec
outsl
das
clc
incl
mov
jne
sub
adc
mov
dec
pop
ljmp
fcomip
test
and
adc
adc
repnz
adc
jmp
sbb
lods
sbb
incl
test
or
dec
loopne
add
loop
or
sub
jmp
aam
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
lcall
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
cmp
subl
jmp
cmp
pushl
std
jg
and
aam
push
lcall
jbe
or
popf
pop
add
daa
int3
mov
je
and
sub
push
add
jmp
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
xor
clc
push
test
jg
mov
in
rolb
jno
out
push
pop
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
call
mov
lock
or
dec
jmp
inc
jmp
mov
mov
mov
loop
pop
mov
jb
fimuls
sbb
sbb
aaa
adc
add
add
jmp
xorl
add
les
push
js
mov
and
fdivs
es
lcall
jo
sbb
mov
or
mov
jbe
rcrl
pop
ret
call
ficoms
add
les
mov
pop
mov
in
ret
rolb
sbb
dec
inc
add
sub
ljmp
adc
aam
popf
or
cmp
push
pop
in
pop
je
pushl
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
mov
enter
mov
ljmp
mov
push
add
jg
push
cld
push
cwtl
xchg
loop
mov
dec
sbb
out
clc
push
and
pop
mov
pop
cmp
loope
movsb
inc
loop
jecxz
jl
scas
mov
call
out
xchg
enterw
add
fidivrs
call
pop
inc
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
mov
call
outsl
andb
xor
cld
leavew
shr
outsl
cli
fwait
jl
dec
pop
ljmp
fs
add
rorb
loop
dec
lret
mov
insl
cmpsb
jo
add
clc
ljmp
sub
dec
fsubp
clc
daa
push
jno
es
add
dec
add
call
call
mov
adc
xchg
and
adc
inc
clc
incl
xlat
pop
int3
or
rcl
jnp
cmp
jl
mov
lret
push
sub
mov
sub
push
add
fisttps
sub
inc
fldt
sub
scas
cli
decl
stos
int3
jne
or
jbe
push
xchg
fs
and
shlb
lock
je
lcall
adc
hlt
cld
xchg
imul
cld
frstor
hlt
das
aam
cmp
push
popa
xorl
mov
movsl
xor
into
mov
jge
sub
jmp
cmp
rolb
dec
rorb
int3
jo
or
push
jmp
je
push
xchg
enter
cmp
fcoml
ljmp
push
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
sti
incl
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
cmp
or
in
pop
cmp
and
sub
xor
faddl
xchg
fcomip
cld
dec
mov
rcl
push
adc
out
cmc
add
jg
out
jb
sub
adc
pop
hlt
add
or
jne
jmp
pop
cmp
incl
jmp
test
add
scas
out
leave
insb
sbb
addr16
cli
pop
cmp
shrl
mov
push
lea
cwtl
scas
lret
adc
out
push
inc
adc
insb
int3
or
and
fcmovbe
in
rol
call
mov
aaa
add
add
addr16
mov
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
jg
xchg
xchg
ret
adcl
add
rclb
lcall
jbe
mov
lret
push
sti
sub
xchg
mov
mov
cmp
test
add
lcall
add
es
inc
mov
xor
push
sbb
xor
int
and
pushl
add
test
rol
or
mov
test
sbb
das
cli
jg
insb
add
jns
sbb
mov
movsb
inc
and
xor
std
push
fildl
xchg
cltd
mov
fcom
cmp
adc
fiadds
xchg
push
add
mov
ljmp
cli
cmp
js
hlt
mov
xor
sub
pop
mov
jmp
jp
mov
add
or
cwtl
gs
push
sarb
js
pusha
cld
or
decl
dec
pop
mov
loop
adc
call
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
jg
xor
incb
roll
pushl
pusha
jns
adc
add
adc
sbb
outsl
es
fnsave
dec
shrl
cmp
decl
mov
push
or
mov
les
add
adc
pop
dec
repz
jg
lcall
mov
xchg
or
sub
inc
or
test
in
sahf
push
mov
xchg
jbe
add
push
cmp
call
jmp
sub
xor
std
cmp
ljmp
pop
es
bound
cmpsb
addb
xor
sbb
cmp
dec
xor
or
add
pop
inc
add
incl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
out
clc
pushl
mov
jbe
push
jg
mov
sub
sub
inc
rorb
aad
add
call
mov
add
js
mov
popa
hlt
add
inc
mov
shlb
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
lock
stc
sub
and
imul
add
push
cld
decl
rolb
insl
cld
xor
pusha
mov
adc
sub
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
mov
jmp
xor
sbb
add
mov
imul
push
push
adc
jmp
add
test
ja
mov
ss
jp
add
push
pop
add
mov
and
dec
mov
add
and
lcall
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
filds
fsubr
jnp
aas
dec
xchg
mov
or
outsl
cli
lcall
mov
adc
bound
leave
andb
or
jbe
xchg
stc
loop
test
or
xor
cld
add
dec
lds
jp
in
je
dec
add
lcall
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
push
add
dec
sub
jmp
fnsave
xchg
test
mov
insb
jmp
mov
mov
daa
inc
addl
cmp
and
add
or
or
and
inc
and
sar
movsb
or
fisubl
lahf
xchg
roll
into
in
repnz
push
inc
call
xchg
ljmp
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
xchg
loopne
and
aam
xchg
loopne
cmp
stc
mov
inc
inc
push
ud0
aaa
leave
sahf
mov
call
and
lods
fs
adc
lock
xor
cmp
sbb
mov
repz
dec
ljmp
pusha
sub
call
ficoms
data16
mull
fsubs
inc
loope
or
pop
nop
lret
add
pop
push
xor
ljmp
in
mov
not
and
test
push
pop
push
js
push
aam
fiadds
mov
fmull
ret
stos
incl
cmpsl
loopne
or
hlt
add
push
jmp
fdivr
or
addr16
out
enter
icebp
push
leave
cli
dec
jmp
insb
xor
ss
shlb
call
push
pushl
mov
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
or
dec
jnp
inc
push
cwtl
pop
jmp
jmp
xor
jae
ret
addl
std
sarb
decl
inc
dec
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
lods
clc
out
pusha
popf
add
nop
in
test
outsb
ljmp
subb
and
pop
jb
and
jbe
xorb
push
movsl
cmp
subb
les
push
cmc
inc
loopne
hlt
lea
loopne
jmp
adc
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
jmp
pop
pop
jno
testl
icebp
push
sbb
adc
xchg
jmp
cmpsl
sub
inc
mov
lret
pop
add
add
or
push
in
xchg
int
mov
shlb
and
jmp
xor
pop
outsb
push
xchg
cmpsb
and
jg
orb
clc
xchg
xchg
push
inc
dec
adc
outsl
add
decl
sbb
add
adc
add
add
adcb
lcall
adc
dec
sub
aas
add
in
lret
nop
enter
ljmp
pusha
ds
insl
lods
and
or
cmp
rcrb
enter
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
ljmp
xchg
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
scas
cli
cmp
aaa
mov
jle
cmpsl
in
and
mov
bnd
movsb
aaa
push
dec
and
decl
sub
js
and
and
fildll
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
daa
repnz
shr
mov
out
xor
fstps
hlt
pop
orb
sti
ljmp
adc
add
pop
and
lock
xchg
push
pop
xchg
push
cmpsl
stos
add
push
xchg
rclb
mov
clc
iret
mov
add
fs
inc
push
rorb
ficoml
push
or
decl
lods
mov
nop
pusha
add
popf
mov
add
outsb
pop
jle
mov
insb
iret
hlt
fwait
add
orl
sub
cmp
das
lgs
push
arpl
popf
cmp
add
inc
pop
std
jg
add
pop
lea
inc
outsb
add
cmpl
jae
push
sbb
cltd
jb
das
cwtl
fs
dec
add
add
insb
decl
mov
push
pop
xchg
enter
add
lock
push
hlt
push
in
xchg
dec
out
jb
mov
fwait
xor
and
test
loop
divps
call
in
les
orl
xchg
in
ret
lock
fcomip
pop
ljmp
mov
cmovae
add
daa
jns
adc
call
adcb
dec
or
add
lcall
out
aas
mov
pusha
jb
js
cwtl
sub
ja
div
and
mov
mov
adc
incl
xor
adc
sub
xchg
scas
and
stc
lds
clc
movl
jp
and
jle
pop
nop
and
call
xor
subl
leave
adc
mov
or
sarl
lcall
arpl
cmpsl
add
xchg
mov
sub
call
sbb
push
mov
rorb
mov
test
stos
cld
push
mov
vmwrite
movsb
orb
pop
inc
decb
mov
add
xor
pushf
fbld
mov
lcall
je
stc
insl
roll
mov
pop
incl
cwtl
add
dec
jmp
stos
or
or
push
cmp
mov
jmp
out
adc
lds
sar
pop
nop
mov
pop
jmp
adc
xor
add
inc
rdseed
test
mov
jnp
jle
cmc
jne
ret
cwtl
popf
rorb
mov
xor
cli
icebp
sahf
mov
and
je
fbld
add
jmp
sahf
sub
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
pushl
add
rolb
inc
adc
scas
or
or
rcll
incl
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
cld
cli
sub
lock
fwait
dec
in
pop
jl
or
fnstenv
add
int
ljmp
add
sbb
pop
clc
cmp
mov
xchg
push
add
call
and
pop
loope
xchg
loopne
mov
inc
std
incl
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
ja
rcl
xlat
jbe
and
and
popf
push
push
repnz
call
in
adc
adc
jp
add
call
das
jg
sbb
cs
sub
inc
adc
push
in
adc
jg
stc
pop
fbstp
dec
dec
int3
dec
mov
push
sti
cld
fdivr
ljmp
jns
dec
adc
mov
or
mov
push
jmp
incl
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
mov
out
mov
jbe
in
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
jmp
add
orl
xchg
jbe
dec
mov
cmpb
ljmp
or
leave
xor
test
push
and
loope
and
mov
mov
adc
je
cwtl
dec
pusha
les
sub
pop
loope
mov
les
or
mov
and
adc
rolb
sub
fisubs
ljmp
in
incl
jmp
test
push
or
rolb
dec
pop
dec
mov
je
das
mov
ret
cld
cmpsl
subb
nop
dec
push
push
cli
pop
hlt
mov
xor
leave
sbb
xlat
sbb
jns
cmp
add
jmp
jbe
xchg
xchg
sti
pop
mov
out
pusha
sub
jecxz
lahf
sbb
xor
inc
adc
cmpsb
and
cmp
and
jg
adc
mov
add
rcrb
pop
sbbb
inc
popa
or
adc
cmp
add
lcall
vpaddsb
pop
mov
cmp
aam
call
and
es
sbb
ljmp
sub
inc
ss
enter
sub
testl
js
out
jl
out
push
mov
ljmp
or
cmpsl
add
pop
add
pusha
mov
sbb
loop
mov
incb
push
mov
cli
mov
lret
lods
adc
add
dec
stc
les
add
in
scas
jne
jae
pop
scas
out
mov
das
es
daa
add
cmp
mov
xchg
insb
sub
ja
jmp
sub
and
mov
in
pop
call
aaa
into
mov
adc
das
xor
or
push
hlt
push
or
add
loopne
std
mov
je
add
xor
dec
cmpsb
fcompl
call
xor
jmp
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
pop
push
insl
lahf
xor
lds
imul
pop
inc
cmp
shrl
mov
mov
arpl
out
mov
lods
dec
mov
add
std
cs
std
fdivs
loopne
fcomps
popa
or
jmp
sbb
call
push
dec
or
in
es
xchg
pop
mov
fbld
loope
adc
test
inc
das
rorw
or
lcall
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
mov
outsb
dec
xlat
icebp
shll
mov
push
mov
jle
incl
add
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
call
in
add
pushl
popf
in
gs
sub
push
push
fcomip
idivl
pop
mov
fidivrl
sti
mov
push
das
mov
incl
adcb
and
div
xchg
shll
or
inc
cmpsl
add
std
pushl
popf
fbld
lods
lds
clc
mov
inc
jmp
scas
lcall
out
jp
adc
faddl
pop
fsubrs
lods
inc
pop
mov
add
cmp
ss
shrb
sbb
or
and
xchg
push
addl
in
inc
and
movsb
leave
jle,pt
fldcw
jo
jae
cmp
add
dec
clc
jg
dec
jge
pushf
dec
mul
adc
xor
sub
jmp
xchg
add
mov
fs
mov
adc
cmp
mov
jg
jmp
and
inc
imul
xchg
sbb
jecxz
cmp
add
push
adc
mov
xlat
xchg
inc
loop
sbb
decl
push
sbb
movb
je
les
push
decl
ret
mov
pop
inc
imul
xchg
decl
ljmp
xchg
mov
inc
hlt
adc
sbb
test
add
int
sub
adc
nop
cmp
jnp
inc
sbb
sti
push
dec
cld
jmp
or
or
ljmp
inc
out
mov
jns
pop
icebp
mov
cwtl
xchg
and
inc
clc
and
jae
push
pop
mov
add
sbb
shlb
test
and
cwtl
call
ljmp
xchg
fs
dec
push
push
adc
cmp
ljmp
sarb
mov
xchg
int3
cmp
add
rolb
xor
inc
inc
ja
cmp
in
fs
add
jg
xor
inc
cwtl
xchg
imull
adc
lock
dec
orb
mov
push
aam
lret
add
into
enter
cli
xchg
and
je
cmpsb
sbb
push
ds
test
push
sub
and
loop
inc
decl
jb
je
insb
sub
pop
dec
ficoms
imul
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
incl
scas
lret
hlt
and
fwait
pushl
jle
add
jmp
sbb
pop
mov
insl
and
ljmp
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
aam
pop
ds
mov
sub
xor
adc
or
sbb
ljmp
data16
movsl
sub
sbb
pop
out
mov
cwtl
shll
add
jb
mov
inc
lods
dec
add
icebp
push
jo
in
push
or
adc
mov
sar
ljmp
incb
xchg
mov
mov
test
dec
out
xchg
js
add
xchg
fs
jnp
decl
or
mov
and
jmp
cli
lcall
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
ret
cli
ljmp
adc
or
sbb
dec
fwait
pop
cmp
lcall
add
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
hlt
jb
jne
subb
inc
pop
add
sub
and
xchg
jmp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
ja
add
xchg
mov
lea
into
or
lahf
xor
incb
adc
jl
push
roll
scas
pushf
in
cmpsl
dec
test
aam
mov
xchg
push
or
pop
mov
mov
std
inc
xor
mov
add
pop
mov
add
loop
ljmp
ja
sbb
mov
cmpxchg
pop
push
shlb
mov
add
xchg
cmp
xchg
shr
in
dec
test
mov
mov
push
xor
add
or
shr
add
cld
adc
sbbb
push
negl
mov
lock
pop
mov
mov
daa
push
inc
ljmp
fidivl
data16
test
lock
scas
dec
loop
incl
jns
outsb
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
ljmp
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
ljmp
shlb
insb
mov
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
loopne
shr
push
mov
andl
mov
loope
icebp
cld
call
or
sub
dec
pop
lret
jg
mov
int3
inc
jmp
ss
dec
pop
push
sub
cmp
xchg
incl
stc
or
movsl
cmp
cmp
mov
aas
icebp
flds
ret
cmp
add
das
movl
jb
mov
adc
loop
out
pop
cwtl
or
add
xchg
lds
call
and
lret
pop
mov
jp
test
push
jnp
and
push
incl
xchg
xor
sub
and
sbb
add
not
adc
out
dec
adc
sbb
push
add
add
pop
sbb
rol
stos
sub
sub
lock
ss
dec
in
loop
lds
clc
shlb
mov
pushl
or
add
inc
add
je
iret
cmp
enter
mov
cmp
ds
mov
mov
xchg
pop
sub
mov
repz
jg
decl
push
cmp
aas
mov
xchg
cld
dec
lods
lea
cltd
dec
cmc
incl
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
test
rcrb
mov
stos
jl
adc
fcoms
hlt
scas
icebp
fwait
push
negl
or
fcoms
mov
add
push
and
and
mov
adc
add
sbb
push
inc
add
cmp
inc
mov
pop
rcrl
mov
or
inc
push
ret
aas
cwtl
add
and
inc
add
jge
out
aas
adc
clc
adc
call
sbb
es
pop
lods
outsb
pushf
les
incl
loop
cltd
add
cld
mov
shrb
movsb
add
cld
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
lods
clc
imull
decl
je
js
sbb
jnp
add
test
aas
adc
jmp
lock
cld
pop
clc
aam
testl
xchg
xchg
push
add
lret
lock
fwait
test
lock
repz
jmp
or
fnstcw
scas
cmpsb
jl
shrb
and
clc
aam
dec
or
inc
fisubs
adc
xchg
js
in
xchg
jg
sahf
push
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
pushl
dec
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
mov
add
out
out
or
unpcklps
push
sbb
loop
add
mov
push
repnz
mov
pop
daa
call
repz
or
dec
fidivl
jg
add
push
shrb
mov
dec
sub
xlat
lcall
add
inc
fimull
push
jp
xchg
cmpb
jmp
movsb
sbb
cltd
mov
sub
xchg
sbb
fbld
or
dec
pop
dec
clc
xchg
xchg
flds
ljmp
mov
jl
add
add
test
loope
or
add
movsl
adc
dec
cmp
mov
xor
mov
cltd
lock
test
scas
add
ljmp
sarb
lods
push
and
nop
push
loop
add
inc
pop
jge
or
cmpsl
sub
sar
cli
add
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
mov
add
notl
mov
cs
mov
inc
jle
jg
mov
mov
adc
jp
pop
sub
hlt
dec
idiv
das
mov
adc
pop
and
inc
data16
orb
adc
xchg
or
decb
pop
bound
mov
mov
inc
cmpsl
in
add
xchg
das
cmp
decl
ror
jl
into
mov
rcr
mov
sbbl
movsb
sbb
mov
popl
xchg
mov
push
and
jno
mov
or
push
addr16
xchg
mov
or
andl
insl
call
inc
sbb
das
and
push
fadds
data16
add
add
clc
xorb
decl
js
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
in
fs
pushf
test
add
lret
sbb
sub
jl
hlt
jmp
sar
cld
in
add
out
add
jnp
mov
pop
stos
cmpb
add
icebp
sub
shl
mov
loopne
push
pop
shrb
cmpsl
fisttpll
les
idivl
clc
push
push
movsb
cmc
lahf
sbb
addl
pop
cmp
inc
sbb
nop
pusha
lods
adc
pop
jl
lcall
orb
xor
clc
sbbl
inc
xor
cmp
in
aad
ljmp
mov
sahf
dec
add
fs
sti
mov
xchg
push
insb
pushf
insl
sbb
pop
dec
mov
mov
mov
mov
push
sbbb
decl
repz
mov
add
test
push
jmp
sbb
add
and
gs
add
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
icebp
out
movl
jnp
inc
mov
sub
rcrb
loope
outsl
xchg
sahf
clc
or
fcomps
sbb
push
pop
mov
inc
inc
add
and
sbb
mov
out
jecxz
ljmp
ret
out
jmp
sub
out
movsb
sbb
cld
mov
in
inc
jg
push
ss
mov
fs
add
aas
and
xor
in
cmc
add
mov
and
je
std
fbld
mov
dec
push
add
repnz
push
clc
mov
cmpb
mov
shlb
xchg
push
add
xchg
fcos
call
fildll
xor
in
add
xor
test
push
fsqrt
push
fs
out
or
dec
cld
mov
cmp
mov
je
ret
sahf
adc
push
pop
cmp
jg
add
mov
mov
orb
dec
das
dec
in
ficomps
incl
add
ret
xlat
sbb
push
cmp
jg
pop
cld
adcl
mov
lock
add
fdivrp
decl
adc
rcr
push
pop
lds
stc
ror
add
dec
jecxz
or
std
in
and
cld
jg
add
or
lahf
jbe
les
push
pop
cmc
fcomip
push
scas
cmp
xlat
add
jg
or
rorb
or
sub
sub
inc
incl
add
adc
nop
shr
inc
rol
daa
or
mov
lcall
adc
jns
std
cmp
shll
ret
shrl
push
loopne
adc
cs
jg
lcall
adc
aaa
push
or
test
cmp
sar
cmp
mov
mov
push
loope
loopne
dec
add
cld
subb
jg
add
stc
jecxz
mov
mov
xor
incl
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
push
sub
pusha
test
jmp
lea
nop
cmpb
incl
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
int3
add
setg
leave
shl
call
cmp
add
ljmp
dec
dec
sbb
sbb
jmp
jp
add
rcll
pop
cmp
push
test
dec
xchg
leave
push
mov
orl
mov
call
fldl2e
aas
repz
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
xlat
fildll
imul
add
adc
out
dec
int
outsl
scas
mov
stc
jge
push
cmpb
jg
aaa
std
push
inc
xchg
stos
and
jl
dec
sbbb
insb
pop
ja
jmp
mov
dec
add
lock
push
cmp
jp
les
inc
push
mov
les
and
pop
addl
adc
adc
lcall
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
incl
ljmp
adc
mov
faddl
and
pusha
mov
call
es
push
pop
xchg
add
cmp
out
sub
ss
popa
jge
mov
aas
stc
jle
dec
ljmp
cmp
adcb
test
adc
add
xlat
lcall
adc
lods
mov
lock
jae
call
mov
aam
pop
cmp
xchg
inc
mov
sub
test
or
and
call
or
mov
xchg
jb
add
xchg
ds
and
pop
xchg
jecxz
push
rorb
cld
in
test
shr
cmpsb
loop
jb
shlb
xchg
adc
mov
push
jne
int
and
sbb
dec
and
cmp
mov
dec
out
jnp
dec
pushl
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
inc
push
hlt
jp
sub
in
aam
roll
stos
xchg
adc
jne
or
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
incl
maskmovq
idivl
in
sbb
cmp
sti
xor
call
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
and
cmpsb
mov
xor
inc
call
mov
sub
adc
sub
call
add
or
int
pop
adc
iret
push
dec
std
jg
and
dec
les
cmc
test
sub
or
mov
and
sub
in
cmp
add
imul
mov
call
dec
testb
jge
or
jg
push
xchg
ret
jmp
in
sbb
pop
mov
rorb
fisttps
leave
and
cmp
add
mov
add
stos
ret
cmp
push
adc
fstp
add
rorl
fildl
hlt
dec
incl
or
push
adc
lahf
mov
and
add
call
fidivs
lock
sbb
loopne
shrb
sbb
xor
jge
jmp
decl
inc
data16
dec
imul
or
pushl
cmp
mov
xchg
push
mov
aaa
std
test
push
push
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
incl
push
rorl
dec
and
iret
cmp
cld
lcall
or
cmp
addb
out
mov
mov
pusha
cli
jle
arpl
xchg
pop
cld
sbb
adc
ds
clc
decl
push
movswl
or
into
sub
imul
mov
pop
or
fnstcw
lea
adc
sar
cmp
mov
rcll
pop
mov
out
scas
and
push
out
pop
push
cmp
aaa
mov
add
aam
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
sar
lcall
push
into
add
sub
mov
add
lcall
push
push
dec
push
std
mov
imul
xchg
and
add
push
filds
shrb
add
sbb
icebp
jg
add
pop
add
ja
cli
call
pop
sbb
dec
out
cs
test
jo
test
rcrb
movsb
clc
mov
lock
gs
and
add
rclb
or
jge
das
clc
ja
scas
xlat
mov
pop
pushw
jbe
push
mov
addb
dec
adc
jmp
mov
add
add
mov
sub
add
andb
out
pop
dec
cmp
pop
add
add
inc
cmp
cmp
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
std
ljmp
enter
push
and
cmp
jne
enter
lods
cltd
xchg
mov
dec
jmp
movsl
adc
jno
add
in
imul
mov
pushl
push
clc
enter
sub
adc
rolb
sub
stos
add
jne
sbb
xor
sub
mov
push
xchg
aam
mov
and
mov
scas
add
fsubrs
add
sub
jmp
sbb
add
jo
gs
jb
xor
sarb
dec
dec
and
call
or
stos
sbb
ret
popa
add
lret
arpl
add
call
sarl
arpl
ss
loop
bswap
pop
add
mov
pop
icebp
vdivps
inc
les
sub
cmp
mov
pop
xchg
dec
sbb
jg
mov
popa
inc
mov
clc
or
add
mov
ljmp
push
add
dec
mov
out
mov
leave
mov
pop
lcall
adc
xchg
push
sub
sahf
mov
mov
lcall
pop
cmp
das
rcrl
pop
sub
out
jno
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
cli
adc
push
call
ljmp
push
ret
sub
movsb
adc
pop
and
fcomip
decl
cmp
jl
mov
inc
push
xor
dec
add
mov
inc
adc
inc
or
jns
sahf
sbb
inc
popa
shl
incl
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
jg
jmp
and
inc
out
mov
push
js
inc
xor
push
icebp
jbe
lcall
or
push
push
push
andl
adc
mov
pusha
js
pop
add
leave
clc
jg
aaa
mov
and
add
es
adc
mov
or
in
bound
and
mov
lret
in
push
adc
sbb
cmp
call
in
jns
mov
inc
pop
push
adc
pop
push
inc
scas
mov
pop
in
adc
push
daa
dec
cmp
mov
sub
gs
dec
ljmp
std
popa
popf
stos
int
inc
ds
add
jg
xchg
fnstsw
add
mov
lock
ljmp
insb
stos
dec
inc
lds
mov
add
push
add
cmpl
aas
xor
push
add
xor
cmp
jg
adc
out
mov
push
mov
add
gs
xor
out
mov
or
jmp
out
dec
insb
or
mov
sbb
lcall
orl
es
xchg
jg
test
add
sbb
enter
xor
and
mov
shlb
ljmp
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
loope
ljmp
mov
inc
in
mov
push
jb
arpl
push
cltd
clc
decl
and
pop
mov
add
mul
jmp
cmpl
pop
mov
ret
stos
jmp
rorb
stos
test
out
mov
add
jne
mov
push
inc
mov
cltd
xchg
and
xor
pop
aaa
fwait
cli
int
jle
sub
ja
fdivrs
pop
icebp
jae
mov
mov
sbb
inc
into
mov
test
inc
jl
dec
xchg
mov
push
sbb
and
add
cwtl
cs
pop
xlat
shl
mov
jmp
inc
mov
cmp
clc
jae
pop
add
cmp
adc
stos
or
sbb
cwtl
xchg
push
test
xor
icebp
push
jo
jno
decl
call
sub
inc
add
out
xorb
add
push
cmp
test
add
push
and
pop
pop
mov
rolb
fucom
add
loop
jecxz
mov
push
cmc
lcall
sti
adc
sbb
and
mov
cmp
mov
fwait
mov
call
ljmp
dec
jae
jb
lcall
es
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
decl
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
jg
push
add
xchg
dec
add
mov
mov
xchg
pop
stos
adcl
ss
fsub
lret
ja
cld
incl
in
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
adcl
jmp
repz
mov
inc
addb
repnz
ljmp
subl
js
sar
mov
cmp
add
in
in
dec
sahf
dec
cmc
dec
out
movl
pusha
xor
add
inc
add
jl
mov
cwtl
insl
jo
je
cmp
ljmp
dec
push
dec
add
adc
inc
push
push
insb
imul
mov
fisttps
jmp
out
out
pop
pop
in
push
push
fsubrl
sbb
js
push
icebp
mov
xchg
and
into
mov
inc
jmp
add
cmp
shr
fisubs
sahf
sbb
push
push
jle
pop
or
pop
push
cmp
pop
push
jle
outsb
xchg
or
jae
ljmp
and
daa
inc
jo
or
js
sahf
jmp
incl
popf
in
out
fimuls
dec
push
repz
out
add
incl
jmp
les
jno
incl
push
add
xchg
lcall
cmp
out
ljmp
sbbl
les
lcall
push
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
test
and
mov
addr16
pop
test
lcall
imul
jb
jl
std
mov
cmpsb
outsb
add
mov
pusha
lods
in
mov
loopne
out
xor
and
clc
incl
call
aam
movsl
in
cmp
aaa
sub
incl
aam
mov
xor
xchg
dec
mov
in
sarb
mov
jg
mov
and
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
test
inc
push
in
push
xchg
jo
or
mov
mov
in
mov
ja
jg
lcall
pop
orb
lcall
in
jg
mov
test
xchg
push
inc
mov
fs
mov
clc
sarb
xor
inc
repnz
rcr
sub
cmp
fcompl
sbb
fs
sbb
jbe
out
je
add
inc
mov
inc
or
fcoms
add
mov
pop
mov
jmp
pusha
jmp
call
jl
movsl
pop
pop
andb
in
jge
gs
cmp
mov
bound
jns
jge
cwtl
xchg
test
decl
add
push
pop
in
test
out
pop
sub
and
mov
dec
cmp
sbb
sbb
jae
add
push
mov
xchg
jno
push
out
test
stos
push
jecxz
pop
add
addr16
adc
clc
gs
call
out
es
cld
or
pop
push
andb
mov
pop
ret
ja
fwait
mov
xor
in
pop
mov
popa
sbb
nop
sahf
dec
cmp
cmp
and
cmp
add
dec
scas
jmp
out
aaa
pop
clc
push
mov
test
mov
push
xor
jmp
jmp
pop
ds
cmp
add
sbb
push
sahf
insb
lods
test
sbb
and
cmp
cmp
mov
dec
dec
jp
inc
fsts
jmp
xchg
fsubs
cmp
imul
jo
cld
cmp
rorl
cmc
dec
pop
mov
sbb
mov
in
xchg
fldenv
pop
in
lods
lcall
call
push
outsb
jecxz
inc
add
mov
push
mov
xor
jg
adc
mov
loopne
pop
push
dec
or
xchg
pop
aad
mov
fsubl
ret
dec
clc
cli
inc
incl
xor
es
pushf
movlhps
sbb
xchg
cmpsb
loop
fcmovne
movsb
mov
das
mov
and
mov
xlat
push
shll
rol
xchg
add
jl
push
jb
punpcklbw
je
inc
xor
jmp
lcall
hlt
test
bnd
into
arpl
xor
fwait
push
or
mov
jecxz
xchg
mov
mov
mov
mov
xchg
call
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
ljmp
add
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
push
jmp
inc
xchg
xchg
xor
cmpl
rolb
add
subb
jg
mov
pop
jp
daa
movsb
add
jae
push
stos
xorl
mov
mov
cmpsb
mov
cmp
xchg
add
movsl
out
leave
lret
mov
mov
jg
ljmp
lea
enter
cmp
inc
ret
add
lret
mov
add
xchg
add
popa
cltd
lcall
inc
mov
in
dec
hlt
inc
and
bound
add
sbb
stos
add
add
stos
and
cmp
mov
enter
jo
call
movsb
test
jmp
stos
mov
add
cmp
pop
dec
jnp
dec
push
std
cmp
add
jo
inc
ja
inc
jae
mov
dec
cmpsb
mov
incl
mov
stos
in
and
lods
out
inc
mov
test
mov
pusha
cltd
dec
add
mov
stos
insb
stos
jg
mov
push
xor
jno
cmp
incl
sbb
jb
add
add
sub
lods
sbb
ret
adc
add
sbb
call
std
push
push
dec
inc
mov
int3
mov
fsubp
adc
in
ficompl
add
push
movsl
int
xor
add
in
pop
loop
enter
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
jg
daa
or
sbb
mov
mov
lods
addr16
inc
pushl
cmovp
mov
jbe
inc
mov
out
fucomi
clc
pushl
jl
sub
add
fists
sbb
int
mov
rolb
xchg
call
loop
jmp
sbb
adcl
enter
in
lock
xor
clc
cmp
cmp
mov
xchg
out
addr16
push
cltd
jnp
incl
cld
inc
lock
xor
jmp
adc
push
sbb
call
fnstsw
scas
mov
imulb
add
cmp
pop
and
or
stos
add
push
mov
mov
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
mov
mov
xor
lcall
inc
stos
and
jp
xchg
bnd
decl
mov
subl
pop
xorb
pushf
xchg
add
sar
popf
mov
sti
fadd
rcll
ljmp
icebp
mov
cmp
jbe
add
addb
mov
std
or
push
xchg
cmp
ljmp
jmp
pop
xchg
gs
inc
pop
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
decl
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
lcall
call
dec
mov
or
add
or
loop
incl
rcrl
inc
leave
inc
test
mov
or
jg
filds
mov
decl
loop
push
push
mov
int
push
ljmp
lret
adc
mov
lcall
mov
dec
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
pushl
mov
loopne
jo
cmp
daa
out
orb
xchg
ror
and
push
inc
jmp
sub
inc
push
or
subl
jle
sbb
sbb
loope
ds
lock
pop
xchg
cmp
std
inc
je
pop
mov
jmp
mov
lods
xor
vpmulhuw
push
add
call
jae
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
lcall
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
incl
divl
scas
jmp
cmp
sar
mov
mov
mov
mov
outsb
call
add
cwtl
mov
incl
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
mov
mov
jnp
loop
dec
call
jo
data16
test
das
clc
push
ja
pop
les
aam
push
add
xchg
mov
aaa
dec
mov
lods
jb
mov
imul
inc
add
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
push
mov
or
lahf
imul
inc
decl
sbb
add
gs
out
mov
incl
jle
aam
and
xchg
call
test
lock
js
arpl
std
push
push
jnp
dec
adc
popf
pop
add
call
or
and
imul
and
aad
mov
and
jmp
loop
jecxz
mov
test
lods
sbb
jmp
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
decl
add
rclb
cmc
call
push
add
pop
mov
pop
aas
push
ret
push
and
clc
call
loopne
add
ds
mov
cmp
iret
in
add
ds
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
fbstp
xchg
aad
xchg
insl
je
mov
dec
aaa
push
lcall
jmp
add
lahf
test
loop
push
out
roll
clc
ljmp
orb
call
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcrl
add
lret
sub
incl
sbb
outsb
add
or
cwtl
jb
imul
scas
push
or
or
mov
je
and
sub
push
shrb
sbb
xchg
inc
jae
int3
add
sar
test
arpl
out
je
cs
push
adc
sar
mov
lods
sub
sbb
mov
sbb
xchg
mov
and
jmp
jne
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
ss
inc
lods
cld
rolb
add
xor
hlt
add
call
cmp
dec
adc
pop
addl
add
xor
push
or
push
jmp
dec
cmp
andb
add
mov
mov
lret
add
dec
and
in
push
std
inc
hlt
cmp
out
pushl
lock
jo
sbb
inc
fiaddl
int3
mov
pop
rclb
pop
and
sbb
into
lcall
in
mov
cmp
inc
add
add
call
lods
mov
hlt
push
cmp
mov
or
jbe
lcall
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
sbb
jg
daa
enter
pop
repnz
jmp
add
scas
clc
push
aaa
call
push
pop
jb
xor
sub
add
daa
ftst
fsubrl
mov
out
ja
clc
outsl
aam
test
lret
mov
and
call
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
add
lret
dec
mov
push
pushl
cmp
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
add
outsl
clc
xchg
pop
mov
or
cmp
out
std
adcb
jnp
dec
xchg
mov
incb
clc
sbb
call
data16
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
clc
lcall
out
call
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
lds
mov
arpl
jmp
pusha
ds
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
es
push
fbld
jne
push
jmp
and
scas
cmpsb
test
rclb
vxorps
jmp
and
rclb
and
leave
lock
das
lret
inc
lods
nop
ss
and
inc
push
xchg
aad
dec
push
pusha
jecxz
mov
rorl
call
lcall
jl
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
call
rcl
inc
push
pushf
and
inc
mov
sub
push
int
pop
std
incl
xor
leave
lret
cli
test
out
aad
xlat
out
adc
add
jecxz
ljmp
sarb
add
roll
add
imul
mov
inc
xor
jns
inc
out
negb
popa
jne,pt
pushl
std
push
cmp
fs
out
ret
jle
sbb
popa
rolb
insl
sbb
jno
leave
cwtl
jne
sbb
int
adc
jae,pt
cwtl
or
jg
ljmp
loope
mov
jns
add
pop
jo
cmp
insb
outsl
jns
xchg
sub
outsl
sub
jp
inc
call
pushl
call
outsl
call
add
add
push
mov
add
in
or
xor
sbb
stos
lods
faddl
add
das
push
or
stos
xor
decl
xor
push
add
in
jle
jle
sar
sub
mov
push
pushl
int3
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lcall
and
dec
dec
scas
jp
jle
push
scas
stos
mov
and
add
mov
or
push
out
aas
jge
mov
push
je
cli
add
sub
sahf
das
dec
sub
incl
popf
push
adc
pop
mov
mov
pop
push
cli
xchg
and
mov
in
push
incl
xor
add
mov
adc
mov
jg
sbb
adc
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
sub
loop
rorl
ljmp
add
loopne
jne
xor
or
cmp
aaa
cld
incl
shlb
inc
cmp
div
adc
inc
fbld
mov
bound
add
mov
decb
leave
jb
movb
mov
ljmp
add
dec
xor
sti
add
add
mov
jg
aam
xor
sub
push
lds
sbb
fwait
adc
movsl
fwait
sub
push
pop
ja
sub
add
cmc
inc
xchg
test
adcl
ljmp
xchg
movsb
orl
mov
filds
loope
popf
dec
std
incl
sbb
loope
jo
push
cmp
mov
ljmp
xchg
sbb
cmp
cli
mov
sub
sbb
les
pop
push
incl
jle
push
adc
test
mov
test
mov
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
pop
pop
in
not
scas
mov
leave
xor
jbe
das
push
adc
sti
int3
lret
fsubs
testl
test
fcomip
jmp
movl
fs
adc
mov
mov
push
popf
add
push
pop
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
mov
enter
cs
loop
cld
pop
cmc
xchg
jmp
mov
mov
sbb
sbb
aad
inc
push
std
lcall
and
lds
adc
jecxz
and
mov
out
sub
andb
mov
cmp
clc
push
jp
mov
mov
cmp
and
xor
sbb
dec
push
push
xor
call
cmp
push
sbb
repnz
sbb
adc
cmp
dec
push
loope
loopne
icebp
fucomip
and
and
in
xor
test
jo
decl
or
sub
jae
lahf
sub
mov
fcmove
xlat
repnz
xchg
pop
in
fcomip
ja
pop
shlb
xchg
lock
hlt
daa
sub
and
mov
adc
sbb
jle
push
push
enter
sbb
shlb
mov
mov
jo
mov
add
mov
fsubr
dec
fmuls
pop
rcrb
pop
ss
incl
push
repnz
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
ljmp
push
pusha
cmp
mov
arpl
loopne
cmp
mov
and
mov
inc
add
cmp
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
decl
aad
mov
ljmp
xchg
xor
push
add
pop
add
add
sub
push
repz
lret
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
clc
xchg
popf
mov
xchg
in
inc
push
int3
add
dec
popf
repz
add
addb
dec
dec
xchg
mov
pushl
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
out
jmp
add
and
jno
test
jmp
push
pop
dec
ja
sbb
mov
incb
cld
rolb
add
mov
mov
jg
aaa
dec
test
mov
sbb
push
leave
les
adcb
add
incl
scas
jmp
push
and
cmpl
add
adc
jp
clc
push
jg
jge
add
lret
jecxz
cli
lcall
mov
push
push
mov
scas
cmp
or
cltd
daa
mov
enter
mov
cs
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
lcall
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
decl
loopne
add
fiaddl
call
cld
lcall
jl
adcl
add
push
xlat
cmc
stc
dec
adc
pop
lock
or
add
inc
mov
ljmp
pop
incl
shlb
mov
mov
cli
cmp
shll
sub
lret
ret
add
inc
cli
and
incl
dec
fnstsw
add
rcrb
push
cmp
mov
es
xchg
mov
mov
in
mov
sub
jg
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
addb
xor
or
pushl
pusha
adc
pop
clc
jmp
call
inc
mov
cmp
add
add
repz
call
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
pushl
jnp
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
ss
pushl
das
ss
push
cmp
js
inc
mov
mov
out
pop
sbb
xlat
push
out
int3
out
push
xchg
adc
xchg
ja
dec
mov
xchg
aas
adc
ljmp
add
cmpsl
inc
data16
adc
out
incl
lcall
jbe
xchg
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
icebp
incl
sbbb
bswap
or
add
xchg
rcrb
xor
jg
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
call
outsb
sub
xor
sbb
jmp
or
cmc
ret
xchg
mov
out
imul
cld
call
add
push
scas
cmp
adc
test
ja
add
out
popf
imul
or
dec
daa
xchg
pop
cmpb
enter
sub
pop
cltd
loope
mov
mov
les
aaa
fwait
cltd
xchg
mov
add
sbbb
xor
xchg
je
loope
jbe
sar
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
aad
pop
fsubrs
sub
int3
or
gs
mov
aaa
dec
jg
insb
pop
sbb
mov
mov
xchg
dec
ja
xlat
decl
jmp
cld
scas
lock
mov
and
cmp
sbb
popf
aaa
push
sar
int
sub
jbe
addb
clc
mov
pushf
andb
mov
in
adc
mov
aam
pusha
cs
imul
decl
lods
push
movsb
mov
and
stc
push
inc
xchg
sbb
mov
mov
sahf
gs
lcall
ds
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
cli
pop
std
inc
sbb
lds
add
dec
push
lahf
sti
ret
xlat
fdivs
jl
lret
incb
aas
lea
filds
mov
mov
push
pushf
std
pushl
rorl
mov
add
aad
sti
mov
or
ret
ss
es
pushl
rorb
jne
lea
jle
call
add
inc
cmp
add
inc
outsb
add
je
push
push
loopne
mov
or
inc
bnd
cmpsl
mov
jge
mov
ret
jbe
dec
fsubl
test
fcos
fnsave
push
mov
pop
cmp
jg
jle
jge
push
ret
adc
add
mov
pop
mov
sar
lcall
int3
jne
loopne
sub
add
daa
and
hlt
les
cwtl
adc
and
jl
cli
mov
push
fxch
inc
faddl
add
xor
loopne
xor
jg
aam
addr16
mov
imul
jecxz
adcb
das
push
jmp
rorl
or
jle
dec
add
jmp
add
js
xchg
mov
ja
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
scas
add
arpl
dec
pop
jecxz
in
hlt
loopne
add
repz
push
mov
push
lret
pop
xchg
fildll
sti
movsb
aaa
pop
mov
mov
pop
cli
inc
and
sub
js
xor
fisttps
lods
mov
sub
xchg
mov
lea
sahf
jb
xor
scas
xchg
jmp
lods
jg
sub
inc
mov
sbbl
cmp
cmp
enter
xchg
mov
call
imul
add
push
loope
inc
sbb
movsb
jo
xor
sub
cwtl
push
cmp
fdivs
fdivrp
decl
mov
mov
mov
add
or
dec
stc
mov
mov
sub
adc
faddl
add
in
rolb
je
xchg
inc
mov
loopne
add
cli
aaa
cld
pop
sub
cltd
xor
fcmove
mov
xor
cli
pushl
sub
mov
pop
and
dec
fiadds
push
sar
cmp
lods
incl
mov
xchg
inc
idiv
das
and
repz
in
add
lock
sarb
loop
fildll
jl
jmp
testl
mov
adc
pop
adc
or
sub
add
nopl
movsl
fstpt
pushl
add
xor
push
or
or
ja
xor
loope
call
clc
jno
sahf
inc
leave
or
dec
ret
sub
cmp
pushf
add
push
filds
add
inc
sub
adc
sbb
sub
incl
in
daa
add
mov
testb
add
pop
add
xchg
subb
dec
jae
ds
cmp
pushl
cmp
ja
pop
addl
fidivl
lods
or
add
sub
mov
ljmp
bnd
data16
jp
jns
faddl
adc
add
sbb
xor
incl
inc
adc
or
inc
xor
ja
rorb
and
clc
sub
mov
dec
rorl
or
aaa
mov
loopne
mov
cmc
fs
mov
fwait
out
clc
sbb
mov
shlb
testb
mov
out
cli
aas
cld
cltd
dec
sbb
sub
jb
arpl
mov
jg
call
add
inc
cli
loop
pop
adc
mov
das
stc
adc
hlt
mov
ljmp
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
ret
outsb
or
adc
sub
add
mov
mov
xchg
xchg
adc
lcall
dec
sub
xchg
test
sub
mov
mov
movsl
push
jb
or
sbb
sar
adcb
shlb
push
test
push
fsub
pusha
sbb
mov
jl
sbb
adc
and
pop
decl
jmp
stos
cmp
mov
mov
lea
decl
insb
mov
push
adc
stos
lock
in
jg
int
sub
pop
in
cwtl
scas
incl
adc
icebp
mov
test
push
and
repnz
roll
jmp
std
test
push
or
and
dec
and
jne
aam
or
sbb
ss
lcall
add
aam
pop
sar
mov
xor
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
lcall
pop
outsb
push
pop
sbb
add
pop
push
imul
call
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
push
sub
xor
mov
repnz
hlt
int
mov
mov
xchg
fsubr
lcall
add
dec
lods
outsb
push
in
adc
mov
enter
add
inc
in
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
xchg
hlt
call
mov
mov
cmp
inc
xchg
xor
pop
pushl
jo
imul
adc
lret
adc
outsl
fisubrl
pop
sub
mov
decb
cmp
inc
mov
mov
test
xor
lret
ljmp
dec
xor
cmp
subb
xchg
xor
fsubs
or
lcall
push
push
movsl
add
dec
pop
aam
loop
sub
sar
fcomip
xchg
lret
call
in
xorl
xor
jp
clc
cmc
pop
mov
cwtl
inc
add
jns
loop
pop
mov
das
push
subl
adc
js
jp
jg
incl
and
adc
pushf
add
add
mov
mov
call
fs
xchg
mov
shlb
cltd
lds
cmc
cld
out
decl
das
mov
pop
push
adc
cwtl
andl
clc
xchg
add
clc
lcall
enter
xor
adc
add
addb
pop
and
sub
repnz
dec
pushl
pop
mov
insl
mov
push
sub
lods
adc
add
sub
pushl
cld
and
mov
shll
xor
in
xor
xchg
icebp
xchg
inc
jl
sbb
ja
add
shll
xor
push
cmp
mov
ja
and
je
inc
insb
cmp
xchg
aas
les
test
addb
test
ret
test
in
das
jl
les
push
jb
andb
in
lahf
sbb
fldl
in
ja
fs
inc
push
dec
and
addps
inc
lcall
movsl
andl
or
sub
adc
mov
je
add
stc
js
mov
call
incl
adc
subl
addb
test
call
add
push
push
jbe
std
incl
push
jle
adc
sahf
xor
add
imul
cmp
test
hlt
lcall
sysret
mov
rorl
cmp
mov
and
sti
das
das
into
dec
ffree
xchg
sahf
lea
pushl
std
adc
imul
push
and
xchg
cmp
jg
loop
pop
rorl
fdivs
popa
pop
fs
cmp
hlt
jmp
and
and
pmuludq
std
xor
jns
mov
fwait
inc
jge
xchg
cmp
mov
inc
mov
add
jo
mov
push
jl
and
mov
aam
adc
push
inc
jae
lock
add
incl
pop
cld
cmpl
mov
cmp
jmp
xor
incl
out
adc
addr16
pop
mov
xchg
ret
pop
mov
repnz
shll
inc
push
test
adc
pushl
cli
lea
jne
pop
in
xor
or
loopne
jg
ljmp
jmp
gs
lret
push
or
jge
add
rorl
aad
out
push
fnstsw
pop
js
inc
andb
incl
dec
mov
test
test
dec
pop
add
jmp
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
jg
lcall
test
jmp
sub
jp
out
cmp
jle
adc
out
xchg
mov
mov
jl
ljmp
ljmp
adc
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
mov
sub
mov
mov
std
dec
push
lea
in
ljmp
jmp
cmc
sbb
in
mov
inc
pop
adc
in
enter
lcall
or
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
xchg
nop
inc
and
sub
pop
jmp
pop
mov
rorb
decl
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
push
incl
sbb
mov
aaa
jb
cmp
and
outsb
rclb
call
les
add
out
or
push
sarb
les
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
call
in
or
add
es
adc
icebp
lret
loope
adc
jmp
add
and
or
lcall
add
sub
cmc
jmp
sbb
movsb
std
test
imul
mov
mov
mov
in
push
or
incl
push
cwtl
jnp
add
mov
call
decl
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
mov
insl
adc
sar
mov
les
and
push
int3
add
test
push
fcoms
nop
add
mov
sbb
or
repz
repnz
sbb
xor
add
sbbb
cmp
mov
gs
outsl
xor
pushl
mov
in
repz
add
lahf
nop
adc
mov
jmp
jae
ds
mov
jl
fs
nop
or
sbb
add
mov
sub
mov
pushl
pop
inc
pushf
push
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
js,pt
cmp
xchg
sti
xchg
jp
in
push
dec
mov
lock
or
lahf
sti
add
aaa
call
nop
ljmp
movsb
stos
or
mov
xchg
mov
stos
sahf
cmc
dec
fldt
cmp
roll
movl
ja
adcl
adc
mov
dec
mulb
enter
dec
or
xchg
fs
fcomip
inc
add
and
mov
adc
xchg
or
cmp
shrb
xchg
pop
inc
in
and
or
scas
add
loop
push
jns
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
fildll
rcrl
add
or
add
fs
mov
jg
out
pop
call
icebp
jo
pop
push
mov
decb
and
jnp
add
xchg
push
aam
dec
mov
mov
mov
add
add
sahf
adc
jnp
cmp
pop
dec
into
push
jp
mov
and
mov
outsl
lcall
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
mov
push
fimull
and
xchg
inc
push
push
push
lods
loopne
decl
gs
xchg
stos
sub
mov
lret
cmp
decl
push
lea
loop
xchg
sbb
cmp
mov
cld
jmp
lods
incl
inc
scas
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
mov
jg
sahf
pop
pop
and
adc
movsl
std
in
xchg
stos
outsb
adc
ljmp
mov
test
add
or
subb
ret
add
pushl
test
les
bound
or
jns
jmp
mov
push
cld
das
mov
ret
movsb
popa
decb
aas
aas
or
inc
cwtl
cli
scas
enter
sbb
arpl
adc
lcall
add
les
add
xchg
or
mov
xor
or
or
add
jb
insb
dec
mov
xor
sbb
scas
lret
push
pop
loope
pushf
nop
ds
jmp
cmc
cmpsb
xchg
sub
sbb
adc
jae
mov
out
cli
push
je
dec
mov
nop
test
cmp
sbb
adc
call
cld
push
je
push
cld
pop
mov
sbb
movsb
push
lock
xchg
inc
fadd
popf
ljmp
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
ja
incl
out
add
xlat
cltd
add
sbb
adc
inc
push
pop
and
sub
mov
adc
sbb
inc
sbb
loope
sbb
inc
jg
cld
cmpsb
inc
ds
cli
pushl
sub
add
xchg
loopne
dec
inc
sub
pop
push
or
xor
nop
call
iret
inc
mov
psubusw
sbb
call
incl
sub
sub
dec
stos
lds
add
imul
add
cli
mov
push
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
out
test
lahf
jle
cmp
mov
push
push
add
add
call
cmc
aaa
std
pop
lods
fs
sbb
jge
pop
cmp
xchg
loop
push
dec
cld
scas
aas
or
ss
jl
orb
incl
cmp
add
xor
pop
pop
pop
mov
fwait
and
xor
hlt
fisttps
jne
cwtl
add
dec
cmp
or
lcall
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
or
jmp
sbb
lock
adc
mov
dec
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
out
mov
out
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
add
lcall
add
sar
xchg
adc
clc
les
lods
ja
repz
mov
imul
inc
clc
or
inc
add
or
cmp
or
jp
and
xor
xchg
add
bound
add
stos
mov
out
adc
ja
call
fwait
xchg
mov
push
ret
popa
add
xlat
add
pusha
in
test
mov
incl
in
lcall
xorb
add
or
or
mov
cmc
mov
adc
push
mov
jle
sbb
push
cli
add
fsubr
xor
scas
sub
in
daa
push
lea
add
decl
mov
add
and
rorb
push
scas
push
pop
and
cs
repnz
jns
cwtl
cmp
fsubrs
pop
pop
xor
ret
xchg
xchg
shlb
pop
mov
loopne
aaa
lret
xor
pop
mov
add
shr
cli
push
push
mov
cmp
xchg
cmp
ret
xchg
pop
hlt
pop
cmp
cli
push
nop
pop
push
mov
push
out
jne
mov
xlat
ja
fsubr
push
dec
test
push
jg
andl
into
mov
dec
inc
and
jmp
and
iret
out
clc
popf
or
sahf
shrl
mov
push
decl
out
sub
in
and
mov
ret
xchg
mov
sti
outsb
cwtl
js
adcl
push
jle
mov
jmp
das
adc
xchg
adc
jo
xor
xor
mov
jne
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
mov
add
movsl
sbb
add
xchg
pusha
and
adc
mov
add
and
testb
adc
rcrl
out
sub
mov
add
mov
dec
jmp
lock
test
fdivs
mov
push
jb
and
loope
sub
xor
mov
dec
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
das
push
jno
shrd
leave
inc
test
icebp
call
and
ss
in
arpl
mov
xlat
xchg
inc
jle
dec
mul
jo
dec
jp
pop
and
add
cmpsb
pop
fisubs
fcmovu
dec
mov
lcall
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
call
les
mov
nop
add
mov
shl
and
mov
mov
nop
mov
xor
lods
jmp
test
test
daa
sbb
pop
push
movsb
ja
ljmp
inc
push
inc
pushf
or
and
mov
mov
jg
call
pop
out
jecxz
sbb
sub
in
add
and
pushl
ja
push
xchg
add
jb
sbbl
cwtl
lods
in
aas
in
mov
ljmp
idivb
stos
test
pusha
mov
in
sub
jg
push
js
cmp
hlt
imul
add
sbb
jmp
insb
mov
sarb
inc
dec
jmp
pop
ret
rcl
mov
xchg
cli
push
fisubrl
push
pop
lcall
dec
jl,pt
daa
testb
js
sbb
dec
stos
decl
adcb
movsl
jne
filds
mov
out
rcll
dec
mov
push
push
dec
push
cmp
syscall
jg
inc
ljmp
fwait
mov
hlt
xchg
add
cmp
or
pop
add
sar
mov
nop
aas
sbb
adc
xchg
add
xchg
push
std
jg
adc
add
inc
mov
out
or
pop
pop
lret
rcll
mov
mov
push
sub
add
jp
pop
mov
jg
fidivrl
cmp
add
mov
nop
ret
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
call
add
dec
std
xchg
imulb
cmp
jns
shl
cld
add
xor
inc
lock
sub
adc
inc
fmuls
or
lock
xchg
ja
faddl
rolb
shrb
mov
pop
add
decl
mov
jbe
sbb
aas
dec
add
xlat
faddl
add
cwtl
cmc
out
clc
dec
pop
jle
cmp
sbb
imull
pop
push
pop
xor
mov
inc
loope
cmp
push
jg
js
stos
pusha
popa
dec
mov
and
sbb
xchg
push
ljmp
dec
inc
mov
cmpsb
sub
add
sbb
addl
push
or
ja
pop
mov
sub
imul
xchg
scas
repz
pushl
sbb
jae
es
lods
cmpsb
sbb
enter
mov
movsb
or
pop
push
pop
xorl
ret
clc
sub
stos
insl
and
js
lods
repnz
mov
add
mov
add
aad
add
fidivl
jge
popa
lfs
jmp
and
push
mov
je
jo
fnsave
and
inc
sbb
adc
mov
jo
or
or
adcb
add
dec
mov
xor
cli
push
out
fcoms
mov
lahf
dec
push
mov
inc
mov
adc
pushaw
add
aaa
dec
pop
out
shlb
pop
jnp
packssdw
ljmp
icebp
roll
cmpl
adc
dec
and
hlt
daa
test
jg
dec
push
and
jne
add
push
xlat
sarl
mov
pop
rol
popf
repnz
push
test
inc
adcb
call
sub
je
add
xchg
dec
xor
das
call
sbb
add
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
int3
clc
dec
mov
pushf
hlt
je
les
xor
mov
inc
or
dec
adc
push
and
test
jp
fucomip
dec
in
xor
xchg
push
jo
mov
js
or
rclb
mov
sub
jg
incb
and
imul
xor
addr16
imul
lcall
xor
sub
fadds
adc
cmp
or
imul
add
adc
dec
cmp
call
pop
pop
loop
fbld
mov
push
out
jl
add
jno
dec
mov
cmp
push
rorb
nop
jnp
sbb
addb
sub
pop
inc
dec
push
mov
mov
jl
sbb
ljmp
loopne
je
mov
pop
adc
sub
daa
mov
and
shlb
scas
xchg
cmp
mov
add
int3
xchg
add
cs
decl
fs
rclb
jb
jmp
add
jmp
out
arpl
add
jmp
push
pop
subb
jo
mov
cmp
fstpt
push
mov
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
decl
jmp
or
dec
mov
pusha
push
xchg
cmp
decl
add
jne
das
cli
ss
jno
mov
jmp
or
call
aam
and
and
and
es
fnstsw
xchg
fs
je
ja
mov
push
xor
add
out
push
jae
add
push
ljmp
push
in
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
aaa
std
shrb
les
jle
mov
sub
cmp
xor
call
and
xor
pop
shl
cli
mov
int
push
decl
clc
jle
aas
sub
ds
jp
mov
mov
dec
lea
dec
ja
js
andb
inc
movsb
add
clc
jle
adc
mov
push
or
add
and
xchg
lcall
outsb
mov
mov
cmp
call
lcall
pusha
das
dec
cmp
int3
add
mov
fimuls
out
pop
ljmp
mov
dec
scas
into
xchg
insb
sub
xlat
ds
int3
add
call
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
cld
mov
mov
ffreep
sbb
jl
scas
and
or
add
lods
nopl
aaa
lcall
lahf
repz
push
mov
insb
dec
inc
test
insl
xchg
xchg
mov
add
out
shlb
push
jmp
jge
cltd
adc
call
adc
sub
xor
add
xchg
insb
scas
andl
lock
push
bound
push
xchg
dec
sub
stos
xor
jg
jp
outsl
add
pop
mov
hlt
into
jo
mov
pop
fstpl
push
mov
or
jne
push
push
out
inc
je
add
outsb
ret
in
add
stos
ljmp
aam
mov
sbb
int
adc
cmp
cmpsb
pop
imul
mov
lds
and
add
out
fcmovnb
loop
add
adc
jg
sbb
push
cli
idiv
incl
inc
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
fidivrs
call
jmp
movsb
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
jmp
inc
std
addb
je
ret
fcmovbe
and
cmc
stos
pop
mov
or
adc
adc
ljmp
inc
jb
cmp
inc
dec
popa
nop
push
mov
or
js
clc
incl
notb
jge
clc
decl
jae,pn
mov
decl
stos
or
sub
imul
dec
add
jmp
mov
push
lea
and
adc
jmp
cmc
adc
push
add
sbb
dec
lcall
push
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
jg
pushl
xchg
notl
inc
add
aam
pop
leave
mov
lea
lock
mov
imul
mov
jge
xchg
enter
push
fs
es
push
mov
push
mov
add
push
xchg
das
and
test
push
movsb
insl
mov
mov
xchg
dec
nop
cmpsl
add
sub
mov
add
inc
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
xorb
std
jg
push
mov
cli
or
xchg
jne
dec
and
decl
adc
dec
ds
mov
sub
roll
imul
xlat
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
cld
xchg
add
push
mov
jns
sub
sbb
minps
leave
mov
lahf
fdivs
jmp
mov
mov
push
pop
or
and
paddw
cld
incl
ds
jle
stc
fdiv
daa
shlb
aam
push
call
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
dec
loop
test
adc
pusha
hlt
cli
fnstsw
mov
sbb
inc
hlt
jnp
rcr
push
jo
je
stos
mov
mov
cltd
cli
outsl
into
cmp
adc
xchg
imul
loop
jae
push
add
mov
sbb
cmc
subb
shrb
add
scas
jl
or
push
xchg
fs
lods
push
orb
sar
sahf
data16
jb
add
pusha
push
fs
pop
clc
bound
cmp
xorb
decl
mov
add
jg
addr16
repnz
je
lock
jg
test
cmp
int3
cmp
fiaddl
jg
incl
addl
mov
mov
mov
and
inc
enter
fildl
movsb
or
sbb
faddl
loopne
pushf
xor
call
incl
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
mov
adc
jne
imul
mov
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
cs
fbld
rcll
inc
jne
and
xchg
cmp
adc
push
pop
push
call
lret
or
xor
mov
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
incl
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
sub
mov
xorb
mov
scas
das
jl
jbe
cmp
sbb
xor
mov
lods
mov
fisubrl
inc
ljmp
lcall
sbb
mov
aam
pop
dec
add
js
mov
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
cmp
div
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
adc
int3
sub
jne
sbb
mov
rclb
cld
ljmp
adcb
add
pop
dec
in
and
inc
inc
in
insb
and
and
sbb
test
adc
sub
mov
mov
inc
sbb
arpl
nop
fs
fwait
add
pop
lcall
xor
stos
dec
std
sbb
push
fcompl
rol
xchg
mov
aad
jno
ljmp
mov
jp
ja
fadds
aaa
sub
adc
xchg
aas
ficomps
add
or
and
or
daa
xchg
les
aam
aaa
add
call
std
push
jl
pushf
sbb
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
mov
pop
sbb
dec
ret
enter
xchg
pop
lcall
lods
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
add
decl
jne
add
lea
mov
sub
jae
mov
xchg
out
and
cmp
xchg
repz
xor
add
dec
mov
adc
or
sbb
rorb
push
and
pop
jg
cmc
fs
push
ret
fwait
cld
repz
add
jae
pop
pushl
std
pushl
addr16
add
inc
pop
and
jg
cli
adc
cmpsb
push
add
js
and
sub
insl
push
dec
xchg
mov
and
lock
adc
ljmp
std
xor
mov
and
adc
ret
lret
push
add
xor
decl
cmp
jb
dec
push
adc
push
mov
inc
test
cmp
pop
sbb
jmp
fs
push
daa
cs
adc
add
cmpsb
sub
ljmp
cmc
aad
dec
xchg
repnz
xor
stos
adc
idiv
push
sub
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jg
pushl
pop
shl
in
mov
ficompl
mov
add
std
jae
leave
rcll
add
push
pop
movsb
int3
sub
popa
mov
and
cmpsb
out
cmp
inc
insb
cmp
dec
frstor
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
pop
mov
cmp
hlt
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
add
stos
movsb
adcb
in
movsb
add
frstor
rcr
mov
call
and
cwtl
aaa
add
dec
imul
leave
sbb
mov
add
pop
push
adc
mov
xor
das
and
inc
xor
in
in
in
pop
mov
jle
cwtl
xor
cmpsl
sub
inc
cmp
je
jo
ret
inc
lcall
inc
bound
insw
sub
push
arpl
aam
sar
out
add
add
push
push
gs
mov
bound
jnp
loop
rclb
cltd
push
mov
mov
or
popa
add
and
jo
and
dec
sbb
push
cli
pop
adc
cmp
xchg
and
stos
and
inc
mov
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
add
popf
ja
jae
jbe
incl
imul
ljmp
subb
sub
fs
pop
sub
cs
pop
cmp
jmp
and
jg
stos
and
lods
rclb
push
add
call
jle
jg
lcall
sarb
cltd
sub
addl
mov
cmp
add
push
out
je
dec
into
decb
adc
push
push
ljmp
sahf
inc
add
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
loopne
adc
add
cmp
and
stos
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
decl
push
adc
popl
mov
and
mov
rcr
decl
push
aas
mov
bswap
ja
pusha
shll
push
call
pop
mov
pushl
shr
rcrl
push
push
adc
cli
sbb
popa
push
ss
xchg
pop
enter
test
mov
jp
enter
mov
incl
mov
cmp
repz
daa
cmp
sub
jbe
add
ljmp
mov
scas
adc
and
cli
push
pop
mov
sub
sub
push
in
inc
add
or
orl
mov
repnz
mov
push
jl
push
aaa
popl
jg
pusha
mov
push
push
xor
add
orl
decl
sub
gs
mov
test
inc
jecxz
adc
cmp
incl
outsb
dec
imul
out
sub
cmp
inc
mov
xlat
xor
lcall
pushl
add
mov
jne
sub
cmp
inc
add
js
popa
pushl
fdivr
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
mov
mov
mov
lahf
add
pop
sbb
dec
adc
clc
aaa
mov
xor
test
call
dec
inc
cmp
push
clc
jmp
cmp
and
pusha
cmp
push
clc
inc
lret
sub
in
inc
xor
mov
in
jmp
sbb
or
xor
inc
push
add
adc
lcall
dec
data16
mov
adcb
test
jp
test
in
aaa
jl
xchg
jnp
or
jle
mov
inc
dec
je
daa
sbb
inc
sub
add
enter
and
jne
xlat
lock
pushl
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
adc
cmpb
add
fcomip
rcrl
rcrb
sar
shlb
std
movsb
mov
clc
lcall
fsubr
mov
mov
lret
sti
add
xchg
push
divl
incl
pop
xor
push
scas
xor
push
mov
test
call
mov
loopne
or
add
ljmp
cs
push
dec
in
lock
incl
add
push
fs
mov
or
loopne
inc
fsubr
xor
das
mov
mov
mov
or
dec
test
out
or
sub
xor
inc
clc
fldl
js
add
jge
mov
add
pop
hlt
push
clc
jmp
shlb
add
add
stos
pushl
call
and
fnstsw
pop
jecxz
addb
mov
cmpsb
adc
int3
push
test
xor
jmp
mov
sbb
lea
imul
mov
sbb
and
addb
cli
and
scas
in
cld
movsb
add
aas
sbb
push
rorl
dec
lds
mov
pop
mov
pushl
std
inc
loopne
movsb
cmp
incl
cld
lock
out
daa
clc
jo
add
mov
xorb
add
lcall
pop
dec
popa
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
incl
pop
add
add
add
inc
orl
pop
and
or
or
js
call
jns
aad
mov
xchg
cmp
inc
out
fmull
or
dec
in
push
je
push
and
inc
inc
sbb
jmp
pop
or
or
push
ljmp
mov
add
xor
clc
pop
sar
inc
call
enter
mov
cli
out
lods
or
out
pop
cmp
jmp
rcr
add
repz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
imul
add
rcrb
cwtl
aam
or
jg
js
push
in
loopne
xchg
lock
adc
lret
inc
sar
push
aad
xchg
add
hlt
sub
sub
pop
aam
xor
jg
push
les
cs
inc
andb
pop
aas
or
push
mov
mov
inc
test
ret
add
call
scas
clc
inc
int
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
pop
icebp
jg
sub
dec
lods
push
jmp
inc
and
ljmp
push
incl
or
sbb
add
jbe
jp
cmp
add
sub
scas
nop
loope
std
jmp
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
mov
push
ret
sbb
notb
add
stc
cmp
mov
addb
add
aaa
sbb
stos
add
adc
xor
or
std
sub
push
or
mov
mov
dec
test
js
lahf
outsl
xor
or
pop
add
shlb
add
decl
pushl
pop
add
sbb
jne
out
pop
xchg
loope
lcall
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
cmp
mov
scas
sahf
popf
or
clc
jae
cmp
incl
ds
cltd
and
lcall
or
lahf
mov
add
xchg
jae
scas
cli
sub
push
xlat
push
or
hlt
mov
cli
mov
fimuls
ss
ljmp
fldl
cmp
fs
mov
sti
and
and
adc
jne
add
lock
adc
sbb
cmp
mov
shrl
add
add
lret
sbb
pop
or
inc
sub
inc
mov
and
xlat
pusha
inc
add
dec
jne
xor
inc
adc
sbb
loop
les
mov
mov
sti
fwait
add
enter
push
pop
cmc
fists
inc
jne
dec
nop
push
or
stos
popa
cld
ljmp
out
cwtl
orb
lds
sar
ljmp
sub
inc
imul
mov
sbb
jno
xor
scas
imul
push
out
test
mov
lea
mov
and
mov
fstpt
sbb
xor
fidivrl
pushl
rorb
cs
xchg
pop
jne
call
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
das
clc
jne
inc
cld
mov
mov
jae
mov
incl
shll
loop
mov
bound
push
sub
jg
mov
je
test
cs
and
adc
mov
push
pop
out
jbe
hlt
or
add
pop
icebp
mov
jne
push
incb
nop
dec
ljmp
inc
cld
clc
add
or
stc
cmp
xor
sbbb
ds
jmp
ljmp
addr16
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
stos
movsl
fcomip
adc
xchg
sbb
dec
addr16
sub
ljmp
test
mov
sub
pusha
out
daa
add
xchg
or
lret
sub
ficoml
cmp
sbbl
stos
stos
das
cmp
test
sub
pusha
lcall
inc
shlb
mov
inc
les
mov
push
xor
add
xlat
mov
add
lods
ljmp
je
jnp
jae
push
sub
sbb
inc
gs
aas
movsb
icebp
add
ja
scas
andb
push
add
push
popa
imul
fcmovnbe
push
dec
clc
fildll
loopne
loop
pop
rclb
adc
xor
decl
xchg
ret
mov
les
test
rclb
mov
pop
jbe
jl
and
jge
push
jne
enter
mov
in
ss
fsubrs
mov
add
adc
xchg
mov
fcoml
decl
adc
adc
loopne
lret
lods
mov
or
pop
adc
incl
cmp
mov
pop
repnz
mov
call
mov
mov
notb
add
call
pop
loopne
xlat
out
repz
pop
xchg
test
lock
test
push
push
or
add
clc
inc
sbb
mov
sahf
insl
xchg
out
jp
push
or
and
ja
mov
add
je
push
jg
sub
sub
jecxz
and
test
ret
and
pop
int3
push
fnsave
test
add
mov
lcall
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
pushl
sub
pop
in
sti
loopne
movsb
mov
dec
jl
xchg
pop
shr
leave
mov
inc
hlt
scas
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
in
sbb
in
lret
ljmp
test
sub
subl
hlt
inc
rorb
iret
call
je
lret
or
ja
lcall
add
inc
mov
test
lds
mov
rcrb
decl
add
or
aaa
cs
push
nop
pop
mov
fildl
mov
dec
add
clc
repz
psubsb
mov
add
shlb
dec
xchg
adc
lcall
mov
testb
loop
sbb
cmp
push
cmp
push
dec
fwait
pop
popl
sbb
add
sbb
fwait
pop
and
push
fildl
inc
clc
sar
jg
lods
jnp
pop
mov
dec
aaa
movsb
mov
out
mov
icebp
adc
jge
fiadds
mov
inc
clc
xchg
test
pushl
mov
push
add
test
push
je
cld
push
cmpsl
inc
aam
out
cli
mov
add
and
mov
xlat
cmpsl
or
rolb
test
or
gs
clc
outsl
aas
adc
mov
jne
adc
add
fucomi
in
lods
dec
ja
push
outsb
jge
inc
push
jmp
jns
pop
insl
ja
mov
sub
jge
incl
xchg
into
popf
push
ror
push
sub
xor
lea
orb
imul
mov
test
jo
mov
incl
scas
xchg
aaa
mov
sub
add
mov
xlat
movsb
adc
adc
stos
jmp
sti
decl
mov
jg
psubd
incl
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
sub
adc
xor
push
dec
add
add
icebp
lods
jle
test
mov
mov
call
mov
stos
adc
dec
jmp
adc
inc
add
or
cmp
clc
aaa
inc
jb
ljmp
mov
test
sub
sbb
incl
movsl
cwtl
jno
add
enter
mov
jmp
rolb
mov
push
and
stos
and
fstp
je
cmp
addl
fdivs
sub
call
fwait
inc
mov
in
scas
cmp
push
or
mov
mov
push
or
lds
repz
xchg
testb
jae
test
mov
xor
pop
std
lcall
dec
push
add
aad
inc
ljmp
loopne
jmp
je
shrb
cmpsl
shlb
dec
test
jl
mov
jg
ja
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
stos
aaa
cld
lret
test
repnz
repz
stos
inc
int
sbb
sbb
cltd
lods
incl
outsl
clc
xlat
lock
or
ret
add
adc
gs
jg
pushf
cmp
out
sub
add
push
inc
mov
test
decl
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
mov
lods
or
cwtl
add
add
pop
aaa
jne
int3
filds
stos
add
xchg
push
jp
cmp
cs
aad
test
inc
enter
jl
jb
and
daa
xor
mov
inc
fstps
push
xor
test
push
sbb
movsl
or
movsb
or
gs
call
enter
push
adc
add
xchg
push
popf
cmc
ljmp
mulb
mov
cwtl
cmp
sbb
jmp
in
or
adc
mov
pop
xor
push
inc
add
or
xchg
add
mov
test
das
sub
cltd
sub
sbb
pop
dec
pushf
xchg
out
loopne
pop
jmp
mov
mov
mov
hlt
ljmp
mov
mov
pop
lods
sbb
add
les
xorb
jle
mov
inc
pop
push
loopne
mov
rcrl
jbe
mov
push
leave
xchg
xor
loop
add
pop
and
add
jg
loopne
adc
or
cld
call
leave
fdivrs
pop
or
mov
inc
mov
push
outsl
call
ret
add
jne
sub
cmp
test
or
imul
call
shrl
add
in
mov
cmp
mov
or
inc
jmp
jecxz
add
stos
add
ret
andl
adc
xchg
sub
out
cli
jg
loop
lds
shll
shll
cld
cmp
lock
sbb
js
or
incl
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
mov
int3
scas
fnstcw
cmp
loope
enter
push
jno
out
push
cmp
dec
add
inc
stc
pop
cmp
lea
pop
ja
pop
cld
pop
jmp
inc
fistl
loopne
cld
pop
cmp
mov
call
loopne
and
add
mov
rorb
sbb
inc
xchg
cmp
pop
cmc
lcall
in
push
pushf
lock
sbb
mov
andb
jle
cmpb
out
push
icebp
push
scas
cmp
sub
sti
das
clc
jmp
out
add
push
push
cmpsl
les
add
and
jbe
aam
js
dec
pmaddwd
inc
pop
or
cmp
pop
icebp
push
sub
or
push
lock
pop
addb
cld
stc
loopne
add
loopne
ljmp
ljmp
sbb
divl
incb
jge
mov
or
inc
mov
add
ret
add
and
outsb
in
bound
lods
pop
imul
ror
adc
loope
out
adc
pop
mulb
mov
xchg
add
jo
cmc
decl
stos
xchg
into
loopne
adc
mov
mov
je
xor
mov
xor
dec
adc
pop
and
and
add
aaa
je
jne
add
ljmp
pop
arpl
stos
mov
mov
mov
push
pop
mov
aad
sub
call
push
add
cli
mov
les
cltd
cmc
cmp
pop
jmp
cli
ljmp
add
inc
pop
clc
mov
mov
call
incl
cmp
inc
add
aam
mov
hlt
repnz
mov
cs
cli
pushl
test
add
fiadds
sbb
jg
call
add
push
aas
test
sbb
add
or
bnd
fcomps
cli
call
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
scas
xchg
hlt
aaa
cmp
mov
fimull
cmp
std
imul
cmp
clc
dec
or
aad
call
add
aas
add
inc
mov
or
xchg
and
sub
or
push
inc
imul
and
jb
adc
add
rolb
push
mov
mov
cmpsb
stc
jle
lcall
sub
mov
adc
dec
or
clc
ja
xor
addb
jmp
lret
inc
pop
pop
cli
loopne
add
jb
cmp
xor
test
out
pop
clc
ljmp
clc
testl
hlt
mov
sbb
int
clc
lcall
mov
add
push
dec
loope
bound
arpl
decl
loop
mov
test
xchg
iret
xor
and
sar
ljmp
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
push
add
pop
fdiv
pop
mov
add
sbb
fs
fsts
filds
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
jmp
in
and
inc
aam
iret
adc
les
add
push
jmp
sarb
xor
inc
add
inc
and
add
push
jmp
ljmp
pop
cmpl
push
hlt
xor
add
inc
mov
into
inc
and
fiadds
sbb
push
ret
pop
jp
popf
testl
cmp
jge
push
mov
cmp
ror
sarb
mov
fnsave
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
lock
xor
sub
adc
pushl
fs
dec
jo
fists
outsb
and
jmp
cmp
xor
inc
cmp
mov
push
mov
sub
scas
call
adc
pop
or
arpl
adc
pop
add
jb
popa
add
inc
push
mov
imul
sbb
aas
cld
pop
cmp
lcall
mov
mov
push
push
sub
rorb
xor
jle
orl
sar
je
ljmp
pop
test
mov
dec
add
push
mov
or
push
or
adc
mov
jmp
dec
shll
cmc
pop
and
lcall
cmp
add
push
and
incl
jmp
clc
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
mov
sub
or
push
sub
push
jmp
sbb
cli
lcall
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
jmp
adc
subl
stos
push
sahf
pop
pop
ds
inc
pop
sub
movsb
add
adc
mov
inc
pop
mov
daa
mov
insb
psrlq
mov
sarl
mov
jg
cmp
lcall
jl
or
hlt
call
mov
shll
xor
add
ljmp
incl
push
mov
and
adc
mov
ret
jle
jmp
adc
add
pop
movsl
jge
in
pop
mov
rcrl
loopne
add
rcr
add
aad
enter
push
call
sbb
out
and
add
sub
mov
repnz
and
pop
call
jae
push
ret
inc
push
jle
inc
add
adc
lock
jge
rolb
sar
fcomip
fucomip
xlat
out
or
popa
push
fcoms
xorb
push
adc
test
out
cli
pop
cld
jmp
adc
xchg
dec
ret
popl
adc
and
xor
cmc
pop
hlt
ja
scas
adc
dec
xchg
insb
push
cmp
cli
cmp
or
xchg
xor
jnp
adc
dec
jbe
jmp
daa
jg
mov
mov
inc
mov
mov
push
imul
cmp
or
dec
sub
push
es
cmp
inc
mov
rcrl
js
sbb
xchg
push
int3
mov
push
mov
imul
dec
jbe
and
jnp
rcrb
insl
dec
pop
cld
inc
sbb
add
call
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
inc
sub
loopne
aas
add
push
add
fcomip
push
or
das
test
movsb
call
adc
cld
std
and
outsl
jg
sbb
cmp
jnp
or
fdiv
xor
cmp
and
loopne
mov
inc
fs
mov
dec
push
inc
pushl
pop
mov
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
or
jb
mov
test
cli
nop
notb
ja
lock
icebp
test
adc
stc
lret
inc
add
cmpl
inc
test
incl
hlt
stos
test
push
ds
xchg
insb
pop
and
decl
pop
cwtl
jp
dec
cli
loop
xor
imul
jno
repz
jp
out
push
cmpsb
pop
xchg
fsubl
sbb
pop
pop
dec
mov
inc
pop
clc
mov
mov
loopne
cmc
mov
roll
mov
ds
ja
xor
add
incl
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
incl
mov
insl
dec
out
pop
repnz
call
inc
xchg
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
rcrb
adc
or
les
sahf
sub
call
sub
pop
xor
mov
pop
push
je
ljmp
jno
js
aaa
xchg
add
push
push
aas
mov
lret
push
dec
mov
fnstcw
movsb
dec
repz
nop
xchg
or
dec
push
xchg
je
out
xor
adc
jnp
pop
inc
sub
mov
or
xorb
cli
dec
add
jl
lods
aad
cld
sub
jmp
add
call
inc
cld
jae
and
jg
xor
dec
test
or
add
std
jecxz
jl
clc
outsl
mov
call
enter
xor
pop
adc
call
inc
jecxz
clc
add
jmp
push
sbb
test
clc
add
popa
sub
add
stos
push
or
dec
in
push
cmovne
mov
push
imulb
xor
xchg
mov
sti
cmp
ljmp
orl
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
xlat
inc
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
cmc
jg
stc
loopne
test
and
js
jmp
lock
jecxz
mov
cmp
mov
popf
loope
add
add
ljmp
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
ljmp
add
inc
add
les
jnp
and
cli
jecxz
stos
jg
pushl
push
daa
std
ret
das
jle
inc
aaa
mov
mov
jg
insl
inc
jp
mov
mov
rolb
pop
xor
adc
lahf
xchg
andb
idiv
mov
lcall
fldenv
xchg
lcall
inc
in
inc
sbb
pop
cmp
mov
popf
push
ret
test
dec
stos
add
imul
sub
in
repnz
mov
hlt
aad
xchg
sar
sbb
mov
fldenv
loopne
push
add
inc
add
inc
and
sub
dec
sar
ja
or
in
cs
pusha
stos
cwtl
jb
add
call
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
lcall
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
rclb
push
sub
jbe
mov
mov
pop
jmp
adc
inc
lcall
incl
enter
ss
or
sbb
xchg
xchg
fdivrs
nop
sub
movsb
xchg
mov
ret
sti
popf
pusha
xchg
adc
adc
and
inc
mov
cmp
jne
jnp
cli
decl
jmp
pop
add
or
sbb
hlt
sbb
mov
xchg
lods
push
xchg
jbe
repnz
sub
xor
sub
push
idivb
test
scas
xor
cltd
idivl
and
nop
xor
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
decl
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
fisttps
cmp
add
ljmp
roll
and
sar
cmp
and
aad
pop
scas
sub
idivb
adc
enter
mov
jle
dec
inc
das
xlat
or
cmpsl
testl
jg
fildl
out
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
mov
add
sti
sahf
mov
loop
test
cmc
mov
or
cli
pop
mov
add
cmp
mov
movsl
addl
mov
pop
mov
add
filds
mov
movl
pop
cld
call
mov
sbb
push
lea
or
jp
lock
or
call
mov
and
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
pushl
call
in
mov
andl
sbb
fnstenv
sahf
in
syscall
lret
scas
cmp
call
jge
movsb
pop
xchg
add
adc
inc
fsubrl
sub
call
mov
add
ss
xor
adc
sub
jg
push
add
cwtl
pop
push
lret
pop
or
fsubrs
mov
jle
in
inc
sub
fdivl
and
lcall
js
aas
and
repnz
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
incl
dec
aas
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
jg
mov
aam
adc
add
or
dec
aaa
sbb
add
incl
pop
rclb
mov
and
add
inc
cld
jmp
or
hlt
sti
bnd
cwtl
mov
cmp
mov
aaa
push
cmp
push
in
dec
addl
lcall
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
out
nop
icebp
pushl
or
bound
dec
dec
add
mov
jmp
inc
adc
add
cmp
hlt
and
mov
xchg
mov
jbe
clc
je
imul
inc
addr16
pop
and
pushl
push
sub
adc
xchg
rolb
bnd
fdivrs
idivb
sbb
cmp
pushl
xchg
flds
inc
add
sar
fsub
add
leave
jg
push
pop
rcrb
push
jne
or
xor
jg
incl
mov
jmp
cld
and
add
dec
iret
call
mov
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
and
lods
pop
movsb
js
jmp
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
mov
sub
adc
pop
aas
sub
jns
pop
leave
cmpsb
adc
cli
mov
insb
xchg
ds
xchg
add
insl
ret
mov
mov
sub
lret
adc
nop
add
pushl
push
add
lahf
add
jmp
ljmp
xchg
xchg
push
call
mov
mov
sub
mov
inc
push
rorb
or
movsb
pop
leave
fidivrl
addl
jg
xor
ljmp
cli
cmp
dec
stc
enter
mov
in
xor
fildl
in
imul
shrl
cmp
incl
mov
shrb
sub
adc
mov
push
movsb
add
es
pop
and
clc
mov
jno
xor
push
xor
adc
es
sub
arpl
loopne
sar
xchg
mov
jmp
xchg
lds
xchg
xor
je
fisttps
jmp
jbe
imul
cli
dec
in
rorl
push
add
mov
mov
les
dec
popf
sahf
and
aam
movsl
aas
xor
gs
ja
dec
push
cli
decl
or
xor
pop
sti
ds
or
aas
ja
cli
mov
cmp
stc
test
or
mov
push
call
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
outsl
cli
stc
cmp
insb
movsl
cs
sbb
and
enter
ljmp
push
cmpl
xchg
cmc
adc
add
jg
jg
lea
add
jmp
mov
push
cmc
out
loopne
incl
loope
sub
jnp
sbb
pop
scas
dec
cwtl
jmp
mov
jmp
jbe
xor
dec
pop
clc
incl
mov
mov
pusha
cmp
adc
lods
or
push
ret
or
and
outsl
or
hlt
mov
jp
in
sar
jg
push
lcall
pop
jb
add
test
lea
and
fildll
dec
adc
mov
test
incl
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
jl
xchg
sbb
incl
cli
xor
adc
fldenv
ljmp
ds
add
add
cli
call
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
cli
filds
or
ret
ds
imul
testl
and
stc
sbb
aam
add
jge
outsl
cmpb
lea
or
and
push
xchg
aad
xchg
and
test
cmp
filds
aas
sub
jb
or
mov
jns
dec
addl
sarl
pop
sbb
push
push
sub
out
push
das
imul
mov
jmp
push
add
nop
std
mov
sbb
roll
daa
cmp
xchg
cltd
cld
pop
popa
clc
mov
mov
adc
mov
xchg
or
jae
jle
or
outsb
sti
insl
shll
cmp
jmp
push
std
cs
add
dec
mov
xchg
pop
add
addb
ja
in
sbb
sbb
addr16
add
xor
push
mov
inc
lds
ljmp
popw
add
mov
subb
or
push
fidivrs
push
dec
add
mov
pop
inc
push
enter
jg
xor
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
aad
inc
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
lods
mov
out
pushf
sar
lcall
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
test
jle
sbb
or
and
decl
movsl
add
dec
enter
mov
jg
sbb
sub
inc
sar
mov
fcoml
jp
pop
icebp
cmp
mov
subl
pop
ret
stos
xor
or
inc
or
mov
aas
add
add
mov
add
xor
push
jnp
pop
sbb
push
into
xchg
mov
arpl
adcb
pop
mov
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
or
decl
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
sub
dec
js
jno
in
jge
daa
or
jp
add
dec
adc
pop
pop
add
repz
enter
or
call
mov
fwait
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
adc
lods
fstps
and
out
adc
loope
lock
data16
lcall
mov
and
fisttps
pop
popf
jmp
loopne
sbb
mov
pushl
je
or
jno
and
test
repnz
add
sub
loop,pn
decl
inc
add
adcl
divl
add
and
mov
jecxz
jg
icebp
ljmp
je
and
lock
xchg
orl
add
mov
cmp
outsb
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
pushl
mov
push
push
lahf
movl
std
mov
iret
out
loopne
clc
sub
pushl
sub
dec
test
dec
cmp
xchg
jmp
das
add
stc
cld
pop
dec
testb
jns
pop
xor
xchg
lcall
add
and
sub
aaa
enter
test
je
mov
dec
dec
andb
and
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
and
jmp
mov
inc
dec
cmp
mov
pop
je
push
or
pop
mov
push
sub
lods
ljmp
dec
test
mov
inc
in
lods
shrb
decl
jg
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
ljmp
stos
cmp
jo
push
pop
pop
or
incl
pop
xchg
mov
test
sbb
das
or
pushl
dec
popa
adc
add
enter
mov
call
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
xor
pop
push
adcb
rorl
jmp
xchg
loop
cltd
icebp
movsl
add
movsb
dec
das
jne
xorb
int
pusha
inc
and
mov
cltd
ror
xor
mov
dec
scas
adc
mov
push
dec
in
test
push
xchg
pop
decl
sub
add
pop
jb
stos
lods
and
sub
es
adc
out
jp
ds
jb
not
xchg
push
cltd
cli
ja
sub
out
push
mov
or
and
cmp
inc
jb
mov
fsubr
decl
sub
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
adc
jmp
iret
clc
push
mov
loop
pop
clc
pushl
cmp
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
cmp
fmul
fdivr
mov
and
mov
loope
popa
mov
xchg
ljmp
add
jbe
inc
insl
jl
mov
adc
decl
xchg
mov
jmp
mul
add
adc
or
dec
fcomip
adc
xor
inc
jae
mov
inc
lock
cmpsl
add
pop
jg
or
mov
and
inc
inc
and
xor
pop
js
call
or
and
and
fcompl
dec
push
xchg
push
xchg
xchg
decl
lock
xchg
cmpsb
cmp
pop
xchg
xor
xchg
push
shl
add
scas
pop
bound
fadd
sbb
pushaw
adc
or
jp
or
decl
add
mov
add
hlt
mov
mov
jge
out
cwtl
xchg
add
dec
out
dec
push
xchg
pop
sahf
incl
les
mov
subb
add
mov
pop
or
cmp
add
push
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
ljmp
jp
fs
repnz
movb
daa
in
jae
or
ret
clc
decl
insb
les
mov
fists
add
push
or
mov
jns
loop
lret
pop
roll
mov
adc
jl
aam
dec
and
dec
mov
outsl
fdiv
cmc
or
xor
sti
repnz
mov
add
mulb
fiadds
decb
fidivl
adcb
jae
mov
dec
xchg
xchg
shlb
adc
pop
shrb
jb
pushl
xor
test
add
inc
adc
xchg
lret
ja
pop
add
inc
call
push
xchg
or
jae
mov
ficoml
out
mov
or
or
jne
inc
test
dec
add
clc
dec
or
dec
adc
ss
lcall
aaa
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
pop
or
mov
insb
out
lods
arpl
dec
aad
jmp
mov
sbb
into
daa
addr16
test
xor
mov
xor
inc
imul
pusha
fsubl
cmpsl
lods
jg
and
mov
push
lods
push
popf
inc
fists
mov
and
int3
jle
jb
dec
mov
pop
ss
repnz
ljmp
cmpsb
push
cmp
mov
decl
rol
jmp
lods
out
or
incl
es
add
sub
jg
stos
loope
fisttps
add
imul
and
mov
out
add
pop
push
nop
shll
mov
adc
mov
hlt
js
in
add
push
scas
test
incl
gs
jo
lahf
ss
popf
arpl
pop
sub
add
push
call
decl
sbb
jmp
mov
push
cmc
aas
imul
add
mov
and
mov
rcrb
xor
mov
adc
push
mov
push
repz
sbb
call
jne
add
adc
add
int3
mov
xchg
int
xor
mov
fdivl
movsl
dec
popf
out
pop
jne
xor
mov
es
incl
popf
fsts
cmp
xchg
dec
mov
ljmp
clc
cmpsl
jmp
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shrb
add
insl
cmp
daa
popa
fadds
pusha
incl
pop
mov
xor
dec
mov
cld
movsl
or
push
gs
jbe
cld
pop
add
in
cltd
adc
aas
push
icebp
lcall
scas
xor
push
sbb
lret
cmp
ja
adc
inc
sbbb
pop
jno
xchg
add
xchg
add
das
sar
push
mov
jbe
out
stc
add
inc
xlat
lret
pop
hlt
and
jmp
mov
ljmp
add
add
sub
hlt
subb
loop
mov
stos
push
cld
dec
ret
hlt
pop
movsb
jle
adcl
mov
mov
fcomip
imull
cmp
mov
add
fwait
jg
das
cli
mov
push
mov
pop
iret
cwtl
push
and
jb
adc
movsb
add
push
cmp
call
mov
pop
dec
xchg
hlt
aad
mov
pop
inc
and
adc
pop
lds
jmp
out
test
lcall
dec
andl
push
and
or
inc
jmp
pop
push
ljmp
cli
insb
adc
pop
lcall
mov
mov
sub
scas
clc
pop
jl
popa
add
call
fidivs
push
adc
or
call
stos
lcall
lock
mov
sbb
adc
push
repnz
and
or
decl
add
pop
sub
pop
loopne
add
xchg
hlt
lcall
icebp
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
adc
jbe
in
add
int
das
es
dec
int3
jo
push
add
inc
add
rclb
icebp
lcall
and
inc
add
sbb
test
xchg
sbb
add
push
stos
scas
adc
cmp
mov
call
ljmp
xchg
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
outsl
mov
dec
push
inc
movsl
mov
out
lret
xchg
add
push
inc
stos
cwtl
shlb
mov
inc
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
decl
mov
rolb
pop
sbb
dec
js
add
cld
hlt
aaa
std
aas
dec
mulb
test
or
or
notb
xor
add
ffreep
mov
sub
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
stos
inc
loopne
fs
push
jl
push
nop
lret
mov
jg
mov
push
divb
jne
push
in
ds
add
fcomip
call
icebp
dec
test
sub
or
add
mov
jmp
scas
cli
mov
and
push
add
aam
dec
je
add
jns
jle
inc
sar
ljmp
mov
shrb
movb
ljmp
les
cmc
pop
push
rorl
push
test
mov
adc
pop
cmpsl
jo
sbb
jnp
daa
mov
push
dec
sahf
lahf
rorb
xchg
std
cmpsb
scas
jl
les
inc
and
cs
sub
or
jmp
cmp
mov
and
and
or
cld
or
pop
pusha
mov
incl
jg
adc
add
rorb
sub
je
xchg
das
xchg
mov
sbb
or
or
pop
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
or
mov
cmpsb
add
xchg
mov
outsl
cli
cmp
test
xchg
mov
sub
dec
enter
push
adc
fwait
push
pop
incl
loopne
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
fistpll
and
lods
push
js
repnz
call
cmp
not
cwtl
inc
and
call
mov
call
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
decl
sub
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
incl
mov
xchg
fistps
cmc
sub
aaa
add
sbb
xorl
call
xchg
out
push
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
decl
adc
push
mov
fstpt
add
fs
lcall
pop
leave
or
cld
lcall
jno
cmp
shl
rcll
or
daa
scas
clc
pushl
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
das
mov
ror
shl
cmpsb
add
jb
or
xchg
cmc
inc
adc
call
and
lods
dec
lcall
mov
enter
sub
or
lcall
aaa
adc
add
mov
or
inc
sar
cmc
adc
add
adc
loopne
decl
mov
sub
js
dec
push
ja
ss
lds
pop
jmp
ds
push
and
mov
add
adc
or
inc
sbb
xorb
cmp
mov
jmp
sbb
mov
push
cmp
ja
mov
inc
call
stc
push
pushl
movsl
mov
aas
and
dec
pop
xchg
imul
decl
push
xchg
mov
xor
add
test
xchg
mov
lret
xchg
insl
lcall
mov
adc
sub
arpl
scas
ret
testb
mov
and
ficoml
roll
hlt
inc
mov
dec
or
cld
pushl
push
je
mov
pop
cmpl
jnp
cmpb
xlat
jg
adc
pop
add
das
cmp
mov
xchg
fdivr
jg
push
push
adc
hlt
loope
cmovns
lock
adcb
xor
call
add
hlt
adcl
lock
insb
and
mov
outsl
sub
aaa
std
and
ret
ss
push
jl
sub
or
lret
cmp
cmp
xor
test
call
or
inc
sub
incl
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
push
push
pop
out
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
mov
out
mov
mov
jmp
mov
clc
cmp
subl
je
sbb
lcall
pop
mov
rorb
bound
inc
push
jmp
and
add
sub
pop
test
imul
clc
fcomip
in
repnz
or
lcall
xor
mov
jecxz
cli
call
into
or
mov
and
fcompl
push
ljmp
shl
sbb
lds
adc
stos
cmpsb
ret
jg
push
sub
movsb
fimuls
mulb
inc
loopne
or
mov
or
std
cld
call
sbb
push
jmp
mov
jno
xor
sub
lock
cmp
mov
sub
pop
and
sbb
lcall
rdmsr
outsb
daa
xor
test
adc
push
adc
inc
and
xor
popf
push
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
cli
or
clc
jmp
aas
and
mov
adc
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
jg
dec
mov
lcall
xchg
subb
adc
mov
sbb
bound
lea
cld
lds
mov
or
pop
xor
call
xchg
adc
xchg
cmc
nop
pop
sbb
inc
ret
lcall
pop
andl
add
pop
enter
add
sbb
pusha
test
fcomip
dec
inc
mov
movsb
or
and
jle
aam
lcall
mov
sbb
imul
adc
mov
es
mov
dec
push
lock
fiadds
pop
inc
dec
movl
add
imul
test
jno
insb
sub
orl
or
push
sarb
push
or
pop
inc
es
shrb
pop
xor
dec
mov
pop
add
jg
nop
mov
dec
pop
ret
movsb
push
std
inc
mov
push
inc
shl
xchg
ja
mov
scas
call
pop
icebp
mov
imulb
addb
cld
sub
or
add
add
mov
adc
imul
or
cli
fwait
outsb
dec
inc
aas
push
test
and
cmpsb
loopne
and
pop
push
cmp
or
xor
sti
or
cld
incl
push
jmp
loopne
xor
xchg
jmp
test
or
add
inc
jae
lcall
fwait
sahf
mov
and
outsl
cli
incl
ret
sahf
jl
add
dec
ljmp
sbb
incl
orb
push
cwtl
cmp
mov
cmp
sub
aad
mov
add
mov
mov
jmp
sbb
stos
or
mov
adc
lea
jnp
es
add
cld
dec
jae
or
add
push
mov
jo
test
xor
fmull
cmp
xor
insb
test
and
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
ljmp
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
jg
fiadds
sbb
and
repz
aam
inc
hlt
idiv
cmp
add
stos
js
mov
or
pop
ljmp
les
popa
mov
add
cmp
or
addr16
pushl
lock
scas
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
stos
and
pop
xor
xor
xor
mov
mov
in
add
xor
jnp
cs
add
aad
inc
popa
decb
je
push
arpl
mov
jle
loopne
out
ret
stos
add
push
or
stos
loopne
add
mov
ret
mov
pop
add
jmp
push
cli
or
add
lds
xchg
mov
add
add
idivb
es
jmp
sbb
add
jnp
test
inc
sbb
cld
cmpsl
cwtl
imul
ret
inc
dec
and
scas
bound
inc
or
dec
sbb
jecxz
incl
adc
ret
fcoml
pop
in
shlb
push
inc
lcall
xchg
xchg
cmp
mov
sub
add
pop
dec
loop
sarb
sub
test
mov
push
pop
mov
inc
xor
add
sub
aam
cli
imul
test
xlat
dec
push
pop
arpl
sbb
lock
push
add
xor
adc
enter
add
fstps
cli
cmp
or
or
inc
mov
out
cmp
in
push
add
bound
filds
push
mov
scas
leave
mov
adc
or
sub
xor
add
jmp
cmc
shl
adc
fcoml
xor
mov
xchg
std
aad
inc
movsl
xor
fldt
mov
lcall
loope
sbb
add
jl
sar
adc
jle
call
repz
test
mov
cmpl
lret
and
sub
add
adc
sub
xchg
sub
test
aam
mov
imul
clc
ljmp
insb
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
call
je
lea
insb
adc
aam
add
push
and
int
aad
xor
ljmp
fistpll
in
add
add
mov
or
ja
adcb
inc
cmp
ljmp
mov
rorb
add
push
das
mov
call
or
ljmp
mov
es
ret
jo
jp
iret
push
push
test
pop
jno
jmp
or
jmp
mov
jg,pt
ds
enter
ja
clc
mov
int
mov
movb
cmpsb
adc
add
cmpsl
fisttpll
lea
jg
xchg
and
jne
sti
push
ss
data16
pop
add
adc
jae
sbb
out
xor
push
lock
jge
mov
verw
push
sub
incl
in
and
jmp
pop
cli
xchg
adc
test
sbb
jg
add
pop
enter
push
stos
cmp
mov
or
inc
mov
or
sub
pop
sub
stos
inc
xchg
jb
jecxz
mov
cwtl
sbb
mov
mov
cwtl
push
add
lock
jge
lock
push
cli
int3
jg
push
fidivl
cvtdq2ps
sub
inc
lret
xor
hlt
push
sar
add
or
or
mov
gs
cld
or
push
sub
xor
pop
cmc
cmp
es
clc
addb
out
mov
xlat
sbb
pushl
mov
pushf
popf
adc
leave
cltd
mov
inc
add
jg
ss
and
mov
loop
pop
add
aas
cmp
clc
cmp
ret
mov
jmp
add
mov
xor
and
iret
adc
adc
aas
push
and
enter
mov
adcb
rol
arpl
and
jae
dec
sbb
inc
das
clc
dec
loop
repnz
cli
jo
sub
fistl
or
notb
andl
fcoms
mov
or
mov
jg
xor
jns
movsb
fwait
std
rolb
ljmp
popa
pusha
jp
ljmp
adc
cmpsl
aad
ljmp
fmuls
out
xor
mov
inc
sbbb
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
idiv
fbld
arpl
xchg
xchg
aad
gs
dec
push
lret
push
add
jp
and
xchg
mov
clc
out
add
mov
sbb
jmp
add
mov
clc
fimuls
call
lcall
in
xchg
gs
push
call
pop
xchg
cmpb
mov
lcall
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
scas
add
fimull
out
cmpsb
sbbb
xchg
fistps
jecxz
jl
add
test
mov
out
inc
xor
dec
pop
std
call
fildl
and
inc
add
mov
pop
add
adc
and
mov
decl
mov
pop
test
imul
ret
call
sub
pop
clc
incl
pop
add
pop
mov
inc
cld
add
clc
and
call
mov
sbb
pop
scas
into
pop
jge
pop
inc
or
incl
rolb
cwtl
inc
subl
ja
mov
adc
roll
pop
fsts
scas
add
gs
outsb
scas
push
shrl
cmc
cltd
fimuls
jecxz
cli
hlt
rorb
sub
and
xor
imul
movsl
push
cmpb
jle
popf
mov
xchg
mov
push
jne
xchg
dec
jnp
lret
cmp
mov
fwait
add
ljmp
or
add
push
dec
decl
fucom
sarb
inc
sbb
pop
mov
and
pushl
mov
and
jle
jle
pusha
adc
sbb
lcall
pop
cmp
loopne
mov
cmp
dec
lds
pop
fisubrs
jae
lods
jp
ja
jge
cmc
dec
xor
add
scas
and
mov
add
xor
aam
movsl
push
push
and
xchg
mov
push
mov
sbb
mov
push
push
stos
mov
out
nop
clc
repnz
inc
cmp
adc
incl
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
dec
cld
call
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
jg
cmp
jb
jl
andb
es
jl
add
stos
dec
std
jge
jmp
pusha
mov
adc
jmp
jno
lcall
insb
mov
adc
xchg
mov
add
xchg
adc
hlt
jo
mov
push
mov
push
jne
adc
push
sub
xor
bnd
xor
jne
scas
cli
ljmp
js
sbb
jae
jns
repnz
fwait
int3
push
xchg
inc
sub
adc
jmp
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
roll
xor
daa
adc
addr16
push
and
scas
mov
xchg
inc
lret
std
lcall
shrb
pop
daa
pusha
mov
push
cs
mov
xchg
pop
lds
pop
push
test
push
adc
sub
out
leave
stc
mov
mov
shrb
shl
sar
jge
add
xchg
jne
add
ljmp
imulb
sbb
ret
add
dec
aas
lret
iret
mov
notl
call
sub
xor
adc
lcall
push
add
and
xchg
clc
cs
cmp
out
cmp
incl
xchg
push
movsb
repz
add
call
incl
sub
ret
dec
and
mov
sbb
or
jle
inc
cli
mov
xchg
jmp
cwtl
mov
add
xor
std
in
mov
mov
fmulp
pop
mov
sub
rcrl
push
jmp
inc
insb
cmp
das
mov
repnz
ret
sub
mov
pop
xor
push
lcall
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
mov
leave
and
add
daa
xchg
mov
cmp
cs
push
mov
lcall
cmp
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
in
inc
dec
sub
mov
sbb
mov
cs
aaa
or
movsl
daa
gs
or
and
in
ljmp
or
adc
outsl
add
fdivl
pop
jge
stc
jmp
and
or
ret
cmpb
dec
jns
call
daa
inc
pop
fbld
leave
push
loop
ds
clc
mov
dec
add
lea
jmp
mov
ds
fldl
fwait
inc
dec
jle
pushl
or
add
call
inc
or
bswap
adc
es
fisttps
cmpl
imul
cli
ffree
inc
or
push
rcrl
adc
and
decl
mov
cmp
subb
pop
cld
mov
icebp
push
ljmp
xlat
pusha
adc
mov
sbb
jmp
pop
add
sub
jge
pop
unpcklps
and
cltd
lock
jae
fs
orl
mov
cmp
adc
adc
movsb
or
add
mov
or
fstl
push
add
inc
inc
mov
mov
call
adc
xor
fsub
repz
in
add
leave
pusha
mov
cmpl
inc
addl
mov
add
sti
adc
lods
add
iret
mov
mull
ja
jo
mov
jb
push
lcall
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
cld
fcomip
js
divl
lock
lret
sbb
cli
into
xchg
fmuls
cs
sets
leave
dec
dec
cld
dec
hlt
dec
es
mov
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fsubr
clc
call
cld
xor
pushl
lock
jecxz
jne
add
pop
testb
ljmp
std
cs
dec
pop
push
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
or
incl
jns
inc
add
add
mov
add
outsb
aam
aad
loop
jg
cmpb
cwtl
shr
inc
add
imul
push
cmp
mov
xchg
addl
jmp
sbb
mov
les
call
add
pop
outsl
xchg
ljmp
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
mov
subb
adc
clc
cmp
sbb
pop
call
dec
das
sahf
sti
add
mov
aas
shlb
pusha
push
sub
test
lods
pop
loop
and
adc
cmp
or
test
pushf
test
cld
inc
das
sarb
mov
iret
mov
int3
fcoml
clc
lods
push
xchg
push
lds
push
rolb
jmp
push
cld
xlat
pop
in
ret
push
insb
out
adc
rorb
outsb
adc
fbld
inc
pop
xor
sub
push
sbb
xor
mov
decl
cli
movsl
inc
mov
iret
bound
adc
add
dec
jmp
cwtl
mov
movsl
roll
cmpsl
fnstenv
add
pop
adcb
add
fdivl
bts
nop
mov
loopne
mov
lret
lods
decl
sub
clc
cmpsb
or
ljmp
outsb
jle
add
divb
pusha
test
mov
es
fsubrs
push
std
adc
xchg
cmp
or
dec
mov
je
loope
push
sar
add
xchg
mov
sbb
push
xor
mov
fwait
les
call
hlt
dec
mov
lock
fdivs
cmp
filds
clc
adc
and
add
add
out
adc
xchg
testb
adc
mov
lcall
push
add
and
add
fildll
rcll
decl
and
nop
hlt
jne
adc
and
adc
pop
lock
dec
pop
cmp
inc
dec
pop
or
test
ds
xchg
pushl
cmp
in
jb
adc
xchg
cmc
sub
jle
insl
cld
jl
ljmp
jle
push
lock
push
hlt
ror
jmp
mov
outsl
mov
movsl
mov
pop
aad
dec
addb
fadds
cmpb
mov
and
ja
dec
adc
xchg
cs
ret
push
dec
push
and
stc
add
jg
int3
add
cld
ljmp
addb
ja
push
jne
push
incl
in
jle
push
sbb
ljmp
xchg
clc
push
jne
pop
decl
in
jns
jle
call
daa
pop
ljmp
add
lods
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
cli
fistps
pop
adc
xor
xchg
mov
mov
add
insb
push
mov
jge
dec
cld
call
sub
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jg
pop
shlb
xchg
pop
mov
outsl
dec
jne
daa
jmp
movsl
mov
jmp
pop
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
les
clc
mov
test
fadds
mov
add
test
jge
js
xchg
aad
pop
add
decl
orl
mov
add
sahf
loope
std
add
clc
push
and
nop
fcompl
sub
insl
cld
mov
int3
pop
add
lret
stos
xchg
les
jp
mov
sub
add
cmp
sbb
jne
pushf
incl
ljmp
loopne
loop
ret
or
pop
mov
adc
outsw
test
add
cmp
cli
je
or
hlt
add
add
test
ret
inc
lods
cltd
dec
jecxz
inc
repnz
gs
mov
or
xor
mov
cmp
incl
push
or
ss
add
fisubs
incl
in
repnz
cmp
cli
jns
sub
mov
fcomip
add
cltd
inc
cmp
xchg
mov
add
lods
jb
or
add
in
cli
sbb
aad
cld
add
repnz
or
ljmp
mov
xchg
popf
ja
xchg
add
cs
dec
call
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
test
pop
es
js
add
mull
jg
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
jg
flds
and
loopne
and
iret
pop
bound
jo
push
push
push
mov
lcall
shl
cmp
dec
inc
test
add
lcall
xor
add
pushl
cld
dec
jmp
neg
testb
inc
mov
cmc
dec
insb
ret
ds
add
inc
outsl
push
mov
jo
jae
adc
mov
shll
loope
cmp
fdivrl
out
xor
popf
jl
pop
xchg
aas
pop
xor
jmp
inc
pop
iret
in
sub
orb
rorb
xorl
stos
in
add
int
pop
ja
add
add
dec
das
shr
je
es
sub
fcmovnb
lret
mov
lcall
mov
add
mov
cmpsl
push
push
push
dec
mov
or
add
jo
pop
clc
in
test
ds
add
or
xchg
decb
adc
out
shrb
push
inc
in
loope
cli
pushl
pop
mov
xor
mov
orl
hlt
cmp
mov
add
push
rol
cmp
xchg
adc
fs
int3
jg
mov
scas
aam
lods
add
push
sbb
adc
sar
pop
pushf
and
or
mov
es
pmaxub
or
neg
in
imul
mov
loopne
dec
aas
jl
mov
shll
aaa
std
call
jns
adc
adcb
mov
fisubrl
and
sbb
andl
jmp
push
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
outsl
clc
or
daa
fsub
loopne
push
dec
inc
sbb
bnd
lcall
push
pop
clc
daa
add
lock
xorl
push
call
add
mov
hlt
rorb
add
sbb
xor
stc
cli
mov
xor
push
arpl
sbb
jg
incl
out
imul
xor
clc
jl
and
je
icebp
mov
daa
cmp
rcrl
mov
jnp
test
jl
inc
mov
inc
clc
cmp
pusha
inc
rol
add
shlb
mov
sbb
inc
fprem
push
pop
sbb
pop
lret
leave
push
aaa
enter
mov
pop
inc
rclb
mov
sahf
dec
cmp
andb
and
fbld
jl
inc
inc
sbb
arpl
stos
jbe
push
call
in
and
add
dec
hlt
mov
add
dec
in
push
and
or
incl
loope
ret
push
jp
sbb
jns
cmp
cmp
pop
cmp
inc
lcall
push
lcall
incb
cld
jg
dec
in
lret
cmpb
pop
in
faddp
push
jmp
fistpll
scas
aaa
shrb
xchg
jmp
in
ds
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
addr16
sar
orb
xor
ficomps
push
push
or
adc
call
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
ljmp
cli
or
iret
cmp
push
cld
ja
add
cltd
sub
jle
decl
adc
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
mov
sub
in
or
aam
mov
and
xchg
dec
mov
mov
pop
push
or
test
push
ds
das
ficompl
pmaddwd
pushl
mov
or
add
jne
and
sub
mov
leave
add
or
filds
cs
sub
inc
mov
pop
mov
pop
ljmp
xor
and
xchg
xor
push
std
or
lcall
ljmp
je
and
enter
mov
adc
lret
test
daa
xor
fildl
mov
cld
dec
pop
pop
pop
dec
fs
push
stos
push
add
ljmp
in
ja
sbb
loope
adc
cwtl
add
add
and
cmp
jmp
add
das
cmpsl
pop
sti
scas
sahf
adcb
jnp
stos
nop
cmp
jmp
pop
cmp
or
pop
pop
adc
addb
pushl
into
add
sbb
mov
add
movsl
and
fsubrs
and
adc
stc
mov
pop
push
sbb
push
xchg
lods
sbb
cmp
add
adc
sub
sbb
add
pop
hlt
xchg
mov
pushf
xlat
and
pusha
iret
data16
mov
inc
ljmp
cwtl
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
add
incl
adc
or
lahf
jb
ficomps
pop
jle
pop
flds
pop
decl
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
fisttps
daa
sub
cmp
adc
sub
mov
add
xchg
inc
sub
loope,pn
sbb
cmpsb
mov
push
lock
andl
andb
pop
xchg
pusha
repnz
add
ljmp
in
mov
les
or
jbe
cmpb
push
into
mov
idiv
jg
inc
mov
or
cmp
cld
push
lahf
mov
and
push
das
mov
mov
xlat
js
xor
xor
or
repnz
inc
movsl
adc
pop
cld
or
outsl
mov
push
and
cs
pusha
ja
cmp
mov
or
sbb
sub
sbb
mov
das
xchg
dec
pop
lods
pop
cli
movsb
add
add
sub
sub
xchg
rcll
call
push
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
out
mov
enter
fwait
xor
or
decl
jecxz
mov
div
mov
cli
call
pushl
cmp
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
decl
and
mov
push
and
out
clc
das
nop
call
mov
rclb
xor
and
decl
add
test
fimuls
inc
int
push
jno
pop
xor
xchg
pop
pop
cwtl
call
loope
sub
push
iret
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
ljmp
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
push
add
dec
add
sbb
pusha
in
test
xchg
cmp
or
decl
lock
mov
push
sub
sub
inc
adc
mov
add
mov
call
inc
mov
jg
mov
lahf
out
and
adc
mov
out
jg
or
pop
pop
pop
jge
push
leave
aad
bound
xor
mov
pop
add
cmc
xchg
in
mov
movsb
nop
test
jmp
int3
adc
jae
pop
dec
fdivrp
mov
enter
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
add
fcoms
lods
aaa
pop
add
lock
mov
shlb
leave
or
cld
ljmp
lods
shll
pop
mov
push
push
and
pop
or
pop
inc
fs
mov
cli
pushl
push
test
dec
xchg
jle
sub
jl
add
fsubrl
das
cli
ja
add
dec
je
nop
push
sbb
js
aaa
loope
das
cli
decl
mov
jae
xchg
push
test
sub
sbb
and
add
sar
lcall
movb
enter
shll
and
dec
add
outsl
addl
mov
jmp
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
cmp
shlb
fcoms
xchg
or
inc
incl
adc
leave
insb
jmp
mov
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
add
outsl
sub
out
and
call
adc
les
fs
xor
mov
cmp
inc
cwtl
mov
aad
cmp
shlb
pop
xor
lcall
popl
add
insb
pop
mov
push
lret
push
cmc
pushl
push
dec
lcall
inc
call
sbb
pop
pop
out
jl
addl
inc
std
dec
ljmp
adc
fs
or
shr
ss
shl
add
pop
cld
call
ds
xor
mov
and
jecxz
inc
imul
test
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
aas
xor
xorb
xor
mov
xlat
dec
add
lcall
jecxz
inc
sub
cwtl
dec
movsb
push
push
or
xor
push
push
insb
pushf
lret
fcomps
jl
inc
es
jg
jle
cmp
add
mov
push
mov
jbe
jp
scas
outsb
dec
cmpb
loopne
lods
jmp
cltd
ror
and
or
push
mov
loopne
or
pop
add
sarb
loopne
xchg
js
xchg
push
and
adc
dec
push
aam
lcall
enter
xor
mov
rcrb
mov
sbb
movsl
push
sub
sti
mov
decl
inc
cmp
pop
add
jmp
cmp
push
lcall
hlt
shlb
mov
adc
jge
lcall
test
scas
add
mov
mov
sbb
sbb
or
stos
pop
push
mov
popf
data16
mov
shll
and
scas
push
ljmp
cmpsb
into
add
lcall
add
mov
ret
add
in
dec
fbld
push
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
or
pop
or
lock
cmpsb
add
stos
push
push
fmul
xchg
dec
int3
out
or
enter
incl
pop
rcrb
or
and
adc
aaa
cld
aaa
enter
mov
pop
pop
push
mov
in
push
sub
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
ficoms
and
inc
sub
pop
shrl
cmc
lret
into
add
scas
loop
mov
dec
xchg
fdivl
adc
add
xchg
xor
dec
pop
mov
rorb
shrb
mov
pop
test
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
jmp
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
cmp
call
hlt
addr16
ds
scas
nop
xchg
push
cmp
sbb
lock
cmp
add
test
ljmp
fucomip
sub
mov
test
cmp
daa
add
sub
dec
adc
pushl
cmpl
or
call
sahf
mov
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
cli
incl
iret
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
popa
push
lock
cmp
dec
or
int
xchg
jbe
jg
pop
adc
les
adc
mov
jno
ja
jae
sbb
pop
icebp
inc
mov
xor
pop
push
ljmp
xor
cmp
pop
cmp
lock
das
mov
mov
xor
push
dec
fsubl
mov
and
ja
mov
add
mov
inc
ljmp
mov
outsb
inc
add
push
push
add
lcall
push
popf
jle
pop
or
sub
push
flds
das
push
insb
sbb
mov
dec
arpl
repz
sbb
add
in
addr16
addb
lods
push
jo
add
push
hlt
imul
pop
loope
adc
push
incl
es
jo
add
sbb
add
xchg
or
sbb
cmp
cmpsb
repnz
arpl
jg
aaa
dec
ss
and
insl
subl
push
sub
decl
loope
mov
add
xorb
jmp
and
mov
jo
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
call
in
pop
push
pop
xor
in
add
lcall
sub
pop
mov
push
add
xor
dec
jmp
mov
jnp
lds
lock
outsb
push
jp
int
decb
or
push
int3
shl
jg
mov
idivb
add
lods
test
clc
jne
ja
jno
or
shlb
mov
aas
add
add
push
lock
cwtl
and
ss
xchg
inc
adc
mov
pushf
and
sarb
stos
int3
sub
pop
cltd
add
cmpl
xchg
adc
mov
je
push
jg
loopne
shll
add
vcmpps
add
std
inc
or
jns
push
daa
inc
fidivs
mov
sti
jae
fadds
xchg
xor
incl
lock
fbstp
aas
fisttpl
nop
mov
sub
jg
xchg
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
fcompl
lcall
sarl
mov
push
rcr
sub
sub
je
jge
adc
pop
mov
cmpb
nop
or
lcall
test
fisubrl
repz
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
call
inc
shrb
shlb
mov
inc
add
add
cmp
les
lea
fcomp
push
add
mov
into
jmp
lock
decl
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
incl
mov
adc
add
cmp
jb
or
add
ljmp
jmp
fucomip
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
clc
ljmp
das
repnz
add
adc
pop
mov
pushl
into
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
push
std
push
mov
push
add
pop
xor
jmp
pushl
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
pop
imul
sbb
decl
sub
ljmp
ficoml
cmp
loopne
add
hlt
jge
or
incl
pop
cmp
pusha
adc
enter
out
pop
scas
push
inc
xchg
lret
dec
sbb
sbb
andb
lds
add
mov
outsb
jbe
popa
add
mov
movb
mov
inc
cmp
xor
lea
repz
sub
xchg
ret
push
push
add
andl
jns
xor
inc
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
icebp
pop
add
sub
cmp
jns
subb
cmp
dec
lods
xchg
or
pop
add
jmp
jge
add
add
sub
rorb
lcall
outsl
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
cli
mov
inc
adc
pop
cmp
add
add
xor
mov
iret
xchg
push
clc
pushl
fmuls
or
cmpsl
add
cmp
xorb
mov
lods
and
push
jns
xchg
ret
out
xor
mov
lcall
ja
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
insb
loopne
rolb
or
mov
cmp
loop
mov
int
fsubrl
subl
aaa
mov
jg
or
jns
push
les
mov
lgs
in
add
pop
mov
xor
outsl
cli
loop
pop
adc
lcall
sub
cld
shl
pop
xor
adc
mov
divb
jne
fincstp
adc
popf
or
add
or
shll
sbb
test
dec
sbb
lahf
sbb
sbb
pushl
adc
mov
sahf
loope
movsl
mov
in
cltd
xor
das
xor
or
inc
or
pushf
sub
push
mul
sbb
xor
push
ja
in
or
cltd
mov
xchg
rcrb
movsb
and
mov
fiaddl
decl
add
mov
ljmp
sbb
mov
jg
rol
sbb
dec
pop
sub
arpl
sbb
pop
sar
mov
mov
cmpsb
cmp
enter
stc
loopne
add
lcall
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
incl
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
adc
mov
inc
and
gs
xchg
clc
movsb
iret
lea
push
push
xchg
stos
lcall
ljmp
fistl
mov
scas
movsb
icebp
adc
test
mov
mov
jge
cmp
add
aas
in
jo
add
push
jo
mov
test
jg
xor
jg
sub
rolb
andl
lahf
test
stos
push
rorl
mov
cld
or
imul
pop
add
jp
add
and
adc
add
ss
add
pusha
clc
dec
pop
or
sub
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
fldl
out
cmp
and
js
lcall
inc
cs
adc
cmpsl
pop
add
icebp
or
cmp
or
call
cmp
nop
pop
mov
js
loop
sahf
pusha
cmpsb
sub
mov
jmp
mov
cs
pop
aam
out
mov
test
mov
dec
add
mov
ss
jo
lds
cmp
js
in
int
pushl
shlb
scas
mov
pop
out
push
lods
scas
push
jg
mov
std
push
shll
in
sbb
pop
call
cld
and
jbe
in
lret
push
mov
std
decl
jecxz
xchg
add
in
out
sbb
scas
inc
in
arpl
scas
mov
movsl
pop
adc
mov
movsb
xchg
loopne
ljmp
wbinvd
mov
cwtl
inc
iret
jmp
je
icebp
jle
cwtl
dec
mov
sahf
shr
das
dec
outsl
mov
lds
addr16
and
cs
adc
in
sbb
mov
xchg
hlt
jne
sub
pushf
push
cmp
jge
add
push
ret
popf
add
pop
sbb
add
mov
adc
push
mov
sbb
dec
out
nop
int3
xchg
add
stos
push
push
dec
es
ljmp
mov
ret
out
add
hlt
in
xor
incl
mov
insb
scas
popf
or
mov
sbb
dec
out
xchg
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
mov
jmp
and
xchg
sub
mov
add
push
hlt
jg
test
jo
xor
int3
out
jo
jl
mov
imul
nop
das
ret
ds
add
sti
pop
sub
jg
push
pop
jmp
addr16
fs
das
xchg
mov
xor
push
pushf
add
mov
in
jne
lock
push
xchg
pop
xor
jb
andb
arpl
push
inc
decl
pop
adc
not
push
insl
add
std
add
subl
cld
xor
adc
cmp
shll
dec
mov
inc
lods
dec
mov
pop
ret
cmp
add
sar
jmp
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
decl
mov
pop
cs
divl
arpl
jmp
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
decl
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
ljmp
loopne
xchg
cmpsl
pop
cmp
xchg
psubq
xor
cmpb
incl
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
lcall
in
dec
les
pop
jae
in
dec
test
mov
hlt
scas
push
pusha
cld
inc
pop
repnz
lock
decb
jb,pt
mov
or
dec
shll
fisttps
add
loope
clc
pop
int3
sbb
sub
into
fstl
lcall
jbe
mov
pop
mov
adc
ds
add
mov
lds
cld
pushl
fcmovnb
andb
gs
inc
es
cmp
das
push
sbb
adc
notb
push
daa
lock
imul
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
jl
movsl
sbb
mov
hlt
js
pop
stos
push
das
mov
inc
and
push
cmpsb
call
push
push
in
jne
push
cld
fists
call
mov
shr
cmpsl
cmc
fistpl
clc
jge
xchg
dec
fistpl
mov
lods
or
inc
pop
push
fdivl
fs
adc
repz
pop
das
dec
decl
mov
pop
mov
fsts
add
mov
dec
pusha
add
push
into
ret
inc
lods
in
call
sarb
push
xchg
or
mov
jmp
cmp
arpl
sbb
cmp
mov
sub
je
mov
jne
cmp
xlat
add
jmp
repnz
or
add
lret
dec
out
add
stos
fscale
jg
addl
pop
adc
cltd
je
dec
xor
add
pushl
push
aad
loope
cmp
push
ds
ja
shrb
push
sub
lock
decl
movsb
testb
xchg
dec
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
xchg
and
xchg
mov
xor
add
out
sbb
lea
ljmp
clc
cwtl
xor
lret
add
jnp
or
repz
movsb
cli
aaa
push
cli
jmp
dec
sbb
test
push
or
inc
cli
incl
and
adc
sar
std
pop
sbb
add
adc
add
ds
lcall
sbb
es
call
mov
dec
add
sti
add
pusha
push
jbe
clc
jg
or
leave
dec
ret
xchg
inc
xor
mov
dec
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
out
test
lods
push
dec
pop
xor
jmp
pushf
mov
adc
adc
pop
xchg
adc
push
cld
decl
or
push
jne
adc
jb
adc
lahf
call
cmp
movsb
xor
lcall
and
ret
xor
movb
add
pop
sub
add
lcall
cli
daa
xor
in
add
lock
dec
call
add
push
add
jg
mov
ror
pop
bound
cli
xchg
jo
sbb
sar
add
les
int3
and
inc
or
add
incl
or
in
xor
filds
and
add
cmpsb
or
inc
aam
test
push
std
jg
sub
int3
gs
and
jb
jle
mov
push
add
out
hlt
rorl
or
jmp
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
outsl
cli
pop
fs
cmp
clc
xchg
inc
mov
jmp
xchg
sub
cld
aaa
adc
or
cmp
mov
outsl
push
dec
add
cltd
add
add
jg
incl
int3
faddl
mov
xor
add
dec
cmp
rolb
lock
lock
pop
data16
testl
pop
aaa
std
mov
push
je
insl
jbe
add
jne
outsb
test
dec
test
cmc
das
add
jno
dec
xor
adc
push
loop
cwtl
xchg
in
fildl
mov
dec
testb
jmp
int
push
sti
jg
xor
push
mov
cmp
sub
xchg
cmp
mov
jg
ja
dec
add
add
call
pop
enter
push
add
lea
cld
decl
inc
stos
jmp
mov
add
adc
pop
add
pop
lods
shrl
fsubr
int3
scas
adc
mov
add
daa
mov
js
sbb
push
mov
pop
mov
cmp
lcall
xchg
add
stc
adc
clc
cmp
push
dec
xchg
dec
loope
add
jmp
js
dec
sub
mov
pushf
sub
lock
cld
dec
test
cmp
cltd
push
in
mov
mov
sub
jl
ds
pop
cld
pop
repz
jmp
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
jg
jg
ljmp
adc
cmp
mov
adc
icebp
and
hlt
jmp
fcoms
adc
sub
push
push
jmp
adc
ficoms
mov
int
xchg
cmp
cmpl
sbb
frstor
movhps
jb
adc
xor
mov
dec
sbb
pop
push
je
inc
ljmp
add
or
mov
loope
mov
jnp
aam
add
push
jl
icebp
fisttps
lcall
push
out
add
or
fdivrs
aad
and
jo
incl
call
inc
fmuls
lahf
cmp
sti
into
daa
outsl
xchg
icebp
ljmp
push
push
mov
inc
or
ret
add
mov
sub
out
sahf
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
ljmp
dec
sbb
inc
ja
js
loopne
mov
fisubrs
shlb
xor
adcl
mov
or
mov
lock
loop
mov
or
jmp
add
repz
sbb
out
mov
mov
sub
popa
sbb
xchg
ljmp
sbb
sbb
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
pop
ljmp
add
lret
cmp
inc
in
aam
mov
and
xorl
fldl
push
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
pop
nop
clc
shl
shr
addb
pop
adc
loopne
pop
lcall
adc
pop
mov
shrb
add
pop
in
iret
daa
xorl
cmp
add
inc
mov
test
or
pop
mov
cli
jecxz
push
mov
adc
aam
pusha
popa
in
inc
cmp
loope
pushl
movsb
sub
dec
loopne
add
rclb
shlb
es
adc
popf
bnd
aaa
std
in
aaa
or
push
cli
add
lods
jge
sub
push
jg
shl
xor
inc
shr
ret
xor
push
add
adc
repz
popf
cmpsl
inc
clc
sbb
mov
xor
sbb
and
andb
dec
mov
sbb
negl
pop
xor
inc
clc
sbb
and
lret
jo
push
test
mov
incl
xchg
out
pop
ss
arpl
pop
pop
adc
fsub
push
outsb
cmp
ret
fbld
pop
cmpsl
push
jecxz
js
push
pop
push
and
rep
ljmp
shlb
adc
orb
outsb
sub
mov
or
add
loopne
add
push
orb
in
pusha
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
jecxz
pushl
fsubrs
mov
sub
xor
mov
call
fwait
mov
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ret
cmp
cmp
out
sub
insb
xor
mov
sub
or
dec
add
inc
add
inc
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
push
push
iret
pop
or
cld
xor
ljmp
mov
adc
daa
popf
push
push
push
cmc
aas
or
add
loop
jne
enter
popf
int3
jl
in
add
aaa
sbb
hlt
ds
je
scas
xor
sbb
cmp
lahf
pop
test
sub
jnp
or
stos
outsb
xchg
decb
lods
push
cld
ljmp
incl
mov
jge
jno
cld
int3
dec
sub
mov
popf
leave
addr16
in
int
mov
mov
xchg
dec
add
pop
dec
add
and
ret
ljmp
out
add
movsl
lock
test
leave
lret
add
push
lea
ljmp
ja
lods
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
cmp
fistpll
cli
jle
gs
loop
test
js
cmovnp
mov
outsl
movsb
lods
and
jno
bound
jg
mov
es
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lcall
sub
add
add
mov
ds
cld
fdivl
xor
stos
add
fadds
stc
sbb
mov
movsb
xor
cmpsb
pushf
add
lret
and
pop
sbb
ja
aaa
mov
lcall
jmp
bound
mov
cltd
clc
loope
sub
dec
adc
mov
add
test
mov
movsb
xchg
out
cmp
or
testb
or
dec
adc
and
or
push
repnz
stos
and
je
jo,pt
movsl
fcomip
mov
leave
mov
int
adc
subb
xchg
jp
fildl
mov
push
fsubrs
pop
decl
jp
or
pushl
ret
int3
jle
mov
aam
shlb
add
xchg
sub
pop
add
fiadds
cld
dec
aas
add
popf
mov
jg
xor
pop
cld
push
or
mov
pushf
jns
mov
cmpsb
and
bnd
ss
adc
add
mov
adc
push
adc
clc
sbb
subl
jg
jle
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
hlt
pop
or
addl
call
cmp
dec
pop
and
xchg
leave
pop
test
xor
sbb
incl
dec
ret
dec
clc
mov
and
jg
es
push
aam
or
das
add
call
or
or
adc
sbb
pushl
cmp
aas
pusha
jo
andb
lcall
into
pop
add
loopne
sbb
xorb
je
loop
decl
jbe
js
jp
jl
jle
jle
sbb
push
adc
jl
mov
push
mov
pop
test
dec
add
xor
clc
mov
add
mov
adc
or
mov
pop
cmp
out
push
or
incb
mov
jmp
jge
cmp
jae
pop
stos
jb
add
daa
inc
adc
into
xor
adc
std
add
iret
and
lock
lcall
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
dec
ljmp
xor
mov
sbb
fcmovnu
icebp
orl
mov
inc
out
sbb
jbe
mov
insb
leave
mov
mov
je
hlt
inc
inc
jle
mov
or
jb
mov
xor
testl
mov
or
xchg
jne
add
decb
xor
or
sbb
sub
shl
add
subl
call
js
xor
orb
pop
pop
ret
cmp
out
rolb
and
fdivr
cs
dec
mov
out
outsl
xor
movsl
ret
sbb
into
and
ja
cld
mov
inc
mov
lret
nop
cmp
jg
mov
jmp
lret
sub
adc
lock
test
rep
jp
leave
inc
mov
lods
sbb
jg
jno
or
cwtl
add
jge
aas
push
std
popf
inc
in
dec
sub
lcall
xor
cwtl
pop
mov
xchg
adc
xorb
mov
adc
js
sub
decl
decb
mov
mov
test
and
add
int3
loopne
and
lcall
add
enter
lods
mov
mov
jo
cmpsb
icebp
decl
pop
js
jge
xor
mov
adc
icebp
aaa
popl
adc
sbb
pusha
xchg
test
cs
add
inc
fs
pop
stc
add
adc
decl
dec
clc
lret
icebp
sbb
sbb
add
inc
fs
call
cmp
pop
andb
add
cmp
inc
sub
jae
addb
rcr
xchg
push
decl
aas
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmpsb
mov
cmp
punpcklbw
jns
lods
add
jg
cli
mov
mov
sbb
jg
add
lcall
mov
sbbl
rorb
lcall
loop
decb
pop
mov
sub
ret
shl
call
jb
xchg
mov
push
push
cmc
decl
rorl
in
call
pusha
push
ljmp
push
or
and
inc
cld
or
push
add
jmp
sbb
rcll
dec
fldl
in
outsb
mov
ds
andb
xchg
lds
lret
cwtl
push
inc
inc
add
outsb
out
and
pop
push
incl
bound
xchg
pop
dec
cli
add
rcl
pop
aaa
sbb
push
cwtl
sub
ljmp
lret
call
repz
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
mov
shrl
in
mov
repz
push
xchg
or
cltd
fcompl
add
inc
aad
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
fdivl
jmp
mov
add
sub
pop
mov
dec
cmp
aaa
std
outsb
cmc
cmpb
dec
xor
dec
mov
mov
mov
mov
gs
add
add
cld
push
sub
pop
push
xor
ja
std
call
and
inc
dec
pop
lret
inc
inc
jl
jb
hlt
adc
clc
sub
push
stos
call
out
mov
jmp
push
and
push
cmovs
aam
mov
mov
andl
stos
jmp
or
pop
sub
pop
sbb
aas
test
gs
lret
loopne
je
mov
add
testl
pop
pop
fcoml
add
incl
in
int3
add
push
mov
in
mov
add
jmp
push
add
sar
xchg
push
jae
xor
fst
push
inc
push
cmpsl
stos
push
sbb
mov
add
inc
dec
ljmp
incl
lods
stc
mov
inc
or
shr
xchg
mov
inc
cld
jne
clc
call
aam
or
dec
adc
push
enter
lret
and
lock
addr16
push
push
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
mov
jo
rcr
ljmp
shld
fisubl
jp
push
sti
or
xlat
test
lret
pushf
jge
mov
test
pushf
scas
inc
push
nop
addl
lock
cli
add
ljmp
out
jno
push
pusha
push
outsl
std
add
add
lds
and
or
inc
das
sbb
daa
xchg
xor
cmc
incl
jecxz
scas
push
mov
jae
iret
jns
xchg
inc
loopne
add
sar
lcall
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fdivrp
jg
ljmp
mov
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sti
add
sbb
add
push
in
mov
jmp
lods
xchg
dec
add
mov
cmpsb
inc
jo
push
divb
fisttpll
rolb
adc
lea
cmc
push
fildll
ret
xchg
mov
rorl
ljmp
adc
dec
and
jnp
xchg
test
mov
push
loopne
into
cld
imul
out
cs
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
decl
inc
pop
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
adc
push
pop
dec
enter
mov
cmp
test
fs
xchg
notb
xchg
aam
int
push
inc
mov
ljmp
pop
mov
jg
dec
fldl
rcrl
sar
push
mov
add
pusha
pushf
pop
or
pop
or
sbb
jmp
in
fs
push
leave
sbb
add
cwtl
adc
or
mov
pushl
aaa
dec
rorl
movl
lods
decl
jne
add
inc
test
insb
testl
adc
pop
or
sbb
cmp
mov
sbbl
push
es
aaa
insb
cli
call
adc
test
add
pushf
adc
pop
adcl
decl
cmp
movsb
push
or
rol
aam
fcomps
in
or
sbb
inc
pop
cwtl
arpl
cmp
push
cltd
add
and
mov
loope
sbb
sbb
sbb
push
inc
popa
and
fdivs
andl
aas
call
dec
push
sbb
jl
mov
pushl
sbb
insb
bound
cld
test
cmp
jmp
cli
call
and
push
sbbl
loop
jg
inc
ss
mov
outsb
mov
adc
int3
push
and
test
mov
push
adc
or
pop
stc
ret
lds
leave
shr
aas
add
and
decl
inc
lret
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
scas
js
mov
and
enter
sub
fcomps
add
out
mov
cmp
or
add
jae
cld
cmp
test
mov
fs
cmp
xor
out
mov
jmp
dec
mov
mov
shlb
jo
dec
adc
and
pop
clc
jg
mov
add
add
jne
adcb
or
pop
pop
sbb
dec
add
mov
std
inc
sbb
inc
add
fists
xor
or
xor
lock
scas
loopne
mov
adc
loop
ss
jmp
mov
pop
dec
sbb
adc
or
fistps
adc
and
dec
test
add
outsl
pop
and
xlat
les
call
outsb
mov
pushf
inc
sub
add
xor
add
pushl
push
rorb
inc
adc
mov
cmp
adc
add
mov
insb
cld
and
xor
dec
rcrb
je
lcall
dec
call
outsl
pop
out
addl
loopne
xor
add
aaa
ret
mov
sbb
add
cmpb
les
dec
xor
inc
push
mov
sar
decl
mov
or
test
xor
stos
adc
sbb
jo
ljmp
mov
or
jno
dec
sbb
add
cld
add
jo
xor
adc
subl
mov
pop
es
sub
xor
call
loopne
int3
dec
outsb
xchg
fsubl
in
in
hlt
adc
mov
rclb
inc
xor
mov
dec
sti
push
jmp
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
mov
mov
sti
fdivr
in
scas
cli
push
dec
add
decl
add
jb
cmp
push
push
fcoms
decl
jno
punpckhdq
xchg
mov
movsb
inc
xchg
outsl
add
adc
mov
aam
enter
orb
xor
sbb
mov
inc
dec
pop
or
decl
push
dec
dec
dec
push
add
push
push
add
and
sub
push
lcall
adc
je
bound
sbb
call
cld
or
imul
fidivl
jae
ja
js
jbe
and
imul
adc
push
divb
inc
dec
das
mov
inc
aaa
jno
fwait
jle
push
shlb
pop
ret
icebp
adc
pop
jo
dec
adc
aas
xchg
aad
sbb
cwtl
loopne
add
fadds
ljmp
mov
jge
push
je
pop
loopne
inc
aaa
pop
rolb
adc
incl
jae
jno
ja
add
mov
cmp
int3
scas
sar
decl
dec
outsl
push
sub
sub
dec
fsubrl
stc
jbe
push
jg
sbbb
insl
pushf
test
daa
add
outsl
inc
and
or
add
adc
lret
sub
das
clc
test
or
cs
pop
insl
sub
adc
ljmp
push
add
pop
fmulp
ret
mov
mov
jmp
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
call
push
push
sarl
dec
ja
sub
mov
loopne
jg
mov
sbb
cmp
pop
fmuls
sbb
in
rep
cs
mov
push
arpl
enter
mov
xchg
cli
nop
jmp
push
nop
mov
jno
jge
mov
xor
sub
mov
cmp
call
push
push
cli
incl
sbb
int3
and
or
xchg
and
pushl
adc
and
or
lcall
das
icebp
fisubrs
adc
add
jmp
sub
mov
cwtl
test
or
pop
lahf
fmull
test
fdivr
incl
enter
jne
pop
or
dec
roll
loopne
or
add
add
or
and
mov
jp
or
push
lods
sbb
sbb
xor
cmp
jmp
jo
loopne
pop
popf
add
js
or
inc
add
addb
rclb
mov
ljmp
in
mov
and
stos
pop
aad
pop
push
sahf
push
inc
data16
in
jl
repnz
adc
jmp
dec
push
xchg
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
add
xor
in
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
decl
add
pop
inc
test
call
jbe
add
dec
sbb
and
in
decl
std
movsb
jl
sbb
push
fadds
mov
sarb
add
add
mov
or
or
inc
mov
add
sarl
or
mov
ret
ret
sbbl
out
add
out
mov
cmp
enter
int3
ss
mov
rcrb
or
loope
nop
cmp
xor
lcall
and
adc
fidivrl
and
fiadds
incl
int3
loope
rcl
nop
ucomiss
test
loop
rolb
mov
and
sar
incl
dec
mov
mov
call
aaa
push
pop
shlb
cmp
jg
int3
mov
sub
xorb
xchg
xor
lcall
loopne
push
lods
add
add
lock
push
xchg
bnd
or
adc
sbb
or
jg
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jg
jl
sub
mov
mov
adc
lods
pushf
ds
xor
sbb
jl
adc
loope
sar
and
or
pop
xor
or
mov
cmp
lea
xacquire
and
leave
adc
imul
pushl
cwtl
add
or
insb
dec
inc
push
xchg
fs
orb
or
ljmp
jmp
test
add
xchg
push
cwtl
cs
xchg
pop
sub
inc
mov
pushl
xor
fsubrs
hlt
stc
cmp
loopne
mov
add
imul
jbe
rclb
xchg
cld
inc
xor
xorl
mov
dec
popl
fsubs
add
or
imul
pushl
xor
push
call
ds
push
mov
mov
fidivl
incl
add
dec
mov
repnz
pushf
cltd
aam
fsubl
aaa
xor
stos
mov
out
popa
subl
and
fucomi
sbb
push
mov
decl
insb
loopne
add
sbb
push
or
xchg
lock
and
adc
out
clc
pushl
icebp
aam
dec
adc
in
sbb
adc
leave
add
jl
cs
and
xor
mov
and
and
decl
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
lcall
pusha
xchg
js
nop
add
mov
adc
cmp
add
mov
mov
jmp
push
mov
aam
cwtl
mov
movb
mov
and
jg
lcall
jns
cwtl
out
lods
mov
mov
mov
sub
sbb
cld
adc
and
out
mov
stos
jl
add
jmp
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
lock
ljmp
mull
neg
lock
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
jg
pusha
mov
lcall
lock
jbe
gs
sub
cltd
push
adc
pushl
dec
adcb
into
std
loop
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
jge
test
lods
fistpll
int3
add
jno
call
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
sar
adc
adc
and
decl
inc
out
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
call
lret
in
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
jmp
clc
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
loope
xor
xor
xor
push
outsb
pop
insb
add
aam
add
je
mov
adc
sbb
push
push
lods
push
mov
mov
scas
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
incl
call
sbb
mov
mov
fbld
xor
hlt
jne
clc
fcomip
mov
in
and
push
inc
xchg
outsl
call
aad
sbb
sbb
bound
or
in
adc
jg
lcall
sbb
mov
push
outsb
rclb
sbb
xor
or
lcall
ljmp
pop
and
je
fisubrl
loope
or
jo,pt
or
xchg
cli
push
push
je
imul
inc
and
sub
sbb
and
push
xchg
mov
mov
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
cmpl
aas
sbb
add
dec
adc
cld
lcall
inc
imul
insl
push
push
pop
push
dec
and
jb
in
jecxz
aaa
int3
shrl
add
xor
pushf
push
test
or
shlb
pushf
inc
xor
dec
jg
cmpsb
sub
rcrl
mov
jg
mov
mov
jo
sbb
or
jmp
sbb
outsl
xchg
inc
adc
rclb
jo
mov
call
inc
add
cli
dec
pop
push
sbb
stos
add
push
mov
dec
loop
lcall
sub
cwtl
mov
mov
imul
jo
ljmp
cmp
xchg
aam
ror
jne
jb
lret
jmp
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
jg
inc
add
add
lahf
dec
jge
xchg
nop
jnp
sub
jg
or
adc
into
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
dec
in
jp
add
inc
mov
in
or
les
lcall
jne
ja
push
sub
nop
add
dec
adc
ljmp
adc
subb
push
pushf
daa
cmp
loop
push
lcall
lcall
lcall
ficoml
rorb
mov
sub
addl
hlt
scas
jmp
fisubrs
mov
push
insl
dec
push
xchg
sbb
clc
lcall
outsl
popaw
ret
test
sub
push
in
jmp
das
adcb
push
inc
fsubrl
lock
test
pop
int3
cmp
lcall
sub
lahf
xor
push
pop
push
aam
ja
movntq
dec
les
orb
lods
add
inc
jne
xchg
scas
lods
add
dec
jae
jg
test
add
repnz
dec
std
sbbl
mov
push
jp
stos
sbb
cs
push
loopne
sbb
mov
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
jg
sbb
ljmp
xchg
out
jmp
cld
call
jo
push
lcall
cmp
xchg
cmpb
pop
push
inc
fwait
add
lcall
movl
decl
out
andl
hlt
or
test
jmp
std
inc
es
inc
das
mov
negl
mov
jne
jl
pop
add
subb
pop
cmp
push
or
and
sarb
ljmp
xchg
ljmp
loop
outsb
lods
mov
inc
xchg
and
movsb
sarb
cld
sub
divb
and
dec
pop
outsb
cld
mov
subb
fidivrs
adc
push
or
or
xchg
and
dec
les
mov
pop
fstl
xor
inc
push
mov
mov
lods
inc
loopne
push
std
incl
sbb
addr16
sub
xchg
stos
mov
dec
inc
cmp
and
and
add
inc
mov
add
dec
push
cli
push
sub
mov
inc
into
out
push
sub
add
incl
addr16
push
mov
push
outsb
imul
call
dec
jle
jno
lods
adc
mov
fsts
lahf
push
lea
dec
je
push
add
dec
lods
dec
xchg
icebp
insl
sub
into
pop
xchg
fwait
jbe
fcomip
out
add
jne
sti
pop
or
test
int
pop
jo
inc
xor
imul
cmpsl
in
cmp
add
adc
jmp
fwait
sub
sub
aas
dec
and
enter
adc
and
loopne
loope
fildll
jmp
adc
xchg
push
jp
cmp
sbb
xor
clc
stos
or
mov
push
cmovl
cmp
sub
or
je
push
clc
xor
add
lcall
loopne
sbb
lcall
jns
mov
add
jmp
dec
cli
mov
mov
and
push
xchg
je
mov
mov
xor
inc
and
les
cmp
dec
xorb
imul
out
adc
insb
mov
ficomps
inc
inc
ror
inc
sub
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
cs
in
int
call
pop
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
outsl
jmp
jne
fildll
ljmp
add
stos
pusha
push
add
dec
push
adc
push
pop
inc
cmp
stos
fs
mov
jb
je
jbe
call
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jg
fidivrl
jle
jle
js
add
or
adc
push
sbb
and
fdiv
cmp
jb
je
daa
fcomps
js
jp
jl
jle
out
jle
add
clc
push
xor
adc
hlt
je
add
es
push
jle
cmp
add
sbb
xor
popf
aad
sbb
call
add
pop
leave
imul
aaa
sbb
cmp
lret
scas
cli
aaa
cld
push
fstpl
sti
xchg
cmp
daa
add
dec
adcb
clc
push
pop
stos
fs
cmpb
jl
jle
jle
jle
jle
jle
pop
hlt
ljmp
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
decl
mov
sbb
sbb
cmp
mov
aas
sahf
dec
push
push
lahf
pop
mov
jbe
js
pusha
fwait
mov
xchg
xchg
stos
popa
push
jg
outsl
ss
sub
xor
jmp
ret
in
mov
sbb
cwtl
push
rorb
aam
jg
nop/reserved
out
add
jl
jle
xchg
mov
dec
rcll
pop
xor
and
out
sbb
xor
scas
cli
fucomip
mov
pop
pcmpgtb
add
xchg
adc
inc
adc
add
or
sbb
mov
push
fwait
cli
mov
or
adc
cmp
xchg
jg
cmc
jmp
fwait
in
call
mov
mov
xchg
leave
mov
decl
fld
loopne
xor
push
push
mov
cmp
mov
call
add
push
fwait
aaa
mov
and
inc
sub
loope
inc
jns
add
repz
in
pop
and
ds
ljmp
xor
rol
push
ds
in
mov
nop
stos
cmpsl
fcompl
mov
shrb
adc
or
add
add
bsr
xor
decl
adc
xchg
pop
add
js
jp
jl
pop
cmp
and
popf
sub
jp
inc
jl
fiaddl
mov
mov
sub
cmp
ljmp
cli
daa
pop
inc
ja
and
xchg
out
cltd
inc
lds
sahf
iret
lahf
cld
lcall
jmp
pop
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
jg
pop
and
push
sysexit
add
dec
pushl
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
pop
sub
incl
dec
rcrb
cmp
aas
cltd
out
inc
cmp
cmp
sbb
add
mov
or
cmp
outsb
xor
adc
cs
test
iret
xchg
jg
incl
call
adc
scas
pushf
ror
fld
jecxz
cmc
in
lock
jmp
cwtl
push
cmova
xor
cmp
dec
in
call
call
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
add
xchg
in
call
add
hlt
push
jno
jge
xchg
shll
pop
jle
das
mov
jb
je
sub
pop
fdivs
jbe
jmp
call
in
mov
xchg
pop
mov
lock
add
or
mov
mov
sub
js
jp
jl
jle
add
ljmp
pop
dec
mov
aas
idivb
jp
jl
ret
add
or
adc
cmp
add
stos
and
imul
iret
ljmp
sar
andl
into
add
or
xor
fcomip
jg
xchg
dec
out
in
pop
lret
push
lods
or
lock
cmp
push
dec
lcall
lcall
push
jmp
and
ljmp
movsb
rep
leave
mov
mov
dec
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
add
pop
pop
lcall
jl
test
sbb
sub
clc
ljmp
mov
push
in
push
hlt
and
and
sbb
lock
xor
lock
out
int3
cmp
inc
orl
fsubrs
popa
push
add
sbb
test
je
jbe
js
jp
jl
jle
jle
jle
loopne
jmp
cmp
or
mov
pop
cmp
cmp
ds
fwait
sub
lock
pop
nop
push
jle
cwtl
mov
lcall
gs
mov
in
iret
lock
call
test
pushf
ss
sbb
cmove
sar
decl
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
mov
test
pop
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
pushl
decl
or
adc
and
inc
xchg
xor
xor
fs
out
out
das
ss
test
movsb
out
out
in
xchg
mov
repz
repz
pop
dec
lock
cld
pop
je
ss
adc
add
and
outsl
clc
call
shll
fs
repz
js
jl
mov
repz
mov
repz
and
rclb
cmp
leave
adc
call
sbb
sbb
and
and
sbb
stc
sub
xor
push
lahf
je
clc
mov
jl
andb
mov
les
jle
jg
push
push
loopne
lock
fsubs
jg
jg
ds
add
inc
xorb
push
adc
jo
je
js
jl
decl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
pop
std
incl
mov
mov
xchg
push
mov
jecxz
repz
repz
lods
cmpsb
test
pop
mov
js
dec
jmp
fsubr
dec
and
loope
imul
add
mov
and
testl
pop
in
call
dec
lcall
aas
enter
lock
cmp
cld
mov
out
or
or
adc
incl
sub
aas
dec
and
xorb
pop
xchg
insb
or
pushf
xchg
test
outsb
in
rol
fcomip
sub
fcompl
idivl
or
sahf
adc
sbb
mov
cmp
pop
hlt
pusha
lcall
xchg
js
daa
xchg
xchg
mov
sbb
pushl
leave
gs
int
popa
iret
push
and
incl
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
in
mov
xchg
push
lcall
lcall
repnz
call
and
lock
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
lret
insl
popf
xchg
mov
xor
fcomip
pushl
je
jbe
add
push
lcall
leave
enter
push
jg
insl
pop
mov
hlt
jno
pop
jne
jns
push
andl
test
mov
xchg
iret
xchg
iret
cltd
iret
popf
rolb
pop
rolb
or
adc
add
dec
add
cmp
add
loope
call
add
pop
cs
ret
and
add
push
xchg
dec
mov
inc
nop
xor
or
push
add
cs
sub
add
lret
jp
jg
js
loopne
jl
add
and
rol
fidivl
test
outsl
movsl
rclb
push
sbb
pushl
jnp
lea
mov
or
je
jbe
lock
add
aaa
mov
dec
mov
fwait
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
inc
ret
mov
xchg
ret
adc
into
add
cmpsl
pop
push
inc
mov
push
mov
daa
jbe
js
dec
push
or
hlt
aaa
adc
shr
mov
push
ds
leave
lret
mov
fyl2x
loopne
aas
jb
pop
push
cld
mov
add
mov
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
sbbb
cs
jg
fucomip
xor
icebp
sub
loopne
dec
mov
gs
ja
mov
out
clc
lcall
cmp
inc
and
jb
pop
mov
pop
fidivl
jmp
ljmp
add
decb
add
or
mov
iret
sbb
and
dec
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
incl
shll
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
cld
ljmp
nop
mov
pop
in
pop
cmp
filds
push
or
adc
aas
iret
push
cvtdq2ps
jbe
jg
sub
ficomps
adc
pushl
xchg
nop
fwait
test
popa
xchg
out
or
add
dec
sbb
cmp
outsl
addb
mov
inc
cmp
dec
cmp
call
daa
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cmpsb
repnz
pop
add
xchg
or
add
cmp
sbb
sbb
lcall
dec
aam
sub
mov
xor
pop
mov
jmp
pusha
inc
fs
push
add
xchg
cwtl
or
int
ljmp
xorl
sahf
sbb
cs
je
pusha
push
xor
jmp
pushl
inc
xchg
dec
orb
push
mov
jo
mov
aas
movsb
mov
bswap
sbb
iret
rcrb
fcomip
fcompl
xchg
jl
add
jle
push
sbb
sbb
lret
pushl
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lock
insb
lds
pop
cmp
lcall
das
out
lcall
aaa
push
cmp
cmp
je
popa
add
ja
out
das
cmp
inc
push
pop
fldenv
outsl
jmp
cltd
sahf
lcall
scas
sub
int
fcoms
stos
or
adc
decl
rcr
leave
outsl
sarl
and
aad
ret
into
movsl
repz
in
call
sti
or
or
sbbb
sahf
add
outsl
aas
jnp
call
adc
lcall
ret
xor
dec
add
mov
decl
push
xor
sbb
xor
lret
pop
icebp
or
xor
sarl
leave
xor
fistl
cmp
pop
cmp
add
mov
adc
sahf
mov
cmc
xchg
add
mov
mov
inc
nop
loope
cmp
cwtl
jl
mov
movsb
xchg
mov
ret
inc
lcall
add
mov
mov
add
inc
xor
or
in
cmp
push
lock
mov
movsb
mov
loope
fildll
clc
aaa
cld
cmp
push
in
mov
xchg
hlt
add
clc
idiv
dec
sar
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
mov
into
pusha
loope
jmp
add
push
das
cmp
mov
scas
iret
lret
popa
sbb
and
xchg
lock
sbb
inc
lcall
pop
mov
inc
stc
xchg
jno
icebp
mov
xchg
cwtl
stos
jb
dec
add
inc
loopne
jg
lcall
mov
sbb
lock
out
cmc
leave
push
pop
mov
xchg
add
arpl
addr16
addl
adc
sub
push
cmp
arpl
cmp
mov
pusha
imul
mov
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
mov
lret
mov
loopne
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
push
push
dec
stc
inc
inc
dec
js
aas
cld
push
test
mov
popl
jle
cwtl
incl
gs
inc
add
in
shll
stc
mov
je
jbe
das
or
push
adc
sbb
mov
inc
lret
std
int
icebp
adc
enter
xor
dec
rcr
aaa
add
aaa
loopne
xor
push
int3
repnz
pop
xchg
push
cli
jmp
imul
stc
fbld
incb
jb
dec
mov
popa
xorb
jmp
scas
lcall
cwtl
add
cli
loope
xor
cmp
out
xor
push
aaa
arpl
js
jp
jl
dec
add
stos
xor
jb
into
add
shr
repz
mov
ret
enter
arpl
sbb
outsl
or
pop
rcrl
jecxz
push
and
das
add
hlt
jg
adc
clc
aas
inc
inc
jmp
xchg
push
mov
sahf
sub
mov
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
test
push
rclb
lcall
cmp
or
cmp
mov
push
adc
decl
sbb
xor
rclb
cmp
icebp
incl
pavgb
iret
into
leave
call
stc
xorb
jo
or
or
incl
sub
pop
rolb
add
adc
or
mov
decl
pop
mov
push
pslld
int3
sub
dec
cld
sub
mov
dec
aas
lock
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
and
and
stc
mov
sub
cwtl
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
jg
and
ret
jl
orb
pop
rorb
pop
cmc
lahf
paddq
lods
mov
lock
jmp
aaa
into
clc
or
xor
cmp
sub
dec
hlt
cmc
cmp
fcmovnbe
add
mov
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
ljmp
mov
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
sarl
pushl
cmp
rorl
sti
pop
dec
dec
sbb
mov
leave
outsb
or
dec
add
incl
sub
shl
add
imul
hlt
add
cld
pop
sub
adc
mov
decl
popf
add
xchg
cmp
xor
repz
ljmp
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
mov
in
jle
pop
xor
clc
push
sbb
popf
adcl
dec
cmp
add
and
sub
add
mov
push
pop
int3
add
cmpb
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
lcall
add
cmp
push
hlt
cmp
das
add
ss
inc
fbld
pop
mov
sbb
xchg
lods
lret
rol
jmp
mov
test
mov
dec
je
jbe
sbb
xor
inc
cs
setge
pusha
mov
xor
fstl
push
sarl
or
jp
add
lcall
pushf
add
sub
pushl
lods
add
sti
je
add
loop
pop
cmp
push
cmp
cmp
pop
and
fstpt
pop
mov
pop
sub
data16
jl
dec
std
lcall
jb
nop
cmp
punpcklbw
roll
aas
imul
xchg
lock
in
insb
popa
stos
in
shl
pop
std
ljmp
andb
add
js
clc
cmp
mov
call
xchg
sub
ret
adcl
or
mov
cmp
cli
cmp
inc
jmp
jae
or
and
xchg
inc
inc
xchg
and
push
ficompl
push
test
pop
push
add
and
rclb
clc
jae
jg
mov
out
movsl
cmp
call
add
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
pop
and
call
add
or
outsl
les
inc
fs
mov
js
dec
add
push
hlt
pop
std
cmp
push
lahf
mov
mov
add
lock
and
std
lcall
push
clc
dec
fadds
cld
adc
mov
jo
scas
mov
ljmp
fildl
add
xor
rorb
dec
and
push
repnz
loopne
sub
stos
sbb
xor
sub
or
mov
movlps
sub
xor
test
mov
call
jge
lock
incl
mov
push
and
icebp
shlb
jg
mov
nop
mov
mov
pop
xor
lea
dec
daa
cld
mov
out
push
cmp
or
out
out
out
jmp
jmp
push
add
adc
lock
hlt
cli
pushf
je
cmpb
std
sbb
mov
inc
imul
pop
test
sbb
add
test
out
pop
loopne
push
xor
incl
gs
addl
sahf
mov
add
or
jnp
mov
jl
mov
call
xorb
push
mov
test
mov
cmp
xchg
sbb
push
outsl
add
jle
dec
test
push
and
mov
lcall
aaa
sbbb
incl
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
ljmp
mov
mov
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
insl
loopne
dec
sbb
adc
cli
pop
jle
and
ljmp
fisubrl
int
rolb
dec
xor
push
adc
pushl
or
aas
addl
roll
mov
mov
les
fcmovnb
xchg
inc
mov
push
jns
sbb
in
lock
pop
cmp
or
pop
cmp
adc
inc
popf
jp
dec
ss
cmpsb
in
outsb
cmpsl
xor
aad
ret
and
popa
fmuls
sti
push
ja
push
in
fbld
jb
mov
adc
xchg
add
test
cmp
or
push
lcall
call
inc
jbe
add
lcall
aam
xchg
in
loope
loopne,pt
and
lcall
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
mov
push
out
add
call
std
jg
sub
test
sub
pop
push
sub
sbb
int3
jl
pop
cld
data16
mov
pop
insb
add
fdivl
shrb
nop
and
xor
mov
ljmp
sbb
or
nop
aaa
movsb
add
jmp
cs
or
push
or
dec
sbb
pusha
pop
mov
jg
cwtl
test
add
jbe
xchg
mov
dec
push
cmp
lds
hlt
or
jp
push
pop
test
mov
decl
cmpl
rclb
push
adc
inc
push
loopne
push
lods
mov
add
sahf
push
clc
xlat
inc
push
outsl
movsl
fiaddl
cwtl
adc
or
movl
xchg
cs
test
and
fcomip
xor
in
je
xchg
mov
sbb
push
push
inc
or
adc
cmp
cmc
outsl
hlt
xchg
xchg
and
mov
xchg
cmp
in
push
imul
subb
fidivrs
lahf
lcall
mov
dec
pop
fdivs
aas
jb
out
cli
incl
stos
lret
xchg
mov
add
in
pop
inc
shlb
cld
call
loopne
js
or
xor
pop
push
cmp
mov
xor
decl
ret
in
clc
loop
daa
leave
mov
push
xor
or
mov
incl
inc
orb
adc
pavgw
push
adc
repz
jl
add
mov
mov
aaa
adc
xchg
cs
mov
lock
mov
and
push
sahf
push
lahf
pop
clc
lods
add
scas
mov
enter
push
mov
cmp
mov
rcl
jb,pt
fwait
or
and
hlt
mov
xor
pop
cld
adc
aas
roll
fiaddl
cmp
popa
cmp
add
icebp
jmp
imul
mov
xchg
and
fbld
sub
repz
cmp
jg
movsb
dec
aas
push
out
adc
sub
repnz
orb
xchg
call
clc
iret
mov
sbb
push
ja
test
jle
lcall
jb
mov
mov
sbbb
ret
pop
xchg
cmp
ss
sub
cmc
jb
imulb
add
lock
cli
ljmp
push
mov
ds
mov
mov
dec
pop
inc
push
cmp
and
popf
pop
sbb
call
in
call
sub
hlt
imul
cli
xchg
lret
mov
es
test
je
pop
addr16
push
out
jmp
pop
lock
sbb
das
push
lret
push
pop
add
repnz
and
nop
incl
jp
add
inc
je
lds
xchg
sbb
dec
lcall
cld
jle
add
jo
test
mov
pop
dec
mull
or
push
push
mov
dec
jnp
jmp
daa
add
sub
cmp
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
roll
repz
or
clts
pop
cmp
adc
cmpsl
add
daa
in
and
popa
pop
data16
mov
pop
adc
cmp
and
and
cltd
xor
ret
nop
inc
inc
enter
lahf
cmpl
aas
hlt
xor
lcall
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
mov
pusha
dec
adc
cli
outsb
bnd
test
inc
clc
call
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
incl
dec
lods
cmp
lods
add
mov
in
pop
icebp
hlt
xchg
dec
xor
xor
mov
inc
or
inc
mov
in
add
lods
sub
aas
les
cmpsb
push
mov
aas
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
pop
dec
adc
lret
fbstp
cmp
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
repz
cli
mov
xor
mov
cmpsb
sarb
push
fisttps
out
nop
xchg
rcrb
ret
xor
sub
incl
add
mov
mov
push
aas
sbb
inc
xchg
push
shll
fistl
jge,pt
dec
sti
mov
xchg
dec
inc
push
push
call
rclb
into
ret
dec
push
pop
je
vmread
addr16
add
push
pop
clc
decl
pop
clc
andl
in
push
loopne
ljmp
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
ljmp
lock
add
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
jmp
ds
mov
xchg
inc
jns
mov
mov
and
sub
dec
loopne
leave
push
xor
cmp
loop
inc
push
jbe
pusha
cmc
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
clc
lcall
icebp
insl
cmp
xchg
jge
rolb
roll
popf
xchg
icebp
incl
xchg
das
ss
cmovne
pop
shlb
clc
mov
cld
ret
decl
push
mov
push
hlt
dec
pop
cmp
mov
loopne
jmp
call
or
and
rolb
aas
fwait
xor
dec
shrb
jmp
sti
lcall
daa
stos
popa
out
lock
loop
addps
ret
xor
cld
dec
push
jg
sbb
xor
xchg
mov
pushl
and
xlat
add
mov
add
cmp
cld
daa
cs
add
scas
mov
stos
and
std
ret
dec
cmp
xchg
lcall
mov
mov
sub
add
sbb
call
dec
subl
outsl
iret
incl
pop
jnp
mov
inc
and
mov
xchg
js
jle
in
std
incl
dec
test
ror
fxch
add
jo
sbb
or
xor
adc
sbbl
aaa
pushf
xor
call
sar
xchg
push
cmp
dec
aas
lahf
cmp
sbb
jl
sub
pop
inc
mov
or
hlt
mov
push
dec
rcrb
pop
jp
sbb
xor
ret
and
lcall
fxch
pop
cmp
dec
push
addb
bound
mov
ss
sbb
pop
cld
xchg
nop
cmp
scas
mov
jne
mov
adc
les
inc
aam
adc
in
mov
dec
sub
sahf
xor
jle
cmp
add
adc
lcall
xchg
lcall
cmp
or
sbb
cmp
add
bound
mov
mov
mov
mov
sub
cmp
add
adc
mov
push
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
sbbl
orl
mov
nop
fimull
push
int
roll
enter
xor
in
inc
mov
shrl
movsb
pop
or
or
mov
add
and
push
sbb
leave
cld
into
push
inc
loopne
in
jg
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
fbstp
jge
bound
movsb
add
or
shll
imul
inc
cld
cmp
popa
nop
hlt
xor
jg
push
pop
ret
clc
lcall
xchg
orl
int3
fdivrl
shr
stc
push
mov
pop
push
mov
dec
test
pushf
and
sahf
jno
les
pusha
les
in
mov
lods
dec
push
adc
enter
xor
pop
add
shlb
push
js
mov
jg
xchg
sbb
push
mov
incl
xor
test
out
loopne
jmp
add
incb
cli
jp
test
jnp
adcl
adc
out
mov
push
fsub
add
pop
bound
sub
jno
dec
mov
call
fldcw
add
jmp
add
setb
aam
adc
incb
inc
loop
jns
adc
mov
decl
push
mov
jmp
testl
incl
les
or
decb
lock
bound
fcompl
sahf
call
mov
vpshufd
sub
add
les
or
push
fsubrl
sbb
filds
in
add
ret
outsb
je
xchg
lock
iret
mov
ljmp
sarb
int
in
inc
pop
xor
xchg
jge
je
jmp
movsb
add
mov
enter
stos
out
and
xor
lcall
stos
mov
and
loop
pop
pop
fmull
in
das
aam
jle
cmp
or
push
push
cli
outsb
test
lcall
sbb
incl
mov
test
repnz
jae
xorb
neg
xor
cli
pushl
add
lcall
lret
repnz
fcoml
add
mov
pushl
mov
idiv
push
rorb
mov
add
lods
je
xor
cmp
dec
push
loop
pop
bnd
ficoms
add
in
movb
mov
fcmovne
jne
inc
rcll
ljmp
fdivrl
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
jmp
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
xor
incl
push
add
pushf
sbb
data16
dec
aam
lcall
hlt
fidivl
loop
add
add
ljmp
adc
mov
mov
or
mov
dec
dec
mov
mov
sub
cmp
add
in
lods
cmpb
pushf
fcompl
or
add
jo
lahf
ss
das
xchg
rcl
dec
pop
decl
push
or
dec
mov
jecxz
inc
in
and
sbb
jg
jmp
adc
cmp
ss
mov
push
sar
in
pop
loope
lock
stc
and
push
adc
mov
pop
paddq
push
jne
jp
dec
mov
addb
mov
fiaddl
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
mov
adc
mov
addr16
subb
incl
xor
add
rcr
jbe
dec
sbb
push
out
mov
cwtl
test
mov
pop
push
in
mov
dec
jg
pop
icebp
cs
roll
cmp
sbbb
test
mov
adc
mulb
pop
add
cwtl
in
ja,pt
lock
xchg
pop
inc
adc
pop
mov
jo
scas
xchg
and
mull
xor
add
js
dec
dec
rol
leave
jo
fs
add
add
fsubs
push
or
dec
add
aaa
pop
jg
enter
mov
jle
jg
sbb
add
or
push
xchg
add
lcall
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
jg
add
push
mov
aas
sub
push
out
pop
cmp
sbb
lods
shlb
mov
inc
jmp
pop
add
fstl
push
mov
add
mov
je
inc
dec
repz
and
arpl
xor
in
mov
or
call
idivb
xor
int
pop
adc
je
ret
hlt
out
mov
dec
mov
mov
mov
or
insb
pop
rclb
test
call
sbb
stc
and
xorl
mov
call
lahf
inc
cmpsl
lds
clc
sub
les
xor
xor
fidivrl
decb
mov
enter
cmp
repnz
aad
outsb
cmovo
fcomip
ja
jo
or
inc
xchg
pop
dec
cmp
lock
push
mov
add
cmp
ds
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
cmp
incl
add
mov
or
out
clc
ljmp
fcoms
stc
test
push
lcall
loopne
cmp
mov
data16
pop
outsb
ret
out
clc
ljmp
aas
jl
add
nop
dec
pop
cmp
mov
aaa
jecxz
jg
xor
add
inc
movsl
dec
in
pop
aas
jb
das
pop
ret
cld
imulb
shl
imul
inc
push
add
inc
arpl
aaa
or
idivb
jnp
jg
xchg
xchg
push
mov
cld
mov
adc
ja
decl
roll
shll
sbbb
mov
popa
xchg
stc
mov
cmp
push
push
inc
sbb
inc
out
jmp
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
loopne
fld
xchg
in
mov
aad
push
sbb
pop
dec
enter
daa
fcomip
pop
inc
xchg
dec
and
xor
inc
adc
add
shr
pusha
cld
cmp
arpl
mov
mov
call
mov
or
or
adc
mov
ljmp
call
xchg
add
clc
shl
pop
mov
dec
cmp
xchg
insb
push
in
mov
cmpsb
cmpsb
aaa
stos
mov
ja
call
and
mov
outsb
das
add
cmp
jo
pop
pushw
into
rorb
jmp
mov
sub
xchg
and
jg
rolb
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
adc
and
ljmp
adc
in
mov
loopne
fdivr
pop
decl
shl
push
into
in
mov
in
sahf
lods
and
cmp
push
les
xchg
dec
jg
pop
sarb
inc
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
ljmp
das
popa
mov
jb
je
jbe
add
and
leave
in
jg
lods
inc
push
jmp
mov
inc
xchg
mov
push
test
adc
repnz
test
mov
faddp
lret
ret
out
scas
popa
dec
imul
decl
cld
icebp
xor
add
rolb
in
mov
push
dec
nop
or
call
rclb
jae
fisubrs
add
decl
aas
int
xlat
add
das
incl
adc
es
jp
pop
inc
ret
cld
das
rclb
imul
xchg
xchg
push
push
loope
clc
jmp
mov
mov
mov
xor
or
sub
popa
call
loopne
cmp
out
pop
mov
lcall
xchg
lock
pop
imul
mov
cld
jg
in
xchg
add
call
mov
mov
xchg
add
loopne
mov
sub
cmp
adc
popf
push
xor
icebp
mov
scas
repz
dec
pop
sub
rorb
xor
jo
cmp
xor
mov
mov
lret
aad
cli
push
add
jg
dec
inc
loopne
pop
hlt
data16
xor
mov
incl
shlb
mov
in
add
mov
lcall
xchg
adc
jl
pop
aam
mov
fnstcw
add
xor
add
call
out
loope
ja
jle
and
sub
insb
les
add
mov
add
pop
cmp
xchg
xchg
cwtl
call
pop
rolb
or
jbe
fcomps
lds
out
clc
lcall
xor
or
inc
lods
mov
popf
mov
mov
int
mov
psrld
data16
cwtl
ljmp
add
dec
movsb
andb
scas
call
inc
xchg
add
pop
pop
lahf
jmp
mov
lea
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
jg
out
clc
sub
js
pop
sahf
inc
pop
in
mov
push
and
stos
xchg
mov
icebp
push
and
in
xchg
xchg
loop
mov
add
call
mov
mov
fildll
test
xlat
outsl
mov
cmp
clc
push
jg
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
xlat
pop
and
add
sti
clc
scas
decl
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
adc
cld
roll
push
aas
cli
or
mov
xor
mov
pop
subb
loope
inc
stc
leave
cs
sbb
xchg
jo
je
dec
and
pop
out
sahf
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
ljmp
cmp
mov
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
call
jecxz
in
cld
push
and
ficoms
push
les
sub
outsb
add
xor
add
ljmp
jle
push
add
push
pushw
in
xchg
dec
out
daa
push
test
jg
decl
mov
cld
pop
enter
mov
xchg
bound
jb
pop
pop
inc
loopne
push
clc
sbb
nop
jbe
pop
jle
jmp
clc
pop
mov
jbe
inc
lock
mov
adc
mov
and
jno
jmp
and
and
sub
mov
cmp
ret
pusha
or
add
movsb
xchg
mov
leave
adc
aam
dec
jg
decl
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
lcall
jmp
mov
mov
test
mov
jp
in
jle
dec
movsb
cltd
shlb
xor
and
mov
scas
mov
pushl
cld
and
das
clc
aam
cmp
pusha
rclb
les
cld
out
fs
scas
and
jnp
adc
add
mov
js
les
test
notb
pushf
ljmp
fs
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
jg
decl
subb
mov
xor
popf
cmp
push
in
cmp
cmp
push
jne
js
es
mov
mov
adc
pushf
add
mov
aad
and
sahf
jmp
xor
mov
and
jb
add
mov
call
popa
in
push
sub
scas
pop
testb
xchg
fs
mov
adc
push
push
xchg
mov
pushf
es
lahf
int3
in
call
mov
loop
insb
jp
inc
pop
pop
adc
mov
and
inc
inc
decb
incl
inc
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
adc
add
mov
adc
adc
adc
lahf
sbb
adcb
lods
sub
push
xchg
aas
gs
lret
sub
mov
jl
gs
mov
sub
add
lret
xchg
add
leave
add
int3
ds
push
incl
xchg
pop
and
decb
cmp
jmp
sub
lock
pusha
sbb
inc
push
push
jmp
lods
adc
imul
dec
lock
jmp
popf
jno
adc
lods
mov
push
out
mov
ja,pt
mov
add
push
call
fcompl
push
mov
decl
push
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
jmp
xchg
sub
xor
push
call
enter
unpcklps
mov
and
jbe
ss
test
out
pop
lcall
mov
inc
and
rorb
sarb
push
adc
mov
xor
and
jg
out
mov
notl
xor
test
incl
popf
push
add
rorb
je
lods
fcomip
jp
in
add
test
mov
into
jno
decl
je
rorb
sbb
inc
mov
shl
cltd
cld
jle
cld
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
aaa
inc
dec
incb
loopne
call
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
jg
mov
mov
xor
or
add
sbb
mov
fadds
dec
and
in
in
ret
add
inc
repz
dec
cli
loopne
out
ror
int
les
aam
stc
add
movsl
loope
ljmp
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
jmp
loope
push
dec
ja
add
shlb
das
lock
mov
call
or
dec
pushl
push
dec
add
or
lods
jge
lods
add
pop
and
xor
add
cmp
sub
cmp
jecxz
loopne
jns
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
decl
pusha
or
shlb
push
add
jno
and
or
es
pop
push
push
lock
lock
ljmp
add
dec
dec
mov
inc
add
inc
data16
push
push
sbb
sbb
jle
sbb
mov
or
movsb
mov
add
lcall
inc
lds
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
lcall
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
adc
arpl
jl
jnp
adc
xor
mov
mov
pop
push
mov
and
orl
xor
lcall
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
ret
add
popa
jne
mov
sub
jg
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
mov
fs
fcom
sub
push
aaa
mov
dec
sbb
sub
decl
pop
je
sub
mov
dec
add
data16
incl
mov
or
pop
std
out
jo
add
ljmp
xor
xchg
fiaddl
ds
jns
xor
inc
aam
decl
add
mov
cmp
mov
mov
inc
xchg
add
in
mov
sbbb
push
shll
sahf
xor
out
adc
clc
inc
and
jb
or
movsl
sbb
cmp
inc
mov
dec
add
sbb
cld
pop
pusha
push
sub
pushf
jne
cmc
mov
lcall
outsb
jp
jae
sahf
or
sub
nop
ret
mov
add
xchg
push
hlt
test
rcrl
push
repz
rorl
mov
jmp
andb
pushl
jns
add
testb
sub
push
ljmp
sub
incl
inc
lds
push
push
dec
je
mov
mov
incl
adc
sub
push
sbb
cmp
std
popa
addr16
mov
fiadds
cmp
sti
cwtl
daa
punpckldq
loopne
ror
movsl
das
pop
add
sub
dec
fbld
xchg
les
imul
rclb
cltd
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
mov
in
push
in
leave
mov
add
scas
pop
das
shl
sar
push
das
add
fsts
xor
mov
dec
dec
xor
pop
add
cmp
in
decl
inc
xlat
pop
mov
fcomps
call
notl
jge
push
ret
xor
push
movsb
mov
or
out
test
jge
aad
pop
enter
mov
int3
inc
les
sub
fisubrl
push
push
loopne
add
aad
push
and
xor
iret
adc
dec
rcrb
mov
pop
popa
or
mov
fiaddl
cmc
and
mov
add
pop
ret
mov
jb
mov
and
ret
inc
loope
ds
mov
negb
ret
or
cmpsb
add
push
add
and
mov
nop
movsb
clc
adcb
inc
rclb
sbb
dec
cmpsb
ds
jg
inc
push
lea
bound
or
mov
add
int3
ja
scas
cmp
mov
fsubs
cwtl
ret
add
adc
pop
sbb
outsl
clc
push
mov
cltd
xor
mov
ret
enter
jg
pop
push
data16
in
stos
std
call
ret
xor
ss
add
popa
mov
pop
icebp
jmp
add
out
nop
or
cmp
and
and
add
call
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
std
sbb
in
xor
dec
into
mov
test
sbb
cltd
clc
mov
mov
sub
sub
jnp
xor
xor
jge
pop
stc
mov
jg
call
jae
out
or
or
adc
aas
pextrw
adc
jg
add
sub
loope
pop
mov
jbe,pt
jb
sub
or
fbld
mov
sub
sub
rep
pop
jmp
mov
call
mov
pop
xor
cmp
sbb
add
adc
mov
test
sbb
jg
add
roll
adc
sub
nop
lock
mov
sbb
incb
pop
faddl
popa
loopne
or
incl
push
mov
std
adc
scas
outsb
push
add
call
je
popa
stc
inc
mov
outsl
arpl
sbb
push
outsl
jg
incl
inc
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
adc
hlt
push
ja
jo
adc
cld
inc
test
loop
inc
arpl
xchg
repz
mov
fs
cs
ljmp
lea
jl
aas
and
jne
pushl
rcl
bound
test
cmp
idiv
std
fistpll
js
insl
clc
arpl
and
or
push
outsl
cli
fs
mov
lcall
jne
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
decl
shrl
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
ds
xor
jmp
mov
sub
mov
mov
outsb
sub
das
mov
sbb
or
push
leave
sub
pop
mov
sbb
cmp
jns
out
cmp
repz
out
ljmp
pavgw
hlt
fldcw
icebp
sub
push
jno
fidivs
inc
ja
cltd
fildl
push
inc
enter
outsl
inc
mov
pushf
inc
add
jae
test
es
jg
lcall
cltd
sahf
cmpsb
das
int3
adc
add
cltd
jb
out
inc
push
pop
pop
stos
sti
hlt
fdivs
jb
ds
mov
and
jnp
mov
lahf
lods
push
dec
addr16
icebp
xchg
sar
jnp
ret
push
int3
pop
insb
icebp
dec
stos
cmpsl
or
fsubrl
add
mov
xor
jp
adc
jl
dec
jbe
mov
leave
push
cs
mov
incl
sar
adc
or
add
mov
jl
xchg
xor
mov
mov
pushl
lods
sub
repnz
repz
pop
dec
xchg
repz
sbb
mov
iret
jne
fisubl
cmp
int3
xchg
fisubrl
fcos
jmp
lock
xor
and
sahf
cli
mov
cwtl
sarb
clc
xchg
push
adc
pop
popa
add
fwait
ret
cld
pop
jl
test
stc
cmp
fcomip
icebp
sbb
dec
jb
call
cld
and
mov
jns
pushf
push
in
add
mov
cli
push
push
into
ret
lock
push
stos
mov
enter
out
clc
hlt
clc
fisubrs
loopne
sub
outsb
xchg
sbb
movsl
push
mov
cmp
movsb
rdtsc
adc
jnp
xchg
sbb
xchg
fwait
push
rcl
cwtl
fistps
jmp
jl
movl
dec
mov
call
xchg
adc
dec
push
gs
or
mov
dec
incl
js
mov
xor
stos
mov
push
lahf
pop
pop
jle
sub
xchg
cmpsb
cltd
cmp
jmp
jmp
mov
test
dec
push
xchg
in
test
and
pop
clc
jle
cmc
cld
mov
sqrtps
cld
cmp
aaa
sbb
mov
lcall
cltd
int3
dec
lods
lods
ret
pop
ljmp
dec
mov
rcrb
cmc
fidivl
pop
in
lods
jg
imul
out
incb
lahf
mov
xchg
jecxz
icebp
call
scas
fwait
mov
cmpsb
aad
incb
aad
sarl
ljmp
repz
das
out
mov
pop
push
cmpsl
sub
adc
fnstenv
xor
arpl
fcomip
incl
mull
stc
sub
mov
mov
decl
ljmp
fsts
ljmp
test
subl
jecxz
xchg
xchg
xchg
adc
adc
lcall
cmc
dec
jle
mov
out
lock
pop
jecxz
push
out
or
push
inc
das
je
loope
push
insb
mov
shrl
mov
add
incl
jmp
xchg
cmp
mov
sub
mov
ljmp
cmc
adc
pop
fstpl
mov
inc
hlt
loope
lcall
pop
xchg
fwait
add
lcall
inc
mov
and
repnz
rcll
addr16
lahf
pusha
fstl
pop
mov
in
out
sbb
lods
mov
pop
jmp
repnz
push
ja
gs
cmc
ds
cmp
add
jns
stos
cmp
lods
add
mov
mov
movsb
cmpb
sub
shl
add
or
in
ljmp
out
imul
into
cli
je
mov
ljmp
arpl
call
dec
push
int3
into
jge
icebp
call
cmp
test
out
xchg
scas
das
push
ja
repnz
pop
cmc
push
xchg
std
push
ljmp
cmp
call
ror
add
fld
jb
sub
rcll
das
sbb
notl
cmp
data16
out
mov
jns
ljmp
xor
arpl
cmp
mov
lret
mov
out
aam
lock
shlb
push
lcall
fmull
jne
jmp
push
imul
mov
ljmp
sti
call
xchg
popf
mov
mov
aam
xor
arpl
xchg
call
daa
mov
hlt
aaa
sbb
lret
cmp
mov
fnsave
mov
out
sahf
dec
insl
pop
xchg
aas
es
mov
adc
or
negb
cmp
adc
xor
fldcw
movsb
push
dec
xlat
push
xchg
out
pop
loopne
int3
scas
xchg
add
les
jae
icebp
incl
lret
sub
sub
daa
ret
popf
aas
repnz
sub
cmp
sub
pop
int
shll
sti
mov
lret
and
pop
xchg
dec
add
fwait
pop
notl
incl
push
mov
es
and
jle
xchg
mov
mov
inc
cmp
jecxz
and
lcall
dec
jmp
test
sbb
jecxz
inc
jmp
int
push
rorl
hlt
out
push
je
out
ljmp
loop
or
ds
and
bound
addr16
aaa
out
idiv
ljmp
outsb
leave
dec
cmpsl
xchg
push
ja,pn
xchg
les
addb
lea
sub
movsl
incl
xchg
cmp
mov
mov
stc
xor
movsb
loope
dec
out
roll
and
dec
imul
ja
fstpl
dec
mov
jmp
mov
dec
add
fiaddl
les
out
jecxz
jne
add
cmp
out
nop
pop
add
inc
or
lock
mov
push
out
xor
lcall
ficompl
mov
in
add
push
fsub
or
mov
stos
test
dec
and
decl
cmpsl
cwtl
stos
mov
addr16
xchg
test
bsr
jnp
cmp
jg
insb
cmc
outsl
jge
mov
rcl
jns
cmp
xchg
adc
mov
sub
popa
stc
lret
mov
call
hlt
xor
dec
push
inc
cmp
out
jecxz
jg
inc
outsb
or
jp
cmp
xchg
out
stos
mulb
and
icebp
out
mov
hlt
jg
sub
cmpsl
fists
jne
lock
sti
mov
mov
ret
jmp
cmp
lahf
scas
sar
cmpsb
andb
push
push
sbb
jb
jg
fidivrs
test
hlt
lret
movsl
adc
fcompl
in
cmpsl
dec
outsl
push
xor
pop
sub
incl
dec
mov
fbld
mov
mov
cmp
xor
push
fiaddl
ljmp
mov
stc
mov
sub
sbb
dec
incb
or
mov
in
lret
out
inc
pop
xor
rcll
ret
shl
sub
fimull
decl
mov
mov
sbb
int3
std
fwait
sub
push
jns
jnp
popf
fdivrl
dec
lcall
inc
mov
push
pop
inc
xchg
dec
popf
and
daa
fxch
outsl
jecxz
movsl
mov
sahf
or
jp
fcmovnu
in
mov
movsb
mov
lahf
add
add
sub
out
push
lock
push
ret
sbb
sub
rorl
jmp
cmp
lcall
loope
mov
ja
pavgb
sbb
mov
mov
leave
pop
call
push
std
ror
fcoms
push
pop
pusha
lock
push
imul
pop
and
es
incl
xchg
loope
or
inc
bound
push
les
orl
inc
push
push
bound
pushl
jmp
cmp
push
insb
in
dec
lods
jg
rorl
xchg
lcall
pushl
xchg
xchg
repz
negb
invd
out
loop
jl
dec
fistpll
jp
mov
pop
sub
dec
xchg
hlt
add
jle
mov
stc
cld
pushl
or
add
fwait
xchg
mov
dec
clc
shlb
ja
in
idiv
call
cld
sub
jg
lds
addb
scas
cmp
pop
pop
scas
xchg
jmp
lcall
jns
sub
lcall
ret
and
sti
icebp
fstpt
push
gs
out
inc
mov
stc
mov
shrl
movsb
nop
ljmp
mov
inc
inc
mov
jl
jg
incl
ret
sbb
mov
out
mov
mov
imul
cmp
lcall
adc
out
stos
mov
imul
mov
jmp
insb
inc
xchg
jmp
dec
inc
cmp
outsb
cmp
jg
incl
push
adc
xchg
scas
ja
xchg
pop
stos
or
cltd
adc
mov
call
leave
mul
popf
and
and
outsl
mov
mov
lods
lcall
pop
push
lea
jmp
out
sub
push
mov
push
mov
mov
loopne
mov
pop
dec
insb
mov
and
mov
dec
stos
push
dec
das
and
push
jns
fcmovu
mov
xlat
repnz
and
lea
ljmp
jno
mov
fcmovne
mov
jb
out
cmp
test
lea
push
in
mov
adc
pushl
adc
enter
lock
incl
xchg
mov
jp
or
int3
pop
cmp
cmp
xchg
adc
cwtl
sahf
mov
cmp
inc
ss
adc
decl
loopne
stc
add
pop
call
pop
sub
je
pop
repz
shrb
sbb
adcl
ljmp
mov
jl
dec
and
in
dec
inc
lods
mov
fsubs
test
sar
jmp
ret
fisubl
or
pop
mov
hlt
push
push
inc
clc
inc
pop
or
ljmp
rcrl
dec
cmc
rcr
add
push
std
pop
push
iret
test
mov
repz
sarb
mov
add
jb
imul
xchg
or
jg
mov
lods
inc
test
sbb
pop
je
pop
jb
sub
or
lcall
jns
movsl
pop
int3
push
addb
xchg
shrl
ljmp
es
pop
aad
xor
jp
xchg
leave
rclb
pusha
insl
in
rclb
into
js
xchg
pushf
lcall
dec
cld
ret
or
and
enter
and
gs
lcall
add
xor
mov
movsb
icebp
mov
outsl
imul
ljmp
inc
inc
notl
sub
sub
mov
ljmp
idivb
ret
sbb
in
ret
adc
push
in
sbb
cmp
sbb
orl
or
sbb
pop
into
data16
fadds
sti
popf
loopne
pop
dec
je
cld
out
sub
cmpsl
cmp
and
and
and
add
pop
cwtl
sbbl
or
mov
insl
mov
jno
sub
incl
cltd
test
repz
pop
sub
aam
xchg
add
adc
push
xchg
jmp
in
pop
ret
or
movsb
ds
mov
out
insb
push
in
sub
jg
jmp
push
add
jg
test
rcll
aad
bound
lods
cmpsl
decl
scas
xor
xchg
int3
rorb
fisttpl
es
sbb
ret
incl
pop
repz
movsl
cmpsb
xchg
stos
sarb
mov
sbb
push
xchg
jg
mov
add
lret
sarb
aad
loopne
insb
shll
or
cmp
pushf
push
sbb
sbb
sub
sub
dec
cld
out
lret
jmp
mov
sahf
inc
cmp
lcall
and
lds
movsl
push
pop
out
cmp
cmpsl
jl
mov
out
dec
cmp
dec
sub
stos
sub
mov
push
pop
xchg
cmpsb
inc
pop
sar
adc
dec
nop
inc
and
ljmp
mov
add
lahf
rorl
orb
xchg
ss
in
mov
insl
mov
ds
in
sarb
pop
pop
loope
scas
pushf
pop
push
cmp
in
push
or
clc
or
cmp
lcall
inc
adc
inc
test
mov
call
mov
int
ret
mov
icebp
std
clc
call
add
and
test
mov
sbb
outsl
fcoms
ffreep
lret
sub
mov
jg
in
lcall
jmp
lds
sahf
repz
inc
add
adc
dec
clc
idiv
dec
hlt
jg
scas
clc
icebp
jbe
mov
adc
pop
lods
add
in
aas
sbb
jmp
rolb
lods
daa
xor
xchg
dec
adc
cmpsl
cmpsl
clc
mov
ret
mov
dec
inc
push
adc
adc
inc
fistl
insl
mov
jbe
aad
out
hlt
mov
jg
inc
jo
cltd
jns
xchg
sub
adc
jg
call
jmp
imul
sbbl
fidivrs
sub
lcall
repnz
jne
roll
in
sub
push
cmpsl
pop
aaa
mov
adc
adcb
decb
gs
mov
test
jnp,pt
les
jmp
fdivp
sbbb
mov
shrl
dec
dec
jecxz
sbb
push
ret
decl
mov
jle
xor
and
adc
pop
mov
incl
mov
add
loop
daa
mov
mov
loopne
xlat
ljmp
sbb
bound
cld
mov
andl
adc
mov
test
xchg
xor
jnp
jae
push
in
stos
jne
push
inc
add
mov
xor
and
jo
ja
ret
pusha
in
dec
cmpb
mov
rorb
jp
lock
aad
idivl
in
adc
leave
or
push
cld
jmp
and
pusha
add
stos
push
mov
incl
pop
addr16
push
sbbl
xchg
es
sub
rolb
pop
push
inc
incl
mov
in
in
mov
daa
xor
test
sbb
add
lods
inc
orl
dec
mov
adc
fcmovnu
f2xm1
cmp
sbb
sbb
mov
test
pop
inc
js
js
std
mov
sarl
and
cmc
dec
sbb
cld
lret
jno
inc
cli
jg
nop
and
sbb
push
pmaddwd
add
dec
mov
fists
xchg
cmp
ret
lcall
les
int3
shll
inc
iret
jno
lods
and
fadd
shrb
es
cmpsl
std
test
sbb
sti
push
push
or
test
mov
mov
roll
push
jbe
sahf
lret
adc
mov
jae
push
mov
call
pop
in
outsb
mov
in
jle
or
lods
cwtl
in
mov
push
insl
push
mov
lcall
enter
adc
mov
out
test
push
pop
mov
lcall
and
hlt
hlt
dec
ret
aad
xor
mov
adc
lcall
lret
subl
xchg
sbb
push
test
mov
mov
inc
adc
aam
ficompl
ljmp
add
add
test
loop
cmpsl
xchg
xlat
ret
mov
and
lods
call
push
lcall
cmp
or
fwait
inc
push
or
mov
xchg
mov
push
orl
sub
int3
popa
xor
shlb
xchg
sub
aad
adc
cmpsl
adc
or
scas
ret
arpl
adc
call
push
cmc
shrb
add
dec
jge
repz
aad
mov
cli
mov
dec
mov
sbb
add
int
jg
pop
or
adc
jmp
sbb
inc
jl
out
sub
mov
out
jl
inc
mov
mov
rcrl
scas
add
mov
gs
xchg
jg
fs
call
cmp
sbb
js
jne
test
sub
insb
mov
push
lcall
xor
dec
clc
lcall
icebp
arpl
insb
inc
nop
in
lahf
add
dec
jae
adc
push
aaa
mov
add
out
aam
inc
lods
push
jns
lods
xlat
ja
and
ds
call
aam
lcall
out
ljmp
scas
pusha
lret
mov
ljmp
push
scas
enter
xlat
jl
inc
bound
leave
add
outsl
push
and
jp
call
jmp
nop
and
fistpl
cmp
lret
arpl
cmpsl
nop
lcall
add
decl
test
add
cwtl
sbb
mov
dec
jmp
dec
aad
inc
clc
movsl
inc
loop
mov
xchg
jge
lds
lret
cmp
js
mov
repz
lods
dec
xchg
xlat
add
ljmp
es
mov
das
ja
into
push
cmp
jle
cld
out
int
xor
mov
pushl
test
push
rcll
out
in
push
push
jne
fs
mov
cmp
mov
and
lock
scas
mov
pop
jmp
call
roll
cli
mov
int3
sub
in
movsb
gs
cmp
stc
lods
lcall
insl
jmp
test
jb
ss
incb
cmp
lcall
mov
scas
ja
insl
es
cmp
push
sub
arpl
mov
sbb
jmp
sub
stos
jns
push
sub
in
fs
adc
pop
jbe
push
loop
sbb
sub
fnstcw
cs
hlt
mov
mov
scas
jno
mov
jae
sti
push
adc
push
adc
jno
call
xor
out
xchg
jnp
push
ficompl
mov
aad
or
cwtl
push
loope
pop
cmpsb
or
call
cmpsb
adc
out
out
cmpsb
stos
mov
dec
xchg
decl
adc
pop
push
xor
inc
mov
lea
icebp
sbb
out
xor
jmp
mov
orb
ja
mov
out
lds
jno
xor
rcl
xchg
pop
loope
leave
rclb
cmc
imul
pop
ret
ss
inc
mov
mov
loopne
call
adc
iret
cmpl
inc
hlt
xor
push
std
sub
fisubl
neg
sub
sub
call
stos
mov
jmp
inc
add
shrl
out
pop
push
mov
lret
cwtl
sarl
ficoms
mov
lods
mov
insb
mov
decb
adc
mov
ds
cmp
push
cmpsb
sub
inc
cmc
repz
pop
out
imul
add
shr
lcall
push
stc
mov
loopne
dec
dec
pop
mov
orb
xchg
insl
hlt
les
test
lcall
mov
inc
sbb
mov
daa
pop
leave
popf
imul
pop
dec
imul
xor
mov
jg
mov
repz
inc
daa
xlat
mov
mov
sub
dec
xchg
cli
xchg
sub
inc
hlt
ds
into
inc
sbb
xchg
fcmovu
jecxz
icebp
movsl
inc
repz
fisttpl
test
mov
push
fldt
lea
je
decb
movsl
push
inc
jp
jo
mov
lods
fdivrl
mov
mov
push
cmp
mov
jl
out
push
stos
xlat
lret
stc
pop
cmp
pushf
add
jno
fwait
or
jbe
jno
xlat
bswap
sub
data16
inc
test
mov
jmp
mov
cmpsb
add
xchg
lret
mov
jg
int
jg
xchg
lahf
mov
jl
pusha
and
sub
pop
dec
jo
and
mov
mov
cmp
jnp
pop
jns
and
sbb
call
mov
lcall
ja
rcr
jmp
stos
iret
jg
rorb
sub
adc
mov
ret
decl
ret
mov
mov
push
inc
jge
or
mov
push
ret
cmp
mov
adcb
cmc
adc
fs
pop
dec
cmpsl
push
faddl
dec
sbb
xor
dec
enter
incl
sub
sbbb
rorl
imul
dec
pop
inc
call
xchg
xor
in
sbbl
mov
push
mov
div
pop
icebp
pop
mov
fisttpll
decl
cmp
cltd
sub
std
cmpsb
xchg
dec
mov
xchg
lods
xchg
sbb
lods
sub
imul
push
sbb
inc
mov
out
mov
xor
fstpt
lret
mov
mov
std
ljmp
loopne
jle
imull
jae
jmp
and
jle
pop
pop
decl
inc
loope,pn
push
xor
pop
pop
xor
outsl
and
mov
adc
in
pop
sbb
inc
inc
cmp
lock
jnp
cmp
add
incl
dec
in
stos
cwtl
pop
ja
popf
fs
inc
add
xor
inc
xchg
mov
call
inc
shr
push
lea
jnp
outsl
test
jnp
int
mov
in
divb
ljmp
shlb
mov
mov
push
xor
insb
sbb
dec
enter
mov
call
mov
push
jp
sahf
ss
or
jmp
addr16
dec
dec
add
fs
cmpsb
js
push
lret
lret
aas
fisubl
push
inc
push
push
inc
mov
pop
repz
xchg
mov
cmpb
cld
loopne
repnz
aaa
ljmp
test
push
xchg
dec
jg
pushf
cmp
mov
push
xorl
call
jo
out
push
push
daa
sub
ds
dec
sarb
push
jp
mov
loope
pop
push
rorb
inc
dec
dec
in
jmp
push
mov
ljmp
xor
adc
pop
insb
cmp
jne
add
pop
mov
int
sub
or
ret
push
mov
cwtl
dec
mov
fcomip
pop
mov
jp
inc
xchg
and
sub
into
ret
sahf
sub
xchg
sub
sub
loopne
sbb
repnz
mov
jp
inc
cld
xor
sti
adc
jb
lods
jno
jbe
popa
lods
sarb
cmp
jmp
add
loopne
das
add
xchg
shlb
iret
out
lods
inc
insb
test
pushl
jae
movsb
insb
sbb
loope
out
mov
push
not
sub
in
arpl
sub
lcall
add
addb
out
sub
repnz
add
cld
or
push
inc
mov
ffree
and
jle
fsubl
lock
push
mov
push
out
ljmp
xlat
push
fidivrl
aas
imul
jg
ljmp
dec
lahf
call
cli
lds
rclb
push
or
push
inc
dec
cwtl
adc
jmp
das
jmp
rorb
cld
jp
insb
cmp
jecxz
pop
mov
jmp
dec
mulb
incl
rcrb
mov
stos
push
mov
push
fisubrl
testl
cli
adc
mov
push
mov
fstp
and
push
mov
jle
mov
gs
jle
leave
or
fistpl
clc
out
rcrb
push
cwtl
xchg
pop
push
fisttpll
pop
inc
push
xlat
xchg
jmp
mov
icebp
rorl
mov
incl
lret
imul
sbb
test
pop
in
xchg
xor
sbb
lock
test
adc
incl
icebp
lcall
out
sti
popa
pop
mov
inc
mov
shlb
cld
fwait
mov
sub
fyl2xp1
out
addr16
test
adc
xor
xchg
popa
sti
es
ljmp
lods
push
pop
pop
xchg
mov
adc
sub
pop
xor
xor
out
lahf
cmp
bound
jmp
gs
push
xchg
test
push
mov
cmp
xchg
cli
xchg
popl
decl
lock
push
mov
adc
jp
in
aam
punpckhdq
int3
insb
mov
xor
stc
mov
cmpl
ds
pop
cmp
cmc
add
out
movsl
lcall
inc
test
jge
push
stc
scas
xchg
shl
scas
jmp
faddl
subb
mov
jne
jle
jl
jmp
xlat
stos
jnp
call
jmp
daa
dec
pop
in
ja
mov
and
or
hlt
fstl
fbld
inc
cmp
test
cmp
stos
push
fdivrs
or
pop
xchg
mov
shl
shl
in
and
mov
pop
lods
lcall
add
xor
sub
push
jg
dec
movsb
add
decl
pop
outsb
jle
aad
or
cmpsb
repnz
test
cmp
pop
sbb
enter
ja
xchg
or
into
jmp
lods
mov
xchg
xchg
aad
notl
sti
hlt
jno
cmp
mov
dec
cwtl
je
adc
lds
sub
decl
mov
add
or
push
test
fcmovnbe
inc
lcall
incl
arpl
sub
pop
sarb
in
out
test
lcall
hlt
push
out
push
das
sbb
pop
xchg
jle
fcomps
inc
aam
out
fs
decl
scas
mov
or
int3
les
outsl
in
inc
sti
sub
vpunpckhbw
xchg
mov
fs
pusha
inc
test
movb
ret
cld
pop
lods
aaa
cmp
sbbb
fdivl
adc
mov
mov
decb
mov
xor
mov
ja,pt
lcall
es
into
pop
and
repz
aaa
cmp
cli
dec
and
je
decl
mov
fimuls
mov
cmpsl
insb
outsl
mov
fbld
movsl
ror
push
loope
push
push
aad
leave
mov
push
pop
fidivl
fidivl
mov
xchg
loop
gs
outsb
jecxz
loop
jmp
std
xor
mov
enter
mov
test
lahf
inc
or
popa
dec
inc
adc
and
jecxz
xor
and
mov
push
out
in
mov
xchg
jb
pop
daa
outsl
push
shll
mov
cs
mov
mov
ljmp
inc
aas
icebp
push
in
jp
inc
out
inc
insl
imul
xlat
popf
iret
pop
hlt
jmp
mov
ss
cs
fcomps
test
xchg
jg
mov
sbb
jne
mov
xor
sub
sbb
cmp
clc
int3
rclb
rcr
shrl
xor
test
decl
adc
dec
mov
xor
sbb
fldcw
pop
xchg
jae
mov
pusha
movb
sar
out
jle
or
jne
sub
mov
jmp
cwtl
mov
jg
cltd
inc
loop
xor
xchg
jmp
fsubl
movsb
ficoml
add
fwait
test
pop
or
inc
or
insb
inc
neg
in
decl
fdivrl
or
repnz
sbb
imul
lret
jo
repz
decl
cmp
jns
cmpsb
mov
cmp
inc
or
cld
mov
loopne
incl
imul
dec
xlat
je
inc
fcomps
daa
adc
and
jg
sti
cmp
jecxz
lret
cli
push
loopne
sbbl
fcoml
adc
clc
icebp
mov
sbb
or
stos
lcall
add
mov
pop
adc
sahf
mov
mov
out
test
and
jmp
mov
in
mov
mov
sbb
out
adc
andl
lret
shll
lods
dec
iret
out
adc
xchg
and
or
jbe
pop
ljmp
jb
mov
dec
jb
ja
mov
pop
add
arpl
or
imul
push
and
push
cs
fildll
dec
pop
orb
jecxz
inc
cmp
out
pop
loopne
call
fdivrs
ja
push
or
repz
jmp
fs
lahf
in
push
or
into
cmp
mov
out
in
out
and
or
roll
mov
loop
clc
or
fists
ffreep
mov
cmp
rolb
fld1
fcmovb
mov
idiv
inc
in
or
sbb
and
xchg
popa
pop
sar
sbb
lret
icebp
scas
adc
jmp
sbb
and
aam
ret
pusha
mov
iret
mov
add
stos
mov
lds
inc
push
xor
out
jne
mov
pushl
push
cmp
push
dec
mov
nop
xchg
push
mov
lcall
aas
mov
rorb
add
xchg
jbe
cmp
mov
dec
ja
adc
pop
cmp
inc
lret
mov
cmpsb
pop
fs
push
pusha
ds
stos
or
sar
jg
pushf
fneni(8087
jmp
outsb
nop
inc
mov
inc
cltd
or
dec
cs
inc
or
jns
jecxz
push
xor
jns
jge
xor
inc
mov
scas
ret
cmpsb
idiv
jg
in
rcl
sub
cmc
fdivrl
dec
inc
dec
push
xor
adc
push
pop
cli
add
mov
jle
adc
ret
adc
pop
mov
ja
lcall
dec
pop
leave
sarb
insb
mov
bound
addl
pushl
pop
pop
inc
jnp
cmp
mov
fsubl
jmp
lock
mov
repz
jg
lcall
loope
cmp
or
xor
inc
call
scas
test
lcall
sbb
add
loope
loope
cltd
sub
inc
vprotw
add
xor
gs
mov
sarb
add
add
fwait
icebp
dec
pushl
lea
lods
in
inc
mov
pop
les
mov
imul
push
fs
pushl
inc
lods
mov
xor
popa
and
mov
or
push
mov
repnz
lock
adc
ljmp
or
jae
outsb
jg
jp
lret
cmpsl
pop
in
jmp
jle
mov
xlat
ljmp
and
mov
stc
es
addb
outsl
fs
mov
repnz
pushl
jne
enter
pop
pop
pop
sar
leave
stos
pop
mov
cmc
fucomp
outsl
mov
loop
jle
dec
mov
decl
sbbl
inc
pusha
int3
jb
xchg
inc
and
pop
stos
push
iret
pop
ja
scas
lret
repz
pushl
shll
xor
cmpsl
and
adc
push
outsb
xchg
insl
jle
cmp
pop
lcall
jmp
js
lods
test
push
jl
sub
pop
pop
test
rcrb
jbe
outsb
or
dec
adc
movsl
lret
mov
lds
xor
or
inc
sar
or
ret
ljmp
jmp
jmp
push
dec
xchg
inc
cld
pop
lret
stc
lods
into
xor
data16
movswl
ljmp
push
ljmp
sub
hlt
dec
jns
lods
shll
xor
push
inc
insl
fdivl
mov
and
push
sub
loope
pop
insl
inc
div
mov
jle
in
xchg
mov
inc
je
imul
sub
ds
fdiv
test
jmp
shr
je
or
decl
out
cmpsb
add
xor
sub
xchg
in
and
pop
sbb
xor
dec
int
mov
jl
aaa
std
decl
push
out
push
xchg
or
pop
push
push
jae
loopne
lret
push
push
mov
rcrb
test
ud0
decl
push
test
sbb
lods
not
dec
sbb
fcoml
js
mov
inc
lcall
icebp
dec
cmp
in
fld
mov
push
movsl
xchg
and
scas
cmp
cltd
xor
int3
push
mov
add
jp
inc
mov
inc
adc
mov
ja
scas
add
call
xor
and
pop
push
in
repz
loope
pop
lods
dec
andl
or
lcall
sti
rcrb
shl
pop
fwait
pop
xchg
push
scas
xchg
enter
nop
imul
outsb
sub
leave
scas
adcl
fsub
shlb
and
pop
enter
adc
ljmp
insl
and
decl
cld
idiv
push
cs
jle
mov
popa
push
push
data16
adc
push
icebp
lds
cld
or
aaa
jp
out
sbb
sti
push
mov
ljmp
js
mov
jmp
xorl
call
push
or
scas
sbb
sbb
nop
xor
out
sbb
fcompl
loope
or
jmp
dec
fisttpl
lahf
mov
movsb
push
ret
jg
pop
sbb
dec
fs
loope
push
inc
adc
mov
call
xchg
pop
add
jg
sub
insl
xchg
push
adc
sbb
cli
ja
clc
push
rcll
push
or
fld
sbb
jecxz
cmc
ljmp
lock
push
cli
rorb
scas
push
dec
mov
cmpsl
ficoms
dec
jp
push
aad
popa
pushf
enter
clc
pop
cmpsl
jno
add
sub
cmp
test
jnp
sbb
xchg
jnp
jmp
mov
test
and
dec
repz
dec
push
mov
push
addr16
cmpsb
sbb
cmp
incl
in
cli
test
imul
and
pop
fidivrl
pop
clc
data16
bound
aaa
pop
mov
jp
xor
das
cmp
push
push
test
stos
mov
pop
jmp
pushf
insb
push
ja
test
icebp
das
sets
pop
ffreep
add
or
mov
incl
adc
fildl
out
xorb
lods
ljmp
push
sbb
mov
adc
dec
les
insl
insb
cmpsl
adc
call
test
das
ja
and
out
push
and
lahf
fwait
jp
adc
pop
rol
fsubs
lret
or
lock
and
ljmp
push
fildll
add
aad
push
pop
movsb
popf
sti
cmp
scas
mov
fstpt
addr16
sbb
int
jge
add
test
ljmp
mov
sbb
cmp
sbb
hlt
int3
out
lock
mov
int3
je
sub
mov
sbb
dec
gs
js
pop
nop
or
inc
add
mov
call
repz
bound
xchg
shlb
popf
xor
push
add
aam
xchg
jg
js
aad
cmp
inc
sbb
cli
mov
jns
and
jb
scas
inc
inc
jecxz
insb
shr
ljmp
mov
out
mov
dec
lcall
inc
jns
push
scas
mov
sahf
ss
push
adc
sub
lcall
in
jp
xchg
sbb
jg
sahf
gs
fstpl
push
cmp
lea
jmp
lea
les
push
je
es
lock
mov
call
jp
sbb
xchg
mov
or
in
jg
or
cmc
adc
lea
subl
or
and
testb
sar
decl
das
sbb
and
cmp
addl
mov
pushl
mov
xchg
and
push
sbb
std
cmp
in
jmp
jge
hlt
inc
push
mov
jns
or
xor
dec
jmp
xchg
je
lcall
jmp
popf
dec
lahf
arpl
push
fdecstp
xchg
adc
stc
ret
sbb
pop
mov
fs
lcall
lods
into
mov
in
mov
in
sub
jo
dec
pop
fcos
jmp
sbb
addr16
daa
movsl
es
mov
pop
mov
jmp
int3
in
aas
inc
outsl
add
xchg
clc
mov
fs
push
int3
jnp
mov
inc
inc
mov
cwtl
daa
adc
ja
push
mov
cmp
mov
add
sbb
lret
jecxz
lcall
fwait
inc
sub
int
imul
inc
xchg
daa
js
pushf
pop
cwtl
outsb
or
sub
call
repnz
and
scas
push
sub
mov
sub
dec
fidivrl
outsl
pop
scas
stc
outsb
sbb
jmp
push
arpl
movsl
aaa
pop
pushl
ret
xor
jb
fiaddl
push
ret
mulb
push
cld
out
pop
in
shrb
pop
push
mov
stc
push
and
cltd
cltd
pop
fsub
xlat
fcomp
push
xorl
pushl
xlat
stos
dec
cmp
lock
mov
jns
test
dec
sarl
mov
nop
pop
sti
lock
jl
push
pop
popf
adc
xchg
fs
or
loopne
jmp
das
int
shr
ret
pop
mov
jb
loope
int
lds
push
call
jo
xchg
popf
movsb
addr16
and
test
sub
outsl
scas
clc
std
outsl
adc
or
gs
fnstenv
mov
dec
sub
stos
mov
es
inc
fldcw
add
pushl
or
mov
loop
and
gs
in
or
outsb
mov
mov
inc
incl
or
cmp
and
jo
xchg
fsubrl
ljmp
xor
xor
out
lds
aaa
arpl
pop
outsb
mov
cmpsl
sub
or
call
mov
dec
scas
decl
mov
out
movsl
and
test
and
aas
xchg
fadds
sbb
clc
ljmp
inc
mov
mov
das
fstpl
adc
out
pop
lods
call
loopne
xchg
stc
in
sub
mov
dec
repnz
fbld
lds
mov
js
icebp
into
xchg
push
int3
emms
sbb
fisttps
sub
icebp
jmp
xor
push
fwait
mov
sbb
shl
jnp
lcall
mov
dec
int3
sbb
pop
pop
lahf
sbb
push
pop
outsb
rcrl
mov
decl
lcall
pop
push
or
test
bound
call
cmpsl
fnsave
adc
jp
xchg
and
addr16
clc
addr16
jne
lcall
gs
jae
pop
fistpll
xchg
dec
add
ljmp
sbb
leave
test
nop
sbb
dec
mov
xchg
jb
cmp
pop
je
decl
push
enter
sub
stc
mov
inc
outsb
jle
adc
fcomps
out
jg
xchg
cmp
add
sti
pop
test
lcall
dec
ds
lret
lods
rclb
into
test
inc
mov
adcl
mov
into
icebp
mov
pop
push
std
insl
test
add
xor
stos
and
or
rorb
and
movsb
lods
or
imulb
adc
dec
jp
sar
test
push
div
push
pusha
sarb
daa
push
jo
decl
and
mull
outsb
cmp
loopne
ror
insb
insl
sub
and
mov
fcos
incl
mov
rolb
fldcw
fs
add
pop
xchg
pusha
aam
shlb
dec
les
call
mov
mov
cmpb
dec
enter
jecxz
insb
dec
fs
cmp
push
outsb
mov
push
mov
sub
ljmp
aam
adcb
loope
push
std
jno
add
aam
mov
mov
sbb
pop
fcomip
mov
scas
fbld
arpl
jmp
add
xchg
cmp
and
idiv
pop
cmp
inc
mov
in
jp
xchg
repnz
and
pop
cmc
jecxz
sbb
inc
sub
mov
mov
hlt
cmp
enter
inc
sub
fcoml
call
add
push
aam
mov
out
int
sti
adc
cli
and
gs
in
das
jmp
push
cmp
dec
pop
cli
push
es
fstpt
or
dec
jg
cs
pusha
add
dec
jmp
gs
push
jnp
loop
push
cmpb
jmp
pop
mov
pop
mov
ret
shll
mov
test
pushl
and
mov
sub
push
aam
mov
sarl
mov
pushl
mov
mov
repz
jno
jno
pop
mov
out
push
push
lds
cmp
pop
or
add
js
push
lcall
sti
call
aam
xor
mov
mov
int3
or
fistps
arpl
jg
push
popa
setg
push
sub
mov
ret
pop
add
dec
pushf
pushw
les
jg
ss
xchg
into
enter
sbb
mov
sbb
mov
mov
or
popf
mov
cli
mov
mov
mov
jle
cmp
sahf
out
mov
imul
pop
jo
or
or
jle
jg
mov
and
xlat
jbe
mov
incl
into
pop
mov
fadds
sar
repz
inc
filds
outsl
mov
fcomip
decl
pop
mov
clc
dec
pop
xchg
int3
and
pop
faddl
lcall
fsubrl
in
mov
pop
and
lcall
xor
mov
adcl
xlat
mov
mov
in
add
jmp
rclb
xor
inc
mov
sbb
sbb
xchg
rorl
mov
fs
adc
mov
ret
cs
aaa
xor
jae
ret
sbb
decl
add
inc
push
insl
mov
pop
gs
xchg
addr16
ljmp
stos
lods
stc
mov
ja
je
iret
nop
xchg
pop
xlat
dec
popf
pushl
imul
jge
xor
ret
leave
mov
mov
xor
pop
daa
jmp
lret
ficoms
fsubl
cs
imul
mov
lcall
loopne
mov
mov
jne
push
cmp
jno
pusha
pop
xorb
int3
jmp
ja
incl
lret
sti
fsubl
mov
lea
in
insl
adc
popf
call
dec
jo
pop
cmc
push
call
into
mov
xchg
push
pusha
jmp
jmp
out
xchg
inc
and
add
mov
mov
jmp
push
cld
dec
ret
sub
mov
and
aas
mov
rclb
mov
or
call
dec
and
ja
xchg
mov
push
das
in
mov
and
mov
and
adc
cltd
mov
lock
dec
ss
int3
pop
jl
cmp
pop
jl
mov
push
xor
imul
scas
aad
iret
inc
xor
mov
mov
jle
mov
hlt
mov
sahf
mov
adc
jmp
stos
mov
or
or
push
lcall
push
or
out
inc
cmpsb
fcoms
dec
xchg
jl
sub
jmp
mov
jle
push
xor
shrb
sub
or
les
sbb
sub
hlt
jne
cmc
ljmp
inc
outsl
sub
push
gs
aam
sub
clc
ljmp
mov
imulb
push
push
scas
inc
push
insl
fsubl
adc
xchg
inc
add
aam
call
add
outsl
mov
mov
push
andb
jae
or
inc
adc
clc
enter
test
inc
push
inc
mov
aam
or
lods
jle
xor
xor
hlt
xor
call
insb
sbb
faddl
fcmove
cli
call
or
push
push
mov
or
jp
jmp
fstpt
sub
adc
xor
das
aaa
insl
mov
mov
mov
cmpsb
push
jmp
cmp
rclb
insb
in
mov
divb
lods
mov
mov
mov
xor
dec
dec
jmp
jbe
test
mov
sub
xchg
cmp
jmp
xor
addr16
leave
pop
fmull
pop
rorb
cmp
es
mov
jne
in
call
cmp
dec
mov
xor
out
pop
fistpll
mov
jp
pop
add
pusha
clc
ds
sbb
out
aas
dec
and
leave
xchg
cmpsb
aaa
scas
sub
lcall
sahf
sub
js
cli
popa
stos
cli
mov
dec
cltd
pusha
mov
cmpsl
pop
inc
dec
adc
jg
leave
loopne
scas
es
cltd
cmp
dec
mov
clc
pop
sub
add
pushf
in
cmp
arpl
imul
xor
mov
test
or
inc
clc
cli
nop
or
xchg
jp
loop
sbbb
test
fdivrl
lds
imul
pushl
cmp
test
scas
sbbl
xchg
sub
push
pop
or
jg
xlat
sbb
inc
insl
nop
std
ds
xor
fs
fwait
push
mov
xor
cmc
loope
jmp
push
or
jmp
jbe
adc
jo
mov
and
into
inc
in
aam
loopne
sub
jmp
push
stc
into
fsubrl
xchg
mov
ja
mov
stc
push
xor
push
movsb
movsb
mov
add
fucomi
repz
or
ljmp
das
jne
xor
ja
dec
mov
ljmp
stos
out
jg
adc
aam
bound
adc
jo
in
push
decl
imul
cmp
incl
out
cltd
jg
pop
out
int3
xlat
into
gs
and
mulb
cmp
pusha
out
shrl
xchg
out
loope
lcall
notl
stos
psadbw
clc
bnd
outsl
add
rcrb
jmp
xor
push
andb
cmp
sarl
in
pop
dec
sti
sbb
loope
mov
fldl
scas
dec
pusha
mov
das
scas
aam
adc
xchg
lcall
mov
inc
cmpsb
ljmp
sub
lcall
in
xchg
push
xchg
mov
iret
add
jmp
xchg
push
arpl
nop
iret
lcall
pop
mov
pop
not
andb
in
adc
sti
jae
ja
pop
jmp
mov
adc
mov
push
test
sub
scas
cmp
inc
ljmp
incl
mov
test
jns
scas
jmp
xlat
inc
pop
daa
mov
and
rcl
fld
push
xchg
pop
fwait
dec
ds
jmp
and
mov
enter
jl
imul
repnz
mov
adc
out
clc
loop
inc
js
sahf
dec
dec
stos
in
lea
cmpl
fwait
xchg
jmp
ljmp
ss
out
lods
push
outsb
pop
int3
or
loope
pusha
xor
test
xor
clc
decl
push
notl
push
mov
fisttps
rorl
test
push
in
cli
call
and
and
adc
lret
xchg
ljmp
cmpsb
sbb
adc
jp
jbe
fs
mov
push
push
mov
mov
decl
in
pop
and
add
jo
mov
je
push
push
sub
sub
cmp
notb
call
jae
mov
jns
es
jns
arpl
mov
mov
decl
jle
mov
repnz
les
cs
sbb
fdivl
push
and
ds
hlt
push
cmc
and
jns
pusha
sahf
push
hlt
mov
nop
aam
jno
arpl
sar
mov
ja
das
lcall
into
mov
es
lcall
and
jno
jg
fcmovu
jle
mov
pusha
xchg
cmpsl
mov
imul
and
addr16
cltd
push
mov
cli
mov
push
pop
in
mov
cli
pushf
add
out
mov
cwtl
pop
and
lods
pushl
mov
outsl
jp
iret
aad
xchg
xlat
jno
adc
xrelease
call
xchg
and
push
je
mov
mov
jge
mov
les
adc
push
xor
xor
out
xor
pop
lods
dec
mov
mov
aaa
mov
push
jae
cwtl
fisttpll
out
dec
push
or
inc
decl
leave
mov
adcl
aaa
mov
push
int3
xchg
add
jge
inc
lcall
adc
jo
push
int3
stc
mov
int3
inc
lds
call
cmp
jg
jno
and
in
pop
mov
mov
iret
xor
decl
shrb
clc
cmp
int3
adc
mov
decl
ds
inc
xchg
mov
shll
ret
outsl
or
jo
movsb
sbb
ljmp
sar
mov
xchg
pop
add
adc
scas
imul
mov
lcall
rorl
mov
rcr
lock
cmp
call
mov
jecxz
outsl
mov
push
add
sbb
inc
pop
in
jp
add
mov
sub
decl
adcl
or
out
xor
adcl
btr
imul
decl
bswap
fsubrl
mov
jp
sar
dec
sbb
pusha
mov
dec
xor
jge
mov
call
data16
insl
mov
popa
lods
inc
push
or
repnz
and
decl
stc
mov
ret
imul
int3
arpl
and
mov
and
cmc
rcll
push
push
dec
push
repz
pop
sbb
mov
xchg
repnz
decl
insb
loopne
lock
or
pop
push
mov
lcall
enter
aad
add
lds
sub
mov
xor
decb
or
call
mov
mov
popa
mov
pop
mov
cwtl
mov
jmp
out
pop
loopne
pop
es
jp
in
punpckldq
jecxz
je
jecxz
addb
sub
push
sub
decl
sbb
hlt
adc
jb
inc
aam
push
arpl
je
and
fistps
and
enter
daa
call
lcall
sbb
daa
int3
cltd
mov
cmp
push
lods
repz
push
push
inc
cld
call
pop
jecxz
sti
lahf
sti
mov
xchg
xchg
sahf
out
ret
jg
dec
sub
add
push
and
mov
cmp
je
decl
mov
loop
ss
lea
lds
out
adc
or
push
mov
inc
std
idivl
test
mov
inc
enter
push
imulb
cmp
jmp
push
scas
loop
fstps
xor
pop
test
cli
ljmp
dec
clc
loop
sub
xacquire
add
in
xor
lcall
pusha
sub
xchg
loop
imul
inc
rcrl
mov
ljmp
shl
insb
xor
pusha
lea
or
cmpsl
inc
dec
out
int
adc
outsb
es
js
out
xchg
sub
xor
jecxz
cmp
ficompl
repnz
lods
ret
clc
dec
mov
std
and
hlt
iret
test
mov
jno
sahf
sbb
fcoml
jmp
inc
push
xchg
fbld
data16
ret
dec
add
or
sbb
xchg
jmp
mov
inc
dec
xchg
pop
loope
in
mov
sbb
sahf
and
mov
mov
test
mov
fcomps
jl
lcall
jecxz
les
adc
pop
sub
xor
scas
cmp
aad
mov
inc
int
pop
pusha
xor
in
sub
fidivl
dec
jg
dec
cld
ljmp
add
lea
jae
mov
push
pusha
inc
aas
subl
das
std
pop
mov
fisubl
mov
cmp
scas
jp
mov
lcall
cmp
push
cli
ljmp
in
mov
push
int3
cs
mov
dec
fcmovnu
hlt
push
sub
jnp
outsb
rol
jo
dec
sub
mov
pop
addb
fcomip
mov
fwait
mov
fwait
leave
in
xorb
sub
xchg
fwait
inc
call
inc
and
out
inc
cmpsl
sub
jge
xchg
mov
cld
loop
jmp
sbb
outsl
and
mov
jp
pushf
int
push
mov
lods
cmc
fadd
xor
loop
scas
icebp
fcomip
jg
sbb
lds
and
mov
add
lcall
push
cmpsl
push
inc
hlt
cmpsl
fsubr
in
mov
pop
or
pushl
mov
imul
in
mov
lea
pushl
lods
imul
sbb
mov
jl
ficoms
adc
notb
clc
mov
pop
test
adc
mov
xor
popf
leave
jg
rcrl
jae
dec
sub
dec
lcall
dec
shl
mov
lock
in
enter
sub
fmuls
insl
incl
sbb
sbb
mov
outsb
outsb
pop
insb
xor
dec
pop
stc
fisubs
inc
pop
call
xchg
test
push
aaa
cmp
dec
or
dec
enter
push
mov
fnsave
cld
fwait
jne
es
pop
push
mov
loopne
nop
jbe
mov
cmpsb
mov
jmp
test
aas
adc
out
call
inc
dec
shr
les
mov
push
and
jecxz
push
sti
cli
pushf
adc
sub
cmp
out
outsb
mov
rolb
imul
mov
cmp
push
and
fistpll
daa
sahf
xlat
leave
in
inc
sbb
push
addr16
out
mov
xchg
int3
mov
mov
or
fsubp
rolb
out
mov
outsb
test
jno
insl
jb
clc
into
and
sarl
stos
test
clc
incl
mov
nop
jecxz
pushf
mov
mov
scas
in
insb
and
cmp
add
out
xor
xchg
jmp
or
push
inc
push
cltd
xor
clc
and
inc
in
int
lcall
call
rcll
jb
rclb
cld
push
push
inc
les
add
inc
sbb
xchg
test
mov
push
aad
mov
lret
xchg
push
loopne
cmp
sbb
decl
fildl
mov
enter
jbe
sti
xor
lock
add
cmp
xchg
xchg
jo
mov
pop
and
incl
push
arpl
fstpl
insl
dec
icebp
xchg
xlat
jns
in
decl
add
int3
sbb
or
loopne
mov
or
frstor
jns
mov
pop
lcall
test
jg
pop
dec
add
cmp
inc
pushf
dec
and
xchg
movhps
dec
push
cmp
nop
out
or
bound
xchg
xor
push
bound
adc
jmp
hlt
stos
gs
cltd
mov
movsb
loope
lock
out
pop
add
cmp
call
movsl
sahf
insb
testb
cmp
mov
add
mov
jbe
pushl
cmpsl
push
and
push
negl
lock
sbb
sub
fildll
fwait
or
mov
in
call
cld
out
outsl
shl
mov
jnp
js
icebp
scas
jp
stos
sbb
jae
mov
cltd
lahf
call
sahf
mov
mov
aad
add
adcb
mov
push
in
gs
mov
mov
mov
and
clc
mov
mov
mov
xchg
addl
inc
sub
inc
insl
mov
or
push
addr16
sbb
loopne
fwait
std
pop
ds
jmp
data16
lret
in
dec
lret
push
lods
flds
dec
mov
push
ljmp
lock
cmpsl
fs
jns
call
out
pop
fstpl
lret
xchg
add
lea
mov
ss
dec
inc
push
inc
push
add
out
pop
pop
pop
mull
adc
fcom
aaa
pop
xlat
pop
sti
scas
mov
enter
mov
inc
sbb
mov
sub
nop
add
dec
in
aad
lret
sbb
call
pop
in
lahf
es
push
scas
lods
cmp
mov
cwtl
je
aad
leave
shlb
and
call
int
dec
sbb
aad
mov
mov
lock
add
inc
pop
fidivl
sub
dec
call
mov
mov
fdivs
lret
xchg
add
ja
push
gs
xchg
lcall
adc
test
dec
sub
xchg
es
sbb
pop
pop
mov
cmp
frstor
stos
or
sbb
push
in
sahf
fs
ljmp
je
inc
xchg
int
cmpsl
jno
jmp
fdivrp
cmc
ss
push
pop
out
lcall
call
adc
xor
scas
fisttpll
mov
ret
add
xchg
and
daa
cs
js
pop
mov
push
xchg
leave
out
adc
and
movsb
mov
in
inc
cmpsl
push
push
sub
push
mov
cs
dec
sahf
sub
repz
xchg
scas
loop
es
popa
mov
jp
cs
shl
jp
rcll
jg
xlat
pop
cmp
jmp
daa
lret
test
sbb
rclb
mov
fadds
cmpb
cwtl
shlb
decl
lock
push
sub
mov
push
xlat
cmpsl
sub
or
sub
pushf
ja
repz
pushl
addb
pop
sbb
inc
fcmovnbe
fucomp
cmp
out
mov
movsb
dec
fwait
in
test
ljmp
idivb
dec
pop
sbb
pop
aaa
insb
in
mov
cs
stos
jge
leave
data16
xchg
pop
cld
fcomip
pushl
xchg
adc
xor
lahf
sbb
lcall
int3
sub
int3
cwtl
mov
divl
loope
jg
add
dec
addr16
les
mov
test
test
add
add
hlt
decl
in
push
jle,pt
daa
fnstenv
jmp
jle
pop
mov
filds
jo
push
gs
insb
repz
jnp
test
int3
add
jg
jg
add
mov
mov
ds
add
aaa
loop
mov
jg
sbb
mov
pop
cwtl
add
adc
mov
iret
test
push
incl
mov
fwait
sub
lock
cltd
mov
sbb
sbb
scas
clc
push
xor
or
and
pop
test
mov
cmc
test
jnp
mov
icebp
ljmp
jno
sub
int
stos
jne
mov
cmp
loopne
push
loope
sbb
sahf
out
pop
mov
xchg
jae
sbb
clc
decl
repnz
pop
call
mov
ljmp
cmp
mov
sub
xchg
adc
pusha
sub
fldl
mov
jns
imul
pop
cmc
jg
test
xor
lret
rorl
out
jne
scas
pusha
shl
cltd
ljmp
mov
lret
cs
lods
mov
pop
cld
in
loop
out
out
cli
movsb
test
dec
cmp
mull
dec
pop
repz
andl
call
dec
jmp
push
xor
jmp
icebp
roll
daa
int3
push
sub
ljmp
das
push
xor
xor
inc
sahf
pusha
or
jmp
mov
call
xor
mov
jbe
mov
fisttps
inc
gs
cltd
sbb
xchg
movsl
cli
inc
pop
loope
daa
cmpsb
mov
pop
scas
sub
insl
mov
pushl
mov
loope
clc
hlt
push
mov
imul
mov
test
cli
dec
sar
pushl
in
dec
arpl
push
mov
nop
das
cmp
out
sahf
cmpsb
stos
mov
push
jg
or
mov
jb
xor
lea
push
mov
jae
mov
sbb
decl
adc
mov
std
shrb
mov
pop
xorb
repz
inc
std
dec
popa
fidivl
mov
jo
enter
lcall
incl
xchg
sub
xchg
ja
sti
dec
sti
mov
icebp
fmuls
cmp
aad
pop
iret
imul
jecxz
push
std
push
mov
lret
imulb
jg
inc
das
ljmp
faddl
pushf
sbb
sbb
popa
ja
jae
inc
fcomip
mov
out
xor
dec
jg
mov
aas
cmpsl
rcrl
into
outsl
add
lcall
and
jmp
out
adc
call
adc
test
adc
stos
and
push
jmp
ret
ja
pusha
aaa
and
pop
fistps
filds
mov
pop
push
or
imul
add
sti
ljmp
decl
mov
scas
inc
leave
mov
cmpsl
push
pop
dec
test
filds
fisubrl
xor
pop
js
sub
insb
fs
adc
jmp
and
xchg
daa
jns
push
rclb
xchg
lea
repz
adc
popa
push
ljmp
ss
cwtl
sub
xchg
hlt
cltd
mov
repnz
pop
imul
popa
pop
mov
imul
flds
ret
dec
and
mov
sbb
sub
mov
push
mov
xchg
dec
push
dec
test
pop
aad
ss
add
sbb
push
adc
mov
mov
insb
je
inc
add
sub
add
call
add
jge
out
mov
xchg
jne
js
jae
push
std
mov
dec
in
lahf
into
out
daa
fistps
shr
ds
pushl
xchg
sbb
dec
mov
aas
xchg
xchg
adc
addr16
dec
jge
pop
sti
repz
inc
jbe
inc
movlps
or
adc
push
sub
imul
in
sub
lea
pushf
test
cld
dec
mull
push
xor
or
incl
add
dec
jb
mov
out
cmpsb
xchg
mov
jb
and
mov
ljmp
and
inc
mov
dec
sti
repnz
xchg
outsb
push
rcrb
stc
negl
fcomip
dec
jns
loopne
cmp
inc
sbb
mov
inc
inc
cli
subb
mov
mov
ret
cmc
inc
lcall
mov
outsl
out
dec
movsl
data16
pushl
ss
shll
mov
inc
jb
mov
shl
mov
fistpl
int
icebp
decl
fs
cmp
xchg
notl
push
fcoms
mov
cmp
mov
ret
sbb
cld
mov
lcall
xchg
aas
testb
jg
lods
push
add
jl
scas
inc
push
cmpsb
jnp
cmp
decl
lea
xchg
mov
sub
sbb
jg
push
lcall
outsb
fisttps
out
push
push
push
int
lock
bound
pop
repnz
decl
pop
mov
add
jns
into
lock
mov
cmp
jne
rcrl
dec
add
jmp
push
push
je
fdivl
ljmp
inc
fmuls
out
ds
mov
decl
repz
ljmp
mov
or
mov
xor
lods
mov
fadd
ljmp
jns
pop
loopne
stc
movsb
js
ljmp
testb
cli
fidivs
push
jno
mov
int
insb
or
ljmp
or
lahf
data16
pop
pop
mov
leave
mov
fists
inc
push
jno
sub
cmp
xchg
fisubs
arpl
dec
jmp
xchg
add
jmp
xor
mov
xchg
call
dec
mov
push
xchg
xchg
shlb
cmp
into
mov
dec
sub
das
xchg
and
call
jl
orl
faddl
dec
sbb
int3
mov
mov
push
jmp
leave
adc
inc
daa
xchg
aas
ffree
popf
stc
out
add
mov
pusha
inc
fs
jle
push
add
jbe
xor
outsl
lcall
loop
call
out
call
xchg
jl
xchg
xchg
dec
and
and
sarl
ljmp
test
adc
sub
cmp
mov
pop
inc
test
push
out
mov
dec
jg
es
in
adc
pushl
jnp
add
add
shlb
int
in
pop
jge
push
scas
outsb
fcmovbe
scas
cld
cmp
push
sbb
cmpb
jne
shrb
dec
cld
outsl
sub
loopne
cltd
jo
cmpl
and
sbb
imul
stos
in
jbe
clc
sbb
push
pop
pop
fcoml
rcl
xor
adc
pop
inc
mov
testl
iret
test
sahf
xor
jae
and
cmp
inc
insl
movsb
mov
dec
mov
shrb
xor
cli
fs
cmpsl
push
enter
ret
cwtl
pushf
dec
pop
jg
pop
into
incl
cwtl
js
fsts
lds
sbb
adc
and
in
dec
dec
jl
mov
sub
lock
push
push
xorb
sub
adc
xchg
test
call
scas
pop
xor
cmc
repz
aaa
adc
xchg
jbe
lcall
push
movsl
xchg
pushf
fsubs
mov
mov
add
or
dec
repz
aas
mov
jmp
clc
enter
cmp
pushl
cmpsb
add
mov
ja
inc
fiaddl
xor
push
lret
icebp
jnp
in
jmp
ret
dec
fisubrl
sbb
xchg
mov
test
icebp
nop
int3
mov
jg
lret
mov
push
clc
jmp
and
mov
mov
mov
les
pop
cld
incl
lahf
xchg
sbb
mov
lret
adc
inc
int3
xchg
cmpsb
subl
call
mov
xchg
scas
repnz
adc
jp
push
rcl
es
hlt
out
ret
pusha
ljmp
ljmp
xchg
push
pushf
iret
cmpsl
sub
inc
and
and
jae
mov
push
mov
fisttpl
pop
dec
adc
shlb
mov
test
pop
and
shlb
xlat
xchg
pop
stos
jae
enter
in
jecxz
mov
cmpsl
xor
fldcw
push
stos
enter
mov
sbb
vandnps
das
pop
inc
jg
shl
sub
lods
jae
push
inc
decl
lsl
jne
jl
sbb
decb
xor
aas
xor
cmc
mov
mov
call
icebp
mov
mov
sub
sti
mov
add
and
dec
push
xchg
in
mov
in
pop
sub
in
lock
std
sub
mov
xlat
push
rorl
lods
mov
inc
out
adc
pop
dec
out
mov
test
aas
jbe
jmp
xor
jnp
and
inc
lret
sti
lahf
std
xchg
pop
push
pop
inc
jecxz
and
dec
jmp
movsb
jb
push
aam
icebp
les
leave
mov
jnp
jg
jmp
incl
lcall
ljmp
sahf
jecxz
add
adc
push
shrb
data16
ds
das
mov
outsb
decl
lcall
mov
sub
cmp
cld
jmp
jnp
ja
decl
cmp
loop
push
adc
aas
sub
jmp
mov
decl
popf
xor
xchg
adc
inc
scas
sbb
rcrl
popf
xchg
std
incl
or
sbb
in
or
out
out
push
jg
mov
fs
mov
dec
xorb
test
orb
push
sahf
js
add
das
xor
int
cli
clc
lods
adc
nop
imul
pop
xchg
mov
jle
repz
add
decl
lret
inc
cmp
icebp
xor
lock
cmp
sarl
movsl
cmp
mov
xor
or
xchg
cmp
cwtl
mov
pop
sbb
inc
and
cmp
push
orps
lock
cmp
mov
xor
aas
mov
rcll
out
xor
test
call
push
lahf
nop
mov
jbe
mov
cld
stos
scas
push
icebp
lock
jnp
es
in
push
jle
lcall
push
push
rcl
in
pop
xchg
gs
aad
and
call
rcll
sub
jb
xor
jle
push
xorb
test
mov
test
jg
pop
leave
aam
pop
sbb
aaa
push
jge
dec
ror
fs
rclb
iret
xor
das
mov
imul
mov
xchg
xchg
cli
adc
cmp
ljmp
js
in
aas
sbb
lods
and
pusha
adc
jg
ljmp
movsb
fsts
push
iret
aaa
sbb
pop
arpl
lcall
in
sbb
jbe
cmp
cbtw
aas
sub
mov
stos
push
push
jno
push
push
pop
call
jbe
push
or
mov
dec
push
dec
aam
inc
repnz
dec
loopne
decl
std
pushl
scas
add
xchg
xchg
push
cltd
ret
cwtl
mov
push
add
mov
fbld
aam
mov
cmc
mov
mov
jne
adc
fisubl
filds
sub
push
fs
cmp
outsl
aad
lcall
jmp
sub
dec
dec
mov
and
pushl
push
cmp
push
fcomps
mov
jnp
enter
jge
or
mov
mov
xchg
addl
jmp
sarb
roll
popf
jns
dec
push
add
add
mov
ljmp
mov
jle
ljmp
dec
push
push
push
mov
scas
std
into
shr
cmp
inc
push
xor
hlt
inc
push
mov
xchg
sbb
and
mov
jg
xchg
sub
xlat
les
xor
in
out
add
ljmp
and
aas
pop
repnz
stc
dec
cwtl
add
repz
test
es
incb
jmp
sub
jg
push
jne
ret
rcrb
cmpsb
pushf
jo
xchg
or
iret
mov
mov
sahf
ljmp
fadds
insl
or
orl
dec
outsl
jae
fnop
clc
ljmp
adc
dec
mov
test
les
clc
push
mov
and
lea
sbb
ljmp
insl
shrl
pop
ljmp
mov
cmp
outsb
or
cltd
out
pushl
push
xchg
loopne
cmp
dec
inc
push
sbb
sbb
hlt
cmpsb
jl
and
mov
pop
incl
or
gs
xlat
mov
cs
or
xchg
call
inc
incl
push
lahf
scas
xchg
into
movb
int3
or
inc
xchg
roll
cltd
es
jge
cmpsl
js
sahf
adc
mov
daa
leave
test
sbb
fldl
push
cltd
icebp
ljmp
data16
push
clc
pop
jae
aaa
mov
subl
or
js
mov
inc
shlb
dec
ljmp
push
out
inc
push
fnstsw
lock
lds
jo
cmpb
mov
cmp
icebp
mov
pop
mov
test
sarl
rclb
sbb
and
leave
sbb
in
ret
sub
and
sub
push
leave
int
add
pop
pop
ficompl
ljmp
mov
jno
in
lods
loope
and
sbb
pushf
push
adc
rcll
incl
sti
push
lret
in
cmovne
cld
fisubrl
rcrb
in
and
mov
test
xchg
ss
stc
jo
dec
call
inc
jl,pt
sbb
ret
loope
inc
in
sbb
loope
pop
and
and
sarl
mov
lcall
notb
xor
cmpsl
dec
mull
subl
repz
or
fistpll
mov
cld
xchg
push
push
rcrb
gs
pushl
cld
test
dec
cmp
popa
mov
shrl
stc
scas
pushf
out
sbb
gs
clc
push
inc
fldl
loop
iret
fnstcw
sub
mov
clc
sub
lcall
fsubs
inc
fwait
fwait
xlat
cmpsl
movsl
and
dec
in
test
jg
or
cmp
incl
adc
jne
adc
mov
icebp
out
jg
les
int
ss
xlat
pushf
lcall
into
inc
mov
mov
movsb
mov
decl
mov
ret
jmp
cmpsb
adc
shrb
dec
jecxz
or
arpl
cmp
jecxz
paddq
adc
push
insl
lcall
nop
out
fsubrl
lret
push
scas
scas
cmp
cmpsl
dec
cmp
or
xor
in
mov
popf
xlat
mov
icebp
inc
int3
fsts
or
addr16
adc
mov
mov
in
in
ret
decl
lock
cmp
pop
cli
stos
fs
sbb
mov
push
sub
popf
psubq
ljmp
repz
fwait
cld
jmp
popf
pusha
inc
sub
push
fwait
jno
pop
aas
jb
inc
pop
out
cli
pop
outsl
xlat
mov
rep
mov
dec
movsb
ret
mov
ja
dec
xchg
jg
mov
mov
call
jmp
loopne
or
lods
push
loope
xchg
sarl
mov
sti
jno
daa
xchg
cmc
push
inc
dec
das
mov
outsl
cmpsb
shrb
incl
jnp
dec
je
inc
dec
lods
cmpsb
push
sbb
lods
dec
jne
mov
push
test
and
jecxz
pushf
and
cmp
inc
jmp
inc
icebp
sub
movsb
xor
fcoml
sbb
lods
lahf
jmp
cmp
dec
je
sub
xor
jb
add
jmp
pop
xchg
adc
or
lods
jbe
hlt
ss
jae
out
cltd
mov
pushl
xor
mov
jp
mov
push
pop
sub
pop
adc
stos
inc
filds
notl
inc
adc
push
mov
push
adc
subb
insl
dec
shll
test
push
mov
dec
aaa
daa
jg
cmp
mov
ja
shl
aad
lcall
push
mov
sub
mov
bound
call
addl
lock
add
mov
pushl
push
jno
dec
and
mov
lcall
ja
aad
mov
jmp
sbb
xchg
mov
insb
add
sbb
leave
shl
xor
cmp
dec
iret
cmpsb
ljmp
xor
orl
xchg
cmc
sub
fs
pop
stc
std
fst
dec
add
fbld
pop
jle
cmpsb
sub
pop
cld
dec
dec
leave
div
pop
xor
pop
fstpt
js
mov
fwait
cmp
xchg
mov
jo
loope
push
push
jg
mov
push
sub
add
jle
xchg
or
sbb
sub
ljmp
ret
pop
lcall
and
icebp
xor
pop
in
cmp
lea
add
es
lcall
mov
jne
pushf
inc
add
lcall
lahf
pop
cli
mov
sbb
push
jb
mov
out
inc
mov
aas
cmp
mov
pushf
aaa
pop
cmp
arpl
add
fdivl
xchg
pop
out
gs
dec
shrb
inc
incl
xchg
xorb
lds
test
das
hlt
ret
scas
loopne
push
fistl
push
hlt
xor
arpl
scas
cwtl
stos
sbb
adc
popa
and
inc
add
jmp
cs
xchg
arpl
arpl
xor
lea
sbb
and
decl
xchg
inc
repz
leave
and
inc
sbb
jb
stos
imul
ljmp
inc
sub
es
outsb
aas
push
imul
incb
pop
and
cmp
loop
or
rclb
push
incl
push
or
dec
test
out
jnp
push
mov
mov
jnp
push
mov
adc
ljmp
sahf
push
arpl
sbbb
je
cmp
incl
into
mov
adc
jmp
and
outsb
lret
jp
movsb
or
ljmp
iret
mov
jb
inc
loopne
pop
sub
imul
out
add
incl
sub
subl
and
mov
sub
lcall
or
sbb
xchg
dec
aas
mov
inc
ja
push
mov
adc
movsl
fstpl
add
arpl
dec
cmp
jo
mov
bound
test
incl
lret
inc
sbb
test
and
jle
lcall
movsb
iret
les
jne
jl
pop
xorb
pop
outsb
xchg
fdecstp
push
shl
call
arpl
shll
jmp
pop
loope
xor
sub
loope
mov
mov
jmp
int3
stc
sahf
ret
subl
out
push
dec
sub
lret
insb
jns
mov
lcall
mov
mov
repnz
jp
xor
jle
lcall
pop
mov
xchg
fiadds
mov
pmaxub
popf
outsl
cli
push
jmp
pushf
push
sub
inc
lahf
outsb
dec
push
div
pop
rep
js
cmpsb
ljmp
and
push
fildl
jnp
leave
cmp
clc
push
mov
push
fsubrs
fs
xchg
mov
cmp
sub
out
ret
jmp
push
js
lea
xlat
outsl
out
pop
pusha
adc
jecxz
pop
push
dec
sbb
nop
data16
and
xchg
hlt
cmp
fistpl
ficoml
dec
xor
jmp
pop
mov
inc
pop
sub
jns
xor
mov
data16
rclb
enter
lock
iret
jge
mov
rcrb
push
push
in
jmp
rolb
mov
pop
pop
sbb
nop
dec
xchg
es
jg
sub
jnp
sbb
imul
popf
iret
inc
mov
imul
cmp
jnp
adc
pop
sub
xchg
xor
ljmp
push
sub
enter
jmp
dec
ljmp
ds
incb
pop
mov
jmp
cwtl
or
out
or
cmp
shrb
cmp
std
xor
cwtl
adc
xchg
out
out
fmul
adc
out
sub
out
out
xchg
bound
scas
adcb
dec
es
xchg
inc
outsb
les
mov
cmp
sub
xchg
push
jno
push
das
cli
mov
pop
jne
mov
jmp
je
fcmovu
push
ds
loop
xor
mov
fs
cltd
xchg
mov
test
int3
ljmp
bnd
jle
popa
int3
arpl
mov
push
call
fnsave
adc
movsb
sahf
cmpl
cmp
pop
cmc
fcmove
add
jp
int
rolb
mov
lcall
sbb
ss
cs
incl
in
ficoms
sub
cmp
jle
and
add
fildll
enter
mov
je
fdivrp
cmpsl
sahf
pop
xchg
inc
push
adc
add
push
inc
mov
mov
xor
or
adc
xorl
push
out
cs
adc
into
sub
pop
mov
mov
or
jo
cmp
sar
jge
cs
mov
ds
xchg
add
ja
dec
sbb
imul
lret
insl
push
and
mov
lods
mov
sub
das
ds
mov
inc
mov
inc
clc
pushl
hlt
mov
addb
adc
decl
xlat
stc
enter
stc
in
push
lds
push
sbb
push
loope
xchg
arpl
rolb
xlat
pop
mov
lcall
loopne
mov
mov
mov
popa
xchg
lods
mov
xlat
addr16
call
xchg
mov
imul
movsl
jb
inc
mov
inc
sub
mov
test
mov
pushl
in
ja
test
pop
lock
mov
xchg
pop
push
mov
clc
out
std
clc
sahf
out
fnsetpm(287
out
push
std
lcall
sbb
scas
out
icebp
push
inc
adc
mov
lea
jmp
pop
push
and
lcall
push
push
stos
out
xchg
fwait
arpl
pop
jge
cmpsb
stc
sub
push
outsb
dec
nop
lock
cli
sarl
mov
incl
or
movsb
ljmp
mov
repz
and
cmp
scas
jo
xor
pusha
andl
test
into
or
pop
dec
jg
insl
dec
mov
out
mov
cmp
daa
adc
mov
xor
add
js
inc
lods
push
out
lock
and
sar
incl
stos
loop
shrb
in
stos
cld
ret
cld
pushl
mov
sub
mov
dec
repnz
std
xlat
not
sbb
outsl
or
ljmp
aam
test
adc
lock
out
rcl
fdivrs
mov
inc
add
mov
fimuls
rcr
pusha
daa
xchg
xor
cli
and
mov
push
add
jnp
loop
js
adc
dec
sar
and
aaa
std
mov
cmpsb
clc
mov
nop
idivl
lea
or
add
out
pushl
mov
jae
pushf
leave
inc
fsts
mov
mov
ljmp
pop
mov
pushl
sub
ret
or
sub
in
xchg
add
or
adc
pushl
push
dec
fwait
dec
mov
xor
sub
aaa
mov
stos
sbb
dec
sbb
mov
and
jo
loopne
mov
jb
pop
ficoml
les
outsb
jmp
add
hlt
cmp
adc
adc
adc
inc
pop
jg
lock
scas
push
nop
dec
rorl
dec
xor
mov
or
or
fmull
xchg
cmpsb
mov
jmp
jns
test
jbe
jmp
sub
push
mov
fsts
xor
add
mov
sub
lock
push
fists
call
sbb
xor
cmpxchg8b
jnp
lea
cmp
std
popf
lcall
stos
sbb
mov
cli
mov
or
call
dec
xchg
es
cli
scas
dec
jae
stos
mov
dec
repz
ret
stos
and
sbbl
das
xor
mov
add
pushf
decl
push
xchg
fisubs
dec
cmpsl
out
inc
cld
pop
adc
dec
loope
push
testl
call
repz
pusha
arpl
jnp
dec
je
lret
aaa
shl
das
inc
lret
test
cmpsl
inc
dec
adc
add
call
inc
jns
sbb
xchg
mov
inc
fisttpl
mov
mov
lcall
repnz
bnd
pop
mov
decl
repnz
pop
and
sub
pop
paddb
inc
push
mov
mov
cmp
mov
ror
sti
jle
inc
test
mov
lods
push
fcompl
in
loope
repz
decl
inc
or
addr16
out
insl
enter
bound
sub
aaa
lcall
mov
std
jge
push
je
int
inc
insb
pop
push
movsb
cltd
push
adc
lcall
adc
mov
mov
dec
mov
mov
mov
call
pop
repz
in
mov
je
imul
mov
ficompl
cmp
or
add
aad
mov
lcall
xorl
mov
mov
or
inc
pushf
int3
or
lcall
aaa
mov
pop
sbb
sub
or
divl
sub
icebp
je
jg
push
sbb
inc
aad
fcmovbe
movsl
jecxz
leave
fimuls
sarb
xor
ret
mov
lcall
jle
push
fs
jbe
lods
push
loopne
jae
in
and
jbe
xchg
pushl
cli
add
push
xchg
lods
cmpsl
dec
mov
inc
cmp
sbb
jg
incl
movsb
aaa
stos
xchg
daa
imul
scas
adcl
lods
dec
shlb
incl
jmp
into
or
mov
sbb
dec
jno
lret
pushf
or
test
pop
dec
jae
rorb
filds
mov
inc
jbe
or
push
mov
xchg
clc
nop
inc
filds
fisubrl
mov
pop
pushf
hlt
enter
out
pop
inc
fistps
inc
jmp
in
mov
mov
mov
lods
cmp
ljmp
shl
int3
add
sbb
xchg
inc
sbb
jp
mov
rol
es
ret
inc
push
dec
or
sub
mov
add
lea
pop
xchg
jb
and
decl
sbb
jbe
jb
mov
jp
sbb
std
ljmp
pusha
mov
xor
cmp
cwtl
insb
ds
cmp
movl
sub
xchg
mov
pop
in
decl
js
xor
fdivrl
mov
xchg
addr16
fistpll
idiv
bound
sub
mov
jb
xchg
test
inc
insb
ljmp
dec
and
jecxz
fst
incb
orl
lea
aaa
mov
mov
jno
icebp
scas
inc
popf
push
addl
or
mov
or
pushl
jecxz
dec
aam
add
adc
inc
jg
and
jbe
cmp
fnsave
hlt
aam
call
jae
add
mov
mov
es
mov
xor
int
jmp
xchg
cmp
xor
jl
sar
fdivl
cmp
sub
mov
sbb
xchg
inc
jge
adc
call
in
lods
xchg
lods
cmpb
add
nop
aam
daa
cmp
add
lcall
pop
stos
lock
mov
sbb
cmpsl
cmp
jbe
xor
iret
loope
fildll
incl
jl
loope
pop
pop
js
sbb
aam
xchg
in
leave
sub
inc
mov
pusha
xchg
insl
sub
in
mov
pop
mov
and
nop
cmp
call
xor
mov
pop
adc
mov
loop
pop
mov
jae
cwtl
mov
notl
call
dec
push
push
jp
stc
pop
or
mov
dec
loop
xchg
cmc
test
jno
xlat
paddd
decl
and
imul
or
repnz
insb
push
bound
lahf
popa
std
call
push
arpl
xchg
mov
sbb
inc
shll
push
jbe
daa
scas
pop
xlat
out
jg
pushl
nop
adc
mov
lea
mov
pusha
aam
rorl
pushl
movsb
sub
adc
mov
jp
int3
ficomps
decl
lahf
push
xchg
rclb
cli
divl
sub
xlat
jns
fcoml
jge
jo
cmp
pushl
mov
imul
scas
repz
pop
xor
and
pop
idivl
pop
loop
sahf
push
inc
push
mov
fsubp
pop
lcall
das
pop
lods
fistpl
pop
mov
fstpl
pop
cmp
xchg
jl
stc
adc
iret
mov
jg
fadds
movsl
and
outsl
pop
sub
popf
dec
xor
cwtl
ss
ljmp
xor
mov
outsb
test
xrelease
dec
fildll
outsl
mov
xor
lcall
jp
fs
and
or
xor
push
push
xlat
inc
pop
repz
mov
out
adc
ja
mov
mov
and
mov
or
cli
jp
pushf
mov
pop
hlt
or
popa
lret
hlt
cwtl
fistps
jnp
in
inc
sub
imul
fcos
lcall
pop
negl
jo
iret
stos
test
sub
enter
xchg
xchg
outsl
mov
xchg
push
mov
pop
mov
mov
mov
xchg
out
outsb
sub
mov
fildl
add
mov
clc
repnz
mov
call
imul
leave
mov
loope
arpl
and
das
cwtl
pop
loopne
push
push
pop
sub
cmp
jge
inc
lcall
dec
lock
or
lret
or
pop
mov
sti
shll
ss
incl
push
xor
push
sbb
xor
je
add
scas
fisubl
pop
movsb
js
push
push
insl
movsb
cltd
dec
xchg
or
inc
bound
jp
fisubrs
out
loopne,pt
cmp
jmp
rol
call
in
xor
sbb
dec
xor
lea
xchg
jnp
cmpl
call
rorb
in
aad
insl
xchg
jge
jmp
aam
push
mov
adc
scas
fcos
decl
mov
sbb
mov
mov
repz
test
lahf
jo
mov
ds
clc
aaa
mov
sbb
push
xchg
arpl
call
push
out
rclb
adc
xor
push
sbb
leave
mov
je
ret
shlb
xor
jmp
cmpsb
push
aad
mov
cmpsb
fidivl
cld
push
aam
sar
inc
push
das
lock
adc
stos
xchg
jbe
pop
fs
filds
loope
lea
xchg
lcall
popa
jecxz
into
decl
lods
cmp
mov
xor
mov
into
sub
or
orl
inc
incb
pop
or
aad
clc
cld
jns
add
xor
lahf
lds
bound
hlt
mov
jle
es
cmp
stos
fdivrp
add
aad
out
push
jg
pushf
jne
mov
inc
fwait
add
fimull
or
mull
incl
scas
rolb
movsb
adc
add
add
sbb
add
sti
adc
ljmp
or
into
push
filds
rcl
mov
jecxz
sbb
mov
lcall
xchg
ss
gs
insl
pop
call
cmp
scas
addr16
insl
in
in
jp
aam
enter
jb
xchg
rcrl
out
aad
lock
loopne
jns
jl
dec
push
out
jp
lcall
sub
cli
stos
push
add
mov
mov
or
incl
add
rcrl
out
shlw
push
adcl
call
pop
or
and
int3
pop
xchg
push
out
mov
mov
sub
cs
inc
cmp
lods
pop
mov
nop
andb
or
fdiv
mov
xchg
leave
cmp
jg
sahf
cli
jg
aaa
inc
and
jle
sub
sub
mov
and
aas
je
xor
mov
les
add
leave
mov
pop
lea
das
cli
ljmp
pushf
pop
mov
addr16
xor
pop
daa
dec
jl
sub
pop
hlt
test
lea
shll
pop
outsb
cmpsb
fs
fsts
mov
shll
dec
or
jmp
mov
jo
and
inc
loopne
fcoms
adc
int3
xchg
push
sahf
out
repz
pop
popa
in
pop
lret
add
add
lahf
iret
mov
lods
loope
out
inc
mov
stos
cmpsb
xor
loopne
sbb
outsl
push
pop
addb
nop
xchg
push
mov
ret
lcall
pop
inc
cmc
push
rep
push
mov
xor
or
xchg
pop
cs
sbb
pop
sbb
add
xchg
sbb
decl
jecxz
in
push
mov
jle
lcall
js
dec
call
jns
push
in
push
push
fists
loopne
sub
icebp
lds
xchg
loopne
test
std
orl
incl
mov
jmp
cmp
lods
nop
sbbb
out
inc
inc
mov
movb
jp
adc
pop
aas
in
sub
rorl
shll
and
mov
es
add
and
es
or
sarb
test
mov
data16
pop
cmp
jg
mov
mov
sub
push
jge
int3
pop
pop
scas
adc
jne
inc
jp
jmp
call
sub
xchg
mov
pop
xchg
and
cmp
xorb
push
dec
push
push
cld
sahf
shr
js
adc
sub
jg
xchg
pop
hlt
mov
lds
inc
idivl
cltd
and
or
stc
sbb
push
pop
mov
sahf
icebp
cmp
xor
js
icebp
xchg
repnz
je
xor
scas
pop
jle
push
cmp
and
stos
cli
xchg
mov
test
scas
pop
push
mov
push
sahf
push
jg
nop
movsb
inc
push
cmp
adc
pop
pushf
and
sbb
jp
mov
xor
xchg
cmpsb
decl
fnstcw
mov
cvtpi2ps
cmp
pusha
mov
xlat
ljmp
ss
mov
pop
xchg
lock
int
shrl
outsl
fiaddl
loope
icebp
imul
aad
test
pusha
sbb
add
inc
je
js
ljmp
testb
cmp
popf
push
fildl
jecxz
mov
das
or
sub
arpl
dec
cmp
leave
push
int3
test
jmp
push
aas
mov
pop
sbb
and
xchg
cmp
or
pushf
jle
pop
ljmp
clc
jg
cli
push
and
imul
incl
call
cmc
inc
test
push
jne
lret
jae
insl
sub
int3
fildll
xor
push
jo
mov
dec
arpl
pop
cmpl
lcall
or
jmp
leave
ret
mov
test
push
int3
les
mov
movsl
inc
jecxz
add
and
xor
and
jp
push
add
xlat
fidivl
jno
cmc
sar
call
push
push
rorl
mov
testb
sahf
mov
cld
movsl
fstpt
pop
jge
sub
push
xchg
adc
xchg
sbb
leave
and
pushl
iret
lea
repz
mov
and
mov
inc
fistps
stc
mov
xchg
imul
sbb
xor
adc
ljmp
jne
sub
psubsw
xchg
pop
and
popa
jne
push
push
xchg
call
jp
es
cmp
push
dec
int3
jp
sti
pop
add
and
xor
ret
pop
lret
xor
popa
ret
std
xchg
sbb
xor
dec
jg
mov
aaa
mov
add
sti
sbb
or
imul
decl
mov
mov
sbb
imul
lcall
and
fildl
insb
pop
xchg
dec
xchg
sbb
popfw
jmp
fldpi
pop
testb
lahf
in
xchg
out
incl
and
push
jbe
or
and
mov
test
fisubrs
inc
jne
add
add
mov
clc
stos
jns
xchg
add
stos
stc
jb
jae
rcrl
in
outsl
cmp
sbb
lea
adc
cmp
daa
xchg
adc
icebp
pop
movsb
iret
xor
cld
push
clc
or
aad
andb
mov
push
test
mov
fsub
es
inc
imul
sbb
loope
jle
mov
rclb
mov
mull
ljmp
and
test
add
int
sbb
push
decl
movsl
cmc
andb
mov
je
lret
imul
sbb
sbb
subl
cmp
adc
jne
sbb
test
lods
ljmp
call
pop
cmpb
inc
add
xchg
mov
mov
jmp
dec
insl
jo
pop
xor
insb
aam
les
push
imul
push
scas
repnz
in
ret
dec
lds
fmulp
ficompl
das
test
dec
ljmp
and
jns
mov
xor
je
dec
outsl
insb
jno
fistpl
cmp
jne
dec
pusha
push
popa
mov
scas
inc
sbb
adc
mov
js
and
mov
sti
das
xchg
inc
jp
cmp
pusha
lds
add
sub
push
incl
mov
bound
adc
out
test
dec
outsl
cld
aam
mov
nop
sar
pushl
sub
pop
aad
xchg
or
lret
dec
push
mov
add
inc
cmp
sbb
xor
sub
lahf
jnp
adc
jg
dec
mov
fadds
int
add
dec
rcrl
call
push
push
rclb
and
out
ror
lcall
push
cmp
call
jns
ret
lock
cmp
mov
decl
test
push
adc
shrl
into
cmp
ljmp
sar
fs
xor
sub
dec
mov
jmp
adc
stc
je
xchg
sti
out
sahf
pop
push
data16
adc
or
lcall
adc
lahf
out
pushf
in
addl
js
adc
xor
jmp
mov
sub
pushl
dec
xor
push
or
fistl
loop
hlt
scas
fcomip
dec
or
in
js
decl
pop
fstpl
mov
inc
cmp
nop
popa
fdivl
xor
xor
lcall
stos
cmpsl
cwtl
nop
adc
cmp
add
pushf
mov
out
mov
add
xor
mov
fisubrl
lcall
xor
je,pt
inc
push
call
testl
jg
fldcw
adc
or
mov
loope
pop
mov
mov
cmp
lods
mov
inc
mov
ret
jmp
dec
test
jo
mov
add
cltd
imul
mov
or
or
dec
in
aaa
lods
incl
xor
clc
daa
mov
aas
add
stos
gs
mov
daa
in
mov
in
mov
call
nop
jecxz
xchg
xor
xor
push
sub
or
mov
std
pushl
clc
cmp
and
les
test
subb
sbb
inc
inc
lea
mov
nopl
mov
mov
push
add
incl
xchg
scas
mov
dec
adc
mov
stc
roll
jg
fsts
fbld
cs
cld
stos
jb
gs
pop
or
add
cli
call
jl
repnz
cld
in
xchg
mov
lahf
cmp
mov
scas
sar
out
ret
or
xor
mov
pop
out
aam
cmpsl
jp
out
add
movsb
idivb
add
call
push
sub
mov
out
mov
xchg
mov
sbb
addl
popa
mov
pop
inc
out
addr16
loop
mov
xlat
inc
push
fs
shl
cwtl
inc
inc
inc
mov
mov
repz
sar
dec
jmp
jecxz
push
shrl
or
xchg
jo
mov
sub
lods
sbb
or
in
adc
jle
subl
push
aas
inc
ret
pusha
push
sbb
xchg
popl
xchg
jl
inc
roll
adc
scas
call
inc
in
scas
ss
fisttpll
add
das
push
les
add
or
test
ljmp
jns
insl
xchg
mov
fs
repnz
test
dec
sub
add
xor
call
andb
jge
xchg
pusha
cli
jae
adc
cli
xor
lret
decl
lcall
roll
imulb
lods
pop
mov
pushf
neg
pop
sar
jmp
mov
subl
mov
popa
sbb
sbb
mov
loope
or
cmp
jo
aaa
stos
jl
out
and
enter
aaa
adc
jmp
adc
imul
xchg
pushf
fcom
jo
sub
decl
scas
fdiv
and
lods
lahf
repnz
inc
adc
lea
and
stos
cmpsl
adc
mov
js
out
prefetch
sbbb
scas
sbb
jg
inc
xlat
lock
push
cmp
in
xchg
fbld
int3
nop
lock
inc
cmp
sbbl
jge
fcompl
rclb
fwait
mov
inc
incl
adc
inc
mov
call
lahf
dec
push
orl
outsl
push
decl
lea
inc
cwtl
add
pop
push
jno
dec
lock
jl
mov
mov
pop
cltd
dec
inc
xor
jle
mov
cmpsl
push
push
pop
adc
ret
jmp
jns
cmpsl
add
mulb
mov
and
lds
jg
xchg
sbbb
js
push
dec
mov
add
pop
sub
iret
jae
shlb
xchg
add
jnp
ret
and
mov
pop
and
push
xor
movsl
mov
shll
mov
mov
push
sub
lds
cmc
pop
sbb
inc
mov
jg
pop
mov
fs
cmp
repnz
mov
mov
mov
divl
daa
test
subl
aam
incl
lea
mov
fwait
dec
or
pop
fimull
mov
outsl
xor
ret
mov
cmpsl
lcall
pop
cwtl
pop
test
sub
mov
cmc
gs
inc
adc
push
add
jp
adc
push
cmp
mov
popa
mov
movsb
push
les
pushf
pushl
ss
cld
pushl
xchg
stos
pusha
dec
add
pop
xor
sub
fisttps
mov
jg
mov
pop
loopne
shlb
lahf
mov
lcall
lods
mov
sub
mov
aad
call
push
or
add
sub
into
movsb
mov
popf
loopne
out
mov
and
xchg
mov
mov
lahf
rcl
push
adc
mov
and
pop
out
xchg
test
cs
in
adc
out
repz
pushl
cmpsl
mov
pop
insl
das
scas
push
add
pop
jge
cmp
decl
xorb
or
decl
stos
loopne
div
push
cld
adc
adc
scas
mov
arpl
jmp
ljmp
lret
pop
fwait
into
xchg
enter
push
sahf
aad
inc
mov
xchg
rorb
inc
lods
push
pop
scas
clc
outsb
dec
out
lods
jbe
pop
lcall
mov
sbb
xchg
dec
test
jno
dec
in
fcomip
ljmp
dec
push
pushf
mov
popa
jecxz
or
adc
divl
dec
push
inc
bound
in
cs
pushl
std
jo
cltd
nop
clc
cmp
dec
dec
sbb
mov
hlt
lahf
sbb
in
jp
push
popa
sub
rorb
dec
jecxz
jne
test
mov
pop
cmpl
js
je
in
out
clc
outsl
cmpsb
xor
pop
or
imul
test
mov
aam
or
aaa
inc
cmp
loope
loopne
jmp
rcll
movl
imul
repnz
out
enter
mov
lcall
bnd
xchg
addr16
xchg
adc
cmpsl
sahf
lcall
out
xor
rcr
sub
and
sbb
test
repz
sub
jle
dec
loop
decl
in
or
popf
pushf
push
xchg
push
mov
test
push
xchg
lods
imul
loopne
jb
lcall
and
xor
nop
push
push
mov
out
fs
inc
mov
sbb
scas
clc
call
xchg
or
or
or
lods
insb
cmp
jmp
jb
das
in
xchg
outsb
arpl
dec
adc
pop
dec
adc
test
ljmp
push
cmp
call
xor
pop
or
imul
imul
push
imul
scas
xlat
mov
insb
imul
dec
test
pop
mov
ljmp
pop
out
mov
mov
mov
adc
jae
outsl
add
pop
call
mov
push
shl
or
inc
out
jbe
fstps
jp
mov
insb
dec
jl
xchg
cmp
mov
pop
sbb
aaa
xchg
leave
cmpsl
mov
sbb
shl
into
popa
incl
adc
icebp
or
aam
dec
sub
add
sub
sti
mov
jmp
outsb
mov
idivl
cmpsb
pop
fsubs
add
cmc
push
decl
and
fstp
je
inc
fstp
or
cld
loop
rcrb
xor
jg
jne
in
mov
sub
fstl
int3
mov
lahf
sbb
ud0
lcall
sbbb
out
mov
xchg
cmc
inc
push
push
insl
pop
xchg
inc
insb
sbb
incl
mov
mull
xchg
cs
pop
xor
xchg
jne
or
frstor
sub
xchg
xor
push
das
clc
sarl
add
in
inc
inc
xlat
cwtl
push
jno
add
or
aad
cld
or
jmp
aad
bound
decl
cmpsl
jmp
insl
adc
out
cli
jmp
mov
lock
pusha
jecxz
mov
aad
push
pop
cmp
sub
notb
inc
or
mov
jp
ss
stc
call
and
in
movsb
pusha
loope
sbb
pminub
add
jecxz
jmp
mov
cld
xor
loopne
push
cmp
icebp
nop
push
jp
and
ret
jns
jmp
inc
pop
mov
jb
push
or
jmp
mov
add
dec
bound
mov
sbb
cmp
stc
push
pusha
jg
sub
in
adc
iret
mov
add
push
fcoms
add
popf
or
icebp
data16
jne
lods
add
bound
incl
mov
in
mov
cwtl
adc
fistpl
jmp
and
sub
loopne
sar
lcall
test
xor
push
pop
pop
mov
jnp
adc
inc
dec
aad
jmp
ljmp
test
out
jle
sub
enter
mov
call
sbb
jb
in
data16
mov
mov
std
mov
add
pushl
ljmp
orb
or
test
xchg
pop
or
push
call
mov
mov
mov
aad
shlb
mov
and
xchg
xor
push
mov
jns
mov
xor
loopne
popa
cmp
ljmp
test
jbe
mov
dec
xchg
loop
add
dec
popf
inc
fcmovbe
push
mov
cli
mov
arpl
cmpsb
add
popf
add
aam
mov
lcall
leave
xor
push
lock
jbe
sarb
xchg
jae
push
in
xchg
xchg
gs
es
ficompl
jne
movsl
fistps
cmc
hlt
shlb
jmp
jnp
xchg
out
cmc
scas
hlt
or
das
pop
int3
clc
mov
jnp
sti
mov
lret
repnz
incl
jle
jns
dec
inc
imul
fs
cmpsl
xor
mov
lods
dec
aas
sti
inc
call
cmpsl
cld
add
addr16
adc
add
inc
call
nop
jmp
mov
ljmp
pop
mov
nop
dec
shlb
jp
xchg
aas
and
jmp
push
xchg
shll
mov
ljmp
xor
adc
pop
xchg
ror
xchg
jns
sarl
push
xlat
test
call
mov
sub
jnp
popf
mov
popf
dec
adc
ds
mov
lods
add
push
cli
mov
push
addl
icebp
dec
fcoml
sbb
push
inc
sbb
ss
insb
cli
push
loopne
call
xor
cmpsl
cmp
iret
popa
movsb
xchg
xchg
jo
push
divb
outsl
jp
mov
pop
mov
push
dec
les
and
pusha
push
jl
cmpsb
dec
inc
dec
pop
ljmp
lcall
bound
scas
mov
mov
outsb
cmp
pop
pushf
shr
dec
push
ljmp
cmc
push
mov
out
push
call
xor
movsb
add
js
lret
adc
jg
popa
sbb
jmp
cmp
pop
lock
fidivl
clc
sahf
push
iret
mov
imul
in
jne
push
fisttps
fmulp
stos
fdivrs
xor
inc
add
jmp
or
pop
mov
ljmp
ljmp
push
lods
pop
pusha
sbb
loop
aaa
jecxz
call
xlat
ss
repz
inc
sbb
xchg
jecxz
jle
and
call
mov
sbb
adc
addr16
stos
xchg
add
fwait
daa
mov
inc
ljmp
mov
push
addr16
pushl
adc
sbb
inc
lock
int3
mov
insb
adc
fstps
cmpsb
cmp
cmpsb
inc
jae
xchg
iret
push
push
mov
fucom
into
ds
dec
cli
fwait
mov
rolb
es
clc
and
push
sub
decl
imul
test
loop
ret
stos
popa
adc
clc
incl
sbb
jecxz
mov
call
fdivr
stc
andb
adc
loopne
ret
ja
cltd
mov
push
and
call
stos
inc
add
js
sbb
loop
aas
and
fidivl
pop
lcall
pushl
mov
das
lock
es
ret
hlt
stc
or
je
lcall
inc
scas
fisttps
jo
mov
jo
add
int3
es
ljmp
ja
pop
mov
orb
dec
adc
mov
leave
mov
jo
jo
adc
in
push
aad
sbb
cwtl
dec
sub
push
inc
xchg
fwait
adc
push
scas
div
seta
dec
dec
jb
jmp
xchg
les
sbb
mov
push
pop
icebp
ds
adc
xchg
loopne
mov
mov
cli
mov
inc
test
lock
xor
mov
fistpll
int
movsl
ret
test
cmp
ljmp
push
lret
ljmp
decl
ljmp
inc
jge
pop
pushf
sbb
nop
pop
jecxz
cld
push
cmc
dec
and
fnstsw
or
xchg
insb
xchg
out
fs
mov
ror
aaa
out
aaa
sub
in
test
push
push
loope
push
add
adc
jo
inc
int
mov
jg
jle
aas
clc
mov
sbb
shrb
sub
fnstcw
or
or
negb
or
mov
decl
mov
add
ljmp
or
call
pop
loope
dec
and
les
mov
sub
outsb
mov
incl
xor
cld
in
dec
rcll
cmc
jae
std
inc
xchg
jne
sahf
pop
lods
pop
cmp
cli
and
decl
or
xor
mov
cmc
adc
mov
cmp
and
pop
decl
adc
dec
mov
aam
jae
xor
lds
subb
jp
xor
mov
ret
out
lcall
sub
xorb
sub
movsb
lock
mov
aad
mov
mov
int3
push
mov
fdivrs
sti
cmpsb
fbld
add
sub
call
les
cli
jne
imul
aad
mov
pushf
jae
push
cmp
push
pop
fstpt
add
js
dec
lods
ret
aaa
xchg
fists
cmp
mov
decl
lahf
dec
adc
mov
dec
xchg
xchg
lret
push
movsb
lock
inc
aam
xchg
dec
lea
in
icebp
shl
xor
sti
js
inc
sbb
not
xor
clc
notb
cmp
fldenv
dec
sub
mov
and
cmp
mov
mov
or
mov
ja
ds
jbe
mov
daa
fdivl
add
notb
cmp
pop
lahf
fs
nop
test
dec
into
adc
mov
xor
mov
jmp
cmp
iret
sub
imull
pop
sub
sbb
or
cmc
lahf
fsubp
adc
pushl
fdivrs
cmp
push
xchg
repnz
jmp
push
pop
mov
xchg
sarb
inc
xor
push
shl
push
ret
mov
mov
cmpsl
xchg
push
adc
aas
adc
xchg
jge
or
fmuls
mov
sbb
incl
lret
ret
roll
daa
into
pop
or
insb
incl
cmp
adc
lods
lea
mov
rol
sbb
dec
arpl
and
movsl
incl
sahf
jmp
xchg
jo
cwtl
or
mov
cmp
pop
popf
lret
adc
inc
call
fcomp
cmp
mov
cmpb
and
mov
jmp
in
mov
pop
ja
jmp
insl
mov
push
or
mov
adc
sub
adc
sub
dec
cmp
jae
enter
mov
mov
or
outsl
mov
fsts
cmp
pushl
js
inc
lods
mov
into
test
scas
mov
lock
imul
lret
lock
xchg
in
imul
decl
pop
adc
push
test
cmpsl
rolb
xor
divl
xchg
push
xchg
sub
fbstp
imull
cmpsl
or
xchg
jbe
mov
mov
int
inc
lcall
jmp
ss
cld
das
cli
jmp
fwait
pop
push
fiaddl
aam
adcb
inc
es
adc
xchg
jmp
xchg
fucomi
sbb
jb
pushl
add
insb
push
aad
data16
jmp
mov
dec
cmp
aad
jg
sub
mov
ss
in
mov
mov
pop
imul
jp
inc
jg
outsl
pop
inc
in
frstor
pop
sub
adc
inc
jl
insl
xchg
addr16
lret
aam
pop
sub
shlb
or
fnstcw
mov
clc
pop
popa
loopne
les
clc
or
movsb
or
pop
xchg
ljmp
push
aaa
cmpsl
dec
xchg
enter
pop
std
test
dec
cmp
sub
test
loope
sub
jmp
pop
cmp
mov
jecxz
insb
ja
ja
aam
xorl
inc
arpl
out
int3
pushl
jae
pop
dec
leave
les
sarb
xchg
sub
inc
xorl
das
cli
ljmp
ss
mov
pusha
scas
dec
imul
ljmp
mov
push
std
daa
mov
or
stos
mov
les
pop
or
lcall
cwtl
repz
mov
push
add
es
mov
push
rcr
pushf
add
cmpsl
push
ja
popf
mov
sub
jne
decl
xor
sub
jg
cmp
and
push
xor
outsl
fistps
scas
xchg
test
cmp
dec
sbb
or
cmp
lock
call
pusha
mov
push
and
mov
pop
int3
mov
daa
loope
mov
adc
decl
pop
push
or
xchg
shl
jl
pop
xchg
aas
cmpsl
gs
data16
pop
xor
sub
psrlw
xor
mov
dec
pop
movsb
fisttps
jnp
aas
sbb
shlb
repnz
addl
lea
mov
lock
stc
push
push
cld
push
scas
out
into
lret
data16
jne
lods
or
das
cli
pushl
les
lods
lret
dec
mov
in
into
daa
outsb
mov
incl
js
in
push
mov
mov
jnp
arpl
fsub
mov
movsl
call
push
cmc
dec
dec
and
jg
or
cmc
xchg
sub
bound
pushf
gs
sbb
fcomps
pop
sti
movsl
inc
pop
jae
mov
addr16
and
ss
aas
xor
xchg
push
jmp
mov
push
pop
xor
xor
mov
inc
jmp
xchg
cmpsb
pop
in
rclb
faddl
pusha
nop
fistl
jmp
xchg
mov
mov
jge
adc
or
cmpsl
fsubl
aam
jnp
dec
bound
mov
sub
decl
addb
and
mov
cli
inc
js
lcall
mov
incl
mov
call
jbe
sub
mov
pusha
mov
pop
push
addb
sbb
xchg
lods
rorl
and
loope
fwait
adc
ljmp
rcr
xor
xchg
enter
xchg
sbb
dec
jg
mov
idivb
push
add
leave
scas
call
xor
mov
or
xchg
test
jb
push
popa
sbbb
lds
cmc
subl
push
mov
ljmp
push
insl
or
hlt
jbe
dec
mov
sbb
sub
sbb
call
hlt
sbb
aam
inc
out
ficoms
scas
mov
push
ret
test
aam
hlt
dec
out
dec
hlt
stc
lahf
cltd
mov
pusha
add
adc
dec
mov
mov
mov
push
xor
ljmp
orl
out
in
test
lcall
dec
test
lret
sub
scas
push
sahf
adc
and
lcall
aam
shlb
add
fs
xor
cmp
dec
pop
aad
lcall
or
adc
dec
shll
movsb
mov
imul
lret
and
ss
jg
sub
sbb
aad
mov
adc
scas
jge
aam
pop
or
vmwrite
inc
pushf
or
adc
test
repnz
insl
pop
ljmp
jp
push
scas
popf
jle
rcll
inc
jg
jmp
pop
sbb
clc
and
fdivrs
in
jg
adc
sub
cld
clc
bound
ss
sub
fsubs
cmpsb
adc
jmp
inc
incl
inc
adc
dec
push
or
call
jmp
mov
push
imul
fsts
add
jg
xchg
or
cmc
mov
sbb
loop
push
ljmp
xchg
test
pushl
jp
les
repz
jne
gs
out
insb
arpl
sub
jg
stos
and
pop
subl
lahf
std
cmpsb
test
mov
loope
mov
pusha
mov
loop
or
ss
mov
aas
inc
and
and
into
and
mov
aad
sbb
dec
das
sar
roll
pop
ret
pop
sub
lahf
daa
lret
push
nop
mov
popa
cmp
push
decl
ffreep
shrb
pop
mov
cltd
movb
mov
cld
scas
adc
popf
pop
mov
aad
dec
jae
in
and
hlt
push
mov
out
clc
lea
movsb
xor
xor
in
pop
addr16
mov
xor
mov
aaa
scas
bound
movsl
aaa
jne
sarb
insb
movsl
lock
in
xchg
scas
mov
in
fstpl
lds
movsl
incl
sub
or
dec
fs
jl
rcl
cmpsb
cmp
inc
push
mov
xlat
xor
and
lcall
dec
ds
push
push
mov
mov
jge
and
sub
vprotb
xchg
rolb
cmp
mov
or
lret
imul
pushl
mov
mov
add
lahf
ror
hlt
adc
fcoms
ljmp
jae
pusha
loop
mov
xchg
cmpsb
xchg
into
or
test
incl
mov
out
dec
dec
xor
mov
cmpsl
lahf
in
xor
lret
pop
mov
adc
dec
sbb
mov
cmp
pop
pusha
sbb
dec
aad
sbb
xchg
jp
out
clc
ljmp
cwtl
or
push
or
adc
cmp
mov
adcb
mov
dec
xchg
fidivs
ljmp
jp
sbb
add
icebp
es
mov
test
je
insl
ret
xor
jne
or
mov
or
jg
in
es
fisubl
call
divb
lods
mov
call
repnz
je
mov
mov
inc
lock
clc
ss
in
mov
incl
and
das
or
mov
push
movsl
mov
test
aam
vmread
cmc
nop
sbb
push
addr16
xchg
sub
popf
mov
cmpsl
cli
mov
icebp
scas
je
adc
push
nop
aaa
jbe
out
xor
ljmp
cli
out
sbb
add
xchg
jecxz
push
shl
fcompl
outsb
jl
or
pushl
or
mov
imulb
sub
outsl
cli
mov
xlat
aas
mov
cmp
lods
push
fimuls
fimuls
insb
mov
mov
and
jp
clc
sbb
scas
jnp
adc
or
scas
lock
call
loopne
xchg
pusha
stos
aad
addr16
ss
pop
test
pop
dec
add
dec
sub
push
loop
jle
js
outsl
xchg
outsl
mov
lock
xor
lret
mov
xlat
int
scas
jg
mov
jl
lret
mov
pop
xor
and
call
jmp
sahf
inc
test
in
cmp
jne,pn
pop
lods
cmc
ud0
jmp
pop
pushf
hlt
xchg
jge
pop
cmpsl
mov
fsubs
push
xor
push
jmp
enter
cmpsl
test
xchg
sti
xor
aas
rcrl
dec
push
push
addr16
mov
inc
cmpb
mov
mulb
fwait
add
and
pop
dec
mov
out
flds
mov
movb
xchg
adc
xchg
adc
ljmp
insb
push
push
ljmp
xchg
add
inc
mov
push
mov
hlt
add
or
xchg
pop
mov
out
neg
xlat
dec
lock
ret
aam
movsl
inc
nop
cmp
ds
incl
int
lock
mov
idivl
and
adc
into
cpuid
out
xor
jo
clc
fstp
fsts
fidivs
jle
sub
jp
test
fisttps
push
xchg
push
sahf
inc
or
scas
add
mov
mov
subb
int
push
fucomp
push
testb
jmp
andl
in
in
xor
adc
and
cmc
lret
icebp
iret
loope
xor
cmp
andl
insl
leave
jns
mov
sti
int3
clc
mov
xchg
and
shll
decl
add
lods
push
dec
xchg
icebp
sub
inc
roll
shl
out
inc
sub
call
cli
lods
inc
and
les
out
sbb
fbstp
cli
popa
lcall
or
cli
enter
lret
push
and
sub
push
push
movsl
xchg
in
sar
js
mov
jmp
shrl
js
test
add
push
xchg
cs
es
in
inc
ljmp
inc
sub
push
cld
movsl
test
jmp
mov
mov
inc
cmpsl
imull
test
push
mov
sti
loopne
call
dec
mov
dec
mov
rorl
mov
sub
mov
lds
pushl
inc
mov
mov
cmp
movsl
jge
dec
push
pushl
ja
js
cld
dec
lods
addl
icebp
dec
sub
cli
lret
push
rcll
jmp
adc
imul
sbb
push
push
jmp
jbe
mov
sbb
call
movsl
lods
roll
aas
jecxz
js
popa
cmp
pop
add
inc
pop
test
ds
shlb
call
xchg
inc
mov
fs
xchg
mov
push
insb
jbe
mov
out
out
mov
sahf
push
into
or
fdivrl
mov
ja,pn
fwait
clc
pushl
aam
leave
int
into
out
lods
pop
lea
mov
mov
mov
push
inc
add
popa
daa
or
inc
outsb
sahf
inc
dec
xor
lods
mov
cli
call
xchg
out
fsts
daa
cmp
jns
out
inc
pop
jle
repz
xor
xchg
dec
push
out
adc
adc
scas
pop
xchg
mov
mov
sbbb
jle
mov
ss
dec
popa
xchg
lcall
call
mov
adc
in
pop
dec
out
enter
dec
in
cld
cs
dec
inc
xchg
ret
push
pop
pop
add
inc
mov
or
jg
cmpb
leave
enter
out
pop
sbb
jne
jmp
test
out
js
lods
arpl
pop
or
dec
pusha
test
cmp
mov
loop
aam
mov
sbb
xchg
push
ret
ret
fcomps
jno
ja
rcl
mov
movb
jbe
pushf
sar
ja
ret
mov
jg
pop
cmpsl
or
jmp
fadds
xchg
outsl
xor
into
mov
mov
dec
add
mov
xchg
call
gs
lahf
out
cld
lds
dec
fists
dec
pop
cmp
aad
jg
lods
shlb
cmp
in
shlb
xchg
pop
lret
mov
test
xchg
fldt
push
ss
mov
and
xchg
into
jmp
loopne
inc
sub
adc
aaa
mov
pop
pop
sub
lcall
mov
adc
ret
jmp
xor
dec
daa
adc
or
loope
test
out
jns
outsl
insb
xchg
js
jmp
sbb
pop
mov
dec
mov
aaa
aaa
push
mov
xchg
cwtl
daa
mov
dec
dec
incl
addr16
inc
popf
pop
into
mov
ljmp
sub
mov
mov
loope
call
out
rclb
repnz
adc
add
sbb
decl
cmp
xchg
pushf
sub
push
fdivr
cmp
jmp
jmp
mov
sub
ds
cmp
cmp
mov
cld
ljmp
lds
aam
adc
nop
addl
jecxz
popa
fsub
pop
mov
pushl
int3
sub
js
fimull
rcrb
lods
mov
mov
rorb
mov
in
adc
das
xor
sub
cmp
cmp
decl
mov
xchg
xchg
xchg
cmc
adc
test
add
stos
push
or
cmp
cmp
add
fsubl
cmc
xchg
xor
cmpsb
mov
js
in
inc
pop
xor
cmp
outsl
decl
or
mov
mov
dec
and
and
aam
daa
mov
je
push
into
fisubrs
outsl
push
xor
adc
or
mov
mov
sub
mov
fldenv
mov
jmp
push
notl
cmp
call
push
int3
push
sbb
int
adc
stos
mov
add
incl
mov
sbb
in
sarb
shrl
movsl
adc
adc
fldenv
sbb
push
mov
jmp
inc
popf
decl
lahf
add
test
push
fnstenv
push
sbb
xor
negl
enter
xchg
jg
in
clc
ja
mov
sub
sbb
xchg
loope
or
ljmp
icebp
fsub
push
mov
mov
dec
gs
inc
shll
push
movsl
mov
lcall
push
mov
ds
orl
sti
sbb
push
inc
lcall
fcoml
mov
mov
mov
xchg
pop
dec
mov
in
filds
cmp
mov
lahf
pop
lods
fstps
mov
lods
jle
xor
imul
call
int
push
stos
jle
push
scas
pop
jne
xlat
add
hlt
subl
or
mov
xchg
xor
js
fidivl
movsl
cmpsb
push
xchg
ss
xchg
into
add
sub
push
xchg
jmp
subl
sar
imul
adc
adc
dec
jg
lcall
popf
inc
out
repz
or
aas
int3
push
into
mov
fs
dec
sbb
pushf
mov
sub
mov
pushf
xor
push
lods
mov
movsl
test
sti
fadds
mov
push
sbb
lcall
inc
neg
inc
push
jae,pt
pop
xor
xchg
and
call
shll
push
lock
push
or
or
pop
pop
in
pusha
sbb
xchg
inc
js
lds
jns
nop
or
stos
adc
mov
fbld
xchg
loop
xchg
vmwrite
sub
test
mov
dec
sbb
pop
adc
dec
cwtl
decb
jg
in
js
popw
dec
dec
dec
or
jl
mov
cmp
push
jge
xchg
mov
push
imul
pushl
push
fiaddl
orb
out
xchg
jno
xor
xorl
and
dec
sub
sti
inc
gs
push
lock
jmp
pop
subb
hlt
stos
sbb
call
push
jecxz
mov
push
loopne
mov
dec
ljmp
lahf
or
ficompl
test
es
mov
out
inc
xlat
or
inc
xor
ljmp
pop
push
inc
push
xor
lret
fwait
stos
ja
mov
and
decl
adc
dec
jb
or
test
cli
jl
es
pushl
and
dec
cmc
call
adc
mov
push
jb
or
add
xchg
gs
arpl
incl
push
sub
aam
dec
pop
scas
inc
stc
cwtl
push
lods
stos
in
fldt
jg
das
mov
fucomip
jbe
shl
inc
scas
add
int
jp
inc
icebp
mov
les
test
cmp
cli
ja
jmp
push
jge
aaa
scas
inc
mov
inc
test
pop
mov
xchg
pop
push
fdivrs
pop
loopne
or
das
rcrl
testb
andl
and
push
sbb
js
lock
jecxz
mov
call
and
pop
sti
in
mov
push
stc
xchg
push
jno
je
ds
scas
int
jg
ljmp
ja
cmpsl
fwait
imul
outsl
adc
test
cltd
jae
je
loopne
decl
mov
lahf
mov
popa
shr
cltd
in
idivl
mov
jl
mov
in
jg
mov
sti
pop
nop
pop
je
inc
in
js
mov
sub
mov
pushl
test
dec
mov
imul
pop
pop
or
cmp
mov
mov
or
or
dec
adc
dec
imul
lea
add
xchg
adc
inc
movsl
and
popa
mov
std
push
inc
stos
or
shlb
fcomip
in
call
push
jne
decl
xchg
inc
adc
xor
aam
mov
pop
ljmp
pop
mov
lcall
sub
js
out
sub
iret
adc
test
adc
in
push
and
fadds
mov
sbb
mov
adc
ret
lcall
pushf
mov
push
sub
sub
mov
inc
loop
int3
in
cmp
dec
ljmp
jg
lret
shr
scas
pop
ljmp
stos
inc
test
mov
pop
sbb
pushl
fsubl
xor
inc
outsb
movsb
push
pusha
jmp
mov
aas
notl
in
dec
push
aaa
std
jg
jle
fcoms
add
push
pop
cmp
icebp
jl
sbb
fsts
mov
pop
ss
pop
ss
inc
aaa
and
clc
inc
mov
sub
lcall
rcr
ret
fsubr
mov
push
mov
xchg
push
add
orb
lods
das
ss
or
out
cli
dec
xchg
jg
gs
push
cli
push
pop
jge
pop
in
inc
jg
pushl
imul
inc
movsb
aad
jae
sub
popf
aas
pop
cli
dec
pop
gs
incl
mov
push
mov
mov
divb
jl
pop
mov
scas
lcall
fmuls
loopne
pushl
inc
pop
pusha
outsb
and
out
or
cwtl
xor
mov
and
call
or
mov
and
int3
jp
daa
sub
paddusb
add
div
push
je
cli
push
xor
sub
cli
fdivrp
incl
test
or
xchg
dec
aam
pop
mov
imul
or
lcall
add
pushl
push
iret
in
push
mov
add
dec
add
mov
jmp
inc
adc
in
jge
and
in
int3
cmp
test
es
call
dec
or
xchg
lds
cmp
push
sbb
repnz
filds
test
sbb
push
or
out
xchg
cld
add
call
jl
and
shrl
rcl
jp
and
inc
mov
inc
test
add
add
scas
or
stos
call
imul
js
push
jl
lea
jae
data16
js
xchg
jno
inc
fprem
adc
cmp
jno
dec
and
or
lret
xor
jg
add
or
bound
pop
ljmp
sar
xchg
mov
adc
fbld
and
movsl
ljmp
mov
in
mov
sbb
jb
xor
dec
add
mov
inc
lea
shrb
das
pushl
xchg
into
xchg
in
daa
mov
dec
movsb
cmp
sbb
mov
sbb
jg
mov
mov
xchg
cmpsb
jle
fstl
mov
cmp
dec
movsl
data16
jg
xchg
xor
in
insb
cmp
push
sbb
inc
arpl
mov
inc
stc
lock
dec
pop
or
in
repnz
jg
jp
ficoml
jmp
in
nop
lcall
cmp
je
jle
decl
mov
loop
mov
fisubrl
pushl
jmp
scas
test
push
lock
int
mov
mov
aam
mov
mov
jns
je
pusha
imul
ror
mov
das
push
mov
js
adc
mov
mov
in
stos
add
inc
mov
ljmp
fistl
lods
imul
insb
jge
inc
das
lea
out
lods
adc
pop
pushl
mov
mov
jno
sub
xor
mov
fsts
push
and
movsbl
sti
jae
jge
sbb
das
test
lahf
xchg
push
clc
xchg
pop
ljmp
inc
in
mov
xor
movsb
out
movsb
stos
push
movsl
mov
fsubs
mov
inc
xchg
or
add
clc
jmp
psrld
rcll
pop
gs
dec
sub
out
xlat
xchg
dec
pusha
inc
neg
lcall
popf
gs
push
cmc
push
mov
in
out
xor
cmc
out
gs
dec
pop
dec
pop
pushf
cwtl
je
fcompl
incl
inc
pop
imul
sbb
or
pushl
lahf
inc
xchg
xchg
loopne
mov
in
lock
adc
pop
dec
xor
push
sahf
call
std
repz
mov
pop
sti
cmp
cmpsb
mov
or
call
outsl
decl
js
fs
mov
test
push
shll
jo
fistl
call
inc
andb
les
push
stc
cli
in
out
push
imul
lret
mov
cmp
inc
enter
add
inc
xchg
je
push
loope
scas
pop
movsl
mov
insb
adc
cmp
sbb
pop
pushf
cmpsl
ret
push
mov
inc
lret
mov
pushf
aad
mov
sar
incl
pop
into
push
sub
and
mov
pop
insb
inc
sti
repz
sub
sub
pop
mov
xchg
into
pop
jno
call
in
aaa
jge
jg
add
push
sbb
repz
mov
cld
jmp
lds
push
fistps
push
sbb
test
pop
push
pop
mov
insl
ret
lcall
sbb
outsb
dec
nop
je
lahf
dec
mov
mov
cld
leave
das
decl
jl
mov
cld
jle
das
rcr
cmc
mov
jb
add
dec
or
mov
call
mov
les
or
ljmp
push
mov
cmp
cmp
lock
dec
add
jg
into
stos
mov
mov
xchg
nop
pop
in
adc
push
sbb
inc
clc
pushl
cmp
jmp
inc
rclb
mov
add
add
shrl
adc
xor
movsl
fsubl
decl
cmp
ficoms
rolb
js
jmp
ljmp
cmp
arpl
fsubl
inc
mov
lcall
call
xor
shlb
cmp
pop
push
mov
mov
into
out
and
mov
cs
ljmp
inc
outsb
out
imul
jg
jnp
lcall
movsl
push
mov
popf
pop
testl
andl
mov
inc
hlt
push
ret
loopne
push
int
loope
bnd
les
or
jmp
adc
ss
push
jbe
iret
mov
cmp
inc
test
push
mov
inc
mov
xor
push
pop
cli
adc
lods
or
cltd
dec
fadds
int
cmp
cmp
lret
fwait
or
xchg
testb
int3
rolb
icebp
pop
xchg
mov
aas
incl
push
out
xchg
stos
mov
repz
cli
xchg
adc
inc
test
pushf
ficoml
xlat
sbb
dec
addr16
xchg
fwait
xor
das
pop
js
push
inc
add
shll
sti
bound
int3
movsb
mov
call
pop
outsl
add
pop
xchg
dec
pop
jb
imul
leave
arpl
arpl
lods
stos
call
pop
xor
insl
adc
lea
jmp
and
mov
dec
xchg
add
fisttpl
jnp
lock
mov
pop
jecxz
sub
cmp
or
test
int
sbb
outsl
test
shlb
xor
mov
push
testb
jle
fld
cmp
sub
mov
int
jg
fisttps
push
push
repz
fs
dec
int3
cld
pop
xchg
pop
dec
orb
fcmovne
jae
mov
decl
xchg
cli
pop
orl
xor
sbb
mov
cmp
cmp
dec
push
push
ret
adc
ja
call
je
pop
fwait
xchg
xorb
xlat
push
pop
sti
mov
icebp
jg
cmp
loopne
mov
shll
mov
nop
das
mov
decl
int
push
ljmp
je
clc
pushl
cld
jp
enter
int3
mov
ljmp
cmpsl
rcr
mov
mov
and
ljmp
in
cwtl
call
aad
pop
jae
add
mov
decl
mov
and
jbe
mov
xchg
rcll
popa
push
ljmp
mov
xor
adc
imul
mov
xchg
push
push
loope
aaa
call
and
xchg
lret
cmp
sub
cmp
int
add
mov
xchg
jg
lcall
adcl
mov
xchg
jg
mov
aad
mov
jmp
loopne
fildll
pop
movsb
int3
fiaddl
bound
stos
cld
fnstsw
or
sbb
je
lock
pop
mov
shrl
dec
and
incl
mov
pop
xchg
aas
push
call
enter
adc
ds
sub
cmc
jmp
mov
pop
adc
aad
clc
mov
adc
jo
mov
orb
in
ljmp
jne
mov
sub
jae
outsb
imul
inc
jno
inc
lds
cld
ljmp
sub
addr16
in
mov
or
cmp
cmp
fsubs
adc
add
mov
stos
fs
sbb
movsb
loope
lcall
dec
sub
cmp
lock
push
xchg
ljmp
add
ret
lcall
call
adc
push
mov
add
mov
inc
lods
xor
icebp
adc
call
xchg
jno
aad
mov
dec
pop
pop
ret
jmp
ror
insl
test
or
pushl
xor
loop
test
std
dec
jmp
sub
lods
in
je
fwait
mov
dec
repz
cld
jmp
ror
cmp
jne
inc
sbb
shl
mov
jg
divb
push
into
test
pushf
inc
out
and
cmpsl
loopne
aaa
xor
jmp
xlat
pop
xchg
das
cmp
mov
dec
jb
loope
pop
sbb
jae
rorl
push
out
lock
out
xor
loop
ljmp
mov
loopne
ror
lret
idiv
xchg
mov
idivb
dec
clc
xchg
xchg
popf
les
adc
mov
popl
test
iret
push
faddl
mov
dec
loop
or
jge
add
scas
sub
outsl
mov
cs
dec
lea
sbb
lcall
or
div
mov
sbb
fisttpl
add
test
getsec
pop
lcall
lret
leave
mov
mov
idiv
out
int3
cmp
mov
and
or
inc
xorb
mov
clc
ja
pushf
mov
xor
call
push
jno
pop
repz
rorb
inc
fwait
sub
sub
push
dec
das
lods
mov
pop
and
inc
cmc
jl
mov
pusha
lods
es
lcall
imul
ja
out
jae
lret
lock
jmp
lahf
inc
je
test
inc
pop
loopne
mov
sarl
addr16
lcall
in
push
rorl
std
ljmp
add
in
mov
repnz
xor
jmp
lods
mov
fldcw
imul
into
pop
mov
inc
imul
in
aaa
cmp
lret
mov
les
ret
cmp
popf
jle
stc
and
call
inc
pop
aaa
movsb
xor
rclb
sub
or
testl
loopne
jp
scas
xor
pusha
mov
cmp
data16
test
fbld
fsubs
out
fs
sti
cwtl
clc
inc
xchg
push
cmp
or
mov
lock
xlat
mov
push
incl
push
xchg
ss
shlb
pop
fmul
and
push
sub
jge
sbb
jp
fisubrs
adc
lret
xchg
ljmp
leave
ret
mov
dec
push
xchg
aam
outsb
mov
std
lcall
lea
mov
ret
push
sub
es
push
and
stos
push
sbb
ds
cld
aas
popf
aad
mov
cltd
push
popf
out
xor
imul
dec
xor
inc
out
sbb
enter
mov
arpl
loopne
lods
jp
cwtl
jg
shlb
movsl
xchg
pop
add
push
out
decl
add
fs
arpl
add
gs
test
push
add
jo
push
push
sub
lcall
incl
idivl
inc
xchg
lds
es
rclb
testl
test
repz
mov
dec
scas
jo
mov
fildl
cmp
jns,pt
pop
mov
inc
test
mov
stc
jmp
inc
aam
jl
hlt
mov
mov
xor
jmp
fcomip
fistpll
pop
test
cmp
add
and
jecxz
andb
lods
dec
mov
ljmp
call
push
jp
outsl
pop
xor
stos
add
xchg
mov
adc
push
fmull
fldln2
jno
cmp
mov
inc
adc
add
jno
in
jo
add
sub
call
xchg
cmp
add
push
xor
xchg
jns
loope
and
lahf
ja
xchg
mov
jecxz
add
adc
fdivp
and
add
add
adc
mov
cmpsl
sbb
and
decl
add
inc
or
pop
aad
mov
push
xchg
stc
or
mov
shl
or
mov
loope
adc
outsl
cmp
insl
es
out
loope
xchg
jns
mov
xor
or
incl
out
clc
pop
sub
int3
mov
clc
decb
popa
hlt
cs
adc
scas
cmc
fstps
add
mov
xor
cmp
jnp
xor
jns
aad
incl
xchg
movsl
ljmp
cmp
mov
fstps
jg
in
xchg
shll
sub
or
movsl
call
pop
adc
sbb
in
aaa
enter
xor
or
pop
ss
jbe
dec
inc
cmp
bound
jo
mov
mov
add
sub
popa
addr16
fs
mov
pushl
mov
dec
push
xor
ja
mull
dec
sbb
daa
adc
push
inc
fucomi
std
lock
cmp
push
or
inc
push
repnz
cmc
cld
incl
sub
out
push
int
mov
fnstenv
cmc
xor
push
xchg
cli
ja
push
adc
jbe
inc
lods
xchg
shlb
clc
call
sbb
and
fsubs
xor
mov
jmp
and
ljmp
cli
pop
dec
in
pop
lods
lahf
call
andb
fldl
mov
mov
mov
push
repnz
and
mov
push
orl
test
incl
adc
and
xor
test
rcll
ret
push
xchg
int3
dec
addr16
lea
pop
jecxz
jmp
repz
inc
mov
mov
add
inc
jns
movl
js
sahf
and
fwait
push
mov
cld
incl
and
mov
cmpsb
ret
insb
mov
mov
sti
jmp
push
lret
pushl
push
push
inc
insb
pop
mov
out
inc
outsb
cltd
mov
ret
mov
jge
into
sub
mov
add
nop
add
dec
sbb
xchg
mov
dec
movsb
mov
pushl
dec
jbe
mov
fiadds
fwait
fwait
push
cmpsl
mov
rcll
jle
loopne
pop
mov
mov
testb
cltd
sbb
cltd
fwait
pop
xchg
push
aad
dec
mov
call
or
in
lcall
aam
mov
rclb
or
pop
inc
dec
notb
xor
mov
dec
out
pusha
in
xlat
xorb
jmp
sbb
mov
mov
daa
xchg
push
lcall
sbb
mov
dec
addr16
mov
test
pusha
jp
shlb
cmp
outsb
add
and
inc
pusha
sbb
loopne
inc
cmc
out
fidivs
mov
fbstp
xor
lahf
faddl
hlt
filds
jae
lds
out
test
rcrb
push
push
xor
es
jno
push
mov
sbb
pop
mov
in
dec
bnd
lcall
pop
js
push
sti
xor
pop
sahf
inc
sbb
fidivrs
imul
dec
gs
incl
jne
sbb
into
mov
push
mov
test
pop
sbb
push
pop
lcall
insb
inc
adc
aad
pop
repz
lcall
inc
loope
pusha
out
hlt
jge
fwait
cmp
movsb
cli
std
dec
je
dec
or
jmp
push
and
imul
jge
xchg
cld
add
cmpsl
cmc
xor
push
lock
lret
aad
or
inc
pop
fistl
mov
decl
lret
mov
orl
lret
dec
inc
sbb
mov
rolb
ljmp
jl
and
es
test
xchg
dec
xlat
xchg
aaa
xor
decl
cli
loope
sbb
and
push
scas
dec
lcall
lahf
adc
adc
sub
out
pusha
outsb
test
cmpsb
adcb
lret
movsb
jle
push
mov
xor
mov
or
mov
and
mov
scas
inc
test
ljmp
dec
cmp
or
roll
fsubl
ret
fs
aam
pop
test
ljmp
mov
or
popf
xchg
iret
jge
shl
arpl
dec
mov
cwtl
clc
lcall
jge
loop
push
filds
push
mov
inc
dec
in
inc
mov
data16
popf
pushl
mov
jbe
xlat
test
sub
mov
xchg
and
cmp
push
mov
gs
in
cmp
lcallw
hlt
jg
inc
je
dec
pop
hlt
or
jno
adc
mul
mov
insl
cmp
mov
inc
mov
fwait
mov
imul
cmpsl
rcrb
sbb
xor
and
sub
fbstp
sbb
sub
filds
push
les
ficompl
xchg
bound
stos
in
mov
fwait
sbb
or
lahf
and
lret
mov
incl
jl
fnstenv
mov
pop
lods
sub
mov
jmp
jge
mov
fdivl
lods
stos
test
aas
inc
lods
gs
sub
lcall
jo
cld
das
clc
mov
xor
dec
xchg
xor
or
fnsave
mov
lcall
bnd
stos
daa
daa
cmpsb
fldt
mov
cmp
insb
mov
pop
push
xchg
jmp
imul
test
mov
xchg
ffreep
dec
pop
inc
clc
sti
popa
add
testl
mov
imul
mull
lods
shlb
or
sub
in
repnz
cmp
or
daa
shlb
test
inc
mov
xor
subb
jecxz
or
decl
jbe
ja
pop
ret
mov
mov
rclb
pushl
xlat
jnp
dec
imul
push
out
movsb
add
xchg
loope
cmpsb
call
sbb
push
loope
daa
popl
inc
mov
fwait
dec
daa
sarl
or
dec
std
das
or
stc
xchg
add
sbb
repnz
push
lock
cmp
fistps
fcomip
fistl
pop
push
mov
ss
mov
ljmp
outsl
into
call
add
nop
rol
rorb
into
es
enter
cltd
rolb
add
insl
jbe
jecxz
jp
xchg
dec
ss
push
dec
aam
jmp
lea
cmc
cwtl
or
sahf
jmp
das
sub
add
call
stos
dec
cmp
outsb
mov
mov
jge
sar
cmp
cmp
and
and
paddd
sbb
mov
outsb
jecxz
lcall
dec
je
fcomip
jmp
pop
shlb
fsubp
loope
mov
mov
dec
mov
dec
ss
decl
outsb
add
popa
shr
adc
outsb
daa
test
ljmp
inc
xor
pop
xlat
pop
outsl
daa
pop
shl
subl
fcomps
dec
cs
pop
inc
and
lretw
pushf
add
mov
cmp
mov
lcall
jbe
callw
cs
xor
addr16
jmp
mov
mov
ljmp
cli
dec
clc
mov
bound
rolb
push
pop
and
mov
int
push
mov
lcall
out
and
mov
pop
sbbb
xchg
push
inc
mov
inc
int3
pusha
mov
pushl
cld
dec
aas
xchg
pop
jae
jmp
and
es
repnz
das
adc
movsb
stc
cmp
out
push
xor
push
xor
mov
cmpsb
out
nop
adc
fwait
xor
in
jnp
scas
cs
decl
out
sti
mov
out
push
push
int3
dec
in
jb
sarl
xlat
mov
cltd
inc
pop
xchg
inc
cld
cmp
fstl
loope
ret
cmp
add
cmpsl
dec
jp
test
or
or
xor
les
mov
shl
ss
jge
mov
test
ljmp
push
test
lcall
pop
pushl
xor
cmp
lods
stos
jae
pop
xor
clc
ret
rclb
jo
sub
lcall
movb
shll
dec
xor
jns
jns
aaa
xor
ds
jo
cli
outsl
pushl
and
mov
cmp
ja
sub
fistpll
movsb
jl
imul
xchg
adc
outsl
jmp
pop
call
sbb
sub
and
mov
in
cmpsl
imul
scas
push
scas
ss
call
or
pop
call
repz
int
add
sub
stos
adc
pop
or
lods
pushf
lds
gs
push
and
rclb
xchg
mov
ljmp
test
xchg
pop
and
jmp
in
icebp
xchg
testb
pop
stc
shlb
and
cmp
jl
push
sbb
outsl
mov
lcall
lahf
xchg
jo
push
aam
and
mov
in
scas
sbb
jle
ljmp
or
cli
lahf
mov
imul
aad
mov
shlb
outsl
jp
fsubl
push
aam
dec
sbb
mov
jl
xchg
inc
pop
sti
mov
xor
cmpsb
xchg
pop
cmc
jmp
sbbl
jnp
cmpsl
mov
pop
in
inc
sub
mov
addr16
les
fnstcw
mov
jge
pusha
outsb
fs
ja
cli
incl
lods
cmpl
xchg
xchg
ja
outsb
cmp
pushl
in
sahf
mov
mov
data16
lea
push
mov
icebp
mov
mov
cwtl
es
jge
fdivrs
push
xchg
bound
lcall
cmp
insb
mov
ret
loop
mul
ja
ja
scas
aas
sub
jo
test
pushf
pushl
sub
pop
add
sub
or
pop
in
int
leave
shl
ljmp
jmp
hlt
adc
lret
incb
sub
adc
mov
hlt
xor
or
andl
xchg
fsubrl
decl
xor
adc
stos
xchg
scas
xchg
in
jno
pop
push
pop
pop
icebp
les
jmp
sub
add
mov
sub
stc
loopne
cmp
mov
ss
inc
out
loope
lahf
mov
lret
mov
adc
xor
ljmp
gs
shll
push
mov
jl
mov
scas
in
fldl
xor
dec
clc
fs
mov
add
lret
or
mov
call
push
shll
rsm
hlt
orb
ja
or
sbb
mov
ror
add
pushl
std
pop
pop
push
sub
sub
test
push
ret
adc
lcall
jecxz
mov
jg
outsl
data16
jle
cmc
sub
mov
jecxz
inc
sub
sti
xchg
out
cmp
inc
clc
movsl
mov
shr
std
fsubs
or
inc
incl
mov
in
sub
sbb
xchg
mov
lock
pop
pop
loope
xchg
add
popa
stos
movsl
pop
lcall
mov
add
cmp
lahf
jae
jge
pop
mov
sub
pushl
cmp
jno
es
out
cmp
frstor
lret
or
int
fsts
outsb
xchg
pushl
mov
clc
or
fsubrs
xchg
leave
pop
jnp
aam
xchg
pushf
ljmp
in
ds
dec
inc
sub
decl
and
lea
fsts
mov
stos
pop
jnp
mov
loope
mov
les
or
call
sub
sub
pop
xchg
out
sbbb
and
enter
sub
incl
adc
jb
pushf
je
jg
mov
xor
inc
ljmp
fidivs
sub
xor
or
pop
adc
dec
mov
sub
bound
decl
sbb
out
jnp
push
push
mov
xor
cmp
jae
push
fimull
stos
iret
lds
inc
sbb
decl
push
cli
push
cltd
fwait
nop
jb
cmp
dec
out
dec
push
lret
add
fisubs
les
cld
cmp
scas
pop
sbb
stos
imul
jg
add
outsb
mov
js
popa
jo
imul
cmpl
mov
cli
jmp
lret
inc
sbb
dec
std
gs
push
out
repz
push
ljmp
sbb
test
push
sub
mov
jg
test
scas
mov
cli
mov
mov
stc
es
cwtl
pop
sbb
stos
inc
pop
mov
enter
cli
fbstp
xor
mov
divb
xor
pminsw
mov
dec
sbb
pop
cmp
adc
fiaddl
sub
pusha
pop
pop
dec
add
dec
rol
fwait
push
pop
subb
or
xlat
jnp
or
out
push
dec
mov
ficompl
lcall
add
orb
cmpsb
inc
andb
cld
mov
inc
int3
jmp
mov
xchg
decl
push
stos
popa
shl
fldl
mov
in
loop
jmp
in
insl
and
out
shlb
and
xchg
fsubs
pop
push
enter
ljmp
popf
sub
mov
xchg
push
adc
pop
push
je
shr
xlat
dec
incl
mov
sbb
je
push
mov
hlt
push
daa
xor
inc
insl
xor
jle
call
jge
out
scas
pop
push
gs
or
cmp
dec
push
dec
mov
mov
lods
decl
pop
xor
imul
pop
lock
mov
movsl
lret
xorb
pop
ret
insl
sbb
lcall
adc
decl
cmpsb
imul
jecxz
gs
fcmovnbe
out
roll
orl
push
add
sti
sub
inc
imul
and
negl
pusha
mov
out
inc
into
lcall
pop
xlat
stos
imulb
sub
subb
jg
in
push
mov
in
mov
sbbl
adc
lods
xor
xor
cld
mov
jmp
icebp
movsb
arpl
push
scas
daa
mov
les
aas
inc
insl
lret
sub
cmp
lock
scas
ja
jns
lea
call
imulb
push
or
sarl
pop
sbb
fstps
hlt
pushf
pop
js
lcall
and
and
pusha
outsl
outsl
mov
ljmp
test
adc
imulb
aas
test
jg
fmul
mov
pushl
outsl
imul
clc
lods
mull
test
loop
nop
daa
ds
add
scas
call
aaa
cld
incl
mov
int
lea
iret
jge
int
pop
add
decl
pushf
mov
adc
sti
out
inc
lret
sbb
lds
push
push
mov
call
mov
movsl
lret
xchg
rcrb
pushl
xchg
cmp
dec
push
mov
repz
pop
mov
mov
jg
in
mov
mov
mov
mov
jl
cld
hlt
cmp
and
fdivrs
jmp
sti
xchg
push
jecxz
lock
jg
call
mov
xchg
mov
shll
jne
cmp
mov
bound
mov
jb
inc
inc
and
repz
lret
jecxz
sbbb
imul
shrb
mov
mov
push
push
aaa
pop
cmp
push
jg
mov
inc
mull
les
cltd
scas
wrmsr
pop
sub
fsubrl
decl
xchg
cmp
mov
pop
insb
fmull
call
and
call
mulb
stos
mov
popf
lods
pop
mov
lcall
call
xlat
mov
inc
lds
or
inc
repnz
repz
std
incl
push
and
inc
or
sbb
push
out
es
pop
or
mov
decl
ds
cli
lea
arpl
decl
sub
subb
sub
sub
xor
jg
push
adc
inc
ljmp
cmc
lcall
js
jns
dec
push
out
pushf
mov
decl
int3
and
mov
and
outsl
mov
movsb
dec
inc
lret
push
cmp
addr16
sub
repz
rorl
push
mov
push
or
lcall
lcall
mov
test
dec
push
aaa
loop
daa
adc
push
leave
xchg
sarl
and
pop
cmp
cmp
push
ja
lock
jbe
and
xchg
sbb
pop
cli
mov
xor
out
out
add
push
xor
sbbl
cmp
or
dec
shlb
pop
std
dec
icebp
cmp
mov
rolb
jg
sbb
inc
lcall
pop
cmpsb
mov
into
jno
xor
movd
mov
icebp
push
decl
shrb
push
cmp
pusha
js
cmp
jb
imul
add
jmp
xchg
rol
cs
add
loope
or
jmp
push
xchg
mov
addl
pushl
cmp
inc
sbb
imul
jp
sbb
ja
imul
push
int3
jae
push
icebp
fucomp
sbb
and
out
xchg
mov
cmp
jg
pop
pop
fildll
cmp
pusha
jo
aam
out
jbe
adc
mov
and
inc
sbb
xchg
js
loopne
cs
push
out
dec
xchg
ds
call
inc
ds
stos
or
mov
repnz
scas
pop
sbb
mov
lret
xor
notl
mov
shl
add
jg
call
cli
add
call
dec
or
mov
mov
pop
ljmp
jnp
push
repnz
dec
fsubs
es
ret
xchg
inc
cmp
lods
jmp
emms
and
stos
sub
jg
pushf
sbb
pusha
sub
mov
xor
lcall
sub
lods
lret
mov
sub
fistl
cmp
mov
sti
cmpsb
push
mov
daa
in
loope
sub
lret
dec
xchg
jle
jno
pop
arpl
incl
sub
lods
push
push
orl
aam
fucomp
ss
push
inc
out
cli
decl
shl
pop
mov
idivl
push
pop
test
and
movsb
add
shrb
ljmp
popf
mov
or
js
imul
jecxz
pushf
lret
sahf
popa
sbb
mov
cli
inc
out
sub
pop
dec
and
xor
fcmovnbe
incl
rorb
lahf
push
dec
mov
out
adc
cltd
add
mov
or
inc
loopne
out
out
mov
sbb
inc
lcall
inc
test
xchg
jno
outsb
test
sub
dec
data16
xlat
cli
xchg
sbb
test
push
dec
aas
fsubs
xor
aad
jl
pop
insl
or
or
aam
mov
xor
lcall
in
inc
loopne
cmpsl
adc
pushf
ficomps
ja
inc
inc
push
xor
and
adc
and
repnz
popa
popa
inc
sub
decl
aas
in
in
mov
lret
add
mov
push
mov
pop
jmp
imul
lds
push
ret
adc
cld
insb
jno
xor
push
pop
ret
aam
xor
das
es
scas
jp
push
jmp
cltd
icebp
mov
xlat
popf
ljmp
cmpsl
cwtl
mov
cs
add
xor
and
pushl
nop
push
or
dec
jb
repz
mov
add
ja
inc
ljmp
cwtl
sub
decl
inc
lea
adc
fistps
sub
push
mov
mov
xor
outsb
and
out
dec
lea
xchg
stos
fisubrl
lcall
leave
sbb
stc
mov
notl
mov
add
or
das
clc
out
jns
xchg
cmp
sub
sbb
les
shrb
jg
pushl
sti
aam
inc
jecxz
xor
insb
adc
pop
nop
sub
ja
add
enter
stos
mov
add
push
xor
pop
dec
aaa
inc
sbb
push
push
and
shrb
ljmp
rcr
mov
mov
jp
fistl
sub
icebp
jge
in
iret
std
jae
mov
fs
es
push
pop
mov
jmp
xor
arpl
mov
hlt
cmp
sti
dec
aad
aad
adc
inc
pop
add
sbb
adc
mov
cmpsb
jg
dec
cld
xlat
sbb
cmp
push
xchg
jecxz
aaa
bound
rolb
mov
lret
add
bound
jmp
push
adc
nop
out
inc
mov
int3
test
xor
ret
or
inc
lret
push
ljmp
cmc
cmpsl
push
dec
mov
cmp
cli
pop
mov
jg
add
std
out
mov
inc
movsb
shrl
dec
lret
sub
leave
cmp
clc
fists
and
xchg
push
in
mov
adc
push
js
jg
aaa
pop
and
mov
mov
inc
ret
dec
outsb
mov
cld
ljmp
dec
push
inc
push
fcompl
add
test
std
mov
call
jo
cwtl
mov
jnp
inc
push
ja
pushl
cmp
jb
cmpsb
aas
pop
xchg
lods
clc
stc
cmp
sbb
push
insl
stc
dec
or
push
adc
mov
adc
cltd
mulb
daa
data16
stc
mov
into
mov
lea
call
movsb
outsl
cmpsb
addr16
mov
mov
cmpsl
imul
insb
mov
ja
xlat
xchg
call
ficoms
mov
jmp
in
cltd
xor
icebp
ret
dec
outsl
jb
lcall
in
cmpl
and
and
mov
cmp
ljmp
mov
xor
imul
outsl
mov
adc
decl
cli
out
test
pop
sub
into
nop
sbb
mov
stc
xchg
push
pop
fisttpl
aam
add
call
jbe
test
cmp
js
scas
pop
xchg
add
sub
pop
fbstp
xor
mov
push
imul
lea
pop
int
mov
cmp
stc
icebp
jns
or
adc
into
mov
and
jge
int
add
jmp
push
adc
mov
loopnew
out
dec
movsl
jno
cmpb
clc
shrb
add
sub
jbe
add
call
sbb
insl
cmc
inc
jge
aaa
xor
push
mov
das
and
jle
inc
cmpsl
push
or
push
mov
jl
mov
loope
daa
rorb
in
adc
jno
jnp
test
decl
or
push
bound
mov
je
test
insl
mov
pop
ss
shll
jg
lods
nop
enter
mov
call
add
pop
sub
scas
lret
push
ja
inc
in
pop
cmp
incl
push
fsubrl
cs
into
dec
out
loope
in
insb
xor
mov
movsb
shll
mov
jmp
addr16
dec
popf
ja
insl
inc
jmp
dec
add
mov
lds
xorl
fwait
movsl
popf
jl
negl
jns
insb
lret
loop
movsl
inc
aas
jecxz
pushl
mov
decl
out
push
lret
iret
xor
jo
push
cld
pop
ds
cltd
sahf
ljmp
decl
fists
or
sbb
xor
ja
int3
ret
decl
int3
pusha
rorb
sbb
sbb
pushl
aam
add
mov
mov
dec
cli
mov
sbb
fsubrs
faddl
xor
fs
push
fstpt
mov
insb
fisttpll
imul
adcb
add
mov
scas
js
mov
push
dec
stos
cwtl
pop
sahf
and
cmp
stos
mov
sbb
ljmp
dec
add
idivb
pop
es
jge
loopne
imul
jecxz
mov
push
inc
cld
fistl
outsb
xchg
incl
out
mov
pop
stos
add
arpl
dec
xlat
adc
out
dec
adc
push
adc
mov
in
sbbl
sub
incl
cltd
pop
testb
lea
dec
xchg
add
lcall
les
mov
in
popaw
ja
fimull
adc
sar
pushl
inc
icebp
jno
xor
jb
push
aad
mov
mov
cmp
xchg
call
inc
fnstcw
add
push
mov
xchg
mov
xor
sti
add
jnp
ljmp
dec
mov
pop
or
mov
add
xor
mov
cmc
sbb
call
add
cmp
mov
movl
cmpsb
xor
mov
xor
pushl
xchg
mov
test
sub
ficompl
jmp
sbb
call
and
or
je
push
cmp
in
shrl
in
inc
pop
cmp
sbb
push
cmp
test
cld
lcall
push
xchg
jnp
lret
xor
aad
cmc
scas
jb
xchg
mov
cmp
xor
pop
insb
scas
sbb
test
xor
xor
xlat
imul
stc
add
jmp
jno
adc
jbe
mov
xchg
xlat
or
mov
je
scas
mov
jmp
inc
sahf
push
cs
dec
outsb
or
mov
mov
ljmp
in
push
insb
jne
call
pop
adc
xor
cwtl
mov
in
cli
sbb
push
push
cld
pushl
adc
shrl
mov
rolb
xchg
stos
mov
jns
popa
cmp
mov
leave
cmp
sbb
lcall
stc
or
jle
dec
fbstp
adc
mov
jl
jle
movq
je
std
lcall
in
pop
push
aam
test
stos
mov
mov
cmp
lds
icebp
pushl
lods
pop
mov
shl
inc
and
mov
rorb
repz
pop
mov
mov
sub
push
mov
incl
inc
mov
jle
and
pop
ljmp
insl
push
popf
jbe
xlat
aas
mov
movsl
push
cwtl
jle
xchg
xchg
cmp
mov
imul
sbb
pop
adc
out
fisubrl
pop
lock
mov
cmp
mov
lds
push
jge
loopne
nop
xlat
decl
mov
lret
push
xor
imul
sub
addl
std
jg
imul
xor
push
push
jno
or
sub
lahf
mov
cli
decl
xchg
fidivl
mov
hlt
lcall
jmp
or
ljmp
cli
outsl
mov
sub
iret
hlt
mov
mov
pop
adc
adc
pop
mov
pop
dec
cmpl
inc
cmc
test
jp
fdivs
ja
imul
sbb
dec
mov
stos
jp
call
cmp
mov
pop
inc
fildll
mov
mov
jae
xor
popf
mov
loop
jmp
mov
cmp
inc
test
mov
aam
ret
lods
mov
add
mov
xchg
or
rcl
cmp
pusha
shl
lret
rolb
jmp
repnz
xchg
sbb
inc
mov
in
mov
ja
mov
add
jbe
jg
dec
mov
xor
push
inc
int
out
mov
loopne
dec
fstp
js
jge
xchg
adc
push
push
cmp
push
insl
sub
fisubs
jg
lahf
test
pop
mov
pop
lds
mov
daa
sbb
sub
pop
lock
decl
ja
into
push
and
into
xchg
ficoml
cmp
movsb
leave
int
incl
xchg
bnd
mov
pushl
es
jns
loope
mov
jmp
aad
out
lahf
imul
or
dec
sti
subb
adc
scas
mov
test
fs
data16
push
mov
jl
lods
nop
incl
or
jns
xchg
mov
adc
jb
pop
sub
fucomp
mov
mov
cwtl
lods
stos
in
mov
jo
inc
inc
lcall
jmp
aas
stc
dec
push
xor
push
stos
clc
call
cld
out
adc
ret
rorl
inc
divb
inc
nop
ljmp
or
xchg
cwtl
push
jecxz
stos
sbb
mov
testl
dec
cltd
mov
push
ret
jne
mov
data16
adc
nop
mov
notb
mov
sbb
jmp
jae
push
sbb
arpl
add
lret
inc
xor
incl
inc
pop
test
jp
mov
jp
bnd
cwtl
js
pop
sbb
jle
call
mov
push
aad
scas
rol
je
jnp
mov
icebp
loop
incl
cmp
inc
jb
cmp
mov
adc
fidivl
out
orl
ret
jg
ljmp
xchg
or
xor
cmp
mov
stc
stos
push
sub
incl
lods
xor
in
cmpsl
out
and
push
xor
rolb
js
or
adc
clc
fs
scas
test
out
adc
call
sub
xor
popf
cmpsl
or
lahf
aad
xchg
jns
push
out
dec
and
mov
scas
jmp
dec
out
jl
xchg
mov
push
mov
movsl
incl
cs
mov
mov
data16
ret
lret
mov
and
pushl
std
or
jno
cmp
cs
repnz
das
jle
xchg
dec
xchg
fisttps
leave
pusha
int3
int
test
pop
cli
into
inc
cltd
adc
mov
call
mov
outsb
in
lcall
pushf
fbstp
cmp
sub
movsb
jb
enter
loop
inc
out
lcall
push
inc
imul
xchg
sbb
mov
loopne
mov
cmp
aaa
jg
jns
jne
sub
popa
cmp
in
pop
dec
mov
ret
sbb
jmp
call
sub
jae
shrl
fbstp
std
mov
or
and
rcll
push
sub
idivl
std
xor
fcoms
cmp
pop
pop
inc
lret
or
adc
mov
jb
sub
lock
pop
arpl
mov
mov
rolb
pop
push
stos
sub
lds
incl
dec
iret
outsl
bound
mov
xorl
jg
mov
mov
inc
add
mov
sub
push
test
fisttps
push
sahf
mov
xlat
jo
adc
xlat
cmpl
inc
sub
idivb
sahf
arpl
jmp
mov
int
call
in
int3
andl
mov
lcall
lods
add
fdiv
int
dec
mov
xor
jecxz
out
dec
xlat
out
add
dec
pop
lods
loop
dec
xor
dec
sti
xchg
int3
lock
and
rorb
repz
leave
jle
mov
dec
and
lods
mov
mov
jl
jnp
inc
mov
icebp
scas
adcb
pop
mov
lods
or
in
push
shrl
incl
imul
insl
mov
pop
je
je
jne
ret
movsb
scas
mov
mov
push
leave
imul
mov
ljmp
lahf
outsl
add
mov
jno
push
cmp
jmp
fdivp
lea
xor
lods
and
cmp
pop
lcall
insl
fsubl
inc
arpl
test
loop
aam
rcll
ja
push
add
lret
in
jmp
ret
ds
push
bound
fldcw
jg
ljmp
outsb
dec
sbb
in
mov
jno
andb
pop
sbb
les
std
mov
inc
add
inc
dec
pop
mov
insb
test
cmp
lock
mov
xor
xchg
adc
ljmp
roll
push
xchg
movsb
gs
call
cli
cmp
dec
sbb
pushl
incl
in
pop
adc
xchg
fs
repz
addl
pushl
push
repz
adc
sub
jb
cmp
lds
mov
es
mov
pop
jnp
in
mov
xchg
xchg
mov
mov
mov
jle
lret
jmp
mov
negb
sub
xor
dec
andb
out
sub
xlat
adc
jmp
push
rolb
aaa
jmp
push
and
sub
dec
mov
icebp
cmp
push
jnp
incl
out
std
loopne
imul
popa
and
mov
movsl
and
sub
jne
movsb
mov
ds
ret
ret
lods
loopne
in
mov
xor
aam
jge
popf
sbbl
add
mov
lret
rolb
imul
ljmp
xchg
fld
sarb
xchg
fs
xchg
jno
lret
add
ret
mov
push
aad
cmpsb
std
fdivrs
sbb
adc
stos
das
inc
pushl
push
fidivs
ljmp
jecxz
popf
xchg
jnp
xorl
decl
xchg
push
aas
popa
push
lret
mov
lret
repz
push
pushf
push
add
les
jg
sbb
adc
stos
stos
dec
cmp
or
mov
add
repnz
incl
in
sbb
cmp
push
jle
iret
js
loope
fimuls
xor
fnsave
jg
xchg
mov
ficoms
mov
add
dec
sbb
mov
jl
cmpsl
push
pop
fcoms
mov
lods
lret
les
pop
push
pop
sbb
popf
outsl
mov
call
data16
mov
push
cmp
adc
adcb
add
cmp
inc
je
test
das
xor
pop
fs
stos
ss
dec
add
dec
mov
aaa
inc
lock
lahf
popa
mov
test
pushl
popa
ret
xor
sbb
add
sub
jne
leave
lahf
mov
pop
popa
in
test
lea
pushl
add
mov
movsl
stc
dec
scas
mov
int3
add
mov
js
int3
adc
sbb
insl
dec
jp
iret
in
xchg
pop
dec
and
push
pushl
cmc
cli
mov
dec
int3
push
fwait
jge
mov
imul
xorl
mov
push
cltd
int
xor
xor
add
mov
pop
pop
jl
divb
mov
and
mov
incl
popf
mov
pop
or
out
push
sbb
sbb
xchg
and
cmp
dec
leave
and
dec
dec
sub
lock
mov
add
sbb
cmova
lcall
dec
jmp
ret
inc
jmp
push
xchg
hlt
and
sar
decl
add
and
outsb
inc
fiadds
jno
mov
pop
test
mov
incl
xchg
jns
cmp
inc
stos
mov
jg
lds
rcrl
pop
sbb
fsubrl
mov
aaa
call
inc
cli
out
enter
out
sub
mov
inc
cld
lret
call
mov
enter
cmpb
lcall
popf
jecxz
mov
sub
nop
arpl
fwait
and
cld
sti
aaa
push
dec
call
inc
xchg
jne
out
push
jae
pop
outsb
in
cmp
mov
push
insl
xor
mov
mov
decl
sub
add
push
fs
cld
pushl
aam
mov
and
xor
iret
pop
inc
cli
outsl
mov
js
mov
add
jo
jnp
sbb
lock
fsubrl
mov
add
push
sbb
call
or
ljmp
adc
mov
jo
dec
movsb
jecxz
bound
and
dec
xchg
inc
pusha
lret
and
add
jo
jmp
sbbb
cs
cmp
aas
aas
bound
cmp
scas
gs
cld
decl
push
mov
and
stc
test
sub
cmp
rorb
outsl
cli
call
dec
mov
inc
cmp
xor
jbe
lret
dec
int3
push
mov
sbb
xlat
push
rcrl
pusha
add
ljmp
lcall
sub
fadds
sti
jno
outsl
xchg
cmp
xchg
mov
mov
jle
xchg
xor
cmp
push
jo
addr16
sub
and
jnp
pop
out
cmp
mov
mov
mov
mov
adc
daa
cmpsb
es
les
mov
or
sbb
inc
mov
outsl
aam
sbb
inc
mov
jmp
fcomip
lcall
cli
jecxz,pt
dec
dec
fwait
icebp
shll
fstl
or
clc
fstps
icebp
popf
fwait
arpl
inc
repnz
or
fidivs
popf
sti
lcall
mov
push
jnp
imul
ljmp
lret
rorb
xchg
sub
pop
gs
loope
mov
mov
pop
sub
mov
dec
jge
addr16
call
sbb
jle
sbb
sbb
push
dec
push
pop
out
sbb
add
lods
inc
jbe
jge
adc
lcall
mov
mov
cmp
int
dec
add
and
pushl
pop
test
xor
decl
inc
jge
mov
jg
dec
cmpb
sbb
testl
jmp
lock
mov
test
mov
or
push
leave
daa
xchg
pop
lret
pop
repz
add
sub
sbb
dec
std
ljmp
lcall
mov
andb
mov
xlat
test
stc
xchg
rcrl
lcall
xchg
test
sbb
iret
daa
mov
mov
mov
movsl
pushl
lret
scas
inc
outsl
subb
lcall
aam
pcmpeqb
xchg
shr
cmp
mov
add
sub
mov
fcmovnbe
dec
xchg
pop
jae
cmp
pushf
cmp
js
aad
out
ret
cli
xor
jmp
xchg
or
pushf
push
enter
cmp
jmp
fimull
xchg
pop
lret
jmp
push
jg
xor
mov
sub
shl
fimull
ret
pushf
mov
mov
shlb
push
dec
int
fmull
bound
xlat
mov
mov
inc
mov
push
cmpsl
sbb
stc
sub
push
rcr
push
push
clc
aaa
mov
xchg
jae
fcompl
call
outsb
fistpl
stc
mov
ret
mov
add
dec
insb
cmpsl
daa
cwtl
aaa
adc
jg
sbb
pop
sbbb
pop
dec
mov
rcll
mov
fidivs
inc
outsl
lods
pop
sahf
mov
cmpsb
loop
xchg
sub
xchg
cld
neg
movl
out
clc
sti
fisttps
jl
into
fisttpll
insb
ds
lods
sub
imul
in
pushl
mov
in
fldt
jbe
ds
mov
xchg
std
xchg
fisubrl
or
inc
js
xchg
mov
ljmp
push
out
cmp
xor
mov
roll
xor
and
sbb
inc
push
adc
xchg
mov
lahf
push
call
inc
pop
sbb
mov
ljmp
jmp
sub
adc
push
cmpsb
fldenv
jge
push
jg
push
imul
pushl
inc
sbb
mov
mov
mov
test
jbe
pop
dec
mov
decl
bound
icebp
jo
popl
jge
jmp
mov
iret
xchg
pop
mov
mov
imulb
push
mov
xor
push
xchg
xor
or
icebp
icebp
ss
pop
aad
call
mov
imul
jmp
push
fstps
xchg
mov
sbb
rcll
xor
shlb
clc
pushl
pusha
stos
cmp
pop
negb
aam
xor
sahf
xchg
sbb
ds
add
mov
xchg
xor
adc
push
mov
fwait
sub
into
mov
out
push
xor
jmp
jb
sbbl
mov
mov
je
gs
pop
add
cs
repz
incl
je
push
jle
push
negl
jnp
mov
add
enter
out
fcos
jns
out
mov
mov
aaa
js
std
into
xchg
loop
mov
sub
mov
mov
movb
dec
push
xor
or
insb
xor
dec
clc
push
adc
dec
add
mov
mov
mov
xchg
jo
aam
inc
push
xchg
adc
out
xor
stos
hlt
xorb
lcall
rorl
imul
cmpl
jmp
sbb
push
pop
or
mov
cmpsl
xor
xchg
jg
add
stos
loope
add
dec
or
jmp
pop
sahf
lahf
xor
adc
pushf
xchg
pop
jl
dec
push
scas
pop
repnz
pop
and
fdivr
ljmp
pop
cmc
lret
or
fimull
lahf
pop
int
mov
fs
jne
inc
pushf
push
jmp
imul
mov
sbb
jae
xor
jecxz
cwtl
xchg
pop
nop
imul
sbb
decb
dec
jbe
mov
imul
lcall
and
repz
rcll
push
cld
sbb
or
rolb
adc
and
stc
imul
xchg
aas
pop
xor
out
or
into
jb
mov
xchg
sbb
cwtl
in
lods
ret
adc
jne
jbe
mov
xchg
jl
push
addb
shll
or
insl
out
aam
and
jg
inc
fs
lods
dec
enter
test
mov
pop
jno
mov
cmp
je
int3
loopne
sub
inc
aaa
sar
ljmp
nop
aas
pop
out
push
fimull
dec
dec
inc
push
xchg
or
sub
mov
jg
loopne
xchg
lcall
sbb
mov
orb
mov
lods
sbb
and
mov
mov
test
or
daa
pop
icebp
jge
call
sarl
cld
xor
aad
pushf
pop
int3
insb
outsl
pushf
es
stos
enter
subb
popf
cmpsb
lock
js
or
jg
xchg
fmuls
lock
cmp
cmpsb
mov
clc
mov
inc
scas
shlb
xchg
fimuls
cli
scas
jmp
or
das
in
ss
inc
mov
cmp
sar
frstor
loop
dec
pop
in
mov
imul
call
shlb
mov
xor
test
imul
cmpl
and
and
adc
lret
adc
mov
xchg
cmpsb
mov
js
mov
outsb
lahf
pushl
jl
scas
negl
out
ret
into
pop
push
sub
movsb
sbb
push
call
pop
sbb
fisttpl
pop
mov
dec
push
lret
mov
pushl
lods
add
sar
test
cmp
lcall
xor
dec
mov
pop
cltd
cld
aad
xchg
and
inc
lahf
xchg
sub
jg
jl
cwtl
mov
jp
enter
or
adc
les
sub
jecxz
pop
or
jbe
xchg
cs
ret
sub
pushl
add
out
leave
sahf
push
mov
sbb
inc
push
in
mov
dec
pop
adc
cmp
sbb
inc
loop
mov
cmpsb
sub
out
mov
cmp
out
ja
cltd
or
mov
push
push
dec
sub
test
inc
fisubrs
das
push
imul
dec
xchg
mov
pop
int3
jae
ljmp
mov
or
mov
cmc
mov
popf
imulb
movsb
in
push
fidivs
scas
cli
insl
repz
ret
hlt
fs
outsl
or
cltd
add
cmp
pop
dec
fwait
shrb
enter
jns
xchg
adc
call
lods
sub
aaa
clc
add
sub
in
jle
mov
xor
jp
push
adc
incl
loop
jae
inc
arpl
inc
cmp
fwait
mov
pop
push
enter
clc
negb
jp
lods
fsts
inc
lods
loop
dec
mov
lock
fisttps
xchg
insb
jnp
lret
bnd
cmp
ljmp
cmp
loop
cmc
jne
mov
mov
xor
jge
cmc
sahf
rorb
xchg
jle
cld
add
fldenv
xor
loopne
cmp
jl
mov
pop
icebp
incl
cld
pop
mov
push
and
stos
mov
decl
ret
aad
or
nop
xchg
fcomip
mov
push
mov
add
mov
shll
cmpsb
sub
jecxz
adc
pop
jecxz
lcall
sahf
sub
push
dec
icebp
sub
dec
add
sahf
jb
xor
fisttpl
pop
xchg
js
test
push
in
call
dec
xchg
cs
call
jns
inc
dec
jns
ss
xchg
and
jg
push
stc
add
and
pop
out
xor
jmp
shrb
adc
sbb
in
sbb
xchg
fiaddl
cli
mov
pop
loopne
mov
scas
jg
inc
fsubp
test
pop
hlt
decl
lods
xchg
fadd
rcr
stos
mov
push
jmp
sbb
sar
mov
mov
adc
loop
imul
repz
sbb
stos
hlt
fbld
lock
mov
iret
std
fnstcw
test
test
sub
loopne
test
sub
lahf
ret
insl
inc
add
ss
or
call
loopne
jb
push
adc
cmp
push
mov
xchg
pop
repz
lcall
mov
mov
push
lcall
idiv
dec
mov
aas
into
lcall
mov
stc
popf
xor
icebp
sub
mov
fdivrs
out
or
mov
aaa
pop
or
loope
ficoml
push
enter
leave
jge
and
popf
aad
lock
sbb
pop
js
lcall
fisttpl
xchg
in
pop
inc
sti
jl
xchg
push
inc
lea
xor
movsl
testb
push
fisttps
std
add
incl
inc
movsb
repz
ret
fildll
inc
lods
das
xchg
sarb
xadd
jecxz
push
mulb
test
cmp
dec
roll
dec
in
push
loop
mov
xchg
inc
jo
iret
xlat
sub
dec
xor
pushl
cwtl
rorb
lret
mov
xor
push
popf
subl
cld
in
jge
fcomps
nop
in
in
jmp
ficomps
cmp
or
decl
mov
insl
mov
push
int
sbb
jle
adc
loopne
ljmp
mov
inc
jg
inc
ljmp
lods
add
pop
sbb
sub
pushl
xchg
jnp
jbe
jl
push
aas
push
jo
push
xor
jne
mov
stos
pop
push
inc
lds
sbb
jmp
stc
outsl
fidivl
shlb
lds
loope
dec
mull
ret
sbb
cmpsl
sbb
stos
adc
xchg
inc
outsb
pop
mov
sti
sbb
push
pop
lahf
in
fdivrl
filds
lods
sub
adc
test
sbb
push
ds
lret
add
lcall
std
pushf
clc
je
pusha
mov
stos
daa
jmp
jl
mov
scas
clc
incl
ret
or
pop
shlb
cmp
and
adc
cld
pop
fdecstp
imul
incl
cmp
push
mov
inc
push
leave
pop
mov
pusha
mov
lock
adc
inc
nop
lret
xor
in
jbe
pop
lods
sti
mov
mov
inc
push
or
mov
xchg
inc
push
out
call
xlat
scas
sub
fwait
lods
push
mov
and
push
cmpsl
xchg
mov
repnz
adc
push
dec
jge
scas
dec
dec
ret
inc
pop
clc
xorb
pop
push
cld
je
xlat
jmp
es
popl
push
pop
cmp
rcrb
adc
lcall
xor
jmp
push
js
mov
std
fadd
cs
incl
adc
jge
jnp
lods
sbb
mov
fisubrl
dec
jnp
mov
fldl2e
mov
cli
fptan
call
sbb
mov
or
cwtl
add
fisubrl
inc
or
sub
mov
scas
jo
lret
bound
push
jbe
test
loope
icebp
call
mov
dec
jg
ja
ds
inc
push
or
push
mov
jo,pt
pusha
dec
lods
sub
mov
pop
repnz
out
movsl
out
cmp
std
pop
xorb
xchg
jbe
sbb
pop
sbb
adc
cld
fstp
test
or
mul
orl
in
inc
fistpll
mov
ja
incl
bound
mov
xchg
lahf
std
ds
sub
call
or
sar
test
mov
in
notb
xor
lret
inc
fsts
lcall
popa
pop
pop
push
dec
sbb
jle
or
cwtl
fsubrs
push
sar
and
cli
pop
sub
mov
sbb
decl
pop
mov
imul
ficoms
mov
rclb
mov
and
pop
mov
stos
cmc
add
clc
ljmp
daa
fstl
dec
inc
popf
inc
mov
sahf
adc
adc
insl
insl
das
fcomip
call
lea
daa
cld
dec
xor
into
fldl
xchg
out
ret
lcall
pop
dec
push
jae
xor
or
int
lock
xor
pushl
mov
imull
lds
lea
and
push
pusha
out
cmp
loopne
sub
and
pop
clc
incl
push
add
aaa
pop
stos
dec
lds
adc
sub
mov
fwait
std
cli
out
out
test
call
enter
lret
cmc
and
xchg
dec
in
fbld
out
idiv
scas
xchg
mov
xor
and
xor
jge
ds
dec
pop
out
push
inc
sub
mov
or
fldenv
js
jb
push
inc
popl
and
pop
cld
bound
add
inc
sbb
add
std
sub
add
inc
lcall
pusha
or
icebp
das
rorb
or
ljmp
je
ds
fs
std
sahf
daa
pop
scas
in
nop
mov
test
je
pop
or
sub
clc
jmp
out
sarl
pop
push
lcall
and
xchg
shr
cmpsb
rcrl
jns
dec
cmp
mov
mov
loopne
xor
adc
push
fmull
bound
aas
mov
addr16
incl
sahf
jp
pop
mov
sarl
xor
mov
pop
ja
jecxz
rorl
fbstp
mov
fstpt
jmp
dec
js
mov
fsubrs
leave
fisubrs
cmpsl
push
ljmp
jl
lds
stc
inc
cmp
inc
cmp
mov
or
ret
arpl
fildl
js
loopne
neg
mov
xor
scas
or
dec
adc
mov
push
ljmp
dec
xor
adc
and
push
and
sbb
movsb
and
jae
sub
jg
decl
xor
lock
icebp
jbe
and
andb
mov
jb
or
pushl
inc
outsl
les
aaa
rcrb
sbb
js
jno
pop
aas
or
ljmp
add
add
fadd
les
loopne
push
cmp
rcrl
inc
ljmp
iret
push
inc
push
cmp
add
loopne
cmpsb
xlat
mov
pop
inc
test
rclb
sahf
enter
push
stc
fsubs
nop
call
movsb
mov
out
ffree
mov
push
push
clc
jno
push
hlt
movsb
mov
push
push
out
sahf
ljmp
fcmove
mov
pusha
inc
clc
pop
push
cmpsb
mov
call
sbb
fsubrp
sbb
xchg
adcl
js
inc
push
aas
mov
adc
adc
hlt
add
mov
aas
xchg
mov
xor
std
mov
ret
call
adc
pop
push
adc
adc
in
rcll
cwtl
cmp
andb
lcall
lea
shrb
pushf
loopne
or
int3
mov
adc
mov
fsubs
adc
sub
out
ljmp
incl
cld
daa
xor
jae
xor
ds
cld
and
sbb
jmp
gs
std
pop
and
mov
cwtl
and
mov
das
add
jmp
mov
enter
outsl
in
and
or
and
fwait
test
cmp
lcall
fadd
dec
rorl
loope
aam
mov
jmp
test
adc
in
sub
es
icebp
rclb
into
inc
ljmp
cmp
xorb
dec
mov
cli
xorl
xlat
mov
push
sti
lods
dec
int
icebp
call
fists
fildll
call
fstps
pop
sahf
sub
les
dec
adc
dec
subb
cltd
xor
fwait
mov
dec
sti
adc
xchg
enter
dec
negl
stc
stos
push
test
mov
scas
jb
push
cmp
repz
push
jg
cmp
inc
and
out
shlb
sbb
adc
xchg
adc
pushl
fadd
std
cltd
addb
pop
xor
loopne
mov
fbstp
test
outsb
pop
das
add
and
cltd
xchg
ds
jp
xchg
lock
push
push
sub
jnp
fidivs
jmp
movb
lcall
int
bound
jae
adc
ud2
outsl
jne
lret
lods
lea
pop
mov
pushl
mov
cmpsl
push
dec
pop
in
ja
mov
lret
fcoml
ljmp
jg
xor
loop
pop
insl
std
gs
aas
test
or
push
adc
call
add
sbb
sti
jle
mov
jg
push
cld
scas
cli
gs
sbb
mov
mov
xchg
dec
test
inc
inc
movsl
push
iret
popf
cmp
fs
mov
push
push
dec
mov
js
sbb
ljmp
psubusw
mov
aam
mov
mov
loop
aas
jl
cmc
lods
inc
jmp
imul
aas
add
and
cmpsb
or
dec
pushf
pushf
decl
sub
mov
add
insl
push
pop
xor
loope
jb
jns
sub
es
hlt
in
mov
decl
xchg
hlt
pusha
xchg
sahf
in
add
xchg
bound
pop
out
mov
sub
cmc
fisttps
incl
dec
mov
mov
pop
push
adc
fmull
add
in
fsub
xorl
lea
pop
lock
in
ficomps
outsb
cld
push
mov
sbb
mov
mov
jns
test
pop
xchg
sti
sbb
ret
dec
fwait
mov
shrb
pushl
ljmp
push
sub
cmpsb
jge
repz
xchg
mov
mov
cld
loopne
mov
loope
call
sub
int3
xchg
loope
sbbl
cmc
push
cld
fidivrs
xor
and
adc
mov
mov
ret
jp
pop
outsb
movsl
in
mov
lcall
fadd
mov
test
enter
dec
jo
push
insl
pop
aas
mov
mul
mov
xor
or
imul
push
mov
xchg
push
dec
decl
lock
enter
in
push
aam
fcomp
jbe
scas
and
sub
fcoms
std
rorb
call
ss
cmp
jae
lock
into
xor
repz
pop
cld
adc
sbbl
idiv
in
in
loope
js
and
test
aaa
or
aaa
sbb
sbb
or
sbb
ja
ret
call
gs
stc
push
or
pushl
push
fcoms
sbb
stos
lcall
cld
incl
push
lods
sbb
dec
imull
dec
adc
dec
xchg
pop
mov
int
cmp
dec
jg
jmp
in
xor
fstpt
in
mov
pop
movsl
and
cmp
movsl
or
cmpsl
mov
cld
stos
xor
das
cmp
mov
fwait
aam
dec
imull
cli
arpl
jge
push
enter
lcall
ja
addr16
lret
push
jle
push
pop
jmp
popa
adcl
or
mov
mov
scas
lods
mov
icebp
jg
test
push
inc
jne
rcll
xor
lcall
sbb
xor
jle
ss
inc
loop
inc
loope
mov
call
in
or
arpl
jb
adc
movsw
sbb
ret
push
stos
imul
push
lock
xlat
pop
cwtl
and
mov
mov
mov
pushl
mov
ficomps
mov
test
lds
scas
adc
fldenv
call
dec
xchg
push
xchg
cmp
xchg
ret
icebp
insb
adc
and
sar
cltd
lret
addr16
push
inc
jb
imul
aam
mov
outsl
pop
adc
insb
inc
fcomip
pop
fwait
cmp
int
sbb
mov
sbb
inc
or
out
xor
xor
loope
xchg
or
incl
sbb
sbb
jg
ds
ror
or
pop
bound
dec
xchg
imul
push
sbb
xchg
cmp
cltd
roll
fdivrp
push
adcl
popa
gs
insl
inc
jecxz
or
cmp
arpl
out
js
sbb
mov
sbb
ljmp
push
mov
decl
in
inc
cs
andl
adc
or
xchg
push
insb
loope
xlat
mov
fcoms
xchg
sub
xchg
push
aam
mov
adc
sub
pusha
dec
sub
pop
stos
jmp
imul
mov
incl
cmp
add
or
push
das
push
cmp
xchg
leave
leave
inc
xor
adc
decl
mov
xchg
insl
cmp
sahf
and
movups
test
inc
mov
cld
push
rcrl
icebp
adc
mov
jno
mov
sbb
call
stc
dec
lods
mov
test
pushl
fisubrl
xor
das
or
lret
stos
adc
cmp
jg
sub
mov
aaa
scas
aad
mov
and
jae
and
jmp
cmp
sbb
out
outsb
and
jmp
cmp
cltd
out
mov
add
scas
dec
in
pop
rcl
mov
outsl
ja
push
xlat
das
cmp
pop
fisubrl
dec
jne
aas
inc
addr16
call
xor
mov
sbb
pop
adc
and
lods
inc
lea
hlt
sub
push
shr
out
cmc
cmp
lcall
mov
mov
xor
mov
pop
and
divl
call
inc
add
test
mov
mov
jmp
jle
mov
std
out
xchg
add
vminsd
imul
call
notl
scas
ficompl
in
test
movsb
jge
dec
mov
test
xchg
sbb
add
adc
pop
js
cld
jae
clc
jae
mov
xlat
cmp
push
rolb
test
xchg
adc
jge
movl
fdivr
jg
pop
xchg
dec
xlat
ficoml
fidivrl
movsl
pop
sbb
adc
repnz
xchg
call
scas
cmpsl
or
stc
dec
ds
mov
sbb
pusha
mov
addl
inc
xor
sbb
in
adc
dec
xor
bnd
into
dec
lahf
pushf
xchg
outsb
insb
push
call
jnp
enter
rolb
xchg
movsb
pop
jo,pn
or
dec
out
repz
adc
add
inc
imul
data16
jg
mov
cmp
mov
add
fsubrs
pop
das
stc
sbb
sub
scas
mov
nop
pmaxub
loop
in
je
inc
jmp
ret
popf
and
push
addr16
out
clc
mov
loope
ret
std
sub
sub
mov
dec
mov
cld
sahf
sbb
repz
subb
ljmp
jbe
lds
decl
push
dec
lret
fnstenv
es
sbb
jno
adc
or
cmp
decl
lret
jb
test
push
ror
mov
lods
xchg
daa
imull
pop
pusha
cmpsb
outsl
cmp
das
dec
push
and
js
xlat
mov
pushl
dec
adc
jno
pusha
sti
lret
repz
inc
xchg
xor
or
jb
or
out
jp
mov
cld
out
push
sti
push
cmpl
repnz
movsb
add
inc
dec
jle
ficoml
inc
and
cmp
in
sub
jns
and
adc
cltd
shlb
jmp
mov
push
mov
loope
lret
and
dec
push
addr16
loop
xor
mov
loope
and
adc
cld
call
loop
ss
scas
in
and
loop
notl
push
into
cmp
xor
scas
dec
sub
jne
adc
mov
xor
cs
ss
add
lret
add
or
mov
and
pop
inc
inc
and
fcomip
into
jbe
xchg
loop
pop
leave
mov
aas
xchg
lock
fiadds
cltd
mov
fimull
jge
cmp
nop
xchg
in
inc
mov
clc
mov
pushl
and
mov
push
in
imull
paddw
xchg
push
mov
es
addr16
mov
mov
scas
adc
daa
int3
imul
add
outsb
loopne
dec
push
and
aaa
pop
mov
xchg
xchg
sub
sbb
incl
cmp
ret
mov
ja
icebp
add
push
adc
decl
mov
jae
push
movsl
push
ja
pop
or
ret
aaa
mov
fidivrl
and
hlt
stos
movsl
xchg
and
pushl
sub
or
dec
ret
ja,pn
jnp
aam
call
cmp
or
or
mov
jge
adc
ficompl
dec
in
push
fisubl
ss
movsb
mov
and
jb
push
jae
sub
ljmp
push
aaa
sub
scas
cmpsb
addl
cmc
sti
and
adc
inc
ja
xor
pusha
popa
data16
jg
stos
jmp
lret
mov
mov
data16
xor
sbb
filds
sbb
nop
lock
aas
xchg
fcoml
ficoml
mov
mov
ljmp
jmp
sub
xor
in
ljmp
add
push
push
call
mov
sbb
testl
or
jbe
jbe
cltd
cmp
ret
in
aad
ljmp
lds
stos
cltd
mov
aam
and
call
jg
jge
sbb
mov
sti
adc
add
lahf
jecxz
ret
cmpsb
push
fldt
cli
loop
cld
ljmp
into
cli
divb
pop
pop
cmp
xchg
xchg
iret
mov
fdivrl
insl
pop
loopne
bound
add
sbb
jbe
call
lret
xchg
rorl
sbb
test
mov
mov
fmul
xor
and
sub
test
sbb
inc
cmp
cmp
cld
pushl
fdivp
xor
inc
xlat
lds
ss
popf
mov
sbb
mov
movsl
or
incl
mov
or
es
pop
dec
sbb
xor
or
dec
lret
aaa
fimull
lret
shl
ja
addr16
loopne
lcall
insb
ret
leave
sbb
sub
repnz
mov
inc
mov
cmp
ljmp
ljmp
and
in
and
in
or
sub
mov
cld
cli
mov
pusha
pop
shll
and
push
mov
push
pop
push
daa
bound
mov
xchg
mov
adc
pop
jp
arpl
lahf
pop
sub
sub
out
lock
xor
pop
loopne
mov
jmp
sub
push
lret
negb
sub
es
loop
xchg
xorl
sbb
push
ljmp
mov
les
xchg
in
add
ds
testl
das
cld
orb
pushl
push
mov
xchg
jns
rcll
lcall
outsl
push
pushf
pop
stos
jno
lret
sbb
cmp
cmpl
adc
gs
mov
in
imull
pop
jmp
add
cmpsl
clc
pop
out
in
xor
push
mov
inc
mov
xchg
xchg
scas
cmp
dec
pop
movsb
jge
add
aas
add
lcall
or
jae
imul
lock
icebp
add
outsb
sub
es
addr16
dec
jl
pop
adc
sar
mov
xchg
jmp
xor
orl
and
insl
cmp
insl
iret
cmp
mov
andl
push
and
fcompl
pop
setbe
fs
fiaddl
stos
mov
loopne
je
incl
mov
xor
dec
das
aas
jg
std
int3
and
dec
lret
or
decl
aas
mov
into
rorb
dec
inc
movsb
lds
ja
pushf
push
std
call
pop
repnz
in
out
or
push
xchg
fcmovbe
movsl
sub
popa
pop
ss
mov
cmpsl
popf
pop
mov
test
xchg
mov
xor
hlt
sub
cmc
sbb
stos
fs
pushl
mov
jns
xor
sar
push
xchg
dec
jns
fmull
in
fstps
lret
fimuls
mov
decl
movsl
push
push
jle
fdiv
lds
in
es
adc
mov
hlt
add
mov
mov
aaa
mov
xor
out
std
push
stc
aam
fisubs
push
pushf
xchg
sub
mov
aad
push
jl
aam
xor
ds
in
sbb
xorl
dec
add
out
aam
mov
int3
jbe
and
xchg
mov
test
icebp
adc
inc
push
decl
pop
add
dec
push
add
pop
ss
sahf
inc
mov
xor
or
add
or
iret
leave
mov
sbb
mov
lcall
mov
mov
ds
movsb
and
decl
stc
adc
pop
mov
dec
inc
fidivrs
mov
add
xor
ljmp
inc
clc
pusha
je
cmp
push
mov
repz
add
xor
adc
mov
movsl
fmuls
imul
fistpll
data16
mov
sub
ljmp
js
insb
adc
push
sbb
mov
clc
hlt
jmp
or
jge
repnz
fucompp
les
sar
iret
cmc
rcrl
fcmovb
fdivrs
jl
xchg
repz
adc
nop
int3
ja
nop
stos
and
repnz
fisttps
in
cmp
ja
mov
sar
arpl
cmpsb
sti
pop
cmp
add
pop
aam
mov
push
sbb
and
mov
cmp
in
and
xchg
leave
cmp
call
jecxz
test
adc
dec
push
ljmp
out
scas
xor
inc
scas
pushf
into
insl
cmpsl
or
push
jae
ljmp
into
imul
sub
pop
add
imul
and
pop
std
decl
test
out
call
movsb
pusha
pcmpeqw
enter
dec
out
lcall
mov
cmpsl
nop
test
or
ret
stos
xlat
int
inc
cmc
shl
mov
clc
lcall
iret
cwtl
rcrb
xor
jnp
in
xor
ja
rolb
pusha
xor
jl
call
push
push
push
shrd
or
imul
inc
test
or
lock
mov
push
cmp
xlat
xchg
cli
pop
xor
xchg
and
in
pop
lcall
lea
ret
add
jl
imul
push
rcrl
push
es
insb
inc
in
fs
das
cmp
js
out
mov
cld
rorl
int3
jne
test
out
rorb
mov
fadd
vrsqrtss
ljmp
jg
lahf
sub
mov
xchg
adc
pop
pop
testl
mov
add
dec
mov
sbb
mov
call
mov
jl
pinsrw
shlb
xchg
sarb
jg,pn
cltd
sti
mov
lcall
xlat
xor
or
sub
imul
ret
pop
mov
test
jmp
add
int3
mov
pushl
push
into
in
mov
pusha
mov
les
mov
test
ljmp
adc
arpl
sub
jge
rclb
das
push
jmp
push
cmp
dec
popf
adc
call
movsb
es
cli
sub
mov
das
inc
data16
dec
cmp
lds
inc
sub
xchg
jo
mov
inc
or
push
jg
and
ljmp
jo
push
inc
insb
adc
cltd
mov
fs
pusha
fcomip
cmp
in
outsb
popa
loopne
inc
pop
pop
es
mov
mov
inc
stos
pop
push
leave
mov
jb
loopne
test
sub
mov
or
mov
movb
loop
repnz
pusha
inc
mov
jmp
ja
and
lret
das
and
jmp
int3
lods
iret
mov
out
jge
js
cmp
pusha
jbe
sub
adc
out
push
mov
incl
sub
scas
jo
push
dec
jnp
decl
outsb
or
inc
outsl
push
lea
mov
push
mov
mov
fisttpl
aam
or
jo
xchg
sbb
dec
outsl
ds
data16
xchg
sub
lcall
incl
cmp
jle
out
push
sbb
push
stc
or
sar
call
aam
stos
push
adc
push
rolb
pop
fwait
mov
dec
cli
in
jae
xlat
idiv
call
out
iret
sbb
and
std
xor
fdivrp
xchg
dec
xor
pop
dec
sbb
xchg
inc
sbb
out
nop
fwait
add
js
incl
cmc
mov
movsl
pop
lcall
pop
pop
push
add
repnz
push
push
xchg
jecxz
aad
ljmp
jl
gs
and
dec
inc
jmp
lods
fs
cld
lret
rorl
lret
incl
insl
aaa
clc
inc
into
sbb
inc
jnp
enter
mov
loope
push
xor
ret
das
sar
mov
lods
and
sub
stc
int3
lret
xor
rcrl
sbb
lcall
push
adc
and
xchg
and
jno
call
call
bnd
andb
aam
sbb
add
jnp
pop
lea
loopne
jg
inc
or
sbb
mov
in
outsl
xor
mov
push
and
mov
mov
das
jb
dec
mov
jmp
and
test
in
jbe
lcall
jns
testl
ja
mov
stc
sbb
mov
jge
ljmp
inc
cmpsl
shrb
adc
pusha
sub
test
xchg
sub
cmp
out
mov
pop
cmp
xor
addr16
bnd
ret
adc
cmp
cmp
fstl
mov
jecxz
bound
mov
aaa
mov
pop
incl
lock
std
mov
or
insl
loope
mov
sbb
pushl
das
pop
dec
mov
rcl
stos
clc
icebp
sub
enter
fistl
xchg
lods
pop
xchg
je
repnz
mov
nop
imul
jge
cmp
lret
add
call
push
dec
sbb
out
xor
test
cmpsb
inc
xchg
mov
mov
sbb
jne
mov
fcomip
incl
lods
mov
aad
lods
xchg
orl
rep
call
call
push
mov
enter
push
cmp
stc
inc
mov
mov
into
call
clc
dec
repnz
call
adcl
sub
xor
jmp
sbb
hlt
sbb
int
sub
js
cld
ljmp
jg
repnz
jae
cmp
test
and
sub
test
repnz
test
das
or
imul
popf
inc
popf
mov
mov
lcall
or
jmp
inc
not
hlt
adc
lods
lea
cltd
cwtl
cmp
fnstcw
ja
dec
pusha
sti
cld
fidivl
sub
adc
scas
mov
mov
mov
ss
test
cmpps
mov
xor
dec
jmp
xchg
jo
mov
js
lcall
push
fildll
inc
pop
lret
divl
sub
repz
xlat
push
adc
call
stos
push
idiv
imul
mov
inc
cmp
es
inc
rolb
and
mov
pop
das
push
adc
in
stc
cld
mov
and
add
cmp
call
mov
dec
sub
lea
mov
scas
loopne
sbb
ret
push
mov
pop
add
icebp
push
hlt
nop
pushf
dec
dec
rcrl
testb
add
fimull
int
sahf
mov
outsb
push
mov
sub
loope
adc
call
sahf
movsb
mov
fmull
ret
push
push
mov
pop
mov
scas
faddl
lcall
call
pop
mov
inc
xchg
fisubrl
or
clc
fists
pop
stos
adc
cmp
aad
xor
ljmp
and
cld
mov
stos
daa
push
mov
cmp
lahf
out
pop
ss
mov
ljmp
ret
push
xor
or
pusha
sub
pop
inc
adc
dec
sarl
outsl
mov
xchg
push
out
lock
mov
ret
outsl
jge
cwtl
loopne
mov
adc
mov
mov
enter
sbb
jecxz
sarl
mov
push
mov
inc
mov
das
cli
lahf
mov
dec
inc
or
loop
fcmovu
and
imulb
adc
icebp
imulb
push
mov
dec
cld
mov
scas
rcrb
jmp
call
xchg
jecxz
dec
mov
xchg
jae
scas
mov
pop
mov
in
loope
push
mov
js
push
push
cs
dec
mov
xchg
and
nop
inc
xchg
jnp
jns
dec
insb
test
mov
mov
scas
push
in
lcall
pushl
sbb
sarl
xchg
popf
push
aas
dec
jmp
ja
call
jne
mov
notl
insl
dec
jno
cmc
sti
push
cmpl
mov
idiv
add
andl
xlat
fsubrp
xor
add
ficompl
cli
ljmp
sti
dec
add
ret
fs
dec
fcomp
arpl
jae
adc
push
jmp
adc
insb
fmuls
lock
fs
lcall
lods
enter
sub
shrl
mov
and
mov
jg
dec
adc
and
subb
xor
mov
adc
lcall
fisubs
pop
pop
push
shll
xchg
sbb
xor
insl
and
xor
mov
loopne
imul
lcall
inc
dec
ljmp
jle
lahf
and
dec
jg
gs
je
jg
aas
adc
push
cmpl
lcall
mov
push
add
jnp
xlat
push
fninit
sar
dec
lcall
dec
sbb
and
dec
fwait
enter
scas
mov
xchg
jmp
dec
push
jno
iret
mov
mov
enter
roll
xor
xchg
mov
lret
add
sub
mov
dec
nop
or
mov
ss
push
mov
xor
fs
add
mov
mov
add
pushf
sbb
jns
jmp
sar
jmp
lock
mov
adc
xor
inc
notb
ljmp
je
loop
push
stos
fiadds
aad
rclb
mov
mov
aam
mov
pop
mov
xchg
decl
pushf
adc
loope
sub
jge
leave
sbb
loop
sbb
jmp
mov
adc
mov
xchg
dec
js
inc
orb
cmp
mov
dec
rorl
fldcw
sbb
sahf
out
or
fwait
out
je
into
or
inc
decl
lret
aam
lods
xor
test
jmp
loop
out
clc
daa
into
aad
jmp
in
jnp
sbb
je
pop
aaa
or
mov
xchg
nop
fs
jg
sti
mov
push
cli
subl
pop
or
shlb
inc
lea
je
fstl
lock
pop
ror
sub
cmp
int
add
stc
push
or
mov
repnz
dec
pushf
popa
jmp
fcomi
shll
fbld
fcmovbe
xor
je
cld
shl
mov
xor
cmp
mov
xlat
leave
mov
mov
inc
adc
mov
call
pop
hlt
and
ret
out
lock
aad
aam
dec
jmp
enter
rclb
xor
mov
push
sbb
loope
mov
and
or
and
and
mov
ljmp
xchg
sub
outsl
in
cmpsl
cvttps2pi
mov
mov
shlb
movsl
jb
loopne
cli
loop
aas
sahf
jne
out
and
in
add
ss
ljmp
jl
sub
mov
and
cmp
mov
push
inc
pop
dec
xchg
sbb
and
lcall
dec
daa
add
shl
pop
adc
daa
mov
mov
cmp
lods
mov
sbb
jb
decl
push
std
cltd
xor
lcall
xchg
aad
mov
daa
xchg
or
inc
xchg
ret
adc
mov
pop
cld
jbe
movsb
pushl
mov
ficoml
xchg
test
pop
fdivrs
test
aaa
stos
inc
push
jp
sub
dec
iret
mov
ret
aas
fisttpl
jg
cmp
mov
adc
inc
nop
es
xchg
jmp
push
shll
push
mov
push
or
cwtd
fisubrl
mov
incl
xchg
sahf
dec
nop
js
sub
les
push
mov
jecxz
xor
aas
jae
imul
clc
cmp
arpl
inc
rcll
or
xchg
popf
aaa
or
add
movsb
push
sub
clc
cwtl
sub
push
mov
insl
pop
lret
jmp
pop
leave
das
add
out
adc
int
jg
dec
pop
push
pop
loopne
nop
xchg
xor
xor
dec
add
nop
jns
inc
cltd
mov
mov
cmp
jns
cld
test
or
push
out
sahf
test
add
xchg
mov
scas
cmp
js
mov
pop
lock
jns
es
outsb
push
sub
cmpsb
mov
xor
out
rclb
lcall
scas
call
or
jmp
mov
aas
call
imul
add
lcall
dec
mov
enter
ja
outsl
aad
cmp
clc
pushl
cmc
loop
lret
notl
clc
jecxz
scas
jmp
sub
decl
loop
ficoml
xor
mov
mov
hlt
sub
test
ljmp
outsl
mov
imul
loope
sbb
xchg
mov
fs
stos
dec
fwait
adc
mov
lret
lret
mov
mov
xor
jmp
cmp
iret
jae
test
push
iret
push
xchg
add
jmp
test
loop
mov
jne
xchg
ljmp
jns
jmp
and
and
mov
sub
sbb
decl
clc
sbb
test
or
stc
ds
mov
push
movsl
sbb
out
add
push
lods
cmp
cmp
fsubrl
jns
jg
xor
adcb
or
imull
mov
sbb
fucomip
pop
sar
loope
daa
sahf
add
mov
ja
push
andb
push
fcmovne
arpl
add
dec
push
out
addl
ret
cmp
ljmp
inc
or
sahf
out
mov
outsl
jge
iret
cmc
push
rol
outsb
roll
sbb
int3
ja
imul
xor
cmp
adc
xchg
xor
cmpsl
push
gs
mov
mov
aad
pop
hlt
mov
enter
fadds
xorb
ds
push
jg
test
xor
and
data16
lcall
lahf
cmp
aam
lock
xchg
push
dec
sar
and
or
cmp
sti
push
movsb
or
cmpsl
lods
pop
push
pop
aas
movsl
mov
ss
jg
pop
mov
sahf
mov
ljmp
mov
fisubrs
pop
mov
push
fld
pushl
inc
sbb
dec
or
jg
ljmp
clc
adc
or
mov
mov
jge
sar
scas
mull
in
arpl
pushl
int
imul
idivl
sbbb
in
lret
in
and
and
inc
pushl
cld
testb
out
adc
outsb
aad
movsb
insb
cltd
rclb
mov
stos
adc
call
addr16
nop
pop
cs
xchg
arpl
adc
shl
pop
insl
add
pop
lret
enter
ljmp
fidivrl
xlat
jno
mov
clc
mov
lods
enter
fcmovu
imul
pop
mov
call
ds
adc
jge
push
sub
pushf
inc
xor
mov
pop
daa
add
push
ret
sub
hlt
push
iret
lahf
cld
xchg
adc
push
cld
data16
add
add
fisttps
int3
xchg
inc
mov
adc
lods
scas
xchg
push
cmp
lock
pushl
es
jl
mov
adc
aas
sbb
jns
mov
jne
or
xor
popf
shlb
mov
xchg
outsl
lret
data16
dec
mulb
mov
inc
sub
cmp
lods
sub
les
or
mov
pop
and
xchg
stos
inc
cmp
aad
mov
ds
jp
mov
cmpsl
xchg
jl
push
sub
pushl
lret
mov
ja
movsb
cmc
mov
sub
std
push
xchg
inc
lods
sub
aaa
rol
dec
push
test
testb
sub
std
lcall
into
mov
adc
rcll
fmulp
insb
ficomps
jge
pop
repz
ds
adc
pop
or
inc
std
lcall
enter
and
in
mov
dec
es
or
sbbb
sub
jnp
ljmp
cwtl
and
jbe
mov
jle
jl
sub
clc
pushl
xchg
shl
inc
mov
icebp
pop
popa
xlat
pushl
inc
jmp
push
daa
mov
push
push
shl
or
jg
pop
lea
in
xor
mov
xchg
push
fwait
cmc
fcomps
sti
push
sbb
cmpsb
pop
dec
jns
or
jecxz
jmp
mov
lcall
fdivrs
bound
xor
sbb
loop
push
pop
das
aaa
daa
fdiv
xor
mov
push
call
sub
int3
adc
ret
dec
gs
movsb
repnz
outsl
jmp
sbb
clc
mov
pop
std
lods
jp
xchg
out
ljmp
test
sub
push
mov
stos
push
test
and
pop
adc
decl
in
popa
stos
add
jp
sub
xchg
decl
sbb
and
pop
push
xchg
mov
aas
aaa
lea
mov
mov
ljmp
mov
add
xchg
xor
mov
neg
push
mov
sub
aas
mov
and
pushl
fldt
xchg
lret
dec
and
pop
xlat
sub
sbb
jmp
jno
mov
sbb
in
pop
add
xchg
stc
orb
es
decl
push
clc
adcb
mov
push
movl
add
sub
clc
jp
test
loop
mov
ret
cld
inc
mov
cwtl
dec
shll
int
out
subl
sbb
jmp
pop
rclb
xlat
in
adc
in
cld
mov
pusha
or
icebp
incl
pop
les
stos
and
ljmp
out
ss
adc
mov
sub
out
movsb
xchg
imul
jmp
pop
test
in
cmpsb
addb
insl
div
mov
jecxz
jg
sbb
mov
ficomps
jb
je
adc
imul
andl
dec
or
test
sub
mov
sub
movsb
and
loopne
jbe
mov
gs
xor
test
mov
mov
sub
ljmp
in
and
clc
cmp
jno
es
mov
movsb
cmp
inc
sbb
sub
fistl
decl
int3
cld
mov
rcl
push
jns
jo
adc
xchg
scas
cwtl
pusha
lock
incl
jl
and
rcrl
notl
cli
loopne
shl
incl
jo
xchg
adc
inc
and
cmp
jge
incl
test
add
ret
and
loope
cmp
sbb
mov
add
gs
rol
jb
pop
jns
jbe
repnz
or
dec
arpl
in
jne
movsl
js
mov
shlb
mov
xlat
xor
call
xchg
push
lahf
mov
xchg
and
inc
adc
cmp
cmc
incl
fisttps
pop
in
movsb
jecxz
push
int3
out
fcmovne
add
cli
add
cmp
fists
inc
iret
in
mov
inc
in
pop
pop
or
or
xor
adc
xchg
std
xor
lcall
sub
mov
push
mov
jmp
and
cmp
mov
push
repnz
jne
push
xlat
lds
mov
jmp
dec
sbb
add
xlat
push
mov
incl
mov
mov
sbb
xchg
mov
jmp
and
cmc
or
sub
pop
and
pop
xor
mov
hlt
subb
jmp
sbb
mov
adc
rcrl
in
mov
xor
mov
cs
cmp
bound
jne
mov
push
push
lea
ret
ljmp
nop
lds
mov
xchg
inc
imul
mov
cmp
orl
int3
clc
pushl
adc
and
xchg
pushf
shrb
ljmp
sarb
das
fisttps
jno
jns
jno
xor
ljmp
adc
inc
mov
scas
xor
dec
cmp
mov
fidivs
mov
adc
sbb
and
push
pop
jns
ljmp
adc
insl
outsl
xchg
mov
sbb
fs
out
clc
ljmp
adc
xchg
dec
mov
jnp
out
or
pusha
loop
ljmp
stos
push
mov
or
repz
ss
inc
jmp
mov
call
jecxz
cmp
cmp
data16
dec
repnz
adc
or
add
pop
mov
sti
call
test
sub
jns
mov
repnz
inc
dec
cmpsl
push
addr16
cld
mov
or
enter
inc
xchg
leave
mov
jno
call
imul
rcrl
mov
mov
into
jae
fmull
cmpsb
jmp
and
sbb
mov
scas
cli
xor
popa
or
insl
sbb
std
jp
push
xor
add
push
insb
scas
ss
decl
out
and
adc
mov
loope
cltd
inc
ret
lret
insl
push
scas
pushl
xchg
in
or
push
fnstenv
repnz
mov
push
push
xor
lcall
xor
add
xchg
sub
clc
fdivrs
xchg
ja
dec
fdivrp
cmp
mov
push
mov
or
test
xor
and
fcomip
lcall
cmp
mov
inc
push
sub
mov
aas
lret
call
dec
mov
sbb
mov
sub
cmp
mov
int3
ret
icebp
add
and
popf
cmpsb
stos
in
sbb
mov
gs
mov
dec
push
cld
jg
movsb
leave
int
repz
orl
adc
xor
pop
sub
pop
pop
jg
imul
mov
push
jno
mov
call
ja
mov
adc
popa
test
aam
sub
xchg
les
mov
incl
clc
pop
pop
push
xchg
jmp
push
std
and
cmp
cld
jmp
xchg
mov
das
enter
inc
aam
cmp
mov
add
test
mov
pmullw
mov
xchg
inc
stc
cmp
adc
call
out
adc
adc
pushf
cmpsb
or
mov
cmpsb
inc
add
add
inc
xchg
or
sbb
cs
sbb
fildll
sahf
mov
jg
pushl
fstpl
mov
xchg
mov
mov
insl
clc
add
into
adc
xor
sbb
sbb
jle
cmp
pop
sub
adc
inc
pop
mov
jg
inc
adc
movsl
pop
mov
loop
add
mov
sub
fs
xor
fildll
pop
xor
scas
ror
aam
aad
ret
call
dec
xor
sub
dec
ret
xor
jbe
and
daa
add
pop
cli
ss
sbb
and
jl
pushf
pop
sub
push
jmp
clc
ljmp
rep
das
icebp
inc
shrb
decl
xor
call
jae
fwait
mov
aaa
xchg
mov
jo
push
inc
in
ret
mov
pushl
jl
loopne
ds
sbbl
sarl
icebp
pusha
mov
jno
mov
inc
hlt
int3
movsl
sub
push
dec
mov
lods
ljmp
pop
cmc
fnstsw
ja
aam
test
es
fiaddl
push
sbb
out
jmp
cli
mov
pop
mov
rcrb
xchg
lret
mov
mul
dec
mov
frstor
inc
cltd
pop
insb
push
cmp
xchg
rorl
inc
fmull
out
add
repnz
jmp
and
xor
dec
pand
ja
or
inc
sbb
ljmp
lcall
push
cmpb
das
clc
sbb
xor
cmp
scas
fwait
clc
incl
pop
jle
mov
les
je
scas
dec
pop
clc
mov
ljmp
call
adc
and
loope
or
mov
cld
mov
call
add
and
decl
js
aad
das
push
sbb
vprotb
js
jno
cmpsb
mov
push
adc
movsb
loopne
push
sti
xor
inc
fldt
mov
add
mov
adc
pop
lcall
and
mov
insl
push
cmp
pop
sub
lcall
mov
rol
sub
cld
rcr
mov
dec
in
adc
cltd
pop
lock
in
jle
adc
mov
mov
jbe
sbb
sub
pop
mov
sbb
decl
insl
lods
mov
adcl
popf
adc
cld
xchg
inc
fldcw
inc
mov
pushl
lea
and
aas
repnz
aas
dec
sub
loopne
or
inc
or
lcall
xchg
mov
inc
xchg
cmpsl
cmp
ret
dec
sub
shll
in
sub
cmp
fs
jns
and
outsb
xor
mov
add
add
bound
incl
sbb
xchg
loopne
in
cmc
bound
out
dec
adc
push
and
inc
xor
sar
jmp
pop
xchg
repz
rclb
or
xchg
or
sar
fidivrs
out
mov
push
push
icebp
mov
xor
sub
pop
ja
pop
out
cmpsb
mov
jp
sub
out
mov
sbb
sbb
xor
mov
sub
xor
dec
cmp
shlb
in
add
sbb
xchg
jns
cmp
dec
xor
jmp
add
mov
dec
and
lods
mov
ljmp
js
adc
repz
cs
das
movsl
out
inc
leave
and
decl
pop
xor
adc
xor
das
clc
jmp
pop
and
push
and
mov
clc
pushf
incl
shrl
sbb
mov
shr
inc
lcall
incb
test
repnz
imul
push
push
dec
and
jg
mov
pop
dec
aad
fldcw
imul
jecxz
cld
ljmp
rcrl
int
mov
movsb
cmp
test
lcall
xchg
addr16
xor
or
pop
xchg
ljmp
or
push
cmp
popf
pop
in
cld
cs
pushl
imul
pop
push
nop
or
xor
xchg
adc
mov
lret
data16
sub
push
pop
push
mov
and
mov
push
repz
andl
mov
sarb
sar
inc
out
mov
mov
jbe
sbb
add
test
outsb
inc
addr16
das
xor
mov
idivb
or
push
or
jge
pop
outsw
cli
ljmp
mov
jg
inc
test
loope
cltd
mov
dec
fstl
pushf
lret
ljmp
sub
mov
fs
sahf
sbb
pop
mov
in
cmc
mov
dec
decl
jmp
sub
shll
jg
xchg
jg
fs
mov
xor
inc
sbb
or
inc
cmp
xlat
pushf
add
jmp
popl
test
bnd
cmpsl
or
xchg
push
shll
movsl
popa
shrb
repnz
pop
jns
xchg
push
cmp
incl
xor
jmp
cs
lcall
cmp
xor
cld
imul
call
jecxz
cmpsl
lds
mov
mov
xchg
aaa
push
mov
pop
addr16
subb
lret
insb
repnz
fnstenv
cli
jecxz
stos
adc
mov
mov
adc
outsl
cmp
aaa
roll
xchg
add
js
lea
inc
xorl
cmp
icebp
popl
aam
addr16
jb
push
mov
push
cmp
fdivr
xchg
jg
fs
cmp
mov
in
pop
mov
test
clc
mov
jl
adc
adc
outsb
jmp
ret
xchg
loop
add
or
dec
fwait
mov
mov
pop
ret
cmp
out
mov
les
gs
jge
das
inc
add
mov
pop
jne
xor
lods
jo
js
je
adc
xchg
lahf
int3
jmp
lret
inc
sbb
pop
aaa
movsl
jne
nop
xchg
dec
hlt
sub
fdivrl
rcl
lahf
aas
and
cmp
inc
and
adc
push
into
mov
or
std
mov
or
xlat
stos
jg
call
enter
sbb
and
jmp
sar
cmp
add
div
mov
add
cmpl
stc
imul
inc
sbb
call
clc
jns
xchg
cs
test
decl
push
fs
insl
jle
pop
mov
pop
mov
loope
clc
repnz
mov
mov
movl
decl
cmp
push
je
mov
mov
les
pop
pop
inc
push
xor
jmp
pushf
ljmp
lock
pop
xchg
call
sub
hlt
lret
jmp
cmp
pusha
repnz
enter
jmp
sub
fiaddl
dec
or
jno
icebp
stc
addr16
mov
movsb
ljmp
pushl
mov
pushl
mov
fcmove
outsb
mov
outsb
es
and
cmc
sbb
push
pop
dec
or
cmp
out
test
jmp
dec
pop
stc
cmc
aam
mov
sbb
mov
jl
add
sub
mov
clc
sbb
inc
adc
push
mov
mov
push
imul
pushl
push
jb
jb
in
push
xchg
push
mov
aam
and
jecxz
in
adc
ret
jmp
dec
jp
cltd
imul
fidivs
call
sbb
imul
inc
pop
loopne
cmp
dec
push
lock
push
sub
or
out
adc
femms
cs
push
lcall
and
and
sbb
jmp
xchg
cmpl
pop
stos
xor
cmc
scas
and
rcr
jp
cwtl
and
jmp
ja
shrl
aaa
sub
lcall
fsts
mov
xchg
pop
rcll
cs
ljmp
in
decl
xchg
out
movsl
dec
mov
mov
mov
loope
mov
jl
lea
stos
fildll
mov
pushl
out
mov
mov
xchg
xor
hlt
add
pop
or
mov
lcall
cmp
mov
mov
adc
dec
push
push
mov
jns
and
pop
xor
push
pop
dec
fdivrs
mov
and
or
data16
call
sbb
icebp
in
adc
insl
sbb
mov
sbb
dec
pop
lock
call
shll
jp
push
mov
ret
ljmp
adc
xbegin
jmp
sub
in
hlt
jbe
lret
add
xchg
dec
mov
pushl
xchg
ret
xchg
out
xchg
dec
int
adc
inc
cmp
dec
sub
mov
adc
sbb
icebp
repz
add
fs
jmp
add
sahf
mov
lret
fdivrs
aaa
scas
adc
pop
loope
xlat
lcall
and
cmove
or
fstl
inc
pop
mov
lods
cmp
lcall
pop
shll
lods
dec
pop
and
lahf
pop
mov
jg
inc
cmp
fsubr
jnp
lods
push
hlt
xchg
inc
mov
xchg
sahf
fstp
xchg
lods
stos
adc
insb
or
sbb
jmp
inc
into
daa
add
cmc
sub
jo
flds
push
cld
sti
scas
mov
lret
mov
leave
test
jmp
pop
mov
lea
pushf
dec
mov
and
in
daa
lahf
push
in
lods
add
lret
push
call
out
push
add
xor
lds
das
cmpsl
dec
dec
xor
inc
faddl
out
xor
xor
mov
xchg
cmp
jl
mov
bound
xor
mov
xlat
mov
ds
mov
ljmp
dec
jl
push
or
adc
ror
jns,pt
dec
cld
int
loop
or
lcall
sbb
fs
bound
dec
cltd
and
test
aad
cmc
sti
inc
sub
sub
mov
faddp
ljmp
jne
mov
lcall
fcomps
lds
cwtl
das
outsl
push
sub
mov
les
jno
push
and
repnz
or
sub
and
out
jl
ja
inc
push
fprem1
mov
movl
cli
mov
lods
call
aam
sbb
and
mov
xor
icebp
jne
outsb
dec
pop
aad
cmpsb
and
add
pop
hlt
jmp
test
fnstenv
push
enter
mov
pop
sbb
icebp
outsb
dec
cs
cmp
mov
jecxz
inc
and
xor
sahf
aaa
lret
lcall
xchg
push
and
pushl
sub
push
cmp
cmpsb
sbb
outsb
mov
mov
lret
mov
decl
jns
push
addr16
dec
in
push
jg
sub
ljmp
push
scas
test
loopne
lods
jg
in
push
add
scas
xor
sahf
inc
mov
pop
inc
push
ljmp
dec
test
out
cli
cltd
jge
stos
pop
stc
and
push
xlat
test
imul
and
mov
cli
jg
bound
repz
lcall
pop
inc
fcomip
ljmp
nop
cmpl
mov
dec
cmp
mov
mov
cwtl
add
mov
and
mov
js
sub
hlt
or
mov
lret
test
pushl
jnp
into
pop
xchg
mov
mov
push
hlt
ja
xor
rolb
out
stc
rcr
xchg
jbe
or
aaa
icebp
inc
or
pushl
sti
inc
dec
shrl
push
mov
loope
pop
lock
push
sbb
inc
mov
or
cmp
int3
add
pushl
inc
sub
loop
mov
test
int
inc
das
stos
cmp
lahf
out
push
out
mov
inc
clc
jns
mov
lret
mov
cmp
ret
pop
sbb
cmc
xor
pop
cwtl
xchg
mov
movsb
mov
sahf
mov
push
add
sbb
jecxz
lods
jno
pop
mov
rcrl
mov
lcall
cmp
and
xor
and
int
fs
out
iret
roll
std
int
jge
sbb
cltd
jne
adc
dec
insl
mov
sbb
aas
pop
pop
mov
mov
mov
cli
jmp
pop
adc
pop
ret
loop
sub
push
fistpl
inc
mov
lcall
jp
push
scas
sbb
sbb
inc
pop
movsl
adc
jne
dec
pop
shrb
pop
cmc
outsl
pop
shrb
cmp
mov
jae
lea
dec
js
lds
lcall
das
cmp
adc
lcall
mov
cs
lods
or
popf
cmp
xor
int
add
lcall
test
push
push
mov
lcall
in
xor
jg
dec
cwtl
rorb
fucom
mov
ljmp
call
inc
jl
in
lahf
repz
sbb
jmp
mov
sbb
lret
pop
les
push
push
and
insb
mulb
hlt
or
xchg
stc
cltd
jb
loopne
hlt
roll
jo
call
cld
incl
imul
fmull
and
bound
jno
xor
decl
jle
jmp
lea
repz
mov
mov
mov
cmp
incl
shll
insl
fmuls
sub
in
xlat
lods
jmp
mov
cmp
loop
cmp
lods
scas
f2xm1
ss
pop
cmp
push
push
ljmp
imul
or
ljmp
out
sbb
rcrl
push
iret
and
push
lcall
mov
and
lock
call
sbb
inc
mov
pop
stc
and
dec
pop
mov
jbe
pushf
int3
xchg
inc
cld
push
jle
prefetch
pusha
out
ss
js
in
push
fwait
lret
add
fldt
idiv
incl
jp
lods
or
int3
inc
arpl
mov
adc
inc
in
imul
cmp
incl
dec
xchg
mov
sbb
pop
mov
data16
mov
lock
movsb
inc
push
leave
shrb
mov
ss
ja
jne
mov
inc
jae
sarl
mov
and
shr
inc
and
mov
aaa
cltd
cli
sbb
inc
hlt
or
fs
jmp
xchg
bound
cli
sub
mov
fmuls
fbld
inc
rol
sarl
out
loope
test
fucom
movsl
push
push
inc
mov
in
outsl
nop
pop
pop
mov
in
shr
ljmp
adc
jmp
sbb
pusha
hlt
sub
adc
lret
insl
in
fsubr
xchg
fisubrl
shlb
pusha
lea
rcrb
inc
fbstp
sti
add
inc
dec
inc
ja
call
js
mov
into
adc
pmuludq
sbbb
mov
push
aad
mov
sub
mov
jbe
lahf
lcall
sar
pushl
sub
imul
xchg
mov
in
ret
inc
push
frstor
and
or
pop
adc
decl
adc
or
sub
loope
mov
pushl
and
xor
jno
dec
adc
inc
nop
and
and
scas
jb
push
andl
mov
sarb
fwait
or
inc
or
js
insb
mov
hlt
cld
mov
inc
jecxz
ret
shll
xchg
dec
sahf
ret
scas
sub
xchg
int3
ret
stos
mov
mov
shrl
not
sti
push
mov
andb
push
jbe
lock
lcall
jp
int3
int3
adc
loopne
rol
loop
stos
cwtl
cmp
pop
pop
rorl
xor
fnstsw
es
pop
and
jno
cli
popf
shl
pusha
push
cmpsb
mov
pushl
push
cmp
lret
cmp
and
pop
cli
mov
jno
xor
ljmp
mov
cmc
rolb
lock
lds
and
cltd
aaa
sbb
inc
jmp
xor
xchg
incl
mov
jg
jle
cmp
xchg
xchg
mov
cmp
sbb
negb
push
pop
jecxz
mov
jae
add
incb
mov
ljmp
mov
dec
insb
jb
adc
sti
loopne
xchg
pop
ss
mov
fisubs
or
dec
or
inc
iret
pop
sub
pop
pop
pop
ljmp
dec
jecxz
xchg
insl
dec
addr16
and
xchg
cmp
pop
pop
add
stos
cli
adc
gs
insb
push
jg
out
push
cwtl
sbb
or
pop
dec
sub
ja
decl
xor
jg
pop
lock
ja
mov
incl
leave
imul
test
add
cmp
pop
xchg
into
stos
stos
xchg
notb
jmp
mov
add
jg
daa
push
leave
xor
xchg
push
xchg
ret
pop
loopne
fdivs
repnz
in
fcmovbe
scas
jbe
and
cmp
push
fldcw
xor
adc
dec
lret
imul
inc
sub
pop
xchg
clc
ljmp
mov
mov
or
loope
dec
dec
mov
push
xchg
push
mov
jb
sbb
dec
gs
cs
mov
shl
sti
jmp
or
ficoms
push
or
scas
fmul
and
lret
ja
jb
jg
stos
pop
daa
stos
scas
fnsave
call
imul
std
cmpl
add
add
incl
sbb
out
xor
and
fists
push
xchg
iret
iret
arpl
mov
mov
sbb
push
mov
inc
inc
ret
mov
and
inc
push
dec
nop
sbb
xchg
out
or
inc
mov
mov
inc
out
pop
pop
jbe
sbb
pop
les
and
fidivrs
or
call
inc
out
sub
cmp
hlt
std
test
lcall
out
ret
mov
cld
lods
addr16
fs
xchg
in
fwait
dec
fnstcw
test
lock
incl
test
loopne
lcall
in
pop
aaa
mov
or
repz
adc
mov
dec
lret
xor
dec
ds
incl
jp
outsb
addr16
insl
leave
add
in
xchg
xor
idivb
hlt
in
pushl
push
cmpsb
mov
and
pusha
imul
test
je
insl
xor
add
jb
mov
decl
jge
jae
pop
movsl
scas
mov
mov
jge
dec
pop
shrl
push
sbbl
lods
jg
inc
dec
mov
jge
dec
or
mov
popf
roll
lcall
int
dec
jecxz
leave
adc
push
jae
push
or
lcall
rol
xlat
inc
sbb
mov
fs
adc
mov
xor
call
jns
bound
jb
daa
or
xchg
xor
into
shr
call
ja
sarb
std
ljmp
inc
js
pusha
cmc
xorb
rcrb
adc
push
sub
jne
dec
out
adc
xor
lcall
jmp
sub
daa
add
cli
cmc
xor
mov
mov
icebp
addr16
push
outsl
addb
test
jge
aaa
outsl
cmpsl
push
and
inc
push
inc
inc
inc
sar
jmp
fmuls
inc
cmp
inc
mov
push
rcrl
mov
test
and
and
negl
xor
lcall
lret
sub
es
jp
add
in
pushf
cmc
xchg
test
rcrb
jns
mov
pushl
pop
js
adc
inc
sti
xchg
pop
aad
leave
imulb
mov
mov
jns
int
mov
ljmp
pushw
and
stc
rorb
sub
pushf
add
stos
fwait
addl
rcr
push
scas
mov
xchg
or
cmp
add
loopne
adcl
jl
insb
inc
je
ljmp
push
and
inc
cmp
iret
jmp
scas
ss
lds
xor
ss
out
js
jb
xchg
loop
hlt
movsl
jle
or
ja
push
fcomps
sbb
lahf
cmp
add
push
cmp
mov
stos
test
sahf
lcall
rclb
cmp
pushl
test
subb
sbb
and
gs
clc
stc
scas
pop
cmpsl
jnp
outsl
jae
ljmp
clc
psubd
std
jle
push
jecxz
in
arpl
ljmp
mov
scas
test
mov
push
popa
fwait
mov
stc
addl
cmp
jbe
mov
ret
call
movsb
push
xor
pusha
mov
div
jno
mov
xlat
fwait
loopne
sbb
pushf
shrb
fists
ficoms
jle
insb
mov
jge
and
shl
imul
dec
cmp
or
and
insb
js
fwait
mov
sar
outsl
cli
jnp
fmuls
lcall
xchg
std
sub
in
push
xchg
jmp
and
fcmovnbe
aas
inc
movsb
adc
xchg
push
ret
out
das
sti
pop
push
inc
imul
dec
pop
mov
jbe
lock
subl
inc
fs
ljmp
insb
mov
lods
rol
and
xchg
cmp
jl
mov
mov
popa
push
icebp
in
inc
mov
xor
jl
cmp
outsl
fistl
lret
lret
sub
mov
xchg
lds
jg
lcall
dec
adc
sub
push
pop
xor
pop
push
sub
mov
xchg
xlat
jge
mov
mov
call
fs
popa
inc
es
insb
jne
inc
inc
sbb
ret
pop
addb
dec
or
incl
jge
arpl
lds
lcall
stc
call
push
clc
mov
jmp
lods
lods
sub
scas
cmp
das
mov
lea
clc
jmp
sub
aam
inc
addr16
icebp
stos
mov
push
mov
movsb
shrl
mov
loop
mov
fstpt
in
int
aad
fcmovnu
mov
mov
in
ljmp
outsl
cmp
fwait
and
imul
ljmp
out
cmp
dec
scas
jl
idivl
ss
je
dec
jae
les
je
sub
call
jns
pop
cs
mov
pusha
insb
in
mov
cmp
push
jnp
in
lock
mov
sbb
push
iret
bound
gs
add
outsl
xchg
adc
sti
test
insb
push
call
cmp
shl
jbe
push
ret
popa
clc
jp
insl
xchg
pop
pop
nop
aam
adc
sbbb
cs
incl
in
dec
mov
fsubrp
xchg
jb
nop
pushl
enter
jae
pop
push
sbb
data16
negb
call
mov
mov
jno
cmp
cmpsb
mov
dec
or
test
outsb
or
or
call
fsubr
jbe
cmpsb
mov
stos
outsb
dec
mov
xchg
dec
nop
call
dec
push
jp
lcall
in
xchg
sbb
mov
cmp
xor
pop
inc
dec
jnp
push
jb
sub
add
lahf
mov
mov
aaa
inc
push
xor
mov
popf
dec
rclb
aaa
jbe
pop
jg
cmp
xor
cli
mov
pop
mov
fsubrp
dec
cld
decl
repnz
jmp
call
mov
and
cmpsl
inc
xor
cmc
jge
jg
add
shll
dec
push
pop
add
call
aam
mov
addb
xchg
jne
ja
cmp
jp
dec
popf
jns
push
jmp
fcmovne
sub
jg
xchg
test
sub
shrl
lea
push
pop
inc
pop
call
xchg
sub
cmp
mov
fwait
popf
mov
add
push
fimuls
jle
movsb
lret
aas
mov
push
ret
inc
push
or
jo
ss
outsl
repnz
pop
xchg
mov
mov
pop
pop
jno
fistpll
dec
jae
or
dec
loop
in
ljmp
leave
iret
leave
adc
add
loop
mov
pusha
mov
mov
cld
fwait
mov
pop
sub
sub
ror
pusha
pop
xor
or
popf
add
pushl
xor
lret
rolb
sbb
and
lds
or
push
cmp
add
mov
and
xor
out
out
ror
adc
pushl
lret
add
es
sub
inc
push
mov
push
idivl
push
adc
decl
xchg
xchg
lcall
mov
mov
inc
and
inc
or
lcall
mov
inc
cmp
mov
lcall
mov
xor
test
gs
jmp
es
inc
icebp
inc
test
mov
sbb
and
and
add
mov
jg
imulb
insl
xor
mov
mov
mov
cwtl
pushf
mov
push
push
clc
sub
jge
or
incl
in
dec
jg
push
std
mov
fs
nop
add
cmpsl
shlb
shrb
jnp
pop
gs
inc
scas
imulb
jle
jo
pop
mov
ss
sti
arpl
lcall
inc
lods
out
mul
xchg
addr16
pop
or
inc
fwait
push
pushl
xchg
repnz
pop
cmp
fs
ret
aaa
std
decl
iret
shlb
bound
mov
mov
inc
push
daa
fisubrl
jg
aas
andl
lcall
movsl
jne
mov
push
mov
mov
jle,pn
cmp
incl
xor
movsl
mov
xor
les
gs
mov
call
and
push
fldcw
mov
scas
and
stos
push
sub
push
mov
lods
out
xor
adc
in
inc
and
or
scas
clc
add
push
lahf
mov
pop
inc
jl
xor
das
xchg
mov
in
mov
pushl
stc
xchg
lock
mov
test
insl
aad
movsb
pop
or
les
nop
idiv
inc
jp
shrl
shlb
pop
push
and
shl
jmp
fidivrl
stos
daa
hlt
fisttps
or
dec
aad
fisttpll
adcl
inc
dec
repz
enter
sahf
mov
pop
mov
lea
push
push
aam
fisttpl
push
mov
incb
outsl
and
jmp
int
incl
stc
mov
sti
mov
rorb
mov
inc
sbb
orb
ljmp
xchg
mov
xchg
xor
in
inc
lock
imul
insl
popa
add
dec
fucomp
mov
scas
pop
daa
in
outsl
jmp
fsubrl
jns
aaa
push
enter
add
lds
jp
fbstp
out
pop
sub
pop
inc
xchg
mov
out
into
pop
push
movsl
pop
dec
push
fldl
mov
pushl
mov
loop
cmp
pop
outsb
add
adc
mov
decl
mov
cmc
mov
jnp
push
lret
cmp
xor
adcl
mov
and
xchg
fisubl
jae
out
mov
orb
ret
cli
aaa
sbb
fimull
andb
xchg
inc
mov
cmpsb
jne
aad
push
or
das
rorb
aam
mov
jl
sbb
mov
call
icebp
and
and
cwtl
cmp
testl
sbb
jmp
outsb
sub
mov
lret
fidivs
ljmp
jbe
out
dec
jo
dec
fisubl
inc
sahf
mov
call
dec
es
rcl
cmp
pusha
insl
in
sbb
xchg
nop
xchg
fstpt
inc
and
jb
aad
fwait
sub
fadd
xchg
aaa
fwait
push
idivl
jl
jo
jno
decl
pop
cli
imul
mov
inc
inc
movsb
sub
imull
lret
jge
sub
adc
cmpsl
mov
test
addr16
jns
mov
pop
mov
cmp
mov
jmp
or
movsb
subb
adc
lock
pushl
or
mov
adc
xor
lret
insl
xor
cmpsb
mov
cli
xchg
test
add
xor
dec
lret
ficoms
inc
mul
add
aad
stos
out
jns
mov
sub
rsqrtps
jno
jmp
pop
scas
ss
jg
call
jns
sbb
sub
pop
add
adc
fdivs
mov
es
clc
test
lea
sbb
jmp
push
das
cmpsb
xor
push
in
fwait
jl
xchg
xchg
test
xchg
push
mov
add
fdivrs
pusha
ss
jnp
imul
fs
iret
movsb
je
stos
inc
ret
sub
idivb
lds
frstor
jns
jbe
pop
dec
loopne
mov
sbb
mov
mov
js
fincstp
fistl
push
mov
ljmp
sti
jmp
xor
pop
fistl
cwtl
arpl
test
cld
or
xchg
fwait
inc
jge
sahf
incl
into
rclb
and
mov
data16
mov
fisubl
mov
out
scas
incl
es
rorb
add
adc
cmp
inc
and
cmpb
sbb
out
xor
jg
addr16
pop
cmp
stc
mov
cwtl
test
jbe
dec
xchg
jp
fcoms
fsub
test
rolb
add
jns
sub
xor
adc
aaa
cld
sub
fcmovb
inc
pusha
rorb
pop
cs
sbb
xchg
push
ds
push
add
pusha
in
inc
jns
fcmovnb
jbe
xor
cmp
jp
inc
das
add
pushl
push
ljmp
pop
nop
lea
insb
mov
jns
jae
mov
lcall
icebp
xor
and
add
in
shlb
sbb
jbe
cltd
imul
test
dec
inc
les
and
idiv
ja
push
pop
pushf
aad
outsb
mov
mov
in
add
jp
or
int3
mov
shll
xchg
dec
iret
fcomip
adc
cmp
sbb
pusha
mov
mov
repnz
call
scas
push
inc
sub
in
dec
push
xchg
jmp
pop
and
sti
push
dec
or
ds
mov
cmp
call
mov
inc
xor
lcall
mov
fs
pop
jle
sbb
lds
test
pop
add
add
call
and
stc
cli
inc
stos
gs
pop
movsl
mov
add
pop
jle
or
cmpsl
inc
xor
sbb
xchg
std
dec
add
jecxz
sarl
je
repz
xlat
mov
arpl
jle
stc
shrb
les
call
ljmp
cmp
psrlq
push
aaa
dec
les
clc
out
jle
out
or
adc
and
pop
outsl
inc
xor
sbb
xchg
push
mov
pop
sbb
sahf
sbb
fbld
dec
or
std
cld
sti
mov
ss
movsl
mov
pop
sar
lods
loopne
ss
push
inc
pusha
add
add
test
scas
clc
pushl
sub
sbb
clc
xchg
pop
sarb
jmp
jbe
jecxz
nop
cmp
clc
fs
enter
inc
mov
inc
pop
jecxz
lahf
es
fnstenv
aaa
rcrb
inc
ljmp
xchg
pusha
inc
lods
cmpsl
xchg
cmpsb
or
and
pop
push
jge
movsb
xor
push
and
pop
pushl
jle
mov
repz
or
iret
scas
sbb
cmp
dec
test
jmp
or
ljmp
dec
stc
out
pop
xchg
push
pop
into
les
insl
jmp
imul
or
std
call
shll
cmp
fdivr
xorl
lods
mov
inc
ljmp
dec
mov
mov
cltd
cmpsl
sbb
das
rclb
push
idiv
in
loop
fsubrs
mov
in
mov
in
lret
incl
decb
in
shl
out
push
cmpsl
mov
ret
sti
mov
insl
cmp
call
xchg
xor
and
mov
lods
jb
out
jg
and
or
rcl
ljmp
imul
dec
mov
popf
sub
or
cld
mov
pop
test
shrb
jns
mov
sbb
inc
ret
pop
stc
pop
mov
adc
adcb
cs
in
std
pop
jbe
idiv
out
clc
pop
xlat
xor
jl
and
or
mov
cmp
xchg
fmuls
or
sub
cld
mov
lret
mov
jae
add
fadd
ficompl
out
and
iret
sub
mov
add
jmp
int3
sbbb
sbb
mov
sub
les
out
decl
pop
sti
adc
dec
mov
andb
pop
jl
cltd
cmp
cmp
clc
jmp
cld
inc
sar
mov
xor
inc
mov
loope
add
sbb
pop
mov
jp
decl
inc
mov
dec
mov
jnp
push
mov
push
push
ljmp
lret
sarb
nop
ret
into
xchg
cmpl
inc
add
fwait
out
push
scas
or
pop
scas
dec
mov
jmp
push
jg
outsb
out
loop
adc
not
sahf
sub
mov
push
xlat
imul
jmp
mov
xor
cmp
mov
cmp
dec
mov
mov
xlat
mov
sub
sub
push
sarl
cwtl
out
jbe
cmp
decl
dec
sub
movsb
inc
adc
pop
outsb
xor
dec
filds
jb
mov
outsl
push
int3
cmp
jnp
mov
insb
scas
pop
adc
or
or
jmp
sub
loop
daa
pushf
arpl
cmpsl
repnz
sbb
fadd
push
outsb
xor
in
movsb
mov
nop
daa
jmp
xor
mov
popa
aam
js
dec
jp
adc
lcall
inc
andl
pop
mov
popa
stc
lods
leave
jmp
insl
mov
ret
cltd
dec
xchg
mov
adc
cwtl
jns
aas
test
pushf
repnz
rcl
jnp
mov
pop
mov
rolb
push
sbb
inc
orl
mov
cld
fbstp
add
test
jg
rcll
pop
pop
lahf
pop
inc
in
pop
xchg
adc
sarb
jno
mov
lock
and
jl
jmp
and
cmc
jg
jg
int
push
filds
data16
dec
sahf
inc
mov
movsl
outsb
pop
xor
dec
test
push
push
lock
fwait
add
adc
mov
inc
pop
sub
jo
pop
mov
lret
jp
add
xchg
ret
or
dec
call
scas
cmpsl
ljmp
mov
in
mov
sub
dec
test
and
adc
arpl
mov
sub
xchg
and
xchg
call
lahf
ret
bound
mov
fimuls
sbb
hlt
jmp
ljmp
mov
cmc
cmp
xor
mov
cwtl
mov
es
sbb
out
cli
mov
xchg
cmp
mov
rorl
fmuls
mov
add
pushf
pop
dec
lea
mov
int
cmp
mov
fldlg2
imul
xchg
mov
mov
push
shlb
mov
mov
mov
enter
xchg
iret
dec
cmpsb
cmpsl
mov
sbb
ja
jae
hlt
dec
imul
ja
xchg
cli
and
adc
mov
jp
dec
mov
or
mov
add
mov
scas
clc
pop
lcall
adc
and
sub
pop
lcall
ficoml
scas
inc
mov
in
data16
into
fdivr
pop
std
call
fwait
testb
mov
cmpsl
adcb
js
mov
cmp
mov
test
xchg
lret
mov
ljmp
xchg
inc
add
mov
inc
adc
dec
ret
dec
lods
iret
dec
incl
jle
clc
addr16
push
pop
out
push
inc
dec
or
cmp
ljmp
and
sbb
xchg
call
sbb
mov
add
test
mov
rcrl
movsb
push
mov
mov
sbb
das
mov
pop
push
mov
lcall
out
mov
pushf
mov
je
mov
push
and
xchg
fneni(8087
and
insl
pop
and
mov
decl
je
sahf
jmp
cs
ret
cmpsb
test
lea
jmp
test
lahf
mov
je
mov
sub
mov
test
jp
test
movsb
mov
sub
inc
sub
and
pop
xchg
xor
cmp
ret
cmp
sbbb
out
or
xor
jle
mov
sbb
das
scas
xchg
decl
add
sub
adc
call
jno
lret
ret
cmp
test
xchg
push
jno
pop
lea
dec
pop
aas
inc
cld
mov
arpl
outsl
cmpsl
rolb
call
jge
nop
fstpt
adc
inc
xchg
ret
adc
mov
pusha
inc
sbb
lcall
fdivrl
xchg
lea
xor
add
sahf
push
sbb
jmp
mul
jmp
addb
lods
cs
rorl
jo
cltd
rol
call
lcall
dec
outsl
xchg
sbb
pop
mov
aaa
jo
nop
ficomps
mov
shrb
xchg
daa
cmc
cmp
incl
sbb
shrl
pusha
or
outsl
add
or
cmp
and
xchg
inc
incl
cmp
movsb
leave
movsb
shlb
cmc
or
inc
movsb
sahf
cmp
popf
sub
inc
ror
lock
aam
or
push
xchg
sbb
cld
lcall
jno
or
cmp
or
rolb
sbb
mov
sub
add
dec
std
jl
addr16
jbe
and
lea
pop
daa
inc
push
mov
fildll
adc
add
in
inc
push
pop
sbb
movsb
and
pushl
or
dec
or
sbb
and
in
subl
push
lcall
push
jo
loop
adc
xor
xor
sbb
mov
lods
call
call
inc
xchg
mov
cmp
aam
loope
jp
mov
mov
cmpsl
sti
insb
or
fldl
adcl
xchg
stc
ret
mov
sbb
cmp
jb
jno
xor
ret
add
push
int
and
lcall
sbb
or
ljmp
or
cmp
lret
addl
aas
out
xor
imul
lods
jmp
in
lock
xchg
int
out
push
xor
ss
sub
dec
mov
imul
add
nop
aad
decl
sub
sub
sbb
push
add
push
push
subl
xchg
in
lock
mov
ljmp
and
jae
stos
rolb
out
inc
ja
pop
popf
adc
sub
sub
lods
lahf
gs
ljmp
xchg
mov
mov
xchg
stc
adc
out
movsl
pop
fidivrs
subb
xor
xor
lcall
aaa
movsb
push
cmp
jno
imul
push
pop
and
out
fmull
add
and
mov
iret
mov
mov
sbb
mov
jmp
push
mov
bndstx
mov
add
sti
fcomip
nop
dec
mov
lds
mov
and
dec
mov
xchg
sub
mov
push
cmp
mov
lods
pop
adc
inc
lcall
sub
sbb
push
add
in
adc
rcrl
fwait
imul
mov
outsb
mov
mov
sub
or
in
inc
loopne
pushl
sub
repz
mov
rclb
dec
inc
add
mov
lret
int3
nop
sub
leave
sub
add
lcall
push
mov
insb
sbb
cmp
insl
addl
and
pushl
pop
xchg
push
push
aaa
adc
sbb
xorb
ret
xchg
jmp
inc
adc
mov
add
call
mov
lods
and
test
push
cltd
inc
lahf
rcll
outsl
int3
add
cmpxchg
adc
cmp
je
mov
aaa
mov
jmp
loope
in
je
outsl
inc
pusha
sti
push
and
call
ljmp
mov
or
mov
ror
sub
faddl
add
jle
lods
mov
scas
cli
imul
sbb
inc
xchg
adc
sar
lcall
push
jae
dec
js
sub
lock
syscall
lahf
je
xchg
jmp
pusha
cli
jmp
mov
imul
sub
cltd
arpl
cmp
mov
cli
in
call
subl
mov
sub
popa
xor
jne
mov
mov
fcomip
jmp
xor
or
lret
insb
into
jge
mov
imul
aas
and
add
fcomip
pop
lods
mov
enter
sub
lea
repz
cld
call
in
lea
mov
adc
sbb
daa
add
lret
adc
jb
xor
jecxz
js
jbe
sub
push
icebp
add
push
mov
xor
or
pop
enter
incl
adc
fnstsw
and
dec
lea
xchg
incl
arpl
pop
mov
and
push
adc
bound
or
jmp
jl
pop
scas
push
sbb
or
push
addr16
sahf
cmp
mov
cmpsb
je
ljmp
mov
xor
push
push
or
cmp
jg
out
dec
repz
loop
xor
in
jle
push
fsubp
cmp
mov
leave
insl
sbb
jnp
mov
pop
call
pop
mov
sbb
adc
xlat
pusha
xchg
add
div
or
sti
fs
fwait
ret
pop
lock
subl
cltd
pop
lds
adc
sbb
cmp
icebp
hlt
mov
mov
in
cli
icebp
jnp
jo
sbbb
iret
xor
jb
ret
jb
arpl
jmp
or
mov
ljmp
das
xchg
cmp
stos
inc
sbb
mov
ljmp
xor
dec
sub
mov
leave
leave
movsb
dec
movsb
cmp
cmp
mov
xor
lret
xchg
sub
cmpsb
pop
push
mov
mov
cld
repz
cmc
pop
mov
ljmp
mov
pop
movsb
xor
cmpsl
jno
pop
adc
mov
add
xchg
fiaddl
cwtl
or
fcomip
sti
adc
jecxz
mov
inc
decb
les
stos
push
sahf
outsl
cli
dec
jp
data16
jo
inc
cmpsl
aas
inc
dec
loope
xor
fnstcw
xor
push
mov
push
mov
adc
jmp
push
jo
add
pop
jle
hlt
push
into
pop
and
imul
add
mov
or
es
fidivrs
pop
and
inc
mov
mov
daa
test
repnz
jmp
pushl
sub
sbb
cmp
orb
loopne
inc
and
lds
sub
incl
in
loopne
es
lock
adc
mov
cmp
ss
cld
pushl
mov
or
pusha
std
mov
add
cli
decl
fistpll
out
jg
xor
jo
mov
in
sbb
frstor
add
sbb
mov
out
jecxz
ljmp
fidivrl
clc
jmp
inc
jne
nop
mov
decl
mov
lods
aas
jbe
jge
in
into
jmp
icebp
pusha
loopne
ljmp
aam
clc
into
stos
jle
or
call
lahf
cmc
pop
jbe
shl
push
test
insl
mov
repnz
or
push
icebp
incl
mov
cltd
sbb
jae
push
sbb
lret
sahf
lods
sub
mov
jg
sub
pop
sbb
sub
scas
cli
pushl
loopne
es
lret
arpl
xchg
aaa
pop
ds
inc
aad
pop
icebp
ja
cmp
outsb
insb
cmp
repz
cmc
mov
inc
mul
mov
icebp
sbb
mov
pop
jge
dec
adc
ljmp
xor
leave
sub
jmp
or
adc
test
loope
jnp
cmp
fldl
mov
cmp
mov
mov
dec
std
inc
xor
out
iret
sbb
ljmp
test
add
adc
inc
cmpsl
and
arpl
fldl
push
imul
sbb
xor
lcall
jmp
dec
shl
mov
jg
push
pop
fidivl
popa
popf
mov
fldt
adc
mov
and
push
mov
xchg
inc
or
cmpsl
dec
push
outsl
mov
dec
lods
aad
call
or
int3
mov
ljmp
push
and
cmp
enter
repnz
and
imulb
or
call
cmp
dec
stc
sbb
das
out
test
mov
addps
cmp
jecxz
shrl
test
ljmp
mov
test
stos
sub
divl
adc
ljmp
shll
sbb
xorl
ret
jb
scas
mov
shlb
sbbb
clc
decl
lret
cmpsl
mov
and
adc
add
sbb
shl
decl
testl
shl
movb
lcall
cli
jne
aaa
dec
int3
add
mov
fdiv
pop
or
outsl
push
into
int
cmp
movsb
cmpsb
mov
cwtl
clc
out
cmp
push
cmp
and
push
scas
cmp
inc
movsb
into
jge
nop
xchg
or
ret
xor
decl
scas
jecxz
mov
sub
dec
mov
mov
push
xchg
test
into
xchg
arpl
cltd
mov
lcall
pop
push
mov
or
xlat
rcrb
mov
pop
mov
jo
decl
jb
aad
add
push
push
pop
adc
out
pop
mov
dec
ret
out
stc
repnz
addr16
es
cmp
sub
push
and
pop
ss
cltd
ljmp
sar
xor
push
dec
pusha
push
sub
popf
add
stos
xchg
push
lret
clc
call
add
insl
fcmovnb
in
and
js
cmpsb
and
mov
dec
dec
adc
pop
jp
mov
andl
ljmp
jno
cmc
add
call
cmp
clc
mov
dec
mov
out
outsb
js
popa
lcall
out
loop
xchg
cs
push
std
adc
arpl
pop
popa
ss
lods
loop
lcall
sbb
jns
in
adcl
adc
cs
xchg
lock
clc
incl
push
xlat
sub
or
sbb
jle
fdivs
out
iret
pop
or
mov
mov
jg
addr16
jg
imul
mov
loope
leave
movsb
push
mov
jb
jnp
mov
inc
adc
inc
fldl
sub
lcall
fidivl
sbb
mov
rcll
je
in
jae
test
fcomip
incl
mov
bound
ret
mov
mov
or
test
in
into
adc
lcall
dec
daa
mov
in
push
mov
pop
pop
add
mov
imul
ret
ud0
lcall
mov
aad
pop
adc
mov
imul
dec
cmp
movsl
xchg
cmp
int
dec
dec
cmp
mov
daa
mov
aas
and
test
xchg
xor
es
inc
jl
inc
sbb
pushl
inc
adc
nop
fbld
cmp
sub
push
ljmp
ljmp
lock
pmuludq
sarl
mov
insl
stc
xchg
mov
mov
bound
mov
cs
or
lods
test
add
lcall
test
cmp
dec
xchg
jno
or
out
inc
add
scas
sbb
ljmp
fwait
mov
ja
lret
out
insb
push
in
add
mov
ss
add
add
cmc
fdivs
insb
inc
out
inc
gs
fwait
dec
pop
std
fsts
sub
dec
mov
sub
mov
jmp
mov
int3
and
inc
cld
sub
or
cmp
lcall
mov
cmc
and
cmpsb
daa
inc
sub
inc
mov
xor
xlat
lret
or
incl
inc
iret
and
inc
ljmp
push
lods
and
int3
xchg
and
leave
out
clc
cmp
cmp
fdivl
das
and
pusha
cmp
not
dec
notl
pop
and
incl
repnz
fidivl
fwait
add
push
xor
jmp
pop
scas
mov
push
call
mov
pop
xor
lahf
cwtl
flds
xchg
pop
pop
mov
pop
mov
ljmp
mov
dec
jb
cli
pop
data16
decl
outsb
jecxz
adc
xchg
and
adc
dec
imul
add
paddw
add
cld
test
aaa
mov
or
and
insl
mov
aam
and
imul
scas
cmpsb
xor
out
clc
jmp
mov
sbb
or
mov
inc
dec
mov
mov
test
ljmp
ljmp
push
cmp
mov
in
sbb
decl
mov
hlt
or
jp
ss
cmp
popf
add
lcall
pop
xchg
fs
push
rcll
shll
imulb
scas
pop
sar
into
mov
shlb
mov
notl
sar
mov
mov
adc
sbb
pop
add
cld
add
xlat
jle
lret
sahf
mov
mov
jle
repnz
lds
lret
leave
lahf
mov
scas
mov
lcall
dec
mov
je
test
inc
sahf
fwait
dec
cli
adc
iret
xchg
cmpsb
cmp
sti
pop
mov
xor
dec
dec
pop
test
jecxz
sar
dec
cmpsl
in
fcoml
jle
sub
pop
or
popa
lods
sub
stos
lock
lods
dec
mov
jg
addb
lcall
and
xchg
scas
mov
rolb
out
fldcw
out
scas
lock
jmp
rcrl
cmc
ret
add
cltd
add
push
mov
xor
add
ljmp
inc
cwtl
fildll
and
jp
xchg
loopne
aad
es
clc
ret
and
inc
jno
xor
push
lock
outsb
mov
daa
lret
test
gs
adc
cli
pop
into
into
or
and
call
nop
cmpsb
or
push
mov
stos
std
leave
das
test
and
insl
fldcw
cs
mov
sub
adc
or
pushl
pop
lods
or
xchg
pushf
cld
int3
shrl
fxch
pop
es
imul
out
inc
call
inc
outsl
loopne
mov
ss
mov
incl
mov
and
and
test
mov
rcl
mov
pop
gs
nop
shll
movsb
dec
jns
int3
into
in
ljmp
or
xchg
cld
add
adc
clc
lret
lcall
inc
jecxz
std
jb
cwtl
pusha
mov
pushl
stos
cs
mov
pop
stos
dec
aad
je
push
imul
push
int3
lods
mov
outsl
pusha
push
mov
jo
mov
dec
icebp
outsl
jg
jmp
ljmp
bnd
rcll
xor
call
or
mov
cld
and
sub
scas
or
int
in
pusha
arpl
sub
sub
repz
or
into
scas
int
jge
sbb
and
lea
inc
mov
push
mov
inc
lods
cmpsb
int
dec
mov
mov
cmc
sub
hlt
lcall
mov
out
mov
mov
mov
pop
repz
cmpsl
das
mov
je
cmp
mov
lods
jns
xor
pushl
push
in
push
cmp
in
cmp
and
cmp
jle
decl
je
data16
leave
loop
jle
mov
push
sub
imul
imul
and
dec
sub
andb
test
cmp
pushl
mov
cli
mov
test
sbbl
cmp
in
pusha
stc
ret
out
ss
or
in
scas
scas
add
lcall
decl
dec
shrl
mov
aad
scas
dec
inc
iret
daa
shl
hlt
lds
inc
mov
lock
call
roll
add
and
pop
lds
pusha
movsl
loope
jmp
jecxz
ds
fs
add
xchg
adc
push
pop
jg
roll
push
cmpsl
inc
repz
lret
aam
das
push
add
dec
bound
xor
adc
push
xor
cmp
shlb
mov
add
lods
push
cmpl
pop
sub
dec
cld
jb
adc
mov
rclb
ret
test
lahf
adc
xor
ja
ret
and
popa
faddl
decl
mov
out
int3
jb
js
scas
xchg
pusha
mov
repnz
inc
subb
rol
ljmp
in
mov
xchg
add
mov
test
xchg
xlat
sbb
iret
clc
mov
push
xchg
ret
and
cmpl
ret
sbb
cltd
mov
movsl
adc
xor
add
sub
mov
xchg
pushf
iret
xor
dec
jae
jg
fsubs
cs
push
sub
xchg
adc
and
aad
and
dec
outsl
das
insl
loopne
jge
sub
pushl
out
xor
int3
push
cmp
mov
sbb
xor
push
xor
pushl
push
clc
test
jecxz
xchg
pop
pop
test
xchg
sbb
or
cli
sub
mov
xchg
push
cmc
xchg
xchg
nop
std
pop
imul
dec
imull
gs
mov
inc
adc
jecxz
sbb
jg
je
fs
loope
mov
les
mov
fsub
xor
ljmp
lahf
mov
xchg
lahf
push
scas
fwait
notl
lods
test
fldl
pop
mov
pushl
jnp
dec
add
mov
mov
aam
rorb
jecxz
loop
cmp
mov
lods
mov
cld
inc
mov
repnz
push
fs
mov
sub
decl
mov
ret
popa
pop
jno
call
loopne
bnd
mov
cmpsl
imul
push
test
dec
out
je
ja
addr16
fbld
outsb
movsb
imull
mov
mov
das
decl
movsb
clc
sar
mov
nop
sub
cmp
aam
pop
stc
xchg
xor
xchg
jmp
or
or
test
daa
fs
shl
mov
mov
psraw
int3
mov
ljmp
nop
cmc
in
sbb
jmp
jmp
daa
jo
movsl
orb
cmpsl
mov
jmp
repz
jbe
out
xor
fstl
cs
inc
fdivl
scas
stos
iret
rcr
jbe
xchg
mov
icebp
push
fistpll
mov
stos
mov
std
inc
fsts
out
nop
sbbb
jne
or
lock
ffreep
xchg
int3
dec
shrl
and
stc
imul
dec
xchg
jns
cmp
jno
mov
mov
and
mov
gs
sbb
enter
mov
mov
xchg
sti
cmp
pop
aas
push
jne
fildll
decl
jns
pop
xor
fnstsw
inc
push
and
testl
push
adcl
incl
adc
shl
push
jno
sbb
ss
ja
xchg
mov
cmc
jl
repz
imul
mov
out
addl
dec
dec
xchg
inc
cmp
incl
loopne
mov
dec
add
push
mov
jb
call
sub
leave
push
push
mov
mov
repz
cli
jmp
and
scas
xchg
mov
mov
push
ljmp
test
inc
jns
out
cwtl
test
adc
aam
in
jo
stc
icebp
iret
repnz
jns
icebp
lcall
das
mov
mov
pop
jp
fs
push
fistl
dec
xchg
cld
aad
testl
loopne
push
jge
fcos
call
lret
xor
sbb
sbb
fs
shlb
rcrl
jg
adc
das
mov
xor
popf
incl
cld
decl
mov
aaa
mov
push
pop
mov
xchg
sub
in
out
xchg
incl
mov
push
mov
mov
mov
dec
jmp
call
mov
adc
pop
adc
push
pop
mov
jnp
add
out
push
adc
fsubl
sti
and
lock
es
and
pop
aad
out
sub
pop
outsb
sub
out
repz
mov
sub
sbb
add
popf
lret
ret
std
ljmp
idiv
jno
mov
pop
mov
cwtl
sub
rorl
mov
add
pop
enter
jl
decl
daa
mov
inc
pop
xor
out
sub
sub
pushl
mov
push
push
push
in
or
aaa
inc
pushf
loopne
jb
sbb
pop
xor
es
call
and
das
das
les
hlt
add
pop
fmuls
fisttps
ljmp
shrb
in
sbbl
dec
adc
shll
push
dec
mov
cmp
cmp
incl
loopne
push
es
cmpsl
in
jnp
ja
mov
ds
sbb
pop
mov
cli
pop
xor
jo
mov
mov
loopne
nop
or
dec
sar
dec
push
je
and
int3
lea
sete
mov
add
or
not
push
xlat
out
sub
ja
sbb
lret
mov
lea
fsub
dec
lcall
jl
imul
and
inc
and
nop
inc
sti
dec
jecxz
sbb
std
filds
pushl
fwait
pop
rorb
movsl
inc
rol
bound
dec
mov
in
fdivs
sbb
mov
mov
jg
dec
mov
mov
adc
push
fldenv
mov
mov
cmp
pushf
movsl
ficoml
aas
sarb
imul
cmp
lcall
jmp
mov
movsb
shll
add
sahf
stos
ret
repnz
pushf
xchg
dec
push
loopne
mov
pop
xlat
rcrb
out
push
cld
jo
or
mov
ss
dec
push
add
ljmp
mov
dec
lret
out
and
mov
dec
inc
jae
dec
aad
xchg
ljmp
or
test
sub
xchg
cmp
push
les
dec
aas
xchg
pop
stc
jno
mov
mov
repnz
mov
sbb
sahf
decl
clc
push
xor
mov
sbb
jbe
xchg
or
add
jmp
mov
sahf
mov
test
sbb
pop
ret
inc
fisubs
lcall
jle
sbb
xor
jmp
xchg
xor
xchg
pop
je
push
adc
ja
rclb
dec
xor
push
ljmp
ret
sub
inc
and
pop
mov
filds
out
scas
lahf
lods
sbb
pop
loopne
subb
mov
out
jg
xchg
mov
out
xchg
and
jno
movsb
mov
jns
inc
fs
ljmp
sub
xchg
addl
xlat
push
dec
cmp
scas
mov
jae
ret
add
ljmp
cmpsb
cmp
cmp
cmc
jnp
lods
or
dec
scas
scas
pop
out
mov
pop
sub
xor
cmc
arpl
out
mov
cmp
sub
push
push
movsl
roll
bound
test
mov
inc
mov
dec
and
adc
jo
movsb
fcomip
mov
rclb
add
mov
or
out
lcall
loop
xor
mov
xor
and
sub
enter
dec
cmp
in
push
xor
outsl
add
inc
mov
inc
cmp
sbb
xchg
shr
mov
incl
ret
fdivs
ret
pop
jns
fs
js
inc
jae
cli
loope
hlt
xor
aam
es
and
test
push
mov
test
test
xchg
add
clc
pushl
loope
mov
jge
adc
xchg
pushl
sbb
mov
mov
dec
movl
inc
lahf
jmp
pop
cmc
jmp
dec
out
nop
mov
int3
and
int3
mov
sahf
and
jmp
jns
es
mov
incl
cmp
push
and
jns
xchg
mov
xor
scas
pop
xchg
and
sbb
dec
fsubrl
popw
loope
or
sbb
cmpsb
in
push
xchg
push
pop
stc
sar
fsubrs
movsb
fimuls
popa
mov
outsb
pusha
xor
out
add
mov
popf
mov
icebp
push
sub
inc
call
decb
mov
aaa
sbb
jg
fs
outsb
popa
aas
xchg
jmp
pop
sbb
cld
jmp
enter
mov
into
outsl
xchg
mov
xlat
test
dec
xor
mov
push
jp
pop
enter
lret
test
xchg
add
xchg
add
mov
cmp
rcll
jmp
test
in
ret
inc
and
pusha
leave
decl
lret
rcrb
mov
aad
aam
mov
ds
cmpsb
dec
movsb
mov
cmp
fwait
push
cmp
gs
inc
dec
aad
and
jg
incl
mov
into
add
dec
mov
xchg
test
dec
pop
pop
in
mov
sub
ljmp
mov
jne
cwtl
vcomisd
sbb
sbb
je
ffree
jmp
cli
shlb
outsl
mov
cmp
lods
insl
mov
adc
mov
popa
dec
mov
push
stc
push
xor
jnp
sbbl
mov
loop
add
addr16
loope
pushf
xchg
sar
mov
cmp
or
mov
call
shlb
cmp
mov
test
mov
jg
ret
sub
cmp
add
dec
dec
pop
pop
adc
mov
add
cmp
and
and
insb
cmp
es
stc
mov
pushl
mov
inc
add
pusha
int
stos
pop
sbb
cltd
mov
sub
insl
inc
ret
inc
ret
mov
out
aaa
push
mov
rcll
mov
sbb
mov
push
jg
fsubrs
push
aad
sub
push
call
jg
call
scas
cmpsl
out
jne
cmp
push
in
push
pushf
dec
and
daa
push
lcall
nop
pop
popf
inc
cli
int3
aas
pushf
adc
and
jge
jo
fs
cmp
ljmp
rorb
mov
ja
sbbb
stos
test
adc
xchg
cltd
incl
das
scas
inc
jg
mov
ja
inc
xor
repnz
test
dec
cmp
jmp
xchg
mov
xchg
jne
or
ss
mov
mov
test
pushf
mov
mov
decl
mov
dec
idivb
das
bound
xchg
rcll
xchg
adc
and
or
xchg
daa
add
cmp
push
orb
adc
push
adc
rorb
cwtl
addl
in
xchg
dec
aas
rcrb
inc
lcall
pushf
pop
not
jo
push
in
mov
es
jae
mov
pop
lods
imul
adc
pop
xor
push
fwait
push
lea
call
inc
pop
push
push
imull
pushf
movsl
inc
dec
add
xor
clc
call
clc
or
packuswb
decl
sub
mov
lret
lret
rcl
push
or
cs
ja
mov
aas
dec
sti
out
andb
cmp
neg
add
inc
mov
push
mov
ljmp
cmp
pushl
cld
or
adc
cltd
scas
cmp
push
xchg
pusha
sbb
fstps
jno
jmp
cmp
fwait
dec
cli
xor
cmp
inc
cmp
vdivsd
cmp
xchg
call
mov
addr16
enter
push
mov
es
pushf
call
fistps
pop
ljmp
sar
mov
adc
jnp
mov
cmp
mov
cmpsb
addb
mov
jno
iret
mov
pop
icebp
ja
push
mov
mov
ret
cmp
cmp
insb
pusha
push
sbb
ds
cmp
mov
mov
xor
push
adc
inc
fsubr
imul
es
or
adc
je
push
scas
cli
fcomip
pop
es
xchg
fimuls
adc
jo
sbb
leave
test
incl
add
arpl
daa
jnp
mov
test
fiaddl
push
fstps
jg
or
pop
mov
shlb
andl
inc
fnstcw
stc
pop
call
mov
out
jmp
mov
scas
jnp
add
out
test
nop
loope
cmp
jo
adc
nop
pop
aam
dec
xchg
stos
pop
mov
cltd
pusha
pop
push
movsl
pop
sbb
xor
pop
pushl
fcmovnu
xor
negb
dec
mov
and
jbe
int3
dec
iret
mov
call
sahf
shlb
ficoms
xor
sub
pusha
sub
xor
adcb
pushl
or
mov
inc
sbb
call
push
xchg
int
lret
scas
cmp
ret
or
mov
rcll
or
sub
fcos
lcall
or
stos
cmp
std
iret
call
into
lahf
into
ss
sbb
leave
add
and
push
ljmp
cli
out
sub
test
mov
movsl
mov
mov
insb
enter
decl
jno
lcall
inc
push
mov
sahf
scas
push
movsb
mov
jg
leave
out
ffreep
popa
shll
pop
rcrb
test
or
imul
push
and
mov
loop
mov
sbb
daa
aas
mov
int3
hlt
xor
dec
adc
std
push
incl
mov
dec
adc
out
aam
add
ljmp
in
enter
add
adc
push
adcl
aad
xlat
push
filds
mov
mov
mov
xchg
aaa
adc
add
pop
int3
add
and
jg
push
mov
mull
jle
jl
out
cmpsl
outsl
xchg
push
xor
mov
mov
call
repz
scas
cli
lcall
adc
rcrl
cmp
mov
shrl
mov
push
mov
ljmp
lret
mov
mov
mov
bound
push
cmpsl
call
add
das
ss
movsl
cmpsl
dec
jecxz
adc
mov
and
incl
in
or
lcall
stc
mov
test
insl
inc
push
filds
adc
loop
jmp
fdivl
sbb
jle
call
sbb
xor
mov
sub
push
leave
mov
jp
insb
pop
gs
out
iret
push
or
ljmp
mov
inc
adc
jge
bound
out
sahf
stos
sub
lret
iret
in
cmp
fwait
or
pushl
ss
stos
xor
fbstp
mov
aaa
dec
pop
sbb
and
pop
jae
lods
mov
mov
and
mov
popa
std
arpl
cmp
jl
lods
xchg
repz
test
mov
incl
aas
mull
nop
xchg
pop
call
imul
mul
lcall
lods
jl
icebp
pushl
cltd
jle
cltd
mov
sbb
movsl
shl
inc
lea
sahf
ret
sahf
imul
mov
sbb
lret
jmp
movsb
push
je
in
mov
call
mov
and
inc
push
xor
xchg
lcall
icebp
mov
mov
ud0
sar
shrb
cmpsl
test
cmp
push
sub
xchg
lods
mov
lods
mov
call
repz
int3
xchg
jbe
mov
bound
dec
scas
pop
clc
cltd
xchg
xchg
mov
xor
call
mov
bound
and
pop
jmp
out
arpl
ficompl
fwait
les
pushl
inc
and
js
xchg
nop
or
sub
decl
cmp
daa
mull
push
std
fisttpll
dec
mov
incl
scas
mov
std
adc
cwtl
pop
fxtract
or
pop
pop
fldl
mov
imul
push
ljmp
sub
and
repnz
xor
movsl
movsb
adc
adc
pusha
lcall
lahf
int
adc
in
cmp
inc
xchg
iret
sbbl
loopne
test
jmp
fimuls
xchg
lock
cmpsl
loope
adc
push
sarb
andb
in
std
push
sar
sub
scas
inc
inc
inc
mov
jg
add
cmp
ds
mov
decl
fnstcw
add
imull
int3
lock
in
mov
push
lods
popa
cmc
mov
popf
je
mov
sub
daa
lcall
cld
mov
pushl
mov
push
imul
icebp
in
cmp
int
mov
clc
inc
sahf
lcall
mov
mov
push
mov
push
jl
dec
mov
roll
jp
addl
data16
add
pop
ret
inc
push
inc
jmp
cmc
jns
inc
out
insl
addb
push
jns
fsubrp
cli
mov
pop
mov
nop
cwtl
pushf
fisttps
sub
jno
sbb
sub
cmp
pop
mov
lcall
sbb
sbb
adc
lds
lahf
stc
mov
leave
sbb
in
daa
scas
clc
call
sub
leave
mov
loope,pt
subl
popf
gs
scas
clc
incl
xlat
cmpsl
lods
loopne
shrb
push
xchg
hlt
scas
and
cwtl
ljmp
xor
and
jecxz
clc
push
testl
sub
sbb
rcr
sub
cmpl
jmp
movsl
jmp
faddl
lret
outsl
enter
mov
jnp
outsl
lret
sub
div
mov
jge
jnp
mov
ljmp
mov
out
lods
shrl
cld
dec
cmp
ret
cli
ljmp
and
xchg
inc
jo
mov
pop
jp
shll
xchg
sbb
out
dec
adc
js
sbb
sbb
es
repnz
insb
adc
mov
xlat
jg
or
dec
mov
jle
int3
les
clc
repz
dec
aam
and
push
jmp
jmp
push
dec
xor
xor
mov
lods
and
mov
clc
in
fdivrp
fidivrs
pop
stc
pop
xchg
fcomp
mov
data16
rcrl
sar
sbb
movb
and
std
sub
cs
fwait
or
mov
enter
mov
shl
mov
cmp
lcall
mov
jmp
ret
mov
xchg
push
fcomip
dec
nop
outsb
cli
loop
js
stos
sbb
lock
in
jge
push
fwait
add
std
push
test
jle
and
push
nop
insl
shr
dec
daa
and
test
adc
enter
or
mov
or
jnp
inc
clc
ljmp
shr
pushf
cmp
or
mov
dec
in
and
sti
shlb
arpl
ljmp
call
pop
dec
pop
cld
cmpsb
mov
xchg
push
orb
fldcw
fistl
dec
and
lea
pop
and
cmc
add
cmpsb
or
inc
aad
insb
fidivs
jmp
negl
push
push
popf
cmp
into
mov
ret
jg
cli
pushf
dec
pop
lret
fldcw
xchg
cli
call
popf
subl
jo
mov
inc
mov
out
jle
mov
jmp
cmp
cmp
outsb
cmpsl
dec
xchg
pop
mov
pusha
test
xor
cs
inc
in
xor
lcall
outsl
cltd
mov
jle
inc
pop
idivb
rcrb
out
ljmp
ljmp
fstpt
insl
lock
out
lahf
lock
push
out
fwait
xchg
scas
enter
decl
mov
xchg
js
pop
sbb
hlt
adc
clc
lahf
mov
xor
test
jno
gs
xor
mov
jmp
mov
jecxz
mov
ret
scas
fs
xchg
adc
aam
cld
decl
dec
sbb
je
cld
shl
dec
push
sbb
mov
xor
fadd
icebp
enter
sbb
loopne
or
pop
mov
xor
push
movsb
cmc
incl
iret
push
sbb
xchg
lods
jno
xchg
or
inc
adc
jnp
add
movsb
dec
fwait
cmpb
cs
cmp
ffreep
mov
xchg
dec
jl
jge
ljmp
dec
mov
sahf
iret
add
or
cmp
in
gs
cmp
jge
pop
notl
pop
jo
mov
pop
xchg
xlat
imul
fisttps
add
push
xchg
data16
and
sbb
decl
pop
jne
mov
dec
xor
sbb
dec
push
cmp
in
ret
in
sub
adc
jns
push
mov
scas
fistpll
inc
lcall
cli
in
jnp
insb
cld
pop
and
lock
movsb
pop
arpl
fistpll
cwtl
adc
pop
enter
push
sub
std
imul
sub
pop
movsb
imul
mov
xchg
pop
test
ret
jnp
lock
adc
in
cwtl
out
mov
in
add
ljmp
mov
inc
adc
jo
xor
push
ret
push
mov
call
mov
sarl
sbb
xchg
sub
inc
sub
mov
in
fbstp
test
jae
roll
imul
jecxz
neg
pop
xchg
call
xor
inc
inc
inc
in
jnp
cmp
pop
and
push
or
lcall
cmp
int
jecxz
data16
pop
push
or
scas
mov
add
mov
push
push
push
push
leave
aam
outsb
inc
fwait
mov
out
jb
fwait
cmp
scas
repnz
pop
call
xchg
and
or
or
jno
ret
das
add
xchg
add
mov
dec
cs
call
jle
cmp
push
loop
push
sbb
xchg
and
stos
inc
mov
xchg
pushl
cmp
sarb
inc
dec
cli
loop
lea
nop
jecxz
pushl
lds
scas
pusha
cmp
adc
jnp
test
popf
das
jb
xchg
mov
cmp
mov
mov
dec
fcomps
cmp
dec
jg
mov
cmp
inc
dec
cmp
xchg
dec
xchg
mov
pusha
gs
aas
xchg
into
or
jmp
outsl
jne
cwtl
jno
dec
dec
cwtl
mov
popa
fists
std
call
scas
lock
mov
out
iret
repnz
call
jne
stc
xor
adc
pop
js
rcrb
lock
sbb
incl
cltd
push
jge
out
or
shlb
cmpsl
out
jge
loop
mov
pop
pushf
push
movsl
xor
dec
cmp
lea
clc
jmp
ja
mov
cmp
push
sbb
pushl
xor
jnp
jae
jge
jmp
mov
mov
cmpsb
in
or
stos
sbb
jge
sbb
inc
xchg
rclb
jmp
test
aam
repz
sbb
sets
pop
fs
xchg
adc
loope
lcall
movsb
pop
insl
fcmovnu
or
sub
add
fsubl
cltd
sar
or
push
push
sbb
or
insb
loopne
push
jg
xor
push
lret
stc
mov
cmp
sbb
pop
inc
xchg
mov
mov
decl
add
sub
xchg
add
aaa
dec
add
icebp
pushl
mov
jp
mov
hlt
out
fistpl
mov
ds
push
adc
sub
push
mov
cmpsb
or
mov
inc
loop
jp
or
jl
cmp
dec
mov
stc
inc
cli
xor
push
cmp
stc
and
sbb
jnp
ret
dec
lcall
repnz
xchg
mov
cli
jmp
and
pop
call
aaa
sbb
xlat
mov
mov
inc
aam
or
outsl
xchg
into
mov
int
push
sbb
mov
inc
xorb
arpl
fwait
inc
shlb
push
fidivs
les
test
jbe
sbb
lods
mov
test
lcall
ret
loop
xor
mov
movsl
addr16
fimull
mov
pop
ljmp
add
icebp
sub
nop
pop
cmp
dec
es
sbb
ljmp
js
mov
iret
hlt
aad
pop
cmp
dec
push
in
popf
flds
stc
cmp
add
out
out
mov
ljmp
setb
jnp
bound
out
arpl
pusha
stos
out
jmp
dec
inc
dec
adc
out
mov
mov
xlat
aad
pop
pop
fdivr
lcall
fisttpl
xchg
pop
and
es
push
mov
jmp
cmp
negl
jns,pt
adc
daa
add
and
sti
add
outsb
xchg
incb
fcomip
mov
add
push
popf
fadds
cmp
xor
pushl
jnp
sbb
mov
sbb
shrb
mov
outsl
clc
mov
mov
das
in
xlat
popf
call
jmp
incl
or
scas
andb
sub
sbb
xchg
ret
lods
dec
loope
mov
sub
mov
icebp
jae
scas
out
mov
ljmp
xor
jp
cmpsb
mov
idivl
jg
lahf
int3
out
xor
mov
jns
fdivp
shrb
cmpxchg
clc
push
xlat
lahf
mov
cmp
lcall
push
insb
nop
lret
inc
dec
sbb
iret
sbb
cld
enter
xor
lds
mov
jp
arpl
mov
pushl
fcoms
out
out
xchg
and
popa
test
icebp
call
rcrb
mov
mov
add
test
push
popa
ret
xchg
add
ljmp
and
in
sub
inc
das
popf
movsb
stos
stc
jle
mov
insb
ficomps
fdivr
mov
jg
rorl
adc
and
inc
inc
jl
int3
dec
push
cmp
xchg
or
inc
mov
or
push
faddl
lcall
xchg
clc
push
xchg
jne
icebp
pop
inc
shl
les
out
out
push
cmpsl
shlb
decl
and
sahf
cmp
fcoms
push
pop
or
cmpsb
jl
repz
scas
jg
out
adc
push
mulb
cmp
and
mov
pop
je
inc
push
test
stc
rcr
inc
or
bound
rorb
incb
cmp
cli
jl
cmpsl
js
mov
pushw
dec
ret
js
push
inc
bnd
cwtl
fcmovbe
enter
je
xchg
aas
call
mov
mov
pushf
notl
test
jbe
mov
lock
loope
or
ja
ljmp
jl
lock
out
cltd
jle
test
imul
inc
sub
jg
xor
cltd
jge
aam
mov
ja
jns
xor
xchg
mov
pushl
out
xor
jb
repz
test
jae
shlb
dec
ss
jg
call
ljmp
xor
roll
pop
adcb
adc
sar
incl
repnz
push
adc
sub
mov
inc
pushf
cmpsb
ljmp
mov
adc
adc
shll
inc
cld
mov
dec
xchg
aaa
add
push
out
fwait
sub
addl
mov
xchg
pop
xor
xor
fisttps
or
and
xchg
icebp
arpl
or
jmp
or
dec
clc
or
jg
orb
cmpsl
clc
lds
ljmp
lods
pop
jmp
into
mov
int3
pop
flds
repz
incl
add
pop
pop
add
sahf
dec
mov
imul
jmp
test
jmp
out
inc
loop
sbb
jle
pop
push
sub
dec
and
repz
out
lcall
or
jmp
in
fstl
cmp
push
cli
add
fs
sub
ja
pushf
ljmp
inc
dec
xor
inc
popa
mov
xchg
push
fcoml
std
sub
stc
popf
es
data16
jl
daa
add
xor
inc
xor
bound
out
ror
push
imul
test
shlb
push
dec
cmp
adc
lcall
push
insb
out
mov
ret
mov
push
imul
sarl
imul
push
leave
sti
insb
mov
pushl
and
pop
adc
push
in
xchg
mov
pushf
mov
movsb
ja
clc
jg
pushl
in
inc
mov
cmp
push
xchg
push
dec
xlat
scas
mov
movhps
out
cli
cs
lret
fmuls
sub
cmp
pop
out
mov
mov
lahf
mov
lock
adc
cmc
dec
aad
push
enter
sti
pop
shrl
mov
mov
dec
lret
incl
test
add
out
pop
pushl
mov
and
mov
into
jge
pushf
inc
mov
mov
xorl
xchg
imulb
mov
test
out
cmpsl
cwtl
int3
mov
push
dec
imul
inc
or
leave
inc
jb
into
stos
ss
sub
xchg
pushf
in
cltd
cmp
lcall
dec
fcom
sarb
gs
fcoms
adc
inc
xchg
pop
jnp
xor
pop
jl
cmc
add
mov
bound
fnstenv
in
mov
jl
repz
out
or
or
adc
mov
in
call
inc
shr
sahf
and
aas
xor
ljmp
cmp
movsb
int3
nop
out
mov
in
dec
add
cmpsl
mov
add
adc
call
lcall
les
fdivr
lcall
cld
cmp
cmp
fisubs
sbb
loope
ret
xchg
inc
in
scas
jns
lret
sar
jg
mov
and
in
and
testl
pushl
add
stos
sub
ljmp
pop
mov
nop
mov
jg
and
mov
add
mov
dec
fs
mov
mov
pushl
sti
pop
or
stos
iret
dec
mov
cmp
out
mov
loope
inc
pop
jle
outsb
and
test
or
adc
mov
rolb
roll
js
idiv
push
out
mov
lods
push
mov
or
jbe
fucompp
cmp
push
enter
loopne
je
jge
ljmp
xchg
mov
xchg
xchg
out
mov
xlat
imul
push
or
cmc
mov
rolb
adc
fists
dec
sub
fldenv
movsb
stos
movsb
mov
or
dec
cmp
xor
pop
mov
jecxz
cmp
ljmp
dec
pusha
jb
loop
daa
and
inc
jmp
idivb
sbb
xor
mov
int3
add
fimuls
loope
mov
cmp
dec
lods
xor
lock
lret
sub
bound
mov
pop
pusha
and
outsb
xlat
cmp
adc
mov
xor
lcall
jg
imul
pop
mov
push
mov
pop
add
or
call
sub
mov
jmp
pop
push
inc
lock
adc
adc
iret
loope
ljmp
popf
pop
mov
cli
xlat
xchg
mov
dec
pusha
inc
xor
mov
ja
std
call
gs
bound
mov
push
mov
pop
and
daa
or
enter
incl
cmp
dec
jmp
and
xorl
cld
shr
cli
call
sbb
shr
mov
fdivrs
popa
xchg
clc
push
or
icebp
xorb
ljmp
rcl
fwait
into
sbb
jae
jg
and
jmp
jmp
jmp
xchg
and
les
addr16
pop
stc
lock
mov
cltd
rorl
arpl
sub
xchg
popf
xchg
sub
jg
shr
add
movsl
out
mov
jecxz
mov
push
sbb
and
incl
mov
jle
cmp
adcl
jns
mov
js
sub
cwtl
adc
rclb
ret
fs
adc
mov
cld
sbb
call
aaa
or
mov
adc
sub
insl
es
push
lcall
ljmp
jge
sub
xchg
shll
int3
pop
out
push
cld
xchg
lcall
hlt
sbb
das
roll
lods
jne
inc
sarb
lock
pushl
pop
inc
in
push
imull
jbe
popa
adc
xchg
sub
lock
stc
out
pop
rclb
stos
cld
in
lcall
testb
popf
inc
xchg
push
xor
lret
inc
jno
nop
gs
call
cmpsl
es
pop
xor
aaa
popa
mov
lcall
imul
xchg
lds
data16
cltd
add
push
les
pushl
push
mov
dec
adc
mov
sub
lcall
pop
lea
lods
sub
repnz
shll
fistps
filds
xchg
test
mov
hlt
aas
arpl
xor
aas
push
rcrb
ljmp
jb
xor
xchg
xor
lea
lret
je
inc
pop
add
rclb
and
or
mov
neg
mov
cmp
es
fcomip
call
fcmove
imul
xchg
sahf
mov
decl
fdivr
mov
scas
ja
inc
out
iret
addr16
test
in
cmc
jnp
fsts
testb
mov
push
push
and
sbb
leave
sub
dec
fdivp
aaa
cmp
outsb
dec
decl
mov
mov
jg
cmpsb
sub
push
out
xor
jge
out
mov
cmp
dec
or
xchg
in
icebp
hlt
scas
adc
pushl
ficompl
push
sbb
mov
mov
cmpsb
push
inc
sbb
jne
test
lret
adc
xchg
ret
cmc
jg
das
jb
xlat
mov
popa
scas
subb
sub
rcll
decl
shl
sub
push
dec
aaa
fimuls
inc
xchg
pushl
dec
cld
sub
daa
cli
mov
int
dec
inc
rcl
fmull
mov
mov
cld
inc
imul
push
ja
mov
test
mov
xor
mov
pop
pop
mov
mov
jmp
daa
push
push
mov
sub
call
add
jb
push
in
jb
fcomip
mov
inc
clc
repz
aas
push
ficoms
xchg
add
decl
bound
adc
pop
push
xchg
mov
xor
and
ret
mov
inc
cmp
dec
xlat
lock
sbb
add
mov
mov
push
test
cmpsb
pushl
adc
fnstcw
push
add
sub
shrb
cs
ljmp
out
stos
les
sar
sar
xchg
add
fsubs
jmp
pusha
cmpsb
jge
pushw
sbb
sarl
stos
or
ds
addr16
jb
loop
and
pop
and
dec
nop
popa
ljmp
loopne
das
clc
addr16
fnstenv
pushf
push
in
xchg
js
movsl
pop
jg
sbb
pop
adc
lret
push
std
mov
out
sbb
addb
xchg
in
loope
xchg
out
and
mov
cli
jg
xchg
lods
cmp
xchg
inc
sub
jne
adc
lret
mov
push
xchg
add
incl
nop
pop
mov
or
xor
xor
incl
pop
fwait
hlt
movsb
sbb
inc
xchg
jmp
insb
repz
jno
jae
inc
mov
addr16
lcall
jmp
fcoms
filds
repnz
test
dec
sti
in
shrl
mov
push
sub
shlb
sti
push
push
inc
sub
mov
jne
pop
rorb
ja
in
or
mov
pushf
cmp
sbb
and
adc
in
into
jb
bound
fwait
jp
mov
enter
or
add
lcall
and
adc
lcall
loopne
std
sbb
std
lods
in
mov
lret
sarb
cmp
icebp
dec
and
jo
fdivrp
call
inc
cs
lret
cltd
mov
rcrb
cmp
jp
dec
sub
mov
or
pop
aas
or
jecxz
sub
rep
sbb
mov
lock
call
out
imul
dec
imul
call
and
out
stos
or
je
pop
inc
hlt
xchg
inc
pop
int3
cmp
hlt
mov
imul
lods
mov
jne
ljmp
jmp
jmp
xchg
imul
dec
test
pusha
not
xor
adc
push
ds
cld
or
arpl
sar
jmp
fimuls
dec
shll
ss
imul
addl
call
in
sub
outsb
mov
daa
mov
negl
cli
hlt
mov
mov
pop
cld
push
and
jp
push
ja
sahf
add
mov
rcrb
jecxz
je
cli
mov
repnz
adc
cs
call
std
je
push
movsl
dec
das
mov
pop
push
xor
daa
or
dec
fucom
and
rol
pushl
sar
mov
scas
fidivs
lcall
fimuls
sub
fnstenv
sub
pop
std
mov
cltd
dec
sti
push
mov
dec
dec
xchg
out
ljmp
pop
jbe
rolb
dec
lret
in
lret
adc
adc
dec
js
xchg
loop
incl
in
jle
dec
cmp
sahf
inc
ret
jb
mov
inc
imul
rolb
je
mov
call
mov
and
lea
lods
dec
adc
push
out
push
push
cmpsl
lock
lock
in
add
inc
xor
scas
mov
jo
xor
jae
jg
inc
xchg
push
cld
mov
les
push
mov
xchg
sahf
xchg
jle
rcrl
dec
mov
dec
push
lahf
or
mov
mov
sti
incl
ret
jg
pop
mov
mov
and
leave
inc
mov
clc
sarl
mov
cmp
mov
inc
pusha
inc
cmc
stos
inc
sbb
mov
adc
ljmp
mov
xor
jno
stos
lcall
and
or
sub
outsb
in
icebp
xor
call
jo
or
add
iret
add
sub
inc
test
shlb
xchg
call
fdiv
psraw
jecxz
repz
sti
daa
in
jp
loopne
in
test
mov
cld
ljmp
cmpsb
jo
sti
lods
ljmp
push
xor
push
xchg
test
cli
aas
mov
push
xlat
jle
aam
in
jg
fmuls
mov
addr16
or
add
test
cmp
call
ljmp
pop
mov
incl
enter
incb
stos
nop
or
mov
bound
insl
nop
rorb
xchg
add
ds
imul
jmp
and
fcoml
push
cmpsl
loop
ficoms
sub
pop
inc
sbb
rcll
pop
imul
cmp
notb
mov
adc
decl
stos
adc
mov
push
pop
mov
xor
xchg
addb
scas
pop
leave
f2xm1
movsb
pushl
in
adc
stc
loopne
mov
dec
inc
pop
pop
lods
push
xlat
push
lret
sbb
push
call
idiv
out
xor
cmp
js
xchg
cmp
add
jmp
cld
and
rol
sub
cwtl
dec
or
jmp
push
push
jge
or
insl
inc
mov
jle
mov
iret
loope
lcall
jb
jp
or
out
jle
add
mov
mov
cmp
add
or
inc
jp
incl
inc
int
in
jecxz
or
add
lret
jecxz
pop
call
incl
xchg
mov
into
fistpl
in
jmp
mov
pop
or
arpl
xchg
lret
inc
mov
call
add
mov
xchg
jl
xchg
jne
sbb
fiaddl
cmpsb
das
sbb
add
dec
repz
ss
call
adc
or
sbb
call
aam
aas
lods
add
movsb
pop
addr16
js
pushf
add
mov
mov
call
push
arpl
xchg
fildl
push
dec
cwtl
cmp
leave
movsl
mov
sbb
addr16
js
xchg
std
ljmp
int3
pop
inc
jno
in
les
test
mov
push
or
mov
jg
push
js
ljmp
cltd
mov
lahf
popf
mov
and
push
sub
dec
and
pavgw
in
push
mov
nop
mov
lret
test
int3
inc
mov
jno
add
push
push
out
lcall
fbld
mov
outsb
pop
scas
sar
int
loopne
push
call
in
xchg
mov
pop
aas
or
cmp
inc
sub
dec
xchg
pop
jle
pushf
inc
dec
stos
push
cli
xchg
repnz
test
lock
popa
jg
in
and
xor
xor
test
push
call
push
fwait
test
xchg
sbb
xchg
idivb
sbb
or
clc
ja
sub
inc
push
pop
testl
jnp
aam
test
lock
push
cli
leave
mov
mov
mov
in
mov
or
out
lret
jbe
js
push
scas
jns
sbb
add
aad
ror
sbb
pop
test
cmp
fadds
pusha
push
hlt
mov
push
stos
add
int3
stos
lea
cmpsl
pop
cltd
adc
fwait
incl
ss
insb
daa
mov
or
add
fnsave
ljmp
test
jns
leave
and
outsl
call
mov
outsl
cli
lcall
xchg
mov
aas
xlat
outsb
adc
mov
or
scas
incl
adc
push
push
stc
mov
fsubrs
rcl
jae
lods
xchg
or
jg
gs
popa
cli
dec
aaa
shlb
adc
cmp
inc
jmp
adc
nop
out
call
mov
xchg
lahf
pop
cmpb
daa
not
dec
popa
mov
jns
fs
pop
mov
dec
sbb
jge
decl
fimuls
add
add
test
ret
rcr
pop
push
push
xor
shll
inc
js
xchg
lahf
imul
test
mov
imul
and
test
sub
loop
dec
pop
rorb
lret
mov
mov
adcb
adc
dec
pop
push
or
imul
lcall
dec
xchg
movsl
es
fisubl
sbb
enter
mov
pushf
mov
mov
cmp
xchg
subb
cltd
dec
mov
mov
xor
and
pop
in
push
xchg
inc
stos
push
sbb
repnz
xchg
stos
cmc
lods
fistl
mov
sub
mov
push
in
out
pop
pop
btr
cld
dec
jb
subb
jg
push
jmp
adc
inc
xchg
xchg
and
xor
in
ss
sub
or
mov
jg
incb
icebp
test
das
mov
ret
imul
mov
ljmp
fs
inc
xchg
xor
ret
sub
arpl
loop
pusha
lods
es
call
jne
push
xorl
jg
pop
rcll
xor
in
icebp
push
lock
lock
call
xor
in
add
xlat
mov
std
push
cmp
insl
aam
outsb
mov
xor
cmpsb
decl
sbb
and
lret
out
pop
out
adc
in
jns
inc
sub
push
std
call
inc
cmp
repnz
lret
enter
aas
mov
fnstenv
js
push
imul
jns
sbb
mov
cmp
pop
sar
mov
loopne
jg
lock
test
cmc
rcll
lods
pop
fadds
jp
add
loop
jmp
xchg
add
pop
jo
push
fiaddl
or
pop
popf
push
cld
pop
outsb
decl
inc
in
adc
pop
add
insl
push
mov
lea
incl
push
jo
loop
jne
push
sbb
imul
and
ljmp
mov
mov
adc
in
mov
jmp
dec
test
decl
lock
fs
pushf
mov
dec
fdivrp
test
dec
pushf
push
sub
loope
ljmp
sar
xor
xor
pop
repnz
or
sbb
mov
add
add
incl
mov
ss
in
mov
mov
pop
cmpsl
jbe
loope
in
cmp
jmp
or
rorb
clc
in
iret
in
ret
adc
je
in
std
cmp
adc
rcll
sbb
pop
or
dec
push
sbb
mov
mov
lcall
filds
je
aas
xchg
pop
loopne
push
fadds
ss
imul
fisubrs
loopne
ljmp
jmp
es
jb
sahf
out
xchg
mov
adc
sub
jns
icebp
mov
push
daa
mov
lea
mov
aad
jnp
push
lahf
in
inc
lcall
add
push
jge
xor
dec
mov
adc
inc
ret
sbb
sbb
push
ljmp
movsb
lea
scas
sub
scas
jnp
sub
push
nop
inc
stos
push
mov
push
sub
push
lods
cmp
cmp
jl
fucomip
ja
sbb
xor
aas
cld
inc
mov
add
and
add
cmpsb
shlb
mov
sbb
jns
ljmp
mov
pop
mov
adc
add
popa
js
shrb
push
jp
lods
push
push
mov
adc
push
or
shll
rcl
mov
inc
jmp
jnp
loope
mov
imul
dec
enter
dec
sub
insb
fdiv
sub
inc
push
jl
sbb
inc
cs
cli
push
cltd
push
jb
fnstsw
cli
je
jbe
adc
decl
lahf
aad
adc
repnz
mov
ljmp
dec
inc
stos
movsb
lret
imul
mov
fs
aad
mov
ret
jg
repz
lods
out
xor
cli
nop
mulb
rclb
popa
push
inc
xor
ljmp
cmp
movsl
cmp
jb
sbb
test
sub
adc
ljmp
cltd
aad
call
or
pop
call
ror
movsl
jmp
xchg
call
fisubs
outsb
mov
adc
cltd
mov
push
jp
lret
repnz
incl
cld
arpl
movsl
dec
xchg
jle
push
outsb
lods
and
iret
sbb
cwtl
out
xchg
ret
adc
decl
scas
fldcw
mov
call
pushl
or
jmp
push
lahf
jb
inc
adc
flds
leave
dec
fdivrl
jle
dec
in
cltd
inc
jmp
lcall
icebp
jno
xchg
mov
out
sahf
mov
scas
mov
decl
xor
adc
aad
dec
lcall
sub
shlb
lahf
repz
push
xor
call
mov
loop
aam
into
pop
hlt
jns
fs
sahf
dec
jge
divb
rol
std
jg
mov
mov
add
sub
push
jg
fsubrl
mov
jecxz
push
adc
sti
mov
ret
add
ljmp
mov
mov
lods
xlat
mov
sbb
mov
adc
mov
lods
dec
imul
pop
repnz
cmpsb
sahf
jecxz
flds
or
inc
bound
mov
in
cmp
jmp
pushl
pop
mov
and
cmp
rcl
adc
or
jge
jo
decl
and
mov
lods
mov
test
cmp
lds
or
scas
jp
idivb
xchg
test
jg
incl
aam
sub
jecxz
cli
stos
or
add
jle
xor
jg
sbb
adc
insb
loope
inc
sbbb
ljmp
jecxz
lcall
test
sub
test
pop
fs
cmc
push
loopne
push
sbb
xchg
aad
push
nop
stos
paddb
fists
pop
mov
cmc
out
std
jmp
xchg
xchg
push
or
lods
ljmp
stos
fdivp
cmp
or
jp
cmpsb
decl
pshufw
mov
andl
decb
add
ret
loope
aas
bound
push
sti
dec
outsl
cmpsl
popl
xor
pop
popa
adc
mov
cmp
enter
cmp
enter
mov
aam
in
and
stos
frstor
mov
icebp
xor
mov
xor
rolb
loope
pop
xor
or
or
cmc
push
mov
adc
sahf
sub
pop
bound
jp
mov
sbb
xor
pop
loopne
cld
push
cmp
cmp
enter
pop
cli
lahf
repnz
pop
inc
in
test
xchg
jp
outsb
xchg
out
jl
ljmp
or
loope
push
imul
add
dec
jb
cmp
icebp
mov
movsb
dec
jge
push
xor
mov
call
or
sub
and
jnp
sbb
or
incl
jecxz
cs
sub
pop
mov
arpl
insb
mov
leave
ret
xchg
out
xor
lret
jl
clc
call
or
loope
lods
or
inc
es
loope
mov
ljmp
test
nop
sbb
movsb
rorl
inc
pushf
cmpb
push
fistl
push
xchg
loop
aad
in
clc
adc
jmp
popf
mov
in
mov
xchg
and
xlat
jb
mov
lods
sbb
lcall
imulb
idivb
test
fprem
stos
add
push
insl
ljmp
jg
fs
mov
inc
dec
xor
scas
icebp
push
jno
incl
fs
es
clc
mov
or
inc
mov
inc
repz
fisttps
decb
mov
fwait
push
mov
pop
mov
incl
cmpsb
sbb
hlt
fiadds
jbe
andl
xor
shlb
ljmp
add
aas
loop
stos
in
aad
mov
mov
xchg
movsl
loopne
inc
sub
incl
lcall
jb
push
xor
lock
mov
pushf
sbb
call
leave
jge
inc
test
cmp
mov
cmpsl
mov
cmp
pop
insb
pop
test
callw
and
cmp
fistps
and
loopne
test
mov
sbb
mov
aaa
push
dec
xchg
mov
decl
cli
mov
cmpsb
push
dec
mov
or
fincstp
pop
mov
dec
pop
ljmp
add
into
dec
hlt
call
xor
out
push
push
pushl
jmp
ds
arpl
and
scas
push
jno
mov
xchg
dec
rdtsc
and
rcr
pmaxub
ljmp
or
int
aas
or
dec
pop
pushl
xor
or
outsl
mov
test
pop
dec
ret
mov
call
cli
aam
lea
lods
cltd
scas
push
shl
sub
mov
pushl
test
xlat
xlat
decl
push
cltd
andb
cwtl
sub
imul
mov
lcall
push
push
cmp
lods
xchg
xchg
lds
pop
or
jge
push
fsubs
cmp
push
stos
outsb
mov
xchg
dec
xchg
pop
jns
adc
ret
decl
mov
fsubl
xor
std
and
out
ret
mov
lret
sub
in
xchg
ret
ret
jmp
xchg
jl
bound
mov
fbld
push
jno
xchg
mov
leave
ja
mov
sahf
popa
loop
xchg
push
mov
int
idiv
incl
cld
pop
aam
jno
xor
jbe
dec
lahf
mov
mov
je
xor
sbb
mov
sbb
pop
movsb
cmp
cmp
mov
jg
inc
out
cmp
fcomps
xchg
mov
jge
xchg
push
lods
scas
imul
or
sar
lcall
jne
cmpsl
popf
adc
imul
mov
or
movsb
jg
ds
dec
pusha
push
lcall
arpl
add
mov
adc
pusha
loopne
movsb
mov
imul
data16
jg
hlt
or
jno
into
adc
les
add
mov
mov
add
imul
jb
js
add
repz
pop
push
xchg
sbb
sub
lcall
shlb
adc
dec
sbb
mov
cmp
or
xor
in
mov
and
out
out
cmp
mov
lahf
inc
mov
push
addl
call
rclb
sbb
shl
inc
add
cwtl
jbe
pop
jmp
cmpsb
dec
bound
mov
pop
fcomps
sub
and
ret
inc
stc
int
out
mov
cmpsb
call
mov
xchg
orb
jmp
jmp
pop
jnp
dec
or
rorl
lds
push
or
aam
aaa
rolb
sbb
fisttps
aam
mov
adc
pop
stos
cs
mov
test
mov
ljmp
cmp
xor
xor
mov
notl
popa
dec
test
movsb
popf
sahf
hlt
xchg
sbb
jmp
loopne
lods
adc
jl
repnz
mov
jnp
ud0
jmp
jg
push
cmp
push
mov
incl
imul
enter
sub
in
outsl
clc
call
adc
jo
les
arpl
and
jnp
enter
incl
neg
xchg
pop
jle
aad
mov
push
fadd
test
les
dec
xor
or
mov
in
shlb
mov
xchg
gs
jg
fistpll
movl
lods
push
fnstcw
cmp
rol
jmp
adc
popl
xchg
jp
cmp
mov
mov
arpl
pop
inc
xor
popa
ljmp
sti
dec
mov
add
adc
jecxz
cmpsb
fildll
or
and
push
and
lock
shll
daa
lahf
test
add
incl
adc
leave
arpl
jae
mov
movsl
fs
or
inc
jp
mov
inc
fistpl
sbb
sub
xchg
jno
decl
scas
mov
aam
add
mov
cmpsl
aaa
sbb
rorl
std
out
cli
decl
jge
rcl
mov
inc
inc
nop
dec
push
lea
lods
sub
mov
adc
push
sub
sub
mov
jecxz
fcomip
decl
test
and
mov
xchg
jmp
sar
fnsave
pop
lock
ljmp
bound
orl
sbb
lahf
cmp
jmp
adc
outsb
cmp
or
or
and
and
outsb
jmp
jbe
mov
sub
jb
fs
pop
mov
sub
insb
push
jne
imul
movsb
lea
jmp
pop
cld
mov
mov
dec
sbb
ss
mov
mov
ljmp
mov
or
mov
ja
jmp
mov
jge
cli
dec
adc
test
incl
jmp
loopne
int3
xor
out
and
add
jl
sarb
lret
pushl
mov
lods
out
or
push
adc
scas
test
and
push
fdivrp
ljmp
data16
hlt
flds
push
pushf
sbb
cmpsl
movsb
or
stc
jg
ljmp
add
in
pop
inc
adc
popf
fmul
data16
adc
andb
adc
jmp
mov
notl
mov
jg
ret
adc
push
es
sub
icebp
inc
insb
push
adc
cmc
inc
les
jg
xor
push
call
call
push
lahf
sub
pusha
je
dec
into
adc
jp
out
clc
inc
and
or
les
cmpsl
push
fnstsw
pushl
pop
sbb
add
fistps
sbb
fcoms
mov
scas
sub
sbb
cmpsb
add
mov
clc
push
add
mov
inc
push
jg
add
xchg
out
in
hlt
das
add
test
jmp
dec
jle
or
into
mov
addl
push
movsl
outsl
xlat
je
imul
inc
mov
push
jle
lods
fs
pop
sbb
jmp
stc
in
mov
lock
jmp
pop
sbb
stos
or
rolb
cli
call
pop
imulb
orb
stos
outsl
lret
inc
dec
testl
ljmp
inc
dec
xor
pop
loopne
push
fdivrl
ja
xchg
xchg
mov
xchg
push
lock
jbe
popa
mov
dec
inc
xor
mov
test
loope
clc
lcall
push
fistl
inc
idivb
push
sbbb
xor
aad
sbb
pushl
dec
jecxz
sbb
mov
push
push
shl
fstpl
or
insl
rorl
sub
nop
lcall
sub
mov
into
jle
inc
and
cld
js
bound
xchg
xchg
pop
std
fiaddl
inc
mov
ss
popa
pushl
mov
leave
mov
xchg
lret
sub
into
xchg
sbb
adcb
or
mov
faddp
scas
lods
mov
xchg
shll
repz
inc
mov
sbb
out
adc
sahf
sahf
sub
decl
push
ja
or
lods
je
hlt
call
pop
adc
mov
cmpsb
inc
das
and
js
push
or
bound
fs
ljmp
and
std
mov
cmc
sbb
adc
xchg
out
xchg
aaa
int3
push
xchg
leave
into
xchg
out
pushf
fdivl
fiaddl
decl
movsb
mov
xor
adc
adc
test
push
mov
push
dec
jmp
arpl
dec
sub
repnz
xchg
pop
and
fiadds
lcall
movswl
decb
rorl
and
fldl
inc
ljmp
ret
push
jb
ja
push
mov
mov
mov
fs
fbstp
fsubl
or
int3
and
xchg
dec
out
aaa
clc
xchg
dec
lahf
icebp
decl
pop
nop
xchg
pop
jb
add
movsb
mov
jg
inc
mov
jg
frndint
out
fbld
adc
adc
mov
iret
push
sbb
or
data16
pushl
std
push
popf
ds
mov
mov
cmpsb
cltd
addb
fisttpl
sub
mov
enter
fimuls
sub
outsl
ds
stc
jbe
dec
add
decl
mov
pushf
xchg
push
inc
pop
sbb
adc
sbb
mov
cmp
cmpsb
je
iret
int
mov
filds
or
jge
jge
loop
cltd
scas
scas
dec
push
pop
out
nop
mov
xchg
push
sbb
movsb
ja
sub
daa
call
icebp
pop
loopew
insl
ret
movsl
cwtl
or
push
and
pop
fwait
jle
xchg
sar
push
std
ss
testb
jecxz
insl
repnz
or
cld
jnp
aam
imul
outsl
clc
jae
dec
jmp
xchg
das
cli
cmpsb
push
data16
ret
inc
inc
add
mov
sbb
add
xlat
jmp
cld
ljmp
pop
xchg
inc
jle
inc
fs
es
inc
arpl
jbe
pusha
fidivl
call
shll
add
jnp
push
sbb
or
pop
mov
and
decl
out
push
les
bound
adc
rorb
xchg
pop
xor
mov
inc
mov
incl
mov
dec
fnstenv
mov
dec
push
clc
add
jl
popa
push
push
xor
insb
repnz
cltd
sub
call
test
ret
scas
out
mov
cmp
ss
lcall
je
jge
jno
inc
cmpsl
mov
mov
xchg
cli
ljmp
movsb
cmc
sub
hlt
xchg
mov
push
je
stos
cs
jmp
xor
pop
mov
jns
jns
dec
xchg
and
push
dec
cmp
cld
outsl
add
inc
pop
pop
fwait
ja
mov
cs
clc
push
sarl
push
xor
mov
xor
mov
clc
inc
or
cmp
adc
mov
xor
push
out
sbb
push
out
push
mov
jns
or
ljmp
mov
incl
loopne
dec
xchg
adc
jg
test
jecxz
idivb
loope
dec
push
popf
sbbb
cli
in
and
jmp
enter
fisttps
fisubs
cmp
push
mov
jb
mov
or
adc
fsubrl
jb
cltd
lods
shrb
dec
lods
rolb
mov
pop
xchg
jne
xor
and
mov
sub
ljmp
sahf
mov
in
pop
push
mov
add
sbb
orl
ret
sbb
mov
stc
cld
dec
xor
clc
ljmp
add
adc
fsubr
in
pop
imul
les
sti
mov
loope
dec
jle
repnz
scas
leave
sbb
leave
outsl
pusha
imul
sub
dec
loop
mov
add
stos
lods
repnz
test
idiv
mov
fistpll
cmp
xor
test
aad
cli
call
push
mov
pushf
imul
jg
cmc
jg
into
notb
je
repz
fiaddl
int
add
sbb
fwait
mov
mov
ljmp
mov
sbb
pop
sbb
mov
es
cli
xlat
les
dec
jne
clc
cmp
jmp
mov
adc
dec
mov
ficomps
std
xorl
outsb
sub
nop
fistps
flds
pop
jne
xor
xor
mov
ret
sub
idiv
mov
lret
push
data16
jge
mov
push
in
cmp
cmp
add
es
sub
std
cmp
jmp
enter
lret
cmpsb
in
fwait
mov
in
cs
outsl
xchg
adc
call
push
fdiv
and
jae
bound
repnz
sub
inc
mov
ret
incl
outsb
icebp
test
adc
fmull
in
add
and
mov
scas
mov
aaa
jbe
pop
pushl
shl
insb
lea
push
adc
in
fisubs
test
xchg
cli
pop
clc
fldt
dec
lea
orl
mov
jae
leave
cmp
popf
cli
jmp
inc
fdivrl
mov
inc
movsl
inc
mov
pop
adc
lcall
push
insl
outsl
cmp
sti
sbb
push
adc
mov
jle
mov
and
jmp
adc
push
add
rcrb
jle
popf
cmp
mov
sbb
adcb
xor
or
ljmp
addr16
push
not
push
rcrb
call
flds
push
pop
push
ja
jno
in
or
in
or
cmp
pop
loope
and
in
dec
out
call
and
mov
cmp
dec
sbb
aad
inc
dec
mov
xchg
dec
out
das
sar
mov
mov
fsts
fs
movsb
inc
nop
mov
mov
adc
gs
jmp
dec
fwait
in
inc
mov
outsb
sbb
jge
decl
cmp
push
cmp
xor
jl
mov
jecxz
adcb
les
out
pop
leave
insb
test
mov
cwtl
jnp
out
repz
add
mov
daa
or
incl
loopne
idivl
not
inc
adc
int3
cli
sub
out
pop
jmp
incl
add
cmpsl
sbb
sti
xor
pop
addr16
inc
dec
ror
adc
decl
enter
add
adc
clc
sub
mov
or
mov
lock
ret
leave
adc
pop
pop
inc
call
inc
ljmp
jp
adc
sub
or
mov
cmp
mov
dec
jbe
int3
sti
jge
jecxz
mov
insl
test
inc
add
mov
cmp
cmp
imul
pop
jmp
call
stc
addr16
pushl
sahf
leave
or
mov
cmp
nop
dec
repnz
inc
dec
push
stos
or
add
adcl
ljmp
mov
lcall
sbb
int3
push
and
cmp
adc
or
or
xor
ljmp
and
push
and
mov
out
sti
jae
sbb
aaa
push
lcall
popa
dec
test
ss
xor
mov
xor
test
adc
sar
decl
scas
xchg
jne
jne
mov
int3
xchg
lock
aas
fisubrl
and
ja
lret
sbb
dec
push
cs
out
clc
dec
js
insl
movsl
call
filds
mov
mov
into
xor
jmp
cltd
inc
push
inc
sub
outsb
daa
mov
rcr
or
cmp
pop
inc
or
sbb
out
adc
jp
cli
or
xor
xchg
movb
inc
xor
pop
and
sub
lods
jns
popa
repz
icebp
pop
xchg
lret
out
jb
sub
test
xchg
gs
jmp
jge
not
lock
add
pusha
data16
adc
daa
insl
mov
clc
lcall
inc
popa
jg,pt
sbb
pop
mov
popf
add
mov
pop
inc
jl
push
ljmp
sti
inc
jo
mov
sub
cld
ljmp
rclb
mov
cld
ret
ds
lcall
andl
lods
ret
jg
adc
xor
xchg
aas
or
mov
jmp
pop
repz
test
data16
sahf
mov
pusha
jb
call
mov
aam
pop
cld
xor
pop
xchg
lret
sub
dec
lock
push
xor
iret
adcb
test
stc
sti
and
sbb
ret
xchg
and
adc
mov
mov
shrb
xchg
out
addb
inc
jbe
or
mov
ljmp
xor
pop
daa
add
jnp
or
fldenv
test
call
sbb
fbstp
xchg
xchg
into
add
jb
stc
sbb
sahf
es
mov
js
filds
bound
mov
adc
add
sbb
into
dec
arpl
imulb
incl
popf
movsl
je
mov
fstps
jb
jne
cltd
and
sub
pop
add
jle
inc
out
jne
scas
inc
test
sub
call
loopne
sub
cmp
pop
jmp
cmc
and
notb
mov
jo
mov
jbe
pop
dec
add
les
sbb
xor
ljmp
mov
inc
jle
add
jmp
sub
pusha
lods
inc
cmpsb
pushf
sub
decl
inc
mov
mov
push
fsubrl
cmp
call
mov
xchg
test
mov
rclb
ret
lock
lcall
xchg
mov
les
mov
cmpl
in
clc
incl
add
cwtl
pushf
mov
sahf
jae
les
aas
add
sbb
test
es
mov
xchg
cmp
das
sbb
out
sbb
bound
mov
in
adc
dec
push
mov
jmp
in
stos
or
call
pop
fmull
or
mov
fcmovnbe
xor
mov
mov
test
insb
aam
push
ret
daa
and
enter
fwait
push
clc
ds
mov
aaa
lods
cmp
dec
xor
sarb
cld
maxps
in
addr16
cmp
data16
add
incl
scas
cmpsl
lock
stos
cli
insl
test
insb
sbb
mov
ficoml
lds
orb
add
ljmp
arpl
pop
and
repnz
mov
push
add
les
jnp
push
xchg
pop
sbb
ret
pop
cmp
call
cmpsb
jmp
sub
enter
mov
xchg
sbb
lcall
xchg
in
cmpsb
in
cmpsb
rcll
push
xchg
mov
xor
or
pop
inc
cmp
imul
cltd
add
jle
mov
lcall
push
adc
adc
ret
insb
xchg
out
fsubrl
incl
add
and
fldl
insb
xor
leave
aas
jb
aad
std
pop
shl
or
xchg
cmp
lods
sbbl
jno
bound
arpl
jg
mov
das
dec
push
fs
cmpsl
xchg
fidivrl
jne
sbb
ror
sub
test
arpl
adc
xchg
leave
pop
cmp
imul
jge
in
popa
xchg
mov
mov
mov
mov
sub
dec
mov
pop
jg
mov
jmp
adc
aad
aas
pop
test
cli
shll
ja
test
add
mov
inc
insl
jbe
in
cmp
mov
dec
push
mov
mov
inc
sbb
jnp
xchg
fcom
into
stos
inc
jno
xadd
sbb
ss
jbe
rcrl
jno
sti
sti
ljmp
popa
ret
push
xchg
scas
js
aad
jecxz
pop
add
xchg
adc
dec
mov
call
mov
stc
subb
in
xor
xor
and
test
ljmp
popa
test
adc
cwtl
sbb
rcll
xchg
xchg
sub
ja
clc
mov
fs
sbb
pop
arpl
cmpsb
test
mov
pop
stc
enter
pop
clc
xchg
enter
or
push
scas
lods
cmp
insl
insl
jmp
pop
shl
push
push
out
add
fisttps
mov
mov
mov
xor
cltd
popa
mov
popf
jbe
adc
sti
xchg
and
clc
jge
jb
loop
outsb
insl
in
mov
push
pop
cld
ds
push
data16
dec
mov
iret
int3
out
mov
jo
dec
popf
or
call
sbb
add
mov
cltd
dec
cmp
cmc
push
arpl
aam
xor
ljmp
or
mov
std
arpl
stc
mov
push
xchg
lock
stc
scas
imull
dec
movsl
out
js
fsubrs
cmc
inc
lret
dec
cmp
addr16
sub
icebp
cmp
push
jae
pop
hlt
xor
push
xor
cld
cld
mov
decl
xorb
xchg
xchg
inc
push
dec
fnstsw
and
xchg
pop
clc
xor
movlps
xor
push
mov
ljmp
sbb
fadds
std
push
lock
hlt
int
dec
push
jnp
or
iret
add
movsl
sbb
out
xor
mov
jl
jae
insl
orb
xchg
cwtl
or
fdiv
sbb
out
pop
or
fisttpl
jo
roll
push
lcall
ja
push
es
loop
mov
repnz
mov
int3
mov
ljmp
outsl
cli
xor
cmp
aam
inc
loop
and
nop
sbb
sbbl
call
fisubs
dec
pop
stos
mov
stos
fwait
int
ljmp
push
push
call
incl
mov
push
add
scas
pop
scas
pop
out
cmpsb
lods
add
aas
inc
aas
ficompl
push
jg
jmp
pop
sahf
jns
add
mov
dec
pop
add
dec
dec
pop
sahf
insb
inc
fdivl
ret
call
push
fcmovnu
mov
cmc
leave
out
addr16
test
push
pop
dec
sar
pop
push
lock
mov
push
cmpsb
ljmp
adc
mull
sbb
sub
movsl
xchg
add
push
cmpsl
cmp
sbbl
lahf
fcompl
outsb
dec
mov
push
cltd
cmp
and
add
pop
lea
jp
or
fdivr
sti
ds
jae
ret
pop
cmp
sub
adc
imul
aad
mov
decl
jmp
push
ss
cwtl
in
lcall
cmpsl
lret
iret
mov
fmulp
pop
dec
dec
jns
jle
incl
pop
data16
cmp
dec
cmp
adcb
sbb
movsb
pop
cmp
inc
cmp
jmp
sahf
xor
daa
mov
fcom
fsubs
decl
mov
sub
cld
dec
mov
clc
in
test
subb
lea
test
jp
shr
adc
mov
jge
fisttpll
icebp
scas
mov
and
xchg
gs
addb
enter
push
fwait
in
lods
mov
sub
dec
ret
sahf
icebp
repnz
ljmp
sub
xor
fwait
cwtl
repnz
repz
sarb
movsb
stc
jno
xor
pop
or
jp
or
or
sahf
inc
sub
adc
push
sahf
clc
sub
adc
fsubrl
leave
loope
js
aam
je
mov
mov
pop
lret
lods
push
push
or
lahf
mov
sti
and
jge
jmp
fnstsw
stos
push
mov
pop
inc
test
call
jg
cmp
jp
sahf
add
into
cltd
mulb
adcl
sub
jmp
xchg
lret
js
sar
and
mov
inc
test
sub
lcall
cmp
mov
push
mov
rcl
cmp
int
xchg
sarl
push
bswap
pop
push
sub
fwait
pusha
loop
imul
leave
mov
push
in
jmp
fsubrp
pop
push
pop
ja
mov
icebp
hlt
or
xchg
test
mov
lcall
xchg
mov
mov
dec
jo
sub
mov
sbb
loope
movb
mov
iret
je
cld
mov
dec
fdecstp
fists
pop
add
and
mov
sub
call
push
mov
scas
arpl
inc
push
push
nop
hlt
loope
pushf
mov
push
push
ret
cmp
jg
mov
pusha
mov
and
and
pop
push
jbe
lret
push
cmpsl
inc
icebp
in
mov
lock
mov
or
leave
mov
or
mov
push
cmp
push
cmp
pop
add
mov
mov
jp
mov
or
imul
call
pop
into
les
icebp
push
push
pop
xchg
aas
push
iret
mov
cld
inc
sub
push
adc
pushl
hlt
scas
push
dec
xchg
jle
ret
mov
data16
inc
jns
js
push
sbb
mov
xchg
pop
dec
jnp
sarl
jo
scas
fisubrs
inc
movsl
pop
pop
mov
xchg
mov
dec
inc
cwtl
insl
decl
dec
push
or
inc
and
xor
mov
clc
int
test
mov
negb
mov
mov
jg
push
xor
push
mov
ss
sarl
movsl
ljmp
je
or
mov
dec
mov
incl
clc
mov
or
fdivs
mov
lret
jne
in
inc
cwtl
loop
dec
jecxz
xchg
fidivrs
fadds
mov
rcr
cltd
hlt
pop
inc
mov
ffreep
mov
mov
scas
xchg
and
outsl
add
pop
fdivrl
js
or
ret
or
jp
scas
call
cmpsl
out
fmull
fstps
jle
shlb
sub
lahf
adc
inc
cmpb
fdivrl
bound
pushl
ljmp
xchg
iret
xorl
sti
imul
popf
jb
out
test
incl
ret
test
add
aas
lds
sub
cld
fwait
dec
mov
xchg
xor
mov
sub
xchg
ss
in
incl
popl
mov
or
xchg
ficomps
jmp
lcall
xor
call
popl
jb
xchg
jg
aaa
pop
inc
insl
scas
lcall
ljmp
pop
sub
mov
mov
inc
mov
jb,pn
mov
cltd
aam
pop
sbb
in
leave
pop
int3
xchg
adc
mov
inc
in
mov
add
sub
sub
popf
insl
decb
rcl
adc
scas
add
cli
xor
xchg
cltd
movsl
sub
push
mov
cmpsl
xor
xchg
mov
subps
popf
repnz
decl
lods
jae
xor
rclb
pop
cmp
push
test
ljmp
mov
adc
mov
out
and
lret
xor
rorl
rclb
dec
push
mov
inc
dec
push
cmpsb
jno
pushl
loopne
out
and
arpl
xchg
pop
xchg
jge
jo
scas
dec
jns
ljmp
shll
inc
xor
movsl
jl
pop
xlat
nop
and
pushf
inc
mov
mov
call
fstpl
dec
pop
or
pop
test
scas
js
loop
popf
jno
sbb
cwtl
push
das
decl
inc
xchg
cmc
rol
jecxz
mov
push
adc
sbb
xchg
jnp
pop
mov
adc
lock
push
enter
cltd
adcb
xor
decl
pusha
xchg
inc
push
notl
inc
test
aaa
push
sti
jl
filds
lret
push
shrl
clc
xchg
testl
ljmp
dec
sub
in
xor
or
gs
ds
pop
ret
stos
jmp
add
rolb
cmp
mov
cmp
adc
jg
jmp
adc
out
inc
pop
das
jae
and
iret
sbb
out
cli
sbb
fists
mov
das
mov
aas
jo
jbe
mov
push
sbb
inc
sub
ljmp
icebp
pop
outsl
mov
adc
mov
aad
add
xchg
mov
sub
sub
pop
pop
call
out
daa
mull
jle
mov
incl
jae
out
pop
repz
cmp
jmp
pop
cmc
lret
sub
xor
out
in
outsl
jge
movb
hlt
shll
pop
cmp
lcall
roll
loopne
std
pop
jmp
push
push
out
stos
adc
mov
jecxz
dec
jle
or
out
mov
cmp
daa
testb
mov
jb
std
xor
push
ds
outsb
xor
xchg
sar
mov
push
je
inc
aad
lret
lock
jp
lahf
sbb
call
leave
inc
push
jge
in
and
stos
call
cmc
mov
mov
push
je
movsb
das
sub
add
dec
dec
adc
and
sub
adc
leave
cmpsl
das
push
ret
jg
lods
incl
adc
mov
orl
sbb
jbe
pop
cltd
fldl
into
and
call
lret
mov
mov
stc
push
cmp
sub
push
mov
mov
mov
sbb
ljmp
push
jno
sub
mov
test
xor
jns
out
fstpl
mov
call
cltd
cmpsl
leave
js
sub
fbld
mov
jbe
ss
fimuls
ret
inc
lcall
lock
xchg
addr16
into
pop
shrb
fucomip
adc
jle
repz
xor
stos
sbb
and
adc
cs
push
addr16
jno
popf
lcall
pop
add
ljmp
out
sub
rorl
dec
ds
incl
inc
mov
leave
test
int3
cmp
aaa
ret
fbstp
div
jno
xchg
push
or
clc
aam
xchg
cmpsb
lods
lods
pop
xchg
lahf
inc
mov
sbb
add
cmpsb
add
mov
lahf
mov
lcall
psubusw
xor
pusha
and
sbb
pop
jl
or
repz
mov
jl
inc
pushf
mov
lret
jb
inc
push
xor
jo
cmp
out
mov
int3
adc
roll
mov
mov
xchg
mov
mov
aad
js
and
nop
push
stos
jmp
dec
imul
push
mov
lcall
lret
xor
lds
add
adc
lods
cli
mov
or
insl
sub
out
dec
enter
ret
mov
mov
cmp
ljmp
pop
pushf
xchg
rcll
push
movsb
int3
mov
in
aas
mov
pop
add
cmp
call
fs
daa
js
int3
loope
insl
mov
mov
and
jmp
mov
xor
xor
jmp
cmp
xor
call
xor
mov
dec
enter
lret
hlt
xchg
rcl
push
cmp
push
xchg
lret
in
aas
adc
fildl
int
rcrl
stos
pop
lea
and
jno
add
mov
cld
jmp
push
mov
hlt
push
test
addl
jg
add
cmc
cli
adc
jp
xchg
jp
and
dec
lods
lea
xchg
pop
ret
push
in
out
jecxz
inc
xor
inc
iret
sub
cmp
xchg
mov
sbb
sbb
out
inc
mov
mov
or
mov
sub
loop
adcl
xor
lods
shlb
cld
inc
test
int3
sbb
pop
cmp
enter
lret
xchg
jne
push
push
loop
push
lock
or
mov
jns
mov
decl
cmp
lret
xor
out
ret
xchg
pop
add
sbb
ret
jo
outsl
xor
cmp
mov
push
sbb
or
call
push
push
add
mov
test
sbb
rorb
out
xchg
add
rcll
jl
pop
xor
adc
adc
hlt
imul
mov
loop
movsb
mov
mov
incl
mov
xchg
and
sbbl
mov
or
jmp
decl
fbld
add
in
sbb
dec
adc
mov
or
fsubrs
ud0
loopne
sbb
lock
and
add
and
dec
add
push
ss
rclb
mov
imul
decl
mov
std
les
mov
aam
and
add
inc
fwait
mov
cmp
sub
pop
xor
jmp
inc
fwait
add
jmp
pop
mov
pop
adc
sub
decl
or
ror
adc
pop
and
outsl
int
and
es
mov
xchg
incl
or
out
and
adc
mov
adc
lcall
aaa
adc
jno
inc
inc
pop
les
mov
pop
hlt
jmp
xlat
mov
or
inc
jge
out
push
stc
mov
mov
or
xchg
incl
or
and
inc
lods
xchg
pop
mov
or
sub
les
mov
cmp
cwtl
jge
movsb
push
out
jns
jmp
adc
pushf
decl
fidivs
cli
rorl
data16
aas
sub
mov
mov
mov
and
xchg
mov
gs
mov
rorl
mov
popf
sbb
mov
mov
movsb
xchg
cltd
lods
mov
sbb
test
mov
adc
lcall
push
out
xchg
daa
ja
push
xor
cmp
jmp
inc
pop
mov
incl
in
or
in
cld
sbbb
int
cmp
xchg
aad
mov
pop
test
popf
sub
filds
ljmp
flds
decl
cmp
nop
call
push
das
xor
cmp
ja
xor
cld
inc
call
lods
pop
fcmovb
scas
dec
jae
fsubrs
aam
push
inc
mov
add
ret
inc
in
stos
lcall
mov
dec
adc
xor
mov
call
xor
test
mov
shl
inc
call
sarb
xchg
jp
add
sub
xchg
dec
call
cmp
adc
call
icebp
std
repnz
imul
fdivs
cmp
das
ljmp
dec
add
push
xchg
mov
sbb
adc
movsl
add
push
fisubrs
ljmp
jl
mov
ljmp
pop
push
fcomp
pop
cli
imul
and
xchg
mov
mov
push
inc
decl
stos
stos
inc
add
add
xchg
mov
and
imul
incl
cmpsl
fucomip
xor
enter
nop
add
adc
into
and
fsts
xchg
out
incl
inc
jno
pop
bound
pop
inc
sbb
jb
test
inc
das
sarl
jmp
ljmp
hlt
pop
aad
jns
jle
leave
aam
lcall
xchg
mov
mov
idiv
loope
inc
shr
cmp
inc
int3
xchg
mov
loop
sub
decl
sti
inc
repnz
outsl
imul
lret
stos
cld
and
fnsave
sbb
mov
stos
sbb
mov
stc
mov
aam
xor
mov
call
lcall
out
pushf
xor
test
push
insl
sahf
leave
cmp
jp
and
pushl
sub
mov
dec
test
dec
jb
mov
lret
ljmp
xor
out
rcrb
pop
fcoml
or
aas
fstpt
lds
lock
leave
sub
ljmp
ds
cmp
lret
xchg
pop
fiaddl
sub
int
dec
aaa
cld
cmp
jo
cwtl
stos
ffree
out
inc
fcom
stos
mov
test
lcall
js
cmp
add
repnz
fnstsw
je
lret
cmp
xchg
es
call
sbb
sbb
divl
psubusb
cmp
dec
push
mov
push
aas
test
or
clc
push
nop
mov
ret
push
and
lock
push
inc
push
out
in
ds
mov
addr16
arpl
std
inc
sub
jg
ret
ret
add
adc
mov
jg
pushl
nop
lock
cmp
mov
orb
push
ss
jl
jns
aad
icebp
movsl
fsubrs
pop
adc
dec
jmp
push
ds
incl
lret
shrl
pop
add
repnz
xor
xchg
decl
loope
push
icebp
je
adc
dec
push
iret
negb
sbb
add
fisubrs
jae
mov
and
sub
jnp
scas
ret
mov
jo
cmp
push
cltd
subb
xor
je
mov
scas
mov
ss
adc
pop
jbe
dec
pusha
sub
add
cltd
data16
mov
leave
ret
addr16
ja
mov
sub
and
in
ljmp
inc
pusha
cs
pop
adc
sbb
and
hlt
out
movsl
inc
fisubs
xchg
jae
in
dec
repnz
jno
and
push
push
iret
dec
mov
mov
push
lods
dec
std
sub
xchg
xorb
jecxz
xor
dec
jnp
sub
jmp
shrl
aas
mov
jbe
mov
stc
psadbw
sbb
inc
pushf
dec
mov
std
dec
dec
pop
pop
out
flds
mov
movsl
movsb
std
jns
out
push
push
mov
shrd
mov
sub
int
fisubrl
nop
ja
push
inc
mov
jmp
int3
faddl
into
lret
push
movsb
or
add
mov
jp
lcall
decl
mulb
adc
les
adc
xlat
jecxz
push
mov
push
sar
ljmp
into
std
dec
mov
outsl
in
les
outsw
sbb
cmpsb
sub
lcall
lods
call
scas
shrl
into
mov
aam
clc
fwait
in
push
inc
pop
inc
dec
clc
jmp
scas
push
xlat
mov
fmuls
cltd
push
stos
mov
fndisi(8087
inc
ret
scas
fwait
jnp
mov
in
jmp
outsl
inc
fsubl
xchg
mov
sarb
rcrl
xchg
xor
shrl
add
adc
jmp
movsb
loopne
xchg
test
fs
xchg
and
dec
mov
pop
cltd
incl
cltd
imul
ret
pop
test
insb
fwait
ljmp
pop
int
sbb
sbb
int3
push
in
mov
pushl
jg
adc
leave
mov
je
or
popl
xchg
pop
push
add
cmp
inc
mov
jmp
scas
cmpsb
movsl
ja
cli
adc
xchg
stos
aam
loop
sub
mov
test
ljmp
or
rcr
inc
mov
sti
jmp
call
add
test
in
mov
int
ljmp
lcall
xchg
orb
pop
jl
es
and
dec
loope
incl
mov
pop
mov
imul
test
testb
push
decl
gs
push
lahf
sbb
imul
mov
mov
pushl
decb
xchg
add
mov
sbb
xchg
and
mov
push
dec
and
movsb
jne
xor
adc
outsb
lret
mov
testl
jnp
pop
mov
lock
fisubs
pop
shll
andl
scas
clc
xchg
lock
push
inc
mov
mov
popa
movsl
or
mov
mov
pop
aam
movsb
sbb
sbb
dec
jbe
or
dec
jl
push
loop
xlat
imull
xor
fsubl
cltd
je
dec
negb
sti
mov
push
add
imul
je
jge
ljmp
aam
and
cltd
enter
push
xor
pop
test
xchg
incl
or
scas
test
inc
js
and
iret
and
lcall
loop
loope
jno
popa
ror
lea
jo
fdivl
push
pop
out
push
pop
mov
sbb
ljmp
aaa
imul
in
mov
xor
add
lcall
add
mov
ret
subb
inc
mov
xchg
movsb
ds
popa
inc
loope
fidivl
test
and
inc
xor
mov
movsl
js
mov
cmp
lret
xchg
rclb
ror
mov
cmpsl
mov
fldcw
jg
pushl
xor
gs
fstps
iret
push
testl
incl
mov
je
insl
mov
test
in
fisubrl
jno
push
and
jg
mov
lock
push
mov
mov
cmp
shll
ljmp
mov
xchg
cmpsb
and
call
data16
cmp
movsl
cmp
mov
je
adc
push
adc
call
jl
negl
or
xor
lea
push
popf
mov
cmpl
push
lcall
xchg
ret
sbbl
imul
daa
out
inc
xlat
cli
das
fs
repz
lods
jno
leave
cli
repz
mov
lea
pop
ss
jg
into
xchg
test
jb
stos
loope
jmp
sub
shlb
pop
pusha
test
mov
mov
sbb
icebp
xchg
sub
xlat
icebp
adc
ljmp
mov
mov
mov
arpl
xchg
decl
mov
mov
jl
inc
mov
inc
out
pop
std
insl
dec
stos
fbld
sbb
aam
arpl
dec
shll
mov
pushl
das
loop
subl
mov
add
jmp
stos
lcall
sar
mov
xchg
jb
xchg
jmp
sub
push
inc
jg
shrl
push
sti
xchg
dec
in
lods
cmpsl
popa
mov
in
sti
and
imul
cli
lcall
push
push
dec
jp
jns
fwait
dec
sbb
mov
inc
add
add
in
js
jge,pn
mov
call
xchg
adc
and
mov
mov
jb
loop
xchg
adc
ja
adc
loope
andl
push
ret
out
adc
bound
movsb
cmp
aaa
sub
rorb
lcall
in
pop
fstpt
adc
int
jp
test
cmc
cmp
cld
outsl
cli
scas
and
jno
mov
mov
in
pop
adc
out
rol
mov
sbb
outsl
shr
dec
sbb
stc
loope
add
incl
add
aas
sub
jge
xchg
inc
and
dec
ret
inc
push
jecxz
lcall
mov
push
jp
cli
mov
lahf
push
mov
sbb
mov
mov
insl
dec
dec
mov
pusha
pop
mov
pop
fsub
jmp
rclb
ret
mov
je
mov
inc
xor
push
pop
sbb
inc
ljmp
add
sti
psllq
aad
loopne
cli
hlt
je
adc
pushl
jmp
stc
xorb
test
aas
jne
push
adc
push
rcll
sbb
push
cmpsb
fwait
cltd
or
hlt
insl
popa
add
jg
mov
sbb
pop
cmc
lods
lock
mov
call
xchg
jg
cmp
andl
xchg
hlt
inc
dec
jno
sub
testl
call
leave
in
adc
pop
dec
aam
mov
cmpb
pop
getsec
mov
jmp
adc
jae
xor
aad
pop
insb
int3
loope
xchg
lret
sbb
and
mov
jmp
out
das
insl
inc
repz
xlat
in
sub
and
loop
mov
push
cmovne
scas
add
ss
cld
pop
or
adcl
mov
push
fstpl
decl
loope
into
cmp
std
out
xor
add
repnz
or
insl
call
loopne
xchg
jge
xchg
into
rclb
or
cwtl
xchg
dec
push
fisttpl
and
jecxz
sar
das
cli
lcall
cmpb
icebp
cmp
sub
cmp
pop
push
jmp
and
add
pushl
sbb
sub
repnz
ljmp
sar
adc
push
out
out
lret
push
fists
pushl
pop
call
cmp
fnsave
ss
add
and
insl
ja
and
cmp
dec
int3
push
repnz
gs
stos
outsb
or
xor
je
mov
imul
das
pusha
mov
pop
push
ret
js
dec
jge
add
pop
and
xchg
jae
adc
dec
cwtl
pop
xor
mov
rol
jmp
scas
inc
lods
in
jns
dec
cmp
mov
mov
push
test
repnz
movsb
jae
test
jmp
cli
jp
dec
inc
dec
cmp
pushl
pop
and
mov
mov
popa
or
push
and
daa
out
les
cld
call
jb
in
loopne
cmpsb
inc
dec
clc
push
sbb
scas
jg
fs
sub
mov
inc
cmp
xchg
adc
out
push
xchg
xor
inc
mov
stos
decl
and
jg
stc
mov
and
and
ror
lods
sub
mov
call
decl
in
test
lret
stc
mov
int3
iret
fbstp
cmp
mov
cli
sub
jmp
or
dec
loop
fwait
popa
pop
cltd
ret
ljmp
mov
mov
cs
inc
in
or
cmpsb
popa
aad
and
int
adc
clc
jmp
cld
das
fldt
test
in
sbb
fnstcw
pop
bound
push
mov
lcall
rorb
aam
pop
adc
sahf
or
xor
scas
jo
or
jmp
jnp
cmpsb
push
arpl
insl
incb
scas
or
ljmp
fstl
inc
xor
mov
jg
jecxz
enter
cmp
sar
mov
fwait
xchg
cmpsb
cmp
dec
loop
lea
loopne
push
outsl
adc
adc
jo
dec
xorb
lods
fwait
xchg
movsb
mov
imul
mov
mov
incl
out
adc
stc
push
add
das
cwtl
rcr
dec
std
sahf
mov
xor
addr16
ret
jg
jno
shlb
arpl
sbb
cmpsl
push
mov
pop
jg
sbb
sub
and
push
cmp
cmpsb
jns
xchg
lock
mov
fucom
aaa
fs
push
pop
cmp
into
push
push
inc
lcall
rol
sarb
das
inc
push
lock
fiaddl
push
mov
cwtl
in
roll
mov
mov
incl
adc
lret
les
jae
das
repz
mov
cmp
dec
add
rclb
iret
xor
jg
adc
cmpl
inc
nop
xor
jecxz
sbb
xor
idivb
call
inc
push
pusha
adc
cmp
sbb
loop
jmp
mov
sbb
xor
inc
dec
inc
sub
pop
ss
push
add
int3
mov
pushl
sahf
pop
mov
fxch
xchg
mov
push
fisttpll
pop
js
jmp
or
pop
lods
pop
out
xchg
cmp
dec
mov
or
test
ljmp
pop
sub
ja
and
mov
xor
popf
movsb
test
add
or
aas
int3
push
lea
fisubrl
adc
mov
inc
mov
pop
mov
call
out
dec
enter
mov
sbb
mov
inc
inc
xchg
cli
adc
roll
sbb
filds
gs
and
xor
inc
vrcpps
dec
adc
jp
and
pushl
lahf
xor
cwtl
dec
mov
push
aaa
std
sbb
int
push
pushl
subl
popa
or
xor
jp
mov
loopne
mov
mov
pop
movsb
or
push
mov
call
jp
inc
fs
cld
pop
in
add
xor
push
push
jp
mov
lret
or
fisubrl
dec
je
insb
daa
movsl
cmp
pop
hlt
decl
dec
pushf
call
ret
ret
clc
out
in
mov
mov
cmp
lock
std
bsr
ja
pop
aam
and
mov
sub
hlt
jmp
add
shll
ds
xchg
mov
in
dec
sbb
int3
cwtl
inc
dec
xor
push
mov
sahf
gs
imul
lcall
scas
cmp
ret
sub
clc
inc
and
mov
dec
jbe
sbb
pop
pop
fdiv
ss
es
mov
mov
mov
mov
lock
je
xor
leave
sub
hlt
decl
not
call
shr
mov
pushl
ffreep
sub
js
shlb
push
punpckhbw
pop
ss
incl
iret
and
xchg
or
pushf
pushl
dec
clc
pushf
bound
mov
test
adc
rorl
decl
popa
cmp
sbb
inc
in
repz
dec
das
sarb
jg
lcall
lods
stc
rcrb
fsubrl
sbb
or
dec
ljmp
sar
filds
movsb
cwtl
push
cwtl
sbb
sbb
sbb
xor
negb
decl
mov
jae
orb
adc
std
and
adc
mov
incl
dec
add
ja
pop
push
in
cmp
mov
es
inc
push
clc
dec
iret
pop
fcomip
cmpl
fwait
lock
testl
and
push
jbe
shl
inc
cwtl
int
push
mov
cmpsb
icebp
decl
adc
add
je
out
sub
ljmp
inc
cld
adc
xchg
out
loop
sub
inc
jge
je
mov
fildll
add
cmp
sbb
push
add
insl
xor
push
and
jno
lods
das
adc
adc
andl
pop
sub
jle
loop
add
sub
xchg
mov
fildl
and
push
pop
sub
cmp
sti
les
lods
js
inc
les
fmuls
scas
test
sbb
cmp
mov
call
lcall
push
pop
inc
inc
test
or
jle
and
mov
jg
cli
out
jnp
jb
lahf
test
inc
and
mov
push
and
out
clc
pushl
cmp
cltd
mov
jge
mov
loop
mov
ljmp
or
adc
mov
or
dec
adc
dec
pop
jbe
into
inc
xor
inc
clc
and
decl
and
daa
mov
or
loopne
dec
or
shll
and
decl
sub
bt
int3
xor
lcall
dec
xor
jmp
scas
jo
test
xor
mov
and
dec
adc
inc
fcmove
jle
add
movsl
push
push
fisttpll
sub
addl
test
jl
ja
cltd
fmuls
fnstenv
push
mov
aaa
scas
xor
mov
ja
ljmp
pushl
dec
pop
aam
sti
push
shrl
pop
lds
jle
push
push
mov
mov
add
xor
jno
fwait
out
add
and
jae
outsl
div
push
das
clc
mov
js
jbe
mov
dec
sbb
xchg
and
clc
mov
inc
mov
inc
dec
mul
and
mov
cld
lcall
push
xor
lret
jns
lret
inc
ljmp
mov
add
cmp
movsl
inc
shrb
dec
pop
das
inc
shll
js
dec
sbb
or
sbb
test
lock
pop
pusha
jmp
mov
inc
nop
dec
adc
jo
pushl
push
fsubrl
ljmp
enter
pop
lcall
popf
jmp
pop
movsl
jnp
ljmp
inc
dec
lret
out
inc
jecxz
rcrb
dec
sti
mov
pop
bound
fcomip
or
mov
iret
ret
jecxz
jae
cltd
js
jl
imul
jb
mov
adc
enter
jp
repnz
out
inc
pop
add
cmp
adc
pop
nop
cs
cmp
add
outsb
cmp
decl
adc
jmp
xchg
daa
adc
mov
sub
cld
call
and
xor
leave
xchg
sbb
ljmp
lods
adc
bound
fistps
test
sarb
mov
cmp
adc
call
inc
fistpll
push
jl
sbb
inc
xchg
int
pop
fsubrs
filds
xchg
sbb
adc
lock
jnp
pop
push
mov
lcall
add
and
stc
push
out
jae
jae
add
call
mov
roll
fwait
int
jo
ja
shl
ret
cwtl
sub
mov
jmp
jae
stc
imul
mov
pushl
in
add
mov
mov
jno
push
xor
mov
pop
repz
lcall
sub
mov
ljmp
repz
lds
divl
out
pushl
jnp
add
outsb
or
sub
cmp
mov
and
and
repnz
popa
or
mov
notb
push
cltd
clc
xor
test
popf
insb
sub
xor
incl
out
fadds
leave
mov
xchg
jnp
mov
inc
ss
xor
loop
decl
outsl
mov
outsl
pop
pop
lds
popf
dec
cwtl
mov
pushl
jb
inc
rcrb
loop
pushl
call
mov
pop
nop
icebp
or
arpl
pop
adc
mov
decl
cmpsb
xchg
push
push
add
adc
movsl
repz
stos
cmp
sahf
ffree
jp
mov
xor
add
sbb
dec
sub
sbb
inc
fcompl
divb
negb
lcall
xchg
sbb
add
xor
adc
push
repz
test
mov
subl
mov
cli
movsb
sahf
testl
pop
add
mov
and
sub
in
sar
lcall
mov
leave
mov
int
outsl
je
mov
push
fwait
mov
mov
jg
and
xor
mov
into
out
insl
xor
pop
add
cs
push
inc
aaa
and
pushl
movsb
sub
xchg
cmpsl
fwait
adc
icebp
idivb
push
repz
cmp
or
std
in
xchg
jl
cmp
imul
fiadds
jns
sahf
push
jno
stos
sbb
fstps
dec
sub
cwtl
xchg
add
rol
cld
pop
fcoms
sbb
call
xchg
lea
add
add
sbb
fnstsw
dec
fidivrl
test
or
ficoml
ljmp
cld
mov
push
cli
cmp
jb
fiadds
push
daa
lahf
push
and
ljmp
pop
xchg
jle
sub
or
mov
sar
pop
adc
pop
push
lock
rcrl
cld
call
loopne
pop
mov
push
ficompl
pop
cmp
dec
inc
or
dec
repz
out
pushl
rorb
cld
or
cwtl
xchg
push
jg
outsl
mov
sub
mov
incl
shrb
sbb
aas
iret
dec
add
fdivs
or
ljmp
out
cwtl
test
fists
mov
cmp
inc
push
js
jle
mov
jns
aad
adc
cmpsl
adc
cltd
adcl
mov
xor
jmp
loop
jmp
test
mul
repz
or
or
rcrl
cmp
cli
popa
decl
pusha
mov
cltd
cwtl
adc
loopne
adc
cmp
sar
mov
dec
test
and
imul
adc
call
pop
call
mov
sbb
cmp
fs
nop
pushf
stos
cmp
in
xor
adc
inc
cli
decl
mov
dec
or
sub
mov
mov
xor
data16
sub
ljmp
jbe
std
ds
fadd
outsl
in
cmp
adc
cli
neg
mull
push
mov
fcomp
sub
decl
jge
out
rol
sub
ret
std
mov
push
sub
out
cmc
jle
imull
fcomip
jmp
movsb
inc
sarw
into
fsubs
pop
mov
in
stc
pop
cmp
jl
add
fsubs
les
and
inc
inc
mov
sub
xchg
inc
mov
gs
push
jecxz
pop
mov
pop
xchg
arpl
ud0
ljmp
pop
mov
mov
insl
cmp
sub
mull
mov
shll
and
inc
roll
icebp
out
fs
loopne
sub
frstor
int3
xchg
bound
mov
loope
xchg
sysret
fistl
repz
cmp
mov
test
pop
test
inc
or
cmp
je
inc
lret
decl
jmp
sbb
popa
mov
jmp
push
or
pushl
adc
push
xchg
mov
add
sahf
jg
popf
pop
out
cltd
popa
inc
push
dec
imul
clc
xor
es
movsb
aaa
mov
cmp
jge
clc
sub
pop
enter
ret
movsl
imul
or
pusha
popf
mov
jmp
rolb
mov
gs
repz
dec
cli
mov
jp
mov
jl
pop
in
ljmp
mov
loope
push
or
adc
ljmp
xchg
adc
cld
pop
shl
sub
or
sub
outsb
loopne
inc
and
pop
dec
mov
xor
je
sub
ljmp
std
insb
push
sbb
nop
iret
out
sbb
jge
loopne
pop
into
and
sub
ljmp
push
sub
out
fistpl
xchg
or
add
clc
sbb
fdivrs
push
xchg
loopne
xchg
clc
jecxz
mov
jo
mov
and
push
testb
fbstp
xchg
push
aam
sarb
and
rcll
into
sarl
adc
fsub
lods
mov
jbe
and
loop
push
mov
dec
hlt
repz
mov
xchg
mov
cmp
pushl
add
in
xor
xchg
sub
outsb
addb
test
arpl
push
push
enter
loop
mov
out
int3
dec
inc
mov
cld
dec
cltd
divl
mov
scas
or
addb
iret
pushf
mov
or
sar
fcmove
jg
dec
pusha
add
xchg
pop
dec
dec
pop
mov
xchg
jg
jg
mov
adc
loopne
filds
pop
sbb
loopne
shr
or
sub
daa
test
ljmp
hlt
pop
mov
jae
insl
loop
movsl
popf
xchg
xchg
aam
mov
adc
or
ljmp
ja
je
loopne
hlt
rorl
sarl
aam
xchg
pop
sbb
repnz
ljmp
inc
lahf
aam
pop
movsb
cmp
push
ret
and
aaa
add
fbld
inc
ficomps
xchg
dec
mov
mov
aas
sbb
lea
push
shll
sbb
adc
jg
inc
movsb
add
xchg
mov
clc
mov
ljmp
sub
and
cmc
lods
mov
sub
leave
sbb
addb
int
dec
jmp
jecxz
push
es
lret
pop
aas
mov
je
lcall
mov
leave
call
lret
jbe,pt
idivl
pop
test
out
in
xor
push
or
ret
push
shlb
sbb
mov
sahf
or
incl
cld
xchg
es
data16
out
push
sti
pushw
shrl
cli
sbb
call
mov
cld
xchg
mov
shrl
dec
jmp
mov
call
mov
mov
enter
pop
add
pop
push
sarl
in
cmp
ljmp
jae
mov
adc
jo
inc
pushf
dec
cmpsl
xchg
sub
dec
jl
push
jp
or
add
mov
fs
fcompl
pushl
mov
cmp
cmp
mov
jno
out
sti
fnsave
cwtl
loope
cmp
loopne
incl
movsb
push
test
je
and
sub
adc
decl
sub
fiaddl
scas
enter
ljmp
xchg
cmp
sbb
lcall
popa
mov
dec
xchg
test
mov
xchg
outsl
adcl
lcall
cmove
cs
add
shr
std
scas
add
pop
loopne
xor
pop
and
sbb
bound
aam
or
jg
hlt
incl
mov
mov
cmp
pop
lret
enter
lock
std
repnz
test
ds
ljmp
and
and
push
cmp
mov
lods
push
dec
test
rcr
bnd
dec
ret
aaa
insl
jno
call
dec
mov
xor
jle
sub
loopne
xchg
sbb
mov
xchg
pusha
insl
dec
cltd
push
decl
cs
ret
aaa
mov
adc
jmp
icebp
lcall
cmp
push
imul
pushl
movsl
std
jbe
dec
repz
into
push
mov
add
mov
outsb
das
inc
inc
aad
push
decl
fiaddl
mov
jecxz
popf
js
bound
push
push
adc
mov
decl
push
sbb
js
int3
xchg
cmp
call
loop
gs
pop
pop
mov
test
mov
test
out
call
cmp
leave
insb
pop
call
cltd
movsb
sbb
pop
leave
frstor
inc
fs
adc
pushl
hlt
pop
inc
pop
push
dec
inc
sbb
pushf
pop
add
and
loopne
pusha
int
jbe
jmp
int3
repz
test
ret
xor
pushf
enter
movsb
cli
dec
inc
in
icebp
incl
adc
xor
shll
sbb
les
icebp
lcall
jbe
mov
jg
lods
ret
xor
aas
adc
pushf
jl
icebp
inc
add
mov
fcmovne
cmp
mov
leave
mov
cltd
push
mov
pop
sbb
repz
out
stc
cmp
call
leave
mov
rcll
bound
scas
pop
mov
int
mov
adc
std
cmp
pop
sbb
ss
decl
dec
movl
popa
pusha
daa
pop
push
iret
adc
aad
mov
clc
lcall
add
cld
push
jnp
xor
cwtl
out
jnp
repnz
adc
in
add
fcom
ret
jmp
push
mov
imul
loope
jmp
mov
dec
dec
sbb
sbb
out
mov
cwtl
les
daa
mov
inc
pop
sbb
nop
push
outsb
push
push
pop
ljmp
faddl
xchg
stc
adc
cmpsb
pusha
ja
xchg
popa
aas
int3
dec
pop
popa
addr16
sub
jo
xchg
adc
adc
mov
jl
clc
ljmp
push
mov
fnstsw
popa
push
lods
or
into
push
ja
mov
pop
outsl
or
sbb
jo
data16
sbb
outsb
lock
lcall
cmp
aad
stos
pop
sti
mov
scas
mov
fnstsw
mov
push
std
negl
in
push
mov
push
adc
shl
cmc
mov
ljmp
lcall
xor
repz
push
jo
xor
push
inc
dec
imul
dec
ljmp
sub
and
leave
mov
iret
jecxz
shrl
cld
pushl
mov
jno
mov
dec
pop
xchg
lret
xor
stos
es
jmp
faddl
scas
loop
sbb
in
mov
loop
add
fdivr
inc
mov
fstpl
mov
je
mov
pusha
xchg
clc
sbb
push
fndisi(8087
adc
jae
lahf
inc
xchg
adc
cmp
cltd
dec
cmp
ret
fcomip
decl
fcomi
rcrb
repz
dec
stc
clc
scas
hlt
cwtl
and
sti
je
or
ljmp
adc
lcall
sub
fimuls
cmp
cmp
pop
fimuls
mov
lret
popa
push
sti
add
lods
pop
or
es
jb
lcall
mov
sbb
popf
sbb
mov
loopne
push
movsl
mov
push
cwtl
push
push
and
jb
adcb
mov
cld
cmpl
data16
jg
aaa
jge
push
fwait
fwait
cmpsb
and
add
push
sbb
test
decl
stos
enter
dec
shl
xor
cmc
cmp
add
jnp
dec
jge
dec
lock
xor
mov
lods
ss
cs
gs
enter
clc
stc
pusha
and
test
push
dec
shrb
xlat
inc
sbb
xchg
flds
ljmp
jl
es
xor
jl
fiadds
fbld
pop
dec
xor
js
faddl
leave
fdivl
sub
out
mov
xor
arpl
sbb
inc
mov
pop
dec
das
cltd
outsl
test
lret
mov
or
call
cmp
sbb
push
cmp
push
xor
pop
fiaddl
ljmp
in
jmp
sbb
lcall
int
sbb
pop
mov
dec
xor
xor
lock
shl
stos
addr16
mov
mov
and
fists
jmp
cmpsb
pushf
jge
cmpsb
cmc
xchg
hlt
push
test
stc
iret
nop
testl
push
mov
cltd
push
inc
jae
dec
in
movsl
jmp
jmp
jle
adc
daa
lock
ds
lods
pop
sarb
sub
incl
jle
push
rcll
iret
out
xchg
inc
outsb
rcrb
ret
dec
and
push
pushl
inc
xchg
inc
ja
decl
mov
mov
mov
decl
ficoms
repnz
insl
lds
dec
pushf
adc
inc
jae
cmp
incl
jb
std
push
into
andb
mov
out
fsubr
mov
pop
loop
xchg
pushl
cmp
inc
cld
or
pop
sub
push
call
arpl
mov
mov
lods
lock
mov
sti
insl
bound
mov
in
ljmp
enter
or
push
pop
cmp
jmp
push
fisubrs
test
cli
filds
shll
push
dec
push
popf
shll
fwait
mov
outsl
sbb
cmpsb
jp
and
and
push
sub
cmp
lret
addb
movsl
decl
mov
leave
sub
inc
push
ret
xchg
jg
aas
or
push
iret
cmp
in
sbb
jb
jbe
testb
aas
mov
cwtl
imul
mov
dec
fimull
inc
mov
pop
std
jmp
pop
push
out
xchg
ds
pop
outsl
dec
leave
push
clc
loope
shrl
cmp
mov
jg
adc
sbb
popa
mov
or
addr16
imul
insl
dec
cmp
vmovntdq
decl
leave
shrl
aad
jecxz
mov
xor
push
pop
andl
cmp
lcall
lods
es
jb
or
arpl
scas
mov
and
push
sub
and
sub
add
stos
mov
pop
xchg
js
sub
ljmp
add
mov
rcll
int3
inc
lcall
pop
push
rolb
inc
lahf
mov
outsl
pop
out
pop
sbb
shlb
and
ljmp
lcall
stc
les
sbb
out
dec
movsb
mov
push
jns
mull
scas
cmp
xor
cltd
add
lahf
je
faddl
dec
inc
bound
cmp
movsl
sarb
leave
adc
push
xchg
mov
add
dec
mov
mov
xchg
scas
rcrb
bound
cmpsb
mov
and
inc
cmp
pushf
xchg
jg
out
pop
pop
dec
jge
stos
test
mov
icebp
xchg
add
fdivrp
dec
pop
or
imul
iret
cld
clc
push
xor
or
adc
test
sbb
decl
xor
fs
sbbl
enter
and
inc
cmp
cmpsl
jbe
mov
sub
sbb
xor
pop
lcall
in
out
insb
or
sbb
das
sar
inc
mov
mov
xchg
ljmp
shrb
add
mov
mov
add
lahf
adc
cmp
push
push
pop
xchg
lds
pop
enter
ljmp
in
or
mov
adc
daa
push
mov
test
xchg
and
scas
jp
xchg
cmpsl
movsb
fisubrl
or
pushf
mov
ljmp
testl
stos
sub
fwait
loopne
xchg
jp
xor
xor
mov
cmp
jle
sbb
ljmp
aad
jecxz
pop
jb
mov
add
outsb
inc
and
cmc
cmp
insl
outsb
lret
sbb
mov
lock
cmp
iret
xchg
pushl
push
sub
ja
sbb
mov
inc
lcall
cmp
call
jb
xor
into
fldcw
xchg
mov
inc
push
xlat
iret
pop
jmp
jl
in
push
scas
lock
ljmp
sbb
xor
mov
hlt
dec
stos
sub
inc
lods
pop
in
mov
and
xor
incl
imulb
fsubl
or
xor
icebp
daa
js
jl
fldpi
or
jb
arpl
dec
dec
rcrb
push
loope
push
pop
add
ljmp
pop
bound
pusha
xchg
lcall
and
jno
sbb
push
mov
jge
push
scas
jecxz
inc
inc
dec
xchg
dec
mov
outsb
cli
decl
imul
push
push
xchg
lret
add
loopne
mov
in
loop
loopne
lods
scas
cmp
aam
ljmp
adc
sahf
leave
sub
sub
cli
roll
fsubr
sahf
adc
push
loop
decl
pop
rcll
cmp
push
jae
pop
xchg
icebp
ljmp
mov
decl
popf
popa
xchg
push
xor
mov
cld
jmp
dec
gs
bound
movsl
pop
adc
cmp
test
cmp
push
cmp
movb
out
xor
insb
adc
out
iret
lcall
leave
leave
cmp
aam
dec
dec
aad
incl
adc
out
jl
lods
in
xchg
leave
icebp
leave
in
push
sti
stc
stos
incl
addr16
sbb
loopne
cmc
fiaddl
sbbb
frstor
dec
dec
rolb
push
cmp
mov
xor
sbb
cmc
fucomip
mov
cmc
mov
mov
rorb
jmp
sarl
push
jo
enter
test
adc
pop
and
leave
mov
ljmp
adc
int3
fildll
ss
in
push
rcrb
sub
dec
cld
fcmovu
aas
jp
dec
mov
mov
outsl
cli
cmp
xor
fwait
cld
das
ja
xchg
or
ljmp
dec
jbe
std
xor
xchg
or
mov
icebp
or
push
lret
dec
sahf
fiadds
xor
arpl
js
mov
in
xchg
in
lahf
push
std
cmp
ljmp
mov
scas
in
fistpl
mov
add
xchg
sub
pop
inc
adc
inc
movsl
es
lcall
jl
push
imul
jg
jmp
test
sbb
and
out
fstl
pop
loop
cld
daa
and
test
push
push
cwtl
out
dec
cltd
or
sub
push
lret
out
sub
mov
cs
push
clc
inc
adc
xchg
adc
dec
pushf
jae
andb
cmp
decl
push
test
jb
leave
dec
push
add
and
mov
jp
out
or
push
sub
xor
cmp
in
ds
push
sbb
ljmp
or
jb
sbb
jne
xor
adc
inc
sti
lret
adcl
leave
std
cmpsl
lret
lock
cwtl
add
enter
inc
addr16
std
or
test
pop
ret
xor
outsl
pop
pop
cmp
sub
scas
addb
push
out
call
sbb
push
out
cmp
mov
push
xchg
faddl
inc
test
push
sub
sub
ret
cwtl
lahf
and
lcall
mov
insl
popf
leave
or
jecxz
ja
mov
sahf
loop
mov
cmp
call
decl
adc
int3
lcall
xchg
imul
mov
xor
mov
mov
lods
int
mov
test
sub
push
das
arpl
sub
divb
call
cmp
sub
adc
insl
int
into
push
mov
call
xor
jne
xchg
dec
add
mov
dec
cmp
ljmp
into
leave
jmp
or
and
xor
mov
outsb
cmpsl
sbb
popa
bound
jmp
mov
or
mov
jp
mov
je
dec
xchg
inc
pusha
lock
jg
jmp
jmp
add
hlt
sub
je
jg
push
dec
push
dec
in
mov
mov
cmp
fists
pop
fs
mov
or
jg
mov
xor
mov
jmp
ret
push
fdivr
mov
sub
jmp
nop
xchg
dec
inc
mov
lcall
xorl
iret
inc
xchg
fmuls
jge
ss
push
gs
xor
mov
pop
call
or
dec
dec
out
lods
or
ds
mov
cld
push
cmpsl
add
pushl
jle
cmpsl
mov
xor
lret
cs
mov
push
inc
movsb
aas
call
xchg
and
leave
push
cmp
lock
add
cltd
out
mov
incl
in
add
jno
stc
sbb
repz
jg
std
addw
es
aam
mov
mov
jo
in
push
cmp
add
add
add
decl
mov
frstor
sti
mov
bound
mov
pop
mov
sub
repnz
cmc
mov
or
ja
pop
sahf
std
and
fsubrl
adc
mov
imul
shll
sbb
jo
stos
test
lods
daa
or
cwtl
cli
adc
out
aas
add
ret
stos
add
lock
incl
inc
xchg
mov
jae
jbe
sub
cmp
insb
sbb
divb
adcb
xor
and
loop
pop
test
fcmovnu
repz
fcomip
scas
adc
mov
adc
or
cmp
leave
mov
mov
mov
orl
outsl
mov
jmp
popf
nop
cwtl
adc
call
jecxz
jge
cmp
ljmp
pop
cmpsl
aaa
inc
test
popa
and
and
mov
lds
adc
pushl
fstl
bound
gs
pop
add
jae
push
mov
cld
pop
add
add
jg
xchg
sbb
dec
jg
lcall
jp
stos
xor
test
mov
push
shrb
cmpsb
add
jmp
shrl
faddl
test
jg
inc
push
ret
fnstenv
jp
push
add
pop
push
and
pop
xor
adc
push
mov
mov
cmc
cs
inc
push
xchg
mov
dec
shrl
sbb
jp
cltd
subb
or
addb
mov
push
shlb
ja
pop
cli
lahf
push
mov
loopne
dec
add
jne
mov
push
push
ret
or
inc
or
sub
adc
mov
test
adc
mov
jns
jge
and
test
or
aad
mov
out
popf
das
repz
pop
jne
inc
pop
adc
lcall
cli
push
stc
jae
mov
mov
pusha
sub
decl
push
or
scas
mov
mov
inc
jo
imul
mov
std
shrb
decl
cmp
mov
cmp
push
es
push
test
mov
outsb
inc
lods
in
lods
fidivl
or
jle
decl
repz
aad
nop
dec
lds
ror
pop
jb
inc
pop
mov
jecxz
mov
xor
adc
and
das
sbb
mov
pop
jl
dec
lahf
mov
inc
pusha
sbb
movsl
jmp
dec
pop
aaa
out
je
adc
mov
std
call
stc
sub
in
push
xchg
popa
bnd
xchg
aas
xor
inc
std
xchg
fiaddl
jae
sub
mov
adc
cwtl
adc
jns
mov
call
cld
jmp
lock
add
frstor
sbb
popf
outsb
fcoml
or
cmp
fstl
jnp
jno
incl
or
add
and
adc
loope
in
stos
jne
cmp
pop
inc
fsubl
call
fwait
shrl
cmp
shl
sbb
ljmp
jbe
popa
int3
ret
dec
je
in
and
dec
lret
lods
pop
mov
and
dec
out
lcall
pop
adc
sub
jle
mov
add
pop
lahf
push
xchg
inc
add
jp
adc
int
stc
addr16
add
mov
jmp
out
clc
jmp
push
inc
inc
and
pop
dec
fildl
clc
push
and
dec
fxam
insb
mov
cmpsb
cmc
in
out
sub
sbb
xchg
outsl
incl
push
dec
inc
and
sub
mov
mov
call
enter
int3
xchg
mov
popl
adc
push
out
daa
push
lahf
dec
js
mov
sar
pushl
mov
mov
cmp
iret
lods
add
and
inc
out
andb
jg
inc
inc
push
add
jo
cmp
push
mov
jl
and
dec
push
out
incl
sbb
out
sbb
gs
fsubs
lods
mov
jmp
mov
mov
sub
pusha
iret
daa
xor
jns
jg
dec
fadds
mov
fisttpll
out
dec
loopne
fdiv
and
sub
mov
mov
mov
out
clc
xchg
dec
lcall
scas
test
stc
or
xchg
sbb
jg
push
call
and
cld
decl
les
sbbb
hlt
test
cmp
fnstsw
xchg
out
mov
jbe
xchg
cwtl
loopne
jp
roll
sub
cld
xchg
mov
fcomip
jmp
jge
xchg
leave
cmp
push
dec
jae
data16
fcmovnbe
pop
mov
or
xchg
add
jecxz
add
pop
incl
decb
mov
popf
mov
mov
dec
dec
xchg
pop
imul
subl
pop
movsb
lock
pop
dec
sub
fwait
pop
pusha
sahf
xor
sub
xor
stos
frstor
sub
sbb
ja
gs
xor
out
jne
sub
and
popa
pusha
dec
into
flds
inc
or
jg
fimull
fildl
in
outsl
je
jmp
adc
lcall
ljmp
mov
dec
icebp
inc
mov
mov
jl
adc
dec
insl
inc
push
add
call
ja
xor
leave
adc
mov
xchg
cwtl
mov
imulb
mov
adc
ja
sar
xor
mov
cmp
sub
decl
cld
and
sarl
inc
sbb
lahf
js
sbb
jmp
mov
incl
push
inc
xor
xchg
add
mov
add
or
cmp
cmpsb
mov
std
incl
jnp
push
rcll
push
jecxz
adc
or
das
fbstp
std
int3
fidivrs
push
mov
adc
stos
cs
add
rcr
dec
sub
sub
call
xor
xor
test
mov
test
dec
mov
and
call
inc
adc
out
mov
and
lods
inc
stos
jb
cli
push
movsb
push
fs
push
je
jg
mov
shll
pusha
jmp
addr16
gs
mov
inc
ljmp
or
cltd
dec
push
mov
jb
icebp
rcrb
jmp
leave
pop
jbe
call
bound
out
mov
imul
rcll
dec
push
rclb
xchg
out
sub
mov
mov
cmp
and
mov
jecxz
push
iret
iret
clc
shlb
imul
decl
mov
test
rolb
repnz
mov
aam
dec
aaa
add
and
xchg
sub
dec
jae
hlt
and
jle
push
xchg
ret
icebp
jmp
daa
adc
dec
jbe
dec
push
mov
xchg
push
sbb
movsl
jl
leave
ficompl
imul
or
sub
xlat
inc
jl
je
xor
pop
outsl
js
or
inc
or
shrb
ljmp
sbb
out
mov
data16
std
mov
dec
sbb
push
add
test
jb
lret
pop
fs
ljmp
cli
and
rcll
dec
push
fcoms
pop
mov
cmp
jp
add
js
xlat
repnz
in
es
push
std
decl
rcr
out
cld
sub
shr
popf
ret
testb
lods
jmp
or
or
fildll
test
std
lcall
mov
cld
decl
inc
xor
xchg
cltd
and
nop
ljmp
lahf
cmpsb
stos
xor
into
out
xchg
lret
adc
leave
jge
xchg
mov
rol
sbb
cmp
out
adc
out
pop
or
mov
fadds
add
repnz
ljmp
stos
pop
and
repnz
in
mov
mov
pop
mov
jmp
iret
fcmovnb
fwait
pop
cwtl
dec
shrl
in
mov
call
push
xor
and
adc
hlt
scas
jae
sahf
jg
jge
mov
jne
sbb
sar
stos
dec
sbb
cltd
call
orb
sahf
sub
movsb
in
scas
dec
xchg
idivb
movsb
dec
jmp
mov
mov
adc
add
sub
cwtl
fwait
inc
xor
pop
mov
mov
dec
fsubrp
movsl
mov
aam
xchg
xor
mulb
stos
sub
or
sbb
jbe
jmp
dec
sbb
mov
out
in
mov
mov
fiaddl
loope
jnp
out
ljmp
out
cmp
pusha
jb
pop
sbb
fld
xchg
or
sub
scas
shll
pop
mov
rol
adc
dec
insl
stc
add
xchg
stos
inc
das
popa
cltd
or
cmp
pushf
mov
sbb
ret
mov
out
inc
arpl
add
in
pop
lret
push
stc
ror
shlb
scas
mov
adc
mov
mov
lds
cmp
daa
mov
jnp
mov
xchg
jnp
aaa
cmp
cs
mov
cld
call
xchg
rcll
and
flds
popf
enter
xchg
stc
inc
pop
lret
inc
xor
pop
lcall
push
ret
xor
jne
dec
cmpl
test
sub
mov
lcall
sbb
sub
lret
pop
push
cmpb
sahf
jno
and
testb
xchg
xor
lea
ljmp
mov
push
bound
add
aad
jecxz
push
xchg
mov
xlat
mov
jnp
push
dec
out
dec
loope
push
enter
es
mov
and
inc
and
inc
xor
xor
call
orl
adc
sub
hlt
cmp
adc
mov
push
ljmp
ret
add
mov
or
test
inc
mov
mov
pop
mov
fwait
push
lret
pushl
sbb
lahf
sbb
mov
jae
sub
fucomp
pop
cmc
dec
xchg
xchg
add
sti
jecxz
shlb
xchg
call
pop
das
mov
dec
mov
and
mov
jl
cmp
incl
cwtl
icebp
add
cmp
ds
inc
sbb
addr16
push
incl
cli
rcrl
divb
mov
push
mov
lcall
sahf
sbbb
sti
and
nop
jb
icebp
fisttps
inc
sbb
xor
roll
mov
fs
clc
imulb
daa
pop
add
cmp
cmp
into
sub
adc
jae
dec
bound
push
out
xor
push
or
and
mov
out
sbb
or
or
cmp
out
in
and
fisttpll
lds
push
dec
or
out
pop
sub
pop
scas
inc
mov
enter
mov
jns
jo
lods
jne
cmp
loope
push
outsb
mov
jns
cmp
incl
mov
mov
sbb
lret
xchg
mov
test
fcomps
shlb
sub
add
divl
out
add
sbb
push
inc
dec
xchg
ficoml
out
add
clc
jne
clc
dec
fwait
bound
lcallw
call
cmp
repz
in
nop
ss
stc
or
xchg
jo
cmp
incl
jno
jecxz
mov
clc
mov
mull
cmpsl
icebp
call
add
in
pushl
or
bound
sbb
sub
aam
lahf
dec
loop
inc
and
movsb
xchg
lds
inc
cmp
inc
jg
mov
jg
es
fstpl
sahf
xor
sbb
push
mov
adc
inc
rcrb
lcall
inc
or
and
imull
lods
push
jnp
mov
cld
pushl
enter
addr16
xlat
cmpsl
mov
xchg
sbb
enter
dec
xchg
inc
jg
insb
dec
add
adc
mov
test
xor
cmp
cmc
incl
jo
add
ds
daa
fs
cld
fdivrl
lock
jg
jmp
sbb
and
mov
std
dec
aas
mov
aad
mov
inc
mov
aad
jb
sub
cmpsl
xchg
outsl
xor
aaa
pusha
divb
mov
stos
ret
xlat
pop
sub
addr16
fldt
or
lahf
pop
cmpsb
mov
cmp
fldl
popf
cmc
pop
out
add
rclb
dec
xor
sahf
shrb
ret
cvttps2pi
ret
lcall
add
out
dec
and
jnp
cmp
xchg
adc
call
out
cmp
das
sar
mov
jl
out
das
xchg
push
mov
jle
pop
test
hlt
imul
ret
loop
sbb
mov
dec
testl
sub
scas
scas
add
sub
pop
outsb
push
negb
dec
cmp
cld
rcrl
pop
test
push
mov
shr
and
in
push
pop
adc
mov
call
ret
scas
rcr
mov
mov
fstp
jno
dec
ret
xchg
jmp
call
loopne
push
push
inc
pop
inc
in
shl
mov
mov
iret
aad
or
pop
mov
push
ljmp
fcos
jmp
jl
xchg
dec
xor
fcomi
push
and
add
sbb
lods
adc
pusha
in
adc
push
addr16
mov
jg
xchg
iret
cmpsb
mov
mov
and
push
orl
enter
stos
sar
mov
cmp
add
rorb
sub
es
mov
push
imul
mov
inc
clc
sub
push
dec
rorb
fisttps
add
sbb
jecxz
cwtl
fstps
mov
decl
pushf
push
pop
add
mov
jmp
or
out
cli
add
and
lods
movsb
movsl
addl
dec
sti
test
inc
dec
lret
jg
popa
sbb
sarl
leave
ljmp
lcall
push
dec
add
jmp
ds
call
in
and
sbb
cs
sub
call
jnp
mov
sbb
mov
cld
call
in
hlt
push
sub
addr16
dec
inc
jg
cmp
shll
dec
test
lcall
pop
adc
js
or
fwait
cmpsl
pop
mov
push
push
mov
loopne
loop
sbb
push
fcoms
je
or
sbb
fisubrs
adc
incl
cld
or
cmp
sbb
call
lods
dec
loopne
mov
adc
mov
popa
call
adc
into
ja
bound
ljmp
sub
fidivs
enter
xchg
leave
pop
lds
mov
dec
adc
adcb
lea
je
mov
iret
data16
jmp
sahf
test
adc
loop
inc
cmp
testl
scas
push
pop
test
cmp
cli
aas
std
ds
fnstsw
pushl
add
jl
adc
ja
clc
and
andl
notb
pushl
or
rcrl
test
xchg
xchg
mov
insl
push
mov
mov
das
sti
test
lcall
fnstsw
fistl
ss
out
jns
push
dec
sbb
mul
jae
inc
hlt
sbb
pop
out
loopne
or
inc
pop
mov
fistl
jmp
dec
inc
add
sbb
rclb
xor
icebp
jmp
xchg
fiadds
adcb
in
sub
jno
xlat
mov
xchg
bound
das
rcrb
movaps
loopne
into
out
stc
mov
mov
leave
ds
mov
xor
adc
test
lcall
and
xchg
mov
fcom
lahf
outsb
cmp
inc
xchg
into
adc
jmp
mov
jmp
ffreep
shll
into
sub
dec
inc
js
js
xor
in
dec
xor
jae
stos
jno
mov
pop
scas
mov
repnz
pusha
and
lret
mov
jno
cld
push
repz
mov
cld
fmuls
fdivr
test
xor
cmpsl
sub
push
push
mov
mov
cs
rorl
test
scas
je
inc
adc
out
push
mov
pop
ljmp
rcrl
in
mov
int3
add
mov
or
aas
fldcw
cld
test
mull
lcall
mov
stos
add
int3
xchg
inc
popa
subl
cmpsb
icebp
fmuls
dec
or
pushl
divb
mov
pushl
sub
data16
mov
xchg
add
push
jmp
movsl
fcomi
cmpsb
sahf
sub
fwait
cs
push
dec
pop
mov
loopne
sub
in
jg
aam
or
fnstsw
into
mov
adcb
mov
or
cli
ljmp
fmul
aas
scas
xchg
test
orl
fmulp
xchg
xor
jmp
inc
sti
adc
test
idiv
dec
jmp
aas
fisttpll
sbb
call
add
pop
fwait
divb
mov
mov
loopne
inc
aaa
insl
fcmovbe
ret
cmp
pop
shlb
add
or
jle
lcall
mov
in
fsubrs
adc
cmp
orb
mov
repnz
cmp
ja
sbb
and
mov
xchg
add
rolb
add
decl
cmp
jp
jb
dec
movsl
jns
shll
test
mov
aad
mov
insb
lcall
addl
pop
aad
cmpsl
out
pop
loope
xor
pushl
and
ret
loop
js
ror
jno
cmp
and
jo
pop
sbb
xchg
jns
incl
out
movsb
cmpsl
adc
test
push
xor
test
xchg
loopne
nop
pop
add
add
out
pop
sub
call
data16
sbb
rolb
jp
sub
and
adc
out
add
push
movb
xchg
xor
insb
mov
into
dec
xor
mov
orl
mov
mov
jbe
nop
and
fidivs
jg
cwtl
lock
adc
stos
pop
loopne
ds
les
push
push
mull
and
rclb
cli
jo
lcall
lods
cmp
sbb
dec
mov
inc
pop
enter
mov
sbb
cmp
ret
xor
jo
push
cmc
fiaddl
hlt
mov
or
push
filds
mov
mov
adc
jns
sub
dec
jge
mov
incl
notb
xchg
fdivs
xor
push
or
xchg
xlat
jb
add
popa
mov
xor
jecxz
push
cmpb
xchg
into
or
scas
bound
lcall
mov
adc
xor
cmp
fdivl
fsubrs
jb
cli
dec
lods
push
cmp
lcall
ret
dec
adc
inc
adcl
xchg
mov
mov
adc
push
ret
enter
sbb
iret
pop
mov
jo
ljmp
sub
mov
push
lcall
push
pop
fdivrs
xchg
int3
int3
or
clc
inc
xchg
cld
stc
loope
dec
scas
add
xor
sbb
lcall
mov
push
cmp
enter
jo
fdivr
xor
fidivs
mov
lcall
sbb
pop
stos
sub
subb
sbb
cli
lcall
pop
lahf
and
icebp
ret
adc
and
aam
test
xor
mov
ret
adc
sbb
and
xor
rcll
jg
outsl
rolb
clc
pop
mov
stos
ds
push
xchg
outsb
inc
dec
pop
clc
ss
ljmp
xchg
ret
js
or
adc
cltd
jecxz
mov
iret
mov
or
mov
call
in
xor
popf
sub
je
dec
out
int
cli
js
ror
push
hlt
fadds
jo
pop
inc
cld
rcrb
mov
in
je
fwait
push
mov
in
jnp
sub
inc
mov
sub
call
js
sbb
movsl
lcall
dec
lock
notb
lock
fstpt
call
lock
add
sub
push
les
and
stos
jg
dec
call
lods
pop
stos
ja
xor
in
push
xchg
adc
pushl
push
jp,pt
cmp
cmc
xor
sub
jmp
and
mov
jl
jg
inc
dec
rorb
pop
aam
pushf
inc
call
adc
out
dec
sbb
mov
xor
xchg
int3
dec
lahf
push
sub
decb
dec
lcall
cmpb
and
iret
outsl
cmpsb
and
in
insb
and
rcll
jo
pop
mov
jg
dec
cmp
outsl
xor
sub
ljmp
dec
jge
adc
inc
lfs
pop
inc
jo
cli
cmp
mov
xchg
fs
fldenv
push
mov
repnz
pushl
inc
aad
pop
mov
loop
sahf
fisubrl
out
int
cmp
jo
fs
aam
add
and
push
pop
decl
xchg
je
inc
sbb
dec
or
sub
pushf
push
repz
pop
jae
jge
decl
pushf
and
mov
push
loop
inc
fwait
ja
or
cmc
sbb
dec
xor
dec
inc
and
fistl
mov
mov
cld
mov
addb
incl
aas
loope
ja
loopne
int3
insb
xchg
sbb
mov
sbb
dec
sbb
ret
dec
sbb
in
mov
adc
mov
ljmp
mov
push
pop
stos
xor
jge
or
in
test
rorb
std
ss
push
add
negb
cmp
pop
pop
scas
scas
orb
dec
cmp
jne
loopne
jmp
mov
repz
les
adc
cwtl
psadbw
movsl
es
lcall
sub
and
test
and
icebp
jmp
dec
in
std
stos
or
punpckhdq
orb
imull
loopne
call
fs
dec
mov
stos
call
ljmp
mov
sub
test
push
leave
mov
clc
or
xchg
pushl
jecxz
lds
sub
and
sarl
pushf
inc
fcoms
cs
fwait
adc
cmpb
inc
aas
push
push
stos
into
orb
lcall
mov
sub
mov
ds
mov
daa
or
push
add
pop
mov
add
incb
and
pop
test
cmpsb
add
adc
jmp
clc
jmp
imulb
enter
pusha
sbb
dec
test
out
add
jbe
mov
shll
repnz
loope
fldenv
ret
pop
sbb
stc
lcall
or
aas
pop
pusha
add
add
dec
dec
popl
sub
cmp
call
cmp
inc
cmp
enter
mov
pop
mov
ljmp
fstl
jmp
or
xorb
gs
incl
jbe
mov
mov
xchg
popa
fistpl
mov
xchg
lock
cmp
mov
out
inc
sub
or
js
vminps
mov
dec
popf
push
insl
in
cmp
xchg
or
outsl
lret
call
mov
sbb
cmpsb
ds
inc
dec
mov
mov
cli
cld
aam
arpl
pushl
and
cmp
jne
mov
jne
lods
sbb
lods
xor
dec
lds
xchg
es
mov
xchg
mov
mov
addr16
pop
jecxz
incl
stos
out
mov
mov
addb
fistl
or
lock
cmp
mov
cld
or
inc
or
lret
inc
dec
mov
pushl
lcall
mov
outsl
push
insb
and
xchg
lods
fnstenv
mov
pushl
shlb
jno
mov
mov
jle
sbb
pushf
outsl
adc
int3
and
adc
pushl
in
lret
xor
in
mov
test
aad
xchg
sub
sbb
call
mov
lock
data16
das
movsb
xchg
and
into
in
lock
jno
ljmp
jmp
mov
insb
iret
or
jp
fdivr
enter
ds
and
xchg
call
and
sti
pop
mov
pop
jg
popa
jns
xor
mov
lret
jp
jnp
and
inc
inc
adc
mov
lret
pushf
pop
sti
into
jo
pop
jns
in
jo
or
ljmp
insl
inc
mov
xor
push
clc
jbe
adc
lds
inc
or
mov
or
data16
imul
xor
jg
mov
jbe
bound
dec
or
ja
cmp
mov
dec
nop
ljmp
idiv
sbb
popf
jp
gs
sub
hlt
mov
mov
and
test
mov
incl
cld
and
outsb
push
lret
mov
lds
jp
pop
jbe
fsts
dec
sub
add
rcrb
pop
xor
jg
add
push
cld
cmp
repz
cmpl
pop
pop
sub
lcall
jns
pop
jno
jg
das
lret
test
popa
add
xchg
dec
push
and
push
cmp
add
decl
aaa
scas
dec
adc
dec
dec
sub
inc
sbb
loope
mov
stos
movsl
pop
push
divb
inc
dec
xorb
pop
xchg
push
push
or
stos
pusha
jl
aam
idiv
daa
scas
pop
js
xchg
cmp
movsb
add
lods
push
pop
and
xchg
out
or
mov
mov
in
pop
jno
popa
xchg
xchg
daa
sbbb
fsubrl
mov
cmp
lcall
sub
mov
clc
xchg
lock
testb
incl
pop
sahf
jnp
pushf
adc
pop
cmp
push
fldcw
xchg
cli
js
push
mov
cld
inc
nop
decl
sbb
xchg
fs
out
inc
aam
add
cmp
jmp
cmpsl
imulb
decl
int
out
xlat
xchg
xor
fisubrs
fwait
decl
imul
das
clc
out
dec
inc
and
sub
gs
mov
fsubl
pop
stos
imul
dec
jns
decl
shlb
push
loope
jae
aaa
lods
hlt
dec
icebp
mov
mov
sbb
ljmp
xor
int3
movsl
outsb
mov
fwait
scas
mov
sub
test
stos
cmp
xor
xchg
or
mov
cwtl
mov
dec
mov
test
or
jns
jne
jmp
ret
mov
in
ret
cltd
shr
in
adc
std
sbb
mov
nop
and
hlt
dec
or
cmpsb
xor
mov
leave
fs
mov
jbe
mov
lahf
int
pop
mov
push
cwtl
mov
cld
inc
fnstcw
jo
out
sub
les
adc
fcomip
pop
int3
scas
pop
mov
idiv
fucomip
dec
dec
fwait
xlat
mov
sub
jno
icebp
xchg
dec
cmp
lcall
push
mov
xchg
pop
out
stos
mov
jns
mov
push
mov
jo
xorl
incl
cli
adc
notb
pop
int3
sbb
sarl
clc
and
jbe
sub
decl
outsb
shll
dec
mov
fimuls
pop
dec
loopne
movsb
enter
push
mov
jmp
mov
pop
fmull
outsl
push
mov
mov
stc
int3
lods
icebp
repz
push
fisubrs
or
sahf
decl
clc
add
aas
daa
repz
fs
fwait
xchg
mov
mov
repz
insl
inc
push
add
push
popa
dec
mov
in
xchg
in
jle
push
clc
pushl
mov
mov
cld
int
push
sub
aam
ljmp
push
movsb
jmp
lret
mov
pop
data16
jmp
or
inc
cs
push
xchg
mov
test
push
mov
and
int3
xchg
sbb
or
cmp
ljmp
xor
incl
xor
fsubr
std
sub
push
fwait
out
push
cwtl
inc
popf
mov
pop
test
int
dec
nop
icebp
mov
push
jmp
inc
inc
pop
imul
pop
xchg
cwtl
pop
fisubl
decb
roll
mov
andb
incl
lea
std
daa
es
rcrl
mov
loopne
js
lret
xor
sbb
pop
or
and
inc
push
decl
inc
out
mov
cld
or
mov
jecxz
jne
in
mov
loope
cmpsl
leave
push
sahf
je
test
addr16
mov
mov
mov
dec
sub
stc
shll
leave
out
pop
and
mov
inc
push
mov
icebp
aaa
xchg
sbb
xchg
sbb
lds
mov
popa
rorl
and
in
ret
shll
dec
push
sbb
push
cmpsb
pop
lcall
aaa
or
roll
inc
mov
mov
addr16
adc
mov
std
enter
lock
int3
into
adc
cmp
pop
pop
lock
insl
ljmp
add
jg
dec
std
adc
sbb
imul
dec
call
jo
shlb
mov
dec
add
insb
push
mov
daa
push
fs
clc
push
xchg
ljmp
sbb
cmpsb
icebp
cmp
in
mov
adc
adcl
pop
or
pushf
gs
std
nop
into
push
adc
add
je
xchg
mov
mov
pop
rcrb
jl
es
popf
pop
or
outsb
xchg
repz
out
sub
fs
loopne
or
push
or
mov
lcall
into
jecxz
inc
jp
mov
adcl
je
pop
mov
lcall
aas
pop
inc
leave
jmp
scas
add
sbb
ret
add
inc
test
cmp
xorb
testb
aaa
add
cmp
pop
and
or
loopne
mov
push
push
icebp
ljmp
sbb
or
xlat
sub
xor
adc
mov
xlat
aaa
ffreep
push
pop
dec
dec
pop
sti
in
sbb
lret
mov
mov
repnz
popf
jns
pushl
std
lcall
movsl
jno
dec
dec
and
mov
xchg
movsl
fldenv
stc
cmp
incb
inc
int
dec
push
lcall
decl
ja
cltd
mov
pop
adc
xchg
leave
stc
rorl
cmp
add
inc
mov
je
mov
pop
push
add
sbb
cld
xchg
xchg
loop
jae
mov
enter
dec
jns
pop
subb
push
fldt
push
add
sub
das
out
jo
mov
mov
fcmovnu
imulb
xchg
cld
push
cmp
inc
loopne
push
adc
mov
out
cmc
add
xlat
popf
pop
xchg
xorb
pop
outsb
jb
or
jnp
dec
movsb
rolb
pop
lods
in
fidivl
sub
cmp
lock
cwtl
xchg
es
scas
inc
mov
mov
popf
jl
push
pushl
in
in
call
js
mov
test
jns
lea
xchg
jns,pt
inc
mov
call
add
and
cmovns
loop
jle
pop
and
or
mov
inc
add
jecxz
and
les
pop
orb
mov
lock
ljmp
push
sub
pushf
jl
sub
cld
cld
and
ljmp
icebp
out
jmp
test
mov
cmc
jecxz
dec
sbb
sub
inc
pop
pop
jns
rcrb
sub
test
mov
fisubrs
shr
int3
mov
cmc
jae
in
cmp
fwait
push
xlat
out
jne
imul
in
lret
fsubs
push
jne
xor
adc
iret
fstps
scas
jbe
or
cltd
or
jae
fwait
add
sbb
call
mov
mov
icebp
sti
lods
test
pushf
cmp
pop
aas
inc
adc
clc
or
imul
test
adc
dec
xlat
subl
dec
lods
xchg
ror
mov
mov
push
jae
cli
aam
dec
mov
cmp
adc
jmp
pop
movsl
or
push
add
pop
add
dec
inc
lcall
ret
jae
cli
push
push
fwait
jmp
inc
cmp
pop
fists
fcmovb
dec
addr16
pop
jo
pop
mov
jg
hlt
mov
xor
cmpsb
out
nop
xchg
lods
pop
loope
mov
stos
mov
pushl
notl
loopne
and
fwait
test
leave
fidivl
cmp
fisttps
andl
or
pop
lahf
js
sub
in
jmp
push
arpl
scas
loop
mov
jne
xchg
enter
sarl
cmc
cld
fidivl
sbb
push
clc
pushl
dec
testb
xor
leave
inc
cltd
mov
pop
loop
imul
ljmp
aam
mov
lods
or
and
push
std
decl
dec
xchg
test
push
dec
sar
jne
test
mov
xor
push
stos
jg
mov
hlt
ljmp
fdivrp
testl
or
lods
xchg
pop
arpl
sbb
popf
test
sbb
cmp
xor
outsb
xchg
push
call
std
pushl
cld
or
movsl
std
test
mov
xlat
shlb
mov
xor
pop
cld
ljmp
bound
ljmp
gs
lahf
rclb
mov
fwait
sub
dec
jb
inc
fdivr
and
mov
call
mov
jmp
mov
loop
add
xchg
shl
sbb
iret
fdivl
in
insl
inc
cli
cmp
ficomps
add
ret
sub
ss
mov
inc
outsl
shl
and
xor
dec
inc
rcrb
mov
mov
and
fbld
adc
cmp
mov
iret
cmp
clc
ret
jle
jge
mov
lcall
call
sub
cmp
push
imul
jnp
or
cmpsl
mov
pushl
push
outsl
es
push
cmp
stos
das
arpl
lcall
add
xor
xchg
push
cld
xor
sbb
sub
mov
nop
cli
pop
lret
mov
daa
or
cmp
or
pop
cmp
ds
data16
mov
std
in
lea
xchg
mov
jo
mov
test
sub
mov
pop
push
jmp
adc
pop
aad
jecxz
jmp
cwtl
loopne
xlat
dec
test
clc
cwtl
xchg
cmp
cmp
push
jmp
inc
ret
decl
add
ds
and
add
xor
shlb
pushl
jmp
mov
ds
push
mov
lahf
dec
cmp
ds
andl
cvtps2pi
sbb
cmpsb
xchg
xchg
push
xchg
xchg
ds
inc
inc
or
lcall
out
insb
xorb
cmp
pop
data16
sti
mov
arpl
add
jmp
cmpsb
aam
pop
cmp
mov
cmp
sub
mov
pushf
pop
stc
mov
cmp
adc
or
push
cmp
aaa
xor
clc
push
data16
scas
add
imul
pop
imul
mov
xchg
shll
add
rcrb
mov
incl
mov
sub
jp
or
mov
add
mov
xchg
imul
inc
insb
mov
lahf
rorb
push
je
incl
rorb
aam
out
jl
dec
or
sub
or
aam
mov
mov
dec
xchg
add
mov
xchg
jb
jae
arpl
mov
jb
mov
ficompl
sti
stos
insl
insb
addl
inc
cld
mov
mov
int
fsubrs
test
xchg
inc
and
xchg
sar
decl
cs
push
mov
cmpsb
mov
inc
add
dec
cmp
lods
je
fcomps
fs
loope
aad
add
jg
push
or
dec
cs
test
pop
mov
decl
xchg
push
pop
pop
loope
jae
andb
add
pushl
adc
push
jnp
pop
sub
add
fcoms
xchg
pop
ljmp
repz
add
call
jbe
bound
rol
int
ud0
jmp
fsubl
xor
xor
mov
insl
and
and
xchg
iret
dec
or
and
jb
jmp
sbb
mov
adc
pop
lock
fisubs
jne
inc
inc
mov
or
arpl
popa
aam
sbb
dec
xchg
std
adc
jg
aaa
hlt
dec
or
stc
push
mov
xchg
adc
incl
adcl
incl
icebp
and
dec
and
leave
lock
pop
xchg
loope
int3
std
hlt
pop
mov
pop
std
pop
xchg
out
add
decl
mov
std
sub
sbbb
divb
subl
jae
cmp
lea
lcall
pop
sbb
lret
imull
scas
iret
negl
and
cmp
cmp
add
and
add
in
sbb
call
and
xchg
push
and
ljmp
fwait
adc
inc
popf
lea
push
outsb
sbb
jmp
clc
mov
push
mov
xor
adc
mov
mov
jo
sar
pushl
push
aad
aam
fstl
jle
inc
fisttps
std
jns
sub
hlt
shll
jg
push
mov
and
mov
cli
xor
cmp
incl
or
jle
in
mov
and
jg
mov
pushf
scas
inc
and
rcl
int
adc
ljmp
and
in
test
insl
jg
jo
out
xor
stc
leave
int3
xor
enter
ja
pslld
fisttps
pop
jmp
mov
int
into
rol
dec
arpl
imul
pusha
inc
mov
lahf
sub
sbb
push
adc
jne
add
push
popf
mov
mov
or
sub
xchg
cmp
cmp
outsb
jbe
mov
mov
out
cli
mov
adc
lds
jmp
add
push
ds
add
lock
cmp
jg
xor
kmovw
dec
outsb
jp
fdivrl
and
cmp
sbb
lcall
gs
fstpt
pop
test
mov
mov
push
and
inc
mov
out
test
ds
inc
incl
pop
add
lcall
imull
fdivs
les
jmp
loop
adc
cmp
ljmp
fcoml
out
popf
cmp
xchg
xlat
sbb
arpl
loopne
dec
in
pushf
push
pop
xchg
into
cli
pop
inc
adc
cmp
push
xchg
xchg
and
dec
push
lock
mov
fldt
cmp
sub
and
arpl
popa
pop
hlt
mov
add
dec
dec
gs
idiv
lcall
mov
in
pop
mov
add
dec
test
mov
pop
mov
clc
add
cld
enter
dec
cltd
jl
vandps
decl
and
or
xchg
cmp
pop
cwtl
pushf
punpckhwd
inc
cld
pushl
dec
cmc
mov
mov
mov
popf
repnz
aaa
cld
push
jge
mov
push
sbb
popf
imul
call
jle
dec
sbb
pop
mov
fdivs
imul
add
dec
and
mov
mov
insb
xchg
xor
je
jle
sar
nop
ljmp
jmp
outsl
dec
inc
lock
out
lcall
mov
mov
xchg
filds
lds
pushf
or
push
adc
out
fwait
pop
xchg
jecxz
mov
arpl
fstl
adcb
add
sbb
jg
add
clc
cltd
dec
out
add
mov
xor
pop
test
shlb
nop
pop
xor
add
dec
sahf
test
adc
mov
push
mov
pop
mov
bound
jl
loop
iret
push
lods
dec
popa
jg
fildl
inc
ret
xor
je
adc
jg
adc
mov
push
mov
push
divb
fsts
clc
movsb
or
or
call
jle
lock
bt
loopne
or
repnz
sti
outsl
mov
pop
stos
ret
jecxz
cmp
xor
push
fstp
addr16
test
lahf
mov
adc
mov
mov
or
xchg
jnp
push
xrelease
cs
sub
mov
pop
inc
ja
xor
mov
cmp
es
pop
jno
shlb
std
incl
pushf
popf
imul
sbb
shl
mov
lods
push
pop
ljmp
sar
fcomps
lret
loopne
sub
pop
popf
in
sub
and
cli
ljmp
fucomip
push
es
out
dec
mov
clc
cli
adc
scas
push
decl
push
mov
mov
xchg
scas
loopne
test
inc
sbb
inc
dec
fs
adc
cmovns
adc
add
mov
into
mov
sahf
fwait
ljmp
dec
insl
push
loope
mov
iret
and
mov
adcl
adc
incl
imul
rorb
lds
pop
mov
inc
push
jbe
call
iret
leave
and
inc
gs
cld
jle
inc
stos
sub
fisttpl
push
cmc
mov
push
insl
fmuls
pop
hlt
mov
pop
mov
test
adc
cmpsl
roll
jns
jl
add
movsl
xlat
pop
enter
mov
mov
jno
test
ljmp
in
xor
jg
mov
gs
push
movsl
aas
add
out
inc
jns
mov
fbstp
add
loopne
xor
add
sbb
pop
or
adc
loop
cwtl
xchg
or
cmp
or
out
xchg
mov
jmp
mov
push
aaa
xor
in
push
push
mov
in
cmp
jecxz
sub
arpl
pop
mov
lcall
je
mov
sahf
and
push
inc
pop
jmp
insl
hlt
lea
mov
push
cmpsb
dec
ret
aam
movsb
test
int3
mov
mov
add
cld
incl
mov
add
mov
fimull
adc
sahf
jg
mov
dec
jmp
cmp
cmp
push
sub
sbb
mov
jne
and
or
call
jle
jge
mov
push
push
xor
pop
lods
adcl
jbe
movsb
test
fstps
lock
jb
pop
cmpsl
sub
cltd
fisubl
mov
adc
ja
jg
jmp
data16
and
and
in
pop
cmp
cld
pushl
movsl
jno
push
call
dec
and
cs
clc
lahf
icebp
adc
add
lcall
and
inc
fwait
int3
ja
aad
and
adc
jmp
lds
lret
ja
mov
push
ret
sub
stos
push
xchg
jno
or
add
sbb
jmp
sub
out
pop
jg
dec
pop
mov
je
outsl
jae
cmp
in
jmp
push
fcomip
es
sbb
mov
mov
adc
xor
sub
pushl
mov
mov
icebp
mov
js
add
lods
outsb
push
mov
xchg
pushf
mov
frstor
push
incb
ds
stos
sbb
xchg
aaa
inc
in
shrl
movsb
jp
sub
lret
push
dec
sub
incl
ljmp
lds
sub
lcall
out
sub
xor
and
dec
insl
sbb
add
and
hlt
lcall
jae
fisttps
push
stos
jmp
aad
mov
adc
stc
push
cmp
lea
cli
inc
out
ret
shll
imul
mov
push
mov
call
inc
adc
incb
cmc
and
clc
decl
pop
out
or
lcall
pop
cmp
in
js
jo
cmp
jmp
mov
fidivs
fdivrs
daa
pop
cmp
nop
repnz
sbb
in
mov
jmp
leave
push
push
push
and
push
insl
jne
hlt
iret
mov
call
fisubl
ss
add
add
mov
jno
ror
add
rcr
mov
fisttps
add
sbb
repz
sbb
fists
xor
mov
dec
ljmp
sarl
jne
test
call
rclb
add
cmpsb
or
xchg
xor
call
je
pop
mov
mov
pop
cmp
dec
cld
ljmp
sbb
cmpb
mov
pusha
mov
out
inc
aad
and
cmp
jg
inc
movb
lods
sbb
arpl
mov
pop
xlat
jo
mov
cmpsl
jns
dec
adc
gs
das
pop
fcompl
mov
push
leave
in
call
lock
xor
push
jno
aam
inc
lcall
lahf
mov
and
dec
adc
enter
cmp
lcall
jle
ret
push
test
add
insl
pushf
stos
push
ror
mov
push
aad
xlat
pop
test
sbb
ja
lcall
jg
mov
jecxz
in
cmc
sub
adc
mov
inc
cli
mov
pop
outsl
jo
fmuls
sbb
push
mov
push
cmp
mov
out
push
aas
data16
div
jg
mov
out
mov
xor
add
movsl
imul
ja
incl
xchg
in
cmpsl
dec
lods
addr16
iret
sbb
sahf
jge
sub
push
or
lock
pushl
popf
and
push
add
adc
hlt
add
sbb
arpl
pop
add
das
cld
mov
incl
icebp
clc
xchg
lods
mov
push
jb
push
fldcw
pop
icebp
ss
pop
lods
jg
movsb
push
cmp
xchg
mov
adc
jmp
lock
xor
cmc
push
pop
scas
jns
out
cmp
movsb
mov
lahf
loop
lcall
loop
fimuls
call
test
sub
push
imul
sub
push
lock
or
clc
cmp
pushl
incl
lods
int
push
sub
rclb
and
xchg
shrb
jmp
mov
out
mov
arpl
into
xor
mov
sub
lret
in
dec
fdivs
imul
mov
js
aas
mov
jmp
cli
test
jle
scas
call
clc
jle
pop
iret
pushf
mov
icebp
cmp
push
nop
mov
mov
orb
add
jns
dec
dec
iret
jnp
mov
gs
decl
test
add
sbb
ret
inc
cmp
leave
jmp
lock
add
push
int
scas
or
inc
insl
lods
shlb
fstpl
jbe
mov
or
insl
scas
xchg
mov
lds
out
jmp
lcall
push
dec
scas
mov
arpl
sub
pop
xor
ds
adc
add
ficoml
jmp
data16
jne
add
cs
lds
pop
repnz
aas
insb
in
fldt
mov
insl
negb
inc
stc
in
push
mov
ljmp
sub
repz
fucomp
xchg
pop
adc
in
test
fcomip
ljmp
jns
adc
in
xorl
outsb
out
icebp
into
jmp
add
cmp
cmpsb
or
shll
lods
sbb
icebp
into
aam
mov
cmp
clc
inc
sub
jne
test
inc
push
ss
insl
rcrb
dec
cwtl
cmp
call
mulb
jne
iret
push
cmp
pop
jbe
je
sti
xchg
mov
shlb
fcompl
pushl
faddp
outsl
xor
or
and
cmp
mov
leave
xor
leave
mov
push
cmpsl
add
fcmovu
adc
jg
inc
cmp
scas
clc
dec
mov
fdivs
mov
dec
int3
dec
es
pop
or
mov
rclb
das
cwtl
je
cmp
or
movsl
pop
cmc
and
push
adc
iret
dec
and
pop
xor
cltd
push
mov
outsl
jg
cmp
mov
mov
mov
push
lret
cmpsl
and
fmull
mov
mov
inc
push
inc
aas
daa
insl
aam
pushl
out
xor
mov
inc
pop
and
mov
mov
and
std
lcall
inc
jl
pop
mov
popa
xlat
push
mov
arpl
or
push
loopne
mov
std
loope
sub
fcomip
jmp
in
les
mov
pop
sub
sub
dec
mov
out
aas
jmp
clc
adc
and
mov
std
mov
add
cmpsb
mov
sub
psrld
call
adc
pushl
fwait
and
rcr
add
jge
jg
daa
icebp
sti
popa
and
mov
out
nop
jo
lock
decl
mov
sbb
int
jae
into
repnz
into
sbb
in
sti
iret
fsincos
inc
jnp
mov
xchg
pop
ret
stos
out
out
es
xchg
notb
out
xchg
in
mov
icebp
mov
icebp
xor
ficoms
neg
pop
icebp
lods
loop
xor
mov
adc
inc
push
in
sub
push
adc
and
sahf
lcall
jl
sbb
jg
or
push
lcall
test
and
nop
add
in
xchg
test
hlt
sbb
xor
jmp
lcall
ds
rol
xchg
data16
inc
imul
bound
out
repz
xchg
int3
js
xor
jo
std
popf
stc
ret
mov
ljmp
xchg
mov
xchg
repnz
dec
push
xor
shlb
mov
add
andl
xlat
jnp
jecxz
sar
pushl
mov
call
out
out
les
movsl
jbe
dec
push
and
movsb
dec
mov
in
test
jecxz
mov
or
sbb
sub
lcall
or
ret
sub
fidivrs
leave
std
aad
cmpsb
sarl
xchg
mov
or
lcall
mov
cmp
notl
iret
repz
out
pop
adc
ret
mov
decl
adc
pop
jg
in
stos
test
pop
push
stos
es
sarb
cmp
int
icebp
call
pop
mov
push
nop
push
mov
mov
mov
mov
test
xor
mov
lds
shrl
lahf
pop
pop
imul
mov
jno
cltd
mov
sbb
stc
and
cld
aad
and
push
cltd
scas
rolb
cld
sti
scas
sub
fucomp
int3
and
add
push
out
mov
jns
shll
decl
cmp
rol
dec
jbe
mov
pop
imul
push
mov
test
pop
pop
push
scas
mov
xchg
mov
icebp
fcmovbe
mov
push
mov
fnsave
pop
push
pop
and
lock
inc
pop
ret
clc
push
icebp
outsl
cmp
mov
inc
xor
push
lret
or
js
adc
lret
ret
mov
xor
pop
jp
aam
cmp
dec
cmp
decl
fwait
pop
sbb
mull
in
xchg
inc
int3
ret
daa
or
cmpsl
push
adc
lcall
push
lret
cmp
add
ds
adc
aam
jmp
push
pop
xchg
repz
fs
sbb
xchg
out
jbe
push
adc
out
adc
push
sti
scas
fidivrl
sar
lcall
jge
out
out
push
and
daa
push
into
into
les
fldcw
push
decl
cli
jno
lret
gs
push
rcll
out
xchg
mov
push
mov
data16
sbb
lcall
mov
fsub
iret
stos
out
push
je
es
test
addb
jg
mov
test
adc
jle
repnz
cmc
cltd
push
data16
dec
cld
lcall
and
lds
inc
xor
or
mov
jg
push
xchg
pop
test
fdivrs
out
mov
adcb
jg
decl
and
inc
popf
or
loopne
loopne
int3
pop
jns
mov
mov
cld
jmp
outsb
stos
daa
sub
push
add
push
jg
imul
mov
shrl
mov
inc
xchg
add
das
aas
lret
mov
incl
mov
lds
xor
sub
xchg
shll
inc
push
sub
daa
inc
cltd
aas
jne
clc
decl
sbb
cld
cmpsb
mov
cli
push
sub
sbb
pop
leave
dec
push
push
ja
ret
mov
cmp
sar
dec
push
adc
pop
jae,pn
stos
leave
push
dec
sbb
sub
xlat
fidivrl
aad
fwait
or
adc
les
sbbl
ror
mov
incl
cmpsl
fnsave
std
inc
xchg
pushf
cmp
out
mov
call
or
push
pop
cmp
or
adc
int
xchg
clc
mov
push
call
fwait
pushl
pop
cli
lret
lahf
repz
or
mov
test
loope
lret
jl
cli
insb
xlat
or
and
mov
ja
sar
std
vcomiss
jno
popa
xchg
sub
aaa
mov
aad
lods
fcomp
jg
imull
addps
dec
jmp
xor
dec
arpl
mov
jmp
xchg
popf
or
push
cltd
enter
in
push
gs
push
pushl
icebp
rsm
fwait
lret
testl
mov
mov
push
cmpsb
add
cli
ljmp
addr16
mov
push
insl
add
aad
subl
xchg
xchg
and
adc
call
cmp
jne
dec
fiaddl
inc
sti
lcall
or
in
xlat
and
or
insl
lods
mov
in
lea
adc
sbb
sarl
incl
out
inc
and
in
aas
cmp
imul
ds
and
ret
jns
out
dec
mov
in
and
jns
mov
inc
jo
xchg
xor
dec
sub
add
call
repz
push
fwait
sub
mov
jne
aam
pusha
cmpsb
cmp
fadd
incl
lods
in
cld
in
popf
jns
roll
adc
popa
push
fisubrs
adc
ljmp
cs
dec
mov
mov
mov
fistps
mov
cmpsb
xchg
inc
repz
divl
jb
rcl
out
scas
and
jp
lds
cltd
jno
jnp
mov
mov
jge
sbb
cvtps2pd
or
das
adc
fldl
jg
xorl
xchg
or
push
out
or
notl
jg
inc
faddl
jmp
pop
jge
ss
xor
jnp
sbb
pop
mov
pop
adc
bnd
test
popa
scas
lea
xchg
leave
daa
movsb
pop
push
push
outsl
push
mov
cmp
mov
fildll
push
pop
sbbl
xor
or
or
jl
insb
mov
movsb
test
mov
inc
mov
sarl
sub
fbstp
jecxz
scas
adc
sbb
sbb
ss
and
dec
mov
inc
cli
or
divl
push
popf
mov
mov
xchg
mov
std
fadds
fstps
bound
decl
mov
sbb
dec
inc
push
jnp
movsb
fdivrp
ljmp
cli
jno
ljmp
cmp
mov
fs
mov
loop
xchg
adcb
cmove
inc
inc
loopne
fs
or
stc
mov
incl
dec
daa
sub
ss
cld
dec
lret
imul
push
sbb
ret
movsl
and
scas
in
dec
sbb
mov
inc
sbb
ljmp
xchg
mov
jmp
inc
inc
mov
pushl
push
lret
sarb
and
jo
loopne
pop
clc
xchg
mov
add
mov
out
cli
cmp
cmp
loop
cltd
sbb
lods
int
cmp
retw
jne
cmp
mov
jp
test
sbb
xor
mov
dec
in
ljmp
mov
out
xor
test
rcrl
in
dec
xorb
fwait
repz
in
out
loop
ret
inc
movsb
lds
inc
mov
nop
push
dec
movsl
js
rol
ljmp
mov
mov
push
mull
push
pushl
dec
mov
fdivr
imul
sbb
mov
pop
lahf
mov
or
ficoml
call
call
xor
sub
aas
and
cmp
mov
stc
outsb
das
fprem
in
xor
cmp
sub
call
popf
inc
push
jle
movsb
insl
ret
mov
xlat
inc
adc
ja
in
mov
rolb
decl
out
stos
pop
push
shl
add
andb
dec
mov
fldt
fildll
testb
mov
jl
push
sbb
loope
addr16
sbb
ret
loope
ljmp
lds
xor
and
pushf
dec
mov
stos
and
decl
lods
xchg
fsubrl
mov
lods
push
js
loope
cli
adc
outsb
lods
pop
xor
into
mov
lcall
sbb
dec
dec
sub
adc
ja
lods
or
lock
xchg
adc
adc
push
and
or
sub
xchg
inc
cwtl
xlat
in
lahf
inc
leave
and
cmpsb
ja
push
call
clc
popaw
xor
out
xchg
sub
clc
lods
std
jg
add
lcall
sub
mov
adc
in
test
add
or
pushf
add
mov
xor
jmp
dec
or
insb
out
pusha
adc
sub
push
or
scas
dec
xchg
xchg
insb
push
pushl
dec
inc
xchg
mov
andl
rcrb
aaa
test
incl
push
adc
negl
sub
mov
popf
sbbb
pop
and
clc
mov
push
and
clc
adc
repnz
das
or
testb
test
jmp
xor
ja
and
test
cmp
mov
jle
aam
dec
push
xor
push
fisttpl
pushf
jmp
inc
jmp
mov
mov
lock
icebp
pop
imulb
cs
mov
and
loop
or
popa
dec
dec
dec
jp
insb
push
call
mov
jle
sbb
add
mov
pop
mov
lret
xchg
ds
movsl
mov
adc
mov
jg
jns
fs
stos
mov
and
pop
mov
adc
ljmp
movsb
mov
add
and
addr16
repnz
insl
clc
cmp
push
repnz
cmp
or
inc
mov
mov
fdivrs
jg
incl
xchg
adc
push
add
int3
inc
jmp
insl
push
sub
pushl
mov
push
shrl
daa
setl
movsb
xor
aas
cmc
je
call
xchg
sub
repnz
jg
aas
mov
imul
xchg
daa
mov
dec
jmp
testb
xchg
scas
lock
sbb
js
xchg
hlt
fstp
cmp
adc
stos
sbb
cmp
mov
clc
jmp
out
nop
addb
pop
enter
mov
ljmp
dec
and
les
inc
cmpsb
push
dec
sbb
mov
cld
ljmp
cmp
hlt
lahf
cmp
sbb
sti
cmpsl
pop
out
rcr
jnp
dec
dec
sub
cld
call
mov
pop
push
das
int
and
pop
push
cs
mov
test
mov
out
mov
test
cmpsl
and
pop
xchg
adcb
movsb
movsl
cmp
call
shlb
bound
lock
fucomp
ja
mov
jb
and
pop
mov
jle
lret
sbb
sbbl
fnstsw
andl
inc
das
mov
test
dec
imul
push
outsb
push
hlt
push
lea
push
idivb
sbbb
and
push
xor
incl
mov
aaa
out
sbb
mov
sub
sub
cmp
ret
jo
dec
mov
xchg
cli
push
push
inc
xchg
or
push
dec
cltd
lods
rorb
popf
push
jmp
fistpl
dec
mov
jb
and
or
push
inc
mov
fwait
pop
in
call
xchg
inc
sub
jns
add
popa
mov
inc
bnd
xchg
pop
pop
stos
dec
inc
test
int
dec
test
fldl
ucomiss
inc
ja
jb
lret
ljmp
scas
mov
mov
dec
add
rorl
mov
or
cmp
push
dec
scas
std
mov
inc
mov
lock
sbb
orb
fcomi
or
xchg
test
mov
jae
fdiv
cmp
jecxz
iret
int
mov
mov
stos
gs
test
sti
aam
pop
mov
mov
mov
dec
mov
dec
xlat
sbb
lods
mov
mov
xchg
fcomip
pushl
jbe
push
ljmp
aad
jo
hlt
dec
leave
push
faddl
sub
call
adc
adc
es
or
sub
icebp
or
inc
ljmp
dec
xchg
nop
adc
add
jg
test
mov
cltd
adc
aaa
in
sbb
lods
rcr
mov
ret
test
mov
loope
or
mov
test
ds
or
xor
push
out
repz
push
jg
push
xlat
dec
lods
mov
inc
fcomip
mov
aas
sbb
pop
xlat
xor
es
pop
ljmp
mov
xchg
jb
push
push
cmp
dec
arpl
sar
repnz
int
sbb
dec
sti
or
mov
adc
loop
sbb
addr16
or
test
inc
mov
fwait
mov
adc
repz
call
call
cmpb
pop
pop
out
mov
aas
lock
push
adc
lds
and
mov
jmp
pusha
jmp
add
xchg
in
mov
push
cwtl
les
push
je
test
scas
mov
pop
add
jg
pop
out
pop
out
daa
jo
inc
icebp
xchg
cmc
sti
lods
inc
cmc
lds
cmp
adc
mov
push
pop
sbb
jo
stc
ds
out
sbb
mov
and
lcall
dec
std
imul
nop
test
jo
incb
inc
sub
icebp
sbb
add
das
jmp
int
mov
cmp
jle
pusha
lock
sbb
lcall
and
fmul
xchg
dec
xor
and
sub
mov
icebp
pop
xor
decl
adc
jg
sbb
mov
jge
int
inc
mov
fsubrs
leave
mov
call
pop
push
cmp
push
out
xor
mov
fwait
rclb
clc
push
nop
push
jg
cmpb
orl
jecxz
cmpsl
cmp
bnd
push
cmp
fcomip
sbb
jno
mov
mov
punpckhdq
fcmovne
inc
iret
outsl
call
inc
or
xlat
push
fs
cli
push
iret
push
test
mov
insl
imul
ljmp
mov
lret
mov
in
gs
ljmp
xor
xor
add
add
inc
mov
jge
jns
cmp
and
test
repz
dec
shll
add
fcomip
inc
les
and
cld
andb
jge
outsb
test
push
mov
mov
fwait
ljmp
negl
xchg
aas
mov
adc
or
pop
mov
xchg
rorl
or
test
jmp
arpl
test
dec
stc
or
cmc
call
or
aas
orb
mov
jecxz
inc
ja
push
adcl
adc
jmp
imulb
lods
fsubrs
or
sbb
push
mov
mov
mov
int
sahf
out
out
pop
xchg
push
mov
jg
sub
mov
mov
adc
or
popa
adc
out
mov
decl
movsb
push
enter
jb
bnd
bound
inc
in
push
adc
int3
call
fs
loope
gs
add
inc
inc
adc
into
pushf
cwtl
data16
inc
insb
push
jno
mov
lcall
incl
and
mov
inc
into
dec
sub
add
xor
mov
jg
xor
ljmp
push
push
lds
mov
dec
test
and
out
jg
hlt
rcrl
dec
int
and
xor
adc
sub
stc
jg
dec
call
jg
mov
pop
scas
scas
mov
testl
aaa
or
imul
dec
aad
pop
sub
cmp
pop
xchg
icebp
push
shll
shr
icebp
push
leave
punpckldq
call
rcrb
es
xchg
and
mov
xor
pop
push
ss
push
vpmaxub
jg
mov
lret
ljmp
sbb
in
stos
add
push
pop
lods
icebp
movsb
shrl
dec
adc
out
mov
hlt
jmp
mov
adc
inc
jmp
add
bound
adc
push
sti
jno
lods
andb
jge
mov
mov
or
jmp
mov
pop
fnstcw
int
push
fwait
and
and
ds
ljmp
push
lret
fs
xor
in
popa
mov
call
jl
mov
cmp
out
fistps
and
xchg
and
xchg
and
pop
ljmp
movsb
frstor
movsb
movsl
jo
iret
add
pushl
adc
sub
pop
xchg
xorl
insb
in
mov
cmp
pop
sub
in
sbb
test
clts
in
sbb
pop
sbb
jno
repnz
xorl
icebp
sti
xor
sub
mov
cmpsl
call
xchg
lcall
adc
mov
mov
jb
jg
ret
in
xlat
dec
lods
cld
aam
jb
push
arpl
hlt
jmp
gs
leave
andl
in
ja
stc
dec
jge
push
mov
xlat
incl
mov
popf
clc
xor
cli
sub
mov
or
xchg
lods
test
mov
ffree
jmp
jle
sub
pop
repz
push
cmp
push
fcos
mov
sbb
push
cwtl
cltd
ret
rorb
jmp
aaa
dec
ret
int3
mov
int
cltd
test
mov
adc
add
leave
mov
mov
dec
fldenv
xor
incb
nop
popf
cltd
mov
xchg
push
cld
pandn
mov
adc
data16
mov
xchg
fldt
fstpl
inc
arpl
popf
mov
adc
lcall
das
ret
iret
sub
ret
xlat
fmull
cmp
popf
divb
out
out
xchg
leave
mov
xchg
cmp
cmp
aam
ds
clc
ljmp
call
repz
sub
ficompl
sarl
inc
dec
add
test
fwait
clc
add
mov
sub
test
mov
inc
mov
in
dec
pop
repnz
push
std
lcall
sub
daa
imul
jo
imul
xchg
xchg
imul
mov
jb
sti
aaa
jecxz
test
bswap
and
mov
jle
push
fisubrl
incb
pop
jmp
mov
sahf
lock
filds
sbb
call
mov
push
sub
fwait
shr
test
arpl
imul
or
push
cli
lcall
ja
mov
push
leave
add
iret
shlb
icebp
out
sbb
stc
decl
adc
xor
mov
pop
push
das
sub
sub
pushl
loopne
sub
lods
xchg
mov
push
pop
test
ss
out
loopne
inc
adc
add
aad
pop
or
xor
inc
xlat
jg
push
movsl
dec
repz
adc
inc
int
adc
inc
fbld
xor
fadd
call
int
inc
add
popf
hlt
flds
dec
adc
outsb
loopne
or
push
pop
mov
in
stc
js
icebp
xchg
fs
ljmp
jne
je
loope
sbb
mov
xchg
mov
ja
mov
xor
decl
nop
jmp
inc
out
or
mov
lea
out
rclb
jg
test
pop
movsl
test
jae
push
push
std
repz
sub
aam
or
decl
sbb
push
in
or
mov
enter
rcrb
rorb
imull
dec
aam
repnz
andb
push
inc
jne
out
and
cmp
pop
insl
cli
mov
jnp
stos
add
std
jmp
sbb
xor
aad
adc
pop
test
jecxz
cmc
adc
pusha
jmp
add
mov
fildl
pop
mov
sti
pushf
and
dec
jmp
dec
and
std
sarb
ljmp
sub
sbb
les
push
dec
jae
mov
cmpsb
or
cmp
xchg
xchg
or
xor
inc
cld
shlb
mov
scas
fwait
add
cmp
insb
jbe
pusha
stos
loop
das
jmp
mov
cmp
je
xor
bound
js
jbe
shlb
or
jo
ljmp
clc
std
pop
sbb
jo
and
ficoms
cmc
fmuls
enter
inc
inc
jmp
call
jo
xchg
adc
js
outsb
cld
pop
stc
popa
mov
pushl
dec
jb
jecxz
dec
movsl
mov
insb
icebp
adc
push
xchg
sub
mov
push
call
dec
push
or
pop
push
xchg
xchg
mov
cmp
in
data16
sub
add
lock
mov
jae
push
mov
pop
cmp
push
pop
sub
decl
inc
push
hlt
nop
push
sub
or
js
sub
jnp
sbb
jmp
fsubl
lahf
test
inc
test
lahf
mov
mov
fbld
mov
scas
movsb
dec
dec
sub
ficoml
pop
xorl
fisttpl
in
pop
imul
movsl
notl
inc
inc
aad
push
dec
xchg
inc
stos
mov
xchg
jb
dec
cwtl
into
inc
adc
es
dec
jae
mov
lcall
mov
or
outsb
loope
xchg
sbb
rolb
push
and
jl
stos
jmp
xchg
call
test
xor
and
pop
sbb
cmp
mov
xchg
daa
insl
cmp
mov
rolb
cltd
test
mov
mov
or
fsubs
xchg
pushl
rorb
mov
ret
int
adcl
shrl
or
ljmp
lcall
leave
jb
dec
jb
pop
push
mov
add
jnp
aas
jbe
rcrl
and
or
int
and
mov
in
push
leave
out
popa
imul
sbb
mov
mov
xchg
push
aam
popa
mov
adc
pushl
jnp
pop
lock
adc
cmpb
incl
imul
fucom
add
push
into
aam
sub
push
pop
aaa
out
pushf
enter
test
sbb
jnp
fcmovne
sub
dec
mov
pop
idiv
pushl
iretw
inc
into
sbb
xchg
inc
push
mov
dec
or
mov
or
mov
decl
scas
jmp
imul
inc
addr16
jle
pop
or
xchg
and
ds
movsb
decl
and
mov
neg
mov
out
out
sbb
aaa
or
jmp
into
cltd
pop
mov
jle
mov
sub
lcall
dec
jecxz
jmp
out
js
daa
stc
mov
cmp
lea
in
mov
dec
push
push
outsl
and
dec
jne
data16
mov
pop
mov
mov
inc
inc
shlb
mov
xor
out
fsubrs
insl
mov
les
adc
pop
popf
xor
mov
inc
decl
lock
pop
xor
sbb
mov
scas
mov
pop
cmp
in
cmpsl
jne
adc
sar
jmp
loop
pop
push
das
adc
mov
aas
inc
cmp
mov
add
push
incl
mov
jns
hlt
cmc
insb
arpl
in
arpl
xlat
adc
insl
push
jle
jb
outsb
dec
loop
pusha
cmp
xor
jl
pop
out
lods
insl
push
add
inc
cmc
sahf
jg
arpl
mov
sbb
or
xor
std
dec
jbe
mov
or
imul
sub
jbe
pop
xor
push
cmp
icebp
test
bound
lods
sti
inc
xchg
gs
shl
cli
mov
adcl
loop
call
js
xor
adc
outsb
into
outsb
adc
adc
mov
pop
mov
mov
pop
fcmovb
pop
ret
in
pop
add
push
cld
xor
aam
pop
pop
enter
cmc
jno
adc
jl
jg
jbe
mov
rcrb
pop
daa
nop
loope
divl
loopne
push
loopne
adc
lahf
decl
lods
out
cmp
out
xchg
xchg
fcomip
addb
scas
fstl
nop
aaa
dec
insl
cmpb
pop
fisttpl
movsl
jmp
mov
es
call
shrw
xchg
adcb
sbb
mov
popf
xchg
cmpb
scas
mov
aad
outsb
in
pop
inc
pop
adc
out
mov
jns
sbb
add
push
int3
xchg
add
loop
mov
xchg
pop
cmc
je
ljmp
or
add
mov
sbb
out
dec
or
lahf
pop
jns
call
mov
das
shll
cmp
mov
jae
xor
test
loope
test
cmp
mov
push
insl
in
mov
call
decl
lds
dec
pop
jae
jmp
icebp
jg
push
sbb
sbb
in
or
in
mov
shll
add
mov
push
dec
inc
decl
aaa
sub
xchg
rorl
pop
mov
or
jmp
sbb
repz
incl
pushl
inc
sbb
cs
lret
pop
mov
cmp
shll
push
int3
sbb
hlt
mov
bound
pop
jmp
daa
lods
lret
xchg
sti
shl
repnz
pushl
ficompl
ficompl
xchg
xorb
and
cmp
push
cld
out
out
fsubrl
mov
mov
cmp
inc
sbb
les
in
ljmp
fists
push
leave
repz
or
xchg
sbb
ficoms
inc
lcall
and
aad
mov
sbb
ret
addr16
subb
mov
in
out
pushf
inc
jnp
cmp
cmp
pushl
cltd
fidivrl
in
icebp
lods
insl
shlb
loopne
cmp
cltd
mov
ljmp
decl
inc
pusha
fidivrs
cmp
sbbl
repnz
cs
sub
sub
ja
ret
mov
mov
popa
jne
xchg
mov
jg
outsl
fs
lret
cld
push
out
push
mov
lea
je
mov
int
mov
sub
jmp
xor
adc
lret
cmp
jecxz
jo
cmpsb
mov
hlt
dec
out
ds
mov
and
adc
loope
xor
insb
mov
pop
int
iret
shlb
fstpt
dec
fildl
adc
xlat
shrb
push
sub
mov
jae
fs
out
incl
or
dec
stos
cmpb
sub
fisubrs
outsb
pop
inc
jp
xchg
mov
sbb
jne
push
or
push
jno
and
decl
sbb
inc
jnp
loop
mov
decl
divl
xchg
out
add
or
rorl
test
cmp
ret
or
cmpsb
xchg
pop
cltd
dec
adcl
jae
sti
sbb
mov
pop
shlb
aas
loop
mov
into
jbe
xor
mov
add
mov
dec
fidivrl
push
mov
jnp
jp
sti
idiv
mov
jle
aaa
and
fsubrp
hlt
xchg
mov
scas
adc
mov
and
push
shrl
jo
mov
sub
inc
mov
ret
sub
mov
jbe
pop
sub
jp
pop
ds
bound
inc
sub
cmc
jl
mov
lahf
pop
lea
cmp
call
imul
es
cmc
push
xor
js
mov
push
push
popf
sahf
int3
leave
lea
fbld
or
adc
ds
cmp
sub
mov
pop
pushl
dec
adc
imul
insl
dec
dec
sarl
sahf
mov
sbbb
jle
inc
ror
inc
pop
sbb
mov
mov
or
in
fnstcw
mov
mov
or
or
int
in
cmp
std
outsb
adc
fisttpl
mov
inc
daa
add
mov
sbb
in
adc
or
mov
xchg
clc
pop
hlt
ljmp
pop
imul
cmpsb
decl
sbb
inc
and
lret
and
and
cwtl
cmp
xor
dec
decl
stc
mov
sub
lds
clc
stos
movsb
cmp
sub
sti
jbe
and
jg
pop
loop
mov
xchg
xchg
imul
fistpll
pop
pop
jle
pop
cli
mov
dec
mov
test
ret
push
push
fwait
sub
jge
dec
sub
cmpsb
and
stos
call
shrb
xchg
jno
dec
daa
jg
call
aaa
jecxz
xor
pop
data16
xor
cmpsl
push
test
mov
rol
inc
cmp
jbe
sub
ficoms
into
add
cmp
cwtl
mov
ja
sub
xchg
lea
stos
inc
mov
inc
jl
negb
jecxz
xchg
xor
movsb
xchg
stos
jmp
mov
mov
xchg
arpl
sub
mov
mov
and
notb
jmp
scas
aas
xchg
movsl
test
xchg
cmp
imul
inc
pop
add
cmpsb
push
dec
add
xchg
and
jl
movsl
in
xchg
sar
mov
ljmp
insl
loope
movsl
insl
inc
jp
cmp
andb
frstor
mov
or
sbb
test
cmp
xchg
mov
insl
test
xlat
fdivrl
arpl
or
jg
lods
sbb
mov
push
jae
mov
out
sti
out
lret
sbb
repz
and
xor
stos
cs
jg
mov
stc
or
mov
lods
mov
mov
subl
aad
push
jbe
push
add
pushf
call
jbe
test
arpl
cmp
out
dec
mov
hlt
incl
hlt
push
rcll
xchg
int
mov
push
cmp
test
push
dec
lea
popf
stc
gs
mov
cmp
dec
mov
leave
aad
cmp
mov
cs
dec
js
sub
test
jnp
or
decl
out
and
and
in
mov
pushl
lcall
fdiv
pusha
or
mov
mov
fcmove
std
movsl
cwtl
adc
clc
mov
xchg
outsb
std
pop
adc
cmpsb
cmpsl
mov
dec
int
lret
call
out
insb
and
push
rcrl
shlb
xor
imul
fcomip
dec
mov
call
push
cld
and
push
fdivp
push
xchg
push
push
in
shll
jne
jo
test
xchg
out
jae
mov
add
jnp
pop
mov
sbb
or
idiv
call
ret
sbb
cmc
std
mov
xor
stos
add
pop
or
or
jb
iret
dec
incl
cld
sar
push
mov
pop
jl
jmp
add
jmp
lret
mov
fwait
ret
cli
icebp
incl
mov
sub
or
insl
adc
imul
nop
or
dec
nop
mov
inc
mov
nop
leave
inc
mov
jg
incl
xor
iret
mov
mov
or
aas
popf
int3
cmpsl
btsl
sar
call
xchg
test
add
aam
jmp
mov
lret
pop
sub
jg
xlat
inc
sbb
fsub
xor
adc
icebp
or
adc
ss
pop
mov
ljmp
rclb
icebp
pop
xlat
pop
clc
lret
loop
xchg
cmpsl
test
gs
xor
lcall
in
sub
inc
jb
jge
movsl
rcrb
xchg
xor
jne
jecxz
mov
test
lcall
jecxz
push
jae
je
test
rclb
mov
out
in
jo
or
popf
jnp
rclb
inc
stos
ret
ss
bound
fidivrl
lods
cmpsl
in
cwtl
mov
mov
lock
dec
loopne
mull
inc
out
pop
lock
decl
ja
js
dec
enter
stos
stos
mov
pop
xor
xor
dec
cmp
push
insl
or
sahf
hlt
add
fildl
jecxz
adc
sti
xor
cmp
shrl
jns
mov
rol
jb
call
dec
call
imul
push
or
into
data16
mov
cli
ljmp
fsubs
xchg
andl
hlt
decl
rclb
jge
shlb
mov
int3
jge
cmp
xchg
rorb
outsl
adc
or
popl
fistl
out
mov
and
stos
popf
stos
jns
test
shlb
mov
jmp
inc
mov
xor
ljmp
xor
push
movsl
mov
stos
add
cmp
mov
fistl
cwtl
jecxz
jle
jecxz
cmp
ljmp
xchg
lock
xor
pop
push
lret
pop
pusha
shl
mov
and
inc
mov
movsb
outsl
and
ret
stos
jae
stc
mov
sub
in
inc
lods
pop
aaa
push
jmp
xchg
out
push
addr16
sbb
jg
mov
or
adc
mov
std
fs
mov
jo
push
mov
into
cmpsl
mov
jns
adc
decl
int3
fisttps
push
add
xlat
and
pop
sbb
xchg
mov
call
xchg
jbe
pop
test
fdivs
rcrl
std
call
cltd
jge
insl
mov
sub
xor
sub
mov
inc
inc
addr16
pushl
mov
roll
cwtl
cwtl
push
xchg
adc
adc
mov
stc
stc
push
movsl
xor
xchg
vunpckhpd
push
cmp
mull
xor
ljmp
das
movsl
pop
loope
pushf
mov
fidivs
lock
std
fnstcw
pop
dec
rorl
pushl
mov
xor
jno
mov
fs
or
push
cs
in
xchg
fs
out
fwait
imul
jno
daa
pop
test
jns
mov
push
arpl
leave
test
iret
dec
lahf
push
and
inc
aaa
fs
ds
adc
and
and
sahf
push
dec
jg
decl
jo
test
out
and
and
mov
xchg
incl
lret
xor
loop
xchg
jge
pushl
xchg
push
xor
mov
stos
sbb
in
loopne
mov
pop
inc
pop
incl
lret
dec
adc
out
daa
xchg
mov
xchg
sti
in
dec
flds
aam
pop
and
mov
int3
pop
push
cld
or
push
mov
xchg
insl
mov
in
scas
inc
shr
jp
cld
lret
decl
pusha
cld
jge
push
dec
pusha
outsb
pop
mov
add
data16
dec
jl
movsb
incl
add
cs
fdivrl
or
inc
pop
jbe
mov
call
repnz
and
xchg
mov
push
lds
sbb
add
or
dec
jge
add
cltd
out
jmp
xor
call
sbb
adc
loopne
jne
mov
hlt
popa
mov
inc
push
push
paddusb
ljmp
sti
xchg
push
aaa
adc
jmp
inc
flds
scas
push
insb
mov
les
test
call
sub
xor
lcall
ljmp
mov
test
jae
inc
dec
xor
clc
inc
lods
fsts
sub
jecxz
or
adcb
mov
test
cld
inc
stos
in
inc
push
cmp
js
sbb
mov
incl
gs
iret
mov
push
or
sbb
push
scas
add
aam
mov
cmp
decl
xor
adc
jno
out
jmp
jnp
loope
pop
mov
jae
pop
mov
cmpsl
cli
psubsb
push
fdivrs
hlt
decl
fsubl
notb
and
mull
inc
or
cmp
cmc
jl
jmp
in
and
xor
push
lock
rcrb
push
arpl
push
out
ret
lods
jge
and
pop
roll
enter
addl
sahf
aad
jmp
push
dec
pinsrw
adc
jmp
hlt
shrb
jle
inc
or
xor
lds
cmp
push
mov
xlat
mov
jae
cli
pushl
in
pop
sub
in
and
stos
xchg
ss
inc
mov
push
ljmp
es
mov
mov
stos
in
pop
and
jle
mov
pushl
lcall
ja
int3
or
mov
mov
and
stos
pushl
jmp
cwtl
mov
sub
lock
adc
ss
ljmp
hlt
call
cmpsb
fs
push
fidivrs
rcll
xlat
push
popf
repnz
lcall
clc
sub
mov
addl
mov
push
push
mov
pop
rcrb
mov
sar
aas
mov
aas
addb
jecxz
adc
rorl
fdivp
mov
jg
jle
movsl
push
dec
imul
shr
icebp
mov
lea
or
mov
jmp
fwait
push
ds
inc
js
lret
test
push
pushf
push
jbe
ljmp
bound
inc
push
inc
xor
subb
push
xchg
inc
pop
sbb
mov
fidivrl
push
dec
fstl
adc
in
gs
loop
cmp
pop
pop
pop
iret
add
das
add
int
incl
xchg
movsb
shlb
cmp
ja
clc
mov
xchg
dec
sub
imulb
push
icebp
push
ljmp
and
mov
add
xor
sbb
inc
int3
out
xchg
cmp
add
std
sar
aam
push
sub
outsl
mov
xchg
jmp
cmp
popa
and
mov
mov
sbb
pop
clc
iret
daa
pop
or
jl
adc
cmp
mov
push
dec
mov
lret
cmp
jmp
xchg
pop
mov
add
decl
mov
push
sbb
sti
or
into
xchg
rolb
mov
cltd
movsl
lods
dec
repnz
lcall
push
mov
std
fcoms
test
fdivr
or
xchg
sub
push
add
xchg
loop
adc
mov
and
ss
call
pop
xor
lea
adc
jecxz
insb
adc
xor
stos
mov
or
xchg
mov
mov
insb
insb
test
iret
aad
or
mov
jg
mov
loopne
nop
ror
decl
dec
jle
loopne
xchg
fcom
sub
call
das
lock
sti
clc
cmp
mov
pop
mov
rcl
test
sub
push
clc
pop
js
mov
cmp
out
push
sub
adc
mov
aad
dec
fcomp
cltd
pop
out
xchg
pop
in
xor
lcall
inc
data16
mov
push
mov
or
jmp
mov
popl
clc
adc
into
mov
and
sbb
js
add
mov
lret
mov
inc
mov
and
sti
cs
dec
jl
dec
out
es
push
mov
mov
call
jecxz
or
mov
xchg
ret
push
xchg
in
push
stc
adc
adc
decl
or
inc
out
sub
clc
push
outsb
jmp
xor
adcb
push
cld
test
sahf
imul
mov
lret
mov
scas
out
test
in
sbb
jg
xchg
inc
push
test
cmp
loop,pt
sahf
push
outsb
xchg
sbb
and
mov
ja
xlat
cmp
inc
jl
pop
cld
pushl
xchg
imul
fmulp
cwtl
in
xchg
jp
std
lcall
inc
fs
push
sub
popf
fwait
out
sub
ja
sbb
mov
or
push
fadds
call
dec
cpuid
adc
cmp
sbb
or
in
cmpsb
out
icebp
pop
jmp
mov
mov
adc
sub
xor
or
cld
pushl
je
imul
stc
imul
pop
pop
aam
ljmp
js
out
std
push
sub
add
xchg
out
adc
testl
dec
adc
mov
xchg
and
jg
mov
mov
jmp
popa
movsl
ret
adc
scas
jl
movsl
cmc
js
adc
enter
inc
mov
lods
push
pop
iret
mov
stos
out
fldl
push
cli
cmpsb
loopew
pop
lods
call
pop
gs
jb
test
fcoml
mov
push
xor
mov
sub
sbb
and
cmp
in
pop
pop
inc
in
inc
aam
incl
les
sub
ds
aas
jg
adc
ljmp
mov
jne
shlb
dec
arpl
push
pop
insb
add
shll
dec
push
int3
stos
jmp
mov
sbbb
pop
xchg
fwait
cmc
ficoml
aas
sub
nop
aad
aaa
push
sbb
jbe
inc
loopne
fcomps
adc
popa
jmp
in
mov
jp
mov
jbe
pop
aaa
jl
ss
addr16
jl
dec
mov
or
sub
les
or
add
fsub
mov
loop
scas
xor
lea
push
ficoml
mov
pushl
andl
cmp
je
ds
cmp
and
shll
ljmp
aam
xchg
jns
sbb
test
xchg
fcomps
push
call
outsl
rcrl
push
add
scas
pusha
jb
jae
fsubr
sbb
mov
or
sti
fistl
lcall
sub
or
pop
sub
lea
shll
xor
je
lcall
mov
push
xlat
inc
push
adc
pop
ret
and
fcomip
jl
mov
cli
pusha
shrb
call
and
stos
bound
mov
lcall
push
je
cltd
adc
cwtl
cmc
ja
inc
sbb
mov
push
xchg
or
outsl
and
fwait
scas
loopne
inc
leave
mov
call
pop
inc
icebp
call
push
mov
cli
push
jle
incl
sti
test
leave
mov
lods
fsubl
mov
jecxz
add
cs
decl
incl
into
mov
jmp
mov
sbb
das
jno
rorl
repnz
fwait
popa
jecxz
inc
je
jbe
sbb
and
jne
test
cli
in
jp
push
out
sbb
sub
ljmp
push
test
sbb
out
pushf
int
fimuls
push
outsl
ds
xlat
pushf
decl
cmpsb
xlat
lahf
cmp
xchg
or
scas
es
aad
nop
mov
dec
mov
filds
push
ljmp
sar
mov
out
cmp
mulb
bound
jecxz
sub
adc
mov
mov
pushf
cmc
lea
test
shrl
sbb
inc
mov
xchg
into
stos
and
jle
cmp
je
decl
lock
mov
test
sbb
mov
sub
cld
cmp
bound
scas
or
fldt
test
add
pop
in
and
fisttps
scas
adc
aad
jmp
or
sahf
cld
in
mov
addr16
stc
imulb
imul
jbe
mov
jg
mov
cmc
sbb
mov
mov
aad
mov
mov
and
mov
fscale
shlb
push
call
and
pop
cmp
stos
dec
mov
xor
pop
add
cmp
push
mov
dec
addr16
mov
je
add
mov
xor
dec
rol
mov
stos
aas
mov
mov
sbb
adcl
mov
jnp
and
test
or
pushf
sub
movsl
aad
push
mov
xchg
int
adc
movsb
dec
add
cmp
lods
cli
sub
lods
xrelease
insl
or
inc
cmpsb
data16
sar
jo
xchg
nop
pop
jb
out
cli
incl
jge
imul
data16
aad
sti
dec
cmp
rcll
decl
int3
daa
std
lret
rorb
iret
leave
mov
xchg
add
sahf
fiadds
test
cmp
and
mov
xor
jno
pushf
xor
inc
pop
or
pop
imul
cwtl
shlb
cmpsl
dec
sbb
xchg
mov
sti
mov
inc
pop
call
int3
movb
cltd
repz
xchg
add
jne
jnp
or
xorb
lcall
ja
cmp
inc
in
pop
mov
mov
adcb
adc
call
test
and
jmp
mov
ljmp
mov
xchg
data16
mov
ja
inc
sbb
xchg
scas
sbb
adc
push
mov
sahf
cmpsl
sub
scas
sbb
push
mov
out
lret
hlt
jno
push
fldenv
loope
push
std
mov
sar
sbb
roll
or
lcall
push
pop
push
cli
inc
cmpsl
xchg
push
mov
aam
rol
push
lcall
incl
cmp
mov
add
addr16
ljmp
adc
out
andb
dec
pop
mov
insb
xlat
xor
cs
decl
imul
test
dec
sarl
and
jns
fildll
xchg
adc
jg
lcall
inc
cmp
cmp
aad
jmp
dec
sbb
inc
dec
call
sbb
xor
loopne
push
ds
xchg
xor
mov
je
mov
call
xor
loop
mov
cmp
inc
std
sub
fnstenv
push
rclb
sahf
xor
decl
aam
mov
addr16
push
test
popf
das
pop
incl
call
lods
dec
xor
cld
xchg
and
mov
push
cld
push
ret
test
and
dec
orl
insl
sub
and
pusha
lcall
pushl
pop
lcall
out
in
jp
out
movsl
sbb
sbb
jecxz
mov
insb
xor
mov
mov
pop
decl
pop
push
mov
pop
inc
pop
mov
imul
mov
xlat
repnz
jg
mov
idivl
mov
mov
loop
adc
mov
call
mov
test
jb
outsb
in
jg
jl
mov
cli
and
inc
jmp
ficoms
decl
out
enter
testb
ljmp
mov
mov
sub
and
mov
push
cwtl
push
pushl
inc
jmp
ljmp
addr16
aad
fists
lret
pop
test
mov
loope
dec
lds
faddl
rolb
dec
popa
or
add
insl
sub
or
or
ja
xor
decl
or
daa
clc
pop
xchg
mov
pop
sub
divb
cmc
lret
xchg
lods
jns
sub
ljmp
test
pop
ret
popf
cmp
inc
loopne
mov
out
movsl
mov
call
jmp
jbe
shll
subl
mov
int3
xor
xchg
xchg
rorb
addr16
call
outsl
pop
popf
aam
je
push
adc
movsl
xchg
mov
adc
xor
pop
cltd
adc
leave
sbb
push
mov
icebp
ljmp
dec
pop
adc
mov
jnp
insl
popf
inc
adcb
cmp
mov
xor
loope
scas
mov
mov
mov
mov
stc
xor
xor
aam
and
adc
lcall
lahf
inc
enter
or
push
pop
xchg
push
rol
lea
pop
fwait
cmp
es
adc
es
bound
mov
in
push
jne
xchg
mov
fwait
push
dec
loop
jle
mov
add
rclb
imul
in
out
or
psubd
call
jg
lcall
leave
lcall
and
xchg
ljmp
shll
in
inc
imul
divb
xor
decl
ss
sbb
not
add
inc
shlb
jb
out
in
outsl
lea
outsb
sbb
mov
call
inc
xor
xor
sbb
xor
sbb
div
cwtl
push
shr
mov
call
push
inc
ss
ja
fimull
and
mov
jg
stc
nop
jle
inc
jbe
aaa
push
cmp
out
dec
push
mov
mov
and
repz
xchg
pop
cmp
push
call
push
in
ror
dec
in
mov
mov
arpl
jns
dec
push
lcall
in
ljmp
insb
mov
inc
leave
sub
add
inc
push
inc
mov
stos
dec
mov
icebp
inc
sub
ljmp
test
shl
jmp
outsl
fwait
ljmp
cli
or
movsb
fisubrl
add
inc
data16
mov
call
xor
jnp
movl
pop
adc
cmpsb
icebp
mov
sti
or
rcr
jmp
pop
data16
ljmp
incb
mov
or
ror
dec
sahf
xorb
xor
inc
scas
divl
and
jmp
pop
inc
data16
mov
pop
sub
pop
add
sahf
fs
pop
fbld
jb
push
mov
icebp
jg
out
push
mov
push
xchg
inc
fs
pop
sbb
cld
dec
jge
push
fimuls
mov
xor
mov
pop
sti
jle
out
inc
mov
hlt
js
decl
ljmp
roll
xchg
push
test
lods
and
adc
mov
movsl
xor
dec
dec
lea
mov
cltd
push
pop
test
or
fdivrl
xchg
cmp
ret
mov
into
push
mov
jmp
dec
aam
cmp
loope
push
pop
and
stc
test
push
mov
test
dec
data16
incl
leave
mov
and
cmp
icebp
pop
jg
mov
fildll
sti
je
das
xor
inc
outsb
xor
ss
xchg
jle
push
inc
test
cs
push
int3
pushl
jp
mov
mov
loop
mov
in
mov
or
repz
mov
jmp
ljmp
arpl
int3
lret
or
iret
lea
inc
cmpsl
lret
imul
dec
push
out
and
and
dec
inc
pushf
mov
pop
cs
sahf
lcall
mov
adc
mov
call
enter
jmp
ds
pop
xchg
mov
xchg
stos
xchg
sub
sub
cs
scas
call
inc
xor
and
xchg
and
dec
andb
sub
cmpb
mov
std
jae
cmp
in
fmull
adc
jp
lods
lret
test
push
loope
pop
lds
cmp
mov
inc
add
pop
or
dec
out
in
push
ljmp
pop
and
jno
mov
jne
dec
mov
jg
adc
dec
sbb
pushf
pop
int3
xchg
pop
std
ljmp
xchg
arpl
testb
cwtl
adc
lret
push
out
aas
inc
imull
cmc
and
cmp
in
repz
nop
cli
xchg
add
mov
pop
nop
addr16
mov
mov
arpl
jbe
pop
adc
in
fwait
jne
addb
jmp
sbb
jecxz
mov
pop
pop
or
outsb
mov
or
aas
shll
clc
call
mov
ja
and
sbb
mov
je
jo
sti
das
stos
jmp
fwait
push
sub
xchg
sbb
pop
mov
divl
ds
call
das
dec
mov
xlat
js
mov
sub
push
adc
xchg
fsubr
pushf
ficoms
mov
adc
pusha
and
xor
shll
mov
pop
sar
xor
mov
jbe
xchg
das
sub
cmp
mov
call
mov
inc
idiv
cld
mov
inc
xor
pop
add
cmc
enter
mov
icebp
lcall
jnp
sar
lret
push
hlt
bound
xor
xor
dec
lods
je
xor
pop
stos
xor
cmp
fnstenv
cmp
mov
stos
arpl
sahf
inc
cld
push
inc
mov
loopne
fisttpll
sub
xor
fisttpl
mov
aam
jno
xor
inc
mov
sbb
in
cmpb
mov
pushl
push
xchg
jp
mov
mov
rorb
jne
dec
inc
leave
je
je
jmp
xorb
sbb
lea
xorb
fsubs
or
sub
test
incb
jp
das
jle
adc
iret
pushl
out
cmp
repz
cltd
mov
adc
les
out
cwtl
mov
sbb
mov
cmpsl
push
test
fwait
mov
cmpsb
int
inc
push
sub
dec
icebp
sar
fcomip
je
fidivl
shlb
aam
xor
mov
mov
lret
ret
push
aaa
mov
call
adc
cmc
jle
lahf
xor
shl
ret
aam
xor
sbb
adc
mov
pusha
mov
adc
decl
stos
sub
movsl
loopne
pop
inc
push
jo
scas
lret
sub
dec
xchg
mov
mov
inc
aam
pop
insl
mov
ljmp
xchg
jg
dec
incl
in
sub
add
ds
pop
lock
inc
sbbl
sbb
jecxz
sbb
pusha
int3
dec
sub
add
mov
in
mov
pop
ja
push
sub
mov
out
ljmp
push
mov
jmp
adc
movsl
in
mov
xlat
testb
cli
pop
inc
call
mov
ret
sub
xchg
jmp
imul
sbb
adc
pop
and
lods
or
inc
sbb
cli
rcrl
popw
in
xchg
sbb
scas
dec
clc
mov
or
mov
mov
pop
clc
enter
adc
push
xor
aaa
sub
push
mov
mov
inc
jae
and
cmp
mov
inc
decb
mov
bound
std
xchg
es
mov
aaa
xor
subl
fldenv
jmp
outsl
int
loop
ret
testb
cmpsb
into
pop
adc
mov
call
mov
stos
jge
push
loop
pop
mov
jmp
mov
jp
push
adc
cmp
ljmp
fistpll
test
pop
add
insl
ds
jecxz
adc
aas
adc
xor
add
xchg
test
adc
mov
jecxz
mov
lods
sub
jg
dec
insl
mov
dec
sbb
sbb
aaa
push
out
fildll
nop
call
mov
push
jae
push
mov
xchg
cmp
lea
jnp
out
mov
popa
mov
ljmp
mov
sub
imul
mov
stc
inc
push
xor
add
mov
push
mov
outsl
ss
rorb
inc
xchg
cmp
mov
call
addr16
inc
test
add
xchg
mov
fdivrp
jge
add
dec
push
mov
sub
add
sbbl
test
cltd
sub
nop
test
add
or
faddp
lcall
fmulp
aam
enter
fadds
add
pop
ret
add
cmpsb
ljmp
pushf
mov
inc
out
mov
mov
jg
lods
movl
add
cmpsb
fcoml
adc
inc
loop
std
xchg
addb
int
cmp
iret
sub
icebp
pushl
add
bound
mov
lcall
icebp
push
nop
fwait
mov
mov
mov
cmp
jns
aaa
pop
sub
or
ja
mov
test
jno
sub
pop
cmpsb
mov
in
jmp
jne
mov
xor
or
pop
cmp
xchg
sti
xchg
jmp
mov
dec
addr16
sub
xlat
sbbb
daa
adc
insl
sub
outsb
pop
decl
xchg
and
dec
js
add
mov
or
inc
jb
cli
fs
mov
loopne
add
decl
test
xchg
dec
xchg
xor
cli
aas
add
mov
sbb
dec
inc
or
pop
lret
inc
mov
sbb
mov
jmp
mov
cmp
and
stc
jle
lret
jmp
std
aaa
mov
sti
mov
addr16
mov
pop
dec
sub
loopne
movsb
xchg
jnp
add
jmp
popa
adc
stc
pop
xchg
cmp
mov
xchg
in
loope
mov
lret
mov
push
mov
in
push
and
push
out
test
add
stc
xor
movsl
cli
xchg
or
mov
ljmp
sub
and
mov
scas
rcll
lea
pop
jle
decl
or
mov
fiaddl
or
rorl
pop
xor
fwait
je
inc
cmp
into
add
and
dec
or
mov
xchg
fs
or
data16
pop
jns
popf
jmp
incl
cmp
into
test
lea
adc
ljmp
hlt
cmp
mov
sub
decl
ljmp
imul
jg
daa
xlat
mov
aad
or
mov
jbe
and
mov
das
ja
lcall
pusha
adc
shrb
jmp
xor
mov
jnp
loopne
pop
fimull
sbb
jmp
push
adc
lahf
jb
jle
sub
lcall
das
aaa
test
sub
bnd
mov
mov
loope
cwtl
adc
mov
add
fisubl
in
rorl
dec
ret
ljmp
cmp
clc
in
repz
mov
cmovo
pop
loopne
pushl
xor
enter
jle
cmpsb
andl
cmp
int
xor
rcl
inc
mov
fidivs
or
mov
mov
sar
inc
xor
push
not
lods
cmpsb
fucomi
aaa
and
lcall
xorb
cmc
std
into
jg
cmpsl
or
in
in
int3
bound
inc
jne
enter
lcall
pop
sub
sbbb
mov
sub
inc
or
or
adc
jle
jl,pn
incl
mov
bound
add
notl
xchg
mov
pop
push
adc
and
jg
inc
and
pushl
out
test
add
pop
dec
icebp
push
xlat
dec
aam
ljmp
mov
stc
jmp
mov
cmp
xor
gs
repnz
and
int3
jmp
and
mov
scas
jb
sbb
jmp
jno
pop
leave
subb
out
imul
fwait
out
push
adcb
packsswb
cmp
jecxz
adc
add
call
xchg
push
insl
lock
hlt
or
dec
in
leave
sbb
out
mov
push
sub
mov
add
cwtl
pop
add
adc
bound
orl
and
in
push
lods
andl
clc
sub
lret
cmp
xchg
mov
jl
push
cmpsb
cmp
cli
aam
lcall
clc
jo
je
enter
mov
mov
mov
inc
jb
loope
testb
repnz
scas
cmpsb
es
insb
aas
in
sti
movsb
pop
adc
xorb
push
clc
inc
xor
adc
neg
lret
lret
sbb
imul
es
les
xor
lahf
inc
cltd
cltd
int3
lcall
sahf
xor
cmpsb
jg
or
mov
mov
sarl
stos
mov
jmp
sbb
adc
daa
push
rolb
pop
fistpl
jecxz
push
lods
in
cmp
jne
loopne
loope
pushl
xlat
bound
xor
rorb
jge
jo
push
fnstenv
pushl
fmuls
sbb
lods
pop
jnp
subl
xlat
les
insb
or
mov
je
insl
mov
inc
mov
push
adc
mov
out
lods
pop
cmp
mov
cmp
mov
mov
adc
sbb
pushf
shl
dec
mov
in
cmpb
jg
or
push
and
int
aam
icebp
jg
or
lods
test
div
icebp
jmp
jge
sarl
add
push
out
jb
pop
jmp
aad
jo
mov
pop
pop
insl
mov
cmp
mov
insl
jnp
xchg
or
dec
orl
imul
cld
incl
insl
push
mov
sbb
ret
pop
test
pop
jg
les
int
ljmp
xchg
jae
dec
or
jmp
dec
mov
inc
imul
cmp
cmp
and
ljmp
gs
mov
add
cmc
les
aas
test
mov
mov
jmp
cwtl
mov
or
fincstp
enter
xor
jg
ror
sbb
and
add
mov
pushl
cmc
sub
bound
add
aaa
int3
sub
decl
pop
mov
push
faddl
push
mov
push
out
jb
loopne
jecxz
xchg
repnz
shl
jmp
cmc
xchg
pop
lods
scas
js
pushf
jmp
mov
add
enter
lcall
sbb
inc
mov
loop
movsl
or
dec
push
mov
pop
aaa
mov
jge
lcall
push
xor
adc
sub
or
ljmp
dec
scas
jle
mov
lret
popf
fidivrl
repz
mov
xlat
aas
xor
decl
dec
mov
dec
subl
fldenv
mov
std
das
cli
pushl
xorb
cs
fsubs
mov
fsubp
in
mov
pop
cld
mov
call
cmp
mulb
push
xor
cmp
rcrb
xchg
mov
pusha
cld
call
mov
xchg
fcoms
lret
adc
bound
dec
pop
es
lcall
mov
mov
sbb
push
lret
insl
ret
mov
sbb
add
jmp
cmc
test
gs
push
das
sub
adc
cltd
jmp
and
xchg
inc
cld
mov
lcall
out
lods
call
cld
dec
out
pop
mov
mov
mov
cli
mov
movsb
push
adc
testb
mov
mov
in
jb
fwait
dec
jl
call
xchg
sbb
mov
and
jne
xchg
jl
mov
mov
dec
jne
pop
cli
cmp
cmp
mov
movsb
sbb
pushl
clc
inc
adc
mov
push
stos
fcoml
incl
pushl
aaa
repnz
cmp
rorb
sub
cwtl
imul
lcall
insb
out
call
loope
jb
cs
xor
js
sub
push
shrl
fsubr
and
imul
dec
ja
mov
or
xchg
enter
push
adc
sub
fildl
mov
mov
test
mov
sahf
stos
lock
mov
xor
insl
xchg
decl
decl
fisttpl
std
xchg
in
popa
aad
dec
dec
inc
in
js
cs
call
call
fnsave
gs
jne
inc
jg
add
sahf
add
jb
adc
sub
cmpsl
cmc
mov
jmp
mov
dec
stos
xchg
push
mov
push
xchg
nop
scas
dec
std
pop
cld
data16
add
decl
sub
clc
jns
mov
pusha
insl
fwait
dec
jg
lea
jmp
mov
fucompp
scas
mov
dec
ljmp
inc
mov
jge
test
rolb
std
pop
jb
mov
xchg
adc
into
dec
jnp
test
adc
clc
jmp
cmp
push
jns
dec
sub
decl
call
lahf
jno
xor
xchg
cld
sar
xor
inc
jge
pop
scas
mov
decl
cs
sbb
sub
sbb
les
mov
not
xchg
cltd
inc
sarb
lods
add
aaa
and
or
cmp
xor
mov
iret
push
cli
ljmp
and
xor
mov
dec
les
fisubl
jle
cmp
fidivl
incl
push
cli
push
jg
jg
push
in
adc
or
fwait
hlt
jg
sbb
jle
push
add
je
out
mov
ljmp
pop
mov
mov
lea
cmc
cli
fists
popf
mov
sub
scas
mov
push
add
mov
inc
pop
cwtl
adc
in
xor
test
add
fisubs
xchg
sbb
sbb
mov
daa
add
adc
add
scas
push
shll
pop
push
jl
sub
cmp
mov
test
mov
add
lret
outsl
cs
imul
lret
jg
pushf
orl
addr16
sub
fidivl
cmpsl
loopne
xchg
call
arpl
ret
or
orb
aas
cltd
das
sbb
lock
xchg
push
mov
nop
into
push
add
test
je
rorb
in
call
loopne
dec
call
cmp
push
or
cmp
jbe
cld
call
pop
icebp
cltd
pop
icebp
aas
jle
xor
shlb
cmpsb
cmpsb
cmp
out
jp
call
lods
nop
jg
jle
das
mov
lret
pop
call
rorb
ret
mov
push
jle
leave
enter
xchg
fdivrs
jg
xor
movsl
ljmp
sbb
inc
data16
fsts
lods
jl
and
mov
fwait
jge
jmpw
pop
add
pushl
cmp
jne
cmpl
incl
popa
in
pop
lock
pop
out
sbb
jmp
add
push
pop
sub
into
lcall
adc
ljmp
sbb
inc
stc
inc
outsb
out
es
aad
jno
push
adc
out
lret
pop
out
push
push
push
pop
mov
jg
addb
das
xor
dec
push
and
lods
cmp
dec
mov
cmp
inc
xor
pop
pop
roll
or
loop
adc
dec
pop
inc
mov
cmp
negl
movb
dec
cmpsb
ret
xor
bound
aam
adc
call
mov
leave
push
stos
les
dec
sar
pusha
pusha
add
insl
jg
outsl
mov
bound
fs
pop
call
push
pop
or
fidivrl
mov
mov
jo
jnp
ret
dec
clc
sub
or
mov
rol
int3
out
lcall
orb
xchg
jp
sub
cmp
jno
mov
jne
sub
or
test
adc
shrl
jmp
mov
pop
cmp
arpl
mov
mov
adc
pop
test
pushf
add
mov
mov
dec
mov
lcall
xchg
rclb
ja
loope
mov
mov
and
fistl
and
xchg
incl
call
lods
cli
dec
cmp
bound
or
lret
outsb
and
push
rolb
decl
mov
lea
into
out
sar
cmc
add
fs
gs
shrb
insl
cld
decl
cs
mov
shll
enter
loope
mov
aam
jg
test
mov
aas
mov
pushl
pushf
adc
ss
xchg
test
stos
cwtl
js
pop
frstor
fcmovnb
in
incl
outsb
stos
inc
and
mov
xchg
test
jg
mov
lea
int3
xchg
xor
and
mov
push
mov
outsb
fcomps
push
mov
sub
pop
clc
enter
or
inc
imul
mov
push
and
clc
call
sub
mov
fildl
cltd
push
push
pop
inc
ljmp
pop
imul
incl
test
cli
popf
mov
jmp
inc
mov
jle
movsb
daa
pushf
cld
push
leave
xor
push
push
mov
insb
pop
xor
mov
sarb
jle
fisttpll
push
sar
incl
cld
sbb
or
push
fsubl
cmp
adc
imul
ljmp
ret
add
stos
call
sahf
cmpsb
xchg
bound
sti
mov
divb
xor
xlat
cld
lock
pushl
lret
shrb
xchg
add
pop
adc
in
fwait
popa
jns
mov
cld
ljmp
fcoms
cmp
xchg
js
xor
in
out
sub
dec
test
pushl
jmp
lds
xlat
xor
lds
xchg
add
cmp
or
dec
sti
sbb
mov
mov
mov
mov
adc
jno
pop
jge
jmp
cs
ljmp
fwait
daa
rclb
sbb
jb
mov
jne
cmpsl
xor
iret
fwait
pop
aad
fcomip
decl
loope
push
jnp
shll
or
inc
lcall
sti
test
ljmp
cmc
decl
jmp
int
mov
out
aas
xor
sar
call
mov
xor
adc
mov
shl
sahf
adc
nop
sbb
push
jecxz
fcom
jmp
sub
test
sar
movsb
std
imul
ljmp
pop
xchg
std
int3
sub
dec
pop
aas
jb
dec
in
pop
das
sbb
dec
cli
faddl
mov
test
hlt
jecxz
sbb
ljmp
daa
call
movsb
mov
xchg
scas
aaa
popf
shll
cmc
jmp
push
sarb
mov
lcall
in
rorl
or
mov
push
arpl
jo
push
push
jmp
adc
int3
mov
inc
mov
jle
xchg
pop
clc
adc
mov
push
cmp
mov
mov
jmp
ss
loope
inc
repnz
jg
pushl
ret
fdivl
repnz
sbb
pusha
dec
lds
ja
shrb
dec
jbe
idiv
ljmp
xor
sub
sahf
push
xor
xchg
leave
pushf
jnp
ljmp
clc
nop
xchg
pusha
mov
mov
sub
iret
mov
xchg
sbb
hlt
in
push
xor
sub
jnp
call
fidivrl
dec
xchg
in
test
ja
les
aad
mov
sahf
gs
ret
add
jnp
add
sbb
sarl
data16
popf
jae
lret
jmp
loop
pop
jae
out
dec
sbb
cmpsl
test
adc
sbb
mov
jmp
xor
jmp
mov
mov
addl
cmp
dec
inc
cmp
aad
data16
jmp
pushf
subl
shr
mov
sbb
xchg
fadd
pop
cli
out
imul
ss
cmpsl
or
outsl
mov
pop
test
shl
out
clc
jne
ljmp
insb
push
sahf
mov
inc
loopne
fdivr
xchg
arpl
sbb
repz
or
loope
ror
popf
xor
das
sbb
or
enter
popa
mov
adc
dec
dec
xchg
call
testl
xchg
ljmp
shl
das
push
fiadds
cmp
call
pop
test
into
enter
stc
inc
jmp
lea
clc
inc
jmp
mov
movsl
mov
test
popa
cmpsl
add
dec
pop
jno
cmp
imul
inc
jp
jmp
cltd
sti
sub
sub
lock
lods
push
xchg
xor
ljmp
andl
mov
sub
sarb
pop
nop
in
arpl
fstpt
in
shl
mov
mov
loopne
pushl
cmp
dec
ror
out
outsl
popl
dec
fistpl
xchg
mov
sub
push
shrb
mov
test
and
push
pop
popa
les
cmpsb
pop
lock
cmp
cmp
add
jle
fcoml
pop
jg
jecxz
mov
sbb
adc
xchg
adc
pop
fsubrs
call
call
nop
sti
inc
mov
push
addr16
xchg
mov
and
push
push
pop
pusha
clc
jge
jg
and
into
sbb
int3
lds
decl
cmp
jb
pop
inc
push
scas
lock
call
cmpsl
setp
cmp
repz
bound
pusha
push
jge
push
dec
pop
adc
aas
lcall
sbb
stos
lea
cmp
out
xchg
orb
cmpsl
push
cli
xlat
push
inc
lcall
aaa
testb
movhps
cs
add
jmp
push
jp
jl
sbb
pushf
movsb
imul
stos
add
mov
pop
pop
mov
and
mov
jmp
push
lahf
jo
xlat
dec
imul
jle,pn
out
push
and
loop
lcall
roll
mov
popa
loope
pop
lock
or
in
rorb
std
sbb
into
out
int
mov
daa
inc
test
fbstp
sahf
filds
pushf
fs
jp
out
jne
call
sub
cld
addr16
jbe
stos
nop
jbe
repz
into
dec
pop
ret
shrb
int3
xchg
pop
bound
test
mov
movsb
sbb
jae
push
jecxz
ljmp
test
lds
fs
data16
fsubrl
jmp
daa
adc
jne
xor
aad
test
cli
fbld
cmp
and
stc
lcall
push
dec
movsl
jo
pop
jmp
xchg
hlt
ljmp
lods
add
xor
jmp
testb
cld
mov
test
push
sbb
cmp
mov
lret
cmpb
call
cld
mov
or
in
xchg
sub
xchg
cmpsl
sub
aad
ja
and
scas
cli
mov
or
add
bound
sub
outsl
and
jg
shrl
adc
lcall
int
jb
mov
mov
out
enter
test
xor
aaa
dec
adc
inc
in
mov
testb
jbe
pop
inc
mov
mov
mov
lahf
shlb
push
call
and
sarb
jae
add
pushl
xrstor
in
aas
cmc
or
lcall
incl
sbb
es
std
iret
test
cmp
sarb
loop
sarl
pushl
inc
and
subb
push
insl
aas
sub
pushl
pop
inc
cmp
jle
inc
fwait
iret
in
push
sub
fcomip
fisubrl
mov
outsl
aam
ret
addl
pop
xor
loope
pushl
decl
shll
dec
inc
into
jge
xor
bnd
mov
xchg
das
mov
int
cld
xchg
int
call
and
xorl
iret
out
lock
push
rcrb
scas
out
rcrb
add
jg
std
jbe
cmp
dec
lods
jmp
pushf
sahf
sub
pop
mov
sarl
cmp
arpl
lcall
xchg
sub
or
cmp
es
push
push
popa
pop
mov
jmp
xchg
clc
or
xor
adc
mov
dec
adc
and
mov
cmpsb
pop
mov
push
stc
xchg
add
decl
and
and
lcall
arpl
ja
int
cmp
jo
xlat
dec
pop
xchg
dec
jle
fs
lcall
mov
xchg
call
pop
outsl
push
mov
sub
das
ljmp
decl
cli
jnp
and
pop
into
sarl
sahf
or
adc
jmp
pop
movsl
pop
outsb
xor
lods
cmp
inc
sahf
call
xchg
mov
inc
xchg
cmp
into
loopne
cmpsl
arpl
mov
imul
jle
incl
cmp
jnp
cmpsb
xchg
and
mov
xchg
fimull
pop
xchg
pop
cli
leave
js
in
mov
xchg
inc
lea
jbe
pop
sbbb
out
into
fldcw
cs
rclb
call
imul
inc
lret
lods
mov
and
hlt
imul
mov
mov
es
pushl
ror
inc
xor
enter
test
and
xchg
jl
in
call
inc
nop
sub
ret
mov
push
stos
imul
es
jmp
sub
push
or
mov
xor
test
test
sahf
sbb
add
mov
out
rol
dec
scas
adc
test
jg
ss
aaa
scas
xchg
sbb
pop
and
ret
bound
popf
inc
mov
cmp
hlt
mov
jge,pt
lea
cmp
rcr
imul
clc
call
lock
lcall
mov
sbbb
stos
xor
arpl
lahf
jno
cmp
pop
imul
popl
push
xchg
xchg
and
cli
xchg
xchg
insl
ljmp
repnz
pop
mov
cmpsl
mov
jno
mov
test
mov
pushl
je
mov
inc
ljmp
leave
stos
je
leave
jmp
negb
add
push
movsl
jb
mov
js
cld
into
mov
inc
push
push
les
jb
into
or
pushf
lret
iret
out
mov
add
mov
jmp
sub
inc
fucom
xor
rcrb
std
xor
lods
xchg
mov
jbe
xchg
xor
insl
and
clc
call
daa
adc
dec
cmp
cmpsl
mov
std
int
jmp
pushf
xor
rcpps
xor
mov
ljmp
xchg
sub
das
cli
std
jmp
add
filds
jne
sbb
cmc
lock
in
fwait
or
or
les
and
decl
or
add
sub
cmpl
adc
insb
out
cmp
xor
add
in
mov
pop
insl
mov
xor
add
in
fistl
popf
xchg
mov
jbe
mov
lret
ja
and
xchg
lcall
xchg
lahf
daa
cwtl
inc
lds
and
mov
iret
sbb
loopne
jge
and
jmp
ljmp
jno
out
mov
test
dec
divb
mov
inc
pop
xchg
cmp
stos
rorl
jmp
push
xor
aad
rdpmc
cmp
dec
push
ds
push
pop
mov
jo
jae
cmp
movsl
imul
adc
sub
jbe
mov
cld
call
sbb
jg
or
scas
jns
inc
cltd
or
mov
adc
inc
push
fisubrs
decl
repz
pop
movl
dec
ret
xor
push
fstps
leave
aad
mov
lcall
push
mov
pop
or
xor
xor
repnz
cmp
dec
in
cwtl
sarb
cmp
jns
ror
mov
cmpsl
or
sti
icebp
push
frstor
inc
int3
int3
jns
jbe
mov
loop
mov
push
popf
into
aas
out
addb
or
decl
lahf
add
ret
cmp
sbb
sbb
mov
push
push
sbb
cmpsb
jbe
fcomip
mov
dec
xchg
ret
fmulp
sub
mov
loop
fmull
fwait
sbb
decl
xor
clc
xchg
call
call
subb
cltd
bound
inc
rcrl
push
ja
xor
outsb
sub
stos
push
pushl
leave
cltd
mov
outsl
aam
js
imul
push
mov
or
cld
jmp
cmp
sub
je
cld
lcall
loop
cmp
mov
nop
shrb
mov
ret
ror
inc
and
fnstenv
cmp
mov
sbb
add
mov
jecxz
scas
adc
push
rorb
xor
cs
test
or
inc
popf
pop
or
loopne
xchg
or
std
cmpsb
sub
aad
push
dec
call
out
nop
cwtl
test
mov
leave
sarb
mov
add
pop
inc
bound
sti
xor
outsl
lcall
fwait
cmovnp
mov
loope
imul
or
pop
cmp
test
sbb
loop
test
mov
jmp
and
daa
enter
sbb
jns
fcmovnbe
std
push
lret
mov
add
or
and
lret
lahf
pushl
movl
sbb
cwtl
das
mov
stc
cmp
cld
daa
mov
cwtl
adc
mov
jmp
xor
mov
and
cmc
movsb
into
xor
xor
jo
das
lcall
fdivs
in
xchg
repz
cmp
sub
subb
push
xchg
sbb
out
and
scas
sbb
or
inc
xchg
ja
ret
fisubl
pop
inc
out
lcall
push
fldcw
xchg
fcmovb
push
aas
sbb
inc
jns
pushl
pop
data16
jecxz
loope
popa
mov
fidivrs
jmp
xchg
loopne
push
pop
add
push
push
das
int
xchg
and
sbb
fs
mov
inc
cwtl
sbb
ljmp
cwtl
mov
xor
aas
push
or
pop
fcomp
pop
mov
sti
lcall
sbb
movsb
and
xor
jnp
push
loope
ljmp
stc
hlt
cwtl
xor
pop
repnz
adc
fidivs
lock
push
adc
cmp
es
testb
or
pop
test
pop
xchg
test
call
rcrl
inc
mov
scas
jge
inc
and
fnsave
xchg
and
das
mov
jecxz
sub
inc
out
ret
jp
cltd
fildll
icebp
pop
call
or
andb
les
popf
hlt
and
jg
ljmp
fisttps
stos
mov
stos
inc
and
in
aas
dec
insb
cmpsl
test
dec
jo
and
leave
cld
out
xlat
out
xchg
add
in
jp
push
cmp
lods
and
mov
sbb
incl
sbb
mov
jl
repz
or
mov
push
out
mov
pop
into
jno
int
stos
in
repz
cmpsl
shl
or
sarl
mov
push
popa
sbb
lods
iret
mov
pop
push
je
adc
sbb
or
or
stos
pop
ljmp
mov
or
push
fstpt
sarb
mov
sub
outsb
xor
cmp
sbb
shl
addb
hlt
lret
lret
and
add
mov
enter
sbb
lcall
call
leave
pushf
inc
in
sahf
sbb
jg
inc
jge
xor
sbb
shll
jae
into
rcll
scas
cmc
into
pushl
std
int
shr
je
por
frndint
cmp
adc
hlt
test
jo
in
mov
mov
lods
push
cld
dec
outsl
xchg
xor
push
adc
je
pop
cmc
stos
push
inc
out
repnz
ret
pop
pop
lcall
pushl
fsubl
iret
inc
jne
inc
push
sbbb
push
aas
mov
cmp
fcoms
mov
push
in
out
push
xchg
icebp
xchg
addr16
add
decl
or
movsl
mov
call
daa
jg
das
and
shl
mov
xchg
cld
call
out
jne
pop
cmp
mov
xor
xor
push
xor
pop
mov
xor
push
mov
push
insb
lods
in
call
lds
mov
push
add
cmpsl
push
and
in
xchg
pushl
cli
stos
jge
repnz
cmp
aas
divb
insl
outsb
xor
pop
mov
push
loopne
aam
xor
sbb
xlat
sub
jmp
repz
xchg
int
or
mov
lret
icebp
popa
je
dec
jg
decl
push
mov
sbb
cmp
icebp
mov
push
lds
mov
cmp
pop
jne
mov
and
jb
push
jge
test
incl
adc
faddp
or
add
dec
pop
sub
je
ljmp
xchg
inc
or
jmp
mov
jge
push
ror
jnp
bound
incl
in
in
adc
jbe
leave
fistl
ljmp
cld
decl
or
daa
lods
mov
repnz
clc
ss
push
dec
les
fbld
ss
cmpsb
mov
lcall
push
jge
rorb
call
sub
sub
mov
scas
ficompl
push
pop
aas
ljmp
mov
mov
ljmp
imul
jmp
lahf
sbb
jmp
inc
in
or
xor
js
inc
mov
ljmp
ljmp
xor
mov
data16
jecxz
mov
ljmp
shlb
cwtl
push
scas
mov
nop
push
call
cld
mov
arpl
fbld
cmp
dec
nop
jmp
cmpxchg
jb
xchg
inc
call
lcall
out
jnp
jge
push
gs
test
imul
inc
xor
mov
fisubs
pop
scas
inc
mov
mov
js
stos
out
mov
cmp
fdivs
cmp
add
cld
push
test
xchg
enter
add
inc
inc
aam
sub
cmp
inc
xor
test
cmpsb
test
xor
cli
pushl
pop
jle
mov
fadd
aam
ljmp
jb
out
or
pop
push
mov
scas
stc
sub
mov
pop
call
xor
sahf
lcall
pop
shl
shrb
adc
push
sahf
test
shlb
push
cmpsb
dec
xchg
adc
adc
sar
pushl
imul
pop
push
bound
and
fstps
adc
cmp
xlat
add
pushl
in
xchg
dec
cltd
cs
iret
je
mov
fisubs
lahf
fcmovnb
sbb
xlat
sbb
aad
cld
lret
in
or
mov
daa
sti
mov
lds
xchg
paddsw
mov
mov
pop
jnp
mov
dec
mov
push
jae
cmp
xorb
cmp
mov
xchg
push
std
inc
mov
test
aam
inc
xchg
mov
xchg
sbb
or
dec
lock
xchg
jmp
call
or
push
imul
hlt
fcoms
pushl
jmp
mov
nop
fadd
or
and
inc
dec
dec
push
jl
or
pop
gs
or
mov
pop
mov
cmp
lahf
dec
push
shr
and
mov
and
pop
sub
call
sahf
xchg
test
pop
stos
lret
and
lcall
mov
lret
scas
add
sbb
jae
fucomp
push
mov
ljmp
jmp
sbb
inc
jg
and
and
fwait
cs
lcall
jge
ss
push
dec
fs
pop
sar
mov
mov
sub
and
ret
pop
sub
pushl
cli
dec
movsb
iret
movsb
mov
aaa
mov
xor
or
jg
gs
addr16
cli
mov
lret
rolb
cmp
bound
ljmp
mov
dec
orb
aas
nop
ret
mov
push
push
in
scas
fs
mov
ljmp
add
or
xchg
sbb
cwtl
imul
mov
ret
mov
adc
lret
popf
fisttpll
decl
cmpb
and
lods
imul
clc
shl
jg
in
in
sub
inc
out
mov
jp
xor
lret
or
or
xorb
sub
gs
inc
fmulp
lret
ljmp
xlat
cwtl
or
pop
add
and
ja
jp
addr16
aam
and
and
fcmovb
sbb
ret
pop
mov
push
xchg
sub
pop
ds
cmc
decl
in
add
ss
mov
xor
mov
incl
sub
out
jle
mov
ljmp
mov
push
jae
cltd
loope
inc
inc
mov
xchg
out
movsl
loope
xor
das
cli
or
imul
or
xor
cmc
rorb
fs
mov
outsb
sub
xchg
jmp
jae
lahf
nop
xchg
jo
or
add
call
adc
repnz
lret
pop
out
fs
sub
or
test
sbb
aam
stos
inc
iret
or
sub
sub
incl
cmp
cmpsl
ret
dec
dec
and
sbb
movsl
sbb
jb
mulb
incl
jle
jle
push
aad
iret
cmp
popl
xlat
out
mov
cs
decl
lock
sub
xchg
es
out
mov
jb
call
mov
cld
imul
insl
add
mov
pop
and
rolb
xlat
data16
decl
and
lock
out
add
in
xor
sub
jmp
cld
push
inc
mov
push
int3
mov
icebp
inc
lock
mov
mov
sarb
dec
sbb
decl
push
pop
in
mov
icebp
aaa
mov
pop
shlb
mov
imul
je,pn
cmp
cmp
push
jae
cmpsl
out
add
adc
clc
incl
or
scas
or
push
push
loop
pushl
push
ss
movsl
cmp
loop
cld
ja
scas
ljmp
push
lods
ret
xchg
out
cmp
or
enter
imul
in
in
fsubs
loopne
out
mov
add
int
mov
stos
jae,pn
repz
std
jge
add
push
fcom
inc
mov
imul
dec
jnp
jg
and
xchg
outsl
inc
adc
push
das
ret
adc
cld
jmp
dec
sub
dec
pop
popa
lret
mov
stos
push
adc
mov
out
enter
jmp
inc
xchg
leave
test
xchg
add
sub
add
outsb
adc
push
adc
mov
loop
dec
xchg
das
gs
into
cwtl
xchg
push
inc
xchg
outsb
mov
mov
test
int
dec
push
jmp
test
fstpt
add
lock
mov
push
sub
sarl
jmp
adc
into
lods
decl
jle
in
ret
cmpsb
sub
xorl
stos
adc
out
mov
cmc
insb
jns
push
xchg
enter
or
fcmovu
add
mov
jmp
clc
aad
cmp
test
sbb
ljmp
clc
xor
int3
mov
jns
sti
jno,pt
pop
mov
clc
mov
incl
push
repz
and
cmp
sbb
pop
out
into
fldt
incl
mov
scas
test
and
jl
sub
pop
notb
sbb
arpl
cmc
or
pextrw
pop
pop
lret
stos
call
mov
faddl
adc
jnp
jmp
xor
push
jmp
push
stos
ljmp
mov
mov
dec
bound
sub
aam
je
mov
fldt
inc
ss
ljmp
add
test
xchg
cli
mov
push
inc
ret
pop
cmc
filds
mov
cmpsl
fiaddl
cs
pushl
data16
pop
lods
nop
or
xchg
es
sbb
leave
dec
jl
call
jb
mov
jge
repz
xchg
mov
ds
outsb
inc
lcall
aas
out
movl
dec
lret
sub
aas
lea
incl
pop
cli
adc
sub
das
push
sbb
clc
inc
jecxz
sbb
and
mov
stc
sbb
lea
or
fstpt
pop
dec
dec
xor
gs
ljmp
shr
mov
das
aam
fsubs
push
jmp
xchg
xor
shr
mov
fsts
fmuls
mov
out
dec
jae
xlat
adc
orb
ret
jae
fdivr
dec
add
bnd
mov
xlat
lea
cmp
cmpsb
rorb
cmpb
cmp
mov
test
push
hlt
lcall
incb
xchg
mov
data16
push
cwtl
cli
into
cli
sub
push
inc
in
mov
xchg
push
leave
sub
mov
mov
cmpsl
cmp
sbb
dec
test
insb
cmpsb
pusha
sahf
in
fstp
loopne
sbb
cmpsb
cmp
lock
xor
add
ds
sbb
pop
insl
adc
je
mov
insb
or
sub
mov
jle
lcall
shrb
in
imul
sbb
dec
shrl
stos
xchg
sbb
ljmp
in
xor
and
cmp
mov
andps
add
pop
sbb
incl
xchg
inc
daa
ret
pop
inc
add
adc
out
iret
jb
jl
ret
lock
popf
mov
jge
cmp
jge
or
xor
mov
leave
mov
adc
inc
ss
test
scas
mov
incl
push
or
scas
mov
push
in
dec
inc
add
pushf
add
add
mov
mov
jecxz
aaa
andl
pop
and
rorb
inc
mov
jl
jp
imul
das
or
lds
repz
dec
dec
or
mov
jmp
addr16
xchg
dec
inc
loopne
or
mov
out
mov
enter
jmp
ficomps
inc
adc
and
js
jo
movsl
lds
add
adc
cmpsl
add
in
mov
inc
cltd
pop
shlb
sarb
adc
jg
lret
loope
mov
sub
fisttps
lods
or
mov
inc
dec
cld
sub
ret
gs
jnp
cli
jmp
decl
out
cmpsl
stc
movsb
addl
push
mov
cwtl
lds
pop
xor
test
pop
call
call
dec
pushf
rcl
gs
je
lahf
dec
xchg
push
lock
lcall
hlt
loop
and
fcoml
pop
inc
shr
push
sub
fistpll
jns
call
hlt
push
iret
adc
xor
outsb
in
ffreep
rol
pop
cmp
jne
add
lcall
mov
stc
or
pop
mov
incl
cmp
or
xor
add
enter
mov
js
mov
or
incl
xlat
pop
pop
repz
lds
or
clc
inc
cmpl
sbb
mov
mov
call
mov
inc
jg
mov
adc
xor
decl
cltd
sbb
push
aam
lahf
mov
push
sub
stos
fdivl
mov
sarl
xchg
push
test
jno
movsl
hlt
negl
mov
jmp
and
test
mov
lea
in
fwait
popf
cmp
mov
lret
call
les
xchg
xchg
fwait
lahf
jmp
dec
adc
push
loopne
sarl
repz
dec
xlat
add
jmp
addr16
repz
sahf
xchg
inc
jb
out
dec
and
sbb
jno
dec
pop
xadd
ljmp
xchg
add
jb
test
cld
lret
fidivl
jl
mov
add
jg
js
and
ss
xchg
mov
jg
mov
outsb
rorb
xchg
pop
mov
add
fbld
shrb
clc
mov
mov
stos
ja
faddl
push
adc
mov
push
sbb
xor
push
cmpb
jp
ret
loop
inc
subb
xchg
test
jmp
popf
test
xchg
mov
adcl
lods
arpl
leave
test
mov
push
jbe
dec
test
scas
sti
and
loopne
cmp
inc
aam
lods
push
int3
pop
int3
push
push
popf
adc
mov
adc
mov
mov
fwait
call
out
loope
lods
inc
push
fidivrl
rclb
mov
insb
push
outsl
mov
push
mov
push
cwtl
pop
fdivrl
fwait
jle
cmpsb
movsl
jl
ljmp
out
sub
adc
std
add
or
and
ljmp
adc
sbb
pop
mov
or
test
aas
ret
fdivrs
cmpsl
incl
ror
out
push
add
mov
pop
push
out
shrl
and
mov
cld
lcall
pop
mov
adc
adc
fmull
mov
jg
and
inc
sub
dec
mov
mov
iret
add
movl
and
cmp
pop
sbbb
mov
mov
mov
addr16
rclb
cmp
sbb
in
icebp
sbb
faddl
insb
jmp
jg
and
call
cmpsb
popf
dec
xchg
jle
movsb
ja
and
cmp
loopne
and
mov
or
adc
mov
mov
ret
mov
pushf
push
lods
sbb
movsb
cmpsb
cmp
movsb
popf
or
fnsave
pop
in
jg
outsl
lods
sbb
enter
call
shll
call
jl
lods
pushl
push
jne
rorl
data16
mull
aad
fwait
dec
jmp
outsl
xor
cld
lret
popa
pop
testb
lock
fists
inc
or
pushf
xchg
or
lret
xor
out
decl
outsl
std
outsl
jg
push
mov
pop
add
pop
leave
push
and
fsub
add
cli
jp
or
add
arpl
mov
push
mov
repnz
int3
mov
out
xchg
test
and
decl
jp
mov
rcr
push
sub
sub
push
test
push
out
in
mov
mov
mov
filds
repnz
pop
ljmp
sub
ja
push
decl
jecxz
popf
jne
cmp
in
out
shr
lret
pop
xor
call
data16
pusha
or
xchg
dec
mov
adc
int
outsl
push
mov
movsl
insb
cmpsb
shlb
inc
popa
stos
lock
pop
loopne
incl
aas
add
mov
jmp
sbb
fcomip
ljmp
daa
outsl
fimull
in
push
cmpsb
mov
clc
mov
mov
test
sbb
jo
lods
jne
add
ljmp
pop
outsl
in
lea
mov
adcl
or
mov
sub
cld
sub
adc
jmp
into
pop
mov
out
pop
push
xchg
nop
sub
or
nop
pop
loope
cmpsl
sbb
ljmp
pop
lcall
and
pop
popf
repnz
enter
mov
pop
sub
cld
ret
mov
ret
shl
enter
dec
push
into
stc
push
out
mov
jmp
ss
cmpsl
mov
adc
push
out
xchg
test
mov
jb
ret
lret
ds
cmp
loope
mov
add
fcmovnb
dec
sub
mov
push
sbb
gs
sbb
adc
aas
testb
pop
and
jns
cmpsl
icebp
pop
in
clc
lods
sub
aas
adcl
sbb
and
std
gs
jge
jmp
cli
test
cmp
idivl
imul
or
pop
insl
or
sub
mov
nop
lods
sarb
mov
sarb
mov
sub
call
repz
jl
push
xchg
data16
xchg
mov
test
lahf
push
jg
jp
int3
iretw
daa
mov
mov
sub
pop
mov
and
sbb
jecxz,pt
sar
mov
mov
mov
andl
jecxz
add
xchg
cmp
jmp
jmp
int
xor
aaa
jno
inc
out
cld
or
cmp
jge
fidivrl
push
lcall
cmc
mov
cltd
mov
cltd
out
mov
fisttpl
jmp
jo
js
xor
call
cmc
xor
fidivs
adc
insl
roll
sub
mov
inc
adc
repnz
xchg
and
sahf
je
mov
test
jg
decl
test
add
xor
push
loope
add
aaa
cmp
pop
or
jno
push
std
inc
fisttpl
sub
call
sbb
scas
pop
test
dec
stos
sub
rorl
mov
cmp
xchg
ret
push
xor
js
push
mov
ljmp
ret
ret
aam
sbb
mov
xor
scas
stos
fildl
dec
cld
adc
xlat
jmp
insb
add
int3
inc
fs
ret
test
xor
stos
push
jecxz
mov
and
stos
and
xor
or
mov
decl
sbb
push
addr16
je
dec
loope
movl
incl
ds
test
xchg
cmp
loop
call
push
dec
ja
mov
sub
mov
mov
mov
and
or
cli
scas
addr16
imul
jle
push
cwtl
and
sbb
les
imul
mov
push
mov
mov
lods
add
loope
and
pop
push
fnstcw
bound
add
add
xchg
mov
sub
ja
pop
jg
imul
iret
out
loop
ficoml
nop
test
loopne
jo
pop
pushf
mov
roll
add
aam
jl
mov
jecxz
or
fcomp
sub
mov
ret
push
aaa
pop
hlt
jmp
outsl
loop
enter
inc
icebp
les
mov
fisttps
dec
pop
aas
cltd
icebp
xchg
lahf
mov
addr16
aad
insl
or
jmp
call
mov
test
add
test
outsl
stos
xor
data16
pop
adc
ja
mov
les
in
pop
adc
mov
mov
xchg
mov
call
xchg
sahf
pop
out
push
add
orb
aad
jge,pn
ljmp
cwtl
jno
jmp
sub
out
ss
xchg
cli
mov
ret
inc
out
xchg
cli
scas
cli
lcall
sbb
ret
and
popf
mov
addr16
iret
and
cmp
out
insb
fcompl
or
test
push
push
call
jl
mov
add
jno
mov
and
pop
sahf
mov
mov
into
mov
cmp
dec
loopne
sar
inc
cmc
test
decl
mov
ret
sti
arpl
sti
inc
je
pusha
in
pushf
mov
pop
jnp
dec
ljmp
add
or
popa
pop
int3
push
ja
inc
inc
xor
cmp
jg
jne
out
push
mov
cmp
data16
fistps
pop
cwtl
jg
mov
cmpsb
lret
cmp
adc
push
lret
sub
sbb
incl
adc
cmpl
enter
lds
xor
mov
insl
icebp
mov
adc
imulb
jne
dec
inc
add
sub
cmpsb
adc
adc
cld
cmp
and
js
pushl
xchg
mov
int
inc
mov
sbb
mov
and
and
lret
in
decl
aaa
pop
lret
cmp
jae
std
adc
cmp
jb
adc
test
jg
in
test
cvtps2pi
fdivr
sahf
sahf
jnp
jecxz
insl
test
rclb
or
jp
lds
js
mov
push
adc
and
out
aam
jmp
rol
aas
out
xchg
psrlw
jo
pop
popa
dec
and
adc
pushl
jb
movsl
xchg
nop
sti
orl
jecxz
enter
mov
dec
cmpsb
xor
jbe
rorb
xchg
imul
lcall
and
jmp
push
xchg
and
lret
mov
or
enter
xchg
insb
or
sub
pop
cmp
xor
cmp
icebp
decl
add
cmpsl
mov
notl
xlat
mov
fisttpl
shr
stc
cmp
xchg
clc
push
xchg
movsb
add
jno
fistps
into
test
jmp
push
cmp
xor
fcmovnb
mov
add
repz
dec
xchg
fiaddl
xor
frstor
lock
hlt
fdivr
lcall
xchg
pusha
or
hlt
pop
sub
inc
inc
adc
push
adc
scas
push
inc
pop
dec
inc
add
jp
jmp
xor
fisubrs
cs
lahf
cmp
mov
popf
jnp
mov
dec
push
ffree
fisttps
inc
cmp
xor
mov
mov
cmp
and
inc
jle
cmp
mov
lds
push
stc
pop
addr16
jo
jo
or
arpl
jmp
decl
nop
aad
repnz
lea
xchg
ljmp
mov
loop
push
adc
dec
push
int
stos
and
inc
mov
push
mov
ljmp
push
pop
aas
mov
orl
cmpsb
adc
jg
and
fucomp
mov
pop
test
out
int
dec
aaa
fcom
ljmp
addr16
sub
adc
decl
pop
aaa
sub
mov
adc
jl
sub
mov
sar
ja
xchg
adc
lods
cmp
es
call
sbb
outsl
jmp
lret
loope
fimuls
test
fsubr
xor
mov
decl
int3
scas
sub
mulb
mov
cmpsb
push
adc
mov
xchg
fs
fbstp
jns
xchg
mov
les
pop
xor
mov
jb
pop
jecxz
test
loop
xor
or
jno
inc
imul
jecxz
outsb
movsb
or
pop
xor
xor
outsl
jp
sub
xchg
in
mov
arpl
sti
ljmp
movsb
mov
ljmp
xchg
xor
imul
decl
pushf
or
and
inc
cmp
sub
dec
adc
dec
out
outsb
and
neg
aaa
idiv
ja
cli
in
sbb
leave
scas
call
push
jae
sub
arpl
fidivl
fs
mov
mov
or
into
push
push
push
mov
daa
mov
bound
ds
sbb
mov
ljmp
lret
or
lret
add
into
inc
or
clc
cli
cmp
xchg
popa
call
ficomps
jg
out
pop
popa
sbb
int
outsl
mov
sub
xchg
pop
or
imul
sar
add
or
sbb
movsb
mov
jg
out
sbb
and
dec
and
push
incb
pop
dec
mov
jbe
cmp
jg
pushl
lea
or
xor
in
jnp
add
add
xchg
js
dec
mov
mov
mov
insl
in
leave
sbb
xchg
mov
ret
lods
jg
jmp
fdivr
rorl
fnstcw
pop
sub
dec
inc
mov
ljmp
in
mov
pop
cmp
or
pop
stos
fcomps
mov
pop
xchg
xchg
lret
lcall
js
rcl
decl
sar
inc
mov
mov
dec
loopne
imul
xchg
test
mov
pop
inc
jecxz
xchg
ret
int3
mov
lahf
jne
cmp
adc
loop
mov
mov
std
xchg
idiv
decl
ret
add
rorl
pop
mov
incb
mov
xor
mov
lcall
fsts
mov
mov
jo
add
negb
lret
das
filds
inc
xor
mov
enter
jg
sub
mov
jle
cltd
call
loopne
or
cmc
ss
arpl
adc
aam
es
out
dec
insl
mov
addr16
enter
test
inc
mov
mov
jge
mov
pop
or
pop
mov
adc
sbb
cmp
sahf
xchg
sub
decl
jno
mov
jmp
test
cld
roll
lcall
xchg
mov
and
or
xor
clc
mov
popf
cld
jmp
stc
adc
cmp
sub
test
popl
mov
mov
pushl
xchg
cmpsl
int3
aam
popa
enter
test
aaa
sub
ret
filds
jb
pop
xor
jnp
push
cmp
xchg
mov
mov
pop
pop
rcl
pop
and
jg
mov
call
lcall
mov
inc
outsb
jne
and
xchg
dec
pop
pusha
mov
lcall
decl
test
sub
fidivrs
sarb
imul
and
incl
sbb
lea
enter
dec
pop
loop
addr16
ds
negb
idivb
sbb
shll
sbb
ljmp
sbb
pushf
mov
jne
mov
mov
ja
insl
cs
pushl
in
mov
adc
loope
cs
mov
pop
xchg
jne
jae
and
sbb
decl
out
repnz
and
mov
push
std
mov
test
mov
mov
mov
inc
sbb
jl
ret
mov
add
out
add
cmp
pop
adc
je
das
sbbb
hlt
pushl
bound
mov
lods
lods
add
das
dec
ljmp
mov
call
lea
into
cmc
mov
dec
inc
mov
jg
sbb
push
fcomp
fisubrs
call
or
inc
add
pop
sahf
cld
inc
ret
decl
mov
sarl
jae
outsb
ss
or
push
aas
push
mov
push
cltd
cmp
jg
or
aaa
cld
aaa
imul
repz
jg
rorb
cmp
xchg
or
je
das
jp
fdiv
dec
ret
popa
inc
lock
aas
sbb
xchg
test
adc
jg
sub
hlt
adc
sbb
std
fsubr
add
inc
out
add
and
leave
sahf
xlat
push
jge
mov
ljmp
cmp
mov
mov
push
mov
into
pop
insb
and
loope
call
jmp
pop
cld
xchg
jmp
inc
mov
hlt
pop
mov
imul
xchg
and
mov
pop
ljmp
insl
inc
ret
sub
or
decl
pusha
mov
popa
sti
push
int
clc
jns
leave
data16
mov
jmp
sti
shll
xchg
mov
outsb
outsb
pop
jle
daa
ds
out
jmp
dec
and
cmp
pop
outsl
sbb
cld
sub
outsb
xor
ret
pusha
jg
icebp
insl
sbb
adc
test
bound
test
mov
xchg
imul
loop
push
out
mov
fidivl
icebp
jp
mov
inc
or
push
lret
jb
ljmp
sub
xor
and
xor
stos
and
pop
icebp
xor
idivb
addb
shr
sub
inc
cmp
lock
test
jmp
mov
aas
xor
stc
inc
mov
jge
rcl
gs
xchg
push
push
enter
xor
shlb
mov
imull
inc
loop
gs
fs
pop
mov
mov
jle
add
and
lret
sbb
outsl
sbb
pop
inc
dec
mov
mov
sub
aaa
fs
dec
mov
incl
mov
jno
lock
add
jmp
in
inc
enter
in
dec
shll
dec
bound
dec
inc
xchg
xchg
or
std
sarl
inc
add
fs
push
jne
pop
sub
cmp
into
enter
jae
pushl
push
push
pop
jmp
sbb
or
jl
fcoml
push
xchg
mov
adcl
incl
sbb
sub
fcomp
loop
and
pushl
push
xor
scas
movsb
xor
out
ficoms
lcall
lcall
repz
ret
and
and
insb
or
mov
xchg
inc
decl
enter
fdivrl
xor
add
pop
test
test
mov
xchg
subl
pop
mov
data16
fwait
lods
call
and
out
les
inc
xchg
or
xorl
pushl
cmp
jbe
mov
popf
shl
bnd
addl
or
incl
push
mov
mov
loopne
adc
sti
mov
push
cmp
sbb
dec
ss
fildll
pmullw
or
incl
jae
dec
inc
ss
and
jp
lods
jne
jl
fwait
pop
push
cltd
decl
dec
movsb
push
push
ljmp
stos
push
ds
push
std
mov
scas
mov
jo
push
inc
lret
xor
xchg
jg
lahf
aaa
cmp
in
mov
jmp
ljmp
ljmp
push
mov
in
cvtpi2ps
shl
mov
push
xchg
sbb
call
xor
dec
cmp
cmp
pop
xor
lcall
jl
pop
lods
ja
cmp
mov
pop
jecxz
inc
mov
xor
enter
mov
add
sti
xor
js
in
add
xorl
xchg
mov
sahf
cld
pushl
popa
dec
gs
mov
shlb
aas
xor
bound
cmp
std
jg
add
in
and
mov
mov
cld
push
inc
push
lods
outsl
lods
call
sahf
mov
jmp
loopne
in
ds
adc
xchg
jmp
dec
fistps
lock
and
jle
stos
jno
jnp
scas
pushf
and
mov
test
sub
nop
cmp
jg
decl
dec
mov
fs
add
lods
xchg
pop
insb
scas
into
leave
sub
xchg
jmp
sbb
inc
sub
and
repz
push
mov
mov
dec
les
mov
loop
cs
out
das
sub
test
arpl
das
lcall
movsb
add
aaa
es
addr16
div
dec
pop
inc
ds
rolb
mov
hlt
cmc
dec
cmpsl
adc
pop
call
cmp
into
je
lods
fwait
aam
js
and
pop
jae
pop
sbb
mov
jp
mov
dec
movsl
das
ja
push
push
cld
mov
sub
push
pop
idiv
mov
aaa
push
fists
in
out
je
and
iret
leave
adc
ljmp
inc
xchg
pop
push
rorl
aaa
jecxz
dec
mov
mov
xor
enter
stc
dec
out
add
jecxz
mov
xor
rorb
arpl
jp
and
dec
or
call
and
cmpl
sarl
mov
xor
movsl
outsl
aaa
decb
mov
in
shrl
lret
sub
add
outsl
sub
fldl
xchg
ljmp
inc
outsl
xor
aas
sti
add
fwait
sub
int
in
bound
outsl
ja
xor
lcall
adc
jae
fsub
dec
imul
stc
push
loopne
data16
test
add
rclb
push
adc
mov
inc
dec
lahf
pop
pop
les
pop
push
test
orb
cmp
imul
jmp
iret
stc
std
adc
xchg
mov
scas
xor
cli
jge
dec
leave
jp
imul
xor
incl
xor
mov
sub
loope
ljmp
adc
pop
xchg
xor
rcrl
sub
ljmp
jne
data16
into
mov
aas
addl
stc
imul
xor
jmp
rcrb
enter
jle
rcrl
aad
cltd
sbb
jae
in
pop
je
adc
lret
rcll
pushl
cmp
and
push
iret
push
pushf
sbb
mov
test
lock
inc
incl
dec
insb
xlat
in
nop
enter
dec
lds
lods
fildll
icebp
dec
jno
mov
enter
aam
or
idiv
dec
mov
in
mov
jns
ss
push
or
insb
cmc
sub
rclb
aad
inc
lock
cmp
inc
mov
jmp
loop
push
shrb
xchg
cltd
mov
xor
fidivl
sbb
pop
inc
mov
mov
inc
pushf
xchg
dec
or
add
or
xchg
arpl
mov
lcall
inc
jb
xor
daa
sti
and
fsubrl
jle
cmp
or
arpl
cmp
mov
mov
jo
push
sahf
insb
push
cmc
stos
jb
cmpsl
out
ja
in
out
mov
and
or
cmpl
ljmp
dec
jg
cmpb
mov
cmpsb
or
mov
lea
xorb
mov
xor
dec
popf
sbb
and
push
add
push
cli
and
push
cmp
or
pop
jecxz
xor
jle
ljmp
adc
cmpsl
ret
cmp
cs
fildll
imul
jg
test
sbb
lcall
pop
pop
aaa
cmc
std
jecxz
clc
enter
roll
add
cmpsb
aaa
xchg
decl
out
ja
xchg
stc
lret
stos
aaa
dec
decb
arpl
pushl
pop
movsb
xlat
enter
jne
mov
orl
dec
jp
popa
sbb
jmp
ja
stc
movsb
jo
push
popa
push
in
dec
setae
pushw
push
dec
sbb
or
rcrb
jecxz
mov
pop
pop
xor
loopne
mov
pop
fstps
mov
out
fistl
jg
lock
adc
fmuls
inc
jae
in
ss
stos
mov
mov
int3
dec
je
adc
sahf
loope
je
inc
dec
jmp
adc
notb
fs
pop
push
fcmovb
test
sbb
mov
push
je
inc
jns
call
insl
je
test
cltd
xor
into
and
gs
cmp
iret
inc
hlt
and
dec
dec
jge
lret
out
mov
xchg
call
jmp
call
sahf
mov
es
add
bound
pusha
dec
pushl
test
into
sub
iret
dec
movsb
mov
cmp
mov
loopne
pop
lahf
aad
call
call
xor
mov
adc
adcl
shrb
es
addl
fcmovne
adc
sbb
jg
sub
dec
pop
jnp
add
mov
jnp
rcrl
enter
outsl
fadds
mov
mov
dec
xchg
cs
aaa
adc
int3
pop
lcall
add
loop
jne
and
xchg
pusha
adc
cmp
repnz
fs
ja
icebp
lods
loope
icebp
stos
scas
call
repnz
cmp
mov
dec
mov
sub
repz
ret
sar
sub
adc
lret
inc
mov
call
xlat
in
pop
mov
mov
in
mov
aas
test
sub
mov
mov
mov
nop
sbb
aaa
dec
ror
jmp
adc
jbe
test
cmp
push
push
xor
rcll
addb
inc
out
cmpsl
jmp
mov
inc
pop
pop
fidivrl
test
add
ret
lahf
push
fnstsw
and
decl
lock
jno
cwtl
pusha
xchg
lret
xor
push
mov
pop
dec
dec
popf
add
mov
faddp
dec
pop
jge
gs
aad
pushf
lret
lahf
dec
repz
jl
cmp
in
out
aam
sbb
lcall
cmpsb
sub
mov
inc
testb
cwtl
scas
adc
hlt
in
mov
pop
jae
sub
call
ja
outsl
xchg
xchg
enter
jnp
mov
out
pop
inc
sahf
test
mov
inc
ljmp
jnp
pop
mov
or
std
out
xor
rcrl
or
jmp
popa
mov
mov
decl
adcb
push
mov
ret
das
jne
sub
imul
and
pop
cld
xchg
and
jle
dec
fdivs
pop
xor
push
mov
mov
or
and
pushf
rcl
lods
jle
in
and
add
subb
outsl
clc
or
inc
jno
and
and
cld
loopne
clc
dec
jg
sarl
mov
lcall
ja
outsl
mov
mov
dec
push
inc
sti
pop
mulb
sbb
xchg
call
cmp
ss
add
xlat
inc
add
test
sub
test
add
xor
mov
test
push
jno
push
mov
out
adc
loopne
mov
inc
xor
mov
test
sub
fwait
das
jb
jo
int3
fistl
ss
adc
pusha
sub
xchg
mov
scas
test
cwtl
mov
cli
fwait
mov
enter
in
jmp
jmp
xchg
xor
leave
mov
pusha
or
cmpsb
or
fs
rol
lcall
pop
ss
push
nop
mov
shlb
fcomip
jmp
mov
mov
cltd
dec
xor
pop
sub
out
dec
dec
or
insl
push
cmc
data16
pushl
xchg
loope
clc
sbb
sti
cmp
in
sub
mov
ljmp
push
mov
mov
sub
mov
mov
sub
call
inc
sbb
mov
pop
out
push
push
test
cld
stos
mov
jge
sbb
js
dec
mov
fisttpll
pop
jnp
sahf
aad
jo
push
test
setb
lcall
iret
popf
cmp
fcompl
xchg
scas
xchg
pop
ret
enter
xchg
test
ficoml
outsl
add
stc
jp
sub
imul
cmpsb
adc
mov
loop
inc
add
call
int
ret
mov
sub
xorb
and
out
into
arpl
decl
mov
mov
xchg
aad
mov
repz
loopne
cli
pushl
test
popa
mov
cs
scas
adc
fisttpll
sbbl
aaa
ljmp
adc
xor
xor
adc
cmp
lret
std
pop
sbb
lcall
shl
sbb
pop
mov
jb
repnz
mov
or
dec
decl
mov
mov
fcompl
std
xor
dec
push
inc
mov
mov
xor
sar
outsl
clc
lcall
and
add
call
mov
pop
daa
in
lret
sub
xchg
mov
decl
inc
pop
and
sbb
mov
hlt
jle
inc
aaa
dec
mov
aam
ljmp
data16
mov
xchg
rcrl
aaa
cmp
arpl
js
inc
pushl
es
icebp
pop
pop
cmp
add
clc
xor
movsl
mov
jbe
cltd
jmp
jge
mov
sub
inc
xor
or
cs
insb
sbb
fwait
mov
clc
pushl
sbb
sub
divl
imulb
std
pop
icebp
pushl
pop
xchg
shr
movsb
push
push
dec
stos
push
cmpsb
lahf
add
inc
jg
or
ja
loope
adcl
rolb
push
out
in
dec
hlt
scas
adc
xchg
shrl
cwtl
xchg
jns
adc
cli
out
cmp
mov
inc
pop
out
cmp
pop
das
and
jno
addr16
sub
rorl
outsb
rcrl
orb
call
repz
sbb
jmp
cmc
push
mov
mov
xchg
leave
lcall
loope
mov
push
shrl
flds
add
pop
sub
jl
mov
sub
and
sub
test
cmp
movsb
jb
in
loope
imul
std
scas
rcll
cmp
repnz
gs
jg
in
loopne
and
out
loope
cmpsb
sahf
js
and
cmp
jo
insl
insb
and
dec
and
jae
or
enter
addr16
xchg
or
ss
incl
popf
adc
insb
mov
rcll
fbstp
fadd
or
js
jmp
dec
bound
add
jge
adc
clc
xor
mov
xor
jne
lcall
cmp
jge
pop
test
lret
cli
leave
les
in
inc
sar
or
jbe
repnz
mov
ret
cmp
mov
jo
xlat
fld
inc
out
jbe
and
fdivr
jg
fcomps
aas
pop
mov
adc
pop
in
sub
out
out
xchg
pushl
enter
or
inc
frndint
mov
lret
dec
adc
pop
sahf
imul
movsb
xchg
pop
in
test
in
push
ret
call
mov
or
mov
or
imul
fwait
inc
lods
push
lods
nop
test
incl
cmpsl
mov
lcall
add
add
roll
inc
inc
call
ljmp
imul
add
lock
inc
dec
ds
bound
inc
cmp
call
pop
add
loope
push
cld
mov
bound
into
pushf
jmp
xlat
scas
dec
inc
stos
nop
mov
push
in
test
mov
mov
cmp
int3
dec
cmp
or
dec
ja
pop
ljmp
mov
inc
push
and
xchg
inc
adcb
call
jl
scas
pop
sbb
mov
push
lock
xchg
insb
in
in
dec
push
ljmp
and
cmp
add
and
call
xchg
fldenv
jno
movsb
cwtl
cwtl
push
jmp
mov
mov
mov
sbb
loope
loope
daa
popf
mov
mov
decl
incl
in
pop
rcrb
shr
sahf
test
cmp
sahf
mov
inc
ljmp
rol
push
inc
add
pop
movsb
sub
or
fstpl
cli
fs
lret
das
xchg
loope
lcall
mul
dec
adc
mov
push
xchg
lock
movsl
jg
popf
or
pop
std
popa
jmp
shrb
loopne
cmp
dec
lods
xchg
andl
xchg
shrl
lret
fs
out
ficompl
mov
sbb
xchg
outsb
mov
cmp
adc
repz
ret
jecxz
fs
fsubp
popa
das
fnsave
inc
stos
outsb
push
sbb
ljmp
mov
pop
cli
rolb
call
mov
push
insl
xchg
xor
pop
xor
add
jmp
jp
int
ljmp
insl
incl
hlt
inc
out
fists
mov
stos
jmp
imul
std
xor
mov
jo
mov
or
inc
lcall
cmp
inc
scas
push
test
xor
lcall
cli
dec
xchg
mov
pop
pushf
cli
cld
mov
rcrb
push
adc
insl
fnstsw
jecxz
into
jg
mov
cltd
cli
insb
cwtl
imul
jg
jp
xchg
jae,pt
dec
stos
add
pop
loop
pop
das
adc
cmpsb
scas
mov
incl
cltd
insb
xchg
jg
and
pushf
mov
insl
add
xchg
dec
mov
decl
divl
mov
dec
orb
sub
xchg
incl
inc
push
push
lods
dec
cltd
pusha
jl
xlat
fs
mov
cmp
popf
lds
lahf
out
mov
add
pop
mov
ds
mov
cmpsl
jb
cmp
or
ljmp
sub
shlb
dec
shlb
sti
xchg
inc
test
es
sub
adc
jmp
mov
pusha
jge
sub
cli
jmp
ficoms
mov
jne
rcll
adc
mov
pop
lds
stc
jbe
decl
jo
mov
add
inc
add
lahf
pushl
mov
mov
sbb
test
shll
ds
in
iret
xchg
rol
pop
nop
or
lea
in
and
call
inc
cmpsl
into
lcall
movsl
lods
pop
mov
ret
cs
add
adc
and
sbb
popa
mov
fistpll
incl
mov
lret
jb
inc
imul
and
mov
leave
jnp
cmp
andb
and
cltd
pop
repnz
aad
mov
inc
movsl
inc
iret
nop
sub
push
enter
mov
push
movb
inc
jg
js
cltd
cmpsb
sub
movsb
sarb
je
pop
fistps
filds
lds
stc
hlt
cmp
iret
push
adc
xlat
stos
mov
adc
fcomip
cmp
xchg
lahf
adc
imul
testl
push
outsb
rcrb
decl
outsb
cmpsl
mov
out
into
lock
mov
xchg
movsb
scas
jecxz
ss
push
es
sub
clc
decl
daa
dec
cmp
icebp
scas
shlb
jne
pop
mov
pop
push
dec
cmpb
sahf
and
rorl
addr16
in
iret
inc
or
jns
jo
inc
daa
dec
pop
xor
adc
in
pop
mov
bound
pop
loopne
mov
mov
pop
leave
fcompl
or
mov
mov
nop
scas
scas
jo
pop
inc
mov
sbb
icebp
dec
push
cmp
cmp
inc
sbb
clc
ljmp
stos
or
movb
incl
adc
push
dec
sbb
decl
hlt
or
mov
sub
or
jge
xchg
lahf
mov
aad
xchg
jg
adc
idiv
sub
inc
int3
add
mov
cmpsb
mov
fdivrs
call
cmp
jl
and
repz
repnz
loope
es
push
sahf
push
imul
std
call
xor
pop
and
sti
push
aad
rclb
cltd
lcall
dec
mov
inc
mov
jecxz
enter
cmpsl
and
push
cmpsb
adcb
jp
jo
lcall
inc
xorl
pop
adc
stos
pop
cmp
nop
cld
sub
xor
cwtl
sub
enter
call
icebp
pushl
fdivrs
push
out
push
mov
push
out
fldl
mov
subb
rcr
pushl
xchg
mov
aam
sbb
lret
sbb
mov
stc
cmp
ret
push
or
mov
decl
jb
cli
add
and
fistpl
push
fcomps
push
and
aam
mov
mov
test
cmp
outsb
mov
enter
xor
jmp
pop
dec
inc
or
adcb
lcall
pusha
push
pop
push
in
adc
or
add
pop
test
jg
fistpll
push
rcr
dec
xchg
imul
popf
in
mov
sbb
insb
jnp
lock
ja
sar
cwtl
lods
arpl
push
repz
test
and
aas
es
mov
inc
iret
or
or
inc
and
pushl
andb
inc
cmp
ljmp
stos
push
ret
insl
je
lods
pop
gs
dec
cld
pop
cs
xchg
sbb
test
mov
mov
add
xchg
xor
jns
mov
in
dec
push
gs
fcmovbe
outsb
jae
mov
ficompl
mov
sbb
fdivl
jae
push
test
imul
clc
movsl
inc
lea
inc
in
ljmp
dec
outsb
emms
out
lock
arpl
dec
mov
mov
lea
fwait
jb
sbb
mov
js
jp
xor
sbb
xchg
lds
mov
sub
cmpsb
or
sub
decl
jno
filds
pop
xchg
bound
mov
test
add
sbb
push
incl
fidivs
dec
movsb
ret
jns
and
faddl
pusha
cmp
roll
or
or
cmpl
call
out
lret
sbb
and
outsb
mov
mov
enter
test
jnp
cld
in
adc
les
sub
pushl
or
adc
inc
inc
mov
adc
jmp
cmp
jmp
mov
pop
push
lahf
or
sub
mov
inc
or
lcall
push
adc
mov
push
ljmp
xchg
aam
push
add
movlps
cmpsl
popa
out
cmp
lcall
das
leave
bnd
repz
lret
adc
jno
mov
hlt
add
mov
inc
pop
jno
out
mov
or
push
cmp
and
insb
cmpsl
insl
icebp
or
aas
sub
pushl
inc
jp
jge
push
sub
jmp
dec
push
add
ret
mov
mov
xchg
decl
addb
mov
ret
out
xchg
jne
mov
pop
jl
addb
xlat
je
lcall
or
cmp
and
cli
lcall
xor
outsb
ss
loopne
mov
cmp
mov
ljmp
dec
in
xchg
or
adc
aaa
mov
ja
pop
leave
inc
sbb
and
lea
push
daa
cmp
mov
mov
inc
rcrl
push
pop
mov
cli
cmp
popa
aam
or
shl
add
or
pushl
rcl
adc
test
mov
scas
pusha
xor
mov
and
imul
and
test
push
addr16
and
loope
in
mov
ss
inc
out
adc
jg
ljmp
or
ret
scas
add
pop
adc
xor
data16
cwtl
lcall
lods
sub
cmpsb
daa
jns
inc
mov
aas
ja
je
jnp
pop
xor
hlt
js
pop
imul
adc
divb
jnp
add
popf
jo
into
push
into
jnp
shlb
cs
pusha
arpl
mov
sub
jmp
out
movsb
push
and
lcall
fsubrs
stc
push
pop
jmp
jmp
into
mov
jecxz
movsl
dec
cmp
lds
in
pushf
or
sahf
add
cli
stc
inc
or
sub
xchg
mov
mov
push
and
ror
jmp
mov
adc
sub
cmp
inc
inc
icebp
test
dec
pop
push
mov
int3
cwtl
dec
mov
adc
in
fcoms
sbb
aaa
sub
cld
insb
stos
cmpsb
iret
mov
mov
push
lcall
sar
mov
xor
iret
add
mov
addr16
lcall
insl
in
sbbl
pavgw
cmp
mov
xor
repz
andb
lahf
into
cmpsl
loope
adc
dec
dec
aad
leave
ljmp
mov
outsl
mov
push
sub
add
pushl
push
dec
mov
rol
dec
cltd
sub
mov
inc
pop
stos
out
ds
movsb
lock
xor
pushl
add
std
cmp
out
cmpsb
out
and
add
insl
push
push
cltd
in
lahf
cld
fwait
xchg
mov
xchg
hlt
das
adcb
shrb
jmp
jo
dec
dec
push
repnz
mov
test
mov
dec
mov
or
rep
inc
pop
add
jbe
lea
push
int3
inc
lds
in
imul
push
pop
sub
sbb
incl
fstpt
mov
sub
inc
mov
mov
mov
or
dec
addr16
cmp
jmp
popf
jl
imul
add
leave
push
iret
mov
xorl
iret
or
cmp
lock
decl
mov
ja
dec
fdivs
ljmp
adc
sbb
call
int3
testl
add
int
decl
cltd
data16
popf
shrb
sarb
mov
jg
cli
jns
mov
out
sub
pop
sub
cld
add
xchg
xchg
inc
jl
and
cltd
mov
mov
aas
add
in
inc
xchg
mov
cld
or
fcomp
xlat
mov
rcrb
js
mov
inc
add
inc
leave
mov
ja
add
mov
arpl
mov
jb
cmp
inc
lea
outsl
pop
inc
pop
orl
push
mov
call
mov
fdivrl
dec
shl
test
aaa
loopne
and
jge
push
icebp
pop
mov
lahf
sub
mov
mov
inc
xor
in
push
gs
mov
mov
jae
jmp
mov
imul
rcl
sbb
xor
call
aaa
cli
adc
fidivl
mov
out
ss
mov
lock
mov
dec
or
fsubp
outsl
xor
mov
xor
pop
mulb
pop
outsb
lret
insb
mov
sbb
cmpsl
cs
xorb
mov
cmp
jmp
out
insl
shl
or
lods
adc
mov
cld
ljmp
and
loope
xlat
movsl
adc
bound
mov
mov
fwait
inc
add
hlt
lcall
mov
add
push
ret
test
pop
sub
cmpsb
call
mov
push
rcl
call
xchg
repz
fsubrl
add
jmp
int3
jg
test
push
outsl
pop
in
clc
adc
jmp
mov
mov
dec
movsb
inc
inc
jp
jae
cmp
lret
mov
mov
lcall
lea
ljmp
mov
hlt
mov
popf
mov
jge
sbb
mov
sti
push
jne
out
dec
mov
pop
add
sub
jo
scas
ss
pop
pusha
call
hlt
popa
fmuls
ret
push
or
lret
sar
outsl
stos
je
mov
rcrl
fdivrp
and
xchg
cmpsl
adc
inc
ljmp
mov
bound
gs
js
clc
hlt
ljmp
cli
jns
jns
and
sbbl
jle
popl
pusha
nop
cmpsb
insb
pop
arpl
xor
jno
ror
jne
pop
insb
movsl
mov
ljmp
push
pop
popf
push
aad
xchg
clc
mov
push
mov
mov
jmp
out
mov
pop
out
pop
add
popa
mov
xor
shlb
mov
mov
dec
dec
in
mov
les
call
xchg
outsb
mov
sahf
jmp
mov
lret
je
stos
test
jae
dec
sub
inc
mov
das
cwtl
js
idiv
daa
mov
push
add
scas
push
insb
sahf
outsb
fwait
incl
mov
decl
cmp
jb
sub
mov
dec
inc
insb
lret
xchg
cli
cmp
mov
mov
push
xchg
adc
mov
sbb
fisubrs
mov
pushf
or
sub
mov
jae
das
mov
and
iret
int
jne
out
mov
ja
int3
mov
std
decl
fisttpll
es
push
jp
arpl
jmp
fs
jg
mov
mov
clc
test
lcall
dec
pop
mov
or
add
xor
pop
and
hlt
jo
out
xor
rcl
int
aam
pushl
mov
adc
add
lods
jae
jo
out
call
sub
lcall
xchg
sahf
loope
xor
and
js
inc
call
add
xchg
aaa
cmpsb
push
jbe
outsb
adc
aad
push
cld
mov
popf
xor
inc
dec
ficomps
test
icebp
cmpsl
daa
movsl
stc
jg
test
xchg
pop
mov
pushl
mov
cmp
lret
fcoms
in
mov
bound
xchg
sub
pushl
mov
sbb
int3
out
pop
cwtl
mov
push
dec
mov
add
and
inc
push
jle
inc
xor
mov
aam
aam
fidivrl
cmc
mov
rcr
into
divl
pop
cld
ljmp
cmpsb
shrl
cmp
in
adc
adc
stos
fbld
push
rcrl
xchg
clc
mov
and
ja
ljmp
inc
cmpl
movsb
sbb
call
call
push
fstl
stc
jo
imul
pop
mulb
adc
loop
loope
cmpsb
sub
add
enter
stos
and
movsl
insl
jne
jnp
xchg
cmp
pusha
ret
leave
sti
xlat
xor
pop
mov
pop
push
popa
pop
stos
or
xchg
pop
pop
mov
inc
movb
jg
call
lahf
nop
dec
push
fisubl
loope
dec
int3
sub
mov
jmp
xor
inc
scas
repnz
jge
sbb
out
andb
xchg
xchg
push
sti
cmpsl
and
cmpsb
xor
test
ljmp
ljmp
mov
leave
inc
cmp
clc
jno
jp
dec
inc
lods
into
jge
pusha
sbb
ljmp
push
movsb
pushf
push
cmpsb
add
or
dec
jbe
jns
lcall
sar
pushl
jnp
mov
inc
dec
inc
push
ss
xchg
int
lods
test
add
stos
jle
xchg
mov
sbb
jae
push
addr16
fcoms
cmp
push
std
call
gs
mov
js
fisttps
pop
jbe
jnp
mov
jns
pushl
lock
sbb
fldcw
and
ret
sbb
imul
and
jmp
icebp
mov
out
popa
ljmp
push
inc
je
push
push
sub
adc
mov
xchg
adc
inc
repnz
xchg
neg
ja
ss
inc
mov
fnstenv
cmp
sbb
clc
test
cmp
nop
jle
test
jbe
push
mov
out
clc
mov
push
in
lock
enter
adc
xchg
cmp
mov
sub
or
roll
mov
decl
movsl
cmpsb
lcall
outsl
push
movsl
sbb
cld
cmc
inc
mov
out
aam
les
and
xor
stos
dec
or
je
fcoml
lret
lcall
lds
push
lods
or
test
pop
or
sahf
sub
movsb
fwait
jmp
in
or
lods
push
rorl
fstps
das
sub
dec
mov
out
sub
xchg
and
stc
pushl
in
pop
and
jl
lcall
jae
js
cwtl
pop
popa
add
jl
sbb
xlat
cli
jb
fbld
movsl
or
sbb
push
and
in
addl
sbb
push
fdiv
inc
cmpsb
dec
push
sti
cmp
xor
lcall
or
aaa
insb
add
add
mov
int
imul
pop
dec
lods
mov
xor
xchg
mov
sbb
lea
leave
or
pop
adc
clc
fmul
mov
mov
inc
mov
aas
aaa
push
sbb
scas
pusha
pop
mov
clc
incl
lcall
enter
cli
imul
cmc
sub
lret
and
cmpsb
imul
sub
sbb
inc
add
fdivrp
popf
shrl
call
fs
push
xor
out
ljmp
out
call
mov
mov
cld
arpl
adc
jns
fsubrl
dec
fiadds
aam
xchg
cmpsb
inc
xor
sarb
decl
xchg
pushf
push
adc
lea
mov
fwait
gs
push
scas
movsb
and
daa
data16
outsl
dec
or
mov
bound
xchg
orl
cmpsb
jbe
cmp
or
and
inc
or
out
mov
mov
aaa
mov
mov
dec
sub
push
and
push
popf
inc
ljmp
out
fldenv
call
icebp
mov
sbb
rcl
cmc
cmp
call
iret
mov
sbb
mov
jns
pop
xor
js
xor
es
popf
imul
mov
jecxz
mov
sbb
arpl
incl
and
pop
sbb
test
adcl
cmc
test
xchg
lcall
pop
cmp
scas
dec
or
test
shlb
inc
push
push
cld
nop
lahf
insb
rolb
inc
mov
jl
xchg
mov
lods
icebp
loop
sub
hlt
clc
incl
cld
incl
cmp
sbb
mov
jns
scas
test
and
ljmp
sbb
ss
mov
daa
adc
cmp
add
data16
ret
adc
incl
push
pop
mov
jl
mov
imul
jmp
cld
jmp
in
icebp
lods
inc
ss
ljmp
or
clc
cmpsb
lock
pop
inc
outsb
mul
rolb
pop
adc
xor
adc
or
inc
addl
mov
jmp
movsb
xor
push
mov
lods
jne
add
iret
inc
mov
dec
decl
das
loop
fcompl
aaa
inc
mov
sbb
and
fiadds
xor
call
or
pop
popl
ljmp
in
enter
les
add
imul
ljmp
rorb
stc
sub
cwtl
pop
les
fbld
lods
push
adc
incl
fildll
push
ficompl
adc
sbb
sub
mov
jmp
arpl
test
sbb
mov
lahf
jnp
pushl
mov
aad
outsl
sahf
cmp
xor
mov
mov
fistps
push
jmp
cs
xlat
fcmovne
sbb
adc
inc
xchg
std
loop
dec
daa
dec
mov
or
cs
enter
mov
pushl
inc
add
dec
and
jmp
xchg
bswap
mov
add
out
popf
inc
cwtl
mov
push
push
sbb
pop
push
mov
imul
mov
mov
jmp
adc
mov
rcrl
jg
and
push
or
movq
pushl
arpl
mov
fisttps
push
sub
add
in
mov
loopne
pop
pushl
push
add
mov
stos
inc
push
push
ja
push
mov
lret
ret
add
adcb
dec
test
jecxz
push
out
cli
dec
cmp
inc
or
jns
stc
mov
xchg
or
repnz
mov
fcomip
call
pop
out
ja
data16
inc
pop
jno
je
mov
je
popf
mov
push
pop
mov
int3
movsl
push
mov
jge
out
jl
push
or
jmp
dec
push
imul
testl
mov
mov
outsl
add
xor
push
cmc
add
ljmp
jp
add
xorl
data16
pop
mov
pop
or
add
and
push
sbb
mov
mov
insb
jle
jg
mov
insb
aas
mov
loop
push
cwtl
fcomp
pop
jnp
cli
out
xchg
push
lock
js
mov
mov
xchg
sub
fistps
shlb
shll
jns
daa
inc
xchg
sub
jg
mov
jbe
dec
hlt
std
enter
scas
seta
push
lcall
decb
add
call
dec
mov
adc
jb
dec
jmp
lret
shlb
or
sbb
ds
in
adc
je
add
int3
out
mov
xor
loop
popa
inc
daa
daa
mov
in
sub
jle
mov
lds
push
in
and
mov
call
data16
xor
dec
ljmp
xor
jo
jp
mov
sbb
test
out
loope
push
pushf
mov
adc
pop
test
inc
lock
fisubl
mov
mov
call
mov
outsl
gs
pushf
test
xchg
lock
pop
cmc
fstl
xor
cli
jge
mov
dec
pop
or
in
lods
xchg
dec
lcall
mov
aam
adc
movsl
mov
mov
loope
insl
scas
dec
adc
mov
fiadds
je
jmp
mov
outsb
leave
test
incl
sbb
dec
pusha
imul
cmp
int3
mov
push
incl
lods
jmp
dec
dec
movzbl
jle
outsb
scas
push
inc
mov
into
sti
xchg
xchg
int
add
ret
add
popfw
adc
out
dec
outsl
rcrl
popa
pop
ja
sbb
xlat
sbb
ljmp
iret
push
jae
rcr
xchg
jp
pop
shr
sub
push
cmc
pop
sbb
std
ja
or
sar
call
scas
sbb
ja
orb
les
rol
dec
sbbb
jle
movsb
ljmp
orb
pop
mov
call
lret
cmpsl
repnz
push
out
mov
jecxz
lcall
push
pop
aas
mov
ljmp
mov
dec
das
ds
sbb
adc
imul
sbb
sub
insl
loopne
mov
fmuls
push
pusha
je
mov
jmp
ja
xchg
adc
pusha
jmp
ror
push
mov
push
jg
push
fcomp
sub
inc
add
sahf
and
ja
push
lcall
add
lret
arpl
out
cs
aad
pop
aad
xchg
cmpl
loope
mov
orb
cmp
pop
loop
pop
outsb
scas
mov
dec
aad
test
inc
pop
mov
out
push
push
push
and
push
xchg
mov
sbb
andb
stos
xchg
jmp
dec
mov
add
cmc
xchg
fadds
push
add
dec
and
sub
push
sbb
pop
mov
sbb
adc
insl
push
fildll
push
fwait
adc
pop
push
in
inc
dec
push
mov
sub
pushl
push
cmpsb
stos
call
xlat
repz
jno
pop
andb
cmp
sub
mov
sub
and
push
cltd
push
stos
or
test
clc
ljmp
cmp
insl
sbb
fcomps
dec
aaa
cld
jmp
xorb
xchg
xor
gs
clc
inc
push
decl
push
sub
das
pop
jo
fidivrs
mov
fnsave
int3
pop
test
cmp
out
pop
jge
push
and
push
jns
iret
and
imul
out
or
jbe
imul
jp
inc
mov
decl
sub
cmp
inc
fisttpl
cli
in
int3
popa
call
push
in
cmp
mov
lret
lods
incl
movlhps
adc
xlat
rcrl
mov
jae
mov
fisubs
inc
jmp
icebp
cmp
or
xor
and
negb
mov
iret
gs
push
out
negb
pop
or
dec
sub
jno
mov
or
xor
mov
xchg
mov
jg
outsb
mov
dec
and
mov
in
cmpsb
mov
mov
inc
ja
sahf
push
test
push
mov
loopne
add
jbe
add
in
adc
addr16
dec
mov
mov
mov
imul
lea
jmp
mov
push
fimull
adc
jae
inc
or
enter
lods
fbstp
lea
and
push
push
lods
iret
fcmovb
or
jmp
fdivrs
add
idivb
fsubs
daa
std
jmp
push
mov
add
test
xor
xchg
pushl
nop
mov
push
aam
les
cmp
mov
xchg
sbb
mov
in
and
pop
adc
xor
inc
mov
xlat
fildll
xor
mov
sarb
push
ja
jmp
push
cmp
hlt
scas
or
stos
repnz
loope
xchg
xor
cmp
movsb
adc
cltd
ds
cmp
inc
inc
subb
adc
sahf
add
cld
scas
xor
lea
call
cmpsb
dec
mov
sub
pusha
and
lahf
jo
in
sahf
in
popa
mov
jmp
push
hlt
mov
dec
insl
shl
sub
sbb
lahf
cmpsl
imul
pop
mov
mov
xchg
xchg
fsts
out
js
call
test
jmp
xchg
mov
movsb
les
or
in
test
test
pushl
push
stos
mov
mov
or
push
sub
psubd
jnp
arpl
adc
pop
or
movsb
jg
xchg
fdivp
jmp
push
sub
cltd
call
ret
xchg
dec
dec
inc
bound
out
pop
pushl
fwait
sar
inc
cld
or
nop
sub
add
out
imul
jge
push
mov
cld
sbb
mov
ret
pop
cmc
mov
push
cld
jg
dec
call
jl
adc
icebp
mov
das
clc
pushl
enter
push
sub
jae
jl
setno
mov
outsl
mov
inc
push
dec
xor
mov
jnp
xchg
decl
jecxz
aaa
ja
ret
in
adc
popa
cld
inc
mov
loop
inc
loopne
movsb
pushl
ret
hlt
test
mov
cmp
xor
push
dec
cs
add
leave
sbb
inc
add
inc
cmp
fucom
mov
test
cmp
cld
jmp
aas
mov
lea
sub
aam
dec
adc
aaa
cmp
decl
dec
bound
das
jecxz
fidivl
subl
arpl
in
decl
jmp
add
adc
mov
mov
mov
xor
adc
pop
stc
mov
dec
mov
les
ss
enter
mov
dec
cmpsb
add
decl
sbb
sub
call
pop
mov
cli
jmp
push
and
ljmp
cmpsb
fwait
mov
repnz
dec
arpl
shrb
rclb
je
adc
call
jl
pop
loope
je
sub
jbe
test
adc
adc
dec
push
sbb
cwtl
in
shll
mov
pop
enter
push
mov
int3
pushl
inc
fnstcw
sub
insl
or
dec
std
sbb
xchg
outsb
scas
push
in
push
jl
popf
lock
jge
lret
scas
add
dec
xchg
es
lcall
jmp
mov
into
ja
dec
mov
das
fwait
push
mov
xorl
push
cld
sub
add
rcrl
and
test
incl
aas
loope
push
jmp
mov
test
and
aad
sub
xchg
pop
xchg
pop
cmc
dec
xchg
lcall
pop
jl
inc
cmpsb
lcall
lcall
jb
sub
in
jno
and
fcos
ljmp
push
push
inc
rcll
ja
sbb
subb
pushl
outsb
nop
sbb
shlb
incl
jcxz
jbe
lock
and
add
push
inc
imul
push
push
or
pop
stos
sar
popf
xor
int3
mov
not
movsl
pusha
cmpsl
jb
or
mov
mov
cmp
loope
pop
sub
jg
and
or
pop
cmp
in
outsb
testl
jmp
popl
test
stos
adc
in
repnz
fisttps
pop
mov
out
xor
int3
or
push
arpl
mov
test
sub
lea
dec
or
lds
out
je
insb
dec
cltd
popf
scas
lcall
out
ds
jae
jmp
xchg
and
push
inc
enter
int
mov
in
jg
outsb
xor
inc
repz
jge
js
mov
sub
push
inc
dec
adc
cmp
jmp
or
pop
ja
shl
lea
adc
aaa
cld
sarl
and
in
adcl
adc
xor
dec
rcrb
jmp
test
dec
add
lea
stos
pop
mov
in
test
mov
inc
lcall
jl
and
inc
mulb
and
std
scas
xchg
or
mov
shlb
mov
loope
and
ljmp
bnd
test
pop
repz
outsb
out
cmp
lcall
repz
shrl
inc
rolb
inc
xchg
test
mov
movsl
fwait
pop
ljmp
hlt
lcall
lods
jmp
dec
cld
sbb
adc
jbe
inc
ljmp
insl
dec
shlb
cwtl
pop
lret
pop
ret
fisubs
insl
out
adc
ret
jecxz
faddl
fidivs
push
pop
dec
or
mov
pop
push
mov
aad
dec
cmpsb
xor
cwtl
jecxz
hlt
fcom
or
call
rcrb
scas
push
mov
inc
adc
xor
ljmp
push
cld
rcrb
pop
popf
mov
xor
inc
inc
sub
popa
scas
nop
and
aad
lret
in
aaa
ljmp
mov
jge
cmc
pushf
cmpsb
push
inc
repnz
sti
inc
inc
xchg
clc
enter
dec
subb
fwait
pop
adc
out
in
jl
imul
sbb
lahf
ret
pop
sbb
loop
sar
decl
aam
pop
xor
dec
lock
add
pop
fcoml
movsb
hlt
inc
lret
xor
addb
mov
jnp
add
mov
sbb
sbb
int
outsb
sub
enter
clc
mov
push
cmp
push
inc
mov
add
jo
add
jo
in
int3
enter
dec
test
adc
xchg
add
aaa
cwtl
or
and
mov
mov
pop
je
sub
adcb
jecxz
mov
cwtl
stc
testb
mov
faddl
mov
call
push
jo
enter
lods
js
in
les
add
lods
mov
inc
cmpsb
rorb
shl
arpl
sub
mov
in
andl
lcall
mov
sbb
or
mov
mov
xor
cmp
ljmp
test
outsb
cli
arpl
xlat
mov
stos
aaa
pop
stos
sub
sbb
call
into
jns
jecxz
push
cwtl
push
sub
mov
pop
adc
jl
jae
ljmp
shrb
jbe
xchg
or
fldl
inc
movsb
sarl
xchg
mov
das
push
test
adc
mov
bound
sbbb
int3
in
adc
jg
ret
mov
test
jmp
je
loop
or
sbbb
jnp
and
std
jecxz
les
gs
lahf
fcmove
mov
sbb
fs
mov
lcall
adc
int3
icebp
dec
inc
mov
mov
nop
add
popa
dec
mov
stc
lods
xchg
cmp
cmpsl
stos
fcompl
xchg
inc
jmp
addr16
rorl
scas
adc
pop
pop
insl
cli
jmp
xor
insl
jne
push
pop
sarb
jmp
pop
cmp
dec
xchg
add
xchg
lahf
inc
or
cwtl
dec
stos
add
fldl
mov
lea
leave
arpl
out
call
ljmp
inc
jp
sar
dec
sbb
ja
fistpll
das
xchg
xchg
addr16
mov
rcll
data16
fcoml
mov
out
mov
mov
inc
icebp
mov
sarl
dec
jae
iret
mov
dec
pop
sbb
loop
cmp
add
ljmp
fisubrl
lcall
lcall
cmp
int3
ret
mov
sbb
test
jae
loope
sarl
sbb
fwait
mov
jnp
pop
jge
xor
mov
das
mov
outsl
and
into
data16
and
or
repnz
pop
xchg
cmp
roll
das
ss
es
pop
and
jg
mov
jo
mov
push
leave
imul
pop
push
loopne
ljmp
scas
cmp
sub
mov
pushf
add
push
std
sub
mov
lret
sbb
xchg
pusha
dec
add
lea
dec
sbb
pushl
or
cmp
xor
dec
xor
test
out
xor
sbb
sar
lcall
pop
xchg
leave
push
call
mov
and
mov
popf
pop
loop
aam
pop
xlat
cld
or
jecxz
push
sarb
sub
rol
mov
inc
or
shrb
mov
mov
or
xor
imul
incl
dec
and
push
stos
lcall
fimull
jo
iret
test
lahf
sbb
adc
decl
xor
repnz
push
and
out
lret
mov
subl
add
in
fstl
into
int3
adc
cwtd
popf
testb
jge
cmp
jg
test
mov
sbb
loope
jnp
mov
incl
loop
xor
cmp
cmp
icebp
push
mul
xor
mov
imul
sarb
idiv
mov
push
pop
dec
fdiv
or
out
or
inc
pop
decl
movsl
adc
cmpsb
cmp
incb
cld
add
nop
cs
cmp
push
xchg
jl
mov
ljmp
callw
xchg
mov
popf
sti
add
xor
ret
lret
rolb
imul
add
pop
mov
jne
idiv
call
outsb
jno
xchg
scas
fisubrs
into
mov
or
ds
cmp
call
out
sahf
ljmp
add
int3
pop
addb
mov
test
push
ljmp
dec
call
xchg
xchg
mov
mov
sub
fucom
mov
idiv
ljmp
ja
fisttps
sub
lock
cmpl
ja
lret
decl
inc
inc
test
dec
cmpsl
hlt
cmp
pop
mov
fs
lcall
clc
xor
fisttps
xor
fcmovne
popa
adc
jb
xor
cld
lock
jge
mov
ljmp
mov
imul
mov
daa
xchg
sbb
aaa
mov
lcall
sub
jo
inc
icebp
pop
sub
es
mov
and
jae
mov
push
or
leave
jle
ss
xor
dec
pop
ret
pop
outsb
mov
mov
mov
dec
test
sahf
pop
or
insl
rorl
ds
xchg
sub
insb
mov
scas
addb
daa
adc
dec
int
decl
out
xchg
mov
das
cmpsb
fcoml
inc
testb
xor
pop
mov
lcall
mov
adcl
push
movsb
movsl
mov
cli
mov
insb
pop
std
decl
and
rcrl
mov
hlt
out
js
fstps
xor
inc
push
adc
incl
jbe
mov
movsl
icebp
push
xor
mov
mov
insb
inc
cmp
out
mov
cltd
inc
adc
decl
insb
enter
sarb
jg
mov
ds
sbb
pusha
pop
loop
or
inc
push
push
or
or
push
sbb
xchg
out
test
cmp
ret
jg
data16
jg
and
subb
icebp
lcall
lock
lock
loop
push
adc
mov
xor
in
nop
push
mov
mov
jnp
mov
and
cli
xorb
ds
mov
or
push
mov
xor
cli
adc
int
mov
cmp
inc
insl
xchg
mov
mov
call
jo
loopne
push
mov
in
clc
js
mov
addb
pop
push
cmp
mov
in
ficoms
jge
cli
lods
add
dec
xor
pop
sti
ret
pop
hlt
dec
adc
sbb
mov
bound
test
dec
inc
repnz
in
outsl
sqrtps
jg
movsb
ljmp
push
jb
and
cs
mov
cmpsb
lcall
pushl
fs
ja
mov
inc
jo
dec
pop
sar
ret
call
push
sbb
leavew
inc
add
and
cld
mov
fmul
lock
insb
cltd
xlat
xor
mov
insb
xchg
sbb
cmp
subl
mov
ljmp
call
mov
pop
test
cld
jnp
push
jo
add
pop
xbegin
cmp
mov
sti
sbb
mov
jno
push
fcomp
sub
mov
test
into
arpl
stos
lret
pushl
xchg
push
or
add
mov
bswap
xchg
mov
cltd
or
out
xchg
scas
jne
shlb
xor
mov
incl
push
and
dec
int3
lods
lock
mov
mov
pop
incl
fsubr
sub
mov
pop
cmp
in
pop
mov
push
push
hlt
xor
andb
sub
push
int
test
inc
xchg
cwtl
les
shl
pop
test
xchg
mov
mov
iret
rclb
movsl
clc
mov
jg
repnz
push
cmc
dec
cli
pushl
sbbl
imul
sub
or
out
dec
insl
jo
aad
stos
adcb
addb
jnp
mov
sub
jmp
mov
aaa
inc
js
cs
mov
das
clc
call
jae
cmc
lret
es
js
cld
rclb
fs
inc
sbb
notb
stos
sub
incl
mov
movsl
orb
pop
push
cmp
loopne
sub
in
xchg
jg
cmp
out
clc
jp
cs
fldl
int3
cltd
lds
out
push
out
test
sbb
or
lcall
pop
dec
mov
in
fimull
mov
adc
jae
flds
lods
stc
test
jno
mov
loope
push
loop
test
mov
in
jb
mov
dec
jp
nop
popa
add
popf
fs
decl
mov
sbbl
sbb
or
sub
out
mov
enter
rcr
pushf
ljmp
loope
mov
vmulsd
jecxz
push
pop
inc
sbb
ljmp
xorb
pop
scas
dec
jo
insb
add
jnp
fcomip
fbld
call
jp
adc
or
fdivs
push
aam
daa
filds
dec
decl
rcr
jl
icebp
enter
cmp
icebp
ljmp
mov
and
subl
repnz
push
pop
inc
lcall
pusha
mov
jb
mov
pop
xchg
pop
lahf
mov
pusha
ja
roll
sub
das
rcl
in
push
jecxz
scas
data16
adc
mov
fcomip
push
in
xchg
xchg
mov
int
jno
xor
into
sbb
lcall
mov
cwtl
divb
iret
fmul
fdivl
mov
fmulp
xorb
push
decl
fcomps
out
mov
and
mov
mov
fmuls
lods
mov
dec
insl
cmp
jmp
cli
xor
sub
jle
jp
push
lds
mov
or
les
jmp
aaa
popa
inc
gs
push
mov
fsubp
nop
inc
sbb
cmp
xor
jge
jg
jbe
fsincos
jno
xchg
push
lret
inc
sarb
dec
jb
add
inc
mov
incl
lret
lods
inc
movsl
jp
ljmp
mov
fildll
sahf
add
xor
adc
inc
stos
lahf
lods
pop
call
mov
imul
dec
in
test
fsts
xchg
in
pop
mov
icebp
or
mov
out
cmp
pop
into
pop
call
outsb
xorl
jl
int
divl
lods
and
rol
ret
mov
jg
push
fs
dec
adc
out
push
or
or
aaa
mov
mov
or
push
xchg
fs
cmp
mov
and
xor
adcb
add
jge
xchg
stc
pop
imul
ret
ss
mov
jg
adc
mov
pop
adc
push
or
pop
push
std
je
dec
xchg
jp
sbb
mov
mov
call
xchg
sbbl
incl
xchg
andb
rorb
or
xor
ljmp
mov
sbb
mov
mov
jno
push
incl
mov
stc
fwait
dec
jns
jb
cmp
pusha
fs
xor
cld
jp
xor
pop
aad
decl
sti
jmp
mov
in
mov
pusha
lock
fmull
ljmp
mov
jmp
pushf
rol
movl
and
ljmp
add
cmp
push
dec
mov
xchg
fisubrl
pop
sarl
dec
scas
or
popf
stc
jns
insl
nop
pop
arpl
mov
adc
pop
icebp
stos
aas
ret
sub
lock
inc
ficoms
ljmp
cmc
cmp
add
mov
jns
cmp
mov
mov
lret
lcall
idivl
dec
add
lea
scas
sub
mov
jg
lods
repz
call
cmp
test
test
ret
lods
push
xchg
and
hlt
xchg
movsb
call
mov
scas
and
nop
push
xchg
push
jne
jl
dec
inc
mov
jl
lods
ja
sar
jns
leave
push
rol
jne
mov
mov
mov
mov
jo
and
call
test
sti
pop
dec
je
data16
fwait
push
dec
add
shr
stc
lods
js
xchg
into
insl
ljmp
icebp
or
cli
mov
sub
pop
dec
cvtpi2ps
xor
mov
mov
call
ret
loope,pt
dec
push
jg
xchg
push
mov
test
xor
filds
decl
xlat
pushf
iret
enter
dec
fstl
sbb
insl
sbb
and
movups
or
pop
jl
stos
cmp
call
lds
pop
in
out
add
and
js
sub
test
call
jmp
and
xor
or
int
gs
adc
mov
lods
cmpb
cld
sub
xchg
scas
sbb
jg
pop
fwait
or
in
dec
mov
into
test
sub
imul
movsl
sub
lea
shl
cltd
xchg
inc
enter
lahf
out
mov
jle
pop
xchg
mov
out
ret
clc
pop
xor
sbb
movsl
cmc
ljmp
cmp
outsl
dec
insl
lds
ret
enter
jmp
test
int
outsb
sub
push
mov
fcomps
int
popa
push
enter
cmpsl
pop
sub
call
ds
sbb
mov
les
mov
mov
inc
loopne
cmpsl
pushf
test
and
jae
incl
lret
in
in
push
adc
adc
pushl
cmc
movsb
mov
rcrb
xchg
cmp
cmpsl
incl
cli
jge
ss
xchg
cmp
lcall
xor
push
xlat
and
fldt
xchg
int
cmp
pavgb
orl
add
pop
xchg
push
insb
mov
fbstp
inc
pop
int
cmp
cmp
bnd
cs
xchg
push
jmp
mov
mov
outsl
incl
repz
inc
cmpsl
add
adc
pusha
subb
ret
cwtl
pop
add
cmp
jg
mov
xchg
aas
ljmp
push
lods
sbb
mov
out
add
jmp
rorb
cmp
xor
out
pushl
xor
dec
adc
xor
out
pop
insb
lahf
sbb
push
dec
pop
repnz
xchg
hlt
jmp
xchg
push
xorb
push
shl
insb
cmp
sbb
repnz
incl
out
push
lahf
bound
dec
test
mov
jp
pop
lcall
xor
int
or
jge
dec
fwait
nop
xchg
out
in
sub
mov
mov
jl
out
xchg
jae
in
ficompl
into
mov
jmp
adc
fcos
fisttps
shll
xor
mov
sti
shrl
xchg
fnstcw
decl
hlt
jl
add
fistps
pop
fsubs
and
call
ds
mov
daa
mov
outsb
jnp
adc
mov
lods
movsb
mov
xchg
cmc
repnz
sbb
lcall
decb
mov
aas
fisubs
in
cmp
out
outsl
push
xchg
cld
or
jmp
push
arpl
jne
mov
push
cltd
sub
adc
lea
aam
jp
es
incb
cli
stos
or
lahf
loop
fisubrl
rcrl
ja
push
test
and
jge
push
lcall
jecxz
jg
jmp
mov
and
cmp
and
ja
adc
add
ja
pop
das
or
push
add
lahf
fst
push
dec
ss
pop
sub
out
pop
ds
and
add
or
xor
incl
push
repnz
es
mov
imul
cmp
enter
ss
mov
incl
jno
ficoml
dec
es
adc
ja
add
loop
lea
add
aaa
push
rcrb
insb
ret
xchg
shrl
call
mov
loopne
test
lea
add
add
jg
pusha
out
rcrb
sti
in
sub
fstl
cwtl
ret
mov
dec
push
mov
push
insl
xor
pop
test
gs
and
ret
jmp
cli
pop
ficompl
add
into
mov
sbb
test
add
dec
mov
lods
test
sub
orb
clc
ljmp
cs
dec
sbb
xor
cmp
mov
and
jl
outsl
outsb
in
jne
incl
cltd
cld
jg
sbb
cmp
sti
and
dec
cmc
adc
adcb
xchg
out
in
lret
inc
adc
jg
xchg
in
out
es
pop
repz
imul
repz
ja
testb
scas
cltd
push
data16
cmc
mov
jbe
pop
insb
stos
dec
aad
hlt
das
xor
sub
scas
mov
pop
jmp
repz
rorb
cltd
xor
cmp
scas
fsubrp
adc
mov
mov
incl
dec
faddl
scas
mov
adc
mov
mov
lcall
ret
pushf
loope
sti
jne
ror
mov
in
cltd
enter
adc
mov
lcall
mov
or
adc
xchg
mov
repz
xchg
bound
mov
push
inc
jg
xor
lret
out
or
sti
push
in
xchg
js
dec
mov
lret
or
jg
clc
pop
adc
icebp
cmpb
jg
ljmp
xor
ljmp
outsb
jecxz
insb
sbb
jge
sbb
push
aas
xlat
aaa
or
call
cmc
je
xchg
repz
mov
fildll
dec
jmp
lcall
push
mov
or
incl
aam
sub
gs
sub
jg
mov
pop
lods
cltd
sub
cmc
xchg
push
mov
test
bound
cmpl
adc
jno
lcall
fs
mov
jg
xor
hlt
out
pop
lds
pop
pushf
xchg
mov
or
pop
pushf
pusha
adc
std
and
push
sbb
call
or
or
push
jl
in
and
xor
je,pt
call
cld
decl
leave
mov
xchg
rorb
rolb
jnp
adc
dec
ss
jb
mov
push
enter
mov
or
dec
pushf
dec
int
movsl
jmp
xlat
test
cmc
pop
stc
int3
push
fldt
cmp
pop
and
in
dec
fsubrs
xchg
adc
lcall
ret
mov
in
aad
je
lods
or
repnz
pop
cmp
sarl
jno
call
loopne
cwtl
movsb
movsb
mov
mov
push
mov
add
test
cltd
repnz
incl
leave
sbb
add
inc
fstpl
shlb
sbb
mov
decl
xchg
gs
dec
lods
cmp
dec
sub
cmp
lods
out
lret
push
insl
in
icebp
hlt
aad
fistl
xlat
out
ret
in
scas
repz
lock
js
jge
in
mov
lcall
or
add
test
cmp
arpl
xor
movsl
daa
mov
es
push
sar
jmp
add
stos
lahf
sub
pusha
daa
je
pop
jo
xlat
cmp
add
xor
faddl
sti
mov
and
push
mov
lock
push
js
inc
sub
aam
mov
leave
clc
notl
adc
mov
cmp
mov
idivb
and
cmp
in
fistpll
push
call
sbb
push
icebp
repz
insl
push
notb
jbe
scas
push
clc
ljmp
xchg
inc
fcomp
xchg
lcall
dec
sahf
jmp
je
mov
xchg
daa
sub
mov
cli
or
sarl
cmp
scas
push
jmp
cmp
aad
call
repz
or
ds
fisubrl
call
lahf
and
std
xchg
icebp
xchg
mov
inc
movsb
repz
xor
pop
xchg
push
add
inc
test
ljmp
lock
gs
inc
cmp
sarb
adc
hlt
dec
push
mov
clc
imul
lahf
aaa
incl
std
pop
cmp
cmp
mov
ljmp
addr16
aam
shl
ja
aaa
fcom
mov
jl
lcall
lock
fstpl
mov
pop
std
pop
and
pop
jbe
push
cs
outsb
loop
cmp
or
scas
rorb
in
call
or
cli
sahf
lcall
and
cmp
cmp
xor
inc
jp
sbb
adc
data16
daa
adc
enter
mov
fucomi
js
pop
cmp
stos
push
mov
pop
dec
mov
xlat
das
or
mov
push
stos
add
jb
dec
push
lods
fisubl
mov
decl
sbb
and
mov
sbb
icebp
cmp
xchg
mov
shrb
sbb
xor
loope
mov
pop
mov
pushl
jl
jb
mov
pop
push
pop
mov
push
cmpl
shr
daa
int
lods
and
push
jne
sub
and
out
cmpsb
mov
pop
mov
jnp
mov
pop
and
and
out
js
cmpsl
jp
xchg
hlt
incl
or
pop
mov
insb
outsb
pop
fiadds
movsb
in
and
imul
fistps
daa
push
sub
mov
int
hlt
fwait
add
push
xor
add
pushl
push
and
dec
push
pop
cmpsb
jl
aas
mov
dec
inc
notl
faddp
fimuls
cmpsb
adc
decl
dec
jp
jmp
or
int
loopne
xchg
stos
addr16
mov
mov
sti
jg
push
lock
sub
loop
mov
fldl
cmp
add
test
test
push
arpl
or
cmc
xchg
push
divb
pushf
push
clc
push
inc
or
adc
fisubrl
cli
les
and
mov
mov
cmp
in
hlt
xchg
out
xchg
mov
mov
movsb
push
cmp
or
jne
in
and
push
pushl
cmp
jle
out
imul
in
clc
gs
stos
pushf
mov
add
mov
inc
fdivp
fisttps
ljmp
adc
int3
xor
lock
mov
cmpsb
xchg
sub
pop
clc
lds
push
cmc
mov
mov
js
add
sbb
ljmp
xchg
jp
enter
imul
mov
cmc
aaa
sub
loope
mov
data16
daa
pop
jno
push
nop
adc
lea
jg
scas
aad
mov
cmp
ret
jns
rcrb
pop
mov
out
test
call
sar
lds
xabort
dec
push
lods
and
or
sbb
cli
lret
in
cld
or
test
push
push
jno
cltd
pushf
test
mov
cmc
aad
or
std
decl
or
sbb
mov
int
and
adc
pop
mov
sbb
inc
lcall
and
add
ds
data16
dec
scas
pop
ljmp
cmc
inc
std
pop
push
mov
in
std
decl
mov
popf
fsubrl
addr16
mov
mov
lods
mov
call
xor
orb
iret
adc
sbb
lea
movsl
pusha
call
inc
pop
sub
out
mov
outsb
and
addb
dec
inc
ljmp
push
in
lcall
fistpll
inc
adc
ret
mov
mov
sub
jne
xlat
ljmp
mov
pop
imul
dec
dec
mov
mov
insl
jmp
movsl
mov
mov
jmp
pop
shrb
dec
fbld
inc
test
cmp
pop
sbb
pusha
pusha
or
sub
cmc
pushf
mov
adcl
jg
xchg
or
sbb
inc
and
cli
and
adc
ljmp
or
incl
int3
bound
push
rcll
xchg
jbe
in
jmp
lcall
pop
and
cmp
mov
pushf
mov
push
mov
pop
sbbb
sahf
lcall
pop
mov
push
add
sti
pushf
out
xor
sar
jp
mov
mov
jo
and
inc
xor
repnz
addr16
mov
cmpsl
pusha
into
mull
or
sub
aas
lcall
cmpsl
mov
inc
test
fisubs
fisubs
mov
lcall
bnd
out
cmp
cld
bound
jo
test
jo
call
adc
xchg
ja
aam
add
add
mov
pop
or
jbe
ljmp
xor
arpl
ljmp
insb
fdivs
movsb
inc
or
push
dec
xor
jmp
add
fmuls
jmp
jle
inc
andb
or
test
ljmp
or
jmp
arpl
sub
or
incl
xchg
lret
cltd
hlt
adc
push
jae
fimull
mov
es
ja
cli
xchg
inc
jp
adc
clc
pop
jp
inc
xchg
mov
dec
adc
adc
aas
push
jnp
ljmp
or
ja
loop
int
add
fbld
xor
xchg
loopne
jg
dec
icebp
imul
pcmpgtb
adc
pusha
test
push
shl
jle
jge
movl
incl
xor
dec
sti
mov
bound
push
out
icebp
inc
mov
adc
imull
mov
out
pusha
push
cld
xchg
popf
lahf
add
inc
scas
mov
call
sahf
push
mov
dec
dec
xchg
adc
jl
xchg
jg
push
dec
imul
mov
sbb
loop
push
shl
iret
jle
jno
incl
push
fwait
pop
lods
and
fisubl
mov
sbb
mov
jmp
jp
scas
es
fld
xchg
add
es
fbstp
mov
test
xchg
je
adc
daa
mov
jecxz
imul
jno
cld
mov
fsub
adc
xlat
mov
sub
mov
fdivrs
adc
inc
adc
loop
test
out
sbb
ret
das
sar
xchg
into
dec
ja
jo
mov
inc
lcall
notb
xor
add
sbb
xchg
sbb
mov
int3
xlat
fldl
out
pop
scas
cli
ss
add
pop
jo
inc
inc
ja
jge
lcall
sbb
add
out
mov
hlt
cwtl
xor
lret
push
out
ljmp
sub
xor
pop
jg
pop
outsb
jle
jno
cmp
incl
pusha
orl
fxch
xchg
push
sbb
mov
lods
stos
xchg
dec
ljmp
int3
mov
ss
push
leave
fidivrs
lods
je
jle
ljmp
lods
gs
sbb
jno
movsb
insl
out
pop
es
cld
adc
adc
or
mov
jb
and
loopne
out
add
push
pop
pop
mov
int
cmp
xor
stos
out
arpl
mulb
push
dec
iret
inc
dec
cmpb
xchg
test
push
mov
pop
imul
sub
pop
add
pushl
mov
dec
inc
dec
add
pop
out
push
or
lahf
and
iret
outsb
mov
add
pushl
mov
mov
or
insb
arpl
jl
dec
jmp
jns
insl
pop
movsb
fidivs
hlt
mov
jbe
out
push
dec
cltd
cmp
mov
jo
mov
mov
mov
mov
loopne
js
pop
mov
cmc
imull
daa
push
iret
jmp
fstpt
mov
ljmp
mov
cmp
push
aas
hlt
loop
test
or
sar
ljmp
popf
dec
imul
out
adc
cmp
push
pop
push
test
jg
cs
xchg
stos
xlat
fidivl
push
xchg
mov
fiaddl
out
adc
ljmp
mov
sti
mov
mov
dec
ljmp
outsl
fbstp
pushl
mov
xchg
pushf
rcll
or
fadds
in
xlat
scas
cmp
pushl
and
rorb
cmovb
pop
movb
mov
sar
pop
insb
sbb
jmp
subl
jl
sub
add
lcall
aad
sahf
popl
dec
es
ljmp
xchg
lock
std
mov
insb
cmc
mov
ret
icebp
outsb
pushl
adc
push
push
test
and
and
mov
movsb
sbb
cmp
dec
mov
mov
jg
decl
jne
fcmovb
mov
fsubl
xchg
aam
gs
enter
add
xor
adc
add
mov
nop
add
call
lahf
lret
mov
xlat
sub
adc
cmpsl
lock
jnp
mov
lock
jg
incb
lock
push
inc
push
xchg
icebp
jb
xor
int3
mov
movsl
or
or
shr
inc
imul
xor
lock
cmp
sbb
shr
bound
scas
pop
push
xchg
xor
xor
rcrb
les
bound
inc
outsb
jp
inc
orw
pop
pop
lcall
inc
les
push
out
imulb
xchg
mov
and
sbb
or
cmpsb
mov
pushl
cld
ret
xchg
dec
fs
lahf
sahf
call
adc
pusha
out
inc
cmp
pop
mov
cld
sub
gs
pop
cmp
hlt
mov
gs
sub
and
xchg
cwtl
test
out
cli
push
sub
mov
loopne
daa
jg
mov
inc
clc
scas
mov
sbb
pop
push
pop
leave
insl
ljmp
pusha
xchg
sub
outsl
loop
lcall
pushf
xchg
xchg
pop
icebp
pushl
sbb
dec
push
adc
push
adc
mov
fdivrp
incl
loop
out
mov
ret
scas
mov
lods
data16
adc
and
mov
lcall
pushl
int3
data16
jo
or
ds
sub
jp
mov
pop
dec
js
push
xor
jb
push
mov
xlat
pop
and
es
daa
test
incl
sub
cmc
and
out
dec
xor
or
and
testl
dec
or
int3
or
pop
pusha
sti
das
xorl
push
ret
adc
mov
jp
dec
ret
pop
js
add
addr16
leave
dec
xlat
jbe
bnd
daa
dec
dec
lcall
pop
cld
stc
jne
sbb
mov
loopne
leave
mov
notl
addr16
movsb
jg
add
inc
pusha
in
inc
mov
pusha
lahf
xor
mov
fsubl
mov
fdivrl
inc
repz
cs
sub
jg
into
jmp
pop
push
xor
pop
jbe
cmc
in
pop
pop
fdivr
fs
xchg
adc
mov
and
leave
popl
pop
mov
daa
mov
jmp
ds
push
inc
pop
int3
sarb
xchg
jmp
mov
ja
sbb
lcall
cs
enter
mov
xor
clc
xchg
pop
jmp
inc
test
out
cs
stc
data16
rcrb
or
dec
or
call
jb
sbb
loop
shlb
pushf
popa
xlat
xor
aad
or
ljmp
in
andb
loopne
xchg
jp
pop
add
mov
jno
jns
addb
fsubs
ljmp
subb
cmpsb
xor
inc
push
repnz
mov
into
scas
push
add
sbb
pop
or
decl
js
aaa
jo
lret
lcall
call
mov
test
mov
mov
pushl
loopne
jbe
jecxz
test
jno
xchg
stos
xchg
hlt
push
lods
push
ret
fwait
rclb
std
incl
and
and
jbe
pop
inc
inc
push
mov
movsl
outsb
push
popf
xchg
out
sub
inc
jbe
jg
mov
xor
test
push
roll
scas
stos
cmp
scas
mov
mov
or
inc
cmpl
mov
dec
pop
cmc
filds
xchg
rcl
jp
pop
jl
sub
pop
shlb
fisubl
pushl
or
and
pusha
out
pop
xchg
incl
xor
jge
cld
lret
test
mov
mov
jmp
repnz
std
mov
in
push
sahf
loop
repnz
dec
rep
rolb
call
cmpsb
rcrl
hlt
xchg
push
xchg
pop
xor
adc
sbb
mov
and
fs
rorb
pop
jnp
pop
sahf
cmp
decl
adcl
adc
scas
bound
das
sbb
hlt
loope
sub
std
decl
sbb
enter
sti
jnp
rorl
dec
stc
out
insl
and
jg
jg
enter
adc
inc
enter
cli
mov
mov
pushf
pop
test
shlb
push
jle
sub
lock
sbb
incl
ja
cmpsb
or
sahf
push
mov
bound
in
cld
inc
sub
in
ds
inc
aad
or
aaa
pop
sbb
push
pusha
dec
shl
pop
subb
and
je
cmp
int3
sahf
loope
xor
scas
jg
pushl
inc
cmp
arpl
scas
inc
dec
ss
inc
ljmp
imul
inc
in
sbb
jmp
out
fwait
jmp
mov
loopne
fmuls
add
pop
xchg
popf
mov
leave
jmp
cmp
incl
sub
pop
push
mov
out
mov
mov
lahf
dec
inc
cmp
inc
jmp
cmpsl
sar
dec
icebp
mov
or
je
mov
movsb
cmp
push
xchg
lock
ljmp
nop
push
jae
stos
imul
pop
sub
jle
cmp
mov
fcmovnb
dec
inc
xchg
sub
int
fiadds
cmpsl
push
lret
inc
ss
inc
call
rorb
ficoml
push
lods
in
inc
cmp
nop
test
lret
push
jmp
insb
inc
mov
inc
das
ficoml
pop
leave
ret
mov
out
cli
es
popf
in
adc
mov
push
mov
aam
call
popf
je
push
cmpsl
cltd
pop
rcrl
xchg
adc
jnp
mov
js
add
sbb
ljmp
decl
cmp
mov
insb
hlt
ja
mov
dec
jno
aas
ljmp
cmp
outsb
cmp
push
jns
inc
mov
subb
or
addr16
stos
call
imull
ja
dec
sub
inc
test
xor
enter
imul
mov
fs
add
cmc
pop
mov
adcl
or
mov
decl
inc
jb
arpl
jle
jp
jmp
jecxz
cmp
xor
jne
into
aam
jmp
mov
jbe
cmp
fbld
pop
or
jecxz
xor
inc
sbb
cmpsl
idivb
add
inc
mov
xor
test
xor
shll
lods
inc
sbb
lahf
imul
and
mov
in
frstor
cmp
pop
cltd
mov
pop
out
mov
mov
dec
xchg
add
cmpsl
push
jg
daa
push
movsl
in
cmpsb
ja
dec
and
ret
popl
sub
add
sbb
jmp
inc
cld
ret
sub
push
mov
decl
insb
mov
sub
fs
xor
cld
cmpsb
xor
pop
ljmp
and
int3
dec
and
mov
push
sub
int3
popf
xor
nop
mov
call
jp
xor
xor
jne
cmp
mov
inc
lea
call
add
mov
arpl
aas
jmp
jg
andb
mov
mov
stos
inc
jmp
neg
jae
inc
xchg
push
bound
ljmp
leave
cs
or
pusha
iret
fisubrs
out
mov
dec
scas
jl
cmp
adc
sub
fcomip
call
mov
mov
adc
aam
sbb
test
jae
call
pushf
ja
mov
cmp
and
adc
push
outsl
sahf
mov
mov
cmp
jnp
cmc
inc
add
lea
mov
xchg
cwtl
jo
daa
xorb
lcall
rorb
adc
loopne
mov
cmp
jne
test
push
jp
out
jno
je
andb
mov
xchg
sbb
pop
int
jg
dec
insb
and
xor
xchg
pop
gs
sub
dec
stc
out
pop
cld
dec
jl
movsw
inc
stos
push
push
mov
add
lcall
jecxz
cmp
xor
movsb
fiaddl
push
lcall
aaa
jl
jae
or
out
xchg
jnp
xchg
insb
icebp
push
int3
xlat
jns
decl
lea
lds
and
jns
flds
scas
lcall
pop
or
lret
andl
arpl
xchg
inc
out
and
xor
rcll
ja
pop
cmp
adc
inc
pusha
call
xchg
nop
sarl
sbb
and
stc
insl
ret
push
sarl
jns
inc
xchg
lds
fsubrl
inc
mov
icebp
cmpb
sbb
dec
mov
insl
insl
add
decl
xor
test
pop
ja
cs
and
sahf
fcomi
sbb
sbb
sbbb
mov
jmp
inc
test
and
test
lods
test
xchg
lods
in
movsb
fisubl
repz
pusha
push
jnp
mov
sti
js
fmull
mov
mov
pop
ljmp
sahf
mov
fcoms
jno
xor
decl
enter
adc
pop
jne
mov
sub
test
ljmp
push
dec
lds
ret
fsts
pop
mov
inc
orl
jnp
and
inc
in
sbb
out
faddl
sar
mov
rolb
pop
mov
scas
push
mov
call
bound
outsb
mov
add
jo
jae
push
xchg
aam
jg
call
or
outsb
sub
inc
bound
mov
sbb
mov
add
lds
std
xchg
jmp
inc
mov
aad
jns
xchg
ficomps
ljmp
xlat
push
sub
xor
fwait
pop
sub
addr16
sub
fmuls
mov
out
pop
pop
jmp
inc
mov
lods
fadds
mov
and
jg
stos
pop
inc
dec
nop
insb
fldlg2
push
aad
jne
rorb
movsb
decl
cmp
out
data16
ljmp
push
dec
scas
bound
push
or
sbb
adc
fwait
loop
xor
pop
xchg
pop
std
leave
ret
lcall
cmp
adc
cmpsb
loope
push
cld
repz
pop
push
adc
adcl
cmpsl
das
inc
aaa
dec
cmp
pop
push
das
or
cmp
daa
lcall
lds
ret
fnstenv
imul
fbstp
enter
into
cli
scas
xchg
mov
jno
cltd
movsb
andb
call
jb
push
inc
pushf
and
shlb
loope
loop
cld
adc
pop
jge
lcall
popa
cld
inc
and
into
leave
int3
cli
shrb
cmc
xchg
pop
mov
inc
sbb
sbb
loop
movsl
cmp
int3
fs
incl
add
out
sbb
cltd
outsb
or
add
cmp
lret
enter
cmpsl
stos
ljmp
mov
pop
stos
add
adc
jg
movsb
sbb
mov
jp
add
or
mov
dec
mov
mov
ror
incl
pop
cli
xchg
aaa
insl
xor
scas
test
xor
push
loop
lods
pop
ret
repz
mov
sub
movsb
or
cmp
sbb
mov
nop
push
sbb
sar
pop
cmc
mov
arpl
push
divl
xchg
cmc
dec
jmp
sub
fcmovne
mov
cmp
add
dec
das
push
jmp
mov
or
call
in
js
jp
dec
sbb
dec
mov
sti
xor
sbb
xchg
dec
call
stos
ja
push
in
xor
sbb
test
cli
aad
fs
ficompl
or
inc
in
xor
fisttps
stos
mov
rclb
and
data16
xlat
xor
int
outsl
lcall
cld
jg
idivl
jb
mov
mov
movsl
mov
popf
in
jg
mov
repz
xchg
mov
or
jb
popf
adc
imul
fs
push
jns
fsubl
push
jg
inc
in
adc
ficoms
mov
pop
push
or
repnz
mov
jecxz
pop
add
mov
fistps
dec
lcall
push
mov
fs
inc
add
or
aaa
sbb
jb
sbb
fcoml
and
lcall
cmc
inc
inc
scas
mov
mov
dec
rorb
pop
stos
pop
cmp
sbbl
popf
repz
mov
decl
ljmp
mov
push
inc
add
sti
jle
pop
mov
mov
sarb
call
xchg
dec
loop
add
rolb
out
pushl
addb
lea
icebp
cltd
sbb
mov
lock
jp
jmp
pop
add
call
lret
icebp
lock
fst
sbb
sbb
pop
pusha
cli
decl
mov
dec
ljmp
dec
or
in
inc
clc
cmpsb
incl
ret
xchg
leave
push
nop
adc
inc
mov
add
fists
and
ljmp
xchg
xor
jb
mov
mov
xchg
or
inc
lcall
flds
cld
xor
sti
mov
jnp
add
call
push
xchg
mov
shrl
add
out
sarb
xchg
sahf
and
dec
cli
jae
or
iret
adc
dec
cmp
inc
xchg
jl
xor
jo
inc
jno
and
sub
mov
sbb
pop
lock
and
daa
mov
adc
or
jns
sub
lcall
int
or
xor
enter
sbb
sar
mov
cmp
je,pt
or
mov
inc
bound
adc
js
mov
cmpsb
decl
inc
stc
mov
pop
mov
mov
pop
rorb
andl
sbb
mov
out
jbe
adc
mulb
mov
dec
in
fildll
sub
out
incl
push
leave
push
cmpb
js
mov
insb
jmp
cmp
or
push
jg
mov
push
das
cli
xor
xchg
mov
lods
fists
add
fistps
inc
outsb
adc
mov
push
inc
js
rorl
pushf
xchg
push
pop
popf
mov
add
jmp
iret
cld
sub
xchg
ljmp
clc
loopne
push
pop
inc
sub
lock
cli
jnp
cmp
push
fmuls
inc
divb
test
enter
cmp
push
jle
cld
sbb
cmp
cmp
xchg
pop
stos
data16
inc
cmp
dec
sbb
adc
jmp
push
bound
insl
sbb
push
pop
push
scas
insl
mov
push
mov
xor
cmp
pop
clc
jnp
and
shr
movsb
xchg
nop
jp
je
lcall
or
xor
imul
fisubrs
push
inc
repnz
mov
or
and
aad
mov
cwtl
or
subb
sarb
fmulp
add
lcall
sar
jmp
and
and
aam
adc
insb
push
or
sub
ljmp
dec
add
push
dec
mov
gs
lcall
jmp
xchg
jmp
cmp
outsb
daa
fneni(8087
lret
fcmovne
mov
push
sub
stos
fdivrl
xor
stc
xchg
idiv
lcall
stos
inc
push
push
scas
hlt
bound
fldenv
mov
inc
je
int3
jmp
jmp
into
inc
jle
push
gs
xor
lds
out
shrl
mov
decl
or
xchg
cmc
les
int
les
js
int
jmp
jg
stos
into
enter
ret
popa
pusha
sbb
leave
dec
jo
outsb
filds
or
ds
push
mov
or
ret
xor
mov
ret
xor
sbb
inc
push
xchg
outsl
jmp
mov
sbb
mov
dec
movsb
xor
cmp
xchg
pop
mov
popf
cmp
sub
mov
and
testb
addb
inc
jmp
pop
mov
mov
or
jne
arpl
cmp
sbb
ljmp
xchg
fldt
add
mov
pop
pop
sbb
decl
aam
mov
cltd
cmp
addr16
add
mov
fdivr
fisubrl
adc
cli
xchg
inc
adc
jbe
dec
jge
fs
js
xchg
or
scas
adc
push
sbbb
push
std
js
or
cs
jmp
out
popa
xchg
mov
fbld
inc
dec
stc
push
xlat
mov
or
jnp
cmpsl
lahf
and
aaa
fucom
call
movsb
adc
and
cmp
iret
js
insl
idivb
sbb
sbb
or
xor
lock
and
js
fucom
sub
cltd
dec
sub
aaa
jge
inc
out
pop
jmp
in
insl
lahf
loop
cmp
xchg
hlt
ds
dec
imul
push
pushf
dec
mov
incl
cmp
das
into
pop
xlat
pop
stc
rclb
mov
mov
or
cmp
dec
nop
mov
sbbb
cmp
sub
sbb
mov
call
adc
cmp
repnz
loop
sarl
mov
dec
into
std
or
repz
ljmp
cld
cmc
lcall
adc
ljmp
sti
std
shll
mov
ret
xor
daa
pop
loope
mov
mov
or
add
fs
jmp
adc
mov
jmp
push
jle
sbb
mov
mov
arpl
lcall
nop
inc
ficoml
call
xchg
iret
data16
or
test
adc
aam
or
incl
xor
repz
mov
xchg
das
mov
mov
cld
or
push
pop
icebp
test
mov
cs
mov
repnz
mov
paddusw
movsb
pop
incl
imul
sub
lcall
mov
dec
cmp
das
or
loope
fnstcw
push
cmp
call
push
jae
jl
popa
jecxz
clc
push
xchg
sbb
imul
mov
jmp
add
pushf
cmpb
in
iret
into
int
clc
mov
sub
xchg
loop
mov
push
inc
dec
lods
call
scas
xor
mov
pop
pop
jge
sub
cmp
mov
mov
lcall
stos
ljmp
sbb
mov
fisubl
repz
xchg
push
and
subb
push
cld
jmp
jo
stos
push
lock
arpl
and
xchg
mov
pop
pushl
daa
mov
aaa
out
out
out
repz
mov
mov
mov
imul
fwait
repz
jmp
sbb
in
ljmp
pusha
ljmp
bnd
lret
adc
ja
lcall
sbb
leave
btr
xor
test
scas
cli
inc
aas
jl
push
pop
in
gs
xchg
xorb
sub
int3
push
sbb
sar
adc
mov
dec
inc
stos
sub
xor
cmp
cmp
cwtl
movsl
mov
mov
lods
pop
xchg
push
mov
xor
js
loopne
inc
sbb
sti
test
push
ljmp
mov
addr16
sub
les
or
aas
and
mov
cmp
inc
jecxz
jne
std
pop
int3
jno
push
mov
jns
cmp
call
dec
fsub
addr16
adc
pop
and
scas
dec
test
mov
lcall
xor
movb
sub
sub
incl
jno
bnd
jle
xchg
rolb
cli
lds
or
push
inc
xchg
cld
fs
jmp
sar
cmp
sub
lds
xchg
jmp
lods
cmp
aad
ret
and
adc
test
mov
ja
ficoms
inc
lea
fsubrl
xchg
mov
les
add
shrb
push
inc
jbe
pop
xchg
and
jb
and
mov
out
mov
fwait
hlt
jecxz
in
fistpl
mov
leave
mov
lret
xor
ljmp
shl
data16
mov
xorb
pop
cmc
sub
sti
mov
decl
pop
mov
mov
mov
sbb
inc
inc
add
cmp
repz
or
mov
dec
jmp
in
cli
adc
js
add
jge
test
lcall
push
cmp
ret
inc
ds
add
inc
xchg
or
int
fs
popa
nop
sub
imul
dec
imul
jmp
pop
cld
push
clc
mov
cld
inc
leave
mov
and
mov
add
cltd
sbb
popf
mov
cmc
xor
jg
xchg
fldcw
dec
jg
call
dec
add
or
sarb
int
inc
jnp
arpl
cmpsb
xchg
aaa
insb
cld
jmp
repnz
sub
pop
stos
daa
cmpsl
jmp
jmp
ljmp
mov
pop
pop
ss
or
mov
or
jg
mov
jmp
sti
aas
xorb
fists
xchg
leave
jg
lcall
fnsave
cmpsl
mov
mov
movsb
faddp
stos
pop
sub
jge
lcall
incl
dec
in
shrb
in
loope
stos
pop
xchg
in
mov
pop
jnp
add
ljmp
in
scas
std
inc
sub
imul
mov
lret
push
jno
push
sbb
out
fisttpl
pop
cmp
stos
dec
icebp
or
sbb
mov
jg
in
mov
stc
fdivr
mov
cmp
jp
in
pushf
test
ljmp
jmp
xchg
dec
mov
dec
dec
jge
push
sub
iret
daa
and
cmp
out
rol
fcoms
fwait
lret
sub
in
sub
cltd
jnp
mov
loopne
std
jle
xchg
inc
cmc
pop
ljmp
popl
pushf
inc
movsb
sahf
out
movsb
std
test
adc
ljmp
mov
jge
pushf
cwtl
pop
or
lcall
sub
cltd
push
scas
dec
jbe
and
and
shlb
push
xor
cmpsl
and
mov
out
fdivs
test
enter
inc
jmp
out
sbb
cmp
push
mov
in
cwtl
clc
sar
insb
mov
mov
adc
jp
jg
je
and
inc
push
cld
xorl
adc
push
inc
xlat
leave
test
inc
jp
mov
add
das
popf
inc
mov
cmpsb
cwtl
jmp
dec
and
ljmp
call
push
sub
into
or
sub
xchg
dec
incl
push
outsb
mov
or
mov
aas
int
jbe
rorb
pusha
jp
adc
cmp
sbb
lea
out
sub
test
sti
ftst
inc
adc
lcall
repnz
fisubl
mov
pop
out
pop
or
hlt
out
in
mov
nop
andl
adc
jg
dec
sbb
test
push
cli
jge
xchg
imul
adc
add
sub
xor
sbbl
pop
inc
hlt
or
or
dec
dec
jb
dec
mov
pop
stos
icebp
std
sub
lea
jbe
test
jb
fdivrl
cmp
fbld
pushl
arpl
filds
mov
xchg
mov
jmp
sub
stc
jmp
gs
xchg
dec
xor
cmp
fidivrl
sub
or
fwait
jp
adc
cmpxchg
or
dec
int
mov
pop
loop
ljmp
add
and
jno
push
cmp
adc
xor
out
push
scas
popf
nop
mov
lcall
loopne
mov
cs
mulb
pop
icebp
jo
dec
xchg
adc
test
cld
cld
jns
ret
adc
jo
in
push
shlb
sbb
aas
push
mov
sub
sub
lcall
inc
rorl
dec
dec
lds
add
cmp
leave
repz
shl
outsl
push
stos
jmp
repz
in
cmpsb
adc
and
loopne
cli
or
dec
or
lock
fsubs
ss
cmp
scas
xchg
mov
mov
sbb
pop
adc
mov
push
in
or
int
and
aam
mov
pop
mov
fnsave
pop
mov
inc
jae
je
push
and
lea
jp
shrl
fwait
repnz
mov
mov
fsubl
stc
popf
mov
push
clc
in
jp
xlat
sbb
sbb
xchg
repnz
shlb
movsb
movb
mov
add
jl
adc
xor
pushf
sti
pushf
mov
fists
jmp
test
mov
pusha
stc
sub
pusha
lds
mov
rcrb
iret
lods
jmp
rcll
sbb
add
push
mov
xchg
mov
out
or
ficompl
in
test
and
ja
sbb
dec
popa
ficoml
sbb
mov
imul
pop
in
add
sub
xchg
mov
ljmp
out
inc
lahf
scas
mov
cmp
aam
dec
mov
cwtl
xor
aaa
cwtl
cmp
sar
pop
and
movsb
or
lods
sub
dec
adc
iret
xorb
lods
cmc
jg
icebp
stos
outsb
mov
into
add
cmp
call
ficoms
mov
push
push
jecxz
dec
cmp
xchg
fldcw
push
dec
jo
or
ljmp
add
inc
mov
xchg
frstor
in
jnp
outsb
jae
cld
cmp
fs
ljmp
cs
or
lods
cltd
push
push
ljmp
in
push
xchg
xchg
nop
aaa
call
sbb
mov
xor
jb
jmp
pushl
adc
js
cmpsl
jge
mov
inc
jp
push
jne
ret
xchg
or
xlat
lock
dec
clc
ret
shlb
adc
loop
or
inc
or
push
push
adc
incl
add
push
es
mov
dec
sbb
lea
adc
aam
jecxz
insb
call
mov
call
add
or
aad
pop
int
in
int
jo
xlat
push
cmp
aam
ret
lret
pop
addb
or
imul
sub
xor
jg
push
rolb
mov
bnd
pushf
test
xor
js
fwait
mov
push
cmp
mov
add
fistl
test
xchg
mov
or
cmpsb
push
repnz
insb
aam
pop
out
xor
shl
mov
fstpt
jmp
cmp
mov
loop
dec
push
mov
out
loop
call
push
cs
push
ja
dec
mov
mov
in
adc
popa
clc
mov
jae
fidivs
jmp
and
ret
xchg
divb
cld
mov
icebp
cmp
xchg
xchg
lcall
jg
rcrb
push
jp
jmp
mov
lods
std
dec
jae
incl
test
adc
inc
push
xchg
cld
cmpsl
outsb
lcall
adc
test
aad
dec
sbb
mov
ljmp
inc
int3
mov
andl
clc
decl
dec
pushf
jno
mov
pop
mov
test
sti
xchg
jno
add
cmp
lock
pushl
or
jnp
add
fdivrs
jecxz
imul
cmp
mov
jle
push
push
inc
test
sub
dec
test
lods
pop
cmp
ljmp
or
test
das
fucomp
mov
jle
out
and
into
imul
decl
mov
test
dec
xchg
cmp
mov
dec
pop
imul
popf
adc
jmp
xor
jg
fildll
mov
test
insl
and
shrl
jg
mov
add
jnp
and
movsb
jb
dec
push
nop
cld
shlb
cld
out
hlt
pop
in
push
jmp
sbb
adc
mov
xor
pop
pop
dec
ret
sbb
imul
ret
pop
mov
xchg
or
decl
pop
rorb
stos
fisubs
das
mov
and
movsl
daa
loope
mov
ljmp
pop
out
and
roll
pop
inc
cmp
cmpsl
mov
jmp
addb
jno
adc
dec
das
mov
out
lahf
sahf
int3
frndint
incl
pop
xorb
add
imul
sbb
into
xlat
pushf
dec
adc
cmc
fndisi(8087
movsl
pop
dec
ss
mov
ljmp
pop
mov
xchg
add
fprem1
sub
enter
cmp
adc
jmp
or
mov
mov
inc
inc
fsts
jmp
sbb
fwait
movsl
push
dec
rorl
cmp
xchg
clc
les
mov
and
sar
lcall
jbe
mov
cmp
in
sbb
out
mov
lcall
pop
aas
xchg
jg,pn
fsubs
jle
push
mov
xchg
push
sbb
pop
fs
xor
xchg
stos
insb
clc
mov
adc
xor
lret
loope
add
iret
or
incl
inc
cmp
jle
jmp
das
xor
sub
int
xchg
out
popf
nop
loope
push
scas
jl
xor
push
scas
xchg
push
cmp
fucom
nop
ror
popf
rolb
enter
adc
ss
add
fsubrl
cld
push
clc
jmp
push
cld
or
jno
popf
jbe
imul
movl
jbe
pop
push
je
dec
pop
in
leave
ljmp
push
andb
push
jecxz
imul
pop
cmpsb
push
test
pushl
fsubl
xor
dec
ret
mov
aaa
mov
cltd
ret
mov
fcomps
xlat
add
cmc
lea
jns
jge
jl
jl
mov
jg
test
stos
les
bound
incl
cld
jg
jbe
sbb
ja
fiadds
dec
hlt
fadds
inc
mov
out
fdivs
xor
int3
push
scas
test
mov
push
aam
mov
fdivl
mov
pop
cld
decl
pop
shll
fiaddl
push
jecxz
cltd
cmpsl
mov
pushl
xor
inc
aad
dec
inc
lea
decl
enter
sbb
jne
out
adc
test
pushl
in
jge
imul
out
xchg
xor
repnz
dec
sbb
push
sti
lods
out
adc
xchg
and
repnz
jge
sbb
mov
call
cs
dec
imulb
gs
lret
rorl
fisttps
add
insl
jmp
loopne
ret
nop
dec
sbb
stos
ret
test
adcb
or
lea
lods
mov
pop
push
jp
je
jg
or
inc
fs
jae
pop
add
jp
insb
gs
mov
outsl
subb
jb
pop
rcrb
inc
jo
pop
mov
jae
fisubl
lcall
loopne
add
addr16
int3
ficomps
adc
inc
inc
xor
cmpl
and
pop
or
inc
push
dec
arpl
ds
js
imul
jns
je
push
test
outsl
imul
or
gs
je
or
decl
insb
outsl
bound
cwtl
pop
add
or
pushf
mov
pusha
push
jns
inc
outsl
fwait
loope
stos
addr16
mov
sbb
popa
jns
push
add
pop
andl
clc
add
jns
cmp
mov
scas
and
inc
cmp
orb
addb
je
push
xor
andb
fs
into
jg
cmp
xor
jl
inc
pop
push
inc
shll
xchg
add
pop
inc
sub
mov
decl
loopne
mov
add
add
add
andb
inc
fnstenv
add
nop/reserved
pop
push
aaa
cmp
adc
xlat
mov
dec
insb
pushf
lds
testb
push
add
imul
insl
add
cmp
adc
and
fadd
movsb
push
loopne
negb
and
or
test
dec
jae
cmp
mov
repz
and
shlb
jge
and
add
xlat
adc
lahf
xchg
cmpsl
dec
nop
fisubrl
jb
jb
movsb
jbe
mov
xlat
push
dec
imul
ss
push
mov
and
rolb
mov
mov
xor
popa
aas
nop
sbb
in
dec
and
jg
aaa
add
xchg
sbb
add
dec
xchg
incl
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
