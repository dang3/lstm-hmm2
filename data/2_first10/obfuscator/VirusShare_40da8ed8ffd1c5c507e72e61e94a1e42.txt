add
or
adc
add
and
add
cmp
add
add
add
xor
add
rolb
addb
add
xor
add
jo
add
mov
add
xorb
orb
add
xor
orb
add
nop
xor
add
shlb
add
xorb
add
add
add
add
add
add
xorb
add
add
add
add
mov
adc
add
add
add
add
add
add
add
add
add
add
xorb
add
add
add
add
loopne
add
pusha
push
adc
add
add
add
add
add
add
orb
add
xorb
add
add
add
add
and
add
pusha
jl
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
xorb
add
add
add
add
add
ficoms
add
add
xorb
add
add
add
add
add
add
add
add
xorb
add
add
add
add
add
add
add
loopne
add
add
xorb
add
add
add
add
add
add
add
loope
add
add
xorb
add
add
add
add
add
add
add
jecxz
add
add
xorb
add
add
add
add
add
add
fs
add
add
xorb
add
add
add
add
add
in
add
add
xorb
add
add
add
add
add
out
add
add
xorb
add
add
add
andb
andb
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
cmpb
add
add
add
loop
add
add
add
sub
add
push
aaa
add
jle
add
stos
aaa
add
loopne
add
adc
add
dec
cmp
xorb
add
pop
or
sbbb
add
test
add
rorb
sbbb
add
inc
cmp
andb
add
dec
or
add
sarb
add
or
add
push
cmp
sub
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
sldt
js
add
mov
cmp
or
add
lock
sbb
add
inc
adc
subb
subb
adcb
add
mov
cmp
and
add
or
add
xor
add
pop
adc
andb
sbb
add
idivb
adc
add
clc
adc
cmpb
add
push
add
xchg
cmp
add
cwtl
adc
sub
add
sbb
add
push
add
jp
add
test
add
ret
orb
add
add
add
sub
add
pop
aas
add
jbe
add
lcall
cmpb
add
enter
adc
xor
add
sbb
add
mov
subb
add
add
aam
add
repnz
add
adc
orb
add
xor
add
pop
push
add
adcb
andb
add
rclb
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rclb
andb
add
adc
add
cmp
add
pusha
sbb
sbbb
add
dec
inc
add
jbe
add
sahf
inc
add
rolb
subb
add
push
sbb
xorb
add
inc
add
jle
add
mov
sbb
add
add
in
inc
add
adc
subb
cmpb
add
fs
add
xchg
inc
add
enter
or
add
xor
add
pop
sbb
xorb
add
push
inc
add
test
adc
add
clc
sbb
cmpb
sbb
add
cli
inc
add
push
inc
add
ss
add
dec
inc
add
inc
add
test
cmpb
add
pusha
sbb
add
loopne
add
add
sbb
add
add
add
sub
add
push
push
add
js
add
mov
dec
add
rorb
lock
add
sbb
add
inc
pop
add
push
dec
add
inc
dec
add
pop
dec
add
xchg
orb
add
xor
add
pop
and
and
add
push
dec
add
and
adc
add
clc
and
adcb
andb
add
dec
and
adcb
cmpb
add
shlb
sub
add
or
adcb
add
cmp
add
pusha
and
andb
orb
add
xchg
dec
add
scas
dec
add
dec
add
fmuls
adcb
cmp
add
sbb
mov
dec
add
pop
dec
add
insb
dec
add
xchg
dec
add
scas
dec
add
into
dec
add
out
dec
add
or
add
sub
orb
add
xor
add
orb
andb
subb
add
dec
add
hlt
dec
add
push
dec
add
xor
xorb
orb
sbbb
add
jl
add
xchg
dec
add
mov
add
into
dec
add
out
dec
add
sbb
xorb
add
bound
addb
add
sub
add
push
sub
and
add
push
push
add
inc
push
add
push
push
add
jb
add
nop
push
add
mov
add
fcoms
adcb
add
and
and
add
or
add
xorb
add
add
add
add
add
add
add
adc
rolb
add
xorb
add
add
add
add
add
jmp
add
xorb
add
add
add
add
add
or
add
add
xorb
add
add
add
add
add
or
add
add
xorb
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
and
adc
rolb
add
xorb
add
add
add
add
add
add
hlt
repnz
rolb
add
xorb
add
add
add
add
add
hlt
adc
rolb
add
xorb
add
add
add
add
add
notb
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
xor
adc
mov
add
add
add
add
add
add
add
xor
add
aam
adc
aam
add
xorb
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
orb
add
sbb
add
add
xorb
add
add
add
add
test
add
push
add
add
add
add
add
add
add
rorb
add
cmp
adc
test
add
xorb
add
add
add
add
clc
or
add
and
add
add
add
add
add
add
add
add
and
add
add
xorb
add
add
add
add
dec
or
add
adc
fadds
add
xorb
add
add
add
add
jo
add
and
adc
xor
add
xorb
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
add
rorb
in
adc
sub
add
xorb
add
add
add
add
call
inc
adc
pop
sbb
add
add
add
add
add
add
adc
adc
dec
sbb
add
add
add
add
add
add
cmp
adc
nop
adc
add
add
add
add
add
add
pusha
or
adc
dec
add
add
add
add
add
add
add
mov
adc
cli
add
add
add
add
add
add
add
mov
add
nop
mov
add
add
add
add
add
add
add
add
add
or
adc
pop
add
add
add
add
add
add
add
add
push
add
in
mov
add
add
add
add
add
add
add
add
push
add
dec
adc
pop
add
add
add
add
add
add
add
add
add
movsb
adc
pop
add
add
add
add
add
add
add
add
add
add
add
xorb
add
add
add
add
mov
nop
adc
sub
add
xorb
add
add
add
add
add
push
add
test
add
xorb
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
add
sldt
hlt
mov
add
xorb
add
add
add
add
add
add
sub
adc
cmp
add
xorb
add
add
add
add
add
add
mov
add
xorb
add
add
add
add
add
movsb
adc
cmp
add
xorb
add
add
add
add
add
movsl
adc
add
add
xorb
add
add
add
add
add
sldt
fsubs
add
xorb
add
add
add
add
add
adc
add
test
add
add
xorb
add
add
add
add
add
adc
add
adc
cmp
add
xorb
add
add
add
add
pop
adc
add
add
add
add
add
add
add
add
add
adcb
add
mov
add
add
add
add
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
rclb
add
sub
add
xorb
add
add
add
add
clc
adc
add
adc
aam
add
xorb
add
add
add
add
and
add
dec
mov
add
xorb
add
add
add
add
dec
adc
add
add
xorb
add
add
add
add
jo
add
fadd
adc
mov
add
add
add
add
add
add
add
cwtl
adc
add
add
xorb
add
add
add
add
rclb
add
adc
lock
add
add
add
add
add
add
call
lds
add
add
add
add
add
add
add
adc
add
mov
adc
sub
add
xorb
add
add
add
add
cmp
add
loopne
adc
call
add
add
add
add
add
add
add
pusha
adc
add
fsts
add
add
add
add
add
add
add
add
mov
add
jo
adc
test
add
xorb
add
add
add
add
mov
add
sbb
adc
dec
add
add
add
add
add
add
add
fcoms
add
fs
adc
cli
add
add
add
add
add
add
add
add
add
pusha
add
lret
add
add
add
add
add
add
sub
add
sub
adc
clc
add
add
add
add
add
add
add
push
adc
add
adc
clc
add
add
add
add
add
add
add
js
add
sbb
adc
int3
sbb
add
add
add
add
add
add
mov
push
adc
and
add
xorb
add
add
add
add
enter
or
adc
loopne
add
xorb
add
add
add
add
lock
add
sub
add
add
add
xorb
add
add
add
add
sbb
add
adc
mov
add
xorb
add
add
add
add
inc
adc
add
add
xorb
add
add
add
add
push
xor
jl
add
xorb
add
add
add
add
nop
adc
add
aaa
adc
enter
xorb
add
add
add
add
mov
cmp
add
add
xorb
add
add
add
add
loopne
add
sbb
add
add
xorb
add
add
add
add
or
adc
push
add
add
add
add
add
add
add
xor
adc
cmp
add
xorb
add
add
add
add
pop
adc
adc
jl
add
xorb
add
add
add
add
adcb
add
push
add
xorb
add
add
add
add
test
add
fs
adc
hlt
pop
add
xorb
add
add
add
add
rclb
adc
mov
add
xorb
add
add
add
add
clc
adc
adc
inc
cmp
add
xorb
add
add
add
add
and
add
push
mov
add
or
add
add
add
add
add
add
dec
push
add
and
adc
js
add
xorb
add
add
add
add
jo
add
pushf
adc
js
add
xorb
add
add
add
add
cwtl
push
add
adc
adc
rolb
add
xorb
add
add
add
add
rclb
add
rclb
cli
add
add
add
add
add
add
add
call
aad
add
add
xorb
add
add
add
add
adc
add
inc
fcoms
mov
add
xorb
add
add
add
add
cmp
add
lock
call
add
add
add
add
add
add
add
pusha
pop
add
fcomp
adc
int3
add
add
add
add
add
add
add
mov
add
movsb
fcoml
mov
add
add
add
add
add
add
add
mov
add
pop
cld
adc
stos
testb
xorb
add
add
add
add
fcoms
add
or
adc
add
add
add
add
add
add
add
sbb
add
hlt
adc
add
add
add
add
add
add
sub
add
test
adc
add
add
add
add
add
add
push
sbb
add
or
add
add
add
add
add
add
add
add
js
add
add
push
add
add
xorb
add
add
add
add
mov
movhps
mov
add
xorb
add
add
add
add
enter
cld
movhps
push
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
sbb
add
and
push
add
or
add
add
add
add
add
add
inc
sbb
add
push
add
add
add
add
add
add
add
add
push
and
add
add
xorb
add
add
add
add
nop
sbb
add
push
add
add
xorb
add
add
add
add
mov
and
add
add
xorb
add
add
add
add
loopne
add
adc
push
add
add
add
add
add
add
add
add
or
add
movsb
and
add
xorb
add
add
add
add
xor
add
shlb
push
add
add
add
add
add
add
add
add
pop
sbb
add
add
xorb
add
add
add
add
sbbb
add
add
add
add
add
add
add
add
test
add
and
push
add
add
xorb
add
add
add
add
rcrb
add
jo
push
add
add
add
add
add
add
add
add
clc
sbb
add
add
add
add
add
add
add
add
add
add
sbb
add
imul
mov
add
add
add
add
add
add
add
add
add
test
push
add
add
add
add
add
add
add
add
add
add
pusha
jne
add
add
add
add
add
add
add
add
add
jp
add
add
add
add
add
add
add
add
add
sbb
add
jle
add
add
add
add
add
add
add
add
add
sbb
add
push
add
xorb
add
add
add
add
add
sbb
add
push
add
xorb
add
add
add
add
add
sbb
add
push
add
push
add
xorb
add
add
add
add
add
add
add
add
xorb
add
add
add
add
add
pushf
push
add
push
add
xorb
add
add
add
add
add
mov
add
xorb
add
add
add
add
add
sbb
add
push
add
push
add
xorb
add
add
add
add
add
sbb
push
add
push
add
xorb
add
add
add
add
add
sbb
push
add
push
add
xorb
add
add
add
add
add
add
lock
add
xorb
add
add
add
add
js
add
sbb
push
add
add
add
add
add
add
add
mov
rcll
rolb
add
add
add
add
add
add
enter
sub
push
add
add
xorb
add
add
add
add
lock
push
add
add
xorb
add
add
add
add
sbb
add
cld
into
push
add
add
xorb
add
add
add
add
inc
push
add
fs
add
add
xorb
add
add
add
add
push
fistl
add
add
xorb
add
add
add
add
nop
push
add
xor
push
add
add
xorb
add
add
add
add
mov
call
add
xorb
add
add
add
add
loopne
add
add
push
add
add
xorb
add
add
add
add
or
add
insb
cmc
push
add
add
xorb
add
add
add
add
xor
add
aam
push
add
add
xorb
add
add
add
add
pop
pop
add
cmp
pop
add
add
xorb
add
add
add
add
sbbb
add
add
xorb
add
add
add
add
test
add
sub
pop
add
add
xorb
add
add
add
add
rcrb
add
xchg
adc
add
add
xorb
add
add
add
add
clc
pop
add
cld
push
pop
add
add
xorb
add
add
add
add
and
add
fs
add
xorb
add
add
add
add
dec
and
add
and
add
add
xorb
add
add
add
add
jo
add
xor
pop
add
add
xorb
add
add
add
add
cwtl
and
add
add
xorb
add
add
add
add
shlb
add
pop
add
add
add
add
add
add
add
add
call
cmp
add
add
xorb
add
add
add
add
adc
add
hlt
ds
add
add
xorb
add
add
add
add
cmp
add
pop
inc
pop
add
add
xorb
add
add
add
add
pusha
and
add
dec
pop
add
add
add
add
add
add
add
add
mov
add
dec
dec
pop
add
add
add
add
add
add
add
add
mov
add
aam
pop
add
add
xorb
add
add
add
add
fsubs
add
cmp
pop
add
add
xorb
add
add
add
add
add
add
movsb
pop
pop
add
add
xorb
add
add
add
add
sub
add
or
pop
add
add
xorb
add
add
add
add
push
and
add
add
add
add
add
add
add
add
add
js
add
cld
imul
add
add
add
add
add
add
mov
jo
add
add
xorb
add
add
add
add
enter
int3
jbe
add
add
xorb
add
add
add
add
lock
add
add
xorb
add
add
add
add
sbb
add
pushf
adcl
push
add
add
add
add
add
add
add
inc
and
add
pop
add
add
xorb
add
add
add
add
push
nop
pop
add
add
add
add
add
add
add
add
nop
and
add
xchg
pop
add
add
xorb
add
add
add
add
mov
cwtl
pop
add
add
xorb
add
add
add
add
loopne
add
les
add
xorb
add
add
add
add
or
add
add
xorb
add
add
add
add
xor
add
add
xorb
add
add
add
add
pop
and
add
add
xorb
add
add
add
add
andb
test
add
xorb
add
add
add
add
test
add
in
mov
add
xorb
add
add
add
add
shlb
add
add
add
xorb
add
add
add
add
clc
and
add
add
xorb
add
add
add
add
and
pop
add
add
xorb
add
add
add
add
dec
and
pop
add
add
xorb
add
add
add
add
jo
add
hlt
fsts
add
add
xorb
add
add
add
add
cwtl
and
pop
add
add
xorb
add
add
add
add
shlb
add
add
xorb
add
add
add
add
call
in
pop
add
add
add
add
add
add
add
add
adc
add
mov
pop
add
add
xorb
add
add
add
add
cmp
add
sbb
pop
add
add
add
add
add
add
add
add
pusha
add
movsb
notb
add
add
xorb
add
add
add
add
mov
add
or
pop
add
add
xorb
add
add
add
add
mov
add
je
sbb
push
add
add
add
add
add
add
add
fsubs
add
fmull
sbb
push
add
add
add
add
add
add
add
add
add
inc
adc
add
add
xorb
add
add
add
add
sub
add
lods
push
sbb
rorb
add
add
add
add
add
add
push
daa
add
insb
pop
sbb
int3
push
add
xorb
add
add
add
add
js
add
cmp
sbb
jo
add
xorb
add
add
add
add
mov
daa
sbb
dec
add
add
xorb
add
add
add
add
enter
lock
add
add
xorb
add
add
add
add
lock
add
push
push
add
xorb
add
add
add
add
sbb
add
xor
sbb
mov
add
xorb
add
add
add
add
inc
sub
add
add
xorb
add
add
add
add
push
dec
sbb
cmp
add
xorb
add
add
add
add
nop
sub
add
add
xorb
add
add
add
add
mov
push
sbb
fadds
add
xorb
add
add
add
add
loopne
add
lock
sbb
nop
add
add
xorb
add
add
add
add
or
add
andb
insb
add
add
add
add
add
add
add
xor
add
in
bound
add
add
xorb
add
add
add
add
pop
sub
add
sbb
push
add
add
xorb
add
add
add
add
subb
add
sbb
cmp
add
xorb
add
add
add
add
test
add
xchg
int
add
add
xorb
add
add
add
add
shrb
add
rcl
sbb
push
add
xorb
add
add
add
add
clc
sub
add
sbb
push
add
add
add
add
add
add
add
and
add
pop
fstpl
add
add
add
add
add
add
add
add
add
add
xorb
add
add
add
add
pusha
sub
add
aad
add
add
add
add
add
add
add
add
add
add
xorb
add
add
add
add
add
jmp
add
add
xorb
add
add
push
add
loopne
add
or
sbb
add
xor
sbb
add
pop
sub
and
add
subb
loop
add
test
add
shrb
and
add
clc
sub
and
add
and
add
dec
sub
add
jo
add
cwtl
sub
add
shrb
add
sub
add
adc
add
cmp
add
pusha
add
mov
add
mov
add
fsubrs
add
add
add
sub
add
push
das
add
js
add
mov
sldt
enter
testl
add
sbb
add
inc
xor
cmp
add
push
sldt
nop
xor
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
xor
addb
add
xorb
add
add
add
add
clc
sub
add
sbb
inc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
dec
sub
add
out
sbb
les
add
xorb
add
add
add
add
jo
add
hlt
out
sbb
sub
add
xorb
add
add
add
add
add
lock
rolb
add
xorb
add
add
add
add
add
sub
add
lock
push
add
add
add
add
add
add
add
add
sub
add
add
add
xorb
add
add
add
add
add
sub
sbb
fadds
add
xorb
add
add
add
add
add
sub
sbb
pop
add
add
add
add
add
add
add
add
add
test
sbb
sub
add
xorb
add
add
add
add
add
cli
sbb
pusha
add
add
add
add
add
add
add
add
cld
sbb
nop
add
add
add
add
add
add
add
add
sub
sbb
in
add
xorb
add
add
add
add
add
add
movsb
add
add
add
xorb
add
add
add
add
add
add
cmp
sbb
cwtl
add
add
add
add
add
add
add
add
add
rorb
sbb
rolb
add
xorb
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
adc
add
add
xorb
add
add
add
add
add
add
dec
push
sbb
loopne
add
xorb
add
add
add
add
add
add
sub
sbb
cwtl
add
add
add
add
add
add
add
add
das
add
rcrb
add
add
xorb
add
add
add
add
add
add
sbb
sbb
sbb
add
xorb
add
add
add
add
add
add
xor
sbb
aam
add
xorb
add
add
add
add
add
pop
sbb
je
add
xorb
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
das
add
inc
and
add
add
xorb
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
sbb
js
add
xorb
add
add
add
add
add
add
movsb
sub
add
xorb
add
add
add
add
add
xor
add
add
xorb
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
sbb
mov
add
add
add
add
add
add
add
add
xor
add
sbb
int3
add
add
add
add
add
add
add
add
xor
add
cmp
add
add
xorb
add
add
add
add
add
add
inc
sbb
xor
add
xorb
add
add
add
add
add
add
jo
sbb
adc
add
xorb
add
push
add
movsb
push
add
mov
xor
sbb
add
call
xor
addb
add
and
sub
add
adc
add
cmp
add
pusha
xor
orb
add
mov
add
fdivs
add
xorb
add
add
add
add
add
xor
add
add
xorb
add
add
add
add
add
xor
add
add
xorb
add
add
add
add
add
add
enter
adc
add
add
add
add
add
add
add
pusha
sbb
mov
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
xor
add
add
xorb
add
add
add
add
add
xor
add
sbb
xchg
add
add
add
add
add
add
add
add
xor
add
scas
sbb
mov
add
xorb
add
add
add
add
add
add
mov
push
add
add
xorb
add
add
add
add
add
add
clc
sub
add
add
add
add
add
add
add
add
add
and
lret
adc
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
push
add
stc
jg
add
add
mov
jg
add
xor
cmp
add
lock
cmp
add
sbb
add
inc
xor
add
push
add
add
add
add
add
add
add
add
add
int3
shlb
add
add
xorb
add
add
add
add
add
shlb
add
add
xorb
add
add
add
add
add
shlb
add
add
xorb
add
add
add
add
add
xor
add
shll
add
add
xorb
add
add
add
add
add
xor
and
adc
add
xorb
add
add
add
add
add
xor
and
adc
add
xorb
add
add
add
add
add
add
inc
shll
add
add
xorb
add
add
add
add
add
shll
add
add
xorb
add
add
add
add
add
add
xorb
add
add
add
add
shlb
add
add
xorb
add
add
add
add
add
xor
add
xorb
add
add
add
add
add
add
shll
add
add
add
add
add
add
add
add
push
add
push
add
add
inc
add
add
add
push
add
push
add
dec
add
add
inc
add
inc
add
add
dec
add
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
adc
inc
add
add
inc
add
add
push
add
inc
add
push
add
add
adc
inc
add
add
inc
add
add
push
add
inc
add
inc
add
dec
add
dec
add
adc
inc
add
add
inc
add
add
push
add
inc
add
inc
add
dec
add
add
push
add
add
inc
add
dec
add
push
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
add
inc
add
dec
add
push
add
pop
add
inc
add
add
inc
add
push
add
add
sbb
inc
add
add
inc
add
add
push
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
add
sbb
inc
add
add
inc
add
add
push
add
push
add
push
add
dec
add
add
push
add
push
add
inc
add
dec
add
add
dec
add
inc
add
dec
add
push
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
inc
add
add
inc
add
add
push
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
add
inc
add
dec
add
push
add
pop
add
add
adc
inc
add
add
inc
add
add
push
add
push
add
inc
add
dec
add
dec
add
adc
inc
add
add
inc
add
add
push
add
push
add
push
add
add
push
add
push
add
dec
add
inc
add
dec
add
push
add
pop
add
add
add
pop
add
dec
add
inc
add
push
add
inc
add
add
inc
add
add
push
add
push
add
push
add
add
dec
add
inc
add
add
dec
add
inc
add
dec
add
push
add
pop
add
add
add
pop
add
dec
add
dec
add
add
dec
add
inc
add
dec
add
push
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
dec
add
inc
add
dec
add
push
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
sbb
inc
add
add
inc
add
add
push
add
push
add
inc
add
dec
add
inc
add
pop
add
dec
add
inc
add
push
add
push
add
add
add
inc
add
push
add
add
add
inc
add
push
add
push
add
add
add
dec
add
inc
add
push
add
inc
add
dec
add
dec
add
add
push
add
dec
add
or
inc
add
dec
add
dec
add
add
add
add
add
inc
add
pop
add
push
add
add
dec
add
add
add
pop
add
inc
add
inc
add
dec
add
add
add
pop
add
add
add
add
add
add
pop
add
inc
add
push
add
add
add
pop
add
dec
add
push
add
add
add
pop
add
dec
add
inc
add
push
add
add
add
pop
add
add
push
add
add
add
pop
add
inc
add
push
add
add
add
pop
add
dec
add
push
add
add
add
pop
add
push
add
dec
add
or
inc
add
dec
add
push
add
inc
add
inc
add
dec
add
add
add
push
add
dec
add
inc
add
inc
add
push
add
add
adc
inc
add
inc
add
inc
add
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
add
push
add
dec
add
inc
add
inc
add
inc
add
dec
add
add
push
add
inc
add
inc
add
inc
add
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
inc
add
inc
add
inc
add
add
pop
add
inc
add
add
inc
add
push
add
add
sbb
inc
add
inc
add
inc
add
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
add
push
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
push
add
inc
add
dec
add
add
add
push
add
dec
add
inc
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
push
add
dec
add
inc
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
inc
add
inc
add
inc
add
add
pop
add
add
adc
inc
add
inc
add
inc
add
add
pop
add
add
pop
add
add
inc
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
adc
add
push
add
dec
add
inc
add
push
add
push
add
add
inc
add
add
dec
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
dec
add
inc
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
inc
add
push
add
add
push
add
dec
add
inc
add
push
add
inc
add
dec
add
inc
add
pop
add
inc
add
sbb
inc
add
inc
add
inc
add
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
sbb
inc
add
inc
add
inc
add
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
adc
inc
add
dec
add
add
dec
add
dec
add
inc
add
push
add
inc
add
pop
add
dec
add
add
dec
add
push
add
dec
add
inc
add
pop
add
add
inc
add
add
inc
add
inc
add
push
add
dec
add
inc
add
push
add
inc
add
push
add
add
push
add
inc
add
dec
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
inc
add
dec
add
pop
add
dec
add
inc
add
dec
add
push
add
add
inc
add
dec
add
pop
add
dec
add
inc
add
inc
add
pop
add
inc
add
push
add
add
adc
add
dec
add
pop
add
dec
add
dec
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
push
add
inc
add
push
add
add
inc
add
dec
add
pop
add
inc
add
push
add
push
add
dec
add
inc
add
add
inc
add
dec
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
dec
add
inc
add
push
add
push
add
inc
add
dec
add
push
add
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
add
inc
add
adc
dec
add
inc
add
push
add
push
add
push
add
dec
add
add
push
add
add
adc
add
dec
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
dec
add
inc
add
push
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
dec
add
inc
add
push
add
push
add
inc
add
add
inc
add
dec
add
pop
add
add
pop
add
add
inc
add
add
inc
add
dec
add
pop
add
add
add
inc
add
add
add
inc
add
dec
add
pop
add
add
add
pop
add
dec
add
inc
add
push
add
add
inc
add
dec
add
pop
add
add
add
pop
add
add
push
add
add
inc
add
dec
add
pop
add
add
add
pop
add
dec
add
dec
add
add
inc
add
dec
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
dec
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
inc
add
dec
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
adc
dec
add
add
inc
add
dec
add
add
dec
add
inc
add
push
add
add
or
dec
add
dec
add
pop
add
dec
add
inc
add
inc
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
add
push
add
push
add
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
push
add
dec
add
dec
add
inc
add
push
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
push
add
push
add
push
add
dec
add
pop
add
push
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
push
add
push
add
dec
add
pop
add
dec
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
pop
add
dec
add
dec
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
push
add
push
add
dec
add
pop
add
push
add
inc
add
inc
add
push
add
inc
add
adc
push
add
dec
add
add
dec
add
push
add
inc
add
dec
add
push
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
push
add
dec
add
add
dec
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
push
add
dec
add
add
dec
add
push
add
inc
add
add
push
add
push
add
dec
add
pop
add
add
pop
add
add
inc
add
add
push
add
push
add
dec
add
pop
add
add
add
inc
add
add
push
add
dec
add
add
dec
add
push
add
push
add
add
inc
add
add
dec
add
add
push
add
push
add
dec
add
pop
add
add
add
pop
add
add
push
add
add
push
add
push
add
dec
add
pop
add
add
add
pop
add
dec
add
dec
add
add
push
add
push
add
dec
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
push
add
push
add
dec
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
sbb
push
add
dec
add
add
dec
add
push
add
inc
add
dec
add
inc
add
pop
add
dec
add
inc
add
push
add
push
add
add
pop
add
dec
add
dec
add
pop
add
inc
add
push
add
inc
add
adc
push
add
inc
add
inc
add
inc
add
pop
add
dec
add
inc
add
add
push
add
dec
add
add
pop
add
dec
add
dec
add
pop
add
push
add
dec
add
push
add
push
add
add
pop
add
dec
add
dec
add
pop
add
push
add
push
add
push
add
push
add
push
add
pop
add
dec
add
dec
add
pop
add
push
add
push
add
push
add
push
add
inc
add
pop
add
inc
add
add
pop
add
dec
add
dec
add
dec
add
inc
add
dec
add
push
add
push
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
inc
add
dec
add
inc
add
add
pop
add
dec
add
dec
add
dec
add
inc
add
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
lldt
pop
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
or
push
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
dec
add
push
add
pop
add
dec
add
dec
add
dec
add
push
add
push
add
pop
add
push
add
inc
add
dec
add
dec
add
pop
add
inc
add
lldt
dec
add
add
dec
add
dec
add
inc
add
add
push
add
adc
push
add
add
add
inc
add
push
add
dec
add
dec
add
add
lldt
add
dec
add
push
add
dec
add
inc
add
push
add
add
or
push
add
push
add
inc
add
push
add
add
or
push
add
push
add
inc
add
inc
add
dec
add
dec
add
push
add
add
dec
add
dec
add
inc
add
inc
add
dec
add
push
add
add
add
dec
add
dec
add
inc
add
dec
add
push
add
add
pop
add
push
add
push
add
inc
add
dec
add
push
add
dec
add
or
push
add
push
add
inc
add
dec
add
dec
add
dec
add
or
add
dec
add
dec
add
push
add
push
add
add
push
add
add
dec
add
add
dec
add
inc
add
inc
add
pop
add
add
add
dec
add
add
dec
add
inc
add
inc
add
pop
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
inc
add
add
add
dec
add
add
dec
add
inc
add
or
add
dec
add
add
add
push
add
dec
add
adc
push
add
push
add
inc
add
dec
add
dec
add
push
add
inc
add
dec
add
dec
add
dec
add
adc
push
add
push
add
inc
add
dec
add
dec
add
push
add
dec
add
push
add
add
pop
add
add
add
dec
add
add
inc
add
dec
add
add
add
dec
add
add
inc
add
dec
add
inc
add
add
adc
push
add
push
add
inc
add
push
add
inc
add
dec
add
push
add
push
add
or
push
add
push
add
inc
add
inc
add
inc
add
dec
add
add
add
dec
add
add
push
add
inc
add
dec
add
dec
add
dec
add
or
push
add
push
add
inc
add
add
add
add
dec
add
dec
add
add
add
dec
add
adc
push
add
push
add
inc
add
dec
add
add
dec
add
dec
add
dec
add
adc
push
add
push
add
inc
add
dec
add
add
pop
add
inc
add
dec
add
dec
add
dec
add
or
push
add
push
add
inc
add
push
add
or
push
add
push
add
inc
add
dec
add
push
add
dec
add
lldt
add
dec
add
dec
add
inc
add
inc
add
push
add
add
push
add
add
dec
add
dec
add
inc
add
push
add
dec
add
dec
add
add
add
dec
add
dec
add
push
add
add
inc
add
add
or
push
add
push
add
dec
add
push
add
add
pop
add
push
add
push
add
dec
add
push
add
add
inc
add
or
push
add
push
add
dec
add
dec
add
dec
add
dec
add
or
push
add
push
add
dec
add
push
add
inc
add
add
add
add
dec
add
inc
add
inc
add
push
add
or
push
add
push
add
dec
add
dec
add
adc
push
add
push
add
dec
add
push
add
inc
add
inc
add
add
dec
add
inc
add
add
add
dec
add
push
add
push
add
push
add
dec
add
dec
add
add
add
dec
add
push
add
inc
add
push
add
inc
add
push
add
add
add
dec
add
inc
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
inc
add
inc
add
add
add
dec
add
inc
add
push
add
dec
add
inc
add
add
dec
add
inc
add
add
dec
add
dec
add
push
add
dec
add
dec
add
lldt
add
dec
add
push
add
inc
add
inc
add
push
add
inc
add
lldt
add
dec
add
inc
add
add
inc
add
push
add
add
push
add
add
dec
add
inc
add
add
inc
add
dec
add
push
add
add
dec
add
inc
add
dec
add
add
inc
add
lldt
add
dec
add
dec
add
add
dec
add
dec
add
inc
add
add
add
dec
add
dec
add
dec
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
dec
add
inc
add
add
add
add
dec
add
push
add
push
add
push
add
inc
add
push
add
add
dec
add
push
add
dec
add
inc
add
push
add
inc
add
add
add
dec
add
add
inc
add
dec
add
add
dec
add
add
add
dec
add
add
dec
add
dec
add
dec
add
inc
add
push
add
push
add
push
add
push
add
push
add
add
inc
add
or
push
add
push
add
push
add
dec
add
add
push
add
push
add
push
add
push
add
inc
add
dec
add
inc
add
or
push
add
push
add
push
add
inc
add
push
add
inc
add
or
push
add
push
add
push
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
push
add
add
dec
add
add
dec
add
pop
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
dec
add
pop
add
pop
add
dec
add
inc
add
dec
add
push
add
add
dec
add
pop
add
pop
add
dec
add
inc
add
inc
add
pop
add
inc
add
push
add
add
adc
push
add
dec
add
push
add
push
add
dec
add
push
add
push
add
inc
add
push
add
add
dec
add
pop
add
pop
add
inc
add
add
inc
add
push
add
add
push
add
dec
add
pop
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
push
add
add
dec
add
add
pop
add
pop
add
inc
add
dec
add
add
inc
add
pop
add
add
inc
add
adc
push
add
dec
add
push
add
push
add
push
add
dec
add
add
push
add
add
adc
add
pop
add
pop
add
dec
add
add
dec
add
dec
add
inc
add
add
inc
add
sbb
push
add
dec
add
push
add
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
or
push
add
dec
add
push
add
push
add
inc
add
add
dec
add
pop
add
pop
add
add
pop
add
add
inc
add
add
dec
add
pop
add
pop
add
add
add
inc
add
add
add
dec
add
pop
add
pop
add
add
add
pop
add
dec
add
inc
add
push
add
add
dec
add
pop
add
pop
add
add
add
pop
add
add
push
add
add
dec
add
pop
add
pop
add
add
add
pop
add
dec
add
dec
add
add
dec
add
pop
add
pop
add
add
inc
add
inc
add
push
add
inc
add
push
add
add
pop
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
dec
add
pop
add
pop
add
add
inc
add
inc
add
push
add
push
add
add
add
pop
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
add
inc
add
inc
add
push
add
inc
add
push
add
pop
add
add
dec
add
inc
add
push
add
add
dec
add
push
add
push
add
push
add
dec
add
dec
add
push
add
inc
add
add
push
add
inc
add
push
add
or
push
add
add
dec
add
inc
add
inc
add
add
or
push
add
inc
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
dec
add
dec
add
add
push
add
lldt
add
push
add
push
add
push
add
add
inc
add
add
push
add
add
inc
add
dec
add
push
add
push
add
dec
add
pop
add
push
add
dec
add
add
push
add
push
add
inc
add
dec
add
add
inc
add
push
add
or
push
add
push
add
add
inc
add
push
add
adc
push
add
inc
add
dec
add
dec
add
pop
add
inc
add
inc
add
push
add
push
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
lret
add
add
add
add
add
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
fcomps
pop
dec
movsb
pop
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
fcomps
push
dec
int
push
pop
add
jbe
xchg
push
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
add
add
sbb
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cli
cli
cli
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
cli
cli
cli
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
mov
add
add
jno
add
add
into
add
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
inc
add
pusha
add
nop
add
lcall
add
pusha
add
lds
add
add
popa
add
pop
add
incl
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
std
add
mov
add
add
add
add
incl
add
add
sub
add
add
incl
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
or
add
add
incl
add
add
shll
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
sub
add
scas
add
incl
add
add
repz
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
filds
add
xor
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incb
add
add
mov
add
add
add
incl
add
add
cmp
add
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
loopne
add
add
incl
add
add
incl
add
add
xchg
add
push
add
push
add
testl
jg
add
add
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
in
add
add
std
add
mov
add
add
jle
add
add
incl
add
add
dec
add
push
add
out
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
and
add
add
lods
add
mov
add
add
jae
add
add
incl
add
add
incb
add
add
bound
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
in
add
incb
add
add
add
add
add
add
add
add
incl
add
add
incl
add
add
pop
add
mov
mov
add
add
cli
cli
add
incl
add
add
in
add
lret
loop
add
add
xchg
add
movsl
add
jecxz
add
add
add
xor
add
add
add
add
cli
add
jmp
add
add
incl
add
add
xchg
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
faddl
add
add
mov
add
add
add
das
add
cmpsb
add
nop
add
pop
pop
add
add
add
add
mov
add
add
incb
add
add
add
add
add
mov
mov
add
add
cli
cli
add
incl
add
add
stc
add
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
sub
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
add
incl
add
add
push
add
pop
add
add
add
pop
add
adc
add
mov
add
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
mov
add
add
incl
add
add
popf
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
add
enter
add
incl
add
add
aam
add
add
and
add
mov
add
add
inc
add
jb
add
add
add
add
mov
add
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
xchg
add
or
add
add
faddl
add
add
incl
add
add
incl
add
add
incl
add
add
test
add
add
pop
add
addb
xchg
add
add
add
add
add
add
mov
add
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
dec
add
addl
incl
add
add
incl
add
add
incl
add
add
incl
add
add
fildl
add
add
stos
add
jle
add
add
add
add
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incb
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
pushl
mov
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
out
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
mov
add
mov
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
rolb
add
add
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
mov
insb
inc
cmp
dec
leave
ljmp
mov
rorb
pop
idivl
jae
ret
movsb
int
mov
adc
inc
dec
dec
pop
mov
dec
cmpsb
pop
ljmp
shr
ja
jne
xchg
stos
xchg
pop
jo
int
sub
jno
fisubrs
mov
out
xchg
mov
jnp
loope
push
mov
dec
addl
stos
cmp
sbbl
mov
pusha
xchg
cmpsb
sbb
and
and
shl
movsl
mov
and
dec
push
pop
jl,pn
lcall
fistpl
add
mov
ljmp
fisttpl
push
cmpsw
int3
adc
stos
jb
ss
sti
xlat
movsl
mov
jnp
dec
leave
aam
xchg
imul
adcl
jmp
and
cmc
xor
pop
or
mov
incb
lcall
dec
js
dec
clc
popf
ja
xor
mov
aam
call
mov
fstpt
movsl
mov
xchg
pusha
lret
pop
decb
arpl
addr16
and
inc
jb
xchg
insb
xchg
fistpll
mov
repnz
daa
lret
mov
adc
pop
xchg
mov
cmp
es
mov
addl
mul
aam
test
add
ss
imul
js
cmc
ret
jns
pop
dec
fidivs
dec
shrb
fwait
jne
add
icebp
cli
out
bswap
popa
loop
sub
fldt
jae
jb
inc
mov
stos
jge
aad
add
shlb
lods
cmpsb
ficompl
aad
mov
mov
stc
cltd
inc
gs
cmp
cs
lret
add
push
push
das
push
in
rorb
rclb
popl
xchg
leave
mov
sub
outsb
movsb
int3
pop
int3
sub
xchg
jmp
sbb
and
mov
and
aad
xchg
sahf
data16
sub
push
out
ds
mov
push
inc
cmp
dec
sub
bound
dec
cmp
jb
ljmp
cmp
addb
add
push
push
jp
or
push
jo
mov
das
jns
shrb
cmp
xor
outsb
lock
in
popf
xchg
xchg
test
mov
sbb
xor
hlt
inc
ret
leave
mov
jbe
xor
pop
push
mov
add
fcomps
dec
loop
cmp
insb
test
adc
or
aaa
aam
test
push
jbe
sbb
push
sbb
pop
loopne
test
or
sahf
or
arpl
clc
mov
xor
daa
mov
movsl
sti
es
cld
push
push
and
arpl
lret
sbb
inc
pop
pop
fisubs
es
push
sahf
ljmp
jecxz
xor
pop
aad
pop
sub
scas
cld
cmp
in
arpl
mov
mov
scas
sbb
lods
jae
sub
inc
inc
mov
cmp
mov
jge
cmp
aam
push
movsb
in
test
pop
fiadds
lahf
insb
adc
or
test
mov
xchg
ss
mov
push
push
cmp
out
rcll
mov
into
lods
or
ljmp
cmc
fcoml
inc
mov
jge
movsl
fwait
add
stos
outsb
std
call
cmpsb
and
stos
sbb
cmpsl
outsl
push
add
jmp
xchg
xor
cmpsl
enter
aaa
outsb
cmp
jae
popf
cmp
out
mov
mov
lret
xchg
andb
lret
mov
add
cmp
sti
fcompl
jbe
sahf
jge
jmp
test
sub
add
pusha
or
call
gs
fdivs
xor
dec
mov
jmp
nop
ret
xchg
pop
mov
or
stos
xor
or
sub
dec
je
mov
add
or
push
mov
fdiv
ja,pt
adc
jo
pop
arpl
mov
aam
je
dec
jne
dec
lcall
in
out
pushf
mov
hlt
mov
xor
rcl
lret
cmpsb
in
sbb
adc
and
jo
xchg
push
cmp
jge
push
dec
xor
mov
pop
lcall
mov
shrl
in
jecxz
std
sbb
aaa
or
imul
jmp
lods
push
push
sub
and
xchg
repz
dec
add
cmc
fsubl
push
ret
mov
pop
xor
mov
mov
ss
jl
or
push
push
loope
nop
pop
orl
sbb
lds
push
cmp
lock
pop
and
test
mov
pop
mov
push
out
sbb
dec
xor
ljmp
imul
ret
cmpsl
insl
jno
mov
jae
orl
adc
aas
mov
add
mov
mov
pop
scas
aam
jg
pop
xor
out
sub
addr16
bndldx
clc
cmp
pop
adc
popa
pop
bound
mov
lods
out
negb
jae
and
das
mov
divl
scas
push
outsl
adcl
out
mov
pop
in
enter
movsl
test
xchg
adc
pop
aaa
int3
jb
repz
cmp
insl
dec
inc
jge
repnz
pop
insb
stos
push
pusha
sbb
ja
hlt
lds
fistpll
xor
ds
mov
std
dec
mov
inc
lret
int3
loope
and
pop
adc
jg
jb
cli
sub
pop
mov
loopne
pop
fdivp
div
cmp
xor
pop
mov
pop
sub
rorl
dec
fldenv
push
jmp
ret
js
add
push
sbb
sbb
insl
out
mov
xor
and
jl
fdivs
mov
push
into
pandn
push
mov
cmp
int3
inc
dec
ret
js
sarb
test
icebp
xchg
in
lret
jbe
push
popf
lods
inc
cmp
into
gs
int3
inc
ja
loope
clc
int
sbb
jbe
ja
test
adc
push
push
adc
push
add
jo
mov
flds
sub
cmp
dec
xor
out
ja
push
adc
push
lcall
fs
daa
popa
gs
out
out
push
push
lods
mov
push
loop
mov
ljmp
lret
pop
sub
mov
add
insl
fidivl
sbb
pop
sbb
xchg
pop
andl
add
inc
sarb
shl
aas
test
sub
xor
fincstp
nop
mov
rorl
cmpsl
pop
mov
jne
mov
sbb
data16
fidivl
cli
jg
adc
test
jge
push
inc
or
jo
clc
sbb
add
mov
push
or
cmc
out
cmp
xor
or
hlt
jecxz
adc
sub
lds
mov
ds
cmpsb
jmp
pop
rcrb
and
enter
lock
leave
xchg
mov
mov
mov
stos
sbb
mov
dec
mov
push
das
inc
push
movsb
cmp
fiadds
or
mov
daa
aad
add
data16
jae
mov
roll
mov
xor
and
xor
mov
lods
jg
push
mov
dec
aad
ds
add
mov
jae
negl
gs
scas
int
push
or
std
enter
mov
and
dec
je
mov
mov
cli
xorb
jbe
lret
and
loopne
xlat
jns
sub
cmp
cmp
mov
icebp
xlat
adc
lods
sub
mov
or
xor
xor
and
fisubl
repz
pushf
pop
arpl
mov
pop
fsubrp
outsb
popa
movsl
jno
incl
jns
xchg
out
pop
add
insl
int3
mov
bound
fists
lods
repnz
loopne
fs
mov
cld
mov
xor
mov
bound
je
lds
imul
sub
dec
adc
fisubrl
push
pop
xchg
lea
push
xor
mov
and
jmp
jo
iret
mov
mov
decb
nop
sti
jae
push
xlat
mov
js
fadd
popa
push
and
sbb
adc
xorb
dec
call
sbb
xchg
and
cli
xchg
mov
ret
mov
sub
lret
jno
inc
pop
and
push
fnstcw
jo
addb
dec
ds
xor
sbb
cmpsl
xchg
inc
in
xchg
stc
inc
mov
aad
sarl
hlt
push
xchg
push
js
pop
xchg
fildll
inc
mov
adc
jae
sarb
inc
dec
xlat
mov
push
sub
dec
lea
fsubrs
mov
out
mov
cwtl
sarl
paddq
push
sub
jge
les
lds
xchg
mov
aas
xor
cmc
pop
and
decl
add
test
dec
pop
loope
xchg
cld
rclb
push
dec
dec
add
xor
mov
arpl
jl
in
int
into
in
inc
pop
jecxz
sub
xchg
out
out
notb
mov
mov
cmp
push
sbb
mov
bound
xchg
jae
fbstp
cmpsb
fdivs
jmp
push
jmp
ja
fucom
jne
xchg
aad
pop
push
cltd
and
push
sbb
sbb
addr16
sbb
push
push
pusha
dec
inc
sbb
xchg
sbb
repz
xlat
dec
jmp
pop
aas
mov
sub
push
jne
imul
push
mov
jno
inc
mov
dec
inc
lods
push
adc
enter
dec
imul
aaa
mov
mov
mulb
ror
xchg
xchg
jo
loop
aad
imul
or
push
data16
fnstenv
mov
xchg
daa
testb
xchg
clc
in
aas
icebp
xor
fisttpl
xchg
mov
icebp
stc
mov
test
mov
and
pop
or
fcomip
adc
sub
xor
pop
fdivr
rorl
lods
and
jle
aaa
inc
test
jbe
adc
imul
mov
out
lea
pusha
fiaddl
inc
subb
rcl
mov
je
inc
inc
push
cmc
jb
scas
xchg
adc
fisubrl
dec
imul
lock
repz
pop
push
nop
mov
dec
inc
loop
cli
or
bnd
pop
jg
shrb
mov
mov
addr16
xchg
js
roll
fiaddl
rclb
jo
arpl
bound
test
mov
mov
pop
push
push
xlat
roll
ret
inc
andl
jae
push
in
jmp
inc
pop
orb
cli
sbb
sbb
stc
cmp
stos
out
push
add
ss
pop
mov
sbb
std
sub
mov
fdivl
xchg
fildl
mov
jp
jge
or
xor
dec
ja
adc
sub
mov
mov
scas
dec
movsb
add
or
pusha
sub
shrb
push
push
jns
inc
adc
call
xor
xchg
xor
mov
and
push
add
addr16
cli
jg
fwait
rorl
or
lahf
inc
jmp
addr16
adc
and
insb
std
shlb
push
stos
pop
pop
out
push
out
stos
sbb
lock
das
ds
andb
mul
decb
rorl
fiadds
lock
out
iret
cwtl
pop
dec
mov
fdivs
lcall
jl
insb
dec
ss
xlat
lods
dec
cmp
scas
shll
inc
dec
jb
loop
movsl
mov
addl
push
mov
and
lret
mov
popf
sahf
sub
sub
or
inc
fistpll
jno
and
addr16
dec
mov
jp
dec
jmp
les
sbb
lahf
daa
out
pop
xchg
sub
dec
cmp
data16
dec
dec
push
xor
mov
jle
cmp
mov
ja
jg
lock
and
adcl
pop
mov
adc
mov
fwait
mov
call
dec
push
pop
jge
mov
pop
adc
lods
adc
out
mov
pop
mov
xlat
sub
adc
imul
lret
xchg
add
sub
inc
xchg
xor
pop
stos
test
cmp
sub
push
sbb
adc
testl
xor
xchg
loop
push
std
mov
rcl
mov
loope
neg
jl
dec
jns
push
or
mov
scas
mov
mov
inc
pop
sar
mov
mov
aad
cmpsl
icebp
addb
push
mov
loopne
sub
lds
pop
or
push
pop
xor
or
mov
test
lahf
xlat
scas
cmp
cmpsb
nop
arpl
mov
stc
rclb
pushf
rcrl
imul
xchg
or
fbld
in
mov
hlt
jbe
cltd
mov
push
lret
fwait
mov
dec
xor
movsb
mov
std
and
lods
pushf
jmp
scas
jb
mov
gs
ja
iret
jp
stc
fldlg2
stos
jo
jp
jb
inc
jne
out
cs
fdiv
dec
xchg
and
xlat
push
sub
pop
in
stc
pusha
mov
jge
cmp
icebp
adc
mov
pusha
xor
popf
jno
xchg
sub
xchg
roll
or
cld
sub
sbb
in
lcall
adc
repnz
push
xchg
or
mov
cmp
test
jno
xchg
daa
test
call
mov
jae
fmuls
dec
loop
aad
repnz
push
xor
sahf
push
shll
jbe
mov
sub
jns
sub
xchg
movsl
inc
sahf
jmp
mov
fisubs
dec
pop
rorb
ffree
in
hlt
out
xor
jno
xbegin
push
into
cmp
sub
inc
xchg
rorb
xchg
in
pop
mov
jb
dec
add
and
lcall
adc
data16
leave
andb
inc
push
and
jp
lret
pushl
rcll
inc
fwait
sbb
arpl
stos
rorb
and
push
fstps
popf
je
jo
mov
std
gs
push
ret
imul
xchg
mov
addr16
ljmp
sub
sub
fidivrs
push
popf
js
insb
ret
stos
test
faddl
xchg
inc
cmc
cli
shll
cmpsb
test
into
cmp
enter
mov
jecxz
shlb
fwait
push
mov
fcoml
pop
insl
pusha
jp
dec
sub
mov
xchg
loopne
pop
inc
nop
xchg
cli
test
push
inc
sub
xchg
insb
movsl
out
dec
jns
add
pop
sub
sbb
inc
add
push
sub
fcmove
imul
into
stos
pop
addr16
sbb
jo
xor
iret
xor
sbb
mov
test
xlat
fidivs
icebp
cmp
push
enter
add
inc
add
lds
mov
stos
jb
cmp
jmp
add
cld
and
jae
fstp
push
jg
jl
ljmp
imull
movsl
add
push
shlb
mov
lds
push
push
sub
inc
pop
jecxz
lret
lcall
jae
insb
lret
pop
push
mov
mov
das
mov
mov
push
mov
out
mov
test
int
xor
pop
mov
dec
lea
iret
aaa
outsb
mov
pop
andl
dec
cmc
cmpsb
xor
testl
and
dec
test
in
dec
fwait
jge
repz
or
push
push
adc
mov
js
test
xlat
jecxz
movsl
insb
push
mov
jl
mov
and
mov
and
xchg
test
rolb
push
das
pop
xchg
loope
fistps
xchg
cmp
sarb
jle
stos
xchg
xor
jge
pop
jg
pop
push
popl
inc
lret
out
sbb
push
inc
je
repnz
fdivrl
adc
fstpl
cmp
or
fcomps
cld
push
aad
jae
rcrl
lret
xchg
sub
mov
mov
dec
mov
mov
shrl
xchg
mov
pushf
int3
adc
xlat
mov
adc
int3
jno
pop
imul
mov
js
or
cli
out
add
mov
jmp
jmp
call
cmp
cmp
pop
pop
daa
sub
lea
or
scas
sti
jl
add
push
jae
daa
pop
int3
sbb
int3
mov
dec
js
mov
pop
fistpl
mov
popa
lock
sar
out
mov
inc
mov
sbb
lcall
stos
lods
mov
push
dec
in
cld
jnp
mov
or
sub
xchg
into
dec
jp
outsb
cmpsb
mov
pop
mov
je
push
mov
stc
lods
dec
ret
add
daa
dec
flds
mov
adc
movl
movsb
push
push
dec
icebp
mov
jno
and
lret
cltd
sub
inc
adc
jle,pn
nop
in
adcl
lret
rorb
fs
pop
mov
inc
lcall
clc
stc
dec
in
in
mov
insl
mov
mov
adc
mov
push
hlt
sbb
fsts
cltd
and
lds
jbe
jmp
je
or
inc
pop
push
inc
nop
out
xchg
mov
popf
mov
mov
bound
adc
xchg
int
jmp
stos
and
dec
push
sbb
sarl
mov
mov
lock
pushf
shr
pop
sub
or
pushf
mov
cmpsb
lea
mov
lret
mov
in
dec
sub
sub
push
adc
sbb
mov
inc
jns
add
mov
fldl
negl
adc
xchg
pop
fimuls
xlat
nop
cltd
jle
or
and
pushf
inc
adcl
enter
dec
xor
punpcklbw
nop
dec
andl
sub
sub
jp
xchg
sbb
add
jnp
sub
mov
enter
and
lods
mov
push
js
jge
insl
cmp
imul
dec
ja
mov
imull
test
call
cmc
xorl
fucomip
andb
scas
dec
mov
inc
pop
adc
ljmp
push
daa
outsb
shrb
bound
mov
mov
or
cmpsb
je
fcomp
pop
sub
jg
mov
xor
jo
ss
rolb
pop
pop
imul
scas
lret
mov
push
add
xor
pop
lret
sbb
push
imul
mov
sub
call
wbinvd
adc
mov
out
and
adc
inc
lret
test
in
jmp
pop
lds
out
jp
test
in
loope
das
fdivl
fcompp
fstpl
push
ret
daa
rorl
roll
in
sub
mov
dec
lods
cld
xor
xor
and
ja
pushf
adc
inc
dec
sub
aaa
mov
mov
add
pop
mov
push
pop
adc
movsl
xchg
pop
ljmp
adc
cltd
jecxz
das
cmp
clc
shlb
xlat
push
fidivl
jmp
repz
cli
xchg
mov
mov
mov
inc
imul
pop
cli
fildll
in
mov
xchg
cli
outsl
add
jge
movsb
xchg
mov
es
call
jo
daa
push
push
cltd
jnp
in
dec
out
dec
mov
andl
xor
cmp
mov
mov
sub
ds
cld
adc
adc
std
adc
stos
roll
dec
mov
pop
xlat
roll
in
push
je
lret
dec
outsl
notl
faddp
mov
add
adc
es
fwait
dec
jne
ljmp
or
mov
adc
pop
add
add
add
mov
movl
jecxz
repnz
cmp
or
jl
sti
pusha
ja
aas
shl
mov
lret
jo
sub
out
in
iret
xor
adc
jnp
inc
sbb
xor
fwait
pop
cmp
cmp
call
mov
mov
cmpsl
icebp
pop
cmpsl
rorl
ja
dec
divl
hlt
sbb
pop
pop
pop
dec
cmp
adc
in
smsw
or
fldl
mov
cmp
popa
and
test
aad
out
iret
mov
bound
jmp
repnz
mov
and
sub
xchg
cmp
movsb
cltd
push
and
imul
repnz
fistl
cmpb
fnsave
mov
add
xchg
jecxz
and
icebp
adc
sti
or
cmpsb
dec
out
stos
inc
lahf
pop
outsb
add
mov
leave
lcall
daa
es
xor
test
mov
into
icebp
mov
movsb
adc
jge
jp
subl
cmp
mov
jnp
mov
push
cmpsl
mov
outsl
popa
test
or
or
lods
mov
ret
pop
lret
mov
out
mov
roll
jae
dec
fildll
das
out
add
loopne
jb
cwtl
das
imul
adc
pusha
addr16
and
pop
test
scas
push
gs
fimull
jg
cmpb
inc
ljmp
jle
jbe
int
push
pop
insl
mov
or
stos
push
jp
jle
aaa
sbb
cmpsb
inc
mov
xchg
fwait
pop
cwtl
and
fcmovne
movsl
insl
fldpi
fistl
insl
dec
push
mov
rcrl
push
add
aad
cli
dec
mov
add
fdivp
mov
jb
dec
pop
ljmp
jl
fiadds
xchg
push
sbb
popl
loop
subl
rorb
or
jl
xor
repnz
jle
sbb
inc
into
push
cmpsb
addb
test
filds
sub
push
cmp
pop
shr
out
fwait
push
dec
rol
test
push
test
insb
cmpsb
and
call
mov
in
pushf
aas
pop
repz
js
mov
test
or
or
xchg
js
mov
repnz
xchg
or
xor
cwtl
xchg
add
and
jne
adc
movl
call
and
and
adcl
lret
movsb
rcrb
sub
inc
stos
stc
rclb
dec
and
dec
pop
and
fldl
mov
mov
inc
push
adc
mov
adc
mov
add
inc
jp
jp
lcall
mov
mov
push
pop
sub
das
and
push
cli
xchg
push
in
sub
sarl
int
and
jecxz
jmp
lret
xchg
mov
in
sbb
pop
rclb
call
and
dec
imulb
pop
insl
clc
adc
in
jns
dec
movsb
fistps
imul
cmc
jbe
push
aas
cmp
inc
imul
fcom
mov
sub
jbe
lahf
lret
arpl
mov
push
inc
pop
dec
movsb
aaa
fdiv
inc
cmpsb
or
pop
push
jb
xchg
mov
nop
mov
xor
stos
fsubs
jmp
ja
mov
add
lock
cmpsl
mov
insl
jge
adc
mov
fsubl
mov
mov
adc
je
cmp
data16
pop
pop
filds
and
cmp
in
nop
sub
adc
cmp
inc
sbb
hlt
loop
dec
push
ret
js
add
test
add
cmp
push
jmp
push
fdivrl
stc
add
cltd
jge
sbb
ss
and
dec
into
ret
cmp
push
inc
mov
imul
out
or
cmpsl
cltd
aaa
cmovge
add
loope
enter
ret
daa
push
xor
cwtl
cltd
xchg
cmpsb
call
leave
dec
sahf
push
lea
mov
add
shl
call
cmp
into
jnp
int
and
jl
mov
cs
xor
test
mov
xor
test
or
inc
sbb
shl
aam
fs
daa
push
loope
lds
insl
jns
fcmovbe
scas
adc
mov
inc
inc
push
xchg
loopne
cmp
or
call
arpl
idivb
inc
std
icebp
lret
lods
mov
into
dec
and
stc
jbe
or
lret
push
adc
inc
in
sbb
sbb
pop
pop
push
cli
fidivs
pusha
jmp
ss
add
jmp
das
fwait
std
xor
push
pop
sbb
xor
mov
dec
jno
sub
sub
enter
xchg
test
insl
push
xchg
xor
xorb
sbb
hlt
cli
mov
mov
sbb
insl
and
xchg
mov
xor
add
cld
out
jne
sti
adc
sub
mov
sbb
stc
jns
scas
or
lods
testl
jb
and
fnstsw
adc
shlb
mov
lret
data16
mov
test
inc
scas
jge
inc
add
xor
shlb
sti
or
scas
jg
dec
push
test
sub
push
push
or
aaa
enter
inc
out
push
aad
stos
fisubs
dec
jge
mov
rcrb
fimuls
push
mov
cmpsl
xchg
jmp
mov
subb
popa
or
clc
fwait
lcall
pop
dec
xor
or
jns
lret
mov
xor
iret
push
in
push
adc
shr
inc
cmp
xchg
rorb
jo
jno
and
test
int
mov
das
jo
mov
dec
mov
imul
idivl
or
pop
push
cltd
mov
in
sub
rsm
sahf
xor
or
add
mov
lahf
mov
les
daa
ret
push
idivl
add
push
and
xor
push
xchg
mov
lods
and
dec
je
mov
dec
cmp
movsl
sub
xor
ljmp
jle
mov
sahf
in
pop
lods
test
sahf
hlt
and
lahf
mov
movsl
pushf
add
pop
push
andl
cli
pop
sbb
or
mov
imul
aam
sbb
gs
scas
aam
jp
or
in
scas
ds
xor
and
mov
sub
inc
dec
jecxz
xchg
add
pop
lds
andb
cmp
sbb
and
loop
cmp
jbe
or
add
jae
add
jns
push
cmpsb
out
cltd
and
mov
les
push
ret
and
fisubs
sbb
fidivrl
jle
xor
xor
sub
pop
into
inc
mov
inc
scas
divb
pop
out
std
incl
scas
pusha
loope
bound
xchg
sbbl
adc
or
repnz
aas
dec
enter
dec
push
xor
or
add
mov
mov
js
jl
das
push
gs
sbb
add
aaa
daa
je
mov
movsb
gs
dec
add
scas
cmp
jl
aas
setnp
out
sub
xor
jne
es
inc
push
out
enter
jg
cmpsb
push
out
mov
jle
jns
std
and
fmuls
xor
imul
lcall
and
inc
push
xor
call
xchg
lods
sub
lea
add
mov
in
test
leave
call
inc
add
or
enter
mov
repnz
lret
add
xlat
and
call
adc
xor
pop
loope
add
test
xchg
jae
ret
fdivl
popa
mov
sti
aaa
add
out
inc
pop
lcall
xchg
lcall
ja
pop
imul
mov
mov
xor
mov
outsl
mov
addr16
dec
repnz
mov
sub
mov
outsl
jns
in
mov
mov
and
xchg
xor
push
sub
mov
fsubl
push
repz
mov
sub
repz
pop
bound
nop
jno
test
xchg
int
mov
pop
pop
mov
pop
aas
ss
push
push
ret
cli
fldln2
mull
ds
push
cld
loopne
sbb
outsl
fdiv
pop
fistps
mov
sub
pop
std
lahf
mov
test
scas
mov
aad
mov
and
cmp
test
jno
sub
loop
mov
sahf
push
test
xchg
pop
fwait
shrl
idivb
pushf
jns
ret
ret
mov
jle
lret
xchg
xchg
cmc
lds
or
pop
sbb
fiaddl
pop
sahf
mov
or
xchg
mov
lods
add
jmp
xchg
push
jae
push
imulb
or
ss
inc
cmc
push
fistpll
es
scas
pop
add
mov
movsl
fistps
sbb
sub
aas
je
aaa
and
mov
add
sti
clc
inc
add
or
and
shlb
in
push
or
ljmp
adc
ficomps
jae
dec
out
out
xchg
loop
push
ficoml
aaa
popa
es
test
je
outsl
jnp
and
scas
sbb
test
mov
mov
and
cmp
insb
test
inc
mov
movsl
jecxz
dec
out
out
mov
aad
out
push
std
or
xor
test
xor
lea
rcrl
mov
rcl
mov
jge
push
xor
pop
pop
cmp
or
cwtl
mov
jno
sbb
clc
aam
mov
mov
stos
sub
dec
lahf
outsl
shll
pop
ljmp
mov
xor
adc
call
jp
test
std
ds
nop
xor
sbb
lret
sahf
clc
out
push
pop
push
pop
push
lret
movsl
nop
push
les
xor
lea
jl
or
xchg
push
mov
push
ds
pop
mov
xlat
cmpsl
gs
jmp
pop
outsb
cmp
fistl
dec
test
dec
enter
and
cmp
std
cmp
sub
push
inc
ss
sub
das
js
xchg
xor
mov
aad
pop
cmp
dec
push
adc
iret
push
mov
xor
aad
and
sbb
int
and
inc
mov
out
push
pop
cmpsb
xor
mov
cli
mov
and
cli
insb
in
loop
les
mov
rorb
and
ljmp
mov
push
insl
jo
aas
cmp
pop
mov
stos
cmp
cld
stos
popf
xor
in
jb
push
inc
insl
shll
cltd
pushf
pop
dec
hlt
jmp
and
adc
lods
dec
and
out
xchg
stos
loop
insl
mov
add
aam
pop
xor
pop
mov
cmpl
or
int3
cpuid
jl
ret
gs
cwtl
mov
inc
pop
js
ret
sub
sub
out
xchg
lock
inc
push
xor
andps
imul
das
scas
sti
push
xor
jg
data16
ficoms
orl
xchg
bound
push
pop
jecxz
sbb
push
flds
jp
jge
inc
mov
ret
dec
inc
mov
xlat
cmp
mov
lea
lock
int3
push
shl
andl
mov
fdivl
mov
cltd
sarl
xchg
aas
shlb
adc
in
iret
ds
insl
aam
movsl
inc
jl
jns
add
rolb
loop
adc
inc
jle
std
mov
lgdtl
shl
cmp
fcomps
add
in
xor
out
push
es
inc
fs
inc
ljmp
push
jg
stos
jb
dec
jns
mov
mov
sbbb
movl
lahf
dec
divb
lods
pavgw
scas
stc
mov
popf
and
orb
dec
out
and
ffreep
fsubr
pop
testl
mov
aaa
addr16
mov
jo
sub
repnz
cmc
fcoml
ss
and
icebp
jle
sbb
outsb
lods
adc
jne
jecxz
pop
mov
js
mov
sbb
and
or
xchg
std
pop
or
xchg
adcb
xchg
adc
pushf
and
shll
test
ss
jmp
in
out
jns
aad
aaa
loopne
pop
lods
aad
mov
popf
xor
mov
sti
cld
in
cwtl
mov
xorl
rclb
push
je
cli
mov
clc
sub
xchg
int3
xchg
ds
fcomps
jg
push
pop
jg
imul
mov
test
in
cmp
mov
aas
insb
jne
movsb
hlt
sub
jmp
jg
mov
std
mov
stc
inc
iret
sub
scas
dec
or
xor
jle
inc
xchg
inc
fldenv
xchg
inc
sbb
sbb
sub
and
repz
sub
lds
into
ret
xchg
or
mov
or
jae
mov
out
das
fidivs
sub
sbb
stos
stc
lock
mov
stos
ja
mov
dec
push
test
xchg
mov
dec
pcmpgtd
pop
ss
out
lcall
js
adcl
aaa
mov
mov
imul
repz
add
sub
cmc
cmp
cmc
test
lods
fldcw
push
mov
push
jo
xorl
inc
rorb
push
nop
out
and
jne
inc
mov
cmpxchg
sub
cmp
sub
lcall
add
jecxz
incb
jbe
enter
repz
clc
movsb
fwait
js
sar
fildll
aam
cmpl
ss
bound
lret
mov
lock
es
mov
hlt
addr16
loopne
push
and
aaa
push
dec
jb
pop
push
repnz
sub
pop
mov
cwtl
dec
adc
mov
cmp
cwtl
in
lret
pop
mov
mov
and
cmp
xor
dec
pop
test
ds
or
jge,pn
mov
cs
pusha
inc
mov
mov
sbb
call
fisttpl
sub
imul
pop
add
popa
jmp
or
aas
js
push
inc
rclb
push
lahf
and
iret
jnp
pop
cmp
arpl
fldt
mov
int3
or
loopne
xlat
repnz
cs
or
jl
insb
add
cmp
push
xchg
test
cmp
push
mov
loope
out
sar
daa
mov
clc
in
xor
sub
adc
sub
mov
or
push
popl
roll
add
push
push
push
xchg
mov
rorl
mov
xor
inc
cmpsb
js
pop
int
jmp
inc
out
mov
ja
xor
stc
out
mov
in
movsb
es
cmpsl
lods
mov
jmp
pop
and
and
out
and
mov
out
mov
outsb
into
mov
and
cmp
testl
pop
std
icebp
mov
pop
lcall
push
fs
and
mov
or
stos
mov
fnop
dec
mov
popf
in
lcall
xor
fwait
enter
arpl
jns
divb
push
cwtl
jbe
pop
or
jg
scas
leave
jb,pt
outsl
je
enter
ss
stc
ds
repz
test
xchg
enter
enter
psrad
cmp
cmp
std
adc
dec
test
mov
xorl
jmp
mov
xchg
dec
jo
jo
sbb
add
repz
scas
sub
lret
jne
test
jl
andl
jae
jno
std
jmp
in
dec
or
pop
nop
pop
cmpsb
pop
jg
stos
sub
mov
jmp
dec
pop
iret
mov
xorl
and
enter
push
out
push
cmpsl
cmc
not
loop
sub
cli
das
jne
mov
clc
cli
test
xor
pop
cmc
sbb
out
xchg
call
sti
pusha
scas
push
jmp
insl
icebp
mov
sti
cmp
stc
xor
fucomp
lcall
xchg
cmp
inc
xlat
adc
cmp
rol
fwait
jge
in
lret
push
je
jecxz
ret
mov
sbb
sub
stos
stos
push
fwait
jo
push
fldt
mov
cmp
inc
pop
mov
shlb
cmp
mov
imul
mov
push
cmpsb
add
popa
imul
or
xchg
arpl
jo
icebp
jecxz
mov
lret
ret
jle
lea
insb
in
mov
fstl
push
aam
push
insl
fldpi
lock
add
inc
out
fwait
xor
cwtl
xor
adc
ret
cmp
cwtl
xchg
inc
pop
cld
and
xchg
mov
cmp
sbb
and
cmpsl
cmp
push
xchg
cmp
stc
mov
inc
pusha
in
lods
cmp
push
xchg
push
mov
xchg
leave
and
lock
sub
scas
cmc
pop
clc
mov
push
cltd
xor
cmp
dec
daa
inc
pop
cmc
cmc
out
sbb
aad
xor
mov
push
xor
jl
xor
rep
popf
loop
cs
or
imul
in
ja
rolb
ds
repz
in
subb
bound
xchg
ljmp
shlb
cmp
rorb
mov
rolb
lods
inc
jle
xor
sub
xchg
inc
ljmp
or
xsaveopt
mov
shrl
jecxz
jns
cmp
mov
dec
sbb
add
and
popf
in
sbbb
aas
repz
push
lahf
or
jge
xchg
dec
sti
sbb
push
sub
sub
mov
cmp
inc
inc
imul
int
sub
jle
dec
sbb
stc
xor
pop
pushf
jge
push
xchg
aas
jg
xchg
sub
pusha
xor
jne
in
inc
xchg
scas
popf
pop
insl
cli
dec
stos
rorl
cmp
push
loope
push
push
mov
jae
add
push
ret
orl
repnz
mov
lods
call
adc
outsl
cmp
sbb
lret
rcl
sbb
inc
insl
ds
mov
mov
mov
insb
or
inc
lret
cmp
cld
add
or
push
push
scas
push
pop
call
movsl
or
mov
mov
adc
shr
push
pop
cmp
inc
out
push
lea
push
fidivs
xor
pop
cwtl
fbld
mov
faddl
call
dec
sbbb
cmp
dec
fimull
dec
iret
mov
mov
lods
and
fs
sbb
movsl
sub
sub
scas
in
mov
and
adc
arpl
xor
dec
xlat
fprem1
xchg
sbb
ja
mov
insl
sub
loop
mov
int
mov
test
dec
xor
stc
lods
jne
movb
and
stos
call
sub
and
adc
loopne
fwait
push
dec
les
andb
rcrb
xchg
stc
xchg
pop
or
popa
subl
mov
inc
shll
sbb
stos
stos
lods
dec
adc
ds
xchg
shrb
push
mov
or
push
test
push
xchg
adc
mov
mov
aad
adc
xchg
fcoml
inc
push
or
mov
push
insb
inc
adc
sub
xchg
subb
sub
xor
test
and
sbb
into
mov
inc
xchg
fwait
pop
int
pop
test
scas
imul
lods
mov
dec
arpl
sbb
pop
hlt
push
lcall
cmp
in
inc
es
notl
movsb
repz
push
rclb
jmp
pop
and
mov
aam
out
push
xor
mov
mov
sbb
add
mov
repnz
mov
cli
jnp
push
inc
bound
inc
test
and
out
out
pop
jge
mov
jo
stos
aaa
mov
pop
test
cmp
shlb
mov
push
sahf
neg
in
pop
pop
add
fwait
das
mov
popw
pop
jns
fcomps
jle
rcl
mov
inc
jmp
xchg
aam
pushf
inc
fwait
lahf
fidivrs
in
js
push
or
jno
iret
pop
lods
mov
dec
xchg
rorb
mov
imul
adc
pop
fmuls
addr16
mov
jnp
sbb
mov
out
mov
xchg
jne
cmp
inc
dec
rcrl
clc
and
push
lods
shlb
sbb
and
or
mov
std
rolb
push
dec
insl
cmp
loopne
out
scas
leave
out
jno
mov
push
fldl2t
mov
jae
mov
push
outsb
jb
cmp
hlt
sub
shll
add
jae
xchg
pop
mov
add
sbb
add
loop
and
test
push
pushf
stos
es
mov
and
xor
cmp
fstl
outsb
imul
add
insl
dec
mov
cmp
out
ret
jge
call
or
int
addr16
pop
movsl
enter
dec
xchg
mov
imul
xchg
sub
fmuls
test
jle
repnz
jae
lcall
out
sbb
ds
shlb
pop
push
les
addl
fistps
shll
stos
sti
adc
imul
je
cli
aam
mov
loope
fnstenv
out
sbb
aas
scas
xchg
and
pop
pop
sbb
cmpsl
xchg
adc
in
rcrl
pop
js
xchg
testb
pop
push
popf
sbb
xchg
mov
sub
xchg
and
push
lock
pop
gs
scas
inc
pop
and
pop
es
and
loopne
pop
nopl
frstor
in
cmp
orb
insb
push
xchg
mov
rcrb
pusha
jl
pop
inc
lock
cmpsl
movsb
sbb
adc
dec
adc
std
out
mov
mov
and
out
add
popa
lcall
xor
adc
int3
imul
jmp
and
gs
and
inc
arpl
in
inc
rcr
add
ljmp
outsl
mov
dec
and
jb
std
test
fistps
mov
imul
and
xor
loopne
je
test
stc
pop
mov
add
xor
push
cmc
xchg
dec
push
and
jecxz
mov
xchg
push
inc
xor
dec
movsb
or
inc
mov
lds
and
cmpb
inc
push
ss
insb
sub
in
mov
mov
dec
pop
test
addr16
or
iret
test
xor
xchg
sbb
adc
jb
pop
mov
mov
add
cmp
jmp
sbbb
pop
sarb
lock
push
add
mov
sbb
cmpsl
mov
out
movsb
mul
divl
add
rcrb
push
test
fsubl
and
mov
scas
lods
sbb
leave
push
mov
cmpb
sbb
movl
dec
inc
lcall
stos
sti
les
inc
xchg
mov
out
and
push
pop
ds
iret
mov
iret
pop
inc
jbe
mov
xor
out
rcrl
mov
enter
sbb
inc
pop
inc
push
push
fwait
mov
shll
mov
pop
inc
xchg
mov
add
mov
dec
pop
loop
addl
dec
std
push
mov
repnz
adc
adc
fidivrl
jmp
in
xorb
scas
adc
or
repnz
sbb
mov
push
hlt
dec
dec
jecxz
or
mov
rclb
mov
stc
mull
stc
test
fstpl
jmp
add
stos
adc
mov
cmp
gs
push
sar
rolb
or
pop
sahf
push
and
sub
or
adc
jno
push
leave
flds
aad
push
insb
jecxz
pop
rcrl
pop
mov
sub
push
loop
xchg
scas
dec
fbld
adc
or
inc
push
cmp
es
pop
push
fsubl
lea
mov
xor
push
neg
stos
call
cmp
inc
data16
dec
movsl
xchg
jp
xchg
mov
or
popa
in
push
lods
jl
hlt
dec
cmp
scas
or
sbb
aad
jne
push
sub
and
out
jp
lret
sbb
jnp
jo
lret
dec
sbb
lds
ds
or
mov
sub
mov
push
jl
test
in
cmp
jno
stos
out
xchg
gs
push
div
pop
arpl
into
push
stos
cvtps2pd
pop
push
ss
jne
cmp
cmc
and
mov
je
sti
push
fucomi
jg
ljmp
mov
pusha
push
stc
jno
fiaddl
push
jg
divb
sub
pop
pop
rclb
pop
cmp
nop
jecxz
adc
outsb
jmp
adc
push
sbbl
nop
adc
dec
or
jle
cmovno
pop
push
inc
or
popf
pusha
test
lea
repnz
aaa
push
pop
pop
adc
test
dec
adc
icebp
cmp
push
xchg
std
pop
test
pop
fiaddl
push
rcll
sub
ss
dec
nop
mov
cmpsb
out
daa
in
fcompl
ds
or
lock
nop
js
dec
xchg
outsb
sub
fnstcw
xchg
hlt
xchg
test
and
and
adc
sbb
xchg
pop
les
dec
cli
or
mov
call
push
push
fdivrs
ds
pop
xlat
sub
mov
inc
jno,pn
add
in
in
pushf
dec
sub
mov
mov
xor
xchg
or
mov
mov
dec
sbb
rolb
push
enter
inc
aas
shrl
aam
adc
popl
aad
out
add
movsl
jmp
cmp
cmp
jno
xor
dec
out
rcrb
and
and
dec
in
cmp
test
out
jecxz
push
subb
jle
ljmp
mov
rolb
scas
mov
and
jb
jge
je
fldcw
dec
sbb
les
push
and
imulb
cmc
lods
test
push
repz
repnz
loopne
pop
cli
cmp
sbb
mov
push
xor
lret
movsb
lods
xchg
test
adc
lods
outsb
sti
cmp
test
lahf
mov
xor
hlt
mov
addr16
dec
je
cmp
cmpsl
jecxz
inc
fwait
rclb
cli
dec
push
mov
pop
mov
jo
sbbb
add
jno
pop
fwait
aam
dec
pushf
ds
sbb
mov
cwtl
subb
sub
inc
rorb
stc
jp
in
enter
xor
cmpsl
push
sti
cwtl
popf
pop
mov
into
sbb
push
fldcw
push
dec
iret
dec
aam
test
dec
repnz
outsl
push
push
push
fsts
out
ror
pop
jbe
gs
jb
jle
adc
fwait
lods
inc
push
jbe
or
rol
fcompl
outsl
rclb
dec
addb
fldcw
xor
cmp
push
xchg
jp
lcall
int
mov
aaa
out
int
xchg
scas
add
cmpsl
xor
pop
dec
das
sbb
das
pop
cltd
lds
bound
je
cmp
sbbl
xor
mov
push
or
push
test
jne
push
inc
cld
sub
jae
loop
cmc
pop
hlt
iret
js
cmp
jno
andb
cmp
fs
push
sahf
jno
imul
xlat
in
cmpsl
mov
sbb
sub
call
pop
ss
mov
ror
xchg
or
lock
cmpsb
sub
test
aas
stos
ss
aad
mov
loope
xlat
sar
xor
fs
jmp
push
pushf
adc
dec
outsl
pop
cmc
pop
fisubl
add
sbb
popf
fdivr
mov
into
stc
push
jne
clc
jle
iret
pop
cli
inc
les
dec
pop
insl
mov
std
mov
shlb
xor
imul
push
outsl
jl
sbb
xchg
int
cmpsl
movl
mov
and
lea
push
push
mov
lea
test
mov
xor
xchg
out
movsb
add
sahf
xchg
test
mov
push
stc
movsl
mov
movsl
push
mov
sbb
lock
jmp
lcall
jb
shlb
jl
xor
push
sar
out
pushf
shrb
fmuls
cmp
xor
push
sbbl
jne
in
ret
fistpl
cltd
cltd
pop
int3
mov
mov
xor
cli
popf
xchg
iret
cmpsb
lock
xchg
jge
mov
and
push
xlat
out
mov
mov
hlt
and
int3
mov
loopne
push
push
std
shlb
or
inc
sub
stos
nop
mov
mov
in
push
xchg
out
loop
push
arpl
cmp
mov
adc
ds
stos
jmp
cld
std
push
add
arpl
sbb
in
and
inc
jge
mov
test
push
ret
test
push
lret
add
jne
mov
xor
enter
lock
sub
repnz
sti
dec
lods
pop
scas
add
in
jmp
in
andb
test
lods
jns
rorb
mov
div
fadds
cmp
dec
pop
add
jmp
idiv
pop
fisttps
cmp
mov
call
sti
hlt
sbb
cltd
imul
push
fcoms
sbb
sarl
out
lods
mov
xchg
sbb
outsl
fcoms
mov
addps
pop
xchg
xlat
mov
xor
ds
dec
aad
clc
sbb
cwtl
mov
xlat
test
in
lret
fcomps
xchg
mov
stc
orl
xchg
or
mov
xchg
testl
mov
nop
out
cmp
push
aaa
mov
and
fucomp
mov
sub
mov
adc
in
pop
adc
push
daa
or
bound
loope
frstor
lret
gs
aaa
ja
jl
js
pop
cs
loopne
mov
daa
xor
pushl
xor
jecxz
xlat
sbb
adc
call
dec
push
cmp
pop
inc
mov
aas
mov
dec
dec
ret
cmpsb
sub
and
mov
or
jp
xor
out
mov
jo
jns
ja
fisubrl
arpl
xchg
rcl
mov
and
jmp
jnp
stos
xlat
or
mov
jecxz
jbe
pushf
mov
aam
mov
loop
push
xchg
pop
test
mov
xlat
notl
inc
mov
out
fisubrl
aas
mov
jo
aad
mov
cmp
ds
in
aad
shlb
lahf
fldcw
mov
int
xchg
push
xlat
push
stc
add
lds
pop
imul
call
jmp
outsb
pop
push
xchg
or
dec
inc
inc
mov
mov
movsl
xor
jmp
mov
sti
push
enter
jmp
dec
push
xor
fs
jl
les
lock
mov
dec
fisubrs
xchg
or
fstp
test
int
outsb
add
outsl
pop
aad
js
mov
push
dec
xchg
dec
push
sbbl
andb
dec
ficoms
lcall
mov
popa
test
or
add
sub
fldl
negb
outsl
scas
rcl
push
fmul
ret
ret
sbb
xchg
dec
sub
popf
push
lods
enter
push
pop
sarl
dec
lret
pop
inc
ljmp
xor
inc
xor
cmp
push
push
jge
addr16
call
or
ss
mov
jo
cmc
xchg
inc
repz
xlat
mov
lret
outsb
out
cmpsb
pop
adc
aas
and
into
lret
or
out
add
stc
pop
sub
insb
mov
sub
add
mov
in
and
jecxz
sbb
jns
repnz
outsl
or
int
lcall
dec
mov
loope
int
and
inc
sub
push
jnp
add
mov
ja
jmp
sub
jp
push
push
xchg
jecxz
ror
fs
add
add
aam
push
jne
push
rep
push
in
fidivs
sbb
mov
repz
xchg
mov
push
ret
push
shl
or
rcl
mov
pop
inc
add
sub
int3
lret
cmp
test
call
or
or
lahf
test
jbe
inc
cmpsb
rcl
or
mov
lods
adc
rcpps
aaa
inc
repz
mov
adc
popf
pop
decb
sahf
xor
sarb
mov
test
ja
cld
daa
sub
mov
xchg
bnd
xlat
fadds
int3
and
int
inc
pop
repz
clc
repnz
ret
aas
sub
xchg
jae
sbb
push
call
jmp
sub
arpl
jnp
shrl
mov
push
es
mov
icebp
ret
test
mov
scas
lcall
or
xchg
dec
sar
mov
push
nop
pop
adc
dec
xchg
shll
xor
adc
ret
or
mov
mov
sarb
leave
adc
push
xchg
push
push
xchg
sub
bound
pop
out
test
dec
adcb
clc
ljmpw
xor
test
imul
mov
or
xchg
adc
fcmovnu
aas
dec
and
lret
inc
xor
mov
xchg
daa
movsb
int3
and
cmp
mov
repnz
mov
inc
adc
clc
add
je
pop
xor
dec
test
loop
je
sbb
movsb
imul
das
mov
mov
jb
mov
imul
push
call
lods
notb
sub
in
cmpsb
push
pop
and
mov
and
pop
scas
frstor
inc
rol
or
xor
inc
inc
fs
fmuls
dec
fiaddl
sub
mov
jno
add
pop
mov
fistpl
jl
dec
lea
push
cs
leave
mov
inc
mov
xlat
jo
rcrl
je
mov
fmul
fcmovnb
popf
push
jbe
scas
xchg
pushf
and
lcall
jp
int
pop
xlat
pop
mov
pop
or
pop
jo
je
adc
xor
in
in
ret
cwtl
jnp
sub
add
sbb
and
inc
mov
dec
insl
inc
stc
jmp
ljmp
test
ds
ds
xchg
addr16
mov
push
dec
adc
in
pop
sar
inc
mov
sbb
xchg
and
sbb
xchg
add
das
dec
push
insb
aas
sbb
cmpsb
imul
cmpl
fisttps
and
jo
mov
loop
or
orb
sbb
movsw
push
sub
mov
ret
mov
push
clc
inc
imul
cmpsb
jnp
xchg
jge
stc
sbbb
sar
arpl
fisttpll
stc
ret
les
mov
fs
les
outsb
out
and
push
idivb
testl
mov
in
inc
cmp
cmpsb
scas
pop
dec
movsb
push
popf
ja
mov
stos
adc
testl
movb
mov
inc
cmp
ja,pt
add
and
ret
cmpb
aam
movsb
in
adc
inc
inc
push
adc
dec
sub
mov
fcom
addr16
dec
lret
sub
or
fmul
dec
or
pop
jmp
add
jnp
aaa
mov
and
lock
enter
push
sbb
xchg
inc
cld
es
pop
cs
arpl
cld
jle
popa
inc
fbld
iret
iret
jmp
jne
insl
cmp
pop
outsl
mov
filds
std
mov
dec
scas
push
scas
and
cmp
mov
icebp
jae
adc
push
jnp
hlt
jbe
xchg
xor
stos
mov
sub
pusha
std
push
loope
pusha
push
xchg
div
mov
add
repz
jecxz
daa
push
lcall
sbb
push
or
outsl
lock
pop
and
rcl
jb
mov
xchg
sahf
jle
sub
aaa
insb
xchg
pop
add
push
and
mov
and
dec
push
inc
nop
sbb
jnp
xchg
leave
mov
outsb
ss
add
adc
ret
or
mov
xor
cmp
js
push
sbb
and
adc
ljmp
divb
ficompl
test
pop
stos
cmpl
mov
icebp
pusha
arpl
sbb
inc
mov
dec
push
ja
and
cli
add
inc
xchg
lds
add
dec
mov
cli
adc
pop
pop
mov
mov
jp
mov
ljmp
adc
cli
fwait
pop
mov
pmaxsw
mov
adc
push
jno
cmpsl
pop
inc
fldl
cwtl
jp
in
fiaddl
jle
outsb
dec
mov
pop
sbb
ljmp
sbb
rol
ficoml
xlat
loopne
add
dec
sbb
cs
nop
pop
sahf
mov
shlb
cmp
cmp
push
lock
xchg
mov
jns
sbb
outsb
pushf
addr16
lea
sbb
loop
out
fbstp
mov
mov
ret
dec
sbb
movsb
xchg
push
jnp
mov
mov
insb
iret
cmp
shll
cmpsb
ficoml
test
js
mov
jo
out
sub
pusha
inc
in
adc
sbb
xchg
mov
xchg
inc
push
mov
jno
cmp
inc
imul
lret
pushf
lods
mov
loop
xor
add
cmpsl
mov
aas
sub
mov
sbb
js
xchg
jns
mov
mov
mov
jle
in
in
pop
ror
xchg
iret
pop
or
mov
pop
rsm
xchg
or
pop
test
pop
les
arpl
stc
pop
icebp
or
popa
in
lcall
call
and
orl
out
test
in
mov
fadds
push
jmp
mov
lea
sub
jnp
outsl
push
xor
jb
in
dec
mov
inc
scas
rorl
loope
jge
insl
mov
jne
shrb
jmp
mov
xorl
pop
adc
cmpsl
jne
mov
fnstenv
cpuid
and
xor
enter
inc
pop
lock
gs
xchg
pop
test
pop
xchg
pop
add
stos
loopne
jns
mov
ds
and
sub
mov
int3
idiv
add
aad
int
sbb
inc
cmp
push
pop
mov
daa
add
adc
out
and
lods
push
outsb
imul
sub
mov
stos
and
lock
adc
stc
and
aas
mov
dec
inc
push
inc
lret
xchg
outsb
jge
in
jns
and
iret
jb
imul
in
mov
adc
movsb
stc
lahf
es
adc
mov
movsl
addl
es
pop
sbb
ljmp
stos
ja
push
jb
in
jo
inc
pop
sbb
in
scas
fwait
cwtl
and
test
dec
push
pop
arpl
sub
pop
shl
movsl
xor
sbb
lahf
sahf
pop
mov
cltd
addr16
repz
es
mov
adc
out
loope
cmp
push
mov
mov
daa
hlt
insb
mov
xchg
mov
push
lods
outsb
je
and
pusha
pop
or
mov
and
mov
cltd
fmull
xchg
pop
or
data16
adc
movsb
and
push
movb
xor
mov
push
outsb
add
shll
xor
movsb
mov
pop
imul
movsb
cld
jbe
icebp
inc
sub
sbb
push
mov
into
data16
or
pop
popf
cmc
addr16
sub
fisubrl
jae
dec
or
mov
mov
outsl
ss
pushf
aam
mov
push
or
cmp
insl
mov
repnz
mov
mov
cmpl
add
jg
roll
out
adc
mov
mov
xchg
mov
cmp
jmp
mov
push
xor
rorl
jp
xor
mov
mov
push
sub
push
mov
or
pop
cli
mov
inc
mov
xchg
sub
fs
xor
in
push
xorl
dec
movsl
and
fadds
sub
xchg
mov
pop
jge
and
ret
fcoms
aaa
inc
mov
adc
and
mov
jle
rep
jmp
mov
mov
je
jns
dec
jl
push
call
mov
fcoml
xor
aam
lea
ret
mov
loope
daa
inc
mov
les
mov
loop
xor
popf
mov
cmp
mov
jno
inc
dec
sahf
jae
ja,pn
push
in
push
jb
loop
rclb
cltd
inc
jb
mov
xor
leave
push
cmp
mov
outsb
adc
pop
out
stc
add
cs
xchg
add
int3
sub
ds
inc
push
leave
inc
repnz
and
repnz
sub
shlb
or
mov
imul
inc
test
out
jnp
mov
sbb
push
lods
mov
test
out
cltd
jbe
mov
pop
add
aaa
mov
push
adc
mov
loope
shrl
arpl
cmp
pop
jle
sub
shl
xchg
xchg
adc
jno
and
xchg
mov
xchg
mov
sbb
pop
mov
ljmp
push
sti
sub
mov
bound
mov
push
dec
inc
stos
pop
out
divps
pusha
std
negb
fwait
lret
jbe
cmp
rclb
hlt
push
fisubrl
pop
cmpsb
lods
xor
and
mov
adc
loopne
pxor
aaa
xchg
add
jg
invd
or
inc
pop
cmpsb
filds
call
sub
lods
lahf
inc
ds
mov
sub
and
fimull
mov
xor
lock
mov
cmp
sbb
pop
cmp
mov
xor
cmpsb
xchg
push
paddsb
pop
ljmp
cmpsl
and
add
xor
cltd
cmp
mov
int3
rorb
mov
popa
fldt
dec
add
xlat
in
cmp
add
xchg
pop
ja
push
mov
add
jl
inc
and
xlat
popf
cmc
div
adc
pop
cs
in
bound
mov
inc
inc
push
lods
cltd
daa
lret
shl
mov
xor
loope
cmc
cmp
pop
or
mov
push
bound
mov
scas
inc
stos
xor
fmull
ss
fidivs
popl
in
dec
sub
lret
cmp
lds
fwait
aaa
add
cmp
mov
xor
sub
leave
adcb
add
jnp
outsl
or
dec
icebp
lahf
push
cld
jb
mov
jp
rcl
test
ss
inc
pop
xchg
mov
sub
mov
xor
out
xlat
and
adc
aaa
mov
mov
leave
pop
mov
dec
into
fidivrs
inc
aaa
push
adc
dec
pop
into
cld
jns
pop
insl
ds
outsl
push
enter
dec
ficoml
and
push
ds
rcl
ficomps
js
jo
inc
scas
pop
enter
es
fimull
movsb
xlat
jno
aad
xchg
clc
mov
add
repz
mov
adc
dec
dec
mov
inc
push
add
ret
dec
lods
push
dec
ds
add
movaps
cmp
movsb
mov
jg
cmp
repnz
loop
js
sarl
lcall
xchg
outsl
inc
push
xor
imul
mov
and
stos
outsb
or
and
movsl
lret
xchg
test
lea
fsubl
nop
mov
daa
xchg
push
sbb
insb
adcb
push
aas
aam
lret
sub
test
pop
rcrb
int3
ja
incb
inc
mov
ret
add
test
cli
mov
dec
icebp
into
push
ja
push
shl
or
xchg
aad
cmp
pop
push
sub
aas
rcll
pop
push
sbb
sbb
jbe
inc
mov
push
enter
adc
mov
mov
shrb
and
hlt
popf
xchg
dec
out
mov
push
add
lock
ret
cmp
or
xchg
jg
mov
sbb
sbb
xchg
pop
ss
jp
and
cwtl
es
sarb
cmp
scas
test
dec
add
dec
aaa
inc
push
das
adc
loopne
cmpsb
mov
nop
pop
cmc
in
xlat
and
adc
stc
out
or
es
push
pop
push
mov
fldcw
lock
inc
imul
in
sbb
sbb
mov
stc
sbb
xlat
pop
test
ss
cmp
shlb
popf
cld
jnp
push
mov
out
xchg
call
leave
and
lods
dec
add
in
fldl
aad
fidivrl
add
in
mov
jae
ljmp
jecxz
xor
inc
or
push
andb
jns
mov
push
jle
pusha
shrb
xchg
jle
loope
js
add
ljmp
push
mov
sahf
push
aad
or
ja
lcall
dec
mov
addr16
adc
push
xor
and
mov
adc
jecxz
dec
add
mov
imulb
stos
adc
lret
adc
fwait
pop
pop
out
mov
gs
or
fs
push
sub
les
inc
sbb
test
mov
sub
aam
mov
sub
aad
pop
aam
loope
or
mov
shll
jnp
push
push
pop
cmp
lret
stc
cmp
bswap
jecxz
pop
loopne
xor
loopne
loope
mov
xchg
outsb
das
xchg
push
push
ss
mov
aas
jno
aad
loop
or
pop
mov
popf
test
lahf
pusha
sbb
scas
in
insl
scas
add
rorl
repnz
push
inc
adc
dec
addl
inc
mov
dec
pop
ljmp
jbe
mov
mov
pop
cmp
rol
mov
popa
test
div
jae
pusha
xor
fidivrl
push
out
push
pop
lcall
fldl
sbb
pop
push
js
jecxz
add
mov
lahf
cmpsb
add
mov
add
mov
ret
inc
cwtl
jecxz
jne
out
shll
popa
cmp
mov
pop
push
jl
mov
push
add
jmp
xchg
bound
gs
inc
add
rorb
ret
ret
xchg
rcrl
xchg
sub
jle
sub
lahf
sbb
jb
jno
mov
icebp
nop
xor
dec
add
push
cltd
cmp
loop
cmpsb
cmp
and
or
add
repnz
mov
add
std
jb
lods
shlb
mov
inc
enter
test
or
jg
fsubr
aam
fcoms
mov
jns
push
test
mov
lods
mov
mov
fistl
stc
inc
push
icebp
jmp
jnp
insl
mov
pop
jno
and
in
or
add
inc
push
test
push
lds
outsl
adc
push
cli
push
push
cmp
push
in
pop
movsb
mov
jl
mov
daa
and
lods
add
out
adc
jb
xchg
dec
pop
fisubrs
cmp
fcmovnbe
adc
mov
sbb
in
mov
xor
sbb
out
cltd
int3
aam
jp
movsl
xor
jmp
scas
fwait
inc
pop
outsb
scas
xchg
pop
data16
mov
hlt
pop
aad
rcrl
fcompl
icebp
cwtl
addr16
mov
popf
dec
mov
jne
js
std
mov
jne
xor
push
inc
jb
xor
stc
fdiv
es
mov
call
fmuls
xchg
orb
loop
sub
jg
pop
and
adc
scas
cmpsb
cmp
negb
test
cmp
jg
push
subl
cmp
pop
jl
mov
sbb
ss
rol
pop
pushl
cld
pop
jb
sub
xor
cli
pop
add
add
mov
shl
icebp
insb
xor
addr16
jbe
fdivrl
pusha
sub
lret
dec
cmp
dec
sti
jae
xor
lahf
mov
sub
push
insl
rcr
add
outsb
inc
jo
inc
movsb
dec
pusha
inc
mov
imul
push
pop
rclb
pop
lahf
push
out
insb
imul
jmp
leave
xor
out
int
test
cmp
inc
mov
jg
cli
loop
in
push
invd
loope
jo
mov
jg
cmp
sub
jge
loopne
jne
and
arpl
cmp
in
inc
mov
sbb
mov
push
leave
mov
or
jg
xlat
sub
dec
ds
sbb
push
dec
or
pop
push
xor
lock
jp
jmp
pop
and
daa
cld
cmp
mov
sub
das
aam
mov
lret
cld
in
rorl
imul
add
and
bound
fists
fsubl
test
adc
xchg
imul
insl
dec
outsl
add
jb
icebp
inc
mov
pushf
in
je
xchg
xor
adc
jmp
inc
ret
xchg
lock
push
or
or
mov
iret
jmp
jmp
jge
sarl
dec
sub
xchg
adc
repnz
inc
fucomi
fidivs
mov
ds
ret
loope
xor
add
adc
mov
mov
sbb
dec
cmp
cmc
sar
push
jo
adc
xor
mov
pop
sub
push
inc
or
popf
push
mov
and
jne
jle
mov
leave
mov
cmpsl
lock
ds
rorb
lret
gs
in
fimuls
cwtl
loop
shrb
mov
mov
fidivs
out
jno
mov
cmpsl
adc
cwtl
sbb
fcmovb
mov
mov
jb
in
fdivr
push
inc
leave
stc
cli
cmpsb
int
scas
mov
push
addl
test
mov
xor
imul
je
divl
sti
lods
repz
cli
movsb
pop
pop
daa
add
pop
cmp
jns
pop
push
dec
shl
imul
pop
lcall
cmp
ret
in
pop
inc
test
pop
stc
pop
xor
add
sbb
jg
or
lods
push
aam
int3
cmp
fildl
cld
pushf
pop
cmpsb
loope
mov
addb
jecxz
test
repnz
sti
mov
mov
adc
cld
cltd
test
cmpsb
adc
loopne
mov
stc
sbb
inc
call
div
xchg
pop
add
xchg
sub
lds
fidivrs
cwtl
cmp
and
sub
push
clc
and
aam
leave
pop
mov
push
shll
es
pop
inc
mov
mov
outsl
into
popa
pushf
mov
adc
mov
jno
xchg
pop
add
cmpsb
rorb
rorl
std
mov
movb
xor
addl
or
jle
bound
mov
in
mov
cmp
mov
jb
into
sbb
sub
xchg
dec
in
xchg
cmp
gs
xchg
pop
popa
not
dec
mov
mov
inc
mov
popa
and
and
in
pop
mov
or
insl
mov
fsubl
loopne
push
rorb
aad
inc
xchg
ljmp
test
sti
fs
inc
mov
dec
add
mov
imul
sarl
mov
rorb
jp
or
push
and
add
cmc
dec
jbe
scas
shrd
icebp
hlt
jl
sub
sbb
shll
push
mov
lcall
sbb
jge
push
xchg
loopne
out
les
inc
dec
notl
negl
bound
out
rclb
push
ror
sub
dec
push
dec
and
add
movsl
outsb
jae
insl
mov
mov
jae
inc
pop
xchg
dec
popa
adc
nop
and
mov
adc
or
fstp
xchg
jl
aaa
and
adc
fistpl
inc
cmp
mov
dec
add
sahf
out
dec
add
sbb
cmp
mov
idivl
out
mov
mov
lods
stos
xchg
xchg
addr16
xor
das
ja
push
sysexit
xor
pop
cs
sahf
popf
push
pushf
dec
xchg
out
cmpsl
push
or
into
dec
ret
xchg
jb
or
push
and
aam
and
adc
bound
sub
das
imul
xchg
jb
lret
loopne
repz
cmpsl
divb
jmp
cs
xchg
scas
sub
adc
jecxz
mov
mov
inc
sti
fsubs
mov
mov
add
ja
data16
fcoms
ds
imul
jae
clc
stos
call
cmp
push
cs
cmpsl
das
or
xchg
test
inc
in
jb
adc
fimuls
mov
sbb
or
push
mov
mov
sbb
test
xchg
stos
int3
sbb
arpl
inc
xchg
sbb
rorb
push
sbb
ja
push
xor
adc
in
sbb
or
and
arpl
fistpl
push
pop
in
cs
push
enter
jns
test
mov
sbb
testb
lea
inc
lds
cmp
andl
lds
mov
mov
imul
pop
xchg
out
outsb
jmp
rorb
lods
inc
or
push
push
xchg
js
movsb
adc
in
add
mov
jno
loop
or
jbe
xor
mov
les
mov
repnz
inc
sub
xor
pop
lods
pop
cmp
inc
dec
and
inc
loope
addb
dec
pop
fstpt
adc
and
sbb
xchg
call
repnz
xor
fcmovnb
mov
int
test
sub
dec
push
or
inc
test
mov
sti
shll
xor
xor
mov
lahf
xchg
add
inc
mov
jecxz
mov
aam
mov
movsl
outsb
stos
cli
fidivrl
ljmp
in
pop
adc
rcrb
repz
mov
add
lret
inc
scas
in
call
cmp
inc
inc
or
mov
and
adc
icebp
or
mov
lock
cltd
mov
test
lods
insb
xor
shll
sbb
scas
or
jmp
push
std
pop
mov
cmpsb
lcall
movsb
ror
mov
ss
lcall
cmpsl
std
mov
mov
sub
jb
in
mov
mov
cld
mov
dec
mov
inc
and
xchg
stc
add
mov
pusha
mov
jge
imul
in
inc
leave
pop
and
jmp
or
cmp
xor
nop
adc
jle
std
loopne
es
mov
dec
push
fisttpll
push
fwait
test
or
sahf
pop
mov
sbb
fcompl
cltd
dec
lret
sar
sub
pop
pop
fcomi
add
xor
int
in
pop
mov
std
sub
stos
jns
cmpsl
or
mov
sahf
adc
xchg
or
out
mov
push
rolb
xchg
jns
or
cmp
leave
sti
adc
outsb
iret
inc
ret
arpl
push
and
movsl
dec
ret
mov
insb
mov
aaa
inc
stos
adc
iret
push
aad
imul
popa
jnp
insl
lock
test
hlt
pushf
jecxz
push
sbb
jge
std
lods
sub
mov
sub
mov
mov
lods
jle
inc
cwtl
aas
out
xchg
lods
adc
dec
lock
ja
in
cli
add
cmp
cwtl
sub
dec
sub
sar
inc
aam
xchg
std
add
mov
fnstcw
push
mov
dec
xchg
jge
cmp
nopl
in
aas
ror
push
or
loopne
inc
stos
or
pop
aaa
mov
pop
pop
leave
or
mov
sbb
pop
xchg
out
push
daa
loope
rolb
mov
sub
xlat
dec
push
mov
les
pusha
pushw
xchg
std
pop
add
cltd
cmp
cmp
jnp
sub
push
ror
pop
out
push
inc
mov
mov
xchg
push
repz
sbb
subb
inc
sub
enter
sbb
mov
mov
mov
sahf
push
cmpsb
fsts
cmp
cmpsb
pop
mov
aad
mov
lret
push
jb
dec
int3
fnstenv
ret
jmp
pop
dec
and
insb
mov
fsubl
push
fs
movsb
cmp
inc
popf
dec
imul
mov
cltd
cmpsb
xchg
mov
mov
shlb
mov
out
movsl
enter
xorl
and
mov
jo
mov
xor
push
pop
into
pusha
mov
sbb
sub
sub
repz
lds
sub
mov
dec
push
mov
sahf
je
mov
divb
sub
dec
jg
push
push
cld
mov
mov
inc
fwait
mov
fldl
cmc
and
daa
push
pop
test
lods
into
mov
in
shll
fimull
imul
sahf
imul
dec
or
ret
insl
inc
mov
jno
arpl
out
popf
idiv
test
xchg
xor
ret
pop
aad
and
mov
xchg
xor
mov
mov
adc
lock
pop
int3
in
data16
daa
ss
repnz
add
daa
or
mov
lcall
scas
sbb
jno
stos
test
in
scas
rclb
push
cld
jmp
dec
cltd
sub
and
mov
jae
sub
mov
mov
inc
mov
mov
dec
dec
les
icebp
adc
add
popa
pop
mov
loopne
mov
stos
jnp
outsb
imul
lcall
out
pusha
inc
test
xchg
dec
cs
pop
loop
lret
push
mov
loope
loopne
out
outsb
fcomps
cmp
push
sub
icebp
or
push
push
rorl
xchg
add
sub
fsts
dec
and
sbb
lcall
cmpb
loop
mov
addr16
out
push
sbb
xor
or
push
out
int
push
or
rcrl
sti
xor
pop
mov
pop
mov
mov
pop
shlb
xchg
push
jmp
iret
les
cmc
rclb
aam
jns
stc
lods
arpl
arpl
maskmovq
idivl
add
andb
jo
jmp
cwtl
or
sbb
push
pop
dec
cmc
push
js
fdivrp
inc
test
pop
inc
arpl
sub
int3
sahf
sub
jb
test
js
stc
stc
xchg
pop
jmp
push
dec
iret
addr16
and
sbb
mov
movsl
push
mov
fs
push
int
ss
dec
in
stos
xchg
or
cltd
leavew
jl
sub
cmp
add
push
imul
dec
iret
jnp
fdivs
in
clc
push
pop
outsb
filds
push
mov
in
mov
cltd
jle
inc
pop
test
je
cli
vpor
sub
loope
frstor
loop
ficomps
jne
call
repnz
xchg
das
pop
arpl
mov
push
sti
test
cmp
jne
popa
das
xor
add
rcrl
ds
scas
xchg
mov
xchg
cmp
mov
adc
sbb
adc
stos
test
inc
xchg
sbb
enter
ret
iret
jl
imul
stos
rcrl
test
push
sar
cld
pop
or
or
xor
sbb
xor
lret
xorb
mov
lret
shl
aaa
mov
dec
push
mov
rcll
mov
sbb
push
mov
mov
mov
mov
cmpsb
jb
xchg
cmpsb
fadds
and
test
xor
sti
aaa
cmpsl
mov
jge
and
adc
push
iret
xor
sub
mov
sarl
add
repnz
pop
add
in
rolb
dec
and
rcrb
sti
std
add
inc
xchg
sub
cmp
fcmovu
mov
fcoml
or
popf
aad
js
and
cmp
cmpsb
cwtl
ss
orl
sbb
xor
imul
jle
xchg
jl,pn
xchg
push
cs
cwtl
daa
test
push
fistpl
cmp
xor
mov
outsb
pop
xchg
outsb
mull
sbb
movsl
ds
insb
jns
movb
or
das
adc
imul
and
dec
loop
fistps
mov
pusha
lcall
sub
sub
test
mov
and
push
outsb
mov
jp
or
aas
or
xlat
arpl
xor
movl
push
out
daa
sbbb
shrl
mov
lcall
and
mov
call
xchg
cli
shl
dec
inc
clc
aad
sbb
pushf
imul
orl
add
cmpsb
adc
dec
push
or
mov
dec
mov
dec
repz
xor
sub
mov
jb
mov
xchg
jnp
mov
in
out
sub
ror
lock
pop
pushf
cmp
xor
test
inc
xor
cmp
push
test
or
xor
arpl
dec
and
mov
jge
pusha
inc
loopne
jecxz
ljmp
sbb
xchg
enter
iret
cli
pop
xchg
nopl
ficompl
idivb
mov
mov
pop
cmp
jge
out
std
jns
notb
push
push
leave
outsl
lcall
xor
pop
push
cmp
add
out
fs
adc
sub
add
xchg
and
adc
or
mov
mov
mov
adc
call
xchg
mov
imul
rorb
or
push
bound
fisubrs
bound
push
jge
push
not
negb
lret
inc
jle
in
adcb
and
in
sti
icebp
or
sub
cmp
faddp
xor
jp
push
push
movhps
add
jecxz
pop
scas
add
in
data16
icebp
data16
aam
shrb
adc
dec
pushf
lcall
lock
in
dec
outsb
lret
push
lret
jl
cmc
cmp
or
adc
inc
mov
fnstsw
sahf
test
adc
in
into
das
dec
push
es
pop
inc
cmpsl
data16
fs
cmpsb
mov
inc
pop
mov
decb
faddp
aaa
mov
mov
ret
xorb
stos
push
add
lret
mov
jle
rcl
inc
call
xor
bound
mov
pop
roll
xchg
sbb
dec
shlb
inc
cs
sbb
sub
push
fildll
xchg
mov
and
push
mov
sbb
popa
icebp
cmp
int
in
xchg
ret
aaa
insb
adc
push
sbb
and
push
cmpsb
pop
jbe
ret
mov
insb
adc
stos
addb
ja
rcll
inc
sub
pushf
mov
push
and
sub
inc
push
add
cli
mov
cmpsb
inc
jno
lcall
sbb
out
jno
xchg
jno
cmp
insb
cltd
adc
ret
pop
xor
rorb
mov
mov
lods
lahf
je
sbb
lds
out
sub
sub
push
sub
ja
push
xor
mov
mov
bound
mov
adc
xor
cmp
or
push
jle
in
xor
mov
mov
in
add
add
shrb
mulb
out
sub
fcmovu
bndldx
mov
clc
adc
inc
shrl
push
into
dec
jge
inc
fnsave
pusha
sub
xchg
add
and
in
dec
mov
xchg
sbb
lea
cmp
xchg
sbb
imul
mov
movsb
jmp
mov
rcrl
and
add
mov
aas
and
cmpsl
aam
sub
xchg
pop
in
fildl
arpl
dec
fisttpl
loop
jo
popa
mov
fmull
xor
xchg
pop
aad
pop
and
inc
adc
daa
add
stc
ds
mov
pop
inc
std
enter
call
popf
push
paddb
imul
jae
add
daa
stc
dec
mov
movsl
dec
out
add
pop
push
addr16
or
sub
jae
test
outsl
adc
mov
mov
ret
mov
test
mov
mov
fnstenv
fdivp
aad
pop
xor
int
inc
aam
sahf
int3
pushf
inc
scas
outsl
in
cmc
in
mov
pushf
movsb
in
or
sbb
fdivrs
in
dec
or
loopne
push
and
pop
inc
pop
mov
dec
mov
sbb
sub
inc
aad
mov
mov
out
add
loop
mov
rcrl
in
xchg
shlb
stc
cmp
mov
mov
xchg
ficomps
fnsave
hlt
dec
and
mov
inc
lret
lret
and
out
or
mov
insb
scas
xchg
ret
insb
movsl
cmp
pop
testb
negb
bound
sbb
js
outsl
js
pop
add
mov
test
hlt
push
xor
dec
or
scas
out
les
in
in
cmp
test
mov
out
sahf
mov
xor
inc
xchg
pop
sbb
add
cmp
pusha
adc
fists
pop
push
lods
xor
push
hlt
cmc
stc
cs
shl
push
sahf
ficomps
sbb
mov
pop
sbbl
cs
out
push
sub
fwait
xchg
jl
or
push
cli
je
xlat
mov
xor
ret
ljmp
sahf
enter
xchg
aas
sbb
push
addr16
je
push
icebp
pop
xor
dec
cs
repz
fcmovbe
mov
sbb
mov
popa
orb
mov
push
test
adc
fwait
or
outsl
data16
mov
cmp
add
xor
jno
orb
into
orb
sbb
aam
in
aad
cmp
and
dec
movsl
xchg
lods
inc
in
pop
popf
ljmp
in
lock
sti
outsb
outsb
in
je
inc
jge
andl
lahf
adcl
lods
shrb
cmp
cmp
jl
push
pusha
into
push
not
shll
into
push
inc
and
jg
insl
dec
pop
add
jecxz
lcall
mov
sti
test
mov
lds
xchg
dec
mov
cmp
adc
jge
lahf
das
xchg
or
mov
fwait
rcrl
test
in
inc
clc
insb
add
inc
outsb
cmp
frstors
jl
add
dec
jns
out
push
sar
pop
mov
jb
test
movsb
mov
inc
loopne
pusha
or
pop
pushf
pop
fimull
push
inc
imul
mov
bound
adcb
loop
sbb
adc
sbb
jo
jbe
das
ljmp
orl
xlat
loopne
outsl
cmp
jno
sub
mov
adc
nop
in
jp
jge
shrl
jbe
inc
es
stos
or
lahf
ss
stos
cli
cs
iret
test
into
cmp
ret
adc
rcr
add
fs
in
loop
push
push
jge
adc
mov
ds
sub
dec
pop
inc
loopnew
lret
je
adc
xchg
mov
jg
roll
lahf
push
subb
inc
cmpsb
stc
out
cmpsl
ret
cmpl
inc
dec
mov
cmpsb
mov
rcrb
jecxz
mov
add
pop
sahf
sbb
gs
testb
xchg
jge
cwtl
std
cmp
into
es
testb
add
jmp
std
pop
aas
jmp
lods
inc
leave
jp
xchg
cwtl
call
pushf
jbe
mov
cmc
and
cmpsb
fdivr
and
and
add
jp
mov
cmc
addl
lret
push
fwait
xor
shrl
dec
xor
daa
dec
xor
and
push
mov
sub
and
shlb
jp
sbb
jmp
inc
xchg
cmp
gs
into
pushf
add
lcall
out
and
xchg
pop
xor
cli
xlat
jne
xor
sti
pop
loope
mov
xor
in
pushl
fsubrs
inc
pop
add
or
jl
test
mov
and
jp
lods
leave
test
sbb
adc
aaa
jne
adc
jp
movsl
pop
fwait
hlt
push
adcl
sub
mov
loope
insl
jno
orl
push
or
sahf
mov
stos
jecxz
rorb
pop
ds
and
aas
mov
cltd
fnstenv
xor
mov
add
inc
or
test
mov
add
fiadds
pop
or
xchg
add
inc
imul
neg
add
test
add
or
lods
mov
out
es
movsw
sbb
sub
fsubl
xchg
or
jo
mov
mov
lods
push
jno
in
cmp
test
cmp
js
xchg
mov
mov
mov
orl
xchg
rcrb
adc
mov
jg
xor
lahf
add
in
or
in
enter
sahf
jl
shrl
sub
repnz
add
add
cltd
hlt
mov
divb
xchg
notb
cli
ret
mul
pop
sahf
add
outsl
repz
add
sbb
pusha
nop
push
add
and
or
cwtl
andl
fs
fstps
dec
inc
outsl
add
dec
test
mov
out
cmp
arpl
ret
xchg
jno
cmp
stc
repnz
ja
jg
push
in
mov
stos
outsb
and
imul
inc
mov
adc
mov
sub
pop
divb
lods
cltd
jl
pop
cld
push
mov
jae
jge
pop
imul
ss
xor
stc
sarb
ss
dec
push
and
push
cli
jmp
nop
repnz
cwtl
add
sbb
mov
pop
repz
outsb
lods
pop
dec
jle
stc
xor
ss
mov
adc
aad
das
push
sbb
dec
jp
outsl
in
std
pop
test
sub
inc
adc
jo
dec
sbb
js
test
sbb
ja
or
cmc
je
enter
data16
push
mov
lret
adc
adc
outsb
mov
mov
add
jae
pop
sub
cwtl
loop
cs
or
aas
hlt
xor
pop
xor
dec
aam
and
fwait
mov
fistl
push
out
mov
inc
iret
sbb
out
add
clc
sub
lret
and
and
stos
jp
jecxz
pop
cs
lret
mov
ret
fcoms
pop
cltd
jbe
pop
js
pop
mov
movsl
pop
xchg
adcb
add
outsb
lea
cs
scas
lret
popf
inc
insl
je
in
sahf
xchg
xor
iret
mov
out
out
jns
test
addl
xchg
jno
jnp
pushf
dec
dec
push
inc
inc
sbb
dec
adcl
push
icebp
mov
dec
pushf
xchg
xchg
jl
push
add
jae
mov
mov
shll
roll
jmp
arpl
jmp
xchg
sbb
lods
sub
mov
inc
outsb
insl
jmp
push
or
cwtl
test
pop
xorl
mov
mov
pop
jnp
xchg
cmpsb
mov
push
mov
aam
pop
push
mov
and
inc
jge
dec
nop
push
aam
xor
out
negb
mov
std
mov
cmpl
mov
in
rcrb
pop
aad
jecxz
inc
jg
pushaw
pop
pop
or
sbb
dec
cs
mov
das
mov
mov
inc
pop
mov
movsb
sub
push
cmc
insb
mov
mov
sar
clc
icebp
xor
subl
or
pushf
call
stc
mov
or
mov
mov
arpl
data16
js
shll
push
test
fiadds
fnsave
cmp
std
dec
mov
out
push
popf
in
ljmp
mov
mov
add
cwtl
pop
add
outsl
fstpl
pop
jne
or
and
lret
int3
stc
fwait
ljmp
cmp
mov
jg
sti
jns
aaa
aas
loope
dec
fs
scas
sbb
add
cmc
aam
push
jno
push
xor
cmpsl
sbb
sub
push
jnp
sub
jno
scas
aas
rorl
jb
imul
rcl
in
mov
xor
cwtl
mov
movsl
xchg
pop
fidivrs
je
add
pop
cmp
scas
cld
and
lds
and
scas
cmp
inc
cmpsb
fsubl
lods
xor
dec
push
sub
js
or
daa
adc
lock
add
pushl
mov
scas
cs
xchg
sub
mov
lock
nop
popf
push
pop
mov
jecxz
add
hlt
cmp
add
inc
or
inc
jle
stos
dec
cmp
and
aam
arpl
push
test
xor
push
sub
scas
aas
enter
pop
nop
and
jbe
mov
add
cwtl
mov
jo
push
dec
or
xchg
fcmovne
dec
scas
pushf
les
mov
inc
fs
shrl
mov
mov
or
pop
sahf
gs
loop
adc
out
ds
movsb
mov
mov
aaa
shrb
and
xchg
aad
aas
imul
or
imul
ja
int3
loope
out
mov
or
lret
cld
inc
jecxz
or
sub
xchg
cmc
scas
loop
ljmp
iret
lret
pop
in
and
push
icebp
mov
stos
pop
repz
aaa
into
or
int3
or
testl
sti
inc
add
sbb
add
fxch
dec
lock
aas
pop
jb
sahf
test
inc
pop
dec
hlt
lret
xor
sbb
sbb
xorl
push
adc
jg
vmovupd
adc
cmp
sti
out
lcall
mov
add
xor
jb
cmp
xchg
sub
test
outsl
mov
in
jne
jge
popf
addb
sub
push
xchg
add
jl
push
sbb
in
mov
mov
inc
jo
shll
and
adc
add
fimuls
and
ss
arpl
stc
hlt
daa
aam
in
in
xor
test
or
adc
jmp
out
cmpsl
iret
pop
pop
aad
stc
push
in
icebp
outsl
test
sbb
imul
jne
aam
push
inc
mov
and
call
jle
iret
repnz
fstpl
addb
mov
xor
or
gs
insl
push
int3
push
pop
in
jg
mov
popl
push
dec
daa
inc
adc
xchg
mov
insl
sub
sti
cli
inc
sbb
inc
shlb
sub
xchg
enter
cwtl
pop
incl
pop
xchg
xchg
enter
xlat
or
push
mov
lock
mov
push
andb
fmul
push
sbb
sbbb
or
out
rcr
fs
insl
imul
mul
addr16
repnz
lret
xchg
mov
jnp
aas
mov
add
and
sahf
testb
movsb
imul
dec
push
in
push
inc
dec
arpl
sti
fmull
frstor
test
cltd
iret
xor
lods
jnp
cld
jle
fdivl
mov
push
or
inc
andb
es
pop
adc
and
sub
jo
testb
stc
lea
mov
inc
hlt
jbe
mov
aas
fildl
call
mov
repz
rcll
xchg
xchg
or
add
nop
jmp
in
add
lods
xor
push
push
jb
push
adc
add
pushf
mov
pop
or
jns
lret
inc
movsb
add
jns
andb
pop
or
dec
les
in
jnp
push
in
pop
mov
inc
in
repz
pop
jae
ret
popf
xor
scas
cmp
in
xor
sub
inc
xor
gs
test
scas
jb
mov
dec
outsl
push
scas
and
les
add
test
mov
dec
cmp
sbb
jl
push
sub
icebp
jne
out
mov
ds
xchg
repz
insl
xor
add
jo
and
push
testb
dec
jmp
jbe
loope
ficomps
fnsave
cmp
cmp
xor
cld
dec
loop
mov
push
dec
repnz
mov
jg
sub
push
inc
lret
add
cli
adc
or
je
xor
xchg
mov
mov
pop
rclb
subl
out
jg
adc
insb
lods
arpl
push
mov
cmp
scas
mov
mov
mov
cmp
out
inc
cmpsb
xor
addl
call
mov
and
cmp
scas
dec
clc
sbb
fnstsw
lock
adc
jno
loopne
lods
or
jo
imul
sti
nop
nop
inc
cmp
jno
xor
jp
mov
rclb
xchg
clc
enter
ficoml
imul
mov
mov
insl
lods
lcall
test
mov
mov
fiaddl
stc
xchg
add
iret
lock
cld
add
xor
jno
stos
mov
or
lahf
cmp
push
test
iret
push
xor
jg
mov
xor
cmp
mov
lds
popa
mov
pop
hlt
ret
inc
fisttpll
jl
inc
movsl
jp
gs
and
cmpsl
or
insb
inc
cmp
out
dec
jae
scas
fwait
repnz
stc
in
jne
fidivrl
arpl
into
mov
in
jno
ret
dec
pusha
xlat
pop
fsts
mov
dec
mov
xchg
sbb
xor
push
or
ss
sbb
les
cmpl
lcall
cmpsl
int
in
dec
ret
push
loope
xlat
adc
inc
mov
xchg
push
jecxz
jg
push
jg
outsl
cwtl
xchg
lcall
jle
fsubrl
mov
add
loope
fcomps
jnp
fldl
fmuls
mov
hlt
jno
int
fsubrs
ret
push
pusha
rcr
cmovns
or
mov
pop
iret
in
mov
es
pop
jl
jle
int3
iret
stc
and
dec
xchg
push
mov
mov
repz
or
mov
iret
sbb
rorl
or
xchg
leave
int3
xor
jge
push
sub
mov
add
mov
jmp
xor
stc
sub
mov
xor
or
add
into
push
xor
out
inc
ljmp
adc
jp
movsl
push
pop
mov
xchg
adc
bound
xchg
adc
or
pop
xchg
and
mov
outsl
sahf
mov
xchg
push
jbe
pop
pop
out
xor
sbb
dec
xchg
and
add
adc
outsl
dec
xchg
push
dec
std
xchg
mov
pushf
andl
je
push
sbb
jecxz
popf
andb
outsl
hlt
cmp
inc
aad
dec
hlt
mov
loope
pop
insl
ja
dec
sbb
jns
jno
repz
int
fwait
inc
cmp
xlat
loope
pop
mull
std
test
pop
adc
adc
pusha
aaa
push
jmp
call
inc
sbb
add
xchg
std
cmc
mov
push
adc
lods
mul
lods
jbe
sub
push
pushf
xor
pop
mov
icebp
mov
pop
xchg
popf
pop
aaa
mov
int
inc
push
test
mov
dec
and
lods
test
push
sub
adc
aad
jns
rorb
mov
push
fstps
xchg
adc
push
mov
or
cmp
jmp
jbe
lea
pop
mov
mov
cmp
repz
pop
insb
out
clc
out
inc
xchg
aaa
xchg
mov
xchg
push
inc
dec
xor
lret
jne
adc
and
outsl
xor
es
pop
ret
inc
rolb
xor
or
in
orb
in
xor
push
rcrb
adc
fwait
cltd
mov
mov
dec
insb
not
xlat
sub
decl
data16
inc
iret
fnstenv
or
imul
mov
inc
daa
mov
stos
out
cmp
sub
jmp
std
repnz
xor
shrl
cmp
iret
negl
add
xchg
mov
imul
xchg
inc
jmp
outsb
cmp
stc
inc
adc
push
fdivrp
roll
adc
lret
cmp
xchg
das
jmp
mov
xchg
loopne
adc
in
add
xor
jno
stos
jp
push
out
sub
inc
icebp
push
pop
cmp
into
mov
je
addr16
inc
jge
ret
dec
ljmp
adc
push
inc
and
mov
leave
ret
aaa
dec
lock
int
popf
xor
jp
sbb
fbld
ret
mov
and
loope
pusha
cmp
mov
bnd
sbb
adc
pop
xchg
sub
push
cmp
ficoms
add
es
aam
sub
fbld
bndstx
andl
scas
jae
rcll
cltd
jp
push
out
pop
mov
cmp
xor
aaa
adc
sahf
mov
push
mov
mov
sbb
xor
push
xchg
adc
lea
pop
push
stos
xor
sbb
subb
stc
movsb
aad
fistpll
xchg
shrl
test
cld
push
mov
fs
hlt
fwait
push
test
cli
mov
sub
sbb
ja
mov
xor
jmp
sub
mov
sub
sub
bound
sar
lret
nop
stos
xor
in
inc
aaa
and
movzbl
xchg
aas
call
jmp
pop
or
jo
inc
mov
loop
cmp
testb
mov
jmp
cld
xor
inc
sbb
outsl
rcrb
out
pop
inc
pop
enter
rcrb
call
jg
mov
ret
outsb
pop
hlt
in
mov
jbe
imul
push
test
add
or
loopne
jecxz
out
mov
or
push
out
divb
push
jbe
xchg
out
sub
fld
xor
adc
rcrl
push
ja
test
and
popa
ja
mov
xor
adc
dec
nop
insl
in
push
lea
cmp
xchg
popf
pop
add
rolb
stos
pop
stc
push
sahf
jbe
sub
out
xor
cmp
shlb
aad
inc
mov
adc
adc
sbb
jmp
outsl
adc
pop
sets
rolb
dec
dec
fildl
int3
push
cli
aas
mov
dec
dec
loop
ljmp
lods
xor
out
je
aad
ret
sbb
dec
cmp
push
outsl
test
xchg
lock
mov
add
or
push
mov
pop
in
gs
ret
add
cs
inc
subb
ja
repz
jne
jo
into
add
xchg
iret
inc
pop
pop
jne
xor
std
mov
mov
mov
out
xchg
xchg
repz
aaa
push
and
cmp
call
mov
sbb
mov
mov
aaa
xchg
scas
cmp
and
ds
test
test
cwtl
gs
add
inc
das
dec
sbb
and
test
add
sarb
jp
jb
and
and
arpl
mov
push
cmp
and
dec
cmp
imul
mov
lods
xchg
and
or
mov
or
xor
js
push
in
jae
cmpsl
xchg
mov
sbb
fstl
int3
lock
iret
mov
in
xchg
cmp
std
fidivs
inc
mov
dec
nop
jbe
insl
dec
jb
push
mov
aad
lods
lahf
fisttpl
stc
sbb
leave
xor
mov
xchg
or
inc
inc
ss
test
fcoml
adc
stos
int
add
xchg
movsl
and
loop
arpl
xor
adc
jge
std
hlt
mov
jno
icebp
pushf
mov
ss
xor
aaa
mov
mov
icebp
std
test
xorb
insb
sub
jbe
leave
andl
inc
aas
push
movsb
addr16
hlt
aaa
or
stos
or
sti
pop
lcall
in
aam
cltd
jmp
neg
rep
cs
xlat
pop
sbb
testl
lcall
inc
dec
js
jecxz
pop
mov
nop
lea
xchg
xchg
fisubl
sub
test
stc
stc
push
andb
xor
pop
mull
cmp
sub
lds
pop
sub
cwtl
sub
push
js
icebp
or
lret
imul
pop
fistpl
push
inc
into
jecxz
call
pushf
mov
push
and
stos
mov
mov
cmpsb
repz
pushf
push
adc
repz
cmp
cmpb
inc
pop
addr16
cmc
loopne
decl
xor
xchg
cmpl
loop
pop
xchg
adc
mov
icebp
out
sbb
and
mov
pushf
pop
add
and
xchg
push
mov
mov
test
xchg
imul
gs
lds
idivl
push
xor
adcl
adc
push
fbstp
mov
sti
add
cmpsb
push
mov
mov
sbb
popf
cwtl
jge
and
xor
test
push
jb
insl
xchg
xor
jns
fcmovu
inc
xor
push
jge
sbb
pop
mov
push
mov
out
push
popa
stos
and
inc
fadds
xlat
push
xor
xchg
mov
inc
fbstp
test
data16
add
nop
lea
xor
inc
loopne
int
and
jb
stos
repnz
add
cmpps
fsubr
xor
leave
scas
dec
mov
insl
sbb
push
push
dec
pop
push
cmpsl
stos
test
mov
or
cwtl
dec
rcrb
push
cld
repz
jno
into
xchg
and
dec
push
jecxz
ljmp
mov
add
xor
lea
divl
js
cmpsb
cmp
cmp
push
addr16
sbb
sub
xchg
mov
sahf
sbb
mov
bswap
push
leave
pop
lds
cmpsb
pushf
loopne
adc
cmp
shll
push
lcall
rcrl
dec
rorl
inc
xlat
cmpsl
arpl
jmp
mov
fnstcw
ds
cwtl
cmpsb
popa
test
movsl
mov
in
jno
push
pop
pop
push
pop
out
nop
and
lret
lds
add
xor
scas
cltd
divl
cltd
cli
pop
cmpsl
pop
push
lcall
lods
fcompl
sarb
sbb
jecxz
adc
push
mulb
shrb
andb
xchg
cmpsb
insl
sti
adc
push
out
pop
pop
aaa
adcb
hlt
cmpl
jmp
lea
inc
sbb
jo
adc
mov
gs
movsl
push
xchg
imul
xor
xor
js
repnz
mov
sub
lds
sbb
xor
int3
mov
test
jnp
sti
jp
inc
jge
cmp
inc
icebp
fldl2t
out
fldenv
test
xchg
inc
int
mov
aaa
dec
ljmp
jae
das
jmp
push
in
xchg
xor
mov
imul
cmp
aas
in
xchg
cmp
call
mov
test
fistl
xchg
dec
mov
divb
push
imul
sub
or
and
mov
or
adc
inc
std
out
sbb
push
ret
in
stc
fsubrs
adc
jns
add
ss
add
shrl
jecxz
test
xchg
and
pushw
sub
push
inc
popa
stos
scas
mov
rep
fdivrs
in
mov
push
push
scas
mov
xor
xor
sub
dec
mov
rclb
mov
xchg
pop
sub
dec
mov
aas
jg
inc
cli
cmp
xchg
cmpsl
jl
and
xchg
cmp
and
loope
repz
lods
mov
inc
push
pop
adc
jo
mov
sub
sub
aad
inc
mov
ret
in
push
test
xorl
repz
jnp
mov
popf
lahf
xor
add
mov
mov
push
rorl
xor
sbb
loopne
mov
aam
add
push
sub
out
nop
xchg
scas
loop
mov
add
lret
cmpsb
ss
pop
les
testl
and
mov
or
movsl
loop
add
jecxz
push
popf
and
movsb
sub
or
add
outsb
mov
lds
cmpsl
movsl
lds
sub
push
dec
sub
rcrl
imul
js
cmpsb
lock
inc
jmp
jbe
or
lret
test
movsb
push
in
pop
subb
xchg
cmc
add
rcrb
sbb
negl
movsl
test
rorb
shr
jb
jns
test
or
mov
sub
push
mov
cld
repnz
es
add
ja
cmpsl
ret
ss
shll
loopne
mov
xchg
popf
inc
add
mov
mov
mov
bound
lock
jno
adc
dec
inc
pop
fisttps
jbe
out
pusha
stc
push
or
popa
sub
ljmp
or
cli
xor
dec
lods
sub
jp
scas
imul
mov
and
inc
sub
lcall
pop
jo
sub
dec
add
pusha
add
cmp
insb
das
nop
mov
bnd
mov
fnstsw
add
daa
in
in
icebp
lock
push
aaa
jb
adc
bswap
bound
push
xchg
sarl
pop
mov
jl
cmpsb
dec
loopne
sbb
cmp
scas
mov
mov
cmc
sbb
js
cmpsl
sub
jmp
mov
imul
cli
mov
sbb
into
ds
flds
je
sti
outsb
fnstsw
mov
ljmp
lret
push
push
jl
mov
inc
jg
pop
fwait
dec
cmp
adc
mov
pusha
add
adc
out
push
mov
fisubs
data16
daa
push
out
jns
and
test
sub
add
repnz
adc
fcompl
sti
fdivr
shl
adc
mov
dec
cltd
dec
adc
mov
and
jmp
mov
fistl
nop
jb
das
xchg
lahf
and
inc
push
and
and
into
movsl
mov
inc
xchg
mov
sub
negb
and
xor
mov
stc
sahf
fnsave
sub
add
mov
dec
sbb
adc
das
scas
pop
jg
xorb
out
orb
mov
scas
ss
pop
in
out
mov
mov
push
dec
psrlq
lret
jmp
xlat
cmp
jne
movl
sub
movups
pop
mov
and
inc
xor
pop
dec
and
sbbl
pop
dec
push
mov
dec
inc
iret
jle
sti
adc
fmull
mov
fwait
adc
inc
outsl
sbb
and
push
dec
lods
rcrb
rorb
mov
mov
aad
jo
inc
push
or
rcrb
gs
pop
adc
and
fsubl
sbb
hlt
pusha
mov
imul
stos
pop
adc
imul
push
jns
inc
and
sub
cwtl
mov
or
js
sbb
push
inc
xchg
add
pop
imul
icebp
pop
lahf
dec
call
fcoml
cmp
cmp
arpl
lods
mov
inc
adc
das
faddp
push
mov
lahf
and
mov
xor
jns
sbb
xor
sbb
movsl
aam
jge
and
sub
sub
cs
ja
inc
and
pop
xlat
fisttpl
repz
adc
insl
jno
daa
cmpsb
aam
mov
cmc
or
sbb
loope
sti
rep
xchg
imull
dec
mov
mov
mov
inc
ret
mov
cmp
mov
cmp
xchg
aaa
lds
in
xor
aaa
shrb
inc
adc
sub
cmp
mov
stos
dec
sbb
pop
add
adc
ja
and
sub
dec
and
xchg
loope
dec
scas
popa
mov
inc
pop
push
inc
inc
mov
add
in
mov
mov
arpl
int3
ja
jp
cmpsl
out
push
es
cmc
sub
repz
push
cmp
push
cs
mov
sbb
dec
leave
cltd
xor
adc
adc
out
add
or
mov
subl
inc
mov
push
sbb
lahf
lcall
aaa
and
dec
out
pop
test
out
filds
and
xchg
jae
add
cwtl
jae
pop
push
pop
inc
subl
inc
lcall
das
and
mov
les
mov
imull
push
mov
idivb
insl
xor
cmp
aad
fdivrp
cmc
mov
and
push
lods
int3
xor
push
ss
out
fisubl
inc
fs
cmp
xor
sub
inc
dec
xor
lcall
cli
loopne
push
xchg
imul
idivl
xchg
dec
js
insb
add
loopne
inc
lods
fidivrl
add
rclb
inc
pop
iret
xchg
pop
push
test
or
jecxz
mov
fnsetpm(287
pusha
push
pop
lods
ja
out
std
insl
icebp
xchg
shll
cltd
fisubl
negl
ljmp
xchg
push
add
inc
movsb
jo
sarb
lret
jb
pop
dec
in
push
jb
sub
xchg
pusha
decl
shlb
call
mov
pushf
cmp
cltd
mov
enter
sahf
jge
adc
mov
cmc
xchg
test
add
repnz
fiadds
sbb
ss
pop
fldenv
push
xchg
insl
mov
addr16
sub
lods
jb
mov
adc
push
xchg
mov
or
inc
jle
sahf
jae
pop
clc
dec
push
pushf
test
pop
int
jp
sarb
addl
mov
fidivl
pop
in
cmp
cwtl
add
cmpsl
pop
or
mov
cwtl
jmp
push
mov
aam
cltd
xor
cwtl
or
inc
inc
pop
xor
dec
repnz
xchg
xchg
jno
jp
leave
lea
sbb
mov
sbb
inc
in
sub
jle
ret
jp
cwtl
ljmp
mov
incl
jno
and
adc
mov
jnp
jecxz
sub
add
cmp
pop
dec
lret
cmp
movsl
push
dec
dec
iret
clc
dec
xchg
push
push
shll
or
sub
sub
inc
and
mov
stos
xchg
cli
lret
cmpsl
push
cmp
xchg
mov
xchg
fwait
dec
hlt
xchg
or
push
sbb
rcl
jl
mov
stos
in
adc
add
stc
or
jne
push
cmpsb
clc
cli
mov
mov
mov
dec
jne
cmp
out
pop
daa
lea
decl
aam
shrb
mov
int
scas
test
cli
jns
jb
cltd
xor
jb
pushf
out
cmp
mov
push
mov
out
push
pop
icebp
mov
or
and
cld
scas
inc
lcall
jno
sbb
out
cld
push
pop
sub
push
inc
dec
int
sub
sub
test
and
call
jnp
aaa
shlb
adc
dec
dec
push
test
lahf
daa
mov
xchg
push
hlt
sti
mov
mov
sbb
and
jmp
mov
jne
mov
testb
mov
rcll
stos
mov
xchg
push
ja
pop
scas
inc
andb
mov
inc
pop
ret
inc
pop
and
or
sar
jl
and
out
out
inc
popa
xorb
mov
mov
inc
push
add
jge
xchg
cmp
jmp
jecxz
adc
jae
add
cmp
cmpsb
inc
or
incl
fildll
sbb
ret
push
push
ret
cld
mov
flds
daa
sbb
ret
pop
push
out
imul
jl
jmp
ret
aam
ret
dec
lret
test
push
push
insb
out
xor
add
cmp
mov
test
xor
push
shrb
cmp
les
insl
mov
adc
dec
popf
out
sbb
cmp
mov
push
lds
pop
xchg
xchg
lods
cmp
scas
adcl
shrl
cld
das
jmp
lret
jle
push
aaa
stos
cmovs
inc
aam
fdivrs
sarb
inc
les
inc
mov
adc
fs
in
in
hlt
add
pop
jnp
mov
mov
pop
adc
test
and
or
cs
fsubr
jo
inc
cmp
jae
jecxz
mov
in
jge
repz
rorb
ja
fildl
stos
adc
xchg
loope
out
push
push
popf
xlat
popa
inc
or
sub
jp
outsl
enter
roll
mov
jmp
xor
cmp
jge
cmpsb
cmp
gs
dec
mov
mov
bnd
shll
sbb
sub
mulb
sbb
idivl
imul
ds
pop
insl
mov
xchg
mov
fwait
jmp
mov
and
fidivrs
in
lods
test
inc
lret
sub
arpl
mov
jmp
fst
mov
fbstp
cwtl
rcrl
negl
mov
pop
addb
pop
adc
jmp
test
insb
aad
jo
mov
in
xchg
clc
xor
jnp
outsb
lds
lock
or
out
hlt
pop
data16
mov
int3
aam
inc
push
fwait
jo
in
clc
cmpsb
out
pop
cmpsl
sbb
popf
or
push
mov
cltd
and
popa
out
clc
and
mov
cmp
in
loopne
jb
leave
dec
popa
fcoms
int
dec
fcomps
aad
dec
xchg
add
lret
dec
jae
xchg
addr16
xchg
jg
mov
mov
add
cld
fs
mov
dec
pop
ficompl
stc
xor
subb
mov
add
add
cmp
pop
sub
xor
pushf
cmp
aad
pop
push
cmp
mov
sti
lret
insb
push
jge
inc
xchg
push
jl
dec
adc
subl
push
mov
sbb
je
test
test
arpl
or
push
mov
mov
adc
cmp
xor
xor
outsb
jbe
enter
repnz
pop
or
cwtl
xlat
loopne
mov
iret
lds
push
sub
jo
outsb
sub
ds
imul
push
jge
lret
mov
insb
add
pop
or
pusha
push
pop
xor
test
or
pusha
aad
test
inc
mull
int
xchg
int3
mov
mov
lahf
push
insl
pop
mov
mov
stos
pop
sti
push
xlat
fldl
inc
mov
pop
jg
add
ret
jle
jg
mov
lock
mov
rcl
xchg
in
mov
mov
cmp
in
mov
inc
add
loope
sbb
xchg
js
ljmp
add
add
xor
cmp
dec
ret
inc
sbb
push
cmp
xchg
jnp
dec
rcrl
rcl
lret
mov
mov
lret
and
into
mov
in
iret
repz
mov
out
cmp
fbld
or
sub
mov
cmp
jl
rcll
add
adc
mov
insl
or
cmp
movsb
xorb
add
aam
mov
push
push
stos
jge
into
sub
movsl
xor
inc
imul
sarb
jbe
aas
add
loope
in
sub
mov
or
out
je
mov
decb
div
dec
push
jnp
icebp
xchg
xlat
or
dec
imul
mov
int3
sub
test
mov
ljmp
sub
adc
inc
cmp
fnstsw
sub
int3
aas
inc
shll
dec
cmc
xchg
sbb
and
in
mov
push
out
lcall
cltd
movsl
lds
mov
pusha
xorl
mov
outsb
hlt
or
jmp
pushf
fistpl
stc
loop
add
cmp
jp
enter
push
orl
test
movb
lret
lahf
dec
sti
push
cmc
icebp
jmp
fiaddl
imul
and
loopw
pushl
xchg
xlat
mov
movsl
lea
rcl
xchg
aam
popa
ja
fnsave
inc
xor
aad
addr16
push
jo
cmp
dec
jp
out
cwtl
xchg
and
jo
mov
dec
mov
push
xchg
stc
ffreep
je
rorb
lods
sbb
iret
or
lret
aaa
in
xchg
out
jno
imul
fldcw
mov
inc
lods
scas
test
test
xchg
pop
nop
mov
add
mov
dec
mov
xchg
cwtl
push
pop
lcall
mov
mov
ja
cmc
into
push
bound
adc
hlt
pop
inc
mov
xchg
fs
mov
sarl
xchg
pop
loopne
nop
jo
mov
mov
push
adcl
or
ja
pop
mov
ds
and
inc
mov
adc
jmp
mov
adc
loop
cmp
inc
mov
or
mov
jae
mov
dec
out
loop
arpl
xor
xor
add
les
xor
sti
push
hlt
jge
mov
test
loope
pop
test
movsl
jns
pop
xchg
mov
jnp
addr16
push
push
das
xchg
in
or
nop
sbb
outsl
in
lret
movsl
and
out
inc
mov
fs
sub
jecxz
inc
in
cltd
popa
adc
cmpsb
mov
add
andl
scas
and
jno
test
mov
out
xchg
jg
push
lcall
out
jb
imul
fbstp
jg
or
xchg
fisttpl
mov
insl
lds
lret
or
int3
jge
jecxz
xlat
dec
lret
popa
movsl
out
lea
adc
stos
or
outsb
cmpb
dec
or
mov
jo
mov
out
mov
adc
xchg
loop
mov
ja
stos
pop
movsl
outsb
ret
mov
cmp
ja
add
ja
inc
fnstsw
push
leave
adc
xchg
cmpb
sbb
mov
cmpsl
arpl
pushf
clc
xchg
jno
jnp
icebp
repnz
orb
mov
insb
in
push
mov
aas
test
clc
and
inc
xor
pop
ret
push
pop
stos
fwait
jbe
loopne
call
ss
push
imul
sbb
filds
jbe
mov
mov
fiadds
and
iret
out
xor
fisubrl
insl
repnz
mov
pop
loopne
sbb
pop
push
mov
in
xor
sub
or
add
sbb
das
aas
mov
lahf
lods
push
mov
ss
int
cmc
shrb
out
pop
push
jno
jecxz
lds
xchg
mov
scas
adc
push
sbb
adc
aas
leave
lds
jge
or
adc
mov
lods
shlb
sbb
outsl
js
test
inc
pop
cmp
pop
fcmovb
subl
int
movsl
arpl
xlat
push
dec
fisttps
push
pop
mov
push
mov
test
dec
push
mov
jmp
cmp
xchg
cmpsb
xor
push
cmp
mov
into
or
lcall
andb
sbb
orb
imul
inc
dec
push
or
mov
and
and
cmpsb
push
push
icebp
and
rorl
jns
ficomps
dec
mov
cmc
in
pextrw
mov
gs
pop
std
icebp
inc
push
mov
push
sub
imul
icebp
gs
sbb
lahf
add
xor
nop
inc
xor
xchg
jae
mov
les
push
shrb
inc
or
cmp
insb
push
jl
jmp
push
jb
aaa
sub
sub
test
scas
jl
fwait
call
xchg
das
cmp
subb
push
mov
dec
loope
sbb
push
mov
scas
add
sarl
lret
sbb
lds
lds
xchg
rclb
cmpsl
sub
xor
dec
pop
cmc
test
cltd
fbld
icebp
mov
pop
jle
sbbb
ja
cmpsl
sub
cmp
add
jo
test
adc
jne
repz
pop
jae
jge
pop
cmc
push
cmp
fmull
sbb
rolb
addr16
ds
dec
jl
and
into
int3
jecxz,pt
fs
mov
jecxz
mov
pop
mov
sahf
lea
jg
or
ja
and
cmp
push
pop
insb
or
fisubrs
or
outsb
std
fnsave
jl
push
mov
mov
pusha
add
pop
ret
jnp
and
add
popa
xchg
pop
add
and
push
pop
add
adc
lods
sbb
iret
test
in
stc
mulb
mov
mov
outsb
push
fstpt
outsb
jne
pop
add
jne
cmp
andb
xor
shll
mov
stos
pop
cmp
insl
sarb
repnz
jnp
jnp
aam
test
dec
xchg
adc
imul
pop
xchg
mov
popa
jo
mov
sti
adc
or
lahf
cmp
loopne
sub
jp
mov
aaa
xor
aaa
loopne
movsb
loopne
xchg
lods
shl
pop
cmc
outsl
mov
test
cmp
imul
or
or
add
dec
fisttpll
pop
inc
adc
cld
mov
xchg
dec
in
push
cmp
inc
adc
mov
pusha
imul
and
outsb
arpl
push
das
add
lea
inc
and
test
sub
pop
inc
insb
jmp
push
sahf
stos
cs
rcrb
out
mull
xchg
into
ja
xor
shll
or
mov
xchg
xchg
xor
int3
inc
lahf
sbb
or
cmp
mov
sbb
stos
pop
sub
mov
sbb
loop
mov
sbb
add
aad
jo
xlat
mov
cmp
scas
mov
mov
insl
lahf
ret
in
push
sbb
outsl
mov
cmp
lods
adc
out
mov
testl
and
das
mov
add
fimuls
mov
mov
fisubs
out
pop
data16
dec
jo
cmp
lret
stos
or
adc
xchg
add
mov
hlt
mov
mov
lahf
mov
pop
ds
ret
mov
into
cltd
dec
jb
add
stos
scas
adc
xlat
loope
jo
jae
mov
mov
push
and
xor
jg
cli
push
adc
imul
scas
sbb
mov
mov
pop
fadds
movsw
dec
insb
addr16
mov
jno
adc
fisubrl
push
loope
inc
pop
imul
push
sbb
popa
mov
mov
stc
addr16
push
test
or
lods
lods
notb
sub
testb
and
cltd
int3
scas
lret
xchg
cwtl
pop
mov
pop
stc
xchg
lret
and
popa
mov
insl
pop
inc
lret
add
gs
sub
nop
mov
popa
rorl
imul
test
fstps
bound
addr16
push
ljmp
xchg
fs
lods
sbb
cmp
jl
inc
cmp
testl
xor
mov
sbb
xor
jne
in
mov
mov
pop
aad
pop
mov
jp
movsb
dec
enter
lret
mov
xchg
jg
mov
in
lock
ja
inc
mov
fcomps
jge
push
pop
mov
push
sub
outsl
sbb
cltd
gs
jg
je
js
jecxz
repz
mov
jb
mov
xlat
imull
add
push
or
icebp
and
adc
jns
lahf
aas
jmp
cmc
enter
out
stc
mov
mov
mov
push
or
mov
imul
cmp
stc
push
popf
out
in
lcall
aad
mov
iret
adc
mov
lods
mov
stos
add
lods
push
mov
cmp
push
sbb
adc
mov
mov
jle
scas
adc
aad
pop
sub
test
push
lds
mov
enter
mov
scas
cmpsb
sbb
stos
out
inc
lock
adc
xor
jl
test
xchg
sub
ss
popl
mov
inc
nop
fisttps
dec
lcall
sbb
add
cmp
bound
test
and
adc
insb
stos
sbb
fisubrs
lahf
add
cmp
push
xchg
sbb
inc
xor
push
icebp
jnp
call
inc
push
xchg
mov
add
add
movb
pop
rcr
mov
pop
mov
js
int3
cld
in
and
mov
jae
sub
out
test
mov
sarl
fwait
ljmp
inc
or
roll
push
add
pop
cs
fwait
mov
jmp
dec
loop
shll
loope
push
enter
jmp
in
and
push
das
decl
rclb
iret
test
popf
jb
adc
mov
out
loope
add
into
mov
jg
dec
inc
push
shr
daa
cli
cmp
cmp
fnsave
aas
nop
pop
scas
xchg
inc
jo
loop
movsl
sub
idivl
out
cmp
sub
dec
std
push
test
pop
mov
adc
dec
mov
sbb
adc
das
sub
notl
and
mov
adcl
mov
lods
fs
imul
scas
ret
jmp
aaa
mov
test
daa
sbb
mov
sub
sbbb
dec
aam
cli
cmp
lcall
enter
adc
xor
xchg
add
outsb
wrmsr
and
mov
sbb
mov
mov
push
outsl
lcall
inc
sbb
mov
dec
fidivrl
mov
cmp
fldenv
and
push
push
mov
xor
and
inc
xchg
jae
dec
xchg
cmp
addl
fmull
push
addr16
push
les
mov
xchg
or
fldenv
aaa
jb
rorl
xchg
sub
mov
in
fidivl
dec
jne
adc
cmc
add
sbb
pop
iret
clc
pop
dec
or
mov
or
mov
pop
call
inc
inc
js
mov
and
cltd
inc
or
or
xchg
mov
fs
lahf
call
sub
push
sti
jmp
inc
lcall
pushf
adc
dec
push
push
inc
sarb
cmp
xchg
add
jecxz
push
test
push
push
add
cmp
inc
mov
aad
add
and
scas
int3
cmp
push
fstl
add
xchg
cwtl
pop
popl
lds
mov
in
xor
pusha
addl
mov
mov
push
es
jno
mov
inc
stos
xchg
arpl
fldenv
push
cltd
lods
push
cmc
popa
test
add
mov
mov
add
icebp
or
jg
test
jne
negl
xchg
imul
jecxz
sub
int3
inc
xchg
xor
fwait
and
fsts
inc
gs
adc
fdivrs
inc
scas
adc
mov
push
push
mov
mov
xchg
hlt
dec
xchg
lret
dec
xchg
outsl
cmp
inc
cmp
xchg
inc
sub
das
popa
cmpsl
or
andb
jg
push
and
rcl
jp
je
inc
sub
sahf
lahf
pop
or
aas
mov
cmp
jo
loopne
dec
mov
mov
ret
in
mov
inc
mov
and
in
push
outsl
in
or
stc
sahf
xor
lahf
jno
mov
adc
dec
xchg
cmp
stos
fiaddl
xor
test
aam
mov
xchg
rolb
cmp
test
ljmp
movsb
push
lahf
cmp
stc
push
cmc
pop
bound
pop
cmp
icebp
jns
enter
xchg
push
es
cmpsb
dec
xchg
inc
ljmp
in
daa
or
jecxz
rclb
leave
mov
or
movsl
sbb
out
iret
jmp
icebp
mov
in
adc
jmp
lcall
test
mov
mov
add
in
aas
ds
jne
or
ljmp
push
aaa
mov
pop
xor
inc
xor
pop
sub
psubsw
aad
jns
xor
aad
push
push
fs
daa
jmp
in
mov
pop
mov
jl
cmpsl
rclb
cmp
shrb
gs
out
add
jnp
or
push
movsl
cmovle
jae
rcr
xor
cwtl
out
lock
ret
pop
cld
sbb
or
mov
les
les
loopne
cwtl
lds
int3
mov
imul
jmp
icebp
sti
movsl
out
and
stos
daa
push
fmull
cltd
dec
mov
mov
push
mov
pop
sub
rclb
lds
adc
pop
cltd
rclb
adc
sub
cmp
cmpsl
and
or
jns
inc
sbb
cmpsb
mov
pop
mov
dec
cmp
aas
jae
and
mov
cmpsl
int3
ficoml
sub
cmc
loop
mov
xchg
orb
sub
imul
push
pop
les
mov
inc
cmpl
push
cmc
push
jl
cmp
jns
aaa
xchg
call
inc
test
add
pop
repnz
fiadds
fldt
stc
shll
les
int3
dec
cmpsl
leave
mov
scas
mov
mov
push
test
popa
divb
sub
aas
mov
enter
aas
mov
jae
and
sbb
sbb
jmp
cwtl
xchg
mov
push
jo
push
imulb
jbe
adc
inc
push
fs
xchg
cmp
cmpsl
mov
mov
aaa
sarl
mov
jg
pop
jle
jmp
int
sbb
shll
dec
ss
imul
test
push
fsubrp
dec
add
and
and
inc
sbb
mov
faddl
mov
sbb
nop
js
xchg
hlt
ret
cmc
fs
cmpsb
mov
loop
mov
rcl
cmp
pop
cmp
dec
mov
or
test
repz
pop
sbbl
sbb
daa
xchg
loopne
push
dec
push
addr16
mov
imul
push
xchg
xchg
mov
inc
test
sub
inc
or
int3
aas
stos
inc
sub
xchg
mov
mov
mov
pop
sarl
add
mov
cmp
jno
daa
xchg
and
dec
adc
rolb
pusha
jmp
ja
sub
js
xchg
out
sti
add
out
es
jg
adc
adc
aad
fcomp
ljmp
sbbb
addr16
and
enter
dec
in
dec
repz
pushf
inc
dec
roll
mov
pop
enter
ss
adc
cmp
xor
cmp
adc
stos
dec
cmc
mov
ss
cmpsb
push
into
orb
xchg
adc
pop
adc
push
push
rorb
dec
jp
push
popa
push
sarl
movsl
insl
mov
icebp
int
das
cmc
pop
adc
loope
mov
mov
inc
mov
out
xchg
mov
mov
mov
lea
out
int
xor
xor
outsb
jo
mov
xor
adc
lret
cmp
sbb
mov
add
push
cmp
xchg
dec
imul
jae
mov
loopne
cmp
cmp
out
pop
iret
inc
push
shll
lods
mov
loop
imul
iret
outsb
push
mov
adc
sub
pushf
bound
fidivrl
andl
cmp
test
cmpl
imul
movsl
jns
pop
call
mov
ds
out
jb
jle
lret
xchg
jno
stos
and
inc
shlb
pop
push
fs
mov
add
or
lods
and
aaa
mov
lods
imul
dec
fsts
pop
js
ret
and
sub
and
push
adc
jg
dec
negb
ds
lea
pusha
rcrl
lcall
test
mov
mov
adc
mov
pop
jge
incb
cmp
and
movsb
popa
pop
stos
loop
ss
push
cs
jp
test
lock
aas
jl
jge
pop
lds
arpl
out
cltd
pop
jne
mov
int
mov
sub
enter
add
jmp
inc
inc
fistps
aas
dec
arpl
out
sti
movsb
pop
pop
imul
sbb
mov
sub
xchg
inc
jp
mov
pop
push
xorl
mov
stc
jno
pop
xor
sbb
push
and
repz
rolb
sbb
in
test
jo
sbb
jb
mov
mov
fbstp
jns
dec
jp
int
push
subl
mulb
movsl
aad
jle
lods
scas
mov
push
push
or
scas
and
inc
cmc
push
sub
cmp
inc
push
dec
xchg
decl
lret
mov
repz
lea
cmpsl
push
ljmp
jae
mov
enter
mov
xor
int
pop
push
or
cmp
imul
and
xor
loop
dec
dec
je
ret
inc
lods
inc
pop
adc
out
inc
add
aaa
sub
or
insl
push
cli
and
cld
pop
cwtl
arpl
xor
js
and
push
pop
aas
shl
or
mov
stc
inc
ffree
stc
cmp
mov
int
jbe
sub
sti
pop
mov
push
les
mov
test
sub
inc
fistl
jle
push
fldcw
inc
lcall
pop
std
mov
and
inc
jno
jmp
loop
cmp
test
rcrb
rcl
pop
or
mov
mov
into
push
and
add
or
aaa
stos
fs
jo
cld
dec
jl
sbb
ljmp
mov
xor
mov
sub
fadd
pop
jge
addb
push
hlt
or
dec
push
rcll
push
cltd
add
imul
enter
push
xchg
inc
push
frstor
decl
test
cmp
movsl
orl
outsl
xor
cmp
icebp
dec
hlt
cltd
mov
int
xchg
fwait
jl
leave
dec
inc
cmp
adc
mov
sarb
sar
xchg
cmpsb
mov
lcall
mov
shll
rcrl
inc
bound
divl
cmp
lret
js
or
fbstp
leave
xor
shl
adc
mov
xchg
cmp
pop
repz
jb
mov
and
test
pop
stc
mov
xor
xchg
pop
repz
dec
mov
leave
pop
sbb
fnstenv
adc
pusha
push
or
and
and
jns
hlt
pop
mov
je
xchg
gs
add
cmp
cmpb
push
shrb
jbe
inc
cmp
push
cmc
push
mov
cmc
or
lret
mov
out
pop
fnstsw
mov
and
pop
sub
ret
sub
add
add
mov
mov
fildll
sbb
push
and
cmp
pushf
cs
push
mov
pushf
es
mov
xchg
jmp
pop
sub
mov
shrl
loopne
xchg
push
jo
and
jge
call
add
jmp
insb
xchg
imul
and
insl
test
sbb
pop
int
mov
rcrb
mov
push
xchg
cmpsb
adc
test
mov
sbb
adc
mov
ljmp
enter
and
add
push
and
pop
push
insb
ret
lods
push
xchg
out
pop
lods
movsl
adc
popl
pop
sub
add
sbbl
xor
push
lods
mov
lahf
dec
mov
pop
mov
iret
inc
pop
inc
add
xlat
lret
cld
stos
dec
xchg
inc
push
xchg
clc
bound
push
int
stos
push
xor
pop
cmc
mov
xor
pushf
adc
mov
lods
xchg
xchg
repnz
cmp
push
add
sbb
xchg
xchg
and
sbb
jmp
aas
mov
pop
ja
xor
lret
sub
adc
ret
push
sub
xchg
stos
test
inc
cld
add
and
sub
pop
jnp
icebp
cwtl
cmpb
cmp
xchg
pop
sbb
adc
mov
mov
enter
dec
add
outsl
inc
mov
push
dec
in
jne
mov
pop
hlt
scas
sbb
cs
xchg
inc
or
mov
in
clc
xor
fildl
in
bound
sub
insb
loope
dec
mov
xor
mov
adc
mov
in
fildl
mov
in
test
sub
fsubl
sbb
lock
cmp
push
and
or
dec
lods
stos
xchg
and
pusha
and
xlat
stos
inc
push
loope
xchg
paddw
jl
pop
scas
iret
gs
jb
les
jbe
pushf
scas
jle
adc
cld
fs
or
stos
dec
pop
ja
inc
mov
in
inc
cmp
jae
fistps
aas
and
int3
repz
mov
dec
jb
xor
sbb
xor
movsb
push
rol
and
sbb
adc
ficompl
mov
add
scas
ret
push
mov
pusha
and
mov
push
popa
enter
fwait
pop
outsb
adc
xor
movsl
lds
in
xchg
fs
mov
push
mov
fwait
test
mov
or
dec
out
inc
sti
cmp
sbb
jo
mov
jae
mov
dec
push
or
mov
std
je
jbe
in
adc
mov
add
jns
in
in
in
out
xor
stos
xchg
add
jle
push
gs
and
cmp
lret
gs
pusha
mov
sub
shll
adc
jno
and
cmc
adc
adc
xchg
shrl
jmp
or
adc
adc
pop
xor
and
add
lea
sub
jb
sahf
sti
push
xor
pop
cmpsl
adc
ja
in
in
and
xchg
dec
adc
ret
call
int3
test
lock
data16
sub
setae
jmp
inc
out
push
pop
mov
xor
dec
cmc
cwtl
fbld
ja
data16
inc
adc
sti
jae
mov
pop
dec
roll
pop
inc
testb
sahf
pop
clc
push
test
rcrb
or
lods
xor
das
je
mov
jns
lcall
hlt
sbb
xlat
pop
inc
shr
inc
mov
fsubrs
jb
pop
sub
out
cwtl
es
push
out
push
insl
sub
fidivs
inc
lods
dec
or
sub
jne
nop
cmp
sub
lcall
mov
shll
cmp
add
pop
enter
sub
and
mov
jb
push
ja
test
test
ret
movsb
push
dec
in
pop
cmovbe
leave
addr16
adc
jnp
jmp
loopne
test
das
les
xlat
dec
inc
iret
test
cmp
popf
fs
mov
cmpsl
inc
xchg
imul
das
jno
pavgb
dec
pop
jecxz
imul
or
push
sbb
jecxz
call
stos
add
xor
push
jl
jns
mov
fs
mov
fistpl
in
push
pop
xchg
xchg
mov
dec
cmp
imul
jmp
cmp
out
push
repz
adc
cmp
ret
arpl
inc
jge
mov
js
xchg
fnstcw
arpl
push
mov
sahf
dec
xchg
xor
jo
jle
cltd
loope
push
xchg
dec
cmp
movl
in
push
fisubrs
aam
or
daa
xor
cld
mov
dec
nop
mov
mov
inc
je
sub
or
movsl
push
stos
rcll
inc
fisttpll
jnp
push
lahf
adc
cmp
sbb
inc
out
cmp
mov
push
sub
add
fcoms
lcall
fdivs
cmp
bound
test
pop
dec
mov
xor
dec
iret
push
lahf
ds
xchg
imulb
mov
jo
and
lds
mov
pop
pop
pop
or
xchg
out
jb
mov
imul
imul
imul
pop
cmp
stc
xlat
lods
inc
xorl
mov
inc
add
pop
movsl
adc
and
mov
je
cmp
cmp
mov
adc
cltd
lret
sahf
idivl
lret
lcall
pop
jo
hlt
mov
test
outsl
xchg
fimuls
mov
sbbl
sahf
in
mov
repz
std
ss
and
xchg
dec
pushf
lock
and
dec
jmp
xchg
push
sti
push
xchg
sbb
jb
lret
aas
dec
lret
xchg
push
push
mov
xchg
add
dec
push
stc
fmuls
xorb
dec
outsl
dec
faddl
push
add
jge
add
rorl
or
sub
mov
imull
cmp
loope
data16
mov
mov
enter
cmpsb
cmp
enter
pop
fists
mov
loopne
testb
pop
jno
mov
je
sti
popf
or
bound
icebp
pop
stos
xor
mov
lds
sub
imul
cmp
out
add
into
rcrl
es
nop
xor
xchg
js
pop
inc
rclb
ds
fimull
sarb
jo
push
mov
lahf
push
shll
sub
sub
pop
mov
jle
lret
clc
movsb
xor
data16
sbb
push
pop
xchg
dec
and
push
test
and
push
movsb
js
cmpsl
test
jae
pop
xor
xchg
push
dec
push
pushf
stos
xchg
jp
mov
dec
mov
fcoml
std
jmp
add
call
imul
pop
in
xlat
test
mov
lock
push
jae
mov
cmp
xor
ret
lret
js
jle
sbb
fistps
mov
in
and
xor
call
xor
mov
jnp
xor
sti
inc
repnz
jne
repnz
sub
inc
mov
fidivrs
iret
push
cmp
push
xor
or
xor
add
outsb
dec
adc
inc
data16
test
fsubrp
popf
push
pop
iret
pushf
pop
xchg
cmpsl
popf
cmp
and
lahf
subb
adc
sahf
test
mov
testb
jbe
mov
and
xor
dec
cmp
xchg
in
out
inc
mov
mov
mov
aad
xor
jb
xchg
xor
rcrl
aaa
mov
xlat
jbe
or
frstor
inc
insl
xchg
inc
cmpsl
jg
sub
repz
leave
or
lcall
ss
repz
or
into
std
mov
sbb
sub
loopne
dec
call
aam
pop
pop
mov
movb
incb
aam
sbb
ds
lea
add
add
push
add
and
mov
jl
adc
sub
les
test
fdivp
push
mov
xchg
pushf
in
das
sub
add
out
push
scas
int
cmp
divl
data16
mov
enter
cmpsb
lds
lock
aas
mov
mov
jg
cmpsl
lcall
jbe
mov
or
lret
adc
lret
ljmp
lret
ds
mov
addb
add
xchg
xor
jae
push
mov
test
ds
aam
mov
sub
adc
fcmovu
aad
orl
sbb
dec
outsl
shl
je
icebp
inc
pushf
mov
push
xor
add
add
xchg
es
pushf
mov
clc
xchg
adc
shrw
pushf
or
popf
pop
les
push
add
test
jae
xchg
hlt
in
add
lods
fisttpll
push
loopne
cmp
add
sbb
push
in
sub
ss
arpl
hlt
xchg
or
jbe
pushf
movsbl
sub
mov
mov
pop
movsl
enter
fldt
aam
in
ja
js
jne
cmp
push
add
es
push
pushf
sbb
je
sbb
out
daa
push
inc
in
xchg
mov
mov
pop
adc
insb
inc
fnstenv
es
mov
cltd
mov
shrb
and
data16
jnp
xor
and
aas
icebp
and
pushf
cmp
sbb
nop
lcall
inc
pop
cmp
rclb
es
in
mov
addr16
jp
ds
test
xchg
cmp
or
mov
mov
cmpsb
push
ds
jle
lcall
mov
adc
test
fsubl
adc
jp
mov
ss
mov
mov
jg
cs
lahf
js
ljmp
sbb
repnz
add
push
mov
mov
and
inc
add
sbb
fiaddl
fwait
xchg
sub
aad
xchg
sub
test
mov
jno
dec
lds
mov
lret
push
aam
or
or
sbb
pop
movsl
mov
sbb
lret
dec
mov
in
es
push
scas
in
fistps
push
sub
cwtl
xchg
inc
in
cld
xchg
add
add
popf
inc
mov
ja
aam
sarb
push
imul
stos
repnz
lret
xchg
fs
sub
dec
les
pop
jbe
notl
xor
inc
ss
or
or
pop
sbb
pusha
andb
mov
pop
push
push
xchg
dec
mov
push
clc
loop
icebp
inc
call
xchg
and
push
dec
jb
pop
xchg
gs
in
ror
imul
mov
insl
loope
sbb
in
aad
pop
inc
add
push
inc
imul
scas
push
lods
dec
xchg
cmc
out
popf
es
cmpsb
xor
es
pop
outsl
add
aaa
mov
xchg
movlhps
aas
dec
mov
dec
je
mov
jne
ja
bound
pop
in
stos
inc
div
repz
fldenv
xchg
sub
and
inc
pushf
je
aas
jge
popa
mov
and
push
pop
popa
xor
adcb
cmp
rolb
xchg
add
push
push
mov
cltd
jne
pop
or
cs
lea
fcmovnu
xchg
xchg
out
lea
enter
pop
dec
mov
mov
cld
inc
mov
mov
cmp
repz
fucomi
mov
fwait
insb
ja
jae
jns
mull
in
outsb
js
xchg
jnp
jae
scas
xor
cmp
das
dec
push
jnp
mov
or
jmp
jecxz
imul
mov
stos
push
inc
lahf
mov
mov
aas
mov
clc
ljmp
push
cli
mov
addr16
lds
sub
cmp
pop
cmpsb
int3
mov
mov
add
or
lcall
int3
mov
cmp
ljmp
loopne
or
sub
cmpsb
js
push
push
mov
fst
inc
hlt
dec
ficompl
lret
mov
and
pop
lea
adc
xchg
rorb
mov
mov
fs
pop
jle
lds
enter
sbb
daa
sub
push
cmp
or
sbb
dec
in
scas
dec
pop
cmpsl
cwtl
sbb
out
dec
leave
rclb
loop
sub
int3
cmpsl
pop
jmp
outsb
xor
les
jno
mov
sub
rolb
adc
std
jno
and
loope
push
rorl
sbb
dec
shlb
ret
test
mov
xchg
and
cs
jle
jo
sbb
shrl
pop
push
ljmp
popf
pop
inc
inc
test
inc
pop
sub
mov
mov
rorb
rcrl
inc
sub
xorl
xor
jne
in
sbb
les
or
pop
lret
scas
pop
jl
jne
sub
inc
cmp
cmpsl
lcall
nop
fdivrl
lea
inc
mov
pop
fs
mov
push
cmp
test
jl
stos
mov
add
shlb
mov
push
mov
xchg
mov
test
aas
mov
cmp
insb
jnp
mov
mov
es
rcrl
add
test
pop
stos
cmc
loop
ja
stc
ss
and
sahf
push
fidivrl
addr16
fsubrs
push
fwait
sub
stos
pusha
loop
push
push
lcall
xchg
inc
les
aad
dec
cli
adc
mov
mov
pop
xor
and
or
aad
or
nop
inc
xchg
cs
dec
imul
out
cmp
ss
sbb
xchg
cmp
stc
mov
sbb
pop
pop
xor
jne
xorb
repnz
ljmp
pop
fcomps
in
mov
cs
fmul
push
fmuls
pop
sub
imulb
movsl
std
out
clc
jg
and
popf
add
lds
or
mov
add
aaa
leave
xlat
dec
cs
adc
les
adc
mov
lods
rep
push
inc
movsb
and
push
pushf
sti
lods
add
addl
and
cmpsl
xchg
jbe
xor
ret
clc
lds
mov
jecxz
sub
movsb
decb
pop
and
or
adc
mov
hlt
dec
sub
push
arpl
loopne
popa
test
cwtl
jl
pop
in
xchg
adc
mov
push
pop
mov
ds
int
pop
xor
loope
or
xor
and
add
add
mov
inc
jp
test
xor
cmp
sti
sbb
cltd
mov
test
lret
pop
push
test
jo
jo
jne
mov
dec
in
push
xchg
push
dec
cmp
sar
sub
lods
subb
mov
xchg
add
fstpt
and
lea
insb
mov
adc
repnz
cmpsl
add
push
mov
aad
cld
xor
repnz
xlat
add
bound
out
iret
xchg
push
out
and
mov
popf
popa
inc
jae
inc
sarb
mov
jecxz
cmp
mov
pushf
mov
dec
push
sbb
push
add
insl
adc
out
xchg
push
xchg
je
movsb
lea
lret
clc
add
and
pop
sbb
dec
test
dec
movsl
or
and
mov
inc
iret
jp
cmc
xchg
adc
in
fstpt
sbb
xlat
sub
mov
in
dec
sub
daa
loopne
mov
inc
mov
jmp
call
imul
push
mov
dec
ret
iret
lea
pop
cld
xor
cmp
mov
pop
scas
gs
ds
out
sub
jle
dec
xchg
dec
lret
push
stc
push
shrl
inc
xchg
jecxz
adc
js
loope
pusha
dec
cmpsl
sbb
loop
pop
sbb
jmp
pop
jo
pop
cmp
mov
cs
lods
dec
add
jecxz
roll
mov
cwtl
in
jg
and
std
insl
cmp
pop
mov
cmp
fstps
daa
call
and
mov
and
gs
loop
mov
sahf
and
cmp
mov
pop
sub
int
loopne
push
fsubl
jl
sar
int3
cwtl
mov
fldl
xor
loop
fistpl
jecxz
repz
jb
stos
pop
inc
imul
sbb
dec
xor
dec
out
sbb
test
mov
push
repz
or
imul
out
cltd
add
mov
sbb
mov
enter
cmp
arpl
dec
xlat
push
repnz
xor
cmpsl
inc
scas
sbb
inc
fmul
cmp
xchg
xor
in
andb
pop
xor
pop
pop
pushf
push
mov
jno
scas
bound
mov
rclb
mov
and
and
sub
push
stos
and
int3
nop
out
mov
push
mov
addr16
pop
shll
out
cmp
iret
pushf
cmp
jmp
jmp
insb
shl
sub
mov
sti
imul
push
mov
int3
popf
call
cltd
fiadds
and
xchg
push
xor
add
lahf
jnp
lret
testl
gs
mov
dec
mov
scas
cwtl
in
lcall
in
or
jle
jae
cmc
mov
dec
pop
or
lock
inc
inc
jle
push
cmpsb
test
das
out
sub
pop
ss
mov
jge
popa
xchg
xor
cmp
inc
push
test
add
add
faddl
lahf
imul
mov
lcall
jmp
in
loopne
or
push
dec
leave
mov
adc
bnd
mov
adc
daa
in
or
out
testb
cmp
adc
xlat
ret
test
cmp
fisttpll
mov
or
sbb
loope
dec
mov
adc
dec
adc
jle
push
adc
and
mov
stos
std
test
or
adc
inc
cld
stos
xchg
inc
lock
jne
aad
xchg
daa
fs
int
or
sbb
xor
push
daa
pop
mov
lret
dec
aas
das
testb
fistps
add
xchg
lahf
xchg
or
in
mov
jns
jae
loop
cmpsl
rolb
sarb
andl
data16
int
jae
out
pusha
pop
sbb
aam
jae
into
ja
inc
dec
mov
mov
test
and
mov
adc
push
rcrl
dec
fcompl
sbb
fsubrs
mov
dec
mov
aaa
xchg
and
mov
int3
adc
or
aam
pop
jge
cmp
ret
xchg
decb
mov
inc
mov
rclb
mov
repnz
xor
out
hlt
scas
cmp
int3
jg
outsl
jecxz
cld
stos
inc
or
scas
pop
aas
aas
adc
dec
mov
mov
pop
pop
ret
pushf
and
movsl
dec
je
xor
gs
add
pop
xorl
scas
cli
xchg
mov
xor
insb
sbb
cld
fidivrs
sbb
cld
fwait
movlps
ds
xor
jnp
adcb
sub
pop
jae
sub
mov
cs
dec
in
mov
sahf
inc
hlt
jb
cmp
push
clc
sbb
cmp
inc
mov
cmp
sub
aam
sub
femms
and
lods
fdivrs
mov
lret
xchg
cltd
cmp
bound
jle
push
stos
add
and
add
sub
notl
add
mov
xor
pop
leave
rcll
cmpb
int
mov
pop
xchg
out
push
sbb
mov
mov
subb
ds
inc
shrl
mov
mov
shlb
xchg
rolb
dec
fimuls
sbb
repnz
inc
cmp
mov
outsb
imul
es
cmp
ret
push
sbb
rcrl
leave
dec
cmpsl
enter
cmp
cld
cmp
flds
xchg
fucompp
jg
xchg
rolb
pop
stc
ljmp
out
or
or
into
push
jge
or
insb
sub
shlb
scas
mov
lea
add
out
imul
cwtl
mov
subl
sahf
aaa
rcll
push
imul
es
lahf
pop
pushf
inc
in
xchg
aas
pop
cmpsb
pop
or
les
pop
pop
sbb
pop
cmp
jmp
shrl
mov
mov
sub
std
xor
es
sub
fcmovbe
bnd
cmp
loopne
movsb
out
iret
xchg
jp
mul
ja
add
pop
push
sbbb
jp
call
mov
push
xor
cltd
movb
ljmp
mov
pop
mov
cmp
sbb
dec
sbb
in
enter
and
adc
or
outsl
or
and
filds
addr16
inc
inc
repnz
dec
or
add
pop
jnp,pt
xchg
pushf
idivl
or
mov
pushf
ds
inc
lret
test
mov
dec
push
push
stc
sub
aas
imul
in
lods
dec
and
jg
jbe
addr16
aaa
jb
mov
pop
cmp
fimull
mov
fisttpl
and
pop
in
jo
xor
outsl
mov
pop
jg
jno
lret
fs
ja
adc
sbb
call
cmp
mov
xchg
and
fldl
mov
inc
and
fsts
lea
add
hlt
xor
jmp
insl
dec
pop
xchg
jp
repnz
ja
sub
cwtl
mov
inc
mov
xchg
push
cmp
push
fstl
dec
sub
inc
aam
fistl
mov
and
inc
and
lea
xorb
je
es
cmp
inc
repnz
or
xor
shlb
cld
in
xor
or
sti
cmp
pop
gs
vmovapd
add
jo
sbb
in
sahf
push
cltd
mov
cmp
arpl
xchg
sub
mov
popl
mov
iret
scas
pop
lret
mov
lea
ror
xor
inc
add
jle
into
adc
cmpsb
adc
mov
mov
data16
andb
ljmp
mov
aas
aas
jo
imul
insb
inc
add
jns
push
jae
imul
lcall
jb
dec
jno
cmpsb
mov
and
iret
int
or
leave
add
je
fwait
xor
push
ja
push
mov
bound
into
jae
in
add
or
xor
pusha
xlat
dec
out
in
and
data16
mov
cmp
sbb
sahf
aad
mov
cmpl
adc
mov
js
add
jns
scas
push
and
jo
adc
xchg
add
mov
mov
sbb
insl
dec
enter
dec
sarl
out
cmp
dec
xchg
add
xor
imul
xor
fmulp
notl
inc
cmc
icebp
sub
sub
popl
cmpsl
push
cs
jmp
lret
mov
pop
les
xlat
jmp
pop
add
mov
out
in
call
mov
test
push
jbe
rorb
jl
incb
pop
and
in
cmpsl
xor
mov
add
dec
out
and
inc
push
xchg
inc
gs
jnp
loopne
cmp
addr16
mov
jecxz
pop
in
sub
mov
and
xchg
inc
adc
xor
xor
push
int
mov
or
lret
fsqrt
icebp
daa
sbb
add
push
push
xlat
lock
hlt
lds
orb
lea
adc
pop
fidivrl
add
adc
lock
out
sub
out
xlat
or
out
adc
adc
hlt
imul
cmp
cmp
or
mov
sub
shlb
adc
scas
jmp
pop
mov
les
sub
orb
jmp
pop
or
adc
xlat
in
stc
aaa
push
lret
ss
into
rolb
xchg
and
jne
js
into
out
mov
and
or
jnp
inc
test
push
adc
dec
rcrl
push
inc
icebp
aaa
scas
xor
das
xor
test
ret
pop
lods
jb
xchg
lahf
xchg
call
ja
push
mov
jae
sub
mov
pushf
int3
shlb
movsb
aas
inc
aaa
fisttpl
pusha
jns
out
push
insl
bound
repnz
into
ds
xor
xchg
pop
jle
movsl
pop
sub
xchg
enter
inc
out
out
ret
pop
adcb
mov
adc
mov
push
scas
inc
movsl
mov
fcmovnbe
sub
insl
adc
popf
fchs
movsl
test
aam
push
outsb
pushf
dec
std
imul
lea
scas
cmp
dec
xchg
push
ljmp
fucomip
jecxz
jb
scas
and
pop
mov
addr16
pop
gs
lret
leave
or
sbb
out
push
aaa
sahf
adc
lcall
sub
testl
push
adc
mov
pop
outsb
mov
leave
xchg
fsubrs
mov
sbb
sub
in
lea
cmc
sbb
mov
add
sti
cmc
push
lahf
jle
mov
adc
xor
jmp
xor
mov
js
movsl
popa
add
push
dec
orb
cmc
inc
dec
sub
addr16
jmp
mov
lahf
add
in
or
cmp
mov
jno
push
pop
hlt
xor
test
xchg
in
and
jecxz
mov
pop
ret
adc
lret
inc
sbb
movsb
sub
shll
sarl
loopne
shll
das
orb
push
push
cltd
jb
mov
ja
xlat
push
fcompp
and
xor
dec
sar
ja
pop
maxps
xor
fidivl
into
pop
xchg
push
mov
xor
les
mov
jno
dec
or
scas
es
hlt
add
jne
mov
les
mov
loop
inc
repz
xchg
mov
fs
jle
xor
iret
mov
clc
xlat
mov
xor
ror
pop
push
jle
in
fs
jo
push
cmpsb
out
insb
jns
test
jns
pop
aad
mov
cmc
scas
cmp
ficomps
xor
lds
clc
pop
lea
or
mov
mov
jl
ficomps
dec
sub
pushf
pop
fistl
sub
nop
clc
out
or
inc
jno
lds
test
lret
mov
sar
mov
mov
outsl
pop
pop
cs
sub
mov
lcall
hlt
into
mov
xchg
cmp
icebp
aam
add
int
sti
out
sub
push
movsl
cmp
push
push
jb
ficoms
adc
inc
shl
fisubs
test
cmp
rorl
cmp
adc
jle
shlb
push
aam
mov
pop
fisubrs
xchg
or
cmp
cmc
icebp
aad
xor
push
cwtl
mov
divl
jg
mov
test
adcl
movsb
out
mov
mov
dec
mov
mov
jns
pushf
mov
sbb
repz
or
sti
outsl
add
f2xm1
cmp
popa
cmc
mov
mov
outsb
xchg
loope
outsb
push
mov
insl
scas
inc
mov
adc
cmp
mov
call
pop
sbb
jo
pop
and
scas
jbe
pushf
loope
sbb
nop
or
nop
xorb
pop
adc
dec
shlb
call
jo
hlt
add
push
jae
dec
das
xor
inc
push
adcl
inc
lret
fisubl
xor
pop
cld
pop
in
movsl
mov
sbb
aam
inc
pop
inc
dec
and
cltd
fcompl
stc
or
mov
sbb
lock
add
add
in
js
icebp
scas
mov
test
pop
xchg
mov
mov
mov
nop
cltd
mov
mov
pop
mov
jno
add
adc
or
incl
sbb
add
std
xlat
cmp
call
scas
xchg
xchg
jae
sub
loop
ret
scas
dec
pop
pop
in
inc
clc
stc
or
int
fimull
fcompp
xchg
aaa
ja
aad
cwtl
scas
xchg
popa
jmp
pop
je
jmp
sbb
mov
inc
mov
push
outsl
lock
jne
pushf
clc
sbb
es
int
and
insb
arpl
aaa
aam
jl
fstpt
and
gs
jl
xor
pop
mov
lods
aam
mov
js
outsb
jns
mov
add
enter
pop
cmc
das
jle
pop
loopne
jns
cltd
xchg
vunpckhps
push
iret
and
out
xchg
mov
cwtl
insb
sahf
test
push
inc
push
cmp
jbe
movsb
cmpsb
and
adc
sbb
clc
int3
jl
mov
lcall
pop
repnz
mov
jl
mov
aaa
testb
loopne
call
jns
cmp
push
cmp
leave
dec
inc
xor
sahf
xlat
jl
std
and
cld
or
jle
pop
inc
mov
pop
sub
mov
push
idivl
dec
jno
rorb
cmp
jns
sahf
xchg
out
mov
mov
mov
loope
jge
dec
mov
add
xchg
sti
sahf
fdivr
je
push
sbb
mov
ljmp
clc
bsf
mov
dec
push
sub
inc
cmp
ljmp
cmpsb
ficomps
enter
fwait
popf
add
iret
sbb
and
stc
inc
dec
les
or
mov
bound
aaa
cmpsl
and
cmovl
mov
sbb
cltd
cpuid
dec
arpl
adc
pop
into
xchg
add
pop
jl
mov
xchg
stc
fstps
iret
jbe
fisubl
fistpl
movsl
push
es
fcmovne
xchg
add
pop
xor
mov
push
stc
ds
scas
sbb
loop
jnp
cmc
sti
iret
mov
sub
int3
inc
sbbb
into
fmul
fiaddl
cli
clc
adcb
jmp
mov
into
jle
fildll
xchg
roll
dec
jo
pushf
jmp
fimuls
insl
xlat
clc
dec
lahf
xchg
cld
and
mov
push
xor
flds
mov
addr16
icebp
xor
fisubrl
mov
push
std
outsl
stc
dec
or
roll
outsl
jnp
dec
xor
aaa
ficoml
mov
lret
pop
xor
push
cwtl
xchg
leave
ret
cmp
adc
mov
notb
push
dec
dec
inc
nop
jle
sahf
or
jecxz
int
fs
mov
dec
leave
inc
mov
jnp
xor
push
pop
mov
sbb
imul
mov
sub
jmp
pop
jns
test
jl
push
roll
movsl
scas
rol
and
sub
xor
push
add
cmp
mov
pop
inc
not
sbb
jbe
repz
ss
fcomps
inc
mov
test
jbe
call
jg
add
xchg
or
adc
sbb
xchg
cltd
add
cld
inc
outsl
mul
sub
xor
mov
dec
repnz
std
popf
xchg
xchg
shl
sub
inc
or
les
xchg
fisttpll
daa
pop
cmp
add
xor
jae
xchg
push
mov
ds
adc
mov
sbb
push
xor
jecxz
out
cmp
mov
in
sahf
std
sbb
cmc
aam
in
lds
sbb
popf
aas
sub
pusha
aam
aas
mov
jecxz
adc
xlat
cld
sbb
cmp
mov
out
jo
test
aam
add
inc
movsb
inc
outsb
pusha
jg
mov
push
add
push
push
dec
or
or
out
mov
xchg
stos
jns
aaa
lds
jle
push
adc
outsb
jb
orb
pushf
xchg
cmp
mov
jbe
mov
dec
and
imul
aad
inc
idivb
sti
fcompl
sbb
mov
cmpsl
adc
mov
xlat
pop
ss
fs
mov
cmp
pop
rorl
subb
adc
mov
cmp
test
inc
mov
xor
je
inc
adc
into
fidivl
mul
das
xor
sbb
movsb
out
xchg
adc
js
ret
push
fisubs
pop
mov
ret
loopne
pop
lcall
and
xchg
dec
lock
or
jmp
rol
cld
outsb
loopne
mov
movsb
mov
sub
fisttpl
movsl
mov
neg
cmp
jl
lods
mov
pop
mov
out
into
lods
and
ds
mov
jp
sub
cld
test
sbb
fstpt
pop
je
add
popf
mov
dec
xor
repnz
fsubr
out
stos
nop
fnstenv
outsl
push
rcrb
inc
fisttps
mov
or
cmp
xchg
xchg
es
test
lods
aas
xchg
mov
andl
inc
shrb
pop
fcoml
mov
aas
xchg
data16
cmc
mov
test
cmpsb
loope
aaa
cs
mov
stos
push
or
sub
dec
pop
inc
and
mov
iret
jmp
test
out
shl
gs
xchg
stos
cmp
or
xchg
mov
stos
jle
mov
cltd
cmp
sarb
dec
pusha
push
icebp
ficoml
fnstsw
pop
idiv
jb
fisttps
push
mov
or
sub
std
mov
dec
push
bound
ret
call
and
push
stos
xchg
lcall
ljmp
inc
gs
icebp
cltd
fcmovne
jmp
fs
in
outsb
mov
add
pusha
clc
pop
scas
pop
inc
dec
mov
inc
sbb
in
fisttpl
mov
repnz
ficompl
data16
mov
xor
sbb
and
adcl
or
pop
test
jns
out
xchg
mov
cwtl
add
lock
cmp
cmp
adcb
fs
stos
fwait
clc
aad
xchg
dec
xor
shlb
mov
mov
roll
stc
inc
jb
lods
fstpt
mov
dec
or
or
aam
sub
das
mov
dec
and
and
dec
lahf
cli
and
enter
je
pop
lods
or
mov
mov
lods
mov
jns
insb
and
test
cmp
pop
push
push
orb
outsb
pop
sahf
movsl
pop
push
sbbl
sbb
sub
add
push
bound
test
inc
fsubrs
leave
mov
loop
mov
mov
push
sbb
inc
and
pushf
call
subl
imul
adc
es
push
xor
push
sbb
or
in
loop
mov
setle
mov
push
adc
outsb
je
xor
mov
mov
adc
mov
xchg
jns
and
out
and
ss
cli
or
jle
fs
xorl
lock
sub
call
and
mov
sti
imul
push
inc
lcall
sbb
sub
or
lds
cltd
cld
clc
in
js
idivl
mov
pop
inc
lods
mov
mov
and
mov
mov
mov
push
out
out
xchg
in
bound
fldcw
and
add
sbbb
lret
iret
and
nop
cmp
sbb
loope
add
test
cmp
jecxz
repz
adc
pop
and
leave
dec
popf
sbb
push
lods
test
int3
mov
jbe
loope
data16
nop
lahf
mov
inc
push
and
or
dec
add
aas
add
cli
xchg
fidivrs
xor
imul
rorl
or
adc
sbb
xor
push
filds
sbb
es
cmpsb
dec
fldenv
test
movsb
adc
adc
xchg
int3
test
add
dec
insl
sbb
mov
mov
cmpsl
mov
sbb
push
int
fwait
xchg
dec
mov
xor
adc
popf
mov
xchg
push
mov
and
jno
mov
and
cld
jbe
popf
fs
jno
mov
pusha
stos
mov
pop
xchg
or
jl
leave
ret
or
mov
mov
push
jmp
es
outsb
sub
and
fs
ficoms
out
mov
leave
inc
stos
in
jle
dec
pop
cmp
js
cld
out
xor
popf
dec
cltd
scas
cmp
jnp
negb
sbb
ret
xor
arpl
adc
scas
push
cld
mov
fs
pusha
jb,pn
mov
fcmovnb
sbb
imul
bound
push
pop
js
loope
inc
cmp
push
cmp
into
ds
shll
mov
and
fcomp
pop
xchg
mov
dec
add
insl
lret
psubsb
outsb
mov
mov
add
push
test
jo
and
daa
add
mov
test
stos
pop
adc
mov
jb
mov
xchg
pusha
mov
xor
mov
in
pop
mov
dec
sbb
and
pop
les
bndldx
adc
stc
push
scas
pop
ja
cmp
test
das
inc
fisubs
mov
rcrl
jmp
mov
pushf
or
or
xchg
cwtl
jecxz
fdivl
jae
loop
pop
and
shll
mov
imul
mov
in
mov
inc
mov
jge
ret
add
aam
gs
push
aad
and
inc
sub
je
inc
pop
add
frstor
adc
cmc
loope
mov
int3
dec
fs
lods
pop
sbb
jg
test
pop
int
mov
sbb
jle
sub
xor
inc
mov
and
dec
into
mov
dec
insb
pop
push
xchg
pusha
inc
addl
int3
jmp
mov
sub
sub
mov
push
cwtl
nop
mov
repz
lock
and
loop
data16
jns
sar
dec
or
int3
test
xchg
push
sbb
pop
jns
jno
in
xor
sub
test
test
inc
les
out
xchg
ds
jns
adc
pushf
cwtl
into
push
arpl
stos
data16
jge
fnstenv
inc
xchg
adc
insl
sbb
shlb
test
sub
mov
mov
dec
pop
mov
movsl
lcall
add
daa
cld
std
ljmp
fisttpl
mov
cwtl
pop
cmpb
sbb
sbb
cmp
sub
lock
inc
and
mov
push
mov
xchg
out
push
jns
or
mov
imul
enter
jecxz
cwtl
add
ds
jno
out
sbb
mov
add
test
sbb
and
imul
push
push
xor
push
add
repnz
mov
cmpsl
push
pushf
cmp
and
dec
dec
sbb
insl
xchg
pop
ret
and
dec
icebp
aas
fistps
flds
or
orb
and
push
inc
cmp
pop
leave
and
jb
sbb
in
repz
test
push
loopne
and
js
popf
cmp
cmp
push
insl
in
push
xor
mov
ja
pusha
nop
cld
xchg
mov
add
inc
movsl
xchg
xchg
adc
ljmp
xchg
addl
xor
xor
push
repnz
in
mov
inc
mov
movsb
adc
insl
inc
stos
clc
mov
lods
sub
loopne
inc
jne
pop
sbb
test
push
enter
rcr
jnp
aam
hlt
mov
aad
ja
cmp
push
xor
fdiv
mov
or
inc
cmpsl
mov
sub
inc
jb
repnz
iret
dec
test
cmp
lcall
jle
jg
bound
xor
faddp
shll
push
sub
icebp
and
dec
sahf
sbb
fstpt
adc
cli
jl
fs
cmp
shrb
push
pop
cmp
xor
std
sbbb
inc
popf
xlat
outsb
push
pop
pop
xchg
adcb
xor
roll
mov
sbb
in
xor
inc
mov
mov
mov
sub
xor
inc
sbb
loop
addr16
je
add
loop
mov
je
inc
dec
xor
je
cld
add
sub
ret
adc
shlb
pop
add
mov
xor
inc
inc
out
imul
mov
sbb
adcb
or
pushl
cmpsl
inc
xor
sahf
repnz
inc
jg
mov
lea
inc
mov
or
jmp
add
xchg
or
xor
mul
leave
inc
pop
scas
aas
shl
mov
je
rcl
mov
das
fcomps
data16
xor
out
bound
xor
pop
mov
mov
scas
push
jge
repz
lds
inc
jmp
pop
mov
adc
int
mov
and
lahf
cmp
add
and
mov
popa
fs
es
rorl
adc
lahf
push
jns
jno
jne
push
je
mov
inc
repz
adc
xor
mov
push
xchg
cmpsb
bound
adc
cs
jmp
mov
cli
out
adc
sub
pop
je
gs
sub
adc
ret
cmp
push
movsb
arpl
ss
ret
mov
cmpl
mov
fdivs
ljmp
call
mov
insb
dec
sbb
push
rolb
out
and
xorb
cmpsb
or
sub
stos
sub
cmp
lahf
xchg
loop
loop
gs
adc
add
call
mov
fldl
addr16
leave
and
inc
loope,pt
fwait
dec
inc
pop
cli
jmp
xchg
mov
stos
sub
mov
add
jecxz
adc
fldcw
je
mov
ljmp
clc
leave
data16
lahf
cmpsb
fcoms
xchg
inc
test
lcall
bound
dec
xchg
lds
or
or
pop
popa
shr
sahf
roll
fdivrl
inc
sbb
mov
scas
in
and
cmp
cmp
sahf
in
nop
jl
and
cmp
loope
xchg
xchg
add
sub
das
ficomps
sub
mov
outsl
jge
push
sbb
pop
or
mov
insl
cmp
mov
mov
pop
popf
cld
cmpb
mov
or
pop
mov
add
push
inc
cmp
into
mov
or
jecxz
mov
insl
dec
fiaddl
mov
outsl
testl
cmp
and
in
jg
outsl
js
mov
xor
cli
sub
push
add
cmp
sub
jmp
imul
mov
in
or
or
cmp
shll
push
push
push
mov
je
cmp
pop
insl
cmp
xor
data16
cmc
data16
sbb
scas
push
or
popa
mov
cmp
cld
fadds
pop
negl
xor
mov
movsb
shlb
or
push
call
or
pop
test
fsubl
or
jge
cli
pop
rolb
inc
ja
cli
flds
cmp
adc
xorb
xchg
push
pop
adc
sarl
xchg
enter
ja
mov
cmp
lcall
cwtl
mov
into
push
cmp
push
adc
pop
test
in
test
mov
pop
cld
push
jge
dec
enter
inc
add
xor
xchg
mov
push
mov
out
jmp
clc
mov
xor
push
sub
imul
sbb
dec
daa
fnstenv
sbb
cld
inc
outsb
pop
insb
xchg
icebp
sbb
xor
leave
xor
shlb
or
or
mov
fistpl
xchg
add
cmc
cmp
lahf
sub
bound
iret
ret
sub
sbb
pop
xchg
ficompl
cmp
ljmp
jns
push
in
and
mov
in
leave
cmc
mov
adc
mov
in
mov
and
mov
xchg
dec
scas
cmc
pop
sub
js
into
mov
inc
pop
mov
mov
pop
dec
popa
rclb
xchg
sub
scas
ds
mov
dec
mov
cltd
movsl
jbe
lret
mov
rcr
loope
push
adc
pop
mov
lcall
cmp
inc
pop
xlat
inc
mov
mov
daa
push
testl
push
cmp
lock
adc
sbb
and
je
add
sub
xor
in
cmc
icebp
mov
mov
loop
in
gs
and
or
push
fsubp
shlb
fwait
or
daa
fnstsw
mov
xor
adc
addr16
jbe
sbb
mov
sbb
cs
inc
dec
fisubs
mov
stos
mov
jnp
rolb
mov
push
xchg
dec
fs
roll
cmpsb
adc
sbb
loope
pop
add
jbe
les
xor
xor
cmp
push
sbb
inc
aaa
mov
add
lock
mov
mov
mov
push
in
das
add
pop
dec
cs
lock
out
mov
nop
or
movsb
adc
nop
lds
lods
scas
push
movsb
xor
call
mov
lcall
js
pop
pop
inc
lds
or
fs
in
push
mov
clc
mov
xchg
push
popf
into
cmp
dec
ror
xor
add
xchg
nop
hlt
arpl
xchg
rcll
popa
shl
out
or
arpl
add
mov
mov
repz
lods
cmp
lea
cmp
mov
pop
imul
xchg
mov
shl
ss
jle
jne
xchg
dec
rorl
fimull
or
mov
jl
js
sub
lcall
adc
cltd
sbb
in
or
jge
xor
in
add
sbb
adc
mov
nop
pushf
pop
add
repz
push
addl
mov
lret
pusha
pcmpeqd
in
sbb
push
adc
xchg
sub
mov
data16
mov
jle
sbb
mov
add
and
bound
jae
ja
add
fsubl
push
les
lds
mov
mov
test
aaa
add
adc
scas
shl
loope
push
pop
and
shll
xor
sbb
xchg
test
mov
outsb
pop
jmp
and
stos
jge
out
lcall
dec
sti
or
jno
jns
xor
push
inc
mov
push
mov
jne
jecxz
sub
rorl
test
loop
mov
insl
retw
add
insb
add
shr
mov
adcl
push
test
cltd
mov
xor
lret
add
sub
push
add
adc
sbbl
cmp
andl
add
or
mov
cmpsl
mov
pop
cld
sub
adc
flds
lds
adc
int3
sti
les
xchg
inc
in
mov
mov
xchg
mov
mov
mov
sbb
xor
stc
xlat
push
xor
push
inc
jno
iret
imul
lods
or
mov
inc
ja
or
ja
sbb
ljmp
rcl
xchg
lock
xlat
add
shll
int
filds
les
out
or
shlb
sub
in
sub
ret
dec
int3
insb
push
inc
dec
or
hlt
lock
xlat
mov
push
adc
gs
fsubrs
iret
scas
imul
cmc
inc
hlt
xlat
and
ja
cmc
xchg
scas
out
jb
cmp
sti
repz
fs
das
pop
xchg
bound
sub
dec
pop
dec
sti
xchg
nop
test
cli
add
mov
or
sbb
fs
cmpsb
dec
mov
sub
data16
jno
push
mov
popa
cld
cwtl
cmp
out
sbb
aaa
je
or
push
sbb
stos
pop
iret
dec
icebp
js
sub
jg
mov
fistpl
pop
outsb
sbb
nop
push
aas
jl
push
out
jl
xor
call
ret
sub
add
mov
jb
ret
mov
cld
hlt
sbb
lret
or
popf
and
cwtl
cmp
ret
xchg
lds
jno
insb
lods
mov
or
out
inc
jno
adc
inc
mov
xchg
xorb
push
lahf
mov
ret
and
push
jmp
and
mov
mov
jmp
fnstsw
fs
das
pop
andb
jl
insb
in
movsb
loop
test
scas
push
xor
xor
movlps
jae
iret
jmp
push
test
and
test
scas
clc
mov
mov
scas
push
es
mov
scas
call
cld
ret
outsb
xor
insl
loopne
push
sbbl
dec
pop
shlb
sub
jg
pop
popa
add
aaa
inc
inc
mov
push
pop
mov
pop
adc
mov
std
outsb
test
out
sbb
inc
adc
push
cmp
sub
lock
adc
stos
jo
pop
imul
repnz
ficomps
push
pusha
clc
and
jns
outsb
pop
imul
adc
lcall
ror
jb
les
in
xchg
jb
lods
int3
fcomps
data16
dec
adc
xchg
adc
fists
inc
push
mov
scas
inc
rol
mov
pop
test
and
mov
pop
xchg
movsl
push
sub
jb
repnz
ret
lcall
lock
cltd
cmpsl
test
decl
idivb
inc
xchg
and
mov
sub
adc
imul
inc
xchg
outsb
xor
cltd
out
popa
loopne
xchg
or
and
mov
lock
dec
jbe
outsb
push
add
stos
xchg
pop
fwait
jge
push
add
lahf
dec
loopne
mov
push
sbb
mov
leave
jae
mov
xchg
cmp
iret
pop
in
clc
xchg
notb
push
aad
jle
or
and
mov
push
scas
jb
outsl
test
sbb
cld
cmpsb
jo
out
outsb
mov
push
test
ja
push
shl
and
inc
push
xchg
repnz
into
fucom
and
shll
push
dec
push
adc
into
dec
pop
mov
xchg
rolb
sbb
test
outsb
int
pop
movsb
aad
pop
cld
sbb
ja
xor
cwtl
hlt
out
inc
add
iret
xchg
aaa
pop
insl
ds
xchg
ret
cmp
push
inc
inc
scas
jbe
jmp
test
std
lods
or
test
jmp
sti
and
add
inc
add
mov
and
lock
sub
jge
and
xchg
cltd
or
fs
sti
jnp
push
jno
or
jecxz
out
push
pop
into
test
xchg
or
lahf
jne
add
adc
mov
test
push
sbb
loopne,pn
lds
add
cmpsb
sbb
mov
lcall
adc
frstor
push
ret
les
mov
push
mov
or
outsb
xchg
aaa
mov
push
jmp
das
push
dec
mov
adc
cmp
adc
and
rolb
sbb
xor
mov
or
cmp
add
mov
dec
shl
decb
es
sub
xlat
sbb
pop
adc
push
aaa
sti
and
pop
pushl
andb
jle
push
xor
imul
loop
pop
dec
mov
nop
inc
fnsave
add
push
inc
std
jg
add
mov
pop
xchg
loop
jno
and
loopne
enter
mov
or
andl
movsb
stc
fdivrs
cld
push
in
icebp
xor
mov
cs
int3
hlt
or
dec
pop
mov
cld
push
fwait
mov
jbe
dec
sbb
fs
mov
popf
push
xor
mov
loopne
int3
in
and
push
enter
mov
imul
or
dec
push
outsb
enter
shrb
dec
imul
arpl
push
push
pop
jmp
lret
icebp
jge
pop
jl
sub
jne
sub
sahf
sti
lcall
cwtl
aad
sbb
aam
push
inc
test
and
pushf
jnp
xlat
stc
test
jmp
in
mov
inc
mov
ss
pop
testl
mov
call
cwtl
cmp
sub
cmp
jmp
jge
inc
sub
xor
sbb
testl
adc
mov
int3
xchg
call
sub
mov
mov
xchg
stc
lret
jne
mov
push
push
adc
mov
mov
test
pop
pushf
inc
adc
pop
les
adc
sub
cli
cmc
clc
fcomp
xor
std
pusha
push
into
jne
inc
jns
jo
lods
push
je
mov
pop
loop
cmpl
pusha
lods
mov
pop
and
push
iret
std
insb
test
adc
jge
mov
into
xor
rcl
imul
es
mov
mov
in
mov
roll
in
dec
add
in
movsl
leave
add
out
cmp
sbb
outsl
insb
lret
aam
or
sub
idivl
sbb
movsb
imul
xchg
xlat
mov
inc
xor
jle
nop
push
outsb
fdivs
push
add
mov
mov
test
scas
inc
adc
push
mov
clc
mov
inc
xchg
mov
call
cmc
test
jns
sub
push
or
divl
sti
push
jecxz
lcall
push
leave
loopne
mov
push
out
sub
pop
and
fsubl
jge
cli
sbb
jb
test
xchg
call
pop
push
pusha
clc
xchg
gs
lea
test
or
push
loope
adc
out
push
push
in
jne
mov
dec
and
cmp
pop
adc
nop
or
test
mov
xor
fs
dec
pop
dec
pop
or
xor
jmp
mov
loope
jnp
stos
sub
roll
cmp
nop
or
xchg
cwtl
in
inc
add
enter
dec
ret
pusha
add
cmp
repz
adc
mov
push
push
adc
insb
or
inc
data16
sub
repnz
inc
arpl
pop
lret
mov
enter
inc
ret
and
inc
jae
inc
inc
pop
icebp
inc
ficomps
push
sub
and
movsl
filds
adc
aad
sub
stos
int
das
shrb
shll
clc
sahf
adc
psubq
movsl
jnp
test
test
dec
lods
bound
inc
ret
xor
cld
mov
out
xor
pop
add
and
faddl
dec
ljmp
xchg
mov
inc
lock
test
fbstp
stc
rclb
and
cmp
into
adc
lods
jbe
push
inc
das
push
push
lods
jnp
insb
or
xor
stos
popa
imul
mov
cmp
mov
jmp
ss
cmp
loop
in
sahf
mov
es
leave
mov
mov
cmp
mov
cmp
or
sub
into
jne
cmp
push
mov
sahf
sbb
les
adcb
cld
inc
or
sbb
pop
andps
sbb
or
cmp
add
aad
iret
add
xor
and
push
pop
popa
mov
cmp
jae
cmpsb
pop
sti
pop
sahf
xorb
enter
iret
cwtl
arpl
dec
or
jae
std
les
lods
jp
mov
shlb
sbb
mov
inc
das
push
fdivl
ja
push
dec
pop
push
mov
cmpsb
sub
adc
cmpb
adc
shll
inc
mov
sub
cmp
fbld
int
test
loop
inc
inc
mov
xchg
push
repnz
aam
repnz
sbb
dec
jecxz
lahf
push
inc
in
cmp
jle
pop
xchg
jae
arpl
and
int
jp
fcomps
and
sbb
icebp
rcr
js
out
xchg
clc
cmpsb
xchg
fmull
xor
movsb
int3
outsb
adc
test
cld
lods
push
mov
pop
rcrb
pop
xchg
mov
pusha
iret
sub
xor
rcll
stos
in
dec
inc
fsubrl
jno
pop
leave
jge
gs
ljmp
pushf
js
daa
jb
clc
mov
mov
data16
and
imul
mov
xchg
out
into
mov
ds
xlat
jl
fistl
and
adc
es
add
lods
dec
push
imul
scas
fcoms
lret
sarb
fadds
add
jo
jge
push
jle
out
stc
fldpi
or
mov
dec
bound
jbe
jnp
sbb
pop
pop
nop
jmp
push
sub
sub
inc
mov
dec
mov
jge
xor
das
cmpsl
imul
call
dec
adc
cmc
mov
dec
fisubl
int3
xchg
adc
and
sub
sub
sbb
inc
stc
lahf
std
mov
or
fs
adc
xor
adc
popf
xor
pop
push
fdivrp
inc
inc
and
xor
repz
addr16
rorb
push
insb
ret
out
sbb
jae
xchg
jns
pop
mov
fwait
push
es
fidivs
push
adc
pop
lcall
pop
dec
push
test
jne
int
cmp
dec
pop
js
insb
fsubs
ja
mov
lret
lret
fildll
sub
sahf
mov
pop
loope
inc
lahf
test
pop
addr16
mov
and
pusha
adc
sbb
xchg
push
ret
jl
ret
sbb
add
cmpsl
stos
insb
pop
inc
or
adc
push
push
inc
sbb
clc
and
xchg
cmpl
cltd
and
and
sbb
adc
mov
aad
dec
daa
call
mov
cmpsl
bound
xor
mov
sbb
adc
sub
ljmp
data16
adc
aad
loope
into
mov
mov
loop
cmpsl
lret
mov
fwait
cmp
add
xchg
movsl
pop
das
mov
aad
fcmovnu
cmpb
inc
lods
aas
pushf
and
loopne
inc
jns
cwtl
cmc
jo
mov
test
pushf
mov
pop
hlt
mov
arpl
scas
or
int
sub
orb
cmpb
adc
lahf
enter
in
xlat
sub
ja
mov
or
fildll
int3
mov
sahf
xlat
lcall
and
pop
and
sahf
jg
leave
pop
sbbl
sbb
cltd
mov
dec
sbb
vpminub
push
mov
jp
nop
je
push
push
ds
xor
dec
push
adc
pop
mov
sub
mov
xor
jo
cli
cmp
lds
sbb
xor
lret
mov
push
mov
push
sub
mov
jp
mov
inc
jae
pushf
push
cli
xchg
ret
xlat
push
pop
mov
out
flds
test
mov
out
pusha
lcall
clc
and
hlt
lret
scas
and
out
mov
push
xchg
adc
or
jne
inc
loopne
pop
sbb
push
repnz
sahf
icebp
es
rcrl
inc
adc
push
push
out
notb
out
jge
enter
dec
push
loope
xor
js
mov
mov
shrl
pop
fildl
adc
icebp
dec
leave
les
inc
xor
sahf
fs
sub
mov
sbb
mov
lret
or
scas
dec
jbe
jecxz
mov
inc
daa
cmp
fcmovu
inc
mov
inc
pop
adc
mov
mov
push
jle
fsubr
lds
daa
aas
jge
pop
pop
jle
pusha
inc
lahf
push
sbbb
add
jle
aam
cld
and
loopne
and
cltd
pop
sub
test
js
addr16
cmc
mov
rcr
jae
sbb
push
adc
and
xor
rol
loope
adcl
lods
pop
inc
xchg
jns
mov
jge
mov
xchg
rolb
dec
lods
xchg
or
add
int3
inc
fistpl
imul
ja
xor
xchg
rorb
dec
test
mov
pop
into
dec
lods
int
ret
inc
jl
outsb
mov
mov
push
pop
testb
fstl
sbb
sti
fsubr
mov
outsb
loopne
mov
or
jnp
pop
jmp
mov
xchg
js
inc
fwait
les
cmpsb
sub
mov
cwtl
pop
pusha
psubusb
push
mov
out
addb
sahf
lods
pop
scas
add
jmp
push
cwtl
mov
insb
in
stos
rclb
pop
in
rorl
sbb
aaa
mov
jns
lds
addb
aas
idivb
inc
or
and
sti
jge
xor
out
cmp
aas
mov
xchg
sub
mov
xchg
push
sti
push
fnstcw
add
xor
pop
adc
aas
lret
sti
sbb
or
outsl
mov
sbb
push
cmpsl
das
lret
adc
mov
mov
mov
push
cwtl
js
jg
les
jb
packsswb
out
jmp
ror
int3
sub
stc
hlt
jo
out
push
mov
and
in
fdivrs
pop
xchg
jo
pop
les
inc
push
gs
add
xchg
lea
lret
daa
stc
insb
cmp
into
xchg
dec
out
dec
adc
mov
mov
out
out
dec
inc
mov
inc
pop
xchg
jle
pop
leave
xchg
xchg
hlt
div
jecxz
adc
sahf
xchg
inc
jmp
and
mov
addr16
ret
movsl
mov
test
mov
push
add
je
cmp
fsub
jmp
and
call
adc
add
push
in
sub
dec
les
jne
mov
or
jl
pop
xchg
test
lret
add
mov
data16
mov
sbb
int3
pop
iret
cmpsl
and
cmc
cs
aaa
js
mov
mov
loopne
in
adc
int3
lcall
inc
xorb
aad
pusha
inc
jl
inc
mov
sarl
stos
std
cmp
cmp
jnp
in
or
cmpsl
sub
ret
dec
adc
jp
sti
xchg
fistl
add
xchg
xchg
xlat
dec
lds
mov
imul
pop
sbb
cmp
ja
test
inc
out
and
inc
mov
xor
loope
cmp
mov
in
bnd
jge
mov
fnstsw
aam
inc
mov
jb
aas
xor
mov
ja
cmp
pop
ja
add
outsb
orb
fisttps
pop
adc
xchg
in
test
sbb
fisubl
push
aaa
add
out
xor
insb
mov
sub
pop
into
xor
or
ss
push
and
cmpsl
enter
jmp
aam
out
mov
pop
fwait
cs
cltd
cs
mov
sbb
xorl
mov
imul
jae
xchg
mov
jo
stc
lret
je
sub
jo
xor
test
ret
lods
sbb
mov
adc
idivb
inc
fldl
popf
daa
dec
jbe
cld
xchg
cmp
movsl
je
mov
dec
add
lods
or
adc
aad
sub
mov
inc
aad
scas
mov
dec
or
sar
es
jge
test
in
jl
mov
aaa
insb
xchg
pop
roll
add
dec
sub
xchg
dec
sbb
lret
mov
sbb
lea
sub
or
xchg
push
mov
js
add
inc
lcall
cli
or
cmp
out
cli
xor
sub
mov
or
out
pop
mov
pop
adc
scas
and
imul
imull
jae
test
pop
pop
sbb
int3
mov
out
les
data16
rcr
mov
cmp
cltd
fstpl
adc
mov
cmp
sbb
out
jnp
fs
movsb
adc
push
dec
mov
fwait
adc
inc
push
sub
dec
sub
clc
mov
scas
mov
pop
lods
jae
ljmp
xor
push
das
dec
push
stc
or
mov
mov
pop
mov
ja
mov
mov
sub
inc
gs
cmp
call
and
rclb
insb
sbb
mov
outsb
loopne
shll
movb
jnp
pop
cmp
mov
mov
mov
pop
dec
int3
xor
sarb
mov
or
jmp
pop
push
lock
in
movsb
mov
into
adc
icebp
push
push
test
es
repnz
mov
mov
movsb
mov
flds
push
dec
xor
sbb
mov
insb
mov
stos
icebp
fildll
xchg
hlt
jg
cmp
cmp
hlt
or
jae
dec
bound
adc
jmp
pushf
xchg
push
js,pt
rolb
push
cmpsb
sbb
xor
sub
push
mov
mov
std
leave
icebp
and
loopne
movaps
fstl
pusha
stc
dec
push
fcmovnb
aam
icebp
mov
adc
stos
dec
shlb
cmpb
lock
jg
pusha
adc
rorb
adc
xchg
aas
push
xor
sub
decl
cs
xchg
daa
out
cld
testl
mov
inc
xor
std
mov
insl
cmpsb
fdivrs
mov
fdivrl
xor
pushf
push
je
push
ja
xchg
bound
add
sub
cmc
and
inc
rolb
or
inc
mov
jmp
fsubrl
lea
out
inc
aam
aam
xor
mov
sub
dec
pop
jle
mov
xor
dec
adc
leave
dec
jae
jp
lds
cmpsb
sub
xor
cmp
loopne
push
js
fwait
xor
mov
roll
push
push
ss
aad
mov
dec
add
pushf
scas
pusha
lret
mov
mov
mov
scas
xchg
push
dec
outsl
pop
or
loop
aaa
mov
mov
cmc
popa
xchg
les
mov
movsb
inc
aad
fwait
pop
jge
sub
cmp
mov
adc
cld
aas
sbbb
ljmp
aam
jmp
in
xchg
lahf
mov
outsb
cli
int
push
pop
data16
push
fsubrp
repz
shrl
sub
xchg
xchg
ret
sub
adc
xor
dec
jo
ljmp
dec
sbb
add
add
clc
data16
jg
movsl
cmp
rorb
xor
imul
cmp
xchg
sbb
add
or
imul
push
fwait
mov
aad
adc
cmp
jecxz
inc
out
sub
shlb
ds
push
push
xchg
adc
loopne
int3
je
ljmp
xor
testl
aam
cmc
dec
mov
nop
imul
mov
arpl
jecxz
hlt
rclb
rcrl
dec
push
or
les
sub
adc
cmp
shrb
inc
pop
jns
push
cwtl
sbb
and
mov
push
pop
rclb
out
xlat
dec
daa
std
push
dec
cmp
ds
lea
or
pop
mov
lods
fcomip
pop
mov
push
and
adc
adc
sub
mov
cs
and
lret
add
ds
aam
js
ja
aam
pop
ljmp
mov
mov
adc
rolb
mov
stos
outsl
sbb
lock
mov
hlt
push
movsl
push
inc
pop
packsswb
cmpsl
popa
out
push
lea
std
mov
mov
int3
sub
ss
cli
fwait
jno
test
fdiv
ja
mov
or
lea
movsb
add
pop
gs
cmp
jo
xchg
cmpsl
std
shrl
inc
lret
cli
stos
dec
jae
sub
dec
sub
out
leave
test
add
ret
stc
push
xchg
les
in
jp
xchg
xchg
dec
sbb
mov
test
mov
iret
mov
call
xchg
pop
nop
add
or
cli
dec
aad
bound
inc
jae
xor
stos
rorl
and
fdivrs
daa
jl
xchg
xchg
test
push
cmp
xchg
js
xor
inc
fucom
jp
std
mov
stc
jo
xchg
in
mov
ds
mov
paddq
sbb
nop
or
js
jno
in
insb
add
stos
aaa
pop
hlt
cmpsb
jl
mov
xlat
cwtl
mov
les
mov
sub
sarb
lret
jge
or
mov
inc
add
push
sbb
mov
pop
jmp
cmp
mov
insb
outsl
into
dec
xchg
xchg
arpl
shll
mov
cmp
or
gs
pop
and
lods
cmp
add
ljmp
push
or
movsb
jo
pop
ret
mov
test
mov
xchg
mov
in
rcll
push
fistl
mov
out
mov
xchg
or
cmp
shrb
sub
call
inc
jnp
pop
cmp
dec
push
jl
lahf
and
xchg
adc
mov
in
xor
out
out
test
rcll
jl
and
mov
pop
scas
data16
popl
cli
cmp
enter
mov
inc
fdivp
inc
jo
pop
gs
and
divb
mov
lahf
pop
and
sbb
movsb
shrb
inc
cmp
or
pop
pusha
mov
cld
add
mov
lods
ljmp
or
lods
insb
in
lcall
mov
ss
mov
dec
jnp
dec
std
call
dec
outsb
jle
lret
fistpl
cs
inc
ret
stos
and
insb
loopne
out
mov
fs
stc
insl
test
shlb
push
mov
test
mov
xor
adcl
fs
adc
sbb
enter
lret
cmp
call
mov
pop
mov
jge
mov
adc
aas
sarl
xorb
jl
fldenv
and
mov
cmc
cltd
in
adc
leave
mov
sub
les
or
std
dec
jg
xchg
pop
jb
hlt
fdiv
sbb
push
cmp
sbb
mov
movsb
push
and
lods
mov
outsl
and
and
stos
rcl
jbe
popf
mov
push
lcall
outsb
cmpl
addr16
lcall
dec
pop
push
mov
shr
movsb
sub
jae
dec
xchg
push
pop
xchg
xor
push
push
nop
mov
xchg
test
popa
push
cli
nop
jb
mov
out
shll
and
subl
jecxz
pop
mov
mov
iret
pop
dec
mov
mov
add
lods
mov
adc
test
bound
cmp
les
js
push
push
aas
xchg
push
jae
pop
outsl
adc
jbe
fnstcw
jmp
and
jp
enter
cmpsl
mov
daa
in
jbe
cmp
fdivs
mov
push
xchg
jo
push
sarb
cmp
dec
jae
jae
mov
dec
inc
fnsave
push
xor
pop
fistpl
mov
scas
ret
aas
cmp
jno
add
cs
push
jno
out
iret
jmp
jns
and
sub
gs
lcall
cmp
adc
popf
push
jb
clc
mov
js
cmp
insb
push
sub
pop
sbb
int
push
subl
xchg
push
sbb
adc
xor
out
ss
and
or
and
ds
mov
sarb
test
jb
loop
add
loope,pn
xor
pop
and
jp
push
mov
jbe
xchg
jl
imul
lds
pop
mov
add
pop
outsb
xor
inc
push
adc
hlt
or
imul
add
add
xchg
cmc
es
test
adc
repz
push
outsl
xor
adc
bound
mov
stos
in
imul
sub
das
in
sub
hlt
xchg
or
adc
push
pop
mov
rorb
aam
cld
push
adc
mov
push
push
pushf
xchg
imul
outsb
inc
shrb
xchg
cli
loope
pop
sbb
add
fcomps
insb
std
dec
pop
fcmovnbe
cld
test
dec
mov
push
daa
xor
and
lahf
hlt
cmp
xor
lret
push
lahf
jle
xchg
enter
repnz
popa
divb
mov
cmp
fnsetpm(287
xchg
xchg
cld
movsl
pushf
mov
lcall
jg
insb
hlt
clc
lods
lods
stos
xor
les
cld
dec
jecxz
inc
lock
fs
cmp
lods
fidivrs
dec
std
sub
mov
fstps
xor
jbe
stc
xchg
push
push
popf
mov
mov
clc
sub
ss
push
xor
fcoml
push
ja
pushf
das
mov
add
jne
sub
rdtsc
test
stos
mov
leave
jo
lret
out
or
ret
xchg
push
int
sub
shl
xchg
jle
imul
inc
data16
dec
sbb
mov
test
jne
sub
xlat
pop
xchg
push
xlat
sbbb
mov
lcall
lods
adc
pop
jne
sub
inc
or
pop
jbe,pn
mov
jb
sti
rclb
adc
insb
inc
std
das
mov
in
mov
dec
addr16
jno
push
out
cltd
push
or
add
aam
in
ja
sahf
popf
repz
sub
pop
iret
mov
insl
or
add
mov
mov
call
push
in
xchg
sub
pushf
imul
push
repz
aaa
xlat
jge
mov
loope
jge
add
in
jmp
sbb
ljmp
test
ret
dec
shl
jmp
jne
dec
jp
sti
jae
lret
jno
lea
jbe
cltd
aaa
push
pop
mov
movntq
add
aas
cmc
push
add
scas
sbb
sbb
je
sub
or
cmpb
lcall
mov
dec
lahf
je
lahf
insl
lock
out
ljmp
enter
jl
scas
mov
xor
rcl
aad
mov
cmpsl
aam
dec
repz
xlat
gs
int3
fidivrs
mov
pop
dec
cmp
sbb
add
jns
mov
rcrl
pop
pop
dec
call
or
lods
adc
daa
shrl
mov
je
push
mov
leave
mov
fs
mov
rorl
dec
pop
xor
ffreep
jl
mov
pop
pop
in
outsl
scas
jp
push
and
jecxz
xchg
hlt
outsb
idivb
jge
cmp
add
mov
xchg
push
xor
pushf
xchg
iret
dec
aad
cli
dec
xor
loope
pop
mov
mov
ret
push
pushf
loopne
addr16
in
sbb
arpl
daa
xchg
int3
inc
roll
cld
test
loope
xchg
jecxz
repnz
sub
fadds
jns
pop
iret
push
cmp
adc
popa
pop
cli
insl
imul
jbe
mov
test
mov
pop
sbb
test
sbb
cmp
add
mov
sbb
xchg
sub
mov
jp
inc
xor
jnp
xchg
in
dec
inc
push
pushf
divl
stos
mov
leave
fsubr
fisubs
sbbb
mov
nop
insl
sbb
je
add
cmp
pop
fcmovnu
xchg
ret
addr16
mov
or
cmp
pop
and
int3
in
pop
cmpl
dec
mov
pushf
imul
popf
ljmp
fadds
repz
mov
stos
lahf
frstor
inc
jno
pop
cmp
add
xor
test
sar
sub
sub
enter
packsswb
jl
mov
scas
mov
sub
jnp
mov
popf
add
sbb
mov
popa
shrl
lret
addr16
xchg
xor
popa
inc
cs
jl
dec
bound
xor
roll
ret
mov
ds
pusha
ja
cltd
or
scas
popf
popf
mov
insl
cmpsb
bound
cmp
xlat
ljmp
dec
insl
add
test
xlat
xor
jae
cmp
mov
sub
xor
mov
loopne
pushf
xchg
xor
nop
fists
lcall
pop
lods
jb
popa
cmp
in
lea
cmp
jp
addl
pop
mov
pop
in
stc
mov
cli
rcrl
insl
push
and
jnp
loope
jecxz
dec
cmpsl
gs
pop
adc
insb
daa
outsb
repnz
jecxz
bound
test
add
test
xlat
jne
scas
movlps
inc
enter
gs
test
cmpsl
mov
jno
lea
jno
js
jle
mov
clc
lds
lret
pop
pop
xchg
add
test
xchg
jmp
pop
mov
je
lock
mov
mov
cs
repnz
movsl
fisttpl
pop
hlt
mov
cmp
aas
pop
sbb
repnz
hlt
popa
cmpsl
addr16
push
popf
movsb
sub
pop
sub
dec
hlt
loopne
pop
cmpxchg
ret
shll
or
push
cmp
and
stc
pushf
push
imul
clc
dec
cmc
or
sub
sbb
or
pop
dec
mov
popa
outsb
jns
sti
fsub
adc
js
movsl
scas
mov
popf
sbb
add
xchg
xor
or
adc
sbbb
xchg
outsl
shlb
mov
lret
or
push
pop
dec
cmc
jecxz
mov
lret
mov
sub
or
into
in
push
dec
sub
cltd
stc
xor
leave
repz
mov
or
inc
xor
jb
xchg
cmpsl
jmp
mov
cmpsl
or
enter
xor
adc
ret
push
or
mov
or
xchg
mov
or
pop
or
adc
stos
movsb
jge
shlb
testb
repz
mov
stos
cltd
test
sub
mov
lcall
in
aas
lock
sarl
push
rcll
mov
mov
mull
jae
outsb
insb
lods
cld
or
outsb
push
push
jns
xchg
sbb
sbb
fmuls
insl
rclb
pop
jnp
daa
xchg
cld
jnp
bound
aaa
in
sbb
and
jae
bound
fstl
or
leave
sti
mov
lahf
mov
out
push
sub
js
xchg
out
push
cltd
dec
mov
leave
push
xchg
and
pop
ja
pop
dec
andb
es
sub
les
leave
insl
fisubs
adc
enter
loopne
out
sbb
sbb
ljmp
adc
lret
sbb
mov
mov
cltd
fwait
jle
lods
push
lcall
je
dec
int3
out
out
fwait
loopne
mov
cli
xlat
fwait
loopne
insb
mov
in
cmpsl
sbb
cmp
mov
cltd
ret
sub
stos
adc
mov
out
test
mov
xlat
mov
dec
pop
push
push
pop
sarl
jecxz
dec
repz
cld
aad
fidivl
lahf
sub
js
pop
iret
loopne
push
jecxz
xor
mov
and
cmp
jo
pop
fmulp
int3
jne
jp
sbb
lret
xor
repnz
rclb
out
fists
fstpt
in
inc
inc
add
adc
js
cli
ffree
leave
xchg
popa
push
xchg
adc
add
popa
in
je
mov
iret
scas
push
mov
fcoml
out
shl
push
inc
arpl
icebp
imul
mov
roll
cmp
xchg
cld
ret
or
nop
aaa
mov
loopne
fists
sbb
cmp
lock
imul
enter
loope
inc
lods
push
ja
nop
add
dec
cld
jb
dec
jne
pop
movsl
pushf
xor
mov
movsb
loop
pop
movsb
add
push
test
in
sbb
out
lock
add
mov
jg
jp
fcomps
jg
pop
hlt
or
push
fcom
lock
jo
mov
pop
testl
pop
scas
sarl
mov
push
popf
or
repnz
psraw
cmpsb
lcall
fiaddl
int
aaa
add
cld
lahf
mov
add
loop
add
xchg
andl
sarl
out
int3
jg
mov
pop
mov
xchg
mov
xchg
scas
in
add
stos
notl
sub
cld
push
sub
xchg
adc
jb
jns
ss
xchg
xor
sub
lret
mov
jb
mov
xchg
arpl
int
xchg
in
sub
stos
pop
adc
mov
dec
out
add
jne
inc
fcompl
mov
sub
cli
push
xchg
or
cmp
fldt
rcll
jae
or
cmp
addr16
jmp
repz
jae
inc
jmp
inc
lcall
mov
xor
add
in
es
and
inc
cmp
rolb
dec
and
aad
sbb
fld
mov
ja
sbb
jmp
idivl
stos
mov
inc
inc
mov
les
imul
stos
orl
sbbb
jae
push
jbe
ljmp
fs
and
dec
pusha
push
daa
addl
je
icebp
outsl
mov
pop
lret
or
jg
mov
jge
jg
fmuls
bound
push
adc
push
cmp
dec
dec
pmuludq
ljmp
mov
repnz
scas
dec
aad
sbb
add
pop
cmp
fstpt
jp
test
shlb
fwait
cmpsb
adc
shlb
mov
mov
outsb
hlt
lahf
inc
insb
add
in
jno
mull
rcrb
fildl
movsl
sbb
mov
aaa
sub
sbb
sbb
xchg
jle
mov
out
je
push
jmp
xchg
in
cmp
mov
popa
imul
mov
sahf
cmpsb
icebp
jle
mov
jg
cs
lods
test
dec
sub
ret
cmp
cmp
mov
jno
ss
adc
leave
shrb
sysenter
lret
out
aas
fs
push
sbb
jmp
test
mov
inc
lods
push
ljmp
mov
or
mov
push
insl
sub
pusha
sbb
cmc
ss
xor
int
imul
pop
jae
in
int
jl
dec
jp
push
into
and
sub
push
addr16
sub
mov
sbbl
sub
cld
and
sbb
notl
jmp
mov
addb
mov
outsb
sub
ficoms
dec
dec
ljmp
dec
sub
fidivrs
sbb
pcmpeqw
imul
pop
icebp
xor
dec
lea
sub
pop
cltd
jecxz
sub
adc
mov
xchg
cmc
cmp
dec
rcrl
adc
outsb
push
dec
rep
push
xor
xor
xchg
xor
outsl
je
test
int3
dec
stc
clc
mov
inc
push
add
repnz
and
pop
sub
mov
das
les
mov
in
adc
shrb
mov
loope
or
in
inc
dec
cmpsl
jecxz
insl
pop
loopne
pop
movsb
fists
push
jmp
adc
or
pop
push
daa
mov
movsb
xchg
aaa
sub
jle
popa
xchg
arpl
scas
pop
enter
inc
inc
and
repz
sbb
mov
pusha
ljmp
in
push
dec
insb
cmp
loope
dec
loop
clc
mov
mov
call
incl
fisubs
push
mov
adc
out
dec
mov
in
xlat
mov
sbbl
mov
insl
pop
jp
sub
jb
cld
cmp
or
test
sbbl
or
lds
xor
stos
add
iret
pop
dec
loopne
xorb
fnsave
adc
js
xchg
aam
mov
inc
mov
sub
dec
cld
stc
jle
cltd
sbb
push
icebp
fsubrs
ja
mov
jnp
add
or
mov
test
or
shll
call
cmpsl
adc
inc
xchg
pushf
enter
xchg
je
int
and
push
fnstsw
stc
ljmp
push
and
jmp
cmpsb
mov
jmp
fsubr
cli
inc
pop
jno
cmp
sbb
outsl
sub
stos
in
mov
lods
ret
pushf
fisttps
fistl
es
scas
xorb
mov
cmp
fidivs
add
or
push
pop
icebp
lahf
fnstenv
pop
mov
dec
ljmp
push
pushf
aaa
xor
inc
ss
fldz
aad
in
pop
inc
adc
mov
adc
shr
aaa
ss
mov
xchg
inc
bound
enter
popa
ret
adc
ror
enter
jg
daa
push
mov
iret
adc
sbb
aas
rcll
jno
cmpb
lret
movsl
pop
in
aam
jmp
adc
push
xor
jg
jmp
push
mov
pop
movsl
test
mov
mov
adc
adc
js
fldt
divl
stos
insl
in
sarl
dec
mov
inc
ficompl
std
xor
sbb
cmpsl
and
ret
in
leave
lea
adcb
push
cld
das
or
mov
xorb
mov
jo
lahf
insl
cs
inc
sub
je
pop
mov
dec
cli
or
mov
btc
cmp
and
mov
mov
fmulp
push
pop
dec
sbb
inc
cmc
mov
mov
sbb
arpl
imul
mov
fwait
push
cmp
out
mov
add
psraw
xchg
repz
jb
sub
sbb
mov
mov
mov
mov
push
std
dec
rsqrtps
repz
jle
push
dec
sbb
xchg
or
add
mov
imul
sub
pop
xchg
mov
cmp
cmp
pushf
mov
and
mov
inc
stc
test
insl
pusha
subl
cmp
leave
adc
cmpsb
cs
int3
sub
adc
mov
push
cmp
push
icebp
insb
xchg
repnz
push
jmp
inc
mov
jge
nopl
addl
fstp
dec
lds
loope
add
mov
movsl
push
xor
or
lods
jp
cs
mov
pop
das
jl
pop
jb
int3
test
inc
inc
xlat
push
xor
sbb
or
ret
and
sbb
imul
xchg
xchg
shll
fdivr
xor
idivb
scas
push
mov
vmovss
mov
push
jo
sbb
aad
rolb
push
jo
or
xchg
les
in
xchg
push
aad
xor
fldcw
mov
sbb
aam
std
and
shrl
cmpsl
nop
xor
xor
jae
jns
push
cmc
and
push
icebp
in
sahf
pop
and
lret
mov
movsl
jl
popf
fcompl
mov
xor
add
and
xchg
jbe
cli
sub
jl
push
sub
push
inc
mov
jp
stc
js
mov
addr16
in
mov
and
nop
inc
xchg
ret
ds
mov
ret
hlt
sub
rcrl
rclb
movsb
mov
push
loopne
int
sbb
sbb
cmp
mov
push
mov
cmc
testb
and
push
adc
inc
repz
xlat
mov
add
fdivs
adc
ja
es
xchg
std
fwait
rol
cmp
lahf
or
pop
push
lods
inc
xor
cmp
jl
or
sbb
outsb
insl
loope
sar
idivb
sarb
sarb
sub
dec
sahf
out
push
mov
in
push
test
sbb
lock
xchg
xchg
cltd
cmpsb
movsb
lods
movsl
mov
xchg
xor
push
lret
push
mov
enter
inc
sbb
iret
sti
dec
add
lods
xchg
stos
popf
xchg
sub
sub
adc
mov
icebp
icebp
add
cmpsb
mov
push
ss
jo
test
add
ljmp
inc
lahf
mov
add
test
push
repnz
push
out
cltd
addr16
mov
jno
sbb
in
mov
jo
or
jle
dec
lea
push
aas
lea
cmp
dec
adc
leave
push
jnp
push
movsl
jge
cmp
aaa
repz
mov
mov
insb
les
das
subl
outsl
or
cltd
sub
cmpsb
jbe
jbe
out
rorl
pcmpeqb
test
call
add
sub
pop
or
pop
or
inc
fcoms
stc
xlat
jnp
xchg
inc
add
movl
mov
daa
lods
int
or
enter
push
dec
cmp
or
mov
sbb
jle
inc
sbb
lret
sbb
add
pushf
lcall
mov
add
dec
dec
and
fcoms
jae
sbb
xchg
xchg
shll
mov
cmp
add
sub
fwait
sbb
shlb
xchg
xor
iret
sti
mov
jp
pop
hlt
pop
add
imul
das
imul
int
ret
rolb
cwtl
xchg
pop
dec
das
cltd
lsl
mov
mov
or
int
mov
loop
pop
sbb
inc
gs
mov
in
cmp
sbb
and
push
paddusb
cmp
mov
cs
push
mov
sar
leave
add
dec
fsubrl
lods
rcrl
imul
mov
dec
mov
jnp
fidivs
int3
mov
push
adc
inc
jle
icebp
ret
pop
fisubs
sub
movb
xor
jne
pop
adc
cmp
jnp
sbb
testl
push
mov
jae
scas
out
dec
sbb
dec
sub
jbe
stos
add
pushl
pop
cmpsl
mov
xor
rorl
add
jle
stc
xchg
cmp
and
shrb
fwait
scas
hlt
sbb
jb
jno
in
notb
test
test
and
adc
mov
xchg
dec
push
bound
rolb
outsb
lcall
jmp
pushl
subl
adc
or
and
aad
shl
shrb
mov
xlat
mov
bound
mov
ljmp
fcompl
sbb
xor
sar
fildl
mov
push
ficomps
push
pop
xor
pop
mov
repnz
lods
sarl
jmp
pop
lea
pop
imul
outsb
mov
cmc
insb
dec
sbb
dec
jg
xlat
sub
les
or
inc
jbe
inc
inc
out
push
cmpsb
pop
aad
jecxz
outsl
inc
xor
aad
inc
fdivr
xorb
pop
arpl
rorl
mov
cltd
in
in
inc
push
shl
lock
xlat
hlt
iret
push
xchg
xchg
or
orl
clc
sbb
jne
push
popa
dec
cmpsb
push
cmpb
mov
and
insl
add
adc
ret
aas
out
mov
out
out
push
xchg
pop
int
loope
fldl
cmp
xor
xor
scas
xchg
pop
aaa
mov
sbb
push
popf
aad
jne
cs
xor
dec
clc
ja
jl
adc
xor
mov
cmc
data16
imul
sub
and
lret
lret
ja
sbb
pop
out
test
inc
or
loopne
jnp
mov
jno
adc
sti
dec
jle
pop
or
and
cmp
sub
aaa
fnstsw
into
out
pop
adc
xchg
sbb
das
inc
adc
ja
dec
ds
hlt
dec
mov
subb
arpl
mov
mov
and
in
push
cmp
fwait
lahf
cs
jp
mov
gs
jo
clc
mov
jge
adc
mov
push
add
sbb
cmp
cmc
sub
mov
loope
mov
mov
fcompl
mov
mov
and
add
test
or
mov
and
pushf
mov
sbb
cmpsl
insb
dec
pop
repnz
imul
pushf
mov
mov
and
jecxz
push
pop
dec
icebp
adc
rcll
sarl
jge
test
outsl
push
into
pop
sbb
cmpsb
jle
inc
stc
dec
fcompl
repnz
xor
fxch
mov
inc
pop
xchg
xor
jne
jb
xchg
dec
cmp
pushf
push
xchg
jl
addr16
xor
decl
loope
in
jmp
jno
out
int3
lock
or
pop
nop
inc
outsb
fldenv
pop
adc
pop
push
lcall
in
test
mov
mov
mov
aad
pop
add
test
popa
out
sarb
sbb
bound
daa
imul
fwait
add
inc
out
cli
call
into
xor
mov
xchg
pop
mov
cli
xor
adc
mov
inc
divps
mov
arpl
aam
sahf
cld
aam
sbb
jo
inc
sbb
imul
lock
mov
cmp
test
xchg
cmp
pop
adc
dec
sti
cltd
push
dec
mov
lods
ficoml
movsl
sti
mov
ds
xchg
or
or
lea
in
sbb
test
mov
in
mov
push
or
int
xchg
ret
sti
lret
push
or
aaa
fsubrs
aad
mov
inc
push
push
mov
cmc
int3
cwtl
lds
in
mov
sti
dec
jl
setge
stos
and
movl
cmc
jp
mov
testb
mov
je
sbb
scas
adc
mov
lret
insl
lret
and
cmpsb
mov
or
lock
leave
dec
cmpsb
arpl
fdivrp
and
leave
ljmp
push
xor
dec
shll
insl
xor
jecxz
adc
ds
cmp
sbb
jl
cmp
sub
repz
adc
mov
outsb
loope
jne
add
adc
aas
xchg
inc
push
mov
xor
popf
mov
ret
fsubrs
xchg
push
push
ljmp
push
cmp
mov
dec
inc
testl
cmp
sub
cli
cmc
jl
icebp
fwait
add
jo
scas
dec
clc
enter
mov
and
repz
lcall
rclb
shr
jg
lock
loop
sbb
fcmovnbe
adc
out
fldz
lcall
xor
pop
adc
outsb
lahf
mov
dec
decb
xchg
fucom
sub
push
ret
jns
dec
lcall
fcomps
addr16
cmp
cmp
xor
movsb
xchg
mov
sub
xchg
lods
adc
cmp
fs
out
outsl
sub
inc
cli
inc
cmpsl
aad
mov
push
aaa
push
pop
xor
sub
nop
aam
mov
jns
and
inc
sub
fwait
push
push
sbb
sub
aad
xchg
lret
cmp
andb
xlat
daa
cmp
gs
in
cmp
imul
call
xor
mov
mov
lret
add
shlb
cmp
and
jmp
ds
lret
fmuls
lahf
cmp
mov
dec
scas
mull
test
push
arpl
mov
out
xchg
add
sarb
stos
test
in
sub
xor
jo
mov
mov
inc
push
pop
scas
inc
int
xchg
xor
jbe
pop
sub
mov
mov
mov
xchg
sub
dec
pop
or
jmp
jnp
cmp
shlb
fdiv
inc
push
cwtl
xchg
movsb
shll
xor
rorb
cwtl
stos
pop
lea
pusha
aam
xchg
stc
mov
pusha
faddl
loopne
jbe
and
aaa
test
test
into
sub
xchg
hlt
sahf
addr16
cmp
cs
clc
push
shll
outsb
loopne
and
daa
and
scas
dec
roll
pop
pop
push
insb
stos
and
sub
xchg
rorb
addr16
int
add
and
test
ret
mov
mov
jmp
dec
xor
out
sbb
arpl
fidivrl
aam
xor
nop
shll
jbe
pushl
sbb
insb
sbb
dec
and
ds
push
lods
xchg
pop
test
repz
rcrl
inc
and
adc
les
xchg
fisubs
cltd
repz
inc
sub
or
jne
xchg
jne
jo
or
add
pop
adc
imul
in
icebp
xor
add
push
pop
cmp
jne
les
add
out
loopne
adc
out
sbb
sti
je
jns
incl
inc
imul
test
pop
inc
arpl
cmp
xchg
test
inc
xchg
addb
xor
lsl
pop
sub
notl
insl
jg
xchg
arpl
mov
in
jb
sub
cs
out
mov
mov
and
or
ds
jmp
jo
repnz
or
sbb
outsl
jae
lret
das
jbe
imul
repz
mov
enter
cld
sbb
xchg
cmp
dec
sub
mov
lods
nop
in
add
pop
mov
ljmp
into
adc
pop
lret
je
push
aas
and
dec
cli
push
cmp
or
pop
xchg
jb
xchg
mov
ja
adc
scas
xchg
adc
jge
xchg
js
shr
sbb
push
leave
lahf
scas
cmp
inc
fs
sub
or
icebp
stos
lcall
std
rolb
int3
cmp
aad
inc
leave
std
sti
cmpsb
mov
data16
push
adc
test
mov
adc
dec
jns
jmp
inc
xchg
clc
pop
out
jbe
shlb
test
movsl
fildl
test
scas
sar
dec
fnstcw
push
xchg
aam
adc
repz
mov
test
and
cmc
dec
les
fsub
lahf
push
push
shl
repz
and
subl
xor
mov
jb
lock
imul
sbbb
fldenv
daa
ss
insb
and
inc
scas
pusha
push
les
mov
add
call
and
stos
lods
jbe
lods
mov
adcb
or
hlt
jmp
lret
lret
push
in
sar
lods
cmp
ds
lds
xchg
mov
mov
xor
scas
sub
fcmovbe
jae
out
push
les
mov
aaa
cwtl
xchg
jno
scas
fcoms
mov
shll
fisttps
mov
sub
lret
mov
push
pop
cld
test
icebp
out
loope
mov
pop
aad
add
mov
stos
and
bound
adc
sahf
mov
push
push
dec
fsubl
push
repnz
test
pop
cmp
sbb
out
sar
mov
xlat
xor
xor
mov
dec
ret
daa
mov
lods
push
bound
cmp
adcl
movsb
dec
mov
mov
test
rcrl
mov
jns
shll
cld
ja
and
mov
loopne
call
mov
cmpsl
xorl
add
stos
sbb
out
addr16
std
adc
mov
jg
addr16
mov
mov
je
js
jp
cmp
xor
dec
jl
mov
adc
xor
pop
sbb
das
push
push
stc
xor
or
fdivrl
mov
icebp
loopne
sub
jl
mov
cld
adcl
in
cmp
hlt
dec
pop
mov
std
ficoms
dec
movsb
into
pop
jmp
xchg
pop
pop
popa
mov
add
jns
adc
lock
or
outsl
pop
sbb
mov
pusha
loope
mov
bound
mov
lea
sub
stos
sub
or
push
jmp
movsb
cmp
scas
shll
mov
sbb
mov
inc
outsl
mov
push
pop
push
dec
cld
faddl
jle
jae
out
cmp
sub
adc
imul
clc
std
es
std
xor
iret
push
test
push
pop
pop
jae
mov
sbb
stc
es
mov
push
mov
inc
pop
mov
lods
scas
sbb
fwait
mov
jg
cld
and
movsl
add
xchg
pop
iret
movnti
push
out
mov
daa
sbb
je
inc
pop
xor
lods
jo
mov
cld
and
sbb
iret
enter
roll
dec
pop
cmp
mov
cmp
ljmp
cmp
icebp
call
lods
aas
or
hlt
fdiv
les
bound
inc
fmull
dec
push
jns
mov
ficoml
dec
gs
ja
idiv
jb
add
mov
dec
sub
rcll
icebp
stos
jmp
clc
and
iret
int
inc
pop
adc
lcall
push
inc
stos
sti
pushf
jmp
je
out
shlb
lret
es
mov
push
mov
sar
jp
into
icebp
test
ss
add
pop
mov
pusha
loop
or
out
push
xchg
popf
cs
lret
addr16
popa
shlb
sub
pop
jne
ljmp
mov
jecxz
rcrl
dec
mov
rclb
mov
or
and
outsl
pop
and
mov
lods
sbb
sbb
jnp
adc
xor
xlat
in
std
ret
and
cwtl
dec
sahf
xor
xor
xchg
mov
push
and
cwtl
fcmovu
leave
xlat
or
jb
mov
xor
push
mov
subb
add
jb
dec
mov
fdivrl
daa
aas
out
outsl
rclb
pcmpgtw
mov
cld
mov
dec
jmp
pop
lods
dec
sub
and
rorb
and
cmpsb
fmuls
bound
or
inc
adc
ficoms
fsubp
mov
xchg
dec
mov
addr16
stos
sbb
outsl
int
mov
in
dec
mov
aam
mov
mov
push
push
scas
inc
clc
les
insb
xchg
pop
loope
jb
filds
xor
cs
mov
fcom
dec
movsb
mov
imul
imul
test
mul
dec
mov
sbb
fcmovne
clc
aas
sbb
rorb
nop
aad
sysexit
inc
pop
xchg
xchg
in
and
enter
or
dec
pop
xlat
imul
aam
mov
xor
sub
or
fmull
mov
ret
pop
fdivs
stos
add
cltd
add
dec
mov
and
push
cs
fldenv
dec
in
divl
adc
dec
mov
mov
sub
imul
mov
dec
xchg
push
jge
call
sti
leave
popf
pop
dec
jge
adc
mov
clc
ret
sbbb
lcall
and
xor
cmp
jae
push
mov
and
add
jns
mov
je
add
aaa
pop
fstpt
shl
dec
dec
add
jo
adc
addl
mov
roll
and
cmp
out
cltd
test
imul
repz
adc
mov
push
ds
pusha
xchg
add
or
pop
sub
add
daa
cmp
lret
or
mov
push
cmp
ficomps
jae
je
movsb
das
mov
mov
ret
sub
popa
jp
mov
ja
aas
xchg
fs
fistl
push
sub
aas
lock
loope
outsl
jnp
fsubs
dec
push
inc
shl
or
cmp
cmp
push
gs
inc
pop
push
xchg
xor
push
xor
jge
mov
cs
xchg
sbb
sub
dec
pop
lret
push
mul
rclb
sbbl
testl
jmp
cli
rolb
fisubrs
cwtl
inc
inc
lcall
dec
andb
cmp
jb
pop
enter
and
pop
loope
arpl
adc
add
inc
mov
arpl
mov
or
fildl
push
filds
insl
push
cmpsb
pushf
mov
in
cmp
adc
and
push
cmp
repz
inc
repz
lahf
imul
push
daa
push
and
or
adc
jnp
cmpsb
ss
lock
adcb
fadd
dec
in
or
inc
sbb
lahf
push
mov
or
adc
adc
pushf
loope
mov
inc
mov
cmp
xchg
or
pop
pop
adc
mov
xor
sbb
sub
inc
das
ret
imul
jbe
dec
ficoms
dec
cmp
jmp
push
xchg
in
sahf
jp
pop
ret
jle
ds
mov
adc
test
mov
push
ret
arpl
test
adc
sub
jle
xlat
cmp
mov
mov
mov
inc
pushf
out
sahf
out
das
nop
sbb
mov
mov
xchg
and
test
jbe
je
les
and
and
add
xchg
enter
xchg
add
and
fcompl
shrb
out
aaa
enter
xor
fwait
sub
sti
shll
rorb
push
movsb
fsts
adc
or
cmp
mov
adc
adc
dec
nop
xor
psubsw
xlat
pop
pop
pop
pop
stos
out
or
scas
stc
cs
loope
sbb
addb
jns
sub
push
pusha
pop
xchg
xor
add
fimull
lds
and
add
sub
cli
adc
mov
and
push
xchg
rcll
xchg
repz
mov
mov
enter
aas
jne
dec
lock
pop
scas
enter
mov
fisubl
lock
aas
sbb
push
pop
aaa
add
push
inc
xchg
out
ret
pop
mov
xchg
cmc
ret
mov
das
push
sbb
lds
fistl
jae
push
insl
dec
lea
test
add
in
mov
xchg
push
cltd
xorb
es
in
lahf
int3
jl
mov
aam
inc
setp
loopne
sub
xchg
mov
es
xchg
ljmp
out
xor
in
pop
imul
xchg
lea
inc
adc
lock
outsl
mov
xchg
cmpsb
mov
mov
cmp
sbb
dec
or
lahf
fwait
cmp
push
add
imull
dec
inc
je
mov
movsl
lea
dec
mov
adc
imulb
pop
pushf
imul
adc
xchg
imul
lds
mov
fadds
cmp
fstps
and
sub
hlt
cmp
jno
jmp
xor
test
mov
ret
pop
xchg
jmp
movsb
in
mov
pop
push
sub
cmp
mov
dec
mov
outsl
aaa
mov
jmp
mov
mov
sub
pop
cmp
inc
push
in
jns
and
sbb
mov
push
adc
inc
mulb
stc
xlat
fistpll
cmpsl
mov
lahf
clc
and
jbe
xchg
inc
stos
arpl
pushf
sti
and
stc
popa
and
stos
adc
xor
and
or
mov
cmpb
and
leave
add
shlb
std
mov
inc
clc
jo
or
idivl
test
clc
imul
or
adc
ja
pop
lahf
ja
add
daa
movl
inc
jecxz
push
cwtl
popa
aad
xor
jbe
dec
out
mov
xchg
push
sbb
xor
and
add
pop
frstor
dec
sbb
dec
add
ja
push
xchg
ret
leave
and
scas
cs
addb
into
lret
stos
mov
add
pop
in
aaa
adc
subb
insb
mov
sub
arpl
test
in
mov
dec
cmp
cmp
pusha
cmp
aaa
test
ljmp
adc
sub
aad
add
fildl
add
outsl
jmp
adc
sub
pop
popf
in
mov
je
inc
dec
mov
adc
push
push
cmp
negb
push
push
and
push
dec
in
jo
es
dec
mov
sub
insw
and
xlat
dec
lock
mov
xchg
mov
jne
js
out
outsl
push
mov
pop
fcmovne
inc
cmovae
imul
add
jnp
mov
dec
or
je,pt
push
sahf
dec
stos
fsubs
movsl
push
dec
fst
pop
inc
ret
scas
lret
add
add
mov
outsl
mov
lock
inc
cmp
mov
lods
test
repnz
pop
shrb
arpl
mov
shlb
rol
mov
int3
mov
fdivs
mov
or
insl
mov
js
fldlg2
or
mov
mov
clc
lret
int3
xor
lea
das
or
jnp
sbbb
sub
out
lea
cwtl
lds
nop
loope
sti
icebp
cmpb
push
jmp
sub
gs
xor
orl
nop
test
inc
cmc
inc
sub
mov
fisttpl
fsubl
daa
cmpsl
or
enter
and
cld
scas
mov
push
sbb
pop
xchg
in
inc
pop
inc
ret
xor
or
aaa
mov
jae
lock
mov
cmpb
inc
mov
lcall
testb
add
in
and
scas
push
imul
ljmp
adc
or
lods
test
insl
js
push
aas
inc
pushf
fwait
fs
mov
xor
xor
aad
mov
mov
mov
jle
fsubrs
iret
xor
lods
ljmp
stc
mov
mull
insl
bound
test
fldenv
sarb
xchg
movsb
push
cld
add
stc
sub
ljmp
mov
insl
add
inc
rolb
rcr
sbb
xor
sbb
leave
or
call
jp
inc
mov
insb
repz
push
int3
popa
or
push
test
sbb
and
xor
sub
insb
aam
push
mov
mov
mov
adc
bswap
pop
lods
rcl
imulb
dec
xchg
mov
rcrl
test
js
outsb
pop
fs
movsl
and
daa
pop
add
addr16
pushf
jb
leave
fistps
adc
pop
int
add
test
lahf
insb
lret
aas
test
pusha
out
jl
out
mov
fcoml
push
or
sahf
cmp
mov
pop
cmp
sbb
fcomi
and
bt
mov
in
std
testb
das
mov
mov
scas
mov
call
testb
cltd
cmp
pop
or
jns
pushf
push
incl
jl
dec
inc
into
test
fstpl
xlat
dec
stos
push
lds
push
dec
loop
pop
sub
mov
iret
cmpsl
neg
xor
cmp
fcoms
fbstp
std
xchg
fstpl
daa
xor
mov
jmp
int3
imul
loope
and
lahf
imul
mov
mov
push
inc
leave
fs
stos
push
xchg
idivl
xchg
pop
push
cli
in
in
roll
jmp
fisubrl
or
ds
or
and
xchg
xor
add
jns
lret
je
out
je
mov
ljmp
adc
pusha
dec
ljmp
mov
aaa
fcomi
mov
or
jge
jp
adc
push
mov
fnstcw
sbb
ljmp
mov
sub
adc
js
cmp
loopne
jae
test
sub
lds
inc
in
mov
bound
scas
ljmp
add
cmpsl
fwait
sbb
jp
inc
ds
rcll
adc
pop
addr16
mov
fdivp
mov
stos
aad
int3
sbb
and
xchg
sbbl
or
or
sbb
adcb
dec
incb
adc
inc
repz
out
jne
iret
pop
insb
xchg
bound
lret
jbe
bswap
xchg
dec
push
fidivl
mov
sarl
adc
mov
push
dec
arpl
insl
cltd
sub
fnstcw
pop
insb
jno
push
js
cmpl
xorb
popf
push
jge
sti
bound
jo
or
or
add
repz
or
enter
or
xor
test
xchg
orb
sbb
iret
mov
sbb
mov
mov
jb
mov
adc
and
daa
mov
je
cwtl
jmp
xchg
sbbb
rorl
ret
int3
and
incb
mov
jle
add
xchg
and
or
adc
add
lret
and
imul
pusha
cld
inc
mov
xlat
jo
jb
imul
xchg
testb
add
neg
insl
push
or
add
mov
mov
andl
lret
jns
xchg
lret
jl
mov
shrl
lods
sub
cmp
adc
push
lahf
loope
push
mov
std
or
je
push
xor
jg
inc
insl
lds
enter
stc
pop
sub
or
inc
pop
call
xor
call
arpl
sub
pop
adc
in
leave
adc
loop
push
sub
push
cmp
mov
xchg
iret
mov
pop
mov
imul
into
mov
in
push
mov
cmp
push
out
ficoms
imul
jnp
push
call
mov
xchg
mov
pop
cmpsl
adcb
test
mov
dec
sub
aam
cmc
mov
jmp
js
aam
mov
fwait
shlb
jl
pop
unpckhps
inc
and
push
or
out
sub
ss
rorl
pop
loopne
dec
call
xor
addr16
sub
lahf
dec
repnz
in
push
iret
xchg
push
mov
sub
ja
lock
pop
or
icebp
sub
shlb
push
je
sbb
mov
xchg
cs
out
enter
popa
pop
sub
or
orl
and
call
add
cmpsl
sub
jns
mov
xchg
or
shlb
fbld
cs
imul
cmp
lods
mov
clc
out
rcr
push
and
push
push
pop
sti
call
sub
add
flds
jbe
lcall
in
dec
dec
dec
scas
lahf
pop
or
mov
test
cld
pop
das
xchg
sbb
iret
lahf
je
jle
insl
shrl
hlt
lods
test
clc
push
push
scas
arpl
aas
ret
out
xchg
test
jo
mov
test
fisttps
xchg
pop
xchg
jl
or
mov
jo
dec
jmp
mov
stos
gs
cmp
call
ja
sti
adc
lock
jp
or
add
movsl
out
iret
jno
int
lock
xchg
ja
roll
mov
aad
sub
outsl
in
mov
xchg
aam
cmp
stc
adc
in
clc
xlat
or
mov
push
in
scas
xorl
add
push
cmpsl
incb
repz
mov
xchg
cwtl
jns
aad
pop
cmpl
sub
jle
std
xchg
aad
leave
sub
mov
adc
fsubr
sbb
jne
mov
cltd
and
lea
ja
in
icebp
in
inc
pusha
dec
dec
subb
sarb
sbb
rolb
push
push
arpl
sub
cmp
mov
rcr
xchg
test
add
and
jb
pushf
mov
movsb
sub
stos
and
out
scas
mov
test
sahf
dec
add
xchg
ja
and
rcll
xchg
pop
cli
mov
adc
push
add
lds
icebp
jecxz
imul
sbb
jecxz
stos
add
movsb
jnp
into
xorb
adc
rdpmc
ljmp
gs
shlb
and
scas
in
pusha
aas
push
aas
xor
sbb
pushf
in
push
pop
bound
xchg
lock
in
pop
lods
or
add
testb
dec
ja
cli
rclb
mov
dec
mov
enter
adc
out
fdivs
imul
in
xchg
inc
jne
movsb
jbe
fildl
out
fs
jmp
mov
pop
jp
inc
pop
rcrb
ds
stc
repz
mov
scas
adc
aaa
mov
add
rol
ret
pop
cli
aam
pop
nop
decb
jo
xchg
cmpsl
mov
mov
int
push
inc
lods
into
movsl
data16
sub
mov
jg
outsb
add
jl
jp
arpl
cwtl
xchg
jle
shl
es
nop
and
xor
cmp
negb
ds
sbb
or
repnz
mov
mov
icebp
aaa
leave
or
rcll
cmp
sbb
xchg
orb
push
sti
add
mov
pop
inc
outsb
cmpsb
imul
inc
push
and
jg
adcl
inc
and
inc
pop
lret
imul
jg
loopne
insl
and
bound
jne
int
cli
sub
sbb
stos
xchg
adc
push
adc
pop
rorb
fsts
mov
repz
sete
cmp
fs
sbb
cmp
sti
add
test
adc
mov
jno
scas
adc
or
das
ja
add
inc
lods
repz
idivb
xor
push
sti
rorb
xchg
xchg
push
cs
sbb
out
jmp
add
cmp
in
push
mov
sbb
mov
dec
mov
test
sbb
imul
imul
popf
dec
xchg
push
mov
push
js
mov
fwait
dec
xorb
enter
and
ss
mov
popf
push
mov
mov
data16
loop
outsl
ret
mov
jne
clc
stc
punpckldq
xor
roll
pop
push
jp
push
xor
jp
das
sbb
push
aaa
dec
fildl
mov
leave
es
push
leave
adc
mov
stc
sbb
inc
mov
shl
je
addr16
xor
sub
std
dec
lahf
fdivl
pop
mov
inc
mov
fadds
insl
loope
jno
jns
mov
imul
dec
sarl
cmp
cmp
dec
sbb
jno
stos
iret
add
push
fbstp
mov
pusha
xchg
repnz
push
lea
rorb
pop
mov
mov
mov
or
mov
popf
addr16
mov
popa
sub
or
hlt
dec
and
pushf
xor
xchg
add
popa
push
push
insb
pop
pushf
aam
clc
and
cmp
push
sbb
sub
rsqrtps
xchg
test
inc
lods
push
pop
jne
lods
pop
push
rorb
dec
pop
fcompl
rcrl
fimull
cmpsl
push
push
sub
jnp
cmp
mov
jno
jb
popa
dec
pop
mov
mov
xchg
hlt
sub
mov
lds
mov
cwtl
inc
fbld
test
mov
jbe
mov
add
mov
jmp
jge
mov
loope
cmp
cmp
fisubrl
lcall
dec
jp
cld
xchg
sar
scas
and
je
lea
clc
sbb
js
jmp
fs
mov
cltd
sti
jne
jb
inc
outsb
in
fisttpll
test
dec
imul
lret
mov
lcall
add
mov
jnp
adc
loopne
push
aam
xchg
pop
lea
sbb
shll
adc
fimull
mov
gs
mov
dec
add
jl
imul
xchg
adc
jg
xchg
sti
adc
sbb
inc
and
jl
jo
and
inc
cs
jge
les
leave
je
fdivl
or
out
out
fldt
pop
sub
fs
lds
mov
xchg
repz
arpl
leave
xchg
subb
lret
lea
lods
fsubs
xlat
js
shlb
bnd
push
nop
xor
test
push
mov
imul
jp
sahf
pop
push
mov
mov
sar
dec
test
out
and
pop
xchg
jns
mov
iret
div
mov
hlt
sub
mov
lcall
daa
ret
mov
jae
leave
add
jb
lcall
jb
mov
sbb
in
stc
das
cmc
mov
in
or
scas
cmpsb
mov
or
adcl
dec
cmp
dec
ds
test
sbb
lds
sub
sbb
adcl
lahf
cltd
push
mov
insb
jae
decl
xor
aam
xchg
in
int3
fstpt
pop
dec
xlat
and
iret
mov
cmpsl
rorb
fwait
sbb
push
jecxz
and
mov
rcll
push
dec
pusha
sbb
jmp
into
mov
sub
cld
or
out
xchg
hlt
or
dec
or
inc
mov
movsb
and
mov
stc
pusha
dec
jno
adc
add
ljmp
repz
bound
mov
xchg
jo
daa
jo
cmp
data16
add
xor
xchg
mov
cmc
test
pop
inc
adc
inc
dec
dec
rorb
xlat
or
es
rorb
dec
ret
add
jl
ret
call
test
sahf
out
push
adc
sbb
mov
cmpsb
lret
cmp
mov
add
mov
xlat
hlt
xchg
dec
cwtl
mul
insl
fistpl
mov
andb
arpl
popf
imul
and
insb
lods
xor
mov
xchg
das
lret
dec
push
xchg
pop
xchg
add
push
xchg
aam
aas
add
les
inc
lea
dec
jmp
addr16
das
jge
shll
cmc
test
cld
mov
gs
sbb
or
sub
adc
dec
jnp
jo
cmp
pop
mov
jne
mov
pop
jns
jb
and
pop
scas
pop
mov
and
cmp
mov
cmc
cwtl
daa
pop
mov
pop
push
dec
jno
add
xchg
out
out
cwtl
data16
mov
rol
or
enter
or
notb
rcrl
mov
fldcw
mov
push
inc
inc
fnsetpm(287
add
add
push
sub
lods
aas
mov
xor
insb
jl
mov
pop
push
shrb
inc
mov
mov
mov
or
lds
sbb
outsl
fsubr
insl
inc
in
lock
cmc
sub
push
adc
or
ja
xchg
clc
iret
ss
mov
fdiv
aad
out
in
jb
fdivrs
fs
sarb
xorb
loop
xchg
lahf
mov
nop
cmpsb
aas
in
push
cmpsl
outsb
cmc
xor
stc
sbb
push
lds
xor
call
xchg
in
imul
jb
mov
xor
cmp
or
pop
mov
pop
sbb
rol
jnp
push
sub
mov
xor
in
mov
push
mov
push
ss
pop
icebp
push
inc
pop
aas
mov
hlt
jp
dec
or
xchg
cmp
fisubs
decl
cmp
mov
repnz
inc
xor
pop
inc
mov
test
jo
test
xor
pop
pop
mov
add
push
daa
sub
and
add
jmp
add
dec
inc
addb
inc
mov
enter
adc
push
sbb
push
add
jno
sub
and
stos
das
fildl
outsb
bound
sub
and
test
and
mov
push
push
ret
jp
pop
test
sbb
ret
pop
push
or
shlb
pop
test
andl
pop
mov
pop
inc
push
xchg
cld
nop
mov
cwtl
push
mov
nop
cs
add
mov
lods
jmp
add
mov
mov
cld
sbb
in
rorl
popa
push
into
push
xchg
add
in
pop
and
test
adc
jl
sub
call
psrld
push
xchg
std
fsubrl
fcmovu
les
pop
cmpsb
add
adc
inc
dec
inc
stos
lods
jns
adc
push
push
dec
push
jno
data16
aaa
les
inc
dec
push
aaa
loope
jbe
mov
mov
or
ja
icebp
cmc
cmpsb
aas
push
data16
push
cmp
inc
aas
add
lret
lret
inc
push
mov
popf
lods
lds
fiadds
sbb
cmp
add
jle
xor
mov
xchg
call
push
mov
push
call
push
sahf
ret
add
loop
push
rolb
jne
lcall
pop
in
xor
inc
jno
arpl
add
outsb
enter
sbb
lret
repnz
jns
mov
cs
cmp
jl
xchg
xchg
mov
lock
in
outsl
sub
fbld
out
lea
sbb
pop
jbe
je
fs
mov
xor
mov
adc
mov
push
sbb
jb
jl
aad
les
out
or
inc
imul
inc
xchg
aaa
add
jae
stc
xchg
mulb
pop
sbb
cs
fsubrl
xchg
mov
iret
push
das
test
mov
or
les
leave
inc
xchg
sub
lcall
outsb
xchg
mov
pop
push
sbb
mov
sub
leave
jp
pushf
inc
add
not
adcl
aas
jge
mov
or
xor
xor
in
inc
in
lret
outsl
push
dec
mov
or
add
pop
and
mov
call
out
lods
jg,pt
pop
hlt
loopne
das
sub
out
cs
in
and
inc
push
xchg
or
push
clc
add
rclb
add
das
xor
jmp
mov
push
arpl
cmc
std
cltd
lds
push
jbe
sbb
dec
js
movsl
jae
rcrb
pop
add
insl
xor
nop
bound
cwtl
shll
sahf
xchg
mov
mov
stos
mov
jmp
ficoml
fwait
cmp
cmp
lea
adc
js
inc
nop
pop
jmp
hlt
jge
outsb
xor
addb
cmp
jecxz
and
fs
imul
lock
repz
popa
mov
adc
mov
leave
arpl
lret
jb
cmc
dec
or
jo
dec
pop
adc
dec
mov
ja
cs
cmp
and
daa
sub
daa
shlb
dec
add
push
dec
hlt
nop
push
je
and
rcrl
cmp
nop
lcall
shr
in
in
lcall
fstpl
jns
or
cwtl
test
xchg
add
mov
dec
or
orl
xlat
punpckhdq
repnz
or
dec
mov
fsts
mov
jmp
outsl
incb
fs
sbb
mov
iret
fucom
fisubrl
aam
sbb
fcmovbe
xchg
jp
das
pusha
fidivl
cmpsb
sti
jmp
jmp
and
dec
out
cltd
movsl
and
shlb
cwtl
push
jns
xlat
ljmp
aaa
fpatan
jb
mov
call
test
mov
xor
ljmp
mov
mov
mov
add
or
mov
or
mov
dec
aaa
jnp
out
jb
inc
or
inc
sub
ret
outsb
mov
daa
xchg
add
hlt
add
mov
inc
insb
aaa
mov
xchg
jno
rcrb
cmp
xchg
mov
cmp
shl
fcomps
std
cmc
sbb
sti
sti
out
jl
in
mov
dec
pop
mov
sbb
or
cltd
js
sti
mov
dec
cmp
sbb
insb
fsincos
xor
push
sahf
mov
xchg
cmpl
and
xor
push
shrb
jp
fbld
adc
or
lcall
sbb
mov
sub
out
insb
bound
xchg
or
sbb
leave
leave
in
jg
xchg
das
das
or
lods
lret
sbb
mov
cmp
sub
cwtl
adc
mov
inc
inc
popa
loopne
lds
mov
iret
loop
mov
nop
rorb
cmp
fldt
lcall
xor
js
adc
jge
aas
mov
int
dec
xchg
pop
arpl
cli
call
imul
out
bound
ss
xor
outsl
push
addb
clc
inc
mov
in
cmp
xchg
shlb
icebp
mov
scas
push
mov
mov
pop
mov
movsb
aaa
hlt
int
xorl
lcall
mov
icebp
je
int
push
and
les
xor
test
mov
or
inc
jo
int
mov
jecxz
and
sbb
xorb
fucomip
lret
or
out
xor
sbb
mov
addb
pop
fstl
push
mov
sti
mov
xchg
lahf
mov
lock
cs
lock
dec
mov
imul
mov
addr16
mov
cld
push
mov
dec
fwait
jnp
shrb
test
xchg
and
test
out
pusha
jno
dec
jns
xchg
hlt
cmpsb
int
mov
mov
dec
into
sbb
inc
leave
pop
xabort
addb
shrb
or
jne
outsl
shl
sub
mov
iret
mov
mov
sub
push
push
das
mov
mov
mov
pop
or
mov
sub
scas
inc
test
mov
add
loope
cmp
das
ret
jg
xchg
and
dec
sub
adc
pop
scas
repnz
subl
or
dec
push
sti
and
inc
add
shrl
cmpsl
mov
jae
orl
dec
inc
mov
and
mov
nop
scas
repz
pop
add
or
or
int
adc
pop
mov
pop
add
push
cmpsl
negl
daa
stos
arpl
notl
int3
iret
inc
jg
daa
jmp
arpl
pop
inc
out
push
push
fidivs
scas
stos
push
in
std
adc
inc
in
fs
dec
sbb
imul
stc
add
jnp
jae
stos
fmuls
fdiv
lds
or
xchg
cmpsl
push
xor
test
pop
fiaddl
inc
jle
movsb
jge
cmp
xchg
inc
pusha
cmp
stos
jge
mov
mov
cld
mov
pop
icebp
insb
sbb
mov
in
add
jns
in
aad
sbb
pop
mov
call
add
or
cmp
pop
ret
jmp
mov
cmp
in
push
push
test
push
lret
or
xchg
andl
push
add
xchg
lret
es
push
push
gs
lods
jmp
push
in
or
lods
das
add
hlt
jb
aam
insl
pop
js
stc
fisubrs
mov
push
cmp
xorb
add
cli
inc
sub
cvtpi2ps
ficoml
test
xchg
aam
dec
cmp
neg
cmc
or
lret
mov
std
cmpl
addr16
xchg
and
mov
xchg
push
inc
enter
rorb
adc
push
jmp
cmp
fwait
jl
lret
aad
sahf
cmp
and
sub
adc
jns
adc
insb
mov
sbb
dec
pop
cmp
mov
push
aas
jmp
test
xor
jmp
aas
adc
leave
inc
stos
push
dec
sub
mov
fisttpl
insl
mov
test
adc
sar
mov
out
mov
ret
cmp
dec
adcl
mov
cmp
out
dec
leave
jl
jl
es
test
jnp
rol
ret
outsb
int3
xchg
outsl
sbb
dec
scas
loopne
lods
inc
cs
add
stos
in
cmpsl
xor
sbb
fdivr
cmp
sbb
scas
and
sub
rclb
popa
outsb
push
fisubs
xor
rorb
mov
incl
mov
lcall
mov
icebp
inc
xchg
fisttpl
mov
ret
rol
sub
outsl
scas
ret
mov
push
mov
popa
rcl
lds
out
loopne
jecxz
jmp
push
mov
rcrl
ss
sbb
add
mov
sbb
aas
fcmovnu
push
je
mov
xchg
ud1
scas
xchg
nop
ja
mov
sbb
je
test
test
ret
jle
test
mov
in
fwait
je
sub
scas
stos
xchg
lods
mov
stos
pop
aad
ds
push
sbb
xchg
sti
inc
or
fcmove
add
rorl
lcall
outsl
mov
pushf
xor
fldt
adc
adc
out
cwtl
shll
icebp
xlat
mov
xchg
xor
inc
aam
shll
sbb
daa
jge
mov
push
test
sub
test
dec
xchg
sahf
push
pop
jl
ds
cmp
test
imul
dec
fwait
sbb
repnz
push
cmpsl
mov
sub
dec
in
ret
xorl
xchg
shll
xor
mov
fcmovb
adc
pop
cmc
test
sbb
mov
nop
mov
ret
mov
ds
adc
jae
scas
stos
sbb
or
adcb
add
xor
push
hlt
push
hlt
mov
aas
push
lret
cld
out
pusha
sahf
or
mov
lret
xchg
cmpsl
rcrb
push
in
and
push
cmp
loope
fistps
sbb
ljmp
jns
cmp
scas
jmp
cmp
shll
sbb
push
dec
hlt
in
bound
fiadds
inc
add
push
sbb
ficoml
add
popl
stc
xchg
cmpsb
adc
ficoml
xchg
je
mov
out
xchg
jno
jb
sub
adc
mov
jmp
jb
movsl
sbb
mov
loopne
imul
xchg
pop
mov
push
xchg
xor
js
cmp
pushf
pop
mov
push
outsl
mov
data16
insb
xor
das
jge
pop
xchg
and
bound
leave
dec
mov
xchg
push
dec
in
jge
jo
jb
and
push
imul
das
mov
test
and
cmp
sub
jecxz
cltd
jg
sar
sub
js
xchg
fsubrl
pushf
jb
jle
lahf
jb,pn
and
push
push
add
cmc
mov
aam
aam
out
adc
lods
fcmovnbe
mov
ss
mov
xor
jp
out
add
push
cld
iret
jne
into
mov
jle
mov
arpl
mov
cmp
pop
cltd
xor
xchg
mov
movsl
inc
fistps
dec
jno
orb
js
je
cmp
sahf
lahf
and
mov
aaa
sbb
fadds
mov
aas
xor
xor
sbb
mov
je
test
xor
repnz
in
inc
daa
mov
cwtl
xchg
pop
out
movb
sub
add
adc
mov
imul
adc
push
mov
pop
add
cmp
pusha
into
in
ja
arpl
pop
adc
sahf
xchg
cmp
fwait
jbe
sub
in
bound
das
cli
sub
loop
jg
dec
xchg
jnp
xorl
lcall
ds
or
or
jo
mov
imul
sahf
aaa
xor
cwtl
rorb
jne
add
js
fists
push
push
add
push
cwtl
les
fwait
and
inc
lret
dec
dec
or
jmp
xor
adc
clc
sub
ret
ret
add
outsl
mov
lret
push
pop
pushf
sub
pop
loop
cmpsl
jl
fsts
fists
jl
cmp
loopne
xchg
or
xchg
add
jle
fcmovnb
jmp
jmp
ja
repnz
ljmp
mov
rcll
push
les
popa
mov
sbb
aas
cld
ja
stos
mov
jbe
xor
cmp
dec
sbb
das
and
mov
mov
sub
js
out
out
xor
lea
insb
sti
cld
lea
pop
sub
test
dec
cmpsl
push
pop
xchg
ret
mov
fisttpll
xchg
jge
push
test
mov
pop
xchg
inc
jp
jns
mov
je
addl
arpl
js
or
in
fsubrl
loop
testb
pop
jne
aaa
adc
out
pop
enter
adc
sbb
xchg
dec
ds
xchg
push
pop
out
add
xor
jno
imul
mov
xchg
inc
mov
addr16
fnstenv
int3
daa
int
insb
or
jl
pop
or
scas
pop
mov
fisttpl
stc
xchg
cltd
inc
pusha
sub
scas
in
ret
push
jae
dec
cmp
inc
mov
push
xchg
mov
fld
ficoms
mov
jl
xor
or
xchg
lahf
sub
stos
and
xor
pop
or
adc
xorl
call
jnp
jg
test
cli
daa
dec
dec
loop
pop
jge
addr16
fsubs
add
mov
sti
aad
pusha
pop
and
xchg
adc
sti
mov
dec
push
daa
int3
scas
cld
imul
movsl
mov
pop
push
mov
js
push
stc
mov
adc
ret
repnz
pop
rorl
shll
push
mov
xchg
std
das
adc
shl
cmp
pop
ret
imul
dec
js
loop
lods
imull
andb
cmp
push
sbb
int
mov
dec
jbe
jbe
pop
pusha
ljmp
xchg
mul
inc
nop
or
dec
jg
push
and
stc
jecxz
and
in
add
and
call
test
fisttpl
xor
mov
bound
jno
and
cmp
movsb
push
popa
mov
stos
rolb
mov
or
jmp
mov
xor
fidivs
push
lods
test
add
or
mov
test
cmp
push
cmp
mov
testb
aaa
insb
sbb
mov
lock
mov
mov
cmp
pop
test
adc
mull
call
bound
and
mov
mov
push
push
adc
or
repz
mov
sti
xchg
pop
xlat
das
pop
push
inc
mov
jb
push
enter
data16
arpl
aas
dec
ret
inc
jb
movsb
mov
fisubs
jnp
icebp
jle
in
mov
add
cmp
fs
leave
cmp
popa
jnp
arpl
cs
cs
jmp
xchg
xchg
cmp
sbb
loope
push
jnp
jno
mov
push
mov
stc
mov
mov
das
pushf
inc
mov
xor
adc
lcall
mov
test
adc
movsl
inc
xor
outsb
mov
loop
xor
addr16
clc
test
sti
ficompl
pop
or
and
stc
and
ret
cmp
les
jne
out
jo
fcoms
cmp
aad
adc
out
dec
mov
ficoms
ret
push
push
ljmp
fstpt
imul
scas
fnsave
pop
lcall
inc
push
add
or
test
in
add
clc
mov
mov
adc
loopne
adc
cmpsl
sbb
xor
insb
hlt
push
lret
and
jns
push
outsb
inc
push
and
mov
fwait
in
push
and
push
movl
sarl
cmc
iret
jb
fwait
and
mov
sbb
mov
cmpsb
jl
sbb
pop
jnp
jmp
fs
jnp
pop
sub
push
xchg
jge
cmc
lret
push
lea
dec
push
ss
or
loop
add
mov
mov
lret
mov
jle
add
xchg
das
into
pop
jp
mov
ja
mov
push
neg
fstps
je
xchg
add
sbbb
sbb
or
mov
fwait
adc
and
imul
mov
dec
out
fxch
lretw
ret
enter
subb
jecxz
sub
dec
sub
loop
jmp
push
iret
xchg
ss
jne
xor
inc
push
jg
xchg
punpckhdq
repz
stos
out
movsb
pop
outsb
je
mov
inc
nop
sub
test
xchg
xor
fimull
iret
dec
imul
and
push
pushf
cmpsb
inc
mov
adc
pop
out
mov
xchg
lods
dec
fs
sbb
mov
clc
pop
xchg
lods
lret
push
sbb
mov
mov
call
imul
insl
dec
aad
seta
pushf
in
xor
sub
add
jb
inc
mov
or
mov
and
scas
dec
xchg
aas
je
inc
mov
rorl
je
mov
push
jp
fdivl
push
shlb
shlb
cmpb
into
daa
pop
jb
push
movsl
xchg
jge
aas
adc
fs
jbe
add
push
bound
movnti
std
or
jecxz
cltd
aas
add
dec
lea
inc
mov
lahf
outsl
fimuls
push
mov
out
in
cmc
pop
inc
mov
daa
jle
cli
cmp
fcmovu
inc
loop
rorl
testb
xlat
jo
inc
xor
push
addb
mov
mov
adc
fs
cli
lret
fidivrl
movsl
lcall
shll
inc
mov
adc
cmc
cmp
cmp
repnz
adc
xchg
loope
orl
jg
ret
lret
mov
hlt
jb
ja
push
mov
loope
jne
cwtl
xchg
sbb
bnd
xorb
scas
fldcw
jbe
xorl
inc
sbb
mov
xorb
jo
push
inc
fs
dec
dec
pop
mov
call
mov
scas
shll
lods
pop
scas
jne
fdivrl
xchg
push
pusha
pop
xor
cmp
fiaddl
jne
dec
iret
clc
cli
xor
call
pop
push
outsl
or
push
mov
outsl
dec
and
scas
aas
je
mov
xchg
out
mov
sub
imul
leave
or
adc
fwait
aam
jb
pop
dec
xchg
movsb
movsb
xchg
in
and
vandps
or
sub
xchg
in
stc
xlat
xchg
or
push
test
data16
add
cmp
flds
or
ret
inc
ja
sbb
dec
mov
inc
xlat
jl
and
adc
fwait
jb
leave
xchg
or
scas
imul
pop
xchg
dec
leave
daa
xor
neg
and
lock
xchg
test
adc
mov
ss
mov
inc
js
push
adc
sub
insl
sub
mov
push
lock
xor
jle
ss
test
mov
mov
and
push
lahf
mov
vrsqrtps
add
inc
xchg
mov
xchg
roll
add
fcmovnb
in
clc
gs
popf
jmp
xchg
sub
mov
enter
movsl
call
call
inc
or
int3
pusha
popf
inc
sub
ficoms
mov
std
dec
adc
dec
mov
cmpsb
mov
jae
xor
push
hlt
inc
cltd
mov
fs
jmp
xchg
stos
gs
cltd
cltd
jns
cmp
push
repz
loopne
arpl
ljmp
mov
out
movsl
subb
adc
pop
xor
cli
fs
jne
push
aad
pop
cmc
mov
xchg
xor
cmp
movsl
or
or
into
cld
mov
sbb
jae
mov
lea
iret
jno
mov
jnp
in
add
and
std
outsb
inc
adc
jle
push
shl
or
fstps
fmul
test
mov
das
rcl
fucomip
mov
popa
sub
mov
or
scas
sbb
rcrl
js
lds
lods
mov
adc
test
cmp
mov
xchg
movsl
es
cltd
lds
ror
jp
xor
into
sub
inc
fwait
push
stos
popf
xchg
and
bound
push
aas
add
adc
mov
stc
push
dec
into
pop
and
adc
mov
dec
and
pop
push
mov
hlt
push
dec
inc
push
outsb
sbb
aam
je
ds
cs
pop
ljmp
jo
xchg
and
xor
jmp
les
jp
dec
mov
lret
mov
ficompl
shr
sahf
xor
add
ret
addb
mov
jnp
jp
aas
test
and
or
mov
bound
mov
bswap
nop
ljmp
fwait
mov
push
jmp
hlt
pop
jnp
ja
mov
or
hlt
decl
fucomi
sahf
leave
mov
or
imulb
xor
in
and
xor
and
pop
xor
sub
mov
xchg
or
je
lcall
fcoms
fmulp
mov
pop
and
clc
cmp
mov
inc
sub
mov
addr16
add
push
mov
shr
clc
fnsave
dec
jecxz
inc
pop
test
sbb
filds
jg
mov
mov
shll
mov
scas
dec
pop
ljmp
mov
rcrl
sub
pusha
lret
icebp
insl
sub
jg
jecxz
stc
enter
or
pop
adc
and
ljmp
leave
lods
jnp
push
push
je
je
insb
pop
cpuid
hlt
mov
mov
aas
and
inc
or
jne
outsl
lds
mov
mov
mov
pop
call
loope
out
outsl
ds
shlb
jo
sub
frstor
sub
cmp
negb
cmp
adc
ret
sub
sahf
mov
outsl
inc
call
and
ss
ret
enter
and
pop
fwait
cmp
sub
adc
int3
sbb
leave
sub
loopne
loopne
mov
rcll
lock
test
pop
fimuls
sbb
xor
push
add
pop
call
aad
shlb
cmp
xchg
dec
sti
mov
ja
mov
jne
rorb
or
mov
mov
iret
lahf
arpl
sahf
dec
add
or
repnz
mov
mov
cs
mov
jp
cmp
imul
test
je
xor
mov
push
mov
popa
ja
aas
fldl
cmp
insl
dec
pop
test
or
cmp
in
mov
clc
sbb
or
out
mov
mov
punpckhwd
xor
out
xchg
add
das
pop
cmp
lds
out
inc
xchg
adc
xchg
ja
repnz
inc
mov
orl
movsb
pop
lretw
insl
xor
push
shrl
std
iret
lods
or
xchg
inc
test
out
sub
xor
dec
les
jecxz
lock
pop
dec
mov
mov
dec
stos
pop
inc
cmpsb
loope
mov
sub
adc
xchg
pop
andb
movsb
daa
addr16
pop
xor
int
dec
jp
xor
cmp
jg
jns
lcall
adc
mov
lahf
repnz
bound
out
jne
dec
xchg
push
mov
mov
sub
sbb
mov
xorl
dec
mov
adc
lahf
insb
scas
add
outsl
pop
std
mov
mov
pushf
jbe
xchg
cmp
push
add
aad
pop
insl
fbld
xor
pusha
add
out
shl
in
cld
addr16
or
popf
dec
xchg
xchg
inc
ljmp
icebp
push
imul
dec
fdiv
cmpsb
movsb
in
imul
cmp
mov
mov
adc
jecxz
sbb
js
orl
pusha
loop
cltd
lods
mov
or
jnp
mov
and
mov
mov
inc
sub
jae
mov
sub
lock
cmp
mov
mov
in
movsb
aad
and
ret
adc
rcrb
aaa
dec
sarb
mov
flds
loopne
mov
dec
pop
jbe
leave
add
dec
stc
mov
cmp
mov
dec
or
ret
mov
mov
daa
scas
mov
push
lret
mov
gs
jns
sbbl
pop
inc
fxch
push
popa
pop
adc
lods
or
pushf
call
sti
push
pop
popf
mov
or
pop
cmc
dec
stos
pop
inc
mov
daa
mov
mov
mov
cmc
xchg
stos
cmp
mov
pushf
out
pop
hlt
lock
out
out
mov
or
cmpsb
in
push
aas
dec
pushf
js
and
das
push
mov
sub
fsts
ljmp
jae
dec
notl
fiaddl
dec
or
jmp
sbb
jecxz
fists
leave
or
xchg
lcall
or
je
add
roll
jno
ficoms
loope
sub
xor
cmp
add
mov
mov
mov
xor
daa
push
stc
aas
xchg
in
hlt
lods
jle
jl
mov
xchg
sbb
add
add
jae
dec
lods
and
and
or
pop
arpl
ret
lock
push
out
and
jns
xor
test
jp
push
mov
in
mov
push
int
test
pop
mov
push
xchg
test
push
mov
outsb
dec
in
cli
lea
js
cmpb
pop
dec
andl
lret
xchg
pop
into
xchg
push
insl
cmp
push
ss
push
testl
decl
mov
fs
repnz
out
pop
div
sti
push
in
enter
push
ret
into
faddl
mov
cltd
add
aas
ret
imul
jns
dec
rorb
shlb
jnp
mov
adc
push
js
gs
sahf
aam
cmp
out
lret
fstpl
pop
loopne
fcoms
int
xchg
or
fdivs
je
jmp
sbb
mov
push
mov
and
popa
and
xor
jp
scas
add
push
cld
jns
mov
movsb
inc
outsl
adc
sub
mov
jg
add
dec
mov
push
push
in
or
xchg
fs
adc
sub
cmp
adc
xchg
nop
ljmp
sub
dec
aad
cs
jne
adc
and
clc
adc
out
or
shll
fs
leave
sbb
cmc
sub
enter
imul
and
data16
mov
aam
jmp
lods
sbb
cs
inc
cmp
mov
jge
and
mov
push
fbstp
add
aam
dec
ror
sub
das
sub
pop
in
or
lods
and
out
cmp
mov
scas
xor
std
cmp
mov
hlt
int
push
or
xlat
into
pop
lock
or
mov
lret
mov
jnp,pn
or
mov
dec
mov
aaa
rolb
je
decb
mov
adc
es
into
fmul
jmp
mov
je
or
adc
add
xchg
push
aas
xor
mov
pusha
and
adc
push
inc
sahf
movsb
add
push
pop
call
inc
cmpsl
mov
insl
sbb
fbstp
mov
and
mov
xchg
ss
out
inc
mov
sahf
xor
test
xchg
jmp
ret
sbb
cli
push
and
movsl
inc
outsl
or
pop
pop
dec
lds
push
out
ret
push
out
iret
jmp
aam
jnp
int
and
aas
pop
sbb
enter
sub
fisubl
mov
mov
cmc
movsb
and
jg
sub
jecxz
dec
add
pop
das
and
popf
mov
jns
out
push
sub
add
sbb
sbb
enter
jo
insb
and
andb
jbe
jl
push
sahf
pop
test
sub
mov
inc
cmp
fs
enter
mov
sbb
orl
leave
sbb
inc
pop
cmp
sbb
inc
mov
inc
int3
jmp
cmp
out
jmp
test
push
xchg
inc
sub
insl
ret
mov
test
xchg
inc
cmp
adc
adc
sbb
mov
movsb
enter
lret
mov
jmp
frstor
js
xadd
mov
add
inc
xchg
sbb
push
inc
ja
inc
mov
cld
inc
adc
jl
inc
in
sbb
and
jp
and
push
push
jl
mov
bnd
test
mov
divb
and
cmp
cwtl
or
xor
gs
mov
out
push
xchg
pop
jecxz
ret
pop
in
xchg
inc
xor
clc
out
mov
jb
arpl
popf
enter
insl
in
sbbl
jg
aas
ss
mov
add
sbb
xor
mov
fcmove
mov
adcl
mov
jns
pop
repz
das
inc
jl
cli
or
mov
dec
adc
sbb
jl
lahf
sub
mov
and
adc
cmp
rcll
insl
dec
add
leave
jns
mov
outsb
lahf
cld
sub
fwait
jge
and
xchg
sbb
popf
xor
iret
and
xor
adc
repnz
mov
jmp
pop
mov
and
mov
push
dec
mov
cmp
movsl
imul
push
data16
pop
int3
inc
dec
jnp
das
repz
dec
push
loop
jl
adc
mov
lret
outsb
sbb
xor
in
out
fs
lret
shll
je
sbb
aad
push
sbb
sub
sub
cmp
xor
xor
loope
cmp
jmp
mov
lret
aas
adc
pop
adc
jb
loop
je
dec
pop
cmp
cmpsb
mov
xor
xchg
push
lret
adc
push
push
mov
popf
push
scas
add
xor
inc
out
xchg
pop
femms
adc
xchg
pop
jbe
xor
mov
and
hlt
dec
jnp
or
push
inc
push
inc
pop
mov
xlat
or
jns
out
insl
mov
hlt
jnp
jne
movsb
addr16
into
fs
adc
in
aam
add
push
xor
xor
add
xchg
cmp
popf
int
xor
adc
arpl
pop
sbb
xor
orl
sub
cwtl
sbb
push
dec
lret
and
inc
adc
sub
xchg
and
int
bnd
jae
lret
cmp
mov
inc
repnz
hlt
push
insb
push
mov
das
jno
jmp
mov
jb
inc
sub
jns
stos
pushf
lret
addr16
fldenv
iret
adc
mov
outsb
xor
bound
leave
sub
and
outsb
cmpsl
lret
inc
mov
jne
iret
adc
pop
mov
jae
bound
mov
or
pop
push
insb
fs
ficompl
dec
inc
xchg
pop
jo
ljmp
lods
lret
addl
sub
in
ret
or
dec
jp
stc
in
outsl
dec
mov
xor
xchg
imul
fnstsw
test
repnz
mov
fstpl
mov
mov
jbe
jb
cs
jecxz
inc
rclb
xchg
imul
cmc
mov
movsb
repnz
pop
xor
sbb
mov
jae
lods
dec
xchg
add
or
fisubrs
repz
into
dec
inc
leave
rorl
jp
xchg
sahf
mov
add
stc
mov
pop
cmp
xchg
popa
push
insb
aas
jns
jge
cmp
and
lret
popf
sbb
adc
mov
fiadds
enter
or
jl
sub
stos
push
sar
cmp
jmp
inc
int3
push
sub
adc
xor
inc
pop
shl
push
add
jge
jo
dec
xor
loope
or
stos
inc
inc
push
in
mov
mov
rcll
jns
fs
xchg
adc
call
cmp
adc
gs
mov
or
xchg
ljmp
out
sbb
push
das
pushf
pop
jle
mov
dec
push
xchg
repz
loope
leave
xor
sub
sbb
mov
and
xchg
mov
xor
push
in
inc
add
xor
addr16
mov
fsubp
sub
cmp
loop
std
gs
add
xchg
fistps
push
mov
jae
xchg
push
mov
pop
int3
mov
xor
rcrl
std
push
dec
enter
subl
int
jns
cli
psrld
pushf
and
insl
insb
in
cwtl
inc
jecxz
add
aas
cmp
les
pop
imul
cmc
sub
xor
xor
pop
pop
sub
loop
add
stos
sbb
jle
ja
mov
or
sbb
jg
or
outsb
in
test
loop
push
or
pop
inc
push
or
mov
lcall
stos
mov
dec
repnz
arpl
or
pushf
iret
jmp
adc
xchg
int
jl
xchg
inc
sbb
lcall
sbb
and
sub
xchg
ror
or
aad
negl
int
insl
add
lret
push
loopne
sub
daa
push
je
cmc
jle
jge
push
sbbl
out
and
jo
call
fwait
mov
lods
pop
pmullw
mov
rol
and
mov
jle
out
cli
shrl
or
cmp
std
stos
ljmp
popa
and
movsb
mov
outsb
cli
jno
cs
sub
mov
pop
repz
cmp
int3
dec
and
add
in
mov
test
addb
das
dec
outsb
xor
push
es
jle
and
mov
aas
filds
out
shrl
les
into
out
xchg
mov
cld
sub
inc
jp
or
repnz
nop
iret
outsl
xchg
mov
inc
hlt
push
je
cmp
ss
mov
mov
jg
dec
jp
sub
pop
cmp
out
popa
enter
outsb
into
push
test
ds
mov
mov
xor
jnp
scas
fidivrl
out
mov
scas
pop
dec
loopne
cltd
in
jb,pt
adc
lea
test
sbb
adc
lea
xor
pop
push
and
lds
mov
push
lcall
jo
mov
adc
pushf
jge
xchg
lret
push
mov
sbb
cli
ljmp
mov
pslld
test
cmp
repnz
sub
mov
in
in
or
pop
push
sbb
push
out
cmp
lods
mov
xorb
ret
mov
mulb
ljmp
xor
push
adc
pop
mov
xchg
push
fisttpl
inc
sbb
xchg
es
in
dec
mov
jb
pop
xchg
xlat
pop
test
ret
pop
sahf
push
push
outsb
std
pusha
mov
push
imulb
push
into
in
xlat
ds
add
dec
mov
lahf
fidivl
mov
add
mov
cmp
rcl
orb
fs
clc
mov
loope
outsb
push
cli
pop
jne
xchg
sbbb
int3
and
pop
sahf
xor
add
sbb
inc
cmp
mov
es
xor
adc
insl
lods
lahf
push
cmp
pop
mov
cmp
pushf
stc
fstl
jae
or
dec
inc
clc
or
and
xchg
mov
je
dec
cmp
ds
mov
lds
inc
or
mov
rol
in
test
dec
jmp
jae
dec
and
in
ja
sahf
jg
fs
mov
xor
icebp
sbb
mov
xchg
mov
push
rolb
enter
insl
imul
mov
xchg
sbb
pop
js
icebp
jns
das
xlat
scas
movsb
jmp
or
mov
mov
jg
adc
loop
xor
fistl
sti
inc
sbb
fstl
add
jmp
std
cmp
pop
data16
xor
xchg
aam
les
test
lret
mov
roll
mov
dec
jmp
out
mov
cmp
cmpsb
jnp
mov
or
hlt
insl
or
xchg
pop
push
mov
mov
cmpsl
and
inc
stc
xchg
mov
test
adc
mov
std
xchg
jg
lock
adc
idivl
cli
lds
xchg
sbb
les
fistpl
repz
outsl
sti
jecxz
or
mov
repz
mov
sbb
push
stos
or
nop
test
loope
lods
rcrl
in
push
movl
cmpsb
test
pop
lcall
icebp
adc
sbb
sbb
cmp
out
adc
and
push
pop
push
mov
xorb
aad
fadd
int
ficoms
mov
dec
fisubl
pop
js
mov
lcall
jbe
stc
test
inc
xor
scas
pop
shl
sbb
out
lds
add
xchg
adc
sti
fs
sub
mov
xor
jae
pop
mov
add
mov
xchg
jmp
sub
divl
rcrl
jg
jge
test
xchg
fcoml
xor
pop
xchg
cmp
das
cmp
mov
xchg
data16
test
pop
sub
sbb
jbe
cmpsl
leave
dec
mov
inc
jbe
lds
xchg
pop
sbb
pop
add
inc
cmpsl
pop
adc
shlb
sbb
fldenv
in
loope
mov
and
xchg
orb
xchg
jmp
shrb
sbb
ds
outsb
pop
fld
imul
incb
fcomps
mov
jmp
adc
push
sbb
rcrl
mov
cmpsb
sbb
aas
movsl
gs
imul
std
or
mov
sub
jno
stos
lcall
ret
add
cmpsb
jo
out
cmp
ss
inc
call
jmp
xor
xchg
and
cmpxchg
pop
pushf
lock
adc
adc
and
and
aam
or
cmp
or
insl
lea
mov
cmpxchg
mov
sub
push
add
or
cwtl
mov
mov
cwtl
pushf
bound
jg
arpl
xchg
pop
or
rolb
in
inc
test
dec
sbb
outsl
cmpsb
aad
imul
es
dec
add
test
push
push
pop
sarb
and
mov
mov
jnp
insl
xor
rcr
cmc
bound
ds
mov
jae
jb
pop
enter
or
jle
lcall
cli
cs
repz
mov
loope
outsl
pop
jne
sbb
jg
fwait
jae
xor
sbb
mov
jmp
call
pop
mov
cld
and
in
popf
mov
in
data16
movsb
inc
mov
fadd
stos
push
in
lret
or
shrl
ds
fcoml
xor
and
test
mov
repnz
into
mov
inc
iret
negb
imul
add
mov
jge
xchg
inc
out
xor
add
int3
popa
mov
xchg
cli
sbb
pop
loopne
cmpsb
test
ljmp
aas
sbb
or
cld
and
je
cmp
stos
mov
fiaddl
inc
cmc
xlat
xchg
lock
and
mov
bound
xchg
movsb
mov
test
movl
nop
or
mov
dec
cli
jp
popa
inc
sub
negb
fistpll
cmp
bnd
popf
or
fnstsw
stc
ss
push
pop
sbbl
and
test
mov
ss
xchg
sbb
or
pop
adc
data16
out
mov
sub
push
out
jb
sbb
push
push
loope
xchg
mov
cmp
outsb
test
adc
jnp
mov
ss
in
repz
loop
clc
mov
fsubrs
insb
adc
fcom
das
stos
jnp
popa
movsl
pop
inc
pop
arpl
loope
lret
add
insl
out
js
push
dec
fcomp
out
subb
aas
dec
les
out
cmpsb
insl
and
pop
je
test
shrl
notl
sarb
push
out
xchg
js
movsl
pop
cmc
in
inc
xlat
mov
ds
addr16
xchg
stos
imul
aas
inc
xor
adc
imul
push
pop
outsl
in
xor
icebp
push
and
nop
mov
and
and
and
jb
out
jns
test
aaa
adc
push
jmp
push
outsl
lret
pop
mov
in
push
xor
shlb
mov
or
sarl
fsubs
adc
jg
jne
mov
movb
test
mov
push
inc
mov
sub
pop
arpl
jle
sti
sbb
jae
std
mov
push
jmp
sub
dec
sti
lods
ds
imul
ficomps
inc
sub
or
stc
sbb
sbb
popf
mov
mov
sbb
fdivrl
jg
mov
dec
cmpsl
adc
jge
mov
mov
data16
imulb
ret
imul
cmp
ret
loopne
sbb
std
nop
popf
fs
fstpt
aaa
test
pusha
cld
loop
push
jno
dec
movsl
rol
and
mov
mov
movsl
sbb
xlat
out
imul
imul
add
xchg
cmp
mov
jnp,pn
xor
and
push
popa
das
roll
xchg
mov
inc
adc
daa
jl
push
jne
jne
inc
or
addr16
clc
xchg
cmp
mov
xor
aad
jecxz
and
fmulp
cld
sbb
pop
sahf
mov
sub
pop
mov
adc
insl
mov
daa
stos
iret
jns
mov
pusha
movb
icebp
cmp
fisubrl
sub
stos
std
test
ror
leave
push
sbbb
lret
jecxz
dec
push
aad
cltd
out
push
cs
je
in
and
adc
mov
fwait
les
cmpsb
pushf
push
stos
xor
aaa
dec
inc
jle
push
pop
xor
popa
jge
inc
and
mov
add
xlat
mov
nop
mov
lea
lret
jmp
mov
mov
push
or
lock
stos
ret
rcll
and
jno
mov
mov
lcall
push
std
adc
sub
jecxz
and
xbegin
rcll
jae
mov
push
sbb
xchg
and
inc
test
fimull
sbb
leave
inc
arpl
repz
jecxz
inc
jnp
inc
outsb
nop
ret
and
shlb
dec
pminsw
iretw
stc
jno
sub
test
sbb
daa
xlat
sub
mov
and
lds
test
testl
push
out
inc
pop
jbe
fsubr
leave
ret
fldt
xchg
repz
vphaddubd
nop
std
addr16
pushf
sar
jp
mov
xchg
stos
jg
fisttps
adc
add
test
sub
popf
mov
jge
xchg
fucomip
sbb
aas
rcr
mov
xchg
jge
xchg
clc
xchg
xor
aas
xchg
fsubrs
mov
lds
mov
subb
jns
pop
dec
mov
jne
out
nop
aaa
or
add
sub
rclb
enter
add
push
or
and
cmpsl
les
les
filds
stos
add
xchg
mov
sub
jmp
and
bound
cmp
outsl
sbb
ret
cmp
add
push
inc
idivb
aam
leave
aad
rolb
negb
fnop
das
push
xor
repz
rol
out
inc
sbb
and
popf
add
push
ja
lods
dec
xchg
dec
and
sarb
cmp
adcl
data16
jmp
stos
mov
int
xchg
and
xor
add
das
popl
movsl
adc
jne
cmp
pop
punpckhbw
push
imul
fbstp
adc
aam
xchg
loopne
xor
mov
dec
jge
add
cmp
sbb
pop
inc
lds
fnstsw
pop
ljmp
inc
mov
sub
icebp
push
js
out
lahf
stos
jl
adc
lods
cmpsb
cli
ja
not
repnz
loope
mov
xor
dec
and
mov
std
iret
call
xchg
inc
xchg
movsl
outsl
mov
dec
mov
pop
lahf
add
sbb
add
or
or
into
jne
inc
outsl
sub
dec
mov
jle
leave
ss
bound
mov
cmpsb
daa
movsb
ret
adc
pop
inc
test
std
fildl
mov
cmp
dec
lock
pop
mov
sbb
fistpll
fs
cmp
add
add
dec
adc
mov
mov
cmp
sbb
mov
ds
push
ljmp
and
sbb
pop
jb
adc
in
jle
daa
popa
mov
xor
int
lret
xchg
push
inc
add
popf
mov
sub
mov
mov
xchg
push
xchg
xchg
lahf
jbe
mov
aaa
popa
mov
and
mov
lcall
inc
imul
mov
or
cld
loope
and
xorb
inc
dec
bound
mov
mov
push
dec
insl
fs
popa
jb
fcoml
imul
push
icebp
insl
xor
lret
jge
outsb
mov
xor
and
outsb
fimull
add
sbbb
sahf
jns
cmp
fists
dec
fldcw
add
imul
pop
outsl
hlt
enter
dec
in
dec
loope
add
add
rcl
mov
sarl
das
sub
lods
repz
nop
data16
idiv
mov
push
cld
pop
mov
xchg
inc
cmp
aam
xchg
inc
insl
fisubl
or
imul
sub
mov
mov
fs
dec
neg
pop
xchg
lcall
inc
nop
inc
clc
mov
push
dec
shll
jle
fsubrp
and
mov
jns
pop
sbb
pop
pop
push
adc
shll
push
popa
push
popa
push
bound
add
scas
sbb
sub
add
mov
imul
cmp
adcl
sbb
mov
push
xchg
es
ret
mov
repnz
insb
clc
das
jae
lds
ds
out
cs
xchg
iret
mov
sub
insb
leave
mov
aas
es
xchg
xor
sbb
ss
movsl
stos
std
mov
inc
in
sahf
inc
test
loopne
std
lods
xchg
push
xor
xchg
ja
mov
pop
sarb
mov
sbb
dec
leave
fcmovne
dec
adc
push
adcb
mov
sbb
lods
cmp
pop
inc
xchg
ret
popf
pop
push
imul
push
jg
mov
xchg
lods
or
jge
or
adc
mov
mov
cmpb
add
cmovno
or
stc
daa
call
mov
mov
jbe
popa
movsb
cmp
sbb
xchg
pop
xor
lds
push
cwtl
and
add
lds
adc
cld
loope
out
dec
fcomi
or
ljmp
xchg
std
mov
adc
sbb
push
jp
jnp
xor
test
xchg
pop
out
xchg
rclb
negl
test
fwait
stos
mov
push
jge
and
inc
cmp
jmp
popf
adc
mov
into
stos
shr
cltd
clc
push
jge
sbb
rcrl
dec
popa
adc
outsb
dec
repnz
in
pop
xchg
stc
imul
xor
imul
cmp
mov
pop
xor
push
push
xchg
mov
nop
shr
jg
push
pop
xchg
lock
push
pushf
into
out
orl
test
daa
lret
push
icebp
add
bswap
sbb
rolb
fstpt
pop
aaa
adc
stc
xchg
push
add
inc
ljmp
lock
mov
push
test
in
in
cmp
jbe
jecxz
or
cmpl
mov
roll
dec
sahf
clc
and
xchg
jnp
rcl
cmp
rolb
in
xchg
sti
mov
xor
jge
pusha
inc
pop
repz
jne
mov
dec
dec
sub
rolb
cmp
fucomi
xchg
lods
call
repnz
insl
pop
shlb
pop
mov
cmp
mov
jbe
bound
push
pop
sbb
ret
mov
cmpsb
sub
popa
sub
scas
shll
divl
mov
lret
mov
test
cld
insb
lds
insb
nop
adc
lret
pop
cmp
or
notl
hlt
or
pop
clc
sarl
xor
adc
rcr
xchg
pop
jae
add
jne
lret
mov
outsl
sbb
mov
fdivl
or
imul
xor
iret
fists
push
fs
scas
fsubl
pop
repz
bound
jb
sbb
xabort
pop
cmp
jg
cmp
xchg
mov
fidivrs
imul
xor
xchg
push
adc
test
nop
mov
dec
sbb
cmp
outsb
cmp
cltd
lret
mov
sub
or
push
jge
xchg
add
std
fucomp
or
mov
flds
inc
fs
les
shlb
mov
cwtl
jge
sbb
mov
stos
mov
in
test
rclb
sbb
movsl
xor
ja
lods
dec
push
cwtl
sub
cmpl
inc
jae
or
add
sub
jbe
cld
jl
cs
sub
fs
addr16
fiadds
fisubrs
xchg
jle
xchg
mov
mov
jmp
pop
rcl
sahf
repz
inc
mov
dec
adc
push
insb
pop
leave
bsf
sbb
leave
insb
or
pop
test
arpl
and
mov
ss
xchg
rolb
xchg
mov
pop
negl
mov
fcoml
pop
scas
add
jmp
or
loopne
outsl
push
test
add
out
xchg
out
or
andb
mov
adc
fisubs
jb
xchg
rcr
clc
enter
sarb
out
push
pop
test
pop
negb
sarb
jg
ficoms
movsb
in
jae
adc
push
pop
notl
clc
or
in
cmpsb
xor
jno
xor
les
inc
and
pop
cmpl
loopne
std
pop
sbb
das
add
inc
je
popl
mov
xchg
clc
push
sbb
adc
cld
jp
mov
aas
cmp
pop
mov
test
add
into
xchg
iret
cmp
jge
pop
inc
cmp
aad
movsl
push
xor
adc
movsb
sub
jmp
mov
cs
add
sahf
shll
int3
into
rcr
stc
stos
mov
adc
stos
mov
test
pop
mov
sbb
dec
push
sti
lds
xor
xor
test
jmp
adcb
mov
lock
pop
add
aas
dec
jmp
or
adc
leave
push
xchg
jnp
pop
and
lds
push
xor
add
mov
fmulp
inc
sub
aam
daa
xchg
jae
les
aam
loopne
pushl
jbe
mov
cmpsb
mov
dec
and
xchg
fs
lret
bound
sub
and
jecxz
push
mov
push
mov
cmpsl
push
xlat
nop
jno
mov
or
push
scas
xchg
aas
scas
add
aam
pop
inc
test
fcmovnbe
scas
xor
mov
push
pusha
jp
pop
stos
movsb
mov
popf
cwtl
into
aaa
mov
popf
loopne
add
testl
pop
mov
es
xchg
push
inc
mov
mov
fisttpl
mov
aam
jnp
in
in
push
in
inc
cs
test
clc
cmp
sub
je
shl
xorb
xchg
cmp
or
aad
les
fimuls
cli
test
or
in
xor
pop
mulb
into
lods
std
mov
mov
fsubrl
xchg
cmp
movsb
mov
out
add
pop
arpl
into
mov
cmpsb
and
cmp
xchg
sbb
add
sbb
mov
jmp
js
aam
mov
test
pop
ja
sub
in
mov
push
xchg
push
cwtl
insl
xor
or
or
jae
push
pop
std
xor
insb
clc
dec
cmp
stos
or
dec
jne
outsl
fisttps
and
push
mov
sub
outsb
xchg
mov
iret
lods
test
lea
add
sbb
popf
mov
stos
stos
pop
xchg
mov
or
adc
ficompl
shll
inc
sub
mov
jle
mov
les
pushf
dec
out
ds
dec
xor
in
incb
ss
shll
insb
cltd
inc
out
push
pop
movsb
sub
xchg
mov
pop
ret
aam
and
pop
orb
or
push
mov
sub
ss
jb
mov
or
sti
mov
add
adc
mov
mov
cmp
scas
es
mov
int
xchg
sti
mov
pop
cmp
insb
dec
xor
or
xchg
aad
lods
push
out
sbb
push
xchg
push
add
push
mov
dec
in
mov
ljmp
lcall
mov
jno
mov
mov
mov
aad
xlat
fcomps
jmp
insb
jp
sbb
negl
push
pop
cmp
sub
or
daa
test
nop
fs
negb
outsb
movsl
jns
sbb
inc
mov
cmpsb
in
xlat
fucomi
stos
sbb
jg
or
jge
jb
pushf
adc
pop
lret
mov
pop
sti
call
arpl
fmul
adc
sahf
into
ret
ficoml
cmp
xchg
mov
in
les
repz
test
out
sahf
jecxz
adc
xchg
pop
fstps
mov
inc
inc
rolb
jnp
jb
sbb
cld
sahf
fisubrl
inc
test
pop
inc
mov
or
fs
sbbb
gs
lahf
mov
enter
test
int
add
jno
mov
jmp
aam
and
cmpsl
cmp
popf
mov
adc
scas
hlt
cs
inc
in
cmpsb
add
dec
mov
ds
inc
dec
pop
je
xchg
inc
sub
dec
jecxz
inc
ret
inc
fnstsw
sbb
fsubrl
xlat
or
jmp
mov
int
jno
xor
stos
in
stc
imul
cmc
popf
adc
rclb
aaa
loopne
jecxz
cmp
lcall
inc
jp
mov
xchg
scas
push
fcoms
push
lds
mov
pop
pop
push
mov
int3
add
arpl
xor
aad
js
aam
shlb
mov
adc
jno
cltd
or
aad
dec
sbb
stc
jp
push
inc
popfw
inc
dec
shl
jl
aad
cmpsl
es
fdivs
cmp
test
jno
scas
mov
pusha
fidivrs
pop
mov
test
int
lock
xchg
fstps
sbb
xor
pushf
push
pop
ss
stos
mov
popf
mov
dec
xor
push
cld
call
leave
dec
inc
push
jecxz
mov
test
cmp
pop
and
int3
ret
iret
leave
mov
cs
emms
loope
xchg
pushf
mov
xchg
lret
xchg
popa
jecxz
xchg
push
jecxz
dec
xacquire
mov
loope
push
fildl
adc
sbb
fwait
mov
lods
and
and
ret
fisubs
and
fcmove
mov
fsubrp
insb
pop
rclb
dec
pop
fs
out
je
push
mov
out
xor
imul
repnz
add
or
xor
js
clc
mov
and
test
jns
push
data16
push
popa
xchg
xlat
add
loop
cmpsl
lahf
ror
adc
pop
xchg
scas
jae
mov
sub
adcb
add
push
es
mov
push
out
xor
imul
adc
xor
cmc
sub
test
push
sbb
add
andl
sbb
cmp
push
dec
inc
cmp
xchg
andb
push
add
call
pusha
dec
cmpb
cmp
push
push
jle
and
add
inc
outsb
pop
cmp
add
std
js
std
adc
mov
fcmovnb
push
out
jo
cs
leave
shlb
cmpsl
dec
movsb
mov
rorb
testb
mov
mov
repz
push
aas
arpl
add
jb
out
sar
movsb
leave
js
aam
shrb
andb
inc
fs
xorl
int3
and
push
cmovle
lds
push
cmpl
out
dec
mov
sbb
push
sub
cmp
xchg
icebp
scas
xchg
cmp
and
dec
mov
test
test
call
dec
mov
push
dec
je
sbb
cs
outsl
add
fdivs
shl
popf
dec
push
in
std
sahf
push
cmp
sub
sub
lods
addr16
inc
inc
dec
push
inc
cmp
cld
jb
inc
and
addr16
push
jl
pop
and
push
adc
dec
jecxz
ljmp
mov
add
lcall
into
scas
negl
sti
fadds
mov
mov
dec
add
or
dec
call
inc
dec
cmc
and
mov
mov
jns
in
sub
dec
shrl
cs
jmp
shlb
test
aas
mov
mov
imul
mov
ret
dec
push
inc
jg
stos
aas
lea
add
rcl
mov
pushf
xchg
loopne
push
pop
xor
mov
ljmp
popa
push
push
sub
sti
movsb
push
dec
outsb
cmp
sbb
int
mov
dec
test
cmpsb
push
jne
pusha
xor
dec
mov
outsl
jg
xchg
fwait
add
push
pop
gs
adc
xor
jne
xor
or
dec
loopne
mov
sbb
pop
pop
mov
adc
xor
outsl
lods
fmuls
push
test
outsl
lods
dec
sub
cmp
sub
lds
adc
pop
pop
repnz
fsubp
push
pop
or
inc
mov
insb
push
mov
mov
repnz
inc
mov
add
push
loopne
rcrb
adc
in
stc
js
movsb
and
arpl
inc
push
mov
xchg
outsb
aas
repz
hlt
popa
sbb
sbbl
mov
pusha
and
cld
sbb
shr
std
scas
scas
rcrb
popf
jp
call
xor
dec
pop
lahf
jl
test
cwtl
jno
xchg
mov
dec
inc
loop
mov
push
aad
cmp
mov
daa
cmp
mov
mov
sub
les
sbb
jp
mov
cli
pop
add
int3
inc
dec
add
and
adc
mov
or
imul
outsl
orb
test
repnz
out
lods
inc
sub
into
pop
fidivl
mov
add
add
sub
xorb
xlat
or
dec
push
sahf
fists
addb
pusha
pop
push
stc
push
bnd
mov
mov
outsb
pop
dec
int3
inc
sub
pop
push
pop
nop
popf
xor
inc
xchg
and
imul
xor
movsl
rcr
adc
inc
xchg
mov
gs
xchg
add
fldcw
dec
jle
lock
push
int
mov
mov
xlat
add
pop
ficoms
xor
fdivl
pop
xor
pop
in
hlt
fst
cmp
jnp,pn
jp
pop
loope
das
add
xchg
stc
mov
pop
in
mov
ret
push
jno
xor
call
leave
call
fidivrl
loopne
and
out
cmp
lods
fistl
or
adc
into
shrl
xor
lahf
rolb
mov
movsl
xorl
mov
daa
std
fiadds
sbb
hlt
ja
mov
mov
data16
sub
ss
pushf
cmp
jno
mov
das
sub
negb
or
data16
cli
xor
aad
add
test
int3
mov
cmpb
mov
nop
clc
and
ds
gs
jle
movsl
mov
push
sbb
xor
xor
icebp
fcompl
add
xor
insl
xor
xorl
out
pop
int
es
out
rcr
xchg
lret
aas
rorb
test
gs
rorb
mov
scas
cmp
sub
in
or
mov
mov
mov
and
sahf
dec
mov
in
sub
mov
cmp
or
mov
dec
cmc
sbbb
or
xor
adc
sub
clc
xor
push
lods
je
dec
mov
mov
xor
inc
mov
sub
scas
adc
inc
cmp
test
jmp
icebp
in
cmp
xchg
mov
pop
ja
mov
dec
pop
inc
adc
push
in
aas
mov
or
push
cmp
jp
loope
cmp
lret
pop
jg
ljmp
in
lahf
jg
enter
loop
orb
in
lret
cmp
call
ds
arpl
cvtpi2ps
icebp
dec
jns
imul
xchg
jbe
inc
sbb
ret
es
insl
pop
jnp
out
pop
push
mov
sub
das
xor
adc
insl
mov
jb
sbb
aas
adc
test
ret
xchg
push
movsl
mov
mov
pop
mov
adcb
daa
jmp
jecxz
addr16
push
sub
std
pop
ljmp
lahf
jo
mov
sub
xor
cmp
fcomip
dec
push
int3
xor
add
loopne
or
cmpsl
mov
inc
dec
es
adc
arpl
addb
mov
push
xchg
divb
sbb
lret
add
pop
jne
jae
es
mov
sarb
pavgb
and
xor
xchg
xchg
in
ficompl
notl
mov
pop
dec
loop
sbb
pushf
mov
sub
lock
in
scas
shll
je
fadds
jmp
jge
mov
pop
inc
in
bswap
orl
repz
pop
das
lods
daa
lds
xor
incb
push
cli
mov
lret
mov
shll
fwait
dec
mov
cmp
mov
or
shlb
insl
pop
xchg
xor
push
clc
xlat
mov
xor
iret
mov
dec
pop
inc
movsl
mov
xchg
faddl
imul
sub
mov
in
push
in
lods
mov
in
loop
ljmp
rcrl
filds
aas
out
jecxz
cltd
mov
dec
xor
push
icebp
pop
adc
ror
clc
and
insl
leave
mov
cld
sub
loopne
aad
cmp
xchg
sbb
fdivs
aaa
jae
push
xchg
adc
stc
cmpsb
mov
sbb
out
mov
mov
jno
pop
pop
arpl
movsb
mov
add
jl
mov
push
es
adc
dec
mov
mov
nop
mov
fwait
mov
dec
fcomi
jp
jle
xor
clc
mov
subl
repnz
or
out
jbe
cltd
outsl
out
imul
cmp
rclb
sub
out
in
sub
pushf
or
mov
or
iret
mov
pop
mov
rclb
faddl
mov
inc
pop
sbb
inc
lcall
inc
lds
sbb
test
sub
popaw
cltd
faddl
sub
dec
iret
ret
das
lea
or
push
lods
push
pop
cmp
push
cmp
cmp
add
mov
cwtl
mov
sbb
cmp
repz
xchg
rolb
cmpsb
in
jns
push
cltd
cmp
lret
arpl
and
hlt
fistpl
imul
inc
imul
shl
aaa
mov
loope
xchg
adc
dec
add
cmp
xchg
loope
aaa
bswap
stos
lods
out
xor
loop
stos
jecxz
imul
mov
addl
xor
es
jno
cmp
test
fiaddl
aad
pop
nop
inc
lods
adc
lods
add
mov
sbb
add
dec
test
mov
adc
push
push
shrl
xchg
lds
adc
pop
xor
daa
int
scas
pop
push
sbb
imul
xchg
pop
pop
sti
sbb
jecxz
or
daa
shrl
mov
stos
push
push
js
repnz
jno
es
test
dec
lock
scas
lods
pop
push
xlat
cmp
jmp
push
xlat
push
test
stos
outsl
cmpsl
insl
push
xchg
inc
add
iret
sub
loop
in
cltd
jge
jmp
dec
jne
push
sub
shll
addl
mov
es
push
dec
pushf
and
mov
mov
xchg
push
mov
add
test
sub
in
adc
push
and
popa
pop
lods
push
dec
notl
out
jg
push
xchg
sbb
jecxz
jle
jp
jo
mov
aaa
int
cld
movsl
sub
xchg
insl
outsl
mov
mov
insb
orb
daa
dec
int
mov
jge
in
xlat
push
loop
lea
and
xchg
std
mov
push
inc
js
push
ds
sbb
mov
and
jp
dec
in
lock
fisttpl
and
fwait
testb
shr
add
xchg
pause
pushf
push
and
push
fidivrl
inc
mov
dec
pop
inc
cld
or
xor
pop
loopne
mov
sub
out
cltd
int3
js
nop
in
inc
push
filds
or
jg
in
enter
cwtl
and
inc
cmp
popf
es
clc
pushf
out
pop
mov
jg
pop
cmp
pushf
loopne
sarl
lea
jbe
push
std
arpl
mov
out
into
adc
repnz
xchg
mov
aad
push
loope
movsb
add
jmp
push
or
pop
pop
xor
call
mov
test
dec
xor
movsl
xor
xor
adc
adc
xor
cmp
xchg
or
add
clc
mov
les
sbb
lods
mov
dec
jmp
add
fdivrs
cmp
jecxz
pushf
inc
imul
jp
stc
push
inc
xchg
mov
cwtl
js
std
cld
insl
push
repnz
pop
mov
mov
icebp
add
stos
cmp
mov
aam
sbb
push
pop
inc
rcr
fstpl
lods
sbb
pushf
xor
push
xchg
ljmp
jae
mov
mov
add
xchg
js
into
xchg
mov
cmp
cli
or
sti
push
cltd
sub
fdivs
or
add
fnstsw
and
xchg
mov
sti
outsb
loope
sbb
push
ss
daa
ficoml
cltd
pop
adc
js
xchg
gs
and
mov
iret
clc
add
in
rclb
sbb
adc
roll
add
iret
push
subb
movsb
addr16
push
jmp
pop
mov
mov
lods
cmp
loopne
mov
outsl
sbb
mov
in
cld
popa
outsb
scas
mov
divb
std
add
add
sub
lret
cmp
dec
sahf
insb
pop
lret
orl
rclb
ja
int
test
mov
and
mov
shl
jae
cwtl
cmpsl
and
in
arpl
hlt
js
mov
nop
fs
ret
xchg
jmp
clc
inc
sbb
lahf
sbb
mov
loopne
mulb
sbb
push
mov
std
adc
sub
adc
inc
std
std
and
cmp
xor
mov
jle
mov
mov
pop
mov
sub
loopne
pop
sahf
popa
nop
inc
adc
adc
sbb
adc
orb
cmp
xchg
and
out
jnp
push
push
dec
clc
mov
out
jmp
cmpl
jg
mov
mov
mov
push
xchg
pop
xor
aaa
mov
loopne
sbb
inc
stos
aam
push
popf
ljmp
cmp
fldl
sbb
jno
pop
mov
xor
mov
or
push
and
jnp
or
es
fidivrl
lods
scas
ret
mov
ja
lret
pop
or
iret
xor
push
push
cld
std
aaa
pop
faddl
adc
inc
call
cmp
or
lcall
and
mov
lock
ret
inc
fs
jae
sub
in
std
inc
jmp
out
and
xlat
test
jo
fldl
mov
xor
or
sbb
add
jns
scas
pop
dec
sub
or
jne
je
mov
in
adc
repnz
push
hlt
add
ret
imul
cmp
pop
xor
jo
enter
mov
push
int3
gs
flds
test
mov
mov
mov
pop
push
xor
dec
sbb
cmp
dec
pushf
dec
inc
fstpl
adc
or
adc
cmovne
mov
mov
repnz
inc
cmpb
push
stos
cmc
or
orl
pop
sbb
xchg
in
hlt
xchg
lock
jmp
inc
imull
mov
pop
mov
dec
sbbb
bound
pusha
and
push
xchg
std
inc
cmc
in
es
mov
cmp
sub
and
stos
pop
std
adc
mov
adc
repz
pop
inc
and
xor
cmpsb
nop
lcall
scas
push
jle
lret
pop
js
movsb
jne
dec
sub
dec
addr16
inc
loop
xor
mov
jge
jne
fcomps
enter
stos
inc
incl
mov
dec
lret
int3
cli
push
xor
adc
mov
out
das
jle
sti
cmp
add
push
shlb
repz
cmpsl
add
jbe
lcall
scas
js
das
inc
cmp
inc
into
movsl
rclb
pushf
jnp
mov
add
mov
lcall
aas
aad
pusha
insb
sbbb
xor
adc
dec
aam
aad
scas
and
ret
mov
test
ds
daa
lahf
xor
sahf
fidivs
dec
push
lods
arpl
xchg
div
xchg
aas
mov
pop
shll
ljmp
dec
lods
jp
jge
popa
repnz
out
fs
adc
hlt
xchg
pop
lret
mov
xlat
xor
adc
xchg
pushf
mov
pushl
ss
push
fisttpll
call
sti
lcall
divl
xor
lds
mov
xor
and
mov
repnz
popa
in
xor
xsaves
cmp
jmp
repz
movsb
adc
jnp
and
imull
and
xchg
mov
lods
mov
ss
mov
sbb
rclb
sbb
insl
adc
pushf
shlb
imul
stos
or
dec
adc
jl
mov
inc
sub
subl
xor
cs
clc
icebp
scas
mov
mov
jne
sub
xchg
sub
cld
stos
mov
mov
jecxz
push
lods
pushf
aam
and
inc
je
test
or
push
add
shl
inc
rcrl
arpl
insb
movsb
test
mov
dec
lret
fidivs
addl
cli
lea
sahf
out
scas
jp
fstl
xorl
idivb
push
inc
push
fstpl
std
or
clc
add
gs
std
ds
adc
mov
cmp
jae
mov
inc
daa
xor
jle
xor
sbb
sbb
or
lret
mov
xchg
shr
push
test
xor
pop
cs
jae
ret
icebp
leave
sbb
je
mov
cmp
jns
sub
adc
cwtl
pop
xchg
lods
fwait
xor
test
aas
mov
les
jno
movsb
or
in
push
shll
lret
cmpsl
lds
inc
jge
and
cmpsb
mov
adc
jecxz
or
add
cltd
std
icebp
sbbl
or
test
mov
dec
mov
mov
or
mov
adc
sbb
jae
fisttpl
sbb
mov
pusha
movsb
mov
scas
fnstsw
js
mov
mov
push
divl
xchg
or
sbb
aam
test
push
push
mov
or
sub
adc
xor
cmp
popf
aad
into
mov
mov
mov
pop
leave
xchg
enter
sti
dec
jnp
cmp
es
add
notl
inc
call
enter
mov
mov
sub
fistps
jp
sub
mov
icebp
adc
icebp
icebp
mov
adc
fcmove
popl
mov
push
shrb
adc
inc
fs
cmp
add
pop
push
add
sahf
add
adc
xor
lods
movsb
stos
xchg
xor
or
sbb
adc
lcall
jmp
dec
lock
mov
push
inc
push
push
cmpsb
pusha
pop
addr16
adc
pop
call
add
mov
ret
or
mov
out
jmp
lods
sbb
lods
outsl
test
xchg
es
mov
andb
adc
and
aad
scas
in
push
mov
pop
mov
lods
mov
add
loopne
flds
mov
rcll
mov
cs
xor
mov
and
movsb
and
lret
ljmp
mov
mov
je
xchg
ret
cmpsb
out
aaa
leave
add
and
cmpsl
pushf
addr16
ja
insl
jmp
ret
popa
sub
rcll
jb
jne
inc
ss
cmpsb
addr16
jp
int3
test
loop
xlat
pop
mov
add
fnstsw
adc
into
out
push
fiadds
shrl
fidivl
sbb
dec
dec
aaa
xchg
add
cltd
mov
mov
int3
pmaddwd
and
xlat
mov
xor
fdivrs
or
ds
sbb
pop
sti
test
inc
xchg
in
aas
lds
jge
or
and
jb
and
cmp
je
mov
or
dec
and
sti
sbb
push
int3
jg
dec
pop
mov
test
xor
sub
mov
mov
icebp
aad
iret
shll
cli
xlat
cmp
loope
mov
dec
and
push
daa
repz
cltd
je
scas
aad
test
cmp
loope
clc
in
cmpsb
push
adc
xor
sbbl
in
mov
inc
sub
clc
lea
mov
fadds
fs
scas
lcall
scas
pop
subl
jmp
xchg
cli
aam
iret
pop
mov
ret
jnp
fstl
loop
call
pxor
xor
jb
cmpsb
sbbl
push
or
push
mov
xor
in
lret
pop
inc
in
icebp
jb
lahf
fsubp
pop
lds
and
popa
push
or
mov
scas
mov
jns
push
scas
icebp
jecxz
cmpsb
fistpl
pop
lods
cwtl
aas
xchg
inc
cwtl
test
adc
std
aad
mov
xlat
dec
je,pt
popf
cwtl
push
sub
pusha
and
jg
addr16
test
mov
fdivs
subb
mov
loop
into
lds
jnp
dec
fildl
and
inc
pusha
shr
sub
hlt
popf
sub
pop
lret
dec
cmp
fldt
cmc
inc
es
pushf
sbb
xchg
fsubrl
fs
add
mov
mov
sbb
cwtl
ret
js
push
psubd
mov
sbb
adc
fmuls
xor
xchg
xor
sahf
ja
inc
out
push
cmp
roll
decb
sbb
enter
dec
ja
leave
lock
mov
jb
mov
movsl
cmp
push
leave
fcomps
roll
mov
cmp
mov
pop
pop
les
bound
add
cltd
out
pop
in
pop
mulb
jmp
int3
or
pop
push
loop
dec
sti
push
dec
fcomps
not
pop
xchg
pop
cmpsl
in
fwait
sahf
mov
xchg
arpl
push
mov
inc
pushf
inc
int
cli
hlt
adc
xchg
in
jbe
jnp
push
nop
pop
cmp
cs
jb
pop
and
inc
lods
or
or
dec
mov
jnp
xchg
sub
adc
mov
sbb
mov
js
cltd
adc
lods
cmp
dec
icebp
push
mov
or
adc
test
lock
call
int3
dec
sbb
add
scas
jg
jle
aas
into
lret
sbb
push
xlat
inc
notb
dec
mov
shrl
pop
push
xchg
popf
call
add
dec
test
sbb
xchg
add
inc
out
cmp
cmp
ljmp
ret
lock
aas
stos
mov
das
scas
in
fdivrs
dec
and
add
sub
scas
mov
pop
or
negb
subb
pop
repz
shr
test
loopne
bound
jmp
push
adc
pop
push
mov
jle
pop
call
rolb
in
addr16
sub
orl
js
dec
push
cmp
add
sub
lcall
sbb
push
or
loopne
inc
and
sbb
cwtl
nop
push
mov
popf
gs
loopne
dec
cmc
shrb
stc
int3
adc
and
int3
cmc
pop
inc
arpl
or
cmpb
inc
or
push
rol
push
addr16
fdiv
or
dec
xor
imul
mov
fs
cmp
mov
outsl
jbe
inc
dec
leave
ret
push
or
int3
je
cmp
cmpl
mov
lea
xor
addr16
mov
dec
repz
adc
mov
out
jle
xchg
jmp
pop
adc
mov
inc
xchg
mov
cmp
ja
int
push
das
arpl
std
cltd
sub
notb
inc
sub
into
xchg
jg
loop
idivb
cli
cmp
sub
bound
xchg
add
jnp
fbstp
push
fistl
sub
rorl
mov
inc
push
mov
inc
pushf
push
imul
pop
jae
loope
xor
cmp
ljmp
sub
sub
test
ficoml
add
sbb
adc
repz
jo
movsb
enter
ret
arpl
stc
dec
push
jg
pop
push
push
push
in
adc
fnstsw
nop
leave
inc
xchg
test
cmp
push
outsl
stc
movsb
sub
arpl
sub
add
test
xor
pop
addl
pop
fsubr
xchg
popa
mov
es
push
mov
xor
add
or
xlat
sarb
pop
pop
cmc
inc
adc
mov
xchg
jb
std
outsb
inc
mov
inc
in
cs
mov
mov
es
js
movb
lea
and
loopne
ficompl
push
adc
cmp
lret
cmpsl
lods
pop
cmp
rcll
orl
leave
test
sbb
sbb
cli
sbb
pop
cwtl
mov
push
xor
cmp
ret
sub
pop
ret
daa
inc
xlat
jmp
push
cli
pop
mov
mov
add
movsb
iret
and
hlt
clc
jl
dec
mov
dec
add
push
push
test
jecxz
xor
sub
ja
cltd
mov
in
pop
dec
ss
adc
pop
mov
mov
push
cwtl
fiaddl
sub
call
jne
and
int3
mov
es
enter
fwait
add
ficoms
adc
fdivrs
aaa
mov
cmp
jae
push
jne
jp
push
popa
sbb
fnstsw
out
lock
aam
push
ret
and
repnz
dec
xchg
pop
inc
push
lods
pop
icebp
jae
xlat
jns
xchg
shlb
std
mov
shlb
shl
das
ljmp
mov
inc
fwait
in
fnstenv
lock
mov
aas
cli
cmp
test
xor
insb
jecxz
mov
push
dec
subl
in
aas
jge
adc
push
ret
mov
mov
jne
movsb
lcall
fsts
xor
adc
jmp
aas
stc
rorl
mov
add
push
dec
cld
loopne
jg
pop
or
loopne
jnp
popa
xor
dec
cld
jge
lods
pushf
popa
jno
mov
inc
dec
test
mov
xlat
pushf
cmp
fnsave
pop
bound
loope
mov
sub
and
outsl
aas
and
pop
push
push
inc
jnp
je
pop
and
push
dec
pusha
dec
xchg
repnz
data16
outsl
addb
ljmp
xor
sub
mov
inc
adc
xorb
xor
dec
idivb
jg
int
fcomps
xchg
repz
insb
adc
cmc
mov
sarl
adc
or
addr16
stc
jb
in
popf
or
pop
or
scas
ja
cmp
or
xchg
xchg
or
sub
gs
push
mov
bswap
pop
je
lcall
add
pop
mov
lret
clc
push
call
pusha
out
and
cmp
hlt
mov
hlt
mov
jl
ret
fnstcw
fmull
sarb
lret
mov
int3
int3
pop
jge
inc
mov
xchg
adc
xor
lods
and
and
pop
jg
dec
sbb
xor
jns
movsl
jnp
inc
mov
pop
lods
aaa
lahf
ja
pop
aad
adc
sbb
pop
mov
pusha
mov
lds
xor
mov
data16
negb
sub
push
dec
xchg
rol
dec
cmc
cmc
push
in
sti
sub
lods
and
arpl
cld
ret
in
popa
mov
mov
icebp
out
loopne
jge
fbld
and
mov
inc
xchg
mov
mov
leave
push
cvtdq2ps
mov
push
cmp
pop
sbb
inc
pop
xchg
adc
push
shl
lahf
rol
lea
mov
mov
jbe
cmpsl
pop
js
mov
or
mov
into
stc
mov
xchg
sbb
call
pop
xchg
jecxz
adc
lahf
push
xor
mov
adc
fidivl
data16
fldenv
test
ret
int
mov
ror
ss
inc
lods
scas
and
inc
inc
mov
enter
std
mov
mov
lea
sbb
mov
add
and
ret
pop
fs
adc
xlat
stc
movsb
adc
ret
ffreep
mov
xchg
adc
add
test
gs
mov
bound
inc
add
sub
pop
lahf
sar
aaa
push
xchg
dec
add
fimuls
mov
pop
push
xchg
sbb
pop
add
fwait
call
xchg
xchg
and
mov
clc
addb
arpl
jb
in
xor
or
ror
bound
jb
mov
cli
push
hlt
stos
jg
insb
out
dec
mov
filds
test
fsubrs
sbb
jl
mov
sti
les
lds
je
popa
in
mov
out
aam
cmp
stos
xchg
jo
sbb
std
ds
jge
jmp
clc
sub
xchg
frstor
jne
sub
sub
movsl
and
cmp
fldl
repnz
popf
adc
sarl
subb
push
aam
inc
push
xor
adc
sahf
je
por
sbb
add
int3
mov
push
sub
and
xor
clc
scas
or
imul
add
fidivrl
popf
sub
pop
cmp
jno
mov
into
or
mov
jecxz
out
xor
clc
mov
or
mov
sbb
dec
imul
iret
push
scas
bound
dec
push
inc
ftst
or
jbe
xchg
mov
adc
cmp
add
pushf
or
lods
mov
or
adc
inc
outsb
test
sbb
pop
shl
add
mov
imul
lds
loope
xor
mov
push
aam
es
sarb
push
mov
outsb
pop
adc
jl
jnp
sbb
les
sbb
and
pop
insl
rep
rorb
mov
and
fldcw
stos
jo
test
xor
icebp
cmpsb
add
xor
sbb
test
arpl
jg
sbb
jl
pop
sub
add
adc
mov
mov
lds
adc
mov
scas
inc
stos
test
andl
pop
sub
or
mov
in
jle
jge
into
xor
dec
fsubs
cli
lret
and
ds
lcall
adc
jbe
and
loop
std
dec
mov
cld
movsb
push
je
mov
and
pop
in
aas
fstpt
fldenv
inc
jmp
hlt
int
mov
test
push
sbb
adcb
sbb
loop
fldenv
insb
cmp
mov
push
nop
jb
imul
ss
scas
rorl
push
jge
pusha
cmp
add
cmpsb
and
mov
out
xor
mov
mov
leave
mov
imul
adc
fwait
in
xchg
jmp
icebp
and
insl
jmp
call
or
mov
jecxz
cmp
dec
aam
cmp
mov
movsb
push
aam
adc
in
push
pop
and
sub
sarl
imul
in
lret
mov
pop
mov
negb
jns
jmp
jge
jecxz
push
mov
iret
or
inc
pusha
data16
push
aas
dec
les
sub
jbe
adc
es
sbb
jecxz
jge
inc
mov
jae
xchg
and
ss
lods
fidivrs
test
fildll
rol
push
mov
xlat
push
inc
xor
insl
or
into
dec
cmp
push
aam
xchg
lods
add
repnz
test
xlat
push
std
jecxz
xchg
std
inc
hlt
sbbb
cmp
lods
add
or
mov
aad
int
fcoml
movsl
imul
jo
lret
xchg
jle
mov
aam
in
xor
and
call
and
pop
pop
enter
push
pop
jp
clc
add
jmp
mov
sti
mov
mov
subl
jp
cmpsl
aam
add
in
cltd
mov
fs
ja
mov
inc
es
cli
xor
bound
jl
adcb
jge
subl
dec
cwtl
movsb
aaa
ljmp
cmpsl
movsb
lret
es
dec
lock
push
rclb
inc
lea
icebp
jne
test
mov
out
mov
push
sbb
orl
cmp
mov
sarb
mov
ljmp
hlt
sbb
and
adc
cmc
bound
jge
xchg
ss
push
or
add
pop
outsb
jmp
into
sub
sub
je
loope
out
fsubs
cmc
das
stos
cli
in
cld
loopne
push
mov
fimull
push
sub
ret
cmpsb
movsb
cli
frstor
stc
test
out
xor
dec
jg
mov
pop
mov
xor
outsl
cltd
jo
xor
or
mov
imul
jp,pt
test
fbld
adc
repz
xchg
xchg
push
sub
mov
mov
pop
icebp
pusha
lods
movsl
inc
sub
out
jle
aad
inc
push
sbb
mov
pop
test
adc
faddl
je
or
sub
jae
xchg
mov
or
xor
xchg
stos
and
xchg
leave
jg
adc
mov
xchg
fstps
popa
jle
ljmp
rcrb
cmpb
outsl
mov
sbb
ds
mov
je
mov
les
pop
cmpsl
adc
or
arpl
jg
out
fs
notl
xor
das
mov
push
pop
call
inc
inc
mov
push
sbbb
jecxz
mov
mov
adc
lock
std
push
das
insl
lretw
sbb
xor
sbb
cmp
lret
cmc
dec
shl
insb
loopne
pop
out
dec
call
jb
lds
mov
dec
cmp
ds
xor
mov
test
scas
ret
sar
insl
incl
lods
imul
mov
out
push
repz
daa
push
stos
out
leave
xor
mov
sbb
out
mov
hlt
jl
and
movsl
and
sbb
inc
lock
adc
xchg
fildll
repz
pop
ss
das
mov
rcl
push
test
popa
pop
fcoms
jno
sub
push
mov
sbb
mov
and
jmp
lods
mov
scas
mov
jb
ja
dec
push
sub
pop
cmpsb
loop
addr16
dec
sub
add
sub
les
cld
das
aaa
aas
jne
jecxz
cwtl
icebp
xor
fs
add
shll
gs
cmpsb
dec
pop
xlat
into
or
mov
dec
xchg
cmp
test
push
arpl
repnz
pop
mov
test
aas
imul
fwait
xor
dec
sbb
xor
xchg
xorl
mov
imul
lahf
popa
jno
cmp
test
push
imul
cmpsl
out
adc
inc
xor
cld
xor
fs
xchg
push
leave
vpmacssdd
mov
ds
mov
jmp
mov
push
dec
mov
sarl
and
test
mov
xorb
pop
ficompl
out
in
jmp
sti
push
jo
cld
lret
jmp
shlb
sbb
jge
adc
pop
mull
in
cld
mov
inc
shll
repz
jmp
adc
sbb
jle
idivb
loop,pn
pop
sahf
xorb
into
adc
xchg
mov
lds
sbb
mov
pop
and
xchg
sbb
call
mov
jnp
int
movsl
orb
push
leave
cmp
jp
add
xchg
mov
jge
test
cli
les
mov
mov
ret
mov
push
mov
adc
outsb
jae
outsb
adc
pusha
or
cmp
pop
aas
or
xchg
jg
fs
jnp
mull
adc
xor
fmuls
loopne
aam
jno
gs
sbb
ret
in
pop
push
call
mov
lcall
test
push
xor
push
cs
cmp
outsb
leave
mov
filds
mov
fisubs
xchg
icebp
push
mov
sub
cmp
push
and
out
xchg
pop
aas
popf
mov
call
hlt
cwtl
les
fwait
outsl
mov
cli
inc
adc
icebp
clc
nop
mov
loope
in
dec
lods
add
add
lea
jge
fbstp
fldcw
xor
fildl
jecxz
test
xchg
insb
inc
mov
fwait
sub
sub
stc
es
sub
push
and
jne
sarb
jnp
arpl
pop
sub
aad
addr16
push
adc
jmp
adc
arpl
push
add
ret
xchg
push
movb
shrl
shl
xchg
outsl
pop
cs
push
es
cmp
dec
mov
inc
lods
push
fs
jp
mov
into
repz
or
lea
inc
jae
insb
js
shlb
jne
xchg
into
cmp
leave
xchg
and
stos
adcl
jge
aaa
cli
out
mov
adc
addb
movl
cmp
xchg
adc
pop
adc
add
sub
push
mov
push
add
and
mov
insl
loopne,pn
and
out
push
adc
in
or
pop
xor
or
popa
aas
push
aad
add
push
add
mov
xchg
scas
icebp
jecxz
adc
loopne
ret
je
push
push
pop
jle
insb
das
sbb
mov
lock
idiv
push
or
je
das
mov
sbb
je
mov
cmp
push
sbb
imul
int
or
leave
les
fisubs
xor
add
in
cs
loopne
add
lahf
add
icebp
push
adc
sub
push
sti
sub
das
jecxz
rcrl
in
dec
std
in
xchg
add
mov
cmp
inc
push
mov
pop
sahf
mov
into
data16
enter
jne
or
roll
mov
cmp
loopne
push
push
xor
aam
addr16
je
inc
iret
lret
cmp
call
ljmp
xor
xor
mov
in
cmp
es
dec
jmp
int3
lock
cmp
mov
add
cmp
add
dec
mov
ja
int3
dec
sti
arpl
sbb
jno
mov
cmp
fstl
push
lcall
aad
xor
les
fwait
mov
mov
pusha
inc
mov
lds
jge
seto
popa
hlt
mov
pop
mov
popa
out
andb
imul
mov
and
sbbl
decb
add
rep
add
xor
aad
pop
cwtl
jmp
scas
sbb
insb
mov
imul
dec
xor
and
enter
lret
or
mov
mov
sbb
jnp
rolb
mov
mov
and
mov
sub
hlt
out
cmp
repnz
stc
test
fcompl
sarb
sbb
and
mov
loope
movsb
ss
mov
push
jae
xor
ds
xor
sbb
mov
xor
jecxz
stos
fadds
dec
fdivs
lcall
out
and
xchg
stos
cmp
stos
and
imul
scas
fiadds
cmpb
xchg
jp
mov
xor
mov
dec
iret
das
inc
xchg
mov
cmpsb
adc
mov
fsubrl
mov
xor
cld
mov
jmp
loop
repnz
stos
es
lcall
fistpl
sti
test
repnz
add
pop
aaa
jns
mov
mov
jbe
lods
or
out
cli
pop
jge
push
lea
test
pop
loopne
sub
inc
mov
data16
jmp
fdivr
ret
xchg
or
jb
jge
adc
imul
pop
mov
dec
push
jg
push
push
imulb
or
adc
add
aas
pop
aaa
mov
lea
repnz
jg
dec
test
sbbl
jo
in
shrl
out
daa
pop
dec
rcr
pop
jb
ds
sbb
xor
shl
xchg
xor
popf
fnstcw
sti
out
jo
faddp
cmp
adc
mov
je
icebp
je
leave
inc
mov
paddsw
mov
jne
and
inc
inc
push
dec
fbld
adc
cld
ljmp
outsl
inc
sbb
or
mov
lahf
loope
out
adc
pop
imul
cmp
sahf
mov
mov
inc
xlat
xchg
mov
in
dec
fwait
mov
test
icebp
mov
adcl
mov
je
rcll
idiv
in
in
and
mov
push
sbb
and
lock
add
dec
shlb
es
cli
pop
loope
lcallw
adc
aad
addb
sbb
push
mov
xor
ja
jl
and
cli
xchg
cmp
mov
inc
push
aas
fiadds
mov
call
dec
push
or
or
mov
stc
mov
test
mov
fwait
jp
or
fldcw
out
cwtl
stos
addl
daa
orl
cmp
mov
ror
leave
mov
mov
test
xchg
sbb
in
dec
inc
adc
ffree
or
dec
lret
push
pop
fidivrl
mov
cmpsl
shr
jne
add
mov
fcompl
icebp
jg
cmp
pop
pop
psadbw
scas
inc
mov
pop
add
pop
shlb
pop
inc
jbe
enter
insl
sub
xchg
cli
dec
adc
sub
cmpsb
loope
sbb
push
adc
movsl
repnz
jbe
cld
imul
test
jns
mov
inc
aaa
jb
jae
add
rcrl
enterw
imul
sbb
cmc
loope
leave
sti
pop
mov
insl
sbb
add
test
push
imul
jge
mov
idiv
pop
enter
fistpll
mov
cwtl
cmc
sub
enter
roll
fcoml
pusha
popa
push
adc
xorl
inc
imul
popa
pop
sub
mov
movsb
pop
filds
add
sub
js
testl
mov
outsl
movsb
fimuls
push
and
mov
scas
jl
xchg
pop
bound
nop
mulps
repz
mov
cs
decb
inc
pop
jp
stos
push
pop
mov
push
cs
adc
lcall
lds
inc
jnp
shlb
cs
lods
mov
ret
mov
push
popa
js
or
xor
or
mov
fidivl
pop
movsb
adc
mov
add
je
xchg
movsb
aaa
or
sbb
dec
adc
in
pop
loop
iret
mov
xor
sub
sbb
loope
and
fmuls
lods
out
iret
cmp
cmpsb
xor
fcomps
cmp
add
pop
xchg
pusha
jl,pn
or
movsl
hlt
sub
mov
mov
push
enter
movsl
jle
sbb
mov
push
cltd
ret
and
cmpb
dec
or
xchg
jle
or
cli
shll
jne
inc
int
pop
or
lods
lods
ret
mov
jg
fxch
mov
js
xor
pop
call
mov
push
push
pop
or
sub
lds
arpl
inc
mov
push
test
inc
sub
cld
outsl
scas
inc
mov
cmp
daa
and
lahf
xor
xor
jbe
mov
and
cli
mov
adc
and
shrb
incb
sti
fisttpl
call
aaa
loopne
xchg
je
test
enter
movsb
mov
mov
mov
cmp
lret
aas
add
add
cs
int3
jnp
fs
fsts
icebp
aas
aaa
idivl
inc
mov
ja
xor
sub
push
in
repz
mov
xor
cli
adc
xchg
cmp
dec
mov
sub
sub
or
ret
xchg
push
cli
cmp
dec
pop
lcall
les
xchg
jle
mov
movsl
push
xchg
mov
cmc
mov
imul
negb
adc
push
push
sbb
icebp
in
lock
inc
push
lret
cmpl
into
xor
add
in
scas
aas
test
push
xchg
xor
cmp
dec
loop
pop
mov
push
dec
jnp
mov
aam
loop
fwait
xchg
mov
sbb
movsl
ficoms
lods
push
mov
int3
cmp
and
sahf
andl
stc
xor
and
aaa
rol
out
push
fldl2t
xor
mov
pushf
push
jecxz
es
add
xchg
sahf
test
inc
popf
hlt
repnz
and
jge
icebp
and
mov
or
xchg
push
cltd
xchg
jg
rcl
shrb
cli
stc
jo
jg
adc
js
and
dec
mov
fdivrs
add
ja
andb
and
rdmsr
out
es
out
aas
stos
mov
push
dec
pop
add
clc
fdivp
and
adc
lret
stc
mov
rol
pusha
int
loope
dec
popf
je
insl
fs
xchg
dec
enter
aam
es
std
jecxz
mov
push
mov
loop
cmp
push
hlt
cmc
push
cs
lods
push
nop
push
pop
jmp
loope
mov
or
sbb
mov
dec
ss
insb
insl
add
in
pusha
int3
jecxz
mov
adc
fsts
pop
in
inc
sbb
inc
rcrl
in
add
lret
mov
inc
dec
mov
pop
imul
add
xor
lea
loopne
jns
push
cmpsl
xchg
and
jecxz
and
xorb
popa
in
sbb
or
pop
xchg
lods
jge
xor
movsl
jge
popf
pop
js
pop
cltd
dec
pop
fdivr
rclb
adc
or
push
dec
sarl
inc
or
stc
push
jl
scas
xchg
mov
mov
jecxz
test
mov
shrb
inc
cmc
cmp
mov
jns
add
sahf
insb
loopne
repnz
push
sub
add
and
cs
ja
xchg
fisttpl
aad
cs
insl
fwait
xchg
adc
inc
pop
lods
fistl
cltd
adc
dec
gs
xor
sbb
fs
fiaddl
and
out
inc
cld
add
and
div
and
cmpsb
jbe
or
es
jmp
dec
xchg
or
ljmp
je
add
lods
gs
imul
add
push
pop
mov
mov
xor
jnp
and
pop
fbld
callw
scas
pop
jnp
inc
sbb
mov
pop
cmpsl
andb
vsqrtpd
cmp
xor
push
or
adc
aaa
enter
pop
insl
sub
jl
arpl
jmp
xchg
xchg
jae
mov
xlat
imulb
sub
sub
cmpsb
xor
pop
push
jnp
es
ret
pop
ficompl
test
test
mov
cmp
or
dec
mov
pop
mov
mov
rcrb
pop
orl
cld
mov
sti
fwait
or
cltd
xchg
scas
cltd
pusha
fildll
push
shrb
cmp
lahf
popa
out
imul
xorb
loopne
hlt
jbe
insb
add
int3
pop
sbb
add
mov
les
inc
out
daa
loope
mov
mov
nop
push
cmp
jb
insb
es
shll
xor
sub
fidivl
mov
pop
jg
xor
and
inc
add
fwait
push
push
add
sub
mov
popf
adc
or
push
mov
dec
mov
fisttpll
ret
and
jnp
pop
xor
push
leave
bound
jns
sub
jmp
stos
xchg
lods
loopne
sbb
jno
fsts
sahf
mov
jl
js
idivb
lahf
push
insb
sub
sub
sahf
out
add
mov
je
add
and
xchg
jmp
xor
or
mov
mov
test
pop
popa
cmp
es
or
push
inc
test
sbb
ds
push
push
jno
dec
sbb
xchg
inc
mov
mov
mov
inc
cltd
and
adc
xchg
pusha
cmc
in
lahf
hlt
push
adc
xchg
jb
out
aas
jle
mov
xchg
je
add
dec
cltd
mov
pusha
cmp
popf
daa
fs
inc
imul
xchg
addb
push
outsb
adc
jg
les
out
mov
cwtl
push
data16
adc
adc
mov
pusha
mov
dec
and
push
xchg
jnp
inc
mov
sub
mov
jmp
xor
cltd
cli
jbe
popa
ljmp
inc
test
pop
rcl
xchg
cmp
xlat
pop
sub
mov
and
ss
add
pop
push
mov
stos
mov
cli
xor
pop
mov
in
cmp
jbe
adc
sub
addl
mov
adc
popf
dec
xchg
inc
lds
bound
aad
cmpsb
aas
ret
cmp
out
jge
cmp
test
arpl
push
out
sub
fld
or
std
iret
rcr
iret
sbb
mov
inc
sub
ljmp
das
das
enter
or
loop
test
icebp
sub
sbb
xor
or
out
les
outsb
imul
dec
fcomps
imul
sbb
jae
cmpsb
cmpsb
outsl
push
fcomps
popf
incb
mov
xchg
ss
pop
adc
xor
lahf
scas
scas
push
pop
nop
inc
lret
pushf
and
sub
and
into
leave
ficoml
insl
add
ret
iret
data16
jge
sub
dec
xor
cmc
mov
into
push
nop
sub
push
ds
xor
xor
jbe
mov
jbe
sbb
lret
aaa
unpckhps
movsl
mov
dec
mov
test
int3
sbb
imulb
fisubs
sarb
sub
xor
aad
addr16
mov
test
jl
into
jae
ss
sub
imul
mov
bound
sti
push
loope
cmp
add
dec
leave
mov
in
mov
jmp
es
imul
mov
adc
pop
lods
scas
dec
mov
ret
or
pop
cld
mov
sbb
jne
imul
addr16
dec
outsb
out
cmpsl
jno
jmp
int
pop
outsl
ret
mov
mov
test
leave
stc
inc
push
pop
jl
push
sub
int3
jl
pop
xor
jo
sarl
out
js
leave
int
xor
inc
stc
dec
ja
push
ss
test
test
stos
clc
xlat
stos
popf
sbb
ffree
out
cltd
jbe
dec
push
mov
push
and
pop
mov
out
dec
out
push
leave
push
sub
jmp
xchg
or
loope
call
jg
sbb
pop
das
int
jg
inc
pop
mov
fildl
jno
or
std
loopne
mov
popa
mov
inc
xchg
popa
push
xor
push
sbb
lock
mov
scas
sub
push
pop
dec
mov
aaa
mov
jae
test
clc
out
mov
adc
cmc
inc
xchg
pop
pop
mov
andb
dec
scas
pop
mov
and
jae
lock
and
fdivrl
sub
jbe
sub
lea
and
sbb
push
adc
mov
jnp
adc
cltd
sbb
testb
scas
sbb
mov
mov
push
or
sub
test
pop
pop
emms
and
dec
sbb
jbe
pop
or
and
inc
mov
cmc
push
or
jne
inc
xchg
out
mov
xchg
mov
and
sti
xchg
pop
inc
and
rorl
mov
insb
in
mov
push
xchg
push
out
pop
nop
xchg
lea
shl
pop
mov
cmp
adc
clc
or
mov
mov
je
stc
sbb
mov
lret
mov
test
mov
xchg
push
ret
shrb
xchg
add
inc
adc
xchg
movsl
shr
test
jp
lds
lahf
rcrb
cs
aad
xor
push
ja
mov
sub
aam
mov
mov
pop
sub
sbb
addb
bound
mov
sti
xor
jecxz
cmp
nop
cli
fldt
aas
xor
mov
cmp
or
pushf
fnsave
shr
push
dec
jecxz
xchg
mov
push
xor
iret
mov
mov
test
jl
pop
push
mov
in
shr
mov
cmp
and
fldt
sbb
xchg
pop
repz
push
insl
mov
enter
push
lea
push
mov
or
iret
mov
inc
xor
dec
ss
comiss
decb
js
pop
add
cmc
pop
xchg
and
pusha
hlt
out
xor
xlat
mov
inc
xor
imul
addl
testb
cs
pop
shrb
sub
push
ja
ss
xor
pop
push
mov
mul
ds
mov
in
ja
jmp
sar
jns
cmp
out
js
or
mov
pop
inc
xor
outsb
mov
cmpsl
les
repz
flds
rcrl
mov
mulb
push
xor
rcrb
cwtl
adc
add
in
push
add
jno
push
icebp
test
mov
hlt
idivb
std
pop
cmp
fwait
pop
jno
or
mov
bound
jo
hlt
and
adcl
and
test
sub
add
xchg
inc
fidivs
gs
cs
push
xorb
adcl
ja
adc
xorb
xor
enter
xchg
and
sbb
cmp
rcrb
mov
xlat
and
gs
adc
pushf
xor
loopne
jne
jecxz
jae,pt
in
xor
cmpsb
cli
in
movsl
lods
not
cmp
test
stc
lock
adc
je
add
jp
mov
add
int3
push
int3
enter
mov
push
pop
add
jp
pop
push
mov
lahf
sub
fisubs
jns
xchg
jbe
mov
leave
int3
sub
sbb
sub
insb
jb
cmp
sbb
cmp
dec
push
ds
adc
xchg
push
enter
fistpll
xchg
adc
into
cmp
loope
test
call
test
adc
in
out
mov
jne
cmp
add
add
fistps
sbb
pop
cmp
je
cmp
in
cmp
adc
roll
inc
lds
inc
loop
sbb
adcl
pop
or
sarl
clc
jne
arpl
xchg
jne
nop
mov
test
or
clc
sbb
jne
pop
dec
xor
inc
mov
shrb
or
lahf
xor
lock
addl
push
out
xor
js
cs
in
out
adc
movsl
in
repz
add
push
pop
mov
push
movsl
xchg
fiadds
movsl
pop
jne
ss
jno
sbb
pop
and
inc
push
sub
or
stos
lcall
lock
data16
dec
push
gs
xor
insl
push
cwtl
into
xchg
movsb
or
mov
rcrb
cld
std
rcll
or
adc
or
dec
dec
mov
data16
rcrl
ret
divl
das
xchg
sahf
jecxz
sbb
nop
jl
sbb
mov
inc
js
in
mov
andb
xchg
jge
and
dec
adc
cmp
mov
push
loopne
xor
rorb
sbb
std
xchg
rcrl
std
rcrb
enter
out
sahf
imul
enter
lea
mov
arpl
sub
addr16
sbb
push
push
jb
hlt
clc
sbb
shl
or
mov
fisubs
out
iret
call
cmp
fmul
ds
into
mov
push
mov
push
stc
mov
push
lahf
outsb
inc
or
ret
daa
in
push
xchg
mov
cmc
fldenv
pop
repnz
inc
fsubs
insb
jnp
push
mov
dec
xor
test
scas
rolb
push
outsl
lcall
push
push
scas
test
call
and
mov
jbe
in
icebp
pop
lret
dec
cld
pop
push
jae
mov
mov
pop
push
popa
aas
sub
inc
cmp
lock
xor
sub
sbb
add
movsl
xor
inc
lock
imul
dec
inc
data16
jle
mov
std
and
jmp
mov
adc
add
leave
das
dec
inc
repz
pop
mov
movsl
add
imul
sbb
jo
and
jns
mov
xchg
cmp
fsubrs
nop
mov
ja
mov
outsb
add
ds
arpl
jmp
cmp
cmp
sbb
push
xor
mov
jecxz
cmp
adc
xor
jb
lock
xor
adc
repz
movsl
mov
pop
out
pop
out
mov
das
andb
jns
mov
mov
cmpsb
stos
in
push
adc
push
and
xor
sub
push
cmp
pop
and
xchg
aad
cmp
xchg
daa
insl
fildll
push
lock
sub
int
jl
mov
mov
pop
in
sbb
and
adc
push
sub
loop
mov
add
out
lahf
cmp
mov
xor
jne
pushf
arpl
sbb
clc
mov
mov
mov
int
pop
and
add
imul
mov
das
shl
sbb
es
stc
adc
push
jo
add
mov
bound
jne
mov
adc
push
jp
lahf
and
aad
das
and
pushf
std
pusha
fisubrl
pop
addr16
mov
scas
mov
enter
xor
ror
ret
jecxz
sbbl
mov
orl
mov
rcrb
xchg
stos
mov
jecxz
test
or
jns
fistpll
jl
jno
setbe
arpl
sub
jmp
push
cmp
sub
cmp
popa
push
pop
aam
pop
inc
clc
rcll
sbb
iret
int
lret
mov
insl
jns
loope
xchg
xor
pushf
lods
loop
ret
add
pusha
xor
aam
or
jne
push
rolb
cmp
das
xchg
cmc
sahf
subl
jg
push
inc
dec
test
ret
repz
jne,pn
das
imul
movlps
cmp
add
sbb
adc
pop
insb
push
out
mov
and
roll
vpavgw
jnp
push
sub
rcl
add
or
xlat
mov
pop
or
das
adc
and
dec
push
inc
iret
cmp
leave
leave
js
mov
or
xchg
mov
je
loop
adc
pop
cmc
bound
stos
sbb
xor
movsb
adc
adc
or
and
add
sbbb
popf
xchg
jo
or
fiadds
and
mov
xor
push
adc
rolb
sub
pushf
lea
aad
call
pop
movsl
push
cmc
sbbl
gs
dec
rcrl
mov
dec
inc
sub
sbb
icebp
stos
fdivs
pushf
cmp
int3
and
pop
out
leave
in
in
sbb
mov
jle
test
stos
dec
scas
adc
adc
jmp
and
jecxz
rolb
aad
xchg
fadd
std
outsl
dec
add
jae
pop
lods
dec
idivl
sbb
ret
dec
xor
inc
xor
push
jecxz
xchg
ss
add
dec
pop
mov
add
sub
dec
cmpsb
cmp
cld
dec
arpl
jns
pushl
sbb
mov
sub
mov
icebp
dec
sub
and
dec
jg
inc
mov
iret
lods
adc
dec
push
addr16
xor
mov
adc
shufps
pop
xor
pmulhw
outsl
out
jmp
inc
je
icebp
sub
aad
xchg
xlat
mov
sub
push
stos
pushf
jno,pn
xchg
xchg
jno
push
mov
ret
nop
inc
xchg
xchg
and
imul
ret
lds
xor
out
aas
or
aaa
add
clc
jmp
sbb
pop
aam
cli
mov
pop
push
int3
xor
mov
movsl
imul
sarb
fs
jge
outsl
push
add
dec
or
lret
dec
lret
xlat
mov
pusha
adc
in
loope
add
out
mov
add
mov
xor
test
aad
inc
jb
nop
xlat
ss
xchg
lods
sub
nop
and
xor
mov
sub
inc
roll
addb
int3
xlat
rcrl
jno
push
lds
xor
adc
xor
aas
push
sarb
ja
addr16
xchg
ja
out
or
dec
test
add
xchg
test
mov
lods
mov
mov
push
dec
insl
shrb
xchg
pop
scas
imul
mov
lea
xor
sub
sbb
push
mov
jmp
fldcw
dec
pop
jbe
fidivl
xchg
fdivrp
aas
xchg
dec
fwait
movb
jnp
inc
adc
push
add
and
pop
clc
xchg
ret
xor
push
mov
les
mov
push
inc
in
lahf
in
and
addb
mulb
cwtl
int3
mov
xor
movsl
mov
jb
and
pusha
int3
mov
mov
leave
aas
push
bound
cmp
adc
scas
rolb
test
test
stos
ret
push
mov
int
fidivrl
jb,pt
mov
inc
gs
inc
xor
das
and
and
sbbb
add
pop
mov
or
sub
cmp
and
or
sub
repz
add
repz
ja
pop
and
pop
subl
aas
pop
out
lods
and
mov
loopne
and
sbb
ret
into
in
sbb
scas
loopne
sub
rclb
dec
pop
jb
xor
or
ja
and
out
fidivrl
pop
cmp
xchg
in
sub
pop
out
daa
imul
test
xchg
lods
pop
and
pop
or
dec
mov
push
out
iret
mov
cli
pop
lea
push
mov
dec
cmc
call
sahf
inc
js
dec
scas
addl
pop
mov
mov
bound
xchg
lcall
loope
insb
cmp
or
maskmovq
das
mov
adc
adc
sub
cmp
push
fucom
lock
fwait
lods
and
jae
mov
xchg
or
xrelease
or
mov
cmp
mov
rorb
xchg
outsl
mov
dec
mov
aaa
add
jmp
les
pop
xchg
jecxz
mov
popf
adc
jns
xchg
mov
daa
jo
ret
sbb
mov
jns
push
mov
sbb
bnd
jnp
dec
ret
or
add
pop
out
les
pop
mov
outsl
pop
fists
mov
aam
cmp
fs
enter
jo
sbb
pushfw
scas
or
out
imul
cmp
xor
inc
loopne
jle
aam
aas
sbb
test
sub
pop
fcmovbe
adc
inc
cmc
mov
cmp
pop
repnz
cmp
sbb
jnp
mov
inc
mov
test
lods
addr16
lahf
into
and
call
insl
or
add
jae
jne
jle
push
mov
mov
gs
sbb
addr16
loope
testb
into
push
in
cmc
aad
scas
push
scas
mov
sbb
insb
test
ret
ja
scas
jo
fisttpll
fucomi
out
inc
aas
inc
leave
and
daa
daa
jg
sbb
stc
push
stos
insb
push
mov
sbb
repz
adc
outsl
movsb
test
test
ss
pop
out
repz
mov
xchg
pushf
jle
lods
out
test
in
mov
imul
push
movsl
pop
xchg
mov
rolb
mov
pop
push
out
mov
cld
push
jb
cltd
push
jmp
jmp
push
nop
aad
lds
dec
xchg
pusha
addb
sub
push
add
push
jbe
jno
xchg
repnz
ffreep
mov
lea
or
mov
xorl
ljmp
fdiv
dec
mov
roll
push
cmp
loope
mov
sub
or
xor
pop
mov
sbb
xchg
pop
and
outsb
xchg
jle
dec
cmp
push
out
mov
nop
dec
push
sbb
pop
shrl
insb
adc
sbb
cs
loopne
pop
sub
sbb
std
outsl
int
xchg
jne
mov
cmp
sbb
inc
xchg
addr16
fdivr
xor
xchg
mov
mov
push
push
or
loopne
filds
outsl
filds
cli
lret
inc
or
aam
inc
scas
ja
bound
or
repz
cmp
jbe
sarl
cs
push
inc
ljmp
lock
lock
aas
fstpl
aaa
movsl
dec
push
xor
cmp
and
mov
mov
ss
mov
insl
inc
scas
sbb
pusha
fucomi
or
or
test
ja
xchg
out
aad
movsl
daa
rorl
inc
dec
cli
adc
scas
push
lret
jg
jne
mov
push
nop
sbb
ret
adcb
es
or
push
pop
lds
mov
sub
dec
jno
adc
decl
mov
mov
cmpsb
jbe
clc
cmp
pop
or
pop
sbb
and
pop
add
lcall
negl
xlat
inc
out
out
int
lds
and
mov
cld
mov
das
daa
cmp
add
fisubrs
mov
pop
xchg
pop
or
std
mov
xchg
pushf
fsubrl
ljmp
daa
les
stos
adc
dec
leave
xchg
push
push
sbb
mov
pop
out
rcrb
outsl
inc
sub
loop
or
nop
mov
dec
sub
stc
xor
mov
and
jg
mov
cmpsb
inc
add
xor
cwtl
sbb
push
or
sahf
adc
pop
mov
inc
jecxz
pop
lods
ljmp
gs
and
out
out
test
jg
xchg
lahf
push
xlat
mov
xorl
stos
mov
cmp
in
shll
fs
sbb
mov
shrb
cmp
lea
scas
les
lret
imul
xor
shrb
vmovapd
test
jp
int
lea
imul
mov
xor
fmull
js
es
and
aaa
sar
pushf
fidivrl
dec
cs
js
shr
orl
cltd
xchg
ret
and
shll
add
add
xchg
pushf
popf
jl
add
cli
movsl
mov
pusha
sub
out
fdivl
dec
popf
mov
mov
mov
shl
ret
jo
dec
xchg
push
lock
or
pop
mov
inc
fisttpll
mov
add
ljmp
insl
ljmp
bound
pinsrw
jmp
push
push
pop
and
jno
repnz
fwait
cwtl
push
lock
test
push
cmpsb
jg
daa
mov
and
xor
sbbb
inc
stos
cs
in
dec
mov
movsl
mov
cmpl
mov
mov
dec
repz
push
lcall
push
xor
adc
push
and
adc
fs
pop
dec
addl
js
pop
xor
cmp
into
jne
jae
xchg
lcall
ret
bound
cltd
sarb
xchg
movsb
xor
popf
aad
cmpl
aad
fs
or
jmp
or
push
cmp
xchg
pop
out
or
jmp
mov
adc
sbb
jbe
mov
lock
scas
insb
cmp
inc
and
jl
insb
aam
popf
enter
arpl
jmp
popf
mov
or
and
jns
xchg
xchg
jmp
stos
sub
rolb
sahf
in
pop
js
insb
cmp
mov
xor
xchg
cs
lret
adc
and
cmp
shll
mov
lret
and
jns
pop
mov
xchg
imul
jb
or
pop
xchg
ret
daa
call
add
lods
lret
roll
dec
mov
int3
cmp
inc
jno
inc
xchg
and
insb
sub
pop
outsb
inc
inc
and
add
push
push
dec
ret
pop
call
out
mov
jbe
fnstsw
mov
test
add
inc
cmp
cmpsb
out
mov
cmp
enter
cmpsl
cli
and
sub
repnz
mov
xchg
fimull
lahf
xchg
fdivp
lret
sbb
lds
in
mov
cmp
dec
sub
or
sbb
mov
or
mov
xor
mov
out
dec
ljmp
pop
clc
jnp
xchg
ffreep
cmpsl
adc
dec
out
leave
and
or
loopne
lock
cmpsl
pop
loope
jl
in
mov
out
xchg
bound
cmp
lret
or
mov
repnz
sub
dec
clc
ljmp
stos
push
orb
outsl
xor
jo
xor
inc
push
lods
and
push
mov
loope
fsubrs
sti
dec
adcl
fldcw
adc
mov
test
and
push
inc
addl
movsb
cmp
pop
sahf
fbstp
test
jge
adc
nop
das
insl
push
fwait
lods
ret
fcmovbe
das
test
stos
mov
xchg
dec
lret
inc
adc
outsl
lret
sub
dec
xchg
mov
xchg
xchg
pop
jecxz
mov
sbb
aaa
fs
cmp
in
das
or
out
push
dec
xchg
aas
movsb
jbe
cmp
inc
push
ret
out
ficoms
mov
dec
dec
jl
inc
inc
arpl
mov
in
inc
xchg
dec
and
in
inc
cmpsl
in
cli
mov
or
ffree
fdiv
fsubrs
xchg
addr16
inc
xor
sbb
lea
push
add
iret
enter
push
insb
mov
test
insb
lock
jle
lods
push
popf
jae
nop
popa
aaa
shll
push
shlb
sbb
jbe
addb
cmpsb
notl
cmpsb
inc
mov
xor
pop
in
insl
push
inc
push
stos
jno
inc
aaa
movsb
ljmp
sti
cmp
or
mulb
inc
jle
add
xchg
out
mov
test
fldt
dec
icebp
jae
cmpsb
or
xchg
int
sub
cmp
pop
xor
andl
loope
and
mov
add
inc
loope
dec
aam
pop
jmp
in
xorl
inc
jae
aam
aad
int3
nop
adc
jo
xchg
xchg
xor
push
fistl
xor
jmp
add
pop
popf
ljmp
push
bound
ja
arpl
test
pushf
jmp
pushf
mov
stos
aam
subb
orl
push
into
mov
jmp
jo
xchg
sti
repnz
add
xchg
jo
lods
mov
pop
mov
mov
lcall
movsb
sbb
cmp
scas
fnstcw
push
dec
pop
mov
loopne
lock
jnp
lret
dec
and
inc
mov
scas
push
xor
in
iret
and
stc
dec
out
jb
insb
scas
dec
lea
lret
outsl
mov
arpl
insl
test
popf
adc
cmp
sbb
add
cmp
shlb
sbb
aaa
jmp
add
push
int
mov
sub
cld
into
push
outsb
dec
fldenv
dec
and
in
jae
pop
call
iret
clc
dec
push
ja
cmpsl
dec
int
dec
xor
ja
xchg
shll
add
addr16
lret
data16
or
repnz
and
cmp
adc
adc
lcall
shlb
push
inc
jbe
sub
mov
jno
pop
dec
mov
jl
and
or
mov
jnp
xor
stc
movsl
or
fldl
push
js
push
inc
not
mov
mov
hlt
test
cli
add
mov
hlt
jns
js
shl
and
aaa
out
cmc
xor
sbb
cli
sub
std
mov
jecxz
addl
or
sbb
xchg
or
sbb
int3
mov
loope
cmpsl
iret
inc
or
leave
add
jle
ljmp
aaa
xchg
lock
iret
icebp
ficomps
dec
inc
mov
pop
push
sbbb
nop
ljmp
roll
pop
in
sbb
movsl
push
das
sarl
popa
mov
sarl
jb
test
pop
loop
into
sbb
and
or
and
xor
imulb
imul
add
dec
sbb
call
test
stc
mov
adc
imul
stos
mov
cmpsl
push
aam
out
inc
inc
test
arpl
mov
repnz
push
fmulp
jbe
or
xlat
into
cld
pop
adc
pop
pop
ror
dec
jl
sahf
or
or
movsb
and
cmp
cmc
or
imull
rcrb
fmul
push
xchg
mov
xchg
es
adc
leave
in
sbb
xor
mov
push
test
adc
cmp
cmpsb
hlt
sub
dec
mov
jecxz
push
inc
sub
fwait
add
xchg
cmpl
mov
cmpsb
insl
data16
outsl
pop
mov
jae
mov
xchg
pop
sbb
push
xlat
adc
cltd
xor
ja
das
ss
test
dec
xor
mov
fcompl
jecxz
iret
push
dec
add
gs
jnp
inc
imul
test
popf
mov
sbbl
adc
dec
or
add
cwtl
push
into
out
push
dec
adc
xchg
or
mov
call
cli
mulb
fadds
jmp
and
xchg
repnz
fisttpll
dec
dec
stos
movsl
sbb
fsubrs
mov
inc
mov
imul
mov
sbb
mov
inc
mov
ret
add
insl
mov
imul
jge
movsb
inc
sti
mov
imul
push
lret
and
bound
push
int
or
sub
ljmp
mov
loopne
cmp
and
xor
xchg
add
inc
dec
out
test
jo
jno
and
sti
fbstp
cs
push
xor
push
lahf
aam
cmp
jmp
iret
lea
stos
outsb
iret
xorb
pop
sub
pop
mov
insb
sbb
mov
test
adc
pop
es
lcall
xchg
push
sbb
out
mov
cmpsb
aaa
ljmp
jns
inc
bound
pop
mov
lret
or
lret
loop
hlt
jbe
or
lock
cmpsb
jge
scas
or
jmp
mov
into
push
mov
mov
cmpsb
sub
jmp
divl
and
icebp
and
or
stos
jnp
cwtl
adc
add
test
sbb
dec
int3
lods
subb
mov
jb
addb
ss
mov
push
imulb
in
add
jl
cwtl
jp
orb
push
mov
pop
mov
rclb
mov
xchg
mov
mov
push
xchg
outsb
inc
les
lods
lds
mov
fidivl
repz
xor
push
mov
mov
sub
mov
xchg
sti
push
cmp
mov
mov
dec
arpl
sub
cmpsl
mov
inc
mov
imulb
in
hlt
insb
aaa
les
pop
xor
cmpsl
lcall
sahf
das
decb
pop
in
xchg
sub
or
add
jge
mov
iret
cmp
les
mov
outsb
xor
sub
sgdtl
out
lods
xchg
lea
push
push
pop
sahf
mov
dec
jnp
xor
nop
xor
rclb
inc
sbb
sbbb
mov
mov
mov
push
cmp
jp
dec
sbb
xor
stos
inc
sbb
rcr
imul
mov
push
addr16
cmc
adc
jle
sub
stc
adc
ficomps
xchg
pop
stc
mov
mov
push
lcall
daa
sub
jmp
jge
ja
mov
in
mov
ret
inc
mov
test
ret
cmpsb
in
mov
xchg
stos
rcll
je
jge
pop
inc
mov
aaa
outsb
repnz
in
sti
pop
sti
cmp
dec
mov
popf
add
jg
add
mov
pop
clc
or
cmp
cmp
out
sbb
addr16
pushf
inc
inc
addr16
pop
sbb
sbb
and
cs
cltd
sub
imul
enter
pop
pushl
pop
sub
xchg
pop
in
inc
aas
push
lock
inc
mov
jns
inc
jle
xor
inc
sbb
mov
adc
or
jp
fistpll
lret
ror
dec
xlat
or
xchg
leave
xlat
int3
sbb
add
cmp
push
xchg
hlt
inc
mov
in
jbe
pop
aaa
lods
in
lea
xchg
sub
mov
push
pop
jge
leave
adc
inc
xchg
lret
shlb
dec
scas
out
or
add
push
mov
push
jbe
xchg
adc
pop
aaa
lahf
xchg
xchg
xor
and
out
fistl
jle
daa
lret
in
in
in
xor
pop
pop
add
xchg
xor
sbb
mov
mov
das
imul
mov
xchg
daa
push
pcmpeqd
cmp
xchg
cmc
mov
xchg
cmp
shlb
sbbl
std
mov
imull
cs
mov
pop
out
imul
pop
xor
dec
xor
jae
xor
or
arpl
adc
mov
pop
int
ja
hlt
mov
bound
dec
leave
pop
xchg
or
xor
mov
inc
aad
push
aaa
mov
adc
adc
iret
flds
and
dec
sti
xor
sbb
dec
pop
xchg
xchg
out
mov
xchg
mov
jbe
addr16
inc
sub
std
enter
je
xchg
jecxz
jno
movsl
cmp
sub
mov
cmp
icebp
xor
pop
push
cli
sbb
lods
sub
mov
loope
pop
idivl
stc
ficompl
cs
jg
into
adc
jg
or
fstpl
loop
add
pop
xchg
gs
scas
cltd
outsl
mov
insb
lods
cmp
xlat
cmpsb
test
sti
enter
jbe
xor
or
imul
lods
push
mov
stos
int
sub
dec
in
js
out
and
lret
insb
ja
pop
lcall
ja
andl
cmpsb
mov
sub
popf
pop
xchg
paddb
mov
mov
xchg
icebp
les
shlb
or
cli
xor
dec
jns
pop
xor
xor
outsl
xchg
cmp
or
pop
sub
mov
and
lods
dec
je
push
cmp
adc
fs
mov
sub
and
mov
sbb
add
aam
pop
insl
inc
out
sub
andl
cmp
mov
cwtl
popa
jo
dec
or
sbb
cmp
cmpl
clc
pop
gs
lock
loope
add
or
mov
int3
push
fisubs
push
add
insl
and
mov
jg
es
or
dec
lods
out
cld
daa
shll
incb
dec
push
xchg
or
push
stos
cs
movsb
pop
xor
clc
xor
add
pushf
xor
popa
fwait
inc
pushf
pop
sarb
xchg
inc
repnz
in
jae
lds
inc
std
lods
inc
jo
push
jp
js
sub
xor
out
and
mov
test
or
mov
inc
mov
idivb
pop
fnstenv
add
sbb
mov
pop
inc
ds
fwait
out
das
mov
rep
lods
insl
mov
pusha
lds
int3
mov
outsl
in
imul
mov
push
cmp
orl
inc
dec
pop
push
lret
punpcklwd
daa
push
stos
push
adc
stos
mov
jp
push
xchg
ds
add
mov
or
es
pop
test
test
xorb
sub
xchg
push
push
loope
xchg
xrelease
xchg
hlt
jg
xchg
and
les
jns
or
cmpsb
mov
ja
and
mov
fistpll
test
mov
inc
mov
test
xor
mov
std
mov
testl
cmp
fs
out
mov
or
xchg
clc
js
sbb
call
std
aad
std
push
in
add
push
popa
pop
popa
aad
cmpsl
icebp
xchg
test
movsl
test
lods
xchg
fnstsw
popa
cmp
cwtl
cli
loopne
mov
and
in
mov
fucomip
sbb
out
xorb
fcmovnbe
aad
and
adc
ret
loopne
cli
cmp
xchg
sbbb
jae
out
or
push
pop
popl
dec
cmp
and
pusha
sbb
ja
daa
test
sbb
addb
icebp
pop
repz
lahf
out
jl
stos
in
lods
out
inc
and
inc
ja
mov
add
pop
push
daa
sub
mov
aas
xchg
mov
cmp
inc
into
mov
fs
dec
jp
les
nop
loopne
push
mov
insl
dec
mov
jo
ja
cli
adc
popl
lcall
sub
cmpsl
and
xor
pusha
push
loop
adc
mov
mov
xchg
jle
sub
push
jns
xorb
sti
loope
lods
push
out
adc
movsb
aas
loop
mov
scas
test
push
jo
cmc
call
popf
cmp
cld
add
orb
data16
dec
jmp
orw
divl
aas
push
jg
movsl
xchg
lods
adc
lea
push
dec
mov
adc
push
movntps
es
sbb
and
lret
mov
loop
push
push
outsl
push
sub
pop
xor
mov
dec
jbe
mov
cli
xchg
adc
mov
and
pop
movsb
sbb
testl
sbb
lahf
mov
mov
int3
ljmp
adc
jl
in
lret
mov
sbb
fstp
add
xchg
jno
pushf
punpckldq
enter
add
mov
inc
nop
inc
jmp
sub
scas
mov
scas
mov
inc
lret
faddl
hlt
das
sbb
add
jmp
mov
lret
xor
stos
fs
outsb
mov
jge
in
mov
or
and
inc
mov
inc
mov
adc
jae
inc
push
xchg
and
cmp
or
xor
jo
xchg
daa
fbld
push
sti
inc
adc
pusha
xorl
hlt
mov
incl
xor
xor
imul
inc
cmp
test
subl
aam
jo
addr16
cmp
inc
mov
mov
mov
imul
inc
mov
jno
in
inc
ds
sub
popf
in
push
add
bound
dec
out
rcrl
test
sarl
outsb
dec
ret
pushl
xchg
cld
adc
fsubrs
or
into
sub
adc
mov
mov
out
adc
jnp
pop
add
adc
shl
sub
std
test
sahf
enter
adc
and
out
fwait
sarb
mov
rcr
fwait
lods
mov
shll
mov
xor
pop
negb
inc
in
ret
sbb
in
movsb
cltd
repnz
les
pop
xchg
nop
mov
setle
icebp
jae
ficoms
or
fdivp
adc
dec
loope
jmp
jmp
mov
cmp
lods
cmp
mov
movb
enter
pusha
imul
push
idivb
mov
jge
das
mov
nop
mov
or
mov
icebp
inc
insb
mov
std
movsb
mov
push
jo
out
inc
xchg
adc
push
xor
mov
xchg
out
mov
xchg
mov
mov
out
lods
mov
sbb
jl
lea
in
cmpl
jnp
sub
fbld
pop
enter
pushf
cmp
incb
sbb
in
pop
sahf
inc
out
mov
lock
ja
jnp
arpl
sub
cmpsl
jge
cld
mov
sahf
cmc
mov
mov
loop
inc
pop
jl
in
ficoml
lret
outsl
fwait
dec
shr
popa
cwtl
nop
adcb
dec
mov
and
aaa
push
addr16
jmp
mov
fiadds
fiaddl
fidivrl
mov
add
psrad
push
xchg
dec
cmpsl
clc
es
fstpl
lock
sbb
pop
in
popa
repz
ret
roll
sub
jno
mov
xchg
dec
or
add
addl
lahf
mov
decb
cmpsb
jle
push
into
fcmovbe
sbb
cwtl
popl
xchg
ret
cmp
mov
mov
xchg
xchg
cmpsl
push
ret
sub
and
xchg
in
or
or
or
and
ret
es
adc
hlt
pop
adc
mov
mov
sbb
pop
or
scas
neg
popf
mov
jmp
cld
icebp
mov
les
sti
and
pop
lock
push
mov
xchg
imul
push
test
outsb
mov
pop
add
scas
push
jnp
addr16
repnz
cmp
std
ret
fcoml
sub
popf
fists
mov
inc
inc
fildll
jb
test
imul
mov
xchg
test
fidivs
loopne
jmp
int3
jae
sub
lcall
jo
jecxz
stos
push
cli
or
mov
mov
cmp
daa
mov
loop
push
xchg
sub
add
mov
jge
mov
pop
ja
sahf
seta
pushf
jnp
mov
jge
out
loope
push
cmp
jecxz
pop
fwait
adc
add
fcom
mov
shrb
mov
xor
and
xchg
or
test
cmc
cmp
add
fxch
ja
shrl
test
sar
insb
push
ret
les
push
mov
xor
mov
sbb
mov
bound
cmpsb
cltd
dec
in
xchg
push
mov
adc
es
out
mov
xor
in
cmp
jle
pop
mov
push
push
xchg
add
sbb
lods
dec
jg
xchg
pop
enter
ss
ds
mov
ret
into
in
out
lret
stos
repz
jbe
mov
sbb
and
adc
mov
pop
repnz
aas
jae
sahf
push
cld
cltd
stos
pop
lods
adcb
lahf
sti
stc
in
popa
lock
and
pop
out
adc
rorb
adc
adc
pop
sub
dec
int3
pusha
or
and
dec
xor
jae
xor
rcrb
cmp
mov
sbb
iret
aad
fiaddl
pop
xchg
lret
cmp
test
mov
int3
mov
adc
or
inc
mov
aaa
jo
pop
movsl
mov
lret
aam
clc
mov
jp
mov
lea
jne
dec
jge
sub
mov
aaa
movsl
daa
mov
cmp
cmp
jp
dec
mov
fwait
xor
dec
out
adc
clc
loopne
mov
adc
cltd
xchg
cs
adc
test
mov
test
xor
mov
ljmp
ret
ss
imul
cmp
sub
cltd
incb
test
mov
popl
jecxz
pop
subb
je
mov
mov
adc
sub
sub
cmp
or
repz
rcrb
mov
inc
and
fists
rorb
lods
mov
rolb
jg
clc
cmpsb
nop
push
mov
dec
mov
jne
add
cwtl
movsb
sahf
stos
frstor
aaa
sbb
cmp
ret
pop
loope
jp
out
cmc
mov
std
inc
adc
call
loopne
fwait
pop
push
sbb
cmp
ror
nop
loop
push
stos
dec
adc
inc
xor
cli
cld
lcall
xor
cmpsb
sub
test
sub
dec
les
clc
idivl
cmc
imul
xor
mov
adc
pop
inc
sbb
inc
aad
or
clc
mov
cltd
loope
pushf
sub
mov
xchg
std
hlt
leave
movsb
jge
hlt
ret
mov
stc
xchg
jecxz
aas
notl
jne
out
std
xchg
jo
test
out
mov
les
je
out
pop
jnp
xor
and
xor
xchg
sbb
xchg
adc
or
es
rolb
gs
stos
xchg
cmpsl
mov
lds
shr
lahf
pop
insl
in
test
or
jl
mov
add
cmpsb
mov
sahf
fimull
mov
test
insl
shlb
repnz
sub
repnz
jmp
rsm
and
xorl
push
pop
jb
mov
pop
cmp
push
loopne
push
mov
hlt
movsb
inc
test
std
jp
sub
push
xor
addr16
pop
sub
lahf
mov
lahf
aam
sarb
lret
adc
fnstcw
inc
sbb
mov
jne
mov
jns
addr16
scas
cmp
pop
jecxz
or
repnz
mov
andl
mov
aad
movsl
daa
aad
jbe
mov
jmp
adc
rcll
fstpt
or
rcrl
insl
pop
cmp
mov
push
mov
xchg
fcomip
or
xchg
popa
mov
mov
cmp
dec
leave
and
icebp
aaa
movsl
add
mov
jp
insl
mov
leave
add
mov
cmp
dec
icebp
rcll
jmp
mov
push
push
outsl
pop
xor
das
or
cmp
add
pop
sbb
fistps
lods
jae
sbb
cmc
sets
mov
rcr
cwtl
lock
mov
sub
fdivr
xchg
jmp
lret
movsb
jg
push
cmp
mov
xor
push
push
addr16
out
test
push
je
jmp
pop
test
insl
jbe
jle
mov
insl
pushf
imul
sbb
sbb
xchg
mov
jae
test
jne
lret
and
das
cmp
movsb
mov
xchg
push
jmp
sbb
gs
pop
mov
jmp
es
add
sbbb
and
sbb
and
jg
testb
ret
or
mov
mov
xor
jg
or
mov
xor
mov
add
sbb
adc
cs
out
and
divl
aas
mov
or
jbe
mov
lods
xchg
dec
call
cld
cwtl
pop
jae
inc
nop
mov
ret
push
cmpl
pop
inc
scas
add
mov
cmp
repnz
cs
lret
adcb
addb
pop
lea
jle
int
xchg
cltd
fisubs
js
jnp
leave
or
mov
call
pop
jecxz
out
gs
add
pop
add
fbstp
sahf
adc
sbb
imul
push
sti
add
xchg
xchg
sbb
arpl
lret
ljmp
mov
inc
mov
jbe
xor
js
mov
jo
out
in
cs
icebp
lock
pop
adc
lods
dec
pop
sub
rclb
add
sarl
sti
or
add
out
outsb
into
icebp
scas
lock
shlb
sbb
rcrb
add
lods
xchg
push
mov
xchg
stos
dec
sub
push
in
push
les
out
les
push
cwtl
test
cmpsl
lods
xor
lret
stos
aaa
xor
and
mov
aas
faddp
mov
es
dec
scas
sbb
rclb
rol
pusha
mov
hlt
push
adc
stos
es
push
push
pop
jp
arpl
lret
inc
lock
pop
inc
jp
jbe
and
lret
mov
shrl
lock
popf
fwait
adc
cmp
add
add
arpl
test
nop
mov
ss
dec
sbb
mov
xchg
test
mov
cmpsb
pop
pop
pop
ja
sbb
adc
nop
pop
cmpsb
push
mov
scas
and
lea
jns
arpl
cmp
movsb
sub
sbb
lahf
push
pop
hlt
sub
aam
ljmp
sbb
mov
and
sub
mov
inc
pop
mov
jl
enter
ja
test
scas
lcall
and
cmp
add
fisubl
fistl
add
dec
repnz
inc
xor
sbb
add
and
xchg
inc
xchg
mov
cmp
cmc
or
or
mov
push
or
or
adc
dec
jns
lods
jno
test
pop
rclb
ret
cmc
pop
dec
dec
js
jbe
lds
push
mov
daa
push
and
stos
or
in
int3
inc
outsl
in
ljmp
sub
pop
loopne
jle
sbb
jmp
sbb
test
mov
inc
sub
xchg
inc
or
or
inc
insl
or
sub
out
adc
loopne
mov
std
popa
testl
inc
sti
sbb
pushw
sbb
or
movsb
pusha
hlt
add
push
pop
nop
in
adc
sub
pop
xchg
inc
call
jmp
adc
xlat
out
mov
aas
std
lcall
adc
sub
cli
sbbl
sbb
ret
lret
stos
pop
mov
sbb
push
add
lahf
xor
pushf
or
cmp
cld
sbb
inc
mov
pop
adc
icebp
lret
addr16
mov
es
xor
sub
dec
testl
lahf
mulb
mov
aad
mov
push
fs
jge
movsl
ja
and
negb
pushf
ss
xchg
test
mov
mov
addr16
xor
aaa
dec
fistpll
dec
mov
js
push
pop
inc
lods
xchg
mov
in
add
out
xor
sbb
xor
mov
pop
cmp
fistps
mov
aad
out
icebp
dec
iret
xchg
das
and
hlt
fcoms
lret
jb
push
and
jecxz
daa
sbb
pushf
xor
sub
enter
scas
je
sbb
xchg
push
and
bnd
mov
and
and
dec
mov
imul
adc
cmpsb
jp
filds
shrb
adc
movsl
push
loopne
mov
and
inc
add
repz
packsswb
out
testl
bswap
adc
mov
mov
addr16
sbb
loopne
enter
mov
mov
inc
jg
adc
fnstsw
and
sti
test
call
push
lock
mov
ja
aam
icebp
mov
xchg
or
hlt
scas
add
sub
mov
push
inc
aas
pop
out
aas
jecxz
push
cmpsl
inc
sbb
lret
mov
jg
mov
loopne
into
jo
push
inc
stos
mov
call
cltd
dec
mov
pop
cld
and
int3
in
aam
stos
arpl
daa
cmpsl
ja
push
fsubrl
loop
xchg
int
or
mov
pop
shlb
jecxz
insb
mov
pusha
pop
lret
jns
xor
xor
cmpsl
lcall
jg
icebp
test
xchg
or
stos
xchg
mov
pop
add
fcmovnu
shrl
loopne
mov
call
mov
subb
aam
in
push
daa
sarb
lea
mov
push
lds
add
pop
mov
adc
imul
insb
and
fdivrl
or
cmp
mov
sub
sbb
inc
loope
or
sub
add
lret
aad
pop
das
mov
movsl
ds
xchg
push
test
dec
test
xor
aad
bnd
mov
pop
ljmp
add
jb
mov
out
mov
fstl
push
lcall
jle
insl
xchg
xchg
dec
mov
data16
xchg
bound
jbe
rclw
sub
sahf
daa
int
sbb
xor
stos
stos
xor
popf
addl
sbb
ljmp
pop
pop
jnp
dec
mov
cld
lret
pop
stos
pusha
cld
repz
adc
adc
cld
add
add
orb
mov
sub
shrl
aas
imul
xchg
addb
push
hlt
ds
xor
push
pushf
sbb
add
add
insb
pusha
cmpsb
mov
sbb
div
popf
and
scas
xor
cmp
push
dec
icebp
cmp
mov
jb
lcall
or
sbb
fdivrs
mov
adc
hlt
outsb
mov
pop
dec
aaa
icebp
int3
jmp
mov
xor
and
and
std
or
xchg
and
mov
insl
push
push
hlt
in
adc
jmp
push
mov
or
insl
mov
aaa
sbb
pop
adc
fisubrs
mov
adc
js
sarb
out
push
mov
cwtl
cmp
cmp
mov
ss
pop
ss
divb
mov
push
xchg
out
xchg
insb
sti
add
or
and
outsb
cld
mov
xor
cmovae
jo
std
xor
shll
sbb
cwtl
inc
dec
or
pop
sbb
xchg
sti
jle
mov
and
fdivl
pop
cmpsb
push
jmp
add
pop
jmp
cmpsl
test
lods
subb
adc
pop
xchg
out
add
xor
xorl
fdivl
in
scas
cvtps2pi
fwait
lock
popf
adc
pop
xor
adc
xchg
sub
xchg
sbb
cmp
ret
lret
in
fadd
test
lock
add
sub
aad
xor
leave
cmp
aad
mov
inc
scas
lret
lds
xchg
mov
pop
int3
jle
push
push
mov
mulb
outsl
das
loope
add
mov
gs
and
jge
out
mov
mov
jo
cmp
shl
ss
popf
push
jb
pop
xor
ret
pop
icebp
ja
mov
jecxz
sahf
in
sub
int3
mov
hlt
fisubrs
stc
lea
cmp
in
and
jno
inc
dec
xor
pop
cmp
roll
outsl
or
push
cmp
push
add
lcall
es
pop
fildll
imul
out
jne
push
push
xchg
jecxz
adc
cmp
mull
xchg
ja
jbe
xlat
and
or
loopne
sbb
add
xchg
cmpsb
data16
push
scas
cmpsl
aaa
sbb
fstpt
aas
adc
cmp
mov
bound
add
pop
scas
mov
or
xor
xchg
xchg
lahf
mov
push
xor
cmp
lret
call
sub
mov
hlt
jae
test
mov
test
or
mov
mov
push
and
andl
sbb
push
aad
shrl
fwait
test
fwait
xchg
cmpsb
inc
sbb
mov
adc
aam
inc
gs
scas
jmp
jno
mov
out
addr16
add
inc
dec
dec
jb
negb
div
leave
sti
inc
xchg
test
push
dec
mov
lcall
outsb
dec
dec
sub
into
bound
call
in
cmpxchg
out
ds
shl
je
sbb
adc
cli
push
in
xchg
sbb
lods
dec
and
push
add
mov
aaa
push
addr16
jb
out
leave
mov
fldcw
cwtl
mov
adc
adc
clc
orl
sbb
leave
sbb
mov
fnsave
mov
in
aad
cltd
jns
mov
xchg
lahf
jecxz
lret
push
or
xchg
pop
es
mov
dec
js
rol
cmp
add
dec
cltd
dec
fmull
or
jmp
xchg
pop
orb
les
xchg
rcll
mov
sbb
jmp
jno
inc
cltd
aaa
jg
insb
sbb
inc
sqrtps
dec
adc
stos
adc
adc
imul
dec
sub
sub
sbb
mov
hlt
xchg
xchg
adc
and
push
jnp
fs
and
cmp
sarl
cmpsb
xor
pop
push
hlt
test
mov
popf
scas
cs
mov
subl
outsl
jle
mov
scas
jmp
les
gs
sahf
sub
mov
ss
push
stos
loopne
cli
cwtl
out
mov
rcll
andb
mov
not
lret
push
mov
nop
jno
cmc
xchg
push
repz
popf
push
mov
outsb
lea
out
sub
leave
mov
cld
xchg
xchg
xor
mov
sbb
jmp
jl
std
aaa
clc
icebp
push
pop
adc
xchg
cmpsl
jo
bound
jle
cmp
dec
lods
lcall
sti
adc
cmp
std
pop
dec
and
pop
cmp
mov
or
and
mov
daa
fnstcw
mov
clc
imul
rcr
ljmp
adc
and
movsb
insb
push
mov
xchg
outsl
pusha
das
fidivl
pop
sbb
sbb
movsl
sbb
cmpb
mov
push
icebp
repz
jbe
inc
push
jp
mov
repnz
aaa
or
pop
ljmp
mov
addr16
mov
pop
popa
or
mov
jp
mov
sub
xor
cli
mov
pop
sahf
data16
cltd
mov
adc
adc
mov
imul
or
mov
or
and
mov
fprem
sti
push
mov
shrb
dec
shll
adc
fdiv
je
pop
fmull
imul
dec
mov
dec
aad
xchg
mov
repz
pop
ljmp
stos
rcll
cmovno
lods
lret
push
cs
or
push
ficomps
push
inc
pop
jl
sti
jmp
mov
js
adc
sbb
sbb
mov
out
xor
add
in
jo
leave
mov
adc
shrl
pop
or
or
repz
movsl
aad
flds
dec
cmpsl
jae
negb
fldenv
out
cmp
lock
int
mov
push
dec
push
aaa
mov
push
pop
pop
ds
out
sbb
rcrb
jp
cmpsl
adc
pop
jp
mov
mov
daa
dec
int3
xchg
imul
jns
test
inc
adc
mov
es
sbb
cmp
js
insl
fldcw
or
insb
push
shll
push
stos
lret
push
js
pusha
pop
mov
xchg
fucomi
stos
data16
lret
pop
lret
jmp
jl
jecxz
stc
rcrl
xchg
and
push
shlb
negl
jne
push
jns
sbb
and
jmp
cmpsl
sub
dec
adc
lcall
cwtl
test
mov
xor
inc
or
pop
cmc
dec
test
xchg
xor
insl
sub
push
ds
fstl
fs
push
cmc
mov
sub
int3
lret
xor
mov
test
mov
sub
push
jne
int
add
fs
cmp
jb
push
push
in
mov
sbb
mov
dec
jmp
dec
cmp
pop
cmpsb
jns
aas
push
cmp
pusha
rclb
test
mov
mov
xor
inc
mov
cmpsb
imul
xchg
xchg
daa
sti
frstor
pushf
sub
cltd
lret
dec
repnz
push
jl
xor
mov
jnp
loop
xchg
lret
xchg
mov
mov
cmp
inc
jle
mov
jecxz
sbb
xchg
les
fidivrs
push
dec
js
loop
mov
ss
dec
movsb
inc
inc
mov
and
and
subl
mov
and
les
ror
test
icebp
sar
mov
into
lret
insl
xchg
cmpsl
and
bound
jp
inc
shlb
in
or
or
pusha
xchg
leave
mov
call
fldlg2
xchg
push
lret
int
mov
mov
mov
adc
aaa
hlt
mov
mov
les
cmp
xchg
mov
sub
shll
aaa
hlt
ds
cmp
xchg
sub
aam
movsl
mov
add
mov
adc
scas
aas
mov
xchg
rcr
int3
mov
cwtl
xor
mov
lods
stc
test
das
sub
fadd
loope
pushf
sbb
inc
lcall
or
pushf
sbb
jle
pop
add
gs
push
mov
test
jl
int3
lods
outsb
sbb
test
adc
push
mov
sar
fiaddl
leave
or
lods
lock
mov
inc
and
test
and
movb
and
ljmp
adc
mov
adc
sub
loop
sbb
cmp
or
adc
subb
inc
push
mov
sar
aaa
mov
out
dec
pop
sti
int
or
add
popf
test
add
scas
or
push
addr16
jmp
aad
neg
imul
dec
das
test
sbb
ret
gs
push
inc
pop
div
pop
or
add
out
in
mov
mov
cmp
mov
stos
sub
imul
aas
les
or
repz
jg
or
insb
xchg
inc
jle
or
dec
xor
xchg
dec
pop
in
repz
sub
jmp
jmp
pop
fs
mov
ret
divb
in
movsb
pop
and
mov
push
lahf
cltd
mov
sub
iret
and
cs
mov
push
adc
mov
sar
repnz
divb
dec
cmpsb
enter
leave
dec
pushw
hlt
es
jns
lds
jb
xchg
jmp
ds
shrb
or
push
fcompl
pop
jmp
and
divb
pop
andb
add
and
xchg
inc
mov
push
arpl
or
nop
test
pushf
lea
xchg
pop
popa
call
insb
push
sbb
into
mov
or
int
orb
xor
test
cli
sbb
inc
scas
add
leave
lahf
popa
push
sbb
sub
loope
xor
xor
cmp
outsl
mov
cmp
mov
cltd
jae
sbb
and
lock
aaa
fsqrt
pop
and
mov
sbb
cmp
jge
mov
ljmp
scas
or
mov
je
mov
fistpll
xor
and
test
mov
stos
mov
and
xor
jmp
mov
ja
out
jl
addr16
mov
mov
nop
fdivl
in
fs
adc
mov
jmp
imul
int
outsl
sbb
jne
imul
jp
lcall
js
pop
adc
sub
push
sti
sbb
loopne
jg
repz
inc
es
lahf
sub
sbb
shll
out
adc
bound
push
pinsrw
rcrl
popf
cmpsb
mov
fwait
ret
lcall
shlb
sub
dec
in
lret
ficoml
sbb
or
cmp
movsl
sbb
add
push
out
fsubl
lahf
fcom
jmp
out
call
dec
mov
mov
enter
mov
jb
aaa
mov
movsb
push
aas
push
scas
lock
pusha
pop
es
out
adc
adc
imul
lcall
or
cmp
xchg
pop
dec
int
into
mov
mov
dec
into
test
jmp
popf
mov
fldl
jp
sbb
mov
shrb
dec
aad
push
jge
or
mov
data16
pop
sti
aaa
jb
push
add
jl
or
in
push
repz
adc
jb
push
in
dec
jl
push
add
xchg
jnp
add
cmp
and
xor
push
loope
nop
mov
pop
cmp
nop
mov
cmpsb
mov
mov
cli
stc
and
sub
and
lret
sub
out
shr
push
out
jo
xchg
mov
fisttpl
out
cmp
cli
xchg
mov
ljmp
push
fcoml
cld
add
inc
xchg
inc
inc
push
push
scas
adc
stc
xchg
ss
stos
test
ds
or
enter
sbb
xchg
mov
adc
xchg
arpl
push
xorl
xor
xchg
cmp
inc
nop
adc
lea
mov
xlat
sbb
lret
push
hlt
fldt
cmp
add
cmp
fs
cmp
add
mov
test
inc
add
test
test
ret
add
sub
mov
call
daa
out
out
xchg
mov
adc
gs
leave
add
cli
fcomi
pusha
inc
stc
scas
push
add
push
sub
jecxz
mov
dec
and
pop
inc
repz
fs
xchg
inc
xchg
and
inc
jno
std
dec
xor
fisubs
sub
in
mov
lahf
jl
jmp
in
and
xor
pop
push
and
dec
dec
sbb
add
pop
dec
mov
mov
mov
aad
inc
cli
and
aas
sub
je
loop
push
mov
lods
inc
mov
filds
xor
xchg
push
and
loope
insb
push
xchg
and
pushf
mov
pop
or
push
pop
mov
mov
stos
cltd
in
mov
out
es
push
lcall
stos
cmc
fstps
mov
je
adc
pop
pushf
out
xchg
call
arpl
sub
jp
mov
pop
je
mov
sbb
ret
sbb
inc
push
outsb
mov
cwtl
jne
push
cmpsl
mov
add
std
test
inc
or
inc
xchg
sti
xchg
pop
scas
ret
jb
jne
inc
mov
jne
rolb
lds
mov
ja
stc
pop
mov
xchg
sbb
shl
xorl
mov
lret
xor
mov
scas
cmp
xchg
jb
add
inc
cmp
cmp
js
clc
dec
pop
xchg
je
and
movsb
pop
push
cltd
push
imul
sub
mov
sub
cli
pop
xor
jle
fists
adc
inc
add
test
mov
mov
push
adc
mov
ljmp
enter
pop
jo
test
sub
in
or
fdivl
pusha
add
sbb
mov
cmp
lcall
and
lea
data16
rclb
jnp
mov
jle
cwtl
add
lret
lock
jle
xchg
es
xor
scas
notb
scas
ss
fmuls
pop
jns
jg
inc
cli
fwait
push
or
icebp
jl
out
and
cmpsl
sbbl
adc
icebp
gs
xchg
imul
lcall
push
fsub
or
sti
cld
add
jo
dec
and
add
fcmovbe
fimuls
lods
add
lret
std
ret
ljmp
pop
xchg
andl
push
insl
sti
ss
mov
faddl
jo
bound
cmp
or
dec
sbb
cmpsb
or
dec
cmp
dec
mov
imul
test
add
inc
pop
inc
mov
icebp
int
out
rorb
or
push
ror
push
mov
lahf
push
mov
xorb
inc
out
or
faddl
sbb
cmp
inc
cltd
cltd
in
test
jns
xchg
and
es
and
in
xor
cmp
fsubrl
loop
inc
jmp
pop
lods
sbb
movsb
rcrb
dec
stos
mov
lds
in
fcmovne
xor
pop
dec
push
push
test
mov
int3
popa
out
fsubrs
add
out
push
mov
es
xor
sar
sbb
mov
adc
sbb
mov
std
hlt
xchg
enter
bound
and
cwtl
cmp
scas
sahf
in
iret
flds
jb
insb
jecxz
fstp
aad
xor
pushf
cwtl
in
cld
bound
cmp
loop
push
inc
std
push
lock
lds
leave
outsb
sub
je
sub
pushf
gs
movsl
cmc
dec
sub
jle,pn
sbb
push
cs
pop
loope
stc
stos
dec
mov
clc
dec
sub
cmp
xor
test
mov
mov
inc
out
daa
out
fcomps
addl
and
lahf
repz
lock
jo
and
pop
hlt
dec
adc
das
push
cmp
jl
inc
ror
js
mov
pop
lock
pop
or
jmp
pop
mov
jp
push
cs
sarb
lcall
or
lret
mov
pop
ljmp
adc
or
cwtl
inc
mov
out
insb
rol
cmpsb
out
cli
mov
pusha
stos
pushl
in
es
data16
movsl
cmp
pop
mov
jno
lcall
out
js
js
add
and
lcall
jmp
sub
jp
jge
xor
push
repz
or
mov
xchg
in
jns
jp
mov
push
sti
push
pop
hlt
cli
push
or
ss
mov
int
sbb
mov
shll
neg
sahf
ret
sbb
and
xlat
int
dec
jl
or
cld
jb
inc
add
mov
jbe
or
rolb
push
lahf
pop
xorb
cmp
test
mov
cmp
lret
xor
inc
lret
mov
aad
mov
xchg
out
in
push
aas
cmpsb
add
dec
pop
outsl
sbb
or
lret
mov
pop
outsl
xor
jl
xchg
loope
mov
and
xor
test
testb
fnstenv
xchg
jne
mov
outsb
imul
mov
push
push
cmpsb
repz
mov
sbb
add
es
add
jle
enter
pop
shll
and
inc
sti
xchg
jb
jno
ljmp
jecxz
lock
xor
cmp
gs
scas
cwtl
push
push
sahf
imul
lcall
mov
stos
sub
mov
jb
push
f2xm1
lds
dec
test
and
sub
mov
fnstenv
dec
dec
xchg
push
and
rorl
es
mov
sbb
cwtl
and
insb
enter
aad
xchg
pop
ret
sarl
int3
std
mov
cmp
ljmp
in
add
popf
leave
shrl
xor
inc
dec
jb
rcl
dec
ljmp
loop
adc
push
shrl
xor
mov
lods
sbb
jae
in
mov
jno
sub
mov
stc
shrb
fsubrs
cmpb
xlat
into
mov
mov
mov
sarl
icebp
add
mov
sbb
push
push
pop
xchg
imul
add
je
cmpb
shr
xchg
mov
stos
lods
add
invd
push
jno
xor
jmp
jns
cltd
adc
ret
cmp
outsb
out
xor
mov
cmp
test
mov
add
inc
pop
xchg
inc
call
hlt
cmp
sub
pop
xor
push
xchg
icebp
pop
push
push
lret
mov
mov
out
sub
inc
sbb
pop
faddp
mov
test
dec
jl
jae
fldcw
xchg
int
cmp
enter
dec
mov
orl
sbb
scas
dec
sbb
subl
in
push
sub
cmpsb
lods
jae
jl
cmp
aam
enter
gs
xor
sub
dec
push
xor
sbb
pop
sub
out
cmpsb
icebp
jo
sahf
lahf
inc
pop
pop
sti
ss
mov
arpl
rolb
les
sub
aad
mov
out
nop
and
push
mov
divb
mov
mov
inc
jne
and
out
std
push
xchg
push
push
repz
scas
push
incb
inc
imul
xchg
int
jg
xor
dec
out
mov
cmp
mov
idivl
xchg
mov
dec
xchg
out
daa
lret
xor
shll
xor
imul
loop
or
mov
aam
js
movl
add
ljmp
dec
aaa
push
fbld
mov
push
xchg
sbb
sbb
dec
dec
into
and
sub
mov
scas
rclb
adc
enter
push
push
or
testl
dec
addr16
jbe
lahf
loopne
scas
jge
inc
xorb
mov
xchg
imul
sub
jbe
ss
xchg
adc
lret
stos
or
mov
stos
sub
mov
cmp
out
mov
and
pop
popa
in
mov
lcall
mov
cmp
loopne
movsl
mov
fisubrs
mov
shlb
mov
mov
push
mov
rcll
fwait
in
movsl
movsl
leave
sub
roll
cltd
xchg
int3
arpl
cmp
rcl
sub
iret
add
dec
sub
addr16
filds
js
in
ret
inc
mov
adc
pop
push
dec
push
inc
mov
mov
in
jb
das
mov
cmp
mov
cli
imul
addb
and
loope
and
popa
pop
pop
sub
pop
aad
sbb
popf
jne
test
xor
in
mov
es
stos
not
es
js
fcoml
mov
les
or
mov
inc
frstor
ds
aad
or
pop
sub
or
jg
in
pop
sub
xor
mov
push
or
sbb
arpl
clc
xcrypt-cbc
cmpsl
push
jle
jb
shl
mov
cmp
cmp
jmp
leave
test
fmuls
loopne
pop
hlt
int3
out
mov
into
ret
clc
inc
aas
jg
mov
xchg
je
out
xchg
iret
jge
out
or
sub
bswap
cmpsl
addr16
push
and
daa
out
lods
data16
outsb
cmp
mov
jo
inc
fisubl
mov
std
in
and
push
add
jno
lea
cmp
pop
jge
mov
lock
testb
add
lret
pop
fstpl
dec
mov
mov
outsl
stc
ret
sbb
xchg
stc
pop
mov
daa
pop
into
push
cltd
dec
ds
aas
roll
adc
test
out
repnz
xchg
lcall
jmp
xor
das
push
sbb
rcrl
daa
daa
popf
or
outsb
and
pop
arpl
jo
sbb
pop
xchg
shrl
lea
push
lcall
jbe
and
sbb
mov
xchg
push
jmp
clc
pop
adc
add
add
jbe
sbb
mov
icebp
cltd
test
cmp
push
cmp
rcr
ja
repnz
inc
rcrl
ret
ror
jge
lahf
mov
lock
in
test
icebp
adc
and
sub
dec
jg
loop
leave
dec
les
cmp
mov
mov
xchg
and
lcall
inc
xchg
jnp
xor
pop
push
clc
or
aas
aad
std
push
mov
dec
xor
dec
push
inc
ljmp
in
repz
jne
gs
xchg
add
daa
arpl
dec
and
sbb
ret
jmp
filds
popa
iret
or
pop
pop
ss
aad
or
push
mov
cld
jmp
mov
in
andb
cli
testl
push
xchg
leave
push
fs
jge
cmp
adc
add
mov
leave
mov
add
out
inc
lock
fimull
jecxz
enter
lahf
daa
jle
jp
lret
test
xor
call
mov
adcl
mov
in
add
cmpsl
sub
mov
xchg
js
fisttpll
cli
test
jne
cmp
mov
push
mov
mov
inc
fs
or
xor
insb
je
filds
adc
add
pop
in
xchg
pop
adc
pop
sahf
and
mov
in
jge
push
dec
dec
cmc
rolw
repnz
mov
lock
pop
pop
jl
pop
jle
inc
shrl
inc
shll
test
add
fstl
lret
mov
and
mov
outsl
cmp
fsubr
jns
ss
pop
add
mov
mov
cmp
sbb
scas
addb
jno
or
loope
fmulp
xor
push
jae
mov
mov
or
daa
movsb
leave
popa
orps
out
orl
ficoml
ds
into
sbb
sub
or
adc
cmp
xchg
or
adc
push
pop
and
popa
iret
fwait
ljmp
add
push
adc
push
xor
mov
jle
mul
lea
mov
pop
jb
jle
lods
ds
mov
dec
cmp
add
sbb
cmp
dec
push
fsts
adc
push
cmc
test
sbb
adc
cld
dec
fwait
jbe
push
ss
mov
fiaddl
inc
sub
add
xchg
jmp
mov
adc
in
shll
add
jle
xor
jp
sarl
aam
sbb
inc
popl
dec
movsl
add
mov
adcl
movl
sbb
jne
mov
andb
lret
cmpb
jecxz
or
add
enter
pusha
push
and
cmp
pop
lds
cmp
enter
ljmp
add
fbstp
inc
jmp
mov
xor
popa
fwait
or
adc
popf
mov
rorl
mov
jge
loope
rclb
pushf
dec
fsubl
jo
test
jecxz
ret
loopne
fs
stos
sub
pop
or
and
loope
pop
xchg
imul
jae
mov
les
cmp
lahf
mov
mov
lcall
fstpl
xchg
cmp
dec
idivl
adc
mov
sbb
stos
xor
xchg
push
mov
add
or
push
xchg
jmp
push
push
pop
fcomps
mov
xchg
cwtl
mov
sbb
cmp
jae
fs
pop
int3
or
jp
lea
in
inc
mov
lahf
lret
outsl
popa
xchg
xlat
flds
stos
es
xchg
call
scas
mov
rcll
negl
test
push
jbe
popa
leave
cmp
imul
mov
stos
outsb
mov
out
mov
inc
test
xchg
sub
mov
out
ds
sti
iret
mov
jns
arpl
mov
xor
repz
pusha
pop
and
pop
jbe
dec
jl
mov
jo
sar
je
outsb
out
sub
mov
mov
bnd
push
push
roll
addr16
lds
js
cmpsl
dec
cmp
dec
ret
stos
sbb
or
push
cmp
xor
rorl
aad
dec
insl
and
push
lret
adc
scas
fdiv
loopne
xor
loope
push
sub
dec
mov
adc
mov
jnp
sub
bound
cmp
daa
add
adc
notb
loopne
push
mov
shll
xchg
xchg
or
jns
out
cmp
aam
addr16
sbb
repnz
cmc
xchg
sbb
enter
das
push
push
outsl
mov
aas
mov
movsl
pop
sbb
xor
andb
or
fcoml
shll
mov
imul
rorl
push
lea
xorl
in
sub
sub
mov
fs
jl
lahf
lret
clc
dec
loop
adc
sub
scas
call
pop
xchg
loopne
lcall
cmpsb
fs
pushl
add
mov
cmp
pop
rcr
inc
mov
cmp
lret
lock
ja
inc
gs
mov
pop
nop
mov
pop
or
adc
pop
sbb
fstpl
les
or
inc
sbb
movsb
negl
mov
mov
push
mov
xor
push
jno
fwait
pop
cmpsl
test
iret
shrb
xchg
push
pop
add
pop
and
push
cmpsl
sbb
xlat
inc
cmp
jb
xchg
ss
inc
int3
in
jg
in
jbe
mov
nop
mov
in
or
push
movsl
inc
pop
adc
lods
jb
sub
cmp
xchg
fildl
pop
push
add
mov
cmp
jmp
push
ljmp
or
mov
adc
insb
and
lea
cmp
and
scas
loopne
jno
lds
out
ret
scas
in
fisubs
fldt
jno
scas
dec
scas
mov
fwait
sbb
and
loope
sarl
adc
mov
fs
or
mov
inc
sub
pop
bound
mov
ljmp
stos
dec
mov
push
adc
push
adc
sbb
sub
ljmp
aas
sbb
dec
mov
lret
scas
lret
sbb
ret
bound
dec
cmc
dec
sarb
lret
aaa
pop
adc
mov
imul
mov
sbb
stos
mov
xchg
pop
xor
or
pop
jg
out
movsl
jle
mov
xor
pop
mov
nop
sbb
scas
pop
xlat
sub
xchg
inc
and
xchg
xchg
rolb
adc
mov
add
aad
sbb
or
pushf
sbb
mov
call
imul
pop
outsl
stos
loopne
lds
pop
jecxz
inc
xchg
and
adc
addr16
jl
xchg
scas
or
mov
jp
dec
mov
sbb
sarl
xchg
pop
adcb
imul
addr16
mov
arpl
fstpl
lret
cmp
loope
hlt
loope
sub
adc
mov
adc
xor
mov
xor
lcall
pop
stos
je
rclb
ret
dec
adcl
rcl
sub
hlt
stc
pop
push
mov
mov
mov
out
testl
lea
sub
jns
sub
xchg
aaa
lds
jg
cmp
in
pop
sub
adcl
inc
cmp
sub
push
dec
adc
or
test
sbb
std
lds
xor
jecxz
imulb
mov
inc
xor
push
ret
and
jge
pop
push
lods
sahf
and
cmp
mov
or
movb
ret
popa
sub
addl
dec
push
popf
and
sub
roll
push
xchg
or
sbb
jp
lret
fistl
in
jmp
xchg
mov
push
or
shlb
mov
or
mov
mov
cmp
sbb
xchg
es
fcom
shll
mov
mov
xchg
sub
push
dec
xchg
negl
push
inc
push
aad
push
or
fs
jae
dec
shrb
dec
cmc
test
lods
xor
mov
arpl
dec
pop
jbe
outsl
insl
sub
mov
and
mov
pusha
imul
inc
or
cmp
xor
imul
sub
frstor
mov
mov
pop
in
into
lret
sub
mov
sbb
and
mull
cmpsb
mov
hlt
push
jge
das
and
stos
inc
or
pop
fst
push
jnp
xor
mov
bound
fldl
lcall
out
push
push
shl
xchg
add
push
inc
rcl
or
pop
dec
movsb
mov
push
cmp
sti
jns
pushf
cmp
lret
insb
jns
push
mov
and
add
and
test
clc
lds
je
mov
pop
popf
int3
or
aas
sbb
xchg
and
dec
outsb
sbb
lahf
sub
rcll
hlt
inc
pop
call
das
jmp
jns
jnp
sbb
fists
push
mov
ret
adc
insb
addr16
test
jbe
pusha
mov
push
ss
in
imul
lea
push
dec
jle
mov
push
negl
and
jg
xor
js
inc
mov
push
repnz
lret
mov
test
push
mov
fdivrl
clc
inc
mov
pop
enter
mov
bound
inc
jns
fwait
jb
aaa
sbb
mov
and
xchg
xlat
push
cwtl
push
sub
cmpsb
sbb
outsl
sbb
test
testl
push
xor
mov
adc
sti
loop
rorl
xor
sbb
aad
jmp
sbb
add
xchg
outsb
leave
stos
negl
shrl
into
dec
out
mov
pop
std
xchg
sub
jbe
add
mov
cmc
imul
cld
xchg
repnz
fidivrl
pop
enter
popf
fimuls
dec
rcrl
and
pop
mov
jp
adc
sub
dec
add
cmpsb
dec
shl
mov
push
adc
addr16
mov
scas
mov
imulb
mov
mov
add
pop
sbb
lret
loope
enter
jns
call
adc
iret
fadds
mov
jecxz
or
aam
faddp
adc
out
or
pusha
loope
rorb
xchg
adc
es
xor
sub
mov
push
add
das
insb
pusha
push
sbb
inc
orb
fcmovu
test
shll
test
imul
lods
jp
fs
push
repz
movb
jbe
ret
cmp
xor
xchg
sbb
scas
and
dec
mov
mov
sbb
aas
mov
cmp
mov
and
pop
jns
sbb
pop
pop
jb
repnz
cmp
insb
js
push
jmp
sbb
aam
incl
call
mov
fbstp
test
fimull
pop
insl
pop
int
test
loop
rcrl
jg
mov
pop
sub
or
xlat
inc
jl
inc
ret
jns
or
xchg
mov
mov
push
fcmove
imul
sbb
repnz
pop
xchg
out
into
cmpl
lock
test
test
dec
jp
mov
andb
mov
jg
xchg
shrb
fists
lcall
or
xor
outsl
mov
test
es
mov
mov
jb
jb
xchg
push
into
inc
xor
repnz
xor
push
cmp
pop
arpl
sub
dec
sub
add
es
sub
inc
add
sbb
xchg
xor
imul
or
xchg
jns
cltd
mov
dec
scas
jnp
orb
fs
cmc
sbb
xchg
test
push
cmpsl
xor
mov
js
shl
lods
fisubs
cwtl
jb
mov
scas
std
shll
pop
shrl
push
aaa
stos
fs
add
jp
aaa
dec
dec
dec
pop
mov
push
xsha256
cmpsb
adc
pop
sbb
cmc
cmp
or
sub
ljmp
mov
cmp
jo
jbe
inc
out
jbe
movsl
pop
out
flds
aaa
jae
lcall
fldcw
adc
jp
test
jp
pop
sbb
push
jae
rorl
pop
or
push
leave
sahf
jne
stos
add
push
lds
sahf
mov
aam
daa
push
ret
ret
cmpsl
cli
insl
pop
mov
fcomps
jmp
add
sub
add
dec
jae
orl
sub
mov
inc
inc
cmpsb
sub
fimull
sbb
int
ret
dec
and
popf
inc
mov
adc
mov
or
out
jae
jne
int3
in
in
int
popa
lds
add
inc
jnp
clc
fwait
clc
inc
jnp,pt
sbb
mov
lods
test
aas
imul
frstor
lods
cmp
xchg
fs
mov
jge
push
pop
cmp
int
jp
lods
dec
mov
daa
xchg
sar
dec
fimull
cmp
xor
sbb
ret
out
dec
imul
es
or
or
into
jbe
xor
mov
lods
inc
sbb
jmp
adc
stc
jnp
fs
push
sti
clc
or
int
xchg
inc
data16
aaa
dec
pop
mov
inc
xchg
pop
xchg
inc
mov
cmp
inc
pop
das
sahf
pop
test
mov
js
pop
xor
xchg
loop
dec
cmp
jl
mov
mov
aaa
cltd
mov
mov
pop
fmull
outsb
testb
mov
mov
jns
push
jne
stos
inc
inc
jmp
jg
sahf
lods
xor
sub
and
in
push
lds
pop
popf
pop
movsb
pop
clc
ret
jnp
mov
cmpsl
lcall
xor
mov
jns
xchg
add
and
pop
xchg
lock
cmp
push
adc
and
xchg
push
lahf
pop
lcall
cs
cmp
push
test
pop
push
clc
pop
mov
jne
push
clc
push
aaa
push
out
mov
in
lret
mov
arpl
dec
xchg
stos
sbb
xchg
fsubl
mov
inc
stc
or
out
cmp
and
push
pop
inc
jno
inc
sub
fwait
sub
jecxz
cmpl
pop
lods
and
int3
loop
sub
test
mov
and
lds
insb
popl
movsl
push
mov
imul
nop
push
jo
stos
cwtl
clc
add
xor
fs
push
pop
call
sub
cmp
fwait
adc
xchg
cwtl
stos
adc
push
inc
and
cld
jne
stos
insl
jmp
push
jb
movsb
mov
push
dec
cmp
lods
jcxz
imul
adc
inc
mov
test
and
adc
cmp
cmp
mov
pop
add
addr16
shll
loop
push
xlat
push
into
or
js
cmc
repnz
push
mov
xor
shr
sub
nop
sub
pop
sub
outsl
inc
repnz
and
sbb
lcall
int
sti
test
stc
imul
sbb
test
xchg
arpl
pop
add
inc
mov
test
cmpb
nop
ds
jno
mov
cltd
ss
jl
out
xchg
cmpsb
aad
fyl2x
arpl
sbb
testb
inc
data16
in
mov
cmpsb
mov
insb
and
dec
or
cmpsb
sti
jae
xor
ss
ret
mov
lret
hlt
push
ljmp
addr16
pop
into
sbb
bound
sbb
mov
jno
orb
adc
add
sbb
je
jbe
shrl
jnp
aas
cs
sub
push
mov
bound
std
loope
jbe
push
pop
mov
mov
jp
push
lret
mov
rcrb
cmpsl
push
xchg
add
lds
sub
cmp
and
test
cmp
out
pusha
fcmovne
js
fimuls
int
pop
stc
jb
jl
sub
popf
in
fisttpl
xlat
ret
add
sub
cltd
enter
adcl
cli
adcb
mov
inc
add
mov
lea
sbb
jp
out
cmp
loopne
cld
repz
fs
sbb
or
inc
popa
inc
in
dec
dec
mov
faddl
push
jae
xchg
hlt
cmp
test
orb
lock
xchg
dec
in
cmpsb
popa
and
sahf
addr16
mov
xor
mov
push
xchg
mov
scas
xchg
mov
jp
mov
fstps
movsl
or
shl
xor
mov
and
in
subl
jle
push
dec
sbb
repz
xchg
jp
inc
push
and
mov
push
push
lock
xchg
dec
push
cwtl
xchg
ret
mov
sbb
xor
lret
out
cmp
mov
push
sbb
cli
cli
pushf
shr
adc
loop
leave
push
sbb
cmp
lods
pop
adc
or
ffree
mov
push
repnz
test
adc
inc
dec
sbb
repz
sbb
push
mov
lods
xchg
pop
jp
add
cmp
push
jb
sub
pop
aam
pop
pusha
std
jge
les
adc
and
adcb
orl
in
sub
mov
xor
push
nop
jns
inc
scas
bswap
mov
adc
pusha
adc
int
push
inc
sub
or
andl
xchg
mov
push
cs
addl
cmp
dec
lea
adc
xorb
pushf
aad
jb
mov
sarb
outsl
dec
adc
xchg
add
pusha
mov
fwait
jl
mov
std
scas
cmpsb
jp
mov
xchg
stc
dec
loope
aad
stos
in
sti
cmp
rdpmc
call
or
sub
add
ret
mov
push
and
cs
addb
push
xchg
and
ss
into
mov
popa
fnstsw
xchg
mov
mul
add
xor
push
sarb
into
jmp
fmull
andb
push
gs
ret
mov
fbld
jne
dec
mov
push
fnstenv
arpl
inc
adc
outsl
sub
fcmove
push
push
out
adc
movsb
mov
andb
mov
and
mov
data16
inc
dec
mov
sbb
cmp
inc
jmp
xor
dec
aad
fdivr
add
cwtl
movsl
dec
hlt
mov
loop
adc
lahf
lods
fsubrs
shlb
inc
pop
idivl
test
fstpl
fimull
xor
cmp
iret
sub
cmpsl
cmp
cmpsl
inc
mov
std
xor
cmp
incl
stos
icebp
ret
cmp
out
pop
imul
rcl
mov
ret
rcl
scas
ja
leave
scas
mov
gs
jecxz
aas
out
popa
push
pop
popa
sub
inc
cwtl
jae
cmpl
subl
outsb
ret
jmp
scas
xchg
xchg
dec
or
int
mov
dec
std
adc
pop
pop
or
repz
push
daa
hlt
sarb
and
js
dec
cmp
mov
ljmp
mov
adc
mov
xchg
popf
xor
psubd
mov
imul
push
movsb
xor
adcl
sub
jp
xchg
out
mov
notb
jg
scas
cmc
mov
mov
mov
imul
test
sub
xor
ja
cs
fildll
sbb
stos
mov
sarl
out
es
pop
jle
jb
or
sahf
bound
push
xchg
insl
fsubrl
inc
mov
fbld
mov
pop
shlb
jo
adc
loope
mov
pop
mov
pushf
loopne
push
shlb
sub
sbb
scas
out
add
std
in
jno
aas
lcall
repz
pop
in
sub
jg
mov
dec
add
jmp
call
jae
mov
sbb
ljmp
gs
arpl
test
mov
mov
inc
leave
jle
fisubrl
cltd
mov
scas
xor
push
pop
popf
std
sub
ja
out
fists
ja
mov
scas
aam
sub
pop
ficompl
cmc
subb
pusha
arpl
jmp
shll
xchg
das
dec
mov
das
leave
cmp
ret
cmp
pop
cmp
mov
in
fdivrl
mov
test
rcrl
fcomps
cmp
push
sub
jnp
jge
push
sahf
into
add
xchg
sbb
add
fbstp
jecxz
push
inc
mov
mov
inc
push
pop
inc
xor
pop
add
dec
addl
out
lret
aam
jns
scas
and
dec
addb
enter
inc
cmc
push
mov
mov
xchg
dec
or
test
dec
pop
jns
and
jne
pusha
mov
jns
jg
in
push
test
ja
xchg
pop
mov
push
ficomps
rcrl
pop
test
test
mov
push
fsubr
sbb
lret
mov
sub
sub
pushf
pop
add
lods
xchg
cmc
dec
paddw
or
invd
scas
repz
xor
sahf
test
out
stos
stos
aaa
or
in
popa
mov
or
in
sub
jl
enter
mov
sub
aas
scas
add
orl
mov
outsl
xor
jl
push
insb
xor
mov
sahf
cltd
je
inc
out
push
pushf
lret
fwait
int
jecxz
xchg
repnz
lock
iret
pop
out
xor
jp
sbb
xlat
cmc
mov
or
xchg
popl
sbb
lcall
icebp
mov
flds
xchg
add
push
iret
mov
mov
sahf
push
add
mov
pop
push
push
icebp
mov
mov
out
mov
xor
sbb
in
xchg
notl
bswap
es
shrb
sbb
lahf
out
ret
imul
fmuls
and
sub
cli
jge
fsub
xchg
test
test
out
sbb
jb
enter
xchg
or
in
jg
or
ss
aad
xor
imul
mov
incb
in
repnz
push
addl
test
mov
dec
fdivs
and
or
out
mov
mov
jnp
adc
iret
pop
nop
int3
inc
xor
lock
inc
push
cmp
and
push
jbe
imul
jmp
icebp
shrb
nop
cwtl
mov
add
pop
sub
cs
pusha
test
popa
aaa
push
xor
cli
inc
bound
adc
inc
pop
dec
or
rorb
pushf
push
enter
sub
mov
sub
dec
adc
cmpsl
inc
movsl
inc
or
das
jns
and
xor
mov
adc
push
cltd
mov
push
lock
lret
lret
sbb
jl
mov
js
es
and
fidivrs
and
es
mov
lcall
imul
sbb
xchg
xchg
outsl
mov
xor
mov
adc
and
cli
lret
dec
inc
ret
pop
fimuls
shl
xchg
xchg
mov
pop
ja
imul
sbb
sub
imul
dec
push
sahf
push
xchg
mov
cmp
stos
hlt
ljmp
bound
outsl
mov
aas
lret
call
push
xor
dec
inc
hlt
inc
push
pop
jp
cmp
push
xor
fnstsw
mov
jp
cmc
aam
sbb
pop
cmc
in
dec
popa
xor
out
in
leave
pop
cmp
dec
movsb
xor
push
das
sbb
sub
clc
aam
sub
ret
or
outsb
pop
stc
icebp
inc
mov
call
cltd
add
xor
add
addr16
sahf
in
test
mov
lock
inc
cld
fisttps
add
mov
or
shl
decl
sub
jb
mov
into
jbe
in
jge
push
lock
scas
out
sub
adc
cmpsl
cmp
and
and
xor
leave
lahf
rclb
test
or
rcrb
mov
outsb
dec
or
ret
call
in
in
jp
fwait
add
dec
sbb
or
mov
ret
dec
xor
xor
cmpsb
popf
xchg
rcrl
push
rorl
and
cmp
outsl
dec
or
popa
lcall
dec
imull
xchg
aas
adc
fdivs
call
iret
pusha
or
maxps
in
push
add
and
xchg
add
mov
cmp
insl
int3
fistl
mov
cld
lcall
fwait
or
mov
push
cmpl
adc
jmp
lds
mov
push
lret
mov
adc
fisubl
mov
xor
cwtl
fcompl
ss
fdivl
mov
test
nop
push
fscale
addr16
cmp
mov
mov
lcall
pop
push
mov
out
shll
jns
test
cs
dec
cmp
fmull
xor
lea
repz
mov
adc
test
lds
push
inc
rorl
dec
inc
xorl
jbe
push
scas
fwait
loop
xchg
scas
jbe
jb
dec
push
popl
ret
shlb
xor
pop
xchg
xor
sub
push
mov
xchg
dec
shll
test
pop
xor
daa
nop
aad
cltd
sbb
adc
stc
iret
mov
aaa
mov
adc
es
icebp
push
and
int3
sbb
add
les
rclb
or
lret
fcoml
std
das
test
bound
pop
mov
inc
dec
mov
jo
xor
out
mov
enter
sub
cltd
imull
dec
pop
adc
sub
test
lods
mov
pop
in
aaa
or
mov
push
mov
pop
xchg
sub
mov
clc
xor
pushf
add
push
loopne
mov
jl
aad
mov
nop
mov
js
jb
jo
pop
inc
cmpsb
out
cmp
cmp
lret
bound
inc
fiaddl
xor
mov
insb
cmp
add
ret
sub
rcrl
fdivl
or
mov
adc
cld
das
mov
and
mov
mov
or
xor
sbb
xchg
xor
push
stc
adc
pop
ja
out
mov
mov
outsl
add
jbe
fwait
mov
sub
mov
insl
pop
gs
dec
inc
cmp
inc
arpl
jmp
out
call
inc
and
lret
pop
shll
pop
push
cmp
jge
cwtl
push
pop
jae
and
jbe
jp
push
in
cmpb
and
mov
stos
inc
insl
pop
lret
xorb
xor
fwait
or
mov
pusha
sbb
or
xor
mov
and
ret
jle
xchg
rclb
jno
mov
add
adc
es
xchg
adc
data16
and
icebp
inc
outsl
sub
add
call
lcall
cmc
sbb
xchg
sbb
adc
sub
inc
cmp
and
xchg
xchg
adc
inc
call
fbstp
addr16
adc
jne
addr16
lea
push
cwtl
rcrb
subb
mov
sbb
xor
and
repnz
add
dec
pop
lret
imul
mov
cmp
addr16
mov
xor
adc
loop
dec
adcb
sbb
push
inc
mov
pmaxsw
sub
pushw
std
xchg
add
sbb
inc
std
cmp
xchg
insl
shrl
dec
sub
xchg
fs
aam
hlt
call
icebp
push
xchg
sbb
push
jns
lret
shrl
movsb
sbb
jecxz
bnd
in
cmp
jb
out
cmc
inc
insl
jbe
push
clc
fs
popa
sub
out
mov
pop
dec
xchg
or
xor
dec
scas
ficoml
lods
pop
pushf
pop
or
lahf
jno
lea
sbb
aam
mov
mov
xchg
les
jg
iret
cmp
and
lods
pop
cmpsb
scas
dec
xchg
leave
mov
mov
stos
imul
fcomps
xor
cmp
pop
nop
inc
aam
in
orb
mov
lock
jae
leave
inc
ljmp
scas
adc
movsl
add
inc
ja
cmp
nop
xchg
xchg
sub
add
push
repz
shl
sbb
cli
cmp
xchg
divl
out
push
sbb
mov
into
cltd
insb
sbb
nop
hlt
call
test
bound
sbbb
sbb
mov
pusha
outsb
subl
into
add
dec
sbb
ret
out
pusha
xchg
sbb
rolb
cwtl
movsl
fwait
pushf
hlt
pop
enter
jbe
jne
dec
arpl
jp
pushf
test
aaa
test
and
jbe
mov
or
ds
and
pop
out
orb
push
jle
in
dec
mov
pushf
cmp
adc
jns
mov
or
add
pop
out
int
aam
add
adc
push
movsl
addr16
jp
inc
mov
mov
xlat
stos
add
popf
sbb
icebp
icebp
jns
mov
out
les
test
inc
daa
mov
out
stos
xorb
add
rorl
adc
mov
fdivrs
or
or
mov
jle
scas
fbld
popf
shll
fcoml
arpl
stos
mov
push
sub
ds
push
or
int
mov
and
popf
int3
cmp
add
adc
in
mov
pop
gs
jnp
xlat
mov
adc
or
dec
adc
lret
cwtl
push
jns
xchg
ret
jge
adc
pop
adc
sbb
ret
dec
repz
js
mov
imul
mov
sbb
mov
inc
rcrb
icebp
jnp
xchg
roll
jo
outsl
sub
cmp
add
scas
sbb
xor
test
mov
sub
sub
xor
enter
jecxz
add
and
repnz
rcrl
ret
es
lret
test
test
or
xlat
loop
aas
ret
fidivs
inc
stos
stc
out
lret
mov
add
lods
adc
fcompl
fwait
fwait
lcall
fiaddl
pop
test
adc
push
inc
pop
or
lret
sbb
lds
arpl
and
popa
pop
rcr
pushf
lret
jbe
inc
dec
repnz
add
jae
inc
stc
adc
divl
test
xor
sub
test
loop
out
adc
popa
cmp
pop
jmp
adc
inc
pop
in
mov
pop
and
ficoms
insl
roll
rep
sub
dec
stc
fdivl
out
repz
gs
ret
mov
mov
in
ljmp
shrb
pop
lahf
jbe
inc
mov
pop
out
push
dec
div
push
pop
sbb
shll
inc
jge
daa
sub
xchg
ret
push
imul
fiadds
pusha
ja
fucomip
and
pop
jb
adc
rep
sbb
bound
mov
push
sub
lods
and
popf
cli
sahf
pushf
adc
xchg
pop
pop
jno
xor
mov
pop
and
stos
sarb
push
test
in
scas
mov
imul
sbb
lret
das
jp
clc
cmc
sbb
mov
int3
in
cli
shrb
movsb
and
call
scas
xor
xor
add
in
int
or
cmpsl
push
pop
out
lret
xchg
mov
dec
sbb
fists
lret
mov
push
mov
frstor
bound
add
push
jb
mov
pop
je
in
push
xor
imul
mov
and
cmp
jmp
lahf
rep
lods
in
mov
push
push
mov
test
cs
mov
aaa
in
pop
aad
rolb
xor
imul
jle
sahf
dec
lcall
pop
jo
mov
jge
pop
jmp
push
inc
lcall
repz
icebp
movsb
lock
fsubr
jle
out
dec
inc
sbb
xor
mov
mov
or
or
dec
jbe
cli
cli
xor
mov
arpl
addr16
stos
mov
sub
and
xchg
cltd
dec
stos
stos
aaa
jp
jb
or
cmp
lret
jb
push
cmpsb
popa
or
mov
scas
mov
test
jl
mov
mov
mov
xchg
xchg
dec
inc
sbbb
mov
sbb
int
cld
fs
cmp
fisubs
repz
mov
aaa
lods
ja
inc
inc
lret
mov
arpl
lods
adc
repnz
xchg
mov
mov
add
push
mov
test
js
xchg
dec
fwait
mov
jns
fisttpll
and
negb
rcrb
dec
push
jmp
push
stc
lret
daa
lds
sti
movb
mov
nop
and
add
movsb
mov
stos
stos
mov
push
sub
cltd
lea
inc
es
xor
aaa
fwait
push
push
sahf
push
mov
flds
add
insb
shrl
sub
xor
ja
pop
add
fisttpl
call
stos
shlb
sbbl
add
xor
hlt
dec
aam
aaa
out
test
repnz
cmc
cwtl
ret
mov
std
or
dec
push
push
cmp
and
xchg
sub
pop
out
inc
mov
js
dec
push
sbb
mov
adc
sarb
and
outsl
outsb
xlat
loope
add
jp
push
adcl
sti
aad
fldcw
dec
int
or
sahf
leave
sbbb
fldcw
out
frstor
push
inc
jno
fcompl
jns
and
mov
stos
insl
dec
sbb
push
cmp
loop
daa
lcall
incl
sbb
daa
dec
je
sbb
fidivrs
in
mov
xchg
gs
mov
mov
lret
and
loopne
mov
and
das
jg
or
sub
outsl
xchg
out
clc
fwait
std
dec
adc
xlat
or
mov
inc
pop
stos
cwtl
movsb
push
xchg
and
mov
mov
cmp
addr16
inc
xchg
cmp
int
adc
mov
loopne
notl
divl
adc
jge
popl
sub
and
and
idivb
mov
mov
mov
les
mov
jnp
sbb
jg
repnz
movsl
das
outsl
dec
pop
or
lods
les
inc
or
push
and
test
imul
repz
pop
and
adc
mov
rcll
push
add
ficoms
or
fwait
dec
inc
xor
scas
sub
pop
adc
das
outsl
push
fildll
mov
xor
or
and
int
sbb
mov
cmc
cmp
daa
andb
jp
test
mov
ja
jl
sbb
push
lret
mov
jo
inc
push
jmp
cs
std
mov
jmp
cmpsb
add
ror
les
mov
pop
repnz
and
fdivrs
mov
clts
jnp
shll
add
fistps
inc
insl
jge
cmp
in
adc
addr16
or
sub
es
dec
stos
mull
pop
insb
push
rcrb
and
ljmp
sbb
jno
shll
imul
int
movsl
fadd
add
ret
std
test
mov
decl
sub
xchg
fstl
sahf
cmp
mov
cmp
inc
push
enter
orb
or
mov
xchg
sub
js
inc
fiaddl
xor
sub
loope
mov
add
ret
cwtl
pmulhw
mov
mov
xor
pop
adc
cmp
out
stc
push
push
popf
jb
inc
and
add
cltd
test
add
push
or
push
rdpmc
adc
inc
adc
insb
push
je
addr16
xor
js
mov
out
xor
xchg
aam
ficomps
mov
inc
test
cmp
xchg
ja
pop
movsl
push
hlt
lret
lahf
call
xor
sub
sbb
inc
or
ds
in
and
push
sub
pop
stos
sbb
add
dec
js
pop
inc
loope
pop
pop
mov
mov
fcomps
cmp
jecxz
call
dec
mov
inc
lret
mov
sahf
in
jo
mov
push
pop
jne
and
scas
lea
fwait
push
mov
push
jno
cld
popa
xor
filds
push
mov
imul
xchg
mov
inc
jg
rcrb
mov
outsl
dec
pop
movl
jb
or
in
and
movsb
in
addr16
lcall
or
insb
cmp
int
out
cmp
loop
iret
push
in
shrb
and
sbb
xchg
push
add
or
cli
sub
addr16
push
or
stos
test
int3
sarb
and
lcall
xchg
pusha
jl
addr16
gs
incl
lods
cltd
jmp
pop
and
addb
jmp
add
leave
mov
pop
jo
pop
scas
ljmp
enter
decl
jecxz
inc
pushf
jb
jl
inc
mov
fdiv
testb
pop
mov
sahf
lock
mov
and
std
rolb
mov
mov
xorl
shld
add
adc
and
and
hlt
icebp
sbb
lret
js
test
fnstenv
rcrl
jp
lret
and
imul
lods
mov
popa
test
mov
fsubrp
jp
adc
jnp
rol
xchg
fcomip
fwait
mov
dec
mov
sbb
cwtl
mov
xchg
std
add
dec
ds
cmpsl
push
and
movsb
jbe
and
mov
lcall
jne
push
mov
enter
or
xchg
inc
xor
mov
sub
fsubs
push
loopne
scas
mov
in
rcrl
ficompl
add
or
and
nop
lods
out
jnp
es
xor
popf
lret
and
push
dec
lahf
int
adc
sbb
lcall
sbb
callw
aam
out
data16
out
or
imul
add
jmp
pop
push
adc
dec
xor
pusha
int3
or
es
inc
nop
arpl
sub
inc
cmp
xor
pushl
or
dec
dec
out
push
push
test
dec
out
or
push
aam
loopne
mov
pushf
addr16
mov
inc
mov
cmp
lahf
pop
cmp
pop
jge
mov
iret
jp
xchg
cmp
enter
fsubrp
sub
push
popf
loop
push
pop
movsb
loopne
jbe
sub
push
xchg
and
ljmp
mov
sub
cmovb
ljmp
adc
inc
xor
xchg
push
jo
push
mov
pop
sub
and
stos
addr16
test
call
aam
mulb
out
lret
adc
pop
pop
dec
inc
test
cmp
sub
push
lcall
inc
push
or
mov
pop
jle
repz
iret
gs
sub
push
xchg
pop
pop
loopne
xlat
sahf
scas
mov
cmp
fildl
cmp
xor
xor
xchg
fnstenv
out
dec
mov
out
faddl
out
dec
inc
adc
xor
mov
mov
int
xchg
lahf
mov
bound
iret
or
outsl
sub
rcrl
outsb
cld
sub
fistps
aaa
fisubrs
sub
into
adc
lcall
sbb
push
mov
les
vmread
add
pop
inc
fwait
lahf
rolb
lcall
mov
and
loope
popf
add
xchg
cld
in
mov
addr16
fisttps
test
out
adc
mov
pop
jl
xchg
dec
xchg
or
addr16
xchg
hlt
inc
or
mov
jne
and
sbb
jbe
mov
jle
inc
sahf
roll
cs
clc
bound
inc
add
in
mov
or
lds
cltd
in
in
sub
or
out
pop
push
adc
inc
mov
jae
in
repz
pop
int3
xor
iret
stc
push
bound
out
jae
adc
dec
aad
hlt
mov
and
xor
sbb
or
cmpb
adc
outsl
mov
shll
jae
fcoml
out
js
pushw
add
xor
or
mov
inc
jle
sti
cld
aad
mov
push
and
popf
les
push
sbb
mov
addps
cld
mov
sarb
lods
jmp
pop
pop
or
jo
roll
jmp
imul
mov
mov
daa
ret
cmc
xchg
pop
in
test
nop
mov
and
fisubl
int
cmp
push
scas
sbb
fldenv
nop
jns
std
mov
pop
movsl
jl
adc
scas
fimull
jmp
popa
push
stos
ja
or
lods
pusha
cmp
sub
std
mov
mov
add
cmpsl
notl
ljmp
inc
aas
aam
aaa
pop
cmp
adc
incl
mov
and
fcmovu
adc
mov
insl
loope
arpl
imul
ja
sahf
orb
mov
push
pushf
cmp
xor
cld
push
push
pop
aaa
adc
xor
add
clc
in
dec
ds
sub
mov
lcall
daa
push
and
xor
jg
ret
dec
push
lahf
mov
adc
ficoms
add
or
call
mov
add
test
rcrl
dec
mov
inc
es
inc
inc
repz
loopne
cmp
fcmovu
loop
es
ret
aas
repnz
daa
inc
and
out
fsubr
aad
mov
inc
movb
mov
mov
add
jecxz
xchg
mov
mov
adc
addr16
out
cmpl
repz
pushf
mov
pop
xchg
fists
or
fsubrs
mov
sti
dec
inc
in
and
insl
enter
mov
fisubs
inc
cmpb
scas
xor
iret
adc
in
pop
hlt
loope
cmp
adc
xchg
mov
adc
fstpl
xor
cmp
stc
add
sbb
sbb
add
pop
push
xchg
aaa
imul
cmp
je
loop
call
jo
dec
xor
cld
adc
ss
xor
xor
arpl
xorl
pop
inc
cltd
std
imul
divl
lahf
xlat
je
ss
fstl
xlat
mov
mov
pop
or
inc
add
out
bound
add
insb
sub
mov
mov
test
pop
inc
pop
mov
sbb
and
dec
and
push
add
mov
ret
hlt
and
and
sbb
cmp
cld
add
mov
int3
inc
sarb
or
repz
js
mov
fisubs
push
jnp
fisttps
sub
cmp
clc
inc
repz
sbb
jmp
js
movsb
movsb
mov
dec
in
pop
push
inc
aas
ltr
dec
fimull
pop
scas
xchg
clc
jnp
das
jb
dec
and
mov
stos
popa
div
icebp
xor
loopne
mov
dec
mulb
adc
shll
loope
stos
sahf
jecxz
cmp
imul
loopne
or
test
sbb
sahf
gs
pop
pop
or
cwtl
shr
xor
jnp
aad
sbb
pop
xchg
adcl
push
push
pop
popa
dec
cs
call
stc
pop
mov
ficomps
jecxz
mov
arpl
jg
or
in
jbe
jecxz
mov
jle
idivb
fmuls
sub
pop
dec
xchg
idivl
ja
mov
in
inc
inc
in
pop
mov
movsl
mov
and
or
and
loop
popa
lret
adc
mov
mov
cmpsl
jmp
lods
xchg
sub
out
mov
scas
push
mov
sub
mov
inc
push
gs
or
jp
cmc
stos
sub
cmpl
inc
pop
xchg
jecxz
jno
jno
dec
stos
aad
mov
mov
ljmp
jne
mov
leave
add
inc
mov
jp
mov
mov
je
or
cmp
fldcw
fldt
mov
dec
inc
lret
loop
xchg
pop
les
nop
int3
push
cmp
lods
pop
sbb
or
pop
push
gs
xchg
push
xchg
push
jl
adc
stc
xor
sub
xchg
inc
sbb
xchg
xchg
sbb
insl
pushf
cltd
sub
test
sbb
adc
add
xchg
xchg
outsl
jp
inc
or
lock
xchg
out
pusha
dec
or
repz
cmp
ss
es
pop
mov
push
jns
lock
scas
pop
or
xor
imul
mov
xorl
adc
outsb
dec
je
sub
mov
hlt
sub
sbb
outsl
imul
fsubs
dec
push
mov
icebp
out
icebp
testl
push
xor
sub
addr16
insl
inc
pop
mov
ficoms
leave
in
popa
notl
dec
or
les
xchg
jo
inc
std
nop
push
hlt
cmp
fadd
test
xor
and
sti
mov
xchg
int3
cmp
xchg
fs
pop
inc
add
dec
out
sub
adc
or
add
dec
sub
rorl
pop
cmpsl
jo
ds
mov
test
ja
leave
mov
mov
inc
les
or
xchg
xor
sub
xor
dec
push
inc
mov
ds
mov
inc
inc
fnstcw
in
and
stos
jo
inc
fisubrs
and
xchg
cmp
fdivr
mov
fcoms
cld
inc
outsb
adc
js
mov
xor
mov
in
std
pop
dec
jecxz
cwtl
leave
push
in
cmpsl
test
cmp
cmc
aaa
cmp
or
jo
jno
aad
inc
fcomps
popf
mov
fwait
gs
push
pop
sbb
dec
cmp
mov
lds
pop
leave
xor
sub
dec
mov
stos
dec
sti
xchg
mov
xorl
lods
push
jb
adc
cmc
mov
js
push
iret
pop
dec
ficoml
lret
call
fildl
mov
cld
push
xchg
loopne
push
loope
into
rorb
xchg
into
push
push
pop
cmpsl
lods
test
es
fmul
ret
inc
subb
adc
and
sarb
jbe
xor
dec
mov
imul
les
sub
mov
xor
xchg
push
imul
iret
mov
or
sti
ss
es
faddl
add
or
fnstcw
sbb
shrl
or
test
test
in
inc
neg
inc
xchg
jne
and
push
xor
push
adc
inc
imul
pop
ds
ss
sub
mov
insl
lea
xchg
sub
enter
or
cmp
adc
es
flds
movsl
repnz
fstps
cmpsb
cmp
imul
mov
ds
repz
stos
xchg
mov
dec
divb
rorl
inc
mov
jp
pushf
adc
add
inc
fs
or
dec
fistl
adc
cwtl
sbb
fildl
xchg
sub
ret
call
jnp
aad
push
dec
test
sub
push
adc
lret
jge,pt
adc
jno
cmc
push
inc
mov
imul
loopne
aad
mov
push
pop
dec
lods
rcrb
xlat
sub
in
xor
pop
mov
inc
test
cmp
xchg
test
insb
lcall
mov
insb
mov
push
sub
lcall
cld
lcall
cmp
xor
pusha
lods
pop
pop
inc
or
sbb
bound
cmpsl
pop
scas
xchg
sub
mov
or
out
clc
mov
mov
dec
rorb
jb
ret
fsubr
xchg
and
jmp
sub
sub
imul
mov
into
sub
cmp
jecxz
fnstenv
xor
jne
cmp
or
js
jp
inc
and
xor
shl
movl
imul
in
pop
into
push
mov
mov
pop
lahf
dec
lea
mov
xchg
cmp
decl
testl
add
outsb
mov
dec
adc
iret
xchg
pop
pop
ret
jns
jl
or
cmp
xchg
test
cmp
lods
or
xor
lcall
sbb
push
daa
pop
xchg
fisttps
jbe
or
sahf
ret
daa
cmpsb
rcrb
dec
pop
mov
add
xor
xor
insb
mov
pop
sub
jno
mov
xchg
cli
bnd
into
xor
sub
adc
in
dec
jecxz
or
std
xor
sahf
mov
mulb
shrl
xor
repnz
mov
xchg
add
pop
or
or
sub
push
add
add
jno
loope
push
sub
jo
lahf
scas
enter
push
sbb
adc
pop
call
pop
je
addb
mov
and
mov
imul
mov
lahf
dec
pop
mov
push
sub
jbe
rclb
ret
pop
cmp
lret
aaa
out
into
mov
mov
pop
ljmp
sub
jmp
rclb
lss
cmp
push
daa
push
test
loope
loope
fmuls
call
cmp
push
and
or
popa
xor
cs
push
clc
cmc
xchg
ficoms
and
insl
mov
mov
sub
cmpsb
in
nop
das
push
xor
in
lret
ret
xchg
adc
add
insb
inc
jb
rorl
js
mov
xor
fcmove
int
test
xor
shlb
ret
push
or
icebp
mov
cmp
fwait
push
and
shl
loope
es
xor
mov
jne
mov
xchg
sarl
out
xchg
sbb
icebp
ret
into
adc
xor
lret
and
cltd
jnp
cmp
pop
sub
dec
arpl
sbb
lcall
cwtl
add
inc
adc
push
mov
in
clc
ror
push
pushf
pop
and
popf
cmc
sarb
adc
clc
imul
cmp
mov
dec
sti
push
in
out
fs
sbb
mov
lahf
pop
pop
ficomps
fstpt
fnsave
lcall
xorb
fidivl
cmp
lock
cmp
adc
sarl
mov
imul
stos
movsl
cmp
mov
cli
jo
sub
push
jp
stc
pop
out
ljmp
pop
imul
stos
in
pop
mov
sbb
and
shll
fsts
clc
sti
fs
jecxz
jmp
aaa
push
ljmp
mov
ljmp
xor
adc
xor
pop
hlt
jecxz
mov
xor
movsb
les
loopne
mov
sbbb
insl
add
out
push
mov
lcall
push
out
fildl
sbb
add
jp
lea
and
sub
mov
cwtl
push
sub
in
incb
ret
lods
cwtl
lret
pusha
sub
bnd
xchg
out
repz
mov
inc
sbb
mov
pop
inc
dec
test
outsl
mov
and
loope
incl
and
fisttps
pop
andl
and
ret
int
mov
push
xlat
ret
and
icebp
and
lahf
jl
rclb
inc
or
mov
call
fdivrs
inc
cmp
imul
movb
out
push
push
lret
jns
sbb
fbld
lock
or
push
fnstcw
insl
mov
jl
sub
arpl
imul
jmp
mov
and
jno
fwait
dec
sahf
dec
xor
or
jae
ds
cmp
push
je
pop
test
in
push
test
cmp
dec
jp
loop
out
sbb
or
or
je
rorl
inc
fiadds
sarl
xor
adc
pop
inc
addr16
jae
repz
jns
xchg
and
push
jmp
add
mov
movsl
out
ret
mov
and
and
mov
sbb
lahf
dec
out
add
repnz
dec
add
xor
dec
inc
push
loop
mov
lock
in
scas
mov
mov
jb
inc
or
or
mov
mov
sub
mov
loopne
in
jg
mov
sub
imul
repz
cwtl
inc
mov
scas
pop
or
pop
or
inc
inc
sti
outsl
jae
idivl
mov
daa
adc
xchg
xor
ret
jo
bound
mov
call
xchg
popa
shlb
int3
out
lahf
outsl
popa
fs
push
iret
mov
add
xor
dec
jecxz
test
sbbb
push
repz
inc
mov
mov
adc
sbb
div
push
push
inc
inc
push
lds
cld
gs
decl
mov
mov
and
push
inc
sub
sbb
push
cmp
arpl
test
decb
arpl
xor
aad
vxorps
lods
mov
lock
cmp
pop
fldl
les
or
fwait
xchg
cmp
mov
stos
cmp
jo
dec
pop
cmc
xchg
push
aaa
sti
sahf
xchg
xchg
pop
cld
ds
repnz
pushl
inc
and
lods
xchg
push
mov
jne
cmpsl
or
xchg
sbb
int
leave
mov
inc
sbb
sub
es
sub
dec
aaa
scas
bsr
aam
rcll
ja
xchg
jns
mov
jns
in
test
loop
inc
sub
adc
outsb
decl
icebp
sbb
mov
in
inc
in
xor
in
pop
pop
call
test
jne
pop
mov
mov
adc
push
pop
fmul
sti
test
fwait
clc
pop
loop
test
outsb
sbb
xchg
jo
test
jg
add
fisttpll
fimull
movsb
and
sub
dec
shrb
and
cs
popf
adc
adc
mov
jecxz
test
inc
sbb
stc
push
fdivr
adc
repnz
shlb
das
xorl
sub
in
jns
test
hlt
or
sbb
mov
lcall
jp
mov
or
call
sub
rclb
inc
mov
mov
mov
in
or
adc
loopne
and
mov
xor
xor
and
sbb
jo
mov
push
test
xchg
mov
mov
jae
lcall
sbb
sbb
les
es
aam
aas
lods
add
fsubs
ja
hlt
lahf
pop
push
nop
data16
inc
bound
push
inc
cltd
test
sub
cs
shll
push
cmpl
fldenv
pop
pop
loope
fidivrl
fadds
lods
xchg
push
out
mov
fdivrs
push
mov
pop
pop
cmp
jno
pop
or
mov
mov
lods
dec
sarl
popa
loop
push
xor
xchg
cmp
inc
fs
mov
insl
fwait
dec
mov
je
or
test
bnd
add
inc
fnstenv
fucomp
pop
stos
ds
testl
adc
and
pop
xchg
or
repnz
mov
popa
dec
je
mov
out
pop
mov
sti
cmpb
loope
jno
add
jle
add
fadds
dec
nop
outsb
nop
ficomps
lock
arpl
jnp
lea
out
sbb
mov
add
xchg
rolb
in
insb
or
incb
in
or
in
fwait
mov
int3
bound
add
xchg
dec
mov
dec
shll
jg
cmpsb
jmp
mov
push
data16
rcl
test
in
scas
inc
sub
sarb
cmpsl
adc
addr16
nop
loopne
xor
adc
gs
inc
hlt
loopne
add
push
and
lahf
pop
loope
jmp
lock
movsl
movups
pop
pop
sbb
in
std
add
mov
and
insb
sub
adc
pop
cwtl
pop
xchg
mov
push
stos
xlat
test
repz
in
xor
cwtl
popa
dec
sbb
les
add
pop
arpl
push
and
leave
sbb
inc
cwtl
cmp
shlb
pop
mov
jbe
sbb
xor
sub
test
fidivrl
jne
arpl
repz
jnp
adc
inc
jecxz
pop
aas
jp
ja
mov
cwtl
push
mov
add
mov
pextrw
mov
sahf
outsb
fdivrl
cmp
lock
pop
sti
and
or
pop
cmp
cmp
push
movsb
sub
mov
mov
push
dec
cmp
sub
sub
push
xor
insb
in
ds
scas
jle
pop
push
cltd
rcrb
out
scas
cltd
xlat
in
stos
sahf
push
mov
inc
int3
mov
in
in
cmp
mov
or
push
lds
and
in
loop
dec
mov
xchg
push
push
or
out
int3
dec
dec
sbb
cwtl
sbb
lret
popa
pop
fimuls
rcrl
pushf
pop
ljmp
dec
cmc
insl
cmp
xchg
cmc
sti
fwait
sbb
in
pop
adc
jno
dec
push
lea
pop
lret
test
scas
loop
popa
mov
mov
bndstx
mov
mov
out
adcl
mov
push
andl
push
add
pop
fimuls
addb
jo
xchg
dec
adc
cmp
or
cld
push
xchg
dec
xchg
add
push
stos
les
sub
cmp
mov
jl
adc
push
fs
js
scas
mov
inc
stos
sbb
sbb
fwait
mov
stos
adc
or
mov
enter
jnp
jb
and
mov
das
jae
xor
or
out
xchg
fldl
sub
and
xor
jnp
dec
sub
roll
mov
mov
push
mov
cmp
gs
adc
mov
cmp
push
or
sbb
je
mov
jg
jg
lds
icebp
add
call
rcl
xor
xor
mov
cwtl
fistpl
jae
cmpsl
movl
pop
fs
scas
loope
pop
adc
fsubs
mov
dec
loope
cmp
pop
dec
sub
push
dec
rorl
hlt
pop
addb
inc
sti
cli
adc
cmpsb
xchg
aas
mov
and
ds
mov
shl
mul
icebp
and
pop
jae
sar
popf
addr16
test
and
or
inc
jae
cwtl
cltd
dec
mov
loopne
or
cli
mov
push
ret
mov
jl
iret
inc
fidivrl
insb
jmp
pop
out
add
mov
mov
js
das
sub
xlat
dec
cmp
cltd
cmp
jae
xor
idivl
inc
and
hlt
int
shlb
lds
out
subl
insl
push
add
repz
in
xlat
jg
fnstsw
xor
mov
xor
jg
mov
cltd
lods
and
nop
mov
mov
out
in
cmpsb
push
and
xchg
test
repz
cmpsb
jns
adc
pop
aam
pop
sbb
add
inc
pop
pop
cmp
test
push
add
jmp
call
insb
adc
xor
sbbb
imul
pop
pusha
aam
xor
leave
add
cwtl
pop
test
call
and
inc
xchg
imul
jecxz
add
popa
sbb
fdivl
clc
mov
xchg
cli
cs
repz
xorl
sbb
push
xor
or
xor
cwtl
push
mov
insl
notb
out
ja
dec
test
jl
hlt
pop
lods
jl
pusha
in
jo
sub
outsl
decb
jae
mov
and
add
or
push
mov
push
leave
aas
mov
pop
jge
insb
aam
push
aaa
cmpsb
sub
subl
mov
dec
fnstcw
andl
test
add
or
popf
scas
js
incb
jmp
in
aam
lcall
addr16
mov
and
jp
shlb
insb
rolb
xchg
loope
mov
loopne
sbb
push
aam
pop
mov
push
ficompl
adc
adc
dec
test
cld
outsb
inc
das
fisubrs
mov
pop
mov
pop
test
pop
ds
cld
dec
setno
dec
clc
sbbl
adc
ja
xor
push
pop
lods
jae
ret
sbb
pop
push
cmp
leave
mov
pusha
jbe
pop
mov
mov
call
or
pop
xchg
mov
pop
inc
jne
ret
test
adc
mov
ljmp
mov
popa
sbb
fsub
pop
fwait
adc
push
add
shll
stos
out
insb
aas
scas
jo
sub
cmp
icebp
cli
lods
arpl
test
lret
out
rolb
pop
jo
inc
cltd
pop
daa
scas
inc
cmpsb
add
xor
or
xor
mov
lods
pop
pop
dec
andb
sbb
lds
sbb
fwait
ja
inc
pop
xchg
mov
dec
sub
sub
cmp
out
out
jno
pop
add
pop
sub
jmp
movsb
addr16
enter
mov
inc
pop
aad
mov
es
add
in
fistpl
mov
cmpsl
mov
insb
jp
jns
in
inc
cmpsb
sub
repz
inc
cltd
iret
mov
pop
sbb
adcb
aam
aaa
add
imul
jns
lea
and
std
push
rcrl
testl
icebp
out
repz
pop
out
nop
shll
push
lods
and
and
or
xchg
test
push
imul
and
and
or
inc
pop
testl
stc
xlat
adcl
dec
mov
dec
test
aad
out
inc
adc
filds
push
mov
test
int3
shll
stos
das
rol
pop
jl
pusha
lret
cmpsl
pop
js
jb
jbe
inc
stos
dec
xlat
and
icebp
add
sahf
mov
in
pop
push
loopne
mov
mov
test
sub
mov
jae
cmp
stos
inc
ljmp
aaa
mov
icebp
pop
jl
xchg
add
ret
adc
pop
and
mov
lods
in
popf
mov
mov
sbb
or
stos
mov
dec
mov
aad
jno
xchg
and
dec
adc
mov
mov
shl
les
sbb
cmpb
stos
adc
and
outsl
out
pop
jmp
repz
jmp
out
mov
dec
ret
cmp
or
and
lods
arpl
mov
cmc
add
ds
sbb
out
cmp
push
loope
pop
mov
push
sahf
xlat
cs
stos
rclb
out
clc
mov
stc
mov
inc
pop
mov
mov
pop
mov
mov
add
popl
das
adc
dec
jb
sub
mov
mov
ja
push
cli
push
mov
mov
loop
push
dec
scas
nop
mov
dec
fs
sub
cmp
js
ss
xchg
loopne
fwait
cmp
js
or
imul
mov
addr16
shlb
mov
lret
push
mov
imul
je
sub
nop
cmp
mov
xor
xchg
iret
lock
test
jo
cmp
sbb
cs
mov
cltd
movsb
pop
clc
pop
or
test
outsb
fwait
subl
jge
jne
cmp
adc
jne
arpl
je
sbb
mov
inc
mov
gs
arpl
mov
pop
mov
jp
cmp
lock
pop
mov
psubd
outsl
rorl
popf
in
add
push
jg
and
xchg
pop
ds
dec
pop
xor
push
dec
orl
rcr
int
xchg
and
pop
scas
leave
xor
outsb
iret
aas
mov
mov
xchg
xchg
fidivs
cmp
mov
ror
add
aas
push
sahf
int3
lds
popa
adc
pop
rcl
add
push
in
push
add
mov
je
shll
push
ffreep
call
sub
mov
jp
inc
mov
out
adc
std
dec
jae
sub
xor
int3
data16
xchg
imul
pop
in
inc
jo
push
aas
or
je
mov
andb
xor
popl
dec
int
mov
pop
movsb
adc
lcall
out
mov
xlat
jae
add
mov
loopne
jb
gs
insb
add
or
adc
testb
andb
into
stc
dec
insl
inc
mov
sbb
cmp
fisubrl
mov
cmp
sub
das
movd
cmp
icebp
sbb
fwait
xchg
loop
loope
push
jecxz
jmp
cmpl
mov
jnp
aad
inc
jo
dec
dec
aad
movsl
arpl
and
and
movsb
cmpsb
push
dec
shlb
fwait
lock
negl
shrb
xchg
cmp
hlt
loop
testl
jmp
mov
push
mov
imul
mov
shlb
cmp
mov
scas
pusha
jge
stc
sub
sti
jo
lods
adc
mov
adc
mov
push
ss
mov
and
and
and
cmpsb
daa
in
mov
mov
inc
jmp
add
fstpt
inc
xchg
imul
movsl
push
bndstx
in
xor
sbb
cmpsl
loopne
push
jno
hlt
ljmp
cmp
hlt
mov
xchg
rol
lahf
push
stos
push
sub
jg
lcall
mov
pop
jmp
add
sti
inc
inc
pop
inc
push
cmp
fs
push
xchg
inc
fs
xchg
int
cmpsl
sub
cmp
scas
mov
movsb
cmp
adc
rcr
mov
jg
ficoml
and
inc
inc
sub
xchg
xor
mov
inc
ljmp
outsl
jne
sbb
sbb
outsl
loop
sti
mov
or
fadd
outsl
mov
ss
and
pop
out
arpl
push
pop
popf
fmulp
mov
push
orl
xchg
push
mov
pushf
ljmp
dec
icebp
sub
dec
js
mov
or
int3
fxch
mov
jno
cmp
jecxz
push
or
popf
xlat
mov
stc
lea
add
lahf
pop
int3
xchg
out
adc
popa
fidivs
lret
loopne
hlt
fbld
inc
or
sbb
iret
xor
lret
push
aaa
xchg
in
enter
mov
xchg
push
es
aam
xor
jo
arpl
jns
jnp
pop
stc
in
std
sub
mov
adc
mov
lock
jae
pop
arpl
dec
xchg
fwait
imul
dec
mov
aad
jecxz
and
lods
or
mov
fbld
mov
pusha
xor
jecxz
les
add
andl
adc
push
std
cmp
lahf
xor
dec
push
fdivp
add
jle
pusha
sbb
lret
xchg
cltd
add
cmpsb
aam
jb
lds
cmp
std
test
push
rcrb
and
call
xlat
addr16
cmc
shrl
ret
lret
push
pusha
jl
lods
je
lods
push
jbe
sahf
fwait
cld
mov
fcomip
mov
imul
jns
ror
sub
mov
out
sbb
outsl
jmp
dec
das
sarb
in
ja
cmp
repz
add
pop
ljmp
sbb
js
adc
shlb
mov
adc
out
jo
inc
fadd
aas
mov
xor
scas
push
popa
adc
xchg
dec
call
in
imul
test
dec
adc
fisttpll
pop
xchg
sbb
rcr
test
sbb
fdivrp
into
add
aam
pushf
pop
mov
loop
rol
mov
les
jae
jp
jge
gs
adc
pop
dec
or
pop
xchg
xchg
push
cmp
aam
add
or
mov
cs
sub
shlb
cltd
xchg
add
std
jecxz
or
pop
jg
adc
or
std
lret
jno
push
into
ficomps
outsl
dec
mov
and
dec
aaa
pusha
xor
lods
imul
movsl
xchg
jnp
mov
outsl
mov
outsb
adc
xchg
mov
pop
mov
mov
repnz
add
push
push
push
adc
sub
andb
inc
pop
pop
sbb
dec
add
inc
jmp
jne
cmp
mov
pop
dec
loopne
adc
test
hlt
clc
push
faddl
aas
aam
leave
cmp
push
sbb
daa
mov
xchg
cwtl
dec
fmul
cwtl
inc
push
jb
mov
jle
or
adc
mov
loopne
insb
fistpl
mov
add
das
fists
cltd
rorl
push
in
mov
xor
or
sub
icebp
add
cmp
cwtl
scas
fsts
addb
pop
adc
lret
jae
dec
cwtl
push
cmp
popa
inc
mov
xor
dec
sub
repnz
mov
push
sbb
dec
adc
jl
hlt
roll
mov
cmp
sbbl
test
push
xor
fwait
inc
bnd
adcl
cs
js
jb
xor
sub
out
jbe
fwait
and
stos
nop
or
add
jae
jp
or
sub
pop
or
fcmovnbe
ficoms
jge
sbb
lret
mov
cmp
fwait
pop
pop
loop
push
or
xchg
stos
outsl
xor
aas
mov
pop
popa
push
pop
push
iret
adc
pop
arpl
stos
pop
cmc
test
xchg
movsb
sbb
jge
push
push
jge
aaa
sbb
daa
jl
inc
cmpsl
xchg
scas
add
scas
ret
mov
sahf
mov
mov
cmp
inc
movsb
leave
imul
push
mov
imul
test
movsl
mov
mov
lea
add
cmp
xchg
pop
mov
jmp
int3
fsubrl
addr16
push
push
clc
outsl
add
adc
insb
cmp
lea
cld
and
adc
call
sub
jb
fmul
pop
xchg
push
and
push
cmp
mov
data16
movsb
mov
pop
out
jmp
pop
jmp
push
cmpsb
repz
jns
sbb
outsb
ja
lret
push
repz
mov
cwtl
dec
mov
cmp
fs
xlat
inc
sub
xchg
adc
lock
pop
pop
add
cmp
jp
adcl
push
sub
mov
insl
insb
bound
mov
ret
xor
cmpsl
pop
ror
lcall
out
dec
cmpsb
lock
shld
sti
lret
clc
aam
std
add
movsb
pop
push
ss
mov
insb
pop
or
inc
shrb
jno
pushf
sbb
jle
js
adc
sub
inc
mov
scas
out
dec
ret
hlt
sbb
add
popf
mov
mov
jecxz
dec
mov
cmp
or
or
inc
paddusb
cwtl
dec
dec
jae
jno
shll
jl
xchg
adc
push
andb
sarb
pop
nop
or
scas
inc
lods
add
xor
xchg
and
sub
shr
or
and
xor
inc
test
xor
mov
and
sahf
js
lods
js
mov
out
sti
inc
ret
lret
fdivs
mov
mov
pop
loop
pop
fildl
and
sbb
cmc
mov
xor
inc
cmp
pop
add
incl
push
loope
fwait
add
popf
and
or
or
call
lock
sub
dec
and
pop
sub
or
mov
jl
add
hlt
das
adc
pop
out
negl
mov
cld
or
cwtl
jg
movsb
sub
adc
insl
xchg
lods
call
push
xchg
jo
sub
sub
sub
inc
stos
shlb
mov
mov
xor
and
repnz
pop
shrb
lcall
stc
adc
adc
jbe
out
mov
rcrb
divb
rolb
icebp
cmp
ret
loope
xor
inc
sbb
dec
andb
sbb
in
es
cli
push
jmp
fstps
mov
test
lods
imul
and
push
pusha
xchg
dec
sbb
mov
inc
sbb
movhlps
sti
test
pop
mov
fadds
jmp
jg
sbb
int
test
sub
xchg
in
aam
mov
mov
adc
xlat
int
movntq
out
lea
cmp
cmp
and
insb
mov
inc
add
add
mov
mov
mov
mov
dec
addr16
xor
iret
xor
lea
mov
pop
dec
xor
xor
in
ds
dec
dec
dec
ljmp
jle
out
popa
dec
test
sub
sbb
adc
pop
push
pop
flds
push
push
dec
mov
fs
cmp
sbb
or
and
dec
jne
mov
lret
cmc
sti
and
pop
sbb
aas
loop
std
xor
or
jmp
pop
sub
xchg
mov
xchg
mov
dec
push
sub
fadd
daa
cld
shrl
add
mov
sub
and
push
cs
call
fmul
out
jge
jne
into
daa
mov
cwtl
mov
jecxz
add
and
mov
jae
fs
mov
mov
mov
cmp
and
stos
push
dec
mov
mov
dec
dec
sbb
mov
stc
inc
cmpsl
dec
push
adc
push
mov
xchg
mov
outsb
push
adc
mov
sbb
xor
pop
dec
lcall
nop
stos
bound
pop
lret
xchg
jne
or
idivb
mov
and
pop
in
push
outsb
out
rol
test
or
aam
sub
xchg
and
jb
push
int3
insl
lcall
jbe
sahf
adc
sub
cwtl
lods
push
push
fs
mov
lcall
gs
push
fisttps
jle
bound
dec
push
ret
adc
sbb
xchg
ret
push
lea
es
xor
mov
push
xchg
daa
pushf
sahf
inc
pop
dec
or
icebp
out
dec
lret
mov
sub
xor
lea
aam
out
out
and
jge
cld
outsb
xchg
ret
lods
adc
cmp
lcall
mull
adc
or
rolb
mov
cmp
out
pop
lret
insb
into
lods
inc
lods
pop
pop
xchg
cmp
pushf
inc
push
pop
cli
pop
add
mov
shl
icebp
and
mov
mov
pop
mov
xchg
xchg
sub
or
lds
int
int3
sahf
xchg
mov
dec
stos
int
or
push
xor
mov
movsl
adc
cmp
cmp
push
lret
xchg
lret
cmp
mov
mulb
sub
subb
pushf
xchg
dec
pop
mov
scas
lret
mov
loope
test
cs
jg
mov
jle
js
or
and
call
loop
jbe
jmp
jb
or
rcrl
pop
enter
push
ret
pop
lcall
jge
pop
decb
mov
jb
sub
jnp
mov
push
sub
int3
cmp
or
mov
fisubs
test
xchg
adc
sti
cmpsl
rclb
dec
movsl
cmc
je
orl
xchg
imul
daa
movsb
xor
rcr
inc
lret
push
sbb
lods
shl
or
ret
mov
dec
lods
sbb
and
pop
mov
inc
into
fdivp
outsl
ror
xchg
lds
inc
and
mov
shlb
and
jns
push
cltd
adc
cmp
sbb
or
pop
cmp
shlb
data16
inc
sti
in
sahf
mov
test
pop
pop
cli
mov
push
mov
sub
daa
call
das
dec
jg
mov
push
cmp
lahf
repnz
js
rcrb
and
pop
dec
add
inc
movsl
inc
aad
test
xchg
dec
lret
mov
xor
leave
in
js
xchg
int
push
cmp
mov
jb
jmp
mov
push
or
gs
sbb
cmp
sbb
shl
test
clc
sbbl
fidivrl
or
je
loope
and
cltd
gs
mov
scas
inc
xor
hlt
cmpsl
add
psubw
pop
clc
dec
pop
fists
inc
xchg
pushf
std
xchg
pop
in
jle
notl
ret
cmpsl
popa
call
adc
sub
das
roll
dec
lods
aam
fisttpl
int3
dec
xchg
jmp
ret
cmp
push
scas
adc
adc
xchg
shll
jle
rorl
mov
fcoml
jne
push
in
pushf
xor
negb
jnp
pop
sbb
xchg
leave
fisttpl
or
outsb
es
mov
iret
adc
test
imul
add
mov
push
pop
push
ja
push
mov
jp
mov
mov
adc
and
imul
insl
xchg
movsl
ljmp
cmp
shll
sub
inc
testb
jb
out
in
ret
gs
addb
std
jge
aad
xor
cmc
test
nop
loopne
pushf
xor
les
mov
lret
mov
jo
jmp
icebp
flds
daa
push
repnz
testl
adc
pusha
sub
add
out
int3
xor
add
add
jno
pop
dec
xor
sub
jg
jae
cmp
pop
test
push
jl
dec
loopne
enter
cmp
inc
lcall
inc
ds
mov
and
add
lret
cmp
aam
lods
or
outsb
popa
scas
push
push
stos
or
lods
push
in
push
or
mov
enter
rclb
jl
lret
arpl
in
adc
inc
and
mov
test
jno
xchg
aaa
jmp
cmp
mov
push
dec
mov
test
lret
cld
jl
mov
mov
jnp
fstpl
fs
int3
cwtl
push
repz
xchg
or
inc
nop
jmp
popf
jns
pop
push
cmp
inc
daa
rolb
mov
aad
leave
cmpsl
jno
jnp
scas
mov
aaa
pop
lret
mov
push
jno
clc
xchg
pushf
jecxz
arpl
js
and
arpl
test
mov
pop
jl
sbb
movsl
out
cmp
jno
pop
add
mov
pop
adc
daa
pushf
sub
sbb
sub
leave
fisubrl
jge
pushf
push
mov
sub
es
jg
fldl
sub
sbb
dec
dec
mov
loopne
lods
shlb
scas
mov
dec
mov
jne
je
aam
push
mov
xchg
insb
pop
xchg
xor
mov
call
and
clc
add
adcb
pop
clc
loop
xor
loopne
mov
in
stos
xor
out
xor
and
push
sub
jb,pn
pop
adc
insb
movsb
hlt
clc
lds
popf
out
xchg
out
xor
mov
rcl
inc
aad
mov
or
lds
mov
sbb
inc
xor
xor
sti
int3
mov
mov
mov
mov
test
ret
sbb
push
test
out
sub
test
push
lock
mov
ss
je
sub
mov
push
js
mov
mov
addr16
push
ljmp
fdiv
cld
pushf
test
jp
sub
adc
fstps
jb
push
pop
test
dec
and
jle
js
cmp
mov
adc
movsb
lret
dec
aas
out
or
aas
sub
push
sub
cwtl
pushf
mov
shlb
mov
adc
cmp
jns
flds
shll
loop
inc
mov
gs
inc
and
fwait
or
xchg
lods
daa
adc
js
xor
xor
jg
and
add
jno
cltd
push
jmp
mov
sub
in
sti
jne
jae
lret
xchg
mov
mov
push
out
enter
nop
movsl
std
adc
cmp
xchg
ss
es
dec
push
or
test
push
lcall
mov
jmp
ja
pushf
pushf
xchg
bound
sbb
lcall
pop
pop
mov
ffreep
dec
rorb
js
into
dec
mov
jo
sub
scas
clc
or
cmp
pushf
pop
push
loop
pop
and
es
mov
or
inc
dec
inc
push
movsl
je
lods
mov
push
ss
outsb
xchg
push
popa
pop
push
mov
js
xor
shll
sub
push
jp
jp
sub
lds
mov
sbb
test
pop
aas
pop
xor
mov
jmp
sub
ja
pop
adc
pop
std
xor
push
int3
dec
hlt
pop
push
sbb
insl
and
push
out
repnz
jmp
adc
push
sarb
jmp
cmp
orb
pop
xchg
cmp
out
jbe
xlat
popa
push
adc
mov
jg
bnd
push
mov
jecxz
imul
gs
mov
cltd
pusha
push
mov
push
xorb
mov
adc
scas
push
push
popa
push
out
xchg
ds
fisubrl
push
dec
jecxz
cmp
sbb
aaa
mov
mov
jmp
xor
mov
loopne
divl
out
pop
in
rclb
mov
mov
fwait
movb
add
inc
in
rolb
add
in
icebp
jge
nop
pop
mov
lock
pop
xlat
gs
push
pop
pop
movsb
cmc
xchg
insb
in
lock
push
mov
mov
js
push
xchg
xor
sbb
movb
cmpsb
popa
xor
cmp
push
push
subl
out
dec
inc
mov
dec
imul
jle
jp
fwait
pop
sbb
add
pop
roll
pop
adc
scas
aam
insl
push
inc
out
in
mov
ljmp
pop
sbb
cmp
test
pop
jno
popf
loope
movsl
pushf
adc
sbb
mov
xor
orb
rcl
mov
movsb
cld
inc
lock
sub
pop
je
mov
addr16
cwtl
pop
mov
out
sbb
inc
inc
lods
data16
inc
push
sub
pop
repz
xchg
arpl
dec
jmp
and
dec
inc
add
dec
adc
push
push
sbb
xchg
jle
pusha
das
xor
insl
and
scas
adc
push
inc
out
cmpsb
lret
and
mov
cmp
lahf
outsb
stos
test
int
and
rorb
mov
dec
jno
or
mov
cs
adc
pop
imul
xor
stos
xor
pop
cs
push
push
jecxz
push
ret
jae
das
push
jge
es
adc
test
lods
fsubrl
mov
insl
insb
push
cmp
mov
hlt
push
sti
mov
faddl
test
jnp
ret
clc
mov
mov
cmp
ljmp
push
push
adc
xor
jg
adcb
push
lods
cmpsb
pop
mov
adc
nop
fs
test
add
mov
les
push
fstl
in
and
dec
rorl
jo
mov
dec
call
jns
data16
mov
xchg
sahf
mov
das
adc
lret
dec
pop
or
int
adc
dec
pop
mov
lods
mov
push
fnstenv
dec
fcompl
jl
or
sub
aad
pop
mov
icebp
fsubl
sahf
pusha
lret
rcrl
pop
repz
push
mov
xor
rclw
movsl
jmp
sub
cmp
cli
lcall
or
dec
outsl
pushl
arpl
push
dec
test
and
rorl
pop
sub
dec
jae
xchg
sub
scas
cmpsb
cld
xor
sub
add
mov
dec
cmpsb
mov
pop
xchg
test
jo
dec
lret
les
push
push
fadds
jne
cs
push
aam
shlb
jg
dec
dec
jno
imul
imul
xor
aas
les
loop
inc
dec
scas
enter
pop
sarb
imul
push
mov
or
fstl
xchg
sarb
xor
sub
xor
jmp
dec
movsb
push
xor
push
dec
xlat
and
xor
lods
inc
push
std
data16
jmp
addr16
dec
mov
ret
js
push
mov
dec
dec
inc
sbb
repnz
lret
mov
mov
repnz
jle
test
sub
sbb
aas
cs
sbbl
test
jno
and
pop
mov
mov
mov
or
mov
adc
cmc
xor
and
lock
lods
add
test
movsb
cmp
in
loopne
in
loope
cmp
pop
sbb
ds
push
cli
sub
jae
iret
push
les
fdivrs
jmp
adc
jmp
lahf
pusha
gs
inc
sub
ret
lret
jne
xchg
sub
aas
jmp
and
notl
lds
sbb
sub
xchg
cmp
pusha
xor
inc
cmpsb
push
jge
cli
sub
sub
push
ret
pop
imul
rcll
mov
cmpsb
and
jns
pop
lret
jg
lret
adcb
test
dec
into
dec
mov
lds
jle
jp
cltd
std
jmp
sbb
imull
or
dec
lods
fmull
or
jl
jns
pop
in
pop
dec
aaa
push
push
cmpsb
jne
cmp
std
mov
pop
push
or
sti
and
xor
xchg
jnp
gs
cmpsl
jge
pop
or
iret
adc
and
pop
fistpl
lcall
adc
mov
dec
ret
pop
mov
xor
shrb
in
jp
lahf
xchg
in
in
cwtl
pop
popf
scas
pop
add
out
mov
mov
adc
fnstenv
pop
fistpll
jge
dec
sub
shlb
inc
cmp
sahf
fs
and
cmp
push
xchg
loop
lea
enter
icebp
sub
lods
aam
lcall
mov
jns
xor
call
repnz
add
out
f2xm1
ret
dec
pop
andl
mov
inc
mov
ret
shrl
mov
dec
sub
je
cmpl
negb
leave
push
insl
rolb
pop
push
outsb
into
sbb
movl
hlt
or
dec
ret
jae
iret
inc
icebp
cmp
pusha
inc
lcall
inc
inc
aaa
ljmp
dec
mov
fstps
sbb
sub
mov
imul
ds
push
cmc
lods
push
mov
das
pop
rolb
std
inc
fwait
push
jg
aaa
stos
push
adc
jge
sbb
xor
pop
push
aam
pop
mov
out
pop
and
cmp
add
xchg
test
sbb
ja
and
or
fwait
outsb
or
adcl
adc
mov
out
sbbb
lods
xchg
mov
sarl
sub
and
xor
xchg
not
mov
pop
pushf
push
out
cmpsb
xchg
xchg
bound
or
mov
dec
imul
rcll
das
push
int3
lods
sbb
jne
push
ror
rcll
daa
sub
dec
mov
push
mov
pusha
shll
mov
fs
mov
fisubrl
mov
push
cmp
xchg
jo
mov
std
clc
and
jmp
cmp
daa
hlt
lea
push
mov
lock
lea
leave
hlt
inc
mov
dec
adc
mov
cld
idiv
cmpsb
imul
sbb
mov
in
or
cmc
and
testl
sbb
dec
and
inc
int
jg
dec
clc
rcll
adc
lods
cmpsb
les
sbb
rcrb
icebp
or
pop
lret
xor
fisttpl
scas
inc
dec
pop
fs
cmp
gs
cld
xchg
xchg
jle
adc
scas
sub
aaa
loopnew
push
or
fisttpll
int3
cs
sahf
dec
mov
or
push
jno
and
fcmovbe
and
pop
cmpsb
mov
xor
aam
arpl
push
out
mov
sub
pushf
mov
cmp
push
ss
aad
sub
inc
sbb
mov
inc
lods
in
xchg
dec
fcoml
mov
push
xchg
sarl
fdivs
fisttpll
jg
mov
arpl
orl
xchg
rclb
sahf
mov
mov
and
jecxz
xor
and
aam
xchg
add
test
inc
mov
imul
hlt
sbb
imul
sbb
mov
shll
jp
inc
jle
pop
fs
cmp
rorl
mov
insb
repnz
pop
xchg
cmpl
xor
jnp
outsl
out
popa
imul
lods
and
sbb
mov
nop
pop
mov
shrb
lahf
add
and
adc
mov
fisttpll
insl
jl
push
outsb
leave
lret
cmp
add
aaa
out
mov
mov
imull
lcall
lea
jle
push
cmc
jb
data16
out
jne
adc
pusha
mov
add
jno
jp
in
inc
sub
jno
and
xor
jge
pop
es
stos
lea
inc
pop
stc
mov
mov
imul
and
adc
in
cmp
push
xrelease
mov
lods
imul
sub
push
gs
pop
imul
test
add
and
icebp
lock
test
out
mov
xor
sub
xor
cmc
xor
mov
addb
mov
scas
xchg
jne
mov
adc
outsl
lds
pop
fsubr
repnz
pop
shrb
fs
or
add
mov
mov
push
jmp
insl
cmpsl
lea
subl
jge
test
cwtl
jne
sti
dec
in
in
repz
dec
xor
xchg
cld
out
lret
mov
ret
imul
mov
xchg
pop
adc
xor
dec
aad
aam
je
mov
sti
xchg
ret
pop
in
stos
xor
mov
fidivrs
sub
sbbl
mov
sub
sub
cmpsl
mov
test
in
out
rcrb
mov
inc
bound
test
icebp
loope
mov
mov
xchg
dec
adc
out
mov
xorl
aad
lock
inc
fwait
pop
sbb
or
adc
xchg
sbb
jne
scas
or
test
xchg
ja
movb
ds
or
mov
lods
jne
stos
repnz
add
or
into
cmp
test
lret
push
cmp
shr
sbb
mov
mov
xchg
mov
pop
inc
pop
mov
add
jle
cmp
aas
loope
add
mov
out
out
sub
out
and
lahf
jnp,pn
mov
adc
pushl
and
xor
mov
push
dec
push
push
dec
aaa
popa
test
xlat
lret
xchg
adc
push
cli
push
mov
mov
xchg
lcall
and
sub
ret
push
push
adc
pop
mov
sbb
or
je
push
in
sub
lcall
mov
ja
fisttpll
fisttpll
call
movsl
mov
iret
adc
pop
daa
push
inc
pushl
mov
xor
xchg
and
and
arpl
test
pop
mov
outsl
adc
and
sub
adc
repnz
es
xchg
jnp
mov
out
das
mov
dec
fwait
add
jb
xor
pushf
pop
in
testl
push
adc
push
xchg
cmpsb
into
and
or
addr16
dec
push
inc
sahf
popf
xor
cmp
xchg
test
ret
add
mov
stos
outsb
xchg
cmp
sbb
jae
out
inc
xor
push
das
jecxz
inc
rcll
inc
and
cmpsb
test
pop
jecxz
jge
ret
cmp
and
dec
sub
hlt
rol
sahf
addr16
jns
or
daa
in
jns
out
push
loop
xor
mov
xchg
sub
xchg
ficomps
loop
inc
mov
mov
xor
jmp
out
sub
mov
test
mov
inc
mov
xor
push
xchg
inc
adc
rep
xchg
sahf
and
mov
xor
cs
jns
clc
or
fstpt
sbb
pop
mov
mov
sbb
into
mov
fnsave
insb
jae
jg
or
mov
jne
add
jmp
or
mov
std
outsb
cld
adc
pop
out
or
xor
leave
and
jmp
sbb
sahf
inc
push
jmpw
mov
sbb
mov
mov
outsl
dec
and
mov
inc
push
push
xchg
push
push
das
mov
cmp
mov
arpl
aam
pop
loop
or
mov
xlat
xchg
jns
mov
mov
out
jb
repnz
aaa
loop
xchg
xchg
or
mov
mov
add
mov
mov
xlat
sub
ds
inc
inc
stos
mov
or
xor
clc
inc
pop
jo
or
push
subb
dec
mov
mov
shl
dec
and
dec
stc
fcmovnu
and
or
inc
loopne
roll
jae
push
inc
mov
pusha
xchg
xor
int3
add
es
jle
xor
movsb
cmp
sub
pop
inc
pop
sub
mov
push
pop
pop
in
inc
mov
addr16
pop
add
xchg
lds
or
push
loopne
movsl
cmp
xchg
sbb
loope
xchg
shlb
add
scas
xor
push
cltd
jbe
enter
ret
xchg
insb
mov
xor
push
push
xchg
js
rorb
sahf
in
bound
call
mov
pop
cmpsb
aaa
jno
sub
mov
sub
mov
dec
inc
in
sbb
les
push
pop
mov
and
mov
adc
test
sub
aam
lods
push
or
jg
test
mov
mull
insb
xchg
mov
cmp
addb
arpl
cmp
sbb
sub
jp
xor
push
mov
fmull
cli
sub
lret
sbb
ret
pop
sarb
jl
fldl
pop
sbb
sbb
jnp
dec
sahf
xor
inc
or
arpl
mov
or
jl
jg
out
scas
mov
bound
cli
jnp
cmp
mov
ds
dec
and
adc
inc
jnp
cli
call
sub
jb
imul
mov
jnp
sub
filds
xchg
pop
push
inc
xchg
js
pop
ret
dec
cmp
pop
inc
pop
shlb
into
xor
jns
xchg
xchg
adc
adc
mov
or
mov
jp
xchg
fldl
ss
popa
xchg
dec
xlat
jo
imul
cmp
sub
cmp
dec
adc
repz
lahf
aas
jbe
aam
jecxz
inc
scas
ljmp
cmp
mov
push
test
testb
mov
mov
mov
lahf
outsl
fsubrs
mov
fidivl
push
or
popa
jb
jo
sub
pop
rcrb
and
lods
repnz
loopne
je
sahf
pop
push
test
inc
ljmp
inc
jns
icebp
stos
icebp
popf
and
push
add
xlat
xchg
mov
xchg
call
fsub
xchg
sti
jno
mov
adc
push
xchg
jg
xor
cmp
pushf
cmpsb
frstor
adc
adc
cmc
pop
mov
loopne
int3
mov
jp
fcmovu
insb
dec
bound
inc
nop
cmp
dec
lock
dec
js
adc
in
ja
push
mov
ficoms
push
or
jnp
push
sbb
out
cmpsb
mov
int3
push
pop
jge
in
scas
mov
xor
mov
dec
and
inc
mov
ja
sbb
mov
outsl
int
aaa
pop
pushf
loope
push
pop
mov
ret
lods
push
add
push
xchg
and
aas
mov
dec
mov
imul
lret
or
inc
jno
cmpsb
cld
inc
enter
lahf
addl
das
add
pushf
or
rorl
fs
fbstp
repz
pop
call
mov
push
pusha
bound
xor
mov
subb
mov
inc
in
pop
insb
rcrb
add
in
sbb
icebp
push
rolb
clc
stos
sbb
divb
cltd
cmp
xchg
test
cmpb
push
or
add
adc
stos
pop
push
in
in
aas
inc
sub
mov
mov
pop
lret
mov
jbe
gs
aam
insl
adc
loopne
push
cld
fwait
and
dec
cmpsl
push
mov
test
stc
mov
push
add
lock
mov
dec
orl
add
into
pusha
mov
xchg
cli
inc
inc
fistpl
out
fbstp
adc
xchg
push
hlt
mov
add
ljmp
mov
test
mov
dec
icebp
ljmp
add
pop
dec
scas
add
inc
cs
addb
ss
xor
lea
pushf
adc
subl
mov
mov
adc
xor
mov
mov
push
mov
sub
mov
mov
loopne
int3
mov
mov
xchg
test
test
jp
mov
jno
adc
mov
les
add
mov
imul
dec
push
int3
jo
push
es
xor
jb
xor
pop
or
mov
inc
or
jno
fisubrl
ret
out
shl
pushf
mov
mov
jo
xchg
aaa
ss
mov
ret
clc
jle
hlt
sbb
push
shr
jmp
cmp
inc
mov
fs
pop
push
testl
push
ja
sbb
pop
cmp
test
aaa
mov
or
mov
or
arpl
adc
das
cmp
aad
int
shrl
xor
inc
mov
enter
cmp
sbb
mov
insl
sbb
in
insl
add
inc
mov
push
pop
aam
sub
or
sbb
add
leave
or
in
mov
jne
cmp
or
push
jne
icebp
push
dec
lods
imul
mov
pop
mov
cmp
sub
fists
push
sbb
push
cmc
das
std
testl
data16
inc
sub
sub
xor
cli
scas
sub
loop
das
xchg
mov
sbb
mov
sti
or
movb
pop
push
xorl
insb
je
mov
jo
out
mov
push
movsl
sub
cs
or
jmp
jns
dec
jo
es
inc
jle
lcall
fstps
adc
dec
xchg
or
dec
jg
dec
xchg
pop
pop
jne
scas
fildll
lea
mov
loope
xchg
out
jp
mov
call
jbe
jmp
mov
es
sub
jb
mov
inc
dec
lret
pop
fistl
cmp
nop
repz
jbe
pop
xchg
xchg
push
call
lock
dec
movsl
loopne
cmovne
bound
xor
mov
cmpsl
add
fdivs
cwtl
imul
fistl
mov
jmp
dec
xchg
movsb
pop
orl
jmp
inc
lahf
cmpsb
xor
add
mov
ror
and
xor
lea
imul
ljmp
cmpb
xchg
sub
mov
pop
ja
rolb
mov
adc
cmp
xchg
adc
push
pop
data16
insl
adc
pusha
jmp
xor
cmp
xchg
dec
pop
jne
add
mov
mov
in
and
hlt
std
mov
ficoms
push
mov
mov
pop
cmp
sbb
test
xchg
pop
mov
jbe
mov
cmp
push
and
addr16
or
or
push
adc
jns
pop
in
movsl
xchg
cmp
adc
push
and
pop
sub
jl
lahf
pop
repnz
ret
inc
pop
xorl
imul
adc
add
int
fsubrp
cmpsb
sbb
mov
es
and
lcall
jno
mov
mov
les
fsubrs
xor
iret
aam
add
lret
add
push
fdivs
icebp
xor
jecxz
jbe
jp
ret
inc
stos
pop
jg
scas
xor
push
pushf
popf
pushf
lock
shr
xor
push
mov
cmc
mov
ficomps
adc
xchg
int3
js
sbb
pop
lock
mov
out
stc
test
pop
test
jp
out
pop
cmpsb
mov
add
and
cmc
mov
pand
pop
add
mov
lret
mov
or
mov
mov
sbb
dec
mov
es
dec
add
sub
xor
jo
or
jae
dec
mov
jg
fs
dec
adc
ljmp
clc
push
scas
sbb
call
adc
jmp
mulb
rcrb
mov
rcrl
and
and
icebp
inc
xor
cmp
out
rolb
jl
adc
jle
ret
or
fadds
lcall
outsl
pop
out
aam
mov
pop
jo
lahf
push
lahf
sub
add
icebp
sub
or
test
mov
push
lcall
repnz
lods
jns
mov
mov
movsl
and
movsl
mov
bound
pop
outsb
or
addb
mov
lret
pop
out
orb
sahf
or
xchg
pushf
cmpsl
adc
push
cmp
out
call
popa
fistpll
pop
pop
push
imul
outsl
mov
decl
push
push
dec
inc
fnstcw
int
push
nop
mov
dec
sbbl
lds
ja
mov
call
push
jo
push
cmp
sarb
out
dec
mov
xchg
decl
sub
das
push
or
jge
cmc
jg
subl
inc
mov
inc
add
das
inc
push
outsl
jns
ret
pushf
not
insb
scas
mov
lea
fs
loop
sti
stos
add
outsl
outsl
negl
imul
lret
in
add
pop
and
jl
scas
inc
sahf
cltd
ja
stos
fists
push
rorb
mov
hlt
enter
daa
dec
mov
aad
lahf
mov
and
sbb
or
cmp
fwait
sub
movsb
fs
addr16
sbb
ljmp
sub
jle
mov
fsubrp
or
lds
call
mov
popf
shrb
push
incb
cmpsl
aas
pusha
in
mov
mov
js
negl
and
in
daa
and
and
lock
stc
jae
dec
mov
pop
cld
cmc
addr16
fsts
sti
out
mov
cmp
pop
lret
roll
pop
adc
adc
add
sbb
xor
sub
jg
push
dec
add
sbb
inc
push
mov
xlat
dec
mov
jp
sub
jns
ja
xorb
dec
jle
push
mov
adc
add
jno
xchg
mov
xor
xchg
push
lods
sub
pop
ret
fiaddl
mov
mov
and
add
test
jge
mov
pop
jecxz
icebp
fisubrl
sarb
dec
push
mov
into
jg
or
push
enter
add
ljmp
adc
pop
test
inc
jmp
stos
add
mov
outsl
in
pop
fmull
xchg
sahf
cmc
cwtl
xchg
mov
add
mov
sub
cmpsl
shrl
std
dec
jo
inc
xlat
imul
enter
or
or
push
cmp
sbb
in
loopne
push
mov
int3
mov
xchg
mov
or
and
arpl
push
dec
cld
std
jb
pop
and
xchg
pop
shr
push
aam
or
sbb
imulb
pop
shrb
cmpsl
int
mov
or
mov
popf
mov
xchg
and
jle
adc
cltd
jb
mov
push
repz
bound
or
adc
mov
pop
xor
neg
jb
dec
jbe
std
pop
inc
pop
arpl
cmpsb
pop
add
pop
fcmovnbe
lods
mov
adc
repz
mov
and
or
cmovle
push
inc
sbbl
jge
arpl
sub
insl
cli
shlb
imul
dec
pusha
lea
sbb
inc
jle
and
or
out
pop
sarl
push
test
clc
pop
cmp
add
cmp
inc
out
xchg
mov
xor
push
lods
popf
stos
repz
pop
test
fisttpll
xchg
or
stos
sub
imulb
adc
push
pop
cmp
je
or
xchg
repz
in
rorb
sbb
insb
mov
insl
movsb
fwait
push
je
cli
mov
loope
sub
inc
in
mov
sub
dec
add
sbb
cmp
stos
or
dec
pushf
movsl
nop
mov
insl
aas
xor
test
and
jb
sbb
in
sahf
push
and
and
inc
fstp
xchg
ret
cli
jno
inc
mov
jmp
lods
sti
jecxz
enter
mov
cmp
cmp
rolb
andl
lahf
lret
jecxz
adc
mov
dec
es
or
push
mov
movsb
jo
std
ret
mov
and
inc
xchg
dec
and
fildll
cmpsl
jge
dec
xchg
jmp
fdivrs
repz
lods
inc
daa
fisubl
cltd
pop
icebp
test
lods
lds
pop
pop
js
into
fstp
enter
fwait
or
pop
sbb
pop
addr16
mov
inc
nop
adc
sub
inc
xchg
or
jge
jb
push
sub
or
daa
xchg
xchg
push
sbb
enter
inc
int3
sbb
ja
in
hlt
push
mov
es
inc
into
fstpt
ljmp
fisubrl
and
lcall
pop
cltd
mov
push
pop
xchg
mov
out
pop
fbld
pop
pop
lock
imul
or
sti
fsub
mov
lcall
push
push
or
jmp
adc
sbb
or
mov
push
dec
xchg
jns
inc
subb
leave
mov
lds
hlt
adc
fcoml
cmp
sub
dec
sub
push
adcl
mov
sbb
and
stos
dec
dec
sub
ja
lods
stos
adc
xor
rol
std
cld
movsb
cmp
clc
arpl
fcoms
loopne
mov
xchg
pop
xlat
xchg
xor
imul
dec
ret
add
dec
aam
fstpt
aaa
aas
sbb
lea
leave
dec
jb
sti
ret
sbb
add
bound
js
push
daa
mov
push
cli
popf
cmpps
scas
xor
inc
mov
rorb
pop
mov
imul
inc
in
cld
xchg
push
insb
push
insl
push
jae
cmp
sub
and
rclb
sub
xor
add
fnstenv
add
aaa
or
pop
xchg
add
jnp
sub
push
push
add
fnsave
ja
push
mov
push
fisttpll
repz
jb
fadds
mov
mov
xchg
sub
repz
shrb
loop
jp
subb
pop
add
ret
mov
xor
movsb
mov
arpl
and
mov
sbb
jle
add
push
ret
fs
outsb
out
inc
or
xor
pop
loope
out
ret
dec
dec
dec
push
into
mov
stos
jb
add
int3
test
pop
les
out
lea
shlb
sar
inc
shlb
adc
or
cmpl
popf
push
xchg
cvtpi2ps
mov
inc
mov
int
sub
xchg
pop
sbb
nop
in
add
or
imul
mov
sub
into
clc
rcr
inc
fsubl
push
dec
mov
ljmp
pop
jns,pn
push
iret
nop
imul
fimull
jmp
add
arpl
jne
mov
test
dec
push
sbb
mov
repnz
js
fimull
pushf
pusha
dec
jo
mov
mov
adc
jbe
and
jmp
loopne
xchg
sub
loop
inc
push
sub
enter
jno
sub
sbbl
fs
in
mov
fbstp
out
aaa
stc
dec
pop
lret
sarb
bound
xchg
or
test
repz
scas
sbb
cwtl
add
clc
mov
add
xchg
rcpps
fsubp
cmpsb
test
cmpsb
out
mov
and
addl
sub
rol
push
mov
push
cmpsl
mov
ds
pop
fxch
aad
push
or
cmp
xchg
sti
xlat
shlb
pop
adc
ret
scas
push
loop
xor
mov
push
pop
mov
int3
push
cmp
sub
adc
dec
push
test
iret
sbb
out
daa
popf
mov
bound
filds
inc
mov
rorb
sbb
sbb
mov
in
mov
and
fmull
pop
and
adc
xor
divb
or
rcrb
push
and
jnp
cmp
cltd
loope
std
jle
xchg
lcall
mov
pushf
inc
inc
in
fnsave
fisttpll
inc
jo
insb
notl
insl
roll
cmc
pop
pushf
lret
in
aad
test
xchg
fdivrl
ret
int3
mov
inc
stos
call
dec
out
ds
popf
jl
ret
fcompl
lcall
in
subb
iret
pop
sti
fisubrl
arpl
pop
fsubrl
out
and
inc
xchg
leave
loope
xchg
popa
cltd
fisubs
inc
insb
pushl
sbb
scas
mov
shll
stos
cli
pop
movsb
mov
inc
adc
lods
mov
mov
gs
in
add
dec
cs
mov
mov
and
add
lret
mov
or
jl
repz
mov
sub
mov
mov
sub
out
test
push
dec
sub
mov
inc
mov
ss
out
push
push
mov
lods
je
inc
pushf
add
adc
out
test
xor
sahf
popa
dec
inc
cltd
xor
cmp
xchg
mov
and
pop
jp
mov
and
mov
call
lods
ljmp
push
mov
mov
cltd
jge
mov
bnd
mov
scas
jmp
loop
dec
ss
pop
fcomps
xor
out
pop
dec
pop
inc
in
fst
test
repz
push
pusha
mov
insb
aas
ds
movsl
scas
xor
adc
pop
icebp
or
sub
decb
scas
push
cvtpi2ps
pop
cmp
imul
out
mov
movsl
daa
or
in
out
ja
outsl
mov
jp
cmpsl
test
and
imul
es
jp
inc
xchg
push
lea
pop
movsl
sub
xor
inc
mov
jo
push
and
push
lods
add
imul
mov
xor
icebp
xchg
js
jmp
mov
push
and
jno
fistpll
adc
jb
imull
jno
xor
jae
cld
ds
jecxz
negl
inc
dec
ret
mov
jecxz
lock
ret
xlat
push
or
and
jno
cs
js
dec
jle
mov
add
aaa
mov
fstpl
push
scas
pop
fstpl
sarb
xchg
imul
or
lds
jge
mov
pop
addr16
test
dec
rcrl
adc
iret
sub
xlat
gs
int
rcll
rcl
jmp
aad
fcmovu
inc
add
pop
push
jb
lahf
mov
aam
mov
cmp
or
test
data16
push
mov
sbb
cmp
sahf
xor
lea
jb
hlt
shll
mov
push
popa
add
push
aas
jbe
push
mov
mov
jbe
and
push
adc
aad
andb
mov
testl
or
ja
outsl
je
cmp
enter
push
pop
dec
cmp
std
push
sub
fisubrl
dec
mov
and
xchg
sbb
out
pop
lret
mov
inc
stos
scas
fnstcw
jae
shll
sub
test
jo
inc
lock
xor
xlat
pushf
ror
fnstsw
push
dec
out
mov
cltd
pop
or
xchg
je
sub
out
ds
fildl
mov
rcrb
and
push
shlb
insl
xlat
fbld
xor
pop
push
jo
arpl
fpatan
popa
cmp
roll
sti
mov
leave
sbb
push
adc
jnp
les
mov
push
das
sbb
ja
aam
mov
in
insl
ljmp
adc
cmpb
jle
and
sub
lahf
push
jb
and
and
mov
push
inc
push
mov
aad
lock
dec
lea
mov
push
lock
xlat
add
fldt
cld
push
cmc
and
add
cmpsb
push
imul
pop
stc
adc
jne
cmp
lret
xchg
loopne
or
jo
pusha
lds
insb
nop
roll
imul
shl
pop
mull
data16
testl
fisubrs
ret
mov
mov
lock
xor
mov
mov
push
in
ja
je
or
pop
mov
daa
hlt
adc
xor
mov
add
xor
hlt
sub
cld
jae
fbld
mov
sbb
cmp
adc
fucomi
gs
xchg
mov
or
sbb
mov
cmp
mov
es
add
lea
or
shlb
mov
pop
cmp
fisubrl
push
pop
jg
cmpsb
push
add
rep
daa
sti
jle
pop
xorl
dec
inc
or
and
inc
rorl
repz
and
jb
fsub
dec
push
imul
fwait
dec
fimull
xchg
in
adc
inc
or
test
orb
xor
mov
adc
into
adc
or
nop
lret
adc
and
sbb
out
shll
cmpsl
aad
sahf
shlb
cmp
stos
ret
imul
addr16
insl
orb
scas
xchg
int3
mov
adc
pop
pmullw
xorb
aad
loopne
cli
push
sbb
push
cmp
ss
mov
cmp
and
push
jnp
jmp
cmpsl
addl
and
popa
push
icebp
mov
outsl
repnz
jno
push
mov
mov
mov
adc
sub
push
sub
jl
sub
pop
ss
movsb
mov
or
jmp
push
xor
jmp
je
aaa
incb
addr16
xor
jmp
ja
mov
inc
and
ss
testb
inc
and
repz
adc
mov
inc
push
pushf
jg
shlb
and
xchg
cmp
cld
ret
xor
scas
jae
ds
cld
xlat
cmpsb
mov
dec
or
dec
lods
nop
cmp
cmpsl
add
sbb
xchg
jnp
jecxz
ja
aad
sahf
idiv
push
gs
mov
inc
jno
shr
lahf
out
sahf
push
fmul
stc
sbb
idivl
pop
sbb
ds
cmc
outsb
orl
mov
xchg
repz
inc
scas
pop
cli
or
arpl
add
data16
mov
in
dec
pop
xchg
xor
hlt
add
pop
cs
adc
mov
pop
out
push
sub
das
sbb
pop
xor
lea
sub
test
fidivs
sbbl
test
push
ss
mov
pop
mov
mov
test
pop
insb
and
adc
je
data16
es
add
jns
mov
cltd
lret
xor
inc
fisubl
ds
filds
lds
mov
push
and
mov
and
mov
dec
push
xlat
cmpsl
dec
repz
fwait
lods
inc
scas
cmc
mov
and
push
insb
repnz
inc
rcrb
iret
lock
jl
sti
rcrb
sahf
inc
mov
xor
and
and
push
cmpsb
jge
or
mov
jns
cmpsl
xor
shr
dec
andl
mov
rcrb
xchg
cli
andl
mov
mov
sub
cmp
aas
jo
xchg
aaa
ljmp
pushf
pop
pop
dec
pop
dec
ds
lcall
pop
sbb
ret
iret
fwait
or
mov
jnp
repz
and
push
js
cs
mov
cmp
or
lret
rcll
arpl
sub
sbb
mov
incl
in
aad
fnstsw
adc
lret
fnstcw
mov
arpl
movsb
int
xor
jns
loop
cmpl
stos
cld
cmc
roll
jp
jl
cltd
pop
fnstenv
and
xchg
std
sbb
sti
mov
adc
shlb
ret
fs
xchg
cmp
sbb
xchg
jl
test
fwait
push
mov
dec
sahf
or
scas
insb
inc
movsl
adc
cld
int
dec
and
jle
xlat
lret
in
ret
cmp
xchg
jmp
jbe
xchg
cmp
in
cmp
jae
dec
mov
jbe
lret
fstl
and
and
into
daa
xchg
test
jge
iret
sti
jmp
mov
call
inc
daa
jbe
and
test
loopne
je
dec
xchg
push
adc
outsl
and
stos
fistpl
push
sbb
mov
cmp
sti
add
std
push
sub
insl
sub
shll
imul
pushf
scas
push
in
push
inc
jmp
add
add
push
aaa
pop
jb
pop
dec
mov
pop
mov
push
cmp
out
xchg
int
pop
iret
push
lret
inc
sarl
push
add
call
and
push
inc
icebp
mov
push
jecxz
add
mov
pop
mov
cmp
pop
mov
mov
rcll
sahf
dec
xchg
ret
repz
fidivs
aaa
arpl
add
pusha
arpl
mov
xchg
jbe
and
data16
fwait
inc
jge
mov
push
mov
fldcw
push
sub
adc
into
jae
adc
popa
jb
mov
stos
rcrl
sahf
sub
cmc
int
xlat
rol
push
cmp
sub
sub
inc
sbb
cli
cmc
popf
jle
rclb
clc
loope
push
out
sti
data16
inc
jmp
bound
testb
inc
jecxz
jbe
icebp
dec
xor
mov
inc
pop
pushf
push
mov
mov
pop
fisubrl
push
add
inc
rolb
lahf
adcl
sbb
pop
loop
in
cmp
aas
adc
sub
idivb
lds
in
pop
cmp
loop
in
lock
shlb
xor
mov
cmp
cli
sbb
adc
sbb
mov
push
pop
adc
and
out
adc
xor
pop
cmp
or
int
ficoml
sbb
lods
or
jo
add
lock
hlt
cmp
jg
adc
jbe
and
cld
cmp
stos
jo
or
loopne
popf
imul
mov
fimuls
mov
mov
stos
mov
mov
mov
fs
xor
mov
mov
movsb
add
dec
adc
jae
mov
in
inc
popa
xor
sti
mov
rclb
jecxz
fldl
cmp
adc
jp
xor
shrb
test
sub
icebp
js
dec
mov
and
lds
push
xchg
xchg
repz
cmp
out
adc
xor
daa
ret
cmp
sbb
adc
sub
push
cmpsb
or
cmp
in
and
sbb
sbb
adc
push
or
pusha
xlat
mov
incl
sarl
in
mov
js
and
fisubs
mov
sub
pop
or
lret
lcall
jp
xchg
cwtl
inc
ja
mov
xor
jp
shrb
filds
fs
loop
adc
add
sarl
out
xchg
xorb
xor
mov
bsr
cmp
jne
nop
daa
lock
mov
shrl
push
add
and
lds
dec
ret
std
adc
mov
addr16
pop
pop
push
add
test
mov
add
shlb
imul
add
js
test
adc
mov
jne
jb
je
test
out
jecxz
xor
add
mov
insb
xor
fadd
cs
aam
popa
testl
adc
loopne
adc
lret
clc
imul
dec
sarl
adc
push
rolb
dec
jg
movb
push
in
sahf
lcall
aad
int3
ljmp
mov
or
push
stc
jp
outsb
sub
sub
sub
arpl
xor
push
pop
mov
add
in
add
in
pop
nop
ret
lahf
adc
sbb
aad
xor
cmp
lret
mov
push
test
das
jmp
inc
sbb
add
sbb
test
call
xorb
cs
ljmp
inc
repz
mov
ja
fwait
sbb
jl
data16
xchg
loop
dec
stos
push
into
out
lock
imul
in
adc
out
pop
jns
mov
push
adc
aad
aas
adc
add
or
test
fisubs
or
leave
mov
bound
sbb
mov
mov
inc
leave
xchg
inc
fcomps
aas
jecxz
out
xchg
xchg
pusha
inc
mov
sbb
inc
push
pop
call
mov
xchg
dec
add
push
leave
arpl
pop
fmulp
andl
rep
cmp
adc
sub
mov
nop
mov
sbb
call
pop
sarb
push
rolb
call
or
jo
sbb
push
xlat
arpl
cmpsb
adc
dec
dec
insl
stos
jbe
mov
push
adc
and
and
xchg
xorb
and
xor
out
enter
es
mov
repnz
xchg
mov
push
sub
roll
ljmp
leave
aaa
jo
xor
dec
and
cmpl
sti
js
in
push
cmc
add
pop
cmpl
rcrl
test
loope
cmc
pop
add
xlat
xor
cmp
lods
aam
sbb
fcmovne
jns
inc
mov
pop
call
out
xchg
cwtl
mov
add
add
fwait
sbb
mov
fs
jne
call
xchg
in
lcall
push
pop
mov
sbb
add
in
or
add
or
test
pop
dec
movsb
push
lods
out
movl
jle
ljmp
mov
dec
sub
or
orl
xchg
jge
add
xor
and
popa
adc
xchg
mov
gs
js
push
pop
aad
jo
sarb
cld
fdivs
fcomip
mov
pop
out
mov
pop
rcrb
or
and
rcr
or
fwait
cmovae
mov
sub
mov
call
cmp
push
jecxz
cmp
sub
js
xchg
xchg
push
es
movsl
loopne
icebp
inc
inc
adc
pop
outsb
or
and
sub
out
leave
out
movsb
shlb
sahf
pop
pop
push
xchg
adc
arpl
mov
cmp
dec
xchg
cmp
jmp
jb
mov
shlb
addr16
and
ljmp
dec
in
cmp
fs
dec
mov
fistpll
enter
imul
rorb
sub
or
inc
xor
inc
mov
pop
mov
jb
mov
adc
or
sub
jl
jbe
xchg
std
xor
inc
addb
test
dec
push
lea
std
je
xchg
cmpsl
sbb
insl
inc
inc
mov
or
add
add
or
add
mov
or
pop
int3
cmp
test
mov
and
and
testb
cmp
and
cmp
out
cld
mov
ret
add
sub
popf
outsb
mov
mov
push
sub
xor
xchg
rol
sbb
and
int3
dec
inc
mov
idivb
xchg
jno
popf
push
push
lcall
scas
in
adc
gs
sub
cmp
sub
and
sub
cmpsb
mov
xor
cmp
jb
jnp
cmc
cmp
mov
das
setae
in
lds
xor
popa
test
cltd
int
mov
mov
out
andb
fistps
dec
loopne
fnstcw
xor
fimull
lods
mov
mov
es
stc
outsb
mov
insb
xor
mov
loope
daa
add
sub
test
mov
bnd
in
xchg
jo
dec
inc
cmpb
test
bound
pushf
insl
outsb
out
pop
push
jg
push
cltd
push
mov
cmpsb
loope
push
icebp
lea
and
in
sbb
loope
mov
je
xchg
stc
xchg
aas
pop
mov
and
data16
mov
js
lods
shrl
push
repz
aaa
clc
inc
arpl
sahf
outsl
sahf
jne
xor
inc
add
sub
test
rcrl
out
and
sbb
repz
andb
mov
lret
xchg
inc
arpl
mov
mov
or
fs
scas
ds
stc
or
ret
jle
push
test
sahf
lods
cltd
sbb
or
mov
jp
fisubl
xchg
test
and
outsl
sbbl
jl
out
rcll
inc
push
repz
mov
fwait
int
pusha
mov
jmp
adc
sbb
rclb
pop
or
bound
pop
mov
insl
xchg
stc
int3
sub
addl
js
and
pop
jno
jp
mov
cmp
lock
imul
fisubrl
leave
scas
movsb
push
inc
add
mov
push
pop
lahf
std
cmp
jns
push
jns
mov
icebp
ss
push
and
push
mov
xchg
xchg
jecxz
dec
push
in
lods
lock
jb
test
push
cwtl
mov
sti
fwait
lods
cmp
mov
and
in
scas
mov
repnz
or
jno
xor
pop
bound
add
jae
mov
sub
or
mov
insb
mov
mov
sub
pusha
pusha
stc
call
stos
loope
ds
repnz
xchg
xchg
out
arpl
pusha
sbb
mov
adc
dec
jmp
and
or
xchg
mov
js
mov
push
and
xchg
dec
fs
or
xor
cmp
push
mov
push
insl
xchg
jle
push
imul
inc
in
add
push
lods
push
mov
mov
mov
rcrl
jg
cld
sbb
jmp
rcll
cmp
nop
scas
push
insb
fimuls
sub
cmp
xchg
jo
or
xchg
dec
lahf
sbb
dec
inc
dec
out
inc
js
dec
mov
add
and
out
mov
shrl
cmp
pop
hlt
jmp
iret
add
xchg
and
push
in
cmpsb
fisubl
sub
cli
xchg
outsb
xor
cmp
pop
mov
inc
loop
inc
insb
adc
inc
jmp
testl
push
pop
pushl
sub
outsb
inc
cmp
frstor
dec
add
mov
mov
popa
lods
ficompl
lock
lahf
outsl
jo
sahf
cmp
cmp
mov
out
fdivp
loopne
out
rorb
sahf
addr16
inc
xor
pop
adc
cmp
std
les
mov
pop
pop
sti
jmp
fmulp
lret
sub
mov
xor
xor
ds
xchg
mov
insl
incl
aad
stos
shlb
and
mov
repz
and
insl
mov
add
xor
ljmp
in
push
and
daa
sbb
test
or
test
mov
dec
lret
jecxz
mov
jmp
sub
adc
inc
pop
and
imul
and
dec
dec
ret
mov
imul
sbb
es
mov
data16
mov
or
pop
scas
push
jb
ret
adc
inc
jle
xchg
call
mov
aaa
pop
xor
popf
mov
test
data16
cmp
test
add
loop
sbb
imul
pop
xchg
lods
stc
in
jae
jl,pt
mov
pop
pop
addr16
push
loope
enter
xor
xor
clc
pop
push
cmpsb
ret
lds
push
fwait
lea
and
clc
sti
and
or
inc
inc
lret
in
jge
pop
int
mov
mov
ss
jno
test
cmpb
add
cmpsl
test
stos
mov
ret
mov
fisubrs
sub
flds
rclb
out
and
repz
inc
dec
mov
xchg
roll
push
fwait
rorb
pop
dec
loope
insb
sbb
mov
icebp
and
loopne
loope
scas
dec
hlt
jne
lock
fs
sub
fildl
sub
mov
movsl
adcl
int
in
gs
sahf
fs
mov
inc
xchg
mov
mov
xchg
sarb
and
and
sbb
xor
mov
sbb
lock
inc
cltd
push
cwtl
pop
movsb
xchg
in
push
jne
push
and
push
add
pop
pusha
dec
pop
xor
call
cmp
add
aad
xchg
insl
data16
imul
xchg
push
mov
shrl
cmp
jecxz
nop
test
mov
push
jns
xlat
mov
jg
out
outsb
movsl
inc
mov
pop
stos
jb
aad
cmp
jmp
push
clc
imull
icebp
stos
or
sub
dec
dec
cmp
or
push
scas
sahf
addr16
arpl
sub
lods
mov
xchg
push
xchg
mov
dec
lret
pop
lret
adc
imul
aad
movsl
push
ret
push
outsb
cmpsb
aam
add
mov
xor
jge
sbb
pop
jecxz
push
gs
sub
push
push
lds
adcb
dec
jno
insb
lods
dec
mov
or
cwtl
out
or
sub
adc
adc
stos
fs
jbe
push
adc
mov
jp
xchg
mov
jp
rcrl
mov
mov
mov
push
mulb
call
lahf
jl
out
loope
xor
xor
push
in
clc
iret
aas
mov
sti
push
inc
btr
jnp
fs
and
gs
or
cmp
xchg
adc
stos
cwtl
jecxz
in
icebp
aas
test
xchg
add
and
out
jae
cmp
add
ret
or
out
or
movsb
lods
pop
dec
lcall
test
sarl
test
imul
mov
data16
adc
xchg
jecxz
jp
or
push
jns
xchg
jp
sbb
xor
insl
mov
xchg
xchg
push
xchg
pop
pop
sbb
mov
shlb
jl
sti
arpl
ds
jnp
ret
push
pushf
test
mov
add
push
std
rclb
outsb
add
or
adc
adc
call
das
outsb
sbb
movsl
add
outsb
xchg
mov
pop
arpl
adc
mov
mov
lods
loopne
lret
and
add
and
inc
mov
aaa
lods
dec
das
add
fdivl
mov
insb
jl
daa
lret
pop
sbb
adc
repnz
outsb
dec
sbb
jecxz
xchg
jae
jae
jne
push
jecxz
dec
sbb
xor
inc
adc
or
mov
jl
out
xor
dec
xlat
rcr
pop
jbe
lahf
pushf
dec
xor
js
xorb
mov
addr16
stos
aam
fucomp
test
imulb
xchg
mov
push
rol
add
cmpsl
test
sbb
out
aam
dec
stos
mov
inc
mov
stc
fwait
inc
add
add
repnz
adc
xor
sarl
mov
and
jmp
cmp
pusha
mov
ja
cmpsb
cmp
sub
gs
xorl
push
in
cmpsb
mov
insb
in
std
xchg
dec
dec
scas
mov
cmp
fsubr
push
cmp
mov
xor
int
mov
les
shrb
int
int
lock
and
dec
xchg
mov
mov
enter
aas
sbb
cmp
or
ds
inc
and
cmpsb
sbb
fsubl
dec
and
mov
sar
cld
fdivl
subl
fistpll
adc
inc
scas
jnp
xor
loop
mov
mov
add
dec
jle
inc
and
test
in
and
dec
push
adc
inc
dec
stos
xchg
mov
cltd
addr16
lret
mov
hlt
jp
mov
mov
fidivrs
mov
xchg
push
inc
out
in
push
xchg
je
mov
sub
and
dec
js
or
xchg
jne
sub
cli
mov
les
mov
lea
outsb
loop
mov
dec
pop
outsl
subb
out
pop
lcall
pop
je
scas
loopne
out
test
add
xchg
and
adc
inc
push
pop
xor
pop
dec
pusha
lret
scas
xchg
adc
add
push
popa
cs
jno
inc
rcrl
out
and
add
int3
sub
jo
out
test
lods
bound
push
cld
fdiv
cmp
inc
out
ljmp
dec
jmp
addr16
fs
pop
mov
notl
pop
je
loope
mov
dec
cmp
stos
fdivr
push
mov
inc
sbb
fwait
jle
mov
pop
xchg
lret
dec
cmova
lahf
sbb
ret
in
mov
jnp
push
sub
mov
lock
popa
and
mov
lea
sub
mov
push
or
cs
and
ja
lcall
cmp
cmp
out
xchg
xchg
cmc
fmuls
daa
push
jb
dec
insb
ret
push
aam
sti
inc
mov
or
js
mulb
mov
fidivrs
call
push
push
rcll
dec
loopne
cmp
cld
mov
test
rorb
std
stos
pop
std
jg
xor
pop
jb
es
call
jnp
loop
repz
dec
mov
push
cmc
js
imull
or
loope
int
out
mov
jle
dec
insl
add
xor
push
cs
cmp
lds
xchg
jge
push
mov
insb
xlat
aam
jne
or
pop
enter
aam
arpl
mov
mov
das
xchg
stc
popl
ret
sbb
xchg
add
mov
xchg
int3
inc
hlt
gs
lds
popa
dec
sbb
push
lock
jns
rol
and
mov
fnstenv
fisubrs
jbe
inc
arpl
or
icebp
mov
xorl
pop
mov
or
and
mov
inc
testb
adc
mov
jo
shl
push
leave
pop
xorl
daa
or
push
xchg
xchg
cmp
push
stc
pusha
cld
jnp
test
mov
mov
mov
aas
std
pop
jle
rcll
xlat
and
xchg
jp
popl
adc
mov
ljmp
insl
pop
mov
or
mov
sbbb
or
popf
test
ds
dec
adc
movsl
jg
enter
cltd
sbb
xchg
fimuls
scas
push
aad
mov
push
adc
cmp
movsb
push
pop
or
rorb
push
and
pop
sbb
inc
icebp
loopne
jle
jmp
ds
adc
dec
mov
inc
mov
pop
fwait
or
add
or
mov
out
outsl
mov
dec
push
mov
xchg
mov
pop
ja
test
enter
jbe
sub
mov
sub
cmpsb
or
jbe
aad
nop
inc
fmul
sbb
jl
movsl
mov
repnz
loopne
pop
into
cmp
push
jne
push
mov
or
aad
adc
lods
jne
or
mov
fidivrl
jae
fs
test
inc
pop
loopne
in
stos
pop
fsubl
adc
test
pop
xchg
fmuls
jge
jae
and
jae
outsb
mov
rolb
and
jecxz
test
lahf
jl
sbb
and
repz
push
mov
add
sub
icebp
push
in
lea
mov
jno
das
mov
idivl
call
out
imul
sub
sbb
std
das
ss
adc
mov
imul
cmpsb
add
xor
test
xor
aad
xor
lods
adc
xchg
pusha
insb
mov
ja
mov
js
lret
decb
pop
push
xor
fisttps
lcall
mov
pop
or
push
pop
negb
and
xchg
ja
push
jmp
add
add
addr16
hlt
out
popf
jnp
cwtl
xchg
mov
or
xor
xlat
mov
mov
push
or
imul
sub
jne
imul
fsts
mov
loope
es
inc
mov
push
in
cmc
push
loop
cmp
pop
aam
jg
imul
out
push
stos
cmc
mov
fldenv
pusha
pop
push
xor
mov
pop
out
and
addr16
lods
xor
or
pop
gs
cltd
lret
jns
aas
lods
mov
das
or
jmp
cwtl
fstpl
add
cmpsl
mov
adc
popa
fisttps
aas
out
loop
mov
cmp
rcrb
imul
cwtl
push
cs
ret
cmp
pop
dec
cmp
push
dec
xchg
mov
mov
adc
push
test
mov
lock
sbb
ljmp
shr
xchg
arpl
jb
js
push
lods
lock
pop
std
aaa
push
insl
rcrl
adc
lock
movsb
jg
inc
psrad
or
cmp
cmp
daa
jae
pop
add
ficoml
sub
jecxz
lret
scas
ror
aas
pusha
inc
fisubl
push
iret
jae
sub
in
incb
mov
and
push
pusha
jg
inc
cmc
fldenv
cmp
fstps
imul
cmp
rcll
xchg
stc
mov
popl
inc
inc
or
push
in
fldl
dec
idivl
leave
adc
sbbl
jle
mov
push
xorb
movsl
andb
cmc
mov
outsl
lret
aad
mov
pop
pop
xchg
pop
push
xchg
test
cmp
add
daa
subb
lds
outsl
fdivrl
rcrb
cmp
jp
adc
nop
je
fdivr
test
shll
cli
push
rcl
andl
sub
dec
xchg
sbb
js
fcoml
adc
daa
std
loope
divl
and
inc
hlt
mov
mov
and
and
in
mov
or
gs
cli
mov
push
std
into
adc
jle,pn
mov
testb
and
gs
jno
inc
adc
lock
push
shlb
insb
stos
test
enter
xor
push
aaa
mov
xor
shrd
or
jne
push
add
hlt
faddl
mov
aad
push
add
xchg
and
sahf
sub
enter
xchg
daa
lea
scas
sub
dec
jae
jmp
push
dec
std
icebp
dec
test
jbe
or
cmp
movb
clc
xor
lcall
or
and
aaa
pop
stos
fmull
mov
xor
mov
fsub
fisttpl
pop
std
outsl
push
pop
pop
cmpsb
mov
pslld
adc
lret
inc
jno
inc
xchg
clc
imul
mov
cltd
sbb
repnz
and
mov
pop
sti
fidivl
jg,pt
ds
in
xor
lea
sbb
loope
xchg
fwait
lret
xchg
rcl
pop
sbb
cmp
sbb
and
sub
popf
pop
xlat
rolb
add
xor
divl
dec
mov
sbb
ds
xor
mov
sub
pop
aas
adc
cs
jle
xor
xchg
lret
cli
fnstcw
aam
stos
push
mov
mov
mov
add
movsb
xchg
hlt
mov
pusha
popa
loope
inc
adc
rcrb
cmp
push
pop
daa
pop
loopne
daa
pop
loop
nop
dec
jg
cltd
jns
xchg
scas
mov
aas
popa
or
mov
or
push
ret
mov
push
inc
cltd
or
mov
inc
insb
call
cmp
dec
in
adc
mov
lahf
jnp
rdtsc
jno
mov
cmp
call
pop
mov
je
cmp
lret
mov
push
bound
xrelease
outsb
xlat
mov
mov
cmc
test
cmp
dec
pushf
push
add
sub
aas
shl
cmp
inc
xchg
xchg
gs
inc
sub
and
adc
aam
sub
fsubs
add
cmp
rorb
les
jo
xchg
xchg
fs
jp
push
leave
pop
push
push
imul
cmpsl
add
movsb
test
xor
cmp
or
dec
sub
pop
in
mov
sub
add
scas
dec
jae
dec
int
jecxz
adc
test
cmp
jo,pn
xor
mov
lret
mov
sbb
mov
fiaddl
xorl
push
xor
lret
or
sahf
in
adc
rorb
aaa
mov
dec
rclb
fsubs
or
iret
fs
ret
mov
enter
pop
xchg
les
out
fisttpl
pop
jge
add
dec
jg
call
and
jg
test
ljmp
push
and
cmp
mov
add
sub
sti
shll
lock
mov
lods
test
sahf
push
fcomip
mov
leave
adc
call
mov
std
fisubrl
stc
shll
loopne
or
imul
mov
pusha
sbb
or
shr
ljmp
mov
or
dec
out
testl
dec
mov
out
or
iret
in
clc
cli
ret
clc
or
push
inc
arpl
aam
scas
scas
aas
out
and
stc
mov
mov
add
fists
adc
movsb
js
rcl
mov
pop
xchg
jbe
pop
jnp
pop
and
add
mov
xlat
in
push
or
lret
xor
ret
outsb
mov
or
add
lds
dec
push
pop
pop
mov
cmp
pop
outsl
cmp
fildl
pop
dec
shl
nop
jecxz
mov
outsl
testb
repnz
ljmp
data16
fisttpl
cs
loop
mov
pop
stos
daa
or
jmp
add
mov
sbb
inc
lret
loopne
xchg
nop
and
mov
pop
xor
je
stc
test
lcall
fincstp
fisttpll
clc
stos
xchg
jge
mov
add
xchg
jge
push
adc
mov
out
cmpsl
cmp
push
jo
ss
out
add
dec
mov
dec
mov
pop
pop
ljmp
dec
stc
stos
int
arpl
fwait
icebp
ljmp
sysenter
ljmp
add
push
or
flds
ret
sub
push
mov
mov
mov
insl
mov
jle
sub
adc
pop
repnz
xor
iret
rcrb
fistpl
shll
hlt
cmp
ljmp
lahf
in
mov
mov
loope
test
pause
jne
xchg
mov
int3
jp
in
mov
leave
icebp
in
std
cmp
sub
jns
cmpsb
scas
jns
into
aam
jnp
mov
out
in
mov
jnp
addr16
dec
push
stos
lods
adc
lds
jg
dec
stos
loop
pop
aas
push
xchg
jb
sub
stc
in
add
popf
cli
loopne
aad
mov
inc
pop
mov
scas
sub
test
cmp
push
xchg
mov
mov
js
pop
dec
js
mov
fadds
ds
mov
lds
xor
movsb
movsl
lods
stos
cmp
push
pop
jae
or
inc
cmp
xor
mov
jecxz
mov
push
mov
mov
adc
push
ja
arpl
pop
xchg
or
pop
jb
xchg
mov
icebp
mov
or
iret
jne
insl
lret
test
mov
dec
outsb
loopne
jnp
rol
or
cmp
fnstcw
adc
loop
and
mov
fcmovne
ret
fs
lods
decl
addr16
pop
jno
cmp
sbb
push
pop
mov
leave
andl
inc
loope
sbb
sbb
cld
sti
lcall
ud0
std
pop
loopne
dec
inc
cmp
fs
xor
or
push
pop
lcall
mov
rcrl
fistpll
xor
jo
sbb
xor
loop
cmp
push
cmp
loopne
push
xchg
fdivp
add
add
enter
pop
mov
lret
lods
cltd
push
pop
int
sub
lcall
aam
stos
imul
jmp
ret
xor
fcoms
inc
cli
jmp
xchg
test
pop
mov
xor
adc
fcomi
shl
dec
pop
aad
inc
jmp
roll
fs
jns
pop
hlt
or
and
mov
dec
insl
pop
mov
js
std
fwait
mov
jae
xchg
ljmp
pop
push
pop
es
inc
aam
aam
jno
int3
mov
add
test
dec
outsl
add
pop
shlb
mov
mov
xor
sub
addr16
mov
sub
shrb
mov
add
jg
stos
addr16
shlb
add
je
mov
jecxz
dec
movsb
rol
js
jb
ret
std
fisttpll
fisubrl
daa
sub
ja
pop
xchg
inc
xor
cli
or
xor
push
inc
out
testl
push
fsts
add
hlt
sti
enter
xchg
movsb
loop
xchg
loopne
jb
pop
mov
outsb
test
sbb
mov
incl
jmp
xchg
out
pop
repz
adc
cli
add
jg
arpl
mov
ljmp
and
loop
cmp
daa
fstp
lds
fsubrl
mov
add
inc
out
sub
sti
pop
or
in
push
add
shll
nop
mov
sarb
nop
cmpsb
lds
in
push
jae
push
mov
push
sbb
imul
or
gs
popf
cld
and
mov
and
xlat
mov
shll
orl
es
mov
pushf
cwtl
test
dec
icebp
push
aaa
inc
add
dec
js
mov
add
push
inc
nop
add
outsb
rolb
gs
mov
jae
lret
out
rol
bound
xor
outsl
in
jne
fwait
inc
jmp
lret
cmp
cmpsb
sbb
cmp
xor
jl
lcall
xlat
mov
push
in
sahf
add
movsl
add
lock
jp
mov
leave
mov
add
cmp
sub
nop
decb
xor
xor
fwait
or
sarl
nop
int
sub
repnz
mov
pushl
aad
outsl
aam
inc
mov
in
jb
mov
push
pop
xchg
scas
in
fnstenv
fadds
sub
addr16
jp
fsubl
out
add
lret
cmp
shl
xor
sbb
nop
nop
sti
and
jno
js
imul
xor
mov
sti
pop
or
sarb
xor
xchg
test
pop
sub
xchg
shll
rorl
ljmp
sbb
or
pop
and
or
xor
rcrl
sbb
cltd
stos
popf
test
lahf
push
clc
test
or
xor
and
fsts
adc
mov
je
sti
lock
repnz
insb
test
cmpsb
push
and
xor
push
sbb
xor
rorl
in
cmp
cs
and
lcall
pushf
fildl
cmc
call
ret
jecxz
mov
or
movsb
push
leave
icebp
into
lods
fstpl
push
jl
sub
dec
fs
stos
flds
lret
in
xchg
ss
xchg
cmpsl
adc
jmp
nop
ret
jecxz
sub
sbb
leave
imul
scas
outsl
and
mov
roll
mov
stc
aad
fcmovbe
pop
data16
aad
pop
pop
or
fmull
mov
push
mov
outsl
dec
xor
pop
inc
mov
mov
scas
jno
mov
shl
mov
in
mov
xor
adc
aas
adc
push
lret
jnp
jl
push
outsl
and
addr16
lcall
add
testb
xor
add
mov
fldenv
enter
mov
sbb
ja
or
aas
jecxz
jg
ja
adc
cwtl
aad
xor
mov
adc
sbb
jge
clc
push
dec
inc
les
push
nop
push
mov
xlat
jbe
cmp
add
mov
jae
popf
mov
addr16
gs
jbe
sbb
shlb
loope
aaa
sub
cmp
enter
mov
push
popf
pop
pop
dec
dec
or
int3
fwait
aaa
or
inc
or
cs
test
pop
stc
xchg
adc
pop
shlb
lret
outsl
dec
adc
mov
dec
sub
jo
jae
iret
loopne
aas
or
jp
dec
nop
sub
inc
cltd
push
lcall
jp
hlt
jle
pop
xchg
cmp
mov
mov
cwtl
lds
outsl
mov
inc
ja
adc
fwait
cmp
push
out
mov
enter
sbb
fistl
and
xorb
aaa
fcmovnbe
inc
not
iret
ja
in
xor
je
outsb
sbb
int3
test
push
movl
pop
cmp
pop
rcrb
ret
lcall
or
leave
sti
dec
cli
dec
jnp
cmp
loop
push
sub
es
insb
int3
lahf
inc
dec
and
fucom
mov
ja
andl
cld
sahf
xor
rcrl
cmp
add
sub
movsb
fidivs
daa
rorb
lret
in
ja
outsb
adc
out
add
or
xchg
fstpt
sub
mov
cmp
xchg
ret
cmc
push
out
loopne
or
sub
mov
mov
cmc
gs
sub
bound
add
inc
lahf
mov
nop
in
jmp
out
add
jns
pop
mov
lret
and
mov
xchg
pop
ja
mov
ljmp
pop
cwtl
daa
daa
lock
std
and
cltd
dec
cmp
cmp
leave
sbb
fistpll
and
sub
mov
cltd
test
fnstenv
mov
ja
mov
leave
and
cmp
std
pop
icebp
insl
aam
xchg
clc
jns
mov
mov
fs
lds
xchg
aam
pop
icebp
pop
loopne
xor
jne
stos
dec
mov
sbb
xchg
mov
aaa
push
cmp
jecxz
mov
call
sbb
xor
ja
mov
lahf
push
sbb
in
sub
outsl
movsl
lcall
push
loope
test
dec
imul
imul
jne
sub
sub
out
clc
mov
jmp
pusha
pop
jge
jns
imul
pop
push
mov
out
rcrl
mov
popf
mov
les
nop
imul
repz
in
jmp
popa
mov
sbb
ja
cmp
jne
and
jo
daa
lcall
mov
out
addr16
cli
push
in
or
add
pop
fstpl
in
ja
or
aas
sbbl
stc
xor
fiaddl
jb
cmp
shr
lcall
xor
nop
xchg
adc
aam
push
cli
stos
xor
sub
adc
add
adc
pop
or
cs
jns
push
int3
outsb
in
mov
mov
jge
dec
jb
mov
dec
nop
push
call
xchg
mov
mov
mov
mov
xlat
sub
out
xlat
daa
popa
hlt
psubusw
aaa
adc
cmpsl
leave
pusha
in
mov
ja
jb
or
pushf
mov
cmp
sub
mov
ja
xchg
andb
push
out
inc
cmp
fwait
out
adc
pop
pop
xchg
pop
mov
repnz
out
jl,pn
mov
enter
ljmp
push
mov
jp
jp
mov
xor
or
xchg
lcall
dec
int
mov
lods
in
iret
add
cwtl
jae
mov
mov
dec
mov
insb
cmp
xchg
dec
into
cmp
push
int3
inc
ficomps
add
enter
xchg
pop
mov
push
faddl
ss
movsb
imul
insl
popw
cmp
nop
adc
sub
es
mov
xchg
les
jg
or
xchg
and
pusha
inc
lcall
cmp
and
out
lock
add
scas
mov
rcr
add
imul
ljmp
std
call
mov
insb
mov
dec
sub
dec
mov
mov
sub
dec
mov
jle
pop
mov
pop
sbb
mov
cmpsl
sbb
mov
cmp
adc
xchg
lock
xchg
insb
mov
jno
lahf
and
mov
int
lock
movsb
sahf
pop
testl
fwait
mov
movsb
xor
ds
sbb
and
out
jecxz
sbb
call
adc
lock
jno
mov
in
hlt
xlat
out
mov
sahf
push
ja
inc
cmpsb
je
lods
push
in
push
or
jb
nopl
xor
jle
sub
sbb
or
clc
adc
mov
fbld
push
or
das
mov
add
adc
es
and
pop
lahf
insl
ss
rcrb
imul
idivb
insl
notl
inc
daa
and
cs
bound
sbb
sahf
push
in
jmp
push
sbb
add
mov
loopne
adc
jmp
mov
adc
add
sarl
loopne
cli
pmulhuw
pop
push
gs
and
cmpsl
sub
and
lret
popf
ds
sub
sti
test
shl
repz
push
rcrb
iret
jb
popa
add
decl
mov
andb
enter
sub
pop
cmp
inc
inc
mov
sbb
sbb
inc
cli
jno
mov
sar
or
add
decl
mov
cmp
pushf
movsl
test
add
mov
nop
pop
in
adc
mov
jae
daa
mov
lahf
mov
rcl
pop
test
sbb
cltd
push
dec
dec
mov
enterw
int
test
in
jmp
insl
ja
inc
mov
pop
mov
aam
es
or
insl
out
pop
popa
jae
insl
call
arpl
inc
mov
inc
js
mov
cmp
in
jne
push
insl
cld
sbb
popf
mov
stos
clc
lcall
pop
sub
aaa
or
xor
out
pop
push
lds
imul
in
sbb
push
xchg
xor
jns
int
lds
mov
dec
adc
popf
popf
jl
cwtl
jg
adc
jbe
sub
loop
mov
pop
xor
iret
enter
jle
into
and
pop
mov
mov
sub
inc
repnz
out
dec
bound
jmp
dec
bound
into
mov
jmp
insb
mov
add
test
add
push
pop
icebp
jmp
mov
push
inc
btc
mov
and
pop
sbb
enter
in
cwtl
push
jp
pusha
pushf
mov
and
pop
mov
cli
xor
std
inc
mov
jecxz
out
iret
mov
jns
and
imull
jnp
lret
fbld
in
jne
fsts
and
mov
frstor
jb
aam
cmp
pop
ret
iret
xchg
int3
addr16
jl
pushf
ror
sub
fdivrp
in
jle
aaa
mov
or
mov
test
lea
mov
mov
stc
xchg
cwtl
ret
jb
jo
js
orb
sub
movsb
into
jae
cli
out
push
pop
sarl
mov
filds
mov
cltd
sub
mull
add
mov
shlb
call
mov
sbb
mov
sti
fistps
mov
push
pop
jno
ljmp
mov
pop
sbb
adc
movsb
sbb
outsl
xor
jge
ljmp
lea
adc
fistl
push
movsb
mov
push
sub
xchg
aaa
push
sar
xor
pop
in
pop
ljmp
in
adc
xor
adc
imul
push
cmp
adc
mov
mov
xor
jno
shll
loop
sbb
mov
cld
popa
insl
pop
mov
jmp
xchg
iret
daa
xchg
rcrb
mov
sbb
popf
add
xlat
lods
and
dec
and
or
fwait
pop
jns
cmp
imul
mov
scas
pop
sub
mov
jecxz
sub
movb
mov
xchg
pop
pop
addr16
call
push
lret
fisttpll
xor
push
mov
adc
or
pop
push
sbb
pop
cmpsl
es
adc
cli
js
gs
add
fcmovnbe
jns
scas
adc
fmul
in
cli
pop
ret
xchg
pop
dec
dec
inc
adc
push
aad
mov
mov
push
imul
call
std
ficomps
and
xchg
adc
fidivrl
insb
mov
jmp
and
outsl
mov
lahf
push
cmove
scas
into
std
and
inc
jg
fsubrs
jo
in
dec
aam
push
xchg
mov
mov
mov
mov
push
jo
cmc
lock
adc
pop
aaa
lahf
pop
data16
pusha
cs
nop
out
sbb
cmp
or
stc
and
in
lret
mov
cs
iret
test
push
lea
push
push
xchg
bound
mov
push
mov
xor
mov
mov
sbb
test
mov
adc
outsb
xor
sub
inc
js
add
cmp
mov
popf
rol
xchg
xchg
test
add
jae
mov
mov
push
jg
call
loope
dec
inc
pusha
clc
xchg
jbe
mov
in
inc
jb
xorl
sub
jge
mov
xchg
and
xor
das
enter
sub
xlat
iret
inc
in
mov
cld
sti
fwait
clc
jo
test
adc
das
jbe
hlt
cmc
loop
xchg
add
mov
inc
jl
mov
jmp
adc
insb
insb
xchg
fxch
push
pop
xor
cld
loop
push
add
sub
adc
rclb
xchg
repz
stos
mov
scas
pop
push
pop
or
sbb
jmp
je
jnp
or
repz
arpl
push
fmulp
ret
cmp
dec
hlt
lods
pop
xor
inc
xchg
pop
add
rolb
mov
orl
dec
mov
dec
popf
mov
pop
adcl
jle
jg
pop
xor
pop
xchg
std
sub
ficoml
hlt
into
or
push
mov
dec
aaa
xlat
lret
ds
fucomp
scas
pop
in
outsl
and
inc
mov
unpckhps
pop
shl
dec
and
jge
add
sbb
push
mov
out
jbe
jae
xchg
xlat
sti
sti
gs
and
mov
or
jg
sarb
lds
dec
xor
sbb
mov
movsl
inc
push
in
push
mov
push
shll
scas
nop
sub
xchg
pop
adc
adc
addl
cmp
push
cmc
cld
jno
sub
jno
insb
cmpsl
repz
addr16
cltd
mov
mov
inc
add
pop
sti
jp
enter
inc
repnz
sub
pusha
push
xor
xor
fists
and
adc
or
scas
inc
dec
jnp
popf
pop
xor
pop
lcall
adc
push
pusha
nop
iret
rcrl
jae
aad
cld
out
test
arpl
jo
pop
adc
and
fnsave
mov
sub
sub
dec
push
push
add
sub
pusha
icebp
ljmp
inc
mov
pop
or
jecxz
xor
inc
xor
incl
mov
scas
cs
mov
cmp
out
mov
ret
dec
loop
sahf
out
inc
call
scas
int
sub
dec
push
repz
loop
cli
sub
cs
cwtl
pushl
push
das
cwtl
iret
lock
mov
aam
mov
adcb
jnp
aad
dec
inc
dec
xor
ljmp
sbb
mov
pop
dec
inc
sbb
arpl
or
out
popa
data16
or
hlt
sbbl
aad
xchg
negl
or
adc
xorl
ds
adc
adc
in
and
imul
addr16
mov
cmp
or
pop
outsb
inc
lea
aad
call
enter
loope
mov
outsl
and
sbb
cmpsb
pop
cs
mov
jb
bound
clc
push
lret
int3
jnp
sbb
test
push
sahf
lods
ss
mulb
push
andb
mov
mov
addr16
mov
mov
lcall
push
rcr
mov
in
iret
jg
mov
sbb
and
fldt
ficompl
je
fisubs
jbe
stc
iret
jae
pop
stos
or
mov
stos
sbb
pop
and
mov
fimull
push
gs
fadd
xchg
jmp
sub
fldcw
in
and
loopne
and
in
outsl
xchg
jg
scas
jle
dec
insl
cmpb
scas
cmpsl
mov
inc
es
push
xor
push
xchg
arpl
xorl
iret
das
out
imulb
mov
movsl
jb
lock
fldt
in
inc
mov
pop
cmp
cli
jnp
jno
negb
mov
pop
sbbl
sbb
xchg
xlat
fiadds
and
imul
fsubr
in
ljmp
xor
xchg
mov
gs
mov
loopne
mov
and
and
std
les
mov
dec
ret
jp
pop
add
popf
sbb
mov
in
daa
call
data16
loop
mov
lods
xchg
xchg
add
mov
jne
mov
cmp
sub
jmp
xor
aam
inc
std
ja
sub
lret
or
psubusw
mov
push
ja
stos
in
es
repnz
stc
clc
arpl
xchg
adc
pop
and
sub
pcmpeqb
cld
xor
dec
icebp
jno
punpcklbw
mov
enter
sbb
insb
adc
sbb
js
adc
ja
outsb
loope
jge
jns
adc
jno
pop
nop
insb
ret
cmpsl
jbe
repnz
sbb
lret
imul
fstpt
mov
leave
sbb
cld
mov
sub
push
loope
sbb
inc
incb
inc
and
outsl
xor
mov
fnstenv
js
scas
adc
jmp
dec
sbb
pop
mov
cltd
rolb
ja
inc
xlat
add
mov
shr
xchg
pop
pushf
xor
fstps
xchg
repnz
mov
xor
aas
fldl
mov
or
add
int3
sub
mov
jns
cmc
loopne
adc
aas
push
jmp
xchg
stos
movsb
inc
jp
jns
jb
xor
popf
popa
or
adc
out
fs
nop
cmp
lods
int
rcrl
cli
xor
ret
lea
pop
cli
into
mov
adc
inc
add
mov
lcall
add
daa
jne
in
pop
sarb
scas
xchg
stc
pop
inc
leave
jne
pusha
cmp
call
out
rorl
sub
mov
or
outsl
xchg
rclb
xchg
sbb
stc
adc
jle
int3
aas
cmp
aam
repnz
lods
scas
shld
loop
cli
xor
shl
lcall
mov
pop
cmc
mov
les
inc
ss
in
xor
adc
cmp
xchg
rcl
sbb
fidivl
adc
dec
xlat
add
push
in
int
pop
arpl
inc
fwait
popf
ficoml
jnp
pop
js
push
pop
aam
sbb
jne
test
mov
fidivrl
mov
pop
adc
inc
mov
shr
pushf
or
imul
xor
mov
mov
xor
push
int3
dec
xchg
hlt
inc
adc
and
movsb
dec
or
mov
std
mov
jmp
pop
sub
mov
sub
sbb
fs
xor
xchg
push
mov
xlat
add
xchg
jns
hlt
cmp
mov
mov
and
or
out
gs
sub
sbb
lods
xchg
pusha
xchg
mov
les
test
push
pusha
lock
xchg
inc
adc
jnp
stc
pop
dec
mov
mov
xor
imul
xlat
xchg
fbstp
pushf
and
rol
xchg
mov
add
sbb
dec
sbb
jg
mov
jae
jb
fcoml
or
lods
fsincos
dec
and
xchg
lods
cli
inc
or
ret
inc
ljmp
and
jmp
and
hlt
enter
out
push
pushf
lahf
xchg
jle
inc
inc
sub
daa
mov
insb
or
in
push
sti
fistps
pop
mov
hlt
and
mov
ds
popa
sub
jno
mov
and
mov
xchg
dec
xchg
test
fmull
ds
xor
xor
push
cmp
movsb
mov
sbb
sahf
fst
rorb
aad
scas
sbb
push
adc
lahf
outsb
dec
xchg
adc
scas
sub
test
pusha
mov
mov
inc
lods
inc
fildll
dec
fcompl
mov
fs
nop
pop
lcall
mov
adc
and
sbb
adc
incb
xchg
jmp
add
sarb
sbb
cmp
jnp
in
inc
sbb
fisubrs
xchg
icebp
mov
add
cmp
bt
add
in
sub
pop
sbb
mov
loopne
pushf
cmp
mov
fstpt
or
xor
lock
mov
sub
inc
test
xor
nop
je
mov
inc
nop
sub
sar
xchg
negl
adc
or
scas
push
mov
stc
sub
test
dec
aas
or
lret
pop
pop
jg
ljmp
ljmp
xlat
clc
sbb
and
loope
dec
bound
adc
mov
lock
shr
scas
or
pop
xor
pop
fisubl
stos
cmp
jns
mov
pop
mov
mov
add
jmp
mov
test
push
daa
fcompl
mov
sbb
icebp
sarl
mov
push
dec
adc
fsts
sar
in
mov
push
cmpb
out
dec
add
out
cmp
fcmovne
pop
xchg
aaa
inc
test
lret
jmp
das
cli
sbb
or
xor
or
xor
data16
jmp
repnz
jo
adc
xchg
push
es
push
jb
xor
shlb
adc
andb
inc
and
out
xchg
ljmp
inc
pop
sub
pop
cld
add
and
adc
xor
leave
aam
popa
aad
adcb
push
ret
mov
sub
xorl
and
xchg
sub
or
stos
xor
in
out
pop
sti
insl
ficompl
mov
fcoml
push
loop
lret
adc
mov
pusha
stos
call
insl
out
inc
inc
lods
fsts
or
push
in
cmpl
cmp
inc
xlat
sub
jecxz
es
push
add
mov
mov
mov
imull
cmp
test
fcomp
pop
sahf
out
insb
mov
jecxz
dec
fimull
dec
adc
nop
mov
jae
adc
lods
iret
fiaddl
mov
pop
add
xchg
pop
xchg
int3
xor
mov
jmp
mov
mov
sbb
push
sub
mov
dec
movsl
mov
xchg
xchg
ss
xor
xchg
shrb
imul
loope
jae
jns
jne
int
mov
arpl
lahf
mov
in
push
lret
xchg
mov
std
pushf
mov
dec
xchg
mov
jb
and
fsubrs
sbb
sub
repnz
dec
sbb
mov
lcall
or
push
mov
ffreep
mov
stos
bound
das
xchg
cwtl
pop
lret
insb
lret
int3
push
rcll
or
clc
pop
jge
in
imul
mov
clc
stos
lods
pop
je
cld
jb
mov
or
test
and
adc
call
mov
dec
cwtl
ljmp
cmp
sarl
stos
nop
mov
and
cmc
lret
ret
inc
sahf
bound
cmc
mov
or
xchg
arpl
cltd
les
dec
int
xchg
add
xchg
push
mov
inc
pop
sbb
cmp
ret
xchg
pop
les
inc
or
jle
ret
jo
push
adc
daa
sti
std
stos
cmp
inc
and
dec
jae
sub
scas
negl
js
cli
add
adc
call
pushf
pop
sub
add
sub
jmp
push
movsb
xchg
js
addb
jg
out
cld
fisttpll
adc
cmpsb
push
and
cltd
roll
dec
push
push
jae
mov
cmp
repnz
mov
mov
mov
inc
sub
pop
mov
xor
mov
push
icebp
jo
insb
sub
mov
dec
fiaddl
gs
ja
sbb
cld
lea
mov
inc
jecxz
les
cmp
inc
iret
lock
pop
arpl
dec
cmp
movsb
cli
ljmp
and
pusha
inc
int3
mov
ficoml
xchg
mov
lock
and
andb
dec
aaa
ficomps
sub
or
scas
push
jns
shlb
rcrl
and
lret
push
or
ds
xchg
nop
test
fs
mov
mov
int
call
in
std
or
sbb
fistl
sbb
fwait
movsb
xor
mov
mov
sub
test
fs
int
xor
pop
aad
adc
mov
lret
repz
push
or
push
or
mov
out
jecxz
mull
leave
movsb
into
sbb
cld
enter
in
clc
jge
dec
adc
mov
aaa
in
xor
ret
dec
loopne
cld
push
inc
push
ror
xor
inc
lods
sahf
add
jge
in
mov
fs
jns
in
sbb
mov
mov
push
dec
mov
ljmp
lods
mov
mov
and
sahf
jle
push
arpl
xchg
stos
das
add
test
pop
lock
xchg
mov
call
and
cmovp
scas
hlt
loopne
xchg
lahf
int
scas
and
movsl
jecxz
or
xchg
iret
xlat
push
iret
sub
jbe
mov
push
and
pop
push
sbbl
xor
add
fsub
xor
icebp
out
fwait
mov
xchg
out
pop
mov
xlat
lret
mov
mov
ljmp
repnz
push
jg
sub
mov
jae
inc
inc
dec
dec
push
push
test
push
fstps
mov
dec
imul
xchg
pop
inc
push
fidivl
iret
icebp
loop
mov
mov
jae
fistl
popl
fildll
inc
out
add
outsl
inc
lcall
dec
shr
imulb
das
xor
int3
subl
sbb
iret
push
notl
arpl
ss
cltd
fistl
jne
daa
mul
inc
xchg
fcmovb
jecxz
iret
and
mov
dec
xorb
movsl
add
sahf
je
sbb
orb
or
jg
rcr
sti
mov
mov
jbe
repnz
xchg
push
out
inc
push
push
iret
iret
bound
mov
in
jo
mov
cmp
lret
and
add
sbb
add
add
mov
insl
aaa
push
int3
insl
pop
sbbl
pop
cmp
faddp
fiadds
cmp
lahf
dec
or
sub
dec
add
adc
mov
fs
dec
adc
mov
scas
adc
pop
jle
fimuls
adc
cmpsb
lods
push
push
or
or
lea
sahf
dec
testl
ja
insb
sub
pandn
ret
repz
ss
leave
or
insl
xchg
in
lods
add
xor
loop
js
or
jp
dec
xor
dec
adc
imulb
jno
xchg
loopne
or
push
mov
shrb
cmp
aad
les
clc
mov
cmp
imul
cmpb
inc
shl
hlt
lea
fcoml
addl
aad
lods
out
punpcklbw
mov
icebp
inc
and
popf
loope
xor
mov
call
add
adcl
push
adc
mov
ret
jg
mov
xor
sub
mov
minps
add
adc
aas
adc
jb
mov
hlt
sub
lahf
mov
mov
jns
das
mul
in
leave
sahf
andl
pop
and
insl
out
xlat
test
xchg
cmp
les
sub
mov
and
lret
mov
pop
rcpps
stc
add
sbb
push
clc
jp
mov
loope
xchg
addr16
pop
rolb
pop
inc
std
ss
xchg
popl
fldl
bound
mov
gs
sbb
xor
test
arpl
shll
pop
mov
sahf
or
cmp
push
push
xchg
inc
lahf
scas
fxch
jl
or
lods
lods
sbb
popa
popa
popf
iret
popa
xor
mov
sub
dec
cmp
movb
pop
fsubl
fistpll
sbb
lea
outsb
aas
mov
push
fbld
dec
sar
arpl
jge
mov
inc
rorl
add
add
xchg
xchg
repz
mov
scas
xor
in
test
jb
jp
jbe
or
xor
add
jo
mov
fisttps
xchg
repz
loope
icebp
pushf
fistps
mov
adc
stos
stc
pop
push
sub
mov
and
jl
and
cli
js
jno
mov
jbe
jecxz
and
pop
daa
in
adc
or
mov
paddb
xor
and
gs
decl
rcrb
mov
xchg
mov
cmpsb
movsl
in
pop
mov
pushf
xor
and
std
fdivs
scas
ret
clc
jg
fists
add
push
jmp
shr
shrl
frstor
and
lcall
lods
pop
hlt
inc
dec
in
out
popf
xor
cmpsl
outsl
push
sbb
test
stos
pop
cmp
push
add
inc
jb
pop
inc
xchg
es
sub
push
in
mov
js
xchg
or
hlt
sub
cltd
cmovs
es
fisttpll
js
inc
mov
xor
push
dec
movsl
cmp
inc
or
push
inc
jp
dec
ret
cltd
mov
mov
bound
in
cmp
add
clc
in
pusha
inc
mov
mov
cmp
pushf
scas
add
fstpl
mov
cmp
push
stos
loope
ss
mov
sbb
int3
add
cmp
test
test
icebp
push
into
jmp
js
add
pusha
fwait
ljmp
pop
xchg
fisttps
jge
pcmpgtd
sbbb
insl
aam
sub
and
xchg
scas
xchg
popa
mov
shrl
inc
mov
cmp
cld
xchg
daa
repz
cmp
mov
xorps
inc
hlt
adc
pop
mov
notb
rorb
mov
jecxz
mov
hlt
inc
cmpb
mov
mov
cmc
adc
in
inc
ss
mov
test
stos
retw
dec
cmp
fnsave
movsl
les
fisubrs
dec
pop
mov
cmp
popa
sbb
cmp
jne
xlat
xchg
pop
movsl
imul
xor
lcall
jmp
inc
dec
mov
movsb
add
mov
les
arpl
sbb
sbb
sub
mov
sbb
push
or
data16
repz
js
pop
test
push
stos
aas
shlb
lcall
push
pop
call
ret
std
shlb
mov
test
ja
mov
dec
dec
xlat
jo
sub
in
or
arpl
pop
mov
sbb
roll
xchg
arpl
imul
xchg
push
aaa
jae
cld
pushf
outsl
movsl
sub
lcall
adc
pop
mov
rcl
xchg
sahf
nop
mov
cmpsb
mov
mov
and
or
aas
dec
xchg
fcoml
test
insl
stos
ljmp
jle
aas
push
mov
outsl
or
xchg
add
pop
int
pusha
dec
stc
xchg
jae
dec
cmp
loop
fisubrs
fisubrl
mov
jns
add
insl
mov
js
pop
imull
hlt
sbb
push
clc
pop
adc
fbld
inc
adc
adc
enter
iret
lcall
mov
adc
sahf
dec
sub
or
in
cld
incl
lret
sub
sbb
mov
sti
mov
dec
in
repz
xor
sti
mov
rol
cmp
aaa
mov
inc
hlt
aas
outsl
out
xor
and
popa
cmp
ds
mov
jae
pop
sarb
pop
in
and
out
mov
sbb
roll
out
inc
out
jmp
das
ret
mov
fcomip
sub
clc
pop
mov
or
scas
mov
insb
negb
cmp
aaa
push
in
xor
test
xlat
aam
loopne
test
sub
inc
mov
cmp
aas
push
bound
dec
pusha
fcomi
jmp
mov
jl
into
adc
dec
lock
adcb
rep
push
shll
xlat
mov
enter
mov
stos
push
sbb
aaa
sbb
jl
fisttps
sbb
inc
pop
je
jbe
ljmp
repz
subb
ror
or
hlt
inc
jnp
add
inc
and
cmc
mov
in
add
scas
addr16
scas
inc
xor
or
dec
and
addr16
cmpsb
out
jno
mov
dec
add
mov
dec
fistps
aaa
rorl
jnp
cmp
dec
nop
lds
in
push
sub
loopne
imul
sbb
adc
mov
imul
xchg
cltd
scas
mov
xor
inc
sub
jmp
mov
mov
dec
or
rcl
pop
xchg
enter
ja
jmp
mov
mov
mov
std
mov
cmc
or
lock
dec
data16
add
mov
and
pop
push
nop
popa
hlt
fstpl
add
mov
lcall
cmp
std
mov
mov
mov
addr16
sub
loope
dec
jp
mov
add
add
inc
repz
adc
xchg
adc
mov
shlb
cmp
jne
in
in
aad
test
push
mov
imul
mov
inc
inc
sub
repnz
mov
pop
lock
or
xchg
jbe
xchg
jns
dec
pop
std
or
rcrl
daa
mov
cltd
mov
push
xor
out
mov
jp
sbbb
mov
jae
in
lods
inc
jo
ror
enter
mov
mov
sti
cmpsl
mov
mov
and
fistpll
ret
xor
sbb
movsb
add
pop
out
loope
mov
outsb
pusha
mov
or
xchg
sbbb
sbbb
jle
sub
add
mov
adc
mov
sub
xchg
push
inc
lret
sub
sbb
add
ja
fidivrl
cld
dec
xchg
or
dec
stos
notl
adc
stos
pop
xchg
xchg
stc
scas
xchg
jno
add
inc
lret
sbb
out
into
mov
sarl
and
inc
hlt
lret
jecxz
adcl
pop
cwtl
sbb
mov
sbb
test
jmp
in
fsubs
and
int3
enter
sti
jg
movsl
dec
pop
in
cmpsl
lods
fnstenv
stos
pop
add
pop
add
loope
push
fxch
scas
das
adc
xor
das
bound
cmp
lcall
iret
jle
cmp
mov
leave
rcl
data16
xor
gs
jbe
xchg
mov
push
push
xchg
loope
movsl
dec
cmp
in
add
dec
imul
xor
std
loope
xchg
movsb
enter
fwait
xchg
icebp
mov
push
insl
and
push
mov
movsb
ja
jno
cltd
pop
jmp
pop
std
jg
jb
out
sub
xor
inc
shrb
or
xlat
stos
mov
mov
mov
sub
negb
jne
lcall
and
dec
jl
dec
mov
dec
xchg
inc
jmp
mov
jg
push
pop
insl
es
stc
push
jle
xchg
push
push
call
lret
lret
cmpsl
cmp
push
scas
cld
xlat
shrb
pop
inc
call
pop
jnp
imul
jnp
repz
and
or
or
les
arpl
shlb
fbstp
lahf
scas
cmp
or
ret
adc
in
mov
inc
and
xchg
and
dec
mov
imul
mov
test
jnp
insl
ficompl
popf
subl
xchg
std
imul
xor
add
aad
cmp
cmp
mov
mov
push
lret
pushf
rorl
xor
sub
pop
mov
adc
cmp
add
dec
mov
mov
ljmp
xchg
bound
adc
mov
js
cmp
mov
insl
adc
jo
xor
xchg
jl
fldt
ljmp
daa
mov
in
cmp
adc
mov
repz
jb
pop
stos
xor
rcll
and
pop
popf
mov
int3
in
push
stos
fsts
sub
xchg
jbe
mov
sbb
test
in
lods
jo
test
jne
out
push
cmp
scas
pop
cli
sbbb
inc
mov
adc
mov
pop
xchg
sbb
inc
jge
and
and
xchg
cwtl
add
std
repz
fs
es
xchg
push
pushf
jg
stc
dec
add
test
mov
and
inc
dec
mov
push
shr
orb
push
outsb
std
lret
xor
lahf
push
mov
out
jmp
and
pop
xchg
dec
xlat
jl
cmp
mov
pushf
daa
js
xchg
sub
in
xor
loope
rcr
rorb
es
mov
out
lods
xchg
iret
std
shll
sub
ss
inc
pop
mov
call
loope
xchg
xor
push
add
pop
in
loope
xorb
adc
inc
in
es
sbb
lock
jne
xchg
enter
out
ss
imul
movl
vxorps
mov
add
nop
mov
aad
lahf
scas
mov
xor
stos
jbe
ljmp
mulb
aam
mov
fnop
inc
dec
lcall
sub
movsb
bswap
mov
xchg
and
sub
lea
sbb
or
popf
push
rorb
cmp
jl
pop
in
lret
imul
lods
mov
jno
in
in
cltd
loop
enter
notl
add
andb
xor
cltd
mov
std
sti
aam
mov
push
in
cmp
aaa
adc
fldenv
sbb
scas
mov
jns
mov
xorl
cld
add
mov
pop
add
mov
cmp
insl
xlat
in
fdivrl
loope
dec
sbb
jns
pop
xchg
inc
sbb
push
mov
and
movsl
push
push
loopne
mov
pop
daa
or
out
incb
lea
lahf
and
push
imul
mov
dec
sbb
xchg
mov
jecxz
mov
jmp
pop
jmp
cmp
jo
sub
jbe
push
pop
xor
lods
push
xlat
aas
push
cmpl
xor
test
and
bound
mov
push
ljmp
ljmp
lods
daa
addl
cltd
ds
sub
or
enter
add
icebp
jmp
int
pop
and
xor
lahf
sub
push
ja
dec
xchg
jmp
das
dec
pushf
xchg
mov
ja
ds
fisubl
movsb
xchg
jae
adc
test
jmp
cli
inc
xchg
push
out
mov
xor
pop
fsub
ficoms
in
out
mov
sti
sbb
daa
pop
sub
mov
lods
cmc
pop
or
int
popf
jmp
mov
scas
or
in
scas
pushf
jns
xchg
inc
xlat
cmp
mov
popa
push
scas
ss
mov
xor
xchg
shll
xchg
and
imul
jno
les
mov
push
imul
mov
xchg
xchg
lret
mov
mov
ss
push
sub
popa
mov
sub
push
sti
jecxz
push
sub
in
push
dec
fsts
cmpsl
inc
cmc
adc
dec
testl
xchg
lock
repz
jmp
add
mov
inc
xchg
and
inc
sub
out
out
fwait
jbe
leave
rcr
add
pop
imul
stos
or
jge
orb
add
dec
mov
outsb
dec
mov
inc
test
out
or
or
sub
loop
aas
jp
push
mov
addr16
inc
mov
in
daa
mov
pop
jecxz
lret
stc
fisubrs
fdivp
mov
lock
rcll
incl
out
mov
pop
sub
inc
add
or
mov
jae
shl
pop
loopne
push
fiadds
xchg
cmc
mov
rcrl
in
fwait
popf
inc
jo
rclb
dec
jnp
sub
sub
and
sbb
push
dec
pop
je
lret
int
enter
rol
pusha
int3
std
hlt
in
add
clc
jecxz
vmwrite
dec
dec
int
jbe
icebp
mov
nop
int3
mov
xlat
dec
jno
mov
mov
sub
xchg
into
cmp
pop
push
cmp
rcrl
mov
stc
sbb
rolb
jmp
or
int
add
daa
xchg
jecxz
push
add
out
mov
jecxz
mulb
push
cld
int
inc
in
js
dec
push
jmpw
in
arpl
inc
xor
lds
sbb
rcll
cmp
adc
cmpsl
or
pusha
cmp
jo
or
fimuls
push
notl
inc
xlat
jnp
xor
in
dec
fnstsw
cli
xchg
jnp
scas
lcall
outsb
shlb
mov
push
inc
loope,pt
or
xchg
mov
push
inc
jmp
add
test
sbb
fstp
cmp
int3
addr16
push
and
mov
ljmp
sbb
fidivl
loope
sahf
dec
js
sarb
out
xchg
mov
jge
shll
pop
scas
pop
loop
inc
pushf
jp
push
fs
mov
inc
lock
in
mov
jecxz
sbbb
and
dec
or
mov
xchg
add
push
and
jmp
push
fidivl
adc
pop
cld
call
negl
sbb
roll
stos
inc
xchg
dec
xchg
xor
sbb
das
mov
pop
push
arpl
adc
cmp
enter
imul
and
notb
add
xchg
and
orb
std
jnp
mov
sub
std
lcall
ret
push
fidivrs
pop
mov
xchg
loop
cmp
and
fwait
ret
mov
nop
lds
fildl
push
xor
jmp
sub
out
sbb
fxsave
jle
mov
fidivl
pop
sub
mov
stc
add
pop
loopne
addr16
fimull
fdivrs
and
loop
and
stos
out
les
sbb
pushf
and
sub
mov
arpl
test
push
and
pop
xchg
imul
out
xorl
shufps
sbb
jne
push
add
popa
lret
andl
mov
and
push
and
cs
stos
xchg
cmp
shlb
aad
shrl
add
sahf
add
fsubs
push
in
std
std
push
xchg
jne
inc
adc
fprem1
cmpsb
jns
sub
xchg
mov
dec
or
cmp
int
in
push
fwait
and
add
out
cmpsb
xchg
scas
pop
adcb
and
out
adc
dec
jmp
rcrb
mov
add
enter
mov
movsl
adc
dec
aas
icebp
jmp
into
je
adc
lea
sbb
loope
mov
or
fcmovb
out
dec
inc
je
popf
jo
jne
mov
icebp
dec
push
dec
sahf
mov
push
xchg
out
adc
hlt
test
loope
std
fdivrl
or
jno
xchg
mov
outsl
imul
repz
in
push
push
sbb
jle
mov
sub
insb
inc
push
jecxz
mov
jge
ja
mov
mov
dec
jle
std
mov
cmpsl
iret
aas
andl
dec
dec
aam
sbb
inc
cld
negb
pop
les
stos
pop
sbb
xchg
mov
std
xchg
jmp
pop
push
pop
js
imul
mov
mov
bound
jp
xchg
lods
shr
xchg
jnp
xor
dec
mov
mov
sbb
inc
data16
pop
call
dec
enter
bound
test
cmp
jmp
inc
pop
fdivrp
cltd
push
rclb
pop
imul
imul
fildl
mov
orl
outsl
push
js
pop
in
xor
sbb
repnz
mov
sbb
pop
dec
sbb
jge
loop
sbb
jle
inc
sub
push
and
je
je
xor
sti
and
mov
adc
push
cmp
orl
jne
fnstcw
incl
in
mov
cmp
js
sbb
addr16
xor
and
into
std
jl
shlb
push
dec
inc
inc
xchg
and
jl
jne
or
sub
sahf
es
xchg
inc
lahf
xchg
push
int3
das
nop
xchg
clc
dec
xor
sbb
inc
lds
imul
movsl
ljmp
shl
in
std
repnz
fldt
data16
shll
dec
adc
sub
mov
movb
add
and
sub
cs
es
or
xchg
cld
cli
movsb
fiaddl
push
sahf
pop
mov
jne
and
cwtl
fs
fwait
mov
pop
mov
add
scas
icebp
add
cld
dec
jo
aas
jge
nop
jmp
xchg
ror
ficompl
loop
pusha
test
xchg
aaa
push
dec
test
cmp
inc
jecxz
lcall
jge
jg
add
daa
push
xchg
test
clc
or
test
dec
xlat
xchg
dec
js
bound
dec
cmp
popf
lock
mov
fbstp
push
xchg
data16
pop
dec
into
add
xor
popa
jp
ret
xchg
sbb
sbb
out
lods
fnstcw
shlb
imul
mov
mov
cltd
push
mov
push
ffree
into
repz
pop
loopne
shlb
xor
adc
inc
or
movsb
sub
adc
pop
test
incl
icebp
pop
in
add
das
rcl
iret
cmpsl
xchg
inc
stc
data16
sbb
inc
test
push
ret
push
adc
pop
fwait
sti
ret
mov
pop
pop
adc
out
in
pop
jg
and
inc
cmp
int3
dec
cli
cmp
in
js
jbe
mov
cmc
lret
test
int3
add
jle
loopne
sahf
jge
jecxz
or
les
cli
jne
pop
pushf
out
mov
xchg
jae
jle
push
lock
mov
stc
sub
jae
lock
fcmovb
mov
leavew
cmc
aam
adc
lahf
inc
scas
or
inc
add
xor
adcl
mov
dec
in
mov
mov
dec
clc
out
mov
jb
sbb
daa
loopne
push
cmpsl
sbb
jg
mov
ss
mov
mov
and
popa
pushf
lahf
mov
in
xor
mov
jbe
js
negb
adc
cmp
fsubr
adc
mov
daa
xor
ud0
stc
inc
mov
xor
adc
out
jns
inc
mov
fld1
jge
mov
mov
cmp
adc
mov
sbb
jns
jae
rcrb
pop
subb
add
jno
push
add
and
xchg
std
push
imul
in
nopl
cltd
cmp
mov
pmaddwd
xchg
sbb
daa
dec
jnp
test
repnz
pop
ficompl
lds
repnz
dec
add
popf
xor
stos
call
xchg
icebp
push
stos
pop
lock
mov
out
push
mov
shrb
scas
mov
ljmp
aad
push
iret
cltd
push
clc
mov
outsb
ljmp
pop
insb
mov
mov
insl
out
xchg
and
shll
aam
jecxz
sbb
movsl
jns
xchg
in
outsb
aaa
sub
adc
xor
inc
das
push
jo
jmp
and
inc
les
push
movsb
insl
mov
outsl
pop
fsubs
or
push
or
in
les
push
adc
pop
pusha
pop
mov
pop
inc
popa
std
push
inc
adc
xor
into
add
mov
les
icebp
in
lret
scas
jp
jl
sbbl
sbb
int
divl
scas
push
je
js
fidivrs
pop
mov
dec
ficoms
int
aam
rolb
popf
fsubp
int
dec
mov
mov
repnz
into
popf
adc
loope
lcall
dec
rolb
aas
fcmovnu
fnstcw
lods
aas
ja
lcall
and
sub
mov
rorb
xchg
mov
inc
adc
cld
fnstsw
push
imull
cmc
in
lods
movsl
inc
sbb
mov
gs
xlat
imul
aas
push
iret
test
cmp
pop
xchg
xchg
rcll
xor
dec
push
push
jne
scas
mov
in
add
mov
mov
jp
pop
mov
push
mov
sbb
das
sub
test
push
pop
aad
sar
and
les
pop
shrl
cmpsl
pop
mov
jb
jg,pt
out
daa
mov
arpl
mov
or
cmc
in
jecxz
push
sbb
je
lds
add
inc
fsubrs
nop
fcmovb
jl
mov
in
ss
xor
sub
sub
ss
mov
decb
fwait
mov
fcom
cmpsl
movsl
cmpl
mov
ss
mov
pusha
adc
mov
lcall
shll
cmc
daa
lcall
xlat
data16
daa
mov
and
je
inc
leave
jb
fimull
cmpsl
dec
enter
jle
push
cmpsb
xchg
inc
push
ret
dec
pop
aas
in
or
sarl
rcrl
cmc
imull
mov
or
mov
push
mov
and
jg
jl
mov
pop
pusha
inc
aas
out
dec
xor
inc
jmp
or
jae
mov
fwait
sub
test
test
jbe
sbb
push
push
gs
call
and
add
jae
or
cmp
mov
enter
inc
test
into
jl
xor
ds
leave
divb
test
sbb
xchg
int
mov
movsb
push
enter
cmpsl
mov
test
xchg
insb
inc
sar
cwtl
mov
jg
ret
stos
inc
or
nop
call
cli
pop
jne
daa
fstpl
cmp
test
lret
aam
cmp
nop
add
inc
subb
mov
pop
xor
lret
stos
leave
xor
sbb
fcoms
popf
aas
xchg
mov
andb
mov
sub
cld
add
mov
pop
push
mov
and
sahf
xchg
imul
jp
dec
hlt
mov
inc
daa
jno
shlb
cltd
cld
lds
sub
add
insb
subb
sbb
nop
ret
sub
lret
shrl
xchg
sub
out
mov
fmull
adc
cmp
push
aam
push
mov
pop
jb
notl
push
lods
jg
cmp
mov
or
cmp
outsb
push
rep
ljmp
scas
jnp
and
adc
mov
mov
aas
cmp
mov
pop
fsubs
jb
add
and
dec
xchg
push
out
fsubrs
jo
push
loop
lods
ljmp
pop
pop
push
lret
push
cli
mov
dec
lods
sbb
cmp
mov
aad
outsb
fbld
and
xor
and
int3
mull
cmp
sub
xor
ja
popf
xor
popf
leave
xchg
xchg
insb
adc
jp
or
inc
cmp
push
repnz
stos
jbe
push
jne
shrb
int3
gs
mov
cmp
dec
mov
loop
cli
dec
jecxz
test
jno
sub
add
xchg
pop
gs
inc
sub
and
lret
js
push
mov
xchg
mov
mov
cmp
mov
scas
adc
push
add
jno
daa
dec
ds
int
pop
mov
push
or
push
sbb
andl
push
popf
out
test
add
ljmp
mov
lret
mov
cltd
pop
xchg
mov
movsb
lds
pop
popa
pop
shl
inc
xchg
fs
sahf
fdivrs
stos
xor
pop
sub
fstpl
fwait
dec
cpuid
xchg
xchg
pop
std
fsubrs
es
roll
xchg
out
arpl
and
out
cltd
push
sbb
xlat
lret
jo
shr
inc
sbb
pop
mov
push
cmp
cs
cmp
xlat
or
fstl
jecxz
push
adc
or
and
sbb
pop
aad
fwait
cli
popf
jbe
jnp
or
xchg
add
and
cmp
psrld
lock
rclb
mov
inc
les
pop
fstpl
push
adc
dec
ljmp
stos
cld
sti
pop
and
mov
scas
lods
fxch
jle
pusha
mov
mov
xor
mov
adc
pusha
or
repnz
xor
fimull
in
test
xor
cwtl
and
mov
xor
mov
inc
scas
iret
mov
mov
pop
rep
aaa
pop
push
mov
jecxz
pop
mov
lds
xchg
pushf
jl
sahf
fidivs
fcoml
sbb
out
lock
mov
arpl
lahf
cmp
frstor
mov
cmp
fsts
jle
push
fwait
daa
lea
in
iret
push
movsb
inc
mov
mov
pop
arpl
clc
xor
negb
or
push
xchg
popl
xlat
test
call
in
fldenv
and
ljmp
jnp
inc
nop
add
fiaddl
nop
insl
inc
jns
mov
mov
xchg
lock
dec
shlb
daa
inc
out
and
or
enter
xchg
insl
push
and
xchg
lods
cmpsb
fldenv
subb
sahf
addr16
popa
jl
mov
js
into
xchg
push
mov
and
mov
cmc
rcr
cmc
xor
sbb
nop
inc
imull
jg
push
or
fs
jo
jo
mov
pop
xor
inc
dec
inc
stc
jne
push
imul
fnstcw
jg,pn
es
xlat
fsts
addr16
movsl
clc
pop
jmp
push
dec
lahf
stos
test
pusha
cs
cmpsl
imul
repz
and
inc
push
aas
sub
insl
add
call
out
ret
mov
ficoml
es
cmp
mov
pushf
fsubrl
scas
js
dec
popa
sub
push
pushf
mov
and
pushf
movswl
xchg
lock
jg
inc
frstor
cltd
sub
xchg
call
sub
push
pop
fstpl
push
fnstsw
cltd
call
loope
stc
cs
divb
mov
jle
dec
icebp
xlat
push
mov
mov
imul
and
insb
imul
adc
jae
je
loopne
mov
cwtl
adc
sbb
cmpsb
xlat
fnstenv
fs
cld
pop
dec
jbe
shll
leave
negb
icebp
add
jnp
shrl
popf
fs
push
mov
out
cld
daa
shrb
test
pop
popa
imul
sub
sti
inc
dec
shll
pop
adc
outsb
in
int3
xchg
dec
adc
mov
mov
lods
sub
push
mov
mov
or
inc
mull
je
adc
dec
out
sub
jp
inc
sub
push
or
jmp
jge
fstl
leave
dec
xor
xchg
push
aad
mov
icebp
mov
push
pusha
mov
fs
stos
jnp
ja
mov
mov
cwtl
fwait
das
sub
add
cmc
pop
or
loopne
pusha
gs
repz
fimuls
mov
or
lea
mov
inc
fisubrl
jg
std
mov
pop
outsb
mov
scas
cmp
test
aad
mov
nop
push
pop
cli
stos
add
dec
sbb
sbb
addr16
shlb
inc
jo
daa
push
add
cmp
out
ss
fnstenv
mov
adc
inc
inc
cli
cmp
xor
sub
js
out
push
rorb
jp
mov
lea
or
dec
xor
je
mov
dec
add
notb
mov
jp
and
icebp
sbb
call
fdivl
test
xor
call
aas
cmp
pop
jno
test
sub
push
inc
popa
fiaddl
push
sbb
nop
hlt
rcrb
ljmp
out
sbb
sbb
xchg
pop
inc
mov
sub
into
mov
adc
addr16
jl,pt
pop
mov
rcrb
adc
lods
dec
jbe
pop
xchg
repz
cmp
hlt
sub
imul
andl
iret
push
lcall
aaa
jmp
cltd
or
inc
fidivrl
mov
adc
stos
popa
cmp
lea
mov
xchg
xchg
mov
xor
cmp
pop
rcrl
ret
or
cmpsl
and
mov
cmpb
ljmp
dec
in
test
inc
lea
cwtl
jo
ret
adc
mov
cmp
and
dec
sub
mov
xchg
lods
nopl
int
leave
dec
sbb
sbb
cld
xor
and
inc
scas
leave
repnz
xchg
and
shr
fcomps
fisttps
dec
call
nop
cli
adc
imul
icebp
ja
jb
repz
inc
enter
inc
inc
xchg
sbb
xchg
sahf
jo
lods
out
push
xchg
cld
xor
push
les
loope
adc
rcl
mov
scas
rorl
mov
lods
fidivrl
adc
sahf
fistl
lret
sahf
dec
dec
cmp
cmp
pop
inc
sub
icebp
cmp
dec
pop
mov
mov
in
out
shlb
shlb
xor
fiaddl
pop
insl
decl
mov
xchg
xchg
cmp
pop
adc
adc
outsb
jmp
aad
pop
push
aaa
imul
daa
loope
rcrb
mov
cld
sub
mov
ret
pop
sbb
pusha
mov
ret
shlb
lods
jo
hlt
pop
jno
pop
in
jo
mov
mov
push
rcrb
cld
inc
ja
std
cmpsb
xor
and
sbb
je
cmpsl
sahf
out
pop
dec
mov
cmp
pusha
push
je
test
fsubr
stos
pushl
pop
inc
out
popa
insl
faddl
rcrb
hlt
stos
cmp
scas
xchg
flds
in
fmull
cli
loop
lcall
or
out
pop
ss
push
cmpsb
mov
or
xor
dec
mov
jg
in
mov
add
pop
adc
cmp
dec
cmpsb
jo
ss
xor
sarb
sub
push
test
dec
jno
out
enter
les
ret
fcomip
stc
stos
lret
loop
mov
scas
push
and
fldcw
fs
cli
out
xor
jbe
js
fnstenv
imul
sbb
cmp
mov
ljmp
pop
lds
cli
cmpsl
push
js
add
ret
mov
and
ljmp
shr
mov
ret
pop
ret
insl
mov
stos
adc
imul
jbe
jg
popa
xchg
mov
movsb
in
jo
out
xchg
mov
mov
and
xlat
jecxz
xor
popa
push
and
push
push
in
sarl
fbstp
and
pop
js
adc
pop
iret
add
cltd
cli
aad
inc
xor
popf
xor
int
xchg
mov
push
push
mov
dec
mov
out
clc
and
mov
lods
jmp
xchg
adc
loop
pop
jg
cmp
rep
or
sub
xor
jg
xchg
lock
test
jbe
scas
xchg
pushf
out
jmp
sub
imul
fists
sbbl
dec
into
push
inc
sub
nop
or
mov
or
jne
or
xchg
push
mov
add
rcrb
inc
push
dec
dec
test
sbb
dec
pop
jns,pn
ret
scas
mov
iret
fidivs
pop
fisubs
and
inc
stos
xchg
sbbb
add
into
or
jmp
sbb
icebp
mov
into
orb
ret
sub
or
add
push
sbb
xchg
push
or
dec
lret
insl
call
insb
aad
je
mov
jnp
cltd
pushf
pushf
jecxz
cmp
sarl
mov
aaa
call
das
inc
mov
mov
pop
lret
xor
fdivrs
lock
sub
lods
inc
sarl
cmp
sub
movsl
movsl
push
add
pop
push
mov
jae
pop
mov
aad
mov
and
pop
and
inc
jb
mov
sub
sub
jl
ret
outsl
jmp
test
test
pop
add
loope
xor
xor
scas
loop
cmp
sahf
sub
es
mov
push
divl
sub
fwait
jl
imul
pushf
shrb
mov
out
imul
xchg
pop
lret
inc
insl
push
inc
cld
push
ds
add
fldl
push
pop
ret
jle
insl
popf
into
ja
push
aas
inc
iret
sub
fdivs
pushf
aas
bound
sbb
xchg
hlt
icebp
xor
jle
add
dec
pusha
pop
sbbb
jp
fldenv
aas
pusha
or
push
cmp
fidivl
mov
lret
stos
inc
stc
pop
and
push
lds
adc
sarl
leave
pop
xor
jp
adc
sar
dec
das
and
aad
fnstenv
sti
lret
sbb
jns
add
mov
mov
push
jo
mov
jecxz
and
dec
adc
ret
and
inc
aam
inc
int3
fcmovu
pop
or
cmp
cmpsl
mov
dec
nop
rcrb
lock
jnp
shll
xchg
outsb
push
pop
fbstp
into
add
jnp
andb
adc
ljmp
fcmovnbe
scas
add
loope
cli
mov
sahf
aas
fdivrp
jbe
inc
cmp
mov
ret
daa
cmp
push
add
xor
sti
mov
sbb
icebp
out
jmp
daa
pop
out
xor
ja
cs
in
push
lret
call
jecxz
pop
xchg
add
mov
shlb
xor
loopne
pop
mov
out
lods
xor
out
outsl
int3
in
aam
or
push
or
pop
adc
jbe
stos
and
fistpl
jecxz
pop
sub
rorb
push
rcl
or
pop
xchg
imul
mov
ficoms
cmpsb
push
mov
loope
test
movsl
out
push
lahf
mov
in
adc
imul
cs
scas
in
outsb
pop
xlat
sub
popf
lcall
xchg
pop
test
shll
pop
adc
pop
sbb
add
jae
mov
fbstp
ds
gs
ds
xor
out
in
shlb
cmp
and
aam
push
push
inc
les
dec
or
test
cmp
addr16
arpl
and
ja
pop
js
pop
and
sub
xchg
adc
sbb
outsb
xchg
mov
fstl
lods
xchg
xchg
lods
jg
xchg
ss
int3
dec
in
jge
xor
sti
arpl
inc
sub
out
int
xchg
pushf
dec
dec
repnz
negl
inc
scas
sbb
outsl
inc
push
cmp
add
leave
lock
or
in
mov
add
loop
xchg
xchg
xor
lds
mov
loop
mov
xor
imul
jo
xchg
ljmp
mov
jno
push
inc
cmp
test
leave
testb
mov
inc
or
push
dec
cmp
sti
mov
mov
mov
push
mov
xchg
out
mov
adc
sub
pop
cmp
bound
ret
lods
mov
dec
mov
and
rclb
jnp
stc
sarl
push
sub
mov
xchg
push
jbe
or
into
add
jmp
jns
inc
xor
mov
dec
fiaddl
std
xchg
rcrl
cli
adc
daa
aaa
or
inc
insb
or
fisttpll
scas
lahf
lods
cwtl
call
jge
orb
mov
dec
cmp
int
loop
push
outsl
mov
loop
repnz
sbb
or
popa
sub
ds
pushf
fmull
push
rorb
ret
aaa
sarl
adc
jp
fsubp
movsb
adc
inc
or
popf
jp
in
scas
mov
js
repz
mov
leave
cmp
dec
mov
xchg
jg
mov
pop
or
daa
jns
adc
icebp
xor
inc
pop
sti
enter
lds
in
mov
xor
cmpsl
jmp
fwait
mov
sub
mov
ds
iret
out
test
or
mov
inc
sub
loope
gs
scas
scas
in
getsec
lcall
outsl
xor
and
mov
or
ret
sub
gs
jg
mov
aam
lret
in
jg
adc
sarl
mov
loope
jg
xchg
das
push
data16
jbe
pop
mov
mov
loopne
test
int3
imul
jbe
bound
jne
sarl
pop
aad
add
insb
test
dec
mov
ss
pop
or
sub
cltd
sbb
add
xchg
sbb
fcoms
mov
out
mov
jl
aaa
std
repz
sbb
mov
inc
loope
mov
mov
jecxz
lock
xchg
push
in
jns
push
iret
scas
fsubl
push
daa
cwtl
xchg
xor
jmp
ret
mov
jp
jmp
jbe
shlb
sbb
stos
sub
stos
test
bnd
jge
cmp
lahf
and
sbb
inc
pop
mov
and
in
leave
xor
push
push
mov
push
jbe
mov
push
jbe
imul
andl
out
push
jae
out
test
sub
inc
mov
dec
aas
inc
jne
divl
js
in
fsubr
scas
xchg
test
lret
fwait
xor
mov
std
pop
ds
cmpsb
pop
out
jb
aad
or
shlb
jns
popf
fwait
xchg
mov
or
stos
loope
repz
jnp
fcomip
outsl
in
mov
push
mul
cmpsl
pusha
jp
subb
iret
sub
xchg
inc
and
mov
sub
pop
lret
push
xor
mov
mov
add
xor
mov
push
insl
dec
out
clc
mov
dec
dec
and
and
dec
push
lea
jp
enter
xor
cmpsl
sti
push
pop
loop
in
imul
jmp
xchg
mov
cld
lret
popa
cmpsl
cmpsl
int
aas
inc
test
addr16
sahf
sbb
clc
shr
adc
jecxz
rcrb
jns
insl
xchg
cmpsl
loope
push
jl
pop
pop
and
or
jbe
popa
xchg
mov
and
add
sub
mov
rcr
mov
andb
scas
jno
shll
lods
cmc
daa
mov
mov
xchg
lcall
std
add
hlt
in
adc
mull
jp
cs
fidivrs
sbb
pop
je
pop
ss
rcll
and
aaa
lahf
jle
repnz
enter
mov
push
in
leave
push
pop
inc
aas
lahf
test
aas
push
pop
push
adc
fnstenv
or
sub
pop
daa
sbb
cmp
mulb
gs
dec
mov
lock
sbb
xor
in
adcl
lahf
push
popa
faddl
lods
add
into
or
push
negb
ss
pop
inc
or
mov
ret
inc
push
jge
xchg
jp
pushl
inc
psubusb
jle
mov
cmpsb
into
xchg
cmp
nop
push
xchg
push
inc
adc
inc
jb
mov
lahf
xor
add
fwait
add
sbb
stos
adc
stc
mov
insl
cld
movsl
xor
repz
sbb
jo
push
out
cwtl
mov
add
stos
notb
sbb
push
call
mov
mov
pop
mov
movsl
cmpsl
push
loop
and
adc
push
aam
cmc
shll
mov
or
stc
mov
adc
cmp
cvtdq2ps
pop
mov
cmp
mov
push
and
cmp
mov
aas
mov
out
xor
insl
in
adc
movsl
lea
sub
pop
dec
push
fdivl
cmp
or
adc
aam
sarb
sub
pop
adc
dec
xchg
mov
jbe
out
clc
and
mov
push
je
dec
roll
repz
dec
dec
jmp
or
incb
inc
addb
xchg
and
fisubl
int3
ja
scas
or
rcl
push
mov
adc
sti
add
scas
in
cmp
mov
add
scas
mov
mov
es
push
dec
mov
mov
xchg
push
add
jge
mov
mov
mov
xor
mov
cmpsl
push
sbb
rcr
sbb
pop
ficoml
add
cwtl
addr16
dec
mov
jnp
stos
nop
xchg
js
andl
mov
inc
dec
mov
loopne
inc
adc
mov
outsl
std
pop
test
rclb
dec
add
call
sahf
cwtl
mov
mov
ds
add
pop
scas
xchg
mov
cmp
loope
adc
mov
in
clc
sub
fs
and
int
mov
dec
xor
xor
mov
mov
xchg
adc
jle
ja
jne
rcrl
mov
mov
lret
xchg
add
cmp
lcall
out
or
loope
mov
xchg
jle
scas
mov
xchg
subb
imul
mov
sub
or
xchg
xor
push
lret
xchg
cmpsl
xchg
add
lcall
es
leave
sub
fisubs
aad
jnp
lahf
xchg
scas
repz
push
adc
and
mov
js
cmp
movsl
nop
sbb
add
mov
addr16
and
lds
xor
push
out
in
jbe,pn
xchg
jno
jg
jp
ss
mov
pop
push
jo
aad
ss
shl
pusha
imul
rorb
push
sahf
dec
xlat
ja
mov
pop
inc
cli
push
sub
sti
mov
mov
push
hlt
sbbl
cmp
sbb
lods
bnd
inc
push
pop
int3
sahf
jne
xor
out
push
or
imul
and
push
stc
or
sub
dec
push
jmp
lock
adc
test
movb
testl
loop
jbe
xor
lds
lea
and
test
xchg
subl
sbb
ud0
fwait
jns
cltd
cmp
xchg
call
mov
mov
sbb
imul
jb
sahf
cmp
sbb
out
pop
sbb
out
movzwl
pop
pop
jmp
repz
xchg
sti
int
push
ss
imul
push
push
int3
clc
aaa
movsb
outsl
jb
and
adc
test
iret
fnsave
and
outsb
cmp
xor
ljmp
and
in
cmp
mov
shll
scas
aas
cmp
mov
divl
les
scas
test
out
add
sbb
xor
push
cmpsl
sub
push
hlt
xor
shl
mov
dec
idivl
out
dec
adc
les
inc
add
scas
fnstcw
lret
rolb
hlt
rcrb
xor
les
push
dec
add
pop
jo
pop
dec
dec
cmp
dec
xor
xchg
notb
add
add
repnz
pop
inc
xor
cmc
cld
in
and
cmova
mov
aad
neg
loopne
ds
push
xor
xlat
enter
fwait
cli
scas
pop
test
xchg
mov
jo
mov
test
or
xor
jnp
lcall
fwait
insb
xor
lahf
shll
push
mov
popf
and
sbb
adc
xorb
mov
pop
jne
push
fdivrs
add
push
jge
idivb
xchg
sub
sub
xor
inc
adc
clc
out
jns
leave
fidivl
mov
test
dec
outsb
lods
xchg
addr16
lods
popa
call
dec
pop
int
adc
xor
push
inc
push
pop
pop
xorb
mov
push
fdivrl
jbe
sbb
mov
insb
jno
xchg
ficoms
mov
pushf
mov
dec
cmpsb
loopne
pop
dec
jbe,pt
push
andl
into
mov
mov
sarl
sbb
mov
mov
jns
popa
push
pop
add
pusha
cmpsl
rclb
pushf
and
inc
cmp
fstpl
cmp
fbld
test
es
movsb
ficompl
push
fdivs
jbe
cmp
arpl
push
fldenv
adc
xchg
xchg
sub
push
lcall
decb
mov
aam
popl
fsubp
adc
popa
adc
fiaddl
add
push
cmp
push
push
push
enter
xchg
adc
vcvtdq2ps
pop
xchg
sarl
or
loope
popa
je
cmpl
aad
fists
rep
fidivl
mov
rcrb
daa
je
add
dec
cli
test
icebp
outsb
push
lcall
pop
stos
enter
and
dec
addr16
jne
jl
pop
sub
pop
mov
xchg
dec
test
repnz
xchg
test
jns
mov
mov
sti
push
and
lret
dec
inc
dec
rorl
jno
fiaddl
jg
mov
cmp
mov
or
icebp
rcrl
jns
lret
pop
adc
lret
out
ljmp
ja
xor
int3
inc
shll
repnz
push
push
sahf
jbe
stos
jae
add
in
jle
mov
clc
into
imul
or
inc
sbb
push
aas
add
stos
push
ret
adc
jp
imul
ss
sub
jg
testl
xchg
movsb
arpl
hlt
lds
inc
pop
push
pop
pop
pop
lcall
push
mov
sbb
mov
andl
sub
into
xchg
jo
add
jae
mov
mov
scas
fpatan
outsb
mov
testl
pop
cmp
mov
xor
pop
out
stos
or
mov
or
and
int
dec
hlt
insl
lea
adc
cmp
mov
xor
or
es
clc
mov
inc
shll
inc
add
adc
call
cmpsb
rcrl
mov
mov
sub
or
adc
cmc
pop
or
std
mov
ss
repz
pusha
and
dec
es
jb
jecxz
in
or
mov
mov
fstpt
test
mov
out
leave
adc
and
xor
lock
ret
ljmp
repz
jbe
jbe
call
sub
fstl
xchg
lret
cmpsb
mov
imul
pop
mov
movsl
jg
lods
adc
out
out
mov
sbb
and
std
icebp
test
repz
sbb
lods
test
dec
and
sub
dec
cmp
pop
jae
or
ds
cs
loope
sbbb
mov
add
jg
add
mov
cltd
pop
dec
into
lea
add
inc
lret
cwtl
lds
sub
add
shrb
popa
outsl
rcl
in
psadbw
dec
popf
xor
cmp
aam
jecxz
cmp
xchg
mov
sbbl
fnstsw
add
cs
mov
mov
into
cmp
jo
cmp
xlat
dec
imul
jmp
imul
in
es
loope
cmc
lds
cmpsl
adc
xchg
andl
gs
mov
pop
xor
or
jl
out
and
jns
stos
dec
es
mov
jp
out
ja
rcrl
mov
and
jnp
cmp
ret
test
push
push
inc
push
mov
lds
dec
subb
mov
push
push
shll
inc
mov
inc
xchg
es
adc
out
ret
cmp
lods
sbb
popa
insl
cmpsl
jno
cld
test
shl
xchg
and
push
cmp
rcrl
push
mov
or
popl
mov
jae
popf
inc
jge
xor
imul
inc
icebp
jecxz
add
popf
jb
scas
ja
insl
sub
pop
bound
clc
pushf
inc
test
ds
fs
cmp
in
loopne
test
mov
sub
sub
mov
lds
xchg
iret
mov
stc
jle
xchg
xor
lcall
out
dec
jg
mov
xlat
jbe
cmp
pop
mov
mov
or
jge
insl
mov
aad
insl
sub
push
jbe
incb
xchg
sbb
or
mov
jmp
mov
sbb
add
out
pop
nop
imul
push
inc
pusha
hlt
mov
adc
inc
les
cmp
call
push
mov
stos
xor
cmpsl
sti
test
xchg
add
mov
lods
sbb
add
ja
inc
sbb
movsl
mov
int3
incl
cmpsl
test
add
jne
and
add
cmpsl
xchg
mov
cltd
ss
mov
cmpsb
das
jne
add
xor
shl
popa
lcall
xchg
sbb
test
xor
inc
xor
lods
jge
and
mov
hlt
and
push
sti
mov
xchg
mov
imul
xor
inc
test
mov
cmpsl
adc
ljmp
push
sub
jmp
decb
push
inc
ds
sbb
mov
testl
mov
and
pop
push
adc
mov
mov
test
xchg
or
mov
pop
jne
sub
sbb
cwtl
enter
jno
fcomps
aad
dec
push
jl
pop
aam
pusha
xor
lcall
pusha
lock
adc
cmp
pop
jl
fldl
push
mov
mov
and
push
imul
lea
insb
sub
leave
vmread
test
xchg
lods
cmpsl
cmpb
and
aad
mov
pusha
dec
sahf
jns
or
out
mov
call
insb
aam
push
movsl
add
pop
mov
insl
jecxz
movsl
repnz
movsb
imul
sub
xlat
xchg
sub
sbb
hlt
xchg
insl
out
add
in
jb
push
dec
jne
xor
imul
sub
cmpsl
mov
and
push
push
cmpsl
push
xchg
popa
push
sub
mov
cmp
aas
scas
jp
insl
fsubrs
pop
subb
mov
push
lock
rcll
cltd
cmp
sub
push
hlt
das
inc
call
fxch
mov
mov
push
fimuls
das
ficoms
aas
in
insl
jmp
arpl
adc
fdiv
dec
mov
mov
mov
push
xchg
add
pop
pop
dec
xchg
mov
cmp
sbb
cmp
cltd
xchg
dec
sti
or
sar
dec
mov
sub
ret
dec
aas
dec
cmp
mov
jo
and
mov
ds
pop
mov
cmp
hlt
jns
andl
cmp
bswap
lcall
insb
mov
jmp
daa
push
lea
es
out
adc
add
push
lret
fs
xchg
dec
inc
pop
pushf
jb
xchg
fcomip
pop
mov
cmp
negl
jns
jno
mov
outsl
imul
xor
js
pusha
hlt
or
jnp
subb
and
pop
stos
hlt
jno
jno
push
jl
cmp
sti
or
gs
stos
add
imul
jno
outsl
hlt
add
cmpsb
adc
bound
adc
fmull
iret
ss
cmp
rolb
cmp
mov
enter
outsb
leave
insl
ljmp
push
rol
outsb
push
popl
xchg
xchg
fstpl
cmc
push
mov
push
and
cmp
add
mov
arpl
fcoml
fcmovb
jno
push
test
lret
ret
mov
inc
iret
aaa
cmpl
test
scas
or
js
xor
inc
inc
xchg
in
fbld
mov
in
push
mov
test
xor
pusha
dec
test
jbe
leave
xchg
pop
cmp
mov
es
pushf
sbb
jns
les
pop
adc
adc
shl
popa
mov
adc
push
and
stos
popf
rorl
sub
and
pop
mov
mov
cltd
jnp
hlt
mov
aad
or
data16
mov
insl
push
jnp
add
test
pop
insb
imul
imul
add
mov
push
repz
repnz
lods
enter
dec
inc
mov
cli
lcall
add
fcmovbe
mov
push
mov
xchg
adc
arpl
mov
sub
testb
loope
mov
pop
sti
add
push
cmp
or
clc
adc
xor
pop
popa
jbe
xchg
dec
mov
xchg
inc
add
push
pop
rclb
sub
and
mov
lods
icebp
adc
dec
and
inc
scas
inc
xchg
cmp
dec
sbb
fcompl
mov
jbe
inc
in
sub
scas
push
roll
mov
mov
sbb
clc
sbb
mov
sbb
or
sub
jmp
in
aad
lea
mov
shrb
test
fistl
mov
pop
imul
movsl
and
xchg
inc
xchg
push
inc
inc
adc
xor
and
mov
lock
aaa
imul
push
in
sub
in
pushf
dec
cmp
lret
xlat
outsb
sbb
sbb
and
out
movsb
int
or
xor
loope
pop
xchg
xchg
rcll
dec
imul
mov
pop
jns
dec
inc
jb
xorb
fiadds
push
sub
rcl
std
int3
mov
push
es
lods
imul
sub
push
faddp
jns
pop
leave
jno
in
mov
cmpb
in
fcoml
std
sbbb
sbb
imul
jne
bound
xlat
stos
mov
fcomp
js
dec
cmp
pop
in
mov
call
fisubs
xchg
imul
mov
test
fdivl
or
shlb
outsb
cmpsl
out
pop
mov
leave
sub
inc
arpl
cmp
pop
cmp
mov
jo
cmp
xor
add
ja
push
fiadds
lock
jnp
xor
sbb
mov
mov
bound
sbb
js
fistpll
xor
call
or
scas
pcmpeqw
aaa
pop
mov
push
inc
add
pop
gs
adc
rep
ds
pop
cmp
mov
shl
stos
mov
push
jns
xchg
mov
pop
shrb
shlb
in
inc
cltd
stos
sbb
filds
push
dec
xchg
inc
jle
push
imul
mov
pop
insb
jo
iret
imul
or
int3
sbb
addr16
ds
scas
data16
imul
scas
and
lahf
nop
mov
cmp
push
sbb
lods
lcall
dec
ret
sbb
fistpl
add
imulb
xor
pop
mov
jg
das
xchg
jo
add
pop
inc
jb
inc
and
in
outsl
fldcw
xor
pop
jge
add
gs
jae
test
shll
pusha
movsb
sbb
popa
shlb
xor
jno
pop
rcll
lds
jns
pop
mov
mov
imul
mov
adc
cmp
sub
push
shr
arpl
fcompl
push
add
fidivl
push
xchg
in
dec
lret
ror
mov
pop
out
adc
and
cld
shrl
cld
mov
or
cmp
inc
decl
mov
movsl
fidivrs
test
jns
notl
mov
dec
iret
out
mov
mov
outsb
add
test
lret
mov
jae
js
ds
xchg
jbe
xchg
xchg
les
fsubrs
pusha
movsb
inc
and
mov
xchg
pop
bts
xor
fsubrp
mov
insb
sbb
xor
addr16
inc
sub
jae
dec
adc
popf
enter
outsl
fs
loop
cld
xchg
ss
aam
cli
mov
mov
jns
hlt
adc
push
mov
mov
outsb
movsb
dec
push
push
mov
mov
or
xor
xchg
in
imul
inc
fdivl
sub
jb
iret
and
cmpsl
or
pop
mov
dec
jne
stc
mov
cmp
data16
test
bnd
imulb
int3
sbb
and
loop
gs
mov
lret
add
jl
add
aam
cltd
imul
mov
mov
jns
ret
out
mov
imul
xchg
lock
cmp
clc
stos
sub
pop
inc
call
mov
jp
imul
pop
jo
push
jg
movsl
mov
fimull
xlat
jnp
push
fidivrs
in
xor
mov
insb
dec
mov
stos
pop
and
xchg
jecxz
nop
insb
jge
imul
fidivs
mov
adc
mov
out
or
ret
sub
mov
jmp
xor
hlt
lcall
leave
jns
shlb
aam
and
enter
jp
inc
pusha
mov
cmpsl
lods
in
es
sarl
push
stc
xor
mov
sbb
add
mov
and
mov
mov
mov
dec
into
ss
ficoms
mov
pop
add
js
aaa
mov
mov
ret
mov
xlat
pop
and
sti
out
into
pop
inc
lds
rclb
mov
jne
lock
push
insl
and
in
stos
sub
or
push
pushf
fcompl
insl
hlt
mov
push
in
sbb
jg
xor
adc
inc
xchg
or
mov
sub
sub
cmc
inc
mov
jo
cwtl
decb
insb
js
cmp
adc
jl
or
lret
test
gs
sbb
sub
aad
mov
clc
faddl
xchg
inc
pop
sbb
adc
out
mov
pushl
cld
test
dec
mov
push
xor
cmp
fs
mov
xchg
test
push
dec
movsb
push
lods
jmp
cmpsl
sbbl
fbld
fnstcw
or
cmpsb
inc
imul
testl
mov
in
pop
adc
pop
fstl
xor
and
imul
xor
mov
jge
mov
mov
jp
sub
jae
sbb
dec
jp
cmp
dec
stc
pop
sbb
push
pop
sub
mov
pop
lods
inc
sub
or
out
mov
adc
jb
fdiv
mov
mov
aam
addr16
mov
bound
outsb
out
pop
pusha
dec
jle
pop
jae
aad
in
and
push
fstp
insl
pop
pop
test
push
pusha
push
cmp
lret
mov
inc
add
je
daa
sbb
pushf
cmpsl
adc
push
push
mov
ljmp
sti
sub
inc
jp
scas
add
stc
add
push
aad
adc
jp
push
cmpsl
inc
fisttpll
test
xor
sub
sahf
push
aas
test
sbb
mov
movsb
hlt
push
fisttpll
mov
fildl
repnz
aaa
sbb
add
std
lret
sbb
sbb
mov
cmp
incl
push
xchg
hlt
jmp
pop
sbb
pushf
jmp
add
xchg
inc
call
inc
test
mov
test
mov
mov
inc
dec
mov
in
or
sub
jp
mov
jle
in
mov
adc
ds
jge
stc
stos
sub
lds
inc
cwtl
testb
jns
add
in
add
sub
loope
scas
insb
xor
addb
jmp
or
push
inc
subl
lcall
pop
imul
jle
push
inc
lods
in
bswap
daa
or
into
jp
jg
jo
inc
mov
lcall
jnp
out
sbb
sub
lods
les
xchg
or
push
les
cwtl
loope
test
pop
push
push
lds
push
sub
pop
add
test
paddb
xor
fs
push
loope
dec
call
mov
pusha
push
cmpsl
sub
daa
add
or
mov
sub
test
fmull
mov
je
pop
push
cli
popa
mov
and
mov
jecxz
push
pop
stc
gs
sbb
addr16
out
pop
pop
inc
add
mov
out
push
mov
xlat
lahf
dec
adcl
or
and
add
cli
pop
popa
lock
test
lret
xor
xchg
push
lahf
orl
dec
xlat
push
es
mov
fsubrs
push
insl
cmc
imul
outsl
sub
jmp
cwtl
ss
sti
mov
andl
les
inc
or
xor
mov
and
popa
fstl
lods
jb
ret
jae
xor
inc
mov
insb
fcompl
clc
lret
les
int3
xchg
mov
dec
arpl
add
aad
xchg
jmp
mulb
test
cwtl
fildll
or
pop
popa
sbb
inc
cld
adc
repnz
xor
inc
jno
xchg
fidivrs
decl
inc
or
sub
dec
add
push
xorps
xor
cli
pop
pop
xchg
adc
lods
jo
inc
loopne
dec
sti
pop
idiv
add
cmc
subl
cmp
push
popa
fdivp
mov
fiadds
out
popa
jle
mov
push
jnp
push
cmc
pop
pop
es
ret
jmp
pusha
or
loopne
pop
cmp
mov
ja
xor
inc
cmp
add
mov
push
cltd
xchg
mov
and
testl
push
adc
pusha
je
sub
int3
lock
fbstp
hlt
inc
rcrb
out
fs
and
add
push
std
nop
aaa
pop
xor
dec
jns
sbbb
cltd
cltd
push
cwtl
scas
dec
adc
push
and
dec
mov
xchg
jae
stos
shrl
shll
mov
jbe
loope
je
repz
xor
add
mov
push
in
inc
scas
sbb
cmp
mov
mov
comiss
push
mov
inc
push
mov
xor
mov
jle
push
ret
out
aaa
or
pop
jl
das
js
sarb
lret
add
iret
es
xchg
fs
leave
popa
cmc
lret
jno
dec
push
add
push
sbb
and
inc
fsubl
imul
mov
in
pop
dec
sub
cmp
je
jae
mov
push
bound
or
das
xchg
push
push
adc
adc
jg
and
imul
lds
and
add
pop
sbb
lcall
out
in
inc
scas
and
ret
push
dec
mov
pop
mov
popf
or
insl
daa
rorl
push
mov
mov
les
je
repnz
pop
mov
fcompl
mov
or
sti
les
in
les
xor
sub
addb
xchg
push
decb
int
xchg
popa
mov
loope
cmpsb
repz
mov
stos
in
leave
mov
lret
and
mov
mov
push
popa
test
cltd
shrl
xlat
add
sbb
shll
and
lods
call
addr16
xchg
loopne
dec
outsl
adc
adc
push
xor
adc
xchg
dec
jns
pop
negl
jbe
and
mov
and
xor
cmc
scas
lock
mov
cld
dec
ljmp
mov
add
dec
xchg
sbb
or
dec
or
dec
fwait
push
sub
xor
jge
jge
add
test
mov
mov
test
icebp
aas
inc
fmuls
out
and
fisubl
outsl
mov
xchg
push
loopne
sbb
push
cmp
loop
mov
addr16
sti
fs
xor
cltd
jl
negb
mov
inc
pop
sbb
out
push
jmp
not
dec
arpl
mov
xlat
ficomps
mov
and
xchg
xchg
or
enter
cld
cmp
sub
push
xchg
outsl
adc
jno
gs
rol
gs
adc
or
imul
mov
mov
and
out
ljmp
mov
scas
test
adc
mov
test
pop
push
sbb
mov
testb
mov
sub
pop
jl
xchg
push
mov
pop
out
out
mov
mov
enter
or
xor
orb
aas
and
clc
insl
ret
addr16
test
xor
jle
cmp
sub
push
icebp
xchg
rcrl
pop
cmc
push
loopne
inc
loope
dec
cmp
push
lock
mov
test
mov
jnp
dec
std
xchg
outsl
lcall
aad
inc
pusha
pop
xlat
adc
mov
in
aad
repnz
cmp
add
das
cli
sub
xchg
add
gs
jb
lcall
pop
popa
inc
sbb
enter
dec
fidivrl
push
pop
repnz
mov
sub
push
adc
inc
push
icebp
sbb
mov
dec
xchg
xchg
rolb
cmc
fisubrs
das
xor
jg
mov
ss
mov
pop
and
rorl
mov
pop
and
push
xor
test
pushf
pop
sarl
xor
lret
les
xlat
repz
cltd
pop
rolb
nop
sub
cmp
or
mov
andb
add
mov
repz
push
add
pop
jp
sahf
je
pop
insl
mov
pop
enter
imul
sub
mov
out
popf
ret
add
shl
mov
ljmp
and
pop
sarb
rcrb
pop
push
sub
in
adc
push
nop
inc
out
stos
sbb
cmp
jno
cwtl
add
sbb
xchg
imul
dec
loop
aas
mov
pushl
fnstenv
push
jb
ja
loopne
and
jb
and
inc
lods
sbb
lcall
mov
push
ss
jno
jecxz
push
cmp
stos
sub
test
inc
push
sub
inc
ja
jb
push
data16
sbb
sbb
xchg
xchg
and
jmp
xor
mov
in
cmc
mov
and
nop
cmp
ss
insl
adc
mov
mov
xchg
in
push
and
or
in
ficomps
cmpsb
push
mov
icebp
mov
shlb
xor
cld
and
rclb
cmpsb
and
rol
pusha
out
mov
icebp
iret
clc
lock
fwait
dec
mov
xchg
adc
das
scas
pushf
mull
dec
push
xchg
movsl
out
pop
push
push
sti
jle
xchg
sbb
gs
icebp
test
mov
loopne
lds
out
dec
jnp
xlat
inc
shrb
pop
jl
jmp
outsl
vpaddusb
jmp
add
pop
mov
mov
adc
cmpsl
sti
insb
loop
xor
popf
inc
push
fldl2e
addr16
mov
pop
sbb
in
adc
push
inc
pop
ret
mov
jno
xchg
cltd
add
js
and
add
ret
pop
cmp
jge
cltd
dec
imul
insl
popa
scas
cltd
cmc
xor
and
cmpl
inc
movsl
push
push
push
mov
ds
ja
sub
mov
mov
andl
sub
inc
xor
mov
aad
dec
fsubrl
aaa
push
in
shr
stos
mov
pop
ds
pop
movsb
jns
add
sbb
adc
and
mov
or
fsubrs
imul
stos
outsb
xchg
add
cmpl
shlb
xor
pop
scas
data16
hlt
fnstsw
lods
addl
adc
sbb
js
lods
insl
inc
das
mov
cld
sbb
stos
and
rcr
sbb
jbe
mov
cmp
es
cmp
sub
inc
xor
repnz
mov
add
mov
aaa
int3
cltd
mov
push
fistps
add
addr16
gs
repz
xchg
pop
pop
jo
cmc
xchg
add
mov
mov
sbb
fwait
mov
pushf
leave
je
cld
push
cmc
lock
xchg
fmuls
cmp
and
push
cltd
insl
maskmovq
testl
addb
ret
adc
lret
jp
and
roll
sti
xchg
sbbl
sub
add
cld
pop
sub
lcall
loope
scas
adc
adc
scas
fwait
sub
loope
xchg
pop
decl
jge
inc
xchg
mov
int
pushf
stos
repnz
push
fiadds
jmp
rorb
and
jge
int3
sub
nop
mov
inc
cmp
das
sbb
js
das
push
jno
rcll
movb
inc
xor
outsl
repz
and
repnz
jl
scas
adc
jns
push
cmp
cmp
mov
dec
cmpsb
inc
fistpll
lea
fwait
out
cwtl
stc
mov
mov
mov
mov
mov
dec
leave
dec
lret
ljmp
fs
mov
push
cld
aam
test
scas
js
roll
xor
xchg
mov
std
insl
jge
xor
lods
lret
popf
lods
arpl
xchg
notb
adc
dec
mov
inc
data16
push
jmp
xchg
jb
push
repnz
inc
lds
je
aaa
outsb
mov
xor
bound
sarl
pusha
mov
outsl
push
jmp
sbb
subl
push
mov
notl
fwait
testb
in
leave
loopne
in
add
xchg
out
xchg
or
mov
push
int
sbb
neg
jmp
lahf
stos
or
and
lods
rcl
sbb
mov
lock
test
mov
or
add
imul
lds
mov
xchg
cltd
les
ja
xor
aam
mov
repz
loop
rcrb
lock
adc
lret
add
negb
adc
or
adc
enter
sub
aad
js
faddp
mov
call
les
xor
mov
lock
jmp
add
jl
dec
and
sbb
in
in
mov
fcoms
inc
adc
push
popf
cmp
pop
lahf
cs
daa
dec
lahf
fcoms
or
pop
xchg
xor
aad
pushf
and
paddd
sahf
dec
adcl
ja
aam
pop
push
ret
pop
pop
fs
push
jb
jbe
pop
adc
cmp
sub
mov
mov
sbb
pop
iret
mov
or
data16
mov
xor
imul
lret
jno
loop
dec
and
into
mov
push
pushf
popa
and
lods
cld
push
cmova
movsl
movsb
shrl
push
xchg
jns
ret
cmc
mov
jo
sub
jbe
stos
outsb
mov
xor
jno
jmp
rcll
jo
frstor
fldl
adc
loope
xchg
cmpsl
jae
lret
in
mov
xchg
scas
sub
stc
and
ss
mov
mov
popf
loopne
ljmp
pop
inc
xchg
jnp
mov
loope
jnp
cmp
jp
mov
lcall
aad
push
push
into
rclb
mov
test
pop
sub
std
lods
xor
sub
pop
fidivrs
scas
pop
mov
and
imul
mov
mov
pop
pusha
mov
inc
cmp
cmp
pop
dec
xor
aas
test
or
push
mov
cmp
clc
xor
xchg
test
mov
mov
mulb
xchg
dec
das
cmovnp
and
jo
movsb
pop
sbb
mov
mov
jbe
jae
aas
movsb
add
mov
add
aad
repz
and
cs
shrb
sbb
push
mov
sbb
movsl
std
adc
es
adc
jbe
call
sti
dec
inc
xchg
hlt
sbb
cs
subb
xor
std
iret
scas
pop
stos
cmp
aaa
aad
mov
cwtl
push
pop
testl
mov
daa
lds
fimuls
pushf
and
push
jl
cmpsb
popf
les
xor
mov
sbb
push
data16
add
mov
add
out
pop
test
sti
mov
add
loopne,pt
mov
test
mov
push
in
outsl
xor
add
ret
add
pop
rclb
inc
out
sub
out
dec
cmpsb
out
mov
jmp
lret
xor
inc
xchg
add
push
hlt
inc
pusha
test
mov
hlt
sbb
mov
push
xchg
cmp
add
mov
xchg
mov
mov
aam
add
push
push
adc
dec
jmp
loope
fistps
mov
pop
stos
fisubl
hlt
int
movsl
xchg
push
ds
adc
movsl
daa
xchg
mov
mov
push
les
or
xor
mov
mov
cld
pusha
push
mul
iret
repnz
push
jle
es
mov
or
stos
pop
loope
fadds
sub
fnsave
sbb
test
popf
and
and
test
cmp
loope
xchg
fwait
stos
lea
mov
psrlw
mov
add
sub
cmp
fwait
xchg
je
push
cmpsb
ffreep
pop
daa
lea
push
sub
lods
mov
xchg
jmp
gs
sbb
sub
push
xchg
iret
pop
repz
stc
push
stos
js
imul
jb
jne
in
daa
cwtl
out
or
cltd
fstl
push
mov
scas
sub
push
jecxz
fistpl
iret
shrl
jmp
adc
stos
sub
int3
jmp
pushf
ss
push
and
sarl
sub
in
or
sbb
stos
pushl
push
inc
inc
les
sbb
mov
push
mov
shrb
leave
pop
aad
and
jl
add
inc
cltd
lret
or
and
imulb
cmpsl
scas
movsl
loopne
leave
ss
aam
inc
jge
ret
std
fs
fcomip
adc
mov
arpl
pop
cmpb
es
jns
repz
sub
jmp
cwtl
call
cmp
mov
pop
mov
inc
aad
jns
cmp
sti
and
rcrb
mov
cli
inc
push
ret
sbb
sbb
xor
cmpsb
add
jae
imul
xchg
inc
sahf
jl
push
add
pop
cmc
scas
divl
inc
xchg
xor
in
mov
mov
pop
cmp
repnz
push
aam
sub
mov
push
sbb
fsts
out
mov
inc
jl
xchg
inc
xchg
movsb
mov
pop
push
push
out
inc
stos
gs
cmp
popa
test
push
or
adc
imulb
es
jle
xchg
or
mov
add
xor
ret
mov
mov
mov
in
inc
push
jg
pop
clc
imul
stos
mov
mov
or
jae
test
sbb
sbbb
jns
inc
add
dec
cmp
mov
pop
dec
push
flds
mov
sbb
add
cs
ret
push
adc
xchg
dec
aas
jae
cmpsl
xor
dec
fucomip
ss
es
jne
mov
fsubl
jns
out
or
lahf
scas
or
les
ds
rol
xor
sbb
pusha
push
sub
or
mov
mov
pop
dec
iret
test
mov
cmc
lcall
jmp
jne
addl
dec
pop
aad
aad
fstps
mov
pop
ljmp
or
pop
shll
xchg
insl
in
call
fists
mov
pop
out
and
in
xor
pop
ljmp
fs
aas
adc
push
test
testb
loope
pop
push
test
xchg
arpl
inc
mov
mov
mov
push
jb
and
imul
je
xorl
mov
outsb
sub
mov
clc
xchg
std
or
adc
xchg
repnz
dec
push
jo
xchg
adc
xchg
fistpl
pushf
and
lret
xor
orl
lret
loopne
xchg
mov
in
xchg
inc
xor
cmp
lods
pop
lods
pushf
scas
ret
cwtl
cwtl
push
push
ror
ss
inc
repz
mov
jno
xor
insl
pop
lcall
mov
mov
lcall
ficoms
fldl
add
cltd
jl
js
adc
imul
push
cltd
aaa
shrb
inc
mov
pop
ffree
fninit
jmp
xchg
push
clc
mov
pop
or
jne
rcll
fnsave
jbe
out
inc
adc
aad
xchg
pop
imul
pushf
mov
and
push
jo
shrb
mov
xor
cld
and
inc
lods
mov
cmc
scas
or
push
dec
xchg
sbbb
jo
std
inc
jne
fistpl
pcmpeqd
mov
add
stc
pop
pop
pop
es
lret
loop
mov
sti
psrlq
mov
mov
cmp
aam
pop
mov
jb
inc
pop
pop
fcoml
fs
lock
add
inc
mov
outsb
out
ljmp
test
cmp
mov
fildl
fildl
pop
mov
add
push
inc
test
gs
ss
mov
popf
mov
jbe
lds
cmp
ret
dec
hlt
add
dec
mov
xor
pop
and
jl
inc
mov
mov
mov
in
jmp
and
xor
lahf
push
push
xchg
sbb
xchg
pop
call
sub
cltd
hlt
inc
mov
add
cs
push
sbb
mov
pop
sub
lds
add
cmpb
push
jne
push
jne
xor
fstpl
add
loope
icebp
cmc
inc
and
sbb
repnz
xor
dec
push
loopne
jo
not
fxch
jnp
adc
ljmp
jl
iret
mov
jl
adc
cmp
sbb
popa
mov
stos
ja
jmp
cmp
xchg
cmp
push
add
adc
fnstcw
sbb
jne
dec
out
jb
or
dec
aad
ds
pop
and
mov
pop
cmp
add
push
addl
xlat
les
in
push
outsl
insb
leave
clc
lods
mul
mov
mov
adc
lock
mov
sbb
test
mov
fyl2x
outsb
out
or
test
or
aam
sahf
addb
cmp
sbb
frstor
sbb
mov
sub
dec
fwait
sarl
clc
cmp
or
mov
push
imul
pop
cltd
lret
outsl
repz
sahf
inc
adcb
inc
fsubl
aas
push
lcall
mov
pop
pop
and
std
xor
inc
or
fnstenv
push
add
and
pop
lea
add
shl
ja
xor
fdivr
test
or
push
dec
addb
out
inc
cmp
outsl
femms
mov
stos
sbb
fwait
inc
pop
jo
mov
add
movsl
aam
je
sub
xchg
and
decb
ret
aaa
sbb
xor
pop
aad
loope
pop
jg
stc
push
mov
jge
xchg
inc
iret
lcall
xorb
push
sbb
push
sti
lea
mov
loopne
stos
pop
push
and
mov
xor
fisubs
sti
and
pop
out
gs
loope
mov
sub
fs
push
js
jp
inc
lods
pop
lret
lcall
bound
test
push
jmp
aaa
sub
mull
push
push
mov
mov
loop
out
fldt
mov
xor
testl
mull
aam
dec
cmpsl
push
cmp
xor
inc
test
dec
pop
test
mov
xchg
sub
push
es
pop
cmpsl
insl
and
outsl
ret
jno
outsl
icebp
cmp
pushf
hlt
scas
std
and
imul
mov
lds
stc
paddusw
inc
mov
inc
xor
cmc
xorb
stc
inc
into
cmp
paddsb
push
pop
mov
test
cmpsl
mov
and
fs
cld
cmovb
mov
inc
xchg
pop
jnp
xchg
nopl
jg
orl
cwtl
ret
pop
movl
jl
mov
sti
mov
mov
shll
dec
jne
add
mov
fwait
jnp
sub
mov
scas
and
mov
addr16
jne
dec
mov
mov
mov
pop
out
and
js
push
xchg
push
xchg
xor
mov
sub
dec
cmp
cmp
push
jae
test
and
mov
ljmp
jmp
or
xchg
xchg
mov
lret
pop
outsb
inc
cmp
mov
lods
cltd
push
add
push
in
push
mov
pop
js
movsb
out
mov
sbb
mov
inc
adc
mov
in
sub
xchg
push
fwait
or
xchg
adc
mov
sub
icebp
inc
sub
xorl
pop
and
xor
andb
and
aas
arpl
aaa
pop
push
inc
mov
mov
pop
sub
xchg
mov
xchg
out
cmp
pop
adc
jne
aaa
jl
sbb
jmp
mov
test
jns
mov
cld
shrb
lods
lock
or
xchg
dec
ds
add
inc
aam
xor
test
mov
ja
xchg
push
ror
clc
jbe
and
cmp
sbbl
jp
popf
pop
dec
pop
sub
push
cmp
insb
add
into
xchg
in
std
sarb
mov
lgs
push
or
stc
sub
xchg
rcl
aas
push
add
std
push
sbb
test
sub
rcrb
sbb
mov
pop
out
in
adc
add
jns
stos
xchg
stc
lods
out
pop
xchg
xchg
mov
and
push
rcr
mov
adcl
mov
cltd
xor
pop
mov
sub
stos
loope
mov
cmp
push
cmp
sbbl
outsl
stos
inc
cmc
add
mov
xlat
lds
rolb
xor
sub
dec
inc
sbb
adc
out
mov
mov
mov
arpl
jp
mov
push
mov
push
loopne
sub
cmc
sbb
mov
sbb
scas
lea
and
jp
mov
jo
int
jp
dec
das
add
jne
test
in
mov
rcll
stos
adc
int3
cltd
mov
repnz
xchg
adc
and
mov
int
xchg
dec
movsb
je
adc
repz
idivb
pop
icebp
nop
or
fdivl
mov
sahf
test
mov
sub
mov
lods
mov
rclb
dec
pop
add
pushf
xor
pushf
call
sbb
xlat
ljmp
mov
das
push
std
and
shlb
movsb
imul
jnp
lahf
leave
add
test
ja
mov
xorb
inc
sbbb
xor
cmp
scas
and
pop
jl
adc
loop
mov
inc
inc
push
jle
sub
jg
mov
js
jo
and
jecxz
add
and
mov
subb
cmp
fists
or
mov
ds
jmp
pop
dec
mov
clc
out
pop
pop
movsl
push
push
mov
and
cs
popf
xor
fdiv
or
mov
mov
xchg
and
int
pop
mov
in
pusha
sub
mull
les
xor
movzbl
call
add
sqrtps
std
jnp
and
or
cmpsl
or
jle
out
jle
jp
pop
cmc
pushf
and
gs
jb
and
mov
mov
icebp
or
stos
lds
cmp
jnp
push
or
in
lret
xchg
mov
push
xchg
bound
mov
pop
add
stc
mov
lds
push
fmul
pop
mov
sbb
jmp
popf
test
je
outsb
daa
iret
mov
ficomps
fsubl
out
into
std
loopne
in
hlt
inc
push
call
and
adc
fistpl
sbb
cmc
xchg
das
xlat
repz
pop
fisubl
out
repz
mov
jl
xchg
push
ds
lcall
ss
mov
inc
dec
mov
lods
cltd
fistpll
es
mov
mov
mov
pop
pop
jnp
xor
jb
mov
jae
repz
stc
dec
push
xchg
mov
xchg
adc
ret
sub
xor
dec
mov
xchg
push
fstpt
mov
mov
push
jb
or
pop
push
or
and
push
cmp
hlt
sub
sub
call
shrl
ficoms
xchg
xchg
movb
les
test
push
les
outsb
sub
push
lcall
sbb
jns
jno
or
dec
jns
mov
and
push
xor
jno
shrb
rep
mov
pop
lods
frstor
xor
mov
mov
test
pop
mov
push
icebp
push
mov
loope
cmpsb
push
sarl
jbe,pn
inc
aad
push
or
loope
dec
pop
fmull
mov
xchg
jne
arpl
out
xor
iret
jne
xchg
or
pop
push
xchg
bound
lret
pop
jge
leave
mov
push
or
xchg
sti
xor
js
mov
xchg
imul
pop
out
push
push
sub
movsl
clc
push
shll
xchg
in
loopne
hlt
movsb
jg
sbb
mov
xor
mov
dec
dec
xor
clc
mov
mov
imul
cmp
pop
sahf
out
push
out
dec
mov
mov
popa
xor
ds
xor
movl
insb
in
popa
mov
cld
nop
stos
dec
loop
aad
dec
addb
push
xchg
rcrb
cmpsl
fsubrl
adc
int
xchg
mov
sbb
sbb
cmc
movsb
push
jmp
or
ror
jbe
mov
std
pop
fildl
jg
or
test
arpl
outsl
lods
pop
cs
repz
ret
mov
icebp
cmp
inc
pop
stc
repnz
mov
addr16
in
ja
jns
loope
icebp
push
imul
shll
sbb
filds
and
lea
aaa
pop
enter
jmp
xor
stos
scas
push
mov
pop
xor
sbbb
shrb
cmp
pop
sbb
ret
pop
mov
mov
xor
adc
cmp
fsub
std
or
jno
popa
xchg
pop
fdivl
mov
adcl
dec
xchg
xor
cmp
cmp
sti
stc
es
lret
ficomps
mov
fcompl
pop
jecxz
jg
and
aam
push
stc
call
int3
lods
sti
popf
fs
sti
sbb
cld
mov
and
xchg
out
fnstenv
das
fwait
outsl
ds
aas
xchg
aas
xchg
sbb
push
pop
adc
daa
je
sbb
xchg
dec
or
mov
in
jbe
in
mov
fstpt
mov
movsb
mov
clc
add
mov
and
mov
cmp
les
push
cmp
sub
cwtl
in
push
fdivrs
pop
push
js
movsl
mov
cmp
sbb
lcall
xchg
sbb
sub
sub
ficompl
outsb
jl
push
popa
in
and
fisubrs
sbb
aas
lods
in
es
leave
pusha
mul
fmul
sti
les
sub
xchg
xor
jecxz
ja
roll
cld
pushl
test
testb
or
cwtl
arpl
push
push
sti
cwtl
lret
mov
add
inc
test
inc
mov
pop
mov
jb
add
fnstenv
out
inc
xchg
insb
std
lea
ljmp
in
inc
ja
mov
sbb
pushf
fidivrs
fwait
lcall
mov
pusha
rcrl
xor
cmp
nop
adc
pop
mov
adc
cltd
stc
and
fdivs
cli
and
cmp
pop
arpl
sbb
jle
dec
lahf
cmp
mov
pop
in
test
push
out
push
sbb
lods
push
inc
pop
push
inc
imul
rorl
out
cmp
aas
dec
mov
cld
sahf
mov
mov
bound
dec
dec
pop
rcrl
mov
add
inc
in
fildll
fsub
icebp
aaa
mov
inc
ret
test
mov
dec
js
push
lahf
fimull
dec
or
dec
sub
jmp
data16
mov
sub
jns
and
mov
rorl
and
cmp
ficoms
pop
mov
inc
inc
rclb
fdiv
pop
cmp
inc
insl
aam
xlat
pop
xchg
pop
testl
add
pop
aaa
rcll
cld
cmpb
scas
sbb
out
cmc
push
xchg
mov
leave
pop
push
mov
xchg
stos
mov
fbld
and
and
pop
cmc
jl
adc
inc
stos
lea
xlat
push
mov
mov
adc
sbb
call
movsl
arpl
xchg
add
jle
ss
sub
mov
xchg
dec
mov
mov
bswap
xchg
jbe
mov
nop
imul
sub
test
adc
outsl
xchg
cwtl
jb
cld
xor
daa
mov
mov
add
sub
fs
fwait
mov
aad
sub
shlb
push
dec
pushf
loop
imul
aad
mov
jnp
rcll
shlb
and
lods
rorb
cmpsb
shlb
xor
push
cwtl
stos
in
inc
clc
mov
push
call
out
into
adc
dec
js
or
adc
lret
mov
mov
push
setns
in
inc
pop
pop
clc
int3
negb
enter
sub
fsubs
add
ja
sub
mov
and
andl
stos
inc
jge
mov
adc
cmp
bound
jns
inc
push
jb
or
or
xchg
add
cmp
sbb
mov
dec
aas
pop
or
clc
mov
fcompl
std
loop
out
jp
xchg
mov
mov
jmp
add
pop
bnd
sbb
or
pop
cli
popa
cs
int3
adc
sub
incl
outsl
adc
sub
cmc
jae
or
push
hlt
adc
sub
lock
or
out
aas
pop
inc
movb
sbb
daa
icebp
mov
push
pop
pop
lock
mov
push
repnz
inc
mulb
lea
in
ja
sahf
dec
nop
or
ja
in
and
xor
and
mov
add
or
pop
cmp
fstl
mov
mov
jl
out
test
movsb
addr16
pop
jmp
mov
xchg
repz
ficompl
pusha
sbb
add
ret
xchg
cmp
out
cmpl
xchg
data16
das
sub
xchg
sub
mov
sahf
cmp
iret
and
ret
sbb
xor
mov
stc
sbb
out
mov
in
shlb
scas
lret
lock
mov
and
sub
stc
jle
xor
mov
lock
jne
lods
jo
jb
shlb
mov
jbe
or
mov
sbb
xchg
push
add
mov
add
mov
sbbl
cmpsb
mov
scas
cmp
or
arpl
cwtl
lahf
into
xchg
xor
cmc
ljmp
clc
cmpsl
inc
int3
fsubrs
ljmp
jnp
xchg
in
loop
popf
cmp
sbb
popa
lret
inc
rcrb
xchg
pushf
icebp
sbb
mov
fsub
cmp
popa
inc
mov
dec
dec
jb
jg
jns
adc
adc
rcr
imul
cmp
sub
xor
add
xchg
imul
push
testb
inc
push
dec
mov
movsb
repnz
xchg
fdivl
fiaddl
aad
mov
or
mov
testl
push
out
clc
cld
pusha
aad
dec
mov
pop
outsb
test
jbe
jle
xchg
jo
xlat
ficomps
movsb
add
push
cmp
jge
ljmp
fimull
or
cmpsl
cli
dec
jae
enter
push
subb
jmp
xchg
fsub
push
into
inc
outsl
sub
lods
jge
mov
fcoml
aam
lret
lock
or
loope
clc
jge
fwait
inc
data16
in
push
dec
pop
lods
mov
mov
in
pop
inc
and
ss
inc
cmp
inc
pop
mov
test
into
fisttpl
inc
pop
jno
das
fs
nop
add
sti
xchg
inc
je
mov
mov
cmp
sbb
jns
pop
out
test
jmp
int
sub
daa
cmp
sub
aaa
or
cltd
adc
insb
in
mov
pop
xor
xchg
dec
jo
nop
ret
es
dec
mov
iret
mov
sub
insb
jp
add
xchg
ret
ds
scas
pop
mov
ljmp
les
cld
inc
lcall
pop
lea
or
scas
mov
pop
xlat
es
fwait
xchg
pusha
mov
out
xchg
loop
js
cs
cmp
mov
das
stos
inc
push
xchg
inc
jo
xchg
stc
lea
fcmovb
iret
mov
dec
mov
jecxz
pop
push
pop
cmpsb
xor
pop
mov
insb
pop
jne
mov
mov
push
or
and
addr16
adc
faddp
lcall
xabort
jmp
mov
adc
xchg
jg
pop
cmp
push
cmc
cmp
xor
test
repz
xchg
cmp
lea
pop
add
popl
mov
and
inc
cli
xchg
or
ror
push
mov
loope
dec
pop
cwtl
outsl
lcall
inc
ja
mov
fs
dec
xchg
sub
xor
int
add
sub
mov
inc
cmp
dec
sahf
rolb
add
and
cmp
scas
or
data16
inc
in
or
or
ljmp
jno
fcmove
xchg
ret
scas
adc
push
cmpsb
mov
adc
pop
rcll
xchg
jb
adc
mov
sbb
adc
fnstcw
sub
into
jmp
mov
icebp
es
pushf
out
cmpsb
inc
sub
lahf
xchg
cmpl
pop
shlb
push
lods
data16
push
sub
lock
push
mov
out
push
sahf
repz
ficoms
mov
pop
into
xor
cmp
sti
inc
outsb
out
fnstcw
xchg
jnp
push
out
in
cmp
iret
mov
lret
nop
mov
sbb
clc
bound
mov
xchg
arpl
cmp
dec
pop
sbb
inc
into
add
in
sbb
stos
mov
push
push
outsb
cltd
add
dec
xor
jmp
jb
jae
insl
iret
xchg
dec
lret
and
hlt
les
cmp
lahf
std
jns
add
pop
int
div
mov
sub
mov
xor
dec
pop
pushf
test
sti
vpsubd
xchg
leave
int3
add
mov
fdivrl
pop
lret
fcmovnu
ljmp
sahf
dec
cmc
push
xchg
ja
pop
sbb
or
nop
jle
nop
ret
pop
push
fistpll
sbb
mov
jmp
das
cwtl
pop
mov
jmp
sbb
mov
adcb
loop
xchg
es
push
insl
xchg
and
sub
xchg
inc
cmp
gs
push
xlat
jmp
or
stc
pop
outsb
stos
daa
dec
aam
or
jmp
ror
mov
jl
add
push
lods
inc
stos
outsl
sub
mov
inc
lea
lods
lds
xchg
push
jae
rcl
adc
mov
rolb
imul
add
or
popa
mov
in
and
inc
pop
imul
cmp
pop
adcb
lahf
pop
adc
jecxz
add
pop
dec
movsl
pop
sahf
test
sub
pop
aas
sbb
add
adc
jecxz
fs
data16
dec
lret
in
jle
adc
mov
es
test
in
push
addr16
jae
jecxz
fwait
mul
dec
arpl
dec
xchg
sub
and
stc
push
jb
movsl
loop
cmp
xchg
mov
ja
cmpsl
test
mov
xchg
pushf
jae
push
scas
pop
pop
cli
test
aas
or
jmp
fbld
push
push
test
mov
xchg
aam
mov
push
pop
cmp
mov
xor
rclb
shlb
xchg
xchg
lock
mov
stos
and
and
fldcw
dec
sbb
cmp
cltd
testl
add
add
jge
push
add
out
les
jp
pop
add
jmp
xchg
aas
cmp
ljmp
lahf
add
push
pop
les
push
in
out
cmp
nop
push
sarl
ficompl
sbb
jle
cmpsb
xchg
sub
or
xchg
filds
mov
das
push
inc
mov
test
dec
mov
sbb
subb
push
icebp
outsb
ret
adc
adc
xor
sti
faddl
adc
push
adcl
ret
in
mov
cld
jge
sbb
sub
scas
loop
mov
call
cmp
mov
sub
inc
adc
pop
or
ds
fsubs
loop
push
lret
pop
mov
xor
mov
ds
lahf
fsts
scas
insb
or
jecxz
sbb
mov
insl
xchg
inc
inc
std
cmpsl
fmuls
daa
cmp
jecxz
xchg
jno
sti
cmpsl
ss
mov
inc
cmp
push
in
cltd
jmp
notb
ret
dec
sti
or
mov
jmp
ret
gs
mov
shrl
lcall
inc
shrb
mov
cmp
shrl
mov
sahf
xchg
mov
sbb
gs
mov
push
mov
inc
add
aad
cmpb
fidivs
push
xchg
cmp
mov
xor
sahf
xchg
daa
xchg
inc
jno
jb
xlat
xchg
shr
icebp
lcall
or
jno
adc
mov
mov
add
mov
cwtl
jmp
ret
mov
les
sbb
inc
cwtl
lods
iret
inc
movsb
sbb
ljmp
sbb
lcall
test
repnz
mov
push
insb
xor
pop
sbb
ret
push
mov
std
out
out
ss
cmp
or
mov
ud2
mov
clc
stos
mov
sbb
add
push
sbb
dec
insb
cli
out
mov
mov
out
ret
roll
push
cmp
out
dec
xchg
xchg
jmp
mov
ret
loope
or
push
push
mov
fsubs
sbbl
sbb
mov
hlt
push
orl
jno,pt
enter
aam
fdivr
nop
aas
lret
flds
mov
setg
aam
test
icebp
ljmp
sub
stos
fsub
add
push
loopne
cltd
ret
ja
xor
das
insb
jno
dec
das
dec
icebp
mov
mov
mov
sub
inc
int
inc
push
and
insb
in
cld
hlt
js
mov
std
jge
jg
mov
mov
jge
jae
ret
maxps
or
idiv
xchg
sub
lahf
cmp
xchg
sahf
xor
testl
mov
xchg
daa
clc
inc
cmp
xchg
sub
inc
push
inc
sahf
cmpsl
fistps
ss
sar
fsts
ret
js
mov
sub
mov
stc
test
rclb
xchg
bound
or
cltd
pusha
push
pop
jns
shll
repz
adc
stos
adc
inc
pusha
add
pop
or
hlt
int3
and
lahf
aam
xlat
jnp
mov
std
inc
xor
pop
loopne
rorl
lock
lods
gs
lock
jl
xor
and
test
sbb
xchg
adc
pop
or
jbe
outsl
aam
sarl
in
les
push
cmp
push
fisttpl
pop
in
cmp
dec
inc
mov
aaa
ret
cmp
fisubrs
out
outsb
push
lret
mov
jbe
jns
arpl
shlb
and
or
jmp
mov
out
add
and
adc
lahf
addr16
add
push
stos
mov
leave
mov
push
psrlq
jp
insl
imul
rcl
and
js
ljmp
ss
lcall
and
inc
fnstsw
icebp
hlt
test
push
and
ret
jp
jge
cmp
add
dec
std
or
sbb
fistps
daa
push
pop
mov
mov
int
mov
add
imull
loop
icebp
xchg
lcall
cmp
xor
adc
ds
dec
fdivs
adc
or
pushf
ret
or
xchg
xchg
xor
and
ficoms
adc
sbb
mov
xor
inc
cmp
cmp
fs
ss
cmp
add
lods
mov
ret
cmp
cmpsb
add
mov
pop
pop
inc
pop
cltd
and
shr
xchg
mov
scas
cli
inc
fstl
adc
mov
pop
insb
and
jb
ss
jp
mov
add
cld
stc
sbbb
pop
insb
in
adc
pop
outsl
es
cli
loopne
add
lods
xlat
cs
push
mov
xor
xor
adc
inc
repz
add
fstps
jg
das
or
xlat
pop
js
ljmp
xor
in
inc
sahf
ljmp
test
sbb
cmp
jl
outsl
mov
scas
jne
fisubrs
into
adc
xchg
lret
sub
repnz
jnp
stos
pop
jae
jg
sahf
mov
sbb
jecxz
aas
add
lea
push
push
cmp
adc
divb
loopne
pop
and
mov
lcall
push
bound
push
sbb
subl
loopne
outsl
sahf
and
xchg
ljmp
add
jb
push
jle
scas
add
or
mov
call
sub
push
mov
fidivs
js
hlt
jle
sub
jge
cmp
xchg
xchg
gs
sbb
cli
sub
push
arpl
or
xchg
dec
jmp
inc
mov
jno
imul
pop
jl
jmp
pusha
cmpsl
mov
pop
jle
into
add
cmpsb
cmp
push
and
hlt
ljmp
xchg
sahf
xorl
mov
mov
fidivs
lahf
mov
xchg
xchg
int3
fistl
mov
test
xor
jmp
ds
push
jmp
inc
out
outsb
xchg
fdivrp
push
cmp
std
push
stc
mov
dec
std
mov
jg
aas
dec
and
xlat
hlt
xchg
stc
adc
mov
cli
cmpsb
imul
push
jbe
in
mov
add
lcall
adc
stos
adc
or
xchg
ss
ret
inc
call
dec
mov
push
cmp
call
push
into
mov
in
and
test
dec
pop
les
mov
sub
cmpsb
test
xchg
xor
add
push
lock
orb
movsl
mov
stos
mov
rcr
sbb
fs
push
inc
dec
pop
xor
mov
push
sahf
mov
lret
int
pop
inc
pop
adc
mov
push
popa
push
mov
pop
pop
stos
mov
lret
enter
js
inc
push
mov
cmpsl
sub
push
add
adcl
loopne
in
cmp
jg
cmp
jl
std
inc
ret
pop
subl
mov
int
test
xchg
push
push
scas
fisttps
ja
shrb
push
scas
inc
mov
fbstp
orb
iret
xor
nop
lahf
inc
loope
push
test
jbe
pushl
lock
pop
mov
adc
mov
inc
cmpsl
out
xchg
test
lock
push
imul
push
xor
shr
je
fbstp
mov
shrb
and
out
xor
or
add
cmp
mov
into
cmp
mov
mov
lret
in
xor
in
lds
in
mov
jecxz
ljmp
jae
fisttps
stos
fnstsw
mov
pop
sbb
fwait
sub
mov
test
mov
dec
mov
jns
idivl
and
jae
imul
dec
adc
es
lock
int
xchg
hlt
mov
cmpsb
or
xchg
mov
fcmovnb
loopne
push
ja
cmp
or
shll
sub
and
sbb
inc
dec
bound
adc
mov
lret
test
and
cli
push
cmp
xchg
jle
fcomi
lret
nop
and
arpl
sahf
loope
fsub
dec
movsb
inc
xor
scas
adc
mov
stc
ret
and
push
subl
sahf
cmp
fistps
sbb
fs
and
inc
jnp
sahf
hlt
ret
test
adc
cli
rorb
stos
and
push
inc
fcmovnu
mov
int
pop
dec
fcmove
sar
sti
dec
loopne
pop
mov
xchg
mov
pop
fnstenv
or
xor
cmp
or
jg
pop
xchg
lahf
cmpsb
test
fmull
std
mov
ret
aad
xor
pop
test
iret
mov
sub
in
inc
adc
bound
mov
or
push
das
pop
push
dec
and
cmp
fnstenv
insl
inc
jecxz
popf
dec
aaa
mov
mov
dec
stos
mov
testl
inc
loope
push
outsb
mov
jge
jmp
sub
and
sbb
dec
loope
in
jns
lods
jno
lods
lret
cmpsl
lcall
repz
into
dec
pop
pushf
outsl
arpl
push
pop
hlt
mov
jmp
and
cmp
inc
jl
jp
jp
loop
out
je
xor
call
pop
mov
movsl
notl
xchg
outsb
or
pop
jns
or
out
fnstcw
out
gs
fadds
inc
sbb
jb
jg
enter
cs
fstl
jmp
loope
adc
int3
imul
nop
ds
fisubrl
lea
mov
call
push
cwtl
xor
jb
adc
jo
push
jns
mov
xor
add
iret
les
mov
dec
cmp
mov
repz
mov
push
imul
sub
shr
cmp
fisubrl
add
mov
fcomp
dec
sub
loope
roll
push
les
js
mov
leave
movsb
ja
adc
jns
pop
push
pop
pop
jg
adc
inc
dec
sarb
int
sarl
fxch
cmpsb
nop
stc
popf
loopne
fwait
cmp
lcall
pop
cmpsl
inc
mov
fmul
and
popa
aam
js
das
add
nop
outsb
rorb
inc
jo
addr16
enter
dec
andb
inc
sbb
out
xlat
inc
popa
sbb
mov
lods
into
in
xchg
dec
in
sub
adc
and
mov
movsl
push
mov
jecxz
xchg
jo
icebp
mulb
and
xor
adc
push
dec
enter
sub
and
mov
xor
bound
xchg
popw
out
cld
pop
jp
cmpb
mov
fcom
jge
or
jno
in
nop
push
pop
movsl
jle
cmp
sub
or
clc
sbb
jbe
aad
cmp
or
adc
arpl
das
mov
mov
les
xchg
cmp
sub
add
ret
arpl
mov
push
mov
movsl
xchg
jne
dec
jb
mov
movsl
xor
mov
icebp
mov
push
mov
jl
mov
push
jge
movl
dec
or
fstpt
leave
cli
cmpl
repz
rcl
idiv
imul
mov
xchg
insb
cld
or
mov
sub
rcr
leave
sub
xor
out
and
mov
out
mov
loope
daa
fistpl
aam
int3
push
dec
movsl
pop
lahf
add
and
or
repz
mov
loopne
dec
adc
pop
int3
xlat
push
xor
adc
add
mov
leave
gs
in
fstl
add
pop
xchg
fcomi
jge
aas
and
sub
shl
jg
mov
pop
xchg
jbe
gs
pop
mov
sub
jmp
rcl
xchg
pop
ret
ret
adc
mov
push
ds
arpl
mov
inc
adc
nop
sbb
cmp
mov
pop
cmc
push
mov
pop
test
xchg
mov
mov
mov
sti
hlt
fstl
icebp
mov
fisttpll
fnstenv
pop
pop
fidivl
add
mov
mov
jl
sub
loope
pop
and
daa
dec
int
mov
jl
lea
sti
lds
scas
mov
mov
cli
cs
ror
cmp
in
arpl
loope
adc
mov
mov
jno
inc
enter
loop
dec
pusha
fdivrs
stos
lcall
pop
repnz
add
xchg
dec
sti
aaa
cmp
xor
mov
movsl
das
iretw
shll
add
pushf
mov
movsl
jns
insl
loope
or
mov
fwait
xchg
and
mov
aad
mov
jae
shl
aad
pop
mov
insl
std
scas
test
lahf
scas
fcoml
add
leave
dec
loopne
and
and
cmp
pop
cmp
mov
xor
pop
imul
mov
pushf
xlat
gs
xlat
cs
aas
adcb
dec
divb
xor
mul
enter
popf
lret
icebp
in
bswap
xor
jno
movsl
clc
cli
out
loop
mov
sub
lret
inc
or
cmp
push
subl
jge
repz
aad
mov
in
sbb
out
ret
pop
push
lea
and
ja
scas
cwtl
andb
pop
cmp
popa
arpl
xlat
jecxz
out
lret
add
inc
into
xor
lret
cmp
mov
add
lds
xor
inc
dec
mov
add
outsl
jmp
in
dec
dec
hlt
test
and
arpl
push
orb
adcb
loop
test
cmp
push
add
adc
iret
sub
shll
lahf
aas
mov
sbb
insb
jno
out
cmpsl
outsb
push
in
mov
inc
movsl
in
or
pushf
inc
movsl
fists
flds
jmp
jp
mov
or
mov
push
fcmove
ljmp
fidivrl
mov
push
pop
dec
les
xchg
xchg
xor
adc
mulb
push
cli
fiadds
scas
mov
and
cs
outsb
jg
mov
push
idiv
push
sbb
adc
jne
adc
jmp
jo
jo
push
cmpsl
or
sub
cmp
mov
movsl
outsl
shrb
cmp
jp
lret
dec
mov
mov
faddp
repz
nop
mov
xor
mov
stos
in
xchg
aam
mov
xor
test
jp
or
lods
sub
push
rcrb
adc
loope
push
andb
xchg
lods
dec
add
leave
inc
add
divl
jae
add
in
add
jp
stos
lods
push
add
scas
sub
xlat
lock
pop
fcomi
movsl
or
cwtl
aam
add
mov
outsb
stos
xor
mov
rorb
hlt
rorl
sbb
notl
mov
pop
and
out
aas
test
xchg
idivl
test
rclb
cltd
lret
sbb
sub
inc
push
in
mov
pop
in
jbe
movsl
flds
dec
xor
mov
mov
fmull
lret
inc
addr16
notb
stc
and
testb
insb
cld
out
out
mov
mov
pop
or
or
pop
sub
aad
out
outsb
xor
repnz
or
jp
mov
or
imul
cwtl
lods
flds
add
mov
loope
gs
orb
mov
cmpsb
sbb
pop
je
mov
push
sub
imul
mov
inc
dec
sbb
xlat
aad
push
les
cmp
mov
cltd
push
xlat
inc
push
mov
pop
sti
and
ss
loop,pt
cmc
mov
or
out
mov
std
xchg
adc
adc
fwait
add
add
xor
xchg
dec
in
insl
jnp
repz
shl
or
orl
pop
nop
cwtl
add
or
pop
outsb
ss
sbb
cli
or
fs
sub
int
enter
cld
sub
xor
jl
inc
rcrb
negb
mov
adc
pop
hlt
notb
adc
mov
adc
jo
pop
dec
xlat
lock
or
mov
or
push
pusha
pop
jmp
mov
adc
push
jmp
ds
mov
xor
xchg
adc
stos
adc
xor
repz
data16
mov
sbb
outsl
xchg
popa
inc
jg
pop
shr
sti
insb
test
sbbl
aad
sti
cmp
dec
lods
gs
out
or
cwtl
adc
cmc
std
ja
sbb
mov
mov
and
addr16
divl
lret
lahf
test
addr16
cmp
adc
pushf
loop
mov
inc
int3
out
dec
inc
add
xor
leave
and
sbb
adc
add
or
dec
aaa
jmp
sbb
lcall
in
int
aas
pop
sub
mov
push
push
jnp
push
inc
je
xor
mov
js
fwait
iret
mov
mov
loop
hlt
cmpsb
fdivl
shrl
insb
gs
or
jmp
js
xor
mov
fistpl
sti
loope
jo
rcrl
push
test
js
shl
aaa
cmp
cld
lret
mov
push
mov
inc
mov
jg
stos
or
mov
xchg
add
jp
dec
adc
pop
fadds
lret
mov
dec
jnp
jmp
iret
add
sub
bnd
adc
shrl
lods
pop
mov
jno
push
mov
jmp
ljmp
xor
and
xchg
sub
add
sbbl
push
test
dec
and
shrb
mov
insl
jle
push
lret
dec
cwtl
lds
aas
inc
adc
sbb
xor
aas
subl
push
inc
insb
nop
cmp
and
sbb
ret
loopne
aas
mov
mov
add
dec
stos
call
pop
sub
aaa
hlt
push
ljmp
mov
mov
cmc
rcrb
outsb
dec
insl
and
out
or
fsubrl
dec
pop
fiadds
int3
mov
sub
ret
mov
xchg
fwait
aaa
dec
add
sbb
in
dec
xorl
jge
data16
mov
mov
or
aas
pop
cmpsl
cmp
fwait
lods
std
scas
push
dec
adc
lock
cltd
sbbl
jno
inc
movsb
stos
push
leave
movsl
dec
ja
fwait
cmp
jae
ss
sub
jae
jecxz
jae
pop
jle
dec
xchg
jecxz
push
jno
daa
in
fnstenv
mov
push
aas
mov
pop
mov
cmp
les
in
xor
pop
fstl
leave
daa
movsb
pop
xchg
mov
add
sbb
out
dec
mov
or
cmc
adc
out
sbb
xchg
xlat
nop
dec
adc
fisubrl
dec
inc
fisttpll
clc
test
lcall
and
push
or
lret
pop
dec
jle
cmp
gs
jge
dec
iret
lock
sub
xor
and
movsb
ss
push
push
inc
sti
cs
add
jne
mov
mov
dec
nop
sub
fildll
popa
test
stc
mov
pusha
adc
or
add
xchg
mov
aam
inc
jecxz
mov
xorb
pushf
lods
addr16
or
fld
sahf
mov
mov
inc
dec
dec
push
sub
notb
call
imul
aam
iret
cmp
mov
jge
cs
movsb
cmp
adc
jp
mov
sub
arpl
push
inc
xchg
pop
inc
push
adcl
add
jecxz
push
push
imul
shll
lds
push
sti
fildl
loopne
sub
ljmp
and
xor
push
and
fsubrl
mov
movsl
cwtl
jge
sbb
sbb
pop
fbstp
data16
out
sbb
ret
mov
sub
xor
add
jp
testb
xchg
pop
xchg
shrd
scas
mov
bound
nop
popf
js
cmp
dec
push
dec
imul
xchg
aad
fsts
sub
inc
mov
out
enter
test
mov
cmp
sysret
adc
bound
cmp
cs
into
push
pop
sbb
jbe
and
imul
adc
lock
xor
shll
jno
xchg
ja
push
cmp
jbe
sbb
push
inc
xlat
fdivs
dec
lret
aas
int3
ljmp
mov
out
lcall
mov
shrb
and
adc
test
popf
adc
idivb
out
inc
sub
jnp
cmpsl
lcall
push
arpl
cmpb
sbb
ljmp
jo
push
sub
xchg
inc
pop
mov
xor
push
jae
xchg
mov
add
jge
ja
or
ret
adc
push
sub
mov
arpl
clc
aam
dec
into
clc
push
mov
cmc
adc
jnp
data16
lods
shl
or
cmp
jle
inc
inc
jns
ss
xchg
pop
sub
and
xchg
movsb
push
rcrl
dec
jp
jne
pop
and
stos
push
mov
inc
scas
fdivl
dec
mov
cmpb
in
xchg
jno
inc
pop
mov
jecxz
sub
sub
cmpsb
xor
mov
cmp
xor
dec
mov
aam
fs
lods
inc
sbb
push
repz
out
aam
ret
mov
pop
push
dec
pusha
sub
pop
and
scas
sub
inc
pop
rcll
lds
sarb
pop
pop
mov
mov
inc
in
or
jmp
enter
mov
repnz
cmc
repz
call
mov
sbb
xchg
mov
enter
push
dec
in
loop
in
push
loope
outsb
or
loope
sbb
xlat
pop
cltd
xchg
cmp
pop
ret
adc
in
jne
inc
inc
addr16
sbb
adc
leave
mov
add
jl
into
push
pop
inc
adcl
mov
lcall
nop
xor
cli
push
scas
cld
or
sbb
clc
leave
jmp
outsl
lahf
lock
or
sarb
loope
test
add
test
test
inc
movsl
sbb
xor
push
mov
or
hlt
cmp
xchg
das
sar
push
mov
sub
cmp
outsb
mov
pop
outsl
or
add
push
and
adc
popf
gs
and
sub
das
dec
mov
in
push
inc
mov
dec
cmp
out
push
test
cli
cmp
push
adc
jecxz
mov
pop
push
scas
shlb
mov
pop
ret
inc
mov
push
and
mul
cmp
cmp
out
adc
icebp
add
push
and
mov
popa
pushf
in
arpl
push
dec
ja
and
xor
int
adc
icebp
xchg
cmc
testl
popf
cmp
cli
testb
bound
or
push
test
movsb
mov
loope
adc
adc
or
dec
pop
lea
aad
pop
mov
fsubrl
mov
add
std
lret
scas
insb
jmp
mov
es
roll
fwait
movsl
fistpl
push
mov
pop
lea
ss
xlat
cmc
pop
lahf
xor
adc
arpl
jl
leave
testb
aam
hlt
dec
push
jno
loopne
inc
sbb
jmp
sbb
xlat
gs
cltd
dec
or
add
cmp
insl
fimull
add
dec
xor
mov
pop
or
cmpsb
loop
enter
or
mov
jp
fisubl
mov
stos
fidivrs
dec
push
out
push
mov
jo
push
nop
nop
mov
xor
aaa
in
mov
push
push
inc
sub
xor
xor
fimuls
lds
int3
jne
popf
hlt
fnsave
ret
mov
stos
lods
aaa
jmp
sub
stos
mov
sahf
mov
mov
lcall
xchg
lods
pop
adc
cmp
repz
inc
lock
jnp
sbb
xor
and
push
xchg
pop
scas
mov
and
mov
sub
add
xchg
ror
call
std
cmp
test
xor
mov
shlb
and
sub
imul
stc
mov
jle
push
jge
cmovno
mov
push
jns
scas
sbb
push
bound
push
mov
jne
mov
je
or
mov
mov
jmp
sbb
lahf
xor
xchg
jbe
mov
loopne
rclb
fsubrl
js
testl
icebp
js
inc
jae
jnp
call
clc
ljmp
movsb
xchg
pop
movsl
popa
mov
popa
nop
and
cmp
dec
insl
in
mov
sti
lea
jmp
push
repz
sub
enter
movsl
or
dec
push
cmp
imul
lret
shll
shrl
lea
pop
jb
cmpsb
fisttpll
or
in
sub
jg
mov
movsb
push
stos
addr16
cmp
or
movsl
call
or
nop
addl
fstl
in
outsb
push
push
dec
inc
push
ret
test
dec
nop
and
xchg
inc
testb
aas
mov
sub
or
sub
pop
imul
jae
enter
pop
aas
push
push
stos
xchg
mov
push
test
clc
stos
mov
pop
test
popa
loop
cwtl
pop
movups
mov
std
mov
movsb
xchg
and
xlat
and
add
mov
dec
das
pusha
push
push
out
inc
movsl
and
clc
inc
dec
mov
xchg
shlb
pusha
shrb
cmp
repnz
scas
int3
cli
pop
sbb
subb
cltd
cmp
xor
imul
std
dec
lahf
xchg
and
push
xor
stos
xchg
add
cmovo
fildl
daa
sbb
ds
or
fcoml
pusha
popf
mov
pop
nop
lods
xchg
cmpsl
fdivp
push
dec
push
mov
out
lea
push
or
test
xchg
out
lea
lods
ja
xor
sub
jno
cmp
pop
mov
out
ds
and
or
jb
les
adc
lods
cmp
push
pop
fnsave
fdivrl
mov
mov
stc
push
jne
xor
add
mov
add
call
and
inc
leave
inc
mov
push
mov
mov
push
imul
repz
push
subl
ljmp
clc
xlat
fnclex
test
leave
shll
std
in
dec
inc
aas
dec
sbb
scas
imul
pop
cmp
mov
ret
mov
nop
fwait
test
lock
push
cli
nop
ss
pusha
xchg
fwait
lea
sbb
fwait
sub
icebp
arpl
test
fnsave
rolw
clc
in
enter
jp
push
inc
push
mov
jp
fldenv
dec
fldcw
jl
jbe
in
fildl
std
add
pusha
cmp
cld
push
sbb
mov
jb
popf
mov
fs
loopne
mov
in
ret
jg
mov
cld
aam
mov
dec
aad
fwait
bound
jle
pushf
sub
addr16
xchg
pop
mov
lods
dec
jbe
pop
dec
addr16
rcrb
or
mov
xorb
add
out
aas
pop
movsb
pop
into
or
mov
popa
je
add
xchg
lea
lods
push
in
or
scas
test
test
jns
and
inc
cmp
jmp
push
dec
push
into
sub
sbb
pop
sti
pushf
inc
fadds
lret
xchg
int3
sub
push
mov
gs
scas
ja
jmp
cmpsl
pop
dec
add
popa
lret
aaa
imul
mov
loopne
lret
mov
jle
outsl
and
lea
decl
shlb
in
sarl
sub
lds
cld
fnstenv
adc
leave
dec
mov
adc
jo
xchg
dec
js
dec
xchg
and
push
jno
adc
fs
aas
aad
or
jne
in
mov
loope
fisubrs
adc
call
xchg
sahf
inc
xchg
out
sbb
mov
mov
sub
cwtl
sub
sbb
jge
das
jns
stos
mov
stc
lahf
scas
sub
or
iret
and
jbe
test
pop
sub
test
lret
mov
dec
pop
dec
or
cmpb
xlat
pushf
cltd
pop
jecxz
and
sbb
add
pushf
addl
int
xchg
jmp
insb
outsb
in
xchg
js
jns
jmp
pop
aam
aad
ret
push
sar
fsubl
inc
mov
or
sbb
mov
add
test
je
inc
xchg
mov
fs
dec
push
mov
cmp
jae
dec
push
out
in
ficoml
push
inc
pop
call
in
loop
daa
xchg
out
addr16
inc
or
cmp
mov
jo
fsubr
xchg
stos
push
push
pop
push
movsb
xchg
mov
popa
fwait
cmpb
stc
imul
xchg
pop
mov
jle
cmp
repz
fcomp
sbb
add
mov
mov
jge
leave
loop
inc
push
lret
ljmp
gs
std
ljmp
adc
movsl
xor
fst
shll
and
orl
into
mov
daa
lds
out
xchg
mov
data16
push
adc
or
mov
dec
pusha
out
popa
notb
out
add
stc
pop
xchg
push
stos
adc
fs
loopne
lds
mov
lods
jle
loope
ljmp
stos
push
jmp
gs
inc
hlt
push
std
sbb
mov
adc
pop
dec
shl
lret
popa
fdivs
imulb
fnsave
negb
mov
and
cmp
add
xor
pusha
fbstp
mov
sbb
or
scas
mov
mov
sbbl
in
dec
xor
popa
loope
fs
jo
shll
cmp
neg
out
lea
cli
mov
addl
adc
xor
xchg
or
pop
xchg
xor
mov
sub
cmpsb
sub
stc
jbe
xor
in
dec
fcompl
lret
adc
les
loop
fisttpl
imul
xchg
jmp
and
call
jae
dec
sub
scas
repnz
or
xchg
lcall
outsb
and
add
push
andb
scas
fmull
shrl
stos
jmp
pop
arpl
jne
ljmp
and
sbb
mov
gs
mov
lds
andl
cmp
test
andb
xor
in
mov
xchg
stos
add
cmpsb
mov
mov
add
xor
sahf
dec
dec
sbb
xor
pushf
push
mov
jl
mov
inc
arpl
pop
in
dec
xchg
notb
mov
sub
pop
jno
jno
out
pop
xchg
inc
sbb
repnz
mov
push
fistpl
call
sub
mov
ds
ljmp
xor
repz
xchg
sub
add
cmp
adc
imul
add
popa
cmp
adc
dec
test
clc
loope
lea
inc
add
inc
aam
inc
pusha
ret
ljmp
or
decb
xchg
xlat
lock
inc
lds
jo
mov
popa
ljmp
fldl
or
cmp
cmp
fs
jo
mov
shlb
sbb
aas
cld
repz
sbb
lea
dec
enter
scas
jecxz
xchg
iret
or
rclb
test
enter
inc
sub
into
or
in
fs
mov
jg
mov
mov
nop
pop
jg
mov
inc
pop
lea
mov
push
mov
mov
mov
sub
pop
sbb
pop
jl
lcall
inc
add
xor
cld
pushf
sbb
insb
mov
jge
stos
adc
pop
adc
rorb
inc
jl
cmp
or
jno
mov
mov
and
stc
jnp
leave
pop
scas
mov
lods
xlat
jl
jecxz
and
jno
loop
inc
sbb
pop
fst
dec
dec
or
push
mov
scas
cmp
fildl
ss
sbb
dec
ret
jns
stos
mov
shrl
xchg
mov
cmp
or
sub
mov
hlt
dec
arpl
push
outsw
inc
sbb
fdiv
imul
dec
sub
and
mov
insl
je
mov
aas
gs
cmpsl
js
aad
leave
and
lods
cmp
mov
jo
sub
rolb
cmp
cs
cmp
arpl
mov
and
flds
std
pop
mov
repnz
leave
leave
pop
mov
je
fs
sub
popf
gs
mov
pop
arpl
pop
jg
pop
jne
test
push
shll
inc
cmp
lret
sbb
into
inc
push
je
incb
jp
in
loop
cmc
sbbb
sbb
je
jbe
sarb
arpl
cmc
ret
mov
and
ss
mov
cmc
mov
ret
inc
test
mov
mov
in
cmpsl
movsb
sbb
lcall
sbb
xchg
xchg
pop
add
leave
call
imul
js
mov
daa
jb
data16
mov
nop
jnp
addr16
out
sub
call
pop
sarb
testl
loope
test
stos
int
gs
nop
jmp
mov
shrl
fisubrs
push
aam
xchg
insb
push
sbb
and
nop
insl
adc
nop
pop
xor
scas
test
or
cmp
popa
xlat
pop
mov
fmulp
cmp
jae
xorl
cmp
outsb
and
cmp
inc
fdivrp
adc
cmp
and
pop
sbb
inc
outsl
popa
pop
xchg
leave
inc
xchg
sahf
cmpsb
jo
sub
mov
jge
push
sub
or
push
jl
fucomi
add
stc
test
adc
mov
or
cmc
push
push
sbb
xchg
shll
add
xor
stos
push
pop
inc
fsub
push
ja
adc
jnp
mov
push
adc
jb
push
jle
dec
jne
pop
cli
outsb
xchg
andl
and
xor
and
popa
mov
sub
div
and
sbb
dec
jmp
add
imul
adc
mov
sub
mov
test
and
push
mov
lods
push
insb
xlat
mov
fcmovb
inc
mov
xor
es
push
dec
push
push
or
xor
xchg
cmpsl
adc
pop
add
xlat
or
pop
xchg
icebp
cmp
adc
add
lds
mov
outsl
shll
sub
fidivl
or
mulb
push
pop
pop
rorb
fdivr
lods
pop
fistl
jne
mov
jo
outsb
push
addl
inc
mov
mov
fldcw
dec
and
mov
cmc
or
in
jg
sub
pop
shl
xor
lods
in
aad
into
maskmovq
testl
test
insl
sbb
xor
cmp
addr16
arpl
mov
andb
sbb
mov
and
mov
ss
push
popa
aad
add
sub
push
jge
stos
add
push
jbe
dec
jb
int
adc
cwtl
sbb
sti
mov
inc
and
lahf
pop
sub
pop
sbbl
ret
pusha
adc
jae
lock
cmp
mov
push
mov
jne
dec
mov
or
js
add
lods
push
or
mov
mov
enter
jne
in
stos
lahf
pop
jo
cmc
jne
cmp
inc
dec
and
or
pop
xchg
xor
aas
mov
pop
jle
xchg
testl
aaa
maskmovq
idivl
pop
stos
rorb
mov
mov
sbb
out
add
xchg
mov
push
xchg
stc
sub
jg
rcrl
lret
daa
add
xchg
sub
popa
xchg
dec
inc
addl
push
stos
inc
mov
mov
ds
mov
jbe
pop
mov
xchg
add
and
inc
xor
lock
fwait
sbb
lds
cmpsl
sahf
mov
pusha
outsb
or
lods
mov
sbb
adc
or
mov
adc
sub
nop
push
sbb
inc
aam
imul
fidivl
lahf
int
add
push
out
sti
sbb
mov
or
mov
push
and
lcall
mov
loope
rolb
lds
pop
sarb
popf
inc
scas
mov
repz
cwtl
es
jo
fyl2xp1
pop
negl
pop
mov
fsub
aaa
sbb
jmp
ret
add
push
lods
mov
inc
stos
subl
iret
lods
mov
sahf
enter
scas
imul
orl
les
adc
lcall
or
cs
fsubrl
jg
adc
dec
dec
dec
rclb
fcompl
jno
imul
call
in
aad
dec
test
cmpb
inc
xlat
xlat
fdivs
push
int3
or
dec
cmp
jo
mov
fsubl
adc
xchg
cs
aaa
stos
pop
or
sbb
adc
xor
jg
hlt
and
jno
mov
inc
inc
cmp
adc
add
inc
icebp
andb
mov
fnstenv
cmp
or
pop
xchg
dec
icebp
jno
pop
pop
iret
xchg
pop
ss
and
test
out
add
cli
out
in
inc
adc
pop
aam
js
pop
pop
addr16
pop
mov
int
push
add
push
addl
aam
popa
mov
bnd
pushf
push
mov
sub
jl
push
jle
xadd
inc
test
pop
jnp
cmp
roll
scas
sbb
or
movsb
adc
xor
jecxz
call
jl
js
fimull
sbb
cmc
xor
loop
inc
xor
pop
mov
mov
int
jne
jp
cmc
push
jno
sub
lods
pop
aaa
dec
int
mov
jmp
imul
call
pop
adc
or
pop
pop
sbb
dec
xorb
push
or
aaa
push
dec
dec
inc
out
scas
scas
loope
push
fnclex
and
mov
and
sub
ss
sbb
inc
sbb
add
orl
mov
mov
push
pop
inc
outsb
in
push
int3
in
and
popa
fsubrs
bound
add
mov
mov
mov
inc
fisubrs
mov
daa
pop
mov
mov
scas
cmp
fwait
lahf
push
mov
mov
mov
sbb
pop
repz
inc
fcoml
cltd
sbbw
inc
cmpsl
subl
imul
xchg
pop
pusha
jo
or
into
xor
fsubrl
jg
mov
imul
stc
movsl
orl
int
test
xor
or
adc
or
cmp
pop
mov
pop
mov
ret
and
fldl
daa
popf
out
cmp
movsl
push
je
sti
xchg
fs
outsl
mov
hlt
in
xor
imul
fstl
push
mov
push
mov
push
mov
sahf
cld
mov
lahf
jp
scas
dec
lods
mov
arpl
ljmp
ss
clc
xchg
dec
jae
mov
inc
out
sub
les
jne
insl
pop
clc
jbe
jbe
or
fisttpll
dec
push
repz
sub
or
nop
cli
mov
fwait
push
or
subl
pusha
sti
out
mov
jbe
ja
subl
shrb
jecxz
insl
aad
out
jnp
and
inc
ss
je
pop
dec
pop
and
lods
sub
jg
sahf
aas
imul
mov
push
cmc
popl
push
mov
dec
in
jmp
push
mov
mov
sub
shlb
aam
and
insb
mov
pop
sbb
ljmp
sub
xchg
xor
inc
pushf
xchg
pop
cmp
push
mov
xchg
xchg
cmpsb
mov
pop
mov
jl
pop
xor
pop
pmaxsw
pop
bound
test
xor
mov
push
rcll
int3
movsl
shll
addb
mov
lea
pop
into
push
mov
cmp
fcmovnb
in
push
add
jo
sbb
out
pushf
pushf
aam
fmul
jecxz
push
inc
and
icebp
mov
jb
jp
jg
stos
repz
and
fdivr
jno
xchg
gs
dec
cmp
out
ror
notb
cmp
xchg
fsts
aam
pop
lods
sbb
push
cwtl
push
and
insl
test
pop
pushf
nop
jne
cmp
jle
loope
cmp
or
scas
test
movsb
adcb
in
add
dec
sbb
scas
ror
mov
insl
popa
fistps
or
outsb
lds
xchg
inc
sbb
stos
stos
xchg
lahf
in
mov
push
mov
cltd
cmp
and
inc
mov
scas
aaa
pusha
cmpsl
fld
insb
push
stos
ret
std
push
inc
loope
or
sbb
pop
adc
mov
push
bnd
icebp
cmp
add
sti
jge
cmp
icebp
pushf
insl
sti
adc
aam
mov
cmpsb
pop
sbb
or
add
xor
lods
xor
jmp
icebp
shl
xchg
lods
mov
out
mov
fistpll
lods
push
add
or
mov
sub
fisttpl
mov
push
cmpsb
xor
in
lcall
adc
test
imul
mov
lock
jge
mov
xchg
mov
lock
dec
sub
sti
inc
pushf
sub
cmp
shlb
inc
pop
sub
pop
push
push
invd
mov
xchg
mov
notl
testb
pop
inc
notb
mov
sbb
mov
fs
jne
mov
jle
testl
inc
push
enter
push
nop
jne
dec
push
mov
mov
mov
jl
cmc
ss
imulb
fbstp
aas
sbb
cmpsl
sbb
cltd
xor
rorl
adc
aam
aas
pushf
xor
mov
shrl
ret
loop
xchg
fadds
daa
sbb
inc
sub
mov
lods
test
out
mov
add
mov
icebp
add
fst
imul
es
push
xchg
enter
xor
jns
cltd
in
dec
or
xchg
lock
pop
enter
jae
mov
pop
pushf
jae
loop
add
inc
or
lea
aaa
or
comiss
inc
xor
fdivs
loope
and
push
sbb
jmp
pop
lock
or
and
push
sbb
mov
sub
cmpsb
sahf
xchg
adc
daa
add
jecxz
jge
pop
shll
scas
imul
aam
adc
scas
fsubrs
dec
jno
sub
subb
rcll
xor
jo
push
pop
fcoms
sub
cmpsl
cmpsb
dec
mov
lock
and
lock
pushf
xchg
mov
cmp
bound
call
addl
ret
adc
loope
dec
test
ljmp
pusha
xor
stc
aas
icebp
arpl
sub
jp
adc
stos
cltd
cmpsb
pop
xor
xorl
mov
int3
int3
cmp
jp
sbbl
pop
xchg
sti
xchg
push
push
push
subb
and
hlt
sub
test
mov
std
pop
les
push
sub
popf
in
aaa
popf
push
dec
mov
pop
push
add
pop
mov
jmp
imulb
pop
es
pop
mov
mov
cmp
out
ret
mov
xchg
loopne
jne
in
cmp
xor
mov
addr16
push
xchg
jl
lcall
cmc
pop
clc
pop
idivb
mov
daa
aas
test
rol
pop
dec
xlat
dec
push
out
push
lods
fcomp
movd
fsubp
pop
jnp
gs
xchg
xor
shr
into
sub
push
jnp
cmc
xchg
loope
in
bound
add
and
lds
sub
sbb
ds
adc
pop
ret
lcall
xor
stc
ds
and
fldt
cmp
push
aaa
xor
imul
call
xor
bound
js
out
insl
push
xchg
decl
xor
ret
xchg
repnz
add
sbb
xchg
mov
into
mov
lods
sub
sbb
xor
push
cs
push
mov
cmc
movsb
sub
lea
movsb
add
sbb
xchg
push
rolb
sbb
lock
loope
insl
adc
add
fstpl
cmp
jp
push
add
sbb
fsubrl
mov
aaa
test
lds
push
mov
sub
lock
or
arpl
mov
jbe
das
std
sar
lods
fistpll
test
xchg
pop
push
xchg
add
jecxz
add
mov
lcall
or
jecxz
out
jo
lds
adc
lea
push
jne
xor
and
shll
std
cs
movb
sub
ja
jne
fwait
jno
cmpl
lret
loope
mov
cmp
pop
stos
test
stos
cmp
addb
jo
ljmp
jnp
push
add
jp
ret
decb
jnp
push
ss
out
imul
arpl
test
shl
fcomp
sub
lea
push
and
movsl
in
dec
mov
mov
xchg
repz
stc
xor
sub
and
mov
adc
inc
mov
or
cld
in
xchg
push
sub
shrl
cmp
in
jbe
ret
inc
gs
jmp
dec
jecxz
aam
out
add
mov
xchg
fidivl
adc
xor
jecxz
scas
jne
add
outsb
rcl
outsb
push
xor
sbb
add
xor
sbb
inc
test
pusha
mov
mov
or
xchg
movsl
xor
sbb
or
xchg
aas
testl
inc
gs
inc
lods
and
int3
stos
shrb
cld
pop
mov
dec
mov
loopne
sub
repz
dec
fisttps
ja
mov
into
add
add
pop
mov
pop
lcall
pop
test
push
in
mov
jmp
and
mov
sahf
ret
cmp
pop
imul
mov
pop
daa
jo
mov
push
push
popf
repz
and
pop
das
xchg
inc
fdivs
or
cmpsl
cmp
lea
int
out
push
fnstcw
or
or
cld
dec
add
mov
mov
das
mov
loop
dec
pop
cmpsb
arpl
dec
hlt
sbb
fcoms
xor
pop
sbb
test
cmp
test
sub
jne
jecxz
xor
pushf
fldt
mov
loope
add
or
mov
enter
int3
mov
ret
cmp
inc
cltd
ja
mov
incl
test
jae
mov
pop
cmp
inc
cmpsl
cli
jns
rcr
jge
cmc
es
mov
in
or
and
mov
into
push
lds
imul
gs
loopne
rcll
andb
add
enter
xrelease
mov
out
and
jnp
mov
pushf
test
jge
cmp
push
test
mov
sbb
sbb
repnz
fstps
cmp
imul
rcrl
jnp
sti
jl
adc
and
sbb
pop
lods
sbb
out
jecxz
add
cmp
movsb
xchg
js
cmp
lahf
sub
add
je
ret
xor
in
push
cmp
loopne
mov
movsl
cmpsb
xor
sarb
add
jbe
mov
pop
pop
inc
fdiv
popf
bound
xchg
pop
and
mov
pusha
mov
lods
std
in
and
xchg
or
sub
xor
shll
pop
cli
pop
xchg
dec
xor
push
xor
cltd
mov
mov
sbb
jmp
push
es
dec
data16
mov
call
push
inc
jno
mov
pop
jo
add
popa
mov
mov
xlat
popf
sbb
adc
mov
ret
scas
les
pop
and
xor
xor
cmp
push
jo
jbe
in
andl
fsubrl
jl
add
leave
push
add
cli
adc
rorb
add
mov
test
daa
sti
lahf
lds
aas
sbb
out
xor
push
pop
jno
cmp
xor
out
xchg
mov
xchg
push
inc
out
lods
rclb
pop
or
shlb
out
imul
cmpsb
fisubl
enter
sub
xchg
fsts
popf
push
shrl
int3
sbb
inc
mov
rolb
push
or
iret
ds
or
daa
jg
enter
pop
mov
push
in
jp
loope
arpl
cld
xor
xchg
roll
rorl
shrl
inc
das
xor
stos
pop
push
inc
dec
xchg
cmp
and
lds
aaa
stc
push
mov
xchg
test
jb
in
dec
hlt
sbb
sub
sbb
icebp
mov
pop
lock
pop
mov
mov
add
add
iret
pusha
lret
push
arpl
jno
out
or
fnsave
out
adc
push
es
ret
imul
pop
in
jns
jp
push
negb
or
imul
jp
dec
leave
mov
inc
adc
mov
stos
cwtl
pop
lock
or
lret
xchg
ss
fldenv
add
in
lea
data16
pushf
out
xor
pop
xchg
cmpsb
push
dec
outsb
notl
jnp
clc
pop
sub
inc
inc
mov
push
idivl
xor
aas
xchg
cld
mov
xor
mov
aam
fbstp
adcl
rcrl
push
xor
dec
test
pop
xchg
cmc
insl
aaa
cmpsb
inc
mov
mov
xchg
or
lret
popa
cmc
pop
mov
bound
inc
adc
push
icebp
jnp
pop
cmpsl
pop
pop
jg
popf
in
xchg
jae
fsubl
dec
scas
ret
arpl
xor
mov
jbe
fcoml
sub
adc
fwait
std
loopne
leave
sub
dec
sbb
sub
pop
pop
mov
inc
jbe
mov
enter
inc
cmpsl
pushf
cmp
mov
insb
inc
test
aam
xchg
mov
mov
movsb
xor
outsl
ljmp
aaa
pop
mov
and
loop
movsl
push
xor
imul
mov
push
fists
je
sub
call
stos
xchg
dec
jg
sti
xchg
fwait
stc
mov
dec
mov
call
and
cmpl
pop
and
ss
fbstp
xor
subl
mov
pop
cmp
ja
push
sub
pop
aas
or
push
sbb
aad
in
pop
call
inc
mov
sub
mov
mov
mov
push
push
iret
aas
pop
frstor
mov
cld
cmp
movsl
and
bound
test
ss
shr
stos
int
fcomps
addl
xor
int
mov
fimull
xor
xchg
push
fistps
inc
or
aas
in
adc
ds
scas
rorb
je
lea
adc
or
mov
jnp
pop
mov
xlat
sbb
sub
jnp
adc
mov
loop
and
adc
insb
sbbl
cwtl
sub
or
in
psubsw
xlat
sbb
movsl
cmp
lea
insl
out
inc
mov
into
adc
cmp
out
adc
dec
push
std
cld
std
rolb
xlat
lods
cmp
inc
paddw
stos
fildll
inc
inc
xor
add
or
pop
mov
loop
xchg
xchg
fldenv
daa
notl
xchg
push
pop
je
inc
and
mov
mov
lds
and
lcall
test
mov
pop
add
and
adc
mov
mov
cmp
roll
or
mov
lods
in
mov
nop
pop
lret
scas
movsb
push
lods
sahf
std
test
jp
mov
cmpl
xchg
sbb
leave
or
or
xor
js
xchg
js
jmp
xor
dec
pusha
or
and
mov
gs
lcall
aam
xor
hlt
nop
lret
negl
hlt
outsb
xchg
test
mov
mov
inc
test
fdivr
jmp
or
adc
cmc
sbb
xor
xor
das
and
adc
jae
aaa
adc
jge
stc
es
popa
cli
jecxz
xor
add
or
inc
push
mov
sub
or
and
dec
mov
dec
jmp
imul
pushf
pop
xor
inc
pusha
lds
popf
neg
push
sbb
je
aad
fildl
ret
lock
xchg
sarl
mov
dec
imul
daa
cld
and
call
pop
jo
jge
cmpl
and
inc
and
mov
js
mov
gs
insb
mov
movsl
mov
lods
icebp
loope
jp
in
pop
dec
mov
dec
xchg
pusha
ljmp
stos
repz
jge
les
lret
inc
shll
push
cmp
cmpsl
mov
xor
addb
jo
imul
sbb
pop
loopne
inc
sub
shr
dec
cltd
and
movsl
add
iret
fsubl
data16
aam
pushf
addr16
ret
push
test
popa
enter
jg
jo
imul
js
nop
dec
lret
mov
push
push
and
xchg
test
sarb
daa
cmp
or
xor
push
lock
xchg
sahf
jne
inc
pop
inc
lahf
leave
xchg
xchg
je
cmpsb
add
jp
fcompl
jge
stc
lds
xchg
adc
aam
outsb
repz
adc
xor
pop
push
mov
sbb
sahf
test
pop
jecxz
mov
adc
int
dec
mov
adc
daa
ljmp
dec
pop
jecxz
pop
xor
mov
stos
add
mov
push
sbb
xor
test
lds
out
xorb
sti
xchg
xor
and
or
loop
inc
mov
mov
repnz
or
mov
or
call
or
or
call
fnstsw
clc
ds
jns
pop
loope
mov
sbb
mov
arpl
sbbb
aas
mov
rcrl
mov
jp
and
jne
inc
inc
fcoml
pushf
leave
gs
sbb
hlt
pop
sub
test
jnp
xchg
mov
daa
mov
push
test
in
mov
adc
xchg
andl
test
push
inc
mov
jns
cld
adc
cmc
clc
xchg
xlat
es
mov
pop
cmpl
cli
lret
enter
jp
pop
add
push
jge
pushf
leave
xchg
dec
jle
test
cmp
ss
lds
inc
push
insl
ret
mov
sub
adc
xor
andb
cli
sub
pop
shlb
push
xchg
ret
lods
lods
adc
das
add
mov
addr16
sub
pop
daa
mov
outsl
mov
xorl
xor
insl
mov
mov
stos
push
pop
inc
pop
aas
insl
mov
and
add
insb
add
and
mov
cltd
or
shlb
aad
xchg
insb
dec
orb
mov
jl
sar
sbb
sahf
lods
scas
or
inc
dec
mov
rorb
mov
lahf
data16
mov
sbb
adc
adc
or
push
mov
xor
jae
fmul
xchg
adc
sbb
push
lock
out
jo
mov
insb
lea
push
mov
cwtl
div
lcall
and
mov
hlt
in
mov
cmc
and
lock
loopne
sahf
cmp
inc
pop
imul
nop
xorb
aas
mov
dec
ds
jecxz
mov
fbstp
js
inc
xor
jg
subb
leave
mov
jl
aaa
jns
cwtl
lods
xchg
repz
sbb
testl
push
sbb
pop
test
fbld
inc
fildl
insb
xor
add
adc
inc
leave
scas
mov
js
xor
jo
mov
xchg
gs
lds
cmpb
add
aam
push
pop
pop
clc
xor
out
fdiv
test
lock
adc
mov
pop
inc
ficoml
sbb
push
stos
push
cmc
stos
xlat
fdivs
mov
xor
dec
pop
outsl
jne
mov
dec
cltd
xchg
pop
mov
inc
addr16
aas
rcll
jb
addr16
in
adc
mov
lea
add
pushw
in
mov
test
mov
mov
pop
mov
inc
pop
xlat
push
jp
dec
xchg
aas
xchg
fildll
fistpll
adc
inc
icebp
scas
stos
sub
pop
xor
pop
mov
std
js
idivb
xor
push
adc
xor
lcall
and
out
popf
das
jns
jg
lret
mov
add
pcmpgtb
jge
adc
scas
mov
xchg
pop
mov
cltd
mov
mov
inc
push
xor
test
jg
push
xlat
lock
mov
lret
movsl
stc
clc
mov
xchg
flds
popa
mov
rcrb
je
call
mov
mov
push
lcall
shrl
jb
fs
cmpsb
shlb
xlat
in
movsl
outsb
pop
mov
push
sbb
je
mov
test
jg
jnp
cmp
jecxz
lds
mov
and
sbb
push
push
push
mov
cmc
mov
lds
cli
scas
mov
xor
fimuls
aas
popa
mov
mov
mov
in
cmc
mov
sbb
out
aad
mov
aas
dec
inc
mov
pushf
addr16
xchg
add
push
mov
push
mov
and
fiaddl
pop
mov
repnz
popa
cmp
push
in
mov
in
inc
inc
in
arpl
sub
mov
movsb
lahf
add
add
imul
or
mov
sub
ds
xlat
sbb
fs
int3
ds
in
jno
insl
enter
mov
jb
cmc
faddl
push
cmpsb
fwait
cmpsb
ror
lock
sbb
test
inc
stos
cmpsl
dec
ja
jae
fiaddl
and
movsl
loop
mov
je
xchg
xor
rcr
pop
cwtl
inc
pop
add
push
sub
xor
sub
lea
test
test
repnz
sbb
popa
sti
dec
push
cltd
les
stos
sub
jecxz
das
cltd
mov
popa
lds
les
add
scas
icebp
mov
adc
addr16
or
or
lret
sub
test
adc
xchg
sub
mov
mov
xchg
stos
and
jmp
out
push
sub
out
xor
arpl
aaa
adc
xchg
lret
push
cmp
enter
nop
add
mov
sub
dec
xchg
xor
arpl
mov
and
add
sti
mov
leave
repnz
sub
movl
mov
gs
sahf
pop
sbb
push
or
jp
into
pop
sbb
cwtl
incl
in
scas
mov
inc
pop
imul
mov
aas
jbe
movsl
mov
push
bound
lahf
setg
xchg
scas
hlt
movsl
call
loopne
dec
mov
fistps
sub
test
jp
lret
inc
arpl
adc
mov
pop
test
scas
shrb
pop
mov
sahf
fmuls
loopne
orl
int
stc
mov
pop
jbe
lds
or
mov
iret
int3
or
mov
pop
mov
push
push
iret
cmp
sub
shlb
cmpsl
push
cmpsb
sub
out
notl
pop
call
jb
pop
notl
xchg
cmp
pop
addr16
call
push
in
xchg
push
lock
testl
inc
cmc
nop
mov
mov
mov
addr16
pop
in
rcrl
push
xchg
xor
adc
jl
repnz
ficompl
xor
fimull
int
mov
lock
sbb
xchg
rol
xor
xor
aad
adc
sbb
jecxz
add
sbb
jp
sbb
add
daa
dec
cltd
loopne
sub
pop
mov
mov
dec
add
ds
jmp
pop
and
clc
test
das
hlt
push
adc
xchg
jnp
mov
in
scas
mov
mov
movsb
in
or
sti
push
mov
in
inc
out
xor
xlat
loope
les
sbb
lcall
xor
pop
mov
or
mov
mov
inc
xor
push
cmp
popl
aam
dec
xchg
lea
cld
sub
shll
adc
or
movsl
mov
jo
or
pop
lock
xchg
scas
or
inc
sbb
xchg
or
nop
sbbl
std
adc
repnz
insl
sub
mov
int3
jecxz
repnz
jae
insb
and
xor
pop
xchg
xchg
xor
jge
adc
in
mov
sub
lahf
cmp
push
xor
shrl
loopne
xchg
popf
inc
outsl
xor
mov
jne
adc
icebp
and
add
in
stc
dec
xchg
aaa
mov
jb
nopl
lret
and
out
inc
mov
adc
inc
and
pop
dec
xchg
cmpsl
mov
add
jg
cmp
icebp
in
clc
push
ss
cs
pop
sub
into
and
test
jle
rclb
sbb
iret
xor
pop
push
movsl
test
adc
inc
jg
dec
sub
inc
test
test
lret
xor
sahf
or
js
pop
ficoml
fcmovnb
test
fildl
mov
into
jle
push
mov
jo
js
jne
or
xchg
push
clc
inc
jo
cmp
pop
pop
pop
jnp
scas
mov
in
das
cmp
test
add
mov
and
and
dec
fmuls
inc
mov
xchg
cli
jg
mov
fldt
rorl
lea
mov
pop
mov
lcall
jp
xchg
add
xor
pop
dec
or
mov
pop
jecxz
cmp
shll
jmp
nop
lret
es
data16
lods
push
add
test
mov
aam
inc
add
add
notb
xchg
imulb
call
leave
push
cmp
loope
sbb
fnstcw
sti
sbb
or
xchg
mov
push
pop
popf
imul
mov
push
mov
dec
lds
mov
jg
lods
cmp
mov
inc
push
adc
mov
sbb
jbe
stos
or
push
sbb
repnz
fnstenv
cmc
add
push
pop
adc
shlb
xlat
fistpl
lret
lcall
sti
mov
jbe
fwait
jmp
xchg
inc
jae
mov
shrb
mov
xchg
pop
add
in
jno
jns,pn
lods
jnp
mov
inc
call
mov
adc
inc
hlt
xor
movsb
mov
or
adc
bound
arpl
fcmovbe
nop
cli
cmpsb
mov
mov
cltd
mov
mov
test
xchg
test
cs
jecxz
mov
repnz
pop
mov
std
add
jmp
or
jnp
mov
xchg
pop
icebp
pop
lcall
scas
jne
jne
push
les
inc
xchg
test
inc
and
mov
pusha
iret
outsl
mov
ret
pop
push
or
inc
mov
dec
lcall
dec
sbb
sbb
ss
and
mov
push
in
pop
les
pushf
jno
jle
mov
and
ret
mov
mov
pop
mov
adc
push
fld1
js
loop
aaa
mov
jb
stc
bnd
ss
ss
jnp
xchg
inc
dec
push
and
sbb
aaa
pop
jo
js
loopne
mov
imul
mov
cli
pop
xor
arpl
adc
enter
cmpsb
xor
dec
lahf
fisubs
inc
mov
add
fwait
push
jecxz
cmp
test
imul
jnp
jg
jbe
dec
jg
mov
data16
cmpl
lds
mov
jp
outsl
dec
push
inc
sub
jbe
cmp
dec
dec
scas
imul
cmp
adc
or
sti
ret
scas
sarl
testl
movsl
dec
xor
pop
shl
out
or
les
mov
push
fmuls
sbb
push
xor
int3
bound
test
push
pop
imul
jp
mov
adc
shl
hlt
xor
mov
gs
scas
rclb
jg
sbb
push
add
jge
xchg
out
std
jge
pop
mov
insb
dec
fbstp
imul
lea
pop
fnsetpm(287
lods
cmpsl
loopne
mov
sbb
or
int3
adc
fsts
arpl
inc
rcrb
push
jmp
fisubrs
ds
aam
mov
cmp
imul
mov
lret
js
call
ret
sbb
cs
popf
lods
jne
shl
sub
xchg
mov
testl
dec
scas
push
xor
jnp
push
jne
aaa
push
scas
sub
outsl
arpl
jb
cmp
scas
mov
cwtl
out
test
ds
rcrb
pop
ds
add
arpl
sub
push
or
cld
test
fildll
and
xor
popa
pop
insb
aaa
pop
flds
mov
inc
sbb
push
cmp
pop
cmp
cltd
xchg
std
pop
add
jle
add
shr
and
ljmp
mov
out
sub
cwtl
repz
xchg
or
xchg
push
in
out
ror
in
mov
jno
ss
pusha
xchg
stos
int
push
cmp
or
or
in
add
bound
xchg
in
lods
cmp
movsb
outsl
pushf
out
or
loopne
jmp
popf
inc
xchg
ja
ret
add
dec
ss
shrb
mov
js
push
mov
repz
aas
stc
cmpsl
mov
jmp
jnp
xor
outsl
mov
push
xchg
outsl
cmp
loop
dec
inc
jp
outsl
push
imull
stos
std
push
lock
xchg
das
nop
jbe
out
cs
movsl
inc
xchg
movsl
and
xchg
jmp
cmp
outsl
test
add
cmp
out
xor
xchg
pop
imul
push
inc
cmc
rcrb
xlat
pop
jne
mov
add
js
mov
js
cmp
push
mov
cld
and
les
mov
stc
mov
dec
out
test
test
call
or
xchg
fildl
fucomp
pop
movsb
std
adcl
xor
sbb
xorl
mov
lock
mov
and
xchg
mov
fisubs
inc
cs
xor
clc
test
in
and
mov
scas
inc
fldenv
sahf
push
cld
cmp
test
js
movhlps
sub
xchg
lret
fmuls
dec
subl
or
idivl
push
sub
mov
adc
iret
mov
out
xchg
mov
xchg
insb
mov
mov
mov
bound
push
std
lock
clc
subl
ftst
xorb
and
push
push
jmp
mov
or
push
add
push
sub
pop
insl
les
mov
stos
and
lahf
bnd
hlt
or
push
add
add
and
popa
and
outsl
jbe
je
call
or
mov
repnz
mov
or
jge
ja
jb
test
fnsave
in
and
in
push
cmpl
sti
mov
pop
int
push
inc
in
enter
fwait
aad
mov
mov
xchg
cwtl
orl
movsl
int
or
lea
rorl
add
pop
sub
push
out
push
mov
sub
dec
push
xor
das
movsl
pop
les
mov
add
pop
popf
cmp
nop
mov
push
pop
loop
data16
int
lods
lods
lcall
rcr
aas
out
int
xor
pop
or
push
sub
mov
cmpsl
stos
int
cwtl
cmpsb
scas
fistl
loopne
addb
jne
test
pop
adc
in
jg
push
jmp
mov
in
pushf
arpl
push
outsb
pop
or
fs
lcall
pop
mov
fwait
jno
mov
rolb
sbb
pusha
jnp,pt
pop
js
pushf
imul
or
int3
icebp
pop
ja
loope
fwait
sbb
loopne
jmp
dec
pop
cmp
cmp
notl
ret
push
fadds
lcall
shrb
repnz
add
cmp
push
inc
std
dec
jge
fnsave
int
mov
in
push
cmpsl
stos
xchg
in
repnz
push
push
daa
xchg
mov
cmp
adc
pop
cld
jae
out
mov
jne
mov
outsl
subb
cmpsb
out
push
test
sub
push
mov
sub
daa
sbb
fiaddl
inc
sub
mov
bound
dec
rolb
sub
ret
xchg
xchg
xchg
fbstp
mov
push
pop
repz
mov
cltd
rcl
jp
jnp
ret
inc
or
es
cmpsb
mov
pop
add
in
nop
jo
sub
xchg
pusha
into
dec
fnstsw
dec
cmp
les
std
cld
push
sahf
in
out
nop
or
dec
imul
sbb
lret
fs
repnz
movsb
shrl
mov
call
jmp
ss
out
imul
inc
js
dec
add
adc
add
loopne
scas
loopne
push
popa
dec
dec
pop
rorl
xchg
into
jae
jge
jl
push
int
mov
push
cli
insb
orl
iret
outsb
scas
xchg
xchg
jmp
gs
add
mov
mov
pop
push
lcall
mov
xchg
into
ret
ja
xchg
fbld
mov
mov
ss
inc
negb
stos
push
jp
loop
or
mov
lea
fdivs
lret
rclb
rcll
cld
sahf
mov
pusha
mov
pop
mov
cli
into
push
stc
cmpsb
mov
in
aas
ljmp
std
sub
imul
std
lret
cs
push
pop
mov
push
in
mov
data16
and
pop
ljmp
sub
dec
adc
mov
pop
jg
arpl
or
jg
xchg
adc
fsubrl
jp
imul
pop
sbb
xlat
dec
fstpl
dec
cmp
movl
sahf
lret
jl
mov
pop
fcompl
mov
in
rcr
sar
jne
push
fisubrl
lds
in
lret
cltd
add
pop
orb
dec
scas
sub
mov
add
fcmovne
push
dec
push
stc
testl
xchg
icebp
push
jae
scas
in
lock
int
out
or
out
mov
mov
cli
out
mov
pop
sbb
jbe
sahf
cmp
jmp
outsl
das
sbb
inc
xchg
dec
pushf
outsl
or
jge
adc
inc
inc
xor
inc
jmp
cs
mov
mov
fsubl
mov
lcall
outsl
mov
addr16
das
cli
push
add
adc
and
das
mov
mov
in
ror
add
xor
mov
sbb
shlb
inc
scas
bound
cmp
add
test
jmp
xor
xor
xor
out
sbb
daa
sub
lods
fst
pop
dec
in
xor
loope
add
pop
jns
in
jmp
movb
push
imul
in
mov
stc
movsb
sbb
out
in
gs
pop
sbb
inc
aas
shlb
stos
in
add
mov
out
pop
scas
inc
or
adc
push
mov
sub
adc
push
sbb
lods
les
sub
filds
idiv
push
popl
lret
jecxz
sbb
lock
pop
cmc
cmp
dec
adc
sbb
and
mov
int
clc
in
aas
mov
cmp
dec
mov
out
int3
stc
aam
push
icebp
xor
cmp
dec
push
fs
repnz
dec
scas
pushf
incb
fistl
or
jp
xchg
adc
stos
movsb
je
xor
jl
imul
ffree
pusha
dec
xor
in
mov
nop
jo
sbb
dec
scas
repnz
es
push
lods
aad
and
in
or
mov
fbstp
jmp
pop
ds
pop
push
ficoml
iret
and
mov
mov
repz
push
cmpsb
hlt
std
subl
jecxz
pop
out
xchg
mov
xchg
pop
cwtl
mov
or
xor
pop
and
lahf
pop
sub
mov
jno
inc
jae
adc
test
sbbl
aas
xchg
sbb
push
mov
out
test
fsubrs
jnp
jb
repz
fistl
push
popa
lds
dec
jl
lods
adc
pop
mov
sbb
repnz
fisttps
jo
push
outsb
lret
shll
popa
add
shll
sbb
lods
int3
push
sub
sub
dec
or
and
dec
mov
lcall
ret
inc
popa
mov
mov
cmc
push
push
out
push
mov
int
mull
mov
cmc
and
ret
adc
push
mov
dec
mov
rolb
dec
xchg
stos
pop
jae
or
imul
or
popa
pop
mov
testb
pop
dec
out
pusha
dec
test
xchg
push
jecxz
xor
xlat
ficompl
daa
xchg
std
xchg
call
sarl
mov
lods
push
fdivl
adc
ljmp
out
inc
lea
xchg
lea
or
repz
pop
stos
adc
xor
rclb
dec
addr16
daa
cmp
inc
mov
lods
dec
dec
repnz
mov
and
mov
and
sarb
jp
mov
pop
loopne
outsb
mov
repz
out
popf
int
ds
pop
sbb
popa
popf
movsl
jmp
pop
iret
enter
jne
hlt
aas
adc
in
enter
ja
sub
mov
in
pop
mov
jns
dec
mov
xor
fdivrl
jae
mov
out
inc
clc
sub
pop
or
ds
mov
ret
outsl
xor
mov
cmc
aaa
inc
int
mov
pop
sub
addr16
fnstsw
int3
data16
jl
xchg
in
mov
dec
scas
push
pop
scas
out
sub
sbb
jmp
ret
push
fimull
cli
mov
jmp
imul
mov
in
fisubs
iret
push
stc
push
pop
cs
mov
inc
xchg
leave
mov
mov
ficoms
mov
cmp
add
push
push
adc
inc
mov
mov
rcl
cli
std
imul
arpl
ss
dec
fwait
orl
imul
mov
int3
fwait
mov
sar
cltd
icebp
adc
pop
cmp
jg
sub
sub
mov
mov
lods
xchg
aam
sub
repnz
add
push
iret
adc
popf
stc
pushf
lret
mov
mov
repz
adc
stos
sub
inc
sahf
mov
add
in
xorl
xchg
movsl
add
sbb
and
mov
mov
xorb
or
test
call
sbb
in
mov
add
ds
lret
cwtl
sbbb
ss
aaa
xor
inc
and
or
pop
add
mov
pop
ss
hlt
test
inc
jbe
lods
xchg
fcoml
sbb
mov
push
cmp
push
stos
cmp
lret
dec
xchg
jl
ret
jecxz
rcll
frstor
sub
sbb
xchg
or
stos
int
es
dec
enter
jmp
lods
movsl
inc
data16
cmc
xor
mov
add
iret
mov
jbe
xor
repz
call
or
xchg
fs
lret
pop
inc
pusha
loop
sbb
jmp
cmp
es
pop
iret
dec
dec
jge
push
inc
or
push
adc
lret
mov
or
or
cmp
and
jno
cmpsb
mov
int3
repz
hlt
fbstp
fldl
sbb
mov
or
call
push
inc
rcr
dec
pusha
sbb
lcall
xorl
pop
xor
cli
dec
loope
iret
cltd
jecxz
icebp
dec
mov
cmp
adc
mov
test
rcll
mov
popf
ss
cs
lcall
xchg
push
js
and
inc
sbb
pop
aas
or
push
pop
jo
mov
fidivs
pop
pop
sub
jne
adc
or
adc
xchg
enter
cmp
insl
inc
push
stos
jg
adc
hlt
sub
mov
or
xor
sbb
mov
fimuls
jp
dec
inc
and
out
mov
movsl
daa
cmp
out
push
jg
mov
outsl
cltd
push
icebp
xchg
int3
mov
pusha
test
jmp
and
in
add
ret
and
jb
mull
movsl
shrb
cmp
mov
movl
shlb
in
push
ss
push
sub
jmp
sub
in
mov
pop
leave
jae
aam
lret
jb
mov
ja
leave
hlt
lret
enter
add
in
lea
cltd
pop
out
cmp
jecxz
mov
pop
add
xchg
inc
movsb
data16
xchg
mov
mov
inc
movl
jle
data16
icebp
clc
cmc
or
jne
dec
adc
ja
xchg
xchg
xor
cmpsb
call
or
fs
cmp
arpl
adc
or
dec
sti
dec
lea
ljmp
insb
mov
and
lds
jl
scas
popa
xchg
incl
cmp
in
mov
fsubrs
lcall
ljmp
dec
insl
pop
out
les
jp
popa
adc
dec
mov
push
fdivl
pusha
push
daa
jle
push
ret
das
dec
push
and
cmp
and
push
lahf
dec
mov
pop
gs
mov
ljmp
pusha
xlat
push
stos
notb
adc
pop
jecxz
xor
jp
dec
mov
pop
orl
insl
outsb
adc
push
sti
pop
push
mov
push
adcl
jp
sbb
sub
loop
cmp
je
add
lret
push
or
sahf
fldcw
cmp
mov
push
mov
inc
xor
iret
insb
addr16
dec
mov
mov
imul
push
xchg
rclb
dec
jnp
cwtl
mov
dec
sub
jp
xchg
inc
outsb
mov
push
cmp
push
cltd
scas
into
xor
mov
mov
xchg
test
in
push
imul
dec
cltd
pusha
fmull
jl
call
mov
add
or
sub
ja
or
addb
or
xchg
jg
fnop
inc
fld
mov
sub
incb
xor
cltd
adc
lock
andb
inc
stos
cli
ds
lock
stc
in
and
mov
adc
xor
subb
cmc
mov
mov
pop
addb
push
imul
ljmp
push
lock
cli
subl
enter
ret
push
out
pop
and
out
lods
lret
repz
adcl
in
out
adc
push
jmp
and
adc
sbb
or
mov
xor
mov
lahf
sbb
imul
dec
jg
mov
inc
out
test
aad
add
cmpsl
imulb
mov
pop
cmp
jno
scas
pop
ret
jle
inc
mov
ret
int3
fucompp
and
in
mov
imul
inc
sbb
cltd
jl
lret
jae
push
mov
int
loope
stos
xor
loopne
inc
jae
ja
xchg
mov
xor
pop
cmpsl
test
leave
mov
movsb
lods
push
negb
aam
ficompl
mov
push
scas
test
pop
stos
push
fwait
add
repnz
xchg
mov
push
sbb
xor
dec
and
push
xchg
sub
sbb
insb
mov
ss
fildll
ja
and
dec
xor
jns
mov
xchg
rorl
loopne
filds
lret
jle
lods
inc
fldl
les
js
ret
mov
adc
call
mov
popa
fildll
fwait
shll
push
dec
xor
loopne
mov
dec
jmp
mov
aam
std
adc
jp
je
sub
ds
scas
orl
pushf
xchg
xchg
scas
jp
lds
movsl
mov
and
jl
scas
cltd
test
ret
push
mov
fwait
inc
cld
push
mov
iret
lcall
loopne
inc
jp
jno
addb
mov
andb
adc
iret
cmp
sub
int
sub
loope
test
mov
jle
push
into
dec
sahf
stos
pop
fstpl
jbe
mov
dec
test
lods
ja
lret
in
in
jae
test
iret
and
jns
ret
fdiv
fistpl
cmpb
pop
sub
jl
or
pop
js
mov
pop
xor
mov
addr16
inc
movsb
loope
inc
sar
pop
sbbl
sar
out
push
cmp
jmp
xor
mov
roll
push
mov
add
and
cmp
insl
inc
mov
das
pop
rcpps
xor
fbld
fdivrs
or
push
xchg
add
fists
lea
jle
cs
call
add
pop
lods
nop
and
push
sub
mov
repz
lds
idivl
add
rclb
jae
and
mov
mov
cmp
and
out
lret
popf
push
pop
lcall
pop
mov
push
es
jno
mov
xchg
test
pop
cld
adc
xchg
inc
cli
xchg
fldt
inc
fxch
int
imul
add
add
sbb
mov
adc
cmpsl
cltd
cmpsb
clc
mov
sub
enter
sbb
xor
mov
push
push
cmp
rorl
xchg
xchg
ret
ret
dec
cmpsl
repz
outsb
fscale
xchg
xor
js
push
push
lret
pop
mov
cmp
aam
xchg
sbb
mov
lock
sbb
mov
push
std
pop
loopne
mov
pop
push
enter
ret
rcll
xchg
test
andb
andl
icebp
lahf
push
ljmp
std
cwtl
add
aas
xor
lcall
aaa
insb
or
or
mov
into
lret
stos
push
decl
mov
dec
scas
out
push
cmc
movsl
ret
push
scas
sbb
fidivrs
or
mov
repz
stos
sbb
dec
jmp
icebp
andb
lds
jne
das
ror
std
sub
jl
mov
jo
add
or
imul
inc
mov
into
dec
subb
sarb
add
jae
outsb
dec
loopne
push
xor
mov
scas
out
lcall
jecxz
enter
jmp
add
pop
out
lret
cmpsb
test
add
jmp
dec
xchg
sbb
loopne
and
ljmp
push
test
sahf
jo
pop
aad
bnd
mov
scas
ss
or
inc
xchg
jl
mov
sub
dec
pop
sub
adc
cld
fimull
div
aas
jns
ja
and
scas
pusha
dec
or
popa
push
sbb
jno
jg
jb
mov
stc
mov
cmp
inc
mov
pop
push
inc
flds
insb
dec
ret
out
popf
jo
fld
mov
and
mov
push
movsl
fimull
fisttps
shl
lea
adc
dec
shlb
pop
daa
js
dec
push
sahf
pop
ret
out
bsr
jmp
cmp
xor
pop
mov
inc
sti
outsl
cmp
push
xorb
pop
push
or
xchg
mov
push
outsb
fdivrl
out
test
mov
call
push
orl
psubusw
ret
mov
push
daa
mov
iret
mov
cmp
dec
movsl
adc
clc
sbb
clc
enter
mov
xor
xchg
enter
jno
inc
lahf
lea
daa
and
movsb
leave
cmpsb
mov
jmp
sub
push
stos
push
mov
loopne
cmp
push
jns
lods
es
outsw
outsl
movsl
inc
lahf
push
add
bound
pop
and
gs
in
clc
cmp
xor
mov
dec
xor
or
inc
pop
lock
jo
lds
test
nop
push
enter
movsl
cltd
sbb
or
lds
cmc
insb
movsb
cmp
or
adc
cmp
and
std
add
push
xchg
jo
in
push
pop
mov
mov
adc
mov
fldl
mov
sahf
loope
movsl
and
bound
imul
mov
lret
test
popa
inc
ljmp
sub
fisubs
pop
andl
mov
inc
repz
incb
pop
les
add
sub
mov
pusha
pop
push
fdivs
xor
in
ja
push
test
dec
push
mov
cmp
jmp
int3
add
cs
sbbb
push
add
adc
push
xchg
and
out
dec
mov
sub
mov
push
mov
or
push
ret
ds
movsb
dec
pop
cmp
jge
fsubrs
lds
dec
imul
and
lea
call
pop
xchg
sti
cmc
inc
dec
fbld
call
and
dec
or
outsl
mov
jno
add
mov
mov
out
std
pop
sarl
inc
sti
pushf
xor
mov
mov
and
jp
pop
cli
movl
pop
add
xor
aad
cmpl
push
xchg
test
out
cltd
xor
dec
adc
jne
mov
aaa
js
frstor
add
stos
sub
mov
pop
lods
and
jb
ret
pusha
lods
stos
aad
push
sub
adc
jl
inc
out
fwait
iret
adc
add
lcall
mov
xor
ljmp
sbb
jb
mov
movsb
in
in
pop
push
cwtl
nop
push
out
xor
mov
test
call
mov
ja
pusha
sti
lds
and
mull
sarl
movsb
insl
imul
pop
fbstp
jne
adcb
fiaddl
pop
frstor
mov
xor
adc
outsb
outsl
mov
sbb
dec
fwait
xchg
scas
nop
or
dec
loope
or
aam
add
into
xchg
icebp
scas
scas
jbe
sti
pop
jno
xchg
sbb
or
repnz
inc
pop
incb
inc
mov
cmp
and
icebp
leave
dec
stos
leave
lock
sub
mov
inc
xchg
dec
pop
xor
std
adc
xor
and
dec
jge
daa
repz
adc
rclb
daa
lcall
jge
or
ljmp
test
dec
in
mov
jns
sub
pushf
push
cmpsb
sub
xor
mov
push
mov
icebp
sub
mov
addr16
sbb
pop
fildl
notb
and
pusha
xchg
sub
shll
dec
fdivrs
push
mov
xor
jo
popa
and
pusha
daa
xchg
nop
adc
aad
fimuls
inc
sbb
test
or
pushf
push
add
push
pop
xor
or
add
dec
insb
mov
push
pop
sbb
lods
xchg
leave
xlat
sidtl
adc
clc
inc
pusha
mov
testl
daa
dec
inc
mov
xchg
pop
shrl
add
cltd
push
call
mov
aas
and
jae
jmp
sub
roll
xlat
addr16
inc
pop
jecxz
sbbb
mov
jns
cmp
pop
imull
sub
lea
leave
pop
and
mov
and
add
les
jae
push
push
inc
xorb
xor
xor
out
je
xchg
dec
out
aad
cltd
adc
pop
jge
lret
ljmp
sarb
pop
das
test
cld
pop
pop
jg
mov
cmp
daa
jne
cmp
jge
or
sahf
aam
stc
mov
inc
rcrl
mov
mov
loop
scas
add
mov
sbb
push
cmp
iret
imul
lock
andb
rol
pop
mov
add
xchg
int
push
mov
push
adc
lock
ficompl
int3
mov
fcmovnu
repz
sub
sahf
aas
mov
hlt
jl
inc
js
xchg
scas
out
into
arpl
jg
aaa
std
jne
inc
mov
vmulss
and
xor
mov
dec
xchg
jno
or
call
lcall
xchg
and
mov
rcll
sti
cmp
dec
pop
xchg
jnp
mov
add
and
mov
xor
cmc
mov
pop
popf
mov
inc
pop
inc
std
xor
jecxz
mov
ficompl
adc
sbb
mov
cmp
gs
pop
hlt
dec
and
or
push
faddl
dec
push
test
xchg
lods
pop
pop
dec
sbb
sub
sbb
adc
loopne
movsl
fsubrs
jle
and
sbb
lret
outsb
js
sbb
iret
out
scas
mov
add
daa
or
movsw
xlat
icebp
inc
sti
and
adc
mov
fs
shrl
lea
aad
dec
test
xor
jecxz
aas
and
mov
std
clc
in
ss
sub
push
mov
xor
rcrb
ret
loopne
out
loop
fs
jp
pop
pop
or
mov
out
inc
xchg
repnz
jne
mov
mov
xchg
ja
jmp
out
in
jo
jb
mov
jl
outsb
xor
or
sbbl
mov
jns
roll
sub
fdivs
test
dec
xrelease
sbb
and
enter
or
or
dec
insb
dec
fs
xor
pop
insb
rcrl
pop
popf
sbb
and
inc
sbb
push
jle
xchg
push
lea
inc
dec
jns
outsl
test
adc
andb
mov
test
fwait
cs
sbb
jmp
jo
push
pop
push
scas
xchg
out
lret
nop
xchg
adc
mov
sub
iret
pop
adc
cmc
inc
mov
in
mov
mov
sti
dec
xchg
stc
ret
rcll
dec
push
add
mov
sti
jo
pop
pop
nop
mov
mov
push
pop
fisubrl
lds
xchg
or
inc
inc
lds
or
cwtl
pop
js
nop
filds
and
pusha
and
mov
nop
push
jno
dec
out
out
pmullw
cmp
jmp
loopne
cmp
bound
xor
mov
push
test
imull
sub
jnp
adc
add
lock
cli
pop
enter
pop
rcl
xorl
jmp
mov
setl
sub
mov
or
or
add
cmp
push
inc
rclb
or
fsubrs
rol
jmp
mov
ss
cmp
mov
add
fcomps
xlat
mov
xor
mov
mov
add
push
leave
stc
ljmp
inc
inc
pop
sahf
mov
repnz
cmp
sub
popa
pop
dec
sbb
push
lea
xchg
stos
xor
das
mov
add
pop
push
frstor
push
fbstp
cwtl
sti
mov
roll
jo
lods
shlb
cltd
lcall
scas
mov
or
cmp
lods
sub
adc
xchg
into
cmp
adcb
cmpsb
loop
iret
sub
or
aaa
fisubrl
and
adc
cmpl
stos
sbb
in
adc
lea
and
dec
sbb
xor
push
sub
pop
inc
mov
inc
stc
movsl
scas
and
jl
shrb
testl
data16
cmp
shr
inc
int
out
mov
push
mov
add
int3
mov
adc
inc
push
xchg
mov
ljmp
dec
stc
inc
dec
in
addb
push
ljmp
out
repz
ret
and
mov
adc
ja
mov
jle
push
sub
out
js
pop
jnp
xchg
in
dec
pop
push
pmullw
jno
mov
rcl
cwtl
fiaddl
mov
push
sbb
adc
ss
popf
pop
cwtl
dec
mov
fs
pop
mov
stos
pushf
push
out
push
jle
lcall
call
and
dec
mov
js
cld
push
outsl
dec
pop
insb
lods
mov
jmp
loop
jb
xlat
into
sahf
repz
test
dec
mov
cmp
aaa
arpl
adcb
pop
dec
aaa
xchg
loop
js
add
nop
dec
icebp
lea
xchg
enter
cmp
loop
loope
test
cwtl
out
adc
fwait
push
add
pop
aaa
cwtl
fdiv
repnz
pop
inc
push
and
push
mov
add
pop
out
inc
cltd
mov
xor
lahf
mov
add
xor
or
in
notl
into
inc
out
fstpt
cmp
loope
push
dec
test
dec
or
xor
sbb
mov
add
rcll
sub
stc
lods
mov
je
mov
jp
sbb
dec
lcall
lock
lock
fdivrs
mov
test
jns
push
xor
sub
inc
sbb
or
pop
jge
sti
and
adcb
jne
outsb
fistps
lods
xchg
into
adc
jae
mov
dec
aaa
lret
fildll
mov
cs
fcomps
jnp
stc
and
aas
sub
push
fdivl
cmpsb
sub
adc
xchg
add
mov
rorb
es
pop
push
std
lret
ljmp
mov
int
xchg
cmp
ds
popa
vandps
lods
or
test
pop
jmp
mov
out
xchg
and
ret
out
xchg
aas
data16
push
jb
inc
xor
sbb
mov
push
test
sub
xchg
push
sbb
jo
inc
pop
cmp
lret
gs
pop
loopne
dec
js
xchg
xchg
push
jb
pop
push
adcl
aaa
es
xor
mov
pop
addr16
repnz
pop
addr16
sbb
aaa
shlb
fistl
push
dec
popf
add
inc
and
loopne
xchg
popa
aaa
subl
fdivs
mov
push
or
xor
movsl
add
mov
xchg
cmp
xchg
rclb
add
cmp
lret
jl
and
push
ficoms
rcrb
jbe
orl
mov
pop
orb
or
filds
adc
jp
enter
mov
lahf
popl
xor
rcrl
adc
pop
inc
scas
fs
fwait
or
fsubs
sub
out
push
or
push
jecxz
loope
ja
test
xchg
inc
out
or
movsl
jns
imul
add
add
pop
xor
push
filds
and
add
push
mov
adc
inc
addr16
mov
cwtl
cmp
into
in
bound
pushf
and
dec
sbb
adc
lret
dec
nop
jg
je
movl
cmpsl
testl
mov
dec
mov
push
rcrb
lcall
push
mov
imul
pop
push
push
cmpsl
fists
xor
enter
lahf
dec
lea
mov
pop
dec
push
gs
inc
les
sbb
lcall
push
or
or
cltd
cmp
dec
lcall
jg
call
jmp
sti
out
leave
or
adc
jb
sub
out
and
sbb
lods
jo,pn
aaa
add
push
loop
in
leave
cmpl
xchg
dec
sarl
cs
out
lods
push
xchg
mov
lcall
xlat
lret
pop
lock
and
rcl
test
xchg
sub
xchg
mov
or
cmp
pusha
out
das
mov
mov
or
mov
mov
sbb
xchg
in
or
fiaddl
dec
inc
mov
sti
fxch
mov
add
mov
std
sti
and
fcomp
fmull
cwtl
pop
cmp
xlat
sub
xchg
into
aad
ret
ret
sbbb
arpl
call
scas
cmc
adc
out
scas
cmp
jae
orb
dec
xlat
mov
jae
dec
aad
inc
add
jp
adcb
mov
adc
push
sbb
dec
rorb
std
leave
dec
mull
arpl
adc
cwtl
or
int3
pop
notl
add
fists
arpl
mov
mov
sbb
mov
sbb
jmp
rclb
pcmpeqb
cmp
mov
stc
pop
fs
in
mov
push
test
jl
jb
inc
mov
xor
cltd
data16
xorl
and
sahf
inc
mov
cld
scas
sarl
loop
and
test
test
or
rcl
sar
out
leave
xchg
in
mov
xor
push
and
add
xchg
adc
sbb
push
jns
dec
mov
mull
lret
in
push
mov
ret
stos
mov
icebp
int
leave
inc
push
out
and
push
inc
jno
cli
mov
mov
mov
xchg
lds
jae
popf
mov
mov
dec
jae
push
jns
mov
jne
xchg
fbld
cmpsb
addl
adcl
das
push
jg
arpl
mov
aas
icebp
cli
idivb
xchg
sbb
pushf
lcall
dec
and
pop
push
fwait
and
xor
pop
xchg
in
cmp
xchg
and
sub
sub
dec
jbe
addl
cmp
push
popa
cmp
scas
pop
sub
fwait
inc
js
mov
mov
sub
push
mov
cmp
sub
xchg
dec
aas
cwtl
test
inc
shl
shrl
imul
in
iret
imul
adc
mov
icebp
movsl
sbb
mov
xor
push
cwtl
mov
test
jmp
pushf
movsb
call
mov
loope
sarb
or
rcrb
sub
xchg
push
mov
mov
jl
and
add
jne
imul
clc
call
adc
jno
mov
push
jne
dec
add
hlt
pusha
sub
xor
repz
into
xchg
pop
or
roll
sarb
pop
xchg
mov
add
dec
push
ret
mov
push
inc
leave
pop
das
divb
addr16
inc
sbb
clc
leave
dec
push
loopne
nop
popa
stos
mov
inc
adc
fwait
pop
rcrl
fidivrs
clc
add
jmp
mov
sub
mov
add
jne
int3
ss
mov
stc
adc
sbb
adc
inc
sub
lds
xchg
das
and
ja
sarl
popa
or
jns
sbbb
add
push
push
pop
insb
and
mov
pop
repz
aam
adc
push
jge
xchg
dec
cmp
push
push
xchg
je
inc
into
jnp
mov
dec
mov
mov
fs
ljmp
pop
mov
mov
cmp
adc
ja
jne
add
mov
mov
leave
fidivrs
xchg
hlt
insb
nop
das
mov
xor
inc
dec
mov
pop
flds
test
xor
daa
jle
insl
das
dec
jp
popf
ja
push
bound
leave
xor
or
lods
addr16
ret
lahf
mov
out
pop
mov
pop
fstpt
dec
pop
xor
loopne
aad
les
popf
ret
jne
jecxz
mov
jg
movsl
push
add
andb
subl
sub
or
dec
inc
adc
pop
mov
xchg
repz
adc
mov
add
in
push
mov
pop
cld
adc
inc
xor
mov
rorl
sahf
out
pop
cmpsl
adc
call
sub
jl
je
dec
aas
or
mov
cmpsl
jae
jmp
mov
out
cld
int
out
imul
lret
and
popf
mov
jg
and
pop
imul
sbbl
lahf
in
stc
idiv
adc
shll
call
jo
cmp
jp
rorl
cmpsl
or
fisttpll
push
pop
pop
mov
cmp
mov
xchg
pop
nop
add
cld
dec
inc
ds
int
divb
mov
and
lret
fcomps
insl
fnsave
lods
lods
jno
cmp
and
pop
int3
pop
add
into
repnz
inc
out
andb
mov
fisttpl
call
frstor
insb
in
hlt
push
das
sbbl
inc
push
ret
adc
dec
mov
std
push
int
push
cltd
jp
sbb
orb
mov
hlt
mov
lods
sbb
cwtl
lea
pop
cmp
rcl
sbb
inc
pop
pop
das
sbb
mov
mov
cltd
loope
dec
in
outsl
sub
or
push
sub
es
and
pop
sub
gs
and
adc
xor
jg
enter
arpl
nop
xlat
cmp
sub
mov
xor
inc
cmp
loop
add
adc
xchg
pop
add
push
fcomp
pushf
pop
or
add
inc
sbb
inc
in
pop
adc
sub
sbb
sub
lods
test
mov
and
cmp
test
ret
push
shrl
xchg
or
idivl
aad
inc
and
pushf
ret
xchg
sbbb
enter
loop
fstl
insl
push
rcl
jo
push
pop
xchg
add
push
adc
stos
fimuls
mov
mov
add
mov
imulb
pop
test
push
jp
xchg
push
xchg
cmp
notl
ss
jp
ret
mov
pusha
repnz
mov
fwait
cs
mov
mov
ds
push
stc
push
sbb
lret
mov
std
mov
mov
and
pop
sbb
sub
hlt
in
sbb
out
add
popf
out
mov
xor
mov
je
and
dec
inc
ficomps
pop
je
mov
jmp
mov
repnz
lret
sbb
lea
xor
or
mov
loope
out
pop
hlt
push
jp
imul
mov
stos
stos
cs
adc
pop
loope
test
push
stos
sub
xchg
out
dec
leave
adc
mov
sbb
decl
std
insl
fwait
mov
cs
sti
xor
enter
movsb
into
loope
mov
inc
stos
sti
ds
imul
push
ljmp
mov
orb
test
je
lods
sbb
xchg
int
xor
pop
shrl
sar
lods
and
hlt
test
sub
int
inc
push
and
dec
sbb
sub
pushf
and
adc
or
stos
iret
sub
pop
popf
dec
movsl
outsb
mov
jle
mov
mov
cmpsl
xchg
push
cmpsb
xchg
ljmp
or
stc
es
push
mov
push
and
cltd
xchg
in
xor
dec
adcb
or
add
or
lds
jne
shll
ret
jg
cltd
icebp
mov
outsb
fs
stos
daa
jmp
jg
dec
testb
push
and
sub
imul
dec
jecxz
xchg
adc
cmp
sub
or
les
mov
lods
push
pop
sarl
mov
imul
cmpsl
push
and
imul
outsb
mov
cmp
arpl
fwait
arpl
loopne
pop
mov
add
dec
cmpsl
rcr
in
mov
out
icebp
push
test
idivl
outsb
or
xor
cmp
and
test
or
fiadds
cld
shll
imul
inc
inc
sub
dec
jne
out
inc
aaa
lods
mov
add
jb
sbb
test
cltd
mov
dec
xchg
xchg
cld
xchg
int
ja
cmc
xchg
add
inc
cmc
lea
jp
lock
daa
sarb
into
das
push
pop
sarl
loope
in
out
in
jb
pop
cs
mov
jge
aas
popa
and
in
mulb
insb
inc
xchg
mov
dec
jo
gs
sbb
xchg
and
jns
sbb
cmc
or
jle
jmp
dec
enter
cmp
push
scas
es
aas
xor
fists
add
inc
rcll
call
mov
mov
lahf
mov
fisubrs
out
addr16
icebp
ja
sbb
pop
mov
cmp
stc
stc
mov
and
das
fists
out
dec
mov
ja
out
xchg
adc
inc
mov
mov
jle
xor
sub
out
or
roll
pusha
or
int3
lock
jg
pusha
fdivp
mov
xor
vcvtsi2ssl
inc
push
test
popa
sub
mov
aam
dec
xchg
sbb
loope
test
push
mov
adc
xchg
and
adc
xchg
mov
xor
das
je
lods
mov
jmp
cmpsb
rorb
mov
or
mov
and
jge
rol
sti
enter
and
xchg
jge
out
xchg
lcall
jae
scas
shlb
sbb
rcr
das
mov
jno
pop
adc
dec
sbbb
cmpsb
sbb
jle
jle
imul
lret
xchg
xchg
mov
sbb
cmp
push
fwait
lds
add
and
jno
loope
scas
in
fsubs
scas
repnz
hlt
adc
call
sbb
pusha
rorb
xlat
sub
xlat
mov
push
mov
in
enter
sti
mov
sahf
in
and
movsl
or
clc
imulb
cmp
arpl
data16
stos
push
cmc
mov
jmp
jbe
cmpsl
xor
mov
dec
popf
repnz
out
arpl
ljmp
arpl
test
enter
lahf
or
sub
mov
push
ljmp
lcall
out
sbb
jmp
rolb
add
mov
push
xor
mov
mov
jmp
call
fldl2e
xor
lods
or
jno
mov
or
jl
dec
iret
xor
clc
lods
shl
inc
cmc
dec
mov
fldcw
data16
popa
lods
and
imul
in
mov
arpl
mov
fbld
push
or
mov
mov
add
aaa
sahf
xchg
dec
jb
pop
adc
adc
add
push
test
mov
ret
nop
push
fwait
jg
xor
inc
mov
add
dec
scas
mov
mov
cltd
cmp
add
pop
pop
xor
lret
ret
inc
shlb
xchg
jae
jge
cmp
push
sbb
cmp
out
inc
jp
mov
aas
lods
lods
jnp
scas
in
dec
stos
cmpb
in
in
sbb
rclb
push
lret
push
lret
fimuls
dec
add
nop
addr16
enter
adc
pop
inc
sub
mov
int
inc
mov
js
out
shlb
jns
cwtl
int
in
shl
cmp
enter
sbb
xor
inc
push
and
dec
push
popa
pop
jmp
dec
or
adc
dec
xor
mov
dec
mov
push
pop
lods
into
xlat
out
xchg
mov
adcl
in
mov
xchg
rorl
xchg
or
cmp
lods
in
out
sbb
mov
or
push
push
hlt
push
test
repz
outsb
into
loopne
xchg
mov
stos
push
push
cs
cld
mov
dec
lret
push
imul
cmp
jl
lcall
imul
lcall
mull
and
jae
popa
int3
popa
cmp
in
pop
inc
pop
ljmp
scas
fucomi
cli
movsb
jmp
push
xchg
data16
data16
aaa
xor
cmpsb
and
adc
add
lods
mov
ljmp
jne
mov
test
cmp
or
dec
and
mov
sbb
ss
mov
sub
sub
iret
and
dec
mov
inc
shl
clc
ds
cmpsb
mov
jae
xor
pop
jbe
ret
lahf
and
fdivp
adc
dec
jle
adc
sarl
cld
pop
or
mov
sub
adc
add
stos
dec
sub
inc
mov
test
mov
push
or
jmp
daa
popa
jmp
xchg
shl
adc
rclb
outsb
shlb
repz
jge
xor
stc
out
hlt
iret
ds
repz
fstp
xor
pusha
ss
push
jecxz
movsb
lret
jge
jge
jns
stos
xchg
add
inc
push
add
emms
mov
jns
fwait
sti
push
iret
mov
dec
pop
call
xor
jnp
rol
jb
sbb
mov
mov
push
jae
cs
and
jnp
adc
jno
lods
in
imul
mov
dec
mov
xchg
mov
call
insb
clc
cmp
jb,pt
out
dec
cltd
sbb
mov
inc
jp
mov
pop
inc
dec
or
mov
hlt
test
enter
xchg
mov
bound
mov
ljmp
inc
sbb
mov
fisubl
mov
call
mov
mov
add
add
adcb
push
add
pop
mov
out
jl
sti
jp
stc
pusha
push
cwtl
or
cmpb
clc
adc
mov
dec
pop
sub
stc
inc
dec
pushl
rcrl
movsl
aam
loopne
push
flds
pop
in
push
mov
inc
or
mov
jne
jne
ds
pop
xor
add
std
fnstenv
push
sub
push
lods
push
loope
sqrtps
sub
lret
cmp
test
and
sarl
or
mov
scas
sub
or
adc
sub
jb
cltd
dec
mov
fcoml
jge
movsb
js
lret
aad
xchg
sbb
leave
outsb
adc
int
and
fildll
xchg
xor
xchg
frstor
stc
outsl
into
repz
or
and
push
lea
aam
xlat
jp
add
pop
mov
mov
scas
lock
mov
xor
lods
stos
test
xchg
xor
pusha
pop
adc
ljmp
movsb
clc
push
push
dec
inc
xchg
xor
pop
pop
or
sub
push
mov
push
sbb
cmp
push
lret
jne
out
fucom
ja
push
jmp
lods
lea
xor
ret
mov
cmp
mov
fwait
pop
in
jmp
test
mov
mov
fdivrs
mov
pushf
aam
mov
fnstcw
inc
xor
int3
xor
pop
cmp
cmovl
xchg
dec
or
mov
mov
ja
shll
xchg
or
sbb
es
in
out
call
mov
mov
in
cli
sar
xchg
jmp
sub
xlat
pop
xorb
cmpl
pop
lcall
data16
push
aas
arpl
out
sub
mov
outsb
inc
aaa
mov
xchg
daa
sub
pop
divb
mov
mov
cmp
lret
xchg
jbe
call
inc
adc
fstps
add
xor
sti
popa
xor
repnz
sbb
arpl
movsl
mov
adc
outsb
mov
and
sahf
mov
loope
xor
cmc
xchg
mov
xor
call
lret
jg
ret
jl
mov
mov
loopne
and
jo
jg
in
aaa
or
push
bound
mov
jecxz
xchg
mov
dec
push
pushf
mov
ret
ret
pop
push
and
xchg
sahf
js
orl
and
cmp
jno
ja
bound
scas
aam
mov
mov
push
mov
pop
push
dec
push
mov
xchg
fimuls
inc
adc
mov
mov
and
rolb
aam
enter
mov
daa
arpl
push
mov
inc
or
pop
sub
cmp
das
leave
fscale
or
in
bswap
push
subb
aas
in
call
sub
popa
adc
add
jmp
adc
arpl
lea
sub
daa
lahf
lret
or
pop
push
or
dec
mov
lahf
and
lock
cmpsl
xor
cmc
xchg
inc
xchg
test
and
in
enter
and
scas
dec
add
cmp
add
cmpsl
lcall
adc
dec
addr16
mov
insb
imulb
xchg
loopne
jge
xchg
push
call
dec
sub
dec
and
mov
adc
loopne
notl
mov
repnz
and
fildl
fdivs
pop
rol
sub
stos
mov
repz
pop
jecxz
mov
pop
nop
inc
adc
fnstsw
lret
mov
pop
test
aam
dec
shrl
lret
je
cmp
rsqrtps
incb
and
loopne
pminub
mov
xchg
push
lret
into
push
mov
or
adc
or
mov
popf
outsl
sub
mov
es
loope
rcll
pop
mov
je
and
cld
sbb
sub
cltd
outsl
adc
notl
and
scas
bound
xchg
in
mov
xor
ret
stos
data16
pop
repnz
lea
xorb
lret
ja
out
dec
les
icebp
add
movsl
into
fidivrl
test
jl
mov
shll
or
or
lock
mov
pusha
or
and
frstor
imul
pop
daa
mov
mov
leave
pusha
dec
repz
add
xor
ret
lahf
pop
dec
pop
mov
loopne
push
jne
dec
dec
mov
repz
xchg
jae
jnp
ja
and
sbb
outsl
out
aad
push
stos
je
pop
popa
outsb
cld
subl
aaa
sarb
movsb
mov
leave
fistps
stos
mov
adc
sti
cmp
cmp
sbb
pop
jae
ljmp
movsb
xchg
sti
in
mov
xchg
inc
jns
stc
jg
push
sub
add
inc
inc
jno
inc
dec
pop
roll
xchg
or
mov
mov
sbb
lret
xchg
push
mov
inc
insb
push
outsb
notl
mov
out
dec
xor
cmc
mov
pop
mov
lahf
add
or
ret
adc
aad
pop
stos
add
sbb
cmp
aad
fdivl
push
cld
out
pop
lock
xlat
pushl
xchg
xchg
xor
xchg
mov
add
insl
test
dec
mov
cli
in
xchg
add
sub
mov
xchg
scas
inc
ja
sub
fidivs
inc
mov
jne
mov
inc
ljmp
mov
pop
add
mov
sub
xchg
and
pop
pop
add
scas
sbbb
mov
mov
sbb
cld
add
imul
in
movsl
jne
sub
add
fbld
cmpsb
sbb
ja
cmp
pop
xorb
pop
add
fwait
rolb
add
fwait
xor
hlt
sahf
or
cmovae
frstor
inc
mov
xchg
in
adc
cmp
test
imul
mov
shlb
popf
cli
aaa
xchg
scas
ja
xchg
jnp
mov
imul
aaa
data16
push
push
movsb
call
lock
inc
subb
movsb
cmp
mov
aas
jmp
mov
repnz
in
sbb
movsb
in
mov
xor
and
inc
dec
std
ja
jno
push
mov
insb
mov
and
cli
stc
std
pop
faddl
cwtl
pop
cmp
stos
je
push
or
lods
mov
mov
or
xchg
mov
imul
ljmp
sub
repz
mov
add
es
int
adc
dec
adc
ss
lret
xchg
je
pop
icebp
push
jns
cmp
xor
mov
cmp
inc
mov
idivl
mov
mov
jle
scas
mov
lods
cmp
mov
sub
les
sbb
ja
mov
jae
aad
xchg
pop
xlat
clc
loop
xor
gs
mov
andl
mov
gs
dec
int3
dec
jae
filds
jl
lea
lea
test
inc
leave
jp
in
mov
sub
xchg
dec
subl
mov
rcll
aad
inc
stos
ja
ljmp
das
push
or
mov
sub
sbb
xchg
push
pushf
js
xor
inc
cmc
jne
mov
shrl
sub
and
push
or
popa
dec
pop
jl
xor
mov
imul
imul
bound
rcll
lret
fiaddl
pop
pushf
xor
loop
icebp
cld
mov
dec
inc
jle
pop
xor
cmp
xchg
jno
unpckhps
divb
into
stc
out
and
lret
aaa
adc
sbb
cli
iret
insb
xor
int3
cmc
mov
and
cmp
pop
addl
dec
clc
shl
cmp
sbb
mov
movsb
pop
add
iret
adcl
cmp
scas
repnz
stos
or
mov
lea
mov
and
call
ljmp
or
or
imul
adc
inc
arpl
cs
pop
adc
in
mov
movsl
popf
nop
mov
ret
add
out
jmp
or
sub
mov
or
add
pop
dec
inc
das
jg
sbb
mov
call
cli
adc
idivb
xchg
subl
dec
pop
mov
or
mov
aaa
sbb
inc
loop
inc
stc
pop
pop
sbb
mov
mov
repz
push
imul
mov
iret
scas
mov
fisttpl
cmp
xchg
xchg
dec
cltd
lret
mov
hlt
lods
hlt
mov
xor
mov
mov
cld
bound
mov
mov
std
push
mov
sub
pop
xchg
test
push
jb
lret
xchg
adc
mov
push
cmp
into
push
inc
lods
pcmpgtb
idiv
mov
push
int
enter
fidivs
shlb
push
bound
loope
notl
sub
mov
xchg
mov
jo
pushf
lds
push
jecxz
js
imul
or
sbb
dec
push
pop
clc
jae
jns
repz
in
stos
insb
aam
jb
js
push
xor
test
dec
gs
or
pop
ds
pop
mov
cmp
xchg
aad
ljmp
mov
xor
push
adc
into
out
mov
loopne
sbb
daa
jle
sbb
and
mov
mov
add
daa
push
in
bswap
orb
add
movsb
orl
mov
stos
aaa
push
je
cmp
clc
push
pop
mov
dec
fdivrs
sti
loope
mov
loopne
jmp
imul
xor
leave
add
add
xchg
jns
data16
push
into
rorl
in
ljmp
hlt
adcb
adc
jecxz
xchg
inc
mov
addl
dec
out
in
cmp
and
pop
mov
sqrtps
sbb
add
mov
push
mov
iret
cmpsb
leave
cmp
mov
inc
divb
cld
insb
loope
cmp
and
cmpsl
std
adc
jbe
adc
icebp
pop
mov
fcomps
andl
and
imul
lahf
clc
rclb
negl
bound
sbb
pop
inc
xchg
inc
pop
jo
mov
in
in
stc
sub
outsb
and
mov
sbb
loope
or
lret
call
mov
jne
xor
sub
mov
xchg
adc
or
sti
cmp
test
or
push
clc
sub
pushf
repz
insb
gs
dec
mov
cmp
fsubrl
pop
mov
dec
call
push
push
dec
xchg
sub
imul
lret
xchg
inc
mov
push
pop
push
repnz
jmp
and
xor
mov
test
xor
rcl
ljmp
sbbl
push
pop
xchg
aas
jp
inc
jecxz
mov
adc
add
aad
jmp
nop
fadd
sub
inc
xor
or
mov
mov
mov
pop
popa
sub
mov
jp
cmp
or
leave
mov
outsl
xorl
lods
insb
shlb
xchg
mov
mov
add
movsb
fcmove
jmp
mov
in
push
fcompl
jle
mov
sub
movd
scas
or
in
sub
xor
rcll
leave
cmp
xor
dec
and
mov
gs
hlt
xchg
cltd
mov
jne
jae
cmp
adc
xor
mov
inc
ds
push
push
sub
cmp
jge
test
lahf
in
inc
jle
lds
mov
xor
sub
cmp
dec
mov
pushf
fs
inc
and
xchg
popf
cmp
add
push
jo
into
lahf
fldl
test
dec
clc
and
and
gs
and
daa
push
popa
mov
jmp
xor
pop
cmp
pushf
push
fsubrs
mov
cmp
rcrl
fidivs
jge
mov
out
pushf
dec
or
xor
sub
sbb
mov
movsb
push
enter
push
inc
leave
loop
pop
sahf
cltd
neg
test
clc
movsbl
add
js
sub
mov
test
dec
mov
addr16
push
jg
ret
and
xor
xchg
mov
or
ret
mov
andl
sahf
in
push
adc
lahf
fdivl
add
sub
add
repz
add
shrb
inc
arpl
gs
xchg
add
xor
jno
and
or
enter
int
fwait
dec
ljmp
repnz
adc
pop
xchg
jmp
dec
cmc
cmp
add
clc
inc
flds
cmc
insb
cmp
or
lods
insl
enter
dec
aad
jge
mov
sbb
popf
xchg
rcll
or
fnstcw
adc
test
add
sub
movsb
push
ss
cmp
ret
lcall
add
push
lret
pop
sub
push
adc
sub
fs
mov
out
adc
sub
lret
or
pop
jg,pt
outsl
mov
mov
jl
cmp
in
xor
inc
loop
out
mov
xchg
add
test
ljmp
scas
mov
fnstsw
pop
shl
push
inc
mov
incb
stos
sbb
daa
cmp
nop
lret
andb
lcall
jecxz
test
xor
sbb
mov
test
inc
testb
imul
fdivrs
push
popf
push
push
test
sub
mov
lcall
and
out
cmp
or
jecxz
adc
cld
lcall
adc
call
mov
inc
scas
mov
adc
adc
popf
xchg
pop
int
leave
mov
jge
in
push
imul
xchg
add
mov
pop
cmp
stos
pop
mov
js
cmp
je
adc
int3
push
stos
in
aam
lcall
out
mov
outsb
mov
lcall
or
mov
sbb
mov
insb
sbb
loopne
in
jg
stos
fnsave
test
xor
xchg
or
pop
ret
mov
stos
sub
push
pop
stos
imul
mov
subb
shr
or
jle
divb
push
xor
fld
out
int
xor
out
adc
popf
pop
pop
mov
inc
or
or
jns
fisttps
or
lcall
sbb
ss
shll
lret
and
pop
xchg
sub
mov
nop
jns
mov
popf
add
rorl
jg
jle
popf
orps
clc
enter
mov
pop
inc
sbb
adc
adc
fisttpll
add
push
es
shll
mov
lret
repnz
mov
add
or
int
mov
data16
aaa
stc
xor
mov
xor
pop
iret
push
nop
pushl
jl
jg
jmp
or
inc
arpl
shrb
mov
imul
pop
mov
enter
xor
sub
lds
aaa
frstor
jnp
sahf
lods
fbstp
cwtl
mov
divb
push
call
das
lock
ret
xchg
pushf
jle
shll
jmp
dec
adc
pop
jg
or
hlt
ret
mov
and
add
stos
cs
das
int3
addr16
in
int
jb
add
xchg
icebp
movsl
pushl
popf
sub
je
aas
inc
mov
jno
add
mov
sbb
std
fistl
mov
pushf
push
sbb
ss
jecxz
ja
dec
out
cli
mov
les
jnp
popa
or
mov
push
dec
adc
lods
int
add
xchg
aam
fucom
add
insl
shrl
loopne
fidivrs
jecxz
sub
aad
mov
and
adc
mov
add
div
mov
es
pop
mov
mov
jne
jbe
mov
outsl
pusha
inc
imul
lods
sbb
mov
cmp
test
jno
imul
outsl
sub
out
push
stc
nop
ficomps
or
loope
xor
pushl
xor
cmc
pop
mov
sub
mov
add
mov
jbe
in
int
push
je
and
jb
sbb
mov
shrl
int3
pop
pushf
or
inc
and
lea
mov
add
pusha
mov
pop
sub
cli
push
test
imul
call
mov
sbb
sbb
sbb
push
sub
pop
mov
or
add
cmp
push
cmp
daa
inc
andl
lret
inc
adc
inc
xchg
mov
out
sbb
loope
shrl
cli
aaa
call
ja
jmp
in
xchg
adcb
push
pop
dec
stos
sahf
jne
subb
cmp
add
iret
imul
movsl
and
dec
mov
add
xchg
push
or
jle
fbstp
mov
and
jg
cmp
push
sbb
jb
or
and
inc
shll
adc
xchg
cmp
xchg
xchg
add
imul
ds
mov
out
jmp
fildl
cwtl
mov
dec
pop
test
pop
inc
mov
inc
adc
test
test
push
sub
shll
mov
mov
out
movsb
push
push
in
pop
dec
popf
push
test
sub
sub
fidivrl
xchg
cs
or
jg
sbb
ds
and
jge
std
insl
mov
mov
pop
lahf
in
mulb
jmp
iret
das
icebp
pop
adc
fs
mov
lods
push
dec
mov
push
push
imul
xrelease
imul
jmp
add
shl
push
outsl
iret
jge
or
fadd
jle
jmp
dec
push
push
pop
in
int
and
pop
sbb
aaa
ret
mov
mov
out
lcall
mov
jmp
mov
pmaddwd
mov
hlt
mov
mov
push
shl
cmpsb
sbb
dec
push
loopne
xchg
imul
test
aas
mov
dec
cmp
ret
cmp
or
imul
popa
lea
cmc
movsl
leave
sti
jmp
mov
roll
dec
dec
add
pushf
movsb
mov
pop
out
addl
inc
cmp
mov
push
ja
lahf
push
cld
push
cld
xchg
xlat
xchg
inc
je
dec
das
or
inc
fidivrs
pop
mov
jo
jb
jl
outsb
sub
gs
cmp
sti
xor
loop
jb
lock
jae
mov
fstps
out
adc
ljmp
loope
rcrb
pushf
push
inc
xor
xor
fsub
dec
aad
lcall
mov
cmpsb
stc
xchg
dec
xchg
ret
scas
jb
xor
add
add
mov
mov
xchg
rorl
icebp
ljmp
call
shlb
daa
out
pop
insb
cmpsl
js
and
das
scas
inc
dec
ljmp
add
and
push
dec
xor
jp
xchg
inc
mov
inc
or
out
push
push
cmp
call
cmp
rol
push
mov
fucomip
repnz
fs
or
push
clc
dec
push
jp
fisubl
xor
xchg
push
and
mov
mov
add
cltd
mov
pop
decb
stc
cmp
mov
xchg
repnz
mov
inc
in
cmp
gs
inc
je
pop
popf
xorb
jg
enter
idivb
jb
test
sbb
add
cmp
sbb
fdivr
jno
sbb
icebp
pop
sti
mov
jno
loop
sbb
mov
inc
jne
insb
mov
daa
int3
dec
sbb
sub
fisttpl
xor
flds
sbb
inc
mov
dec
stc
cltd
sbb
mov
xlat
dec
push
or
mov
or
push
outsl
incb
addl
cmp
cmp
mov
movsl
pop
fbld
cltd
shrl
mov
pushf
and
xchg
in
notl
jnp
push
loop
cmp
test
inc
test
scas
cmp
js
adc
mov
adc
xchg
jbe
push
cmpsb
aad
sub
push
push
mov
mov
mov
jns
orl
dec
mov
icebp
and
cmp
fldt
push
ljmp
cmp
inc
and
loope
or
lock
add
push
adc
in
jbe
test
scas
push
stc
cmpb
lods
test
push
inc
dec
out
xlat
or
gs
shrb
pop
testb
mov
xchg
cmc
lods
or
ljmp
xor
sbb
rolb
sbb
push
adc
mov
mov
lcall
lods
mov
mov
adc
sub
or
xchg
stos
js
cmc
add
orb
push
inc
push
lock
xchg
iret
in
out
call
push
xchg
stos
lcall
hlt
clc
pop
nop
fprem1
inc
pop
popf
sbbl
sub
push
sbb
dec
fsubp
push
jle
push
xor
imul
push
aad
xor
mull
add
rcrl
dec
imul
stos
stc
call
mov
pusha
shlb
shlb
je
in
mov
add
or
jnp
loopne
rcrb
scas
push
mov
jp
sti
add
adc
pop
dec
cmpsb
pop
and
pop
lds
xor
rorb
cs
negb
data16
add
cmp
dec
pop
xor
into
es
addr16
ds
push
je
pop
inc
les
fidivrl
sbb
jecxz
sahf
cmc
sti
repnz
sbb
dec
fwait
int
cmp
test
daa
test
xchg
xor
inc
sbb
test
lahf
test
sahf
cmp
mov
dec
sbb
pop
inc
cli
movb
in
cmpsl
dec
daa
mov
pop
xchg
hlt
push
sbb
imul
enter
jg
mov
xchg
imul
cmp
nop
add
pop
shlb
lret
addr16
shlb
sahf
leave
pop
or
popf
cmpxchg
dec
ds
fnsave
adc
push
loop
jne
out
sub
std
out
adc
movsl
push
fsubrs
ljmp
jne
jne
outsl
rcrb
inc
jbe
jns
jecxz
mov
repnz
dec
push
int3
arpl
cmp
add
jmp
cli
and
mov
xlat
lahf
inc
push
lods
xor
data16
cwtl
pusha
jnp
repnz
in
mov
sbb
sbb
xchg
out
xchg
iret
push
lods
cmp
sub
sub
adc
jb
mov
testl
addr16
sbb
test
sub
jb
sub
mov
cmp
fimull
sbb
imul
mov
push
ss
into
mov
push
int
insb
loope
sbb
js
sub
jmp
cs
orl
lods
cmp
pop
ret
xchg
test
mov
shl
out
inc
dec
pop
dec
mov
in
xchg
inc
scas
ror
xchg
out
fcomps
sbb
xor
xor
mov
stos
xchg
jae
ja
rcll
test
mov
dec
lods
je
pusha
pushf
jge
gs
repz
push
stos
lret
lcall
inc
cmp
shl
sbb
dec
jae
pop
pushf
mov
fisttpll
cmpsl
addb
cwtl
jbe
rolb
movl
cmpsl
arpl
adc
jnp
pushf
cmp
enter
jp
paddusw
dec
lds
mov
and
and
in
pop
in
stc
mov
push
push
insl
pop
and
stos
cmpsb
rol
cmp
imul
fisubs
jno
shlb
mov
jae
fbstp
arpl
ljmp
adc
out
xchg
into
mov
ljmp
jecxz
std
mov
xor
pop
cmpsb
dec
sub
std
xor
dec
mov
rcrb
pop
or
push
imul
fdivrl
mov
push
lahf
mov
les
in
pop
or
shlb
pop
xor
inc
mov
fs
in
fsubs
nop
loope
in
lret
rcll
loop
push
sbb
inc
jb
push
ret
cltd
push
pop
mov
flds
and
push
mov
push
xchg
fldenv
pop
dec
cmp
xor
mov
repz
out
cld
mov
nop
xor
and
add
lock
mov
lods
pop
movsb
fsubs
mov
popf
pop
push
sti
jnp
imul
roll
test
jno
xchg
ljmp
test
ss
cmp
dec
test
ret
cs
rorl
fadds
and
cltd
xchg
and
jl
mov
xor
sahf
cmp
xchg
in
mov
adc
dec
pusha
jne
cmp
xlat
push
xlat
or
out
sub
mov
pop
aam
fldenv
mov
test
inc
movsl
mov
js
sbb
sub
call
in
mov
xchg
repnz
inc
imul
pop
cmp
imul
mov
xlat
and
lods
insl
adc
push
dec
lea
stc
fcmovb
in
mov
ljmp
out
xor
addl
adc
dec
aam
imul
sbb
fs
mov
fisubl
pushl
int3
push
loope
les
rclb
xor
xchg
nop
mov
outsb
lcall
lcall
adcb
sbb
nop
shlb
in
jo
loopne
cmp
inc
imul
xlat
inc
xchg
dec
js
mov
fcoms
in
jmp
mov
push
cmp
test
leave
test
flds
mov
pop
sub
xchg
mov
dec
push
or
sbb
sbb
icebp
aaa
test
hlt
dec
cmp
pop
testb
mov
scas
mov
aas
testl
and
imul
std
adc
roll
js
sub
cmp
sub
adc
mov
mov
mov
xor
outsb
push
sub
mov
pushf
call
dec
pop
lods
mov
loopne
insb
sub
lods
mov
fbstp
inc
aad
popf
pop
outsl
inc
insb
inc
dec
mov
sbb
add
mov
fstl
pop
addr16
inc
inc
pop
dec
push
cli
mov
out
or
jnp
mov
push
aas
clc
leave
sbb
sahf
pop
sbb
or
dec
adc
lret
pushf
ja
aad
push
aaa
daa
jne
repz
nop
or
incb
in
pop
nop
mov
mov
loopne
shl
pop
enter
mov
mov
xor
mov
jo
mov
loop
fdivrp
jbe
mov
sub
jge
stos
pop
sbbl
repz
loop
dec
cmp
pop
push
mov
dec
out
fisttps
pop
push
test
push
enter
push
inc
add
test
xor
bound
iret
jmp
xchg
inc
mov
xchg
fildll
test
je
sub
imulb
arpl
into
iret
mov
adc
and
fnstenv
inc
lods
sub
inc
sbb
frstor
mov
bound
nop
lcall
scas
cmp
mov
ror
mov
sar
out
inc
mov
bound
pop
adc
pushf
nop
icebp
adc
push
test
mov
push
es
mov
cmp
add
pushl
cmp
mov
xchg
aad
xchg
imul
or
xchg
mov
cld
dec
adc
sub
js
cmc
dec
jb
scas
nop
mov
rep
mov
rcrl
cmp
xchg
pop
loopne
ficomps
cmp
push
cwtl
hlt
stos
push
loop
pop
cmp
pop
imul
push
rclb
mov
xor
jae
ljmp
or
xor
cltd
fists
add
mov
mov
shr
mov
pop
xchg
movsl
lock
add
or
jle
lahf
adc
scas
shlb
dec
movb
xchg
cmpsb
lds
daa
push
pop
stc
movsl
push
cmp
aaa
jle
ret
jmp
pop
pmaxsw
ja
xchg
jp
or
dec
adc
jecxz
mov
fildll
aam
push
mov
jo
bsf
and
out
cmp
mov
push
sub
stos
iret
stc
daa
jp
in
jge
pop
adcb
xchg
adcl
mov
or
repz
pop
bnd
fldenv
pushf
and
mov
dec
pop
cld
xchg
mov
xchg
push
subl
or
xor
push
call
sub
xchg
push
stos
jb
lcall
sti
mov
and
insl
ljmp
mov
dec
sbb
push
jle
aad
fdivs
add
in
jecxz
or
cmpsl
mov
jmp
dec
lock
mov
jmp
xorb
stos
shrb
sub
mov
aad
pop
xchg
mov
xchg
push
insb
stos
ljmp
imul
in
xor
push
or
add
jmp
ja
mov
outsl
sub
push
cmp
cmp
or
ds
mov
std
xchg
fcompl
imul
xchg
inc
cld
call
lods
addr16
pop
jns
jecxz
mov
pop
cs
popf
les
outsb
js
cli
xlat
inc
repnz
cmpsl
andb
push
cld
aas
mov
int3
jne
or
lcall
mov
mov
sti
xor
in
aad
mov
inc
xchg
xchg
out
xchg
lret
mov
push
mov
lahf
mov
les
ret
js
xchg
mov
sub
push
movsb
std
inc
movsb
jb
push
push
add
dec
sahf
jns
cmpsb
jg
fwait
xchg
jle,pn
adc
sbb
inc
daa
dec
pop
push
outsb
mov
cs
pop
mov
xchg
std
jecxz
sbb
inc
leave
rcll
std
add
adc
faddl
int3
data16
mov
iret
dec
cmp
into
shrb
adc
insl
dec
loop
jp
das
leave
imul
or
ret
xchg
mov
mov
push
je
inc
dec
pop
aad
adc
xchg
add
fwait
lret
cmp
scas
sub
arpl
roll
cmp
lds
fsts
int3
mov
ss
or
mov
addb
loopne
mov
ret
cmp
or
inc
pop
fpatan
ljmp
loope
repnz
pushf
ss
adc
pop
lret
add
dec
lcall
mov
aas
xor
cs
out
sub
adc
push
xchg
adc
pop
stos
in
xchg
jmp
pop
cmp
pop
xor
sahf
ror
jmp
cmp
and
popa
cwtl
pop
clc
mov
mov
pop
or
xor
cmp
pushf
xchg
arpl
or
mov
fmuls
repz
scas
std
roll
popa
rcl
ficompl
in
jno
pop
or
fstpl
cltd
movsl
inc
gs
lea
imul
add
push
outsl
shlb
inc
loopne
sbb
insb
add
rclb
sbb
xor
movsb
jno
scas
test
mov
or
sub
xchg
mov
es
sbbl
les
sbb
js
cltd
test
jns
ret
mov
ret
andb
lea
inc
scas
cmpsb
test
pop
stos
dec
pushf
push
aad
mov
mov
in
insb
xor
cmp
nop
das
xlat
dec
pusha
stos
aam
out
stos
scas
mov
xorl
jno
leave
int3
sahf
subl
fistpll
fnstcw
adc
or
mov
addr16
mov
sbb
mov
and
jmp
ja
sahf
loope
shlb
es
adc
sub
or
fs
jne
mov
fwait
out
repz
cmpsb
sub
int3
mov
add
pusha
inc
inc
arpl
mov
dec
test
pop
mov
sub
mov
jne
insl
xor
cmc
repz
dec
enter
xchg
bound
pop
js
lds
enter
cmp
je
fnstsw
fcoml
add
xchg
adcb
das
and
insl
add
lods
pop
aas
mov
loopne
add
pop
push
or
in
xchg
es
aaa
sbb
cmpsl
outsb
mov
push
adc
add
data16
dec
xlat
add
out
fwait
push
xchg
dec
xchg
int
mov
rcl
loop
into
mov
pop
jae
shll
lret
mov
or
out
add
cmc
in
inc
cwtl
lods
ret
jae
sub
popf
xchg
mov
add
das
add
dec
push
out
and
arpl
lret
outsl
mov
out
test
fucomi
mov
stc
push
adc
or
pop
xchg
imul
lret
xor
fmull
insb
pop
sub
inc
js
bound
push
mov
in
adc
iret
adc
lcall
add
add
daa
dec
lds
rcll
jbe
push
mov
jo
and
nop
popa
push
iret
rcl
xchg
mov
push
ljmp
nop
repz
stos
pusha
sarb
icebp
sbb
sub
lods
push
lcall
aaa
push
push
mov
iret
stos
out
ja
mov
and
flds
in
xor
cmpl
push
add
mov
adc
jmp
xor
adc
xlat
lods
mov
aam
cltd
lea
sub
cmpsb
test
sub
je
mov
imul
shlb
loope
push
fists
jno
sub
push
std
mov
cmp
sub
popa
xor
push
inc
jae
sub
inc
popa
inc
call
adc
mov
das
pop
cmpsl
add
jnp
adc
mov
pop
bnd
mov
cli
add
inc
shl
cld
jecxz
test
cs
mov
stos
aaa
decb
jl
mov
add
lret
int
je
loopne
add
xchg
int
lret
inc
fnstcw
mov
jnp
fisttps
xchg
and
pop
pusha
mov
js
imul
addl
dec
push
or
jge
addb
sbb
clc
inc
adc
fiaddl
xor
inc
jo
cmp
pop
cmp
movsl
mov
jl
pop
rcr
inc
stc
outsl
add
mov
movsb
adc
pop
jle
mov
inc
in
insl
mov
dec
push
jmp
pop
std
adc
mov
inc
jp
shr
xchg
push
jb
add
xchg
cmp
fsubs
cs
mov
imul
andb
sbb
pop
push
adc
popa
out
jmp
lahf
push
mov
xor
jnp
popf
sbb
int3
adc
and
mov
pop
stos
adc
cmovp
test
repnz
lea
ja
scas
jae
ss
lahf
jbe
cltd
int3
cmc
jl
aaa
inc
and
mov
popa
lods
mov
dec
inc
mov
aaa
sbb
mov
pop
fisubs
mov
stc
jmp
aad
jecxz
pop
cld
cmp
push
movsl
jmpw
sub
lods
bound
inc
lcall
sbbl
jmp
jnp
xor
out
jl
inc
jbe,pt
jmp
lds
movsl
gs
mov
sbb
cmp
pop
outsl
stc
xchg
sti
pusha
js
jno
ret
xor
mov
mov
inc
ds
aam
xchg
sbb
mov
inc
sbb
int
mov
mov
outsl
out
sub
pop
mov
push
cli
push
stos
cmpsb
lcall
sti
xlat
repz
dec
pop
lock
mov
xor
icebp
mov
mov
das
mov
xchg
in
fcoml
dec
add
call
adcb
and
mov
sahf
xchg
cmp
stos
mov
jno
outsb
repz
or
nop
lea
mov
in
fldt
into
cmpsb
xchg
dec
and
jne
or
insl
cmpsl
mov
inc
in
sbb
ficompl
push
enter
mov
pmulhw
shl
mov
jecxz
addr16
pusha
pusha
lahf
xchg
lods
cmp
inc
mov
addr16
jb
ds
dec
mov
lods
or
std
adcb
andb
cmpsl
test
test
in
repnz
add
iret
sbb
mov
push
lret
push
mov
mov
iret
and
jnp
sub
pusha
into
cld
lcall
test
xchg
fwait
and
insl
pop
fucomi
hlt
cmp
nop
jmp
inc
pop
inc
in
mov
ljmp
cmp
into
popf
sbb
nop
out
add
mov
sbb
pop
test
mov
mov
dec
mov
xor
xor
sbb
mov
dec
adc
les
pop
leave
push
jge
sbb
push
stos
loope
push
adc
out
mov
iret
sahf
es
orb
cmp
jg
adc
sub
adc
push
fisubl
aad
sbb
lahf
pop
pop
ja
movsb
jnp
lret
mov
mov
dec
fstpt
filds
call
and
insb
out
ret
aad
loopne
push
roll
movsl
mov
cmp
insl
fnstenv
xchg
pusha
dec
sub
inc
lret
jmp
or
adc
or
jge
js
scas
aad
or
lcall
pop
aad
and
jmp
mov
jg
sub
loope
inc
xchg
mov
xchg
cmp
jge
leave
xchg
cpuid
imul
inc
lahf
inc
stos
ds
out
sub
jae
dec
dec
pop
mov
push
jg
adc
dec
pop
push
mov
xchg
cmp
mov
test
nop
lock
pop
mov
jo
and
pop
mov
fwait
lods
aam
cld
jmp
pop
inc
xor
jo
loop
ljmpw
dec
cmc
pop
xor
dec
pushf
aam
jmp
ja
or
popf
sub
pusha
xor
cwtl
cmpsl
loopne
mov
xor
adc
push
or
loopne
fistps
fsubl
jmp
out
fimuls
mov
sub
sbb
in
cli
test
imul
jne
sbb
and
rol
mov
pop
adc
fiaddl
lds
push
sub
mov
stos
cs
jp
push
loopne
sub
add
or
ret
xor
ficoms
and
inc
aaa
lods
fwait
dec
loope
into
push
mov
rcrb
sub
lret
mov
and
in
rcll
repnz
push
in
and
adc
cmpsl
test
pop
jns
mov
icebp
dec
popl
pop
idivb
xchg
stc
mov
lods
mov
jmp
bound
inc
andb
cmc
sbb
fstps
dec
cmp
push
xchg
jmp
jge
call
cmc
xchg
leave
iret
mov
jge
xor
and
mov
or
inc
xchg
push
add
cmp
pop
cld
movsb
lock
test
sub
int3
push
lret
push
pop
mov
sti
dec
stos
jge
cmp
rcl
ficomps
jg
push
pop
aas
out
adc
movsl
xchg
sbb
jmp
mov
and
imull
mov
or
cmp
jbe
fisubs
adc
jns
jbe
je
push
mov
inc
mov
pushf
inc
mov
nop
dec
push
outsb
lea
sub
in
add
dec
mov
pop
push
adc
xor
sbb
push
cmp
xchg
lea
je
pushf
repnz
xchg
cmp
xor
sbb
jecxz
cmp
mov
jg
xor
adc
mov
scas
cmp
gs
cltd
leave
ja
mov
xchg
stc
pop
pop
cli
call
aas
mov
dec
repz
into
mov
ss
jmp
fisubrl
and
in
dec
ret
outsl
out
adc
movsl
xor
int3
push
xchg
lock
sub
cmpsb
jp
pop
mov
push
inc
pop
aas
mov
iret
inc
leave
hlt
sbb
sub
lods
daa
dec
xor
inc
call
push
lahf
movsb
lcall
mov
mov
push
ds
lea
or
aad
mov
fidivrs
jl
dec
lcall
in
scas
mov
adc
push
movl
mov
fwait
cmp
dec
sbb
pop
cmp
pop
je
out
jmp
aad
dec
jmp
inc
jmp
dec
out
jno
adc
out
inc
adcl
lahf
mov
and
mov
mov
pop
outsl
dec
push
mov
testb
movsb
movsl
sbb
ljmp
stos
mov
mov
mov
inc
and
aad
sub
nop
out
xchg
ror
jb
adc
jg
lret
pusha
je
or
mov
idivl
push
jl
mov
iret
rolb
pop
adc
enter
jb
xchg
repnz
jmp
ds
cld
mov
or
mov
dec
sub
mov
inc
push
lcall
ret
dec
stc
ret
mov
sbb
repnz
aas
sub
xor
jae
imul
push
scas
xor
lds
nop
sbb
outsl
jno
sub
push
pop
hlt
jl
fsubr
push
insl
dec
cwtl
movsl
xchg
sub
fmull
fsubrs
hlt
mov
jle
xchg
arpl
aas
sub
mov
pop
lret
mov
repz
jmp
mov
aas
jb
movsb
mov
mov
mov
xchg
mov
fs
jne
cmp
ljmp
push
loopne
add
mov
pop
into
icebp
or
cli
movl
addr16
gs
mov
popa
push
in
push
aam
inc
xor
and
jle
stc
mov
clc
lds
fucom
mov
test
loopne
fcomp
jg
gs
sbbb
arpl
dec
sbb
dec
sub
stos
sbb
lahf
lds
dec
and
je
hlt
in
sbb
cmp
or
rolb
rclb
mov
jno
pusha
fdivrl
xlat
lds
jbe
addl
dec
xor
clc
ss
sub
andb
enter
cltd
shlb
rcrl
ds
movsb
dec
pop
adc
add
sub
push
mov
cmpsb
ret
cmp
cwtl
pop
add
repnz
mov
imul
xchg
pop
jge
nop
stc
dec
add
xor
rolb
and
cmp
call
aaa
adc
dec
and
and
out
push
jmp
xchg
mov
lods
imul
cmpsl
enter
pusha
xlat
test
in
or
out
mov
adc
push
mov
xlat
adcl
dec
repnz
iret
xchg
mov
int
cmpsb
das
push
gs
into
jge
xchg
iret
adcl
push
mov
fdivs
mov
addr16
xor
cs
into
adc
mov
jno
dec
mov
push
jne
into
cmp
loop
insb
int
xchg
sbb
push
pop
add
mov
in
mov
inc
das
pop
push
dec
inc
cmp
inc
ss
xor
jns
in
int3
fisubl
jb
dec
call
xor
pop
test
mov
jp
pop
pop
xor
es
xchg
jno
mov
in
mov
das
es
aas
fnstsw
lret
ja
les
xchg
mov
test
aaa
out
std
repnz
movsb
rorl
rclb
jno
mov
push
xlat
test
shlb
adcl
je
fsubs
xchg
jbe
sbb
dec
jno
sub
ret
cs
shll
mov
sub
and
push
jg
movb
pop
mov
js
stos
in
xchg
push
and
leave
and
hlt
mov
shll
dec
adc
push
adc
adc
loopew
mov
pop
adcl
mov
test
mov
add
fisubrs
popa
aas
sub
aas
aas
lds
xor
mov
adc
push
ljmp
mov
dec
xor
pop
xchg
mov
inc
jl
cld
in
xchg
mov
mov
xchg
or
jo
stos
xlat
hlt
push
sub
xchg
stos
xchg
and
test
sahf
jo
stos
mov
adc
sbb
add
xchg
ret
fadds
shll
aas
inc
pop
sub
enter
sbb
inc
mov
loopne
xor
xor
scas
push
mov
arpl
or
jo
sub
cs
pop
or
popa
pop
adc
push
leave
repnz
mov
mov
fildl
lds
sti
dec
lods
mov
jo
inc
add
adc
test
push
js
mov
cmp
aaa
dec
imul
sub
pop
pop
jp
js
mov
mov
jne
push
add
rcll
or
jnp
mov
clc
mov
iret
add
ljmp
outsb
insl
inc
stos
test
call
mov
and
fucom
mov
mov
out
add
jns
jge
cmp
into
ret
pop
xchg
or
test
cltd
fdivl
dec
es
mov
int
pop
xchg
adc
cltd
jg
jns
cmc
mov
sarl
mov
xchg
rorb
ret
mov
push
jl
pop
push
sbb
gs
sub
int3
mov
mov
push
stc
test
loop
std
xchg
jl
push
rcll
jg
stos
mov
jnp
jg
push
xchg
jecxz
ret
rcll
push
outsb
cmp
pushf
inc
sbb
in
inc
push
jge
in
shrl
cltd
xchg
iret
inc
xlat
cs
outsl
xchg
adc
sbb
cmp
mov
jne
aam
outsb
imul
scas
pop
cs
out
in
pop
sub
dec
mov
push
push
cmp
jp
jbe
aas
pop
cmpsb
pushf
ret
rorl
lret
cmpsl
stc
flds
fsubl
out
dec
lods
daa
fsub
xchg
lock
inc
pop
jmp
jo
outsl
lcall
and
aam
inc
push
in
jmp
out
pop
dec
enter
into
addb
pop
in
negb
scas
jo
movsl
pop
stc
cli
dec
lock
dec
pop
sahf
aad
xchg
sbb
idivb
inc
sti
adc
in
movsb
cwtl
jnp
testb
inc
add
jmp
pop
jp
or
lea
push
xchg
mov
fwait
xor
mov
and
nop
jmp
sbb
pusha
in
gs
adc
or
jge
loope
xchg
jmp
dec
inc
adc
lahf
pop
sub
adc
push
push
inc
add
pop
mov
sbb
fs
xorl
shl
push
cmp
mov
jne
stos
fs
ret
test
sbb
mov
out
mov
cli
out
lds
cmp
idivl
int
addr16
icebp
jle
mov
das
inc
cmp
lods
xchg
roll
arpl
xor
mov
xor
loopne
xlat
push
cmc
jnp
and
or
jnp
stc
sub
push
mov
cmpb
push
rorb
dec
test
xchg
scas
mov
adc
push
mov
popa
or
aaa
or
mov
aam
inc
xor
scas
xlat
add
xor
or
loopne
push
pop
sahf
push
mov
push
repz
sub
int
mov
sahf
and
ss
inc
seto
test
push
inc
fistps
iret
dec
inc
lret
jno
dec
mov
cmpsb
outsl
popa
insb
adc
in
jno
mov
out
ja
dec
testb
jl
enter
popf
lret
xchg
clc
cltd
pop
rcll
jl
mov
int
xor
dec
or
jne
jno
aad
into
sti
push
adc
and
outsl
sbb
pushf
pop
push
sub
xor
je
pop
out
add
test
fisubrs
sub
sahf
loop
mov
fstps
xchg
pop
aas
lods
incb
jbe
mov
xor
repnz
pmuludq
in
xorl
jg
neg
or
push
stc
flds
jp
jbe
sub
pop
cs
lret
and
int3
mov
push
shlb
movl
sub
gs
les
test
icebp
in
cmpsl
inc
dec
lods
les
inc
cmp
clc
adc
push
in
sti
mov
loopne
jmp
adcl
repz
icebp
jb
mov
push
shlb
dec
arpl
and
sbb
repnz
pop
mov
sbb
dec
sahf
add
pop
pop
cmp
xor
in
aam
in
inc
mov
push
push
xor
sbb
xor
int
adc
adc
add
and
mov
test
ss
clc
xor
cltd
xchg
sti
mov
lret
adc
pop
ss
pop
adc
sbb
sbb
imul
je
push
jp
sbb
and
sahf
pop
mov
adc
push
mov
mov
lret
mov
insb
js
add
hlt
test
repnz
mov
adc
scas
test
lret
fists
into
test
jge
xor
xlat
xor
pushl
ret
jns
test
mov
leave
add
lock
push
jmp
pop
scas
pop
mov
add
aad
mov
inc
enter
xchg
push
ljmp
cmp
xacquire
sbb
stc
decb
mov
decb
xchg
stc
inc
pop
dec
loope
adc
jbe
push
inc
fldl
cmc
sbb
add
and
popf
mov
or
pop
pusha
mov
test
paddw
addr16
sbb
aas
mov
jecxz
pop
lock
pusha
ret
and
jns
pushaw
or
push
dec
mov
iret
je
loopne
cmp
icebp
ret
push
inc
popa
cwtl
add
dec
and
pop
lret
loop
test
jmp
adc
lret
jge
test
mov
pop
into
or
in
dec
jbe
dec
sub
shl
rcll
lret
clc
and
jb
adc
mov
pop
xor
stc
inc
sub
push
push
push
xchg
xchg
into
xchg
add
cmpsl
fcomps
xchg
cmp
sub
push
cmp
add
cmp
cmp
adc
jb
xchg
jge
mov
insb
dec
mov
cmc
mov
cwtl
and
mov
pop
pop
imul
dec
adc
lods
pop
mov
out
cmp
pop
fnstcw
jecxz
cwtl
outsl
or
aam
ret
sub
fdivl
je
jp
mov
sti
dec
fadds
cmp
imul
popf
jecxz
shrl
hlt
loop
mov
dec
fwait
add
xor
sbb
dec
xchg
lret
shlb
sbb
loop
mov
je
shll
clc
jb
fcompl
dec
sub
mov
jecxz
in
adc
xchg
hlt
popa
adc
inc
jbe
push
cwtl
mov
add
sbb
nop
test
test
mov
pmovmskb
adcb
out
mov
xchg
aam
in
jbe
std
inc
sahf
xor
sti
mov
out
xor
cmpsb
jmp
pusha
loope
fs
mov
rorl
xchg
push
push
and
mov
jns
pop
mov
xor
aad
xchg
fcmovu
fdivrs
lds
in
frstor
adc
cmpsl
adc
mov
xchg
sub
fnsave
incl
jae
in
gs
cmpsl
and
test
test
dec
ret
xchg
out
cmpsl
cmp
xchg
aad
das
lea
push
insl
sub
clc
xor
mov
shl
sbb
xchg
mov
pop
mov
xor
jne
cmc
cld
and
lods
jbe
jl
mov
hlt
std
xchg
dec
mov
pusha
ds
push
mov
pusha
lods
in
imul
adcb
insb
addr16
int
jno
jb
out
stos
add
rolb
lea
addb
cmp
lea
stos
and
adc
repnz
xor
mov
int3
les
daa
mov
rorb
imul
dec
jp
outsl
fists
mov
dec
movsb
or
mov
add
xchg
lret
mov
mov
mull
mov
lds
out
aad
int3
bound
addr16
pop
push
jl
inc
xchg
sub
rcll
fcoms
add
push
leave
popf
outsb
cld
stc
xor
push
mov
cmc
jne
xchg
fs
imul
idivb
jbe
fnstsw
stos
fdivrl
outsb
or
out
push
pop
loop
ds
sbb
adc
pop
repz
in
pop
adc
into
out
jb
testb
cmp
add
int
push
xchg
add
test
jp
pop
sahf
scas
and
and
xchg
ss
xchg
shll
loope
cmp
mov
sbb
inc
cmp
shll
imulb
xor
loope
mov
push
test
mov
rorl
inc
bound
sti
jl
or
lea
mov
loop
daa
and
and
cmpl
scas
cld
fidivrs
mov
mov
xlat
jle
mov
push
bound
xchg
jbe
pop
xchg
mov
loop
arpl
cmp
loope
mov
mul
pop
mov
rolb
push
inc
nop
add
pop
mov
lahf
les
loope
fnstcw
outsb
sbb
mov
xlat
pushf
mov
imul
jmp
xor
lea
add
cmp
fcmovb
mov
pop
into
lret
push
aaa
pop
ret
shlb
popf
xchg
int3
into
xor
loop
jmp
dec
cmp
xchg
adc
das
mov
mov
fcom
xchg
loopne
int
mov
sbb
mov
loopne,pt
imul
rcl
jmp
xchg
sbb
mov
dec
jmp
rcll
pop
jmp
cmp
and
mov
xor
outsb
cs
mov
add
cld
dec
call
xor
insb
pushf
or
cmp
jae
into
xor
aaa
push
jle
jae
rolb
push
dec
adc
xchg
mov
push
into
jmp
pop
pop
testb
xchg
stos
sbb
sarb
pusha
mov
mov
std
jbe
pop
inc
in
call
popl
pminub
add
mov
cmovs
jb
lea
je
sbbw
movsb
lods
jnp
xor
fsubs
lods
pop
xchg
or
sbb
mov
pop
enter
test
das
mov
loope
mov
outsl
adc
mov
fstpt
pushf
xor
in
adc
add
mov
sarl
repnz
movsb
xor
mov
cltd
ss
scas
repnz
divl
mov
and
xor
cmp
daa
xchg
xchg
cmpsl
inc
mov
movzwl
pmaddwd
sbb
pop
dec
dec
out
into
sub
sbb
xchg
fstpt
mov
subl
ds
jno
repnz
je
push
pop
popa
popa
cmp
fbstp
in
or
outsl
ror
push
jge
outsl
mov
and
into
add
push
adc
pushf
test
xorl
gs
dec
mov
into
pop
xchg
mov
add
jb
imul
pusha
stc
add
jbe
and
loopne
test
loopne
jns
jae
jbe
push
xchg
mov
xor
loopne
lret
das
push
push
pop
push
xchg
adc
pop
decb
mov
leave
ss
mov
lods
insl
cld
xlat
cs
push
std
out
dec
es
sbb
inc
fisubl
out
or
int
adc
imul
add
je
and
lahf
movsb
pop
lret
fidivl
ror
cld
xchg
jne
pop
div
in
out
mov
pop
in
push
fiadds
rcll
xor
aaa
xor
or
mov
ret
lods
fidivs
mov
push
adc
push
cmp
mov
cmc
mov
add
xor
jp
movsb
pop
scas
push
jge
divl
push
test
mov
sub
xor
out
xchg
jne
int
fsubr
int
mov
sub
insw
mov
jno
sbb
and
gs
mov
out
imul
pop
pop
sbb
cwtl
adc
or
lret
adc
inc
ja,pn
pop
out
aad
clc
mov
or
lods
mov
ret
aas
jp
das
movsl
cld
pusha
sbb
jbe
popf
ret
cmp
lret
mov
inc
xchg
lcall
das
sub
test
out
adc
fdivr
or
jg
sub
lahf
mov
pop
sbb
sbb
cld
and
test
orb
movsl
insb
jnp
shl
or
cmp
movsl
lods
clc
movsl
les
adc
movb
sbb
xor
xor
mov
push
movsl
and
add
daa
shrl
insb
das
andl
sarb
xor
lods
dec
pop
xor
cld
sti
dec
and
or
xchg
mov
push
lods
outsl
orb
mov
jmp
cltd
gs
inc
jb
fnstcw
push
inc
inc
fiaddl
sbb
pop
loope
xchg
lret
xchg
aas
iret
out
in
popf
jbe
jns
lret
or
sub
int
mov
sbb
mov
xchg
pop
repnz
aam
outsb
mov
mov
jns
sub
jge
xchg
rcl
or
je
into
mov
xchg
lods
xor
mov
mov
dec
xchg
add
jae
outsb
out
repnz
lret
push
add
push
scas
inc
nop
jno
mov
inc
aas
xor
xchg
xchg
push
fistpll
cs
jo
inc
add
mov
or
mov
testb
push
inc
mov
aaa
xchg
sub
outsl
add
jp
inc
cmp
popf
aaa
fwait
pop
imul
sbb
divb
loop
sub
jnp
jb
mov
xchg
xorb
les
out
mov
aaa
push
mov
imul
sub
add
jmp
shlb
push
mov
xchg
sub
push
xor
insb
mov
daa
sub
cmp
inc
adc
add
ja
loope
js
repz
jne
mov
fwait
pop
in
pop
dec
mov
cmpsb
mov
dec
jbe
sbb
push
xlat
cltd
lds
xor
outsl
dec
cmp
xlat
and
int3
rcll
in
aaa
push
lahf
out
adc
nop
and
xor
repnz
jb
sbb
les
sbb
call
cld
cmp
repz
aaa
sbb
icebp
lahf
xor
cmp
push
dec
int3
in
add
cmpsb
or
or
popa
ja
mov
mov
mov
cmpsl
push
cmpsl
std
lods
or
jmp
dec
stos
dec
mov
xchg
fcmovbe
sub
pop
add
test
movsl
das
push
ljmp
jl
mov
inc
or
test
rclb
push
mov
cmp
lock
xchg
inc
pop
rclb
mov
push
mov
test
sub
push
mov
in
xor
or
ja
andl
inc
cmp
mov
mov
jmp
mov
sbb
ja
xchg
pop
and
outsl
xor
cmp
or
lods
cmp
add
mov
out
popf
sbb
movsb
ljmp
sbbl
pop
fptan
ss
sub
mov
shll
dec
push
and
popf
jg
adc
loope
mov
jle
jl
mov
jnp
dec
ret
cmp
dec
xor
pop
mov
lahf
pushf
dec
jle
int3
inc
mov
incb
push
pusha
mov
rorl
ja
int3
or
cmp
or
int3
sub
cmp
adc
ds
lret
cmp
mov
dec
inc
in
repnz
sub
sahf
pop
push
xchg
jmp
repnz
mov
addb
in
mov
lock
call
test
pop
mov
fstl
fwait
add
scas
test
cmpsl
fdivs
aaa
popa
push
cmpsb
pop
jnp
shl
mov
push
push
fdivrp
hlt
push
push
xchg
cmc
fs
mov
ret
int3
fwait
xor
pushf
dec
xor
mov
xchg
cmp
popa
fwait
push
pop
repz
mov
iret
gs
out
loop
jle
sarb
ficomps
dec
push
xchg
jne,pt
xchg
jge
jbe
out
and
icebp
mov
rolb
icebp
outsb
stos
and
jecxz
test
xlat
and
imul
mov
mov
xchg
orl
js
je
add
mov
mov
cmp
jmp
icebp
cmp
leave
xlat
aam
cmp
add
rcrb
sub
in
hlt
arpl
jbe
mov
and
aam
dec
mov
out
mov
lds
lea
push
cwtl
dec
lds
lahf
out
movsl
fwait
xchg
lea
in
lret
out
sub
shlb
das
jge
js
jae
stos
std
sahf
pusha
lahf
dec
outsl
xor
movsl
les
lds
xlat
out
fistpll
pop
aad
out
jge
jge
mov
push
test
push
leave
es
ss
nop
or
push
rcrb
fists
mov
or
add
loopne
ljmp
lock
pop
add
jbe
leave
ret
mov
in
loopne
push
push
insl
int
mov
push
jae
into
hlt
dec
ficomps
xor
or
enter
jecxz
and
aas
and
ds
mov
out
push
cmp
pusha
arpl
fs
mov
pop
rcrl
fsub
mov
xchg
add
testb
mov
popf
lock
lods
sub
mov
sub
push
ds
cmp
bound
cmp
jae
dec
out
jno
std
cmp
and
mov
pusha
pop
popa
dec
adc
pop
add
xchg
popf
inc
lcall
sbb
fidivrl
pusha
scas
lods
mov
cs
daa
or
cmpsl
in
cmovle
scas
pop
inc
je
dec
sub
test
jge
orb
ljmp
dec
roll
add
sbb
sub
std
stos
pusha
inc
shlb
imul
mov
fcomps
push
mov
dec
out
inc
xor
mov
out
cwtl
sbb
sbb
sarl
mov
cmc
loop
ret
idivl
cmp
xor
cs
pop
test
or
lods
imul
dec
push
fs
rclb
jnp
mov
pop
lods
jmp
or
cmp
sub
and
jl
jle
or
shlb
push
js
rorb
mov
and
jae
or
fmull
mov
je
mov
push
scas
add
jnp
mov
hlt
mov
jbe
xor
icebp
popf
mov
sub
sti
mov
xor
scas
leave
and
inc
cmc
xor
adc
icebp
lcall
lahf
movsb
sti
ss
int
push
sub
sbb
cmp
bound
hlt
sbbb
into
lret
xchg
or
xchg
out
jmp
push
addr16
in
das
icebp
lock
popf
fstl
mov
jnp
add
aam
arpl
nop
add
scas
xor
movsb
adc
cwtl
popf
cmp
out
mov
int3
sub
jne
sahf
hlt
jp
and
in
lcall
aad
test
fcoml
mov
adc
cmc
xchg
jnp
push
sbb
add
out
cmc
inc
jmp
inc
adc
test
push
insl
adc
jle
sahf
or
push
ja
aam
xchg
popf
bound
mov
lret
rep
sub
sub
jae
repz
loop
popa
cld
sbb
movhps
cltd
std
repnz
in
je
int
ss
cmpsb
rorl
ret
push
mov
inc
dec
add
enter
jmp
adc
imul
rolb
push
push
xchg
mov
xchg
cmp
cmp
pop
stos
cmpsl
shl
sahf
out
pandn
sub
cmp
xor
inc
fistl
popf
or
ret
fwait
cmpsb
xchg
xlat
mov
and
dec
lret
push
or
sti
xchg
or
stos
into
fisttps
subb
and
iret
sub
lods
insl
leave
sarl
mov
out
dec
push
sub
test
xchg
dec
mov
icebp
das
loope
mov
push
mov
frstor
popf
sub
mov
rcr
pop
popf
rcr
xchg
lcall
xchg
fisttpl
scas
out
and
adc
mov
add
imulb
sbb
sbb
in
gs
push
lds
sub
pop
out
mov
mov
adc
fsqrt
out
shr
movsb
insl
pop
pop
cwtl
pushf
xchg
and
and
pop
aam
fsts
xchg
dec
loope
pusha
or
add
test
arpl
or
cmp
jns
les
add
cmp
movsb
adc
bound
cmp
mov
insl
outsl
sub
fs
dec
push
sti
movsl
add
sbb
sub
and
pop
xor
scas
cs
das
and
leave
push
adc
jns
xor
fs
xchg
xchg
cmp
popa
dec
mov
int3
sarl
xchg
outsb
int
insb
sbb
xchg
in
xchg
or
jb
cmpsb
xor
add
sub
in
mov
adc
mov
push
xchg
xor
stos
adcl
pop
pop
mov
xchg
mov
dec
sbb
sahf
mov
fldt
stos
icebp
clc
push
pop
xchg
sub
sbb
xchg
jmp
aad
stc
outsl
xchg
jmp
pop
jp
aam
jle
mov
data16
inc
outsl
mov
ret
mov
xor
fmull
jp
xor
sbb
mov
mov
xchg
mov
ljmp
jle
mov
xchg
fbstp
fisubrs
stc
and
mov
jno
add
mov
inc
sar
xor
movsb
sub
ret
shlb
insl
mov
clc
mov
dec
and
aam
push
jle
insl
lcall
push
pop
stos
ret
movsl
iret
push
scas
mov
add
std
mov
pop
pop
cmpsl
mov
jmp
dec
mov
sbb
xchg
push
leave
mov
mov
cs
enter
mov
pusha
iret
addr16
dec
loopne
cmp
xchg
rcr
lret
rcrb
out
sub
cmp
mov
aad
pop
clc
jns
adc
xor
sarl
sbb
inc
sbb
clc
pop
lahf
jl
dec
enter
xor
pop
aaa
adc
or
pop
adc
xchg
les
push
mov
add
in
incb
sbb
or
inc
cmc
loope
inc
stc
inc
cmp
stos
mov
repnz
cmp
loop
push
fdiv
fcoml
adc
filds
push
mov
sbbb
outsb
das
push
cltd
ss
das
pop
std
or
jge
mov
pusha
sahf
hlt
popa
mov
insb
pop
test
fwait
xor
xchg
scas
idivb
inc
rcrb
jbe
jns
pop
into
push
sbb
sbb
jae
mov
ret
lds
add
std
cld
fsubrs
and
aam
sarl
ds
jl
push
fstpl
ror
sub
jb
aam
dec
xchg
and
sub
test
pop
insb
inc
cli
aam
sbb
and
mov
in
pop
fwait
and
arpl
adc
fstpt
incb
cmpb
aas
out
pop
shlb
push
test
addl
das
inc
sbb
xchg
cmp
dec
mov
push
jmp
xchg
cmp
leave
arpl
bound
push
or
pop
mov
das
pop
adc
push
insb
jge
test
rorl
movsl
pop
dec
or
shll
inc
pop
iret
int3
jb
sbb
mov
adcl
xor
jp
outsl
addr16
inc
adc
rorl
xchg
mov
nop
loopne
push
cs
cltd
push
pop
andb
data16
outsl
sub
ret
pusha
std
stos
ret
cmpsl
push
leave
and
daa
out
add
add
loopne
insb
sahf
push
lds
aam
int
loop
pop
sub
cltd
outsb
xchg
jmp
out
cmp
pop
pop
mov
lret
addb
outsl
lods
fsub
addr16
jo
inc
cmp
in
pop
mov
mov
cmp
fadds
outsb
xor
mov
out
cmp
outsl
ret
or
stc
jp
jae
xor
push
lcall
jmp
pop
sbb
push
aam
and
insb
mov
mov
push
int3
dec
or
xchg
cmp
dec
pop
mov
stc
ss
mov
cmp
mov
mov
adc
bound
jge
incb
popa
inc
cli
leave
xor
or
mov
jne
dec
fwait
rorb
arpl
inc
cmpsl
adc
ja
mov
pxor
movaps
out
aas
fmull
daa
lcall
nop
cmp
stc
das
xor
loop
mov
je
xchg
inc
cs
adc
and
pop
scas
dec
push
shlb
inc
and
mov
jmp
push
inc
hlt
sbb
xchg
sti
imul
pop
aam
into
sub
outsb
daa
mov
loopne
hlt
js
mov
popf
mov
add
xor
xor
addr16
loope
pop
movsb
js
jle
jne
leave
jge
loopne
jle
nop
fldenv
and
push
jbe
xchg
je
out
hlt
pop
push
cmp
sbb
sub
cmp
adc
push
mov
mov
or
mov
mov
leave
sti
add
sahf
enter
insb
dec
sub
sbb
push
jmp
repnz
xchg
mov
add
inc
or
xor
das
jbe
dec
xchg
inc
leave
in
adc
dec
xlat
or
xchg
mov
es
sahf
bound
xor
add
mov
xchg
ficomps
or
xorl
imul
rcrl
sbb
enter
ljmp
add
sub
lahf
fdivrl
jmp
sub
jns
sub
mov
add
sub
push
sub
jg
ja
cmp
pop
adc
int3
pop
test
cs
cmc
adc
test
push
pop
pop
out
dec
call
int
scas
xchg
outsb
fistl
mov
in
cmpsl
out
cmp
and
cwtl
pop
push
clc
icebp
xchg
subl
pop
jne
cld
mov
outsl
data16
xor
orb
mov
and
cmpsb
mov
sub
cltd
mov
xchg
add
ret
and
mov
outsb
sub
arpl
or
and
addr16
scas
cmpb
enter
es
mov
aad
sbb
adc
lods
cmpsl
shlb
push
call
mov
xchg
in
mov
lret
push
das
mov
or
add
cltd
xchg
xchg
adc
addr16
in
lds
push
out
pop
xchg
sub
leave
mov
ret
ret
inc
or
sbb
mov
out
lret
insb
aaa
push
xchg
xchg
dec
mov
es
xlat
sbb
jb
out
pop
xchg
xchg
dec
inc
push
xor
repz
push
mov
pop
xchg
sets
jbe
out
fwait
add
push
pop
xchg
cs
shlb
pop
pop
iret
sbb
xchg
cld
add
and
lret
ficomps
lods
aaa
fidivs
cltd
loopne
test
lds
test
jbe
mov
pop
and
pop
mov
jnp
inc
jle
inc
fdivrs
xchg
inc
fiadds
lods
dec
ljmp
aam
jmp
test
scas
sub
add
push
sbb
lods
lock
mov
and
rolb
mov
inc
lret
dec
fcmovb
push
jne
mov
sahf
loop
fadds
sbb
push
add
inc
popf
mov
cli
and
dec
xchg
out
and
imul
bound
scas
push
sub
cmp
xchg
add
hlt
pop
mov
mov
mov
clc
das
push
rclb
out
inc
clc
fwait
lcall
jle
mov
push
jae
frstor
std
repnz
xchg
das
test
mov
test
push
add
adc
sbb
ss
mov
es
ret
sbbb
rcr
push
jae
sti
mov
clc
mov
dec
xlat
mov
fidivs
clc
sub
movsl
dec
jle
dec
popf
sub
shrb
xlat
mov
inc
inc
jns
hlt
bound
mov
jbe
cmpsb
pminub
lgs
sub
xor
outsb
sbb
and
and
jecxz
pushl
dec
pop
icebp
dec
sarb
adc
test
add
add
sub
inc
mov
gs
dec
outsb
gs
jp
pop
js
xor
mov
addr16
cwtl
test
or
in
cli
into
scas
sbb
jge
pop
rcrl
dec
pop
imull
add
xchg
mov
inc
mov
sbb
data16
fiadds
add
dec
mov
inc
cs
sbb
jp
add
sub
xchg
xlat
js
add
and
inc
jnp
loop
repz
dec
push
mov
shr
in
adc
and
repz
push
out
sti
pcmpeqw
xchg
adc
mov
inc
in
lock
mov
mov
jmp
lcall
mov
les
in
mov
ficomps
inc
cmp
lret
into
call
push
sbbl
jecxz
dec
les
repz
jg
cs
lock
loope
xor
pop
xor
push
xchg
fs
mov
push
sti
jecxz
movsl
jne
dec
sub
push
das
ja
xor
aam
fsubr
sarl
inc
into
pop
test
pop
pop
adc
push
or
enter
adc
mov
inc
lock
lds
mov
out
inc
std
dec
mov
imul
jg
arpl
add
in
mov
or
cs
mov
cmpsl
mov
push
sbb
cmpsl
sbb
push
popa
and
pop
clc
jbe
sub
icebp
push
pusha
pop
pop
lcall
push
cmp
movb
jns
push
inc
mov
int
cmp
addr16
cmp
icebp
out
inc
out
push
dec
mov
imul
mov
nop
aam
sbbl
mov
lcall
sub
lret
mov
dec
or
sbb
jno
cli
mov
int
stos
fnstsw
leave
xchg
dec
mov
pop
test
push
testb
sub
lcall
pop
add
cli
mov
adcl
xor
jns
ret
test
mov
mov
gs
push
dec
sub
mov
inc
pop
dec
mov
movsb
and
mov
xor
loop
mov
and
dec
rcl
dec
ss
lods
out
scas
pushf
adc
or
int
cwtl
repnz
lods
aaa
jp
imul
cmp
incb
dec
popf
bound
add
lahf
xor
xchg
out
dec
pop
adc
je
push
rol
js
jno
xlat
pop
cmp
cmp
adc
push
xchg
mov
lea
fistps
fcom
mov
dec
scas
call
or
shlb
or
push
pop
push
movsb
mulb
sbb
mov
pusha
daa
sbb
fsub
cmc
cli
xor
and
cs
sbb
lock
sbb
movups
push
mov
cli
xorb
mov
or
pop
xchg
test
add
jle
insb
aas
add
dec
push
cltd
hlt
jno
outsb
add
xor
jnp
aad
rorb
or
rol
xchg
lahf
mul
shrb
xorb
enter
ss
xchg
ja
test
imul
hlt
mov
sbb
lds
outsl
add
lods
lods
cltd
mov
test
xor
loopne
sbb
arpl
in
bound
js
movsl
aaa
and
int3
jl
out
dec
mov
xchg
fisttps
mov
stos
inc
arpl
cltd
lods
ret
int3
xchg
ret
lea
fs
jg
mov
add
mov
aam
sub
jg
les
dec
mov
stos
lret
jae
xchg
pop
mov
sbb
xchg
cltd
sbb
ja
mov
jbe
or
sbb
mov
jl
daa
dec
xor
ss
add
test
outsl
fldcw
jmp
in
lods
hlt
push
cmp
test
in
or
push
lock
hlt
and
mov
xlat
xor
fisttpl
ja
cwtl
sub
subb
mov
loop
int
cs
jnp
popa
fwait
arpl
xchg
inc
pop
mov
xlat
stos
xchg
and
mov
pop
repz
les
cs
out
inc
in
sub
fdivr
add
push
xchg
push
xor
jp
insl
xlat
jle
pop
cmp
push
insl
or
mov
jmp
xchg
sbb
xor
adc
setle
mov
pop
xchg
ljmp
jecxz
mov
gs
sub
push
loopne
add
xlat
mov
test
gs
out
jg
xchg
int
loope
push
add
cmpsb
pop
pusha
mov
int3
jne
dec
xchg
mov
fdivs
sbb
movb
in
cmp
pop
pop
mov
loopne
rolb
data16
out
push
or
sbb
aas
fwait
incl
imul
in
and
dec
ljmp
cli
ja
dec
aam
sti
ret
xchg
mov
movsl
nop
mov
test
push
mov
lea
mov
pushf
and
scas
add
ret
push
mov
sub
inc
pop
adc
pop
push
sbb
into
sbb
scas
jno
dec
out
out
pop
aad
adc
push
cmpsl
adc
jp
test
int3
int
loope
sub
int3
mov
mov
addr16
popa
and
mov
jae
or
xchg
push
and
mov
ja
outsb
add
jne
bound
add
xchg
dec
sub
jp
cmpsl
arpl
sub
scas
mov
js
lock
and
sub
lock
pushf
enter
cwtl
xlat
repz
pop
dec
sub
insl
dec
cmp
jge
lret
and
insl
jns
add
push
dec
or
stos
dec
aad
fcompl
jnp
leave
sbb
shrl
arpl
fadds
js
loop
or
lahf
inc
inc
jbe
bound
inc
in
faddl
and
push
mov
jge
mov
subl
push
shlb
sbbb
push
inc
loope
scas
add
sbb
push
cmp
jbe
movsl
stc
ret
pop
push
daa
sub
ljmp
sahf
imulb
mov
sarl
or
enter
mov
out
pop
aas
xchg
repnz
inc
and
push
fists
xchg
mov
stos
inc
or
jno
stc
cltd
je
ret
add
int3
idiv
or
mov
push
xor
fdiv
cmp
shlb
xchg
shll
inc
push
add
jno
cmp
cmp
movsb
pop
sub
scas
xor
jp
aad
push
dec
popf
lahf
mov
mov
shr
cwtl
pop
push
pop
xchg
and
scas
cld
enter
adcl
mov
lods
mov
repz
pushf
or
test
and
lret
inc
inc
loop
outsl
outsb
ds
xor
mov
push
jae
scas
lods
dec
sti
das
pop
ret
pushl
add
out
jbe
into
xor
mov
int3
fisubl
push
sub
pop
cmpsl
mov
cld
mov
pop
and
or
mov
je
ljmp
xchg
adc
xchg
stc
jno
fs
divl
shrb
imul
mov
fucom
mov
pop
push
adc
adc
pushf
jbe
adc
nop
dec
call
jno
push
jae
sbb
out
xor
sub
es
xor
jns
aas
mov
cmp
popf
fstps
adc
cmp
mov
es
leave
jne
jl
int3
mov
ret
daa
lahf
xlat
jnp
and
fiadds
divb
dec
or
fisttps
cli
repnz
inc
inc
xor
pop
mov
addr16
scas
scas
clc
mov
jmp
pop
fistl
or
rorl
scas
inc
movups
inc
push
pop
pop
in
sub
jbe
mov
push
sbb
or
and
imul
stos
pusha
mov
or
jnp
nop
inc
lret
stos
xchg
shrl
jge
shl
int
adc
sarl
jb
vmovsd
fs
test
sti
dec
repz
push
xchg
es
xchg
xchg
push
inc
int3
loopne
and
mov
inc
stc
inc
lret
mov
test
mov
daa
push
xchg
insb
xchg
xchg
lea
in
or
ficoml
mov
add
insb
shll
cld
push
pop
stc
cltd
adc
das
pop
cwtl
pop
or
adc
dec
cld
test
mov
and
pop
out
stos
dec
mov
adc
aam
mov
inc
ss
mov
xchg
jne
mov
outsb
and
inc
in
icebp
les
cmpb
adc
push
movsl
cmp
inc
ret
stc
mov
mov
cs
scas
jl
out
sbb
xchg
test
mov
lret
and
lock
fisubs
sbb
ficomps
pop
gs
lret
dec
pop
es
or
mov
insb
push
mov
and
test
bnd
arpl
push
xchg
rcll
popa
sub
mov
decb
jge
cmpsb
cli
push
inc
push
adcb
xchg
add
jg
pop
scas
adc
add
loopne
dec
inc
shll
inc
cltd
jecxz
pop
imul
jne
xor
sbb
je
clc
push
call
pop
test
sti
sbb
jne
adc
les
mov
lods
out
mov
sbb
mov
stos
sub
loop
cmp
ljmp
mov
outsb
loop
mov
mov
movl
jo
dec
sbbl
pop
shlb
push
ds
lahf
jecxz
in
sbb
dec
pop
jne
mov
push
push
test
and
lcall
cs
rcll
pop
ret
cmpsb
ss
mov
das
cwtl
xchg
lds
adc
push
add
pop
or
or
loop
jb
mov
push
sar
xchg
mov
add
dec
dec
pop
jp
cmpsb
int
jns
push
xchg
in
sub
jb
jmp
sub
push
or
fiaddl
scas
lret
dec
and
inc
add
in
aad
pop
rclb
sbb
lcall
push
mov
movsb
roll
lcall
out
adc
stos
loopne
push
jge
inc
xor
jmp
stc
xchg
fadds
fs
sub
movsl
sub
sahf
pop
hlt
out
movsl
adc
xchg
dec
mov
xor
or
jp
mov
cmp
xlat
pop
add
cmp
frstor
mulb
adc
cld
cmp
into
addb
or
daa
rcrl
dec
cmpsl
push
sub
insl
ds
xor
aad
mov
imul
arpl
insb
loope
jno
out
push
cmp
and
pushf
test
movsl
and
push
cmpsl
mov
in
mov
test
flds
xor
inc
adc
inc
sbb
mov
mov
rolb
cmp
xor
cwtl
cltd
add
or
adc
push
adc
jae
or
int3
cmpsb
jge
jl
in
mov
or
jo
pop
dec
mov
insl
push
push
push
push
in
cmp
dec
int
ret
fnstenv
int
mov
jle
mov
lret
add
shr
mov
call
jo
pop
mov
ffree
jle
xor
and
stc
nop
gs
adcl
ss
mov
decb
pop
scas
daa
cmpsb
sub
hlt
int3
das
jae
js
popa
push
out
daa
sbb
lods
mov
loop
inc
rorb
cli
in
xor
cmp
jb
movsb
lcall
call
xor
push
pop
lret
push
cmp
test
jo
in
cmovl
ljmp
xchg
jp
and
sbb
cld
shll
jns
jae
jp
mov
out
cmc
stos
rcll
mulb
stc
mov
std
pop
cs
mov
fst
inc
mov
add
dec
sbb
repz
jbe
pop
mov
or
shl
dec
imul
fiadds
lret
push
leave
inc
inc
into
inc
addb
test
movsl
or
jmp
and
jns
mov
ss
sbb
mov
pop
fadd
out
push
rcr
jnp
adc
mov
xchg
xor
lods
mov
add
cmp
mov
sarb
sbb
or
test
insl
lods
cs
inc
jnp
decb
or
mov
inc
and
fsts
pop
mov
mov
jae
repz
test
sbb
dec
mov
pushl
imul
pop
and
pop
test
add
mov
mov
mov
stos
out
jo
loope
test
inc
and
add
xchg
hlt
lret
mov
add
and
loop
jne
add
push
xchg
sub
inc
cmc
dec
pop
incl
jns
cmpsb
and
and
cmp
jecxz
cmc
sbb
scas
sar
cmp
ret
icebp
ljmp
aam
or
daa
iret
inc
add
jp
fnsave
scas
outsb
jnp,pn
int
pushf
ret
repz
pop
mov
sbb
pushf
loop
cmpb
mov
hlt
xor
ss
xor
daa
push
push
xchg
fidivrl
xchg
cmp
push
lods
mov
push
jae
jb
jb
push
inc
mov
lahf
clc
xchg
jmp
add
clc
incb
out
xchg
mov
or
mov
add
call
repnz
fistpl
pop
int
xchg
xchg
sbb
dec
lock
push
and
imulb
popa
lds
fwait
and
mov
adc
xor
mov
xchg
mov
xchg
mov
push
adc
test
pop
xchg
or
inc
pop
mov
xor
das
and
hlt
cmpsb
pop
xchg
insb
or
std
loop
lret
xchg
dec
jg
subl
fadds
loopne
pop
mov
and
pop
rcrb
aam
les
addb
ja
mulb
outsl
not
jle
jp
shlb
fidivrs
fnsave
popf
sub
mov
icebp
and
xor
or
xchg
jecxz
addl
leave
cmc
je
hlt
pop
xchg
ljmp
fisttpl
sub
push
inc
xchg
shrb
or
pop
outsl
jecxz
adc
push
stc
jbe
cmp
popa
sarb
or
mov
mov
xor
cmpsl
pop
add
add
mov
test
roll
xlat
mov
out
jmp
in
js
out
mov
clc
xor
incb
mov
add
or
jge
cmpsb
xchg
push
jp
call
cmp
dec
fisttpl
pop
mov
pop
insl
pop
fs
push
and
or
mov
flds
mov
sub
jb
fstp
cmpsb
or
les
mov
mov
push
sub
roll
add
scas
int3
je
or
mov
jl
cmp
aam
mov
sub
sub
xor
sub
mov
xchg
fldl
scas
outsb
mov
out
outsl
or
mov
imul
sbb
xor
popa
jmp
out
lods
mov
sbb
lcall
and
aam
push
sbb
arpl
sbb
repz
fiadds
orl
inc
sahf
adc
scas
push
bound
ljmp
f2xm1
negb
and
lret
imul
mov
pop
jnp
mov
sbb
jmp
rep
imul
xor
repz
mov
mov
outsl
mov
aad
xor
movsl
ret
jge
jmp
addl
ret
dec
jl
add
nop
cmp
movsl
push
movsl
xorb
mov
jmp
dec
xor
sbb
ljmp
push
daa
daa
dec
repz
push
or
xlat
movsl
sbb
lcall
mov
fs
push
cli
or
movsb
filds
negl
cwtl
aaa
sub
and
mov
push
xor
dec
xor
mov
lea
ljmp
dec
add
fnstsw
loopne
sub
insb
xor
adc
dec
fidivs
jl
sbb
shll
push
push
or
jns
pop
pop
adc
mov
fisubl
pop
imul
or
or
mov
inc
popa
xlat
andb
in
xchg
popa
mov
mov
mov
fstpl
xor
inc
push
addl
lea
xchg
sahf
out
push
into
sub
xor
rcl
aad
xchg
test
rcll
and
xor
pop
cmp
mov
out
cmp
jo
mov
and
andl
jbe
xor
daa
pop
frstor
rcll
cmp
adc
leave
into
cmp
mov
pop
add
and
push
adc
in
adc
and
xchg
cmc
push
pop
push
mov
dec
lds
dec
stos
cmp
scas
aaa
sbb
jno
mov
xchg
mov
and
xchg
jecxz
mov
jg
xor
test
int
push
mov
aad
leave
or
arpl
fdivl
mov
cmp
stos
test
and
fs
jns
xchg
sub
jecxz
in
sub
dec
clc
cltd
iret
dec
sbb
dec
sub
sbb
or
mov
xor
aad
cld
push
movsb
xor
xlat
mov
cmp
mov
push
gs
iret
dec
add
inc
cmp
sbb
adc
div
adc
into
mov
out
int
and
out
outsl
push
int
icebp
test
lds
dec
xchg
aam
mov
loope
arpl
aas
addb
push
adc
inc
adc
rdmsr
inc
pop
mov
div
ljmp
cmp
push
incl
insl
inc
xlat
add
xor
adc
fimull
lods
add
adc
scas
mov
add
cmp
sbb
adc
fiadds
lods
or
mov
inc
gs
dec
add
sub
mov
cmpsb
jecxz
lds
lods
lret
arpl
cmp
sub
xor
adc
popf
cmp
sbb
add
mov
mov
add
inc
aad
test
mov
pusha
sahf
das
movsb
jge
out
hlt
lds
mov
dec
cmpsb
sub
movl
add
mov
jbe
mov
add
les
sbb
loope
popa
mov
test
movb
les
mov
popf
lahf
xchg
mov
cwtl
in
cmpsb
iret
test
fdiv
stos
test
arpl
jnp
inc
aas
hlt
int
stc
and
sbb
adc
adc
cmp
cmpsl
popf
pop
sbb
ja
sbb
xlat
fldt
jns
scas
jns
ds
imul
mov
jge
scas
stos
mov
jp
xor
aad
fistl
mov
jmp
outsl
rclb
ret
and
jle
or
xor
outsl
pop
dec
incl
pop
js
jne
or
in
sub
aaa
scas
fwait
pop
ljmp
or
jns
bound
loopne
cmp
pop
mov
mov
in
inc
sub
dec
ficompl
shll
dec
adc
test
xor
ret
std
jb
mov
gs
ja
jne
pop
or
cmp
mov
push
push
dec
sbb
es
pushf
xor
mov
sahf
sbb
jb
arpl
push
and
jns
xor
gs
mov
xchg
aaa
pushf
lahf
clc
inc
push
pop
and
xchg
mov
stos
mov
xchg
rorl
xor
pop
into
push
cmp
jecxz
mov
fs
in
js
es
aas
dec
add
adc
pop
rcll
or
ja
or
cmpsb
out
ds
rcll
jns
jmp
push
mov
pop
add
cmc
les
clc
mov
sub
ret
mov
adc
iret
mov
jle
xor
sub
mov
pop
fsubs
dec
inc
jns
mov
xchg
jmp
test
imul
dec
sub
xchg
lcall
cmp
js
cwtl
and
adc
mov
loope
adc
mov
setle
fldenv
dec
lds
mov
std
daa
jmp
aad
pop
mov
jp
outsb
inc
das
sbb
lcall
imul
dec
cmp
cwtl
rolb
sbb
test
jnp
xor
hlt
xchg
or
fiaddl
cmpsl
enter
xor
je
clc
pop
popf
mov
out
mov
xchg
scas
inc
movsb
iret
in
cmp
sbb
add
data16
loop
xorb
ljmp
scas
xchg
inc
pop
jbe
cs
subl
adc
xor
or
es
sbb
xchg
loope
das
scas
leave
xlat
adc
cmpsl
test
je
push
and
call
jns
mov
std
aas
std
adc
push
sub
mov
aaa
sbb
jl
add
mov
cli
pop
test
dec
add
addb
popf
jbe
out
xchg
outsl
imul
and
test
pop
add
cmpsb
cmp
and
loope
int3
mov
aas
ficoms
xchg
imul
cmpb
and
or
int
imul
pop
sar
es
lds
push
mov
lcall
lods
imul
jne
mov
outsb
out
xchg
push
ja
insl
cmp
adc
xchg
movsb
push
fmuls
jge
shl
pop
rcll
jp
mov
lret
popf
xor
popf
or
inc
dec
das
out
ss
cmpsl
into
loope
ret
nop
xor
imul
inc
dec
mov
rol
xor
js
in
or
inc
pop
pop
pop
jmp
sub
mov
pop
push
jg
repz
inc
inc
aad
add
sub
dec
mov
xlat
sahf
aad
jno
test
insb
scas
faddl
sub
out
jge
and
mov
mov
inc
cmp
test
les
fs
out
popl
arpl
call
sti
jne
lods
sbb
push
jp
nop
pop
test
sbb
popf
inc
xor
add
inc
in
jge
or
xor
xchg
or
xchg
fwait
sbb
cmpsl
jmp
push
stos
add
or
pop
xchg
cli
cmc
es
orl
lds
mov
sti
fisttpll
xchg
enter
aam
daa
pop
sbb
mov
sub
lahf
lds
xchg
cmpsl
mov
mov
arpl
imul
rep
popa
insb
cmp
std
out
test
and
sbb
ss
test
jb
in
loopne
rolb
push
mov
xlat
or
inc
pop
ss
push
sbb
cmp
cmpsl
fdivs
shlb
imul
jmp
flds
addl
shll
xchg
sti
sbb
into
or
and
ret
mov
jmp
hlt
outsl
ret
dec
repz
outsb
dec
aam
inc
sub
enter
pushf
rol
sahf
sbb
stos
mov
js
in
pop
push
aad
inc
adc
cli
iret
jecxz
shlb
and
cmc
sub
cmpsb
jg
mov
mov
dec
pop
mov
fdivr
jnp
rcll
gs
add
inc
fwait
stos
aad
mov
sub
sbb
xchg
pushl
jecxz
push
mov
test
scas
insb
xor
add
and
adc
push
jp
sub
sti
mov
fwait
mov
out
aaa
iret
movsl
inc
test
movsl
pop
xor
jno
and
mov
and
nop
inc
cmp
lock
push
pop
rcrb
sbb
xor
std
and
roll
hlt
into
sub
or
imul
lahf
lcall
lret
jl
cs
push
popa
lock
leave
test
ljmp
lods
out
daa
arpl
mov
dec
sbb
dec
repnz
dec
sbb
in
cmp
xor
test
cwtl
mov
mov
testl
jno
or
popf
jg
mov
mov
adc
sub
sub
add
das
sub
mov
aaa
xor
gs
push
sbb
push
mov
xchg
sbb
xchg
and
stos
mov
and
inc
pop
push
mov
or
lods
jecxz
jae
loop
mov
mov
mov
lret
insl
int
mov
and
push
test
fs
test
and
aad
dec
add
lock
or
jb
mov
xchg
inc
dec
sti
mov
xor
je
mov
jb
push
adc
fbld
jns
or
mov
jne
repnz
in
bound
and
adc
loope
xor
jecxz
xchg
xchg
jne
adc
mov
xor
gs
cmpsl
enter
jne
mov
cmp
icebp
out
aas
lock
sbb
clc
mov
lea
lahf
adc
std
push
push
or
cmp
and
lret
js
mov
fisubs
xchg
sbb
repnz
push
mov
mov
adc
fisttpl
mov
push
pop
hlt
stos
dec
lret
cmpsb
push
or
inc
loope
jns
mov
int3
xchg
and
or
sti
test
bound
scas
mov
xor
fiadds
dec
jecxz
mov
daa
addl
lea
mov
dec
cmp
and
and
rclb
enter
push
and
mov
pop
or
mov
rcr
jns
addb
into
pushf
or
lahf
pushf
jae
addr16
adc
mov
add
out
ljmp
cmp
cmp
adc
or
inc
dec
addr16
jo
and
xor
jo
cmp
mov
pop
mov
xchg
adc
repz
lcall
imul
mov
jne
rclb
dec
dec
daa
inc
jmp
incb
jp
repz
arpl
cmc
dec
ja
cmp
or
lods
jo
les
pop
les
les
leave
ljmp
popf
pop
xchg
lret
lods
in
cwtl
popf
cmp
inc
jb
mov
push
add
mov
sub
aas
sub
lock
xor
pusha
push
inc
les
ret
js
pop
scas
testb
je
jbe
negb
xor
sub
mov
push
mov
js
mov
stc
cmp
dec
je
ds
jae
adc
int3
ja
outsb
xor
pop
repnz
xchg
or
mov
out
adc
or
das
xor
mov
cmp
insb
mov
cmp
sub
lret
jo
movsl
or
pop
mov
and
xchg
add
mov
or
negl
mov
int3
dec
in
lock
mov
sbb
fwait
jge
sub
xchg
or
add
frstor
cwtl
test
fs
xor
lock
aam
das
outsl
xchg
aas
fcmovne
pop
adc
sub
cmp
add
push
mov
mov
clc
dec
test
sbb
mov
xor
js
sbb
std
bound
fisttpll
rclb
or
out
jno
in
je
fdivrl
jne
test
cld
pop
iret
mov
cmp
insl
cmp
push
ret
es
pop
inc
dec
push
xor
iret
sbb
icebp
adcb
xchg
cmp
jmp
dec
sbb
call
jge
cmp
adc
stc
jg
and
xor
cmp
jbe
jb
push
clc
adc
aam
inc
addb
out
das
mov
aaa
sbb
dec
inc
stos
imul
or
addl
xchg
adc
jnp
jb
std
mov
cli
and
fisttps
mov
cmp
push
and
and
xchg
test
sbb
inc
adc
adc
or
sub
push
or
es
or
aam
push
stos
cmpsl
mov
clc
push
jne
push
and
add
pop
clc
enter
icebp
loope
lret
rorl
fdivs
mov
jp
inc
movsb
xor
push
aad
or
pop
out
and
or
jnp
aad
outsl
repz
push
push
insl
in
inc
cmp
subb
mov
or
lea
stos
stos
sbb
mov
xchg
sti
daa
push
cld
aaa
mov
cmp
sbb
fsts
cld
rorl
jp
add
mov
lea
jmp
loope
loopne
jmp
out
or
cmpsl
push
popf
nop
dec
ret
pushf
or
enter
insb
in
mov
jbe
jg
xor
roll
test
insb
testl
js
ss
outsb
repz
sti
aam
inc
aad
and
addb
mov
rol
out
push
pop
cmp
addr16
pusha
dec
xchg
sbb
bound
inc
xchg
cld
xchg
jp
or
or
fs
mov
cmp
lretw
cmp
mov
push
adc
rclb
stc
lahf
cltd
dec
dec
pop
pop
jmp
pop
xchg
cmp
gs
push
inc
push
out
icebp
dec
pop
lock
sub
mov
hlt
insb
in
outsl
fists
insb
adc
sub
add
insb
aam
incb
aas
or
pop
pop
mov
and
filds
xor
or
loopne
je
roll
mov
pop
loopew
rcrl
test
js
movsb
cld
jle
mov
xchg
or
je
push
pop
mul
fcomps
scas
outsb
xchg
imul
mull
popf
aam
out
lds
xchg
lea
pop
cmc
sbb
aad
das
ret
or
lcall
inc
jmp
cmp
add
xor
fnstenv
icebp
push
pop
pop
jg
int3
movl
pop
sbb
mov
inc
test
mov
xor
and
out
add
sti
std
not
in
aas
shl
movb
rcr
inc
jae,pt
mov
sub
xor
mov
and
sub
push
jp
push
lods
call
sarl
jne
movsb
addl
jb
mov
insl
cmp
and
mov
add
fnstsw
bndldx
push
dec
cmpsb
xchg
rcrl
out
popa
jbe
jl
fwait
jae
pushf
fwait
rolb
mov
int
xchg
add
imull
out
add
in
scas
sub
push
lcall
mov
inc
out
call
fistl
push
or
push
dec
push
xor
in
and
out
cmpsl
or
mov
mov
lods
push
mov
fwait
fs
pop
sbb
xor
scas
mov
xchg
ss
sub
jae
sti
xchg
mov
or
jmp
cld
jg
jp
bound
add
in
lret
sbb
icebp
push
sub
push
arpl
push
insb
fbstp
daa
jbe
jg
repz
and
fsubrl
pop
push
les
iret
ret
jns
pop
add
out
jg
in
sub
xor
sbb
xchg
cmpsl
mov
rcrl
pop
mov
pop
sarb
mov
jle
rolb
jnp
testl
xchg
pusha
jb
mov
jo
push
iret
in
mov
pusha
sbb
gs
jmp
cmp
jae
dec
movsb
lahf
xorb
adc
sbb
dec
xchg
adc
mov
shll
stos
orl
xor
int
fists
in
test
hlt
xchg
xchg
out
sbb
or
leave
mov
mov
dec
popf
xor
add
xchg
adc
adc
and
jne
mov
clc
not
idivb
sbb
or
jae
test
test
jecxz
imul
xchg
inc
mov
test
popf
jbe
cs
jae
xchg
add
fnsave
adc
push
fwait
pop
sub
fwait
movsb
cmp
mov
dec
subb
mov
stos
dec
pop
int
imul
pop
mov
mov
je
inc
mov
inc
sarl
xchg
push
adc
pushf
sbb
rclb
jo
scas
inc
mov
js
inc
pop
js
cmpsl
hlt
add
sub
jnp
mov
int3
mov
xchg
jns
or
inc
and
stc
add
fs
ss
fstpt
mov
push
or
xchg
ret
sbb
sbb
test
xor
inc
fidivrs
adc
out
outsl
jecxz
ret
out
ja
imul
shl
jmp
mov
push
sub
imul
and
xchg
mov
cmc
adc
or
xor
pop
int3
fwait
lods
test
cwtl
dec
bound
cmp
mov
sub
add
pop
jp
packuswb
fists
dec
push
cmpsb
ja
dec
cmp
lcall
cvtps2pd
gs
in
data16
cmp
pop
jno
or
push
lahf
loopne
xor
cld
fisubl
mov
fs
push
push
sti
js
inc
call
xchg
or
lods
mov
sarl
hlt
jg
cmp
sub
mov
das
add
cmp
mov
push
mov
mov
mov
imul
mov
lcall
lods
scas
icebp
jnp
push
push
cmp
mov
dec
fsubs
pop
daa
xchg
jno
jnp
data16
jo
mov
mov
jg
pop
ss
fsub
mov
push
jp
sti
push
scas
xor
jns
push
imul
cltd
dec
add
dec
test
inc
sub
fucom
inc
cltd
mov
dec
push
sub
adc
int3
mov
cmp
cltd
xchg
push
shll
popf
sahf
loop
mov
and
mov
cmp
testl
sti
test
xorl
cltd
and
xchg
sti
stos
rcrb
fcmovb
push
lcall
insb
mov
push
jp
push
inc
jg
fcmove
in
sbbl
xor
push
sbb
lcall
or
outsl
cwtl
subb
ret
push
repnz
fsubr
int3
hlt
lahf
xchg
icebp
xchg
cld
or
mov
dec
sub
fwait
daa
ja
cmp
cwtl
ret
mov
cld
dec
jge
or
xchg
push
xorl
sbb
lret
repnz
aaa
repnz
mov
ret
sub
dec
sahf
push
xchg
cmp
or
push
mov
into
add
lods
sbb
or
movsb
sbb
xor
imul
mov
mov
leave
outsb
sub
int
add
push
sub
pusha
pop
shl
scas
add
popa
dec
pop
cmp
mov
mov
jbe,pt
push
pop
aaa
lock
insb
xor
lret
sahf
cmp
cmpsb
addl
mov
mov
rorl
jno
clc
cmpsl
xchg
pop
xlat
lahf
outsb
outsl
vmread
mov
mov
mov
inc
ja
lock
addr16
jbe
lret
fdivp
das
sbb
int
sub
or
mov
mov
ret
xor
ret
sbb
or
je
jno
adc
adc
outsl
stos
shlb
fimuls
mov
repz
in
cld
mov
sbb
dec
or
fsubr
out
loope
push
daa
cld
mov
rcl
push
aaa
cmp
shl
nop
jl
xchg
cmp
sahf
imul
jge
test
icebp
pop
jl
push
or
fmulp
loope
pop
bound
sbb
pushl
push
sub
push
mov
movsb
in
and
lock
pop
imul
jns
pop
add
jle
pop
sti
mov
pusha
or
cmp
jns
loopne
push
sub
stos
imul
dec
js
es
jge
add
push
push
cwtl
call
sub
pop
adc
aad
pop
adc
test
jg
fisubl
insb
xchg
add
dec
in
add
pop
adc
add
stos
sbb
push
shll
push
es
sbb
sub
gs
mov
test
fwait
int
pop
jns
call
iret
mov
imul
jmp
push
jmp
fsqrt
mov
inc
stos
sub
xchg
shlb
mov
mov
xor
or
ss
jle
xchg
xchg
test
push
outsl
dec
jns
out
mov
mov
ja
add
sbb
ret
or
or
jge
cmp
cmp
lods
mov
sub
jae
push
and
and
cmp
mov
mov
scas
mov
rcl
test
dec
and
mov
mov
xchg
mov
xchg
rorl
sbb
inc
xor
imul
mov
lcall
or
jecxz
pop
outsb
in
inc
rcrb
in
add
mov
and
incl
jp
adc
stos
repnz
xor
dec
incb
test
sub
jmp
addr16
pop
cltd
jb
mov
ficoml
sbbl
popf
cmp
popa
dec
popa
ret
push
movb
jl
movl
and
outsb
in
into
in
push
rol
inc
out
movsl
inc
or
outsb
push
and
cmp
and
xchg
xchg
adc
xlat
sub
aam
mov
cmp
sbb
inc
mov
ds
or
pop
add
shlb
inc
pop
push
nop
idivl
out
adc
and
jae
mov
lds
xchg
and
aaa
jbe
and
insl
lret
out
subb
enter
into
mov
xchg
xchg
dec
mov
inc
or
mov
bound
leave
push
mov
pushl
add
movsb
fadds
or
jne
xchg
mov
push
cwtl
test
repz
ret
lods
rorb
jns
and
pandn
in
pusha
or
lcall
adc
push
aas
out
jne
subb
arpl
xor
daa
inc
inc
xor
test
xor
fidivrs
insb
pop
inc
mov
cwtl
cld
cmp
sbb
mov
pop
neg
cmp
or
jnp
test
mov
push
adc
icebp
cmp
inc
testl
stos
shll
push
adc
fwait
aaa
ja
insb
adc
arpl
aas
mov
jae
jl
call
outsb
jecxz
jg
loopne
mov
mov
jns
jle
std
adc
pop
mov
fsub
and
lods
popa
cwtl
sub
sub
add
push
aad
std
xor
jl
push
call
ficoms
fistpl
into
aam
pop
jo
adc
int3
dec
gs
test
lahf
imul
pop
xor
jb
das
mov
pop
hlt
fstl
popf
or
mov
ja
pop
jle
sbb
jno
in
jns
cli
bound
int
cltd
pop
push
adc
xor
fwait
xor
int
loop
les
xchg
push
mov
scas
in
inc
popf
mov
and
aas
xlat
lret
addb
inc
test
xchg
clc
imul
adc
xor
fnstcw
push
mov
mov
loopne
pop
popw
mov
mov
cmp
in
bound
xor
dec
or
add
cmpb
outsb
mov
enter
xchg
or
shll
es
pop
mov
pop
outsl
xor
loop
mov
movsb
cmp
lret
insb
aas
jno
dec
dec
dec
push
jge
pop
cmc
sub
mov
jns
insl
fistl
out
bound
jno
mov
lock
pop
mov
scas
icebp
jle
fsubrs
jne
xchg
inc
push
add
outsb
jne
cmp
add
and
daa
lock
dec
sub
cwtl
mov
adc
cwtl
mov
mov
and
lret
lahf
push
int
or
outsb
jo
xor
jg
jne
inc
adc
andb
add
repnz
cmp
jnp
add
fstpl
loop
jmp
cmovo
lcall
xchg
or
mov
sub
in
and
pop
adc
ss
jns
mov
jmp
cli
js
and
pop
fadds
mov
scas
pop
xchg
outsl
mov
jbe
sti
addb
and
fildll
mov
gs
loope
inc
pop
out
daa
mov
gs
into
aas
gs
add
clc
arpl
mov
mov
push
jg
lods
ficomps
aas
push
stos
jge
xchg
jle
popf
xor
mov
push
push
ret
push
fmul
or
sub
mov
mov
cltd
mov
ret
loope
repnz
out
iret
or
jae
push
popf
rclb
je
cmp
xrelease
lods
rorl
test
ds
xchg
mov
shlb
xor
jl
bound
push
and
call
sub
psrld
push
add
inc
pushl
ja
notb
clc
jno
in
jecxz
aad
stos
std
pop
mov
imul
or
and
xchg
push
and
in
aad
adc
dec
dec
les
jne,pn
xchg
push
sbb
add
fs
sbb
jb
mov
xchg
sub
fisttpll
push
pushl
push
fwait
daa
dec
mov
sbb
and
sti
push
mov
sbb
sbb
test
dec
das
mov
cwtl
js
pop
jno
in
sub
add
jmp
push
cwtl
mov
rcr
loop
scas
pop
js
stc
ret
cmp
xchg
sub
xchg
xchg
xchg
lcall
add
repz
sub
xchg
movsl
sarb
filds
subb
cltd
popa
mov
xchg
pop
in
adc
dec
add
pop
pop
sub
addl
outsb
stos
and
cmpsb
xchg
jnp
roll
lret
mov
ja
imul
cmc
mov
out
scas
sbb
sarb
xchg
push
dec
xchg
jnp
adc
cmp
sbb
push
shll
jb
xchg
xor
or
stos
mov
ss
xchg
adc
sub
mov
test
cltd
fidivs
test
jo
aas
cmpsl
inc
adc
insb
fxch
jb
iret
stos
jmp
fdivrs
loop
jne
and
mov
push
or
cld
clc
notl
pop
mov
cmpsb
inc
sub
jl
mov
and
xor
mov
or
dec
sub
popf
pop
add
and
or
adc
push
aad
xchg
gs
aam
movsl
leave
nop
or
sbb
arpl
popf
aad
fnsave
aam
push
adc
jne
test
nop
ret
push
fs
xchg
test
mov
mov
add
cltd
mov
pop
push
imul
pop
into
cmp
jmp
or
aam
lret
pop
leave
stc
ja
filds
inc
mov
dec
sarb
fdivs
ds
nop
and
mov
jmp
or
dec
cld
les
out
loop
gs
push
cmpsl
notl
daa
rcrb
sbb
lock
setbe
dec
add
sbb
or
jnp
int3
sbb
mov
enter
inc
testl
aaa
divb
aam
test
jne
js,pt
cmpsb
clc
fstl
cltd
imul
cmpb
adc
shl
cmp
jmp
shlb
cmp
mov
cltd
ja
js
test
jne
cmpsb
lcall
in
inc
aam
scas
sbbl
aas
mov
cmc
mov
int
sub
mov
pop
push
or
xor
jnp
out
sbb
jmp
repnz
popa
loope
jp
xchg
or
loop
and
mov
sub
cmp
or
fcom
fbstp
sbb
not
pusha
iret
adc
mov
inc
aam
cmp
dec
jmp
jp
std
js
or
cmp
inc
fsub
jno
inc
pop
dec
dec
add
nop
mov
jp
inc
jbe
dec
xchg
lock
dec
push
and
jbe
push
int
adc
arpl
xchg
push
pop
in
pop
mov
out
scas
fsubrl
pop
sbb
adcl
cmp
rol
xchg
repnz
adc
loope
xor
inc
sahf
in
xchg
mov
cmc
mov
in
iret
xchg
lock
ja
xchg
sbb
in
lahf
push
or
mov
sub
loopne
loope
adc
out
fs
scas
movsb
fld
sub
jecxz
iret
lcall
test
xlat
enter
sbb
adc
mov
cli
mov
add
jmp
ret
aad
push
icebp
test
xlat
jns
inc
stos
loope
sahf
int
dec
in
or
push
cmp
cmp
fs
mov
sbb
rorl
add
pusha
mov
mov
xchg
out
cld
int
or
jae
or
lcall
pop
fwait
jl
mov
ret
mov
inc
and
bound
pop
fiadds
enter
mov
ficomps
jno
das
testb
adc
lea
sub
push
cltd
int
add
ljmp
ret
or
or
mov
jnp
mov
imul
cmp
out
jo
mov
xor
in
jns
inc
or
jge
pop
leave
dec
mov
popl
dec
sub
outsb
push
std
dec
insb
xchg
dec
ret
in
packuswb
pusha
cmp
mov
fwait
jae
fidivl
mov
cmp
insl
inc
stos
sub
aad
dec
inc
mov
pusha
cmpsl
repnz
lods
mov
mov
push
xor
cmp
pop
xchg
pop
or
in
rep
lahf
xlat
iret
test
xor
nop
mov
rorb
push
movq
testb
cmpb
dec
adc
lret
loopne
push
pusha
out
jmp
sbb
lahf
negb
loop
out
jno
inc
mov
outsl
pop
in
push
jae
ss
std
aam
adc
mov
push
into
jae
sub
lret
xor
and
repz
mov
dec
push
jmp
movsb
popa
xchg
pop
and
ja
insl
mov
xchg
jno
pop
decb
jae
sti
scas
and
jno
dec
imul
push
rorl
testl
icebp
retw
ss
mov
mov
popf
jns
inc
and
call
add
imulb
cwtl
xchg
inc
imul
in
jl
rorl
rcrb
lds
inc
test
sbb
dec
mov
and
xor
lds
hlt
lahf
or
xor
inc
call
andl
xchg
xchg
jb
orl
mov
test
xchg
out
mov
fwait
decb
and
data16
fldl
lods
jmp
add
out
inc
push
mov
add
jg
cs
lock
lcall
cmpsl
pop
stos
fidivrs
mov
mov
mov
bound
scas
inc
lods
out
rcrl
subl
stos
movsb
outsl
stos
push
hlt
jmp
mov
jle
test
test
enter
mov
adc
mov
lret
mov
or
xchg
iret
in
aas
pop
or
pop
or
push
jae
mov
or
std
xchg
int3
mov
inc
or
xor
in
outsb
test
ret
xlat
pop
mov
xor
jb
mov
mov
pop
mov
pop
or
movsb
iret
orb
ret
add
rolb
xchg
popf
iret
xchg
test
mov
add
outsb
lods
div
or
or
and
sbb
and
std
adc
pop
jne
out
adc
lds
jo
ret
pop
lds
sbb
cmp
mov
stos
icebp
jnp
fldl
test
lock
out
cmpsl
rorl
pop
cmpl
mov
push
xchg
mov
xor
mov
popf
xor
add
dec
xor
das
sbb
mov
lds
test
jbe
std
test
inc
jb
jns
xchg
lds
popf
outsb
sti
pop
outsl
pop
daa
fcomps
out
mov
push
add
pop
sbb
pop
test
mov
test
mov
and
gs
cmp
mov
hlt
fcmovne
loope
and
or
shll
dec
lods
faddl
fmulp
xchg
bnd
clc
mov
and
mov
ljmp
adc
jg
lea
insl
jns
inc
mov
insb
dec
jno
es
mov
data16
mov
lahf
inc
cltd
or
cmpsl
or
negl
xchg
mov
aas
xor
shll
lcall
stos
adc
and
out
add
adc
and
push
je
and
sub
insb
dec
dec
rolb
hlt
xchg
mov
cmpsb
scas
sbb
cmp
sarl
popa
dec
in
iret
mov
loop
rcrb
jecxz
jg
push
pop
adc
ds
inc
insb
mov
adcb
orl
jmp
adc
scas
jge
int
mov
add
mull
mov
pushf
popaw
inc
fs
jns
dec
and
adc
mov
arpl
pop
cmp
fcompl
push
sbbb
jl
in
rcr
enter
mov
hlt
jg
mov
insb
xor
shrb
loopne
adc
shll
outsl
test
adc
pop
cmpsl
jle
xchg
cmp
shrl
mov
rcrl
push
mov
mov
inc
lds
mov
lods
clc
mov
sbb
addl
push
push
shrb
ret
xor
fwait
lea
cmp
mov
repz
jmp
ret
jmp
arpl
xor
scas
lods
pop
loope
nop
sbb
loope
scas
pop
hlt
in
cmp
imul
ror
sub
aad
cmp
xchg
dec
mov
movsb
cmpl
sarb
roll
add
and
ret
mov
fwait
pop
ljmp
bound
aas
ljmp
cmp
idiv
rcll
rcpps
mov
je
test
push
adc
ss
mov
cmp
mov
mul
scas
adc
fdivl
or
and
imul
xor
xor
mov
lock
push
push
out
sahf
notb
add
repnz
out
and
lret
fildl
dec
insb
icebp
call
mov
into
clc
add
mov
jae
js
xchg
daa
sub
add
aam
dec
xchg
dec
inc
into
inc
loope
jle
mov
stc
xchg
push
sti
xchg
popf
xchg
mov
xor
ja
sbb
mov
aam
sarb
dec
incb
jl
hlt
enter
xor
shlb
xor
sbb
mov
inc
jbe
popf
loop
mov
push
and
ret
popf
ror
aam
add
dec
jmp
jo
push
xor
xor
jne
sbb
fdivl
push
fs
jbe
inc
aas
lods
cmp
mov
mov
ja
ljmp
push
mov
insb
xor
jae
test
movsb
leave
push
movl
jo
jnp
or
push
mov
mov
outsb
and
popf
lods
pop
fdecstp
and
mov
loop
cwtl
es
adc
test
int
ret
in
repz
and
jl
adc
jg
loope
jo
imul
test
insb
dec
mov
in
cmp
sbb
mov
cld
jmp
dec
cmpsl
fs
in
dec
js
jo
ss
cmp
ja
adc
ret
aas
xchg
adc
or
popf
dec
outsb
rorb
inc
pushf
ss
pop
movsb
lret
mov
sahf
xchg
add
fiadds
mov
jbe
lods
mov
xchg
dec
pusha
dec
push
pushf
dec
shr
clc
adc
xchg
jo
dec
std
loope
lret
jle
push
rorl
fisttpl
and
jmp
add
in
test
filds
xchg
nop
xor
xchg
pop
mov
push
xchg
lcall
popf
sarb
aas
mov
inc
repz
clc
test
xor
inc
cmp
mov
test
inc
out
jp
imul
mov
push
lahf
push
or
xchg
addr16
pushf
inc
mov
lret
push
xchg
outsl
and
ret
lret
sub
jge
aaa
mov
jae
lahf
xlat
loope
loope
orb
sahf
lds
negb
dec
or
mov
test
xor
neg
xchg
mov
cmp
and
xchg
mov
cli
mov
mov
rol
push
xchg
les
test
mov
outsb
jne
ret
cmp
dec
or
mov
lock
xor
and
iret
sbb
push
xchg
mov
outsl
and
pop
incb
notb
pop
outsl
mov
leave
loop
nop
push
fldl
mov
in
push
fsubrp
addl
cld
test
add
dec
cmc
scas
and
aad
inc
repz
movsl
pushf
clc
mov
inc
ret
inc
xchg
add
sti
push
fs
and
xchg
scas
cmpl
fcoml
daa
xchg
mov
xor
das
in
cmp
scas
nop
sbb
adc
pop
xchg
in
push
pop
ss
cmpsb
fsubp
divl
sbb
pusha
jecxz
in
lods
pop
insb
mov
and
jle
add
or
adc
shlb
push
sbbb
xchg
sub
or
pop
mov
xor
mov
jecxz
push
mov
jecxz
push
inc
ret
xchg
sarb
mov
or
xorl
xor
add
es
mov
sub
xchg
into
aad
out
inc
ret
xchg
xor
ljmp
cli
outsl
ds
ja
dec
pusha
cmp
or
jp
xchg
leave
pop
popf
fs
xor
std
push
cmp
mov
js
test
cli
push
jg
sbb
rorb
lret
or
cwtl
nop
fcomip
inc
xor
mov
sub
imul
pop
fwait
pop
sub
cwtl
inc
inc
push
mov
push
rcll
mov
lods
nop
rcrb
dec
xchg
add
pusha
mov
cmpsb
mov
test
fistps
paddsw
gs
icebp
es
sbb
lods
mov
mov
or
scas
add
std
sbb
xor
mov
mov
pushf
add
into
or
pop
and
dec
sbb
lock
stos
or
ja
push
testb
or
mov
fldcw
dec
cwtl
dec
int
push
nop
sub
sbb
push
in
inc
or
xor
add
pop
cmc
jb
pusha
jae
and
test
adc
ds
inc
or
daa
mov
loope
push
jp
fmulp
adc
int
inc
push
jbe
fsubs
out
mov
lret
pushf
mov
pop
lods
dec
les
imul
ret
cmpsl
mov
or
call
push
cmp
and
jl
lock
adc
repz
sbbb
xchg
loopne
iret
xlat
mov
std
mov
lret
call
sahf
fstl
aas
cmp
dec
or
imul
outsl
xor
mov
dec
pushf
sub
push
stos
fsubl
xor
wrmsr
rcll
mov
mov
sub
ljmp
push
cltd
lret
dec
ffreep
pop
jge
adc
mov
icebp
ja
out
loop
and
repnz
mov
and
cmp
cmp
pop
sub
sbbl
lods
pusha
and
faddp
mov
xor
out
loop
jo
xchg
fcoml
jg
cmp
pop
add
mov
pop
in
push
lock
dec
jbe
push
push
addr16
cs
inc
xlat
fstl
pop
push
push
cmp
push
xchg
filds
mov
inc
sbb
test
mov
jmp
jle
inc
loop
mov
rclb
xor
sarl
cmpsb
push
das
mov
mov
fnstsw
iret
dec
iret
mov
add
hlt
dec
std
xlat
adc
or
imul
sbb
arpl
push
dec
mov
mov
mov
loopne
jno
lea
fimuls
dec
in
roll
xchg
rcr
adc
and
fisubl
xor
xor
adc
movsb
test
lret
leave
cmp
inc
ficoms
sub
ficomps
dec
and
aas
fisttps
dec
jns
xor
mov
je
bt
dec
cmc
pop
inc
pop
jge
std
pop
push
out
mull
or
aad
xor
clc
sbb
shrb
inc
dec
lret
add
fwait
shl
and
adc
cmc
neg
inc
jp
pop
dec
loope
xchg
ljmp
fbld
out
push
addb
push
jbe
test
test
or
jb
cmp
jns
and
sti
xor
and
cmc
mov
mov
insb
aas
cwtl
jae
scas
lahf
les
pop
cmp
enter
sbb
jns
scas
jge
nop
pusha
or
js
std
ss
mov
cwtl
mov
imul
sbb
or
fwait
pushl
mov
jle
je
sub
repnz
ds
add
pop
int
faddl
test
dec
push
mov
ja
daa
jnp
xor
inc
lea
sbb
xchg
out
inc
mov
popa
xchg
cmp
outsl
negl
adc
js
lods
or
sbb
lret
subb
sub
addr16
mov
xor
mov
call
std
ret
rol
pop
daa
stos
or
mov
push
xchg
loopne
adc
stos
push
popa
mov
int
sub
xor
xchg
arpl
test
mov
mov
jb
cwtl
adc
dec
cld
jle
push
cmpl
jns
jmp
js
adc
scas
pop
mov
or
leave
ja
xchg
enter
call
aam
stos
xchg
inc
jb
mov
jecxz
cmpsl
inc
das
cmp
pusha
xchg
mov
cs
in
push
enter
xor
imul
or
lock
out
jae
jbe
fldenv
mov
insl
sub
test
mov
sub
daa
jmp
mov
push
push
sbb
mov
ficomps
shlb
std
mov
ss
or
push
jne
out
cwtl
pop
fistps
outsb
push
mov
movsb
push
nop
hlt
xlat
or
jo
ficompl
adc
cmpl
cli
mov
pop
inc
cmp
sub
pop
stc
movsl
pop
or
add
cmp
mov
call
mov
jnp
loop
sbb
jns
mov
adc
pop
ficomps
shrb
call
pop
fists
in
fidivrl
sub
int3
mov
ret
insl
lret
mov
inc
mov
mov
test
jle
mov
ja
add
inc
cld
call
adc
jg
int
adc
inc
push
aaa
nop
jo
stos
adc
pop
ret
cmp
adc
mov
in
clc
sub
xchg
dec
and
imul
insb
ja
aaa
cmp
mov
sbb
or
xor
std
inc
and
and
mov
mov
mov
mov
xchg
fildl
jno
or
mov
stos
sub
fsubr
addr16
das
jns
jo
ja
xchg
loopne
mov
jnp
cs
push
xchg
test
repnz
cld
sarl
pusha
pop
jmp
in
ret
xchg
mov
mov
xor
int
js
and
jge,pn
dec
inc
rep
jecxz
addr16
mov
lret
and
adc
push
flds
stos
lods
ret
mov
jno
fcomip
mov
aad
daa
popa
inc
jecxz
pop
and
in
fcomi
addl
sahf
mov
pusha
and
lret
add
push
sbb
bound
jle
cmpsb
stos
xor
inc
mov
test
mov
ljmp
mov
mov
mov
push
aam
mov
and
cmp
add
out
lea
stc
pushf
jno
clc
and
cmp
xchg
das
stos
pop
add
out
js
push
xchg
ss
inc
adc
add
sbb
movsl
out
inc
push
in
dec
mov
out
jbe
aas
mov
xchg
sahf
and
jb
mov
add
xor
leave
mov
stc
mov
xor
mov
enter
dec
test
int3
int
imul
pushf
jno,pt
sub
adc
jno
lods
or
ljmp
xchg
orb
lcall
lret
add
xor
inc
fwait
mov
sahf
les
or
xlat
cmp
push
das
loopne
shl
mov
jg
mov
shr
pusha
pop
adc
jne
clc
fnsave
pop
add
filds
xchg
xchg
int
inc
pop
mov
jecxz
outsb
and
scas
lahf
loop
jl
xor
loop
xchg
lret
jl
cmp
ret
aad
mov
xor
mov
pop
pop
jge
lret
sub
dec
inc
aad
xor
and
aas
pop
sahf
jno
fwait
sbb
fs
imul
mov
or
lret
shrb
jle
shlb
inc
push
add
fwait
shl
ljmp
sub
push
lods
jae
aam
push
sbb
inc
push
mov
ja
add
dec
hlt
std
clc
repz
xor
push
or
rorl
stos
jns
xchg
repz
adc
mov
inc
mov
mov
mov
movsl
adc
sub
cmp
sbb
imul
jle
adc
dec
jnp
das
dec
push
pop
mov
pop
mov
or
fs
aam
jo
mov
cmp
mov
fwait
loope
pusha
movsb
add
jmp
mov
ret
push
xor
icebp
xor
mov
aas
or
clc
cmp
jle
repnz
push
sbb
subb
loop
pop
in
mov
push
ret
mov
ljmp
gs
mov
ficompl
cmp
leave
mov
faddl
in
xchg
out
ret
xorl
dec
add
cmp
add
cmpsl
add
aas
pop
ds
xchg
stc
xchg
ljmp
lret
loop
rclb
ret
repz
pusha
jp
cmp
inc
and
incl
imul
add
mov
cli
movhps
in
les
mov
fistl
cmp
and
mov
add
sti
sub
mov
loope
pop
sub
mov
sbb
cmp
movsb
arpl
mov
jmp
mov
pop
data16
test
lcall
mov
leave
shl
adc
stos
xor
test
gs
aam
inc
insl
adc
adcb
subb
outsb
into
or
sarl
test
xchg
idivl
add
les
dec
ficompl
lahf
out
pop
cli
jl
lea
adc
repnz
in
ret
and
stos
mov
mov
push
dec
fstps
adc
ds
xchg
nop
and
in
inc
lret
jns
jecxz
cld
cmp
xlat
lock
cs
out
jo
inc
test
jbe
mov
jp
xchg
imul
cli
cmp
add
ss
dec
test
mov
cwtl
xor
pop
add
mov
nop
fldcw
fwait
add
jge
outsb
fdivs
or
movsl
xor
mov
cmp
push
ds
cmp
adc
in
pop
xor
or
insb
mov
inc
loope
lcall
mov
jmp
xor
xchg
mov
test
pop
pop
add
xor
iret
sbb
stos
arpl
mov
dec
xor
inc
cltd
int3
out
cmp
daa
fnstcw
jae
cwtl
dec
dec
sbb
jmp
rcrl
scas
add
dec
shll
add
push
xor
push
call
add
push
mov
cmp
cmp
pop
out
fwait
lret
aas
push
data16
fldt
sbb
mov
adc
sbb
add
std
rorb
sar
adc
daa
adc
jne
sub
jmp
fistpll
jno
aam
outsb
push
pushf
xchg
adc
je
clc
out
adc
dec
leave
push
adc
ds
mov
lea
outsb
jbe
xlat
jl
hlt
jmp
sub
pop
xor
test
dec
cli
add
mov
add
sub
mov
jns
sbb
sbb
test
and
pop
divb
ljmp
push
cmp
loop
jo
add
mov
inc
inc
mov
push
add
fsubp
xchg
pushf
adc
xor
and
imul
pop
jg
rolb
mulb
cld
push
cld
fld
out
stos
leave
and
test
shrb
or
ret
dec
ljmp
fildl
sub
push
and
xor
pop
add
jp
ficoms
test
sbb
fdivrl
sbb
mov
nop
fidivrl
adc
or
mov
inc
sarb
dec
mov
fs
jp
outsl
pop
stos
sbb
add
setl
orb
paddb
dec
and
mov
rcr
mov
and
pushf
std
mov
inc
push
cmc
inc
mov
inc
cmpsb
cmp
cmpsb
xorb
cmp
dec
cld
test
and
mov
add
mov
mov
stc
jl
imulb
arpl
rcr
dec
mov
leave
sub
inc
lret
mov
sbb
mov
pop
sub
test
stc
loop
xchg
mov
jnp
dec
stc
testb
jbe
cmp
sub
scas
adc
push
jns
jns
mov
mov
cmp
popa
or
push
cmp
je
movsl
ljmp
mov
jl
jb
jmp
hlt
and
adc
pop
aas
inc
outsb
xchg
fnstsw
stos
testb
lret
enter
ds
mov
inc
xor
cmp
push
sbb
dec
lcall
out
sarb
dec
cwtl
aad
mov
push
sub
pop
xchg
aaa
add
or
push
xor
lret
dec
push
jmp
repnz
lret
test
out
pop
sub
jns
aad
sub
fisubrl
fdiv
ds
cltd
mov
mov
sub
jb
mov
cmpsb
xlat
das
sbb
inc
rol
cltd
int
jl
ret
sub
sbbl
gs
adc
les
cmp
sub
mov
sbb
test
cmp
lea
push
inc
mov
inc
rcr
inc
inc
sbb
out
aam
fnstenv
xor
stos
mov
add
lea
cwtl
stc
ficoms
dec
in
add
jno
add
xlat
pop
cmp
adc
push
cmp
mov
lret
into
aas
xchg
xor
and
ss
ja
xor
jnp
push
push
fs
cltd
xchg
test
cltd
lcall
sahf
gs
fisubl
out
xchg
xchg
inc
xchg
fiaddl
xchg
xor
dec
and
cs
subb
adc
xchg
sahf
push
rclb
out
in
ret
xlat
lods
addr16
sbb
cmp
sbb
loopne
dec
mov
add
je
push
inc
push
addr16
sbb
fnstcw
rol
andps
pop
mov
sbb
add
add
imul
cmp
and
jge
test
popf
stc
or
cmp
cmc
jle
xor
xchg
ficoms
mov
dec
or
and
cmp
sbb
icebp
push
add
pop
insl
pop
dec
out
xor
fimull
sbb
xor
std
int3
xchg
push
insl
repz
push
cmp
scas
jl
adc
sub
out
dec
cmpsb
lret
or
or
mov
push
push
das
jmp
out
jle
xor
clc
cwtl
jo
push
es
jecxz
xchg
fwait
mov
nop
xchg
sbb
sahf
pushf
stos
adc
ljmp
addr16
ljmp
mov
jp
cli
clc
cld
int
inc
mov
andl
sub
inc
sub
inc
xchg
xchg
adc
pop
inc
fs
sbb
jmp
sarl
lcall
fdivs
mov
jecxz
mov
mov
mov
adc
aas
int
mov
in
ret
push
sbb
mov
and
lahf
movsb
stos
orl
imul
int
sbb
int3
shl
repz
aam
cmpb
mov
adc
mov
dec
in
cs
cmpsb
push
mov
cli
lods
out
hlt
xor
add
test
mov
pop
nop
or
neg
pop
mov
jp
in
xchg
cmp
cmp
imul
jns
jg
add
ds
imul
les
push
addr16
cmc
mov
sub
adc
fnstsw
sarb
push
fcmove
cvtdq2ps
addr16
cltd
in
or
movl
mov
push
pop
dec
insl
negb
push
adc
lahf
pop
nop
jl
jmp
and
iret
fmuls
xchg
xorl
aam
jmp
fwait
shrb
xchg
fchs
fwait
mov
nop
mov
lds
or
add
in
pop
inc
cmp
or
daa
lock
cmp
fldenv
loopnew
dec
inc
and
inc
cmpsl
xchg
ss
sahf
xchg
xchg
ss
mov
iret
push
enter
xchg
leave
inc
inc
imul
data16
stos
pop
pop
movsb
mov
pop
ds
cwtl
dec
pop
test
sub
xor
pop
imul
sbb
insb
cs
mov
xor
mov
sub
mov
jle
call
cmp
pop
dec
inc
lods
cmp
cmpsl
subl
xchg
int3
ret
xchg
out
bound
movsl
add
jle
stc
out
arpl
jp
pop
cmpsl
ss
mov
mov
hlt
cmp
inc
flds
jns
xor
or
xor
mov
mov
adc
adc
push
loop
int3
push
ffree
dec
mov
push
inc
adc
clc
jg
sub
aam
mov
xchg
in
repnz
and
test
jp
and
or
fdivp
ret
push
aas
fdivl
in
inc
push
test
mov
dec
int3
mov
cmp
and
or
les
jle
in
pop
push
jle
pop
push
mov
aas
out
xchg
mov
inc
jg
test
cmc
inc
mov
shrb
cmp
dec
mov
dec
push
das
or
jl
push
mov
mov
sbb
mov
and
adc
mov
jbe
arpl
lahf
stos
cmp
jbe
inc
mov
push
inc
cmp
jnp
push
das
or
in
xor
fdivl
fs
pop
pop
cmpsl
insb
or
jb
jg
int3
adc
adc
fisubrl
rcrl
jbe
jmp
mov
lea
cltd
cmpsb
mov
xchg
and
xor
add
jb
faddl
jg
dec
mov
mov
sarl
cmpsl
cmp
ret
faddl
push
ja
loopne
dec
fwait
lods
decl
sbb
push
call
je
inc
aas
lea
clc
out
sbb
push
filds
fst
sub
add
adc
lods
es
imull
icebp
mov
mov
or
xor
xor
stc
inc
xchg
insl
push
fstps
pop
int3
movsb
push
fcmove
and
mov
loope
pop
mov
cld
ss
adc
pop
or
das
addr16
cmp
int3
add
popf
je
lods
lcall
fwait
cmp
push
insl
adc
mov
pop
dec
std
stos
xor
faddl
shr
stos
pusha
dec
jl
and
stos
mov
lcall
cmp
out
push
xor
divb
mov
add
add
test
call
sbb
gs
scas
lods
insb
call
lret
rorl
cmp
jbe
aad
in
sub
mov
aam
mov
popa
or
push
imul
das
hlt
or
movsl
popa
test
mulb
mov
shlw
add
xchg
mov
and
insl
cltd
arpl
das
aam
pop
jecxz
outsb
adc
jb
insl
push
and
dec
test
jmp
fmull
xor
aaa
mov
push
pop
mov
jp
rcll
je
and
in
and
cmp
ret
and
je
lea
mov
or
inc
dec
popf
sub
xor
hlt
sahf
scas
sbb
lock
mov
mov
sub
nop
test
ffree
sbb
test
pop
arpl
jae
ret
or
cli
jge
popa
xchg
movhps
int3
repnz
push
das
in
mov
popa
push
push
popf
dec
push
dec
jg
jo
sub
lret
das
shrb
imul
sahf
repz
push
lock
out
in
jecxz
inc
xchg
sub
sarl
sarb
inc
mov
push
test
data16
inc
fisubrl
and
adc
dec
add
sbb
mov
cs
pcmpeqb
sub
jnp
fists
cmp
jno
inc
mov
jo
and
popf
xor
scas
add
push
cmp
or
push
out
cmpsl
sbb
js
nop
cltd
adc
pop
pop
pop
icebp
movsb
inc
les
cmpsl
xorb
insl
jecxz
push
test
xor
adc
or
mov
sub
imul
clc
pop
jge
cmpl
stc
sti
jo
dec
pushf
outsb
dec
andl
dec
sti
or
or
shrl
mov
push
sub
lret
sub
and
mov
cld
cmp
fcoml
movsb
mov
mov
ret
fdivrp
pop
fsubrp
stos
sbb
sub
and
cmp
int3
stos
fists
xchg
add
cmp
xchg
jge
jnp
adc
test
mov
shll
orl
jns
xchg
fadds
scas
mov
mov
or
and
fldl2t
bound
mov
or
fimull
xchg
loop
jge
insl
sub
cmp
out
sub
sbb
fimuls
ljmp
jmp
jecxz
sub
pop
inc
hlt
aad
cmp
lods
add
pop
pop
sub
mov
iret
mov
mov
les
out
or
loop
jecxz
scas
out
int
aaa
dec
fnstsw
orl
mov
dec
mov
mov
outsl
addr16
ret
out
and
mov
int
dec
dec
ss
int3
neg
ss
test
or
jb
fnsave
test
aaa
pop
pop
adc
aas
push
int3
pop
ds
je
icebp
sub
test
dec
mov
add
call
lds
sub
andb
and
dec
jbe
mov
loope
push
hlt
shl
mov
call
popf
sbb
fucom
lds
outsl
dec
insl
mov
and
xor
adc
incb
sti
sub
mov
lcall
arpl
ljmp
in
cmpsb
outsb
in
pop
je
test
jns
fyl2x
add
jns
aas
dec
mov
pusha
enter
clc
insb
cwtl
or
jo
ljmp
dec
cmp
add
fsubl
dec
in
nop
clc
add
es
clc
imul
shl
fs
jbe
stos
and
cmc
mov
sub
pop
add
jge
xchg
jne,pt
lds
popa
pop
push
out
mov
fsts
xor
pop
and
stc
pop
int3
or
sar
ret
cwtl
adc
je
and
add
jg
std
inc
push
lcall
jb
inc
lods
sub
jb
add
jbe
jle
xchg
mov
push
ret
cmp
sbb
clc
test
mov
mov
mov
in
add
mov
dec
scas
xorl
fisubrl
cld
scas
outsb
add
cmp
fsubl
jmp
out
ror
dec
push
mov
imul
and
mov
or
nopl
fadd
call
in
test
in
incb
shrb
mov
scas
adc
stc
mov
aam
or
or
xor
xchg
xchg
aad
gs
cld
nop
fldenv
mul
mull
mov
sti
or
addl
jo
imul
fisttpll
ds
test
jmp
rorl
in
pusha
outsl
stc
lods
adc
cs
jns
mov
fildll
enter
test
pop
dec
outsl
icebp
notb
jle
mov
push
sub
xchg
sbb
jecxz
aad
mov
insb
int
mov
jle
pop
pusha
inc
lods
and
aas
and
jo
push
add
pop
inc
rcl
test
pop
and
adc
cmpb
in
adc
mov
add
fildll
mov
fists
fldl
test
leave
cmp
mov
fadds
or
pop
cs
mov
and
push
push
jmp
add
mov
mulb
fucom
aam
imul
pop
jo
inc
mov
movsl
mov
xchg
rcrb
mov
int
shlb
cmp
pushf
divl
cmp
adc
pop
sbb
aaa
push
xchg
pop
adcb
push
pop
rcl
sub
push
pop
les
sub
pop
add
jle
xchg
sub
inc
fsubp
pop
xchg
sbbl
xchg
fbld
fdivs
js
shl
mov
pusha
and
push
pushf
sub
push
adc
test
ficomps
cmp
pop
sahf
insb
mov
adc
loop
mov
sbb
dec
loop
adc
popa
push
dec
sbb
setp
pop
pop
dec
ret
imul
clc
sub
push
and
jno
mov
jns
inc
popa
insl
ljmp
mov
push
leave
adc
cwtl
mov
ret
mov
iret
das
cli
cmp
push
arpl
and
aaa
popa
cld
sbb
sub
pusha
add
mov
xor
pop
scas
dec
sub
mov
aas
push
jo
pop
push
pusha
mov
stc
sub
cs
filds
scas
mov
mov
clc
fadd
outsb
sbbb
gs
and
jno
les
push
xor
push
push
jae
repz
repnz
test
xchg
dec
out
les
add
xor
pop
into
daa
fsub
add
jns
dec
push
jae
fildl
or
hlt
loope
adc
rcrl
push
jno
repnz
gs
mov
stos
sahf
int
jnp
xor
out
aas
mov
shll
sbb
or
rolb
xchg
lods
mov
or
inc
roll
and
imul
sbb
jle
sbb
fdivrl
enter
lahf
movsb
out
lods
cmpsl
dec
filds
rcrb
inc
aad
jns
stc
push
std
out
aad
push
fs
dec
pusha
mov
js
cltd
pop
cmp
popa
adc
add
cmp
or
in
bound
test
fscale
sbb
jmp
xlat
dec
xchg
lcall
pop
or
outsb
push
jo
cli
fiaddl
push
or
test
out
and
mov
pop
and
mov
cmp
xor
gs
cmp
js
xchg
add
sarl
pushl
jmp
mov
sbb
fs
insb
loop
pushl
popa
pop
hlt
xchg
popf
cmp
jne
xchg
push
inc
mov
loope
ret
dec
xor
loopne
sub
sbb
insb
sbb
adc
xlat
fwait
jle
dec
pop
test
aaa
pop
pushw
out
and
scas
xor
imul
lds
testb
in
mov
add
mov
xchg
mov
popf
and
dec
pop
inc
icebp
ret
aaa
aam
repz
popa
daa
jb
pop
rcl
cmp
lods
fwait
mov
pop
xorb
mov
sbbl
add
test
call
fimuls
ret
inc
inc
test
lds
pop
aaa
daa
jle
and
xchg
cltd
cmp
scas
mov
icebp
cmpsb
inc
sub
int
mov
dec
mov
mov
or
xor
cmpl
movb
mov
xor
test
pop
fstpl
sbb
stc
add
negb
test
dec
cmp
shll
out
ljmp
mov
or
jo
ret
repz
push
imul
out
sub
in
pushf
inc
or
and
or
fidivs
fsubrs
out
fwait
pop
sbb
cmp
hlt
mov
outsb
pop
mov
dec
movsl
xchg
xor
inc
std
cmc
out
inc
aas
jge
jo
lods
sub
pop
add
pushf
xor
ljmp
xor
xchg
push
mov
aad
cmp
inc
mov
ficompl
pop
test
jmp
aad
fcmovnb
int
add
loop
push
push
dec
aam
add
lock
shrl
frstor
fwait
mov
push
repz
addb
aaa
mov
or
pop
call
arpl
call
sub
dec
dec
and
insb
lock
jae,pt
loopne
cmpsl
inc
lret
push
imul
cs
sarb
jo
sti
aam
test
sub
incb
adcb
jne
pushf
or
leave
xor
out
jmp
lock
daa
sub
jecxz
popf
mov
into
int3
mov
lea
mov
lret
std
pop
pop
in
test
xchg
pop
cmp
jno
out
icebp
js
and
test
jl
lds
jmp
push
add
adc
sbb
mov
sub
fcomp
orl
and
jne
sarl
and
push
adc
pop
fs
loop
push
aaa
mov
sbb
lea
and
fwait
js
call
lods
xor
mov
push
and
loop
imul
arpl
ficomps
inc
add
xchg
inc
rcl
scas
loope
cmp
lock
and
fildl
xchg
dec
hlt
jl
cli
fsubr
pop
inc
mov
pop
into
mov
daa
xchg
pop
fidivrl
mov
pusha
ljmp
je
jle
arpl
mov
jnp
dec
sub
mov
fcoml
ret
js
int
jg
inc
sub
fdivl
movsb
pop
nop
pop
jle
mov
mov
roll
cli
push
jle
mov
rcr
fbld
xchg
cmp
push
jl
cld
and
inc
ret
xchg
jns,pt
mov
test
sarl
pushf
inc
repz
push
nop
mov
mov
test
out
sti
ficomps
push
jae
test
pop
out
cmp
mov
movsl
inc
mov
pushf
dec
out
cmp
movsl
lods
xchg
sti
xchg
mov
or
cmpsl
adc
das
fnstenv
mov
mov
jg
out
xor
xchg
push
xor
and
sub
mov
sub
push
add
jl
mov
xchg
lods
imul
push
pop
push
lds
xor
stc
je
or
inc
les
push
ds
mov
pop
push
loop
mov
xchg
scas
jne
repnz
push
cmp
mov
xor
fcoms
xchg
ljmp
cld
inc
inc
jge
adc
cmpb
stc
fistl
adc
mov
int
clc
std
imul
mov
inc
add
cmp
loopne
cli
lcall
fs
pop
dec
xchg
xchg
roll
pop
arpl
inc
sbb
dec
outsb
leave
sarl
or
adc
push
fsubrl
cwtl
arpl
xchg
leave
pop
in
stos
pop
cmp
xor
bound
dec
push
add
outsl
push
int3
pop
dec
add
or
jns
or
xor
adc
add
inc
call
pop
pop
sbb
jg
mov
maskmovq
negl
xchg
out
or
das
xchg
out
test
mov
inc
pop
scas
popl
push
jno
push
int3
xchg
jp
dec
outsb
rorl
test
leave
imul
jp
pop
sti
xchg
stos
popf
adc
jns
rorb
push
push
pop
cmpsl
xchg
les
test
shrb
push
daa
mov
cmp
pop
enter
or
pop
out
fldt
fcoml
dec
fisubs
mov
cmc
in
pushf
cli
dec
xchg
inc
or
ret
mov
cmpsl
decb
xchg
inc
cmp
xchg
push
xchg
cmp
cmp
jb
dec
pop
mov
inc
je
fmul
jp
lods
in
xor
ja
or
xchg
faddl
fsubrs
pop
cmpsb
push
jne
pop
je
pop
sbb
jno
mov
std
push
divb
sahf
call
daa
xchg
into
cli
xor
lods
mov
jb
adc
gs
inc
test
test
sub
fdivr
or
jp
iret
popf
mov
pop
mov
cmp
mov
and
mov
cld
and
or
repz
cli
jmp
and
dec
mov
test
in
push
mov
adc
gs
shr
int3
jmp
lea
mov
pop
mov
adc
scas
sbb
add
jl
cld
mov
mov
sbb
test
loope
insb
xor
xorb
adc
mov
and
inc
jbe
fdivrs
fs
and
cmp
pop
and
add
mov
fwait
push
jae
jge
mov
test
inc
jp
push
ds
mov
fistps
push
sbb
arpl
cltd
xor
jge
xchg
add
punpckhdq
and
mov
and
sbb
cmp
scas
mov
iret
shll
ss
sbb
fistpl
push
js
hlt
push
xchg
dec
xlat
jl
ja
stos
xor
jns
jge
jbe
pop
and
jmp
ret
bound
lret
test
mov
cli
or
xchg
fisubrs
sbb
arpl
sbb
paddusb
add
mov
xchg
dec
movsb
pop
loopne
das
notb
pop
es
in
loop
movsb
sub
test
dec
adc
frstor
int
pop
and
adc
push
jp
ljmp
sbbb
lret
push
out
in
or
pop
out
and
pusha
rol
sub
pop
test
add
out
fdivrs
cwtl
sbb
dec
fimuls
lret
sahf
not
jae
sub
add
mov
fstpt
arpl
inc
dec
jmp
xchg
cltd
lcall
ficoms
lods
mov
mov
xor
xchg
mov
movl
fisubrs
sub
int
cmp
jge
outsl
cmp
xor
lcall
lods
lret
pop
fstl
mov
add
int3
sbb
adc
xor
pop
mov
push
or
js
lods
testl
icebp
je
xchg
test
hlt
jecxz
jmp
mov
add
repz
imul
insb
adc
je
ja
js
cmp
je
pop
inc
ret
lods
nop
and
lods
cs
xor
loope
dec
push
ret
shlb
or
or
sbb
add
loope
scas
add
cmp
sub
call
roll
cmpsb
inc
mov
or
xchg
add
jns
pushf
sub
xchg
stos
push
dec
popf
rol
movb
xor
ss
xchg
movsb
xchg
xchg
gs
xor
imul
lcall
bound
jo
sub
rcrb
int
jno
lahf
fucomip
xor
fistpll
neg
jp
xor
mov
pop
mov
int
rol
fs
cld
in
lahf
je
xchg
jo
push
loopne
scas
insl
or
out
xor
out
push
cmp
fwait
movsb
incb
movsl
ljmp
mov
push
icebp
ss
cmp
jno
sbb
clc
xchg
clc
xchg
fiadds
jg
pop
sub
loop
into
ret
mov
cmc
loopne
sbbb
sbb
pusha
sub
add
and
sbb
pop
inc
fdivl
mov
lods
aas
lods
loope
lcallw
lods
mov
pop
mov
in
push
fldl
pop
sbb
sub
lret
movl
xlat
xchg
inc
cmp
dec
lahf
sub
call
pop
sahf
nop
mov
sbb
dec
add
in
fnsave
loope
mov
cltd
insl
push
hlt
sahf
scas
dec
outsl
mov
sti
test
push
mov
cmp
and
cmpsb
arpl
sbb
xorl
leave
std
ss
jmp
adcl
arpl
sbb
repnz
clc
and
jns
push
sti
in
mov
xchg
andb
lea
adc
pop
insb
inc
mov
dec
movsl
test
sbb
adc
lret
sbb
fnstcw
cmp
add
fstp
jno
nop
push
in
outsb
movsb
mov
daa
inc
pushf
test
sub
or
clc
mov
movsl
push
clc
xchg
adc
and
sbb
jno
push
mov
jb
cmpsl
jmp
cmpl
jg
xchg
cmpsl
insb
call
clc
mov
aaa
cli
jo
call
jne
fsubs
cmp
push
aas
and
xor
mov
jle
es
insb
loop
sub
add
xchg
mov
dec
xchg
dec
push
cmpb
shrb
dec
fldl
sarl
imul
xor
pop
ja
mov
dec
jbe
or
xor
test
stc
daa
mov
fxch
scas
mov
sbb
movsb
xor
or
lea
push
sub
sub
xchg
cmpsl
int
out
push
pop
pop
das
outsl
shlb
ja
outsb
mov
int3
jo
popa
lea
mov
mov
cmp
mov
fdivl
lret
mov
mov
rorb
pop
mov
out
sub
jp
push
or
cmp
sbb
cwtl
stc
dec
cmpsb
aad
mov
out
mov
add
mov
je
scas
and
jge
dec
popf
push
inc
icebp
rclb
repnz
pop
mov
je
test
push
push
push
loopne
cli
mov
inc
test
fimull
push
lods
int3
loope
xchg
mull
in
inc
scas
movsb
dec
aad
pop
add
inc
stos
mov
pushf
pop
frstor
mov
imul
in
inc
jne
es
xchg
int3
call
jbe
nop
cld
dec
inc
jns
cmp
lret
fsts
das
jo
pop
cmc
or
sbb
push
test
rorl
mov
jo
cmp
shrb
xchg
addr16
iret
or
nopl
pop
mov
jae
and
mov
in
dec
cmp
adc
fwait
lods
outsl
jp
jno
shrl
loopne
leave
fsts
andb
roll
adc
jmp
jno
jle
imul
repnz
imul
js
sbb
nop
cli
lret
adc
cs
lahf
jo
clc
stc
cs
popl
out
and
jmp
xchg
mov
out
pop
dec
out
mov
bound
icebp
sub
pusha
test
xchg
or
movsl
lea
sbb
int
dec
fimuls
dec
xor
cmpsl
sub
add
out
lods
cmp
into
inc
mov
sub
cmp
shlb
inc
xor
pop
pop
fwait
xchg
cmp
cmp
jp
dec
shlb
adc
call
test
icebp
das
and
repz
pop
dec
sub
mov
stos
add
sbb
and
addl
test
mov
cmp
fisubrl
adc
cli
je
test
or
movsl
addr16
jmp
adc
sub
pusha
test
fbld
cmc
stos
lds
rcl
cwtl
lahf
add
sbb
cmp
xor
xchg
and
insb
pop
xor
or
mov
mov
hlt
fwait
data16
xchg
movsb
fs
insb
inc
sbbl
andb
repnz
adc
loope
scas
push
add
sub
dec
loope
jle
xor
cld
cmp
repz
lret
sti
das
cmp
jno
in
mov
pop
and
rolb
xchg
jmp
negb
fsubrl
jbe
repz
push
pop
adc
add
cwtl
jg
repz
sti
sbb
jae
add
mov
out
mov
and
fisttpl
outsb
inc
fidivrl
mov
push
push
and
jmp
call
push
mov
idivb
cli
popa
test
out
pop
outsl
mov
xchg
mov
jp
fldl
cld
push
test
data16
mov
dec
pop
adc
adc
and
pop
popa
ds
and
sub
insl
sub
into
jbe
ret
mov
and
bound
lock
adc
icebp
dec
lret
xchg
ret
leave
lahf
xchg
pop
and
test
insb
insl
aas
das
push
fdivs
test
inc
sub
sarb
cs
test
mov
jno
add
stos
cmc
sub
out
add
push
push
pop
loop
inc
aad
mov
add
inc
mov
mov
dec
sub
loop
stos
es
enter
loopne
or
jecxz
pushl
sub
and
stos
cmc
mov
jno
sbb
dec
cmp
xchg
push
shlb
jae
fs
mov
mov
adc
xor
icebp
gs
gs
roll
pusha
aas
stos
mov
push
je
jne
popf
orl
xlat
rcl
sahf
shrb
mov
clc
mov
mov
fldt
mov
mov
pop
mov
pop
jg
push
insl
mov
loope
popa
lea
out
adc
cmp
push
nop
sub
int
bound
dec
pop
ja
imul
dec
rolb
xor
mov
mov
jp
fs
in
in
int3
lret
mov
movsb
xor
add
rol
xchg
mov
pop
rcr
sbbl
xor
mov
std
jne
ja
insb
xchg
ret
pop
test
adc
mov
xor
ja
lret
mov
jbe
jo
jo
les
data16
lods
lcall
ds
outsl
sarl
jecxz
daa
cmp
add
sti
aam
mov
jle
popf
mov
xchg
and
pusha
mov
mov
jns
sbb
jge
daa
push
ret
mov
sub
test
notl
adc
lahf
iret
fldenv
jecxz
ret
fstp
push
add
push
lea
ret
ret
jp
xor
xchg
xchg
ljmp
cmp
daa
leave
test
jge
cwtl
dec
lods
xchg
jmp
push
push
nop
mul
adc
insb
mov
jge
push
jle
mov
sub
inc
arpl
xchg
call
ja
dec
lds
mov
inc
inc
jno
mov
loopne
icebp
aam
dec
out
lods
xchg
stc
jmp
mov
xor
fs
in
adc
mov
dec
jns
and
mov
cmpsl
mov
fdivrl
je
xchg
sbb
into
lahf
dec
cli
push
sub
xorl
mov
cld
xchg
outsb
xor
fwait
dec
adc
mov
sti
nop
into
add
mov
add
out
xor
test
nop
aas
jg
and
movsb
push
jecxz
out
jbe
add
push
adc
mov
jbe
cmp
xchg
cmpsl
pop
stc
inc
movsb
stos
xor
movsl
jp
or
xchg
stos
xor
mov
pop
inc
mov
cwtl
and
fadd
sahf
fcoml
cmp
pop
mov
xlat
pop
xchg
jge
int
push
push
ret
repz
aas
xchg
sub
out
xor
in
jmp
xor
in
das
sbb
pushl
jg
push
das
enter
out
and
aas
cltd
mov
testb
ret
xor
fbld
or
and
jne
hlt
ficomps
es
xchg
ficomps
aam
jp
dec
jmp
in
push
hlt
cmp
adcb
rclb
jecxz
lods
ret
xor
rorb
insb
push
jg
popfw
xchg
cli
fimuls
in
mov
sarb
pop
das
shrl
and
lahf
xchg
jmp
dec
push
rol
fistpl
sub
push
mov
ret
xorb
mov
das
in
in
fisttpl
daa
scas
push
inc
push
lret
aaa
inc
push
out
inc
xor
sub
sub
aad
das
adc
add
xchg
jge
push
push
in
push
or
in
mov
inc
loope
dec
and
dec
jge
or
bound
movsl
test
lods
xor
and
pop
insb
cli
push
shlb
shrb
push
xor
xor
mov
sbb
ja
sbb
aad
xchg
je
loopne
push
add
pop
popf
adc
out
mov
dec
push
testl
inc
xor
push
push
xchg
xor
lcall
sub
or
adc
adc
jmp
stos
lahf
xchg
or
sahf
sub
and
pop
into
sbb
fsubrl
in
adcl
insb
xorl
sbb
lds
cvtpi2ps
loopne
test
push
cmc
sbb
or
adc
arpl
push
fimuls
std
xchg
mov
cs
rorl
int3
cmpsl
adc
int3
mov
dec
cmp
dec
cld
fadds
test
scas
jl
arpl
es
mov
cmpl
mov
aas
das
adcb
fs
xchg
jno
cmc
popa
imul
adc
or
stc
lods
rorb
push
pop
rol
push
mov
andl
push
jp
sub
or
scas
lock
in
dec
add
push
hlt
scas
jne
or
vdivpd
pop
stos
pop
mov
sub
stc
adc
pop
pop
add
test
mov
int
movsl
pop
dec
pop
and
mov
jo
push
ja
and
cmp
test
out
ds
cmp
inc
shr
lock
jns
push
stc
dec
mov
daa
cwtl
iret
into
hlt
mov
add
mov
ja
insl
fistps
pop
lea
fiaddl
popl
mov
lahf
and
xlat
adc
sbb
mov
mov
push
jo
pop
xor
xlat
add
pop
adc
sarl
stc
xor
dec
loope
adc
addr16
orb
push
mov
mov
movsl
add
add
cmp
jne
sbb
cmp
outsb
punpcklwd
and
aam
lea
or
pop
mov
xchg
mov
adc
push
fucomip
stc
fwait
in
mov
mov
sub
ja
mov
jmp
dec
sahf
outsb
xor
scas
or
pop
insb
cmp
mov
lahf
add
loopne
fimuls
push
mov
das
cmp
movsl
xchg
lods
dec
jns
sbb
mov
jno
xor
das
dec
or
xor
mov
pop
xor
int3
test
add
jge
subb
mov
inc
jge
out
scas
stos
dec
ss
sub
fbstp
add
mov
sub
cmpsl
rorl
fs
xor
sbb
mov
xchg
pushf
jo
aam
loopne
aas
leave
and
fidivrs
sub
arpl
js
sbb
adc
inc
push
int3
js
int
and
lods
btr
out
ja
into
mov
loop
fwait
mov
pop
iret
mov
push
testl
push
cli
push
outsb
vpavgb
sub
jg
inc
mov
mov
jmp
add
inc
add
outsb
das
xchg
mov
daa
xor
xor
into
pop
sbb
push
add
inc
mov
dec
jne
in
cmpb
leave
mov
xchg
loopne
fs
std
ds
push
and
sbb
mov
sub
or
inc
push
xchg
cmp
xchg
test
mov
mov
out
mov
sbb
out
fmull
jp
js
add
push
add
in
test
fldcw
or
inc
dec
test
mov
test
shrb
mov
pop
outsl
xchg
sbb
mov
faddl
movsb
xor
imul
aaa
dec
test
adc
sti
sbb
mov
xor
icebp
test
jb
jp
jge
sbb
add
push
in
inc
xchg
sbb
inc
inc
out
mov
and
inc
push
push
add
out
and
xor
jecxz
mov
jno
lds
cmpb
in
jb
jns
jecxz
push
cmpsl
jnp
outsl
cmp
outsb
scas
and
and
sbb
mov
mov
inc
inc
mov
sub
push
mov
xchg
mov
les
call
jle
pushf
sub
inc
mov
inc
push
aam
popf
mov
into
iret
js
arpl
add
cmp
or
lock
pminsw
lahf
lds
and
stos
in
mov
and
loop
sbb
xchg
adc
jle
mov
jle
jne
mov
ja
popa
fwait
repz
aas
push
add
fldt
test
clc
xchg
in
pop
int
cmp
mov
push
mov
cmp
cmpsl
rcrl
cmp
mov
inc
xchg
sbb
jmp
jbe
push
test
dec
xor
cmp
inc
pop
push
jle
pop
cs
xor
aaa
push
dec
xchg
push
sbb
test
mov
inc
inc
mov
aam
pushf
mov
mov
roll
decl
xchg
fs
dec
out
mov
jb
popl
or
jecxz
cwtl
add
ret
dec
inc
mov
cmp
xor
adc
ret
jmp
dec
dec
xchg
cmp
cld
jl
sbb
mov
lods
push
sub
sbb
sub
lods
iret
sbb
hlt
fcoms
fwait
insb
jbe
push
pushf
pushf
stc
lods
push
sbb
lahf
std
adc
add
sahf
in
movsb
adc
fst
addr16
sbb
adc
test
icebp
sbb
ljmp
push
adc
cmpsl
scas
jb
inc
fcmovb
clc
sub
xchg
js
outsl
fwait
clc
push
stos
xor
xchg
aas
push
clc
int3
cmp
in
push
xchg
int
sbb
stc
pop
fs
jmp
movsl
inc
clc
and
inc
cmpsb
sub
jg
add
add
cmpsl
mov
in
sub
pop
sbb
mov
cmpsl
mov
xchg
push
add
ret
insb
jnp
enter
pop
push
dec
loop
pop
jl
popf
jg
jg
pop
cmpl
fmull
inc
adc
ror
jmp
jne
adc
ljmp
out
ljmp
mov
outsb
mov
adc
lea
lahf
push
filds
lcall
mov
clc
shr
xor
sub
mov
xor
jno
inc
mov
mov
cwtl
mov
and
loop
mov
scas
stos
push
xor
and
xor
bnd
adc
mov
loopne
lahf
pop
push
sti
outsl
pop
dec
mov
sub
pop
pop
lcall
fcmovbe
insb
pusha
clc
xchg
xchg
mov
and
stos
insb
mov
in
xor
mov
fwait
scas
jmp
nop
enter
lret
push
fbld
xchg
js
dec
andl
or
popa
pop
cli
add
aad
and
xor
lea
in
jae
into
xchg
pop
out
push
int3
cmp
aaa
pop
aaa
daa
push
mov
xor
das
pop
stc
fcmovnb
pop
daa
aad
lret
aam
push
adc
repnz
mov
xchg
aad
or
leave
inc
cmp
add
cmp
insl
test
xchg
push
mov
ret
or
pop
hlt
ss
xchg
out
out
inc
push
or
sub
fbld
leave
adc
ljmp
loopne
adc
lock
cmp
icebp
fmull
or
cli
or
pushf
jne
je
mov
jg
sahf
aaa
outsb
adc
jg
xor
int3
rolb
dec
into
cltd
pop
push
cmp
push
pop
insb
sub
cmp
mov
lods
call
push
subb
push
push
fidivs
xor
cmpsl
sub
inc
popa
in
ds
jns
adc
or
jae
add
mov
fwait
in
cmp
sub
or
out
mov
iret
xor
jg
push
lss
jns
scas
cmp
add
repz
xor
jo
out
mov
mov
and
lret
loop
clc
inc
or
insl
fdivrs
adc
pop
mov
and
xchg
stos
mov
push
ja
or
cltd
xchg
movsl
not
nop
or
roll
int
and
inc
cltd
jbe
dec
mov
cmp
mov
pop
xchg
ficoms
xor
rcll
fstp
cmp
ret
frstor
cs
outsl
mov
sbb
or
out
push
inc
cmpsb
mov
or
xchg
push
in
xchg
les
inc
fwait
movsb
and
mov
jno
adc
das
mov
insl
xlat
ret
xor
mov
inc
aam
inc
loop
aas
mov
mov
mov
or
fwait
or
xlat
outsb
mov
gs
add
inc
shrb
imull
sbb
imull
ret
mov
ss
mov
lods
jecxz
and
jmp
mov
aas
jmp
andl
out
pop
sub
push
or
dec
movsl
ds
mov
or
out
lods
push
outsb
mov
movl
pop
test
aaa
mov
subb
and
fimull
jns
mov
int
mov
out
jns
jecxz
fcoml
outsl
push
rcll
or
loop
icebp
pushf
popa
add
out
scas
mov
aaa
addr16
clc
flds
adc
and
jmp
jo
sub
lock
aad
rcll
jecxz
jmp
jbe
test
or
aam
call
mov
mov
andl
inc
int
imul
pop
ret
rcl
daa
xchg
cmpl
filds
subb
push
add
sbb
add
lods
cld
lods
dec
and
les
lcall
fsubrl
jno
mov
fiaddl
pop
aaa
int3
shlb
or
jecxz
aas
ljmp
dec
mov
std
push
outsl
les
std
pusha
jo
push
sub
add
mov
or
sub
std
stos
jns
call
mov
dec
test
aad
xchg
ret
push
pushf
fsubs
dec
je
xrelease
lea
aam
xchg
es
ret
and
lods
pop
mov
or
sub
pop
add
roll
aaa
lret
dec
sub
scas
and
dec
cwtl
outsl
lcall
mov
imul
repnz
sub
push
or
and
push
inc
mov
cmpsb
hlt
ret
in
inc
movsl
in
mov
enter
sbb
test
adc
pop
xlat
je
jno
stc
sbb
mov
subl
jmp
sbb
dec
dec
outsl
mov
sbb
stc
jae
push
jl
icebp
inc
leave
cs
or
push
sahf
and
pop
sbb
enter
push
cmc
outsl
push
cmp
mov
adc
std
mov
mov
int3
pusha
stos
cmp
adc
jnp
jmp
mov
sbb
stos
sbb
push
sub
ss
push
xor
sbb
inc
daa
into
mov
xchg
xchg
push
lret
out
cld
push
hlt
lahf
loope
sahf
pop
cld
mov
push
fimuls
mov
add
mov
fs
mov
js
jo
sbb
shl
fsts
or
out
jge
adcb
scas
movsl
add
sahf
mov
cmp
pop
pop
jnp
inc
andl
lret
andl
cmpsl
mov
jne
arpl
repnz
xor
mov
icebp
test
mov
loopne
stos
mov
pop
cmp
cmc
adc
testb
lret
cmp
lods
ljmp
push
xchg
xchg
jp
stos
cmp
arpl
js
xor
mov
adc
shll
testb
inc
cwtl
adc
pusha
mov
and
lds
xchg
in
mov
jne
sbb
or
sub
xchg
mov
pusha
sub
nop
inc
inc
sbbl
or
pusha
mov
scas
incl
test
popa
and
test
stc
or
adc
lret
dec
xchg
mov
pushf
sub
test
sbb
or
dec
pop
mov
and
dec
dec
sti
add
rol
cli
int3
enter
xchg
jo
dec
hlt
shlb
pop
push
stos
push
lret
mov
inc
jg
nop
pop
outsb
sbb
loope
xor
ret
insl
mov
popa
jecxz
add
sbb
mov
and
cs
inc
push
lods
jno
pop
leave
out
sbb
push
inc
xchg
sarl
cmpb
arpl
xchg
mov
cmp
icebp
cmpl
repz
mov
jbe
add
mov
sbb
mov
inc
xor
dec
scas
aad
aad
imul
mov
out
xorb
xchg
pushf
sbb
gs
into
fidivs
cmp
mov
mov
cmp
jb
ds
stos
push
fwait
add
shrl
fists
push
cltd
xlat
mov
xchg
inc
enter
xchg
mov
in
xchg
sbb
aad
push
and
or
mov
jmp
loopne
gs
mov
push
dec
scas
mov
mov
jp
adc
out
or
dec
mov
pop
ljmp
cmp
rorl
int
gs
mov
call
cmp
inc
jns
or
mov
je
aas
pop
jecxz
sub
out
push
or
shr
dec
fnstenv
add
cmc
in
leave
in
stos
andl
cmc
inc
lods
lods
add
in
or
ds
loopne
or
aaa
xchg
xchg
mov
cmp
cmp
and
xor
imul
mov
xchg
stc
aas
dec
jae
or
mov
push
jle
aad
mov
dec
pop
jb
rcl
lods
pop
and
mov
sub
test
dec
aam
and
arpl
aaa
lret
out
mov
jae
movsb
cli
inc
iret
fsubrs
mov
push
pop
pop
fcmovnu
cld
fstps
sarl
mov
push
push
clc
jl
ljmp
nop
adc
jne
xchg
daa
hlt
jp
push
lcall
enter
or
cltd
dec
cmpb
mov
ss
hlt
loop
out
mov
data16
push
xor
jp
mov
cmpsb
cld
push
cmp
jbe
xchg
jle
std
mov
popf
jg
xor
aas
ret
pushf
in
lods
push
add
and
jp
test
test
adc
push
cltd
popa
jo
cmp
and
xchg
fucom
or
inc
sbb
mov
cmpsl
popf
sbb
sbb
pushf
test
shrb
sub
outsb
rep
mov
jo
ljmp
sub
mov
xlat
cltd
push
mov
lcall
xchg
add
add
xchg
adc
jmp
loopne
pop
daa
cli
imul
and
cwtl
inc
mov
mov
jne
cmpb
sub
jno
and
imull
cltd
divl
pushf
dec
inc
push
jp
pusha
and
arpl
pop
shll
push
or
ret
icebp
cmp
adc
mov
leave
pop
sbb
lea
and
lea
subl
pusha
push
in
jecxz
in
mov
or
je
or
xchg
adc
test
ret
arpl
adc
and
cmpsb
sub
adc
js
add
mov
movsb
xor
mov
pop
cmpl
cs
or
mov
out
push
sbb
mov
dec
inc
mov
pop
xor
loopne
pop
xchg
pop
xchg
sub
dec
xchg
lret
mov
aam
das
dec
pushaw
xor
mov
and
jmp
subl
in
push
and
scas
outsl
test
dec
call
mov
ss
lea
pop
pop
add
int
cltd
adc
ret
dec
xor
je
cli
cmp
les
push
loopne
sub
mov
movsl
push
push
or
and
or
xchg
imul
inc
je
inc
mov
xchg
mov
mov
or
icebp
inc
and
push
cmpsl
push
or
xchg
and
mov
test
sub
ss
sbb
out
xchg
mov
xor
xchg
mov
and
sbb
dec
aam
jnp
ss
insl
cmp
les
jnp
push
xchg
aaa
cmp
shlb
mov
add
jnp
insb
sbb
dec
sti
pop
push
loope
push
mov
lret
stos
xor
mov
stc
dec
adc
jae
mov
insl
fisubrs
xchg
cld
mov
sbb
sbb
add
mov
call
pushf
test
add
push
mov
mov
sbb
add
pop
adc
mov
mov
mov
imul
popf
lret
inc
mov
inc
jmp
cmp
fdivrl
add
inc
aaa
push
and
mov
or
push
xchg
xchg
icebp
iret
add
inc
rclb
icebp
and
aam
pop
xchg
out
jmp
cmp
cmp
rcrl
cmpb
js
xchg
xchg
lods
lahf
xor
push
add
jmp
aam
jmp
push
jge
inc
mov
cmp
or
xchg
inc
push
cmpsl
in
cmpb
mov
inc
adc
mov
mov
ret
xor
icebp
xchg
or
jns
cmpsl
imul
xchg
jge
lods
mov
hlt
sub
push
cmpsb
stos
or
loope
add
ficoml
icebp
idivb
push
inc
and
inc
sub
aaa
push
sub
stos
mov
cmc
arpl
imul
dec
test
xor
xchg
jb
popf
in
lret
nop
cmp
clc
cmp
insb
add
add
jno
call
popf
add
jmp
cmp
inc
pop
outsb
adc
adc
add
ss
push
push
push
mov
ljmp
jmp
adc
scas
bound
jl
add
fs
and
imulb
cwtl
cmpl
fidivrs
or
scas
outsl
in
add
dec
repz
jmp
nop
sub
or
inc
push
inc
retw
pusha
jg
mov
sbb
and
movsl
adc
or
or
adc
push
repz
xchg
sbb
aam
xchg
mov
mov
cmp
pop
mov
push
pop
adc
fsubl
leave
lret
loope
mov
aad
inc
test
lds
jmp
aaa
adc
sarb
mov
inc
imull
jle
int3
adc
enter
push
and
xchg
in
mov
xchg
scas
push
sbb
aam
roll
xor
inc
xchg
rcl
pop
pop
in
scas
xchg
ss
sub
mov
popf
xlat
xchg
cmp
mov
dec
in
lret
cs
add
out
jmp
scas
dec
outsl
adc
mov
adc
sub
jne
xchg
scas
stos
or
and
aas
das
mov
popf
push
fadds
mov
pop
lret
mov
jmp
pop
dec
cmp
cmpsl
loopne
lods
movsl
sub
imul
push
adc
pop
dec
enter
sub
repz
aad
lods
mov
mov
pop
popa
movsb
nop
test
mov
hlt
pop
add
test
mov
popf
or
es
insl
cmp
pop
push
and
mov
rolb
mov
andb
jp
in
in
fisttpl
sti
cmpsl
nop
rolb
bound
adc
leave
movsl
sbb
arpl
je
and
and
or
mov
adc
jb
xor
mov
add
cli
std
push
and
arpl
cs
adc
add
or
das
sbb
pop
mov
mov
mov
cwtl
idivl
or
xor
ja
adc
xchg
out
fcoml
nop
pop
push
cmp
ss
and
cli
dec
cmp
push
adcl
mov
pop
adc
shll
or
dec
inc
lea
sti
outsb
or
add
pop
imul
scas
xor
cmp
fildl
pop
mov
sub
popf
xchg
cwtl
lret
incl
xchg
xchg
dec
push
loop
les
cmp
lret
mov
lahf
and
pop
push
jp
dec
dec
and
mov
daa
jmp
add
mov
fistpl
sahf
dec
push
adc
stc
addb
adcl
ret
addb
lods
nop
mov
mov
lret
xor
xor
rcll
and
out
lcall
inc
jae
das
aad
sbb
adc
inc
and
lods
adc
fldenv
mov
les
jb
jae
dec
xchg
sub
pop
aas
mov
dec
xchg
lods
add
xlat
scas
pop
xchg
sbb
insl
xlat
test
ja
sub
or
mov
pop
xchg
mov
in
test
das
insl
mov
mov
pop
in
xchg
xchg
loop
sbb
inc
stos
mov
jle
imul
imul
arpl
pushf
call
inc
fmull
arpl
cmp
mov
or
jecxz
push
stos
dec
popf
xchg
xor
fldcw
shll
call
pop
xchg
jne
stos
pop
inc
enter
mov
fnstcw
push
add
gs
dec
das
test
test
fs
cmp
in
push
add
add
mov
xchg
shlb
adc
add
mov
sbb
nop
xchg
stos
stc
jg
push
mov
cli
dec
pop
dec
inc
clc
add
ss
pop
mov
ds
pop
pop
push
sbb
and
testb
jmp
sub
mov
cmpsb
push
adc
pop
push
clc
std
in
pop
xchg
rcrb
lret
lds
cmp
sbbb
push
sub
sbb
jmp
fs
int
cwtl
cld
out
fnop
in
adc
mov
sbb
ja
xorb
lock
and
or
pop
dec
cmp
subb
frstor
cld
lahf
ljmp
cwtl
jo
xor
mov
adc
int3
ds
push
xchg
or
jle
lret
fiaddl
enter
fsubrp
and
test
and
fcom
pop
dec
nop
icebp
jno
mov
and
jmp
arpl
push
stos
xorb
xchg
xchg
xchg
leave
push
xor
push
test
test
mov
das
sbb
in
jp
iret
jns
mov
mov
pop
mov
pop
test
mov
push
into
sbb
pop
cmp
and
stos
notl
fnsave
xor
fninit
ret
ljmp
push
xor
out
mov
mov
adc
and
sub
xorl
inc
pop
xchg
call
scas
popa
ret
cmp
bound
lods
out
cmp
out
enter
test
outsb
bound
nop
sbb
loop
icebp
add
dec
sbb
aaa
sub
mov
lods
or
mov
mov
xchg
add
sbb
das
add
pop
xchg
xchg
xor
pop
movsb
leave
repnz
ret
jns
xor
sbb
push
sbb
xchg
repnz
cmp
or
add
sbb
jno
mov
fwait
lds
sub
movsl
sub
xchg
add
mov
jnp
les
and
and
jae
movb
in
push
xor
adc
je
xor
cmp
cs
and
je
or
push
cli
sub
mov
push
popf
jbe
orb
sub
lcall
cmp
add
sub
ret
int3
repz
cmp
or
jle
push
sbb
clc
mov
out
mov
fists
mov
imul
jp
imul
insl
sbb
mov
jmp
cmc
cmpsb
cmp
sbb
ljmp
out
fmulp
mov
mov
adc
pop
sbbb
mov
inc
cmpsb
push
in
pop
and
fmull
cmp
mov
sbb
xchg
push
out
jns
jge
dec
fwait
jnp
insl
add
mov
test
sbb
std
mov
lods
ds
jnp
xchg
rcr
or
or
xchg
cmp
pushf
mov
push
xchg
jo
mov
jge
xor
jmp
testb
je
xchg
or
xor
jg
pop
push
lds
out
mov
mov
cmp
adc
insb
out
and
ss
sbb
lcall
pusha
sub
pushf
jmp
or
push
imul
xchg
movsb
or
inc
hlt
mov
mov
dec
rorb
add
adc
sub
subl
mov
aad
jl
lock
pop
popf
cmpsb
rdmsr
push
ret
jb
out
xchg
adc
daa
pushf
mov
mov
into
and
or
cmc
xor
pop
loopnew
sub
roll
push
aad
hlt
push
pop
shlb
xchg
outsl
gs
out
sub
sarb
ss
fwait
outsb
pop
xchg
xor
or
pop
cmp
mov
rcll
push
repnz
icebp
imul
in
mov
push
add
pop
mov
adc
hlt
movl
or
leave
out
push
jbe
dec
mov
mov
xchg
int3
mov
add
pushw
or
xor
fdivrl
jl
movsb
pop
shr
mov
or
adc
sub
enter
xor
and
and
push
dec
xchg
mov
out
in
test
xor
imul
add
stos
pop
aam
push
sbb
push
pop
movsb
daa
mov
cld
inc
imul
mov
pop
inc
outsb
les
int
int3
fcomps
int
incb
aam
add
pop
mov
inc
push
jae
imul
pop
or
mov
jno
cmp
and
test
and
pop
xor
push
ds
cmpsb
mov
daa
mov
fldenv
add
cltd
jmp
addr16
shrb
inc
pop
jns
or
leave
mov
les
out
xor
and
push
int3
test
sub
lret
inc
pop
lods
jb
stos
dec
sub
xor
jmp
out
fidivrl
adc
sub
sub
out
cwtl
roll
cmpl
jne
pop
and
addr16
add
cmc
jo
rolb
pop
dec
mov
enter
jae
mov
int3
pop
std
adc
aam
jno
bound
loopne
add
cmp
dec
sbb
repz
dec
jnp
lds
inc
stos
and
ja
mov
push
cmp
cli
je
mov
cmp
mov
jle
int3
mov
mov
test
subb
xchg
push
mov
stos
adc
test
loope
stos
dec
add
mov
jle
cld
rcll
push
inc
cmpsl
addr16
inc
fnstcw
xor
sub
testl
dec
xchg
lahf
outsl
lret
test
ficompl
mov
add
inc
push
dec
cltd
pop
push
aaa
out
sub
jbe
adc
xor
jmp
mov
cmp
popf
cmp
roll
iret
icebp
dec
push
xchg
mov
sbb
fisttpll
rcll
push
adc
test
bound
mov
xor
inc
jae
andl
pop
lds
fs
and
mov
adc
inc
shlb
and
mov
cwtl
xchg
jnp
jle
mov
xchg
adc
int
iret
sbb
test
jge
dec
into
inc
mov
leave
xchg
fistpll
in
aas
in
daa
lahf
cmp
ja
xlat
mov
cmp
adc
call
mov
pushf
push
and
inc
sbb
mov
xlat
sbb
sbb
outsb
mov
sti
jmp
out
lea
cmp
xor
cmpsb
lds
mov
cmp
lds
mov
pop
dec
push
pop
movsl
dec
cmp
or
and
sbb
nop
sub
scas
dec
popf
mov
push
jo
cmp
loopne
lret
out
orl
call
pushf
sbb
and
addr16
xor
int
dec
mov
xchg
or
sbb
adc
cmpsl
lret
es
jae
jecxz
pop
rolb
jno
cs
daa
pusha
hlt
xor
movb
or
mov
outsb
xchg
int3
shl
das
sub
sbb
mov
gs
insl
sysexit
subb
inc
gs
jl
mov
push
mov
mov
push
pusha
movsl
lret
mov
and
sub
mov
sbb
mov
scas
cmp
leave
xchg
setge
push
test
dec
inc
jg
jmp
das
xor
lretw
outsl
mov
loop
out
rcrb
fcmovb
push
add
std
jecxz
jmp
in
inc
outsb
pop
fidivrs
ret
aad
fsubp
orl
mov
roll
pop
dec
add
fcoms
leave
cmpsl
pop
data16
mov
outsb
std
stos
or
inc
scas
aaa
jecxz
jo
pop
in
std
pop
std
sub
loope
and
jo
fs
jns
xchg
ss
out
idiv
mov
les
insl
ficompl
cmc
jne
ja
xor
dec
xor
jmp
inc
loopne
jmp
nop
cmpb
mov
jecxz
shll
leave
ret
mov
jb
fcmovnu
enter
fs
nop
enter
xchg
pushf
cs
sub
std
loop
xor
inc
popa
loope
mov
les
xor
adc
mov
imul
mov
xor
adc
pusha
pop
das
inc
fistl
popa
lock
bnd
xor
dec
cld
sub
inc
jg
mov
jg
inc
dec
or
call
mov
add
sub
adc
sub
int3
xchg
int3
aam
aaa
cmpsl
icebp
stos
shl
cmpsl
add
ds
mov
xchg
mov
xorb
inc
sbbl
fsubrs
push
xor
sub
shlb
pop
mov
test
and
push
pop
enter
pop
xchg
mov
enter
adc
sub
jg
cmpsb
mov
iret
dec
jge
idiv
push
es
pop
fucomp
lcall
dec
mov
lcall
pop
sub
pushf
mov
xor
js,pn
fs
popf
xor
adc
mov
or
mov
ljmp
jne
hlt
push
and
nop
add
jae
orl
insb
push
push
iret
push
sbb
fisttps
fwait
lods
cmc
aam
dec
mov
push
inc
or
out
cltd
ja
dec
xchg
mov
dec
adc
lea
testl
sbbl
ret
fdivs
xlat
xor
out
xor
xor
mov
lods
test
inc
xchg
jns
daa
aas
and
jne
jp
dec
std
movsl
mov
fdivp
imul
and
mov
lods
mov
cld
roll
mov
sti
xchg
adc
int
test
gs
jb
and
mov
xor
repnz
or
in
dec
cmpb
push
sub
and
adcl
jg
inc
lahf
lret
and
sbb
add
cs
push
or
dec
jnp
test
shrl
adc
cmp
testb
xchg
or
ret
decb
popa
add
fmul
and
pop
sbb
or
cmpsl
test
inc
push
mov
mov
lcall
mov
xchg
scas
mov
mov
fcmovnb
clc
popl
inc
xor
jp
and
shlb
cwtl
paddsw
popf
imulb
les
out
jnp
lock
fmuls
inc
andl
gs
div
mull
mov
inc
or
mov
es
and
mov
inc
add
mov
dec
dec
and
inc
fimull
movsl
pop
movsb
aas
mov
es
clc
mov
adc
push
stc
out
movsb
sbb
and
add
repz
pop
insb
adc
int3
shrl
scas
xor
lods
xchg
inc
stos
leave
inc
push
mov
add
loope
movsl
xor
es
jp
mov
xchg
sbb
stos
inc
pop
test
adc
xchg
sar
sub
push
push
rorb
in
cs
ljmp
sti
pop
xchg
mov
xchg
in
sub
adcb
push
stos
lods
add
mov
mov
dec
test
mov
iret
or
jle
and
lds
add
aas
jmp
inc
inc
adc
cmp
rcll
push
add
int
cmpb
pusha
loopne
int3
ret
mov
or
pop
addr16
xor
imul
pusha
cmc
pushf
mov
aam
push
bound
shll
jle
dec
xorb
jbe
dec
pop
pop
in
jle
dec
jne
es
fcompl
rolb
xchg
ret
or
loopne
mov
cltd
repnz
loop
jbe
mov
pop
mov
pop
popf
mov
xor
stc
xor
sub
movsl
jo
cmp
push
inc
xor
sahf
jb
popa
push
je
mov
or
push
mov
push
es
cmp
and
add
rcr
int
orb
bndmk
push
xchg
xchg
shrb
mov
sub
jg
jg
push
rcr
add
cmp
mov
xlat
loop
int3
cmpsl
arpl
rorl
sahf
cmp
aad
dec
xchg
popf
xchg
fs
cmovae
xchg
stos
sub
adc
lea
ret
jmp
fmull
jg
lea
add
imul
aam
mov
mov
push
mov
movw
push
mov
jb
xorl
mov
push
clc
xor
enter
cs
mov
and
sbb
rolb
push
xor
mov
cs
repnz
mov
cld
jge
jbe
subl
sbb
cld
lahf
xchg
jno
and
push
aam
aad
or
mov
rcrl
test
xchg
negb
mov
add
cmpb
add
daa
mov
fidivs
sub
jle
push
sahf
mov
les
aaa
jle
push
das
mov
sub
jl
sub
mov
dec
pop
sub
cli
ja
and
jb
push
or
pop
and
insl
shrb
pop
cmc
pusha
inc
repnz
pushf
xchg
in
xorb
push
in
jl
pop
rolb
dec
fisttpl
hlt
xor
cld
sbb
fsts
insl
outsl
gs
mov
xor
lods
jecxz
pop
or
push
push
and
add
mov
mov
orl
stos
pusha
stos
and
out
popf
mov
or
insl
add
xor
or
hlt
adc
and
mov
xchg
rorb
xchg
fldl
adc
adc
add
push
dec
daa
mov
or
int3
jl
aas
movsl
push
cmp
dec
test
jg
xchg
aam
cmc
fsubp
push
fsubrs
add
fs
sub
or
subb
in
ja
js
ds
dec
fstpt
lret
pop
iret
aad
mov
dec
xchg
cwtl
add
out
lea
or
mov
mov
jl
insl
adcl
push
lcall
out
loopne
lahf
jne
pop
clc
out
cwtl
jmp
dec
mov
outsl
cmp
imul
mov
mov
aam
cmp
mov
arpl
out
shll
xchg
mov
daa
lcall
adc
out
loopne
pop
jle
js
je
pop
sub
push
lea
mov
out
fs
cmp
cmp
aad
jb
mov
fistpll
cli
repz
jb
adc
jbe
out
push
out
in
clc
lret
inc
sub
mov
push
mov
mov
adcl
and
sub
test
sti
mov
popf
daa
xor
add
and
clc
mov
pop
lret
fdivs
cmp
imul
mov
gs
xchg
pop
sub
inc
es
push
pop
aaa
inc
push
dec
testl
imul
jb
mov
imul
pop
cmp
sbb
jmp
cmp
daa
xchg
lock
pop
dec
ljmp
out
mov
cmp
cmp
cltd
bound
jmp
insb
in
xchg
xchg
adc
rcll
rcll
sarl
fistpll
imul
insl
mov
or
cmp
outsl
in
add
pop
push
xor
pushl
loopne
int
sub
pop
xchg
push
out
addr16
out
pushf
loopne
mov
mov
test
inc
std
inc
sbb
testl
ret
fidivl
imul
fildl
ds
adc
xor
mov
outsl
lock
inc
jecxz
push
fidivrs
mov
pop
aam
in
lock
fstpl
sbb
aaa
cmp
aaa
cmp
out
xor
mov
fcompl
push
stos
mov
pop
mov
sub
or
mov
push
sub
add
inc
push
cmp
movsl
push
sbb
ds
xor
jno
add
popa
dec
ret
pop
sub
inc
aad
mov
fcomip
sbb
je
mov
daa
add
enter
fisttpll
scas
mov
pop
jne
mov
cwtl
pop
ja
bound
sub
call
addr16
call
rolb
cmp
and
popa
jb
shrl
pop
pop
xchg
dec
xchg
push
mov
loope
std
imul
test
inc
mov
fmull
cld
pop
imul
aaa
sub
sub
in
inc
aaa
aad
inc
inc
ljmp
sbb
inc
arpl
stos
sahf
movsb
jg
push
lods
adc
daa
push
fnsave
or
mov
xchg
es
cld
jp
xor
cmpsb
pop
xchg
loopne
cmp
scas
test
loopne
cmp
sbb
lea
addr16
inc
inc
shll
cli
push
pop
jl
out
aad
add
jl
jecxz
pop
hlt
out
mov
jmp
xor
push
mov
shrb
mov
dec
fiadds
push
jo
mov
adc
dec
fcmovu
scas
imul
inc
icebp
dec
mov
repz
daa
xor
hlt
adc
xor
xor
mov
shrb
inc
insl
xchg
push
lahf
or
daa
dec
das
dec
cmp
mov
mov
test
sahf
adc
xor
loop
bound
xor
sub
data16
pushf
pushl
and
xchg
pop
sahf
mov
xor
ficoml
or
push
dec
lcall
mov
pop
mov
adc
sbb
aaa
push
mov
cmc
or
mov
push
sarb
mov
fisubl
ja
xchg
test
sbb
insb
push
pop
pop
out
mov
pop
outsb
stos
and
mov
push
test
inc
in
in
or
in
or
jo
sbb
add
xchg
xchg
lock
jns
sbb
ficoml
mov
ss
mov
dec
insl
mov
xchg
jno
add
arpl
sub
ljmp
jnp
jp
repz
stos
clc
inc
mov
inc
sub
adc
push
out
jl
dec
in
inc
lahf
pushf
les
add
xor
push
subl
inc
sub
xchg
leave
in
jno
xor
fmull
cli
mov
cmpsb
cmp
pushf
int
mov
pop
ja
scas
and
lods
pop
pusha
mov
mov
jle
ret
mov
ds
mov
and
lods
lock
mov
nop
je
test
adc
push
mov
add
sbb
and
mov
cmp
icebp
push
mov
cmp
sbbb
test
cmp
push
push
repnz
or
lea
repnz
popf
mov
jle
add
es
mov
jp
dec
test
clc
or
jmp
and
adc
lods
es
rorb
mov
gs
fdivs
lods
cli
loope
out
test
sahf
fldenv
jno
push
pop
sahf
dec
outsb
dec
inc
cmp
lods
pop
inc
aad
dec
fwait
cmc
inc
push
sub
mov
adc
inc
lock
negl
into
fistl
sbb
daa
nop
mov
inc
stc
dec
push
jecxz
inc
jmp
and
or
xor
jae
mov
jno
das
lea
mov
ret
shrb
imul
lods
inc
jne
aas
in
xchg
arpl
and
dec
lods
jecxz
push
jae
pop
in
out
sbb
jbe
mov
jne
mov
or
call
repnz
cli
xchg
test
adcl
or
inc
mov
int
pop
test
sti
add
rorl
and
aas
and
ja
dec
fisttpll
fisubs
repz
add
xchg
push
xchg
pusha
jnp
cwtl
mov
lcall
cwtl
push
loope
cmp
xchg
inc
lock
stos
adc
xor
shlb
movsl
ret
cmpsb
in
push
aas
mov
jmp
xor
ret
inc
stos
ljmp
pop
jnp
dec
and
scas
imul
pop
mov
nopl
js
jns
xchg
dec
fildll
pushf
movsl
adc
cmp
dec
mov
ss
xchg
ficoml
lahf
xorl
popf
js
cmp
movsl
in
je
aad
and
or
push
in
jns
or
test
rcrl
notb
and
dec
negl
in
lds
lcall
orb
pushf
and
mov
adc
popf
pusha
arpl
and
test
sbb
sarl
outsl
sbb
push
in
pop
adc
xor
jmp
shlb
sbb
xchg
pushf
mov
and
jno
mov
jmp
mov
roll
aam
sub
pop
xchg
hlt
push
mov
aaa
jle
adc
push
jmp
jmp
imul
imul
repnz
aam
mov
push
xchg
fistl
sbb
mov
test
lcall
or
iret
repnz
flds
push
sarb
das
fstpt
and
cmc
add
sub
and
mov
inc
mov
mov
jno
jmp
fidivs
mov
jecxz
aam
inc
repnz
jmp
leave
pushf
mov
mov
js
icebp
pop
cmp
and
pushf
xchg
jbe
xor
fsubr
push
movl
nop
mov
or
out
mov
popf
test
fidivrl
out
sbb
lds
lds
popf
dec
xchg
pop
mov
mov
gs
out
pushf
mov
sbb
cs
pop
xor
mov
popa
sbb
mov
push
push
fnstenv
xchg
iret
jbe
enter
xor
bound
push
fisttpl
and
das
test
je
xchg
fstpl
sbb
lcall
cmpsl
push
xchg
icebp
adcb
sub
xor
mov
fisubs
or
fdivl
in
xchg
imul
dec
push
shll
xor
cmp
or
xchg
xchg
mov
jge
xor
into
aaa
sahf
les
push
popf
mov
lods
sub
ret
lods
mov
and
loop
sub
aas
add
into
mov
lahf
loop
shlb
imul
movsl
push
lods
xchg
jp
fs
push
xchg
inc
xor
adc
add
push
fwait
jae
fwait
insb
jb
xor
dec
addr16
movsb
fwait
inc
stos
cmp
ds
daa
mov
mov
pushf
lcall
imulb
cld
cwtl
pop
push
add
outsb
movsl
aad
mov
cmp
jecxz
jecxz
push
dec
and
es
add
mov
cld
rcrb
jne
ret
popf
add
sbbb
ret
sbb
pop
ret
shlb
sub
jp
icebp
movsb
mov
add
mov
data16
cmp
pop
int3
sbb
cmc
repnz
mov
xor
push
mov
jno
rcl
and
iret
add
jae
inc
movsl
cwtl
cmp
loope
in
push
cwtl
mov
loope
sbb
jle
add
aas
faddl
jno
xchg
test
add
or
stos
or
push
sbb
adc
inc
pop
sarl
es
int
mov
sbb
and
jb
push
ret
jl
cmp
mov
idivb
loop
mov
sub
mov
and
sub
sbb
lahf
icebp
mov
push
mov
mov
cmpsb
or
dec
sub
sbb
shl
ds
add
int
push
pop
fnsave
push
mov
fists
adc
dec
in
xchg
xchg
push
pop
insb
mov
test
cltd
lods
sbb
or
mov
push
fwait
cmc
mov
loope
xchg
repz
data16
fstps
inc
push
cmp
mov
mov
dec
pusha
fwait
or
call
icebp
cmpsl
frstor
std
movsl
out
leave
push
enter
divl
push
sysret
xchg
es
insl
inc
jno
sarb
xor
inc
rclb
or
aaa
or
lds
xor
popf
cmc
shl
pop
cmp
test
es
dec
push
test
mov
or
not
aam
es
ret
inc
test
jle
ds
testb
repnz
in
mov
cmp
jnp
ds
int
daa
dec
negl
mov
sub
scas
push
jno
nop
add
mov
adc
mov
xchg
aam
jp
xlat
mov
mov
je
loop
mov
int3
jno
adc
lods
jp
mov
add
loop
jle
rcr
lods
sbb
inc
clc
mov
dec
ljmp
imul
addr16
xchg
in
cmpsl
in
adc
lds
mov
mov
jg
and
shll
mov
push
xor
inc
dec
jle
fcoms
xor
dec
insl
mov
xchg
and
jnp
daa
xchg
stc
adc
push
sbb
lods
cmp
or
cmpl
loop
dec
and
xadd
imul
xchg
clts
sbb
clc
and
je
stos
in
push
mov
rolb
mov
mov
fs
add
fstp
or
cmp
insb
adc
and
cmp
mov
aam
jecxz
rorl
sahf
dec
lods
push
and
inc
ds
int3
push
addl
lods
and
cmp
sub
lock
jns
push
js
xchg
movb
loopne
xchg
movsb
or
mov
sbb
cmp
dec
fadds
mov
sub
sbb
or
pushf
mov
aaa
mov
xchg
xor
lret
stos
mov
mov
repnz
xlat
mov
inc
cmp
pop
mov
shlb
stc
outsl
xor
rorb
sbb
xchg
popa
mov
lea
stc
lock
ljmp
jmp
les
aad
sub
shl
les
jbe
push
xchg
xchg
daa
scas
xchg
lret
sti
out
add
test
and
ss
or
inc
xor
out
fucomi
arpl
insl
imul
in
lret
xor
out
xor
adc
sbb
mov
stos
test
sub
push
sub
cltd
dec
jo
sub
or
mov
jae
scas
adc
je
pop
divb
cmp
pop
push
cmpsb
jne
push
pop
sbb
ja
jo
imul
pop
lret
push
dec
mov
pop
movsl
inc
das
cs
or
xchg
in
or
push
inc
std
jmp
xor
dec
pop
subb
stos
push
inc
clc
fnstcw
filds
into
mov
mov
mov
xchg
insl
and
xor
int3
add
dec
xchg
or
or
jno
leave
push
mov
in
mov
decb
sbb
cwtl
inc
shr
fdivrs
fnstenv
rcrl
iret
in
movsl
mov
pop
push
mov
adc
push
mov
je
push
jnp
sub
cmp
aam
ljmp
push
repz
hlt
push
push
scas
pop
pop
cmp
sbb
push
cmpsb
mov
jbe
pop
add
nop
adc
imul
cmp
cld
divb
xchg
or
xchg
icebp
jge
xor
mov
stos
cmp
cmc
add
cld
cmp
in
jp
and
or
aaa
mov
adc
lods
cs
icebp
stos
pusha
sbb
adc
or
cwtl
lea
sbb
hlt
inc
xlat
addr16
or
xor
cmpl
push
mov
test
cmpsb
ret
cmp
dec
dec
sbb
xor
xchg
xchg
sbb
ljmp
sti
testb
fsubrs
loope
and
das
jecxz
mov
sbb
mov
mov
jecxz
inc
push
shrl
pop
adc
insb
imul
enter
jne
lret
fs
ret
mov
fistpl
insb
out
out
inc
enter
jae
imul
xchg
jmp
sub
mov
clc
add
adc
ret
int3
xor
or
mov
gs
xor
fwait
in
mov
mov
sbb
pushf
xor
outsb
sarb
cltd
arpl
gs
movsb
stos
or
fsubrs
mov
jge
adc
aad
adc
cs
aas
pop
js
cmp
lods
push
pop
lea
out
add
jno
mov
inc
out
lcall
aad
inc
xchg
jne
aad
cmpsb
pop
int
and
imul
sarb
jae
call
repnz
cmp
dec
fdivrl
shlb
insb
add
and
dec
inc
movsl
mov
icebp
lcall
mov
adc
mov
cs
insl
push
sub
aas
scas
imulb
mov
mov
call
daa
push
mov
fmulp
call
fwait
inc
mov
mov
mov
je
add
cmpsb
pop
cld
addb
pop
lods
inc
cmpsb
scas
out
pop
out
stos
das
jno
into
xorb
sbb
js
pop
fimuls
ret
and
pop
std
imul
ds
loope
cmp
or
cmp
inc
and
xor
icebp
inc
cmc
mov
cwtl
dec
cmc
sbb
or
adc
push
mov
int3
ret
ljmp
mov
outsb
popf
rclb
or
imul
mov
aam
lock
inc
loopne
push
fcmovnu
mov
and
adcb
shll
dec
mov
jo
xor
sub
push
cmpsb
dec
xor
sub
fsts
sarb
pop
in
push
jmp
dec
push
movsb
nop
pop
jg
inc
popf
ret
sbb
repz
pusha
out
mov
ja
pop
push
push
call
movsb
aas
mov
loopne
cmp
into
sbb
shll
popf
rcl
jo
mov
ja
ret
ss
gs
shll
out
hlt
adc
loopne
in
xor
out
data16
sub
cmpsl
lea
xor
xchg
adc
adc
mov
mov
or
sarb
in
push
pop
cmpsb
mov
insl
mov
sbb
int3
fwait
imul
andb
insb
lahf
rcl
lea
sahf
enter
std
sbb
pushf
pop
mov
pop
sbb
jo
in
inc
ret
inc
adc
inc
add
ret
pop
xchg
sbbb
xor
in
outsl
bound
cltd
popa
cmp
mov
jne
lods
mov
pop
push
aam
out
das
into
mov
and
ja
stc
pop
jge
inc
xchg
mov
nopl
out
xor
cmpsl
fnsave
xor
dec
and
int3
negb
stos
cmp
add
data16
mov
fidivs
adc
mov
fmuls
sub
xchg
jne
lods
or
cmp
sbb
xchg
into
mov
loop
jg
pop
add
lahf
test
loop
and
shrl
cwtl
pop
pop
enter
das
cmp
nop
inc
sbb
push
call
pop
out
cmp
pop
jno
ja
stos
or
arpl
or
repnz
xor
daa
imul
ret
mov
int3
cltd
add
out
fwait
loop
and
fldenv
mov
push
call
jg
das
stc
fs
and
lods
lock
push
dec
push
outsl
dec
lock
xchg
test
scas
out
test
call
mov
and
cmp
repz
jg
out
ret
jbe
outsl
add
loopne
les
das
sbb
mov
and
popa
pushf
incb
pop
lcall
fwait
adc
inc
test
pop
das
addr16
jle
xchg
aas
es
bound
fcmovnu
pop
mov
dec
fiadds
int3
ficoms
mov
int3
in
pop
cli
punpcklwd
ss
cmp
in
insl
inc
sahf
mov
ret
adc
stos
movsl
mov
mov
cmp
mov
jmp
insl
in
and
les
add
mov
xor
or
test
outsl
addl
shrb
fisubl
pop
iret
int
call
cmc
shlb
scas
in
sbb
sub
xchg
int3
and
in
cmp
inc
mov
stos
push
xchg
les
ret
movsl
js
push
xor
jae
pop
lret
fwait
lods
js
and
enter
movsb
pop
or
ficomps
popa
inc
bound
loopne
psrlw
fwait
sub
icebp
roll
cld
aam
adc
mov
adc
in
in
adc
jbe
rcrl
lods
adc
lahf
enter
sub
popa
pop
jb
ja
adc
add
popa
jle
das
jbe
cs
pop
mov
popa
pop
mov
sbb
xchg
fbld
jle
fadd
adc
mov
shlb
pop
pop
into
dec
xlat
sbb
adc
or
push
mov
push
testl
fildl
push
or
cld
and
daa
pop
les
mov
mov
mov
lds
repnz
fisubrl
fldenv
repnz
in
imul
test
mov
test
sti
lea
jge
dec
repz
or
daa
scas
fadds
mov
inc
je
test
in
mov
scas
dec
mov
sub
inc
pusha
pushl
cld
ja
mov
xchg
lcall
loop
jecxz
cmp
cmc
adc
negb
rolb
mov
xor
idivl
sub
into
pop
mov
jno
mov
xor
add
sub
mov
inc
aaa
jl
into
push
movl
mov
adc
adc
jl
sub
jl
sub
jecxz
push
and
cmc
mov
push
adc
repz
jge
pushf
sti
in
push
movsl
rclb
mov
dec
addr16
insb
xchg
pop
jo
inc
sbb
jg
xlat
mov
pushf
push
dec
filds
mov
popa
or
lret
ret
push
or
shrb
cmp
push
jo
aaa
imul
adc
sbb
mov
lods
mov
out
loope
add
cmc
inc
cwtl
maxps
je
mov
push
scas
stc
out
mov
mov
cmp
sub
outsb
ret
fistps
fisttpl
push
in
xor
pop
adc
ljmp
addr16
outsl
cmpsl
mov
pop
fisttpll
fidivrl
enter
mov
inc
inc
enter
inc
shll
or
fwait
jns
dec
mov
fidivs
cs
sbb
pop
fldcw
js
or
aad
push
xchg
mov
pop
or
in
mov
mov
xor
dec
out
or
pop
lds
xchg
in
add
fcoml
mov
rcll
bound
inc
mov
shlb
mov
dec
movsl
push
mov
xor
loope
mov
dec
inc
inc
mov
xchg
or
pop
es
mov
xchg
int
fldcw
es
aam
jp
jmp
fldl2e
jmp
xchg
sbb
push
loop
pop
push
sahf
mov
jl
aas
imul
xchg
pop
cmpsl
mov
add
xchg
fbstp
decb
and
pop
jae
fstpl
xchg
sbb
pop
dec
inc
das
mov
loop
or
adc
iret
push
arpl
out
enter
int
cmp
jno
cmpsl
imul
fisubrs
fiaddl
ja
or
mov
mov
xor
les
sub
jp
xor
jno
enter
dec
jne
xchg
xchg
aad
adc
fcomip
push
outsl
jl
scas
pop
cmpsb
adc
xchg
push
dec
jg
mov
mov
jbe
lahf
jg
or
fdivrp
lcall
pop
mov
dec
dec
push
andl
pop
pop
push
push
add
mov
mov
pop
es
test
sub
mov
adc
cltd
aad
inc
pop
xor
iret
xchg
jnp
popf
pop
movsl
mov
xor
rcll
pop
mov
test
fcom
xchg
cs
pop
push
jp
mov
arpl
lret
mov
inc
cli
mov
ss
and
insl
dec
lcall
rcr
divb
enter
or
leave
xor
cmpsb
inc
lds
xchg
in
or
adc
arpl
cli
mov
cmp
js
out
mov
inc
or
jge
sbb
sti
adc
push
sbb
xor
or
bndstx
jecxz
bound
rolb
dec
pusha
mov
cltd
mov
push
mov
std
das
or
aas
mov
or
cmp
sbb
jae
mov
pop
cld
sbb
stos
inc
push
sahf
sub
lea
pusha
mov
pop
add
lahf
xor
add
mov
pop
jecxz
fcmovbe
mov
pushf
cmc
mov
push
clc
inc
rep
mov
test
mov
fildll
repz
into
fwait
das
push
xchg
push
pop
add
push
aaa
dec
adc
daa
xchg
pop
scas
movsb
mov
popf
std
stc
in
sub
lcall
or
lahf
outsb
push
lcall
adc
es
lret
jp
shrb
cmpsb
sbb
lret
adc
xor
mov
loopne
lret
mov
dec
adc
insb
bound
sarl
pop
jns
add
mov
popf
pop
cmpsl
fs
cs
test
pop
les
sbb
fldt
xor
fdivrs
or
add
pop
ja
push
fbld
push
mov
stos
or
stos
rorl
adc
jno
fildll
cli
inc
pop
cmp
arpl
adc
mov
push
dec
pop
stos
xchg
in
or
out
xchg
mov
cli
stos
mov
mov
cmp
pop
popa
or
jno
cli
push
xor
lods
movsb
fiaddl
andb
dec
into
and
pop
test
dec
push
xor
aas
repnz
jg
push
mov
sub
aaa
fadds
scas
and
cmp
aas
lcall
sti
xchg
sbb
stc
cmpb
pop
or
mov
lea
mov
add
xor
push
sub
hlt
xor
pop
lds
das
pop
fisttpl
orb
mov
pushl
mov
lret
xchg
xchg
pop
inc
sub
pop
cmp
mov
adc
test
jmp
movsb
add
insl
lahf
mov
jae
in
mov
add
xor
fidivrl
aaa
pop
in
push
xlat
xchg
jl
rcll
cmpsl
inc
out
lds
test
mov
pop
xchg
add
maskmovq
imull
push
cmp
sub
mov
popf
nop
dec
sahf
cmp
mov
cli
lock
mov
push
fmuls
xor
cmpsb
jmp
int
daa
cmp
add
mov
fisttps
cli
in
sbb
sbb
xor
add
sbb
nop
xchg
mov
outsl
imul
lds
inc
enter
xchg
out
adc
or
inc
pop
movsl
lahf
rorl
jl
sbb
xor
dec
xchg
je
dec
les
and
popa
dec
sbb
or
in
cmpsb
push
mov
aaa
pop
imul
mov
hlt
xchg
mov
mov
xchg
sbb
cmp
ficomps
sti
xchg
add
inc
and
push
lahf
fisttpl
cld
jb
fiadds
xor
sub
mov
ret
jb
icebp
jmp
mov
sub
in
idivb
into
neg
inc
dec
pushf
mov
mov
or
lea
test
fcomi
mov
cltd
mov
lcall
ret
icebp
pop
or
int
sbb
pop
rcpps
xchg
cmp
mov
mov
ret
aam
ret
dec
out
inc
stos
icebp
testl
lcall
pop
xchg
loope
pop
push
fwait
cmpsb
cmpsb
repz
test
ljmp
mov
mov
mov
pop
and
pop
ret
jo
pop
mov
insb
push
xchg
into
pusha
daa
bswap
adc
add
cs
pop
push
xor
mov
fcomps
cmpsl
or
cmp
cmpsb
fildl
mov
push
int
xchg
push
movsl
pusha
icebp
push
cld
or
test
fwait
xchg
inc
lds
lods
mov
push
int3
lock
push
fstps
mov
mov
inc
popf
sti
nop
in
pop
push
ror
push
cmp
in
jecxz
notl
inc
data16
lock
pop
pop
xchg
idivl
jne
push
aaa
es
and
xorl
mov
mov
push
ret
and
cmc
and
ss
les
test
xchg
jg
jb
int
testb
leave
jns
dec
jo
out
fstl
jnp
and
fcmovnb
dec
loop
xchg
jle
rcr
ret
insb
push
test
mov
push
or
shlb
repnz
pop
push
xchg
push
adc
adc
loopne
jle
stc
ss
lds
push
sarl
dec
mov
mov
ds
fisubrs
cmp
loop
jbe
lret
cmp
popf
add
and
jmp
push
pop
xchg
sub
dec
scas
jnp
shrl
dec
js
imul
shlb
shl
mov
cld
mov
out
push
pop
fcoml
inc
mov
jnp
repnz
mov
aas
aad
push
jg
mov
shl
mov
ffreep
call
pushl
and
push
mov
and
inc
dec
or
aam
les
pop
sub
pop
xchg
das
jne
fidivs
sub
mov
pop
lahf
mov
cmp
adc
or
loope
xor
jne
fwait
jmp
and
jbe
or
test
aas
add
lds
das
outsl
sub
outsb
cltd
push
xchg
sbb
sbb
push
cs
arpl
or
push
into
stos
rorb
mov
repnz
xor
and
das
cmp
sub
je
stc
js
jl
and
out
push
push
enter
push
xchg
stc
cmp
imul
pop
sti
push
dec
addr16
mov
fdivrs
cld
xchg
incb
mov
push
add
movsb
sub
loopne
in
mov
test
lea
sbb
insl
adc
ret
pop
mov
rcll
lds
jmp
jecxz,pn
dec
jge
jae
sti
xchg
sub
std
cmp
aas
mov
lods
hlt
jecxz
and
pushf
sub
cs
push
lcall
outsb
mov
hlt
test
shlb
fwait
or
movsb
pop
cs
test
lods
mov
mov
fisttps
testl
mov
mov
jbe
mov
pop
loop
into
push
test
lock
add
lea
xchg
dec
and
dec
shll
mov
inc
lahf
lock
iret
jg
jae
shl
xchg
out
notl
das
enter
scas
sahf
jbe
mov
jmp
jne
or
pop
enter
xchg
insb
mov
popf
or
mov
mov
lret
mov
mov
sar
jecxz
stos
pop
stos
insl
or
mov
clc
cld
je
jg
inc
lds
mov
pop
or
ret
sahf
leave
adc
aam
dec
xchg
xchg
cli
or
push
mov
sub
outsl
xor
xchg
mov
dec
pop
mov
cmp
cli
lret
popa
xchg
cld
inc
cltd
mov
ds
outsl
dec
js
imul
dec
out
xor
add
test
gs
nop
pop
add
or
cltd
out
int3
imul
mov
sub
or
in
mov
imul
popl
jle
push
add
mov
rcrb
addr16
fwait
int
pop
jno
jno
loop
ret
lods
jle
stc
retw
mov
xor
jge
and
popa
sbb
lcall
sti
aaa
mov
sub
jbe
cmpsl
mov
je
fidivs
pop
adc
cmp
pop
push
cmpb
int
or
jb
rorb
aas
xchg
or
and
push
scas
or
js
cmpsb
dec
cmpsb
dec
pop
aad
dec
mov
jae
fnstcw
arpl
or
add
xchg
cmp
in
lock
sbbl
test
cmp
hlt
jge
cmc
and
loop
xor
arpl
shlb
loop
sub
cli
or
inc
dec
xor
loope
xchg
cmp
cwtl
inc
repnz
pop
mov
cmpsl
add
fdivl
test
mov
popf
sub
xchg
std
in
mov
out
push
repz
inc
fstpl
xchg
xor
cmp
into
gs
xchg
aad
sbbl
pop
adc
xchg
sbbl
dec
jg
pusha
loopne,pn
insl
xor
mov
rolb
gs
sbb
pop
pushf
hlt
clc
xchg
scas
mov
push
rolb
mul
cwtl
das
push
jbe
lods
add
sbb
pop
mov
imul
xor
orb
push
push
aam
into
jge
leave
aad
add
arpl
in
arpl
add
orb
lods
sub
push
cs
cmp
mov
adc
loope
xchg
fs
or
rcl
int
inc
repz
outsb
subb
sub
jae
test
in
clc
iret
js
mov
ss
lods
cmpb
pop
aad
fs
repnz
xchg
sbb
mov
test
and
test
loop
mulb
test
jb
and
push
call
mov
and
dec
mov
mov
jb
push
xchg
aas
dec
jmp
push
mov
inc
mov
loop
sub
sub
adc
fwait
mov
sbb
lods
enter
out
pusha
pop
mov
xchg
cmp
cmp
push
mov
xchg
repz
lret
stos
xor
movsb
add
add
jbe
into
xor
ret
add
pusha
mov
jmp
and
clc
fs
fcompl
mov
in
push
mov
and
mov
xor
sub
and
and
lods
rcr
vpsrlw
xchg
fsubrp
add
dec
add
xchg
inc
mov
mov
sub
hlt
les
jmp
mov
xor
cs
mov
adc
les
push
out
jl
lahf
push
aam
rcl
mov
sbb
repnz
push
decb
sub
fadd
std
mov
pop
add
dec
sbbl
cld
push
sub
cmp
cmpsl
mov
in
daa
stc
adc
inc
cwtl
adc
adc
in
aaa
ret
dec
hlt
mov
xchg
mov
or
xchg
jb
xor
adc
inc
or
hlt
mov
sarb
sub
gs
pop
and
rcrb
mov
js
ds
in
jbe
sub
cli
adc
pslld
mov
pop
imul
jmp
hlt
mov
repnz
inc
aaa
pcmpgtw
aaa
lods
out
in
jge
jno
sbb
adc
andl
pop
stc
adc
rorl
sbb
or
cmp
mov
jle
fcoms
mov
je
mov
jmp
sbb
stos
adc
sbb
or
push
popa
in
add
punpckhbw
out
mov
mov
ror
pushf
roll
clc
pop
les
push
stos
jecxz
loope
sub
fcomps
sarl
pushf
clc
call
in
sub
jl
fmull
mov
mov
scas
sub
gs
in
cmp
sbb
jb
and
dec
out
icebp
sti
xor
in
test
sub
in
les
add
lock
push
fstpl
push
mov
push
xor
fimull
lods
fwait
aaa
pop
mov
out
inc
xchg
out
out
lret
pop
cs
jno
cmp
sub
xor
test
ffreep
daa
faddl
push
add
fldl
or
jnp
jnp
movsl
lds
hlt
inc
xchg
mov
mov
mov
xchg
out
mov
pusha
mov
nop
push
leave
and
and
shl
mov
dec
adc
out
xor
icebp
out
mov
or
jp
xchg
dec
cltd
cmp
dec
or
fistl
dec
dec
inc
cmp
cmp
out
and
repnz
jmp
jmp
mov
cld
dec
lss
in
nop
dec
sbb
fcoms
outsl
dec
push
and
aam
sub
loop
mov
js
mov
xor
mov
sub
add
jmp
int3
jnp
je
aaa
in
movsb
lahf
in
ret
stc
mov
icebp
insb
pushf
into
scas
fstl
cmp
jns
or
loop
mov
ss
mov
dec
icebp
fsubrl
andl
xor
addr16
jmp
mov
push
push
test
cwtl
xchg
loopne
test
mov
nop
adc
mov
jecxz
or
cmc
add
mov
fidivs
dec
xor
jmp
fs
test
mov
mov
jge
cs
adc
repnz
out
fcomp
mov
daa
imul
xchg
push
or
aas
mov
fadds
adc
arpl
mov
dec
inc
xor
ja
xor
lds
xchg
sub
pop
push
mov
aas
shl
mov
shl
mov
sbb
sbb
jge
call
and
sub
mov
fnsave
aaa
dec
lods
push
inc
repz
xor
ljmp
es
add
sbb
filds
xchg
repz
sub
push
fmuls
inc
fmull
into
mov
mov
push
mov
mov
pop
cmpsb
call
int
lahf
xchg
ds
roll
and
cmp
fstps
push
inc
jecxz
mov
inc
lcall
loopne
lcall
sbb
ret
fadds
sarl
xchg
mov
aas
and
dec
cmpsl
addr16
repz
jl
push
jl
pop
cld
mov
push
mov
pop
outsb
adc
fnstsw
or
xlat
daa
or
das
pushf
mov
divps
or
andl
cld
xchg
push
mov
xchg
jmp
cltd
jmp
int
stc
pop
add
adc
in
call
divb
fisttpl
sub
icebp
cmp
pop
xchg
loopne
lahf
xor
daa
pop
jg
mov
outsb
cmpsl
and
outsl
sub
std
test
and
add
pop
lahf
add
scas
cmc
xchg
mov
fisubrl
pop
push
fbld
sbb
push
jnp
or
insb
das
mov
cmc
leave
flds
sarl
out
xchg
sahf
icebp
cmp
aad
test
clc
fidivl
cmp
mov
stos
pop
jae
jge
cmpsl
movsl
jbe
fdivrl
aad
jb
sbbl
cmp
sahf
ret
cmp
jo
jbe
push
lds
hlt
out
repz
dec
mov
subl
mov
stos
jecxz
lds
cmp
fcoml
add
and
or
jge
inc
test
mov
cmp
cmpb
in
outsb
rdtsc
scas
push
jmp
or
insl
testb
cli
aad
pop
mov
or
xlat
cmpl
mov
push
jmp
or
fistl
les
mov
push
add
or
loopne
lds
jne
ja
mov
jo
jmp
push
lahf
rolb
lea
push
ss
lcall
and
stos
fdivrs
add
stc
lods
and
or
inc
sti
bound
xchg
int3
mov
xchg
adc
xor
jge
das
mov
out
pop
mov
push
jmp
rorb
xchg
add
cs
imul
add
fcomps
pop
mov
test
stos
push
pusha
popf
jge
jl
pop
push
cmc
aas
ljmp
cmc
xchg
and
xlat
sub
push
sbb
scas
int
shrl
aam
mov
pop
or
movsb
jp
imul
push
pusha
bound
pop
fildll
hlt
and
mov
hlt
addr16
sub
dec
xor
or
mov
out
ljmp
and
out
jb
hlt
fdivl
pop
jbe
jno
and
stos
repz
shrb
sub
outsl
and
in
xchg
fimuls
add
lods
xchg
jmp
jle
jb
fsts
decb
or
adc
lret
and
and
sbb
pop
ret
push
mov
sbb
ljmp
clc
call
int3
aas
sub
push
mov
inc
aas
ficomps
inc
jg
setb
shrb
pop
xchg
roll
sub
mov
outsl
in
or
data16
and
adc
sub
cmc
or
mov
jns
fldcw
in
in
loope
and
daa
fs
fstpt
or
fbstp
loope
lret
jge
ds
lret
jge
jecxz
call
and
add
js
mov
inc
push
xchg
mov
inc
dec
or
and
or
int
and
xchg
rorl
add
fwait
cmp
or
or
into
popa
mov
in
lock
inc
jle
out
jp
jo
movsl
cmpsl
aam
ret
ljmp
lret
xor
fdivl
sub
mulb
sub
ret
int3
jno
xchg
push
sbb
xchg
aaa
jmp
sbb
scas
rcr
lahf
dec
aas
adc
je
pop
push
pop
pop
mov
sub
or
pop
iret
sbb
pop
cmp
xor
xchg
je
and
dec
add
sbb
mull
rcrb
out
jge
jae
sbb
arpl
fcompl
test
in
push
sti
out
test
and
shlb
inc
inc
mov
ret
sub
xchg
mov
stc
ret
lods
cmp
mov
sbb
scas
cmc
jo
fsub
movsb
cmp
pop
jne
xchg
lahf
and
lcall
fistps
test
int
or
lods
adc
adc
sti
or
cmpsl
or
xchg
mov
aad
xchg
xor
sub
cmp
sarl
mov
out
repz
jno
or
add
dec
lods
shrb
lods
fistps
mov
repnz
fnsave
sbbl
add
dec
shll
push
sbb
mov
push
cmp
cmp
loopne
fisttpl
test
lret
ret
insl
imul
jl
dec
sbb
mov
cli
fwait
adc
push
out
aad
jae
leave
adc
pop
fsub
inc
daa
jg
int3
fadd
repnz
sub
ds
cmc
bnd
and
add
lods
lret
and
pop
mov
lcall
xchg
mov
adc
inc
aaa
mov
mov
pusha
inc
cmp
cmp
imul
cwtl
sub
sbb
sahf
add
mov
shrl
mov
into
icebp
sub
mov
test
pop
insl
out
imul
push
push
aam
gs
sbbl
aas
and
test
mov
xor
xchg
movsl
add
xchg
test
testl
hlt
inc
xchg
pushf
or
dec
xor
mov
mov
outsl
jl
xchg
jbe
in
loop
sub
mov
mov
out
mov
int
inc
arpl
ret
and
lods
test
cmpsb
add
pop
jl
mov
je
repnz
rcrl
pop
leave
data16
popa
dec
fwait
cmp
shlb
inc
lret
mov
mov
pop
lcall
stc
fildl
fistl
push
push
pop
lret
sbb
int
hlt
enter
pop
adc
out
mov
outsb
pop
enter
adc
xchg
cmc
mov
xchg
dec
aam
fimull
add
pop
and
sbb
int
mov
cmp
and
aaa
test
dec
xchg
cwtl
inc
push
mov
jecxz
jne
mov
adc
and
add
or
jmp
rolb
push
les
stos
mov
inc
jnp
pop
inc
mov
mov
xor
mov
lret
add
or
fwait
dec
int
mov
ret
stc
sub
adc
jle
sbb
sbb
fwait
insl
jne
daa
pop
nop
xor
fcmove
and
pop
icebp
push
leave
test
addr16
dec
sub
push
imul
icebp
divl
jmp
mov
sbb
imul
clc
mov
push
push
adc
cld
xchg
sub
stos
fdivl
stos
bound
jo
frstor
nop
jns
aaa
jns
inc
mov
mov
leave
cmp
mov
and
inc
je
roll
mov
mov
xchg
xor
sbb
rolb
loop
cli
lds
cs
dec
stc
sbb
negb
loop
adc
mov
decl
jnp
js
daa
out
inc
dec
ss
rorl
dec
int
mov
shll
add
rolb
lcall
and
loope
ljmp
cmp
fimuls
repz
mov
pop
mov
out
ja
and
xor
imul
sbb
pop
mov
dec
and
ja
xchg
adc
pop
lcall
addr16
fdiv
jge
imul
sahf
aaa
imul
mov
mov
cmp
or
imul
loope
lea
adc
sub
lods
ja
into
fwait
push
pop
pop
pushl
push
hlt
out
les
mov
jecxz
pop
xchg
inc
mov
jge
mov
dec
and
sbb
cmp
push
jne
rclb
xchg
sub
jl
jge
adc
orb
insl
mov
insl
das
jl
adc
xlat
and
cli
cli
inc
data16
stc
pop
movsb
sub
sbb
push
inc
mov
sub
mov
pusha
xchg
inc
test
mov
pop
std
test
movsb
fldcw
and
and
dec
in
aaa
mov
cmpsb
inc
loope
xchg
cs
insb
das
pop
pop
or
pop
outsb
fwait
pop
dec
cmp
mov
out
inc
les
shl
inc
adc
adc
pop
cltd
pop
lea
pop
dec
xchg
cmp
daa
mov
pop
pop
inc
adc
mov
add
iret
es
sbb
cli
cmc
mov
lock
lcall
mov
xor
shlb
mov
cld
mov
cmpsl
mov
or
scas
mov
idivl
push
test
addb
call
jecxz
inc
add
and
aam
call
push
add
xor
cmc
adc
jns
sbb
xchg
mov
or
jb
push
loope
or
jmp
inc
add
in
jb
cmc
mov
movsb
adc
add
add
sbb
jae
imul
sahf
ja
and
sbb
adc
jmp
fcmovnb
sub
fsts
test
je
xchg
testb
and
lcall
xchg
xor
pop
data16
clc
cmpsl
aas
push
mov
into
push
sbb
dec
pop
sbb
xchg
dec
jae
ret
inc
cltd
push
inc
xchg
cmp
insl
and
imull
outsl
xchg
pop
arpl
or
loope
adc
xor
mov
repz
jb
mov
pop
pop
in
xchg
pop
xor
dec
cmp
xor
push
mov
mov
mov
and
gs
xor
cli
cwtl
sbb
mov
orb
mov
mov
out
jb
enter
popa
inc
or
push
pop
aam
divb
stc
xchg
dec
push
adc
addr16
xor
and
push
mov
shll
sub
sbb
mov
jmp
adc
sbb
pop
imul
fistpl
cmpsl
in
ja
mov
test
mov
adc
out
lods
mov
xchg
dec
xor
xchg
repz
and
jmp
fbld
add
enter
movsl
and
push
cmpsb
pop
shr
mov
or
mov
testl
inc
xchg
inc
sub
pusha
hlt
rorb
in
pop
repz
pop
in
mov
push
call
push
jbe
adc
rorb
xchg
out
or
fs
mov
xor
movsl
dec
sbb
xchg
arpl
pop
sbb
and
cmpsl
mov
jmp
cmc
xor
add
mov
and
mov
dec
pushf
inc
cmp
insb
adc
mov
sub
push
jns
dec
dec
dec
push
xchg
pop
sahf
cwtl
xchg
pop
xor
aad
push
imul
and
in
xor
sub
xchg
nop
dec
push
ja
clc
mov
cmp
punpckhwd
std
fistl
jb
in
mov
in
cltd
inc
lods
cmp
mov
popa
nop
sbb
movsl
push
xorb
mov
pop
mov
nop
mov
mov
mov
movsb
iret
fisttps
mov
test
enter
cmpsb
push
mov
stos
dec
sub
fchs
dec
push
shl
insl
call
push
out
or
adc
bound
arpl
jo
mov
and
jno
cwtl
inc
xchg
lret
cmp
xchg
cmp
in
stos
mov
dec
and
sti
inc
stos
test
aam
aad
push
xchg
pop
dec
outsb
enter
fstpl
out
mov
mov
aaa
adc
add
dec
add
lds
mov
dec
add
adc
push
aaa
inc
dec
add
mov
ss
movsb
and
sub
pop
je
fdivrl
nop
test
xor
add
mov
movsb
or
xlat
jl
xchg
add
sub
adc
shl
cmp
sbb
adc
mov
mov
mov
movsl
repz
adc
outsl
je
mov
jl
sbb
or
and
mov
imul
cmc
cmp
add
cmc
loope
pop
xor
insl
pop
vhaddps
xor
dec
mov
push
pop
out
fcoms
xchg
pop
roll
inc
fnstcw
or
cli
or
in
fucom
xor
je
sub
fstpt
jecxz
and
cmpb
popa
jl
ret
loop
xadd
mov
int
push
jnp
push
insl
add
insl
mov
or
dec
mov
and
negl
sbb
mov
insb
dec
aas
call
sbb
fsubrs
or
fsubl
out
and
leave
or
test
mov
out
cmp
jb
pop
push
sbb
imul
pop
ficomps
inc
stos
ret
jmp
pushf
notb
jmp
rorb
enter
xchg
outsl
and
wrmsr
cmp
hlt
xorb
das
out
jl
pop
cld
stos
aam
scas
push
and
xlat
lods
add
pop
je
adc
cmp
cmp
or
fmul
mov
mov
mov
adc
and
cmpsl
pop
or
mov
lods
fidivrs
mov
subl
test
inc
sub
iret
mov
cmpsl
pop
nop
sahf
dec
sub
pop
jl
and
insl
dec
insb
jnp
test
insl
stos
fidivl
imul
lret
sbb
fstl
sub
inc
push
cmp
imul
je
inc
test
mov
jnp
sub
xchg
cmp
and
scas
mov
jns
out
aaa
mov
addr16
incb
stos
push
add
repnz
lods
mov
or
nop
js
mov
cmp
popa
or
test
jmp
jecxz
rcl
mov
lret
or
imul
push
mov
outsb
sub
and
pop
iret
mov
mov
pop
arpl
stos
cs
aas
mov
mov
into
cli
push
adc
es
popa
movsb
lret
jae
xchg
mov
call
xchg
xchg
push
sub
xlat
lds
fistpl
sar
pushf
or
adc
push
xchg
movsl
fstpl
xlat
xsaves
lret
sbb
lea
jecxz
in
inc
out
jnp
fstps
push
adc
jmp
dec
shll
inc
fs
jecxz
push
std
push
mov
bound
outsb
sub
cs
loopne
cmp
pop
fsts
xchg
iret
xor
pop
in
ficomps
jbe
jmp
sub
sub
test
dec
mov
vpunpckhqdq
sub
mov
pop
enter
mov
jns
dec
aas
sbb
and
inc
movd
fdivrl
sbb
mov
icebp
mov
mov
adc
scas
cmpsb
jmp
out
es
pop
movsl
jbe
jnp
jg
xchg
nop
std
inc
pop
push
ljmp
das
movsb
jb
push
out
pop
sarl
and
dec
add
inc
jo
pop
push
sbbb
repnz
aam
fbstp
push
fwait
push
popf
imul
or
add
mov
push
pushl
xchg
popl
shrl
sub
sbb
mov
push
xchg
andb
mov
adc
push
in
mov
inc
inc
dec
jge
repz
cmc
imul
adc
sub
das
pop
insl
cmp
scas
or
jmp
lea
pop
xchg
popa
mov
ss
sub
call
add
jae
out
outsb
push
movsl
pop
adc
repnz
stos
daa
pushf
setg
insl
add
mov
incl
in
cltd
pop
jnp
cltd
push
enter
in
movsl
push
loop
xor
mov
xchg
out
mov
xor
dec
cmp
and
test
incl
sub
push
movsl
std
or
in
mov
fdivr
xchg
xor
jecxz
dec
and
pop
xchg
cmpl
push
repnz
clc
lea
push
sub
test
xlat
xchg
nop
and
and
pop
test
add
clc
ss
test
test
imul
adc
nop
sub
jle
ss
popf
xchg
outsl
jp
nop
ss
xchg
inc
adc
pop
ficompl
push
es
icebp
xchg
jmp
leave
mov
cltd
add
cmp
mov
pushf
xor
push
sbb
push
inc
adc
or
jmp
ss
addr16
hlt
or
xor
sub
jp
lret
and
mov
pop
stos
jno
rol
aad
adc
or
or
test
out
insb
lret
std
pop
out
push
and
push
int
xchg
mov
cld
sbbl
outsb
cmp
push
mov
pop
iret
lods
xchg
movsb
pop
inc
arpl
cmpxchg
pop
into
push
js
sub
fistpl
lods
or
mov
pop
dec
fildl
inc
dec
jne
outsb
cmp
es
mov
xlat
push
call
jg
or
add
and
outsl
cwtl
pop
mov
jg
dec
inc
mov
loope
pushf
inc
xchg
jmp
pop
insb
and
cmp
in
dec
pusha
lret
inc
mov
pusha
cmp
jne
loopne
mov
jns
lods
xchg
addl
aam
pop
mov
lds
or
push
pop
daa
pop
jbe
cld
xchg
or
xchg
and
cmp
mov
test
push
out
xor
adc
adc
fiaddl
dec
jle
sbb
ror
and
aaa
popf
fs
fmull
mov
cmpsl
xor
pusha
sbb
mov
push
rclb
cmpb
sub
mov
or
in
cmpl
int
dec
fcmovnb
jge
fimull
scas
mov
cmp
jle
mov
aas
jne
sti
pop
sub
lret
je
xor
xchg
loop
mov
insb
inc
ss
push
pop
imul
pop
inc
pushf
xor
nop
add
jns
mov
pusha
adc
mov
lcall
mov
insb
in
push
movsl
push
mov
lahf
cltd
sub
movl
xor
addr16
fsubrl
push
xchg
clc
cmp
mov
sub
push
out
mov
xor
jmp
xchg
rorl
inc
mov
add
es
cld
xchg
stc
xor
mov
sahf
pushf
inc
push
insb
test
jmp
dec
mov
lds
lret
scas
sarb
sbb
xchg
ljmp
movsb
dec
jmp
out
gs
and
aam
insl
fld
stos
mov
dec
adc
jl
mov
icebp
call
stos
in
movsl
inc
enter
cmpsb
inc
inc
push
xchg
push
dec
shl
fldl
push
out
dec
sti
mov
sbb
xchg
scas
cmp
mov
pop
pusha
dec
mov
push
sbb
mov
add
pop
lcall
addb
cmp
xchg
shrl
sbb
and
jle
sbb
or
cmp
lahf
lock
pop
mov
push
pushf
outsb
cltd
mov
push
xchg
out
imul
gs
sub
ret
outsl
xor
xchg
mov
loope
pop
loop
push
rorl
add
add
mov
in
adc
aam
movsl
repz
inc
jo
imul
push
adc
push
lret
pop
cmp
ret
hlt
push
andb
push
mov
ss
mov
call
sub
notb
gs
ficompl
das
push
mov
daa
or
push
push
adc
mul
nop
add
mov
mov
out
lahf
adc
cmc
pop
loop
outsb
cmpsb
pop
insl
iret
add
add
xchg
and
stc
and
cwtl
fdiv
aas
adc
mov
stc
sbb
push
popf
lret
push
adc
xchg
loope
push
mov
ret
or
scas
xor
data16
rcll
jecxz
call
jmp
pop
notb
sbb
test
lds
mov
mov
pop
jp
out
mov
add
pop
int
and
enter
inc
adc
inc
push
ja
arpl
aaa
dec
or
sti
notl
imul
xchg
xor
pushf
jae
and
jg
pop
popa
sub
mov
sbb
lret
dec
mov
mov
mov
out
xor
dec
sub
mov
nop
jle
dec
or
pusha
and
cwtl
xchg
fdivs
dec
add
out
dec
fnsave
push
lock
jmp
jbe
pop
mov
add
bound
sub
cmc
call
sub
gs
mov
push
add
int3
jg
fldcw
add
mov
fwait
scas
stc
repnz
add
push
mov
mov
call
pop
sub
sahf
shrb
pop
es
loopne
orb
sbb
lods
add
pop
fcomp
repz
loopne
jbe
sbb
je
dec
imul
aas
insl
dec
cmp
mov
in
mov
shrb
test
rcrl
dec
cmp
in
int3
add
scas
inc
in
rclb
into
push
add
adcl
and
xchg
cs
addr16
push
adc
ret
push
jg
dec
ret
in
sub
jbe
scas
fsubrl
in
out
add
insb
or
icebp
dec
in
mov
das
cmc
pop
aaa
sti
or
xchg
mov
into
jg
jo,pt
lret
jle
pop
push
pusha
push
int3
cmpsb
aas
jo
mov
push
mov
xor
add
adc
and
std
xchg
jle
ljmp
lds
dec
push
and
test
aaa
pop
aad
dec
bound
negb
les
sub
test
out
pop
jl
movsb
nop
xor
mov
sub
jno
dec
rcrl
push
xor
push
mov
daa
inc
add
fadds
pop
sub
mov
push
mov
mov
adc
in
sbb
dec
or
fdivr
loope
gs
rdpmc
stos
repz
cmp
cs
mov
lods
mov
rcll
fcoml
dec
outsl
cld
pop
ret
leave
movsl
pop
call
lret
clc
stos
call
xchg
add
dec
cmc
lods
pusha
rorb
ljmp
loopne
mov
xchg
adc
mov
into
loop
inc
mov
pop
push
push
mov
icebp
mov
adc
sub
js
mov
je
pop
xchg
arpl
xchg
dec
push
sbb
loop
out
jne
jnp
mov
inc
pushf
pop
cmpsb
or
lret
inc
and
or
cld
out
lock
sar
and
push
jg
mov
sti
xlat
cld
lock
mov
xor
add
jno
incl
pop
roll
or
add
push
dec
test
mov
ficoml
xor
cmpsb
mov
mov
mov
jne
sub
shrl
adc
enter
pop
insl
mov
fsubl
fistps
mov
inc
pop
sub
jl
pusha
lahf
mov
pushf
pop
pushf
xchg
shll
popa
push
sub
jnp
in
push
shl
xor
push
jle
pop
xor
or
pusha
mov
bound
cld
inc
jge
mov
adc
pop
and
xchg
pop
jecxz
int
cmp
not
jle
pop
cli
mov
out
mov
popa
iret
jge
imul
add
pop
lret
pop
sbb
xor
ja
gs
ds
nop
loope
hlt
mov
dec
add
push
sub
cmc
aas
aam
mov
fcomps
sub
ljmp
and
pop
pop
daa
xor
mov
jae
cmpl
inc
psllw
ret
xor
push
adc
jmp
outsb
bound
sub
and
insl
cmp
pop
and
test
jbe
int
add
frstor
dec
fs
loopne
shll
adc
loopne
and
out
sbb
lret
sbb
in
imul
or
mov
xor
in
cmp
je
or
jmp
jo
cmp
call
xlat
dec
dec
jp
mov
and
inc
jmp
cmp
push
loopne
xor
pop
xor
mov
fucomp
sbb
or
pop
pop
sub
push
xchg
jmp
inc
inc
push
mov
inc
cmp
in
and
adc
and
and
pop
inc
add
pop
dec
movsl
repz
or
rorb
fdivrs
xor
push
out
jnp
mov
jle
pop
pop
fmul
fistps
insl
into
repz
out
test
sbb
dec
sub
mov
jns
addr16
ss
jo
leave
mov
xchg
or
insb
call
icebp
stc
mov
and
subb
mov
ret
roll
sbbb
test
pop
add
xchg
in
fisttpll
inc
cwtl
hlt
test
jno
lcall
push
mov
fwait
push
fisubrl
cmc
popa
leave
mov
cmpsl
sbb
aam
dec
sub
sarl
aad
xchg
mov
cmpsl
push
sub
sti
mov
test
shrb
repz
fdivs
loop
dec
mov
cmp
push
mov
push
mov
pop
push
jo
test
shlb
and
and
fstpl
and
arpl
adc
je
dec
push
push
arpl
ret
lret
mov
fcoms
sbb
lret
aam
pcmpgtw
cwtl
mov
or
aad
xor
into
es
xorb
out
lods
dec
scas
xchg
dec
in
sti
sarb
aam
mov
in
pop
insl
and
iret
mov
insl
arpl
xchg
popa
rcrb
movl
and
repz
ljmp
adc
test
pop
cs
mov
xchg
test
pop
fidivrs
mov
sub
mov
aad
adc
inc
add
mov
or
pop
xchg
xchg
pop
xor
pop
pop
and
xor
sbb
popf
jnp
inc
cmc
jmp
inc
push
sbbb
shll
push
or
int3
jle
or
mov
pop
push
setbe
loop
jg
add
mov
dec
pop
sti
inc
mov
aad
xor
out
adc
gs
lock
jns
pop
lret
lds
push
add
out
cvttpd2dq
pop
add
lods
mov
dec
and
push
and
inc
dec
data16
lcall
stos
lock
icebp
test
shll
mov
ret
mov
pop
inc
mov
cmp
dec
test
xchg
arpl
mov
scas
icebp
jbe
aam
movsb
mov
dec
imul
sbb
sub
scas
fsubr
add
cmpl
loop
in
negl
ss
xlat
inc
fldcw
out
jnp
and
imul
mov
pop
xlat
ds
lods
and
and
jne
xchg
jo
scas
sub
orb
xor
addr16
mov
cmpsb
pop
jb
gs
mov
push
mov
push
pop
lods
adc
xor
sub
jmp
stos
mov
mov
jno
adc
notb
sbb
ds
mov
aam
data16
hlt
mov
cmpsb
bnd
lret
sbb
or
addr16
or
cmp
aad
or
into
dec
addl
or
cld
mov
push
js
push
sub
mov
pop
les
mov
xchg
mov
sbb
in
loop
fs
sbb
lea
das
mov
cmpsb
les
stos
lret
mov
push
mov
sti
loopne
xchg
in
enter
sbb
pop
popa
lret
jge
sahf
cmp
xor
fsubrl
int
and
je
mov
pop
insb
inc
pop
inc
pop
out
mov
in
jo
aam
dec
iret
je
cli
mov
stos
xchg
pause
jb
daa
in
lret
adc
int
movsb
inc
mov
pop
incb
mov
out
jecxz
pop
sbb
fidivs
ror
cmp
scas
sarl
jb
adc
sub
fldl
push
mov
loopne
pop
subl
scas
rcll
int
jg
push
ficoms
int
mov
xchg
jnp
mov
subl
int
cmpsb
mov
fistpl
nop
push
jne
sub
rcrb
out
insb
sbb
clc
lret
arpl
js
xchg
or
sub
xchg
test
nop
add
pop
pop
dec
push
mov
aad
jns
jne
mov
fucom
adc
stos
sub
dec
cmpsb
jp
and
in
out
loope
cmp
popa
xchg
adc
jge
popf
mov
or
push
push
mov
fcompl
loop
pushf
call
sub
bound
pop
mov
fs
inc
stc
push
dec
imul
push
mov
dec
daa
aam
sbb
cmp
icebp
xor
inc
ds
xchg
ja
cmp
xor
xchg
cmp
and
push
cli
cmp
mov
test
mov
cmc
repz
in
xchg
andb
and
rorb
jne
xor
and
mov
aam
lret
outsb
cltd
sub
loop
and
lcall
jnp
ja
push
mov
and
adc
mov
push
inc
jp
dec
outsl
cmp
pop
jmp
es
dec
or
test
sbb
and
shlb
mov
sbb
in
stos
xor
or
dec
jne
dec
sub
sahf
in
out
shrb
cmp
adc
inc
jbe
roll
rolb
loopne
pop
cmp
icebp
push
jl
fsub
jmp
dec
push
push
dec
rorb
mov
or
les
lret
out
test
int
xchg
push
or
mov
mov
rcl
or
test
mov
lods
popa
cmp
and
sbb
fistpl
add
mov
xchg
push
mov
dec
sahf
jo
xor
mov
lea
andb
cmp
dec
or
out
mov
in
icebp
ret
aaa
clc
int3
popf
pop
dec
psrad
mov
adc
shrb
and
inc
scas
adc
dec
fadd
cmp
mov
ja
je
adc
mov
lods
push
out
mov
inc
imul
cmpsl
or
mov
push
jb
adc
shlb
inc
out
add
outsb
test
popl
xor
sbb
repz
je
mov
sbb
pop
mov
push
test
jp
mov
inc
xorl
and
outsb
out
mov
cmpsb
sbb
push
or
mov
sbb
jp
scas
cmp
jmp
push
jbe
xchg
jmp
sbb
mov
dec
mov
or
mov
push
pusha
popf
imul
addl
sub
popa
jecxz
mov
rorl
mov
jno
imul
xchg
and
int
sbb
push
js
lret
js
mov
xchg
pop
jge
sar
push
jge
stos
mov
add
or
lcall
cltd
xor
shl
or
mov
loope
cmpsb
push
in
outsl
fs
sbb
in
sti
pop
push
push
rclb
push
push
int
scas
and
lods
fs
dec
push
test
pop
xor
jbe
pop
mov
mov
jge
mov
clc
cwtl
or
jns
enter
jle
sbb
data16
mov
stos
sbb
sub
ficoms
xchg
sub
call
enter
cli
cld
lock
mov
adcl
lods
dec
push
imul
pop
or
push
test
fneni(8087
or
pop
insb
xchg
pop
cmpsl
push
mov
cmc
icebp
insl
pop
add
es
stc
sahf
into
int
inc
scas
add
mov
adc
or
in
call
mov
sub
and
fld
shlb
in
cmp
xor
and
xor
call
addl
test
fstpl
je
movsb
jbe
and
jp
jmp
mov
or
mov
movsb
clc
and
test
shll
pop
sub
jns
jae
mov
loop
pushf
inc
fnsave
mov
adc
les
lret
xchg
add
mov
ret
sbb
or
test
cwtl
imul
jl
jo
sbb
and
pop
sbb
jno
imul
int
sbb
stc
dec
xor
gs
inc
mov
fwait
dec
mov
repnz
jmp
scas
adc
pushf
pop
xchg
rorb
pop
adc
movsl
loopne
mov
dec
push
cli
scas
jp
popl
cmp
jp
scas
sbb
arpl
es
fistl
adc
pop
xchg
or
or
movsb
in
xchg
jmp
add
cwtl
cmpsb
and
xchg
mov
jno
nop
inc
xchg
mov
shlb
dec
loope
negb
outsl
mov
stc
add
xor
in
add
lahf
popf
pop
ret
movsl
in
or
faddl
pop
jne
pop
mov
out
call
scas
aaa
pusha
mov
jge
jl
int
mov
mov
push
cwtl
loopne
daa
push
or
loope
movsl
aas
sbb
ret
and
paddw
jp
mov
shr
or
or
lods
sub
mov
inc
call
jnp
je
icebp
test
popf
mov
movsl
call
movsb
sbb
lock
or
dec
and
packuswb
jmp
and
jp
sbb
cmp
jo
mov
roll
std
outsb
fcompl
sub
mov
cmpsl
and
mov
dec
push
subl
cltd
pop
xor
jle
pop
fiaddl
adc
push
dec
js
into
mov
mov
xchg
xor
pop
loope
inc
sub
popf
bound
das
rcr
dec
mov
jp
xchg
hlt
cs
data16
and
push
xor
ret
mov
and
inc
test
cli
pusha
lcall
test
test
mov
add
sbb
lods
enter
outsl
dec
leave
xchg
lret
jl
sbb
lcall
lds
pop
mov
add
lock
outsb
sbb
dec
cld
jl
sbb
cmpsb
insb
sbb
stos
cltd
adc
push
mov
mov
sbb
rorb
in
mov
adc
lret
imul
aaa
call
mov
dec
and
push
test
adc
xchg
sub
sbb
lret
insl
popf
loop
jb
sbb
in
outsb
icebp
add
pushf
mov
cmp
lds
dec
dec
scas
inc
mov
mov
inc
push
or
rorb
insl
fimull
out
pop
jecxz
adc
mov
sti
push
pushf
xchg
or
ret
insb
and
push
fisubs
lcall
xchg
sahf
jb
std
ja
scas
xlat
lret
stc
push
lcall
or
mov
xchg
cmp
int3
fdivr
mov
push
sub
add
push
jge
scas
jp
rorl
icebp
mov
outsl
inc
stc
jbe
inc
es
or
sbb
pop
adc
shlb
mov
inc
add
push
loopne
pop
pop
adc
bnd
lahf
mov
mov
push
xchg
ret
in
push
inc
cmpsb
push
adc
cmp
clc
sbbb
ljmp
and
ss
pop
xchg
stc
sbb
or
add
mov
jb
or
insb
push
out
movsb
push
xchg
je
rcrl
call
xor
and
xor
data16
mov
aaa
jae
addr16
popf
push
cwtl
rcrl
int
enter
std
jecxz
mov
push
repnz
test
test
fisttpl
mov
pop
jp
sub
cmp
adc
aad
pop
pop
inc
dec
sbb
and
inc
lret
addr16
arpl
mov
adc
jno
out
das
gs
jne
ds
movsb
clc
xchg
sahf
bound
xchg
lods
stos
insl
jne
ss
fisubrl
push
jae
and
push
bound
cmp
cmpsb
divb
movsb
cmp
or
push
xchg
imul
stc
roll
shl
mov
int
mov
mov
lods
stos
adc
fwait
hlt
sub
mov
imul
pop
inc
add
cmp
jecxz
imull
pop
and
pop
push
push
xor
arpl
sahf
dec
cwtl
xchg
xchg
and
sub
imul
mov
loopne
stos
mov
dec
dec
sub
xlat
cmp
mov
dec
hlt
sti
mov
ficoml
jne
jmp
hlt
lods
mov
outsl
xor
inc
sub
loop
inc
pop
push
add
cmpsb
lret
out
cmp
cmp
xor
cmp
es
jne
adcl
fisubs
mov
sub
enter
mov
icebp
mov
xchg
loop
and
cmp
xchg
mov
jl
push
incl
mov
fidivrl
mov
fs
push
push
xor
or
sub
xchg
loope
out
inc
sbb
fstl
repz
or
xlat
push
mov
dec
pop
mov
sti
dec
xchg
cwtl
mov
nop
mov
push
lods
mov
xor
mov
outsl
xchg
bound
mov
mov
into
mov
xchg
imul
ja
adc
cld
movsl
sub
adc
aam
inc
hlt
sbb
dec
adc
jb
sub
sub
dec
push
cmpsb
sub
mov
lods
daa
ret
test
xchg
and
pop
decl
std
jmp
jl
mov
out
inc
daa
cmp
insl
pop
xchg
inc
in
addr16
and
enter
aas
sbb
push
mov
dec
fwait
jg
nop
les
stos
sti
cmp
lret
xor
and
xchg
inc
pmaxub
add
push
sbb
mov
shl
push
mov
lea
push
imulb
rcrl
sub
mov
cwtl
clc
inc
and
mov
mov
sbb
aam
xor
push
cmp
and
push
xor
xor
cmc
xor
push
mov
subl
and
dec
jge
mov
addb
cmp
jmp
imul
mov
jp
lret
les
insl
adcl
int
or
pop
stc
in
stc
sub
and
mulb
stos
sub
scas
ret
push
push
pushf
cld
decl
test
push
popf
push
and
jbe
xlat
xchg
inc
popa
es
cs
cmp
xchg
popa
xchg
cmp
pop
mov
scas
imul
inc
sbb
cwtl
and
repnz
push
mov
dec
out
push
dec
movb
cld
sahf
mov
mov
xchg
ret
fisubl
into
mov
add
push
mov
jecxz
xchg
mov
in
cwtl
lods
sbb
dec
movsb
jp
jg
fsubr
ds
or
test
pop
dec
sub
in
divb
repz
nop
sub
mov
das
sbbl
add
sarb
aaa
es
mov
xchg
inc
cmp
push
enter
aam
sub
jbe
and
ljmp
mov
dec
xor
pop
mov
jp
aaa
int3
fs
xor
push
fcomps
xchg
insl
adc
push
in
dec
sub
das
xor
fidivs
lret
in
ret
cmp
stos
xchg
xchg
into
adc
dec
lahf
and
sbb
scas
xchg
mov
stc
hlt
push
cmpsb
push
inc
cmp
xchg
and
cld
mov
repz
xor
clc
or
mov
inc
xchg
movsb
ja
in
mov
inc
jnp
lods
jmp
test
imul
iret
add
lret
test
or
and
in
es
jbe
add
dec
sub
test
push
int
xor
aad
push
std
mov
mov
int
push
arpl
aaa
xor
cmp
and
icebp
into
dec
jle
jns
ljmp
test
fidivrs
pop
popf
in
std
add
rcr
jle
jp
sarl
cli
iret
in
leave
imul
pop
cmpsl
into
mov
into
pop
adc
adc
les
jg
les
cli
fsts
aam
mov
xchg
jnp
add
push
inc
clc
add
mov
xlat
and
cmpsl
xchg
es
cmp
cmp
test
das
push
push
rcrl
xlat
gs
ret
movsb
mov
scas
rcrb
idivb
xchg
loope
lcall
out
push
dec
push
div
sub
cmp
jbe
dec
les
xchg
cmpsl
xor
pop
dec
add
mov
mov
test
cmp
int3
sub
adc
xor
mov
and
test
in
push
dec
adc
xchg
cmp
dec
push
xor
ds
push
or
out
enter
data16
insb
mov
test
cmpsb
out
mov
jnp
pushf
mov
mov
adc
rclb
mov
into
ljmp
dec
xor
mov
xor
push
cs
daa
adcb
bound
inc
xchg
add
test
outsl
call
mov
push
xor
lea
adc
cwtl
fcompl
cli
fisubl
in
cmp
mulb
pop
cmp
push
in
sbb
xchg
dec
inc
jnp
adc
test
jno
cmpsb
roll
sub
xchg
mov
aaa
lea
jecxz
ret
cltd
xor
lret
push
adc
sarb
mov
sbb
ret
mov
and
jmp
jl
loope
ret
aam
jmp
cmc
out
jmp
daa
ds
dec
iret
jne
fnsave
imul
xorb
lock
pop
rolb
in
test
mov
adc
lea
popf
shrb
mov
push
fldenv
pop
mov
movsb
js
cmp
push
mov
pop
in
ja
imul
xchg
rclb
xor
pop
cmc
int
xor
xchg
negb
jae
mov
cvtdq2ps
cld
sub
daa
mov
or
or
ds
and
fcomps
jnp
movsl
shl
sahf
ds
in
in
push
test
pushf
mov
jecxz
cmp
nop
mov
loopne
je
call
xchg
xor
fldcw
into
pop
adc
bnd
push
mov
mov
or
sub
push
call
lods
pop
lock
jp
shll
jl
stos
lcall
loop
aaa
icebp
scas
loop
cmpsl
push
scas
add
xor
jno
out
pop
inc
rcrb
mov
or
adc
mov
gs
pop
and
popa
dec
outsb
test
xchg
in
adc
ss
or
lea
popa
mov
jnp
add
lcall
dec
mov
icebp
addr16
fadds
enter
mov
outsl
stos
dec
out
aas
lahf
bound
pushf
test
jg
xor
jle
push
pop
cmc
test
divb
test
jb
in
loopne
xchg
sub
repnz
cli
pop
mov
xor
push
adc
fincstp
lcall
sub
or
pop
stos
pop
push
mov
pop
or
adc
mov
aaa
xchg
sbb
imul
insb
repz
or
pop
adc
xor
lret
add
loope
arpl
jmp
data16
sbb
cmp
dec
mov
pop
mov
pop
pushf
rclb
lea
imul
or
xchg
and
das
loopne
popf
std
movsl
leave
dec
outsl
adc
les
pop
inc
dec
lds
mov
fs
mov
adc
lcall
lea
sub
sahf
movsb
int3
and
mov
pop
push
pop
xchg
dec
dec
lcall
adc
fwait
repnz
and
push
adcl
xchg
das
mov
jb
fdivl
sub
sbb
add
mov
loopne
xor
shl
mov
sub
push
mov
xor
enter
repz
ret
sahf
inc
push
std
mov
ret
data16
mov
fsubl
mov
andl
dec
js
cmc
mov
push
mov
sub
out
aaa
les
jne
lds
daa
andb
xor
ljmp
out
xor
mov
mov
cmpsl
xrelease
cmpsl
ret
mov
lcall
dec
mov
subl
push
pop
jb
push
fcom
and
fcompl
icebp
sbb
ds
mov
xor
insl
jmp
xlat
inc
cmp
push
push
sbb
inc
aaa
insb
and
ret
js
cld
jno
sbbl
jo
push
out
push
jnp
imul
mulb
in
inc
inc
les
adc
xor
sub
je
inc
jbe
jl
pop
mov
movsb
idivb
sti
ds
fsubrs
mov
push
xlat
dec
dec
pop
pop
les
xchg
adc
mov
xchg
push
ss
xchg
out
cmp
decb
jb
je
adc
sti
push
daa
in
rol
lea
xchg
repz
aas
sti
and
push
lahf
aam
lock
mov
lcall
jl
pusha
xor
xchg
pop
lret
jbe
pop
hlt
or
ss
dec
inc
cld
and
arpl
pop
dec
cmpsb
adc
xchg
adc
sar
dec
lahf
fwait
xchg
filds
fiaddl
lea
lds
jno
mov
aaa
push
mov
rolb
lods
adc
xor
and
popf
outsl
adc
cmp
mov
popa
push
mov
xchg
cmp
push
aas
stc
aaa
hlt
xor
pop
dec
iret
enter
popf
xor
sub
fcmovne
dec
adc
adc
idiv
mov
pop
add
sub
stos
jbe
cltd
cwtl
adc
fisubl
adc
push
cli
out
dec
bnd
cmp
push
hlt
enter
test
inc
push
dec
mov
mov
loopne
xor
cmp
in
sbb
dec
push
or
pop
test
int
stos
int3
inc
or
xor
push
and
cmp
jp
xlat
push
lods
ret
fcomps
mov
loopne
or
sub
xchg
mov
or
inc
sub
in
insb
sbb
dec
mov
xchg
fcompl
push
orl
mov
fstps
aas
icebp
mov
jle
mov
ret
clc
cwtl
jge
pop
cli
adc
push
lret
fidivl
out
and
push
loopne
int
xchg
xchg
out
ret
jmp
jne
mov
and
shll
pop
xor
push
insl
scas
lock
or
cli
or
pop
aaa
or
or
movsl
inc
scas
add
add
fcomps
test
mov
int
stos
mov
mov
stos
cmc
push
pop
xor
stc
js
add
inc
daa
mov
mov
jp
or
mov
mov
das
shlb
xchg
mov
mov
shlb
mov
mov
mov
mov
bound
sbb
xor
fbstp
test
sbb
mov
iret
hlt
or
shll
sub
pop
pop
lcall
addb
daa
xchg
and
popf
cmp
fwait
sub
xchg
push
xor
cmp
dec
and
mov
and
pushf
in
inc
cmp
xlat
jnp
mov
ficoml
fs
shl
dec
imul
cmp
inc
lret
ja
sti
and
inc
pop
lcall
leave
jecxz
jecxz
push
adc
push
addr16
pop
fcomps
icebp
push
cmp
lcall
lds
sub
imul
mov
pop
out
dec
imul
pop
mov
es
sarb
lock
lds
pop
mov
xlat
clc
push
std
xchg
adc
out
nop
sub
outsb
in
mov
test
rcrb
xchg
fstl
sub
and
test
and
jp
lret
mov
add
jae
ret
ljmp
xchg
nop
dec
push
int3
shlb
cmp
and
or
or
mov
add
mov
sbb
jns
aam
aas
cmpsl
add
bound
xchg
out
xor
push
add
repnz
push
out
cli
and
cmp
mov
dec
sbb
fsubs
cmc
fsub
push
ret
adc
xor
jecxz
das
mov
ror
mov
jns
call
jb
imul
mov
sbb
fcomp
mov
add
int
adc
mov
rorl
sbb
loopne
int3
inc
xchg
cmp
sub
and
outsl
ret
iret
push
xor
clc
mov
cld
xchg
pop
dec
cli
add
cwtl
lret
add
dec
cli
cmp
and
iret
sahf
and
cmc
jl
loope
outsl
xor
adc
mov
dec
les
jne
cmpsb
clc
inc
cmp
gs
xchg
int3
vphadddq
out
js
sub
sub
andl
inc
roll
lret
outsl
or
scas
negb
bound
outsb
rorl
test
push
pop
dec
push
jae
and
lock
stos
scas
gs
and
ret
loop
orb
test
cwtl
mov
jb
xor
xor
lcall
adc
sbb
cli
nop
mov
push
sbb
in
xor
add
push
dec
or
pop
int
shl
or
sbb
cli
pop
das
or
push
mov
mov
cltd
rol
mov
lret
int3
mov
xor
dec
mov
test
xor
xor
mov
push
loop
mov
adc
stos
in
shr
out
ret
cmp
mov
adc
xchg
movsb
jl
push
jmp
repnz
lods
int3
xchg
pusha
cmp
pop
fwait
loop
xchg
xchg
pop
jae
sbb
xchg
frstor
xchg
jl
xchg
mov
clc
js
xor
mov
cmp
jp
dec
adc
pop
push
xor
orb
imul
rcrb
movsl
inc
adc
iret
push
pop
xlat
push
daa
push
xor
bound
push
xor
lds
push
xchg
pop
inc
cmp
inc
mov
pusha
mov
mov
repnz
cmp
ret
test
clc
or
xchg
imul
mov
rcrb
adc
mov
sbb
mov
and
repnz
lea
sbb
xlat
out
in
jmp
ja
push
push
cwtl
cwtl
xor
andl
cmp
shlb
cmpsb
movsb
imul
pop
mov
cmp
gs
out
push
js
xchg
shrb
aas
dec
adc
inc
jne
mov
cs
sub
fstps
or
insb
pop
dec
mov
ja
hlt
push
cli
add
jl
and
cmpsb
jecxz
addb
js
mov
das
fwait
jmp
sub
gs
xchg
lret
das
test
iret
inc
dec
mov
push
loop
and
inc
fimuls
ds
and
dec
lock
sbb
add
cli
pop
addr16
lret
lods
xor
cmp
ret
push
pop
xor
daa
add
pop
push
sbb
rolb
movsb
jg
orl
inc
sar
lods
pop
inc
xchg
ficoml
jns
addr16
loop
mov
addl
shr
repnz
jb
fcoms
jne
addr16
push
icebp
sub
sbb
mov
and
push
cmp
jo
pop
loopne
push
fcmovnb
iret
negl
sbb
sub
push
cs
subl
jl
jp
sahf
cmpsb
nop
inc
fnstenv
pop
test
dec
and
mov
imul
arpl
adc
outsb
mov
mov
lods
xor
ret
pop
jns
ja
sub
sub
loop
ss
shlb
or
jb
aad
push
out
pop
stos
push
sahf
pop
shl
cmc
or
ss
inc
ret
aaa
xor
in
aas
xor
aas
add
sub
pusha
pop
cli
mov
not
or
ja
jle
push
popa
jg
pop
dec
sbb
scas
dec
push
jg
out
xor
sub
add
xor
jge
push
mov
cwtl
jb
call
push
push
cmpsb
jb
add
jge,pn
test
pusha
std
leave
jb
mov
fstl
push
sti
in
pop
mov
sbb
cwtl
push
pop
push
push
fiaddl
mov
pop
jle
push
test
dec
outsb
mov
push
out
sub
stos
sbb
pop
cld
push
mov
cmp
mov
push
or
cmp
aad
xchg
lret
jns
test
dec
cmp
push
cmpsl
lea
jo
cmp
jecxz
xchg
cmc
lods
inc
mov
mov
jo
lods
loopne
or
mov
loopne
mov
dec
repz
mov
lods
mov
cli
movsl
into
dec
jecxz
stc
xchg
and
mov
xchg
pop
and
out
mov
outsl
adc
mov
xor
ret
sub
shrl
xlat
and
adc
mov
stos
in
loopne
mov
test
jb
out
cld
jb
outsb
cs
pushf
push
cmp
mov
dec
pusha
lcall
mov
inc
jmp
mov
sbb
addl
inc
push
iret
popa
fimuls
shl
sarl
shl
popf
xor
sbb
push
insb
cmpl
scas
popf
xor
sbbl
push
fdiv
clc
pop
movsb
inc
fs
push
push
mov
xor
mov
rcll
xchg
and
mov
in
sub
jo
lcall
push
and
lcall
out
mov
and
cs
cltd
xor
int
jnp
js
je
scas
cmp
aad
mov
mov
ja
cs
fdivr
imul
pushf
incl
sub
mov
cs
or
imul
popf
fisubrs
shlb
sub
jp
lea
inc
mov
loope
push
sbb
adc
jp
sarb
pop
fnstcw
and
hlt
add
fwait
iret
lcall
cltd
cmp
sbb
cmp
or
dec
xchg
divb
ljmp
mov
mov
mov
cli
scas
dec
out
push
cmpsl
je
loop
scas
cmpsw
fsin
outsb
cmpsl
jecxz
jmp
sbb
cmpb
filds
int
mov
sbb
jge
mov
xchg
pushw
jp
hlt
int3
mov
hlt
xor
das
cwtl
cmp
fildl
fdivs
or
inc
xchg
bound
loope
call
mov
sub
lcall
pop
cmpsl
ret
push
and
add
outsl
or
das
xor
pusha
das
testl
push
mov
push
and
jnp
loop
in
clc
sbb
orl
scas
cmp
mov
push
xlat
jnp
sahf
push
mov
call
fisttps
ss
fs
mov
lea
clc
test
fldenv
jo
fwait
push
call
rcrl
mov
scas
pop
mov
mov
or
fisttps
cmp
out
enter
inc
sub
xor
loope
imul
sbb
and
pop
pop
jnp
movl
cmp
cmp
leave
jb
xor
arpl
inc
adc
sub
shll
fildll
mov
pop
popf
stos
in
addb
sub
daa
lret
jno
sub
cld
cmp
mov
decl
push
jp
sbb
dec
mov
pushf
out
stos
shll
cld
jo
sub
rclb
cmp
gs
add
popf
jns
pop
dec
mov
filds
in
call
lds
mov
inc
in
push
xchg
jle
addr16
das
in
int3
adc
push
fidivrs
push
push
es
jle
movb
scas
sub
imul
fstp
shrb
ret
roll
jge
outsl
or
cmpb
mov
sub
int3
movsl
mov
arpl
fildl
inc
fnsave
mov
stos
fcomps
cmp
subl
xchg
test
cltd
cmp
add
into
std
movl
sub
mov
add
sbb
bound
mov
push
addr16
push
mov
jo
scas
fwait
jmp
jmp
add
testl
push
shll
cmpsb
and
lcall
gs
xchg
push
psrld
data16
or
fstpl
loop
pop
iret
jmp
ret
push
data16
lcall
jbe
testb
hlt
and
cmp
inc
rorb
push
mov
js
adc
and
cmc
or
cmp
cmp
js
imul
dec
enter
jns
push
test
popf
shr
rorb
mov
movsl
xchg
outsl
or
pop
loope
enter
in
shlb
or
imulb
ljmp
cmp
dec
add
pop
xor
dec
lret
lock
mov
dec
cmpsl
mov
sub
test
dec
jle
sahf
jle
sbb
scas
in
xlat
xchg
cmp
fsubr
test
mov
aaa
and
push
sub
cld
jo
test
xchg
nop
pop
stos
mov
movsl
xor
xlat
fcomps
enter
inc
sahf
rcl
ret
push
dec
jp
jbe
mov
push
jge
lret
xor
mov
xchg
cmc
adcl
out
push
outsl
sub
inc
xor
pop
and
aaa
int3
cmp
pop
lahf
fnsave
push
dec
mov
icebp
and
dec
mov
ret
lcall
or
cmp
inc
shlb
xchg
and
push
ret
adc
xlat
addl
push
pop
inc
fistpll
fstl
icebp
pop
test
loop
mov
pop
imul
enter
lahf
bound
and
mov
hlt
adc
stc
mov
into
mov
js
mov
pop
push
mov
sti
movsb
sub
jle
mov
jne
xor
jnp
inc
ljmp
mov
pop
mov
adc
test
ss
int3
add
pop
dec
fstpl
addl
fcoml
in
cmp
inc
sbb
push
sub
iret
adc
mov
pop
lea
sbb
test
imul
mov
popf
test
xchg
pop
out
icebp
pop
xchg
out
and
cmp
es
popl
sub
and
jg
fmull
shlb
or
pop
sahf
pop
loop
mov
mov
jnp
loope
sub
mov
lock
mov
ret
in
ljmp
shr
push
out
pop
dec
pop
pop
outsb
dec
xchg
push
aaa
jle
hlt
adc
clc
mov
popf
in
js
dec
jg
addb
adc
cmp
in
mov
mov
xlat
inc
xlat
testl
jmp
dec
mov
fdivrl
dec
clc
js
mov
cltd
inc
add
fcmovb
xchg
ret
mov
cmp
sbb
mov
pop
dec
cld
and
mov
pop
shll
gs
addl
mov
shl
xlat
in
popa
sub
ds
sbb
shr
cwtl
fs
rcll
lods
shrl
das
push
xchg
mov
lods
cmp
jge
insb
jg
ja
add
xor
mov
sbb
gs
sbb
jg
sbb
mov
fsubl
lds
cmpsb
jbe
pushf
in
ret
popa
pop
mov
fistps
sub
js
mov
repz
int
out
cltd
add
mov
mov
ret
fnstcw
rcr
fwait
add
sbb
ss
iret
aad
inc
aad
and
pushf
push
cmp
mov
cmp
mov
sahf
adc
pop
inc
mov
in
pushf
jb
lahf
jb
sbb
or
mov
imul
addr16
ljmp
stos
xchg
and
fisttpl
fucomip
repnz
test
mov
xchg
and
fstps
shlb
xchg
add
fwait
std
inc
js
and
and
inc
fstpl
sbb
sbb
xor
or
testb
idivl
mov
pop
adc
and
cmpsl
and
push
adc
adc
int
or
jecxz
dec
movsw
divl
test
fwait
jp
hlt
stos
aam
iret
push
testl
or
jnp
push
lds
aam
movsb
xlat
fs
pop
jp
or
sbb
mov
stos
jp
mov
adc
fcmovnbe
jge
hlt
mov
jnp
je
ja
and
in
rorl
outsb
cmp
clc
popa
mov
lcall
jp
jmp
ret
push
push
cmp
into
inc
cltd
pop
into
cmc
push
adc
xchg
shl
xor
cmp
mov
sub
ror
mov
outsl
mov
lret
cmp
inc
or
add
repnz
dec
add
ljmp
mov
mov
mov
subl
ljmp
dec
cmp
and
pop
add
push
cmp
mov
pop
rolb
add
arpl
rcr
mov
dec
lret
xlat
xchg
call
bnd
arpl
mov
cli
pop
loope
ret
movsb
addr16
imul
xchg
cmpsb
in
shlb
xchg
and
dec
dec
dec
daa
daa
pop
icebp
imul
lock
and
hlt
fidivl
adc
addl
cmc
or
ret
out
outsl
cmp
dec
js
imul
sarl
push
cmp
push
xchg
xor
mov
aad
das
push
dec
loop
jbe
jno
adc
cld
mov
fidivrl
and
and
paddw
lcall
push
icebp
lahf
mov
mov
dec
rolb
lds
lcall
cltd
fdivr
cwtl
jmp
sub
fsubl
cwtl
inc
push
aad
je
cmc
outsb
addr16
je
lcall
sbb
adc
and
inc
mov
repz
xor
cmc
faddl
xchg
stc
stos
shll
daa
sub
pop
jbe
dec
adc
aas
loopne
sbb
jns
repz
push
aas
pop
sbb
pop
scas
cmp
dec
imul
mov
add
mov
mov
insb
mov
and
or
jb
in
push
sub
xor
jg
add
fmuls
dec
push
mov
inc
or
stc
cmp
fisubl
mov
or
cmp
adcl
incb
mov
ficompl
in
arpl
outsl
fistpl
jmp
mov
iret
decb
mov
sbb
dec
cld
push
arpl
sub
xchg
dec
add
fnstcw
adc
aas
scas
push
shll
jl
and
or
leave
dec
movsl
inc
pop
test
xchg
addb
xor
or
aas
loopne
cmp
jo
xchg
fwait
lea
push
push
dec
xlat
dec
ss
xor
and
data16
stos
mov
mov
xor
insl
repnz
lock
cmpsl
aam
imul
test
outsl
pop
adc
or
in
cmpsl
stc
sahf
xchg
pusha
dec
add
rcll
repnz
in
daa
fldcw
inc
mov
fdivl
movsl
pop
mov
adc
cmp
mov
popa
jge
xchg
sub
fsubr
ficoms
nop
jbe
ret
and
jl
push
xchg
ret
imulb
mov
out
cmpsl
dec
push
data16
jnp
in
ds
fnstenv
mov
mov
inc
jb
or
pop
in
mov
xchg
mov
fwait
aaa
shll
movsl
cmp
xor
xchg
lds
jns
cld
sbb
ss
xchg
nop
int
mov
fwait
cmpsb
dec
xor
mov
lods
push
jbe
cmp
imul
stc
add
cmp
pop
or
sub
inc
rolb
sbb
jne
push
sub
pop
and
arpl
fnstsw
xor
pop
add
and
mov
add
aas
xchg
sub
in
movsl
sbb
aad
or
in
mov
cwtl
mov
push
mov
xor
imul
mov
dec
and
push
or
lahf
cmpsb
or
int
out
notb
jne
movsl
lods
scas
es
jo
test
sbb
in
pop
jl
push
insb
leave
cs
or
and
sub
je
pop
imul
jmp
sub
push
test
jp
lds
fisttpll
pop
sbb
xlat
sarl
jecxz
sub
mov
mov
mov
mov
lods
add
adc
adc
cli
jns
out
sbb
bound
vpcmpeqw
push
xchg
jmp
push
mov
add
adc
mov
stc
stos
dec
and
dec
and
loope
pop
cli
imulb
jg
pop
pop
jb
sub
std
sub
cmp
sbb
mov
jae
pop
test
mov
test
rcll
xchg
mov
pusha
cmc
and
scas
and
xchg
out
addr16
cmp
lahf
test
lahf
daa
daa
into
into
push
sbb
pusha
jmp
ss
cltd
shll
ja
jmp
rcrb
pop
push
scas
test
adc
mov
xchg
pop
movsb
fistps
pop
xchg
pop
push
jecxz
aas
sahf
hlt
push
and
test
lods
loopne
ror
popa
iret
sub
or
add
fld
in
addr16
jge
shl
mov
push
jp
adc
loope
repz
in
jnp
idivb
mov
pop
into
mov
imul
cltd
pushl
in
sub
cmp
sbb
add
repnz
xchg
add
adc
aas
jno
xor
jl,pt
add
mov
push
add
cltd
push
pop
dec
pop
xor
cmc
add
sti
jne
mov
addr16
aam
mov
imul
jmp
loope
pop
imul
jo
and
push
or
lock
ret
aad
cmpsb
sub
inc
pusha
in
lret
adc
mov
xor
mov
pusha
mov
push
arpl
xorl
cmpl
add
sbb
pop
shr
popf
out
mov
mov
mov
and
das
push
in
xchg
mov
mov
and
out
cmp
cwtl
movsl
cld
push
fisubrs
shrb
adc
sbb
cmp
outsb
cmpb
adcb
jae
push
mov
jmp
icebp
out
out
fwait
sarb
xlat
jo
inc
and
fcmovu
out
jbe
jbe
push
jp
xor
cmp
adc
push
movsb
mov
jns
lods
pop
cmpsl
mov
out
insl
add
imul
jne
push
lds
cmp
out
jne
repnz
rcl
xchg
loop
lcall
pop
cwtl
mov
ds
pop
mov
lret
out
push
addr16
scas
inc
pushf
xchg
lret
mov
sub
outsb
in
jbe
cmp
test
push
popf
test
or
arpl
idivb
mov
dec
sbb
fs
dec
mov
sbb
pop
or
xchg
fsubr
sub
push
cmp
jae
sbb
and
xchg
fisttps
es
and
mov
jns
test
pop
push
out
and
push
dec
mul
lret
xchg
fidivs
cmp
arpl
sbb
jmp
negb
push
stos
out
jo
jnp
mov
push
das
fsubrp
sbb
in
adc
lock
inc
ret
xor
outsl
out
lock
or
out
cltd
or
add
lcall
int
xor
lret
daa
mov
mov
sbb
stc
push
pop
cs
xlat
push
fadd
push
mov
out
push
fidivs
adc
push
inc
sbb
push
and
aam
jnp
test
repnz
adc
ficoml
in
dec
mov
fildl
into
out
add
insl
sti
add
push
movsb
mov
out
xor
sbb
lcall
adc
in
jle
add
in
xchg
sub
cwtl
jb
and
rolb
jae
xchg
adc
outsl
pop
and
push
ljmp
js
std
pop
xchg
xorb
sub
xor
faddp
fisttps
sti
dec
or
mov
mov
negl
stos
adc
push
cmp
mov
sahf
lret
inc
sub
cmpb
test
xchg
sub
mov
mov
ret
mov
mov
mov
push
sub
mov
sbb
pop
sub
aaa
lods
add
sbbb
jmp
lock
and
and
mov
mov
cmp
subb
sbbb
mul
in
popa
push
jl
aad
sbb
jl
push
mov
cltd
std
pushf
loope
jg
xchg
jl
int3
ja
insl
js
pop
pop
jmp
movsb
ljmp
pop
out
subl
push
sub
pop
pop
jns
pop
es
popa
lcall
fstps
cmp
lret
or
enter
inc
xlat
into
pop
fldcw
fiaddl
imul
negb
daa
out
xchg
xorl
fildl
ds
enter
sbb
push
aas
xor
add
dec
pop
inc
sbb
jmp
mov
mov
push
rol
mov
adc
cld
sub
cmp
movsb
cmp
loopne
addr16
push
mov
xor
jbe
push
mov
xor
mov
mov
or
push
addr16
aam
cltd
jg
pop
lahf
icebp
bound
dec
mov
pop
adc
xchg
cmpb
xor
xchg
les
out
pop
repnz
pop
scas
jg
xchg
lods
sub
nopl
mov
fmul
inc
cmp
ret
xor
sbb
lds
js
xor
ljmp
movsb
enter
adc
cmc
daa
lds
iret
sbb
int3
rcll
shlb
inc
adc
push
stos
add
mov
mov
lret
ror
jae
or
lock
ds
dec
inc
xor
inc
clc
imul
lods
mov
dec
pop
mov
dec
clc
xor
sbb
add
jp
dec
pop
popf
mov
sub
inc
jmp
jb
sahf
stc
xchg
bound
mov
xor
in
pop
rcrl
jno
xchg
sub
sahf
rcrl
lods
mov
ret
sti
mov
out
aam
ror
adc
mov
lcall
mov
gs
mov
xchg
mov
fmull
add
sub
xchg
mov
fisttpl
sub
pop
mov
out
neg
sub
je
mov
xchg
pop
iret
aad
mov
xor
mov
xchg
adc
in
call
ljmp
in
and
enter
divb
mov
les
push
push
xchg
inc
mov
popf
cltd
mov
loope
adc
mov
mov
pop
dec
jae
ljmp
cmp
mov
movsb
cltd
sbb
ljmp
sub
mov
mov
push
xchg
bound
fcmovbe
xor
jae
test
xor
imul
out
xlat
fyl2xp1
dec
sbb
inc
cmp
add
mov
cmp
jecxz
add
add
pop
jae
repz
xchg
pop
rorb
inc
andl
adc
push
push
stc
jmp
mov
push
sub
movsb
cli
in
daa
mov
or
push
fdivrp
lret
cmp
loopne
punpckhbw
add
sub
addr16
mov
repz
testl
dec
xchg
add
dec
hlt
and
into
sbb
cmp
add
mov
adc
movsl
dec
sti
fcmove
xor
sub
arpl
incl
pop
std
and
dec
cmp
imul
stos
das
add
pop
fiadds
mov
adc
xchg
push
popf
cmc
pop
out
mov
or
jno
popf
pop
jns
movsb
pop
mov
into
mov
jno
test
jg
call
fcmovne
int
mov
outsb
mov
adc
add
outsl
and
ret
push
daa
cmpsl
imull
and
call
ja
sbb
mov
sub
testb
adc
push
xor
and
ret
pop
in
and
adc
xor
cmpl
jb
cmp
popa
sub
icebp
mov
mov
and
in
sub
pop
test
popf
mov
cmp
je
gs
sarb
xchg
mov
shlb
push
add
lahf
popf
out
dec
call
je
adc
sub
int
imul
pushf
jg
rcr
jle
dec
imul
mov
std
cmp
sbb
adc
sahf
scas
or
jne
out
in
push
fsubl
shrb
arpl
and
data16
addl
loope
leave
cmovbe
pop
mov
repnz
insl
fdivs
or
leave
test
add
imul
adc
sub
repz
mov
jne
fwait
and
or
je
dec
dec
and
pop
jbe
mov
push
push
outsl
xor
lock
pop
push
push
int
into
sub
cmp
mov
add
arpl
inc
mov
or
mov
movsb
mov
push
dec
fldcw
cmp
in
incb
test
fisubs
std
stc
jle
cmp
xchg
and
mov
xlat
jae
sbb
inc
xor
xor
mov
jg
cltd
adc
aas
sbb
mov
jmp
out
arpl
lret
cmpsl
lcall
out
jnp
icebp
xor
rorl
incl
cmp
mov
inc
ja
dec
aad
xchg
es
mov
je
fidivrl
cmp
lahf
lahf
mov
add
frstor
jl
mov
and
les
mov
mov
aam
jmp
xor
or
inc
pop
rclb
ficomps
fcompl
push
stc
push
jmp
aam
xor
mov
and
push
xchg
push
or
mul
sub
fs
sbb
leave
call
test
loopne
xorl
clc
sarl
xchg
repnz
push
imul
sbb
popf
scas
pop
xor
push
pop
sub
sbb
push
mov
adc
aas
jmp
rcll
ret
sub
adc
inc
cld
enter
loopne
out
push
movb
clc
mov
xchg
data16
repz
and
push
dec
pusha
mov
dec
fsubr
pop
movsb
stos
inc
cmp
push
add
jo
stos
outsb
fildl
test
inc
xor
ja
les
dec
mull
in
adc
out
mov
jp
icebp
enter
ret
mov
xor
inc
dec
pop
inc
insb
scas
mov
and
fildll
ja
cmp
test
jecxz
movsl
cwtl
cmp
das
jnp
aad
inc
mov
test
enter
inc
pushf
cmp
dec
movsl
push
or
adc
mov
bound
jmp
cli
je
sbb
or
sub
push
push
sub
divb
popf
ret
lret
adc
adc
sbb
test
call
or
lods
daa
aam
sbb
cmpsl
lds
shlb
sbb
xchg
jecxz
enter
inc
arpl
inc
xchg
popa
cmpsl
adc
fiaddl
mov
mov
cmc
aaa
mov
mov
daa
cmp
das
aas
arpl
imul
loopne
cwtl
enter
shlb
adc
push
fisubrs
imulb
shr
rclb
xor
repnz
aas
dec
adcb
push
jnp
xor
fsts
lcall
pop
push
add
inc
stos
dec
gs
push
jmp
jo
pop
sbb
dec
test
lods
or
in
sub
jg
xor
lods
popa
into
mov
mov
cltd
shr
call
add
enter
popa
push
cltd
cmc
dec
cmpsb
std
xchg
ret
imul
int3
in
mov
push
cmc
nop
xor
fldl
lock
xchg
in
test
das
andps
aaa
xchg
cmp
add
jecxz
jns
loop
imul
fwait
dec
test
dec
ror
cld
nop
stc
lds
aas
push
xlat
add
enter
add
imul
imul
mov
sub
test
push
or
jno
jecxz
orb
sti
sbb
fmull
adc
sbb
mov
xorb
inc
cmp
fistpll
or
jl
out
add
in
mov
inc
mov
jno
es
push
bound
test
hlt
insl
popf
push
popa
repnz
dec
pop
and
dec
mov
shr
pop
movsl
arpl
dec
xor
int3
xor
dec
ret
xor
push
adc
push
fcoms
pop
cmpsl
sbb
das
xor
out
outsb
daa
adc
es
insb
jae
mov
test
add
or
push
pop
sub
sbb
pop
fldenv
inc
mov
inc
inc
shl
cmp
in
jb
mov
jmp
out
in
cmp
dec
push
xor
cmc
jno
orb
push
pop
shrb
inc
jecxz,pn
and
daa
push
je
or
add
pop
lods
jp
mov
bt
popa
pop
imul
sbb
push
addr16
fcmovnu
mov
inc
mov
and
outsl
cmp
adc
cmovg
dec
or
call
imul
adc
push
sub
adc
orb
push
sahf
mov
sbb
imul
lcall
das
or
mov
pop
pop
mov
adc
fists
mov
mov
sub
push
mov
lods
std
pop
mov
jmp
mov
dec
sub
jo
xor
mov
add
cmp
xchg
pop
stos
pop
pop
das
cmpsb
andb
imul
ret
enter
std
jo
call
cmp
cwtl
lret
test
mov
sbb
out
dec
mov
ret
inc
rcl
in
in
add
inc
je
arpl
scas
test
dec
xchg
lret
out
xchg
pop
push
jmp
leave
xor
ret
pop
push
cmp
ljmp
xor
jg
mov
sub
mov
pop
fdivs
jmp
int
jecxz
idivl
jecxz
sub
jbe
jbe
cmp
cmpsb
les
mov
jo
sti
add
push
mov
movsb
cmp
mov
stc
loop
xor
fsts
sti
in
cmp
cmp
xchg
rcll
popa
cmp
sbb
gs
dec
mov
jp
fisttps
push
jae
mov
add
pop
or
ret
popa
and
sbb
and
mov
or
or
mov
mov
adc
mov
adc
xchg
jge
bnd
das
jne
dec
mov
push
pop
and
and
mov
inc
jae
xlat
pop
arpl
sub
push
pop
lea
pusha
push
add
xchg
mov
repnz
xchg
xor
ficompl
loope
ret
pop
xchg
cld
inc
sbb
out
cmp
leave
notl
add
rcr
dec
sbb
lods
loopne
and
test
pop
pusha
cmpsb
lcall
jge
stc
cwtl
mov
xchg
adc
dec
push
movsl
lret
in
pop
sub
cmp
push
cld
and
out
and
push
xor
and
addb
or
mov
gs
outsb
xor
push
push
aaa
stc
pop
mov
pop
cmpsb
jns
out
mov
fisttpll
sti
das
int
or
pop
and
lret
cmp
insb
test
pop
mov
and
orl
cwtl
hlt
aas
or
hlt
or
or
inc
out
leave
add
ja
movsb
lods
fwait
inc
add
cmc
lcall
mov
and
sbb
loop
inc
xor
loopne
pusha
or
int3
push
test
and
and
test
orb
repnz
insb
cli
fcompl
xor
xchg
xlat
lods
pop
addb
mov
movsb
or
aaa
nop
sbb
loop
pop
xlat
lret
pop
fisubrs
test
andb
cmpb
bound
cmp
sub
xor
xor
test
ljmp
lret
push
insb
mov
scas
xor
and
fs
xor
enter
inc
xchg
dec
mov
cltd
sarl
or
xor
inc
cmp
mov
sub
addl
add
mov
imul
mov
rcll
pusha
movsb
clc
insb
scas
pushf
or
jle
fwait
fs
or
lea
inc
scas
sahf
aas
pop
mov
out
lahf
sbb
mov
pop
into
mov
in
in
mov
and
pop
inc
das
sub
mov
sbb
out
mov
adc
jae
add
and
in
lods
xor
loopne
ds
repz
insb
out
nop
outsl
sub
orw
xchg
aaa
stos
jns
mov
xor
pop
xchg
xor
hlt
pop
stos
jo
mov
mov
dec
ss
inc
add
jns
aad
dec
cmp
mov
adc
mov
pop
cs
mov
sbb
cmpsb
or
fmull
addr16
xlat
lcall
fsubrs
jg
mov
cmc
xchg
inc
add
std
sub
sbb
pop
enter
adc
arpl
xchg
hlt
imul
cmp
pop
lea
je
test
mov
push
sahf
jecxz
mov
cs
sbb
pop
adc
es
jp
sub
mov
fucomp
mov
movsl
lods
cmp
sar
lods
stc
dec
arpl
sbb
xchg
lock
mov
xchg
push
xchg
mov
cmc
data16
call
jge
fldt
dec
mov
inc
pop
aam
andb
pop
lods
nop
ss
push
xor
es
imul
push
pushf
sbbb
cmp
movsl
mov
or
mov
lods
cld
jne
adc
jmp
cmpsl
gs
xchg
jo
xchg
adc
xchg
fstpl
in
pop
movb
test
cs
adc
ficompl
fwait
subb
and
jecxz
gs
jbe
lods
sar
push
sbb
leave
bound
mov
bts
outsb
imul
mov
and
mov
nop
fcoms
fists
loope
jmp
js
nop
xchg
cmpsl
fimuls
xchg
lret
mov
xchg
jle
sbb
push
jmp
addr16
test
push
jmp
add
mov
inc
and
jge
push
and
jl
gs
fildll
shll
push
lds
in
ja
sbb
pop
pop
or
es
cmpsl
cli
rcr
adc
into
in
dec
jns
popa
or
sbb
outsb
and
out
mul
nop
les
xchg
daa
shll
inc
test
jg
mov
and
sbb
or
out
add
xchg
cmpsb
xchg
insl
ret
xchg
xchg
push
and
fwait
and
dec
int3
andl
arpl
mov
mov
jne
daa
into
in
add
xchg
push
push
jg
scas
dec
xor
inc
jle
mov
mov
dec
mov
adc
shl
push
jle
nop
sub
mov
push
sarl
adc
adc
mov
jle
sub
xchg
add
xchg
clc
test
fbld
mov
hlt
xor
xchg
or
pop
aaa
inc
call
leave
movsl
inc
mov
push
ljmp
stc
cmpsb
or
shl
jp
js
inc
mov
jne
hlt
insb
dec
mov
jo
or
inc
lods
sub
push
and
cmpsb
shrb
jne
mov
sbb
ficoms
mov
jns
rcr
fcomp
fsts
and
push
push
dec
loop
in
les
ds
pop
lods
mov
sub
addr16
push
repnz
mov
mov
test
fadd
push
jb
pusha
or
jnp
lods
mov
push
inc
adc
addr16
mov
lahf
movsw
int
jmp
shr
pop
lret
pop
mov
add
fisubs
outsb
sub
je
jl
push
negb
arpl
dec
sbb
pushf
adc
mov
mov
cmc
pushf
cmp
push
sub
aas
cmpsl
adc
mov
xchg
cld
inc
mov
loopne
in
adc
pusha
stc
call
lahf
mov
jno
loopne
push
and
in
inc
sub
adc
rolb
and
call
fs
pusha
cmc
xor
pop
sub
mov
or
adc
jg
fimull
aam
xlat
movsb
lret
dec
fbld
das
ret
jbe
stos
stc
shlb
inc
out
stc
mov
dec
stos
insl
cwtl
inc
cmp
call
xor
cmp
lret
in
ss
and
pop
push
lret
or
std
cltd
stos
addr16
and
jg
mov
mov
push
dec
jecxz
sub
sub
call
into
shlb
shlb
mov
std
in
orw
les
int3
divl
out
lret
mov
cmp
stc
dec
iret
push
inc
lret
pop
mov
stc
popf
xchg
jae
mov
mov
sub
xor
test
lods
scas
rcrb
xchg
rcrl
or
adc
scas
movsb
cs
adc
hlt
fbstp
insl
int3
ljmp
mov
xchg
adc
aam
aaa
push
mov
push
xor
inc
out
shrl
mov
xor
ja
xchg
mov
enter
dec
cmp
push
sub
cmp
idivl
popa
xchg
repz
loope
shrb
std
jmp
add
lret
jne
xchg
inc
sahf
test
pop
dec
cs
sbb
ret
push
xchg
xorl
pop
xchg
movsl
mov
or
jb
repz
dec
and
push
mov
mov
pop
addl
xchg
jo
imul
inc
mov
pop
jae
int
std
push
push
inc
add
outsb
adc
cmp
gs
movsb
mov
rcrl
loop
xor
fidivs
mov
frstor
test
cmp
insb
int
adc
push
inc
fnsave
pushf
mov
shll
in
pop
push
test
jge
test
adc
jns
sub
pop
push
adc
stc
out
lock
mov
mov
sbb
mov
fcomi
jno
jns
add
add
xor
sub
adc
test
pop
orl
scas
cld
dec
rorl
das
mov
insl
ret
adc
xchg
clc
add
aad
mov
lcall
adc
cmpsl
ljmp
mov
jno
mov
scas
iret
fwait
xor
pop
jge
cmp
enter
aad
push
lods
cwtl
inc
je
jp
and
arpl
mov
jnp
and
jl
lods
push
pusha
or
add
mov
mov
dec
insb
jo
call
push
das
ret
lret
add
fs
or
movsb
add
in
fidivl
cmpsl
scas
test
pop
xchg
mov
pop
filds
clc
popf
stos
mov
or
stc
pop
add
aad
test
dec
test
ret
inc
scas
push
sub
movsl
mov
dec
jae
dec
ljmp
mov
arpl
js
or
mov
out
cltd
sub
adc
sub
leave
in
sub
and
cli
pop
xchg
xchg
mov
mov
xchg
jle
mov
add
fcmovu
mov
test
jg
fldlg2
xchg
or
xor
mov
pop
pop
and
push
xchg
imul
lret
nop
aam
idiv
mov
jo
js
sub
je
ljmp
rcrb
lea
cmp
rorl
es
insb
dec
ds
iret
mov
in
decl
mov
imul
sbb
lcall
fidivrl
adc
mov
dec
js
lock
adc
ret
mov
sbb
cld
lods
add
cmp
and
xor
popa
leave
push
gs
cmp
xlat
push
in
fcompl
inc
sahf
or
lock
push
imul
dec
cmpsb
rorl
mov
cltd
lods
add
lods
push
test
jne
and
add
lock
das
xchg
push
addb
fcomp
dec
into
sbb
insl
xor
and
scas
sub
aad
pop
mov
lea
mov
subb
cli
fwait
mov
adc
or
movb
cmp
jecxz
test
mov
sub
pusha
idivb
rorl
fwait
cmp
test
rcll
cmpb
jne
push
mov
push
stos
push
cli
inc
daa
inc
xchg
es
cld
lret
sbb
sbb
mov
lcallw
jmp
mov
xchg
das
mov
xor
loop
lods
mov
and
or
cmp
inc
aad
push
in
cmc
lods
inc
movsl
aad
jp
lcall
mov
adc
push
ffree
jbe
push
sbb
jp
repz
inc
adc
stos
add
stos
lret
rcll
scas
rcrb
mov
popf
push
push
adcb
pop
mov
ret
lret
sbb
bound
jb
add
sbb
lds
pop
sbb
iret
je
mov
insl
sbb
sti
sub
bswap
test
lock
ss
test
mov
jg
movb
push
std
jecxz
int
int3
jecxz
add
std
cmpsl
out
cmpsb
mov
mov
call
sub
bound
mov
jmp
add
scas
filds
pop
mov
rclb
ret
test
filds
movsl
test
inc
inc
adc
out
xchg
das
pop
or
xchg
imul
mov
cltd
mov
negl
dec
aad
scas
mov
pop
sahf
shll
adc
jne
cmpsl
cmp
sti
pop
les
ja
stos
gs
mov
in
lret
inc
repz
xor
jle
sahf
add
and
scas
and
mov
mov
or
xchg
adc
sarl
icebp
xchg
mov
push
fimuls
arpl
mov
and
shll
inc
repnz
lahf
into
rcr
imul
dec
jmp
push
inc
adc
loop
dec
nop
push
jns
int
lahf
dec
xchg
enter
sbb
push
or
mov
xor
out
adc
std
inc
lds
in
jg
lods
cmpsb
bound
mov
lahf
mov
inc
in
stc
pushl
mov
imul
imulb
test
cmpsb
sub
xor
nop
cmp
inc
lret
test
inc
add
jecxz
mov
adc
jbe
fs
lea
scas
lods
adc
fwait
push
cmp
add
mov
sub
test
push
testb
filds
xor
flds
sbb
push
add
inc
sbb
mov
adc
mov
cmp
xchg
mov
dec
add
push
jmp
aam
lea
hlt
pop
or
call
mov
push
cmc
into
pop
lea
outsb
pop
dec
ss
or
dec
stos
enter
je
orb
sub
xchg
cmp
fistpll
lret
sub
xor
sarl
fmull
inc
mov
test
arpl
je
sub
subb
jo
cmp
and
popa
or
and
cmpsl
pop
gs
and
and
mov
lret
mov
inc
and
mov
fistps
mov
sbb
aam
out
pop
mov
scas
pop
cmpl
push
sahf
push
sbb
arpl
gs
aas
or
dec
dec
jmp
push
cwtl
fs
ret
jp
xor
sbb
fwait
mov
insl
fdivl
mov
pop
sbb
movsl
stos
sbb
scas
push
pop
cmp
or
popf
sub
js
sub
mov
les
and
lock
mov
inc
sbb
fmuls
jb
pop
inc
mov
leave
and
daa
pop
loopne
or
popf
push
in
mov
mov
mov
popa
cld
loopne
jno
pop
out
pop
in
mov
dec
outsl
add
sub
pop
jnp
testl
and
stos
cmp
test
push
xor
sti
cmp
adc
loopne
mov
aaa
push
inc
aam
inc
stc
xchg
mov
push
ds
xlat
mov
hlt
push
jb
mov
outsb
scas
in
cmp
daa
cli
adcl
cmp
mov
data16
add
add
rcrl
test
ss
or
movsb
movsl
inc
push
fimull
adc
test
mov
hlt
mov
rclb
sub
in
dec
scas
bound
push
or
mov
int3
ljmp
not
or
cwtl
or
lcall
adc
pushf
imul
push
sbb
push
jno
cmp
pushf
dec
into
or
outsl
mov
sbb
mov
mov
ljmp
jge
sbb
mov
jle
xor
mov
out
lret
sbb
lods
mov
das
idiv
in
fimuls
jnp
xchg
add
push
mov
les
lods
arpl
mov
or
test
push
inc
stos
cmc
sbb
mov
pop
dec
stos
jecxz
push
push
repnz
cmp
and
push
pop
ja
xchg
pusha
xlat
pop
xlat
imul
push
clc
or
pop
or
loop
jae
ret
loopne
outsb
inc
pop
cmpsl
lss
loope
push
pop
cmpsl
xor
ret
out
mov
adc
test
outsl
lods
jne
clc
call
inc
cltd
gs
xchg
in
or
movsl
jp
lcall
test
filds
and
jmp
jl
cli
bound
mov
adc
adc
jno
pushf
insl
imull
gs
xor
pusha
xor
call
iret
arpl
ds
nop
hlt
mov
jg
into
mov
cwtl
adc
roll
and
and
inc
outsl
idivl
or
jmp
jle
inc
addb
shlb
mov
insl
push
cmp
notl
xchg
mov
mov
xchg
mov
aam
pushf
inc
call
push
leave
fwait
and
push
dec
dec
mov
cmp
hlt
insb
mov
push
out
insb
add
fidivrl
push
push
sbb
sbb
push
add
xor
fwait
cmp
gs
shll
xlat
pop
xlat
push
je
cld
or
push
hlt
enter
test
adc
inc
test
sub
loope
mov
lods
repnz
loopne
pop
leave
mov
adc
lds
fistps
shll
arpl
add
xor
sub
mov
sbb
movsl
push
pop
btc
scas
sarl
ret
dec
aas
pop
mov
or
test
jge
pop
jp
push
aam
lcall
and
out
mov
cmp
push
push
lcall
fadd
sbb
mov
leave
movsl
adc
mov
adc
pop
cmpsb
movsb
dec
cmp
push
das
int3
std
sbb
loope
mov
dec
jno
test
xchg
imul
cmp
xor
es
inc
pushf
cld
sbb
xlat
sbb
ljmp
int
or
mov
dec
std
insl
in
push
fidivl
ret
cld
leave
shr
pop
rclb
and
movsb
pushf
add
sarb
xchg
sti
adc
inc
add
jns
or
lock
int3
mov
fimull
sbb
jnp
lods
mov
mov
mov
inc
sub
mov
xor
sbb
pop
imul
xchg
sbb
negb
dec
clc
sarb
in
inc
fs
lods
clc
push
imul
cmp
das
or
dec
pop
das
cmp
jmp
xchg
icebp
or
notl
popa
cmp
mov
repz
cmc
dec
jg
mov
sub
and
sub
cmpb
sahf
inc
mov
idivb
jl
cld
pop
daa
inc
dec
xchg
push
pop
sbb
mov
and
sbb
mov
stos
xchg
push
cwtl
mov
jmp
out
adc
pop
dec
repnz
les
add
repnz
pmulhw
lods
aam
pop
dec
add
xchg
ds
lea
xchg
sti
push
ficompl
pop
xor
sahf
bound
push
jo
inc
sub
ljmp
loopne
jmp
in
sbb
cmp
jge
xchg
fwait
mov
sub
jmp
dec
xor
icebp
lret
shll
outsl
mov
add
sbb
sub
scas
mov
inc
mov
or
sub
mov
imul
push
pop
dec
popf
adc
call
in
in
lret
stc
std
or
aam
loope
inc
pop
jge
sub
fcom
in
mov
iret
jno
inc
or
std
cmc
xchg
push
mov
pusha
call
sbb
dec
add
add
mov
iret
cs
jecxz
sarb
scas
lret
imulb
inc
mov
hlt
add
jecxz
jbe
sbb
in
mov
cmp
push
mov
or
add
popf
and
hlt
sub
enter
in
mov
test
lcall
mov
push
fnstcw
push
int
adc
pusha
fcmovu
and
aam
adc
or
and
mov
push
jae
push
and
es
mov
jg
xchg
adc
rclb
add
lret
in
pause
inc
daa
inc
inc
mov
sbb
loop
jnp
nop
testb
mov
push
push
icebp
add
add
dec
cmp
push
xorb
cltd
xchg
test
daa
sub
cmpsb
adc
xor
xchg
imul
dec
fmull
mov
mov
sub
xchg
jb
adc
in
outsb
loopne
mov
xchg
fists
and
leave
sub
mov
mov
lret
fisubrs
pop
adc
addl
repz
push
mov
or
mov
clc
mov
loop
adc
into
mov
cmp
scas
loopne
inc
push
dec
fsubrs
or
sahf
fiadds
push
pop
out
xor
pop
pop
mov
push
rcll
movsl
jge
fcmovnbe
mov
sbb
dec
mov
lea
stos
push
xchg
imul
inc
jae
cmp
jo
aam
ret
mov
jmp
xor
arpl
loopne
pop
movsb
pop
mov
popa
cmp
mov
sbb
js
xchg
icebp
adc
ret
mov
inc
jmp
push
lods
cmp
aas
xorb
movsl
shl
insl
loop
fcmovne
mov
adc
mov
dec
pop
in
push
or
mov
jl
dec
inc
mov
dec
lret
in
lds
mov
in
mov
add
insb
loop
fistpl
lods
test
sbb
fstl
lds
jne
cltd
push
cmp
lock
aas
mov
in
adc
rclb
jmp
mov
cwtl
lret
rolb
mov
mov
fwait
jno
fidivl
push
mov
push
adc
dec
sarl
loop
scas
push
xor
xchg
test
cwtl
std
scas
push
xor
outsl
sti
test
pop
and
scas
popf
or
jp
outsl
in
sbb
aaa
addr16
pusha
mov
fdivp
repz
testl
mov
fdiv
jl
mov
sub
dec
jne
call
sbb
test
iret
movsb
push
stos
sub
push
int3
push
test
and
dec
mov
push
sub
pop
sub
jae
or
pop
out
add
push
data16
xor
je
mov
std
lea
mov
dec
pop
push
add
popa
adc
jle
ret
mov
add
xchg
push
sti
test
cmpsb
sub
cmc
movsl
xchg
icebp
icebp
xchg
adc
pop
xlat
insl
dec
repz
inc
mov
aaa
push
mov
cld
push
sub
ficoms
es
mov
les
subl
mov
cmc
push
mov
clc
in
iret
sub
mov
mov
sbb
inc
cld
bswap
ss
and
jbe
popa
repnz
and
pop
jp
cmp
cmpsb
jle
or
loop
inc
mov
int
cmpsb
xor
fcmove
sub
cmc
fdivrl
lret
jbe
or
movd
dec
std
mov
xor
es
pop
cmp
mov
sub
inc
faddl
test
adc
push
push
dec
xor
fcmovu
rcrb
stc
xlat
ret
inc
enter
mov
jp
mov
add
xchg
les
cmpsb
imul
out
jns
mov
divb
gs
mov
in
xor
jg
adc
sbb
adc
test
or
xorb
rolb
push
dec
pop
aad
sub
mov
pusha
insl
mov
pushf
aad
or
je
add
inc
push
dec
enter
cmp
sbb
stos
imul
xchg
mov
test
jge
cmpsb
insb
or
and
in
xchg
add
mov
fstps
push
leave
mov
dec
popf
dec
mov
xchg
aad
xchg
jle
mov
test
sbb
ljmp
mov
lea
aaa
push
inc
ret
add
loope
mul
mov
sub
push
cmp
cmp
mov
adc
hlt
mov
cwtl
jmp
jl
lods
cmp
test
lods
xor
mov
test
ret
arpl
pushf
pop
pop
mov
fstpt
in
and
dec
pop
insb
inc
sbb
nop
stos
in
out
cltd
imul
xchg
xorb
jecxz
lcall
sub
stc
sub
cmp
fisttpl
xchg
mov
leave
in
jecxz
mov
fcomip
js
popl
sti
push
cmova
mov
repz
int
rcll
cwtl
ja
out
xchg
mov
xor
jg
stos
ss
cltd
pop
loop
sub
subb
mov
push
dec
push
mov
inc
adc
adc
sarl
mov
adc
jmp
repz
sbb
sub
mov
aaa
push
mov
sbb
lret
pop
roll
xor
lods
mov
lods
sarl
int
dec
cltd
and
sti
push
test
mov
mov
sub
pop
mov
fiadds
mov
imul
ds
scas
mov
out
sub
repnz
lods
lahf
stos
pop
fcmovbe
mov
dec
ds
pushf
and
sub
cmc
mov
dec
sub
fidivrl
outsl
imul
data16
pop
test
stc
ret
out
ds
inc
or
js
pop
adc
shl
popf
outsl
mov
aam
adc
sbb
mov
loope
mov
mov
add
sbb
add
xor
mov
pop
sbb
enter
add
aad
enter
loope
shl
or
pop
sub
jge
push
mov
loop
or
ret
mov
aad
dec
sub
fdiv
movsb
and
imul
loop
repz
sub
shrl
xchg
out
dec
cmc
out
sarl
mov
add
xchg
mov
repnz
inc
or
dec
fdivl
xchg
jl
pop
inc
mov
adc
xor
xor
jge
stos
fcmovne
imul
push
mov
push
ds
fldl
mov
js
dec
pop
inc
pushl
neg
rolb
cli
xchg
aaa
cmp
incl
mov
or
xor
call
sub
push
imul
adc
scas
push
jb
pop
push
ljmp
scas
test
nop
loop
lods
in
and
ficoms
ljmp
mov
int3
std
mov
int
imul
sbb
repz
test
xor
push
lret
push
mov
push
jecxz
sahf
loope
cmp
cmp
aad
cmc
clc
scas
inc
or
jmp
cmp
and
jl
stc
mov
cmp
push
and
mov
loop
test
sbb
and
pop
or
jnp
sarb
xchg
or
or
je
insb
mov
pop
push
jg
insl
lea
loop
or
ret
adc
xor
sub
rcll
addr16
nop
mov
jns
imull
aad
cmpsb
imul
push
dec
imul
fisubl
xrelease
sub
dec
dec
rcll
in
aam
ret
xchg
sbb
mov
jge,pn
ffreep
mov
std
int3
mov
pop
cmp
sub
mov
push
xlat
enter
jle
push
push
adc
outsl
mov
dec
cmpsb
mov
aas
lock
movsb
pushf
sub
sahf
inc
push
ret
pop
push
jecxz
divb
out
push
in
cmp
pop
inc
pop
nop
xchg
shrl
scas
push
adc
cltd
inc
add
pushf
mov
mov
mov
pop
pop
pop
pop
push
loope
ljmp
into
cs
jg
xor
and
jle
adc
ror
pop
fs
scas
imul
push
sbb
xorb
addr16
leave
sti
mov
push
iret
cmpsl
mov
pop
adc
lods
or
sbb
adc
aad
mov
mov
dec
jae
adc
nop
mov
test
xchg
adc
sub
inc
rclb
mov
pop
xchg
iret
in
push
push
jmp
dec
mov
and
sbb
mov
lods
pop
leave
sbb
rcll
ljmp
cltd
dec
sub
or
stos
loop
sarl
push
sbb
in
pop
test
cwtl
xor
xor
divb
mov
cld
imul
lods
xchg
mov
and
cli
mov
xchg
pop
ret
cmp
frstor
jne
mov
sub
cmp
inc
test
das
mov
std
test
orl
pop
int
dec
pop
stc
xchg
lahf
scas
subl
cwtl
jns
mov
jmp
stos
cmpsl
mov
xor
mov
mov
mov
cs
sbb
inc
aaa
cli
jnp
cld
pop
lock
push
cwtl
and
mov
sahf
xchg
and
lock
leave
ret
jne
ret
sti
pushf
pop
mov
in
add
sbb
std
jae
scas
incl
jmp
movsb
insb
in
in
data16
xchg
xor
sbb
jl
xor
fiadds
sub
push
scas
pop
push
adc
lret
repz
clc
and
mov
inc
lret
sub
fs
sbb
std
dec
xlat
pop
in
push
insb
pusha
push
cltd
jns
adc
nop
gs
test
mov
fisttpl
push
mov
lahf
mov
pop
test
mov
gs
xor
cld
xorb
call
in
mov
jle
fsubl
push
or
jb
or
cmpsl
jbe
out
int3
ja
ja
rorb
sahf
or
out
cmp
cmp
cmpsb
jge
push
les
lods
xchg
add
stos
inc
xchg
cmp
loope
dec
mov
mov
js
pop
shll
je
mov
jg
xor
fimuls
shr
rclb
mov
mov
cmp
xor
nopl
dec
adc
cltd
push
ret
cwtl
adc
out
cmpsl
nop
call
les
ljmp
dec
cwtl
and
mov
les
push
mov
repz
mov
sbb
pop
outsb
mov
jmp
enter
jne
mov
cmp
sbb
clc
jecxz
shll
lods
sub
movsl
cmp
jg
jle
inc
mov
test
sub
push
hlt
add
push
inc
ja
xlat
aad
push
inc
xor
cs
mov
scas
insb
add
lcall
jmp
pop
or
xchg
cmp
jg
mov
je
test
ja
cmpsl
adc
ficompl
pusha
push
xor
leave
inc
aam
push
sub
cmp
fisttpll
scas
mov
inc
int3
adc
sbb
sub
mov
push
loop
dec
aaa
divb
ret
aam
add
movsb
stc
mov
gs
jg
jne
mov
push
add
shll
inc
add
arpl
push
pop
mov
lcall
mov
jecxz
outsl
call
test
xor
rcl
sbb
xor
lret
jl
jl
jle
nop
inc
sub
xor
adcb
adc
or
or
leave
mov
sti
jp
cwtl
xor
movsb
das
andl
nop
test
add
stc
lock
mov
jl
seta
mov
aad
jp
mov
repnz
lock
jae
shlb
repz
and
ds
nop
addr16
fs
clc
sbb
div
fidivrl
xor
inc
aad
imul
repz
jo
hlt
das
sub
in
xor
jb
adc
loop
imul
fistps
cmp
repz
in
sbb
pop
dec
xchg
movsl
stos
xor
adc
stc
mov
push
adc
jle
mov
in
sub
sub
jnp
cmp
push
adcl
ljmp
les
sbb
or
bound
dec
mov
sbb
jae
push
les
sbb
cmp
lahf
ret
into
mov
cmp
ljmp
les
test
jle
mov
inc
cmp
fistps
mov
leave
insb
hlt
test
call
lcall
mov
push
or
mov
std
ljmp
icebp
int3
pop
insb
popf
sti
mov
loopne
adcl
push
cmp
sbb
icebp
test
adc
xchg
jg
inc
jo
aaa
cmp
in
stc
mov
imul
dec
sbb
jle
pop
addr16
mov
bound
iretw
cmp
cs
xor
and
add
in
adc
cmp
or
or
test
xor
inc
mov
adc
scas
leave
addps
cmp
pop
jle
mov
push
ficompl
mov
fwait
out
cmpsb
sti
loope
adc
loop
mov
adc
call
dec
fs
or
shlb
mov
mov
ja
call
pushf
xlat
adc
aam
xorl
out
push
mul
ret
mov
leave
ja
aad
xchg
fisttps
inc
sub
arpl
rolb
mov
lea
hlt
neg
je
push
pop
in
lret
mov
fistpll
adc
pusha
aad
jle
xchg
push
mov
jmp
scas
jo
xor
push
sbb
jnp
lods
dec
and
lock
and
shr
push
popa
xor
aas
cld
lock
or
repz
xchg
jnp
sar
jo
lock
push
into
cmc
push
add
push
inc
adc
mov
xchg
mov
mov
loopne
je
xor
push
enter
mov
sarb
xor
add
shll
mov
mov
je
xchg
pop
out
fldcw
sbb
xchg
pop
push
ficompl
cmp
leave
ljmp
push
outsl
sti
mov
fadds
cmp
mov
scas
daa
in
sbbl
mov
jp
add
sbb
mull
inc
ffree
stos
xor
nop
sub
cli
pop
lcall
adc
mov
sub
dec
stos
pop
je
adc
jns
push
mov
pop
mov
pop
and
sub
cs
mov
js
or
pop
mov
cmp
les
sub
fnstenv
outsl
xchg
dec
int
mov
cltd
insb
mov
pop
mov
or
mov
mov
pop
lds
cmp
cmp
dec
ss
stos
jg
dec
mov
jbe
dec
add
outsl
add
fs
stos
xchg
sbb
or
pop
js
mov
call
pop
cmpl
mov
mov
jmp
cmp
push
dec
test
inc
test
add
outsb
jo
push
into
xor
mov
stos
jl
push
lods
fcompl
adc
inc
adc
std
test
mov
dec
mov
cli
daa
pop
iret
xor
add
push
arpl
fstpl
inc
loop
mov
mov
pop
or
add
cmp
pushf
aaa
inc
push
adc
std
pop
test
mov
pop
jbe
inc
repz
aam
int3
addl
mov
pop
xchg
incb
mov
add
loopne
push
fidivl
test
adc
cvtdq2ps
jae
addr16
lahf
hlt
mov
pop
inc
xchg
loop
mov
btc
pop
ficomps
cmp
jle
test
mov
sub
mov
sub
cmp
or
nop
hlt
pause
pop
out
pop
mov
and
sub
mov
inc
add
roll
mov
mov
adc
fcoms
or
pop
ret
les
imul
mov
imul
inc
icebp
scas
adc
jecxz
not
add
mov
fsubrs
rclb
mov
dec
iret
fmull
xor
jo
mov
lock
adc
adc
pop
out
imul
fsubrl
jne
fmul
push
dec
add
lds
sub
dec
adc
das
push
enter
fidivrl
lret
jge
jb
mov
inc
ljmp
and
das
notb
ficoms
cmp
cmc
sbb
scas
xchg
insl
pop
mov
mov
mov
mov
or
mov
stos
insl
adc
push
dec
or
sub
mov
adc
adc
mov
mov
es
mov
xor
popf
xlat
cmp
sbb
pop
lret
dec
sub
bound
push
xchg
xchg
lods
adc
push
addr16
daa
out
or
mul
sahf
ret
cld
arpl
repnz
mov
pop
inc
sbb
roll
adcb
shll
xor
push
dec
aad
and
imul
jnp
sub
outsl
mov
jg
es
call
clc
xor
pop
dec
movsb
ss
fisubs
mov
icebp
mov
mov
mov
andl
push
dec
nop
lahf
daa
push
xchg
sub
push
pop
jg
dec
pop
sub
adc
out
mov
inc
outsb
idivb
jne
dec
mov
lock
adc
mov
repz
popa
ds
sti
cs
sub
add
push
sarl
sbb
je
ja
loop
fistpll
inc
push
mov
dec
xor
push
out
in
and
andl
sub
cmp
sahf
sub
mov
lret
ret
cmpsb
and
pop
mov
fisttps
sti
fcmovbe
enter
loop
lret
test
sbb
jno
fninit
addr16
ds
xchg
jmp
imul
fldenv
pop
leave
cli
and
das
mov
push
daa
stos
push
call
dec
sub
xchg
dec
cmpsl
sbb
scas
and
mov
inc
into
jl
out
mov
imul
adc
insl
push
mov
movl
fwait
add
push
sub
je
out
xorl
lcall
mov
add
in
cli
cmp
lcall
arpl
cmpsl
mov
lcall
mov
in
mov
push
sub
inc
pop
lods
pop
push
xor
sub
icebp
mov
xor
mov
rolb
icebp
loopne
daa
push
dec
push
les
cli
fmuls
dec
popf
xor
pop
jmp
dec
adc
loop
inc
sar
jo
rorb
pop
jne
push
dec
sbb
frstor
mov
inc
gs
adc
sbbl
fwait
mov
lods
mov
fidivl
aaa
je
in
xor
cmp
mov
jge
jbe
mov
aas
push
sbb
lret
sbb
or
aad
xchg
push
fcompl
mov
inc
aad
lock
mov
leave
sbb
push
das
lock
test
mov
xchg
cmp
pop
mov
out
bound
adc
mov
fs
das
mov
lea
sbb
mov
and
cmp
inc
and
ja
and
incb
pop
dec
dec
or
js
cli
movsb
sbb
add
mov
add
fwait
jns
sub
xor
inc
aam
pusha
pop
out
repz
rcrl
lods
mov
cmp
inc
adc
lret
arpl
out
mov
xchg
sarl
and
cmp
mov
mov
mov
and
mov
hlt
sti
mov
jle
out
ss
lods
adc
sub
lahf
test
std
push
rorb
lret
xchg
lods
mov
ret
pusha
push
add
outsl
inc
mov
add
jmp
scas
sbb
jle
out
mov
outsb
jnp
mov
insb
xor
bound
dec
pop
cmp
mov
ljmp
cmpsb
pop
pop
arpl
xchg
lahf
arpl
cmc
add
decb
lcall
sbb
inc
call
adc
insl
out
cmpl
mov
adc
and
sbb
xor
or
iret
mov
hlt
push
aaa
sbb
lock
mov
pop
iret
push
lea
cmp
lahf
cmp
shrl
mov
out
inc
mov
leave
cmp
cmpsl
mov
push
sbb
jmp
push
xlat
nop
stos
aam
ljmp
movl
xchg
or
jae
je
cmp
sub
mov
push
jb
mov
iret
add
std
call
push
repz
cld
dec
inc
insb
nop
imul
push
test
dec
mov
cli
mov
aad
mov
int
cmpb
cmp
push
iret
jno
mov
into
xlat
inc
jnp
iret
ret
sbb
mov
push
sbb
jnp
test
sub
lock
cmc
sti
sub
or
and
or
sub
mov
xor
dec
push
or
jne
outsl
adc
test
popf
jg
fildll
jmp
pop
nop
inc
adc
jb
mov
mov
push
mov
cli
fdivl
jle
shr
testl
aam
mov
push
and
imul
shll
iret
sub
dec
cmp
leave
mov
popa
shll
push
and
mov
shll
std
mov
mov
mov
loope
out
xchg
sbbl
imul
and
fisubs
jmp
lahf
cmp
jbe
or
lods
stos
out
mov
mov
dec
xchg
inc
or
xor
mov
scas
clc
setbe
sbb
movsb
aam
inc
test
dec
add
outsb
mov
push
cltd
push
adc
xchg
dec
push
adc
cmpsb
out
imul
popa
movsb
xchg
xlat
push
dec
aaa
loopne
loope
add
jp
out
into
fcoms
ficomps
sahf
fdivl
mov
cmp
scas
inc
xorl
cltd
or
pop
xchg
fdivr
or
add
insb
adc
mov
scas
dec
sub
add
cmpsl
cld
add
mov
mull
jnp
jno
imul
dec
ja
sti
gs
sarb
mov
ljmp
push
ja
push
xor
rolb
bound
xchg
negl
adcl
leave
sbb
dec
mov
dec
repnz
pushf
out
jb
sub
mov
mov
xchg
subb
mov
push
sub
mov
xchg
rorl
lea
sbb
lds
js
jmp
and
mov
xrelease
rorb
lret
and
icebp
xlat
aas
idivb
push
sbb
add
add
ficoms
popa
xchg
mov
and
clc
jno
pop
iret
and
cs
cmp
cmp
es
enter
daa
sub
stos
xchg
int3
or
pop
in
out
or
xor
popa
std
cmpsb
dec
push
adcb
xor
leave
int3
shrl
jmp
roll
dec
das
jge
add
and
fldcw
out
scas
dec
ret
fldcw
sub
faddl
bound
or
pop
repz
loop
pushf
sbb
xchg
sub
sub
pop
fisubl
inc
cli
in
mov
cmp
or
inc
push
xchg
xor
adc
jg
fmul
lret
fmull
cmp
incl
call
rorl
mov
icebp
sarb
stc
sti
out
cmp
inc
push
jmp
xchg
fnstcw
clc
insb
pop
lock
lret
pop
add
sarl
jae
outsb
mov
inc
insl
imul
cmp
setb
inc
or
mov
sbb
faddl
inc
shr
jo
outsl
pop
pop
adc
jne
jae
sbb
outsl
mov
mov
inc
cmp
adc
xchg
xchg
xor
sub
les
out
in
sub
das
xchg
std
fisttps
cmpsl
inc
icebp
sbb
inc
push
jo
fwait
clc
outsl
repnz
dec
idiv
mov
xchg
or
cld
or
cs
push
addr16
pop
fs
or
push
xor
loope
pushf
jo
fiadds
fmull
aad
daa
push
and
out
adc
packssdw
loop
shll
mov
push
out
and
or
ja
and
rorb
cmc
scas
ds
in
or
mov
test
sub
mov
push
es
out
dec
xor
lea
mov
or
fst
xchg
or
js
mov
mov
mov
mov
les
mov
loope
adc
mov
dec
das
push
fsubrl
ret
xchg
fwait
inc
orl
dec
sub
push
mov
push
mov
imul
push
out
out
in
int3
or
outsb
rorl
fldcw
fidivs
sub
add
and
arpl
jmp
repz
sahf
xchg
sahf
xchg
mov
out
rorb
cld
cltd
or
xor
inc
es
cmp
ret
inc
out
lret
inc
jmp
pop
popa
pop
xor
mov
int3
mov
scas
cmp
repz
stc
cwtl
sahf
xchg
fsubrs
rcl
shrb
repz
inc
adc
push
aam
push
sub
pop
mov
sti
xlat
adc
fsubl
add
fucomip
inc
xor
push
or
sbb
clc
rorl
adc
xor
daa
pop
cmpsl
insb
ja
fldcw
xchg
jb
adc
lcall
add
or
aam
lods
cmc
dec
cld
sub
inc
adc
loopne
jge
subl
imul
lret
fwait
repnz
jbe
inc
push
and
incb
mov
mov
das
stos
icebp
sub
scas
aaa
or
out
jbe
ja
fstpl
dec
sub
mov
iret
mov
sub
out
jae
iret
ss
stos
dec
mov
test
jp
mov
cmpsl
mov
loop
dec
scas
inc
mov
repnz
fwait
inc
aam
div
ljmp
insl
aad
jbe
push
jmp
test
or
cwtl
inc
mov
xlat
mov
icebp
cmp
fucomp
flds
mov
jbe
push
call
icebp
dec
push
push
push
xchg
add
icebp
mov
mov
stc
dec
jp
aaa
sbb
add
mov
xchg
mov
jp
inc
iret
daa
pop
cmp
aam
sbb
or
in
lods
sahf
sbb
xor
add
mov
mov
call
and
flds
lds
mov
jno
aaa
push
jge
scas
xchg
cmp
shr
xchg
push
sub
iret
and
mov
jno
mov
push
fsub
shl
mov
mov
inc
sbbb
enter
je
ficoms
sub
dec
mov
cmpl
xchg
pop
push
es
pop
and
mov
call
adc
mov
push
sbb
fsubrl
popa
cmp
fwait
mov
outsb
adc
sub
jne
xor
cltd
mov
les
jl
mov
fsubrs
lahf
xchg
pop
jg
xor
cmp
neg
mov
push
ss
push
lods
xlat
in
or
mov
std
scas
inc
int3
fs
cs
stc
daa
adc
add
ja
add
push
xor
mov
outsl
inc
sub
xchg
and
aas
sti
outsb
imul
push
lret
or
mov
add
imul
xchg
enter
xor
adc
xchg
inc
data16
xor
test
sbb
lret
pop
and
cmp
daa
mov
inc
daa
into
xor
pop
xchg
rcrl
test
cmp
pusha
jne
sbb
push
pop
loope
and
sub
in
inc
lds
ficomps
jo
scas
loopne
cmpsl
cmp
je
sub
mov
cmp
xlat
ret
ficompl
pop
loopne
xchg
enter
aam
imul
inc
cli
add
lock
fsubr
cmp
jle
aaa
mov
mov
arpl
mov
sbb
mov
daa
xor
daa
test
sbb
movb
pop
in
test
xor
cltd
mov
int3
jp
cmp
cltd
sub
fildl
mov
mov
leave
inc
movsl
sbb
dec
rolb
jno
cwtl
add
and
cmc
rclb
xor
ret
stos
pop
ljmp
lods
jne
sub
movsb
mov
aas
loopne
mov
rolb
scas
loope
ljmp
fwait
or
fdivp
dec
mov
lret
pop
lret
int3
inc
xchg
pop
cmp
cld
stos
pop
loop
outsb
pop
mov
sahf
les
cs
xchg
inc
movsl
ja
mov
cmpsl
jl
hlt
push
dec
or
icebp
loope
jmp
sub
mov
mov
cmp
sub
scas
cmpsl
push
lret
xchg
pop
lcall
jp
pop
jp
adc
or
out
in
pop
pushf
xor
cltd
ficoml
pop
cmp
cmc
adc
stc
scas
lret
mov
test
arpl
ds
add
and
js
mov
fnstenv
nop
out
outsl
mov
jge
mov
and
shl
idiv
xor
xchg
out
inc
repz
imul
sub
xor
rorl
in
cmp
mov
scas
in
add
mov
push
push
sbb
sbb
lods
leave
pop
cmp
push
inc
in
int
pop
outsb
add
push
icebp
movsb
pushl
cmp
fisubs
push
dec
out
ret
push
add
push
or
enter
mov
enter
out
sbb
push
testl
cmp
pop
or
inc
cmpsl
out
out
cmp
popa
test
out
movsl
xchg
xor
cmc
add
aas
dec
cmp
test
lret
lcall
and
pop
shrb
push
mov
shl
cmp
push
test
or
or
pusha
inc
imul
adc
bound
xor
aad
sahf
mov
cmp
push
inc
das
add
int3
mov
mov
jae
jb
or
and
lahf
scas
inc
push
cs
cmp
cmp
inc
popa
fcmovnb
inc
pop
inc
cmc
je
inc
out
in
hlt
or
mov
mov
xchg
dec
in
mov
mov
sub
xor
sub
dec
push
xor
mov
js
jecxz
jo
jo
or
push
xor
cs
jnp
xchg
js
sbb
enter
into
mov
pop
add
imul
in
and
inc
aaa
in
jns
pop
inc
cltd
jbe
mov
icebp
mov
add
and
jg
cmp
mov
cli
adc
pop
in
mov
xchg
scas
sbb
cmp
cmp
addr16
adc
insl
aas
or
push
add
jae
push
adc
pop
and
aaa
stc
lods
addr16
rcrl
xor
mov
data16
jge
pop
jbe
test
mov
xlat
inc
push
repnz
mov
jg
or
out
sub
shrb
sbb
mov
xchg
mov
adc
ds
add
sub
or
push
insb
mov
add
sahf
lds
dec
xlat
ret
mov
in
rcrl
add
scas
xor
sub
or
push
shl
mov
mov
bound
inc
xor
pop
cld
xchg
inc
lcall
enter
and
sub
adc
mov
jle
pop
jo
adc
sti
daa
adc
mov
adc
pushf
jle
loop
into
xchg
cmp
jl
push
inc
cmp
les
add
or
js
mov
les
jmp
sub
loop
popa
cmp
ljmp
dec
inc
lods
aas
or
mov
popa
jae
cmp
gs
adc
cmpsl
add
into
aam
or
cmp
cmp
cmp
dec
js
scas
jo
mov
fs
cmp
lret
icebp
fildll
sbb
mov
mov
fidivs
adc
sub
daa
xor
dec
cs
lcall
and
cmpl
push
xlat
aam
adc
pop
xor
mov
dec
idivl
xchg
xchg
sbbl
mov
dec
cmp
in
loopne
xchg
xchg
jle
sub
out
add
outsl
cltd
hlt
stos
enter
pop
or
sub
bound
pusha
icebp
sbb
and
sbb
xchg
mov
mov
pushf
icebp
dec
push
or
cmpsl
sbb
mov
arpl
mov
pop
adc
sub
inc
stos
cvtps2pi
adc
pushl
orl
in
cmp
cmp
out
sbb
mov
imul
pop
adcl
call
cmp
cltd
xor
adc
jp
dec
loope
adc
lret
xchg
ficoms
mov
jno
sbb
in
and
test
or
and
cmp
mov
xor
mov
pusha
rcll
out
scas
and
xchg
stos
adc
test
sarb
testl
xchg
insb
mov
xlat
mov
fists
mov
decl
outsb
pushf
jle
jmp
jp
fisubrl
mov
pop
incl
inc
pop
daa
sbb
sbb
dec
xor
pop
inc
mov
mov
clc
jge
pusha
push
test
clc
push
rorl
movsb
cmpsl
in
jp
push
mov
xchg
cmpsl
imul
out
add
cmp
mov
ror
hlt
or
cli
cltd
outsl
push
cs
xchg
cld
xchg
and
lret
call
sbb
xor
sub
mov
xlat
cltd
mov
loop
idiv
out
jb
add
sar
test
xor
bound
cmp
add
jnp
stos
xchg
push
sub
inc
jg
adc
xchg
clc
insl
cmc
jmp
jo
jecxz
inc
inc
repz
push
xchg
insb
jo
aaa
sbb
add
mov
inc
clc
push
xchg
push
inc
int
jno,pn
fcompl
xor
jb
bsr
mull
aas
not
movsb
pop
in
loopne
xor
inc
push
sub
mov
ret
jl
add
push
pop
xchg
pop
xchg
cmpsl
mov
cmp
cmc
sbb
and
cmc
xchg
addr16
push
cmp
xchg
mov
clc
lods
push
push
repz
mov
aaa
in
enter
and
push
rcll
inc
and
or
dec
hlt
lahf
cs
sub
addr16
leave
mov
movsl
addr16
andb
cmp
or
jmp
push
and
lahf
or
je
lock
pop
aam
fbld
mov
out
rorb
dec
inc
mov
cwtl
xchg
mov
inc
dec
adc
jno
ljmp
push
push
adc
out
hlt
aam
add
pop
jb
insl
sub
push
orb
subb
das
lahf
andb
int
push
pop
add
mov
repnz
icebp
mov
sub
divl
mov
inc
dec
cwtl
push
mov
mov
addr16
lahf
popa
xchg
hlt
push
push
xor
xchg
dec
shlb
adc
loope
sahf
int3
les
or
in
movsl
imull
push
mov
adc
rcrl
sub
push
rorb
aas
xchg
jl
dec
jne
inc
cmp
push
pop
lret
mov
mov
ss
sub
adc
sbb
xor
mov
test
jbe
mov
int3
mov
shlb
dec
and
cwtl
ja
pusha
insb
rcl
mov
out
leave
add
push
jle
in
cmpl
imul
inc
pop
cwtl
rcll
lahf
in
rolb
mov
lods
sbb
jle
add
mov
jbe
cmp
jns
hlt
pop
lds
adc
push
sbb
enter
mov
sub
movsl
cltd
pop
test
inc
and
xchg
call
enter
adc
sub
je
sub
push
xlat
mov
lds
outsl
xchg
or
insb
fxch
std
push
dec
xor
sub
inc
nop
jns
add
pop
fistpll
add
stos
lods
cwtl
mov
out
das
arpl
xchg
mov
lods
flds
lret
stos
push
push
out
and
xor
mov
sti
cli
and
adc
shlb
xchg
sahf
xor
jmp
inc
lods
test
into
sbb
imul
jl
mov
outsl
adc
sbb
test
mov
idivl
jecxz
and
sbb
pop
enter
mov
sarb
mov
jecxz
jle
xor
jge
cmp
nop
cmp
mov
movsb
call
lods
ja
out
iret
adc
xchg
cmpsl
dec
jecxz
daa
int
push
dec
mov
adc
pop
or
push
in
in
arpl
int
adc
sub
leave
pop
add
and
xchg
push
mov
roll
push
pop
scas
push
outsl
add
fcoms
cmpsb
dec
imul
mov
dec
repnz
daa
push
cs
dec
mov
imul
mov
pop
xor
cwtl
test
mov
icebp
iret
movsb
dec
dec
test
sbb
enter
int
jmp
mov
stos
lea
in
xchg
and
imul
mov
cmp
lea
fdivrs
stos
push
xchg
fcmovbe
jae
sub
mov
pusha
dec
in
xchg
xor
in
adc
pop
out
leave
outsl
je
lret
xor
bound
iret
mov
mov
lods
pop
aad
lcall
mov
adc
cmp
jo
sub
jp
stos
and
test
inc
outsl
mov
and
and
pop
mov
mov
and
lods
inc
push
push
mov
jmp
and
out
mov
push
test
sub
sbb
mov
inc
lahf
nop
ja
jp
push
add
movsb
add
nop
rorl
xchg
sub
sti
sbb
inc
add
cwtl
mov
cmpl
dec
ljmp
and
mov
cmp
or
lcall
jp
aas
jl
xchg
and
xchg
mov
inc
push
cli
inc
jge
pop
push
sarl
jge
adc
adc
mov
sbb
jmp
call
mov
ljmp
int3
icebp
pop
mov
mov
insb
es
add
inc
add
es
icebp
pop
loopne
mov
jmp
and
rcrb
movsl
push
push
pop
mov
sbb
insb
fstp
pusha
jge
and
inc
xchg
cmpl
cwtl
pop
scas
push
fwait
or
fstpt
scas
scas
sbb
popa
mov
ds
mov
sub
cmc
ds
adc
jg
lcall
rolb
jmp
mov
mov
out
inc
and
movsl
aam
sarb
in
xchg
addr16
add
push
jb
jge
pop
mov
pop
and
and
push
lods
leave
mov
mov
add
push
fs
and
popf
jno
inc
outsb
push
sbb
adc
cmpb
push
test
js
dec
pop
iret
mov
sub
push
clc
fstps
gs
test
xor
jecxz
movsl
pop
pop
jecxz
je
mov
or
hlt
inc
adc
jne
idivl
add
and
cmpsb
push
mov
and
push
lahf
rorl
lods
in
inc
icebp
push
push
hlt
or
cs
xor
dec
push
jmp
pusha
sub
mov
push
pop
sahf
lret
cmp
add
and
cmp
das
fnstenv
imulb
out
cld
cltd
jno
xcrypt-cbc
cmpsl
roll
inc
xchg
jo
xor
das
pop
sub
inc
xchg
sbb
or
dec
pop
push
lock
and
cmc
push
jnp
xchg
call
popf
mov
push
cld
dec
sub
rolb
inc
sahf
fmul
mov
adc
mov
and
adc
and
cmp
ret
adc
jno
jge
imul
cmp
sub
testb
push
imul
out
dec
pop
ret
mov
inc
jecxz
ds
or
lock
test
add
stos
cmp
cltd
jl
arpl
movsb
ret
mov
add
lahf
mov
js
leave
std
xor
data16
lahf
mov
adc
loope
hlt
lcall
sub
jle
out
mov
sbb
stos
jns
shlb
jo
test
add
add
or
shlb
and
xchg
sbb
push
fnsave
imul
sahf
cmp
cwtl
or
fcmovu
je
mov
mov
subb
std
test
pusha
mov
daa
pop
xor
inc
ret
mov
ret
out
jbe
sbb
xchg
data16
ficoml
idivl
int3
or
push
scas
faddl
std
push
cmpsb
pusha
test
xchg
or
push
or
push
add
cmp
sbb
mov
pop
jae
mov
mov
enter
mov
xchg
sbb
mov
adc
aaa
xchg
sbb
aam
in
outsl
ds
xchg
mov
pop
mov
inc
mov
pop
or
idivl
xchg
lods
and
and
inc
xchg
in
dec
push
jbe
stc
cmp
addr16
push
nop
cmp
shrb
inc
pop
loopne
aas
cmc
sbb
cmpsl
mov
sbb
and
repz
leave
in
adc
mov
orl
jno
mov
xor
adc
into
sbb
fs
les
mov
sbb
push
jbe
jns
add
xor
fdivrl
subb
inc
add
or
cli
jge
or
xchg
inc
int3
jns
lret
fmull
xchg
arpl
xchg
sbb
mov
inc
add
inc
mov
xor
add
iret
sbb
mov
dec
pop
popf
mov
jg
and
movsl
xchg
shlb
add
mov
jno
mov
fcmove
jecxz
bound
mov
repnz
cmp
dec
mov
test
clc
sbb
push
lea
loop
repnz
pop
stos
scas
mov
or
insl
dec
dec
sbb
push
imul
mov
xorl
xlat
jle
cmpsl
sbb
jl
addr16
cmpl
pusha
xor
xor
jb
fs
adc
cmp
mov
enter
mov
stos
mov
add
test
mov
xlat
mov
sub
cmp
lcall
movsl
mov
bound
out
movsl
cmpsl
push
push
push
pop
xchg
ret
inc
xchg
je
mov
fnstsw
stos
inc
add
movb
int3
mov
aaa
fistl
fisttpll
sbb
nop
xchg
loopne
testb
stos
pop
and
dec
stos
sub
fcom
or
pop
mov
pop
mov
sub
sub
sarl
addl
in
movsl
and
mov
mov
ret
popf
cs
and
cmp
popa
xchg
xchg
mov
insb
mov
adc
mov
addr16
dec
xchg
sbb
lea
cli
fsubrs
aas
dec
rcrb
dec
xor
or
mov
into
mov
imul
rcr
cwtl
in
std
sbb
cli
jecxz
mov
push
int3
jbe
mov
rorl
mul
out
mov
xor
pusha
mov
icebp
jle
or
adc
ss
movsb
frstor
pop
cli
insb
push
sbb
push
lret
pop
push
mov
cmp
mov
jge
add
mov
ljmp
pop
xchg
pusha
rol
sbb
or
out
sub
xchg
jl
and
mov
enter
cs
out
mov
fwait
sub
rorl
push
ret
jp
inc
or
add
test
jns
stc
push
push
fidivl
cli
and
mov
jne
fstl
popa
fwait
or
in
scas
pop
and
xor
and
mov
pop
inc
adc
dec
xchg
outsl
sarb
push
adc
lock
mov
and
sti
mov
pop
add
mov
aam
xor
loopne
mov
int3
clc
jge
lock
inc
mov
dec
mov
addl
and
push
mov
inc
das
inc
mov
in
sbb
mov
outsb
sbb
xor
addl
aam
in
gs
jae
pushl
sub
cmp
inc
sub
xor
out
xchg
or
cmp
into
cmp
adc
out
mov
mov
outsb
fldcw
push
lds
lea
jge
sbb
test
xchg
inc
fstps
push
inc
fwait
jmp
je
out
pop
lcall
fmulp
pop
sahf
or
xorb
mov
arpl
fstpt
loop
pop
pop
rorl
inc
iret
dec
and
int3
mov
push
push
mov
adc
outsl
je
out
mov
xlat
xor
and
dec
inc
fdivr
dec
jnp,pt
clc
jb
fprem1
and
shrb
hlt
cmpsl
inc
stos
mov
aad
adcl
xor
fsqrt
add
out
movsb
xor
mov
cld
jo
jno
mov
cmpsl
push
adc
cltd
pop
inc
lds
clc
dec
cmp
or
sahf
pop
testb
sub
jecxz
and
mov
daa
push
loop
jle
std
js
movsb
sub
gs
lret
add
js
repnz
iret
call
out
cli
jmp
repnz
into
imul
mov
adc
das
push
test
push
and
in
push
cmpsb
adc
out
sbb
or
out
pop
scas
in
mov
push
sub
loopne
push
push
rclb
nop
shrb
popa
xchg
popf
add
mov
sub
lods
dec
push
jnp
imul
out
addb
popf
mov
sbb
in
cmp
int
addl
fldcw
pop
sbb
add
mov
inc
ljmp
sub
ret
or
jecxz
lcall
push
fs
cmp
dec
and
mov
push
mov
bound
nop
daa
mov
sbb
cs
xor
sahf
push
in
push
xchg
inc
int
pop
add
xor
mov
push
test
loop
dec
jl
jecxz
xchg
movsb
pop
and
xor
stos
mov
push
sub
push
sbb
xchg
cmp
lods
pop
lds
icebp
mov
stc
pop
or
xor
inc
xchg
icebp
cmpsl
sub
xor
loope
test
xchg
sbb
cli
cld
and
jmp
cmpsb
push
dec
lret
mov
xorps
mov
inc
add
jmp
and
out
lds
leave
sbb
mov
inc
xchg
shrl
jmp
adc
jnp
mov
lahf
addr16
mov
jno
in
mov
jmp
fmull
push
xor
lock
outsb
pop
repz
bound
pop
mov
fstpt
mov
cltd
bound
dec
mov
xor
inc
cmp
repnz
xchg
jo
xchg
xorl
stos
mov
mov
fsub
clc
lds
leave
lea
xchg
mov
jp
xchg
jmp
cli
adc
int3
rcr
jne
and
xchg
sub
pop
and
pop
or
stc
out
out
ret
mov
mov
in
les
cli
std
inc
test
fnstsw
into
dec
or
enter
sbb
popf
scas
sub
pusha
shll
dec
xchg
jo
push
std
pop
add
jmp
nop
xchg
cmpl
dec
xchg
mov
push
adc
lods
xchg
bound
sub
jle
scas
mov
push
shl
push
jne
je
add
inc
xchg
test
pop
push
fsubrp
popf
dec
inc
jle
xchg
push
aaa
push
jns
stos
inc
jg
mov
jae
pop
insb
push
inc
mov
out
jmp
mov
cs
lods
addb
dec
stos
pop
add
or
je
pop
cmc
test
xor
sbbb
in
jmp
mov
sbb
and
je
push
loop
mov
mov
push
mov
mov
out
call
out
ret
dec
mov
and
and
cmp
js
jns
xor
stos
pushf
rorb
push
jge
xor
add
sbb
jg
push
dec
sahf
xchg
popf
sub
adc
out
loope
in
leave
stos
or
xchg
out
test
xchg
icebp
push
cmp
fidivs
lcall
cmpsb
or
mov
xchg
hlt
ret
testl
cmp
xchg
int3
dec
sub
xchg
jnp
fistl
repnz
mov
xchg
mov
inc
lahf
sbb
aam
bswap
or
inc
dec
cmc
sub
out
or
in
adc
je
xor
mov
lods
mov
mov
pop
mov
sbb
xchg
lods
dec
jbe
shr
in
lcall
out
sub
lea
xchg
pop
rcrl
pushf
sbb
mov
nop
out
xchg
cmp
insl
push
push
mov
lock
push
mov
cs
inc
imul
push
add
jne
inc
adc
or
imul
pop
scas
push
xchg
or
or
or
stc
xor
mov
or
lods
xchg
mov
pop
adc
pop
popa
sub
dec
ljmp
inc
dec
fwait
out
fldcw
data16
sub
inc
dec
xchg
pop
fs
sub
cmp
mov
xchg
daa
xor
xchg
push
sti
sbb
add
jl
xlat
mov
fistl
mov
fwait
sub
sbb
orb
add
cld
xor
je
push
sbb
xchg
rolb
xchg
cltd
push
sub
adc
ret
pop
ljmp
mov
gs
adc
negl
lahf
shll
cmp
or
sar
cmp
fmul
lcallw
js
movsb
cmp
xlat
mov
inc
das
insl
stc
xchg
shlb
stc
or
lods
lods
jae
cmpsb
jecxz
cmp
mov
lods
bound
and
lcall
insb
add
ljmp
repz
ja
movsl
lds
scas
outsb
mov
inc
dec
cmp
mov
cli
sti
pop
xor
in
xchg
fwait
popa
sub
and
and
jnp
nop
xor
pop
test
cli
subb
or
pop
mov
or
outsb
std
lods
inc
sub
mov
pushf
hlt
mov
fidivs
or
mov
pop
adc
jl
lret
or
inc
and
iret
jae
mov
in
push
push
mov
mov
push
clc
jp
mov
push
jbe
sahf
cmp
xchg
jl
and
fcomi
sub
cwtl
jne
rorb
xchg
and
pop
mov
jecxz
mov
pop
pop
pop
cld
pop
add
xor
sub
pushf
pop
pop
daa
jl
popf
jno
push
stc
call
std
fstps
out
push
and
out
mul
stos
push
in
add
mov
arpl
sub
jge
adc
ret
add
cmp
hlt
pop
xchg
sbb
push
mov
stc
push
mov
loopne
and
push
shrb
pop
jno
rcl
sbb
jns
insl
inc
outsl
sbbl
test
hlt
leave
adc
pop
inc
rcll
jbe
cld
leave
or
insl
clc
lcall
pop
js
push
fbld
cwtl
loope
daa
notb
pop
mov
cmp
pop
or
test
int3
xchg
sbb
fwait
cmpsl
inc
dec
cmp
mov
movsb
inc
mov
loopne
rcrb
lret
stos
push
mov
add
add
sub
adc
movsl
mov
loope
push
popa
stos
mov
loop
shrb
mov
pusha
test
push
push
leave
in
mov
repnz
or
mov
sub
add
cwtl
xchg
mov
movsl
ss
mov
repz
adc
fwait
dec
es
popf
mov
enter
lahf
andl
sbb
add
das
jg
sar
mov
pop
dec
fstpl
add
cmc
aas
jmp
je
lcall
sar
rcrl
pop
cwtl
mov
jne
insl
cs
push
mov
ret
push
out
fstl
loop
std
aam
bound
fisubs
cmp
mov
mov
leave
or
xor
in
and
lret
call
lods
jb
and
sub
push
fxch
daa
ret
pop
cmc
xor
enter
inc
jne
mov
mov
sub
ret
int3
push
mov
cmp
fnstcw
loop
adc
mov
mov
push
add
rclb
push
imul
add
call
lahf
jl
aaa
mov
mov
fs
push
pop
and
sbb
ret
std
cld
mov
test
les
push
rcrl
incl
push
inc
cld
jo
int3
ja
sbb
cmc
xlat
jno
pop
fnstenv
outsl
push
or
inc
gs
sbb
outsb
push
in
fsubs
lret
js
mov
xchg
add
mov
repnz
inc
insl
cltd
push
pop
sub
inc
fmuls
andl
lds
mov
leave
push
dec
adc
aam
test
gs
xlat
fstpl
push
add
inc
inc
sub
aam
and
cmc
mov
into
sub
push
xor
popa
cmpsl
insb
lods
xor
aas
and
pop
xor
sbb
and
sbb
ds
cmpsb
fidivl
out
or
push
adc
dec
aas
jecxz
push
je
push
push
sub
adc
lds
bound
sti
jp
or
test
cmp
dec
fildll
xchg
mov
ljmp
xchg
dec
pop
or
push
push
pmuludq
adc
mov
loopne
mov
cmp
mov
shl
fstl
stos
xchg
jne
movsb
icebp
jae
inc
aaa
mov
je
iret
xor
pop
ljmp
aad
mov
mov
inc
push
gs
xchg
dec
inc
lea
xchg
je
mov
xchg
add
mov
adcl
mov
movb
movsb
ja
or
add
cmp
xor
aas
stos
jp
enter
mov
xchg
mov
lret
fwait
jmp
mov
loopne
in
dec
inc
aaa
inc
sbb
xor
xchg
xchg
mov
and
adc
rcrb
push
mov
orl
loopne
mov
inc
adc
rclb
adc
ret
cli
ss
sbb
xlat
mov
or
pusha
mov
cld
mov
test
xor
popf
dec
js
scas
hlt
xchg
push
dec
ror
push
push
call
xchg
pand
lret
ds
inc
push
jecxz
mov
jno
sbbb
shrl
mov
mov
mov
push
fiaddl
test
dec
fucomi
mov
jnp
adc
fldl
jne
and
out
out
jg
aam
stc
sbb
lods
adc
enter
cmpsl
aam
je
in
push
cmc
out
push
rcll
sub
adc
and
xor
mov
in
loope
sub
testl
cmp
mov
fildll
mov
xchg
cmc
xchg
push
out
or
mov
testb
test
out
fnstcw
popa
ret
cmp
xorb
pusha
mov
ds
push
mov
das
jne
test
mov
pop
repnz
cwtl
lods
push
mov
mov
popf
pop
jmp
jge
fcmovbe
repnz
xchg
or
push
sti
adc
fwait
push
pop
int3
fs
push
xchg
jmp
pushf
add
adc
jno
pop
ss
into
jo
pushf
mov
mov
add
fwait
xchg
dec
mov
inc
clc
pusha
push
inc
cld
lret
jo
aas
subl
stc
shlb
add
aad
popf
stc
enter
jecxz
push
insl
fnstcw
push
mov
mov
sti
dec
dec
ljmp
inc
xor
mov
test
and
jo
xorl
mov
imul
add
lahf
fdivrl
test
lods
addr16
test
mov
add
sub
in
pop
mov
mov
das
sti
push
sub
mov
ds
dec
icebp
jecxz
push
push
xchg
adc
jle
int3
fstl
bound
sbb
sbb
sub
adc
mov
dec
jl
dec
mov
test
xor
mov
inc
lret
fmull
sbb
popf
data16
jl
dec
dec
nop
pop
xor
repnz
rolb
addr16
mov
insl
or
push
movl
lret
adc
aam
mov
dec
arpl
arpl
cltd
inc
das
test
xor
insl
clc
adc
pop
mov
dec
and
subl
fs
adc
inc
fsts
sbbl
push
inc
mov
pushf
scas
incl
nop
mov
push
adc
or
jne
add
ret
jge
mov
pop
mov
dec
icebp
or
pop
dec
fs
mov
jl
fucomi
jb
xor
xor
add
stc
and
fnstcw
and
cs
stc
sbb
pop
cli
dec
into
dec
pop
adc
mov
scas
scas
mov
shll
sahf
andb
andb
minps
sub
xchg
jmp
xchg
shl
arpl
fildl
jg
sub
in
das
das
xchg
xchg
lds
movsl
jg
pop
mov
rcrb
push
or
mul
xchg
in
cltd
add
cmpsl
pusha
lcall
roll
adc
aad
stc
mov
mov
dec
into
jbe
mov
dec
or
pop
shl
xlat
leave
lods
and
jns
jne
fstps
push
imul
dec
in
jg
push
xor
and
ljmp
push
jb
and
inc
jp
dec
dec
repnz
xchg
mov
add
sub
mov
adc
xchg
jo
clc
xlat
bound
repz
outsb
cmp
pop
cmp
lahf
xor
and
movsb
fcoms
lds
mov
or
iret
test
fwait
cmc
and
comiss
cld
cmpsl
mov
xchg
mov
ja
jle
shlb
add
mov
addl
inc
sbb
sbb
pop
xor
sub
push
add
add
ror
stc
lcall
lahf
lcall
es
cmp
ds
mov
mov
mov
xlat
call
xchg
cwtl
jae
in
es
stos
fld
dec
aaa
xor
int
pop
cmpsb
out
das
and
std
mov
lea
das
lret
mov
les
mov
inc
cmp
add
pop
mov
mov
das
addr16
pop
pop
push
cmp
xchg
jp
inc
call
loope
pop
dec
mov
dec
xchg
loopne
jns
inc
rcrl
sub
jl
or
fistpll
test
ror
push
mov
aas
or
idivl
movsb
mov
fisttpl
in
inc
dec
pusha
fcoms
xchg
adc
decl
or
clc
mov
js
adc
divl
cwtl
lods
popf
cmp
out
pusha
mov
fisubs
les
pop
xchg
push
mov
xor
mov
insb
les
popf
lret
adc
mov
inc
stc
xchg
mov
xchg
sub
or
subl
fsubl
inc
int
dec
xchg
into
test
pop
aas
xor
in
inc
mov
ja
orb
jle
pushf
clc
dec
push
arpl
lahf
ja
xchg
jp
push
mov
test
ljmp
pop
iret
icebp
xlat
adc
fsubl
pop
or
cmp
xor
add
dec
in
shr
dec
arpl
xchg
mov
gs
mov
add
jl
shll
mov
push
int3
dec
insb
push
dec
mov
cmp
mov
jno
jae
iret
xchg
enter
adcl
xor
dec
mov
push
int3
adc
jecxz
pop
sahf
lods
pop
out
inc
out
lret
ja
xor
scas
lahf
cmp
mov
mov
sub
push
pop
xchg
push
test
js
stos
mov
out
repnz
cltd
iret
sti
insb
mov
push
jl
xchg
in
inc
sbb
pause
xor
and
loope
addr16
lcall
out
das
leave
dec
xor
sarb
mov
or
lret
sbb
rcrl
push
pop
mov
cmp
cltd
dec
xchg
loopne
adc
jnp
rolb
outsb
jp
pop
push
das
cmp
pop
sub
adc
xchg
aaa
call
add
rcr
leave
mov
call
add
xchg
or
in
movsb
dec
addb
cmp
popa
jle
jge
sti
hlt
imul
add
call
xchg
je
test
nop
mov
add
sub
mov
adc
ret
lods
fistpll
push
loopne
dec
sbb
mov
and
sbb
mov
ds
mov
adc
lret
insl
insl
std
les
jle
out
or
int
jle
mov
repnz
dec
push
mov
lret
pop
xchg
cld
dec
xor
int
mov
out
mov
cmp
arpl
movsl
jnp
sbb
sub
out
jmp
push
es
jle
sub
mov
mov
pushl
movsl
rorl
xchg
pop
jns
xor
scas
mov
adc
xchg
jle
hlt
pop
aaa
adc
xchg
mov
or
mov
fdivrp
cmpb
lea
jnp
pop
adc
jno
in
and
pop
mov
jno
ret
mov
push
hlt
test
aas
cs
xchg
inc
inc
into
subl
dec
fxch
dec
dec
sub
into
in
ficoms
dec
xchg
xlat
jbe
xchg
push
xor
pusha
int
sub
jnp
xchg
dec
outsb
pop
cmovg
xchg
lcall
mov
or
pop
sub
mov
data16
mov
inc
popa
cmc
inc
xor
in
ss
xchg
cltd
adc
inc
scas
gs
sub
xchg
scas
jns
xchg
insl
pop
test
scas
cmp
lret
push
scas
dec
cmp
mov
push
push
repz
testb
into
ret
push
lahf
jbe
jle
jns
lock
push
mov
xchg
jmp
idivb
faddp
add
and
aad
xchg
xorl
es
cmp
xor
cmp
or
jg
iret
lret
xchg
mov
cmpsl
jecxz
jns
popa
inc
dec
add
popf
hlt
push
mov
cmpsb
jle
dec
loopne
sbb
cs
test
mov
inc
jl
mov
jae
xlat
std
std
xor
xor
fdivs
mov
sub
into
dec
lea
int3
test
sbb
fmulp
or
push
jns
les
inc
and
xchg
iret
jnp
aad
cmp
jnp
sub
roll
movsb
or
jmp
data16
bnd
adc
andl
bound
pusha
fnstenv
jmp
in
insb
rcr
into
inc
mov
or
mov
add
mov
sub
repnz
cwtl
mov
call
leave
jp
fbstp
mov
and
cmp
sbb
inc
mov
cmp
push
movsl
push
repnz
in
fildll
push
jbe
dec
xchg
iret
cmpsl
icebp
mov
nop
jp,pt
test
rol
inc
stos
cmc
jno
mov
or
inc
mov
dec
inc
sub
enter
xchg
pop
loop
mov
mov
mov
jno
lock
add
dec
adc
mov
stc
sub
fdivrs
or
int
jns
or
inc
mov
cmp
cli
adc
inc
jl
mov
mov
mov
pop
int
andl
test
fsubrs
cli
jle
mov
pop
nop
xlat
aas
mov
push
jbe
mov
cmp
xlat
pop
and
push
xchg
dec
mov
out
mov
shrb
sbb
pop
in
subl
je
inc
mov
jmp
jne
leave
pop
adc
sbb
das
loopne
xlat
inc
jnp
fdivrl
int3
sbb
out
lds
popa
addl
sub
in
stc
mov
jp
cltd
gs
call
sbb
inc
in
es
inc
inc
adc
bnd
imul
add
out
dec
xorl
shlb
in
shl
out
jno
mov
mov
sbb
repnz
cmove
add
mov
movsb
add
pop
push
out
hlt
add
ret
rol
lds
jle
hlt
push
cmp
mov
push
ja
test
enter
cmp
setg
push
arpl
fsts
and
adc
adc
shl
pop
cld
cwtl
pop
in
adc
or
adc
mov
adc
xchg
jae
lahf
je
add
jnp
adc
jbe
repnz
ret
jecxz
lret
sbb
adc
and
pop
shlb
push
sbb
dec
push
lods
insl
mov
and
dec
fstpl
test
mov
adc
add
or
popa
jmp
imul
hlt
lahf
xor
addb
inc
mov
ljmp
push
mov
imul
stc
icebp
ja
or
out
xchg
dec
out
movl
mov
mov
nop
or
and
cli
sahf
push
push
xchg
insb
stos
sbb
dec
push
jl
lcall
jecxz
push
add
sub
or
popa
ret
pop
mov
mov
lahf
les
lahf
sbb
jns,pn
enter
and
fs
daa
inc
jp
mov
pushf
vcomiss
mull
imull
dec
stc
dec
popf
push
ret
icebp
mov
jl
sub
dec
dec
jnp
xchg
test
adc
push
push
insl
cmp
pop
ss
dec
mov
cmpsl
shll
sbb
push
and
inc
pop
shll
xchg
add
dec
and
pop
rcrl
lds
pop
xchg
outsb
cli
stc
add
sub
push
sti
push
rcrl
insl
and
push
xchg
nop
dec
mov
js
mov
rol
or
inc
cld
pushf
add
lret
das
fistps
jge
lea
dec
lods
test
push
pop
ss
or
mov
mov
xchg
mov
loopne
push
repz
out
mov
mov
mov
scas
mov
sub
sbbb
pop
in
and
push
mov
clc
aas
leave
cli
sbb
or
xlat
gs
cmp
je,pt
mov
cs
insb
dec
mov
adc
call
sbb
cmp
pop
xchg
or
cmp
adc
test
int3
xchg
roll
or
mov
cli
xchg
cmp
inc
mov
sarl
aam
or
adc
and
rorb
stos
paddsw
push
clc
jns
inc
paddw
pop
xor
or
leave
xor
sub
cwtl
or
or
sarl
jb
jmp
and
adc
push
fwait
mov
sarb
mov
nop
push
rolb
mov
dec
sbb
or
loopne
aam
mov
test
fdivl
ljmp
pop
fadds
inc
sub
inc
xchg
popf
pop
es
push
dec
icebp
daa
or
lock
imul
or
jns
jmp
cli
pop
adc
sub
xchg
notb
iret
adc
in
push
pop
std
sub
hlt
les
push
and
jl
dec
jp
popa
pop
mov
clc
mov
scas
mov
pop
sub
stc
xchg
ds
add
mov
fs
aam
ss
icebp
rclb
xchg
imul
aam
gs
jl
iret
repz
fiaddl
jl
clc
das
test
insl
cmp
aas
pushf
dec
cmpsl
scas
call
sbb
add
mov
stos
leave
js
xchg
fs
cmpl
ret
daa
mov
mov
xchg
movb
mov
cmp
je
adc
mov
push
int
cmc
mov
jmp
add
or
xlat
xor
inc
pop
push
or
lcall
int3
stc
xchg
cmp
in
cmp
fdivl
cmp
movsl
sub
data16
sub
inc
test
push
in
sub
fldt
fsubrp
call
mov
fisttpl
xchg
and
pop
lea
xor
add
mov
push
or
jae
cmpsb
data16
and
cmp
inc
mov
es
jne
lahf
pop
push
fistpll
sbb
and
sbb
pusha
dec
jne
divl
jecxz
sub
jae,pt
push
mov
fcmove
sub
and
test
test
repnz
les
imul
roll
inc
adc
sbb
loope
push
push
xor
inc
ss
int3
icebp
jecxz
stos
push
mov
jl
cmp
inc
leave
and
enter
scas
ret
fdivr
or
ds
push
lahf
jmp
or
add
mov
pop
jl
xor
mov
fcompl
and
dec
dec
mov
cmp
insl
loopne
int
mov
jno
xor
imul
in
std
jle
jae
dec
cmp
sub
jmp
lods
sub
mov
nop
ss
mov
shll
daa
clc
addr16
xchg
pop
push
cltd
cltd
btr
push
popf
and
out
rorb
loop
mov
popa
data16
push
stos
cli
cmp
dec
add
lock
dec
fcomi
lcall
mov
aaa
sub
push
cli
sbb
cmp
mov
mov
xchg
das
xlat
inc
repnz
popa
pop
shlb
enter
hlt
adcl
cmp
push
xchg
or
push
pop
stos
ljmp
aad
in
aaa
xorb
xchg
mov
imul
enter
cmpsb
fwait
lea
add
or
inc
xor
pushf
inc
dec
nop
shrl
aad
cwtl
mov
fidivrs
add
pop
or
gs
testl
icebp
rorl
lret
cmp
and
in
push
fsubs
outsl
rorl
adc
xchg
flds
fidivl
test
and
xchg
mov
jl
adcb
mov
mov
jl
test
test
xchg
mov
jmp
loope
ret
mov
and
mov
repnz
pop
mov
push
nop
enter
xorb
mov
dec
mov
pop
inc
mov
mov
inc
xor
xchg
orl
setbe
cwtl
adc
insb
das
push
scas
pop
sarl
cmc
movsl
ljmp
and
mov
mov
inc
jbe
out
dec
sbb
je
dec
into
and
push
or
std
and
xchg
push
insl
das
xchg
aas
push
fistps
sbb
xchg
jge
inc
xor
cli
mov
pop
mov
push
ret
in
inc
push
fidivl
pusha
scas
movsl
xchg
in
push
js
push
daa
outsb
jge
xchg
fcmovne
or
mov
out
pop
repz
fwait
aam
push
test
sbb
ljmp
icebp
mov
inc
mov
lcall
pop
insb
or
iret
fnstcw
cmp
lcall
jg
xchg
in
rcrb
add
adc
out
cmp
sbb
jl
cltd
xor
mov
sub
sub
xchg
shrb
push
in
sub
fldenv
rclb
cmp
adc
and
arpl
bound
cmp
inc
mov
test
cmc
test
inc
pop
sti
mov
add
push
popa
and
xor
aam
sarl
lcall
jge
loopne
or
lret
xchg
sub
or
push
lock
or
mov
mov
insl
test
sbb
cs
xchg
scas
and
mov
test
cltd
cld
pop
test
movsb
dec
jl
movsb
jbe,pn
adc
iret
mov
push
mov
rolb
mov
int3
xchg
leave
outsl
jnp
push
xchg
ficoml
jb
jns
scas
jl
shll
cmp
loopne
xor
scas
out
pop
inc
mov
ds
lds
mov
mov
pop
idivb
or
mov
and
bound
out
sbb
jmp
into
inc
fprem
sti
push
adc
jge
sub
cmp
push
mov
xchg
neg
push
ret
inc
lret
stos
jecxz
aam
mov
jb
push
jb,pt
out
cli
int
mov
pop
mov
jo
cmpsb
call
xor
mov
dec
fs
arpl
jp
and
fcoms
cltd
popa
mov
cmp
loop
mov
das
mov
cmp
xor
mov
dec
orb
rclb
subl
outsl
dec
xchg
fistpl
sbb
inc
push
push
push
xor
lret
cmpsb
out
mov
cli
aas
ficoms
mov
loop
and
or
jg
push
fdivr
cmp
mov
out
inc
idivb
adc
leave
in
fmull
add
das
shlb
inc
aad
or
add
lret
cmp
sbb
int
sarl
xchg
pop
fnsave
or
mov
mov
sahf
shrb
shlb
lock
add
sbb
fadds
fmul
test
or
jmp
cs
inc
enter
push
cld
mov
jle
jae
insl
add
mov
shlb
and
addr16
fnstenv
imul
and
cs
push
push
jp
das
test
daa
adcl
sub
jmp
enter
xchg
cmp
sbb
mov
push
ljmp
pop
cmp
cmovne
dec
xchg
ffreep
cmp
sub
fsubrl
fnstcw
or
lret
aam
or
fwait
sahf
xchg
mov
ljmp
sub
cli
add
fwait
ds
add
int3
mov
inc
scas
dec
ret
or
cli
inc
lcall
jp
sbb
jmp
cmovae
shl
js
jmp
mov
and
cmpsb
xor
mov
cld
cwtl
fcomp
fnstcw
inc
popa
sbb
sbb
jno
jge
js
or
daa
xor
faddl
pop
push
lcall
test
dec
jge
dec
cwtl
mov
mov
sbb
aam
jp
popa
xchg
test
add
cmpb
jge
fdivrl
sbb
test
sbb
sbb
jo
xor
xor
adc
xor
xchg
sub
mov
jecxz
sarl
push
mov
test
ja
pop
mov
pop
sbb
xchg
mov
rcr
lods
jp
loop
dec
sti
out
es
rcl
ja
mov
adc
cmpsl
clc
mov
mov
jbe
out
xchg
into
xlat
dec
aaa
xchg
ds
inc
xchg
push
mov
adcl
cld
int
fcomip
cli
paddb
movsl
add
fidivs
aas
push
xor
sahf
movsb
insl
xor
pop
cmc
jle
push
xor
sub
mov
sbb
sub
lret
in
push
in
call
xchg
mov
icebp
mov
cmp
pop
jp
int3
mov
fdivrl
mov
dec
add
lea
sbbl
and
mov
dec
int3
cltd
fdivp
dec
lock
or
push
push
mov
or
jge
mov
int
sub
hlt
mov
imul
popf
adcl
test
jnp
mov
add
sbb
addl
sbb
jge
dec
xor
movsb
mov
mov
imul
pop
or
sbb
in
inc
jo
loopne
scas
das
fnsetpm(287
jbe
test
jno
adc
push
in
mov
cmc
add
mov
fsubrl
xchg
adc
cmp
pop
jecxz
das
sbbb
jo
ret
sbb
or
lods
xor
call
jmp
sbb
notl
jnp
dec
sbb
popa
stc
and
pop
push
int3
adc
add
fsubr
push
shll
pop
pop
out
jg
outsl
and
das
sub
adc
cld
jnp
and
hlt
and
ljmp
cmpb
xchg
mov
cmpsl
mov
or
add
jb
pop
je
or
call
ds
and
and
lret
stc
mov
clc
mov
in
outsl
jl
add
jle
xor
aad
pushl
cmp
or
adc
loop
push
xor
add
pop
clc
mov
xor
insb
xchg
les
dec
out
adc
outsb
in
fmuls
aam
or
fnstcw
mov
cs
sub
test
popa
sub
addr16
sub
das
sub
push
mov
je
xchg
jp
andl
jo
cmp
push
enter
sbb
cmpsl
aam
mov
out
or
lods
test
mov
jns
dec
bound
cld
and
loop
jbe
push
ljmp
cmp
shr
sbb
movsl
push
cmpsl
adc
subb
cmc
cltd
int
out
dec
incl
fstpl
xchg
stos
fldl
sarl
cld
inc
in
out
jmp
mov
mov
in
and
dec
jo
sbb
pop
mov
aad
add
dec
pop
popf
xor
paddsw
and
adc
jmp
into
out
cmp
pop
cmp
and
mov
xchg
mov
inc
lock
sbb
enter
push
pop
insl
mov
xchg
mov
data16
push
push
cmp
js
and
adc
aas
and
mov
push
or
jmp
dec
jbe
cmp
cmp
bound
sahf
and
mov
divb
lock
push
jb
fwait
lock
push
mov
mov
daa
out
dec
xchg
test
xor
xchg
sub
mov
pop
jns
cli
xchg
inc
enter
pop
adc
jns
jno
xlat
in
and
jg
loope
into
mov
cmp
xchg
dec
rolb
jl
aaa
xor
je
insl
jecxz
lret
mov
rcll
dec
aad
xor
pop
cwtl
lds
cmp
xchg
arpl
cs
xchg
inc
push
adc
sbb
fbstp
fistl
mov
in
sub
or
test
inc
js
cltd
xchg
aas
adc
pop
push
int
xchg
push
popa
fwait
lret
xchg
xor
sbb
xor
rorb
jp
mov
mov
or
xlat
mov
or
pop
xor
cmpsl
mov
sbb
xor
jg
insb
fistps
pusha
mov
outsl
pop
mov
mov
movsl
mov
rolb
fsubrs
or
jbe
call
and
jp
aad
stos
dec
aas
frstor
add
and
xor
inc
lret
mov
loopne
movsb
imulb
cmp
cwtl
pop
xchg
cmpsb
adc
jle
lahf
mov
xor
xor
cwtl
call
popf
test
jno
fdivs
test
daa
xor
ficoms
cltd
mov
xchg
mov
xor
cmp
cld
xchg
mov
bound
mov
dec
lea
insl
sub
jmp
mov
and
insb
jmp
test
pop
sarb
dec
lods
mov
test
mov
mov
lea
xchg
and
and
xor
mov
fsin
in
insl
pop
pushf
dec
jns
xor
jo
out
ja
jne
pop
jg
aaa
mov
lods
cmp
jmp
xlat
xchg
mov
lea
cwtl
dec
pop
adc
call
test
aad
sub
scas
sti
in
enter
outsl
and
push
mov
mov
into
adc
shr
cmp
cmp
mov
jmp
mov
imul
iret
jmp
ret
sbb
mov
xchg
mov
or
mov
subl
push
mov
sub
and
fisubrl
sub
xchg
ja
push
dec
push
test
dec
sbb
sbb
scas
xchg
push
add
jne
adcl
pushl
into
loope
sub
scas
pop
or
in
xor
test
cmp
imul
sbb
sbb
out
sub
push
mov
notb
jg
imul
push
adc
xchg
sbb
mov
icebp
jmp
and
inc
cmp
mov
int
test
nop
iret
sbb
push
or
dec
les
or
mov
out
cmpl
dec
or
push
cs
sub
mov
insb
jle
jmp
ja
mov
lret
lcall
fistpll
stos
jp
sub
popf
addr16
and
loopne
push
into
lods
filds
sbb
xchg
call
cmpsb
sub
xchg
in
data16
loop
xlat
mov
pop
sbb
mov
cld
pop
inc
inc
and
fsubrs
xor
dec
pop
inc
sbb
sub
push
adc
nop
pop
aas
data16
adc
pop
sbb
scas
inc
mov
jne
in
outsl
fs
jo
mov
cmp
test
loope
roll
das
in
rcrb
pop
jns
jecxz
fmull
shrl
xor
dec
add
stc
mov
sahf
lret
xor
setg
popa
stos
js
or
add
lahf
push
frstor
dec
addr16
xchg
add
fdivrs
inc
cmp
jmp
xor
mov
popf
movsb
mov
iret
ret
fdivrp
xchg
adc
scas
mov
loope
test
sbb
sub
rcl
xlat
jae
mov
dec
je
dec
popa
xor
out
outsb
inc
pop
aas
mov
or
jl
leave
or
ss
mov
repz
xor
xor
mov
inc
call
push
cmc
dec
pop
jmp
xlat
dec
sub
xchg
arpl
jl
cmp
or
outsl
pop
inc
push
xchg
inc
dec
jae
addl
sbb
pop
dec
mov
sbb
dec
pop
push
stc
sub
test
mov
dec
lcall
lods
loopne
fwait
jl
add
imul
xor
cmp
ret
cmpsl
and
fisubl
movsl
xchg
in
pop
xchg
xor
mov
xchg
movsb
sub
mov
dec
jmp
push
adc
lahf
xor
or
pop
aas
dec
fimuls
lock
xchg
pop
sub
sahf
outsb
sbb
mov
inc
aaa
fiaddl
popa
sub
pop
cmc
cmp
jbe
pop
in
push
jae
je
cmp
add
pop
xor
jmp
and
fildll
das
cmp
or
sub
loope
ret
or
repz
and
mov
les
inc
mov
jge
js
adc
xor
loop
or
cli
jle
lcall
out
cmpsl
sub
push
inc
sbb
ret
and
push
les
dec
pop
or
pop
adc
cmc
pop
cmp
and
sbb
push
sub
lcall
aaa
jl
test
dec
mov
sub
mov
aad
cs
stc
stos
inc
pushf
xchg
ret
imul
arpl
dec
mov
lahf
outsb
and
cmp
and
push
sahf
cmp
dec
adc
pushl
push
pop
iret
jae
cmp
and
or
xor
mov
inc
stos
testl
stc
std
mov
std
imul
int3
gs
shlb
inc
shll
out
and
ficomps
mov
lahf
enter
out
inc
mov
xor
popf
adc
mov
test
fwait
scas
cmp
pop
int
sbb
outsl
aad
cmp
movsl
fldl
mov
lock
dec
or
jnp
imul
dec
sbbl
popf
lcall
fcmovnbe
pop
sub
pmaxub
popf
adcb
jbe
or
push
in
das
aaa
mov
loopne
orl
inc
stc
xchg
jnp
out
pop
add
jmp
inc
push
lods
scas
mov
shlb
or
arpl
sbb
pop
out
jmp
ljmp
lods
aaa
adc
data16
rcl
lea
inc
imul
sbb
pushf
jecxz
sbb
and
js
imul
jg
cmp
sti
mov
imul
xchg
mov
push
ret
jns
stc
cwtl
jmp
inc
mov
in
and
fwait
addr16
in
or
adc
cs
xor
mov
pop
dec
lock
sti
pusha
cwtl
addr16
outsl
stos
mov
dec
mov
inc
inc
adc
push
mov
rcr
mov
lsl
iret
pushf
add
movsl
mov
pop
push
mov
bound
lods
mov
fwait
adc
popf
jg
dec
fwait
push
iret
fisubrs
push
push
subb
xchg
dec
inc
ffreep
jbe
cmpsb
push
lods
pushw
notl
lds
push
js
scas
jecxz
adc
pop
test
add
mov
push
int3
cmpl
lcall
xchg
fs
pop
repz
cmpsb
je
push
xor
sub
inc
fwait
jns
dec
mov
push
or
das
sbb
sahf
push
ret
fs
repz
push
or
loop
outsl
into
fs
imulb
ljmp
mov
cmc
rorl
gs
ljmp
pop
dec
or
fdivs
cmpsl
xor
mov
pop
or
inc
ret
fwait
xor
sbb
cmpsb
xchg
mov
leave
push
push
lods
out
adc
jl
cmp
in
cli
adc
pop
mov
sub
lds
jns
insl
mov
aad
jns
sub
mov
pop
cmp
fst
jns
addb
jno
decb
push
dec
loope
push
push
shll
cwtl
rolb
addr16
xchg
ja
push
notb
mov
sub
lods
dec
mov
push
gs
inc
lods
or
popa
aam
pop
cs
adc
inc
adc
clc
push
cmp
sbb
add
mov
dec
orb
pop
cmc
mov
pop
cmpsl
mov
in
inc
push
add
inc
ret
cltd
sub
daa
cmp
cli
mov
pop
fxch
add
inc
mov
dec
mov
repz
in
sbb
fildl
sbb
movsb
hlt
or
addr16
sub
mov
repz
push
and
mov
adc
push
jmp
push
cli
stos
xlat
adc
dec
ret
push
cld
and
scas
xor
in
cmp
or
sub
jnp
ds
cmp
test
jns
inc
lret
fs
mov
insl
dec
mov
enter
mov
mov
cmpsb
push
add
test
sbb
int3
xor
push
sbb
xor
xchg
jge
add
ja
loope
mov
xor
push
iret
stc
sbb
cmp
adc
sbb
adc
imul
xlat
cmp
pushf
stos
pop
mov
cmp
aas
sbb
sbb
cmp
icebp
push
add
mov
jno
jecxz
pop
out
pusha
or
or
add
aaa
add
test
in
mov
lods
pop
roll
fldenv
mov
push
xor
push
repnz
scas
ljmp
jne
cmp
fldcw
mov
xor
lahf
sub
pop
test
inc
fldl
xchg
xor
mov
mov
dec
pop
xor
or
inc
pop
nop
icebp
in
sub
in
gs
int
data16
inc
cmp
scas
or
sbb
scas
mov
aas
xor
scas
xchg
imul
mov
lds
xchg
mov
movsb
arpl
arpl
repnz
adc
popl
mov
das
cmp
hlt
gs
xor
jnp
insl
add
fs
push
cmp
jo
aam
std
call
jne
les
cmp
lods
test
and
dec
cltd
adc
les
rcrb
push
xchg
dec
dec
jne
pushf
lods
xchg
mov
pop
lahf
or
ret
pop
sub
loop
inc
cmp
and
xor
or
mov
shll
pushf
lret
xor
add
cltd
or
arpl
inc
jge
adc
sub
mov
sub
inc
push
adc
cmp
mov
jl
addr16
incb
adc
inc
dec
mov
mov
rolb
ret
rorb
push
or
iret
shl
add
jb
pop
xchg
arpl
jbe
sar
decb
into
pop
out
lahf
cs
and
push
xchg
aaa
js
hlt
mov
rcrb
dec
push
das
hlt
inc
sub
sub
sbb
xor
push
inc
loop
aad
scas
pop
dec
ja
xor
cmp
jmp
inc
test
stos
loope
int3
in
mov
adc
inc
aaa
aad
mov
stos
lds
icebp
sub
icebp
outsb
xor
dec
das
or
and
add
jmp
ror
adc
fwait
lret
clc
mov
sti
std
mov
pop
pop
iret
fbld
repnz
fwait
inc
stos
cmp
stos
dec
mov
ret
cmpsb
dec
jmp
sbb
mov
in
call
dec
dec
inc
clc
pusha
adc
pop
loopne
hlt
mov
roll
jecxz
dec
pop
mov
adc
mov
fists
mov
loopne
into
cmp
sbb
out
and
in
lock
mov
insb
jle
or
push
out
xor
xlat
movsb
test
pop
push
and
or
xor
out
das
in
das
push
pushf
inc
inc
adc
aas
pop
cltd
adc
mov
inc
movsb
xor
xor
inc
pop
hlt
xlat
xlat
iret
into
jle
dec
jbe
jns
cs
push
data16
mov
push
gs
push
fistpl
loopne
sti
ja
push
jbe,pt
mov
call
daa
dec
sub
xor
mov
dec
imul
inc
es
jmp
movsl
lods
sub
sbb
push
ficompl
jg
insb
test
inc
sub
jl
rcrl
andl
lods
cmp
gs
clc
push
and
pop
sbb
or
cmpsl
cmp
sub
add
notl
dec
xchg
add
pop
popa
mov
into
popa
popf
mov
jae
add
xor
cmpsb
xchg
inc
andb
pusha
and
inc
stos
sbb
idiv
xchg
fstps
shll
popf
mov
pop
jmp
adc
aas
shl
mov
push
or
movl
xchg
loope
rcl
mov
movsl
xchg
sbb
outsb
xchg
imul
out
dec
into
std
je
paddw
setae
jle
cmpsl
pop
cmp
mov
mov
test
sbb
lea
inc
daa
jle
cmp
mov
pop
sbb
add
cmp
mov
testl
iret
push
in
nop
mov
pop
mov
jb
sub
shr
rcrl
inc
xor
and
arpl
xchg
xchg
xchg
jge
pop
shll
jnp
stos
jae
adc
sub
adc
inc
push
jge
jge
jecxz
or
cltd
or
call
cmp
mov
xor
xor
and
mov
lcall
pushf
lods
pop
cmc
rcrl
add
lock
lea
xchg
xchg
pop
sub
ret
fldt
inc
ja
cmp
jg
adc
out
push
lret
mov
lock
loope
push
out
cmp
fildl
adc
push
insl
iret
xor
test
xchg
nop
jecxz
rol
push
sahf
incl
jp
inc
sti
cmp
mov
sahf
gs
fwait
mov
daa
xor
cmp
xor
loope
pusha
insl
addr16
dec
mov
mov
xchg
add
dec
add
and
insb
inc
mov
fadds
lds
sarb
push
shll
cmp
mov
inc
shrb
gs
push
movups
es
push
in
xchg
iret
cld
xchg
out
loope
mov
push
inc
cmp
xchg
xor
dec
cmpsb
bound
subb
fiaddl
and
shr
pushf
and
cmp
enter
jae
dec
rorl
stc
lock
cwtl
cmp
cwtl
xchg
pusha
cltd
rcll
sbb
mov
sbb
test
sbb
sub
push
or
adc
xchg
mov
std
xor
addr16
into
int
loopne
in
bound
jo
les
pop
cmovl
inc
sbb
ja
loop
scas
pop
or
out
fcmovnbe
mov
sub
sbb
sub
cmp
comiss
insl
and
cld
cmpsl
cwtl
inc
push
jle
sub
enter
inc
inc
dec
xchg
sahf
fstps
push
inc
mov
ljmp
mov
adc
push
jb
ljmp
cmp
iret
js
adc
out
fildl
jno,pt
add
lods
push
int
lcall
jo
lret
int3
inc
sub
rorl
and
ret
sahf
push
test
xor
pop
dec
movsl
mov
imul
adc
and
ljmp
adcl
daa
es
test
and
and
aad
addb
incl
xchg
stc
cmp
adc
testb
or
dec
mov
or
popa
and
loop
add
out
hlt
jp
leave
mov
sbb
pop
pushf
cmp
mov
fcmovnu
clc
or
int3
movsb
daa
jg
mov
sub
cmp
adc
push
outsb
jne
jo
sub
pop
fnstenv
stc
sbb
sub
xor
push
sbb
addb
inc
jecxz
cmp
lea
pop
inc
inc
ja
scas
push
push
xchg
jmp
push
and
sbb
inc
addr16
mov
test
jnp
sti
mov
out
xchg
fadds
out
scas
push
mov
dec
add
sub
stc
fnstcw
sub
mov
or
inc
icebp
add
and
adc
fs
jb
mov
dec
sub
add
outsl
dec
push
fiadds
aam
mov
cli
mov
setb
sbb
sub
fs
dec
test
pusha
pop
xchg
out
pop
fcomps
jae
pop
dec
scas
push
cmp
sub
xor
cmp
jge
pop
clc
jle
sarl
or
push
mov
sub
cld
mov
jo
inc
popf
xchg
insb
xchg
das
sub
mov
jno
jmp
fadds
push
cwtl
les
jb
lcall
movsl
push
push
lock
movsl
push
je
mov
insb
jp
adc
jno
xor
pop
into
testl
and
movsl
fistpl
push
insb
lods
psrlq
push
pushf
mov
dec
sarl
dec
int
cli
fildl
aas
fstl
loopne
cmc
shrb
je
adc
ljmp
mov
insl
fstpl
mov
call
scas
mov
ror
xor
sarb
sub
test
test
dec
push
pushf
push
enter
add
cltd
sub
inc
push
pop
inc
jnp
rcll
pop
push
cmp
outsl
cmc
rclb
jl
add
and
mov
and
pushf
cmpsb
in
andb
jo
xor
cli
or
cmp
inc
jno
sbb
stos
xor
mov
pop
or
mov
mov
pop
adc
and
scas
in
aam
scas
dec
outsl
shll
cmp
in
push
and
and
xchg
fnsave
loopne
add
mov
mov
pop
add
dec
and
in
incl
js
repnz
sub
adcb
pushf
out
add
out
cmp
push
xchg
pop
outsb
mov
cmp
insb
mov
fucomi
lahf
jno
jnp
jmp
stc
add
push
call
lcall
les
andl
cmp
jmp
mov
sbb
or
sti
mov
fwait
out
mov
js
scas
lock
xchg
shrl
push
aad
jne
js
pop
jmp
dec
cmp
xor
mov
ljmp
out
mov
in
jo
adc
hlt
insl
pushf
pop
pusha
nop
pop
add
icebp
xchg
mov
sti
or
std
lret
test
leave
inc
je
pushf
inc
loopne
test
ret
mov
out
fimuls
loope
pop
popa
jns
lahf
aam
fcmovnbe
jns
and
addr16
pop
pop
lock
nop
inc
cmpsl
adc
in
fsub
sub
std
push
loopne
mov
push
in
bound
pop
arpl
pop
or
xchg
shll
sub
inc
inc
pop
dec
loopne
xor
and
lahf
sar
sub
loope
push
inc
pop
test
push
sub
scas
stos
adc
jp
add
std
push
mov
mov
xor
or
icebp
mov
mov
test
data16
mov
mov
adc
mov
adc
adc
cmpsl
scas
add
adc
jne
or
ret
and
dec
mov
ss
cmp
push
jl
adc
int3
and
scas
and
push
pusha
fsubs
inc
stos
movsb
rorl
movsb
cltd
adc
and
inc
sar
jb
sbb
and
mov
in
push
sub
sbb
int3
add
dec
jecxz
and
jne
xor
daa
push
les
xor
add
inc
stos
in
cmp
je
sub
dec
test
or
pop
push
push
mov
and
jle
lret
jnp
jmp
ss
popl
mov
or
out
cmp
jp
js
mov
or
adc
add
lods
enter
js
sub
mov
inc
inc
fwait
sub
sbb
adc
stc
das
and
mov
sub
lret
and
aas
or
mov
lcall
loope
in
lods
aam
pop
dec
dec
adc
out
xchg
test
cli
mov
out
pushf
and
dec
icebp
cmpsb
push
notb
cmp
call
movsl
mov
dec
fs
mov
bound
enter
movsb
sub
push
sub
vaddsd
jae
icebp
pop
daa
xchg
and
dec
bound
sub
iret
push
in
scas
repz
ret
xchg
mov
and
jecxz
fsubs
inc
ficomps
addb
xchg
orl
inc
cmp
jge
nop
push
cmp
cmp
je
mov
cmpsl
push
xlat
ficompl
mov
adc
lea
add
stos
and
mov
push
out
call
pop
xor
add
mov
xchg
popa
cmpsb
add
in
cmp
xchg
dec
inc
jb
andb
subl
sub
loopne
shlb
lret
mov
daa
arpl
sahf
fs
or
push
adcl
out
mov
mov
mov
xchg
ljmp
pusha
dec
test
jmp
lock
adc
sti
imul
xchg
dec
sub
lcall
jmp
jae
das
fwait
push
add
mov
movsb
push
es
fnstsw
sbb
adc
mov
jge
xchg
lods
mov
je
popfw
pop
cmp
push
jo
mov
dec
in
addb
add
mov
sbb
arpl
int
adc
jae
pop
gs
mov
xor
xor
inc
das
pop
cmp
pop
adc
mov
clc
sahf
sbb
inc
add
test
enter
insl
lret
dec
in
rorl
sahf
nop
outsl
testb
into
sub
das
xchg
dec
mov
xor
dec
jb
mov
or
cmpsb
cmp
push
mov
test
dec
adc
push
lds
push
xcrypt-cbc
cmpsl
pop
sti
cld
fistpll
out
xor
mov
popa
or
jo
jmp
out
push
test
cltd
dec
icebp
xchg
fwait
movsl
mov
inc
jns
cmp
lahf
aaa
adc
out
aam
popa
cmp
pop
enter
mov
mov
cld
sahf
addr16
push
lret
inc
divb
je
stos
push
ds
scas
out
push
push
dec
mov
inc
push
enter
mov
insl
rorb
mov
and
mov
push
jbe
cmp
or
fistl
mov
xlat
cmpsb
push
xchg
ds
out
push
mov
sbb
insl
icebp
dec
scas
inc
jmp
mov
fimuls
mov
roll
cmp
sbb
adc
pop
xor
inc
cmpsb
adcb
imul
int3
dec
test
insb
lcall
pusha
mov
mov
sbb
dec
stos
test
or
mov
popa
pop
ljmp
orl
lods
cmp
and
xchg
loopne
pop
xchg
ret
jecxz
xor
out
xor
ja
xchg
mov
stos
push
add
pop
pop
cwtl
add
insb
mov
mov
xchg
fwait
in
divb
push
dec
in
pusha
out
lods
and
adc
enter
scas
push
js
push
stos
cli
roll
push
inc
inc
std
aam
ret
repz
sub
mov
pop
es
cltd
fsts
sbb
movsl
ficoms
and
sbb
incl
pop
sub
cli
in
push
jle
mov
sarb
in
ljmp
inc
mov
mov
shlb
mov
mov
ror
sbb
orb
cwtl
jmp
pop
fwait
ret
mov
cbtw
push
pop
mov
dec
dec
js
imul
mov
shrb
in
mov
pop
movl
inc
inc
in
jns
daa
jb
mov
out
push
mov
aas
jle
stos
cmp
jnp
lock
adc
jne
sbbl
in
mov
outsl
cmpsb
and
jl
imul
or
mov
lret
pushf
inc
add
call
sarl
inc
clc
and
movsb
add
nop
ffreep
add
icebp
jle
sahf
jns
pop
inc
add
xorb
adc
add
pop
dec
pop
push
jb
loopne
ja
add
cmpsb
sbb
add
arpl
popf
pop
sbb
jbe
or
mov
sbb
cltd
dec
cmp
cmp
or
test
mov
fcomps
mov
xor
push
stos
cmp
push
sahf
outsl
inc
xor
outsl
jae
aaa
aaa
out
adc
xor
pop
mov
in
ret
jo
loopne
mov
jg
sbb
bound
xchg
outsb
sub
push
sub
insb
mov
mov
or
aam
stos
std
lcall
sbb
into
cmp
in
push
lods
jmp
rcrb
cmp
pop
sub
pop
inc
inc
mov
iret
inc
fadds
lods
cmp
stc
ljmp
cmpsl
pop
pushl
cli
orb
push
std
dec
and
add
jne
mov
mov
dec
mov
sub
in
aas
fwait
in
push
sub
mov
sbbb
dec
push
xor
fchs
imul
sbb
out
push
pop
and
sub
mov
loopne
xchg
pusha
jae
sub
neg
sahf
jge
dec
popa
mov
jg
ss
das
nop
lret
loop
int3
mulb
lock
insb
loopne
xor
sahf
popa
aad
push
lea
pop
test
shlb
testb
or
lods
test
xor
push
mov
and
mov
mov
jns
pusha
or
adc
loope
ret
stc
xor
testb
movb
dec
dec
inc
jae
movsb
cmp
les
xchg
mov
shlb
ss
fcomps
andb
xchg
pop
sbb
mov
insl
or
jno
push
push
push
fnstsw
xchg
push
add
sbb
mov
push
add
pop
stos
jmp
mov
and
out
pop
cmp
add
xchg
push
ret
cmpsb
andb
xor
push
idiv
jp
pop
nop
inc
imul
push
hlt
mov
push
test
jne
sbb
inc
or
adc
xor
jmp
arpl
ret
sbb
fstps
rcrl
ds
mov
pop
add
jmp
mov
movsb
fnsave
xchg
pop
decl
cmp
stos
push
insl
fstpl
xor
inc
outsl
outsb
clc
push
add
mov
sub
sub
outsl
in
lcall
out
dec
pop
jae
mov
mov
mov
fiaddl
push
sbb
stos
sub
jmp
inc
and
xchg
cmp
pop
negb
js
int3
arpl
or
cmpsb
test
xlat
sbb
sbb
jmp
sub
mov
loop
int
mov
ds
imul
push
lcall
popf
aaa
jbe
ljmp
ret
stos
jb
test
pushf
xlat
fistpl
aam
sbb
mov
mov
mov
xchg
cmp
js
push
sahf
daa
int
aad
arpl
shll
push
push
push
push
and
stos
fnsave
lods
push
clc
cmp
test
insb
sarb
sbb
int
or
jecxz
pushf
push
mov
cli
push
pusha
mov
or
mov
js
pop
ret
scas
mov
adc
xchg
sbb
movsb
mov
mov
xor
sub
cmp
jae
and
arpl
jmp
sbb
pop
out
lods
push
dec
iret
dec
loopne
imul
inc
and
cmpb
jnp
jns
push
enter
lahf
mov
jae
cmp
les
cmp
xor
push
mov
jo
aad
clc
out
or
sbb
mov
add
out
pop
mov
jp
jle
push
mov
pushf
cmp
and
daa
icebp
clc
aaa
add
lods
lret
cmp
adc
pop
sahf
fwait
shlb
cmpsb
ss
pop
rcll
pusha
xchg
sti
add
std
fcoml
sub
popa
mov
xor
ds
cmp
cmp
push
je
mov
mov
push
enter
xor
das
hlt
push
cmpsb
push
sbb
sub
push
ja
inc
jle
sub
outsl
cmpl
shrl
add
fcmovb
stos
xor
or
dec
popa
dec
or
repz
shl
imul
sbb
dec
pop
xor
jns
arpl
mov
cwtl
xor
push
dec
stos
fdivrs
or
sbb
fs
push
push
push
sbb
insb
inc
outsl
push
fsubrs
clc
sarb
daa
mov
mov
mov
adc
dec
je
jmp
std
mov
xor
xor
insb
jns
jecxz
insb
push
jle
xchg
push
inc
arpl
mov
sbb
repz
ret
adc
push
shrb
enter
out
mov
cmp
xor
cmp
out
xlat
jge
scas
sub
lahf
cmp
dec
lea
jg
sahf
into
jns
jmp
call
and
xchg
ljmp
stos
inc
xchg
data16
sbb
inc
jno
jb
cli
pop
adcb
mov
dec
ret
mov
sbb
fcoms
xor
add
lock
add
outsl
push
push
inc
and
push
test
popa
jecxz
rcll
inc
lods
adc
test
call
leave
xchg
jecxz
adc
icebp
pop
mov
jae
in
sbb
mov
xchg
mov
add
dec
stc
test
movsl
add
add
push
loopne
pushf
call
jp
push
jg
sub
adc
jge
movsb
jl
repnz
shlb
add
mov
or
xchg
popf
mov
or
or
repz
xchg
dec
and
insl
or
jbe
arpl
jg
aam
mov
andb
rorl
mov
push
out
dec
cmpsb
xchg
imul
pop
push
inc
jo
sub
test
pop
sub
sub
hlt
and
sub
cmp
inc
aaa
ljmp
shlb
loope
enter
dec
arpl
xchg
ret
outsl
fildll
cmpsl
js
inc
and
sbb
rorl
mov
push
mov
test
inc
data16
mov
and
addr16
sbb
lcall
xlat
jmp
jnp
lret
loop
hlt
rol
out
test
in
minps
adc
sbb
rolb
lea
nop
lods
sub
fimuls
push
ds
jg
cmp
sbb
cwtl
xchg
stc
scas
mov
sbb
mov
ljmp
mov
scas
sbb
pop
adc
push
mov
out
inc
iret
nop
pop
lea
repz
sbb
or
lret
push
add
or
lret
loop
lret
add
add
mov
xor
shrb
orl
into
sub
lods
mov
fucomp
not
fisttps
push
aad
mov
push
fistps
dec
lahf
mov
adcb
dec
add
movsl
mov
fstps
jbe
dec
stos
ficomps
scas
xchg
les
adc
test
mov
xchg
popf
push
push
adc
les
pop
sbb
inc
call
mov
inc
dec
xchg
cmpsb
push
lahf
add
enter
push
mov
js
and
cltd
mov
xor
push
outsl
enter
add
pop
pushf
sbb
inc
mov
movsb
cmp
xchg
push
adc
xor
fwait
loopne
push
mov
dec
push
and
lret
rcll
sti
and
pop
popa
mov
fidivl
les
orb
xchg
pop
push
mov
pushf
adc
in
inc
clc
cmpsl
sub
pop
repz
xor
mov
cmp
shrb
sbbb
mov
jl
pop
int3
ja
popa
dec
and
xchg
mov
aas
cmc
adc
xchg
mov
mov
aam
xchg
mov
dec
push
ja
out
and
out
fnstcw
jmp
repz
cmp
cli
not
clc
mov
dec
push
mov
cmc
mov
ss
pop
test
adc
je
ret
repz
loop
mov
fistpl
or
mov
popf
xor
cmp
xchg
mov
adc
loop
jl
rol
aas
xchg
shll
lcall
outsb
push
add
or
out
jecxz
push
sbbl
mov
push
add
int3
jno
jb
idivb
mov
xchg
das
pop
gs
or
mov
push
pop
adc
xor
repz
cmp
jge
cmp
in
repz
enter
or
sub
pop
loope
imull
push
inc
lcall
ja
push
out
xor
rol
aas
xor
push
and
mov
stos
mov
cmp
movsb
test
pop
inc
arpl
fdivs
mov
fadd
sub
mov
pop
cmpsl
mov
adc
dec
xchg
stos
das
or
sbb
mov
add
dec
xchg
add
push
xchg
jns
cmp
pusha
fmull
pop
and
ljmp
ja
adc
scas
mov
shlb
ret
shrl
mov
je
cwtl
fisttpll
sub
popf
pop
mov
cmp
pop
iret
jns
sub
xlat
mulb
sbb
inc
mov
mov
popf
nop
jns
lahf
pushf
out
stos
adc
les
stos
inc
inc
sub
or
xchg
inc
cmp
lea
push
ljmp
stos
dec
pop
cwtl
mov
xchg
lock
adc
out
ret
test
das
fisubrl
jge
jecxz
inc
jp
movsb
jnp
fsubrs
push
in
cmp
iret
rorl
test
pop
xchg
insl
push
fstpl
inc
cltd
cmp
movsb
jno
mov
push
mov
pop
mov
jae
imul
mov
cmp
rorb
or
mov
mov
es
xor
hlt
lret
add
xchg
push
sbb
ds
push
testb
movsb
sbb
xorl
movsl
imul
inc
add
adc
divb
clc
imul
jl
mov
and
or
push
or
sub
andb
leave
ficoms
xchg
jb
xchg
or
xchg
xchg
out
sbb
fiadds
pusha
jno
push
push
pop
add
xor
sahf
sti
repz
mov
test
test
les
pop
jo
repnz
jle
mov
pop
inc
je
add
cli
movsl
inc
popa
jne
popf
andl
sub
jp
repnz
pusha
insl
cmpsl
testl
mov
lea
xor
sub
pop
pop
mov
mov
xor
mov
cmp
inc
xchg
push
push
fldt
dec
mov
aam
movsl
cld
out
and
incl
negl
iret
jl
adc
popa
push
iret
mov
mov
or
sbb
rolb
insl
add
jmp
daa
pop
dec
out
pop
jns
les
push
and
lock
fcoms
push
dec
pop
dec
and
cmpb
push
cli
mov
dec
and
pop
push
stos
add
out
adc
mov
outsl
movsb
div
mov
cwtl
clc
sbb
fildll
mov
xor
lods
mov
outsl
cmp
in
popf
pop
mov
mov
mov
js
ss
mov
mov
or
xchg
and
mov
negb
test
int3
insl
mov
jmp
rcl
xchg
xchg
xor
or
jg
bound
lds
sub
add
pop
leave
mov
or
pushf
divl
aad
xor
inc
mov
imul
ret
aas
add
fbstp
add
lcall
pop
jecxz
jecxz
daa
sbb
mov
or
pop
add
cwtl
repz
dec
stos
in
je
ds
xchg
and
ds
sbb
xor
mov
and
add
sbb
push
int3
ss
and
fs
cmp
lock
cmp
xlat
jle
cmovb
in
jo
adc
jmp
lret
jle
mov
mov
addr16
ljmp
sahf
mov
fdiv
jns
test
mov
shlb
stos
dec
aas
pop
dec
push
aad
push
pop
lahf
mov
jmp
push
and
jp
gs
cmp
mov
mov
jge
in
inc
mov
filds
push
push
daa
adc
dec
fwait
push
jle
sarl
or
mov
repnz
push
add
cmp
aas
jp
cmp
xor
movsl
icebp
out
leave
popf
test
push
add
je
jge
aad
scas
sub
call
out
movsl
cmp
xchg
lahf
dec
aad
push
jmp
in
xchg
jno
pop
pop
and
in
imul
es
add
les
adc
jge
in
mov
jno
sbb
stos
call
inc
jns
dec
mov
loope
jmp
stos
adc
cs
daa
test
ss
sarl
mov
add
enter
mov
enter
test
jb
push
aaa
aas
cltd
sbb
mov
xor
sub
fwait
add
pusha
nop
pop
push
sub
push
cmpps
cmpsb
cld
adc
mov
xchg
sbb
cmp
in
sbb
add
mov
and
add
cmc
cmp
mov
fidivrs
jmp
out
repnz
dec
jg
movsl
cmpsb
fldenv
test
push
loopne
xor
and
sub
mov
xor
and
push
and
pop
aaa
xor
in
xor
push
mov
push
cmp
mov
mov
divb
mov
fwait
call
in
lods
out
ss
sbb
inc
je
icebp
pushf
add
mov
push
pusha
fcoms
faddl
lret
movsb
dec
jo
cmp
or
js
inc
mov
scas
xor
sub
rclb
aad
test
mov
sbb
mov
pop
xchg
decb
mov
jo
jnp
lret
and
sti
xchg
or
jnp
or
add
daa
xor
jae
rcr
lret
mov
cmpsb
xlat
jp
scas
adc
lahf
inc
dec
dec
xor
and
scas
scas
add
mov
pop
push
jno
xlat
push
add
outsb
ret
inc
add
xchg
and
push
pop
data16
mov
add
in
test
mov
jo
push
loope
jne
dec
and
and
pop
mov
inc
dec
push
push
fdivs
shld
sti
cmpsl
out
and
dec
jbe
push
and
xchg
xchg
push
lods
test
sbb
test
mov
shrl
add
lret
loop
cmc
pop
sub
shl
or
mov
and
cmp
dec
xchg
mov
mov
xor
mov
bound
push
data16
add
ss
dec
in
xchg
daa
pop
add
in
fwait
xchg
jnp
dec
inc
xchg
fidivs
movsl
or
movsl
adc
ficompl
add
mov
push
mov
lods
dec
or
and
jbe
fwait
mov
cli
arpl
fidivl
sbb
std
mov
leave
jmp
xor
xlat
fwait
aam
or
dec
mov
pop
cwtl
pop
and
ret
inc
dec
cmpsb
ss
cs
lods
and
sahf
push
mov
dec
jge
clc
clc
push
dec
and
jno
rorl
ds
into
or
or
hlt
push
xor
push
aas
add
jae
cmp
lret
movl
idivl
pusha
and
push
cmp
inc
push
xchg
mov
in
cmpsb
jmp
loope
xchg
fidivrl
pop
outsl
lea
into
push
mov
dec
nop
push
push
inc
adc
mov
push
test
mov
cmpsl
add
fcoms
mov
cli
in
push
popf
sti
rcll
cmp
sbb
jmp
pop
hlt
testl
into
addr16
out
mov
lock
add
sub
popf
add
cmpsl
das
not
inc
xchg
jp
or
in
clc
mov
mov
addr16
scas
xchg
inc
arpl
and
enter
pop
mov
adc
pop
cmp
popf
xchg
cltd
hlt
cs
js
inc
push
mov
sub
cmp
push
inc
xlat
mov
mov
movsl
std
fs
dec
inc
loope
out
gs
sub
fdivl
rcr
sbb
xchg
inc
xor
xchg
hlt
arpl
cmpsl
mov
cmp
xchg
outsb
into
mov
push
and
adcl
push
adc
mov
cmp
in
pop
ds
mov
inc
cld
jne
cltd
aam
inc
jnp
ret
pop
lods
es
mov
xor
mov
leave
std
adc
jnp
push
cmp
mov
js
dec
das
xorl
in
mov
movsb
mov
and
push
jp
add
int3
gs
cmpsb
imul
outsb
push
xlat
jg
cmp
insb
les
sti
andl
loopne
xchg
or
inc
mov
cwtl
push
inc
xor
and
popa
lret
mov
ljmp
mov
and
xlat
shll
stos
jns
aaa
cmp
pusha
nop
jge
rol
push
lret
jge
mov
ret
js
push
dec
or
outsl
lea
dec
rcl
lods
sbb
mov
imul
inc
out
or
imul
inc
dec
loopne
sub
leave
lock
das
sbb
jecxz
adc
lods
inc
sub
jae
cmp
add
les
pop
dec
hlt
stc
outsb
mov
mov
xor
dec
cld
inc
lret
ret
sbb
mov
push
pop
ljmp
les
jle
fistpll
jb
ret
push
popa
push
andl
std
mov
pop
mov
in
xchg
adc
loop
pop
pop
jae
lcall
cli
sub
fsts
sub
mov
push
dec
sub
cmp
adc
test
and
imulb
push
in
push
xor
add
add
push
inc
int3
bound
mov
ret
or
xchg
mov
fmuls
movsb
sub
stos
lret
xchg
jno
cmp
pop
incl
sub
and
jns
in
or
sub
enter
sbb
lods
jle
loopne
out
bound
aas
movsb
dec
shll
fcompl
lods
fiadds
sub
and
call
lret
xor
cli
add
nop
push
mov
ja
xlat
or
mov
movsb
pop
inc
or
dec
out
push
and
mov
jns
bound
dec
test
sbb
loop
pop
or
lods
outsb
and
pop
pop
xchg
insb
mov
jge
push
xor
ret
nop
push
adc
lret
ja
push
lods
and
dec
xchg
fistpll
xchg
addr16
mov
mov
sub
add
pushf
outsb
out
out
gs
je
daa
pop
in
mov
push
adc
jl
imul
aas
subb
mov
test
cmpsb
mov
hlt
and
imull
inc
adc
ret
in
gs
fsubl
or
out
popf
lret
push
add
icebp
or
rorb
loopne
and
dec
loope
cmpsl
sbb
dec
cli
movsb
jnp
and
outsl
or
imul
sub
pop
inc
adc
ret
xchg
jge
xor
jo
dec
pop
cmp
and
push
enter
pop
push
inc
jae
mov
jno
lods
cmpsl
lret
adc
repnz
je
outsl
mov
push
cmp
cwtl
dec
aam
push
sbbb
movsb
pop
or
ss
inc
inc
sbb
cmp
xchg
add
cmpsb
sub
addr16
ds
pop
mov
test
dec
or
adc
data16
test
jmp
or
repz
jp
jae
adc
popa
test
mov
in
adc
loop
ljmp
movb
xchg
lods
inc
out
adc
adc
or
jnp
sub
jecxz
icebp
xchg
cli
fidivrl
xor
mov
mov
mov
dec
sbb
cmpsl
cli
ljmp
cs
movsb
popf
xchg
mov
sbb
out
mov
out
xor
adc
or
movsb
icebp
lock
push
or
push
lods
clc
insb
sbb
xlat
push
daa
add
je
xor
mov
and
and
in
and
mov
ja
push
sbb
xlat
push
adc
stos
mov
cld
jge
adc
into
nop
int3
ds
ficomps
inc
in
inc
pop
push
dec
push
jb
sbb
popa
pop
xchg
cltd
jmp
hlt
xchg
jmp
sbb
gs
sub
pop
mov
mov
sub
cmpsl
mov
out
inc
ja
pop
adcl
mov
stos
adc
or
or
fstps
jecxz
pop
xor
inc
mov
lret
add
mov
repnz
sub
inc
in
or
dec
push
outsl
clc
mov
lahf
repz
sbb
std
stc
and
popf
mov
sarb
xchg
inc
inc
lret
test
cld
in
xchg
sub
pop
inc
shrb
ficoms
jg
shlb
sti
sbbl
inc
inc
push
stos
aaa
pushl
clc
mov
aad
or
out
and
push
cmpl
imul
push
jecxz
test
adc
pop
nop
jbe
jmp
fiadds
xor
rclb
adc
mov
dec
call
push
push
movsb
call
mov
aam
stos
push
les
into
mov
pop
or
adc
je
mov
jp
push
jl
dec
out
push
fdivr
inc
rclb
das
mov
xor
push
addr16
cmp
test
or
sub
xor
xor
pop
repz
fsubrs
dec
loope
pop
in
pop
jne
ret
xor
or
subb
loop
popa
mov
mov
dec
fcom
mov
shll
outsb
imul
btr
jmp
fs
adcb
jg
ja
inc
sahf
loopne
jae
sar
or
mov
insl
push
out
jp
ret
rorb
jmp
dec
pop
cmp
icebp
cmp
sahf
cld
movsb
xor
or
ss
sub
jl
pushf
sub
sbb
fsubs
loope
sub
inc
pop
loopne
cwtl
je
test
pop
fs
sbb
and
mov
aam
adc
xor
inc
scas
mov
inc
test
sbb
cmp
pop
dec
ret
dec
sbb
addr16
or
bound
cmp
test
xchg
bound
push
bound
cmp
sbb
or
jmp
mov
jmp
testl
cmp
fldcw
xchg
jle
mov
inc
std
cld
mov
jns
jge
popf
fwait
push
aaa
or
xchg
jl
stc
js,pn
push
loope
mov
xor
in
hlt
jmp
cmpb
push
scas
rclb
js
sbb
push
or
jnp
inc
jbe
or
mov
and
add
sub
push
xchg
clc
dec
out
in
pop
pop
cld
lret
xchg
rcr
outsb
push
inc
das
cmp
fsub
into
push
jle,pn
push
sarl
aaa
mov
in
push
sbb
pop
ds
lcall
cwtl
pmaxsw
inc
adcb
pop
push
push
add
dec
lcall
pop
push
notl
sbb
pop
push
pop
pop
cltd
fcomi
or
sbb
push
adc
mov
jecxz
outsb
push
sti
nop
mov
or
inc
daa
clc
inc
and
loope
fidivrs
in
lcall
mov
adc
aaa
pop
adc
cld
shlb
aaa
fnstsw
lret
dec
insb
int
es
jnp
mov
shlb
pop
shrl
pusha
adc
mov
and
mov
mov
mov
jge
loopne
push
adc
movl
inc
pop
fstl
or
mov
pop
enter
lock
dec
adc
push
jne
pop
in
lods
mov
sub
mov
sti
loope
arpl
push
rep
incb
fmull
sbb
sti
dec
lds
je
sbb
pop
imul
cli
in
push
push
ljmp
les
add
lock
rcrb
popf
mov
loope
ffree
jecxz
test
cld
cwtl
aaa
jae
mov
push
dec
dec
pop
insb
push
fcompl
cmc
and
fsub
sar
mov
adc
movsb
cltd
jg
enter
icebp
movsb
insl
mov
pop
stc
cmp
inc
call
rcr
push
dec
in
stos
cmp
mov
cmp
xchg
ss
jmp
jnp
enter
mov
or
jnp
dec
test
bound
lock
insb
xchg
aas
movsb
es
jg
dec
xchg
js
ss
into
sbb
add
test
out
xchg
neg
cwtl
adc
enter
in
imul
loopne
daa
std
test
sbb
jl
push
imul
clc
push
cmp
inc
lods
cmp
dec
orb
or
stos
in
loopne
fsub
mov
xor
dec
inc
out
test
cltd
add
mov
out
lds
testl
mov
ficomps
adc
cmpb
loop
ret
adc
jno
pop
mov
shr
stos
sub
lcall
jbe
vphsubwd
movsl
mov
push
int
shlb
xor
loope
ret
ljmp
mov
out
push
xor
push
cmpsl
and
mov
mov
push
push
jbe
dec
movsl
faddl
mov
loope
pusha
add
sar
jge
pop
and
icebp
rcll
shlb
add
jmp
lret
test
mov
iret
mov
iret
push
mov
mov
test
das
cwtl
cs
sahf
xchg
out
imul
adc
push
ret
shr
push
arpl
fcomip
adc
cltd
fimull
pop
js
mov
jp
cmpl
inc
pop
push
jne
xlat
mov
jno
cmp
out
mov
test
and
cmp
dec
adc
pop
mov
mov
inc
or
mov
inc
mov
scas
cmp
or
in
shrl
dec
jge
add
testb
imul
jno
cmp
push
push
xor
mov
insl
vfmsubsd
add
mov
imulb
sti
in
in
fistpl
jg
stos
lods
or
push
call
test
aas
ss
lret
call
sub
adc
jecxz
test
fildl
add
fisubl
xor
aam
add
dec
adc
adc
out
pop
push
out
mov
cltd
push
rcll
in
pop
cmc
mov
or
xlat
shlb
add
xchg
xchg
inc
jecxz
scas
add
xchg
lahf
push
jo
insb
sbb
arpl
xor
push
xor
push
xchg
daa
inc
push
repz
cmc
test
sub
push
in
lods
into
scas
aas
nop
push
test
inc
mov
mov
dec
sbb
sub
into
xor
xchg
inc
cmc
scas
xlat
fldt
into
xchg
sti
cmc
nop
test
dec
pop
pop
inc
adc
inc
inc
cwtl
mov
push
mov
movsb
jno
enter
cmp
pushf
pop
push
xchg
cmp
cmp
daa
iret
push
into
aas
daa
lret
sbb
lock
xor
cmc
stos
push
stos
xor
enter
inc
clc
je
mov
xchg
push
xchg
lcall
or
pop
mov
rorb
lods
xchg
fdivl
jne
es
or
jmp
xor
sub
ss
push
inc
and
xlat
xchg
sbb
testb
pop
adc
sets
adc
or
adc
sbb
into
push
nop
cmp
shll
mov
mov
fsubl
out
xchg
xor
inc
push
push
inc
sbbb
lock
xchg
push
shlb
inc
shl
mov
pop
pop
mov
into
movsl
add
push
dec
lret
je
loope
outsl
mov
push
mov
pop
out
dec
mov
shr
jnp
hlt
push
and
add
sahf
je
sub
lahf
or
lahf
testb
icebp
mov
jmp
jl
xchg
add
hlt
icebp
lea
push
mul
loope
cli
mov
cmpsb
xchg
or
clc
cs
outsl
pop
mov
push
out
lret
xchg
jmp
xchg
cmpsl
ficoms
jbe
cmpsl
or
loopne
jno
mov
xchg
inc
into
les
test
jb
sub
push
dec
loopne
adc
loope
mov
aad
fidivrl
xor
ret
sti
andb
xlat
cld
ret
sbb
das
andb
cmpsb
mov
mov
or
fdivrs
test
jo
stos
mov
sub
xlat
lds
cmp
or
popa
movsl
daa
lcall
imul
loopne
push
mov
lods
test
les
scas
push
arpl
cmp
subb
and
stc
xor
shll
ljmp
and
mov
les
jns
enter
xchg
jnp
in
jb
and
orl
xchg
or
pop
out
gs
add
inc
pop
fstpt
aad
sahf
jo
fwait
js
icebp
icebp
ss
xor
sbb
inc
pop
in
nop
dec
pop
and
xor
dec
cmpsb
jo
or
std
call
pushf
lods
xor
xor
imul
add
aas
test
mov
fsubrs
rcrl
sbb
inc
mov
add
cli
xchg
mov
add
mov
push
pop
push
sbb
xor
dec
insb
add
or
les
gs
and
add
idiv
pushf
fsubl
jl
aas
shlb
outsl
gs
xchg
ret
rol
adc
dec
mov
and
rcrl
mov
jne
repnz
out
sbb
mov
aam
add
aaa
or
scas
lahf
andl
les
sahf
cmp
push
mov
xchg
add
xchg
mov
mov
adc
movsl
pop
mov
inc
std
movsb
out
add
cmp
push
ss
or
gs
cmp
xlat
insb
inc
push
pop
out
add
inc
cmp
pushf
testl
repnz
push
addr16
add
sub
shr
aad
jae
shufps
mov
xchg
cmp
shll
shlb
fsubrs
outsb
jp
call
aad
js
out
mov
xchg
push
xor
jmp
pop
sub
cmc
mov
ret
push
popf
inc
mov
pop
mov
sbb
and
fs
xchg
pop
mov
shrb
add
mov
adc
jbe
add
add
add
dec
sbb
fistpll
inc
mov
imul
idivl
frstor
daa
scas
test
stos
mov
cmp
int3
insl
andb
fnstcw
roll
cltd
xchg
pop
or
out
mov
mov
cmpsl
pop
lret
enter
popa
fstpl
fldl
fwait
push
inc
jmp
jbe
in
out
inc
sub
stos
or
cmc
xor
dec
lahf
mov
mov
fldl
mov
imul
dec
lcall
push
test
or
insl
xor
popa
lea
mov
cmp
arpl
or
push
or
jbe
mov
sbb
movups
popf
adc
xchg
mov
adc
lcall
bound
or
es
lahf
lahf
and
leave
adc
push
test
mov
mov
insl
cld
mov
cs
push
jle
iret
ss
int
shll
aas
imul
sbb
xchg
data16
pop
add
dec
jo
dec
push
out
jns
das
fidivl
rolb
jo
push
and
or
leave
hlt
push
test
cmp
insl
mov
or
shll
cwtl
xchg
arpl
clc
jb
xor
jnp
xor
add
xor
pusha
in
leave
pop
dec
mov
lds
shrb
add
push
decb
fldl
mov
adc
add
fildl
sbb
mov
dec
frstor
push
push
out
jns
mov
pop
dec
loop
leave
and
loopne
xor
loopne
jl
jns
loopne
inc
pop
popa
cmpsb
push
mov
jge
pop
mov
stc
lock
or
jno
adc
dec
addb
test
movsl
fldt
je
addl
out
push
and
jno
mov
test
lods
fisubrl
in
adc
push
mov
out
inc
push
push
pop
loop
insb
xor
xor
rcrb
es
cmp
adc
push
aad
adc
lods
and
pop
cmp
pop
lahf
lods
dec
pop
mov
mov
out
sub
fisubrl
stos
cltd
inc
mov
fsubr
movsl
sbbb
add
sarl
pop
adc
pop
xor
or
subb
sarl
adc
xchg
mov
mov
push
nop
add
call
lret
inc
out
icebp
jno
sarl
pop
jno
test
jo
xchg
fwait
into
bnd
in
jo
sbb
xor
and
insl
test
iret
jnp
dec
sbb
stc
insl
push
repz
sub
xor
sub
xor
jge
mov
adc
mov
inc
aad
jnp
or
jno
cmp
pop
aam
mov
push
and
imul
in
mov
adc
cli
sub
hlt
or
hlt
cltd
push
out
out
jl
lret
adc
into
aaa
inc
in
cmp
pop
mov
icebp
outsb
cmp
shll
es
xchg
or
add
cmc
mov
sub
pop
mov
rorb
mov
sub
dec
add
mov
fiaddl
dec
xor
xor
shlb
icebp
xchg
ja
imul
out
pushf
aas
fdivrl
fs
inc
movsl
popf
inc
jns
inc
lcall
cmp
xchg
fbld
jmp
arpl
lods
shlb
mov
arpl
add
jns
push
add
mov
cmc
rcrl
mov
int3
jp
out
clc
inc
sub
push
pop
int
jnp
out
gs
xchg
sub
cmpsl
pop
push
mov
sbb
enter
cld
in
fs
stos
fnop
jnp
and
or
jno
fmuls
inc
test
jns
out
push
pop
pop
pop
push
adc
push
sahf
inc
hlt
mov
das
pop
mov
adcb
call
incb
scas
push
cwtl
xchg
mov
pop
sub
sbb
jmp
insb
std
or
cld
cmp
imul
jae
testl
adc
and
add
push
call
jmp
push
push
imul
shrb
fisubs
push
test
jbe
adc
lock
pop
xor
inc
cld
xchg
test
sbb
cmp
hlt
sub
sub
cmp
jle
shrl
sbb
fiaddl
in
mov
imul
jnp
push
jp
cli
xchg
popa
mov
adc
xlat
push
mov
les
xor
fisttpl
pusha
andb
sub
shl
movsl
dec
rcll
je
mov
movb
cmpsb
testl
jnp
sbb
loope
jo
roll
movsb
mov
sbb
dec
push
and
or
adc
mov
pushf
clc
mov
sub
cmpsb
sbb
outsl
dec
jbe
push
imul
repz
popf
fsubrs
add
and
pop
cld
adc
jmp
mov
sub
or
loop
sbb
inc
mov
test
mov
adc
hlt
push
sbb
mov
movsb
pushf
mov
cmp
xchg
jno
mov
out
lds
jp
adc
adc
pusha
mov
es
pop
lods
jg
pop
pop
movsl
jnp
aas
mov
imul
cli
mov
out
adc
dec
rolb
je
outsb
daa
pop
daa
xor
or
dec
addl
les
pop
lds
mov
sbb
or
dec
repz
jge
xor
fisttpll
ljmp
mov
cltd
scas
adc
cmp
fcmove
dec
mov
add
jg
xor
js
push
push
mov
sub
loopne
sbb
push
cld
outsl
mov
cli
fs
push
adc
and
imul
lcall
xor
shll
lahf
insl
mov
mov
mov
or
xchg
rcr
jmp
adc
jae
mov
mov
mov
loop
orb
cmpsb
mov
imul
ljmp
mov
pop
lods
arpl
mov
js
decb
sub
lock
addl
cmp
out
into
and
loop
or
dec
idivl
mov
dec
cmpsb
stos
mov
cltd
rorl
adc
gs
mov
das
xchg
div
icebp
push
cs
outsb
sbb
push
mov
sbb
adc
mov
jmp
in
lret
sahf
lods
sub
out
pop
xor
shrb
lahf
loop
xchg
test
mov
out
icebp
xchg
scas
ss
sbb
jns
mov
push
xchg
xor
into
hlt
jecxz
test
gs
lods
ljmp
ret
sbb
or
fcmove
lret
dec
iret
test
popf
mov
je
or
test
mov
jo
in
mov
sbb
dec
sbb
pop
aam
mov
imul
add
arpl
out
mov
inc
mov
sbb
popf
jns
push
pop
cmp
add
imul
pusha
addb
mov
jg
lahf
inc
mov
hlt
add
or
cs
push
or
adc
jmp
jecxz
add
add
or
push
add
push
cmp
push
fnstsw
xor
xchg
aad
ljmp
sbb
xchg
and
lds
out
sahf
daa
mov
xchg
push
mov
sti
icebp
pop
stos
icebp
adc
pop
mov
ret
adc
push
aam
adc
scas
imull
push
mov
cmp
cltd
cli
push
mov
mov
or
xchg
fabs
cmc
mov
out
sbb
sub
es
mov
mull
outsl
stc
pop
scas
xlat
lods
aas
loope
or
lret
add
pop
les
cld
mov
addb
xor
ret
ret
push
lods
cmp
fs
loope
cmp
pop
call
mov
mov
or
mov
arpl
adc
jg
mov
fcoms
sbb
mov
jl
cmp
fsubl
inc
inc
and
cmp
mov
pushl
sub
jns
push
stos
outsb
add
or
in
push
jo
ljmp
or
sbb
negb
ss
push
adcb
mov
and
add
jmp
mov
inc
inc
xchg
outsl
lods
fdivs
scas
enter
arpl
and
xchg
sbb
stc
push
lahf
add
clc
push
fprem
ljmp
aas
data16
and
sti
leave
andb
push
mov
mov
add
sahf
mov
in
lret
xor
xor
inc
and
pop
aad
cmpsb
pop
mov
fs
repz
scas
cmp
fisubrl
add
movsl
fstps
dec
xor
dec
notb
popf
mov
sbb
jae
inc
imul
cmp
fstpl
aaa
cltd
int3
sbb
jb
pop
in
iret
orl
xor
ret
mov
sub
pop
gs
out
xchg
pushf
fs
adc
jmp
sbb
and
and
pop
test
sub
call
repz
inc
xor
dec
add
jg
mov
mov
mov
add
push
lds
sub
adc
xchg
imul
mov
push
scas
mov
jl
and
cmp
xchg
mov
mov
inc
lahf
xchg
psllw
lret
sbb
mov
pushf
mov
push
aaa
xchg
cmpsb
add
mov
bound
mov
or
mov
movsl
dec
jg
adc
adc
mov
jg
mov
sub
push
cwtl
jecxz
mov
outsl
cld
gs
add
mov
adc
lret
add
inc
in
cwtl
and
cmp
add
repnz
ret
push
sub
andb
push
sti
jns
movb
out
xchg
mov
iret
mov
test
mov
lods
loope
out
in
push
mov
and
xchg
fbstp
divb
ds
mov
cmc
and
cmc
and
in
inc
xchg
imulb
sbb
lcall
in
in
xor
lea
out
cmp
or
imul
cmc
mov
jo
das
push
out
andl
push
push
es
adc
push
xchg
test
data16
pop
add
xor
outsl
add
xchg
sbb
jle
mov
push
imul
out
jae
cmpsb
push
fcompl
pop
fdivs
pop
push
iret
incb
add
pushf
xchg
xchg
mov
xchg
imul
scas
movsl
pop
in
xchg
leave
lcall
int
sar
pop
out
lahf
or
subl
xchg
or
inc
mov
push
or
xor
stos
jae
push
movsl
jg
flds
sbb
lods
push
xchg
mov
sbb
mov
add
leave
push
in
mov
stos
inc
sbb
jo
out
dec
lcall
push
fsubs
btcl
cli
pop
pop
dec
pop
je
sbbb
mov
xor
and
adc
inc
and
xchg
cmpsl
mov
cmp
cwtl
jo
idivl
add
outsl
leave
mov
jl
sbb
sub
sub
mov
pop
test
loopne
popa
cmp
adc
push
cmp
sbb
pop
cmpsb
push
hlt
jle
mov
pop
scas
ret
movsb
inc
in
mov
cmp
decl
and
cwtl
sub
mov
dec
add
imul
das
ljmpw
dec
repnz
ja
sahf
subb
dec
mov
imul
in
add
lret
in
test
outsl
and
lret
out
lahf
mov
jns
jle
dec
dec
stc
sti
sub
addr16
and
push
cmc
cmp
sar
push
cwtl
inc
xor
mov
mov
roll
shrb
xlat
cmpb
cmp
ljmp
fcmovbe
inc
or
out
cmpsl
out
jns
and
mov
mov
enter
sub
outsl
imul
mov
mov
lret
adcb
jno
int3
add
orl
jnp
imul
lret
push
xchg
das
out
lret
jecxz
ficompl
nop
inc
sbb
and
xorb
sbb
cltd
rcr
adc
ret
cmpsb
mov
xlat
mov
add
repnz
push
mov
pop
insb
add
jecxz
or
dec
dec
cmp
mov
xchg
pop
add
sub
jmp
int
js
mov
push
sahf
in
inc
push
jecxz
insb
sbb
lahf
pop
pop
cmp
mov
mov
inc
xor
adc
insl
cmpsl
pop
inc
inc
xchg
cmp
adc
pop
mov
inc
push
jo
pusha
cltd
adc
and
push
jge
les
imul
in
jnp
enter
ret
xlat
sub
mov
xor
fmulp
xor
xor
sbb
sbb
movsb
jne
inc
mov
push
mov
int3
mov
subl
enter
xchg
add
subl
int3
out
push
sub
mov
and
mov
jmp
cmp
jnp
mov
sbb
dec
mov
push
sbb
mov
pop
and
sti
or
pushf
xor
lret
jle
imull
add
adc
jge
ja
mov
mov
sbb
or
je
jnp
mov
lods
pop
push
cmp
sub
mov
pop
lds
cltd
sub
enter
mov
mov
test
dec
test
mov
loopne
or
mov
xchg
ret
inc
dec
loop
xor
adc
sub
pop
aad
ss
mov
jmp
sub
xor
cwtl
pop
test
out
lret
fists
das
xor
fwait
pop
dec
or
jbe
cltd
fldl
dec
imul
mov
lcall
loope
mov
cmpsb
std
jl
or
fstpt
mov
push
aam
adc
mov
stos
rol
and
hlt
sti
add
ljmp
cltd
lock
into
lret
xchg
mov
sub
insb
sti
mov
mov
push
add
push
jecxz
out
lock
push
fisubs
xchg
mov
and
mov
pushf
add
xor
fs
mov
inc
sub
aad
jle
roll
add
pop
es
jns
and
imull
ffree
and
or
mov
push
mov
mov
outsl
mov
dec
jnp
inc
ja
in
jl
dec
fnstenv
mov
int
cwtl
repnz
bound
mov
lret
jp
dec
mov
call
mov
xor
cli
pop
mov
pop
jnp
jg
jbe
xor
push
outsl
test
mov
lret
xchg
xchg
mov
mov
adc
pop
pop
xchg
lea
mov
ds
inc
adc
and
lret
fnstenv
add
cmp
push
pop
dec
ret
fstl
ja
xor
out
test
stos
sbb
adc
out
mov
and
testl
js
arpl
push
cld
cmpsl
testl
mov
pop
lret
adc
fisubrs
sbb
addr16
mov
ror
stos
jae
nop
mov
sub
stos
aas
mov
pop
mov
bound
push
dec
and
pop
cmpsl
icebp
mov
sbb
iret
insb
adc
pop
js
add
or
mov
sub
imul
test
xor
loope
icebp
data16
fadd
nop
adc
mov
cmc
pop
mov
popf
lods
ljmp
xchg
push
stc
and
incl
wbinvd
lods
aad
sub
mov
imul
jbe
jne
inc
push
adc
arpl
mov
mov
mov
ss
popf
push
out
push
dec
jmp
lods
push
push
cli
loop
fists
inc
jmp
cwtl
jmp
jns
aad
dec
push
fs
jns
mov
scas
fiadds
add
mov
mov
inc
mov
or
iret
xchg
ljmp
jnp
jns
das
je
push
xchg
pop
roll
daa
or
aam
mov
outsl
xor
leave
into
insl
dec
dec
adc
fists
dec
int3
lods
cmp
add
scas
aam
in
lods
idivl
xor
setbe
mov
inc
icebp
cmp
std
jmp
add
sahf
cmpsb
sbb
es
sbb
andl
sbb
int
fistpl
in
fdivrs
pusha
xchg
inc
xchg
pusha
xor
test
in
shlb
scas
into
xchg
pop
sbb
dec
aad
les
dec
loopne
jl
or
or
pusha
rcr
inc
pop
mov
jg
or
fisubrl
xor
mov
sub
push
mov
pop
jb
adc
xor
neg
dec
dec
fnstsw
and
fdivl
jp
dec
mov
add
jp
xchg
push
insl
test
and
mov
test
jp
mov
pushf
mov
outsl
lahf
adc
inc
and
lea
sbb
pop
enter
push
cmp
pop
lea
aas
push
popa
stos
jg
push
in
test
in
pushf
mov
sbb
sahf
xor
mov
loope
pop
les
lea
lods
xor
ss
loope
aaa
xor
lods
push
call
in
and
fs
imul
rorb
popf
mov
mov
adc
add
fldenv
lock
popf
push
jbe
repz
or
lret
sub
mov
insl
rcrb
jge
mov
jge
cs
xchg
mov
subb
jle
mov
jns
xor
push
push
out
jae
in
pop
pusha
pop
call
inc
imul
mov
out
cmp
faddp
adc
add
cmc
nop
add
jnp
rcrl
call
sbb
sti
mov
popa
mov
fs
clc
inc
cs
dec
xor
inc
jnp
xor
xlat
cmc
dec
sbb
pop
mov
in
jb
test
push
add
je
or
loope
sbb
out
aas
dec
pop
jns
mov
out
add
insb
sbb
popa
cltd
cmp
lods
fs
cld
aaa
mov
jecxz
and
cmp
lock
add
xchg
pop
test
adc
enter
mov
sti
fdivrl
and
aaa
shrd
inc
mov
cmp
pop
jbe
ret
insl
lds
mov
mov
xlat
and
leave
mov
rcrb
inc
sbb
aad
repz
sbb
pop
fst
push
cmc
sbb
lahf
aam
out
mov
sbb
push
movsb
inc
dec
enter
and
cmp
enter
sti
adc
sbb
dec
ljmp
stos
loop
mov
mov
int3
hlt
outsb
stos
mov
addb
out
int
imul
icebp
sarl
adc
push
push
bound
cwtl
push
or
stos
outsb
test
rcll
mov
mov
adc
in
mov
or
xchg
fmul
enter
test
push
and
fistpll
inc
pop
and
data16
fwait
mov
add
adc
sbb
lea
fdivrl
and
nop
loopne
arpl
ficoms
xchg
into
imul
in
pop
add
sahf
sbb
insb
xchg
push
pop
mov
and
das
aaa
hlt
push
adc
mov
movsb
ret
xor
xchg
sub
mov
pop
fisubl
out
xor
das
fwait
lcall
xchg
aam
insb
adc
hlt
movsl
call
test
pop
hlt
enter
mov
xor
mov
add
es
jmp
mov
fsubl
sub
xchg
imul
ljmp
nop
mov
stos
mov
push
lret
insl
dec
and
mov
or
xor
jno
bound
push
imul
mov
and
mov
cmpsb
cmp
fwait
ret
mov
in
push
in
cmp
adc
stos
adc
xchg
add
mov
dec
xor
repz
lahf
daa
sbb
or
mov
add
cmpsb
les
pop
sub
int3
idivl
sbb
mov
dec
fdivl
lahf
nop
sbb
and
repz
outsb
or
iret
mov
inc
pop
cmp
mov
mov
stos
xchg
adc
out
fldenv
add
aam
xchg
test
pushf
fildll
scas
lahf
xchg
cmp
and
inc
ja
into
cmp
mov
and
adc
sbbb
ss
inc
dec
pop
jo
cli
stos
inc
mov
scas
dec
xor
decl
push
in
shld
call
xchg
hlt
push
loopne
lcall
dec
and
pop
push
sbb
test
push
xor
sbb
pop
cmc
ret
mov
adc
lret
roll
mov
jnp
cmpsb
jbe
or
mov
aaa
jnp
lds
xchg
dec
or
inc
daa
mov
jae
pop
loopne
pop
aas
iret
mov
inc
into
xchg
jle
jae
leave
jo
xor
mov
hlt
pop
jno
scas
dec
push
movsb
and
shll
xor
push
mov
lds
jle
and
daa
int
mov
push
repnz
mov
testb
addl
sub
mov
push
mov
ret
pop
push
cmp
mov
jae
insb
sub
in
std
aas
or
push
testl
mov
sbb
cltd
jae
or
insb
outsb
fcoms
cmp
mov
fbstp
pop
ljmp
pop
inc
push
out
push
mov
dec
ja
adc
movsl
jb
ss
call
out
sub
cmp
outsb
test
lcall
jo
pusha
mov
clc
push
sub
loope
clc
shrl
cmp
push
push
mov
addl
xchg
mov
or
lcall
pop
push
adc
ret
xorb
bound
push
cmp
rorl
mov
mov
test
loopne
stc
je
mov
mov
inc
sbbb
and
lea
add
lea
pushf
pop
cmpsl
cltd
mov
inc
cmp
pop
fisttps
inc
sub
ret
mov
cmp
fnstsw
imul
loop
add
int3
cmovns
mov
aam
mov
adc
or
and
xchg
dec
icebp
aam
scas
mov
roll
jb
lret
xchg
push
cmp
and
mov
into
popf
fnstsw
jb
test
rorb
fs
sar
leave
stos
add
repnz
fdiv
xor
cmpsb
in
pushf
nop
xor
adc
out
repnz
out
push
jbe
jae
fldt
inc
sbb
push
pop
jp
dec
shl
sub
jmp
lahf
inc
ds
lods
movsb
mov
dec
fcomps
jg
jg
pop
in
xor
pop
jno
inc
ljmp
jg
fsubrs
xor
adc
pop
lock
and
xor
sub
pop
psubw
mov
daa
shrb
in
mov
lock
clc
sbb
mov
and
sub
clc
sub
pop
and
icebp
sbb
divl
push
aam
jle
repnz
repz
sbb
pop
inc
jbe
fistpl
mov
enter
daa
sbb
mov
mov
dec
sub
sub
repnz
out
pusha
pop
pop
mov
dec
pop
and
cmp
stos
mov
add
shrl
push
mov
dec
sub
push
mov
gs
ret
add
out
movsl
stos
push
xor
shl
cmpsb
sbb
lds
xor
pusha
dec
rorb
gs
mov
daa
inc
lds
cmp
xor
fadd
arpl
stos
or
inc
insl
dec
jnp
pop
loope
cwtl
pop
into
subl
insl
sbb
mov
push
movsb
pop
jae
sti
inc
dec
jns
inc
insl
std
jae
or
mov
and
cmp
mov
enter
movsl
adc
lret
testb
add
lcall
push
pop
mov
cmp
movsl
push
fucomi
sti
xor
jg
and
movsb
lahf
les
push
imul
data16
cmc
fsubs
ljmp
dec
test
adc
add
sub
mov
sbb
adc
popa
add
jne
std
jmp
out
repz
sub
leave
lock
jbe
icebp
sbb
mov
arpl
and
cld
cmp
dec
aam
fs
fbstp
pop
cmp
fstl
loopne
mov
je
pop
xor
mov
data16
push
scas
es
pop
mov
and
mov
out
jecxz
cmc
mov
out
cmp
xchg
mov
cmp
rcrb
shrb
out
xorb
push
mov
out
es
inc
push
incl
into
jnp
jecxz
and
xchg
dec
fisttpll
mov
imull
stos
js
sbb
xchg
adc
fmuls
sbb
imul
push
aas
int
cmp
inc
dec
sbb
cld
lea
mov
xor
clc
mov
adc
or
push
add
adc
icebp
or
jb
xchg
iret
pop
mov
cmpsl
cmp
push
out
les
out
shlb
jl
xor
nop
bound
sub
call
jl
daa
xchg
rcrl
jno
movsb
mov
mov
pop
outsb
dec
pop
sub
add
push
xchg
push
cmc
stc
dec
inc
cmp
out
out
loopne
cmpsl
idivl
xor
xchg
shlb
enter
enter
cmp
sbb
jnp
mov
inc
sbb
test
jl
push
adc
test
cmp
repnz
repz
and
push
mov
fldenv
push
jne
ret
dec
fs
dec
xchg
fcoms
test
ret
mov
push
jp
loopne
repnz
xor
jl
cmp
hlt
orb
pop
aaa
jge
cmpsl
pop
mov
xor
popf
xor
enter
jns
mov
add
push
pop
mov
push
adc
mov
shr
cmpb
xchg
sbb
inc
and
lret
xchg
mov
push
dec
dec
int3
mov
jmp
std
pusha
sbb
mov
imul
rcll
repnz
add
pop
ret
sub
icebp
push
repz
out
sahf
dec
mov
bound
sbb
mov
hlt
insb
test
and
leave
in
in
outsb
scas
pop
jl
inc
loope
test
mov
pop
cmc
xchg
lret
mov
mov
pushf
xor
push
jg
test
mov
gs
test
jbe
sub
inc
dec
or
icebp
invd
mov
lods
pop
and
jno
mov
pop
add
bound
xchg
iret
and
insl
fs
pop
mov
push
adc
movsb
jmp
xchg
jg
stc
loop
iret
cmp
sub
pop
int3
mov
dec
fstl
pop
fisubs
out
in
clc
sub
cmpsl
xor
push
jo
dec
push
xchg
mov
aam
jge
xchg
scas
popf
pusha
or
pop
bound
loopne
cmp
imul
xchg
mov
daa
call
rcll
std
sub
add
mov
cltd
xorb
mov
mov
cmp
mov
insl
push
bound
add
pusha
pop
sbb
daa
pop
pop
pop
xchg
mov
add
data16
or
roll
add
or
add
arpl
lret
mov
jle
or
sbb
xchg
sbb
pushf
bound
movsl
ret
dec
scas
cmc
mov
or
xchg
jg
mov
jecxz
jg
test
fistpl
adc
jnp
dec
mov
xor
pop
mov
call
cmc
popf
cwtl
sarl
rcr
in
xor
clc
adc
mov
cmp
sub
mov
mov
ja
popf
loope
lcall
and
jle
test
mov
cmp
mov
ss
push
shl
mov
das
loopne
jne
and
push
or
dec
inc
jle
jge
movsl
rcrb
mov
fdivrs
adc
push
movsl
stc
pop
fists
inc
mov
adc
outsb
and
mov
ja
mov
add
jmp
xchg
out
mov
mov
daa
sbb
cld
jo
adc
mov
fsub
cld
mov
sub
repz
jmp
popa
icebp
and
dec
stos
std
sub
rcrb
cwtl
xchg
jne
push
push
adc
mov
add
mov
xor
or
lcall
mov
out
stos
fs
dec
ja
test
popf
flds
outsl
push
adc
cmp
mov
stc
pop
jl
fsubl
iret
push
inc
sbb
mov
xchg
sub
xor
mov
pop
jle
sub
icebp
out
pushf
dec
cltd
int
roll
fistpl
mov
imul
xor
or
ret
in
dec
inc
or
cmp
aaa
add
cmp
dec
push
cmp
mov
out
mov
cwtl
pop
rcl
jnp
imul
ret
sbb
or
sbb
xchg
pop
add
lock
fiaddl
or
imul
enter
outsb
jmp
aas
jae
dec
dec
xchg
sbbl
mov
xlat
and
pop
aad
out
fst
xchg
inc
test
adc
sbb
div
pop
loope
push
jl
movsb
mov
mov
jnp
and
jle
sub
mov
popf
rol
popf
outsl
insb
mov
xchg
into
add
out
lods
jns
lods
cmpsl
pushf
mov
in
cmp
xchg
rclb
aad
test
ja
ja
sub
mov
andb
inc
mov
repnz
scas
dec
xchg
jne
outsl
imul
or
sahf
xor
pop
jmp
aam
stos
rorb
cwtl
cld
cmpsl
test
stos
mov
xchg
movsl
sbb
inc
adc
xlat
inc
insl
lods
addb
shll
data16
xchg
hlt
dec
mov
xor
dec
flds
inc
jb
pop
jl
gs
shlb
inc
data16
pop
insb
push
ret
cmp
and
adc
loopne
inc
push
jo
mov
sub
mov
sub
lcall
je
dec
rcr
dec
push
xor
or
pop
in
pop
bound
xchg
fs
pop
arpl
movsb
ljmp
or
jge
into
lds
xor
rorl
cltd
sbb
mul
ret
sbb
inc
int3
stos
or
shlb
popf
imul
in
xchg
mov
and
idivb
pop
mov
xor
and
scas
testb
push
xchg
adc
mov
repz
add
mov
push
add
loopne
xor
icebp
fs
bound
call
decl
push
or
leave
gs
movb
xchg
ljmp
dec
cld
push
and
mov
mov
insb
dec
jae
push
insl
push
push
not
jp
xor
outsl
sbb
insl
mov
mov
fwait
xlat
jb
push
stos
mov
sub
movsb
jmp
rolb
cmpsl
or
mov
fcoms
pushf
in
in
inc
sub
jmp
cwtl
popf
jecxz
cmpsl
cwtl
imul
or
into
repz
mov
in
sbb
mov
add
out
xchg
roll
jle
sub
pusha
xchg
mov
jge
pushl
aad
pusha
mulw
pop
pop
dec
insl
cmp
push
pop
mov
sbbb
js
mov
jns
loopne
jno
inc
out
jae
or
cld
mov
jae
pop
out
dec
cmp
jmp
add
inc
xlat
ljmp
outsl
pop
adc
adc
lret
and
fs
popa
mov
es
dec
inc
repnz
adc
mov
adc
sbb
or
pop
lret
mov
arpl
fidivrs
sbb
sbb
imulb
and
loop
popa
and
mov
mov
rol
cmp
jbe
lahf
jae
push
lret
lods
or
loop
inc
jns
pop
and
sub
mov
adc
pop
in
stc
xor
mov
sub
aad
jno
insb
bnd
mov
jne
loope
push
fiadds
jo
xor
ljmp
jbe
bound
stc
or
shll
stos
xor
push
stos
test
bound
and
imul
jno
xorl
je
lods
adc
sub
std
adc
sbb
mov
push
clc
or
in
push
les
or
loop
test
dec
lds
in
fisubs
pop
fdivrl
negb
ficompl
das
xchg
fcoms
call
jnp
xchg
xor
mov
out
stc
mov
inc
clc
pop
inc
cwtl
inc
inc
addl
ljmp
sbb
or
aad
enter
sub
jge
fsts
shrb
jbe
mov
mov
test
lcall
or
adc
xlat
push
inc
xchg
movsb
mov
cmpsb
cld
test
into
int
and
xchg
xchg
lahf
loopne
in
dec
xchg
sub
adc
inc
pop
jge
aaa
rorl
xchg
jg
test
loop
or
cli
call
ja
xor
jae
movsb
sub
fnstsw
mov
push
jmp
popf
xchg
inc
loopne
jle
sub
in
psubusb
cltd
mov
mov
insl
shlb
stos
cmp
clc
aam
push
and
cmp
test
pop
test
sbb
test
bound
shll
hlt
mov
cmp
rolb
shrl
test
adc
sbb
out
scas
pop
sar
js
push
xor
mov
scas
clc
cmp
shr
mov
test
and
push
imul
jg
fdivrs
push
pop
cmc
int
and
int
mov
cli
jmp
repnz
mov
lods
cmp
dec
push
push
fcmove
lret
loopne
arpl
stos
adc
pop
shlb
sbb
in
mov
sbb
cmp
push
jno
pop
mov
cmc
clc
int
shrl
mov
fnstcw
xlat
jae
jle
into
fsincos
aam
iret
adc
mov
lea
or
cvtpi2ps
std
arpl
and
leave
or
mov
jmp
or
cmp
or
int
mov
nop
and
or
pop
pop
imul
mov
inc
xchg
dec
ljmp
push
leave
jnp
inc
shl
ret
test
xchg
outsl
sbb
movsl
add
jl
testb
aad
scas
je
dec
and
cmpsb
adc
lods
fwait
mov
pop
les
fcmovnu
fmulp
cmp
cltd
cld
or
sub
iret
cltd
fbld
pop
fwait
jns
push
add
movsl
mov
xor
inc
jmp
pop
dec
sbb
outsb
mov
insl
and
xchg
mov
in
ljmp
clc
mov
xchg
jp
rcll
aad
mov
pop
gs
je
fdivrs
xor
mov
jnp
sub
xorl
cltd
push
in
insb
test
mov
inc
popa
mov
ret
loop
cmpsb
fisttpl
fcomps
mov
nopl
dec
inc
std
jne
cmp
mov
lock
push
movsb
repnz
xchg
jmp
and
push
inc
sub
test
sbb
fidivl
repnz
or
adc
incl
xchg
lds
dec
dec
test
inc
sub
sub
mov
in
sub
scas
aam
inc
xor
lret
or
fistps
inc
mov
das
and
add
xlat
mov
sbb
jns
dec
mov
shll
mov
jecxz
push
jp
stos
jns
or
jge
sbb
xchg
ljmp
or
mov
mov
cmp
popf
sti
lods
inc
adc
mov
mov
xor
dec
xor
cmpsl
ret
jnp,pn
adc
inc
pop
and
ficoms
mov
mov
xor
faddp
out
imul
add
push
inc
xor
or
cld
and
lahf
mov
cmp
cmpsl
call
das
xchg
and
dec
xchg
inc
mov
mov
sbb
cltd
outsb
push
subb
push
mov
lods
jb
popf
addr16
stos
andl
mov
adc
imul
dec
cs
jnp
mov
imul
rclb
test
imul
dec
mov
mov
mov
pop
mov
dec
repnz
xchg
ret
jno
stc
xor
enter
mov
call
in
xchg
mov
mov
mov
adc
lret
dec
push
cmp
clc
fisttps
push
mov
hlt
mov
test
stos
xor
aaa
cmpsb
loope
jl
mov
xchg
xlat
mov
xchg
aam
je
or
mov
dec
icebp
sbbl
ret
jle
xor
stos
stc
fucomp
jle
pop
pop
fists
in
pushf
adc
repz
sub
popl
mov
iret
dec
add
arpl
jo
lds
inc
sub
stos
pop
pop
pop
mov
fisubs
enter
daa
or
movsl
ljmp
test
ja
mov
fsts
shlb
test
dec
pop
int3
sbb
leave
fnstenv
mov
sub
adc
push
dec
cli
mov
addr16
call
popf
je
loope
pop
es
sbb
test
mov
aam
shll
into
pusha
sbb
xchg
adc
nop
dec
repz
xor
inc
jbe
sbb
jl
das
insb
ds
cmpsl
mov
int3
loope
pop
mov
mov
shr
stos
stos
adc
cmp
mov
ljmp
push
cmp
inc
out
sub
std
or
leave
lds
push
repnz
cmp
ret
stos
inc
mov
movsl
std
je
push
rcrl
mov
aad
jl
loop
stos
ja
fdivrs
mov
inc
mov
call
bound
mov
je
pop
cmp
xchg
test
pop
add
cmp
pop
xchg
fwait
mov
mov
cltd
jo
jge
mov
rclb
sti
out
mov
or
dec
insb
test
leave
sub
jp
fsts
es
mov
adc
inc
pop
js
and
lcall
mov
lock
popa
orb
jecxz
pop
inc
cmp
test
int3
out
inc
pop
push
or
xchg
enter
ss
xor
repnz
push
incl
cmpb
nop
mov
push
mov
insb
repnz
leave
sub
sub
je
loop
sbb
mov
cmc
enter
mov
xchg
insb
mov
loopne
pop
ss
lea
lret
mov
scas
sub
push
push
aam
fidivrl
jo
dec
push
in
xor
sbb
fsts
sub
int
stc
lock
ror
xchg
cwtl
pop
add
lret
scas
fisubl
xchg
mov
or
enter
dec
xchg
cmp
add
push
sbb
push
sub
dec
sub
aas
jnp
in
pop
xrelease
dec
adc
mov
ret
leave
mov
mov
xor
dec
or
cmc
pop
lret
sbb
mov
in
add
lea
out
mov
or
sub
pop
inc
jb
dec
push
iret
dec
into
xchg
out
xor
jp
shrl
jmp
push
mov
iret
gs
movsl
mov
push
stc
fsubs
cmc
fisubrs
ret
in
xchg
xchg
adc
pop
ja
aad
dec
das
popf
inc
xorb
hlt
and
int3
cli
and
dec
sub
cmp
rcrl
aam
and
scas
cmc
mov
jg
cmp
ret
mov
mov
in
cmpsl
int
adcl
js
and
js
aad
test
andl
pop
lahf
add
test
push
xor
mov
push
inc
pop
sahf
fstps
test
mov
inc
lret
lds
and
push
mov
inc
addr16
mov
adc
test
add
sbb
ret
xor
mov
inc
inc
xor
jl
clc
push
mov
pop
cmp
je
or
cmp
aaa
movsb
fiadds
dec
mov
repnz
dec
or
fwait
pop
lods
ret
xchg
dec
xor
out
xchg
xchg
stos
push
lret
or
lret
icebp
test
aas
outsb
fstpl
pushf
mov
mov
mov
xor
sbb
aad
enter
fwait
dec
mov
in
dec
sbb
lock
cwtl
ljmp
xorb
cwtl
adc
pop
or
cli
cwtl
push
std
push
or
frstor
in
out
aaa
in
imul
fnstsw
push
push
adc
scas
inc
out
mov
int3
add
dec
add
and
cmp
sbb
lds
inc
in
push
sub
sbb
call
push
xor
outsl
sbb
repnz
arpl
push
cltd
sarb
add
mov
pop
mov
movsb
decl
xor
loope
dec
loop
cwtl
pop
pop
push
cs
aas
push
imulb
adc
xchg
rolb
xor
lahf
insl
mov
pop
test
inc
jo
fstl
rcr
push
pop
mov
xor
xor
or
add
ss
bound
sbb
cld
push
dec
xchg
and
cmp
test
lods
adc
loopne
int
mov
in
dec
or
cwtl
jns
pop
pushf
loopne
insl
sar
bound
out
mov
jae
or
mov
dec
jge
loope
add
in
mov
sub
icebp
outsb
jmp
or
xchg
je
bts
jb
xchg
mov
or
mov
aas
imul
repz
cmp
add
movsl
ss
sbb
paddusb
pop
pop
or
ja
sbb
inc
xor
out
clc
out
or
std
daa
jp
xor
cmp
movsl
sub
mov
push
xchg
iret
cmc
mov
adc
jecxz
jmp
xchg
jle
mov
shll
adc
inc
dec
pop
sbb
and
xchg
lds
xchg
and
inc
mov
mov
sahf
adc
js
mov
stos
dec
mov
dec
sbb
hlt
iret
into
mov
pop
mov
mov
cmp
or
shll
inc
in
pop
out
cld
and
mov
jecxz
loop
into
aam
sub
fucom
xor
add
outsl
and
adc
lret
cwtl
and
in
add
sub
pop
jmp
mov
mov
into
repnz
cmp
fucomp
rorb
out
sub
aas
add
or
xor
mov
dec
sbb
push
xchg
xlat
cmp
ljmp
das
or
mov
cli
das
cmp
xchg
push
mov
push
pusha
adc
xchg
xchg
loope
in
pop
jecxz
lods
mov
fistps
bswap
mov
and
mov
pop
jg
fs
out
inc
imul
and
mov
mov
xchg
push
or
fstpt
rcrl
push
jae
mov
fsubs
scas
cs
insb
out
aad
dec
pop
cmp
push
xor
mov
and
mov
pushf
inc
test
adc
mov
lret
pop
and
or
imul
cmp
fwait
xchg
pop
inc
add
iret
jge
or
test
inc
sub
std
pop
stos
in
xchg
jle
imul
into
sbb
int3
jnp
movsl
dec
xor
or
or
xor
loope
add
ret
hlt
bound
fs
fildll
xor
cmp
and
xchg
lahf
jbe
push
not
jg
aaa
in
xlat
mov
mov
jp
pop
lcall
outsb
test
sahf
adc
xor
mov
rcrb
iret
pop
ret
fs
add
stos
add
mov
push
pop
adc
jecxz,pn
sub
cmp
or
add
sbb
cli
fdivp
inc
mov
dec
adc
xlat
xchg
fstpt
pusha
es
jo
out
fcoml
cs
test
fcmovbe
pop
sar
lahf
push
jge
iret
clc
call
mov
fistpl
mov
mov
jmp
cmp
inc
mov
push
dec
repnz
push
leave
lret
pusha
cmpsb
imul
int3
xchg
or
xor
xchg
push
pop
xchg
inc
push
cmp
sub
xchg
outsb
mov
sub
adc
mov
inc
je
in
cmpsb
and
gs
inc
cmpsb
lds
cmp
in
lods
imul
adc
movsb
mov
fcoms
xchg
mov
aad
je
and
in
jbe
cmp
les
testb
inc
sub
or
add
cld
das
xchg
xchg
hlt
add
pop
in
jp
sub
repz
cmp
push
nop
out
lods
ret
xchg
and
mov
xchg
jb
and
pop
dec
fiadds
sub
xchg
dec
je
subl
and
inc
jl
pop
lods
dec
mov
cmp
dec
and
push
call
push
add
pop
xor
call
jecxz
movsl
mov
dec
lds
cmp
sub
and
arpl
daa
aam
mov
mov
leave
or
dec
push
cmc
icebp
sti
clc
mov
sbb
fistpl
inc
jge
add
jne
lds
adc
out
hlt
out
in
xlat
mov
push
nop
mov
mov
lds
aad
mov
sub
out
inc
cmpl
mov
insb
aaa
push
xlat
adc
rcrl
mov
hlt
dec
xchg
int
push
sbb
iret
in
in
jl
xlat
aas
and
cld
mov
sahf
mov
pop
pop
mov
mov
pushf
jne
lods
or
fimull
xchg
mov
lret
sarb
ficoml
xor
sub
imul
fisttpll
lea
jnp
push
sbb
cmp
int3
ret
xchg
jl
cli
xchg
mov
add
lds
lock
ret
mov
sub
mov
inc
dec
out
mov
jae
push
mov
xchg
adc
xchg
cs
sub
les
cmp
vdpps
jl
lcall
xorb
mov
inc
fs
ljmp
add
cld
jmp
add
loopew
sub
dec
aad
and
sti
mov
repnz
add
shlb
or
lds
mov
ficoms
mov
addl
test
jecxz
jnp
std
lods
sbb
rcll
in
sub
leave
imul
aaa
dec
movsb
rcll
jnp
adc
bound
xchg
and
lea
push
push
lea
push
sub
dec
insb
test
leave
sahf
adc
fs
sub
push
mov
aas
outsb
inc
repz
inc
loop
scas
sbb
inc
das
jp
mov
xchg
cmpb
stos
mov
sbb
arpl
push
xlat
mov
and
xlat
pop
fcmovnb
xlat
or
insl
mov
push
sub
shl
add
mov
push
cmp
adc
jge
mov
mov
sarl
out
and
jno
push
lea
ret
sub
sti
sub
test
xchg
cld
ret
jne
cmp
cli
mov
adc
mov
pusha
mov
fisubrl
divb
sbbb
mov
fdiv
into
ljmp
push
mov
fdivl
mov
jl
inc
enter
mov
popf
inc
jg
mov
rcll
or
push
repnz
scas
and
xorl
out
movsl
and
mov
mov
jecxz
ficompl
adc
mov
push
jbe
movsl
mov
push
xchg
cmp
and
pop
pushf
xchg
pop
stos
in
mov
cmp
lock
mov
pop
lock
and
fdivr
in
inc
fcomp
inc
pop
in
cmp
jl
lret
shr
dec
push
inc
cs
adc
std
add
dec
jb
mov
int3
popl
daa
sbb
nop
lea
jl
and
lock
out
sub
adc
jb
xchg
call
mov
popl
frstor
cltd
cmc
sbb
cmp
mov
mov
inc
cli
mov
popf
outsb
push
mov
and
xchg
mov
cmp
push
int
outsl
int
xlat
imul
mov
jae
lret
add
dec
aad
add
xchg
repz
or
int3
fs
xor
mov
dec
mov
and
roll
sbb
mov
push
outsb
fsubr
jb
jg
mov
stc
inc
scas
nop
cmp
out
pop
in
and
xchg
stc
jg
push
js
loopne
aaa
and
hlt
or
mov
outsl
loopne
add
aaa
dec
addb
dec
push
fsubs
addb
stos
adcb
ret
inc
mov
in
stos
lea
dec
inc
das
into
roll
add
push
fnsetpm(287
jbe
sub
sahf
shll
test
mov
adc
int3
cmp
jle
dec
sarb
js
dec
mull
in
dec
pop
cmpsb
sti
stc
stos
pop
ljmp
stc
mov
mov
mov
sbb
and
movsl
lret
outsl
dec
iret
xchg
xchg
movsl
aam
dec
ret
mov
mov
mov
pop
mov
es
add
pop
rcl
stos
mov
cmp
sbbb
repz
mov
adc
pop
cli
dec
jae
mov
hlt
lea
mov
popa
aas
mov
faddl
jg
add
inc
mov
push
mov
and
xchg
and
xorb
scas
sbb
sahf
loop
das
or
xlat
int3
loopne
push
movsl
bound
fs
insb
inc
int
dec
dec
ja
and
cmpsb
stc
cmc
pop
ds
cmpb
jns
add
out
pushf
push
dec
rorl
fists
and
mov
dec
dec
adc
dec
out
test
push
aam
out
inc
rcrl
fnsave
and
cltd
mov
aad
js
mov
icebp
rcrl
inc
aas
sbb
pushf
sti
sbb
mov
xlat
cmpsb
movsl
mov
xchg
lahf
push
push
adc
and
ret
ror
mov
mov
scas
pop
data16
lods
sahf
mov
add
cmp
sub
lods
pusha
ss
pop
call
rep
arpl
loopne
xchg
je
sub
idiv
movsb
mov
mov
or
push
mov
inc
sti
pop
cmpsb
and
call
and
jno
xor
mov
and
rcrb
adc
in
adc
cs
jmp
out
leave
sub
push
jp
loopne
cmp
sub
jg
das
enter
jo
xchg
jle
fwait
or
mov
cvttps2pi
xor
xor
outsl
jnp
and
mov
sahf
mov
xchg
leave
adc
stos
icebp
push
bound
insl
aaa
cltd
rcl
in
paddusw
dec
popa
dec
nop
pop
dec
push
sbb
mov
sbbb
jp
movsb
xchg
add
imul
aam
or
add
rcrl
jnp
xor
add
testb
sbb
testl
xlat
inc
loop
pop
loop
popf
imul
out
mov
testl
sub
pop
xchg
scas
in
mov
lds
fistps
sahf
fwait
cmp
jmp
imul
hlt
push
mov
xor
inc
outsb
dec
das
jnp
adc
mov
push
dec
push
pop
or
cmp
jl
push
lahf
int3
adc
addr16
ret
in
and
mov
and
ret
and
xchg
sbb
and
jo
pop
cwtl
int3
out
in
mov
cmp
jp
out
cli
adc
sub
pop
addl
xchg
pushf
or
cmpsl
dec
cmp
mov
pusha
stos
dec
div
lock
mov
push
jae
mov
sub
mov
test
stos
pop
xor
repnz
cwtl
cmp
addr16
imul
adc
dec
jo
outsl
push
jl
gs
psllw
xor
mov
mov
pop
inc
cmpsl
data16
or
push
mov
mov
fucomi
enter
sub
je
add
lods
out
lahf
ret
fdivr
and
cmp
xchg
mov
mov
sub
test
aad
popa
lahf
cli
into
jp
add
icebp
test
sub
push
or
jbe
dec
cwtl
sub
and
out
ds
loop
mov
mov
mov
stos
adc
mov
mov
imul
std
push
adc
sbb
pop
call
inc
ds
inc
test
fisubs
mov
mov
scas
leave
insb
cmp
adc
jns
jg
jp
repnz
cmc
fwait
popf
std
push
jnp
pop
mov
dec
xchg
mov
mov
add
inc
loope
xor
jle
loope
aad
push
aas
imul
and
add
lahf
pop
add
push
sti
fisubl
push
outsb
jne
addl
dec
jl
xor
lret
enter
jg
test
fimuls
f2xm1
push
popaw
insb
daa
lcall
sub
and
cli
arpl
mov
pop
mov
add
push
mov
inc
negb
sbb
divb
pushf
add
in
or
xchg
xchg
repz
sbb
cmp
out
push
sar
imul
cmp
sub
fs
es
lock
sahf
imul
push
sbbb
hlt
pop
lds
mov
ds
cmpsl
jnp
roll
int
mov
jae
jp
pop
and
jo
or
sarl
pusha
dec
sub
popa
jmp
inc
inc
arpl
push
sti
cmp
lret
popf
dec
sbbb
int3
xchg
jg
movsb
fdivp
ds
fs
shlb
aad
testb
jge
cli
or
fidivs
adc
push
jg
cmpsl
jle
bts
ss
pushw
jg
ret
sti
pop
aam
dec
scas
les
jge
sahf
je
insb
jge
out
xor
push
fisttpll
push
xor
sub
clc
loop
clc
lock
or
pop
int3
xlat
xor
dec
out
mov
and
mov
mov
dec
mov
push
out
rorb
cs
mov
cli
xor
in
das
cmpsl
clc
jl
sbb
fstpt
dec
jae
scas
add
push
mov
ja
arpl
int3
ficomps
xchg
int
push
fucomip
sbb
jbe
xchg
sbb
add
out
aam
scas
rcrb
fistpll
ss
roll
add
pop
push
sub
mov
adcl
pop
xor
jge
loopne
test
repnz
jnp
int
push
arpl
jno
jno
int
xchg
push
sbb
in
jp
jae
push
lea
jp
outsl
adc
add
ss
pop
arpl
pop
mov
shll
push
pusha
cld
addr16
jmp
aaa
mov
xchg
hlt
mov
push
sbb
and
pop
popf
sbb
sub
adc
push
push
xchg
das
xchg
mov
mov
test
clc
xchg
dec
jns
bswap
dec
daa
xor
mov
ds
mov
push
cmp
lods
and
mov
ss
aaa
stc
mov
or
mov
cmp
inc
negb
inc
aad
add
aad
iret
scas
pop
mov
fnstcw
cld
in
addr16
xchg
test
adc
adc
cmpb
fdivr
inc
rorl
ror
sub
lods
imul
data16
xor
jg
scas
xchg
bound
pop
sarl
sarl
inc
mov
bswap
ljmp
adc
jbe
jl
mov
mov
popf
fdivr
fwait
cmp
jne
fnstsw
xorb
in
inc
jno
mov
and
stc
aam
mov
xorb
jnp
xchg
mov
sub
fidivs
mov
ffree
push
mov
pop
cld
pusha
sarl
mov
gs
stc
push
jo
rorl
andb
push
pop
xor
inc
xchg
inc
push
inc
movb
jl
loope
adc
sarb
lods
xor
rcll
pop
arpl
dec
mov
mov
pop
mov
and
daa
imul
dec
xor
xchg
lds
fisubl
mov
jno
stos
ss
js
ret
decl
mov
jbe
movl
dec
or
mov
ss
lahf
repnz
cs
cmc
hlt
lret
sub
in
orb
sahf
jmp
loopne
fs
xchg
sub
push
shrb
stc
add
push
in
rclb
inc
dec
in
nop
pop
in
loopne
rcrl
insb
or
loop
adc
adc
mov
stos
sbb
sub
outsb
outsb
mov
cltd
lret
lcall
and
pop
mov
push
push
or
mov
enter
mov
mov
push
cmpsb
sub
sbb
ret
inc
lret
pop
pop
testl
imul
leave
clc
lods
sbb
pop
sub
push
xchg
popa
popa
mov
cmp
int
jge
sbb
insl
mov
ljmp
stos
jmp
inc
cmpsl
sbb
mov
sub
in
int
pop
inc
pop
push
stos
js
fs
push
scas
jbe
sub
mov
inc
clc
push
adc
cltd
jbe
mov
adc
mov
inc
repz
shr
dec
dec
popa
pusha
push
cmp
xlat
add
mov
mov
mov
add
and
fs
mov
or
xor
cmpsb
es
mul
jecxz,pt
dec
mov
xchg
or
cmp
jl
insl
test
adc
loopne
lock
lret
mov
lock
push
mov
and
in
xchg
dec
jno
lea
in
jbe
adc
cltd
test
sbb
out
movsb
iret
mov
mov
push
or
sti
inc
cwtl
xlat
jp
int3
mov
or
push
lods
js
notb
fwait
jg
arpl
mov
push
inc
test
test
xchg
andl
loope
pop
cmpsb
ror
cmpsb
push
es
add
and
cltd
fstpt
les
movsl
push
sub
xchg
adc
shll
ljmp
fstpl
aaa
mov
mov
rcrb
sub
lahf
pop
bound
or
sub
jbe
xchg
pop
loop,pt
jb
ret
nop
mov
lret
sub
sub
pop
lahf
lea
sub
sbb
insb
dec
icebp
push
dec
pop
cs
mov
pop
fs
cmp
rorb
or
mov
insl
imul
inc
jne
ja
leave
fisubrl
cld
outsb
rcrb
stos
mov
adcb
out
ds
mov
jle
or
jne
clc
cwtl
sbbb
pop
inc
stos
test
or
dec
insb
aad
sub
test
add
lds
loop
jae
cli
sbb
push
iret
dec
test
outsb
dec
cmpb
mov
outsb
and
ficomps
fstl
mov
insl
ret
dec
popf
pop
pop
pop
xor
mov
xor
cwtl
loopne
daa
out
xchg
cld
xor
lea
cltd
data16
cltd
sub
jmp
insl
add
scas
sub
data16
push
pusha
cmp
and
mov
inc
jns
scas
pop
fdivrl
pushf
lea
xchg
xor
add
inc
push
data16
and
sub
lea
inc
andb
inc
cld
scas
call
sbb
aad
sub
mov
in
mov
mov
xor
push
mov
push
sub
jo
push
xchg
dec
fldcw
inc
push
and
mov
lods
out
pop
pop
mov
rcll
or
pop
adcb
js
stos
or
fisttpl
aam
imul
xchg
das
add
inc
repnz
scas
and
cld
ror
inc
sub
pop
inc
push
les
lods
clc
call
pusha
jae
inc
pop
and
in
in
and
sbb
iret
mov
lods
push
xor
add
sub
xlat
push
loope
sarb
daa
cmp
sub
in
adc
stos
cltd
lock
or
testl
push
fiadds
cld
sbb
andb
inc
popa
mull
xchg
mov
mov
pop
pop
push
les
mov
or
jecxz
sub
daa
cmpsl
inc
xchg
xor
xor
out
sbb
inc
rcrl
inc
mov
jb
jle
push
and
ljmp
ss
and
lea
sbb
cmp
inc
popf
fidivrl
shr
push
data16
inc
add
aas
clc
push
add
rorl
and
out
mov
push
pop
out
test
mul
shr
stos
cmp
je
rcll
adc
jb
movsb
popf
sbb
xchg
pusha
xor
sub
loop
cmp
jl
add
mov
pushf
nop
dec
test
shlb
mov
test
cmc
loope
pop
sti
mov
fs
xchg
ja
ds
and
jmp
xchg
xor
push
adc
fstl
cmp
lret
scas
pushf
mov
out
imul
mov
xor
or
sub
mov
arpl
es
fildll
icebp
lahf
jle
sub
mov
pop
nop
cmp
jmp
push
mov
and
sbb
and
les
pop
jmp
arpl
mov
mov
call
fnsave
call
loop
icebp
push
cs
adc
add
adc
jno
push
packssdw
and
testl
xchg
sbb
fldenv
cli
cmp
push
iret
sti
push
cld
rcl
out
mov
inc
in
xor
in
ljmp
ficompl
xchg
fmull
pop
out
sbbb
fidivrl
xor
jg
gs
or
jne
xor
cmp
out
test
insb
xchg
and
mov
stos
sarl
aad
ds
inc
push
ret
ds
mov
fstl
ss
inc
mov
shl
pop
cmp
sbb
aam
dec
orb
xlat
xor
pop
es
in
in
rclb
sub
inc
popa
dec
and
je
xchg
pop
iret
add
imul
imulb
movl
add
push
mov
xor
and
xchg
imul
or
loope
push
push
adc
jmp
dec
es
cld
mov
in
ja
es
add
dec
ljmp
push
clc
lods
fdivl
xchg
mov
nop
in
pushf
push
and
dec
dec
ja
scas
mov
out
cmpsb
mov
enter
xor
adc
mov
sub
mov
mov
repnz
popf
mov
icebp
dec
sbb
dec
and
sbb
arpl
popa
icebp
mov
push
scas
push
lods
and
aas
push
jmp
repnz
jbe
jmp
int3
les
mov
dec
mov
shll
dec
in
insl
in
lret
xchg
fisttpll
orb
rclb
xlat
xchg
loop
or
out
leave
iret
lock
icebp
jg
push
outsb
lret
cld
mov
imul
aad
sbb
les
cmp
and
push
push
ret
push
pop
insl
xchg
pop
loopne
rolb
xor
push
rolb
add
cmp
seto
mov
mov
sbb
imul
push
mov
xor
iret
aaa
jp
lcallw
out
imul
ret
leave
stos
push
sbb
loope
xor
jle
inc
push
ja
fistpll
xchg
out
add
sbb
and
jno
in
sbb
js
and
push
aas
pushf
into
push
pop
jp
addr16
sub
jl
add
sbb
imulb
dec
add
or
cs
or
jg
pop
mov
add
or
dec
dec
mov
jecxz
shlb
push
fisubl
push
mov
xchg
xchg
rcrb
pop
out
fs
aad
add
push
fs
mov
out
cmpsl
and
sbb
cmp
arpl
cs
inc
int3
inc
imul
inc
jecxz
pop
adc
loopne
fcmove
cmp
sbb
sub
ficoms
int
cwtl
in
ja
or
nop
adc
mov
sti
sbb
lods
js
add
xchg
sbb
mov
addr16
fisubrs
mov
and
or
in
adc
jo
xchg
loopne
or
push
adc
out
das
addr16
cmpsl
sahf
add
push
add
aas
sbb
xor
cmp
xor
pop
into
insb
and
enter
jp
add
dec
mov
pop
out
xor
pop
lret
mov
aas
xor
sub
dec
loopne
add
std
jmp
cmp
clc
stos
into
xorl
fisubrs
jmp
and
and
adc
ss
sarb
cmc
clc
pop
sbb
aam
into
jecxz
cmp
jmp
dec
xchg
and
jns
loopne
ret
add
in
add
xchg
xchg
mov
or
imul
adc
jns
xor
inc
inc
mov
sub
push
jns
cmp
xlat
push
mov
imul
mov
push
loop
xchg
dec
test
sbb
push
es
ffreep
sub
mov
inc
cmp
lcall
xchg
cmp
mov
fnstsw
xchg
mov
test
xor
mov
movsb
adc
in
inc
js
js
pusha
pop
and
pop
add
add
mov
cld
add
and
jg
fistl
xlat
lea
ret
enter
inc
push
outsl
roll
lret
ss
cmp
movsb
movsb
fwait
loope
add
inc
mov
jle
gs
das
loopne
push
ret
test
es
pop
mov
lcall
loopne
shr
sti
xchg
add
cmp
and
xchg
cs
aad
test
push
aad
mov
xor
mov
arpl
pusha
xchg
stc
into
adc
xchg
inc
dec
push
push
pop
mov
stc
bound
mov
sbb
movb
clc
not
push
inc
or
sub
sub
nop
xor
xchg
push
daa
add
cwtl
out
mov
pop
push
pop
jns
push
cmp
cs
pushw
mov
pushf
aaa
popf
inc
in
xor
popw
pop
push
and
in
stos
fwait
loopne
mov
shl
pop
and
ret
mov
ret
inc
or
fldcw
add
pop
setle
loop
sub
pop
mov
jne
es
xchg
lret
jle
pushf
enter
lods
fidivrs
cmp
adc
mov
fisubrl
out
sub
or
movsb
test
ret
pop
jl
mov
pop
repnz
dec
jmp
mov
mov
out
sbb
cmp
stc
sub
fsubrl
push
fs
mov
aad
dec
jae
xchg
inc
out
and
scas
mov
stos
sbb
jb
test
out
daa
orb
test
push
lcall
push
mov
cmp
in
cwtl
mov
in
in
orl
push
mov
rcl
adcl
inc
or
and
sti
xchg
inc
pop
out
sub
addr16
add
shl
out
nop
data16
out
out
addr16
xor
xor
sbb
xchg
sub
dec
sar
les
repz
andb
lock
hlt
pop
add
rcrb
cld
jecxz
loopne
or
int
adc
insb
insl
and
bound
mov
rol
movsb
call
iret
adc
and
xlat
cmp
aam
jp
int3
push
pushf
lds
insl
ljmp
mov
jno
jg
xor
pop
xchg
jl
push
fbstp
movsb
lahf
rorb
js
inc
sbb
fimull
or
adcl
adc
inc
imul
rclb
leave
rorb
push
subl
jmp
xchg
jae
rclb
jmp
loope
pop
sbb
xchg
lret
mov
mov
pop
mov
mov
nop
and
shrb
cmpb
pop
lods
add
adc
lahf
push
cmpsb
out
pop
das
subb
push
sub
cmp
repnz
gs
xchg
jmp
repz
pop
fsubs
dec
outsb
or
mov
inc
subl
pop
pushf
jl
insl
sbb
or
insb
ljmp
ljmp
xor
rcrb
lret
pop
xchg
cmpsb
mov
insl
jns
jg
dec
sti
popa
cmc
es
ret
xchg
or
fldenv
inc
or
out
pusha
push
rcr
mov
das
movsl
sarb
ja
push
stc
in
xchg
in
mov
data16
out
xchg
je
std
aam
movl
add
inc
cli
ret
or
mov
aas
inc
jnp
cltd
add
int3
cmp
jmp
mov
add
and
lds
cwtl
lods
shrb
loop
pop
cmpsb
sbb
push
xor
lds
hlt
or
pop
fiaddl
mov
sti
xor
roll
xchg
sub
test
cmp
mov
mov
aam
inc
or
jbe
xchg
lahf
adc
ss
frstor
nop
mov
jle
and
outsl
xchg
mov
adc
xor
hlt
push
jg
pusha
pop
inc
xchg
into
leave
insb
outsl
jo
repz
sbb
dec
jns
scas
sbb
push
ffree
test
xor
out
bound
cmp
sbb
shrb
and
enter
ds
mov
adcb
xor
mov
adc
xchg
cmp
push
out
cmp
mov
fwait
jg
in
lods
push
mov
jae
into
xchg
stos
movsl
pop
sub
adc
insb
stos
ss
imul
push
mov
lcall
pop
movsl
xor
int
lock
out
pop
outsb
int3
fldenv
scas
pop
ret
jle
ss
out
ret
dec
mov
shll
dec
adcb
dec
imul
loop
pop
insb
mov
jns
loop
dec
loopne
sahf
adc
push
test
lahf
jne
inc
jb
imul
mov
xchg
aam
mov
arpl
clc
jne
icebp
pop
mov
ret
movsb
lcall
inc
filds
fsubrl
sub
push
pushf
stos
xlat
fstpl
mov
ret
je
imul
add
call
test
movsl
shll
push
inc
dec
jp
sub
out
jmp
xchg
dec
mov
mul
push
jb
fidivl
inc
lcall
push
xor
test
sbb
dec
addl
pop
out
mov
xor
fdivr
mov
std
or
jno
js
je
xor
dec
sub
push
lret
stc
je
fwait
and
js
pop
jb
bound
lods
inc
mov
sbb
pop
and
xchg
test
adc
hlt
fisubrs
xchg
xor
dec
add
clc
in
pop
inc
icebp
pop
xchg
add
mov
pop
sub
cld
mov
ja
fidivrs
xor
mov
loopne
xchg
cmpsb
mov
xor
lea
fisttpll
cmp
int
adc
push
push
in
in
mov
or
outsb
stc
push
ss
pop
pop
jmp
sbb
sti
loopne
sbb
pop
lods
cmp
mov
lret
pop
mov
insl
shlb
shll
pop
add
mov
or
cwtl
dec
fidivrl
jbe
or
jns
and
out
mov
sub
mov
test
add
xor
pop
dec
mov
mov
in
sub
sarl
xchg
cmpsb
and
adc
mov
out
pop
fistpll
xor
push
fucomip
and
mov
mov
lock
rorl
inc
aad
mov
xor
xor
push
aad
es
insb
test
or
sbb
aad
mov
int3
dec
mov
aaa
test
fdivr
sahf
ret
push
scas
lea
xchg
cmp
test
fs
dec
add
ja
xchg
mov
outsl
mov
imul
pop
push
mov
divl
nop
mov
xchg
mov
js
sub
pop
jnp
iret
stos
aaa
cmp
pop
lret
fbstp
lods
inc
mov
and
cmc
mov
mov
divb
out
inc
dec
pushf
ret
sbb
int
pop
sbb
jo
jmp
mov
mov
vpmacsww
movsb
xchg
add
pushf
xchg
icebp
testl
test
enter
scas
test
rorb
call
cmp
mov
es
call
pop
xor
fucom
mov
xchg
fiadds
mov
or
lods
cli
and
push
pop
lds
cmp
test
xchg
cmp
scas
mov
bound
ss
sbb
pushf
lahf
int
movsb
push
stos
inc
xor
lock
and
mov
mov
push
int
mov
cwtl
hlt
sbbl
pop
jb
or
int
and
cli
cmp
add
xor
xchg
ret
mov
and
lret
push
ja
iret
mov
dec
call
adc
mov
mov
in
jge
jnp
ljmp
popa
add
dec
jecxz
pop
xchg
adc
insb
sub
inc
or
pop
mov
outsl
and
jns
faddl
scas
bound
jns
and
dec
fcomps
mov
xor
in
cld
jge
pop
out
push
xchg
shl
lods
pop
or
mov
jno
xor
dec
inc
add
mov
or
jbe
push
inc
cli
mov
loop
imul
and
mov
inc
out
movsl
lret
mov
lret
xchg
movsl
popa
std
into
push
unpckhps
int3
jae
push
jo
cmpsb
push
pop
inc
inc
push
and
xchg
xchg
mov
cmpsb
jmp
iret
push
nop
and
xchg
inc
aas
ja
outsl
gs
lea
cmpsl
jecxz
xor
jle
sub
add
adc
aaa
int
call
int3
xchg
sbb
dec
aad
cld
xchg
xor
or
inc
mov
les
mov
je
nop
cmp
jbe
pop
mov
dec
sub
ret
mov
pushf
adc
mov
jecxz
pop
aam
imul
ljmp
mov
adc
xchg
mov
pop
lock
iret
pop
sub
ret
push
loop
lcall
push
in
push
jmp
adcb
sbb
push
sahf
push
inc
mov
fimuls
jp
loope
sub
jecxz
cli
dec
inc
mov
jns
add
fbstp
xchg
inc
pop
xlat
lds
jno
push
pushf
aam
jge
jle
scas
pusha
aas
movsb
lock
xchg
inc
sbb
daa
sbb
ljmp
and
das
jb
lock
pop
in
mov
mov
jne
pop
in
mov
cmpsb
loopne
cli
push
test
in
cmp
out
and
cli
push
add
xchg
dec
adc
aam
hlt
jno
xor
push
mov
xchg
cltd
gs
addb
mov
mov
insl
pop
in
std
test
int
icebp
rep
shrl
xor
je
add
adc
pop
mov
dec
movsb
pop
ret
repz
out
xor
fs
xor
lea
aad
loope
jne
loop
mov
subl
lock
scas
mov
loope
es
adc
gs
inc
push
jmp
xchg
push
push
or
stos
popa
adc
sbb
xorl
jbe
jle
push
lea
inc
testl
jo
mov
sub
out
mov
loop
out
in
les
and
mov
mov
icebp
lahf
push
mov
xor
xchg
adc
int3
adc
pop
adc
loope
sub
jle
cs
ffreep
mov
pop
fwait
repz
adc
negl
mov
or
bound
stc
call
mov
cmc
lods
xorl
push
xor
adc
sti
ret
insb
mov
daa
add
lcall
jg
arpl
cltd
es
xchg
loop
dec
add
out
lock
push
sbb
icebp
in
inc
add
sbb
and
daa
cmpsb
cmp
pop
push
mov
mov
pop
test
stos
repnz
jbe
dec
jo
sub
insb
gs
mov
pop
mov
pusha
push
clc
scas
mov
add
xor
cmp
jbe
xchg
test
pop
data16
fwait
mov
rcl
call
or
adc
or
mov
icebp
cmp
mov
pusha
lret
rol
lahf
mov
and
fidivrs
xor
jp
pop
sub
roll
insl
pusha
push
incb
mov
jl
lods
loope
or
or
sbb
adc
xchg
mov
pop
ret
and
cmp
jo
xor
test
aaa
cmp
xor
mov
scas
scas
jp
adc
pop
loop
cmpsl
mov
cmp
sbb
das
or
fidivl
dec
sbb
push
cld
sub
mov
or
lods
inc
scas
mov
jecxz
xchg
mov
sti
inc
gs
into
in
adc
jmp
loop
push
fbstp
add
jo
and
or
fs
cmp
mov
push
sahf
mov
mov
jle
push
ss
pop
inc
cmp
xor
call
push
or
dec
mov
pop
fstl
rcll
sub
pop
fisttps
xor
lods
mov
stc
mov
addr16
sarl
pop
fisubrl
push
cmpsb
mov
pop
dec
ljmp
mov
mov
loopne
mov
pop
orl
fcompl
push
sub
lahf
rorb
fsubrp
lret
inc
pop
pop
ror
sbb
andl
adc
push
ja
push
call
or
fiadds
push
push
mov
out
aam
sahf
les
jle
jl
aam
sub
inc
xchg
and
sbb
inc
inc
iret
cmpsb
add
nop
push
gs
loope
mov
out
inc
adc
jno
mov
and
pop
std
fcoms
jo
cmpb
call
repnz
sub
aad
cmp
xlat
mov
push
xor
jne
xor
cmp
sbb
pop
cli
pop
hlt
hlt
xchg
nop
sub
stos
xchg
and
fidivrl
ljmp
mov
sub
mov
push
sub
xchg
sbb
jle
cli
pop
test
stos
mov
sarl
dec
mov
out
les
nop
aad
sbbb
out
fisttps
pop
push
jb
push
int3
scas
jg
push
cwtl
push
addr16
cli
pushf
in
mov
inc
pop
mov
shll
pop
pop
mov
and
psubsb
js
mov
xor
mov
and
adc
or
and
ds
mov
xlat
xor
popf
push
scas
adc
pop
push
dec
insl
cmp
inc
mov
mov
xor
scas
sub
xchg
inc
lret
jae
jne
and
outsb
xlat
adc
cmp
pop
mov
push
pop
push
das
pop
dec
push
add
into
xchg
lock
adc
add
int3
inc
pop
sahf
dec
mov
or
push
mov
pop
jmp
sti
fisttpl
stos
dec
fimuls
dec
and
stc
aas
lahf
loope
int
mov
adc
fwait
popf
arpl
adc
xor
outsb
jge
jno
xor
sub
sbb
rcl
cltd
mov
loopne
xor
and
or
gs
test
add
cmpsb
lock
sub
mov
loop
pop
popl
hlt
bound
pop
pop
push
and
xchg
outsb
fcompl
test
imul
fwait
test
lret
sbb
mov
push
fidivrl
xchg
clc
lock
mov
out
or
stos
mov
lret
sti
mov
pop
movsb
mov
push
or
subb
inc
push
xlat
pop
xchg
out
sbb
ljmp
dec
jle
xchg
xchg
mov
loope
sub
fwait
dec
ret
popf
jl
lods
cmp
sbb
fsts
cmp
movsb
pop
adc
stc
pop
ss
shll
jmp
inc
mov
push
xchg
stos
mov
jmp
shrl
jbe
insb
movsb
fnstenv
inc
daa
pop
jl
mov
ljmp
sbb
arpl
lods
pop
mov
pushf
test
jmp
insl
scas
ret
xor
pop
xchg
fwait
stos
rcll
sbb
jge
adc
scas
jecxz
test
clc
addr16
fstpt
add
pop
and
inc
test
cmc
enter
add
test
xor
popl
mov
jge
fwait
add
pop
je
repnz
jge
push
jmp
imul
or
ja
jmp
lcall
xchg
xchg
cmp
filds
out
fdiv
ja
inc
cmp
outsb
xor
push
leave
insb
fucomp
mov
pop
aad
shrb
mov
leave
mov
stc
cmp
mov
sub
xor
es
loope
mov
mov
arpl
clc
mov
xor
lock
sub
mov
jge
push
mov
or
xor
jmp
inc
movsl
sub
inc
jno
test
and
mov
adc
fnstsw
jo
jp
fsubs
dec
push
rclb
cltd
repnz
out
push
das
sti
jbe
push
imul
inc
sub
adc
push
push
sub
fidivrl
int
add
shll
mov
or
and
or
and
pop
mov
sahf
dec
test
dec
adc
sub
mov
push
jecxz
repnz
out
adc
inc
add
outsb
mov
mov
push
sbb
mov
ja
mov
rorl
lods
gs
ss
ret
sub
xor
mov
aaa
jne
stos
les
arpl
icebp
ret
mov
test
sahf
hlt
roll
xor
stc
daa
adcb
or
pop
fdivl
test
push
into
les
out
popf
xchg
and
stos
in
mull
call
scas
enter
xchg
into
pop
mov
adc
mov
sub
or
cld
popa
sbb
cmp
xor
or
nop
bound
xchg
mov
je
lret
ja
cli
movsl
pop
fcompl
and
fisttps
lret
mov
mov
xchg
push
and
faddl
lods
jno
ljmp
and
cltd
sti
rcrl
jno
int
and
jg
repz
lret
dec
push
insb
lcall
push
add
ds
lret
stc
mov
mov
in
inc
ljmp
scas
insb
repnz
outsb
push
xor
mov
or
call
daa
aam
mov
outsl
fnstsw
es
in
cmp
int
shrl
pop
insl
sbb
pop
jl
xlat
xorl
dec
dec
ljmp
push
jg
inc
fildll
cmp
out
mov
dec
jne
push
adc
imul
in
aam
imul
cmpsb
in
push
xor
and
lea
sub
mov
mov
dec
lret
scas
push
loop
mov
jb
loope
xchg
pop
out
lret
jle
leave
mov
test
popa
popf
popf
jno
adc
scas
and
jb
ds
scas
mov
and
addb
je
inc
jecxz
lds
or
es
hlt
mov
enter
int
dec
dec
sub
xchg
pop
jne
sub
fnstsw
stos
call
pop
jle
push
dec
push
outsl
loopne
mov
pop
pop
push
pusha
push
nop
adc
jl
push
jg
stos
fsts
and
mov
movsb
mov
lret
dec
xchg
cld
jmp
and
sub
cli
imul
lret
jg
jecxz
pop
ljmp
sti
fwait
dec
fisubs
push
in
daa
les
icebp
mov
fwait
mov
adc
insb
jl
xlat
pop
shrl
mov
xchg
mov
orb
xor
cmpsb
inc
sub
scas
jmp
pushf
outsl
lds
dec
pop
test
or
inc
ss
push
in
bound
mov
adc
push
pop
jb
in
jg
cwtl
pop
mov
sti
push
bound
adc
jge
mov
mov
fwait
pushf
mov
mov
inc
xchg
sub
and
ret
fs
dec
divb
dec
je
jno
xchg
pop
in
cld
cli
mov
cwtl
into
and
stc
cmpsl
daa
mov
xor
mov
mov
cmc
clc
dec
lret
insl
mov
jmp
outsb
xor
add
xchg
test
mov
in
pop
or
push
or
xor
xchg
pop
ljmp
mov
and
push
lea
arpl
iret
int3
ror
push
mov
push
and
sbb
fprem1
imul
sahf
int
ss
shlb
in
cmpsl
mov
stos
popa
push
mov
xchg
or
loop
fists
push
push
lret
push
xchg
sahf
clc
or
dec
inc
jno
je
or
inc
stos
das
mov
adc
pop
mov
xchg
jne
xor
mov
dec
cmp
fimuls
idivl
out
push
in
lret
ret
push
mov
or
inc
in
mov
jns
add
xchg
xor
je
dec
mov
test
lods
xorl
test
pop
mov
cmp
adc
mov
pop
add
popf
adc
cltd
mov
fildll
cmp
push
mov
jg
dec
les
jge
jns
arpl
push
call
mov
lods
mov
imul
lahf
adc
xchg
flds
cmp
dec
or
je
push
ret
mov
rorb
aas
rclb
addl
jmp
jmp
enter
mov
fistpll
and
push
xchg
aaa
mov
push
jns
clc
data16
cld
dec
pop
xchg
xchg
stc
or
int
jp
icebp
mov
push
movsb
cmc
jbe
push
lock
pinsrw
jo
xchg
xor
movsb
js
jo
or
mov
in
test
pop
test
es
cmc
sahf
sbb
lret
imul
dec
out
pop
pop
pop
or
dec
or
sub
jg
cmp
jge
adcl
cwtl
insl
cmp
ret
and
xlat
inc
cld
scas
scas
mov
adc
insb
dec
xchg
sub
sub
ficoml
jg,pt
cmp
lea
mov
adc
daa
and
cmc
mov
pusha
iret
or
cmp
add
cmp
adc
daa
pop
pushf
mov
xor
add
xor
push
stos
xlat
inc
jmp
xchg
pusha
xchg
inc
les
ljmp
repz
test
push
and
pusha
mov
out
movsl
cmp
jb
rorl
lcall
outsb
out
jmp
leave
js
loopne
xor
ja
fnsave
scas
adc
popa
fwait
sar
sbb
scas
gs
fisttps
mov
repz
les
aad
outsl
xor
adc
push
int
subl
pop
ss
lods
repnz
push
sbb
imul
call
enter
adcb
pop
repz
fcoms
push
jbe
xor
decb
xor
stos
pop
mov
in
stos
dec
fcoml
sahf
xor
sub
or
push
pop
mov
push
popa
fisubl
int3
faddl
jno
bound
gs
cmpsb
out
add
adc
imul
push
loop
jno
std
paddusb
inc
in
jne
in
idiv
aad
mov
mov
lds
xchg
xor
jns
fwait
mov
mov
popa
mov
dec
cltd
jne
test
insl
pop
in
mov
ret
jno
inc
sti
adc
stos
sti
or
test
push
jns
insl
cmc
xor
popl
jns
sbb
push
sbb
push
pop
xor
in
cwtl
add
mov
push
clc
add
and
insl
push
mov
dec
shl
cltd
insb
inc
mov
loope
sbb
mov
adc
in
mov
cmp
add
iret
adc
sub
fwait
push
icebp
bound
ljmp
push
xchg
call
in
mov
mull
xchg
idivl
int
ficoml
cmpl
inc
jmp
cwtl
mov
and
push
lods
mov
inc
inc
xor
fnsave
push
inc
inc
std
in
cmp
add
mov
cld
pop
in
idivb
inc
aam
and
leave
outsb
out
push
nop
xor
cmpsb
and
push
rol
testl
scas
and
or
imul
sub
mov
fidivl
js
and
or
dec
cmc
fdivrl
sub
pushf
push
mov
das
jmp
fstp
jne
loopne
and
dec
arpl
outsb
push
jl
mov
repz
mov
rol
pushf
jp
bound
dec
iret
bound
and
into
fistpll
aaa
iret
shlb
ret
and
mov
into
incl
mov
and
sahf
pop
pop
cltd
pop
insb
push
jecxz
fisttpll
out
push
pop
hlt
push
jb
iret
cmc
inc
adc
dec
pushf
jl
out
mov
xchg
shr
xor
mov
jo
or
sub
jmp
cmp
xchg
pop
sahf
sar
mov
test
jge
lahf
xchg
aad
aas
jnp
ds
je
push
fucomi
inc
ficompl
aad
sbb
js
push
aaa
into
lret
shl
adc
ret
jl
mov
mov
mov
xorl
push
dec
mov
lcall
xlat
imul
pop
and
out
sahf
mov
inc
in
in
sbb
icebp
jbe
push
mov
push
call
sti
stc
aam
pop
enter
or
and
push
stos
lock
mov
or
jmp
dec
add
ret
test
inc
cmpsb
cmp
int
cmpsb
mov
jg
push
xor
jb
cmp
cmc
jmp
adc
jge
add
insb
jp
arpl
xchg
lret
cltd
xor
xor
clc
outsb
shlb
inc
or
xchg
dec
aas
push
pop
dec
mov
in
addr16
inc
xchg
cmp
addr16
icebp
mov
ds
and
jnp
into
cltd
rorb
xchg
stc
aaa
sarl
lret
mov
xor
ja
add
sar
sti
dec
fstps
inc
scas
cmp
xchg
lds
cmp
das
sub
cmpsl
pop
inc
inc
cmc
pop
and
sub
dec
out
sbb
out
sarb
xchg
test
dec
cmp
xor
je
in
mov
jl
jge
sub
arpl
jp
ljmp
xor
orb
lods
pop
sbb
xchg
mov
jmp
jo
inc
inc
jns
lret
and
mov
inc
pop
push
cmp
sbb
push
or
addr16
lret
adc
xchg
cmpb
cwtl
push
shll
dec
clc
cltd
enter
arpl
popa
xor
pushf
mov
sub
xchg
cmp
dec
jns
adc
add
outsb
jp,pt
mov
and
cmp
inc
jecxz
dec
inc
addr16
addr16
push
adc
jno
dec
insl
in
paddb
lcallw
pop
aam
push
movsl
out
leave
lcall
dec
in
xor
icebp
jno
lock
loopne
hlt
adc
jbe
inc
inc
insb
cmpsl
mov
or
cmp
or
daa
cwtl
mov
lahf
je
stc
aad
dec
push
sbb
outsb
sbb
push
ljmp
xchg
inc
push
insb
and
inc
or
nop
loopne
outsl
cmp
mov
out
inc
dec
repz
add
in
push
xlat
iret
mov
push
or
mov
bound
dec
xchg
ret
lods
je
lds
shlb
punpckldq
jbe
test
sti
xor
popf
sub
inc
pop
sub
out
jmp
aas
lods
dec
mov
mov
jns
fidivs
sbb
adc
dec
and
into
or
fs
nop
les
hlt
lret
add
or
xchg
mov
test
mov
lret
push
mov
mov
push
imul
icebp
fistps
dec
xchg
cmp
xchg
adc
addb
dec
pop
rorl
sahf
imul
cmp
cld
jo
jae
xor
push
xor
mov
mov
decl
mov
jb
adc
sbb
movsl
cmpsl
arpl
cld
js
out
mov
push
notl
testb
xchg
pop
imulb
xchg
outsl
pop
pop
loop
inc
push
movsb
aas
push
in
js
iret
in
jbe
stos
test
outsl
addb
movsb
int3
xchg
nop
push
push
imul
add
and
add
cmp
pop
lods
cltd
lds
in
adc
mov
dec
test
lret
xchg
out
stc
shll
jb
inc
push
bound
clc
jl
aaa
pop
adc
bound
lahf
pop
rorl
mov
mov
mov
cmpsb
jge
pusha
sbbb
or
push
fdivrs
addl
jae
lock
mov
cmp
mov
loopne
xlat
sub
jl
sbb
jb
adc
mov
xor
sub
stc
inc
xchg
jmp
jo
mov
lods
cwtl
dec
mov
sahf
push
push
mov
lods
test
adc
fcompl
sbb
push
jne
mulb
mov
sti
dec
jne
repnz
inc
dec
pop
sbb
lods
cmpsl
add
js
and
lcall
mov
pop
dec
push
fwait
xor
xchg
sarl
imulb
or
xchg
aaa
cwtl
subb
xchg
and
add
xchg
mov
mov
jnp
fstpt
sti
popf
and
stos
sbb
inc
and
xchg
mov
call
push
negl
jmp
les
es
jae
test
ror
je
cmp
mov
aas
pop
jmp
inc
push
push
scas
jae
jl
jno
pop
dec
out
test
inc
ds
fs
xor
arpl
pop
lock
adc
pop
xchg
loopne
pop
dec
dec
mul
sbb
dec
idivl
xchg
pop
pop
les
sub
pop
pop
inc
in
mov
loop
xor
movsb
sub
cmp
jg
fcoms
sbbl
lock
cmpsl
out
pop
push
xor
test
jns
lods
jmp
and
and
or
jbe
jno
xchg
xchg
fnsave
jo
and
fmulp
lcall
push
clc
sahf
xlat
mov
shl
xchg
dec
and
or
movsb
loope
fwait
movsb
and
in
pop
pop
or
sbb
adc
mov
or
loopne
aad
in
in
repnz
sub
and
dec
dec
popf
stos
push
es
xorb
pusha
fistpl
sbb
lea
imul
jo
or
push
xchg
int3
mov
add
in
sub
dec
push
cmp
popf
es
inc
loop
add
cmp
psubsw
and
dec
out
adc
in
pop
mov
pop
jg
or
sbb
scas
xor
xor
push
jnp
loopne
outsl
mov
fcoml
sbb
roll
stos
lods
xor
sti
mov
or
pop
popa
pslld
and
int
or
mov
lods
xor
popa
mov
sbb
sub
pushl
mov
sub
fdivl
pop
outsb
xchg
out
in
popl
gs
add
cwtl
movsb
push
test
js
ret
or
xor
and
mov
pop
fsubrs
xchg
pop
sbb
or
xor
shll
scas
cmp
push
push
push
lret
daa
movsb
push
fs
mov
daa
add
popaw
clc
daa
push
xchg
jae
adc
mov
and
cmpsl
pushf
nop
ds
out
jno
adc
lret
js
xchg
insb
sub
jge
pop
xchg
pop
fs
and
rorb
cmpsl
bound
jo
ja
jle
pop
and
push
mov
in
cmp
ret
data16
lcall
dec
dec
iret
mov
out
sbb
shrb
inc
xchg
cs
xchg
pushf
cmp
jmp
divl
sahf
cmc
idiv
sub
out
lcall
std
jp
mov
clc
out
popa
jle
push
pop
loopne
ret
adc
shll
adc
mov
fisubrl
test
js
sub
enter
clc
xor
mov
cmc
and
push
pop
add
rol
mov
jmp
or
cmp
pop
insl
mov
or
inc
inc
test
test
pop
xor
mov
mov
lcall
sub
iret
lock
xchg
sbb
cmp
or
arpl
dec
enter
or
or
stc
push
xchg
mov
push
loope
jno
push
lock
gs
imul
addr16
in
fldpi
hlt
adc
mov
add
pusha
insl
push
icebp
cld
mov
push
mov
dec
cwtl
mov
cmp
jecxz
dec
push
sarl
cltd
cli
outsl
xchg
mov
lods
lds
aam
pusha
lahf
sub
mov
jne
xchg
mov
stc
clc
daa
enter
adc
inc
and
lods
mov
dec
addl
pop
push
adc
jecxz
mov
cmp
gs
push
sbb
lahf
movsl
jle
or
out
dec
les
lds
mov
jns
jge
add
daa
dec
mov
sub
adc
inc
dec
sbb
test
jnp
mov
int3
subb
adc
or
cmp
push
iret
dec
test
pop
aam
scas
xor
sbb
mov
sbb
movsb
out
jne
xchg
es
lea
sbb
and
mov
dec
cmp
iret
enter
not
into
aas
xor
dec
aas
mov
hlt
jl
mov
inc
push
imul
test
mov
adc
pop
push
mov
push
xor
xchg
cmp
jge
rcrb
shrb
sub
or
out
pop
lret
sub
jne
adc
incb
aam
xchg
mov
arpl
lahf
cmpb
dec
adc
cmp
aas
aad
push
fwait
js
shll
fidivl
xchg
outsb
out
pop
lds
shll
ljmp
fsubrs
add
add
dec
jns
test
int3
or
pop
adc
inc
pop
xor
inc
lock
popa
mov
mov
inc
scas
mov
mov
jge
xchg
xchg
mov
mov
push
mov
push
out
xor
and
pop
sbb
pushf
cmp
outsb
add
ja
mov
loope
mov
mov
rolb
mov
jg
fisubrl
xor
xor
or
pop
jns
mov
pop
jge
jl,pn
into
or
add
repnz
jp
div
ss
dec
pop
mov
out
push
dec
clc
decl
mov
dec
push
xor
add
mov
or
mov
test
js
insl
push
cli
addl
xchg
inc
push
idivl
push
insl
jmp
fwait
adc
lahf
inc
std
pop
xor
ss
or
cmc
or
push
push
sbb
cmc
test
out
cld
icebp
daa
mov
ret
mov
jge
int
xlat
cmpsb
mov
sbbl
pop
aad
test
je
xchg
subb
cmp
pop
xorl
or
fs
jle
cmp
lret
pop
dec
xor
mov
cwtl
aaa
mov
lods
mov
outsb
and
arpl
xchg
cmpsl
xchg
aaa
push
aad
nop
es
cmp
out
xor
jecxz
rorb
imul
mov
xchg
cmp
dec
repz
andb
aaa
sbb
ret
inc
fisttpl
jecxz
icebp
sbb
out
add
add
add
cmp
mov
es
dec
cwtl
pop
or
xchg
daa
and
inc
jns
mov
stos
mov
pop
jl
addr16
and
sbb
inc
inc
bound
shll
inc
xchg
add
dec
std
sub
arpl
cwtl
cmpl
cmp
pop
ljmp
sub
lret
sub
dec
sbb
notl
or
fsubs
rcr
bound
lret
jp
sbb
push
jge
fwait
enter
out
lods
out
jl
nop
cmp
mov
punpcklwd
or
loop
jns
dec
outsl
mov
push
lahf
mov
mov
inc
pop
aad
and
jbe
loopne
sbb
nop
out
inc
mov
aas
cmp
cli
xchg
or
mov
test
mov
scas
cmp
call
cmpsb
mov
pop
decl
cmp
das
jae
dec
jge
cmp
cmpl
adc
xor
push
cli
movsl
cmp
pop
mov
mov
daa
loopne
inc
rcrb
mov
arpl
mov
mov
sarb
ret
pushf
sbb
imul
mov
push
mov
outsl
push
scas
lds
lcall
jl
add
pop
mov
and
lock
pop
pop
movsb
ret
lods
imul
adc
js
cmc
pop
sbb
ret
lahf
xchg
test
dec
movsb
inc
mov
test
push
mov
out
sbb
and
mov
mov
jl
mov
ficompl
adcl
mov
adc
fwait
insb
popw
rcrl
lahf
cmp
fcoml
addr16
iret
repnz
jl
push
scas
shl
cwtl
test
mov
jnp
adc
call
ja
push
hlt
std
xlat
repz
insb
xorl
add
mov
cmp
cmp
sahf
ret
popa
jno
xlat
pushf
xchg
cmc
jb
pushf
sti
push
mov
dec
out
mov
sahf
mov
ds
or
in
test
mov
cs
imul
cmp
add
jecxz
push
mov
es
or
sti
jg
mov
rorl
out
adc
insl
add
ret
stos
sub
cli
xor
loopne
xchg
or
xor
arpl
sbb
dec
fidivl
sub
arpl
pusha
or
mov
add
cs
push
and
push
mov
test
std
sub
push
mov
cltd
call
subb
mov
and
pop
test
sahf
repz
or
fsts
pushf
pushl
cmpsl
dec
and
dec
and
inc
test
inc
xchg
push
cli
jno
jae
xor
sub
mov
push
cmp
jns
out
ja
mov
addl
lahf
adc
hlt
and
fidivrl
insl
dec
insb
push
cwtl
inc
push
in
pushf
test
icebp
test
dec
mov
es
in
lock
lods
jo
es
jbe
shll
inc
in
adc
into
mov
adc
adc
cld
into
pop
adc
cmc
roll
inc
ljmp
and
adc
sub
out
loop
lret
mov
mov
pop
scas
es
adc
jmp
fcoms
movsb
cmp
or
xlat
lahf
sbb
dec
outsl
push
adc
lods
push
scas
enter
and
fstps
lock
pop
mov
mov
lds
aas
decl
dec
xchg
mov
rolb
shr
xchg
jmp
push
int
test
hlt
mov
cmc
xlat
sbb
ljmp
cli
mov
or
and
negl
adc
ret
cmpl
sbb
and
sbbl
push
das
in
and
mov
sbb
xchg
cmp
mov
rolb
cmp
rclb
and
inc
or
out
xchg
lods
xchg
or
clc
js
in
mov
pusha
inc
aaa
arpl
jl
movsl
jge
push
scas
iretw
sbb
add
xor
xlat
xchg
pop
fwait
aaa
sbb
cli
out
mov
jp
movsl
jb
cmp
movsl
data16
nop
sub
or
cwtl
inc
dec
addr16
setl
pop
std
popf
or
in
mov
mov
test
and
loop
dec
jo
stos
lahf
pop
pop
mov
popa
push
mov
call
lahf
adc
popa
dec
jbe
mov
sub
pushf
cmp
and
iret
xor
scas
sahf
jmp
rol
inc
lahf
inc
mov
adc
out
repnz
inc
test
lods
and
mov
push
dec
flds
cmp
aad
cltd
jae
add
out
jno
pop
pushl
mov
rolb
pop
cmp
pushf
mov
imul
call
and
into
pop
adc
and
inc
cs
jbe
rcrl
pop
fmul
jl
sub
dec
mov
push
icebp
push
xchg
outsb
jg
pop
aas
pop
rcr
sbb
dec
lds
gs
mov
inc
aad
popf
lds
jnp
cmpsb
sbb
or
pushf
mulb
std
out
xchg
pushf
xorb
addr16
sbb
scas
aas
insb
xor
mov
inc
cld
xor
ret
pop
outsl
jns
push
adc
test
jge
mov
xorl
xor
pop
in
lret
hlt
aam
cmp
jae
fs
lds
xchg
in
xchg
sahf
scas
or
negb
scas
dec
and
mov
outsb
cmp
or
adc
rcll
mov
lret
cmp
mov
out
fs
cmp
xor
das
pop
mov
mov
ficomps
shll
jg
outsb
cmp
or
and
adc
mov
out
jmp
mov
sarb
adc
push
outsb
and
inc
jmp
outsb
andl
xchg
mulb
lea
dec
dec
xor
push
outsb
xchg
and
shlb
push
adc
mov
stos
int
frndint
cmp
lods
std
cmpsl
xor
ds
jecxz
sbb
popf
dec
fneni(8087
std
xchg
sbb
stc
js
cmp
dec
mov
mov
cwtl
pop
xlat
xor
add
dec
or
inc
and
fst
aaa
jns
cmp
dec
sub
mov
pop
mov
pop
fstps
sub
xchg
adc
testl
in
lods
add
ss
fidivl
das
aam
xchg
xchg
aas
xchg
aad
jns
mov
jnp
pop
stos
popf
shll
cs
test
int3
das
es
stc
out
movsl
mov
xchg
test
lahf
xchg
cmp
xor
sub
cwtl
push
xor
ds
repnz
sbb
pop
cmp
lds
ror
jecxz
lret
fwait
pushf
xchg
jle
clc
scas
xlat
xchg
sbb
insb
xchg
or
sbbl
pop
add
jno
std
jle
lock
xor
leave
mov
jbe
push
sti
insb
fwait
movsb
adc
dec
aam
or
xchg
cmpl
sbb
fdivrl
fmul
pop
repz
stc
testb
popa
or
fdivrp
sub
mov
pop
nop
or
aaa
sbb
aaa
push
cld
push
mov
lret
sub
stos
cmp
inc
add
adc
mov
push
pop
cmp
movsb
iret
or
repnz
dec
imul
pop
mov
mov
xchg
mov
cltd
pop
lcall
jbe
mov
stos
out
mov
cld
lret
icebp
fidivs
push
mov
int3
cmp
mov
xchg
fiadds
int
sbb
or
lret
gs
xchg
outsb
fdivl
xor
shrl
mov
dec
adc
aam
or
jb
jmp
lcall
pop
fwait
mov
outsl
fnstenv
cmp
jmp
or
fadd
outsb
cs
sub
adc
dec
push
out
mov
pop
mov
push
push
push
sbb
std
ja
mov
insl
out
pop
fadd
add
lods
adc
jae
sbb
mov
jno
pop
and
mov
dec
mov
pushf
push
add
jp
sbb
enter
fst
into
popf
or
mov
add
mov
mov
fmul
lods
out
cmp
in
jle
pop
cmp
push
nop
imul
imul
fsubl
pop
xor
push
cmpsl
mov
add
and
xchg
iret
imul
nop
xchg
xchg
out
push
xchg
fwait
repnz
hlt
jecxz
lret
sbb
es
dec
pushf
mov
and
js
int
bound
mov
jo
movsl
jl
xchg
pop
icebp
int
pop
jno
lods
loop
jg
rclb
xchg
popf
jle
ret
cmp
mov
add
push
xchg
lock
loop
ficompl
xor
mov
jp
and
outsl
jmp
push
cmp
filds
cmp
push
insb
pop
popa
insb
mov
dec
aam
imulb
mov
pop
pop
and
pop
test
std
and
mov
mov
inc
cmpsb
aas
fsubs
inc
pop
orl
mov
out
insl
addb
or
or
cltd
stc
repnz
adcb
fdivl
mov
dec
push
rcll
test
jns
repnz
xchg
pushf
dec
mov
lcall
jge
and
mov
insl
insb
inc
in
test
sti
aam
inc
push
loope
inc
test
ss
or
call
sbb
or
jnp
push
hlt
scas
mov
fwait
stos
imul
jmp
xor
pop
out
xchg
mov
fcomps
or
out
jnp
scas
in
xchg
ljmp
out
movsb
inc
cli
pop
xor
add
push
sbb
rep
test
stc
pop
mov
cmp
and
jb
fwait
outsb
inc
push
ret
adc
addr16
adc
ds
clc
in
jo
enter
lods
roll
idivb
inc
lea
jle
cld
sbbl
sti
mov
pop
mov
jle
push
mov
inc
xor
loopne
jge
jl
xlat
lods
shrl
adc
push
ds
jmp
adc
mov
pop
pop
ja
lcall
push
movsl
add
adc
cli
lea
imul
jnp
adc
pop
dec
mov
cmp
xorb
test
sarl
in
sub
ret
fadds
das
stos
stc
xor
xchg
sahf
sub
fdivr
mov
int
dec
mov
cmp
sbb
mov
aaa
movsb
adc
xorl
lahf
rol
in
popa
in
jnp
xor
test
scas
fwait
add
shl
lahf
mov
and
popf
lahf
jb
shl
push
pop
test
icebp
pop
adc
repz
mov
stos
xchg
mov
jbe
inc
add
cmp
mov
scas
sbb
push
sarb
sbb
add
scas
pop
add
xchg
mov
sub
mov
sbb
ret
jge
in
cmc
add
xor
sbb
pop
or
adc
cs
ffreep
mov
cli
bound
mov
fwait
setp
jne
cli
sbb
xor
or
xor
cmpsl
popa
pop
filds
mov
pusha
jecxz
push
cli
sbb
fwait
and
out
mov
aam
lds
les
cmpsl
in
xor
js
cmp
xchg
scas
mov
mov
add
imul
sbb
inc
jmp
push
daa
add
sbb
push
rcl
xchg
xchg
xor
push
adc
cmp
fmull
fcom
push
lds
shl
xchg
cmp
mov
ret
aas
sbb
into
xor
jnp
xchg
sbb
or
jns
jle
pop
push
mov
in
aaa
enter
add
adc
mov
jmp
ds
mov
jle
cmpsl
in
notl
sbbb
inc
mov
push
mov
es
mov
cmp
mov
fsubs
mov
or
in
into
ss
push
and
inc
cs
inc
xchg
cli
pop
inc
lds
popf
mov
fisubs
xor
call
pop
mov
pop
pushf
daa
pop
mov
pop
in
iret
adc
or
push
xor
sbb
or
popf
adc
xor
push
and
fidivrl
test
push
jno
fmull
xchg
xchg
sub
mov
xchg
jns
shlb
jle
lret
jp
sti
dec
sbb
sub
mov
mov
pop
pusha
dec
sbb
hlt
push
jno
and
jmp
callw
test
xchg
or
and
mov
dec
jmp
pop
out
or
mov
lcall
mov
fisttpll
aaa
loop
pop
push
xchg
scas
xchg
push
scas
out
xor
ds
pop
addr16
subl
cs
pop
push
mov
push
ffreep
lock
lods
and
xor
fadd
cmp
sbb
cwtl
lods
push
xchg
jmp
mov
pop
jge
xor
cltd
popf
popf
shlb
and
add
in
add
pop
and
mov
xchg
fistpll
scas
cmc
or
insb
mov
aas
cmc
inc
enter
mov
mov
mov
mov
insb
push
pop
pop
je
dec
cli
sub
or
jmp
sbb
call
mov
or
mov
mov
mov
mov
xor
sbb
or
das
nop
push
sub
jns
jb
ret
push
out
mov
xchg
int3
int3
es
mov
fnstenv
flds
push
sub
lahf
xchg
mov
push
stc
aam
dec
int
cmpl
ds
sahf
sub
push
cmp
addr16
jmp
in
popa
sub
cmpsl
call
jo
sub
mov
xchg
out
lret
cld
push
cltd
xchg
inc
sbb
sbb
add
jle
test
add
jge
pusha
imul
mov
popa
cli
les
and
dec
int3
into
les
gs
decl
leave
push
jae
push
xor
test
xlat
jnp
push
adc
dec
scas
leave
or
fwait
loopne
adc
jae
cltd
test
dec
sbbb
testb
les
sahf
ja
testl
jo
mov
mov
lds
leave
adc
jle
stc
negl
inc
into
andl
std
fdivrl
add
or
je
unpckhps
fdivs
mov
push
rcrb
sbb
mov
add
in
sub
out
dec
dec
out
cmp
fdivrs
or
ficoml
movl
cmp
push
and
push
ficomps
subl
dec
xchg
ret
loop
bound
pop
dec
arpl
mov
sbb
dec
mov
push
push
pop
cmp
shrl
pop
sub
into
sbb
fildll
sub
dec
addb
lcall
outsb
shl
loopne
pop
xchg
mull
stc
push
xor
cmp
cmp
sbb
scas
bound
jl
fisubrs
out
insl
and
push
int3
aam
xor
sahf
and
js
dec
test
cmp
or
xchg
sub
es
mov
ljmp
call
mov
sbb
cs
in
push
pop
adc
pushf
xor
fdivrl
into
dec
fnstenv
loope
sub
push
push
sub
aas
lret
rorb
scas
inc
call
pop
cmc
sbb
inc
bound
sub
imul
push
cmp
dec
mov
fs
adc
mov
mov
sarb
mov
adc
jae
mov
push
or
aas
adc
stos
out
cmc
xchg
in
cmpl
in
mov
psrlw
fwait
cmp
cltd
xor
gs
imul
lret
pop
dec
add
movsl
stos
jge
sub
data16
jnp
dec
xor
add
push
roll
sbb
mov
std
in
dec
icebp
test
xchg
sbb
mov
je
shl
sbb
and
mov
pop
xchg
repnz
pextrw
push
xor
sbb
repnz
cld
ficoml
mov
xchg
add
int
out
mov
jg
movsl
jae
mov
dec
sti
test
pop
inc
rcr
jmp
mov
dec
mov
add
test
cmp
repz
push
fstpt
bound
or
test
dec
scas
dec
jl
sub
or
sbb
and
cmp
scas
mov
enter
and
and
mov
mov
jnp
pop
lds
mov
jns
adc
popa
adc
push
pop
call
icebp
push
pop
add
outsb
iret
or
pop
addr16
adc
sub
inc
mov
pop
mov
mov
dec
push
mov
mov
cmp
jmp
lea
mov
xchg
outsl
iret
and
sbb
clc
cmp
push
das
jl
mov
add
lock
jge
xchg
cld
push
push
cwtl
das
adc
daa
xor
adc
cmpsl
xchg
mov
fdivrl
xchg
dec
mov
sub
pop
in
inc
mov
mov
imul
jp
rcrb
mov
addb
lods
sbb
fnstsw
mov
pop
enter
mov
and
pop
inc
hlt
mov
inc
lods
roll
fs
sbb
jge
inc
or
int
cmp
jmp
not
cmp
inc
das
pusha
xchg
cmp
sub
xor
xor
std
insb
jns
popa
cmp
add
push
jmp
dec
mov
std
aad
lcall
pop
mov
popf
add
jno
cltd
pusha
or
cmpsl
push
rorb
xor
mov
mov
sbb
sti
or
into
in
xchg
aam
jg
lods
pop
push
mov
fdivr
cld
rcll
in
xchg
daa
popf
ss
sbb
aad
jmp
cld
mov
sub
pop
test
cli
or
jecxz
lret
ret
in
inc
add
loopne
shlb
push
in
add
imull
mov
xchg
and
cmp
xchg
jmp
jmp
in
lea
nop
lds
xchg
les
iret
ret
jecxz
sbb
daa
aam
test
and
bt
mov
data16
mov
dec
iret
cmp
je
scas
jl
sbb
push
xchg
movsl
dec
adc
adc
fstl
clc
fld
icebp
xchg
jecxz
ffreep
or
xchg
cli
ss
movsb
xlat
mov
les
mov
mov
orb
cs
aad
ficompl
xchg
imul
std
cmpsl
pop
imul
outsb
testl
std
pop
lahf
push
loope
lods
fiadds
stos
outsb
jge
call
jmp
jno
sub
push
push
jle
cli
enter
int
xor
or
xor
rcrb
pop
inc
imul
sbb
std
adc
shl
add
pop
subb
adc
mov
push
or
add
push
sub
inc
mov
enter
cltd
sbb
incb
xchg
pop
iret
std
adc
out
pop
inc
movsb
or
jge
mov
lahf
push
inc
arpl
loope
inc
or
adc
pop
shlb
lret
hlt
sahf
mov
xor
pop
sbb
cmp
inc
adc
scas
cld
dec
adc
xchg
mul
or
dec
fs
ret
lods
jp
push
jno
mov
xlat
addr16
sbb
xchg
sub
push
icebp
movsl
xchg
push
or
loope
mov
xchg
test
or
fwait
pop
jle
pop
movsl
mov
lods
fstps
mov
aad
mov
sub
mov
and
push
pop
test
pop
test
mov
mov
stos
push
ret
xchg
and
lods
xchg
xor
jecxz
int
orl
jecxz
xor
lahf
stos
sub
and
xchg
push
int3
and
lds
mov
lahf
outsl
in
out
cmpsl
dec
data16
cmp
add
adc
mov
or
jbe
pop
sbb
dec
cmpsl
and
int
test
mov
or
mov
rorl
or
dec
xchg
inc
xchg
mov
cmpsb
xor
mov
pop
dec
mov
daa
insl
jae
mov
mov
pusha
ret
out
mov
je
jo
hlt
test
push
lods
enter
repnz
xchg
jl
add
ljmp
mov
xor
push
mov
mov
cs
loop
push
mov
out
icebp
or
and
mov
push
pop
std
test
aam
cmp
pop
xchg
inc
or
mov
outsl
test
mov
inc
outsl
pop
ja
lret
stc
mov
hlt
jmp
outsl
mov
dec
fs
fisubs
repz
pop
push
adc
pop
adc
sbb
test
mov
adc
lahf
cmc
leave
xchg
cmp
push
pop
sarl
mov
or
data16
push
cltd
loope
out
jae
testb
mov
imul
or
lods
mov
mov
shlb
push
out
in
enter
pusha
imul
mov
fbstp
cmp
shll
in
cs
subl
arpl
mov
testl
add
lods
and
std
sbb
or
and
fcompl
and
mov
mov
popa
sbb
fwait
mov
push
inc
cs
imul
mov
pop
cmp
test
cmpsb
add
cld
in
nop
clc
aam
and
repz
aam
xchg
and
lods
lds
push
push
xor
xchg
mov
xorl
inc
inc
into
and
adc
dec
push
movsl
push
xchg
dec
addb
fnstenv
add
rcl
dec
cs
iret
jnp
cmc
cmpb
pop
cmp
cmc
gs
mov
add
aaa
jns
add
fisttpl
mov
cmp
xchg
out
xchg
mov
adc
and
shll
xor
lret
inc
mov
loopne
data16
xchg
dec
sub
shrl
adc
bound
push
testb
push
xor
or
pusha
mov
shlb
and
sub
push
cmc
in
cld
addb
and
xor
mov
ss
sub
inc
mov
or
add
out
addr16
sub
xchg
dec
sub
scas
in
cwtl
loopne
clc
scas
push
jae
push
jns
xor
loope
int
xchg
fidivs
stos
shll
in
stc
jp
cmp
in
les
sub
push
out
dec
add
fxch
jecxz
jmp
int
adc
pop
icebp
or
cmc
insl
mov
lods
scas
icebp
mov
dec
popa
jecxz
fcomps
iret
mov
idivl
and
push
add
sahf
lcall
cld
test
cwtl
inc
push
call
jno
out
and
dec
cli
cmp
arpl
sbb
notl
std
and
das
adc
sbbl
out
test
xchg
ss
je
inc
andl
aaa
push
fisubl
jae
orl
pop
jnp
lods
test
subb
add
inc
repz
push
pop
adc
xchg
lea
addl
mov
stos
mov
mov
cwtl
sub
loop
push
adc
lods
mov
lret
clc
loop
fstps
std
sbb
dec
and
mov
inc
xchg
scas
mov
out
es
or
and
fistps
xchg
fistl
mov
sbbb
lods
out
push
mov
mov
test
imull
sbb
xchg
xchg
mov
daa
imul
movsb
push
sbb
insb
sahf
mov
push
xchg
lds
or
es
pop
cmpsb
mov
mov
cli
insb
mov
test
xor
fisubrs
out
pop
not
out
pop
jle
jne
xlat
rolb
inc
pop
mov
pop
stc
shlb
aaa
push
sbb
daa
push
push
or
ret
xor
data16
xor
cwtl
push
icebp
jns
inc
sbb
imul
dec
pop
add
adc
cltd
sbb
xchg
stos
mov
jno
test
cld
push
sub
movsb
insl
movsb
mov
and
lds
pop
jecxz
add
sahf
adc
cwtl
enter
aam
push
mov
xchg
fs
pop
sbb
js
mov
add
or
inc
push
adc
lret
ret
dec
lods
cs
addr16
xor
mov
das
ss
adc
cmc
out
loop
loop
inc
jns
and
pop
mov
and
xchg
lret
xor
or
cld
das
aad
pop
js
aaa
jne
sti
jne
lahf
push
inc
cltd
xchg
and
mov
shrl
cmpsl
or
jl
mov
push
cmc
icebp
jmp
mov
or
rcl
pop
xor
dec
mov
aas
xchg
aad
cmc
cmp
inc
inc
add
push
dec
movsl
dec
lock
sbb
push
ljmp
fstl
mov
push
int3
xchg
mov
testb
in
mov
subl
test
dec
inc
aaa
add
fwait
repnz
mov
cli
jns
shr
or
movsb
mov
rcl
nop
ficomps
pushf
push
cld
das
xchg
pop
int
xor
inc
mov
rcr
cld
scas
inc
dec
stos
aad
xchg
adc
int
fwait
stc
xchg
lock
jp
mov
xor
cli
cmp
or
xor
dec
and
or
fabs
and
fsub
ljmp
stc
dec
je
cmpl
jge
lock
push
sbb
dec
jge
in
adc
out
or
cmc
jbe
lret
outsb
mov
repz
les
insb
adc
pushf
push
repz
jl
jecxz
mov
add
and
lods
mov
jmp
pop
fsubrl
loopne
js
pop
pop
in
pushf
adc
ja
push
mov
mov
sahf
inc
inc
jp
push
call
gs
inc
in
sbb
add
rcll
pop
push
cli
pop
lds
pop
mov
ret
add
ss
es
cld
inc
mov
sbb
cltd
jo
push
and
pop
jo
dec
mov
sahf
mov
inc
data16
call
jno
out
push
mov
mov
nop
sbb
sub
push
faddp
inc
xchg
adc
inc
mov
sarb
fnstsw
jg
jnp
mov
loop
dec
cli
pop
movsb
mov
mov
dec
or
push
and
cli
rorl
pop
rol
add
mov
movl
add
jb
mov
push
cld
sbbb
sub
jae
jne
pushf
lds
mov
cld
dec
or
sub
rclb
rcrb
lock
icebp
in
sub
aas
les
into
add
mov
push
push
mov
xchg
cld
sub
rcll
add
add
fcmove
ret
scas
pop
push
and
lea
xchg
out
pop
les
in
mov
mov
xor
xchg
xchg
sub
lcall
dec
into
mov
xor
xchg
push
push
lahf
dec
mov
cmpsl
push
mov
js
mov
jae
movsb
xchg
xor
inc
dec
in
insb
mov
addr16
cwtl
jp
jb
bound
ss
loop
lcall
fistps
pusha
jns
jae
xlat
test
and
jg
jge
cld
ljmp
hlt
repnz
mov
pop
mov
pop
add
xor
adc
loopne
xor
push
inc
in
add
inc
ljmp
dec
jle
lock
shl
lret
dec
adc
pop
push
outsb
jmp
hlt
mov
fsubl
nop
dec
fildll
fs
mov
in
enter
out
mov
leave
xor
clc
test
lods
and
xchg
jg
jbe
inc
mov
fwait
in
mov
jg
fdiv
jle
mov
mov
push
dec
xchg
ror
mov
push
push
dec
insl
xor
lock
cmpsl
inc
xchg
das
xchg
push
vpmulhuw
jae
mov
imul
and
js
out
cwtl
mov
jp
mov
iret
daa
mov
icebp
cltd
ret
scas
adc
hlt
int3
pusha
mov
jp
fnstenv
icebp
push
mov
arpl
sub
rolb
cmpsl
push
xchg
movsb
std
dec
pop
pop
test
call
hlt
xor
into
xor
xor
loope
ds
imul
ja
adc
push
add
out
pop
and
mov
push
jmp
fisubl
lods
lahf
pop
in
lods
int3
inc
jnp
insl
test
jnp
xchg
rcl
dec
test
dec
arpl
clc
in
mov
push
mov
push
or
aam
cmp
pop
pop
push
dec
add
xchg
cmpsl
sarb
add
mov
jno
and
int
je
cwtl
adc
push
dec
adc
jmp
mov
fimull
mov
rcl
mov
or
push
les
enter
sub
mov
loope
mov
adc
ljmp
mov
xchg
iret
sbb
xor
mov
lahf
or
clc
mov
test
mov
push
fidivl
jo
jl
cmp
movsb
call
inc
mov
mov
repz
cmp
push
loopne
out
dec
push
jp
je
mov
jp
hlt
xlat
inc
cmp
mov
cmpsl
inc
loop
xchg
ret
fwait
or
mov
movsl
lahf
sbb
mov
je
jmp
sub
aam
xchg
scas
enter
lea
push
mov
mov
mov
xchg
outsb
push
sub
adc
ja
dec
pop
jmp
lods
mov
ja
insl
sbb
insl
lea
push
ror
ret
gs
xchg
sbb
xchg
pushf
cmp
add
pop
pusha
ljmp
cmpsb
push
dec
cmpsb
sti
mov
sub
ds
std
jl
xor
sarl
lcall
sub
push
and
adc
jle
aam
aaa
ret
xchg
test
inc
outsb
inc
jp
out
das
test
and
push
push
or
lahf
sub
xor
inc
push
pushf
enter
mov
mov
mov
addl
cmpsb
fstpl
xchg
in
jb
mov
les
sbb
sbb
xor
stc
aam
dec
pop
in
push
add
lret
fildll
cltd
fwait
inc
jp
or
inc
jne
ss
std
in
outsl
cmpsl
push
push
cmc
je
push
sbb
and
dec
and
dec
cld
negl
mov
sub
fsubs
push
test
ds
cmc
outsb
adc
jnp
push
fdivrp
xchg
push
jl
out
and
shll
push
mov
adc
mov
dec
mov
sbb
call
pop
fstl
fld
inc
nop
je
or
jo
sti
cmpsl
fstps
fsts
out
xor
mov
xor
test
lahf
je
les
std
mov
loop
addr16
aas
lret
and
mov
pop
mov
repz
mov
insl
add
pop
div
jmp
pop
and
sbb
out
out
cmp
test
or
mov
inc
xchg
lret
fwait
testl
mov
add
ljmp
mov
or
and
les
enter
pop
jmp
negl
roll
inc
sub
repnz
out
addr16
clc
cmp
sbb
les
call
inc
stos
cmp
mov
jp
fwait
sbb
push
push
mov
push
fisubrl
and
xchg
lods
pop
faddl
iret
or
das
or
leave
and
cmpb
lods
cmpsb
cltd
lods
xor
fdivs
lock
lret
shlb
filds
dec
add
ja
fcoms
cmp
pop
rcll
xchg
jno
mov
sub
ds
insl
sbb
es
arpl
out
clc
movsl
adc
or
test
mov
sarb
fldenv
add
jl
inc
sub
cld
jnp
out
jle
inc
ret
and
pop
lods
and
pop
jbe
push
cmp
mov
cmp
mov
add
sbb
cmp
mov
pop
mov
aad
nop
jp
not
fidivrl
jns
stos
and
into
daa
dec
ja
movsb
shll
mov
lock
imul
out
lcall
mov
dec
push
fcoml
xchg
rcrl
adc
xor
cs
dec
lea
push
fistps
lahf
clc
imul
pop
ret
adc
out
dec
cmpsl
cld
push
pop
inc
dec
jnp
xchg
pop
sbb
sbb
or
cmp
mov
cmp
insl
sbb
inc
and
sub
pop
push
enter
ja
push
loop
xchg
and
jno
test
ret
es
cmp
mov
test
ja
lret
movsl
std
xor
ja
xor
push
lods
sub
dec
pusha
jb
repnz
in
andps
cmp
cmpsb
dec
lods
int
in
cltd
push
leave
xchg
push
adc
cmp
outsl
xchg
std
daa
scas
sbb
ficompl
push
les
jb
xor
stos
push
imul
aaa
pop
out
in
lods
add
mov
dec
mov
pop
enter
out
push
movsb
fmull
sbb
mov
into
loopne
aas
mov
xor
lret
lret
dec
push
adc
scas
pop
nop
xchg
xrelease
sbb
scas
xchg
and
cmp
adc
or
lret
xor
or
pop
mov
loopne
sub
lcall
leave
out
cmp
sub
jo
jne
mov
and
mov
mov
popf
psrad
adc
lea
pop
dec
and
pop
mov
inc
jmp
arpl
negb
shll
std
into
dec
into
shlb
or
cmp
pop
pop
sbb
enter
sub
rcr
dec
or
jnp
pop
dec
xchg
dec
nop
xlat
jbe
cmp
dec
roll
arpl
pusha
mov
movsl
test
pop
pop
add
cmp
xchg
ret
lods
adc
mov
jle
xchg
je
jbe
fsts
lds
bound
pusha
lds
or
pop
popa
data16
jge
or
dec
ret
das
fistpll
adc
js
sbb
gs
mov
rorb
ss
les
mov
dec
mov
clc
inc
jo
adc
ds
adc
out
push
jo
cwtl
loopne
xchg
in
in
es
cld
xor
imull
arpl
call
stc
xor
add
lahf
push
or
in
xchg
and
sti
popa
mov
fnstsw
jb
aad
xchg
bound
gs
cs
jae
push
pop
out
cld
test
pusha
adc
sbb
push
in
jne
mov
aaa
out
ljmp
ds
jge
jae
xchg
mov
dec
ja
cli
cs
rcr
push
jle
xchg
push
fs
push
mov
outsb
jnp
push
pop
and
test
mov
inc
insl
fildl
xchg
xor
mov
mov
pop
cmp
lret
xlat
xchg
fwait
addr16
fisubs
xchg
add
icebp
push
mov
or
stos
xor
push
or
ja
in
jle
add
jbe
mov
daa
gs
roll
rolb
and
imul
cli
ficompl
in
lahf
inc
shll
shl
outsb
cmpsl
sarl
mov
xchg
imul
iret
aaa
inc
cmp
loope
xor
mov
inc
aaa
push
cs
das
xlat
fs
lea
dec
xor
xchg
lcall
rclb
jo
add
mov
mov
arpl
call
stos
mov
lods
mov
sarl
jns
pop
mov
idivb
sub
das
insb
push
les
outsl
aas
js
shrl
outsl
dec
sub
push
sahf
push
movsb
loop
and
jmp
mov
popa
shr
sub
aad
mov
inc
mov
and
lds
sbb
xchg
lret
and
pop
xchg
int
add
stc
fisubrl
adc
xchg
mov
and
mov
enter
pop
ss
aad
out
pop
sti
jl
dec
jb
sti
outsl
pop
jp
daa
lock
push
jnp
bound
cmp
arpl
hlt
jb
test
xchg
add
adc
mov
push
push
leave
xchg
insl
xchg
jl
add
xchg
aam
add
dec
nop
xchg
scas
jns
inc
mov
ja
movsb
add
pop
mov
xor
jne
push
sub
test
stc
sub
arpl
push
mov
push
mov
ds
and
and
sub
dec
adc
fdivrs
scas
andb
sub
dec
sbb
adc
xor
xorl
adc
fnstcw
aad
mov
adc
xchg
xchg
mov
arpl
push
test
pop
icebp
outsb
mov
outsl
xor
mov
jns
and
loope
sbb
add
out
out
mov
pop
call
push
jae
int
push
mov
xor
aad
dec
repnz
imul
add
pop
movsb
xchg
adc
sub
mov
xchg
rcl
jge
sbb
sbb
adc
mov
add
jb
mov
sub
mov
sbb
ljmp
xor
adc
fcoml
mov
aaa
int3
mov
rcrl
mov
insb
mov
cmp
pop
cmp
mov
repnz
cltd
push
xchg
jne
sahf
pusha
scas
xor
pop
aad
jg
or
lret
or
push
stos
notl
push
outsl
cli
stos
frstor
mov
mov
cmp
repnz
icebp
xor
sbb
add
sti
ss
bound
mov
dec
xor
adc
push
jmp
scas
outsl
das
pop
sub
mov
push
xchg
add
lahf
das
dec
add
sarl
push
data16
scas
push
cmc
pop
mov
fstl
mov
dec
shll
cmpb
cmc
jne
mov
add
je
fisubl
ret
xchg
xchg
std
xor
imul
outsl
dec
bswap
popa
jae
mov
or
sti
jae
xor
or
adc
adc
pop
sahf
call
lods
or
dec
xorl
hlt
dec
rcrb
stos
mov
hlt
nop
aaa
pusha
mov
push
stc
sbb
push
xor
clc
daa
xchg
add
je
dec
jo
cmp
push
push
test
mov
dec
sar
jne
into
decl
pop
cmpsl
cmpsb
mov
cmp
aam
test
sarl
hlt
mov
push
lret
scas
nop
fldt
lods
in
add
and
aaa
mov
jbe
lcall
aad
jle
lret
mov
pop
and
adc
cld
mov
outsb
fs
loopne
mov
mov
sub
mov
int3
lret
adc
jecxz
xor
add
xor
insb
push
mov
cmpsb
inc
loop
out
iret
popa
jge
and
repz
push
negb
sub
mov
inc
mov
cmc
cmpsl
jbe
add
mov
cmpsb
mov
out
scas
test
xchg
push
mov
es
inc
popf
jp
pop
leave
outsb
dec
push
mov
popa
lea
ficoms
or
leave
pop
fcoms
dec
jbe
cmp
repnz
popa
sbb
mov
shlb
xchg
shll
outsl
sti
lock
inc
sub
lahf
fsts
ss
lcall
add
jbe
repz
mov
push
mov
and
fidivrs
mov
push
rcll
shrb
nop
jle
mov
dec
clc
xchg
repnz
ss
mov
orl
jo
lods
mov
inc
jns
int
loop
cltd
aaa
movsb
or
ds
pop
repnz
pop
out
mov
sub
xchg
movsb
negb
sti
int3
fbld
and
push
stos
xor
adc
movsl
lcall
mov
sbb
imul
sbb
mov
or
in
loopne
aas
jecxz
sti
mov
or
jne
jo
mov
sbb
ljmp
lods
xor
cmp
xchg
aaa
cli
fwait
enter
aam
pop
sbb
mov
sbb
mov
and
fisubrs
xchg
icebp
or
insb
enter
dec
je
faddl
rorb
ds
js
mov
cli
mov
and
fldenv
shr
dec
add
fadds
mov
std
popa
in
andl
mov
lea
loop
or
sbb
mov
mov
jge
mov
bound
sbb
outsb
cli
clc
xchg
jg
dec
xchg
jg
fcmovnb
pop
add
mov
mov
sahf
in
imul
aad
inc
xor
xchg
test
sbbl
out
sbb
repnz
add
out
xor
pusha
xor
xchg
xor
cmp
pop
loopne
xchg
addb
or
or
xor
fs
mov
cli
and
mull
call
aas
fadd
jne
cmovnp
rclb
cmpsl
popf
and
int3
in
mov
scas
mov
pop
add
xchg
adc
push
in
and
pop
addb
sub
imul
mov
dec
mov
xor
lods
sbb
push
outsb
adcb
sbb
inc
ss
int3
sub
mov
or
adc
and
pop
call
jnp
xor
push
cltd
xchg
xor
cwtl
cmpsb
mov
stos
fsubrl
addr16
cmpsl
mov
fnstenv
add
lds
mov
mov
xor
sub
xor
xor
out
xchg
and
rcll
rcll
ss
outsb
mov
pop
imul
mov
test
push
vdpps
adc
ss
loope
fs
mov
mov
sub
sub
cmp
inc
icebp
fwait
lock
inc
lock
repz
test
pop
cmpsb
mov
rorl
int3
lahf
jae
mov
jo
sub
push
out
lcall
imul
jp
sub
fcmovb
ja,pn
fs
into
aaa
lcall
scas
aad
popa
fildll
stos
sbb
cli
jmp
arpl
jbe
lret
push
dec
mov
cmp
ret
pop
lcall
adcl
inc
roll
xchg
sub
dec
ja
icebp
xchg
jmp
gs
aaa
xchg
or
mov
clc
xor
jns
scas
fisubl
fidivs
mov
lds
repz
cmp
addr16
pop
mov
mov
dec
cmc
xchg
clc
cmp
cwtl
mov
xor
sub
sbb
xchg
or
aam
pop
aaa
stc
cmp
call
test
jmp
lret
mov
dec
xchg
lods
xchg
cmp
sub
cmpsl
and
aaa
repz
push
or
inc
scas
clc
xor
lods
jp
or
bound
mov
mov
call
iret
addr16
cmp
jnp
mov
test
cmp
jmp
push
dec
cld
add
adc
cli
orl
in
xchg
int
mov
xchg
imulb
jb
pop
bnd
xor
les
lods
jl
and
dec
fldt
pop
int
scas
shlb
add
js
insl
xchg
gs
or
fnsave
push
mov
mov
js
mov
iret
popf
sbb
adc
or
lods
ss
jns
inc
sub
pushf
xor
dec
cmpsb
add
popa
cmc
cmp
pop
cmp
cmpsb
stos
adc
xor
mov
call
jle
fwait
pushf
inc
lods
js
imul
imul
jne,pn
jne
movsl
je
int3
lret
and
in
sbb
aam
sbbb
cmp
sbb
pusha
and
pusha
sbb
sarl
lcall
jecxz
mov
fcom
pop
imul
addr16
mov
lahf
cmp
gs
inc
xlat
jo
je
mov
inc
cmpsl
nop
adc
sbb
add
cmpsl
push
out
jae
adc
cmp
pop
xor
push
or
cmp
pusha
es
shr
or
loope
push
outsb
cmp
stos
pop
xor
mov
xor
mov
lea
or
movsl
es
pop
fsts
les
and
pusha
mov
scas
dec
inc
loope
mov
push
data16
setp
clc
xchg
cmp
push
and
cmpsb
shrb
xor
mov
mov
lock
mov
sbb
mov
in
jb
push
mov
adc
adc
je
add
in
repnz
mov
sbb
adc
popf
add
mov
loopne
jnp
cwtl
subl
push
xchg
sbb
gs
int
lock
xor
cwtl
add
repz
aad
mov
mov
imul
daa
mov
aam
lods
in
lds
xchg
popf
dec
scas
mov
add
or
sub
cmp
psrad
xor
ret
inc
sbb
push
adc
jp
mov
in
sahf
xor
mov
adcb
hlt
syscall
xchg
out
setb
dec
test
xor
dec
icebp
push
mov
mov
push
js
fsubl
mov
cmp
xchg
mov
mov
rclb
add
or
mov
daa
inc
pusha
cmp
adc
cmp
int3
push
sbb
jp
or
push
addr16
push
sti
or
stc
dec
call
cwtl
lret
xor
add
xor
ret
inc
dec
jl
add
sub
sub
xchg
or
imul
cmp
hlt
shll
dec
sbb
dec
mov
inc
jne
mov
nop
data16
and
mov
or
movsb
sbb
push
leave
add
mov
jl
or
sarb
xor
in
cmp
push
and
ja
mulb
ret
fldcw
aas
push
fs
add
pop
inc
loope
lret
mov
and
inc
mov
sub
testb
mov
pop
xor
test
fwait
mov
push
orl
sahf
add
mov
aaa
add
aas
push
es
jg
xor
out
dec
cmpb
mov
inc
jnp
sbb
sarb
fisttps
aam
xor
call
data16
xor
rolb
mov
out
push
out
sbb
imul
pop
repz
ja
push
dec
fldenv
pusha
rcr
imul
jmp
sbb
sub
repz
adc
mov
mov
popf
jmp
jno
jae
dec
xor
data16
gs
push
subl
aam
sbb
pop
dec
fnstsw
cs
mov
xor
sub
fs
insl
les
add
add
scas
mov
pop
or
jl
pushf
mov
ds
in
mov
adc
lcall
out
int3
in
push
scas
nop
inc
ret
int3
arpl
aad
xchg
xchg
in
push
dec
sbb
xchg
in
rcll
cwtl
loope
loope
cmpsb
jmp
xchg
hlt
repnz
jmp
shll
jg
ret
or
jp
push
out
sti
aam
xor
mov
xchg
cmp
lods
adc
imul
mov
test
aas
adc
pop
push
xor
mov
mov
lahf
add
int
mov
add
jl
xor
faddl
xchg
stos
dec
int3
dec
and
jnp
xchg
pushf
pushf
xor
int3
call
loop
add
out
and
test
dec
xchg
and
jo
ret
xchg
lods
outsb
pop
in
call
in
loope
push
rorl
add
iret
es
push
sub
loopne
jne
scas
es
mov
mov
add
jno
paddsw
out
push
data16
andb
mov
test
repnz
sbb
fcomip
sbb
shr
xor
add
pop
xchg
insl
jp
add
jnp
pop
pusha
les
jns
popf
adc
lret
in
add
mov
mov
sar
dec
pop
sub
jb
mov
lods
xchg
xor
jns
insl
jnp
sub
or
insl
cli
dec
aas
mov
call
dec
or
xchg
mov
or
mov
xor
jns
sbb
sbb
test
fcmovb
sbb
add
mov
imul
mov
add
or
jl
js
mov
movsl
push
adc
inc
dec
add
imul
push
jg
subl
jns
sub
inc
stos
sub
cmp
cmp
imul
movsb
cmp
or
fcoms
in
dec
push
popf
loopne
fs
addl
into
adc
test
stc
pop
cltd
mov
pop
pop
addr16
aas
add
mov
xchg
jnp
adc
add
ss
in
sub
cmp
faddl
sub
pusha
dec
and
cld
enter
repz
cmp
or
jb
dec
cli
imull
cmpsb
cmc
dec
icebp
nop
loop
or
or
aam
mov
idivl
cmp
mov
loop
sub
and
lret
push
shrl
and
push
mov
jns
nopl
shrl
call
outsb
sub
xchg
mov
inc
push
test
mov
xor
push
lods
pop
mov
addr16
cs
sub
ja
jne
pop
testb
mov
adc
cltd
fucomip
jno
outsl
sub
push
mov
add
add
and
jg
popf
add
xchg
or
dec
sti
pop
and
int3
xchg
dec
out
sbbb
adc
loope
push
test
or
ret
data16
ja
mull
mov
in
cld
mov
add
ds
mov
loop
je
cld
je
shlb
mov
js
ret
out
std
lock
aas
pop
testb
jbe
adc
lods
add
icebp
jecxz
adc
out
stos
and
icebp
push
cli
xchg
cmp
and
cmp
jecxz
cmp
push
mov
push
pop
cmp
int3
push
cmp
cmpsb
addr16
fs
mov
popf
push
xchg
clc
div
mov
insb
sbbb
pop
cmpsl
adc
mov
or
cmpsl
push
in
and
faddl
cmp
lret
jb
imul
xor
in
imul
push
js
or
inc
or
mov
fstps
scas
inc
pop
push
and
xor
sbb
mov
loopne
fldcw
leave
fldcw
add
insb
sbb
insl
int
xor
cmp
ss
xchg
int3
les
mov
or
scas
daa
dec
fwait
fs
cli
add
loope
mov
stos
adc
and
xchg
inc
sbb
ficomps
dec
push
mov
outsl
hlt
int3
sub
outsl
pop
push
in
xor
mov
int
pop
sbb
outsl
idivl
out
loop
push
pop
clc
es
push
jnp
aas
cltd
arpl
xor
push
sub
rcll
add
and
add
movsb
sbb
std
call
jmp
sub
jle
and
scas
dec
ljmp
aam
inc
leave
dec
outsb
icebp
xchg
insb
stos
loop
aam
sbb
aas
jle
adc
mov
xlat
out
lds
pop
add
filds
xchg
clc
push
loope
mov
popw
lods
cli
inc
loopne
jno
mov
jo
and
stos
les
sti
pop
insl
mov
xor
mov
clc
sub
int3
push
xor
jo
stos
add
stos
mov
mov
xor
mov
mov
mov
pop
jbe
or
xor
cmp
jg
cmp
and
add
cmp
pop
scas
leave
inc
adc
test
nop
movsl
jbe
adc
lds
stos
gs
bound
cwtl
lea
cltd
pop
pop
xor
ficomps
sbb
out
scas
mov
shll
push
leave
mov
push
mov
add
push
inc
stos
stos
out
xor
dec
xchg
inc
loope
aam
lods
mov
test
sbb
scas
insb
xor
cmpl
jmp
or
sub
and
stos
cmp
mov
scas
mov
aas
fwait
insb
cmpsl
mov
outsl
mov
hlt
xchg
lock
push
fucomip
insb
dec
ss
hlt
mov
mov
or
repnz
mov
rorb
and
jne
shr
add
dec
movsb
in
imul
ucomiss
mov
shrl
inc
sbbl
and
push
mov
cmc
test
cmp
subl
jns
dec
lret
push
insb
into
int3
and
fs
loop
jl
mov
sbb
mov
inc
das
out
or
daa
xchg
inc
idiv
aad
jne
or
inc
push
inc
out
mov
pop
xchg
cltd
popa
dec
orb
cmpl
sbb
stc
dec
popf
imul
into
and
into
jp
cmpsb
mov
stos
jg
mov
out
xchg
cwtl
xchg
push
or
xchg
mov
stos
rcr
js
popa
aas
add
jo
pop
cwtl
ja
cmp
and
inc
sub
outsb
mov
xor
xorb
cli
rcll
pop
and
jle
sarl
pop
and
pop
shrl
in
and
and
push
add
mov
sub
pop
popf
fwait
xchg
hlt
mov
shlb
pop
dec
into
push
cmp
fs
add
mov
sbb
mov
mov
dec
ret
leave
int3
aam
push
add
push
in
and
fcoms
cmp
mov
sbb
sbb
pop
lock
mov
mov
sub
inc
je
or
mov
sbb
or
mov
cwtl
sub
mov
popa
je
lcall
mov
dec
inc
addb
or
stc
xor
dec
out
pop
dec
pmullw
imul
add
and
pop
add
daa
or
cmp
cwtl
cmp
sbb
nop
call
lds
dec
inc
ss
es
jl
add
xchg
scas
lock
popa
push
lahf
push
cmp
mov
ljmp
daa
imul
cmp
sahf
js
or
pop
jmp
jl
pop
sbb
lea
adc
les
rep
mov
fildll
inc
fcompl
insb
xchg
xlat
push
lahf
inc
or
mov
arpl
add
and
adc
and
scas
aad
mov
cld
andl
fs
pusha
push
enter
in
daa
xor
mov
nop
sub
fsubrs
lods
sbb
rorl
inc
xor
mov
ret
out
inc
add
or
xor
in
xchg
jle
jns
dec
aad
cwtl
sti
xchg
jnp
mov
add
outsl
jge
mov
jecxz
mov
rcr
jl
push
pusha
pusha
std
and
xlat
jle
out
outsl
orl
adc
jmp
mov
add
cmp
aad
inc
test
mov
jg
shll
jg
or
add
xor
bnd
sarb
out
in
or
js
xchg
pushl
loop
jle
push
jb
cmp
mov
xchg
push
sbb
jne
sbb
in
xchg
shlb
dec
xchg
xchg
sbb
ds
jl
mov
pop
add
mov
fadds
mov
dec
pop
push
inc
jne
incb
push
mov
xchg
pop
mov
sub
out
inc
mov
lcall
xchg
add
call
dec
pushf
mov
lods
shrb
mov
sub
leave
push
cli
and
dec
push
xchg
aad
divb
ja
bnd
addr16
outsl
cld
fldl
test
xor
into
das
mov
mov
xchg
nop
dec
cltd
cmp
cmp
xor
sub
test
imulb
mov
pop
cmp
into
js
and
in
aaa
jp
dec
fwait
mov
orb
adc
add
lcall
pop
push
push
es
fisubs
add
cmpsb
notb
in
bound
add
pop
xchg
imulb
inc
out
jno
cmp
xchg
lret
mov
lods
push
lret
adc
dec
fcoms
addr16
mov
cmp
mov
icebp
cmp
add
dec
push
mov
shlb
nop
jmp
sti
xor
mov
fs
add
xchg
imul
neg
xchg
xchg
scas
lock
aam
jle
mov
jno
test
test
add
aaa
sbb
push
nop
lock
sbb
mov
pop
cmp
xor
jo
mov
hlt
dec
dec
pop
jmp
pop
mov
add
dec
aad
lcall
inc
outsb
mov
pop
push
das
xchg
clc
push
jg
fldenv
pop
xchg
push
fimuls
leave
push
inc
test
mov
jle
mov
add
cmpl
orb
pop
adc
push
fistl
lods
mov
sbb
aaa
inc
ljmp
push
mov
mov
jge
rcr
imul
push
ret
cld
in
iret
orb
add
jae
js
mov
inc
cltd
out
pusha
out
gs
faddp
lahf
cmp
and
ficoml
xlat
sbb
movsl
stos
jmp
xchg
xchg
mov
popa
cmpsl
pop
inc
out
sbb
cmc
cli
dec
scas
movsb
in
int
lods
lods
cmpsl
push
mov
push
xchg
xor
lods
mov
lods
leave
adc
lods
ror
es
inc
lods
insb
rep
lret
lret
inc
cmp
cmpsb
xor
bound
sbb
outsl
dec
jecxz
test
in
ds
mov
jae
data16
push
out
pop
fs
fimuls
rolb
roll
cmpsb
and
repnz
sub
xchg
cmpsl
mov
pmullw
xchg
daa
dec
in
pushf
shll
orb
cld
sarb
or
cmp
sahf
fidivrl
mov
push
mov
and
ret
test
int3
pop
push
jnp
popf
or
pop
sbb
mov
loopne
fidivs
lret
out
mov
repz
cmp
sbb
push
mov
fstl
test
pusha
lds
adc
xor
inc
push
into
xlat
xchg
sbb
pop
dec
repz
pop
fwait
stc
mov
flds
mov
adc
repnz
mov
enter
xchg
pusha
add
push
or
aad
mov
in
jle,pn
sbb
rcrl
mov
arpl
mov
add
jl
adc
scas
mov
push
mov
jge
pop
adc
jmp
mov
aam
mov
repz
nop
orb
dec
sub
outsb
enter
mov
cmpsb
pushf
mov
xor
sbb
adc
jp
in
push
dec
lods
insl
int
call
xchg
jp
pop
jbe
mov
cltd
movsl
mov
jp
ljmp
inc
cld
daa
xchg
and
push
xchg
dec
pop
xlat
inc
add
xchg
in
adc
or
add
fnstcw
test
das
add
test
fcoms
push
call
addb
lds
pop
cmp
in
pop
adc
mov
stos
inc
decb
xchg
leave
ja
int3
mov
inc
cwtl
movsl
jle
cmp
dec
push
cmp
dec
jb
sub
ss
pop
mov
push
mov
mov
jmp
int3
xlat
in
jmp
ret
push
xchg
pop
and
push
jmp
pop
jl
cmp
inc
mov
popf
sub
add
add
sbb
pop
xor
pop
push
jo
pop
aaa
push
inc
pop
and
jnp
pop
cmc
rclb
imul
jge
cmp
fldenv
je
lods
mov
jecxz
ljmp
stos
ret
mov
mov
push
pusha
xor
sti
sbb
sahf
js
movsl
inc
je
rolb
rorb
scas
inc
cwtl
cmp
pop
fsubrl
testb
xor
leave
xor
loope
lock
xor
xchg
xlat
in
popf
xchg
push
xlat
pop
rcrb
stos
scas
jmp
movsb
jne
fidivl
xchg
cmp
stos
sbb
cmp
jo
incb
pop
mov
jle
mov
insb
inc
outsb
in
call
lahf
xchg
pop
lock
out
push
jle
lret
out
mov
dec
push
fsubrp
aam
push
mov
mov
and
popa
dec
mov
cmp
inc
aad
cld
outsb
lods
dec
sahf
dec
lcall
ficomps
mov
call
das
xchg
mov
lods
ja
lcall
pop
call
sub
cmp
inc
xor
and
insb
mov
pop
popa
sbb
jne
and
sub
nop
push
or
std
arpl
sub
pop
cmp
test
jl
out
jno
lock
xchg
pop
test
xor
lret
iret
sub
fs
aas
mov
cmp
cmp
fwait
mov
or
sahf
inc
pusha
xchg
repnz
xchg
fdiv
jle
ret
dec
sbb
movsl
cmp
mov
xchg
jne
jg
mov
in
mov
jo
shll
jp
add
mov
mov
or
lret
push
xchg
jns
xchg
arpl
mov
push
test
cmp
aas
xchg
pop
xchg
xchg
jno
sti
stos
stc
xlat
or
push
mov
lods
je
in
gs
gs
cmp
cmp
jbe
push
pushf
push
sub
pop
popa
insl
outsl
les
push
insl
mov
push
push
sbb
popa
xchg
in
adc
insb
movsb
adc
testb
call
pop
jno
dec
test
add
ja
mov
lcall
sub
imul
jmp
ret
xorb
mov
adc
in
sub
mov
add
jge
xor
xor
fcmovb
pop
mov
push
mov
stos
sub
inc
xchg
sub
ret
int
mov
mov
mov
dec
sbb
mov
push
sbb
sti
cmp
fdivrl
cli
jnp
sbb
roll
push
inc
and
dec
cld
sub
cmc
cli
jmp
mov
test
cmp
and
pop
jle
xchg
mov
mov
and
inc
mov
out
jns
inc
addb
push
push
incl
xchg
ds
jnp
mov
nop
sbb
je
push
int
les
sub
cltd
into
adc
enter
cmp
sbb
cmp
les
int
dec
mov
pop
addr16
xor
pop
in
imul
fdivrs
push
pop
mov
lahf
fnstcw
mov
dec
push
pop
out
pop
bound
les
leave
icebp
sub
fstpl
adc
push
or
jp
dec
xor
outsl
jb
jns
add
xorl
in
jbe
je
push
pusha
inc
and
mov
shlb
shlb
std
sbb
into
movsb
ja
in
std
rorb
arpl
add
mov
cmp
jp
outsl
and
mov
jge
sarl
out
aas
push
in
xchg
mov
mov
mov
mov
enter
or
lcall
scas
out
and
xor
inc
sbb
sbb
sbb
std
inc
jno
inc
pop
rorb
mov
out
fisttps
test
sub
inc
cli
les
sub
sub
push
in
fiaddl
insb
sbb
and
xor
add
std
ja
in
jl
jge
test
sub
ds
lahf
xor
xchg
push
adc
xchg
push
out
sbb
outsb
xchg
inc
int3
push
sbb
cmp
jmp
movsl
xlat
dec
loope
cmpl
fwait
bound
fsubrs
adc
in
in
add
shr
cmovo
mov
dec
cmp
inc
mov
insl
jecxz
addl
das
shrb
push
inc
mov
out
imul
mov
test
mov
daa
int3
leave
xchg
mov
and
icebp
rcrl
dec
shlb
in
jle
jmp
test
xchg
inc
ljmp
aad
sub
push
push
leave
js
xchg
dec
enter
pop
pop
adc
cmc
scas
pusha
jle
mov
sarb
cltd
pop
sub
cwtl
ss
into
xchg
cmpl
jns
push
pop
stos
enter
inc
aam
inc
ret
repz
out
fildl
adc
mov
pop
mov
sbb
push
aam
aam
orb
inc
jge
lods
lcall
sti
jbe
add
jecxz
jge
sbb
mov
jo
stos
imul
sbb
jmp
push
jl
popa
js
cmp
xchg
inc
adc
clc
push
adc
sahf
cwtl
dec
lahf
lods
xor
filds
loop
jns
push
jbe
stos
or
mov
shll
and
ss
xor
aas
fxch
add
mov
inc
nop
sbb
and
mov
test
iret
movsl
leave
push
loopne
add
pushf
ljmp
icebp
andb
mov
loopne
lcall
es
and
push
pop
sbb
out
repz
jp
inc
sar
cmp
push
inc
sub
mov
sub
xchg
ds
adc
ror
dec
test
cld
ljmp
loopne
sbb
cmpsl
addr16
ret
mov
mov
xor
lock
jp
ljmp
or
cltd
xor
loop
xchg
xchg
jp
test
or
pusha
jmp
push
pop
sbb
das
imull
ret
sbb
mov
mov
mov
jl
lcall
pop
xchg
movsb
aaa
pushl
mov
popf
int3
jge
jge
push
rcll
sub
xchg
ja
pop
shrb
fistps
mov
scas
adc
xchg
outsb
jecxz
jns
sahf
sub
shll
inc
jge
mov
shlb
mov
xchg
mov
xchg
jb
push
sbb
cltd
jp
fdivr
add
je
inc
dec
mov
cmp
scas
pop
fsub
lods
push
jns
adc
movsl
in
mov
sbb
xor
rcrb
fwait
xorb
test
jo
mov
jbe
fiaddl
aas
in
ja
jb
stos
mov
push
inc
sahf
int3
cltd
out
push
addr16
push
decb
inc
xor
push
fmul
hlt
mov
jecxz
imul
in
dec
lret
cmp
mov
fs
cmp
sbb
xor
cli
xchg
rolb
loop
and
in
pop
sbb
mov
pop
dec
pop
cmp
and
inc
in
repz
in
lret
insl
xor
adcl
movsl
mov
fisttpll
mov
lcall
mov
bnd
test
or
ds
mov
cmp
mov
mov
dec
inc
cld
rorl
nop
repz
jge
popa
call
bound
lcall
mov
pop
and
mov
xor
mov
push
mov
pop
in
scas
mov
out
adc
mov
cld
sub
rclb
loop
xor
aas
xchg
lret
cmovs
pop
scas
out
add
addr16
mov
dec
repz
jns
pop
ds
pop
les
add
js
xchg
or
imul
xchg
mov
aad
data16
dec
xor
jmp
mov
pop
mov
xor
pop
in
out
mov
add
xchg
or
fcmovnu
lds
lock
mov
repz
iret
xchg
adc
add
pop
xchg
push
pop
dec
stos
add
pop
mov
mov
divl
pusha
mov
jp
jo
jp
lcall
xchg
dec
test
aas
jmp
out
and
mov
or
cmp
inc
mov
inc
rcr
sbb
js
adc
sbbl
pop
dec
cmp
popa
cmp
xchg
push
xchg
mov
xchg
mov
add
fst
mov
cli
sbb
mov
int3
in
fsubrl
jno
test
hlt
fists
cmp
cltd
pop
cli
add
inc
pavgw
stos
sti
mov
push
cmp
ds
mov
lahf
or
push
ss
out
xlat
push
out
xchg
or
sbb
push
sbb
mov
stos
jb
mov
loop
jl
imul
lock
insb
pop
enter
cmp
lods
aam
mov
jl
loopne
aas
mov
int
ljmp
xchg
xchg
repnz
jo
sbb
dec
pop
sub
neg
mov
vunpcklps
pop
push
enter
mov
mov
ljmp
outsl
jmp
pop
add
push
out
jne
fsubrs
mov
incb
into
mov
mov
adc
bnd
flds
jns
add
call
mov
dec
fbstp
out
xor
ret
adc
jmp
xchg
aad
push
cmp
scas
in
loopne
add
inc
pop
cld
sub
push
xorl
mov
mov
sub
jb
repnz
inc
in
and
pop
leave
push
or
jb
push
xchg
cld
inc
hlt
jecxz
fldcw
call
dec
xchg
daa
ss
cs
mov
pop
pop
cmc
jne
mov
pop
add
out
mov
lea
adc
jle
popa
test
xchg
sub
pop
enter
call
pop
or
inc
and
aam
mov
mov
pop
mov
jnp
dec
xor
fcompl
popf
out
in
fsubs
popa
imul
cli
mov
and
lret
dec
push
cltd
leave
lcall
cltd
rolb
enter
ret
lock
repnz
dec
aam
push
int3
inc
inc
test
loop
repz
fsubrl
or
and
mov
push
cmc
xchg
mov
inc
movsl
cmp
push
movb
bound
sbb
add
sbb
fcoms
scas
lret
faddl
mov
sbb
xchg
pop
push
in
add
or
lcall
repnz
aas
push
mov
cmpsl
lods
dec
or
inc
sbb
sub
enter
pop
jge
cltd
in
dec
xchg
mov
mov
cmp
push
push
jecxz
test
idivb
mov
xor
arpl
mov
dec
cltd
sub
cmp
push
lahf
jo
push
jne
enter
add
adc
prefetch
mov
mov
nop
int
pop
arpl
cmpsb
incl
cmp
and
jle
ds
jbe
insb
or
popf
int3
sub
mov
cmc
jae
jb
jmp
or
imul
sub
xor
inc
xlat
das
inc
sbb
stos
push
inc
imul
add
popf
push
xor
or
inc
ds
mov
sbb
mov
pop
xchg
cwtl
jl
sarb
cmp
std
out
stc
jp
test
dec
cwtl
rolb
jo
imulb
ss
lahf
and
mov
mov
in
cwtl
sahf
inc
sbb
aad
ss
sti
push
scas
jo
pop
decb
test
mov
lea
hlt
mov
jp
movsb
inc
or
lretw
add
ljmp
add
pop
dec
lret
push
xchg
retw
jo
sub
lods
xchg
mov
orl
lock
add
mov
ret
mov
je
stos
mov
ficompl
aam
push
lock
and
outsb
call
iret
call
mov
insl
ss
cmp
xor
sbb
push
pushf
out
cmpsl
mov
push
add
or
sub
xchg
in
lret
mov
add
jmp
insl
movl
lods
addb
fwait
jge
out
subl
sub
xchg
ja
sti
cld
fistl
lahf
and
jae
sub
sub
int
adc
cmp
cwtl
pushw
xchg
xchg
push
cld
and
sbb
jecxz
mov
clc
cmp
fbstp
cltd
out
or
daa
jae,pn
add
jno
ja
add
imul
lcall
mov
lcall
and
dec
lret
test
or
fdivrp
sbb
mov
mov
mov
mov
pminub
push
sbb
loope
cmc
int3
scas
js
mov
cmc
rcrb
stos
jne
inc
push
std
mov
and
mov
push
adc
mov
sbb
mov
adc
out
and
xor
in
sbb
fiaddl
mov
or
rolb
mov
int
inc
pop
sub
call
movsl
adc
dec
in
stos
sbbl
dec
loopne
popa
nop
mov
mov
out
or
inc
test
in
out
mov
or
inc
xorl
stos
push
ds
xchg
fadd
push
outsl
dec
clc
push
mov
cmpsb
xchg
aaa
xor
inc
dec
sub
inc
cmp
or
add
jecxz
fsub
mov
outsl
adc
fstps
or
in
bound
dec
test
mov
pop
cmp
mov
out
adc
add
mov
dec
mov
xorb
test
out
jl
xlat
es
inc
aaa
bound
jmp
inc
es
movsb
jae
lret
bound
aas
adc
xchg
roll
push
and
pop
pop
clc
pop
cld
test
lcall
das
mov
jbe
inc
push
sbbl
xchg
push
mov
push
jg
lds
and
out
inc
xchg
stos
nop
cwtl
aaa
hlt
or
jb
mov
in
inc
adc
cmpsb
std
fistpl
mov
mov
add
ficoml
test
sub
xchg
sti
cld
mov
jmp
pop
xorb
ss
xlat
lods
push
ja
jbe
ret
push
aad
notl
cmp
and
cmpsb
fwait
test
cmpsl
mov
pop
xchg
fildl
mov
test
hlt
fstl
xchg
test
fwait
xor
mov
std
in
xor
mov
dec
push
stos
inc
addr16
jo
cmp
xor
mov
shr
fstpl
mov
dec
mov
test
dec
int
mov
jns
inc
pop
push
xor
push
push
fidivrs
mov
into
lea
outsl
or
pop
xor
lret
xlat
ds
mov
mov
sti
imul
sub
das
and
xorl
lds
test
arpl
add
xchg
adc
int3
and
int3
mov
xchg
mov
pusha
stc
fwait
ds
mov
fs
inc
pop
push
cmp
stos
mov
mov
xor
sub
movsb
mov
sbb
or
jle
movsl
push
popf
pop
sbb
pop
shrb
fbld
in
rorl
mov
xor
ret
je
notb
mov
enter
sbb
shlb
es
adc
inc
sbb
lcall
sub
test
lods
icebp
into
xchg
lret
inc
mov
fists
cli
call
mov
jp
je
gs
lds
lods
sub
xchg
mov
lods
pop
mov
add
xchg
std
std
sti
mov
push
lret
sbb
dec
adc
xchg
pop
cwtl
cmp
stos
jno
int3
cmp
sahf
lret
fbld
and
rolb
fwait
push
clc
push
inc
repz
icebp
jb
sbb
or
mov
pop
xchg
mov
sub
mov
mov
cwtl
dec
cltd
leave
lods
push
sub
nop
cltd
call
jge
rcll
jle
and
leave
in
push
jl
inc
pop
lcall
push
and
mov
les
jl
scas
push
iret
xor
push
subb
into
aas
les
push
jno
push
inc
sbb
icebp
adc
lcall
mov
xchg
shrl
mov
in
push
bound
orb
lods
inc
repz
test
cwtl
fistpl
add
push
sub
stc
push
in
push
xor
inc
xchg
adc
cwtl
ror
mov
fdivr
mov
dec
xchg
scas
scas
das
gs
and
mov
fs
iret
jnp
pusha
repnz
or
je
cmp
popf
inc
cmpsb
mov
or
loope
cmp
int3
lds
pop
test
arpl
pop
sub
xchg
std
sub
into
cwtl
mov
in
dec
push
xchg
mov
arpl
add
data16
hlt
jl
loopne
outsl
inc
xor
dec
leave
movsb
adc
sub
aaa
xor
or
jo
push
add
pusha
outsl
dec
sbb
sbb
imul
mov
stos
inc
cmp
stos
pusha
and
fadd
cmp
mov
mov
or
inc
pop
sbb
lds
xchg
loopne
cmp
pop
mov
loopne
sahf
inc
fwait
push
out
sahf
jl
pop
sub
add
sti
dec
out
jnp
aam
ljmp
test
std
and
gs
lock
mov
pop
test
fsubs
test
push
xor
jnp
cmp
xor
xor
pop
pop
push
jbe
mov
pop
pop
jg
and
push
push
add
pop
sbbl
cld
std
and
dec
pop
pop
xor
fstp
mov
mov
imul
js
mov
cmc
and
xchg
cmp
int
leave
lcall
in
movsb
push
pushf
leave
cs
add
in
daa
xorl
fisubs
lods
out
inc
insb
cltd
sub
sbb
cmp
jmpw
imulb
cmp
xchg
and
in
adc
int
jp
mov
ret
add
xchg
call
cmp
inc
sub
int3
fwait
sahf
dec
orl
cmp
loopne
leave
cmp
imul
cltd
push
and
pop
mov
dec
fimull
fs
and
fimuls
jno
xchg
sti
outsb
icebp
push
sub
mov
fstpt
negl
outsb
jno
cwtl
and
sub
lcall
pop
data16
cmp
and
mov
pusha
mov
inc
out
je
out
and
xchg
pop
ret
shll
aam
sti
xlat
int
xchg
and
lahf
xchg
subl
mov
push
movsl
fcmovbe
test
das
pop
inc
stos
push
out
lods
cmpsb
fcmovnb
in
mov
cs
icebp
jl
lahf
cmp
adc
andb
cli
insb
inc
icebp
fsubrs
inc
and
inc
mov
pop
pop
inc
and
mov
iret
mov
pushf
daa
lods
xor
fsubl
fildll
repnz
sub
rcr
sti
rcrb
cli
ret
adc
mov
clc
test
imul
enter
jp
add
sub
fs
mov
fisubl
jle
sbb
mov
ds
mov
ret
inc
and
inc
sbb
jmp
push
mov
dec
sub
inc
outsb
pushf
or
jg
sub
adc
andl
jmp
clc
fwait
push
dec
repz
inc
jno
mov
jmp
repnz
sbb
cmp
addr16
push
mov
je
mov
jg
ss
add
in
xchg
icebp
push
mov
pushf
sbbb
cmp
hlt
xchg
mov
test
ffree
daa
mov
test
int
scas
enter
xor
into
ret
sbb
orl
gs
xchg
rorl
test
xchg
cmp
mov
fisubrs
inc
cmc
and
rorl
lods
stos
dec
cmpsl
jns
iret
pushf
jnp
jecxz
adc
bound
and
les
dec
cmpl
loopne
mov
dec
xor
adc
mov
lea
jmp
mov
xchg
outsb
xchg
fnstenv
fildll
fnstcw
loopne
sahf
and
test
sub
cmp
stos
inc
push
mov
mov
flds
mov
scas
add
add
or
call
sahf
stos
lods
adc
mov
out
push
int
jg
jno
popa
and
arpl
inc
imul
pop
cmp
stos
das
cmpsb
jne
iret
mov
insl
jmp
pop
cmp
or
ds
and
mov
std
or
sti
shl
in
jae
call
sahf
push
push
adc
lock
mov
add
mov
js
fsubrs
xor
pop
sub
sub
das
jecxz
popa
lcall
subb
out
insl
sbb
cmp
xchg
pop
jae
nop
call
or
int3
or
sbb
cmp
repz
or
push
addr16
mov
dec
jne
sbb
sbb
fsubrs
push
je
pop
lret
fcompl
jecxz
push
or
push
push
inc
add
inc
pop
test
jg
xchg
jae
dec
or
imul
repnz
test
shll
pushf
and
rolb
mov
insb
cmp
sub
mov
shll
push
in
xor
sarb
enter
add
mov
inc
jae
cmc
aad
cwtl
cmpsl
pop
mov
mov
pop
or
ja
jp
sbb
jno
add
dec
mov
push
ljmp
data16
inc
xor
adcb
cmp
or
push
lods
adc
aam
mov
out
or
mov
mov
mov
jno
shlb
jmp
pop
push
adc
mov
inc
aaa
sub
stc
insl
loop
adcb
adc
imul
pop
dec
push
cmpsb
loop
ret
nop
stos
das
lcall
add
aas
and
cmp
out
pop
test
push
adc
int
pop
xchg
imul
aaa
mov
mov
stc
jmp
xchg
jge
add
lea
aam
dec
dec
movsb
push
enter
jge
lea
mov
dec
notl
pop
pushf
mov
jno
sub
mov
out
ljmp
pop
and
dec
sbb
mov
xchg
xor
fsubrp
stos
mov
mov
ja
pushf
leave
not
ja
push
aas
out
movsl
mov
push
movsl
jp
push
dec
cmpsb
out
pop
xlat
jl
inc
daa
mov
fbld
aad
xor
out
or
jno
pusha
aad
fbld
imul
popf
push
jo
out
jl
and
jecxz
sub
in
pop
loop
sbb
sub
or
aad
cwtl
repnz
and
inc
das
cld
xchg
mov
push
rolb
rorb
or
and
sbbl
in
or
cwtl
dec
inc
or
test
enter
sahf
push
addr16
or
push
scas
lret
call
leave
dec
xchg
push
das
fwait
movsl
repz
cmp
add
ds
pop
scas
adc
psrad
imul
mov
fdivrp
adc
pushf
popf
sub
in
sahf
jl
aas
cltd
adc
mov
repz
or
cltd
ret
mov
addr16
push
icebp
dec
add
push
inc
fsubl
js
mov
mov
dec
xor
xchg
jns
cld
arpl
daa
xchg
and
add
and
jbe
xor
jle
mov
mov
mov
mov
cwtl
mulb
pop
push
mov
sub
sub
xchg
xchg
mov
ret
loop
mov
xor
divb
repz
mov
mov
cltd
mov
inc
js
jbe
mov
xor
push
cli
add
jmp
push
inc
lods
add
test
lea
fistpll
dec
cmp
jmp
aad
push
dec
xchg
adc
jp
je
pop
and
xorl
pop
call
push
xor
xchg
int3
mov
jno
xor
ss
dec
nop
mov
fildll
icebp
out
add
lcall
mov
lret
leave
fadds
aad
ja
xor
sbb
inc
mov
repnz
stos
insb
inc
mov
cmp
aad
test
mov
outsl
lods
mov
pop
aas
rcll
dec
test
aas
cmp
xor
pop
dec
lret
or
ja
xor
xor
cwtl
and
mov
mov
test
xor
mov
outsl
aam
sub
sub
sbb
push
sti
sub
xchg
hlt
stc
enter
pushl
adc
xorb
jmp
inc
fmull
sbb
arpl
sarb
inc
mov
pop
mov
push
sbb
push
xchg
jno
sbb
adc
icebp
xor
loop
rcll
lods
sbb
sub
dec
popf
loope
sbb
fwait
dec
add
loope
add
gs
inc
inc
mov
fnop
xchg
push
iret
pop
out
xchg
jno
jns
or
sbb
sub
mov
adc
int
imul
push
xor
cmp
dec
arpl
shrb
in
or
sub
out
mov
out
sbb
pop
mov
mov
add
daa
rorb
int3
xor
xor
mov
es
je
push
ljmp
mov
fcomi
test
sbb
add
jp
jne
mov
push
mov
mov
les
in
addr16
cmp
adc
faddl
js
pusha
cmpsl
fiadds
mov
push
cmp
loope
dec
mov
icebp
sub
frndint
add
and
stos
shlb
ljmp
mov
pushf
xchg
mov
das
sub
pop
ret
pop
push
pop
jecxz
ljmp
aas
fstpl
out
lods
ret
xchg
jmp
clts
std
outsl
add
loope
cli
movsb
xor
jnp
aas
jb
or
jle
or
pusha
jno
fnstcw
sub
insb
pusha
and
sbb
dec
or
jnp
sbb
add
das
movsl
ja
jmp
fldenv
icebp
loope
ret
scas
xchg
cli
lcall
lahf
mov
xchg
hlt
and
movsl
pop
pop
cltd
cltd
nop
adc
xchg
dec
lcall
scas
and
xchg
xchg
fidivs
pop
sub
and
stos
loop
mov
iret
das
jo
mov
mov
in
jp
adc
add
je
nop
cmp
xchg
outsl
mov
mov
push
std
fwait
stos
add
inc
inc
stc
addr16
fdivs
lea
loop
aam
in
sub
dec
iret
lods
enter
ret
pop
mov
pop
lcall
jae
es
stos
sub
lcall
sbb
mov
mov
add
ret
scas
out
popa
xlat
ret
jle
pop
pop
in
xor
cmpsb
mov
stc
xorb
pop
push
sti
aad
lods
adcl
int
push
lea
cmp
dec
add
ret
dec
jmp
jecxz
push
pop
lea
mov
jo
xchg
in
add
out
inc
push
fcompl
mov
inc
mov
inc
and
sahf
add
ds
pop
cmpsl
loop
std
and
adc
sbb
lahf
mov
mov
loop
sbb
cmp
mov
push
jecxz
cmp
xor
jle
popf
les
mov
clc
es
cwtl
mov
cltd
in
mov
imul
adc
xor
push
inc
testl
sub
cltd
ret
mov
int
popf
mov
dec
jno
adc
pop
jne
test
popf
das
push
cmpsb
jno
fbld
imul
xor
aam
and
jecxz
inc
in
lods
call
jbe
add
xor
or
xchg
loop
in
add
mov
leave
jmp
adc
push
ljmp
sub
loopne
enter
inc
add
jb
xchg
add
outsb
push
dec
xor
xor
out
xchg
cltd
lods
jo
loopne
jecxz
xor
mov
in
sub
jne
xorl
adc
rclb
sub
scas
mov
mov
pushf
imul
mov
push
pop
sub
xchg
push
test
cmp
sub
xor
das
push
mov
lods
aam
sub
out
mov
mov
inc
andl
push
adc
inc
shll
scas
test
mov
jae
aas
outsl
mov
cwtl
fldt
pop
stos
jecxz
pop
push
cmpl
insl
jae
push
fsubs
adc
dec
jno
push
test
test
add
jle
bt
xor
mov
push
faddl
dec
call
push
dec
movsb
pop
inc
xchg
push
sbb
std
ret
or
or
into
sbb
das
cmp
xchg
xchg
push
pop
fiaddl
icebp
jae
push
lods
dec
lods
pop
das
lds
lds
mov
xor
lds
cld
mov
xchg
loope
push
test
das
les
push
sbb
aam
cmp
add
jge
popf
scas
xchg
add
cmp
lea
out
inc
xlat
in
sbb
ret
pop
sbb
push
outsl
push
mov
and
stc
cmpsl
mov
cwtl
mov
hlt
push
dec
cmp
aam
pusha
add
add
sub
arpl
ret
in
sarb
or
and
mov
cld
nop
rorl
sub
dec
sbb
lea
cmpsl
and
jg
scas
scas
leave
ljmp
inc
shll
ja
int3
push
das
lcall
addb
mov
insl
cmpl
push
cli
jp
gs
out
jne
outsb
add
and
shrb
mov
orb
outsb
sahf
or
mov
cmp
jae
sbb
and
fcompl
xlat
mov
dec
inc
js
lods
lods
jbe
push
adc
loope
push
or
dec
cltd
jl
lods
inc
and
jg
jbe
mov
arpl
mov
mov
and
mov
jl
mov
je
adc
xchg
repz
repnz
push
xor
mov
stc
mov
inc
push
aam
xchg
jge
dec
sbb
rcrl
lahf
cmp
inc
pop
js
pop
mov
or
ja
ficompl
mov
fcmovne
mov
mov
aaa
mov
jle
add
jle
repz
mov
test
mov
movsb
mov
sbb
xchg
call
jb
int3
mov
int3
pop
mov
test
mov
xchg
add
push
aam
int
sub
cs
xorl
scas
jle
into
pop
enter
pop
jae
stc
inc
push
mov
sub
push
shrl
jmp
sub
in
mov
aam
fwait
or
jbe
andl
and
xchg
dec
imul
inc
mov
int
test
ja
sahf
mov
hlt
adc
sub
mov
mov
add
loopne
sub
in
add
xlat
ret
dec
stos
add
jns
insl
jae
sbb
test
icebp
ss
nop
imul
sub
add
and
add
int3
push
sbb
dec
into
dec
shll
pop
je
mov
or
sub
sub
arpl
out
sbb
adc
aaa
jecxz,pt
sub
mov
add
pop
add
push
lods
mov
jg
add
xor
adcb
insb
and
stos
lahf
test
movsl
les
mov
add
xor
adc
addr16
cmpsb
and
mov
lds
insl
bound
popa
adc
pop
cld
movsb
dec
lcall
mov
sti
adc
mov
popl
mov
fcoml
int
adc
cltd
and
out
popf
fists
sub
repz
out
inc
pop
lret
jb
lods
sub
lret
adc
or
arpl
test
push
fstpt
push
push
lret
outsl
mov
mov
xor
movsl
aam
cmp
mov
int3
movsb
jnp
mov
aam
mov
push
jle
mov
ljmp
pop
mov
lea
out
add
dec
sub
stos
fs
add
push
push
pop
inc
or
jbe
clc
and
push
test
or
scas
lods
dec
imul
out
dec
or
pusha
mov
idivb
jmp
xchg
je
push
push
mov
mov
lahf
add
rcr
add
mov
mov
clc
pop
dec
sahf
pop
adc
jge
std
daa
lds
or
pop
rol
push
movsl
add
lods
aad
jp
xchg
inc
sbb
inc
jl
push
lea
dec
shr
mov
fs
fyl2xp1
pop
dec
fwait
mov
sub
cwtl
xor
mov
in
xchg
inc
lods
push
out
jge
mov
xor
or
pop
repz
pop
mov
and
sbbl
ja
adc
push
inc
pop
and
jmp
pushf
repnz
cmpb
aad
aad
lds
mov
inc
std
push
shrl
fstp
sbbb
pushf
mov
enter
mov
sub
sbb
sub
lods
les
out
mov
pop
mov
xchg
pop
mov
fstps
mov
rcll
cmc
add
shll
dec
les
ffree
sbbb
dec
sub
daa
loop
lahf
rcrb
incl
mov
lods
jmp
jbe
movsl
mov
test
out
cmp
mov
pop
cmp
cmpsb
add
xchg
in
lcall
nop
push
cmc
cld
pop
inc
int
orl
mov
xchg
popa
sub
push
mov
adc
out
dec
repz
mov
stc
subb
adc
sbb
fs
dec
insb
repnz
and
lock
mov
test
sahf
mov
jmp
jns
mov
lahf
clc
imul
inc
cltd
or
xlat
ret
aad
loop
jbe
mov
or
test
testl
outsl
inc
mov
cmp
pop
or
dec
aaa
cmpsb
cmp
fadd
adc
jne
and
sbb
push
sbb
in
mov
rclb
in
dec
jecxz
dec
ret
into
cmp
cs
lods
sbb
cmp
pop
addr16
adc
incl
pop
sarl
mov
jbe
cmpsl
icebp
dec
ja
add
xor
dec
xchg
pusha
add
test
hlt
test
sub
cmpsl
adc
sbb
push
adc
call
faddp
push
bnd
scas
divb
xor
dec
ds
cmpsb
dec
testb
mov
in
mov
outsl
cmpsb
xchg
imul
pop
jl
push
fsubrs
jmp
push
ss
enter
movsl
and
mov
sbb
jne
sbb
sbb
ss
inc
xchg
cmp
ljmp
repnz
rcrb
sbb
das
cwtl
loopne
push
jp
xchg
add
and
aad
cwtl
daa
add
mov
inc
jecxz
in
xor
push
lahf
ss
push
mov
rorl
lock
mov
mov
push
or
lea
jno
inc
aas
push
lock
xorl
or
out
mov
cmp
movsb
and
test
push
js
xchg
fs
xor
adc
inc
sbb
add
ret
ds
leave
inc
adc
jns
mov
lock
arpl
int
push
js
test
xor
pop
imul
fidivs
mov
fildll
pop
fadds
out
cli
daa
in
rorb
mov
ret
push
pop
mov
mov
mov
lock
inc
enter
sahf
adc
loopne
imul
sub
in
ror
sub
xchg
aaa
aaa
imull
faddl
xor
dec
dec
pop
scas
add
mov
xor
pop
bound
sub
and
cmovbe
loop
mov
push
lock
idiv
xor
ljmp
sbb
hlt
xor
jge
testl
data16
cmpsb
pusha
test
insb
mov
xorb
xlat
std
jp
test
mov
xchg
jle
mov
mov
xchg
mov
stos
scas
adc
mov
jl
imul
lock
lods
xor
imul
dec
subb
and
idivl
test
mov
setp
lods
xor
mov
jl
xchg
inc
mov
lods
gs
dec
push
xor
jp
jo
inc
pop
push
add
push
dec
popa
sub
jae
mov
inc
jp
repz
inc
cmpl
pop
dec
test
jecxz
jo
out
sti
pop
push
cld
lods
sbb
addr16
sub
inc
xchg
dec
mov
popf
lds
mov
inc
mov
push
push
icebp
ljmp
jae
sbb
sub
insl
xor
pop
lods
mov
add
adc
js
mov
mov
mov
loope
inc
cmp
mov
dec
dec
add
aas
cmp
sub
cltd
repz
lcall
xor
les
scas
pop
daa
pusha
data16
jbe
pop
fstl
or
inc
out
mov
xchg
mov
sub
iret
sub
pop
cli
or
call
sub
and
xchg
sti
and
das
sbb
adc
pop
aas
mov
pop
push
cmp
out
jp
jge
repz
add
f2xm1
sbb
mov
mov
lcall
inc
inc
int3
push
aas
iret
xchg
add
repz
repnz
sbb
es
xor
xchg
pop
lds
mov
mov
jg
dec
pop
sub
les
out
cli
repz
lods
cmc
nop
gs
fistps
rol
and
cli
xchg
xor
enter
dec
pop
adc
int
xchg
data16
xor
rolb
movsb
sbb
mov
jb
pop
sbb
int3
sbb
stos
test
lods
dec
in
stc
je
add
insb
rcrl
or
icebp
pushf
out
sub
mov
iret
leave
mov
ja
filds
sub
jno
insb
fcoms
push
inc
pop
stos
lret
push
inc
sub
and
shll
push
repz
dec
cmp
sub
or
jbe
outsb
sbb
mov
mov
test
sub
xchg
lret
ljmp
movl
les
inc
pusha
fucomi
lods
mov
push
fsubrp
mov
mov
mov
in
out
jno
int3
mov
outsb
or
push
mov
mov
daa
cltd
cli
cli
inc
lock
push
iret
add
clc
jp
stc
adc
in
nop
xor
popa
inc
mov
mov
in
iret
fdiv
mov
fs
adc
push
cmpl
enter
sub
hlt
sub
fdivs
jbe
cmp
jne
xor
inc
leave
mov
fwait
push
sbb
pop
aad
scas
loopne
add
fs
enter
cmp
cmpb
hlt
mov
dec
xchg
pop
and
ds
mov
inc
mov
popf
mov
adc
sbb
stc
mov
pushf
sub
inc
scas
mov
sub
fiaddl
xor
rolb
sub
push
add
push
mov
addb
pop
jae
mov
jne
push
xor
jno
mov
pop
stc
sub
loopne
and
pop
stc
and
rcrb
xchg
mov
mov
shll
or
int3
inc
imull
and
movsl
dec
ret
out
push
cmp
lds
imul
jbe
mov
adc
repnz
inc
jbe
in
push
mov
mov
jge
xor
dec
mov
push
push
mov
jnp
mov
sbb
push
ret
xchg
fidivl
sbb
xchg
pop
out
xchg
imul
and
push
push
dec
inc
leave
xchg
std
or
aad
pop
push
adc
inc
rcrb
mov
xor
test
stos
mov
fs
js
pop
mov
outsb
mov
jno
sub
mov
int3
test
add
sub
mov
out
fnsave
aam
aam
repz
aaa
aas
push
mov
inc
fucomp
popa
jne
xchg
or
xchg
pop
shl
push
add
mov
outsl
fsubrs
ret
sbb
icebp
rorb
adc
iret
xchg
lods
decl
fstpl
sub
jle
add
cmpsl
sbb
mov
cli
sbb
stos
ds
inc
xchg
pop
fnsave
fdiv
scas
sub
fnstsw
hlt
mov
sub
hlt
jb
cwtl
sbb
std
fdivrs
inc
xchg
lods
pop
lods
mov
fcoms
jle
xchg
or
mov
test
aam
cltd
aam
insb
pop
addr16
fsubrl
bound
test
mov
aaa
fbstp
xor
mov
bound
push
mov
pusha
sbb
fidivl
stos
jne
pushf
outsb
and
out
ds
shr
push
es
rolb
fwait
add
add
scas
xchg
mov
testb
in
push
or
aad
lods
pusha
out
test
imul
mov
fsubr
std
pop
imul
jmp
and
jns
jmp
or
aaa
or
or
aas
clc
lds
popf
push
mov
pop
dec
in
cmp
in
and
in
ffree
push
and
xor
or
mov
inc
mov
arpl
fsubrs
mov
sarl
lock
or
push
popf
jb
mov
xor
pop
movsb
mov
pop
and
jb
pop
inc
xchg
ljmp
test
bswap
mov
stos
or
stos
clc
jns
cli
fnstcw
xor
inc
pop
xchg
in
clc
test
fisubrs
or
repz
mov
jb
cli
inc
xchg
push
adc
fisttpl
sub
push
jge
loopne
push
lea
rep
cmpsb
adc
sbb
test
stc
xchg
xchg
pop
sbb
test
inc
data16
pop
into
pop
sub
mov
xchg
sti
icebp
cmp
xchg
arpl
add
addr16
push
sti
stos
cmp
into
test
mov
cs
lds
jmp
ss
cmpb
imul
mov
xchg
mov
jge
xor
inc
iret
lcall
loop
cmp
mov
sub
pop
stos
adc
dec
or
dec
adc
sbb
dec
xor
mov
push
lods
rcl
push
xchg
xchg
pop
lods
inc
fildll
pop
test
push
inc
in
sahf
out
sti
xchg
push
mov
cmc
cmpsb
fstps
jp
inc
repz
lods
xorl
xchg
dec
push
inc
mov
xlat
addr16
add
mov
lret
imul
aad
jb
jge
lods
pop
push
dec
addr16
xor
out
leave
js
scas
push
sbb
cwtl
movb
sub
inc
cli
cmp
fucomi
mov
dec
cmp
outsb
popf
arpl
mov
mov
mov
std
cmc
pushf
jno
pop
jl
subl
mov
out
and
jmp
cmp
in
xchg
inc
scas
fcoml
dec
pop
out
popa
out
jmp
fwait
and
cmp
pushf
fwait
adc
jp
and
inc
inc
adc
push
dec
mov
sub
mov
mov
rcr
push
xor
xchg
data16
stos
adc
cmp
scas
in
mov
jne
xchg
and
jae
pop
leave
cmc
stos
dec
pushf
add
sti
inc
push
leave
xor
int3
pop
push
aam
sarl
pop
and
sbb
testl
movsl
mov
hlt
inc
jmp
stos
push
cmp
cs
xchg
test
scas
inc
daa
ret
gs
enter
iret
xchg
jbe
in
or
xchg
mov
add
sub
push
subl
fistpll
stos
lock
repnz
xor
scas
jmp
ret
out
aam
dec
and
add
test
mov
sbb
jl
pushf
ficoms
in
mov
sarl
jge
xchg
cmp
pushf
popf
pop
sub
adc
imul
add
outsl
cltd
mov
xor
mov
scas
inc
mov
sahf
scas
andb
mov
jge
pusha
dec
sub
mov
add
xchg
pop
sub
xor
fisubl
push
adc
lods
ret
arpl
fs
int
xor
inc
mov
dec
stc
adc
xchg
dec
sub
pop
or
push
lea
mov
and
push
aas
or
and
inc
ss
sahf
cmp
cltd
lcall
fiadds
movsl
testl
sti
adc
test
jmp
nop
mov
sbb
add
push
push
cli
mov
repnz
in
sbb
in
lcall
push
jbe
sbb
lret
test
andl
aad
xor
dec
cmp
pop
cmp
jo
and
push
and
pop
mov
imul
sbb
mov
mov
add
cmpsb
fs
xchg
sub
jns
pop
mov
push
mov
xchg
std
movsb
jbe
sarl
hlt
push
adc
jge
fmul
adc
inc
jge
cmpsl
mov
dec
ja
push
flds
jne
push
arpl
cmp
pushf
xor
adc
pop
add
pushf
pop
aam
push
popf
pop
shrl
mov
popa
xor
stos
rorl
sbb
pop
and
movsb
repnz
cmp
sbb
movb
fs
push
pop
add
jl
flds
cmp
js
and
ljmp
out
popa
hlt
xchg
jg
sub
shlb
xchg
imul
rcll
sbb
jno
cli
or
add
cmp
dec
jmp
cmp
fstl
insb
jge
push
push
cs
test
and
aaa
insb
jno
aaa
lret
jge
int
jbe
sub
fisttps
jns
push
scas
loop
cmp
push
insb
mov
mov
or
int
decb
push
loop
inc
sahf
sbb
xor
lds
bound
inc
adc
add
in
or
mov
xchg
add
outsl
cmpsl
cli
pop
push
sbb
and
jmp
sbb
enter
lds
inc
mov
in
mov
or
ret
enter
inc
mov
dec
aad
test
incb
lcall
and
adcl
fisttpll
sbb
jae
mov
shlb
push
clc
or
push
inc
dec
imul
out
and
outsl
dec
dec
xlat
sbb
pop
inc
mov
lahf
inc
and
rcll
mov
loopne
xor
nop
dec
sahf
jae
out
mov
sbb
jmp
iret
jmp
adc
lret
add
loope
jp
push
cs
jns
and
aam
es
mov
dec
inc
or
aas
aam
sub
addr16
roll
cmpsb
mov
push
xor
lret
fcmovnu
pop
pop
out
push
pop
lahf
jo
enter
dec
add
testl
sbb
xchg
mov
stos
and
clc
mov
add
popf
gs
mov
movsb
jmp
paddq
stc
rcrl
lea
pushf
mov
inc
jne
out
pushl
daa
push
xor
xor
fidivl
clc
test
fistpll
pop
or
sbb
aaa
enter
sub
sub
fidivrl
push
jnp
stos
mov
push
cmpsl
and
jns
fdivs
and
push
xchg
add
mov
dec
arpl
fcomp
push
js
fisubrl
add
mov
int
nop
push
adc
mov
xorl
push
leave
push
xchg
mov
std
push
scas
pop
mov
mov
and
loopne
jno,pt
jb
mov
ret
pushf
mov
sub
aam
nop
sub
imul
and
aaa
sub
jno
outsb
inc
mov
jno
inc
and
rolb
sbb
movsl
xchg
aas
ss
sub
outsb
es
scas
xor
nop
jo
inc
mov
fcoml
pop
lret
sbb
sbb
pop
inc
cmpsl
cmpsb
xor
jge
xor
jno
stc
int3
push
push
ljmp
pop
clc
sbb
dec
aad
or
mov
pop
loop
adc
or
lods
xor
fmuls
ja
mov
or
push
bound
mov
stos
dec
fstpl
dec
pop
sbb
xchg
in
int3
decb
pop
xorb
or
sbb
cwtl
imul
stos
dec
iret
xchg
xchg
jg
push
sbb
add
add
mov
lock
inc
aam
lods
xor
fidivrl
rcll
pop
cmpsb
enter
sbb
push
jne
lret
fs
enter
aas
int3
fdivs
ret
jnp
add
test
cld
pop
lret
xorl
mov
jno
in
mov
jne
pop
stc
xchg
stos
jae
sahf
inc
dec
and
push
adc
adcl
push
std
movb
hlt
dec
test
scas
add
nop
shl
lock
inc
enter
sub
xchg
mov
sbb
sarl
mov
sbb
push
mov
psubsb
adc
mov
sub
faddl
fiadds
dec
mov
adc
mov
jo
cmp
inc
jo
jle
mov
mov
es
pop
loope
pop
pushf
cmp
xchg
insl
jnp
mov
xchg
stc
lcall
push
xor
out
in
arpl
xor
int3
subl
popl
jg
jge
lods
or
xchg
dec
outsb
dec
mov
pop
leave
push
lcallw
pop
xchg
popl
or
addr16
pop
jno
mov
sti
fistps
cmpsl
sbb
push
addb
and
sub
xchg
inc
pushf
add
divps
repz
clc
push
jp
dec
and
scas
mov
test
mov
inc
arpl
das
stc
pop
in
sbb
cltd
dec
das
or
or
stos
jbe
out
mov
mov
movsl
dec
xchg
push
mov
imul
and
arpl
push
push
movsb
mulb
imul
mov
dec
sbb
push
mov
test
shl
sbb
mov
shl
pop
add
and
sub
ficompl
arpl
jl
rdtsc
sahf
dec
jle
cmpsb
push
jo
mov
or
add
loope
insl
push
add
cmp
pop
cmp
ljmp
mov
jo
push
and
inc
and
xchg
jns,pn
test
mov
test
add
pushf
mov
adc
jg
popa
jo
cmp
mov
sub
jl
sub
or
mov
shll
fldz
not
out
and
in
subb
mov
xchg
insl
or
insb
xchg
push
test
mov
fcomip
out
jb
xchg
enter
roll
testl
cmpsb
mov
ljmp
pop
cmp
or
adc
add
roll
dec
or
je
sub
int3
sbb
jp
std
addr16
repz
xchg
sub
js
sbb
shl
sbb
outsl
inc
es
mov
popa
rcrl
das
add
and
dec
fnstenv
mov
orl
mov
xchg
leave
leave
add
mov
jno
roll
mov
ret
push
push
cmc
mov
jae
add
fxch
ljmp
mov
sti
rcr
cmpsb
push
faddl
pop
cmpsb
mov
fstl
cmp
ds
mov
jae
incl
jmp
sbb
sbb
mov
cs
pop
jno
arpl
mov
fwait
mov
mov
out
fidivrs
cmp
pop
xor
shll
and
popa
cmp
lea
sbb
jp
cmpsl
lahf
pop
mov
xchg
outsb
mov
mov
cmpsb
out
sti
aam
repnz
inc
nop
ljmp
rep
pop
dec
mov
jmp
cld
lret
xor
leave
xchg
push
dec
sub
ret
inc
dec
sarl
push
sbb
popf
adc
enter
xchg
mov
int
mov
enter
aad
pusha
pop
rorl
or
inc
jne
sbb
hlt
add
and
int3
and
mov
sub
jecxz
pop
add
or
divl
inc
movb
push
and
out
jmp
push
bound
or
and
pop
adc
mov
inc
sti
or
pop
shlb
js
mov
inc
arpl
push
rcll
dec
cmp
aaa
cmp
sbb
roll
xor
pop
push
add
cmp
cmp
sub
and
ljmp
stos
pop
pop
push
stos
fsubrs
fisubrs
ret
dec
hlt
cwtl
adc
gs
or
pusha
pop
and
fisttpll
lret
mov
jl
mov
jle
shlb
jnp
mov
inc
add
mov
addr16
dec
iret
pop
dec
cli
xchg
in
imul
inc
imul
inc
fisubl
xlat
sahf
pop
push
mov
insl
out
leave
jo
push
inc
ret
rorl
add
scas
push
adc
mov
jmp
inc
cmp
fists
out
cmp
mov
insl
mov
call
pop
mov
and
xchg
and
sbb
jne
jb
mov
ja
mov
push
xchg
mov
insb
fdivrl
dec
stos
xchg
xor
pushf
pop
ja
or
popa
and
das
rclb
cwtl
xlat
inc
adc
pop
xor
mov
leave
in
pop
imul
xorb
xor
es
mov
jns
mov
or
mov
movsl
or
test
test
clc
lea
pop
cmpsl
adc
enter
repz
pop
sub
jnp
pushf
cmpsl
push
dec
rorb
jnp
rcrl
add
adc
push
jo
xor
popa
pusha
fiaddl
pop
dec
scas
push
push
add
mov
jnp
add
mov
or
jne
test
and
leave
imul
xchg
shll
push
mov
xchg
addr16
xor
push
fsub
pop
cmp
jno
xchg
bound
adc
pusha
ja
fs
rcll
cmp
jnp
rclb
push
lods
dec
movsl
xchg
fwait
insl
prefetchwt1
or
mov
scas
addb
ss
mov
xchg
dec
mov
pop
adc
jmp
pop
mov
jle
xchg
sub
jl
imul
inc
mov
jp
push
xor
adc
push
adc
aas
test
jne
sti
and
push
adc
mov
or
sahf
mov
cwtl
je
sub
mov
out
pushf
adcb
adc
addr16
pop
xor
ss
sbb
ficoms
das
lret
sub
xchg
int
inc
mov
mov
lret
in
rorb
xchg
xchg
arpl
jle
sarl
xorb
jne
imul
fistl
pop
mov
lock
leave
add
adc
call
mov
int
push
aaa
ja
adc
sbb
xor
fabs
push
ds
push
mov
push
inc
xor
cltd
out
jmp
mov
arpl
js
imul
mov
ljmp
sub
sbbl
test
scas
jecxz
out
mov
fwait
sbb
xchg
call
arpl
inc
inc
loopne
xchg
les
adc
inc
out
shlb
ljmp
aad
sub
jmp
lret
mov
and
cli
mov
lds
adc
cmp
in
mov
xor
out
and
or
cmp
sub
mov
mov
lods
dec
fnsaves
push
jg
xchg
dec
pusha
push
cltd
aad
loope
repnz
pop
inc
pop
jl
adc
sets
sarb
movsb
xor
mov
imul
ds
rcll
push
dec
jae
mov
mov
or
inc
add
stos
push
aaa
jns
xor
test
mov
inc
iret
das
repnz
in
enter
repz
add
outsl
cmp
inc
inc
lock
xor
cs
adcl
add
scas
mov
cmp
push
int
sub
insl
popf
in
mov
pusha
lret
and
ret
test
test
and
cmp
dec
add
xchg
scas
clc
pop
add
jns
hlt
pop
push
stos
mov
fnstcw
mov
outsl
and
adc
divl
add
test
push
jecxz
push
pop
push
cwtl
ss
aaa
push
dec
imul
in
and
mov
sub
aad
add
cltd
in
int3
aas
mov
int3
ljmp
mov
movsb
push
stc
rorb
shll
pusha
dec
jecxz
loope
mov
and
frstor
fmull
fadds
pop
std
mov
jg
pop
xor
inc
xor
sub
mov
int
jbe
cld
dec
sub
fadd
ss
stc
in
xor
stos
pushf
cwtl
nop
push
insl
xchg
ja
dec
repnz
xchg
mov
lret
sub
mov
adc
fwait
lds
pop
fistps
xor
nop
inc
pop
lahf
mov
lea
mov
fsubl
xchg
lahf
aaa
insb
pop
adc
xor
jl
xchg
mov
les
and
jbe
mov
jno
sbb
push
mov
icebp
es
push
sub
ljmp
or
inc
inc
les
stc
lret
fildll
rcrl
sub
mov
inc
xor
push
repz
add
insb
push
push
cmp
neg
data16
icebp
aas
rcrl
sbb
cmpsb
movsl
cmpsl
movsb
adc
ret
and
imull
daa
ljmp
inc
bound
arpl
push
sub
sub
popf
push
mov
rcll
ret
mov
out
adc
pop
dec
mov
mov
divb
dec
add
js
or
cmpsl
gs
call
sahf
ret
popa
in
inc
test
jge
mov
lcall
outsl
xchg
xchg
adc
push
nop
lds
jbe
call
fcomps
push
or
or
add
push
adc
xchg
push
xor
adc
aaa
in
adc
pop
repz
int
add
fmuls
stos
bnd
shll
and
pushf
cmpsb
xchg
popf
test
pop
pop
adc
xchg
idivb
fstpl
cmpsl
fwait
pop
mov
or
jbe,pn
mov
inc
nop
dec
daa
push
push
add
xor
xchg
mov
xlat
out
add
dec
jle
int
adc
faddp
mov
sarb
stc
ja
xchg
jle
out
scas
adc
mov
insb
xor
xchg
lret
inc
cmp
mov
add
in
mov
stos
push
mov
pop
mov
lea
cmp
push
notl
xchg
push
xor
hlt
inc
sub
mov
and
add
mov
sbb
push
or
fisubrl
mov
xchg
cmpsb
cltd
mov
xor
mov
jmp
add
pusha
pop
mov
or
inc
fsts
int
lds
rorb
dec
lcall
test
das
dec
sbb
iret
or
xor
sti
cmp
aas
mov
fld
and
xchg
pop
loope
add
das
fwait
mov
sbb
sahf
inc
bnd
aas
cs
inc
fildll
mov
adc
lds
in
sbb
imull
lahf
aad
sarb
pushf
add
push
mov
imulb
sbbl
and
ret
cmc
int
sti
inc
jp
pop
stc
lret
dec
call
insw
or
mov
push
dec
or
cwtl
or
ds
aam
mov
cwtl
mov
inc
into
jno,pn
xchg
cltd
fdivrl
popf
popa
stos
xchg
ja
jbe
xchg
inc
mov
inc
jns
cmpsl
push
jae
and
push
cmp
nop
lea
into
xor
xchg
hlt
push
out
sahf
xor
roll
adc
daa
lea
xchg
sbb
mov
lret
rcrb
push
or
pop
sbb
and
sbb
testb
pop
xchg
push
das
out
mov
sbb
imul
fidivl
sti
and
push
push
ss
jo
inc
or
jmp
xchg
rcrb
imul
mov
lcall
jg
notb
jp
sti
mov
mov
int
mov
mov
test
and
mov
xor
mov
aad
xor
ljmp
icebp
cmp
fcoml
ret
notb
es
cmc
icebp
jecxz
pop
add
xor
xchg
call
adc
add
mov
jg
test
sub
mov
pop
pop
lea
mov
mov
push
inc
fildl
loop
loopne
inc
sub
sbb
jecxz
cmp
rolb
ja
sbb
movsl
arpl
mov
xor
jo
lds
aaa
inc
repz
and
push
sub
test
inc
xor
pop
sbb
cwtl
xor
scas
aam
hlt
lea
add
dec
iret
mov
out
inc
xor
pop
pop
ret
rdtsc
xor
xchg
jo
loopne
pop
nop
mov
cmp
ficoml
and
jp
fildll
lahf
ljmp
pop
jo
imul
cmp
cmp
fdivl
sub
cwtl
push
mov
repnz
in
pop
sbb
mov
push
lods
es
cmp
nop
scas
ja
nop
cmp
mov
push
aaa
jle
mov
push
ljmp
insb
cli
rcrl
movl
cli
outsl
sar
int3
pop
mov
sub
pushf
shrl
pop
loopne
jl
pop
insl
sub
xor
push
bnd
icebp
nop
out
add
push
mov
mov
out
shrl
daa
lret
sub
inc
jbe
xchg
xchg
pop
xchg
jns
ss
or
movsl
fucom
fcmovu
adc
inc
jge
cs
xor
push
pop
aaa
xchg
mov
dec
sub
mov
and
popf
sbb
xor
mov
pop
inc
mov
mov
and
and
cmpsl
inc
sbb
idivb
cmp
xor
push
xchg
jbe
jne
sub
xchg
dec
enter
in
int
lock
mov
sarl
cmp
mov
sub
scas
or
lea
xchg
lret
ss
ds
enter
xor
fsub
push
lods
repnz
scas
sub
jmp
pop
loope
jle
pop
jg
push
xchg
cltd
cwtl
movl
add
dec
sub
fildl
cmc
push
inc
cmpsb
mov
repnz
xor
out
movsb
lcall
xchg
inc
push
dec
repnz
fistpll
xchg
fwait
leave
jne
push
enter
and
mov
mov
mov
fcompl
push
and
enter
sbb
cmpsl
sub
jne
flds
mov
adc
scas
or
out
xlat
pop
arpl
mov
les
inc
loope
pop
in
xlat
xchg
jle
adc
inc
adc
push
cwtl
in
dec
xor
dec
pop
adc
mov
rclb
pusha
or
into
push
add
iret
icebp
sbb
pcmpeqb
dec
int
js
mulb
fs
push
fdivr
push
mov
sbb
or
test
mov
loopne
jg
sbb
cmp
rcrl
andl
lock
or
sti
rclb
cmpsl
sti
push
inc
push
xor
aad
test
and
ss
cmc
cmp
mov
mov
sub
scas
mov
dec
dec
cmc
pop
negb
pop
mov
sbb
sbbl
insb
push
xchg
subl
and
xor
pushf
mov
mov
out
es
inc
jnp
fildll
enter
mov
sub
lahf
push
jg
xchg
xor
adc
jb
sub
aaa
or
dec
dec
lcall
leave
sub
mov
mov
push
in
mov
sbb
sub
xchg
push
out
dec
xchg
in
or
cmpsl
jns
mov
lea
movsl
push
mov
inc
in
negl
jnp
jae
mov
fcoms
cmc
jg
daa
aad
or
lea
lods
sbb
sub
enter
and
add
repz
clc
xor
aad
mov
add
daa
mov
jae
ljmp
sahf
fnstsw
cwtl
pop
or
testb
dec
dec
icebp
sti
rcrb
cmp
mov
push
mov
mov
jns
fildll
dec
and
sbbb
cld
fs
testl
pop
bnd
xchg
xor
in
jnp
push
lds
imul
sub
or
and
mov
sbb
notb
jb
mov
nopl
push
or
les
mov
xchg
jge
xchg
pop
mov
push
add
adc
jae
cmpsl
xor
cmp
mov
dec
dec
shrl
xchg
in
and
ror
xor
pop
mov
fisubrl
jns
int3
adc
fisubs
or
push
lods
jne
loope
push
xchg
mov
jno
cmpsb
lahf
addr16
add
push
ss
cmpsl
inc
sbb
popa
in
call
cli
dec
jbe
inc
sbb
add
pop
pop
in
push
movsl
jae
lods
xchg
xor
sbb
sbb
xchg
jp
mov
fdivrl
notb
xchg
lods
jns
outsb
fucomi
mov
imul
lahf
lahf
adc
in
call
and
mov
jmp
shl
jbe
fidivrs
dec
addl
sbb
sbb
xchg
insl
xor
push
shl
push
mov
cmpsb
and
test
test
icebp
mov
mov
dec
shr
mov
aaa
xchg
add
xchg
push
mov
adc
jp
add
into
test
push
and
mov
mov
or
addr16
or
repz
mov
mov
mov
or
pop
sub
xorl
inc
mov
mov
sub
mov
pop
xor
iret
divl
cli
inc
lock
add
mov
rclb
pop
mov
and
loop
movsb
negw
pop
and
sub
iret
xor
push
xlat
aam
js
dec
adc
xlat
mov
xor
sbb
movsl
xor
add
loope
sub
push
dec
stc
or
sbb
sub
popf
mov
mov
sbb
mov
or
out
out
inc
sub
negb
insl
cli
adc
ljmp
stos
push
sti
leave
mov
mov
lea
and
sbb
push
jo
push
jmp
mov
mov
sbb
cld
lods
adc
loope
xor
repz
stc
or
fidivl
or
pushf
cltd
out
inc
aaa
out
jae
jno
loopne
jae
sbb
inc
int3
sbb
and
push
iret
pop
mov
or
cmp
std
cmpsl
fisubrs
addr16
push
shlb
in
xchg
push
or
call
mov
pop
push
jae
sbb
jnp
push
sub
jmp
mov
adc
pop
mov
mov
mov
push
mov
xchg
jbe
inc
pop
cmp
and
pop
filds
fsubr
sbb
dec
or
std
adcl
imull
mov
sub
mov
xor
std
outsb
push
rorb
rclb
push
pop
xor
iret
mov
inc
jne
xor
lock
fsubs
bound
push
add
push
vpsubusw
jae
mov
out
jle
outsb
pushl
and
mov
shll
es
pop
xchg
mov
cmp
sbb
and
nop
sub
fisttpl
xchg
fidivrl
pop
repnz
cmp
popa
inc
pop
data16
sbb
leave
divb
outsb
dec
xor
and
cltd
shlb
test
mov
imul
dec
scas
cltd
add
sti
test
add
leave
jge
sar
call
cmp
cmp
stos
mov
aaa
push
test
les
loope
adc
movsl
pusha
xor
adc
movl
jb
les
pop
jb
fistpll
jne
fistpll
scas
add
push
add
jmp
stos
rolb
pop
cli
scas
rolb
mov
adc
stos
mov
sbb
mov
adc
xchg
push
push
cmp
mov
pop
add
adc
add
lcall
mov
inc
popa
cmpsl
out
push
mov
test
inc
xchg
in
fcomi
test
inc
lret
rcrb
loopne
in
fcompl
inc
es
adc
insl
and
arpl
aas
movsl
mov
lcall
ja
push
and
push
scas
into
in
and
lods
xorl
divl
insb
push
addb
and
loop
adc
imul
sti
or
nop
or
or
push
loop
fisubl
cli
sbb
add
xor
mov
mov
mov
mov
das
nop
dec
mov
outsb
jbe
gs
dec
mov
push
fwait
xchg
jg
lock
sti
mov
mov
inc
push
xor
insl
aad
ds
sub
xor
xor
mov
jp
loope,pt
push
cltd
or
lea
or
dec
pop
jno
jmp
int
push
hlt
mov
imul
mov
fistps
gs
mov
xlat
dec
dec
jmp
out
jns
into
mov
call
ljmp
jb
sbb
js
add
xor
adc
lods
mov
arpl
in
add
jns
push
roll
lock
testb
je
loopne
sub
out
push
das
leave
adc
adc
repnz
mov
pushf
mov
mov
pop
xor
aam
mov
test
cmp
call
arpl
in
push
sbb
cwtl
into
mov
mov
push
pop
and
push
dec
inc
testl
sbb
xchg
daa
inc
dec
cmpb
outsb
xor
push
lcall
dec
push
and
in
pop
xchg
add
sbb
push
push
loop
mov
dec
repz
dec
test
pushf
hlt
inc
enter
mov
sub
pop
lret
adc
cmp
popa
out
xchg
pop
or
mov
and
lret
dec
into
divb
or
dec
stos
jo
testl
pop
mov
mov
push
call
mov
out
sub
mov
scas
popf
ret
mov
fistpl
xchg
mov
notb
test
sahf
push
je
fsts
test
orb
imul
sub
dec
shl
lret
dec
sti
je
fwait
leave
pop
pop
not
pop
pop
mov
xchg
out
subb
lcall
call
dec
xor
fs
data16
imul
mov
add
out
mov
cs
test
shrl
addr16
push
mov
aaa
push
fucomip
inc
mov
pop
xchg
xchg
les
push
out
addr16
sahf
dec
add
and
fwait
and
mov
mov
out
repnz
jne
out
jo
popa
movsb
inc
adc
sbb
or
jo
inc
push
pop
push
sub
push
xor
mov
sti
mov
pop
adc
pop
add
xor
popf
mov
ss
ret
arpl
push
mov
or
or
stc
aas
das
loope
jo
lret
out
xchg
xchg
xchg
and
jns
dec
nop
loope
jge
es
add
pop
popf
inc
and
xor
inc
cmp
lret
or
test
sarb
insl
stos
seto
test
ficoms
jl
repz
cmp
cmp
jne
cmp
aas
push
jecxz
mov
roll
out
cmp
mov
ret
inc
pop
arpl
pop
pop
stos
sbb
pop
shl
push
leave
fyl2xp1
mov
sub
pop
inc
in
in
shlb
insb
sbb
dec
sub
inc
cmp
mov
in
push
fdivrp
test
sub
inc
mov
sti
sarl
jnp
sub
test
sbb
inc
inc
cmpsb
fisubl
add
lahf
cmp
cli
out
imul
ja
xchg
push
imul
fs
clc
movsl
and
rcrb
lcall
sbb
push
mov
popa
test
shrl
adc
int3
jbe
xchg
adc
adcb
scas
lahf
data16
add
xor
ss
and
shrb
outsl
sub
sbb
andl
dec
xor
test
out
shlb
enter
ljmp
mov
mov
inc
popf
and
sub
xchg
push
enter
dec
push
pop
mov
ss
icebp
arpl
add
cmp
jmp
mov
sub
mov
sbb
loope
jp
das
pusha
icebp
aas
fisttpll
js
push
pop
jae
and
mov
sub
jge
ds
cwtl
out
add
mov
sbb
push
mov
fdivrl
xchg
xor
cmp
push
mov
repz
mov
aad
aas
xor
and
in
push
jb
add
mov
je
mov
xchg
inc
and
push
fcomps
push
cmpsl
mov
inc
daa
fdivs
shl
sbb
or
push
xlat
out
add
repz
je
cs
push
sbb
jbe
pop
outsb
ljmp
pushl
cmpsl
nop
es
aam
test
rcl
pop
jg
and
adc
cmp
jbe
mov
jb
test
jno
sub
xchg
inc
xchg
mov
leave
arpl
out
or
inc
jl
push
jl
test
lcall
adcl
bound
sub
mov
stos
or
cltd
fwait
inc
pop
pusha
pop
in
cmp
lods
in
push
dec
pop
bound
mull
xchg
xchg
ds
sahf
test
dec
mov
jecxz
jae
push
mov
xchg
test
sub
cmp
push
push
mov
cmp
and
std
loopne
iret
mov
fs
xor
pusha
popf
dec
jle
in
or
push
mov
pop
ds
call
pop
push
stc
out
cltd
push
incb
lahf
ss
lahf
decl
xor
cmp
inc
or
mov
mov
clc
call
cmpsl
fcoml
cmpsl
test
xor
xchg
dec
push
inc
inc
fwait
cmp
ljmp
ret
mov
or
add
sahf
dec
sbb
ss
add
and
pop
es
gs
jnp
data16
mov
lret
fstpl
xchg
stos
push
and
pop
mov
sub
test
data16
daa
mov
push
jb
andl
mov
test
insl
add
cmp
clc
dec
call
dec
sub
stc
sub
cld
sarl
mov
cmp
push
and
cmpsl
cwtl
xor
out
mov
sbb
xchg
inc
pop
adc
aas
push
add
mov
push
jbe
adc
clc
mov
or
push
mov
push
dec
arpl
xchg
sti
inc
jae
sbb
test
sbb
mov
sub
cmp
in
inc
mov
cli
push
xor
lret
int
xor
xorl
mov
outsb
cmpsl
repnz
add
push
cmp
pusha
lret
mov
fmull
and
test
push
in
sub
iret
aad
ret
in
mov
lock
jns
dec
inc
sub
ret
push
fdivs
dec
out
jno
mov
popf
ds
jae
loope
lret
push
or
mov
out
cmp
out
lcall
add
add
pop
push
dec
subb
mov
lret
sub
pop
xchg
lods
jp
loop
cmpsb
mov
xchg
gs
mov
inc
scas
enter
fcoms
rcrl
int3
xor
add
pop
inc
loop
popl
outsb
ljmp
dec
dec
sbb
inc
mov
or
mov
fcomi
leave
stos
test
loope
and
repnz
mov
sub
into
movsb
mov
js
fwait
fs
pop
imul
sub
push
cmp
in
lods
jl
pop
adc
mov
lock
fnstsw
mov
fnstenv
add
sub
test
mov
sbb
lret
adc
adc
lods
imul
mov
adc
push
xchg
jb
jge
clc
mov
push
adc
xorb
mov
pop
fcoms
cmp
outsb
mov
push
test
push
adc
cmp
test
jp
pop
imulb
pop
cwtl
js
xchg
jecxz
ds
sbb
repz
faddl
adc
push
jp
testb
mov
push
scas
shlb
cmpsb
adc
and
adc
test
mov
cmc
bound
aad
lds
aas
xchg
or
in
lcall
add
jb
icebp
data16
sub
scas
sti
xor
test
pusha
xchg
adc
adc
jg
nop
dec
inc
mov
lahf
sbb
shrl
sbb
iret
sbb
pop
rcll
pop
dec
sbb
cwtl
movsl
ds
cmpsl
add
inc
leave
ss
pusha
shr
xor
push
repz
int3
ljmp
test
sub
add
es
sahf
cmc
xor
xlat
shrl
pushf
jbe
or
jl
out
mov
pop
roll
fistl
inc
sbb
push
pop
idivb
movsb
out
jmp
jbe
sub
dec
push
mov
and
popf
and
and
mov
stos
xor
jnp
mov
jae
mov
add
inc
lea
add
mov
xor
outsl
xchg
xchg
push
push
leave
sub
inc
push
pop
add
cmp
out
mov
push
push
xchg
ss
adc
dec
iret
out
test
test
xlat
mov
cmpl
ret
xor
je
jnp
mov
ret
mov
movntq
out
add
or
sub
sub
rorb
adc
ss
aaa
andl
sbb
xor
sbb
shll
cs
ret
add
or
int
les
mov
jmp
jge
addr16
sub
lret
cmpsl
arpl
cld
cmp
sbb
fildl
xor
pop
mov
ret
xchg
xchg
pop
into
mov
xorl
loope
fistl
in
inc
fwait
dec
lret
lods
test
jmp
aas
loopne
stos
inc
jns
ja
lahf
inc
int
mov
test
imul
mov
addr16
filds
xchg
sub
test
mov
testb
push
movsl
mov
fnstenv
cwtl
or
xchg
stos
adc
stc
mov
dec
push
mov
arpl
pop
and
lods
out
xchg
fistps
cli
cmc
cmpb
xchg
fsubl
fsubr
xor
sahf
jmp
hlt
mov
cli
jecxz
mov
push
repnz
idiv
xchg
xchg
cmp
lea
repnz
aaa
jle
sahf
rol
inc
jo
lds
mov
enter
lcall
jbe
cli
stos
movsl
pop
inc
in
lret
dec
data16
aam
jo
js
popf
inc
or
rcl
out
mov
xchg
cmp
jns
push
jp
jne
sbb
scas
xchg
enter
jge
andl
mov
test
out
ss
cltd
push
movsl
ss
mov
inc
xchg
jp
xlat
push
xchg
dec
repz
in
or
jmp
fldl
lds
mov
lock
jns
fnstsw
clc
adc
fnstcw
dec
xchg
leave
in
pop
xor
mov
enter
int
lahf
movl
cmp
ds
mulb
xchg
inc
pop
orl
dec
dec
pushf
xor
cmc
cmc
lea
jb
mov
sti
int3
jg
cmp
mov
mov
jno
fs
ss
popf
loopne
loopne
mov
jle
scas
and
push
rolb
adc
sub
lret
aaa
lcall
mov
jbe
mov
cmp
aaa
pusha
ja
out
ja
jle
jmp
clc
in
dec
jno
gs
add
ss
sbb
sahf
xchg
cs
shrl
fdivs
outsb
out
adc
sbbl
popf
pop
add
dec
leave
out
push
adc
movsb
xchg
cmp
add
ficomps
push
out
inc
push
out
mov
cmp
and
data16
int3
es
ljmp
dec
int3
xchg
dec
lods
mov
lds
adc
inc
scas
cli
nop
dec
ja
dec
mov
xchg
into
js
adc
inc
and
cmp
lds
mov
mov
data16
and
or
push
data16
dec
and
mov
mov
adc
loope
lock
sub
shrb
sbb
das
ljmp
mov
xlat
inc
push
push
std
dec
cmpsb
xchg
int
std
push
test
dec
sbb
inc
ja
addr16
and
push
push
sbb
dec
push
xor
mov
mov
lock
xor
fcmovne
sbb
inc
clc
xlat
jmp
inc
inc
shrl
pop
xor
sbb
jbe
hlt
cld
mov
sub
hlt
es
pop
sbb
stos
out
cmp
inc
insb
add
or
jne
sbb
cmpsl
cmp
mov
jg
jne
dec
pop
mov
pop
enter
inc
pop
mov
mov
sar
divb
mov
ds
ret
push
lcall
or
test
clc
psubsb
lds
aaa
andl
jb
adc
fcompl
mov
inc
pop
iret
xor
sbb
xor
xchg
xchg
add
pop
mov
xchg
push
and
mov
jle
xchg
xchg
rclb
leave
mov
add
shlb
xchg
and
fdivrp
lods
daa
shl
adc
mov
sbb
imull
dec
xchg
es
ret
enter
insl
xor
push
cmc
cmp
jno
inc
mov
out
jno
aam
mov
sub
sub
jne
cmp
pop
rcrb
gs
aad
push
sbb
cmp
mov
dec
cmp
mov
xor
push
scas
mov
or
mov
or
push
shr
aam
add
cmpsl
arpl
adc
sub
sarl
rolb
mov
add
rcrl
mov
cmp
dec
sub
mov
icebp
gs
in
fidivrl
stc
fwait
mov
cmc
xchg
data16
pop
mov
push
test
mov
dec
pushf
ljmp
mov
fsubrl
decb
or
nop
mov
cmp
inc
jae
lock
lahf
lods
xchg
je
scas
hlt
into
cs
sub
les
pop
pop
pop
mov
pop
pop
or
push
lods
cmpxchg
leave
mov
mov
imul
jns
fs
cmp
inc
ret
std
outsl
out
cltd
jge
scas
xchg
mov
fnstcw
test
mov
lret
add
adc
add
ja
in
addl
mov
daa
test
das
nop
xchg
test
iret
jl
jne
push
fucomp
xchg
fdiv
pop
mov
cmc
data16
sbb
scas
insb
ljmp
rolb
sub
xchg
pop
jmp
cltd
lret
pop
rorb
mov
mov
scas
sbb
leave
inc
mov
or
fcomi
fimuls
sub
in
lods
mov
lods
fwait
and
shrl
in
fisubrs
inc
xchg
stos
mov
pop
push
xchg
xchg
stos
arpl
loope
dec
out
ret
aas
xor
or
cmpl
shl
enter
push
pop
xor
stos
mov
adc
xchg
fsubrl
jp
inc
push
fldt
cmpsb
sub
dec
rcl
xor
mov
mov
cmp
xor
test
test
lods
push
out
das
ja
and
stos
sub
sbb
push
sub
mov
push
scas
xor
mov
mov
bound
push
push
mov
push
cmp
pop
mov
lock
pop
and
cmp
mov
push
sub
popf
ljmp
les
and
daa
lods
jle
jle
sarb
sub
mov
cmp
incl
xchg
add
push
imul
stos
dec
xchg
xchg
sub
adc
mov
loop
jge
addr16
xchg
mov
in
push
das
inc
decl
push
jae
fcomps
push
outsl
cld
shrl
pop
ficoms
adc
shr
lods
xchg
stos
mov
pop
cmp
sarb
inc
mov
mov
xchg
cmp
dec
jmp
mov
es
lahf
je
dec
dec
add
lret
outsb
adc
push
jns
les
adc
push
clc
pop
add
inc
ja
fsubs
in
xchg
adc
test
inc
pushf
xchg
push
jge
movsb
xorl
lds
cmpsb
mov
das
inc
mov
addr16
repnz
rolb
test
xchg
and
ret
jle
rolb
xor
cld
lret
dec
sbb
sbb
inc
xor
pushf
cmpl
sub
pop
add
cwtl
or
fistpl
pop
les
push
jae
fmuls
push
xchg
je
loope
push
ljmp
inc
sub
sbb
mov
push
push
mov
ds
mov
rorl
enter
xlat
jae
js
fldcw
cmp
movsb
xor
insl
insb
pop
nop
mov
jle
shrl
pop
push
jp
daa
jmp
cli
xchg
fsub
push
sbbl
aad
pop
add
sub
mov
dec
sti
push
int
sub
stc
sbb
cmp
sbb
fwait
sarb
dec
jecxz
sub
jnp
lods
out
es
sahf
jns
into
push
fisubl
in
add
sarb
add
ss
dec
push
mov
pop
sub
decl
sub
je
sub
dec
mov
sbb
or
xchg
xor
in
mov
nop
dec
dec
icebp
xchg
xor
xchg
pop
inc
outsl
mov
test
mov
xchg
outsb
daa
or
add
arpl
dec
lods
fisttpll
daa
dec
icebp
sub
xor
test
in
and
pushf
cs
push
ret
push
inc
push
mov
jle
pop
jmp
test
jmp
pop
movsb
lcall
orb
add
pop
into
bts
fwait
mov
in
pop
fcompl
sub
pusha
sub
sbb
in
mov
popf
je
mov
push
xor
pop
test
arpl
es
inc
sub
push
add
sbb
pop
xchg
sub
into
sbb
and
pop
sti
dec
aaa
or
aad
shll
pop
outsb
add
mov
xorl
jmp
cmp
outsl
sbb
and
jecxz
mov
adc
dec
icebp
cmp
sub
mov
in
ret
mov
mov
jo
pushf
out
pop
outsl
pop
adc
out
mov
jecxz
dec
nop
inc
cmp
lods
mov
xor
call
push
adcl
sub
cmpsl
mov
or
cmp
mov
mov
pop
xor
rcrb
or
pop
xor
sahf
or
outsb
cmp
shl
outsl
test
xchg
mov
arpl
fsubrs
loope
xchg
dec
arpl
sbb
aad
pop
testb
out
mov
imul
inc
popa
or
cmp
bound
pusha
es
imulb
xchg
jecxz
iret
fs
cmpsl
mov
mov
daa
out
inc
adc
cmpsl
lods
inc
repnz
idiv
lret
xchg
loope,pt
add
xchg
insb
shrl
cmc
or
outsl
in
pop
ljmp
xchg
inc
sub
rep
push
and
fstpt
jbe
mov
outsl
pop
lea
jb
fstl
pusha
add
sub
lret
sub
test
faddl
out
push
ja
mov
pop
mov
aad
mov
push
jae
in
mov
daa
cmpsl
jno
mov
jmp
xchg
push
shrl
in
enter
and
dec
dec
push
fisubl
xchg
ljmp
lods
cmpsb
scas
pusha
inc
cwtl
movsl
mov
jl
push
shrb
es
in
lcall
lcall
cmp
sub
jmp
xchg
pop
xor
jg
dec
fcoms
sub
cs
fmul
jae
add
aam
sti
aas
stos
nop
es
sub
loopne
loope
push
fistl
xchg
cs
dec
in
and
jno
testb
jne
push
cmpsb
imul
push
or
inc
mov
loop
dec
sarb
adc
imul
sub
mov
xchg
add
shl
repz
std
sub
bound
cmp
mov
orl
sbb
pop
push
div
loope
pop
push
cmp
mov
sub
clc
bound
and
in
dec
sbb
dec
pop
xchg
inc
mov
jmp
es
andb
lret
mov
sub
xchg
inc
adc
and
pop
jbe
cmpsl
repnz
out
jl
pop
pop
or
xor
jb
sbb
sbb
push
sub
lea
push
test
daa
jle
jg
test
jp
add
adc
rol
xor
adcl
mov
dec
jl
iret
and
fstpt
jbe
addr16
stc
fidivrl
inc
jnp
cld
dec
popf
pop
jne
and
xor
xchg
jbe
mov
add
sbb
and
mov
jmp
or
sti
mov
sub
js
fldcw
icebp
or
outsl
adc
aaa
roll
stc
call
in
rcrl
xchg
xor
xchg
inc
sub
pop
frstpm(287
repz
xchg
lods
outsl
sub
xchg
rol
das
stc
sbb
sbb
int
cltd
cmp
stos
mov
add
cmp
xchg
mov
jno
sbb
insl
sub
test
mov
fdivp
push
std
push
nop
int
bnd
inc
xor
or
push
fs
aas
dec
aaa
out
hlt
pop
dec
dec
and
fwait
dec
cltd
call
xchg
xchg
push
test
leave
inc
pop
imul
xchg
gs
fstps
scas
xor
cld
jo
jl
mov
lret
adc
and
and
pop
mov
jae
sbb
inc
jl
notb
fwait
mov
and
pop
pop
inc
cwtl
adc
rclb
js
inc
scas
scas
test
sbbl
mov
push
or
scas
sub
and
stos
or
sbb
loop
vmovapd
jp
mov
push
push
out
fcmovnbe
mov
push
push
imul
xchg
sti
inc
sub
daa
sbb
dec
fstpt
push
in
adc
add
xchg
shrb
int3
sbb
scas
jno
push
enter
jge
subb
ret
xor
add
and
xchg
xchg
mov
out
cmpsb
mov
mov
das
repnz
xchg
and
cmp
and
orb
xchg
sbb
mov
popa
sbb
sahf
lahf
sub
mov
add
inc
loop
clc
add
mov
addb
sub
andl
sbb
cmp
push
js
jns
lods
dec
cs
outsb
inc
out
or
add
sbb
scas
ja
aaa
cmovp
aaa
mov
mov
dec
jbe
jns
mov
pop
jnp
cltd
dec
fs
pop
mov
stc
inc
jo
push
mov
icebp
js
sbb
negl
jge
fistl
push
mov
fidivs
add
pop
xchg
dec
or
movsb
jo
lret
sbb
int3
pop
pop
in
lret
mov
repnz
mov
sub
or
jns
mov
lahf
test
call
icebp
outsl
mov
shll
in
sbb
pop
cmpsl
inc
cs
jg
scas
cmp
mov
fwait
push
aas
sbb
sub
sub
mov
inc
xlat
ljmp
dec
jmp
sbb
sub
enter
dec
inc
dec
leave
scas
mov
shrb
mov
adc
xor
call
es
jae
mov
cltd
call
aas
cltd
out
xor
lret
adc
push
cmpsb
push
test
inc
bound
dec
and
pop
xor
xor
ds
cld
ja
sub
xor
out
mov
cmpsb
test
dec
pushl
cmpsl
leave
aad
push
add
pop
sbbb
jnp
jg
sbb
adc
xchg
test
mov
insl
bswap
add
jecxz
and
sbb
jbe
bound
aam
clc
xor
cs
iret
sbb
adc
pop
mov
or
xor
jmp
mov
stos
jbe
dec
mov
sbb
imul
mov
mov
xor
mov
pushf
xchg
jecxz
xor
lea
jnp
inc
push
enter
dec
cmp
add
insb
inc
xchg
mov
lret
ret
push
dec
out
cmpsb
inc
pop
and
sub
cltd
aam
cmp
dec
jmp
cmpsl
jl
jnp
push
pop
push
cmp
jns
cs
pop
shrl
mov
or
repz
addb
and
scas
mov
mov
xchg
shr
cmp
and
and
sub
adcl
pop
loop
mov
dec
aad
movsl
lods
fstpt
push
pusha
pop
adc
movsb
into
push
cmp
shlb
inc
test
faddp
lds
fcoml
das
sbb
sbb
sbb
scas
out
push
and
sub
xchg
dec
das
lret
popa
in
fcomi
sahf
xor
rcrl
rorb
jg
out
push
pop
jmp
repnz
out
icebp
ljmp
mov
sub
iret
cmpsl
sbbl
in
insb
ds
xor
push
je
js
sbb
addr16
test
paddusw
sub
cmpsb
adc
inc
jl
cltd
repnz
addb
fnstcw
enter
add
call
mov
add
lock
add
pop
fidivl
add
xor
adc
dec
or
in
mov
fisttps
pop
addr16
scas
cmc
cwtl
into
xor
in
or
mov
std
cmp
sti
js
xor
div
cmp
in
into
dec
mov
dec
mov
dec
sub
cmc
adc
mov
inc
call
cmp
in
xchg
xchg
loop
pop
sub
jnp
pusha
in
xchg
dec
mov
lret
in
mov
or
lods
aad
add
icebp
or
loope
pusha
inc
mov
cli
aaa
jno
dec
mov
call
shrl
mov
ret
test
mov
out
pop
addr16
add
push
dec
movsb
push
xor
data16
ljmp
jle
jo
inc
dec
mov
call
adc
add
lods
popf
jp
inc
les
rorb
out
lds
sbb
push
push
je
inc
jge
cmp
mov
mov
mov
ljmp
cmp
in
fwait
jb
and
add
inc
bound
enter
in
ljmp
lods
out
or
inc
rol
mov
pop
popf
jae
in
xchg
push
and
adc
mov
call
push
sbb
adc
loope
xor
jecxz,pn
jmp
sti
stc
jno
mov
lea
inc
mov
cmc
mov
jmp
push
stc
pusha
mov
push
xchg
push
stc
inc
stos
daa
jo,pn
stc
jno
xor
inc
push
and
adc
aas
push
add
data16
and
inc
cmc
pop
xor
inc
push
mov
xchg
add
ja
icebp
dec
push
dec
in
cmpsl
pop
popa
ret
pop
mov
mov
loope
addb
push
bound
sub
jp
into
pop
jb
push
jmp
and
and
and
xor
jecxz
lods
cmp
xchg
jg
call
xchg
jbe
xchg
testl
dec
into
aam
jge
xchg
in
popf
lret
pop
mov
xor
jb
ljmp
push
xchg
adc
mov
dec
push
fchs
add
pop
mov
in
jge
jle
jnp
aam
xchg
or
mov
fcos
in
mov
lods
inc
cmp
sub
pushf
inc
jo
fisttpll
iret
sbb
imul
hlt
xchg
jmp
dec
popf
fists
jge
jg
out
xchg
pop
into
addl
pop
leave
dec
ret
or
leave
das
cmp
adc
mov
dec
or
rcrb
pop
test
dec
enter
shlb
sbb
subl
loop
jne
adc
loopne
and
mov
cltd
data16
cwtl
nop
pop
xor
xchg
movsl
mov
lods
rcrb
and
call
sub
inc
xchg
loopne
fstpl
add
or
jns
mov
fucom
xchg
test
in
cli
scas
movsl
xor
les
es
and
iret
push
stos
test
jmp
jg
add
jns
inc
in
repnz
outsl
dec
pop
mov
xchg
jno
sub
arpl
cmpsb
jb
mov
xor
stc
shlb
pop
and
in
sub
test
into
mov
or
inc
movsl
jns
daa
adcb
aas
test
add
insl
add
movsb
in
cmp
outsb
add
fnstsw
sub
in
fisubl
or
outsb
cld
jp
add
loopne
add
push
mov
jnp
icebp
hlt
lds
dec
sbb
fdivl
movsb
lahf
push
cwtl
inc
popa
sub
test
and
cwtl
xchg
adc
icebp
push
cli
xchg
add
lea
cmc
repnz
lahf
add
pop
adc
ja
sbb
loop
jmp
mov
mov
fists
mov
iret
aad
and
or
cmp
je
sub
mov
add
int3
fdiv
or
jl
pop
mov
mov
dec
and
inc
ljmp
push
push
cltd
adc
mov
jmp
rorb
rcrl
mov
pop
cld
dec
sahf
xchg
xchg
jg
and
cwtl
dec
xchg
or
pop
mov
jmp
xchg
pop
int
ficompl
popf
xchg
enter
inc
ds
pop
adcl
daa
pop
cmp
inc
dec
shlb
cmp
fadds
or
jno
push
cltd
scas
subl
sbb
jle
lcall
test
xor
repz
push
enter
std
sbb
cmpsl
push
or
mov
scas
jb
jbe
mov
pop
jnp
data16
mov
sub
out
jae
pop
adc
dec
xor
cmpsl
adc
jo
mov
and
sbb
into
mov
and
add
ss
jo
jno
mov
sbb
scas
inc
mov
test
std
pushf
cmpsb
insb
mov
je
stos
mov
out
lcall
fildl
push
stc
jae
fisubl
mov
sub
pop
mov
add
arpl
push
popa
and
inc
mov
sbb
into
xorl
lcall
test
fwait
mov
dec
pop
test
or
lods
inc
jnp
imul
or
test
movsl
es
xor
mov
pop
sbb
jmp
inc
sub
cmp
pop
mov
push
fadds
inc
xchg
sbb
out
mov
mov
lea
cmp
pop
jbe
push
dec
fidivl
xor
fstpl
pop
fcomp
aad
mov
add
enter
mov
bound
pop
inc
imul
fs
and
push
repnz
push
mov
cld
out
xchg
movsl
repnz
push
xchg
scas
les
sbb
outsl
mov
stc
sub
sbb
andb
adcb
popa
fcom
out
loopne
sbb
leave
in
ljmp
mov
jno
popa
dec
xchg
pop
mov
xor
aaa
imul
jb
jns
sahf
mov
adc
pop
mov
add
xchg
int3
pop
rorl
sub
sub
mov
mov
out
sahf
addb
test
jp
hlt
dec
out
ret
scas
cwtl
imul
fadds
and
jg
ss
push
adc
in
gs
mov
sub
and
ljmp
and
decb
aam
fstl
jnp
loop
jno
xchg
pop
sarb
or
push
cmp
aaa
mov
xor
dec
mov
and
testl
mov
dec
scas
aam
test
nop
mov
pop
fsubs
push
inc
pop
in
add
pop
sbb
xor
cs
jmp
mov
cmpsb
int
pop
cwtl
out
pop
mov
mov
xchg
dec
flds
pop
jae
orl
sar
mov
mov
sbb
inc
icebp
inc
insb
xlat
jmp
int
dec
test
fwait
mov
cmp
push
mov
mov
les
cmp
loop
sbb
adc
mov
sub
sti
movl
sbb
xchg
in
clc
pop
daa
mov
je
jmp
mov
adc
push
es
loop
rolb
inc
sbb
adc
loopne
popf
push
cli
pop
cmp
sub
sarl
pushf
cltd
cmpsl
sahf
mov
and
ja
xor
cld
mov
pop
stos
add
imul
rcll
insl
test
int
into
lahf
insb
das
enter
adc
lret
popf
pop
mov
fcoms
xchg
pop
jmp
movsb
xchg
adc
and
push
xorl
int
or
dec
and
nop
jp
or
scas
adc
out
inc
xchg
test
pushf
pop
push
pop
pop
int3
data16
and
fnstsw
lock
xchg
les
xor
or
sbb
adc
movsb
mov
scas
ljmp
pop
shlb
fisttpl
shlb
mov
in
lods
sti
lea
mov
test
sub
or
add
lret
test
enter
cmpsb
push
dec
xchg
or
xlat
add
out
clc
loope
fcomps
and
mov
xchg
xor
pop
xor
jp
icebp
cmp
int3
pop
cmpsb
aas
add
fiadds
fdiv
fcoms
hlt
movsb
push
dec
xchg
lret
les
xchg
jo
pop
and
jns
idivb
out
repnz
mov
and
xor
in
adc
inc
jp
mov
cmp
call
ljmp
loop
dec
add
lahf
cmpsb
dec
fdivl
roll
aam
inc
out
inc
stos
ss
mov
push
mov
or
outsb
cmc
xchg
fwait
push
out
loopne
and
lds
sbb
outsl
shlb
cmp
pop
pop
mov
stc
int
jne
or
mov
pop
jns
adc
sti
test
test
cltd
outsb
add
xchg
xchg
ret
lahf
lods
adc
orb
leave
mov
pop
scas
jne
das
mov
xchg
inc
imul
js
mov
mov
adc
and
mov
mov
idivl
lods
or
aad
sub
xor
shll
outsb
andb
mov
push
sub
out
jl
fwait
jns
add
sbb
leave
lea
and
or
jge
push
inc
inc
mov
dec
cli
stos
jnp
lret
mov
in
std
loopne
ds
sbb
imul
lods
jl
les
cmp
testb
pop
mov
sbb
sti
sub
pusha
movsb
subb
jne
mov
and
mov
ljmp
sbb
push
int
push
lcall
mov
jo
xchg
or
or
les
push
stc
movsl
loopne
cmp
mov
lock
xor
jle
adc
loope
aad
pop
push
stos
xchg
mov
int3
adc
push
dec
jb
aam
lret
add
fwait
adc
push
jno
test
fists
cmp
rcrl
cmpsl
je
lahf
jmp
and
cs
xlat
and
xor
in
aam
adc
dec
aad
pop
cmp
inc
imul
mov
jb
out
sub
movsl
mov
dec
mov
pop
adc
mov
call
cmp
pop
ljmp
lods
inc
loop
test
ja
push
xlat
sahf
xchg
push
adc
mov
leave
pop
mov
mov
lods
loope
rcl
jae
fistpl
arpl
testb
sti
xlat
test
icebp
lcall
mov
data16
jl
aam
int3
roll
adc
pusha
xchg
cmpsb
mov
jae
jp
clc
sbb
or
sbb
into
lret
add
push
or
or
mov
in
jl
test
lods
adc
out
cwtl
inc
xchg
fldcw
mov
in
scas
ss
popa
enter
mov
in
sub
mov
inc
loop
push
pusha
xchg
test
xor
jb
mov
push
dec
sbb
mov
xchg
push
mov
iret
mov
xor
push
push
stc
jnp
mov
or
adc
test
xchg
sub
icebp
mov
push
sbb
xchg
inc
mov
push
out
jmp
pop
xor
call
or
shlb
mov
or
push
and
pushf
xor
int
cmp
pushf
lods
es
xchg
js
jge
in
arpl
lods
imul
sub
leave
jg
sub
push
mov
insl
ljmp
stc
clc
aas
push
andb
xchg
clc
push
shll
js
bound
and
scas
jae
jl
mov
ja
xor
ja
sbb
jge
lods
stos
sbb
jnp
inc
add
loope
test
and
mov
loop
and
jle
dec
pusha
xor
je
and
fsubrl
les
xchg
sarl
sub
sub
cli
push
adc
push
jmp
or
lods
insb
cmpsb
mov
insl
scas
jmp
daa
or
dec
add
sbb
and
jecxz
push
push
gs
xor
out
mov
cltd
cltd
mov
leave
inc
orb
sub
sbb
outsl
add
adc
push
add
push
popf
sahf
ds
shr
sub
dec
sbb
sub
dec
cmp
jg
or
in
jge
push
mov
xor
ds
pop
xor
dec
push
arpl
lret
stc
and
rcll
adc
inc
dec
add
hlt
sub
xchg
jle
xchg
aas
aad
jo
jb
xchg
stc
jb
iret
in
push
xchg
adc
in
enter
gs
subl
bound
inc
gs
xchg
lock
pop
adc
inc
and
or
or
adc
inc
cmc
or
cmpsb
mov
jbe
subl
cmp
je
data16
fsub
inc
cmp
cmp
dec
pop
push
je
inc
push
lret
in
lret
sbb
cmp
les
jnp
jmp
push
loope
dec
or
pop
pusha
or
sar
inc
imul
add
daa
xchg
aas
incb
lahf
nop
data16
inc
xchg
scas
jle
xor
fldt
cmp
sbb
mov
icebp
pop
addr16
into
push
ficoml
sub
icebp
xor
xor
daa
sbb
sub
lret
lods
dec
in
pop
inc
cld
inc
fildll
and
icebp
or
das
mov
faddl
mov
push
lret
inc
out
insl
sub
repz
gs
pop
jp
push
lods
jne
fnstsw
jmp
test
add
xchg
int3
xor
xchg
out
sbb
mov
repnz
sbb
dec
jns
movsl
pop
insb
push
xor
mov
mov
dec
jbe
push
lds
rcrl
pop
push
iret
mov
sub
push
scas
xchg
xchg
inc
insl
xrstors
mov
jmp
je
add
xor
cwtl
inc
nop
sub
fidivrs
pop
jb
xchg
push
lahf
cmpl
bound
ss
or
inc
xor
sub
jg
test
ss
aad
es
in
pop
dec
sub
add
shlb
je
pop
jne
cmp
mov
adc
jg
xchg
pop
add
mov
mov
mov
inc
dec
pop
cmp
popa
dec
gs
mov
enter
ret
sub
jmp
pop
out
adc
xchg
fstl
xchg
xor
xchg
sub
repnz
and
sti
loopne
sar
mov
xlat
rolb
sahf
jp
adcl
xchg
lcall
popa
push
pop
push
das
jbe
push
pop
roll
lcall
push
loop
fwait
rorb
adc
and
mov
jne
or
dec
mov
inc
mov
pop
sbb
outsb
mov
ljmp
dec
xchg
test
lock
pop
and
push
xchg
sub
sbb
add
out
xchg
mov
sbb
adc
andb
inc
popf
xor
iret
xchg
xor
sub
icebp
cmpsb
lods
lods
or
gs
fwait
aad
xor
jo
mov
fidivrl
push
aad
push
fwait
sbb
jns
dec
push
or
fimull
fisttpll
mov
fisubl
cmp
sti
int
jae
insl
repz
and
xchg
dec
or
fwait
stos
in
cs
mov
and
shrl
push
add
jp
test
fdiv
and
into
sahf
sub
mov
scas
roll
push
loop
mov
push
jl
jg
fisttpl
fidivrl
pop
cmp
push
das
pop
and
lret
fldt
sbb
cwtl
fs
mov
pushf
aaa
push
sti
cmp
dec
mov
lds
mov
mov
jne
in
ds
mull
sub
int3
sub
lock
and
popf
cmpsb
test
not
xor
pop
sub
add
repz
xlat
mov
and
je
das
adc
cltd
push
and
inc
das
or
add
call
in
cmp
pushf
jnp
in
inc
sbbl
fucomp
stos
sub
sbb
lea
mov
loop,pt
push
mov
fadds
and
lea
sbb
pop
dec
sbb
xor
xor
int3
call
subb
mov
sub
jg
pop
outsb
movb
out
dec
inc
lock
outsl
jbe
fstpl
gs
stc
outsl
pop
hlt
push
add
adc
or
mov
cwtl
push
jge
mov
mov
and
lock
repz
mov
pop
xorl
mov
lret
dec
cltd
sub
cmp
xchg
inc
out
dec
shlb
dec
fisubrl
movsl
xor
or
in
std
repz
add
sbb
inc
or
pop
sahf
mov
and
js
out
push
in
xor
enter
and
inc
mov
enter
imul
xchg
push
xor
mov
in
cli
data16
cmp
and
into
fcoms
or
pusha
jmp
inc
xor
mov
xor
push
or
mov
in
clc
das
sub
imul
popa
icebp
test
jno
mov
lahf
jb
mov
or
daa
insl
xchg
imul
mov
ss
ja
add
add
fs
jmp
dec
mov
jb
jl
stc
repnz
mov
jmp
add
sub
pop
fadds
scas
xorb
or
jmp
jg
sbb
jmp
mov
add
data16
sti
or
dec
or
in
pop
lods
aas
out
fsubrp
clc
xor
inc
dec
outsl
insb
mov
xor
jle
jb
negb
les
or
rcll
sbb
dec
add
jmp
stc
imul
sbbl
xchg
mov
out
testl
out
and
stos
jno
popa
xor
jmp
push
ss
movsl
inc
in
test
xchg
add
in
scas
inc
add
mov
lret
sub
push
sti
pop
xlat
xor
cltd
sbb
mov
dec
enter
cmpsl
test
or
loope
xorl
sub
mov
and
rorl
jle
cmp
lahf
rorl
xor
inc
sbb
sti
aaa
aam
bound
push
leave
jae
cld
imul
mov
test
movsb
gs
data16
mov
pop
jno
jnp
mov
movsl
aam
push
sub
nop
fbld
cmpsb
popa
inc
xor
or
movsb
lods
movsb
cmp
mov
add
sbb
add
lea
adc
jbe
pop
mov
pop
or
dec
mov
in
inc
sub
jl
inc
pop
mov
stos
push
inc
mov
aam
cmp
mov
xchg
sub
imul
and
into
fwait
pop
fistpll
incl
shlb
or
dec
aam
pushf
or
mov
imul
or
call
push
pop
je
dec
add
sahf
popf
out
or
lods
bound
push
je
data16
pop
pop
std
jbe
lahf
mov
mov
cmc
mov
jle
das
sub
dec
add
ljmp
or
add
adc
ret
clc
mov
jge
nop
push
iret
sub
insl
cld
xchg
inc
jge
aaa
das
xor
mov
and
aam
or
inc
rolb
push
xlat
iret
mov
mov
cld
pop
xchg
mov
add
dec
fldl
fldz
push
mov
push
cmpsb
lock
shlb
fiadds
je
add
pushf
fidivrl
rcll
push
leave
in
aas
out
cmp
popl
imul
inc
jo
add
lock
jns
jnp
sbb
cmp
loopne
pop
sub
enter
mov
inc
pop
fisttpll
jnp
lock
dec
je
push
inc
int
fidivl
xor
sbb
sbb
sbb
out
aam
add
add
icebp
inc
push
lcall
cmp
sub
aaa
adc
xor
xchg
inc
inc
mov
iret
sbb
sar
dec
mov
pop
and
dec
push
mov
jp
cmp
cmp
push
out
testb
in
int
push
mov
push
mov
push
adc
jl
lea
fstpt
ss
sub
xlat
ljmp
ret
popf
sub
dec
push
dec
mov
and
adc
pcmpgtd
dec
mov
aaa
out
in
jne
and
dec
add
mov
mov
pop
mov
sub
test
mov
fwait
mov
mov
or
arpl
pop
hlt
icebp
pop
or
loopne
mov
pop
add
jb
mov
cmc
icebp
movsb
cmp
call
mov
movsl
mov
jne
mov
ficoml
and
or
sub
inc
sbb
lret
push
test
movsl
test
pop
cmp
mov
sub
mov
mov
mov
es
mov
nop
cmp
xchg
mov
sub
lds
sbb
lcall
dec
scas
insl
data16
xchg
adc
je
pop
cli
lahf
out
sub
mov
stos
xor
or
mov
or
jns
pop
push
mov
adc
sbb
cld
dec
push
jl
enter
sbb
call
or
sahf
movsl
jecxz
imul
mov
dec
clc
inc
inc
jae
xor
rcll
sbb
in
xchg
decl
and
or
and
out
and
inc
daa
out
lods
daa
les
outsb
ljmp
adc
jl
orb
es
lahf
call
or
cwtl
int
xchg
fldlg2
pop
mov
divb
fnstenv
mov
cli
repnz
xchg
andl
lret
push
mov
sub
mov
push
push
lods
mov
mov
mov
jle
aaa
imul
inc
test
or
cmp
and
sbb
push
ja
fsubl
ljmp
pop
and
cli
out
or
and
pop
addr16
stos
js
stos
loopne
xor
xchg
push
sahf
inc
das
fisubs
adc
mov
orl
jmp
mov
xchg
sbb
add
mov
mov
inc
mull
loop
push
jmp
pop
adcb
test
call
cwtl
stc
enter
xchg
dec
pop
or
notl
sub
repz
jle
jmp
fidivs
repz
je
movsb
loopne
aad
dec
mov
test
les
rcrl
fadd
imul
bound
pop
mov
push
and
out
xorb
cmp
xor
fucomi
or
sbb
adc
adc
sub
sti
fisttpll
popa
pop
or
je
mov
lahf
lret
dec
jno
rolb
jo
dec
mov
add
mov
loope
sbb
pop
sub
mov
loop
push
xchg
or
into
dec
loopne
dec
lret
loope
or
sti
or
and
enter
stos
dec
lahf
dec
ss
xchg
mov
push
and
repnz
push
adc
pusha
cmp
lock
inc
adc
jmp
xorb
cmp
xor
out
cmp
pop
fstpt
jo
inc
and
xor
xor
fiaddl
adc
hlt
xchg
dec
adc
insb
das
and
repz
dec
pop
cs
add
xchg
shlb
stos
xchg
or
or
cltd
movsl
push
mov
iret
jae
xchg
xor
mov
jbe
push
cli
xchg
add
jo
push
or
jle
cwtl
mov
scas
lret
lds
clc
mov
fcoms
mov
scas
insb
aam
popa
out
call
mov
mov
add
inc
aam
cmp
push
loopne
stos
orb
xlat
outsl
sub
fdivs
push
icebp
mov
mov
mov
cmp
mov
dec
xlat
mov
aad
stc
sub
lods
jp
jmp
shr
es
pop
xchg
enter
mov
lea
data16
add
push
mov
ds
cmp
bound
cli
imul
sbb
sub
popf
push
xor
lcall
mov
movsb
mov
push
add
or
cwtl
idiv
jmp
pop
mov
ljmp
cmpsb
push
popf
pop
push
cltd
mov
dec
cli
adc
mov
push
cmpsl
ljmp
ljmp
add
sub
cs
or
aas
iret
adc
cwtl
adc
mov
push
daa
scas
loopne
jb
xchg
js
pop
push
in
inc
in
or
push
xor
inc
jl
jne
scas
pop
push
sub
and
repnz
loope
int
fisubrl
mov
add
mov
sbb
popa
sbb
aas
push
lods
adc
cmp
and
dec
rcll
and
je
add
ds
pop
cmpsl
out
push
in
or
and
add
adc
pop
insb
enter
ficoms
stos
and
sub
repz
ss
shrl
setle
incb
mov
aaa
adc
lods
movsb
fwait
ret
gs
cmpb
popa
cmp
dec
repz
xor
jg
hlt
fadds
lock
cwtl
shlb
insl
fbld
jae
mov
dec
inc
lods
jecxz
dec
popa
sub
int3
adc
add
xor
or
aam
imul
mov
inc
pop
stos
add
mov
aas
inc
sahf
or
fwait
imul
cmp
aad
jnp
ja
lret
or
enter
xor
fs
ss
pushf
cmp
movsb
jmp
push
imulb
jmp
shrb
ja
je
adc
mov
je
dec
in
addl
mov
int3
mov
call
das
xchg
in
mov
ret
xchg
and
lods
popf
out
stos
repnz
pop
test
test
ret
inc
lds
sbb
or
xchg
fs
call
fildll
insl
xchg
sub
iret
rcl
aaa
dec
repz
ljmp
push
in
aas
fucom
xchg
mov
cmpsl
cmp
sbb
dec
stos
filds
gs
rorl
cmp
das
in
add
iret
cmp
jle
repnz
xchg
push
inc
xchg
cmp
imul
lds
and
inc
push
mov
inc
ds
cmpsl
pop
je
clc
dec
mov
fistpll
mov
inc
xor
popf
dec
icebp
inc
xor
rcrl
xchg
fistpll
cmp
pop
fildl
mov
push
mov
inc
sbb
xchg
jns
mov
int
and
and
xlat
inc
pop
add
mov
sti
call
xor
lret
ja
inc
xchg
push
lcall
mov
push
imul
repz
out
jno
adc
jp
dec
jge
jl
pop
pop
xlat
je
jg
cmc
lea
jbe
imul
mov
repnz
out
ss
xchg
cld
dec
filds
ljmp
xchg
stos
out
daa
insl
dec
push
bnd
imul
cmp
out
push
xchg
stos
mov
fsts
rol
sti
xorb
hlt
push
push
imul
cmpsl
jbe
adcl
push
or
mov
mov
dec
andl
and
jb
sbb
pop
repnz
inc
push
inc
mov
sahf
push
pop
negb
xlat
mov
outsl
imul
cmp
dec
xchg
add
xchg
mov
sbb
jecxz
push
cmpsb
fsubrs
movsl
adc
subl
jbe
sub
xchg
mov
push
pop
cli
push
xchg
mov
add
test
pop
or
or
mov
and
sub
loop
cmp
incb
movsb
add
xor
jns
jb
pop
incb
jne
in
repnz
jle
xor
push
xchg
mov
nop
sti
shlb
divl
and
mov
test
idivl
aam
xorl
cmp
sbb
jmp
test
inc
cmc
shrb
ja
das
pushf
mov
icebp
xchg
xor
rolb
dec
gs
inc
push
mov
or
insb
jno
pop
xchg
push
int
in
xchg
mov
pop
jecxz
inc
and
mov
arpl
dec
cmpsb
adc
inc
stos
cltd
dec
dec
sub
popa
jg
das
lods
insl
out
pop
lret
add
mov
mov
mov
or
and
mov
in
loope
mov
cmp
mov
pop
jl
inc
dec
jle
es
add
push
stos
adc
popa
mov
aad
ljmp
out
push
xchg
shll
popf
xchg
mov
rcr
or
test
lea
outsb
xchg
jge
cld
js
arpl
shlb
dec
inc
gs
repz
daa
stos
pop
aam
dec
cmp
lods
cmp
mov
fpatan
sbb
lods
xor
out
add
int
xchg
ret
mov
ja
test
or
ja
out
jbe
les
cs
jmp
inc
xor
xchg
xchg
xchg
fnstcw
ss
fnsave
pop
outsl
cli
sbb
xchg
call
cmp
ljmp
call
hlt
into
in
xor
lcall
fdivrs
or
movsl
pop
es
fdivs
xchg
out
sti
mov
sahf
outsl
ret
pop
les
or
aaa
add
das
outsb
push
mov
add
mov
sub
sbb
cmp
add
lret
cmpb
jae
inc
push
jg
aad
inc
ret
mov
pusha
push
or
sarb
dec
mov
shll
add
dec
mov
daa
popa
jecxz
popa
stc
add
rcrl
mov
pop
mov
int3
push
xchg
or
mov
int
push
out
jo
mov
out
xor
or
cmp
stos
and
loopne
xor
jl
mov
ljmp
pop
es
ss
pop
or
fs
jge
sbb
stos
mov
dec
mov
fistpll
mov
sbb
xchg
xchg
sti
jge
dec
pop
mov
fists
push
sbb
imul
mov
mov
lods
roll
lods
xchg
mov
cmpsl
or
mov
mov
xchg
xchg
lcallw
pop
outsl
xor
imul
popl
fdivr
sbb
fstpt
jo
mov
jb
jmp
popf
rorl
dec
dec
sarl
pop
mov
or
in
sub
and
sbb
mov
lahf
xchg
jg
rcrl
addr16
out
je
shrl
js
xchg
push
imul
pop
bound
std
leave
add
fdivr
insl
mov
test
jp
fstl
pop
pusha
cmp
sub
and
jb
pop
fiaddl
sub
lret
imulb
in
cmp
inc
les
sbb
fwait
mov
pop
ja
stos
gs
test
jnp
lret
into
hlt
shll
sahf
xchg
mov
ljmp
dec
mov
test
xor
jge
test
jecxz
mov
cmp
xchg
aam
and
mov
insb
pop
loope
mov
std
lcall
mov
enter
mov
cmc
pop
xor
jno
hlt
jae
jmp
lods
lods
orb
pop
je
mov
cmp
push
or
dec
and
lret
or
or
lods
call
jp
pushf
mov
xchg
dec
das
dec
fidivs
int3
xchg
call
shr
in
xor
push
inc
mov
mov
stos
imul
xor
subb
out
fisubrl
and
sub
dec
negl
mov
lcall
dec
mov
int
movsl
push
scas
pop
shl
cmp
insb
xchg
test
sti
sbb
sbb
es
call
push
inc
lds
xchg
mov
pop
test
mov
cmp
sbb
enter
lods
rcr
and
aas
mov
sbb
stos
xchg
cmp
js
adc
push
xlat
pop
rorl
jb
in
sbb
mov
arpl
cmc
adc
ss
lods
lods
jge
inc
xor
fwait
in
fdivrs
pop
in
mov
sbb
mov
inc
mov
loope
or
jmp
or
mov
sub
mov
dec
jno
fstps
dec
jbe
call
inc
stos
ja
movb
popf
cmpb
outsl
mov
inc
push
in
fdivrp
push
xor
xorb
jo
mov
sahf
xchg
into
push
in
pop
pop
sub
mov
xor
and
dec
and
dec
ret
cmpsb
outsb
mov
int
mov
xor
mov
inc
xor
jo
inc
ljmp
loope
mov
jmp
mov
aad
cli
dec
mov
inc
lret
in
adc
jle
inc
mov
mov
push
mov
daa
loope
lea
dec
xchg
jnp
cld
mov
cmpsb
pop
sub
cmpsb
in
test
cmp
or
daa
fs
mov
and
mov
out
imul
push
sub
pop
loop
or
lock
mov
push
cli
cmp
mov
stos
mov
pusha
movsb
addr16
mov
inc
les
mov
popa
test
push
cltd
pusha
dec
cs
xor
pushf
xor
inc
pop
or
inc
addl
xchg
push
lahf
insl
xor
mov
jg
xchg
mov
xorl
sub
notb
push
call
jb
insb
idivl
imull
jo
jnp
mov
xor
int3
stos
jl
das
shll
sbb
lret
shll
jg
daa
shl
int
inc
mov
cmpb
data16
mov
pop
inc
in
cwtl
pop
push
pop
and
stos
mov
and
jl
dec
out
jne
ds
push
adc
xchg
jbe
mov
adc
dec
pusha
mov
mov
mov
mov
shrb
in
inc
andl
xor
ljmp
push
sahf
push
mov
and
cmc
cld
mov
pop
cmp
cltd
mov
fisttpll
push
in
sbb
in
int3
out
xorb
xchg
adc
movsb
lret
xor
out
and
push
fistps
orb
sti
cmp
inc
adc
xor
pop
mov
in
mov
call
test
addr16
loope
sub
notb
jne
push
sbb
cmc
daa
cmp
lea
gs
test
xor
mov
loopne
out
fmuls
stc
mov
leave
mov
xchg
mov
ret
jge
imul
and
cwtl
cmp
clc
int3
jmp
es
aad
dec
jnp
xor
cmpsl
pusha
mov
mov
shr
pushf
aam
shrl
push
dec
xor
aad
aam
clc
ljmp
imul
sub
rcr
adc
test
jmp
dec
popf
js
insb
inc
pop
dec
popa
pop
jge
mov
sub
sub
in
inc
test
cmpsl
mov
sub
imul
pushf
sub
xor
xchg
leave
lea
mov
ret
arpl
cli
inc
jne
clc
mov
ss
and
xchg
imul
dec
popf
mov
popf
cmc
push
xchg
add
dec
aaa
adc
mov
int
mov
leave
cs
xlat
cltd
mov
xchg
mov
or
mov
gs
cmpsb
inc
push
cmp
cmp
es
mov
adc
jmp
outsb
dec
add
push
sarb
cli
mov
jbe
icebp
js
sub
inc
cli
jle
xchg
and
or
cmc
dec
dec
push
push
cli
lea
movl
add
in
jae
jae
cmp
mov
mov
test
fs
pop
xchg
int3
shll
repz
call
punpckhdq
adc
call
add
fists
lret
dec
cmpsl
aaa
mov
pop
outsb
adc
addr16
cpuid
fwait
movsb
bound
adc
inc
test
push
xchg
dec
fcoms
and
scas
pop
xchg
mul
js
shr
xchg
cmp
js
notb
jle
daa
adc
lcall
roll
dec
test
imull
es
add
jp
and
sub
lods
adc
cmp
sahf
push
pop
clc
inc
jne
cwtl
das
xor
xchg
mov
imull
jno
add
sarb
nop
stos
push
sarl
icebp
inc
sub
popa
push
push
pop
movsl
out
inc
push
jmp
mov
add
adc
mov
xor
aam
sub
pop
aad
and
dec
stos
adc
mov
idivb
xchg
cli
xchg
loope
cmpsb
cs
pop
out
and
sub
lds
cmp
iret
jne,pn
rorb
inc
lcall
dec
out
mov
gs
xor
xor
stos
es
fidivs
ror
sub
sbb
fistpl
test
nop
jne
in
pop
mov
mov
out
sbb
inc
cwtl
dec
fisubl
mov
loop
jae
sub
add
lds
sahf
gs
inc
lock
lods
cmp
fstpt
mov
sbb
call
lret
mov
push
mov
and
mov
mov
cmpsb
loope
ror
test
lds
push
xchg
sub
cmpsl
icebp
or
repnz
jg
inc
lods
lcall
add
loope
mov
negl
pop
add
lods
in
xchg
mov
adc
or
adc
mov
ret
add
in
jmp
or
test
mov
adc
cmp
add
dec
pop
sbb
jmp
sub
mov
in
outsl
xchg
out
or
push
mov
stc
in
mov
adc
xor
lea
sub
sahf
aaa
sbb
sbb
push
xlat
stos
mov
inc
sbb
lds
add
cmpsb
mov
xchg
fmuls
jecxz
sarl
add
imul
jae
mov
inc
pop
stos
pop
dec
mov
lcall
incl
or
fwait
in
repnz
adc
push
jno
mov
pop
mov
push
and
into
into
sbb
jmp
dec
jns
movsb
mov
xchg
out
mov
fidivrl
lock
das
scas
in
lret
xchg
cltd
jl
jg
aam
jne
sbb
mov
movsl
mov
fildl
rclb
or
int
pop
call
jmp
ds
pop
jns
stc
xor
sub
pop
icebp
inc
add
inc
mov
add
cmp
push
push
ja
mov
imul
cmp
xor
dec
dec
cmp
aaa
fstpt
lret
lcall
lods
out
pop
std
or
je
ret
into
in
mov
repz
adc
dec
mov
leave
aad
mov
insb
pop
add
neg
mov
sbb
mov
or
and
sti
fs
enter
xchg
jp
push
sbb
push
cmp
push
les
xlat
out
pushf
das
ret
dec
mov
cwtl
bound
inc
jno
jge
sbb
adc
xor
jle
addb
adc
shll
push
lods
push
xchg
mov
push
cmp
jmp
and
adc
leave
int
decb
clc
arpl
pop
pop
lret
insl
arpl
dec
fwait
pop
mov
jle
mov
out
push
jns
mov
or
mov
aam
and
test
or
lock
faddl
add
pop
imul
pop
movups
jnp
pop
movsb
andl
insb
stos
leave
mov
lahf
xor
push
test
add
sbb
push
or
and
xchg
and
xlat
xchg
mov
popf
out
lahf
jecxz
mov
push
pop
out
sahf
adc
cmp
test
push
mov
cmp
cmc
inc
pop
mov
ret
mov
and
repz
inc
lods
clc
push
mov
xor
dec
fwait
cmp
mov
push
nop
insb
pop
push
lret
fsts
test
clc
xchg
push
or
xchg
shll
inc
ret
in
mov
cli
cmp
push
pusha
dec
jmp
test
sarl
movsl
xchg
mov
inc
pushf
lods
push
sbb
lods
jnp
ja
push
xor
into
xchg
xchg
in
cs
jge
in
mov
xchg
mov
pop
leave
push
mov
adc
push
or
out
mov
int
mov
add
test
mov
movsb
jb
dec
mov
xchg
xchg
adc
mov
push
fdivs
mov
mov
inc
lcall
out
dec
dec
and
clc
mov
jecxz
xchg
mov
ljmp
pushl
jnp
cmp
sahf
cmpsl
jne
iret
clc
mov
sub
ja
pop
rcrb
push
push
scas
sbb
insl
lea
outsl
hlt
rorl
and
mov
shrb
bound
mov
and
lods
mov
mov
or
mov
mov
sti
mov
pop
inc
mov
test
mov
mov
stc
fnstsw
adc
mov
push
rcrl
add
popa
jecxz
xchg
scas
stos
bound
mov
mov
sub
dec
loopne
data16
pmaxsw
nop
xchg
pop
ret
pop
dec
stos
lods
and
iret
stos
cs
mov
add
cs
sub
push
add
test
popl
out
out
in
dec
shrb
fistpl
push
loop
push
add
push
testb
dec
ja
stos
mov
in
push
push
in
cmc
push
fsubs
clc
pop
push
xor
add
ret
pop
gs
aam
push
fnstenv
mov
pop
adc
adc
out
pop
test
int
inc
addb
int
fisubl
xor
adc
rcrb
jg
add
xor
sub
fucomi
les
loop
xchg
dec
cli
jne
mov
dec
data16
mov
cmp
pop
or
push
adc
pop
add
and
lret
add
rep
add
dec
xor
add
push
dec
inc
sbb
jbe
jmp
insb
loop
aaa
mov
leave
push
xor
aaa
mov
or
loopne
mov
aas
arpl
mov
stc
sub
push
jae
rorl
xchg
dec
idivb
pop
dec
adc
cmp
into
cmp
jle
int3
push
and
jle
cmp
aas
push
or
add
cmp
push
inc
dec
mov
inc
mov
test
xchg
sub
inc
push
sbb
pop
jns
aaa
in
call
sahf
and
xor
test
cmp
fdivl
inc
or
push
pop
orb
xor
mov
scas
push
pop
adc
sti
dec
mov
xchg
pop
idivl
jg
mov
jmp
lret
pop
dec
decl
jb
pop
sarb
adc
repnz
pop
mov
rolb
mov
pop
jae
mov
dec
popa
dec
adc
or
rorl
sbb
jecxz
lret
movsl
mov
adc
out
pop
mov
fdivrl
fidivrs
sub
jmp
filds
ljmp
and
loope
jb
or
mov
dec
sbb
jb
mov
out
xchg
mov
mov
mov
das
addr16
out
movsl
popf
pop
in
dec
mov
jnp
or
cmp
int
sbb
cli
pop
orl
and
jl
adc
adc
js
std
xchg
dec
fs
mov
dec
jb
divl
adc
js
rolb
pushf
sbb
stc
orl
cmpsb
ret
dec
mov
push
inc
mov
test
les
loope
call
adc
mov
test
repz
xlat
aaa
mov
test
jno
arpl
mov
cmp
mov
inc
rcrb
fwait
adc
push
fs
arpl
out
mov
push
xor
sub
inc
out
mov
xchg
lds
cmpsl
ss
inc
push
mov
lret
pop
aam
xor
sub
push
popa
cltd
mov
ds
jecxz
and
cmpsb
inc
inc
dec
inc
out
dec
mov
push
jnp
adc
iret
lahf
inc
mov
scas
fs
cmpsb
jle
gs
jmp
xchg
adc
leave
push
sub
aam
test
rcrb
or
mov
sbb
fs
cltd
push
mov
aad
insl
leave
aam
dec
mov
push
lahf
mov
or
jnp
adc
sbb
push
and
inc
push
stc
stos
mov
sahf
cmp
xor
loope
and
mov
mov
mov
pop
push
inc
cltd
jne
pop
pop
rcrb
test
fwait
es
sbb
cs
daa
insb
sub
push
pop
dec
enter
sub
sub
aam
cs
ljmp
mov
add
add
loopne
add
fcoml
cmp
in
popa
and
mov
pop
lcall
leave
or
iret
movsl
cmc
mov
insb
xor
push
xchg
pop
dec
sub
leave
ss
lret
jge
test
pop
push
lcall
pop
inc
dec
ud0
into
test
movsb
enter
addb
arpl
scas
lods
jo
rorb
ja
lcall
jb
inc
lret
mov
add
lds
fdivrp
or
cs
sahf
rorl
sbb
sbb
add
push
mov
push
lods
cmp
call
imul
stos
rep
loopne
cld
pop
nop
test
andps
cli
adc
in
or
rolb
jmp
jp
stos
xchg
leave
cmpsb
push
int
rcrb
add
fwait
xor
shlb
je
and
or
shll
dec
shll
cmp
jecxz
pop
jno
xor
movb
rol
pop
jl
insl
sahf
fmull
add
andl
imul
xchg
outsb
xchg
and
push
dec
loopne
adc
lds
or
inc
xchg
test
xor
iret
pusha
mov
int3
jge
sub
repz
fidivs
rcrl
mov
addl
cld
into
push
or
adc
mov
pop
shrl
mov
jp
js
mov
pop
jmp
xor
dec
cmp
je
repz
pop
push
pop
inc
int3
gs
or
insl
test
inc
push
cld
shlb
push
lock
adc
lret
in
push
jno
mov
push
js
mov
sub
ficoml
pop
hlt
mov
mov
inc
outsb
xor
jno
cmp
xchg
sbb
dec
dec
xchg
or
addb
cli
notb
dec
inc
ja
jne
or
cmp
dec
sbb
push
popf
dec
push
in
sti
out
out
mov
inc
jp
pop
daa
mov
jo
cmp
xor
push
fld
push
xchg
mov
add
adc
fldcw
jo
and
divl
popf
insl
aam
test
xor
sbb
outsl
or
pop
es
add
sub
cli
pushf
popf
pop
into
addl
add
insl
in
mov
sub
cmp
pushf
aas
jno
hlt
jmp
dec
push
push
or
push
push
lock
cmpsb
stos
or
movsb
jle
mov
popa
adc
and
cmp
cmp
sti
inc
push
lods
scas
mov
sub
cmp
push
fisubrs
sub
push
daa
inc
mov
inc
es
add
mov
outsl
insl
ja
movl
xchg
ret
inc
jmp
or
insb
roll
sbbb
stos
jmp
push
mov
lcall
mov
mov
popf
lcall
ret
xor
addb
or
mov
ljmp
ja
lods
orl
push
mul
or
out
in
sbb
push
mov
cmc
fdivrs
lock
or
lods
jnp
mov
mov
fwait
popf
stos
jns
jb
sub
es
fstpt
mov
aad
xor
and
je
test
ja
test
xor
jge
mov
adc
loopne
jae
or
das
mov
imul
hlt
or
notb
and
push
das
sub
mov
out
pop
push
xor
push
enter
shl
shll
mov
int
pop
xor
ret
mov
outsl
or
add
adc
in
movsl
in
lret
push
mov
outsb
add
lods
and
andl
lcall
xchg
xchg
out
mov
push
loopne
addr16
test
mov
lahf
test
inc
js
stc
mov
xor
and
cmp
inc
adc
jbe
repnz
pop
add
adc
adc
std
cmp
in
adc
mov
cli
push
mov
and
or
imul
ss
mov
add
ja
inc
or
out
out
lods
insl
adc
jl
test
push
jle
add
movsl
dec
jb
nop
fs
out
add
ret
popl
xchg
divb
push
pop
pop
mov
mov
shll
in
jle
ret
jo
cmp
xor
push
inc
ljmp
adc
mov
jo
xor
scas
jle
shrl
lods
push
into
mov
cmp
bound
dec
cmp
dec
cltd
mov
mov
call
pop
pop
arpl
shll
sub
rorb
cwtl
int3
dec
sets
cld
jp
jmp
notb
clc
xchg
or
cltd
xor
jp
push
push
sub
add
jmp
clc
test
flds
ret
lcall
ja
jnp
test
push
iret
xchg
mov
pusha
dec
sti
fistpll
fcomps
xor
xor
xchg
adc
into
xor
and
mov
xor
push
pusha
sbbl
jb
push
mov
enter
mov
dec
iret
mov
sub
pusha
mov
mov
inc
sarl
mov
mov
popa
cmp
call
insb
push
mov
out
sti
xor
insb
push
adc
dec
add
fnstsw
mov
mov
stos
hlt
aaa
lahf
cltd
insl
fstpl
mov
mov
lds
cmp
cwtl
mov
sbb
xor
stos
mov
iret
xchg
je
std
cmp
mov
sbbl
roll
dec
enter
xchg
mov
frstor
dec
jle
test
loope
std
and
ret
and
movl
inc
mov
mov
or
jne
mov
cs
pop
sub
xlat
inc
loop
jg
push
sbb
js
xchg
mov
lret
repnz
call
cmc
out
imul
testl
push
aad
jge
push
pop
sub
pop
sub
dec
gs
mov
mov
push
scas
add
cmp
scas
cld
inc
in
dec
xchg
lahf
dec
insb
das
orl
shll
ret
call
test
push
or
andb
mov
sub
pop
fistl
push
cmpsl
fwait
loopne
cmpsb
push
jecxz
sub
mov
ljmp
mov
jecxz
push
mov
jecxz
mov
out
lods
mov
jne
xor
jp
sbb
loope
loope
sbb
mov
push
push
fldenv
lock
lods
pop
mov
stos
out
sub
jnp
pop
xor
in
or
jecxz
ss
dec
mov
or
add
cli
pop
jg
gs
loopne
ret
shll
xchg
ret
rol
xchg
jnp
adc
sbb
xor
push
mov
push
jae
mov
andb
scas
pusha
repz
in
inc
into
adc
cmpsb
adc
arpl
popa
cmp
push
mov
faddl
xchg
loope
out
das
insb
mov
cmp
mov
xor
xor
lea
or
cmpsb
fldl
jmp
pop
mov
mov
out
ret
xchg
pop
fcoms
sub
js
dec
mov
aas
mov
adc
call
sbb
mov
dec
xor
aad
ds
xrelease
jg
xchg
inc
movsb
enterw
bound
push
push
sub
cmp
pop
loope
ds
mov
push
push
movsl
pop
push
pop
fidivrl
mov
sti
and
pop
push
adc
lods
cmp
es
xchg
pop
push
outsb
outsb
push
rclb
ljmp
jecxz
std
punpckhdq
xor
xchg
pop
sub
mov
sbb
jno
mov
jnp
pop
cmp
fstl
lahf
inc
adc
dec
inc
mov
inc
mov
push
fdivrs
xchg
fidivs
lret
jle
sbb
inc
fstpt
out
sub
mov
fldcw
sbb
jns
repz
pop
imul
fmul
jbe
mov
or
in
mov
xchg
mov
jecxz
push
popa
sbb
inc
outsl
das
and
add
xchg
imul
out
sar
loope
mov
adc
pushf
and
mov
push
mov
mov
scas
cmpsl
jmp
push
fldenv
imul
ret
pop
mov
mov
dec
cli
adc
sbb
sbb
popf
push
jl
inc
and
int
pop
xchg
addr16
insl
lock
sarb
das
cmp
in
lods
dec
rorb
cmp
mov
adc
push
ja
dec
mov
push
push
or
adc
jbe
mov
stos
push
inc
xchg
or
sbb
dec
je
aaa
jmp
ljmp
pushf
mov
cmp
or
pop
jle
pop
es
lods
xchg
gs
loop
xor
jge
in
adc
ljmp
int3
pop
adc
xchg
jns
mov
aam
fwait
adc
notb
cwtl
mov
dec
lock
pop
dec
in
outsb
push
test
cmp
push
xchg
jo
or
bnd
inc
xchg
mov
fwait
imul
aaa
xor
and
xchg
mov
push
mov
cmpsb
jecxz
rorb
hlt
pop
inc
push
and
and
adc
mov
fs
gs
movsl
sbb
lods
cmc
fs
ficompl
ret
outsb
pop
pop
sub
sub
test
push
scas
jg
lock
out
into
gs
imul
jmp
mov
inc
adc
fcmovne
sbb
xor
out
test
jl
rcl
cmp
fidivl
mov
mov
mov
add
inc
addr16
xchg
add
adc
jno
dec
push
add
iret
mov
add
test
cs
into
clc
shlb
jge
imul
into
mov
pushf
jnp
mov
cmp
lods
adc
lock
inc
add
cmpsl
cmp
out
mov
hlt
push
and
lcall
cs
jbe
cmp
loopne
sbb
cld
pop
mov
xchg
es
or
mov
out
je
add
xor
xor
xchg
add
into
adc
aad
or
sbb
cmpsl
enter
sbb
cld
push
data16
sbb
imul
mov
test
subl
sub
push
xor
and
enter
subl
xor
jle
imul
jge,pn
adc
aas
jne
bnd
dec
push
add
aaa
cmpsb
mov
fldcw
pop
xchg
push
push
xchg
pop
sub
rorb
pop
mov
mov
mov
pop
fisttpll
lea
jg
nop
dec
mov
jno
setnp
xor
sub
adc
inc
sahf
push
or
ss
fildl
push
xchg
push
sahf
in
int3
mov
and
mov
or
dec
int3
jns
jae
into
test
out
mov
cmp
stos
insl
lret
out
out
setbe
push
fs
jno
popa
jbe
fisubrl
mov
hlt
mov
lret
aam
rolb
sub
fs
mov
jae
pusha
and
xchg
cld
rcrl
sbb
pop
cmc
mov
sbb
jl
test
sub
lods
insl
in
mov
test
push
push
jo
nop
inc
mov
mov
mov
adcb
or
hlt
jecxz
repz
pop
lock
ret
jp,pt
inc
xor
xchg
mov
je
mov
sarb
test
out
jg
pop
rcrb
inc
sbb
lds
inc
push
pusha
cmp
movsl
sbb
pop
and
inc
hlt
jl
sar
clc
lods
sbb
xor
icebp
shll
mov
push
out
out
aad
lods
pop
or
xchg
repz
sub
fmuls
jl
out
repz
jnp
out
dec
jnp
jge
add
xor
sbb
int3
add
or
push
stc
in
dec
push
xchg
cmp
add
imul
dec
mov
iret
push
sbb
cltd
stos
sbb
ret
mov
lea
push
jns
inc
mov
gs
je
inc
pop
mov
rcrb
ret
and
mov
xchg
dec
out
in
mov
push
mov
fisubrs
cmpsb
mov
sub
fdivrp
pushf
mov
push
pop
inc
and
std
jne
xor
cmpsl
mov
stc
pop
in
push
fiaddl
insb
mov
out
ror
test
enter
out
test
mov
bound
jp
push
jns
jle
fmuls
idivb
xchg
push
imul
push
dec
cmp
sbb
addr16
dec
ja
pop
cmpsl
mulb
icebp
adcl
cltd
sub
mov
cli
pusha
sbb
xlat
push
dec
sbb
xchg
inc
xchg
pop
call
mov
push
mov
loope
or
ja
aad
sub
push
and
cmp
hlt
cs
jg
int3
int3
pop
mov
es
xor
pop
mov
adc
aam
lock
in
adc
mov
loope
das
push
test
insb
vphaddwq
lods
push
sub
fyl2x
or
xlat
mov
cmp
inc
inc
das
mov
jmp
adc
stos
stos
xor
je
je
cmc
mov
fwait
and
xor
fst
add
mov
cltd
sub
movsb
add
in
imul
decl
sbb
pop
stos
das
pushf
jecxz
sarl
or
aas
pop
mov
repnz
int3
xchg
cmp
mov
pop
sahf
mov
cld
jg
mov
pop
push
cmpsb
sar
add
sahf
in
xor
pop
fwait
cli
dec
or
mov
pusha
mov
subl
jmp
and
lret
aaa
inc
jnp
mov
jns
arpl
dec
pop
mull
xor
fsubs
xor
pop
jmp
iret
dec
cmpb
jae
pop
xchg
pop
repnz
jl
pop
repnz
and
mov
addr16
es
insb
in
fistl
aaa
scas
imul
xchg
mov
insl
cmpsb
out
push
fadd
test
aam
into
sti
and
xchg
loop
push
loopne
dec
pop
push
push
mov
add
idivb
popa
out
daa
test
mov
dec
cld
inc
jl
pop
cmp
mov
xchg
pop
inc
pop
fwait
jns
push
lahf
push
addr16
ljmp
fidivs
pop
dec
int
mov
cmp
testl
push
jg
fnstsw
ss
cmc
xchg
pop
out
pop
scas
and
xchg
mov
cwtl
mov
cs
sbb
xor
ret
mov
ss
insl
daa
ret
clc
mov
jge
and
lock
or
lcall
adc
jns
xchg
les
and
jecxz
stc
mov
setp
daa
jno
adc
dec
mov
stos
adcl
xchg
scas
aaa
mov
sbb
sub
fdivrs
int3
test
andl
push
or
and
imul
nop
push
insl
fimuls
imul
jmp
cmp
pop
mov
jge
pop
xlat
repz
push
cmp
jns
aas
inc
lea
sub
xchg
mov
std
cmp
cmpsb
leave
jb
or
inc
dec
add
jne
gs
adc
popf
dec
jg
fwait
inc
inc
div
jmp
pop
nop
mov
cwtl
ss
push
lock
fisubl
sub
cmp
add
das
sbbl
mov
dec
pop
js
dec
push
fs
mov
sbb
mov
jne
ret
xchg
mov
add
xor
pop
test
sub
mov
scas
jmp
loopne
push
push
ja
cmp
push
jg
mov
jge
pop
push
pop
ja
pop
push
add
ljmp
mov
sub
icebp
mov
outsl
sub
inc
cwtl
or
loop
aas
push
sub
daa
xor
mov
cmp
jge
xchg
and
mov
cmp
adc
out
jg
lods
fs
cmpsb
mov
xchg
cld
jmp
and
or
js
fnstcw
pushf
sbb
xor
push
mov
bound
adc
and
lea
pop
push
ret
cld
les
sahf
stc
fdivl
das
in
ret
xlat
push
adc
and
test
dec
xor
push
adc
cmp
loopne
mov
mov
push
lea
stc
add
leave
inc
out
hlt
cmpsb
lock
mov
arpl
add
add
push
add
cs
int
scas
leave
nop
sbb
sti
mov
jno
cltd
lcall
lods
xor
lock
sbb
insl
stos
fisubrl
js
jo
mov
and
xchg
insb
rclb
xor
xor
std
call
lretw
cld
xchg
iret
ret
add
add
sti
dec
inc
mov
dec
subl
add
inc
lret
sbb
cmp
in
mov
aaa
add
and
adc
push
mov
in
ds
jbe
add
push
inc
mov
mov
jne
dec
insb
bound
lret
inc
and
adc
mov
or
dec
xor
mov
jae
jg
lock
add
sbb
inc
add
stc
mov
push
cli
pop
adc
pop
lods
faddp
xchg
loope
ljmp
jnp
xchg
bndldx
lcall
xchg
xlat
fs
test
out
movsb
loopne
lcall
xchg
scas
mov
xchg
add
jecxz
dec
stos
mov
shrb
stos
pop
and
xor
cs
or
loop
xorb
jecxz
mov
adc
inc
cld
out
xor
test
xor
add
ret
or
cmp
push
test
cmpsb
subl
mov
scas
or
mov
pop
jb
pop
mov
inc
sub
decb
jp
lods
mov
xor
xor
jle
jno
ds
popa
cwtl
push
mov
in
insl
inc
mov
popfw
xchg
cmp
into
ss
mov
add
mov
lock
push
add
push
inc
push
sbb
xchg
cltd
out
in
stc
or
das
push
pop
aam
iret
xor
test
mov
aas
in
jno
jecxz
add
mov
popl
sbb
mov
and
sub
popa
sub
int
loop
lods
push
out
mov
add
mov
mov
dec
sbbl
add
mov
fsts
aam
sub
xor
int3
sub
rorl
neg
sub
scas
imul
add
pop
mov
stc
jmp
call
cmp
dec
sbb
sub
jns
inc
ja
pop
test
jnp
gs
movsb
and
push
jecxz
mov
aaa
dec
mov
imul
xchg
cli
mov
dec
fwait
lock
daa
loope
es
jnp
sbbb
int
adc
test
lea
inc
es
outsb
adc
and
mov
jl
sub
adc
pop
xchg
in
or
and
jge
jns
and
cmpsb
xlat
add
xchg
adcb
xchg
out
inc
sub
pop
lods
jne
push
pusha
addb
jbe
fists
add
aaa
xchg
out
outsl
xor
movsb
pop
cmpsb
push
xlat
xchg
push
push
inc
loope
aas
mov
sub
inc
addr16
and
jnp
jne
add
lods
jp
cli
cs
in
sarl
xor
adc
jg
in
push
pop
cld
clc
adc
test
sub
lds
mov
mov
inc
xor
dec
jno
jb
and
jo
add
sub
sub
jno
lods
out
mov
pop
pusha
cmp
pop
push
mov
inc
inc
dec
mov
int
xchg
aaa
pushf
rcl
stc
daa
aas
xchg
dec
loop
loopne
cmp
movsb
test
adc
jl
and
mov
aas
inc
scas
pop
dec
xchg
jmp
cs
cvtps2pi
ret
pop
mov
push
jge
das
add
sbb
cmpl
or
ja
push
dec
or
jg
push
divb
cmc
mov
leave
or
andb
pop
lret
ss
pushfw
ds
fs
aas
pushf
outsl
jbe
orb
int
cltd
mov
aad
inc
jb
test
scas
shrb
iret
jno
repnz
cmp
cmpsl
xor
or
call
mov
outsb
rcrb
in
das
push
push
cs
shll
jno
sbb
loopne
arpl
dec
mov
fnstenv
ljmp
lahf
add
daa
ret
mov
xor
out
lret
mov
rolb
rcll
cmp
out
and
call
and
push
push
fcomip
ret
pop
mov
stc
jmp
imul
or
add
pop
negb
cld
fidivs
mov
fsts
mov
pop
sbb
inc
gs
jl
sub
cli
inc
jl
xchg
xlat
jg
inc
or
dec
cmp
push
mov
and
cld
jle
xchg
ljmp
lock
es
mov
pop
xor
dec
xchg
jne
cmp
rorb
or
aam
test
outsl
xchg
sub
push
jne
or
pop
icebp
xchg
mov
enter
mov
xchg
cltd
ror
lahf
add
loope
in
mov
add
push
pushf
imul
push
mov
into
leave
dec
jmp
cs
push
push
mov
xchg
inc
loop
filds
inc
andb
hlt
pushf
mov
icebp
sub
inc
or
adc
mov
dec
cmp
sti
es
nop
xchg
push
inc
call
in
or
dec
push
fisttpll
loope
sbb
testb
adcl
ficoms
adc
or
or
cmp
mov
fs
add
jle
mov
xchg
fnstenv
lcall
jle
pop
jno
stc
sahf
scas
sbb
push
jg
sti
push
out
mov
jne
cwtl
jle
in
add
or
xchg
pop
cmp
push
xor
mov
add
cmp
pop
into
inc
cmp
das
rcl
imul
add
jno
xlat
in
lcall
xchg
xchg
movsb
dec
aas
jae
mov
push
bound
mov
ror
movsl
pop
and
mov
shll
cmpsb
in
scas
pop
cmp
mov
iret
not
xor
dec
testb
enter
sub
jno
popf
jbe
daa
and
movhps
movsl
fldenv
mov
xchg
decb
mov
cld
sub
jle
clc
or
mov
dec
test
pop
mov
mov
xchg
dec
stos
pop
xor
clc
lea
lret
popf
jns
mov
test
or
add
sbb
pop
pusha
adc
cld
lock
jno
loope
cltd
adc
adc
jmp
xchg
cmovb
xchg
mov
stc
and
ds
cmpsb
cmp
push
jns
push
push
xchg
jbe
mov
cmp
push
sbb
iret
xor
xor
or
inc
sbb
xor
and
mov
mov
and
stc
fsubs
inc
int
xchg
test
jae
or
mov
std
or
jno
icebp
rolb
adc
cmp
xchg
imul
out
pop
push
lock
add
sbb
jmp
stc
xchg
jae
fstl
scas
enter
arpl
xlat
inc
dec
push
xor
aaa
out
pop
or
movsl
out
mov
hlt
pop
aas
mov
jge
ja
pop
xchg
mov
sub
shr
inc
pop
jmp
js
dec
popf
pop
xor
mov
test
pop
cld
imul
test
test
pop
pop
cmp
ret
pop
lods
cwtl
lret
and
ja
cwtl
pop
jg
add
mov
cmp
xchg
fisubrl
sbb
pop
sub
xor
mov
xor
cmpsl
dec
scas
and
lret
cmc
rolb
inc
enter
inc
bound
lret
insl
scas
mov
fs
sub
xchg
popa
and
cmp
loop
pop
push
mov
addr16
fwait
shrb
xor
insb
pop
xchg
mov
mov
or
add
fbstp
imul
aaa
divl
iret
repz
stos
pop
pop
mov
out
das
lods
mov
cmc
pop
aad
cmp
cmp
lahf
jns
aas
xchg
or
jmp
lea
xchg
ret
sub
cmpl
push
adc
inc
sbb
xor
lods
dec
aad
sbb
pushf
movb
xchg
popf
lods
push
js
xor
jmp
test
cmp
push
shrl
jb
cmp
fucomp
hlt
lahf
cmpsl
jp
fimull
jge
dec
jnp
mov
and
dec
rcrb
or
xlat
mov
cmp
sub
fwait
inc
add
push
or
cmpsb
mov
lods
xchg
out
cmp
mov
jae
mov
adc
jnp
in
mov
add
in
clc
push
sbb
pop
jbe
mov
lea
js
inc
xchg
aas
clc
daa
mov
lock
aam
or
mov
inc
ficomps
sub
divb
lods
push
jbe
aas
xor
aad
std
rcrb
ret
jl
xor
std
andl
jecxz
mov
mov
xchg
push
std
jmp
addl
sub
jo
or
call
sub
data16
inc
sub
movsl
cmp
add
xor
aas
repz
pop
and
ss
repnz
imul
xchg
ss
jnp
push
pop
inc
mov
push
add
lahf
das
dec
daa
pop
add
fadds
test
daa
push
nop
inc
dec
in
push
push
decl
es
lock
mov
mov
fisubl
inc
mov
scas
pop
or
cmp
insl
dec
jle
sbb
xchg
xor
mov
ret
pop
sub
add
popf
push
push
mov
out
cli
jne
jbe
test
mov
fcomps
int
in
add
push
pop
lods
outsl
add
in
mov
or
je
sbb
cmp
sbb
ffree
imul
and
ja
xlat
cmp
imul
sar
mov
jae
iret
and
mov
stos
stos
mov
rorb
add
push
dec
or
jmp
xchg
push
lahf
ret
pop
push
ss
xchg
enter
fidivs
sub
inc
sub
dec
lret
pop
mov
in
dec
mov
xchg
cmp
jae
mov
and
mov
pop
push
sahf
cmpsb
jle
mov
mov
test
add
mov
clc
pushf
dec
stos
or
xlat
xor
sub
data16
jp
arpl
adc
shll
jno
jmp
mov
std
nop
and
sarb
jle
dec
popa
pop
addr16
scas
xchg
sbb
push
xchg
cmp
mov
xchg
dec
loope
call
js
int
ficomps
movsb
cmpsl
push
cmp
mov
mov
in
sub
lods
sbb
jp
mov
sub
dec
xor
or
mov
mov
sbb
inc
test
stc
or
movb
add
add
push
push
repnz
clc
jp
xchg
mov
or
je
cmpb
icebp
ja
cmpsb
lods
enter
insb
mov
in
mov
jae
mov
inc
scas
loop
jp
and
mov
push
popf
add
mov
scas
test
cmp
mov
push
leave
mov
clc
pop
out
mov
sub
test
repz
pop
adc
movsb
jmp
imul
jle
sbb
mov
ret
add
xor
push
clc
cmp
xchg
mov
ret
fcoml
xchg
add
nop
lods
les
mov
add
inc
cmp
pop
mov
aad
stos
xchg
js
jmp
fsubrl
pusha
dec
sbb
imul
cmp
xlat
mov
lock
hlt
inc
sbb
outsl
icebp
cmp
mov
cmp
shll
pop
cmpsl
xor
data16
cltd
std
pop
xchg
cmp
sahf
ja
lret
sbb
ja
out
xchg
in
fwait
stc
ret
sarb
jecxz
shl
xor
stc
push
mov
enter
cmp
cli
int
jae
ja
daa
stc
jno
mov
outsb
ss
pushf
pop
mov
or
sbb
into
jecxz
dec
jbe
or
mov
pop
dec
in
addl
pop
sub
mov
ss
sub
lds
xchg
movsl
jg
sub
daa
cltd
fldl
mov
add
leave
lahf
mov
jl
mov
jl
jne
vpsrld
pop
jecxz
cmp
or
clc
jl
fwait
push
dec
repz
sar
pop
xchg
loop
outsb
sub
cmp
cltd
pop
sbb
cld
out
loop
xor
push
popl
vunpcklps
push
sbb
sub
sbb
xchg
loope
std
fcomip
pusha
les
xor
dec
jae
push
adc
inc
mov
add
adc
lret
push
loop
sbb
out
jb
data16
imull
mov
stos
cmpsl
es
test
test
enter
stos
push
notb
outsl
sub
pxor
arpl
mov
pop
mov
and
jns
mov
aad
sub
sbb
mov
push
cmc
inc
in
ljmp
xor
pop
pop
sbb
sub
jecxz
pop
adc
jb
fimull
cmp
stos
pop
xchg
mov
nop
scas
int3
lods
es
jmp
mov
pop
jg
roll
sbb
xor
out
or
cmp
pop
into
mov
scas
ret
pop
mov
nop
inc
mov
cmpsb
xchg
add
push
negl
gs
cmpsl
mov
dec
cmpsb
mov
sarl
dec
cmp
fwait
pop
loop
pop
sub
repz
or
ret
inc
xor
call
mov
mov
push
mov
xor
ret
cmp
test
push
pop
xchg
pushf
mov
mov
adc
lods
mov
ja
shrb
inc
cmc
xor
rorb
and
push
push
in
and
mov
in
cli
ljmp
dec
push
push
out
sbb
mov
cwtl
addr16
pushf
ror
pop
mov
add
dec
sbb
inc
enter
frstor
sub
jb
pusha
ret
push
dec
xchg
in
iret
int
nop
lret
je
sub
add
out
dec
cltd
mov
add
orl
push
mov
jns
in
repz
aad
sti
add
mov
mov
sub
out
push
inc
sub
pop
xchg
inc
int
imul
add
es
inc
xor
pop
jnp
and
add
jb
and
clc
ret
and
pop
jecxz
inc
call
push
pop
xchg
addr16
push
push
loopne
jecxz
popf
cmp
enter
jbe
movsb
and
jmp
sbb
and
pop
mov
jp
xchg
push
inc
fimull
lds
ss
mov
fstpl
mov
fnstsw
mov
jge
or
loop
and
mov
out
cltd
shll
mov
rorl
jnp
xchg
sub
int
mov
ss
int3
aad
loope
cmc
aaa
push
dec
push
js
data16
rolb
pop
add
push
cs
inc
jbe
lret
outsb
dec
jbe
xchg
inc
xchg
jbe
inc
xor
xor
aas
mov
in
inc
leave
pop
or
in
rcrb
scas
add
insl
mov
dec
popf
test
sbb
adc
hlt
test
mov
shll
pop
pop
sarl
ss
into
mov
mov
in
cmpsb
lret
push
les
jne
aam
daa
xlat
aam
fbstp
mov
push
incb
fldln2
inc
iret
test
dec
icebp
js
jae
lret
jnp
mov
lods
pop
xchg
add
scas
and
mov
pushf
sbb
lds
xor
scas
or
xchg
mov
in
orb
pop
mov
jnp
lcall
shrl
aam
sub
cli
ficomps
mov
sbb
aam
push
push
inc
dec
pop
push
add
inc
insb
in
lock
scas
mov
lods
inc
adcl
xor
xor
dec
rcrl
and
push
xchg
inc
iret
repnz
or
mov
insb
mov
arpl
dec
popa
inc
cmp
adc
clc
cld
dec
icebp
mov
ret
xchg
sub
fists
cmc
or
push
adc
adcb
lods
inc
pop
cmp
lock
cmp
pop
repz
mov
imul
xor
and
enter
add
push
ds
push
addb
sub
mov
lret
sub
mov
ret
sbb
fstps
push
and
in
fbstp
aam
push
gs
iret
daa
aas
stos
dec
das
insb
ret
xchg
lods
jb
dec
sub
lret
and
cmp
jo
mov
cwtl
push
inc
call
jp
push
enter
ret
xchg
mov
xlat
jbe
xor
shlb
lret
rolb
add
sub
fndisi(8087
adc
pop
add
mov
xorb
mov
cmp
insl
cmp
dec
jle
pop
sub
sub
xor
jp
test
insl
add
subb
jecxz
dec
jle
insl
dec
adc
fwait
pop
sarb
inc
gs
pop
add
pushf
or
ljmp
jl
punpckhbw
cwtl
pop
add
fistpll
scas
inc
xchg
cwtl
push
push
bound
mov
aas
push
mov
clc
movsl
clc
sbb
stos
xor
inc
rcrl
sbb
insl
imul
adc
jge
jp
aad
xchg
in
sbb
and
push
mov
mov
rcrb
pop
pop
mov
inc
cld
push
pop
sbb
hlt
cmp
shrb
xlat
cmp
fistps
cltd
add
insl
sbbl
in
movsb
out
repnz
pop
ret
mov
out
mov
test
mov
icebp
inc
adc
add
aam
push
lods
jmp
ljmpw
jecxz
shlb
adc
shlb
mov
scas
lods
test
and
xchg
js
inc
sub
inc
dec
shlb
loop
repnz
dec
jnp
cltd
add
push
es
cli
dec
push
xchg
inc
movsl
add
inc
xchg
pop
pop
rclb
pop
jle
hlt
dec
mov
xchg
int
dec
loope
mov
mov
cmp
cltd
jp
push
aad
jl
xor
gs
repz
movsl
rcll
int
adc
lds
push
dec
mov
sarb
push
rorl
stos
sarl
sbb
mov
call
dec
sub
outsb
sbb
sub
xchg
movsl
cmpsl
in
cli
sbb
lcall
xorl
xchg
jle
std
push
aad
into
sub
or
xor
cld
enter
in
movsl
mov
fsubrp
mov
ljmp
cmc
push
inc
ret
xchg
fxch
inc
pop
daa
push
outsl
cld
sbb
mov
mov
cmp
movsb
dec
jmp
leave
push
mov
inc
icebp
aas
ljmp
push
in
cmp
mov
push
jbe
and
gs
les
pop
push
sbb
aaa
pop
ss
out
addr16
addr16
jg
popf
ret
fistpl
outsl
sub
mov
sub
mov
ret
and
and
cltd
adc
sub
push
sub
cltd
outsb
mov
sahf
pop
push
sbb
push
inc
jg
cmp
cmp
jbe
cmp
arpl
out
sub
sbb
cwtl
je
cmpsb
rcrb
and
sarl
ljmp
sbb
das
daa
shl
push
dec
mov
add
pop
jb
dec
and
stos
xor
add
add
mov
iret
xor
loopne
cmpsl
jmp
mov
inc
sub
xchg
sub
shll
or
sbb
or
mov
xor
adc
test
pusha
push
les
lret
aas
or
adc
ds
xchg
in
std
lahf
int3
subb
and
inc
mov
mov
data16
xor
bound
xor
lods
pop
cmp
push
in
mov
hlt
jo
xchg
les
lods
pusha
pusha
add
ja
pop
sahf
mov
aas
int3
popa
in
lret
inc
sbb
or
stos
lret
sub
imul
filds
in
sub
cmc
or
out
mov
mov
push
nop
repz
or
scas
rcll
in
cs
push
adc
sub
ljmp
jg
ret
jb
sbb
push
pop
pop
test
dec
xor
push
pop
cmp
mov
sub
pop
ljmp
sbb
test
mov
xlat
test
andb
push
inc
movsl
pop
scas
ret
sub
xchg
stos
adc
shll
mov
xchg
out
sbb
rcrb
call
dec
mov
sbb
fcomp
lret
out
jp
mov
fstl
cs
mov
fadd
push
sub
or
dec
out
pop
ljmp
mov
xchg
mov
fdivrp
mov
adc
xchg
cmp
adc
pop
inc
andb
push
push
cmp
sub
flds
fildll
jae
mov
push
push
mov
mov
or
test
mov
or
add
cmp
mov
stc
int3
pop
mov
cmp
outsl
das
repz
xor
rorb
mov
pushf
mov
std
pop
movsb
push
jne
add
ret
or
add
sahf
mov
inc
jo
mov
imul
xchg
lcall
sub
jae
daa
mov
das
jo
push
inc
into
sbb
pop
push
repnz
dec
out
and
aam
add
inc
inc
stc
lods
xchg
mov
mov
inc
iret
jbe
xor
dec
jmp
or
stc
shlb
cmp
ljmp
dec
jle
and
adc
mov
push
xchg
mov
fsub
or
pop
and
push
xor
fmull
dec
in
pop
in
andb
or
add
push
in
sti
push
mov
inc
jnp
in
in
and
mov
subl
jb
dec
ss
cmp
shrb
push
push
mov
jle
xlat
js
mov
sub
push
mov
aam
repnz
adc
sub
and
pop
andb
dec
xchg
sbb
sbb
sub
fbstp
mov
lds
pop
sbb
in
imul
xor
push
inc
in
or
addr16
in
adc
mov
loope
dec
mov
int3
and
push
cwtl
inc
sbb
cmp
popf
push
inc
stos
pop
sbb
stos
in
scas
mov
insl
leave
add
mov
in
inc
fld
mov
mov
inc
mov
test
das
inc
and
lods
sub
cmp
dec
jbe
sbb
cmp
adc
xor
into
sbbl
mov
xor
test
dec
mov
jmp
or
movsl
fldl
and
jns
xlat
enter
dec
lds
sub
lahf
mov
jnp
xchg
cmp
das
scas
inc
fldenv
stc
sub
lahf
mov
jl
jge
add
xor
mov
mov
pop
xchg
and
mov
xor
mov
out
cld
add
iret
ljmp
or
fbld
in
rol
sbb
cmp
in
dec
xor
nop
xchg
xchg
sbbb
add
ficoms
jbe
inc
mov
iret
fxch
fcoml
sbb
adcb
adc
insl
js
ja
pop
xor
dec
outsl
das
ret
clc
or
xor
roll
lods
xchg
jg
lock
push
cmp
int
mov
push
fnsave
jnp
pop
cmp
ret
xadd
xchg
ffree
daa
into
rolb
xchg
pop
lcall
and
push
negb
xchg
std
in
mov
mov
idivl
test
test
addr16
enter
sbb
outsl
and
mov
jns
ret
lret
outsb
mov
das
mov
mov
cmp
inc
xor
fbld
mov
in
mov
jbe
cli
push
mov
sahf
loop
ret
sub
push
push
and
in
pop
out
das
xchg
and
pop
test
adc
adc
or
int3
and
enter
roll
loope
push
jb
out
jle
jno
push
sti
clc
and
xchg
sahf
xchg
jae
aam
js
dec
dec
inc
aad
out
test
mov
jg
xor
push
mov
es
xchg
jb
lret
jle
xor
pop
jo
testl
pop
sbb
ljmp
loopne
fcompl
test
mov
lea
cmpsb
cld
movb
xor
pop
xchg
xchg
pop
mov
sbb
mov
sbb
jmp
pop
fildl
inc
mov
js
push
push
push
shrb
in
shlb
cmpsb
sbb
js
push
shll
out
fwait
movsb
and
into
leave
push
adc
push
or
mov
jne
js
add
ja
or
and
test
mov
clc
pop
and
and
sbb
jl
outsl
cmp
pop
cli
push
push
mov
xchg
shll
pop
out
inc
mov
pop
cltd
xchg
mov
sub
adc
lret
popf
sub
mov
sti
cmp
mov
pop
es
jnp
add
adc
cmpsl
dec
fisttpll
pop
test
loope,pt
mov
pop
dec
adc
cmp
int3
cmp
lcall
ss
movsb
call
in
xor
mov
sub
pop
test
addb
enter
fs
sahf
and
out
outsl
ret
ret
mov
stos
leave
mov
sub
mov
dec
and
mov
mov
mov
int3
inc
fucomip
ja
sti
je
popa
into
negl
mov
mov
pop
jge
inc
outsb
push
dec
cmp
int
sbbl
push
xchg
adc
popa
std
cmp
scas
aas
sarl
and
in
xor
mov
fldl
repz
adc
xor
outsl
je
and
mov
test
gs
pop
jae
outsl
lods
aad
and
sub
subb
hlt
xchg
push
cs
cmp
aas
add
lret
xor
inc
push
lds
insb
and
inc
sub
mov
fnstsw
movsb
push
or
repz
fwait
add
xchg
frstor
adc
mov
fisttps
outsl
xchg
jo
cmp
mov
and
mov
lods
jp
in
xor
adcl
push
in
jle
icebp
mov
xchg
mov
enter
arpl
jae
xchg
iret
and
movsb
lret
movsl
cmc
sti
lods
sbb
movsl
push
pushf
pop
push
adc
lahf
gs
bswap
imul
sub
int
lret
inc
push
fucomi
jb
adc
cmc
je
or
mov
imul
in
add
insb
andl
xchg
into
adc
loop
jb
jno
jbe
mov
push
je
mov
out
mov
dec
pushf
jmp
and
cltd
push
repnz
dec
icebp
mov
xor
xchg
fistps
popf
rcr
arpl
jecxz
int
loop
rorl
enter
lea
mov
rorb
add
mov
jge
int
dec
mov
hlt
sbb
jge
sub
stc
and
out
xchg
lcall
out
inc
lret
fadds
jge
test
xor
dec
inc
loop
inc
imul
clc
push
dec
cwtl
dec
test
push
mov
and
adcb
push
xor
mov
xor
pop
mov
adc
xlat
push
dec
orb
mov
not
cmpsb
stc
clc
imul
jo
mov
inc
xorb
add
icebp
cmp
loope
popl
dec
pop
icebp
outsb
loope
or
gs
push
je
fmull
xchg
cltd
mov
mov
loopne
ss
lret
mov
call
inc
shl
cmc
cmp
mov
jns
mov
xchg
lock
mov
ljmp
jmp
pop
in
sbb
into
lcall
andl
std
jmp
xchg
ljmp
cmp
repz
jle
xchg
push
out
imul
stc
testb
or
or
sahf
ja
int
pop
xor
inc
movsb
jae
push
jecxz
je
test
sbb
sbb
int3
in
aam
fwait
rorb
jle
adc
xchg
imul
pop
mov
out
sub
movsl
jle
imul
and
adc
inc
cmc
sahf
pop
dec
sbb
add
sub
mov
jo
loope
ret
test
fdiv
or
jno
xchg
int
pop
push
ret
mov
iret
mov
scas
loop
xchg
inc
adc
pusha
mov
mov
jne
ret
call
into
lcall
int3
push
adcb
scas
ds
sbb
mov
mov
sub
sub
into
mov
mov
xor
fisttpl
sub
mov
push
loope
jmp
cmpsl
in
les
shr
mov
cmp
outsb
lods
and
int3
mov
std
mov
mov
adc
xor
frstor
pop
inc
push
mov
mov
pushf
decl
xchg
xchg
stc
jge
sbb
fbld
inc
incb
jb
imul
jmp
mov
daa
std
lock
push
mov
adc
adc
mov
fcomps
bound
mov
xchg
pop
cld
scas
sahf
push
cmc
adcb
test
dec
or
pop
sbb
pop
mov
add
sub
push
and
imul
lods
pop
pop
add
dec
xlat
sub
fcoml
adc
insb
jnp
mov
popf
repz
push
stos
shl
dec
dec
ret
sbb
fnsave
xchg
fiadds
fxtract
std
popf
aam
xor
pop
jle
xlat
rolb
sti
and
jne
mov
jnp
or
daa
cmp
inc
jge
test
ret
or
jns
lea
outsb
sub
jnp
lret
dec
aam
sub
movsb
cmp
shrb
add
add
or
je
addr16
pop
jle
js
ljmp
jp
mov
ret
mov
jle
xchg
dec
pcmpeqw
sub
add
test
mov
ljmp
sbb
add
add
jl
pop
jmp
mov
pusha
inc
ja
add
adc
push
out
cmpsb
xor
push
push
mov
dec
imul
movq
in
jae
inc
cwtl
adc
imulb
inc
popl
pop
dec
add
test
mov
inc
push
testl
pop
addr16
and
insl
mov
lds
cmp
rclb
and
push
aad
adc
sub
inc
mov
sub
in
adc
lods
mov
stos
stos
addr16
xor
xchg
add
mov
or
adc
fucom
cmp
fildll
movsb
movsl
into
stc
lcall
bound
movsl
jl
and
shll
lock
daa
push
jg
es
pop
lds
insb
lcall
mov
shlb
inc
dec
xchg
sbb
xchg
mov
cmp
es
mov
pop
cld
dec
cmpb
mov
xchg
testl
test
inc
or
stos
in
jb
mov
iret
inc
fwait
mov
push
fwait
sub
fcmovne
sub
sub
fcoml
or
popf
les
add
cmp
mov
popf
mov
cs
icebp
add
cltd
cmc
loop
mov
cwtl
fdivl
cld
mov
bound
push
pushf
jae
and
insb
push
pop
divl
and
ss
loopne
ss
ret
out
call
sub
mov
cs
mov
test
mov
sub
fbld
add
stos
xor
xchg
mov
or
cltd
in
and
and
push
push
ja
sti
cltd
jmp
repz
das
add
stos
stc
sub
cld
jmp
mov
insb
add
push
ja
enter
sarb
pop
xor
addr16
jbe
gs
jo
dec
out
lahf
test
push
jo
adc
mov
mov
push
je
loopne
fcoms
cs
xchg
insl
or
mov
aad
in
push
jne
jno
sbb
inc
fs
and
les
push
fwait
clc
push
in
pop
fwait
addl
inc
mov
sbb
loop
outsl
ds
xchg
in
imul
fwait
pop
or
mov
mov
add
stos
cmp
pushf
cld
movsb
xor
std
mov
jmp
pusha
and
in
clc
sbb
xor
add
push
out
dec
out
filds
and
rorb
jbe
call
gs
mov
in
cmp
or
into
xor
mov
mov
outsb
outsb
fmuls
cmc
out
jns
hlt
push
stos
hlt
pop
cmp
add
cltd
shrb
add
testb
daa
out
in
add
mov
shlb
shll
iret
xchg
mov
and
dec
cltd
adcl
pop
cmp
call
jmp
out
enter
fidivrl
sbb
push
add
rorb
sub
test
mov
dec
stos
add
inc
stos
mov
loope
sti
xor
mov
scas
imul
paddq
pop
std
lcall
add
jmp
and
jp
cmp
pop
pop
mov
sub
repz
cli
or
movsb
test
sub
add
and
cli
xchg
inc
in
out
into
lahf
lret
clc
inc
mov
in
push
jno
xor
add
mov
mov
and
in
push
xchg
lahf
mov
stc
mov
sub
cwtl
icebp
mov
call
mov
xchg
dec
push
enter
lret
rcrb
out
insb
mov
push
sub
dec
mov
pop
dec
mov
xchg
call
scas
jmp
adc
mov
dec
aaa
mov
jae
jnp
pop
push
dec
addr16
clc
inc
adc
insl
pop
mov
dec
mov
sub
stos
call
in
das
stos
cmp
inc
adc
insl
dec
mov
mov
pushf
xchg
adc
loop
or
int3
testl
adc
jo
insb
and
stc
sarl
or
sbb
mov
scas
push
sub
mov
mov
sbb
in
or
push
push
stos
loope
adc
xchg
pop
scas
add
into
aas
in
cmp
xor
jge
sub
aas
aad
jbe
cmp
movsb
hlt
gs
test
roll
mov
xlat
jbe
sub
jne
jmp
aad
push
stc
loope
fbld
jbe
addl
lfs
xchg
push
sarl
pushl
jge
dec
fs
fildll
jge
stos
jbe
pop
cmpsl
push
mov
fadds
pop
rolb
jge
push
cmpl
mov
add
sub
xor
ljmp
cltd
lret
push
in
dec
frstor
lods
iret
mov
ja
cmpb
rcrl
push
pop
std
aad
popa
jl
lods
cld
js
cmp
push
inc
fsubs
jp
addr16
dec
faddp
pop
or
xchg
dec
cmp
cmp
push
mov
xchg
jmp
enter
xchg
dec
cltd
mov
enter
mov
xchg
jge
inc
xor
xlat
xor
sahf
cmp
lea
mov
out
xor
out
cmp
imul
xor
push
arpl
fsubrs
mov
add
outsb
dec
mov
xchg
sbb
fstp
xor
cmp
mov
dec
jp
jl
mov
mov
test
cmp
in
mov
sub
mov
idiv
adc
cmp
and
addr16
sarb
roll
pop
sub
ds
xor
push
mov
xchg
pop
and
int3
imulb
imul
pop
ja
popa
sub
aam
fimull
daa
mov
xchg
outsb
mov
idivb
fwait
mov
sbb
aaa
xchg
mov
enter
sarb
sub
test
shl
js,pn
mov
fisubl
jecxz
inc
ja
pusha
jno
icebp
xchg
adc
lea
ss
mov
push
pusha
loopne
out
scas
sub
jl
sub
fisubl
fisttpl
rcrl
test
jmp
cmpl
arpl
pop
sbb
aas
add
sarl
test
push
lcall
add
or
push
mov
pop
sarb
adc
mov
inc
out
scas
sbb
sahf
out
fcom
movsb
call
call
in
push
dec
dec
cli
xlat
idivl
in
add
or
mov
js
add
hlt
stos
fs
mov
lods
mov
test
negb
nop
cmp
or
addr16
ljmp
and
leave
xchg
out
inc
into
mov
repz
icebp
cltd
dec
adc
imul
imul
xchg
mov
sub
jge
outsl
xchg
push
or
mov
mov
test
imul
sbb
lock
pop
add
dec
imul
mov
sub
lcall
in
into
adcl
cmp
bound
push
xor
cmp
xor
jae
cli
in
test
cmp
sub
and
jg
add
mov
jmp
stos
cmp
sub
shr
push
sti
sti
movq
mov
scas
add
jp
out
scas
pop
cli
jne
movsl
loop
pop
pop
and
das
add
arpl
adc
pushf
mov
cmp
xchg
jnp
or
test
insb
rol
and
test
aam
lahf
insb
add
lcall
push
cmp
dec
out
add
leave
sbb
jg
out
and
cmp
imul
or
xchg
inc
cmovo
lahf
sti
xchg
enter
mov
and
fidivs
ffreep
jbe
test
mov
mov
sti
push
push
pop
sbb
add
dec
rorb
sub
adc
ljmp
xor
jecxz
pushf
mov
enter
dec
iret
lret
cmp
js
shlb
pop
stos
mov
jbe
repnz
adc
imul
aas
lcall
cli
rol
fimull
hlt
pop
clc
shll
xchg
cli
and
sti
mov
roll
pop
push
jb
and
jl
int
cmc
int3
xor
adc
pop
jo
inc
fldcw
out
aas
mov
fs
hlt
cld
cli
sahf
adc
xchg
jmp
lret
jb
jbe
mov
adc
cwtl
dec
push
shl
jmp
mov
cmpsb
add
lods
jne
sbb
imul
xchg
mov
mov
add
cmp
sahf
fiadds
push
jle
xlat
and
lahf
mov
push
sti
leave
adc
mov
inc
sbb
je
pop
jg
repnz
dec
or
cld
push
mov
pop
cwtl
and
mov
fsubr
mov
pop
cli
outsb
cltd
sti
dec
and
data16
cld
push
inc
outsl
imul
push
aas
into
jecxz
test
mov
sti
pop
push
in
lods
into
es
fnstsw
push
mov
fdivrs
jae
stos
pop
shrl
jg
mov
mov
cmp
fdivrl
push
clc
jle
cwtl
aad
dec
and
lock
lock
shll
cli
inc
push
or
push
mov
mov
sbb
idiv
mov
sets
sub
into
popa
jne
mull
rcrl
sub
cmp
cmp
divb
lods
imul
add
xor
test
push
lods
push
pop
loop
cmp
xchg
pop
cmp
push
jge
jl
ljmp
lcall
cmc
lods
gs
out
es
mov
outsb
popa
popl
addr16
aad
or
cmp
adc
enter
pop
imul
cmp
xchg
leave
call
push
popf
imul
cs
sar
cld
jl
push
inc
cmp
xchg
cmp
rcrb
xchg
bound
imul
xor
das
cmp
xchg
int3
fimuls
push
jle
stos
je
popa
nop
outsl
inc
enter
jge
and
sbb
lahf
dec
mov
jge
bnd
das
rcrl
mov
fldenv
mov
or
cmp
movsb
lods
mov
rcll
cltd
enter
xchg
or
imul
repnz
movsl
repz
mov
and
dec
loope
dec
and
mov
popf
scas
jbe
les
cwtl
nop
ja
stos
sub
lret
dec
mov
fisttpl
inc
xchg
xchg
cmp
inc
adc
insb
les
push
std
int
sub
adc
loopne
adc
jmp
sbb
aaa
pop
push
jge
or
lcall
push
sbb
lret
leave
inc
or
mov
push
jmp
mov
fs
cmpsb
mov
call
or
inc
push
cwtl
or
add
gs
sbbb
xchg
pop
ret
jecxz
ret
mov
jmp
mov
icebp
or
dec
fcom
push
shl
pop
fidivrl
xchg
lea
cmpsl
jb
jl
inc
sahf
push
xchg
sbb
push
dec
sub
cmp
aaa
divl
rcrl
push
les
dec
scas
cld
ljmp
mov
lret
loop
adc
xlat
iret
bound
aas
pop
shrl
std
std
aas
bswap
sti
jns
fs
push
loopne
es
mov
int3
mov
cmp
sub
mov
in
push
mov
movsl
sahf
cmp
rorb
ljmp
outsl
aam
leave
pushf
push
and
inc
adc
fwait
xor
fcmovbe
shrl
mov
pushl
cbtw
cld
call
and
pushf
cmp
in
dec
test
imul
out
xor
push
push
dec
icebp
jnp
div
push
cmp
cli
mov
hlt
dec
xchg
ds
rdpmc
add
lcall
mov
inc
js
or
dec
adc
rcrl
adc
inc
pop
insb
adc
jno
mov
sub
push
mov
mov
pop
cmp
cmc
push
frstor
fildll
sbb
orps
adc
test
inc
pop
cld
xchg
mov
mov
xor
in
imul
sub
pop
pop
insb
loope
jns
sub
xchg
fcompl
imul
popf
out
loope
int
dec
jb
sub
insb
lret
push
jl
out
sbb
mov
lock
adc
and
into
xor
xchg
enter
je
xchg
ds
mov
sbb
sbb
and
clc
cmpsb
xchg
push
dec
popf
xor
mov
sarb
xchg
add
aaa
movsb
rorl
std
out
lods
aad
in
fwait
sub
push
dec
in
adc
inc
addr16
icebp
pop
aaa
dec
sbb
cs
mov
pop
add
xchg
adc
lahf
push
ffree
outsl
push
cwtl
loop
sub
add
jno
andl
xchg
push
mov
cmpsl
push
jp
add
aas
lret
test
mov
dec
pop
mov
ja
mull
aaa
ss
fstpl
sub
or
dec
dec
push
in
stos
sub
dec
mov
ss
bound
cmp
test
xchg
dec
inc
jge
ficomps
lea
dec
loope
cmp
adc
jmp
ficomps
ret
mov
adcb
inc
mov
movsb
icebp
and
jp
or
jl
shrl
imul
movsl
rcrl
out
popa
xor
adc
inc
inc
sbb
imul
scas
adc
mov
inc
stos
pop
imul
imul
jg
or
dec
es
push
shlb
push
mov
arpl
bound
fdivrl
adc
xor
pop
sbb
jg
dec
mov
xchg
aas
push
sbb
cmp
shlb
cli
data16
mov
pop
inc
and
mov
scas
sub
and
out
fwait
or
sbb
sub
sarl
push
shlb
arpl
cmp
gs
in
inc
jnp
cmp
testl
aad
pop
nop
sbb
out
mov
popf
repnz
loopne
adc
jbe
lock
ja
mov
dec
testl
imul
test
bnd
enter
loope
scas
and
into
or
arpl
les
and
movsl
enter
les
int3
jp
ret
mov
les
push
mov
repnz
orb
add
enter
inc
popa
pushf
inc
out
negb
xchg
insl
adc
aam
jae
xor
std
xor
adc
sbb
adcb
test
mov
add
mov
movsl
jmp
imul
jp
rorl
mov
jmp
pop
cmp
psubw
or
and
imul
push
imul
les
inc
invd
dec
outsl
sarb
mov
out
push
fnstenv
push
cs
scas
mov
inc
and
loop
jl
fdivs
mov
icebp
adc
rcrl
or
jae
pop
rcl
adc
cmp
dec
sahf
dec
cmp
repnz
lock
mov
dec
push
push
or
mov
movsl
mov
shrl
push
sbbb
mov
mov
cmp
out
ja
mov
mov
cmp
stos
sbb
or
cmpb
add
xchg
in
mov
test
mov
loopne
loop
and
arpl
jp
mov
cmp
lea
test
xchg
lcall
mov
mov
sarl
and
scas
mov
test
stc
mov
cmp
sarl
add
lds
mov
jo
xor
testb
xor
sub
mov
mov
notb
xor
and
enter
push
mov
pop
and
jb
jl
adc
xchg
outsb
jmp
rcrb
add
sub
push
mov
jmp
xchg
dec
mov
mov
lock
into
and
xlat
xor
and
lret
push
cmpsb
les
jl
jle
sub
inc
cmp
jle
mov
cmp
shrl
xchg
mov
inc
adc
es
leave
xchg
popf
xor
cwtl
int3
inc
outsb
out
push
outsb
movsl
sbb
pop
push
ja
dec
pop
shll
rol
jmp
enter
pop
cmp
or
push
jecxz
sub
aas
arpl
mov
negl
xchg
and
xor
or
imul
ljmp
out
push
xchg
hlt
cmp
out
pop
movaps
pop
negb
js
xorb
xchg
cmp
test
fucomp
mov
loop
ret
jmp
jmp
cltd
nop
mov
mov
dec
add
sub
lods
out
pop
mov
push
stc
sbb
orb
mov
shl
sbb
push
scas
dec
sbb
or
orb
aad
jg
pop
inc
sbb
cmp
xchg
mov
xchg
jge
mov
nop
hlt
or
rorl
xor
repz
and
scas
inc
shlb
xchg
lock
addr16
stos
jecxz
inc
xor
sub
or
call
imul
stos
lds
sahf
stos
jg
cmp
std
shrb
adcb
sub
mul
xchg
sbb
dec
test
pop
pop
push
pushf
imul
sub
les
aas
mov
adc
xor
jns
dec
shrb
stos
mov
mov
mov
dec
sbb
add
lock
outsb
adc
push
lods
add
pop
pop
adc
jmp
into
lahf
mov
adc
push
add
pop
push
xor
jecxz
andb
push
xor
inc
mov
cmp
or
rorb
fptan
push
push
repnz
fists
cs
int3
lds
fisttps
sbb
and
in
or
repz
xlat
loope
lds
or
lea
pop
sarb
int
xchg
movsl
aam
xchg
data16
xchg
push
push
nop
push
xchg
sub
out
mov
xchg
jmp
push
outsl
movsl
stc
add
xchg
out
bound
sbb
cld
mov
into
jg
icebp
inc
nop
cmp
xlat
repnz
push
outsb
inc
dec
xor
stc
mov
out
push
jne
js
jae
sbb
fs
pop
je
inc
dec
dec
jg
ret
mov
lea
shr
mov
stos
lret
inc
push
adc
lock
lock
test
mov
push
es
bnd
cmp
imul
aaa
push
jns
pop
sub
and
adc
add
outsb
pop
fimuls
js
dec
xor
lods
addl
mov
add
gs
xor
mov
push
out
popf
test
test
sbb
daa
mulb
push
dec
int3
mov
xor
outsl
dec
mov
cld
adc
repz
xchg
jo
sbb
pop
or
mov
pop
pop
pop
je
cmpsl
scas
add
std
decb
push
push
scas
int3
lods
sbb
lea
aas
lcall
sbb
xlat
xchg
out
repnz
pop
sahf
jge
ds
insb
cmp
sub
scas
or
sub
aam
push
pop
fsubrs
insb
daa
mov
xchg
hlt
clc
fld
insb
mov
sub
js
mov
out
jl
push
jnp
rcr
out
pushf
pop
add
in
cmp
repnz
fucom
jae
rcrl
cmp
bound
jg
fwait
outsb
push
adc
imul
jmp
pop
loopne
pop
movsb
xor
jno
sahf
dec
aam
sub
add
pop
repz
test
cmp
jp
call
push
push
ret
jns
jae
pop
movsl
adc
scas
ficomps
push
jbe
push
insb
or
add
add
push
mov
in
loop
mov
stos
in
mov
adc
pop
imul
pop
pop
push
mov
mov
xor
test
loope
pop
push
iret
pop
mov
sar
dec
add
add
jp
lds
mov
adc
mov
push
lds
jbe
popa
data16
shl
mov
add
xor
popa
pusha
inc
and
aaa
in
push
pop
add
jecxz
xchg
in
enter
mov
xor
xor
inc
xchg
into
fisubrl
add
and
and
mov
adc
insb
adc
pop
sub
lcall
cmc
insl
sbb
sub
adc
sahf
jne
leave
mov
xchg
dec
insl
das
fs
cmp
ret
test
icebp
adcl
inc
sub
mov
xlat
jmp
mov
xchg
insb
shl
sub
fmull
pop
mov
lea
repz
adc
lret
lea
inc
jnp
movsb
xchg
negb
gs
divl
add
sti
dec
pusha
pop
cmp
mov
pop
nop
in
push
lods
je
in
imul
mov
cltd
cmp
xor
test
inc
sbb
xor
pop
jp
jp
je
dec
in
xor
cwtl
rorb
adc
jne
cmpsl
pop
rcll
jns
mov
lock
mulb
mov
enter
xchg
xchg
repz
push
nop
mov
mov
fdivr
cli
jo
mov
popa
pop
fildll
xor
cmpsl
jnp
xchg
pop
cmpsl
or
sub
cmp
mov
jne
scas
gs
adc
mov
sub
addr16
les
data16
mov
sub
js
mov
mov
sub
and
loop
das
and
push
push
push
add
out
movsb
fidivl
inc
ja
ljmp
mov
push
push
push
xor
sbb
in
ficomps
test
test
xchg
jno
je
sbb
daa
ss
sbb
and
rcll
loop
pop
outsl
fmul
jmp
mov
dec
add
and
pop
sbb
push
jbe
xor
or
sbb
stos
pop
sarl
fstps
mov
mov
rcrb
dec
fwait
mov
into
mov
adc
adc
pop
inc
sahf
mov
mov
cmp
add
push
mov
lds
add
stos
adc
push
jae,pn
dec
mov
fldt
pmuludq
ss
addr16
ret
xor
or
std
xchg
mov
insl
enter
dec
scas
push
popa
push
sbb
imul
loopne
mov
ret
mov
or
push
jo
inc
add
dec
js
push
mov
ds
mov
xor
mov
pushf
fs
jbe
movsl
test
mov
push
sub
sbb
mov
sub
ljmp
daa
insb
mov
addl
mov
mov
and
cmp
dec
rsm
pop
setns
loop
arpl
ss
or
nop
mov
addl
mov
sbb
sbb
mov
mov
divl
pusha
pushf
lcall
popa
push
jne
mov
lea
mov
push
dec
orl
repnz
sub
add
push
pop
mov
push
mov
ljmp
xor
icebp
in
in
inc
aam
xchg
test
mov
add
add
jb
xor
cmpsb
and
ret
push
lret
das
push
addr16
add
das
fbstp
cmp
mov
cmpsl
xor
jbe
fldl
cs
imull
out
mov
popa
cld
shrb
push
mov
jl
negl
hlt
aaa
daa
ja
mov
fistps
cmc
pcmpgtw
sbb
lcall
push
aas
mov
outsb
outsl
mov
jne
push
push
push
test
lcall
inc
leave
mov
cld
mov
je
lret
push
rcl
xchg
mov
mov
or
lcall
cmp
aam
sbb
add
pop
in
mov
jecxz
int
shlb
mov
test
inc
addl
in
mov
jmp
ja
adc
dec
add
xchg
add
fcomps
mov
inc
ret
mov
mov
fdivl
pop
mov
jmp
jnp
and
push
leave
lcall
test
push
lahf
xchg
sub
insb
ljmp
pop
sub
loop
mov
push
xchg
call
in
repz
repz
test
dec
pop
pusha
das
jl
xor
lock
add
fstpl
or
call
add
popf
in
mov
in
mov
rorb
enter
sbbl
orl
push
xchg
sbb
pop
adc
loope
flds
cmp
jb
adc
push
xor
sahf
enter
loop
cli
mov
mov
fbstp
stos
xchg
jmp
cli
jp
mov
cmpsl
fs
repz
xchg
push
push
call
pop
and
cmp
pop
loopne
push
roll
jge
jb
stc
xchg
les
cmp
fimull
push
adc
insb
sub
xchg
in
movsb
movsb
xor
lods
push
int
outsb
gs
out
jbe
pop
inc
or
in
inc
inc
sub
push
lods
popf
sub
es
push
lods
mov
mov
pushf
dec
lods
sub
inc
aad
cmp
jne
in
sti
and
lret
push
jo
push
xor
daa
jle
pop
and
nop
dec
or
test
insb
and
dec
decl
xchg
mov
push
sbb
fisubl
fistl
dec
lahf
pushf
lret
adc
push
sbb
repnz
pop
dec
and
fisttps
xor
dec
outsl
sub
dec
jno
in
imul
iret
jge
rolb
pop
dec
leave
jl
dec
pop
and
cmc
adc
mov
rorl
push
pushf
push
adc
jle
shrl
outsl
es
mov
push
and
cmp
rcr
ljmp
sub
aad
mov
adc
mov
mov
mov
pop
cltd
cld
cmpsl
and
scas
test
sub
pusha
mull
data16
xor
jle
test
mov
je
xchg
pop
loop
in
jp
push
mov
jmp
sbb
cld
mov
inc
or
mov
lahf
scas
jo
or
xor
push
add
jo
in
insl
je
xchg
mov
pop
inc
cmc
jno
mov
leave
pop
xchg
adc
add
cmp
testl
mov
sub
sbbb
sbb
adc
add
cmp
add
outsb
xor
or
xor
add
es
inc
shrl
inc
or
fildll
mull
push
mov
sub
sub
xor
in
imul
cwtl
cli
pop
push
xor
inc
mov
ds
pop
xchg
or
loop
mov
test
mov
mov
cmp
sar
adc
cmp
mov
add
jmp
mov
mov
mov
or
sti
jmp
out
mov
cmp
js
pop
xchg
xchg
cmp
or
dec
jae
rcl
jecxz
jbe
mov
and
out
lahf
test
jg
out
lret
clc
stos
mov
pop
notl
std
xchg
inc
popf
mov
movsb
mov
dec
rorl
xchg
lahf
arpl
repz
in
fwait
stc
add
push
mov
inc
or
cli
cmp
xor
pop
shll
lahf
jae
cwtl
mov
scas
aas
pop
psubd
xchg
push
aam
xor
das
jbe
inc
dec
fildll
jmp
into
jns
loope
rorb
fmul
mov
bound
nop
std
xchg
jns
jae
and
clc
filds
jg
xchg
pop
addr16
loop
xor
mov
add
icebp
call
cmc
mov
or
mov
stc
xor
sub
arpl
mov
add
sti
pop
jle
xchg
sbb
jno
sti
add
ror
inc
mov
lods
xorb
xlat
mov
ljmp
mov
push
ja
int
xor
or
xchg
jnp
setns
int3
mov
ss
aam
adc
cmpsb
incl
adc
popf
lret
mov
and
dec
es
test
clc
xor
fs
dec
mov
loopne
push
and
test
mov
clc
sbb
add
and
add
xchg
cs
xor
xchg
mov
sarl
popa
je
mov
test
pushf
jl
xor
stos
mov
mov
jnp
jns
sbb
popa
repnz
dec
getsec
popf
cli
inc
dec
fs
jbe
pop
sbb
mov
dec
inc
jns
orb
and
pop
inc
sub
add
push
lods
xchg
push
shll
loope
icebp
out
dec
scas
sbb
lret
js
lods
push
inc
cmc
or
dec
test
das
rclb
mov
push
mov
stc
or
arpl
ljmp
lods
xchg
push
mov
insl
xchg
pop
mov
imul
xchg
out
xchg
pusha
leave
dec
mov
imul
jge
insb
xchg
pop
iret
aam
sbb
inc
xor
mov
jmp
sarl
add
out
mov
sbb
inc
dec
jp
pop
mov
add
jl
stos
movl
xlat
xor
jle
pop
clc
jae
sub
mov
mov
xchg
adc
cmp
mov
test
fstpl
lods
ficomps
jle
jecxz
shlb
pop
ds
and
jecxz
fwait
pushf
mov
movsl
int
lds
imul
ss
pop
jmp
jno
iret
push
ljmp
cmp
jo
mov
sti
cs
out
shl
shrl
fldenv
lods
sar
cs
nop
xchg
mov
lret
call
inc
pop
hlt
mov
xchg
cmpsb
adc
cmp
popa
sub
mov
in
cwtl
add
mov
mov
xor
sbb
int3
add
dec
and
imul
fisttps
mov
xchg
adc
mov
dec
outsb
test
ret
and
or
jmp
cmp
push
cltd
xchg
mov
push
pop
sbb
pop
pushf
aam
push
test
fs
js
mov
dec
mov
in
loopne
jmp
adc
loopne
cmpl
int
rcll
jbe
pop
xor
sahf
stos
addr16
out
test
pop
loope
dec
adc
sub
dec
scas
roll
popl
push
hlt
xchg
push
xchg
scas
into
push
test
push
mov
test
icebp
nop
inc
fnstcw
fcmovb
bound
into
aaa
loope
out
mov
xor
dec
xor
bound
fsubp
cli
out
adc
int3
push
adc
cmpsb
push
popf
lods
stc
out
loopne
jno
lds
mov
bswap
lock
cmp
jo
shll
pop
sbbl
insl
lock
ficompl
popf
lret
loopne
mov
adcl
push
mov
cli
ss
jle
push
xor
xlat
ss
sub
into
inc
loope
mov
cmp
test
lods
pop
jmp
inc
icebp
add
into
les
mov
mov
add
jne
xlat
ret
les
loope
and
movsb
in
lds
pop
mov
shrl
movsl
dec
mov
rcl
xorl
or
aaa
mov
adc
ret
jnp
movsl
aaa
out
fidivs
loopne
int3
mov
pop
pop
xchg
int3
mov
xlat
mov
cld
repz
push
cmp
out
adc
cmp
loopne
cmpsb
test
mov
push
xchg
clc
sysret
call
imull
mov
test
mov
psubsw
pop
pop
mov
push
cmpsb
inc
or
push
ds
inc
movsb
push
fcmovbe
dec
loopne
xor
popf
pop
cmpsb
mov
dec
ja
int3
inc
es
test
pushf
mov
daa
inc
pop
mov
adc
mov
ja
dec
shlb
dec
jl
push
loop
jle
scas
gs
mov
pusha
pop
xor
pusha
mov
xchg
cltd
inc
and
cmp
push
or
dec
out
xor
jl
xchg
pop
sub
je
aaa
int
mov
sbb
cmp
push
or
sbb
je
es
xlat
inc
scas
sahf
adc
fwait
push
pop
in
stos
cmp
js
loop
stos
jle
std
mov
dec
xor
pop
sbb
mov
pop
pop
rcrl
pop
push
and
in
jge
in
inc
inc
dec
mov
push
lret
push
jbe
imul
cmp
cwtl
cmpsb
adc
repnz
push
inc
adc
jne
je
imul
adc
add
ret
jo
inc
jmp
notb
aas
push
mov
cmp
daa
xor
fucom
and
jecxz
pop
sub
out
adcl
jmp
dec
and
test
out
je
xchg
data16
roll
arpl
aas
jecxz
icebp
fists
jge
xor
dec
xor
cmp
xchg
inc
cltd
mov
dec
mov
mov
xor
mov
ret
xor
add
push
dec
xor
mov
sub
or
xchg
cli
cvtps2pi
mov
mov
push
shl
pop
push
adc
xchg
cmc
lds
xchg
adc
push
cmp
xchg
mov
into
pop
jl
jle
xorl
jno
cmp
lods
sbb
cltd
pop
pop
lcall
fs
push
xor
mov
imul
xor
xlat
jg
and
jl
clc
xchg
jp
sub
mov
xchg
dec
dec
lds
cmpsl
pop
fldcw
and
jmp
aad
or
fcomi
pop
cmpsl
push
loope
rcrl
mov
jmp
xor
sbb
jle
xchg
or
and
fmuls
push
push
pop
lods
into
xor
or
mov
or
inc
repnz
fsts
xor
clc
fld
enter
jae
nop
ljmp
mov
cwtl
sbb
in
popf
dec
xlat
rcrb
or
and
push
mov
fsts
fs
loopne
add
roll
mov
xor
adc
mov
jl
testl
push
popf
jmp
ret
enter
mov
mov
rcll
mov
lods
sub
push
jbe
int
mov
lret
loope
ja
mov
out
or
xor
ja
fldl
push
stos
rorb
in
adc
jmp
sub
pop
pop
adc
jae,pt
popf
xchg
dec
out
add
pop
push
test
dec
cmpsl
fwait
adc
dec
sbb
es
add
ret
inc
xchg
cmp
xchg
or
daa
or
add
jne
add
shll
jge
cmpsl
jo
or
pop
dec
jb
shll
push
repnz
sub
mov
or
mov
repnz
test
in
testl
out
push
or
push
fisubrs
out
and
add
sbbb
inc
push
add
adc
ja
push
int
shl
or
mov
out
loopne
or
les
hlt
add
xchg
leave
pop
ret
cmp
mov
xchg
out
jae
mov
test
std
jns
or
sbb
and
add
fcmovnb
xchg
mov
pop
mov
pop
je
addl
cmp
inc
outsl
xchg
add
pop
jnp
test
mov
cld
movl
mov
pop
push
aad
arpl
xorb
movb
pop
loope
aam
dec
xchg
movl
lock
push
and
rorb
ffree
lods
and
cmpsl
hlt
adc
ja
inc
pop
stc
rorl
xchg
js
cmc
lea
into
cltd
push
ja
imul
movsl
insl
jo
inc
sar
push
testb
adc
push
pop
movsb
out
es
ficoml
or
inc
imul
mov
scas
std
dec
xchg
fisubl
pop
mov
mov
addl
cs
push
and
jae
and
dec
mov
addr16
popa
mov
fidivs
repnz
sub
fucom
cmp
cmp
imul
ret
inc
sub
push
stc
xor
sub
stos
jb
stos
push
pop
jnp
out
dec
mov
jbe
xchg
test
cli
xor
das
push
xor
fisubrl
stc
push
and
cltd
out
cmp
aaa
add
outsb
mov
subb
or
inc
inc
data16
cwtl
cltd
test
pop
inc
and
add
fdivrs
enter
and
test
inc
cmp
mov
std
pop
xor
jmp
push
mov
or
fisubrl
mov
push
adc
and
fwait
sti
loope
cwtl
stos
cmp
test
push
mov
pusha
adc
rolb
arpl
outsb
add
gs
inc
xchg
addl
mov
jl
cltd
xrelease
fucomip
xchg
sub
dec
lcall
dec
dec
cwtl
inc
cmovl
mov
xor
or
imul
and
jp
js
cmp
push
dec
mov
jno
push
mov
pop
arpl
cmpsl
jno
push
sub
mov
pop
rcrb
imull
movsb
js
and
adc
mov
or
jo
adc
icebp
ss
sbb
xchg
gs
or
add
push
ja
ficoms
jl
andl
push
call
jno
mov
add
vmaxps
fdivp
insb
and
fcmove
fwait
popl
out
add
imul
push
pop
mov
jb
js
es
ss
popa
ss
je
repnz
add
test
jo
mov
rolb
mov
adc
fsubrs
mov
xchg
pop
jl
inc
mov
scas
mov
repz
lea
sub
rorl
sbbb
scas
sti
enter
subps
push
iret
stc
stos
fsubl
push
clc
sbb
jl
push
out
pop
sbb
xchg
roll
jp
nop
imul
testl
mov
mov
outsb
test
mov
scas
cwtl
push
mov
push
lods
mov
icebp
cmp
and
and
stc
add
pusha
je
push
add
hlt
and
loope
mov
rorl
jge
mov
pushl
push
pop
aas
ret
arpl
or
test
into
mov
aam
push
dec
push
fimull
lcall
or
add
mov
mov
adc
movsb
outsb
or
cli
fwait
and
adc
nop
in
push
push
fcompl
mov
mov
imul
dec
xor
stos
xor
xchg
push
push
imul
or
push
arpl
je
pusha
pushf
sti
sbb
outsb
call
rorb
pop
pop
stc
mov
insb
push
mov
cwtl
jns
and
imul
fdivl
lahf
push
loopne
mov
outsb
rclb
sub
and
push
in
jbe
inc
dec
inc
pop
adc
jnp
std
mov
test
rcrl
clc
xchg
pushf
aas
das
and
shrl
push
es
fidivl
sbb
pop
add
call
mov
pop
lret
adc
cmpsb
or
stos
shl
mov
xchg
push
dec
iret
leave
call
or
test
scas
in
cmc
mov
push
aam
mov
jl
and
jge
les
push
jg
addr16
mov
pop
mov
sub
scas
add
nop/reserved
fstpt
int3
add
cs
or
xchg
mov
dec
test
jl
fstps
jne
ret
sar
loope
push
ss
imul
dec
scas
ljmp
incl
ret
lea
jmp
bound
clc
adc
jae
add
rolb
cmp
push
dec
xor
or
bound
cmpsb
mov
add
xchg
jno
push
fcoms
pop
push
adc
mov
test
jns
aas
add
addr16
jle
sahf
std
sarl
pop
push
jge
pop
mov
xor
or
in
xchg
inc
cmpsl
std
aaa
and
dec
adc
pushl
popl
loopne
xchg
mov
pop
mov
jg
add
leave
and
push
mov
cmpsl
inc
add
ss
arpl
sbb
pop
fs
lcall
mov
sub
xor
stc
repz
movsl
xor
jbe
fs
lods
ljmp
out
pushf
jmp
sahf
sahf
fwait
shll
sbb
mov
mov
adc
sub
movb
sbb
push
scas
jnp
movsb
push
arpl
push
loop
rcl
add
cmp
stos
sar
push
jl
sbb
repnz
xchg
mov
add
rclb
xor
or
inc
stc
sti
stc
add
and
test
enter
sub
push
ja
jmp
aam
das
push
clc
stos
repnz
pop
xor
ljmp
sub
das
sbb
sub
xchg
xchg
or
xor
jecxz
cmpsl
push
jg
cmpsb
imul
add
aaa
leave
inc
or
mov
and
mov
push
mov
mov
mov
cld
dec
pop
mov
push
popa
adc
cltd
mov
test
lea
xor
push
xchg
or
arpl
aad
mov
roll
mov
incb
push
into
imul
mov
in
hlt
fsts
ja
test
mov
std
xchg
xchg
fsubrl
pop
dec
jmp
js
std
cmp
std
dec
mov
shrl
or
jecxz
adc
sub
pop
jl
or
xor
lods
lret
test
aam
adc
popa
jo
js
std
test
sbb
ljmp
dec
cmp
aam
dec
push
es
push
int3
inc
cmpl
push
lock
cmc
hlt
ljmp
out
push
mov
shlb
inc
sbb
mov
ret
outsl
pop
add
lds
push
or
xchg
stos
mov
pop
in
adc
roll
hlt
cmp
nop
cmp
sbb
fldt
mov
and
pop
pop
xchg
cmpsb
sub
cs
mov
and
jmp
add
fidivl
mov
mov
rorb
pop
jnp
jge
sub
push
dec
cltd
cmp
lock
or
aad
and
add
sarl
adc
push
and
and
cmp
jbe
push
mov
dec
js
imul
dec
pusha
les
sbbl
ror
pop
adc
xor
mov
int3
mov
mov
stc
daa
push
dec
pop
inc
pop
mov
lcall
scas
xor
pop
aam
lods
jmp
push
stc
sub
xchg
loop
cld
inc
loop
cmp
pushf
jae
sbb
lods
scas
pop
sub
sub
fsub
gs
add
push
sbb
jo
call
data16
add
xchg
cwtl
push
dec
aam
popa
push
lods
add
push
outsl
xor
adc
fdivs
ficoms
iret
and
into
mov
push
stc
test
mov
imul
mov
mov
or
or
mov
jp
jae
inc
push
sbb
sbb
xabort
add
adcb
mov
popa
out
jecxz
pushf
stc
push
out
scas
pop
adc
sub
ficomps
loop
pop
jb
scas
gs
lcall
icebp
jl
filds
xchg
xchg
jbe
cmp
pop
int
cltd
adcb
jp
cmp
ret
mov
pop
lock
adc
sbb
mov
jnp
xchg
push
add
push
popf
inc
fdivrl
push
nop
cmpsb
pop
shrb
addl
std
mov
shll
stc
insb
rol
aam
lds
int3
sbb
lock
adc
pop
es
aam
jp
fninit
pop
repnz
lcall
mov
push
test
cmpsb
int
and
inc
fmuls
sub
jmp
jnp
pop
push
loop
or
movsl
insb
loopne
imull
xlat
pop
movl
inc
jbe
jae
xchg
push
dec
aam
ja
push
or
inc
mov
xchg
dec
fldcw
repnz
ret
inc
out
push
movsb
out
sbb
lods
pop
push
sub
mov
pop
sbb
mov
xor
rcrl
mov
jo
fists
stos
jns
outsb
sub
shlb
lock
repnz
ss
sub
scas
add
insb
mov
sub
js
test
jecxz
push
ja
into
out
xchg
sti
insb
stc
imul
xor
imul
mov
fstps
inc
loopne
data16
or
cli
mov
sub
icebp
sub
mov
ljmp
push
cmp
cmp
stos
out
pop
and
pop
jae
pushf
shll
sarl
mov
mov
adc
mov
pop
ret
cmc
cltd
sub
pop
fstl
or
std
and
negb
fadd
inc
cwtl
push
jae
out
and
jne
inc
mov
shll
jb
jecxz
popf
push
js
pusha
dec
pop
jo
loopne
rcrl
scas
dec
xchg
lds
mov
fdiv
inc
adc
push
mov
out
jae
ss
cwtl
and
mov
mov
enter
pusha
mov
add
mov
or
dec
jecxz
jecxz
mov
mov
movsb
mov
fs
pop
aas
cmp
jae
fwait
stos
and
push
out
adc
adc
test
imul
jnp
pusha
rorb
push
xchg
mov
imul
mov
xchg
cs
stos
pop
popa
lret
stc
addr16
jmp
js
inc
cli
jae
or
fisubrs
lcall
nop
inc
jge
imul
jp
adc
jmp
push
pop
xor
cmc
scas
sbb
or
std
jo
daa
and
dec
mov
mov
stos
mov
xchg
fsubp
mov
cmpsl
pop
adc
xlat
xor
push
int
scas
mov
dec
xor
in
dec
dec
and
add
sahf
mov
sbbl
das
stos
lods
lahf
adc
in
jo
cli
and
ficoml
mov
mov
xchg
mov
nop
stos
push
and
xchg
xchg
in
repz
insl
dec
pushf
inc
inc
sub
cmp
pusha
lcall
adc
mov
test
pop
movsl
inc
and
aad
mov
stc
push
arpl
clc
dec
mov
inc
xchg
inc
xchg
insb
lods
mov
bound
imul
popf
mov
cmpsb
rorb
jle
xor
pop
sub
mov
mov
mov
lahf
cmp
lret
sbb
mov
jmp
repz
mov
and
fcoml
dec
mov
push
adc
lcall
loope
cs
insb
fdivr
and
fcompl
pop
iret
push
and
xchg
loope
mov
lock
xor
outsb
fwait
mov
int
cmpsl
cltd
fwait
jne
or
sub
xor
iret
data16
inc
stos
mov
ja
outsb
pop
std
push
shlb
rcrl
cltd
xor
adc
mov
imul
pop
mov
jp
les
push
pop
test
andb
xor
jle
leave
daa
mov
sub
scas
cld
adc
rclb
pop
fidivs
dec
pop
lods
add
jbe
cmp
or
adc
mov
or
add
movsb
leave
frstor
mov
je
imul
mov
add
adc
adc
ficomps
popf
mov
popa
les
inc
aam
mov
rclb
adc
lret
push
roll
mov
mov
ret
pop
adc
repnz
movsb
insb
add
add
mov
loopne
leave
xorb
pop
test
jp
nop
cmpsl
aam
sub
add
cmp
xchg
ret
lea
aas
fidivs
sahf
fisubrl
sbb
dec
pop
sbb
push
adc
aaa
add
push
gs
sbb
or
ja
stos
mov
subb
int3
clc
in
aaa
cltd
mov
push
movntps
push
pop
cmpsb
inc
mov
int
dec
std
mov
outsb
mov
fsubrp
cmc
fisubs
mov
and
ss
out
scas
jmp
pop
test
out
inc
fadds
mov
cwtl
add
and
fsubrs
stc
push
add
testl
cs
dec
xchg
bound
jbe
sbb
std
fs
mov
imul
dec
loop
cmpsl
pop
inc
aad
pop
out
gs
stos
and
int3
inc
pop
cmp
fisubs
mov
out
pop
out
cld
pop
sysenter
lods
jno
leave
loop
lahf
es
add
int3
jbe
jecxz
and
jno
inc
xor
repnz
or
movsl
shl
stos
inc
cmpsl
mov
jmp
inc
fmuls
jne
pop
out
inc
out
and
push
sbb
xor
push
sbb
xorl
xchg
daa
cmp
lds
lods
mov
pop
mov
test
aam
dec
push
mov
repnz
push
insl
scas
push
cltd
inc
jp
out
pop
mov
inc
sub
xor
adcb
popf
mov
repz
loopne
pop
inc
add
add
mov
sub
inc
pop
or
in
outsl
in
bound
and
adc
sbb
std
mov
test
out
sbb
mov
rcrb
cld
push
rcr
sti
xchg
adc
xchg
in
js
mov
or
out
push
mov
int3
mov
mov
push
adc
test
xlat
xor
inc
sub
adc
dec
icebp
inc
pop
outsl
iret
iret
arpl
and
shlb
push
bound
lret
fbld
pushf
sub
arpl
dec
inc
sbb
inc
imulb
lret
cmc
aad
scas
cmp
jl
and
std
cwtl
call
out
cmpsb
push
mull
test
stc
sub
imull
or
aas
in
movsb
mov
sub
mov
enter
xor
scas
cmp
xchg
sbb
push
movsb
xchg
mov
push
pop
xlat
repnz
cwtl
push
fbstp
stc
lea
lock
insl
mov
sbb
scas
mov
subb
shlb
shr
push
faddl
iret
test
push
addl
mov
into
add
sub
sbb
inc
jno
mov
mov
in
aaa
pushf
cmc
scas
mov
nop
sbb
mov
fcompl
cmp
adc
enter
rorb
das
pop
std
sbb
mov
test
daa
sarl
add
mov
mov
or
lret
in
mov
subl
sti
adc
mov
sahf
cs
pop
out
pop
xor
mov
dec
jae
pusha
fimuls
repnz
add
scas
jno
out
jnp
dec
jge
lret
dec
xlat
test
jns
xor
xchg
sbbl
lods
outsl
dec
enter
imulb
cmp
xchg
in
mov
je
cmp
cld
sbb
out
lahf
inc
xor
imul
sub
jo
jne
mov
inc
pop
inc
enter
ja
sti
iret
int3
popf
sbb
stc
xor
fwait
sahf
and
outsb
inc
jo,pt
ja
lret
rcrl
pop
popa
or
mov
loope
sub
ficoms
pop
testb
push
and
insb
loopne
jae
popa
daa
insl
jge
cli
je
xchg
pushfw
leave
adc
sbb
adcb
sbbl
dec
mov
adcb
jl
arpl
test
xor
xchg
mov
pop
or
in
or
std
jle
mov
ret
in
or
pop
ror
mov
repnz
je
sbb
mov
mov
or
xlat
out
add
dec
pop
add
xchg
jge
and
jmp
out
xor
out
int3
mov
lret
out
cmpsl
out
ds
addr16
jl
hlt
lahf
mov
js
cld
in
out
mov
sti
arpl
or
and
sub
mov
imul
dec
cld
dec
and
jne
movsl
leave
ja
int3
jmp
push
pop
xchg
roll
js
lock
sbb
sub
and
adc
push
int
and
sahf
fcmovnb
and
mov
sbb
dec
aad
shll
mov
mov
orb
pop
pop
mov
fnstcw
pop
je
jge
cmp
test
imul
call
in
inc
push
inc
jb
sbb
outsl
mov
stc
xor
xorl
cmpsb
repnz
ret
dec
popf
add
mov
sbb
sbb
sub
push
loopne
sub
inc
pushl
pushf
sub
push
xor
push
fwait
popa
inc
pop
pop
mov
addr16
push
insb
sub
mov
xor
imul
mov
mov
ror
jno
sti
xchg
out
aam
and
sahf
faddl
xlat
aad
push
js
add
movsb
addr16
mov
or
cld
xlat
insl
mov
inc
jmp
fwait
mov
fimuls
stc
and
fcoms
aaa
inc
mov
pop
inc
cmpsb
daa
insl
pushf
mov
fcompl
fnop
pop
test
outsl
stos
and
xor
imul
jecxz
and
test
int3
mov
sub
int
sub
shrl
pop
mov
out
repz
inc
fsubrl
lds
rcr
xchg
sbb
test
ja
mov
cltd
mov
xor
pop
adc
sub
jno
jmp
fisttpl
or
mov
dec
jle
repnz
fistps
inc
frstor
int3
push
clc
push
xchg
sbb
aam
mov
push
fisubs
rorl
xchg
xchg
push
enter
loopne
sbb
sbb
stc
inc
xlat
xchg
dec
pop
mov
xchg
cmp
xchg
cmp
in
imul
adc
imul
mov
mov
dec
stos
or
mov
dec
sub
pop
xchg
jle
or
pop
xor
sbb
pop
cli
sbb
or
xchg
or
cli
inc
fnstenv
lcall
fstl
inc
push
fwait
in
mov
add
popf
shlb
push
cmp
shlb
outsb
stc
sahf
hlt
dec
outsb
jmp
ja
stos
dec
aas
leave
inc
add
or
movsl
xor
icebp
and
dec
gs
sbb
aad
cmpsl
xchg
shl
mov
mov
test
sarb
xchg
out
or
mov
fildl
xchg
in
sub
cmp
push
imul
push
pusha
inc
rorb
mov
xor
dec
cmc
xor
or
mov
mov
js
shlb
int
xchg
jnp
in
cmp
push
push
lcall
scas
dec
les
mov
or
jno
or
leave
mov
ljmp
mov
push
loop
mul
inc
mov
das
outsb
rol
mov
push
jg
pop
popa
aad
adcl
xchg
or
addr16
xor
and
jbe
add
roll
out
mov
in
lods
into
pop
jbe
fsubs
dec
mov
inc
jp
js
sub
daa
aas
outsl
adc
cmc
xor
pop
mov
faddp
test
adc
adc
les
sti
add
imul
cmp
push
mov
add
inc
lcall
in
adc
sti
push
call
dec
sti
jnp
push
cli
inc
lcall
mov
add
sti
nop
jge
outsl
cmp
xchg
jmp
popf
pop
test
sbb
mov
cmc
lods
in
js
add
daa
sbb
cwtl
nop
lahf
xchg
push
dec
cs
xor
shlb
jmp
xor
mov
js
mov
mov
dec
jmp
addr16
or
sub
cmpsl
cmp
pop
cli
scas
imul
xchg
pop
fmull
pop
out
pop
xchg
fstpl
clc
dec
xchg
inc
fdivrl
inc
mov
in
inc
add
fs
andb
sti
cmc
push
fadds
movsl
leave
pop
cld
ljmp
cli
stc
sub
fldl
andb
and
pop
pop
adc
pop
sahf
push
pop
xchg
add
lea
leave
test
adc
xor
inc
mov
mov
and
pushf
xorb
inc
popa
ror
sahf
mov
jo
inc
add
test
into
mov
mov
loop
push
add
mov
cmpsb
push
sbb
dec
mov
jle
lret
ret
cmp
and
sbb
jns
add
xor
out
xor
into
xchg
mov
inc
add
push
mov
xchg
js
arpl
fs
out
xchg
mov
int
and
or
orl
and
test
push
mov
dec
pop
push
mov
and
dec
lret
mov
sbb
outsl
mov
dec
xchg
out
mov
inc
xchg
sub
push
rorb
sbb
icebp
sub
out
or
out
insl
aaa
inc
jg
or
xor
push
out
pop
jae
orb
or
int3
in
sarb
sbb
sahf
out
fs
pop
mov
fsubs
cltd
xchg
mov
dec
or
mov
jle
lds
adc
push
daa
jo
add
and
jl
xchg
xchg
mov
lret
ds
xchg
sbbl
hlt
push
fnstsw
dec
out
lret
out
inc
add
cmp
fldl
in
imul
mov
pop
pop
xchg
shrb
sbb
rorl
push
int
cmpsb
movsl
add
cld
adc
and
ret
mov
xchg
repz
jp
jp
jnp
sti
jmp
mov
cli
jnp
lods
cmp
push
mov
test
cmc
lahf
subb
ljmp
mov
jo
std
addr16
adc
in
fbstp
enter
aaa
and
and
pusha
neg
cli
add
or
mov
push
lea
std
aam
cmp
gs
mov
sbb
lret
adc
in
mov
mov
lds
add
and
stos
rcrl
dec
in
dec
sub
adc
xchg
push
xor
xlat
mov
or
fwait
mov
xor
mov
xchg
cmp
test
lods
or
adc
add
jae
mov
es
std
pushf
push
sbb
sub
into
and
pop
pop
xchg
sbb
fcompl
pop
push
and
jne
seta
mov
pop
xor
inc
hlt
test
xor
or
or
pop
xlat
ret
addl
fdivp
es
cmpsl
mov
adc
sti
lea
lock
mov
notb
mov
jnp
in
test
and
paddsw
jecxz
je
push
pop
fnstenv
xor
clc
imul
shlb
negl
int3
xchg
dec
daa
bound
push
fchs
std
add
cmp
jmp
add
jne
mov
sub
lds
fidivl
cli
pop
negl
and
inc
xor
dec
nop
mov
stos
enter
pop
dec
outsl
push
arpl
push
movsl
mov
sbb
aad
test
sbb
mov
mov
ret
jbe
movsl
mov
inc
js
cwtl
push
scas
test
pop
lea
out
rorb
mov
or
repnz
inc
or
or
push
adc
pushl
add
xor
xor
adc
std
es
lahf
add
mov
fiadds
mov
cmp
js
mov
daa
test
jg
adc
push
repnz
add
push
xor
pop
xlat
movsb
fcmovne
pop
movsl
outsl
push
mov
js
lahf
sbb
cmpsb
mov
xchg
adc
jle
cmpsl
mov
test
sub
inc
xchg
jle
mov
nop
mov
mov
repz
adc
sbb
xor
xor
frstor
inc
pop
repnz
push
cwtl
xor
mov
fwait
pop
in
lds
pop
imul
xchg
pop
xor
sub
xor
les
jecxz
push
call
cmpsl
xlat
lret
mov
mov
adc
ficomps
pop
mov
dec
stos
sarl
jmp
jns
cmp
outsl
inc
push
sarl
xor
mov
inc
test
pop
cmpb
mov
stos
cmpsl
outsl
ljmp
mov
jnp
mov
cli
mov
xlat
cmp
mov
inc
cmp
cltd
xchg
lret
aad
add
hlt
andl
inc
lock
insl
adc
jne
mov
cmc
xchg
stos
enter
loope
arpl
cld
pop
insb
lcall
rorb
inc
adc
in
std
and
dec
negb
je
jle
push
xchg
sub
and
cs
arpl
jge
outsb
cld
or
cmp
xor
testl
push
jbe
int
aaa
push
push
mov
les
in
movsb
in
mov
add
sub
mov
xchg
ffreep
push
pop
mov
cltd
mov
xor
cwtl
sub
bound
xlat
push
adc
or
cmpsb
mov
imul
xchg
mov
and
xchg
and
iret
inc
cmp
inc
hlt
das
flds
mov
pop
lret
pop
adc
mov
push
ljmp
sub
je
rcr
aaa
pop
cmp
repnz
cwtl
jecxz
dec
cltd
inc
dec
addr16
es
fwait
push
fistps
push
and
xchg
rcll
jne
inc
adc
mov
mov
cmp
movsl
sar
mov
sub
jecxz
jo
pop
test
mov
cltd
push
inc
xor
add
pushf
mov
fcomip
andl
push
inc
imul
jb
je
pop
loop
xor
shlb
adc
mov
aaa
mov
push
adc
jbe
cltd
inc
shl
loop
adc
pusha
or
or
loop
xchg
outsb
outsb
sti
ljmp
dec
mov
sahf
xor
mov
adc
jbe
lret
ss
fsubl
pop
adc
cmpsl
mov
sbb
sbb
cmp
cmp
mov
test
add
or
mov
gs
push
ss
int3
lret
sbb
popa
mov
hlt
push
bound
xor
call
sub
mov
mov
push
inc
push
push
iret
adc
cmp
xor
daa
in
dec
pop
les
mov
or
mov
enter
inc
test
call
mov
mov
ret
scas
xor
ret
push
push
enter
xchg
sub
aaa
sti
adc
dec
cmpsl
gs
or
pop
xchg
mov
repnz
sbb
pop
movsl
adc
mov
xchg
rorl
cmpb
in
mov
stc
mov
and
ret
and
sahf
push
cwtl
pushf
push
aam
jle
or
stos
jns
lahf
aad
fidivrl
inc
add
xor
lret
inc
popa
mov
movsl
stos
lea
mov
push
mov
cmc
pop
sub
mov
loop
inc
jne
loopne
sub
inc
add
mov
adc
jl
shrl
pushf
mulb
xor
stc
and
sti
lods
movntps
cmpxchg
js
mov
out
push
out
lods
enter
sahf
das
sub
and
leave
fidivl
movsl
jb
add
lret
cmp
daa
and
or
mov
sub
push
fmull
loop
stos
out
sahf
jp
out
add
in
call
xchg
add
enter
sbb
xchg
inc
sub
or
push
xor
popf
jp
push
mov
out
xor
xchg
fisubs
push
mov
into
dec
das
xchg
sub
lahf
faddl
pop
cwtl
add
incl
scas
mov
adc
fiaddl
mov
test
jecxz
add
lret
sub
pop
xor
daa
and
dec
pop
mov
insl
push
aad
insb
movsl
mov
mov
aaa
jp
into
jne
rcll
push
pop
shll
lret
sahf
gs
int3
pop
mov
jge
scas
inc
sbb
and
lods
sub
sbb
cli
cmp
sti
sub
mov
lret
sbb
loop
cmp
or
xor
cld
and
cmp
jne
imul
mov
dec
nopl
pushl
add
sbb
push
outsl
add
call
shrb
and
stos
jl
jp
xchg
rol
cmpsb
and
lahf
dec
sub
mov
sti
outsl
mov
and
xor
mov
push
dec
shlb
loop
push
push
scas
ret
inc
dec
insb
lcall
mov
sbb
jae
das
aas
ret
shlb
or
and
jl
loopne
fsubrs
data16
fldt
mov
ret
sbb
pop
dec
dec
in
fldl
mov
add
aas
lret
scas
pop
add
test
and
icebp
mov
shlb
jg
dec
outsl
sub
mov
mov
imul
sub
xchg
push
inc
add
js
int3
cltd
mov
dec
sub
mov
fistpll
add
mov
lcall
jae
lcall
inc
test
jbe
stos
sub
mov
push
jo
and
out
push
movsl
fidivl
out
mov
sub
mov
scas
push
loopne,pt
in
cmpsl
les
incl
fiaddl
je
lds
loopne
mov
mov
jnp
mov
mov
loope
or
adc
mov
jge
inc
in
int3
subl
loopne
mov
ret
stos
int
addb
xchg
dec
add
mov
lret
push
push
aam
leave
inc
or
arpl
xlat
movsl
cmp
sahf
ljmp
loop
xchg
push
xchg
movsl
lock
pop
lret
push
inc
and
mov
fstps
lods
orb
out
les
jmp
inc
push
and
cmp
repz
or
xchg
pop
dec
xchg
pop
mov
xchg
rolb
jle
jg
outsl
stos
in
xchg
dec
enter
jo
sub
xor
adc
icebp
sub
xorb
test
out
bound
shll
lret
repnz
jo
adc
push
inc
fcoml
inc
mov
data16
push
xchg
popf
mov
inc
jmp
les
adc
scas
mov
jmp
insb
cmp
ds
aam
stos
jo
push
cmc
sbb
xchg
mov
dec
enter
xor
push
cmpsb
xchg
cmpsl
xor
aas
dec
mov
jbe
repnz
cs
jne
lret
cmp
jge
jnp
addr16
fdivl
dec
testb
inc
out
iret
pushf
out
inc
sub
adc
jns
pop
pop
lret
push
fadd
jle
or
pusha
arpl
std
rcrl
xor
test
mov
ret
inc
ss
int
jecxz
add
or
repz
dec
jae
push
pop
int
outsb
cs
arpl
jnp
inc
out
call
insb
inc
push
xchg
xor
inc
outsb
fisttpll
inc
cmp
sub
xchg
fistps
lret
pop
inc
jb
jbe
jp
push
popf
mov
movsl
insl
incl
jle
mov
bound
pop
jnp
or
mov
push
insb
sbb
or
imul
out
fmuls
and
mov
rolb
shlb
ret
mov
or
arpl
or
fcoms
mov
jnp
pop
roll
fisttpl
out
and
sarb
add
push
in
lods
xchg
adc
pop
mov
inc
test
mov
jbe
cmp
and
xor
aam
jo
dec
jo
add
int3
inc
cmc
ss
imul
xorb
aad
jb
cmpsb
mov
lcall
or
inc
das
pop
jne
pop
enter
cmp
into
into
out
or
mov
or
xor
pop
mov
sbbl
inc
sbb
inc
dec
dec
mov
subl
cld
call
repnz
mov
mov
loop
cwtl
xor
cmp
jnp
inc
std
and
xor
stos
mov
mov
jle
jg
mov
imul
addr16
imul
xchg
cmp
xchg
fs
sbb
js
cltd
pop
or
mov
lods
xor
mov
push
mov
incl
sar
int
mov
movsl
in
cld
cmp
js
cmp
fucomp
xchg
add
outsl
test
icebp
sbb
dec
in
js
sti
dec
fcompl
sbb
fadds
mov
cltd
test
lret
cmp
mov
inc
cmp
in
add
adc
inc
add
adc
push
adc
pop
test
add
out
std
or
cwtl
test
sub
pop
xchg
lock
loop
pop
imul
shrl
jmp
pop
bound
outsb
imulb
rolb
sbb
call
push
mov
jge
jecxz
ljmp
pop
mov
aam
inc
lret
mov
iret
mov
ret
xor
lret
push
test
xchg
mov
or
adc
testb
xchg
cltd
lods
push
jno
jbe
ljmp
add
adc
add
loope
adc
sbb
push
scas
cmpsb
fsubs
lea
cmp
jmp
mov
ret
sub
insl
add
and
test
jo
pop
lods
cmp
int3
xor
push
dec
mov
mov
adc
and
sub
daa
out
popf
pop
xchg
mov
sub
fs
mov
pusha
xlat
fucomp
stos
xor
xchg
test
xor
loope
andb
inc
subl
xor
pop
pop
fcom
popa
clc
les
iret
or
fcompl
push
fcmovu
jae
loop
mov
dec
mov
mov
lahf
lcall
andl
jae
xchg
je,pt
stc
and
add
loop
rcrl
add
push
pop
cmp
adc
push
neg
shll
xchg
cs
scas
jp
mov
and
xchg
adc
les
lahf
cmp
test
jge
sbb
push
inc
pop
mov
cmpsl
out
call
xchg
sub
movsb
push
jg
pop
loope
jl
lcall
mov
push
pusha
in
addr16
cwtl
mov
notl
sti
popf
mov
jnp
bswap
enter
mov
fdivl
push
enter
dec
xchg
js
imul
jno
dec
sub
scas
push
pmaddwd
int
push
jecxz
test
mov
sub
xchg
rcl
call
push
pop
pop
adc
mov
movsl
jge
push
test
lea
addb
or
cmp
push
add
mov
or
sub
xchg
out
ret
sub
jno
jmp
push
in
insb
mov
xchg
pop
mov
sbb
mov
cmp
pop
mov
call
jb
scas
lock
js
and
mov
ret
mov
mov
int3
lods
adc
cmpsb
jo
dec
stos
xchg
lea
pop
mov
add
jae
lock
test
cmp
jl
cs
xor
stc
popa
jle
adc
xchg
xor
out
push
idivl
ja
cli
sbb
push
dec
adc
and
xlat
jo
insb
push
fsubr
ror
loop
push
mov
jnp
adc
pop
and
cmc
xor
stc
aad
adc
dec
hlt
mov
div
cmp
insl
insl
adc
sub
pmaxub
mov
sbb
xor
out
sub
out
xor
gs
add
mov
outsb
ljmp
sbb
adc
int3
mov
push
jle
or
inc
sub
xorl
dec
adc
pop
imul
cli
push
int3
adc
mov
fdivrs
outsb
pusha
add
leave
xchg
and
andb
xchg
and
inc
std
inc
sar
fwait
test
push
cwtl
fdivl
ret
jno
mov
cltd
loope
mov
test
push
mov
ret
imul
dec
cmpsl
rolb
mov
adcl
je
xchg
xor
loope
jae
aas
mov
push
pop
pop
mov
mov
stos
and
adc
mov
lahf
jb
mov
in
aas
outsl
fmull
dec
xor
in
int
out
xchg
and
stos
es
decl
and
jae
js
lea
mov
sti
pop
jae
je
out
stos
mov
pop
cmc
sbb
cmp
mov
shl
adcb
mov
and
sti
int
fists
xchg
pushf
xchg
in
arpl
dec
push
fmuls
rcr
push
xor
sarb
cmpsb
jmp
mov
xchg
lcall
mov
sub
and
aad
xchg
mov
insb
mov
rorb
adc
int
pop
in
push
aas
clc
xchg
out
lahf
xchg
ret
ret
pop
js
daa
lods
mov
stc
sbbb
push
mov
sbb
or
sarl
out
push
pop
cmp
dec
lds
pushf
add
inc
mov
xchg
xchg
pusha
adc
mov
lahf
add
movsl
jg
fisubs
ret
xchg
fsts
test
mov
and
addr16
cltd
cmp
pusha
inc
xor
xchg
or
ja
adc
add
mov
aad
mov
test
pop
add
iret
test
imul
inc
push
cltd
cmp
movsb
xchg
pop
out
enter
jo
sbb
je
push
in
adc
gs
cltd
fwait
add
and
jg
mov
adc
sub
cli
repnz
test
dec
mov
cmp
sbb
mov
xchg
xor
daa
push
xchg
scas
int3
mov
cld
loope
jae
sbb
in
adc
daa
enter
adc
lds
push
xor
dec
xor
in
mov
jae
mov
xchg
lods
inc
mov
shrl
xchg
and
xchg
add
mov
test
sub
dec
pop
lret
sbb
fildll
xorb
jbe
pop
mov
loope
and
sub
xchg
mov
sbb
cli
inc
or
push
fwait
call
sub
es
sub
xor
and
push
arpl
in
rcll
sub
adc
jno
fdivrl
aad
pop
sub
mov
push
lods
pop
xor
lods
loop
mov
fisubl
dec
sbb
ret
push
xchg
and
movw
std
cmpsl
mov
mov
gs
and
adc
pop
je
loope
push
lds
cmp
jl
dec
sarb
and
sub
mov
cmc
and
addr16
xadd
bnd
mov
inc
loop
dec
sub
repnz
js
pop
pop
mov
sarb
aas
stc
adc
rorb
mov
and
jge
nop
stos
ret
dec
and
sbb
adcb
jmp
adc
cmp
orl
inc
lahf
fcoms
dec
dec
adc
sbb
or
fisttps
out
pop
jns
fdivl
push
lret
jnp
sub
scas
or
cmp
fcmovu
sub
cwtl
fs
in
out
and
test
and
or
stos
xor
push
incl
xchg
jle
repnz
ret
jp
mov
loopne
in
loop
dec
cld
fildl
add
into
loope
cltd
cmp
lret
mov
subl
sub
call
dec
dec
arpl
inc
gs
or
jle
sbb
int
push
in
sahf
xchg
arpl
add
stos
leave
sete
sbb
je
ljmp
mov
fsubp
mov
xchg
cmc
lods
add
daa
push
movsl
lods
cli
stos
fnstsw
gs
pop
push
rclb
sbb
clc
xor
popf
inc
sti
cld
push
cmpsb
lock
jp
mov
loope
test
jmp
push
dec
cmpsl
add
mov
sub
mov
sbb
pop
cmpsb
adcb
test
pushf
jge
les
repnz
lock
xchg
data16
or
inc
inc
pop
push
sbb
and
cmp
inc
loopne
imul
and
das
sbb
sarl
mov
icebp
and
sub
stos
popl
scas
inc
mov
mov
fstpl
mov
cli
xor
leave
pop
xlat
lods
inc
sbb
in
sahf
cmpsb
das
movlps
lret
stc
outsl
int
pop
dec
idivb
sarl
xor
ret
sbb
mov
pop
js
stos
sub
lods
xor
test
jge
pop
push
jecxz
push
xor
cmpsl
and
fneni(8087
xor
jle
fs
int
popa
sbb
ja
ror
daa
push
mov
cmp
sub
std
cmp
int3
sub
fcmovbe
mov
mov
mov
jo
pop
inc
inc
mov
jae
mulb
cmpsb
mov
js
and
lret
lods
xchg
js
dec
or
mov
mov
dec
inc
push
pop
mov
rcr
push
mov
mov
adc
rcrl
outsl
mov
pop
xor
fmul
cmp
and
adc
pop
sbb
arpl
das
or
xchg
aam
je
imul
inc
mov
xchg
sub
lods
and
dec
fidivl
gs
and
sahf
ret
scas
jle
mov
je
xor
push
iret
and
xor
lahf
xchg
popf
mov
inc
inc
sub
aaa
dec
cmp
popa
push
mov
std
add
add
or
mov
stc
or
lcall
mov
xchg
out
push
pop
jo
push
out
test
mov
xchg
fwait
jmp
dec
pop
add
fwait
js
repz
dec
pop
divb
mov
hlt
outsb
add
shr
scas
mov
and
in
or
push
mov
cmp
leave
adc
or
data16
push
fcmovnbe
mov
idivl
dec
stc
cmp
je
dec
jle
les
xor
mov
test
into
cmp
dec
fcoml
push
nop
inc
fstpl
cmpsb
cwtl
cmp
xchg
mov
mov
sahf
lahf
int
cwtl
mov
pop
sub
pusha
repz
mov
sbb
cltd
mov
adc
test
mov
jbe
jmp
mov
push
ss
sahf
sbb
pop
aam
aam
loope
je
inc
xchg
loop
and
sub
ss
mov
test
inc
lret
jle
mov
test
test
clc
fidivs
fldenv
mov
fwait
imul
pushf
clc
rcll
cwtl
push
add
jns
push
loope
cmp
shrb
fbstp
out
jg
mov
insb
dec
std
jne
xchg
push
jae
lods
sub
popf
pop
jb
push
lock
or
and
scas
inc
adc
xor
xchg
orl
xchg
in
sub
jbe
cs
out
pop
test
cmp
and
push
lods
push
xchg
lcall
sarb
clc
jge
mov
pop
stc
outsl
cmc
pop
test
fwait
or
push
mov
cmp
xchg
mov
sahf
xchg
fs
sbb
or
mov
push
adc
loope
cmpsb
dec
ds
xchg
repnz
push
lret
pop
mov
int3
prefetchnta
jmp
xor
fnstenv
jae
or
xlat
cmc
icebp
in
push
shlb
mov
int
bound
movsl
aaa
pop
sub
or
pop
cld
gs
popa
jns
sub
sbbl
lahf
lock
call
nop
pop
cmpsb
add
sahf
decl
adc
adc
jmp
mov
lds
push
sub
sbb
cli
pop
data16
push
cld
dec
adc
or
hlt
adc
cmp
out
aas
sub
out
sbb
and
ficompl
adcl
dec
xor
jae
mov
outsl
push
add
xor
cmp
push
das
adc
pusha
xlat
sahf
add
into
cmp
xor
mov
out
jb
lock
mov
lock
dec
fwait
test
dec
int3
jne
push
mov
cld
mov
cmp
jne
cmpsl
dec
add
loope
pop
sarb
testl
imul
xchg
sbb
sub
push
rcrl
cmp
jecxz
push
aad
jnp
call
loopne
xchg
mov
push
shrb
imul
push
popf
push
and
loopne
stc
pop
xlat
imul
add
lods
sbb
pop
popf
sbb
jmp
add
jno
xor
js
fnstcw
outsb
stc
mov
mov
repnz
mov
dec
icebp
dec
pusha
clc
cmp
mov
in
divl
lcall
jnp,pn
jo
rorb
test
xchg
jo
pop
xlat
int
mov
call
xchg
dec
xchg
cwtl
jno
jae
mov
icebp
scas
daa
call
mov
loope
add
and
cmpl
in
mov
dec
das
xor
fdivrs
bound
jecxz
rorb
mov
icebp
mov
adc
inc
push
adc
fstps
and
xor
les
sahf
clc
inc
shl
rcrl
xchg
adc
bound
fistpl
cmp
add
aam
sub
out
sti
mov
stc
mov
dec
mov
push
nopl
pusha
sti
inc
imul
cmpsl
jge
dec
sbb
add
sub
lret
cltd
cmp
jns
stos
or
add
mov
enter
sub
mov
inc
mov
adc
push
xchg
push
xchg
fstpl
mov
dec
std
sbbl
cmpsb
push
or
adc
sub
and
dec
mov
stc
add
pop
ss
ret
sub
in
mov
pop
dec
scas
push
out
mov
add
cltd
jmp
adc
inc
int3
push
lret
sbb
and
cmp
xchg
fiadds
stos
and
imull
or
xchg
inc
fmull
out
adc
hlt
dec
stos
inc
stos
jecxz
push
pusha
or
les
scas
push
in
leave
fs
das
inc
mov
in
cwtl
sbb
bound
pop
andb
mov
xchg
out
pop
jge
rcrb
cltd
negb
xor
sub
lea
cltd
mov
adc
test
mov
les
xchg
in
push
jne
outsb
imul
xor
mov
lds
or
mov
sub
nop
mov
leave
jno
pop
imul
mov
cmpsl
insl
fadd
xchg
inc
and
imull
cmp
imul
adc
aad
add
je
xchg
and
daa
jo
fstl
add
idivb
mov
or
loope
test
fdivrp
addr16
add
ss
lods
push
dec
mov
jmp
test
leave
into
mov
inc
jno
addr16
xchg
xlat
loopne
add
roll
into
pushf
sub
cmc
fwait
sub
mov
es
cs
sahf
mov
imull
xor
or
adc
stos
lret
adc
ss
and
int
cmp
inc
adc
push
jo
inc
cwtl
sahf
mov
das
jne
ds
jge
shll
fisttpll
hlt
push
xor
push
rclb
or
push
jg
cld
cltd
arpl
pop
movsl
fistpll
or
sub
lock
cmpsb
dec
jae
stos
adc
jns
ds
outsl
add
je
xchg
cmp
or
adc
cmp
cmp
in
xlat
xchg
inc
mov
pop
stc
mov
push
je
cltd
mov
sarb
ja
cltd
aas
push
adc
sbb
notb
stos
mov
js
sbb
xchg
lods
les
mov
fdiv
das
sbb
sub
dec
mov
add
mov
push
mov
mov
and
push
pop
add
jge
out
sub
dec
fidivrs
jno
daa
dec
jl
in
xor
jecxz
stos
inc
inc
push
cli
icebp
jb
push
pop
into
mov
push
sar
sti
and
aad
xchg
ds
or
stos
jle
push
pop
cmp
into
sbb
mov
inc
xchg
pop
xor
sub
xor
inc
ficomps
push
mov
adc
in
push
repz
jo
pusha
test
sbb
ficomps
ja
or
jp
push
lods
cs
pop
test
fsubrl
adc
jne
adc
test
sarb
out
outsl
imul
add
sarb
jne
js
inc
or
cmc
daa
and
xor
pop
scas
out
cwtl
movsb
test
repz
cwtl
ja
test
aas
xchg
dec
adc
push
sub
insb
mov
test
mov
test
xor
ljmp
adc
aaa
adc
aad
mov
mov
jne
aas
xchg
mov
jmp
icebp
fldcw
fs
jl
fimuls
mov
call
sahf
sbb
sbb
stos
cmp
adc
cmp
push
jecxz
pop
lock
ret
push
test
xchg
data16
mov
xchg
test
push
mov
jnp
cwtl
test
jmp
cmp
mov
inc
xchg
mov
and
and
rcrl
mov
bound
mov
std
ljmp
int
call
mov
push
jbe
and
into
fldt
push
je
jl
aas
jl
cmp
jb
hlt
in
jno
adc
mov
fmuls
imul
mov
xchg
jmp
stos
les
es
arpl
gs
push
xor
incl
push
call
cmc
lods
lods
sbb
negl
ret
cmp
insb
clc
xchg
xchg
mov
fs
or
arpl
or
fnstsw
lods
or
int
push
das
jle
xchg
inc
inc
enter
outsl
adcl
xchg
pop
daa
push
push
sub
xchg
pop
mov
mov
rclb
jo
jp
adc
bound
dec
sub
stos
adc
scas
jnp
add
xor
mov
xor
inc
nop
mov
clc
push
int
jnp
mov
es
cmp
int3
inc
movsb
push
pop
ja
xor
ds
fisttps
and
rcrb
icebp
fiaddl
sahf
das
push
mov
jecxz
loope
sbb
mov
add
test
je
scas
mov
xchg
insl
rcrb
loop
mov
into
push
mov
inc
mov
mov
add
xor
mov
and
xchg
dec
lock
pop
iret
jl
push
add
adc
repnz
or
jns
push
inc
add
sti
mov
push
fnstsw
add
in
jae
repnz
cli
std
ljmp
xchg
test
cltd
lock
and
ret
push
fdivl
ror
and
daa
cmp
ss
fwait
inc
out
aam
xlat
pop
outsb
adc
adc
xor
loope
and
sbb
lret
cwtl
jg
cmp
xchg
pop
mov
addl
push
push
pushf
leave
imul
or
jecxz
cmpb
mov
push
fstpl
and
mov
movsl
add
pop
jno
loopne
sbb
xorb
iret
jo
lods
in
fbstp
pop
pop
xor
add
stos
adc
xor
jge
mov
cwtl
rcl
arpl
ss
pop
test
movsl
jne
je
mov
js
pop
out
fidivs
imulb
pusha
cli
inc
lea
mov
lret
lods
out
in
dec
jmp
mov
les
shrl
stos
pop
aam
aaa
xchg
pop
stos
cld
jnp
jne
ja
inc
dec
fbld
aaa
pop
les
lcall
jecxz
adcb
cwtl
neg
mov
mov
je
ds
imul
out
and
push
and
jae
push
and
nop
lret
fld
cmp
push
sbb
dec
stos
stos
inc
push
push
sahf
jle
ficomps
sti
pop
aad
dec
cmp
adc
pop
fmuls
xchg
sbb
push
ss
repz
sub
dec
push
jg
loope
pop
add
adc
xchg
mov
rcll
mov
pop
fsubr
aas
xchg
shl
mov
or
aam
jbe
jo
fwait
insl
repz
cwtl
jnp
xchg
inc
push
push
push
ret
xor
sub
stc
icebp
mov
mov
mov
ret
sub
xchg
adcb
adc
and
sub
lret
and
and
ljmp
sbb
ret
mov
ds
sbb
jne
xor
adc
mov
and
rcrl
mov
mov
and
imull
rcrb
dec
sbb
fmul
movsl
mov
in
push
jle
jecxz
or
nop
push
inc
aas
div
pop
stos
cmpsb
aaa
mov
adc
and
shlb
fidivs
adc
inc
movsl
enter
in
mov
aaa
in
mov
in
sub
mov
push
sub
sti
insb
stos
loope
mov
or
jns
rolb
or
xlat
out
add
inc
pop
rorb
data16
pusha
jle
cltd
aaa
pusha
push
aad
fmul
dec
or
cli
aad
int3
mov
pusha
add
jl
cld
lcall
pop
movsb
xchg
cmp
xchg
pop
lods
repz
adc
jl
popf
mov
adcl
jno
es
fimuls
sub
add
out
inc
mov
sbb
sbb
dec
sub
pop
xor
fsubrs
loope
jb
mov
push
out
mov
lea
sub
aaa
mov
jae
or
cld
orb
insl
push
es
mov
add
jl
and
sub
mov
mov
jl
cwtl
fiadds
clc
mov
mov
or
jno
das
mov
xchg
aam
hlt
enter
cmpsb
sbb
adc
iret
mov
xchg
or
cs
hlt
mov
repnz
int
jp
movsl
out
sub
dec
ds
or
or
ja
sbb
cmp
fildl
repnz
xor
add
jnp
mov
inc
pop
je
mov
cmp
pop
jmp
xor
mov
ds
dec
adc
pop
fstpl
std
mov
cltd
clc
xor
clc
arpl
fsubl
or
mov
scas
les
mov
cmp
gs
iret
xor
fwait
fwait
imulb
scas
cmp
dec
fistps
addl
inc
and
jns
jmp
negb
iret
adc
ljmp
lea
xchg
lahf
jb
xor
xchg
mov
int3
loopne
dec
mov
bound
mov
push
les
fsubrp
negb
popf
jmp
xor
jo
bound
sub
pop
jbe
cmp
adc
and
sub
shlb
jle
in
sub
xchg
je
out
xchg
jp
or
test
out
add
mov
aaa
in
sahf
xchg
mov
cmpsb
das
scas
mul
inc
aas
leave
lods
cli
movsl
xor
cwtl
xchg
es
dec
fidivrs
cmpsl
int3
fimuls
lcall
pop
xchg
mov
sbb
fidivrl
mov
jae
jb
popf
dec
inc
cmp
add
mov
in
push
outsb
dec
pop
aam
lock
outsb
cmc
cmp
insl
mov
mov
cmpsb
outsl
push
daa
push
outsb
mov
inc
push
push
lcall
mov
sbb
jle
mov
sbbb
push
jecxz
iret
sbb
push
pop
icebp
cltd
hlt
pop
jb
test
xchg
push
mov
cmp
loop
es
fs
repz
dec
and
inc
jae
cs
mov
fidivl
repnz
jbe
out
adc
push
aaa
mov
clc
or
mov
imull
push
test
stos
inc
aam
push
out
sarl
and
mov
pop
stc
loope
cmpsl
shll
fcoms
or
push
out
aam
xchg
movsb
or
xor
into
jns
jno
arpl
sbb
lret
in
mov
sub
shll
loope
mov
mov
jle
pop
cs
xor
insb
cmp
ret
add
fisubrs
jmp
or
int
loop
movsb
daa
xor
cmpsl
test
sbb
cmp
ret
outsb
test
vmovhpd
push
jp
jg
mov
mov
dec
adc
stc
imul
outsb
inc
lods
insl
loop
and
les
scas
jp
pop
mov
call
aas
in
mov
and
pop
jbe
int
les
push
ficomps
cmp
out
std
mov
xor
jecxz
mov
and
into
push
or
icebp
mov
stos
test
lock
mov
push
mov
inc
cmp
ret
sbb
add
mov
push
xor
test
mov
or
decl
xor
push
adc
mov
cld
mov
mov
mov
lret
ds
repz
nop
aas
fisttpl
lret
pop
ja
mov
insl
aad
push
push
stos
mov
sbb
jnp
fimull
imul
test
add
repnz
test
ljmp
leave
aaa
fsubrp
xchg
mov
sbb
pop
sbb
cmp
dec
inc
enter
dec
sti
adc
mov
push
mull
adc
pop
and
repnz
test
jge
jp
arpl
mov
add
out
push
xchg
test
inc
mov
sub
jne
add
addl
and
mov
cmp
cwtl
sub
clc
mov
xchg
aas
cltd
mov
cli
pusha
sarl
out
or
pop
inc
sub
movsb
xor
and
fcoms
cmpsb
xchg
mov
pop
bnd
outsb
push
sbb
int3
ljmp
xchg
mov
fadd
fadd
jle
test
movsl
notl
mov
int
loopne
pushf
dec
rorb
and
cmpsl
xchg
orb
and
lcall
gs
mov
lods
cmpsl
js
cmp
add
mov
sbb
inc
popa
jae
arpl
cld
mov
and
popa
lds
imul
mov
arpl
inc
mov
cs
je
ret
aaa
in
sar
scas
jge
mov
mov
mov
add
push
adc
daa
leave
xchg
insb
and
mov
out
push
pop
push
outsl
fistps
xchg
lds
jns
insl
mov
ret
cltd
push
inc
push
push
in
xchg
icebp
shlb
push
add
insl
cwtl
fstpl
mov
cmpsb
addl
pushf
je
and
sbbl
dec
arpl
fbstp
sub
lcall
roll
lods
push
mov
arpl
hlt
jnp
adc
sub
jo
mov
add
mov
mov
fisubrs
ffreep
cmp
fmul
pushf
test
pushf
shl
leave
sbb
lea
aad
mov
fs
cmp
and
cmp
or
fwait
push
addr16
mov
stc
or
ror
lret
iret
fmul
int
add
mov
sub
push
imul
and
call
cmp
add
xor
mov
add
sub
ret
pushf
jo
ret
mov
test
mov
test
rcll
fcoms
fucom
dec
lcall
test
inc
hlt
push
push
bound
cmp
lock
sbb
and
push
decl
jae
inc
mov
push
in
gs
ss
pop
lea
mov
fidivs
rorb
jl
repz
mov
xor
inc
aaa
aad
jno
scas
sbb
ds
push
inc
jo
jae
loop
stos
push
add
in
add
jge
and
push
inc
mov
lods
repnz
mov
mov
loopne
call
xchg
add
scas
mov
or
jo
rolb
adc
cmp
imulb
imul
stos
jmp
out
addl
mov
mov
add
and
xchg
dec
jl,pt
mov
inc
mov
pop
pop
jae
pop
jae
pusha
and
sbb
fcomip
ljmp
cmp
mov
inc
imul
or
hlt
iret
lea
mov
icebp
mov
call
and
daa
testl
xchg
xchg
add
cld
adc
lods
push
dec
sub
xor
pusha
cmp
out
mov
addr16
es
js
imul
jae
pop
hlt
push
pop
sbb
outsb
ljmp
sarl
fistpl
pop
sbb
cmc
add
aad
dec
jbe
jns
cmp
outsb
lcall
rcrb
pop
pop
mov
xchg
push
and
xchg
roll
and
or
test
filds
push
arpl
sub
dec
cmp
int3
outsl
or
add
xchg
les
ljmp
gs
cmp
clc
dec
pushf
enter
xchg
jae
arpl
mov
cmp
dec
jmp
push
and
pop
add
and
mov
out
mov
rcll
push
and
sbb
cld
cwtl
push
sub
xchg
push
mov
insb
push
icebp
adc
bound
xor
push
or
out
iret
aaa
mov
int
pop
outsb
popa
sbb
mov
pop
mov
push
pop
jns
lods
outsb
jbe
lret
inc
jle
jmp
xor
pop
mov
cmp
sbb
mov
push
vsubpd
ds
push
out
fcompl
add
mov
or
or
cs
jle
icebp
add
loopne
jns
pop
and
cli
leave
push
movsl
lods
mov
xlat
mov
imul
push
dec
std
pop
inc
pop
fwait
sub
sbb
mov
aam
dec
test
pop
cmp
call
xchg
in
pop
sbb
test
mov
push
mov
sub
insb
iret
and
rcll
sbb
daa
cmp
sub
xlat
adc
cmpsl
jl
dec
push
cmp
mov
or
mov
mov
xor
mov
sub
push
lods
mov
popf
cwtl
jl
shrb
mov
ja
jge
xchg
adc
fdivrl
cli
cmc
imul
xor
mov
push
sbb
push
divl
sub
out
or
iret
and
imul
je
fcom
nop
push
out
idiv
adc
xchg
sub
jno
pop
cmc
xchg
sub
je
or
enclu
shl
enter
cmpsb
fsubl
jno
push
idivl
add
notb
inc
sti
pop
setle
inc
inc
mov
xchg
inc
fwait
jo
dec
ret
jmp
push
insb
sub
xor
push
icebp
movsl
add
in
jns
mov
pop
jo
pop
mov
xor
adc
subb
outsb
or
rcr
fmull
pop
imul
lcall
mov
testb
dec
out
ret
push
out
scas
adc
outsb
cmp
hlt
daa
movsb
leave
and
sub
xor
jno
gs
repz
xchg
jnp
mov
push
mov
add
or
movsb
xor
mov
in
jne
aaa
test
dec
sti
or
xor
dec
test
hlt
scas
scas
aad
inc
fsubs
adc
int
fstl
or
repnz
pusha
or
push
push
daa
scas
or
cs
cmc
inc
jnp
repnz
daa
daa
dec
shll
in
repz
sub
nop
or
mov
ds
jle
pop
imul
flds
in
mov
out
push
repz
pop
adc
pop
jns
jnp
mov
fidivs
repz
in
add
inc
dec
jmp
sub
jnp
into
or
testb
dec
mov
jb
lock
push
and
xor
push
out
xchg
scas
and
loopne
xor
dec
push
push
fistpl
iret
loope
and
leave
dec
lods
cmpsl
out
test
mov
push
fwait
popa
cwtl
mov
js
loope
addb
add
out
pop
repz
sub
push
scas
in
rorb
mov
pop
and
sub
cmp
adc
pop
aad
rdpmc
fnsave
roll
test
pop
pusha
inc
ret
je
push
cmpsb
and
ljmp
mov
mov
push
cmpsl
fisttps
cltd
and
test
adc
cs
icebp
mov
push
xchg
xor
out
sbb
dec
loope
xor
adc
push
lds
outsl
lods
les
repz
in
cs
adc
cmpsl
jge
in
jmp
lea
mov
inc
xchg
popf
push
stos
shlb
daa
in
jge
pop
cmp
lea
dec
jmp
jl
mov
push
orl
add
push
stos
push
sub
adc
adc
in
adc
out
push
cmp
mov
mov
insl
dec
popf
gs
ja
shrl
addr16
dec
xchg
insb
adc
test
inc
jg
lock
dec
divb
xorl
popf
rcrl
xor
and
sbb
pushf
shrl
sub
lret
sub
push
pop
jns
sub
and
pop
test
push
inc
lea
iret
test
xor
enter
jno
loopne
call
pop
scas
sti
push
stc
test
cmp
jp
adc
fnstenv
icebp
mov
loopne
and
insb
scas
testl
hlt
push
sti
notl
lcall
mov
lcall
xor
add
xchg
fsubs
lret
inc
sbb
idivb
test
jg
mov
jb
jmp
pop
out
nop
setns
xorl
jle
and
jmp
in
les
mov
fwait
insb
pushf
adc
xchg
jne
test
lret
pusha
jo
ds
pop
out
mov
fbld
adc
sub
pusha
fs
push
pop
inc
test
js
dec
in
in
xchg
or
shrb
xchg
popa
stc
mov
std
sbb
test
sub
incl
mov
outsb
and
popf
xor
in
cli
jg
xor
fsubr
pop
add
data16
pop
inc
repnz
std
mov
fst
stc
mov
clc
dec
pop
add
mov
adc
push
sar
xor
mov
push
int3
fisubrs
test
or
imul
jne
push
push
cmp
popa
add
insl
movsb
push
and
xchg
and
mov
xchg
sar
js
mov
dec
mov
xchg
fldt
shrb
mov
test
mov
icebp
ja
stos
repnz
and
lcall
mov
ret
movsl
xchg
cs
dec
dec
and
mov
int
rcl
dec
hlt
xchg
pop
nop
sub
fidivs
push
or
push
mov
cmp
mov
push
dec
stos
mov
lods
pop
jl
and
mov
bound
sub
sub
je
pop
inc
sbb
push
jo
lea
lahf
or
xchg
pushf
mov
jle
aad
jecxz
add
jae
inc
push
int3
and
subb
xorb
xlat
jecxz
and
scas
xor
add
ja
cld
stc
add
addps
push
hlt
in
stos
dec
test
sub
pop
mov
addr16
pop
jae
dec
jo
sbb
inc
jae
xchg
inc
mov
jno
adcl
jmp
bound
mov
cmp
lcall
adc
sub
cmp
xor
shlw
scas
iret
inc
inc
mov
lods
enter
popa
xor
sqrtps
call
js
and
cmpsb
jl
mov
add
outsl
inc
add
ss
out
push
pop
ret
cmp
iret
mov
int
jecxz
popa
test
pop
popa
out
inc
out
mov
add
lea
jb
outsb
dec
stos
ja
pusha
test
rcll
pop
cmp
es
jge
adc
push
dec
adc
stos
hlt
pop
mov
adc
iret
xchg
add
sub
cmp
test
and
mov
hlt
adc
aam
mov
push
push
insl
fucomip
or
sbb
push
iret
les
and
fnstenv
xor
xchg
fs
sbb
xlat
fidivrl
ret
xchg
and
fwait
insb
test
inc
mov
sti
dec
push
sub
cmp
jne
pop
cmpsb
and
gs
or
in
loopne
push
sbb
inc
cwtl
jno
hlt
adc
mov
stos
push
out
sbb
leave
sbbb
divb
add
or
rclb
or
std
iret
mov
out
mov
and
adc
setl
out
iret
shlb
dec
hlt
xor
pop
inc
cmp
jb
add
jbe
pop
notl
sbb
mov
sub
lods
popf
push
das
sarl
inc
mov
mov
stos
sub
or
mov
nop
lcall
mov
gs
pop
insl
jmp
stos
in
lods
sbb
mov
imul
cld
out
xor
cmp
lret
xlat
inc
in
add
pop
mov
pop
jg
adc
add
push
mov
cmp
jns
add
fdivrl
lock
rorl
out
lea
cmp
mov
jmp
inc
and
push
mov
pop
fidivrl
adc
pop
adc
in
lds
aam
es
popf
or
adc
mov
insb
movl
sbb
lea
sti
pushf
fldl
pop
inc
gs
test
lret
shrl
inc
scas
pop
mov
insb
stc
pop
cmpsl
movsb
ss
push
imul
cmp
pop
das
mov
sbb
pop
pop
sar
mov
and
cli
jno
push
jl
shlb
xchg
mov
cwtl
dec
jne
out
test
push
adc
in
negb
cld
roll
addl
mov
pop
das
xchg
int3
and
lods
sub
sbb
mov
pop
ds
cld
pusha
shr
mov
lcall
adc
sahf
bound
je
jno
into
inc
add
sbb
push
seto
outsb
mov
movl
xchg
add
push
pop
shlb
imul
cmp
gs
shll
adc
and
mov
xorb
jae
out
shrb
cli
aam
cmp
xchg
pmaxsw
ljmp
shll
scas
jle
inc
push
mov
in
outsl
lock
push
cwtl
sbb
rclb
adc
loopne
mov
inc
sub
movsl
sbb
rcrb
mov
pusha
lret
pop
testl
test
jecxz
jae
movsb
lcall
ss
sbb
ret
mov
nop
in
mov
jl
bound
jecxz
sbb
xor
and
mov
pushl
jl
cmp
mov
into
mov
jl
xor
dec
add
sahf
adc
call
jl
sbb
leave
ja
lahf
stos
inc
icebp
inc
pop
mov
jbe
sbb
lods
fidivs
aam
insb
shll
dec
ljmp
movb
mov
fistps
ret
fildl
inc
xor
sub
jo
push
insb
add
pusha
pop
aad
iret
mov
idiv
mov
ffreep
outsb
arpl
lock
push
dec
pop
std
dec
mov
test
jmp
mov
dec
sbbl
mov
push
call
xor
mov
loop
ds
xchg
ficoml
jecxz
shl
inc
ror
je
lock
or
cwtl
mov
mov
sahf
and
or
lcall
or
incl
aaa
pop
stos
add
fistpl
icebp
inc
iret
mov
insb
pop
out
icebp
fucomi
pop
or
cs
sub
in
les
cmp
addr16
stos
popf
inc
or
jmp
faddl
bndldx
in
mov
and
mov
sbb
jne
test
rclb
xchg
cmp
add
inc
aam
inc
into
cmp
or
rolb
add
repz
lcall
add
packuswb
outsb
xchg
pusha
pop
scas
sbbl
lahf
push
test
mov
orl
cmp
inc
push
push
scas
mov
sub
lods
aad
repnz
imul
dec
cmp
and
das
jle
xchg
out
aas
pop
xor
mov
loope
xchg
xchg
push
std
test
or
and
mov
mov
or
aas
and
out
dec
addr16
add
add
lea
out
mov
sub
jnp
xor
or
ret
stos
fisttps
mov
add
iret
pusha
sahf
outsl
imul
sbbb
test
jge
lods
scas
add
sub
mov
inc
imul
inc
cwtl
das
leave
jns
inc
stos
ret
adc
xchg
xlat
push
pop
jecxz
test
ret
je
adc
aas
dec
sti
pushf
push
test
adc
xor
test
cmpsl
test
jo
std
pop
test
or
xchg
mov
movsb
xchg
lea
jp
cmpsb
lret
out
fwait
push
repnz
mov
popa
sub
adc
mov
mov
ret
cld
jg
iret
pop
das
sbb
xor
mov
arpl
lods
sbb
push
xorl
mov
fisttpl
insl
and
movsb
int
cmp
enter
mov
xor
in
inc
shrl
sub
fcomi
xchg
fildl
std
adcb
dec
cmp
lea
and
cltd
jmp
sub
dec
cltd
mov
daa
sbb
fnstsw
addl
push
outsb
insl
fs
in
pop
pop
roll
jbe
test
jecxz
cmp
out
adc
mov
jmp
push
or
xor
insl
inc
enter
ja
sub
nop
hlt
cmovb
stos
pop
xor
shrl
outsb
jmp
stos
aas
mov
cmp
movsl
push
fldl
mov
stos
fs
add
fimuls
dec
daa
jo
ja
popa
xor
shlb
loopne
sbb
xor
pop
or
mov
and
in
mov
mov
fimuls
pop
sub
cwtl
sbb
inc
in
sbb
lock
ja
rclb
test
cmpsb
xchg
lahf
repz
and
cmpsb
push
rcll
fstpt
fistpll
sub
jae
ret
lret
ljmp
jne
pop
int3
xchg
leave
inc
scas
test
sub
sbb
fbstp
cmpsl
sub
rorl
repnz
push
push
dec
cltd
cmp
sub
iret
cs
jge
sub
push
push
fsubrs
cmp
fwait
std
cmp
sbb
in
adc
movsl
push
or
fnstsw
daa
jo
rcl
or
push
fldcw
pop
and
jl
jo
jno
dec
mov
xchg
in
int3
push
movups
dec
in
sub
jno
and
xchg
cmpsl
sub
pop
and
in
hlt
insb
lret
inc
jmp
loop
in
imul
cmpsl
xor
or
inc
and
pop
mov
push
inc
scas
or
and
lods
mov
xchg
mov
lret
push
pusha
pop
add
inc
mov
ja
or
enter
jbe
and
nop
test
add
xor
fdivr
bound
jle
sti
jns
out
repnz
jns
xchg
dec
mov
xchg
outsl
les
sbb
inc
aaa
sbb
pop
cmc
addl
cmpsl
mov
call
push
sub
lahf
jle
jmp
add
xor
mov
movl
jp
push
add
mov
push
scas
popa
insl
push
repz
sbb
adc
xchg
aas
movsb
sub
iret
test
cmpsl
repnz
std
mov
pop
imul
adc
sysenter
or
jl
add
test
js
sbb
rcrb
into
mov
mov
inc
ja
pop
in
inc
mov
sub
push
or
jno
hlt
add
push
jge
std
daa
js
pop
cmp
mov
mov
lea
dec
ret
repz
mov
jne
int
xchg
xor
xchg
test
add
hlt
hlt
mov
loope
jo
imul
gs
xor
fisubs
jl
clc
ljmp
add
dec
pop
sub
call
lock
adc
mov
xor
mov
push
popf
in
push
pop
jo
scas
cmpsb
lea
pop
cwtl
mov
cld
add
push
dec
scas
sbbl
xchg
vmaxss
cli
push
into
sub
addb
xchg
xor
inc
data16
leave
fcoml
leave
or
lea
push
mov
mov
clc
jns
dec
or
push
and
call
mov
imul
or
xchg
je
pop
pop
mov
dec
mov
jno
or
adc
bound
andl
adcl
jg
fwait
xchg
stc
cmp
cmc
cmp
clc
xor
mov
mov
in
pushf
lock
xor
inc
xchg
push
loope
pop
pop
dec
jo
inc
outsl
outsl
repnz
and
jl
sub
sub
xchg
aaa
popa
fdivl
test
int
inc
mov
test
das
incb
xchg
mov
cltd
lcall
clc
sub
sub
cmp
loopne
fldenv
mov
inc
popa
adc
lahf
dec
sbbl
mov
add
stos
dec
push
cmp
in
add
mov
and
fidivl
ret
mov
cmpsl
stos
and
out
xchg
sub
push
shlb
push
adc
test
sbb
or
arpl
cmpsl
add
test
pop
or
mov
sub
mov
shrl
cmp
pushf
insb
mov
xor
xchg
or
data16
or
sub
dec
xlat
in
das
loop
pop
inc
insl
lock
das
push
pop
xchg
in
sbb
push
and
lods
scas
stos
cmpsl
shr
sbb
push
jmp
push
daa
jecxz
hlt
mov
jp
mov
push
fadds
mov
xchg
mov
imulb
cs
scas
jle
mov
les
mov
outsl
lds
test
xor
cmpsl
cmp
xchg
scas
or
ret
jb
xlat
jo
sahf
ds
xchg
adc
and
sbb
pop
sbb
inc
daa
push
push
mov
dec
inc
sarb
cltd
xor
loop
pop
or
and
daa
or
cmp
cmp
xor
push
xchg
cmp
clc
jge
je
arpl
cmp
pop
pop
push
pop
mov
dec
loop
jns
repnz
stos
out
pop
inc
xor
notb
xor
outsl
outsl
dec
outsl
aad
add
and
ljmp
adc
je
lds
outsl
out
lock
clc
loop
push
mov
jbe
scas
pop
xor
enter
scas
sbb
and
and
nop
cmp
inc
jle
add
rcl
loope
push
or
jle
pop
sub
xchg
sbb
mov
xchg
popa
inc
sub
int
sub
cmp
mov
jmp
imul
rorl
mov
sub
leave
ret
fildl
insb
movsl
add
mov
add
sbb
pop
and
push
ljmp
mov
lods
fdiv
or
movb
in
sarb
loopne
or
aaa
add
in
add
sub
mov
mov
int
xorb
in
outsl
outsl
fistl
mov
inc
jne
mov
dec
popa
jno
movsb
and
lds
popf
or
inc
xchg
xlat
loope
idivl
mov
pop
bound
pop
es
sbb
movsl
imul
sbb
sub
rcrl
addl
scas
and
add
int3
sub
inc
pop
jbe
cmpsl
inc
mov
xor
inc
mov
loop
sbb
sub
outsl
bound
xchg
cmp
shrl
iret
sahf
js
test
int3
scas
out
fwait
int3
sbb
push
push
out
inc
mov
adc
popa
adc
mov
pop
outsb
lret
mov
mov
push
mov
fs
les
ljmp
inc
les
sbb
pop
or
stos
cli
lret
xor
test
std
out
mov
cmp
xchg
inc
jp
cld
daa
mov
dec
fsubr
push
mov
push
imul
xor
leave
lods
jle
push
and
fucomp
pushf
adc
fsubrs
xor
es
popa
and
sub
lods
sbb
push
push
pop
je,pn
mov
push
adc
enter
and
jg
push
fidivrs
enter
mov
imul
jmp
cmp
or
jns
jb
push
loop
idiv
pop
or
mov
sti
lret
mov
test
jno
rcl
outsb
xorb
call
pop
adc
mov
ret
xchg
or
loope
inc
cmp
adc
jle
shr
in
adc
cld
jns
mov
mov
pop
sub
mov
pop
jnp
adc
mov
cmpsb
push
and
sub
adc
ret
or
das
xchg
xchg
in
push
dec
out
dec
cld
pusha
fwait
mov
leave
push
jae
insb
pushf
in
subb
icebp
jae
lock
ljmp
mov
xor
fwait
aad
mov
imul
loope
iret
stc
xchg
sbb
outsl
xor
hlt
leave
pop
sbb
stos
fs
std
mov
jns
scas
mov
lock
cmpsl
pop
data16
dec
ret
inc
je
jmp
or
jnp
into
mov
mov
xorl
mov
sub
arpl
ja
repz
push
mov
insb
jnp
rcrl
jmp
into
out
int3
sub
ljmp
add
sub
jno
rolb
sub
jne
jp
mov
mov
mov
stc
call
mov
popa
cld
out
cmp
pop
dec
mov
add
push
dec
dec
pusha
and
lock
adc
push
sbb
aad
pop
mov
call
cmp
jnp
fstl
xlat
lock
test
sub
mov
aas
cmpsl
xor
push
sbb
movsb
lods
push
cld
fdivs
mov
or
imul
mov
dec
xchg
pop
push
xchg
js
pop
push
adc
push
xchg
int
add
push
or
popf
scas
aaa
cmp
dec
pop
sahf
ds
sbb
outsl
pop
sub
imul
popa
push
mov
mov
mov
out
jns
ds
adc
sarb
xor
insb
pop
xlat
call
or
sarb
int
mov
xor
cmp
leave
sub
inc
mov
imul
mov
mov
faddl
scas
inc
fstl
ja
or
out
std
cmc
mov
stos
mov
repnz
pop
mov
jbe
mov
pop
and
dec
fisubrs
jp
sti
clc
lcall
mov
mov
jo
cwtl
sub
flds
ret
dec
adcb
cmp
scas
test
pop
nop
in
repz
jmp
xorb
adc
or
icebp
out
repnz
fwait
xchg
subb
insl
inc
ss
imul
mov
mov
push
mov
pop
shll
and
pop
xchg
push
ss
mov
push
pushf
xchg
push
jmp
lea
in
inc
cltd
jo
cmp
push
jns
int3
sub
mov
scas
shrb
sbb
int3
pop
sub
cmp
sahf
xchg
arpl
mov
out
ja
xchg
insb
out
and
repz
push
outsl
stos
popa
mov
stos
sbb
inc
les
pop
adc
pusha
js
pop
sbb
into
add
add
cs
inc
dec
inc
pop
push
jo
fwait
xorl
lock
jno
addl
pop
inc
push
xchg
dec
dec
int
mov
mov
add
mov
jecxz
sub
jp
cmp
xchg
pusha
scas
dec
popf
aad
in
cmpsl
sub
mov
dec
push
pop
sub
sbbl
test
sub
cmp
jl
lods
and
inc
xchg
cltd
dec
out
decb
jne
xor
inc
dec
in
dec
jp
lret
fiaddl
ds
inc
xchg
mov
int
stos
jmp
icebp
push
xor
xor
inc
jp
mov
pop
popa
inc
push
bound
or
cs
mov
daa
adc
leave
sub
out
stos
fstl
pop
jae
sbb
pop
scas
xor
mov
cvttps2pi
cmp
popf
dec
fisttpl
dec
fwait
mov
push
push
out
xor
insb
popf
mov
scas
jmp
mov
xor
adcb
push
push
aad
sub
repnz
mov
mov
pop
xor
jmp
shll
ljmp
push
sbb
ret
hlt
ja
mov
or
mov
lcall
mov
aaa
cmp
jl
push
ss
scas
enter
cltd
das
mov
mov
sarb
mov
in
insw
xchg
jle
scas
inc
xchg
dec
je
mov
xchg
adc
packsswb
aad
push
push
popa
out
jno
hlt
adc
cmp
jg
sbb
mov
imul
sbbl
je
ret
les
dec
jmp
imul
mov
add
ljmp
in
fsts
xchg
pop
jmp
jge
mov
or
shrb
lcall
sbb
jle
mov
mov
sbb
sub
data16
ss
out
mov
mov
inc
mov
add
jns
or
repz
in
mov
bound
in
lds
and
pop
jecxz
aaa
sahf
pop
filds
cwtl
inc
inc
movsb
inc
jo
enter
xlat
sti
mov
jmp
jge
daa
lret
inc
or
fiadds
scas
push
cmp
ss
ret
insb
mov
iret
test
test
mov
testl
pop
mov
and
sti
inc
dec
jnp
cmp
ss
out
das
sub
int
push
int
lods
cmpsb
cmpsb
loopne
cltd
adc
push
shlb
sti
adc
cmp
negb
fpatan
mov
popa
pop
pop
cli
test
stc
cmp
fdivs
inc
in
ljmp
jmp
mov
adc
in
pushf
add
sbb
addl
sbb
imul
cwtl
mov
push
js
cmpsl
mov
incb
ljmp
jl
or
loope
sub
push
mov
mov
pop
cmp
cmp
cmpsl
sub
pop
stc
imul
lods
jnp
shlb
mov
notb
dec
leave
jl
sahf
cld
inc
jmp
mov
fsubr
jle
cmovns
scas
cs
dec
pop
in
jg
enter
es
xor
cmp
icebp
add
xor
or
lret
jae
mov
adc
jp
dec
xchg
jo
dec
pop
inc
push
xor
add
cmp
inc
je
movsb
stos
sti
push
xchg
mov
into
outsb
xchg
cmpb
movsb
test
and
xchg
gs
mov
mov
dec
loope
jecxz
imul
mov
cmp
popa
aaa
pop
cmp
xor
xchg
dec
call
adc
push
sahf
shl
pop
adcb
inc
aaa
pop
pop
or
jg
push
scas
push
pushf
in
cmc
test
dec
test
add
test
test
push
xchg
or
push
or
cmp
pop
mov
bound
mov
and
sub
iret
cmp
sbb
jle
push
sub
fcompl
scas
dec
cmp
jnp
push
scas
cs
rcrl
pop
out
sub
push
cld
jmp
sbb
and
mov
pushl
nop
pop
sbb
xchg
jge
outsb
jnp
mov
mov
movl
jmp
mov
mov
xor
and
xor
mov
pop
jae
sahf
xchg
ret
sub
fcoms
aaa
shll
push
push
push
fdivrl
cmpsb
xchg
xorl
xchg
adc
push
cmp
mov
mov
clc
repnz
rcrl
jb
xor
outsb
sub
xchg
push
int
mov
pop
lret
xor
lods
outsl
push
ljmp
cmp
jg
and
and
out
jg
outsb
pushf
and
push
cs
int3
lret
popf
fwait
test
repz
jmp
mov
cmp
push
and
test
shll
pop
xchg
sub
pop
sub
jp
enter
adc
hlt
jnp
cmp
inc
xchg
mov
arpl
mov
rolb
test
add
sub
loopne
je
xor
xchg
pop
sub
push
push
sub
dec
push
aaa
adc
clc
fists
lahf
pop
aam
test
fnstsw
add
aam
jge
xor
rolb
add
aaa
jg
out
andb
dec
ja
and
xor
push
aad
inc
sbb
mov
mov
imul
and
mov
mov
imul
or
bound
leave
jl
divl
bound
ret
std
mulb
or
aam
repnz
add
jae
fstpt
daa
cmp
mov
mov
mov
fnstcw
add
xchg
outsl
cmpsb
rcrb
dec
imul
cmp
adc
cmp
adc
sub
test
pop
pushf
mov
sbb
fstp
jae
cmp
and
mov
shr
scas
aam
stos
cmc
test
scas
or
sbb
sub
mov
mov
call
out
into
or
cmp
rcrl
stos
pop
adc
inc
shl
ljmp
adc
bound
fidivs
leave
dec
push
lods
pop
pop
dec
and
ffree
mov
adc
xchg
shl
push
inc
leave
cmp
push
movsl
jp
and
xor
cltd
push
inc
repz
or
in
cmpsb
add
push
xchg
dec
les
pop
andb
push
movsb
mov
sbb
mov
mov
inc
aam
pop
iret
outsb
adc
arpl
incl
mov
add
mov
cmp
push
repz
xor
push
je
fcoml
sub
mov
jo
gs
inc
dec
push
aam
cmc
dec
pop
lret
je
fidivs
cmp
mov
adc
and
xor
roll
xchg
push
icebp
and
mov
pop
inc
or
inc
inc
in
pop
sbb
xchg
adc
mov
or
mov
fiadds
mov
mov
sub
jo
ret
les
mov
mov
add
adc
fcomps
add
sub
movsb
arpl
je
stos
push
ret
pop
add
enter
insb
addr16
lret
adc
lahf
jg
sbb
popa
loope
in
bound
or
sub
pop
cli
jle
in
jle
cmp
cs
jne
int
sub
mov
mov
into
push
dec
mov
or
inc
xor
adc
jne
sub
mov
les
loope
jl
jecxz
xchg
push
xor
dec
cmp
es
aad
lds
push
or
xchg
cmp
pop
xchg
or
mov
push
aaa
cmpsb
push
push
mov
push
popf
adc
popf
cmpsb
inc
mov
dec
add
or
mov
cmpsl
push
dec
push
and
shr
fimuls
loopne
mov
jecxz
jl
inc
or
xchg
sbb
xorl
add
scas
and
mov
aas
inc
xor
test
mov
pop
pop
es
je
lea
adc
fcoms
add
test
call
xor
or
inc
add
xchg
push
mov
push
les
dec
push
xor
out
je
cmp
arpl
push
lds
fstps
test
shlb
jmp
lcall
sub
push
or
jbe
sti
loope
outsl
sbb
pop
xorl
sbb
lret
addl
add
sub
movsl
adc
pop
sub
mov
pusha
hlt
addb
dec
mov
dec
inc
push
push
and
fsubl
sbb
xor
int3
jle
push
das
sub
xchg
ror
cmc
pop
mov
in
xchg
inc
pop
mov
dec
or
add
adc
fwait
rcll
movsb
cmp
daa
pop
test
scas
sub
iret
ja
dec
les
mov
xchg
jbe
jne
mov
lods
mov
roll
and
mov
push
push
les
int
ret
dec
pop
sarl
push
pop
xor
or
daa
cmpsl
mov
je
cwtl
dec
cli
fs
jmp
mov
xor
iret
jne
add
mov
lahf
xchg
aas
sar
cmp
xchg
sub
ss
dec
sub
ficompl
jle
add
addr16
mov
pop
inc
mov
jmp
ret
mov
lcall
cmp
xchg
es
push
push
sbb
test
jmp
mov
adc
mov
push
or
and
and
mov
lods
sti
lods
decb
sbbb
or
dec
out
sub
stc
js
mov
das
cmp
or
jb
aas
sub
daa
mov
pop
sahf
add
mov
add
cmp
adcl
test
inc
pushf
add
call
mov
adc
inc
inc
stos
fsts
cmp
dec
adc
inc
lcall
push
push
push
dec
sti
cli
lock
rcr
clc
mov
into
imul
loope
call
mov
adc
cmpsl
xchg
cmp
inc
js
push
pop
lock
push
cmpsl
jmp
scas
cmp
jns
scas
add
add
mov
dec
jno
insb
pop
stc
lret
idivb
setge
xchg
mov
outsl
fdivs
std
ja
and
mov
push
and
lea
xor
push
cmpsl
sbb
pop
shl
test
lock
dec
cmp
stc
inc
fstl
pop
scas
or
fucom
cltd
add
test
les
xor
adcb
xchg
in
inc
inc
lods
xor
cmp
cs
aas
jne
pop
and
rcrl
mov
add
cltd
arpl
repnz
and
pop
divl
xor
insl
jle
icebp
mov
xchg
push
xor
jecxz
into
outsl
or
cld
or
sub
dec
lods
sub
pop
fldcw
dec
lods
arpl
and
fnsave
dec
les
inc
int3
dec
call
mov
jno
cmpsl
jecxz
outsl
scas
and
push
addr16
mov
cmp
out
in
mov
mov
mov
jns
fldenv
pop
neg
clc
lods
xor
into
mov
add
or
push
pop
shlb
mov
xor
sub
test
das
mov
add
and
mov
inc
mov
inc
js
xor
xlat
jmp
xchg
pop
addr16
mov
sub
js
fstp
xchg
jecxz
cmpsb
icebp
mov
xor
sub
lea
mov
and
ss
cltd
dec
pop
or
dec
test
jmp
sti
mov
shll
add
jl
divw
aam
pop
inc
xor
test
xchg
aad
movsl
fnstsw
lret
ret
jl
xchg
mov
adc
mov
inc
leave
and
cwtl
push
sbb
lods
fadds
jnp
gs
repnz
cld
mov
and
fisubs
add
cmc
xlat
out
enter
dec
loope
push
jne
mov
imul
push
pxor
iret
mov
adc
mov
ret
cld
mov
mov
xchg
pop
out
mov
pusha
repz
add
jle
lret
jp
test
lods
xor
enter
arpl
dec
sub
and
push
adc
in
mov
pop
mov
lock
fadd
adc
enter
pop
mov
int
mov
rorl
mov
adc
inc
add
pop
imul
or
stos
sub
je
pop
dec
inc
jg
dec
aaa
dec
cmc
popa
cmc
sahf
push
inc
xorb
adc
idivb
mov
dec
jbe
fstps
mov
stc
mov
push
test
cmp
xor
test
aaa
psrld
push
jnp
jecxz
cmpsb
fcomps
ret
jo
adc
dec
iret
std
adc
sub
pop
xchg
fldcw
cmp
loope
mov
or
icebp
sahf
or
pop
and
in
add
imul
cli
inc
cmpsl
xchg
fndisi(8087
cmpl
mov
ret
jne
movsb
aaa
mov
jl
adc
lods
add
push
cmpsl
pop
into
add
push
ds
xchg
nop
incb
fadds
ret
mov
test
call
cmp
push
jmp
test
sti
js
mov
cmpl
push
or
test
ljmp
pop
data16
dec
cli
movsb
cmp
jne
xlat
sbb
push
addr16
mov
js
jp
pop
aaa
cmpsl
push
cmp
jg
push
stos
pushf
movsb
stc
pop
fsubl
cli
nop
scas
xor
sbb
add
and
jl
divb
nop
insl
imul
or
pop
cmp
and
loope
sub
jno
mov
mov
mov
in
xor
iret
adc
mov
adc
insb
jns
jb
xor
sub
fwait
and
xchg
cmp
push
pop
leave
andb
pop
xor
jecxz
inc
imul
icebp
dec
cld
gs
push
dec
dec
sub
dec
fnstsw
push
xor
aad
ds
push
fnstcw
mov
and
xor
xor
test
pop
pop
popl
repnz
dec
ds
push
cmpsb
mov
and
inc
and
rolb
pop
outsb
call
decb
insb
sahf
dec
push
sub
addr16
adc
orl
rcll
dec
rep
out
or
mov
and
ds
push
push
xchg
inc
add
or
mov
lahf
sbb
mov
mov
and
fistpl
out
hlt
dec
cmc
mov
cmp
adc
dec
adc
lahf
xor
mov
mov
addr16
test
ret
jmp
aad
std
push
sbb
sub
mov
lcall
icebp
add
xor
adc
enter
xor
mov
mov
add
ret
jnp
stos
sbb
inc
iret
and
test
mov
inc
push
sti
outsl
jmp
movsb
int3
aam
loop
lds
fisttpl
inc
xchg
fidivs
mov
test
inc
jge
dec
xor
or
dec
xchg
popa
popf
push
cwtl
ss
mov
push
pop
jmp
sbb
mov
xchg
push
push
lret
sahf
jns
ss
mov
pop
and
pop
mov
mov
jne
jb
mov
or
call
push
dec
xchg
clc
dec
fisttps
sub
adc
xchg
xchg
pop
pop
push
call
hlt
sbb
add
lds
mov
inc
fmuls
pop
mov
mov
pusha
inc
and
push
inc
and
jl
das
pop
mov
jg
add
push
lret
push
addl
iret
out
sub
mov
rolb
notb
sub
pop
mov
in
sbb
leave
inc
and
lret
enter
out
pop
or
cld
fidivs
pop
cmp
insb
lock
sarl
fdiv
push
or
mov
dec
popa
or
cwtl
mov
add
test
inc
push
jbe
in
std
sbb
adc
fdivrs
and
sub
mov
mov
test
mov
daa
xchg
xchg
out
sub
ljmp
mov
push
shll
int
push
mov
cmpsb
ljmp
daa
hlt
std
cmp
aas
or
cmp
xor
movsb
in
mov
xchg
pcmpeqw
shll
lds
and
lods
pop
je
rcr
inc
lods
sub
mov
cmp
js
fsubrs
ficomps
sbb
pop
and
sbb
xchg
inc
bound
mov
adc
dec
mov
jmp
mov
test
or
lahf
push
vpcmpgtw
sub
jbe,pt
int3
xchg
test
adc
jo
mov
repnz
aad
sti
jp
mov
shll
fadd
and
pop
jne
stos
std
pop
sbb
sti
lcall
jle
jp
das
std
cmp
push
frstor
mov
jno
jl
insl
jle
mov
xor
mov
mov
cli
dec
mov
repz
and
iret
dec
dec
mov
movsb
pusha
sbb
sbb
push
mov
subl
jmp
cltd
fwait
xchg
sub
rcl
aad
fildl
lret
nop
nop
fstpt
shrl
ss
in
dec
pop
js
or
add
dec
push
pop
test
sbb
out
or
mov
mov
lock
and
sub
hlt
add
daa
xchg
pop
cmp
aam
xor
dec
popf
sub
movsl
loopne
xor
fnstenv
or
jbe
hlt
jge
mov
jle
xor
inc
pusha
cmp
or
lahf
bound
mov
jns
push
sbb
test
inc
es
fninit
xorb
jecxz
fadds
fisttpl
mov
cmp
repnz
sbb
xchg
jg
in
inc
inc
sti
fnstsw
repz
adc
call
adc
out
ss
scas
push
mov
adc
and
aam
jle
jle
imul
mov
pmaxsw
mov
cmc
adc
dec
outsl
insb
pop
pop
xchg
pop
dec
les
loope
fstps
mov
imul
jnp
rcrl
mov
mov
and
mov
pop
inc
movsb
out
inc
ja
sbb
mov
push
das
lret
mov
cwtd
mov
or
imull
test
mov
ret
sub
cmp
adc
cmpsb
stos
stc
xlat
aas
add
mov
insb
in
push
xchg
std
add
mov
fistl
movsl
cmp
sbb
lret
dec
xchg
data16
les
push
movsl
push
je
enter
lahf
cld
inc
es
hlt
cld
xchg
sub
outsl
iret
leave
popf
fistl
jbe
push
dec
adc
push
jl
test
scas
adc
pop
cmpsb
pop
add
push
cmpsl
adc
stos
pop
push
fnop
add
in
mov
shrb
ljmp
inc
push
cld
pop
insl
push
mov
in
loop
dec
inc
pusha
inc
in
mov
mov
pop
and
xor
push
mov
movsl
outsb
sbb
push
fcmovu
xchg
cmc
push
push
or
std
inc
das
or
sahf
sbb
sbb
pushf
sub
adc
xchg
pop
enter
dec
xchg
lret
inc
jg
inc
or
cmp
outsb
test
popa
pop
leave
fwait
jge
std
scas
adc
lcall
repnz
insb
push
push
mov
push
sub
and
fistps
ja
cmp
xchg
mov
xchg
mov
hlt
mov
cmp
into
jle
pop
or
js
ficoml
and
fwait
pop
adc
adc
cmpsl
xlat
and
jg
std
es
add
ljmp
incl
jno
pop
inc
cli
lcall
jge
and
jnp
mov
repz
popa
jbe
ret
outsl
and
xchg
stos
sti
inc
xor
sub
push
fcomi
pop
jmp
xor
sbb
or
and
out
imul
enter
adc
push
push
dec
and
icebp
pusha
jo
mov
mov
sbb
scas
xor
nop
xchg
inc
jp
fbld
mov
push
xor
mov
loopne,pn
and
mov
ror
xor
dec
out
cmp
lods
xchg
sub
mov
fstp
or
jp
repnz
shlb
add
mov
gs
cmpsb
repnz
inc
sti
push
mov
adc
add
pop
ja
jp
in
xor
and
cmp
sub
mov
imul
and
rcrl
and
xor
enter
push
jo
nop
jmp
or
ret
jo
test
cmp
mov
data16
into
pop
mov
sbb
fucomp
popa
xchg
inc
sbb
mov
xchg
out
sub
jo
enter
mov
cwtl
pop
in
or
jne
pusha
ljmp
data16
add
and
xchg
push
xchg
cmpsl
ds
and
fsubs
insb
lcall
rolb
inc
ret
lcall
or
sub
aas
in
pop
pop
in
loopne
repnz
cmp
jne
sbb
in
stos
push
cld
mov
imul
adc
mov
add
movsb
xchg
daa
out
ret
lods
fnstsw
lods
cmp
lahf
in
push
or
dec
ljmp
je
sbb
lret
mov
and
and
fsts
inc
mov
add
mov
les
push
aad
lea
call
lret
xchg
leave
shlb
cmpsl
add
and
jle
rorb
insb
repnz
lret
cmpsl
push
lret
push
rclb
jmp
aad
push
in
jp
add
or
add
xchg
mov
push
inc
pushf
mov
lcall
and
test
mov
mov
or
inc
pop
int
xchg
jb
lahf
pushf
lret
out
fsubp
xor
popf
mov
dec
dec
daa
mov
mov
sbb
daa
cmp
mov
adc
push
cmc
pop
sub
mov
aas
mov
mov
push
pop
jmp
sbb
mov
jle
cmp
jg
jle
inc
or
in
dec
and
xchg
jno
inc
imulb
dec
int
iret
fiadds
pop
jno
std
out
hlt
adc
sub
and
xor
push
lret
in
mov
insb
sbb
jo
test
lods
fstpt
outsb
cmp
popa
pop
mov
out
loope
fistps
int
and
xchg
shl
aad
sub
mov
cs
rolb
mov
xor
pop
mul
les
fisubs
test
jo
xchg
xor
rol
sbb
mov
jp
sub
mov
imul
test
and
inc
lret
pop
push
dec
xor
pop
jns
cmpsb
mov
or
in
sub
adc
leave
fcom
fucomi
js
dec
inc
arpl
jmp
ret
loope
or
mov
mov
iret
inc
mov
jp
sub
pop
mov
pushf
mov
icebp
pop
sbb
sbb
stc
mov
por
mov
les
mov
je
fsubrl
addr16
dec
pop
mov
dec
push
push
xchg
ja
andl
addl
push
fisubrs
aas
mov
imul
lahf
xchg
ds
test
gs
mov
cmpl
fucomi
push
inc
jo
xchg
mov
jo
inc
xor
push
pop
sbb
push
inc
jo
mov
daa
das
hlt
mov
push
mov
push
testl
jl
cmpsb
hlt
sub
adc
je
sub
pop
in
fwait
mov
xor
call
ret
nop
push
imul
mov
rcr
jmp
in
movsb
sub
jns
aas
cmp
mov
rclb
fdivrs
insb
cmp
sub
adc
mov
loope
add
push
push
rcr
test
mov
jle
test
and
jne
repz
push
outsl
scas
inc
repnz
sbb
in
cmp
loope
data16
push
pop
pop
push
adc
hlt
pop
ret
fiaddl
nop
mov
rcll
jmp
shrl
push
push
add
outsl
punpckhwd
jbe
stos
dec
iret
clc
jae
ret
ret
pop
in
js
sub
cli
sub
sti
push
ljmp
jg
sub
mov
inc
push
sub
sbb
lods
mov
mov
test
std
pop
inc
and
cmp
ss
lock
fisttpll
pop
adc
xor
lods
std
dec
enter
push
in
popf
les
sub
cmpsl
jno
setne
jb
es
xor
pop
xor
adc
test
pusha
lcall
retw
cmp
sahf
ja
push
xchg
shrb
jnp
stos
stos
push
jne
arpl
xor
cmc
cmp
leave
or
mov
test
adc
test
cmc
sldt
jo
shlb
sub
ljmp
and
push
std
mov
ret
sub
sub
in
rol
test
xor
ret
cltd
inc
sbb
sbb
iret
push
mov
jae
adc
mov
dec
std
test
and
dec
xchg
inc
jbe
jp
mov
nop
mov
push
mov
daa
jo
scas
shll
scas
movsl
fucom
lods
cwtl
push
ret
int3
lahf
cmpsl
ja
pop
insl
cli
loop
loop
xchg
addr16
or
call
rolb
in
xchg
adc
aad
aad
dec
jp
jle
ljmp
ret
or
aas
mov
adc
xchg
push
and
ja
mov
aam
addb
sub
lock
je
mov
sbbb
dec
push
das
adc
lret
jo
dec
push
lret
inc
mov
test
scas
scas
scas
aaa
mov
sbb
mov
or
mov
out
std
lods
dec
arpl
push
push
xchg
xchg
mov
pop
pop
mov
jb
mov
leave
aaa
ds
aaa
out
push
cld
call
mov
dec
out
js
into
imul
or
popa
mov
stc
pop
into
xor
jl
pop
imul
mov
mov
xor
jnp
jae
jecxz
or
ds
lea
pop
cwtl
pop
add
aad
outsl
in
mov
mov
xchg
pop
mov
adc
and
adc
stos
lea
sti
lcall
xor
mov
test
sbb
popf
andb
dec
sbb
adc
push
inc
lods
mov
rorl
sub
mov
ja
dec
sti
arpl
dec
xchg
adc
cld
pushf
test
hlt
adc
pop
hlt
sahf
ret
outsl
popf
sub
int
push
movl
fcmovne
fcom
lds
sub
and
lds
ljmp
fistpl
notb
cmpsl
daa
es
les
add
lahf
or
mov
jle
mov
add
test
push
mov
aad
jns
dec
hlt
sbb
aad
arpl
insb
inc
pop
add
jnp
xor
aas
push
jle
jg
aad
les
mov
sbb
bound
xorl
movsl
popf
enter
fwait
jb
add
jmp
push
mov
mov
mov
add
cmpb
mov
pop
jbe
or
bound
push
push
stos
cli
insl
jp
insb
testb
ret
inc
or
sbb
test
jns
fisubs
sub
xor
sub
jp
mov
xchg
xchg
in
mov
jae
inc
lea
sub
imul
pop
ret
and
xchg
or
andb
jge
test
sahf
clc
sbb
shlb
out
lcall
jge
fnstcw
mov
push
lds
push
sbbl
jo
lret
mov
inc
jmp
mov
mov
lods
rorl
out
sahf
xor
popf
mov
imul
sub
hlt
or
sub
mov
in
jb
in
dec
les
lret
mov
mov
add
nop
out
aad
int3
rorb
movsl
popa
es
push
and
lret
inc
pop
in
lcall
test
jns
mov
jae
daa
into
idivl
test
cmp
sub
fists
insl
or
xchg
mov
ss
jmp
insl
cmp
mov
adc
dec
inc
mov
mov
loope
cmp
jmp
in
lods
add
aad
cwtl
lods
test
filds
inc
or
mov
sub
push
sbb
out
shll
inc
shrl
sub
inc
mov
xchg
xchg
push
cmp
sti
inc
xor
mov
pop
lods
shll
subl
xor
ljmp
inc
xchg
repz
xchg
mov
mov
adc
stos
sbb
xor
shll
fcompl
subb
add
bound
cmc
in
movsl
mov
mov
divb
insb
jecxz
stos
or
push
repnz
lods
shr
mov
cli
jnp
mov
dec
dec
rorl
mov
add
and
mov
inc
xchg
jno
xchg
inc
jo
pop
dec
pop
add
clc
xchg
in
xchg
add
dec
cmp
xchg
jne
jge
mov
icebp
xlat
stos
shll
int3
cmp
mov
lods
cmp
pop
push
test
cmc
jns
test
test
mov
mov
push
out
cvtps2pd
sub
movsl
jb
aad
ret
pop
lds
dec
pop
lcall
test
arpl
insl
sub
gs
adc
dec
js
sub
lds
clc
and
stos
fnstsw
nop
es
xor
dec
mov
pop
out
in
jo
or
push
gs
repnz
xor
gs
push
loopne
push
push
pushf
cltd
inc
add
scas
imul
test
in
pusha
cld
fnsave
xchg
popa
cmpsb
pop
and
stos
leave
sub
sbb
out
roll
mov
mov
xor
pusha
fwait
push
or
add
jl
rcl
adc
mov
ss
adcl
jle
jne
subl
test
xchg
enter
cli
shlb
decb
loopne
mov
mov
dec
jmp
or
in
pop
pop
lea
faddl
sbb
jecxz
cmc
shlb
xor
mov
inc
imul
addr16
mov
jo
mov
jb
lahf
dec
cli
ds
rclb
xor
fdivrs
add
add
ljmp
test
xor
add
loop
loop
dec
mov
test
lret
sub
aas
cli
jb
enter
adc
push
xchg
jbe
pushf
mov
push
sti
dec
xor
stos
push
fwait
dec
fdivl
lock
xchg
movsb
sarl
subl
loopne
loopne
hlt
ss
popf
in
repnz
or
ror
movsb
repz
mov
je
mov
jae
cmp
add
xlat
leave
jns
std
mov
xor
xlat
jl
loop
mov
js,pn
mov
ljmp
sub
ret
in
add
shr
push
into
and
dec
push
out
ret
cltd
mov
cmp
sbb
dec
outsl
js
jnp
mov
adc
sbbb
mov
loop
in
mov
lret
jbe
mov
repz
mov
sti
pushf
sbb
or
mov
or
js
pop
leave
and
inc
jno
jnp
pop
mov
iret
adc
lods
es
ret
xor
sti
jecxz
and
fdivrs
test
sbb
mov
test
add
repz
aam
gs
in
loopne
outsl
movsl
fldcw
imul
jne
push
cmp
mov
add
and
sbb
lret
imul
jmp
enter
mov
jg
inc
inc
cli
pop
or
fbld
add
cwtl
lahf
dec
xor
dec
xor
leave
jo
inc
mov
sbb
sarb
mov
mov
sbb
fnstsw
xchg
scas
std
add
aam
dec
sbb
fiadds
xor
xor
dec
ds
test
jg
xchg
cmp
cmp
dec
xchg
jge
inc
jl
dec
outsb
sbb
ret
or
cmpsl
xchg
xchg
and
xlat
cmp
repz
jmp
arpl
sbb
adc
xor
dec
cmp
mov
in
pop
ret
mov
cltd
push
repz
cwtl
xor
hlt
test
sbb
filds
jb
ljmp
shl
mov
nop
xchg
out
out
jp
cmpsl
repnz
xor
add
movsb
xorb
rcll
pop
mov
cli
out
jns
js
out
icebp
pushf
mov
sarb
push
int3
cmp
sarb
push
adc
ret
enter
gs
mov
xchg
and
jp
out
mov
lods
dec
hlt
fldenv
pop
into
jbe
sbb
sbb
orb
mov
int
gs
mov
orb
fdivrl
in
and
out
repz
sbb
int3
sub
jecxz
pop
aas
lods
std
mov
xlat
div
sub
sub
sub
pop
loope
sbb
or
pop
xchg
inc
inc
sbb
mov
mov
pop
notrack
nop
gs
xlat
addr16
inc
add
pop
mov
pop
xchg
fisubrs
jle
push
ss
iret
xchg
clc
push
sti
add
pop
or
or
ret
sbb
test
mov
jp
mov
mov
sbb
in
inc
dec
testb
loope
mov
jbe
push
add
movsb
add
push
movsl
pushf
adc
jo
inc
mov
arpl
loope
es
ds
lods
mov
jl
mov
mov
or
outsb
jmp
ja
inc
test
cmp
movsl
frndint
out
enter
outsb
pop
pop
mov
jo
cmc
lret
hlt
outsl
dec
xlat
push
inc
andb
mov
fstpt
fldl
outsb
jae
xor
popa
je
mov
or
and
popw
push
iret
inc
mov
inc
ret
jg
xlat
dec
and
pop
adc
daa
aam
ret
shlb
pop
sbb
enter
dec
stos
dec
es
inc
cld
jmp
divb
sahf
paddw
push
movsl
pop
push
jmp
xchg
jnp
xor
inc
dec
loop
inc
ret
xlat
mov
xor
add
pop
xor
jp
leave
mov
cli
loop
push
decb
mov
js
mov
rcrl
mov
pop
pop
lahf
dec
sbb
pop
sti
sbb
jecxz
mov
sub
or
aam
and
mov
xchg
mov
sbb
push
sub
cmp
cmp
shr
mov
int3
cmc
loopne
fwait
cmp
inc
inc
mov
fldt
rclb
adc
lods
inc
and
out
stos
pop
stos
test
inc
test
stos
jge
inc
call
cli
lock
loopne
test
and
xlat
mov
inc
push
fsubrp
sti
cld
jle
dec
outsb
lcall
into
xor
loope
xor
orb
inc
adc
mov
jge
fidivs
xchg
out
jecxz
stos
movsl
je
shlb
or
or
push
rcrb
fs
dec
sbb
jg
adc
gs
jo
pop
sbb
pop
aaa
out
xorb
insb
xchg
add
jle
fists
or
sub
pusha
push
jbe
sub
ljmp
shlb
dec
jae
test
arpl
in
ret
or
arpl
test
fmull
xchg
loop
fisttpll
pop
adc
je
jbe
lahf
scas
sub
jge
pusha
popf
aam
movsl
xchg
push
mov
loope
hlt
lret
mov
mov
add
vunpckhps
outsb
lret
aaa
cli
cmp
mov
fstpl
fneni(8087
outsl
lcall
add
mov
sub
int
mov
jne
ret
inc
and
sub
dec
rcr
sbb
cmpb
cmpb
adc
mov
rclb
push
mov
push
mov
adc
jg
test
cmc
das
popf
jns
pushf
xchg
xchg
xor
push
addl
mov
sbb
test
js,pn
in
jecxz
and
scas
lock
cmp
arpl
outsl
mov
jno
add
fdivrl
scas
inc
dec
push
dec
jge
or
cld
xchg
repnz
push
xchg
mov
pop
inc
out
and
sub
ret
inc
rcrb
add
int
xor
push
sahf
add
stos
sbb
mov
jbe
fistl
fldenv
ficomps
xor
mov
dec
push
decl
hlt
cld
iret
push
test
push
or
dec
not
fnstsw
push
in
dec
icebp
mov
ss
in
xor
inc
int3
rcr
lret
add
jbe
out
test
add
bound
sbb
and
mov
mov
xor
pop
fwait
xorl
dec
lds
dec
pop
popf
xchg
xchg
jo
sub
insl
aaa
mov
xor
add
movsl
outsb
pop
out
loopne
pusha
outsb
andb
inc
mov
jo
clc
iret
lret
adc
je
pop
ss
fdivl
pop
movsb
xchg
and
xor
and
xchg
andb
jae
cmp
jecxz
sub
aad
stos
inc
lds
xor
inc
sahf
outsb
in
out
rcl
int3
hlt
scas
jns
pusha
cmp
pop
dec
cmpsl
out
iret
mov
dec
pop
jb
fcmovnbe
lock
adc
inc
jp
imul
add
and
lds
xor
adc
push
ja
das
push
adc
and
nop
and
sub
xor
gs
xchg
call
pop
in
gs
leave
nop
pop
cmp
xor
dec
sub
cmpsb
aad
pop
out
jnp
dec
add
jmp
mov
movsb
pop
xor
sarb
ret
dec
jb
fistl
or
jmp
insl
mov
pop
xchg
testb
test
ljmp
xchg
pushf
xchg
or
idivl
les
add
popa
ljmp
push
dec
sti
xchg
enter
xchg
std
mov
ret
sbb
sub
hlt
jnp
fcoml
adc
add
mov
jge
out
lret
je
cltd
sub
add
sub
mov
or
cmp
lcall
aam
push
jg
das
das
jge
mov
add
dec
pop
hlt
xor
aaa
xor
ja
adc
xor
jge
lret
or
pop
inc
neg
roll
sbb
xchg
imul
sbb
add
cmp
rep
cmpsl
aad
mov
lahf
push
inc
push
insb
xchg
push
lcall
insl
dec
ljmp
loopne
add
sti
cwtl
cmp
inc
add
cmpsb
push
shr
pushf
sub
sbb
fld
xor
fildll
xchg
iret
insb
inc
cld
jg
cmpsb
mulb
push
push
rcr
dec
daa
push
pop
subb
cmp
push
jnp
xchg
rcpps
rorl
mov
xchg
icebp
or
push
ret
sti
cwtl
hlt
sbb
pop
push
xchg
cs
imul
dec
cs
pop
inc
ds
jp
daa
and
and
or
dec
jbe
jmp
int
and
fsubl
clc
push
ss
pusha
mov
repnz
aaa
mov
mov
dec
jno
xlat
in
ret
adc
fidivrs
jmp
lds
aam
push
mov
pop
cmpsb
sub
cmp
xchg
mov
pop
dec
jo
inc
xlat
cmp
sub
sbb
sub
lcall
jge
sbb
mov
in
mov
xorl
jbe
add
test
and
sbb
pop
test
sbb
push
xchg
push
jge
fstpt
addr16
out
sahf
mov
js
lahf
or
in
jg
xor
and
cmp
aas
faddl
push
xor
in
jae
sub
nop
mov
divb
cld
popf
inc
rclb
adc
jo
pop
loopne
out
aaa
mov
sub
dec
fisubs
xchg
add
stos
dec
les
jmp
ds
dec
lods
pop
fs
sub
jno
push
mov
outsb
push
ret
mov
aam
int3
push
aaa
and
scas
xchg
je
repnz
inc
stos
rorb
iret
es
pop
mov
nop
and
ljmp
loopne
mov
cmpsl
cmp
scas
popa
jmp
loope
xor
addr16
cmpsl
mov
outsb
mov
iret
cmpb
dec
push
xchg
mov
mov
push
mov
pop
cwtl
cltd
dec
push
fldenv
push
aas
or
lcall
daa
adc
or
insb
mov
pushf
adc
dec
icebp
xchg
xchg
and
ror
xchg
xchg
mov
daa
sbb
push
pop
lea
xchg
popf
aaa
mov
jp
pusha
daa
and
pop
cmpsb
aad
sbb
imul
cmp
int
rolb
ret
dec
je
push
outsl
ret
nop
fstpt
mov
and
int
pop
jp
lahf
add
add
mov
sti
int
js
mov
pop
sarb
lods
push
jne
test
rcrb
cmp
xchg
outsl
xchg
xor
push
lock
cmp
dec
jb
jle
add
xchg
orl
sbb
repnz
push
adcl
fisubrs
cltd
xchg
enter
stos
pop
adc
fiaddl
int
out
sbb
xor
mov
adc
adcl
aad
call
and
movsl
xchg
lcall
int3
in
and
add
test
xchg
jns
je
rcll
jbe
add
stc
sub
jp
addr16
mov
xor
mov
jmp
mov
xor
jb
xlat
es
inc
cmp
sbb
xchg
lea
repz
xchg
lea
popf
mull
and
dec
shl
fs
cmc
push
cld
mov
push
loop
sub
and
sub
scas
icebp
xlat
insl
aad
jo
xchg
icebp
pop
push
xchg
jno
js
xor
inc
popf
aam
or
rcr
mov
imul
fisubrs
jae
inc
push
sti
rol
cmp
adc
pop
rcll
sbb
xchg
iret
xchg
and
xor
jg
push
inc
pop
fwait
sub
scas
dec
shlb
hlt
cwtl
aaa
test
dec
mov
sahf
cld
cmp
or
loop
fsubl
pop
in
add
mov
int3
jecxz
add
into
stos
inc
es
xor
test
adc
sbb
movsb
daa
pop
notb
or
rolb
sbb
dec
add
push
dec
clc
dec
mov
fmull
cmp
pop
lcall
incb
fcomps
xchg
xlat
dec
sbb
call
clc
xor
mov
sbb
or
popf
fwait
repz
push
push
lret
aas
rolb
cmp
fadd
in
cs
mov
outsl
mulb
adc
mov
outsb
cmp
ja
pop
sub
xlat
lock
jbe
bound
stc
and
or
out
inc
jge
mov
imul
xor
sbb
mov
mov
adc
sti
scas
mov
jp
mov
movsb
jne
mov
xchg
mov
add
sub
mov
lods
psllq
lret
xchg
test
fsubrl
in
mov
out
dec
sahf
sub
mov
and
fisttps
out
pop
outsb
cltd
push
movb
pushf
test
xlat
mov
in
movsb
or
hlt
pop
movsb
clc
inc
pusha
lea
lret
pusha
mov
dec
mov
call
sti
cmp
mov
jg
pop
mov
sbb
or
or
push
in
addb
inc
push
jbe
icebp
jmp
add
push
pop
and
sbb
mov
xchg
pop
sbb
cmpsl
and
std
xchg
nop
fisttpl
test
mov
sbb
mov
jne
clc
mov
lret
add
aas
xor
adc
dec
scas
cmp
aas
aam
in
mov
es
call
xor
loopne
cltd
xchg
out
mov
sbb
out
inc
mov
push
xchg
out
ja
call
sbb
in
ret
rolb
jle
xor
pop
jno
repz
push
xchg
push
jne
test
or
hlt
jge
shlb
xchg
xchg
pop
pusha
mov
sarl
ja
pop
incl
pop
cltd
scas
mov
mov
insl
movsb
sbb
icebp
push
repz
and
pop
in
push
cmc
jecxz
dec
xchg
lods
call
cmp
add
fadds
xchg
lahf
xchg
mov
push
nop
lock
xchg
push
add
pop
push
icebp
xor
pop
xlat
xchg
lret
adc
stc
sub
mov
mov
lods
push
iret
xor
aam
ss
sub
nop
mov
adc
fnstsw
call
cmp
movsl
push
popf
arpl
xchg
push
or
sbb
mov
jae
adc
mov
push
mov
sar
fstps
adc
fists
jns
daa
sahf
xor
xchg
push
mov
or
out
inc
xchg
mov
int
dec
push
sub
testb
pop
fdivr
xchg
mov
mov
add
sbb
and
inc
and
sub
cli
loop
sbb
sub
cmp
outsb
mov
test
sub
or
lahf
cmp
jne
xor
xchg
idivb
fsubrl
arpl
ss
pop
push
jns
scas
and
mov
in
fistps
sti
and
xor
dec
push
sub
test
repz
pop
hlt
jae
add
outsb
ljmp
mov
sahf
jne
adc
or
mov
ss
or
adcb
mov
pop
xchg
or
pop
dec
leave
dec
popf
mov
lret
dec
cmp
add
xor
jne
or
sbb
fcompl
push
inc
rorb
shlb
push
rcrb
jnp
mov
adc
flds
mov
jge
leave
iret
insb
cmp
push
inc
repz
adc
lods
stos
xor
cli
sub
scas
dec
lret
xor
test
xor
aam
jp
push
jg
lods
std
es
push
lock
mov
cwtl
mov
repnz
add
or
pop
push
adc
or
or
popa
jno
repz
sahf
cmpsb
and
daa
lock
cmp
stc
mov
dec
jle
pop
sub
je
test
pop
fsubr
in
push
hlt
aaa
popf
or
in
inc
pop
sub
mov
lahf
cs
sub
xchg
pop
jno
sbb
movsb
mov
push
fsts
dec
mov
push
sub
jp
sbb
cmp
and
addb
aas
dec
mov
fnstenv
sbb
sarb
cs
dec
mov
mov
push
jecxz
or
aaa
lcall
xchg
mov
mov
out
fwait
nop
xchg
mov
inc
mov
shll
mov
int3
sbb
push
mov
mov
gs
sub
stos
popa
adc
or
or
stos
gs
idiv
pusha
shlb
test
lahf
sti
jle
jp
mov
ds
add
dec
sbb
inc
mov
jg
test
adc
mov
inc
xlat
cmc
fsub
mov
jbe
mov
jp
pop
outsb
mov
stos
sbb
xchg
movsl
xchg
mov
inc
rclb
divb
xchg
adc
imul
sub
stos
ret
xchg
clc
xchg
stc
xlat
fcomp
pop
nop
sar
push
lcall
shlb
dec
xlat
out
jae
mov
leave
inc
cmpsb
mov
cltd
into
xorl
mov
and
rolb
mov
inc
mov
mov
mov
cli
js
es
mov
cmp
popf
jmp
sbb
cmp
cmp
aam
mov
push
fsubrs
pop
out
or
push
aam
sti
int
and
push
or
xchg
dec
mov
das
jmp
dec
add
cli
in
push
push
inc
add
mov
cmpsl
pop
rorl
mov
das
cwtl
ret
jg
jo
push
inc
data16
dec
mov
xchg
xchg
xor
into
out
adc
jp
dec
pop
push
cmpsl
xor
shrb
cmc
jns
addb
lock
lcall
imul
in
rcrb
mov
lret
push
fdivrl
es
xchg
addr16
jnp
int
add
addl
push
loop
and
mov
or
popa
fistps
mov
scas
mov
pop
adc
mov
enter
enter
mov
mov
call
out
jne
stos
inc
add
addr16
daa
jo
inc
lea
pushf
jg
aaa
pusha
ficoml
cmp
in
int
jl
test
iret
mov
or
test
fwait
dec
xchg
out
mov
dec
cld
pop
xchg
pop
mov
call
es
mov
adc
adcb
jg
daa
mov
mov
mov
dec
std
bound
addr16
push
inc
fadd
insb
lds
mov
xchg
fiaddl
cmpsl
lock
fcom
cmpb
sar
stc
lret
cld
xor
or
jns
push
call
or
out
push
mov
mov
xor
push
daa
sbb
xchg
mov
incb
push
xchg
fdivrl
mov
outsb
jg
pop
cld
mov
mul
mov
mov
adc
les
inc
inc
cmp
ja
mov
jb
dec
pop
std
xor
xchg
push
std
sub
or
cmpsl
mov
xchg
mov
xchg
push
nop
popa
iret
enter
into
xor
dec
sarl
bts
lds
fcmovnbe
pop
sub
lret
jb
mov
xchg
push
sub
mov
ror
icebp
popa
inc
lock
ret
inc
popf
add
cmp
and
lock
mov
cmpsl
sub
movsl
push
push
jp
sbb
jp
inc
vprotw
jmp
sub
inc
rcr
enter
or
imul
les
dec
jp
out
out
ficoml
add
cmp
pop
jno
into
inc
dec
xor
or
inc
and
jl
adc
push
mov
mov
fsubrs
cmp
repz
sbb
inc
mov
test
popf
mov
jmp
inc
mov
scas
sahf
inc
mov
cmpsl
inc
imul
loope
gs
fists
insl
lods
and
in
and
popf
sub
icebp
sub
adc
sub
adc
sbb
mov
std
scas
imul
cs
mulb
or
cwtl
sbb
xorl
xor
nop
dec
push
or
cs
lea
imul
ds
or
rcll
insb
sub
cmp
dec
bound
popf
mov
pushf
cmp
or
pop
push
xor
mov
insb
or
stos
push
and
pop
xchg
mov
lods
jae
push
xlat
mov
xchg
shrb
jne
sbb
out
test
inc
sbbl
jle
add
dec
or
and
inc
jnp
test
jb
mov
push
mov
shrl
or
cmp
xlat
out
std
adc
fwait
stc
push
out
jns
push
inc
lret
fnstsw
sbb
and
loopne
cmp
das
mov
imul
leave
lret
stos
or
addr16
mov
push
mov
add
ds
mov
and
inc
cmpsl
sub
fnstcw
out
sub
insb
push
and
lock
stc
fsubl
jg
pushf
insb
outsb
jb
push
enter
je
mov
cltd
ficomps
mov
push
scas
mov
jecxz
pop
jno
sbb
jae,pn
sub
jecxz
cmp
adc
mov
push
pop
push
cmp
cmp
jno
fs
popf
popf
sbb
or
lahf
imul
je
sysret
add
cltd
jmp
lcall
fildll
into
xchg
inc
out
mov
mov
pop
cmp
or
inc
shl
mov
ficoms
lock
fucomi
mov
roll
ret
jl
jp
rorl
pushf
mov
std
or
ret
fdivrp
jmp
inc
bound
idivl
pop
fwait
jg
push
add
idivl
sbb
popf
xor
jl
and
jecxz
cli
mov
js
sub
sbb
mov
xchg
sbb
js
dec
enter
data16
adc
sbb
ficomps
test
and
in
xchg
xor
int3
jnp
call
in
mov
push
leave
loopne
movsb
adc
scas
sbb
jl
mov
sbb
aaa
sub
jge
int3
popa
jnp
xor
ss
xchg
push
mov
orb
add
mov
scas
adc
je
nop
lret
pop
pop
jg
pusha
test
test
push
and
xorb
and
and
or
mov
push
inc
push
pop
pushf
mov
dec
mov
mull
and
mov
adc
js
loope
push
sub
inc
sbb
cltd
cld
add
sbb
test
rorb
nop
inc
mov
cmp
lret
jl
data16
dec
jle
xchg
dec
stos
hlt
jnp
mov
push
xchg
jbe
and
ret
in
movsb
in
xor
jne
shrl
fstps
in
sub
add
cmp
pusha
push
mov
nop
movsl
fwait
les
pop
jle
stos
loopne
outsb
or
testb
xchg
cs
xchg
xchg
mov
rolb
cmp
and
fistpl
xchg
jnp
sbb
push
shll
and
xor
dec
add
adc
pop
in
mov
pop
and
bound
pop
in
stos
xor
mov
push
or
andb
jno
xchg
xor
add
mov
loopne
leave
ret
push
push
jle
cmp
pop
bound
stos
out
mov
mov
ret
inc
add
push
mov
jnp
in
mov
sarl
xor
mov
or
insl
push
test
inc
or
sti
mov
xchg
cmpsl
add
cmpsl
and
imul
sub
mov
mov
les
sub
es
out
repnz
into
xor
arpl
push
mov
cmc
stc
inc
ja
adc
jae
arpl
lods
cmp
aad
ret
imull
movsb
xorl
mov
pop
push
aas
scas
inc
rcrl
sub
or
mov
xchg
cmp
dec
jb
ret
dec
test
xor
insl
mov
sub
xor
xchg
imul
bound
mov
pop
inc
and
adc
lods
orl
add
out
leave
dec
pop
mov
xor
xchg
mulb
jp
out
add
jg
push
push
pushf
xor
pop
fisttpll
loope
out
mov
adc
cmpl
pusha
and
scas
inc
ljmp
sets
fisubl
ret
pop
addl
mov
mov
xchg
adc
jb
lods
fmuls
pop
jbe
and
add
out
ljmp
xorl
stos
dec
andl
sbb
lds
cmovno
clc
das
fwait
psrld
stos
into
push
sub
pop
dec
or
in
inc
mov
mov
repz
sub
lods
jecxz
clc
loopne
adc
dec
aas
jle
push
pushf
fstl
test
adc
ffreep
xchg
orl
cmpsl
iret
ret
sahf
sbb
shlb
cld
xor
outsb
mov
push
fidivl
dec
xor
cs
mov
dec
pop
pop
sub
test
je
int3
push
sub
ljmp
xlat
pop
in
jns
jns
push
js
xchg
aaa
adc
les
xor
adc
xchg
pop
adc
popf
in
outsl
pop
mov
scas
inc
ljmp
mov
dec
xchg
mov
lea
push
mov
test
cmp
mov
dec
jb
lcall
lods
enter
mov
xor
movb
lods
cmc
stos
in
pop
in
mov
push
cltd
cltd
ret
int3
inc
jb
stos
adc
call
sbb
verr
mov
pop
lret
dec
jns
loop
and
in
jmp
xchg
add
mov
push
fcoms
iret
sahf
xor
xchg
popf
add
lret
gs
fsubrp
sub
sub
mov
outsb
ja
mov
xor
mov
cli
jnp
mov
inc
jl
push
test
leave
aad
shl
inc
lock
dec
mov
adc
lret
jno
das
lret
loopne
xchg
pop
pushf
out
lret
hlt
scas
roll
arpl
daa
shll
insl
clc
push
jno
mov
xor
sti
dec
shlb
icebp
push
fisubs
std
mov
fists
scas
sbb
movsl
stos
push
add
testb
int
movsb
xchg
shlb
pop
jbe
sarl
movsl
dec
fisubl
add
lds
sbb
mov
jbe
lret
dec
or
shrl
in
pop
mov
daa
pop
jg
adc
inc
leave
testl
ja
in
xchg
inc
pop
dec
or
dec
xchg
mov
in
mov
adc
movsl
push
fsubl
hlt
stos
sbb
fmuls
push
adc
repz
pop
sarl
clc
mov
xchg
push
gs
data16
out
sub
es
in
xor
test
push
adc
add
out
mov
icebp
mov
mov
shlb
in
inc
out
cmp
dec
outsl
test
ret
call
lock
mov
push
rcrl
test
add
mov
pop
adc
xor
movsl
shl
rclb
stos
adc
sub
pushf
sti
ljmp
in
fbstp
test
out
stos
cld
clc
daa
or
adc
je
jo
cmc
popa
fwait
xchg
lea
stos
nop
movsb
jns
jno
sub
fs
dec
stos
sub
push
ss
and
add
std
and
jnp
out
dec
and
loope
push
insb
add
cmpsb
dec
dec
pop
adc
adc
cmp
jl
ret
cmp
repnz
outsb
std
jp
in
adc
xor
xchg
adc
int
decb
or
dec
pop
pusha
lret
lds
negb
xlat
xor
int3
dec
lock
mov
ret
loope
imul
xlat
push
sub
pop
aas
push
clc
push
mov
mov
ds
mov
in
pop
ffree
jnp
lods
xor
lds
ret
xor
imul
jl
dec
jp
adc
lock
fimull
dec
mov
pushf
rorl
hlt
push
fadd
mov
sbb
dec
int
jo
and
insb
sahf
push
dec
mov
xor
cmp
lock
push
imul
jle
arpl
mov
insl
dec
dec
dec
jbe
ss
jecxz
cmp
andb
jnp
sti
mov
cmp
hlt
jecxz
mov
inc
sub
leave
pop
mov
roll
xor
stos
push
cmovg
movsl
mov
fstpl
daa
sub
sub
sti
out
push
add
xor
in
arpl
adc
adc
mov
pop
ljmp
and
lcall
xchg
push
push
std
mov
dec
pop
jmp
mov
cmp
cltd
pop
sar
mov
movsl
decb
ret
shrl
fdivrl
aas
adc
or
sbb
jae
insl
xchg
cmc
mov
aad
pop
cld
mov
mov
hlt
idiv
sub
cli
inc
dec
or
mov
clc
or
sub
in
rcrb
test
xor
and
mov
adc
sub
daa
mov
push
test
dec
xor
gs
mov
xchg
jmp
out
sub
fsubl
je
imul
out
inc
rorl
jae
mov
adc
int3
cwtl
inc
jmp
sub
imul
test
lods
stos
cs
pop
xor
pop
sbb
outsl
jo
iret
mov
ds
mov
push
dec
cld
cli
sbbl
and
pop
jne
xor
jno
popf
insl
dec
rorb
and
inc
in
xor
je
arpl
insl
jp
add
mov
lock
xchg
add
jbe
sbb
xchg
adc
icebp
aam
jbe
cmp
popf
repz
stos
fbstp
movsl
sub
loopne
cmp
popa
lds
enter
in
insb
pop
sbb
ficoms
or
add
push
enter
hlt
xor
xchg
shrl
add
sub
repnz
add
push
shll
inc
and
xchg
lock
push
outsb
xor
fisubl
in
ja
scas
cmp
aad
add
test
jl
jb
movsb
pop
addr16
mov
mov
cmpsl
xchg
xor
aam
and
add
loope
and
lret
inc
pushf
mov
loop
mov
mov
mov
and
repz
fldenv
sub
ds
rorl
jb
scas
jmp
xchg
pop
jle
stos
aas
push
jb
pop
push
cli
push
fnsetpm(287
fdivrl
mov
stos
addl
cmc
cmpsl
mov
mov
or
ja
xchg
dec
pop
adc
and
inc
fwait
push
gs
dec
lods
dec
pushf
mov
push
lahf
fldcw
ljmp
popf
addl
aaa
filds
mov
mov
jnp
mov
fadds
cmp
pop
pop
and
dec
lea
mov
lret
cmpsb
mov
jmp
cwtl
das
sub
cmc
xorb
adc
daa
mov
imul
sub
call
sub
rolb
pop
sbb
jnp
sbb
inc
es
jb
pop
sbbb
popa
loopne
cmp
mov
aas
call
pop
xchg
jle
cwtl
mov
in
mov
jo
pop
adc
ja
in
sar
dec
or
mov
test
lds
movsl
push
sahf
xchg
mov
adc
jnp
jle
cmp
mov
add
lret
stos
and
add
addl
movsl
mov
push
aad
roll
mov
imul
lret
ljmp
fdivrp
jns
imul
das
scas
and
push
repz
pop
cmp
push
insl
sbb
das
cmpsl
inc
xchg
fdivl
sbb
xchg
loope
repz
test
das
arpl
popf
adc
not
js
dec
js
inc
out
xchg
shr
les
dec
fcoms
lahf
push
aas
rcll
std
ljmp
dec
mov
dec
arpl
mov
repnz
stos
cltd
movsl
call
xchg
imul
inc
xchg
or
sub
xchg
loopne
fists
dec
fidivs
sbb
inc
movsl
cmp
data16
scas
pop
sub
sbb
sub
xor
push
jg
stos
stc
and
jno
js
pop
xchg
inc
sahf
out
cmc
xchg
gs
pop
movsl
cs
adc
or
mov
mov
push
cmp
sbb
mov
jb
mov
insl
push
sub
dec
aas
lahf
mov
sbb
clc
mov
mov
cli
int3
ret
insl
test
sub
sarb
jmp
inc
push
mov
push
dec
repz
mov
add
cmpsb
cmpsb
push
rcr
pop
shr
fidivs
sbb
cmp
cmpsl
inc
dec
rcrl
sbb
outsb
jl
movsb
dec
out
ja
or
or
pop
add
popf
ret
imul
xchg
jle
mov
dec
cmp
ret
adc
cli
incb
xchg
jmp
mov
mov
mov
pop
fidivl
add
dec
push
and
and
sti
xchg
movsl
xchg
les
xorb
adc
lret
popf
add
jle
fidivrs
push
adc
ret
mov
push
idivl
add
and
xchg
jbe
pop
arpl
ds
adc
push
fadd
add
dec
pop
cmc
cld
jl
daa
xchg
pop
mov
loop
push
pushf
movsb
popa
aam
or
sbb
or
mov
mov
mov
xchg
stos
pop
push
ja
stc
or
daa
out
les
jbe
or
sub
mov
inc
mov
push
or
and
sub
jae
jbe
cmp
test
mov
mov
jmp
je
loop
mov
xor
add
lahf
popl
mov
jg
ds
xor
aaa
negl
cmpsl
push
out
and
negl
popf
pop
jo
movsb
loop
ja
lret
inc
in
xchg
loope
mov
outsb
outsb
faddl
cld
shrw
inc
jg
dec
and
mov
inc
inc
xchg
mov
fmull
test
js
dec
loop
mov
and
arpl
popa
jb
outsb
les
lock
lcall
adc
addr16
fmull
sbb
test
inc
insb
enter
bound
dec
ret
aas
icebp
and
addr16
push
mov
xor
lret
enter
sub
sbb
insb
shlb
sbb
inc
adc
jmp
jmp
fistpl
out
inc
out
enter
leave
daa
push
inc
clc
mov
ficompl
jl
push
scas
or
orb
sar
pop
scas
push
int
div
mov
ja
or
aaa
outsb
hlt
leave
test
das
mov
lock
fnstenv
outsl
mov
xrelease
sub
insb
dec
cltd
lcall
movb
test
xchg
loope
mov
sbb
ficoms
push
out
inc
or
bound
movsb
imul
movsl
scas
leave
test
fisubl
xlat
mov
stc
sub
sub
imul
ficompl
loop
mov
mov
int3
inc
xor
mov
dec
mov
cmp
out
and
dec
inc
in
pop
outsl
sahf
xchg
addl
adc
mov
fisttps
mov
test
gs
mov
cmp
ret
mov
pushl
or
pcmpgtw
inc
clc
leave
sbb
lods
jl
aas
cltd
dec
adc
jmp
in
gs
call
dec
jbe
leave
and
cs
lods
push
dec
imul
dec
mov
or
cmp
mov
inc
daa
int3
test
in
xor
cmp
popa
jnp
jmp
xchg
mov
std
dec
push
dec
dec
ja
mov
pmullw
xchg
fcmove
xlat
bound
push
dec
outsl
lret
sub
lods
dec
xchg
shrl
roll
jl
cmp
out
xor
pminsw
cmpsl
pusha
mov
xchg
sub
dec
cmpsl
or
and
daa
sub
or
mov
jo
mov
mov
out
lret
test
popa
dec
adc
sub
scas
stos
cs
ds
sub
imul
sub
int
mov
xchg
lret
pushf
pop
push
mov
daa
sub
inc
or
fmull
lock
mov
and
jl
fmuls
inc
xchg
xchg
adc
loopne
aad
subb
int
xchg
in
mov
clc
daa
adc
jbe
mov
aas
pushf
sub
and
and
xchg
cmp
adc
leave
mov
mov
outsb
jle
cmp
fcmovb
ret
adc
sbb
adc
inc
icebp
repnz
test
jp
sbb
mov
imul
div
or
fldl
fsubs
dec
xchg
mov
dec
xor
rcrl
movsb
xor
fsubs
adc
xchg
pop
shr
fisubrl
or
cwtl
lahf
push
pop
imul
xor
loopne
aaa
ret
movsl
lcall
push
ss
fmuls
mov
cltd
lds
cmp
jnp
ret
xor
mov
fbld
mov
dec
ss
leave
adc
pop
sbb
pop
pop
push
lods
jecxz
sbb
rcr
pop
jg
push
xchg
fisttpll
mov
inc
rorl
push
addl
int
fdivr
loop
movsl
lahf
out
nop
and
ja
xchg
xor
fwait
push
inc
sub
dec
mov
outsb
cmp
and
push
add
filds
jnp
pop
and
mov
sbb
pop
xchg
inc
fbld
aaa
in
mov
ja
imul
push
jo
mov
cwtl
pop
xchg
sbb
dec
call
mov
inc
popa
out
or
or
jne
inc
dec
add
lock
stc
sub
jp
ljmpw
out
sbb
xor
sub
dec
lods
xchg
mov
add
call
clc
add
int3
sbb
mov
add
mov
in
stc
add
data16
xchg
jmp
les
sbb
outsl
mov
fisttps
ja
pop
fmull
dec
sub
pop
pop
and
and
mov
and
aas
inc
inc
orb
fisubrl
jb
std
mov
cs
mov
scas
bound
or
and
mov
aad
push
ja
stos
dec
sub
xchg
ret
jb
or
dec
mov
pop
mov
ret
pusha
icebp
jp
and
jnp
fwait
dec
frstor
inc
stos
outsl
int3
out
pop
in
sub
rclb
out
pop
xor
pop
jne
jl
pop
add
lea
pop
pop
fstpt
xor
movl
xchg
mov
push
je
call
cs
push
and
mov
scas
sub
jne
inc
dec
les
xchg
pop
inc
add
sbb
movsl
xchg
loopne
xchg
sub
lret
mov
loopne
outsl
mov
mov
mov
xchg
mov
push
andb
xor
mov
imul
mov
int
mov
push
cmp
xor
stc
or
jne
jo
jbe
lea
jle
adc
xchg
mov
mov
rcrl
xor
daa
js
dec
pusha
idivl
ds
mov
or
cmp
jle
ret
cmp
or
jl
loop
mov
push
das
pusha
es
cmp
enter
sbb
add
push
test
and
aam
lahf
ja
jle
xchg
pop
jmp
popf
xchg
jmp
mov
pop
mov
jmp
sub
les
sbbl
dec
mov
enter
lret
js
mov
dec
mov
sub
sub
fnsave
fnsetpm(287
ljmp
mov
mov
movsb
mov
add
sar
dec
call
xlat
sbb
xchg
pop
in
outsb
add
mov
icebp
xlat
in
dec
push
jno
push
test
int
inc
xchg
sbb
add
sub
push
fiaddl
jo
jnp
int
mov
std
mov
cli
push
mov
mov
lahf
imul
iret
ss
cli
mov
jno
pop
leave
jecxz
pop
cmp
jne
adc
ljmp
lret
cmp
add
pop
dec
lret
movsb
push
insl
imul
push
jg
pop
xor
lahf
inc
ds
pusha
leave
and
sbb
aaa
adc
es
nop
mov
movsl
add
js
and
push
mov
imul
loope
or
test
flds
lret
pop
push
fs
movsl
hlt
movsl
adc
inc
xor
lods
pop
adc
sbb
imul
jbe
pushl
es
and
xor
movsb
xchg
das
popf
pop
lods
mov
mov
jge
and
jecxz
push
mov
mov
mov
jbe
fxch
adc
fdiv
jecxz
jl
inc
dec
sbb
stc
clc
pop
inc
loopne
mov
xchg
xchg
pop
js
js
ljmp
xchg
sub
fistpll
sbb
or
lods
mov
dec
mov
shll
je
xchg
sbb
xchg
push
push
test
sahf
sbb
imul
sahf
push
pop
mov
jmp
fldcw
cmp
fidivs
aad
aam
jecxz
or
xchg
jecxz
clc
inc
dec
out
inc
xchg
cltd
sub
sub
fadds
test
lea
dec
gs
fstps
push
sbb
push
idivl
in
dec
and
cmp
loope
scas
pop
sbb
lcall
std
ljmp
and
xor
sub
sbb
lock
mov
sbb
ret
imul
mov
push
stos
stos
mov
inc
dec
inc
mov
cmp
push
adc
cli
pop
cmp
pop
inc
push
inc
lahf
mov
and
or
mov
sbb
popa
fs
stc
fwait
sub
enter
or
out
fstpt
outsl
out
fs
mov
and
jle
pop
jecxz
movsl
mulb
jp
call
outsl
or
pushf
repz
fcmovnu
lds
ss
mov
mov
cmp
and
cmc
xor
pop
in
jg
xchg
inc
dec
and
sbb
mov
es
xchg
popw
mov
pop
cmp
inc
decl
in
sub
xlat
or
xor
cmp
mov
lret
push
mov
pcmpeqd
ret
jo
dec
sub
jl
scas
sub
dec
ja
mov
and
lret
inc
pop
popa
xchg
rolb
pop
in
test
dec
lret
test
pop
addr16
or
pop
das
xor
mov
mov
lahf
outsl
mov
mov
daa
jne
pop
cltd
icebp
dec
cltd
or
test
dec
pop
sub
jb
mov
jae
xchg
jg
dec
ljmp
insl
mov
fcomps
sbb
imul
jmp
jnp
lahf
xor
cmc
jle
adc
cmp
jp
aad
add
bound
andb
lock
mov
cmpsb
imul
mov
movsl
dec
in
dec
gs
mov
scas
call
sub
xchg
push
arpl
insl
hlt
repnz
mov
pop
and
test
stc
repz
mov
cmp
xchg
push
dec
cmp
push
stc
test
jl
dec
sbb
jg
xor
ja
icebp
pop
or
sbb
lahf
mov
into
or
in
jmp
mov
xchg
fstpt
sub
sarb
aam
aas
mov
sub
xchg
lret
inc
sbb
aam
pushf
inc
and
cltd
push
mov
rolb
andl
xor
ja
stc
into
adc
cmp
sub
dec
lret
pop
lock
call
stos
pop
jg
fmull
ret
scas
popa
enter
rclb
jns
fisubrs
das
aas
cmp
int3
mov
sahf
xor
das
mov
jg
add
mov
xor
imul
xchg
mov
pop
sbb
clc
mov
iret
ljmp
in
shll
adc
cmpl
jmp
xor
pop
lock
scas
repz
adc
add
cltd
loop
jne
jb
jmp
or
pushf
push
mov
push
and
fcmovnb
push
push
lret
cmp
mov
test
into
sub
out
aad
jle
mov
sbb
adc
mov
inc
cmp
fisubl
adc
sbb
outsl
repz
cmp
mov
andb
xlat
jle
xchg
frstor
add
cmpsb
jae
jle
sub
rolb
inc
mov
sbb
aad
mov
arpl
cmp
jo
push
xor
mov
add
mov
push
fidivrs
fdivrl
sbb
pop
add
and
cmp
std
jp
popf
jne
mov
pop
push
aaa
sbb
push
or
dec
repz
imul
cmp
sti
aas
shr
mov
lods
lods
jmp
cmp
pop
sbb
mov
push
push
jne
les
add
pop
out
gs
mov
lahf
clc
xor
cli
inc
mov
aaa
xchg
arpl
push
adc
add
js
xor
in
orb
loop
hlt
adc
mov
ret
xchg
leave
hlt
mov
pop
jg
xchg
jb
mov
push
les
pop
scas
inc
pusha
repnz
lahf
fadds
add
push
cmp
add
loopne
pop
or
imul
and
outsb
mov
push
aaa
outsl
dec
push
cmpb
pop
out
jns
cltd
sbb
jecxz
fs
add
inc
fnstsw
int
jbe
or
pop
shrl
rep
lds
xor
fwait
jb
std
lods
or
aad
dec
out
dec
stc
or
sbb
sub
mov
pop
push
adc
ret
fmul
rclb
mov
mov
xchg
pop
mov
aad
add
mov
adc
xor
push
adc
ja
cltd
ds
lods
fs
sub
jno
pop
xchg
pop
adc
fldl
push
adc
ds
mov
inc
push
xor
mov
mov
jmp
cs
mov
jl
fst
ljmp
ljmp
jmp
into
jae
pusha
lcall
shrb
in
daa
imul
add
xorl
into
pop
mov
adc
in
testb
pop
push
ljmp
rorb
mov
adcl
mov
sahf
xor
pop
and
inc
mov
dec
jge
or
sbb
cmp
std
xchg
adc
dec
pop
pop
or
inc
xchg
sarl
stos
jl
enter
push
stc
xor
fcomps
icebp
test
pop
mov
mov
sbb
pop
jbe
iret
insl
rclb
jb
ret
jle
aam
aas
pusha
pop
call
test
test
add
fwait
addb
add
dec
cmc
lods
or
or
in
mov
inc
in
aas
dec
dec
inc
mov
call
mov
movsb
mov
jl
fdiv
daa
jge
outsl
ss
xor
inc
add
dec
jg
js
push
xor
aam
and
aaa
sbb
sbb
pop
xor
sub
mov
scas
sar
xor
pop
cld
shll
mov
dec
xor
js
xor
loop
mov
mov
sub
cmpsl
jnp
and
fimuls
rcrb
xlat
xchg
lods
mov
jno
cmpsb
xor
or
shlb
adc
adc
imul
movsl
imulb
data16
xchg
mov
mov
bound
mov
push
add
or
mov
add
pop
pop
adc
push
imul
fimuls
negl
xor
rclb
les
and
movsb
xchg
test
pop
mov
mov
popf
scas
xor
inc
lds
push
adcb
inc
insl
xlat
jno
lcall
je
sahf
xor
rorb
dec
adc
xchg
jge
mov
mov
push
push
jp
pop
add
cld
daa
jl
mov
outsb
fistl
clc
and
sti
sub
testl
xchg
mov
jecxz
les
xchg
inc
arpl
movsl
add
push
jg
and
lods
lcall
adc
or
jns
pop
inc
into
scas
hlt
xor
xor
mov
pop
sub
insl
pop
cmp
inc
mov
push
fcmovbe
out
rcrb
jmp
push
pop
mov
int
dec
loope
je
adc
mov
stos
add
insb
test
pop
mov
lds
inc
ljmp
or
sahf
dec
leave
jl
jg
mov
fs
roll
mov
clc
jl
mov
push
xor
divl
sbb
iret
faddp
lods
lods
pop
jnp
mov
adc
inc
push
ret
lock
mov
mov
out
popa
cmpb
jns
cmp
pop
inc
jmp
ret
loop
cmp
lods
lods
pop
and
arpl
jle
pop
push
mov
ljmp
movsb
lret
icebp
in
mov
sub
and
pop
dec
fimuls
xchg
xchg
mov
test
xchg
sbb
sbb
lret
shrl
repz
inc
or
mov
pusha
repnz
out
fdivl
inc
fcmove
outsb
movsl
xchg
imul
int3
idivl
das
and
inc
cltd
pop
sub
jo
jbe
cmp
ds
add
insb
bound
inc
or
hlt
or
dec
test
imul
ja
dec
pop
cmp
test
imul
xchg
adc
pop
cmp
dec
pavgw
or
outsb
and
test
orb
push
pop
mov
mov
and
cmc
out
lcall
out
test
roll
pop
mov
pop
cmp
or
mov
adc
std
pop
inc
pop
lret
xor
jb
push
add
loopne
xor
pop
outsl
insb
inc
stc
dec
out
ds
div
xor
in
loope
and
add
mov
inc
adc
ret
dec
mov
pop
xchg
push
push
xchg
sub
dec
push
cmp
out
lods
sbb
push
stos
sahf
or
ds
cs
jl
in
shrb
sbb
xor
pop
adc
dec
pop
sahf
mov
mov
add
outsb
jbe
fs
sub
fsubl
pop
pop
repnz
add
sbb
dec
cmpsb
and
fldenv
lcall
cmp
je
loope
push
lods
negb
push
add
mov
add
orb
fists
leave
cli
ss
mov
xchg
inc
mov
mov
sahf
jle
ds
inc
mov
xlat
repz
lea
popf
lea
nop
jp
push
mov
in
cmp
mov
fistpll
sbb
mov
sub
jecxz
xor
sbb
in
inc
fndisi(8087
loopne
daa
nop
push
lods
ja
push
aad
bound
jp
in
test
js
es
push
xchg
inc
sbb
imul
push
mov
cmp
xlat
pusha
repnz
sbb
push
pop
test
jp
inc
repz
mov
insl
add
icebp
inc
mov
dec
cmpsl
pop
sub
ljmp
test
sahf
in
scas
or
mov
jo
xlat
cli
mov
lea
dec
and
mov
xor
fnstenv
xchg
aas
dec
ret
pop
jp
cs
pop
pushf
orl
add
pop
test
mov
dec
xchg
sub
cmp
scas
sbb
cmpsb
pop
add
and
adc
lods
mov
cmp
add
int3
cmp
icebp
mov
push
push
sub
dec
aam
fs
ficoml
push
jbe
inc
xor
lahf
ds
das
out
fisttps
fwait
aad
mov
cmp
icebp
jge
pop
mov
mov
push
addr16
mov
inc
imul
div
mov
fcompl
mov
inc
lds
inc
sti
cmp
int
mov
or
or
xchg
insl
mov
pop
adc
mov
nop
push
lret
jecxz
int3
push
sub
pushf
pop
jge
dec
mov
pop
xor
jmp
push
out
jbe
in
int3
xor
loopne
insb
jb
aad
or
sti
gs
mov
jns
dec
sub
xchg
sti
sub
cmovl
mov
hlt
clc
sub
sbb
push
imulb
lock
push
xchg
inc
lock
xlat
xchg
out
jno
push
jno
inc
dec
fstpt
sbbl
ss
fisttpl
in
mov
ss
mov
pop
xor
mov
ret
inc
mov
and
insb
fwait
or
lret
sbb
andb
jmp
cmp
cwtl
and
inc
cmp
mov
mov
outsb
jmp
push
xor
mov
test
push
dec
mov
push
ss
rcll
jne
es
cmpsb
xor
popf
loopne
xchg
loopne
or
lods
and
rorl
jns
lock
das
pop
mov
into
xlat
fsubrs
mov
mov
fs
add
inc
add
adc
or
mov
inc
aas
pop
ss
loope
pop
cmp
mov
inc
jle
sbb
mov
sbb
sbb
pop
lcall
jae
push
jl
sub
push
lods
repnz
adc
out
lock
and
lock
inc
das
jb
dec
outsl
es
roll
adc
sub
cmpsl
mov
push
js
rorb
int3
out
insl
ja
push
ja
mov
scas
stc
cmpsl
out
pop
xchg
push
lahf
std
sti
jae
or
lods
add
scas
adc
inc
or
jns
dec
cwtl
fbstp
sbb
int
xchg
push
push
and
xor
sbb
popfw
xor
lret
push
cmp
xlat
inc
ret
xor
push
shll
dec
fcomps
sub
fcom
outsb
das
adc
test
cwtl
pop
jmp
out
in
into
cmp
mov
ret
stc
inc
mov
sub
xlat
mov
jecxz
push
xor
in
inc
daa
das
cmc
ret
push
aas
das
mov
lds
outsl
lods
xor
mov
imul
outsl
stos
or
sbb
jecxz
lds
add
or
cmp
adc
and
insb
adc
pusha
mov
dec
into
push
sub
sarb
ror
daa
jae
in
mov
and
sub
push
test
sbb
jae
loop
cs
pushf
rol
into
inc
sub
lods
jo
pusha
ret
lcall
sti
jo
add
push
not
inc
popa
dec
and
cmpsl
ljmp
std
push
push
pop
add
mov
orb
ficoms
push
rorb
pop
or
shll
repz
aas
add
add
cmp
in
icebp
or
sub
dec
stc
cmp
or
arpl
insl
add
or
push
cmp
flds
xlat
push
dec
push
fdivr
in
fbld
shrb
mov
jl
push
jae
push
push
cmc
inc
jl
mov
hlt
icebp
xchg
movsl
popf
xchg
pop
scas
outsb
push
js
int3
inc
add
push
insb
scas
mov
les
stc
pop
cmp
out
push
pop
jo
iret
outsl
xor
pop
push
mov
adcl
int
jle
jmp
test
shrb
pop
dec
mov
fucomp
movsl
mov
xchg
add
add
popf
aas
lret
jmp
pushf
aas
test
xchg
push
xlat
or
ja
int
ljmp
mov
mov
inc
add
sbb
lods
into
pop
js
lahf
pop
movsb
jecxz
fstpt
adc
in
push
imul
mov
push
mov
repz
jne
jle
dec
and
mov
test
adc
sbb
mov
inc
mov
xlat
xchg
lea
push
add
adc
xchg
sub
dec
ja
push
in
add
cmp
aad
call
lret
mov
rcrl
mov
rclb
test
paddw
aas
mov
and
icebp
daa
pop
inc
aam
movsl
inc
cmpsb
jns
jo
pop
inc
push
mov
jmp
out
out
cmp
stos
fisubrl
and
inc
xor
jne
and
je
int3
sub
mov
pop
mov
sub
xchg
dec
aad
fcomps
xor
inc
lds
insb
dec
hlt
insl
repz
jmp
scas
sbb
xchg
cmc
out
inc
andb
in
xchg
popa
pop
fs
push
cmpsb
push
rcr
inc
imul
jmp
mov
adc
jo
push
add
icebp
std
mov
std
add
out
cli
ss
repnz
in
and
mov
jb
push
inc
pop
lret
lret
daa
shr
pop
js
mov
mov
dec
xchg
outsb
cmpsl
dec
cmp
js
cld
inc
jge
dec
and
ret
xchg
in
mov
xchg
pop
cmpsl
jo
sub
orl
arpl
test
fs
sub
mov
sub
fwait
cmp
dec
mov
mov
ja
adc
iret
fdivp
or
push
fwait
mov
mov
jp
fnstcw
fistpll
pop
fprem
ljmp
ret
mov
in
xchg
adc
push
add
lret
add
pop
pop
jbe
call
insl
pop
xor
icebp
xor
adc
inc
iret
mov
xor
xor
sbb
push
sar
out
mov
ja
movb
xor
xchg
sub
daa
pusha
in
les
bound
jo
lock
cwtl
inc
jge
das
add
sub
or
add
xor
dec
popa
jnp
ficompl
addb
aas
sti
mov
loopne
into
mov
push
dec
jnp
aas
adc
and
std
ja
out
pushf
adc
pop
xorl
mov
cmc
sti
loope
orb
or
push
add
rcll
dec
dec
adcb
jg
pop
jecxz
jo
sbb
inc
mov
dec
fcomps
repnz
mov
lds
call
incl
lds
fldt
hlt
hlt
out
rorb
or
pushf
mov
mov
test
push
stc
data16
std
dec
ret
push
add
divb
inc
ds
test
cmp
inc
sahf
psubq
and
ret
lcall
add
or
xor
rol
jnp
mov
outsb
mov
pop
lock
lcall
push
push
loopne
push
jmp
inc
dec
xchg
lret
in
push
mov
sub
mov
divb
sbb
gs
jno
jge
add
jb
in
les
push
or
xchg
div
or
mov
scas
inc
adc
bound
xorb
and
jg
cltd
cli
movsl
bound
xor
ret
ds
mov
mov
scas
in
mov
xchg
xor
lcall
push
pop
bound
out
jne
cmp
hlt
jo
mov
push
stos
jge
jae
or
mov
ljmp
pushl
and
stos
dec
addb
call
arpl
or
jb
jp
xor
ja
stos
hlt
loop
jecxz
adc
pop
testb
and
loopne
add
shlb
sub
flds
push
jmp
dec
push
cmp
int
push
xor
leave
jecxz
jae
les
dec
inc
bound
enter
mov
in
out
leave
std
call
ss
mov
add
xchg
push
push
jns
scas
pop
data16
ret
mov
das
mov
popa
out
cmp
mov
add
iret
push
lcall
test
lods
push
add
cmp
pusha
data16
fcoms
bound
cmp
shlb
xchg
pop
fprem1
and
adc
dec
in
cmpsl
mov
int
cmpsb
adc
incb
and
stos
or
xor
lods
aad
into
add
xchg
mov
insl
arpl
lret
pop
xchg
sub
and
adc
stos
sbb
xchg
push
mov
ds
cmp
je
dec
mov
lods
movb
xchg
cmp
sbb
mov
aas
jecxz
ds
push
push
popf
das
jmp
cmp
and
xor
xchg
push
rorb
inc
dec
xor
dec
jp
jae
mov
loope
jb
in
outsb
movsb
fstpl
mov
stos
or
loop
dec
sub
dec
in
loopne
push
roll
arpl
daa
sbb
sbb
push
xchg
push
into
rcr
dec
imul
xchg
mov
stos
xchg
add
les
lret
repnz
inc
shrb
sti
mov
jl
ret
in
loope
mov
and
bound
inc
xor
sub
ret
mov
xchg
fdivrl
aas
or
daa
out
pop
mov
adc
mov
fldl
hlt
sbb
or
fs
cmp
jns
lahf
pop
or
inc
push
xchg
dec
jmp
out
movsb
repz
out
dec
ss
sbb
pushf
sahf
sbb
push
pop
dec
adc
testb
sahf
js
rol
loope
adc
mov
mov
movsl
inc
popa
insb
add
pop
call
cwtl
cmpsb
js
mov
mov
sub
mov
cltd
mov
sub
imul
pop
sbb
jae
mov
add
outsl
and
cltd
shr
xchg
js
movsl
mov
rclb
decl
sub
push
scas
and
xor
fcmovnbe
out
out
xor
push
les
inc
xor
xchg
xlat
mov
stos
cltd
xchg
sarl
dec
push
xor
cmp
outsl
addr16
cli
and
mov
push
cltd
xchg
xchg
xchg
cmp
inc
cmp
mov
std
in
pop
leave
test
mov
int
std
xchg
hlt
adc
xorl
xor
mov
push
cmp
dec
iret
repnz
rol
mov
repnz
or
mov
test
sbb
mov
push
or
mov
adc
movsl
jbe
jns
loop
jl
rcrb
mov
out
pop
pop
add
add
adc
pop
or
adc
push
mov
mov
mov
mov
fisttpl
sbb
cvtps2pd
or
daa
jbe
test
imul
mov
push
inc
mov
fmulp
jp
movsb
adc
fdivrp
daa
pop
mov
xchg
scas
out
test
test
aad
rcll
call
pusha
inc
cmp
cmp
sbb
vsqrtps
enter
pop
fcoml
cmc
fidivl
mov
pop
mov
cmp
cmp
mov
jae
pop
pop
stos
out
cwtl
mov
das
inc
xor
rolb
push
testb
test
lds
adc
sbb
inc
loop
sub
mov
sbb
out
insb
inc
imul
jg
leave
test
enter
lods
sub
cmp
sub
movsb
xor
fidivl
and
or
and
xor
imull
inc
outsb
les
outsl
aaa
mov
sbb
mov
adc
cli
mov
insb
adc
repnz
lock
push
fwait
jle
into
cli
xchg
push
pop
pop
cmp
andl
xchg
jg
xor
cmc
in
outsb
fisubrl
push
fstpt
movsb
cltd
push
push
sub
mov
xchg
sar
outsl
in
lcall
mov
mov
sub
dec
call
jb
ds
adc
push
inc
push
xor
cmpsb
call
push
xor
fldenv
mov
imul
mov
sub
outsl
leave
negl
in
or
push
lods
rcrb
or
mov
pop
mov
bound
movsb
les
outsb
fwait
jns
sbb
lret
aas
add
stos
jnp
push
leave
sahf
dec
adc
mov
test
jbe
push
imul
dec
xor
mov
mov
add
leave
lea
daa
mov
sub
cwtl
clc
sub
jmp
mov
jnp
jo
dec
outsl
sahf
sub
inc
orb
mov
ret
push
mov
sbb
push
ret
shll
loopne
push
sbb
rorb
data16
jae
inc
mov
in
enter
or
imul
imul
pop
popf
mov
push
inc
lods
mov
lds
std
and
jo
adc
dec
mov
movd
les
ja
inc
push
mov
ja
aas
ds
pusha
andb
popf
mov
jno
call
jnp
inc
mov
popa
scas
cmpsl
ja
mov
push
inc
mov
pusha
call
sub
adc
jge
xor
jns
scas
sub
push
ret
xchg
out
add
imul
aad
nop
dec
aas
push
cmp
xchg
nop
arpl
sbb
push
cmp
pop
rolb
xchg
xlat
pop
test
jne
dec
mov
pop
inc
mov
aad
lds
lods
aas
cmp
movsb
push
cltd
push
mov
push
add
push
enter
ror
sub
gs
inc
push
fwait
daa
xchg
hlt
cmc
repnz
jg
or
out
cmp
inc
add
dec
arpl
ds
pop
mov
jne
jnp
mov
data16
adc
stc
nop
sub
mov
fcmovnb
cli
bound
or
pop
mov
nop
mov
xor
adc
cmp
sbb
shlb
negl
push
push
dec
inc
xchg
push
popa
push
ret
das
insb
inc
jl
xor
cmp
stos
and
popa
stos
add
rorb
ret
mov
jbe
das
js
inc
test
stos
shl
leave
stc
popf
xor
add
in
jae
jno
dec
shrl
subb
inc
mov
sub
xchg
mov
sbb
mov
xor
inc
loop
adcb
loop
mov
push
ffreep
ror
xchg
pushf
cltd
cmp
cmpsb
xchg
imul
dec
jo
nop
jbe
xchg
mov
pop
out
push
xlat
pop
scas
mov
movsl
and
daa
popa
lods
inc
popf
pop
shl
push
iret
dec
fisubs
mov
jns
faddl
mov
dec
mov
cli
les
jo
adc
movsl
movsb
mov
mov
push
xchg
lea
les
in
adc
xor
jb
push
mov
xchg
sbb
jecxz
xchg
sub
mov
mov
psrad
bswap
mov
call
inc
mov
push
cld
jl
mov
jle
add
push
pop
ret
mov
dec
out
lahf
inc
push
mov
add
test
ja
and
dec
push
pop
mov
addr16
loop
repnz
movsl
aam
mov
dec
cmpsl
test
test
cmpsb
es
sbb
js
jns
addr16
xor
add
mov
cmpsl
mov
adcb
lods
pop
sbb
lcall
and
lret
push
int
cmpsb
pop
add
jmp
push
adc
cmc
ret
ss
dec
pop
inc
xor
stos
popa
daa
cli
mov
std
lods
xor
adc
xor
add
adc
jnp
lock
mov
shl
xchg
shll
fs
adc
mov
lods
hlt
mov
je
rcrl
addr16
adc
inc
test
xchg
and
or
in
xor
adc
ja
mov
xor
rcrb
in
int
inc
mull
xlat
push
mov
ds
iret
int3
sbb
ss
push
lea
sbbl
jnp
or
sub
lahf
je
fsubrl
les
fnstsw
xchg
xchg
insl
mov
mov
jle
sub
sbb
loope
push
inc
sbb
jbe
mov
lock
packsswb
sbb
jp
stc
out
lds
add
stos
jb
cmc
cmpsb
sbb
adc
push
out
push
movsl
or
push
daa
insl
adc
or
mov
sub
push
mov
jl
mov
jl
inc
loopne
add
pop
xor
sarl
mov
and
xor
in
and
mov
pop
adc
mov
enter
rorl
jmp
scas
fstpt
xor
and
xchg
mov
mov
adc
xchg
fwait
xor
jno
lret
xchg
mov
ss
loope
lods
testl
mov
andl
mov
imul
dec
addr16
sbb
subl
jecxz
mov
push
test
pop
or
xchg
ss
xchg
stos
push
pop
xchg
fdivr
pop
ja
push
jecxz
cmp
or
mov
push
arpl
pop
inc
ja
std
pushf
lret
inc
in
test
dec
aas
shll
loop
mov
inc
mov
inc
or
fs
mov
fdivrl
movsl
andl
enter
mov
int
les
sahf
dec
xor
aad
loopne
cmpsb
sub
jg
lods
js
imul
sbb
xchg
lret
mov
xchg
sbb
cmc
stos
in
xor
or
cwtl
sbb
jno
rolb
incl
sub
sbb
stos
push
sbb
in
outsl
push
mov
lock
addb
into
adc
adc
xchg
shrl
adc
jecxz
std
or
pop
ds
in
imul
addr16
es
sbb
push
fs
sbb
into
adc
idivb
je
pusha
fiadds
cmp
scas
jp
push
stc
and
stos
jns
adc
lret
popf
lcall
push
push
push
jno
and
ss
iret
test
jne
cmp
xor
push
test
rcrl
xchg
loope
testl
xlat
aad
test
xchg
lods
testb
hlt
scas
xchg
add
dec
lret
inc
jmp
loopne
jae
std
in
jb
test
sub
and
out
sahf
mov
adc
das
pop
mov
stos
cld
inc
mov
and
dec
call
in
dec
and
dec
mov
or
push
rcl
les
lods
call
jmp
mov
cmp
sbb
fistpll
out
inc
push
jbe
xor
dec
mov
sahf
mov
cmp
rorb
mov
insl
cmp
or
sbbl
cmc
sbb
test
jmp
add
push
mov
fistl
pusha
in
jmp
lcall
fmull
add
sbb
mul
sbb
mov
or
pop
sbb
xchg
or
outsl
loope
cmp
sarb
xchg
btc
adc
fistps
jo
cmp
sbb
into
push
dec
mov
fisubrl
adc
mov
imul
jbe
and
mov
adc
iret
icebp
loop
mov
fcompl
xchg
push
xchg
push
sbb
cmc
nop
jno
fisttpll
xchg
mov
push
inc
imul
add
xor
lahf
aas
push
pop
daa
in
mov
adcl
out
mov
jmp
inc
loopne
or
xchg
xor
cmp
jnp
jge
add
movsb
cmp
hlt
jb
push
xor
jo
push
ds
jns
jae
xor
add
or
pop
sub
push
push
add
out
and
icebp
cmp
and
mov
je
stc
cld
xor
add
jns
pop
fs
adc
jo
pushf
mov
sub
nop
jl
loop
xor
ja
xor
repz
int3
rorl
push
sbbb
dec
int
sub
int
pop
and
mov
ss
xor
nop
push
inc
mov
pop
and
xchg
lods
jge
cli
push
sbb
jmp
inc
cmp
xor
subl
das
and
fs
mov
inc
mov
repnz
mov
jmp
repz
int3
movsl
or
jp
push
subl
popa
fs
cmp
dec
xchg
xor
in
xchg
cmp
xchg
and
dec
int
lahf
dec
rcr
das
jbe
ret
rorb
cmpsb
xchg
push
stc
and
scas
xchg
sbb
jge
push
dec
hlt
push
xor
mov
mov
cmp
stc
push
std
lcall
mov
int
pop
jne
and
sub
cmp
scas
mov
je
mov
add
dec
mov
fnsave
adc
pop
fistpll
rolb
lcall
jmp
push
cli
stos
jno
repz
clc
xor
mov
xchg
xchg
mov
adc
lods
cmpsl
gs
rorl
mov
and
call
fdivrs
or
shrb
gs
icebp
mov
jnp
mov
push
xchg
xlat
popf
inc
lds
js
sub
jmp
dec
pushf
jbe
add
scas
mov
call
adc
lret
cmpsl
ja
shll
int
test
jl
stos
cmp
mov
sub
cmp
pusha
cmp
push
clc
mov
push
ds
in
sub
ret
lock
sub
dec
xchg
dec
scas
push
adc
test
test
insl
nop
leave
stos
das
div
or
call
xor
cmp
aas
les
stc
pushf
out
or
rolb
push
mov
pop
jns
sti
enter
mov
dec
pusha
mov
test
xchg
loop
pusha
stos
cmpb
stc
mov
cwtl
xchg
leave
and
aam
mov
dec
pop
push
adc
in
mov
in
xor
sarl
insl
mov
mov
pop
loop
pop
xor
jecxz
lret
push
icebp
sbb
inc
pop
jl
and
push
not
jmp
aas
sbb
loopne
call
pop
adc
pop
push
add
or
rolb
sbb
pop
sbb
push
jno
pop
xchg
lahf
mov
das
into
sub
mov
push
cld
sahf
sti
ds
mov
push
fisubs
cmpsb
inc
loope
push
mov
pop
test
jnp
mov
stc
inc
out
pop
sbb
fiaddl
fimuls
lea
rol
xor
sti
lods
sti
sub
pop
les
sbb
in
xchg
ret
mov
sbb
cmp
ljmp
jns
shrl
push
xor
pop
je
inc
jns
and
test
push
mov
imul
mov
pop
pop
push
loope
icebp
loope
sub
in
sub
mov
fmuls
lcall
adc
xor
divl
xchg
cmp
enter
adc
push
dec
xor
sub
inc
push
or
dec
push
xchg
lods
jno
pop
adc
insl
or
or
mov
out
aad
mov
add
xor
xchg
stos
lods
addr16
sbb
push
add
nop
pop
add
dec
loop
les
clc
lret
xor
dec
pushf
loop
sub
adc
cmpsb
das
data16
or
pushf
out
in
repz
cmpsb
nop
shrl
add
in
push
mov
dec
and
add
fistpll
mov
jnp
xchg
dec
xchg
pop
mov
mov
adc
mov
mov
jp
sbb
mov
jecxz
mov
into
je
pusha
fs
sbb
adc
adc
pop
int
cmpsb
int
or
push
bound
sbb
fimull
cmc
out
xchg
jge
mov
stos
mov
leave
notl
sub
test
ret
jl
pop
pusha
pusha
cmp
mov
lods
push
xchg
les
adc
push
or
lods
mov
jne
sahf
mov
xor
in
dec
sub
icebp
adc
push
dec
inc
and
out
int
mov
pusha
ret
daa
dec
add
and
push
adc
cmp
mov
cld
and
loop
out
sarb
cmp
ds
leave
mov
addr16
test
cmpsl
stc
sbb
andb
gs
outsl
out
insl
lock
nop
lret
push
cmp
sarb
pop
xchg
popf
mov
data16
jge,pn
xchg
aas
sub
sbb
sbb
cmp
fsubr
or
scas
addr16
add
lods
popa
mov
int
adc
pop
sbb
cmp
pusha
mov
repnz
jge
jge
and
pop
mov
push
out
movsb
and
xchg
clc
out
sub
dec
push
jb
jecxz
cmc
lds
push
jae
cmpsb
pop
cli
test
adc
push
xorb
jns
addl
lock
sub
std
inc
inc
sub
sub
fwait
cmp
inc
pop
repnz
mov
test
test
and
lods
out
cmp
add
push
js
pop
mov
fs
dec
inc
mov
pop
dec
ret
jbe
xor
add
pop
xchg
ret
push
jne
inc
test
and
fsubrl
push
push
sbb
adc
sub
sahf
fidivrs
dec
sbb
sub
mov
sti
test
aad
iret
jae
mov
xchg
xor
cmp
std
cmp
mov
movsl
pop
jae
xor
fcmove
stos
aam
add
add
scas
pop
mov
xchg
add
or
dec
push
lock
cmp
pop
fstpt
je
push
jmp
leave
mov
ret
cmp
dec
iret
jge
subl
or
mov
outsb
push
into
out
jns
pusha
lods
pop
sub
pop
push
dec
dec
clc
jle
adc
gs
hlt
inc
cmpsl
push
fwait
lds
shll
sub
faddp
dec
jbe
movsl
xor
fisttpll
inc
mov
xchg
jecxz
test
test
pop
in
push
sub
test
aas
pop
stos
adc
pop
outsl
clc
lcall
push
push
mov
les
mov
or
sub
cmc
scas
xlat
and
dec
sti
xor
inc
fs
and
pop
in
adc
std
pop
fisubs
push
aaa
push
push
xchg
dec
mov
mov
add
mov
dec
psrlw
test
sbb
scas
daa
dec
sub
fsubp
loop
dec
xchg
xor
lahf
outsl
sub
push
sub
and
fsubrs
imul
jae
lods
loopne
dec
scas
xlat
sar
mov
cmpsb
push
cmpsb
loopne
test
cmp
insl
adc
mov
xchg
mov
cld
jp
adc
out
cmp
test
or
or
pop
cld
sbb
stc
shl
push
xchg
pop
insb
out
dec
pop
aam
pop
in
sub
nop
adc
add
jbe
pop
jg
push
jno
clc
and
inc
and
hlt
cmpsb
fidivl
frstor
faddp
stc
fcoml
mov
out
mov
lea
xor
push
dec
pop
add
xchg
jae
xchg
pop
incl
test
test
shrl
jecxz
xor
push
ret
cmpsb
enterw
in
jg
mov
mov
mov
pop
movsb
data16
xor
pop
cmp
xor
and
adc
push
fiadds
dec
jle
cmpsl
adc
cmp
push
lds
and
ss
popa
adc
out
mov
jge
xlat
inc
mov
dec
cmpsb
or
adc
mov
xchg
sub
dec
add
pop
push
mov
and
pop
inc
mov
iret
xor
cmpsl
mov
sub
pop
pop
push
lret
insb
inc
add
xor
cmp
push
adc
jne
jle
fsubr
mov
cmp
outsb
mov
and
aam
lods
fsubs
and
rolb
call
push
inc
fwait
movsb
or
imul
out
cmc
shr
fwait
jnp
popf
cltd
mov
pop
jb
push
sbb
push
add
ficoms
aas
or
into
jnp
test
xor
repz
mov
adc
or
int3
insb
xchg
scas
mov
in
push
xchg
inc
sub
test
nop
mov
mov
rcrb
jnp
cmp
bound
mov
mov
aas
xor
sti
add
rclb
add
push
out
xchg
inc
dec
ret
push
shlb
neg
into
inc
xor
push
aad
pop
pop
xor
mov
hlt
cli
add
inc
or
cmpsl
dec
or
lods
pushf
incl
xorl
sbb
jne
add
lret
mov
into
push
dec
aaa
sbb
push
and
push
cmp
std
sbb
xchg
lods
add
mov
insl
mov
and
xor
xchg
mov
outsb
ret
int3
mov
cmp
out
jg
sub
sbb
lret
mov
cmp
loopne
pop
insl
push
xor
mov
or
stos
cwtl
push
iret
push
ret
xchg
jbe
lahf
in
mov
sbb
in
mov
into
jmp
stc
cmp
jg
call
out
and
push
inc
aaa
push
xchg
mov
leave
dec
add
mov
push
addr16
sti
mov
push
rclb
jp
ss
je
mov
mov
stos
sub
push
dec
mov
ds
dec
or
test
repnz
mov
push
cmpsb
push
jnp
xor
mov
mov
aaa
jp
pop
sub
pop
xor
push
inc
xor
outsb
mov
test
add
sti
out
arpl
inc
clc
push
movsl
mov
test
ficoml
movsl
xor
xor
cmp
out
ljmp
cmp
dec
xor
mov
inc
add
xchg
jb
shrb
push
push
xchg
nop/reserved
hlt
aas
or
cmc
xchg
fcmovnb
decl
roll
fwait
adc
add
and
divb
jle
stos
adc
cmp
or
inc
pop
lods
xchg
sbb
test
inc
jge
adc
sti
or
addr16
mov
add
mov
add
mov
dec
and
dec
lods
jno
pop
rcll
addr16
jnp
adc
sub
stos
aas
lahf
fsubrl
lret
inc
mov
scas
mov
xchg
dec
pop
mov
nop
push
loopne
mov
mov
lcall
mov
pop
inc
jle
xchg
rcll
lret
test
fdivp
jb
and
js
sbb
xchg
adc
xor
hlt
int
std
roll
sbb
xchg
out
push
dec
dec
call
dec
add
xor
mov
xrelease
iret
cltd
in
pop
rorl
das
xor
sub
sbb
or
xchg
jl
cmp
cmp
pop
movsb
jne
add
mov
sbbb
xchg
jne
cmp
cmpsl
or
xlat
push
push
and
mov
sub
out
loope
or
mov
add
mov
jnp
cmp
adc
or
lods
insl
fsubl
in
dec
icebp
test
lret
sbbb
pop
add
fidivrs
pop
movsb
or
hlt
and
push
xor
pop
icebp
imul
lods
mov
xchg
ficompl
cld
das
cld
lret
test
sbb
movsb
push
sbb
outsl
ficomps
add
or
push
and
pop
daa
mov
ds
mov
cmc
mov
arpl
scas
test
mov
hlt
jecxz
dec
fisttpl
popf
and
dec
mov
sbb
popa
outsb
ljmp
rcrl
ljmp
sti
xor
jb
lock
fucom
test
insl
mov
std
leave
test
aad
cmp
cs
aam
mov
pop
mov
adc
fs
xor
das
mov
jle
mov
dec
xchg
add
fwait
ja
pop
lock
dec
scas
sbb
inc
mov
push
sbb
xchg
mov
push
in
lea
cmpsb
jg
lods
ss
inc
dec
pushf
test
fcmovne
xor
adc
fisubl
ud2
pop
ljmp
jo
cli
andb
inc
ret
and
xorb
add
xor
add
sub
divl
cmc
push
mov
sub
mov
gs
fsub
ret
mov
inc
jge
nop
out
cmp
sbb
jp
and
ljmp
jmp
fstpl
int3
icebp
fsubp
and
adc
js
clc
mov
mov
insl
xor
fwait
pop
cld
stos
mov
out
and
add
imul
dec
mov
rorl
push
push
cmp
jmp
add
pop
dec
lock
inc
mov
scas
loope
stos
insl
test
pop
mov
inc
or
fwait
iret
mov
xor
sarl
jno
stos
jne
adc
imul
sbb
cmc
add
aas
mov
sub
xchg
fdivrp
or
push
ds
mov
sbb
loopne
xor
in
shl
imul
cmp
add
jp
inc
and
push
mov
mov
incl
dec
bswap
sbb
fcoml
add
lret
push
jno
cld
mov
aad
popa
loopne
mov
cld
aam
aam
je
stos
pop
add
scas
in
in
movsb
jb
cmp
xor
es
ja
xchg
push
in
lods
stc
sbb
jo
xlat
xchg
mov
rcrb
out
fdivs
outsl
mov
pusha
jnp
out
stos
jl
dec
inc
cmp
dec
aaa
add
xor
stos
xlat
mov
dec
popf
xlat
adc
inc
testb
iret
mov
int
xlat
dec
xor
dec
bound
and
leave
mov
loope
orl
insb
cmpsb
mov
pop
fidivrs
jae
pop
sbb
ror
lret
pusha
das
pop
mov
sbb
dec
lea
jno
sbb
xchg
jb
mov
cmp
and
loope
xor
inc
add
inc
push
ret
std
lahf
dec
sarb
ret
fstpt
cltd
daa
clc
int
movsb
ja
stc
mov
dec
xchg
sti
loope
outsb
mov
adc
js
shll
mov
sbb
adc
dec
fs
addr16
lcall
lahf
sti
roll
jecxz
sub
jp
je
xchg
push
push
rolb
out
cmp
mov
jbe,pt
fs
mov
jle
mov
mov
mov
lods
popa
push
or
test
cltd
stc
imul
std
ret
inc
push
in
add
loop
pop
andb
mov
pop
les
imul
push
pop
xchg
push
mov
mov
push
cmc
mov
nop
xchg
or
idivl
jns
ds
inc
sarl
xchg
xchg
gs
cmpsl
jmp
popf
pop
enter
cltd
adc
cmp
out
inc
jbe
scas
fnstsw
aam
or
sbb
aas
add
and
and
mov
xor
lret
add
repnz
cld
mov
mov
xchg
fwait
adc
call
cmp
nop
out
or
test
pusha
out
out
sub
pop
inc
daa
enter
fstl
iret
movaps
xchg
lret
mov
xchg
pop
sbb
mov
sbb
jne
cld
ja
lcall
pop
sbb
push
pop
mov
movsl
push
sbb
sti
pop
stos
test
push
ret
arpl
andb
adc
xor
imulb
jle
mov
add
hlt
call
inc
or
mov
iret
sbb
lret
stc
dec
stos
or
test
mov
mov
sbb
jp
pop
js
ds
mov
xchg
jge
fbld
xchg
inc
push
xchg
push
in
push
dec
jne
mov
lock
cmp
xchg
sahf
xchg
pop
pop
pop
inc
dec
lea
lcall
jecxz
std
pop
cwtl
popf
inc
je
int3
nop
outsl
repz
inc
aam
push
jmp
es
data16
fucomip
dec
or
xchg
fadd
into
pusha
push
add
cmp
lock
lret
push
inc
add
fistl
or
lods
lock
icebp
gs
cwtl
sbb
jl
pop
dec
jg
xor
ja,pt
jae
mov
stos
dec
subl
jae
arpl
out
pop
adc
mov
andl
lock
cmp
loopne
mov
pop
int
and
jno
and
inc
dec
and
out
jae
aad
imul
cld
iret
or
scas
or
sbb
inc
clc
adc
cmpsb
jne
add
jo
shrl
call
insl
cmp
mov
notl
stos
jmp
sahf
mov
rorl
mov
int
loopne
mov
xchg
and
and
lods
and
shrl
out
cmp
ret
dec
mov
adc
dec
mov
cli
xchg
dec
popf
sub
sti
push
add
jecxz
adc
fimull
dec
nop
jle
and
mov
add
imul
insl
xchg
xchg
clc
test
push
pop
movsl
sub
loopne
stos
add
clc
add
push
mov
and
mov
mov
stos
imull
in
je
addr16
sub
bound
lea
adc
add
mov
sti
insl
rorl
adc
cld
addb
test
sub
imul
dec
cmp
outsl
ret
sbb
or
and
push
mov
mov
in
sbb
push
mov
pop
xchg
or
test
cmc
jecxz
call
sub
cmp
jne,pn
add
jbe
dec
test
scas
int3
inc
call
inc
or
mov
pop
xchg
fmuls
dec
xchg
mov
xchg
faddl
out
sub
scas
aam
in
push
sub
js
icebp
dec
ljmp
jo
add
sub
inc
aaa
ret
mov
scas
sub
xlat
mov
dec
mov
test
add
jge
cmp
andl
sahf
enter
mov
mov
sub
insb
int
orb
inc
jmp
jmp
pop
sbb
dec
out
ja
stos
int
lahf
inc
sub
daa
cmp
mov
in
dec
adc
pushf
jb
sub
js
cmp
lock
daa
push
lods
js
adc
sbb
and
sbb
xor
pop
std
xchg
xlat
test
aaa
cmc
add
sti
aam
sub
scas
je
xchg
jbe
mov
mov
mov
aam
fwait
cmp
dec
shll
push
mov
mov
pop
lods
adc
shl
inc
cmp
xlat
rcl
daa
jnp
iret
sbb
es
mov
ss
std
add
add
mov
cmp
xchg
enter
inc
rcr
divl
mov
push
mov
and
inc
mov
loop
notl
add
add
pusha
mov
adc
das
cmp
sti
mov
inc
sub
loope
lea
repz
idivl
xchg
sub
movsl
fsincos
xor
mov
adc
and
dec
jns
js
cld
cmpb
dec
pop
ljmp
lds
mov
fimuls
push
pop
pushf
scas
mov
mov
adcb
leave
push
sbb
hlt
inc
mov
or
aaa
inc
push
cmp
hlt
dec
adc
inc
xchg
loopne
fxch
std
push
dec
fldl
push
stos
sub
sub
pop
pop
inc
and
cmp
push
sbb
pop
add
jge
loope
dec
or
pushf
adc
lahf
lcall
scas
das
pop
dec
pop
pop
jb
jnp
mov
mov
mov
fstps
fcmovb
cmp
int3
adc
rcrb
outsl
jmp
mov
push
and
push
nop
xchg
out
inc
mov
out
cmpsl
call
iret
xlat
loopne
mov
popf
or
cmc
sbb
pop
cmp
cmpsb
stc
push
mov
inc
rclb
outsl
xchg
xchg
or
in
pop
fs
mov
mov
xchg
add
leave
ss
int3
push
pop
sti
out
int
push
mov
insl
loop
add
lock
xor
jg
adc
inc
shll
push
movsb
mov
shll
inc
gs
popa
cltd
or
loop
pop
popa
push
add
mov
aaa
jbe
push
es
mov
mov
bound
or
rclb
sbb
enter
jbe
aad
mul
sbb
and
lods
xchg
mov
test
jle
pop
dec
sbb
jp
ds
and
inc
scas
and
insl
insb
fnstsw
sbb
insl
out
and
jmp
aaa
inc
test
add
insl
mov
arpl
jns
repz
xchg
jno
xchg
pop
mov
and
jnp
mov
sub
roll
mov
push
pop
cmp
mov
ds
mov
enter
xor
mov
rcll
pushf
fs
mov
and
mov
js
push
push
push
lods
mov
fsts
insb
jne
inc
nop
cmp
xor
shll
xor
pop
icebp
or
roll
shlb
inc
mov
adc
mov
mov
inc
dec
insl
jnp
clc
mov
shll
je
pusha
enter
imulb
pop
pushf
and
repnz
mov
pushf
outsb
pop
sti
popa
cltd
push
xchg
lcall
mov
or
cmp
adc
adc
xchg
dec
mov
and
and
rolb
sbb
ret
loope
pusha
jno
xor
and
sub
stos
leave
das
cmp
cmp
adc
add
out
lock
imull
aaa
sub
xor
and
and
addr16
ljmp
sbb
pushf
mov
repz
add
xchg
add
push
fs
xorb
insl
push
in
and
dec
sub
das
test
jnp
mov
and
jne
xor
xlat
mov
enter
movsl
adc
push
xorl
lds
adc
jle
lcall
jb
mov
arpl
dec
sub
flds
movsl
aaa
jno
dec
mov
push
or
ds
sbb
aaa
dec
pop
dec
push
mov
jbe
xchg
jecxz
pop
sub
and
xchg
rep
pop
outsb
ret
ror
lock
loope
inc
cmp
pop
dec
decl
jns
cmp
divl
lret
or
jno
ss
inc
inc
inc
push
inc
repnz
ss
dec
push
fnstcw
cli
push
mov
jmp
jns
int3
mov
in
mov
fucomip
testl
push
add
adc
inc
nop
mov
cmp
xchg
iret
and
addr16
lcall
jnp
es
mov
or
mov
xchg
popf
cmpsb
rcrl
lods
xlat
xor
cmova
pop
fdivr
lea
fcmovb
bound
stc
mov
pop
ljmp
mov
mov
mov
leave
mov
in
mov
inc
pop
inc
out
mov
jnp
inc
add
sbb
push
xlat
fnsave
dec
mov
xorb
add
popf
mov
ds
push
popa
mov
xchg
xor
fdiv
out
adc
xor
shlb
adc
cmpsl
pop
jle
shlb
add
out
ret
jl
das
clc
mov
cmp
mov
pop
loope
test
inc
xor
clc
loope
rorl
aas
pop
aaa
enter
add
lock
decb
sub
int3
mov
fsub
fldt
cwtl
addl
or
xor
pop
stos
cmp
lcall
mov
cmp
enter
sarb
cwtl
lods
test
divb
jecxz
push
xor
jae
jnp
xchg
inc
sbb
test
dec
jne
add
insl
jb
push
mov
outsb
xor
push
nop
imul
cmp
mov
and
insb
lcall
nop
imul
movl
subl
or
xchg
sbbl
dec
lods
mov
adc
daa
and
lret
loopne
add
and
nop
jb
push
lret
mov
stos
int
cmp
mov
mov
das
jae
loopne
xor
mov
ror
xor
xchg
hlt
mov
xor
ret
add
fstps
gs
mov
hlt
sub
sti
pop
cmp
push
xchg
popa
pop
frstor
xor
jae
mov
push
ret
testl
test
hlt
jae
mov
pop
notl
adc
mov
das
data16
out
enter
add
or
jmp
mov
and
jno
shrb
repnz
xor
rclb
adc
sub
cmp
leave
daa
pop
adc
push
sbb
mov
dec
lods
lahf
lcall
and
subb
cmc
jnp
clc
pop
loope
jge
shrl
insb
sbb
dec
hlt
sub
pop
aad
cmp
fwait
sbb
dec
mov
cmp
sub
mov
enter
in
mov
pusha
push
scas
mov
cmp
fildl
inc
ja
push
xchg
jl
cmpsl
or
xlat
pop
scas
jle
xchg
cltd
int
pop
outsl
scas
in
jmp
sbb
sub
add
addr16
sbb
aad
inc
cmpsl
ret
xchg
pusha
insl
sbb
mov
pop
push
xchg
push
stc
dec
andb
scas
jo
adc
ret
mov
out
adc
mov
shll
mov
std
dec
cld
push
xor
lds
imul
test
or
cmp
test
shlb
popa
enter
add
int3
jmp
sub
sub
add
sbb
sarb
fcos
repnz
mov
test
insl
call
aam
hlt
outsl
jnp
push
lock
arpl
pop
and
dec
mov
inc
jbe
ss
dec
pop
inc
adc
sbb
mov
in
and
xor
fsubrl
cmp
bound
arpl
sti
divl
sub
mov
xor
mov
pop
jns
out
cmp
xchg
mov
mov
and
jnp
ja
mov
lahf
sbb
fcmovb
popa
arpl
lahf
push
xor
or
add
shlb
loopne
mov
adc
loop
pop
and
sbb
out
fcompl
rol
out
and
push
jmp
adc
xor
pcmpeqd
stos
cmp
test
sub
dec
xchg
jns
repnz
lds
pop
lret
pop
out
or
mov
cmpsb
call
pop
cwtl
dec
lret
dec
mov
mov
push
lahf
sub
fsubrs
lds
into
mov
popf
mov
jge
int
push
pop
dec
ror
int3
mov
rcr
mov
scas
loopne
mov
adc
loopne
andb
cmp
popf
and
mov
cmp
lahf
xchg
push
fidivrs
xchg
ret
mov
movsb
xchg
aam
add
aas
int3
lea
cmpsl
loopne
jg
aad
cmp
add
mov
fadds
cs
decb
loope
wrmsr
cld
push
jne
fstl
push
cwtl
repz
pop
loop
fidivl
loope
jno
mov
dec
lahf
gs
sbb
push
xor
xor
test
stc
hlt
xchg
imul
fbld
inc
pop
xor
mov
je
xchg
mov
mov
inc
jnp
or
lahf
aam
cmpb
insl
out
lods
aas
popf
inc
inc
call
add
adc
jmp
mov
mov
pop
int3
and
jo
bound
mov
sbb
jnp
cltd
inc
add
popf
dec
jnp
stos
xchg
or
ljmp
xchg
mov
inc
mov
into
jle
and
ljmp
test
xor
inc
jo
scas
cmpsl
cs
rorb
cmpsl
mov
gs
dec
insl
jecxz
xchg
loop
sub
cmp
push
je
insb
das
ret
js
idivb
loope
in
mov
mov
cmp
icebp
mov
sarl
sub
pop
add
inc
cmpsl
stc
push
xor
mov
cwtl
pop
pop
mov
jl
cmp
call
in
shll
xorb
xor
movsl
sbb
mov
js
add
push
mov
sti
insl
in
dec
and
sahf
repnz
shrb
ret
out
push
and
mov
rcrb
stc
dec
or
add
data16
or
sbb
mov
dec
and
mov
and
xchg
push
pop
gs
lods
sbb
in
loope
int
or
loopne
cmp
mov
aaa
pop
lret
dec
mov
mov
sbb
mov
dec
mov
ds
fwait
dec
in
push
hlt
loope
incl
dec
scas
imul
inc
je
mov
stos
or
shlb
sub
cmp
xchg
inc
movsb
add
xchg
out
pop
in
jno
cli
cmpsl
pusha
fistpll
xor
adc
cs
pop
pop
loopne
cmpsl
pushf
xlat
ljmp
or
cmpb
or
push
mov
out
xchg
xor
sbb
stc
sub
aas
sub
mov
and
or
push
sti
f2xm1
mov
jg
mov
dec
fistps
repz
jno
clc
in
dec
mov
mov
mov
mov
dec
add
mov
outsb
mov
push
cmpsb
inc
stos
enter
pop
aas
cmp
jle
int
ljmp
sti
aam
sub
insb
fisttpll
aas
gs
ret
mov
xchg
push
dec
icebp
cwtl
push
das
pop
mov
and
jbe
push
or
inc
sub
repnz
xor
xor
add
aaa
rorl
cltd
test
hlt
push
add
es
xchg
cmpsl
cmp
mov
mov
int3
mov
fstp
cmp
mov
push
movsl
cld
jecxz
orb
arpl
mov
or
test
aam
dec
popf
or
sbb
push
jle
leave
jno
xchg
sub
lahf
fldenv
fs
xchg
pushf
mov
enter
cmp
data16
adc
icebp
mov
jb
fldt
xor
xor
or
cmp
popa
and
jae
lods
mov
inc
mov
ret
ljmp
mov
lcall
inc
inc
and
jmp
mov
mov
cli
mov
mov
push
pop
cli
fwait
adc
ja
bound
jle
xor
dec
xlat
jge
lcall
ss
add
mov
jg
lds
scas
popa
test
gs
adc
mov
rcr
jb
mov
pop
adc
out
inc
pop
gs
jae
pop
repz
add
addb
add
jno
cmpsl
mov
mov
hlt
jbe
lds
pop
jmp
in
sbb
jge
pusha
test
jo
add
cmc
adc
mov
cmp
mov
insb
fldcw
mov
scas
jle
or
inc
ds
sbb
insl
jns
cmc
and
xor
pop
call
mov
sub
std
lods
or
pop
sbb
std
lret
mov
aad
dec
lock
sub
dec
dec
inc
or
fadds
lret
dec
outsb
lret
mov
mov
popa
das
in
lret
pop
mov
pushf
xor
adc
pop
xor
sub
mov
filds
push
pop
pop
sbb
out
in
mov
sahf
cmpsl
and
mov
cmpsb
das
xchg
pop
dec
jl
lock
jbe
add
xchg
jecxz
cmpsb
jne
push
jp
dec
cmpsb
mov
pop
fidivrs
sub
sub
mov
cli
clc
fcom
repz
adcl
add
popa
add
call
jmp
in
push
mov
sub
stc
sbb
sbb
ret
add
movsb
stc
lret
sti
jl
pop
xchg
adc
push
xchg
out
mov
fdivrs
scas
and
add
or
dec
addr16
lret
out
push
cmpl
nop
jnp
and
aas
sub
or
loop
mov
ss
fdecstp
rorb
xor
mulb
adc
outsl
push
jecxz
ficompl
jb
add
icebp
push
adc
mov
popa
fnstcw
mov
rorb
push
call
dec
sub
mov
in
sbb
test
xor
cmp
fwait
ss
push
rcrl
jge
and
mov
lea
push
flds
push
and
jg
daa
xorb
or
in
xorl
xor
or
addb
or
inc
cmp
xchg
lods
cmp
push
and
ds
push
mov
sbb
jle
movl
imul
lock
xchg
js
shll
dec
push
js
shll
inc
jmp
pop
stos
xlat
sub
xor
mov
adc
and
adc
int3
lea
addl
je
and
and
lods
pop
ja
and
mov
call
sbb
pop
adc
push
and
sbbb
addr16
dec
push
sbb
add
jnp
jno
pop
add
mov
shll
shl
xor
cmpsb
int3
lret
push
cmpsb
test
std
or
aas
cld
adc
iret
ficompl
jl
fdivs
xorl
xor
add
repnz
cmc
mov
cmpxchg
xchg
xor
incl
mov
pop
gs
sbb
movd
ffree
leave
xchg
dec
scas
push
pushf
outsl
xor
inc
add
sbb
add
sbb
cmp
mov
fbld
add
dec
addr16
stos
popf
sub
adc
popa
out
aam
xor
sarl
scas
jo
add
jmp
rol
xchg
imul
lret
popa
shl
addb
shrb
test
and
ffreep
push
aaa
lcall
outsl
sub
push
fs
add
stos
std
movsb
ffreep
xor
aaa
outsb
add
add
sbb
pop
xchg
mov
push
and
push
lret
inc
in
clc
add
add
inc
dec
idivb
int
xchg
aaa
mov
mov
rcrl
add
and
cwtl
aad
js
das
mov
mov
or
sub
cmp
cmc
push
dec
mov
or
das
sub
dec
cli
mov
dec
shlb
test
popf
pop
adc
movsl
cmp
test
mov
cmpsb
iret
out
pop
in
repnz
addr16
cmc
jne
jp
inc
cmpsb
and
sbb
bnd
pop
mov
test
test
gs
lahf
jne
mov
add
inc
rep
inc
jae
pop
cwtl
shll
adc
mov
aam
test
enter
jb
loope
adc
push
fidivl
cmp
jp
inc
xor
sbb
sbb
loope
push
ja
push
jo
add
notl
cmp
pusha
das
push
int3
lret
hlt
add
xchg
or
push
mov
mov
cmc
or
daa
mov
nop
inc
ret
loop
movsl
jmp
addl
mov
push
dec
or
movb
lret
in
xchg
xor
fisttpl
ret
inc
or
mov
fbld
es
mov
push
arpl
lcall
test
mov
xor
cmpb
push
lret
xchg
adc
push
push
cmp
push
jle
nopl
xor
jg
xchg
mov
inc
sbb
enter
xor
jbe
icebp
inc
xor
add
inc
or
pop
lret
jno
addb
and
adc
call
ret
sbb
mov
dec
pop
and
cli
dec
xor
iret
movsl
data16
push
shrb
lds
add
mov
mov
cli
add
adc
dec
mov
aam
stos
push
outsl
ret
mov
out
test
cmc
or
cmp
ret
insb
pmaxub
xchg
sbb
sbb
dec
xor
inc
xchg
pop
mull
dec
or
push
add
mov
movsb
out
icebp
push
cld
mov
cs
arpl
xor
add
mov
push
add
jmp
test
push
pop
gs
js
ljmp
les
out
jl
sub
mov
sarl
sub
add
insb
xchg
test
xor
dec
sbb
in
lret
push
pop
cmp
lcall
cs
sbb
das
jne
push
mov
int
or
enter
mov
dec
test
ljmp
or
pop
test
xorl
jle
pop
je
inc
cmp
gs
fcmovne
pop
mov
and
push
jl
stos
adc
or
dec
in
jae
fimuls
mov
mov
jb
enter
inc
fwait
pop
mov
adc
mov
sub
jns
xchg
pop
sub
inc
je
xor
rorl
sbbb
call
and
push
cli
fwait
and
hlt
stc
mov
cmp
dec
push
ret
sub
cmp
and
mov
xchg
xchg
int
push
out
into
xchg
xchg
xchg
push
jmp
mov
movsl
test
sbb
shrb
aaa
xor
call
or
push
leave
ficomps
sbb
fs
lods
mov
cmp
sub
lcall
fcompl
adc
orb
test
xchg
add
andb
push
pop
loop
loopne
fst
stos
pop
cmp
jne
in
add
sub
scas
sub
mov
rcrb
cmp
fistpl
mov
out
lods
sub
add
jo
sbb
add
testl
pop
loope
pop
cwtl
fdivl
xor
jae
aad
mov
xor
mov
negb
inc
pop
dec
and
adc
lcall
inc
push
adc
sarl
push
cmp
dec
insl
cmp
mov
xchg
adc
iret
popf
cmp
push
arpl
push
lock
popf
dec
into
sub
push
inc
and
sub
aas
filds
jbe
movb
sub
sti
sti
cld
icebp
mov
jmp
mov
mov
pop
stos
lock
adc
js
in
mov
adc
mov
leave
add
aaa
sbb
cmp
in
loopne
pop
js
push
shrl
lea
push
xor
icebp
rclb
ljmp
dec
fsubrl
sbb
sub
pop
push
jl
adc
pushf
sysret
lahf
fnstsw
or
pop
push
daa
enter
adc
mov
sarl
adcb
xchg
pop
and
mov
imul
fs
push
movsl
xchg
or
test
dec
jmp
jmp
add
test
adc
and
aam
jb
sub
push
xchg
pop
fisttpll
cmpsb
sbb
inc
inc
adc
ficomps
shll
pushf
popf
iret
jno
cmp
inc
push
in
outsl
cmp
fisttps
lahf
call
jp
cmc
push
dec
sub
ja
and
incb
test
mov
xchg
rorl
imul
xchg
je
xor
mov
cmpsb
and
inc
insl
fmul
mov
mov
loope
jnp
or
pop
dec
dec
mov
imulb
leave
jle
or
fimull
shrb
lahf
mov
pop
lock
jg
mov
test
stos
aaa
push
leave
popa
fwait
in
fwait
xlat
push
jp
fcompl
mov
test
xor
imul
mov
loopne
dec
outsb
subl
pop
addr16
icebp
sbb
add
movsl
aaa
xor
test
push
or
jmp
add
nop
les
aaa
add
rorb
jno
adc
jo
xlat
lret
daa
push
cmp
lds
ljmp
adc
testl
or
pop
inc
xlat
add
popf
adc
hlt
outsb
add
jle
push
rclb
cmp
and
aas
add
mov
mov
lcall
outsl
add
xchg
movsl
int
pop
xchg
aad
outsl
jne
fwait
push
jb
jbe
or
into
jns
ret
imul
mov
addr16
or
std
jp
xlat
and
mov
leave
sahf
mov
mov
loop
pop
push
pushf
mov
pusha
es
aas
add
jp
xchg
or
mov
mov
loope
outsl
scas
out
xchg
xor
movsl
mov
cmpsl
pop
adc
jae
in
push
pusha
jo
mov
jae
or
sbb
mov
xchg
cld
mov
push
shlb
ret
jle
stos
adcl
sub
xchg
and
push
push
lahf
enter
es
cmpsb
movsb
dec
or
jbe
enter
inc
std
push
fs
lret
mov
adc
and
js
orl
cmp
test
dec
les
xlat
frstor
mov
sub
and
mov
mov
or
or
dec
push
pop
mov
stos
sahf
sarl
inc
jmp
scas
pop
clc
test
or
and
js
test
or
adc
xchg
dec
mov
nop
lahf
sarl
add
or
testl
movb
int3
mov
in
sub
push
push
cmp
xchg
dec
shlb
repnz
jb
push
push
xchg
sub
mov
dec
and
mov
push
orl
test
jl
aam
inc
popa
xor
out
repnz
xchg
adc
repz
xor
jno
stos
jmp
mov
test
pop
or
imul
jge
mov
sarl
push
xor
hlt
ficoms
jbe
jl
fcmovbe
adc
and
push
xchg
int
push
adc
push
inc
int
aaa
add
repz
mov
out
mov
test
lock
xchg
mov
sub
sub
loopne
cwtl
xor
adc
jnp
inc
test
clc
sub
aaa
pop
ret
cmpsb
xor
pmulhuw
shll
shrb
xchg
mov
jl
mov
add
aas
das
push
mov
xor
leave
or
filds
jmp
dec
loope
test
mov
cmp
mov
jae
enter
mov
pop
fistpl
mov
xchg
mov
pop
hlt
xchg
sub
inc
or
mov
lcall
std
push
call
xor
sbb
insb
cltd
mov
pushf
imul
jmp
pop
in
pop
cmpsl
popf
sbb
inc
lods
nop
xchg
jg
icebp
add
ss
mulb
imul
lds
sbb
std
cmp
ljmp
cld
adc
xor
or
push
cmp
repnz
call
ja
or
mov
into
and
cmp
add
pop
std
adc
add
mov
js
punpckhbw
cmc
inc
push
movntq
shrb
push
fsubrl
mov
dec
fs
bound
cli
dec
cld
dec
sbb
fnstsw
cwtl
outsb
xor
loopne
out
add
ljmp
pmaxsw
gs
mov
fcomip
or
ja
ret
aaa
lds
or
sar
or
add
pop
mov
aas
pop
in
lahf
jne
fwait
dec
push
insl
in
bound
dec
sbbl
enter
hlt
fs
add
mov
repnz
les
ss
dec
dec
int3
and
jp
jae
adc
dec
add
dec
scas
cmpsl
inc
fcompl
aad
pop
add
fldenv
mov
cmp
addb
mov
sub
rclb
iret
jmp
add
or
or
push
or
mov
imul
hlt
mov
movsb
lcall
in
in
insb
xchg
add
xchg
inc
insl
mov
dec
loopne
lods
pop
aaa
dec
out
fcomi
dec
call
scas
enter
mov
xor
ret
xchg
mov
jg
jl
sub
mov
es
pop
push
jg
je
add
lret
cli
je
jp
out
or
out
xchg
inc
addr16
aad
cmpsb
cmpsb
or
mov
rcl
jnp
sub
loop
jge
iret
sbb
popa
stos
ja
jae
mov
dec
leave
push
jbe
fimuls
cwtl
data16
push
mov
aas
into
and
popa
sub
push
mov
mov
aas
add
in
sbb
movsb
insl
ljmp
imul
xchg
jmp
pop
and
in
or
jo
mov
stos
push
mov
nop
pop
xchg
add
fwait
mov
xorb
mov
mov
add
rorl
scas
adc
aam
daa
inc
lret
and
cwtl
cmp
mov
test
js
mov
pushf
mov
adc
adc
stos
ds
pusha
push
sub
jno
hlt
jmp
pop
pop
cpuid
aad
mov
or
adc
je
sti
xlat
loop
sub
test
sbb
sub
push
cmp
and
out
mov
adcl
stc
in
cmp
inc
jbe
xchg
add
shlb
push
divb
jle
add
ret
fdivrp
incb
mov
dec
xchg
xor
xchg
imul
mov
push
ret
pushf
jecxz
inc
push
adc
xor
testl
push
ja
mov
and
sbb
mov
dec
xorl
dec
sub
adc
xor
xor
adc
xchg
inc
addl
cmpsl
cmp
mov
dec
xchg
int3
clc
fdivrs
xchg
mov
nop
sbb
pop
fbld
in
iret
lahf
add
and
xor
inc
sub
mov
mov
or
jge
aas
loopne
and
add
repnz
repnz
mov
sbb
subb
cmpsb
das
fmul
mov
incb
sub
jns
pop
repnz
and
mov
pop
lods
mov
add
pop
jne
sub
nop
push
out
dec
test
sub
sbb
pop
xor
cmp
loop
cmp
movsl
in
ja
movsl
in
cmp
mov
sub
test
fisttps
pop
inc
cmpsl
inc
xchg
mov
mov
inc
dec
xchg
inc
sbb
mov
push
shl
mov
jb
push
sub
loop
inc
lods
test
jmp
lock
sub
sub
addr16
push
fdivrl
int3
pop
cltd
jnp
add
jmp
lea
inc
les
mov
xchg
mov
in
movsb
mov
insl
inc
stc
mov
xchg
repnz
mov
mov
pop
pop
mov
sub
fs
push
fisubs
lods
lahf
add
dec
into
xchg
and
push
jno
jns
mov
mov
fs
loop
mov
sub
jno
adc
imul
ret
popf
aam
xorl
in
mov
or
adc
lds
xchg
inc
cmpsb
in
les
adc
adc
mov
sub
shrl
mov
jb
sbbb
movsb
mov
fdivl
enter
mov
ljmp
jnp
sarb
cmp
sbbl
mov
push
xor
xchg
scas
xor
repz
inc
fidivs
pop
sbb
scas
ss
daa
out
out
xor
mov
cmp
pop
repz
xor
stos
loope
ljmp
psubsw
repnz
push
adc
mov
sarb
add
jl
in
mov
cli
lret
repnz
or
add
out
dec
cli
sar
dec
andb
ljmp
adc
xor
push
out
stc
cld
in
push
pop
cmp
arpl
les
ljmp
fildll
xor
xchg
xchg
mov
mov
cmp
xchg
dec
les
push
cld
dec
es
xor
sarl
test
es
adc
lock
ja
nop
cmp
jmp
call
pop
fimull
popa
dec
fidivrs
pop
xor
xchg
addl
lock
into
push
leave
cld
dec
sub
push
push
pop
inc
int
pop
jae
imul
rclb
jmp
mov
hlt
mov
mov
push
loopne
mov
push
cmp
cmp
push
cmpb
inc
pop
insb
mov
fs
loop
movsb
std
ljmp
lea
jle
inc
add
shlb
dec
iret
icebp
lea
stos
mov
inc
mov
mov
cmp
pusha
cmp
xor
jle
repnz
out
jb
das
das
push
repnz
daa
sbb
movnti
js
dec
test
gs
int
in
and
test
ja
leave
fisubrs
push
xchg
pop
add
xchg
add
jmp
xlat
mov
jle
scas
cwtl
outsb
aad
pop
jp
add
js
cld
cmp
add
stos
stos
inc
mov
sbb
mov
shl
cltd
ljmp
push
xchg
arpl
lret
in
dec
pop
xchg
xchg
aaa
adc
out
adc
gs
iret
cmp
xor
movsl
inc
fsts
and
in
lcall
repz
xchg
xchg
idiv
dec
add
xor
sarl
dec
dec
sub
jbe
int3
mov
xchg
outsb
call
lds
mov
inc
popa
mov
sbb
inc
mov
xchg
jp
lcall
push
mov
mov
dec
ret
xor
aad
or
or
enter
and
stc
cmp
int3
xchg
je
dec
lret
mov
mov
ljmp
add
cwtl
pop
or
adc
dec
aad
pop
in
inc
adc
xchg
movsl
push
sbb
andb
ss
mov
cltd
out
lds
in
lret
push
push
pusha
jbe
push
test
push
sbb
jne
mov
hlt
xor
xchg
sti
cmp
sahf
icebp
loop
setge
nop
test
or
sbb
aas
adc
mov
pop
jne
push
test
pop
fwait
xor
std
push
mov
cmp
xchg
xor
fwait
stos
mov
ja
ds
inc
call
mov
hlt
mov
mov
push
test
inc
enter
mov
sbb
inc
mov
popf
xor
xchg
adc
test
adc
cmpsb
add
dec
es
add
mov
adc
gs
adc
arpl
mov
add
iret
imul
jge
dec
fistl
dec
jmp
jnp
repnz
sbb
in
add
mov
inc
rclb
test
or
xchg
xor
mov
and
and
mov
cltd
pop
push
push
mov
adc
inc
mov
icebp
lock
and
decl
pop
lods
in
lods
push
adc
or
push
aaa
fs
test
mov
out
fwait
dec
adc
fs
in
adc
adc
jne
or
add
xor
mov
inc
inc
jp
addl
inc
jns
jecxz
jae
jo
dec
mov
cltd
or
lds
mov
jo
pusha
mov
add
push
decl
pop
dec
and
pop
jmp
mov
or
stos
inc
mov
push
movsb
je
mov
push
push
subl
mov
pop
in
adc
xor
ljmp
pusha
pop
js
sti
inc
lock
push
stos
adc
stos
test
out
xchg
imul
mov
jp
ja
shrl
aad
lods
push
sub
mov
call
add
mov
adc
push
xchg
push
inc
es
jo
mov
add
aas
shr
push
or
adc
cld
loop
imul
loopne
pop
inc
dec
cmp
add
outsb
adc
xchg
int
into
icebp
out
add
sti
or
sbb
sbb
jle
in
adc
inc
fidivs
dec
sub
lds
test
out
loopne
js
jmp
iret
test
inc
js
outsb
popa
xor
mov
ss
or
loop
push
inc
scas
out
xlat
jbe
xchg
xchg
sub
dec
mov
scas
ds
mov
cwtl
test
out
pop
jbe
out
jle
adc
push
mov
std
rolb
pop
mov
xor
mov
repnz
or
roll
mov
pushf
inc
adc
xor
jl
shrb
lret
stos
xchg
fiadds
stc
push
push
adc
push
repnz
adc
pop
push
xchg
inc
stc
xchg
aam
xchg
mov
mov
jp
push
test
std
scas
insl
xor
push
ret
loop
dec
inc
loopne
sbb
adc
in
sbb
sbb
push
je
xchg
xchg
sub
jbe
and
cwtl
pop
pop
les
inc
inc
dec
cltd
cmp
jmp
inc
lahf
jae
les
repnz
gs
in
xchg
aam
lods
cmp
sub
aam
and
xor
xor
out
mov
in
push
fldcw
bswap
jo
in
idivb
mov
cmp
mov
ret
pop
xor
cmpxchg
adc
int
aam
je
lea
jmp
xchg
bound
cmpb
mov
inc
mov
or
gs
out
arpl
dec
jmp
xchg
in
icebp
push
xchg
daa
test
mov
in
xor
jae
lods
sbb
mov
dec
pop
out
xchg
hlt
loop
pop
data16
cmp
cwtl
add
jmp
cmc
inc
icebp
add
fwait
and
dec
sub
sbb
or
cmc
sub
adc
or
sbb
mov
push
clc
dec
pop
jp
out
mov
sub
arpl
hlt
adc
les
fiadds
int
sbb
cmp
testb
add
stos
inc
sbb
xchg
cwtl
out
cli
dec
cmp
sub
add
xor
sub
dec
test
and
push
push
add
out
fsubr
xor
xchg
xchg
lods
push
xor
ret
mov
mov
adc
push
mov
lcall
mov
cmp
es
and
repz
xor
cmp
xlat
or
sbb
push
movb
mov
adc
stc
push
xchg
mov
aad
or
out
mov
and
and
xlat
push
jecxz
and
cmp
cmp
adc
dec
jge
or
adc
push
and
xchg
mov
popa
push
mov
iret
dec
pop
in
clc
loopne
mov
out
push
shr
pop
stos
imul
clc
scas
je
sub
sbbb
inc
cmp
stos
adc
aam
sbb
cwtl
pushaw
xor
adc
xor
jmp
adc
dec
lret
outsb
sbb
insl
mov
xor
movsb
xchg
pop
aaa
cmpsb
xchg
in
jae
xchg
inc
fnstsw
push
les
dec
adc
jecxz
mov
idiv
mov
push
enter
sti
xchg
ret
test
push
out
call
adcb
int
icebp
data16
lods
pushf
clc
outsb
or
mov
outsb
sbb
dec
flds
xor
mov
ret
fwait
rclb
nop
mov
movsl
dec
aas
imul
mov
fsubr
outsl
insl
fwait
dec
subl
jl
lret
loope
mov
pop
push
ja
pop
dec
lea
enter
xor
pop
dec
xor
imul
jle
sub
jmp
scas
aaa
outsb
outsb
add
or
outsl
fsubrs
xchg
jmp
lret
push
xor
scas
aam
xor
push
mov
mov
mov
loop
jl
clc
scas
out
pop
lahf
add
repnz
mov
sbb
sub
jns
out
insb
outsb
insb
dec
sub
lret
int
outsl
or
ljmp
in
xchg
imul
cmp
dec
dec
xor
clc
mov
cwtl
jmp
xor
dec
and
popa
or
xor
inc
ret
sbb
cli
xchg
and
lcall
outsb
jmp
or
enter
jmp
gs
ficoms
mov
into
repnz
outsl
adc
mov
aaa
sarb
jbe
out
lds
add
adc
and
or
aad
pop
cli
mov
cmp
mov
ss
xchg
mov
movsl
popf
enter
inc
and
xor
gs
std
rcll
mov
pop
shrb
dec
scas
mov
xor
out
jno
adc
xchg
scas
or
inc
sub
je
dec
sarb
adc
jle
fidivrl
sbb
inc
xlat
and
cmp
addr16
sti
les
loop
push
mov
aaa
ss
gs
int
aad
inc
mov
push
scas
ret
cmp
push
sub
pop
popf
xchg
aad
mov
and
sub
jge
mov
or
xchg
cmp
dec
push
sub
xchg
mov
cmpsb
dec
sub
push
scas
inc
cwtl
icebp
dec
pop
mov
mov
rcrl
daa
dec
into
popa
repnz
jbe
shrb
fnstenv
in
mov
inc
outsl
adc
aas
xchg
inc
sbb
or
loope
mov
add
out
jle
sbb
jae
xchg
test
fistl
mov
pop
pushf
xchg
mov
rorb
mov
fcomps
add
out
mov
push
fisubrs
push
mov
lods
vprotd
gs
imul
lock
dec
mov
int
sub
addb
iret
cwtl
adc
xchg
nop
data16
repz
lret
inc
add
addr16
adcb
jne
xor
lahf
or
lods
aaa
lods
add
xor
into
inc
mov
ret
and
ret
sub
cmp
adc
jbe
and
jne
sub
and
jge
push
dec
test
lcall
adc
out
cltd
insb
data16
sbb
fnstsw
jne
ja
push
dec
jae
cmpsb
jne
sbb
mov
scas
jo
push
sbb
sbb
outsl
call
jmp
mov
add
push
sub
or
sub
or
out
xchg
sub
ret
fisubs
shrb
lret
pop
inc
and
js
subl
cmp
cmp
pop
mov
dec
icebp
adc
sbb
jl
imulb
cltd
clc
test
and
dec
jb
orb
test
mov
mov
addr16
sbb
mul
push
daa
jb
sub
xchg
cmp
pop
add
test
push
xlat
mov
les
fcmovne
imul
xchg
shll
push
xor
adc
add
lahf
mov
adc
dec
scas
and
ljmp
imul
cmpsb
push
mov
xchg
icebp
pop
jb
int3
hlt
mov
fcoms
int3
jno
mov
cli
adc
and
dec
mov
adc
xchg
iret
cmp
jmp
push
cmpb
inc
inc
ret
stc
and
or
jae
jns
xchg
andb
inc
push
es
push
lret
mov
jg
aas
pop
int
scas
mov
sbb
test
xor
push
rclb
hlt
adc
in
ret
sub
not
adc
pop
inc
sub
push
xor
jmp
mov
and
mov
cltd
jo
subl
inc
mov
addl
push
int
xor
jmp
inc
fimuls
das
or
sarb
mov
push
movsb
xor
adc
and
adc
sahf
cmpsl
cmpsl
inc
jl
mov
mov
jns
pop
es
icebp
xor
divb
mov
push
xor
inc
mov
repnz
in
dec
ret
pop
push
mov
pop
mov
or
iret
rcll
rorb
jne
sub
mov
inc
scas
lahf
push
push
stc
pop
mov
cmp
in
pop
popf
cld
shlb
xchg
cmp
add
das
push
cmp
cmpsb
cmc
pop
mov
loope
or
out
dec
cmp
movl
je
rorl
divb
add
mov
shrb
xchg
sarl
test
mov
cmp
fwait
rdmsr
divl
ficoms
fbld
jg
dec
jnp
stos
mov
in
clc
fadd
inc
mov
xor
sbb
dec
stos
mov
xchg
lock
movsb
push
adc
call
mov
dec
shrb
arpl
mov
call
mov
pop
cwtl
inc
and
dec
mov
mov
xor
mov
arpl
push
lods
mov
mov
and
ret
mov
add
push
mov
cmp
loopne
jb
fwait
stc
xchg
cld
jns
cmp
or
sub
add
push
cmpsb
int
ljmp
imul
cmp
push
mov
push
fadds
add
ja
daa
pop
int
pop
or
scas
mov
or
lcall
pop
xchg
clc
adcb
adc
and
loop
cmp
inc
cltd
loope
xor
push
out
adc
stc
jge
sub
jns
inc
lret
gs
xchg
and
jp
push
gs
out
cwtl
xchg
js
jb
cwtl
xor
cmp
mov
jmp
push
jnp
in
fiadds
mov
mov
aas
das
inc
mov
sti
das
pushf
xchg
adc
dec
xor
mov
fstl
cmpl
ret
mov
pop
popa
sbb
js
inc
dec
xorl
inc
test
pop
or
mov
jge
stc
add
popa
pop
lcall
sub
cli
sub
cmp
ret
lea
sub
lds
sub
mov
push
push
jmp
cld
pop
sub
das
lret
push
insl
inc
dec
adc
divl
mov
mov
lcall
fsubr
mov
imul
xor
ret
enter
dec
jp
or
mov
lods
sbb
push
shl
push
and
pusha
mov
and
jl
in
inc
inc
outsb
incl
sub
lock
adc
or
test
ljmp
daa
jnp
inc
lds
test
cmp
jecxz
daa
outsb
adc
pop
mov
push
test
dec
aad
aam
ficomps
popa
push
pop
icebp
pop
mov
jle
aad
ss
insl
sar
out
imul
pop
or
dec
jl
sub
out
dec
xor
mov
lret
pop
dec
jmp
pop
clc
ror
out
fs
xor
add
xchg
test
test
cltd
out
fsubrs
jecxz
leave
testb
dec
mov
int
cmpsb
pop
mov
dec
jnp
cld
add
jecxz
cmp
es
adc
gs
mov
ss
das
sbb
ficoml
mov
mov
lahf
add
xchg
std
mul
xchg
lcall
add
aas
xchg
fs
sub
movsb
or
xchg
sbb
dec
and
cli
bound
daa
ja
loop
mov
inc
or
sub
loope
insl
add
pop
ds
jb
or
pushl
push
nop
add
daa
call
imul
push
pop
jle
and
jmp
fistl
mov
cmp
push
orb
adc
imul
sub
aam
sub
adc
xor
adc
adc
mov
popf
inc
rcrl
inc
scas
and
inc
je
jl
ss
mul
sbb
xchg
add
rolb
imull
mov
adc
repnz
push
push
icebp
rclb
mov
cli
pop
stos
pop
mov
in
pop
stos
ret
cmc
add
sahf
lods
mov
dec
sub
mov
mov
sahf
das
mov
imul
jmp
cmp
addb
xlat
por
out
out
pop
pop
loopne
cmp
adc
mov
and
xchg
ficoms
xchg
dec
in
adc
test
mov
aaa
test
adc
adcl
sbb
popf
xchg
xchg
push
cmpsl
loope
jns
mov
test
mov
test
cli
jl
jmp
push
jg
ljmp
sub
dec
fdivl
test
xchg
cmp
sub
mov
xchg
sahf
test
in
xchg
mov
adc
push
dec
mov
nop
pop
xlat
xchg
adcl
mov
lcall
sbb
lahf
pop
pop
mov
ror
imul
sbb
dec
mov
pop
clc
adc
and
xor
mov
xchg
push
and
mov
negb
mov
xchg
in
inc
push
call
sbb
and
out
bound
jl
popa
dec
gs
jnp
dec
inc
loop
loopne
mov
and
or
std
mov
stc
cmp
mov
cli
pop
push
sub
mov
aas
in
xchg
lds
mov
sbb
mov
push
sar
push
add
in
sub
sahf
adc
int3
lea
shll
or
dec
inc
sbb
adc
pop
pop
or
outsb
inc
push
bound
js
or
mov
out
fnstcw
mov
psrld
add
jb
mov
fcompl
jns
jb
sub
int
push
movsb
mov
cmp
dec
inc
fsubrl
xor
sbb
imul
roll
mov
mov
addl
push
mov
push
jns
or
and
lods
outsb
imul
pop
jecxz
or
and
cwtl
or
and
imulb
mov
pop
cwtl
cmp
sbb
adc
jmp
jns
ret
mov
and
jns
inc
sub
push
cmpsb
sub
cli
movsb
pop
push
std
jmp
push
test
in
cmc
pushf
xorb
rcr
cmc
and
insl
ss
repz
data16
xor
jo
out
aam
gs
mov
scas
cmpl
adc
jne
jb
sahf
or
stos
sbb
cmp
pop
call
loopne
decb
shlb
in
push
jl
das
lret
sbb
lret
ret
es
xchg
lret
adc
in
aaa
add
mov
adcb
mov
xchg
insb
jmp
jne
movsl
cmc
xor
aaa
notb
mov
sti
cwtl
dec
sub
popf
dec
mov
cmp
mov
int3
jg
add
movsl
inc
inc
fstp
push
dec
mov
add
lds
pop
mov
mov
into
pushf
aas
pop
out
xchg
in
push
mov
stos
lcall
imul
xor
xchg
or
ja
dec
out
jnp
push
xchg
xorb
loopne
or
cltd
sbb
test
clc
test
fimull
pop
adc
out
pop
sub
sub
adc
cli
pushf
fs
push
mov
gs
adc
xchg
jge
out
lods
jp
sarl
sahf
clc
ffree
cld
outsb
andb
jb
fdivrl
mov
and
sbb
stos
out
mov
jmp
or
xchg
inc
test
lock
daa
jecxz
push
add
sub
push
or
adc
addr16
pushf
mov
out
ret
lcall
subb
pop
lret
repnz
add
pop
ljmp
mov
cmp
lcall
jl
out
push
scas
mov
add
cli
out
enter
push
xchg
sbbb
rolb
mov
mov
les
cmp
subl
jp
jb
lock
pop
jno
popa
inc
into
lret
push
aad
push
rcrb
test
mov
mov
inc
and
inc
cmp
add
add
call
push
icebp
mov
jl
xorl
and
mov
lock
mov
popf
sub
in
in
sub
jg
mov
pushf
mov
inc
test
popl
inc
add
out
xchg
in
insb
cmpsb
inc
ret
daa
popf
cmp
mov
das
fcomps
inc
inc
lret
imul
das
dec
ret
push
cmp
pushf
and
cmp
fstps
add
jmp
inc
arpl
imul
lods
into
int3
adc
xchg
pop
sbb
mov
pusha
mov
popf
fstps
mov
std
xchg
xor
xlat
sbbl
loop,pt
in
sub
arpl
mov
hlt
into
daa
xchg
lret
dec
scas
mov
pop
fildll
out
add
inc
push
jp
pop
xchg
mov
mov
aas
mov
sbb
pop
sbb
lock
sahf
lods
ds
sbb
gs
xchg
adc
sbb
mov
jo
fisttpl
out
sub
out
call
jg
arpl
sub
iret
in
push
into
xor
das
fs
mov
mov
scas
pushf
inc
mov
xor
pop
push
or
pop
jbe
insl
mov
mov
jbe
xchg
xchg
cs
inc
in
sbb
push
rolb
addl
sub
imul
cmpb
rclb
inc
mov
gs
call
aam
jne
ss
mov
js
mov
cltd
in
push
sub
sbb
sub
push
mov
leave
push
lds
xchg
imul
sbb
fdivrs
pop
mov
out
cmp
jl
adc
mov
push
mov
xlat
lods
sahf
inc
dec
cmpsb
stc
push
push
scas
je
dec
add
push
fxch
pop
ja
push
cmp
push
jb
stos
sbb
notl
cmp
xchg
sub
cmpsl
xor
adc
cmpsb
shrb
rcrb
iret
lret
cmp
loop
pop
inc
jne
adc
mov
push
cmp
lea
or
inc
out
pop
aaa
dec
adc
test
imul
lods
shl
push
add
dec
loope
or
pop
dec
and
cmpsb
adcb
outsl
push
icebp
push
outsl
mov
sbbl
or
jecxz
xchg
push
mov
jb
rorb
and
lods
or
cmp
push
scas
xchg
stos
or
lods
sbbl
mov
enter
ret
xor
adc
jo
jo
jg
inc
xchg
int
adc
orb
pop
xorl
arpl
and
xchg
cld
pushf
add
cmpsl
ljmp
pop
sub
scas
adcl
jecxz,pn
mov
pop
enter
clc
daa
fsubrl
dec
cmpb
sahf
les
ljmp
jge
ds
xor
push
icebp
mov
je
sbb
push
popa
add
sub
push
shlb
jp
fwait
adc
daa
loopne
jo
lcall
pop
pushf
ds
lret
sbb
add
js
dec
test
enter
pop
jmp
es
or
cs
mov
inc
cmp
jg
dec
bound
addr16
add
pop
xor
inc
adc
movsb
push
add
pop
cmpsb
movsb
jbe
std
insl
add
xor
cmp
int3
xor
xor
in
lods
fs
repnz
sub
fldz
scas
lea
loop
lods
cmp
and
loope
popa
xchg
push
mov
jb
push
inc
cmp
dec
or
repz
outsl
jecxz
xchg
jg
adc
or
pop
enter
cmp
cmpsl
pop
mov
inc
jne
cmp
dec
cli
imul
pop
pop
lea
cmp
adc
inc
insl
cmp
outsb
sbb
jns
inc
or
popa
sub
mov
ror
aas
mov
push
rcrb
cli
add
inc
lret
shrl
xchg
faddl
xchg
sbb
lret
push
and
jns
lods
shll
mov
xchg
cmp
sub
push
adc
data16
add
sub
fs
push
cltd
add
xor
pushf
cs
adc
adc
push
icebp
je
insl
push
test
cld
daa
clc
pop
movlps
mov
pop
dec
js
cmp
mov
mov
cmpsl
mov
mov
push
pop
or
fldcw
pop
dec
fistl
xchg
or
mov
push
es
mov
jp
cmpsl
out
in
jb
test
insl
dec
pop
sahf
or
bound
xor
jmp
rorl
dec
outsb
ljmp
mov
jns
jbe
mov
inc
inc
dec
and
mov
jl
fldl
sub
hlt
xor
push
adc
enter
outsb
gs
xlat
mov
cmc
mov
adc
test
faddl
loope
adc
enter
data16
js
ret
dec
mov
in
jae
fdivrl
pushfw
mov
dec
cld
xchg
push
fdivr
dec
mov
xchg
sbb
fisttps
pop
jnp
les
mov
pushf
cmp
mov
outsl
pop
scas
mov
cmpsl
sbb
outsl
out
mov
mov
xchg
out
and
lretw
jl
sub
adc
adc
std
subb
xchg
ret
pop
sti
ret
outsb
repnz
pop
aas
mov
lret
outsb
and
out
push
push
aad
iret
adc
jmp
fucomip
imulb
mov
xchg
pop
arpl
outsb
jo
sbb
sbb
dec
sahf
jno
mov
clc
dec
pop
addr16
jmp
cltd
push
dec
xor
mov
mulb
fcmovnu
pop
out
lods
icebp
mov
inc
bound
enter
or
shll
dec
pusha
ja
mov
sbb
mov
movsb
jp
add
fldt
push
fisubrs
push
mov
jb
cltd
dec
xor
pop
mov
int
into
pop
stc
push
rol
repz
push
fnstenv
testb
scas
xchg
sbb
mov
les
into
mov
iret
sarl
mov
fistpll
lcall
and
imul
xchg
daa
popf
mov
ljmp
xor
ror
fidivrl
sbb
sti
push
out
cli
xlat
pop
inc
push
outsb
mov
rcll
fdivl
cmpsl
mov
or
xchg
pcmpeqb
jne
rcrb
push
mov
xchg
or
sub
sbb
jne,pt
ret
xchg
mov
inc
pop
in
dec
push
popf
jp
xor
xor
add
outsl
rcll
movsl
loopne
testl
outsl
push
insb
xor
js
aaa
into
enter
popf
clc
ficoml
mov
xchg
clc
sbb
loop
enter
push
pusha
out
dec
lret
fcmove
inc
in
mov
add
int
mov
mov
rolb
call
mov
add
sub
jae
test
hlt
push
int
mov
flds
inc
movsl
or
lods
insl
cwtl
int3
mov
ljmp
pop
adc
sub
push
mov
ds
sub
cmpsl
xor
test
dec
test
adc
add
test
mov
fcoml
cmp
movl
xchg
xor
jecxz
shrl
cmp
mov
push
mov
or
rolb
aas
inc
and
call
inc
cmp
inc
stc
dec
rorb
jl
mov
inc
outsl
jnp
addr16
mov
aas
mov
out
and
mov
lods
xchg
into
xchg
gs
mov
jecxz
lods
jp
xchg
call
add
xchg
or
enter
sbb
sti
dec
mov
dec
stos
hlt
arpl
sub
mov
sub
mov
out
xlat
and
aam
mov
push
test
setae
mov
pop
mov
fisubs
pop
ret
sahf
clc
daa
imul
adc
daa
and
sbb
and
je
push
inc
push
imul
mov
pop
mov
mov
jge
cmp
or
mov
and
in
out
adc
mov
push
outsl
adc
imul
mov
xor
dec
adcl
arpl
jne
movsl
push
push
cld
xrelease
xchg
sub
mov
pusha
dec
ljmp
leave
cltd
cmp
cli
inc
xor
sub
ja
mov
fwait
dec
fisubrs
add
in
cmp
movsl
test
push
jl
pop
push
std
ret
scas
punpckldq
xor
xchg
out
or
pop
pop
fsubs
or
insl
add
inc
ljmp
jnp
dec
cld
cwtl
mov
iret
sub
xchg
adc
aad
mov
lods
pop
push
jnp
ds
hlt
clc
cltd
rcll
mov
sbb
int3
js
xor
inc
insl
cmp
leave
adc
sahf
pop
scas
ret
mov
add
cmp
push
out
dec
cmp
jge
inc
imul
mov
fidivrs
mov
sbb
in
outsl
cmpb
icebp
fsubrp
push
add
sub
bound
lret
mov
push
sub
dec
adc
clc
pop
jp
divb
ret
mov
ljmp
aad
cmpl
pop
nop
inc
xchg
sbb
jmp
push
call
ss
ja
repnz
into
jle
push
cmp
push
or
fdivl
pavgb
lock
add
cmp
aam
pop
pop
daa
sbb
mov
out
mov
mov
int3
inc
fs
push
sbb
push
sbb
lods
dec
dec
int
insb
adc
push
pop
aam
xchg
sbb
call
or
xor
div
ss
or
cs
push
jp
in
pop
xchg
xor
and
dec
movsl
cmp
ljmp
pop
out
push
lods
fmuls
out
inc
movsl
repz
pop
add
pop
fdivrl
loopne
stos
test
mov
out
mov
jge
xchg
pop
xchg
imul
js
add
mov
dec
fxch
pop
fs
imul
mov
sub
rorb
add
add
addr16
pop
mov
lcall
dec
jne
pop
cmp
sbb
jbe
scas
mov
aaa
cmpsb
mov
adc
lea
movsb
sub
adc
and
mov
shlb
dec
cmp
aas
aas
movsb
push
loop
jbe
push
sahf
in
out
popa
mov
xchg
xor
pusha
pushf
mov
xchg
cmp
fldl
cs
cli
xchg
add
hlt
mov
cmp
repnz
lock
pop
cwtl
popf
dec
or
out
push
stc
lret
jo
inc
push
inc
stos
inc
mov
mov
sub
std
shll
pop
cmc
mov
jbe
gs
dec
mov
cli
insl
jg
xor
test
xor
or
lcall
cs
pop
inc
lea
xchg
sub
out
movsl
out
inc
lcall
or
dec
jb
insb
mov
or
xchg
dec
cmp
jle
mov
sub
pop
xor
shll
adcl
negl
xchg
mov
and
jecxz
ret
loope
push
js
in
fsubrs
loopne
cmpl
mov
pop
mov
shll
pop
ja
enter
lea
mov
fcoml
push
inc
ret
mov
insl
inc
icebp
mov
xchg
jne
sbbl
orb
or
mov
and
inc
movsb
int
mulb
mov
fwait
sbb
sbb
fwait
jmp
cmp
pusha
cltd
ret
sub
pop
inc
repnz
es
jne
adc
jns
inc
pop
xor
and
filds
leave
push
inc
or
push
add
fistpl
and
shll
jnp
imul
mov
pop
adc
push
or
sbb
pop
and
movsb
das
mov
fbstp
dec
or
pop
sub
daa
js
stos
push
ds
jbe
mov
jge
mov
dec
push
scas
frstor
scas
push
xlat
xabort
mov
xchg
jb
push
ficompl
add
jo
inc
ja
aaa
push
mov
movsb
addb
pop
gs
jo
aad
mov
mov
ljmp
insl
imul
cmpsb
push
xchg
bound
imul
test
dec
sub
cmp
mov
sbb
sub
pop
pop
stos
testb
in
setl
ds
outsl
loopne
pop
xor
loopne
pop
div
xchg
xchg
filds
shrl
loop
aam
pop
xchg
or
push
xchg
fdivs
mov
pop
repnz
push
xchg
mov
push
cli
cmp
push
push
adc
push
and
ret
or
js
jae,pn
push
push
fs
push
fldenv
xchg
or
inc
test
push
gs
aas
adc
push
loop
fs
sahf
std
shlb
cmp
xchg
sarb
sub
pop
jno
sbb
test
xor
lahf
sarl
xchg
push
mov
stc
in
or
aas
inc
mov
test
xchg
dec
and
jnp
xor
add
dec
fsubs
mov
aam
jge
pop
xchg
cmpsb
pushf
mov
ret
pop
leave
cwtl
fchs
fdivrs
mov
cwtl
repnz
xchg
pop
aaa
jnp
popf
adc
jne
mov
xor
rclb
stc
bound
ret
int3
push
rorb
iret
mov
cmp
lock
das
sbb
repnz
mov
mov
push
fwait
pop
lock
cvtpi2ps
lahf
ds
sbb
cmp
xor
jle
jnp
iret
xor
loopne
into
inc
movb
xlat
xchg
jg
les
divb
mov
int3
push
push
outsb
fsubs
cli
in
loopne
lea
incb
sbb
leave
dec
subb
outsl
mov
xchg
inc
cltd
das
xor
aam
dec
cmpsl
inc
push
jp
and
int
push
jae
out
sub
jnp
icebp
stos
cwtl
add
lea
xor
loopne
sbb
pop
push
mov
orl
mov
cmp
mov
lds
add
jp
loop
pop
fildll
mov
push
inc
arpl
repnz
jecxz
dec
pop
mov
mov
jbe
cs
int3
jns
jecxz
mov
add
shll
mov
das
inc
fmul
xlat
mov
cmp
fdivl
jb
stos
insb
cli
in
jle
cmp
out
sbb
jne
aad
or
mov
repz
inc
ljmp
or
ljmp
sub
mov
popf
dec
mov
cmp
jb
addb
jo
pop
stc
dec
ror
sbb
jp
or
xor
adc
ror
add
jl
pop
sub
add
push
dec
stos
mov
and
in
in
incb
push
decl
sub
in
movsl
mov
js
fcmovnb
popf
add
xor
push
imul
pop
lock
test
int3
pop
xor
shrl
fs
iret
xchg
aam
addr16
negb
decb
stos
pusha
cmpsl
in
dec
ss
hlt
mov
mov
cli
stos
xchg
rol
test
mov
es
inc
in
shl
jl
out
inc
jo
repnz
and
push
in
jl
lahf
popa
flds
repz
js
mov
data16
mov
pop
push
xchg
pop
xor
jbe
fdivl
push
or
ficompl
jmp
jbe
js
into
lods
icebp
test
adc
ja
or
sbb
push
movsl
addr16
call
mov
daa
fdivl
fistps
daa
loope
xor
pop
rol
arpl
ss
adc
faddl
cmpsb
sub
iret
mov
fiadds
push
outsl
lret
or
dec
dec
rorl
xor
das
dec
sbb
stc
xor
inc
inc
mov
in
dec
mov
adc
sub
mov
mov
sub
sbb
iret
or
sbb
jo
hlt
jle
out
icebp
mov
pop
je
in
loopne
mov
xchg
jnp
hlt
das
xor
jnp
out
push
push
pop
imul
jno
pushf
pop
dec
imul
and
mov
dec
mov
mov
xor
fdivp
inc
add
mov
mov
sbb
shrb
mov
cmpsb
enter
cmc
mov
loope
cmp
pop
clc
dec
leave
push
repz
lret
or
xlat
xor
pop
and
add
dec
mov
add
cld
in
or
repnz
push
xor
sub
jge
xor
insb
fcomps
or
fiaddl
push
or
out
test
psubb
add
push
push
xor
mov
aam
add
push
xchg
shrb
int
pusha
cwtl
mul
in
sub
cmp
hlt
imul
loop
push
xor
pop
mov
dec
mov
inc
or
dec
add
push
pop
mov
pop
sbb
jns
shll
add
push
roll
push
popf
jp
shrl
repnz
clc
test
pop
push
sarl
push
jns
mov
fstpt
xchg
add
imul
push
push
add
pop
push
sub
clc
pop
and
dec
mov
cmp
icebp
cmp
loop
fstpt
pop
sub
ret
jmp
pop
push
cmp
push
jns
mov
ss
pop
sub
fnstenv
jmp
push
sub
and
sub
je
cli
mov
sub
mull
xor
dec
jae
pop
inc
stos
add
je
aad
gs
add
add
fcompl
ficompl
das
pop
cmpsl
movsl
rolb
sub
rorl
and
out
mov
cli
es
fnop
mov
pop
arpl
or
mov
test
jle
mov
pop
xchg
inc
dec
fwait
test
dec
mov
pusha
mov
pop
xor
push
dec
shll
mov
push
test
or
pop
aam
stc
lret
in
lcall
js
push
rcl
add
mov
insl
cmc
test
je
adc
adc
xchg
ret
mov
lods
sti
aam
adc
xchg
int
xlat
sub
cmp
jp
psubq
dec
add
or
aas
movsl
add
pop
outsb
addl
push
orl
or
jns
pop
loopne
into
push
dec
jl
fsub
jecxz
push
adc
jne
sbb
xor
ret
leave
cli
lods
xchg
mov
push
or
repz
jbe
xchg
xor
and
inc
push
je
dec
dec
pop
xchg
push
sarl
and
into
div
cmpsb
pop
fldl
add
dec
push
nop
push
repnz
pop
cltd
or
cmc
pop
stos
cmpsl
sbb
mov
jns
adc
sub
sbb
jle
push
xchg
subb
push
pop
inc
push
sahf
sti
or
lea
add
in
stos
xlat
into
orb
xor
ret
mov
sub
gs
inc
hlt
sbb
add
pop
imul
or
jae
mull
cmpb
pop
test
mov
sahf
or
inc
mov
in
inc
subl
xor
cli
movsb
mov
stos
inc
and
inc
sbb
cmpsb
gs
mov
xor
ljmp
adc
lock
not
add
repz
jnp
add
push
mov
mov
mull
mov
or
adc
mov
mov
sub
jae
test
sub
rol
mov
xchg
mov
pushf
lret
pop
fsubrl
xchg
aas
dec
dec
dec
sub
cmpsl
sub
stc
cld
gs
fisttpl
xchg
mov
jmp
shll
jno
out
cmpsl
mov
push
pop
shlb
mov
daa
sbb
xchg
sarb
stos
fstl
dec
lea
mov
or
xchg
xchg
adc
add
in
aad
test
lret
out
mov
lcall
inc
jecxz
add
ljmp
bound
or
or
ret
sbb
mov
or
push
mov
inc
sub
push
mov
cmc
jne
push
sub
sub
jb
sbb
cmc
dec
xor
jbe
cmc
stc
aas
call
fcmovb
lods
aam
adc
fcmovne
adc
pop
jb
leave
sahf
adc
dec
test
fdivs
aam
cmp
enter
xor
dec
inc
js
pop
push
sbb
in
movsb
or
pop
dec
add
lret
in
cmp
push
orl
out
test
ljmp
rcll
cmp
enter
mov
pop
push
xchg
add
or
sti
lock
fsts
adc
fcomp
pop
jp
fsubrp
push
add
add
pop
mov
pop
inc
add
or
xchg
popa
rcrl
xor
push
and
mov
cltd
xchg
repz
jl
mov
xor
insb
push
ja
xor
mov
lods
inc
mov
xchg
in
je
lret
bound
and
mov
jle
aaa
addr16
or
movsl
fisttpl
mov
stos
es
into
rorl
mov
xchg
int
xor
pop
in
pop
pop
adc
add
int3
test
mov
mov
cmp
out
in
lret
stc
cmp
add
lcall
push
mov
out
ret
sub
mov
fimull
xorl
and
arpl
xchg
mov
cmpsl
mov
sub
xchg
shrl
icebp
ret
test
inc
cmp
adc
or
repnz
out
xchg
sarb
mov
sti
cmp
cmp
test
adc
xor
xor
in
int
dec
mov
popf
jno
inc
cmp
mov
push
mov
lods
inc
and
jge
mov
push
xchg
stos
out
stc
push
push
gs
jecxz
cmp
call
push
es
add
dec
pop
sbb
cwtl
aam
outsl
mov
push
rcrb
cmp
mov
adc
aaa
int3
mov
push
mov
cwtl
xchg
js
lcall
adc
xchg
mov
adc
pop
test
and
sub
cmpsb
add
jbe
insl
sarl
xchg
mov
sbb
orb
mov
mov
push
adc
sub
xchg
stos
sbb
out
icebp
sbb
inc
stc
cltd
repz
jns
icebp
push
out
push
out
in
mov
add
jae
sbb
repz
aas
or
dec
into
xchg
test
adc
stc
js
mov
shll
xor
sbb
pushf
push
enter
dec
lcall
rcrb
push
hlt
test
in
adc
inc
test
mov
pop
and
jae
imul
sub
jecxz
das
inc
lea
mov
jg
scas
stc
sbb
mov
sbb
mov
test
pop
sub
fdivrl
cmpsl
dec
sub
dec
das
fs
mov
test
cld
cmpsl
cld
jp
into
repz
les
jb
into
xchg
lahf
sbb
sbb
ja
jno
popf
mov
sti
sub
cmp
test
mov
dec
in
and
faddp
aam
test
pusha
sarl
push
add
sub
cmc
xchg
sbb
leave
rcll
push
enter
cs
dec
js
or
jl
fs
xchg
lahf
sub
cmp
sub
pop
aaa
ljmp
and
pushf
sub
xor
mov
mov
cs
xchg
sub
add
mov
stos
in
jno
lock
mov
int3
xor
fdivrs
sbb
jns
add
scas
aaa
jns
test
aas
mov
pop
aaa
icebp
pop
call
sbbb
in
aas
and
aas
mov
push
add
into
aaa
lods
mov
pop
or
stos
push
rorl
leave
jo
xor
sbb
pop
nop
mov
mov
xor
jmp
sub
xchg
add
pushf
fistpll
or
pop
dec
push
inc
jns
loopne
xchg
sti
mov
stc
lahf
sbb
roll
push
pop
mov
cmpsl
mov
sub
nop
incb
inc
gs
and
popa
xchg
adc
adc
cmp
outsl
or
add
mov
stc
ret
mov
mov
iret
lods
jae
pop
push
jg
jge
xor
ret
adc
xor
hlt
out
sub
int3
push
mov
lahf
lods
movsl
stos
fistps
mov
add
lea
or
xlat
std
mov
pop
mov
shrb
pop
or
cmp
push
arpl
jg
enter
popl
cltd
insb
sub
jmp
xor
test
xchg
in
cmc
jbe
lret
xor
sub
jnp
push
mov
inc
sbb
xchg
inc
push
add
repz
mov
mov
hlt
dec
aam
push
imul
add
jb
jg
sbb
xlat
loop
push
das
adc
aam
imull
adc
mov
adc
mov
xchg
push
sub
adc
push
arpl
add
sbb
ljmp
outsl
rorb
mov
xorb
pop
sbb
pushf
fdivrs
xchg
xlat
test
aad
jae
pop
loope
lock
mov
add
pop
adc
mov
adc
je
popf
cmpl
pop
addb
jb
scas
push
ret
movaps
test
and
imul
shlb
outsl
xor
shl
into
inc
in
sub
mov
mov
xchg
enter
pushf
mov
sub
inc
sbb
xchg
xchg
sub
dec
mulb
dec
call
aaa
jae
sub
arpl
pop
cmp
inc
ja
in
out
jle
aaa
jmp
rcrb
dec
inc
mov
cmpsb
push
fiaddl
mov
mov
push
cmpl
pushf
mov
icebp
mov
mov
jno
sub
out
and
cmp
fwait
adc
inc
adc
mov
pusha
add
fwait
js
daa
cltd
push
repz
xchg
add
mov
aad
cli
or
mov
fs
in
sub
push
icebp
out
mov
cs
subl
inc
xlat
outsb
jmp
test
sti
test
cmp
rcrb
lods
xchg
loope
lds
fdivs
dec
push
mov
jle
das
dec
es
dec
ret
cmp
add
sbb
xchg
jne
scas
add
movsb
jbe
sub
fsub
pop
push
adc
cmc
aad
std
push
or
inc
out
adc
or
inc
mov
mov
inc
mov
jmp
out
jnp
mov
packuswb
dec
ljmp
js
lods
add
pop
pushf
setl
mov
movsb
and
addr16
and
sub
jns
cltd
jns
sub
rol
loop
inc
add
push
pop
out
jnp
cli
push
adc
int3
cmp
rcr
jmp
and
dec
xchg
dec
das
cmp
jg
inc
or
fcompl
adc
mov
mov
pop
test
push
mov
xchg
mov
repnz
pop
sbb
dec
add
cli
sub
sti
mov
and
insb
mov
add
mov
jge
sub
mov
out
imul
scas
jo
mov
jb
fistps
xchg
push
js
in
push
je
sarl
in
cmpsb
pop
cltd
sbb
push
bound
jmp
pop
insl
mov
mov
stos
xchg
repz
pop
push
push
popa
scas
mov
or
mov
fwait
pop
insl
jae
cmp
dec
or
dec
cmpsl
jecxz
aam
xor
scas
mov
inc
ret
arpl
sub
push
fsubrs
out
mov
jnp
fsubs
xchg
call
xchg
popa
pop
push
jp
cmp
inc
mov
fmuls
jecxz
adc
sar
cltd
inc
mov
push
jmp
daa
int3
mov
sub
jmp
insl
jne
push
xor
paddd
sbb
test
push
add
jno
lods
dec
or
imul
sarb
loopne
rclb
hlt
jae
mov
mov
scas
repz
pop
sahf
das
int3
xchg
pop
or
pop
add
imul
ret
ljmp
and
daa
mov
int3
faddl
in
and
xor
mov
mov
mov
add
or
mov
mov
pop
dec
cltd
jecxz
mov
inc
ljmp
mov
dec
push
pop
add
pop
stos
mov
mov
pop
pop
adc
adc
adc
sub
pop
and
pop
add
fisubl
cmp
xchg
dec
xor
jmp
addr16
test
cmpsb
sub
and
sbb
inc
jb
in
pop
call
mov
daa
or
cmp
xchg
xchg
in
inc
pop
movb
adc
and
jp
sub
jns
lea
pop
cmpsb
push
out
inc
sbb
aaa
addr16
xor
xchg
inc
add
or
loop
adc
jg
lcall
dec
mov
add
or
ret
sti
cmp
dec
fcoml
jns
push
ljmp
cmpsb
lret
movsl
test
ss
pop
lahf
inc
ss
sub
xchg
fdivp
adc
aas
roll
out
add
and
xor
jmp
loope
push
pop
in
push
push
sub
cmp
je
mov
mov
lock
pop
int
adc
sub
outsb
cmp
xor
jmp
icebp
jno
stc
cld
pop
mov
sub
mov
add
mov
add
das
aas
jmp
sub
cmp
push
insl
jmp
lds
aad
dec
cmp
repz
cmp
jbe
nop
movsl
mov
pop
inc
sub
xchg
mov
or
or
lahf
mov
repz
mov
sub
bound
cmpsl
addb
in
stos
test
or
jo
scas
movsl
lods
fbld
xchg
aas
and
cltd
or
xor
pop
lahf
mov
inc
rorb
aam
rcrl
inc
xlat
mov
pushf
add
or
fs
mov
cltd
mov
cmc
test
inc
sub
jno
pop
and
dec
jmp
dec
dec
mov
add
cmpsb
xor
jecxz
clc
and
push
hlt
sbb
aaa
push
inc
test
mov
repnz
std
sub
cmp
jbe
aas
out
add
sub
mov
leave
xchg
leave
add
rcrb
ret
mov
clc
and
xchg
stos
frstor
xchg
add
fisubl
push
jbe
iret
fcmovb
sub
inc
jge
mov
inc
fimuls
cmp
mov
xor
inc
jns
inc
push
ret
jle
xchg
sti
and
add
lods
jp
shlb
addr16
and
and
lret
mov
orb
dec
xor
stc
xlat
gs
jp,pn
push
adc
mov
into
fsubrl
fisttpll
adc
xchg
inc
insl
or
jmp
fisubl
pop
sub
ds
shlb
mov
mov
xor
daa
jb
cmp
sub
lods
xor
call
xor
jo
int3
dec
iret
jns
movsl
push
pop
shll
aas
bound
xchg
sbb
sbb
jne
mov
testl
mov
xchg
adc
std
in
cmp
push
loope
pushf
cmpb
or
popa
ss
bound
mov
inc
rol
mov
xlat
adc
enter
lahf
insb
lret
enter
add
and
rclb
pop
cli
cmp
pop
or
and
imul
mov
sbb
pop
jmp
lret
test
push
out
sub
test
adc
lods
inc
xchg
sub
cltd
imul
pop
pop
gs
mov
in
mov
xchg
out
jg
xor
jle
inc
cmp
push
fisttpl
mov
xchg
jmp
jmp
jg
pop
outsb
iret
or
int3
inc
mov
xchg
lret
dec
loopne
sbbb
daa
fimull
lret
lods
inc
xlat
sbbl
aaa
xor
es
sbb
scas
js
arpl
rorl
sarb
jb
lea
jmp
mov
lods
inc
aad
icebp
sbb
notl
fwait
popa
out
stc
adc
cmp
or
hlt
mov
jg
sbb
inc
xor
int
mov
xchg
cmp
mov
mov
ja
pushf
jl
mov
xchg
sbb
push
inc
ljmp
out
xor
fldt
loope
aas
pop
jae
test
adc
jnp
out
pop
adc
nop
repz
outsb
sub
int3
mov
fdivl
jno
jl
push
cli
xlat
adc
sti
mov
pop
mov
cwtd
popf
push
out
jl
sub
out
xor
xchg
pop
push
jle
lret
dec
dec
fstps
inc
pusha
fcomi
push
shll
cwtl
or
jo
lock
inc
fimull
stc
xchg
add
adc
jbe
les
bound
mov
aas
pushf
mov
pop
ret
sub
adc
ss
test
insl
mov
out
xchg
aad
aad
movsl
daa
pusha
xchg
mov
aad
sbb
std
push
lret
inc
cmpsl
mov
imul
aam
adc
jmp
dec
ss
fsubrs
repnz
cmpsb
push
ljmp
xor
mov
gs
pusha
dec
in
dec
push
in
cld
pop
addr16
repz
rorb
xor
fcoms
adc
repz
outsl
ret
sub
fnstcw
jns
dec
xor
mov
pop
xor
jge
int3
rclb
movsb
jno
or
mov
js
jnp
lcall
cmc
mov
nop
insb
sahf
push
imul
out
pop
push
xlat
pop
popa
jns
fmuls
idiv
imul
and
iret
sbb
xlat
xchg
cmp
loope
sub
jle
imul
add
dec
and
aaa
xchg
movsb
cmpsb
inc
nop
push
xor
cmp
and
out
stos
or
ja
jb
mov
test
aam
xchg
outsl
mov
fldcw
jl
xor
pop
jb
stos
pop
or
xor
and
pop
mov
nop
push
ret
popf
or
mov
or
push
jmp
std
sub
push
add
test
inc
mov
mov
in
adc
mov
int
pop
adc
inc
scas
xor
or
lods
sub
fucomi
cmp
leave
call
scas
or
cmp
cmp
push
in
aas
xor
mov
leave
enter
mov
out
push
bnd
popa
inc
inc
stc
mulb
cmp
int
pop
xor
mov
mov
inc
ss
repz
aas
lock
sbb
pop
dec
sti
mov
mov
stos
cli
outsb
inc
cmp
add
out
jbe
into
add
push
pop
lret
add
cs
enter
inc
js
test
sub
loope
adc
pusha
jae
mov
jb
subb
popl
xchg
lock
push
daa
and
test
jnp
or
imul
popf
dec
scas
xchg
or
xchg
sbb
jl
rcll
shll
sbb
or
push
adc
jg
pop
out
and
pusha
stos
insl
rcl
mov
xor
push
cmpsl
jle
dec
inc
cwtl
xor
inc
test
lret
cs
jo
sub
push
sbb
popf
rcr
pop
pusha
jb
mov
jo
shlb
fcomi
xor
rorl
jecxz
addr16
testb
jge
aaa
shrl
jge
push
mov
xor
and
fimull
sbb
in
fistps
sbb
insb
rcrl
dec
jae
std
jmp
sub
adcl
mov
dec
out
fldt
hlt
in
adc
cwtl
out
sub
sbb
sub
or
das
lods
pop
int
subl
hlt
data16
adc
insb
pop
push
loop
adc
psubusw
xchg
mov
out
sub
push
adc
rolb
jg
ss
dec
je
mov
and
add
nop
fiadds
jl
adc
inc
jb
mov
in
rcr
test
inc
stos
daa
lods
mov
and
sbb
push
imul
sarb
out
adcl
daa
inc
mov
dec
popa
cwtl
jne
push
scas
cmpsb
repz
test
loop
clc
xchg
lcall
mov
jnp
rcrb
lods
pop
rcrb
mov
outsl
or
pop
jns
sbb
sub
rclb
sti
popf
fsubl
stos
std
adc
outsb
xchg
and
sub
ja
fnstenv
ljmp
pushf
bound
xchg
xor
push
mov
sub
or
cs
mov
or
hlt
inc
ds
cmpsb
dec
movsl
cmp
adcl
dec
sub
dec
sub
sbb
ljmp
add
adc
stos
pop
sbb
jne
and
sub
push
sahf
xor
mov
fldpi
mov
movnti
add
cmp
lock
pop
scas
xchg
xchg
ret
js
rcr
or
fisubs
cmpl
mov
dec
movsl
mov
fistpll
pop
je
mov
loop
pop
and
jnp
mov
out
fisttpl
jo
or
dec
and
enter
add
jbe
cltd
jnp
fisttpl
jl
icebp
and
lock
fdivs
jl
adc
and
cwtl
sub
add
rorl
cmp
lock
xor
jne
xor
lcall
iret
jg
iret
jbe
mov
mov
int
fs
mov
pop
push
in
mov
flds
repnz
jg
dec
push
mov
out
mov
sbb
mov
sbb
cmp
fnsave
adc
adc
or
add
mov
aam
movl
mov
and
mov
insl
mov
jp
iret
aaa
jno
adc
add
in
ss
aas
jnp
rolb
shr
pop
nop
cmc
mov
mov
test
dec
or
nop
popa
mov
hlt
mov
pusha
icebp
sahf
push
xor
inc
in
lret
out
xchg
xchg
sbbb
mov
rorb
mov
nop
in
fstpt
inc
cmpsl
lock
pop
mov
jb
icebp
mov
lahf
shlb
andl
cwtl
sub
loope
test
mov
cltd
inc
mov
jns
cld
pop
pop
inc
test
js
add
out
xor
jo
cmpsl
xchg
cmpsl
cmp
pop
mov
imul
in
inc
jmp
out
sahf
sbb
mov
mov
cmovns
roll
pusha
dec
dec
rcll
sbb
cmpsl
cmp
jne
aaa
pop
mov
enter
pop
inc
pop
inc
fidivrl
cmp
mov
rcrb
add
mov
sbb
adcl
xlat
push
add
sbb
or
inc
ljmp
mov
pusha
jge
jo
sub
cmc
push
adc
ret
outsl
inc
ret
xchg
mov
push
and
or
enter
mov
in
cmp
test
in
jmp
lods
push
cmp
lds
adc
xchg
aad
imull
je
xchg
cld
pop
xlat
fisubl
fistps
sub
enter
lret
xchg
xor
push
adc
loop
sahf
dec
out
xor
mov
push
xlat
mov
inc
cmp
push
dec
pusha
cmp
cltd
mov
cmp
xchg
in
sbb
shrl
mov
testl
outsl
adc
cld
inc
push
inc
mov
mov
xchg
divb
mov
push
push
ss
xchg
or
adc
call
push
xor
call
or
fs
mov
and
dec
or
lds
cmc
jmp
lock
sahf
aaa
mov
scas
xchg
pop
cmpsl
ud1
rorl
lret
test
or
add
fmul
pop
mov
mov
shl
ret
jmp
inc
movsl
xchg
cltd
cli
scas
fstpl
test
popa
inc
ljmp
xor
sahf
in
ds
subl
mov
push
shr
inc
insl
imul
fs
jmp
daa
out
xchg
mov
lds
addr16
rclb
loope
push
mov
jmp
fs
inc
pop
imul
inc
pop
or
cwtl
add
in
xor
shr
pop
in
out
out
arpl
xor
xor
sbb
aaa
fcoml
int
add
adc
mov
in
push
mov
ja
jo
pop
out
hlt
push
pop
stos
push
ret
mov
xor
inc
scas
pop
ja
pop
out
mov
mov
and
and
repnz
into
inc
fidivrs
lods
fdivrs
sar
imul
ja
lahf
sbb
jbe
dec
push
andb
repz
in
or
cmpsb
shlb
pop
push
and
cmpsb
xor
enter
int3
sub
aam
stc
cmc
inc
lret
test
jo
divb
pop
iret
mov
das
sbb
lods
mov
sahf
test
add
jge
inc
sbb
out
xchg
fdivr
add
adc
xchg
daa
push
bound
sbb
pop
mov
stc
divb
pushf
xor
imul
mov
mov
shll
imul
sbb
popf
out
insl
dec
jmp
stos
and
xchg
leave
sahf
xor
call
sub
pop
rolb
fidivl
hlt
lret
aas
mov
pusha
push
shlb
jb
nop
pop
cmc
js
aad
adc
inc
sub
xor
je
fwait
xchg
jno
fistl
jmp
loope
push
mov
movsl
sbb
insb
ja
push
std
stos
sub
cmp
jns
push
pop
pop
movsl
insb
mov
mov
out
jb
test
je
pop
data16
loope
cmp
cld
jno
mov
outsl
shlb
loopne
je
into
mov
dec
into
lcall
mov
mov
jne
pop
popa
jp
or
into
out
jmp
jno
imul
cmpsb
es
inc
mov
or
mov
lods
xor
sub
push
out
pop
jp
sbb
pop
inc
xor
nop
xor
mov
lret
jno
in
inc
loop
cmpsb
clc
insb
cmpl
cwtl
and
xchg
sbb
sbb
setae
inc
cmp
sub
rcl
inc
stc
or
aaa
rorl
push
stos
mov
mov
je
push
sbb
xorb
das
mov
xchg
fwait
sbb
rcll
scas
subb
cmc
loope
das
addr16
mov
es
call
inc
adc
add
scas
mov
sbb
sub
fdivs
dec
fnstenv
ljmp
andl
bound
das
and
addb
inc
xchg
les
push
popa
cmp
enter
mov
xlat
fisttpl
xchg
mov
mov
cmc
icebp
pop
imulb
sbb
shrl
stc
jnp
xor
or
dec
jb
rcr
mov
sub
fs
js
mov
xchg
stos
sti
jge
cmc
push
outsb
and
inc
inc
daa
dec
xchg
inc
and
ds
cmpb
push
in
pop
or
xchg
pop
repz
xchg
mov
in
incb
jecxz
and
push
shlb
mov
sti
pop
sbb
aam
pop
xchg
mov
shlb
cwtl
or
mov
ret
bound
cmc
test
sub
push
inc
cwtl
push
rorl
pop
xor
add
or
cmp
sbb
push
dec
lock
sahf
dec
ficompl
sub
inc
mov
hlt
in
push
lock
push
out
ljmp
mov
out
add
xor
movsl
ret
mov
add
push
pop
insl
cld
lock
add
adc
sub
std
inc
xor
stos
or
xchg
or
call
je
jmp
adc
mov
add
test
and
scas
add
or
ja
adc
stos
clc
or
dec
fiadds
mov
push
pop
repnz
pop
pop
add
mov
jo
fcmovu
push
fwait
mov
inc
scas
jmp
push
cwtl
call
mov
shl
mov
add
pusha
adc
jnp
loop
mov
sahf
pop
mov
gs
fwait
das
mov
lret
push
test
testl
pusha
cltd
inc
sub
jecxz
ficoms
jp
pop
xor
inc
xchg
ss
xchg
in
stos
mov
subl
adc
orb
dec
stos
mov
push
hlt
add
int3
inc
and
cmc
outsl
jo
mov
or
mov
cwtl
rcrl
cwtl
push
xor
into
loop
mov
pop
stos
cmp
push
mov
movsl
ss
ljmp
addr16
ljmp
push
rorl
and
sub
out
mov
xchg
pop
lea
lahf
add
cmp
push
mov
popf
adc
xchg
or
mov
std
test
pop
mov
ror
xchg
das
fcmovu
std
subb
pop
loope
dec
pop
sub
sub
dec
cmp
xchg
shlb
fadd
and
lock
jle
mov
outsl
arpl
stos
or
xchg
bound
addl
lret
dec
pop
cmp
frstor
subl
loop
lea
sbb
sub
xchg
cmp
shrb
xchg
pop
ds
add
in
in
or
pop
mov
cs
lods
imul
sub
sbb
fnstenv
xor
inc
adc
hlt
push
dec
idivl
xor
icebp
rolb
mov
xchg
add
mov
xor
ret
std
cs
jg
psubb
dec
mov
mov
fsts
call
nop
nop
js
iret
pop
dec
cmpsl
stos
or
pop
cltd
dec
sub
xchg
call
out
in
push
or
adc
or
xchg
sbb
mov
add
mov
roll
fcomip
out
aam
xchg
cmp
mov
pusha
sbb
fcoml
and
sbb
or
push
decb
mov
bound
in
sahf
xchg
insl
sbb
hlt
pop
les
push
pop
shlb
or
fistpl
mov
pop
sub
mov
andl
leave
lock
sub
jmp
xor
or
xchg
fnstsw
xchg
gs
outsl
hlt
pop
fstpl
insl
ret
jae
sahf
xchg
push
mov
xor
inc
push
fcmovnb
jnp
and
imul
xchg
out
fwait
loope
mov
cwtl
gs
divb
push
call
push
and
sbb
in
lock
aaa
cmpsb
mov
add
pop
pop
push
shll
cli
imul
mov
cmpsl
lock
sar
leave
pop
loope
in
ss
loope
push
fadds
jbe
testl
add
scas
out
add
push
cmp
stos
push
mov
or
mov
and
lods
jns
push
add
xor
pop
outsb
mov
fnstsw
add
add
pop
movb
cs
test
loopne
cmp
dec
imul
ss
push
adc
popa
std
test
out
mov
jbe
sub
pop
xchg
xlat
xor
or
sbb
jbe
cmp
cmp
shll
push
add
outsl
xchg
ds
mulb
and
sub
imul
mov
cmp
pop
rclb
out
pop
adc
xor
jnp
shr
sub
bound
cwtl
repz
movsb
mov
push
inc
or
mov
ja
pusha
mov
sbb
aas
out
adc
mov
add
sub
pop
dec
mov
cld
fnstcw
adc
sub
data16
push
mov
in
addr16
lods
iret
mov
stc
ja
cmp
movl
or
or
sub
mov
jecxz
jecxz
fdivrl
mov
pop
pop
xor
cmpl
popf
sub
mov
push
nop
xchg
shl
scas
jo
insl
and
icebp
in
dec
test
ja
add
sub
push
or
scas
insl
inc
shlb
lods
mov
inc
int3
mov
add
outsb
ret
cmpsb
xchg
lods
or
fwait
cmp
das
mov
and
shlb
sub
lock
inc
mov
dec
mov
leave
pop
lods
push
les
adc
push
sub
bound
add
call
pop
cmp
mov
divl
mov
rclb
mov
aaa
test
lds
or
aas
and
xchg
repz
xchg
jae
into
imul
scas
es
or
das
and
movsb
imulb
lret
loopne
loope
mov
fisubl
aam
pop
cwtl
sbb
jae
mov
or
mov
mov
pop
dec
sti
mov
in
scas
mov
stos
ljmp
xor
jecxz
stos
icebp
mov
and
imulb
movl
hlt
adcl
aaa
mov
fidivrl
jge
dec
test
rcll
cmp
adc
ficomps
mov
ljmp
dec
push
repnz
fwait
pop
fcomi
shlb
xor
aaa
rcrb
mov
cmp
mov
xchg
dec
fcmovne
mov
xor
pop
inc
in
addl
fstps
loope
xchg
je
jl
xchg
dec
cmpsb
mov
xor
cld
out
xchg
mov
push
xchg
popa
xor
xor
inc
je
enter
mov
sub
es
int3
pop
fadd
mov
xor
sbb
sub
test
rdtsc
push
lcall
ss
pop
jmp
dec
pusha
cmovne
fidivrl
jb
jno
sub
push
or
test
lods
das
dec
imul
dec
push
mov
jge
je
jnp
pop
push
xchg
sub
xchg
mov
mov
in
mov
icebp
loope
xchg
jmp
xor
dec
js
incb
xor
xchg
hlt
mov
nop
cmp
sub
sub
fwait
xchg
iret
subb
call
dec
dec
jbe
enter
cmc
lahf
call
mov
jle
mov
mov
imul
ja
in
shll
ret
or
je
leave
mov
mov
fwait
and
push
mov
enter
outsb
or
xor
icebp
repz
divl
inc
jge
repz
les
and
clc
fdivl
and
xchg
arpl
cmp
mov
popa
mov
jge
pusha
test
sbb
loope
sub
ret
pop
push
mulb
aam
fisttps
xchg
sarb
mov
push
movsl
xchg
out
fidivrs
fimuls
outsl
lds
cmp
dec
mov
in
pop
push
dec
fadd
aam
jp
popf
sub
pusha
jle
test
add
cwtl
dec
pop
jns
loop
mov
jge
out
push
mov
push
je
lods
cld
push
das
add
ljmp
fincstp
test
ret
sub
mov
fdiv
push
and
pop
outsl
jle
pop
pop
inc
adc
mov
xor
loop
cmp
es
cmpsl
cmc
add
stos
cmpsb
sub
imul
aaa
lods
jecxz
jl
dec
jge
das
adc
inc
lods
fwait
shlb
imul
mov
xchg
iret
into
cmp
inc
xor
jo
and
jne
out
repz
test
xchg
ja
jno
lods
pop
jmp
sub
loope
inc
leave
jbe
shrb
inc
imul
outsb
clc
sub
in
ds
loopne
shrb
jecxz
out
and
mov
fnsave
or
mov
push
cmp
xchg
cli
xchg
sbb
pusha
mov
jb
push
mov
lods
iret
and
push
inc
cmp
and
ljmp
pop
mov
or
insb
in
xchg
repz
les
das
aaa
inc
inc
scas
insl
xor
fucomi
and
imulb
mov
fists
cwtl
shll
out
xchg
add
bound
dec
int
leave
lret
std
fdivs
xor
cltd
add
dec
shl
rcrl
in
pop
outsl
gs
push
mov
cli
pop
push
in
repnz
jecxz
out
shrl
iret
add
and
lret
lods
add
xchg
mul
mov
push
into
jecxz
int3
or
lret
push
jne
pop
pop
dec
and
scas
in
and
clc
out
mov
inc
cmc
test
add
mov
rol
and
stos
sub
fadd
incb
sub
sub
mov
adcb
pop
dec
mov
stos
inc
xchg
xchg
dec
inc
mov
outsl
arpl
cmp
adc
cmp
sub
and
fidivrl
jmp
pop
hlt
inc
sub
pusha
hlt
sub
dec
nop
rcll
and
push
rcrl
add
mov
pusha
xorl
stc
and
mov
mov
sub
inc
pop
jbe
outsl
xlat
fdivs
add
mov
sbb
add
xor
fwait
loopne
sub
push
mov
pop
add
into
jb
or
clc
pop
sbb
wbinvd
push
cmc
cmp
mov
cmpb
mov
jo
sub
pop
aad
xor
pop
int
dec
xchg
cmpsb
pusha
push
xlat
adc
outsl
out
int
cmp
in
aam
xchg
adc
jmp
cmpsl
mov
andb
js
adc
or
data16
flds
mov
add
jmp
lcall
stc
dec
loop
scas
jmp
je
dec
fnstenv
icebp
lahf
adcl
aad
in
cmp
mov
popa
push
mov
dec
orb
adc
sbb
mov
call
and
loop
cwtl
jle
xor
xchg
stc
pop
pmaxsw
sbb
sti
add
aam
adc
sub
mov
inc
mov
ja
pop
imul
out
sbb
pop
add
inc
push
aad
dec
cli
scas
mov
cmp
ficoms
inc
xchg
cmp
cltd
jnp
in
scas
adc
xlat
push
shlb
lods
inc
out
int3
stos
punpckldq
cwtl
adc
insl
pop
add
insl
mov
dec
dec
cmp
adc
mov
push
add
push
ds
hlt
or
dec
insl
cs
sub
daa
clc
mov
shlb
fistpll
dec
xchg
outsl
jae
mov
and
cmpsb
lods
out
push
add
inc
in
inc
jl
fistpll
cmp
xor
mov
cmp
cmpsl
or
xchg
cmpsl
sbb
cmp
movsb
daa
pop
rcl
ret
mov
in
dec
add
xor
inc
dec
push
ret
push
inc
jmp
daa
sub
jbe
jp
xor
scas
inc
arpl
rolb
push
nop
imul
addr16
insl
xor
pop
jmp
push
dec
xor
fs
mov
add
pop
insl
or
adc
lds
jbe
lods
cmpsl
mov
fldt
or
adc
out
call
pop
decl
push
arpl
pop
movd
shrl
dec
add
pop
jl
mov
lock
fimull
adcb
pop
fidivrl
inc
xchg
mov
mov
push
pop
in
push
inc
cmpl
push
cmp
xchg
cli
leave
fwait
sarl
mov
loop
pop
jb
fwait
push
test
arpl
push
sub
cmpsb
dec
push
pop
xor
stos
pushf
inc
push
mov
mov
arpl
adc
and
xor
mov
jmp
jb
cwtl
mov
inc
mov
mov
add
mov
arpl
cmp
lea
fs
ljmp
aas
aam
jecxz
repz
sbb
sbb
in
inc
xchg
aad
repz
add
and
cmp
testl
aam
test
mov
pop
arpl
fdivl
push
lods
adc
fxch
push
push
push
scas
pop
mov
popa
sarb
add
pop
int
stos
scas
jo
dec
aad
jnp
pop
sbb
mov
lret
jmp
cmp
loopne
pop
xchg
cli
stc
std
adc
add
cmp
insb
ja
pop
imul
mov
movsl
dec
sbb
or
sbb
icebp
iret
cmp
push
cmp
pop
push
and
and
out
outsb
enter
pop
and
mov
outsb
ss
inc
cmpsb
lahf
xchg
or
xchg
xor
loop
cs
out
scas
shll
mov
sbb
fldcw
and
fisttps
inc
jne
mov
dec
mov
jo
enter
lods
lcall
daa
icebp
dec
fisubs
cmp
stc
lods
cwtl
aas
clc
sbb
cmc
mov
shlb
jo
dec
mov
sbb
sub
lock
jnp
out
cmp
lret
dec
in
or
add
pop
inc
aaa
mov
ss
jg
or
in
fdivrl
outsl
jb
add
negb
or
sbb
into
inc
scas
frstor
stos
gs
daa
jae
push
sbb
insb
jne
and
imul
stc
fcoms
movsb
mov
repz
sbb
js
shr
cmpsl
mov
xchg
fnop
pop
imul
mov
std
ss
dec
and
fmuls
xchg
push
loop
xchg
mov
or
les
loopne
leave
push
adc
mov
pop
ljmp
adc
and
inc
imul
faddl
xchg
dec
xchg
mov
test
mov
pop
mov
dec
outsl
andl
jo
cmp
jp
pop
cmp
push
dec
push
test
push
fnsave
fmuls
clc
movsl
stos
pop
jl
inc
mov
out
fdivrl
repz
fdivs
gs
add
repz
jb
push
sub
bound
jbe
jl
pop
adc
jp
and
pop
or
jnp
idivl
jmp
xchg
data16
or
pop
call
push
fldenv
xor
test
lret
xchg
and
aam
sub
cli
repz
dec
and
pop
shl
and
mov
cwtl
or
xchg
push
mov
mov
inc
jo
pop
subl
pop
in
xor
xchg
addr16
push
stos
psubsb
mov
les
jmp
xlat
lret
arpl
push
sub
fimull
or
movsl
add
or
or
out
lock
arpl
je
sbb
add
sti
mov
xchg
inc
jns
roll
jno
lret
add
jecxz
lock
loop
inc
lret
sbb
xchg
aas
jne
cmp
arpl
fidivrl
cltd
out
inc
rcrl
jbe
xorb
mov
jg
movb
cld
inc
push
push
jb
ret
add
sbb
pusha
insb
sub
sub
outsl
pushf
pop
dec
hlt
mov
jl
sub
xlat
sbb
cmp
adc
loopne
out
or
andl
add
xchg
aam
sbb
and
int
addb
int3
jmp
test
sti
mov
push
xlat
or
mov
jnp
out
scas
xchg
cmpsl
movsl
push
and
xchg
mov
or
mov
mov
mov
xlat
push
add
in
xlat
xlat
js
pop
mov
mov
les
or
inc
xor
pop
stc
in
repnz
pshufw
jns
xchg
fadd
mov
shl
mov
mov
cmp
mov
xor
fcoms
and
inc
cmp
out
xor
adc
mov
mov
push
mov
xchg
xchg
in
test
arpl
mov
test
xchg
sbb
inc
push
outsl
ss
adc
xlat
or
insb
std
xor
mov
std
sbb
lret
test
inc
inc
test
sbb
lret
push
mov
les
mov
jo
out
xchg
outsl
inc
ret
jecxz
cli
push
push
mov
xchg
add
xchg
push
psrld
jmp
scas
iret
insl
lods
jg
clc
out
mov
movsb
cwtl
inc
mov
jne
inc
cmc
cmpsb
cwtl
scas
lret
push
daa
fldcw
dec
pop
mov
jbe
mov
pop
cmc
fisubrs
fildll
out
xchg
xor
mov
sbb
data16
vsubps
mov
cmp
in
mov
nop
shlb
and
adc
pop
cltd
xor
jnp
scas
add
fsts
xor
sahf
pop
add
push
pop
movsb
fdiv
mov
mov
outsb
ss
inc
imul
push
pop
das
jg
push
fs
and
sbb
in
test
hlt
inc
xor
dec
jle
fnstsw
xchg
mov
jp
mov
xchg
dec
je
sahf
jo
jmp
lock
cli
inc
sbb
dec
mov
insl
jns
jle
dec
xor
jmp
call
sub
les
enter
femms
push
cmp
inc
jb
pop
andb
repnz
jmp
push
push
xchg
scas
jbe
scas
sbb
mov
or
cmp
sub
js
mov
mov
push
mov
xor
js
insl
jb
adc
push
mov
aam
vpmulhw
and
fists
lret
sbb
loop
adc
shll
mov
pop
dec
xchg
jae
loopne
jge
mov
lods
xor
dec
aad
in
jb
js
iret
aas
ret
nop
fisttpll
mov
adc
lods
aaa
jecxz
xchg
mov
jnp
lahf
addr16
loop
and
dec
push
cwtl
int
addr16
imul
add
xor
and
cmpsb
daa
loop
loop
js,pn
cmp
lahf
outsl
repnz
jae
aad
or
mov
mov
adc
outsl
iret
add
lea
cmp
movsb
imul
mov
xchg
std
dec
xchg
nop
dec
mov
pop
pop
inc
jo
js
test
lahf
and
inc
inc
fs
int3
mov
push
mov
imul
jae
jl
inc
pop
add
mov
mov
das
test
push
cmc
fiaddl
pusha
jbe
cld
mov
stos
cld
adc
push
pop
ja
jle
sti
nop
out
jl
xor
and
adc
aaa
mov
arpl
jb
int3
add
sbb
cld
std
mov
cmpsl
xrelease
pop
addr16
xchg
arpl
sub
loope
mov
sbb
add
push
pop
and
lcall
icebp
add
js
cmp
adc
ficomps
filds
add
leave
lret
fidivl
call
fistl
test
jle
aas
mov
push
sbb
inc
push
test
adc
mov
adc
scas
sbb
scas
rorb
cmp
mov
mov
lock
inc
rorl
sbb
daa
aaa
add
xchg
mov
popl
lds
jle
jae
movsl
cli
add
xchg
inc
cmp
xor
mov
incb
insl
fsubr
mov
imul
mov
inc
push
fcmovnbe
mov
ja
lcall
nop
xor
mov
out
lcall
ret
daa
iret
dec
sti
popa
inc
stos
out
sub
andb
mov
mov
lods
xor
popa
push
lret
lock
in
push
pop
loop
jmp
xchg
movsb
sbb
cmpsl
pop
sbb
cltd
in
mov
sbb
gs
movsb
bnd
movb
out
fiadds
repnz
sbb
test
pop
inc
aas
fiadds
ss
movsb
xlat
test
or
fcom
mov
xchg
add
les
loopne
addr16
fsubl
jl
add
stos
sahf
fadds
psadbw
movsb
cmp
mov
jo
inc
enter
sub
iret
outsl
cmc
push
adcl
add
cmp
pop
mov
loopne
je
subb
out
jge
repnz
pop
sbb
mov
and
int
pop
ret
call
ja
loop
jmp
dec
hlt
mov
pusha
fsubl
mov
push
xor
int3
xor
into
cmpsb
sub
dec
movsb
out
hlt
into
mov
inc
add
iret
pop
in
sub
mov
popa
and
xchg
fildll
inc
or
xchg
inc
mov
insb
mov
fidivs
sub
or
stc
mov
ljmp
insl
xchg
and
xchg
xor
cmpsl
sbbb
repnz
xchg
icebp
sbb
or
loop
sbb
xor
xchg
addr16
sbb
xchg
imul
aas
mov
int
sbb
arpl
cwtl
sahf
mov
push
rol
mov
movsb
mov
xlat
cmpsl
adc
enter
loopne
cmpl
mov
push
push
inc
adcl
jo
sub
in
inc
sbb
call
mov
jo
movsb
pop
loop
ror
xchg
test
mov
mov
addr16
jp
rcr
adc
xchg
into
push
stos
popa
pop
push
dec
movsl
insb
push
jmp
and
adc
je
xor
loop
mov
out
int3
mov
insb
aaa
add
orl
in
pop
insl
fmul
loope
push
sbb
push
lds
dec
inc
xchg
test
cmp
mov
inc
test
xor
icebp
in
xor
loopne
int
sbb
sbb
faddp
xor
push
push
jecxz
add
popf
mov
push
push
inc
adc
pop
mov
push
dec
in
sub
add
notl
or
push
xchg
ret
adc
lcall
stos
jne
sbb
sub
icebp
cli
sbb
shlb
xchg
xor
push
dec
iret
outsl
mov
stos
pop
push
mov
push
lods
ss
xchg
cmpsb
mov
dec
cmp
jg
repz
cltd
movb
aad
imul
inc
jmp
mov
mov
and
mov
pop
cmp
movl
lret
out
popf
cli
push
or
push
into
mov
dec
cltd
sub
jmp
lock
ficoml
arpl
ds
xor
xor
mov
sbb
xorl
adcl
jmp
dec
rcrb
mov
rorb
push
cmp
or
xchg
stc
xchg
lret
jmp
fs
jo
out
mov
mov
loope
mov
adc
dec
mov
and
mov
push
cmc
or
roll
loopne
sub
jp
xchg
iret
movsb
xor
mov
outsb
add
jae
mov
dec
in
push
rcl
jbe
mov
test
das
jbe
add
sbbb
push
sbbb
sub
xor
in
daa
fldl
arpl
add
repnz
imul
push
out
imul
or
shlb
shrb
out
iret
push
mov
push
scas
outsl
ret
sbb
incl
jae
test
loop
push
gs
movsl
stc
fwait
clc
das
mov
mov
xor
les
or
lahf
dec
pop
rcll
xor
cli
mov
out
ret
js
into
mov
and
addr16
and
mov
js
subl
stos
je
call
fs
sbb
fwait
insl
fadds
xchg
and
sti
add
mov
jge
push
fstps
inc
cwtl
out
sti
push
rorb
sbb
sahf
loop
sbbl
flds
dec
cmpb
xchg
daa
out
sub
arpl
das
push
pop
or
outsl
loope
adc
push
lret
mov
jmp
je
mov
push
dec
xor
xchg
push
mov
je
aam
adc
movsb
fmuls
subl
pop
cmp
xor
xor
in
call
fucomip
das
scas
mov
add
mov
aas
sbb
lods
dec
lods
add
mov
ret
mov
mov
jp
jle
xlat
je
aaa
test
cli
pop
xchg
insb
imul
repz
out
push
pop
sbb
jle
adc
cltd
pop
adc
or
outsl
mov
loope
xchg
pop
add
xchg
fmul
imul
ss
inc
loop
mov
out
ss
inc
clc
dec
inc
pop
ret
imulb
gs
xor
leave
add
and
sub
add
push
test
loopne
frstor
xchg
or
sbb
sub
mov
in
sbb
or
popa
inc
lahf
jge
mov
sbb
jo
mov
push
mov
lret
pushf
jmp
sarb
mov
cmp
and
ror
mov
mov
scas
mov
xorb
fstps
lret
jp
inc
dec
cmp
ja
xor
rorl
scas
stc
aas
and
mov
sbbb
cmpsl
push
xchg
inc
gs
cmp
inc
outsl
mov
mov
mov
cmp
shlb
fwait
lock
cmp
mov
mov
or
dec
inc
push
inc
nop
jg
pop
test
adc
mov
adc
mov
cmp
jnp
fdivl
jne
sbb
mov
popl
adc
pop
pop
test
mov
ret
outsl
inc
jg
mov
lahf
cmp
mov
lcall
in
in
aaa
ljmp
jne
fs
cmpsb
inc
cltd
int
sbb
addl
imul
fcomps
lcall
push
dec
xchg
shll
or
data16
xchg
mov
aad
jecxz
pusha
aad
push
test
cmpl
mov
jae
bound
je
and
inc
cmp
cmp
cmpsb
mov
inc
call
pop
mov
jecxz
stc
pop
and
inc
or
push
sbb
or
je
fidivrl
sahf
pop
mov
jge
sbb
ja
sbb
mov
shrb
ficoms
sbb
aad
in
xchg
and
int3
ret
insl
data16
xor
jl
jno
stos
xor
pop
sbb
cmpsb
movsl
je
mov
insl
mov
cltd
lahf
xchg
pop
mov
push
cwtl
inc
mov
jmp
mov
jae
mov
sub
xchg
cmp
or
mov
cmp
sbb
js
xlat
stos
pop
dec
aas
inc
push
xchg
clc
js
cmp
stos
mov
or
shrb
loop
cmc
jnp
test
push
sbb
lahf
push
inc
sbb
leave
push
cmc
jp
inc
negb
mov
and
testl
movsl
fldcw
gs
push
fsubrs
bound
lds
stos
xor
std
clc
pop
jbe
arpl
fildl
or
je
push
cmp
jbe
addr16
push
and
js
xchg
and
fldl2e
shr
jbe
dec
fwait
icebp
cmp
pop
mov
mov
jp
movsl
mov
fldenv
xor
cli
shrl
and
js
test
pop
into
ljmp
daa
mov
xchg
imul
les
jnp
adc
inc
mov
sub
xor
ffreep
dec
shl
aaa
sbb
cmp
push
das
xchg
jg
cwtl
fcompl
pop
xor
jg
adc
pusha
fdivrs
sbb
lret
add
pop
mov
adc
shl
mov
fstps
dec
adc
js
imul
test
pop
subb
sub
xchg
lret
int
inc
dec
stc
arpl
stos
test
add
lahf
in
rcrl
ljmp
incl
add
dec
mov
mov
cmpsb
inc
pop
mov
clc
jne
lcall
pop
inc
ljmp
ja
mov
push
sbb
mov
adc
xor
adc
pop
scas
push
outsl
ja
das
lock
xor
fisubs
lock
dec
subb
movsb
xor
leave
or
dec
aad
adc
inc
mov
xchg
push
pop
mov
push
dec
pop
sahf
fbld
dec
shl
inc
fldcw
or
scas
mov
fcompl
pop
lds
inc
cmp
imul
adc
rcll
in
jl
nop
jp
ja
inc
je
nop
arpl
pop
mov
adc
jnp
inc
loope
pop
fiadds
fidivrl
lahf
inc
sarl
dec
mov
fwait
and
outsb
cld
jb
sub
mov
dec
insb
out
faddp
mov
xor
movsl
jmp
cmpl
test
push
int
icebp
cmp
test
loopne
pop
shlb
decl
push
iret
into
aaa
mov
aas
push
cmp
jne
cmc
xchg
or
stos
and
jmp
push
enter
shrb
aas
jbe
pop
sub
dec
ret
lods
adc
mov
mov
mov
fldt
mov
adc
mov
movsl
jge
xorb
mov
cmp
mov
js
pop
xor
jge
push
xchg
cmc
mov
test
arpl
push
out
and
fldt
xchg
adc
aad
mov
mov
test
test
mov
call
jne
ds
pop
sub
adc
cmp
sbb
pop
adc
mov
stc
sbb
mov
cmp
sbb
fnstcw
cmc
inc
shrl
mov
adc
pop
fidivrs
push
aaa
int
mov
call
jecxz
js
or
xchg
pop
sahf
mov
mov
mov
shl
dec
add
std
lcall
pop
cli
mov
push
stos
mov
xor
mov
scas
roll
aam
or
enter
push
dec
fld1
fs
sbb
pusha
pushf
outsb
cmp
pop
repnz
add
cmp
and
jmp
push
cmpsl
and
sbb
jnp
insb
push
je
les
xchg
dec
cmp
ds
dec
ljmp
rclb
icebp
cli
or
ret
lret
std
jge
nop
xchg
adc
sub
sub
jnp
addl
stos
sub
mov
xchg
xchg
adc
notl
and
pop
mov
and
out
ret
add
shlb
dec
mov
int
sbb
repz
push
cmpsl
cwtl
xor
test
stos
jno
mov
cmp
cmp
pop
icebp
adc
mov
ret
and
int
cli
mov
fistps
mov
sbb
adc
and
add
adc
pop
lcall
dec
inc
ret
cmp
pop
cwtl
insl
daa
andb
jae
call
push
xchg
jg
enter
sbb
out
add
rclb
clc
pop
sbbb
rcl
dec
or
and
jl
rcll
leave
inc
xor
test
inc
xchg
jo
xor
cmova
push
out
cmp
sbb
ret
mov
adc
aas
mov
scas
or
fldcw
xor
push
out
les
push
shll
mov
mov
dec
xchg
das
jbe
loope
ret
dec
stc
mov
inc
and
add
mov
pop
xchg
push
movsl
in
gs
pusha
push
imul
or
pop
push
cmc
ret
jg
xor
sub
fnsave
jge
push
pop
stos
inc
in
push
jp
cmp
inc
lret
add
insl
mov
xchg
xchg
mov
popf
jmp
shlb
mov
test
mov
add
cmp
into
mov
ljmp
xchg
mov
cmpsl
mov
cltd
inc
popl
add
lds
ret
ds
mov
mov
sub
outsb
ljmp
and
sub
push
push
andb
fisubrs
ja
add
sub
lock
mov
push
insl
je
cmp
shrb
jg
cmp
or
push
jp
and
in
pop
adc
sti
inc
mov
inc
gs
sbb
inc
repnz
in
jp
aaa
lahf
stos
inc
cmpsb
jo
mov
jmp
lea
xchg
es
ja
fldenv
call
push
in
xor
popa
adc
add
and
lods
cmpsl
leave
hlt
test
cwtl
lds
in
pop
insb
xorb
jp
inc
lock
mov
inc
cmp
dec
daa
cmpsl
jae
lret
sbb
fdivrl
xchg
push
jg
push
sbb
movl
ret
cmp
movsl
add
cmp
jecxz
ljmp
cltd
pusha
leave
in
or
das
mov
ljmp
push
ficomps
sub
je
adc
or
adc
inc
and
or
test
cmp
sbb
inc
push
cmp
jae
sub
repnz
inc
xchg
frstor
sbb
mov
pop
sbb
mov
xchg
inc
iret
or
sbb
jle
cmp
xchg
cmc
pop
or
movsb
outsb
sbb
and
pop
in
aas
in
dec
fsubrs
fimuls
or
sub
dec
lods
divl
lds
int
cmpsb
in
cs
pop
enter
cmp
inc
xchg
sbb
dec
cwtl
fs
popf
cmpsb
hlt
or
mov
stos
test
push
int
in
fs
mov
add
sahf
aas
add
xchg
cmc
inc
shlb
out
or
dec
sub
push
sti
pop
lahf
push
outsb
mov
insl
sub
shlb
out
ret
mov
enter
lret
popa
xchg
jno
adc
test
sub
add
and
add
mov
cmp
mov
bound
xchg
sub
mov
xchg
scas
cmp
push
lds
cmpsb
mov
insb
mov
out
arpl
test
leave
dec
sub
das
mov
lret
negl
aaa
fldcw
in
push
shl
sbbb
mov
inc
dec
mov
fsubp
xchg
cmpl
cmpsb
hlt
push
dec
pop
outsb
mov
xchg
or
xor
xor
cmp
cmp
fisubl
mov
mov
mov
es
pop
xor
mov
fistl
inc
subb
inc
cld
add
std
fs
stc
sbb
in
fucomip
push
cmp
jecxz
add
fsubrs
pop
sub
ja
mov
pusha
xchg
mov
shlb
jbe
sbb
xchg
scas
ret
int
mov
inc
stos
orl
sbb
push
cmp
jmp
add
pop
xchg
pop
xor
das
mov
adc
push
fsubrl
mov
inc
shr
or
mov
jne
hlt
push
jg
enter
loop
leave
push
je
stos
shrl
bound
lret
push
jne
jg
push
ljmp
ss
xchg
pop
xor
outsb
mov
test
jmp
xor
cmp
dec
push
pop
lea
cs
xor
bound
stc
push
pop
xchg
xor
scas
mov
in
rep
or
push
imul
movsb
mov
shll
gs
lods
push
cmp
fwait
out
pop
iret
pop
stos
pop
dec
out
es
push
clc
popf
xor
jo
push
aas
popf
daa
mov
call
adc
fdivp
and
add
jmp
jecxz
or
lock
cmpb
ja
sbb
out
cltd
jbe
cmpsb
jb
addb
shlb
fmuls
dec
mov
xchg
popa
push
adc
xorb
nop
xlat
adc
aad
jp
fistpll
mov
repz
sub
movsl
pushf
sbb
ret
lds
andl
push
or
aaa
call
inc
xchg
push
ja
sbb
jmp
pop
sbb
jno
out
mov
fcompl
jl
jge
dec
mov
insl
pop
mov
push
jecxz
or
mov
mov
in
or
push
pop
call
aaa
or
bound
add
fstpl
push
pop
pop
cltd
inc
mov
cmp
test
arpl
dec
cmpsl
hlt
jne
add
add
scas
push
or
inc
lcall
imul
mov
imul
les
pop
lock
push
mov
cld
fstpl
mov
add
cmp
fwait
out
mov
in
dec
inc
xor
xchg
adc
inc
mov
cmpsl
cmpsb
arpl
mov
lds
fildl
push
jnp
mov
loop
out
jae
pop
pop
arpl
sbb
dec
ljmp
jecxz
orl
push
gs
jmp
mov
rorb
cmp
xchg
add
jo
mov
xchg
adc
jge
iret
cmpsb
sub
test
test
mov
mov
std
in
test
mov
and
or
pop
sub
dec
mov
and
fidivl
push
clc
push
push
punpcklbw
jp
shrl
push
sub
or
leave
shlb
je
or
scas
and
sub
outsl
and
inc
dec
mov
pop
inc
mov
pop
mov
xchg
repz
loopne
insb
gs
jnp
xor
jns
ret
adc
shll
in
repnz
jge
insb
cmp
and
loop
xor
jae
into
cwtl
in
pop
shl
ljmp
ja
xor
or
xchg
and
or
lcall
cmp
daa
scas
pop
sbb
pop
pusha
inc
les
pop
icebp
insb
push
popf
adc
push
in
pop
push
stc
cmp
clc
pop
jg
clc
dec
lds
inc
movsb
mov
mov
iret
add
xor
fiaddl
cmp
add
jge
add
push
push
enter
sbb
call
rol
mov
adc
mov
fldcw
and
push
fdiv
js
movsl
mov
add
jbe
arpl
fadds
inc
and
adc
aad
loope
jne
pusha
push
stos
mov
pop
or
lods
xor
lahf
mov
test
dec
test
loopne
loop
aad
jbe
sbb
clc
jg
subl
inc
std
je
push
mov
inc
mov
sbb
mov
pop
icebp
cmpsl
cwtl
in
orl
in
imul
pop
jg
jmp
inc
das
fistps
push
mov
jp
sub
xchg
std
comiss
mov
scas
aaa
lds
cmc
xchg
clc
xchg
sbb
dec
inc
test
adc
add
stc
inc
cmpsb
push
cmp
imul
addr16
lea
mov
imul
cmp
dec
or
adc
jmp
sub
push
adc
into
sbb
std
jo
test
mov
and
andl
mov
addr16
daa
sbb
int
clc
xor
ret
or
mov
mov
js
adc
xchg
das
hlt
mov
leave
xchg
cmc
mov
adc
sti
or
cmp
push
mov
dec
shll
dec
jno
pop
mov
jno
ret
mov
mov
inc
jb
fs
xor
pushfw
loopne
icebp
fdivs
mov
mov
stos
fwait
popf
sbb
xor
sub
xorl
xorb
cmc
movsb
cmpsb
cmp
adc
lock
jb
dec
iret
jbe
mov
outsl
jns
pop
ret
xchg
lret
mov
jle
mov
jmp
adc
mov
loope
jl
les
mov
jle
nop
stos
setg
cltd
sahf
outsl
imul
jb
mov
dec
ds
es
or
das
mov
pop
pop
cmpsb
cmpsb
dec
je
mov
nop
xorb
adc
xchg
out
adc
adc
xlat
and
jge
mov
push
adc
icebp
jmp
lahf
aad
das
mov
mov
dec
rcll
jge
icebp
lds
mov
popf
fprem1
rclb
jg
inc
pop
inc
sub
iret
xor
cs
je
xchg
mov
inc
lret
pop
sub
mov
mov
add
jmp
dec
enter
cmp
fsubs
out
mov
jns
sarl
rcr
std
sahf
loope
fdivrs
test
xor
adc
pop
adc
jns
stc
cmp
jg
and
or
xor
adc
add
out
stc
mov
dec
mov
notb
xchg
faddl
leave
jo
xorb
rcrb
inc
and
fsubrs
mov
push
fcmovb
xchg
jo,pt
inc
xor
dec
daa
add
inc
or
pusha
sahf
xor
and
jl
sbb
mov
push
fstps
in
loopnew
cmp
mov
out
cli
outsl
outsl
jg
fiaddl
daa
xchg
dec
pushf
adc
outsb
testb
mov
push
jmp
xchg
rorb
imul
dec
lods
xchg
mov
fists
and
notl
sti
and
mov
dec
ja
in
sub
and
pop
sub
mov
jbe
mov
fsubrl
shrb
lods
xor
in
cs
fmuls
xlat
js
in
xchg
subb
daa
fcoms
gs
jae
push
xchg
enter
xlat
adc
jbe
sbb
lret
mov
inc
ss
sbb
jb
and
mov
inc
out
and
vmwrite
inc
outsb
bound
cmp
add
push
sbb
into
in
jmp
aas
aas
adc
jmp
lock
arpl
inc
enter
loopne
divl
int3
test
xchg
cmp
pop
sbb
stc
cmp
mov
aad
rcrl
cmp
mov
cld
and
sbb
jg
stos
movsb
sahf
sub
mov
iret
daa
rorl
cmp
cld
sbbl
lret
pop
mov
cs
add
adc
mov
sahf
add
lahf
dec
jb
fisubrl
jge
repz
incl
pop
adc
dec
pop
imul
loop
sbb
out
mov
inc
xor
ret
pop
adc
jle
popa
jno
mov
or
pushf
popf
push
scas
mov
jb
lcall
mov
sbb
rorl
push
push
addl
xchg
or
sub
nop
cltd
push
push
jge
mov
xor
xchg
cmp
or
pop
popl
cltd
sbb
cld
mov
pop
mov
das
divl
and
add
xlat
dec
sbb
nop
imull
lret
aad
inc
jp
andb
out
adc
mov
mov
mov
cwtl
cltd
jns
xchg
sbb
inc
add
sub
mov
mov
stos
jbe
hlt
push
pop
shll
dec
popa
adc
faddl
inc
fildll
and
push
add
jl
mov
lock
adc
push
dec
outsl
lahf
mov
movsb
fsubl
push
jnp
and
jle
int3
ja
inc
test
cmpsb
sbb
sbb
jnp
in
lock
mov
jae
jae
sub
cmpsl
xlat
adc
decl
or
cmp
outsl
shll
inc
xor
movsb
sbb
mov
stos
jg
inc
and
add
aam
adc
cmpsl
fmul
data16
mov
xchg
out
roll
add
xor
jecxz
pop
pop
dec
and
jle
sti
ja
aam
and
jmp
pop
mov
mov
pop
repz
sbb
adc
lock
push
sbb
mov
adc
sub
int
std
mov
push
rcl
js
dec
or
dec
xor
push
or
sbb
sarl
jg
gs
push
adc
inc
push
lahf
icebp
cmp
and
orb
inc
inc
movl
pop
xor
cmpsl
clc
jb
jne
pop
xor
ror
mov
in
and
clc
loopne
cmpsb
outsb
mov
adc
pop
push
sub
mov
ret
or
jb
int3
cwtl
repnz
loopne
cltd
out
mov
iret
pop
cmc
mov
scas
cmp
shlb
sub
sbb
in
movsl
test
cld
and
lahf
ljmp
loop
add
dec
loop
out
repz
mov
lret
jnp
lcall
jle
push
and
mov
test
repnz
scas
aam
push
mov
popf
sub
loop
xchg
out
je
lea
sti
mov
enter
cmp
imul
adc
cmp
std
lock
test
mov
xor
push
mov
hlt
fnstcw
adc
xlat
shlb
pop
xchg
mov
dec
mov
or
mov
mov
test
jb
lret
outsl
xor
popa
or
addb
hlt
xlat
mov
loopne
push
js
dec
xor
cmp
sbb
out
mov
sbbl
rcrl
mov
rcl
fsubrp
mov
cmpsb
jnp
pushf
ret
pop
pop
mov
insl
flds
jmp
dec
or
xor
imul
cmp
xchg
fdivrp
pop
adc
ss
push
insl
jnp
mov
popa
add
sbb
push
inc
sahf
sbb
aas
stc
xchg
cmp
lds
rcll
push
xor
xor
repnz
adc
addr16
jmp
xor
dec
fistps
push
out
pop
xchg
adc
dec
jns
bound
jae
fwait
mov
loopne
xchg
inc
aas
clc
sbb
push
add
xchg
adcb
sbb
mov
movsl
and
nop
or
cli
jnp
aaa
pop
mov
push
ret
add
push
sub
xchg
inc
in
stc
mov
cmp
std
out
xchg
xlat
sub
or
or
das
rol
and
sub
ficompl
rcrl
mov
jae
orb
add
int3
fs
cmpsl
pop
dec
stos
dec
sbb
in
xlat
mov
pop
mov
fwait
popf
rcl
les
insl
sub
push
pop
fsubs
sbb
lods
enter
es
divl
test
out
testb
xchg
cmpsb
pusha
mov
clc
scas
fdivrp
xchg
lds
mov
lahf
mov
or
cltd
stos
adc
daa
and
adc
in
movsb
cltd
sahf
lods
rclb
xlat
cmp
sbb
xchg
mov
mov
ficoms
push
adc
jno
jnp
sub
adc
dec
xchg
xchg
or
push
pushf
cmc
xchg
mov
add
jl
pusha
out
pop
adc
inc
adc
test
enter
int
scas
pslld
scas
pop
inc
sbb
dec
mov
push
sahf
sub
pop
cli
insb
fs
lds
out
xchg
js
mov
mov
mov
das
adcb
aam
xor
jmp
stc
jg
pop
push
test
hlt
pop
test
scas
xchg
mov
aaa
inc
dec
rorl
orb
lds
jecxz
dec
xor
cmp
sub
jge
jle
sbb
inc
lock
ja
pop
pop
shl
jnp
cld
xchg
xchg
adc
clc
xchg
je
dec
test
shlb
cmp
insl
xlat
sbb
xchg
xchg
mov
arpl
cs
xor
pop
cs
addr16
or
icebp
sbb
aam
cmp
pop
jmp
das
mov
xor
mov
inc
push
sub
ljmp
adc
xchg
add
push
repnz
add
scas
or
repz
dec
aaa
and
mov
jmp
jno
fisubrs
jmp
test
cld
xchg
and
push
sahf
inc
call
ja
mov
push
int3
int3
in
iret
add
xor
mov
pop
lea
mov
xchg
mov
les
int3
aam
dec
xlat
mov
cmp
xor
fmul
adcb
sbb
mov
mov
fldcw
pop
mov
adc
icebp
jne
insl
xor
pusha
bound
test
lds
mov
xchg
lods
mov
into
and
cwtl
xchg
push
daa
divb
lahf
mov
pop
cmpsl
sbb
neg
push
mov
loopne
cwtl
repz
faddp
pop
fldenv
enter
xlat
lret
outsl
in
or
and
sub
test
cltd
lea
adc
or
cld
shr
push
mov
adc
mov
ss
fcomps
push
call
cmp
arpl
mov
outsb
sub
xlat
sbb
and
lret
mov
lea
mov
mov
pop
mov
test
and
outsl
les
shlb
pushf
lea
popf
out
dec
shll
jbe
call
inc
push
rorb
cmp
cmp
fisttps
out
push
divl
mov
mov
popf
push
mov
loopne
adcb
sbbb
dec
dec
and
test
cwtl
cwtl
mov
scas
xor
pushf
rcrl
out
out
cmp
lods
int3
pop
bound
out
les
adc
fdivr
orl
lods
push
lahf
mov
cwtl
push
push
jbe
ret
jb
cmpsl
inc
pop
mov
mov
mov
pop
out
inc
mov
cs
xor
fsubrs
jecxz
mov
mov
gs
add
daa
push
int3
adc
lds
mov
mov
dec
cld
sbb
jecxz
xlat
add
pop
les
adc
mov
clc
pushf
loop
sbb
adc
sub
and
mov
pop
mov
mov
enter
stos
sbb
in
sub
repnz
push
dec
call
cmp
ss
xor
adc
out
out
xchg
shrl
mov
movsl
mov
jmp
jnp
mov
adc
mov
inc
xlat
sbb
mov
push
cmpsl
stos
cld
sbb
ror
pusha
loope
fwait
push
scas
or
push
fiadds
push
push
push
movsl
adc
push
xor
xlat
adc
enter
cld
mov
mov
lods
lea
add
inc
adc
in
outsl
gs
mov
xchg
cmp
divl
ret
push
jl
xchg
int
repz
rcrb
daa
sbb
mov
scas
cmp
jae
gs
dec
push
adc
xor
inc
test
mov
lea
adc
mov
jns
clc
scas
fmull
cmp
xor
jne
mov
cmp
pop
ror
xchg
mov
in
pushf
nop
mov
ficompl
out
mov
subb
xchg
orl
aaa
fldcw
mov
adcl
ds
out
jbe
sub
std
in
pop
xchg
roll
xchg
xor
aad
out
data16
xchg
repz
jg
fisttpll
int3
jnp
ds
addr16
and
add
jp
add
xchg
mov
mov
xchg
decb
push
shll
sbb
out
sarb
xchg
lret
enter
addr16
xchg
aam
xor
inc
adcl
les
mov
enter
pop
jne
xchg
call
sub
pop
sbb
pop
lret
movsb
icebp
addr16
xchg
pop
andl
icebp
mov
fstl
jne
push
cmp
xchg
or
pop
mov
mov
jb
dec
mov
adc
push
sub
mov
push
mov
cmpsb
mov
mov
adc
dec
and
insb
pop
adcb
push
shlb
adc
test
or
mov
into
push
or
enter
cs
cltd
and
sub
stos
inc
in
sahf
movsl
add
cltd
fmuls
push
xor
push
aad
jl
mov
or
add
adc
add
adc
push
xchg
or
inc
aad
ficomps
lret
adc
sbb
fists
inc
mov
je
outsb
xor
mov
bound
js
adc
test
arpl
mov
push
movsl
popa
push
cmp
mov
cld
insb
shrl
lahf
jo
in
orb
pusha
pushl
pushf
aas
jb
ja
es
jnp
xchg
rol
shl
stc
pop
gs
xchg
dec
das
adc
pop
outsb
sub
fsubrl
ret
mov
push
xchg
mov
pop
lret
lock
hlt
mov
adc
add
ret
and
std
repnz
ljmp
aas
bound
dec
or
cmc
xor
mov
inc
pop
outsl
or
mov
popf
repz
or
sub
and
incl
dec
xchg
and
jg
mov
addps
jecxz
imul
push
mov
mov
fsincos
sbb
ffreep
mov
into
cmp
jno
xchg
in
movsl
or
aad
push
xchg
pop
xchg
mov
jge
daa
add
inc
dec
scas
loop
adc
sbb
adc
stos
je
push
mov
repz
scas
int3
adc
mov
pop
jg
cmpsb
inc
mov
cli
std
sbb
sbbl
add
inc
fcmovbe
sbbw
cmp
pop
or
or
test
lds
pshufw
sub
pop
push
lcall
test
dec
test
add
or
fidivl
shll
pop
or
mov
fimuls
or
loope
mov
lea
pop
bound
cltd
mov
arpl
dec
jno
sub
sub
outsl
nop
or
mov
or
out
dec
lods
mov
sbb
das
dec
and
sahf
cmp
lock
add
fisttpl
sbb
lahf
mov
lock
push
and
sbb
add
lods
xchg
mov
sub
imul
jo
sub
mov
scas
int3
cmp
inc
push
add
leave
jae
lret
cmpsl
sbb
std
insl
dec
in
jp
fdivrs
test
out
cltd
cmp
lret
int3
jno
add
mov
rclb
xchg
es
ret
mov
push
js
in
mov
aad
bound
inc
add
decl
stos
hlt
in
jle
fdivs
test
movsl
imul
dec
in
dec
test
push
cmp
sbb
fsubs
ja
call
cli
mov
and
lods
add
push
jp
mov
aaa
fstpl
mov
xlat
out
out
jle
mov
pop
and
pop
cmp
or
movsl
cmpsw
mov
xchg
bound
mov
mov
pushf
insb
repnz
mov
jb
dec
cmp
lahf
inc
or
ficoms
push
clc
pop
loop
xchg
daa
scas
push
in
loopne
push
add
daa
ss
xor
repnz
push
mov
ljmp
cmp
icebp
or
mov
xchg
adc
lahf
xlat
outsb
push
cld
add
outsb
jmp
add
frstpm(287
xor
hlt
gs
rol
sbb
in
jge
test
xchg
xchg
movsb
and
scas
jecxz
add
movsb
lods
aam
cmp
and
sub
mov
push
lods
jb
jae
pop
xchg
xchg
ss
test
dec
inc
sbb
or
mov
in
decl
ret
insb
fwait
stc
jge
popa
jmp
outsl
mov
inc
pop
test
pop
addr16
lods
dec
xchg
fs
ljmp
lret
mov
sarl
scas
lods
sarb
xor
inc
inc
and
and
cmp
out
aaa
xchg
mov
cmp
in
popf
pop
xor
je
fidivrl
add
mov
scas
jmp
sub
and
dec
inc
dec
ficompl
sub
ret
bound
test
dec
dec
repz
js
aad
call
jecxz
jmp
and
and
loop
push
test
cmp
shr
adc
fmul
push
jg
fimull
push
lock
mov
lock
mov
loopne
cmp
out
pusha
lcall
add
mov
inc
ss
mov
jmp
outsb
lret
pop
inc
imulb
mov
insb
leave
shlb
insb
fnstenv
mov
and
pop
stos
mov
jo
fwait
mov
and
pop
jp
adcl
push
mov
mov
cmp
mov
pop
sbb
add
jg
sbb
lock
dec
jnp
fisubl
std
add
stc
jl
lds
fisubrl
pop
jge
clc
scas
xchg
movsl
call
in
sbb
out
xor
sub
pop
jecxz
ret
mov
xchg
out
cmpsl
stos
or
lret
sub
fcomps
int3
hlt
add
pop
or
pop
pop
jno
xchg
mov
jg
fucomi
jns
or
xchg
adc
mov
sub
mov
insb
xchg
cmc
aad
clc
jns
sub
js
out
pop
or
mov
cld
scas
sahf
popa
pop
nop
negb
and
pop
mov
mov
xchg
es
cmp
dec
aam
or
popf
std
jne
into
mov
push
pusha
push
fwait
sbb
pop
ljmp
push
andl
pop
gs
test
loope
adc
setge
out
hlt
mov
mov
push
movsl
add
cltd
push
pop
jno
aad
xor
xchg
mov
movsl
pushf
ljmp
xchg
sbb
push
pop
aas
push
lods
sub
cmp
push
orb
ja
lods
adc
push
movsb
js
push
mov
mov
adc
mov
in
and
inc
pop
rcrl
orl
iret
scas
ja
and
inc
ror
push
push
pop
cmp
xor
add
inc
fs
push
aad
dec
stos
add
sti
mov
add
mov
sbb
aam
pop
sub
and
aas
clc
pop
dec
add
add
repz
into
adcb
pop
cs
mov
xchg
rcrb
notb
or
pop
mov
popa
rcll
test
dec
mov
push
loop
js
jp
xor
push
push
mov
jl
jns
gs
push
repnz
loop
js
mov
lret
cmp
out
mov
orb
out
shl
loope
xchg
rclb
arpl
add
sub
mov
dec
cld
xor
je
xchg
adc
jmp
xor
fistps
and
adcl
mov
xchg
int
mov
in
insb
dec
add
insb
dec
lret
test
lods
sti
pusha
jl
cmpb
inc
fiaddl
push
mov
xor
and
mov
rcr
ficoml
cmp
loope
inc
out
inc
ja
jns
dec
pop
stos
dec
or
test
mov
xchg
mov
fidivrl
inc
adc
loope
push
loope
inc
call
in
sbb
xor
mov
inc
rcrb
add
pop
out
jae
ljmp
jae
fldl
or
pop
pop
pop
in
push
imul
into
mov
cli
fsubrs
rcrl
dec
adc
not
sti
jg
or
in
and
push
mov
xor
shrl
xor
ds
mov
push
pop
sbb
dec
sarl
fisttps
cmp
jge
adcb
mov
adc
inc
xor
out
dec
xchg
adc
je
jbe
int3
sbb
push
sti
dec
mov
jne
adc
mov
pop
cmp
inc
arpl
sbb
and
enter
pop
data16
adc
jecxz
cmp
sti
test
jae
jb
jo
vmmcall
jae
xor
cs
lret
sub
sbb
fistps
jecxz
mov
mov
lods
xor
out
xchg
ss
in
sub
hlt
das
pop
shl
js
mov
sub
dec
xchg
and
cwtl
xor
dec
inc
pop
sub
aas
lahf
add
mov
sti
add
cwtl
push
pop
cmp
pop
mov
out
push
cmp
pushf
insl
incl
aad
mov
imul
push
and
sar
jmp
add
xchg
std
xchg
call
push
arpl
test
notb
aad
mov
cmp
and
ljmp
gs
mov
jl
push
jge
mov
pop
push
lahf
xchg
sub
adc
cmp
xor
lods
mov
xchg
lahf
dec
mov
out
cld
int
inc
xchg
dec
les
mov
hlt
and
jg
xor
mov
xor
in
lds
imul
pause
pop
sub
iret
lock
sbb
or
lret
dec
rolb
lods
or
test
test
sbb
adc
adc
sub
int3
jle
adc
pop
jge
dec
jecxz
insl
popa
xchg
cmp
ds
cmp
in
clc
cli
shll
in
add
inc
xor
stc
pop
in
mov
lcall
cmpb
sbb
out
daa
mov
xor
xor
xchg
je
mov
dec
sub
cwtl
cwtl
xchg
push
or
sub
pop
shrl
out
ljmp
mov
sbb
xchg
jae
add
mov
imul
lret
pop
sbb
sub
aaa
jno
popa
pop
es
sbb
je
lods
or
ret
and
push
jae
push
lds
mov
popf
mov
sti
lock
stos
jg
add
jecxz
scas
mov
cmp
jno
add
aas
inc
imul
in
clc
mov
cli
jb
push
jne
orb
inc
fistpll
jbe
fistpll
dec
ljmp
aam
inc
mov
icebp
sbb
aaa
cmp
jno
test
pop
pop
xor
and
fimuls
lods
push
fstl
xor
mov
mov
mov
jns
push
jge
out
jbe
bound
adc
xchg
cld
xchg
testl
dec
sbb
cmp
pop
sbb
adc
daa
pop
repnz
outsl
push
add
lds
jnp
sarb
push
mov
into
dec
aad
lret
cmp
bound
lods
push
data16
xchg
or
in
or
jno
mov
xchg
in
mov
out
mov
push
mov
es
ljmp
xchg
jb
jno
sbb
add
pop
cli
imul
or
xor
insl
mov
jb
sub
push
cli
mov
stc
xor
and
dec
test
push
fcmovnbe
xchg
inc
xlat
jbe
popf
inc
gs
jb
jne
into
dec
xchg
in
icebp
jb
jbe
sub
cmc
sbb
cs
fwait
push
iret
divb
imul
imul
or
jmp
or
mov
aam
aas
push
enter
scas
stc
out
dec
pop
adc
xor
cwtl
lock
dec
ljmp
inc
psubusw
add
call
sti
mov
xlat
jp
int3
cltd
mov
sar
mov
xlat
ds
sub
push
jnp
insl
ja
mov
addr16
out
or
pop
xor
enter
sbb
dec
hlt
add
pop
adc
jnp
adc
adc
cmp
stos
aam
push
ljmp
mov
clc
iret
cmpsb
jae
sub
and
pop
xchg
fiadds
arpl
sbb
rol
jmp
repnz
pop
xchg
adc
cli
mov
stos
mov
ljmp
adc
xor
sub
xchg
mov
jns
arpl
pop
cmp
push
ss
jno
in
leave
mov
pop
lret
push
or
mov
mov
lock
mov
das
xor
mov
pop
cmp
sahf
stos
mov
xlat
fisubl
adc
rolb
rcrb
jl
adc
add
jecxz
fsubrs
decl
lods
xchg
mov
mov
xchg
push
cmpsb
repz
push
test
adc
je
push
mov
add
and
inc
pop
jb
inc
das
and
mov
jmp
shlb
sarl
mov
add
lret
mov
aad
sub
rorl
daa
aas
jmp
sub
pop
xor
roll
jp
aaa
out
loope
xor
cmp
mov
inc
push
sbb
mov
aaa
or
std
out
xchg
imul
inc
mov
out
xor
aad
test
mov
push
cmp
adc
mov
es
xchg
cmp
push
shrb
cmp
xor
adc
pop
cmp
lods
pop
cmc
or
ljmp
dec
pop
and
cltd
add
test
dec
xchg
cs
repz
aas
aam
pop
clc
xchg
cmpsl
jne
andb
adc
pop
jg
xchg
dec
addr16
addr16
adc
and
pop
xchg
xor
cmp
pop
mov
sti
xchg
fucom
pop
add
jae
pop
jnp
or
addr16
sbb
cwtl
jmp
cmpsb
dec
add
aam
nop
test
cmp
lods
out
and
cli
js
into
pop
and
mov
bound
jg
mov
movsb
and
push
pusha
add
popa
jecxz
xor
js
dec
add
pop
xchg
xchg
sub
nop
xchg
adc
mov
adc
mov
jns
into
in
pop
cmpsb
dec
mov
or
mov
lret
cs
xchg
dec
lods
divb
adc
into
cmp
pop
xor
jo
les
pushf
andb
fwait
dec
and
sti
in
test
sti
rcrl
mov
lahf
clc
or
add
adc
jmp
mov
mov
cld
repz
ret
xchg
sbb
movsb
pop
mov
lcall
dec
gs
adc
push
lar
push
imul
pop
fisubs
pop
jnp
mov
data16
mov
test
or
pop
and
dec
add
jg
push
out
cmp
sbb
out
lods
mov
add
sub
int3
inc
xor
push
jmp
xchg
sbb
sbb
imul
mov
or
sub
and
movsb
push
mov
xor
pop
mov
pop
scas
lock
in
inc
adc
jg,pt
fcomps
cmp
mov
push
ja
cmpsl
and
mov
dec
and
add
mov
inc
es
lods
testb
sub
std
mov
jle
push
jno
cmp
sarl
mov
mov
add
repnz
icebp
mov
pusha
mov
or
cwtl
inc
int3
loopne
mov
jb
push
shlb
push
xchg
test
imulb
rclb
pop
outsb
in
push
in
xchg
mulb
xchg
popf
cld
inc
lds
xor
xchg
and
popa
adc
fldl2t
outsl
lcall
dec
clc
pushf
or
fstpt
xorl
add
in
xchg
push
shlb
xchg
add
sar
ret
pop
lock
test
in
insl
popf
scas
fldt
repnz
imul
iret
fists
inc
imul
add
sbb
mov
adc
push
or
pop
jmp
sub
stos
cmc
ficomps
stos
push
mov
in
adc
adc
mov
sbb
xlat
out
ffree
or
mov
push
and
or
xchg
xor
lods
ds
das
or
and
adc
int3
aam
rep
cwtl
cmp
push
cmc
add
jge
stc
pop
stos
test
xchg
pushf
clc
lea
sub
out
push
out
insb
rcr
fnstenv
es
pushf
fsubs
mov
mov
sub
sub
and
push
out
cli
mov
stos
data16
pop
aaa
out
xor
mov
dec
mov
fidivrs
rcll
lds
and
jnp
ror
cwtl
pop
pop
push
pop
lret
stos
aas
cmp
es
loopne
fwait
mov
push
pop
pop
lret
loopne
mov
jae
cmp
xchg
mov
negb
icebp
in
xchg
out
out
mov
std
push
mov
xlat
or
lea
sub
push
out
stos
test
jbe
mov
fists
pop
ljmp
sbb
stc
add
jnp
pop
mov
sbb
push
jb
outsb
push
cmp
ss
xchg
scas
lfs
mulps
inc
or
dec
and
xchg
out
test
call
xchg
mov
popa
shrl
jne
ror
movsb
addl
mov
dec
sub
jg
inc
mov
jne
mov
clc
arpl
in
cmpsl
outsl
push
les
fnstenv
fbld
js
adc
out
lahf
fsubrs
or
sbb
xchg
addb
xchg
lcall
insb
xchg
movsl
popf
and
inc
pop
jo
mov
sub
dec
sbb
fnstsw
rcll
insl
mov
mov
push
jge
imul
je
xor
push
xchg
xlat
aas
jno
ret
push
mov
jbe
pop
adc
pop
in
into
dec
fisubs
xchg
daa
dec
mov
jg
and
inc
mov
xor
or
pop
xchg
inc
cmp
push
lret
adcl
sub
pop
insb
mov
popa
adc
cmp
inc
pop
jle
and
mov
pop
push
cmpsb
mov
push
cmp
dec
inc
aam
icebp
xchg
mov
mov
mov
sub
mov
mov
clc
jmp
fiaddl
fnstenv
leave
gs
popa
ret
cs
cmp
pop
aas
xchg
sbb
pusha
mulb
das
cmpl
or
fdivs
dec
inc
sub
cmp
xchg
shlb
mov
enter
push
aaa
gs
cmp
aam
outsl
mov
lds
sahf
jecxz
jl
mov
pop
adc
testb
jl
mov
ljmp
and
pushf
sbb
stc
sbb
cld
lods
cmpsb
xor
xchg
cmc
movsb
xor
jb
mov
lods
std
pop
cmp
fisubs
push
mov
add
mov
lret
scas
jno
mov
push
mov
mov
add
sbb
jecxz
sbb
jl
inc
cmpsb
cmp
stos
into
xchg
outsb
mov
and
repz
pop
int3
mov
cld
jns
mov
add
or
enter
andb
push
in
cld
arpl
int3
ret
sbb
jle
jge
push
lret
and
aam
jnp
sub
mov
nop
jl
mov
mov
ret
mov
aaa
sbbl
and
push
xor
inc
sub
arpl
test
loopne
inc
inc
out
cli
ja
dec
mov
fcomps
jle
lock
call
fst
sub
ljmp
xchg
lods
mov
push
xor
mov
or
push
mov
sbb
mov
xchg
scas
inc
and
das
test
das
imul
pop
jno
mov
mov
mov
je
pop
mov
mov
pop
lods
lea
mov
ret
or
mov
dec
aam
adc
add
adc
mov
push
xor
or
mov
or
sub
mov
mov
cmpsb
inc
mov
stos
xor
adc
push
xchg
mov
push
leave
mov
popf
lahf
frstor
ljmp
jp
clc
push
sub
dec
mov
cmpsl
call
js
popa
sti
push
dec
shrl
and
sbb
mov
adc
cmp
fiadds
jne
rclb
movsb
jo
xor
sbb
in
and
movsl
xchg
data16
xchg
mov
mov
mov
in
adc
je
stos
outsb
pop
ss
mov
push
pop
pop
movsl
adc
out
inc
xchg
ficoml
scas
rorb
cld
pop
call
ds
inc
test
adc
test
or
xor
mov
sub
cmc
mov
xchg
xchg
sub
pop
into
iret
insb
insb
cmp
arpl
addl
sbb
in
arpl
sub
add
push
mov
pop
daa
pop
fmul
sbb
roll
scas
daa
pop
icebp
jge
sbb
mov
out
in
adc
xchg
lods
out
push
mov
adcb
push
cmp
or
cli
std
mov
test
xchg
xor
xchg
xor
sti
cmp
into
push
cmpsb
pop
stos
xor
cmc
pop
or
mov
push
fsubl
outsl
mov
das
ret
xchg
cld
jb
push
mov
roll
mov
and
add
xor
mov
inc
adc
ds
cwtl
xchg
inc
cmc
sub
xor
out
push
dec
shll
lea
pop
xchg
mov
push
ds
adcb
dec
xchg
insb
sub
jmp
repz
enter
mov
out
idiv
adc
push
and
nop
fs
loop
imul
and
mov
subl
loopne
fists
xchg
hlt
icebp
add
mov
scas
scas
fsts
pop
and
xor
outsb
negb
loopne
add
imul
jmp
jg
inc
mov
jle
insb
cmc
inc
fists
sbb
or
adc
fisttpl
xchg
xchg
shl
es
pushf
imul
arpl
sahf
ljmp
pop
xchg
adc
sahf
push
cs
addr16
add
inc
xchg
daa
lods
in
outsl
pop
cli
aad
mov
xor
cmpsl
loop
mov
mov
xchg
loopne
mov
or
or
test
flds
in
in
xor
inc
dec
iret
test
inc
lds
or
sub
imulb
loop
xchg
xor
xchg
aad
xor
fstps
pop
pop
test
call
dec
push
xor
xor
icebp
ret
mov
addr16
mov
xor
or
xchg
leave
outsb
cmp
loope
xchg
push
or
fisubrl
loopne
outsb
fnstenv
testl
xor
xor
popf
xchg
xchg
nop
stc
inc
in
into
xor
mov
xchg
or
cmovp
jb
cmp
add
pop
in
pop
cmp
mov
jecxz
mov
fiaddl
ds
scas
jno
dec
pop
cltd
add
iret
ficompl
lcall
jo
cmpsl
bound
pop
mov
fs
xor
repz
dec
or
mov
cmp
lret
mov
xor
cld
jmp
int3
xchg
dec
dec
adc
pop
inc
jle
dec
xchg
stos
testb
jmp
push
and
dec
xor
enter
dec
inc
pop
xor
add
cld
fcomps
repz
mov
mov
lcall
not
addr16
orb
cmpsl
jno
xchg
loop
ret
popa
in
sub
push
add
push
loopne
add
iret
lods
pop
add
mov
xor
and
faddl
mov
lods
pop
mov
push
in
mov
arpl
scas
daa
movsl
leave
mov
cmc
hlt
cmp
jecxz
jno
ret
jmp
int
cli
mov
jo
outsb
mov
and
ret
movb
xchg
aad
dec
cmpsl
xor
stos
inc
mov
orb
xor
roll
movsb
ss
xor
ret
gs
add
ja
mov
iret
rclb
popa
xchg
sbb
sub
and
adc
mov
cwtl
fidivl
or
add
push
push
pop
cli
sub
ja
and
stos
mov
sub
mov
cld
icebp
insl
mov
fucomp
daa
jb
jle
scas
loope
mov
mov
mov
mov
add
ficoms
add
xchg
dec
movsb
jge
repz
cmpsb
jecxz
out
hlt
pop
push
and
pop
lcall
cltd
mov
mov
inc
inc
mov
adc
testl
and
movsl
mov
sub
sarb
in
push
lock
lret
lret
dec
jg
js
and
movsb
in
cmp
mov
outsl
pop
hlt
fs
jae
fdivl
add
stos
scas
xor
sbb
and
pop
dec
pop
jmp
mov
icebp
and
int3
adc
sbb
xor
mov
add
out
lea
add
push
and
ret
cmp
adc
jle
repz
adc
movsb
xor
pop
dec
mov
arpl
jl
inc
cmp
sub
push
loop
sub
jl
inc
fstpl
out
and
pusha
mov
das
lea
movsb
push
call
stos
mov
jecxz
mov
adc
lcall
loopne
es
mov
push
int3
xor
mov
or
xchg
shlb
lahf
aaa
mov
daa
inc
stos
stos
add
sbbb
std
stc
les
inc
rcll
push
clc
enter
dec
jns
sub
mov
inc
mov
stos
scas
je
push
imul
fdivrs
adc
fwait
push
pop
sbb
cmp
push
and
jno
out
dec
ret
es
pop
imul
jbe
arpl
das
stos
xchg
pcmpgtd
dec
and
add
inc
mov
outsl
mov
jne
jae
sbb
sub
cld
mov
rcr
lret
and
repnz
inc
mov
mov
push
sbb
sbb
outsb
push
lods
xchg
gs
push
or
aam
int3
xchg
xchg
mov
pop
sbb
push
ret
ljmp
push
mov
jae
adc
je
xor
xchg
decl
stos
and
fdivrs
add
into
jmp
xchg
dec
scas
ret
sbb
int
ljmp
jo
cmp
ljmp
sbb
jle
mov
add
sti
pushf
jl
mov
or
nop
hlt
inc
cmp
xor
mov
popf
push
in
or
insb
popa
dec
add
and
push
xor
pop
repz
dec
les
ret
fistl
imul
int
scas
xchg
mov
popf
sbb
cwtl
stos
ret
and
push
and
imul
std
out
test
aaa
stc
dec
test
and
pop
or
cmc
jg
xor
lock
and
test
lods
push
jle
xchg
xchg
adc
test
sbb
dec
adc
pop
fisttpl
add
aas
pushf
ss
data16
or
call
and
sarl
inc
jg
mov
popa
adc
mov
das
inc
adc
pop
mov
and
dec
cmp
outsb
call
adc
or
cwtl
mov
xchg
hlt
and
cmc
lds
mov
daa
popf
shr
data16
out
mov
cltd
xor
cmp
nop
xlat
mov
cmpsb
sbb
sbb
outsl
pop
sbb
in
sbb
fs
sbb
shrl
js
jmp
les
mov
mov
stos
xorl
subb
pop
or
mov
lods
mov
fldt
push
xor
ret
cli
test
roll
mov
or
and
ret
xchg
inc
popf
addr16
pop
repnz
fcoml
call
shrb
cld
out
loope
or
out
outsl
cmp
in
mov
scas
add
sub
add
jbe
inc
mov
dec
rcl
fsubrp
mov
inc
xorl
mov
inc
inc
data16
and
sbb
mov
jno
dec
mov
imul
das
mov
je
mov
hlt
cmpsl
test
mov
ja,pn
sub
adc
inc
xor
lods
pop
push
or
push
mov
dec
mov
mov
inc
lea
hlt
int
inc
and
sub
lods
cmc
pusha
fsts
mov
out
cmc
mov
adc
insl
fstl
loope
dec
or
jmp
jo
and
sub
jb
in
mov
pop
sbb
scas
xchg
cmpsl
mov
imull
dec
data16
cwtl
sbb
sub
ds
jecxz
and
dec
aas
push
in
andb
or
sub
mov
push
jae
mov
cmpsb
cmp
cmp
push
mov
lret
loop
or
mov
pop
in
jl
rolb
adc
dec
jne
cwtl
mov
nop
sbb
xchg
push
xor
mov
in
add
sbbb
imul
addr16
dec
push
push
incl
dec
mov
flds
xchg
lea
fsubs
adc
xchg
inc
push
mov
movsb
pop
cmpb
inc
pop
or
mul
xor
call
fimuls
and
sub
adc
rcl
dec
bound
stc
in
mov
icebp
imul
inc
aad
fmul
adc
push
push
lcall
add
jno
xchg
lahf
inc
es
daa
repnz
cmpsb
insl
sbb
push
add
das
lcall
insb
sbb
add
bnd
fsts
stos
xor
cwtl
xor
cltd
idivl
sub
mov
jecxz
inc
negl
jmp
shlb
mov
mov
add
aaa
or
pop
jle
pop
pop
sbb
cld
repnz
and
add
and
pushf
mov
jl
je
in
scas
es
fs
pop
cmp
xchg
jg
xchg
sbb
pusha
sbb
jns
mov
ljmp
push
in
mov
inc
stos
dec
fsubl
repz
inc
loope
push
add
and
stos
inc
jmp
outsl
leave
daa
push
and
repnz
inc
sub
outsb
or
fstp
daa
jl
add
stos
nop
fldl2e
inc
add
jmp
xchg
pop
repnz
sarb
mov
in
rclb
imul
pop
aad
ja
sub
dec
push
mov
jg
mov
in
lock
xchg
daa
cmp
rcrl
and
or
icebp
mov
out
dec
out
adcb
sub
xchg
shl
test
loopne
pop
adc
int3
ds
push
std
fstps
repnz
aad
popf
ja
test
adc
adc
andb
jmp
cmp
mov
jl
jae
push
in
fistpl
xor
pop
and
adc
lahf
mov
mov
popf
in
mov
push
shlb
cmp
xor
or
mov
lods
aam
adc
xor
cmpsb
jle
into
xchg
lahf
outsb
in
setae
push
dec
cmp
lret
push
sbb
xor
gs
call
fadds
ss
mov
xor
and
fcomp
xchg
mov
or
mov
insl
sub
mov
fldl
imull
icebp
cltd
adc
and
or
cs
jbe
or
jle
leave
xchg
lea
fwait
nop
sbb
mov
xchg
incl
icebp
cmp
pop
jp
movl
jnp
and
lret
test
fwait
inc
dec
jno
jp
mov
bound
dec
out
es
pop
cwtl
or
sbb
popf
lcall
jle
imul
cmpl
jns
rorb
cwtl
jge,pn
popl
pop
add
add
add
sbb
fs
pushf
loop
sti
or
stos
dec
jo
outsb
inc
xchg
lret
and
into
jo
out
xchg
xchg
xlat
lret
jno
lock
mov
or
xchg
xchg
daa
repnz
icebp
adc
inc
in
mov
cwtl
mov
jno
jg
mov
mov
dec
int
je
mov
dec
push
jbe
mov
add
jb
xor
mov
jge
loopne
rclb
adc
es
dec
les
stos
xchg
push
xchg
out
pop
cmp
jnp
and
adc
and
xor
fisubl
add
loopne
test
and
add
jmp
test
clc
cs
mov
iret
notl
mov
int3
roll
sahf
xchg
cli
into
fcoms
dec
js
decb
and
lea
mov
into
dec
sar
mull
imul
std
notb
ret
push
pushf
jle
pop
int
or
xor
lods
dec
or
and
jge
sbb
sahf
ds
push
sar
pop
mov
sbbl
dec
pop
insl
lcall
imul
aad
lds
je
add
imul
fmulp
sub
or
cli
push
loope
mov
xchg
xor
test
adc
cli
and
adc
rcr
mov
dec
lods
jmp
push
movsb
cmp
sti
scas
mov
fbld
jle
inc
mov
int3
test
shlb
add
sub
pop
pop
js
jo
ficompl
sub
lods
scas
inc
fdiv
pop
bound
inc
je
movb
loopne
mov
jge
imul
cltd
add
adc
sbb
sub
xchg
scas
mov
repz
ret
push
and
pop
cmp
imul
mov
pop
dec
fxam
dec
sbb
jle
sbb
out
xchg
pop
les
setle
mov
pop
pop
mov
je
mull
daa
repz
push
shld
jle
add
sahf
gs
ficoml
nop
xchg
mov
xchg
sub
jns
mov
and
mov
popa
pop
lods
pop
roll
and
ret
cmpsl
push
enter
arpl
or
sbb
fldenv
push
aaa
cli
movsl
stc
loop
dec
ffree
or
push
mov
dec
sub
aas
mov
in
fidivl
call
or
fcmovnbe
pop
scas
rclb
test
mov
addr16
loop
inc
mov
xchg
ret
daa
push
cmp
mov
aaa
sti
xchg
and
cmp
add
in
aad
jb
jne
paddb
xchg
fidivl
cmp
pop
lods
xlat
mov
pop
cltd
aaa
fdivrl
inc
xor
nop
imul
pusha
push
adc
pop
lahf
push
or
xchg
iret
fmuls
arpl
pop
mov
dec
mov
sub
mov
adc
es
xor
and
sti
icebp
shlb
mov
lock
lret
jp
mov
mov
pop
adc
lds
pop
repz
inc
xor
aaa
sbb
cmp
sub
js
push
mov
fsubp
pop
sub
xchg
cmp
ljmp
inc
push
jmp
imul
sarb
inc
stc
push
add
test
mov
pop
movd
lret
popa
decl
sbbb
mov
sub
xor
mov
lock
jne
adc
popf
cltd
arpl
es
dec
pop
mov
mov
imul
not
pop
lret
lds
jnp
mov
bound
pop
loope
dec
sub
popa
pusha
ds
mov
and
xchg
jne
out
push
lods
mov
aaa
pmullw
mov
and
pushf
mov
mov
lods
lods
adc
inc
dec
xor
mov
mov
stc
cmp
bsf
push
pop
rolb
mulps
enter
mov
add
or
pop
xlat
jecxz
hlt
mov
push
jl
xchg
push
adc
push
fcoml
xor
jmp
lock
push
push
aam
push
cmpsl
inc
jnp
scas
call
and
mov
xor
out
cmp
pop
fcmovne
and
mov
xchg
jge
mov
repnz
pop
mov
cmp
sub
or
scas
subb
shrb
lcall
roll
sti
sbb
les
mov
inc
dec
xor
dec
xadd
test
push
push
mov
mov
negb
dec
xchg
cmpsb
add
push
jne
in
and
clc
outsb
mov
push
xor
inc
pop
arpl
mov
sbb
test
jae
cld
jne
loopne
cmpsl
in
add
xor
in
sub
xchg
out
xor
push
mov
subb
fucomip
push
sbb
dec
insb
icebp
inc
ret
xor
push
inc
jo
pop
mov
bound
js
sbb
dec
sbbl
sbb
mov
mov
push
jo
xor
xor
pop
hlt
jne
loop
mov
dec
push
daa
push
push
hlt
add
pop
sub
stos
mov
add
mov
enter
xchg
and
pop
scas
aas
insb
or
mov
xor
ss
nop
or
inc
inc
inc
jg
ss
aad
mov
lods
int
movsb
mov
inc
inc
inc
dec
mov
scas
jg
outsl
inc
push
cmp
and
jg
adc
ljmp
pop
and
mov
in
jle
push
fucomi
adc
adc
pop
push
xor
ss
es
mov
cli
fcmovu
pop
aam
sbb
imul
xor
or
fisttpl
push
int
xor
xchg
push
mov
dec
adc
aam
repnz
mov
jnp
push
and
sub
mov
lcall
and
fdivs
mov
and
push
cmp
mov
lods
lock
in
or
cli
pop
jle
sbb
out
fiadds
out
cli
add
pushf
mov
ret
jne
lods
dec
cli
jle
test
rcll
jle
add
and
mov
stos
das
enter
mov
xchg
gs
or
repnz
cmpb
mov
daa
pop
mov
sti
dec
incb
cmpsb
sbb
ja
hlt
subl
and
xchg
add
fcoml
dec
dec
mov
and
or
pop
js
adc
insb
into
jnp
sarb
icebp
dec
in
sub
inc
xorb
jnp
lods
mov
push
lret
pop
lret
cld
arpl
es
gs
push
pusha
sub
jl
pop
lods
add
or
add
xor
sarb
ficoms
pop
pusha
add
dec
out
pop
sub
sub
jle
push
cmp
and
push
adc
adc
call
cmp
addl
lea
mov
lea
add
dec
imul
push
xchg
dec
cmovg
insl
rorl
subl
int
jl
jae
lock
sub
push
pop
xor
mov
pop
repz
out
jns
dec
das
addr16
fstp
in
push
sti
cmp
push
fimuls
jno
xchg
shll
iret
mov
sbb
rorl
fdivr
fldcw
jno
cmp
std
dec
mov
into
decb
mov
add
xchg
jae
xchg
stos
sbb
fmul
xchg
and
lods
jb
xchg
lds
jne
gs
test
adc
call
pop
sub
daa
sbb
jnp
div
jg
add
xchg
fbstp
cmpsl
cld
ljmp
fsubrs
xchg
stos
xchg
or
jae
cmp
loopne
jge
popf
jge
lods
js
pop
outsb
outsb
hlt
xchg
bound
mov
loope
je
iret
out
imul
pushf
loope
notl
push
pop
fwait
out
pop
sbb
mov
shll
movsl
mov
loopne
xchg
and
xor
xchg
scas
pop
push
mov
outsb
inc
and
and
or
or
mov
int3
xchg
push
xorl
mov
and
pop
popa
lea
adc
dec
mov
mov
loope
insl
pop
push
sbb
fists
stos
in
xchg
test
fwait
jbe
or
in
jmp
je
mov
scas
cmp
sub
outsl
outsl
xchg
cmp
inc
in
jmp
adc
push
adcl
rcrb
es
std
sarb
sbb
lods
pop
dec
fcoms
gs
inc
jle
cmpb
adc
xchg
ljmp
pusha
mov
lock
xchg
jecxz
in
jge
add
call
or
enter
fdivrl
push
jp
fimull
jo
pop
push
pop
js
push
xor
xor
ja
sbb
mov
pushf
inc
dec
out
xchg
aad
xchg
and
inc
jle
push
iret
rcl
loope
mov
or
pusha
xchg
sbb
mov
mov
ljmp
lods
imul
sub
jo
push
mov
sbb
dec
xor
hlt
leave
inc
pop
push
inc
std
sub
int
xchg
stos
inc
ss
sbb
cli
in
jne
loopne
loop
jne
fstl
into
cmp
outsb
cli
fwait
cmpsl
pop
xlat
mov
jg
sub
ljmp
sbb
iret
push
push
arpl
ljmp
inc
sub
arpl
das
cmpsl
das
mov
aad
jmp
pop
loop
int3
int
jo
xor
std
push
adc
testl
push
fcomps
push
and
push
rorl
dec
les
es
dec
lea
mov
or
rcl
movsl
bound
mov
mov
rep
dec
add
lock
and
lea
insl
faddl
in
add
or
das
ret
xor
enter
adc
cli
insl
movsb
jmp
bound
repz
test
popf
push
pop
jno
push
ss
xchg
out
push
jle
das
std
inc
outsl
dec
mov
jb
push
xor
mov
and
aas
ds
mov
and
cmp
sub
movsb
adc
popf
stos
xor
cmp
mov
popf
adc
leave
js
int3
test
adc
inc
aaa
xor
mov
xlat
or
dec
lea
push
push
jae
ret
sub
and
out
aaa
or
pop
pop
ret
cmpsl
or
data16
icebp
mov
bound
je
jecxz
sbb
mov
cmp
push
lret
jno
inc
aam
js
call
dec
icebp
sbb
repz
mov
mov
pop
and
mov
pop
lahf
xlat
push
add
mov
mov
pop
call
rcrb
js
into
leave
pop
or
xor
adc
daa
push
sti
insb
cmp
mov
add
cli
iret
xor
jb
sbb
xor
inc
adc
mov
jne
sub
out
outsl
xorb
cs
stc
pop
pusha
xchg
lcall
imul
negl
mov
stc
jl
faddl
clc
fs
push
xor
xorb
std
je
xchg
pop
push
xchg
pop
xor
not
pop
movsl
fnstenv
mov
push
xor
call
std
fidivrl
dec
mov
stos
and
outsb
je
pushl
ss
rorl
mov
xchg
pop
daa
add
scas
and
jecxz
lret
pop
jg
lea
xor
bound
or
fcompl
or
push
xchg
and
pop
push
movsb
jnp
lret
movsb
ficompl
mov
cmpsb
push
imul
pop
xor
lock
jecxz
pop
push
out
inc
imul
addr16
idivl
xor
loopne
mov
js
or
les
sub
xchg
inc
push
push
cli
flds
cltd
adc
add
gs
adc
pop
rcl
lods
add
repnz
xor
pop
push
popa
cmp
jl
jo
mov
mov
xor
addr16
imul
push
jo
xchg
push
clc
into
mov
popf
xchg
xor
mov
dec
or
push
iret
add
into
cmp
sub
add
sar
jl
mov
sub
push
arpl
shll
or
add
orb
jle
inc
int
mov
sahf
push
sbb
outsb
jnp
pop
cwtl
cli
jbe
xlat
cwtl
mov
mov
enter
testl
divl
out
repnz
shll
pusha
iret
inc
nop
loopne
repnz
jmp
or
mov
in
pop
sbb
sub
mov
cld
push
adc
mov
aas
inc
mov
sub
ds
pop
dec
dec
loopne
daa
iret
loopne
daa
int3
xchg
in
push
mov
fwait
mov
push
adc
jns
test
mov
mov
xchg
adc
test
dec
mov
rclb
gs
ret
mov
stos
addl
andl
or
loopne
pop
mov
movsl
push
mov
xor
mov
sti
sbb
and
in
adc
mov
push
out
mov
aam
lods
bound
mov
movsb
push
xor
daa
xor
push
and
mov
rcll
testb
aaa
mov
xchg
add
and
mov
test
sbb
hlt
js
lret
outsb
jns
add
hlt
dec
inc
rolb
xor
adc
shlb
and
jns
jle
cmp
rorb
in
fwait
popa
ja
inc
outsb
mov
lea
ja
jne
cld
das
idivb
push
xchg
scas
adc
or
iret
out
add
push
mov
sub
lods
cmpsl
mov
sub
xchg
mov
inc
jl
jmp
inc
addr16
outsb
xchg
in
aas
inc
daa
fisubrs
aam
cmpb
into
sub
lea
subb
xor
and
or
cmp
aam
or
test
in
push
push
mov
mov
fisubs
inc
push
mov
inc
pop
int3
ret
ficoms
add
sub
cmp
adc
push
push
daa
jnp
pop
fdivr
test
cltd
fidivl
les
and
aam
dec
jmp
jg
sub
daa
pop
sti
repz
call
cmpl
xchg
fnstcw
cmp
pop
xchg
mov
jns
cmpsb
jne
pusha
outsl
cmc
pop
sysret
cmp
test
mov
xor
outsl
add
scas
test
ret
mov
sbb
or
adc
dec
push
lret
mov
adc
lock
mov
addr16
mov
das
or
movsl
adc
push
test
dec
push
push
sub
xchg
mov
das
out
mov
mov
xor
mov
push
imul
movb
sahf
adc
popa
pop
aad
inc
cltd
and
adc
and
imul
and
xchg
imul
cld
sbb
pop
iret
jmp
sbb
jnp
mov
movsl
push
jns
outsb
fwait
xor
pop
lea
cltd
into
add
push
pop
pop
js
push
pop
fidivrs
std
push
mov
arpl
or
ljmp
fs
or
sar
or
jb
pop
dec
jge
popf
lds
mov
cltd
inc
jae
mov
push
jp
sti
pop
push
hlt
lcall
sub
and
push
std
dec
sbb
sbb
jbe
dec
xor
jg
andl
mov
stc
dec
ret
loopne
sub
add
bound
lret
dec
xchg
into
mov
inc
mov
int
neg
insl
jp
mov
cmp
je
pop
ret
push
in
sahf
mov
inc
mov
imul
std
fs
jecxz
out
outsb
pop
in
aas
clc
sarl
cmp
jmp
jae
dec
adc
mov
subb
and
comiss
clc
push
lret
shlb
pop
sub
sub
sbb
cmp
cmp
xor
mov
mov
or
es
aam
push
jg
cmp
std
fstps
xchg
inc
rcrl
mov
xchg
fimull
imul
mov
mov
lahf
mov
fcompp
popa
cmp
push
inc
hlt
and
mov
jbe
pcmpgtd
int
jg
imull
xchg
ret
ja
xchg
mov
int
inc
jo
add
pop
aaa
inc
test
rclb
push
movsb
pop
adc
and
fisubrl
fdiv
sbb
jo
in
nop
das
ret
mov
pop
dec
repnz
mov
arpl
mov
cmc
cltd
scas
adc
std
lods
movsl
vpunpcklbw
or
adc
and
mov
cmp
jns
in
shlb
sahf
inc
lret
fwait
je
lock
push
call
jb
in
push
shrl
push
repz
stos
test
xchg
jecxz
movl
push
loopne
jae
scas
mov
jne
and
dec
and
inc
daa
mov
das
cs
cmp
dec
cs
lds
cltd
inc
in
cmpsl
imulb
cmc
xchg
rorl
xchg
pop
les
into
push
jmp
into
repnz
test
repnz
cmp
in
test
pop
adc
pop
cmp
imul
repz
jmp
loop
pop
arpl
push
les
and
ss
pushf
add
es
fcoms
mov
inc
icebp
jne
cltd
daa
pushf
xor
pop
jmp
loop
ficomps
mov
push
lods
mov
sbb
dec
mov
cmp
outsb
into
sub
push
sbb
xchg
pop
pop
rcrb
push
mov
mov
je
push
xor
bound
xor
out
bound
ljmp
dec
push
mov
mov
pop
call
sub
sub
aas
cmp
stos
test
dec
das
mov
insl
into
xor
jo
push
or
mov
mov
xor
call
xchg
mov
ss
mov
push
sub
jl
out
add
xlat
jl
aad
inc
lds
sbb
lock
mov
xor
xor
sti
xchg
ret
sbb
mov
jae
out
sbb
mov
lcall
jg
insb
mov
sbb
xchg
movsb
sahf
lret
jecxz
test
insb
call
xor
sub
xor
scas
sbb
in
fimull
pop
inc
add
mov
ja
cmp
ret
jne
scas
daa
pop
inc
sahf
ret
repz
pop
or
push
test
mov
mov
push
lds
mov
jecxz
sub
fisttps
ja
or
mov
or
lahf
inc
pop
mov
shl
sub
push
arpl
lods
iret
xchg
fdivp
pop
or
sbb
cmpsl
adc
or
popa
out
pop
pop
mov
cwtl
jecxz
xchg
and
jbe
sarb
adc
dec
sub
pop
xchg
mov
jg
jns
mov
clc
fisttps
leave
or
or
imul
push
fucom
insl
sub
std
xchg
inc
mov
out
arpl
add
call
xor
rorl
xor
outsb
jmp
aad
xchg
inc
add
cli
clc
adc
xor
adc
mov
dec
mov
mov
and
or
outsl
pop
cmp
fwait
xchg
ds
push
lds
mov
fs
pop
or
sbbb
test
cmp
cmc
add
cwtl
push
jmp
repz
sbb
neg
mov
jle
cli
hlt
add
push
cmp
sub
jnp
nop
fcomp
adc
cmc
mov
dec
insl
in
mov
jbe
lcall
test
aam
mov
dec
sub
fisubrl
imul
mov
es
aam
and
add
imul
xor
cli
clc
xor
fisubs
xor
out
cmp
mov
iret
repnz
iret
ljmp
push
insb
ljmp
subb
sub
xchg
push
aaa
mov
mov
mov
int3
or
sub
xchg
bound
push
lods
jno
and
cli
add
mov
mov
sub
mov
in
sarl
dec
sub
adc
outsb
out
idivl
hlt
inc
das
pop
pusha
jns
push
cmpsl
in
push
into
jmp
add
mov
cmpsb
cmpsl
aaa
int
in
xchg
and
fidivrs
cwtl
pop
shl
outsb
push
pop
sub
cmp
out
js
mov
scas
inc
jne
test
pop
jno
aaa
inc
inc
sub
cld
rclb
jge
stc
mov
mov
negl
sub
mov
and
or
lock
inc
xor
shlb
out
hlt
jb
bound
ficomps
mov
xor
insb
pop
bound
sar
xor
lcall
pop
jns
test
lahf
mov
pop
sbbb
push
cmp
xchg
xchg
add
int
sbb
sbb
test
cltd
push
imul
gs
inc
ret
xor
outsl
cmp
mov
test
and
inc
inc
in
mov
mov
sub
subl
push
xchg
sti
cmpsl
into
pop
xor
sbb
and
shrb
loopne
adc
daa
daa
pop
push
and
lods
jns
pushl
add
insl
pop
movsl
adc
in
popl
and
inc
and
ret
pushf
xchg
ljmp
push
mov
mov
adc
push
inc
fsubrp
ljmp
mov
rol
mov
dec
sub
jae
out
pop
mov
addr16
cmpb
jecxz
cmpsb
outsb
out
aas
stc
mov
mov
mov
mov
push
add
cmp
cwtl
out
pop
cltd
xor
push
adc
pop
jnp
sti
cli
out
addl
jl
ljmp
mov
sub
scas
fst
aas
add
nop
les
or
aam
lods
and
sbb
fsubrs
sub
and
xor
dec
iret
imul
hlt
ja
sub
pop
push
push
dec
pop
call
pop
popf
and
mov
std
ret
mov
mov
or
ds
lcall
xchg
xor
add
and
add
pop
int
sub
out
aaa
repz
subl
rcll
inc
push
int3
cmp
dec
mov
pusha
xor
int
and
jge
or
js
aas
mov
xor
daa
int3
into
inc
cmpl
cmc
shll
mov
in
sbb
lret
loopne
mov
fsubrs
mov
mov
pop
mov
outsl
into
sbb
test
popf
push
jae
fnstenv
push
cmp
jmp
push
outsl
pop
mov
fistpll
shrb
jno
cmp
pusha
out
aad
es
sub
leave
lods
jno
pushf
dec
sub
xchg
push
pop
inc
pop
rep
adc
mov
push
mov
repnz
add
rol
stc
push
dec
jecxz
repnz
fstps
xchg
mov
mov
mov
cld
sbb
jmp
pop
fimuls
negl
enter
push
jbe
loop
cmp
jne
or
vcvtpd2dqy
push
adc
stc
and
and
out
push
sbb
sub
jecxz
enter
mov
int3
in
aas
pop
insb
push
add
in
mov
outsb
jnp
add
push
fsubs
mov
xchg
repz
mov
aam
jge
push
push
test
mov
pop
pop
xchg
mov
imul
pop
adc
and
enter
inc
iret
fstps
aam
faddl
mov
lea
inc
cmp
repnz
into
mov
scas
add
xchg
sbb
jnp
rcll
sub
inc
sub
mov
jns
mov
sar
jno
push
push
cmc
push
sub
out
ljmp
dec
int3
iret
test
movsl
dec
rcrb
push
push
loop
rcll
jnp
mov
cmp
mov
jnp
lcall
movsl
mov
js
pop
adc
clc
push
push
push
repnz
pop
faddl
sub
dec
imul
clc
in
insb
call
decl
sbb
aam
push
or
fcoml
subl
mov
cmp
sbb
lcall
push
mov
in
xchg
jb
adcl
sub
push
pop
inc
fcomi
or
and
lret
pusha
cmp
jp
push
aas
or
dec
sahf
add
push
inc
pop
test
jb
mov
push
sahf
repz
movsb
mov
ds
clc
jp
ja
pop
pop
jo
pop
mov
mov
sbb
xlat
xchg
push
imul
test
jns
xchg
cmp
roll
out
je
sbb
nop
dec
add
jecxz
inc
jg
out
ljmp
push
enter
lods
mov
enter
lahf
lcall
or
jmp
cmpsl
xchg
dec
lret
mov
and
xlat
test
test
or
cs
aas
in
push
outsb
std
mov
jmp
pop
cmp
idivb
and
mov
lea
repz
pusha
jbe
push
js
sbb
lds
gs
out
clc
stos
cmp
pop
test
push
mov
dec
mov
jns
xchg
iret
push
xor
mov
test
mov
divl
xor
fdivrs
pop
movsb
addr16
lret
sub
cmovle
jecxz
test
test
sbb
cmpsl
mov
mov
outsl
stos
mov
dec
lret
dec
das
sub
xchg
cmp
mov
out
xchg
daa
in
fidivrl
ljmp
mov
bound
mov
movsb
fidivl
mov
and
sub
cli
and
fwait
nop
sub
sub
pop
insb
inc
sbb
icebp
pop
imul
rclb
xor
pop
xchg
mov
push
push
loopne
push
subb
pop
mov
lods
mov
lahf
mov
xor
es
test
mov
test
into
dec
ret
jae
ret
fnstsw
leave
shrl
cwtl
das
mov
imul
mov
push
aas
mov
pop
pop
fstpt
xlat
fldt
test
pop
jnp
xchg
jl
cmpsl
imul
nop
jg
jae
sub
fdivr
addl
out
outsl
xchg
and
adc
and
cmp
xor
sahf
dec
dec
xchg
clc
sub
int
or
pusha
pop
pop
lahf
sti
mov
add
push
xchg
push
hlt
hlt
pop
arpl
jp
mov
movsb
xor
push
ret
sub
push
jnp
divb
push
ficompl
imul
mov
or
push
mov
xor
xchg
push
mov
bound
pop
repnz
aas
cmpsb
sub
jl
jbe
cld
scas
mov
mov
xchg
mov
stc
fcmovb
lds
movsb
jne
in
fnsave
sub
lea
or
into
add
hlt
inc
lret
or
xor
or
lea
mov
stc
push
std
popa
imul
fwait
jbe
stos
cmp
imul
das
jg
aam
mov
cmpsb
hlt
pop
cmp
inc
shlb
cmp
pusha
ja
xchg
jno
sbb
pop
sbb
sbb
ss
fisttpll
mov
jbe
lret
hlt
mov
push
inc
mov
mov
lret
mov
test
adc
jae
push
cltd
daa
in
jae
adc
sbb
mov
sbb
pop
stos
push
inc
ret
jge
sbb
fidivrs
leave
dec
mov
sub
shll
cmpsl
mov
xor
push
sub
jae
sbbl
jmp
and
idiv
xor
fbstp
cmp
xchg
ss
call
std
push
push
inc
mov
sub
loope
or
and
pop
dec
inc
out
test
xor
iret
test
aas
and
dec
outsl
std
out
dec
test
mov
das
pop
test
pop
mov
adcb
mov
inc
mov
dec
fisttpl
pop
cs
and
jae
loopne
lcall
push
pop
dec
pop
mov
shl
mov
xor
jno
stos
aam
jno
test
in
inc
dec
adc
inc
out
stc
ja
addr16
out
jl
mov
insb
fidivl
nop
jmp
ljmp
inc
inc
mov
in
iret
mov
out
icebp
pop
mov
mov
testl
jge
and
stos
and
xchg
push
out
les
cltd
pop
test
movsb
jne
fisubrl
adc
mov
icebp
or
repz
xchg
fstl
xor
test
popl
fidivs
push
adc
dec
mov
stos
mov
sub
mov
lret
cmp
es
outsl
imul
sti
lea
in
adc
mov
mov
xor
cld
sbb
cs
out
sarb
mov
add
lret
sub
hlt
xchg
fwait
insl
or
arpl
jmp
mov
jae
je
push
jne
jg
mov
dec
aas
gs
cli
sub
ret
xor
xchg
mov
push
mov
dec
jbe
pusha
shll
sbb
bound
sbb
cmp
inc
jne
jnp
jne
and
push
sub
push
in
or
xchg
push
aad
ret
lahf
daa
repz
clc
xor
mov
gs
out
adc
mov
out
mov
shr
mov
mov
cmp
sub
fstl
or
div
and
lock
scas
xchg
shrb
dec
pop
dec
loop
adc
mov
dec
adc
xor
mov
mov
mov
push
std
outsl
jnp
imulb
adc
jne
call
inc
fbld
loop
mov
sbb
xor
inc
jecxz
jo
xchg
mov
xchg
ss
sbb
iret
out
inc
xchg
and
push
xlat
ljmp
cmp
minps
lock
in
push
mov
sbb
adc
xor
sbb
hlt
and
xor
sub
xchg
shlb
dec
mov
dec
cmp
dec
mov
add
push
cli
lock
inc
lods
xchg
sahf
daa
pop
dec
jb
sbb
mov
sbb
leave
imulb
add
dec
mov
xlat
daa
fistpll
xchg
mov
dec
fiaddl
mov
test
lds
dec
stos
jl
vxorps
push
sbb
int3
int
cmp
pop
ljmp
adc
inc
xchg
pop
cwtl
mov
mov
mov
dec
mov
test
add
outsb
cmp
pop
pop
push
ret
pop
xor
inc
push
cmp
sbb
fcmovb
pop
lret
mov
fwait
in
les
out
adc
mov
scas
mov
inc
dec
ljmp
cld
movsb
pop
ret
aam
add
xor
movsb
enter
daa
les
loop
push
mov
js
cwtl
ret
das
arpl
shll
jp
idivb
jg
fs
xor
mov
xor
leave
js
enter
pushf
fisttps
mov
lret
cmp
push
addr16
sbb
mov
mov
xor
sarb
push
cmp
lahf
push
shll
inc
mov
sar
out
mov
rcll
and
pop
pop
dec
fiadds
es
xchg
pop
loopne
add
dec
mov
pushf
cmp
or
repz
jg
arpl
mov
aam
imul
jb
inc
into
inc
mov
test
das
outsl
sub
sbb
dec
sar
stc
sub
pop
and
pushf
jp
or
and
sub
lea
fs
les
bound
test
and
sbb
inc
xchg
pop
popf
adc
mov
cmp
addr16
ljmp
cld
xchg
jb
xor
xchg
subl
sbb
sub
clc
aam
ja
jbe
cmp
lock
push
push
push
push
mov
pop
or
dec
mov
mov
imul
mov
xor
mov
jno
repz
test
mov
jmp
xor
sub
mov
test
xorl
or
xchg
and
mov
push
mov
mov
scas
push
xchg
test
aad
mov
mov
mov
lret
sbb
cmp
cmp
fcomps
jo
fldenv
xchg
leave
cmpsb
push
pop
xor
or
push
dec
popf
mov
cmpsb
jp
stos
adc
push
jp
cmp
xchg
imul
mov
cld
sbb
dec
jecxz
dec
pop
loopne
roll
cmp
mov
in
rol
cs
xchg
cmp
repz
add
adc
jns
and
xor
jb
mov
mov
leave
sbb
xchg
lock
mov
and
test
xchg
filds
or
push
push
call
dec
jbe
outsb
mov
aas
sahf
xor
divb
aaa
sbb
xor
mov
fstpt
sbb
fistpll
ret
jnp
mov
mov
insl
mov
xor
push
mov
pop
mov
mov
in
or
mov
xchg
xchg
iret
push
mov
and
mov
xchg
das
clc
cmp
dec
adc
gs
je
movl
cld
idivl
or
xchg
inc
and
jae
jne
fldcw
mov
icebp
loopne
inc
cmpb
test
sti
adc
gs
cmp
fdivr
adc
arpl
xor
pushf
xorl
xchg
rcll
testl
stos
and
lret
in
or
jo
push
xorl
nopl
stc
popa
popa
jo
mov
or
ds
fwait
xchg
and
cld
and
roll
test
rclb
in
loope
lods
and
inc
call
andb
mov
sub
adc
aam
rcll
cli
cmp
adc
pop
add
fcomi
sbb
rcr
sahf
ficompl
pop
sub
adc
mov
and
in
pop
push
shll
addl
sub
pop
mov
adc
adc
fdivrl
jne
addr16
ds
sub
xchg
je
push
pop
in
ds
pop
add
inc
mov
jg
mov
out
dec
adc
sbb
out
xchg
aam
sub
fsubrp
divl
test
dec
mov
enter
push
icebp
ljmp
mov
mov
dec
mov
mov
lds
sahf
xor
xchg
cmpsb
nop
int3
lcall
inc
lds
sub
lock
sbb
hlt
fcomi
add
sub
jp
shll
insl
xchg
daa
or
adc
xchg
aad
xchg
adc
sbb
jmp
add
lcall
cld
jmp
cmc
xchg
data16
mov
xor
sbb
sub
stos
sub
mov
imul
inc
sbb
ss
aas
fld1
jmp
stos
xorl
lock
adcl
jb
xor
lcall
add
lock
out
pushf
mov
cmpl
mov
cwtl
xchg
fdivr
fyl2x
push
imul
jno
pusha
std
jne
shll
scas
mov
and
out
movsl
scas
ljmp
ret
ds
ljmp
lods
into
add
add
jae
dec
xchg
notl
add
fwait
test
scas
inc
sbb
adc
fs
cmp
into
nop
data16
testb
gs
add
sar
fadds
sub
or
cmp
in
cmp
mov
out
push
stos
xlat
jbe
dec
push
xlat
in
rcr
adc
xchg
pop
mov
rcrl
add
and
stos
scas
mov
jecxz
jns
in
aas
cmpsb
xor
ja
lods
sbb
pop
loope
sbb
push
xor
xchg
pop
xor
xchg
stos
xor
imul
xor
cmp
addr16
mov
mov
mov
stc
scas
xchg
push
sub
and
cmp
jmp
ljmp
mov
lahf
push
inc
nop
enter
push
rorb
mov
pushf
mov
and
shl
mov
leave
xchg
jae
and
sti
dec
push
xor
fmuls
inc
xchg
sbb
cmp
call
inc
into
sbb
scas
mov
add
fwait
jae
dec
stos
push
inc
sarb
xchg
and
pop
dec
jg
or
lahf
sarb
add
push
je
adc
sbb
clc
cwtl
or
ret
addr16
add
jmp
xor
pop
xor
ret
inc
push
testb
stos
leave
dec
outsl
pop
fimuls
sub
les
popa
xchg
repnz
inc
mov
fisubrl
fnstcw
inc
faddl
inc
in
insl
add
pop
pop
jae
fildl
inc
rclb
imulb
jmp
and
jno,pn
and
xchg
filds
negb
imull
inc
push
clc
fsubl
data16
mov
sbb
pusha
and
in
cmpsl
xchg
lods
dec
or
pop
cmpxchg
out
data16
rclb
lds
clc
pop
jg
add
inc
xor
push
cmp
cmp
push
outsl
jecxz
lea
mov
sahf
jle
rclb
and
sarl
adc
pop
loop
popa
into
sbb
das
mov
idivl
pusha
int3
xchg
jae
cmpsb
cmp
cld
clc
add
inc
test
jo
movsl
inc
push
loop
inc
pusha
test
out
cmc
sub
ja
inc
xchg
ds
mov
push
ss
je
mov
mov
aad
ja
mov
pusha
xchg
or
sbb
addr16
arpl
out
jmp
rolb
mov
cmc
dec
xchg
rolb
fidivrs
push
aam
mov
sbb
add
int
pop
mov
shr
dec
jecxz
jae
xchg
push
das
int3
add
pop
sbb
inc
es
daa
test
mov
dec
into
sbb
or
stc
movsl
xchg
push
mov
aaa
mov
movsl
xchg
movsb
cs
ficompl
jmp
mov
and
das
pop
test
in
adc
lcall
jmp
mov
test
cmp
jp
jge
in
clc
push
dec
aas
call
scas
dec
jo
xchg
imulb
in
push
fstps
push
scas
push
and
push
push
pusha
dec
andl
repz
or
push
aam
sub
inc
and
xchg
mov
aas
fs
lcall
loope
lcall
mov
push
mov
popf
cwtl
mov
ljmp
insl
movsb
inc
xchg
ds
scas
adc
ficompl
xlat
adc
xchg
aas
mov
cmpsb
call
in
repnz
lahf
adc
lret
pop
sti
ret
cmpsb
mov
inc
jge
add
xchg
mov
fidivrs
adc
cmp
or
xchg
sar
imull
std
xchg
cmc
mov
cwtl
aas
xchg
jne
dec
push
mov
andl
mov
mov
mov
jns
outsb
cmc
lods
mov
jns
adc
sub
loop
cmpsb
adc
nop
inc
mov
lcall
imul
mov
xchg
lret
arpl
loopne
ljmp
mov
or
test
adc
or
cltd
je
jbe
sahf
inc
ss
adc
push
sbb
sahf
cmp
pop
fdivrl
xor
out
mov
jnp
adc
pop
mov
insb
xchg
cmc
sbb
sub
sub
pop
repnz
jmp
cmp
in
movsb
jle
inc
xor
sub
ljmp
sarl
mov
xchg
adc
xchg
inc
into
push
pop
jno
mov
fs
incl
inc
xchg
xchg
lods
sbb
mov
cmp
cwtl
mov
jecxz
xchg
mov
xlat
jb
push
sub
add
pop
dec
add
cmp
xchg
lods
repz
loope
lahf
jmp
or
xchg
repz
dec
outsb
or
test
mull
cmp
dec
push
cmp
rcr
stc
out
mov
jle
pop
into
enter
fs
test
jae
fdivp
jb
xchg
pop
xchg
cmp
sub
aaa
xchg
jo
sub
xchg
xchg
adc
pop
dec
xor
data16
shl
dec
or
fisubl
or
jo
addb
lcall
cs
add
mov
rorb
insb
xor
jb
es
sbb
inc
jge
xor
cwtl
mov
lret
dec
adc
test
cmpsl
ret
mov
push
test
test
adc
gs
enter
mov
cmp
pop
pushl
or
dec
rclb
xor
inc
push
ja
mov
jnp
loope
add
aad
or
fcomp
out
pop
and
loopne
cs
in
jecxz
adc
xor
xchg
mov
movsl
add
add
mov
or
popf
xchg
lock
mov
mov
xchg
roll
xlat
lret
push
or
jmp
and
rcr
stc
xchg
mov
push
fcmovnb
xor
and
shrl
push
test
mov
iret
push
js
mov
icebp
adc
lea
bound
icebp
jle
pushf
mov
lods
sbbb
fwait
inc
inc
sbb
dec
out
push
lods
ret
test
mov
inc
rorl
fwait
mov
jg
dec
sbb
fidivrl
dec
jne
sbb
rorl
cmp
adc
rcll
int3
xchg
cmc
and
and
mov
add
sarb
ds
lea
hlt
push
cmp
clc
hlt
dec
inc
or
and
pop
shlb
or
sbb
call
inc
pop
test
int3
push
aam
repnz
popa
cwtl
jbe
nop
arpl
pop
ss
cmp
push
aam
ret
popf
add
lcall
add
pop
imul
mov
add
call
icebp
cmp
cmp
pop
jae
divl
mov
pop
fsts
leave
xchg
inc
gs
bound
aaa
push
ret
and
mov
fsubs
jl
jns
leave
xchg
pop
sub
pop
outsl
pop
in
cmp
xor
stc
push
pop
fists
cli
mov
pop
pop
jecxz
cwtl
fcomp
iret
lret
test
loopne
inc
adc
adc
lods
mov
mov
mov
pop
and
mov
enter
xor
pop
shl
andl
loop
or
jp
scas
int3
sub
lahf
mov
jb
jl
mov
insb
pop
dec
cmp
cmpsb
sbb
rcrl
daa
out
subl
cmc
int3
addr16
stos
dec
out
in
loopne
mov
addl
add
jg
rcrb
out
mov
shrb
adc
sbb
xorl
push
jg
add
sahf
sbb
xchg
imul
mov
call
mov
add
pop
push
fcomps
lret
inc
mov
push
shll
dec
repnz
or
push
cltd
xorl
adc
xor
mov
fsubp
js
push
or
or
cli
or
divb
jae
inc
mulb
pushf
xor
mov
push
popa
sbb
push
pop
cmp
jns
test
int
sub
sbb
out
adc
cli
add
xlat
incb
in
dec
inc
push
test
jnp
sub
roll
les
popa
les
dec
cmc
cli
cmp
jne
jl
out
dec
cs
xchg
adc
and
xchg
sub
lahf
lret
jbe
repz
mov
mov
push
pushf
and
sub
movsb
adc
out
jmp
add
or
mov
push
inc
loopne
mov
pushf
pop
mov
jno
mov
mov
pusha
cld
inc
addr16
mov
dec
and
cmp
and
push
mov
mov
mov
fcmovnbe
imul
cmp
xchg
call
aam
test
jnp
lcall
jecxz
js
in
loopne
iret
mov
arpl
cwtl
sub
icebp
cmp
and
je
adc
jae
iret
subb
xchg
jo
ds
jno
inc
and
cmp
pop
cmp
repnz
test
jo
lea
xchg
xor
push
enter
lret
fs
iret
xchg
in
sti
addl
add
out
sub
xchg
pusha
insl
add
push
inc
cltd
loopne
aaa
pop
mov
jle
push
sbb
xor
cmpsb
xchg
cmp
and
rclb
mov
add
out
mov
jp
sub
xchg
cld
stc
dec
out
adc
aam
jmp
shlb
stos
inc
or
xchg
sub
hlt
dec
or
aam
ret
mov
mov
inc
pop
nop
ds
adc
adc
mov
adc
sbb
js
xchg
xchg
jbe
movsb
imul
js
mov
mov
cmpsb
mov
clc
and
insl
in
fcom
enter
push
cwtl
jns
pop
jne
pop
push
int3
cltd
std
and
pop
int
cmp
fisttpll
lds
or
inc
adc
jo
push
stc
inc
jae
mov
rcl
jp
cmc
xchg
add
fdivl
aaa
xchg
cmp
mov
lods
jp
mov
push
cmp
jae
sub
jmp
fcoml
adc
shlb
insl
dec
movsb
scas
gs
aas
ficoms
ljmp
add
test
call
fsubs
fbstp
stos
cmp
xlat
sub
ljmp
fdivrs
psubsw
sti
ja
inc
ja
mov
clc
test
bound
call
notl
mov
testl
outsl
test
push
test
xor
jl
xor
fst
dec
imul
push
shlb
aam
movsl
pop
sub
xor
jmp
xchg
repz
into
cmc
pop
lahf
mov
scas
pop
mov
push
adcb
add
cltd
adc
sub
adc
and
inc
jecxz
mov
xchg
pop
movsl
nop
arpl
dec
imul
dec
fistpl
jns
out
dec
rorl
mov
shl
xor
ja
cmp
mov
xchg
lods
and
lahf
repz
stc
daa
out
dec
pop
mov
xchg
add
lret
das
pop
shr
pop
cmp
mov
fldenv
pop
adc
lret
pop
lods
or
jp
pusha
imul
sahf
mov
cmp
outsl
cld
popf
push
ror
push
sbbb
fcmovnbe
dec
inc
push
cmp
mov
or
or
js
test
mov
popa
inc
add
ljmp
lret
push
xchg
push
lahf
add
jl
jmp
xlat
push
mov
push
dec
mov
mov
popa
aad
jge
movsb
sub
leave
add
clc
inc
out
and
in
dec
daa
xchg
sbb
sbb
dec
add
mov
aaa
loope
je
inc
inc
jno
mov
lahf
jo
xchg
addr16
mov
call
or
sub
xchg
es
cmp
add
fisttpll
pop
fiadds
push
push
inc
out
sub
jg
fs
inc
mov
sub
inc
jge
push
jmp
pop
xlat
dec
jnp
out
pop
push
adcl
sbb
mov
push
sub
aam
rcrl
stos
pop
fwait
dec
inc
rcr
xchg
mov
xlat
adc
arpl
jle
out
xchg
loopne
cmp
nop
pop
aas
xlat
icebp
jo
test
pop
push
inc
int3
xchg
dec
xchg
push
pop
lcall
aas
or
push
add
test
push
mov
and
pop
sub
mov
pop
lods
mov
shll
imul
xchg
xchg
adc
dec
add
test
add
pop
test
or
or
and
jl
and
in
into
sub
repz
mov
paddw
lret
fldt
and
insl
pop
int3
ss
movsl
xchg
jno
mov
pushl
sbb
aad
cmp
mov
in
add
mov
loope
pop
adcb
pop
test
sub
popa
dec
andl
outsl
outsb
daa
loop
cltd
fidivl
ljmp
mov
mov
mov
sub
fldcw
into
daa
jns
or
xchg
sbb
jne
sub
push
cmpsb
adc
mov
sbb
ret
js
pop
inc
stc
pop
mov
push
dec
in
dec
movsl
adc
inc
out
fnstcw
dec
cmp
xorl
shrl
test
adc
out
sub
mov
mov
inc
lea
mov
imul
lret
jle
popa
es
mov
std
xor
bound
push
xor
inc
or
adc
xchg
push
add
cmp
add
xor
pop
repnz
imul
int
push
sbb
mov
push
pop
movsl
lods
gs
daa
and
push
add
mov
dec
imul
inc
mov
add
and
push
push
lods
aas
mov
pop
decb
or
mov
fcmovne
lea
inc
cmp
push
push
pop
push
lcall
movsb
inc
rcl
inc
mov
and
stos
pop
fidivl
mov
sarl
xchg
scas
adc
movlps
popf
add
xor
mov
ret
jp
push
jo
mov
pop
or
call
jmp
pushf
and
cmpsl
aam
mov
stc
mov
pop
push
loop
jge
inc
adc
or
adc
xchg
push
je
test
mov
outsb
mov
push
cmp
out
mov
jb
sub
dec
dec
rcll
in
in
push
cltd
ret
loopne
gs
dec
int3
fistpll
pop
dec
sub
lock
mov
push
arpl
inc
xor
bound
test
pop
xor
xlat
aaa
jae
dec
push
cli
cwtl
pop
fstl
cli
fcomps
das
adc
test
test
pop
inc
or
inc
pusha
xlat
fisttps
cltd
stos
filds
cmp
add
xor
leave
imul
fucomp
popf
fnsave
mov
cmp
ja
jge
xchg
rcrb
inc
stc
cli
leave
jmp
enter
std
xchg
jae
pop
cwtl
dec
mov
sub
cmp
xor
sbb
sti
and
je
aas
inc
xor
fnstenv
push
push
push
sbb
imul
cwtd
sub
nop
cmpl
mov
scas
aad
mov
es
pop
notb
inc
out
pop
out
mov
imul
xchg
and
xchg
shr
inc
imul
inc
cltd
inc
dec
cltd
jl
gs
aad
lock
jno
jae
xor
jbe
pop
lock
jp
or
shlb
cmpsb
es
lods
jae
xor
adc
sub
scas
xor
ret
and
in
mov
pop
mov
sbb
orl
shll
xor
cmp
pop
sub
stos
push
adc
sti
cmp
jae
lret
sar
and
adc
add
cld
jecxz
rolb
mov
out
mov
loope
adc
dec
inc
sbb
add
repnz
aas
xchg
rcrl
jmp
movsl
xor
mov
jmpw
leave
iret
test
and
ds
mov
jne
cmp
xchg
sha1rnds4
fcmovnbe
pop
pop
inc
filds
lahf
mov
push
xchg
std
into
call
cmp
sbb
out
mov
js
xchg
test
gs
jae
out
rorb
test
and
mov
add
lods
sar
inc
cmp
mov
inc
sbb
pop
test
add
fldcw
aad
lret
ret
mov
cmp
int
cmp
fstl
lcall
xchg
mov
cmp
adc
add
mov
insb
out
shrb
mov
or
sub
pop
jnp
or
sbb
fsub
bound
f2xm1
xchg
cmp
popf
sbb
cmp
mov
xor
aam
or
sub
xor
mov
test
xor
lods
mov
pop
add
inc
mov
rcrl
xchg
fs
int3
inc
jge
nop
outsb
stc
aam
xor
jecxz
push
xchg
mov
in
push
arpl
mulb
and
aaa
pop
out
pmaddwd
fstps
sbb
push
ret
insb
mov
imull
push
and
mov
cs
sub
iret
xchg
test
rorb
clc
pop
aas
testl
imul
fs
out
pop
sub
lahf
cmpsl
dec
sbb
dec
ret
inc
and
mov
fdiv
xchg
icebp
mov
mov
aaa
movsb
jg
xchg
cld
mov
cmc
push
xorb
pop
js,pt
aaa
xchg
jo
sub
sahf
xchg
adc
stos
pop
jp
cmpsl
mov
adc
stos
add
pop
or
inc
fadds
pop
jecxz
pop
ds
or
mov
xchg
popa
int3
and
pop
push
loope
and
sub
aad
xor
movaps
gs
jnp
loop
inc
fsubrp
cmpsb
into
lcall
enter
jnp
push
lods
xchg
mov
sbb
inc
and
and
push
and
mov
cmp
xchg
cs
js
les
push
lcall
jmp
xor
daa
bnd
or
lods
mov
adc
scas
mov
cmp
outsb
cwtl
inc
dec
das
scas
xchg
and
mov
dec
dec
push
push
xchg
add
mov
mov
mov
mov
mov
cmp
je
int
xchg
push
cmovle
pop
sahf
mov
mov
test
push
mov
xor
sub
fidivs
add
lret
push
xchg
xlat
xchg
add
jae
aad
jns
or
or
xor
mov
data16
aad
int3
insl
jge
data16
sbb
ret
jge
pop
popa
dec
dec
mov
test
test
divb
mull
lds
adc
and
cmp
mov
sbb
aas
jle
add
in
pop
mov
ret
sub
notl
sbb
sar
mov
fdivs
inc
cli
xor
and
ljmp
jl
ss
lret
in
add
mov
pop
jnp
fisubrs
arpl
lods
pop
xchg
jle
pop
int
cmp
cli
stc
mov
fidivrs
into
shll
xor
into
mov
jne
sbb
ss
bound
and
arpl
inc
pop
iret
xchg
xchg
in
and
jmp
dec
enter
mov
loope
test
mov
sbb
mov
xchg
cwtl
inc
fwait
jb
jnp
stos
push
sbb
out
dec
inc
rolb
sbb
arpl
je
insb
popa
int
mov
into
pop
jb
or
in
pusha
push
lret
je
xchg
sub
aam
jno
out
and
sbb
imul
cltd
jno
sub
or
in
push
ret
mov
nop
push
arpl
push
daa
xchg
lcall
out
rcll
inc
or
jge
adc
inc
sub
iret
popl
loop
pop
dec
repz
mov
push
and
loop
pop
push
cmp
fldl
mov
pusha
cmpsb
pushf
pop
movsb
movsb
enter
pop
pop
mov
pop
imulb
leave
popa
repnz
lahf
dec
xchg
in
mov
pop
daa
jmp
stos
sub
les
jne
xor
inc
mov
ds
aam
jb
repz
scas
stos
repz
fcoms
into
pop
dec
in
aad
ljmp
cmp
mov
stos
pushf
mov
push
push
test
mov
test
fcompl
movsb
or
mov
cmpsb
dec
cwtl
inc
sub
pusha
jg
mov
fnsave
arpl
loopne
cmpsb
xor
push
sbb
popf
pop
and
stos
std
std
jnp
mov
repnz
in
jo
sbb
sbb
loopne
jns
js
jo
fldt
idivl
stc
dec
stos
popa
scas
cmp
enter
outsb
xor
out
icebp
imul
stos
aaa
iret
jae
cmpsb
jo
sub
mov
negb
test
push
lret
inc
push
sbbl
adc
sub
ficoml
dec
lock
lahf
hlt
mov
adc
stc
rol
adc
fs
aam
popf
jp
jo
fmul
popf
xchg
xor
lods
xchg
imul
ja
add
popf
or
push
lahf
jnp
cmp
jno
leave
push
sub
cmc
lock
cmp
aad
mov
aad
jnp
adc
mov
movb
mov
mov
mov
jmp
mov
inc
jns
jmp
inc
aas
aaa
mov
loope
inc
jge
popa
mov
jne
imul
pop
xchg
sbb
sbb
iret
loop
arpl
sub
add
pop
jno
test
fdivrl
lds
ds
mov
pusha
lret
std
mov
and
jae
mov
mov
div
stos
fcmovnb
mov
ffree
int3
sub
jl
mov
mov
push
cmpl
test
xchg
mov
mov
stc
inc
push
mov
lcall
daa
xchg
cmp
add
cmp
mov
fcomps
fsubrs
rcl
mov
add
sub
push
xchg
cmc
xchg
stc
stc
mov
mov
jmp
repz
outsb
push
ret
ljmp
dec
add
mov
xor
cmpl
out
xor
test
mov
sbb
pop
push
mov
push
jb
mov
xlat
jns
add
outsw
pop
movsb
sahf
loop
mov
stc
inc
or
or
sbbb
mov
cmp
add
push
dec
cwtl
leave
sbb
test
or
mov
je
pop
inc
jge
insb
aad
xchg
stos
pop
mov
lahf
mov
jge
cmpl
and
jo
inc
mov
pop
test
roll
push
loop
loop
ss
das
cmpsl
add
cmp
fs
rcl
dec
ficoml
lock
push
popf
or
mov
mov
push
into
pop
sti
xchg
push
mov
shl
addr16
in
in
xchg
dec
xchg
adc
popa
sub
or
jecxz
lahf
ljmp
fcoms
sub
rorb
or
push
inc
xlat
in
mov
aas
inc
mov
aad
arpl
nop
cltd
cmpsl
mov
and
jp
adc
mov
aaa
stc
inc
ret
and
pop
es
jns
pop
adc
add
addr16
aaa
repnz
cli
cmp
xchg
mov
mov
push
std
mov
movsl
test
into
and
leave
loopne
andl
mov
dec
mov
sub
loopne
lock
xor
mov
pushf
in
push
mov
cs
mov
push
das
or
sbbb
push
jg
hlt
inc
jmp
push
icebp
jle
and
xor
mov
xchg
cmp
jg
pop
pop
xor
imul
pushf
xor
dec
test
dec
addr16
cmp
jle
jnp
xor
adcb
mull
adc
sub
add
je
imul
lods
inc
lds
push
imul
int3
sbb
dec
push
inc
fwait
inc
aas
xor
stos
push
fcmovu
jb
loope
mov
loop
jb
xchg
add
pop
testb
je
mov
mov
sub
ds
push
push
cltd
cli
leave
es
out
lock
and
in
daa
mov
inc
jmp
dec
ret
push
jge
mov
mov
mov
cwtl
mov
mov
cmp
dec
inc
nop
jmp
pop
mov
test
push
data16
test
inc
mov
call
jg
mov
rcll
fsubs
out
xchg
pop
int
ret
in
xor
dec
push
mov
in
or
shlb
lock
data16
mov
shrb
jge
repnz
je
fnstsw
xchg
in
sbb
in
mov
push
mov
pop
dec
clc
mov
mov
add
je
xor
lods
xor
mov
cwtl
and
cmpsb
and
addb
aas
jo
adc
cmp
push
push
leave
mov
add
and
dec
bound
ret
ja
xchg
fisubl
dec
icebp
sbbb
inc
bound
sub
daa
or
fsubs
xchg
ljmp
sar
xor
jbe
xchg
xchg
pop
adc
js
or
stos
stc
inc
ffreep
fcoml
leave
sti
and
imul
dec
xchg
mov
fmulp
std
jge
in
fcmovne
rcrl
xchg
or
es
pop
sbb
sub
xlat
xchg
jl
jnp
cmpsl
sub
ja
or
cmp
out
pop
cltd
loop
cmp
push
pushf
add
jecxz
cmp
xchg
push
sub
in
inc
lret
add
jnp
imul
pop
pop
push
stos
test
imul
test
lods
lret
mov
push
loop
pop
cmp
push
rcrb
sub
pop
add
fsubrs
sub
incb
or
sub
les
mov
cmp
sbb
aam
pusha
jge
out
or
pop
fistl
lds
mov
ret
cmpl
mov
dec
jnp
clc
leave
xchg
sub
add
dec
and
ret
inc
je
test
pop
sahf
sub
decb
lret
or
nop
call
idiv
popa
mov
xchg
push
jns
mov
popf
jg
push
or
mov
lods
inc
push
sarl
xor
test
sbb
mov
inc
outsb
jmp
xchg
and
aam
or
push
bound
or
and
cmc
data16
mov
mov
sbb
fcmovbe
sub
sub
cld
xor
xchg
aam
ret
scas
cmp
mov
pop
inc
out
std
sub
fistps
fnstsw
jo
add
push
pop
fildl
movsb
push
icebp
sti
cmp
mov
outsl
test
jecxz
push
xor
dec
jl
sti
jge
fld
sub
mov
adc
inc
sub
add
out
push
jmp
cmp
loope
fisttpl
insb
subb
inc
mov
popa
imul
add
push
dec
inc
lea
xor
mov
sbb
mov
inc
cs
sbb
notb
testb
sti
inc
cs
cmpsb
test
cli
outsl
mov
pop
fwait
mov
pop
int3
add
nop
popa
push
fnsave
aas
sub
sub
mov
imul
fwait
jno
push
mov
jo
cmp
cmp
fisubrs
test
pop
scas
xor
jge
dec
dec
cwtl
es
mov
inc
sub
adc
adc
mov
test
xor
push
mov
test
jge
add
mov
lods
or
mov
mov
inc
push
scas
inc
jle
mov
aaa
ja
mov
jecxz
pop
push
xchg
jle
fbld
fnstenv
lahf
mov
jmp
mov
hlt
lock
add
adc
cmp
jbe
jmp
xor
out
aaa
inc
stos
push
fstps
adc
and
insl
test
cmp
mov
je
sbb
fimuls
dec
mov
test
or
cli
mov
bound
repnz
push
inc
jae
add
xor
sbb
aas
cmp
inc
and
mov
mov
imul
inc
push
mov
in
add
enter
pop
adc
jl
mov
xor
dec
dec
mov
mov
mov
lock
fldt
or
mov
mov
cmpsl
xor
js
cmpsl
inc
rcll
pop
iret
and
mov
xchg
call
dec
add
sub
mov
inc
imul
sub
jl
outsb
lahf
shr
aad
jecxz
xor
aam
inc
test
loop
in
fstps
bound
test
enter
and
sub
stc
push
sub
dec
repnz
dec
jg
mov
adc
push
in
andl
xor
popa
inc
rorb
rcl
leave
jg
pop
fcoms
jg
push
inc
jge
xor
mov
rcll
outsl
fisubl
in
xor
out
ja
adc
pop
imul
fs
xor
add
stc
mov
fmuls
pushf
addr16
adc
dec
into
xchg
pop
testb
mov
sbb
cmp
dec
sub
push
mov
dec
dec
cmp
cmpsb
cmc
lds
dec
push
mov
mov
pop
ret
and
push
iret
jg
mov
xchg
jnp
cmp
dec
scas
pop
mov
push
sbb
mov
xchg
dec
jecxz
into
cmp
push
cmp
popa
pop
mov
les
adc
js
fisttpll
jge
sbb
adc
xlat
cmp
push
dec
mov
orl
aad
mov
add
jo
add
mov
stc
mov
mov
ret
repz
ja
cwtl
xchg
add
mov
das
sbb
test
push
or
lods
stc
fcoml
pushf
call
data16
adc
dec
xchg
sub
es
or
sbb
mov
or
jecxz
stos
push
divb
jl
incl
mov
mov
dec
stos
mov
lea
fistpl
pop
lret
dec
mov
movsb
xchg
das
xor
push
push
inc
repnz
xchg
std
cmp
mov
fisubrs
scas
jbe
test
push
std
es
cld
xrelease
ja
jne
xchg
inc
insl
imul
movsl
imul
pop
nop
pop
mov
pop
inc
pop
loop
pop
and
movb
in
leave
sbb
shl
mov
rclb
xor
pop
lods
push
ret
pop
or
les
sbb
sbb
mov
aaa
cmp
jno
mov
test
inc
lods
mov
insb
iret
sub
cmp
fstps
cmpsb
sub
push
lds
and
sub
cmp
mov
add
xlat
push
xchg
add
xor
pop
push
popa
mov
mov
pop
xchg
mov
cmp
jbe
xchg
and
add
decb
mov
stos
call
dec
add
aas
lds
or
xchg
rorb
fsts
fisubrl
popf
fisttpll
push
mov
mov
outsl
idiv
mov
ljmp
out
jge,pn
adc
call
loopne
dec
in
inc
adc
sub
or
mov
jge
inc
xchg
xchg
enter
mov
mov
or
rcl
sub
cmp
out
das
xchg
push
mov
aam
enter
dec
lds
sub
stc
push
push
xchg
subl
hlt
sbb
cmp
bound
push
fldl
jg
lds
fmuls
hlt
xor
add
or
mov
xchg
lea
movsb
mov
pushf
in
pop
xchg
jp
popf
xor
sbb
dec
ds
fdivrl
mov
lahf
dec
test
dec
fiaddl
ret
cmpsl
sbb
mov
out
mov
pop
sahf
jb
or
aam
arpl
mov
shll
jno
jbe
cmp
mov
cld
aad
jp
xchg
insl
dec
je
cs
cmp
sub
pop
add
inc
loopne
lret
dec
sbb
add
bound
push
inc
lret
insb
jo
jmp
int
ss
movsl
mov
ret
pop
xor
mov
cmp
mov
mov
rcrb
cmpsl
stc
sub
clc
and
push
dec
in
adc
dec
and
xor
pop
call
and
and
test
mov
gs
sub
dec
imul
push
add
pmaxub
push
jmp
push
inc
dec
adc
pop
and
sti
mov
xchg
add
aas
inc
rcl
dec
fsubrs
sub
cmpsl
sub
mov
push
or
std
cmp
loop
adc
ss
sub
cmp
movsb
aad
mov
adc
mov
repnz
hlt
outsb
or
sbb
jns
lret
dec
jb
xor
rcl
cmp
push
scas
scas
rcrl
inc
imul
aam
lret
lds
mov
rcrl
jl
mov
add
imul
out
movnti
sub
cltd
inc
popf
hlt
dec
mov
dec
lahf
xchg
mov
sahf
lahf
in
sbb
xlat
adc
call
das
or
cmpsb
aaa
mov
dec
mov
xorl
push
mov
rorl
and
aaa
jle
xor
fcoml
or
sbb
je
je
shrl
jle
loope
push
lds
ret
test
jae
add
fwait
push
sbbb
les
orb
dec
pop
sahf
test
rol
std
jne
jnp
stos
xchg
cs
repnz
dec
fdivl
jno
mov
mov
xchg
daa
xor
sub
cmpsb
xchg
test
sbb
mov
imul
pop
jge
and
repnz
push
aas
xchg
add
test
xor
or
and
dec
dec
scas
inc
mov
test
sub
filds
pop
xchg
sub
loope
inc
mov
xor
jp
xchg
popf
mov
pop
lret
lcall
lods
push
lods
enter
mov
popa
loope
loop
pusha
pop
scas
cmp
inc
adc
lea
cs
mov
mov
inc
pop
mov
repnz
push
xchg
cmp
and
add
or
fsubl
movsl
sbb
stc
push
sbb
adc
mov
fstpt
or
cltd
mov
mov
xor
xchg
push
inc
lret
sahf
mov
mov
shll
or
or
pop
seta
test
scas
rorl
inc
mov
dec
push
sti
pop
aaa
std
test
sub
outsl
adc
bound
js
mov
xchg
jae
adc
out
insl
out
or
rolb
adc
xchg
ja
push
lret
push
movsl
cmp
xor
sbb
sbb
loop
cmc
cltd
nop
leave
xchg
kmovb
into
jge
es
push
pop
add
ret
in
jge
pop
cmpsl
xchg
sarb
lcall
push
sahf
dec
lret
into
xor
inc
sub
hlt
mov
or
push
movsl
xchg
aaa
pusha
jnp
inc
in
xchg
and
jge
fwait
and
lds
sub
push
add
xchg
inc
in
push
pop
stc
adc
dec
dec
dec
cmp
dec
lret
mov
jmp
nop
cmp
sbb
push
mov
or
xchg
inc
mov
mov
push
xchg
inc
repz
mov
loop
sbb
pusha
xchg
mov
out
aad
pop
call
mov
shl
xor
imul
iret
adc
cltd
sbb
nop
lea
fisttpll
test
inc
xor
stc
fisubl
adc
cmp
lock
sbb
jno
sbb
pop
mov
sub
mov
ds
out
add
test
mov
lea
int
lahf
in
mov
mov
ret
subl
out
iret
gs
inc
loop
adc
and
mov
mov
cld
xchg
mulb
stos
or
cmpsb
stos
ss
inc
mov
and
cmpsl
outsb
xchg
add
cmp
push
push
mov
out
mov
pop
in
outsb
out
mov
repnz
pop
cmp
inc
jb
dec
sbb
jns
push
adc
mov
inc
mov
push
jae
sahf
fnstsw
inc
cmp
fimull
call
aaa
push
add
mov
fbld
fdivrl
add
lret
push
adc
mov
fcmovbe
enter
sbb
inc
popf
cmc
xchg
mov
pusha
fisubrs
popa
jo
repz
mov
scas
js
xchg
cmpsb
dec
jo
inc
jl
mov
insb
into
dec
adc
jecxz
and
jne
rolb
leave
cmpsb
adc
adc
mov
jo
insl
cli
test
inc
pop
loope
add
lahf
cmp
xchg
lods
fstl
and
cli
dec
jbe
shll
xor
dec
dec
pushf
orb
lahf
inc
pop
test
and
dec
scas
mov
push
shll
shll
cmp
js
sub
pop
mov
lret
pusha
push
loopne
cmp
lods
rolb
mov
lods
bound
pop
push
fnstsw
jecxz
aad
mov
rclb
imul
cld
xchg
cmp
adc
pop
dec
js
rclb
mov
aas
bound
xor
push
insl
addr16
or
xchg
mov
xor
enter
scas
orl
inc
cli
ja
cs
mov
insl
popl
mov
test
add
mov
int3
jmp
pop
xchg
jno
stos
mov
jg
xor
das
jg
loope
mov
cmp
fdivr
xchg
lods
cmp
stos
sbb
mov
add
aam
push
and
sbb
daa
pop
push
adc
adc
mov
jmp
iret
test
shll
or
scas
hlt
mov
add
imul
insl
jecxz
dec
dec
pusha
jnp
nop
pop
cs
mov
iret
jecxz
loopne
or
jmp
daa
xchg
repnz
loopne
dec
mov
ret
adc
stos
sbb
test
loopne
cmp
and
pop
push
fistps
ret
pop
outsl
cltd
inc
ss
or
cwtl
cs
scas
xchg
int3
es
mov
mov
sbb
pushf
jp
in
cmp
aaa
pop
xchg
mov
push
jp
lock
xchg
and
mov
jne
js
push
mov
add
out
or
rcrb
ret
call
ja
incl
add
insb
push
sbb
pop
or
fs
lods
or
push
psrlq
mov
sysexit
push
or
arpl
stc
and
mov
sub
add
lods
push
addr16
in
sbb
pop
hlt
dec
and
push
adc
add
bound
push
repz
cvtdq2ps
adc
cmp
test
fimuls
pop
in
inc
hlt
test
push
mov
or
jl
xor
sbb
pop
jo
jnp
mov
mov
sbb
sub
push
xchg
dec
dec
popf
inc
out
subb
fwait
mov
sub
adc
mov
jecxz
ja
pop
mov
xor
adc
add
rorl
divb
in
iret
jo
mov
mov
xor
push
sbb
mov
pop
fsubrs
sbb
jbe
mov
outsl
xchg
jmp
cmpsl
sbb
add
scas
inc
xlat
jno
enter
decb
out
adc
pushf
xchg
inc
mov
jo
mov
sbb
xchg
loope
cmp
mov
cmp
push
inc
dec
mov
negb
add
aas
repnz
mov
and
or
pop
call
addr16
mov
push
dec
shll
pop
arpl
lret
popf
push
stc
mov
ss
rcll
or
lcall
stos
aad
mov
in
xchg
cmpsb
mov
mov
mov
fdivrl
test
rolb
xchg
ud1
push
dec
test
mov
push
and
ss
add
sbb
xchg
loope
iret
addr16
jne
jecxz
stc
test
ret
jns
lahf
jge
lret
xchg
loop
xchg
sbb
aad
sbb
inc
sub
into
lret
mov
push
inc
loope
iret
pusha
dec
pusha
xorb
adc
pop
pop
pop
lcall
iret
test
mov
push
mov
sti
pop
jle
inc
mov
mov
aaa
pop
int3
sbb
sub
fwait
data16
mov
xchg
scas
or
sbb
rclb
pop
or
dec
test
mov
scas
insb
addl
mov
mov
ret
les
stos
cmpl
jae
outsl
pop
ss
mov
xchg
iret
xor
jmp
outsl
inc
test
aad
or
lods
jne
mov
rcrl
cld
test
pop
sub
lcall
jae
push
inc
lods
xor
daa
data16
xchg
mov
inc
shll
jmp
pop
decb
aad
xchg
xchg
push
push
pop
int
cs
xlat
movsl
cmp
mov
std
cs
dec
daa
jl
xchg
inc
dec
or
cmp
decb
mov
mov
adc
lcall
xor
xor
popa
push
test
mov
dec
jno
pop
add
iret
ljmp
fisubs
sub
adc
lods
mov
sub
jo
pusha
imul
mov
sarb
xor
mov
xor
jae
add
cmp
mov
fbld
ja
xor
sub
inc
add
and
push
inc
ds
addb
dec
adc
lret
sub
out
jle
ret
xchg
and
arpl
lea
int
addr16
notb
add
sub
mov
push
and
in
xchg
movsb
add
loope
sbb
aaa
cmp
andb
rclb
stos
push
push
inc
sbb
testl
xor
or
pushf
stc
pop
rcrl
popf
daa
sub
cmpsb
xchg
xchg
cmp
push
mov
dec
hlt
mov
repnz
sub
stos
xchg
cmp
push
cli
inc
les
and
mov
pushf
jmp
push
sub
cmpsl
scas
push
movsl
or
rorl
movsl
inc
je
mov
mov
or
stos
movntps
jecxz
es
adc
out
xchg
popf
xchg
push
dec
test
test
rol
or
xchg
xchg
daa
sub
shl
or
in
mov
fcompl
adc
nop
fwait
sub
gs
iret
sahf
dec
adc
js
jg
fbstp
lcall
and
adc
sti
sub
iret
into
pop
ret
cbtw
mov
push
mov
lods
inc
lock
sbb
add
inc
lock
test
cmpsb
pop
add
cli
int3
leave
cmp
xchg
pop
adc
test
sub
mov
add
dec
cmp
roll
mov
mov
jg
mov
daa
stos
mov
xchg
push
cmp
icebp
rol
jae
and
mov
mov
sti
dec
ds
mov
in
xchg
pusha
stos
mov
outsl
mov
pop
popf
mov
in
add
inc
push
mov
push
xor
or
xchg
pop
lods
and
mov
lahf
in
push
pop
add
cmp
sbb
outsb
push
lock
sub
aaa
rcrl
ja
inc
sbb
push
and
push
mov
daa
fwait
xor
mov
insb
sub
jnp
clc
daa
das
popa
fsubp
mov
pop
ds
xchg
ss
fisubrl
cld
pop
pop
incl
insb
decl
out
mov
jl
cld
jb
dec
aad
sub
add
test
fldenv
pop
mov
nop
imul
test
loope
cli
pop
and
push
or
push
mov
mov
push
ja
mov
dec
jg
dec
aas
jecxz
ror
mov
popl
pop
out
fisttpll
test
or
mov
push
movsl
call
xchg
call
sub
push
pop
aas
xor
shll
adc
repnz
fiadds
cmp
fbstp
jmp
jmp
cmpsl
iret
sti
bound
data16
in
xor
js
cmp
enter
subl
fwait
cmovns
push
pop
ss
and
hlt
sbb
sub
enter
jns
ret
cmpsb
scas
daa
mov
lret
int3
sub
mov
add
jg
rcl
pusha
outsb
xor
mov
pop
inc
not
int
aam
into
aam
xor
popa
jae
loope
andnps
ss
repz
cmpsl
mov
xchg
push
fildll
jnp
sbb
inc
les
es
cmpsl
xor
mov
insb
out
sbb
idivl
mov
je
repnz
ds
call
movsl
pop
sbb
adc
lds
jmp
sub
pop
mov
daa
out
out
xchg
cmpsl
ss
shll
jne
dec
or
inc
push
lcall
xchg
push
push
mov
add
jne
adc
pop
push
sbb
stos
pushf
sbb
inc
jle
sbb
iret
jge
icebp
pop
jbe
pop
aaa
nop
pop
adc
icebp
lahf
pop
sub
stc
dec
stos
inc
sar
jbe
sbb
push
jns
mov
mov
cmpsb
test
data16
nop
ja
xor
xchg
push
sbbb
sub
ret
jle
lds
dec
inc
push
cmp
les
or
pusha
stos
push
mov
jne
push
xchg
mov
out
xor
imul
es
lahf
xchg
fbld
jnp
mov
sub
or
test
out
cmp
xchg
pop
jbe
jl
adc
lea
jmp
sbb
les
sub
dec
adc
or
and
mov
inc
movsl
add
xchg
xor
sbbb
test
dec
mov
fidivrl
push
mov
movl
imul
sbb
lret
bound
lds
movsb
or
dec
or
iret
ljmp
sbb
xchg
das
nop
cmpl
sbb
sub
lcall
mov
and
std
ljmp
jns
lock
sbb
push
insl
ds
dec
jbe
sbb
dec
push
mov
ljmp
inc
pop
aas
lret
mov
inc
mov
test
es
cmp
mov
scas
cltd
aaa
mulb
sbb
jle
cmp
pop
jne
outsl
scas
lds
ja
imul
jl
sti
inc
push
sub
lea
iret
shl
imul
xor
scas
lret
push
lret
inc
xchg
loop
arpl
rorl
sub
andl
mov
sub
sub
inc
sub
mov
hlt
lcall
inc
dec
lret
mov
mov
std
sub
cmp
adc
push
jns
xchg
adc
aam
mov
insb
test
push
push
push
sub
adc
adc
sti
icebp
jno
sub
jnp
int
clc
rcrb
xor
addl
sub
add
addr16
add
fdivr
loop
pushf
roll
sbb
fiadds
pushf
mov
hlt
push
ljmp
pop
xchg
ret
aad
int
mov
mov
mov
in
xor
aad
jp
cld
mov
cmp
sub
mov
jecxz
mov
jl
mov
dec
cmp
adc
sub
inc
mov
adc
adc
push
nop
cmpsb
adc
xchg
or
and
xchg
adc
adc
test
xchg
push
jo
cmp
xchg
mov
push
ficomps
sbb
cmpsl
mov
mov
loopne
movsl
mov
call
dec
aas
add
jo
sbbl
push
sbb
popf
jge
sbb
cmp
aam
popw
mov
shrl
pop
or
sbb
fisubs
sahf
sub
lret
push
sub
into
sbb
popf
xchg
in
test
sti
push
inc
mov
sub
mov
stos
cmpsb
push
jp
jno
outsl
gs
addr16
cs
fnstenv
mov
out
push
mov
iret
jmp
mov
ret
push
inc
in
push
push
sbb
pop
adc
xchg
mov
outsb
ret
movhps
or
add
mov
jmp
add
jl
push
sub
int
lret
sub
loop
dec
pushf
gs
lahf
pop
ja
and
loope
fucom
add
lock
int3
loop
adc
outsl
mov
mov
xchg
sbbl
xchg
adc
mov
int3
sbb
dec
sub
mov
in
push
scas
xchg
dec
cmpsl
fistps
sbb
mov
aam
frstor
and
adc
popa
sub
insb
es
outsl
dec
adc
or
dec
mov
push
add
pop
add
xchg
insb
add
jo
pop
pusha
cld
xchg
rcll
cmp
sub
scas
push
mov
xor
push
imul
leave
fwait
out
mov
pop
cmp
jne
loopne
cmp
dec
in
leave
mov
sbb
push
cmp
fs
in
punpckhwd
je
pop
cmpsb
pop
push
add
mov
or
popa
aaa
hlt
dec
sub
mov
lahf
hlt
imul
xchg
ret
add
stos
ret
pusha
adc
shlb
add
push
push
push
data16
xchg
mov
sub
pushf
mov
xor
ror
dec
stos
sub
sahf
add
insl
mov
mov
pop
xchg
mov
add
out
jmp
dec
push
out
aam
jne
call
jb
hlt
les
sub
fsubl
lds
pop
cli
cmpsl
lret
mov
mov
jae
data16
xchg
sub
fwait
cmp
ret
add
sub
mov
xchg
rcl
shll
in
cmc
mov
jp
xor
cli
test
cwtl
out
rcrl
dec
cmpb
xor
clc
sahf
jg
in
pushf
mov
cmpsb
data16
aaa
arpl
sarb
rclb
jo
ret
je
mov
push
adc
mov
out
or
lret
sub
ret
mov
lret
jbe
add
adc
jae
shlb
mov
push
scas
cltd
inc
imul
add
adc
push
push
cltd
inc
cltd
rol
jae
subb
sbbl
andb
or
andl
xor
sahf
cmp
hlt
adc
dec
push
shr
mov
iret
lods
inc
xlat
jb
sbb
outsb
test
in
or
mov
mov
xchg
mov
repnz
rclb
mov
not
xorb
and
cmpsl
jle
or
test
sbb
adc
fs
cmp
adc
pop
clc
xchg
xchg
shll
mov
stc
sbb
fdivrl
xor
imul
andb
cltd
add
adc
mov
dec
pop
add
movsb
xchg
jecxz
and
push
dec
push
inc
aam
sar
and
out
or
mov
jmp
or
mov
cld
jle
fdivrs
or
pop
jle
movsb
adc
pop
xor
outsb
int
cs
mov
adc
cld
pop
imul
test
pop
stos
stc
daa
in
xchg
pop
inc
xchg
inc
sbb
scas
xor
enter
xchg
jo
xor
add
jnp
cltd
pusha
xchg
inc
cmpsl
fildl
dec
scas
aam
mov
dec
adc
fwait
or
or
xlat
push
psubsb
int3
sub
adcl
pop
movsb
sub
or
cmpsb
mov
add
jmp
jl
fdivs
ss
sbbb
jnp
js
in
aad
lcall
sbb
sbb
cmp
int
sub
hlt
xchg
daa
fbld
cmp
nopl
lea
cs
sub
out
orb
pop
daa
pop
or
dec
adc
mov
btrl
mov
lret
xchg
mov
iret
xlat
jbe
faddl
insb
dec
loop
lods
sub
fstpl
cld
sbb
xor
push
xchg
jecxz
cmp
repnz
sub
out
mov
and
pop
pmuludq
and
test
dec
jb
mov
ret
aas
cmpsl
cltd
cmp
xchg
push
jo
mov
mov
lcall
cltd
cld
lret
in
gs
cltd
xor
mov
fsubs
test
ljmpw
dec
mov
xchg
push
ja
ja
or
cli
dec
and
lea
xor
loop
aas
sub
rcr
xor
int
jg
sti
pop
mov
mov
mov
or
pop
clc
sub
mov
dec
adc
jge
adc
std
data16
outsb
fidivrl
and
dec
ljmp
mov
loope
xlat
xchg
int
ret
cmp
lods
fwait
aam
aad
mov
mov
fcomps
jb
inc
bound
jo
arpl
sbb
outsb
dec
xor
jmp
mov
xchg
inc
cs
jmp
or
pop
jecxz
jnp
pop
testb
push
sub
sbb
mov
xor
aam
push
sub
jo,pn
and
add
cwtl
pop
and
adc
pusha
cmpsb
jne
cltd
adc
cwtl
mov
push
call
mov
and
mov
push
adc
ss
fmull
sti
aad
jnp
sbb
mov
push
pop
or
arpl
ja
dec
ds
mov
repz
sbb
inc
or
sub
in
stos
or
pop
fnstcw
fbld
adc
adc
cmpsb
push
sbb
cmp
outsb
inc
inc
and
iret
ljmp
cmp
add
fcomps
decl
pop
dec
es
pushf
add
add
jle
push
pop
mov
push
xor
xlat
ds
dec
pop
xor
push
cmp
push
outsb
sbb
mov
jmp
pop
mov
mov
sub
fstl
sbb
pushf
pushf
dec
push
ja
jp
fldl
ror
std
jae
xor
pop
out
xor
jp
dec
addr16
pop
rorb
mov
out
pop
push
orl
inc
movsb
int
in
push
ljmp
out
das
inc
lods
xchg
xor
and
and
fsts
hlt
cmp
leave
hlt
or
sub
pop
out
int
aad
enter
inc
xor
inc
sbb
cmpb
aaa
mov
es
pusha
push
hlt
lret
test
or
mov
repz
mov
jg
dec
lret
inc
inc
pusha
ja
test
pop
sarl
ret
cmp
and
add
sub
inc
dec
adc
into
sbb
movl
data16
or
push
leave
push
scas
aad
xor
rolb
xlat
in
dec
jno
mov
std
mov
fs
test
popa
mov
push
push
pop
sbb
inc
lret
stos
enter
clc
sbb
aad
jecxz
xchg
push
notl
outsl
pop
and
cld
mov
add
xchg
xchg
xchg
or
sarl
subl
mov
inc
mov
leave
cltd
pop
mov
je
cmc
inc
jg
sub
dec
adc
cmc
je
jmp
lock
mov
xor
fmulp
mov
push
mov
pop
lods
add
and
pop
push
bound
push
or
cli
lds
mov
daa
ljmp
mov
fwait
cmp
and
mov
inc
xor
cmpsl
xchg
outsb
cmpsl
push
and
sbb
jae
daa
xorl
repz
scas
movsl
hlt
inc
mov
cmp
sub
pop
sarl
push
cmpw
jno
mov
pop
adc
ret
fldl
fwait
or
mov
mov
insl
xor
pushf
adc
sbb
push
mov
hlt
add
mov
push
xor
jbe
jae
std
insb
inc
sbb
xor
jns
cmp
jo
stc
mov
lock
push
lods
mov
or
sub
test
jecxz
mov
cmpsl
std
int
xchg
push
pop
jae
jmp
sbb
adc
sub
fcomps
inc
jae
mov
das
movzwl
mov
inc
jnp
ret
shlb
mov
mov
imul
into
roll
push
dec
dec
das
sub
rcr
lock
jmp
jge
icebp
fildll
push
ret
sub
imul
adc
cmp
mov
sub
fndisi(8087
outsl
sbb
out
rcrb
test
cmp
mov
loopne
pop
dec
or
shl
mov
jp
xchg
les
mov
xchg
ja
adc
mov
in
shrl
lahf
aaa
jp
or
fmull
in
push
jle
add
pop
and
mov
lahf
les
sbb
xchg
div
addr16
pop
mov
loop
inc
ds
jl
sahf
test
and
arpl
xlat
sbb
jae
xchg
inc
ret
mov
push
cmpsl
adc
fsub
xor
xor
mov
mov
pop
test
inc
test
ret
mov
cmp
in
clc
mov
inc
fadd
pop
dec
outsl
mov
push
ss
cmp
movsb
sahf
sub
cwtl
xlat
mov
inc
dec
int3
push
jnp
dec
adc
mov
jns
jae
or
stc
test
lahf
dec
add
mull
pop
or
pushf
add
adc
psubq
pop
mov
sbb
aam
inc
cmp
and
and
adc
loopne
xlat
xchg
cmpsb
xor
rcrl
gs
std
ret
jp,pn
xchg
xchg
clc
outsb
loop
mov
pop
push
inc
jno
movsl
xor
fistps
divb
popf
bound
mov
add
sahf
imul
mov
into
cld
mov
cmc
movl
testl
mov
mov
xchg
loope
js
cmp
or
bound
push
js
mov
jecxz
lret
xor
and
nop
out
gs
notl
jmp
leave
xor
inc
dec
repnz
sbb
loop
push
sbb
daa
mov
sub
repz
push
push
sbb
jmp
test
cmp
lcall
cmp
jmp
push
fsubrp
hlt
test
xchg
push
scas
mov
in
outsl
mov
adc
jb
outsl
pusha
jmp
stc
cmpsl
lds
cltd
mov
mov
cmp
fdecstp
call
stos
dec
loop
mov
ds
or
push
sub
adc
mov
test
lret
jge
hlt
das
dec
dec
inc
test
icebp
sbbl
out
cmp
and
mov
cmc
or
int
icebp
out
movsl
pushf
or
mov
push
pop
xor
dec
cmc
or
mov
int
ret
or
insb
rcrb
xchg
out
in
fs
inc
pusha
fwait
ja
lcall
ret
jle
dec
or
jl
aas
call
pop
imul
mov
mov
or
loopne
mov
pushf
xchg
sarl
call
jo
test
mov
add
popf
fs
cld
mov
sbb
cmp
jle
mov
push
inc
mov
xor
lods
lret
add
imul
pop
mov
jecxz
xchg
lret
sahf
in
iret
cmp
popf
or
lcall
sbb
push
lea
gs
test
xchg
mov
mov
stos
xchg
cmp
sti
mov
divl
jb
das
fldl
lret
dec
mov
in
sub
stc
int3
jno
xor
pop
int3
or
in
sub
or
mov
jmp
or
add
test
imull
icebp
push
adc
cmp
in
fstpl
cld
movsb
fcomp
insl
loope
loopne
xchg
cmpsb
or
hlt
push
pop
sbb
lods
jmp
inc
pop
cmp
test
cs
mov
mov
xchg
jnp
push
jecxz
popf
jae
nop
lcall
mov
pusha
fiadds
sub
rorl
inc
stc
fs
push
jbe
xchg
lret
dec
push
int3
mov
lret
adc
sbbb
sub
arpl
icebp
nop
in
inc
jp
ja
add
cmp
mov
add
cs
sub
push
dec
push
sub
fldl
pop
aad
mov
ja
pop
daa
shrl
test
jecxz
rdmsr
mov
push
pop
adc
outsb
outsl
or
das
sbb
adc
sbb
xor
pop
scas
cmp
mov
cmp
dec
jae
stos
jne
or
aam
mov
jl
aam
xchg
push
imul
shrb
ljmp
mov
adc
sbb
fldl
or
scas
stos
mov
adc
outsl
clc
cmp
ret
aad
sbbb
sbb
or
mov
mov
pop
xchg
push
shl
or
negb
jg
dec
inc
movsl
mov
hlt
dec
outsb
push
faddp
andb
lock
or
bound
ret
rclb
out
movsb
fstpt
test
pop
sbb
cmp
sub
ret
and
imull
nop
fiaddl
add
test
dec
sbb
push
rol
daa
xlat
test
arpl
std
dec
xchg
mov
mov
add
jb
icebp
jmp
or
inc
push
bound
mov
add
cmp
sbb
aas
in
sub
in
inc
ret
pop
or
insb
ud1
fidivrs
jg
rcrl
mov
and
xchg
xor
add
jns
cmp
ljmp
fs
insb
dec
fwait
jg
test
jb
clc
imul
adc
insl
cmp
mov
adc
ror
xor
or
imul
cwtl
out
mov
jecxz
xchg
and
arpl
inc
inc
inc
cmpsl
and
cmpsb
cmc
inc
dec
push
in
push
pop
sbb
xor
imul
pop
jmp
fld
jns
adc
add
cmp
sahf
jnp
inc
mov
bound
fidivrl
mov
nop
divb
sub
notl
mov
adc
filds
adc
inc
repnz
in
mov
rorb
jbe
int
or
mov
cmpsb
push
xchg
aaa
and
sbb
mov
jecxz
lcall
inc
test
xor
shl
cld
test
sbb
sti
jno
push
ss
push
shl
std
cmp
jo
stos
push
in
test
movsb
push
cmpsb
adc
jb
xchg
sti
int
jmp
pop
mov
dec
lea
cmp
adc
loop
xchg
fwait
mov
call
loope
or
sub
jle
adc
jns
into
mov
inc
pop
push
cmp
data16
adc
adc
sbb
movsb
jge
cmpsb
jge
adc
cwtl
lcall
xor
jecxz
enter
dec
and
int3
jno
mov
test
cwtl
jns
sahf
lods
shl
jb
pop
repz
pop
jns
imul
stc
push
popf
add
cmpsb
scas
cmp
adc
adc
dec
sahf
call
xor
inc
and
scas
mov
inc
dec
data16
dec
int
xchg
xchg
ljmp
test
push
ret
out
cmpb
jp
cmpl
xchg
pushf
aam
push
nop
ret
jae
mov
fimull
cltd
hlt
cltd
std
add
jae
mov
xchg
jmp
jnp
in
jno
arpl
and
scas
fisttps
movsl
dec
pop
dec
divb
add
mov
hlt
cmp
push
push
dec
pop
xchg
push
and
add
xchg
jae
orl
xor
lods
and
out
and
data16
lret
movsb
push
cmp
xlat
icebp
hlt
jmp
clc
mov
iret
out
inc
fldcw
xchg
and
cmpsl
jl
sub
xor
mov
fwait
mov
in
popf
push
pop
imul
imul
push
xlat
movb
pop
jle
sbb
cmp
cli
inc
mov
xchg
sbb
nop
sbb
cwtl
imull
push
inc
cmpsl
ss
mov
xchg
out
lds
cmp
test
popa
xlat
in
jnp
lahf
xchg
out
mov
xchg
adc
pusha
sub
rcrb
popa
push
inc
cwtl
add
pop
dec
cmp
aad
pop
push
sub
pop
stos
ret
or
int3
sub
lods
xchg
jns
push
and
cmp
xor
inc
adc
push
sbb
pop
jnp
xchg
push
xchg
js
scas
mov
fiadds
das
push
fidivs
or
pop
fstpt
aaa
bnd
imulb
rcrl
ffree
inc
lcall
data16
jno
movsb
jle
call
and
sub
adc
loop
push
mov
out
enter
filds
addr16
in
pop
or
movsl
sti
mov
mov
jg
fstpt
dec
in
xor
cli
jbe
ret
mov
cmp
jg
into
sti
cmc
lahf
flds
dec
jecxz
cmpsl
loope
xchg
inc
data16
cmpb
repnz
sbb
das
jns
ret
xor
pushf
jp
leave
subb
cmpsb
loop
adc
test
lret
add
dec
cmp
stos
aas
jecxz
ss
addl
test
call
negl
das
lods
pop
xor
rolb
adc
jp
leave
push
lcall
cltd
pop
xor
jmp
pop
sub
or
pop
test
cmp
push
icebp
lods
cwtl
pop
cld
inc
ja
adc
loop
xchg
in
inc
loope
jle
fistps
dec
imul
addr16
xor
push
mov
adc
movups
sbb
or
push
sub
movsl
mov
ret
stos
negb
arpl
out
dec
add
cpuid
aas
adc
dec
unpcklps
and
fnsave
mov
and
lcall
mov
in
addl
mov
rolb
dec
adc
pop
movsb
mov
adc
sub
adc
jmp
cmc
call
int
xchg
andps
sbb
sbb
imul
out
jge
jecxz
int
mov
sbb
sub
jnp
call
xchg
fldcw
mov
adc
cmp
xor
insb
idiv
nop
push
mov
sbb
ret
popf
in
xor
or
jp
push
sub
rorl
cmc
movsl
in
lds
jbe
push
sahf
dec
jns
push
and
filds
cld
icebp
add
divb
inc
add
in
inc
mov
mov
cmpsl
adcl
addb
out
adc
xchg
das
add
fcmovu
pusha
insb
inc
js
pop
push
mov
push
xor
dec
xchg
icebp
push
test
push
cmp
addr16
pop
push
dec
fildl
xchg
mov
loope
push
daa
test
sub
int3
pop
sub
mov
cwtl
jl
mov
mov
dec
sbb
xor
inc
dec
inc
dec
ds
dec
mov
cmpsl
inc
dec
jg
adc
push
mov
fsubl
xlat
xor
mov
inc
sbb
sbb
mov
dec
iret
in
add
daa
mov
adc
push
mov
pop
add
das
imul
in
pop
cmp
pusha
cmp
cmp
push
dec
xchg
mov
sub
jbe
out
inc
repnz
xchg
or
rorb
jo
add
mov
out
or
std
shll
cmpsb
call
sbb
movsl
sti
iret
adc
stos
rol
dec
or
stos
adc
mov
arpl
imul
adc
sub
ds
lcall
push
push
arpl
add
sbb
arpl
incb
ret
xlat
xchg
mov
es
push
ss
mov
xchg
xchg
sub
mov
mov
add
push
pop
int3
adc
out
icebp
cwtl
cmp
stos
out
mov
mov
stos
cmpsl
aam
and
sbb
or
xor
in
jbe
xor
and
mov
mov
sub
pop
sbb
hlt
jge
test
and
add
inc
jo
mov
cltd
xchg
faddp
aas
movsb
cwtl
push
dec
mov
setns
pop
inc
ret
movsl
sbb
sbb
lock
ss
pop
xchg
pop
sbb
insl
mov
ljmp
mov
rclb
inc
mov
jl
xchg
cmc
mov
repnz
and
xlat
imul
xor
leave
lret
repnz
daa
xor
or
mov
inc
lods
std
jnp
test
std
mov
packssdw
pop
sti
push
fcoms
push
cmp
adc
popa
adc
sub
ss
outsl
inc
ja
mov
fbstp
sbb
in
pop
jge
sbb
xchg
in
xor
mov
sbb
es
stc
jmp
and
mov
pop
popa
loope
sbb
fnstsw
xchg
mulb
outsb
xchg
lock
cld
stos
or
inc
push
ljmp
mov
jmp
cmpsb
repnz
out
flds
jmp
daa
sub
ja
lock
xor
shrb
out
scas
mov
fidivs
and
push
cmpb
sub
cmp
jns
scas
jecxz
xchg
repnz
push
neg
int3
cli
icebp
jg
cmp
sarl
push
inc
sbb
push
push
push
pop
test
cmp
mov
cwtl
xchg
jmp
xor
cmp
or
je
cmpsb
out
test
and
test
out
lcall
sar
push
xchg
lods
adcb
insb
lret
mov
sbbl
loop
fwait
jbe
sub
mov
and
fildl
jl
cmp
jp
test
mov
xor
xor
xor
fdivr
or
loopne
in
sahf
push
adc
in
mov
mov
scas
outsl
popa
pop
pop
pop
push
xchg
jmp
popf
mov
je
ret
lahf
std
adc
inc
nop
and
lock
cmp
das
leave
xchg
cltd
push
andl
xor
adc
mov
ss
or
cmp
das
int
xor
and
outsl
nop
push
push
clc
fwait
adc
imul
mov
adc
xchg
in
push
xchg
lods
xor
cmp
mov
inc
mov
dec
ret
sub
andl
ljmp
add
pop
gs
dec
stc
xchg
mov
out
sti
pop
mov
mov
mov
xchg
jg
push
mov
fwait
movsb
cmp
pop
arpl
xor
lret
rcl
popf
cmp
push
insb
cld
aad
out
lret
cmc
gs
adcl
pop
cmp
loope
scas
push
adc
sub
paddw
adc
xchg
pushl
or
fdivrs
cmp
sub
int
xchg
cmp
and
cmpsl
in
push
mov
subb
repnz
mov
push
xchg
lret
stos
sbb
xchg
cmp
out
push
xchg
in
add
sbb
sbbb
sub
popa
jno
popa
pop
add
mov
jbe
adc
outsl
mov
fwait
cltd
or
outsb
mov
pop
cltd
mov
popf
mov
into
inc
or
pop
rcl
repz
dec
imul
hlt
xor
push
data16
inc
mov
cmp
test
repz
aad
repnz
enter
sbb
loop
insb
dec
sbb
push
clc
ja
pop
add
dec
loopne,pt
fdivp
add
shll
dec
mov
popf
cmp
add
xor
cmp
cmc
in
push
imul
sarb
cmc
mov
jge
cld
adc
out
pop
dec
sub
mov
repz
stos
jae
xchg
dec
out
leave
jo
out
lods
outsb
shll
sbb
sbb
mov
jo,pt
sahf
jo
cmp
push
ds
sub
pop
or
movsl
es
xor
call
sbbb
mov
lcall
and
jmp
cli
pop
mov
fiadds
fcoml
jo
xchg
incl
cmp
pop
stos
push
pusha
mov
mov
test
notl
pusha
js
aaa
sti
jno
aam
nop
adc
cmpsl
mov
int3
cmc
sti
dec
pop
les
loop
xchg
gs
insb
add
add
jno
mov
dec
xor
push
lods
adc
subb
mov
cmp
pop
fbld
jbe
mov
cmp
mov
push
sbb
js
sbb
lods
fistps
iret
and
add
push
mov
mov
cwtl
push
fstl
iret
dec
mov
push
sbb
es
jns
bound
cli
sahf
or
insl
dec
mov
jl
fnstenv
pop
mov
stos
and
out
std
cld
mov
scas
xchg
fxch
jo
clc
aad
gs
loopne
adc
mov
in
mov
xchg
clc
sbbl
push
sahf
jecxz
sbb
adc
in
aaa
push
push
or
cmp
ret
insl
out
xchg
mov
ljmp
xchg
pcmpeqb
in
aam
out
clc
push
fsubl
mov
rol
ficomps
or
lahf
pop
int
and
sbb
xchg
or
mov
loopne
fstl
cld
mov
lods
jg
xor
std
clc
cmpsb
inc
or
push
mov
repnz
jp
mov
hlt
fwait
add
pop
ds
outsl
jmp
sbb
dec
adc
and
push
insb
mov
pop
enter
sbb
bound
jb
les
pop
mov
into
jnp
loopne
vandps
pop
jle
sbbl
mov
sbb
xchg
xchg
jo
push
mov
insb
pop
rol
mov
xlat
pop
dec
fs
mov
in
arpl
in
nop
mov
daa
xchg
xchg
dec
repz
fcompl
xor
mov
and
mov
shrl
sub
lea
fisubrs
push
int
inc
cmp
xor
popa
test
sarb
mov
lret
daa
cmpsb
add
mov
pop
or
insl
adc
aas
pop
mov
jbe
mov
lret
push
fs
jno
or
insb
stos
or
lods
bound
jno
js
xor
mov
jae
jmp
sub
dec
dec
mov
xchg
loopne
adc
jg
pop
into
mov
or
outsb
or
lock
call
push
mov
movsl
nop
call
shll
ja
push
outsl
sbb
aad
push
decb
dec
insl
lock
orb
pop
add
mov
lods
gs
xchg
sbb
hlt
sub
pop
js
insl
cmpsb
pop
jne
ficoml
push
decb
dec
xchg
icebp
addb
stos
fwait
dec
push
jns
adc
popa
jecxz
cmp
ret
lahf
or
test
sbb
sub
das
fistpll
pop
fisttpll
shlb
inc
aas
pop
add
push
sbbb
sbb
lret
scas
popa
jno
xor
pop
lcall
fucomi
into
xor
out
test
fbstp
lock
ds
sub
fs
rorb
insl
add
adc
jmp
push
mov
jecxz
jb
jnp
or
or
je
insl
or
sbb
adc
mov
mov
cld
aad
loope
stc
fs
repz
test
lahf
or
arpl
imul
or
shrb
in
mov
adc
adc
mov
sbb
jbe
std
cmp
subb
cmpsl
insb
in
div
data16
adc
mov
adc
mov
push
popa
sbb
punpckhbw
dec
in
cmc
cmc
loope
mov
xlat
sub
xor
fnsave
loope
aas
sub
out
rcll
ljmp
sub
lcall
xlat
xchg
pop
adc
xchg
cld
cmp
clc
orl
sub
lock
sbb
out
lods
loopne
out
fidivrs
ret
out
insb
mov
sbbl
ret
jmp
mov
sbb
xchg
into
cs
push
mov
pop
jmp
add
cmp
pop
test
repnz
adc
push
jecxz
das
das
cli
incb
cmc
int
lret
adc
xlat
adc
pusha
sbb
xchg
mov
mov
mov
nop
loope
cmp
sub
stc
mov
push
or
call
addr16
xor
push
inc
xchg
fcomp
mov
add
jno
jae
xchg
sti
xchg
dec
dec
jb
lods
sbb
sbb
push
and
mov
lret
cmpsb
cmp
cmp
repnz
or
inc
ret
pop
xor
out
je
out
filds
in
pop
lahf
mov
mov
mov
hlt
mov
test
push
into
insl
js
subl
stc
addr16
jle
fnstenv
push
ja
xor
pop
jmp
ret
mov
sbb
lods
adc
inc
loopne
test
cmc
into
repz
fisttps
adc
pushf
push
aam
xchg
in
shl
pop
or
in
outsl
mov
mov
pop
sti
fildl
cmp
outsb
pop
jno
inc
daa
inc
xchg
pop
loopne
pop
stc
ljmp
lock
mov
push
mov
rclb
sbb
add
leave
out
sarl
adc
pop
add
sbb
jnp
mov
shlb
dec
pop
sub
adc
lret
sub
in
fnsave
gs
out
bnd
aam
jg
adc
push
fnsave
mov
jns
xor
fsts
sub
dec
mov
shlb
jle
aam
mov
frstor
adc
sub
lock
insb
push
cli
or
ja
pcmpgtw
les
dec
in
in
xchg
mov
pop
mov
add
sbb
and
or
aad
xor
xchg
pop
out
lahf
pushf
push
jae
fs
jge
dec
inc
mov
or
out
jno
push
movsl
adc
dec
pop
out
cmp
jb
pop
inc
xchg
mov
mul
loopne
into
mov
add
sbb
cmc
stos
out
fisttpll
ljmp
in
push
lods
xlat
mov
lods
fsts
inc
ss
and
ret
nop
fstl
mov
in
shrb
push
add
lds
fildll
mov
xor
rcll
pusha
mov
xchg
leave
pop
repz
flds
sbb
jbe
jno
push
sub
jp
rclb
stos
sarl
icebp
xor
and
rcl
iret
push
in
push
inc
mov
mov
push
imul
xor
subb
mov
push
adc
cmp
jg
push
mov
ret
idivb
dec
sahf
pop
test
sahf
cli
cmp
clc
rcrl
jno
mov
cmpsl
mov
jmp
sbb
inc
mov
mov
or
icebp
cmpsl
jp
xchg
xchg
xor
negb
test
or
jg
paddusb
lea
lahf
outsl
dec
push
mov
lcall
mov
pop
out
mov
adc
in
cmc
xchg
inc
cmp
test
push
in
xor
addr16
pop
mov
aam
sub
add
test
inc
rcll
sbbb
or
call
dec
icebp
push
fidivrs
xor
insl
dec
stos
arpl
inc
in
fwait
lea
jnp
sbb
je
aas
pop
jg
int3
nop
cmp
jp
push
mov
sub
stos
jle
sbb
xchg
cmp
mov
mov
pop
push
dec
imul
inc
add
scas
insl
call
sti
pushf
daa
call
testl
lahf
rcrb
adc
mov
mov
pop
or
jmp
and
aaa
push
or
ljmp
cli
push
movsb
and
mov
cmp
jecxz
repnz
mov
add
jo
stos
es
adc
fstps
jge
fxtract
shlb
mov
jne
popa
lea
dec
sbb
pop
dec
or
sbb
cmp
jl
int3
push
xchg
lds
mov
outsl
addr16
inc
push
stos
les
dec
adc
in
and
je
mov
sub
aaa
jo
inc
add
dec
mov
out
or
cld
cli
cmp
adc
push
pop
inc
insl
dec
adc
imul
cli
gs
loopne
jb
cmp
movsl
fldcw
sub
push
cmp
push
xchg
jbe
pop
xor
in
scas
aas
ja
push
fnsave
sub
mov
mov
movsl
cmpsb
pop
sub
mov
imul
mov
popa
lret
cld
sbb
sbb
xchg
jmp
pop
dec
or
adc
mov
insl
cmc
es
mov
xchg
mov
and
in
xor
and
adc
lret
leave
xor
mov
sbb
jnp
hlt
xlat
data16
jo
xor
mov
mov
sub
xchg
inc
dec
xchg
sbb
xorb
xchg
outsl
out
adc
mov
hlt
dec
lret
mov
push
jp
push
xchg
sbb
in
sub
mov
push
shr
fistpl
push
and
mov
lock
lds
movsb
into
jb
inc
je
pop
mov
aas
mov
mov
mov
lods
or
rclb
jnp
hlt
sub
sub
push
mov
jg
jp
in
fdivl
or
test
mov
cmp
inc
lcall
iret
push
mov
mov
andl
mov
inc
inc
jnp
push
xchg
test
dec
xchg
add
jns
popa
push
sbb
pushf
dec
cld
xor
mov
jp
jmp
jp
dec
pop
ret
sub
cli
cmp
loop
jae
loope
mov
cmp
mov
dec
adc
stos
mov
mov
dec
fbld
js
and
mov
mov
out
sbb
mov
les
sbb
lods
sti
pop
ljmp
jnp
push
pushf
jp
lcall
cmp
cmp
inc
nop
mov
stos
cmp
into
pop
and
inc
mov
hlt
movsl
xchg
sbb
outsb
and
lea
dec
mov
push
movsl
and
and
mov
fisttpll
out
cli
outsb
out
ret
out
inc
push
inc
mov
sub
scas
sub
cmp
out
add
push
aas
push
push
or
fldcw
sub
jne
adc
test
mov
xlat
inc
test
sti
xlat
in
inc
outsl
out
aas
or
les
or
lock
sbb
ja
cltd
push
jb
inc
ds
sub
pop
xchg
stc
into
or
mov
add
incl
jb
sbb
insb
fdivrs
aam
mov
sti
or
push
mov
pop
enter
push
clc
cmp
lods
pop
dec
inc
mov
push
pushf
inc
add
xchg
jb
jne
cmp
push
cmc
push
dec
fs
das
push
daa
pop
ret
je
pop
aaa
cmpsb
xchg
xchg
mov
rcl
cli
inc
inc
inc
mov
lahf
imul
mov
pop
dec
sti
push
sti
xchg
sub
into
fidivrl
sub
pop
das
ds
dec
push
popa
mov
aam
fs
xor
stos
cmp
cli
test
and
mov
fmull
dec
mov
aam
lret
imul
ljmp
mov
out
push
daa
adc
iret
push
insl
push
add
xchg
andb
rclb
in
xor
mov
in
movsl
xchg
sahf
and
fldcw
and
inc
xchg
outsb
aad
xchg
xchg
cli
rcll
xchg
pop
jns
cltd
test
dec
lcall
sbb
pop
cmp
sbb
cltd
enter
out
int
jo
mov
xchg
or
push
imul
cmpsl
push
loope
dec
inc
xchg
pop
pushf
movups
sub
scas
negb
xchg
insb
fbstp
mov
adc
push
daa
dec
jne
mov
stos
imul
xor
adc
outsb
cmp
pop
and
fwait
and
mov
and
add
aad
inc
xchg
pusha
int
inc
jnp
sbb
decl
jbe
fwait
cmpsb
adc
cltd
lds
jns
sar
inc
dec
mov
lods
cld
fistpll
dec
outsl
icebp
pop
pop
int3
sub
cmp
adc
sbb
shlb
ja
mov
addr16
pop
pop
dec
xor
jecxz
rol
pop
cmp
rorb
and
leave
insl
std
xor
enter
iret
cmp
xor
repnz
mov
sbb
std
cmc
xor
inc
les
scas
adc
jmp
inc
dec
jo
mov
or
cmp
jo
and
test
mov
cltd
mov
rcl
xchg
xor
adc
push
inc
call
divb
xchg
mov
add
call
mov
int
data16
sbb
jnp
lock
inc
pop
jns
scas
call
dec
jecxz
xor
popa
divb
sbb
popa
jge
dec
das
lcall
add
inc
mov
and
insl
test
sbb
imul
sti
sbb
adc
sahf
punpcklbw
scas
test
mov
xchg
dec
addr16
jnp
add
imul
inc
push
icebp
sbbb
mov
icebp
cs
dec
add
xchg
inc
push
sbb
mov
cmp
dec
ja
js
mov
jle
mov
ret
fwait
aad
les
push
sbb
fcomps
cmp
fisubl
stc
leave
xchg
jb
pop
sbb
fwait
data16
cmp
adc
les
data16
jmp
mov
movsb
jne
in
xlat
test
test
mov
sbb
xchg
push
inc
faddp
dec
lret
sub
rorl
add
cmp
fmull
jle
out
cmpsb
mov
push
dec
jbe
imul
pop
shrl
fs
xchg
dec
fmull
sub
dec
and
lret
inc
sahf
adc
movsl
scas
cmp
int3
outsb
xchg
sub
or
pop
mov
fists
bound
push
mov
mov
stos
jbe
push
ja
insl
sbb
cmpsl
ljmp
or
mov
lock
add
xchg
repnz
pop
imul
pop
test
sub
xor
inc
or
lods
cmpsl
add
xchg
xor
aaa
and
jns
call
insb
mov
imul
push
sub
push
clc
repz
mov
inc
inc
in
aam
dec
mov
scas
push
mov
xchg
fwait
in
shrb
sub
jmp
test
enter
ret
adc
rcll
push
add
inc
loop
popa
test
test
mov
dec
xlat
xlat
pusha
adc
mov
insb
lcall
mov
cmc
stos
frstor
fsts
test
push
dec
sbb
fmuls
xchg
mov
popf
mov
mov
fcoml
mov
jp
roll
dec
adc
mov
ds
cmp
dec
loop
loopne
popf
xchg
adc
sbb
in
mov
repnz
arpl
icebp
mov
and
ror
inc
inc
push
fs
inc
pop
test
pop
mov
jae
in
das
test
nop
icebp
in
xchg
jns
sbb
les
in
mov
cld
lods
call
gs
push
stc
rol
mov
and
jl
cvtpi2ps
jg
push
pop
ror
adc
cs
movl
sub
push
or
cmpsl
sahf
or
cmpb
pop
xchg
pusha
pop
mov
pop
jp
lock
addb
or
lea
sub
sahf
ret
xor
push
adc
out
test
pop
ret
dec
incb
cmpsb
xor
inc
cmp
inc
std
sbb
std
xor
hlt
push
inc
testl
lret
cli
icebp
jbe
lret
int
push
jnp
sub
pandn
ret
inc
fisubl
sbb
mov
fstpt
sbb
jae
lahf
add
daa
cmp
test
fiaddl
mov
mov
clc
adc
sub
sub
xchg
xor
mov
nop
outsb
mov
in
movsb
push
leave
xor
sbb
mov
rcrb
lahf
dec
faddl
push
jle
movsb
call
mov
ja
testb
pusha
lret
adc
xor
ret
popa
rolb
mov
fs
dec
jno
jle
int3
loop
mov
das
cmp
mov
and
bound
dec
or
insb
and
inc
add
jle
xor
or
cmp
dec
jl
adc
sbb
aaa
loopne
cmp
pusha
cmpsl
shrl
sbb
subl
into
mov
jmp
aas
or
cltd
sti
ljmp
in
mov
lcall
enter
cmp
dec
pushf
icebp
shll
fs
mov
jnp
jecxz
mov
push
mov
jle
xchg
jle,pt
or
add
cmovg
test
sbb
xor
cmp
push
push
sub
pop
xchg
pop
sub
add
jcxz
sbb
pop
mov
mov
es
js
jecxz
fidivl
int
mov
add
mov
adcl
jl
sub
arpl
shl
in
leave
dec
mov
es
shll
imul
cwtl
out
pop
into
ds
out
or
in
fistpl
inc
sub
setns
dec
icebp
jbe
mov
jp
mov
or
sbb
int
jle
push
orb
iretw
sbb
scas
dec
in
adc
hlt
or
xlat
pop
movl
cmpsb
xor
xor
dec
cmp
subb
jae
cmp
fsubs
fnstenv
adcl
add
lds
sarl
xchg
push
or
je
repz
jbe
in
test
mov
inc
insl
sub
adc
add
out
xor
lret
lods
xor
sub
std
out
inc
ret
lea
mov
ja
xchg
inc
lcall
jne
add
mov
xor
in
xlat
push
and
xchg
aas
add
fcomp
bound
sbb
shrl
pusha
roll
mov
inc
call
mov
iret
xor
or
fsubrs
mov
ja
shrb
cwtl
or
inc
mov
scas
sbb
dec
inc
daa
xor
pop
cmpl
push
or
or
jge
pop
push
inc
mov
xor
popf
jbe
inc
orl
mov
jnp
or
dec
mov
int
mov
mov
repz
xor
test
repz
mov
aaa
out
mov
int
popf
cmpsb
mov
adc
mov
jnp
fldcw
sbb
repnz
xchg
es
out
cmc
test
mov
mov
jp
cmp
jmp
xchg
sub
sahf
xor
imull
subl
sbb
addb
push
popa
adc
sti
push
popf
add
mov
sbb
jno
fstps
push
inc
inc
popa
test
add
pop
shr
xor
outsl
pusha
inc
sub
lret
or
mov
lcall
enter
push
adc
mov
mov
sbbl
lret
aad
jns
push
add
movq
je
enter
add
int3
xor
push
jmp
mov
scas
cmp
aam
pop
sbb
shll
pop
call
lods
scas
and
rclb
pusha
jbe
sti
stos
nop
out
xchg
cwtl
or
lock
andl
mov
insb
jne
mov
jl
add
sahf
mov
sbb
xor
cmp
push
sbb
xchg
inc
push
aaa
xchg
inc
push
mov
pop
nop
push
dec
in
jge
cltd
outsb
mov
mov
imul
pop
popa
add
push
dec
cwtl
call
movsl
push
and
push
popa
mov
lods
mov
inc
xor
and
dec
mov
movsl
fldcw
mov
pop
xor
daa
cs
cld
ja
mov
mov
add
pop
adc
push
cmp
fwait
or
or
mov
cmpsb
inc
lods
ret
arpl
sub
lock
pop
scas
dec
insb
mov
das
push
mov
popa
aaa
test
jle
in
lcall
push
pop
out
out
cltd
insl
xor
or
mov
dec
and
xor
pop
stc
jbe
outsl
test
das
arpl
xchg
cli
cmpsb
ret
xchg
repz
negl
out
fisttps
jb
arpl
rorb
adc
jne
bound
add
sbb
xor
scas
inc
and
cmc
ljmp
dec
movsb
mov
into
inc
popa
in
sub
adc
mov
aas
clc
dec
sub
adc
sbb
loopne
adc
loopne
cmp
xor
xor
push
or
stos
cmp
mov
mov
and
sbb
jmp
pop
jmp
popf
mov
and
cli
cld
pop
mov
arpl
xor
shlb
push
sbb
sbb
push
aaa
cld
into
into
push
mul
les
dec
andl
add
mov
jp
jnp
inc
adc
mov
mov
mov
mov
rcrb
adc
or
jmp
sti
fs
call
adc
dec
pop
mov
inc
lea
sbb
sub
movsl
mov
hlt
dec
cmpsb
cmp
add
cld
je
xlat
ss
add
lahf
sbb
sub
cmp
inc
or
int
inc
sub
xor
ss
jno
push
cmpsl
xchg
es
scas
pop
je
aas
shlb
cs
aam
xchg
xor
sbb
idivb
js
repnz
mov
jle
int3
cmpsl
shll
xchg
sub
fcomps
add
sub
mov
js
and
ficomps
push
mov
mov
out
les
addr16
enter
dec
rcl
pop
insl
roll
repnz
arpl
aaa
push
adc
out
lds
cmpsl
mov
movsb
mov
push
in
aad
mov
mov
or
jl
push
jae
imul
sbbb
dec
test
ss
mov
fnstsw
mov
xchg
inc
test
popa
rcrl
gs
sub
cmp
daa
cmpsl
xor
hlt
fidivl
push
or
pushl
adc
inc
outsl
pop
sti
in
xor
inc
jp
testb
xchg
mov
cmpsl
cmc
xor
jae
js
inc
pushf
fs
push
sbb
sbb
inc
test
lret
jl
scas
inc
cmp
mov
sbb
mov
ret
adcb
popl
mov
inc
mov
les
jne
loopne
lea
cs
cwtl
adc
icebp
sti
sub
shll
xchg
pop
rcrb
push
jns
sbb
fbld
daa
fmuls
xor
cmpsl
push
mov
repz
addr16
push
lret
push
or
push
imul
pusha
xor
std
xchg
repz
ljmp
jge
xchg
sub
sarl
jo
add
add
push
flds
cmp
adc
sbb
out
stc
xor
xchg
loop
dec
adc
filds
bound
pusha
jnp
imul
dec
mov
jo
and
mov
jnp
repz
mov
popf
out
imul
or
data16
xchg
shrb
xchg
xor
das
fldt
jne
pop
sbb
popa
mov
inc
cmc
and
fildll
roll
sub
nop
lods
lahf
pop
xchg
ret
stos
mov
decl
push
and
fnsave
xchg
push
sub
fdivr
ja
dec
push
add
hlt
pop
jmp
jl
cmp
insl
test
xor
push
inc
clc
jo
call
fs
into
lds
cld
push
outsl
mov
scas
ret
inc
sti
mov
push
push
adc
lcall
loopne
or
bound
outsl
les
adc
fcmovnbe
or
push
dec
xchg
mov
adc
xchg
mov
push
push
lock
mov
xchg
jnp
pop
push
sbb
subb
in
xor
and
jge
and
sub
pusha
loop
loope
mov
lds
inc
ds
or
jg
sbb
adc
sub
or
outsb
xchg
xchg
leave
repnz
jmp
adc
loop
and
movsl
inc
out
sbb
cmpsl
or
lods
stos
and
cmc
push
inc
sub
repz
push
push
insl
pop
fwait
das
ror
stos
or
outsl
jae
popa
lods
int
data16
push
daa
shrb
in
mov
cmc
push
cmpsl
in
call
pop
mov
xor
add
push
sub
jp
icebp
xor
fsubs
sahf
imul
insb
je
hlt
xchg
out
shl
jp
jle
cmp
xor
push
ss
gs
outsb
hlt
jbe
in
push
fstps
cs
mov
push
jnp
cmp
test
adc
mov
xchg
xchg
rcrl
stc
daa
lds
subb
or
dec
jnp
add
jno
lea
inc
mov
stc
xchg
int
sbb
mov
mov
mov
xor
xchg
cmp
sti
test
sbb
rorl
add
adc
pop
repz
xchg
jp
mov
ret
push
lret
mov
gs
xor
dec
mov
or
cwtl
xchg
cmp
pop
adc
rcrl
int
sbb
pop
test
outsl
or
inc
test
mov
add
into
cmp
idivl
daa
mov
dec
inc
fiadds
fwait
xchg
rcll
in
roll
mov
mov
pop
cmc
inc
or
rep
fisttpl
outsb
xor
aam
aam
jp
mov
push
jo
sub
and
jne
icebp
mov
lahf
lret
call
dec
mov
pop
lret
imul
inc
fwait
ret
push
ret
lcall
or
in
out
pop
pop
dec
add
call
push
cmp
dec
call
test
out
adc
add
mov
imull
cwtl
rol
fwait
mov
jne
mov
orb
fstpl
push
cmp
push
adc
out
loopne
adc
ss
test
xchg
mov
aad
dec
jne
dec
sbb
leave
roll
fnstcw
mov
sarl
fwait
sub
adcb
pusha
clc
repnz
jbe
shlb
pop
pop
inc
stc
insl
js
mov
int3
inc
add
push
nop
mov
fldcw
imul
jbe
imul
cld
add
and
sbb
inc
std
in
jp
sub
int
popf
xchg
cmp
jge
shll
in
in
lods
mov
push
out
cmp
gs
mov
dec
add
mov
fwait
enter
or
out
jmp
sub
pop
pop
inc
and
push
inc
mov
in
ret
es
ret
pop
adc
lods
hlt
jmp
sbb
lcall
or
sbb
ljmp
jo
and
cmp
xchg
mov
jne
cmp
and
ret
sub
mov
and
lcall
test
xchg
sbb
popa
loope
cltd
ret
mov
out
pop
mov
iret
mov
jb
sub
pop
shr
or
push
lds
xchg
pop
push
jecxz
cmp
cmp
out
mov
push
cmp
int
mov
jbe
stc
test
iret
daa
sbb
inc
xor
cmc
add
pop
mull
cmpl
inc
popf
shll
cld
inc
sbb
xchg
adc
icebp
add
mov
adc
iret
out
sbb
jae
dec
jmp
js
xchg
push
sti
pop
cmp
aam
fcoms
pop
daa
lret
adc
iret
pop
mov
jns
push
lahf
popf
cs
jmp
cltd
jge
mov
sar
loope
sub
shl
call
inc
gs
lcall
pop
dec
adc
out
push
xor
and
sbbl
adc
mov
cltd
ret
sbb
lahf
mov
jp
call
and
lods
orl
inc
cmovae
mov
or
add
in
aas
adc
sbb
cmp
in
ss
mulb
jge
lahf
sahf
xchg
insb
sub
cltd
notb
aas
pop
imul
mov
xor
jae
xor
sarb
pop
cmp
ret
xor
or
add
dec
stos
jnp
mov
dec
sub
pop
movb
and
pop
sti
test
nop
imul
mov
inc
dec
mov
xchg
cmpsl
mov
sub
xchg
out
and
dec
arpl
lret
retw
js
stos
push
notl
mov
xchg
sub
clc
out
js
adc
das
jg
push
int
pop
clc
push
in
mov
adc
cs
cmp
push
dec
lret
pmaxub
sub
mov
arpl
ret
mov
sbb
cmpsb
inc
pop
push
cld
pop
int
loop
enter
rdmsr
pop
add
cmp
js
outsb
lock
jne
test
cmp
lret
popa
jmp
rclb
adc
lea
fisubs
cs
outsb
lcall
mov
push
jle
gs
push
jbe
mov
je
pop
mov
pop
nop
repnz
aad
sub
hlt
leave
out
xor
mov
in
test
jnp
adc
xchg
mov
daa
ljmp
jo
or
jae
adc
push
adc
jg
xchg
fisubs
xor
lret
dec
add
punpcklbw
dec
cmp
adc
mov
adc
into
fs
xchg
cmc
cmc
nop
gs
je
stos
push
add
into
or
fcmovnbe
pop
jnp
push
loopne
popf
push
push
or
push
jns
xor
mov
sbb
rcll
divl
daa
and
add
fbstp
mov
jo
jne
stos
lods
enter
dec
ss
inc
cmp
cmp
push
xorb
fs
cmp
cmp
cmc
gs
pop
push
mov
mov
sub
xchg
jp
iret
jg
and
fwait
jmp
iret
sbb
add
xorl
mov
inc
daa
andb
inc
pop
inc
ret
je
cmc
movsl
add
cmp
and
push
jo
sbb
andb
jnp
pushl
scas
cltd
push
dec
dec
cwtl
fisubrs
xor
push
cli
mov
notl
jno
sbbb
imul
clc
out
arpl
aam
aas
and
dec
cli
sarl
jne
out
dec
dec
out
sbb
fdivrs
subl
xchg
scas
mov
pop
imul
xchg
xchg
add
in
cmp
or
sub
in
ljmp
dec
movsb
dec
inc
popl
decl
outsl
lret
xchg
and
sbb
sti
or
inc
mov
cld
push
mov
rcl
pop
fimull
push
inc
dec
outsb
scas
sti
mov
mov
loopnew
mov
sbb
adc
mov
mov
mov
dec
cmpsl
outsb
xchg
inc
shrb
mov
ja
dec
xlat
push
pop
jge
add
adc
icebp
dec
aam
enter
xor
popf
add
aaa
lods
pop
and
mov
add
rcrl
mov
push
cmpsb
mov
and
or
adc
in
cmp
inc
scas
testb
push
pop
pop
xor
insl
cltd
pushf
movsl
lret
xchg
cmc
enter
xor
insb
cltd
inc
repz
xchg
xor
sti
xor
mov
fsts
inc
imul
mov
cwtl
mov
iret
aas
pop
call
rep
testl
push
jae
sbb
jecxz
hlt
pop
mov
fadd
jl
cmpsb
mov
negl
mov
xchg
sub
jb
scas
and
addr16
popf
test
ud2
in
or
popf
xchg
ja
pop
cltd
pmullw
adc
xor
mov
push
imul
xchg
push
xchg
mov
or
lds
call
lret
xchg
sub
pop
pop
or
jecxz
pop
repnz
cld
cli
imul
negb
fisubs
jg
add
repnz
adc
rep
orb
mov
mov
add
pop
jg
je
mov
adc
adc
cmp
data16
insb
xor
lods
jns
lea
notb
add
inc
lods
ret
adc
cmpsl
pusha
dec
mov
inc
hlt
test
push
jge
mov
xchg
cmp
sbb
test
inc
loopne
add
pop
pop
fisttps
mov
loope
sbb
jbe
and
mov
dec
dec
lds
pop
pusha
jp
lcall
push
mov
xchg
daa
inc
jecxz
xchg
push
xor
or
sub
and
mov
pop
xor
clc
fistps
insb
leave
rorl
sub
and
inc
sbb
outsb
cmp
js
subl
pop
loope
add
inc
ja
jl
dec
push
lods
mov
sub
push
mov
lcall
fs
pop
ljmp
test
shll
mov
frstor
imul
popf
jne
xchg
stos
sbb
inc
mov
pop
mov
ficoms
jo
leave
adc
jmp
scas
cmp
or
pop
out
push
sti
sbb
sub
mov
inc
adc
pop
mov
adc
fs
jnp
mov
arpl
clc
sub
mov
aaa
xor
xchg
xchg
movsb
mov
add
jg
rorl
cltd
add
jb
or
dec
imul
mov
test
and
fdiv
cltd
inc
movsl
or
lret
cmc
pop
loop
ja
xor
std
stos
xchg
call
stos
ret
xchg
and
lods
sub
jne
mov
in
repnz
mov
movsb
into
sbb
or
inc
mov
enter
pop
rcrb
adc
mov
in
ret
push
sarb
fdivrp
adc
mov
cmp
sbb
xor
nop
add
fwait
lcall
imul
shll
or
pop
sbb
je
mov
push
in
cmc
push
cmp
cmpsl
aas
adc
inc
inc
mov
push
in
xchg
in
scas
out
or
or
sbb
pop
pop
push
fmuls
and
push
xchg
push
insl
jl
dec
mov
jg
pop
jne
sbb
out
xor
xor
mov
loop
push
cmp
xlat
inc
xor
mov
mov
int3
loop
test
pop
movsb
lds
push
lcall
sar
mov
push
loopne
fmull
lock
lret
je
popa
and
cmc
jle
in
fcompl
pop
aaa
or
sub
enter
aas
pop
jge
pop
arpl
mov
jnp
dec
out
push
xor
mov
lret
adc
in
addb
mov
cmp
mov
fimull
int3
and
addr16
xor
mov
cld
fisttpll
dec
ret
jmp
popf
add
push
stos
lock
pop
xor
mov
jg
ret
inc
mov
enter
lgdtl
and
sub
imul
fucomp
test
adc
add
test
lahf
mov
stc
repnz
lcall
jno
cmpsb
adc
in
sub
inc
outsb
popf
jbe
dec
xchg
cld
stos
lea
mov
cmpsl
cmp
call
push
test
or
mov
mov
aaa
cmp
add
fcmovb
mov
sahf
mov
push
jmp
sub
sub
aas
or
push
pop
jns
mov
mov
mov
pop
mov
lods
jae
or
mov
loopne
ret
and
out
imulb
dec
leave
mull
pop
out
xorb
int3
sub
mov
test
sbb
je
dec
push
dec
imul
lea
cltd
and
push
cmp
ror
adc
ja,pt
jae
jge
sbb
sub
dec
scas
push
push
xchg
enter
mov
mov
xchg
xor
jbe
mov
adc
jl
inc
adc
imul
js
mov
fistps
ljmp
or
mov
and
insl
push
sub
data16
push
adc
sbb
mov
pop
addr16
xchg
loope
in
pop
sbb
test
jmp
add
fists
loope
in
mov
out
mov
jp
cs
mov
pop
lods
mov
mov
pop
or
rcr
mov
push
cld
subl
rorl
sub
je
aaa
cmp
in
dec
push
pop
cltd
dec
enter
lcall
push
push
pop
mov
lret
pop
inc
and
jge
arpl
inc
call
dec
inc
mov
inc
or
popa
xlat
addr16
in
xor
rcrb
jbe
in
bound
add
fstpt
cmp
add
mov
mov
sbb
mov
pop
test
sub
ss
leave
mov
cmc
dec
add
lea
icebp
pusha
sbb
lods
cmp
sub
pusha
jle
enter
int3
jb
push
outsl
jo
inc
out
fucomip
add
push
mov
loop
jg
fwait
int3
inc
mov
or
nop
cmp
add
ss
out
fnsave
int3
or
fwait
cmp
cmp
sahf
hlt
sbb
jno
mov
aad
mov
lret
shl
adc
imul
es
popa
iret
sbb
rolb
jne
sub
mov
je
int
lahf
je
es
js
mov
sbb
mov
and
pop
std
lock
dec
lds
cwtl
ret
jb
add
out
push
fldl
pop
pop
jle
push
jne
push
roll
add
in
lret
lock
fmull
and
jb
dec
out
mov
test
fldt
loop
sub
or
in
sub
jmp
mov
mov
gs
leave
gs
cmp
jl
stos
jg
push
bndldx
or
loopne
aas
xor
pop
bound
or
xchg
in
push
jae
push
dec
mov
out
aaa
sub
lds
aas
inc
mov
aaa
aaa
arpl
call
jg
fs
mov
cs
pop
xor
scas
jg
test
rcrb
push
cmpsl
cmp
fwait
iret
popf
fmulp
mov
mov
inc
mov
mov
dec
pop
dec
cmpsl
xchg
lea
in
pusha
xor
arpl
inc
sub
ja
xchg
push
int3
call
inc
xor
testb
insb
pop
jns
punpckldq
hlt
in
fistpl
xchg
rcrl
imul
mov
jle
in
jge
lcall
mov
pop
fistpll
es
inc
xor
cld
cmp
mov
mov
cmp
imul
into
test
pop
ret
cld
cmp
or
and
daa
mov
addr16
and
or
in
pop
add
cs
xchg
sti
test
adc
aam
pusha
push
mov
jns
add
mov
sti
idivb
jecxz
xchg
stos
enter
dec
cwtl
aas
aaa
incl
cmc
xchg
mov
outsb
cmpsb
outsb
dec
repnz
push
out
pop
sbb
sahf
pop
pushf
nop
jp
cs
js
xchg
pusha
cmp
sbb
call
push
adc
jecxz
xor
in
or
addr16
sub
stos
add
ds
insl
mov
or
ret
adc
mov
push
fldt
xchg
cmc
lods
insl
push
dec
sub
std
xchg
shll
lds
and
mov
dec
mov
xchg
fisttpll
loopne
mov
and
scas
in
insl
int
mov
pop
mov
sbb
das
add
test
les
hlt
imul
lahf
in
icebp
sub
iret
stos
mov
aad
adc
lret
popa
scas
xchg
cld
pusha
mov
and
xor
fiadds
ja
cltd
adc
test
sub
shl
jbe
add
dec
icebp
jmp
push
divl
sbb
je
rcll
push
ja
subb
out
stos
sbb
inc
mov
cmp
inc
cmp
push
add
pop
loop
cmovns
mov
adc
mov
dec
xchg
lahf
ss
les
xor
pcmpeqd
mov
rolb
dec
adc
xchg
mov
iret
aam
cmpsl
and
sub
push
pop
fists
dec
cmp
fdivrl
jns
pop
scas
fstpt
rorb
and
cmp
dec
sbb
pop
je
dec
ja
lods
fwait
adc
pop
decb
lret
jno
cmp
in
add
ds
or
pop
pop
dec
or
cltd
iret
mov
pop
push
inc
add
cmp
xor
mov
pop
out
ja
outsb
insb
xor
mov
in
es
sub
ret
inc
popf
fadds
or
adc
les
xchg
jg
cmp
in
data16
mov
data16
mov
je
pop
push
mov
iret
mov
insl
adc
shl
jmp
jne
dec
mov
xchg
mov
shl
push
inc
push
jle
fnsave
rclb
push
cmp
or
test
mov
jo
frstor
xchg
sbb
dec
xchg
popa
jmp
hlt
add
aad
fstps
stos
daa
bound
je
add
mov
push
inc
dec
roll
xchg
dec
push
and
dec
xchg
push
mov
sbb
pop
jno
ds
lds
aad
out
jl
ret
lock
dec
test
inc
and
shr
sti
jmp
mov
cwtl
stc
js
outsb
or
aas
adc
gs
mov
jb
or
add
je
paddd
jg
arpl
add
rolb
mov
push
jo
adc
sbb
orl
or
xor
jg
cli
or
inc
inc
cmpsb
jle
dec
or
xchg
mov
and
lea
dec
sub
je
dec
xor
mov
movsl
mov
and
or
sub
clc
fsubl
inc
mov
sub
xchg
pop
push
outsb
push
mov
jecxz
pop
repnz
int
xchg
xchg
js
or
mov
dec
xor
mov
pusha
cli
xor
cmpsl
in
fsubs
xor
add
jge
cmpsb
sbb
jg
sarl
xchg
or
jb
out
inc
into
or
pushf
fsubs
paddsw
mov
add
dec
mov
xchg
imulb
hlt
rsm
test
jge
xor
test
sbb
lahf
mov
addl
dec
fcoms
fwait
bnd
lods
sbb
pusha
xchg
arpl
fists
test
sub
jo
add
mov
push
dec
jg
xor
pop
lret
jae
xchg
rol
in
cmpsl
lahf
inc
orl
loopne
inc
mov
xor
mov
pop
test
lcall
cmp
adc
xchg
fbld
push
and
push
sbb
arpl
mov
inc
xor
test
scas
aad
icebp
mov
insl
aam
popl
mov
lahf
in
scas
js
jae
flds
mov
mov
out
adc
mul
mov
inc
jl
or
shll
cmp
add
sbb
cmpl
push
int
cmp
lods
lds
shrl
inc
subl
cmp
lea
sbb
xchg
popf
dec
sbb
ror
ljmp
or
cmpsl
pop
or
js
xchg
pop
xor
call
push
imul
push
dec
cmpsl
push
sarl
adc
add
sub
sbb
mov
rcrb
fildl
pop
add
pop
sti
loopne
add
and
mov
or
scas
push
push
xchg
rcrb
pop
cld
pop
aas
mov
mov
push
inc
nop
mov
cmp
rcr
xorb
jg
in
repnz
sub
imul
ds
add
cmp
fildll
out
sub
fwait
push
in
jns
lcall
xchg
sub
popf
jnp
sub
sub
ret
lea
in
cmp
scas
loope
add
pop
jp
stos
push
mov
cmp
sti
push
sbb
dec
mov
cwtl
xchg
push
mov
push
mov
nop
push
sub
xchg
ror
mov
cmp
inc
push
stc
add
sub
pop
sbb
sbb
lahf
push
push
adc
pop
fbstp
fcompl
pop
jmp
xor
repnz
or
lock
jl
mov
push
sub
stc
ds
xchg
shlb
insb
mov
or
cmp
adc
sbb
scas
jecxz
mov
pop
cmpb
add
lcall
cmp
pop
xor
xchg
pop
pop
fildll
cmp
es
js
push
jns
mov
repz
pusha
cld
arpl
push
cmp
test
or
fwait
cmp
push
adcl
inc
setb
jae
inc
push
push
add
pop
popa
sub
loopne
das
hlt
ja
xchg
jl
lock
adc
int3
mov
ficoml
cmpsb
std
dec
push
push
and
cmpsb
push
in
dec
adc
sbb
add
push
inc
stc
shll
int3
fiadds
jnp
xchg
cld
sbb
inc
sbb
jl
jg
lahf
mov
pop
mov
xor
scas
adc
dec
loopne
js
out
imul
jno
jb
push
mov
lods
andps
mov
rolb
iret
imul
pusha
pop
js
mov
inc
mov
jbe
ss
pop
std
in
in
adc
cltd
popf
xchg
pop
pop
and
pop
jmp
push
pop
fidivl
adc
sbb
mov
and
aas
adc
cltd
xchg
sub
jae
pop
and
outsl
mov
daa
push
mov
sub
out
gs
ljmp
dec
pop
jge
lods
sub
popf
shlb
add
add
push
xchg
push
ret
loope
jne
adc
out
mov
cmp
leave
jnp
jo
daa
popa
add
pop
sub
imul
push
xchg
mov
mov
push
dec
mov
cmpsb
arpl
loope
adcb
ja
ja
pop
xor
outsl
insl
test
pop
shl
or
test
sbb
or
fdivrl
das
test
jmp
in
or
cmpsl
xchg
into
enter
lret
cmc
cmp
jnp
fidivs
add
inc
or
mov
or
cmp
movsb
popa
cltd
imul
mov
mov
mov
insl
adc
xchg
sub
mov
adc
fildll
js
push
adc
cwtl
jg
mov
ss
mov
mov
lret
fdivs
mov
xchg
movsb
xchg
enter
add
xor
imul
adc
mov
add
pop
inc
adc
add
sarb
movsb
rclb
sahf
mov
mov
and
fisubrs
or
gs
and
xchg
test
and
dec
notb
sub
imul
jg
dec
cmp
clc
push
and
lret
mov
popf
sbb
xor
stos
mov
xor
add
pop
add
adc
inc
push
fistpl
push
stos
sbb
ss
movsb
out
jl
into
adc
mov
mov
inc
sub
xchg
rcrb
popf
pusha
je
aad
enter
jb
lcall
out
popa
jbe
dec
jp
jae
ficoml
lcall
pop
mov
mov
push
test
xchg
mov
dec
mov
cmp
sbb
sbbb
test
sub
adc
xor
jmp
divl
int
or
bound
lea
das
mov
sarb
pop
outsl
in
pop
mov
ror
jmp
sub
pusha
adc
dec
cld
or
sbb
add
test
cwtl
test
add
add
xchg
js
xor
cltd
push
daa
dec
inc
loopne
mov
sub
and
cli
sbbb
ds
enter
mov
push
xor
and
movsl
cli
adc
mov
divl
xor
xor
pop
or
ja
cmpsl
sar
inc
pop
in
stos
insl
aad
fimull
pop
jge
sub
jb
js
sbb
cmpsb
out
xchg
repz
cli
mov
cmpsb
pushf
aas
push
xor
cmpsb
mov
jecxz
cmpsl
inc
sbb
dec
iret
jnp
popl
loop
jb
lcall
lods
mov
aas
lret
push
mov
negb
stos
inc
pop
in
fwait
xorl
stc
mov
pop
outsl
arpl
jge
imul
lret
adc
test
roll
mov
push
arpl
pusha
cmp
or
aas
adc
les
bound
repz
inc
cmp
dec
lcall
adc
decl
pusha
pop
aam
jmp
mov
and
and
fmul
repnz
mov
in
es
mov
lds
mov
pop
icebp
cs
cmp
testl
pop
pop
je
mov
push
lock
xchg
sub
xchg
or
mov
pop
nop
popa
jno
cs
inc
bound
fs
out
adc
mov
cmpsb
jae
jge
lds
fbstp
add
popf
or
xchg
mov
fistl
or
insl
negb
int
insl
bnd
cmp
call
xor
sub
xchg
in
dec
xchg
pushf
mov
cmp
lock
or
testl
add
xchg
inc
lds
cmp
mov
pop
das
orl
shlb
sub
jbe
cmp
shl
add
and
xchg
pop
aaa
sub
push
xor
cmp
mov
or
shl
movsl
cmp
lock
mov
adc
sub
icebp
sub
sub
sub
or
push
cmp
sub
das
psrlq
mov
inc
xchg
cmp
dec
push
pop
xor
add
push
mov
aas
or
outsl
negb
xor
sbb
popf
adc
pop
mov
shlb
out
loop
icebp
dec
add
addr16
shrb
ret
dec
rep
and
pop
clc
xlat
mov
push
add
sbb
mov
push
sarb
inc
inc
jle
push
pop
fs
insb
pop
cmp
leave
pop
push
ss
jl
jo
jae
stc
lea
xchg
inc
sub
out
sub
cwtl
mov
sbb
loop
icebp
outsl
js
pop
addl
dec
cmp
lret
popf
or
xchg
stos
jge
sbb
daa
sub
rcl
or
into
popf
ud2
int
je
lcall
push
lods
sbb
cltd
shl
test
mov
push
repz
add
jmp
xchg
sbb
lret
bound
cmp
fcmovne
mov
sbb
lcall
mov
add
add
dec
dec
dec
fs
xchg
mov
jb
jg
dec
mov
sbb
repz
aad
push
pop
shl
mov
xchg
adc
inc
jnp
push
aas
add
sbb
add
clc
jg
outsb
lea
dec
out
sarb
outsb
loop
mov
in
cs
leave
cmp
adc
cmpsl
or
mov
ljmp
push
ret
adc
lret
roll
push
clc
jnp
adc
adc
insb
mov
fwait
and
mov
pop
dec
push
jg
cmp
ljmp
inc
push
std
fildll
push
stos
psubusw
stos
pop
lret
jge
sub
loope
pop
lea
dec
jmp
xchg
adc
jb
stos
xchg
xor
rcrb
js
leave
mov
mov
pop
leave
lods
stos
add
push
dec
das
lea
cs
test
mov
inc
push
or
cmp
clc
in
gs
dec
xor
cwtl
aad
icebp
daa
jmp
mov
vfrczps
inc
fsubrl
rorl
xchg
jl
mov
aam
das
xchg
scas
sbb
fdivl
imul
mov
push
inc
stc
stos
push
push
dec
lds
xchg
repnz
pop
sar
cltd
mov
sbb
xchg
jns
mov
cli
inc
sbb
pop
xchg
int
gs
inc
xchg
push
imul
cmp
or
ret
add
in
push
pushf
adc
les
mov
test
mov
andl
mov
adc
cmp
and
pop
mov
jne
pop
sbb
pslld
or
add
xchg
mov
loope
jl
or
lret
stos
jbe
adc
int
cmp
bswap
xlat
and
out
cltd
cltd
sub
lahf
lret
or
insl
xchg
sarb
fwait
pusha
lods
adc
jno
xor
mov
enter
ret
fbld
pop
and
mov
or
and
cmc
dec
loop
scas
add
sbb
fidivrs
or
add
mov
ret
push
push
mov
adc
incl
lahf
idivb
jbe
push
mov
push
lock
mov
push
xor
cmpsb
idivb
scas
mov
shlb
imul
out
sub
jge
js
ret
jns
out
inc
out
les
and
sub
ljmp
cwtl
sahf
pop
cmp
test
pop
mov
inc
inc
push
mov
fwait
jns
out
in
inc
mov
gs
sti
add
test
stos
test
mov
and
mov
mov
and
fsts
xchg
or
es
pushf
insb
pop
pop
jp
xchg
mov
xor
fs
out
sbb
jbe
inc
or
push
sbb
cmp
jge
dec
or
xchg
jne
fs
popf
xchg
mov
dec
cmc
jnp
xchg
fdivrp
mov
ror
add
imul
shr
orb
in
js
lahf
iret
push
jg
cmp
arpl
jbe
push
sar
and
jae
and
or
and
ror
daa
lods
aad
xchg
fsubrs
sub
cld
in
frstor
ljmp
lds
pop
fbld
sti
sub
push
xor
outsb
jae
cmp
mov
add
mov
lods
mov
adc
pop
mov
test
jno
cmpsb
and
out
push
fiadds
mov
push
shll
mov
dec
sbb
fstps
dec
mov
sub
aas
cli
ficompl
in
mov
je
xor
push
mov
sbb
inc
je
mov
cmp
pop
inc
sub
or
inc
in
fwait
cmp
or
call
or
or
int3
aas
mov
lds
push
aad
jbe
adc
sub
dec
add
or
pop
scas
jecxz
loopne
mov
enter
push
lahf
mov
and
jp
pop
shlb
fdivs
mov
fbstp
imul
push
or
xchg
es
repz
sub
ficoms
add
dec
xchg
jo
in
and
and
sub
and
add
xor
shlb
bound
jecxz
mov
bound
and
movsb
jne
pusha
ss
fsub
adc
sbb
xchg
xchg
data16
sbb
aad
jg
js
pop
aas
ret
push
call
or
ret
xor
adc
xorl
or
into
mov
ror
ljmp
ret
xchg
xchg
outsl
fwait
inc
enter
xchg
lock
cmp
lret
adc
loopne
sbb
outsl
int
inc
mov
ds
push
mov
jae
cmp
mov
dec
dec
adc
shrb
or
jne
aad
ret
cmp
push
popf
imul
sbb
inc
in
and
aas
inc
jne
in
int3
outsb
mov
testl
jg
repz
jno
push
and
jmp
out
fbstp
aam
in
push
jecxz
xchg
outsl
xchg
das
jmp
sub
add
mov
or
mov
sbb
gs
add
leave
js
push
arpl
mov
stc
or
bound
ja
xchg
decb
icebp
mov
xlat
push
stos
shrb
std
int3
inc
jb
shlb
cli
sahf
loop
cmpl
mov
cwtl
jae
mov
js
inc
add
test
add
mov
jmp
insl
jle
sub
andb
jb
repz
sbb
inc
xchg
int
in
loop
pop
or
push
cmp
cli
add
test
outsl
jle
lret
ss
aaa
sub
stos
sub
mov
bound
cmp
mov
push
or
cs
ds
daa
ret
xlat
jnp
mov
popa
jle
xchg
mov
aaa
stos
xchg
shr
pop
or
xchg
pusha
add
jecxz
fmuls
fs
aad
mov
xchg
xchg
roll
xchg
jle
and
test
gs
insb
dec
pusha
mov
enter
movsb
cmpl
add
test
rcll
in
adc
shlb
hlt
js
ss
inc
pop
push
andb
shrl
jnp
outsb
sarl
adc
pop
xchg
mov
add
std
push
movsb
out
stos
pop
inc
ljmp
fsubrp
nop
xor
xchg
divb
fs
es
mov
pop
push
xchg
in
pop
nop
push
outsl
push
daa
lret
mov
negl
aaa
or
fs
test
sahf
cwtl
xor
sbbl
ds
shlb
movsl
lea
lods
mov
mov
icebp
je
mov
mov
pushf
mov
xchg
mov
sub
sub
lret
and
inc
mov
cli
daa
and
xlat
jo
adc
pop
xchg
stos
scas
jp
push
cmpb
std
js
inc
jp
dec
jecxz
sbb
jle
mov
and
mov
iret
sub
sahf
sub
das
arpl
js
int
mov
aad
subl
fisttps
lahf
fs
shrb
mov
pushf
or
jge
shr
in
xchg
cmpsl
dec
ljmp
sub
daa
lods
mov
jl
jg
mov
cmpsl
lods
fsubrl
enter
cmp
jae
and
mov
test
and
fldcw
mov
inc
jne
lret
sahf
out
push
das
mov
int
inc
icebp
ficoms
std
sti
les
jmp
and
dec
cmp
mov
adc
out
addr16
aas
cltd
lsl
sahf
cmp
jbe
mov
insl
iret
test
lahf
mov
inc
fisubl
arpl
and
sbb
sub
je
push
imul
pop
int
add
mov
lock
jp
xchg
shrl
push
jg
imul
pop
pop
aas
sbb
pop
xchg
adc
imul
and
or
add
stos
sbb
mov
loope
xor
xchg
jmp
jb
mov
mov
addr16
cwtl
cmc
lcall
daa
mov
xchg
outsb
xorl
adc
sub
shrb
loop
jmp
jecxz
sbb
jle
push
mov
adc
jne
pop
loopne
rcll
into
bnd
mov
call
push
test
insl
in
cmp
outsb
and
sbb
jo
mov
lret
fbstp
je
xlat
dec
repnz
clc
movl
xchg
test
inc
scas
jb
mov
inc
neg
adc
push
sbb
dec
icebp
mov
cmpsb
push
aas
lcall
and
fstpl
push
push
pop
mov
xchg
lret
xchg
xchg
arpl
fldt
insb
repz
imul
mov
outsb
lods
mov
andb
out
cmp
scas
sbb
push
test
xchg
xchg
arpl
mov
gs
add
sub
filds
push
dec
pusha
jecxz
loope
push
fdivrs
les
mov
mov
sub
scas
push
aaa
dec
shll
test
jne
push
arpl
hlt
push
stc
sbb
jns
imul
insb
fwait
je
rorb
in
out
cltd
jle,pt
loop
mov
dec
sbb
sub
pop
data16
pop
ja
ds
jo
cmp
cld
push
mov
in
sub
pop
std
push
stos
xchg
fimull
push
repz
fst
dec
mov
es
popa
jb
cmc
test
pop
fistpl
arpl
xor
mov
in
sar
mov
mov
xor
les
jecxz
fisttpll
mov
mov
lret
roll
sub
jns
dec
dec
mov
push
stos
fs
jl
cmp
adc
push
popa
inc
lea
sbb
pop
shrl
xor
std
test
test
jecxz
inc
cmc
fdivrl
lcall
das
dec
stc
inc
mov
or
push
call
push
ds
cmpsb
inc
pusha
ret
xchg
scas
inc
pop
jp
inc
jns
in
mov
jbe
xchg
inc
pop
push
popf
fstl
mov
fsubrl
fisttpl
jle
fbstp
je
sbb
pop
xor
pop
pop
adc
test
lcall
mov
jecxz
and
pop
cmpsb
lods
xor
jmp
int
lds
lret
mov
cmpsb
and
mov
xchg
adc
adc
je
inc
jb
lret
mov
movsb
dec
xor
pop
arpl
cmp
lock
div
inc
mov
mov
fs
push
pop
lret
bound
and
sbbb
push
xor
push
mov
inc
stos
fnstcw
ja
cmp
adc
xor
psubsb
jmp
loope
into
mov
jbe
pop
cs
jg
jg
push
mov
sbb
test
adc
push
ss
sub
cld
testb
sub
and
loop
xchg
lahf
rolb
hlt
testb
scas
xor
adc
or
push
jo
adc
icebp
lahf
inc
icebp
ss
sub
or
sub
xchg
or
jae
das
decb
mov
out
into
jp
cmp
push
and
rcl
jg
lods
dec
mov
mov
inc
mov
test
mov
cli
cmp
pop
xor
inc
rcrb
mov
sti
mov
sarl
stc
jnp
push
outsl
or
shll
std
cwtl
and
ja
jnp
xchg
inc
out
ror
lret
js
divb
pop
jno
negb
unpckhps
fisttps
xor
sbb
or
insb
xchg
and
and
push
jg
lahf
cltd
mov
xchg
mov
lods
lret
rorl
icebp
test
fisubs
mov
mov
andb
dec
mov
fbld
mov
movsl
ljmp
cmc
push
add
sub
scas
mov
clc
roll
or
and
mov
and
sbb
cmp
mov
mov
jmp
mov
stos
xlat
inc
fisttpll
movsl
jns
adc
lock
adc
shlb
jne
mov
and
push
bswap
cmp
dec
mov
pop
pop
and
pop
clc
cmp
clc
rolb
pushl
and
adc
loop
popa
pushf
test
movsb
dec
pop
mov
mov
inc
lahf
cwtl
cmp
mov
in
insl
adc
stos
in
jl
sbb
cmp
or
adc
cltd
loope
sbb
test
push
pop
sub
add
fcmovu
or
stc
push
push
pop
cwtl
test
jl
jo
pop
mov
lds
xchg
jecxz
stos
mov
rolb
and
leave
or
and
mov
iret
incl
sbb
and
sbbl
sub
adc
mov
inc
add
push
xchg
jge
leave
scas
mov
pushf
mov
les
fcoml
fimuls
pop
addr16
xor
ret
lcall
mov
stos
hlt
cmp
addr16
push
push
push
loopne
loopne
sbb
int3
popf
inc
in
test
and
jno
rcrl
mov
cmpsl
jo
mov
pop
stos
ljmp
dec
fxch
pusha
pop
cmp
jle
inc
outsb
mov
lret
shll
sbb
inc
aad
pop
and
cmp
adc
test
mov
negb
jne
inc
mov
and
mov
add
adc
cltd
inc
push
adc
adc
lods
xor
add
mov
in
test
pop
test
pop
jl
iret
sahf
pop
jmp
pushf
sbb
stos
daa
fmull
loope
sbb
add
repz
jbe
xor
les
xor
inc
in
imul
fwait
mov
daa
or
cmp
mov
jb
movsl
pop
push
xor
adc
popf
aaa
fildll
aas
inc
pop
nop
push
jo
jmp
jecxz
js
xlat
es
aad
xor
jl
sti
out
xor
mov
mov
inc
sub
or
sahf
ja
sbb
imul
inc
inc
mov
cmp
xchg
or
rcl
cwtl
adc
push
jecxz
stc
inc
ret
mov
or
jo
adc
xchg
sbb
scas
or
cld
mov
and
xchg
or
arpl
push
ja
mov
xorl
xor
filds
in
xor
psubw
add
in
jno
stos
aam
push
dec
popf
xchg
pop
xor
fnsave
lret
dec
mov
lds
sti
sub
mov
into
mov
mov
lods
dec
push
push
scas
cmp
ds
jp
inc
push
mov
xor
cmp
xor
hlt
mov
and
adc
enter
mov
mov
mov
lods
sub
in
adc
andnps
ret
cwtl
jp
xor
add
shll
cltd
lock
pusha
push
mov
mov
cwtl
int3
or
jg
outsb
out
mov
ret
or
xor
std
std
pop
xor
insb
sub
rorb
mov
sbb
loope
jl
ret
bnd
fcmove
ja
es
mov
mov
repnz
es
and
dec
dec
mov
gs
or
push
aas
sub
mov
addr16
dec
inc
adc
ret
scas
outsl
dec
daa
or
jo
mov
sbb
cwtl
negl
jnp
popa
jo
popf
ja
sahf
xlat
xorb
in
xchg
lret
out
movsl
or
movsl
and
add
mov
add
xor
rorl
cmp
jmp
scas
out
jl
lock
lea
pop
pusha
dec
call
sub
mov
push
lock
lods
and
loopne
jns
test
fsubr
cmp
imul
aad
scas
iret
and
bound
arpl
mov
dec
mov
xchg
and
inc
divb
xchg
add
out
pop
dec
cli
mov
mov
fdivr
dec
fistl
xor
gs
dec
sbb
clc
pop
or
push
adc
mov
cmpsl
jbe
jns
repz
test
inc
push
jb
ds
out
fcmovu
dec
mov
clc
pop
lds
sbb
aad
adc
in
repnz
dec
jo
fdivrs
jno
fnstcw
icebp
outsl
mov
rolb
cmpsb
push
shrb
mov
int3
cmc
insb
mov
mov
adc
jl
or
xchg
fs
sahf
adc
fnstenv
clc
pop
insb
xchg
in
js
push
jg
push
dec
xor
adc
push
iret
xor
push
int3
dec
rorb
arpl
lds
push
sub
ss
mov
sub
testl
sub
jle
xchg
or
mov
add
imulb
incb
cmp
fwait
mov
push
mov
sahf
dec
call
pop
lcall
adc
ja
xor
test
daa
cmp
lea
cwtl
js
xchg
pop
push
icebp
aam
aaa
mov
out
jge
ja
test
out
pushl
repnz
dec
divb
sub
in
add
lock
mov
xor
andl
or
pop
mov
rclb
rolb
fwait
int3
cmp
sbb
inc
push
xor
insb
mov
loop
inc
xor
in
cmpsl
testb
jmp
cmpb
jmp
ljmp
dec
ffreep
lock
jnp
in
loope
push
sub
divb
out
push
cmp
sbb
or
sub
ret
jo
inc
dec
imul
xchg
imul
push
std
pop
iret
sbb
subl
lods
aad
push
fdivr
sarb
mov
sbb
negl
push
sbb
call
loope
daa
push
outsb
outsl
xor
lods
mov
cmp
jne
mov
rclb
out
or
adcb
adc
scas
jb
cmp
in
pop
fdivp
fnsave
or
and
xlat
jl
out
inc
inc
cltd
add
loope
aad
je
sub
popa
aaa
movsl
cmp
jle
shlb
sub
gs
jp
add
add
lea
sbb
pop
fldcw
das
stos
and
inc
add
mov
aam
out
out
jae
inc
idivb
mov
aaa
mov
inc
flds
inc
fbld
cmpsb
lret
push
mov
dec
jmp
scas
adcb
sarl
test
ficompl
sub
mov
mov
adc
jl
arpl
lods
push
xor
icebp
mov
into
xchg
jp
xlat
mov
inc
push
xor
or
pop
add
pop
cmp
test
es
adc
loope
pop
fwait
orl
repz
sbb
cmpb
rcrl
mov
frstor
in
mov
out
add
pusha
mov
imul
jge
jp
jge
int3
lods
into
xchg
xor
push
cltd
je
cmp
jle
sub
fwait
mov
daa
movsb
pop
jmp
push
mov
std
mov
adc
insb
pusha
nop
push
in
aad
mov
mov
jp
addb
daa
fnstsw
cmp
mov
push
enter
pusha
and
mov
dec
mov
fcmovnu
sbb
sbb
popf
dec
pop
mov
out
lret
push
ret
cmp
sbb
in
sbb
cwtl
add
test
mov
xor
and
aam
pop
fs
and
and
sbb
xchg
lods
or
adc
stc
fdivrs
xchg
add
push
frstor
inc
sahf
adc
push
pop
xor
mov
mov
dec
pop
xchg
dec
add
push
mov
xchg
cmp
shl
jbe
mov
stos
mov
test
add
gs
lahf
mov
jecxz
xor
arpl
dec
xor
or
inc
mov
popa
subb
cmp
imul
test
pop
es
dec
lods
mov
enter
divb
push
fcompl
stos
adc
stos
insb
xchg
imulb
pop
stos
xchg
shll
inc
mov
dec
negb
sbb
xor
adc
dec
inc
fistpl
inc
add
inc
xor
cmp
mov
sub
ror
repz
add
repz
adc
push
xor
in
sahf
and
and
cmpl
movsb
icebp
xor
jg
dec
popf
imul
sbb
adc
notl
in
dec
sub
in
aas
mov
xlat
in
mov
es
lds
setae
aad
pusha
mov
add
rolb
push
pop
lahf
ss
out
movb
les
or
adc
or
push
mov
inc
popf
xchg
lock
or
ja
mov
roll
movsb
mov
movsl
nop
push
jecxz
fwait
cmp
stc
mov
or
or
scas
mov
fwait
mov
data16
scas
repnz
mov
imul
ss
pop
jo
sub
es
add
inc
mov
or
andb
push
repz
dec
pop
sub
sbb
ret
jle
sub
iret
or
aam
push
push
lret
mov
inc
inc
jecxz
mov
mov
cmp
pop
sbb
inc
lods
cmpsl
push
jns
mov
mov
lods
fbld
cmp
loopne
bound
inc
fisubrl
bound
dec
mov
or
mov
add
and
insb
sbb
mov
sbb
sub
pop
je
std
and
pop
and
mov
into
pop
push
jl
in
xor
je
out
pusha
cli
int3
sbb
or
push
push
adc
sub
cmp
xor
scas
dec
ja
insb
lret
push
jb
scas
test
stos
fsubl
jp
mov
popf
sbb
daa
scas
inc
xchg
mov
std
or
xor
xchg
addb
test
mov
xorl
mov
add
ja
fwait
or
fidivl
xor
push
je
idiv
push
adc
in
xor
fidivs
inc
shll
shrb
and
xorl
dec
and
fwait
mov
mov
mov
fiaddl
cmp
or
mov
adc
rcll
hlt
sbb
out
dec
stos
stos
ds
insl
aam
scas
imulb
out
cwtl
mov
ss
jecxz
dec
sahf
loop
mov
xchg
cmp
and
jns
and
pop
cmc
out
fsub
popa
ja
cltd
or
add
mov
push
mov
addb
xchg
je
mov
dec
leave
dec
push
out
out
loop
jmp
fsubrs
sbbb
mov
sub
mov
outsl
sbb
leave
insl
or
fwait
mov
popa
fisttpll
dec
sahf
jns
mov
sar
cmp
jl
scas
pop
daa
pop
mov
sbb
mov
cmp
addl
in
js
mov
and
in
fisttps
pop
jp
jp
daa
cmpsl
sub
mov
push
aam
repz
jl
sub
lods
ret
cli
dec
in
faddl
testb
xor
mov
ja
cs
popf
push
insb
popf
mov
add
mov
mov
outsb
jp
das
shrl
xor
jecxz
dec
fstps
or
jg
inc
lea
icebp
daa
mov
pop
sarb
xchg
ja
out
mov
pop
pop
jmp
push
es
jno
das
cmp
fwait
mov
int3
stc
out
xchg
aas
jmp
mov
outsl
fistpll
loopne
cmp
test
dec
outsl
mov
or
out
fistl
sbb
xor
push
and
sbb
dec
lock
cmp
int
test
addr16
jo
push
and
mov
adc
xchg
mov
push
movsl
enter
cmc
push
sub
shlb
xchg
sti
out
mov
lahf
push
pushl
addb
dec
in
xchg
fcomps
addl
lret
dec
insl
dec
movsb
and
insb
ljmp
sbb
mov
pop
inc
out
or
enter
or
aas
scas
js
sub
fmuls
jmp
sub
icebp
or
rcr
push
sbb
int
mov
mov
xchg
aam
xchg
inc
imul
insb
inc
scas
int3
jmp
xor
lret
arpl
dec
sbb
and
in
cld
xorl
mov
imulb
movsb
out
cmc
add
add
pop
sub
bsf
and
or
cs
pop
or
jg
cltd
repnz
test
inc
adc
dec
xor
into
xchg
fstl
adc
lea
cli
das
jo
call
stos
loope
gs
mov
or
pop
sbb
rolb
loope
sub
bound
das
sbb
loopne
cmp
mov
xchg
ljmp
xor
in
jmp
mov
mov
dec
push
mov
aam
repz
and
insb
fsubrp
fistl
xchg
rol
pushf
jle
popa
scas
rcrl
jp
test
mov
mov
push
pop
xchg
leave
sbb
je
lret
std
aas
cmpxchg
xor
test
daa
pop
repnz
movsb
into
clc
and
push
clc
xchg
leave
dec
mov
ljmp
jmp
sub
jnp
int
mov
jae
xchg
pop
imul
enter
insl
and
sbb
mov
cwtl
adc
lea
dec
cwtl
imul
into
sbb
push
adc
inc
ja
add
std
mov
adc
adc
adc
inc
sbb
mov
xchg
push
mov
leave
mov
test
inc
loope
jno
xor
mov
or
outsb
pop
mov
xchg
aaa
jno
out
in
dec
stos
jmp
sbb
xchg
cmp
imul
das
in
loopne
gs
mov
stc
xlat
cmpsl
idivb
dec
pop
sub
pop
ljmp
push
into
xor
sti
sub
mov
or
sbb
pop
int3
repz
out
mov
or
repnz
jecxz
mov
dec
mov
imul
xchg
push
mov
ja
add
mov
lods
mov
xlat
ja
inc
cmpsl
pop
fsubrp
mov
xchg
dec
jle
or
xchg
dec
fdivrs
and
daa
push
vcvttpd2dqx
push
push
es
and
shrb
xchg
cmpsl
cmpsl
mov
dec
out
bound
stos
ja
mov
dec
mov
push
aaa
adcb
dec
push
sbb
mov
les
mov
mov
xor
mov
push
inc
mov
push
pop
lret
insl
mov
scas
loop
cmp
imul
dec
gs
add
movsl
push
je
test
sbb
add
jae
sub
inc
mov
pusha
aas
loopne
stos
and
lock
dec
cmpl
shll
cmp
mov
data16
dec
add
imul
dec
sub
in
mov
xchg
nop
adc
mov
fiadds
mov
orb
in
lcall
popf
mov
fs
pop
jne
pop
mov
mov
adc
pop
inc
in
pusha
add
adc
or
jp
bnd
or
arpl
mov
inc
ds
jle
test
inc
outsb
jnp
cmpl
push
lods
mov
ss
repz
cwtl
cmp
dec
xchg
lcall
dec
push
cmc
es
leave
mov
call
mov
or
sub
dec
jecxz
test
ret
cmpsl
aam
pop
pusha
sbb
dec
xchg
jne
cmp
adc
pusha
push
lds
bnd
mov
subb
or
pop
mov
push
outsb
sbb
push
mov
mov
jnp
shll
push
dec
xor
ret
add
mov
aad
xchg
mov
in
aaa
jae
cmp
cmc
mov
je
jp
inc
mov
fsubs
jnp
dec
dec
dec
sbb
xchg
or
xchg
xor
mov
stc
mov
pop
ja
scas
cmpsb
rcr
push
adc
push
add
rolb
shrb
out
jecxz
jl
xlat
lahf
outsb
sbb
inc
in
adc
and
mov
das
jbe
pop
mov
lods
dec
jbe
pop
and
incb
add
ja
mov
xchg
jno
add
mov
dec
arpl
adc
cli
movsl
sbb
dec
stos
outsl
mov
cli
fsub
xchg
or
stos
pop
jns
fstl
in
pop
movsl
push
fildll
lods
jb
into
aaa
fidivl
pushf
js
pop
add
enter
aas
inc
jnp
xor
in
pusha
ror
nop
imul
lods
xchg
inc
lods
leave
and
xor
adc
push
cmc
fimull
jno
and
out
outsb
repnz
push
data16
clc
pop
pop
xlat
or
xchg
divl
popf
mov
dec
xor
or
mov
mov
popa
pop
inc
fists
inc
adc
add
fdivr
and
sub
out
js
pop
test
insl
imul
dec
mov
push
push
roll
xor
pop
and
dec
inc
cld
xchg
mov
outsl
stos
mov
push
and
inc
leave
dec
sbb
mov
mov
dec
sbb
push
xchg
cmc
push
leave
cmc
mov
dec
mov
hlt
mov
std
adc
call
sub
in
or
add
sub
push
iret
lahf
mov
jae
insb
iret
mov
sub
in
ffree
mov
icebp
addr16
jecxz
dec
mov
and
dec
sar
inc
xchg
jp
dec
xchg
jmp
aad
sub
iret
rorb
fists
loop
ret
loope
xor
lods
cli
xor
sub
mov
out
pop
inc
mov
ja
inc
lcall
and
push
add
jne
int
cmovae
lock
push
xchg
cmp
fistl
shlb
in
movsb
das
arpl
jns
pusha
test
or
jp
cli
mov
sub
pusha
push
xor
inc
jg
out
pop
fcompl
sub
or
dec
enter
ljmp
pop
unpcklps
les
or
dec
inc
shr
xchg
lcall
xchg
add
mov
fldl
sub
mov
sub
arpl
mov
pop
sbb
push
jge
mulb
sbb
lret
pushf
cmpb
inc
arpl
rol
cmp
enter
jge
fidivl
push
test
scas
push
xchg
fcoml
sub
xor
movsl
inc
movsb
inc
mov
push
xor
mov
les
adcl
jle
cmp
fcomps
jl
sbb
jae
jmp
rorb
xchg
test
lret
dec
aas
inc
adc
jle
in
adc
inc
enter
sub
in
shlb
adc
dec
ss
xor
push
pop
incl
adc
push
jo
sbb
imul
lar
int3
mov
icebp
or
pop
into
add
call
lret
and
out
inc
adc
jp
xchg
xlat
leave
test
inc
sub
mov
mov
cs
je
enter
xchg
push
mov
adc
jns
dec
jl
stos
dec
fidivrs
bnd
dec
insb
test
push
or
decl
aam
shl
and
fildl
mov
clc
cmp
sub
rolb
add
and
dec
mov
in
rolb
and
pop
sbb
mov
add
and
add
iret
inc
xchg
shl
daa
addl
jns
xor
xor
in
mov
and
nop
push
jg
jg
es
mov
mov
add
jl
push
stos
cmpsb
add
add
xchg
fstpl
in
add
inc
sbb
xlat
pop
test
jbe
stos
jnp
cmp
insl
inc
outsl
push
dec
insl
sub
dec
dec
fcoml
sub
xor
cmp
jbe
xchg
mov
shll
test
cmc
push
add
aas
cltd
arpl
icebp
mov
in
jo
jnp
add
repz
call
push
push
and
sub
mov
or
add
cltd
or
fsubp
jns
xchg
ror
pop
pop
fisttpl
push
fidivrs
cli
jno
les
les
notl
cli
xchg
and
cli
and
inc
jbe
mov
jno
sub
lds
and
jl
fwait
and
cli
xchg
ret
popa
lods
mov
dec
dec
fldcw
movsb
sub
lea
ja
rcrb
mov
lahf
jo
andb
jg
addr16
mov
jns
pushf
insb
fs
mov
add
adc
loopne
xchg
push
xchg
ret
nop
movsl
add
jg
gs
and
sbb
push
inc
test
cli
rcrb
in
insb
cmpsl
pop
cmp
push
aaa
ret
shl
push
sahf
movsl
or
ja
faddl
loopne
jmp
sbb
test
mov
ljmp
inc
clc
or
xor
int
pop
mov
cmc
cmpsb
mov
test
pushf
les
add
add
push
jns
lods
outsb
into
push
les
push
cwtl
push
loop
es
inc
sbb
xor
in
push
push
or
mov
pop
jecxz
jmp
cs
jle
js
loope
pop
out
push
mov
or
sbb
add
xor
mov
lods
decb
xchg
mov
repnz
fbld
adc
out
dec
ja
sbb
data16
mov
mov
cmp
and
inc
push
sub
xchg
push
test
jl
pop
jne
sbb
dec
insb
in
push
add
loope
scas
mov
test
popa
test
fucomi
dec
aam
sub
stc
daa
fldenv
cs
push
les
div
xlat
mov
fisttpl
add
ret
xchg
lds
add
push
cld
adc
sub
push
lods
movsb
lahf
and
mov
cmpsb
pop
push
fdivr
scas
popa
call
paddusb
cltd
mov
cmp
mov
xor
xchg
inc
pushf
sti
js
pusha
mov
inc
decb
or
imull
fsubs
and
jb
add
mov
icebp
daa
and
cmp
call
sti
xchg
inc
and
cmpsb
loopne
scas
dec
pop
dec
cmpsb
sub
out
mov
push
lods
cmpsb
and
lods
xchg
jne
sbb
jb
lahf
fbld
mov
dec
out
lock
ret
loope
jnp
insb
daa
inc
bound
inc
push
ja
xor
inc
mov
xor
inc
add
pusha
inc
mov
fdivrp
pop
es
scas
mov
add
add
adc
push
jne
or
sbb
lds
adc
sbb
fidivl
pop
xchg
fst
jno
push
sbb
pop
into
cmp
mov
repnz
je
add
pop
or
mov
inc
fisttpl
and
testb
fsubl
dec
je
sbb
imul
pop
enter
cmpsb
push
cmp
adc
cmpsl
mov
cld
out
pop
cmp
mulb
fsubp
fdivrl
cmp
add
mov
adc
sti
jne
sbb
push
jp
and
hlt
sub
testb
mov
inc
call
fstpl
mov
lea
add
roll
aaa
daa
mov
lahf
das
shrb
and
push
fists
fcoms
in
or
aas
dec
mov
ja
movsl
subb
imul
mov
cmc
outsl
jl
ja
mov
mov
scas
fs
ret
mov
fistpll
int
insb
xor
jns
sbbb
mov
loopne
ljmp
into
sub
xor
push
pop
cmp
out
pop
cmp
popa
lea
pop
fcoml
adc
and
dec
mov
jp
iret
pop
pop
jp
rcll
loope
sub
inc
and
scas
mov
push
mov
mov
mov
jp
adc
xchg
xchg
push
xchg
mov
mov
dec
scas
mov
cmp
pop
lea
test
push
insb
mov
mov
xor
pushf
pop
jno
repz
addr16
outsb
in
in
xchg
aad
or
call
or
xchg
mov
push
in
mov
lds
pop
pop
push
jle
dec
push
out
mov
dec
dec
arpl
ret
mov
les
adc
out
pop
mov
clc
lods
xor
add
rcrb
mov
dec
ja
lock
xchg
addr16
xor
sub
pop
out
xchg
sti
inc
xchg
or
cld
ficoml
or
in
cld
iret
mov
mov
mov
cmp
mov
sbb
fistpl
mov
adcl
mov
mov
mov
jno
aas
xchg
push
jge
push
xor
shrl
stos
or
cli
sbb
jae
mov
dec
cmpsb
ret
out
or
pop
mov
sahf
lret
mov
xchg
or
cli
adc
in
xchg
sahf
and
in
sub
dec
pop
das
mov
mulb
adc
flds
std
mov
jbe
inc
sub
sub
loop
cmp
add
dec
pop
jmp
popa
rcll
mov
pop
xor
mov
popf
dec
push
popa
std
mov
lods
sbb
add
std
das
jge
bound
cld
loop
dec
xchg
mov
sbb
push
pusha
jecxz
loopne
xchg
jnp
lret
mov
inc
je
in
js
add
sub
hlt
sub
dec
mov
fsub
mov
sti
xor
pop
add
dec
mov
mov
lods
repnz
aad
aad
dec
add
xor
lret
andl
mov
ret
mov
lock
mov
cld
and
adc
data16
lret
call
aaa
adc
in
sti
outsl
or
adc
fwait
lock
inc
mov
inc
sub
mov
and
inc
cmp
out
xchg
inc
enter
adc
inc
pop
inc
mov
or
jmp
jle
js
dec
xor
ret
sub
gs
movswl
mov
lcall
cmp
sub
in
sub
testl
xchg
mov
cmc
insl
faddl
push
hlt
add
cmp
and
and
js
fsubl
aaa
cmp
cmp
jbe
into
ret
hlt
inc
sti
imul
pop
mov
cmp
cmp
sbb
pop
and
or
gs
sbb
dec
dec
lcall
or
lods
aam
mov
jl
lret
fsubs
in
mov
std
int
ja
adc
insl
xor
leave
shlw
pushf
and
or
fadd
ret
cmp
pop
icebp
cli
inc
mov
cmp
ret
aas
popf
or
xchg
fs
push
xchg
hlt
daa
hlt
inc
push
xchg
dec
push
add
add
loopne
cmpsb
fisubrs
xchg
add
int3
mov
js
fsubrp
out
loope
and
inc
lds
xor
xor
sti
ja
push
pop
cld
adc
push
adc
or
test
cmovge
jmp
test
lock
jne
int3
xchg
mov
jb
xchg
mov
xchg
add
int3
xchg
ret
push
and
jp
mov
popa
dec
adc
jl
add
push
cmpl
cli
roll
pop
and
iret
xchg
fildll
sahf
js
inc
mull
sti
cmc
add
cld
test
imul
fs
mull
loope
ror
clc
ljmp
ret
sbb
mov
mov
int3
rcrl
add
jns
mov
out
and
cmp
addr16
shl
inc
mov
cs
mov
xchg
roll
test
jns
in
jae
les
and
xchg
daa
in
sarb
mov
cmpsl
stos
push
add
mov
mov
loop
mov
fwait
xchg
jecxz
xchg
jns
jbe
arpl
loopne
cmpl
sub
popa
xchg
sub
pop
push
add
mov
sub
ss
or
jae
mov
pop
test
jecxz
and
adc
scas
add
cmp
xchg
insl
jle
stos
mov
mov
leave
js
cwtl
scas
ljmp
lock
out
gs
jge
and
sub
xchg
outsb
lcall
jns
cli
fwait
loopne
xor
xorl
lods
adc
jmp
or
cmp
inc
jecxz
addb
or
mov
cmpsb
shlb
stos
adc
cmpsb
push
jbe
pop
fstpl
mov
mulb
push
insb
pop
je
cmp
outsb
hlt
inc
leave
or
sti
rcll
lods
lret
add
in
pop
fidivs
scas
mov
int
mov
mov
in
mov
mov
aam
sub
pop
mov
gs
jae
adc
mov
jl
add
xchg
xchg
mov
fs
call
jb
test
jbe
in
push
jb
cmc
lret
mov
lcall
data16
je
or
cltd
cltd
pop
inc
in
xchg
sub
int
adc
add
xchg
mov
jae
add
sbb
repz
lds
andb
iret
xor
mov
loopne
in
sub
cmpsb
sub
mov
hlt
das
sbb
imul
dec
cmp
iret
jne
mov
cmp
dec
xor
or
inc
sbb
out
popf
xor
sti
subl
call
pop
sub
pop
adc
mov
push
dec
cmp
bswap
fists
pop
rcll
cmpb
mov
adc
mov
imul
dec
nop
mov
ja
shll
mov
popl
mov
inc
xor
inc
out
xor
rcl
jmp
les
fwait
aas
push
xchg
out
adc
mov
pop
pushf
scas
sbb
inc
popa
inc
je
mov
xchg
rorb
fnstenv
test
cmp
cld
and
leave
test
lock
roll
jecxz
xor
cmp
in
adc
mov
cmpsb
push
es
adc
mov
in
in
jp
divb
jae
xor
aas
push
imul
repz
js
dec
mov
lcall
or
mov
ret
bound
aaa
jge
ret
sbb
rorb
aam
movsl
jmp
lock
pusha
pop
shl
fisttpll
cmp
popa
add
rolb
xchg
sub
mov
mov
das
inc
mov
and
sub
notb
hlt
push
xchg
mov
sahf
loope
dec
xor
mov
xchg
aaa
ja
add
sub
xchg
out
mov
adc
and
mov
mov
inc
into
add
push
lds
xchg
add
jge
sti
jbe
sub
sbb
jle
dec
repz
cltd
jp
andl
push
add
shlb
repz
add
jno
cmp
sub
cwtl
and
push
pop
cwtl
push
clc
jge
mov
and
add
xchg
inc
cmpsl
add
fcomip
fnop
pushf
and
scas
sbbl
out
sub
test
loope
dec
orl
mov
sub
inc
push
cmp
dec
nop
mov
jae
dec
xchg
fists
cmp
sbb
daa
repnz
rclb
mov
into
sti
hlt
popf
jle
stc
sbb
mov
jge
push
dec
fdivl
sbb
icebp
lea
lea
fwait
test
sbb
paddsb
dec
mov
cltd
xor
adc
shll
cld
test
repnz
mov
mov
imul
mov
pusha
insb
nop
int3
lret
or
loopne
out
add
jmp
scas
test
je
hlt
adcb
cld
push
and
pop
in
sub
inc
push
aam
stos
mov
push
mov
sbb
push
call
and
sbb
cld
jnp
mov
fstl
bound
js
adc
jmp
out
cs
cli
mov
daa
cwtl
mov
fcoms
mov
jecxz
xor
lods
xchg
movsb
aad
in
cli
xorb
or
inc
mov
or
fdivs
cmp
ljmp
cwtl
push
xchg
dec
dec
add
cmp
jp
lods
mov
movsb
incb
push
add
daa
xchg
dec
cltd
cmp
test
in
xor
push
xchg
lock
insl
dec
push
mov
out
and
mov
lods
int3
inc
cmpsl
jle
in
pcmpeqd
pop
loope
mov
push
lods
push
lock
test
jp
in
stos
adc
ljmp
or
push
mov
xchg
stos
mov
dec
xor
jl
mov
jecxz
mov
jne
stos
push
pop
lret
ret
sub
daa
xchg
imul
mov
and
cmp
mov
cltd
orl
pop
loope
xchg
inc
into
mov
pop
rorl
push
pop
rcrb
jle
mov
movntq
ja
cmp
mov
adc
xor
inc
xor
movsl
movsb
push
inc
ficoml
js
inc
add
push
ja
out
pop
lods
pop
in
out
adc
sbb
pop
jge
mov
fisubrl
lea
cmp
int3
aad
fmull
flds
jae
adc
dec
pop
inc
stos
pop
push
stos
pop
loope
cs
cs
ret
pop
inc
xchg
mov
push
call
int
dec
fwait
das
jge
mov
add
mov
xor
test
mov
pop
aaa
lods
jle
push
shrb
arpl
push
mov
sub
cs
insb
or
mov
or
shlb
lds
out
rcrb
push
sbb
dec
pop
fnstenv
xchg
aas
lret
pop
adc
sbb
add
adc
je
cwtl
push
inc
and
adcl
push
pop
sbb
push
push
sbb
loope
fucomi
into
loop
aaa
mov
shld
enter
sub
ja
mov
rcll
pop
lret
jecxz
push
mov
popf
and
pop
out
mov
movsb
xor
iret
mov
pusha
mov
or
xchg
scas
cmpsl
into
loope
rol
pop
rclb
or
leave
mov
adc
jae
arpl
into
jb
xchg
jp
mov
aam
ret
das
dec
add
add
stos
mov
mov
sbb
jecxz
adc
add
bound
add
push
mov
aas
setb
push
jnp
and
popl
repnz
repnz
icebp
add
fisttpl
adc
mov
int3
xchg
add
inc
mov
int3
xor
xor
cmp
dec
pop
xor
dec
subb
jbe
xchg
add
in
lds
xor
lret
xchg
dec
sub
push
pop
adc
faddl
sub
dec
xor
loop
xchg
push
xor
cltd
in
out
fimull
push
hlt
jno
inc
fdiv
push
stos
and
sahf
or
mov
test
mov
and
pop
cmpsb
hlt
fnstsw
aaa
jg
fstpt
pop
jle
add
outsb
test
mov
sub
xlat
push
pop
push
sub
adc
add
js
or
or
test
pop
add
enter
mov
jp
clc
inc
aad
std
push
mov
repnz
loopne
sub
mov
mov
shlb
xor
dec
mov
nop
xor
movsb
cmc
inc
pop
pusha
leave
insb
sti
ljmp
jecxz
pop
xchg
cli
mov
into
lock
je
ss
xchg
xor
out
mov
call
shr
push
xchg
in
ja
fnstcw
add
out
cmc
fists
or
add
sti
scas
shlb
dec
pop
xor
cmpsl
aam
xor
pusha
mov
imul
and
cwtl
xchg
cmpsb
lret
mov
xchg
adc
cmp
nop
mov
insb
insb
imul
cmpsb
push
dec
in
aam
inc
mov
in
dec
enter
loopne
mov
sub
or
pop
lds
xchg
outsb
sar
xchg
pusha
mov
ret
pop
bound
and
popf
xchg
pop
loope
adc
jne
bnd
lods
fs
adc
out
xlat
mov
add
push
adc
push
cmc
shl
adc
imul
or
out
movsl
adc
std
testb
mov
pusha
mov
incb
adc
js
inc
xchg
je
dec
mov
rclb
inc
push
inc
mov
test
sbb
test
outsl
push
xchg
or
cmp
push
bound
test
adc
bound
xor
movsb
sub
add
addr16
pop
mov
cmp
leave
sbb
roll
lcall
in
mov
pop
enter
adc
test
data16
leave
xchg
cltd
mov
xlat
pop
mov
cmp
imul
aam
adc
in
out
in
inc
cmpsb
js
and
test
pop
ss
add
outsl
and
adc
push
pop
sub
or
push
cld
mov
negl
xor
adc
js
repz
inc
loop
shrl
xorl
dec
jnp
hlt
ss
shll
test
and
lea
pop
xchg
cmpsl
jo
mov
adc
ljmp
pop
xchg
popa
je
sub
mov
dec
insl
sub
popa
or
mov
jne
mov
call
push
leave
shlb
repnz
aad
gs
cmp
sub
cmpsb
add
mov
push
push
push
dec
mov
jae
lcall
pop
cmp
aam
pushf
pop
test
mov
add
icebp
test
mov
popf
xchg
push
xor
movsb
and
sub
sub
mov
mov
into
in
mov
lods
mov
fidivrs
jp
bound
dec
pop
test
cltd
pop
push
lods
adc
dec
scas
xchg
ljmp
insl
xchg
cmp
mov
mov
and
sbb
sub
and
lcall
pop
mov
inc
enter
push
lret
inc
xchg
mov
aas
into
and
sbb
inc
addl
mov
jp
adc
lock
negb
out
adc
pop
popf
sub
xchg
or
and
dec
test
imul
mov
pop
pop
fistl
enter
daa
shrb
scas
mov
fdivs
enter
adc
pop
push
add
jne
ss
cwtl
mov
scas
enter
sbb
stos
gs
inc
xor
mov
cmp
int
sub
inc
cmpsb
enter
inc
mov
or
sub
xor
sti
sub
cmpsl
dec
sbb
testb
adc
jbe
outsb
hlt
dec
iret
push
cmc
sbbb
mov
sbb
jb
mov
push
adc
push
mov
sub
or
iret
dec
push
out
stos
addl
das
loope
push
mov
ja
xchg
out
sub
xchg
inc
in
nop
loope
das
mov
push
inc
sub
cltd
inc
mov
repnz
pop
insb
pushf
dec
or
xor
adc
or
test
pop
es
jl
mov
pop
mov
xchg
jg
testl
cmp
sbb
out
jno
addl
sub
inc
xadd
cmp
stos
mov
test
es
jle
in
aad
push
jo
jo
push
data16
mov
adcl
lret
inc
imul
imul
xchg
insl
push
add
inc
sahf
pushf
clc
add
or
sub
push
subl
xchg
fildll
popf
adc
push
adc
scas
lods
daa
push
inc
add
out
pusha
arpl
or
cli
das
mov
push
pop
ljmp
das
jbe
jb
outsb
imul
and
pop
or
in
mov
or
mov
shrb
adc
or
stc
inc
ds
lods
xlat
movsl
add
xchg
repnz
jle
stc
lods
inc
imulb
xchg
iret
cmp
pop
test
xor
testb
and
gs
rol
nop
pop
push
inc
das
pop
imul
aaa
ja
in
sti
bound
int
mov
sub
daa
adc
cmp
mov
jp
cwtl
repnz
and
jg
cmp
xchg
jnp
cmp
aad
dec
mov
popa
or
scas
sub
std
and
loopne
add
std
cs
addr16
fldenv
lods
fdiv
push
and
xor
lods
insl
adc
xor
dec
stos
fisttpl
add
push
or
inc
sti
ret
leave
jp
les
mov
and
pop
vmwrite
movsl
adc
mulb
pop
xchg
push
data16
loopne
mov
push
movsl
inc
xor
inc
stc
adc
stos
stos
sub
sbb
lods
dec
inc
flds
push
push
imull
inc
mov
cwtl
push
in
dec
xchg
add
lahf
addl
xchg
notb
fucomp
sub
pop
jmp
into
cmp
jo
cli
xor
push
out
call
and
pop
jmp
imul
sbb
sbb
mov
rcr
loop
push
jae
mov
xor
cmp
ret
sub
scas
jnp
bound
sbb
mov
inc
xchg
sub
pop
gs
dec
mov
test
outsb
in
mov
pop
imulb
add
sbb
mov
inc
pushf
xor
inc
js
ret
adc
movsl
shll
add
cmp
mov
pusha
and
xchg
ljmp
dec
daa
cwtl
in
out
iret
add
push
sti
mov
pop
ljmp
outsl
mov
scas
jne
mov
jmp
rorl
arpl
mov
movsl
or
push
jp
jle
pop
mov
mov
push
push
mov
iret
lcall
jo
std
daa
test
scas
roll
dec
sbb
lea
adc
mov
movsb
inc
ret
insb
add
test
sub
push
mov
cmpsl
es
insl
popf
cmp
mov
and
sarl
dec
jmp
test
mov
and
jb
cwtl
inc
pop
pop
stc
mov
push
xchg
sbb
cmpsb
dec
pushf
and
add
jno
push
mov
loopne
and
test
mov
out
std
lods
fwait
push
stos
pop
fstpl
out
imul
ret
aad
or
jp
orb
mov
jb
scas
pop
jo
scas
and
push
inc
adc
int3
xor
fwait
pop
filds
jmp
ret
pop
mov
mov
jae
mov
cmp
dec
aam
test
pusha
sub
out
fiadds
decb
dec
jo
inc
hlt
test
or
mov
popa
into
sahf
scas
out
pop
dec
sub
mov
fldl
mov
xchg
out
imul
adc
gs
and
hlt
in
add
lret
push
sub
pop
jp
push
mov
lds
cmp
ret
sti
dec
cli
mov
add
ret
cwtl
and
rcr
jp
dec
popf
sub
pop
lcall
scas
jnp
push
pop
jne
push
jle
jge
mov
xchg
push
daa
jg
mov
out
lahf
fwait
insl
cmp
scas
js
mov
xchg
jo
int
jno
push
subb
sub
lock
les
sub
lcall
std
leave
imul
cli
lahf
loope
pop
rcll
mov
pop
lods
adc
fisttpll
xor
iret
jmp
add
lcall
movsl
in
cmc
xchg
pusha
inc
pop
pop
shl
push
lea
jmp
fistl
mov
mov
xchg
xorb
shrl
popf
nop
dec
jnp
loope
stc
or
lahf
nop
mov
jp
fnstcw
ds
aaa
inc
or
mov
jns
js
lret
stc
insb
cmp
xlat
push
push
xchg
fadd
shl
inc
mov
inc
leave
pop
loop
xor
cmp
popf
je
jge
add
mov
xchg
xchg
sub
fldcw
and
pop
dec
xlat
cltd
xchg
fwait
mov
gs
sub
mov
sbb
push
rcrb
loope
stos
push
or
jge
dec
inc
je
ficompl
pop
lret
stos
in
movhps
sbb
sub
dec
clc
repz
jb
rcpps
pop
mov
inc
xor
es
mov
cld
add
inc
dec
insl
add
and
loopne
sbb
sbb
push
adc
lock
xchg
rcr
jbe
mov
lods
add
lds
test
mov
imul
int
repnz
mov
or
sarl
dec
cmp
pop
mov
jb
ss
pop
dec
jl
and
out
iret
adc
sub
jo
adc
dec
into
pop
fwait
outsb
addr16
sub
and
xchg
mov
mov
icebp
xor
test
aam
mov
or
push
inc
mov
gs
cmp
shll
and
fimull
cmpsb
pop
adc
dec
cmp
or
ret
test
leave
inc
adc
shll
xchg
shr
ds
mov
mov
scas
cmpb
sbb
jmp
mov
stos
ljmp
dec
push
andb
dec
cmpsb
cwtl
inc
dec
test
js
popf
ljmp
aas
inc
loope
sbb
and
add
out
scas
and
xchg
pop
pcmpeqb
cmpsl
adc
pop
fs
test
repnz
fs
pop
push
ljmp
adc
mov
pop
push
push
inc
pop
add
xor
xchg
mov
add
ss
xor
xlat
jns
push
mov
loop
call
dec
dec
shll
js
adc
pop
dec
sub
cli
sbb
xchg
out
xor
push
cmpsb
fisubrs
ss
mov
pop
mov
inc
fisubrl
or
repz
popa
sub
mov
cmpsb
pop
inc
mov
mov
in
shll
push
mov
lock
je
pop
les
stos
mov
mov
ss
inc
cmpsb
nop
dec
and
jecxz
roll
xor
pop
loop
mov
inc
push
test
stos
lcall
rorb
iret
or
dec
add
test
sub
loopne
hlt
pop
cmpb
mov
insl
mov
xchg
adc
mov
jno
jl
mov
cmp
repz
pop
sub
inc
dec
fwait
sarb
sbb
lret
fistpl
push
enter
fisubl
add
out
push
and
xchg
fistpl
pushf
and
adc
mov
mov
loope
je
lds
mov
incl
cmp
lret
imul
mov
xor
in
shrl
in
mov
sahf
call
iret
adc
mov
cmp
and
inc
insb
mov
gs
outsl
or
dec
lds
dec
push
push
test
inc
test
cltd
dec
inc
lods
call
fisttpl
mov
inc
insb
jno
and
inc
data16
push
or
stos
jecxz
mov
jne
add
inc
cmpsb
pop
jle
push
fisttpl
clc
decb
or
push
loopne
subb
jbe
jge
adc
aam
in
xor
sub
xor
jns
ret
fwait
cmp
aaa
or
xor
push
jno
pop
popa
mov
or
adc
mov
push
insl
stos
je
mov
xchg
test
insl
push
jb
dec
mov
adc
fbld
ret
ret
and
push
mov
cmp
in
or
add
ficompl
aas
cmpsl
push
jae
aad
cmpsb
addb
mov
lret
or
mov
push
mov
les
add
xchg
fwait
cld
jp
push
xor
xchg
inc
adc
inc
out
out
xchg
push
imul
xchg
jne
push
xchg
sbb
vpandn
add
fdivs
fnstcw
shll
pop
inc
int3
mov
xchg
test
addl
mov
addr16
bound
sti
push
push
push
popa
fcompl
and
sub
divb
loope
ret
lcall
popa
xchg
sub
enter
inc
leave
sub
mov
jl
adc
dec
xor
int3
decb
les
xchg
adc
fsubl
pop
int
cs
jge
and
inc
mov
movsb
popf
mov
push
push
inc
jne
ds
and
rol
fsubrl
mov
out
cld
loopne
push
lahf
push
mull
mov
sub
jns
adcb
jl
pop
stos
pop
outsb
pop
hlt
dec
sub
sbb
add
popf
mov
fcomip
inc
gs
in
hlt
sub
gs
je
add
popa
loop
pop
jmp
aad
scas
gs
mov
or
ficomps
loope
aam
movsb
es
jo
std
inc
fldcw
shlb
mov
fcmovne
xchg
adc
add
inc
sub
daa
sbb
stc
dec
xlat
aad
pop
daa
in
in
pusha
mov
jne
cmp
cmpl
mov
cmp
js
out
push
push
sbb
sub
jne
jmp
pop
dec
sbb
jge
pop
mov
arpl
sbb
xchg
mov
enter
xchg
mov
lretw
popf
jnp
cmp
xor
insb
inc
gs
sub
xor
jle
mov
aam
mov
pop
add
das
loop
lds
daa
inc
call
frstor
fiadds
fildl
in
lods
fcoml
push
sub
dec
add
pop
cs
sub
mov
mov
dec
mov
add
adc
pusha
sahf
sbb
mov
sub
xchg
xor
iret
aam
clc
mov
push
stos
pop
in
cmp
pop
adc
pop
and
push
add
aam
jne
popa
inc
mov
dec
mov
add
or
ret
lds
inc
jno
in
adc
mov
popf
shlb
pop
pop
mov
push
lcall
jecxz
lret
bound
push
icebp
cmpsl
xor
xchg
jp
adc
jl
or
jo
fnstenv
aam
xchg
rcl
addr16
pusha
stc
data16
adc
jbe
push
jns
rolb
fcoms
inc
mov
push
fbld
rcll
xor
daa
inc
pushf
or
mov
outsl
lahf
jnp
and
sti
jle
flds
xchg
test
sti
push
aam
add
ret
jmp
cmp
repz
adc
inc
dec
pop
lahf
daa
iret
xchg
js
mov
mov
mov
out
movl
rcl
arpl
sub
sarb
jae
mov
sbb
je
add
push
insl
fisttpll
mov
push
jp
mov
add
push
test
std
leave
cmp
fucomip
aaa
fcmovbe
bound
stos
dec
dec
pop
xchg
pusha
cli
jnp
xchg
and
mov
int3
mov
mov
cmpsb
sbb
mov
push
or
insl
adc
arpl
iret
jae
test
icebp
cmpsl
pop
inc
idivb
in
pop
adc
pop
shrb
stos
jp
push
sbbb
mov
mov
out
fisttpll
pop
mov
stos
mov
repz
subb
addr16
test
cmp
loop
fadd
xor
sbb
pusha
aaa
adc
push
push
sbb
cmp
ret
push
mov
and
adc
jl
or
xchg
xchg
into
es
arpl
icebp
test
pop
popa
xchg
jl
pop
dec
loopne
inc
fldl
jmp
fdecstp
in
cld
inc
or
xchg
push
bound
icebp
push
mov
fcomi
popa
add
mull
sub
add
mov
lret
mov
pushl
fisttpll
ja
fsts
scas
int3
push
pop
les
push
enter
lods
addb
jmp
and
fyl2xp1
and
ficoms
or
xchg
sub
push
rclb
or
loope
adc
les
cmp
xor
push
dec
sbb
nop
fisubrs
inc
in
and
inc
push
sub
inc
dec
adc
and
jle
fnstsw
cmp
test
or
ljmp
pop
inc
sahf
adc
call
push
bound
mov
xchg
push
cmp
cs
hlt
sub
add
lret
pop
sbb
push
dec
mov
mov
sbb
mov
jnp
cmp
je
fidivrl
jle
mov
and
in
adc
xchg
js
jp
adc
test
xchg
lret
js
jl
pop
lods
je
pop
mov
ds
iret
adc
jne
fstpl
test
dec
add
movsb
fistpl
xor
lds
shll
xchg
mov
xor
mov
jl
ret
lcall
shl
sbb
mov
pop
popf
cmp
sub
ss
cld
inc
loope
int3
cmp
sub
movsb
ret
push
faddl
pop
cs
lcall
shlb
test
ss
pushl
mov
inc
inc
xchg
cmp
in
iret
fidivl
daa
test
sti
xor
lret
sbb
jb
push
xor
xchg
lcall
or
sub
divb
jle
popf
cmpsb
mov
adcb
and
xchg
pop
cmp
rcrl
hlt
inc
mov
or
jge
test
loop
scas
push
fwait
mov
mov
nop
ret
sbb
adc
div
mov
xor
sub
stos
in
adc
dec
inc
lock
mov
jle
pushf
ljmp
imul
in
xor
lret
jno
mov
clc
rcrl
imul
lea
jp
cmp
fadd
es
fcompl
out
pop
aas
sti
dec
jae
out
call
mov
add
fld
les
repz
pop
sbb
dec
sbbb
or
cmp
ss
cwtl
mov
insb
shl
xchg
mov
outsl
mov
sbb
bound
dec
test
ja
jbe
int
xor
rcrl
xor
mov
mov
pop
jl
sbb
adc
jle
dec
xchg
jle
nop
stos
and
push
mov
and
jb
sub
jno
fstpl
mov
jbe
fstp
out
ss
inc
cmpsl
in
fldl
gs
fadds
add
push
jne
rorb
sti
mov
sbb
popa
add
push
movsl
cmp
pop
mov
loope
es
ds
lret
sahf
pslld
fcoml
cmpsl
mov
inc
ret
pop
out
mov
add
dec
push
inc
pop
xor
xor
neg
dec
mov
sbb
aad
sub
jae
mov
jp
and
outsl
mov
inc
mov
jbe
add
sti
adc
fimuls
lret
push
xchg
cltd
inc
aaa
outsb
filds
out
mov
mov
insl
push
push
sbb
cmp
fisttpll
ja
cltd
lahf
stos
pop
popf
js
loope
outsl
repz
popa
stos
iret
aad
add
xchg
addb
cmp
ss
into
out
xchg
cmp
fisubrl
mov
fidivrl
test
mov
jnp
sbb
mov
in
sub
loope
add
jne
shrl
cmp
and
es
mov
and
xchg
fisubs
jmp
cld
scas
icebp
xor
mov
jno
sbb
push
lock
mov
xchg
rcrl
int3
loope
mov
mov
mov
cltd
in
pushf
nop
and
cmp
hlt
add
sbb
insl
mov
stc
and
fisubrs
xchg
js
sbb
mov
dec
dec
jno
adc
insb
dec
dec
push
push
mov
mov
and
or
mov
je
pop
jmp
inc
add
ja
fimull
test
jo
outsl
push
adc
xchg
mov
ss
iret
movsl
add
cltd
xchg
xchg
aam
add
addr16
jle
push
inc
mov
fcmovb
popa
mov
sahf
mov
xchg
fs
sub
repnz
ret
jb
xor
pop
stos
outsb
and
inc
sbb
push
enter
cltd
xchg
mov
inc
ja
popa
or
dec
popa
cmp
jb
test
fisttps
and
jne
push
jg
leave
out
aas
sub
daa
andb
pop
adc
out
pushf
mov
mov
int
push
sbb
rorb
repz
and
cmpsl
cli
aam
imul
push
sub
jecxz
jns
scas
out
aas
mov
mov
sbb
add
orl
je
add
neg
xchg
outsb
push
mov
or
mov
dec
mov
adc
xchg
mov
nop
pop
cmp
pop
sub
and
ret
movl
or
imul
stc
jnp
and
dec
sub
ret
push
mov
mov
xchg
inc
lds
cmp
mov
cmp
jmp
in
repz
ljmp
aam
jge
addr16
idivb
and
xchg
data16
mov
and
xlat
add
sub
insb
pop
je
pushf
popf
lret
adc
and
ret
fsubrl
jl
xchg
and
sbb
out
sbb
jge
fs
arpl
cld
xor
dec
jg
inc
into
lods
mov
lock
xor
mov
icebp
pop
push
pushf
xchg
test
lods
inc
pop
push
arpl
mov
hlt
fdivr
xor
testb
mov
sbb
fdivrs
ret
pop
add
das
or
inc
cmc
pop
add
jl
stos
cmpsl
xchg
outsl
pop
in
loopne
add
dec
mov
icebp
jl
int
or
nop
cltd
push
clc
lock
stc
and
ret
sub
pop
stos
cmp
maskmovq
mull
lods
sub
aad
rcrb
jp
xor
cmpsl
jg
aas
dec
addr16
mov
por
pop
push
adc
add
clc
rolb
ljmp
xchg
mov
bound
imul
repz
daa
inc
mov
pop
xor
aas
sahf
aam
std
repz
outsl
fs
add
out
daa
fbld
cmp
int
notl
push
ret
mov
das
dec
imul
hlt
loop
dec
or
lods
and
or
int3
mov
mov
fwait
jnp
or
sbb
or
out
lock
mov
dec
xor
lret
pop
inc
enter
cmp
arpl
add
and
push
test
mov
nop
stos
cmp
in
push
rorl
xor
or
sbb
or
pushl
sbb
sub
sarl
stos
dec
add
sbb
cmc
pop
dec
scas
popa
test
xor
adc
jle
outsl
mov
clc
add
jmp
test
scas
ljmp
cmp
insl
imul
out
ds
daa
push
and
fmuls
add
push
stos
cli
out
sbb
push
iret
mov
mov
data16
imul
xor
pop
rolb
out
mov
shlb
mov
xor
iret
out
pop
mov
lahf
xchg
out
dec
sarb
in
jl
ds
ficompl
pop
dec
addr16
loope
pop
push
outsl
push
das
cmp
add
push
inc
and
mov
arpl
push
mov
xchg
andnps
inc
dec
mov
add
lcall
xlat
gs
scas
pop
daa
cmp
or
or
jmp
mov
add
aam
pushf
mov
lcall
mov
loopne
pop
daa
cmc
jnp
fnsetpm(287
add
dec
div
add
add
xchg
inc
xor
or
push
cmp
loope
pop
or
lret
sbb
movsl
xchg
cli
ds
data16
rclb
inc
add
dec
les
clc
cli
leave
xchg
movsb
pop
imul
std
sahf
jl
dec
movsb
jno
sahf
pusha
lea
dec
mov
imul
mov
and
xchg
ljmp
and
inc
testb
js
arpl
jg
inc
or
mov
leave
andl
and
lods
ja
jb
imul
fdivl
xchg
adc
or
xor
fs
fdivrs
adc
mov
test
nop
jge
fmulp
cmpsl
mov
or
in
ljmp
scas
test
loop
out
sub
cli
adc
jns
lret
js
gs
jbe
inc
cmp
movsb
xchg
adc
jp
int
rol
sbb
fistps
pushfw
xchg
ret
jae
mov
xchg
mov
lahf
adc
jo
mov
jmp
xchg
imulb
les
sbb
sbb
mov
xchg
popf
imul
lret
dec
ficompl
andl
pop
mov
xchg
dec
cltd
cmc
flds
sbb
fsubrp
pop
les
ljmp
xchg
mov
mov
je
shll
sub
addr16
or
cmp
mov
test
aam
pop
int3
cmpsl
cs
push
sbb
or
ds
push
add
jae
mov
or
test
mov
stc
aas
jp
rclb
clc
jno
xlat
mov
stos
fldcw
jecxz
adc
addb
out
pop
push
stos
or
jg
lock
cmp
mov
icebp
add
scas
int3
in
and
popf
bound
dec
pop
xchg
add
dec
push
xchg
add
or
push
enter
bound
popf
cmp
bound
out
push
out
fdivl
push
mov
fsts
push
cmpsb
dec
movsl
mov
sbb
into
jg
je
cmp
push
cmp
dec
mov
add
sbb
and
dec
xor
push
lcall
arpl
testl
ficoms
xchg
add
and
daa
bound
jmp
sarl
imul
cld
mov
out
adc
out
arpl
inc
pop
jl
je
fstpl
sahf
fidivrl
adc
out
push
dec
stc
push
jl
aam
push
xor
mov
xchg
pop
xchg
in
jmp
repz
jnp
xor
pop
stc
and
nop
stos
rolb
insl
aad
xchg
adc
mov
out
xchg
fdiv
mov
push
mov
cmovns
cmpsl
lock
pop
inc
imul
ljmp
adc
test
shlb
lret
xchg
sti
mov
inc
xchg
mov
mov
xchg
int3
stos
jb
repnz
push
daa
lods
movsb
addr16
mov
xchg
or
xor
xchg
retw
mov
adc
iret
std
jno
icebp
cmp
or
mulb
adc
add
mov
stos
pop
pop
imul
loope
aaa
mov
sub
test
push
pop
pop
dec
jo
cltd
dec
cmp
aam
sbb
js
xchg
scas
push
fwait
sbb
pop
aaa
fildll
addb
nop
sub
xor
dec
shl
mov
stos
xor
lock
mov
adc
das
push
xor
push
cmpsb
mov
ja
cmc
test
out
push
mov
xor
rcrb
jmp
cs
inc
xchg
or
xchg
fwait
sub
add
cmpsb
lds
and
dec
pusha
in
loope
and
sub
push
xor
movsl
in
cltd
lret
mov
adc
push
addr16
or
mov
and
pop
sbb
daa
test
scas
sti
add
or
cmp
mov
hlt
add
out
loop
shrl
and
push
jge
mov
pop
outsb
sub
imul
mov
outsl
adcl
and
sarl
xchg
mov
hlt
jg
or
in
loopne
mov
cmc
mov
and
flds
or
pop
jge
mov
dec
or
imul
cwtl
push
push
fs
mov
sbb
adc
jecxz
in
in
repnz
xor
cwtl
jle
and
jo
add
ret
nop
test
adc
cmp
adc
cmc
add
xchg
stc
add
sbb
jnp
sub
fcmovbe
fucomp
xor
jge
cmp
dec
fdivrl
cmp
lock
adc
adc
lods
cmpb
and
aaa
lods
cmpsb
push
cmpsl
call
rcl
aad
in
or
les
sub
push
cmp
lock
jbe
addr16
push
sahf
cli
xchg
or
lcall
arpl
and
sbb
and
sub
out
xor
rclb
mov
movsl
xchg
mov
adc
push
testl
dec
fistpll
hlt
xchg
dec
inc
or
jg
addl
cmp
clc
jp
inc
imul
or
add
jl
cwtl
movsl
cmp
lahf
or
sbb
mov
mov
leave
rolb
sub
stos
inc
mov
icebp
fwait
enter
mov
inc
sbb
lea
and
icebp
repz
int
lret
dec
and
and
stos
jno
repz
les
js
fistl
xchg
data16
int3
movsb
mov
sub
jno
mov
data16
loopne
imul
pop
jl
fmull
pop
jne
push
imul
dec
cmp
mov
loope
xchg
adc
mov
ret
sub
fstl
jbe
call
cmpsb
cltd
data16
cmpsl
mov
jno
and
popf
bound
xchg
dec
mov
repz
dec
push
and
push
imul
inc
mov
rcr
dec
imul
sub
incb
pop
add
inc
jge
sbb
add
cmpsb
outsb
cmpb
mov
imul
jb
or
fsubrp
or
das
xor
rclb
or
pop
inc
test
enter
es
loope
adc
mov
pop
push
shll
repnz
fsts
pop
cmp
inc
and
int3
mov
movsb
test
fldenv
arpl
nop
mov
push
sub
mov
inc
pop
adc
hlt
cwtl
adc
xor
adc
pusha
repnz
gs
out
fbld
inc
push
and
xor
inc
movsb
add
mov
jle
and
das
je
inc
push
xor
sub
mov
aam
sub
bound
add
sbb
enter
mov
in
cld
mov
mov
test
prefetcht1
jb
rcrl
pushf
xchg
xchg
roll
loope
pop
cld
pop
in
sbb
or
ljmp
add
cmp
adc
and
aad
add
sti
loop
mov
push
dec
push
daa
cli
jp
and
pop
and
mov
rcrb
mov
xorb
daa
call
dec
mov
stos
and
movsl
fistpl
xor
cli
movsl
cmp
inc
inc
dec
or
dec
xor
loopne
lret
dec
std
xchg
lcall
test
and
xor
andb
cwtl
jns
jl
les
jne
dec
cs
aas
cmpsl
jle
push
lds
adc
loope
fists
mulb
cmp
js
cmp
xor
mov
and
mov
and
je
pop
xchg
into
add
xorb
push
sbb
mov
add
mov
sbbb
repz
xchg
inc
aam
test
fs
inc
cmp
rcl
xor
mov
subb
xor
cmp
stos
in
loope
xchg
loop
xchg
lcall
or
mov
pushf
into
jns
stc
mov
arpl
test
sub
stc
cmpl
mov
rclb
inc
mov
scas
idivl
outsb
ja
cmp
add
and
mov
aam
xchg
mov
push
lods
and
or
cli
mov
incl
add
jmp
mov
lahf
imul
sbb
aaa
push
repz
sbb
inc
cmp
out
push
and
xor
mov
mov
js
sti
and
ret
lahf
pop
out
add
test
ret
xor
mov
sbb
lock
aad
pop
dec
shl
and
push
xchg
cwtl
jae
daa
xchg
cmpsl
pushf
adc
imul
jbe
sub
jg
jp
adc
fistl
lret
adc
fs
adc
repnz
or
cmp
arpl
ss
shrl
pop
cld
push
cld
or
adc
inc
sub
cltd
push
aam
imull
gs
push
jno
ljmp
add
jns
inc
sbb
addr16
jp
popa
div
adc
and
mov
sub
jo
add
xchg
sbb
dec
jge
cltd
dec
sbb
xchg
and
dec
les
mov
fmull
dec
or
inc
mov
mov
cld
jmp
fiaddl
bound
lahf
xchg
into
pop
int3
cmp
xchg
dec
adc
fstpt
or
test
rclb
mov
push
pop
fildll
rclb
cmp
loop
in
ficoml
jae
pusha
pusha
iret
jl
mov
pop
and
imul
mov
in
cmp
scas
xchg
outsl
sarb
insl
ficomps
inc
rcr
adc
add
jge
outsb
sbb
jne
loope
fdiv
mov
mov
cmp
or
repz
out
test
lret
imul
ljmp
std
cmp
decl
xchg
jbe
pop
mov
mul
sub
clc
dec
and
out
mov
xchg
bound
fdivrs
lahf
fisttps
repnz
mov
fnstenv
jnp
in
in
outsb
xchg
sbb
mov
or
adc
jecxz
pop
mov
fbstp
mov
push
in
cmpsb
adc
in
subl
fildl
lods
mov
jno
ret
int3
cltd
sbb
mov
cmp
sti
stc
or
addr16
sbb
or
pop
xor
and
test
enter
mov
mov
mov
xor
mov
push
lods
into
out
jne
lock
pop
outsl
mov
inc
cli
imul
and
mov
hlt
sahf
fisubrs
cld
adc
stos
imul
adc
mov
and
or
iret
das
mov
push
cmp
subl
imul
stos
jecxz
and
pushf
lahf
test
add
push
shrl
sti
push
leave
flds
adc
and
les
out
mov
or
xchg
scas
lret
or
pop
insl
into
mov
pop
inc
cld
cmp
sahf
mov
outsl
inc
mov
mov
insl
sahf
hlt
shr
dec
push
dec
push
pop
clc
ret
jbe
shrl
add
mov
pop
or
mov
mov
mov
push
inc
jb
or
cmp
data16
mov
mov
mov
push
xor
jnp
xor
lahf
cmp
push
push
adc
xchg
xor
lods
and
test
outsl
xchg
mov
je
xchg
cwtl
mov
lods
in
or
inc
mov
xchg
sbb
add
stc
lea
and
sub
in
sbb
repz
rep
dec
dec
subb
mov
jg
inc
test
mov
clc
ss
cmpsl
insl
mov
adcb
push
scas
push
or
mov
cmp
repz
pop
cmpsb
popf
pop
inc
xchg
fsubrl
xor
js
std
es
lock
scas
scas
cmpsl
add
imulb
gs
ror
xchg
mov
push
popf
push
fwait
dec
bound
iret
call
sub
popa
xor
mov
addr16
mov
pushf
jmp
scas
pop
sbb
pushf
clc
jl
jbe
mov
xchg
dec
movsl
jae
sbb
adc
ret
sbb
jmp
fcmovne
in
leave
mov
xchg
xor
dec
lahf
imul
int3
out
ljmp
pop
push
and
sbb
pushf
inc
jae
mov
fsubrs
push
hlt
scas
bound
xor
ja
dec
mov
mov
call
lods
sbb
loop
and
data16
push
int
add
ds
aad
out
mov
lock
fwait
cltd
lds
sti
push
js
fisubrs
xchg
repnz
leave
xchg
cmpsb
and
fsubp
mov
cmpsb
or
repz
push
sti
sbb
mov
ja
bound
int
rcrb
push
push
lds
shlb
push
adc
xchg
fwait
stc
adc
daa
mov
ret
das
lods
add
cmp
imul
les
in
xchg
pusha
clc
orl
es
in
jle
addr16
inc
mov
xor
push
xchg
jl
sub
mov
shlb
lret
popfw
push
shll
aam
lret
and
mov
movsl
push
leave
jns
xorb
pop
dec
mov
insb
or
cmp
divl
and
test
fucomip
sti
push
inc
jo
orl
dec
mov
xor
xchg
shl
xor
pop
sbb
xchg
xchg
rorl
pop
arpl
popf
mov
cmpsb
sub
xchg
gs
cmp
jno
and
pop
fldenv
jmp
loop
xor
inc
call
sahf
or
int
jle
cmp
mov
jp
xchg
mov
shl
fsts
loopne
add
insb
xor
or
rcll
dec
cmp
insl
ficomps
mov
or
jecxz
je
push
lahf
test
add
xchg
fs
inc
daa
test
arpl
sbb
pop
add
scas
nop
and
jns
icebp
imul
mov
movsb
sti
pop
nop/reserved
fisttpll
fisubrl
xor
mov
push
nop
scas
adc
mov
repz
loop
jae
jl
dec
xor
cli
mov
stos
mov
mov
rcrl
scas
or
sbb
lock
inc
test
cmp
aad
lea
mov
aad
add
and
int
call
sbb
aad
ja
adc
push
in
outsl
mov
xor
pushf
or
iret
and
add
insb
and
cmpsb
mov
arpl
dec
aas
ljmp
mov
dec
xchg
lock
aas
sub
jnp
in
cmp
pushf
imul
jae
test
jl
ljmp
jl
js
leave
arpl
out
and
lahf
adc
xchg
sbb
mov
movsb
leave
lret
dec
rcl
ja
xlat
gs
push
jp
out
pop
xor
iret
fdivs
imul
js
jne
fldt
xchg
inc
idiv
rorl
popf
dec
orl
mov
mov
fidivl
scas
pop
cld
movsl
mov
subb
or
xor
push
mov
nop
mov
push
or
rorb
mov
iret
sbb
shr
sbb
dec
push
push
inc
lock
dec
scas
sahf
jns
xorl
pop
xchg
scas
into
loopne
dec
or
jo
call
cli
jbe
mov
xchg
mov
repz
xlat
or
adc
mov
jbe
mov
andl
adc
ljmp
push
jmp
push
xor
loop
xchg
mov
xchg
rcrl
call
adc
fdivs
sbb
cmp
std
aad
fbstp
bound
js
xor
lcall
lret
push
in
cltd
jbe
xchg
mov
inc
in
or
xor
dec
inc
mov
push
lds
es
xor
push
jns
push
xchg
cwtl
adc
mov
mov
xorl
sub
mov
cmpsl
hlt
cwtl
jb
xchg
leave
shll
sbb
pusha
cwtl
pop
dec
bound
sbb
daa
movsl
insl
pop
jle
xrelease
mov
iret
pop
je
gs
repz
jns
fwait
popf
sub
bound
xor
sub
jb
xchg
shrb
aaa
test
fadds
add
popf
jne
fnstcw
sbb
lcall
test
jnp
int
mov
je
scas
or
std
call
test
cltd
call
lods
xchg
insl
enter
in
dec
push
adc
and
inc
hlt
loop
pop
mov
js
shr
adc
xchg
pop
scas
fsubrs
inc
xor
and
inc
add
mov
dec
test
jb
cs
mov
in
test
js
push
adc
fstl
mov
push
frstor
popf
xchg
fstpl
insl
push
inc
inc
fxch
test
push
cmp
mov
into
ret
jg
lcall
fdivrl
mov
hlt
imul
clc
imul
jp
push
xchg
mov
sbb
xchg
loopne
popf
ljmp
adc
fistpl
mov
dec
mov
int3
cmp
cmc
sub
dec
and
or
insl
ds
jbe
repz
add
in
inc
cmpsb
aas
mov
out
loopne
les
inc
outsb
aam
push
mov
push
mov
xor
mov
loopne
aas
jmp
cli
pop
test
insb
fdiv
ret
incb
popf
and
stc
aas
lret
out
push
lock
inc
mov
inc
or
pop
pop
or
xor
mov
add
xor
pop
pop
lea
clc
fsubl
push
jecxz
jnp
rclb
jns
lods
mov
stos
inc
cmc
lea
pop
outsl
cmpsb
repz
jae
mov
cmp
xor
sarb
push
adc
xor
mov
das
into
mov
test
push
into
jecxz
inc
lea
jno
push
pusha
rorl
and
je
imul
xor
or
in
mov
mov
repz
loope
stos
and
xor
mov
mov
insb
adc
lods
or
sub
lds
push
inc
push
incl
lea
jo
test
xor
fiadds
cmp
mov
pop
jge
and
xchg
outsl
popa
sub
stc
in
jl
jmp
push
or
fisttpl
sbb
push
push
pinsrw
cwtl
movsl
jecxz
push
dec
fcmovnbe
dec
repz
mov
call
fists
and
add
clc
cmpsl
imul
pop
push
mov
stc
push
add
pop
jb
scas
xor
movsl
inc
sub
add
xor
sarb
clc
movsl
daa
xor
and
sbb
and
dec
or
push
and
fadd
mov
out
xor
fbld
int
shl
sti
mov
mov
xchg
inc
jbe
jns
scas
and
jno
xchg
insl
jo
mov
push
push
pop
mov
xlat
jns
scas
icebp
ret
adc
pop
or
pop
cwtl
mov
scas
push
dec
lret
sbb
das
jb
mov
ret
jg
pop
push
xor
cwtl
pop
ljmp
into
add
inc
xor
xchg
jno
jp
shl
mov
xor
jns
stos
lcall
movsl
jns
cwtl
cmpsb
and
imul
ljmp
outsb
mov
adc
fldl
out
jmp
scas
xchg
fmul
leave
pop
lds
or
andl
scas
xchg
fldcw
pop
add
fldl
loop
icebp
xor
test
aad
icebp
out
adc
popf
push
add
jle
std
pop
and
mov
decl
fsub
call
dec
mov
cwtl
cmp
mov
enter
xor
pop
enter
cld
jbe
sbb
mov
mov
mov
adc
fwait
pop
cmp
mov
in
aam
shlb
fcoms
push
cwtl
push
add
out
add
lods
gs
mov
out
cmp
cmp
sub
scas
and
roll
popf
imul
out
ja
and
stc
out
addr16
scas
cmp
enter
mov
sub
std
pop
scas
sub
jo
mov
js
in
idivl
shlb
or
mov
ljmp
and
push
adc
jp
xchg
and
cmp
push
mov
test
mov
jns
notb
jle
test
fs
or
fs
lods
flds
or
mov
out
jns
sbb
dec
pop
nop
mov
xlat
hlt
pushf
mov
mul
outsl
pop
jo
lret
sbb
cli
jl
adc
jbe
mov
testb
push
pop
push
xor
jle
cmp
pop
mov
popa
bound
push
stos
cld
out
jecxz
pop
cmp
lret
lret
push
aam
aas
mov
xchg
sub
push
jbe
pop
jle
sub
adc
push
pop
or
mov
inc
loope
jne
lds
subl
out
stc
jl
gs
xchg
sbb
mov
inc
push
filds
fbld
xchg
clc
mov
or
pop
adc
mov
sbb
mov
scas
mov
dec
bound
mov
adc
popa
jae
mov
pop
popf
scas
icebp
xor
cmp
jmp
lds
iret
mov
dec
xorb
rep
popa
sbb
das
sbbb
xchg
int
fsubl
ljmp
mov
xor
sbb
icebp
cmp
adc
lds
adcl
test
in
scas
mov
es
lret
and
movsb
bound
cld
push
dec
jge
arpl
test
in
xchg
adc
push
int
nop
mulps
mov
dec
inc
push
lret
mov
sbb
push
push
rcrl
cmc
in
mov
push
std
and
sub
insb
in
pushf
xlat
add
lahf
fildll
jg
xor
inc
je
ds
mov
sbb
loopne
pop
pop
mov
repz
xchg
sub
imul
or
sub
add
out
fmull
mov
fwait
jae
mov
mov
jo
pop
test
rcrb
cltd
jl
in
int3
icebp
cli
dec
cmpsl
lcall
add
mov
sbb
cmovl
jg
ja
int3
dec
out
rol
aam
leave
je
push
sbb
dec
push
std
sahf
sbb
push
jo
push
fnsave
xchg
inc
out
xlat
lods
dec
xchg
flds
sub
xor
js
add
in
push
loope
fdivrp
xor
out
xchg
xor
cmp
cltd
jno
mov
hlt
les
das
in
lahf
or
inc
push
les
in
in
push
inc
test
ret
and
sbb
push
mov
adc
mov
xchg
cld
cwtl
jle
ja
cltd
std
dec
fimull
push
jne
push
mov
mov
roll
mov
lcall
xor
fcompl
out
pop
stc
xchg
test
in
jl
mul
scas
aas
mov
sbb
std
xor
test
lret
scas
clc
jae
jbe
ret
mov
dec
jecxz
xchg
loopne
dec
rcll
mov
xchg
cmp
pop
push
mov
pop
mov
scas
cmp
aas
bound
adc
mov
or
xchg
imul
mov
lret
repnz
cmp
xchg
pop
xchg
push
sahf
push
out
cmp
and
pusha
mov
pusha
sbb
xchg
sarl
sbb
xor
cmp
iret
imul
pusha
jns
rclb
int
lds
and
test
loopne
xchg
dec
xchg
addb
mov
sub
lds
lods
cmc
test
js
xchg
popf
inc
dec
xorb
mov
mov
add
adc
cwtl
inc
sbb
jecxz
adc
daa
popa
call
insb
push
int
std
dec
stos
sub
dec
in
and
mov
jns
add
dec
push
push
call
aaa
jo
inc
scas
mov
xor
mov
xlat
sbb
ljmp
pop
addr16
pop
js
xchg
push
mov
sub
sub
inc
js
and
pop
sahf
popf
call
dec
push
xchg
push
pop
mov
outsb
arpl
mov
pop
adc
cmp
add
xchg
dec
icebp
test
xchg
in
fwait
push
shlb
mov
gs
or
js
mov
insl
jb
jbe
pop
stos
pop
pop
adc
in
xchg
dec
nop
roll
test
jmp
pop
sub
outsl
or
cmpsb
cli
pushf
jecxz
out
in
pop
cmp
pop
pop
mov
in
fsub
insb
test
pop
push
mov
inc
bound
mov
addl
test
fidivs
or
cli
xor
mov
xchg
lea
mov
sub
and
jb
int
fstl
hlt
or
aad
imul
mov
loopne
cltd
xchg
pop
adc
add
cmp
mov
jno
mov
add
pop
data16
push
test
jae
xchg
ret
ljmp
into
repnz
mov
fdivrl
adc
loop
sbb
mov
loopne
sahf
xor
cmp
jbe
dec
lcall
cs
mov
xchg
xchg
add
jbe
fdivl
loopne,pt
icebp
push
pop
lahf
loop
jmp
fsubs
jbe
dec
adc
and
daa
mov
push
test
cmpsl
sti
dec
dec
inc
js
std
imul
inc
test
mov
out
pop
push
cs
fucomi
and
push
mov
or
jge
inc
push
add
mov
lcall
pop
push
xor
jnp
cwtl
es
outsl
popa
xchg
dec
mov
and
fbld
adc
pop
movsb
jbe
gs
outsl
iret
xchg
jne
inc
ret
sahf
push
call
push
add
inc
fnstenv
push
out
lods
into
je
or
dec
pop
fs
into
nop
sahf
sub
mov
or
lds
inc
xchg
xchg
mov
adc
xor
inc
push
or
scas
jp
mov
pop
jae
cmp
mov
pop
cwtl
cmp
jl
push
or
lock
xchg
fldenv
sbb
cmp
lds
mov
hlt
dec
xor
push
pushf
push
mov
mov
lahf
sub
pop
popf
sub
pushf
arpl
scas
cmp
sbb
lds
daa
das
addr16
cmp
cmpsl
ret
inc
push
pushf
pushf
sbb
cmc
enter
rcll
push
mov
out
adc
inc
pop
cs
and
push
xor
stos
xor
jmp
xchg
jns
sarl
pop
cmp
add
and
data16
in
clc
or
out
and
add
addr16
aaa
pop
dec
cltd
add
cs
jle
jmp
insb
jg
hlt
xor
stos
xchg
sub
sbb
sub
xor
scas
sbb
sbb
push
es
push
pop
lods
cli
vmread
sbb
into
add
test
jl
mov
cmp
lds
arpl
std
mov
cmpsb
nop
gs
jnp
dec
xchg
mov
movl
scas
or
sub
add
xchg
je
nop
cltd
add
cli
sti
stos
push
inc
repz
add
dec
imul
cs
inc
scas
push
imul
xchg
out
ja
fldl
aad
pop
pop
push
lret
cmp
sbb
testb
sub
cmpl
pop
adc
xchg
es
mov
pop
or
dec
adc
xor
sub
inc
dec
sub
and
mov
aad
mov
mov
cmp
mov
fimuls
mov
add
dec
or
pop
dec
in
xchg
leave
add
pop
js
ret
arpl
sub
sbb
and
add
stos
jp
xchg
xchg
shrl
ret
push
mov
dec
jg
rorb
inc
mov
mov
aaa
inc
sarl
sub
mov
xor
mov
incb
mov
adc
xor
add
xor
xchg
out
sub
lahf
bound
xchg
jno
and
shlb
scas
inc
cmp
mov
repz
mov
nop
repz
shlb
cmp
lds
adc
imul
enter
pop
cs
jno
push
pop
push
fsubp
xor
out
and
fnstenv
pop
popf
into
or
cld
nop
mov
cmpsb
repnz
pop
adc
push
lea
mov
and
stc
xchg
cwtl
aad
pop
xor
in
sbb
inc
pop
and
jge
cmpsb
mov
daa
movsb
add
or
daa
sub
stos
mov
mov
mov
lds
cwtl
jns
scas
pop
sarb
cmp
sbb
xor
and
enter
mov
mov
andb
jmp
mov
add
pop
int3
stos
call
andl
icebp
cmp
xor
mov
jno
sbb
in
xchg
int3
outsb
popf
sarb
inc
mov
shl
ret
mov
movsb
sbb
add
adc
movsb
add
mov
ror
sti
fcmovnu
aaa
int3
mov
xor
xor
sti
sbb
test
fiaddl
imul
jle
sbb
or
imul
and
bound
xor
sbb
push
jbe
cmc
adc
cmp
in
mov
xchg
dec
push
je
dec
in
inc
dec
das
idiv
in
out
gs
das
dec
adc
popa
lods
in
push
pop
in
in
cmp
pop
jo
jbe
daa
mov
shll
dec
lock
test
imul
inc
in
cmp
fdecstp
jo
xlat
insl
xchg
outsb
popa
dec
push
jp
mov
cmp
xor
xlat
ljmp
pop
aaa
fiaddl
sbb
mov
enter
push
dec
xor
aam
cmp
movsl
xchg
or
adc
test
sbb
push
xchg
loop
xor
mov
jb
out
push
push
xor
into
cli
cmp
cmpsb
ljmp
sbb
loope
add
fdivrp
inc
mov
aad
push
xor
jecxz
icebp
pusha
push
jecxz
jnp
jg
cli
mov
xchg
lea
out
sub
mov
and
repz
push
cmp
cmovns
in
add
out
lret
push
or
add
pop
pop
adc
std
inc
mov
std
pop
inc
cmc
test
adc
outsb
adc
and
shlb
and
enter
test
orb
sbb
in
xchg
adc
aam
push
loopew
pop
in
mov
xchg
lahf
lret
jp
int3
lock
pop
fstpt
xor
es
popf
inc
loop
pusha
lret
cmp
sub
ja
sub
or
dec
cmp
test
ret
inc
lds
mov
lods
sub
ljmp
xchg
test
inc
xchg
jns
xor
or
pushf
adc
es
cmc
inc
xor
inc
add
inc
pop
sub
fwait
and
or
jnp,pn
lock
test
pop
std
in
mov
scas
mov
sbb
in
or
out
inc
ljmp
je
pushf
sub
sbb
dec
ds
adcb
add
cmp
sbb
sub
jo
ja
add
xor
push
or
faddp
pop
in
push
outsl
sbb
jmp
mov
loopne
xorl
xor
cli
out
in
mov
call
stc
push
sbb
stc
dec
daa
sbbb
daa
int3
sbb
pop
fdivp
insb
loop
or
mov
outsl
jns
xor
insb
sti
xlat
in
das
dec
mov
xorl
adc
std
cld
cmp
mov
aam
and
sub
popa
inc
pop
dec
mov
mov
push
push
pop
cmp
mov
mov
mov
dec
lahf
out
sahf
inc
mov
jae
xor
insb
cmp
push
outsb
xchg
fdivrp
push
xor
xchg
imul
lcall
xor
rorb
sbb
or
shl
dec
adc
xchg
pop
repnz
adc
les
cmp
pop
mov
pop
mov
into
test
pop
loope
add
dec
cs
cmpsb
imul
cmp
in
into
clc
mov
imul
mov
pop
fs
lcall
and
jp
dec
popf
mov
imul
int
mov
inc
inc
mov
loope
pusha
movsl
add
xor
stos
xchg
daa
ja
hlt
jg
xor
xor
mov
cwtl
sub
mov
cwtl
jge
inc
popa
xor
mov
pop
or
aaa
and
stc
adc
aad
test
mov
jne
enter
in
sub
push
insl
fnstcw
fs
fs
adc
or
sub
cmp
sbb
in
mov
aas
cmovb
xchg
pop
cs
ja
js
mov
sahf
or
fidivs
push
aad
xchg
or
popa
lods
cmpsl
rolb
dec
movsl
pop
push
dec
lds
mov
adc
add
xlat
cmpsb
hlt
dec
shlb
insb
pop
push
mov
jl
xchg
sub
sub
cld
sub
aaa
mov
inc
cmp
and
rcrb
push
in
ljmp
push
xchg
sbb
add
add
lea
ja
push
rcrb
jne
mov
sahf
rol
je
repz
cltd
mov
in
inc
jle
or
in
data16
ja
aam
negb
cmp
cmp
pop
push
xchg
jmp
dec
dec
cltd
outsb
adc
ds
jb
in
xchg
addr16
jae
aam
jg
inc
mov
mov
lods
cs
cmpsl
adc
test
sbb
add
xchg
sarl
sahf
mov
idiv
inc
inc
cmc
dec
jnp
dec
mov
cmpsl
repnz
out
mov
inc
lret
xchg
movsb
sbb
and
dec
inc
fnsave
mov
ret
es
dec
xchg
popf
add
xchg
imul
mov
sub
arpl
bnd
nop/reserved
cltd
test
imul
fs
jg
adc
pop
insb
inc
push
inc
repnz
jb
pop
push
sti
xchg
lea
sarl
aam
lods
and
inc
push
dec
mov
mov
or
scas
icebp
lcall
mov
cmpsl
jge
or
fs
push
push
rcll
mov
enter
sarl
xor
shrl
mov
push
sbb
add
fwait
adc
sbb
add
leave
arpl
cmp
cmpsl
ljmp
xchg
fimull
je
addr16
inc
mov
jle
outsl
mov
fisttps
fldenv
pop
inc
jnp
in
xchg
mov
dec
int3
sub
fbld
data16
rol
mov
aad
add
ret
cli
call
jns
mov
mov
mov
aad
je
lods
sahf
lahf
push
sub
mov
int3
push
andl
dec
test
cmpb
pop
fsubs
jmp
packuswb
in
in
push
movsl
xchg
leave
lods
mov
pop
push
lret
or
mov
or
add
lds
out
sbb
pop
inc
xchg
dec
push
or
jno
dec
xorb
leave
inc
and
mov
xchg
push
loopne
pop
push
in
pop
pusha
je
test
adc
js
add
mov
ds
xor
fsubr
pop
push
xchg
sbb
or
in
aas
aas
incl
fldl
pop
fmuls
mov
jno
pop
nop
roll
xor
or
push
nop
cmpsl
out
pop
add
fst
sarl
pusha
addr16
leave
outsl
xchg
adc
xchg
or
pop
divb
test
xchg
lret
ja
imul
inc
dec
push
loope
xchg
push
dec
sbb
xlat
xor
or
sbbb
lcall
test
pusha
outsl
call
xor
mov
xor
push
lcall
add
push
push
insb
or
arpl
int3
inc
enter
dec
mov
pushf
sbb
fwait
icebp
ret
xchg
in
stos
pop
and
cmpl
sarl
jnp
test
jecxz
mov
shlb
cmp
dec
lods
inc
or
js
outsb
adc
cltd
push
pop
jmp
or
dec
push
lret
stos
lret
stc
mov
test
mov
cmp
push
hlt
into
push
push
xor
addb
andb
lea
mov
iret
dec
dec
fisubrs
push
data16
push
mov
mov
fcmovnb
mov
dec
int
insl
int
pop
jl
negb
scas
add
cmp
gs
test
daa
gs
push
ficompl
mov
xor
cmp
iret
mov
push
push
mov
orb
out
call
repz
pusha
out
leave
lea
outsb
xor
or
sub
push
inc
pop
or
jbe
push
sti
jne
stos
mov
mov
imul
pop
data16
arpl
xchg
shl
mov
pop
sbb
icebp
arpl
xchg
mov
divb
add
scas
sahf
xor
jbe
pop
jnp
mov
sub
cmp
movsl
fisttps
pop
lods
test
jmp
divb
jnp
cmp
mov
fists
or
sub
sbb
push
mov
stos
pop
xchg
mov
dec
sub
jle
in
hlt
jmp
test
adcl
enter
xlat
in
add
push
pop
aad
rcr
int3
mov
dec
dec
push
mov
dec
dec
adc
xor
dec
dec
adc
imul
adc
sbb
in
pop
cmc
inc
push
push
out
jo
data16
int3
cvtdq2ps
inc
fdiv
imul
cmc
std
psraw
or
fxch
ds
jle
xchg
daa
mov
add
and
mov
inc
popa
xlat
enter
or
dec
bound
add
orb
push
jnp
sub
clc
sub
bound
mov
push
cmp
jne
mov
pop
inc
jne
repz
xchg
jg
cmp
mov
xchg
add
ja
cmp
jl
out
inc
lea
jns
imul
xlat
inc
push
mov
dec
xchg
mov
out
xlat
jge
imul
jg
out
and
test
sub
adc
mov
sub
scas
inc
adc
add
ja
out
push
jge
lock
adc
es
jmp
push
cmp
cmp
sbb
and
cli
pushf
jecxz
sbb
adc
pusha
mov
xchg
mov
sahf
mov
dec
lahf
stc
pusha
out
jecxz
inc
push
cmp
js
fwait
jns
out
mov
sbb
inc
loope
add
pop
jmp
cmp
int
inc
push
lods
daa
xchg
movsb
sub
or
push
scas
cmp
inc
out
mov
popa
cmp
fmul
lret
fs
pmaxub
out
jbe
sub
pop
mov
fs
sub
cmp
test
outsb
sub
xchg
inc
out
jl
and
in
push
dec
movsl
das
arpl
jl
ja
add
xchg
mov
fimuls
jno
cli
push
je
add
xor
sbb
imul
xor
scas
push
insl
in
lret
fstps
jg
imul
loope
inc
mov
test
fbld
dec
fsubs
in
stos
dec
xor
sbb
test
jg
ds
lcall
mov
and
mov
stos
lds
mov
call
ljmp
fstps
push
lea
cwtl
push
or
addr16
aad
cmp
adc
gs
arpl
push
int3
int3
lds
gs
imul
sub
in
add
pop
fstpt
push
pop
xchg
push
sahf
push
inc
jmp
mov
jge
sti
in
lods
dec
ss
push
pusha
das
adc
lret
popf
or
mov
xchg
and
addr16
and
xchg
sub
sub
cld
f2xm1
push
ljmp
roll
lcall
pop
and
mov
or
xor
and
cs
pop
dec
test
inc
dec
lock
pop
mov
lock
sub
inc
in
popa
mov
test
jmp
repnz
out
sub
imul
mov
or
nop
adcb
mulb
jno
cmp
xor
int
mov
test
fisubl
jae
mov
or
xchg
jne
imul
mov
mov
mov
push
lock
push
fnstenv
pop
inc
push
mov
scas
test
xchg
pop
dec
test
aaa
sbbl
dec
imul
or
dec
cwtl
xorb
and
mov
das
inc
dec
mov
loope
xchg
aas
loop
shl
sbb
push
test
xchg
add
int
cmp
movsb
out
xchg
test
pop
sub
add
push
not
mov
out
mov
inc
xchg
das
sbb
cmp
mov
mov
mov
leave
call
aad
and
je
aaa
mov
adc
popa
lahf
cwtl
testl
jb
jae
outsl
adc
push
dec
push
repz
xchg
mov
inc
jle
or
xchg
xchg
adc
pop
jl
out
popa
inc
dec
push
mov
mov
shl
xchg
sti
fdivr
leave
jmp
xchg
jne
add
push
cld
inc
je
dec
lods
push
popa
inc
cmpsb
data16
enter
cmp
lock
add
pop
or
jb
stos
popa
xchg
cltd
sub
or
test
es
mov
sub
stc
shll
pop
inc
lea
sbb
insl
arpl
push
xchg
xchg
sbb
jne
out
mov
cmp
adc
mov
push
mov
scas
lods
pop
rcrb
test
ret
dec
jp
push
adc
cld
loope
insb
sbb
into
insb
sahf
add
cmp
sub
int
jnp
aad
aaa
fisubl
in
leave
sbb
enter
add
lret
push
lods
inc
lcall
repz
xor
cwtl
mov
add
adc
fnstsw
sbb
push
repz
mov
outsb
mov
loopne
add
out
fisubs
fsincos
les
or
adc
xor
repnz
cmp
cmp
ljmp
mov
sti
out
lods
testb
jb
icebp
dec
in
jge
outsb
adc
rolb
test
sti
ret
add
in
or
xor
scas
arpl
loop
pop
sub
cmp
jns
cmp
pusha
push
pop
jnp
jp
stc
pop
xchg
fmul
mov
lahf
clc
xor
aam
push
jbe
cmpsl
cmpsl
xor
add
lret
jo
mov
ss
adc
push
push
call
addr16
and
sub
insl
xchg
xor
cmp
push
pop
add
mov
jns
inc
pop
cmp
mov
jmp
roll
ss
fdiv
mov
bound
jle
js
lahf
in
dec
mov
jge
mov
js
push
mov
ds
in
je
sbb
sbb
aas
inc
sub
int3
mov
adc
mov
cmp
repz
fwait
call
pop
mov
xor
arpl
pusha
cmpsb
lahf
dec
cmp
lret
sub
pop
loop
loope
lea
addr16
jne
jns
sbb
push
xchg
dec
sub
cmc
or
adc
cmp
ret
cltd
fwait
lret
lods
das
sahf
leave
xor
sti
mov
lret
xchg
jle
fisubs
inc
not
fs
out
xor
pusha
sub
repz
mov
pusha
movsl
cs
jle
insb
mov
bound
das
mov
and
aas
mov
adc
fldl
xorl
or
add
mov
mov
adc
inc
in
popf
sub
cli
loop
sub
xchg
popa
and
test
lret
sub
push
in
xor
pop
hlt
jg
xor
shlb
lods
sbb
scas
mov
fcoml
shlb
mov
stos
sarb
fmull
pop
cmc
jns
lock
sets
mov
filds
in
fwait
loope
and
push
notb
xchg
xor
test
nop
cs
adc
aas
pushf
aam
push
cltd
pop
sar
add
test
sbb
fucomp
xchg
or
stos
and
fucomp
sti
ror
inc
pop
jp
lahf
aas
repz
addr16
adc
sbb
and
lods
cwtl
sub
in
sbb
aad
sbb
mov
testl
jge
pushf
inc
mov
push
sbb
stos
hlt
cmp
dec
ret
iret
and
adc
dec
subl
out
dec
or
xor
addr16
adc
jmp
adc
call
and
jmp
jne
jae
outsb
mov
fstl
in
or
lods
outsl
andb
lahf
lahf
repnz
dec
int3
pop
jb
mov
xchg
mov
or
adc
push
hlt
icebp
movsl
movsb
cltd
repz
jmp
jb
sub
sbb
sbb
cld
cmpsl
dec
int
cli
or
or
cli
or
pop
xchg
xor
push
fwait
lret
mov
idivb
mov
adc
xchg
loopne
jb
mov
fldl
lods
mov
stos
out
push
mov
xchg
mov
pop
fs
and
ret
or
sbbl
xchg
cmp
cs
push
fdivrl
cmpsb
call
mov
dec
in
xor
pop
push
pop
or
insb
dec
mov
lds
sti
sbb
dec
nop
mov
enter
icebp
fnstenv
jle
cmp
inc
aam
add
stc
shl
test
jg
sbb
dec
inc
and
pop
and
cld
mov
lods
lods
int
xor
repnz
outsl
iret
mov
dec
mov
into
imul
jbe
cmp
pop
daa
jno
inc
leave
cmpsb
imul
lahf
jne
pop
test
mov
pusha
into
shll
and
mov
out
sbb
lcallw
pushf
mov
mov
ror
mov
add
sahf
iret
popa
rclb
out
daa
add
dec
int3
cmp
mov
push
stos
adc
andl
mov
mov
out
outsb
int
mov
test
xchg
add
push
lcall
sbb
and
lock
fcomps
adc
push
sbb
ja
pop
scas
push
jge
xor
cmp
clc
and
push
bnd
pop
xchg
aaa
jnp
cwtl
sbb
shrb
addr16
inc
mov
mov
mov
in
es
mov
cmp
mov
cmc
mov
ss
and
in
stc
int
jnp
jbe
xor
mov
repnz
fisttps
cmpsb
outsl
lret
gs
or
insb
inc
out
pop
cmp
stos
in
xor
inc
xor
cmpb
loopne
pop
repnz
lods
cli
inc
mov
inc
jl
mov
lcall
insb
xchg
repz
and
shrl
popf
inc
ret
cmp
rcll
lods
mov
mov
or
outsl
pusha
aaa
imul
inc
shll
inc
sbb
test
int
lods
das
cmpsl
out
mov
dec
mov
push
fisttpl
sbb
add
out
test
xchg
lcall
xchg
out
shlb
mov
push
sub
sbbl
pusha
mov
mov
xorb
pop
cmp
pop
mov
loope
loopne
scas
mov
leave
mov
xchg
out
sarl
pop
and
inc
insb
je
and
jg
jno
pop
stc
popf
push
cltd
sti
push
jmp
adc
xchg
das
jmp
lret
nop
cltd
shll
xor
lds
clc
push
ds
cwtl
jbe
mov
and
mov
xchg
cmp
daa
pop
icebp
fwait
test
lods
adc
xor
iret
iret
fsubrs
addb
outsl
sub
stc
xchg
push
pop
xchg
pop
push
sbb
add
xchg
xor
stc
pop
add
lret
popa
mov
jecxz
sbb
fmuls
das
lds
out
push
out
sti
mov
movsb
dec
sahf
dec
inc
int3
add
mov
push
or
mov
push
mov
roll
cltd
jg
adc
dec
divb
add
push
xor
mov
push
loope
fnstcw
inc
push
and
adc
dec
shlb
shll
dec
and
cwtl
sbb
mov
stc
dec
test
les
fsubl
jns
mov
popl
add
cmp
or
or
mov
aas
push
pop
sub
pusha
sbb
xchg
pop
and
popa
dec
mov
andl
adc
jg
or
pop
xor
cld
or
xor
mov
sti
sbb
es
das
xchg
ret
mov
push
insl
cmp
stos
xchg
jp
loopne
pop
xor
out
in
sub
cmp
lret
add
or
add
es
xchg
or
jge
cmp
dec
adc
cwtl
push
xor
adc
push
xchg
std
and
ja
fcoml
sbb
adc
mov
fisubs
pusha
mov
mov
mov
cwtl
cmp
or
movsl
sbb
in
mov
dec
cmp
and
pop
mov
xchg
dec
mov
rcl
inc
loope
loop
push
les
pop
push
pop
cmp
outsl
push
loope
pop
fsts
movsb
mov
lret
mov
and
aam
test
daa
iret
add
shrb
jae
data16
ds
daa
into
repz
movl
imul
mov
leave
call
push
mov
clc
xchg
icebp
mov
punpckhdq
lret
addr16
pop
fsts
inc
loop
cld
jnp
and
imul
shrl
jmp
enter
movsl
stos
dec
xor
jl
sub
mov
or
pop
pop
rcll
repz
mov
icebp
inc
dec
push
pop
imul
adc
les
push
out
jne
test
jns
adcb
pop
pusha
incl
jle
fdivs
sub
sub
stos
lcall
and
jp
shlb
push
xchg
inc
jmp
test
mov
loope
xchg
in
out
pop
dec
movsb
repnz
pop
loop
pop
sub
pop
xrelease
dec
ret
inc
les
adc
sbb
mov
out
sub
mov
and
mov
jmp
mov
sub
mov
mov
js
in
insl
mov
cmp
pop
lock
js
into
inc
cmp
or
cld
or
insl
cmpsl
shll
rcll
outsb
lahf
lods
xlat
pop
bound
jmp
cld
sti
jecxz
lahf
shrl
rolb
or
cmp
lret
jne
adc
adc
fmuls
lock
inc
lcall
mov
sub
and
ror
mov
jne
push
push
jo
inc
dec
pop
mov
call
aad
lcall
adc
lods
or
add
sub
sub
mov
insl
sub
leave
cltd
mov
adc
fwait
mov
jb
test
mov
enter
dec
sbb
or
dec
pop
adc
outsl
stc
mov
pusha
enter
sbb
mov
jno
and
inc
mov
shrl
fisttpl
sbb
mov
scas
pop
and
dec
jnp
mov
jl
jae
es
mov
inc
test
sti
xor
xchg
aam
iret
es
cmp
dec
pop
inc
cmpsb
sub
jo
pop
cli
jae
out
jno
xchg
dec
orb
test
fmuls
jbe
or
xchg
push
jecxz
popa
std
scas
mov
mov
lds
dec
adc
xchg
repz
mov
mov
add
pop
nop
movsb
jne
loope
dec
les
in
pop
mov
lock
vpsrld
enter
int3
out
add
pop
sub
mov
pop
add
movsl
mov
jge
adc
das
es
xchg
popa
jl
arpl
scas
xchg
mov
sub
cld
cmp
mov
aas
and
mov
ret
imul
rclb
imul
pop
mov
add
xor
rol
bswap
lret
dec
lods
xor
add
pusha
test
and
lods
in
mov
test
xor
or
sbb
sub
adc
icebp
pop
negb
push
sub
dec
in
mov
jl
pusha
push
lret
pop
xor
push
pop
addr16
lea
jp
xor
jne
orb
and
pop
orl
rcr
sub
movsl
pop
jae
adc
adc
cwtl
and
push
push
inc
iret
lahf
cmp
sub
pop
jb
imul
ficoms
xor
cmp
or
or
cmp
sub
mov
inc
addl
and
sub
mov
stos
sbbb
mov
xchg
or
pop
ss
in
insb
add
inc
clc
mov
rorb
cmp
add
xor
mov
decb
addr16
inc
stos
xchg
inc
jle
das
cmpsl
sub
mov
je
stos
int
pop
or
mov
idivb
scas
inc
fiaddl
cmc
or
mov
scas
fisttpl
fisubl
mov
pop
xchg
test
fildl
out
mov
and
inc
fildl
push
xor
lods
inc
stc
jb
sub
outsl
and
jo
inc
cmp
fisttps
add
adc
imul
int3
and
out
pop
mov
mov
rorb
shlb
inc
or
or
push
or
and
rcrl
inc
stos
mov
mov
xchg
inc
cmp
push
sti
push
cli
mov
fildl
adc
movsb
xor
popa
xor
in
adc
mov
mov
bound
scas
out
fstps
imul
and
std
xchg
adc
sbb
jae
es
jae
inc
pop
decb
popf
aas
mov
dec
mov
jp
lock
pushf
lret
in
pop
jae
or
fwait
mov
dec
gs
and
jecxz
xor
mov
int
andl
out
lods
cmp
pop
xchg
dec
mov
sbb
xor
mov
je
mov
pop
lock
mov
mov
push
fucomp
mov
push
cwtl
movd
negl
jnp
sbb
dec
xchg
adc
dec
lret
jbe
push
adc
addr16
jo
xor
ret
sbb
and
aad
dec
pop
lret
mov
test
sub
call
mov
leave
push
fimuls
inc
bound
stos
ror
jl
sbb
stc
ret
das
mov
cld
mov
shrb
push
xor
cs
xor
push
lcall
rcr
jns
cltd
jmp
je
mov
adc
xorl
rorb
xchg
mov
push
dec
push
push
push
insb
jbe
sbb
ljmp
cmp
daa
and
ret
aad
movsb
lret
mov
fldt
loope
adc
lods
pop
loopw
lcall
adc
xchg
lret
jp
cmp
js
xchg
mov
shlb
leave
sbb
inc
out
dec
pop
sub
mov
aad
add
iret
push
add
sbb
ljmp
mov
jo
leave
popf
pop
and
and
dec
jmp
fcomps
aaa
jne
sahf
in
cmp
mov
xchg
addr16
mov
lea
int
xor
xor
adc
out
jecxz
sbb
imul
mov
sbbl
nop
pushf
and
mov
std
jle
or
imul
pusha
mov
outsb
mov
int
mov
ror
es
xchg
adcb
int
sbb
push
push
sti
inc
cs
mov
dec
scas
push
jbe
jo
rcll
insb
mov
ret
pop
pop
loop
fisttpl
shlb
in
cmp
int
testb
mov
icebp
das
xchg
jle
push
cwtl
enter
mov
repz
lock
pushf
ret
lahf
sbb
sub
adc
cltd
aas
dec
dec
xor
leave
fcmovb
and
gs
cmp
jnp
and
ds
pop
xchg
mov
adc
add
fwait
cmp
loop
cmp
or
xor
adcb
adc
cmp
cmp
mov
inc
cmp
outsl
push
xchg
daa
cmp
or
push
or
pop
add
mov
push
add
popf
pop
cltd
mov
lods
mov
jmp
add
stc
shrl
shrl
test
addr16
jnp
mov
data16
mov
pop
xchg
jo
jp
push
int
inc
das
loop
cmp
dec
cmp
pop
adc
inc
adc
movsb
push
mov
adc
inc
sarb
lea
lahf
jo
cmp
fildll
addl
sbb
das
push
cli
cld
pop
jge
inc
scas
leavew
add
xchg
adc
nop
cmpsl
cs
cli
icebp
or
inc
push
cli
jno
xchg
mov
fildll
jle
pop
sbb
loopne
sbb
adc
stos
push
lret
lcall
inc
push
stos
dec
or
into
mov
fnstsw
inc
xorl
dec
add
dec
outsb
lcall
cld
cmpsl
add
shrl
mov
jg
notb
popa
push
jle
pop
and
cli
ret
jo
in
push
or
clc
jns
movsl
mov
mov
mov
daa
pushf
cmpsb
fs
mov
scas
dec
mov
fldenv
mov
cmpsb
adc
mov
dec
mov
dec
and
fbstp
lea
repz
xor
loope
push
int
push
xor
and
out
popf
sub
push
jle
push
sti
lcall
pop
cs
fwait
dec
testb
inc
mov
imul
pop
cltd
cs
add
fistpll
pop
xchg
cs
cmpsb
fstl
dec
pop
and
cli
pop
vpshab
cmp
pop
cmp
pop
test
push
std
and
mov
fiaddl
loop
clc
sub
fbstp
hlt
ljmp
dec
cmpsl
imul
pop
in
ljmp
inc
ja
into
pop
or
ret
push
lock
and
mov
xor
sbb
adc
jp
xchg
add
imul
and
cmc
xchg
xchg
sbb
cmp
pop
ret
xor
jmp
xchg
adc
sub
jl
loope,pt
ja
push
int3
push
in
jp
aaa
lods
outsb
stos
xchg
adc
pop
cmc
and
jnp
pushf
es
xchg
push
mov
pop
sti
mov
dec
movsl
popa
mov
xor
icebp
adc
sub
pop
mov
pop
rcrb
call
inc
add
ficoml
lcall
fbld
jge
xor
push
push
jnp
jg
jg
inc
in
xchg
sub
je
xlat
lock
push
ds
jl
out
mov
sbb
fimuls
idivl
fcmovb
pusha
repnz
arpl
xlat
dec
enter
ljmp
and
sub
mov
xchg
dec
outsl
xchg
pop
je
ja
in
xchg
packuswb
cmpsb
rcl
arpl
add
inc
lods
loope
movsb
clc
cld
rorb
push
and
and
stos
push
sbb
imul
push
pushf
shrb
mov
mov
push
mov
cs
mov
jmp
mov
mov
test
inc
data16
into
insb
lcall
popf
test
addr16
xchg
ret
fidivl
shlb
push
push
lret
mov
pusha
sbb
data16
or
scas
adc
data16
das
andl
sbb
and
jmp
sbb
scas
test
mov
loopne,pt
pop
cmp
fdivrs
mov
hlt
jmp
sarb
and
jl
fucom
repz
aaa
enter
repnz
fistps
lcall
dec
push
push
ffreep
xor
mov
int
add
xchg
push
xlat
hlt
cmc
ret
setae
jo
xchg
cmpsl
xor
xchg
stos
dec
push
mov
lods
push
xor
fisubs
sbb
iret
movsl
inc
dec
mov
cld
insl
adc
jg
fistpl
mov
lock
sbb
sbb
xchg
push
cld
in
add
xor
pcmpgtb
mov
jge
xchg
ja
rorl
sbb
int3
in
add
mov
fs
push
xor
cmp
je
insb
jns
or
mov
mov
dec
fidivs
cli
pop
rorb
cmp
imul
mov
cmp
xor
or
push
xchg
and
lret
push
jbe
or
push
jo
roll
repnz
sub
cmc
mov
sbb
push
xchg
outsl
test
adc
fstpl
cld
xchg
xchg
dec
xor
and
rcrl
cmp
add
loop
add
cmc
and
cld
mov
xchg
movsl
xlat
fistps
cmp
iret
in
leave
mov
xchg
sbb
adc
jge
xor
xchg
in
aam
and
add
cmp
jmp
mov
xchg
inc
pop
or
add
sub
mov
iret
inc
mov
dec
mov
pop
xor
gs
sbb
lds
fs
scas
push
cmp
mov
ss
cmpsl
fs
lret
cmp
mov
in
mov
xlat
lret
mov
repnz
inc
mov
outsb
xor
fnsave
pop
jnp
dec
ja
movsb
xchg
call
lretw
and
out
lods
inc
iret
inc
sub
pop
testb
data16
mov
inc
lods
and
jne
xchg
and
pop
push
dec
or
jnp
pop
outsb
jmp
iret
pop
outsl
cmpsb
dec
fstl
adcl
ret
ja
stos
lret
sub
dec
gs
pop
ds
jo
shlb
cmp
and
shlb
add
faddl
clc
or
cltd
jp
push
dec
mov
push
enter
mov
bound
loop
adc
mov
cld
fwait
lcall
and
aam
sub
cli
sbb
pusha
dec
cmpl
jb
test
insl
jbe
mov
clc
xor
sarl
lods
mov
mov
stos
iret
push
mov
das
and
dec
mov
imul
aam
shlb
adc
lahf
stos
unpcklps
repnz
rcrb
jbe
orl
test
push
in
repnz
cmp
imul
movsl
fstpl
enter
jg
scas
jno
pop
aas
and
sahf
in
or
inc
jb
imul
cli
lret
cwtl
aam
pushf
dec
pop
push
add
je
ret
mov
jnp
les
fldl
dec
mov
pop
test
or
int
adcb
xchg
adc
stos
enterw
stc
and
sahf
imul
mov
add
push
add
test
jno
inc
mov
jecxz
cmpsb
mov
pop
fldt
sbb
mov
pop
add
xchg
sub
loopw
insl
xor
pop
in
cmp
xchg
jns
sbbl
pop
jge
sbb
sahf
ds
xchg
push
vxorps
nop
push
lods
mov
imul
mov
sbb
jb
cmp
adc
pop
popa
xchg
in
mov
cli
or
mov
and
imul
sbb
inc
cmc
jp
push
sti
int3
fdivrl
mov
pop
and
mov
adc
xchg
xchg
dec
test
jae
lret
daa
adc
dec
or
jne,pn
adc
jp
push
outsl
adc
mov
bound
mov
xor
push
xchg
jns
xchg
xor
shl
dec
es
ds
sub
push
sub
js
popa
jbe
es
pop
rolb
fisttpl
fimull
lcall
inc
add
ljmp
mov
jp
pusha
adc
enter
inc
xor
xor
in
lahf
aad
or
mov
xor
rorb
cmc
push
inc
sub
gs
jge
sarb
or
mov
cli
sbb
add
xlat
hlt
pop
dec
push
jle
daa
stos
fistps
popa
xor
repnz
popf
lods
rcr
sbb
ljmp
push
push
sub
or
dec
inc
outsl
dec
stc
test
loopne
pop
in
jge
bound
mov
fiaddl
shrl
or
inc
into
aam
rcrl
dec
cli
insl
sahf
push
jg
imul
rcll
pop
lahf
nopl
icebp
loopne
dec
and
lds
adc
mov
and
shl
push
push
jp,pn
add
cmp
mov
pop
popl
xchg
push
cwtl
or
jmp
call
ret
sbb
mov
push
jp
xchg
lds
mov
adc
inc
sub
ljmp
shlb
ret
in
adc
addb
bnd
mov
aaa
je
or
pop
fldenv
rcr
adc
adc
ret
mov
xchg
sbb
test
enter
rclb
out
mull
mov
push
int
clc
mov
push
push
movsl
out
pop
outsl
fidivl
jmp
dec
or
sub
or
aas
sbb
inc
andb
insl
mov
fxch
xor
pop
popf
adc
addr16
push
data16
xchg
fcompl
inc
jge
addr16
and
out
inc
dec
aad
adc
pop
fdivl
jg
push
popf
pop
mov
sbb
jecxz
dec
push
push
xchg
cmpsb
sbb
imul
movsl
andb
mov
sbb
sahf
or
mov
jecxz
xor
inc
and
mov
arpl
push
in
cmpsb
push
iret
push
xorl
adc
cmp
add
popf
mov
sbb
sub
sbb
mov
pop
mov
push
adc
daa
push
call
xchg
pop
mov
rcrl
cld
xchg
and
cmp
jecxz
sub
cmpsb
adc
pushf
mov
adc
mov
mov
ja
lock
imul
jne
jae
lahf
adc
xor
and
push
pop
es
xor
lods
and
addl
into
fnstenv
inc
xchg
mov
push
lahf
mov
xchg
mov
xor
dec
add
xor
xchg
inc
mov
fld
push
cmc
cmp
xor
push
movsl
call
mov
push
cmp
pop
and
cld
cmp
outsl
xchg
push
xor
ss
lret
popa
push
and
or
mov
jmp
inc
xor
xchg
or
add
sub
enter
jnp
jb
mov
lods
jo
repnz
subb
or
sub
outsl
fistpll
mov
sahf
ret
jge
mov
cmp
inc
shr
jcxz
sti
popl
aaa
jge
pop
pop
pop
cmp
mov
lods
hlt
push
sbb
jp
jnp
xor
loop
xchg
lea
mov
leave
lcall
sbb
out
movsl
clc
in
dec
in
or
sbb
mov
fcmove
mov
lods
fstps
das
jecxz
jo
and
popa
and
sub
adc
pop
and
jo
xor
jl
aam
out
jmp
inc
popa
mov
add
lods
out
mov
and
mov
aad
movl
or
rorl
lock
dec
imul
sbbb
jmp
mov
mov
mov
jge
outsb
add
insl
orb
pop
pop
aaa
xor
lret
xlat
cmp
mov
cwtl
mov
adc
jne
out
ds
mov
inc
mov
loope
push
popa
repz
test
pop
adc
dec
flds
lods
sub
jmp
push
sbb
mov
adc
inc
aaa
push
xchg
ja
mull
adc
sub
fimuls
and
xchg
jp
sub
test
sbb
pop
in
adc
adc
dec
sub
in
mov
inc
out
inc
daa
dec
addr16
push
push
xor
jns
rcrl
shl
inc
nop
sahf
addr16
data16
mov
adc
insl
add
or
pushf
call
mov
mov
adc
out
outsl
cmp
jg
cltd
pop
push
sbb
jnp
sub
mov
mov
mov
jbe
int
scas
das
xor
gs
xchg
test
push
mov
jb
sbb
mov
jns
outsb
cmp
or
in
xor
es
dec
pop
fwait
xor
and
inc
add
sbb
mov
fldcw
mull
push
fistpll
mov
into
in
or
repz
xor
fcoml
jle
sub
ret
mov
dec
inc
xchg
clc
mov
lds
dec
ja
add
mov
xchg
or
xchg
mov
push
xchg
add
jmp
cwtl
movsb
cs
int
mov
fwait
icebp
insl
mov
dec
xor
sub
xchg
xchg
xchg
lahf
and
mov
jmp
mov
ja
loop
cmp
adc
cmpsb
pushf
in
clc
inc
sbb
push
addr16
pop
das
or
sti
out
pop
in
shrl
lea
dec
fdivs
pop
jne
imul
push
sub
mov
je
lcall
inc
test
fidivs
push
das
mov
outsl
repz
mov
dec
mov
adc
push
mov
cmp
lods
repnz
pop
fistps
push
jp
mov
lods
cltd
or
push
adc
sahf
lea
andb
jp
adc
mov
push
push
or
lret
dec
popf
push
movsb
cld
stos
and
enter
push
icebp
inc
jbe
stc
sub
lea
cli
xchg
or
outsl
imul
adc
insl
xor
xchg
daa
and
xor
shr
mov
pop
inc
insl
jle
fwait
test
pop
fidivl
xor
mov
lret
jecxz
cmpsb
xchg
negl
cmpsl
stos
dec
pop
pop
push
lret
test
shll
adc
and
or
outsl
sar
inc
mov
gs
inc
je
jnp
lock
pushf
lcall
dec
mov
je
fisubrs
cmc
aaa
fstp
sbb
pop
rcrl
fwait
mov
xor
mov
inc
adc
rcll
xor
imul
call
cmp
icebp
dec
adc
sbb
sar
scas
lret
sbb
nop
or
les
add
fcoms
push
cmp
pop
fisttpl
inc
out
in
cmp
sub
pop
les
inc
lret
xor
pop
jecxz
mov
loop
push
outsl
addr16
inc
or
lret
push
cmp
into
stc
ja
cs
mov
and
int
fists
shll
adc
mov
jo
push
in
mov
lods
and
sahf
addr16
lcall
sbb
lea
mov
jnp
mov
adc
add
inc
pusha
cmc
dec
mov
xchg
shrl
push
in
lret
notl
mov
and
shl
scas
push
pop
add
or
and
in
jne
or
cmp
out
in
data16
cmp
js
fldcw
inc
movl
mov
push
and
push
cld
sahf
inc
test
pop
jl
lret
loop,pn
es
push
fildll
cwtl
push
int3
cmp
enter
in
xchg
adcb
lret
out
stos
inc
xchg
outsb
adc
fs
scas
sbb
add
sbb
aad
inc
and
jle
clc
lahf
repz
sbb
dec
mov
ret
jne
imul
scas
and
push
lock
std
fs
pop
cwtl
jne
popa
mov
test
xor
cmp
popa
and
xlat
fucomi
cmp
push
push
and
lret
mov
loop
fisubrs
cmp
aaa
mov
fnstsw
aad
hlt
dec
mov
outsl
pop
cmp
scas
pop
imul
hlt
shrl
loop
test
sti
ja
negb
data16
xor
inc
data16
cmp
add
mov
movsl
cmpsl
out
gs
into
inc
repnz
lods
ja
mov
repz
xor
enter
nop
lahf
jl
outsl
xchg
in
push
inc
pop
lods
outsl
push
lock
in
in
loop
lret
mov
orl
push
sbbl
push
in
loope
out
sub
push
call
cmc
mov
je
jmp
call
repnz
les
mov
cmpl
xchg
lahf
lahf
roll
cmp
jmp
or
insb
std
int
pop
shr
icebp
inc
dec
loop
pop
mov
sub
and
sbb
lcall
sub
lds
popf
mull
shrb
add
jb
sub
jno
pusha
or
jg
xlat
and
jmp
cmpsb
aam
and
pop
stos
addr16
sbb
pop
xchg
jae
pushf
in
movsl
daa
xor
jle
xchg
adc
fwait
or
xchg
and
jns
adcl
cmpsb
pmullw
repnz
inc
inc
into
mov
mov
je
pop
push
outsl
push
pop
idivl
lods
popa
lahf
pop
incb
pop
lods
gs
fcoml
imul
adc
jbe
xor
sub
test
push
js
lds
xor
out
mov
xchg
sar
push
sahf
lods
outsl
mov
ret
add
add
cmp
xchg
outsb
fistl
jb
fsubr
test
dec
add
adc
jnp
dec
out
push
imul
mov
int3
or
pop
movsb
aad
rolb
push
xchg
sub
inc
sbb
icebp
xchg
pop
push
sbb
sarl
sbb
pop
xchg
stc
pslld
push
cld
jle
inc
mov
hlt
sbb
aaa
fimull
cmp
xchg
les
fadds
jge
push
inc
imul
dec
mov
popa
daa
adc
andl
push
mov
cmp
mov
sahf
stos
es
xchg
repnz
xor
sub
inc
inc
fmul
clc
jle
sub
lea
mov
test
mov
out
xchg
movsl
aad
sub
call
mov
mov
mov
mov
pop
out
dec
xchg
fldt
pop
or
jno
dec
mov
pop
or
inc
aad
add
sub
xor
popf
jae
jo
inc
jae
adc
sbb
movsl
aaa
cs
jns
jecxz
call
jp
mov
push
nop
sub
mov
idivl
sahf
mov
adc
sub
push
adc
sub
in
nop
pop
xor
ficomps
ds
into
or
fwait
js
test
sbb
jmp
mov
insl
xlat
lds
mov
and
sub
cwtl
xchg
pop
xchg
xor
mov
add
sbb
test
xor
push
mov
js
test
xchg
sbb
mov
pushf
sub
adc
rorl
cmpsl
sbb
stos
lret
jl
push
or
pop
inc
sti
pop
mov
xchg
pop
add
dec
or
cmp
pop
into
jmp
sti
shll
inc
cmp
inc
bound
ss
testl
cli
out
jo
or
mov
sbb
adc
pop
sbb
push
out
pop
in
pop
je
cltd
in
dec
aas
gs
adc
push
adc
mov
repz
into
data16
push
into
mov
xor
adc
out
ja
sarl
and
fucom
int
mov
and
add
leave
jne
sub
or
ds
mov
mov
roll
mov
lcall
std
push
xchg
mov
scas
jecxz
sub
sahf
sbbl
fnstenvs
testb
fists
pushf
int3
popa
adc
addb
xchg
repnz
rcll
add
sbb
sub
in
loopne
sbb
mov
shl
dec
add
add
jge
out
sub
ret
repz
int3
pop
jl
mov
pop
adc
and
pop
shll
rorb
xor
mov
movsb
pop
pop
mov
and
ja
sbb
ljmp
mov
cmpsl
push
leave
dec
pmaxsw
dec
lock
sub
sub
dec
add
inc
pop
sub
jns
sbb
jge
push
nop
jp
js
out
ds
and
mov
inc
aad
pop
mov
lcall
rorb
mov
jae
jae
fnstenv
or
and
xorb
mov
jae
hlt
inc
pop
cmp
sbb
mov
jecxz
fnstsw
stos
jmp
das
push
inc
xchg
subb
js
or
in
cmp
and
and
pop
adc
xor
test
shll
andl
shl
daa
sub
push
inc
lock
push
mov
inc
pusha
aam
xor
out
xchg
jae
xor
sub
dec
fldl
xchg
cmp
std
push
dec
dec
rcll
mov
punpcklwd
cmp
xchg
negl
sub
ja
imul
cmp
test
or
mov
mov
shll
test
js
dec
in
xchg
pop
sub
addl
cmp
call
adc
imul
push
shrl
fadd
movsl
enter
es
jg
je
bound
push
fmuls
shlb
call
inc
mov
cmp
test
pusha
adc
jmp
inc
push
pop
call
fdivl
xchg
sbb
ret
adc
inc
idivb
mov
sarb
iret
fincstp
rclb
lahf
jg
mov
clc
or
lret
fcmovnu
push
cmp
dec
mov
ds
mov
mov
mov
adc
inc
inc
ss
btc
das
pop
push
in
sbb
aas
mov
sbb
out
or
cmp
shlb
add
roll
fwait
nop
lcall
xor
jmp
cmpsl
xor
mov
insl
inc
cltd
push
and
push
inc
jne
push
sbb
out
fidivl
icebp
mov
inc
into
out
inc
sbb
push
dec
das
jp
movsb
aas
daa
lods
mov
cmp
push
fsubl
cmpsb
or
add
jle
or
sar
xchg
xor
test
jle
icebp
data16
cmova
cmp
mov
xchg
cmp
xor
jne
cmp
arpl
or
xchg
mov
sarb
xchg
out
mov
xchg
cli
inc
ss
sahf
adc
fs
popf
sub
or
insl
cmp
sbb
ret
fwait
out
bound
mov
pop
pop
popa
sbb
imul
ja
push
mov
mov
sub
adc
jp
dec
jae
mov
add
push
ret
adc
sbb
pop
inc
push
inc
rol
jle
jle
repnz
std
pop
iret
loope
jp
jecxz
imul
dec
xlat
mov
cmpsb
enter
pxor
cmp
clc
jle
into
test
pop
insb
jp
sub
and
int
mov
mov
stos
xor
imul
lock
test
cmpsb
xor
push
push
test
cmpsl
push
xchg
shlb
out
or
sti
sub
aas
cmp
cmp
fidivl
fmul
mov
sub
or
inc
mul
jecxz
pushf
daa
imul
mov
das
cltd
fcmovnb
lcall
pop
hlt
sbb
sub
mov
test
aaa
push
push
fs
fbstp
call
lods
pop
mov
jb
out
dec
jne
mov
sub
mov
mov
xchg
push
addl
or
pop
jl
push
int3
xchg
testb
cmp
lahf
or
test
in
insb
sub
fstpt
xor
ret
xchg
sub
jnp
lock
add
lods
scas
es
rcll
push
pop
fidivl
mov
mov
jl
mov
jg
cmp
cmp
cmp
jge
aaa
fcoml
std
mov
push
lock
jge
pop
push
pop
pop
cmpsb
xchg
pop
push
roll
push
mov
push
lret
iret
in
mov
imul
gs
cmp
mov
mov
jg
mov
test
push
pop
add
repnz
gs
push
pusha
cltd
mov
and
jno
xor
das
mov
push
jmp
xchg
sbb
or
mov
xor
aas
pop
lea
aam
pop
leave
sbb
mov
sti
pop
out
movsb
mov
in
and
push
ljmp
enter
movsl
push
cmpsl
repz
aas
jae
and
aaa
or
jle
sbb
mov
cmp
adc
lock
adc
mov
cmp
cld
popf
mov
inc
adc
xor
inc
xor
stos
pop
popa
or
js
clc
mov
fcom
pop
adc
es
rcrb
push
sub
fmulp
pop
fcmovbe
loope
fwait
inc
aad
insl
ja
dec
adc
aaa
xor
enter
cmp
push
fcmovbe
mov
stos
aas
xlat
or
mov
lcall
adc
adc
and
jne
lret
cmpsb
movsl
add
loop
shl
or
fbstp
inc
aas
cmp
and
ljmp
push
lods
test
data16
mov
push
mov
mov
cmp
or
mov
std
inc
jmp
test
inc
add
repz
outsl
rcrb
fwait
xor
jge
jp
mov
push
icebp
pop
imul
roll
inc
stos
repz
xchg
mov
out
lods
inc
or
push
push
leave
es
fs
rcrb
notb
and
insl
add
fadds
mov
or
push
xlat
add
aad
xor
inc
or
or
mov
fildl
add
dec
and
cmp
mov
xchg
mov
stc
mov
mov
dec
cmp
stos
movsl
imul
push
or
jnp
mov
push
sub
add
stc
scas
mov
enter
in
ficompl
xlat
xor
inc
xor
into
lds
hlt
imul
das
into
adc
cmp
dec
hlt
sub
gs
and
pop
inc
push
xchg
mov
mov
or
cmp
cmpsl
int3
cli
repnz
iret
fcmovnbe
push
test
icebp
mov
ror
lret
push
outsl
orl
dec
popa
jae
jecxz
fsubrl
jae
dec
ficoms
out
das
cwtl
loope
mov
push
insl
mov
push
pop
xor
cmpsl
movsl
loopne
gs
pusha
mov
mov
lods
mov
adc
adc
push
out
inc
lret
mov
pop
jno
mov
int3
stos
je
push
inc
mov
out
repz
lds
js
inc
pushf
dec
cltd
xchg
pushf
movsb
leave
std
add
dec
cli
lds
data16
mov
mov
inc
shlb
popa
inc
int3
out
popf
je
das
aad
jge
nop
popf
dec
jge
fisttpll
imul
mov
clc
cmpsl
cmpsb
jo
stos
std
push
dec
push
shrl
stos
clc
les
or
fidivrl
repz
xchg
js
mov
dec
sbb
jmp
int
jp
push
dec
lret
sahf
lahf
shrl
pop
test
insl
int3
jne
cmpsl
cmp
xor
and
add
call
dec
adc
and
stos
cmp
nop
dec
dec
les
jb
sub
push
data16
cs
in
mov
and
popa
in
movsb
and
lods
dec
dec
outsb
xor
dec
insl
movsl
push
mov
or
xor
rclb
push
inc
sbb
imul
and
ja
sbb
add
jo
xchg
mov
xchg
pop
rcrl
daa
pop
xor
sub
mov
push
push
shlb
sbb
icebp
push
mov
mov
aas
and
les
and
cld
faddl
sub
xchg
xlat
mov
aad
pop
mov
push
jg
xor
inc
lds
xchg
push
sub
adc
xorb
imul
sbb
rorl
jmp
dec
lock
mov
mov
inc
rclb
push
push
pop
adc
jmp
loop
add
js
jae
push
fnstcw
mov
lock
les
les
sbb
sub
ret
sbb
add
cmp
pusha
insb
loop
mov
xor
lret
jae
dec
push
mov
mov
jmp
idivl
jmp
mov
cmp
or
les
and
sbb
and
dec
mov
lret
jbe
and
mov
sbb
cld
xchg
pop
add
mov
cmpl
loopne
ljmp
push
sbb
ja
int
push
fnstcw
jnp
adc
lret
inc
inc
push
divb
mov
xor
ret
pop
inc
mov
mov
cmc
add
cmc
popa
das
jge
add
xchg
aaa
adc
frstpm(287
sbb
add
addr16
inc
aam
pop
mov
pop
in
inc
incb
stc
push
inc
dec
cltd
int3
mov
popf
ficomps
xchg
add
mov
jns
cmpsl
cwtl
inc
dec
xchg
lret
mov
fs
inc
sub
aam
icebp
add
in
js
insl
fsubp
sub
dec
and
inc
shrl
xchg
xor
cmp
sti
cmp
jg
sub
cmpsb
or
mov
lahf
scas
add
and
dec
sub
pusha
mov
pop
push
xchg
popf
jge
inc
mov
data16
in
notb
fst
lock
jo
mov
scas
js
pop
fildll
xchg
out
jge
iret
mov
xlat
inc
repz
je
and
add
and
pushf
mov
ja
cmpsb
xor
ljmp
repz
inc
mov
push
sub
jae
xlat
xlat
test
mov
mov
lret
and
testl
aad
jecxz
dec
test
cmpsl
push
addr16
jl
inc
sub
fnstcw
or
sub
fiaddl
inc
lock
lcall
outsl
call
cli
dec
rolb
push
sub
mov
insl
fadd
les
add
mov
push
push
int3
rcl
push
call
mov
std
fsubl
rolb
jno
loop
mov
enter
outsl
out
mov
xor
shll
sub
fistpll
fisttpll
clc
xchg
cltd
mov
fisubl
es
ret
xchg
xlat
data16
orl
mov
jg
mov
js
push
xlat
cmp
and
mov
fldt
cmpb
cmp
cmpb
pop
lcall
ret
aad
jge
cmp
test
pusha
and
pop
push
popf
sbb
jo
les
mov
cmp
xchg
popf
pop
loopne
fstps
push
sti
out
fwait
insb
sub
int3
bound
loop
push
popf
push
lock
lret
mov
mov
push
fs
cmp
pop
and
sbb
in
shll
push
leave
mov
test
repnz
pop
xchg
push
push
inc
test
xchg
mov
push
into
mov
add
jbe,pn
cmp
jp
mov
sarb
fidivs
dec
insb
push
cli
fcmovnu
call
mov
insl
mov
movsb
lods
dec
jns
push
push
xchg
test
insl
sbb
into
jmp
cmp
out
mov
repz
adc
inc
ret
lret
negl
push
mov
jno
add
add
dec
push
push
mov
adc
jns
add
in
jne
in
pop
mov
std
cmp
popa
sbb
pop
leave
mov
add
mov
clc
lret
mov
pop
stc
aad
aas
repz
xor
mov
cwtl
out
pop
mov
das
push
nop
gs
sbb
fcmovnb
out
popa
and
add
fdivl
fldenv
enter
fs
outsl
inc
and
jge
pop
mov
fldt
out
sub
pop
outsb
ljmp
xorb
jne
pop
fucomi
jo
aam
clc
call
adc
xor
push
in
popa
shlb
mov
sbb
pop
xchg
mov
jg
pusha
jg
data16
test
inc
inc
jl
std
xchg
mov
stos
xor
movsb
das
inc
sub
dec
rcrb
sub
mov
jge,pn
shll
jecxz
lret
and
sbb
test
lret
push
not
add
mov
ds
push
xchg
cld
xor
sub
mov
push
fcompl
xor
adc
cwtl
mov
in
or
lret
push
push
test
mov
repz
cltd
add
dec
pusha
ret
outsl
jge
add
ss
leave
ds
jae
nop
scas
repnz
lea
mov
outsl
bound
rcll
ljmp
cmp
jl
cmp
inc
lods
push
out
push
adc
iret
cmp
push
cltd
cmp
xchg
push
insb
mov
add
push
mov
cmpsl
or
popf
inc
inc
sbb
jmp
jno
shlb
xlat
loopne
push
and
outsl
insb
jb
lods
lcall
out
adc
fs
ja
xchg
mov
jg
pop
or
lods
jmp
dec
sub
or
mov
addr16
mov
cld
out
push
mov
sub
push
cmc
repnz
insb
repz
cmc
jae
mov
les
and
test
adc
icebp
loopne
sbbl
pushf
pop
pop
dec
xchg
fwait
in
xchg
ret
cwtl
cwtl
cmp
rclb
mov
push
das
mov
pushf
push
adc
sub
xchg
repnz
int
sub
mov
jbe
xor
iret
xchg
xchg
and
cmp
inc
out
and
xchg
sar
or
mov
or
xchg
inc
add
add
repz
aam
push
lahf
inc
ret
arpl
and
push
jg
inc
mov
sbb
adcl
loop
gs
test
subb
mov
popa
arpl
rcr
lret
adc
in
loopne
inc
push
mov
pop
imul
aad
fistl
fld
pusha
mov
mov
fprem1
xchg
mov
jbe
cmpsl
fwait
dec
or
neg
repz
in
jnp
pop
shlb
add
lcall
push
int
push
out
das
cs
mov
cvtss2sd
jo
dec
loop
push
mov
sbb
inc
xor
cmp
pop
jb
ljmp
and
adc
jmp
je
or
test
dec
popl
call
leave
andb
inc
cwtl
adc
aas
scas
lcall
pop
ret
pushf
stos
repnz
data16
xchg
mov
int3
int
stos
push
testb
cmp
loopne
insl
push
fcmovbe
test
pop
mov
and
stos
sti
and
pop
mov
popf
xchg
std
movsl
inc
add
sub
sbbb
lret
pushf
and
lods
jle
add
mov
xchg
jp
adc
push
push
cmc
jg
icebp
push
icebp
jle
fidivrl
gs
or
fistl
push
movsl
push
lcall
fcoms
adc
mov
push
fsubrs
mov
xchg
mov
mov
inc
and
inc
pop
cmpl
lods
add
lods
mov
mov
push
jp
pop
adcl
dec
mov
adc
mov
and
imul
sahf
jg
cli
sub
pop
mov
test
lods
xchg
hlt
aad
popf
dec
mov
push
punpckhdq
cmp
mov
addr16
pop
cmc
std
aad
cmpl
add
clc
adc
adc
sbb
dec
daa
xchg
mov
adc
cld
dec
mov
mov
popf
std
test
into
data16
mov
inc
mov
fwait
sub
imul
mov
rcl
dec
inc
xchg
shll
lods
mov
scas
cmp
push
xchg
out
cmpsl
adc
fistpl
mov
and
mov
mov
sbb
dec
jp
jae
rcl
cld
iret
pop
lcall
pop
jne
push
jne
arpl
jmp
mov
subl
shlb
sbb
push
lock
cmpsl
xchg
es
push
xor
fidivl
cmp
push
or
std
or
push
mov
xor
fwait
stos
pop
out
inc
lret
insl
outsl
mov
inc
push
pop
shlb
mov
sub
addr16
pop
mov
es
stos
adc
lds
lcall
push
push
leave
sub
cld
ret
insb
shrl
lahf
pop
dec
xchg
repz
jo
mov
mov
cltd
jne
push
xor
pushf
jl
daa
adc
sub
sarb
inc
mov
pop
cwtl
dec
and
cltd
or
pop
les
fistpll
shlb
roll
sbb
js
dec
inc
jg
leave
or
pop
lea
jb
movsl
cmp
pusha
push
xor
cmp
lock
mov
sbb
pusha
and
and
lods
gs
push
ror
sti
inc
aaa
push
cmp
fwait
jge
adc
inc
sarb
pop
jo
ja
sti
xchg
mov
pop
cmpl
mov
repnz
inc
enter
dec
fadds
stc
xor
mov
push
int
dec
push
push
inc
xchg
dec
daa
push
insl
daa
dec
dec
popa
sbb
sbb
test
add
cs
aam
push
sbb
rorl
insl
mov
nop
sbb
jmp
pop
pop
push
loop
cwtl
lcall
mov
fdiv
pop
iret
dec
iret
xor
fldcw
xchg
or
lods
dec
outsb
pop
xor
ja
leave
mov
sub
push
hlt
sahf
xlat
pusha
sbb
and
scas
jnp
scas
mov
xor
out
movsb
fmull
jbe
and
xlat
xor
add
jl
jnp
xchg
repnz
ret
xor
add
sbb
test
jg
dec
scas
popa
dec
push
jno
repnz
mov
push
cmp
cmpsb
popa
fmul
jmp
mov
pop
xor
pushf
sub
mov
cmp
sbb
cmp
mov
out
add
sahf
pop
xor
rcrb
pop
pop
rol
cwtl
sti
lahf
and
xor
inc
push
mov
ja
sub
out
daa
and
jne
rorb
mov
movsl
push
jp
xchg
das
mov
icebp
mov
jmp
jle
repz
mov
or
xor
adc
and
sahf
pop
arpl
into
cltd
sbb
jl
iret
add
cltd
movsb
mov
gs
jns
jnp
jmp
and
add
test
pop
jmp
lret
jle
add
cld
popa
sbb
push
pop
and
aaa
sbb
mov
cmp
mov
imul
popa
nop
mov
lret
mov
mov
enter
int3
mov
ljmp
push
dec
pop
xchg
call
or
es
inc
xchg
jp
pushf
jo
push
xchg
jne
sub
cmp
sbb
stos
mov
xor
leave
scas
and
jbe
jle
pushf
ret
cmp
adc
adc
test
test
adc
fimuls
gs
cwtl
ja
cwtl
adc
movsb
outsb
jle
push
push
imul
inc
and
in
out
cmp
rorb
pop
js
call
fimull
lock
pop
test
jecxz
testl
jge
sbb
sahf
fs
mov
stos
jo
imul
mov
sub
jns
and
sti
xchg
jae
pop
xor
sub
ds
sub
xchg
andl
pop
sbbb
cmc
xchg
push
shl
repnz
dec
xchg
pusha
or
jb
inc
xor
inc
outsb
ret
sub
pop
ja
pop
pop
ds
je
test
test
jge
out
or
jae
sub
cltd
orb
adc
and
add
rclb
and
lcall
push
or
fdivrs
test
inc
sub
lret
jb
jg
mov
fs
aaa
lock
cli
sbbl
test
jmp
cltd
mov
add
mov
out
pop
pop
daa
mov
or
push
inc
arpl
scas
xorl
or
imul
and
out
ror
add
mov
lods
adc
and
push
out
mov
add
out
push
stc
jle
and
cli
lret
imul
or
inc
mov
jns
xchg
aad
add
inc
dec
fmul
es
fists
push
stc
je
mov
aad
not
rep
push
adc
inc
jae
in
fdivs
push
fstp
mov
sbb
std
mov
cmpsb
lea
ss
je
pop
fs
mov
aam
lods
stc
inc
xchg
mov
add
adc
add
inc
cmp
mov
and
aaa
mov
mov
and
fcoms
add
outsl
xor
outsl
mov
in
and
sub
jmp
inc
ss
out
cmp
cmp
sub
int
pop
jmp
stc
sub
and
cmp
pop
movsb
dec
lahf
adc
or
test
adc
sbb
mov
divl
mov
or
cwtl
cmp
jns
gs
xor
inc
test
scas
flds
sub
std
ljmp
mov
enter
lds
test
dec
fistpll
cmp
outsl
pop
mov
inc
stc
or
or
sbb
inc
loop
loopne
jne
pusha
xchg
stos
sti
push
mov
cmp
add
movsl
hlt
mov
pop
les
scas
fbstp
inc
mov
inc
jg
inc
fidivl
inc
out
ret
insb
xlat
xor
mov
rolb
mov
jg
repnz
orl
push
incl
scas
or
push
mov
dec
leave
push
sub
lret
adc
test
ret
adc
adc
jnp
sub
data16
int
cmc
cld
jp
mov
ss
pop
movsl
sbb
scas
js
sahf
roll
and
popf
out
jg
mov
iret
dec
cmc
jne
les
xor
adc
xlat
sub
arpl
sub
push
xlat
shr
jp
fldenv
out
add
jbe
shufps
aam
inc
dec
xchg
sub
stos
decl
sar
push
cmp
or
mov
loope
mov
mov
mov
mov
xor
mov
adc
adc
mov
les
in
jmp
pop
fwait
insb
or
inc
sbb
jns
and
mov
sbbb
cmp
or
sub
dec
xchg
cld
cmp
mov
addl
mov
adc
jmp
scas
lds
dec
push
lret
stc
jp
lret
adc
mov
xor
pusha
sahf
cmp
pop
sarb
sub
and
aaa
cmp
cwtl
dec
decb
and
ja
aaa
sub
mov
xor
dec
stos
ljmp
jae
pop
push
fidivs
mov
jecxz
xchg
mov
enter
addr16
push
mov
cmp
push
push
and
sbb
jmp
dec
sub
push
test
or
add
mov
and
addr16
sub
call
rorb
mov
xchg
ffree
push
icebp
or
mov
clc
test
xchg
push
out
sub
jne
sbbl
inc
clc
pushf
je
outsl
cmp
seta
xor
sbb
sub
sbb
jb
jp
cmpsb
sub
push
inc
pop
ja
jmp
cmc
push
sub
adc
nop
shlb
not
push
negb
lods
int3
mov
xchg
addr16
xchg
dec
roll
aad
gs
outsb
or
push
and
mov
mov
sbb
pop
sub
lret
cmp
ss
imul
cmp
sarl
repnz
add
adc
sbb
cld
enter
lods
outsb
std
test
mov
and
popf
mov
xor
pop
mov
in
cmp
inc
pop
jne
adc
call
lahf
leave
pusha
loop
mov
mov
int
clc
dec
fadds
shr
repnz
stos
xchg
add
inc
jno
jno
dec
xor
inc
adc
shlb
mov
inc
stos
popa
stos
xor
sahf
fisubrs
aaa
scas
xlat
mov
loop
out
adc
xor
call
or
in
add
and
lock
subl
dec
ret
add
jbe
cmp
fldcw
mov
push
sub
jle
jbe
arpl
jnp
sbb
xor
idivl
xor
out
or
jg
mov
in
ja
shl
test
lret
mov
lods
push
adc
repz
lods
pop
push
xchg
mov
pusha
mov
adc
bound
in
scas
ficomps
aas
add
imul
jb
mov
jge
jmp
insb
aad
pushf
jb
pop
mov
repz
cmovno
xchg
push
mov
pushf
inc
adc
sub
inc
aas
ret
dec
push
shll
xchg
push
sbb
das
or
pop
and
xchg
and
add
adc
repz
loop
mov
mov
add
push
adc
jae
xor
mov
sbb
mov
shll
mov
movl
sub
mov
iret
lods
jg
dec
aad
and
lahf
or
mov
mov
les
mov
cmp
add
cmpsl
cltd
cmc
mov
sbb
sub
cmp
push
push
addr16
lods
jo
xor
xchg
insb
daa
xor
add
and
mov
pop
lret
xchg
fnstenv
loope
xor
imul
inc
scas
xchg
jae
mov
jl
dec
jecxz
pop
xor
imul
filds
inc
out
nop
pop
jbe
xlat
lcall
and
hlt
mov
or
push
dec
fs
dec
inc
sbb
xchg
sbb
call
addb
jne
dec
pop
push
jb
jno
mov
xor
mov
pop
jne
sbb
mov
imull
rorl
xor
je
ficoms
mov
rcrl
push
adc
shl
out
sbb
push
ss
or
sbb
pop
jmp
dec
or
pop
or
sub
push
jbe
idiv
dec
andb
cmp
sub
xchg
mov
mov
cmpsb
xchg
push
stos
mov
fst
mov
dec
scas
cmp
out
es
icebp
xchg
pop
and
push
ja
ljmp
xor
testb
jg
mov
xchg
inc
stos
loopne
lahf
dec
insb
test
addb
arpl
out
mov
xor
and
or
int3
call
mov
fistpl
mov
pusha
sahf
mov
es
sbb
sub
adc
xor
mov
sbb
push
mov
mov
cmc
inc
cmpsl
movsb
cmpsl
popf
imul
dec
xor
sti
arpl
xchg
insb
pop
pop
rorb
out
xchg
repz
xor
pop
lret
mov
xorb
sahf
mov
mov
jo
cwtl
ficomps
xchg
idivl
mov
cmc
mov
pushf
in
pushf
out
cmpsb
stc
cmp
inc
xor
and
loop
adc
mov
shlb
jnp
add
or
fcomip
jne
dec
pop
scas
jle
xchg
in
push
pop
ret
loopne
fcomip
iret
xor
je
inc
mov
ret
mov
frstor
mov
arpl
ret
data16
pop
dec
ljmp
adc
pop
insl
stos
les
subb
xchg
sbb
and
dec
or
mov
xor
cltd
mov
sub
mov
call
mov
loope
cmp
leave
mov
or
fstpt
cmp
rcrb
fwait
ljmp
and
xadd
mov
in
cltd
out
sbb
xchg
das
fcmovnb
push
rclb
leave
negl
adc
fwait
bound
test
push
jno
test
dec
seta
test
and
or
movsl
shll
les
jg
dec
clc
xchg
ret
rcll
pop
dec
mov
xor
xor
enter
adc
add
test
test
lret
pop
pop
inc
xchg
push
imul
adc
js
jmp
cld
movsl
pop
cwtl
lahf
daa
rorb
mov
sub
out
bound
idivl
or
adc
test
test
movsb
lcall
inc
cwtl
int3
push
inc
outsb
scas
push
addl
add
pop
xchg
mov
in
inc
jp
jbe
out
ss
scas
mov
int
repnz
dec
iret
ja
cmp
jmp
cs
xchg
subb
push
test
mov
aam
jecxz
out
mov
js
adc
arpl
pusha
aaa
pop
enter
dec
cltd
test
inc
jmp
mov
stc
data16
cmpsl
lods
mov
int
pop
fstps
or
and
arpl
in
xchg
or
enter
pop
or
stc
std
loopne
or
and
push
jmp
pop
test
sahf
fwait
lea
cmpb
dec
lock
sbb
gs
jl
or
es
push
test
pop
jo
inc
test
in
hlt
inc
cmpsb
inc
push
repz
and
pop
pop
je
cmp
in
pushf
inc
xor
xchg
push
add
pop
mov
cwtl
and
xor
push
fwait
sbb
inc
aad
adc
cld
cwtl
sub
notb
fistpl
add
sti
dec
adc
shll
iret
push
leave
ret
out
xchg
cmp
push
ret
fisubs
movb
push
cs
fsub
xor
cmp
fidivrs
insl
pop
dec
mov
outsb
xor
dec
pop
std
lock
decl
mov
pop
and
mov
xor
push
jne
or
ret
call
nop
xchg
fcmovnb
stos
dec
scas
insl
jmp
jo
jge
push
repnz
pushf
and
loop
cmp
jbe
push
mov
mov
sub
cmp
test
dec
push
or
dec
ficoml
mov
sbb
dec
push
pop
push
inc
push
bound
cld
mov
jae
les
cmpsb
and
sbb
mov
xchg
mov
xlat
rorl
and
push
sbb
push
push
and
test
call
stc
dec
popf
add
sbb
lea
push
aad
adc
bound
cmp
xor
push
pop
icebp
fadds
pushf
sub
sti
or
mov
xchg
aas
repz
push
jmp
decl
out
testb
pop
std
mov
lds
bound
mov
or
xor
xchg
mov
rorb
mov
mov
and
cmp
inc
xchg
or
inc
sti
and
dec
push
mov
in
rol
repnz
xchg
dec
repnz
jle
data16
jecxz
xchg
flds
ror
fldcw
cli
mov
aad
cmp
xor
or
mov
stos
test
xor
popf
and
sahf
mov
nop
shrl
stos
or
fs
cmc
inc
xchg
mov
jo
mov
imul
sub
mov
orl
loopne
mov
add
loope
out
gs
arpl
mov
int3
nop
add
or
mov
xorb
shrb
adc
xor
das
lods
add
push
adc
data16
cmp
pop
jmp
test
dec
jl
mov
test
or
jno
imul
cmp
lret
in
daa
imul
xchg
xor
movsb
test
inc
ret
adcb
xorl
popf
mov
pushf
mov
sarb
pop
adc
sbb
paddd
lahf
lds
cld
repz
fisubrs
aas
jb
insl
mov
fmuls
mov
mov
imull
int
push
lcall
pushf
sarb
in
inc
inc
cld
out
or
sub
aaa
stos
cmp
test
adc
or
sub
sbb
out
push
inc
ss
adc
pop
in
icebp
or
pushf
mov
mov
mov
push
dec
xchg
xchg
push
add
pop
mov
sub
xchg
nop
xchg
pushf
ret
pop
nop
dec
dec
xor
clc
fidivl
les
movsl
in
dec
add
fisttps
add
or
pop
lahf
jno
aad
or
mov
xor
iret
imul
jb
in
dec
ja
adcb
sub
adc
repz
sbb
sub
inc
add
and
inc
fwait
bound
jecxz
dec
xor
cld
adc
aam
shr
cmp
pop
push
sub
and
xchg
adcl
loopne
out
adc
les
fnstenv
jp
pop
pop
inc
add
frstor
adc
xor
jno
sbb
push
testb
dec
sahf
mov
pop
in
mov
aam
sbb
fcompl
popf
push
sbb
inc
adc
lods
mov
int
sub
push
mov
push
cmp
add
push
lret
ret
mov
pusha
fisubrs
neg
cld
mov
adc
push
sbb
and
insl
inc
mov
sbb
add
adc
xchg
sbb
icebp
or
jns
repnz
rorb
xchg
or
sbb
and
popa
cli
sub
int3
rcrb
mov
jg
dec
mov
and
and
iret
stos
jge
pop
pop
xor
out
add
movsb
jecxz
push
call
push
sub
les
push
dec
lock
and
add
add
or
lcall
mov
fcompl
or
xchg
scas
cmpsb
bound
mov
jmp
mov
pop
push
insb
dec
call
and
insb
sbb
push
fstp
outsl
pop
pop
outsb
sub
jmp
jge
mov
mov
sub
repz
jmp
add
xor
pop
mov
dec
jmp
stos
sti
adc
scas
outsl
and
aad
pop
adc
push
mov
nop
xor
jmp
outsb
sbb
xor
dec
pop
xchg
mov
ja
xor
cmp
stc
out
vmovsd
fistpl
cmpsl
shl
pop
mov
into
inc
xchg
jno
xchg
dec
xchg
cltd
inc
gs
testb
shl
adc
rcl
stos
pushf
shlb
adc
cmpsl
js
add
jne
test
ja
lods
jp
sub
std
push
dec
popf
inc
jp
pop
push
arpl
jmp
sbb
push
rcl
push
add
mov
popf
mov
hlt
mov
or
ljmp
sub
int
aaa
cmpsl
cmp
inc
sub
xchg
adc
scas
leave
mov
or
jae
lcall
andb
ficompl
inc
dec
adc
imul
push
scas
jbe
call
inc
aaa
adc
cwtl
loopne
les
out
push
stos
enter
sub
mov
cmpb
ror
fcomps
shl
loopne
dec
dec
dec
shll
sar
ficomps
fcoml
scas
test
mov
sub
je
pop
mov
das
cmp
xchg
dec
adc
or
stos
loop
jnp
and
ss
pop
xor
in
rolb
loopne
push
arpl
mov
popf
push
cmpsl
insb
ror
or
pop
adc
rorl
push
out
adc
pop
push
fsubrs
ret
xorb
pop
es
cmp
adc
and
dec
sarl
mov
sbb
or
int
daa
xorl
mov
lret
out
sub
sub
ror
push
cmc
aad
hlt
mov
mov
sub
cli
inc
std
daa
pop
imul
xchg
adc
xor
xor
push
fwait
stos
or
pusha
enter
pop
inc
jle
insb
mov
movsb
mov
lods
lahf
test
or
sarl
jae
mov
jmp
mov
lahf
sbb
std
inc
pop
aam
loopne
hlt
iret
jmp
jl
sti
insl
sbb
mov
lea
pop
popa
mov
ss
imul
push
popa
cltd
dec
mov
ds
lea
mov
aam
cmp
lods
cmpsb
sbb
lods
adc
xlat
test
xchg
call
cmp
push
add
mov
test
inc
xor
mov
pop
scas
cmp
popa
fdivs
int3
enter
mov
mov
add
xor
mov
adc
in
jae
fdivs
sti
pop
and
repz
pop
mov
and
lds
in
push
push
add
dec
cmp
mov
cmpsl
scas
mov
sub
movsb
ss
lea
gs
cltd
cmpsb
test
cwtl
and
jo
testl
std
je
push
mov
out
sub
push
and
push
out
jo
sti
push
mov
pmaddwd
dec
hlt
jecxz
mov
gs
wbinvd
popa
incb
pop
jns
and
and
cmp
insb
roll
lret
fisttpl
lds
jo
dec
fdivrl
das
popf
add
jmp
clc
sub
je
jne
jp
iret
sbb
enter
and
push
mov
scas
sarb
test
push
mov
mov
ret
jmp
incl
fimuls
sub
mov
cmp
mov
xchg
cmp
stc
lods
cmpsl
out
mov
push
mov
insl
cmp
xlat
insl
ds
popf
in
mov
sub
add
dec
mov
cli
das
and
inc
cmpsb
std
sbb
mov
shr
outsb
mov
loope
mov
mov
push
push
jecxz
add
jb
call
rclb
dec
cwtl
ret
mov
ds
or
sub
mov
cld
lahf
add
sbb
pushf
scas
out
xchg
rorl
adc
call
cmp
and
pop
lcall
inc
stc
mov
and
add
pusha
lret
stos
sub
lret
enter
or
into
jle
xchg
sbb
cltd
add
loopne
adc
lahf
add
push
mov
mov
xchg
mov
push
popa
std
or
loope
pmullw
mov
fsts
outsb
inc
cmp
lret
test
xchg
jmp
add
in
outsb
pop
xchg
xchg
loop
iret
xor
dec
lret
mov
sahf
into
sbb
jle
rorl
jne
inc
das
or
add
test
inc
into
inc
jecxz
pop
xchg
pop
xor
push
dec
movsl
mov
aas
nop
cmp
inc
and
xor
mov
fmuls
jae
jle
pop
push
cmp
jmp
pop
mov
out
jb
sub
inc
fstps
loopne
mov
sub
dec
jb
sbb
xor
cs
test
cmp
lods
mov
test
fimuls
jbe
push
jecxz
add
cmp
xadd
push
subb
pop
push
dec
push
mov
xor
lcall
sub
dec
repz
sbb
pushf
shrl
cmpsb
movsb
cmp
lods
and
cmp
aad
inc
push
ret
cli
mull
cmp
mov
out
or
and
jp
pop
inc
jle
dec
cli
mov
push
fisttpll
cwtl
push
mov
cli
jge
pop
mov
fdivl
jg
xchg
fisubl
sbbb
xchg
fcoml
cmpsb
push
fcoml
bound
imul
mov
sub
shlb
outsl
cmpsl
std
scas
mov
cmpsl
jge
push
dec
scas
cs
or
andl
je
jnp
bound
xchg
sbb
inc
pusha
cs
inc
cs
ret
jae
lods
negb
push
in
stos
adc
push
dec
adc
dec
or
sub
movsl
inc
pushf
arpl
mov
mov
popa
pop
push
or
jge
mov
out
pop
aam
stc
push
or
sub
dec
mov
cltd
mov
jnp
mov
lea
and
jbe
das
cwtl
nop
inc
adc
cmp
aaa
ret
ret
jo
inc
rcrb
shll
scas
xor
int3
pop
aad
enter
xor
movsl
and
decl
pop
out
rcr
lret
jae
add
je
mov
xor
cmpsb
js
fistl
outsl
aad
xchg
movsl
pushf
mov
push
int3
xchg
pop
cs
test
sbb
aam
jle
jbe
aam
stos
fcmovbe
inc
sahf
xor
inc
xchg
cld
js
sub
push
pusha
dec
mov
andl
cltd
mov
sbb
and
lahf
lods
vmread
lret
adc
fisubl
xchg
inc
pop
lahf
xchg
jmp
lret
or
mov
movsb
pop
cmp
pop
jb
lea
mov
les
or
push
or
in
rolb
pop
sarb
in
sbb
mov
mov
mov
dec
mov
cmovs
cld
cmc
jmp
scas
scas
hlt
daa
push
sbb
sbb
mov
pop
fstps
cltd
mov
js
jo,pn
sub
es
pop
pop
xor
pop
lods
call
cmp
lock
lods
sub
int3
mov
out
mov
rolb
mov
lret
lret
cmpsw
xor
aam
dec
rcl
test
mov
xchg
pop
mov
fsubrs
adc
add
sarb
shr
inc
add
inc
jg
adc
dec
jge
out
mov
mov
pop
inc
sbb
pop
add
push
push
and
jg
or
arpl
sti
pop
icebp
insl
cld
test
and
imul
sbb
push
cmp
int
push
push
aad
fistl
loop
cld
repnz
mov
rcr
and
jg,pt
cmp
test
hlt
imul
or
sbb
je
sbbl
andb
mov
shrd
cmp
cld
push
xor
lds
add
fstpt
add
mov
add
xor
shl
push
rcrl
shr
lcall
outsl
push
clc
out
adc
sub
push
fdivrl
cmp
xlat
cmp
jg
add
dec
je
enter
cltd
inc
and
sbb
mov
and
fidivrs
in
cli
shl
jmp
cmp
mov
fs
lret
ss
cwtl
scas
cmp
in
repz
arpl
sahf
or
push
lcall
daa
or
lock
jno
scas
cmp
cmp
in
iret
xor
popa
pop
xchg
aas
lret
in
ss
int
jle
loope
and
fstpt
push
push
push
imul
das
ss
mov
sbb
mov
std
jno
sbb
lods
jne
fcoml
rcll
mov
lods
pushf
xor
push
in
sub
lahf
jne
hlt
jp
dec
push
cmc
inc
lret
pop
cmpsb
repz
push
dec
push
mov
pusha
jl
or
incl
inc
mov
jle
icebp
clc
mov
call
sub
daa
rclb
ret
pop
cmpsb
fcomi
fnstcw
xchg
pop
mov
pushf
sub
or
cmp
pop
aaa
xchg
lea
push
jge
xchg
nop
movl
inc
fsubrs
fistpl
sbbb
push
mov
cmpb
roll
faddl
fwait
popa
filds
mov
repnz
sub
or
bound
leave
negb
in
test
mov
push
dec
enter
add
sub
loope
enter
lods
sti
xchg
out
sub
adcl
cmc
inc
aaa
adc
cmp
ret
lods
out
mov
cwtl
mov
jns
push
push
lret
push
js
fsubrs
test
cltd
sbb
push
push
lods
fwait
inc
cwtl
inc
or
jle
lahf
shl
and
push
mov
sub
enter
adcb
cmpsb
or
in
gs
int3
lret
xchg
push
mov
push
mov
push
sub
pusha
and
in
mov
mov
aad
push
push
inc
test
rcr
fcoml
or
sldt
push
int3
sub
cmove
mov
or
mov
xchg
push
popf
push
je
xor
push
aaa
into
nop
mov
fstps
cli
inc
cs
sarl
xchg
stos
xor
xchg
mov
xor
cmp
mov
pop
and
push
mov
add
mov
cld
cmc
test
int3
int3
inc
cmp
jns
adcl
sbb
adc
shr
outsl
scas
xor
orb
push
aam
inc
loopne
inc
fwait
xchg
insl
lret
cld
popa
sbb
ds
pop
inc
sbb
fwait
inc
out
add
or
mov
lret
and
rcrb
pop
aad
mov
pop
inc
inc
jo
fdivrs
movsl
or
xchg
aad
in
dec
push
pop
or
cmp
iret
inc
loope
sahf
jle
sub
pop
sarl
cmpb
lar
repz
out
sbb
jmp
and
or
cmp
xlat
dec
xchg
sbb
fs
jno
fwait
rol
pop
lock
lcall
dec
divb
enter
mov
cmpsb
in
stc
cmp
mov
mov
filds
rorb
int3
jne
mov
gs
lret
ret
mov
fwait
ds
rolb
clc
clc
and
imul
add
aas
xor
mov
mov
add
add
xchg
fs
cmp
push
adc
fsubl
stos
cli
xchg
and
and
cmp
inc
enter
inc
test
shlb
into
pop
sub
adc
sub
mov
and
dec
pop
ja
les
inc
sub
cmp
cmpsl
testb
pop
cmp
inc
fs
or
xor
cmp
das
xchg
mov
lcall
mov
test
fcom
add
mov
lret
rorl
ret
dec
pushf
popa
xchg
outsb
fs
pop
lods
xor
adc
iret
mov
outsl
lds
pop
push
jbe
cmp
popa
dec
jb
pop
bound
sbb
add
cmp
and
sahf
lret
and
bound
xor
mov
jle
pop
dec
insl
out
stc
dec
or
clc
xor
notb
les
repnz
fwait
xor
call
loopne
xlat
cmp
movsb
mov
or
in
pop
or
mov
iret
mov
pop
insb
push
cmp
addr16
adc
dec
testl
dec
out
cmpsl
adc
sub
pop
inc
xor
adc
clc
rol
loop
in
cmp
addr16
popf
ret
arpl
sbb
sahf
pop
xor
xor
xchg
pop
test
movsl
push
sbb
mov
mov
stos
adc
insl
sub
fnop
xchg
loop
mov
push
enter
jmp
fabs
les
enter
jge
or
hlt
iret
rcr
xor
or
ret
loop
xchg
ficoml
cli
test
shrb
lcall
out
cli
sbb
add
adc
arpl
jnp
popa
xchg
pop
mov
add
xchg
inc
sarl
lahf
imul
movl
lds
adc
pop
jae,pn
mov
into
scas
loopne
dec
mov
lea
orl
pop
fidivs
ret
scas
push
xchg
das
fldenv
xchg
xor
std
cld
add
ljmp
repnz
push
rorb
push
adc
xor
icebp
imul
ja
xchg
push
testl
dec
mov
dec
push
jge
lcall
adc
push
dec
lret
cmpsl
pop
stc
fcmovne
sahf
mov
pop
pusha
icebp
stos
inc
pushl
iret
into
mov
xor
fsubrp
in
inc
mov
sub
pop
push
stos
xchg
fcmovu
jge
movsb
xor
adc
out
lahf
cmp
adc
stc
outsl
fmulp
pop
push
cld
lock
or
pop
push
fisttps
mov
out
and
bound
stos
add
mov
nop
mov
mov
lret
mov
test
adc
and
loop
mov
lds
xor
outsb
jbe
adc
cmp
fistps
lret
ja
int
cmp
insl
push
adc
and
push
movsb
aam
je
imul
cli
insb
and
dec
xchg
ljmp
dec
jg
lahf
cli
lds
xlat
arpl
or
loope
fnsave
into
mov
stos
and
test
cs
addb
jbe
cmpsl
out
jmp
loope
ja
or
subl
shl
ficomps
cmp
lret
hlt
xor
sti
sahf
add
and
rcrl
mov
mov
or
lahf
inc
aas
mov
mov
insb
pop
repz
ret
ss
pusha
cmp
out
or
aad
divb
xchg
xor
push
ss
pop
dec
inc
add
push
cmp
test
push
xchg
jno
xor
lea
es
ret
add
mov
call
incl
icebp
aaa
negl
lods
daa
dec
popa
pusha
decl
sbb
das
xchg
test
ljmp
mov
jl
push
icebp
add
jmp
xchg
jmp
imul
cwtl
popa
ror
int
jg
insl
mov
jnp
into
negb
sahf
mov
stc
test
iret
orl
xchg
sbb
std
sahf
ret
sbb
out
aad
jne
sbb
aas
es
mov
adc
sbb
test
cmp
lock
jb
or
inc
pop
fs
pop
dec
aad
cmp
adc
outsb
iret
int
mov
dec
loope
xchg
jns
sub
in
jp
sbb
mov
or
cmpsb
adc
pushf
add
loop
mov
dec
loop
add
sub
jmp
shll
mov
ret
pop
or
clc
jge
jnp
std
out
in
movzwl
pop
adc
nop
imul
cmp
xchg
mov
xchg
adc
popf
divb
jnp
push
pf2id
jl
cmp
jnp
push
les
jbe
fdivrl
or
sub
dec
mov
xor
dec
cli
dec
ja
inc
ret
push
loope
call
jo
jo
rcr
imul
xchg
xor
cmp
insb
dec
or
stc
call
add
xor
mov
jecxz
mov
sbb
cmp
jecxz
fdivrs
jae
push
test
dec
xchg
cmp
das
fisubl
jle
push
gs
dec
adc
and
dec
jecxz
scas
xchg
mov
sbb
mov
movsl
data16
sbb
int3
mov
xor
repnz
rolb
xchg
cwtl
mov
or
dec
inc
sbb
test
push
lds
pop
andl
addr16
repz
out
pop
or
lods
arpl
sbb
test
outsb
mov
addl
loop
mov
incl
out
sbb
addr16
incb
adc
pop
in
mov
bound
pop
jno
cmpb
xor
in
les
notl
xor
lcall
xchg
in
fsubl
and
out
and
cmp
pop
xor
lahf
dec
cwtl
loopne
lcall
popf
adc
mov
dec
subb
nop
dec
push
and
les
cltd
rclb
js
mov
dec
pop
jae
cwtl
push
xchg
mov
jecxz
pusha
inc
fstpl
mov
ja
test
sti
addl
mov
push
mov
xchg
cmpsl
pop
shl
adc
ret
add
testb
sub
push
pop
lods
xor
mov
jmp
cmp
cmpl
push
roll
aam
rclb
je
jo
cwtl
cmp
mov
insl
push
inc
push
filds
mov
pop
cmp
sub
icebp
cmp
enter
mov
pop
push
rcll
mov
or
pop
cmp
into
test
cmp
pop
test
mov
jno
pusha
mov
push
call
sbb
bound
push
xchg
dec
lods
mov
shl
aad
jge
mov
inc
jno
sahf
aaa
dec
inc
pushf
jge
xlat
mov
repz
mov
dec
leave
mov
sti
sbb
daa
mov
aam
mov
int
out
cmc
lret
movsl
clc
test
xor
push
cmp
and
stos
ret
cmp
imul
jnp
inc
scas
inc
push
cmp
mov
mov
fisubl
imul
or
jle
push
hlt
mov
mov
mov
xchg
inc
cld
xlat
sti
push
mov
push
mov
inc
ficompl
push
mov
jge
push
fisttpll
xor
sbb
mov
sub
push
test
idivl
enter
sub
pop
pop
pop
addr16
sub
loope
fcoml
insb
sbb
ret
push
push
mov
sti
jnp
jns
fisubrl
cli
or
sub
adc
cwtl
lods
mov
subb
sub
out
dec
adc
out
call
pushf
push
adc
pop
add
sub
andl
dec
popa
mov
outsb
lcall
es
or
out
dec
pushf
adc
jno
imul
cmp
jnp
inc
scas
jmp
jno
jnp
pop
dec
dec
ror
add
xchg
test
inc
lret
adc
adc
add
cltd
mov
jmp
mov
jecxz
hlt
cmpsl
add
xor
or
dec
leave
sahf
inc
push
incl
dec
adc
into
pop
adc
cmpsb
push
rcl
and
push
shlb
adc
lock
add
mov
test
sbbl
pop
add
lret
or
shlb
jnp
int3
xchg
jmp
sti
lods
cmp
cmp
test
mov
pop
pusha
adc
xlat
inc
pop
push
scas
pusha
add
jg
mov
push
add
pushf
jg
mov
xor
jns
or
ja
and
pop
ror
enter
sub
cli
std
mov
sub
pop
imul
push
xchg
aam
jae
cwtl
push
mov
push
das
test
jb
xchg
jb
enter
cmp
mov
inc
scas
dec
pushf
movsb
fwait
in
push
xchg
xor
stc
xchg
xchg
mov
pop
stos
call
fsubs
in
add
int3
arpl
mov
enter
leave
pop
fdivl
shll
shrl
xor
lods
cmc
out
xchg
mov
cmp
das
ljmp
pop
inc
out
pusha
cmp
cltd
addl
pop
daa
add
push
or
mov
xchg
xchg
in
filds
stc
cmp
outsb
dec
mov
jg
aad
stos
out
sub
cld
dec
mov
enter
call
inc
xchg
cmp
add
inc
jp
lds
adc
and
scas
sub
fimuls
or
scas
add
std
leave
enter
mov
push
and
ds
jo
mov
dec
jo
in
xor
cltd
mov
rclb
sarl
rol
pop
mov
pop
jl
adc
mov
or
aaa
jo
or
cmpsl
mov
cmp
jge
jl
adc
jle
stos
cli
outsb
jp
mov
std
outsb
adc
insb
xchg
sbb
mov
add
icebp
sub
cld
jp
leave
push
add
ljmp
addr16
insb
or
hlt
or
enter
ljmp
stos
push
xchg
addl
adc
mov
pop
cmp
add
push
pop
jmp
pop
enter
jo
cwtl
cmc
cmpsl
xor
dec
imul
adc
adc
jg
jge
adc
cmc
pop
push
cmpl
sbb
std
sbb
jle
mov
jp
pop
cmpxchg
call
movsl
addr16
xchg
mov
mov
ret
aam
adc
in
ja
sub
enter
push
iret
add
mov
loopne
aad
adc
test
ret
cmp
cmp
dec
aad
not
mov
int
and
sbb
std
arpl
xor
int
pop
lock
push
loopne
mov
sbb
cltd
xor
das
cmp
das
inc
in
clc
lea
aam
insl
test
mov
dec
mov
fwait
nop
outsb
mov
lea
jbe
jnp
jbe
jp
or
add
int
mov
xor
and
mov
sub
mov
cmp
imul
xchg
or
sub
xlat
sub
push
mov
imul
lock
mov
test
outsb
scas
jae
mov
inc
ret
xchg
addr16
sub
cmp
xor
in
aam
cld
cli
pop
or
cmpsb
xchg
scas
sub
push
sbb
inc
imul
or
popa
sbb
mov
icebp
inc
and
hlt
pop
fpatan
jp
mov
or
mov
clc
mov
fs
pushf
ffree
cmp
pusha
icebp
xchg
sbb
dec
mov
add
pop
inc
lret
stos
adc
clc
xor
and
and
pop
dec
xchg
in
repz
jmp
jl
gs
sbb
inc
gs
testl
popa
sarl
pop
stc
push
adc
push
pop
fnstcw
ret
imul
sub
dec
push
sahf
inc
push
push
adc
inc
into
fnsave
outsl
or
repnz
jbe
pop
ljmp
lea
add
jmp
shrl
repnz
scas
stc
js
push
ds
pop
mov
pop
jo
out
or
sub
gs
rclb
sbbb
repz
and
sub
adc
movsb
or
pop
stos
mov
add
shrl
in
jnp
xchg
ja
aas
mov
ss
xchg
fimull
cld
data16
lds
movb
into
into
sahf
jmp
pop
and
add
and
insl
xchg
in
in
test
mov
es
and
aam
push
push
out
xlat
jle
in
jle
mov
inc
stc
popa
xchg
add
lcall
and
mov
mov
add
jno
inc
test
leave
jle
sub
repnz
mov
imul
pop
out
imul
test
fiadds
push
data16
lret
jo
pop
adc
je
xor
movd
xor
sti
in
sub
loope
mov
cmp
and
loope
pushf
mov
mov
jno
mov
stos
cs
xchg
sub
and
scas
out
insb
movb
or
jge
out
into
nop
inc
mov
or
cmpsl
cmp
pop
addr16
pop
push
addl
mov
mov
test
mov
or
jb
sbb
sahf
loope
mov
fdiv
cmp
inc
out
pop
mov
mov
xlat
and
mov
mov
xchg
mov
xor
mov
out
sbbl
loope
icebp
pop
sub
mov
xor
inc
insb
add
icebp
push
outsl
mov
sub
adc
cmp
fnstenv
jl
xor
popa
shrl
mov
or
cld
shrb
aaa
jmp
subb
daa
call
aas
and
or
and
repz
sbb
mov
xchg
ljmp
inc
mov
xchg
shll
add
sbb
mov
nop
add
das
jp
add
mov
std
add
sbb
pop
cmp
pushf
es
ds
mov
jmp
out
das
fs
mov
pop
xchg
stos
fadds
mov
mov
pop
fiadds
jno
or
out
xlat
xchg
sub
dec
push
scas
inc
mov
xor
leave
and
ja
cmpsl
cmp
lcall
or
mov
mov
cmp
fwait
cmpsb
mov
cli
mov
push
in
pusha
and
dec
sub
ss
dec
adc
push
push
in
and
jl
fwait
dec
adc
cli
stc
bound
mov
les
push
pop
push
push
andb
push
fcompl
inc
pop
mov
adc
dec
xor
xor
mov
aam
jg
push
xchg
inc
sahf
pop
push
iret
sub
addr16
sahf
or
cwtl
pushf
push
push
pop
xchg
mov
int
loop
sbbl
and
arpl
rolw
xlat
test
sbb
adc
xor
sbb
repz
notl
notl
jns
inc
clc
aas
and
cmpsb
mov
mov
or
adc
lods
mov
repz
into
shrb
pop
ret
test
into
and
sbbb
mov
cld
dec
filds
xchg
adc
inc
das
xor
add
sahf
sub
shlb
leave
sbb
pop
cld
mov
and
rcl
dec
add
iret
xlat
inc
jb
push
push
int
xor
xchg
and
out
stos
clc
ja
out
std
adc
test
xchg
cmpsb
and
aad
out
lods
std
arpl
movl
rclb
xchg
push
movsb
lret
jnp
xchg
mov
pop
xor
sub
mov
es
sbb
jne
mov
jnp
and
clc
and
mov
inc
sahf
adc
enter
mov
sbb
or
xchg
ja
mov
nop
fwait
lret
hlt
mov
push
ja
jp
or
jo
adc
mov
add
dec
fiaddl
ljmp
out
push
jmp
xor
outsb
cmp
add
jecxz
cmp
dec
nop
cmp
add
inc
cwtl
les
insl
jmp
aaa
arpl
xor
jbe
pop
lods
fstpl
out
mov
aaa
in
xlat
aas
hlt
jae
jns
dec
xchg
ret
int3
xlat
cld
mov
mov
xchg
fildl
xchg
test
aas
out
lods
das
fcmovb
das
ljmp
mov
dec
mov
out
fmuls
mov
bound
ror
test
sub
push
mov
ljmp
das
mov
lods
iret
sbb
sahf
pushf
xchg
lret
inc
lcall
jp
mov
test
cmp
add
iret
out
xchg
int
push
cmpsl
jmp
xchg
jae
and
mov
sti
in
icebp
rcrb
sbb
push
popaw
jecxz
cwtl
pop
addr16
push
sbb
jecxz
and
mov
aad
test
popf
out
jnp
aas
add
shll
mov
sub
mov
test
sbbl
cld
test
pop
dec
cmpl
push
xchg
inc
jg
mov
fldl
xchg
repz
push
ret
mov
pop
add
cltd
cmc
adc
dec
and
and
movsb
dec
fsubs
dec
fdivrs
mov
int
pop
imul
jecxz
in
leave
out
jb
mov
sbb
adc
dec
pop
mov
repz
loop
xchg
rcrb
xlat
shll
jno
sub
jmp
or
imul
sbb
scas
jnp
mov
mov
outsb
xor
jle
sub
stc
gs
mov
cmpsb
inc
lods
cmpsb
add
in
xor
jno
int
add
js
inc
push
push
mov
ret
ljmp
testb
rdpmc
cmp
ret
add
lcall
push
sub
push
ljmp
inc
pop
sbb
and
sub
push
cmp
jns
call
xor
fldl
clc
iret
rcl
loop
outsl
stc
mov
movsl
jle
jmp
sub
les
xor
push
push
xchg
bound
inc
scas
jge
pop
pushf
movsl
dec
flds
sbb
rol
fidivl
mov
mov
sub
insl
cmpsb
jne
add
or
push
dec
xchg
mov
mov
imul
xchg
les
jbe
or
sarb
mov
addb
sahf
mov
lret
int
xchg
mov
rcll
loop
adc
or
scas
jb
push
popf
sbb
inc
jae
xlat
sbb
test
out
mov
in
insl
dec
pop
stos
sahf
ret
xchg
inc
js
sbbb
jl
dec
push
mulb
mov
andl
xchg
dec
cmp
mov
cld
shrl
loope
xchg
clc
xlat
xor
insb
or
mov
sarb
pop
in
dec
test
mov
enter
aas
loopne
int3
ds
aam
mov
fsts
in
aad
cmpsb
lcall
pop
sbb
ljmp
loopne
dec
aas
cmp
subb
mov
sbb
inc
add
or
gs
sbb
sbb
cmpsb
jecxz
cltd
pop
aam
lds
cld
sbb
cmp
pop
sahf
ja
mov
sub
sbb
mov
fistl
cmp
jnp
loop
gs
cmp
inc
dec
in
jle
cmp
dec
push
push
push
xlat
leave
and
imul
sub
inc
stc
jg
imull
int
iret
push
mov
popl
ret
and
xchg
lds
mov
adc
cli
pop
loopne
push
and
hlt
push
orl
es
jp
jg
adc
jl
jmp
push
into
les
insl
dec
cmp
lea
lock
mov
jmp
dec
test
jae
sub
loope
or
mov
popa
add
push
loop
pop
out
adc
mov
or
fildll
lods
xchg
xchg
mov
mov
pop
jecxz
push
xchg
jg
data16
je
mov
inc
or
aaa
xchg
call
aas
fstpl
pop
inc
jne
das
shlb
mov
sub
sub
bnd
insl
mov
and
filds
out
jns
sub
lret
jmp
stos
cmc
popf
movswl
mov
mov
loop
inc
nop
loop
or
fscale
push
ret
push
test
shll
sbb
sbb
or
call
in
in
jns
jg
add
ret
outsb
mov
push
int
mov
int3
rorl
adc
lret
fcomps
xor
icebp
pop
push
ficompl
add
das
repz
cmp
mov
js
adc
ret
sub
add
and
into
push
mov
add
and
dec
mov
xchg
jge
mov
or
sbb
and
jo
push
stos
pop
aad
insl
mov
adc
rorb
stos
xor
aad
and
sahf
test
push
xchg
mov
pop
add
imul
data16
lret
mov
sbbl
pop
je
test
mov
jne
xchg
fs
mov
ss
pop
cmp
pop
pop
push
or
aad
mov
mov
lret
jmp
cmp
push
and
push
out
jne
mov
je
dec
adc
push
jp
insb
push
add
pop
popf
mov
push
sbb
cmc
mov
fistps
push
mov
cmpsl
mov
pop
xor
mov
cmp
dec
cmp
lods
shrb
fcmovu
xchg
dec
out
add
stos
scas
xchg
inc
out
nop
stc
repnz
dec
cli
adc
adc
and
sbb
in
enter
sub
add
and
hlt
sub
add
jnp
outsl
cmp
jg
dec
add
dec
push
outsb
popf
sbb
pushf
adc
pop
hlt
gs
xor
lret
adc
mov
loopne
mov
shrb
aas
mov
addr16
add
and
push
mov
dec
lods
mov
mov
inc
fld
lods
xchg
faddl
pop
pop
add
scas
mov
lret
movsb
aam
add
insb
push
in
mov
dec
cmp
int3
dec
int3
daa
movsl
sbb
out
sub
mov
adcl
cmpsb
adc
add
outsl
xchg
xchg
pop
add
insl
push
lret
inc
inc
push
pop
outsl
mov
fwait
adc
xor
push
pop
pop
jg
pop
les
orb
pop
adc
jecxz
inc
loopne
inc
pop
sbb
daa
cli
jg
and
fcomp
stc
cmp
mov
shr
roll
lcall
cmp
stos
in
dec
sbb
test
jb
mov
rolb
mov
jmp
jno
xlat
lods
jge
pop
and
lret
ret
imul
adc
inc
scas
sub
sub
mov
repnz
sub
pop
aad
xor
lcall
mov
pop
nop
stos
loope
cmp
roll
lret
mov
xchg
push
adcb
orl
sub
stc
shr
pushf
out
mov
shr
aad
sbb
jge
sbbb
sub
push
notl
jecxz
cmp
lods
vmwrite
jmp
jl
fcomps
lret
mov
icebp
lods
jo
in
cltd
jecxz
or
adc
shll
test
or
or
mov
aam
nop
cmpsb
insb
mov
imul
aas
mov
aad
imul
pop
mov
mov
jne
jns
mov
pop
outsb
ds
push
cld
ret
push
mov
test
in
aad
pop
mov
lret
fst
idiv
pop
cli
cli
adc
cmp
pop
icebp
mov
mov
repz
pushf
mov
pop
enter
xchg
adc
inc
test
imul
xchg
loop
rcrl
or
mov
shr
dec
mov
dec
test
stos
ret
jo
in
inc
fstps
dec
jge
int
jns
xchg
cmc
fnstcw
cmp
hlt
sbb
pop
adcl
sbb
inc
and
fnstcw
sub
mov
add
insb
cmp
sub
mov
scas
or
mov
cmpsl
sub
arpl
aas
outsl
and
xchg
je
cld
outsl
js
lea
sahf
mov
insb
std
lret
xor
add
fidivrl
xchg
lahf
adc
sbb
dec
lea
xchg
ljmp
pop
dec
add
std
insb
mov
pop
ret
pop
sbb
ja
jns
jno
mov
fildl
mov
gs
push
xor
add
dec
insl
pop
sbb
xlat
inc
pop
dec
or
xchg
ret
add
xchg
shlb
xchg
jp
repz
mov
sti
pop
dec
fldcw
dec
push
adc
pop
jno
ror
iret
in
rcl
xor
pop
loope
mov
xchg
scas
push
dec
mov
push
nop
xchg
cmp
jmp
jb
imul
sub
idivl
add
adc
inc
lea
das
mov
xor
xor
jle
inc
ss
mov
mov
xor
int
ret
gs
dec
je
jp
cli
popa
pop
xchg
scas
test
mov
inc
or
push
sub
fcmovb
xor
nop
cmpsl
add
adc
sub
stc
xchg
rorb
std
pop
repnz
std
xchg
aad
jle
pop
sbb
mov
add
rorl
ror
pusha
loop
sub
fmuls
mov
adc
push
push
out
jecxz
in
add
test
push
dec
nop
lahf
cmpsb
cs
add
mov
cs
insb
adc
pop
inc
mov
cltd
xchg
add
cmp
xchg
jbe
push
or
in
mov
push
adc
ja
imul
xor
cmp
pop
adc
or
sbb
sbb
dec
outsb
je
jnp
cwtl
out
data16
xchg
adc
cmp
pop
loopne
pop
pop
popf
movsl
mov
std
pop
outsl
pushf
loope
dec
dec
sub
or
jg
xorb
mov
cmp
cmp
jne
push
or
psrlq
xor
iret
cs
les
and
mov
sub
shlb
ret
sbb
add
fisttps
arpl
lods
mov
into
stc
int
mov
sar
dec
and
movsb
mov
and
scas
addr16
or
js
jmp
outsl
aam
aam
jg
sarl
scas
aam
popf
push
lock
xchg
scas
or
and
mov
hlt
out
aaa
loope
das
insl
push
or
xor
or
push
xchg
aad
cmpsb
push
push
push
sub
inc
add
add
insl
push
ljmp
fldl
jnp
shrl
or
dec
push
jp
cmp
jno
fmull
pop
out
pop
in
pop
pop
jp
stos
out
mov
sub
in
jecxz
or
push
movsb
rorl
repnz
sub
xor
mov
lods
mov
icebp
adc
sub
stos
cmpsb
xor
fistl
movsb
sti
or
fimuls
adc
mov
adc
lahf
mov
add
xchg
sahf
xchg
cwtl
nop
das
pop
adc
sti
mov
sbb
shr
fisttpl
jne
nop
xchg
xor
enter
insb
and
dec
rolb
mov
in
or
mov
gs
into
std
int3
iret
movsl
lahf
clc
push
dec
or
sub
xchg
daa
int3
aas
inc
jo
sbb
cld
jp
mov
xchg
mov
int3
adc
lcall
pop
dec
push
cmp
and
sti
pop
dec
adc
in
push
sub
ror
lock
sbb
sahf
mov
and
stc
xor
data16
js
push
xchg
sbb
stos
sub
or
cs
mov
shll
dec
pop
je
dec
in
pop
insl
inc
fidivl
daa
xchg
aas
inc
pop
sub
mov
rcl
dec
push
mov
jmp
xor
pusha
adcl
jle
stos
lock
mov
pop
jp
lods
es
jb
add
add
push
bswap
test
add
nop
cli
hlt
cs
in
jmp
cmp
jecxz
mov
mov
cld
push
frstor
pop
xor
addr16
inc
jg
in
cwtl
fiaddl
or
dec
pushf
mov
inc
dec
test
xchg
sub
es
jle
cmc
lahf
fstps
xor
push
loop
xchg
jnp
ror
iret
jle
and
sub
in
in
ds
or
ja
dec
jae
dec
dec
leave
imul
pop
xor
pusha
dec
lret
jnp
mov
test
jbe
test
push
or
cmpsb
adc
dec
inc
sub
sbb
lcall
dec
lock
mov
imul
test
lods
push
fimull
sbb
insl
adc
pop
adc
push
xlat
mov
repz
mov
sbb
cmpb
inc
popa
fcomp
or
shrb
or
imul
and
lret
mov
leave
add
sub
scas
add
les
sub
sub
push
imul
adc
xchg
sti
xor
adc
mov
jae
push
inc
xor
dec
sub
mulb
cmpsl
ret
xchg
jg
inc
ja
addr16
movsb
add
fstps
cmpsl
add
rcrb
inc
pushf
fdivrl
scas
or
xchg
jg
inc
cmpsb
push
lret
das
jge
xchg
sbb
popa
xchg
add
test
mov
rol
cmpsb
or
out
ret
icebp
and
dec
int
jbe
inc
mov
jne
fwait
and
jae
cmpsl
addr16
in
ss
jle
enter
dec
sub
pop
jb
sbb
inc
sub
outsb
mov
ja
ja
push
bound
das
rcrl
push
mov
jnp
ja
cltd
nop
insl
jg
dec
inc
cmp
and
inc
incl
mov
dec
xchg
jns
sbb
mov
loop
pop
mov
gs
dec
jbe
or
dec
xlat
aas
js
sbbl
inc
movsl
lcall
leave
push
mov
repz
sbb
lods
push
pusha
mov
push
in
ljmp
sbb
xor
in
es
jle
shll
data16
push
mov
divb
inc
pop
or
fstpt
inc
ljmp
add
dec
xchg
dec
imull
add
jo
or
push
outsb
es
sub
mov
mov
jbe
or
stc
aaa
call
mov
dec
test
sbb
call
rorb
jp
dec
mov
enter
int3
aaa
push
and
push
cmp
jbe
mov
imul
int
les
xor
cs
int3
or
and
jg
jp
int3
dec
hlt
adc
incb
or
add
jbe
sbb
mov
xchg
bound
pop
cmp
pop
mov
cmp
rclb
fwait
dec
add
cmp
test
adc
decl
and
insb
jg
lds
xchg
xchg
dec
jae
and
out
vorps
call
sbb
push
adc
fidivrs
aas
jbe
mov
movsb
jg
icebp
subl
xchg
cltd
xlat
pop
inc
nop
pop
adc
loope
clc
mov
es
adc
arpl
ja
mov
repz
fisubs
sub
and
and
mov
in
jp
aam
cmp
push
mov
inc
cli
xchg
sbb
cmp
repz
ja
mov
xlat
pop
fsubrs
xchg
xor
add
lds
sahf
xchg
das
call
push
pop
and
test
dec
dec
push
cmc
jne
lds
scas
mov
mov
mov
mov
fisttpll
fcmovnu
andb
lock
out
pop
xor
mov
into
sarl
fs
jnp,pn
xchg
leave
insl
lret
in
lea
add
push
cmpsb
repz
outsl
fisubl
and
arpl
jns
bswap
dec
mov
sub
sub
fisubrs
jae
insl
lds
sub
in
or
push
add
mov
fwait
or
mov
jns
pop
lods
stos
push
pmaxub
test
mov
repz
shrb
cmp
push
icebp
pop
sahf
imul
or
fisubrl
sub
shrb
adc
dec
ds
rcrb
in
mov
pop
dec
movsb
sbb
mov
cld
mov
sub
std
std
mov
loope
rcll
outsb
mov
mov
fistpl
outsb
lods
shl
adc
out
xchg
xchg
out
jecxz
mov
lahf
push
pop
pop
mov
mov
push
ja
cs
mov
inc
dec
repz
cmp
rcll
mov
adc
xor
les
mov
or
js
add
cli
stos
jns
nop
pop
fs
rorl
sub
add
fwait
add
je
mov
inc
and
cmp
shlb
push
aam
xor
aam
dec
pop
fisubrl
sahf
int
addr16
cmpsl
fwait
sbb
pop
ror
pushf
pushf
inc
add
out
inc
xor
notl
out
lds
pop
lods
sub
xchg
stc
inc
scas
xor
mov
cwtl
adc
out
xchg
out
inc
fnstcw
mov
mov
mov
lcall
jle
add
push
or
test
ret
push
jl
pop
or
adc
into
xchg
filds
ret
imul
cmp
aam
and
mov
and
ret
mov
inc
sbb
or
leave
dec
sub
daa
data16
out
je
adc
psadbw
aad
add
dec
cs
mov
xchg
out
outsb
iret
rcrl
aas
or
cld
add
imul
idiv
mov
mov
lret
mov
or
ficompl
enter
pop
xor
mov
and
fs
pop
push
pop
sub
xchg
xchg
add
xor
adc
add
dec
jns
or
enter
xlat
mov
stos
push
fiadds
cli
pop
jecxz
push
dec
inc
lcall
adc
popa
int
gs
out
in
icebp
jno
mov
es
test
pop
lea
pop
int
add
or
aam
insl
jno
rol
mov
enter
xchg
mul
jae
mov
icebp
pop
jae
sbb
and
test
jne
in
add
popf
or
mov
push
jg
aam
or
pop
adc
inc
sti
cltd
pop
jno
jg
insl
insb
in
jge
arpl
arpl
push
arpl
ret
daa
xlat
adc
insb
lods
shrb
mov
mov
mov
sub
xchg
jno
sbbl
sti
mov
add
icebp
scas
ud2
cmp
dec
mov
sbb
cmpsl
push
mov
popa
clc
pop
pop
out
shll
jne
pop
bound
fsubl
add
or
cmp
out
aaa
cli
jbe
pop
pop
gs
aas
nop
fs
add
xor
jae
stc
pop
test
lret
mov
mov
lods
je
cli
in
xchg
mov
jbe
xlat
jb
stos
xor
and
jmp
dec
add
and
mov
pop
popa
stos
cwtl
rorb
sbb
dec
les
negl
jp
movsl
test
xor
sbb
jl
popf
cld
jle
rcll
enter
jbe
xor
mov
decb
pop
push
out
icebp
stc
xchg
dec
lods
inc
ljmp
push
pop
jmp
hlt
ljmp
jmp
mov
iret
inc
add
shrb
cli
pop
jb
ret
loopne
xchg
daa
outsl
ds
imul
dec
push
lret
jno
jbe
mov
add
pop
mov
push
lods
jg,pn
in
pop
mov
pop
lods
faddp
xchg
mov
inc
or
out
test
mov
xchg
sbb
cmpsb
icebp
es
sbb
push
add
mov
sub
jno
fdivp
mov
inc
xlat
inc
mov
mov
test
gs
jo
std
sti
enter
pop
pop
dec
scas
insl
cmc
imul
cmp
xchg
and
shll
ss
ficoms
adcl
shrl
jb
pop
sub
loopne
inc
lret
add
xchg
push
or
pop
cmp
or
mov
enter
out
mov
xchg
jge
add
add
pop
cmp
fcompl
push
popa
ficompl
and
jae
stos
insl
notl
ljmp
mov
and
lahf
mov
ficoml
mov
rorb
insl
mov
add
aaa
ss
mov
test
out
pop
mov
mov
test
cmc
jo
sbb
and
jg
adc
pop
mov
mov
mov
pop
push
xor
add
or
imul
js
fwait
jo,pn
jmp
out
ss
add
and
cmc
mov
or
push
push
adc
je
cld
mov
dec
fiadds
movsb
pop
mov
cli
outsl
dec
lock
les
test
jne
cmp
repz
bnd
jmp
fldcw
mov
inc
sti
dec
divl
mov
mov
mov
ret
shll
scas
insl
lcall
cmpsl
pop
cmovs
xor
inc
loopne
rcll
push
mov
cmpsl
sub
mov
pop
add
fidivl
std
dec
mov
mov
fwait
xchg
mov
xchg
mov
popf
or
cmp
and
push
mov
push
cmc
xchg
daa
and
push
insl
push
or
loop
loope
in
push
fimull
lock
popa
pop
and
test
loope
mov
cs
dec
adc
xchg
jo
mov
dec
mov
repz
call
mov
jbe
das
and
inc
aas
adc
sbb
mov
fdivrl
push
in
ret
cltd
cli
outsb
dec
cmp
rcr
pusha
sbbl
ficomps
mov
test
push
test
jg
cli
lods
push
stos
jecxz
sbb
in
xchg
push
test
cmp
fdivs
mov
and
stos
repnz
movsl
stos
lods
test
mov
jns
adc
outsl
insb
cwtl
stc
arpl
add
xor
mov
shlb
xchg
push
mov
inc
xchg
dec
mov
or
and
mov
cmp
mov
pop
dec
mov
popf
and
mov
sbb
outsl
repnz
insl
pop
imul
mov
and
mov
int
sbb
xchg
cmpl
imulb
jl
sbb
insl
sbb
insb
sete
and
jmp
add
bound
rcl
and
inc
mov
mov
pop
fidivl
jl
nop
inc
mov
nop
shrl
sbb
std
adc
lock
xor
ret
xchg
fidivrs
aad
mov
dec
repnz
push
and
jmp
lds
shrl
pop
cltd
push
fsts
adc
xor
lcall
std
lret
lods
cltd
aas
out
and
mov
loope
movl
rol
cmpsb
flds
sub
mov
dec
xor
push
out
enter
xchg
mov
pop
lea
sub
stos
loopne
xor
insl
fsts
dec
sub
aam
int
sub
lret
pusha
clc
sahf
push
popf
mov
pop
pusha
jle
rolb
int
add
je
jno
add
jge
pop
cmp
insb
pusha
shl
push
aaa
cmpb
movsl
mov
daa
xor
lds
es
pop
jecxz
mov
fbstp
outsb
adc
adc
aad
push
cli
adc
jmp
xlat
orl
jo
or
aad
gs
shlb
cltd
ss
add
scas
and
mov
and
sarl
pop
xor
mov
pop
jge
in
pop
mov
cmp
xor
inc
jne
xchg
aad
add
or
insl
mov
and
mov
out
inc
xchg
shrl
pop
sub
cltd
cltd
dec
or
divb
jl
ds
mov
ljmp
sub
int
fxch
mov
jmp
dec
icebp
inc
dec
aaa
testb
test
fiadds
mov
mov
icebp
lock
sub
test
iret
and
out
std
pop
inc
stos
pop
pmaxub
adc
lret
hlt
daa
and
push
pop
jl
aam
xor
inc
out
imul
shll
push
sub
out
dec
lea
rorl
out
cmp
fldenv
enter
or
jo
inc
xchg
add
repz
xor
mov
in
icebp
cs
rcl
popf
add
ljmp
xor
dec
pop
jp
xor
sar
sbb
add
inc
xchg
mov
lcall
out
and
sahf
adc
inc
cmpsl
pop
arpl
out
pop
lret
cmp
sahf
pushf
shrl
push
mov
call
and
repz
cmp
lods
ficompl
push
ss
test
clc
add
xlat
sbb
aad
rolb
xor
test
mov
adc
sbb
push
cmp
inc
mov
jno
addr16
jge
mov
mov
sbbb
ss
push
mov
inc
mov
mov
add
or
aad
or
jmp
jns
les
frstor
inc
cmp
ffree
mov
test
push
lock
jp
or
stos
cld
cmp
dec
lds
pop
subb
push
cmp
cmp
xorl
xlat
sbb
add
inc
mov
sub
imul
xor
pop
mov
cld
int
pop
dec
ds
pop
or
push
enter
pop
fildl
iret
shl
out
mov
push
xor
mov
sub
stos
jmp
jno
das
xor
ljmp
sub
push
jbe
mov
sbb
cmp
fstl
jo
gs
lods
jmp
jns
mov
popf
mov
nop
iret
add
ljmp
xchg
jo
mov
aas
pop
xchg
insl
or
incl
jge
loopne
loope
lods
or
loop
shlb
lea
out
subl
leave
movsl
sub
push
adc
rcl
add
out
mov
xchg
in
jo
insb
in
cs
in
mov
or
cmp
int
sub
jecxz
jbe
lock
adc
mov
add
stos
sbb
mov
fdivrl
or
loope
loope
repnz
xchg
out
fs
jne
and
or
pop
movsb
mov
jmp
cld
sub
sub
wrmsr
aaa
add
cmp
mov
jecxz
les
fs
adcl
lret
pop
js
icebp
jl
mov
out
daa
popf
addr16
loop
movb
shll
push
cmpsb
mov
mov
and
cmp
js
jne
push
lods
addr16
pop
dec
sbb
aas
adc
sti
addr16
add
sub
jle
ret
fidivs
lret
cmp
movb
inc
arpl
sub
mov
scas
dec
pop
jge
jmp
cmpsb
mov
sbb
or
mov
or
fcmovbe
mov
test
jae
adc
jp
adcb
add
dec
cmp
enter
xor
std
fcomps
sub
sbb
lds
test
sbb
addr16
lcall
movsb
js
xorb
dec
push
xor
or
loope
push
lds
mov
xchg
mov
mov
mov
jns
shlb
stc
mov
jecxz
shlb
or
movsl
push
pop
cli
mov
sarl
xlat
loope
addps
aam
jge
cmp
xor
jbe
inc
dec
fidivrs
arpl
ss
les
adc
or
push
outsl
lahf
sbb
stos
sub
adc
inc
jecxz
arpl
jnp
adc
sbb
cmp
ds
icebp
and
xor
cmp
fcmovnbe
imul
xor
inc
movsb
mov
mov
dec
loope
xlat
aam
clc
cmpsl
xchg
sub
cmpsl
jae
mov
push
xor
xchg
mov
int3
ret
ret
xor
mov
nop
lahf
lcall
test
int
scas
add
xor
or
fsubrl
or
pop
jne
mov
cmp
cmpsl
insl
cwtl
push
add
aad
pop
ss
pop
mov
xchg
out
add
xorl
es
or
fs
jno
ja
adc
lods
mov
testl
es
mov
js
ss
jl
out
jne
add
mov
ja
add
sub
mov
sub
mov
int3
dec
and
pop
out
push
mov
js
mov
fidivl
cmpsl
adc
mov
pop
inc
outsb
ss
mov
sbb
insl
cmpsl
dec
ficoml
jae
add
mov
mov
out
enter
pushf
xor
inc
int
adc
mov
dec
nop
daa
adc
and
mov
orb
jns
negl
gs
ror
insl
pop
scas
sub
lret
rcr
iret
or
mov
out
repnz
cmpl
sub
sbb
lds
insl
gs
rolb
in
aaa
jle
cltd
rcrb
add
rcl
sub
jo
mov
je
in
jge
sbb
fcmovnbe
test
lods
push
leave
xchg
insl
repz
cmpsb
addb
xor
sahf
std
push
mov
xchg
pop
jge
pop
hlt
inc
pop
mov
cmp
mov
test
rolb
fldt
dec
pop
pop
pop
xchg
js
mov
xchg
xchg
xchg
aad
mov
stos
xlat
leave
mov
add
sbb
sbb
out
pop
orb
hlt
roll
push
lcall
sbb
mov
inc
push
mov
xchg
lock
push
aaa
xchg
or
aas
mov
mov
clc
rorb
lods
inc
clc
adc
arpl
cmp
cwtl
dec
xor
xchg
fsubrs
push
fbstp
push
adc
ss
pop
jns
jnp,pt
dec
cltd
jmp
repnz
adc
sub
add
add
in
insl
in
jbe
cmp
cmpsl
adc
das
repnz
cmp
pop
nop
in
jo
jle
xchg
shll
dec
nop
insb
rorb
jmp
dec
fwait
scas
clc
rclb
mov
dec
popf
cli
jmp
pop
xlat
xlat
in
rcrl
notb
cmp
mov
cli
cmp
push
aam
mov
pop
inc
inc
into
cwtl
lock
jle
loope
cmc
push
arpl
lret
add
mov
push
mov
es
dec
adc
inc
add
jp
or
lea
pop
insl
adc
and
hlt
mov
sahf
icebp
lods
xchg
push
xor
cmp
fsubp
jns
rorb
sbb
pop
rcll
push
popa
mov
jo
push
enter
cmpb
xchg
mov
dec
pop
cwtl
test
fldl
sub
cmp
test
mov
std
les
dec
sbb
sbb
fidivrl
jp
lcall
mov
imul
call
dec
fisubrl
xor
mov
add
pop
inc
ret
addr16
andl
xlat
lods
sub
mov
xchg
adc
inc
jle
aaa
jge
adc
bound
push
inc
imul
adc
jl
in
lret
jae
sbb
pop
lds
or
xchg
xchg
mov
push
xor
add
pop
cmpl
lds
mov
imul
jae
in
xor
sub
xorl
repnz
inc
mov
es
dec
testl
in
pop
push
outsb
sbb
es
pop
sbb
stos
ficoms
clc
dec
prefetch
fldl
movsb
inc
add
push
or
push
lahf
cltd
pop
insl
cmc
testl
mov
faddp
imull
fisubrs
arpl
mov
roll
lods
inc
inc
lahf
inc
pop
shrb
pop
int3
lods
in
ret
lret
xor
cld
dec
dec
dec
fs
mov
rol
mov
andl
pop
inc
outsl
cmp
lock
pop
fstpl
imul
mov
sti
and
pop
ds
je
mov
addr16
int3
adc
lahf
gs
out
cld
into
pushl
imul
sbb
test
xor
inc
pop
adc
das
or
out
ljmp
xlat
sub
xor
shll
inc
push
scas
stc
cbtw
jle
enter
loopne
sahf
xchg
sbb
out
jl
xchg
and
xlat
cmpsb
ja
sbb
push
rolb
cs
push
std
loopne
cmp
xchg
lcall
scas
movsb
sub
mov
sub
mov
dec
sbb
sbbb
fnsave
movsb
shlb
or
ret
ja
mov
mov
fcomip
push
sbb
inc
cmpsb
or
pop
sbb
lods
lea
ljmp
xor
mov
push
stc
mov
lods
mov
inc
mov
test
cmp
xchg
adcb
adc
inc
add
dec
fs
jle
shll
dec
fildll
pop
cmp
jo
je
rcll
cwtl
jmp
testb
lock
sub
int
rcl
xor
fsubrl
addr16
inc
cmp
sbb
cld
inc
leave
in
push
and
add
inc
int3
imul
shlb
shlb
jbe
sub
ja
sqrtps
mov
and
test
les
mov
in
sub
leave
or
jp
in
xlat
add
lahf
mov
daa
sbb
sub
les
sti
adc
mov
int
test
addb
out
xchg
dec
xor
idivb
mov
ljmp
in
mov
js
repz
pop
mov
push
ds
mov
xchg
dec
mov
sub
sbb
mov
pop
mov
mov
mov
std
fs
imul
mov
and
popa
sbbb
jg
xchg
mov
out
jmp
or
mov
dec
imul
imul
or
hlt
dec
mov
inc
or
adc
into
dec
les
jge
inc
es
lcall
push
pop
sbb
xor
je
inc
arpl
sbb
inc
push
insl
test
pop
pop
xor
out
add
insl
stc
pop
inc
pop
test
pop
aas
bound
mov
sbb
xorb
sbb
mov
push
loopne
sbb
rcl
addl
loopne,pn
aaa
test
lods
lret
out
mov
push
sbb
sub
mov
test
fadds
add
sarl
int3
xchg
or
and
repnz
add
aad
outsl
inc
adc
subb
mov
pusha
xor
dec
xor
iret
push
repnz
inc
push
daa
jb
sbb
ds
std
movsb
jmp
sbb
inc
pop
lea
je
ret
pop
adc
sub
xchg
cmp
out
mov
outsb
test
pop
xor
aad
pop
clc
push
fists
movsb
jp
loopne
pop
loop
push
testl
xor
shrb
clc
adc
sub
push
mov
dec
xchg
pop
ret
push
clc
sbb
xor
enter
cmp
pop
inc
stos
pop
int
xor
mov
inc
inc
pop
cli
push
cmpsb
cmp
jnp
sbb
xlat
mov
pop
push
xor
inc
call
das
xchg
jp
or
movsb
subl
neg
xor
jns
arpl
shlb
repnz
add
mov
cmc
xchg
ret
clc
out
sbb
popf
and
dec
add
xchg
cmp
mov
shrb
lcall
mov
sti
cmp
out
push
xlat
jp
rorb
pushw
cmp
aaa
and
repnz
push
jmp
mov
sbb
adc
sbb
or
movsb
aaa
lret
insb
pop
or
mov
push
and
cmpsl
jbe
mov
cs
jo
and
push
es
mov
xchg
in
dec
fmuls
push
fldcw
fiadds
aaa
ficomps
aaa
cmp
pop
and
sbb
rcl
ret
xchg
dec
filds
pop
es
je
test
xchg
mov
and
push
test
inc
cmp
inc
jno
xor
inc
stos
icebp
pop
outsb
pop
out
add
add
rorl
aaa
fdiv
xchg
scas
push
clc
adc
sbb
rcrb
ret
sbb
ds
push
dec
dec
nop
repz
inc
leave
arpl
fs
push
xor
push
inc
dec
pop
stc
add
sbb
nop
cmp
or
and
pop
daa
mov
mov
mov
or
push
cs
rcrl
ss
cmp
leave
mov
xor
imull
pop
sbb
mov
mov
das
aaa
mov
sbb
out
mov
ror
adc
sti
cld
jg
inc
sub
jge
lods
cmpsb
lahf
dec
dec
mov
push
movsl
fstl
outsl
test
push
shrl
adc
hlt
lahf
repz
iret
inc
or
push
ret
insb
sbb
push
rcrl
mov
dec
adc
sahf
or
orl
ja
movsl
adc
xlat
push
or
mov
xor
xchg
pop
mov
or
mov
mov
out
lods
inc
mov
subb
pop
inc
and
leave
aaa
daa
sbbl
mov
in
xor
shr
iret
mov
out
out
adc
add
mov
mov
push
rol
rorl
push
push
and
cs
cmp
outsl
jno
pop
pop
addr16
adc
cmp
push
or
insl
movb
xor
xchg
sub
js
lea
aam
xchg
push
adc
das
dec
mov
test
decl
fnsave
jle
adc
inc
push
sahf
loopne
mov
ffreep
mov
clc
push
xchg
leave
inc
mov
test
mov
cwtl
mulb
pop
xchg
inc
movsb
mov
sub
pop
dec
fbld
jns
xor
dec
outsb
in
pop
inc
mov
mov
mov
lods
ja
mov
cmp
add
je
in
xchg
xchg
inc
push
aad
stos
mov
or
cltd
clc
repz
pop
in
test
lods
js
xchg
mov
or
mov
push
arpl
movsb
xor
pop
imul
lcall
pop
xor
cltd
push
push
and
fidivrl
inc
inc
cli
dec
mov
mov
xchg
jecxz
push
inc
dec
cmpl
sub
lock
sub
ljmp
mov
into
adc
aas
sub
out
rol
lret
xchg
out
js
movsb
jge
test
push
jle
jg
inc
sub
pop
push
jae
jle
xor
pop
testb
push
mov
idivl
xor
push
and
mov
imul
dec
scas
popa
push
mov
sub
pop
dec
push
in
fidivrl
sbb
outsl
or
gs
rcll
mov
push
sub
sub
xchg
mov
and
inc
cmp
mov
jns
jp
adc
lret
cs
mov
xor
pop
xchg
test
out
jno
lock
or
insl
notl
mov
mov
fisttpll
fisubl
cmpsl
mov
add
fmul
fldl
or
mov
leave
inc
cs
je
leave
fidivl
cmp
subl
js
ret
orl
push
push
imul
inc
pop
mov
cli
jo
xchg
jns
inc
pop
test
out
nop
test
add
lret
mov
outsl
lds
sub
jge,pn
inc
mov
dec
sub
add
rolb
hlt
pop
scas
aam
adc
sbb
int3
pop
xchg
adc
notl
lcall
int3
fwait
adc
stc
adc
mov
xchg
inc
lods
fildl
add
repnz
cltd
mov
and
in
fs
push
inc
mov
pop
in
pop
or
push
inc
test
pop
clc
jbe
sbb
shll
xor
push
sti
xor
loope
jae
imull
push
jg
xor
jg
daa
ret
mov
cmpb
rorl
call
addb
shlb
add
sti
jo
or
cmc
dec
nop
pop
scas
pop
cmp
jns
jle
sbb
cmp
adc
or
ja
adc
add
or
in
movsl
and
dec
inc
add
xor
fistpll
xor
mov
add
out
sbb
ret
out
push
in
sahf
bound
sahf
js
inc
loope
orb
ljmp
dec
add
mov
and
or
cmp
rcr
mov
jl
jns
test
hlt
push
push
or
test
aam
mov
push
ja
divl
lret
popa
mov
xchg
sub
push
scas
add
cmp
cmp
int3
es
mov
cld
loope
inc
jb
cmp
scas
roll
fs
enter
gs
addr16
fldcw
or
push
inc
xchg
stc
mov
xor
pop
push
mov
xchg
in
inc
rol
dec
sub
rol
inc
sti
dec
sti
pop
xor
xchg
cmp
je
fcompl
inc
lds
add
adc
or
loopne
mov
dec
sbb
pushf
sahf
mov
sub
outsb
ret
dec
testl
sub
sub
fstpl
lods
pop
add
xor
aad
loope
mov
repz
imul
jle
add
jl
xor
jb
or
ljmp
stos
xchg
je
cmp
ljmp
test
sarb
add
les
mov
mov
je
xchg
mov
cltd
and
mov
arpl
neg
inc
pushl
lds
pop
adc
mov
lahf
scas
mov
andb
pop
xchg
mov
aad
pop
fwait
cmp
inc
movsl
jle
pop
jae
cltd
dec
ret
cwtl
inc
popa
pop
or
jp
addr16
std
inc
sub
cmp
pop
cmp
outsb
ret
hlt
sbbb
mov
sar
aad
popf
imul
inc
jp
into
lods
mov
push
lods
push
add
sbb
pop
mov
adc
mov
hlt
aam
cmp
and
loop
mov
pop
xor
push
and
jns
sbb
out
mov
ljmp
jae
dec
push
je
push
jle
fcmovbe
sub
adc
jle
test
jb
mov
test
jne
push
rcl
aam
scas
inc
and
ret
repz
pop
andb
in
adc
bound
push
ja
add
push
bsr
in
jecxz
cmp
mov
cmpsl
fwait
jo
xadd
rcrl
sub
mov
lcall
cmp
mov
cli
jmp
xor
mov
mov
nop
jnp
adc
adc
sbb
sbb
mov
pop
push
jnp
test
jecxz
mov
mov
addr16
mov
xor
jge
inc
call
push
outsl
movsl
fdivrs
fs
mov
orl
xor
ret
cltd
divl
jle
push
test
out
mov
int
sbb
mov
loop
inc
dec
sahf
add
cmp
and
in
xor
bound
and
test
leave
icebp
fs
xlat
in
add
cmp
add
cmp
sub
adc
test
xor
cltd
dec
cmp
sbb
sbb
xchg
lods
pop
add
cld
adc
sbb
adc
out
movsb
repz
leave
cmp
movsb
xor
lds
and
or
imul
ljmp
mov
and
and
push
mov
push
push
inc
fs
xchg
sub
cmc
lock
pop
mov
rolb
adc
icebp
jno
ja
xor
in
subb
xchg
dec
sahf
leave
pop
jle
xchg
cwtl
pop
out
mov
adc
dec
adc
jmp
pop
push
xchg
cmp
mov
mov
es
icebp
lea
fs
int
into
ret
jecxz
rclb
enter
cld
and
add
imulb
jo
xchg
lods
js
dec
or
notl
adc
dec
xchg
or
jge
stc
mov
pop
mov
icebp
jne
loopne
sbb
cmp
dec
movsb
dec
push
push
push
pop
push
pop
repnz
jne
fcmovbe
pop
push
push
lods
hlt
push
jmp
in
adc
adc
dec
push
or
data16
push
pop
jnp
mov
hlt
loopne
push
fchs
sub
addr16
mov
stos
imul
adc
push
jne
push
xchg
in
adcl
repz
mov
sub
sub
fisttpll
ja
xor
sbb
sub
sub
negb
adcb
and
xlat
repz
or
aaa
in
sahf
ljmp
ja
jp
imul
mov
int
pushf
dec
scas
stos
jb
xchg
std
jmp
dec
inc
mov
std
stos
ret
ljmp
stos
sub
push
fsubs
cmpsl
mov
lret
sub
lret
jecxz
stc
xchg
pusha
lods
rolb
or
jo,pt
loop
clc
add
into
or
inc
into
push
xor
enter
xchg
dec
sbb
xchg
ficomps
sbb
iret
imull
push
data16
fucom
inc
cld
mov
and
or
lods
repz
push
cmpl
xor
fistps
jecxz
fmull
inc
rclb
inc
xchg
push
mov
rolb
xchg
mov
lea
jno
xor
jl
cmp
dec
enter
sarw
xlat
sub
decb
dec
scas
inc
loopne
jp
mov
cs
mov
jl
xor
xchg
imul
mov
mov
jns
jmp
sub
jae
jbe
testb
inc
xchg
add
add
test
fwait
std
pop
adc
cmpsl
xchg
bound
cmpsl
push
imul
scas
jns
mov
out
cmp
std
mov
test
adc
popf
lods
pop
or
pop
out
xchg
pushf
jns
imul
insb
repnz
insl
adc
in
lods
or
iret
inc
push
add
out
push
fs
stc
insb
loopne
xchg
jle
pop
push
test
sub
icebp
mov
call
insl
xor
xor
hlt
push
and
dec
xchg
icebp
pop
clc
ljmp
les
int3
rorl
or
fildl
xor
sub
mov
cmp
dec
ss
push
aaa
push
lods
sbb
inc
mov
lds
loop
pop
ja
in
std
sub
nop
lret
push
jo
out
mov
out
sbb
mov
sbb
daa
pop
sbb
int
fwait
pop
outsl
shufps
mov
and
arpl
cmc
cmpsl
ss
sti
xor
and
rcl
and
sahf
xor
jnp
mov
cmc
mov
adc
scas
aam
fsts
mov
loopne
stc
gs
subb
mov
lock
and
cwtl
insl
in
mov
loop
mov
sbb
jg
stos
adc
jae
mov
xor
mov
lods
pop
test
xchg
mov
test
mov
xor
push
cmp
pop
add
fisttps
jne
jb
add
pusha
push
adc
or
mov
mov
adc
clc
mov
and
imul
leave
in
mov
rorl
loopne
mov
mov
pop
sub
cmp
add
dec
out
pop
arpl
and
dec
xor
lock
adc
dec
push
cmp
loopne
add
sub
in
imul
pusha
xor
mov
iret
enter
pop
pop
xor
or
sub
aam
jl
lahf
pop
dec
popa
shrl
cmp
adc
insb
pop
daa
sbb
cmpsb
daa
lods
roll
ljmp
xor
repnz
rorl
orb
stc
popa
sahf
fs
cmp
push
pop
sbb
xor
cwtl
popa
dec
xchg
xor
add
fsub
repnz
test
push
pop
ljmp
mov
test
popf
out
gs
xchg
rcr
movsb
imul
push
cmp
cmp
or
ja
out
inc
cmp
pop
jecxz
cmp
dec
cmpsb
mov
xor
adc
pop
iret
out
into
call
inc
daa
dec
mov
loopne
sub
rorb
in
or
repnz
jo
or
xlat
iret
clc
push
popa
ret
iret
arpl
outsl
mov
cld
mov
addr16
cs
adcl
cwtl
lahf
sub
xchg
ja
cs
mov
push
mov
and
or
pop
aas
shlb
es
leave
cmc
outsb
jg
enter
fsubrs
nop
add
pop
fwait
and
ja
inc
add
xchg
jbe
cli
lahf
loope
jle
cmp
dec
int3
xchg
bound
dec
mov
fcomi
mov
add
pop
shll
bound
dec
lds
inc
xchg
scas
dec
sarb
mov
rcll
add
sarl
mov
sbb
mov
iret
pushf
push
sub
jns
push
fildl
in
andb
or
jns
dec
pusha
in
scas
push
pop
loop
add
or
or
iret
jecxz
push
in
push
inc
mov
push
insb
andb
xchg
call
jmp
mov
and
dec
pushl
cli
ds
jo
test
outsb
lret
xor
or
sbb
nopl
xchg
ljmp
or
push
leave
push
or
scas
call
dec
mov
gs
pop
movsb
xorl
std
inc
data16
lahf
pop
mov
inc
xchg
sbb
in
mov
xlat
gs
push
and
jb
dec
xor
pextrw
adc
in
push
test
add
xchg
or
sub
insl
or
test
dec
cmp
pop
std
push
dec
mov
cmpl
stos
xchg
lret
jns
mov
cltd
inc
push
add
inc
movsl
and
je
js
cmp
lret
cs
test
test
dec
inc
fnstenv
push
jbe
push
sbb
cmp
out
repnz
into
xor
push
sbb
push
pop
stos
shll
dec
sti
jne
lcall
mov
outsl
outsb
mov
or
add
push
ljmp
loope
into
lods
mov
in
shrl
mov
or
mov
dec
lahf
sub
cmp
cli
negl
adc
inc
xlat
aad
and
jmp
push
xchg
lea
fucomi
aad
mov
jns
lret
xchg
sbb
pop
dec
sbb
mov
out
push
mov
lret
mov
mov
aas
cs
shrl
andl
sbb
sub
stos
mov
lcall
ss
xchg
mov
mov
test
adc
adc
dec
jb
and
test
or
scas
xchg
dec
lahf
push
xchg
push
add
mov
xchg
lds
fistpl
sbb
add
inc
repz
lahf
pusha
call
xor
outsb
imul
mov
cmp
clc
pop
mov
mov
push
cmp
xor
cmp
icebp
add
pusha
cmove
out
xchg
data16
insl
daa
out
ret
popf
popa
sbb
pop
sub
jmp
jg
inc
sub
cs
test
and
jo
stos
test
add
and
ret
pop
addr16
outsl
pusha
dec
xor
lahf
mov
cmpsb
cvttps2pi
mov
hlt
adc
repz
cmp
in
mov
loopne
add
jl
addl
lahf
mov
jno
aad
xchg
mov
dec
cmp
lcall
addr16
sub
mov
pop
and
in
inc
pushf
sub
pop
mov
inc
jae
xchg
pop
mov
mov
mov
add
call
inc
cmpb
push
in
dec
popa
lds
je
out
insb
dec
mov
xorl
jle
pop
not
inc
daa
and
cmpsb
fiadds
sub
aas
enter
pop
stc
pusha
lds
stos
push
arpl
test
les
outsl
aaa
dec
stos
jmp
push
pop
push
mov
aam
sti
dec
mov
out
call
sub
sub
shrb
jg
mov
pop
inc
mov
cmp
cmc
sub
shll
and
rcll
dec
icebp
fstl
mov
sbb
aaa
cmp
and
adcl
test
push
jp
push
int
or
pushf
adc
cmp
push
pop
jns
test
adc
or
xchg
dec
pop
out
cmp
lods
js
add
test
in
in
inc
inc
and
stos
cmp
jle
push
mov
fisubl
outsb
mov
sub
mov
inc
and
xchg
stos
mov
pop
push
adc
sbb
repnz
loopne
sarb
std
test
mov
rorb
cmp
sub
lods
and
mov
mov
mov
in
in
scas
mov
jno
push
sub
fdiv
xchg
sub
fsubs
adc
cmp
jle
stos
lret
std
test
push
jmp
xchg
pop
push
pop
dec
sbbl
sub
mov
xor
push
cmp
adc
jb
test
dec
daa
adc
inc
sub
into
and
cmpsl
popa
lret
aas
lods
dec
adc
or
xchg
rorl
outsl
stc
jp
ret
cli
add
pushf
cmp
add
outsb
xchg
dec
shlb
cld
incl
cmp
jae
sub
push
sbb
adc
sub
push
jecxz
add
pusha
pushl
dec
and
cli
xchg
lock
pop
sbb
ret
dec
pop
add
push
sub
ror
bound
jp
inc
adc
jecxz
out
inc
loop
clc
notl
adc
loope
xchg
jl
std
mov
or
and
xchg
add
sub
jbe
jmp
icebp
push
pop
stos
dec
iret
mov
xchg
in
xchg
lret
sbb
test
stos
or
inc
movsb
popa
push
fnsave
pop
rorl
jb
jnp
call
push
jb
out
cwtl
lea
jle
in
ret
in
or
js
sub
push
pop
cmp
or
out
add
pop
inc
mov
je
lock
rorb
sahf
pusha
sub
pusha
dec
pop
loop
popf
test
or
xchg
xchg
xchg
xchg
add
incl
repz
fnstcw
ja
sub
mov
icebp
xlat
movsl
leave
adc
xchg
faddp
imul
mov
jge
xor
jno
mov
ljmp
ret
xor
add
xchg
xchg
mov
jg
iret
flds
bound
mov
and
cmp
mov
mov
lds
roll
and
push
sub
outsl
lock
or
push
push
aaa
cmp
and
loope
cmc
lods
xchg
cs
sub
and
clc
mov
mov
or
pop
inc
not
lods
dec
ljmp
scas
sysenter
aad
mov
out
stos
xor
mov
mov
push
cwtl
rcrb
enter
inc
push
mov
outsl
mov
cs
or
jno
call
ret
mov
fcmovbe
sbb
cli
int3
addr16
mov
test
mov
shr
xchg
lock
je
jmp
add
pop
je
cmp
stc
inc
sub
shrl
add
pop
test
lahf
mov
enter
aas
add
xorl
dec
lcall
cmp
stos
add
jmp
aad
test
xchg
out
jmp
es
xchg
movsb
mov
mov
push
push
xor
lds
in
lret
test
mov
xchg
sub
ds
jae
scas
nop
lods
cmc
icebp
adc
lret
insl
dec
int
push
repnz
xor
xor
mov
call
movsb
or
and
test
push
out
add
stos
mov
es
fs
es
lock
cltd
mov
in
sub
roll
loope
loopne
dec
or
dec
scas
dec
jno
cld
movsl
je
loopne
clc
add
in
ss
push
arpl
dec
nop
pop
cld
adcl
push
gs
fwait
mov
lock
dec
adc
adc
jecxz
push
imul
or
sahf
or
int
cmp
xchg
add
cmpl
xor
xchg
enter
fst
mov
push
pop
pushf
dec
fiaddl
lods
jb,pn
sub
jbe
mov
dec
jmp
push
repz
outsb
lahf
pop
push
das
pop
inc
cmpsl
inc
xlat
jno
jns
sub
aas
mov
xor
cmp
shll
xor
and
cmp
jg
xchg
mov
aad
dec
inc
mov
xor
mov
sub
xor
mov
fcoms
push
mov
pop
imul
repz
add
mov
dec
jno
mov
jbe
hlt
fsubl
sbb
inc
vmovaps
dec
jge
mov
pop
pop
sti
jae
lcall
call
inc
jns
or
dec
or
shr
repz
xor
cld
or
xchg
clc
xor
repz
sub
jb
jle
sbb
sbb
sbb
addr16
pop
in
sbb
sarb
lods
fsts
sbb
and
jecxz
aam
fsubrl
cmpsb
lret
loopne
sbbl
add
push
mov
pop
or
jne
adc
lea
sbb
jmp
fs
fwait
adc
data16
ljmp
push
mov
and
adc
pop
dec
leave
push
lcall
sbb
and
mov
sbb
imul
push
pop
out
mov
imull
jne
cmpsl
popf
jecxz
jne
fcoml
mov
pmullw
loopne
jp
lcall
add
push
and
cmp
sub
or
testl
jne
push
pop
aaa
ja
das
pop
loopne
mov
xlat
push
ja
push
inc
int3
jge
add
lea
sbb
mov
mov
in
dec
xor
shlb
sbb
js
mov
mov
mov
stos
mov
xchg
ja
jle
mov
xchg
outsl
inc
fidivl
sbb
fs
clc
add
mov
js
pop
notl
pop
sbb
je
popa
mov
and
leave
push
mov
mov
popa
mov
mov
pop
or
daa
dec
loope
xchg
inc
test
in
ret
test
lahf
stos
xor
inc
loop
icebp
and
addr16
outsl
sbb
xor
incl
outsb
sbb
dec
pop
test
mov
push
add
or
cltd
xor
and
dec
lds
xchg
cmp
add
xor
insl
inc
jns
mov
test
jecxz
popf
lods
and
cmp
jecxz
popa
add
loopne
repz
mov
movsb
popa
cmpsl
mov
pop
into
aaa
inc
es
mov
adc
adc
out
mov
stos
jle
or
push
enter
movsb
imul
jl
das
mov
mov
xchg
bound
sbb
lahf
push
stc
add
or
in
xchg
dec
mov
cwtl
xchg
xchg
gs
out
push
sbb
jmp
cmpsl
cs
xor
push
adc
iret
xchg
mov
xchg
dec
test
stos
pop
enter
dec
sahf
add
adc
dec
out
nop
jge
lahf
lea
js
not
addr16
popa
adc
jb
jnp
sbb
cmc
gs
xchg
ss
add
icebp
cld
dec
and
xor
inc
jmp
arpl
or
inc
or
adc
popl
idiv
mov
inc
pop
mov
dec
mov
mov
and
in
mov
iret
orb
aad
pop
imul
mov
in
insl
mov
pop
sub
in
mov
and
dec
mov
inc
or
mov
inc
mov
pop
cmpsl
or
loop
sbb
pop
outsb
mov
in
push
jbe
jle
jns
arpl
push
push
inc
out
fldl
ss
cmc
xchg
data16
jbe
cli
sbb
imul
xchg
repz
mov
cltd
pushl
clc
or
lods
lcall
xchg
sub
test
fs
lds
cmp
mov
shr
out
mov
mov
repnz
imul
cmp
mov
les
sbb
pop
test
lret
cwtl
adc
test
xor
ret
and
inc
mov
ja
mov
mov
pusha
mov
fstl
popf
ja
mov
sub
jbe
loop
mov
je
cmpb
cmpb
dec
icebp
movsl
mov
inc
and
inc
repz
sbb
mov
dec
xor
subl
sub
out
out
mov
out
mov
daa
lahf
flds
mov
jl
repz
push
push
iret
int3
jmp
add
mov
ret
call
js
inc
les
xchg
sub
add
adc
mov
loope
addr16
and
scas
popf
outsl
lock
fisttpl
pop
std
popf
fs
xor
fsts
cmp
inc
scas
test
push
mov
sbb
retw
outsb
mov
push
jo
xlat
pop
xlat
xchg
pusha
js
icebp
xchg
pusha
leave
push
jecxz
jg
div
cmp
push
or
dec
nop
mov
in
mov
loopne
movsl
aaa
sbb
aaa
mov
sarb
jecxz
mov
jge
pusha
sbb
lahf
mov
dec
hlt
stos
arpl
mov
xlat
mov
or
jne
mov
pop
aas
roll
std
xchg
test
ret
pop
es
dec
outsl
cmp
cmp
sbb
dec
push
xchg
cli
int
scas
repnz
out
lods
jnp
mov
jge
push
mov
mov
adc
out
add
daa
push
sbb
xor
and
mov
out
cmpsl
scas
packuswb
int
xor
sbb
sarl
in
ljmp
sub
or
fisttps
pop
xchg
jae
jne
aaa
scas
jae
out
jle
jb
mov
hlt
mov
cmpsb
call
movsb
out
jp
adc
les
cmp
xor
adc
bound
push
sub
popf
aas
push
sbb
pop
adc
mov
lods
addb
out
adc
cmc
jns
or
ss
testl
iret
add
cs
das
aad
hlt
jbe,pt
int
sar
inc
mov
xor
xor
fidivrs
mov
leave
xor
into
stos
pop
daa
mov
add
add
pop
out
rcll
repnz
inc
ds
test
xchg
or
jl
jle
insl
popa
cld
mov
lds
test
mov
movntq
insl
fcmove
and
adc
dec
jo
cli
jg
mov
sub
xchg
les
addps
sti
flds
rolb
fldl
add
mov
push
lret
ret
mov
out
movsl
xlat
dec
and
imul
cmpsb
push
bound
adc
syscall
push
pusha
mov
movsb
mov
popa
addr16
bound
sbbb
negl
cmpsb
jae
jg
push
cmp
mov
jno
pop
jge
cmp
mov
cld
ret
and
mov
xor
sti
jmp
shlb
mov
dec
mov
jp
inc
xor
addl
push
test
xor
cwtl
clc
mov
pop
sub
mov
inc
fldcw
addl
xor
bound
xor
rep
lcall
pop
push
loop
fs
shlb
or
inc
mov
aad
out
cmp
dec
icebp
push
cs
out
push
mov
pop
dec
stc
jmp
pusha
rcrl
adc
sub
jo
lods
jl
mov
popf
ljmp
mov
addr16
mov
scas
xor
add
jge
test
icebp
jne
loope
jns
or
cmp
ficomps
in
push
inc
sahf
inc
sti
push
ja
int
xchg
xorl
mov
inc
stos
mov
dec
add
ficomps
xchg
pop
dec
sbb
into
jle
addb
jl
dec
adc
or
daa
mov
jg
sub
jno
int
ljmp
mov
repnz
outsl
ja
sub
lock
jno
mov
pusha
and
mov
xchg
addr16
cmp
pop
ds
out
test
cmpsl
rorl
dec
loope
jns
rorl
adc
inc
mov
call
pop
imul
sbb
in
test
pop
push
mov
mov
dec
loopne
je
ds
jae
pop
inc
test
xchg
inc
dec
pop
jo
push
jo
addr16
inc
fisttpll
add
adc
jmp
adc
cltd
mov
outsb
push
pop
pusha
rcr
jnp
cmpsb
imull
sahf
adc
mov
cmp
sub
jb
jns
lahf
cmpb
inc
sub
or
push
cmpsl
aaa
in
loop
mov
cmp
inc
xchg
push
cld
rcl
ljmp
clc
adc
adc
imul
sub
inc
mov
or
sbb
subb
dec
test
adc
or
adc
cmp
mov
das
bound
sahf
shrl
aas
jo
daa
aad
imul
ret
and
pusha
or
mov
xor
push
push
lahf
rcrb
out
inc
pop
fwait
outsl
cwtl
insb
pop
fistpll
push
mov
mov
mov
xchg
loope
sbb
into
inc
add
fnstenv
sub
pop
push
test
and
xor
sub
cltd
mov
and
call
mov
mov
imul
insl
push
inc
jne
and
addb
fnstcw
movsb
xlat
cmpsb
insl
idivb
inc
and
insl
enter
add
rcr
xchg
sarb
xchg
ja
fbstp
cmc
cwtl
cmpsl
push
adc
sbb
jge
cld
jbe
test
mov
jns
lods
push
movb
mov
xchg
popa
lock
dec
sbb
scas
adc
fmuls
cmpsb
xchg
add
es
mov
xor
jae
stos
inc
adc
clc
daa
rol
push
in
jmp
cmovnp
inc
add
xchg
mov
or
pop
mov
jbe
sbb
push
stc
push
cmc
jecxz
dec
push
stc
push
push
mov
adc
scas
sti
fmuls
xor
jg
mov
fcomps
cmp
jp
mov
divb
pop
sbb
pop
and
stos
push
adc
add
xchg
mov
movsl
jne
mov
cwtl
adc
lret
dec
pop
adc
cmp
inc
std
lea
popf
imul
aas
jns
xchg
jnp
xchg
cli
push
in
ljmp
iret
mov
cmp
sub
fsubr
ljmp
adc
pop
js
scas
xor
jns
sub
jbe
shr
adc
lds
xchg
mov
popf
dec
ret
mov
shlb
ror
out
mov
adc
dec
or
mov
std
mov
push
or
jb
in
jle
lods
les
lock
aad
inc
jecxz
pop
dec
into
jo
lret
call
jmp
rcrb
mov
xlat
clc
sbb
je
jle
mov
cmp
mov
inc
int3
outsl
sbb
push
jno
stos
xor
imulb
out
or
add
mov
jno
clc
aam
inc
jns
fistps
mov
mov
mov
or
jp
aas
mov
int3
ret
js
mov
lods
mov
flds
ss
dec
jo
mov
int
in
movsb
jl
adcl
mov
orl
pop
xchg
loope
mov
pop
outsl
cmp
fsubs
xchg
fcoms
push
daa
idiv
push
loopne
add
push
or
cld
hlt
push
lret
mov
in
mov
pop
filds
xor
inc
sbb
loope
pushf
cmpsl
in
mov
pop
push
push
imul
jb
int3
in
shl
std
adc
adc
outsb
loop
sub
daa
pop
imul
addr16
pop
mov
pushf
jnp
out
rorb
xchg
push
adcl
or
std
fwait
push
inc
mov
jmp
add
jae
fisubs
xchg
and
test
clc
cmpsl
std
out
idivb
arpl
pop
scas
xor
xchg
dec
lods
or
sarl
outsb
sub
loope
pop
out
push
xchg
mov
and
testl
push
mov
xchg
insw
fnsave
aaa
pop
pop
cmp
ror
and
adc
aaa
and
jge
dec
cs
mov
stc
jl,pn
shrl
push
pop
shrb
mov
rol
in
dec
dec
inc
int3
adc
xor
cmpsl
or
je
subl
stos
test
push
in
fldenv
push
dec
iret
js
add
es
stos
mov
mov
cmp
mulb
clc
aas
xchg
adc
pop
lcall
in
xchg
cmpsl
xchg
and
add
pushf
js
push
and
mov
in
mov
sbb
jo
cmp
shl
lret
adc
lcallw
sub
push
pop
iret
or
adc
test
test
test
outsb
push
call
fdiv
and
mov
ds
or
adc
or
outsl
inc
lea
lea
cmp
insl
insl
lcall
sbb
insb
cmp
loope
pushl
ljmp
lods
sbbl
aad
test
nop
xchg
lcall
jl
out
pop
xchg
mov
arpl
dec
add
sti
sti
pop
cltd
jmp
sub
mov
out
fnstcw
sub
fildll
mov
cmp
out
je
lds
jns
int
call
pushf
xlat
push
outsl
xchg
insl
jae
imul
loopne
sbbl
mov
dec
inc
sti
adc
or
loope
lods
jecxz
dec
repz
and
jmp
movsl
and
pop
rcrb
addr16
lock
push
push
pop
push
push
mov
lret
call
add
xchg
rolb
stc
xorl
int3
setbe
dec
mov
sbb
icebp
imul
pop
nop
push
cmp
out
loopne
inc
mov
in
dec
test
in
sbb
pop
icebp
dec
add
and
aaa
mov
sbb
jp
lea
dec
inc
ljmp
fcmove
data16
aaa
stos
loopne
aad
add
mov
sub
outsl
mov
and
test
stos
xchg
sar
repz
int
xor
shll
cmp
stos
and
subb
pop
lock
insb
popf
push
adc
inc
sbb
cld
push
stos
dec
mov
shlb
iret
stos
lahf
rolb
dec
adc
dec
xchg
push
rcrb
push
cwtl
lods
mov
add
dec
mov
sbb
mov
gs
push
pop
or
mov
enter
in
fcompl
pop
xchg
xchg
popa
pop
dec
int3
xor
jbe
fcmovu
lods
mov
sbb
jne
add
pop
out
ja
js
mov
stos
into
out
mov
mov
push
sahf
rcl
add
mov
inc
lock
aaa
popf
ss
sub
xor
dec
inc
jb
je
adc
push
add
stos
jbe
cmp
shll
loopne
xchg
subl
sbbb
push
and
mov
addr16
sub
mov
xchg
push
nop
xor
inc
dec
xchg
and
add
ret
aam
repz
add
push
mov
cltd
dec
out
in
loop
xchg
mov
rorb
in
pusha
rcrl
mov
xchg
stos
mov
dec
insb
cmpsb
in
mov
jno
inc
scas
mov
icebp
or
jl
mov
push
inc
mov
cmp
cmpsb
pop
inc
pop
cmp
out
mov
mov
or
adc
or
pop
inc
mov
xorl
jnp
jae
and
dec
xor
arpl
mov
xchg
ror
lock
adc
mov
mov
xchg
out
cld
mov
das
xchg
jae
cld
mov
and
pop
add
sbb
cmp
shrl
les
lock
shll
and
mov
lods
dec
fucompp
inc
ffreep
loop
jmp
inc
mov
push
lcall
pop
sbb
ja
cmp
popa
xchg
cmp
shrb
push
out
xor
jp
lock
icebp
test
mov
pop
jle
mov
test
xor
cmp
mov
pushf
loopne
and
cltd
add
int3
dec
xchg
jb
push
pop
xor
jbe
pop
cli
rcll
orl
mov
bound
movsl
inc
mov
xor
add
cld
mov
in
push
sub
jno
fstp
xlat
shll
mov
lcall
inc
add
pop
pop
or
movsl
rcll
add
cmp
inc
outsb
enter
std
xor
mov
loope
scas
xor
mov
inc
pop
cmpsb
adc
push
ljmp
mov
lods
add
sbb
mov
stc
xor
mov
or
xchg
sahf
mov
icebp
mov
incb
pop
mov
sbb
xor
xchg
int3
nop
jbe
aam
mov
fsubs
sub
addr16
add
mov
inc
sbb
fcmovbe
ss
xchg
arpl
je
mov
lea
lea
pop
sti
fs
add
push
ds
mov
cmp
pop
lahf
mov
stc
pushl
xchg
nop
imul
cmp
fst
and
shll
rcl
je
fwait
in
dec
and
call
fldl
insl
lret
lcall
rcl
sub
fidivrl
movsl
lcall
xchg
xor
jb
dec
dec
fwait
adc
mov
mov
mov
rol
fsubrp
mov
mov
push
out
stos
repnz
imul
sahf
clc
repz
lock
pop
push
pop
out
xor
push
mov
or
sub
aaa
adcb
sub
mov
adc
push
or
filds
jnp
out
pop
jecxz
and
aad
lods
xchg
inc
xchg
jl
lahf
xchg
push
pop
icebp
out
nop
in
fbld
mov
adc
add
js
push
push
repz
movsb
test
int
fisubrs
scas
dec
fs
push
mov
sbb
pop
jp
outsl
clc
lret
xchg
nop
outsb
std
xchg
repnz
inc
stos
mov
or
xchg
rcrb
dec
stos
pushl
xchg
xchg
js
inc
or
mov
sbb
call
ficomps
lods
and
cmp
out
ja
cwtl
sub
cmpsb
popa
push
jle
jge
andb
push
repz
xchg
repz
sbb
add
pop
aam
daa
lea
lcall
sbb
pop
or
outsb
xchg
imulb
inc
repz
sbb
jp
decl
mov
mov
fwait
daa
dec
sub
lods
out
test
push
pushf
fldt
sarl
movsb
jno
jno
cli
adc
xor
adc
inc
movsl
ds
xchg
mov
cmc
sbb
cmpsl
xchg
mov
pop
in
cld
fcmove
popf
pop
fists
mov
xor
push
sub
inc
faddl
lock
aas
data16
jmp
jb
fisttpll
dec
ja
outsl
bound
adc
aam
cmp
inc
sbb
stc
pusha
out
daa
xor
mov
ret
in
xor
out
nop
test
pusha
clc
inc
mov
jmp
ret
mov
cmpsl
int3
or
mov
int3
addb
cmp
inc
in
sti
inc
push
ja
push
jo
sub
adc
jp
xor
and
mov
pop
cld
ss
add
mov
push
shlb
dec
push
inc
xchg
xchg
fcomip
xor
sub
decl
leave
add
mov
mov
in
jge
mov
decb
mov
ss
or
mov
xor
pop
iret
test
jns
andb
loope
femms
pop
cld
adc
sbb
daa
and
std
sub
cmp
and
add
gs
fwait
push
rcl
dec
aaa
and
add
popa
pop
sahf
aam
popa
adc
xchg
adc
stc
iret
fsubl
inc
and
popf
xlat
and
lcall
push
push
loope
testl
mov
pusha
dec
sub
pop
sahf
sub
cs
int
sti
lahf
cmp
cmp
lcall
into
fisubrl
sbb
in
decb
test
insl
pop
adc
jge
cltd
inc
add
les
stc
fbld
jno
ss
jbe
scas
out
add
lret
dec
ret
pop
rorb
xchg
cmp
pushf
fistps
and
mov
or
inc
and
loope
add
in
into
sar
or
andb
push
lods
inc
fists
mov
jg
jge
mov
push
mov
cmp
jle
test
dec
and
iret
push
xchg
dec
push
sahf
jecxz
stc
adc
rcrb
add
sub
rcr
lock
sub
xor
or
test
xor
fisubrs
xchg
mov
cli
rolb
and
dec
arpl
ja
pop
adc
test
push
dec
fnstsw
or
rcll
mov
fbstp
add
data16
and
mov
fs
sarb
adc
xor
jne
fsubl
loopne
dec
jnp
push
mov
cmpsb
push
lcall
loope
addr16
xchg
or
sar
test
jbe
mov
pop
inc
xchg
mov
or
aaa
cmp
es
out
imulb
iret
test
aas
icebp
shll
lret
fsubl
sbb
sub
bound
push
mov
loop
add
pop
mov
xchg
push
pop
inc
sbb
push
aam
loopne
jnp
lret
mov
adcb
pop
aaa
repz
push
sbb
pop
pusha
ja
sbb
ficoms
mov
xlat
mov
mov
mov
mov
ds
push
andl
dec
testb
jns
lcall
xor
xor
iret
inc
mov
xchg
sbb
add
pop
mov
cmp
xchg
mov
xchg
jnp
sarl
bt
leave
aaa
int
stos
nop
sahf
xor
xor
jne
mov
aam
outsl
cmpsl
mov
mov
or
into
jmp
fld
fwait
mov
add
subl
xchg
sar
mov
sub
sbb
dec
push
inc
mov
jns
jmp
sbb
in
mov
sbb
adc
mov
or
jb
stos
fwait
sub
push
pushf
fnsave
mov
pop
jne
dec
mov
fsubrl
lds
in
pop
mov
rcll
pop
fistpl
and
sub
repnz
incl
dec
test
push
mov
lret
out
mov
gs
inc
mov
insb
jecxz
pop
jno
cmpsl
rorl
dec
xchg
dec
sub
aad
orb
fisttpll
incb
lods
sbb
mov
push
aam
jecxz
fwait
push
lods
mov
mov
xor
sub
scas
insl
fisttpl
inc
sbb
imul
loope
sbb
push
rorb
ja
sub
sbb
mov
in
lret
jne
xor
cmp
push
shrl
pop
dec
cs
outsb
mov
cmp
add
sbb
imul
inc
sbb
aad
dec
stos
pop
jbe
or
sub
xchg
js
push
mov
inc
testb
dec
push
iret
mov
jnp
mov
push
cmp
mov
mov
xchg
roll
sbb
jne
sbb
xchg
mov
adc
pop
int3
push
fistl
out
dec
xor
mov
xchg
test
fistpl
bound
adc
out
arpl
outsl
sub
pop
es
jns
add
fnstenv
add
xlat
mov
pop
mov
push
stos
ret
add
dec
mov
fidivrs
imull
sti
jb
add
mov
std
pop
cmpsb
clc
push
lahf
test
sarb
gs
jge
inc
movsl
mov
jecxz
repnz
and
pop
cwtl
sub
nop
jmp
xor
pop
aaa
test
sbb
pop
iret
and
cmp
test
add
sub
sbb
push
fsubr
mov
pushf
packsswb
dec
sbb
clc
imul
pop
cmp
mov
shl
push
jp
or
mov
clc
inc
push
fstpt
test
test
cmpb
mov
ja
or
cmp
adc
ss
sbb
in
mov
pop
pushf
dec
je
clc
mov
insb
xor
test
jmp
or
push
or
dec
ja
add
lcall
add
sub
daa
mov
mov
lahf
or
push
and
lcall
pop
repnz
mov
out
adc
out
xor
popa
in
sub
push
mov
ret
add
shl
cld
or
hlt
popa
add
and
notb
cltd
mov
and
push
dec
inc
cmp
fwait
push
inc
pop
ds
scas
hlt
in
and
fldt
rcrl
addr16
cmpsb
add
mov
xor
pop
push
hlt
mov
mov
pop
or
aam
out
cmc
sub
sub
pushf
out
lock
mov
inc
push
popf
jle
sbb
les
pop
sti
xchg
pxor
mov
pop
rorb
xor
incl
xchg
sbb
in
loop
fs
add
or
clc
shrl
xor
ds
ds
sbb
or
pop
lahf
test
xor
and
adc
xchg
fcmovbe
test
into
std
out
sbb
insl
addr16
out
sbbb
sbb
mov
sarl
pop
loopne
lea
push
ds
sub
fwait
mov
rcr
aad
sub
sub
jl
inc
add
add
repnz
lods
inc
lea
int3
dec
jp
movsl
sub
out
jo
popa
adc
dec
mov
adcb
xor
gs
sbbb
push
lcall
mov
push
insb
aas
push
mov
mov
adc
adc
fildl
and
pop
and
outsl
adc
jb
sbb
std
divl
stos
push
and
sahf
aad
data16
push
push
adc
scas
lea
repnz
jp
push
dec
sbb
pop
es
aaa
inc
rorb
jle
cmc
in
dec
pop
sub
jge
cmp
aaa
test
decl
repz
sbb
mov
jecxz
pop
xor
mov
pop
std
and
loope
add
lods
push
xor
adc
int3
sub
das
pop
rorb
jmp
xchg
xor
dec
popa
lcall
fistl
xchg
jp
push
in
sbb
mov
pop
jg
add
into
cwtl
mov
int3
mov
arpl
xchg
out
push
lahf
ret
add
sub
cmc
ret
push
ds
xchg
lret
xor
inc
pop
mov
std
xor
iret
mov
int3
pop
bswap
push
in
cmp
addb
popa
fmull
rol
cmc
push
out
cwtl
jns
jne
sbb
mov
in
scas
xlat
jmp
stos
mov
daa
andb
xor
push
gs
bound
test
sbb
xor
lods
stc
clc
mov
lret
adc
hlt
xor
mov
adc
xchg
mov
mov
cli
cmpsl
jnp
nop
mov
adc
mov
jmp
popf
stc
cs
fs
sarb
mov
xchg
lods
lods
sbb
add
or
aaa
add
pop
cmpl
in
js
xchg
rorb
cmpsb
jno
arpl
sahf
daa
push
test
popa
repnz
movsl
cli
add
and
mov
mov
lods
test
into
inc
imul
aam
inc
rcrb
push
lea
mov
pop
and
jb
pop
push
stos
int3
push
adcb
dec
mov
popa
xor
cmp
push
pop
cmpsl
faddp
jno
imul
adc
mov
mov
dec
imul
mov
pop
popf
insl
dec
in
data16
cltd
test
icebp
test
stos
mov
sub
adc
lret
mov
ja
pop
shrb
jae
nop
sarl
add
inc
xchg
sbb
jae
push
add
rcr
adc
dec
repnz
aaa
arpl
xchg
pop
in
lods
mov
mov
inc
pop
sub
add
hlt
push
lret
aaa
fs
pop
jns
pop
xchg
inc
imul
daa
fnsave
arpl
xorl
sub
push
inc
mov
lods
add
arpl
jae
sbb
ret
shll
cmpsb
or
inc
push
enter
andl
add
mov
dec
loopne
pushf
sbb
mov
into
cmpsl
push
mov
in
mov
das
and
mov
nop
xchg
enter
mov
flds
les
jp
xchg
mov
lcall
test
arpl
dec
test
mov
icebp
insl
iret
pop
add
xchg
cmp
inc
mov
push
jne
cmpsb
inc
clc
cmp
xor
in
push
mov
or
arpl
lods
pop
push
xchg
push
pop
mov
les
nop
pop
sub
insb
xlat
push
scas
pushf
push
in
mov
jne
xor
push
sbb
negb
pop
das
mov
lcall
scas
loopne
cmp
dec
insl
stos
or
add
xor
jmp
fnstenv
and
daa
aam
mov
shrl
fucom
xor
mov
dec
popa
ja
int
addr16
enter
out
jbe
sbb
jns
fstl
pop
xor
mov
data16
lcall
add
insb
or
sub
scas
out
push
fcmove
mov
or
jecxz
repz
pop
cmp
pop
sti
add
sbb
and
xor
pop
dec
push
adc
inc
push
rorb
daa
dec
insb
xor
stc
test
cli
jecxz
mov
pop
insl
aas
shlb
mov
cmp
pusha
or
cmp
out
lods
sbb
jmp
jp
sub
je
and
add
push
cmp
test
test
lock
dec
imul
dec
and
lds
xor
in
insl
xchg
sbb
lahf
fisttpll
dec
jg
pop
mov
cmp
lahf
pop
imul
lcall
adc
cld
pop
mov
in
sbb
rorb
push
adc
dec
jo
ret
icebp
nop
loope
popf
mov
sahf
lret
cwtl
divb
sbb
nop
movsb
mov
push
popl
jno
push
pop
sar
and
mov
sbb
pop
and
mov
push
or
sub
mov
adc
outsb
lods
cmp
pop
xor
in
idivl
or
add
ljmp
les
test
loope
mov
or
or
clc
popf
cwtl
movsl
cli
lock
loopne
add
ret
dec
xor
cmc
fs
scas
insl
rcrb
lcall
arpl
aam
mov
dec
mov
dec
fadds
jb
xlat
adc
push
inc
loope
lds
and
insl
push
jnp
test
xor
int3
or
xor
sub
outsb
inc
adc
fldenv
adc
lahf
lods
stc
icebp
jmp
xor
cmpsl
out
mov
inc
fucomip
mov
pop
sahf
sub
cmp
fucomp
mov
inc
xchg
jp
ds
icebp
xchg
inc
pop
test
sbb
xchg
cmp
and
xor
jne
out
xchg
inc
lea
or
mov
movsb
push
stos
xor
dec
cltd
aad
test
dec
or
pusha
sarb
mov
add
lods
jns
pop
add
insl
in
ss
and
ja
fcompl
test
xchg
pop
addr16
test
sub
dec
pop
imul
inc
xor
inc
jge
xchg
repz
xchg
or
fidivs
fwait
mov
mov
jge
inc
hlt
xchg
frstor
ficompl
mov
int3
std
pop
fcoms
loop
push
xchg
aaa
cmpsl
or
xchg
or
out
fistpll
push
loope
out
dec
enter
les
push
repnz
jl
into
rorl
and
js
and
movsl
inc
lock
xor
es
pop
in
inc
sbb
pop
les
jle
pop
mov
push
cmc
jns
push
imul
nop
mov
pop
jns
and
pushf
mov
add
movsl
movsb
insb
mov
in
cmp
jae
dec
push
lods
mov
pop
movsb
repz
subps
mov
sbb
std
jne
xor
adc
jge
es
cmp
fnstenv
dec
movsb
cmp
cmpsb
mov
sbb
jne
xchg
data16
lods
and
mov
fcoms
jmp
xchg
push
scas
inc
mov
out
mov
push
or
enter
jmp
mov
sbb
rcl
sub
idivl
aas
mov
in
pop
mov
or
push
in
ficoml
imul
jb
aam
fcomi
inc
test
hlt
xchg
negb
pop
mov
mov
pop
fidivrl
jno
xor
pop
jg
push
js
dec
xor
push
adc
jle
sub
pop
ja
movsb
out
pop
dec
add
push
mov
add
mov
xor
mov
outsb
push
pop
mov
roll
push
repnz
loop
cmc
xor
xor
lahf
sub
or
or
mov
push
ret
xor
xor
ds
pop
cmc
insl
in
stc
xor
data16
enter
ja
clc
xor
push
inc
xor
pop
xor
fistps
mov
fsubrl
pushf
jb
lea
cmp
lds
inc
adc
mov
xor
add
push
lret
daa
xchg
add
in
lds
push
xor
cs
in
in
out
push
mov
mov
mov
jae
test
aaa
and
mov
sbb
fs
pop
pop
int3
mov
lods
push
std
jbe
or
jecxz
or
or
jmp
cmp
adc
in
push
mov
arpl
xor
sub
lods
pop
sub
lds
ja
mov
pop
in
add
in
mov
call
xchg
shlb
icebp
cld
loopne
fiadds
cmp
aaa
mov
push
aam
outsl
and
mov
arpl
or
bound
mov
mov
pop
xchg
xor
and
push
xchg
adc
rcrl
test
add
cmpsb
div
xor
inc
and
mov
adc
mov
es
das
gs
stos
ds
rcr
lret
cs
lret
pop
outsl
flds
pop
pop
cmpsl
stc
sbb
movsb
jmp
int3
jne
movsb
les
mov
out
or
dec
roll
ss
cmp
std
push
fwait
and
and
shr
push
or
test
mov
stos
cmp
mov
mov
pop
sbb
loopne
mov
push
aas
jle
mov
pop
hlt
pop
or
pop
inc
ficompl
xchg
jbe
outsl
mov
dec
adc
insl
mov
addr16
aam
pop
in
xor
testb
sub
test
loopne
xorb
jae
pop
jmp
mov
xor
faddp
push
cwtl
lods
push
int3
cwtl
mov
dec
sub
and
xor
jl
sbb
popf
xchg
ret
loop
popa
popf
xchg
mov
mov
sub
lea
and
or
push
in
pop
push
or
add
roll
jo
jno
xchg
clc
js
addb
fsub
mov
push
and
std
aas
and
mov
mov
cmpsb
jne
lcall
mov
lret
cmpl
ud2
iret
popa
dec
mov
hlt
movsl
push
xchg
jns
incl
pop
call
test
mov
scas
mov
push
dec
mov
icebp
sbbl
mov
xchg
repz
rcr
lock
mov
clc
cltd
xor
in
les
cmpsl
lock
pop
mov
inc
imul
mov
je
xchg
popf
cwtl
outsb
gs
repz
test
cltd
outsb
rorl
ds
adc
pop
jmp
jbe
add
sbb
pop
loope
xchg
cld
les
out
ret
cmc
daa
call
inc
cmpsb
and
imul
mov
in
push
imul
jnp,pt
push
mov
inc
sbb
adc
imul
outsb
pop
nop
negb
inc
jl
pop
lods
dec
add
hlt
jecxz
add
call
test
dec
out
std
mov
sub
xchg
out
push
mov
loopne
push
dec
enter
ret
adc
jp
es
jl
scas
pop
dec
and
ficoms
ror
nop
idivb
arpl
mov
dec
lods
add
mov
js
lock
xor
cwtl
sbb
mov
jbe
push
mov
bound
sub
push
shlb
les
fdiv
lret
inc
fucomi
mov
pop
repnz
cmp
push
inc
push
pushf
inc
mov
into
scas
jnp
or
dec
movsb
mov
fdivs
outsb
sub
fmul
adcb
jmp
mov
pop
cmpsl
rcrb
sub
inc
aad
push
insl
mov
mov
push
push
sbb
hlt
aad
in
xlat
pop
mov
adc
arpl
pop
ror
stc
inc
mov
lds
insb
andl
xchg
sarb
cmp
cmp
into
and
out
xor
std
mov
pop
call
sub
lret
and
and
jmp
adcl
inc
xchg
lret
fidivrs
xchg
cld
mov
in
sub
scas
dec
test
fistpl
outsb
lea
lds
pop
testl
cmp
lcall
mov
mov
lret
push
sbb
jmp
pop
sbb
nop
cmp
push
jb
outsl
imul
ficoms
outsb
mov
fnstcw
imul
es
fisubrs
pop
dec
in
jle
jmp
iret
loope
jge
mov
sub
jecxz
js
jmp
adc
jl
movl
sub
negl
mov
xchg
pop
fsubp
mov
xchg
nop
xchg
mov
jbe
fsub
xor
cmp
test
push
repz
movsb
mov
cmp
shlb
pushf
fisubl
and
mov
fisubrl
push
movsb
insl
es
ja
add
push
xor
cmp
outsl
or
nop
xor
jns
mov
sbb
ss
push
out
stos
jle
test
data16
mov
lret
xchg
lds
jg
shll
jo
out
mov
sub
xchg
mov
mov
lret
insb
push
stos
cmpsl
sub
cmpl
outsb
xor
or
cmpsb
xchg
push
sub
fisubs
jp
out
cmpsl
testl
jecxz
mov
cmpsl
shlb
shlb
jge
xlat
imull
out
and
mov
adc
inc
nop
mov
inc
rol
sub
pop
cli
rorl
push
cwtl
jno
icebp
cld
aaa
pop
repz
mov
sub
std
adc
lret
imulb
mov
sbb
sarl
ljmp
mov
shrl
movsb
scas
sbb
xchg
xor
es
cmpsb
mov
push
imul
das
repnz
imul
lock
out
inc
xor
rcrb
lods
dec
lcall
dec
scas
inc
pop
and
jno
aas
mov
lock
mov
add
insl
mov
push
testb
sub
push
cmp
add
add
jnp
xor
mov
xchg
xchg
popa
cmc
test
mov
gs
push
sbb
imul
jmp
js
std
and
pop
mov
loopne
std
loop
test
fwait
jl
notb
orb
popa
ret
inc
fildll
repz
daa
cmp
imul
mov
pop
andl
or
sub
push
push
daa
xchg
mov
or
push
lret
std
sbb
insl
xchg
or
andb
mov
testb
or
outsl
dec
repz
mov
mov
adc
in
mov
aas
mov
jb
adc
fcmovne
call
sub
or
orb
and
loopne
imul
out
pusha
mov
push
fstpt
arpl
jl
sbb
jg
mov
push
repnz
shl
and
std
pop
loop
and
lret
sbb
sub
mov
xcrypt-ofb
cmpsl
push
ficoml
lret
or
stos
out
cmp
rcll
xlat
js
sub
test
test
sub
inc
add
and
jle
mov
inc
xor
sbbb
arpl
gs
fcomps
and
inc
aam
or
push
loope
xchg
inc
ret
movsb
flds
cmp
dec
repnz
adc
jb
sub
andb
subl
jns
movsl
xchg
stos
addr16
add
jbe
pop
lret
mov
sbb
xchg
popa
pushf
add
or
jg
fcompl
pop
inc
out
loopne
pop
adc
movsl
loop
xchg
insl
aas
sbb
adc
mov
dec
push
inc
arpl
add
cli
test
cltd
sbb
mov
shr
fidivl
sub
icebp
adc
int3
sti
js
jb
shll
add
pop
xor
fwait
push
dec
fdivs
fists
scas
or
jnp
cli
outsb
and
adc
push
std
in
ret
fxch
xchg
jo
in
adc
mov
ja
sahf
sbbl
xchg
xchg
inc
iret
ficompl
cld
sbb
cmp
fldt
das
inc
aam
xchg
push
std
in
std
add
ljmp
push
into
cmpsl
dec
dec
je
fistpl
mov
test
dec
xor
push
xlat
cmpsb
cmp
cmp
idivb
add
add
in
pop
test
dec
sahf
lea
jl
icebp
das
addr16
imul
cmp
das
rolb
mov
mov
outsl
rcrl
mov
sbb
xor
push
inc
test
push
shrl
stos
mov
mov
jle
cli
dec
and
mov
lcall
mov
jb
aaa
rol
adc
inc
test
fldenv
cwtl
adc
outsb
ja
es
push
iret
mov
nop
or
ret
rorl
sub
fcoml
pop
or
add
mov
dec
jg
stc
lods
ret
push
sbb
test
or
mov
andb
jno
pop
xor
jb
push
daa
pop
jns
arpl
push
cmc
mov
xchg
fimuls
sub
inc
push
mov
add
fisubl
mov
aas
aaa
push
jb
mov
in
imul
mov
adc
dec
aas
lds
mov
dec
xor
insl
jo
adc
inc
pop
dec
push
dec
jbe
jb
mov
je
cmpsb
add
xchg
mov
dec
scas
sub
test
daa
sbb
into
lock
clc
xchg
sub
test
push
mov
andb
in
mov
mov
ja
popf
xchg
fistpll
test
adc
cmp
pop
in
xchg
aam
cmp
jl
push
addr16
push
push
fisubs
das
repnz
lret
cmp
mov
mov
mov
je
sbb
cs
cmc
xchg
data16
int3
cmc
pop
cmc
fimuls
imul
mov
xchg
shrb
fldl
sbb
mov
xor
mov
cmp
outsb
in
mov
dec
cmp
pop
or
shlb
insl
push
test
pop
gs
mov
jnp
pusha
int
push
addr16
mov
js
mov
std
sbb
stos
adc
xor
and
out
inc
loop
sbb
icebp
sbb
sahf
sub
and
stos
shlb
mov
sub
movsb
nop
mov
fs
pop
jo
mov
fwait
scas
call
aam
and
cmp
adc
xchg
xchg
add
aad
xchg
aam
leave
in
je
and
lcall
loope
adc
in
jmp
jbe
fstpl
inc
aaa
das
push
lods
inc
jg
fisubrs
mov
aas
es
xchg
mov
cmpsl
dec
mov
mov
jae
out
xor
and
mov
mov
xchg
arpl
push
pushf
imul
test
mov
iret
push
xchg
xor
daa
cmpsb
aas
jmp
push
cltd
stos
out
std
mov
sbbl
jecxz
dec
test
and
pusha
inc
sub
daa
push
pause
sbb
ja
cltd
imul
add
fdivl
jb
xor
dec
sbb
stos
mov
adc
mov
jo
push
ret
test
lods
sbb
adc
pop
sarb
sbb
jg
testb
fwait
enter
add
mov
cmpsb
popf
xchg
push
loopne
shrb
ss
mov
sbb
dec
cmp
rclb
pop
sub
jge
xor
scas
cmpsb
rcll
xlat
mov
dec
lret
push
mov
inc
sub
mov
repz
push
dec
notl
daa
test
and
loopne
int
sahf
out
push
or
popa
dec
sub
lahf
test
inc
xlat
add
add
and
push
dec
cmp
sbb
mov
cmc
xor
lret
push
cmc
push
sub
mov
jne
cmp
repnz
fidivl
enter
mov
loopne
out
push
mov
jecxz
add
out
adc
loop
lret
rcrb
mull
jmp
ud1
cli
insb
add
lret
sub
add
shr
fs
jge
imul
pop
or
enter
mov
inc
loop
dec
mov
cs
mov
sbb
mov
cwtl
and
adc
bound
repnz
push
adc
push
pop
pop
cltd
out
inc
pusha
sbb
add
add
cmp
pop
cs
mov
jo
xchg
loop
in
jecxz
fmull
dec
les
cmpsb
out
jns
imul
fisttpl
outsb
std
enter
adc
test
or
jp
sbb
mov
jns
fmull
add
jmp
mov
es
dec
xchg
push
push
pop
ja
stos
xor
jns
jl
ret
in
sub
sbb
stos
ss
pop
adc
add
js
pop
dec
inc
dec
sbb
or
cmpsl
dec
pop
push
rol
mov
into
loopne
cmp
andl
mov
test
lods
and
ret
enter
xchg
cmp
adc
lods
jmp
ds
jnp
lea
adcb
leave
orl
inc
and
xor
insl
pop
cmpsl
xchg
add
xchg
cli
push
push
je
dec
jnp
fwait
add
sbb
loopne
es
aas
fcoms
jnp
imul
ja
pop
add
adc
insl
mov
xchg
cs
add
xchg
clc
ds
inc
sti
jecxz
cmp
sbb
loope
inc
mov
sub
and
scas
repz
popa
inc
mov
xchg
aaa
ljmp
cmc
fnstsw
cmp
jnp
scas
push
lahf
sub
shlb
imul
xor
insl
mov
dec
push
aas
out
pop
andb
jmp
aam
push
jae
in
das
push
loop
stos
mov
fnsave
out
pop
nop
lds
mov
int3
and
cmp
sub
jns
sbb
je
ret
lcall
bound
frstor
push
std
lods
in
fildl
mov
test
cmc
les
mov
jbe
push
sbb
les
push
xor
xchg
movsl
cmc
std
sbb
iret
int3
dec
aad
dec
dec
test
dec
enter
stos
loopne
cltd
sub
push
adc
in
mov
fyl2xp1
xchg
test
inc
sahf
lret
les
xor
mov
nop
adc
gs
aaa
jp
in
pushf
sbb
mov
sub
jbe
inc
mov
xchg
mov
fstpl
pop
xchg
xlat
fisttps
out
sub
mov
xchg
js
dec
dec
pop
insl
mov
and
insb
loop
lods
jnp
cmove
mov
push
jle
mov
jmp
repz
insl
cmp
iret
push
insl
test
or
jbe
sbb
hlt
lret
mov
jp
imull
sbb
or
or
pop
flds
cmpsb
xchg
inc
push
shl
sub
sbb
push
jne
add
arpl
adc
xchg
sub
inc
popf
mov
lea
repz
or
repz
pop
push
sbb
xor
je
movsl
pop
mov
in
test
dec
ljmp
jb
push
stc
int
adc
shll
cmp
jl
dec
scas
inc
repnz
fs
shrl
in
jb
out
sbb
mov
movsb
sub
adc
test
xor
ret
rolb
mov
inc
sbb
repnz
xchg
lahf
mov
gs
jle
add
push
out
cmpl
inc
hlt
pop
je
xor
loope
fdivr
mov
sahf
sbb
out
mov
fidivs
jg
add
adc
jmp
sub
dec
fwait
mov
sbb
arpl
jno
mov
mov
adc
jo
imul
daa
in
or
mov
imull
push
sbb
scas
aaa
aas
lret
or
imul
add
dec
fistps
nop
pushf
jo
cmp
leave
out
out
cld
lcall
lods
enter
add
pop
ret
and
cmp
aas
lahf
int3
pop
xchg
inc
ret
xor
cmp
sub
and
mov
adc
sbbl
ret
cltd
inc
mov
fcomps
cmpsl
ljmp
dec
lahf
jo
sti
les
mov
add
pop
cmp
dec
movsb
cmpsl
fisubrs
out
rcr
mov
xorl
jne
jle
or
ljmp
jp
jo
outsb
lcall
pop
enter
inc
out
sub
adc
loope
scas
xchg
mov
mov
mov
xor
adc
pop
sub
lods
jae
bound
xchg
lea
push
cmc
mov
sub
clc
popa
test
xor
ljmp
jne
dec
std
and
in
test
stos
and
xchg
out
sbb
xchg
sub
cmpsl
out
out
ret
add
and
dec
mov
xor
roll
insb
ljmp
push
xor
cmpsb
ret
jno
pop
cld
or
mov
inc
test
mov
mov
je
cld
sub
xchg
mulb
inc
dec
mov
rorb
push
pop
jne
xor
roll
call
and
ja
push
push
test
xchg
xor
int
pop
add
pushf
aam
mov
pop
scas
enter
jnp
xchg
xchg
out
cmp
add
outsb
out
xchg
push
push
imul
pop
sub
sub
push
cmp
mov
clc
adc
mov
ja
test
pushf
xor
fcmovnu
aad
rcll
mov
push
pop
iret
sub
pushf
mov
loopne
sbb
push
cmpsb
or
cmpb
into
sti
xor
mov
outsl
neg
push
mov
mov
daa
loop
mov
mov
xor
and
jecxz
jmp
dec
xor
mov
cs
dec
or
hlt
outsb
loop
gs
inc
call
xor
lods
leave
ret
push
pop
add
out
js
add
lea
pop
insl
out
cmp
sarb
insb
subl
outsl
push
movsl
add
ss
jg
mov
lods
or
push
out
cmpsb
and
scas
sub
rclb
lcall
mov
jne
mov
xchg
xchg
adcb
jo
pop
fdiv
pop
int3
xor
fistpll
jmp
outsl
mov
xor
push
cmp
xor
inc
mov
dec
xlat
push
mov
mov
dec
cmpsl
push
in
mov
insb
adc
xor
adc
daa
inc
rorl
or
cwtl
mov
push
mov
in
pop
jl
pop
imul
ret
xchg
test
push
xchg
sbb
jno
push
sbb
adc
jmp
loopne
popf
adc
test
pop
mov
mov
into
mov
shrl
aaa
shrb
scas
xchg
or
fstl
aas
test
and
xor
add
push
push
push
xchg
out
addl
cltd
mov
int
or
xchg
mov
sahf
jns
aad
fisubl
add
sahf
aad
cmpsl
xchg
push
loopne
xor
cmp
les
jns
sub
aaa
jp
call
xchg
stos
stos
data16
aaa
rcl
das
addl
mov
out
fucomi
add
ja
cmp
and
int
in
jno
add
mov
shl
mov
fwait
xchg
shlb
incl
dec
mov
xchg
sbb
je
nop
or
std
pop
enter
adc
orb
shrd
rcrb
sub
cmpsb
and
sub
out
into
stc
and
adc
ficomps
out
rorb
test
dec
ja
mov
mov
in
loopne
xchg
mov
xchg
sarl
add
aas
lods
mov
shlb
gs
scas
in
aas
mov
pop
sub
xor
fmuls
scas
in
and
fisubl
mov
pop
pop
xchg
hlt
push
in
fwait
add
and
mov
xlat
cld
sub
jmp
out
pop
rcrl
mov
cmc
pop
stos
xor
inc
sbb
sbb
lea
adc
addr16
push
es
cmp
fadds
aad
adc
fsubrp
cmp
mov
das
bound
arpl
imul
pop
xor
xlat
outsb
pop
outsb
pop
inc
pop
mov
cmp
loope
xchg
jno
inc
pop
scas
notl
enter
lea
popa
pop
adc
xchg
mov
scas
jns
pcmpeqd
dec
rcll
dec
clc
mov
or
ret
call
jl,pn
dec
js
cmpsb
push
fcomp
mov
mov
cmp
inc
leave
mov
decb
or
jne
pop
loop
xchg
pop
aaa
jl
scas
xchg
add
test
das
int3
imul
fwait
sub
mov
cmp
cld
repz
add
sbb
into
out
lret
mov
out
xor
add
xchg
dec
inc
cli
xor
fwait
mov
sbb
shll
push
sahf
popf
inc
cld
mov
push
add
xorb
mov
and
cmpsb
mov
loope
test
mov
jmp
es
dec
js
xor
lods
into
ret
or
mov
out
adc
pop
xor
jb
ja
call
dec
dec
jns
and
add
cmpsl
xor
add
adc
mov
jne
fs
adc
call
leave
add
lock
lods
ds
xor
mov
inc
xor
sub
or
aas
pop
sub
ucomiss
fisttpl
dec
or
lret
stos
xor
testl
neg
mov
inc
in
sahf
mov
repnz
add
xorb
mov
mov
std
in
je
lcall
pop
decl
aam
stos
add
test
adc
insl
cmp
fnstenv
pusha
and
stos
sbb
cmc
test
imulb
enter
call
arpl
and
fdivrl
gs
push
inc
cli
fwait
lock
out
pop
push
xor
sbb
das
lds
fidivl
sahf
dec
mov
dec
fwait
pusha
xchg
test
loope
fnstenv
shrl
pop
and
in
pop
aaa
mov
scas
jp
sub
sbb
jnp
icebp
rolb
scas
jb
shrb
xchg
pop
call
cmp
mov
push
enter
scas
bnd
sbb
sbb
insl
xor
dec
mov
loop
sbb
dec
adcb
icebp
subb
dec
je
lret
repnz
imul
mov
jg
lret
push
clc
aad
add
je
popf
mov
add
shr
xlat
aas
adc
mov
mov
bnd
es
adc
aad
into
push
lret
pop
push
sub
out
adc
push
jecxz
arpl
sub
out
outsl
add
mov
pop
repnz
unpckhps
inc
sub
cmp
into
repnz
das
fsubl
rorl
mov
and
mov
inc
inc
test
out
or
jo
add
lret
loopne
cmpl
rorb
jmp
cmpb
out
dec
gs
sti
lods
enter
adc
outsl
lret
movsb
es
lock
orb
roll
ds
fdivr
xchg
jmp
add
xor
push
fnstcw
decl
outsl
mov
cmc
ror
pop
ficoml
mov
sub
out
add
inc
or
sbb
jle
dec
or
lds
pusha
push
les
add
xchg
push
pusha
loopne
xchg
imul
mov
loopne
repz
mov
into
cmpsl
mov
sub
aas
loopne
imulb
int
loopne
add
push
pop
arpl
inc
loop
cmp
inc
mov
movsb
out
jb
bnd
sub
mov
pop
les
popf
mov
mov
mov
ja
mov
mov
fildll
das
shl
mov
push
mov
and
and
mov
out
popa
outsl
dec
dec
mov
jle
gs
xor
js
mov
lea
pop
lock
test
repnz
test
and
sbb
jg
aad
sbbl
xor
imul
dec
cmp
jo
loop
aas
push
add
mov
les
jae
loopne
std
mov
in
add
cmp
ja
imul
pop
je
mov
test
mull
jecxz
in
pushf
push
pop
push
and
icebp
rorl
test
in
dec
and
ljmp
nop
faddp
jbe
jp
mov
push
cmp
popa
dec
scas
cmpsb
push
push
pop
push
incl
icebp
int
pop
inc
pop
cmp
and
ds
fsubs
sub
out
loop
add
dec
xchg
sbb
ljmp
std
aaa
inc
inc
mov
jg
adc
cmp
lods
dec
mov
jge
arpl
unpckhps
sbb
mov
mov
xchg
inc
fists
iret
lahf
push
loopne
inc
xchg
fnstenv
jg
jmp
adc
pop
stos
stos
xchg
loop
lret
sub
je
out
and
push
add
gs
jmp
out
pushf
popf
sarl
inc
aaa
mov
xchg
and
je
outsl
mov
out
ljmp
packsswb
xchg
xchg
cli
mov
or
push
rep
das
lcall
xchg
dec
jno
aam
push
xchg
cs
or
out
lahf
push
in
mov
ljmp
mov
aad
dec
insb
insl
inc
jge
dec
mov
mov
jge
pop
cli
idivl
aaa
repnz
jae
mov
and
cmpl
loop
or
mov
xchg
mov
rcrb
inc
sbb
sub
mov
xor
or
jno
push
psubb
mov
or
sbb
aad
addr16
xchg
and
cli
cmp
lock
shrl
add
mov
sti
dec
or
mov
bound
inc
xchg
fdivs
cmpb
shll
xchg
pop
adc
adcl
push
fisubl
mov
xor
xor
push
psrad
stos
or
mov
js
je
loop
ja
hlt
movsb
aam
loop
outsl
imul
fstpl
sti
and
mov
std
sub
cld
cld
sbb
and
and
int3
dec
pop
lea
mov
inc
adc
push
ds
inc
jnp
fs
cld
dec
enter
rcrb
cmp
jno
loope
adc
int3
aas
cmp
mov
push
mov
out
mov
lcall
sub
mov
mov
aas
mull
mov
xchg
xchg
adc
out
pop
add
gs
fisubl
imul
jecxz
inc
ret
sub
sti
sub
inc
in
testb
xchg
int
movsl
ljmp
inc
dec
add
shlb
and
mov
insb
loope
js
adc
pop
aam
jae
ss
adc
sbb
xchg
pop
out
pop
dec
add
scas
bound
test
rcrl
cld
loope
inc
sti
xor
sbb
outsb
aaa
popf
add
jbe
or
or
adc
cmpsl
cmp
shll
scas
xor
outsl
or
xchg
loopne
test
push
adc
stc
stc
and
imul
inc
addr16
inc
push
in
add
div
push
jge
sahf
outsb
ss
inc
aaa
add
sbb
fimuls
out
int
mov
rclb
scas
pop
cmp
pop
data16
es
jmp
movsl
lret
addr16
jge
lcall
push
jle
pop
pop
movsl
mov
push
in
in
adc
testb
hlt
das
add
xchg
lret
dec
dec
xchg
inc
jp
loop
stos
pop
adc
shr
mov
daa
push
ja
popa
repz
push
or
fs
fsubs
mov
adc
push
int3
push
cmp
cs
pop
adcb
ficomps
popf
mov
add
add
xor
cmp
xchg
pop
arpl
jle
je
dec
in
mov
lcall
out
dec
jb
fisubl
out
out
sbb
movsl
adc
cmpsb
adc
aam
repz
pop
xchg
dec
mov
xor
push
mov
cmc
out
addr16
and
incb
in
mov
xchg
dec
cmp
and
pop
sub
jge
push
xor
sbb
add
stos
inc
sti
and
xchg
cld
negl
inc
fistps
test
sub
mov
jg
mov
aam
sbb
out
sub
pop
push
xchg
ja
or
mov
fisubrs
jge
pop
js
sti
mov
outsb
std
push
adc
xchg
add
jnp
mov
xchg
add
mov
xor
jge
jecxz
add
inc
inc
sbb
faddl
mov
cmp
xor
movsl
and
mov
iret
sub
jb
aam
ljmp
arpl
int3
out
nop
xor
cvtps2pd
pusha
pop
push
lea
jle
mov
ss
mov
lahf
test
cmp
adc
pop
mov
jne
inc
dec
cmpsl
sub
sub
xlat
mov
jo
sahf
pop
fcomps
aas
xchg
mov
lods
xchg
test
or
and
push
push
pop
fnsave
fwait
outsb
lcall
ljmp
inc
jnp
orb
test
xchg
mov
jno
into
sbb
mov
outsl
pusha
cs
push
or
inc
cmp
push
scas
lret
stos
daa
cwtl
shl
out
hlt
shlb
notl
roll
inc
mov
cmc
loop
in
jg
les
shrb
sbbl
andb
xchg
aad
cmp
out
cmp
lret
mov
outsb
mov
ds
sbb
mov
and
jg
aaa
mov
xchg
iret
unpcklps
dec
cli
or
jbe
pop
fwait
inc
xchg
pop
icebp
pop
out
ret
les
adc
imul
push
jno
sbb
jge
fs
add
daa
loopne
lret
ds
movsl
roll
dec
cmp
ret
shl
data16
popa
mov
outsb
pop
mov
sub
push
into
add
dec
jp
movsb
mov
dec
or
pop
jg
and
mov
xchg
mov
stos
or
sub
test
in
les
xchg
test
mov
jmp
cmp
mov
das
fldenv
fs
add
orb
ror
ljmp
pop
outsl
adc
bound
xchg
mov
fsubr
add
fcomps
rorl
inc
and
mov
mov
aad
repz
cld
popf
test
push
dec
xor
shlb
addl
fnstsw
sbb
inc
cld
adc
dec
cmpsb
jns
mov
or
mov
mov
je
sub
test
xor
add
pop
and
dec
fadds
insl
mov
push
shrb
dec
js
xor
push
lret
imul
imul
loop
bound
jmp
cld
fwait
pop
jae
mov
mov
lods
rclb
lds
mov
cmp
sbb
cmp
add
xchg
xor
ja
fld
push
lret
gs
jg
mov
cmp
pop
fidivrs
pop
sub
jno
mov
stc
mov
sub
push
add
sbb
mov
call
jns
cmp
xor
insl
flds
das
cmp
push
fistps
jns
jle
xchg
sub
daa
sti
dec
xchg
mov
xchg
pop
mov
pop
or
movswl
mov
out
cld
xor
lret
call
xlat
mov
cmp
jl
repz
out
jne
cmp
loopne
in
fmul
fs
fadds
mov
xchg
movsb
addb
data16
xor
sub
mov
loope
fs
and
pop
push
xchg
shlb
les
cmp
push
jl
jo
dec
lods
cltd
adc
daa
das
insb
and
out
pop
shrl
xor
dec
out
add
cs
ss
call
leave
pop
sub
out
sub
xchg
int
outsb
gs
add
mov
cwtl
dec
mov
popf
xchg
mov
repnz
sub
jp
or
dec
cs
xor
or
add
std
mov
jg
push
inc
sub
adcl
imul
sub
add
mov
adc
daa
ja
sbb
mov
lods
jno
add
loopne
orb
adc
mov
inc
daa
push
in
lret
mov
sbb
or
je
jo
in
xchg
repz
sub
xor
inc
in
or
push
xorb
fs
bound
pop
xor
cmp
rclb
cmpl
cwtl
sar
xchg
add
sub
push
sbb
inc
sub
jns
inc
data16
lret
loopne
adc
push
dec
push
jae
jnp
jp
sub
xchg
mov
into
xchg
int3
push
pop
lods
sbb
insb
push
repz
xchg
stos
mov
inc
xor
mov
icebp
shll
push
dec
lock
and
repz
outsb
mov
pushf
sub
sbb
adc
pop
imull
std
fidivl
xor
pop
xor
jnp
mov
mov
cmp
enter
xchg
or
lods
decl
jmp
mov
mov
mov
push
sub
or
push
repz
and
mov
das
nop
or
aas
push
int
inc
inc
mov
lahf
fsubr
mov
push
push
pop
pop
mov
loop
aaa
push
lods
lds
js
dec
inc
xchg
repz
fsubs
lret
cmp
pop
and
jg
pop
dec
mov
adc
inc
jl
pop
xchg
movsl
int3
xor
rol
pushf
inc
push
push
insb
jg
fmull
repnz
xchg
add
mov
cld
xchg
xchg
xor
ucomiss
jle
xor
in
push
jp
push
rcll
inc
les
cmpsb
push
mov
or
cli
fnsave
sub
adc
push
lret
add
jo
subb
xchg
cltd
fwait
dec
adc
cld
dec
fldt
mov
leave
int3
mov
adc
push
frstor
ret
out
pop
mov
outsb
inc
cli
hlt
test
add
in
mov
add
scas
push
sub
shrb
inc
aaa
inc
xor
test
sbb
repz
inc
icebp
and
pop
popf
mov
popa
notl
ret
loopne
lahf
and
sbb
and
lock
int
mov
sahf
iret
scas
push
in
add
mov
imul
enter
outsl
dec
or
pop
aad
fiaddl
inc
loopne
iret
adc
ret
cmp
adc
daa
and
xchg
test
pop
jg
test
or
gs
push
rcrl
pop
adc
mov
mov
push
inc
aaa
xor
sub
test
dec
cmp
jl
dec
ljmp
je
popf
adc
jmp
rcrb
or
cmp
mov
pop
jb
pop
inc
sbb
push
mov
sbb
jno
je
out
in
xchg
mov
cmc
jnp
mov
fucomi
xor
int
adc
xor
fs
cli
gs
outsb
cmp
jg
jmp
mov
lds
in
orl
test
arpl
aaa
xchg
xor
jmp
out
xchg
imul
arpl
push
cmp
leave
rclb
movsl
int3
imul
push
aam
imul
xlat
in
jecxz
xchg
in
xor
cmp
sbb
shr
mov
into
and
sahf
cmpb
pop
dec
inc
pop
les
mov
clc
fistpl
jl
add
frstor
adc
stos
arpl
adcl
stos
dec
fisttps
lock
xchg
mov
xchg
mov
lahf
in
pop
aad
push
adc
rcll
lret
imul
lret
sbb
iret
fdivr
fwait
out
push
fxch
mov
mov
xchg
pop
out
in
lret
fdivrs
sti
mov
mov
cmp
inc
cmpsb
adc
std
mov
sbb
cmp
xchg
leave
stc
test
ja
and
repnz
fcoms
scas
push
adc
xor
pop
or
inc
or
xchg
cmpsb
cmc
xlat
lret
dec
negl
add
mov
ret
xchg
cli
xor
xlat
sbb
sbb
in
push
leave
jnp
pop
les
sbb
roll
xsha1
cmpsb
or
mov
fdivl
add
sub
test
int
jns
push
scas
or
cmc
mov
loop
add
adc
movsl
pushf
inc
out
cmpsl
shrb
jg
mov
insb
cmpsl
jae
inc
mov
lahf
call
lods
pushf
ljmp
out
jnp
and
sub
pusha
inc
call
ret
dec
mov
das
test
data16
adc
pop
mov
fists
adc
sbb
es
jae
cwtl
int
cs
rep
mov
sbb
imull
or
push
dec
enter
ret
in
jmp
mov
rorl
and
sbb
xlat
mov
push
stos
les
mov
sti
push
mov
or
dec
push
pop
mov
mov
xor
adc
sub
test
sub
lods
jne
les
mov
fildll
imul
mov
cli
jo
andl
repz
cmp
es
icebp
xor
sub
scas
aad
rcl
pop
jg
jae
lret
int3
sub
stos
xor
cmp
sbb
sub
jne
loope
mov
sub
adc
notb
scas
sub
and
ljmp
and
push
xor
into
dec
dec
popf
cmp
pusha
mov
das
jnp
xor
out
jae
cmp
syscall
cs
stos
lcall
aam
ret
loop
loope
or
hlt
jecxz
fistpll
dec
mov
call
lods
jno
dec
jmp
inc
add
frstor
sbb
mov
scas
dec
push
jne
stc
pop
and
ret
gs
xchg
shl
lods
mov
movsb
mov
cmp
insb
mov
insb
lods
mov
and
dec
and
ja
xor
xchg
push
cld
ja
and
scas
es
hlt
inc
push
adc
das
xchg
loop
aam
mov
jle
jg
and
movb
cltd
push
or
icebp
cmp
or
and
subb
mov
movsb
sbb
inc
call
jp
pop
stos
jns
inc
not
push
inc
push
sbb
out
stos
and
in
mov
dec
sub
and
sbb
fsubrs
stos
add
jo
call
add
mov
movsl
outsb
mov
jge
rcrb
jno
and
and
sbb
push
jne
dec
mov
and
cmp
push
inc
push
pushf
sub
notl
inc
push
mov
adc
call
hlt
xchg
fsubs
mov
shr
insl
stc
fstpt
lods
add
fnstsw
inc
adc
and
mov
std
lret
sbb
adc
cmp
cmpsb
mov
mov
xor
add
mov
popf
cld
pop
jle
dec
cld
mov
sbb
nop
add
xor
pop
js
addr16
push
lret
adc
push
stc
out
mov
mov
xor
addr16
roll
xchg
mov
push
push
aas
aam
outsb
into
mov
mov
in
gs
push
xlat
dec
push
xor
adc
shll
inc
jbe
mov
int3
and
clc
mov
movsl
mov
movsl
dec
rorl
xchg
movsb
mov
and
lock
movsb
sbb
int
pop
cmc
mov
movsl
xchg
cld
test
mov
mov
js
xor
fildll
sti
aaa
fildll
xor
mov
and
bound
push
lcall
xor
lcall
loopne
test
dec
and
popl
shrb
jo
jae
jo
fimull
and
push
or
mov
mov
fisubl
xchg
lea
cmp
div
sub
js
fimull
dec
push
xor
ss
mov
jnp
push
cmpsb
shlb
sub
dec
pop
or
xchg
sub
stos
loopne
jnp
fistl
popf
js
pop
fstpt
add
out
cmpsb
xchg
push
sbb
stos
and
pop
or
aad
sahf
rcll
out
add
push
ret
push
jmp
pop
adcb
mov
xchg
cmpl
test
push
and
mov
cmp
cmp
sub
xchg
rcll
shll
outsb
xor
ret
fstpl
popa
or
out
pop
jl
lahf
jns
xchg
cltd
dec
movl
popa
mov
pop
xchg
hlt
push
push
sti
cmp
js
idiv
insl
inc
push
adc
lcall
sbb
cs
jl
ret
inc
inc
jp
scas
loopne
sub
mov
fsubrs
out
inc
mov
xchg
cmp
enter
add
scas
mov
loope
lahf
dec
pop
mov
adc
jbe
movsb
je
dec
loope
mov
or
enter
add
aad
push
jb
xchg
icebp
jp
in
cmpsb
dec
cld
out
imul
repz
push
scas
push
mov
movsb
sub
jb
mov
enter
in
nop
xchg
push
xor
out
xor
pushf
inc
pop
sub
imul
dec
daa
hlt
mov
in
std
shrb
sub
or
sbb
cwtl
pop
mov
dec
imul
cmp
imul
xchg
ja
xor
mov
xor
fimull
push
pop
js
add
xchg
imul
inc
push
jle
xor
scas
imul
ret
aaa
bound
aad
sbb
push
jl
cmp
clc
orl
in
push
fnstcw
cmp
push
filds
add
ss
jle
mov
add
fsubr
cmp
sti
aam
outsb
and
imul
les
inc
add
sub
loopne
or
cmc
lret
push
mov
or
xor
inc
movsl
lods
or
mov
lret
cmp
clc
mov
in
xor
jo
pop
iret
cmpl
mov
rolb
xor
pop
cmp
dec
pushf
bound
mov
ljmp
and
jg
push
jns
push
push
inc
push
push
or
clc
cwtl
inc
jp
fidivrs
rcrb
bnd
sub
xchg
movsb
aad
or
js
out
mov
cmpsb
popa
sbb
add
sub
lcall
adc
mov
fildll
or
mov
ja
lods
inc
push
jnp
fs
push
or
mov
shll
lret
call
push
out
sub
xchg
cmpsl
inc
sub
xchg
adcb
frndint
cmpsb
aam
jecxz
push
xor
jb
hlt
out
mov
clc
js
and
mov
test
sub
icebp
imul
xlat
inc
das
ss
out
insl
pop
xchg
shl
lea
xlat
dec
or
sbb
and
jns
jg
imul
dec
push
popl
outsb
mov
scas
into
jne
repz
outsl
add
punpckhdq
pop
cmpsl
push
loope
add
lcall
pusha
and
test
ljmp
mov
pusha
adc
dec
test
call
test
int3
adc
fistpl
or
jns
cmp
mov
xchg
xchg
dec
xchg
sub
lcall
sub
adc
or
loopne
mov
sbb
orl
sub
cwtl
iret
dec
in
inc
mov
lods
inc
jmp
outsb
or
fmuls
scas
stos
icebp
jne
xor
int
mov
mov
test
push
mov
xchg
nop
jo
xchg
je
dec
sub
sub
pop
xchg
mov
sub
ljmp
jp
or
pop
std
scas
es
pop
jb
xchg
push
cmc
adc
or
jle
jae
push
arpl
lret
dec
xchg
sub
sub
fstps
adc
or
xor
pusha
xlat
xor
cltd
stos
fcmovu
mov
adc
push
sbb
or
das
mov
sbb
inc
insl
dec
arpl
in
adc
dec
hlt
inc
nop
sub
cld
adc
lds
push
mov
mov
call
cmp
jmp
popf
jle
imul
sub
dec
adc
xchg
loope
pop
add
lods
iret
ds
ljmp
xchg
cmc
repnz
mov
or
inc
out
out
fdivl
pushf
adc
jae
fcoms
xchg
mov
inc
jecxz
sbb
jecxz
popa
xor
add
out
push
aas
xchg
leave
shll
clc
add
xchg
ret
push
mov
popa
mov
inc
ret
repnz
ds
xor
ror
iret
push
outsl
shlb
scas
mov
mov
xchg
or
mov
pop
and
add
lret
pop
mov
jle
xchg
jns
inc
pusha
imul
fisubrs
in
cmp
sub
inc
adc
scas
dec
jnp
sub
hlt
sbb
sbb
pop
and
or
jle
movsl
or
fstl
xchg
fmuls
push
push
pushf
aaa
aam
repnz
fildll
stc
mov
jb
adc
jnp
shll
sti
fwait
leave
sub
loop
add
lock
and
cmp
mov
inc
sub
jb
cmp
stos
cmc
fcomp
mov
xor
jnp
xchg
mov
xchg
push
jle
push
adcl
cld
fbld
jge
push
aas
fcoml
pop
std
aam
pop
popf
mov
or
ror
out
testl
push
cmpsl
imul
sub
inc
leave
jo
shrb
rorl
dec
mov
sbb
jmp
popf
lods
pop
aam
sbb
push
fcoms
push
sbb
nop
es
je
push
xchg
xchg
mov
rorb
imul
in
jo
scas
dec
ljmp
pushf
add
mov
sbb
scas
cmpsl
mov
dec
aam
pop
adc
inc
jne
ds
out
push
lods
sbb
mov
inc
pop
dec
addb
inc
loope
cmp
dec
fstp
mov
fiadds
ret
les
cmp
jg
int
mov
cmp
mov
data16
dec
std
inc
inc
repz
shrl
cld
dec
push
xor
mov
lret
and
dec
adc
and
xor
sbb
adc
jb
mov
mov
lret
jns
fisttps
dec
aas
test
mov
leave
pop
ds
idivl
lcall
or
cmp
repnz
lock
fsub
and
pop
pop
and
lahf
fildll
add
push
lds
and
push
les
mov
mov
movsl
andl
lds
pmullw
and
sar
lock
jae
arpl
imul
shll
mov
pop
pop
pop
int
into
in
jbe
lea
adc
push
icebp
jg
fcmovnb
sbb
jp
scas
lahf
xchg
int
es
dec
rolb
in
inc
push
sub
add
fsubs
aam
outsb
sub
add
cmp
dec
cld
or
mov
mov
jp
fistpl
inc
movsl
push
jo
popa
repz
incl
call
xor
test
cmpsb
inc
mov
outsb
jge
push
aas
pop
cmp
outsl
mov
ja
and
lods
scas
leave
movsl
push
loopne
jne
stc
xlat
dec
enter
lods
test
shrw
add
and
or
mov
stc
xor
ret
pop
mov
es
mov
in
hlt
in
lret
stos
adc
sbb
fs
xchg
shrl
push
mov
jecxz
test
mov
call
pop
sti
jp
cwtl
lds
daa
les
pusha
pop
call
call
in
adc
push
push
adcl
shlb
or
cltd
lea
int3
jae
popa
jne
in
sti
outsb
add
addl
pushf
pusha
lcall
sbb
push
daa
lcall
pusha
dec
jb
mov
adc
daa
mulb
outsb
push
imul
clc
andl
fdivl
jbe
cld
sub
daa
out
xor
in
add
cltd
jmp
adc
movsl
push
push
std
mov
pop
sbb
pusha
sub
dec
cld
mov
mov
push
loop
pop
rolb
cli
push
ficoms
push
fisubl
push
cmp
inc
sub
or
pop
movl
pop
and
xchg
xor
mov
enter
mov
mov
es
and
aam
out
rorb
es
imul
cld
xchg
jecxz
sti
cmp
dec
and
shrb
jo
pop
and
and
mov
pop
cmp
arpl
dec
fcoms
jmp
enter
dec
pop
pop
out
cli
addl
mov
ja
lods
subl
cmp
cmp
int3
into
or
adc
inc
xchg
mov
movsl
icebp
outsb
pop
jmp
test
jo
mov
add
jg
inc
test
mov
std
xchg
pop
jno
shr
sbb
and
push
cmp
pusha
inc
push
inc
cmp
insb
adc
cmp
imul
adc
or
arpl
jbe
inc
addr16
and
mov
pop
imul
sbb
enter
dec
mov
jb
mov
lahf
loope
and
xor
ja
add
or
or
mov
inc
jns
push
iret
inc
dec
popa
lods
mov
or
adc
inc
xchg
daa
mov
bound
mov
adc
imul
dec
or
bnd
sbb
clc
cli
fcoml
jle
cwtl
cmp
adc
mov
sub
ja
xlat
mov
push
mov
sti
imul
lods
and
aaa
xor
jno
nop
ja
int
int
pop
and
xor
push
out
xor
flds
jno
out
repz
pop
xor
push
cli
add
dec
dec
mov
ja
fwait
mov
cmp
jl
xor
jge
dec
xor
fiaddl
xor
push
sti
sbb
push
jmp
jno
xor
imul
and
sahf
cmc
insl
jecxz
and
aas
imul
sub
xor
mov
sbb
dec
pop
or
dec
inc
pusha
or
lds
lods
jp
cmc
cmpsb
call
dec
push
xor
push
lcall
incb
shll
lock
dec
fbstp
cmp
dec
mov
pop
pop
loopne
sub
xchg
gs
push
cmc
out
je
icebp
jle
outsl
ds
addl
and
pushf
sub
adc
lahf
test
xchg
imul
fcompl
mov
fld
adc
cmp
fiaddl
adc
sbb
cs
add
xor
mov
push
adc
notl
out
or
arpl
test
push
adc
lcall
xchg
fstl
fisubl
hlt
icebp
push
aam
jno
push
je
fldt
int
arpl
insb
xchg
fcmove
dec
dec
addb
adc
in
pop
es
add
pop
xchg
pop
call
iret
fbld
cmp
cmp
aad
mov
mov
mov
and
je
int
aam
sub
xchg
sub
push
scas
or
in
dec
jnp
lds
cs
mov
inc
dec
je
std
mov
cmpsb
mov
aas
in
mov
mov
shr
jne
dec
pop
jmp
and
mov
pop
insl
int
push
jns
xor
push
mov
into
lods
mov
ja
xchg
mov
sub
loope
call
xchg
lock
rclb
mov
adc
xchg
insb
jmp
sub
imul
push
aam
call
shr
test
cli
subl
sbb
dec
sub
repnz
mov
push
jne
dec
pop
mov
or
jnp
inc
hlt
add
lea
push
jbe
out
jb
daa
sbb
push
jb
pop
mov
jb
pop
mov
pop
fmulp
lahf
mov
dec
adc
aas
dec
sub
pop
dec
loop
push
adc
nop
lock
test
stos
pusha
in
std
jbe
call
shll
jno
mov
inc
loopne
jg
ficoms
in
aaa
mov
jno
rcl
adcl
lret
or
int
std
jmp
pop
xor
sbb
loop
lret
mov
add
loop
dec
popa
inc
push
jb
adc
lds
push
insl
dec
pop
or
ljmp
or
fnstenv
cs
xor
push
xlat
mov
jo
push
xchg
push
adc
mov
aam
shll
orb
out
cmpsl
rcl
ret
enter
push
sbbl
jae
mov
mov
or
icebp
mov
sbbl
fdivr
ss
inc
testb
adc
mov
push
mov
add
jo
push
jo
out
cltd
mov
and
pop
cmp
xchg
sub
cmp
loopne
hlt
mov
adc
mov
dec
and
xchg
pop
idivb
fisubrl
test
cld
mov
mov
mov
lock
fcoms
push
and
jge
mov
dec
jns
push
in
insb
loop
std
pusha
stos
cs
push
icebp
clc
dec
sub
dec
imul
and
push
mov
xchg
mov
dec
xor
sub
ficompl
mov
enter
xor
push
mov
imul
sbb
add
dec
push
or
cmp
jp
inc
jns
leave
fdivr
push
inc
rcr
lea
pop
xor
pop
jnp
mov
jo
addb
fiadds
in
and
ss
push
lds
fwait
aaa
pop
cmpsb
sahf
mov
dec
fdivrl
leave
repnz
mov
das
xor
sbb
and
lods
orl
lock
mov
or
icebp
ds
inc
add
add
xchg
xchg
out
add
sbb
andl
inc
pop
js
fcomi
and
mov
pop
and
cltd
sarl
pop
mov
xor
or
and
inc
adc
inc
dec
cmp
hlt
ss
add
lret
iret
stos
cmp
int
ja
xor
sahf
cmp
xor
fildl
lcall
mov
xor
add
mov
cmpsb
cmpsl
test
or
jmp
push
cmpsb
lock
popf
pop
mov
add
xor
call
sahf
stc
push
mov
push
jae
repz
repnz
cli
pop
push
ljmp
pop
lods
jmp
mov
sbb
lea
pop
data16
jnp
in
lds
aas
add
ss
jle
dec
pop
inc
mov
xchg
push
and
jne
pop
push
loopne
out
ret
xor
xchg
in
push
call
push
mov
aaa
adc
mov
pop
ret
pushf
and
xchg
inc
inc
pop
ds
inc
addr16
cmc
subl
outsl
shlb
scas
aam
jge
fsubrs
mov
imul
sbb
and
popl
cmp
fisttpl
rep
fidivl
lret
push
mov
cld
cli
icebp
or
adcb
jne
pushl
cmp
shll
and
mov
das
mov
pop
or
xor
imul
or
fldl
lret
fldt
dec
push
hlt
out
nop
cld
dec
repnz
movsb
pop
in
mov
jnp
sbbb
jne
inc
sub
icebp
jge
fistps
cmp
scas
dec
jae
push
ret
push
cwtl
push
in
bound
xor
je
ret
adc
sub
cs
cmpsb
leave
push
jle
and
mov
xor
or
adc
or
cmp
xchg
movsb
orb
xlat
lds
pop
pop
jl
repz
repnz
cmc
inc
cmp
mov
gs
lret
dec
jo
shlb
push
lods
add
sbb
cmpb
pop
lret
and
notb
push
sub
lock
test
negb
ja
xchg
xchg
repz
roll
sub
loop
sbb
inc
lea
add
sahf
sub
out
pop
mov
out
mov
inc
sbb
mov
inc
pop
movsb
divb
mov
xsha256
cmpsb
push
cltd
call
data16
enter
scas
cmp
cmpsl
dec
cwtl
xchg
push
xor
gs
inc
ret
stos
jl
and
push
inc
int
cmp
push
outsl
xor
pop
sbb
or
dec
jno
mov
sbb
popf
jecxz
and
out
mov
test
xor
jmp
insl
shll
xor
mov
mov
sbb
test
adc
or
movl
and
cmp
sbb
fildll
xor
inc
je
jno
pusha
shlb
je
pop
and
xchg
cmp
lret
int
pop
add
pop
cmp
js
call
in
mov
xchg
mov
push
cmp
in
sub
ss
mov
out
dec
inc
or
rcrl
in
cmc
mov
jge
hlt
and
lock
jns
sbb
insb
jp
and
les
inc
testl
push
scas
xchg
push
pop
pop
aas
mov
cmp
clc
shr
dec
je
mov
ficoms
jmp
cli
cwtl
jp
pusha
loopne
in
popa
in
inc
lods
adc
xchg
or
adc
les
faddl
cmp
add
jo
adc
dec
push
testl
inc
or
fmuls
sub
sbb
fcomps
insl
xchg
les
mov
push
and
and
xor
daa
jl
jnp
bound
ret
aad
or
add
inc
sub
sub
add
xor
out
jge
sub
cmpsb
pop
dec
mov
lock
jae
mov
and
add
dec
fcoml
and
sub
fsubrl
jns
mov
mov
jno
in
sbb
sub
lock
test
cltd
jo
fabs
sub
dec
cmpsb
iret
jb
mov
scas
pop
into
loopne
cwtl
cmpl
bound
add
fildll
mov
clc
mov
pushf
out
jl
sbb
push
jo
xor
inc
adc
pop
mov
outsb
ret
xor
lcall
cmp
ret
ljmp
mov
mov
repz
int
mov
cmp
or
adc
nop
sarb
movsb
jp
insl
xchg
mov
xchg
xor
lret
cmp
adc
sub
dec
sub
xchg
lods
lods
xchg
xchg
or
and
in
and
lods
std
mov
add
insb
lock
ret
cmpsb
jg
leave
aas
fmuls
jl
inc
push
pop
or
sbb
daa
xchg
fidivl
xor
scas
fists
fiadds
cli
in
sub
stc
mov
push
jnp
mov
fwait
push
xor
int
cli
pusha
fwait
push
inc
dec
into
insb
lds
sbb
leave
outsb
cmp
push
add
pusha
scas
mov
push
jmp
cld
shll
fsubl
cmpb
add
outsb
in
mov
add
sub
scas
pop
iret
xchg
pop
add
movsb
pop
test
cvtps2pi
sbb
mov
popa
jns
jns
cmp
js
push
pop
scas
scas
lret
push
cmp
sbb
sbb
or
push
xor
out
mov
xchg
jne
nop
push
fndisi(8087
data16
push
adc
stos
jnp
cmp
mov
push
inc
push
push
or
sbb
popf
into
notb
rclb
dec
mov
scas
loope
jg
and
dec
pop
jns
loope
mov
push
inc
mov
mov
lds
or
popa
cmp
test
icebp
jns
jne
fadds
sub
sahf
pop
sbb
decb
bound
cmpsl
int3
loope
pop
adc
loope
xchg
out
subb
jae
push
cwtl
mov
outsl
test
das
inc
in
insl
es
or
test
xlat
std
ljmp
cltd
popa
ds
dec
pop
dec
out
push
mov
or
xor
xchg
test
lret
idivl
jne
jg
mov
cmpb
xor
pop
add
fdivr
fsubrs
imul
add
pop
xor
test
jbe
add
jbe
out
ja
xchg
pop
inc
add
dec
cmp
or
cmp
jne
insb
pop
fsubl
pop
xor
scas
pop
rorl
mov
pop
mov
mov
mov
sbb
loopne
mov
push
imul
push
popa
jnp
mov
hlt
cld
push
pop
movsb
cli
jle
nop
jg
adc
cmp
mov
jmp
and
jle
or
xor
inc
xchg
mov
xchg
inc
mov
push
fstps
mov
fucomp
push
rcrb
mov
cmp
daa
les
out
lcall
sub
xlat
nop
fs
mov
mov
pop
inc
xchg
lds
in
xchg
xchg
pop
mov
popa
mov
cmp
dec
mov
out
negb
cmpsb
scas
pop
mov
aas
mov
test
jb
xchg
jmp
push
cs
loope
movsl
mov
mov
sti
scas
fmul
xchg
xor
mov
xchg
fwait
aaa
into
fucomip
adc
js
sbb
notb
imul
xchg
mov
sbb
dec
mov
lcall
fsubl
adcl
pop
cltd
out
movsb
lock
daa
repz
mov
adc
inc
btr
jmp
sub
into
test
sbb
xchg
addl
repnz
ljmp
jbe
rcrb
push
iret
xor
xlat
les
cmp
insb
out
rcr
iret
das
sbb
inc
call
data16
push
add
fldt
ficoml
jno
in
in
adc
dec
loopne
mov
sub
in
mov
outsb
inc
mov
mov
adc
scas
dec
xor
int
popf
push
jae
cli
nop
sarl
rclb
adc
push
nop
jae
xchg
push
fs
es
in
jmp
mov
pop
mov
aaa
in
aas
xor
dec
sbb
lock
pop
imul
dec
loop
fsubl
dec
push
dec
xchg
outsb
stc
inc
cmp
fs
and
movsl
mov
inc
lcall
pop
add
shrb
loopne
jle
add
out
add
mov
push
ret
mov
call
adc
pop
push
test
loopne
loopne
repz
pusha
outsb
jo
pop
outsl
movb
cmc
aam
adc
arpl
fwait
mov
imul
movsl
hlt
out
je,pn
decl
in
shl
cwtl
inc
sbb
mov
andb
fisubl
stc
outsb
sbb
mov
iret
pop
and
and
subl
dec
dec
bound
dec
sub
arpl
inc
push
stos
leave
shlb
fdivrl
xor
dec
scas
jl
mov
ss
pop
stos
shlb
sbb
or
cmp
adc
shrl
mov
or
sbb
lods
iret
mov
aam
mov
inc
push
ror
jo
xchg
loope
out
inc
test
push
or
push
cmp
repz
jmp
and
jge
jecxz
ljmp
push
mov
int3
add
push
ds
and
mov
sub
add
cmp
pusha
mov
inc
mov
push
push
sahf
and
in
jo
ss
aam
inc
cmp
mull
les
adc
inc
rcl
fldl
scas
idiv
out
xor
push
faddl
inc
stc
add
adc
and
add
test
mov
pop
clc
nop
push
add
inc
push
repnz
jge
testb
daa
sub
mov
xor
loop
adc
push
stos
xor
add
in
sbb
adc
mov
xchg
mov
mov
xchg
push
pop
mov
xchg
js
in
jbe
data16
out
dec
dec
mov
rclb
adc
or
mov
aaa
aaa
jns
shlb
sbb
inc
out
push
push
or
int
inc
stos
adc
aad
leave
sub
xchg
mov
dec
xor
loope
cmovnp
dec
mov
mov
mov
movsb
jae
jbe
mov
negl
fidivl
jb
jle
pop
jecxz
or
xchg
sub
xlat
inc
loop
clc
jle
xchg
cld
add
jle
insl
xchg
repz
cld
cmpsb
pushf
pop
lcall
xchg
jecxz
cmc
scas
movsb
pop
jae
or
cmpsl
repnz
clc
insl
push
mov
mov
lcall
icebp
sahf
out
cmp
adc
sub
sahf
js
mov
pushf
inc
or
aad
lds
lret
loopne
arpl
xchg
xor
shrl
push
push
add
cmp
push
adc
cmpsb
fisttps
jl
add
test
iret
aas
push
dec
inc
imul
orb
add
cmp
sbb
stos
ja
mov
adc
loope
popa
into
xlat
stos
jne
cmp
fmuls
fldl
xchg
mov
sub
sbb
dec
or
lods
sbb
adc
cli
shr
jecxz
bound
lret
push
mov
inc
mov
jo
fs
fwait
and
add
leave
fs
in
push
sbb
out
repz
hlt
mov
lret
and
mov
add
fldt
add
mov
mov
popa
adc
add
xchg
iret
mov
jp
mov
imul
popf
rcll
xchg
add
push
or
notl
lahf
jno
std
inc
jp
jge
jb
lds
mov
lods
insb
pop
xor
cmp
xchg
test
mov
mov
push
inc
jae
sub
adc
xor
pushf
push
enter
mov
adc
flds
or
xor
or
adc
ds
push
or
xor
idivb
and
fisubrl
push
sub
pop
arpl
dec
dec
mov
pop
xchg
mov
jns
sub
xchg
lret
jle
mov
or
jge
cmp
dec
sbb
push
and
mov
and
push
or
clc
dec
mov
pusha
jns
jnp
jb
mov
cmpsl
xchg
xor
repz
test
icebp
andb
fnstcw
jb
jg
mov
xchg
repnz
push
jne
pop
xor
imul
fdiv
int
jne
pop
xor
inc
xchg
jb
cwtl
cmp
inc
adc
lods
inc
std
mov
inc
fadds
cwtl
push
bnd
cmpsb
scas
fiaddl
cmp
sbb
shrb
insb
jnp
repnz
fldt
movsl
repz
mov
cs
cmp
iret
ss
stos
jmp
cwtl
ljmp
and
or
jmp
hlt
push
push
pop
adc
cmpsl
arpl
and
jae
cltd
or
push
dec
xor
xchg
jecxz
push
cltd
fs
dec
xor
mov
nop
pop
lods
in
or
aad
jmp
inc
push
pop
out
push
jg
in
int
dec
lahf
sub
xchg
cmp
sbb
xor
fdivrl
loopne
iret
bound
cmp
leave
jmp
xorb
cli
call
stos
outsb
in
pop
fbld
jne
sbb
dec
gs
push
movsl
inc
mov
das
lock
push
ret
cld
andl
mov
mov
divl
cli
aaa
xor
lcall
mov
movsl
dec
and
push
out
imul
nop
xchg
pop
cli
lods
sub
jbe
xchg
popa
out
test
in
jmp
xor
cmp
add
pop
sub
scas
fiaddl
push
pop
imul
int
sub
lds
rorb
in
or
lahf
push
xor
jnp
add
xor
add
test
sarb
push
int
outsl
mov
mov
jmp
aam
pop
pop
or
xor
push
inc
jns
bound
ror
add
icebp
push
xor
and
add
or
das
movsl
sti
mov
insl
push
jecxz
or
mov
mov
imulb
fstpl
aaa
cs
hlt
xlat
or
jnp
mov
in
push
pop
sbb
xor
jno
loope
add
lods
notb
or
mov
insl
nop
and
jge
ret
pop
outsb
dec
roll
das
xor
add
xchg
dec
adc
pop
scas
inc
ljmp
jnp
jg
cmpsl
in
adc
in
fdivl
repnz
lock
js
aad
push
xor
xchg
loopne
pop
adc
ror
jae
xor
jg
adc
test
fcoms
movsl
inc
add
lcall
popl
leave
jmp
add
gs
imul
shll
orb
adc
clc
outsb
lds
fs
mov
xchg
decl
mov
lahf
push
sbb
adc
outsl
dec
sbb
pusha
sbb
aad
mov
jp
push
sbb
ljmp
jbe
int3
in
pop
arpl
inc
dec
and
push
jmp
xor
fcomps
dec
arpl
mov
xor
mov
inc
mov
popf
xchg
push
ljmp
xor
push
adc
pop
test
xchg
clc
popf
roll
xchg
xchg
aad
movsl
fwait
lret
pop
mov
push
test
js
mov
fstps
mulb
and
rsm
mov
mov
xlat
roll
enter
jge
and
sbb
ss
mov
aam
and
rcll
inc
popa
xor
sbb
cli
xchg
sbb
in
or
cmp
inc
insl
adc
lods
dec
sbb
out
mov
and
mov
lret
lds
pop
pop
or
mov
sub
pop
mov
or
jecxz
jle
lea
dec
subl
dec
sub
mov
and
mov
out
pusha
les
cltd
cld
mov
jbe
leave
mov
xor
es
mov
push
pop
sub
clc
xor
lea
outsl
repz
fnstcw
call
imul
push
mov
dec
mov
cmp
pop
out
jp
sti
cld
sbb
es
xlat
cmp
mov
loope
inc
xchg
jecxz
fst
ja
outsb
inc
rol
enter
mov
out
idivl
pop
add
leave
decb
repnz
mov
dec
stos
cmp
dec
jne
and
bound
ret
jg
aas
jno
inc
cmp
sub
fsts
mov
adc
jle
pop
add
ja
adc
push
cmp
popf
dec
sub
jno
dec
lods
and
adc
inc
ss
xchg
dec
jno
push
jge
aad
add
dec
std
out
add
iret
insl
ret
incb
adc
mul
jl
enter
jns
dec
pop
jle
mov
jmp
pusha
mov
pop
jb
dec
and
mov
mov
fdivrl
ja
daa
outsb
xchg
lahf
ret
rcr
out
pop
fistps
aas
icebp
inc
push
es
inc
movsl
inc
or
addr16
fwait
out
mov
cmc
jg
addr16
movsl
adc
adc
jg
fimull
dec
shl
cmpsl
and
test
nop
cmp
in
or
ret
dec
bsr
hlt
sbb
mov
loop
xchg
inc
inc
cmp
adcl
in
sbb
cltd
out
clc
mov
cmp
test
and
xor
je
add
push
in
mov
cmpsb
repnz
jno
jne
mov
rcrl
xor
push
out
aas
and
movsl
push
jmp
inc
push
ret
push
inc
gs
add
push
jmp
xor
pop
nop
adc
sbb
xchg
fwait
xchg
addl
mov
lahf
call
pop
pop
jnp
mov
dec
jns
push
fisttps
mov
out
stc
dec
mov
test
cmp
movsb
cld
int
pop
fsubrp
add
add
sbb
mov
sub
sahf
add
bound
notl
xchg
mov
mov
sbb
jmp
mov
gs
jp
mov
les
xchg
idivb
cmc
aas
int3
scas
lahf
insl
daa
pop
adc
and
std
jle
sub
jle
dec
adc
push
sbb
xchg
mov
jne
xchg
and
jp
inc
mov
pop
inc
and
ljmp
nop
ss
outsl
rcr
jl
call
fisttpl
daa
xor
push
xchg
stos
loope
or
hlt
push
sub
jb
outsb
fisubl
mov
lds
xchg
or
inc
clc
jne
adc
mov
test
lds
test
mov
or
mov
cmp
mov
push
add
je
fidivl
scas
xlat
jbe
pop
outsl
sti
lcall
aas
jl
or
jno
stos
dec
mull
xor
ja
xor
les
dec
or
jg
or
inc
ljmp
repnz
xchg
inc
repnz
dec
sbb
stos
popa
add
xor
mov
pop
mov
sub
loop
push
pop
jae
cld
popf
mov
adcl
rcr
sbb
mov
cmp
cltd
lahf
lahf
or
icebp
sub
fsubr
mov
cli
sbb
jle
cld
xchg
cmpsb
mov
outsl
insl
out
pop
xchg
mov
sti
pushf
xchg
out
lcall
xor
sub
clc
xorb
ljmp
fxch
lcall
cmpsb
push
fcmovnbe
iret
dec
dec
fidivrs
mov
arpl
in
fnsave
test
jl
test
mov
add
das
loope
sbb
in
or
sbb
cmp
xlat
je
mov
mov
cmp
push
iret
mov
mov
je
js
mov
lret
xchg
pop
mov
cld
scas
mov
testl
ret
add
lock
jecxz
pop
push
pop
out
and
mov
jmp
xlat
push
and
mov
xchg
push
pop
leave
lret
mov
pop
repz
cmp
jg
cmpsl
adc
mov
aam
je
mov
adc
into
mov
pop
and
and
pushf
inc
repz
jl
pusha
les
cmpsb
mov
enter
mov
out
clc
popa
jnp
shlb
and
mov
sbb
jns
jnp
lods
mov
push
xchg
mov
inc
and
mov
fiaddl
mov
movsl
mov
ljmp
fiaddl
adcl
xchg
test
mov
mov
test
arpl
icebp
lahf
jbe
push
repnz
mov
aam
mov
mov
or
cwtl
lock
jns
cmp
fcmovnb
cltd
nop
fwait
repz
mov
enter
push
fstps
pop
push
and
cltd
pop
add
mov
cmp
cmp
or
fcoms
cltd
imul
add
movl
mov
std
mov
outsl
mov
lret
stos
std
xchg
gs
jmp
sahf
inc
into
hlt
or
push
inc
cmp
xchg
dec
adc
lcall
lds
les
adc
push
lds
inc
sbb
ja
loopne
loope
xchg
ja
push
mov
adc
popa
sub
push
addb
mov
jg
sbb
repnz
cmpl
dec
hlt
push
test
ljmp
das
cmp
pop
fcoms
and
add
lcall
pop
dec
aas
xor
loope
lahf
mov
fcoms
int3
push
les
insl
or
mov
fs
and
cltd
inc
xchg
jp
arpl
mulb
xorb
pop
mov
jno
insb
jne
add
mov
pop
pop
push
mov
fisttpl
dec
or
out
pop
cmc
gs
cmp
adc
ja
push
outsb
push
dec
lods
fs
ss
inc
sbb
imul
mov
xor
mov
xor
xchg
pop
scas
push
ljmp
adc
pop
aam
daa
and
syscall
lret
pop
mov
jb
sub
hlt
jge
ficoms
and
add
leave
cwtl
sbb
lods
hlt
mov
sub
inc
call
leave
dec
adc
js
mov
testl
push
sub
xor
or
sub
jecxz
sbb
int
xchg
scas
sbb
lret
sub
les
loopne
mov
mov
aad
jo
je
lret
or
jnp
and
sbbb
fsubrs
pusha
xchg
int
and
xor
push
pop
aaa
inc
icebp
stos
idivb
inc
in
sub
cltd
sbb
dec
and
arpl
test
aam
fcompl
sub
dec
int3
int3
xor
bound
xchg
gs
pop
inc
enter
lods
adc
cmp
inc
cli
es
jnp
xor
popa
jne
add
rcll
popf
in
cmp
imul
daa
cmpb
sub
dec
scas
bound
clc
lods
sahf
mov
rorb
fidivl
sub
pop
mov
add
adc
fyl2x
cltd
out
insb
push
cld
cltd
jae
xlat
es
insl
mov
mov
rolb
cmp
mov
xlat
ja
test
stos
test
cmpl
pusha
sbb
out
mov
dec
xor
sub
sub
cs
je
sbb
rcl
pop
or
add
sbb
popf
dec
in
inc
xchg
push
xor
repnz
in
ret
lea
shll
pop
imul
lock
mov
mov
inc
jl
mov
mov
lea
cltd
mov
cmp
add
xor
inc
adc
dec
add
jne
in
push
adc
cmp
jno
sub
and
test
in
mov
popa
pop
push
into
jmp
sar
sub
or
pop
mov
jg
hlt
cld
mov
std
cli
mov
push
or
pop
mov
push
stos
and
push
sub
out
fdiv
roll
call
int3
pop
aaa
ret
dec
pop
mov
pop
orb
mov
inc
jne
add
push
adc
out
negl
mov
leave
mov
je
shll
and
mov
xchg
in
pop
into
and
arpl
pop
shlb
pop
xor
negl
push
stos
add
insl
push
mov
hlt
push
orb
mov
leave
adc
out
dec
lods
orb
mov
fistps
sub
or
adc
or
stos
push
hlt
add
xchg
push
in
insl
sti
aad
jle
push
fisttps
fdivr
stc
divb
pop
or
xorl
xor
pop
jg
aad
jo
mov
dec
mov
mov
clc
sahf
or
imul
cli
xor
mov
cmpsb
pop
sbbl
xchg
adc
mov
repnz
in
rcr
xchg
or
cltd
repz
fs
scas
into
jmp
outsl
sbb
cmpb
and
sub
in
xlat
push
test
lahf
inc
jnp
dec
subl
sub
fs
sbbl
mov
push
adc
sub
jae
mov
dec
mov
fbld
mulb
jge
adc
or
mov
stc
jnp
ss
xor
add
mov
lret
out
adc
mov
xlat
lea
push
dec
clc
sbb
lahf
jp
xchg
push
ds
push
xor
repnz
mov
cli
add
lret
and
push
insl
cmp
jp
xlat
dec
dec
mov
push
out
sar
ret
or
cmp
out
mov
xchg
bound
int3
es
popf
lahf
mov
dec
movsb
jge
fildll
sub
call
scas
scas
mov
fbld
push
lea
push
jo
les
es
ret
mov
clc
stos
cli
push
mov
inc
lock
ljmp
fstpl
sti
mov
add
dec
loopne
out
lock
push
leave
sub
stos
xchg
jne
rcrb
jg
add
sub
pop
jo
jne
int
outsl
lods
inc
loopne
jl
test
imul
mov
clc
sub
mov
xor
mov
push
pop
dec
adc
pop
hlt
aad
imul
pop
lret
popa
shrb
dec
mov
lods
ja
jns
loopne
les
adc
adc
fnsetpm(287
in
lods
daa
mov
sub
aam
cmpsb
push
push
stos
mov
sahf
xor
or
and
mov
push
cltd
test
push
or
fildll
sbb
ret
sbb
sub
xchg
cmpsb
sbb
jmp
mov
ficomps
cmpsb
pop
scas
repz
dec
loop
mov
test
ja
imul
dec
adc
adc
xchg
bound
pop
dec
negb
dec
test
cmp
fnstsw
rorb
movsl
stc
arpl
xlat
pop
push
test
jno
jl
add
mov
arpl
jg
jb
sub
in
insb
inc
or
push
mov
mov
mov
scas
push
testl
pop
fstpl
xor
xchg
jno
add
add
inc
and
jns
lcall
jns
nop
cld
les
jne
mov
inc
push
inc
std
mov
push
and
inc
mov
mov
sahf
xchg
mov
inc
pop
mov
or
lock
das
dec
xchg
pop
or
dec
dec
sub
std
movsl
test
xchg
jae
dec
mov
ret
jmp
mov
mov
sub
cmp
cmp
xchg
push
pop
repz
mov
mov
mov
imul
scas
mov
jb
scas
inc
jo
ljmp
cmp
push
push
inc
int
jle
mov
movsb
jge
mov
sbbb
push
pop
loope
xchg
stc
add
inc
pop
outsl
adc
leave
loop
mul
push
ffree
mov
sbb
mov
cli
cmp
bndldx
in
testb
sti
sbb
pop
sub
adc
mov
scas
or
shrl
dec
insl
jmp
popa
mov
fistl
lahf
rcll
cs
jne
mov
dec
cbtw
subl
decl
sbb
ja
inc
movsl
mov
pop
mov
pop
outsl
add
pop
xor
cmc
dec
jle
add
push
ret
mov
outsb
mov
lods
test
call
cmp
cmp
fstl
lods
mov
adc
fistps
out
fistpll
mov
pop
fstpt
and
lret
pop
jle
cld
shll
inc
lds
mov
inc
aas
jae
jmp
push
cwtl
ret
mov
jle
sub
pop
xchg
stos
push
rolb
xor
int
ror
mov
ja
fdivrs
pop
mov
pushf
sbb
aam
pop
sbb
sbb
hlt
rcll
add
sub
xchg
pop
dec
mov
idiv
in
mov
sub
mov
jmp
es
cmp
ss
int3
cmp
fimull
pop
aaa
and
dec
fld
aam
cmpsl
jg
mov
pop
test
das
subb
lds
stos
xchg
jo
or
mov
scas
jns
jl
lret
ret
mov
xorb
fistpll
dec
sbb
adc
sarb
xor
sbb
filds
xlat
imul
aam
imull
pop
idivb
fcoms
adc
fbld
adc
xor
fildll
mov
cmp
mov
shlb
sbb
cmp
sub
and
nop
subl
movsl
mov
imul
stos
mov
sub
ja
sub
or
and
popf
ret
inc
pushf
and
aas
insb
scas
insl
and
jecxz
add
mov
cmp
dec
stc
xchg
dec
add
stc
mov
cmpb
jle
xchg
inc
cmpsl
das
adc
mov
cmpsb
mov
leave
inc
jle
andl
mov
pop
inc
pop
mov
lds
dec
adc
mov
mov
and
xchg
jecxz
leave
and
mov
mov
mov
or
pop
enter
aas
cli
or
loopne
and
test
mov
sbb
sbb
pop
xchg
mov
pop
test
push
inc
jnp
mov
or
inc
mov
cmpsl
mov
xchg
loop
inc
dec
sub
cmp
movsb
push
les
sbb
pop
pop
sub
push
lahf
inc
jne
jb
stos
js
test
mov
inc
xor
popa
mov
xchg
aas
sub
mov
scas
fs
and
adc
push
mov
int3
jo
or
jg
in
sti
or
sbb
push
dec
add
hlt
adc
push
into
adcl
clc
jae
or
insb
hlt
xor
xchg
and
fwait
jnp
out
inc
jbe
xor
std
fldt
imul
dec
pop
add
packsswb
xor
addr16
les
mov
daa
lea
inc
add
orb
sbb
outsl
jns
xor
sbb
in
push
lahf
test
pop
sti
cld
test
in
aam
shld
fidivs
ror
cld
xchg
dec
mov
xchg
or
lret
frstor
xchg
jo
cltd
mov
push
addr16
mov
js
pop
dec
sbb
scas
lret
lea
rorl
ljmp
fsubr
sub
les
mov
negl
popf
lds
les
leave
mov
pop
ds
mov
in
mov
lds
mov
xchg
mov
jle
cwtl
test
fldenv
mov
fsubrs
and
pop
push
push
cmp
or
gs
pop
cmp
fwait
push
pop
cli
pop
leave
dec
add
ja,pn
leave
mov
je
cmpsb
add
iret
outsb
shll
cmp
repnz
dec
jmp
imul
das
inc
lods
mov
nop
sub
shlb
pop
in
mov
das
inc
in
and
pop
sti
lahf
mov
sub
xchg
inc
pop
dec
cbtw
clc
pop
mov
jae
dec
scas
mov
add
inc
js
xor
stos
xor
sbb
sbb
dec
pushf
sbb
push
daa
jb
data16
push
inc
jns
mov
or
outsb
insl
mov
pop
lret
shll
loop
iret
sbb
pop
insb
popf
in
xor
inc
mov
iret
inc
mov
lahf
sub
mov
add
pop
push
cmp
and
ret
xor
jl
mov
mov
xchg
lods
js
jp
fwait
in
ljmp
sub
in
sub
and
rclb
jno
pop
je
push
daa
adc
fnstsw
gs
inc
shl
decb
mov
movsb
sub
call
or
pop
mov
data16
in
dec
stc
ret
jge
popf
push
or
push
or
lods
ss
dec
pop
in
shr
int3
and
test
sbb
sbb
das
push
push
inc
mov
xchg
not
leave
push
pop
or
ja
jg
movsl
cld
jne
ficoms
pop
addl
xchg
data16
jle
pop
scas
fistl
pop
and
push
xchg
push
int
shrl
jecxz
pop
sub
test
sub
ja
divl
mov
out
pop
xchg
sub
push
repz
stos
out
mov
insl
push
dec
movsb
dec
push
mov
mov
in
inc
shll
loope
jge
shr
loopne
pop
add
movb
dec
aad
xor
adc
jns
sub
in
inc
cmp
mov
xchg
bound
inc
jmp
rorl
xlat
mov
inc
xlat
pop
inc
scas
mov
mov
inc
xchg
or
adc
out
pop
dec
add
inc
lcall
push
and
jnp
and
add
inc
je
popf
lock
out
push
popa
cli
mov
jmp
cltd
mov
inc
dec
sub
mov
in
pop
hlt
insb
sub
cltd
mov
sbb
cmovnp
icebp
or
popf
das
mov
jo
xchg
fidivrs
sub
repz
pop
jo
les
or
movsb
mov
outsb
jae
jbe
stos
nop
outsl
adc
scas
pop
jecxz
xchg
dec
inc
push
adc
lcall
jl
insl
jb
jp
in
xor
cmc
cli
cmp
cmpsl
scas
fsubs
add
out
movsb
insl
jns
aaa
mov
pop
sub
cmc
scas
cld
cld
mov
in
or
cmp
pop
lods
mov
adc
lods
mov
fidivs
lods
fidivrs
in
adc
ret
lock
mov
aam
fucomp
mov
dec
fcmovnu
sarl
jge
int3
add
or
in
mov
mov
rorb
cli
fdivs
and
popf
or
push
add
je
cmpsl
in
aas
pop
ds
test
push
ja
lahf
cli
bound
sbb
sub
pop
pop
push
pop
xor
mov
stos
je
fisubrl
dec
js
adc
cmc
xchg
pushf
add
cld
and
mov
xchg
mov
cmc
mov
jns
imul
mov
fildll
imul
aam
dec
mov
xchg
mov
fs
mov
dec
push
cld
xchg
out
fidivl
push
daa
xor
mov
hlt
movsb
jle
aad
jne
jne
arpl
call
bound
sub
adc
sbb
imul
mov
sbb
fbld
pop
ret
xchg
decb
lret
data16
stos
in
fwait
dec
push
aad
push
sub
call
jae
mov
xchg
xchg
pop
inc
xor
dec
jno
inc
ljmp
adc
aaa
sbb
adc
std
scas
lret
add
push
js
arpl
jl
xchg
cwtl
pusha
mov
mov
fistps
ljmp
mov
dec
jmp
mov
sarb
jno
push
loope
mov
lcall
pop
testl
cltd
mov
imul
nop
fwait
mov
adc
inc
adc
das
cmpsl
push
test
push
scas
test
shlb
stos
add
mov
adc
push
mov
push
push
lcall
insb
xor
and
jle
add
jl
xchg
outsl
sub
sub
jae
lds
sub
in
jno
cltd
jno
jb
repz
shrb
lock
addr16
mov
mov
push
xchg
inc
scas
fs
or
sbbb
push
mov
jg
xchg
dec
sbb
pop
incl
mov
jle
inc
je
add
int
jl
cmp
icebp
push
sbb
aas
insb
mov
sub
xchg
mov
mov
mov
mov
rcr
mov
lcall
clc
pop
nop
mov
imul
xchg
push
mov
stos
add
sbbb
dec
sub
ja
push
jbe
mov
loop
rclb
ret
mov
cmp
aas
inc
xchg
mov
loope
xor
fimuls
push
pop
push
arpl
pop
dec
call
ffree
inc
or
xchg
int
lret
loopne
push
jo,pt
jo
xchg
mov
lods
sub
iret
cmp
sahf
fwait
cmp
jno
and
bswap
sub
mov
mul
jl
jl
inc
jmp
out
int3
dec
sarb
dec
cwtl
ret
add
pop
mov
std
inc
push
push
and
loope
test
pop
jge
push
and
sub
jne
inc
dec
cmp
push
mov
loop
repz
jne
aas
ret
int3
mov
inc
inc
jbe
popa
out
pop
sub
and
mov
outsb
pop
lods
jo
int3
cmpsb
lahf
mov
push
push
loop
arpl
cmp
shr
add
jle
decb
or
add
and
lcall
and
mov
subb
sarb
pop
pop
sub
gs
and
popf
fisttps
inc
cmp
or
jmp
in
out
sbb
inc
xor
arpl
test
enter
aas
insl
jp
mov
or
sub
push
adc
mov
push
test
cmc
ret
mov
rcrb
or
cmpsl
jl
outsl
ja
inc
movsl
push
rol
ss
lea
pusha
xchg
jecxz
lock
sub
call
mov
dec
mov
push
mov
adc
pushf
or
wrmsr
test
xchg
jns
lods
sarb
jp
pop
pop
loop
in
shll
ja
fdivs
pusha
mov
dec
mov
add
repnz
mov
and
fiadds
jne
rorl
sahf
repnz
or
loopne
ljmp
push
add
sub
enter
xchg
xchg
sub
cmp
dec
push
pusha
cmp
movsb
fcoms
mov
adc
adc
and
and
rclb
or
pop
jns
jmp
sbbl
sub
or
ret
xor
xchg
repz
xchg
jnp
cmpsb
rolb
pop
bound
mov
and
shlb
add
add
scas
pop
aad
or
int3
in
fisubrl
xchg
pop
cmpb
pop
in
sbb
sub
subl
stos
cmp
jno
adc
rorl
xor
sahf
sub
filds
addr16
iret
arpl
cmp
js
add
shrl
sarb
aam
pop
nop
mov
cmp
mov
mov
leave
adc
mov
repz
jb
adc
cmpl
out
add
xchg
and
sbb
add
push
pushf
jnp
aas
sbb
rorl
pop
std
enter
test
dec
or
mov
jp
repnz
lahf
ja
lods
push
cmp
leave
lods
test
ficompl
xor
daa
outsb
stos
fsubl
adc
xchg
cs
lods
lahf
or
ds
fdivrs
test
dec
cwtl
push
mov
adc
mov
fnstcw
jno
pop
dec
push
das
jae
add
or
pop
call
out
cwtl
adc
adc
es
int
pop
in
xchg
xchg
jg
or
pop
mov
jg
and
inc
lock
xor
pushf
mov
pop
repz
in
mov
and
pushl
iret
insb
jne
stc
lock
sub
aad
iret
fldl
ffreep
xchg
push
shr
lds
jno
je
push
mov
add
push
xchg
cmpsb
daa
add
sarb
movsb
jns
aas
hlt
andl
sti
mov
cmpb
cmp
mov
stos
mov
or
scas
out
ror
enter
push
or
cmp
fiaddl
or
jb
sbb
inc
inc
popf
negl
mov
push
mov
jb
gs
or
outsb
aaa
pop
stos
xlat
cld
xchg
rorl
add
pusha
adc
imul
in
adc
test
ret
add
in
cwtl
scas
into
dec
addb
int
std
jo
das
mov
sub
mov
iret
not
lahf
xchg
imulb
scas
mov
mov
adc
inc
pop
xor
jecxz
pop
or
in
pop
xchg
mov
ss
jns
and
inc
mov
lret
arpl
andb
test
adc
dec
sub
mulb
aas
sub
inc
mov
add
lds
gs
ds
cwtl
mov
cmc
dec
imul
sbb
mov
adc
int
jmp
bnd
ja
cmp
addr16
pop
push
dec
mov
jp
mov
xchg
xor
mov
jmp
inc
xchg
aaa
push
cmp
adc
pushl
lods
cwtl
mov
stc
icebp
test
in
xorb
shrl
roll
incl
jo
loope
repz
sbb
inc
cs
cld
sarb
pushf
mov
pop
fs
and
dec
mov
gs
add
std
mov
jg
fs
mov
dec
lahf
push
les
pop
xorb
jecxz
cs
mov
nop
adc
sbb
xchg
bound
insl
daa
cmpsl
jg
jne
jl
gs
sub
aas
fsubs
adcb
add
mov
outsl
lea
or
dec
jl
adcb
divb
jae
out
outsb
sub
fucomi
dec
and
push
mov
xchg
push
imul
clc
insl
das
cmp
pop
xor
push
and
loopne
mov
popf
in
les
nop
add
lock
xchg
dec
aas
mov
mov
out
andl
add
pop
xchg
dec
inc
mov
jg
es
icebp
popf
repnz
lea
pop
in
jne
xor
or
test
dec
and
add
xor
clc
xchg
sub
shlb
scas
mov
mov
add
cmpsb
push
inc
loopne
xchg
iret
notb
mov
incb
adc
enter
sbbb
mov
out
xor
xor
and
jmp
mov
jle
in
xchg
mov
jp
out
mov
mov
shlb
sub
mov
mov
imul
roll
xor
jno
pop
arpl
xchg
sbb
addr16
dec
std
lods
test
jbe
mov
jns
arpl
dec
pop
pop
mov
inc
adc
fwait
adc
bnd
jae
out
xor
jp
lcall
adc
jmp
jmp
jo
mov
stos
mov
int3
cmp
stc
js
rclb
xor
xchg
cltd
push
mov
loope
xchg
aas
lret
ja,pt
mov
cmpsb
orl
mov
je
pop
pushf
add
cmp
mov
cmc
je
sbb
xor
addr16
pushf
fiaddl
lea
cmpsl
mov
xor
sbb
sbb
mov
jb
movsl
dec
mov
adc
ror
or
sbb
insb
in
add
xor
jp
ljmp
andb
lods
aad
stos
or
fldt
adcb
movsl
xchg
fisttpll
inc
push
inc
sbbb
pop
push
cli
mov
aam
cli
ds
fsubrl
mov
repnz
inc
test
jmp
sub
imul
or
mov
cmp
pushf
pop
push
mov
leave
jno
movsb
dec
jnp
inc
out
and
loope
push
ret
xchg
mov
mov
loope
enter
nop
aas
mov
sub
sub
pop
xor
js
inc
ret
fadd
mov
and
mov
pop
insl
pop
lret
pop
xor
shl
daa
pop
fmull
push
inc
rolb
and
jl
cmp
aas
sub
test
test
mov
xchg
test
xchg
or
in
std
jl
dec
pop
rorb
aam
jecxz
sub
insb
inc
test
mov
sub
sbb
push
fiaddl
dec
movsb
sub
jle
jae
rcrl
cmc
out
cwtl
xchg
ljmp
int
cmpsl
shl
jmp
lret
cmc
and
adc
mov
adc
sub
push
ljmp
repz
insb
mov
cmp
cmpsl
arpl
aam
test
sub
push
push
xor
add
out
into
rorb
push
jmp
test
cmp
leave
loop
das
cmp
sbb
pusha
sub
jmp
ljmp
outsl
jmp
ljmp
and
jno
xlat
dec
orb
lods
push
clc
xchg
sbb
add
sbb
dec
push
sti
mov
out
add
fdivs
lahf
fisttps
insb
insb
push
xchg
push
stos
mov
sbb
adc
sbb
pushf
popf
sbb
clc
add
sbb
push
pop
scas
sbb
mov
out
std
cmp
iret
cmp
sub
out
sub
cmp
push
xorb
lret
pushf
push
mov
jmp
inc
lret
fs
xor
mov
jo
sbb
out
xor
scas
pop
mov
addr16
or
pushf
mov
cli
push
icebp
ficompl
mov
mov
jle
pop
mov
inc
inc
push
xor
mov
cmp
or
mov
and
mov
jge
or
pop
and
scas
mov
push
jge
outsl
sahf
jg
and
adc
lahf
dec
adcl
and
loop
cwtl
cmc
sub
jl
roll
and
inc
pop
mov
icebp
sbb
dec
adc
ret
arpl
xchg
mov
das
mov
into
add
adc
mov
jp
inc
imul
mov
cli
adc
xchg
repz
loope
insb
ror
sub
orb
ljmp
scas
mov
mov
pop
push
mov
lret
iret
pop
stos
add
sbb
cmpsb
pushf
in
sbb
pop
je
mov
pop
mov
push
mov
jnp
mov
fs
fisubrs
jmp
fdivrl
push
inc
and
imul
push
push
push
shlb
je
fldt
and
int
dec
and
jmp
ljmp
aam
sbb
sbb
xor
push
lahf
push
scas
push
out
lcall
pop
dec
dec
jbe
cmp
rcrb
sub
push
or
idivl
mov
test
addr16
sti
inc
add
out
mov
popa
mov
cmp
movsl
mov
into
cmp
test
mov
inc
lret
mov
dec
imul
mov
add
and
fidivs
int3
mov
in
aaa
cwtl
aaa
fimull
xchg
mov
mov
adc
and
or
xor
out
lock
hlt
pop
icebp
int3
mov
and
gs
sarl
clc
mov
aam
loope
lret
inc
adc
jg
mov
mov
jp
push
push
inc
adc
inc
out
jmp
js
xor
js
addl
fldcw
popl
cmc
dec
sub
sub
lahf
sbb
cmp
out
in
shrl
or
es
mov
ja
add
pop
push
xlat
popa
pop
testl
lea
mov
jecxz
xchg
sub
xor
or
sub
pop
push
test
cwtl
shlb
sub
mov
pop
and
insb
ds
mov
rclb
or
shlb
add
roll
or
sahf
dec
pusha
fchs
push
adc
sub
popf
scas
jns
enter
fcoml
insl
push
cld
pop
xchg
rcrl
adc
bnd
mov
sbb
xchg
iret
jb
xchg
inc
push
jb
aad
xor
imul
mov
orl
jge
mov
out
inc
daa
aaa
fstpl
in
and
cmp
sub
fisttpll
int
les
dec
mov
in
mov
adc
push
adc
in
fwait
ljmp
push
cvtdq2ps
or
or
movsb
lods
cmp
nop
cli
mov
faddl
popf
fwait
jo
cmpsl
clc
ss
pop
jae
and
add
ret
loop
sub
add
push
lcall
and
cmp
jl
shll
paddw
or
out
scas
lods
adc
out
cmc
movsl
jns
jmp
rolb
lods
mov
loopne
inc
adc
lds
xchg
fnstcw
jnp
mov
fimuls
xor
ret
fisubs
jo
ret
sub
das
and
xchg
call
into
aaa
jge
xchg
test
daa
inc
xchg
or
mov
shll
lret
xor
xor
or
sub
mov
add
jae
cmc
mov
adc
sahf
aas
cmp
mov
jno
push
mov
shl
push
and
les
xor
cmp
outsl
fimull
scas
mov
lods
imul
jle
jno
sahf
rcrb
mov
fsub
inc
or
jg
subb
mov
cmp
sub
pop
and
popa
shll
xchg
aad
xor
sbb
sub
mov
out
popa
cld
aaa
mov
xlat
jns
rcll
add
fadd
test
mov
dec
jecxz
xor
or
leave
es
xor
push
jg
mov
and
out
push
pop
aaa
data16
pushf
lea
mov
jb
aad
mov
sbb
lods
fwait
pop
mov
std
outsl
outsb
aaa
jg
lcall
fildl
adc
loope
push
pop
out
inc
cmp
jle
ret
fcmovne
enter
out
lods
xor
ss
sbb
stos
cmpsb
mov
ss
lahf
pop
xchg
pop
cmpsl
jno
push
dec
push
cmp
add
mov
inc
mov
cmp
push
cltd
mov
inc
das
cmp
cmpsb
xchg
mov
inc
sub
outsl
testb
test
ja
outsl
inc
add
dec
push
sub
jl
out
xlat
xor
imul
scas
lcall
add
sbb
stos
xor
xchg
in
aad
in
mov
jecxz
push
sub
notl
imul
and
dec
jbe
movsl
mov
popf
pop
or
dec
xchg
loopne
pop
mov
mov
pop
loop
dec
mov
imul
lahf
movsl
inc
getsec
sub
mov
imul
sahf
cltd
insb
mov
jp
or
rclb
mov
test
xchg
cmp
or
dec
js
fbstp
test
daa
xchg
or
cmpb
mov
test
clc
repz
lock
addr16
sbb
sub
lock
ret
pop
pop
mov
mov
rcrb
in
ja
imull
mov
inc
rolb
leave
ljmp
inc
xor
push
aaa
adc
jae
int
call
jl
popf
mov
ljmp
or
xchg
aaa
mov
xchg
aaa
imul
push
gs
jnp
ja
pop
mov
mov
cmpsb
test
out
aad
add
repnz
add
call
mov
sbb
ret
repz
xor
mov
inc
movsl
or
iret
inc
stos
pop
scas
or
push
pop
xor
cmpsb
shrl
cmp
sbb
lds
insl
das
mov
jns
cli
test
xor
loop
lods
and
add
xchg
adc
dec
je
or
out
sbb
jge
test
mov
mov
inc
push
loope
and
jae
dec
pop
lock
sahf
test
subl
xchg
icebp
test
daa
fs
and
push
inc
filds
in
jo
icebp
inc
arpl
cmp
lret
sub
and
insl
xchg
cltd
sahf
push
rcr
bound
adc
xor
scas
push
movsl
sbbb
inc
pop
cmp
fcmovb
daa
cltd
popa
mov
test
cmp
mov
std
pushl
mov
rcll
pop
push
push
sbb
xchg
lcall
jo
lahf
movb
ss
xlat
push
call
push
xchg
and
inc
jl
sub
pop
imul
mov
lcall
jae
add
xchg
mov
dec
std
in
sbb
das
flds
xchg
push
mov
std
les
mov
test
aad
xor
jns
fcompl
clc
push
sbb
xor
inc
mov
and
cs
in
outsl
sbb
mov
add
scas
push
pushl
adc
cmp
or
daa
lods
js
xchg
mov
bound
cs
icebp
add
daa
pop
shlb
cwtl
and
mov
xchg
xchg
xor
es
out
cmp
xchg
ss
movsb
jbe
inc
and
loop
sub
leave
mov
clc
bswap
in
add
inc
or
enter
xchg
das
pop
jnp
scas
adc
cltd
arpl
cmp
ss
xor
test
jmp
push
mov
lcall
mov
je
ss
xor
push
xchg
dec
pop
jge
fsubl
add
fs
mov
out
and
mov
jg
jo
repnz
clc
out
xor
bound
jp
jmp
mov
push
scas
xchg
popl
xchg
into
ficompl
cmp
cmp
sub
xchg
mov
mov
push
pop
fdiv
xchg
clflush
lahf
faddp
cmpsb
scas
dec
bound
push
jecxz
mov
lea
sub
popa
push
jge
or
or
mov
dec
pop
mov
gs
mull
and
mov
lret
or
es
or
test
push
data16
fstl
cmp
add
fnstenv
js
mov
mov
jge
dec
mov
roll
scas
inc
int3
inc
or
cmp
lods
jo
shl
pop
or
out
adc
push
and
shrl
jecxz
push
inc
xchg
lods
fwait
push
cmpb
lcall
mov
arpl
fidivrs
mov
inc
filds
call
cmp
insl
decl
or
jecxz
lret
scas
mov
pusha
mov
inc
into
jae
shlb
inc
xchg
jns
push
push
and
cmp
sub
cmp
mov
and
xchg
stos
push
xor
lret
insb
repz
jbe
jmp
xchg
adc
sub
pop
pop
mov
out
sbb
mov
test
and
mov
jne
jecxz
in
push
sbb
xchg
cmp
incl
pushf
mov
mov
dec
xchg
mov
jl
sarl
inc
rcr
or
rorl
push
orl
cmpsb
mov
aad
or
mov
mov
movsb
orl
imul
xor
adcl
movsb
adc
add
cwtl
mov
add
stos
fdivrs
stc
pop
mov
insl
sbb
and
scas
outsl
xor
loop
loopne
das
es
int
cmp
mov
adc
test
xchg
xchg
push
dec
movsb
pop
aam
lret
xchg
xor
lock
xor
out
xchg
mov
fistpl
leave
adcl
sbb
add
imul
jecxz
xchg
movsb
outsb
out
cwtl
out
inc
push
xor
xchg
jp
bound
dec
add
add
mov
mov
je
fwait
int
iret
jbe
std
jmp
jae
and
addr16
cmpsl
mov
lcall
push
dec
xchg
addr16
xor
punpckhbw
adc
lods
sub
outsl
pusha
icebp
inc
inc
repnz
sbb
adc
inc
out
fmuls
cmp
fwait
cmc
cmp
mov
push
loop
adc
cmp
ret
into
rorb
dec
out
cmpsl
mov
add
dec
cltd
adc
es
pushf
jnp
lret
dec
aaa
fnstcw
push
mov
mov
in
sbb
jge
in
xor
lock
xchg
mov
xor
das
das
cld
mov
js
sub
sbb
test
fldenv
sbb
push
jb
push
xchg
out
and
lcall
cmp
div
test
sub
pop
xor
inc
or
mov
lods
xchg
shlb
push
jae
or
lods
cmp
sbb
ret
scas
leave
enter
sbb
clc
inc
call
or
sbb
xor
ja
add
cmp
gs
pop
and
xlat
popf
mov
fisubl
pop
push
or
pop
mov
jne
lret
lcall
sarl
sub
sbb
cld
jmp
adc
je
fsubl
mov
push
mov
xchg
loop
ja
fwait
roll
cmp
aam
inc
lock
out
xor
test
mov
scas
or
test
imull
das
pop
jo
sub
sub
cmp
cld
inc
cmpb
or
test
push
mov
fsubs
add
insl
movsl
mov
mov
and
dec
outsl
mov
bound
cmpb
iret
dec
xchg
mov
outsb
lock
sub
sub
std
cmp
xchg
scas
xor
mov
loope
mov
pop
fwait
mov
test
leave
mov
sbb
jp
sub
push
out
fs
fcmovbe
xchg
push
cmp
das
dec
adc
loop
fmuls
xchg
inc
lock
dec
in
lods
loope
jmp
dec
push
popf
fwait
popw
outsb
dec
pop
sub
scas
pop
enter
pop
add
popf
iret
fbstp
sub
daa
inc
outsl
push
sahf
push
xor
sahf
out
adc
or
mov
loopne
mov
data16
cmp
stos
es
arpl
insl
lock
inc
add
and
ret
es
inc
mov
mov
xor
xor
mov
pop
stos
shrl
jecxz
jo
jecxz
rcrb
mov
adc
aad
movsb
sub
xor
inc
inc
loope
mov
addr16
xor
mov
push
sbb
xchg
insl
fnstsw
neg
adc
push
jmp
cli
andl
jnp
aam
call
inc
push
xor
add
aam
cld
ret
adc
imul
sbb
xchg
jmp
inc
ds
in
je
inc
fs
fstpt
faddl
mov
pop
lret
xor
add
les
xchg
rorl
fadds
cltd
mov
jecxz
cmpsl
ljmp
xor
pop
cmp
loope
rorl
lock
lods
out
mov
jge
popf
jb
jg
xchg
sbbb
push
enter
iret
sbb
daa
cmpsl
mov
lods
orl
add
push
outsl
ds
push
dec
imul
lahf
les
add
jno
movsl
das
fs
add
mov
ret
out
mov
in
push
jle
dec
mov
in
es
xchg
out
dec
jo
mov
nop
cmp
neg
mov
sbb
and
vmovshdup
cmp
mov
inc
jae
jmp
adc
pushf
mov
xchg
pop
pop
inc
shrl
aaa
in
cmp
mov
adc
sahf
andb
push
push
out
mov
adc
outsb
xor
jecxz
out
jae
adc
xchg
test
scas
mov
jp
dec
xchg
sub
xchg
aaa
or
mulb
add
in
aam
jp
mov
daa
xchg
cmpsb
and
cmpsl
and
pop
daa
int
daa
iret
dec
insl
add
out
and
pop
mov
jmp
inc
mov
shl
mov
gs
sbb
sbb
mov
cmpsl
adc
mov
stos
mov
push
sbb
fucom
cmp
fidivrl
push
jnp
daa
jmp
notl
movsl
je
cmp
addr16
mov
pop
mov
mov
andl
sub
jno
les
ja
sahf
push
shl
and
daa
sub
sbb
daa
rcrl
inc
and
js
fsubs
and
cmpsl
daa
mov
sbb
xchg
filds
push
iret
pop
das
mov
push
repnz
jle
aas
mov
ds
pop
out
enter
arpl
cs
xlat
jo
push
les
cmp
sbb
sub
ljmp
adc
adc
xor
xor
loop
fnstenv
pop
sbb
mov
mov
inc
or
push
or
inc
push
sbbb
xchg
fwait
aas
loopne
jle
and
repz
mov
mov
mov
mov
fistl
jnp
dec
sbb
test
inc
adcb
out
xchg
aad
xor
dec
fdivs
mov
add
inc
jg
sbb
clc
mov
test
and
aaa
add
pushf
sbb
outsl
mov
aam
or
sar
js
sub
xchg
sub
lret
xor
inc
lret
mov
lods
ret
push
cmpsl
xchg
das
loopne
push
ljmp
mov
pop
fists
push
push
mov
xor
into
adc
adc
aas
imul
or
clc
push
push
jmp
mov
jle
loopne
push
and
movsl
out
and
jbe
int3
stc
idivb
pop
mov
daa
push
mov
and
mov
fdivl
in
jmp
mov
rclb
std
xor
mov
insb
out
sarl
aam
divl
add
sbb
loopne
lret
lods
ret
rclb
push
mov
xchg
fldcw
add
and
lahf
sahf
in
repnz
fldenv
insb
add
es
sbb
out
sub
sbb
mov
leave
mov
testl
xchg
inc
das
mov
sahf
mov
jmp
leave
xchg
in
xchg
push
outsb
cmp
push
out
or
fs
ja
lcall
xorb
mov
fistl
das
scas
xor
inc
dec
jae
insl
mov
mov
jg
test
test
mov
or
push
cld
shr
scas
xor
out
and
mov
jg
add
mov
jg
and
mov
cmp
jae
or
sub
out
bound
xchg
ljmp
lods
adc
loope
aad
mov
aad
mov
pop
lods
mov
pop
pop
xchg
xor
xchg
int3
add
ja
push
xor
and
lea
lret
fwait
push
lods
cmp
insb
imul
mov
pop
movsb
lds
push
sub
cs
stos
push
adc
rclb
test
xchg
in
xchg
push
jnp
insl
cmp
inc
stos
test
jb
xchg
push
rorl
cli
fmull
ljmp
mov
adc
pop
push
xchg
cmp
mull
jmp
jp
aam
int
mov
fdivs
fiaddl
fcmovne
dec
or
dec
lret
inc
cmc
in
arpl
inc
rorl
cmp
xor
faddl
push
pop
or
mov
pop
fistpll
jg
mov
cmpsb
sarl
aaa
movsl
jb
or
push
jb
push
lods
dec
xchg
push
iret
sbbb
les
jge
xchg
adc
sti
cwtl
sti
jae
notb
pop
pop
pop
mov
mov
ja
ja
mov
dec
mov
pop
jbe
mov
adc
imul
shrl
dec
mov
mov
add
ja
test
mov
pop
mov
cmpsl
gs
inc
jmp
sbb
sbb
lods
xor
and
push
mov
cmp
jnp
testl
mov
pop
daa
add
rclb
xchg
mov
mov
stos
lret
and
pushf
and
insl
in
mov
jns
jmp
int
sbb
dec
jmp
repnz
push
pushf
mov
cwtl
mov
mov
ds
cld
jg
scas
jo
mov
add
fwait
jne
mov
or
lods
mov
mov
imul
mov
loope
cld
dec
dec
popf
scas
sbb
ret
mov
aaa
cmpsb
iret
mov
xor
pop
stc
add
xchg
jnp
jecxz
aad
cld
or
xor
enter
mov
pop
stc
and
mov
xchg
pushl
gs
push
mov
fndisi(8087
adc
push
inc
sub
mov
or
xchg
pop
sub
and
imul
xchg
and
fildll
or
ljmp
xchg
lods
mov
jo
dec
cmp
bnd
add
push
cmc
fcomps
in
dec
out
cmc
dec
movsl
mov
lods
xor
pop
add
fcoml
cmp
dec
and
test
mov
shl
xabort
aaa
jl
and
jb
xchg
xchg
scas
push
aas
pop
loope
fdivrl
mov
mov
fadd
idivb
int3
in
in
inc
mov
fstps
lret
jmp
out
add
push
orb
cs
lret
lds
dec
lea
aaa
inc
mov
push
cs
rcll
rcll
push
jns
cmp
adc
cmp
jno
cld
pop
subb
shr
add
jae
adc
je
mov
sub
mul
dec
mov
push
lahf
in
lret
inc
sbb
mov
rcrl
adc
popa
daa
cmp
push
bound
cmpsb
mov
jno
les
push
leave
mov
dec
std
stc
xchg
insl
cmp
add
out
mov
js
sub
xor
mov
sti
dec
sbb
pop
test
movsb
fwait
scas
je
sbb
nop
mov
mov
out
ss
dec
mov
jb
push
mov
ucomiss
loop
movsl
inc
ret
imul
sub
inc
js
pop
stos
xor
lods
add
movsl
inc
clc
out
std
dec
xor
ficoml
sarl
sub
jg
lods
mov
lea
sahf
jle
mov
shrl
std
loop
push
xor
inc
notb
sbb
mov
mov
in
cmpsl
in
lds
xchg
mov
bound
mov
out
ljmp
shl
or
pop
mov
bsr
movsl
pop
xor
pop
imul
and
sub
push
or
popa
out
dec
insb
jmp
pop
test
stos
or
mov
jns
movsb
fcomip
and
xchg
lahf
sub
scas
stos
inc
mov
fidivrl
mov
push
icebp
out
ljmp
subb
loopne
jle
mov
mov
lea
inc
lods
lods
ja
ficoml
or
pop
fisubs
mov
mov
inc
jb
jge
and
add
enter
mov
loope
sub
aaa
std
les
pop
je
xor
rorl
mov
lret
movl
jo
mov
mov
daa
shlb
xorl
inc
dec
sbbl
jl
lret
push
mov
push
push
xchg
cmpsb
cmpsb
xchg
lea
pop
push
inc
fiaddl
adc
pop
or
xor
outsb
jle
popf
movsl
push
out
jnp
push
adc
xchg
out
outsl
mov
mov
mov
pusha
sub
mov
aas
cmp
out
cmc
or
lret
sbb
and
data16
push
or
adc
lea
push
xor
pop
fnstcw
js
sbb
test
out
jge
bswap
outsb
lea
inc
lahf
sbb
mov
nop
outsb
roll
jg
repnz
jle
fimuls
addl
dec
mov
lahf
mov
jno
pushf
cmp
sub
or
fstps
std
ret
dec
jne
or
fnstenvs
push
rcll
adc
in
mov
mov
inc
fistps
jne
pop
sub
aad
adc
stc
inc
sbb
push
push
push
jmp
repz
mov
enter
inc
push
mov
inc
mov
pop
andb
data16
ds
data16
aas
pop
iret
add
jge
jmp
movsb
xchg
stos
out
popa
or
adc
mov
adc
lret
sub
mov
loopne
pop
cmp
mov
jno
adc
and
push
clc
cmpsl
mov
sub
mov
xlat
in
std
jmp
in
push
pop
fsubr
dec
icebp
pop
jge
mov
mov
movsb
std
lds
lds
xchg
jmp
es
xor
loopne
dec
adc
sub
xchg
loopne
lods
xchg
in
popf
push
and
push
mov
lods
out
mov
cld
es
mov
inc
xchg
cld
push
sbb
pusha
adc
das
vaddsubps
xor
sub
jle
in
addb
mov
mov
inc
pop
stos
xor
clc
jb
mov
sbb
lahf
rcl
enter
bound
cmp
and
xor
pop
jl
test
mov
sub
inc
pop
inc
adc
and
orl
out
push
pop
dec
mov
es
test
imul
and
addr16
bound
mov
imul
das
addr16
cltd
mov
push
mov
cmpsb
xchg
jmp
mov
test
call
inc
out
adc
dec
daa
sbb
pushf
jmp
add
ret
test
ret
adc
adc
adc
sbb
xchg
rcll
mov
clc
xchg
cmp
mov
aaa
lcall
jbe
les
out
add
jmp
fcmovbe
add
dec
lahf
add
loop
lods
mov
outsb
sub
add
rorl
mov
sbb
pop
mov
int
xorb
adc
and
and
enter
xor
pop
fnstsw
out
clc
mov
lcall
insb
cmp
mov
fs
xor
push
inc
cld
sti
mov
insl
mov
fadd
pop
out
push
aas
out
xor
aaa
dec
hlt
bnd
jnp
lcall
rcll
repz
test
pop
mov
dec
hlt
cmp
cmovnp
push
jp
push
mov
and
into
popf
aad
sti
jo
pushf
sbb
sbb
fisttpl
pushf
mov
aam
push
stc
adc
out
test
push
jg
divl
add
adc
gs
jae
bnd
test
inc
scas
rcll
and
push
push
stos
or
into
adc
xchg
inc
xor
cld
cmp
cmc
inc
je
mov
and
adc
xlat
jno
mov
pop
sbb
ret
call
fsubs
mov
push
popf
scas
leave
cmp
mov
fcomps
mov
xchg
sarl
dec
cli
insb
or
outsb
ljmp
imul
nop
sarb
sub
xchg
imul
push
and
data16
ss
popf
and
imul
cltd
cwtl
sarb
xor
cmp
cmpl
mov
sub
popf
jnp
and
pop
outsb
bound
pop
mov
sbb
dec
dec
insb
jnp
dec
mov
sub
inc
jge
sarb
sub
pop
bound
xlat
ror
cmc
test
lret
sbb
das
pop
hlt
or
das
mov
push
in
pop
nop
shrb
test
push
mov
mov
adc
jno
mov
lods
sbb
mov
or
xchg
adc
fwait
inc
cmp
es
addb
out
mov
scas
cmp
mov
cltd
enter
pop
cmpsb
test
pop
inc
cmp
dec
pop
scas
mov
xlat
testl
hlt
push
cmpsb
pop
and
sbb
cmp
lods
xchg
or
lahf
dec
and
pushf
jle
es
mov
int
mov
jbe
out
mov
sub
pop
and
dec
cmp
adc
les
add
pop
dec
sti
ret
cwtl
dec
cwtl
adc
xchg
sub
pop
cmp
pop
mov
cwtl
ja
pop
inc
sbbl
lahf
mov
xchg
fwait
mov
out
xchg
xchg
cmp
xor
or
inc
lcall
rcr
jl
daa
push
mov
push
xor
push
sub
push
xchg
jb
mov
mov
and
pop
fwait
outsb
push
xchg
jecxz
xor
in
movb
fcoms
xchg
clc
repz
iret
out
in
pop
cmp
mov
lret
mov
mov
mov
xor
or
aad
mov
push
jnp
outsl
stos
jns
fildl
or
push
inc
movsl
jle
mov
outsl
push
lods
adc
frstor
pop
std
inc
lods
outsl
jne
out
mov
addr16
mulb
repnz
jno
movsl
int3
sub
aam
cmpsl
clc
and
movsb
pop
sub
pop
fcomps
cmpl
push
jecxz
xorb
or
arpl
lds
push
mov
inc
add
xchg
pop
dec
mov
les
aas
std
fistl
mov
or
cwtl
xchg
jg
push
cld
leave
int
divb
or
pushf
roll
arpl
xor
lods
pop
scas
ret
test
push
ret
push
lea
fs
xor
addr16
mov
pop
sub
pop
sbb
xor
pop
xlat
dec
movsl
test
mov
adc
aad
rcrl
aad
pmullw
es
pop
repnz
test
xchg
xor
mov
push
mov
mov
data16
xchg
lret
inc
int
rolb
or
xchg
test
jp
and
mov
pusha
rcl
xor
lcall
mov
je
lcall
xchg
dec
or
mov
mov
stc
xchg
sbb
nop
stos
sub
ret
mov
adc
mov
inc
mov
sub
out
out
xor
movsb
sbb
pop
lds
pop
sbb
inc
jb
shrb
push
jg
imul
sub
pop
shrb
xor
jns
and
xor
xor
dec
cmc
pop
push
test
std
pop
aaa
cmpsb
inc
int3
pushf
addl
insl
addr16
fisubrl
das
rcrl
sahf
mov
arpl
dec
aad
test
pop
mov
push
bnd
cmpsb
out
mov
sub
data16
jbe
mov
daa
loop
mov
push
lock
je
lds
out
pop
sbb
add
addr16
sbb
movsb
xor
or
ja
jnp
cmp
loope
popa
outsb
jmp
cld
xor
addr16
cwtl
ret
adc
sarb
and
dec
in
sarb
jmp
adcl
fidivs
and
or
fstpt
pushf
sub
jp
lea
sbb
push
push
fwait
sbb
aas
out
test
xchg
stos
and
in
jle
add
mov
inc
lcall
inc
dec
dec
jnp
lock
gs
fnstsw
lahf
jmp
sub
mov
push
sbb
add
mov
dec
and
roll
cltd
shll
clc
ljmp
repnz
mov
cmpb
imul
cmp
dec
inc
out
xchg
in
ds
shrb
ss
es
push
fs
outsb
shl
movsb
push
jb
bound
add
sarl
in
lcall
dec
fbld
data16
jno
pop
pop
mov
pop
mov
fiaddl
out
mov
and
cs
mov
icebp
push
cmp
mov
adc
das
push
in
pop
sub
jns
aas
mov
test
xor
or
sbb
popf
cmp
lcall
xchg
add
shrb
jmp
lcall
cmp
jl
xchg
out
sbb
js
lock
mov
mov
xchg
mov
push
pushf
pop
push
loope
fldt
ret
cli
jmp
call
push
cltd
je
out
jno
shl
inc
imul
jns
push
adc
sub
add
sarl
dec
dec
xor
xor
inc
dec
and
and
int
ja
jne
dec
jns
movsb
cmp
rcrb
inc
adc
xor
xchg
add
sbb
std
xchg
pushf
jl
lret
popl
ret
jp
mov
push
js
xchg
lret
cmp
bound
adc
fidivl
out
xor
mov
sub
push
nop
test
mov
cmp
out
sti
sti
insl
rcrl
adc
mov
add
fadds
mov
test
xchg
jmp
stc
lods
je
mov
dec
cs
je
sub
dec
pop
insb
subl
out
popa
xchg
inc
hlt
rolb
fidivrs
mov
push
adc
sub
test
jb
sub
cmp
push
ja
mulb
rolb
test
cld
inc
insb
cs
jmp
mov
xor
lds
or
and
lods
adc
dec
push
leave
mov
sbb
loope
mov
mov
lock
push
out
mov
cmpsb
cmp
les
xor
and
jae
push
gs
cmp
fld
test
or
mov
fimull
or
mov
and
or
jl
cmp
dec
ret
fwait
mov
imul
sub
pop
inc
dec
xor
lahf
or
test
mov
into
sbb
lahf
test
es
add
jle
pusha
or
push
aaa
inc
xchg
adc
fcoml
out
lods
out
enter
fisubrs
push
nop
aam
int3
xchg
adc
mov
fxch
mov
adc
mov
xchg
rcrb
xchg
dec
xor
sbb
lcall
int3
cmpsl
push
dec
lods
add
ljmp
mov
push
aas
test
push
sbb
fs
mov
lds
aas
pop
sti
pop
sbb
mov
xchg
sub
adc
jp
adc
dec
loop
imul
pushf
add
arpl
gs
or
inc
push
adc
or
fidivs
push
jns
cli
outsb
test
xchg
aad
and
hlt
es
dec
enter
inc
popf
ja
sbb
sub
jae
jbe
scas
fsubl
cs
mov
dec
aaa
sub
fiadds
outsl
and
imul
push
and
and
daa
mov
mov
sarb
xor
es
mov
hlt
loop
fildll
testl
lods
dec
out
pusha
imull
or
pop
push
fcoml
sti
adc
lods
std
xchg
jecxz
pop
neg
cmp
scas
push
mov
jo
mov
mov
and
call
popl
dec
test
push
ret
sub
daa
ljmp
push
scas
cwtl
rorb
insl
std
rcll
std
or
inc
outsb
adc
adc
sarl
rorb
pop
mov
shlb
iret
dec
js
pop
lods
pushf
into
daa
fstps
cwtl
subb
out
or
sbb
aam
ret
out
xchg
rol
mov
pop
mov
imul
pop
test
test
enter
enter
add
out
add
rol
xchg
stos
cmp
push
sbb
push
out
out
and
add
dec
push
testl
jns
rol
cmp
xchg
xor
pop
sub
adc
sbb
cmpb
pop
icebp
mov
popl
into
mov
imul
in
sbb
inc
push
loope
cwtl
or
sub
and
pusha
sub
ret
inc
rolb
lret
xor
push
out
mov
cli
lock
inc
sbb
sub
sbb
inc
mov
mov
jle
stc
mov
cmp
enter
sub
icebp
test
push
adc
pushf
pop
psubsw
faddl
ficoml
xchg
test
mov
push
sub
insb
cli
in
mov
scas
xchg
out
ja
add
pop
ja
clc
out
js
aad
jmp
or
adc
hlt
dec
mov
push
sbb
arpl
ds
sbb
fldenv
push
inc
push
rol
cwtl
cmp
dec
inc
sti
sbb
push
shrb
and
mov
insl
imul
jns
mov
sbb
or
out
jle
mov
in
ficoms
xchg
gs
cmp
jl
or
movsl
inc
lret
xlat
mov
dec
mov
xchg
loop
ret
out
repnz
jg
mov
adc
jmp
or
xor
cmp
sbb
ficoml
xor
fcoml
push
jmp
add
sub
push
add
daa
xchg
repz
mov
xchg
sarl
aad
push
out
pop
push
dec
adc
mov
dec
andb
ficoms
adc
pop
int3
test
mov
stc
imulb
add
xor
push
inc
mov
pop
lods
and
sub
adc
in
jne
nop
sub
xchg
imul
sub
or
dec
jo
mov
mov
cltd
jle
mov
lea
sbb
mov
add
adc
test
dec
mov
subl
fildl
insl
xchg
xchg
pop
dec
cmp
enter
mov
jecxz
inc
pop
outsb
filds
test
push
mov
notl
cs
dec
inc
lcall
jecxz
mov
imul
sbb
rolb
adc
jns
jp
cs
lods
dec
dec
outsb
mov
lret
jg
jne
leave
lods
div
repnz
insl
cmp
push
cli
pop
ret
in
adc
cmc
xlat
cmp
pop
cmpsl
jg
ds
pusha
inc
das
adc
inc
fwait
inc
and
cmp
mov
add
sub
pop
pop
sbb
jbe
fistl
aas
insb
sbb
or
cld
shlb
fistps
mov
inc
xchg
xchg
pusha
test
mov
pushf
inc
push
jbe
frstor
and
xor
movsb
cmp
add
adc
cltd
jb
sub
mov
and
jnp
stos
add
je
or
pusha
xchg
xor
fiaddl
sub
sbb
rol
mov
outsl
fcmovb
add
sti
icebp
pop
loope
adc
mov
jecxz
sbb
lock
cltd
jecxz
dec
sti
imul
xor
jmp
xchg
dec
les
aaa
mov
dec
sub
jmp
mov
adc
shlb
push
xor
xchg
outsb
xlat
in
das
or
adc
or
fdivr
ret
popf
dec
adc
or
mov
in
dec
lods
loopne
jno
movsl
cmp
js
int3
adc
jns
cmp
test
pop
popf
imul
pop
push
mov
out
cmp
enter
js
mov
outsl
lds
pop
push
jge
test
push
jae
dec
jge
in
scas
inc
filds
aaa
or
fld
or
dec
jge
mov
add
dec
or
add
aaa
add
cwtl
popa
jle
int3
add
in
mov
bound
add
mov
cwtl
sahf
push
fsub
maxps
jg
adc
mov
sti
xchg
pop
xchg
test
mov
xor
or
inc
and
sar
xor
scas
outsb
xor
out
pushf
push
fisttps
jp
mov
pusha
dec
push
les
jns
lods
push
scas
xor
ret
sub
cmp
sub
and
cltd
push
imul
cmpsb
lods
loop
mov
adc
fisubrs
inc
int3
push
fnstenv
test
xchg
xchg
dec
js
rcll
repnz
adc
in
jmp
pop
in
xchg
mov
int3
or
sbb
imul
mov
fisubs
loopne
sahf
mov
movsb
fwait
jo
int
test
sti
dec
cs
loope
stos
xchg
vxorps
fucomp
loope
stos
and
mov
pop
adc
lret
ret
or
cmpsb
sbb
mov
jo
int
shl
movsl
xchg
jp
cmc
push
lds
jno
cmp
dec
and
and
mov
pusha
cmpsb
xchg
mov
mov
add
push
scas
sub
cmp
push
outsl
lods
out
ja
mov
xchg
addb
jns
pop
cld
xchg
mov
out
ja
stc
xor
and
movsb
jnp
iret
fistps
xchg
pop
fildll
and
pushf
or
fnstcw
or
addr16
gs
movsl
push
rorl
inc
pop
mov
mov
negb
ja
sahf
repnz
inc
sahf
std
jl
xor
dec
add
jge
xor
mov
xor
dec
sub
pop
pushf
mov
dec
pop
je
int3
xor
clc
add
or
xchg
push
add
enter
test
pusha
repnz
leave
mov
imul
lret
or
pushl
stc
mov
or
loope
push
xor
and
cmp
sbb
or
ja
add
arpl
xor
mov
or
lcall
push
popa
lock
or
out
repnz
leave
js
les
sbb
dec
aaa
sub
sbb
jbe
cmc
push
je
outsl
in
sbb
push
push
shll
stos
fnsave
and
cltd
negl
jge
aad
mov
mov
aam
xchg
bound
les
jae
cwtl
sbb
andb
rorb
bound
les
pop
sub
mov
dec
aaa
in
and
decl
jge
add
shrb
mov
scas
ss
hlt
enter
pop
push
icebp
lret
shll
pop
icebp
and
mov
xchg
dec
mov
ljmp
dec
pop
dec
rorl
mov
cmp
mov
pop
into
xchg
and
addr16
ss
mov
imul
scas
adc
xchg
inc
rolb
test
fcomi
andl
out
hlt
test
fabs
popf
in
in
and
clc
adc
mov
cmp
arpl
pop
mov
mov
pop
inc
fdivrs
test
xlat
cmp
fdivl
pop
jo
sbb
cmp
jae
pop
scas
xchg
enter
adc
icebp
addr16
stos
rorb
cmpb
ret
hlt
loopne
or
or
mov
repnz
fstps
addl
cmp
pop
dec
notl
mov
movsl
mov
fsubl
push
loopne
dec
or
ffreep
xchg
inc
pop
mov
setnp
cmp
out
dec
fcoml
xchg
pop
scas
and
or
lea
jmp
jp
jb
inc
jno
inc
inc
pop
add
inc
mov
cmp
sar
inc
lds
or
mov
shrl
leave
cltd
sub
and
jnp
out
addr16
pop
std
rcr
push
fwait
and
ljmp
aad
stos
mov
and
dec
jle
jl
iret
fists
sarb
add
jecxz
inc
movsb
dec
fildll
jmp
addr16
insb
js
mul
movsl
or
push
mov
push
in
adc
loopne
fisttps
aad
inc
pop
mov
inc
push
gs
push
out
push
js
insb
dec
stos
add
sub
sti
and
je
arpl
mov
iret
sbb
sub
xchg
in
out
pop
sub
and
mov
sub
inc
jne
cwtl
and
out
or
cmp
push
or
call
cmpsl
sub
sbb
loop
xchg
add
test
rcll
and
jns
test
cmpsb
xor
xchg
int3
dec
dec
iret
rcrb
push
in
xchg
push
jae
xor
int3
or
xor
nop
sub
gs
mov
lock
movsb
push
pop
mov
and
rcrl
test
aam
xor
leave
push
sub
hlt
inc
dec
inc
mov
mov
cltd
daa
dec
mov
repz
dec
incl
mov
les
push
lock
cwtl
lock
xchg
adc
cmc
mov
push
add
out
sub
add
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
dec
add
mov
add
add
add
add
add
add
add
sub
data16
