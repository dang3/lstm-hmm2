aad
jne,pn
popa
int
adc
mov
lea
add
cmp
aas
mov
mov
sbb
and
rorb
cmp
xlat
ret
lcall
mov
movsb
adcb
clc
dec
xor
xor
add
add
mov
inc
push
movsl
push
sbbl
adcb
adc
pop
roll
xchg
adc
add
xchg
aas
roll
xorl
sub
insb
sarb
push
or
mov
les
les
sub
pop
mov
add
ljmp
cmp
add
inc
inc
shll
push
inc
adc
inc
adc
push
add
jae
or
das
jnp
inc
sbb
adc
or
xor
push
jl
test
ljmp
push
subb
fstpl
loopne
pop
fadds
shll
scas
lock
dec
int
or
flds
pop
xor
enter
out
jecxz
nop
daa
test
into
adcb
dec
aas
scas
cmp
pop
decb
rol
and
or
xor
mov
leave
xor
adc
sbb
testl
test
enter
orb
mov
or
popf
wbinvd
push
or
inc
push
mov
mov
fs
add
out
xor
punpcklwd
btl
inc
sub
test
lea
jbe
test
daa
adc
add
cli
xchg
ret
xor
iret
or
jmp
jl
cwtl
mov
xor
lods
mov
jmp
jb
sub
or
je
inc
cmp
cmp
rcll
cwtl
mov
test
scas
mov
ljmp
cmc
std
and
sub
test
nop
mov
inc
sbb
push
adc
cmpsb
mov
pop
testl
fistl
lea
inc
jae
imulb
ss
nop
push
sbb
es
iret
shll
insl
test
jl
fs
jns
rorb
syscall
std
popa
stc
and
add
cld
cli
ljmp
add
inc
inc
add
mov
cld
adc
dec
ret
cld
rcrb
xchg
cs
les
dec
orb
mov
inc
stos
and
sbb
sbb
jb
fiadds
push
jecxz
dec
mov
sub
jns
orl
inc
sbbl
lods
push
jmp
dec
add
bound
mov
cmp
jne
fwait
cld
sub
orl
or
dec
loop
sub
xchg
xchg
push
bound
mov
xchg
sbb
add
add
pusha
outsb
mov
mov
sub
in
in
aas
or
sbb
add
aas
push
cltd
dec
adc
out
fstl
jnp
scas
and
addl
nopl
cmp
add
mov
jecxz
imul
add
popl
and
jecxz
adc
mov
dec
and
jb
push
test
int
or
xor
stc
mov
cmpl
test
push
std
subb
inc
in
lds
xor
lret
mov
pop
xchg
push
insl
mov
lcall
daa
cmc
inc
xor
insl
add
sub
push
pop
xchg
inc
clc
aam
push
inc
inc
xchg
cmpsb
jecxz
push
ret
mov
not
sub
fistpll
scas
pop
xchg
sub
cwtl
jne
imul
xor
sub
orb
nop
mov
add
push
adc
inc
mov
gs
and
mov
push
sbb
xor
mov
sarb
rcr
push
ss
and
int3
sbb
add
leave
pop
and
cmp
inc
inc
mov
sub
inc
push
jge
or
scas
repz
mov
shlb
mov
mov
inc
or
xchg
xchg
cli
pushf
popa
pusha
pop
dec
add
fiadds
mov
add
roll
dec
push
rolb
aam
push
jno
jecxz
xor
or
adc
mov
jae
and
lret
or
add
loope
adc
in
inc
repz
icebp
xor
std
jge
dec
cmpb
rclb
mov
mov
mov
dec
sub
mov
addb
popf
inc
sbb
inc
mov
xor
or
dec
cmpl
jb
and
outsl
adc
lods
xor
xchg
xchg
inc
fsubrs
xchg
test
xor
add
and
mov
pushf
loop
jecxz
mov
mov
mov
test
xor
or
mov
mov
pusha
mov
pop
popf
cwtl
and
inc
jbe
inc
fisubrs
rclb
mov
sbb
or
out
mov
insb
inc
and
dec
and
and
jne
test
movsl
in
movsl
push
add
mov
push
or
dec
rorl
xchg
shrl
ljmp
in
ljmp
and
xchg
add
pop
add
inc
icebp
sbb
xchg
and
dec
loopne
in
mov
out
add
das
aad
jmp
and
pop
xor
fisttpll
sub
aad
push
addr16
adc
pop
inc
sbb
adc
ja
out
cmpsb
aad
cld
add
push
xchg
mov
jl
sub
nop
pop
pop
sub
or
jmp
jge
sub
sti
adc
xor
nop
or
in
das
ja
mov
pusha
inc
fwait
testb
sbb
jmp
stos
sbb
minps
scas
sbb
pop
xor
cli
and
push
sub
dec
out
jmp
ds
dec
sbb
inc
sbb
cmc
fld1
int
jp
pop
je
jge
hlt
and
mov
and
push
rcll
dec
fiaddl
adc
imul
adc
sub
inc
inc
jae
xchg
adc
mov
mov
ss
hlt
cmp
adc
push
add
or
push
repz
pop
xchg
inc
or
scas
jns
nop
inc
mov
jne
and
imul
and
rcr
xor
mov
add
adc
clc
mov
and
ljmp
add
ficompl
movsl
adc
inc
fistpl
jns
add
and
rorb
inc
outsl
arpl
popa
mov
or
and
mov
mov
jno
ret
and
lds
sahf
jle
loopne
sbb
add
sbb
pusha
jl
call
pusha
mov
in
inc
mov
push
ret
enter
sbb
push
adc
insl
rol
mov
jno
jne
sub
or
cmp
mov
imul
jne
push
cmp
div
cltd
and
sahf
loop
outsl
xchg
dec
jne
movsl
cmp
and
pop
rcll
add
inc
fs
sbb
ja
inc
inc
cmc
push
push
fidivs
das
pop
cmp
outsb
nop
cmp
aas
add
push
out
xor
adc
insl
mov
ret
and
addb
addl
dec
xlat
mov
cmp
pop
xor
jmp
inc
arpl
and
or
jecxz
push
push
or
shrl
cs
pop
out
jo
inc
adc
movsl
adc
add
arpl
xchg
das
sub
mov
sbb
sub
fdivrp
test
in
rcll
adc
fdivr
sub
divb
popf
pop
popa
xchg
jne
orl
and
pop
xchg
cltd
xor
and
fs
xchg
add
sub
mov
sbb
and
aas
inc
push
stc
dec
add
int3
popa
fistpl
test
test
mov
xor
bound
mov
lds
mov
cli
push
aam
and
and
pop
and
mov
xor
mov
sub
in
and
ret
inc
adc
test
and
jl
and
andl
push
mov
stc
jne
sub
aas
dec
sub
dec
push
or
mov
dec
lds
cwtl
inc
xor
mov
xchg
fldenv
push
andb
arpl
jmp
js
and
add
add
inc
scas
sub
int3
repz
xchg
mov
in
adc
push
xchg
daa
orl
leavew
jbe
inc
pop
add
adc
fists
andb
dec
insl
xchg
fdivr
icebp
ss
mov
ljmp
lcall
mov
dec
lahf
xor
cwtl
mov
pop
dec
xor
test
push
shlb
push
and
and
sbb
mov
jecxz
lahf
rcrl
lret
jmp
add
cs
outsl
inc
push
jle
sbb
add
cltd
xor
add
and
inc
sub
adc
or
lret
jl
pop
shrl
rol
mov
inc
stos
push
inc
push
push
cmp
testb
sub
cmp
and
pop
into
or
aas
push
fsubrl
inc
push
cmpsb
lea
jbe
scas
xchg
and
or
mov
aaa
leave
stos
mov
inc
fsubrs
sarl
fs
or
pop
popa
or
add
push
xchg
add
xchg
mov
popa
rcl
scas
fs
add
popa
cmp
push
xchg
inc
and
sub
pusha
ret
and
mov
sbb
sub
loope
push
imul
incb
xchg
jge
xchg
stc
inc
mov
jb
loop
int3
mov
add
pop
mov
jnp
cmp
dec
jns
into
xor
mov
or
and
enter
xor
xor
adc
mov
ret
test
xor
stos
and
inc
push
mov
lea
hlt
mov
inc
mov
orl
aam
js
add
push
test
mov
data16
dec
iret
add
ja
loope
cli
iret
push
inc
mov
pop
xor
sbb
add
xchg
sahf
sbb
nop
mulb
iret
scas
add
imull
xor
xor
shr
add
sbbl
jp
or
int
es
inc
and
jb
test
andl
and
mov
mov
or
xor
sub
adc
mov
aas
lret
aaa
int
lods
mov
into
or
scas
orl
fistpl
aad
push
push
sub
rcl
inc
addl
jecxz
cwtl
xchg
clc
xor
xchg
sbb
hlt
xorl
mov
mov
adc
cmpsb
jl
mov
sbb
iret
dec
cmp
nop
xchg
cmpsb
sub
lea
mov
test
mov
jo
mov
mov
pop
mov
inc
jp
mov
inc
mov
jne
xor
xchg
push
or
mov
dec
das
arpl
and
cmc
cld
mov
xor
and
adc
cltd
fdiv
push
and
test
sub
add
add
rclb
add
gs
test
add
xor
and
mov
cwtl
in
outsb
adc
adc
cs
xor
je
or
cmp
add
aas
loop
push
sbb
sbb
mov
cmp
add
scas
push
mov
mov
arpl
and
lods
lea
in
scas
jle
cltd
mov
ss
scas
mov
adc
mov
sub
call
cmp
jns
cmc
imul
les
sbb
add
lods
and
dec
gs
xor
aas
sub
or
sub
add
stc
push
push
pop
xchg
mov
lret
mov
push
mov
mov
lods
xor
das
jbe
inc
pushf
test
sub
adc
or
dec
mov
xorl
lea
test
and
mov
jne
xor
lds
add
call
sbb
mov
jge
jne
push
add
int
jns
push
in
cmp
movsl
sbb
sub
daa
pop
add
adc
les
loope
pushf
rcl
arpl
nopl
pop
orb
jb
mov
fiadds
insl
dec
mov
negb
mov
cmpsb
test
add
mov
push
repz
cs
sbb
xchg
dec
lods
addr16
test
dec
bound
das
xor
add
mov
inc
dec
or
inc
mov
iret
call
cmp
mov
inc
mov
push
push
icebp
testb
sbb
xor
jns
mov
inc
push
mov
subl
sub
jne
sbb
lret
icebp
fnstcw
add
cmpsl
cltd
vpsadbw
dec
sub
pop
aam
mov
das
fwait
minps
sets
sub
imul
sub
inc
push
pop
outsl
jns
movsl
aam
sub
adc
les
push
hlt
mov
cli
or
add
sub
adc
lea
in
inc
cmpl
cmpsb
push
movsb
inc
dec
fmuls
scas
iret
and
ret
cmp
mov
jmp
mov
add
mov
sub
aaa
lods
dec
and
adc
lds
in
ss
repz
lea
insl
daa
test
mov
inc
jns
dec
inc
or
and
add
ficoms
fisttpl
and
and
mov
dec
imul
lahf
in
adc
fimuls
bound
les
shll
push
or
adc
test
or
xlat
cli
lods
dec
add
adc
loopne
fiaddl
fsubs
push
push
shlb
popf
daa
fs
mov
loop
imul
push
xor
xchg
test
lret
inc
insl
pushf
xchg
scas
inc
lcall
sbb
fadds
adc
mov
jne
mov
cltd
jmp
xor
std
dec
aad
cmp
js
fs
ret
and
sub
sbb
adc
sbb
and
and
push
das
loopne
andl
lds
add
mov
adc
xchg
gs
test
adc
in
pop
xchg
sbb
xchg
mov
mov
in
lret
jo
dec
xchg
in
rcrl
movsb
testl
addr16
pop
ja
push
iret
scas
sbb
fcmovnbe
sar
inc
pop
mov
outsb
pop
and
or
adc
aad
or
jnp
or
ret
fbstp
or
cmpsb
les
pop
mov
fidivl
inc
clc
test
mov
and
push
int
mov
dec
ja
lds
push
popa
ret
or
mov
sub
int3
nop
fisubrs
mov
test
and
or
shrl
push
cmp
stos
frstor
mov
sbb
sub
std
iret
test
sbb
inc
jl
mov
jecxz
xchg
mov
xchg
push
adc
loope
pop
inc
lds
outsl
test
mov
sbb
test
test
push
hlt
or
xor
inc
xchg
jns
arpl
mov
inc
outsl
jo
test
add
out
jne
sbb
xor
xchg
repnz
ja
in
or
cwtl
jl
rol
push
inc
adc
sbb
imul
cltd
cmp
jnp
ja
push
or
xchg
dec
popa
jg
push
imulb
jne
adc
push
sbb
sub
inc
ret
repz
call
jmp
mov
aaa
jp
scas
sbb
cld
es
cmp
sahf
aaa
pop
add
inc
jp,pn
push
pop
xor
stos
testl
clc
or
push
cmpb
stc
add
inc
movb
push
mov
inc
fldenv
pop
cmp
push
aaa
sbb
inc
mov
or
ret
xchg
and
mov
push
mov
mov
fmuls
mov
jl
sbb
dec
iret
call
mov
popf
cmpsl
inc
shlb
popa
dec
pop
add
fcomip
push
lods
dec
cwtl
sbb
xchg
into
in
jge
pop
or
fwait
inc
or
dec
pop
je
pop
filds
add
lret
icebp
mov
and
int3
int3
cmc
inc
xor
andl
adc
xorl
add
mov
mov
jmp
mov
test
inc
test
call
and
les
inc
call
or
mov
pop
lods
jno
aaa
das
and
test
cli
orb
xchg
movsl
adc
addl
adc
xchg
xchg
lahf
or
inc
and
mov
jo
push
les
push
adc
repz
push
or
jecxz
lods
xlat
cmp
test
inc
rol
pop
dec
cmp
call
push
sahf
fwait
mov
test
fwait
sub
mov
or
inc
push
insl
ret
push
xor
cmp
xchg
addb
sar
inc
loop
xchg
sbb
les
push
sub
inc
lret
jle
pop
clc
movl
mov
sub
inc
popf
or
mov
sub
repz
lahf
dec
adc
mov
nop
popa
subb
aaa
mov
pop
push
scas
xor
orl
lods
jns
inc
lds
add
pop
dec
test
xor
test
jp
pushf
and
cmp
dec
test
add
out
outsb
inc
add
rcl
add
mov
mov
mov
ss
into
addr16
out
rclb
adc
test
sub
and
fildll
mov
jno
xor
xchg
lret
or
dec
int3
aad
xchg
cmp
ja
adc
mov
clc
dec
popl
shlb
mov
adc
adc
loopne
mov
inc
dec
push
add
cmp
adc
add
test
test
imul
jbe
lods
cmp
orb
push
add
inc
push
mov
mov
xchg
andl
inc
push
dec
das
inc
inc
cmp
adc
pop
movsl
arpl
nop
xchg
arpl
xor
push
mov
jne
push
test
xchg
punpckhwd
add
inc
mov
daa
or
push
cmp
inc
and
nop
mov
lea
add
xchg
arpl
icebp
nop
pop
inc
inc
xchg
daa
cmp
or
sbbl
in
pop
imull
xchg
sub
xor
sbb
pop
hlt
cmp
mov
xor
cltd
mov
or
inc
or
les
adc
inc
sbb
push
filds
adc
icebp
and
mov
push
inc
insb
leave
les
dec
xorl
and
stos
js
nop
push
sbb
xor
push
adc
and
mov
xor
push
leave
movsb
and
in
adc
lock
lret
add
jmp
and
push
lods
lea
gs
or
push
inc
mov
lock
mov
pusha
adc
xchg
inc
popl
sbb
and
mov
loope
and
popf
jo
dec
push
sbb
rorl
inc
cltd
loopne
xchg
sbb
and
lcall
jne
push
sbb
lahf
xor
frstor
aaa
test
xchg
push
fcoml
sbb
pop
cmp
or
lods
mov
mov
sub
xor
inc
push
or
add
adc
sub
jmp
sti
jbe
lock
and
lds
xor
sbb
and
mov
add
sub
mov
lods
mov
or
in
andb
adc
or
or
mov
inc
push
dec
push
and
and
mov
xchg
addl
inc
adc
sti
adc
inc
in
xor
fsts
add
inc
sahf
lret
mov
jne
fsubs
fsub
jno
add
in
jno
movl
bound
cltd
sub
bound
add
push
ret
inc
popf
sub
test
lret
int3
and
cli
outsl
and
push
scas
loope
sub
jmp
lcall
jg
outsl
outsl
mov
inc
inc
adc
cmp
sbb
xchg
jmp
fstps
leave
mov
inc
adc
xor
dec
cld
cmp
call
dec
aas
push
sub
dec
addb
mov
pop
mov
imul
xor
ret
addr16
pushf
sbb
daa
xor
shlb
es
movsb
mov
mov
adc
xchg
cmpb
inc
addr16
and
push
push
gs
mov
push
iret
and
xor
and
mov
xor
add
push
aad
call
inc
loope
test
es
orl
shrl
das
xchg
sbb
ret
scas
rolb
jge
sti
add
mov
roll
rcll
or
xchg
and
push
pop
xchg
es
popa
inc
sbb
outsl
xchg
or
lods
in
add
mov
ficompl
jae
xchg
or
and
sahf
pop
jnp
push
pop
or
div
inc
pop
movsl
cmp
add
inc
and
mov
inc
add
and
std
dec
orb
mov
xor
leave
xchg
jbe
aas
adcb
leave
and
push
or
dec
or
gs
pop
and
ja
test
mov
lea
ret
sbb
ljmp
add
mov
sub
sub
dec
dec
xor
rcrb
and
sbb
cmp
sub
fwait
add
insl
rorl
mov
jno
jmp
push
sub
xor
mov
jne
mov
sbb
insl
int3
pop
adc
add
iret
popa
jg
jns
add
cmp
pusha
pop
inc
ret
adc
adc
dec
or
rcrb
mov
fisubl
cmp
ss
test
shlb
mov
jge
mov
mov
lods
adc
cmp
mov
cltd
stos
xorl
push
cmp
lods
je
inc
imul
add
out
and
xchg
mov
lea
push
aad
cmc
js
mov
sub
add
dec
cltd
leave
adc
or
sbb
pop
and
repnz
or
xchg
imul
xor
inc
jg
mov
adc
dec
movsl
mov
or
fistpl
sub
xorl
sbbl
inc
orl
add
clc
jmp
pushf
mov
sub
je
out
popf
lret
sbb
xor
insb
xlat
mov
nop
aad
in
sbb
and
daa
and
xchg
push
and
and
mov
sbb
movl
inc
arpl
outsl
inc
and
stc
decl
pop
sub
mov
jo
xchg
add
xchg
push
push
scas
adc
lret
stos
movsb
mov
and
or
xor
xchg
gs
jno
push
das
dec
mov
push
dec
or
mov
or
ds
shlb
popf
sbb
or
push
adc
xor
cmp
pop
sti
cmp
leave
aam
mov
leave
imul
in
dec
pop
movntq
out
mov
mov
inc
cltd
cli
or
cmp
nop
push
or
pop
push
sub
gs
subb
jg
iret
rolb
and
enter
or
mov
orb
dec
fsubr
cld
inc
push
jp
fdivl
dec
sub
sbb
aaa
jbe
mov
icebp
leave
rcr
jg
push
ja
cmp
sub
mov
mov
xor
cltd
mov
orb
jl
nop
popf
movsb
add
fdivs
inc
scas
adc
dec
pop
adc
dec
aam
mov
movsb
add
popa
cli
movsl
xchg
pop
nop
mov
xor
push
out
xor
inc
cmp
in
and
or
in
daa
jmp
inc
xor
or
ss
shlb
les
int3
sbb
pop
dec
xor
inc
pop
int3
test
stc
shlb
sub
roll
imul
and
inc
mov
mov
mov
cmp
mov
pop
mov
daa
inc
sti
inc
lods
push
mov
xor
xchg
mov
out
into
lahf
xchg
sub
jo
andb
and
dec
jnp
xchg
dec
in
push
push
stos
xchg
inc
push
adc
and
rolb
inc
adc
jo
movsl
loop
inc
add
and
inc
add
mov
sbbb
sub
adc
add
nop
in
adc
xor
dec
cwtl
movsl
sbb
in
push
mov
daa
cwtl
add
sahf
cmp
jbe
addb
cs
ret
mov
or
sbb
sbb
sub
addl
subl
and
or
xor
popa
or
imul
pop
mov
cmp
or
jno
test
sub
into
inc
or
jnp
xchg
push
add
out
or
jno
ret
sahf
cmp
js
lcall
sbb
sub
pop
mov
xor
jno
icebp
jbe
out
dec
rclb
and
and
push
add
dec
cwtl
or
sbb
or
or
mov
adc
add
cwtd
shrl
pop
pop
icebp
enter
inc
mov
icebp
into
js
movsl
inc
jnp
xchg
cmp
shrb
sti
jmp
ljmp
ds
leave
leave
push
sub
popf
leave
loopne
in
sti
push
push
sbbl
xchg
nop
push
pushf
mov
cmp
ss
jo
repz
mov
cmp
sbb
stos
mov
mov
cltd
xor
sub
xchg
rcr
fs
test
jno
mov
aad
rolb
mov
fadds
pusha
scas
es
sub
fisubl
in
inc
and
aaa
pop
jno
addr16
adc
and
add
inc
mov
jns
mov
rcrl
add
js
or
mov
repz
into
cs
xor
test
inc
movsb
test
mov
arpl
int
inc
pop
or
or
sub
mov
push
mov
push
ret
and
cmp
dec
pop
stc
sbb
adc
arpl
test
inc
xchg
int
and
xor
shrl
mov
rcll
mov
sub
jns
cmp
push
repz
sbb
shl
or
rcl
dec
add
xor
not
sbb
ror
mov
neg
or
rol
sbb
sbb
test
inc
rcl
rcl
shl
call
jg
jmp
inc
mov
dec
mov
in
in
insl
xchg
mov
mov
enter
dec
nop
fsubr
in
das
pop
mov
lods
inc
jl
sub
ret
pop
mov
inc
and
ret
cmp
scas
in
in
push
out
loopne
xor
int3
in
in
ret
cmp
in
push
push
xor
scas
lods
ret
cmp
in
cmpb
xchg
xchg
mov
xor
sbb
in
sbb
pop
scas
repnz
ret
cmp
in
in
lods
divl
movsl
adc
ret
cmp
jecxz
addr16
in
in
cmp
adc
scas
lods
inc
jecxz
aas
outsb
in
in
dec
insl
sahf
in
in
xor
pop
fcoml
scas
lods
inc
mov
pop
ret
cmp
in
into
dec
and
mov
mov
pop
ret
cmp
in
in
push
addr16
mov
inc
cmp
dec
sbb
in
in
fisubrs
stc
mov
cmp
in
in
fnstenv
stos
cmp
in
in
pushf
ss
pushf
cltd
adc
scas
lods
ret
cmp
in
leave
xchg
or
add
lods
inc
ret
cmp
in
in
stos
fidivl
sbb
mov
es
cmp
in
push
dec
bound
mov
dec
cmp
sub
fnstcw
mov
arpl
pop
lods
in
in
jl
pop
jp
nop
cmp
in
in
sbb
sub
mov
fsubrl
cmp
mov
in
in
ror
lea
cmp
movsb
ljmp
inc
aas
dec
dec
je
in
in
mov
lret
adc
scas
lods
inc
inc
insl
dec
popa
pop
in
in
adc
mov
sub
cmp
in
in
jae
mov
mov
inc
insl
xchg
sub
cmp
dec
in
in
in
mov
add
mov
ret
pop
fnstsw
in
in
add
adc
cmp
xchg
sbb
in
in
mov
out
in
in
dec
pushf
into
in
in
loope
mov
data16
mov
adc
sbb
in
popa
or
xchg
cmp
in
or
jl
jmp
in
in
ret
cmp
in
lds
fs
jl
pop
pop
in
in
ret
cmp
in
in
dec
mov
cmp
cmp
xchg
pop
mov
cmp
inc
pop
push
jg
in
gs
pop
inc
xor
out
ret
cmp
in
in
mov
push
jl
stc
ds
in
ret
cmp
ret
dec
push
fsubr
in
clc
mov
push
shll
inc
bound
pop
adc
iret
in
in
cli
pop
add
es
aas
cmp
insl
insl
insl
data16
lods
cmpsb
pop
push
pop
in
in
add
lret
int3
ret
cmp
in
pop
xor
popf
adc
scas
lods
cmp
pop
mov
in
in
je
pop
push
mov
cmp
inc
pop
lods
paddsb
and
jl
xchg
mov
xor
pop
ret
pop
mov
in
in
lret
pop
cltd
adc
scas
lods
ret
cmp
in
in
mov
data16
scas
lods
inc
xchg
in
in
in
in
dec
cmpl
pop
outsb
adc
scas
lods
ret
cmp
dec
outsl
in
in
pop
sub
xor
scas
lods
cmp
mov
imul
dec
adc
scas
lods
adc
sbb
mov
adc
push
in
jl
repz
in
ret
cmp
in
lods
inc
push
insl
fcmovnb
cmp
ret
pop
jno
in
in
cmp
and
aam
insl
add
cmp
insl
insl
pop
push
in
in
xor
out
jno
mov
jl
jnp
in
in
dec
sarb
in
in
lret
movsb
inc
cmp
pop
mov
in
insb
ret
test
cmp
in
stc
or
pop
clc
lods
in
in
pop
pop
mov
cmp
in
in
cmp
ret
dec
push
in
in
rolb
inc
adc
sbb
pop
outsl
in
in
cmp
ret
cmp
in
and
or
push
adc
scas
lods
loopne
add
insl
xor
mov
adc
scas
lods
inc
push
ret
cmp
in
in
ret
lods
mov
adc
scas
lods
cmp
inc
pop
in
in
and
mov
pop
insl
insl
insl
insl
pop
jmp
in
in
call
cmp
rol
cmp
dec
leave
mov
mov
mov
cmp
in
in
cld
in
adc
scas
lods
sub
dec
inc
out
in
in
gs
vunpcklps
mov
cmp
in
in
cwtl
push
dec
or
scas
lods
inc
push
nop
in
ret
cmp
in
in
dec
cld
or
lods
cmp
push
out
in
in
aad
push
inc
dec
jo
in
in
ret
dec
scas
sub
pushl
xorl
mov
fwait
ret
cmp
in
push
mov
sub
scas
lods
inc
ret
cmp
in
in
pop
inc
dec
adc
scas
lods
cmp
in
gs
cmp
in
in
ret
cmp
in
aas
xchg
jp
adc
scas
lods
ret
cmp
xlat
pop
in
in
fistps
cmp
imul
in
xorb
inc
ret
cmp
out
in
in
pop
test
push
adc
scas
lods
inc
mov
insb
ret
cmp
in
push
push
fists
bound
scas
lods
inc
ret
cmp
in
in
lahf
clc
or
mov
pop
xchg
into
in
in
push
cmp
xor
ret
dec
pop
fsubr
in
mov
ret
fs
scas
lods
inc
ret
cmp
in
mov
fidivs
cmp
ret
pop
repnz
in
in
mov
and
or
jbe
in
in
inc
test
pop
xor
pop
dec
fucomip
in
ret
dec
inc
int3
in
in
out
jb
fnstsw
jae
dec
dec
pop
in
in
sbb
movsb
push
pushf
mov
ret
cmp
in
cmp
adc
scas
lods
cmp
ret
cmp
in
insb
sbb
mov
dec
and
lods
xor
ret
cmp
in
in
in
jp
adc
scas
lods
mov
lods
dec
test
add
push
lret
mov
outsb
ret
pop
mov
insl
insl
jnp
movsl
push
inc
mov
inc
iret
fadd
pop
jns
in
in
dec
mov
push
jno
pop
push
inc
cmp
enter
sbb
in
in
rorl
xlat
outsl
lds
fwait
xor
int3
in
in
adc
sub
lods
repz
mov
insb
ret
cmp
jg
in
push
sbb
sti
xchg
inc
xor
int3
ret
cmp
in
xor
dec
pop
cld
in
in
sbb
fadd
cmp
in
in
sbb
ret
cmp
or
in
and
ret
cmp
ret
pop
dec
stos
fsubrp
in
pop
aas
divl
dec
shrl
in
in
ret
cmp
insl
and
adc
scas
lods
ret
cmp
dec
pop
mov
in
fildl
inc
add
pop
aad
in
in
ret
repz
mov
insl
fisttpl
out
in
in
lret
mov
ret
cmp
insl
and
jp
mov
inc
dec
cmp
jo
fdivrs
mov
dec
jecxz
in
in
lahf
jns
mov
or
mov
xor
sub
dec
pop
in
in
stos
nop
cmp
sub
lods
ret
cmp
dec
fsubrp
in
bound
jb
int3
inc
cmp
pop
dec
in
in
mov
call
scas
lods
inc
ret
cmp
in
in
mov
cmp
pop
xor
xlat
int3
in
in
dec
pop
outsb
or
dec
pop
sbb
in
test
and
cmp
sub
mov
push
rcrl
es
ret
cmp
ret
dec
sbb
in
in
add
inc
xor
int3
ret
cmp
in
push
sub
push
lods
adc
scas
lods
ret
cmp
insl
jg
sub
dec
int3
ret
cmp
in
in
out
dec
mov
adc
scas
lods
inc
adc
out
in
in
ret
cmp
in
in
rclb
nop
popf
ret
cmp
fsubr
in
enter
cmp
mov
les
test
outsl
add
sub
cmp
fucomip
in
pop
ud2
cmp
mov
in
in
xchg
inc
inc
adc
scas
lods
cmp
dec
int
in
in
fstpt
cmp
dec
push
hlt
xor
mov
inc
adcb
dec
outsl
in
in
and
add
mov
mov
sub
adc
sbb
mov
insb
ret
cmp
in
addr16
fld
cmp
pop
lahf
dec
in
in
ret
pop
testb
sub
mov
insb
pop
bound
in
in
sub
nop
mov
inc
insl
xchg
sub
dec
dec
sbb
fwait
ret
lea
inc
in
in
in
ret
dec
stos
jl
in
inc
fsubl
adc
scas
lods
ret
dec
lods
sub
shll
inc
push
add
pop
clc
jg
in
xor
adc
scas
lods
cmp
ret
pop
and
insl
insb
mov
inc
jl
or
insl
ret
cmp
in
jbe
push
cld
iret
decb
insb
in
ret
cmp
in
pusha
lods
inc
mov
sub
cmp
in
in
push
into
je
fadd
cmp
dec
inc
dec
in
in
fisubrl
cmp
in
in
cltd
fwait
shl
shlb
in
sbb
lea
xchg
inc
mov
in
ret
dec
xor
push
insl
xorl
cmp
inc
dec
pop
pop
in
in
add
adc
clc
adc
scas
lods
xor
insb
ret
cmp
in
in
dec
or
in
in
push
sahf
loop
inc
mov
sub
in
ret
cmp
in
dec
std
adcb
fadd
cmp
ret
dec
imul
mov
scas
lods
inc
pop
mov
ret
cmp
insl
insl
mov
cmp
adc
scas
lods
cmp
pop
cmc
jl
in
fdivl
loop
cmp
in
in
sbb
ret
cmp
in
in
repz
xor
adc
scas
lods
ret
cmp
sbb
in
test
mov
adc
scas
lods
inc
jecxz
or
in
add
loope
in
adc
sbb
in
in
data16
adc
scas
lods
inc
enter
dec
and
insl
insl
adc
mov
lods
mov
ret
dec
cmp
rclb
fadd
cmp
mov
add
cmp
in
in
pop
outsl
lea
xchg
dec
jns
sub
cmp
ret
cmp
in
lds
mov
dec
into
sbb
loopne
xor
mov
mov
ret
dec
push
pop
insl
insl
push
mov
mov
lcall
fcmovb
pop
dec
fsubr
in
cmc
dec
push
mov
scas
lods
cmp
ret
cmp
in
lods
mov
mov
or
insl
insl
xorb
jl
mov
ret
cmp
in
in
in
dec
pop
mov
mov
add
cmp
pop
mov
adc
scas
lods
ret
cmp
gs
scas
lods
cmp
in
imulb
cmp
inc
pop
es
in
push
call
lret
inc
xchg
ret
pop
insb
sbb
in
arpl
cmp
in
xchg
ret
cmp
dec
sbb
insl
insl
sbb
mov
pop
mov
dec
outsb
scas
in
in
ret
cmp
in
in
pop
aas
in
in
jmp
bound
adc
scas
lods
inc
mov
sub
out
insl
insl
fcoms
rcrl
mov
in
ret
cmp
in
xchg
stc
out
cvtdq2ps
mov
insb
ret
cmp
pop
popa
sub
leave
in
adcl
xor
in
insl
insl
aad
or
cmp
insl
mov
mov
nop
pop
ret
cmp
insl
insl
ret
div
mov
in
in
ret
cmp
pop
cmp
mov
fwait
cmp
ret
cmp
insl
insl
out
sbb
pop
ret
cmp
ret
pop
push
jge
insl
jg
leave
cmp
ret
cmp
ret
dec
xchg
in
in
or
cmp
sub
cmp
pop
in
in
in
fsts
adc
scas
lods
cmp
fadd
dec
add
sub
ret
cmp
insl
insl
ret
cmp
in
push
mov
or
sbb
mov
in
in
in
xchg
out
cmp
insl
insl
dec
nop
pop
in
in
jg
pop
shll
adc
scas
lods
inc
aam
das
in
in
fadd
cmp
in
in
lahf
push
aad
loope
mov
xchg
insl
insl
insl
int
scas
fwait
dec
push
gs
cltd
lahf
in
in
ret
cmp
in
in
pop
push
das
cmp
cmp
in
in
push
aam
adc
scas
lods
ret
cmp
std
iret
in
in
mov
and
mov
dec
or
adc
mov
inc
cmp
insb
ret
cmp
insl
icebp
fs
sbb
lods
xor
xchg
in
in
int
fistl
inc
pop
test
in
in
popa
scas
pop
push
arpl
fidivrs
mov
pop
mov
mov
popf
ret
cmp
insl
insl
subps
jge
xchg
cmp
in
in
ja
fisttpll
jecxz
cmp
in
cltd
mov
mov
inc
mov
sub
dec
repnz
in
in
adc
stos
sti
adc
scas
lods
adc
sbb
nop
cmpsb
js
and
mov
adc
insl
insl
jmp
inc
dec
sub
in
ret
pop
jnp
in
in
xlat
sbb
inc
bound
mov
cmp
in
in
dec
ret
dec
in
in
sbb
testl
inc
rol
cmp
in
mov
mov
mov
cmp
inc
mov
insl
cld
loopne
jl
icebp
dec
jl
jb
in
in
ret
dec
xor
in
jo
je
and
adc
cmp
dec
test
in
in
mov
test
scas
lods
cmp
cmp
insl
xor
inc
pop
pop
lahf
in
in
ret
dec
mov
insl
insl
sbb
mov
xorl
in
in
ret
dec
loopne
in
in
cs
dec
xchg
pop
or
in
ret
dec
mov
jnp
inc
in
ret
cmp
in
jnp
aad
cmp
insb
dec
or
js
adc
scas
lods
ret
cmp
in
lods
in
in
inc
xor
fadd
cmp
mov
leave
mov
ret
cmp
jl
push
mov
pop
in
in
cwtl
les
inc
pop
icebp
out
in
in
cmp
cli
ds
scas
lods
ret
cmp
in
in
mov
mov
mov
insl
insl
scas
loopne
loopne
mov
mov
in
in
push
shl
ret
cmp
insl
insl
pop
mov
lods
cmp
pop
sub
insl
inc
pop
push
jecxz
out
pop
movsb
ret
cmp
in
in
mov
adc
cmp
insl
xlat
pop
adcl
test
jne
in
in
dec
ret
cmp
in
jnp
dec
pop
cmpsl
push
ffreep
cmp
insl
cld
adc
cmp
insl
insl
ret
cmp
in
pop
push
cmpsl
push
out
jb
mov
inc
in
out
in
in
ret
pop
jne
in
in
jbe
loop
pushf
sbb
mov
inc
rol
dec
loopne
insl
insl
inc
test
pushf
lahf
lock
scas
lods
cmp
insb
ret
dec
mov
push
lods
loopne
aas
pushf
in
in
ret
cmp
insl
xchg
pop
pop
sub
inc
push
cwtl
push
cmp
ret
dec
jbe
in
in
outsb
and
mov
ret
cmp
insl
fneni(8087
pop
fldl
mov
mov
cld
in
in
or
pop
inc
dec
cmp
dec
inc
pop
in
in
mov
fcmovb
cmp
in
in
adc
dec
mov
and
xor
insb
ret
pop
daa
dec
in
in
test
mov
adc
scas
lods
ret
cmp
insl
sbb
inc
inc
push
xor
ret
cmp
in
push
jo
push
movsl
ret
cmp
loope
pop
adc
fsubr
in
repz
in
in
ret
dec
or
in
in
iret
sbb
cmp
jl
push
mov
in
ret
pop
mov
in
in
outsl
fstpl
inc
jecxz
cmp
dec
fcmovnb
mov
pop
mov
ret
cmp
in
loope
dec
ljmp
in
ret
pop
in
aas
in
in
push
mov
ret
cmp
dec
jae
insl
insl
fisttps
mov
mov
ds
in
in
scas
bound
call
scas
lods
cmp
ret
pop
sub
sbb
leave
mov
fsubr
in
ret
cmp
dec
je
insl
insl
out
jb
push
cmovne
mov
out
ret
pop
mov
in
in
xchg
frstor
cmp
ret
cmp
in
in
out
jmp
rcll
mov
sub
cmp
insl
insl
ljmp
nop
sbb
mov
insl
insl
scas
pop
in
cmp
scas
lods
cmp
insl
popa
push
sarl
inc
bound
xor
pop
insb
pop
in
in
cmp
cmp
in
in
ret
cmp
in
cs
xchg
inc
adc
scas
lods
inc
dec
and
in
in
dec
test
insl
insl
jge
pop
rclb
dec
idiv
in
in
jmp
imul
scas
ret
cmp
adc
mov
bound
paddsb
je
frstor
in
in
in
je
sbb
out
in
in
stos
xor
mov
addr16
scas
lods
cmp
das
ret
dec
fsubr
in
rcrb
adc
scas
lods
call
in
in
dec
dec
outsl
in
in
out
stc
xchg
fdivrl
mov
push
ret
cmp
in
cltd
mov
scas
lods
ret
cmp
fsubr
in
aam
and
scas
lods
ret
cmp
dec
pop
mov
call
ret
cmp
dec
jns
in
in
imul
adc
scas
lods
push
pop
sub
insl
insl
xchg
mov
adc
pushf
or
in
sbb
fidivl
xor
iret
in
in
in
mov
ret
cmp
sbb
adc
scas
lods
ret
cmp
in
xchg
inc
mov
cmp
insl
insl
insb
dec
add
adc
scas
lods
jecxz
cmp
insl
ficomps
stos
loop
xlat
inc
cmp
and
sub
in
movsl
hlt
in
scas
cmp
pop
cmp
mov
ret
cmp
inc
pop
es
fmul
inc
mov
mov
in
inc
fiaddl
mov
ret
dec
out
in
in
and
out
out
daa
inc
ret
cmp
pop
add
in
in
sbbb
outsl
mov
cmp
insl
insl
adcb
pusha
ret
cmp
insl
insl
arpl
xchg
xchg
clc
adc
scas
lods
insl
xor
fsubr
in
pop
jno
in
in
lock
imul
pop
iret
push
insl
xchg
adc
adc
scas
lods
xor
popf
ret
pop
mov
in
in
test
xchg
fwait
pop
fstl
scas
lods
ret
cmp
in
in
add
aam
js
mov
in
in
in
movsb
or
in
in
ret
cmp
insl
enter
xchg
adc
scas
lods
ret
cmp
insl
pop
jle
push
ret
cmp
in
in
dec
ljmp
cmp
and
dec
pop
in
in
mul
out
insb
dec
fwait
cmp
mov
les
insl
xor
cmp
in
in
shl
cmovg
mov
mov
inc
xor
dec
add
inc
int
adc
scas
lods
cmp
ret
cmp
insl
pop
adcl
cmp
pop
cmp
in
lahf
sahf
jne
inc
adc
scas
lods
mov
mov
cmp
ficompl
pop
insl
insl
add
mov
ret
dec
pop
or
in
sbb
inc
ret
dec
xchg
dec
rorl
mov
insl
int
insl
push
xor
and
dec
cmp
cmp
in
in
popf
xchg
xchg
ret
cmp
loope
dec
push
dec
jle
ret
cmp
ret
cmp
in
data16
sbb
add
mov
adc
pop
insl
insl
pop
add
push
cmp
xor
insl
test
dec
cmp
cmp
in
xchg
adc
arpl
adc
scas
lods
inc
mov
in
in
ret
cmp
insl
dec
cmp
adc
mov
sarb
pop
or
lea
pop
xor
cmp
in
in
add
pusha
pop
scas
insl
xchg
fucom
pop
cmp
cmp
in
pop
out
ret
cmp
ret
cmp
insl
jmp
imul
in
in
ret
cmp
insl
xor
lahf
pop
pop
lods
in
in
in
ret
cmp
dec
adc
add
pusha
aaa
cwtl
jl
mov
push
insl
mov
sub
movsb
mov
push
or
mov
std
inc
jl
test
insl
insl
ret
pop
popa
sub
faddl
inc
mov
insb
ret
cmp
pop
push
lods
in
in
cmpsb
jno
neg
pop
adc
scas
lods
rol
cmp
dec
repnz
in
push
lss
cmp
dec
in
in
jecxz
jge
dec
adc
inc
dec
add
mov
dec
cmp
cmp
adc
ret
cmp
insl
insl
jns
sub
mov
inc
pop
jae
insl
insl
std
mov
ret
cmp
ret
dec
lea
insl
mov
sub
ret
cmp
fsubr
in
mov
loopne
inc
ret
cmp
insl
insl
jmp
adc
mov
fcmovnb
dec
cld
mov
cmp
push
leave
jmp
mov
ret
pop
xchg
cld
in
in
lahf
dec
jp
aas
cmpsl
int3
adc
scas
lods
ret
cmp
ret
pop
test
inc
lea
inc
jecxz
xchg
sbb
insl
test
outsl
int
inc
dec
cmp
nop
dec
in
in
push
in
adc
cmp
dec
in
in
and
xchg
dec
stc
sbb
ret
cmp
insl
push
add
adc
scas
lods
cmp
cmp
in
insl
and
lock
cmp
insl
insl
fsub
pop
adc
scas
lods
cmp
in
in
pop
mov
mov
dec
loopne
insl
insl
cwtl
add
pop
ret
cmp
in
in
stc
mov
inc
dec
int3
sbb
test
movsl
push
add
pop
mov
mov
bnd
insl
mov
adc
aas
or
pusha
insb
in
in
cmp
cmp
mov
pushf
fsubr
in
push
xor
jno
mov
lods
ret
cmp
insl
insl
sub
fidivs
xor
sbb
in
andl
cmp
inc
mov
pop
dec
xchg
out
in
in
je
xor
scas
lods
inc
pop
gs
in
into
xor
push
repz
scas
lods
xlat
pop
jle
in
in
sub
mov
cmp
ret
cmp
insl
cs
adc
scas
lods
ret
dec
cltd
sbb
adc
adc
scas
lods
adc
pop
ret
cmp
in
in
rol
inc
outsb
mov
inc
mov
insb
ret
dec
fldt
std
jnp
cmp
insl
popa
ret
pop
add
scas
lods
cmp
inc
pop
sbb
insl
mov
inc
jecxz
xchg
sbb
mov
sub
aas
pop
inc
dec
cmp
cmp
mov
push
dec
inc
cmp
cmp
insl
insl
and
out
ret
cmp
insl
insl
dec
cmp
cmp
iret
in
in
sub
xchg
cmp
push
int3
ret
cmp
in
pop
je
into
xor
ret
cmp
in
test
sti
dec
movsl
adc
scas
lods
cmp
insl
insl
pushf
push
ret
cmp
in
in
hlt
enter
push
mov
mov
pusha
int
insl
fildl
sbb
pushf
in
in
ret
cmp
ret
dec
sub
insl
insl
std
aas
xchg
inc
std
mov
scas
lods
inc
dec
sub
fstl
cmp
dec
jmp
insl
insl
ljmp
mov
mov
dec
pop
pop
insl
insl
mov
out
mov
mov
inc
loopne
jae
in
in
in
mov
cmp
inc
adc
adc
inc
sbb
xchg
ret
cmp
insl
insl
inc
jmp
or
inc
dec
cmp
insl
insl
das
rcrl
push
stos
ret
cmp
in
in
mov
sbb
insl
insl
ret
cmp
lods
insl
insl
xchg
inc
jae
mov
loope
in
in
ret
cmp
dec
dec
cmp
in
sub
adc
scas
lods
jecxz
cmp
push
insl
insl
push
add
cmp
insb
in
in
ja
sarb
scas
fisubl
cmp
dec
push
sub
mov
cmp
lods
insl
xchg
fwait
insl
xchg
pop
dec
jno
in
in
pusha
dec
xchg
inc
sub
in
in
ret
cmp
in
in
pop
inc
adc
icebp
pop
adc
scas
lods
cmp
insl
insl
xor
cs
bound
add
xchg
jecxz
mov
dec
dec
in
in
xor
dec
mov
mov
dec
xor
adcl
mov
adc
in
in
in
ret
sub
aas
cmp
inc
mov
in
aas
pop
inc
lods
insl
insl
push
push
pop
lods
fimull
xchg
pop
sbb
ret
cmp
pop
les
in
andl
pop
jle
insl
insl
bound
add
lret
inc
sub
dec
insl
insl
adc
pop
dec
test
test
ret
cmp
insl
insl
xchg
mov
adc
scas
lods
inc
rol
dec
pop
sbb
inc
sbb
xchg
cmp
cmp
insl
insl
sub
outsl
adc
scas
lods
cmp
insl
jmp
sub
inc
push
ret
cmp
insl
xchg
and
mov
adc
popf
ret
pop
ror
in
push
push
roll
insl
mov
mov
bound
mov
mov
in
in
and
inc
adcb
pop
xor
insl
insl
iret
jae
mov
lods
in
nop
sbb
jl
mov
insl
insl
ret
dec
lods
sbb
cli
rcrl
and
scas
lods
ret
cmp
insl
sub
scas
lods
cmp
insl
insl
dec
arpl
aas
out
outsl
cmp
mov
ret
cmp
in
sub
push
jne
mov
mov
dec
int
in
in
adc
ret
cmp
insl
ret
daa
aad
repz
ret
cmp
insl
insl
aaa
insl
mov
mov
cmp
ret
pop
and
notl
scas
lods
ret
cmp
dec
push
pushf
in
in
pop
daa
cmpb
insl
ret
pop
mov
in
in
sbb
mov
adc
scas
lods
ret
cmp
insl
xchg
push
jle
in
jl
jns
insl
insl
ret
cmp
insl
insl
xchg
pop
inc
mov
sbb
pop
pop
lea
pop
jns
insl
insl
pop
xor
ficoms
scas
lods
ret
cmp
das
insl
insl
insl
jge
push
in
in
loopne
in
ret
cmp
fadd
pop
mov
insl
add
insl
xchg
sbb
lea
ret
cmp
int3
in
in
popf
and
in
pushf
ret
cmp
insl
insl
xchg
add
inc
mov
insb
dec
jae
insl
insl
cmp
pushf
cmpsb
insl
xchg
lcall
insl
insl
adc
or
scas
lods
ret
cmp
cmp
jo
inc
push
xor
cmp
dec
stos
mov
in
mov
bound
scas
lods
cmp
cmp
insl
dec
cmc
cltd
dec
and
cmp
ret
cmp
insl
lock
lds
cmp
in
in
mov
scas
lods
inc
in
loopne
in
dec
add
insl
insl
inc
inc
mov
mov
ret
pop
dec
sbb
push
cmp
in
in
out
dec
je
in
in
ret
dec
mov
movsl
in
imul
mov
jecxz
inc
sub
cmp
mov
ds
insl
insl
ret
pop
push
insb
in
in
clc
sbb
repz
push
ljmp
mov
pushf
pop
in
in
in
ret
cmp
insl
outsb
sub
mov
dec
scas
int
insl
dec
shrl
in
cli
enter
add
cmpsb
ret
cmp
insl
insl
addb
scas
lods
ret
cmp
insl
adc
push
fidivrl
mov
jecxz
xchg
sbb
insl
dec
pusha
dec
insl
insl
xor
ret
cmp
insl
insl
dec
mov
jl
mov
insl
insl
mov
insb
ret
dec
jb
insl
insl
nop
ret
pop
adc
scas
lods
cmp
insl
insl
ret
dec
jle
in
in
mov
dec
out
rcll
cmp
insl
adc
int
mov
int3
cmp
pop
in
in
mov
sub
sbb
repz
cmp
insl
insl
lahf
dec
mov
dec
xor
insl
insl
enter
xor
ret
cmp
mov
or
or
shl
movsl
cmp
pop
ret
cmp
jecxz
lods
or
shlb
pop
and
insl
ret
cmp
in
in
cmp
lret
lret
jbe
mov
pop
ret
cmp
insl
mov
repnz
insb
push
mov
outsl
ret
cmp
insl
mov
inc
adc
movsl
insl
insl
insl
ret
cmp
in
in
lock
xchg
xor
xlat
adc
scas
lods
cmp
sub
in
add
insl
ret
dec
push
lods
insl
insl
push
je
dec
adc
scas
lods
cmp
in
in
jp
fmuls
scas
lods
cmp
and
cmp
dec
into
in
insl
insl
orb
mov
sub
pop
fisubrs
add
data16
scas
lods
ret
cmp
xor
sub
cmp
daa
adc
scas
lods
inc
dec
mov
insl
insl
pop
aaa
inc
and
inc
ret
cmp
and
jecxz
insl
insl
dec
cmp
in
in
xchg
mulb
scas
ret
cmp
in
sbb
jl
in
in
in
ret
cmp
xchg
pushf
in
in
in
roll
scas
lods
cmp
insl
mov
mov
outsb
ret
cmp
insl
mov
into
xchg
sarb
mov
aas
dec
ret
cmp
insl
insl
mov
adc
scas
lods
inc
insl
xchg
out
ret
pop
stos
int3
in
in
pop
sub
mov
mov
dec
imul
and
cmp
insl
insl
sub
mov
mov
sbb
in
mov
xchg
adc
cmp
and
cmp
insl
insl
lea
xchg
loope
pop
jbe
insl
insl
ret
cmp
insl
push
mov
dec
sbb
mov
adc
scas
lods
cmp
insl
insl
cmp
inc
ret
cmp
in
je
push
into
repnz
inc
insl
ret
cmp
loope
pop
mov
sub
cmp
mov
insl
insl
ret
cmp
insl
es
mov
adc
scas
lods
inc
pop
and
inc
adc
scas
lods
mov
xor
mov
fistl
scas
lods
ret
cmp
outsb
ret
pop
add
insl
insl
lret
lods
mov
xor
pop
sub
insl
insl
ret
cmp
insl
hlt
inc
dec
xor
scas
lods
es
and
mov
ret
cmp
insl
insl
insl
ret
cmp
insl
cmp
mov
ret
cmp
pop
dec
mov
sar
ret
cmp
insl
push
push
ret
cmp
ret
cmp
in
cmpsl
cs
xchg
sbb
scas
lods
insl
xchg
insb
ret
pop
xor
in
in
aam
lods
xorl
insl
ret
cmp
or
iret
inc
cltd
arpl
mov
outsl
ret
cmp
in
in
test
addr16
mov
sub
cmp
insl
insl
pop
daa
dec
add
dec
sbb
insl
insl
jge
push
call
scas
lods
cmp
insl
insl
xchg
adc
scas
lods
ret
pop
xchg
in
in
pop
andl
mov
xor
dec
insl
insl
dec
push
mov
adc
scas
lods
inc
dec
idivl
insl
js
ds
scas
lods
adc
jge
push
jl
xor
dec
or
arpl
scas
lods
ret
cmp
dec
icebp
in
insl
insl
mov
out
inc
adc
scas
lods
inc
dec
ror
in
fcmovnbe
sub
scas
lods
inc
sbb
stos
lcall
jae
adc
scas
lods
cmp
cmp
in
mov
mov
loopne
xor
cmp
insl
insl
or
pop
cmpl
inc
dec
rcrl
insb
cmpsb
jne
cmpsl
inc
mov
insl
insl
ret
dec
out
insl
insl
push
add
mov
pop
mov
insl
insl
push
mov
xchg
mov
dec
push
dec
insl
insl
std
inc
pop
addr16
scas
lods
ret
dec
loop
insl
insl
sbb
or
clc
mov
cmp
pop
mov
mov
adc
scas
lods
inc
ret
cmp
in
test
xchg
imul
pop
mov
and
call
mov
sub
sub
push
sub
or
aas
cmp
insl
insl
lahf
sbb
xor
inc
adc
popf
ret
cmp
in
std
test
cmp
insb
ret
cmp
insl
jmp
add
mov
cmpsl
mov
mov
inc
pop
jnp
insl
insl
adc
mov
lcall
insl
insl
ret
dec
pop
cmp
fcmovb
cmp
insl
insl
mov
xchg
lcall
ret
dec
arpl
push
xor
ret
cmp
dec
insl
insl
ret
mov
ret
ret
cmp
pop
sub
in
in
and
mov
xorb
jl
neg
insl
insl
dec
lods
dec
insl
insl
jns
sub
jmp
popf
insl
xchg
sbb
jnp
insl
ret
dec
jge
insl
insl
and
mov
cmp
ret
cmp
insl
xchg
pop
inc
jl
rolb
cmp
cmp
insl
insl
loope
les
enter
cmp
insl
insl
call
or
cmp
dec
adc
stos
inc
insl
stos
ret
cmp
ret
dec
sbb
outsb
icebp
inc
pop
stc
lea
ret
cmp
insl
insl
lret
xor
lret
data16
cmp
inc
dec
ret
in
dec
dec
ds
repnz
mov
dec
arpl
push
mov
scas
lods
cmp
insl
insl
das
dec
or
lods
dec
cmp
pop
pop
or
adc
sti
inc
rcrb
jnp
insl
push
mov
nop
fimull
lea
sub
ret
cmp
insl
insl
ret
dec
pop
sub
outsl
cmp
adc
in
jl
xchg
fsubr
in
ret
cmp
insl
adc
ds
push
adc
scas
lods
xor
ret
cmp
insl
test
pop
xchg
dec
xlat
adc
scas
lods
cmp
pop
insl
insl
ret
dec
repz
insl
insl
add
insl
fcmovnb
dec
orb
insl
jmp
mov
mov
sub
pop
insl
insl
insl
test
mov
inc
pop
into
mov
add
mov
inc
ret
cmp
insl
insl
xchg
icebp
jns
adc
scas
lods
cmp
xchg
push
insl
mov
mov
adc
scas
lods
mov
cmp
dec
int3
dec
insl
insl
pop
push
pop
lds
adc
scas
lods
cmp
fisubrl
sahf
mov
mov
xor
insl
ret
lret
sbb
lds
ret
dec
insl
lcall
ret
cmp
mov
mov
add
sub
ret
dec
sub
insl
shlb
outsb
adc
scas
lods
insl
xchg
ficompl
sbb
dec
xchg
sbb
mov
cmp
insl
insl
fisubrs
adc
scas
lods
cmp
in
jbe
mov
dec
push
fisubrl
icebp
movsl
cmp
test
cmp
insl
insl
push
lock
aaa
ror
ret
cmp
dec
push
mov
add
unpcklps
inc
ret
dec
mov
sahf
xor
notb
insl
insl
ret
cmp
fadd
dec
movsb
cmp
mov
nop
sbb
cmp
dec
cmp
lret
pushf
adc
scas
lods
ret
dec
imul
shlb
sbb
ret
cmp
inc
dec
jb
insl
insl
sub
inc
xchg
jecxz
js
bound
sbb
jmp
nop
pop
in
and
in
dec
ret
insl
and
aas
inc
jecxz
popf
int3
in
in
pop
loop
mov
mov
ret
cmp
insl
lods
daa
sbb
mov
dec
sub
adc
mov
sbb
fnstcw
cmp
cmp
insl
insl
insl
movsl
add
scas
lods
inc
mov
pop
ret
pop
addr16
xor
pushf
xor
orl
insl
insl
push
mov
loop
xchg
insb
pop
mov
in
in
ret
cmp
insl
insl
cmp
enter
inc
jae
mov
cmp
push
std
lds
cmp
inc
dec
add
insl
out
cld
pop
dec
ret
cmp
insl
push
sub
testb
lods
in
ret
cmp
insl
insl
adc
imul
inc
bound
mov
movsb
push
insl
dec
insl
in
insl
insl
inc
push
das
sbb
cmp
testl
cmp
insl
enter
jne
adc
scas
lods
in
in
jl
mov
cmp
insl
insl
test
cmp
cmp
ret
cmp
insl
testl
pop
rorb
popa
mov
insb
ret
cmp
in
rcr
je,pn
adc
cmp
insl
insl
or
ret
cmp
or
ret
cmp
in
jl
aad
mov
mov
adc
pop
ret
dec
or
push
out
xchg
mov
ret
cmp
int
insl
cmpsb
bswap
and
xor
inc
mov
dec
sbb
and
xchg
cmpsl
ret
cmp
dec
mov
test
pop
das
jp
insl
ret
cmp
mov
insl
insl
fbstp
arpl
dec
cmp
fisubrl
fcmovnu
mov
std
xchg
pop
int
insl
insl
ret
cmp
insl
insl
xchg
jp
dec
lret
cmp
insl
insl
inc
cltd
adc
scas
lods
cmp
insl
insl
outsb
mov
mov
inc
pop
or
insl
insl
pop
lcall
in
in
in
ret
cmp
dec
insl
insl
lds
and
scas
lods
inc
lods
cmpsb
ret
dec
mov
lds
mov
mov
jae
dec
adc
insl
insl
push
fistl
mov
in
ret
cmp
insl
insl
leave
mov
popl
ret
cmp
insl
insl
pop
xor
cltd
sub
cmp
mov
mov
rol
dec
ficomps
insl
insl
dec
dec
dec
mov
ret
cmp
insl
subb
push
adc
inc
mov
loope
mov
loope
cltd
rolb
adc
scas
lods
inc
dec
xchg
dec
insl
insl
push
mov
jg
mov
inc
dec
push
int
insl
mov
dec
jp
nop
sbb
insl
insl
jp
leave
cmpsl
mov
cmp
fwait
xchg
or
pop
lea
scas
lods
ret
pop
daa
mov
sub
mov
mov
outsl
in
insl
insl
inc
jns
clc
adc
cmp
daa
std
insl
insl
jle
xor
movsl
adc
scas
lods
inc
dec
mov
lods
mov
fdivr
ret
cmp
insl
insl
sub
sti
ret
cmp
aaa
lea
adc
insl
jl
cmp
insl
add
inc
ret
cmp
pop
and
dec
cmpsb
push
insl
ret
cmp
insl
insl
arpl
and
ret
cmp
add
insl
popf
mov
adc
scas
lods
cmp
insl
insl
scas
insb
enter
cmp
pop
ret
cmp
pop
ds
insl
insl
xchg
jb
ret
cmp
inc
dec
cld
dec
insl
insl
pop
jle
fdivrl
inc
mov
ret
dec
pop
sti
insl
insl
ljmp
pop
ds
stc
cltd
ret
cmp
pop
mov
cs
mov
ret
cmp
insl
sub
ret
pop
fwait
dec
insl
insl
jp
imul
mov
sub
ret
cmp
insl
dec
movsb
mov
adc
scas
lods
ret
cmp
insl
insl
cs
pop
mov
inc
sub
dec
inc
sbb
adc
push
nop
pop
ret
cmp
insl
inc
cs
adc
scas
lods
cmp
insl
insl
pop
sbb
cmp
mov
dec
add
insl
insl
pop
imul
pop
or
insl
ret
cmp
insl
insl
ret
pop
dec
or
aas
mov
adc
scas
lods
cmp
insl
dec
lds
and
fs
xor
jmp
xor
inc
lret
jo
xor
test
or
call
popa
lea
mov
add
rol
cmp
jne
sub
iret
push
dec
mov
int3
shr
sub
test
cmp
jne
aaa
xchg
icebp
popa
cli
bound
fld
loope
mov
jmp
mov
lock
rol
neg
inc
sub
shl
jmp
inc
and
mov
jmp
ror
add
test
jmp
cmp
push
sbb
sub
sar
test
test
adc
jmp
mov
les
loope
add
adc
cmp
jne
les
cmp
or
or
rcl
cmp
jne
stos
inc
jo
mov
inc
rcr
shl
cmp
jne
push
mov
pop
lea
adc
rcl
sub
call
xchg
mov
out
rclb
mov
sbb
shl
adc
call
xchg
dec
sub
fs
rcr
or
rcl
sar
adc
call
cmp
sbb
xor
out
rorl
or
sub
call
lcall
fiadds
inc
sar
jmp
femms
fiaddl
iret
rcl
jmp
insl
or
jns
sar
ror
jmp
and
sbb
mov
or
shl
xor
mov
cmp
jne
adc
insl
push
shl
dec
sbb
shl
shr
rcl
cmp
jne
push
jns
gs
test
cmp
rcr
sar
inc
cmp
jne
jns
movl
rol
not
shl
shr
cmp
jne
shll
arpl
mov
call
xchg
push
movsb
xchg
js
push
lea
sar
ror
call
fstps
inc
pop
lea
and
cmp
jne
and
xor
pop
add
mov
stos
test
aad
ror
cmp
jne
insb
mov
hlt
sbb
shr
in
push
add
xchg
rol
ror
call
push
cmp
loop
inc
sar
sar
test
call
std
std
shlb
shl
ror
mov
and
jmp
and
fs
or
sbb
sar
jmp
xchg
push
mov
out
sbb
or
sbb
cmp
jne
pop
jl
rcl
add
shl
call
add
int3
xor
cld
mov
fs
mov
sar
and
cmp
jne
fisubrs
loop
xor
cmp
jne
sar
cs
imul
into
cmp
jne
jmp
lea
sar
shl
ror
xor
shr
jmp
inc
pop
jbe
sub
xlat
dec
or
jmp
ret
je
lret
or
xor
add
cmp
jne
iret
xchg
notb
jmp
aad
fstps
jmp
inc
movsl
movsb
les
shr
sbb
add
and
or
rol
testb
movl
clc
jle
dec
loop
test
add
add
movsl
jae
pusha
lea
sar
shl
add
rcr
call
mov
aad
jge
fs
ror
test
not
cmp
jne
mov
aas
sbb
add
ror
jmp
cmp
and
rcr
or
add
sub
sbb
cmp
jne
add
cmp
pop
rol
rcr
rcl
shl
rol
cmp
jne
daa
mov
fs
mov
adc
shl
cmp
jne
adc
and
aaa
lea
xor
cmp
jne
not
ret
cmp
and
adc
mov
mov
and
call
push
lret
decl
enter
ret
sbb
add
rcr
rcl
or
neg
cmp
jne
dec
mov
lea
ror
call
fwait
push
adc
inc
fimull
stc
adc
lret
std
decl
aas
or
leave
gs
adc
sbb
rol
jmp
sbb
inc
sbb
shl
ror
not
rol
cmp
jne
leave
lea
les
dec
rcr
shl
xor
test
call
insl
test
out
test
shl
neg
push
jmp
mov
test
sbb
shl
add
cmp
jne
xor
sub
rcr
neg
neg
cmp
jne
mov
lret
jns
mov
rcr
ror
xor
cmp
jne
lds
lahf
outsl
sub
sar
jmp
test
fs
cmp
test
shl
rcl
ror
call
and
mov
fs
adc
inc
rol
xor
rcl
jmp
add
hlt
rcr
sar
rcl
xor
test
rol
call
pop
dec
dec
jecxz
les
shl
not
add
call
or
mov
xor
and
ror
call
adc
or
and
sub
cmp
jne
pop
xchg
repnz
mov
and
shr
or
cmp
jne
sahf
mov
xor
mov
test
call
mov
or
sar
cmp
jne
mov
scas
sub
xor
ror
mov
mov
add
sar
cmp
jne
cltd
popf
inc
sahf
std
mov
rol
sar
shr
xor
test
sub
jmp
insb
jne
repnz
cmp
sbb
not
inc
call
xchg
lea
mov
sar
adc
adc
shr
cmp
jne
pop
dec
fcmovb
rorl
neg
adc
cmp
jne
mov
lds
popf
lea
mov
cmp
jne
leave
and
rol
jmp
jp
mov
ficoms
xor
and
rol
adc
call
les
mov
cmp
sar
ror
add
shl
mov
cmp
jne
mov
jl
lea
or
rol
shr
call
loope
or
add
loope
or
call
and
inc
ja
mov
sub
mov
shl
call
mov
fs
xor
inc
mov
test
rcr
jmp
sahf
outsl
jns
icebp
ja
and
jmp
lret
xor
out
mov
shl
rcl
call
or
xchg
rcll
sbb
leave
inc
ror
rol
jmp
dec
in
adc
fs
ror
ror
add
jmp
mov
inc
mov
leave
fs
rol
rcl
mov
mov
call
mov
sbb
loop
call
out
js
sub
add
test
xor
test
mov
cmp
jne
cld
mov
cmc
lea
not
ror
call
pop
xrelease
loope
shl
cmp
jne
adc
insl
or
mov
xor
test
shl
call
pop
cmp
adc
adc
call
fidivl
and
jg
ror
add
jmp
loopne
xchg
repnz
shl
shr
shr
shr
cmp
ror
jmp
dec
movsl
lods
sbb
lea
rcr
ret
cmp
jne
push
mov
jmp
xor
jmp
pop
pop
lock
sbb
call
out
xchg
push
ds
lea
shr
xor
and
and
call
cpuid
insb
sar
and
ror
shr
cmp
call
neg
aaa
dec
cmpsl
or
incb
call
arpl
cli
push
not
mov
sub
shl
call
push
and
sbb
shl
rcr
xor
cmp
jne
ss
movsb
xchg
in
sbb
jmp
rcll
notl
lret
fwait
jne
jecxz
sar
add
shl
call
add
push
ficoml
lea
shl
cmp
jne
sub
push
adc
test
flds
inc
leave
add
rorl
jmp
loopne
sub
dec
neg
rcl
call
or
loop
mov
shll
repnz
sar
test
call
mov
icebp
ror
shl
rcl
test
inc
or
cmp
jne
mov
and
sar
cmp
jne
and
adc
jmp
call
ss
jae
lea
mov
mov
sbb
add
cmp
jne
jne
inc
lahf
sub
inc
lea
and
xor
rcr
adc
shr
cmp
jne
gs
fwait
mov
and
lret
and
xor
mov
call
lcall
and
add
cmp
jne
ud2
test
dec
test
xor
sbb
rcl
or
cmp
jne
ss
mov
fs
inc
test
cmp
jne
in
ret
xor
rorl
test
adc
jmp
cmpsb
xorb
ror
cmp
jne
push
out
jmp
test
sbb
shl
rol
rol
jmp
aad
jb
or
adc
sar
xor
rol
xor
sbb
cmp
jne
cmc
cs
add
fisubs
sub
mov
cmp
jne
nop
xor
rcl
sar
sar
adc
sbb
neg
cmp
jne
sbb
mov
roll
xor
jmp
lret
mov
fs
ror
sar
call
dec
xchg
cli
not
int
add
cmp
jne
push
out
push
repz
cmp
jne
mov
test
fisubs
icebp
mov
test
call
ret
sub
or
add
cli
xchg
mov
adc
adc
sar
rol
jmp
and
adc
not
not
dec
call
lahf
mov
jle
or
test
jmp
push
dec
cmc
lea
xor
dec
xor
cmp
jne
inc
ret
xor
rcl
jmp
int3
icebp
cwtl
into
jge
shl
sar
sar
call
jb
icebp
jne
call
fiadds
addr16
cmpsl
xchg
sub
cli
sar
inc
cmp
jne
lahf
lahf
mov
fnstenv
enter
jge
jg
roll
call
mov
inc
rcl
xor
inc
or
sub
rcr
lea
dec
sar
rol
shr
not
jmp
dec
push
test
add
into
ret
mov
inc
idiv
jp
pop
addr16
jne
test
shl
or
jmp
sbb
mov
pop
sub
rorb
jnp
cmp
jne
xor
push
clc
and
sbb
shr
sbb
sub
cmp
jne
or
push
adc
or
shl
add
and
jmp
cltd
mulb
rcl
stc
sbb
call
lcall
aam
jecxz
fnstenv
decl
push
add
mov
sub
jmp
je
push
jae
sbb
not
shl
cmp
jne
push
ret
lahf
or
neg
call
sarl
lea
inc
inc
rcl
add
cmp
jne
fwait
cmp
rcl
mov
sar
call
jb
fwait
mulb
fimull
fidivrl
dec
mov
shr
call
dec
fnstenv
shl
xor
jmp
inc
dec
add
add
imul
lock
cmp
jne
dec
sub
out
fld1
adc
jmp
decb
cmp
fcmovb
jmp
clc
adc
test
inc
add
icebp
repnz
das
add
call
jl
push
jg
inc
lea
sub
inc
shl
adc
call
in
jl
fs
cmpw
je
adc
cmp
jmp
subb
movsl
lea
sub
test
sbb
jmp
sbb
adc
aam
call
test
clc
cmp
inc
loope
lods
pop
test
sub
sub
cmp
jne
sbb
adc
xor
ror
mov
ror
cmp
jne
cmp
inc
lea
ror
inc
cmp
jne
jnp
mov
add
shl
inc
add
jmp
jnp
fdivr
sar
sar
ror
jmp
loopne
or
fs
shl
inc
cmp
jne
mov
or
into
not
rol
rcr
shl
jmp
inc
pop
ret
js
jmp
shl
shr
cmp
jne
dec
or
push
sbb
inc
xor
rcl
ror
sar
cmp
jne
test
push
mov
into
mov
jecxz
call
mov
push
repnz
sarb
neg
ror
cmp
jne
lods
call
repnz
neg
neg
jmp
sbb
and
