je
sbb
pop
test
pop
loop
jl
add
shlb
roll
std
adc
icebp
inc
dec
or
mov
movsb
mov
movsb
addb
xchg
int3
sbb
clc
aam
xor
jbe
cmp
das
push
out
lcall
adc
cld
push
and
or
sbb
ds
jns
xor
sub
pop
scas
mov
lret
outsl
sbb
push
cmpsb
stos
and
xchg
sbb
xor
insl
loopne
gs
outsl
dec
fs
and
iret
and
pop
imull
sub
test
sbb
pushf
cmpl
aam
test
pop
data16
xchg
xchg
fists
std
pop
mov
xchg
cltd
clc
pop
jecxz
sbb
shrb
push
pop
pop
push
push
repz
mov
mov
jge
xlat
fldl
mov
out
sbb
sbb
push
push
shlb
inc
shlb
clc
fidivs
imul
jns
imul
outsb
cmpsl
adc
iret
fistpl
or
add
inc
pop
jbe
mov
and
fistl
shlb
add
outsl
ret
ljmp
enter
cmpsl
popa
mov
mov
mov
xchg
jae
shrb
jnp
and
repz
push
mov
mov
jp
mov
jne
ja
fs
imul
and
sbb
mov
or
stos
and
jmp
push
or
stos
cmp
xchg
xor
lcall
or
pop
push
insb
fidivl
das
lea
mov
shlb
fsubrl
nop
clc
ret
dec
sbb
dec
push
lods
ror
notl
jmp
xchg
filds
mov
pop
sub
mov
imul
test
mov
int
leave
pop
pop
cs
jg
ret
mov
stc
fxch
lret
or
test
out
movsb
loope
test
mov
je
xor
cmp
test
adcb
in
cs
fucomip
arpl
push
push
out
sti
fcomp
out
sub
mov
andb
or
xchg
push
xchg
inc
out
mov
cmc
xor
jecxz
fstpt
sbb
outsl
ss
out
loop
movsb
ret
or
fbstp
inc
inc
xor
dec
cmpsl
ret
cli
jle
loopne
xchg
lods
pushw
fisttpll
test
imul
fimuls
in
mov
into
mov
push
cmpsb
cwtl
out
std
mov
dec
sbb
mov
lds
sbb
mov
inc
jmp
icebp
push
aad
add
inc
mov
mov
xchg
imul
adc
out
jecxz
je
test
lret
and
sub
xchg
lea
push
fnstsw
mov
push
addr16
pop
adc
jns
mov
outsl
lahf
dec
xor
jne
and
scas
cli
mov
mov
ret
popf
mov
lcall
pusha
int
mov
mov
std
mov
inc
les
and
test
leave
testb
ja
push
out
bound
ret
or
mov
rolb
sarl
pop
xor
sub
mov
and
xor
and
jp
loopne
push
mov
dec
and
or
adc
push
ljmp
aas
outsl
mov
dec
popa
and
aam
ljmp
dec
sub
ret
cmpsb
loop
push
jge
jg
push
and
xchg
and
dec
outsb
lahf
jae
pop
cmp
inc
sub
adc
imul
sub
xor
movsb
out
pop
in
dec
mov
mov
decl
repz
jge
lods
or
test
insb
test
call
aam
push
mov
frstor
data16
adc
into
xchg
mov
scas
inc
std
or
hlt
push
push
scas
jg
in
popf
movsl
dec
jne
iret
aaa
lret
adc
push
and
push
sbb
cld
sti
ds
mov
notb
and
and
mov
movsb
outsb
dec
stos
mov
dec
rcll
int
and
or
stos
je
imul
out
mov
mov
inc
leave
dec
push
sahf
pop
push
cli
cmpsl
xlat
mov
addr16
mov
add
xchg
adc
popa
cmpsl
pop
lock
sahf
fsubp
shl
push
dec
pusha
pcmpgtd
punpckhdq
cld
test
xacquire
adc
mov
mov
xlat
cmp
mov
or
ds
sbb
cmp
orps
repz
imul
dec
mov
mov
into
stc
rorb
cmp
sbb
fsubrs
xor
push
adc
std
xor
sub
or
in
add
cli
mov
js
inc
inc
jno
sti
fildll
sub
sbb
aas
xorb
jecxz
leave
call
mov
mov
outsl
gs
enter
sbb
push
ds
sub
fcomps
les
mov
mov
out
or
xor
fs
dec
cmp
cmp
push
pop
movsl
mov
cmc
sbb
rcl
mov
hlt
outsl
cltd
push
mov
imul
lret
mov
jl
scas
movsl
decl
xor
scas
lock
lock
pop
popa
adc
adc
dec
push
dec
dec
inc
push
push
cmpsb
mov
cltd
xor
jnp
dec
idiv
call
punpckhwd
xor
ds
std
mov
sub
sub
mov
mov
lock
and
lods
sbb
adc
insl
ljmp
mov
pop
mov
roll
repz
mov
leave
and
push
xor
int
sub
arpl
dec
add
sahf
xchg
push
test
pusha
sbb
enter
cwtl
sub
cld
rclb
jb
bnd
sbb
popf
jo
pop
dec
jecxz
xor
mov
int
outsb
pop
jno
das
or
stos
call
mov
imulb
add
subl
dec
or
jg
sbb
push
pavgb
mov
sub
jb
imulb
cwtl
test
sbb
mov
int
push
xchg
loop
ret
xchg
cld
mov
int
mov
xchg
cwtl
popa
jne
sbb
test
xchg
inc
adc
notb
scas
add
jl
ret
out
aaa
pop
and
push
add
movsb
lea
in
cmpsb
sbb
ror
scas
ljmp
cmc
pop
jmpw
pushf
gs
xchg
xchg
insb
or
fmul
rcrl
scas
mov
xchg
popa
bound
pop
sub
push
lds
popf
push
cli
out
mov
lods
mov
in
inc
cmc
or
xchg
mov
cmc
sbb
test
test
test
es
loopne
or
push
fsubs
add
adc
pop
out
scas
push
in
popa
jns
dec
aas
push
es
inc
dec
call
mov
xchg
sub
lret
dec
push
mov
lods
mov
adcb
sub
mov
out
mov
out
lahf
das
mov
jge
mov
mov
dec
pop
push
bound
push
mov
fistps
adc
push
xlat
sbb
aam
pop
js
push
lds
fs
add
push
jecxz
jle
sbb
jb
inc
push
dec
pop
sub
jbe
or
adc
sarb
cmp
pushf
fsubl
mov
xchg
push
xchg
push
push
ss
popf
jp
mov
insb
aad
pop
mov
sub
mulb
pop
icebp
adc
into
lods
jno
lret
int3
mov
dec
inc
sub
push
mov
idivb
mov
jl
push
fs
sar
ds
jge
int
mov
mov
push
mov
pop
dec
jb
cli
adc
sbb
push
mov
fucomi
pusha
jb
sub
mov
ljmp
test
and
ja
repz
xchg
sbb
mov
pop
clc
rcl
cmp
xchg
pop
call
jmp
imul
cmp
jecxz
dec
mov
scas
cli
mov
out
icebp
loop
or
mov
pop
dec
jmp
mov
cmp
addr16
cmp
mov
add
inc
xchg
aas
movsb
xor
idivb
cmp
jns
mov
jle
push
aad
cmpsb
es
adc
pop
push
mov
je
hlt
add
mov
jg
outsb
roll
imul
jnp
lds
mov
push
dec
sub
sbb
es
adc
sbb
push
xor
sbb
movsb
and
jne
hlt
mov
pop
das
cmp
aad
jo
push
inc
lods
adc
sub
in
pop
scas
jno
mov
cmp
repnz
jb
or
shlb
cmc
push
mov
icebp
dec
push
push
imul
cmp
aaa
cmp
mov
test
sarb
and
adc
cld
jb
jmp
scas
sbbl
arpl
xlat
sbb
cmp
mov
mov
fmull
mov
adcl
lea
sub
mov
push
sbb
xchg
mov
inc
insb
in
cmp
sub
sbb
out
imul
mov
mov
push
in
inc
mov
jg
les
fwait
je
mov
lock
lret
xorl
jne
mov
push
push
add
or
mov
inc
inc
test
orb
mov
mov
pop
in
mov
sbb
pop
inc
lea
std
dec
jo
ret
mov
mov
sub
roll
mov
mov
mov
scas
mov
push
fistpl
mov
pop
mov
insl
stos
mov
and
push
arpl
sub
xor
mov
int3
and
cmc
xchg
mov
mov
xor
scas
cmpsb
push
cli
repz
or
adc
or
push
xor
ds
mov
jae
and
out
dec
and
inc
mov
push
and
mov
xor
dec
inc
sahf
xchg
push
int3
inc
inc
cmpsl
leave
andl
aaa
cmp
adc
in
enter
lods
subl
int3
pop
enter
je
popf
sbb
je
mov
pop
aaa
push
and
add
stos
mov
dec
mov
xchg
pop
fcompl
mov
xor
adc
out
icebp
in
push
movsl
cltd
das
lds
sub
inc
pop
repnz
repz
arpl
mov
out
xchg
cmpsl
repz
iret
dec
test
lea
and
adc
test
std
cmp
sbb
andb
adc
sub
jbe
lret
jae
pop
pop
add
cmp
inc
es
insl
fdivrl
dec
push
repz
and
and
pop
and
xchg
dec
xchg
std
out
iret
rcll
xchg
out
xchg
repnz
das
into
aad
adc
cmp
mov
dec
dec
cmp
mov
cmp
aaa
xor
sub
fdiv
mov
xor
cmpb
sbb
dec
fisubrs
fwait
adc
outsl
mov
sbb
xchg
out
jb
sbb
adc
push
in
dec
inc
xchg
fs
popf
in
enter
jbe
jle
mov
andb
mov
pop
div
int
fs
ds
sbb
xchg
lds
clc
pop
ret
pop
cmc
scas
cld
lock
lea
fldcw
call
std
mov
loope
mov
and
jecxz
in
pop
jg
in
pop
stc
push
and
mov
sub
add
mov
iret
roll
std
js
insl
push
rorb
enter
call
aaa
mov
mov
gs
lahf
imul
in
jb
push
adc
mov
adc
pop
inc
sub
mov
or
fidivl
idiv
push
push
cld
les
cmc
push
xor
jnp
xchg
xor
mov
ror
or
es
outsl
ds
mov
mov
in
pop
xchg
inc
in
mov
iret
push
mov
sbb
push
movsl
xchg
sarl
orb
addr16
lahf
outsb
adc
xor
and
cmp
sub
les
call
mov
sbb
xchg
push
push
xchg
cs
addr16
push
jae
lret
jp
movsl
dec
insb
sbb
mov
out
mov
jne
pop
shll
outsl
xchg
test
andl
ds
movsl
loop
rclb
fnstsw
sbb
jecxz
xchg
mov
jp
jne
pop
sbb
dec
scas
or
push
in
iret
jecxz
push
pop
imul
mov
sub
ret
adc
cmp
adc
and
push
dec
rcrb
mov
out
popa
insb
add
imul
sbb
arpl
cs
hlt
insl
in
daa
addr16
fbld
mov
mov
and
mov
xor
cmpsb
cmp
push
cmp
imul
sub
push
cmc
xor
cmpsl
rolb
mov
inc
mov
dec
push
dec
mov
pop
dec
inc
and
shr
and
insl
cmova
nop
inc
jmp
bound
push
arpl
orl
and
bound
inc
shl
fcoms
sub
stos
lds
mov
shlb
dec
pop
dec
insb
test
fwait
mov
sbb
subl
and
mov
das
dec
rorl
sbb
push
cmp
cli
lret
cmpsb
push
xchg
into
out
arpl
imul
popl
xchg
das
andl
in
adc
insl
mov
loop
jnp
lret
sbb
cs
pushf
adcb
incl
xor
cld
add
nop
push
mov
add
incb
fstpl
xor
cmp
xchg
jp
imul
in
lret
inc
bnd
aaa
loope
sub
adc
xor
push
rolb
push
repnz
pop
add
adc
scas
xchg
hlt
and
add
mov
cmpsl
jne
int
mov
jnp
inc
push
adc
out
sub
cmpsl
jnp
hlt
leave
andl
xor
push
pop
insl
add
aad
das
and
out
jnp
push
push
pop
push
fisttps
stc
xchg
jl
pop
nop
prefetch
lock
xchg
sbb
cmp
pop
in
add
mov
inc
push
popa
pop
repz
leave
xorb
add
fadds
fsubs
sub
outsb
xor
ja
sbb
xchg
inc
or
jns
out
ds
sbb
cmp
add
sbb
push
adc
es
mov
add
adc
sbb
lock
xlat
push
imul
fdivr
xor
popa
data16
push
scas
adc
out
gs
outsb
sub
lret
cld
lret
lds
jecxz
orb
push
push
repz
arpl
and
ja
out
mov
xchg
sub
or
enter
inc
cmp
sub
arpl
leave
lret
leave
test
sahf
int3
sbb
xchg
push
out
js
cmp
mov
aaa
in
sahf
pop
rol
mov
insl
pop
mov
xor
std
hlt
insl
cli
push
mov
out
pop
jle
jle
orl
mov
pop
mov
out
xchg
gs
dec
fucom
les
outsb
popf
testb
out
lods
ja
pop
into
into
test
xchg
fdivr
ret
xorl
clc
fsubrs
data16
insl
in
inc
add
arpl
idivl
mov
out
push
push
lods
and
add
sti
les
sahf
add
mov
data16
cwtl
xor
shrb
xchg
mov
gs
push
insb
pop
mov
addb
cmpb
scas
xor
xlat
scas
out
jecxz
sub
ret
xchg
outsb
sbb
aaa
std
lea
cmp
and
scas
add
or
add
mov
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
test
add
test
add
add
jo
add
sbbb
add
sbb
add
add
add
add
add
xor
add
push
test
add
add
js
add
inc
imul
jo
je
inc
jb
popa
je
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
