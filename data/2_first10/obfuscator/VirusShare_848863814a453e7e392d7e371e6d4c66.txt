and
mov
add
inc
fstpt
ljmp
push
or
scas
mov
sub
scas
jg
lods
pop
adc
js
clc
adc
js
shrl
adc
cli
jp
inc
cwtl
dec
adc
clc
aad
sahf
stc
mov
sub
clc
repz
cmp
dec
push
fisttps
and
jge
mov
jmp
jp
mov
fldt
hlt
ss
inc
sub
sub
in
inc
in
or
and
aad
pop
ljmp
stc
imul
call
repnz
fs
jge
and
pop
cs
lret
mov
add
insl
dec
outsl
xor
pop
add
push
and
movntps
stc
xchg
dec
mov
int3
xchg
cs
aas
xor
jge
push
xchg
add
pop
add
xchg
adc
mov
into
fnstcw
ffree
sarb
cmpsb
ret
ret
mov
loopne
outsb
mov
fcomps
mov
scas
fstl
shll
sbb
bound
movsb
mov
imul
subb
pop
popf
stos
xchg
xor
int3
xchg
add
aam
cltd
into
xlat
mov
adc
sarl
scas
js
xchg
repnz
and
mov
scas
in
nop
out
fisubrs
insb
ja
sti
es
pop
imul
fldcw
ret
xlat
pop
jl
imul
fdivs
inc
out
into
mov
lods
insl
dec
xchg
out
mov
idiv
dec
mov
push
inc
orl
inc
xchg
call
and
mov
mov
dec
test
fldt
jmp
outsb
movsb
mov
gs
mov
push
insb
mov
push
jle
fs
xor
imul
mov
iret
push
std
push
mov
mov
scas
mov
xor
and
xor
insb
xor
rcr
loope
inc
jb
mov
push
xor
mov
sub
hlt
sub
std
imul
mov
mov
repz
sbb
fdivrl
es
ss
fs
nop
push
pop
std
jb
jmp
mov
push
cli
push
xchg
cmpsl
adc
push
dec
cli
mov
rcrl
push
push
rolb
jge
ljmp
cmp
insl
and
inc
pop
xchg
mov
aaa
fsts
je
push
cmpl
push
xchg
aaa
test
call
push
jmp
dec
mov
jae
push
sbbb
fmuls
jl
fcmovne
fmulp
sub
lock
jge
test
scas
dec
jae
rcl
jbe
xor
mov
fidivrs
rorb
add
inc
dec
xor
xor
sbb
pop
inc
rep
mov
cmc
push
js
decb
stos
roll
imul
jbe
or
call
sbb
scas
cli
and
dec
test
sahf
lods
xor
out
sub
stos
cmp
outsl
jge
enter
pop
or
cld
loop
and
push
stos
stc
add
jge
repnz
xchg
mov
lods
mov
pop
test
dec
aaa
rcl
mov
lret
lods
inc
int3
cs
in
xchg
and
push
bound
and
xor
sub
dec
fdivrl
or
cld
enter
jb
mov
cmp
add
jb
nop
sbb
popa
push
shl
and
fnstenv
mov
and
sub
mov
jecxz
inc
or
pop
out
mov
stc
jl
leave
in
sahf
mov
nop
jl
js
stos
data16
ror
ss
imul
ja
cmp
cmp
adc
jle
scas
insb
push
je
lea
imul
cmp
push
rorl
adc
cld
mov
std
popf
jp
adc
pop
jne
or
add
inc
jp,pt
add
bound
jns
mov
adc
or
lea
lret
adcl
mov
mov
jnp
jne
shll
cs
dec
aad
addr16
out
add
ljmp
xchg
fldl
sbb
into
mov
sbb
push
and
push
loope
mov
cmp
or
dec
das
leave
adc
xor
rorb
jg
test
xor
outsl
jmp
add
aaa
cs
test
fs
or
jg
popa
mov
shll
sar
cmc
xchg
xchg
aad
mov
lcall
out
inc
mov
lcall
jno
jno
adc
ljmp
mov
xchg
mov
xor
scas
xor
das
in
sbb
jne
push
repz
push
pop
in
cmpsl
outsl
dec
into
sub
mov
pop
xor
fcoml
jl
push
xor
sub
lret
inc
push
sarb
push
insb
cmp
cmp
aas
jg
inc
out
aaa
mov
jmp
mov
push
lret
out
jne
repz
or
sti
lock
dec
push
popf
dec
and
pushf
aam
lret
es
cmpsl
mov
adc
test
imul
mov
sbb
cmp
inc
pop
dec
sub
mov
push
jne
mov
pop
push
in
or
and
or
pusha
enter
lea
inc
pop
mov
movsb
xchg
cmpsl
dec
pop
xchg
or
or
std
cmpsb
push
and
push
dec
cmp
mov
fisubrl
sbb
jbe
das
shrb
clc
test
pop
aas
sbb
push
sub
insb
cld
rorb
push
incl
push
pop
mov
and
cmp
xor
push
scas
dec
mov
lods
jo
ret
mov
adc
mov
cmc
jne
cvttps2pi
movsb
jge
inc
mov
push
mov
push
cli
or
cmp
pop
sub
mov
mov
or
adc
or
sbb
mov
call
push
and
pop
test
mov
mov
sub
push
xchg
jge
cli
iret
push
xorb
cs
inc
push
dec
push
repz
das
xchg
aam
mov
hlt
cmpsb
mov
push
inc
xor
mov
addr16
cmp
into
in
jne
aaa
xor
icebp
sahf
std
dec
xor
rcll
out
push
pop
xor
mov
sub
iret
and
js
push
fnsave
xchg
xchg
inc
inc
mov
pop
xchg
in
cmpsl
and
xchg
push
fistps
cltd
rcr
dec
fwait
insb
stos
fildl
enter
sub
xchg
out
insb
idiv
mov
in
mov
lcall
outsl
mov
out
out
or
mulb
imul
addr16
arpl
cwtl
andl
cli
or
test
jbe
testl
cmc
sbbb
loop
shll
xchg
aam
aam
lret
popf
pop
das
hlt
rorb
gs
mov
or
mov
xchg
lods
mov
lods
aaa
mov
add
xor
daa
addb
mov
inc
dec
cmp
stos
jne
cs
nop
cmp
ret
lods
jns
adc
jns
repnz
lds
insb
sbb
roll
dec
adc
cmc
ss
sbb
mov
movsl
mov
add
or
push
dec
aam
gs
sbb
sti
stos
outsb
xchg
xchg
insb
adc
lret
jno
in
fwait
daa
cmp
mov
pop
call
pop
out
mull
shll
jae
xor
aam
fiadds
scas
scas
fucompp
push
sbb
fnstcw
dec
adc
mov
push
mov
pop
sbb
sub
cmpsl
mov
iret
aam
lods
pop
mov
roll
adc
jb
lea
testb
stos
xchg
roll
mov
ds
push
dec
sub
jo
loopne
fldt
stc
sub
adc
mov
mov
mov
outsb
fbld
xchg
xchg
sti
mov
cmp
fimull
inc
cli
mov
mov
ret
cmpsl
mov
mov
sbb
clc
lock
cmp
pop
roll
push
aam
mov
test
sbb
stc
scas
or
inc
dec
xor
sub
cmp
mov
jne
data16
mov
adc
or
mov
in
daa
xor
fsubrl
mov
stos
sub
sahf
pop
enter
add
stos
shll
or
dec
xor
sub
je
stc
pop
std
pop
sbb
inc
sbb
leave
sub
dec
sub
jne
xchg
popa
xchg
or
xor
adc
cmp
push
mov
adc
ficomps
xor
sbbb
leave
pop
mov
sbb
ljmp
dec
rcrb
dec
add
mov
sbb
movsl
adc
or
push
loope
das
insb
or
mov
add
int3
hlt
stos
pop
fsub
sub
xchg
sbb
adc
pop
mov
movsb
add
notb
adc
es
jmp
push
std
jge
in
xchg
mov
jo
mov
lret
fs
push
and
shrb
mov
repz
pop
pop
mov
dec
loope
or
xor
and
rclb
push
stc
data16
mov
popf
or
jo
jecxz
mov
push
aam
fs
sub
es
sub
xchg
sbb
mov
mov
int3
add
mov
mov
jo
lret
push
decl
xor
xor
pop
pop
popa
fiadds
sub
adc
and
inc
jne
add
js
pop
jmp
mov
adcb
sub
push
insb
gs
outsl
lcall
mov
ss
fsubl
leave
aaa
lock
jae
add
mov
enter
out
add
js
or
sbb
fadd
cmp
sub
repz
fiaddl
lret
mov
test
mov
adc
das
jo
aad
xchg
dec
lods
gs
cmp
push
stc
mov
dec
mov
xchg
or
mov
inc
pop
test
inc
nop
bound
iret
pusha
dec
adc
push
xchg
insl
cwtl
gs
dec
shl
rcrb
push
fildl
lods
mov
push
adc
mov
ret
test
hlt
pop
jo
loopne
iret
js
test
mov
rorb
stc
outsb
or
pop
pushw
arpl
out
test
fwait
xchg
push
bound
ret
cmpsb
jne
mov
gs
clc
cs
sub
stos
imul
pop
inc
test
sbb
fwait
aam
dec
imul
ret
push
insl
cwtl
cli
sarl
inc
test
dec
and
test
sub
popf
xchg
cltd
sbb
cwtl
ret
mov
fucom
fld
inc
inc
rol
les
shlb
dec
cmp
ljmp
js
add
xchg
xor
imul
int
insb
fs
iret
adc
mov
out
loope
xchg
xchg
sub
xor
or
pop
pop
jae
lret
movl
cltd
mov
das
fistps
rep
lods
sbb
test
repz
rcll
dec
test
or
movd
fsincos
xchg
sarb
bound
mov
pop
scas
sub
out
xor
xor
popl
lahf
inc
test
push
add
into
aas
fsubl
xor
xor
or
inc
xchg
push
stos
aad
sbb
test
sbb
xor
xchg
shlb
sti
aad
int3
pop
push
sti
aad
imul
pop
leave
add
xor
sub
and
and
insb
mov
loope
mov
push
pop
lret
inc
mov
ss
mov
addr16
push
xchg
mov
shrb
in
cmp
jl
push
xlat
leave
push
mov
push
mov
xchg
lods
or
lods
xor
add
cmp
mov
mov
xlat
mov
jno
push
inc
insb
xor
fnsave
cltd
mov
lcall
mov
fcomps
mov
cmpsl
lea
imul
sbb
ret
cmp
popa
jno
lds
rclb
inc
cmpsb
mov
push
pop
xor
or
scas
jno
fistpll
sbb
in
lods
jp
dec
mov
push
cmc
cld
lock
dec
mov
fstps
add
stos
test
pushf
std
and
inc
aaa
imul
sub
push
adc
mov
repz
in
mov
shlb
shrl
rolb
cld
push
shl
jno
lods
jmp
ja
jl
fldl
cli
neg
xorb
sub
cmp
cmp
cli
lea
adc
imul
nop
inc
add
push
scas
dec
cmp
mov
or
cmp
lock
push
shrb
imul
xor
lock
jp
mov
jg
cmp
mov
pushf
xor
pop
std
imul
and
cmc
push
fcoml
pop
adc
inc
es
sub
cmp
inc
roll
sar
aad
repz
push
iret
cmpl
pop
test
ja
adcb
sbb
mov
lods
mov
pushf
andl
mov
pop
mov
pop
push
xchg
pop
mov
mov
pop
dec
out
test
adcl
mov
jmp
loope
ljmp
xor
fs
sete
dec
test
pop
les
fbld
xor
dec
add
cmc
jmp
or
sub
dec
sbb
fwait
clc
fxch
jge
lods
jp
mov
popf
lods
adc
xchg
outsb
pop
imul
mov
fmuls
pop
in
push
int3
call
and
sbb
insl
stos
loop
adc
pop
das
pop
jo
jno
xchg
roll
jo
in
daa
cli
adc
mov
roll
sbb
gs
mov
adc
js
mulb
cmp
and
mov
adc
adc
outsb
sub
fldenv
or
jmp
push
xchg
xor
fstp
mov
sbb
sbb
push
test
test
std
cmp
test
pop
mov
out
out
in
inc
mov
lret
movl
xor
outsb
xchg
aas
popa
add
pop
fs
pop
add
xorb
and
test
stc
ret
shrl
xchg
mov
push
mov
push
mov
pop
lods
in
pop
mov
adc
les
arpl
push
test
into
movsb
lret
insl
cwtl
ja
test
push
jp
sub
sbb
daa
xor
insl
pushf
arpl
jge
mov
mov
shrb
push
and
cmp
sbb
ret
adc
cmp
cmpsl
inc
int3
xor
shrb
shrb
xor
cmp
pop
fmull
push
xchg
push
les
in
xchg
movl
xchg
je
outsb
jbe
pop
xchg
add
mov
mov
popf
lahf
adc
add
add
jae
jp
outsb
lock
repz
pop
jne
clc
loopne
icebp
imul
leave
dec
jo
jae
mov
out
adc
or
stos
or
mov
mov
out
enter
mov
jo
cmpsl
pop
inc
cmpsb
jmp
gs
adc
push
cmp
out
leave
jo
dec
push
xor
dec
and
dec
loopne
loop
dec
or
inc
and
imul
pusha
gs
pop
lahf
mov
addr16
and
pop
aas
xchg
loop
mov
pop
cli
mov
loop
jbe
es
decb
dec
cwtl
mov
sarl
aaa
cmp
or
sub
xchg
subl
jp
adc
mov
pop
daa
mov
loop
cmp
jo
dec
out
loope
jo
sub
lock
in
and
jg
loope
pop
mov
pop
mov
sbb
out
hlt
sub
jle
out
sub
dec
int
out
pop
ds
ds
adc
push
xchg
mov
shl
inc
and
and
add
movsb
mov
lret
cmp
jge
iret
call
lret
iret
inc
incb
inc
adc
pop
adc
bound
das
dec
movsl
mov
mov
ret
fwait
xchg
fimull
scas
jg
jo
in
mov
je
idivb
cli
int3
and
push
in
push
es
jb
sbb
and
aaa
add
ficomps
lea
xchg
negl
popa
pop
insl
psllq
add
push
sub
imul
xor
pop
jle
loope
xor
sub
lea
xor
lret
shld
lahf
xchg
pop
adc
mov
orl
int3
jae
add
xlat
and
jle
pop
ja
pop
xor
fbld
add
inc
sbb
xchg
cmp
popa
fadd
adcb
mov
fprem
add
inc
jecxz
inc
pop
push
lgs
push
push
stos
mov
jg
popl
out
cli
jmp
loope
adc
into
ret
sbb
fsubl
jg
popf
fiaddl
and
xor
in
lret
aaa
xchg
movsb
fcomp
incl
inc
jg
xor
lret
or
icebp
daa
push
mov
fsts
into
sbb
inc
mov
hlt
xor
mov
xchg
cld
int3
mov
and
sub
xor
dec
and
jmp
pop
mov
add
add
push
adc
mov
scas
mov
fdivl
push
jg
test
xlat
pop
sbb
fdivs
jge
mov
push
dec
out
adc
mov
bound
dec
lods
cwtl
push
jns
loop
inc
and
adc
add
in
dec
fs
add
sub
sub
mov
dec
pop
test
mov
cmp
outsb
xor
mov
or
or
arpl
stc
xchg
xchg
sbb
pop
shrb
xchg
ja
push
decl
xchg
out
push
hlt
in
push
mov
ret
je
add
loop
sub
push
adc
and
int3
mov
icebp
mov
stc
xchg
cli
ret
add
xor
sbb
call
inc
push
icebp
insl
mov
xchg
scas
xchg
mov
lret
insb
jo
clc
or
js
mov
sub
mov
push
vpcmpeqw
cmp
sti
sub
lahf
push
or
lret
inc
sbbb
mov
jl
mov
js
lret
ret
test
hlt
dec
push
pop
inc
mov
andl
cmp
mov
or
repnz
inc
xchg
jp
mov
xchg
xchg
push
xor
repz
clc
sub
or
xchg
out
mov
inc
push
and
mov
outsb
mov
sub
mov
out
mov
and
add
lcall
pop
insl
mov
popf
loopne
adc
mov
repnz
movsl
cmp
sbb
push
testb
jle
push
push
push
ret
mov
cs
mov
imul
bound
test
scas
jp
sub
mov
push
dec
and
lcall
das
push
mov
mov
mov
mov
stos
pop
push
jecxz
fidivs
hlt
cmp
xor
cmp
mov
cmpsl
mov
mov
and
loopne
mov
iret
in
popf
fisubl
mov
test
jbe
adc
repz
inc
popf
sub
fwait
inc
in
movsb
mov
lods
popa
or
lahf
es
out
mov
push
into
dec
outsl
jle
cmpsb
js
mov
or
movsl
pop
les
and
rclb
jbe
scas
or
xor
cmovbe
stc
nopl
mov
mov
test
jbe
mov
mov
mov
dec
dec
jns
rol
shll
lods
outsb
pop
xor
and
mov
addr16
stc
test
xor
push
jnp
sti
sahf
or
loope
jecxz
out
popf
and
push
mov
ss
test
test
adc
std
cmpsl
sbb
daa
jne
dec
pop
dec
insl
jae
xor
jne
in
xchg
lahf
or
pushaw
fildl
mov
or
ret
iret
push
adc
mov
adc
shrl
xchg
sbb
aas
push
add
pop
jg
or
jo
loop
iret
jge
mov
sub
jb
fiaddl
lcall
orl
xor
lods
mov
pusha
dec
std
inc
jnp
in
xor
subb
inc
loopne
xchg
push
rcr
and
rcll
dec
jns
push
ja
lret
loop
mov
and
push
popw
pop
lret
sbb
test
sbb
lcall
dec
loop
shrl
inc
dec
mov
xor
jns
sub
xchg
mov
adc
push
negl
roll
fidivs
cmp
cmp
call
out
arpl
cs
xchg
repz
mov
data16
jne
int3
mov
inc
in
fstl
push
mov
add
pop
fistl
ret
inc
add
cld
pusha
jb
pop
pop
out
adc
pop
ret
and
xor
mov
cmp
push
mov
pop
stos
jg
sbb
stos
xor
xchg
sub
jg
mov
adc
je
push
cmpsb
in
cmp
into
mov
inc
cli
repnz
push
mov
les
cmc
dec
js
ss
pop
outsb
sbb
outsl
sti
stos
or
cmc
push
test
xchg
xchg
and
test
sub
push
xor
sub
icebp
or
cs
popa
in
int
cmc
fisubrl
shlb
cmp
and
xor
mov
shlb
in
in
clc
outsl
pop
xor
xor
sbb
xchg
int3
or
jmp
xor
pop
in
adc
xchg
test
into
test
sti
or
mov
punpckhwd
sub
xchg
in
nop
jne
pop
xchg
or
insl
mov
stc
xor
push
push
xor
xchg
lcall
push
cli
pop
push
jl
mov
fwait
xor
cmpsb
jle
insb
pop
lock
andl
dec
jecxz
and
addr16
daa
sbb
inc
xor
cmp
mov
cwtl
mov
aad
sbb
lret
xor
xchg
xchg
sbb
daa
fildll
loopne
dec
mov
insb
testl
mov
std
push
cs
and
outsb
out
fnstcw
ljmp
fs
pop
pop
pop
xlat
lods
pop
andb
int3
int
pop
xchg
movsb
inc
push
orl
xchg
inc
jmp
adc
scas
out
and
push
pop
xor
movsb
rcrl
fbstp
cltd
cmp
sbb
adc
int3
out
inc
loop
shlb
adc
pop
cmp
lods
jmp
push
or
jg
push
shlb
jae
xchg
fwait
rorb
mov
int
mov
lea
pop
lahf
inc
cmpsb
loopne
mov
push
xchg
jp
shll
inc
or
mov
mov
mov
push
xor
roll
add
outsl
jecxz
insl
or
sbb
and
push
jo
dec
cld
pop
test
mov
lds
sahf
mov
push
push
inc
cmpsl
arpl
mov
hlt
sbb
mov
ljmp
mov
pop
xor
sahf
pop
and
lret
push
xor
fidivl
mov
out
jno
ret
ja
inc
mov
test
or
test
dec
jl
xor
pop
cmpsl
test
xor
lods
jo
dec
jns
pushf
fwait
sub
cld
xor
ret
cmp
les
cmp
mov
jne
std
cmp
and
dec
dec
adcb
shrb
mov
mov
inc
xchg
inc
mov
ror
or
or
outsl
icebp
pop
mov
mov
add
or
or
outsb
scas
jg
jmp
pop
pop
pop
adc
clc
notl
xchg
pop
rcr
sub
or
pop
addr16
pushf
adc
xor
xchg
mov
push
mov
or
push
adc
mov
adc
mov
daa
sub
sub
ja
mov
test
pop
xchg
xor
xor
movsl
pop
jecxz
mov
adc
fstpt
xor
test
cmp
jmp
iret
cmp
frstor
add
xchg
mov
fidivrs
leave
subl
aas
cmp
bound
dec
xor
mov
mov
add
lods
cmp
notl
xchg
lret
xor
test
pop
scas
out
add
push
sti
pop
or
dec
bound
push
push
imul
repnz
or
xlat
enter
push
cmp
stos
push
dec
lret
push
std
xlat
out
fiaddl
mov
xchg
mov
lret
imul
hlt
js
adc
mov
xor
push
inc
enter
pop
ljmp
sbb
movsb
pop
push
hlt
sahf
ret
icebp
mov
leave
push
in
negb
fisubs
xchg
jg
int
jne
mov
or
mov
dec
ds
cmp
mov
mov
jb
jle
xor
jbe
mov
cmp
xlat
mov
lods
push
push
push
mov
adc
fisubrl
cmpsl
xlat
in
xchg
and
aam
push
fcmovnbe
cmpsl
pop
dec
push
daa
cmp
dec
jno
sti
add
scas
push
leave
inc
dec
add
mov
fisttps
add
sbb
mov
and
push
jmp
dec
cld
popa
push
sub
mov
leave
jns
dec
int3
lock
dec
mov
les
sub
mov
sbb
and
fdiv
sub
ss
dec
aam
int
push
jne
cltd
inc
outsl
dec
ret
mov
imul
lock
mov
bound
jecxz
cmp
adc
push
or
mov
jns
popa
mov
mov
push
add
lods
call
lods
loop
pop
scas
add
lock
ret
outsb
loopne
add
popa
sbb
sarl
mov
sub
inc
sub
or
add
fimuls
cli
cld
into
sub
pushf
push
and
jge
cmp
sbb
popf
pop
jno
xchg
jo
jecxz
sub
int
jge
mov
adc
push
iret
je
and
push
add
pop
cmpsl
repnz
or
cmp
frstor
arpl
lods
sub
and
jnp
enter
push
imul
call
loopne
ret
imull
sub
in
fs
call
enter
push
rcrb
lahf
iret
dec
shlb
ret
jnp
dec
jbe
add
mov
cmp
sub
add
mov
jle
popl
movsl
sbb
pushf
mov
sbb
aas
leave
inc
xor
and
icebp
imul
test
mov
jle
fsubl
in
fisttpl
leave
test
loope
ljmp
test
xor
cltd
aam
sti
mov
jle
pop
mov
push
decl
outsb
and
ret
inc
les
popa
shl
pop
das
test
mov
enter
mov
dec
movsl
mov
jmp
int3
rclb
jg
sahf
pop
mov
stc
repz
add
push
es
in
or
loopne
push
cld
xchg
jnp
xlat
fcmovne
rcrb
jg
ss
add
mov
add
mov
addb
xchg
pop
mov
xor
xchg
xchg
iret
inc
adc
jp
fwait
cmp
inc
shll
test
mov
or
loop
cmp
into
fsts
insb
xor
lcall
lods
jg
sti
les
mov
inc
arpl
scas
stc
pop
mov
mov
ret
add
xchg
iret
iret
scas
and
ja
cltd
enter
jmp
xchg
rep
and
xor
je
insb
and
mov
imul
dec
pop
out
jmp
test
repnz
scas
xlat
and
gs
test
decb
jns
adc
inc
test
lods
push
xchg
into
mov
data16
je
leave
xchg
test
es
inc
add
lock
cltd
add
mov
cwtl
xchg
sub
mov
pop
icebp
fwait
push
add
adc
cmp
push
pushf
repz
xchg
and
pop
lods
sub
or
cli
pop
inc
enter
xor
lret
sti
push
addb
das
bound
xor
sbb
push
jnp
ret
or
fcomip
pop
hlt
cmp
add
push
sub
dec
mov
nop
aaa
rcll
lahf
and
xor
push
popf
sahf
cmp
outsl
test
inc
outsl
xchg
out
jmp
call
leave
test
loope
mov
mov
sub
jmp
ret
scas
inc
lret
mov
jbe
outsl
jecxz
sbb
cmp
iret
adc
sbb
mov
fnsave
fwait
cmp
mov
fdivs
std
and
jecxz
lock
rcr
cmp
shrl
mov
lcall
imul
lahf
cmovnp
mov
adc
jge
pop
lea
sub
push
sbb
std
push
push
lea
rorb
test
cmpsl
test
orb
pop
inc
xchg
ss
imul
mov
mov
sbbb
adc
scas
stos
inc
jmp
loop
xlat
data16
outsl
int
cltd
jo
cmp
push
lea
inc
enter
mov
cmp
outsl
push
ss
fs
fistpl
jl
or
je
je,pn
inc
mov
scas
push
xchg
cmp
ds
push
dec
or
int3
int
inc
mov
mov
icebp
scas
arpl
fs
in
pop
push
xlat
mov
fs
push
loop
mov
push
sub
mov
loope
js
aas
iret
mov
icebp
and
arpl
or
xchg
sti
cmp
mov
jno
pop
push
inc
jge
cmc
sub
xchg
rorb
cmp
sti
mov
add
addl
andb
cwtl
daa
pop
jmp
mov
movsl
cmp
push
push
or
inc
jnp
mov
or
rclb
clc
popa
into
mov
cmpsl
sub
lcall
icebp
mov
mov
rcr
xchg
xor
jns
pop
push
sti
cmp
adc
jg
ljmp
cs
mov
lret
call
ljmp
lret
or
jl
xchg
sbb
mov
sub
xchg
lahf
pop
mov
dec
mov
push
xchg
fs
popa
insl
fsubs
inc
mov
sti
ljmp
loop
movsl
aas
outsb
or
fdivrs
cmpsl
ljmp
mov
pop
sub
cmpsl
test
mov
xor
dec
fistpll
loopne
test
sub
adc
jno
imul
adc
add
jne
les
add
mov
xor
test
sub
add
loopne
inc
fsubs
fs
jbe
fmulp
dec
lods
sbb
mov
imul
ja
cli
f2xm1
cmp
adc
jno
and
push
lcall
xor
xor
rorl
pop
cltd
iret
push
fdivrs
pop
mov
mov
jae
test
aaa
insb
and
lods
sbb
push
xchg
pop
jp
bound
sub
push
sbb
call
and
aaa
jno
std
cmp
adc
jg
sbb
repz
fs
jmp
test
mov
mov
jne
xor
push
push
lds
adc
or
jne
xchg
daa
jle
daa
fidivrl
lahf
cltd
push
cmp
dec
lahf
push
scas
or
jl
xor
fdivr
jle
cltd
movsl
mov
lret
pop
fucom
sub
add
push
sub
mov
sar
xor
add
loopne
pop
push
popa
out
or
sbb
or
dec
out
mov
aad
mov
sub
inc
xchg
mov
mov
lret
daa
arpl
pop
pop
and
jp
push
nop
adc
pop
fisubl
aam
jle
in
push
js
add
jg
xor
cli
push
pop
mov
lahf
adc
lea
jge
inc
mov
lret
ret
mov
inc
dec
popf
jle
mov
sti
and
pop
insl
scas
mov
pop
cmp
mov
push
inc
out
mov
xchg
adc
push
xor
add
clc
xchg
out
daa
add
andb
popf
xor
leave
shrl
je
in
daa
insl
js
mov
mov
mov
add
adcb
scas
dec
mov
lret
negb
lock
sbb
jns
dec
add
xorps
mov
push
push
mov
dec
shll
ds
mov
sbb
sbb
xchg
mov
addr16
aas
ud2
jnp
add
lret
pop
dec
jb
and
push
sub
daa
enter
xor
mov
lcall
cmp
bound
jae
insb
jmp
sub
outsb
xor
and
dec
aad
fstl
rolb
nop
adc
adc
xchg
pop
aad
ds
push
mov
pop
js
cmpsb
sbb
fisubrs
mov
xchg
iret
mov
xchg
xor
dec
out
mov
xchg
or
gs
jmp
insb
fidivrl
cmc
or
xchg
dec
mov
shlb
movsb
loope
sub
mov
bound
or
lods
stos
mov
or
les
lret
in
mov
adc
sub
scas
xor
lods
sarb
adcb
pop
scas
and
or
insl
out
aad
shl
push
pop
add
bound
jo
insb
cmp
dec
push
pop
test
call
js
lock
pusha
popa
mov
sbb
pop
hlt
andb
cwtl
jmp
adc
fs
adc
and
mov
lods
mov
sarb
ficoml
or
push
inc
leave
or
jne
test
and
in
mov
jo
in
fisubrs
add
clc
xchg
aas
pop
imul
std
ss
adc
insb
push
fxch
jp
sbb
aam
or
xchg
mov
mov
push
dec
mov
lods
in
xchg
pop
mov
inc
arpl
xchg
jnp
incl
es
shrl
xchg
mov
dec
jl
aad
lret
and
sub
fmul
dec
fwait
xchg
mov
add
arpl
mov
in
imul
dec
add
cli
das
test
xchg
inc
jp
insl
fs
sub
jge
mov
mov
and
inc
adcb
xor
pop
fisttpll
push
mov
push
out
addb
or
lret
or
adc
jmp
je
pop
test
scas
push
jae
filds
sahf
inc
lods
pop
sbb
idivl
in
xchg
daa
arpl
pop
mov
lcall
xor
jns
mov
fadd
movsl
or
pop
fs
sub
cmp
cmp
and
cmp
sbb
add
hlt
pop
int
pop
div
mov
push
or
jns
fs
cmpsl
ret
mov
repz
jmp
outsb
lods
imul
insl
add
dec
call
pop
adc
repnz
add
add
mov
test
ret
ja
inc
pop
pop
mov
inc
jae
ret
in
add
mov
jge
fldl
adc
or
cmp
push
shll
pop
ds
out
push
push
cmp
push
push
push
hlt
mov
inc
cmpsl
cld
dec
xlat
push
dec
or
daa
sbb
and
aas
dec
out
pop
xchg
lods
mov
pop
sub
mov
test
mov
idivl
out
pop
mov
insl
hlt
repnz
add
sbb
fildll
and
cwtl
repnz
aad
cltd
lcall
orb
push
mov
aas
inc
loope
adc
dec
and
outsl
xchg
pop
xchg
and
adcl
mov
fiadds
pop
aam
xchg
loop
divl
and
dec
fbld
popa
pop
roll
mov
inc
add
cld
or
mov
mov
push
lock
fstl
rorb
in
es
lock
inc
xor
clc
stc
mov
cmp
data16
ficompl
jecxz
lods
sbb
js
mov
aad
jg
add
sub
mov
lods
mov
xchg
push
push
push
mov
xchg
sub
sbb
mov
outsb
fsubl
xchg
jnp
push
cmpsb
jne
inc
movsb
mov
aam
pop
pushf
mov
js
jp
jae
lods
movb
lods
sub
shlb
flds
mov
or
ss
mov
xlat
adc
or
loope
jb
mov
shrb
test
int3
xor
adc
call
scas
xor
adc
or
pop
add
add
fstpt
mov
or
lods
sub
mov
push
aam
push
mov
sub
jle
mov
dec
imul
in
imul
mov
mov
and
je
xchg
dec
sbb
xor
gs
pop
cmp
inc
cli
jmp
xchg
imul
jnp
mov
push
test
movsl
jbe
push
lock
mov
add
ja
mov
and
test
cld
pop
fists
push
dec
clc
dec
inc
aam
clc
mov
add
scas
lock
push
jmp
cltd
test
mov
mov
das
mov
clc
inc
sbb
movl
pusha
iret
dec
lahf
repnz
push
pop
movsl
lds
push
push
aaa
sbb
ficoml
in
push
mov
sbb
rcrb
or
jbe
hlt
stos
test
enter
and
xor
lahf
cli
nop
adc
nopl
dec
imul
adcl
ljmp
repz
cld
hlt
pop
mov
push
cmp
lock
sbb
stos
adc
mov
adc
mov
mov
sub
jne
shll
das
fwait
mov
fistps
cmp
cli
cmp
jno
sbb
push
dec
jp
jp
js
cwtl
cmp
mov
cld
popf
or
push
xchg
cs
sub
dec
pop
adc
mov
inc
cmp
jo
xlat
sbb
inc
xlat
ret
mov
cmc
inc
push
and
mov
push
ret
sbb
mov
lds
jae
jmp
sbb
pop
aas
bound
loop
int3
das
popa
fcmovb
mov
mov
aas
icebp
push
cs
push
mov
add
cli
xor
xor
fmull
out
xchg
jo
push
inc
or
xchg
mov
idivb
fdivs
bound
data16
inc
jb
jae
sbb
es
mov
or
addr16
xchg
stos
das
sbb
dec
jo
push
gs
cmp
fsubrp
cltd
sahf
sbb
repz
addb
shlb
mov
mov
xchg
daa
mull
rclb
mov
pop
arpl
or
into
loopne
je
clc
jge
add
cmp
inc
lock
ja
xor
cmp
fwait
rcr
cmp
mov
lret
xor
iret
call
xor
icebp
and
xor
sbb
sub
nop
add
out
imul
pop
or
cwtl
rcr
test
cmp
push
div
jge
rorl
push
sub
hlt
dec
mov
addr16
dec
adc
shrb
xchg
inc
jmp
lahf
into
add
push
outsl
xchg
add
subl
push
pushf
cmp
add
inc
sub
sub
mov
cmc
sub
imul
and
push
fbstp
cs
arpl
pop
test
add
mov
js
jecxz
sbb
jb
decb
sti
subb
lret
test
lods
jecxz
sbb
aad
flds
sbbl
shr
pop
cmpsb
jle
sub
nop
es
shr
dec
call
or
mov
call
sub
movsl
cmp
push
call
xorl
or
mov
cmp
cmp
mov
pop
call
mov
scas
cmp
daa
lods
lods
icebp
jb
leave
pop
dec
push
inc
mov
push
sbb
or
add
cmp
sub
dec
cmc
es
cmpsl
out
ret
sub
loopne
adc
xor
sub
lea
mov
imul
push
push
dec
sub
cmpsl
aam
clc
rorb
in
aas
test
pop
mov
dec
cmpb
ss
subb
pop
or
lret
jne
outsl
pop
add
shll
movq
int3
adc
cltd
sti
or
xor
cmpsl
pop
mov
js
mov
mov
mov
faddp
or
addr16
lds
xchg
push
daa
or
loope
jge
xlat
imul
pop
mov
jp
mov
in
add
int
outsb
jl
jns
mov
push
add
push
xor
cmp
daa
bound
insb
mov
ja
movsl
cmp
add
repz
fidivrs
mov
sahf
add
or
mov
ja
lods
xchg
mov
push
lahf
decl
jl
pusha
inc
jbe
mov
lock
fnstenv
sbb
mov
lods
xor
clc
push
sub
orb
in
mov
nop
cmc
insl
push
repz
cltd
xchg
sub
xor
data16
xlat
stc
call
xchg
in
mov
dec
mov
les
call
jno
mov
adcl
dec
jmp
push
xchg
sbb
push
in
jp
das
int
xlat
insl
cmpsb
mov
lea
rorl
std
jg
jecxz
jg
push
jg
mov
repz
jns
pop
xchg
dec
adc
push
push
dec
xor
stos
mov
push
das
pusha
xchg
sahf
int
leave
add
mov
pop
jno
mov
or
xchg
jb
and
cli
cmp
pop
push
pusha
inc
bound
inc
and
sub
xor
fwait
std
xchg
and
fimuls
js
pop
inc
cmp
sbb
int3
lahf
mov
in
sub
rcl
shrb
aad
mov
pop
pop
lods
cld
pop
push
sbb
das
mov
mov
add
in
push
jmp
hlt
ds
pushf
mov
movb
push
sbb
nop
addr16
pop
mov
cli
push
push
testb
repnz
pop
mov
daa
movsb
loop
mov
cli
pop
incl
pop
stos
pop
mov
inc
sub
rol
dec
sbb
das
push
shl
aam
sub
or
scas
add
add
es
iret
in
mov
inc
jp
repnz
enter
test
out
subb
lea
call
loop
lea
shrl
fs
in
mov
pusha
push
push
test
in
mov
pusha
sbb
stos
int3
xchg
ficomps
push
jno
xor
mov
ret
ljmp
sub
sub
xlat
adc
mov
sub
inc
sub
je
aas
cltd
pop
sti
sbb
sub
fnstenv
push
mov
nop
mov
push
push
jp
repnz
xchg
xor
in
inc
popf
mov
xor
dec
shlb
jne
sbb
sbb
repz
mov
xchg
adc
or
gs
test
gs
pop
cmp
dec
ljmp
mov
imul
push
ljmp
into
and
pop
enter
xor
out
inc
sub
mov
xlat
out
enter
jno,pt
inc
fstps
jns
inc
xor
cmp
popf
fists
mov
pop
mov
add
icebp
mov
pop
ret
lods
xor
test
aas
adc
mov
cltd
lahf
outsb
test
sub
loop
shll
xchg
or
sbb
fildll
or
cmp
sub
loopne
out
mov
js
push
leave
fidivs
xor
jmp
sub
inc
imul
sub
fdivrl
pushf
nop
xor
push
sub
fisubrs
add
ss
inc
sbb
push
cmp
call
dec
adc
ficoms
pop
stc
dec
clc
std
mov
enter
mov
cmp
sub
or
ret
mov
lahf
jge
ret
mov
lea
arpl
sub
xor
push
mov
mov
cli
jecxz
ret
or
call
shl
adc
cmpb
sub
hlt
sahf
mov
lret
lahf
mov
pop
test
mov
jp
xor
int
iret
bndldx
call
cmp
mov
push
and
xor
fwait
add
ja
outsl
xchg
mov
dec
cwtl
outsl
clc
je
mov
lahf
or
jmp
push
dec
mov
wrmsr
push
xchg
dec
xlat
mov
repz
mov
lods
fists
sbb
dec
xchg
push
aaa
test
cmp
js
inc
sbb
push
add
xchg
rcr
mov
and
cmp
flds
imull
and
mov
cmc
gs
sub
jge
pop
scas
pop
dec
ret
add
sub
xchg
loopne
mov
int3
repz
sub
jecxz,pt
push
mov
jg
push
xor
xchg
scas
jp
test
dec
cmp
fisubl
sub
cld
stc
add
sarb
gs
adc
cwtl
hlt
mov
jge
lea
mov
test
incl
orb
in
lea
fxch
inc
sub
lds
push
mov
pop
mov
mov
or
cmc
ret
ss
arpl
or
hlt
sbbb
repz
pop
xor
je
mov
ljmp
lods
iret
mov
sbb
adc
sub
mov
fwait
mov
push
into
inc
sti
and
add
fwait
out
sbb
outsb
push
out
xor
idivl
mov
push
pop
fdivrl
inc
loope
pusha
xchg
cmp
pop
mov
dec
cwtl
inc
cli
sti
adc
loop
mov
mov
sbb
gs
addl
mov
call
pusha
dec
jecxz
pop
jecxz
add
aaa
test
adc
mov
fnstenv
inc
cld
in
pop
and
mov
pop
rcrl
in
lcall
fwait
mov
mov
pop
jo
mov
sbb
ja
push
repnz
jae
data16
cmp
pusha
mov
sahf
popf
stos
mov
push
jbe
pusha
lock
jecxz
stc
mov
add
pop
push
xor
cs
movsb
dec
dec
jge
push
and
daa
les
sbb
push
clc
xchg
insb
inc
xor
sub
pop
je
stc
xor
push
xchg
stos
imul
in
dec
shll
nop
js
jp
adc
loope
cld
sub
scas
jo
xchg
mov
mov
dec
or
sub
in
inc
dec
inc
insl
xor
rcll
inc
push
mov
inc
xor
loopne
mov
aad
push
dec
fsubrs
js
pop
cmp
jmp
push
sub
aam
data16
scas
mov
lcall
adc
sub
jg
mov
xchg
jb
cld
xor
dec
mov
or
jne
int3
int3
in
pop
fimuls
and
fidivs
je
lock
stos
data16
xchg
sub
mov
shll
adc
lods
imull
jno
ret
iret
cmp
imul
dec
xchg
pop
sub
mov
push
outsl
pop
fnstcw
dec
rcr
add
sub
int3
shr
nop
out
dec
js
push
mov
jle
dec
push
xchg
imul
daa
divl
std
test
push
loope
sbb
data16
sub
and
sub
push
inc
adc
adc
nop
cmpb
mov
xor
jp
sbb
inc
mov
imul
pop
xor
pop
mov
inc
roll
in
add
and
insl
and
sub
xchg
sbb
inc
mov
stos
cmc
push
mov
dec
das
repnz
into
leave
ret
dec
and
add
outsb
add
push
cmp
loop
hlt
adc
movsl
mov
or
or
loope
notb
and
imul
aas
nop
mov
and
jmp
and
aad
adc
add
add
and
mov
cmp
ret
xchg
fmull
jnp
cli
cmp
repz
adc
setb
jo
test
ret
xchg
aam
insl
jp
adc
ljmp
ljmp
aas
or
jmp
jl
push
xchg
icebp
mov
inc
pop
mov
imul
out
test
pop
cmp
adc
mov
cli
outsl
pop
hlt
or
dec
mov
shll
mov
and
push
pop
pop
mov
mov
xchg
mov
jae
dec
xchg
fistps
fs
jo
cmpsl
xchg
mov
arpl
popa
and
add
jns
outsl
xchg
jg
push
hlt
cwtl
dec
cmpsb
add
mov
adc
mov
xchg
inc
jns
insl
cmp
loop
inc
push
and
lock
push
and
push
jbe
xchg
shlb
adc
xchg
roll
xchg
sbb
out
cmp
xchg
sti
lods
adc
idiv
adc
fistpll
mov
lret
cmpsl
adc
imul
add
xor
mov
lret
outsb
fcoms
test
adc
cmc
jge
fildl
test
pop
out
stos
int
cld
icebp
hlt
incl
shlb
rorl
push
jp
mov
loopne
pop
and
mov
jp
jno
inc
and
pop
out
jae
inc
xchg
adc
xor
mov
data16
popa
mov
jle
lret
mov
mov
sub
ljmp
shlb
cmpsl
inc
add
dec
daa
outsb
sarb
lret
mov
inc
cmpsb
int3
in
das
sbb
lahf
cmp
scas
inc
jae
ficompl
push
dec
adc
hlt
testl
loop
sub
mov
mov
pop
mov
push
das
out
push
or
pusha
inc
inc
outsb
pushf
push
add
idivl
sub
xchg
lcall
jge
jbe
out
rcll
sahf
ss
lret
roll
shll
movsl
push
xchg
add
inc
pushf
daa
mov
stos
mov
shlb
sbb
into
mov
mull
sbb
xchg
xchg
jecxz
cltd
je
pusha
xchg
mov
cwtl
mov
mov
insl
popa
pop
in
mov
pop
and
out
bound
push
aaa
loopnew
outsw
fildl
lea
push
add
mov
lcall
popf
stos
sti
jmp
hlt
mov
pop
iret
mov
subl
std
leave
push
pop
push
ficoms
in
dec
in
sub
adc
dec
inc
xchg
xchg
les
aaa
cli
pop
sbb
in
xchg
pop
and
in
and
pop
shlb
add
inc
repnz
nop
lods
sub
cmp
fwait
ja
loopne
enter
push
dec
test
lret
xchg
arpl
push
mov
dec
repz
adc
mov
mov
jno
lods
push
pop
push
sub
jb
xor
push
out
lds
add
push
scas
mov
notl
mov
cmp
shlb
idivb
sub
int3
push
hlt
pop
enter
test
inc
add
add
mov
cld
cmpb
aam
xchg
rcr
cmp
out
xchg
fldcw
mov
pushf
push
pusha
mov
mov
jp
mov
pop
sahf
out
data16
lock
iret
sbb
push
add
in
testl
inc
pusha
cmp
fwait
xor
movsl
mov
clc
mov
stc
mov
add
mov
pop
movsb
push
pop
adc
lds
ja
mov
sub
jne
dec
jbe
mov
arpl
in
outsl
lods
int
ja
int3
mov
ljmp
cli
adc
push
in
in
lret
pop
testb
or
xchg
cld
ja
sub
std
jl
and
cli
cmpsb
sub
adc
jno
mov
jnp
push
dec
je
push
fcomps
in
jnp
and
clc
in
mov
out
jno
or
test
pop
add
mov
dec
add
movsl
mov
adc
cmp
adc
sahf
pop
arpl
pop
add
cli
lret
out
inc
in
pop
mov
mov
out
subb
sub
mov
push
mov
jnp
std
adc
cwtl
xor
xor
popf
in
push
xor
xchg
inc
mov
mov
pusha
mov
jl
lods
jl
into
ja
cmp
inc
in
into
push
jle
loope
pop
aaa
or
fcmovbe
imul
jns
ss
jno
and
add
lret
adc
add
add
pop
push
out
mov
out
mov
jno
pushaw
bound
adc
hlt
push
test
jb
dec
pop
xchg
fistpl
js
mov
adc
xchg
in
lcall
inc
lds
enter
or
jge
rcr
subl
ja
pop
scas
adc
jp
scas
add
xor
pop
das
pop
sbb
lcall
pop
and
dec
rorb
aam
dec
aad
dec
inc
cmp
mov
mov
cli
sbb
inc
push
xlat
jp
jle
mov
iret
jbe
or
jo
sub
addr16
sbb
cmp
enter
and
jae
pusha
xorl
xor
aam
or
popa
cs
fstps
aam
and
sbb
dec
pop
cmp
fsubs
xchg
sub
ljmp
jno
xor
push
xchg
add
jb
sbb
rorb
psraw
sar
xchg
dec
loopne
je
ss
aas
cmpsl
fcmovu
cs
pop
sub
and
aaa
stc
cmp
or
lea
lret
rorl
ds
aam
aad
adc
or
arpl
sbb
push
out
push
sbb
xchg
loopne
lret
dec
jnp
outsl
ret
sub
xchg
test
lret
pusha
sbb
inc
ljmp
pop
fsubrl
mov
and
ficoms
scas
mov
repnz
movsb
das
imul
mov
add
sbb
mov
stos
push
pop
gs
pop
iret
aas
pop
outsl
push
popf
lahf
daa
dec
or
push
pop
dec
inc
int3
sub
das
outsb
out
mov
scas
adc
sahf
fldt
orb
sub
aas
xchg
xchg
filds
out
loop
std
push
mov
inc
xor
lea
ss
js
lahf
aas
in
push
out
jae
add
in
fdivrl
dec
negb
sbb
cld
ret
mov
push
dec
out
push
add
pop
fdivrs
in
bound
dec
xchg
aam
ja
push
sarb
cmc
or
repnz
adc
mov
mov
nop
movsb
mulb
pop
jmp
nop
inc
mov
push
leave
test
loopne
fimull
pop
shll
pop
test
push
rorb
popa
cli
or
sub
jg
adc
sbb
add
test
push
mov
or
inc
aaa
xor
sbb
inc
mov
mov
mov
test
repnz
sti
pusha
or
lods
in
sti
xchg
push
mov
pop
std
cmp
adc
and
push
scas
out
sbb
jg
cmp
pop
xchg
out
mov
ret
cmp
adc
test
fs
lds
sub
lret
sbb
xor
push
sbb
inc
mov
jns
lock
push
lret
scas
dec
jns
filds
leave
or
adc
pusha
inc
cmp
sub
push
dec
or
iret
sub
xor
outsb
pop
sar
dec
mov
dec
xchg
or
call
mov
int
push
pop
mov
scas
fisttpl
adc
cmp
stc
insb
es
ja
call
inc
mov
inc
mov
pushf
imul
pop
mov
cli
movsl
mov
inc
mov
movb
shlb
cmp
mov
repnz
bound
dec
out
xchg
loope
cmp
adc
xorl
jae
dec
orb
jae
lret
cmp
inc
adc
inc
out
in
jmp
xorl
mov
stc
enter
cwtl
stos
aam
mov
jl
dec
stc
in
xchg
lret
int
push
mov
inc
push
ss
or
insl
push
jecxz
cwtl
and
sahf
loop
pop
pop
adc
jge
ret
loope
cmp
fisttpl
mov
mov
xchg
dec
add
stc
stos
movsb
cltd
xchg
xlat
mov
dec
push
call
test
jne
int
cmp
nop
adc
add
mov
xor
xor
aas
ljmp
mov
data16
xchg
loop
adc
dec
adc
ret
adc
jno
imul
lods
lock
rorb
sub
in
sub
jno
and
mov
out
push
pop
push
jg
cmpsb
inc
adc
out
jp
dec
add
jo
push
aas
stc
and
xorb
and
xor
inc
jae,pn
mov
sbb
jnp
sub
adc
sub
mov
or
cmc
inc
shll
push
mov
mov
mov
repz
dec
and
cmp
data16
dec
std
filds
popf
add
std
push
cs
push
jmp
pop
test
ret
popf
push
and
adc
jbe
ret
stos
adc
cltd
dec
dec
fisubrl
sbb
dec
cwtl
jl
dec
xor
bound
popa
shlb
aas
test
mov
es
dec
sub
pop
imul
inc
push
stc
addr16
and
sti
push
and
cmp
cmp
or
add
mov
aad
mov
xor
fyl2x
mov
lods
std
test
lcall
nop
sbbl
js
fldl
ret
dec
mov
pushf
out
inc
not
mov
sub
add
cmp
frstor
cld
dec
and
hlt
out
xor
les
js
pop
sti
enter
imul
adc
clc
adc
mov
push
std
aaa
or
mov
dec
data16
push
in
popa
in
loope
jne
cltd
push
in
repnz
dec
imul
xchg
push
sub
insb
imul
hlt
mov
jns
in
add
inc
rolb
fildll
cmpl
pop
clc
mov
aad
cmp
pop
jno
fucomp
pop
insb
fisubrl
or
test
out
out
fwait
pushf
leave
mov
bound
jp
sarb
movsl
push
mov
sub
or
lret
sbb
in
shll
pop
push
pop
xchg
bnd
mov
scas
sbb
faddl
loop
adc
mov
mov
in
sbb
outsb
aad
adc
mov
mov
sar
xchg
hlt
js
mov
loope
xor
pop
dec
mov
mov
adc
je
cmp
xchg
stc
jp
mov
add
xor
rclb
stos
out
ljmp
roll
and
mov
jle
sbb
imulb
xchg
or
insb
push
nop
adc
sbb
push
add
push
out
and
popa
arpl
ds
add
sbbb
and
push
xor
sub
sub
cli
jge
mov
cli
ret
rorb
mov
sub
sub
jmp
int3
lock
ret
ja
xchg
xorb
je
add
jl
mov
test
add
adcl
push
dec
push
jp
clc
mov
push
pop
mov
pop
idivb
sbb
cmp
aam
enter
divb
das
insb
mov
adc
sbbb
cmpsb
cmp
imul
div
sti
xorb
sbb
enter
fcom
mov
jg
in
jmp
enter
jle
shrb
out
push
lahf
lock
mov
lea
push
pushf
lret
xchg
sbb
shlb
iret
out
adcb
push
das
inc
xor
mov
je
inc
aas
add
jmp
mov
fistpl
jge
dec
push
push
nop
and
xchg
out
out
in
popf
push
mov
je
enter
es
or
and
adc
stos
mov
or
push
push
and
rolb
stos
std
sub
pusha
popa
add
mov
sbb
je
mov
mov
ret
shl
mov
das
add
fdivr
imul
push
repnz
pushf
or
aas
adc
xchg
jmp
mov
xchg
push
xchg
xor
push
xor
xor
mov
idivl
add
lock
insl
loope
adc
popw
cld
sbb
ret
std
fucomp
push
mov
pop
jle
je
inc
mov
jge
leave
inc
dec
mov
repnz
sbb
cmp
xchg
repnz
xor
repnz
mov
decb
xor
test
jb
int
sbb
popf
pop
sub
loopne
aas
stos
out
dec
xor
popa
mov
nop
fdivrp
push
or
fidivl
cmp
icebp
and
push
outsl
jb
inc
shlb
pusha
jg
iret
imul
loope
cli
jne
addr16
pop
and
push
outsl
cmpsl
sub
ljmp
and
fildll
mov
xchg
cltd
adc
xor
adc
dec
jp
sti
xchg
inc
out
es
cmp
cmp
push
and
cli
xchg
mov
mov
stc
cwtl
xor
js
or
mov
add
test
or
jb,pn
lds
sub
scas
xchg
jo
lods
inc
mov
js
xchg
add
jae
popf
cwtl
cmpsl
xor
imull
cmpsb
lock
or
inc
rdpmc
push
enter
aam
cs
sub
pop
adcl
int
aam
repz
or
std
mov
lods
insb
pop
fidivrl
int
or
add
jnp
lret
cmp
add
aas
addr16
jns
mov
sub
test
js
pop
test
xor
sbb
add
fs
and
push
ss
add
adc
pop
cli
or
xor
push
mulb
xlat
outsb
cmp
sbb
adc
mov
int
or
dec
inc
or
sti
pop
mov
lahf
jo
cli
out
mov
xchg
sbb
daa
or
js
lcall
dec
mov
js
sti
jnp
sub
push
fnstenv
popa
cmp
test
xorb
mov
mov
xchg
jmp
and
movsb
pop
push
lahf
or
cmp
push
fwait
loop
xor
imul
push
mov
cmpsb
add
imul
sbb
popa
fsubr
pop
std
in
or
xchg
arpl
add
lods
lods
movsl
test
mov
mov
js
pusha
mov
mov
jge
in
shrl
out
and
cs
pop
arpl
iret
push
dec
shll
cmp
out
mov
int
popf
out
pop
mov
in
push
mov
ds
mov
icebp
stc
dec
pop
pop
cwtl
sbb
mov
and
add
sbb
in
lahf
repnz
call
icebp
and
xor
mov
and
xor
lds
dec
mov
cld
js
adc
inc
inc
cwtl
subb
loopne
lret
xor
icebp
xor
clc
push
sub
xlat
ret
add
adc
repz
dec
sub
xlat
bound
jecxz
cwtl
call
adc
fists
pushf
pop
jb
out
dec
call
dec
push
xchg
andl
fst
das
aam
fidivrl
jne
jo
in
push
pop
mov
dec
mov
mov
ljmp
lods
vmovups
jmp
mov
insl
push
jle
cmpsl
mov
fisttps
pop
leave
fists
fnsave
add
lcall
loop
les
sbb
mov
ss
adc
xor
pushf
inc
fcomi
sub
jmp
addl
arpl
or
jne
jecxz
mov
inc
es
lahf
xor
aaa
popf
fistps
xor
cmp
pop
divb
icebp
adc
rcll
push
subb
jl
popf
mov
mov
dec
xor
scas
fcomip
xor
pop
mov
xor
xchg
xchg
inc
cmc
cmc
add
daa
in
iret
jne
cwtl
addr16
xor
dec
cwtl
mov
cld
insb
outsl
loopne
sbb
mov
rcll
cmp
ret
mov
rorb
pop
insl
fidivrl
jmp
movsl
lock
jae
icebp
aad
or
dec
inc
inc
cmp
ud2
sbb
arpl
pop
aam
mov
xchg
dec
or
sbb
xor
sarl
std
rcll
dec
aaa
mov
push
mov
pop
pop
mov
jp
dec
outsb
jl
cs
jb
rcrl
cmc
aad
xchg
imul
dec
out
shl
out
xor
push
ret
pop
in
xchg
or
scas
loopne
push
mov
js
jbe
mov
dec
sbb
pop
ljmp
mov
out
xchg
loope
inc
mov
scas
lret
xor
mov
les
rorl
outsl
daa
inc
pop
lds
sub
test
mov
pop
xor
sub
cmc
lea
dec
imul
rorb
push
aas
dec
in
ret
xor
mov
pop
push
push
fisubs
mov
adc
aaa
test
and
push
hlt
add
nop
fisubl
mov
ret
and
jno
pop
insl
pop
aam
add
pop
inc
shr
ret
pop
scas
mov
aad
mov
data16
mov
notb
sbb
imul
inc
mov
rol
mov
fisubrl
icebp
sbb
hlt
pop
dec
loope
insl
rorl
imul
into
adc
sub
lods
push
add
push
fsubs
push
xchg
pop
xor
adc
leave
and
dec
xor
mov
cmp
loope
loop
mov
mov
add
cmp
cmpsb
lret
pop
repz
clc
imul
lahf
jp
xchg
mov
mov
mov
aaa
push
outsb
lock
sbbb
pop
mov
pop
cmpsl
out
popa
pushw
in
cmpsl
dec
mov
lea
xchg
or
lea
int
daa
push
add
cwtl
call
ljmp
mov
test
js,pn
loop
mov
daa
jbe
iret
lahf
mov
sub
nop
out
push
adc
mov
in
aaa
adc
icebp
popf
or
mov
scas
inc
rcrb
mov
and
outsl
loop
ret
test
es
scas
jmp
mov
iret
movsb
out
rolb
mov
dec
pushf
and
dec
jns
fildl
xor
mov
xor
sub
sbb
test
insb
sub
xchg
xor
mov
push
sub
xchg
inc
jl
mov
xchg
sub
sub
jne
mov
call
aam
push
push
mov
dec
pushf
fwait
scas
insb
jl
inc
sub
xchg
add
fwait
adc
xor
jns
mov
mov
jecxz
fistl
int3
push
fcomps
orb
mov
cltd
mov
lods
jno
das
jg
inc
dec
or
out
mov
cmc
xor
or
inc
enter
fwait
cld
arpl
imul
imulb
dec
imul
sub
lock
fisubrs
hlt
sahf
fistpll
add
hlt
mov
out
jge
scas
sub
xlat
int
lods
bound
cli
pop
mov
inc
jmp
call
popa
xchg
ljmp
arpl
xchg
out
fdivs
inc
fistps
inc
out
fwait
jb
push
addb
mov
jmp
lea
pop
cmp
xor
repnz
mov
fdivl
dec
or
popa
jl
cli
outsb
ja
pushf
xchg
mov
data16
ret
mov
cmp
push
cmc
lods
and
shrb
mov
incl
sub
or
xor
adc
cmpsl
mov
je
scas
push
dec
add
xchg
mov
dec
pop
das
and
loope
sbb
mov
push
inc
cmpsb
sub
push
xchg
sbb
bound
cli
test
pop
sub
out
rol
rcrb
mov
scas
pop
sahf
sbb
or
lret
cmp
push
sub
mov
out
out
outsb
cmp
sahf
lret
repnz
repnz
and
adc
xorl
mov
daa
jmp
jne
cltd
xorps
imul
and
sarl
mov
adc
or
insl
repz
push
popa
cmp
int3
xor
xchg
jb
cmp
aas
or
mov
popa
in
cmp
dec
mov
xor
xchg
cmp
mov
testb
ror
mov
xor
daa
jae
xor
jle
cwtl
or
and
sbb
inc
or
das
movaps
loop
inc
sahf
mov
adc
sarb
mov
iret
mov
xor
sbb
add
sub
in
jnp
stos
ds
xchg
es
lods
mov
into
pop
dec
repz
push
out
push
xchg
inc
mov
ret
mov
xchg
repz
sub
add
pop
test
adc
mov
mov
inc
mov
out
cmp
xor
inc
mov
inc
je
mov
push
xlat
mov
fcmovnb
dec
xchg
mov
pushf
jl
out
pop
and
in
movsb
xchg
mov
inc
adc
mov
pop
adc
fwait
mov
sub
out
push
pop
and
sub
sub
mov
or
pop
icebp
les
dec
enter
ficoms
outsb
sbb
aaa
test
ja
shll
lcall
adc
sahf
aas
xlat
popa
dec
inc
sbb
imul
sub
enter
and
lret
or
xchg
mov
cmp
jge
imul
ret
das
dec
imul
jg
xor
xor
aam
fdivr
std
out
dec
push
add
imul
adcb
adc
pop
sbb
pushw
scas
stos
push
mov
or
jmp
call
cmp
and
loopne
cmp
xlat
inc
lods
lret
mov
inc
push
in
nop
ffree
sti
push
push
out
je
outsb
ss
out
cmc
test
rcrb
insl
into
in
movsb
jmp
cmpsb
and
mov
pop
add
jmp
mov
call
outsb
arpl
jae
cmp
in
sub
insb
sbb
mov
mov
stos
mov
jl
out
clc
inc
jae
scas
mov
jb
movsb
out
xchg
dec
or
mov
aaa
sub
scas
and
popf
push
lret
cmc
xlat
jnp
inc
xor
stc
add
cmovno
cli
push
daa
xor
sub
mov
int3
shrb
cmpb
mov
dec
inc
mov
mov
popf
pop
cmp
mov
mov
dec
pusha
cmpw
jecxz
leave
imul
cmpb
xor
repnz
fdivrs
jbe
int3
and
test
and
add
push
add
adc
sbb
pusha
cs
fistpll
mov
pop
jecxz
les
js
jbe
cmpsl
and
push
shr
out
mov
mov
pop
ljmp
xor
cs
sbb
lret
out
xchg
nop
icebp
adc
mov
and
dec
gs
stos
pop
xor
dec
cmp
das
push
add
mov
jns
fisubrl
jno
jnp
mov
test
in
inc
push
daa
adc
xor
mov
mov
insb
and
mov
push
sbb
clc
jb
clc
out
mov
xor
fcmove
mov
jge
subb
adc
lods
xchg
repnz
stos
xchg
push
mov
mov
pop
std
movsl
enter
push
inc
ret
xchg
sub
cmp
push
xchg
adc
fwait
or
daa
fwait
inc
pop
popa
jecxz
pop
movsl
mov
push
xchg
ds
pop
xor
aad
insb
and
sahf
into
stos
jo
stos
sarb
stos
or
nop
push
mov
lret
inc
jg
mov
ss
jp
inc
jne
jl
ss
call
mov
aaa
lret
es
lret
out
add
jmp
cmp
cmpl
pop
test
mov
imul
inc
out
mov
and
jae
pop
and
test
pop
hlt
loope,pn
add
aam
adc
imul
ret
arpl
xchg
pop
xor
jmp
shll
faddl
jl
mov
jno
rorb
inc
ljmp
or
fwait
jmp
jg
jno
pushf
xor
test
or
cld
rorb
add
int
pusha
xor
lods
int
lret
push
sahf
mov
mov
mov
and
jno
ret
fcoms
push
cmp
push
mov
out
scas
cmc
hlt
add
ss
push
jo
add
cmp
outsl
and
sub
fsubrs
lods
dec
fwait
cmp
jg
adc
insb
xlat
sbb
pop
push
fdivrp
jnp
and
repnz
mov
gs
mov
or
loope
jbe
scas
mov
lods
xchg
mov
mov
je
push
xor
adc
jo
jnp
jns
mov
mov
sub
or
cmp
decl
test
cs
or
dec
and
shlb
xchg
dec
out
aad
sbb
mov
mov
xor
cmpsl
push
xchg
aad
push
fld
xchg
repz
sub
notl
or
push
mov
xor
mov
loopne
rorb
mov
push
sbb
xchg
sub
push
push
push
xor
mov
sbb
inc
bound
add
stos
and
fs
loope
out
test
and
cmp
or
mov
jl
cmp
ret
jl
xchg
notl
fildl
leave
mov
jb
sub
jp
andb
add
mov
xor
nop
adc
xchg
call
pushf
pop
je
js
xchg
pop
inc
push
roll
cwtl
or
arpl
adc
add
pusha
mov
fidivl
les
and
pop
fidivrl
jae
andb
je
xor
test
mov
subb
xor
movsb
out
inc
jns
cwtl
jp
leave
icebp
xorl
mov
shlb
pop
in
cmp
mov
int
mov
lret
ret
out
call
out
pop
mov
jg
scas
enter
sbb
aad
inc
testb
inc
insl
insl
jno
lret
imul
push
outsl
int3
jo
push
je
aaa
aaa
xor
cwtl
addr16
inc
dec
xor
roll
sub
and
push
add
push
test
xchg
out
push
popf
in
mov
fstp
in
cltd
iret
inc
or
inc
push
jg
lret
icebp
cmp
mov
repz
mov
das
xchg
sti
jmp
xlat
repnz
or
call
arpl
ss
test
push
sub
mov
jo
jae
bound
mov
andb
add
sbb
xchg
hlt
adc
lods
push
mov
cltd
shlb
iret
divb
int
mov
enter
cvtpi2ps
cld
aaa
mov
sbb
adc
je
fimull
rcl
cs
xlat
sbb
pop
xor
push
jns
ss
add
xchg
lods
jne
mov
int
add
xchg
xor
jge
in
jmp
adc
std
test
bts
not
add
lcall
aaa
jg
xchg
adc
int
cmp
dec
test
xchg
pop
add
jne
rclb
mov
lret
test
jb
enter
push
cmp
hlt
cmp
sahf
fbstp
stos
sbb
cmp
push
sbb
push
xlat
lcall
jb
mov
inc
pusha
cmp
dec
jne
sbb
jo
lds
pop
add
mov
and
lods
aad
hlt
mov
or
shrb
adc
int
xchg
dec
lods
and
push
test
scas
pop
push
sbbl
dec
mov
jmp
adc
popa
mov
add
movsl
add
js
popa
ficoms
cmpsl
xchg
sahf
mov
push
lds
insl
in
sbb
sbb
push
decl
sbb
inc
mov
mov
stos
dec
das
mov
leave
pop
mov
inc
lds
lods
sahf
xchg
shlb
cli
outsb
xchg
out
in
into
push
in
loop
lods
in
push
out
lds
cli
jno
xchg
or
hlt
popf
jp
test
mov
je
jbe
daa
mov
pop
mov
incb
fs
push
push
push
and
rcr
leave
ljmp
mov
popf
or
and
stos
mov
sbb
mov
insl
sub
or
mov
push
movsb
xor
jle
push
ror
ljmp
subb
sub
jne
je
add
rorl
repnz
inc
shlb
jl
clc
loopne
jmp
mov
sub
mov
xor
push
jnp
sbb
xor
inc
add
jnp
test
cmp
aaa
adc
mov
stc
dec
dec
aas
jno
jae
daa
mov
dec
mov
movl
lods
dec
cmp
xchg
repnz
cmp
xchg
lahf
push
dec
or
sbb
les
arpl
xor
jmp
lahf
clc
ljmp
xchg
add
xchg
or
sbb
and
or
mov
pop
pop
push
mov
dec
inc
cmp
lcall
mov
jb
sbb
lods
bound
adc
push
movsb
fiadds
push
loop
loope
mov
dec
xlat
and
adc
dec
roll
xor
testl
sub
xchg
icebp
cmp
or
loope
out
call
push
fstpl
not
cmp
fcoms
call
sbb
xor
lock
sub
xor
jg
inc
cli
mov
add
decl
add
xchg
mov
test
fcompl
mov
out
pop
repz
lahf
aam
jnp
and
negl
add
jae
iret
xlat
push
loope
nop
int
sbbl
fnsave
jg
call
inc
in
stc
mov
adc
cwtl
jg
hlt
pushl
pop
jl
xchg
add
test
push
das
lcall
das
push
xchg
jmp
jno
sub
add
leave
sbb
or
push
rcrb
shll
and
fnsave
xor
push
dec
loop
sub
dec
push
pusha
xlat
lods
lret
add
mov
insb
out
adc
lods
pop
add
mov
inc
fildl
pop
popf
sbb
clc
sarb
imul
mov
adc
adc
stos
pusha
lods
sub
cmp
push
add
cli
add
pop
cmc
hlt
cmpsl
sbb
cli
xchg
jmp
cld
jg
lods
test
popa
mov
xor
mov
repz
inc
and
mov
sub
sbb
icebp
notl
inc
xchg
push
jae
out
mov
shll
fiaddl
push
mov
fists
sbb
test
test
scas
std
out
lock
pop
xor
scas
fsubs
je
outsb
ret
sbbb
fildll
cmpsl
test
cltd
push
add
subb
aaa
gs
movsb
sub
outsb
stos
dec
cmpsb
sti
pushf
das
mov
aad
iret
lret
sbb
ret
xor
inc
or
jecxz
or
les
jmp
sbb
js
add
aam
dec
xor
pushl
dec
mov
sbb
int
nop
sbb
dec
sub
scas
cmc
mov
mov
frstor
imull
pop
scas
inc
adc
cmc
pop
mov
adcl
int
aam
les
xlat
mov
les
xor
pop
mov
push
movsl
cmp
sub
out
push
sarl
sub
lahf
mov
fcoml
mov
xor
pop
and
sub
sbb
dec
jmp
test
mov
add
mov
leave
psrad
stos
push
mov
arpl
push
mov
mov
inc
outsl
pusha
sub
and
push
or
sub
mov
cmc
mov
mov
push
imul
dec
das
adc
ljmp
movsb
hlt
repz
int3
je
rcrl
test
push
fildll
arpl
sti
stos
xlat
cs
loopne
dec
or
lret
xchg
int3
shl
jecxz
xchg
adc
dec
push
leave
mov
pop
mov
insb
xchg
subl
arpl
loopne
cltd
pop
rcrl
fidivrl
mov
pop
ja
cmp
andb
xor
negl
xchg
xchg
in
inc
sbb
jb
pushf
pop
sbb
pop
inc
push
sarl
sbb
mov
sub
mov
lods
jecxz
dec
sub
movsl
or
sbb
cs
sar
xchg
cwtl
cli
inc
pop
adc
fimull
sub
xchg
add
mov
data16
call
hlt
mov
in
push
in
int3
dec
jb
insl
jne
pop
bound
and
cmpl
add
mov
sub
lret
inc
mov
mov
cld
or
or
cmc
nop
dec
jmp
movb
mov
mov
pop
inc
outsl
push
or
inc
int3
fbstp
mov
pop
lea
xchg
shll
sarb
stc
pop
mov
jg
inc
push
add
jle
test
jle
mov
lret
fwait
test
cs
clc
push
es
fwait
sbb
cmc
sti
aam
test
out
and
fbstp
hlt
je
jmp
out
lods
addl
cmpxchg
dec
mov
ss
test
lret
pop
cld
fwait
mov
outsb
push
cmc
iret
das
mov
mov
shll
adc
add
jne
mov
and
shll
and
xchg
jl
outsb
pop
mov
push
mov
mov
call
sbb
mov
jno
out
hlt
jns,pn
adc
pop
xchg
outsb
lcall
pop
jne
sub
mov
mov
cli
and
cld
scas
imull
xchg
int
fistpll
ret
ret
cmp
fs
nop
jnp
push
lea
dec
jge
cmp
int
cmp
sbb
pop
xor
sub
hlt
mov
sti
inc
jmp
adc
push
jne
adc
fsubrl
add
lds
xor
and
divl
jo
sub
outsl
arpl
cld
xchg
inc
idiv
push
inc
loopne
mov
push
push
jmp
in
adc
dec
cltd
sub
push
out
in
xchg
cli
jp
lods
pop
pop
or
mov
pop
xlat
adcb
inc
movsb
cmp
fwait
mov
jmp
and
loope
mov
test
stos
gs
call
stos
enter
in
icebp
pusha
jecxz
push
mov
ja
aad
sub
data16
lock
cld
fisttps
push
roll
dec
shrl
cmp
scas
sbb
arpl
or
jl
ja
mov
mov
inc
adc
loopne
mov
push
sbb
fisttpll
cmp
xchg
or
xor
in
dec
sahf
pop
add
adc
dec
or
pop
movsb
sbb
or
sahf
mov
sbb
fadds
insb
xchg
mov
pushf
addr16
mov
xchg
mov
xchg
push
data16
sbb
and
add
or
jo
rclb
jnp
pop
fldl
ret
out
inc
inc
ds
clc
sbb
mov
ret
mov
mov
fwait
into
jecxz
pop
stos
xchg
pop
cmc
push
push
jmp
pop
leave
add
or
repz
pop
lret
aas
cmp
push
pop
leave
imul
lock
loopne
movsb
movsl
push
sbb
outsb
lcall
lods
gs
xchg
xchg
in
loope
iret
imul
jmp
cs
sub
cmp
pusha
mov
iret
test
jmp
push
xor
xchg
cmp
cmp
mov
cmp
lret
test
jne
sbb
fsubrs
fisttpl
fwait
jne
or
mov
sub
or
in
jne
xchg
push
jecxz
adc
or
fildl
mov
inc
mov
out
mov
stos
inc
mov
xchg
pop
jmp
add
imul
sbb
adc
dec
stos
pop
inc
push
mov
loopne
mov
adc
fsubrs
lds
xchg
out
jge
sbb
cmpsl
je
into
les
out
sbb
adc
adc
adc
mov
loopne
cs
mov
mov
mov
idivb
mov
mov
push
mov
pop
dec
mov
sti
xlat
leave
adc
ret
lcall
mov
and
jns
je
sahf
push
dec
add
lcall
call
daa
aaa
inc
mov
movsb
push
sub
int3
loop
in
cli
fcomps
and
add
aam
lret
inc
stos
dec
ja
mov
pop
lret
mov
dec
addb
xor
adc
xchg
and
mov
pushf
in
inc
pop
bound
pop
lea
cmp
cmp
es
ja
pop
xchg
inc
dec
mov
push
mov
mov
xchg
popa
add
leave
mov
jg
imul
push
dec
dec
dec
rcrb
aad
pop
data16
jl
mov
inc
pop
lock
loope
lods
jns
ds
outsl
int3
bound
clc
orl
dec
jmp
cmp
fcmovne
pusha
int3
pop
ljmp
cmp
in
ret
add
stos
sub
cmp
or
push
jnp
lock
inc
call
cmp
sub
test
jp
ds
testb
mov
and
adcb
divl
and
shll
enter
aam
mov
push
out
scas
mov
insb
push
inc
push
daa
lret
cmp
enter
rolb
test
or
cmp
sbb
cli
mov
out
xor
xchg
movsb
sub
jmp
xchg
adc
enter
xor
js
sub
loopne
cmpsb
xchg
mov
or
jb
ss
imul
decl
and
push
push
orb
dec
adc
mov
adc
pop
push
int
push
mov
push
mov
push
lock
adc
and
test
cwtl
jmp
mov
jmp
or
out
pop
cmpsb
xchg
and
xor
mov
push
inc
cmp
cld
sbb
sbb
add
test
mov
rclb
lods
std
jnp
sub
xchg
jle
xchg
mov
enter
test
inc
push
push
xrelease
loope
iret
xor
push
mov
mov
lea
cmp
imul
pop
xchg
push
push
and
jecxz
mov
orb
ret
xor
cmp
sbb
loopne
mov
jmp
adc
addr16
repz
cld
fs
inc
pop
pop
or
movsl
cmp
and
ja
test
mov
shll
fldcw
mov
cltd
sbb
add
in
add
and
push
jg
and
xchg
xor
popa
jnp
negl
sbb
pop
mov
cmpsl
loop
pop
in
xor
jno
jb
pop
pop
and
cmp
or
addr16
inc
gs
mov
scas
sbb
push
lcall
pop
movl
aaa
in
jne
push
mov
mov
or
mov
scas
mov
mov
sub
adc
pushf
xchg
push
or
inc
movsl
roll
fwait
lahf
adc
test
fs
rorl
and
out
loopne
sbb
test
jne
fnstcw
and
cmp
jle
jae
mov
jmp
hlt
test
adc
cmp
gs
imul
ret
push
dec
mov
push
mov
cli
mov
sub
dec
push
shrl
mov
aam
xchg
fstl
mov
xchg
or
test
pop
add
and
and
push
push
cltd
adc
sub
or
lea
xchg
sub
mov
cltd
add
data16
xor
mov
jne
push
xchg
cmp
push
pop
mov
loopne
rep
in
add
scas
enter
mov
xchg
addr16
mov
adc
push
jae
test
rorl
mov
xor
sbb
and
stos
pop
jb
xor
and
pop
js
movb
das
inc
pop
mov
and
pusha
stc
fst
lock
push
add
movsb
aad
xorb
popf
add
jp
stos
pop
iret
loopne
rdpmc
icebp
rcll
jnp
cmp
adc
sbb
fsts
ret
ret
sub
in
sub
lret
mov
mov
fisttpl
psubsw
ljmp
xchg
clc
addr16
and
dec
inc
lret
pop
pop
test
add
in
inc
cmc
lods
or
dec
push
mov
pop
popf
adc
pop
add
adc
fiaddl
fnstsw
repnz
lock
mov
pop
jg
ss
fdiv
lods
mov
pop
sub
cmpsl
fisubrs
nop
inc
jae
sbb
in
xor
sbb
fildll
or
sbb
adc
xchg
pop
in
push
mov
das
adc
and
inc
add
sub
or
push
loop
pop
mov
fstps
lods
sti
fisubrs
and
aad
outsb
push
cmpsb
leave
add
shlb
int
sbb
or
icebp
jmp
mov
sbb
mov
fucomi
lret
mov
movsl
push
xchg
in
insb
int
jmp
dec
js
ret
repnz
inc
das
and
fldt
mov
dec
push
fildll
mov
fdivrs
xor
mov
insb
and
fistpl
cmpsb
fisttpl
xor
lods
jne
call
inc
fcomi
das
lahf
xor
pushf
fisttpl
sti
outsl
mov
jl
insb
addl
push
aaa
testl
push
pop
pop
insb
leave
popf
icebp
sbb
push
pop
subb
cmc
pop
lds
insl
adc
cmp
sbb
jle
pop
xor
mov
movsb
cmc
mov
aas
or
and
push
push
inc
jno
arpl
dec
add
adcb
insl
or
int3
jbe
dec
rcl
sub
inc
mov
shr
cmp
xor
mov
jb
adc
lea
add
cmp
fisubs
sub
addr16
mov
aas
sbb
std
xchg
movsb
add
adc
scas
inc
mov
lods
and
mul
loopne
mov
imul
aam
repnz
sbb
daa
pop
adc
mov
fs
fs
sti
sub
inc
add
pop
popf
data16
ds
cmpsl
dec
sbb
subb
fcmovb
sbb
or
dec
jne
clc
xchg
add
adc
fld
ljmp
test
std
fs
cmp
cmp
jnp
pop
mov
inc
hlt
out
lea
mov
xchg
fildll
jbe
out
push
mov
test
sub
lods
das
fbld
fldenv
or
jp
test
in
lret
xor
dec
add
shl
out
push
sub
mov
popa
aad
iret
sub
xor
into
dec
xchg
push
xchg
mov
ss
in
cmp
dec
xor
jno
xlat
xlat
lahf
loop
outsb
andl
jno
push
shll
mov
mov
pop
dec
bound
ljmp
in
cltd
xor
xchg
cmp
sbb
in
jmp
test
and
sbb
and
jno
lahf
lds
pop
shll
inc
sub
lret
sbb
lea
lods
mov
push
mov
imul
loop
cmc
sbb
sbb
mov
mov
fwait
mov
icebp
shrb
mov
in
sub
and
pop
fbstp
inc
jmp
lret
mov
push
xchg
adc
dec
xor
dec
pop
fsts
cmp
int3
aad
cmpsl
in
cmpsl
mov
lcall
jecxz
inc
push
push
sbb
jno
out
cwtl
xchg
pop
out
sbb
dec
hlt
xor
addl
lcall
lret
out
loope
mov
int3
iret
mov
mov
jge
loop
iret
sbb
and
add
dec
dec
pushl
daa
inc
sbb
pop
push
sub
and
sub
jnp
jo
jns
sub
mov
sbb
stc
push
xchg
pop
movsb
call
add
lcall
mov
aam
inc
pop
jbe
adc
or
xor
sbb
add
mov
test
adc
cmp
sub
push
and
call
sbb
dec
pop
push
xchg
orb
rorl
outsl
loop
jmp
sub
enter
mov
ret
mulb
push
outsl
cmpsl
lock
sub
pop
insl
jmp
lret
cmpsb
or
hlt
out
addr16
or
addr16
test
mov
das
sbb
iret
xor
jge
cwtl
mov
mov
scas
jle
iret
lcall
addr16
sbb
xor
test
adc
push
jno
aaa
xorl
mov
shlb
inc
or
jae
js
mov
cmp
out
das
inc
adc
leave
into
fs
hlt
xor
pusha
fxch
jne
cmp
jp
aam
xchg
or
sbb
arpl
inc
inc
adc
pop
scas
aaa
dec
into
add
xor
mov
arpl
mov
mov
fidivl
xchg
mov
xchg
jecxz
fs
pop
nop
jo
lcall
dec
xchg
inc
lods
lret
in
fs
mov
jge
scas
movsb
adc
sti
mov
pop
dec
push
loope
imul
sbb
mov
xsaves
or
int3
je
outsb
and
adc
sar
movsb
leave
add
in
push
cmp
sahf
lods
clc
insl
outsb
nop
adc
cmp
mov
lds
adc
mov
xchg
pop
and
push
ja
adc
lcall
int3
loope
out
jle
sbb
push
sub
out
negl
clc
or
mov
or
and
jns
aaa
rol
jnp
jbe
pop
push
fcompl
mov
in
lret
dec
jecxz
int
shlb
gs
je
or
sbb
xchg
cli
in
sbb
mov
cs
test
sub
push
outsb
lods
in
mov
dec
mov
jns
and
inc
addb
xlat
cmp
pop
ljmp
repz
scas
rorb
and
mov
mov
adc
pop
jp
mov
hlt
fsubr
icebp
mov
loopne
outsb
cmc
inc
push
jg
insl
in
fidivrs
lcall
jp
and
dec
xchg
test
andps
and
fldz
xchg
mov
scas
mov
pop
fcoml
jo
xchg
stc
ret
icebp
inc
jp
add
mov
fbld
test
add
mov
xchg
mov
inc
cmc
divb
adc
sbb
dec
outsb
and
push
lods
jns
mov
jne
cmc
xchg
outsb
xchg
arpl
mov
xor
xchg
aad
jecxz
out
mov
mov
lret
mov
mov
sbb
mov
sbb
xor
subl
js
scas
and
cwtl
scas
add
mov
and
ret
pop
sbb
movsl
jns
xchg
sub
stos
jg
sbb
lea
jae
sbb
cmp
insb
dec
ds
fisubs
xchg
pushf
ja
or
cmp
mov
test
dec
imul
xchg
dec
ds
fbld
mov
xchg
mov
sbb
fyl2xp1
jnp
jg
repz
cmpl
lock
movsb
pushw
xchg
stc
test
xor
cwtl
hlt
movsl
xchg
sti
cmp
arpl
adc
add
movsl
nop
adc
pop
jnp
jmp
test
fs
inc
jmp
and
cli
rcrl
push
cld
stos
jl
and
and
and
pop
jbe
into
push
xchg
out
sub
ftst
das
dec
mov
bound
sbbl
int
mov
aaa
daa
sbb
subl
movsl
stos
dec
pop
dec
js
ficoms
mov
xchg
sbb
addl
add
pop
xor
pop
push
sti
lret
daa
xchg
jbe,pn
stos
jge
mov
outsb
cmpl
jb
mov
ret
fdivrl
repnz
sbb
mov
aaa
clc
stc
mov
sbb
or
mov
jno
cmp
xchg
adc
test
arpl
cmp
push
ja
xor
mov
mov
in
into
call
pop
jae
ljmp
shrl
jp
or
pop
bsr
test
test
jge
sbb
mov
lret
adc
xlat
mov
inc
pop
mov
or
fstps
daa
jge
lods
add
sti
or
iret
cmp
js
cld
xchg
xchg
in
ja
cmp
movsl
frstor
test
call
jbe
rdmsr
mov
sub
ret
scas
xor
sub
jns
xchg
push
pop
stc
inc
divl
mov
adc
xchg
shrb
inc
inc
int3
and
pop
insl
add
les
xor
mov
test
mov
jle
xchg
dec
sub
sub
sahf
mov
rcll
jmp
mov
dec
lock
pop
push
test
lods
fisubrs
neg
jns
insl
mov
sbb
js
xor
sti
inc
loop
push
xchg
mov
push
in
sub
arpl
dec
pusha
cmpsb
ss
mov
mov
mov
xacquire
movsl
pop
add
nop
stos
outsl
aad
popf
ds
hlt
test
rcrb
cmp
jmp
lahf
ret
xor
negl
push
sysenter
das
aad
cltd
xchg
and
mov
pop
jle
shll
cmp
lods
mov
ljmp
mov
pop
mov
repz
lock
hlt
roll
sbb
cmpsb
std
cmp
inc
mov
mov
mov
mov
mov
fs
sbb
jge
out
popf
cmp
lock
lcall
lcall
fdivrs
sub
jnp
adc
cli
dec
pushf
mov
jno
and
inc
jnp
adc
cltd
imul
aam
std
fmull
inc
cmpsb
out
mov
mov
ljmp
adc
adc
push
test
mov
lar
sti
mov
push
rcll
fstpt
add
xchg
sbb
push
stc
inc
mov
scas
adc
mov
jns
mov
in
push
pop
push
pop
push
lea
jge
mull
mov
push
or
push
xor
nop
mov
mov
inc
dec
repnz
xor
and
jp
mov
daa
in
dec
shll
push
call
hlt
scas
mov
push
mov
mov
mov
mov
and
inc
xchg
sub
das
sbb
and
mov
mov
push
jne
jnp
movsb
pop
cmp
cld
cmp
cmc
cmpsl
mov
push
mov
das
shlb
adc
mov
pushf
adc
aad
jae
mov
push
add
fsubp
test
into
aaa
fwait
lea
mov
mov
xchg
mov
and
jecxz
leave
lahf
std
stos
sar
jmp
pop
sti
cmpl
push
pop
inc
repz
jb
sti
arpl
cwtl
dec
inc
cmpsl
cld
xchg
mov
add
mov
xchg
fldcw
call
mov
cmpsl
xorb
xlat
lock
lss
cmp
addb
es
jl
aad
popf
push
xchg
mov
lcall
xor
clc
js
push
outsb
push
daa
xchg
mov
pop
xor
into
xor
out
aas
mov
fimuls
stc
cmp
adc
ja
mov
andb
shrb
popf
iret
add
inc
adc
jge
add
push
pop
lock
or
cli
adc
mov
push
les
in
inc
das
inc
int
or
dec
xor
mov
mov
dec
push
pop
dec
cmpsb
inc
mov
rcrb
enter
popf
and
or
xchg
pop
push
xor
or
cmc
mov
repz
jne
shlb
dec
xchg
test
push
loope
mov
outsb
lods
and
or
mov
cmp
jle
daa
lret
sbb
leave
mov
cmp
pop
add
gs
and
cwtl
ret
cmc
dec
imul
sub
shrb
mov
aam
hlt
jbe
fmull
sbb
cmp
leave
pop
cwtl
xchg
pop
fst
sub
pop
lods
lcall
lods
aas
cmp
lds
push
push
in
fmuls
pop
test
cmpl
ret
lds
push
mov
outsb
idivb
xchg
aam
addl
mov
adc
pushf
out
imul
incb
movsl
loop
movsl
xchg
xor
jmp
mov
push
hlt
sub
out
repnz
inc
xor
cli
ficomps
lds
jecxz
out
cmovnp
aad
imul
adc
dec
cli
test
fdivl
and
inc
cmp
dec
sbb
and
add
jle
enter
mov
pop
jb,pn
fists
out
pusha
imul
popf
lock
ljmp
ficoml
push
bound
das
adc
mov
fists
lods
and
cmpsb
sarl
jmp
fadd
adc
add
jno
cmp
loopne
sahf
mov
add
pop
jae
xor
imul
inc
test
mov
mov
hlt
adc
in
sahf
jle
mov
dec
mov
sbb
pop
fstl
icebp
jp
rorb
das
outsb
or
jnp
inc
mov
mov
jge
in
push
mov
mov
data16
hlt
shll
and
push
mov
inc
in
pop
movsl
iret
cmpsb
sbbb
icebp
push
and
push
js
int
jecxz
out
sub
shll
clc
xor
xchg
adc
push
add
xlat
cmp
cmp
out
mov
je
sub
mov
vmwrite
push
jmp
imul
mov
sar
daa
ffree
fisubrl
push
xor
loop
sarb
cs
and
push
push
rcr
stc
push
jae,pn
test
scas
lahf
rcrl
adc
mov
scas
mulb
dec
mov
sub
rol
jae
int
and
push
stos
fimull
mov
std
addr16
adc
mov
mov
cmpsb
repnz
rcr
add
pop
add
movsb
push
push
das
lock
sbb
adc
rorl
sub
mov
push
call
add
in
dec
jnp
xchg
leave
or
push
push
cmc
mov
addl
xchg
testl
and
xor
mov
dec
sub
test
add
and
pop
and
inc
jo
es
outsb
movsb
mov
mov
es
ficompl
sub
jbe
aad
dec
or
adc
loopne
cs
xlat
mov
in
icebp
dec
mov
pop
stc
mov
or
jmp
jbe
and
test
test
lret
orl
or
orb
xor
ss
cmp
mov
nop
jp
std
mov
pop
mov
pop
lahf
fsubrs
xchg
into
add
sub
int3
pop
xor
out
fdecstp
jecxz
in
clc
outsl
movsl
jns
pusha
je
add
ljmp
sub
fmuls
arpl
jmp
lods
rorb
test
pop
addl
ja
fsubl
pop
push
test
iret
dec
mov
fcmovnu
jbe
sub
xor
rcll
cli
gs
jno
jne
cmpsl
jno
bound
addr16
inc
je
in
mov
xor
icebp
jecxz
mov
inc
sub
cwtl
or
or
jge
je
push
out
add
arpl
ficoms
sbb
cmc
out
jp
inc
pop
jo
shll
mov
fdivp
xor
hlt
and
sbb
adc
iret
test
aaa
dec
js
stos
push
sbb
push
pop
cmpsl
cmp
mov
jbe
jp
mov
mov
jecxz
lock
inc
xchg
dec
add
sbb
cmp
mov
imul
clc
inc
and
clc
cmp
aaa
stos
clc
mov
and
pop
test
mov
push
cmc
and
fs
pop
in
out
repz
add
ret
pop
cld
bound
iret
push
lret
add
lret
pop
xor
xchg
push
sbb
adc
cmp
out
ja
or
cmc
add
sub
cmp
out
ja
pop
mov
call
ficoml
lods
movsl
pop
xor
imul
or
mov
or
jae
or
push
aad
jne
pop
mov
sbb
jno
inc
mov
lcall
arpl
ret
out
xor
call
loopne
or
pop
xor
and
out
pop
cmc
dec
sub
popa
inc
pushl
jo
leave
add
pop
fisttps
out
push
in
inc
adcb
pop
in
test
adc
lret
or
add
pop
fs
and
and
dec
sbb
mov
xor
sub
int3
aas
mov
push
add
aaa
or
in
loope
repnz
pusha
xchg
mov
ss
stos
sbb
cmp
add
mov
mov
fbld
aam
lret
cmp
adc
js
mov
clc
rcll
xchg
inc
pushaw
pop
mov
lds
mov
mov
push
or
mov
mov
push
cmp
scas
jno
jae
test
test
lods
ret
in
movsb
push
cmp
mov
pop
cmc
addr16
out
repz
mov
jns,pn
inc
sbb
sub
mov
mov
lret
jne
ret
xchg
sarb
addr16
lahf
stc
cmpsl
fdivrs
in
cmp
repnz
popa
fwait
rdpmc
or
xchg
sbb
xlat
fistpll
ds
add
push
inc
cmp
mov
push
sub
jge
and
stc
dec
sbb
cmp
arpl
test
fs
add
cs
xor
mov
add
or
sti
mov
pop
xchg
pop
loopne
lahf
pop
fcmovu
rcrl
mov
sub
xor
dec
enter
inc
insb
cmp
loopne
sbbb
inc
lea
mov
lret
xor
adc
cmp
insl
jmp
cli
xchg
ret
fs
dec
or
add
xchg
aaa
lahf
sub
cmp
fs
xchg
fwait
pop
fcoml
pop
add
in
pop
or
andl
adc
xchg
dec
sahf
mov
stos
loope
pop
sbb
inc
test
out
cmc
push
mov
ret
mov
xchg
xor
fdivs
imul
cmpsl
xchg
mov
dec
xchg
jmp
mov
stos
movsb
dec
pop
clc
lcall
mov
jne
cwtl
sbb
repz
dec
test
or
xchg
mov
xor
sub
mov
aad
in
sub
shlb
cld
int
mov
cmpl
fnstcw
rorl
push
fisttpll
shlb
add
in
mov
mov
push
out
cmc
jecxz
lods
ljmp
push
sti
incb
dec
push
dec
mov
movsl
jae
jb
mov
dec
pop
repnz
jo
enter
ficomps
xor
add
mov
test
jno
mov
ret
mov
out
fisttpl
mov
sbb
mov
and
cmpxchg
xchg
mov
cld
mov
mov
jbe
xchg
jmp
push
pop
dec
mov
pop
xchg
mov
call
ret
xchg
test
imul
sbb
into
pusha
ljmp
ffreep
push
nop
jmp
popa
jno
or
sbb
jns
daa
sub
loopne
ret
mov
pop
xlat
xor
popa
rclb
pop
dec
jecxz
in
push
sahf
gs
outsl
jns
pop
insb
sub
pop
jp
fcmove
ljmp
into
fmull
xor
mov
repz
adc
ja
sbb
loopne
pop
dec
pop
adc
sbbl
and
aad
cmp
mov
int3
mov
add
pop
and
dec
ljmp
cmp
pop
les
jl
sub
adc
push
rolb
push
jnp
xor
pop
xchg
je
dec
sbb
into
fdivrs
in
jbe
sbbb
pop
push
aaa
add
xchg
mov
int
jb
out
and
pop
jp
xchg
mov
cmpsl
xchg
hlt
inc
jns
mov
adc
cltd
mov
aad
cmpsb
mov
fcompl
clc
xchg
xchg
inc
cmc
mov
nopl
mov
mov
mov
aas
dec
and
fistpll
lahf
int
out
inc
push
mov
fisttpll
push
cmp
cmp
inc
xor
mov
xchg
or
adc
icebp
sub
mov
lods
xor
jns
adcl
sbb
sbb
fwait
jmp
imul
push
mov
sbb
dec
pop
repz
jp
and
test
stos
clc
and
and
inc
sub
dec
inc
mov
je
loop
jmp
loop
lds
nop
sbb
mov
mov
cmp
mov
cld
pop
mov
xchg
in
dec
jp
cmpsb
mov
pop
xchg
rclb
subb
test
lods
xor
mov
sbb
pop
xchg
pop
xchg
push
mov
movsl
in
push
int
cli
lret
pop
pop
loope
xchg
daa
sub
imul
clc
inc
cmp
inc
mov
add
js
mov
stc
aad
jl
cmp
sub
icebp
cmp
faddl
popl
push
mov
fistpl
out
imul
fs
sbb
cmp
bswap
cmpb
add
lret
fs
int
inc
nop
idivb
lock
xor
or
shrb
mov
push
lods
insb
push
adc
pop
jle
mov
test
imul
push
inc
stos
pop
fwait
push
scas
dec
lock
fwait
xor
ljmp
xchg
clc
outsb
and
xchg
leave
or
inc
sub
add
test
mov
repnz
sarl
adc
test
iret
mov
into
imul
sti
fst
xor
scas
xor
mov
mov
add
add
cmpsl
cmpsl
mov
lock
xor
mov
dec
and
dec
xor
in
xchg
xor
xchg
movsb
push
and
loopne
sahf
pop
frstor
add
cwtl
outsb
fcomps
fs
pushf
sahf
mov
jnp
sbb
or
in
jae
sub
inc
std
adc
ret
mov
sub
xlat
sbb
sub
sbb
pop
add
sbb
fwait
pop
push
pop
or
movsb
adc
hlt
into
stos
push
and
ret
in
lret
loopne
jle
je
jmp
imul
push
push
cmp
dec
inc
bound
and
ljmp
ljmp
jae
push
and
mov
and
loope
imull
imul
test
add
xor
out
pop
imul
scas
rcrb
mov
cmpsl
imul
adc
cmpsl
fcomps
xchg
dec
push
jp
imull
loop
xchg
jp
ss
sub
pop
aam
and
cmp
cmpsl
inc
addb
cltd
cmp
std
insl
test
inc
and
out
jmp
orl
cmp
scas
xor
push
movsb
bndstx
cmp
push
xor
cmp
add
test
mov
ficoms
jg
out
lret
mov
jmp
enter
imul
lock
add
clc
xor
scas
mov
add
or
jne
mov
jge
stc
aam
cmc
pop
or
jle
cmp
movsl
test
pop
add
xchg
add
movsb
inc
pop
shr
cld
pop
cli
xchg
dec
add
adc
adc
adc
ljmp
inc
or
outsl
sbb
inc
pop
aam
jb
nop
xor
mov
and
sbb
push
inc
sahf
push
jg
rcr
mov
mov
fst
mov
mov
adc
dec
les
xor
xchg
add
push
inc
adc
add
aam
xchg
mov
fwait
rorb
sysenter
ftst
in
adc
jne
xchg
dec
push
dec
mov
hlt
fsubrl
jmp
cmp
mov
pop
test
dec
dec
std
cwtl
mov
push
jle
scas
push
sbb
fists
loop
in
addr16
out
and
out
and
loopne
and
insb
fwait
aas
push
imulb
dec
pop
dec
fldt
xor
mov
icebp
mov
mov
mov
sub
fwait
jmp
jge
cmpsb
lcall
lods
push
mulb
cmp
mov
push
and
test
inc
lcall
pop
je
add
cld
daa
mov
mov
sti
mov
test
fbld
xchg
rorb
stos
cmp
cwtl
push
push
inc
mov
sbb
movsb
lret
imul
mov
push
push
out
adc
movsb
pop
test
xlat
mov
mov
dec
fs
cwtl
xchg
fiaddl
repnz
push
mov
cmp
ror
scas
faddl
aas
jno
or
clc
cmp
enter
jp
and
inc
jbe
and
jge
pop
mov
orl
push
shrl
imul
and
lea
test
jbe
xor
push
dec
mov
rcll
mov
mov
lea
pop
movb
xlat
push
mov
repnz
sub
pop
jne
loope
push
rorl
subl
ror
sbb
xchg
jo
xchg
fimull
mov
fs
mov
pop
lcall
fs
xchg
fcomps
pop
xor
outsl
push
lods
add
cs
xchg
jns
pop
cwtl
data16
xor
jae
mov
cmp
inc
sbb
mov
sbb
xchg
orl
rcr
outsl
and
adc
rcl
shlb
mov
mov
xlat
and
sbb
int3
adc
xchg
ret
fidivrl
ss
mov
sbb
cmp
cmp
xor
xchg
fdivrs
mov
mov
mov
outsb
call
lahf
or
push
and
fnstsw
lods
hlt
mov
add
lea
mov
lods
or
test
sub
push
mov
mov
and
aaa
cmp
sbb
arpl
adc
and
and
shr
add
jbe
mov
sub
gs
xchg
mov
mul
or
pushf
cmc
loop
inc
and
dec
ficoms
loope
xlat
xlat
mov
in
adc
adc
jmp
push
pop
mov
sar
push
inc
icebp
out
pop
dec
cs
ja
push
xlat
lock
rol
adc
dec
push
push
inc
mov
test
sub
lds
shlb
push
aam
mov
and
std
push
pop
loope
push
sub
imul
aas
xchg
adc
out
in
fwait
cs
mov
icebp
or
sti
inc
inc
and
repnz
out
lcall
xor
push
or
push
push
enter
mov
sub
push
xchg
cmpsl
pop
xor
jmp
cmp
and
push
adc
ret
mov
repnz
test
setnp
das
and
stos
pop
lock
movsb
into
and
push
push
dec
das
push
loopne
add
pop
adc
out
popa
pop
dec
in
testb
sahf
shll
hlt
outsl
popa
jne
aaa
pop
xchg
fdivrp
push
dec
nop
jecxz
cld
pop
xorb
cmc
sbb
roll
into
ja
aas
ljmp
xchg
and
pop
icebp
sub
aas
das
mov
ja
mov
test
jae
and
sbb
xchg
inc
jmp
adc
ja
in
mov
add
dec
into
push
outsb
int3
mov
push
scas
out
fcoml
scas
mov
jbe
das
bts
mov
mov
rcrb
sbb
in
mov
add
enter
inc
pop
sbb
insb
xchg
and
lret
enter
sub
dec
int
cld
ja
call
jbe
in
mov
enter
scas
or
imul
arpl
push
dec
xchg
cld
lds
sub
push
in
push
mov
jg
out
xor
push
push
in
fbld
cmpsb
icebp
dec
lret
cmp
aad
sub
mov
cmp
cmp
inc
lods
stos
cmpsb
mov
add
aad
jecxz
push
in
repz
and
in
add
stos
cli
stos
xor
sub
add
out
jp
lea
pop
add
adc
fstps
mov
imul
sbb
jbe
hlt
mov
cwtl
adc
pop
fcoml
movsb
in
mov
inc
das
ret
inc
adc
loop
adc
pop
stc
mov
push
adc
out
addl
pop
mov
rolb
and
adc
repz
mov
jbe
inc
imul
and
sub
mov
mov
data16
sbb
lret
inc
mov
add
jmp
lods
xchg
outsl
jne
xor
pop
adc
mov
sbb
fcoms
ret
pop
xchg
rcrl
push
push
hlt
ds
unpckhps
shll
loope
jo
scas
sub
mov
mov
cmpsl
out
pop
add
mov
out
push
hlt
jns
rcl
stc
push
xchg
shll
dec
popa
pop
mov
adc
pushf
ljmp
dec
repz
xchg
sub
cwtl
pushf
mov
in
jge
mov
call
ficompl
and
mov
loop
pop
jno
jnp
jg
inc
adc
loop
negl
test
cli
outsl
fsubrs
xchg
outsb
fdivs
lahf
mov
and
stos
in
adc
mov
int3
lods
mov
loop
mov
movsb
addr16
test
mov
into
jbe
aaa
fidivs
jno
xchg
jecxz
or
push
jo
push
xor
and
and
fwait
push
or
jg
push
mov
loope
cld
popl
testl
frstpm(287
adc
lea
push
xchg
cmpsb
icebp
rorb
xor
inc
test
adc
sub
jecxz
mov
push
jecxz
adc
xchg
inc
jo
add
xchg
jb
mov
push
xor
mov
sbb
sbb
sar
adc
push
or
mov
xchg
sub
movnti
rcrb
es
rclb
and
int3
lods
pop
in
sub
lcall
push
xlat
mov
adc
inc
test
test
aaa
sub
shl
sbb
das
sub
xchg
mov
sub
jg
dec
xor
cmp
cmpsb
scas
dec
xor
insb
jnp
ret
sbb
cmc
sbb
ljmp
repnz
divb
lock
mov
or
cltd
movsb
and
sbb
or
repnz
cmp
push
rorl
sub
dec
bound
ljmp
push
lods
jg
push
xor
xchg
add
jbe
mov
mov
jecxz
dec
sub
sub
mov
push
cmc
cmp
xchg
testb
sub
dec
sub
or
xor
fwait
mov
sbb
fcomp
inc
int3
pop
fisubl
sbb
cld
xor
arpl
xchg
inc
gs
sbb
dec
test
std
jle
jecxz
xchg
testb
icebp
adc
adc
stos
popl
adc
mov
shl
xor
adc
repz
mov
mov
int3
jecxz
sti
mov
insb
into
and
ret
inc
fsubrs
sbb
cs
loop
out
jecxz
xchg
jg
push
mov
jne
in
out
jg
sti
mov
mov
jmp
cmp
shll
mov
cs
out
pop
mov
adc
adc
nop
rolb
push
ror
fmul
push
cmp
pusha
mov
lret
aam
sbb
xor
xchg
adc
cmp
pusha
filds
ljmp
sub
test
mov
pop
movsb
or
pop
xchg
mov
and
stos
cmpsb
enter
pmovmskb
add
add
and
jae
xchg
dec
cmp
xchg
xlat
push
jmp
mov
push
push
jge
dec
mov
inc
mov
xchg
and
jns
push
mov
and
addr16
repnz
or
loopne
shlb
dec
es
pop
cld
mov
lret
test
call
out
or
inc
inc
mov
or
aaa
inc
ljmp
sarl
mov
jnp
aaa
lcall
lea
movsl
aaa
push
cmpsl
in
sar
dec
les
sahf
pop
adc
loope
xchg
adc
push
lds
ret
cmpsb
sbb
inc
fmull
in
pop
movsl
cmc
fwait
cmp
push
cs
lods
xchg
inc
jge
out
fnstsw
sti
sub
lods
xlat
mov
or
mov
in
dec
and
cwtl
mov
fnstcw
jno
insl
hlt
ret
test
decl
sub
pop
outsb
loope
push
xor
mov
xor
add
jp
xor
aas
xchg
pop
cmp
xchg
decb
push
fistpl
ret
imul
and
sbb
push
lcall
jmp
outsb
aam
sti
out
xlat
cmp
mov
ret
sarl
push
sbbl
jp
xchg
fbstp
push
fcomip
daa
pop
int3
mov
sub
fisttps
xor
pop
jmp
sub
arpl
out
mov
xor
call
call
push
scas
daa
or
jl
aas
dec
jno
mov
mov
mov
cmpsb
push
sub
inc
or
leave
mov
shl
mov
pushf
test
jno
in
lods
aad
iret
loop
stc
popa
insl
sbb
push
addr16
ja
jae
and
call
push
push
test
pop
jae
xlat
daa
mov
add
test
sarl
xor
sti
cltd
lods
or
and
movsb
mov
outsb
incb
dec
mov
outsb
dec
push
dec
cmp
cmp
lods
in
icebp
dec
test
adc
jno
and
sbb
pop
push
push
nop
std
inc
inc
ret
sbb
and
jg
xor
test
icebp
lods
sub
mov
addr16
adc
xor
in
and
sbb
jae
mov
pushf
push
sar
sbb
and
jno
pop
add
cltd
jns
ja
cli
cmp
test
sahf
stc
pusha
stc
mov
mov
outsb
jg
iret
outsl
in
ds
aad
es
shl
inc
mov
sub
iret
mov
icebp
sbb
stos
add
sub
adc
test
fmuls
std
aaa
loopne
adc
enter
hlt
adc
aam
dec
mov
test
mov
loope
mov
or
dec
mov
les
ja
imul
int
xor
xchg
adc
push
rolw
out
test
cmp
push
ja
cmpsb
and
add
mov
mov
fnsave
and
cmp
adc
mov
jp
stc
pushf
inc
sub
repnz
ror
jl
hlt
add
mov
mov
and
mov
iret
push
adc
xchg
mov
push
call
push
cltd
push
in
and
rcrb
lea
inc
imul
fcmovb
push
adc
lods
stos
pop
int
inc
ficomps
scas
or
arpl
cmp
nop
dec
pop
sahf
dec
xorps
aaa
xor
es
jmp
out
push
cmp
ss
push
shll
inc
test
mov
push
lcall
shr
push
rclb
lods
push
mov
adcb
sbb
fcomip
sbb
and
sbb
cs
xchg
lods
dec
icebp
andl
daa
mov
sahf
sbb
fistpl
xchg
sysret
dec
jns
lock
sub
lods
gs
int
or
lea
rcl
push
testb
or
arpl
aas
mov
sub
and
xchg
loope
popf
out
movhps
push
sbb
pop
inc
cmpsb
adc
popa
fcmovne
and
adc
test
cmpsb
sbb
enter
stos
dec
imulb
mov
fstpt
mov
adcl
cmp
mov
andb
aas
jo
adc
test
add
ja
or
cli
pop
or
push
lock
mov
test
xor
aas
mov
cmp
out
jle
mov
out
enter
push
pop
test
test
adc
inc
dec
jl
add
cmpsl
fcoms
fstl
cmpsb
scas
ss
scas
fcmovu
dec
in
push
add
push
pop
xchg
movl
xor
scas
jnp
and
addr16
addw
lea
sbb
sub
aas
nop
sbb
cmp
jp
pop
rclb
fbstp
fimuls
std
in
dec
sub
cmp
test
push
scas
mov
xchg
dec
outsb
mov
sti
pop
push
les
sbb
push
clc
and
adc
bound
inc
ds
dec
push
shll
popf
sub
push
out
out
cmp
fistl
xor
dec
jo
cmp
dec
test
dec
mov
xchg
sbb
pop
rolb
nop
sub
push
arpl
ljmp
lods
mov
mov
jb
mov
std
cmpsb
pop
sbb
inc
push
outsb
loope
sbb
dec
mov
inc
std
iret
and
sbb
sub
adc
jae
jp
loope
mov
dec
pop
pusha
sub
shl
push
lock
push
andl
repz
cmp
cmp
sub
push
subl
xchg
jno
mov
out
xchg
and
repz
sub
enter
bound
push
inc
ljmp
adc
lret
jo
mov
push
aam
xchg
adc
fstps
mov
and
imul
and
or
iret
addl
jecxz
or
mov
sti
xor
fs
pop
imul
sub
fistps
shrb
mov
jne
jecxz
mov
jle
sbb
dec
xor
cli
ss
pop
imulb
test
test
popf
mov
jmp
jns
fnstcw
push
xchg
fildll
outsl
pushf
jno
and
lea
sub
cmp
cmc
dec
jge
adc
stos
xor
add
xor
fildll
dec
loop
push
add
pop
inc
fcomip
movsb
add
loopne
cmp
stos
ds
adc
inc
or
fiaddl
fistps
insl
test
mov
fldt
push
fildl
push
xchg
xchg
mov
xchg
xor
das
outsb
mov
je
mov
ss
inc
rcr
sbb
in
cs
or
mov
std
mov
inc
push
add
pop
scas
jmp
xchg
cmp
int
adc
mov
icebp
mov
lret
sbb
pop
push
mov
scas
stos
add
mov
adc
gs
pop
shlb
lock
pop
jmp
jg
and
fdivrl
mov
xchg
mov
mov
mov
xchg
xor
pop
idivb
fs
imul
adc
xchg
imul
outsl
icebp
aaa
fldenv
jnp
xor
cmp
push
fiadds
push
cld
fucomp
aam
ds
fstps
mov
leave
das
daa
jnp
and
pushf
hlt
fwait
and
push
repnz
pop
push
je
push
imul
jle
lret
ljmp
xchg
pushf
jle
repnz
icebp
push
stos
lret
adc
js
jmp
fsubs
pop
test
loop
sbb
mov
mov
nop
jp
subb
js
insb
es
loope
xor
adc
dec
cmp
pop
daa
or
dec
into
aas
lahf
inc
xor
idivl
rol
cmpl
iret
inc
es
xor
lret
sar
pushf
pop
xchg
test
add
jmp
mov
enter
aam
push
or
int3
loope
push
repz
add
and
or
sarl
mov
mov
arpl
leave
sahf
mov
out
aaa
jae
xor
xor
fidivrs
push
leave
adc
sti
scas
in
and
xor
adc
sti
jns
aad
and
add
sbb
adc
stos
xchg
js
mov
push
loope
stos
pop
mov
bound
outsl
lods
mov
sub
stos
ret
and
add
cld
test
aas
jge
dec
popw
inc
add
push
ss
push
test
jg
out
jg
cmc
pusha
data16
dec
or
add
inc
inc
les
adc
mov
xchg
or
inc
push
leave
mov
hlt
xchg
shr
xchg
lea
and
mov
mov
xor
fstpl
xchg
int3
jno
xchg
mov
mov
out
and
mov
mov
add
in
inc
subb
cmp
hlt
mov
ret
adc
jge
ret
and
repz
add
lea
xlat
fstl
lret
sti
add
push
inc
ret
fildll
dec
inc
cmp
ljmp
push
xchg
ret
xchg
and
push
test
pop
add
repnz
sbb
divl
mov
aad
jb
jp
mov
fstpl
sub
not
fs
push
xchg
jns
or
fs
pop
push
aaa
icebp
mov
je
inc
fisubrl
iret
mov
inc
add
or
insl
xor
cmp
adc
ret
cs
lret
xchg
lahf
xchg
cmp
adc
push
jmp
in
lea
xchg
adc
bound
inc
jns
inc
mov
pop
lods
mov
pop
js
arpl
mov
orb
sbb
ss
lock
jno
cmpl
adcl
incl
jecxz
nop
fmull
addr16
dec
or
mov
inc
push
std
inc
ds
xchg
loop
aaa
mov
in
fcoms
cld
lret
fidivs
scas
stos
test
mov
insl
inc
mov
adc
sbb
pushfw
outsl
stc
mov
std
addr16
push
rorl
adc
mov
push
cld
adcl
fsts
sub
push
sbb
lds
xchg
mov
outsl
jnp
cld
ret
into
mov
aam
bound
mov
daa
in
aaa
out
testb
or
and
es
cmp
cltd
mov
popa
fs
sub
sub
in
repnz
fldenv
and
scas
das
mov
mov
cli
test
jp
cmovbe
jae
xchg
xchg
and
das
fisubl
mov
cli
insl
or
dec
loop
cs
je
adc
aaa
jb
cmovnp
mov
mov
cmp
cmp
lods
mov
jp
out
out
int
out
pop
xchg
stc
in
clc
andl
cmpsb
jp
scas
or
jge
popw
out
mov
and
clc
mov
xchg
push
adc
out
mov
or
in
mov
lods
les
jg
in
xchg
xchg
sbbb
aam
shlb
cmp
les
aas
je
ffree
lret
fstpl
loopne
dec
orb
push
mov
fimull
mov
repz
mov
invd
divb
aaa
nop
dec
decb
mov
lret
mov
jno
xchg
mov
mov
ja
pop
pop
jno
dec
mov
cmp
stos
lret
lret
dec
repnz
adc
cs
stos
inc
jo
pop
daa
cmc
cwtl
sub
fdivrs
loopne
or
push
cmp
cli
das
fdivrl
inc
mov
in
jb
scas
nop
out
js
cmp
pusha
clc
push
dec
cwtl
mov
scas
mov
test
mov
jae
pop
mov
mov
jae
inc
mov
and
inc
cmc
outsb
mov
pop
adc
pop
mov
es
inc
cmp
popa
loop
mov
xchg
inc
dec
lea
stc
inc
test
fnstenv
movsl
aad
or
mov
mov
inc
fsubrl
popl
sbb
mov
push
xor
push
sbb
inc
sub
fcomps
daa
cmp
into
mov
push
push
call
not
cmp
mov
fwait
gs
ss
ret
jp
sub
inc
sbb
cmpsl
sub
int
decl
in
mov
arpl
jp
inc
lods
lret
or
in
clc
mov
scas
test
iret
adc
and
jle
insb
dec
pop
dec
and
leave
cmp
aaa
add
xor
or
lds
mov
cmp
mov
fs
mov
mov
or
outsl
mov
lret
mov
pop
lahf
pushf
psrld
scas
push
adc
xor
pop
leave
adc
adc
cmpsl
push
repz
mov
ds
mov
std
dec
dec
sub
cli
pop
lods
xor
out
aam
popf
push
cld
rol
adc
js
addr16
js
mov
add
imul
dec
cmc
mov
pusha
or
inc
call
push
insl
jae
fs
aad
push
fidivs
out
ja
test
jge
imul
mov
out
dec
sarl
mov
jno
sub
imul
adc
cmpsl
mov
icebp
xor
hlt
cmp
xchg
and
out
push
xchg
xor
je
andb
std
push
rcl
idivb
shrl
or
notb
push
sbb
cltd
xor
shll
fwait
mov
imul
cwtl
push
dec
shll
movsb
or
sahf
sub
mov
push
pop
fadds
jp
xor
lods
cmc
adc
repnz
mov
cmp
xorb
push
stos
das
xchg
out
cmp
int
sub
cmp
pop
and
js
cs
mov
jmp
jo
mov
mov
in
xor
pop
jmp
jecxz
xchg
fwait
dec
jns
push
xchg
pop
fistpl
sub
dec
cld
add
pop
xor
pop
sbb
push
inc
sbb
add
lds
ss
into
loopne
cli
loopne
mov
stc
in
bound
mov
daa
sbb
jmp
loop
pop
push
loope
xchg
dec
jg
mov
sarl
adc
xchg
jp
add
loop
push
insl
mov
xlat
std
ret
mov
pop
enter
pusha
notl
inc
ss
pop
lds
aaa
out
mov
sub
mov
pop
pop
aad
push
cli
scas
cmp
xor
adc
js
mov
stc
and
xchg
lods
sub
inc
es
stos
xor
push
test
pop
xor
rol
jp
faddl
cld
xchg
cli
stos
lea
pop
loop
sub
dec
dec
es
mov
add
adc
and
cmpsb
iret
cmpsb
mov
imul
inc
and
and
pop
adc
orl
xchg
subb
push
rolb
dec
sub
fnsave
pop
mov
test
mov
cmp
sbbb
xchg
outsb
insl
mov
pop
lret
push
or
hlt
and
adc
fisubs
hlt
ret
adc
and
add
mov
mov
xlat
scas
and
lock
inc
arpl
inc
mov
sub
xorl
jno
lret
not
xor
or
xor
shlb
mov
inc
add
sub
jne
ret
insl
jl
mov
lds
repz
push
aas
mov
fbld
pusha
lock
clc
and
fdivrs
pop
jo
adc
xor
pop
jnp
cli
adc
in
xchg
xchg
int3
js
leave
dec
int3
je
les
or
fwait
add
adc
or
and
aas
pop
mov
pop
mov
pop
mov
rcll
insb
and
adc
cmc
call
pop
push
shll
adc
mov
fnsave
mov
pusha
xchg
cmp
mov
or
jecxz
mov
xor
daa
ret
sub
cmp
cmp
mov
or
sbb
pop
iret
or
fsubl
add
mov
cmp
sub
enter
ret
lea
scas
popa
jb
mov
dec
fnstsw
inc
or
dec
in
mov
dec
mov
test
push
repz
hlt
shrl
push
fimuls
aam
ret
nop
daa
fisttpl
cmp
imul
add
push
pop
add
xchg
dec
push
sub
pop
xchg
icebp
pop
or
mov
xor
enter
lcall
aaa
mov
cmp
push
xor
movsl
cmc
add
xor
sub
iret
xchg
pop
xchg
cld
push
cmpsb
icebp
add
hlt
orb
repnz
sahf
fstps
or
add
cmpsb
jmp
das
jp
sbb
sub
arpl
xchg
mov
roll
cwtl
rcr
insb
ja
test
div
jp
mov
push
jno
shll
mov
or
stos
fcompl
dec
lret
testl
fwait
test
adc
hlt
add
cmpsb
pop
inc
pop
cmpsl
push
xchg
xchg
adc
mov
mov
jns
xchg
rol
lret
aaa
cmp
push
lock
push
xlat
mov
jle
imul
mov
pop
cmp
rcll
stc
test
aam
fwait
push
test
lcall
dec
and
xchg
les
dec
stc
subl
mov
dec
or
mov
or
jge
pop
mov
xchg
call
jne
pusha
cltd
xchg
mov
test
mov
loop
pushf
lock
les
xor
xor
shlb
or
mov
mov
pushf
mov
dec
lret
daa
inc
cmp
lods
insb
push
stc
stc
stos
gs
dec
sbb
push
outsl
mov
jle
js
arpl
mov
ror
xchg
test
mov
psubb
repz
fst
addr16
out
loopne
or
mov
dec
xchg
jno
push
jae
sub
stos
or
push
pop
addr16
push
fwait
test
adc
pop
outsb
hlt
mov
push
add
cmpsb
cli
dec
lahf
movsl
loopne
sbb
lcall
and
jae
and
je
mov
adc
in
jl
pop
and
cmp
out
lar
lods
xchg
adc
mov
mov
test
rorb
inc
test
frstor
data16
insb
mov
push
sbb
leave
enter
iret
pop
mov
xor
mov
fwait
gs
fs
inc
mov
jmp
push
mov
fbstp
push
mulb
adc
into
dec
mov
mov
inc
ljmp
cmp
test
addr16
pop
test
fildll
and
loop
xchg
xchg
sub
je
xor
mov
mov
ljmp
sub
xor
not
std
faddp
or
xchg
fisttpl
xchg
add
in
cmp
dec
loop
call
xchg
jmp
add
pop
jl
mov
imul
leave
lcall
negl
addr16
jle
cld
fimull
sbb
in
sti
loope
jns
cs
sub
movsb
or
and
sub
add
addl
push
and
pop
mov
mov
cmpsl
adc
and
stc
std
push
dec
dec
adc
lods
fmuls
inc
loopne
in
jae
insb
icebp
adc
mov
leave
fdivl
cmpb
adcl
mov
loop
scas
jne
dec
and
jne
add
add
or
push
or
push
push
mov
mov
fstpl
jae
idivb
rcrl
ficoms
aad
enter
ret
int
push
inc
push
inc
fnstsw
and
scas
pop
test
mov
dec
inc
filds
stos
clc
mov
testl
pop
mov
sbb
adc
push
sub
fcmove
add
in
mov
inc
rcrl
dec
popa
jae
cmp
cld
sbb
mov
push
xor
and
push
sub
repz
add
sbb
lahf
stos
ja
jnp
aam
in
adc
das
out
insb
shll
adc
adcb
out
lods
adc
push
das
push
data16
push
in
adc
rorl
inc
mov
and
outsl
pop
xchg
sarb
ret
mov
mov
cwtl
shrl
jo
insb
xor
gs
out
clc
mov
aas
mov
mov
clc
cmc
lcall
inc
or
cli
sbb
je
das
clc
sub
imul
adc
bound
in
paddq
fildll
pop
movsl
inc
cmp
sbb
fwait
dec
inc
cli
lret
inc
out
fst
icebp
cmp
jp
sbbl
aam
xor
push
push
lea
and
sub
out
into
ret
inc
push
arpl
xchg
nop
adc
dec
cmp
or
dec
divl
and
lods
jne
in
inc
sub
dec
mov
inc
outsb
xlat
xor
and
mov
fs
push
mov
fcoms
icebp
mov
jge
mov
mov
imul
lret
add
ja
fnsave
pushf
aam
decb
adc
jl
and
jp
jns
add
push
lahf
insb
jmp
roll
rolb
mov
cld
mov
jp
sbb
repz
fldt
insl
sub
enter
rcrl
mov
lcall
cmc
jnp
pop
mov
aam
jo
pusha
or
or
jo
lods
mov
xchg
cltd
push
sub
xor
std
addl
cld
adc
cld
adc
mov
jae
xor
rcrb
int
adc
mov
mov
xchg
pop
fsubl
adc
scas
js
lods
jb
cmpb
je
les
aam
xchg
int
sti
cwtl
xorb
jns
add
and
sti
push
pop
fisubrs
stos
out
cwtl
call
sbb
iret
xchg
out
enter
movb
inc
mov
push
push
shrl
adc
out
cmpsb
add
test
cs
cmovne
and
into
cli
fcmovnbe
loope
jnp
jns
or
mov
or
sbb
push
decl
pop
and
aaa
and
ret
sub
addr16
in
imull
sub
cmpsl
popf
test
sbbb
movsl
xor
imul
pop
push
js
mov
pusha
sbb
jb
in
and
push
inc
outsl
stc
xor
jmp
adc
sbb
and
shlb
mov
mov
mov
push
dec
pop
xchg
in
pop
inc
cltd
jmp
aam
push
dec
in
mov
imul
mov
cs
cltd
sbb
lds
pop
mov
cltd
dec
nop
hlt
mov
dec
adc
xchg
pop
mov
jbe
adc
add
into
lods
or
aaa
out
popf
mov
sahf
sub
icebp
sbb
lods
fwait
negb
shlb
mov
fisttps
scas
or
xchg
mov
dec
popa
les
fs
mov
out
aam
pop
lods
cmp
push
rolb
lea
cmp
sarb
repz
and
push
inc
sub
js
fildl
mov
or
jns
in
ds
cmpsb
or
adc
push
fsubrs
pop
in
mov
jle
shl
fucomip
rcrl
lds
ljmp
lods
cli
sbb
inc
movsl
push
pop
push
dec
aas
pop
mov
cmpb
inc
jne
inc
xchg
lods
push
mov
mov
cld
lds
movsb
jno
mov
movsb
ljmp
fidivl
mov
jecxz
subb
jnp
inc
dec
test
sub
and
ja
or
movsb
ret
sbb
cs
xor
mov
and
gs
das
lea
movsl
xor
push
imul
push
pop
xchg
jge
push
out
mov
sbb
mov
popf
sub
or
or
dec
mov
push
repnz
test
mov
mov
jbe
out
pop
mov
fdivs
mov
cmp
cmp
fcmovne
push
mov
mov
imul
aad
inc
int3
push
or
clc
sti
inc
fidivrl
sbb
inc
cmp
jg
fldcw
jno
inc
jecxz
andl
leave
lods
cmpb
sub
add
mov
add
and
xlat
pop
and
push
cltd
icebp
xorb
es
fcmove
in
or
push
fwait
adc
negb
cmc
and
lret
push
or
jns
in
sarb
or
sbb
popa
cltd
imulb
jbe
push
enter
insb
push
dec
pop
aas
cli
daa
jge
ljmp
xorl
in
inc
mov
fsubs
add
sahf
mov
add
pushf
add
cmp
popf
mov
xchg
in
xchg
repz
mov
xchg
leave
jnp
push
mov
cmp
push
lret
mov
xchg
addr16
add
loop
clc
jmp
sub
cmpsb
xchg
inc
pop
lret
sub
inc
fstpt
jnp
out
cmc
sti
jmp
mov
adc
jmp
mov
jne
int3
xor
dec
orb
mov
push
mov
imul
adc
or
mov
jo
out
add
cmp
es
and
in
out
mov
loop
outsb
out
jns
test
in
jp
aad
xor
scas
gs
jns
sub
out
jle
xor
dec
jle
std
mov
and
dec
cmpsb
ret
cmp
mov
ret
xlat
xchg
push
pop
sub
pop
out
and
jno
push
or
shlb
cli
stos
xchg
negl
adc
shl
decb
icebp
cmpsl
out
sub
pop
dec
movsbl
and
shll
push
mov
xchg
push
dec
std
je
mov
mov
sub
or
or
enter
pop
fwait
mov
test
std
adc
jnp
clc
pop
push
xor
daa
and
dec
cmp
enter
aad
mov
enter
sub
imul
xlat
push
dec
sub
cmp
and
mov
fcoms
mov
bound
push
negb
and
loopne
cmpsb
std
inc
rorb
cmp
cmpsl
fwait
sbb
pop
jb
cmpsb
das
fs
inc
and
pop
lods
nop
lret
cs
into
jo
test
push
sub
loopne
mov
aaa
add
sti
mov
cmpsb
pop
and
loopne
lret
jg
mov
pop
aaa
out
imul
xchg
mov
and
shlb
mov
push
jle
cld
mov
or
xchg
dec
ds
xor
xor
movsb
shll
mov
lahf
push
cs
mov
sbb
jp
inc
insb
inc
arpl
pop
lods
outsb
test
js
push
xchg
or
xchg
push
jmp
pushl
mov
add
or
mov
mov
and
fnstcw
adc
repz
cmpsb
mov
push
lods
outsb
push
or
mov
pop
xchg
or
pusha
push
frstor
fwait
mov
dec
cmp
aad
mov
adc
bound
sti
insl
dec
bound
in
cmpsl
and
pop
imul
sbb
pop
sub
in
mov
xchg
popf
psubusb
pop
pop
and
pop
insb
xor
jo
cmpsl
int
sarl
lret
lret
add
mov
sbb
js
sbb
add
mov
adc
pop
pop
fstps
loope
in
sbb
inc
out
cmp
sti
out
sbb
dec
icebp
lea
out
addr16
movsb
mov
loop
mov
out
movl
sub
xchg
jnp
mov
insl
sub
adc
and
inc
inc
cli
jns
or
and
lret
lock
roll
push
ljmp
insl
push
or
daa
jno
dec
pop
into
cmp
pusha
mov
jle
arpl
hlt
popf
sub
xchg
je
xor
test
fnstcw
fnstsw
jp
add
cmp
cli
lahf
out
repz
or
adc
jno
das
subb
imul
xchg
and
or
xor
jecxz
xchg
xchg
sbb
cwtl
ds
ljmp
out
sub
jb
aas
lret
loop
mov
mov
lcall
cs
jne
std
loope
xchg
das
int
pop
sbb
pop
cli
lret
mov
in
jns
pusha
and
cmp
movsl
mov
xchg
fldl
pusha
scas
pop
xor
cmpsb
sub
inc
xchg
mov
loop
jae
popa
lock
sub
pop
adc
cwtl
add
xchg
xor
add
mov
push
push
scas
scas
sbb
cwtl
xchg
inc
pop
push
mov
sub
hlt
xchg
in
addr16
inc
loop
dec
xlat
or
outsl
insl
mov
add
xchg
arpl
mov
or
repz
sbb
movsl
shll
xor
adc
aas
mov
push
hlt
jmp
cltd
sub
pop
loope
adcl
and
pop
fwait
adc
mov
pushf
outsl
dec
mov
leave
jge
imul
jp
sub
cs
test
sub
mov
push
into
fst
or
adc
arpl
ss
ss
add
cmp
mov
data16
cli
and
mov
push
jle
enter
cld
daa
lahf
push
mov
rclb
adc
les
insl
imul
sarl
ret
std
push
pop
adc
test
bound
pop
outsl
mov
jne
lea
in
aaa
movsl
hlt
push
mov
int3
out
xchg
pop
pop
test
add
push
mov
cwtl
lret
shl
adc
cmp
ja
iret
lea
cs
and
cmp
gs
push
nop
pavgb
push
inc
push
test
gs
jmp
adc
neg
jg
aaa
aad
aaa
mov
mov
mov
lret
daa
jb
sbb
xchg
aas
xor
sahf
insl
not
jbe
rcrl
inc
xor
cmp
sub
out
mov
mov
hlt
pop
xor
lock
movsb
movb
pusha
and
mov
les
xchg
jmp
roll
or
xchg
out
jg
adc
int3
decb
xor
push
dec
push
repz
and
mov
out
pop
add
mov
mov
addr16
ss
push
xchg
rolb
fsubrl
adc
cmp
sahf
test
ljmp
xor
ja
sbbl
shlb
mov
das
push
pop
jge
jmp
ficoml
arpl
filds
sub
test
aaa
xor
test
je
lret
cmp
dec
leave
mov
lds
fisubs
fidivrl
insl
aad
jne
or
lret
js
push
jno
dec
push
hlt
jmp
push
cwtl
push
testl
cmpb
add
fs
push
ljmp
push
jecxz
mov
or
jp
xchg
jne
test
or
xchg
add
cmp
dec
sbb
lea
jmp
mov
pop
sbb
mov
xchg
das
mov
mov
fsts
and
sub
push
iret
cmpl
dec
add
jae
sahf
ss
jge
jmp
inc
mov
lds
push
ja
call
repnz
mov
in
cmp
mov
or
pop
jp
data16
push
stos
mov
aaa
inc
jo
pop
sub
stos
clc
stc
xor
adc
push
data16
das
or
add
in
push
cmp
pop
mov
jg
jb
push
push
jns
aad
ret
das
dec
cmp
fistps
ss
rcrb
lret
mov
neg
iret
sbb
inc
adc
bound
rcrl
add
data16
inc
add
pop
cld
mov
adc
add
mov
push
fisttps
mov
dec
sub
sub
sbb
push
mov
cmp
pop
sbb
call
ljmp
adc
xor
mov
push
test
push
dec
repnz
cwtl
repz
dec
bound
scas
cmpsb
mov
int
and
leave
mov
clc
inc
lret
xchg
jno
sub
mov
dec
sub
inc
pop
pop
and
dec
shrb
cmpsl
inc
nop
and
fidivs
mov
jno
sub
stos
xlat
inc
mov
cmp
rclb
insl
pop
lcall
stc
jbe
movb
add
lods
rcrb
adc
mov
filds
aad
jmp
dec
jae
jle
cmp
mov
fcomip
mov
mov
push
dec
in
push
imul
dec
or
jecxz
add
inc
mov
xor
inc
outsl
int3
cmp
cmp
pop
ret
inc
cltd
inc
lret
cld
mov
cmpsl
add
cwtl
cmpsb
xchg
ret
hlt
push
inc
aas
loopne
or
sahf
sub
jo
addr16
js
cmp
test
aaa
out
divb
sub
push
and
lds
test
lret
sub
xor
or
popa
sti
cmpsl
jno
jg
jmp
das
sbb
mov
mov
js
cltd
sbb
push
out
dec
roll
cltd
push
add
sbb
pop
jne
shll
mov
and
sub
ror
sub
push
mov
outsl
and
js
fdiv
ja
xchg
xchg
cmp
xchg
pop
and
inc
push
fmuls
cmpsb
pop
stos
xlat
jnp
and
subl
sub
pop
dec
mov
into
arpl
push
adc
xchg
les
vphaddubd
xorb
mov
test
lret
flds
in
mov
dec
popf
or
cld
jnp
pop
ljmp
push
inc
sub
mov
mov
xchg
out
out
ret
mov
out
shrl
add
mov
into
jno
repz
out
insb
inc
jp
sbb
dec
sahf
mov
aaa
sarl
and
std
mov
les
lret
fcomps
out
cld
jecxz
pop
ss
decb
fisttps
stos
pop
test
adc
push
mov
mov
xor
sbb
ret
stos
daa
adc
xor
pop
jl
aam
les
dec
outsb
hlt
cmp
adc
ret
dec
jne
outsb
lret
jmp
and
push
dec
insb
add
and
pop
add
push
mov
les
or
add
or
loopne
scas
shl
mov
push
push
jg
jne
jns
outsb
jbe
test
push
out
mov
inc
call
sub
add
cmp
mov
mov
pop
xchg
orl
call
shrl
jns
sbb
je
outsl
adc
jno
shrb
cwtl
and
scas
inc
push
cmpsl
xchg
jmp
jb
rcr
mov
dec
dec
sbb
dec
add
jl
and
dec
cmp
mov
add
loope
je
inc
sub
and
pushf
push
int
outsb
push
adc
cmp
pop
jb
sbb
sub
cmp
jae
lds
sbb
loope
push
in
pop
push
sub
push
push
inc
mov
mov
fwait
xor
hlt
sti
push
or
pop
das
insl
ret
jg
mov
out
pop
cmpsb
sti
cmp
adc
ret
cwtl
stos
insl
data16
pop
loopne
aad
adc
andb
cmp
push
jmp
and
out
int
push
xchg
cmp
enter
pop
sbb
popa
sbb
int3
mov
or
inc
sbb
aaa
fucomi
fistpll
rolb
lret
add
jmp
rcr
clts
mov
pop
jno
push
jmp
jge
xor
das
popa
xchg
sbb
or
push
mov
push
dec
xchg
and
mov
es
ret
pop
xor
and
dec
cmp
inc
push
xchg
ja
and
cs
xor
ffreep
xchg
mov
dec
push
dec
lcall
jne
push
scas
cmpsl
in
icebp
jne
ss
xor
ret
lea
sti
ss
into
sbb
out
subb
ret
and
jg
pop
shll
dec
test
mov
sub
loope
sub
or
cmc
xor
mulb
inc
jbe
jl
and
leave
sub
fsubs
pop
out
in
push
hlt
mov
jb
movsl
inc
jle
stc
or
pop
sbb
call
xchg
push
push
arpl
int3
dec
lret
shlb
in
mov
pop
xchg
imul
jbe
dec
jb
cmp
add
mov
mov
iret
mov
push
shrb
inc
mov
adc
scas
mov
scas
sbb
add
sub
and
jb
mov
or
loope
out
jg
bound
js
mov
out
inc
pop
sbb
lcall
add
scas
aas
xor
repnz
sub
pop
repz
mov
mov
out
mov
out
shrb
test
stos
xchg
int
mov
adc
mov
scas
mov
rcr
icebp
test
add
xor
push
filds
icebp
xor
pop
dec
in
aaa
jnp
adc
dec
je
js
jnp
push
and
inc
or
or
loope
das
testl
xor
inc
pop
lods
fcom
aam
rorb
out
imul
in
cmpsb
cmp
jae
mov
and
rol
in
push
add
sub
inc
mov
adc
adc
loopne
xlat
pop
add
lcall
push
mov
dec
xlat
pusha
mov
out
ljmp
jge
test
jmp
push
bswap
adc
push
inc
das
inc
adc
xor
aaa
cmp
daa
push
stos
sub
arpl
outsb
fdivrl
xchg
and
jns
sbb
fnstenv
pusha
das
push
add
bound
sbb
sub
out
outsl
lods
mov
pop
ret
sbb
mov
sub
sub
adc
ds
add
jg
xor
ret
xor
int3
out
cvtdq2ps
repnz
sub
call
cld
cmp
sub
add
jp
pop
aam
and
popf
pop
sbb
mov
cli
push
and
dec
and
cmpsl
idivb
pop
or
fsubs
pop
arpl
sbb
aaa
adc
mov
imul
mov
call
das
mov
mov
stos
cmp
daa
call
dec
dec
add
negb
gs
push
lds
scas
nop
std
cmp
aaa
jge
mov
pusha
push
cmpsb
js
or
sub
adc
and
mov
cmp
jb
xchg
aaa
mov
xorb
out
dec
out
push
pop
adc
xor
fldl
out
test
aas
cltd
iret
js
inc
dec
pusha
testb
xchg
and
cmpl
lods
enter
inc
or
and
jb
rorl
out
dec
cmp
outsl
xchg
xchg
enter
mov
push
shl
lea
lahf
xchg
orl
ds
jmp
sahf
jo
dec
loop
pop
jge
fstpl
loop
call
pop
mov
movsl
mov
mov
pop
pop
repnz
jb
out
nop
xor
std
hlt
out
jle
pop
jae
or
mov
inc
push
fmul
cwtl
test
inc
add
mov
xchg
stc
mov
and
movl
andl
sbb
mov
dec
repnz
fldcw
mov
mov
into
add
mov
push
cmp
int
leave
and
adc
mov
dec
and
push
cmp
dec
inc
cmc
adc
popa
fnclex
mov
notl
jnp
dec
and
jne
sarb
negb
jno
dec
fs
shrl
std
and
addr16
sbb
jns
mov
shr
xor
sub
sbb
sub
pushw
shl
lahf
iret
or
push
xlat
test
insb
idivl
add
and
test
jl
cwtl
or
dec
iret
cs
fcomps
pop
xor
sub
dec
adc
adc
push
in
cld
scas
jge
scas
jbe
aad
hlt
jno
mov
sbb
sbb
ja
hlt
dec
aam
mov
scas
es
push
dec
stc
stc
ret
inc
lcall
int3
das
inc
lret
ja
dec
les
out
mov
sub
jp
mov
lods
inc
mov
subl
and
pop
movsb
jp
mov
out
mov
outsb
sub
imul
cltd
add
dec
adc
sub
popl
xor
out
lods
push
cmc
xor
dec
xorb
or
sub
mov
mov
adc
cwtl
pusha
mov
and
jnp
loope
cli
imul
push
js
cmp
addr16
int
xchg
or
and
mov
jp
push
xor
sbb
popa
std
repnz
rcr
jmp
lds
push
popf
iret
aaa
scas
xchg
bound
cmp
int
push
mov
out
adc
inc
sbb
outsl
cmpsl
lods
loopne
mov
arpl
loope
fsts
cltd
dec
in
ds
loop
das
pop
daa
dec
mov
inc
loop
loope
push
dec
shrb
push
adc
pop
jge,pn
pop
sbb
arpl
mov
mov
and
adc
xor
flds
ret
adc
js
pop
into
leave
pusha
lcall
push
lret
jo
jno
je
fstpl
insb
jae
in
mov
lcall
sub
loope
inc
jle
mov
js
push
nop
jl
stos
mov
push
xchg
push
adc
push
xor
addr16
push
pop
mov
cld
cmc
mov
mov
or
rcll
sbbl
add
and
inc
lret
cmp
jnp
inc
divl
dec
push
mov
ficomps
and
jle
icebp
mov
inc
jae
add
fadd
sub
pusha
mov
mov
xchg
or
jmp
push
bound
inc
inc
scas
fidivs
mov
xor
mov
mov
cld
test
mov
mov
pop
negb
fwait
cmpsb
cmp
ret
push
inc
test
sub
les
xor
add
cmp
push
roll
ljmp
inc
out
inc
jae
sbb
cmp
dec
lcall
enter
jmp
loope
push
or
rolb
movsb
in
ds
or
and
enter
pop
arpl
insb
push
push
add
jp
movsl
pop
in
xor
loopne
sbb
inc
cmp
xchg
insl
dec
neg
ss
jp
xchg
push
leave
sub
push
or
stos
jp
fisttpll
mov
sbb
test
int3
mov
xlat
aas
mov
insb
int3
enter
faddl
leave
fisubrs
ds
and
cmp
sbb
gs
pop
sub
in
clc
divb
sub
fsubrl
jns
or
fcoml
bswap
daa
xchg
mov
in
push
xchg
push
dec
int3
jno
push
out
mov
scas
mov
imul
mov
mov
in
fsubs
scas
inc
adc
dec
sahf
mov
lock
sbb
adcl
pop
and
popf
pushf
xchg
xlat
adc
or
sti
cltd
enter
jae
push
addr16
roll
pop
jmp
adc
dec
neg
xor
mov
add
shl
es
pop
hlt
pop
sti
pop
insb
cmp
dec
mov
sub
cmp
cmp
loopne
inc
push
jae
push
cmp
sbb
test
mov
repz
pop
insl
scas
jle
js
stos
js
push
dec
test
xor
frstor
in
mov
mov
aam
stos
push
adc
ss
sub
sbb
push
inc
loopne
and
mov
ja
inc
sub
mov
mov
push
test
call
les
lods
mov
xchg
pusha
xchg
push
lcall
xorb
push
in
pop
repz
into
sbb
ret
jns
lds
fisubrs
popf
scas
inc
push
cli
sbb
pop
lea
insb
in
das
out
jbe
cmp
pop
jbe
cmp
mov
jl
sbb
lds
loopne
lock
iret
mov
out
lcall
mov
push
mov
cmp
fmul
dec
push
dec
jns
adc
mov
mov
mov
jno
jmp
xorb
insb
cmp
mov
mov
iret
js
stos
pop
push
dec
push
stos
sub
arpl
pop
dec
mov
jb
and
and
push
popa
sbb
add
out
pushf
int3
jge
jecxz
and
stos
dec
add
cmp
fnsave
stos
or
pop
mov
fidivs
pop
test
lock
pop
test
shl
pop
xchg
sarl
jmp
cmp
in
sub
add
bound
dec
cwtl
jbe
fisttpll
xchg
mov
outsl
mov
loope
cmp
mov
out
dec
call
shrd
testb
cmp
pop
mov
movsb
test
mov
pop
ljmp
jo
sbb
inc
mov
xchg
ss
mov
sub
mov
in
mov
loope
clc
sahf
cli
push
cli
gs
dec
dec
or
mov
jg
xlat
xor
out
addr16
jle
data16
mov
push
cmp
sbb
cmc
es
dec
push
js
fisubrl
cmc
rorl
cmpsl
clc
push
addb
dec
fmuls
mov
je
sub
lock
jnp
sti
stc
jnp
mov
popf
xor
adc
add
xchg
push
jo
xlat
dec
dec
sar
push
xchg
jbe
or
mov
stos
xor
push
jg
xor
adc
pminub
cwtl
orl
or
xlat
shll
inc
out
push
adc
inc
out
pusha
ss
push
mov
call
inc
and
into
ffreep
fidivrl
pop
push
out
repnz
mov
sbb
fnsave
push
mov
cld
ljmp
gs
or
mov
mov
or
je
mov
sub
test
lahf
sub
hlt
mov
cmp
sub
cmp
sub
jo
iret
lods
sti
arpl
insl
rorl
hlt
je
xchg
ficompl
bound
loopne
pop
pop
movsb
lret
push
sub
sti
psubsb
xchg
sahf
orl
fwait
jp
mov
cmp
outsl
inc
mov
sahf
cmp
lds
lds
out
int3
fcoml
mov
jbe
xlat
push
popf
daa
fwait
mov
push
sbb
cltd
mov
into
sub
cltd
mov
cwtl
mov
jecxz
mov
mov
dec
repz
sub
je,pt
and
lock
xor
jae
stc
sahf
inc
hlt
jl
inc
imul
int3
repz
push
and
and
xor
ret
stos
iret
mov
jo
loop
testb
mov
jo
js
popf
adc
gs
cmpsl
xchg
sub
cmp
mov
cmpsl
pop
pop
sbb
cmpsl
decb
jae
xlat
mov
lcall
andb
xchg
fyl2xp1
pop
imulb
push
lret
push
mov
inc
mov
push
add
out
icebp
aad
xor
cltd
ljmp
popa
xchg
cs
xor
dec
cmc
hlt
arpl
das
aaa
out
aad
outsl
xor
andl
inc
xor
ja
and
gs
fwait
out
popa
jp
fisubl
push
jns
lcall
mov
bound
mov
add
sub
or
xchg
cmp
outsl
mov
scas
scas
push
cmpsl
jle
ret
popa
cld
push
mov
aas
xchg
lea
pop
mov
scas
dec
xchg
sub
pop
ret
fiadds
pop
mov
mov
mov
test
das
push
add
push
movsb
xchg
stos
jmp
stos
dec
lods
and
cmp
xchg
lret
jl
add
push
inc
movsl
xchg
jge
mov
mov
inc
shr
mov
in
add
lret
loopne
sbb
jae
dec
jmp
lea
hlt
sti
fimull
mov
scas
jl
push
mov
clc
loope
mov
js
pop
ljmp
mov
std
lock
inc
push
mov
xchg
and
ret
inc
push
dec
adc
loopne
insl
sub
cld
jnp
jbe
out
data16
mov
jecxz
push
add
cmpl
jo
fcomps
mov
pusha
cmpb
cwtl
lea
nop
mov
fimuls
lcall
cmp
test
xlat
push
cmp
xor
mov
loopne
sbb
test
orl
jle
ja
xchg
clc
cwtl
test
rclb
add
shlb
sbb
push
add
mov
pop
int
jb
xlat
add
mulb
cmp
lahf
and
loope
push
adc
mov
call
test
idivl
cmp
pop
ret
std
mov
enter
out
daa
adc
addr16
clc
cmp
iret
add
xorb
iret
into
stos
loope,pn
cmp
pop
mov
lods
insb
out
add
ss
cwtl
adc
lods
lret
mov
movsl
fldt
push
sbbb
clc
orl
jae
in
test
repz
je
ret
nop
cs
sbb
loop
shll
into
nop
sub
and
enter
mov
fistpll
aaa
dec
xor
ja
mov
add
add
dec
pop
cs
dec
leave
in
mov
mov
cld
nop
aam
sbb
inc
push
add
outsl
and
jl
jmp
pop
push
xchg
hlt
lret
inc
js
mov
mov
icebp
mov
imul
test
cmp
icebp
je
in
jmp
xchg
gs
sub
cmp
jg
into
out
cltd
or
fisubrs
sarl
call
push
les
movsb
pop
cs
mov
mov
mov
push
push
pop
test
adc
stc
jbe
andl
scas
sbb
mov
fisttpl
popa
inc
jbe
inc
sbb
std
and
fsts
jle
xor
cmp
inc
aam
or
fs
shlb
loope
aam
pop
mov
adc
js
stc
int3
shrb
push
or
sub
inc
mov
mov
sbb
fcmovb
insb
ss
and
push
in
pop
cld
sub
xor
jl
daa
cltd
es
adc
mov
inc
cltd
xor
arpl
iret
pop
xchg
mov
mov
and
or
lret
jge
sub
push
dec
loope
add
mov
ss
inc
push
mov
int
pop
pop
lcall
mov
imul
ret
cmc
xor
push
jnp
stos
and
aad
jmp
sbb
xchg
sub
push
sub
jp
int3
icebp
adc
test
sarb
and
cmp
dec
mov
cmp
fisttpll
adc
mov
xchg
das
cwtl
or
loop
mov
into
insb
or
je
pushf
xor
loopne
lds
pop
cltd
insb
pusha
shrb
inc
orb
add
insb
into
mov
dec
ss
enter
jmp
loop
dec
mov
lahf
mov
sub
mov
stc
in
call
mov
mov
sbb
into
lcall
mov
cwtl
or
mov
xor
sbb
xor
adc
ja
xor
inc
cmpb
pop
in
mov
add
adc
clc
inc
aas
inc
inc
mov
aam
and
nop
sub
mov
dec
fstpt
mov
and
jbe
inc
cld
adc
lret
loopne
adc
sbb
xchg
and
sbb
pop
inc
ret
pop
or
aam
cwtl
sbb
and
xchg
adc
jmp
cmp
daa
or
scas
cmp
femms
cmp
xchg
xchg
mov
daa
dec
pop
scas
xor
mov
arpl
sub
mov
cmp
repnz
push
mov
adc
dec
mov
fsubr
or
orb
sbb
mov
out
cltd
lret
xchg
push
or
lcall
cmp
or
adc
sbb
pop
daa
jo
jge
pop
movsb
pop
js
fmull
das
mov
or
out
inc
pop
js
add
fs
pop
shrl
out
sbb
mov
mov
scas
sbb
outsb
aad
ret
mov
sub
lock
lods
xor
xor
mov
mov
data16
lock
or
stos
les
jbe
fiaddl
inc
in
adc
mov
loope
push
and
cld
xchg
lods
dec
and
cmc
sub
push
mov
clc
inc
dec
aaa
iret
negl
outsb
push
xchg
pop
jl
mov
ja
mov
mov
cmp
add
int
leave
pop
popa
and
mov
jne
pop
cld
push
cmc
lret
inc
out
mov
lods
mov
dec
loop
sbb
cmpsb
aas
dec
testl
out
adc
ficomps
pop
daa
mov
xorb
mov
int
cmpsl
dec
and
cmc
xor
das
add
inc
into
pop
popa
mov
sbb
int3
push
out
out
test
add
mov
jge
push
sbb
cwtl
repz
out
aas
lahf
ds
push
aaa
in
shll
lcall
cwtl
scas
popf
mov
xchg
xor
push
std
adc
frstor
lods
popf
test
outsl
mov
mov
repz
pop
and
sti
jb
ret
jecxz
psllq
add
in
hlt
pop
and
loope
lret
js
fsubrs
andb
daa
pop
frstor
aad
call
filds
and
add
push
aam
pop
stc
xlat
xchg
cli
mov
mov
adc
out
mov
insl
mov
adc
into
or
shlb
leave
das
add
orl
mov
add
mov
xor
aas
xor
mov
nop
sbb
fldt
jmp
cld
fs
mov
lock
mov
test
sub
sbb
pop
push
enter
add
imul
movl
fsub
lock
and
imul
js
cmp
add
mov
inc
jl
xor
jmp
xorl
pop
adc
loope
or
sub
or
mov
or
and
pushf
or
sti
cli
test
movb
xchg
shll
xchg
push
sbb
fld
lret
addb
sti
ret
test
mov
jne
cltd
xor
and
inc
rorl
mov
adc
sub
in
mov
lds
jle
mov
sbb
imul
cwtl
sub
into
repnz
ja
sbb
jg
inc
xor
ret
add
or
xor
jne
jge
xor
mov
js
scas
mov
cmpsl
pushf
dec
add
outsl
sahf
scas
cld
inc
cltd
inc
sub
cs
adcb
or
cmp
mov
jns
pop
and
xlat
int
in
aam
jns
jne
call
fnstenv
push
imul
out
lea
out
mov
jmp
cmc
fs
imul
fs
xor
aad
or
loopne
movsb
push
and
and
add
xchg
rolb
cmpsl
cld
xchg
cmpsb
pop
test
dec
arpl
popf
les
inc
and
or
add
sub
testl
or
mov
mov
scas
stc
inc
pop
push
and
cmp
lret
push
inc
inc
sbb
out
xor
sub
scas
sub
clc
mov
inc
bound
or
shrb
and
and
mov
dec
imul
jo
inc
mov
ss
fisttpll
popa
daa
cli
push
add
dec
add
fsubr
lcall
mov
pop
cli
jg
jge
leave
adc
stos
dec
lods
lods
fcmovnbe
sub
mov
std
icebp
sbb
xchg
xlat
loope
and
stos
cli
mov
test
push
stos
push
cmpsl
sub
aad
xchg
and
cmp
push
push
loopne
fdivrp
mov
sti
popf
push
ret
ja
xchg
pop
push
fstl
test
scas
js
gs
imul
mov
xor
filds
prefetch
mov
test
cltd
std
push
out
xchg
push
xor
xor
xchg
jae
and
push
jle
into
jne
lods
sub
loope
stc
lcall
xchg
mov
jp
sbb
pop
adcl
ficoms
repz
dec
dec
out
mov
or
sub
jmp
pop
pushf
iret
inc
popa
inc
ljmp
mov
cmpsl
repnz
dec
xlat
inc
popa
xchg
sbb
ficomps
cs
push
push
cs
js
sub
add
js
mov
ja
xchg
adc
or
mov
push
adc
xchg
jne
dec
movsl
lret
cmp
xchg
xchg
repz
repnz
jg
iret
push
pop
jns
stos
ss
popf
fwait
aas
dec
or
jle
inc
test
daa
cmp
xchg
stos
cmp
or
push
in
cmp
mov
fimull
sub
push
cmp
push
add
outsl
add
mov
xchg
pushf
sub
dec
inc
or
outsb
mov
popa
popf
ret
dec
cmpsl
fwait
xor
mov
gs
inc
scas
xchg
jae
cmpsb
mov
cli
mov
enter
xlat
lcall
cs
pop
movsb
popa
mov
andl
xchg
clc
pushf
xchg
les
push
rcll
out
add
popa
mov
pop
add
negb
insl
stos
jl
fmull
dec
lcall
repz
lods
add
repz
jmp
fdivl
lods
in
jecxz
inc
or
sarb
imul
push
add
pop
inc
xchg
add
repz
sahf
aam
divb
lahf
sub
jnp
repz
daa
ja
movsb
push
test
iret
movsl
fstl
ss
bound
cmpsb
cmpsl
pop
incl
inc
in
jmp
or
pop
in
xorl
arpl
or
popf
xchg
adc
out
dec
fisubrl
or
ja
cmp
inc
stc
mov
jo
test
jb
mov
mov
mov
vmread
jne
mov
out
enter
xchg
loop
dec
jo
cmp
shrb
jle,pn
jns
mov
push
add
jbe
xor
or
mov
and
xchg
sub
sahf
xor
inc
pop
nop
into
sbbb
adc
mov
je
les
and
sub
pop
jo
jl
jmp
loop
adc
mov
jmp
sub
xchg
mov
pop
mov
xchg
or
dec
js
inc
mov
stos
fs
fistl
mov
outsl
adc
lcall
and
mov
xor
hlt
mov
test
lock
das
xchg
sbb
stos
dec
jge
mov
dec
sbb
or
movsl
or
xchg
mov
fldl2t
mov
mov
sub
dec
mov
enter
ds
in
cmp
cmp
sbb
mov
add
fldenv
adc
dec
mov
or
insl
dec
in
pop
cmc
pop
and
or
cmp
icebp
and
dec
std
cmpsb
ds
sub
sub
mov
test
fwait
push
mov
out
mov
and
hlt
daa
push
ret
arpl
decb
and
lret
dec
push
and
inc
insl
mov
cli
xchg
and
in
filds
xlat
mov
mov
into
mov
push
mov
lret
pop
adc
out
sub
clc
dec
jg
xlat
cltd
pop
mov
inc
dec
inc
push
stos
iret
iret
or
rorl
and
jg
repz
inc
add
int
mov
mov
js
lods
inc
mov
sub
fistpl
push
aas
mov
xlat
dec
push
rorl
stos
pusha
or
das
jnp
mov
pop
lods
push
int
bound
xchg
push
xchg
ds
mov
imul
mov
cmp
pop
sti
lret
and
and
and
hlt
jns
cmp
outsb
mov
pop
pop
xlat
mov
jmp
js
push
mov
adc
lahf
mov
xor
popa
repnz
sbb
xchg
cld
stos
shr
fcmovne
sarb
jge
xchg
pop
nop
push
sub
mov
and
into
mov
push
xor
sbb
outsb
rclb
dec
faddl
pop
hlt
cwtl
dec
sub
lret
mov
push
ret
scas
jo
mov
inc
push
loopne
mov
mov
mov
mov
push
sub
loop
add
adc
neg
adc
pop
adc
push
test
ss
pop
in
add
push
dec
and
shrb
cld
jne
inc
dec
aad
inc
add
fs
xchg
insl
lret
out
mov
bound
add
mov
shlb
pop
mov
xor
in
or
mov
push
jp
test
cltd
cmpsl
notb
repz
push
mov
enter
out
lret
popa
pop
xchg
ret
adc
sti
mov
andl
cmp
cs
lcall
push
inc
sub
sahf
inc
fwait
sub
push
mov
or
ljmp
out
sbb
inc
ljmp
push
add
or
mov
xor
jl
lahf
cmp
pusha
in
xchg
movsl
in
jae
pop
stos
inc
lods
aaa
filds
jbe
cltd
mov
jae
ljmp
lahf
push
enter
icebp
mov
dec
mov
cmpsl
cmpsl
into
and
faddl
dec
clc
inc
jp
inc
mov
pop
or
push
jl
imulb
enter
mov
popa
mov
das
popf
cmp
sub
mov
popa
pop
out
fwait
sahf
loop
cli
cli
rcrl
sub
roll
push
lret
mov
sub
jb
dec
pop
aaa
arpl
pop
fmull
sub
fcomps
jnp
adc
stc
xchg
scas
in
cmpsl
mov
add
bound
sub
cmp
sub
daa
jg
xor
sub
cmp
inc
push
xchg
adc
jecxz
lret
cmpsb
addr16
jg
cmp
sub
je
push
repz
mov
cmp
out
mov
jae
inc
jns
adc
dec
fldcw
aas
xor
aad
dec
mov
dec
xchg
mov
push
and
jae
adc
sub
or
adc
cmpsl
mov
cmc
pop
mov
push
popa
push
jns
rorl
add
jae
lock
mov
inc
dec
fidivs
push
jl
cs
fisubrl
or
inc
popa
js
xchg
add
into
insb
adc
call
orb
add
adc
icebp
andb
sbb
call
pop
dec
add
test
xor
shrl
ds
mov
scas
pop
push
xchg
push
fbstp
xor
pop
popf
fwait
mov
or
out
insb
and
cmp
sub
imul
push
sub
leave
cmp
sbb
push
mov
lea
xor
pop
pop
xchg
fstl
shrl
scas
add
adc
stc
pushf
pop
loope
or
loope
push
sub
fdivl
fcomps
dec
jle
in
mov
push
int3
dec
pop
push
out
fstl
rclb
mov
add
push
pop
loope
mov
push
inc
xor
push
pavgb
adc
and
popa
in
enter
dec
adc
cmp
cld
adc
push
mov
rcll
mov
or
aam
fwait
inc
or
sbb
leave
cmp
jae
dec
sub
adc
jge
testb
xor
adc
xor
adc
push
xor
pop
or
jae
xchg
nop
fidivrl
inc
jp
adc
cmp
inc
jb
dec
push
inc
xchg
push
xchg
pop
int3
push
mov
roll
jp
mov
xor
push
cmovno
bound
icebp
pop
fnsave
add
ficomps
int3
mov
ja
fidivs
jp
mov
inc
sbb
mov
or
ret
or
pop
fdiv
dec
outsb
inc
clc
imul
mov
mov
inc
mov
aad
clc
jns
mov
dec
mov
clc
into
jbe
sarb
or
ss
ror
dec
cwtl
push
addl
mov
and
xchg
pop
push
or
data16
inc
adc
ds
in
cmp
ja
add
icebp
pop
mov
fisubrl
jb
and
xor
mov
sub
xor
inc
test
sub
aaa
nop
dec
in
mov
push
or
mov
vphadduwd
js
sti
jae
lret
mov
out
loope
movsl
inc
adcl
loope
mov
unpcklps
mov
mov
add
inc
cltd
cmp
fst
inc
or
cmp
clc
icebp
push
test
iret
jns
mov
mov
xchg
in
and
mov
arpl
jmp
push
enter
orl
fisubl
mov
popa
ljmp
test
sub
stc
sub
mov
sub
stc
xchg
or
xor
cmp
push
lret
add
pop
mov
or
add
out
mov
cwtl
dec
jg
sbbl
jno
call
xchg
mov
enter
cmpsb
orb
sbb
fisttpll
out
xchg
lock
sub
mov
mov
shll
mov
leave
mov
push
daa
jmp
bound
and
je
add
or
ljmp
out
int3
adc
sbbl
and
mov
sahf
mov
mov
in
stc
add
subb
jb
sbb
cmp
out
push
mov
push
stc
inc
aad
aaa
popf
lret
nop
out
add
jmp
test
hlt
push
rol
or
jae
push
cltd
inc
xorb
mov
popa
in
xor
xchg
sub
inc
cmpsb
push
out
and
pop
test
push
shll
cmp
into
xchg
bsf
in
insl
add
push
fs
inc
xchg
out
in
adc
add
mov
lahf
adc
inc
xor
pop
push
js
fs
push
mov
fucomip
xchg
cmp
jbe
mov
gs
test
and
clc
xchg
loope
lret
outsb
insl
push
out
fnstenv
mov
pushf
leave
fldenv
stc
clc
add
scas
xchg
xchg
outsb
into
nop
pop
loop
mov
jg
fbld
dec
arpl
mov
push
mov
xchg
cmp
fsubs
in
fsubp
js
cwtl
data16
xor
in
mov
aad
push
repnz
aas
outsl
cltd
std
in
sarb
aam
cmp
sti
outsl
stc
mov
mov
cmp
test
xlat
aas
pop
lret
mov
xor
or
and
dec
adc
pop
sbb
ds
xor
sahf
incl
jb
insl
pop
add
enter
jbe
cmpsb
mov
in
icebp
and
cwtl
mov
mov
test
test
cmp
fwait
dec
lahf
add
or
mov
lret
inc
mov
aaa
sub
out
sahf
sbb
pop
repnz
jge
cmp
dec
mov
xchg
lahf
popf
sbb
or
sbb
cwtl
jo
fdivrl
fcompp
sbb
das
mov
out
jnp
inc
sbb
xchg
or
sbb
std
xchg
int
data16
mov
inc
mov
dec
jle
sub
cmpsb
inc
inc
xchg
lock
movsl
pop
fsts
pop
mov
add
out
mov
xchg
aam
jl
push
mov
cs
sbb
and
adc
push
stos
in
repz
jns
rolb
mov
shl
sbb
fldt
inc
xor
test
xchg
fmull
shl
shrb
test
xchg
test
adc
mov
jp
sbb
mov
fwait
lods
pop
dec
repz
add
mov
xlat
out
cli
sti
aam
in
ficoms
shrl
and
pop
and
jb
ret
iret
xchg
push
jle
insb
loopne
and
cmpsl
int
mov
mov
mov
ficoms
mov
inc
lret
or
add
adc
mov
or
jle
or
mov
push
xchg
ret
int
dec
imul
or
cmp
cld
lcall
outsb
fistpl
pusha
inc
outsl
cmc
hlt
xor
lret
and
mov
xchg
ja
dec
push
mov
xor
pop
pop
and
xlat
inc
js
jge
shlb
jecxz
jns
sbb
cli
in
out
hlt
and
xchg
sub
fsubp
sahf
or
inc
sub
sbb
bnd
inc
jle
notb
lock
mov
cwtl
insb
gs
jecxz
mov
mov
inc
out
int
je
push
xor
mov
loope
adc
stos
orb
pushf
sub
adcb
pop
cltd
lods
fcmovnb
inc
jp
popa
inc
cmp
jge
pop
inc
fwait
incl
hlt
jg
cmpsb
cs
lods
int
popf
inc
je
mov
push
sub
int
les
adc
shll
cmpb
jbe
enter
sub
hlt
push
pop
lcall
cmp
lea
cmp
hlt
or
cmp
add
sub
and
pop
test
aas
arpl
insl
sub
clc
add
cmp
fwait
mov
mov
sub
cmp
or
jg
cwtl
std
icebp
insl
daa
je
lock
aam
adc
and
cmp
xlat
or
jno
jnp
movsl
adc
dec
cmpsb
das
mov
jae
out
jne
push
out
mov
dec
enter
arpl
pop
adc
mov
cmc
insl
sub
jecxz
stos
xchg
mov
in
pop
hlt
jns
das
jo
repnz
and
jge
mov
fidivrs
jl
xchg
rorl
jl
popa
add
mov
xchg
jecxz
ds
mov
jl
rcll
jns
ds
jne
xor
addb
mov
cmpsl
inc
ljmp
inc
push
jo
mov
std
pop
aad
insl
icebp
insl
shl
notb
addb
jge
mov
fcom
in
cmp
xchg
es
pop
ljmp
fsubr
mov
lret
rcrb
jl
add
lret
jg
add
mov
mov
adc
push
xchg
hlt
mov
out
pop
or
xor
inc
pop
fs
jnp
sub
pusha
mov
fldenv
mov
sti
out
je
ja
xor
xor
pop
jecxz
inc
mull
push
scas
pop
movsb
sbb
or
test
mov
xchg
iret
into
lea
cmp
xchg
and
rorl
in
loopne
repnz
arpl
pusha
clc
push
mov
data16
sbbl
inc
pusha
sbb
imul
fwait
rorl
mov
clc
jle
adc
cli
addl
sbb
mov
jns
jge
scas
pushf
test
cli
lret
sahf
imul
pushf
xor
pop
mov
shll
fstp
cmpsb
pop
aaa
pushf
iret
imul
mov
dec
movsl
inc
xchg
mov
mov
sbb
aad
aas
hlt
jecxz
and
lds
roll
jne
aam
and
daa
mov
xlat
jg
loop
movsl
jae
sub
push
xchg
xchg
sbb
mov
fsqrt
imul
inc
add
xchg
cmpl
and
int3
jne
std
scas
cmpsb
dec
shrb
in
cmp
mov
je
jg
lds
xor
cltd
icebp
shrb
xchg
imul
xor
fwait
sbb
in
jmp
out
stos
sbb
jbe
pop
in
scas
xchg
sub
stc
aad
orb
gs
cmp
sti
mov
fsubrp
mov
jno
clc
sbb
xchg
scas
pop
cmpsb
sbbb
stc
or
add
outsl
cmp
xchg
mov
aam
loopne
push
inc
gs
arpl
cmpsl
mov
jne
dec
mov
mov
xchg
das
mov
shrb
leave
sub
js
out
shll
hlt
icebp
imulb
shr
push
sub
mov
mov
out
clc
dec
add
xor
push
mov
out
mov
dec
outsl
and
pop
scas
out
pop
xchg
mov
scas
imul
test
cmp
or
mov
pop
sti
mov
jae
jmp
mov
xor
add
inc
test
cwtl
and
stos
lret
pop
fsubl
cld
adc
call
cmpsl
mov
inc
sahf
fsts
call
xor
rclb
addl
stos
mov
shld
pop
push
clc
cld
inc
aam
aaa
ret
loop
mov
arpl
rol
shlb
or
sub
push
lods
sbb
xor
cmp
push
dec
popa
adc
mov
lods
inc
push
js
fildll
xor
icebp
push
pop
lahf
pop
imul
mov
pusha
mov
arpl
xor
inc
inc
in
or
xor
sub
cmovae
fdivs
push
xchg
inc
stos
jno
pop
mov
loopne
in
pop
and
scas
leave
imul
mov
mov
inc
pop
xor
mov
sub
aam
int3
or
mov
jae
les
add
lods
add
loope
cmp
sti
pop
int
mov
fidivs
sbb
test
sub
mov
rorb
test
or
sub
push
js
and
push
jns
bound
out
repnz
cmpsb
pusha
push
and
push
gs
repnz
pop
xlat
int
push
aas
testl
or
outsl
lds
insl
pop
and
fucomi
arpl
pop
xchg
sbb
xchg
jecxz
jnp
fstl
jmp
add
or
sub
mov
cmpsb
or
jecxz
shlb
dec
dec
add
and
sarl
and
mov
loopne
out
lcall
ret
scas
insl
ljmp
xor
shll
dec
insb
pop
xchg
mov
out
out
fcoml
dec
dec
jo
jnp
lahf
cli
or
and
or
xlat
jl
cmp
inc
repnz
pushf
dec
enter
repnz
rcll
loopne
xor
out
jp
cmpsl
arpl
subb
movsl
mov
mov
add
dec
or
fsts
mov
mov
mov
out
inc
mov
and
add
jmp
scas
lods
mov
xorl
in
or
mov
add
push
pop
xchg
mov
inc
mov
ja
lock
out
mov
dec
or
fsubl
mov
dec
mov
mov
lock
in
int
add
pop
scas
xor
cltd
sbb
subb
xchg
sti
enter
inc
push
sti
or
out
daa
push
xor
rclb
rclb
std
mov
push
std
pusha
popa
push
sbb
cmp
mov
dec
ljmp
dec
outsl
movl
jg
out
js
jnp
cmp
xchg
jae
inc
stc
shlb
bound
mov
outsl
jle
jmp
xchg
fisubrs
push
push
dec
jo
pop
mov
sbb
and
ja
push
jb
cwtl
push
xchg
push
ror
std
shlb
aad
mov
push
mov
mov
mov
cmpsl
jne,pt
dec
jle
nop
jne
inc
xchg
or
pop
inc
sub
fiaddl
jne
test
inc
push
mov
jle
loopne
lock
enter
stc
fdivrp
in
aam
jnp
jg
loope
ljmp
and
lcall
inc
fcomip
dec
sbb
xchg
jle
les
aas
cmp
ds
adc
inc
cmc
adc
lcall
mov
ja
fistl
lea
fdivrl
inc
mov
cmpsb
mov
lods
and
or
icebp
push
xchg
fmuls
pcmpeqb
aaa
jno
sbb
les
and
add
add
iret
mov
repz
stos
mov
popl
ds
or
xor
add
out
icebp
mov
mov
push
out
pop
outsb
mov
cmp
sub
mov
jle
sti
sbbb
aam
dec
and
xchg
and
push
daa
push
arpl
fs
sbb
mov
sbb
xchg
out
or
clc
and
inc
sub
int3
add
js
bound
sbb
in
push
xor
mov
fcomps
cmp
and
or
push
adc
mov
fmulp
cli
cmp
mov
mov
out
cwtl
test
pusha
in
inc
test
pop
iret
or
cmp
xchg
icebp
fwait
data16
mov
mov
sbb
das
or
dec
sti
mov
cmp
or
lods
push
mov
in
out
fwait
cmpsl
jmp
stos
lahf
or
and
inc
lcall
loope
outsl
sti
dec
and
lea
mov
pusha
sahf
adc
enter
inc
push
test
cli
imul
fmull
pop
cwtl
pop
sbb
pop
out
dec
call
push
cmp
rcrl
nop
sar
pop
xor
sub
lods
aas
fistpl
movsb
hlt
ds
int3
das
push
xchg
mov
insb
stos
jnp
icebp
jmp
jbe
mov
xor
xchg
jb
ficoms
pusha
sarl
dec
xor
add
mov
mov
div
aad
mov
xchg
enter
sbb
adc
jmp
sub
push
mov
cltd
fs
mov
fildll
push
inc
adc
mov
int3
inc
into
push
shrl
mov
push
pop
jecxz
dec
xchg
sbb
movsl
dec
dec
rol
data16
ret
xor
push
pop
xor
push
jg
insl
sbb
in
js
addr16
mov
push
and
xchg
mov
jmp
cmp
pop
aad
and
mov
mov
push
in
call
mov
push
scas
adc
test
stos
gs
inc
stc
cmp
xor
ljmp
mov
aaa
les
pushf
sahf
mov
xchg
cli
inc
push
bound
pop
pop
adc
push
or
or
mov
adc
adc
cmc
or
add
pop
out
lret
pop
inc
and
xchg
sbb
pop
ja
jae
xor
adc
fisttpl
outsl
xchg
sbb
aad
movsb
int3
cmp
movd
int
fsubrs
test
aad
mov
xchg
popf
loope
xor
xor
push
add
mov
push
push
into
mov
xchg
aad
sub
popf
pop
sbb
mov
cld
or
jecxz
adc
jmp
int3
and
pop
dec
xchg
inc
aaa
push
adcl
test
xor
mov
xor
mov
pushf
fiaddl
jg
enter
lahf
xor
stc
and
push
mov
pusha
mov
inc
outsb
into
pop
daa
gs
cld
or
and
xor
test
arpl
out
xchg
ret
rol
movsb
cmpsl
xchg
push
dec
repnz
aaa
fwait
sub
cld
fnstsw
jne,pn
loopne
in
pop
mov
cwtl
sti
xchg
or
test
cli
test
and
daa
cli
push
ret
pop
call
icebp
pop
fisttpll
push
fisttpll
push
ja
or
stos
and
out
ja
iret
xor
inc
test
pop
cmc
fwait
or
loope
mov
testl
lahf
jmp
sbb
imul
pop
and
lock
pop
push
clc
rorl
dec
mov
inc
adcb
sbbb
in
push
int
data16
mov
pop
shrl
cmp
out
mov
add
dec
shll
add
les
call
ja
lods
pop
pusha
inc
adc
sbb
shl
push
dec
lahf
adc
hlt
push
push
dec
in
out
jae
lods
cmc
mov
push
xchg
addb
lods
leave
fisubl
mov
jmp
out
inc
add
push
add
jecxz
fcmovnb
adc
pop
ja
pusha
mov
push
dec
xchg
stc
lret
rcrl
dec
push
jp
pusha
inc
stos
bound
mov
sbb
cwtl
cs
je
sarl
pop
lcall
sub
dec
inc
mov
arpl
ffree
sub
shll
jg
jne
fdivrl
inc
mov
adc
lret
adc
sub
inc
xor
je
xor
test
call
ja
ja
fstl
outsb
sarb
imul
subl
pop
cltd
test
pop
popa
mov
imul
xchg
inc
push
or
int
cmp
into
sbb
lock
movsb
lock
fsubp
cli
out
add
xchg
stc
fs
mov
jno
push
jmp
pushf
in
sbb
mov
icebp
ja
sti
popf
in
mov
inc
xor
push
femms
add
fstps
jno
repz
and
in
jge
clc
cld
mov
dec
hlt
loope
cmpsl
pop
cmp
xor
jge
sub
xchg
mov
loope
shlb
int3
stc
outsl
pop
push
ljmp
jmp
ret
gs
out
shll
push
aad
bnd
sbb
pop
add
push
iret
mov
lahf
lock
cmc
adcl
pop
mov
jo
mov
test
cmpsb
notb
xor
cmp
push
aas
pushfw
les
cmpb
lret
es
cli
add
push
inc
cmp
sbbb
scas
lahf
fistpl
test
aas
test
xchg
test
outsb
repnz
cmp
inc
fsubrp
xor
std
fs
lret
int3
mov
push
mov
fmuls
add
mov
sbb
pop
or
sub
jb
inc
clc
fisttpll
cmpsl
es
and
inc
mov
cltd
outsl
jg
cld
cli
je
icebp
dec
or
out
cmp
or
cmpl
fs
imulb
cmp
push
rcrl
test
in
pop
into
scas
ss
mov
inc
dec
jmp
ljmp
xchg
andb
fwait
imul
mov
insb
dec
xor
fistl
and
sbb
mov
loope
pop
xchg
iret
stc
add
push
adcb
icebp
test
push
mov
jne
sti
cmp
dec
mov
jmp
inc
mov
add
movq
mov
int3
jb
cmpsl
sarl
sbb
fsts
repnz
cmp
jnp
es
adc
xor
lahf
mov
mov
push
mov
xchg
jne
shlb
enter
iret
pop
aam
dec
xchg
jbe
sub
lret
shrd
mov
je
mov
out
push
shl
xchg
pop
sub
enter
leave
jg
insb
push
cmpsl
cwtl
adc
rcrb
test
dec
and
mov
aaa
stc
mov
mov
cmp
push
dec
mov
mov
jecxz
mov
lret
lock
inc
xchg
jnp
int
shrl
pushl
add
adc
jns
sbb
cwtl
fsts
and
stc
mov
popa
notl
fdivrs
adc
push
rolb
dec
adc
mov
mov
adc
fists
sbb
out
lods
push
shlb
pop
push
cmp
add
mov
mov
mov
shrl
ficompl
mov
xor
xlat
or
push
test
inc
sbb
jns
sbb
imul
xor
jno
ret
inc
loope
outsl
dec
sub
out
cmp
loopne
rorb
repnz
dec
jno
pop
pop
clc
dec
sbb
and
stc
bound
rorb
loopne
loop
aas
imul
outsb
dec
dec
jg
insl
int
dec
rcrb
dec
pop
test
pop
cmp
push
push
mov
movsb
sbb
pop
fs
mov
xchg
rolb
or
cmpsb
dec
dec
icebp
and
adc
mov
mov
in
mov
insb
push
push
jae
adc
cmp
scas
mov
mov
dec
aaa
adc
inc
inc
mov
sahf
xor
mov
lret
sbbl
dec
push
ret
add
push
add
mov
sbb
xlat
out
adc
imul
jbe
ss
add
lds
mov
and
sub
stos
jns
scas
std
dec
das
and
lcall
out
in
popf
out
inc
dec
popf
stc
mov
shlb
sbb
cmp
xlat
test
in
mov
pop
hlt
hlt
jle
movsb
outsb
loop
sub
mov
pop
neg
loopne
outsb
test
jno
icebp
addr16
inc
and
mov
dec
xor
idivl
dec
sbb
dec
mov
mov
roll
sbb
outsb
sbb
pop
adc
lea
dec
push
es
cmp
ss
cmp
sbb
push
shll
bound
and
push
lock
hlt
jg
in
mov
jne
pop
fimuls
push
scas
pop
xor
add
pop
scas
insl
jp
pop
mov
into
loopne
imul
xor
mov
mov
andl
out
and
mov
stc
push
fcompl
mov
push
adc
clc
dec
dec
mov
scas
faddl
rcl
lods
or
rep
xor
cld
dec
mov
push
add
js
clc
call
sti
loope
sahf
xor
aas
and
cwtl
into
arpl
icebp
nop
push
es
mov
clc
inc
push
fidivs
mov
stos
lret
mov
test
out
sub
push
or
jmp
rolb
nop
rcrl
adcl
test
repnz
adc
loope
sub
or
jmp
ljmp
mov
mov
repnz
das
pop
add
pop
sub
test
pop
ljmp
aas
push
jle
mov
mov
pop
pop
test
adc
jne
jbe
insl
cli
test
loopne
daa
dec
fbstp
jnp
les
fxch
add
jl
jne
out
shl
push
cltd
mov
lahf
or
aas
lock
push
adc
cmc
mov
add
jb
push
add
rorb
jno
jno
mov
mov
rorb
test
and
push
adc
jmp
loope
mov
add
pop
lcall
pop
ss
mov
fidivs
and
mov
enter
sub
jmp
je
jge
add
cwtl
data16
mov
dec
pop
mov
aad
push
lods
xchg
xchg
mov
add
mov
adc
pop
mov
fcompl
xchg
inc
mov
push
push
fidivrs
mov
adc
jno
dec
lock
xchg
push
std
rolb
stos
ret
test
jns
jp
push
clc
adc
int
push
ljmp
ds
fnstsw
add
lock
mov
pop
adc
test
xchg
push
jle
sub
xchg
xor
mov
mov
adc
fiadds
les
mov
add
xlat
scas
test
jg
xchg
inc
ret
cmpsl
enter
cmpsb
mov
mov
xchg
int3
mov
mov
cmp
adc
xor
add
push
cmp
cltd
jno
lret
push
xor
lds
imul
dec
imul
cmpl
add
mov
pop
push
lea
and
mov
inc
test
psubq
pusha
pop
je
cmp
lock
sbb
aas
cmp
iret
mov
lea
xchg
fistl
cmp
test
cmp
mov
cmp
scas
push
xchg
jp
push
adc
push
dec
push
xor
fwait
aaa
adc
mov
xchg
hlt
mov
push
cmp
out
xorl
pop
cmp
jecxz
shr
jl
mov
mov
pushf
sarl
sub
cmp
aam
pop
dec
cmp
or
xchg
cli
ficoml
jl
dec
popa
das
imul
pop
push
sub
and
sub
pushf
push
lods
cltd
mov
stos
test
pushf
nop
fmuls
xlat
popa
mov
xor
dec
sahf
nop
jp
data16
pop
pop
inc
cwtl
sti
aaa
xor
adc
movsb
fdivs
mov
fld
shll
fcmovnbe
cmpsb
or
and
jle
inc
mov
adc
pushf
push
pop
cmp
xchg
inc
mov
pusha
jns
pusha
xor
adc
mov
jnp
or
cmovp
outsb
clc
xor
mov
out
cmp
decl
or
sbb
jo
cmp
xchg
pop
outsl
sbb
jo
in
dec
rorl
dec
pop
xor
xor
scas
fadds
xor
inc
inc
dec
pop
mov
inc
jb
xchg
adc
js
aad
xchg
mov
mov
jmp
inc
jb
shll
out
mov
mov
xor
adc
sub
insl
imul
out
inc
aad
cmp
mov
push
cld
mov
test
movsb
lret
idivb
cmp
sub
lds
ret
jg
repz
mov
repz
pushf
fiadds
rcrl
xor
dec
stc
js
mov
jge
xor
loope
add
loope
cmp
push
cld
ret
xlat
test
and
ljmp
adc
fs
push
outsl
in
loop
push
add
int3
lods
pop
mov
hlt
mov
cmp
inc
inc
iret
cmc
lods
adc
xor
hlt
fs
inc
cwtl
and
fidivrl
sbb
iret
mov
xchg
adc
out
xchg
mov
inc
push
ja
add
or
mov
idivl
cli
daa
and
push
ret
mov
daa
repnz
push
shll
inc
movsb
lods
mov
loop
or
sub
jecxz
ret
imul
sahf
out
clc
and
add
cltd
sub
lods
sub
xor
jb
cmp
mov
sbb
imull
addl
aaa
in
aad
xor
loop
mov
shrl
inc
push
lea
mov
fcom
mov
movsb
out
test
cli
dec
imul
gs
xchg
jnp
loop
dec
fs
xchg
sarb
fnstcw
sbbl
sahf
cltd
inc
xor
add
adc
in
ret
inc
stc
test
pushf
sbb
mov
sarl
cli
inc
sbb
rep
xchg
inc
out
mov
nop
xchg
or
push
cmp
sti
jno
lret
sub
cmpsl
into
rcrb
jge
push
or
mov
cs
push
sbb
adc
pop
xchg
sbb
pop
xchg
or
push
add
aas
cmp
loopne
roll
fisttps
xchg
adc
and
mov
xor
sarb
xor
ret
add
push
js
mov
jge
sbb
or
xchg
push
insl
mov
push
cmp
xchg
or
popa
jo
add
ja
icebp
lea
pop
dec
movsl
test
mov
ds
jae
test
adc
loopne
sbb
cmp
jge
inc
cmp
adc
adc
or
push
imul
clc
xchg
cwtl
sbb
sahf
mov
jno
add
sbb
dec
in
data16
js
adc
in
dec
xlat
lds
jecxz
imul
push
inc
out
mov
pop
scas
jl
dec
popf
mov
sub
icebp
mov
pop
lea
dec
dec
jmp
mov
orl
test
lods
sbb
outsb
fs
sbb
jnp
std
iret
xor
inc
imul
shl
push
push
jg
dec
mov
arpl
stos
ret
sti
sbb
std
clc
ljmp
jle
lea
or
sbb
das
add
into
dec
cmp
fmulp
mov
mov
call
jmp
data16
sbb
fs
bnd
xchg
xchg
sbb
mov
sbb
dec
mov
fildl
mov
mov
ret
mov
mov
or
enter
leave
pop
insb
add
mov
inc
lcall
rcll
mov
xchg
fwait
mov
ljmp
movsl
test
mov
in
jbe
ljmp
mov
push
test
stos
add
dec
jno
inc
insl
hlt
sbb
cmpsl
cwtl
movsb
lret
stos
ret
cmp
cli
dec
fidivs
cs
mov
pop
cmp
xchg
int3
add
movsb
mov
mov
and
mov
cmp
or
dec
test
imul
fs
in
inc
xor
and
sub
fnsetpm(287
sub
cmp
int3
dec
pop
jp
add
jnp
fs
pop
lahf
sbb
dec
lock
icebp
mov
sbb
mov
jg
and
aam
mov
pop
and
sub
es
jb
cltd
movsb
data16
pushf
fwait
imul
sub
xor
or
cmp
je
call
and
scas
mov
outsl
mov
jl
pop
mov
xor
lds
push
inc
outsb
movsl
pop
inc
inc
and
sub
arpl
dec
xor
mov
sbb
sbb
add
xchg
adc
stc
int
inc
sbb
int
mov
movsb
shll
mov
push
scas
sbb
test
lahf
mov
inc
mov
lahf
repnz
push
dec
les
pop
pop
mov
and
mov
stc
or
and
xchg
push
mov
inc
or
or
ss
mov
daa
jno
pop
daa
sub
pop
hlt
out
pop
mov
fsts
std
outsb
xorb
cs
jmp
xor
dec
lret
lcall
sbb
adc
jb
sarb
gs
jmp
lods
mov
ficompl
popf
jecxz
sub
xchg
dec
push
dec
jle
iret
add
cwtl
mov
mov
adc
scas
loop
cmp
stc
fidivs
mov
xchg
jae
out
mov
mov
fstps
dec
dec
sub
jbe
pop
cli
mov
xor
and
or
fisttpll
mov
mov
hlt
cltd
sbb
jg
xchg
sbb
leave
fwait
pop
pop
lcall
push
out
mov
sub
icebp
cmpsb
insl
inc
mov
or
xor
jle
jae,pt
sub
push
sarl
add
repnz
int
adc
cmpsb
in
jmp
adc
mov
cmpsb
pop
in
test
out
jl
imul
in
cld
cmpsb
out
jo
out
daa
dec
sbb
lods
sti
mov
lods
sbb
cli
dec
test
andl
add
sbb
jmp
faddp
mov
pop
je
xchg
add
mov
mov
inc
lahf
xchg
jmp
and
fwait
aam
dec
out
popa
popf
or
jno
lods
cld
rorl
test
sub
xchg
mov
and
icebp
add
xor
mov
sbb
out
fidivs
mov
mov
lahf
imul
rcll
in
sbb
inc
test
sub
jne
cmc
cwtl
mov
inc
mov
fmuls
rorl
dec
pushf
cmc
jo
stos
push
cmc
fnstcw
mov
aad
cs
inc
jl
sbb
movsl
adc
imul
or
negb
add
inc
cmp
sbb
mov
repz
jno
sub
push
adc
cmc
les
in
lcall
pop
cmp
cmpb
inc
or
repz
or
push
mov
xchg
pop
test
or
mov
xor
push
in
push
scas
shlb
outsl
and
leave
adc
mov
mov
sahf
mov
add
mov
cs
in
test
stos
mov
insb
mov
jecxz
loopne
push
fwait
xchg
inc
in
rolb
pop
push
pusha
repnz
call
xor
cs
fmull
add
ret
jge
jb
push
mov
je
or
loope
out
ret
das
jns
pop
mov
sahf
xchg
sub
aaa
pop
fistpll
push
subb
dec
pop
push
push
arpl
rcl
or
aad
pop
cltd
dec
and
fisubl
cmpl
jnp
insb
ss
imul
cwtl
pop
sub
dec
outsb
sub
jo
sub
insb
in
mov
cmpl
out
cmp
mov
or
ljmp
xor
push
pop
jne
cli
nop
mov
das
jmp
jmp
test
sub
and
cmpsl
jbe
pop
cmpsb
int
fsubrl
pop
leave
dec
or
fidivl
or
repz
aaa
push
lret
sbb
jne
mov
sub
mov
or
xor
dec
adc
jno
xor
xor
int
dec
sub
inc
leave
pop
insb
insl
nop
dec
mov
mov
add
mov
adc
addr16
push
in
mov
fs
xchg
mov
dec
or
inc
jae
jmp
aas
hlt
jbe
fsub
add
push
add
jge
lahf
sub
jmp
xor
das
jnp
shll
dec
addr16
fs
pop
cmpsl
xchg
inc
movb
sub
cmp
jbe
mov
ret
or
sbb
or
mov
ret
hlt
pushf
es
mov
fisubrl
ret
inc
dec
sub
sub
push
and
fnstsw
jmp
adcb
mov
in
int
or
xchg
xor
pop
ret
in
adc
and
hlt
pop
mov
adc
sbb
adc
inc
sub
rorb
push
repnz
adc
lds
js
push
test
jle
add
xchg
repz
cmpsl
xchg
push
popf
jle
outsb
jmp
mov
test
sub
ret
pop
cli
andb
int3
push
push
lods
sti
out
mov
daa
cmpsb
cltd
lods
fisttpl
fistl
aad
jne
push
inc
ljmp
popa
adc
xchg
lcall
pcmpgtw
lret
push
sub
jnp
ror
repnz
pop
incl
out
aam
imul
sbb
sbb
push
fstl
sbb
out
push
cltd
inc
pop
repz
sbb
inc
pusha
int3
pop
push
xor
mov
repz
dec
dec
ja
lret
or
cmp
loop
pushw
sbb
xchg
xchg
lea
out
das
cs
out
gs
xor
into
aaa
pop
cli
adc
popf
xchg
or
rcrl
test
lock
imul
sub
test
pop
das
push
ret
outsl
cld
mov
cmc
mov
cmc
sbb
push
and
inc
arpl
mov
das
mov
clc
mov
adc
inc
cmp
int3
xchg
in
stc
les
lock
xor
cmpsl
and
cmovp
js
cltd
push
rcrl
pop
rcll
jg
lcall
xchg
sub
gs
mov
inc
int3
add
and
es
hlt
insl
xchg
jns
add
daa
in
icebp
sub
dec
cmp
hlt
mov
adc
add
inc
or
js
negl
cs
mov
dec
ja
repnz
and
mov
cmp
test
mov
cwtl
fidivl
test
sbb
jbe
mov
lret
hlt
inc
pop
dec
push
sub
inc
mov
divl
cltd
adc
out
inc
pop
je
js
bound
mov
cmp
fdivs
xor
js
push
repz
aad
xchg
inc
cwtl
or
rorl
aaa
stos
or
dec
divl
and
or
out
mov
fbld
jecxz
int
mov
ljmp
mov
aaa
push
lods
xor
cmpsl
adcl
and
repnz
mov
and
push
notb
rcrl
inc
mov
mov
mov
cmp
push
or
add
xor
pop
std
testb
outsb
mov
or
and
mov
pop
xchg
dec
jne
sbb
fbstp
mov
xchg
jne
imul
pusha
int
test
sbb
jno
jg
xchg
add
mull
dec
fmuls
repz
sbb
mov
push
jns
cs
ret
lds
aad
mov
mov
xchg
in
stos
gs
dec
sbb
sub
and
inc
inc
mov
lds
or
iret
stos
add
fcompl
pop
fiaddl
inc
aam
insb
xchg
inc
mov
xor
xor
push
shrb
outsl
sub
push
pop
xchg
scas
dec
lahf
ljmp
pop
aam
fcomps
pop
push
xchg
xor
dec
leave
push
push
shrl
fstpl
fidivrl
xlat
fildll
mov
aas
jmp
fistpl
inc
fbld
push
dec
clc
pop
std
dec
inc
je,pn
adc
cmpsb
sbb
xchg
or
fwait
pop
inc
cmp
into
pop
push
arpl
dec
push
and
movsb
mov
adc
mov
rcr
outsl
out
fisttpll
cmp
mov
fs
outsb
mov
rcrl
push
pop
pop
daa
sub
imul
popa
lret
scas
jnp
pop
mov
mov
fs
repnz
lahf
mov
frstor
fidivl
xor
sbb
testl
pop
inc
mov
clc
pop
inc
adc
and
je
js
cld
imul
adc
test
icebp
cmp
shlb
lods
cmp
cld
sbb
xlat
mov
mov
ja
or
mov
push
inc
pop
push
pop
xlat
icebp
inc
fidivrs
cmp
inc
inc
test
push
dec
adc
repz
mov
sahf
cltd
popf
inc
inc
pop
cmp
mov
adc
xchg
and
xor
mov
rcrb
outsl
insl
shll
inc
shrb
mov
mulb
pop
cwtl
popa
push
ret
lea
scas
sbb
in
or
xchg
pop
inc
imul
fsubrs
inc
imul
jecxz
rorb
push
insl
imul
cmp
cwtl
dec
stc
sbb
add
push
outsb
les
pop
loop
add
mov
movsb
icebp
mov
rcrb
test
hlt
in
stos
push
mov
jg
sbb
pop
dec
loope
inc
sbb
in
pop
shrb
cmp
mov
jnp
push
cmp
cli
cmpsl
movsb
jb
outsl
sub
mov
lock
xor
pop
ret
push
fiadds
cmp
ljmp
dec
mov
in
sub
mov
scas
jbe
shll
test
push
xor
fadds
ss
out
stos
mov
outsb
cmp
push
arpl
shrb
in
sub
jno
inc
loop
adc
push
push
xchg
jo
sub
pushf
ud2
inc
or
mov
pop
cmp
loope
sub
adc
or
adc
add
add
jbe
xlat
scas
dec
sbb
fmulp
call
mov
daa
jae
and
sub
dec
fldcw
dec
inc
rcll
or
cmc
loopne
arpl
mov
adc
aad
ficompl
out
add
lods
mov
ljmp
ds
daa
pop
xchg
fidivl
lds
push
rclb
push
enter
jno
les
mov
repz
sarb
mov
iret
xorb
sub
cmp
add
nop
iret
cmp
xor
das
push
loop
and
push
jne
dec
or
pop
mov
xchg
les
pop
ds
in
rolb
xor
cmpsl
lret
sub
xchg
out
inc
loopne
lods
sbb
and
xor
imul
sub
pusha
nop
stos
popf
inc
out
and
lahf
pop
test
mov
cmpsl
xlat
xor
stc
cmp
dec
fidivl
xor
mov
sbb
adc
dec
add
pop
inc
test
dec
shlb
sub
sbb
std
jbe
lds
cltd
pop
cmp
data16
stc
scas
pop
mov
push
mov
testb
push
and
test
mov
mov
push
xchg
push
push
dec
xlat
sbbb
cmp
jno
fdivrs
sti
xchg
out
lret
inc
cmpsb
jg
xchg
mov
or
add
aas
pop
iret
scas
jp
clc
insb
xor
push
push
xchg
dec
cmp
mov
cmp
in
rcl
rorb
push
cld
lcall
sbb
inc
inc
imul
orl
xor
mov
loope
mov
mov
push
mov
lret
sbb
jge
ja
pop
lahf
data16
aas
aaa
int3
or
jae
cwtl
xorb
inc
sub
stc
and
test
pop
shlb
cwtl
fisubs
repnz
and
push
ja
popf
mov
mov
or
ret
mov
je
or
pop
and
outsl
jo
ss
mov
out
mov
jge
test
mov
or
mov
outsl
xor
outsb
loope
push
fnstcw
jl
xchg
sbb
das
fwait
mov
daa
rcrl
push
pop
mov
cmpsb
ds
and
sub
sahf
inc
fcompl
mov
xchg
add
in
scas
sbb
movsb
mov
leave
and
pop
das
mov
xchg
imul
push
or
push
cmp
mov
push
out
add
test
push
jg
pusha
push
sbb
push
xchg
stos
stc
xchg
or
mov
xlat
cs
fwait
push
pop
ficoms
inc
loope
cmp
push
adcl
je
dec
adc
cmpb
adc
mov
ja
cltd
or
sbb
popf
stos
int
sbb
jbe
fcoml
and
mov
lods
push
push
dec
push
mov
sti
nop
adc
dec
lock
adc
sub
dec
js
ficompl
sbb
jp
cmp
aaa
movsb
js
mov
fucomp
movsb
add
mov
mov
mov
in
scas
pop
fcmovnu
adc
jmp
adc
loop
and
pop
outsl
mov
sbb
enter
and
and
xchg
sbb
push
test
cmp
jbe
mov
jbe
ret
js
sbb
push
loopne,pt
lds
mov
add
pop
rcll
sti
aaa
xchg
add
fwait
xorb
inc
std
test
xchg
sbb
adc
sub
mov
jbe
mov
je
adc
repnz
mov
xchg
call
cmc
pop
mov
pop
jb
jae
xchg
mov
inc
mov
xorl
iret
mov
fiaddl
xchg
xchg
jnp
pop
out
xchg
cmpsl
int
mov
lods
xchg
insb
add
adc
xchg
arpl
mov
fadds
scas
dec
dec
dec
dec
xor
jb
dec
fstpl
scas
add
jge
sti
adc
in
cmp
js
pop
mov
mov
in
xorl
adc
sub
jecxz
nop
mov
xchg
out
pop
enter
das
jge
iret
sti
les
inc
and
pop
repnz
lretw
mov
aaa
aas
jnp
pop
outsl
push
xor
decl
xor
push
push
iret
dec
mov
fcomps
cld
movsl
mov
pop
and
ljmp
push
maskmovq
negl
int3
call
in
lahf
ss
movsb
js
cmp
cld
dec
jae
iret
mov
imul
mov
push
mov
mov
xchg
clc
ror
ljmp
jmp
stc
fnstsw
fisttps
mov
movsl
jne
adc
sbb
pop
xchg
pop
cmp
rolb
xchg
jb
mov
aaa
push
stos
insl
or
subb
jno,pn
lods
lock
push
sub
jecxz
jmp
orl
lock
lods
cmp
push
in
add
xchg
daa
aaa
push
mov
orb
sub
cmpsb
out
mov
xchg
mov
jbe
aaa
jno
sub
xchg
push
std
loopne
pop
and
and
push
lods
pushf
inc
aaa
mov
shrl
push
cwtl
imul
xchg
push
mov
dec
pop
jne
lcall
pop
sub
jns
daa
pop
ss
sub
ror
dec
addr16
rclb
ss
add
into
hlt
jmp
push
xor
sub
in
and
shl
movsl
popf
js
cmp
jg
insl
mov
sbb
scas
stos
lret
pop
lret
pushf
aas
jl
sbb
sub
movsl
loopne
mov
aad
pop
xor
fwait
xchg
pop
enter
cmp
test
jge
sub
xchg
or
or
push
divb
xchg
ret
or
gs
test
inc
adc
es
mov
das
push
insb
aam
aas
jp
push
lret
in
xchg
and
xor
addr16
and
or
sbb
insl
jl
push
fcomps
ret
aaa
flds
and
sub
and
dec
and
cs
scas
sbb
imul
mov
stos
push
popf
test
movsb
ret
clc
shll
dec
pop
out
fwait
addr16
leave
inc
mov
cmp
xchg
pop
mov
add
ja
setg
out
pop
leave
int
notb
outsb
sbb
dec
mov
push
add
sbb
pop
lea
leave
sbb
mov
sub
pop
lock
jle
es
sbb
xchg
sub
dec
mov
in
out
call
or
das
enter
shrb
sbb
popl
jae
int
call
or
popa
jae
sub
dec
mov
int3
insl
je
xchg
mov
incl
mov
dec
mov
push
popf
xchg
add
jnp
lahf
aam
adc
movsl
insb
daa
jo
stc
mov
cmpsl
and
or
sahf
or
mov
out
push
popa
shrb
inc
sub
scas
call
jecxz
and
sarl
mov
inc
push
sbb
jns
xor
xchg
scas
js
jp
dec
xor
movsl
cmp
sbb
insb
sbb
mov
cltd
andb
push
sub
hlt
sbb
mov
mov
popl
push
lods
xchg
mov
jecxz
dec
cld
cld
pusha
dec
repz
cmpsl
dec
cld
adc
mov
cmp
loope
into
adc
jns
push
cli
shlb
adc
hlt
push
mov
push
and
dec
cmp
lea
and
imul
push
mov
xchg
ret
mov
xchg
outsl
xchg
cltd
and
enter
jns
insl
ds
dec
jne
cmp
dec
pop
dec
cmp
mov
dec
dec
xor
int
sbb
push
fistpl
jbe
mov
pop
mov
mov
adc
xchg
fwait
mov
push
enter
adc
bound
adc
xor
lahf
inc
movsl
push
mov
and
ljmp
mov
sub
sub
adc
dec
lods
sub
push
sbb
inc
fbstp
adc
jo
mov
sub
inc
xchg
shr
mov
lods
pop
push
test
insl
mov
mov
mov
pop
js
or
sub
fistpll
mov
xchg
enter
test
and
xchg
push
aas
sbb
movups
mov
daa
lods
cmovne
outsb
or
adc
insl
repz
test
je
cwtl
mov
add
or
mov
lret
add
cmp
jo
mov
iret
insl
lods
leave
dec
mov
les
dec
and
movsb
jge
in
mov
jmp
rol
add
fdivrl
cmp
and
jg
dec
xor
cmp
jle
dec
lds
cmp
add
sahf
and
jle
adc
mov
jp
fadds
cmpl
jno
ljmp
jns
cmp
ja
repz
insb
sbb
aam
js
mov
xor
test
xchg
nop
sti
and
or
sbb
aam
push
cmp
jle
inc
das
fists
pop
out
cs
movsb
ficoml
repz
out
adc
adc
sbb
test
or
iret
dec
or
rol
inc
adc
jbe
or
add
push
popl
xor
xor
out
les
xorl
jne
hlt
adc
mov
push
fdivrl
and
rcll
pop
xor
push
pop
inc
into
es
popa
jbe
jg
faddl
cwtl
cmc
leave
xor
out
jp
aam
or
sahf
cltd
movsl
ret
fcomps
ja
cmp
cltd
cmp
ds
sahf
in
xor
dec
dec
mov
and
adc
outsl
movsl
adc
mov
out
fs
cmc
out
xchg
subb
fwait
orb
ret
sub
aad
lea
dec
mov
sub
std
call
mov
xchg
inc
pusha
data16
cmpsl
push
xchg
push
pop
lods
push
jle
std
cmp
add
mov
lahf
shr
int3
aaa
sti
aaa
out
xchg
test
cld
aas
insl
arpl
jne
xor
popf
jb
pop
sbb
inc
imul
aam
jle
add
cmp
sarb
jb
jo
mov
insl
mov
mov
scas
dec
stc
xchg
push
pop
jo
sbb
nop
js
add
lods
dec
cmp
enter
in
xlat
sti
pop
inc
dec
aad
mov
rclb
and
inc
push
xchg
fnstsw
mov
outsb
lods
das
jo
dec
addr16
aaa
pop
xchg
sbb
maskmovq
divl
cmc
inc
pop
xor
test
mov
push
stc
adc
add
xor
xchg
cld
or
into
ss
lock
jns
xchg
mov
aam
cmpsb
fidivrl
jne
cltd
jecxz
push
push
repz
clc
mov
out
dec
push
mov
adc
sub
stc
hlt
xchg
addr16
lret
int3
outsl
dec
call
imul
jmp
xchg
shll
cltd
adc
in
adc
adc
push
fistps
jno
inc
cs
call
jns
sbb
popf
inc
and
push
outsb
inc
mov
or
imul
cmc
add
adc
jno
mov
adc
mov
cmp
les
int
sbb
inc
into
mov
xchg
stc
mov
pop
in
das
loope
mov
iret
pushf
push
mov
sarl
clc
cmpsl
jg
je
mov
fmuls
xchg
pop
stos
fists
lahf
stc
das
xchg
pop
cmp
repz
dec
pop
cmc
mov
lahf
push
dec
jp
in
test
lods
in
in
push
out
nop
sbb
lret
mov
mov
repz
jae
adc
jb
sbb
xchg
outsb
xor
sbb
sub
jecxz
mov
ret
mov
push
popf
sbb
mov
mov
call
fs
xor
jmp
int
mov
shlb
andl
cmp
rclb
jl
stos
mov
clc
mov
mov
pop
je
mov
mov
jnp
je
jecxz
in
mov
sbb
dec
sbb
arpl
xlat
movsl
push
mov
es
mov
cmpsb
sbb
adcb
stc
lret
mov
sarb
stos
out
cld
int3
int
mov
xor
sbb
xchg
push
jge
ljmp
hlt
rcrb
mov
jns
jl
popa
out
pop
enter
lea
dec
jbe
jmp
fwait
stos
mov
mov
sub
sbb
lahf
xor
ds
bound
pop
gs
sbb
stos
pop
pop
aad
xor
adc
xchg
clc
push
mov
jge
imul
idivb
mov
popf
cli
faddl
or
fnstsw
dec
adc
jmp
xchg
mov
lret
in
iret
push
dec
pop
pop
outsb
int3
pop
sub
mov
cli
mov
add
cmp
mov
mull
push
xchg
andl
lea
jno
insb
xor
rorl
lods
mov
xchg
das
jle
jmp
outsb
movsb
mov
int3
mov
jp
in
incb
add
imull
sbbb
gs
xchg
cmpsl
xchg
inc
dec
imul
xor
ret
js
fadd
lahf
cwtl
rolb
out
dec
lock
leave
mov
push
out
call
cld
sbb
xor
clc
popf
push
cwtl
mov
mov
or
inc
in
popf
dec
insl
and
lcall
push
rcl
cli
mov
or
hlt
cmpsb
xor
mov
aam
mov
push
sub
imul
xchg
jne
test
adc
sub
push
int
stos
ficompl
popf
loope
popf
nop
cwtl
xchg
cmp
push
inc
imul
mov
test
sbb
xlat
lret
mov
add
mov
repz
pop
jnp
je
cli
xchg
xchg
test
mull
or
movsb
aaa
jns
xorl
mov
loopne
jmp
cmpsb
mov
cld
xchg
adc
xchg
add
fwait
pop
fadds
adc
stos
dec
adc
cmp
aas
int
loope
imul
xchg
mov
call
movsb
xchg
sub
push
cld
push
aas
paddb
sbb
lds
pop
leave
pop
ret
xor
cs
cwtl
outsl
out
xlat
out
dec
pushf
pop
fxch
cmpb
int
cwtl
imul
sbb
cmp
outsl
or
xor
fisttpl
inc
neg
dec
sti
sar
enter
mov
incl
lock
jp
pop
in
jle
mov
xchg
or
pop
stos
rorl
aas
test
sub
sub
outsl
jbe
arpl
pop
mov
cmc
lret
push
ds
aam
jp
ret
cmp
mulb
and
xor
push
icebp
sub
adc
push
fdivs
push
add
mov
sub
aaa
sbb
divb
popa
sbb
mov
push
sarb
add
popf
or
inc
adc
test
in
push
and
pop
xchg
sbb
mov
mov
jge
popf
sub
fs
add
push
mov
xor
insb
inc
jmp
cmpsb
and
mov
xchg
cmp
aas
rcrb
jmp
daa
mov
push
jb
stc
movsl
pop
cli
dec
fisttps
fwait
scas
into
sahf
out
push
inc
mov
sbb
add
mov
push
enter
jl
fxch
xor
call
mov
nop
xchg
push
or
pushf
fwait
xchg
ja
push
rorb
mov
iret
sahf
add
aas
xchg
add
ret
gs
loop
pushf
pop
incl
add
cmpsl
jo
cli
cld
lcall
sub
gs
xchg
inc
cmpsb
jmp
fwait
scas
daa
xchg
imul
inc
push
mov
fwait
mov
and
add
pushf
nop
ret
cld
mov
repnz
mov
subb
std
push
daa
dec
pop
inc
rclb
inc
mov
cwtl
scas
stos
or
insb
dec
daa
setno
sub
and
sti
sub
leave
add
iret
push
out
clc
mov
mov
xor
or
outsl
fs
sub
out
push
fwait
outsb
out
push
loop
and
mov
xchg
dec
add
sub
out
test
pop
std
imul
lods
int
jecxz
mov
out
out
adc
outsb
icebp
scas
mov
pop
jge
push
mov
inc
xchg
hlt
mov
xchg
lods
hlt
cltd
and
dec
pushf
loopne
mov
sar
cmp
bswap
pop
mov
or
jnp
cmpsl
and
leave
ljmp
pop
adc
mov
mov
scas
lods
or
add
dec
fcomps
in
inc
icebp
ret
in
insb
testl
cmpsb
mov
mov
fdivl
inc
push
std
les
jb
das
stos
out
ret
inc
xchg
adc
add
and
adc
mov
std
outsl
in
xchg
fcoms
xchg
ret
pop
xchg
stos
les
push
push
adc
pop
data16
popl
sbb
mov
in
popa
ret
icebp
outsl
jns
in
pushf
inc
jnp
enter
xor
ljmp
mov
push
xchg
cmp
dec
in
cmpsl
scas
int
in
filds
jne
mov
shrl
outsl
fsubrs
test
lret
add
out
cwtl
mov
add
es
mov
and
xor
in
les
sysenter
or
xchg
and
lods
or
sahf
movsl
jmp
sbb
adc
sub
xchg
jae
lahf
push
bound
mov
adc
xchg
jo
scas
pop
fucomip
push
ss
sbb
inc
fsubrs
push
dec
scas
cmpsl
xlat
out
rcrl
test
lock
loopne
ds
daa
pop
sub
loop
clc
mov
adc
bound
cmp
in
pop
lds
dec
and
ret
mov
aam
out
and
andl
sub
push
movl
js
out
adc
pop
orb
fadds
pop
fiaddl
fisttpl
cs
add
fisubrl
push
mov
out
in
test
push
adc
sbb
pop
enter
inc
push
adc
fldt
mov
rclb
mov
sub
push
jmp
fldl
sbb
xchg
stos
xchg
fs
je
ret
fdivs
rcll
fcmovnu
sub
push
xor
pusha
call
inc
movsb
or
jne
out
push
adc
repnz
inc
xchg
mov
mov
xchg
cs
inc
out
sub
in
add
aam
jle
lea
lret
push
and
push
inc
mov
in
and
in
call
stos
inc
push
pusha
divb
outsb
adc
or
les
lods
notl
stos
sbb
push
mov
sti
outsb
outsb
push
pop
and
hlt
or
xchg
dec
xor
cmp
pop
jle
in
mov
and
cltd
daa
test
adc
lods
out
ljmp
rclb
aam
stc
pop
shlb
sub
aad
push
out
adc
arpl
jne
lods
mov
pop
fdivr
je
andl
pop
xchg
inc
and
jno
sub
imul
push
sub
pop
bound
js
adc
dec
jg
mov
and
repnz
cmp
xor
sub
mov
hlt
inc
jbe
xor
in
cltd
pop
aaa
adc
pop
in
ljmp
mov
adc
add
xchg
outsb
dec
mov
in
shr
pop
push
and
lods
popa
mov
popf
ljmp
jle
insb
cmp
cmp
pop
jl
lea
ret
popf
jp
sar
fwait
and
mov
movsb
xchg
popa
out
lock
in
push
fsubs
xor
push
movb
xor
out
ret
stos
inc
in
mov
push
ljmp
dec
xchg
and
out
fcoms
loope
cmpsl
sub
iret
push
jmp
cmp
fstpl
xchg
jno
inc
fistl
adc
stos
rcr
jge
sub
pop
sub
cli
xchg
fwait
cmp
pop
add
bound
pop
sub
out
add
sbbl
sahf
adc
push
sub
xchg
sub
xor
adc
dec
push
dec
test
test
aas
and
les
sbb
xor
ret
outsb
test
out
add
in
stos
cld
iret
movups
in
mov
xor
dec
jge
popf
mov
jg
cmc
mov
xchg
cmpsb
push
pop
add
nop
sti
or
rol
mov
sbb
push
popf
jnp
mov
or
xchg
pusha
jne
stc
pop
std
push
leave
and
cmp
mov
mov
out
ficoml
imull
inc
imul
clc
inc
repz
sub
lea
xor
popa
add
dec
scas
pop
mov
sub
push
push
jo
pop
call
inc
test
or
pushf
loope
add
aad
pushf
imul
dec
sub
xor
xor
xchg
out
push
repnz
in
cmp
jl
sub
in
int3
outsl
xor
je
fwait
jg
adc
int
psrld
dec
jnp
cmpsl
hlt
and
pop
lods
addr16
outsb
jo
sarb
jl
xor
iret
push
lcall
cmpsb
out
cmp
frstor
mov
sti
adc
cmpsb
std
mov
les
mov
sub
jae
cld
hlt
inc
fcomp
testb
dec
dec
jecxz
adc
push
mov
test
jge
push
test
dec
fcoml
mov
cmc
jns
movsb
jne
andl
jle
or
test
scas
pop
lahf
jae
sub
insb
ja
cli
lds
mov
cli
push
test
mov
xor
sub
and
xorb
jbe
scas
xor
aad
nop
cmpsl
inc
rcrb
bound
pop
cmp
push
popf
ss
les
xlat
pop
push
jecxz
mov
imul
jae
push
stos
adc
sub
xchg
aam
jp
insb
mov
aad
call
mov
clc
lods
stos
hlt
out
cmp
adc
into
adc
cld
mov
lret
and
pop
push
lret
mov
push
in
lods
mov
je
jbe
data16
push
jl
cmp
pop
pop
test
jp
xchg
cmpsl
loopne
scas
dec
mov
mov
daa
inc
out
fwait
in
psubw
sub
cmpsl
add
andb
int
jmp
sub
xchg
fwait
sbb
push
int3
and
jns
hlt
xor
fisubrs
in
pop
push
push
pop
xchg
xchg
scas
jno
inc
dec
lret
jno
mov
add
dec
mov
fistl
push
loope
pushf
mov
push
dec
aaa
sub
push
and
sbb
cmp
jb
into
cli
add
lret
xchg
aas
lret
push
xlat
pop
fs
jno
mov
js
fsubl
test
mov
inc
ds
cld
mov
stc
mov
ficomps
mov
cs
addr16
scas
and
and
dec
into
stos
jl
mov
pop
icebp
stos
pop
outsl
loopne
inc
xchg
pushf
jb
inc
out
fmull
cmp
xchg
push
test
cltd
test
push
insb
aad
into
mov
lods
and
inc
mov
add
cmp
loopne
inc
in
enter
mov
pop
es
aaa
outsl
addr16
cmp
xchg
test
sub
inc
je
cli
inc
bound
jp
imul
insb
dec
inc
scas
push
mov
iret
or
pop
mov
arpl
je
mov
pop
push
aaa
cs
mov
icebp
rclb
xchg
sbb
pop
mov
ljmp
iret
inc
jae
jno
stos
mov
xchg
aaa
stc
pop
sbb
xchg
aad
test
mov
pusha
outsb
sub
loope
mov
dec
mov
out
sub
mov
loope
push
in
subl
mov
pop
insl
hlt
dec
xchg
inc
in
hlt
ficoml
xchg
js
dec
ljmp
and
jecxz
push
faddp
iret
faddl
lahf
addr16
mov
clc
scas
jmp
jg
mov
iret
mov
repnz
or
mov
jb
test
cmpsb
aaa
lret
push
out
push
je
loopne
xchg
jbe
jbe
push
negl
jae
movsb
mov
lret
and
hlt
dec
aad
nop
jb
inc
cmc
and
sahf
mov
mov
sub
ret
icebp
negb
movsl
mov
add
sarb
cmpb
shll
aad
loop
and
ss
jbe
or
and
test
lahf
mov
xchg
mov
jbe
mov
and
ret
movsb
jge
jbe
inc
inc
das
mov
push
fldl
xchg
aam
gs
shll
imul
adc
lods
or
sub
hlt
ja
leave
pop
pop
pop
lcall
sahf
shl
cmp
hlt
push
xor
je
xorb
add
jge
fwait
push
add
mov
adc
dec
push
mov
or
sub
insb
lahf
xor
loope
fiaddl
insb
stos
mov
adc
leave
insb
int3
fcomps
das
jmp
mov
pusha
lret
push
xorl
out
mov
pop
leave
nop
jo
xor
add
shrl
jno
imul
fwait
mov
aad
movsl
mov
jmp
mov
int
jg
in
popf
js
inc
hlt
mov
mov
lcall
fidivs
in
inc
mov
shlb
push
adc
pop
sti
es
mov
adc
dec
mov
or
loope
icebp
shrl
inc
orl
pop
mov
push
pop
mov
jne
int3
clc
imul
xchg
fs
movsl
fs
jecxz
cmp
jmp
out
adc
add
repz
and
rolw
push
enter
movsb
pushf
pop
imul
pusha
dec
test
push
mov
sbb
xor
pop
test
xor
out
inc
dec
cmp
jb
out
mov
mov
mov
loopne
jbe
imulb
sub
jecxz
pop
push
lret
pop
loope
insb
movsb
jle
sub
cmp
lods
fidivrl
xchg
jno
pop
mov
in
mov
adc
mov
xor
add
ljmp
cmp
push
mov
call
adc
out
inc
sbb
js
mov
sahf
mov
addb
popa
insl
lret
aaa
in
xor
add
adc
jo
xchg
dec
cmpsb
fisubs
and
mov
push
insl
dec
shll
mov
int
jmp
je
sbb
outsl
adc
sarl
add
pop
or
jmp
lret
iret
fs
xchg
mov
sbb
cmp
xchg
les
push
mov
aam
push
cli
jp
imul
decl
bound
xor
push
and
insb
fcmovnu
arpl
mov
int3
sbb
into
lds
sbb
fidivl
cmpl
sbb
sbb
into
out
pop
in
mov
dec
int3
or
inc
jp
add
cli
pop
inc
inc
dec
jne
ja
mov
sbb
mov
fcomp
or
xlat
jo
notl
xlat
sub
mov
push
pop
fimull
jo
lahf
insb
gs
and
lret
int3
les
fcoms
mov
out
arpl
pop
testl
daa
inc
or
and
and
cmp
mov
add
push
xchg
cmpsb
in
int
add
lret
mov
push
dec
sub
pop
sbb
loopne
jecxz
dec
add
mov
jmp
outsl
insb
and
out
pusha
lcall
cld
rcr
add
jbe
outsb
stc
add
pop
out
cltd
lock
aaa
mov
inc
xchg
ss
pop
lret
pop
mov
movsl
lea
adc
adc
je
push
ss
dec
jae
aam
fwait
pop
into
cmp
sarl
mov
and
outsl
mov
clc
mov
mov
mov
mov
jbe
in
lods
stos
sbb
add
outsl
mov
add
sub
and
je
sarb
sbb
fildl
xor
inc
rcl
lds
movsb
ss
cld
sub
fwait
jle
loopne
hlt
sbb
lock
sub
scas
lret
cmp
fimull
sbb
sbb
mov
clc
maskmovq
notl
jle
push
std
or
jmp
push
push
notb
lret
xchg
mov
jmp
cmp
inc
sbb
cmpl
mov
enter
out
test
call
aam
lods
mov
cltd
mov
cmp
into
mov
and
iret
push
es
and
jg
out
cmp
cli
and
push
cs
in
inc
enter
nop
cmp
mov
jmp
jg
push
loope
nop
inc
pop
into
out
addl
ljmp
push
js
or
loopne
daa
loopne
pop
fistl
loope
js
and
mov
lods
sbb
mov
or
cmp
cmp
repz
pop
inc
lret
sahf
nop
ljmp
xor
add
mov
adc
test
je
cmp
or
adc
imul
clc
mov
sbb
sub
imul
dec
pop
sbb
lahf
movsb
xchg
cli
aam
aaa
fprem
jae
push
pushf
insl
and
lock
stc
loopne
inc
pop
cmp
sbb
pushl
popf
testl
cmpsl
imul
sub
xchg
into
mov
repnz
pop
dec
sbb
pusha
inc
out
and
fs
test
pop
push
jge
sar
addb
mov
adc
push
sub
pop
lock
sbbl
and
mov
sbb
adc
jmp
and
mov
popf
jno
jg
adc
leave
cmpsl
mov
push
adc
ror
add
aad
gs
es
ret
mov
sub
push
ds
mov
dec
fmuls
addr16
sub
sti
sub
fdivrl
sub
or
vcvtdq2pd
and
bound
popf
sar
or
movsl
adc
mov
shr
jg
push
xchg
loop
repnz
xchg
xchg
push
insb
sahf
pusha
hlt
loope
mov
ret
or
and
cmc
negb
dec
es
imul
jo
sbb
mov
movsbl
mov
lock
push
ss
mov
std
push
leave
scas
cmp
std
pop
push
jmp
test
or
inc
push
sub
je
stos
clc
ss
rol
ss
push
leave
jo
scas
aad
and
jnp
in
pop
mov
cmp
push
sbb
push
gs
mov
in
jbe
fidivl
shlb
xor
jo
in
push
testb
bound
fildll
shrl
fmull
rorl
sbb
aas
shl
and
xlat
add
dec
cwtl
jmp
stc
clc
sbb
testb
mov
ret
lock
fcmove
test
sbb
lahf
mov
pushf
in
aaa
lahf
push
imul
pop
shrl
popa
mov
int3
pop
dec
xchg
mov
adc
mov
std
popf
and
xchg
jecxz
mov
movsl
aad
xor
dec
mov
or
jo
clc
dec
mov
call
mov
sub
movsl
adc
sahf
pop
imul
andl
fwait
ja
jns
mov
lods
jbe
adc
enter
push
adc
and
push
insb
cmp
or
push
jge
ss
enter
ja
jle
mov
std
sbb
je
ret
mov
in
icebp
cwtl
orl
repz
aad
xchg
mov
mov
mov
jo
in
shl
push
fdiv
outsl
scas
or
jmp
adc
ret
mov
sub
mov
and
mov
jmp
negl
mov
dec
inc
mov
das
loop
fs
add
dec
pop
pop
push
imul
inc
movsb
loope
mov
rorl
and
and
add
call
pop
jne
outsl
call
inc
pop
int
mov
fdivrs
jne
push
mov
pop
cmp
loop
shlb
or
pop
xor
es
je
mov
jns
pand
js
or
out
shlb
mov
mov
popa
cmpsb
xorps
sbb
cltd
out
cli
push
bound
or
xor
add
inc
test
push
push
xor
jno
rclb
jo
sar
or
jns
repnz
out
daa
mov
xchg
push
insl
sbb
aas
xchg
jns
fsts
mov
aas
nop
fwait
icebp
sub
xchg
push
test
mov
mov
inc
xchg
ret
andb
cmpsl
in
push
and
lods
cmp
arpl
add
cmp
inc
shr
cld
mov
arpl
pop
push
test
pop
xor
push
push
mov
popf
das
sub
jl
add
cmp
push
jne
jge
cld
sub
fldl
sbbl
sub
mov
mov
and
jae
out
stos
dec
or
jl
mov
xchg
ss
sahf
ret
stos
jno
cltd
stos
xor
mov
jb
shl
add
sbb
add
jnp
js
adc
mov
out
insl
add
shlb
imul
outsb
xchg
dec
adcl
scas
cmp
nop
fwait
push
repnz
mov
repz
aad
cmc
inc
popa
mov
je
repnz
ljmp
lret
sub
out
or
fcoms
push
shll
shl
mov
cmc
adc
loop
repnz
push
xor
dec
rcrl
xor
jmp
sbb
fprem
std
iret
nop
inc
and
test
xchg
pop
cmp
and
movb
clc
repnz
movsl
fadds
jge
or
push
adc
push
jge
add
push
enter
js
iret
push
adc
mov
mov
mov
push
cld
fbld
cmp
push
dec
inc
and
sahf
sbb
lock
inc
mov
adc
dec
ret
jl
jecxz
and
xor
fisttpll
xchg
loop
ljmp
sub
scas
mov
jmp
icebp
cs
dec
sbb
insl
mov
mov
aas
fcompl
inc
xor
jnp
lock
sub
dec
jbe
mov
mov
jp
fcompl
push
mov
xor
and
lahf
push
inc
mov
stos
or
cmp
pop
jbe
pop
fs
ds
jb,pt
call
bnd
sarl
cmp
filds
imul
jle
mov
test
into
divb
add
push
cmpsb
inc
jmp
xor
inc
dec
sarl
and
jmp
cmc
mov
std
sbb
fimull
cmp
jle
int3
loopne
aaa
jp
into
out
cmp
or
inc
xchg
add
or
pop
leave
mov
dec
push
fwait
jnp
cmpsb
and
cld
fnstcw
mov
fcoml
push
sbb
movsb
pop
push
or
cmp
push
inc
cmp
pop
pop
and
mov
lds
add
sbb
imul
jae
push
xchg
int3
cmovnp
clc
cs
lahf
negl
mov
enter
xor
sbb
jl
movsl
cld
arpl
sbb
adc
rcr
shlb
sahf
dec
out
or
and
mov
dec
xchg
sbb
xchg
or
lret
cmp
add
stos
jnp
lods
mov
in
push
jg
add
mov
xlat
jmp
test
jb
test
xor
das
enter
imul
daa
add
jb
mov
mov
les
jb
pushf
lcall
xchg
icebp
push
lret
mov
aad
dec
das
data16
sarb
jne
jo
das
mov
push
shl
notl
jl
mov
push
hlt
xchg
or
and
hlt
push
xchg
mov
sub
sbb
les
in
movsb
cltd
mov
frstor
add
imull
ficoms
inc
sbb
add
mov
aas
movsl
xchg
push
cmp
pop
aaa
mov
push
clc
cld
pop
push
out
mov
movl
pop
popa
adc
shl
sbb
adc
cld
js,pt
cmp
push
sbb
shl
dec
xor
mov
jb
cmp
ficoml
jne
outsl
mov
push
add
fwait
shrb
xor
in
stos
int
stc
mov
sar
dec
adc
aad
xor
pop
pop
xchg
fbstp
add
aam
popf
and
leave
insl
cmpsb
pop
aaa
sti
dec
out
mov
aam
xchg
imul
in
divl
movsl
mov
and
xor
mov
mov
cltd
and
fsubl
inc
ficoml
out
cmc
cwtl
mov
jl
cmc
and
mov
or
and
sbbl
adc
mov
test
gs
jp
data16
sub
inc
pop
adc
cmpb
pop
enter
mov
rcrb
lret
rcll
mov
out
enter
mov
jo
adc
test
add
enter
mov
fcoms
movsl
or
rclb
mov
cmp
loopne
insb
data16
fldenv
mov
test
xor
add
inc
fiadds
pusha
cmpsl
aaa
mov
jp
in
inc
ljmp
enter
push
lea
mov
add
mov
add
sahf
cmpsb
sar
hlt
xchg
mov
xchg
dec
adc
adc
addr16
push
mov
movsb
orb
add
or
movsl
cmc
mov
push
sub
fwait
aaa
into
gs
in
out
dec
push
scas
dec
cmp
andb
ret
test
dec
cmp
sbb
popf
jp
push
lods
dec
aam
and
sub
ret
fstpl
test
repz
std
jp
orb
jle
leave
add
pop
mov
aad
push
rcrl
and
out
cmp
jge
dec
pop
stc
pop
dec
push
xchg
inc
dec
sbb
cmc
or
xlat
fdivr
sbbl
sub
cmpsb
cli
mov
mov
fidivrl
and
out
adc
pusha
xchg
and
scas
pop
aad
mov
and
loopne
mov
sub
mov
lods
inc
mov
mov
push
push
scas
loope
dec
xor
ja
xchg
imul
sbb
sub
sbb
jmp
lret
rdmsr
push
pop
jae
je
pop
cmc
pop
bnd
mov
mov
in
xchg
fisubrl
cltd
test
ret
mov
ss
mov
loop
std
pop
jns
mov
imul
inc
adc
push
cmpsl
xchg
pop
jg
xchg
pop
loop
or
mov
fpatan
jp
dec
dec
ja
ss
adc
mov
dec
mov
stos
jb
lods
test
sti
dec
and
out
mov
inc
sbb
outsl
jno
sahf
ret
fmul
dec
or
push
jmp
jge
pusha
movsb
jge
push
cmp
jle
lds
stc
cmp
cmp
add
cmp
add
push
xor
repz
push
mov
out
add
jo
xchg
xchg
mov
jno
ja
cld
imul
popf
xor
xor
add
jle
xor
xchg
xchg
jg
mov
out
lods
jne,pn
mov
and
andl
mov
cmc
and
mov
ret
sub
int
adc
jb
mov
into
hlt
fcompl
sbb
adc
push
ret
in
cwtl
fs
inc
mov
mov
jg
xchg
inc
pop
cmpsl
or
ja
aaa
gs
pusha
aam
cmpsb
add
push
cltd
cmp
js
cmpsl
into
mov
inc
pop
mov
cltd
fdivl
pop
adc
repnz
dec
push
pop
push
jmp
mov
sub
inc
mov
mov
and
int
and
xor
cs
addl
lds
jl
popf
dec
movsl
cmpsb
jge
out
cmp
nop
sarb
push
push
xchg
xchg
jge
pop
xor
sahf
sub
cwtl
and
mov
push
sub
out
jnp
xor
cmp
add
out
je
sbb
ficoml
ljmp
test
pop
aam
push
cmp
pop
fdivrl
fdivs
jge
xorl
add
jmp
bound
dec
inc
cltd
mov
ret
inc
outsb
aas
leave
fsubp
in
je
popa
dec
rcrl
or
sahf
mov
sub
jbe
sbb
and
mov
mov
fidivl
xor
nop
movb
cld
jmp
or
adc
xchg
and
add
addb
lahf
xchg
jbe
movsb
fs
jnp
imul
or
lcall
lock
ss
into
cmp
add
push
pop
xor
inc
aam
and
push
cmp
sbb
dec
mov
adc
adc
icebp
sbb
lcall
popf
ljmp
xchg
ss
cmp
xlat
cmpsl
push
dec
lods
mov
cli
cmp
arpl
dec
movsb
popf
movsl
pop
testl
jae
ja
jecxz
sahf
rcll
or
ljmp
cmp
in
add
mov
enter
add
mov
mull
and
sub
call
cwtl
add
popa
cs
xlat
aas
add
scas
xor
icebp
dec
fdivl
cwtl
leave
xchg
aam
sarl
adc
dec
jae
mov
mov
add
repz
and
cmp
in
mov
or
jo
mov
sbb
or
pop
mov
push
pop
add
js
loop
mov
les
lea
arpl
pop
cmp
and
sub
incb
aaa
mov
fldenv
ljmp
popa
daa
push
mov
adc
adc
out
negb
xor
mov
or
inc
ds
jns
xor
push
sub
lahf
or
arpl
jo
stc
aam
xchg
xor
mov
imul
pop
sub
dec
popa
sbb
jecxz
pusha
or
add
cmpsb
je
lcall
daa
xor
jmp
and
sbb
add
mov
cmp
mov
cmp
xchg
cwtl
stos
xor
lea
rcrl
imul
iret
and
mov
cmpsb
or
cwtl
repz
mov
jmp
orl
mov
push
pop
mov
imul
lret
aam
xor
sti
in
mov
jae
pushf
lret
mov
add
test
and
xor
hlt
mov
decb
mov
aad
jno
sbb
add
pusha
stos
nop
nop
cmpsl
test
loope
lahf
ljmp
jg
add
mov
lahf
das
and
adc
and
mov
jl
jbe
mov
jmp
das
sbb
lods
sbbl
push
dec
cmp
cltd
pop
xchg
xor
in
jecxz
or
mov
subl
decl
jnp
cmpsl
pop
loope
sub
xchg
jbe
dec
mov
mov
pop
mov
sub
mov
and
sub
sahf
sti
cli
pop
frstor
add
xchg
sub
repnz
scas
or
test
leave
jb
sub
iret
lods
lcall
mov
pop
mov
fisubl
adc
je
idivb
push
inc
insl
lock
aad
fcomps
shll
fsubrp
pop
and
cmp
mov
mov
inc
pop
lds
xchg
cmc
sarb
adc
shrb
aad
mov
andl
and
and
sbb
js
mov
roll
sbb
imul
inc
and
in
in
pop
leave
adc
getsec
lock
repz
ret
jbe
mov
dec
xlat
stos
cltd
negb
xchg
cmpsb
push
ja
fldenv
push
lds
or
aam
fistpll
inc
mov
jb
movsl
sahf
inc
sub
insb
cmpb
push
jmp
mov
aaa
cltd
out
dec
push
lock
push
pop
loopne
or
jne
frstpm(287
loope
gs
cwtl
lods
shrl
aam
cmp
jns
js
inc
fsubr
addb
mov
mov
mov
loopne
popf
out
jnp
xchg
orb
shlb
test
jl
mov
mov
mov
bound
jmp
cmp
mov
mov
lods
jmp
push
jnp
and
roll
idivb
out
loopne
and
jnp
inc
cmpsl
enter
push
cmp
inc
jbe
sub
lea
aaa
aas
popf
and
adc
pop
mov
ljmp
cmp
mov
xchg
bound
mov
out
stos
adc
cmp
dec
pop
insb
mov
test
ja
shl
mov
push
add
cwtl
jle
jle
xor
push
loope
fistpll
and
adc
sbb
shrl
jge
xor
repz
and
icebp
and
mov
jmp
enter
xor
imul
mov
pop
mov
xor
loop
hlt
jno
mov
adc
scas
hlt
gs
push
xchg
hlt
les
mov
out
xchg
mov
sbb
fadds
arpl
aam
bswap
std
jg
and
add
adc
inc
ljmp
jg
pop
jl
rclb
mov
sbb
in
fldl
mov
pop
mov
cmpsl
lds
mov
mov
lock
lods
adc
ret
adc
adc
push
push
addr16
out
repnz
in
push
push
xor
dec
aad
xlat
cwtl
dec
std
inc
imul
mov
mov
addb
rolb
sahf
jbe
xchg
in
cmp
aam
scas
sub
mov
aam
notl
sbb
sub
add
xchg
int3
jbe
sbbl
add
enter
xchg
pop
dec
mov
sbb
push
and
xor
cmp
out
mov
adc
jge
xor
push
push
push
and
mov
dec
and
cmp
pop
add
fsubrl
jmp
or
outsb
in
inc
cmp
xchg
sub
lahf
mov
mov
cli
or
mov
sahf
fistpl
dec
mov
jnp
test
push
cmp
cmove
mov
add
fsubrs
cs
jae
inc
jmp
data16
sti
lock
lods
mov
dec
je
and
and
rcrb
dec
dec
xor
mov
hlt
daa
scas
cmp
sub
jge
cmp
sahf
push
jmp
cmc
and
inc
aam
bound
sbb
arpl
cltd
std
cwtl
jbe
pop
cmp
jecxz
les
in
cli
mov
dec
push
jmp
dec
cmp
adc
jecxz
nop
inc
mov
adc
out
mov
in
hlt
mov
or
inc
test
mov
out
shlb
dec
mov
scas
movsl
push
pop
out
sub
inc
cmp
push
mov
mov
cmp
jge
int3
mov
bound
pop
dec
cltd
pop
ret
rcrl
pop
ja
push
cmp
mov
push
mov
cltd
pop
mov
pop
jl
jge
mov
pop
pop
xor
les
icebp
stos
imull
and
xchg
dec
repnz
clc
mov
push
sbb
and
sbb
pop
pop
mov
pop
push
outsl
xchg
int
add
dec
jle
mov
sub
cmp
scas
sub
imulb
inc
cmc
pusha
shll
bound
xor
stos
xor
add
mov
pop
pop
sahf
stc
and
cmpsl
xchg
fistpll
or
pusha
lea
cmpsl
cmp
jge
iret
push
pop
xchg
mov
inc
lcall
add
mov
push
mov
scas
jnp
ljmp
cs
add
sbb
jl
outsb
xchg
mov
add
xchg
cld
xor
nop
cmp
fnsave
mov
add
es
loope
test
ja
or
push
push
popf
dec
ds
cmp
fs
push
cmc
xor
cmp
leave
push
jge
push
fcmovbe
pop
pop
pop
pushf
dec
sub
pop
jns
shr
scas
scas
sub
inc
push
mov
jne
jns
cmp
out
add
pop
add
je
pop
xor
jmp
ret
sarb
enter
bound
sub
data16
movsl
ret
pop
cmp
in
adc
fwait
mov
xor
inc
lret
mov
jp
daa
pusha
shlb
dec
cli
rol
cmp
mov
dec
xor
mov
or
mov
test
mov
or
gs
and
loope
inc
push
test
imul
cmp
sahf
loope
push
and
sbb
xchg
or
loopne
adc
imull
ja
enter
cmpsl
pop
orb
outsb
jmp
test
cli
insb
js
cs
cmp
jns
xor
sti
outsb
fwait
add
add
call
cmp
mov
jb
push
imul
pop
adc
cmp
dec
out
push
lock
idivl
inc
push
nop
movsl
add
and
data16
daa
hlt
or
mov
push
loopne
add
aaa
xor
sub
fnstsw
lret
add
sub
jmp
rcll
jge
pop
mov
dec
call
mull
das
dec
stc
mov
rorb
call
outsl
dec
pushf
pop
in
jae
gs
ret
and
lods
dec
pusha
cs
loop
movsb
rclb
cmpb
or
pop
fs
mov
lret
pop
xchg
xlat
xor
into
repnz
mov
and
out
mov
cmp
ret
popf
out
xorl
pop
jb
add
mov
dec
sbb
adc
mov
jmp
loope
lock
xchg
in
dec
jl
fs
rcll
jmp
xlat
ss
push
and
into
inc
or
stos
loope
ret
dec
and
repz
js
arpl
cmc
enter
sbb
push
sbb
or
dec
dec
push
cmp
add
rorb
jno
dec
fstp
sbb
inc
inc
in
call
cli
fidivrl
add
xor
arpl
adc
rcrb
inc
xor
sbb
stos
cmp
test
mov
je
lahf
lods
add
push
stc
imul
dec
jae
aam
pop
jns
jl
mov
in
pop
adc
push
cmpsl
out
or
mov
dec
and
xchg
call
popa
fdivs
mov
jl
outsb
scas
inc
sub
sbb
repz
out
clc
hlt
outsb
imul
pusha
sub
push
mov
jecxz
out
cmpl
jge
cwtl
xchg
in
push
xchg
xchg
mov
nop
mov
std
cmp
push
out
jmp
jle
push
fs
pop
rolb
sahf
dec
pusha
mov
jg
test
ss
and
xor
cmp
dec
out
jecxz
jae
inc
in
rdmsr
pushf
lods
mov
enter
and
das
adc
push
push
push
sbb
mov
xchg
push
in
cld
fstl
push
lahf
aaa
xchg
jmp
in
leave
mov
lds
stc
push
cld
das
inc
or
aaa
xorb
imul
mov
pop
xor
out
loop
movsb
sbb
pop
or
sbb
lock
push
push
arpl
sub
movsl
or
test
imul
mov
fcomps
rcrb
mov
mov
pushf
ljmp
adc
cmp
fistpl
rclb
andl
movsl
sbb
test
in
mov
jo
pop
fstps
sahf
and
lea
imul
sahf
scas
out
cmp
in
xchg
inc
mov
push
popf
stc
cmp
jg
scas
and
sub
pop
xlat
mov
mov
jle
add
adcl
lds
sub
mov
fs
cli
jge
mov
jne
jge
sub
pop
dec
popa
mov
in
mov
xchg
lret
lock
dec
mov
shrb
jno
nop
gs
sub
adc
or
sti
or
or
jne
sbbb
fsubs
stos
sub
inc
and
cmp
std
sub
mov
movl
mov
popa
sub
push
in
adc
cmp
in
mov
mov
push
lea
fwait
mov
lock
iret
or
pop
jge
outsb
jne
rep
or
loopne
mov
lret
jmp
ret
pop
in
adc
xchg
pop
imul
sahf
add
dec
add
sub
mov
addr16
or
pushf
imul
fstl
sub
in
push
sti
imul
iret
scas
push
test
push
jle
and
cmpsb
aad
mov
inc
mov
jle
mov
sbb
sub
mov
mov
mov
adc
cli
bound
mov
dec
ret
pop
pushf
inc
loop
int
in
xor
cld
lahf
ds
movsl
pop
sbb
sahf
imul
xchg
cmc
pop
push
es
mov
sub
subl
add
xchg
bound
sbb
add
int3
ds
clc
jns
out
jno
or
ljmp
sub
pop
pusha
xor
or
xchg
cmp
dec
shl
ret
xor
mov
sahf
push
jmp
in
lret
adc
add
imul
call
pop
fcoms
daa
sbb
jne
mov
pusha
sti
lahf
dec
xor
xor
cmp
mov
not
push
mov
lock
adc
ja,pt
andb
sarb
mov
xor
push
jbe
push
into
adc
inc
inc
leave
mov
pop
dec
inc
xor
mov
xor
sub
cwtl
mov
and
fdivrp
dec
mov
cmp
mov
notl
pop
push
mov
jle
mov
adc
mov
aaa
add
pop
sub
int3
inc
mov
and
andl
push
jo
cmc
into
lea
push
fsubl
call
out
repz
sti
scas
cs
add
dec
cld
leave
mov
sub
sub
or
shll
rol
xchg
cli
adc
int3
sbb
sbb
test
pushf
adc
fistpl
jecxz
mov
rorl
negl
mov
aas
cmc
imul
sbb
push
sbb
test
sub
adc
loope
sbb
aaa
leave
popf
test
ljmp
hlt
add
lds
adc
mov
inc
shll
popa
movsl
inc
xlat
push
dec
and
add
dec
add
adc
and
push
lods
lock
sti
arpl
sub
inc
shl
jl
dec
mov
pop
cmp
push
inc
push
out
and
loopne
add
push
sahf
dec
jp
inc
mov
sahf
mov
aad
xchg
mov
adc
push
jecxz
push
sub
test
testl
xor
cli
cld
add
call
cmp
inc
adc
pop
mov
jno
jno
or
inc
fwait
sti
cmp
push
push
lcall
stos
and
cltd
jl
cmp
out
cld
sbb
inc
test
es
dec
mov
icebp
mov
adc
jns
sbb
test
or
fsubrs
mov
cmc
pop
cmp
push
xor
mov
dec
push
cmp
popf
jne
lcall
rclb
sbb
or
mov
test
pusha
out
or
ljmp
mov
add
nop
xor
int
movsl
xor
jno
pop
add
fbstp
scas
fcos
imul
jmp
mov
xchg
arpl
sbbl
das
dec
add
sub
xor
lods
outsl
lret
push
sbb
pop
leave
sahf
dec
outsl
ret
rcrl
xor
out
test
sub
cmp
pop
data16
mov
test
imul
cmp
pop
scas
aas
xchg
sbb
out
mov
data16
repnz
popa
push
dec
je
fwait
icebp
out
mov
ja
jle
loopne
xchg
mov
in
aad
inc
jb
jb
pusha
int3
push
neg
mov
push
xchg
and
jg
stc
lahf
shlb
and
pop
pop
cmp
lret
xor
shl
repz
es
mov
testb
add
jo
xchg
in
mov
jo
pop
out
add
xchg
cwtl
fnstcw
pushf
test
adc
cs
mov
pop
dec
iret
push
popf
repz
inc
lcall
xor
mov
cmpsl
jo
adc
outsb
stos
adc
push
dec
inc
cmpsb
int3
xor
and
mov
sbb
jl
push
and
lods
es
push
xchg
xor
test
aas
jge
push
icebp
mov
jbe
jnp
xor
xor
pop
aaa
xchg
push
add
fdivrs
pop
dec
hlt
mov
push
ret
daa
xor
mov
ljmp
sbb
je
pop
lds
jg
movsb
es
cli
fimuls
arpl
inc
pop
loop
jle
and
test
xor
pop
mov
fsub
add
std
movl
or
and
loope
fsub
or
addr16
fnsave
push
in
cmpsb
dec
jae
inc
push
int
sti
push
cmp
cmovns
movsb
push
xor
inc
adc
mov
fs
daa
test
inc
jmp
bound
and
arpl
mov
jns
pop
xor
pop
mov
push
or
fdivrp
movsb
orb
aas
mov
iret
ret
xor
shrl
or
lret
pop
push
xchg
add
jmp
add
insb
mov
lahf
cli
push
icebp
js
adc
mov
into
push
dec
int
gs
gs
lods
push
xchg
inc
mov
cli
insl
push
mov
xchg
rcr
cmp
add
pop
icebp
negl
cli
iret
std
faddp
divb
inc
and
cmp
pusha
sahf
inc
add
cmpsb
sub
popf
mov
inc
lds
movsl
inc
pusha
mov
dec
pop
and
add
stc
movsl
lahf
mov
lods
push
mov
mov
sbb
fs
mov
jo
push
scas
dec
pop
rcll
inc
loope
out
cli
xchg
into
fmuls
pop
in
por
cmc
shlb
popf
orb
out
mov
mov
test
or
mov
jg
mov
repz
inc
psubsw
aam
mov
sub
jbe
fsubp
sub
jb
in
jns
and
adcb
xchg
outsl
fdivrs
push
jg
pop
addr16
push
add
shrd
jns
cmpsb
imul
mov
fsubr
push
ror
lock
xchg
mov
aam
rclb
dec
jge
cwtl
int3
call
icebp
adc
enter
dec
cmp
ja
mov
ss
push
dec
xchg
inc
or
xor
jmp
sub
in
enter
mov
mov
bound
dec
ret
jae
and
inc
clc
dec
xor
mov
or
div
xor
iret
sbb
push
lea
and
and
push
imul
pop
pusha
or
sbb
ret
mov
dec
inc
ret
cmc
repnz
mov
je
loopne
pop
icebp
push
in
outsl
sti
inc
inc
subl
shll
mov
rorb
ret
push
gs
cmp
xor
sbb
and
pop
cmp
xchg
popf
or
repz
test
mov
dec
lods
sarb
pusha
jmp
mov
das
addr16
bound
jp
push
lcall
or
out
and
pop
inc
dec
test
int
sbbl
xorb
clc
hlt
adc
inc
pop
fmuls
ret
push
testb
dec
test
dec
cmp
adc
loopne
js
rcrb
cmp
pop
dec
cwtl
mov
pop
or
js
mov
add
lock
out
cmpsl
lahf
shrl
pop
inc
rcll
imul
test
aaa
shrb
sbb
jle
cli
scas
lahf
dec
mov
or
jp
seto
mov
push
imul
arpl
adc
sub
js
sub
inc
push
js
xchg
mov
je
jmp
fidivs
cmpsb
jmp
bound
add
push
out
mov
call
bound
outsb
xor
mov
mov
pop
out
xchg
into
mov
add
push
fisttpll
push
out
ror
aas
cmp
mov
sub
shll
adc
mov
lock
test
pop
loope
sub
dec
lcall
jo
stos
xchg
push
call
jg
inc
lds
ss
imul
inc
mov
xor
fs
sbbb
or
mov
cmp
loope
sbb
mov
and
scas
cli
push
mov
pushf
shr
and
mov
movsl
lds
pop
out
in
sub
mov
shll
mov
das
aas
mov
dec
aad
pop
inc
adc
addl
ja
xlat
jnp
movsb
sbb
mov
jbe
test
mov
jmp
gs
mov
popf
push
dec
add
sbb
clc
scas
push
mov
jg
cmpsl
jb
inc
lock
stc
mov
push
jecxz
sbb
add
mov
popf
xlat
icebp
popf
cs
outsl
jge
jnp
mov
mov
sub
xchg
cmp
add
or
jae
and
adc
popf
ss
in
pop
mov
dec
data16
sub
mov
aaa
add
je
jb
test
in
lods
lahf
mov
fists
pop
xor
fidivrs
lods
ljmp
stc
fisubrs
leave
jmp
stc
mov
nop
imul
xchg
xchg
jecxz
add
sub
cmp
out
and
and
sarb
pop
loop
or
outsl
adc
pop
inc
arpl
fadds
mov
xor
cmp
ficoms
jo
adc
add
mov
lods
ja
mov
or
and
dec
push
mov
imul
into
mov
movsl
push
and
cli
loop
mov
inc
inc
inc
jno
pushf
add
xchg
std
xor
mov
adc
ja
ret
cld
mov
jecxz
ret
data16
xor
add
cmp
add
mov
in
pop
jns
sbb
cmp
xchg
out
mov
imul
dec
les
xchg
mov
jnp
inc
or
cmp
lods
and
pop
cmp
enter
daa
aas
sbb
pop
adc
jle
enter
arpl
leave
adc
and
int3
cmpsb
cli
adc
inc
test
push
lret
jge
jle
cltd
lds
clc
sub
cmp
sbb
add
push
insl
adc
or
nop
adc
mov
adc
test
mov
enter
aam
jnp
pop
cmp
pop
scas
mov
sbb
pop
cwtl
cs
mov
push
outsb
mov
lds
aas
mov
mov
jnp
adc
movsb
or
std
int
dec
dec
jb
jnp
jle
les
xchg
or
push
cs
lret
mov
xchg
jb
aaa
inc
push
dec
push
mov
sub
xor
lcall
adc
adc
or
jne
lret
cmp
jbe
orb
inc
enter
lcall
test
paddb
std
mov
pop
icebp
push
sahf
add
rorl
daa
jne
jb
mov
adcl
jge
mov
imul
jns
pop
rolb
fdivr
test
lds
inc
sbbl
xor
outsl
jp
fdivs
xchg
movsl
popf
dec
sti
sbb
dec
fcompl
adc
or
sub
jl
adc
adc
ja
jle
inc
movsb
adc
jns
mov
les
mov
subb
stos
mov
cmpsl
aam
in
add
add
dec
sub
sub
add
lret
jp
add
out
int
popf
mov
int
int3
les
cmp
jmp
mov
outsl
cmp
xor
mov
xchg
push
int3
dec
fistl
dec
daa
bound
mov
in
mov
adc
sub
jns
sub
int3
cmc
pop
inc
push
aas
lds
imull
aad
roll
rolb
ljmp
dec
mov
aaa
imul
cs
idivl
lods
jbe
pop
cmp
insl
bound
sahf
mov
jne
pop
cmpsl
js
ja
lock
jno
inc
mov
aaa
mov
loope
or
out
or
stc
dec
shrl
mov
push
mov
std
scas
imul
or
jno
cmp
jno
pop
sbb
test
sahf
xchg
hlt
adcb
ss
cmpsb
mov
out
bnd
push
pusha
push
icebp
pop
mov
inc
outsb
mov
out
insb
shl
cmp
xor
int
ret
pusha
dec
mov
dec
and
lret
mov
mov
and
call
repz
rolb
lds
rol
inc
sub
cmc
mov
pop
mov
aad
data16
lret
iret
cmp
pushf
mov
jno
jae
out
push
mov
xor
lahf
sar
add
ficompl
cmp
inc
mov
fidivs
mov
mov
pop
je
mov
mov
enter
add
xor
mov
pop
ljmp
or
push
loop
and
pusha
push
push
dec
fildll
or
jge
ljmp
pop
mov
pop
push
out
and
test
mov
mov
add
mov
xchg
dec
inc
roll
lret
push
inc
in
xor
mov
aad
psubusb
scas
popf
push
ds
std
sub
scas
aaa
cs
inc
sub
xlat
xchg
loope
mov
out
push
mov
jmp
xchg
fdiv
xlat
shlb
mov
xor
pop
jae
mov
imul
lea
dec
mov
push
ja
fnstsw
pop
mov
jecxz
xchg
jne
and
add
push
xor
into
add
mov
mov
mov
push
in
movsb
mov
out
jp
testl
nop
int
insb
roll
out
je
insl
outsb
jnp
movsl
sti
lock
push
xchg
js
dec
inc
xchg
sbb
inc
cmc
fwait
inc
mov
mov
push
cld
cmp
fsubrp
dec
push
xchg
clc
test
mov
lods
xchg
shrl
mov
clc
add
push
add
mov
shlb
mov
shr
icebp
call
cmc
ljmp
xor
lods
mov
bound
bound
mov
ljmp
out
push
xchg
inc
outsb
pop
sub
call
mov
push
shrl
std
arpl
movsb
add
jp
std
xlat
sbb
adc
cmpsb
sbb
and
jmp
xchg
push
add
fsubrp
add
lret
xor
mov
push
mov
arpl
lahf
rorb
inc
xchg
aad
fistl
jge
push
outsb
ret
add
sbb
add
aad
xchg
int
stc
cmpb
in
and
popf
insb
xlat
mov
cmpsl
pop
adc
jle
mov
pop
cmp
or
int
aam
mov
xor
negl
xchg
push
mov
mov
inc
pop
and
dec
jmp
aaa
std
jg
mov
xorl
cmp
push
or
mov
xchg
cli
dec
adc
fwait
mov
push
xchg
lods
cmp
xchg
cmp
test
movsb
mov
cmp
lea
xlat
jae
shrb
imulb
inc
lcall
sub
shrl
lods
xchg
mov
xlat
dec
mov
ret
pop
outsb
aaa
cmp
cltd
fnstenvs
jns
push
sub
dec
mov
cmp
ret
jp
sbb
leave
mov
fdivrl
int3
fs
outsl
mov
in
or
rolb
aam
repz
loop
and
lcall
or
out
jge
xor
xor
push
rolb
loop
pop
je
bound
inc
xor
enter
xchg
mov
out
repz
mov
pop
inc
hlt
cltd
mov
dec
jmp
xor
es
mov
arpl
xchg
icebp
bound
shll
incb
rcl
pop
fldenv
pop
test
rcr
rolb
add
hlt
repnz
push
mov
jge
mov
adc
cmpsl
sti
add
jne
movsl
dec
or
movsb
scas
cmp
xor
jl
dec
stos
fs
xchg
es
ret
pop
sbb
cmp
xchg
ficompl
inc
sub
lcall
inc
pop
sar
sbb
into
cs
push
sub
fnstcw
mov
test
push
js
and
push
cmpsl
clc
dec
les
mov
add
cmp
imul
xchg
scas
stc
repz
testb
mov
cltd
dec
xchg
sub
sahf
sub
adc
insl
pop
les
or
jo
int
jne
cs
xor
repz
ss
jbe
mov
imulb
or
cmp
outsl
fldenv
jge
inc
jno
fisttps
and
xchg
shrb
lods
scas
push
aaa
adc
xchg
sbb
lcall
pop
cmpsl
addr16
imul
push
pop
jecxz
pop
dec
push
iret
jge
or
ret
test
shl
xchg
ja
push
imul
inc
mov
mov
inc
and
adc
sbb
iret
in
out
xchg
lret
jle
push
adc
mov
ljmp
sbb
aaa
addl
mov
add
hlt
lock
and
push
sbb
inc
add
arpl
sbb
push
or
sti
call
outsb
mov
sub
jecxz
xor
mov
test
inc
sbb
lock
pop
dec
push
jle
xlat
inc
push
adcb
jns
push
or
push
lea
jae
pusha
inc
cmpsl
cmp
cmp
sub
add
fnstenv
jns
jl
lret
lods
add
add
and
pop
cmpsb
mov
lret
sar
je
or
scas
test
movsb
sbb
lock
mov
icebp
scas
adc
jb
in
xor
sbb
push
cmpb
pop
xlat
ljmp
fsubrs
mov
sub
xchg
mov
sbbb
adc
adc
dec
xor
insb
int
outsl
add
mov
into
addl
add
jnp
mov
xchg
jbe
sarb
mov
xor
movsb
or
aaa
xchg
outsl
ljmpw
aam
sbb
mov
mov
push
push
mov
mov
rolb
or
adc
into
inc
idiv
cmp
and
and
cmp
or
adc
mov
dec
out
out
mov
cpuid
mov
cmp
int3
inc
sub
movsb
loopne
leave
fisubs
addl
dec
fidivs
out
mov
push
in
dec
test
mov
sbb
pop
xorb
adc
shlb
das
mov
ret
lock
imull
fneni(8087
xchg
xchg
lret
mov
cmp
cwtl
dec
insl
pop
push
mov
cwtl
xchg
adc
sub
jge
sbb
add
push
push
lret
dec
mov
ficomps
sbb
out
mov
scas
push
or
and
dec
push
cmpsl
jle
loop
scas
das
movsb
das
pusha
inc
mov
dec
leave
testl
xor
sbb
fiaddl
push
cld
aaa
xor
sti
inc
add
sbb
push
sbb
js
test
xchg
jno
add
sub
xchg
add
pushf
arpl
andl
movb
lahf
adc
insb
data16
fwait
mov
pop
jo
stos
shr
add
clc
inc
pop
je
mov
data16
or
inc
adc
into
in
dec
add
sub
xor
sar
cmpsb
sbb
outsl
jns
cmp
jne
inc
pop
daa
aaa
test
sub
aad
push
inc
popf
jp
cmovg
int
jg
sbb
outsl
jmp
ljmp
leave
cmc
aas
sahf
insl
subl
jmp
jl
pop
sbb
pop
adc
mov
in
sub
mov
repz
shrb
push
jno
addb
mov
sbb
aaa
popa
sbb
xchg
jns
or
sahf
out
addr16
push
pop
lods
add
and
movsb
int
fsubrs
cmp
adc
mov
aam
mov
std
mov
pop
addr16
mov
jl
std
xchg
popa
add
insl
imulb
add
dec
add
mov
outsl
mov
mov
sub
ljmp
mov
iret
xchg
out
test
jle
xlat
inc
pop
xchg
mov
xor
mov
mov
xchg
roll
sbb
xchg
sbb
push
mov
out
je
ja
andb
push
lret
jbe
inc
jns
jno
push
fstpt
lahf
sahf
clc
sahf
jne
leave
mov
cmpsl
clc
sti
or
adc
in
mov
push
push
mov
mov
push
sub
xchg
cmp
xor
pop
ja
xchg
fadd
mov
pop
mov
insb
and
imul
sub
dec
mov
idivl
fwait
sbb
out
add
lcall
fs
psrlw
xor
cs
sub
testb
lcall
popa
cmp
arpl
or
icebp
mov
rcrl
push
mov
xchg
push
ljmp
xor
lcall
int3
pop
jle
inc
mov
aaa
xchg
xor
shrb
jae
add
push
sub
dec
push
pop
sbb
sahf
adc
scas
jae
vpminsd
rolb
out
sti
mov
jmp
data16
push
jmp
mov
adc
ret
adc
sub
es
jbe
pushf
xor
xchg
dec
inc
outsb
hlt
leave
xor
adc
jg
push
or
pop
roll
sbb
inc
sub
mov
and
loope
xor
lods
fistpll
cmp
cmp
into
inc
outsl
clc
and
mov
mov
ret
mov
movsb
inc
cmpsl
scas
sbb
mov
mov
test
enter
mov
or
out
jecxz
pop
inc
repnz
jle
je
add
sbb
outsb
jp
sbb
addl
xchg
cmpl
push
inc
ds
mov
pop
jl
mov
jne
test
jge
repz
cmp
inc
aaa
xchg
mov
in
cmp
mov
xchg
stc
push
lock
popa
out
xor
adc
push
jecxz,pn
xlat
and
outsb
sbb
lods
jns
mov
add
jo
imul
cwtl
mov
adc
sbb
fidivl
xchg
sarl
test
mov
fdivr
cltd
sti
adc
daa
pop
mov
cmp
aaa
mov
push
mov
scas
sbb
mov
popa
or
jge
sbb
mov
insb
divb
push
sahf
leave
cmp
cmp
and
mov
mov
addr16
fwait
lock
out
aam
mov
mov
inc
ret
es
sbb
lock
into
xchg
fsubr
std
sub
dec
push
mov
cmp
stos
pop
rcl
push
hlt
xchg
iret
jnp
push
test
ja
repz
sbbb
dec
push
xor
push
pop
jmp
test
pop
int
adc
imul
sbb
or
mov
scas
lods
enter
lahf
ret
cmp
pop
nop
enter
xlat
subw
inc
cmpsb
push
scas
mov
rclb
sbb
test
jno
mulb
stc
or
shrb
dec
fistl
pop
fldenv
repz
cmp
dec
aad
bound
addr16
add
leave
dec
ret
jl
stos
je
je
add
add
fwait
sbb
and
pushf
jb
sub
lret
pop
fcmovne
stos
push
aas
shll
or
ljmp
mov
inc
push
adc
push
xor
loopne
in
jg
in
insl
sub
inc
jmp
dec
sahf
cmp
push
dec
pop
mov
push
fisubs
pop
call
inc
js
mov
in
cli
dec
xchg
enter
aam
je
xchg
pop
nop
insl
mov
out
cmp
pop
cmc
push
cmpsb
iret
dec
cwtl
test
xor
push
xor
mov
mov
arpl
ret
adc
sub
int
enter
sub
inc
inc
xchg
cmp
mov
push
jmp
cmp
enter
cmp
add
jns
mov
mov
cmc
test
mov
mov
cld
cmp
shll
cmp
add
lea
mov
mov
add
mov
pop
push
push
dec
xchg
dec
loop
lods
jl
ljmp
sub
adc
adc
es
nop
cs
out
addr16
mov
add
scas
or
sbb
sbb
or
or
lods
push
jno
fwait
push
pop
add
insb
cmp
inc
enter
add
and
and
push
movsb
jg
jnp
lcall
xor
stos
mov
scas
daa
sub
std
mov
pusha
adc
xchg
psllq
cmp
int
push
pop
mov
mov
les
pop
mov
and
add
dec
adc
je
outsl
xor
ret
pop
xchg
out
cli
cwtl
repnz
adc
fs
test
lods
inc
xor
adc
loop
inc
imul
and
mov
sub
add
jno
mov
into
fmuls
loopne
or
loope
push
sbb
jg
push
mov
sub
dec
or
sub
stc
leave
push
aas
pop
or
ja
push
js
ret
pushf
fsubrs
es
daa
xor
jl
popa
gs
out
sbb
push
pusha
cmpb
sub
aaa
test
adc
outsb
inc
jp
test
call
arpl
sbb
mov
out
sub
inc
movl
movsl
imul
cltd
jl
int3
cmp
cltd
insb
cmpsb
xlat
sbb
ret
jns
mov
mov
fildll
mov
shl
xor
push
fstl
add
movsl
imul
scas
or
pop
out
aas
loopne
sbb
pop
pop
pop
pop
sbb
stos
test
xlat
dec
js
mov
test
imul
adc
fistl
stc
cmp
sbb
icebp
pop
push
int3
jp
mov
scas
jbe
and
mov
xchg
jecxz
mov
xor
test
lret
push
xchg
lds
lcall
stos
and
xchg
fistpl
mov
movsb
xor
fsts
es
jmp
inc
pushf
pop
les
dec
add
fdivr
pop
aas
movsb
jns
int3
pop
popf
pop
jl
jp
daa
inc
adc
cmp
adc
fldt
loope
inc
add
loop
add
cmp
jno
xor
jno
shlb
adc
pop
out
int
sahf
or
ret
xchg
mov
sbb
ds
bnd
imul
repz
xor
xor
jnp
sti
dec
and
ja
sbb
inc
and
xor
jne
gs
cmp
lods
adc
sbb
jns
icebp
dec
xor
pop
sbb
jecxz
and
scas
dec
shl
inc
jg
push
mov
lret
add
mov
push
and
out
pusha
add
pop
or
inc
push
mov
add
push
movsb
rcrl
sbb
xor
stos
lahf
icebp
jle
sbb
cs
xlat
fisttpll
in
stc
mov
dec
jle
inc
jg
xor
jno
and
xor
pop
mov
xchg
cld
and
jae
cmp
cs
push
inc
test
xchg
push
adc
add
mov
lret
movsl
and
call
push
lcall
mov
lahf
stc
bound
push
mov
xchg
jl
sbb
pop
mov
arpl
mov
or
push
test
add
push
mov
shrl
mov
mov
xor
outsl
add
scas
and
sub
addb
and
ds
clc
lret
push
mov
lret
xlat
es
movsl
xchg
int3
test
xor
mov
in
cld
pop
adc
cmp
mov
adc
jl
adc
mov
cmp
addr16
mov
inc
jnp
jp
add
jecxz
xor
iret
mov
dec
xor
enter
adc
je
xor
mov
outsb
popf
mov
or
in
fsubr
cmp
push
cmpsb
dec
pop
jbe
mov
add
jg
stc
add
imul
and
clc
or
movsb
rcr
mov
sub
sbb
shlb
pop
jp
aam
mov
fs
pop
sbb
mov
pop
mov
xchg
scas
ds
push
iret
jne
loope
scas
repnz
sub
ljmp
mov
cmp
or
adc
out
xchg
or
out
xchg
mov
inc
jmp
movsb
xor
aad
bsr
inc
aaa
in
mov
lret
adc
repz
leave
and
cmp
xchg
in
jmp
cmp
cmp
dec
sbb
push
inc
inc
jne
outsl
lcall
xchg
xchg
sysenter
or
es
test
mov
inc
push
icebp
cmp
js
push
ret
popa
shll
jge
test
mov
jno
adc
mov
iret
imul
in
sub
ficomps
add
iret
push
sbb
push
repz
xchg
je
loopne
call
xchg
mov
jmp
push
movsb
pop
sbb
jmp
orb
pop
aam
xchg
shlb
xchg
mov
fadds
mov
test
xchg
xor
and
loope
or
sbb
adc
rclb
or
popf
jmp
dec
stos
in
nop
jne
arpl
negl
mov
pop
mov
mov
rcrl
fdivrl
jne
popf
clc
adc
pop
int3
pop
pop
out
xchg
sar
fists
mov
xor
lret
popa
and
inc
pusha
and
int
xchg
jecxz
or
mov
add
mov
dec
js
cwtl
or
xchg
rorl
xor
or
jge
pop
movsl
cltd
push
xor
jle
in
mov
mov
popf
int3
xor
mov
bound
movsl
pop
loopne
pop
das
cmp
das
dec
es
adc
dec
call
jg
rcl
pushf
mov
ficoml
out
adc
xchg
leave
mov
stc
jno
ds
cmpsl
nopl
pop
cvttps2pi
push
xchg
add
cmp
aaa
aad
push
inc
cmp
or
push
push
mov
es
mov
push
dec
sub
adc
mov
and
add
aas
lds
push
stos
sahf
icebp
movsb
outsb
pop
add
js
testl
adc
mov
pop
cltd
cmpl
lahf
scas
mov
cs
pop
scas
rorl
int3
bound
rolb
mov
fisubs
mov
cs
push
pop
push
ret
jmp
or
push
inc
cli
pop
incl
push
sbb
stos
dec
out
ljmp
inc
jb
cld
les
cmp
filds
aas
dec
adc
adc
fdivs
pop
cmp
jbe
jmp
jp
stos
call
scas
scas
popa
div
xor
add
cmp
addr16
punpckhdq
sub
push
adc
cld
in
xlat
repz
mov
jg
test
lods
aaa
lock
sbb
push
inc
into
adc
std
and
ja
mov
inc
ljmp
in
xchg
sub
cmp
jp
dec
ja
popf
xor
pop
call
jmp
stos
std
int3
popa
push
inc
inc
inc
cwtl
fidivl
inc
out
cwtl
adc
rclb
sahf
xchg
sub
jg
xchg
pop
bswap
xchg
fneni(8087
mov
jns
clc
mov
mov
arpl
xchg
ret
xor
and
lods
test
rcrb
lahf
adc
sbb
adc
jle
lret
xchg
push
pop
int
shl
cwtl
clc
dec
xor
jle
insb
ret
pop
xchg
pop
xchg
push
int3
test
jg
test
or
sbb
jno
xchg
outsb
xor
int
pop
and
stos
jmp
lock
xchg
and
dec
jbe
ljmp
cmp
xchg
sub
or
sub
negl
mov
pop
mov
sbb
sub
xor
push
ja
adc
in
sub
mov
into
add
xchg
cmpsb
push
push
pop
jno
sahf
mov
sub
outsl
pop
adc
mov
mov
mov
push
jae
test
out
cmp
xchg
push
rcrb
push
fdivrs
test
lods
out
andb
push
shlb
jae
lret
int3
add
dec
pop
movsl
clc
mov
js
shll
mov
sub
jmp
pusha
jnp
pop
pop
cmp
sub
scas
adc
movsb
push
inc
mov
xchg
inc
std
icebp
mov
scas
push
inc
popf
lret
pop
adc
sub
cmp
cmp
cmp
fnstcw
sub
jl
xlat
push
clc
cltd
mov
xchg
loopne
dec
and
insl
jge
sub
daa
aas
push
or
ret
ret
dec
pop
clc
scas
sbb
mov
repz
xchg
pop
sbb
jge
mov
aad
fidivs
mov
xchg
mov
pusha
pop
flds
add
or
cltd
jle
mov
push
fsubrs
mov
push
lea
scas
inc
repz
mov
or
ror
xor
cs
lcall
out
test
mov
push
inc
mov
push
cltd
cmp
cwtl
dec
mov
ret
and
les
mov
push
fs
sbb
or
cld
std
jmp
inc
es
in
sahf
and
mov
xor
imul
js
adc
out
loopne
sub
or
int
retw
dec
aas
sbb
and
xor
and
into
add
sti
or
xchg
out
pop
fs
ret
nop
and
mov
loope
clc
cwtl
jg
lea
dec
ret
jge
mov
adc
int
lds
in
inc
je
xlat
sbb
xor
cli
enter
cmp
outsl
push
cmp
cltd
and
or
loopne
movsb
ja
push
cmp
pop
hlt
in
mov
push
add
out
jnp
sub
repz
mov
push
in
adc
xchg
mov
add
mov
inc
cmpsb
in
sahf
lds
pop
mov
divb
pop
push
insb
pop
in
arpl
sub
cmp
inc
imul
arpl
insb
pop
stc
mov
ret
mov
inc
ficomps
mov
xchg
or
push
inc
es
push
test
ss
or
push
sub
ljmp
sbb
arpl
sbb
mov
ljmp
jmp
fmuls
add
out
xchg
and
xchg
sti
jbe
daa
mov
adc
fs
mov
xchg
repnz
nop
xlat
pop
jnp
xor
popa
mov
pop
js
sub
stos
test
ret
mov
jnp
aas
or
int
cmpsl
push
aaa
mov
lret
push
inc
jge
jle
mov
mov
xor
add
cwtl
cmp
mov
adc
insb
int3
inc
test
out
cmp
daa
cmp
mov
sub
sahf
pop
mov
popf
stc
iret
arpl
inc
add
xor
fidivrl
mov
or
mov
pop
inc
test
aad
pop
imul
fisttps
adc
shll
sbb
sbb
mov
pushf
push
jbe
add
psubusw
cmp
adc
jle
and
mov
xor
mull
add
lods
fsubl
insb
inc
sbb
aaa
xchg
scas
idivl
mov
cmp
sbb
in
xchg
iret
shlb
push
push
lods
or
mov
inc
test
adc
bound
aas
in
loope
outsl
sub
lods
jle
not
dec
sub
arpl
mov
lret
jnp
jp
xchg
scas
cmpsl
mov
xlat
adc
add
out
xor
pop
lahf
out
sti
jnp
xor
jo
scas
fsubs
add
in
jl
insl
xlat
jo
insl
sub
outsl
sbb
jge
fcoms
jo
mov
fcmovne
cltd
sbb
jl
into
pop
mov
xchg
jl
lods
add
cli
loop
push
mov
or
and
fisttpll
data16
pop
cmp
or
add
sbb
sub
mov
and
mov
pop
sbb
xor
stc
add
or
mov
pop
fnstenv
cwtl
dec
inc
sbb
cmp
mov
mov
sub
mov
mov
lds
rcll
roll
rol
jbe
movl
out
js
ror
lds
hlt
test
mov
out
test
fcmovb
bound
xchg
add
pop
xchg
ljmp
push
out
cmp
sar
in
lea
mov
dec
mov
push
loopne
jecxz
fs
mov
sahf
dec
adc
xor
cmp
xchg
sub
loopne
test
xor
adc
xchg
pop
loope
shrl
adc
insb
mov
jle
movsb
sub
stc
mov
lret
inc
jbe
ljmp
cwtl
in
test
test
int
add
shl
das
sar
sbb
fsub
outsl
cltd
xchg
adc
mov
les
jl
xor
mov
cmpsl
loop
pop
leave
push
jmp
add
call
push
lock
test
icebp
adc
daa
or
add
fs
mov
jge
psubd
into
pop
xchg
inc
add
pop
cmc
stos
pop
cmp
xchg
xchg
lds
in
inc
iret
push
ja
in
mov
xor
sbb
fs
ror
lods
out
ja
xor
dec
lds
aad
lock
sti
xor
mov
shlb
mov
sub
mov
mov
mov
jmp
pop
xor
call
pop
test
push
mov
sbb
pop
jle
das
sti
and
xor
mov
and
cmp
mov
push
inc
js
push
je
shrl
in
scas
jne
adc
pop
cmc
mov
xchg
in
mov
pusha
xchg
xlat
iret
dec
cmp
ja
repnz
pop
and
lds
push
cmc
or
test
lods
fsubrs
dec
mov
or
int3
ror
ret
adc
sbb
xor
xor
aad
hlt
push
push
or
mov
dec
push
inc
lcall
inc
push
adc
iret
or
call
fildl
dec
ss
pusha
xor
mov
sub
fdivs
inc
add
dec
mov
xchg
pop
mov
fsubrl
ja
ljmp
lea
jg
cmp
dec
cmpsb
nop
add
mov
pusha
push
hlt
aad
lock
jecxz
gs
adc
or
jnp
jle
sub
lret
lret
loopne
repz
and
jae
inc
jb
adc
out
lahf
xor
cltd
fadds
cld
jg
rclb
imul
push
push
mov
dec
xchg
xor
cmp
rcll
loopne
leave
jns
jmp
mov
fdivrl
push
adc
mov
subl
cmp
adc
in
xchg
hlt
lret
pop
lds
pop
outsl
loopne
scas
sub
test
cmova
jmp
into
xchg
cli
test
sub
sub
sub
mov
aam
push
sbb
repnz
cmp
mov
pop
mov
imul
mov
rolb
pop
stos
out
pop
lret
mov
inc
cld
mov
pop
rorb
inc
iret
aad
and
out
clc
movsb
mov
movsb
dec
int3
xchg
xchg
lods
pop
fsub
and
sub
mov
cmp
in
pushfw
test
cmpb
insb
add
xchg
push
mov
mov
scas
movsl
cli
dec
jmp
insb
test
pop
jns
inc
les
lret
push
aaa
dec
mov
enter
outsb
mov
inc
xchg
mov
fcmovb
in
mov
lahf
hlt
imul
lret
push
adc
xor
adcl
jge
lahf
into
or
dec
pushf
xchg
les
jecxz
xor
jp
dec
outsl
popa
cmp
insl
movsl
fisttps
mov
fnstcw
xchg
ss
pop
mov
sbb
dec
xchg
cmp
xor
adc
push
dec
cmpsb
sbb
jg
shrb
mov
pusha
dec
data16
lret
inc
int3
sub
sub
das
fs
sbb
aad
stos
addl
cmp
jnp
hlt
fisubs
or
test
pop
add
inc
or
nop
shlb
insl
mov
pop
xor
pop
jmp
fcoml
xor
xor
xor
stc
out
rclb
es
dec
push
je
mov
mov
jns
popa
fcomps
adc
mov
jmp
adc
inc
inc
mov
out
loopne
mov
stc
test
sub
mov
lea
outsb
aaa
pop
jbe
push
mov
or
adc
or
push
fwait
and
aad
in
movsb
shrl
sub
sub
sub
mulb
pushf
dec
or
int3
push
stos
int3
sub
inc
push
aaa
dec
in
clc
je
sbb
icebp
ds
cmp
mov
das
icebp
int
iret
or
sarl
loop
outsl
popf
fs
test
aaa
jle
add
ds
cs
mov
xorb
cmp
ds
push
dec
dec
aad
inc
and
imul
shld
addr16
pop
pop
sub
mov
cld
shll
std
cmpsb
fidivrl
pop
adc
cmpl
adc
sub
push
add
pop
inc
mov
or
out
sub
xchg
sti
into
mov
mov
shll
xchg
push
in
adc
jmp
cmc
fsubrl
push
out
sbb
mov
sbb
stos
mov
cli
mov
fcomi
fcmovu
add
mov
xchg
icebp
out
mov
jnp
xchg
imul
inc
xchg
lods
faddl
movsb
sbb
cmp
into
add
test
and
outsl
cmp
mov
clc
lods
movsb
and
int3
pop
xchg
mov
mov
push
pusha
mov
jbe
imul
hlt
adc
add
rclb
mov
add
xor
or
xor
test
jle
xor
mov
mov
mov
mov
mov
push
rol
mov
lds
lret
lea
jmp
or
push
mov
pop
sub
sub
cmc
dec
adc
and
push
popfw
fmull
js
push
pop
xchg
add
xchg
xchg
add
fisubl
dec
cmpsb
jno
addr16
xchg
xor
out
dec
push
es
mov
enterw
inc
lahf
movq
sbb
fs
std
bound
loop
scas
jmp
sahf
sub
xchg
cmpsl
bound
dec
add
inc
in
jnp
fbstp
sub
jmp
mov
iret
pop
sub
fisubrs
fidivrl
movsb
lret
ret
mov
test
das
push
mov
dec
add
pop
sbbb
test
ljmp
pop
pop
sar
push
mov
mov
xchg
push
cmp
sub
lea
xor
add
xor
push
addr16
fcmovbe
pop
xchg
jbe
ja
adc
add
shl
jmp
xor
loop
push
nop
insb
cmp
jne
loop
jb
mov
mov
and
inc
xor
call
adc
dec
push
lods
cmp
jmp
fs
frstor
ds
arpl
test
mov
out
into
stos
std
dec
incl
call
pop
pop
andl
pop
lods
lea
dec
pushf
xchg
ds
sbb
addr16
pop
jns
dec
mov
sub
iret
sbbb
aad
hlt
js
out
sbb
movsb
lock
icebp
jne
or
mov
mov
addb
adc
xor
sar
notb
xor
mov
rcll
nop
dec
inc
leave
fs
jne
sbb
dec
daa
xlat
xchg
add
sub
dec
lds
push
lcall
rorl
inc
dec
cli
int3
inc
sbb
lahf
call
jle
cld
xchg
add
adcl
jnp
jae
mov
sub
in
cmp
xchg
dec
pop
jl
in
scas
sbbb
push
dec
fwait
push
mov
div
ja
shrd
push
sub
add
pop
test
loop
dec
call
std
movsl
sbb
adc
ja
dec
push
hlt
jecxz,pn
pushf
push
and
sbb
insl
mov
jmp
fiaddl
adc
mov
sbbb
clc
out
sub
xchg
clc
outsl
xchg
ret
shrl
jne,pn
xchg
adc
je
cs
test
inc
jno
or
das
lret
popl
mov
ret
add
pusha
cmpl
inc
hlt
lea
mov
adcb
out
xchg
dec
cmc
xlat
aaa
jb
pop
ss
add
jmp
int3
shrb
daa
addb
and
stos
mov
push
and
out
push
inc
xor
jle
fisubrs
movsl
or
insl
pop
cmp
fdivs
int
and
xchg
cli
fidivl
mov
int
mov
mov
pop
mov
inc
arpl
sbb
lret
movsb
mov
iret
push
cmpsl
inc
pop
fsubp
mov
rcl
icebp
cli
mov
mov
je
es
gs
out
movsb
pusha
js
movsb
test
sub
fdivr
fninit
mov
xchg
jae
jns
in
adc
or
sbb
test
in
aam
outsl
popa
or
fdivrp
cmp
fsubrl
sub
lods
push
push
and
daa
imul
jae
sbb
and
imul
sub
fadds
enter
cmpl
adc
loopne
jns
mov
cmp
mov
icebp
mov
and
cmp
sub
jno
mov
test
gs
pop
fwait
idivb
pop
ret
mov
mov
popa
add
push
or
js
nop
jae
and
int
sbb
in
and
adc
jae
les
popa
call
dec
sbb
sub
je
mov
fdiv
lods
mov
mov
mov
int
mov
push
mov
xor
popa
les
dec
out
clc
dec
or
inc
mov
ret
sub
int3
jmp
out
sub
fwait
mov
push
ret
mov
and
lcall
insb
xchg
ret
adc
in
sub
aam
enter
sub
cmp
or
dec
mov
fisubrs
jg
into
push
mov
jge
sbb
add
fsts
mov
or
push
neg
mov
or
inc
sti
fisubrl
xor
fistl
out
aas
dec
adc
push
out
lods
sti
and
arpl
out
and
sub
add
add
aaa
jg
push
in
jno
adc
jmp
xor
fimuls
xor
mov
sbb
push
leave
jecxz
pop
out
mov
sbb
inc
xchg
sub
pop
jg
loope
and
or
push
pop
insb
jp
movsl
pop
push
dec
ds
loop
stc
mov
jbe
int3
fcomps
mov
xor
lret
fsubrp
jb
push
insl
mov
sbbb
lahf
xor
xchg
out
js
stos
mov
stc
sbb
push
jae
jns
in
filds
mov
popf
notl
in
adc
mov
jo
pop
in
xor
push
xor
inc
push
jns
loope
xchg
dec
push
mov
out
ds
scas
imul
popa
add
imul
pop
mov
add
jmp
xchg
pop
mov
mov
fdivrl
push
push
popa
adc
cmp
mov
xor
push
cmp
repz
cmp
rolb
inc
mulb
jno
outsb
ljmp
out
lea
test
shll
fwait
aam
sub
and
push
dec
mov
sub
pop
jb
movsb
push
mov
push
lahf
aas
and
jae
cs
mov
xlat
fimuls
mov
jns
jns
mov
testb
sub
stc
or
inc
xor
sbbl
inc
aaa
push
lahf
cltd
jl
mov
in
test
dec
mov
ret
inc
mov
stc
push
in
test
lods
push
js
adc
sub
andl
in
in
pop
push
enter
push
mov
nop
pop
cwtl
sub
lds
push
call
mov
lock
xor
jne
in
loop
adc
cmp
js
sub
rorl
sarb
repnz
mov
mov
mov
mov
cs
sbbl
sub
cmc
xor
mov
fmuls
cltd
mov
cmp
jl
ja
sbb
mov
mov
das
xor
fs
iret
scas
mov
lods
mov
ljmp
shll
sub
jge
repnz
mov
iret
lds
xor
cltd
pop
test
push
dec
leave
xorl
and
sti
xor
lret
mov
dec
dec
cmp
cwtl
das
inc
mov
adc
fisttpll
pop
xchg
add
mov
rcr
push
pop
push
jo
mov
into
jg
out
outsb
ja
shll
cltd
out
pop
xor
lret
popl
insb
loop
lret
sub
lods
out
xchg
sub
adc
leave
out
jno
rclb
mov
mov
adc
add
cmpsb
popa
aaa
pop
jae
inc
nop
inc
and
and
xor
in
daa
lret
mov
fs
test
lcall
push
mov
nop
add
in
mov
xchg
jge
fisubrl
std
aaa
ja
fcmovnu
jmp
repnz
ficomps
rcl
sub
outsb
add
jmp
add
dec
aaa
mov
or
lods
es
mov
adc
mov
cmp
aad
lea
xor
cmpb
adc
rcll
ljmp
cmp
lahf
fistpl
sub
hlt
movsl
push
bound
sbb
leave
nop
cli
and
sti
push
aam
cld
scas
push
jbe
lea
xchg
js
xor
std
sbbb
push
ss
lret
mov
xchg
jb
ror
ljmp
enter
out
add
and
mov
arpl
dec
iret
mov
clc
add
inc
nop
cmpsl
frstor
fnstsw
mov
out
iret
push
sub
pop
pop
fidivrs
push
stos
int3
push
xchg
and
push
insb
cld
data16
das
call
and
xlat
testl
clc
add
testl
imul
xchg
mov
sub
iret
pop
xchg
sahf
inc
sub
jge
ja
jb
cld
inc
divl
stos
stc
stos
inc
inc
mov
cld
mov
dec
js
fldl
das
pop
add
lods
mov
jnp
inc
mov
ret
pop
icebp
cmc
push
cmp
cmpb
insb
cmpsb
not
or
sub
cmp
cmc
sub
jle
dec
in
scas
repnz
pop
fsubrs
add
sub
mov
push
xchg
push
imul
mov
ljmp
and
adc
scas
xchg
repz
popf
cwtl
cmp
lret
fisubrl
rcrb
pop
push
add
stos
cli
fadds
adc
dec
loop
jo
enter
loop
bound
fsub
push
push
dec
xor
pop
sbb
out
jbe
jecxz
icebp
inc
arpl
jp
xor
subl
sbb
imul
pusha
push
adc
cmp
or
cltd
sbb
mov
scas
dec
fwait
jmp
lret
dec
cmpsb
and
neg
mov
popa
in
sbb
mov
push
jecxz
movsl
fildl
add
cmpsl
add
lods
scas
adc
je
shlb
sub
jp
xor
notl
ja
cmp
xorb
repz
ficoms
ret
pop
push
push
and
das
lods
sub
cltd
mov
jmp
cmc
call
mov
pop
movsl
int3
jo
cwtl
cmp
push
and
aam
popa
mov
and
push
dec
sub
cmpb
in
mov
sub
add
xlat
dec
pop
mov
mov
addr16
pop
into
xchg
repnz
pop
or
clc
fcmovbe
lahf
ret
xchg
pop
push
mov
pop
cmp
inc
test
dec
xor
out
dec
xor
mov
es
scas
cmpsl
lret
shlb
push
std
jge
dec
int
clc
add
mov
sbb
js
int3
xor
push
stc
mov
mov
dec
xchg
into
sarl
mov
jb
test
imul
mov
dec
mov
cmc
into
or
out
mov
jmp
xor
or
fldl
push
pop
push
and
cmp
cmp
cmp
jbe
shll
mov
sub
xlat
xor
repz
shll
sbb
jp
dec
daa
test
dec
je
negb
cmp
dec
in
mov
idivl
bound
popa
lret
and
shrb
idivl
push
mov
test
and
and
xor
outsl
and
mov
xor
adc
push
imul
fwait
and
jno
cli
int3
mov
jns
push
mov
shlb
test
and
push
lds
outsl
mov
pop
popa
cmpl
jl
int
push
dec
fcmovne
stos
xchg
pop
sub
mov
push
inc
inc
ds
int
mov
daa
xor
add
mov
sbb
imul
call
outsb
cmp
divb
in
fs
ret
shrb
in
jno
mov
jae
roll
int3
es
out
sarb
adc
mov
jb
out
xor
lods
imul
push
push
insb
cs
sbb
stos
pop
mov
jne
jl
in
sarl
imul
jne
cld
adc
dec
cmp
adc
lret
mov
inc
shll
mov
mov
mov
pop
mov
js
xchg
xor
jge
push
insl
inc
lock
inc
mull
test
subb
xor
outsb
xor
call
inc
mov
or
jo
mov
dec
xchg
out
fs
lods
fs
cmp
pop
sarl
and
mov
notl
xlat
inc
sub
scas
adc
push
cltd
rolb
push
data16
mov
cltd
push
call
or
lods
mov
dec
cmp
cwtl
sbb
aas
lock
fldl
mov
fstpt
adc
or
ret
popa
pop
test
shl
icebp
shll
or
aas
mov
jg
push
daa
sbb
test
outsb
cmp
or
push
mov
test
pop
mov
mov
mov
pop
cmp
lods
sbbl
rcrb
xchg
lods
sbb
imul
push
and
lods
push
cltd
or
push
cmp
dec
push
mov
lret
in
mov
ror
and
dec
pop
mov
rsm
hlt
mov
push
mov
dec
enter
and
and
and
xchg
int
push
sub
push
mov
mov
into
push
dec
pusha
movsl
xor
imul
fs
ret
rclb
fnstenv
imul
lcall
outsb
cmp
mov
lcall
mov
mov
loope
xorb
daa
loope
pop
xchg
sub
ror
shrb
mov
add
or
pop
or
xor
and
pop
cmpl
test
push
leave
sbb
dec
sub
xor
dec
mov
test
lods
jns
or
sub
or
fdivr
pop
popf
je
mov
sub
fistl
mov
pop
movsl
xor
je
adc
push
pop
dec
lret
lcall
mov
fistpl
fdivrs
shll
push
pop
mov
fldl
jo
jecxz
and
adc
fs
fildll
cmc
jl
xchg
push
enter
ja
adc
aas
outsl
push
cbtw
shlb
xlat
mov
inc
xchg
xchg
xchg
push
in
and
sbb
scas
andl
inc
and
repnz
lds
out
mov
mov
or
and
pop
aad
in
lcall
dec
lock
push
ficompl
shl
into
jae
sbb
jns
push
pop
loopne
inc
aad
js
add
inc
cld
divl
jae
inc
ficomps
pop
call
nop
lahf
push
out
mov
pop
mov
imul
mov
xacquire
and
add
sub
mov
adc
adc
pop
mov
repnz
fldl
adc
xchg
mov
popa
icebp
sub
adc
mov
cltd
out
mov
or
sahf
xchg
bound
call
pop
ljmp
movsb
jp
adc
jp
pop
push
test
cmp
xchg
jne
call
enter
mov
sahf
jp
adc
sbb
movsl
sbb
clc
adc
hlt
les
mov
push
mov
or
adc
insb
shrl
push
sbb
cmpsb
aam
aaa
int
jbe
imul
fisttpll
or
ss
or
pop
jb
subl
dec
or
pop
repnz
push
push
clc
xor
or
xchg
fs
and
rcrb
sub
adc
pushf
aas
bound
pop
movsl
push
dec
cli
scas
mov
mov
mov
mov
cli
mov
cmpsl
outsl
sbb
in
andb
dec
out
psubusb
jbe
lret
mov
sub
jae
mov
and
cltd
mov
jp
and
pop
aas
pop
inc
jg
aad
push
pusha
adc
or
popf
testl
push
jbe
or
cwtl
cmp
enter
cltd
push
sbb
pushf
pop
loop
pop
addb
push
inc
dec
outsb
cmp
les
or
cltd
outsl
jg
cmpsb
out
and
js
xor
push
aaa
lods
leave
out
mov
mov
xor
xor
lret
stos
lds
jb
sub
cwtl
or
xchg
mov
dec
pop
xlat
clc
jg
call
pop
mov
mov
push
mov
aam
sub
xchg
mov
sti
xchg
sub
and
xchg
mov
or
repz
shl
mov
cmp
xlat
push
mov
sbb
shll
nop
mov
sbb
fwait
outsl
adc
arpl
stos
push
rcr
jb
lahf
mov
jae
mov
cmp
dec
inc
sbb
or
sti
or
outsb
mov
ficomps
scas
stos
mov
mov
loop
jb
pand
xlat
xchg
lds
pop
jge
mov
das
lret
movsl
stos
pop
roll
movsb
jae
shll
mov
jl
in
jecxz
arpl
sub
shlb
in
movb
xchg
movsb
sbb
inc
in
cmp
add
or
into
leave
sub
fildll
adc
and
stc
jnp
mov
mov
mov
in
mov
mov
nop
mov
lret
movsb
push
hlt
scas
push
gs
sbb
icebp
push
and
pop
push
pop
jae
mov
push
xor
jecxz
les
shrb
push
lea
push
jl
aaa
mov
pushf
add
cld
cmovbe
movsl
adc
jmp
test
adc
test
es
int3
in
mov
adc
inc
mov
fstpl
push
test
jno
aaa
ss
arpl
sub
xchg
mov
outsl
push
xchg
pop
aam
mul
fnsave
xor
jge
lods
test
cmpsb
jmp
sbb
cltd
fnsave
repz
cmp
xor
or
filds
test
int3
arpl
lods
pop
and
jl
scas
pusha
jle
enter
sub
jno
std
adc
rorb
dec
xor
cmp
inc
mov
mov
in
sarl
cwtl
jle
cmpsl
pop
test
pop
addb
addl
cmp
jne
movsb
xor
pop
mov
sbb
xchg
mov
divl
push
out
mov
sti
mov
fldt
or
scas
sbb
adc
mov
xor
lahf
or
pop
inc
std
das
out
loope
movsb
int
aad
xor
jnp
dec
cli
inc
mov
add
lcall
sahf
ljmp
pop
sub
je
or
pop
add
sbb
inc
filds
js
mov
pushl
or
cmp
mov
push
cmp
hlt
sub
pop
out
in
iret
das
mov
jns
fwait
jmp
out
adc
sbbb
sbb
push
and
jp
push
iret
or
loop
xor
jns
sbb
push
mov
stos
mov
push
adcl
cmc
push
les
jbe
ss
sahf
cs
popf
mov
dec
push
testl
jecxz
pop
add
sub
jge
push
push
sahf
cmp
ja
fwait
mov
mov
aas
xlat
jno
movsl
test
mov
jmp
in
insl
stos
cmpsl
in
ja
add
rol
dec
mov
or
notl
or
loop
mov
xor
imul
push
xchg
loope
test
gs
pushf
repz
fidivs
jnp
push
and
lcall
lods
call
in
data16
push
mov
sub
aaa
cmp
jg
fcompl
in
adc
cld
nop
mov
lcall
jbe
mov
clc
lock
pop
mov
adc
daa
add
add
sub
jecxz
sbb
aas
push
inc
lcall
dec
fneni(8087
jo
shrb
popa
cmp
cmc
cmovns
sarl
jmp
or
mov
imul
scas
sbb
shl
mov
adc
xor
cmc
jae
es
enter
inc
add
rolb
adc
jne
stos
imul
cmp
jae
cwtl
or
or
mov
add
movl
sub
mov
sbb
shlb
and
mov
jg,pn
and
mov
mov
aaa
into
adc
ret
and
cmpsl
call
sbb
mov
xor
sub
pop
xor
pop
insl
fbld
scas
ljmp
jl
or
xor
ds
sbb
test
lcall
jo
ss
jg
push
scas
inc
iret
cmc
int3
mov
mov
lods
sbbb
mov
adc
push
mov
into
aas
shufps
nop
inc
je
mov
lcall
ret
adc
pop
adc
les
sub
hlt
jae
bound
and
mov
popa
pop
out
and
mov
cmpsb
into
jnp
fistl
cmp
ja
andl
push
xor
or
and
sub
fnstsw
outsb
sahf
out
nop
pop
and
outsl
out
loope
adc
shll
push
mov
sub
int
xor
cs
mov
jae
push
pop
inc
int
ret
lcall
in
jbe
lret
sub
adcl
jle
add
aad
popf
mov
mov
xchg
ss
insl
and
sub
sti
ret
jge
fists
daa
cmc
lods
xchg
xor
pop
fisttpll
inc
test
enter
inc
jp,pn
daa
sub
std
jmp
sbb
mov
sbb
aaa
lea
adc
dec
mov
ret
jns
aas
dec
mull
adc
test
and
mov
das
out
mov
rorl
mov
fldt
jne
push
push
sahf
inc
cmp
xor
insl
or
lods
sub
outsb
rcll
pop
ja
lds
mov
pop
pop
cld
aas
push
flds
xchg
push
xbegin
sbb
lcall
cmpxchg
push
mulb
int
imul
fld
xchg
jnp
repz
rcll
sub
dec
pop
sarb
adc
daa
and
ja
sbb
or
dec
adc
pop
loop
movsb
or
cli
dec
fiaddl
arpl
jg
cmp
aaa
repnz
inc
outsb
ret
xor
icebp
fabs
push
dec
inc
add
xchg
jle
mov
or
mov
jo
lret
mov
mov
stc
inc
lods
adc
int
xor
cmpsl
mov
adc
jge
cwtl
mov
cld
lret
jbe
mov
imul
scas
movsl
add
stc
fldt
mov
insb
int
rcrl
ret
mov
leave
out
mov
pop
push
xchg
lods
dec
nop
xchg
daa
push
les
fwait
arpl
in
pop
add
roll
dec
arpl
add
pop
jae
sbb
imul
and
int
cld
ret
dec
xchg
pop
adc
dec
sbb
xchg
sbb
aaa
pusha
out
mov
aad
pop
inc
lock
cld
mov
adc
test
jl
push
push
sbbb
mov
or
sub
in
push
scas
or
scas
out
sub
clc
notl
push
sub
mov
inc
xchg
or
push
jg
jmp
jle
faddl
in
test
adc
sbb
loopne
mov
xchg
dec
mov
push
scas
jo
in
pop
fistpll
cmp
dec
mov
test
imul
inc
popf
subl
mov
bsr
leave
and
xor
cmc
mov
les
in
mov
loope
mov
rcrl
push
sbb
aaa
adc
add
sbb
adc
cmc
lcall
sahf
data16
repz
push
imul
xchg
call
int3
adc
shlb
in
mov
mov
mov
and
addr16
lock
sub
mov
mov
sbb
inc
xor
push
pop
xchg
push
inc
leave
in
push
sbb
xlat
push
fsin
test
fldt
push
pop
add
in
rol
xchg
movsl
mov
lret
nop
push
xor
pop
jmp
arpl
testb
sbb
pop
mov
and
fwait
lds
pusha
in
ret
and
mov
push
ljmp
mov
xor
loop
sub
jecxz
push
lahf
nop
xor
push
popa
mov
and
xchg
jno
fisubl
nop
and
mov
jg
ss
loopne
mov
pop
stos
xchg
dec
cmp
in
dec
mov
popf
leave
ficoml
cs
fcompl
pop
jecxz
arpl
mov
sahf
xchg
xchg
push
shlb
adc
inc
pop
inc
scas
fisubrs
xlat
faddl
mov
cmp
loopne
adc
into
ljmp
arpl
cld
mov
mov
jbe
inc
or
sbb
daa
test
aaa
pop
int3
mov
and
icebp
and
jbe
sub
insb
iret
out
xchg
push
out
mov
add
jns
inc
es
add
or
stos
xchg
fldl
pop
stos
push
push
or
cmp
cmp
cmp
out
sbb
adc
test
int3
xor
jle
nop
jb
xchg
mov
scas
and
outsb
mov
mov
dec
dec
mov
push
arpl
mov
mov
mov
daa
aas
pop
or
outsl
lods
cmp
leave
test
shll
or
cmp
add
inc
jno
ss
movsl
push
pop
ja
sahf
xor
dec
ret
aad
sub
mov
sbbl
xor
inc
rcr
dec
adc
adc
lea
pop
dec
jl
fcoml
inc
ret
xchg
test
push
adc
nop
xchg
sub
bound
or
xchg
sbb
xchg
jp
scas
add
and
sbb
jg
aam
xlat
sarb
ret
add
mov
and
or
enter
mov
das
fisttpll
or
loop
sti
adc
xlat
rcrl
aad
xchg
in
imul
call
and
test
mov
sbb
hlt
or
push
imul
sbb
push
mov
movsl
push
mov
mov
sub
or
ljmp
rorl
pop
pop
mov
pop
adc
in
or
into
andb
out
xlat
jbe
or
addr16
add
lcall
mov
mov
lds
inc
repz
repz
fdivs
popf
movsl
mov
in
dec
push
stc
popaw
stc
cmp
jno
push
jb
cld
mov
push
push
outsb
shlb
in
fidivs
jno
xchg
mov
sbb
jbe
jae
ret
rcll
call
aad
pop
mov
test
fdivs
popf
xorl
jns
inc
cmp
or
ret
and
and
test
xor
pop
or
sub
imul
inc
adc
jl
loopne
mov
jb
ljmp
mov
or
and
adcl
out
fnstenv
jge
negl
mov
xchg
ret
cld
aad
addb
mov
mov
loop
in
push
test
arpl
jb
sbb
ret
dec
das
pop
incb
pushf
scas
xchg
cmp
mov
stc
jg
rcrb
xor
or
fcoml
test
es
and
shll
pushf
xchg
fadds
movsb
mov
cmp
in
int
fidivl
aaa
scas
add
bound
cmp
mov
call
jo
jecxz
out
call
pop
push
xchg
loope
adc
dec
pop
ljmp
xor
popa
mov
cwtl
loop
xchg
stos
lock
jb
or
dec
adcl
stos
sbb
mov
jge
mov
cmp
mov
pop
xlat
jp
mov
xor
add
mov
inc
push
sub
jmp
push
mov
imul
sbb
add
cmp
movsl
mov
and
pop
sub
pushf
cmc
lahf
jp
fs
add
mov
aaa
mov
or
fs
lods
popf
ljmp
insl
call
js
cmp
mov
stos
out
arpl
xor
add
or
dec
sti
out
dec
lret
add
popf
pushf
mov
stos
push
pusha
sti
insb
push
aas
sbb
pop
repz
mov
push
sub
dec
jge
loope
pop
sub
dec
in
lahf
mov
inc
lods
push
xor
das
test
lds
and
cmp
addr16
lret
aas
mov
ss
fiaddl
xchg
sbb
cwtl
or
js
mov
push
clc
rolb
cmp
cmp
xor
dec
mov
rol
fldt
jmp
loop
mov
mov
push
push
ret
stos
mov
push
bound
pushf
dec
test
insb
shl
mov
pop
loop
inc
jl
push
jno
imul
jb
lea
xlat
das
jbe
in
mov
pop
jecxz
addb
sarb
inc
dec
lcall
sub
clc
and
push
or
movsb
divl
out
or
add
int3
jle
and
mov
mov
sti
xor
in
push
mov
xchg
jno
int
jmp
mov
sub
fiadds
enter
mov
faddp
rcll
loope
je
outsb
mov
mov
sub
enter
xchg
add
xor
aaa
sarl
pop
add
hlt
mov
clc
lahf
repz
nop
adc
jge
rol
add
ja
sahf
cmp
sub
push
pop
subl
imul
push
aad
nop
mov
js
mov
fs
movsl
mov
mov
dec
into
leave
and
dec
bound
push
ss
adc
loop
sub
cltd
add
ficoms
or
ljmp
sti
sarb
jmp
ret
or
stos
sub
sbb
sti
xor
push
aaa
repz
js
stos
shlb
mov
outsb
adc
sub
les
and
cmp
mov
mov
inc
adc
or
cwtl
scas
stos
adc
cwtl
cmpsb
push
test
pop
ljmp
fiaddl
xchg
andl
aad
and
xor
jg
mov
sub
mov
add
stc
push
jo
mov
mov
jecxz
les
sbb
xchg
xchg
jp
mov
mov
mov
and
mov
cli
push
xchg
cmp
sub
xchg
popa
cli
xchg
rorb
or
and
add
into
testb
pushf
test
test
push
dec
mov
xor
sub
fisubrs
pop
push
and
pop
movsl
and
js
jns
dec
test
cmp
int3
push
cmpsl
jmp
push
push
popf
into
rol
cmp
sub
sub
jmp
add
pop
ret
mov
mov
mov
rolb
imul
xor
inc
loopne
movsb
out
fistpl
ret
sbb
xchg
jg
push
aam
outsl
adc
fcmovb
cmpsb
add
inc
or
push
cmp
nop
movb
add
xor
pop
in
lret
call
cli
loopne
xchg
addr16
dec
or
adc
mov
adc
lea
and
loopne,pt
adc
leave
fistpl
jno
in
jnp
jmp
cmp
sbb
jns
cmp
pushf
jle
loopne
filds
mov
not
sbb
lods
add
add
pusha
sbb
mov
or
ret
cmp
mov
and
and
loope
push
fmuls
ja
push
mov
sub
in
xor
jl
ftst
call
lret
dec
int3
clc
arpl
fidivl
ret
daa
cmpsb
mov
into
sbb
aas
sbb
jmp
stos
or
sahf
out
xchg
imul
lock
cltd
ja
imulb
jecxz
loop
adc
sets
enter
loopne
xlat
dec
andb
leave
inc
and
lret
add
xchg
in
leave
mov
or
fsubp
push
mov
push
cmpsb
or
test
loopne
test
adc
fiadds
fs
add
loop
in
pushw
mov
xchg
jo
jo
iret
mov
rcrb
ljmp
push
adc
sti
clc
xchg
data16
hlt
or
loopne
jp
cmp
fwait
out
dec
mov
mov
xor
out
xchg
leave
adc
mov
add
aaa
or
pop
lcall
clc
test
subb
push
pop
data16
lret
xchg
adc
int
mov
dec
and
xchg
shrl
inc
imul
mov
clc
gs
jno
dec
sbb
fsubrl
in
xor
inc
fcmovbe
in
test
push
in
test
call
cmp
in
mov
cwtl
leave
lahf
scas
inc
mov
mov
movsl
mov
movhps
jno
lahf
add
loop
mov
test
cmp
lcall
cmpsl
cmp
sub
in
sub
stos
and
fwait
inc
inc
add
inc
adc
mov
jg
jl
out
sarb
xor
mov
ret
xchg
xchg
add
hlt
jno
inc
sbb
stos
add
fidivrs
mov
and
cmp
hlt
sub
mov
cmpsl
adc
mov
aam
je
test
cmp
xor
arpl
sbbb
leave
sbb
dec
xorl
pop
jecxz
cli
fdivp
inc
sub
xchg
negl
mov
pop
cmp
inc
xchg
lret
dec
out
or
add
nop
inc
cmpsl
mul
add
enter
pop
add
shll
pop
pushf
out
mov
mov
cwtl
icebp
xchg
out
ficoms
sbb
mov
mov
lods
clc
cmpsb
out
jnp
mov
push
cwtl
aam
pop
inc
sbb
push
xchg
pop
mov
add
xor
aad
test
push
shll
fnstcw
ja
loop
lret
inc
xchg
imul
dec
popa
ret
stos
push
xor
sub
jecxz
scas
sbb
cmp
adc
cmp
rol
xorb
jmp
dec
push
pop
push
inc
adc
jo
movsl
mov
pop
movsl
push
push
sub
and
ljmp
mov
clc
popa
out
mov
jmp
ret
and
movb
mov
cmp
xchg
inc
in
push
movb
das
stos
stc
leave
imul
jae
mov
in
or
inc
cmp
sbb
outsb
jb
mov
insb
pop
lds
push
into
lret
shrb
fcoms
push
out
xlat
cmp
mov
jnp
dec
bound
dec
cmp
and
in
pop
rolb
add
sub
subl
loope
and
xchg
mov
inc
or
push
add
int3
incb
andb
pop
or
fs
out
sarb
xchg
adc
xchg
sbb
dec
mov
les
faddl
pop
in
aad
pop
cmp
ss
dec
push
jno
outsl
dec
mov
pop
lcall
jg
adc
sbb
shrl
inc
sti
insb
fnstenv
and
mov
ds
lea
ss
mov
out
push
sbb
and
lret
test
pop
cmp
addb
test
push
stos
sub
sbb
or
repz
cs
inc
jecxz
cmp
btc
xchg
jl
ja
dec
xchg
mov
adc
lock
xor
imul
xlat
jle
push
mov
dec
and
jge
aaa
push
sub
mov
scas
sbb
xchg
jbe
testl
mov
mov
pop
and
xor
xlat
xchg
sub
inc
aaa
sub
jnp
outsl
decb
sbb
push
je
pop
fidivrs
mov
pop
enter
in
imul
xor
mov
aam
cmp
fbstp
or
mov
lock
enter
js
repnz
mov
fidivl
sub
dec
and
push
sbb
inc
adc
pop
pop
inc
mov
shlb
mov
xor
insl
mov
nop
addr16
inc
xchg
les
imul
mov
std
test
sub
sbb
xor
in
test
push
jle
cli
insb
cmpsb
mov
ret
sbb
dec
jns
mov
mov
mov
in
xchg
orb
aam
mov
imul
addl
popa
push
out
mov
stc
or
icebp
pop
jb
xchg
ret
adc
push
test
das
mov
inc
ja
mov
loop
iret
push
int3
cmpsb
cld
repnz
lea
ret
clc
es
pop
xorl
andl
xchg
loope
ret
setns
in
js
push
fadds
mov
scas
mov
std
movsl
push
repnz
cmc
imul
leave
filds
cwtl
jae
xchg
cmpl
sub
shr
dec
in
mov
push
ret
or
xor
lret
lock
lds
jne
fstps
inc
xchg
aaa
add
lret
in
and
sub
insb
lds
inc
ret
stos
bound
or
aaa
or
mov
lods
popa
mov
leave
shl
mov
cmpsb
sbb
xor
bound
fdivs
push
les
xchg
imul
je
addr16
sarb
stos
add
insb
fwait
mov
or
stc
add
mov
sbb
in
pushf
inc
inc
out
jno
adc
stc
sub
int3
and
aad
sub
sbb
add
fwait
mov
lea
test
popa
ljmp
pusha
fistps
cmp
or
scas
sub
push
push
adc
mov
push
sbb
xchg
inc
xchg
and
inc
mov
mov
xchg
test
pop
mov
pushf
jg
inc
lea
inc
jecxz
xchg
xchg
xor
mov
jno
in
repnz
jge
push
adc
adc
dec
stos
fisttpl
sbb
loope
xchg
aas
or
in
sub
or
movsl
add
push
inc
pop
stos
pop
dec
in
xor
jbe
shrb
cs
jmp
out
inc
out
xlat
cmp
cmp
adc
fsubs
jge
xor
movsb
inc
or
int3
sbb
mov
cmp
addb
bound
dec
mov
hlt
dec
rdpmc
stos
push
cmp
xorl
jne
aam
lods
pop
js
inc
lods
and
sahf
lock
cmp
cli
pusha
shrb
mov
hlt
dec
rcl
int3
xchg
loop
imul
jno
push
les
push
cmpsl
jmp
stos
add
fs
sub
testl
test
pop
test
mov
decb
push
sbb
jb
and
or
or
ffreep
sub
or
pushf
push
mov
mov
mov
inc
repz
movq
mov
and
fdiv
stos
lods
std
pop
jle
loope
jp
ljmp
sbbl
add
scas
into
mov
add
imul
ss
ficompl
jl
xor
push
out
inc
mov
fdivrl
das
pop
in
sub
cli
mov
loop
inc
push
add
cmp
js
pop
xchg
jno
mov
pop
outsb
les
push
jmp
scas
shrb
jnp
mov
mov
mov
add
js
xchg
xchg
sbb
sbb
je
mov
stos
loop
bnd
pushf
fdivrp
das
adc
outsb
data16
mov
daa
jp
xchg
lret
push
add
mov
dec
lret
cmp
xor
mov
loop
mov
fwait
sarl
inc
lea
and
inc
das
test
shl
aaa
in
sub
cmp
in
push
cwtl
mov
das
cltd
test
gs
cli
pop
cmp
insl
in
adc
push
mov
outsb
jl
or
nop
mov
sti
ds
dec
cmpb
mov
and
xchg
dec
inc
movsb
in
ljmp
and
sub
dec
cmp
inc
inc
shrl
jle
or
les
dec
gs
fimull
or
jecxz
aaa
scas
mov
push
ss
inc
xor
outsl
sbb
loopne
push
cmp
mov
fldl
jbe
outsl
add
test
adc
add
stos
call
dec
mov
or
cmp
cmc
pusha
jmp
lret
and
andl
inc
sbb
push
xor
add
and
lahf
inc
stc
in
inc
sub
or
push
mov
xchg
sbb
xor
fcom
lods
hlt
mov
test
ret
das
test
ja
sbb
add
sbb
push
rclb
hlt
inc
mov
mov
jecxz
adc
iret
sub
negl
sub
mov
lret
das
mov
in
inc
enter
push
pop
xor
adc
mov
cmc
dec
rcrb
ret
mov
xchg
mov
pop
pop
inc
pop
jg
repz
xor
int
and
pop
xchg
mov
lods
mov
ds
cs
push
enter
mov
fistps
and
lods
scas
mov
test
pushf
add
inc
jmp
xchg
xchg
push
mov
mov
jl
sbb
lods
push
push
and
je
sub
xchg
leave
push
inc
xchg
mov
mov
mov
pop
mov
aad
fstl
imull
sbb
imul
in
pop
mov
lds
inc
and
mov
rcrb
dec
daa
xchg
iret
adc
sbb
inc
push
mov
inc
or
loope
xor
clc
pop
add
xchg
adc
cmpsl
xor
fcomi
data16
and
out
fs
mov
xchg
mov
cltd
cmp
lods
dec
cli
add
add
dec
testb
push
xchg
lcall
repnz
add
fninit
adc
xlat
lcall
cmovp
mov
mov
or
jge
stos
out
sbbb
xor
fs
fstl
inc
pop
sub
adc
push
nop
jge
faddl
adc
aas
hlt
cmc
out
fiadds
popf
or
sub
call
vmovddup
orl
shl
mov
mov
aaa
sub
pop
sub
mov
xor
xchg
dec
mov
fwait
xor
or
cwtl
rorl
scas
popf
mov
and
sub
outsl
or
roll
js
lods
jge
or
jl
lods
lds
and
pop
das
jb
sbb
fstpl
shrl
hlt
sub
jns
mov
test
adc
push
dec
cmp
push
movsl
movsl
cmp
add
loop
xor
add
inc
mov
push
out
out
movaps
mov
js
fmuls
je
out
sbb
lods
jo
das
add
xchg
mov
cltd
jmp
out
adc
insl
and
cmpsl
or
cmp
mov
lds
pop
int3
mov
sbb
imul
xor
stos
jle
pop
aas
dec
xor
push
push
mov
lcallw
push
cmp
dec
dec
popa
scas
mov
fwait
mov
imul
and
pop
pop
dec
inc
loope
or
sub
add
divl
cmp
push
push
mov
mov
ficoml
cmp
cmp
pushf
pop
stos
mov
rcr
mov
inc
inc
jne
or
fbstp
jbe
xor
pop
dec
jg
ds
lock
outsb
cmp
pop
cmpsb
mov
test
inc
mov
mov
push
ret
xchg
mov
in
mov
outsb
loop
mov
jns
jno
xor
dec
adc
pop
jnp
cld
rcll
movsl
and
jg
and
xchg
fisubrl
std
jnp
call
leave
test
jecxz
jg
mov
xchg
jecxz
push
incl
adc
jne
pusha
inc
add
scas
ficomps
rorb
mov
cltd
adc
test
imul
loop
fstpl
xor
push
mov
xor
add
popf
je
aas
cmp
mov
xor
adc
sbb
push
outsb
repnz
in
jne
in
adc
divl
sbb
fldenv
or
fbld
imul
lret
lahf
fwait
ror
cmp
push
lcall
push
push
lret
test
fcmovu
push
fcoms
pushf
ret
mov
pushf
or
imul
sub
sub
and
or
inc
cmp
notl
mov
mov
movsl
pop
in
jle
lahf
inc
loopne
xchg
add
imul
add
add
dec
popf
mov
dec
xor
out
jge
mov
dec
inc
aam
dec
mov
fwait
lret
shrb
arpl
xchg
mov
lret
jnp
jp
sbb
bound
cmp
insl
mul
pop
push
push
insl
and
js
fsts
fiadds
rcrl
xchg
dec
push
stc
jae
cmpsb
push
xchg
scas
pusha
das
rcll
add
loopne
xor
inc
fmull
fcmovnbe
outsl
sub
shll
and
andl
xchg
nop
lret
clc
in
fwait
les
sbb
repnz
xor
jle
xchg
daa
lods
xor
js
loopne
xchg
lods
add
out
mov
ljmp
adc
sti
jo
cmp
mov
out
push
ja
hlt
stos
xchg
or
stos
call
mov
cmp
pop
sar
fsubrl
lea
lock
push
ret
dec
jno
pop
inc
fisubrs
xor
mov
roll
lock
call
adc
sbb
loop
loope
inc
addr16
fistpll
pop
adc
mov
push
fld
jo
sbb
xor
pop
stc
rorb
icebp
movsb
mov
xor
pop
sbb
sub
fcompl
lods
adc
rcrl
pop
das
mov
adc
lahf
loope
aam
out
pop
add
jp
dec
sub
xor
test
das
sub
mov
js
add
ret
mov
sbb
clc
loop
add
nop
xchg
mov
popf
push
std
test
cmp
lahf
pop
jge
pop
mov
shl
popf
scas
inc
mov
rcl
pop
in
aam
cltd
lret
jecxz
mov
add
xorl
adc
arpl
scas
adc
je
pushw
push
imul
popf
ficompl
orl
jg
push
fidivs
flds
cwtl
enter
adc
dec
jg
cmp
jne
imul
adc
xlat
imul
dec
mov
push
enter
insb
int
xchg
jecxz
lods
xchg
add
adc
hlt
push
ja
mov
or
pop
pop
mov
sub
xlat
test
jg
test
andl
dec
mov
xchg
shlb
mov
or
and
mov
pop
ljmp
dec
aaa
and
enter
lods
lods
xchg
mov
inc
or
dec
in
out
outsb
es
sbb
dec
lret
aam
xor
dec
inc
rcrl
push
pop
push
stos
lret
outsl
sub
sahf
add
leave
adc
push
test
out
push
inc
push
mov
mov
xchg
adc
mov
mov
sub
sub
xor
ficomps
out
sbb
mov
xchg
cmpsb
pop
fdivrs
loope
imul
lods
xchg
out
jg
enter
pop
mov
cwtl
cmp
push
jmp
xlat
in
sub
mov
pop
push
into
adcl
std
cmpsl
mov
jne
loope
mov
cmp
push
push
xor
imul
lds
ffreep
fcoml
push
lgs
inc
push
push
pop
cmp
xchg
pop
mov
lods
ljmp
xchg
out
cmp
fadd
pop
and
xor
out
das
cwtl
push
cmp
nop
xor
pushl
mov
movsb
inc
scas
jno
cmpb
lds
jmp
pop
loope
cwtl
es
ljmp
push
lods
loop
sub
js
or
insb
loope
pop
iret
test
in
cmp
jge
test
idivl
xor
push
sub
or
fistpll
mov
sub
es
xchg
sub
jmp
hlt
sub
lods
das
pop
out
push
jbe
xchg
fwait
and
aad
xchg
lahf
add
mov
xchg
ljmp
sub
sub
ret
lahf
cmp
cld
mov
dec
insb
inc
jo
idiv
sbb
mov
jge
negl
jne
add
nop
mov
push
and
inc
sti
movsb
data16
mov
enter
xchg
sbb
pushf
xchg
xor
mov
pop
inc
push
ljmp
dec
pusha
pop
push
loop
pop
in
data16
jnp
pusha
dec
repz
dec
mov
fucomp
mov
inc
xchg
mov
adc
jne
cmp
jae
lret
push
push
lret
test
push
lahf
inc
adc
jg
jb
push
repnz
int3
adc
das
jb
scas
mov
test
mov
jae
daa
push
repnz
xor
push
xchg
xchg
aaa
mov
repz
sub
loope
das
cmp
add
and
cmc
loope
lahf
out
cltd
nop
imul
ds
cmp
pop
mulb
dec
dec
lret
mul
hlt
out
xor
sbb
into
xchg
dec
cmpsb
and
mov
xor
mov
adc
inc
sti
cmp
dec
popa
int3
mov
sahf
cmp
jle
xchg
pop
aam
aaa
adc
repz
repz
js
mov
imul
sub
pop
xchg
les
into
xlat
adc
jne
fsubs
mov
xchg
lock
jge
addb
inc
inc
arpl
aas
dec
stos
fwait
or
cmp
rcl
lea
inc
cs
push
mov
or
sarb
cmp
sahf
xor
cltd
dec
ret
test
push
push
lcall
cmpsb
push
ss
mov
addl
dec
cltd
push
push
js
mov
jl
scas
fldt
addr16
jnp
pop
dec
push
xor
xchg
add
add
imul
mov
xchg
shll
mov
into
mov
clc
sbb
push
loopne
fimull
in
mov
ret
push
cwtl
mov
mov
mov
jnp
fwait
pop
rclb
inc
adc
dec
pop
or
sbb
and
aam
cmp
fistpll
push
scas
or
cmpsl
jb
rcl
jle
or
sbb
popf
sbb
addl
xchg
push
sbb
mov
xor
jle
ret
fistl
or
scas
int
pusha
mov
daa
jb
cmp
pop
adc
mov
sahf
and
in
adc
adc
push
out
mov
cmp
pop
imul
jecxz
cwtl
dec
dec
outsl
sbbl
adc
outsl
push
daa
mov
add
cmp
lea
mov
pop
roll
ja
cld
push
pop
add
mov
hlt
imul
scas
enter
adc
jns
std
lahf
inc
lcall
push
ror
dec
sub
mov
jge
rcrb
cmp
scas
adc
cmpb
or
sub
add
cmpsb
or
jnp
mov
dec
sub
xchg
pop
adc
push
sbb
enter
fistpll
loop
and
push
cmp
sbb
lret
inc
rclb
jecxz
sub
das
or
sub
push
lcall
int3
push
ret
and
lahf
or
lret
push
pop
dec
dec
fistl
cld
fnstenv
xchg
jmp
jecxz
mov
sub
clc
jl
sbb
mov
xor
fucomi
in
sbb
xchg
pop
mov
lea
mov
scas
jbe
shll
leave
lahf
pop
jbe
scas
and
gs
inc
scas
inc
pop
xchg
xor
cs
dec
mov
add
dec
and
or
and
or
and
inc
mov
mov
es
jne
jns
dec
int
roll
jl
into
mov
fs
sbb
mov
pop
mov
jge
call
mov
aam
je
fcmovnu
loope
ret
mov
daa
inc
punpcklbw
pop
and
mov
ja
gs
call
xchg
or
out
fstp
loop
hlt
xor
movsb
in
jne
movsl
push
ret
pop
lcall
cmp
insb
lock
stc
bound
pusha
xorl
leave
inc
data16
movsl
mov
clc
lcall
dec
fidivl
movsl
lahf
arpl
mov
pop
push
in
ret
adc
addr16
ficompl
ja
faddl
sub
frstor
dec
in
test
push
ret
decb
push
mov
xor
or
jl
popa
push
enter
mov
jle
daa
cmp
jo
ret
jle
and
push
mov
mov
xor
jmp
xchg
pop
cmp
aam
jnp
dec
jbe
pop
push
xor
push
bound
or
and
mov
in
mov
and
cmp
cmp
mov
adc
scas
dec
fwait
insb
and
loope
mov
lret
push
fildll
xbegin
push
mov
adc
sub
push
daa
neg
or
sbb
orl
outsb
or
repnz
add
push
lods
jbe
pop
lock
cs
jle
add
aaa
xchg
popf
leave
iret
out
sbbb
out
in
lea
and
cmpb
and
mov
cmp
outsl
loop
mov
add
aad
push
test
push
insl
stos
jp
jb
mov
stos
jle
pop
or
push
cmp
rdtsc
push
dec
or
mov
fidivl
pshufw
daa
ret
mov
in
mov
pop
sub
sub
cmp
mov
fildll
xchg
dec
daa
int
testb
adc
outsl
sahf
addr16
mov
sbb
push
sbb
test
xchg
sbb
or
pop
pop
or
xchg
adcb
jecxz
stos
cli
repnz
test
jnp
test
sbb
sbb
sar
repz
movb
push
mov
jmp
push
fstp
stc
mov
popf
mov
cld
je
into
mov
xor
mov
shlb
cmc
sbb
pop
lahf
inc
lahf
xor
lock
xchg
xchg
out
pop
adc
test
jns
rclb
mov
xchg
mov
bound
repnz
mov
pushf
cmc
insl
lods
int3
cmc
mov
cmp
pop
mov
loope
rorl
mov
scas
jae
cmpsl
loop
sbb
mov
addb
and
leave
ljmp
insb
popa
jmp
scas
popa
das
and
cmp
testl
add
pop
mov
mov
add
mov
fcom
pop
test
repnz
rolb
xor
loope
mov
shll
dec
xor
arpl
or
test
bound
dec
jmp
cmp
xor
sub
outsl
shr
mov
das
fbstp
mov
enter
sti
push
mov
xor
sbb
repnz
xorl
jbe
movsl
jecxz
es
daa
bts
fisubrl
lret
data16
ror
xchg
dec
jmp
xchg
sbb
ljmp
je
push
mov
jb
ror
sbb
or
jg
and
xor
adc
std
aam
push
pop
pop
xor
fildl
in
imul
mov
pusha
adc
xlat
pop
movsb
lret
insl
fadd
dec
mov
jle
mov
add
shlb
sbbl
leave
xor
mov
adc
sbb
jae
ret
ljmp
dec
mov
bound
jge
mov
out
out
lea
sub
je
mov
cmp
testl
mov
mov
xorl
and
cmp
xlat
pop
ret
xchg
or
cmp
repz
jno
cmp
inc
push
xor
jne
ret
pop
rolb
rcrl
mov
jge
and
shrl
test
push
adc
adc
xor
push
mov
sbb
rolb
mov
xlat
cwtl
cmpb
adc
into
int3
add
sub
ret
subl
int
mov
repnz
add
sub
hlt
xor
nop
lods
pop
and
sbb
mov
fisubl
inc
push
leave
aas
push
inc
call
lahf
stos
pop
mov
mov
mov
mov
dec
xchg
arpl
pop
cltd
jmp
cmp
jae
into
add
icebp
or
push
fldl
lcall
sub
pop
adc
rcl
jecxz
sbb
xchg
clc
jae
and
jmp
cmpsl
cmp
outsl
orl
lahf
adc
inc
bound
inc
aaa
sbb
or
cld
fimull
rsm
repnz
sbb
cld
rorl
sub
jecxz
mov
popa
nop
mov
fld
xchg
add
fsubrp
xchg
cmpsl
sub
lcall
out
xchg
dec
cmp
imul
fsubl
push
rcrl
out
divb
dec
xchg
mov
rcrb
cli
repz
paddusw
add
xchg
inc
sub
push
pop
dec
nop
cmp
push
mov
fs
or
push
sbb
loop
fwait
dec
aad
or
fnstenv
cmp
loope
cmpl
hlt
xchg
dec
inc
je
dec
lock
shll
in
jmp
jns
and
mov
cmpl
aam
sub
out
jbe
mov
andb
xorl
es
push
push
inc
dec
es
lret
dec
lret
ss
or
dec
lds
lcall
mov
insl
pop
cmp
shll
push
jae
cld
push
out
add
repnz
mov
lods
enter
push
jle
jecxz
jmp
xor
rolb
mov
lret
mov
push
xchg
icebp
rcll
sub
jecxz
pop
dec
out
inc
lret
jl
mov
fsub
int
or
cmc
test
xor
out
popf
sbbl
mov
pop
mov
cltd
push
mov
push
push
add
cmp
push
pop
jno
mov
xchg
adc
mov
sbb
push
dec
cmp
sub
jmp
dec
add
or
push
dec
and
or
std
sub
shll
sub
add
sbb
je
xor
lret
arpl
push
mov
shr
pop
add
pop
scas
dec
mov
icebp
das
dec
add
pop
pusha
add
enter
mov
rcl
test
lret
in
pop
inc
push
pop
ret
fs
mov
cmc
jae
cmp
mov
in
daa
mov
xchg
or
jmp
cmp
outsb
imul
rorl
andb
pop
mov
jmp
mov
notb
push
enter
jecxz
in
push
jecxz
dec
sub
jae
xchg
cmp
pop
add
push
push
idivl
and
in
add
dec
inc
leave
xchg
xchg
fcoms
lods
xor
lret
pusha
xor
inc
inc
adc
test
cwtl
pushf
add
shrl
xorl
divl
mov
jnp
push
popa
sbb
out
mov
imul
dec
andl
sub
sbb
pop
roll
mov
pop
cmp
std
sub
outsb
xchg
mov
sbb
out
addr16
leave
lock
adc
pop
das
inc
in
xorl
or
popf
ficomps
repnz
cmp
jp
clc
ret
jb
sahf
dec
mov
rorl
bound
shlb
cmpl
jno
pop
test
jo
mov
push
pop
ss
testl
call
dec
stc
push
xor
jne
and
jge
inc
lcall
push
fldl2t
scas
lcall
addl
mov
sti
loopne
pop
xchg
sbb
lock
add
sarl
or
vpslld
mov
xchg
js
push
hlt
sbb
test
add
stc
ja
jge
pop
add
jmp
jb
cli
popf
ror
xor
push
push
js
adc
lds
stos
insl
in
push
mov
pop
insl
dec
lds
stos
add
sbb
je
push
xchg
jbe
mulb
mov
and
xchg
inc
inc
jl
divl
jg
iret
and
mov
add
add
in
sub
pop
mov
mov
and
sub
fldl
add
dec
xchg
push
hlt
or
test
lret
cli
adc
andl
in
out
rcll
imul
dec
fmull
or
fldcw
pop
mov
repz
add
fld
add
sbb
out
mulb
fmul
pop
out
iret
loope
jbe
repnz
mov
xchg
jbe
push
jge
xchg
jne
pop
ljmp
cmp
push
outsl
ret
sub
pop
adc
cmp
addr16
aad
aam
stos
popa
out
out
inc
mov
lret
push
lcall
sbb
scas
out
mov
adc
fdiv
shl
mov
add
negb
stos
xor
movsb
mov
inc
bound
cli
push
cmc
in
lahf
lods
jecxz
rolb
adc
mov
xchg
adc
das
mov
in
stc
pop
sub
xor
sbb
jecxz
dec
scas
fwait
jno
das
cmp
mov
pop
inc
stos
xchg
jno
mov
cmp
js
aad
icebp
bound
pop
fwait
lods
cli
sbb
ret
in
xchg
jne
and
jmp
pop
lock
pop
lret
fdivrl
mov
cs
or
fisubrs
jae
sub
cmp
cwtl
pop
jl
or
fs
int3
leave
mov
sbb
add
das
cmpsb
or
jno
push
pop
fucom
addr16
mov
mov
stos
xor
xchg
ss
mov
jbe
jp
sbb
imul
jno
pop
push
lcall
int3
lds
xchg
jge
jl
push
int3
pushl
sub
or
pop
fwait
je
mov
sub
dec
jle
pop
push
xor
and
cmp
xchg
add
sub
das
mov
sub
repnz
les
jns
in
adc
and
out
mov
pop
cmp
jecxz
repz
xchg
int3
sub
mov
cld
push
mov
xchg
adc
int
sahf
push
or
xchg
and
orl
pop
cmpl
mov
fsts
lea
insl
or
inc
aaa
dec
mov
mov
daa
idivl
pop
js
ljmp
push
push
jno
icebp
push
pop
dec
sbb
push
jns
outsl
jmp
scas
scas
out
ret
scas
outsl
and
cmpl
mov
hlt
mov
add
mov
jmp
mov
btr
test
mov
push
push
push
jns
lods
je
push
inc
hlt
iret
mov
push
lcall
data16
imul
mov
rorb
rclb
fildll
xchg
ret
cmp
andb
lahf
cmpsl
iret
push
and
int3
cwtl
loop
push
inc
adc
mov
scas
push
jl
inc
jp
enter
sub
cltd
xchg
mov
dec
xor
mov
test
inc
popa
cld
inc
lea
mov
xor
inc
out
xchg
movsl
push
jo
sbb
sub
lret
ljmp
mov
loop
data16
xchg
adc
fisubl
loope
ficoml
push
or
jo
iret
in
mov
jg
push
loop
and
int3
rcrl
mov
mov
push
dec
dec
and
cld
inc
pop
add
jnp
cmp
popf
stc
or
sub
sub
inc
call
out
seta
out
incl
fisttps
mov
out
jp
cltd
movsl
xor
gs
in
negl
lock
mov
loopne
dec
xor
or
inc
outsb
push
fsubrl
inc
adc
in
jbe
and
dec
outsl
jg
jg
dec
shrb
jne
mov
cwtd
push
dec
or
inc
popl
push
out
in
mov
push
adc
mov
fstpl
movsl
mov
cmp
and
icebp
ficoms
xchg
mov
and
xor
es
xchg
lret
jl
xlat
data16
negl
mov
loopne
pop
jmp
xchg
lods
ficomps
jb
jae
shll
mov
pop
pop
and
mov
subb
lmsw
push
mov
lret
mov
jge
xchg
push
jle
xor
dec
push
push
ja
pop
in
cmp
adcl
jmp
into
push
xchg
jns
add
enter
dec
mov
insl
xchg
cwtl
mov
add
mov
jnp
cmp
mov
and
xor
call
stos
pop
call
punpckhdq
xor
adc
jecxz
je
cmpl
and
popa
xor
mul
in
das
and
sub
inc
std
mov
data16
movsb
fsubrs
inc
push
adc
fucomip
dec
push
pop
xchg
lret
ret
mov
test
lds
mov
add
mov
jge
mov
inc
aas
and
ds
xchg
pusha
xchg
sbb
addr16
add
das
pop
mov
faddp
sub
icebp
cmp
icebp
int3
sarl
mov
cmp
aad
xor
repnz
fnsave
icebp
das
cmp
and
dec
test
inc
sti
sbb
pop
xchg
inc
xchg
repz
adc
dec
ror
or
add
mov
iret
call
es
cmpb
cli
cli
jne
sbb
or
jle
loop
adc
pop
xchg
mulb
cmp
shll
xor
cmp
or
repnz
adc
mov
sbb
xlat
lds
popf
out
leave
xor
and
mov
push
dec
ds
and
inc
push
outsl
xor
outsl
xor
mov
adc
xchg
call
push
ss
jle
out
dec
inc
mov
repz
orb
sti
lods
dec
lds
pop
gs
lcall
sti
mov
push
shrb
scas
mov
dec
sbb
cmp
and
sti
push
dec
jbe
or
movb
ds
xlat
es
bnd
insl
fucomp
out
cmpsb
scas
fistps
pop
enter
mov
inc
jnp
lock
outsl
xchg
push
dec
inc
or
and
jle
cltd
adc
mov
jl
inc
add
out
mov
jl
mov
dec
adc
pop
push
inc
fnsave
pop
sbb
fstpl
dec
outsl
xlat
inc
mov
hlt
cmp
xchg
xchg
add
lret
jbe
jge
jns
ficoms
loopne
aaa
ja
cmp
jns
jg
lret
xchg
cwtl
dec
sahf
add
and
icebp
dec
movsl
xor
test
jl
stos
adc
mov
push
ds
inc
imul
test
jmp
into
clc
jle
mov
mov
add
neg
or
xchg
xchg
jle
and
invd
xor
mov
stos
repnz
ret
sub
gs
xchg
dec
call
ljmp
arpl
ljmp
dec
test
out
lcall
push
sub
test
fisttpll
cmp
or
iret
mov
test
jle
insb
pop
lea
cmp
ret
mov
cmc
add
das
mov
dec
les
ds
mov
inc
cmp
scas
shl
pop
roll
movb
lret
aad
adc
push
scas
in
push
xchg
mov
sub
jle
jno
fcomi
ja
mov
push
sahf
ss
push
fidivrl
cmpsl
fimuls
push
shrl
mov
repnz
xchg
jle
cmp
mov
fs
stos
xor
mov
lcall
adc
jae
or
insl
adc
cmpsl
jnp
stos
and
sub
je
jle
fsubs
and
cmp
xor
push
pop
faddl
mov
xchg
test
xor
or
adc
stos
out
inc
into
lods
in
repnz
mov
rclb
mov
lret
lods
sbb
sahf
repnz
sbbb
jbe
test
inc
fstpl
mov
jge
add
jb
and
shr
dec
call
cs
sti
aaa
std
test
sub
mov
mov
pop
dec
cld
sub
out
push
pop
int3
jmp
outsl
testb
and
dec
inc
push
jmp
or
insl
pushf
or
cmp
and
sub
cld
popa
dec
xor
and
and
xor
mov
movsl
pop
inc
pop
sub
mov
ja
sub
mov
xchg
jp
ficoml
sahf
jns
imul
jno
les
insb
jle
jns
bound
push
cs
out
rcr
mov
add
mov
pusha
sub
mov
push
dec
out
mov
clc
jae
cmp
in
std
jmp
js
adc
sub
sti
jg
mov
aas
div
jecxz
sahf
mov
mov
ja
loopne
push
popa
loopne
aas
ja
inc
push
jnp
outsl
sbb
arpl
andb
fimull
fwait
adc
xchg
xor
cmp
cmpsb
cli
inc
mov
stos
dec
in
cmc
mov
repz
movsb
hlt
lcall
in
jnp
clc
push
std
loope
push
pusha
xor
shlb
jle
jo
out
iret
push
movsb
icebp
and
sbb
push
cmp
jbe
or
jnp
test
mov
jecxz
fstl
gs
cmpb
mov
call
mov
cmp
sub
push
mov
pushf
push
or
jae
arpl
mov
or
das
cwtl
lock
hlt
cmp
mov
push
push
cltd
sub
dec
sub
push
push
jle
shlb
xor
daa
mov
scas
xor
push
cmp
das
jbe
arpl
xchg
jae
push
pop
add
sbb
gs
mov
inc
call
aaa
xor
ljmp
mov
pop
imul
ja
jb
push
or
ds
and
pop
push
adc
push
sbb
mov
cmpsl
fdivp
cmp
and
shl
sti
sub
xchg
or
imull
ss
mov
cmp
cmpsb
lods
jge
mov
aam
mov
pop
or
inc
fldt
dec
dec
mov
push
faddl
lds
pop
inc
es
jmp
ret
xchg
data16
dec
add
hlt
repz
add
test
inc
outsl
dec
sbb
nop
rcrl
shlb
mov
dec
sahf
movsl
leave
sub
lahf
jno
outsb
mov
clc
xchg
fnstenv
pop
lods
or
jo
inc
mov
jg
shll
dec
pop
jne
jg
test
cmp
into
outsl
pop
pop
sub
inc
arpl
pop
mov
nop
inc
push
or
mov
lods
outsl
sbb
xor
xor
ds
into
shll
pusha
faddl
es
ret
addr16
xchg
pop
add
push
sbb
dec
xor
lret
cmc
mov
jl
sbb
outsl
jae
dec
mov
stos
out
pop
sub
cmp
mov
pop
jae
xor
shrl
add
mov
lret
sub
fnstsw
lds
sahf
je
call
idiv
mov
ror
stc
and
ret
loope
clc
dec
es
pop
xlat
pop
jno
sub
adcl
mov
sar
pushf
or
jmp
dec
add
cli
pop
lock
add
mov
add
lock
cmp
xchg
rorl
das
sarb
dec
je
cmp
jbe
mov
and
cmp
jge
ficompl
lock
mov
aas
ss
test
cli
add
icebp
push
pop
nop
xchg
rorb
imul
call
scas
and
or
std
dec
cmp
mov
inc
dec
fiadds
xor
fistps
add
jp
cmp
fidivrl
xchg
or
sub
mov
mov
cmp
jmp
stos
fcomps
cmp
add
in
int
std
mov
xchg
lea
mov
or
add
sbb
mov
mov
out
hlt
fmul
pop
and
testl
sbb
out
fildl
jg
push
cltd
mov
xor
adc
std
ret
dec
inc
xor
xor
test
pop
sub
inc
jle
mov
push
mov
test
cmc
jo
cmc
xchg
pop
mov
bound
sbb
push
ss
pushl
xlat
push
pop
adc
jecxz
sub
push
xchg
mov
sub
mov
loop
shll
cs
cwtl
sbb
or
xchg
shl
xchg
xor
hlt
and
push
inc
out
jnp
into
jae
mov
daa
cmp
or
dec
ljmp
adc
pop
inc
in
inc
lds
testl
mov
mov
stos
mov
cltd
xor
out
jle
cmp
xchg
stc
int
pop
inc
jmp
add
stos
popa
lea
ds
cmp
in
push
push
fwait
repz
movsb
arpl
int3
jmp
icebp
xor
dec
enter
mov
adc
mov
sarl
push
clc
sbb
xor
in
cltd
cmp
cltd
mov
fisubrl
fldenv
mov
xchg
jp
fiaddl
pop
int3
mov
xor
xor
push
xchg
into
nop
mov
cltd
test
ljmp
sub
push
xchg
jmp
mov
sahf
xchg
jnp
mov
cmpsb
and
dec
daa
leave
sub
mov
bound
add
pusha
dec
xor
xchg
ret
mov
inc
cs
loope
scas
pop
push
aas
or
mov
mov
lcall
xchg
ffree
dec
add
popf
inc
push
sub
add
cmp
sbb
ljmp
and
mov
in
mov
nop
popf
and
gs
lods
or
cmp
adc
bswap
mov
lods
and
sub
xor
push
push
sbb
js
stos
push
push
push
adc
dec
mov
repnz
mov
leave
leave
iret
xchg
ds
sbb
ret
dec
mov
sub
mov
fwait
push
mov
into
aaa
cwtl
in
pop
orb
outsl
mov
inc
jmp
out
inc
test
mov
inc
pop
out
das
or
lret
pop
and
call
les
xorb
push
cmc
popa
cmp
dec
cmpb
mov
movsl
aaa
rol
inc
in
sti
dec
cmpsl
fistpll
or
into
pop
mov
aas
sbb
jl
ficompl
xchg
fwait
mov
out
cmpsl
sbb
ds
push
cmp
pushf
sbb
andb
insb
and
sub
inc
hlt
and
mov
or
inc
addr16
fadd
test
ret
dec
loop
cmp
cmp
dec
jbe
mov
jo
cmp
cmp
mov
add
and
fwait
xor
sbb
or
rcl
icebp
cld
loope
inc
shlb
xchg
ds
shrb
inc
cmp
adc
mov
adc
push
mov
bound
jmp
adc
les
lea
mov
cld
daa
dec
pop
mov
sarl
into
and
cmc
sub
sbbb
lods
inc
rorw
mov
jo
mov
test
fwait
jmp
inc
and
sbb
push
lret
dec
sub
sbb
add
scas
push
pop
sar
fnstcw
fnstcw
pop
inc
iret
loop
data16
push
lahf
stc
cmp
mov
inc
outsl
mov
mov
shlb
add
dec
mov
cmc
mov
fisubs
in
cmc
add
testb
xor
call
mov
mov
mov
mov
rol
es
mov
add
xor
cld
and
cwtl
and
loop
sub
sbb
and
iret
std
dec
sahf
sub
ss
and
cwtl
cmc
cmc
adc
into
jge
scas
and
stos
cli
cs
aam
fldz
sub
fdivs
ret
mov
push
pop
and
jno
push
jnp
mov
mov
rorb
imul
das
pop
mov
ss
scas
and
movsb
jnp
push
in
sahf
jecxz
jae
fldenv
icebp
pop
pop
push
cmp
test
mov
rcl
pop
insb
pusha
sub
jb
mov
cli
insb
cmp
leave
mov
insb
pushf
or
scas
std
sarb
in
mov
add
and
push
mov
lahf
or
sbb
push
fs
shll
jg
xchg
and
mov
lods
cmc
mov
ret
shr
sbb
mov
mov
stos
mov
xor
xor
add
repnz
outsb
test
push
mov
shlb
adc
push
into
pop
pusha
xchg
jmp
jp
repnz
cld
adc
xor
rep
in
dec
hlt
shrl
cmp
lret
cmp
scas
add
pop
xchg
aad
and
out
adc
pop
into
lret
jno
rorl
push
or
mov
adc
js
ret
add
mov
xchg
xchg
mov
lock
jmp
sub
xor
les
pop
push
test
jns
pushf
lods
cmp
dec
stc
outsl
or
mov
jg
jbe
out
outsl
sbb
xchg
data16
mov
jecxz
call
leave
and
sub
pop
push
push
rclb
sahf
mov
aaa
xchg
je
adc
mov
jmp
stos
aad
xchg
push
rolb
mov
nop
out
adc
lcall
test
pop
js
mov
inc
jmp
pop
nop
loop
in
pop
fistl
sub
cmp
sbb
incl
jns
cmp
lock
mov
add
movsl
jle
pop
inc
mov
add
imul
iret
push
insl
adc
adc
xchg
dec
sbb
xchg
xchg
scas
lcall
imul
fisubl
sahf
rcll
adc
lahf
ret
mov
int3
mov
mov
sahf
dec
imulb
and
sbb
je
xor
or
aad
inc
and
stos
mov
fnclex
dec
adcl
pop
insl
push
leave
mov
sub
mov
add
enter
xchg
call
lret
mov
ret
push
cmp
js
dec
sub
es
data16
push
inc
adc
or
addr16
rorl
push
ds
in
dec
aad
push
in
push
adc
push
pusha
adc
mov
mov
aas
mov
imul
xlat
ret
push
mov
cmp
pop
repnz
outsb
or
mov
sub
xchg
jnp
or
mov
pop
ucomiss
adc
push
mov
push
mov
sahf
dec
out
out
cltd
push
jo
add
mov
stc
addr16
push
adc
decl
sbb
les
mov
ss
mov
mov
dec
aas
inc
xor
mov
push
out
xchg
mov
js
mov
je
adc
sbbb
cmp
pusha
push
mov
cs
and
pop
ss
hlt
adc
adc
adc
gs
jne
mov
out
xor
dec
jg
push
sub
into
les
mov
fldenv
jns
mov
pop
stc
aam
es
mov
mov
sub
dec
enter
xor
mov
hlt
cmpsl
add
or
dec
inc
lods
and
repnz
stos
inc
mov
cwtl
jbe
xor
cli
adc
bound
fwait
or
ds
sub
sbb
popf
in
push
jns
repz
jp
jg
es
test
mov
dec
out
xchg
lcall
stc
scas
aad
loop
lret
pop
adc
cmp
js
sub
popl
sub
bound
in
add
push
pop
fadd
or
sbb
loop
cli
xchg
test
pusha
push
and
cmp
rorb
repz
fdivrs
ljmp
cmp
push
push
adc
mov
cs
cmp
push
fcmovne
cmp
shll
stos
cmp
pop
cli
push
loop
lcall
push
jo
and
gs
ret
repnz
test
inc
repz
in
jl
inc
or
mov
stc
sub
jg
push
pop
mov
add
mov
and
repnz
lods
sub
les
cmpsl
sub
jns
fdivr
xchg
jne
mov
lods
int3
movsl
inc
jp
rol
push
jmp
repz
fistps
lods
dec
popf
mov
jmp
add
testb
int3
insl
incb
int3
xor
loopne
adc
call
stos
mov
aam
pop
xor
int3
iret
inc
imul
push
sub
adc
cmp
add
jb
cltd
call
and
mov
movsb
adc
test
lret
fiadds
jne
shlb
cmpsl
and
int
lahf
mov
pop
loopne
xchg
jl
inc
adc
jmp
or
jbe
mov
mov
cld
add
cmpl
movsb
addr16
aam
cmpsb
clc
int
jb
adc
repz
sub
push
decb
adc
je
sub
mov
and
out
test
fucomip
loopne
in
cltd
xor
imul
mov
ja
mov
jne
jle
cli
dec
loop
fstpl
int
mov
add
push
stos
pop
cmpl
mov
add
mulps
mov
inc
in
add
xchg
mov
dec
loope
ss
adc
xor
popf
popf
dec
dec
jle
sti
mov
adc
fldt
xor
cs
mov
subl
pusha
fs
push
outsl
jge
test
out
sahf
xor
fildll
aaa
cmpsl
cmp
insl
dec
xchg
push
pop
mov
outsb
clc
and
push
xchg
adc
cli
adc
push
fbstp
add
push
inc
out
cmp
adc
mov
cmpsl
fs
fadd
adc
cmp
cli
jo
add
fdivs
xor
add
pop
sbbl
cmp
pop
adc
aam
scas
push
mov
addr16
movsl
lahf
adc
xchg
cmp
hlt
cmpsl
lock
and
mov
and
pop
mov
iret
aam
cmp
jno
nop
std
in
stc
jnp
or
jmp
dec
out
xchg
arpl
in
jbe
or
and
or
sbb
lahf
xchg
or
push
fadd
pop
jge
test
add
hlt
sbb
sbb
xchg
cmpsl
dec
and
dec
sub
aas
stos
push
inc
pop
pop
stos
fadds
push
lock
call
sbb
lds
dec
jo
sbb
mov
cmpsb
mov
push
jns
js
mov
mov
into
push
pop
or
in
and
push
adc
jno
insl
dec
jb
arpl
sub
xchg
cmp
xchg
xchg
mov
push
negb
out
jge
jg
addr16
imull
lds
ljmp
enter
out
test
test
cmpsl
iret
nop
jg
jb
idivl
xchg
mov
into
push
lock
and
mov
or
ret
push
adc
sbb
mov
arpl
pop
rclb
inc
out
push
inc
lcall
mov
push
mov
mov
pop
and
push
xor
push
pop
pop
movsb
rorl
dec
adc
xor
add
lahf
ds
orps
push
mov
dec
dec
lret
and
iret
int
loopne
xor
xor
mov
xor
xchg
es
arpl
rcl
les
pop
loopne
push
sbb
lcall
push
out
lods
xchg
into
test
ret
stc
or
mov
inc
mov
add
mov
out
icebp
imul
and
sbb
je
shr
mov
in
jbe
xchg
cltd
in
hlt
rcl
cld
jp
aam
push
cmc
out
push
push
cwtl
inc
mov
jmp
in
inc
xchg
out
sub
lods
lret
cltd
jnp
push
mov
xor
or
sbb
cs
repnz
popa
jne
lock
xchg
sahf
fnstsw
jbe
lock
xchg
dec
test
repnz
inc
push
lret
rcrl
and
insl
imulb
and
and
cmp
jo
inc
push
leave
or
and
int
in
jae
popf
pop
data16
inc
pop
mov
add
pop
mov
pop
push
push
testb
cli
andl
push
int3
mov
cmp
mov
int3
mov
push
or
cmp
fsubl
shll
jb
cmpsl
jge
inc
dec
in
cmp
pop
sahf
xchg
lret
jne
adc
cmp
vpcmpeqb
push
aas
aaa
jne
inc
xchg
std
aaa
and
push
push
dec
aad
xchg
aam
lods
adc
jp
xor
jno
xchg
rcrb
cwtl
bound
insl
test
and
mov
sbb
xorb
or
into
pop
or
ljmp
inc
jg
cld
xchg
mov
add
dec
lods
push
cwtl
xchg
testb
aad
sub
jmp
xor
rcl
fidivl
dec
in
lret
and
adc
out
cwtl
rcr
ds
fcom
jle
or
cltd
mov
in
data16
xchg
loopne
aam
es
adc
sbb
js
xchg
xor
mov
lret
mov
sub
pop
and
and
insb
adc
movsb
cs
lock
mov
cmc
mov
mov
inc
inc
in
jle,pn
mov
les
and
out
scas
cmp
adc
jb
push
insl
fucomip
movsl
pushf
xor
cld
sub
pop
push
inc
testb
sahf
push
lods
mov
jb
shlb
push
cltd
call
rol
cmc
lods
mov
leave
or
into
rcl
mov
dec
pop
or
push
mov
inc
lcall
imul
std
jbe
xor
add
sbb
sub
jp
sbb
in
inc
daa
jmp
and
cmp
loope
fiadds
stc
aad
movsl
test
mov
mov
pop
mov
xor
ljmp
int3
test
xchg
stos
pop
dec
fst
sub
mov
inc
adc
ror
dec
je
jns
inc
shll
int3
xchg
dec
rcrl
ss
or
shl
cmp
flds
xchg
sar
daa
pop
xchg
mull
jbe
dec
xchg
or
test
or
push
sub
clc
movsl
ljmp
push
jns
sbb
test
clc
inc
sti
es
pop
pop
icebp
push
or
pop
decb
dec
pop
jmp
nop
jg
shrl
icebp
pushf
popa
imul
dec
into
and
ret
push
xchg
jg
push
mov
inc
sbb
movsb
push
cmp
push
dec
in
and
jmp
addr16
loopne
mov
mov
ret
adc
mov
mov
fdiv
jnp
sbb
adc
mov
cld
sbb
daa
jp
jne
clc
ffree
jnp
fists
inc
mov
ss
out
dec
xchg
or
xchg
repnz
arpl
nop
mov
dec
int
jecxz
ret
mov
xchg
pop
sub
fs
es
xchg
adc
jge
fstps
aaa
or
in
or
add
cmpsb
mov
gs
cmc
insl
out
push
pop
cwtl
fdivs
mov
xchg
ds
outsb
cmpb
adc
and
jnp
ds
negb
push
hlt
mov
mov
inc
dec
xchg
jl
aam
cmpsb
push
movsl
xchg
lret
loopne
je
push
out
jne
push
das
and
mov
dec
lcall
in
or
and
jbe
mov
mov
into
adc
xchg
movsb
jae
dec
je
ret
xchg
push
nop
cmc
pop
xor
jno
lahf
pop
mov
push
add
jmp
dec
int
xor
mov
mov
push
dec
xchg
pop
scas
sub
xorl
int
je
iret
pop
out
mov
jmp
xchg
data16
icebp
daa
jecxz
add
lods
and
jp
shlb
add
test
std
rcrl
cmpsb
mov
sbb
fidivs
clc
int
xor
fwait
orb
test
push
mov
popl
mov
dec
movsb
andl
add
or
add
xchg
lea
sub
inc
fwait
loopne
rolb
mov
push
add
jg
f2xm1
pop
test
rcrl
sbb
push
mov
iret
adc
mov
sub
xchg
mov
push
test
ljmp
adc
push
push
ss
stos
shll
fisttpll
outsl
scas
jge
out
mov
cmp
leave
mov
mov
mov
roll
mov
mov
je
xlat
insb
pop
pop
cmp
mov
imul
mov
sbb
xchg
fs
lcall
pop
jl
sub
aam
push
mov
inc
arpl
test
pushf
and
arpl
sub
mov
daa
mov
xor
ja
aam
lea
insl
stc
jmp
stc
xor
xchg
ljmp
mov
cli
mov
je
sub
jae
pop
cmp
imul
dec
cmp
stc
ror
mov
jne
mov
xchg
xlat
adc
mov
and
jns
add
mov
mov
cli
pushf
jo
test
xor
pop
loopne
jns
addr16
inc
rorl
fmull
insb
pop
sub
fisubrs
or
sbb
lret
mov
inc
insb
push
mov
fldcw
pop
pop
mov
xlat
cli
sahf
mov
lods
cmp
jecxz
rclb
mov
rol
mov
add
loop
fildll
ret
ja
and
ljmp
xor
mov
sub
stos
popf
movsl
push
enterw
sub
sub
pop
movsb
das
add
push
or
sbb
jmp
add
push
mov
je
push
mov
mulps
dec
addr16
dec
or
test
pop
push
mov
push
bound
int
xchg
sbb
ljmp
cmpsl
adc
fwait
mov
mov
movsl
pushf
addr16
mov
nop
dec
add
or
icebp
mulb
data16
shl
mov
mov
loope
lods
pop
out
adc
or
arpl
xor
mov
or
push
fimuls
cld
jmp
lea
sbb
xor
and
hlt
sub
out
jge
adc
inc
mov
xor
jb
xorb
jl
rcrl
adc
cmpb
fisttps
xchg
pop
cwtl
imul
dec
and
lahf
sub
int
and
mov
fldt
lea
imul
lods
gs
pusha
ljmp
dec
pop
mov
fistl
jmp
out
sbb
jmp
mov
inc
mov
sub
xchg
cmc
pushf
js
push
add
inc
mov
pop
dec
mov
cmp
ret
es
sysret
nop
ja
in
sahf
push
xor
xchg
sbb
ficoms
adc
mov
fisttpll
mov
in
xor
std
pop
or
cld
add
das
gs
je
cmp
loope
mov
mov
repnz
add
jge
add
jns
outsb
sub
push
pop
aad
cs
pop
mov
sbb
ret
jo
loopne
popf
les
cmc
or
out
or
xchg
push
cmp
xchg
mov
push
adc
std
jns
pop
dec
cmpl
sub
jmp
lret
movsl
arpl
push
dec
push
movsl
xchg
sbb
aam
sub
aam
push
pop
imul
add
adc
add
xchg
pop
pop
lret
dec
mov
in
and
inc
cld
dec
inc
mov
js
les
add
cmp
xchg
pop
js
dec
add
out
cltd
add
call
push
lret
push
jns
lret
in
sbb
jp
push
fsubr
scas
mov
inc
cmpl
repnz
pop
fcmovb
add
or
out
in
inc
jne
lds
pop
jae
dec
pop
shl
inc
mov
push
xchg
inc
mov
nop
cltd
and
mov
test
xor
movd
out
or
fldt
mov
push
adc
test
dec
sarl
cmp
scas
adc
pcmpgtd
inc
fsubs
cld
movsb
mov
inc
aaa
or
cmpsl
test
or
dec
mov
int3
jo
js
pop
lcall
or
push
mov
lods
shl
inc
js
cmp
and
in
outsb
jne
xchg
push
jnp
aad
add
mov
jge
cmpsl
push
lds
cmp
dec
add
out
test
xchg
lret
call
jmp
push
nop
leave
dec
ret
add
push
int
jne
cmp
sbb
adc
les
gs
add
repnz
aad
or
jp
dec
mov
cs
push
jmp
pushf
pop
xlat
repnz
lcall
cli
pop
notl
stc
and
xor
and
add
loopne
nopl
adc
dec
cmpsb
ror
mov
and
cwtl
cmp
push
xchg
pop
js
mov
sub
pop
inc
dec
mov
icebp
cmp
lret
cmpsb
dec
flds
xchg
fldl2t
mov
scas
gs
es
dec
sub
movb
mov
and
sub
mov
xor
test
imul
push
icebp
mov
sub
and
adc
jp
cmp
fdivrs
sub
pushf
push
out
dec
ja
sbb
repnz
faddl
out
enter
jb
rorb
data16
or
cli
push
outsl
in
push
push
cltd
push
dec
imul
arpl
mov
ljmp
loope
fwait
dec
stos
or
idivl
out
pop
sub
inc
sub
inc
mov
loope
jp
cmp
cli
shl
inc
fcmovu
shrl
push
inc
inc
xor
aas
xorl
fdivrp
mov
adc
sbb
mov
mov
cs
mov
in
repz
rcl
push
pop
rcr
xor
lret
xorb
inc
cli
repz
loopne
aad
cmp
cs
jne
sub
sbbl
jns
push
iret
push
gs
hlt
jbe
push
xchg
outsl
inc
adc
xor
loopne
inc
sub
push
test
mov
mov
or
push
mov
jmpw
out
lock
mov
popf
lock
lods
xchg
pop
mov
fistl
push
ljmp
rcll
inc
xchg
push
aad
cmp
jb
dec
imul
cmp
xchg
push
inc
icebp
sub
sub
dec
outsl
add
adc
inc
leave
int3
xchg
js
or
cmp
pop
gs
adc
add
ret
orb
add
push
push
or
adcl
jnp
inc
push
dec
sti
shr
test
jb
movsb
sub
stos
imul
inc
xchg
jg
movsb
leave
mov
push
adc
out
jmp
jbe
dec
lds
in
lret
negb
out
or
pop
nop
jo
arpl
stc
test
pop
mov
out
cwtl
adc
dec
push
xor
and
cs
subl
fs
dec
jl
mov
lds
repz
adcb
rorl
add
jge
dec
xor
pop
xor
pop
mov
and
dec
cmpsl
mov
jecxz
js,pn
push
jg
mov
xor
int3
cmc
mov
aam
stos
fdivl
push
jnp
pop
push
imul
mov
in
pop
int3
out
mov
subl
aaa
nop
adc
mov
pop
les
adc
mov
fidivs
mov
pop
in
add
stos
repnz
iret
lcall
push
out
or
xchg
arpl
sub
pushf
mov
cmc
sub
mov
sbb
in
fdivrs
ss
push
mov
sahf
fisubrl
aad
jae
outsl
jnp
enter
sbb
mov
mov
and
test
pop
cmp
mov
xchg
stos
roll
sub
fldz
test
daa
or
xor
les
loope
pop
push
pop
cmp
out
dec
mov
pop
jg
loope
arpl
lahf
out
lods
xlat
mov
inc
loopne
mov
push
cmp
or
mov
imul
mov
and
jno
lret
inc
inc
cs
lods
dec
nop
test
out
ret
popa
rcrl
insb
jbe
mov
push
cmpsl
mov
xchg
sub
fcoml
jbe
inc
or
jb
jo
je
fwait
xchg
je
lods
xor
sbb
push
or
pop
or
cmpsl
fidivrs
sub
add
lods
gs
jmp
cmp
dec
sbb
pop
add
or
insb
jmp
dec
stos
adc
cltd
scas
xchg
or
push
into
or
cmc
jmp
jmp
hlt
call
movsl
xchg
mov
stos
sub
out
cmp
js
mov
out
mov
clc
inc
push
mov
ljmp
arpl
hlt
mov
inc
mov
aam
adc
loope
cmp
pop
into
loop
inc
xor
xor
mul
fimuls
mov
jecxz
lock
cmp
nop
rclb
repnz
sbb
mov
dec
icebp
repz
aaa
inc
cmp
sar
mov
outsb
dec
ficoms
fldcw
push
out
cltd
add
lcallw
dec
pop
and
mov
or
dec
add
jge
mov
dec
outsl
test
lcall
popf
xlat
dec
and
cwtl
ljmp
out
inc
rorb
clc
xchg
jnp
nop
fs
mov
aam
lods
and
push
inc
fsubrl
jno
and
sub
cmp
sbb
jo
sub
lods
sti
jecxz
outsl
inc
push
adc
shll
outsb
es
adc
clc
mov
sub
in
jmp
fists
pushf
aam
or
dec
mov
rolb
xor
sub
cltd
mov
xchg
fs
cmp
lret
ret
sahf
sti
out
push
call
mov
cmp
mov
lahf
into
inc
dec
adc
sbb
xchg
rorb
dec
mov
popa
pop
mov
xchg
aaa
clc
aas
xchg
mov
cli
mov
sub
mov
push
and
push
inc
inc
fidivrs
mov
mov
pop
mov
xchg
cmp
out
rcl
push
sbb
mov
jae
pop
cmpsb
fucomip
repz
dec
fistpl
into
xchg
mov
push
cmp
std
lahf
mov
inc
xchg
mov
dec
sbb
xchg
cmp
lcall
adcb
xchg
mov
lret
jmp
pop
sbb
fstps
insl
adc
cli
lret
addl
inc
jmp
js
push
int3
jae
push
sbb
loop
lock
dec
jo
std
mov
loopne
and
daa
pop
adc
cmpsl
inc
loop
loopne
dec
leave
add
or
aam
lcall
lret
jnp
push
shrl
inc
dec
mov
js
mov
xor
push
push
loopne
xor
test
mov
scas
inc
outsb
xchg
fistps
sbb
popa
sbb
pop
clc
inc
mov
movsl
mov
mov
daa
in
add
cmp
js
pop
neg
pop
dec
test
sahf
or
pop
xchg
xchg
pop
aam
mov
and
test
imull
loopne
imul
aas
std
nop
repz
pop
mov
insb
aam
jge
sbb
sti
mov
jp
clc
push
pop
mov
cmp
xchg
jecxz
bound
sbb
loope
hlt
ja
andl
loop
dec
sbb
jbe
js
shll
xchg
leave
ffree
movsb
inc
push
js
mov
mov
lahf
jno
sbb
xchg
mov
aaa
movl
aam
inc
cli
bound
cmp
idivl
aas
int3
fiaddl
iret
and
xor
xchg
push
fs
clc
or
test
cwtl
cmp
ret
out
push
push
les
jge
push
push
lret
jl
pop
sub
call
ds
sbb
sub
xchg
imull
dec
out
dec
lds
lods
xchg
lret
es
add
sti
stos
cmp
jno
jbe
xor
push
sub
inc
pusha
xor
sub
add
add
mov
cwtl
mov
cltd
mov
mov
js
cmp
inc
xor
hlt
pop
mov
jmp
or
jle
xchg
mov
mov
daa
mov
lods
hlt
pop
pop
stos
push
jno
xor
mov
testb
hlt
jge
push
cmp
mov
lea
and
pop
push
scas
rorl
fnsave
cmp
push
aas
jge
jl
jmp
adc
add
div
test
test
mov
orb
cld
mov
push
cmp
dec
pop
or
pop
movsl
inc
sarl
insl
mov
cmpsb
jb
andl
and
dec
std
xchg
push
cmp
mov
fstpl
jne
xchg
xchg
nop
push
ret
std
repnz
cmovne
scas
xor
aad
xor
or
into
add
mov
pop
xchg
imul
fistpl
mov
pop
xor
pop
stos
push
mov
and
int3
pop
push
mov
imul
pushf
iret
push
fisttpl
cli
jecxz
pop
push
dec
hlt
and
fcomps
nop
stos
loop
out
test
lret
xchg
loopne
ror
mov
in
dec
int3
iret
mov
mov
std
jmp
push
xchg
cmp
mov
lcall
lods
movsb
and
ret
cmp
lret
push
pop
push
fistpl
loope
int3
fistps
cld
loope
in
outsb
cmp
push
pop
mov
pop
sub
and
lret
cmp
mov
push
aas
push
jo
cmpsb
pop
xor
bound
adc
or
std
jnp
inc
adc
push
sahf
cmp
faddl
adc
rcrl
cwtl
mov
pop
lret
hlt
sbb
push
test
mov
sarb
sbb
xchg
adc
movsb
push
fadds
mov
xchg
inc
scas
xchg
and
bound
aas
mov
add
xlat
inc
lret
jnp
int
jae
xchg
repnz
call
test
lea
stos
mov
sub
inc
cmpsb
jecxz
mov
mov
and
or
adc
sbb
jbe
decb
loopne
loop
or
jb
fdivrl
stos
jae
leave
adc
mov
sbb
adc
sbb
mov
into
popa
movsb
push
jmp
jmp
ja
cmpb
mov
int3
test
push
jne
pusha
dec
xlat
jo
mov
adc
or
lcall
push
sbb
xor
sbb
cli
push
aad
mov
stos
dec
pop
pop
clc
jo
jmp
mov
sbb
pushf
gs
sahf
mov
cmp
pushf
movaps
stc
and
mov
push
sbb
xlat
add
push
stos
ret
cmp
jge
or
jl
mov
dec
out
jle
dec
cmp
jo
test
jno
fstpt
int
lcall
push
xchg
dec
jge
ja
call
xchg
out
adc
mov
stos
xchg
popa
sarl
aaa
mov
or
and
mov
sbbb
push
mov
jl
aad
push
dec
pusha
lea
out
rcll
leave
mov
cmp
push
inc
xchg
add
xchg
mov
lret
and
leave
ss
push
adc
bound
dec
xor
cmp
icebp
not
aad
lock
not
or
out
pop
nop
jne
and
cmp
mov
stc
mov
cmp
dec
mov
jmp
xchg
and
ficoms
jp
cld
hlt
repnz
xchg
mov
cmp
in
pop
push
rorl
adc
shrb
loop
mov
cmp
adc
xchg
in
loope
push
push
add
mov
push
cmp
std
sbb
jle
stc
pushf
ror
xor
loopne
adc
in
into
ret
sti
fstpt
icebp
arpl
popa
cmc
jg
stc
dec
add
dec
out
aam
pop
adc
lcall
daa
or
add
nop
cltd
inc
add
xchg
arpl
pop
test
emms
or
shl
mov
sbb
std
xor
aas
insb
sar
cs
jo
adc
jmp
or
push
push
adcl
inc
push
ret
ljmp
mov
nop
bound
jl
in
outsl
fildll
push
aaa
jnp
cmp
cltd
ja
push
nop
orb
mov
and
outsb
xchg
xchg
dec
xchg
adc
or
rcl
push
testb
dec
lret
cmp
addr16
imul
mov
jno
aaa
jb
mov
js
fcmovne
cmp
in
mov
or
cs
mov
addr16
jl
sub
jb
dec
mov
insl
mov
sbb
mov
sub
imul
xor
mov
dec
xlat
cltd
and
adc
xchg
sbb
mov
sbb
aaa
je
push
jge
das
jge
inc
xor
aad
xchg
outsl
sbb
fstl
xor
and
pop
and
scas
movsb
enter
adcb
outsl
ror
js
test
jb
adc
inc
dec
js
mov
dec
and
xchg
iret
sub
inc
hlt
dec
sub
in
mov
lods
aas
jnp
jecxz
test
imul
xor
sbb
push
push
or
into
xor
insl
sub
xor
mov
push
rcrl
push
or
out
outsb
add
ffreep
pop
dec
pop
xchg
ret
xor
pop
mov
movsl
notb
xchg
stc
je
mov
mov
lret
scas
pop
inc
out
xor
lea
sbb
mov
negl
scas
pop
ja
push
repz
xor
test
dec
pop
mov
in
or
push
hlt
ss
les
push
insl
addr16
int
in
divb
mov
cmp
out
das
push
pop
lds
inc
and
pop
lahf
cmp
fs
fwait
int3
add
mov
cmpsl
adc
xor
mov
xor
sahf
or
aaa
insb
xor
inc
jns
mov
mov
xor
mov
cmc
add
mov
mov
cmp
dec
and
jo
fstpt
sub
push
or
pop
inc
jne
sub
jp
mov
fiadds
sbb
jae
fstpt
fst
ffreep
movsb
xor
int3
jne
rolb
fldenv
sbb
lods
cmp
fisubrs
xchg
lahf
mov
lds
push
into
scas
mov
sti
fstp
outsl
push
nop
repz
add
fsubl
fbld
negb
movsl
dec
xchg
mov
out
adc
daa
mov
pop
cli
enter
pop
ds
pop
add
scas
mov
add
xchg
mov
mov
lcall
mov
or
inc
movsb
dec
sub
and
out
sub
insb
lret
ja
add
add
ret
mov
inc
popf
sbb
push
scas
arpl
push
cwtl
add
mov
push
cmp
aas
jne
cmp
pop
push
inc
mov
xor
cmc
cmp
cltd
cwtl
xor
test
call
sbb
mov
sub
jp
cmp
xor
or
jb
inc
jle
mov
aaa
inc
cs
test
xor
jmp
sti
lock
mov
xchg
jnp
and
lods
adc
fsubl
lret
jl
fisubs
mov
sbb
adc
sbb
push
and
bound
sbb
sbb
jecxz
xchg
mov
xor
sub
or
pop
or
cmp
mov
rclb
xor
loop
adc
sbb
int
filds
or
rcl
insl
add
sub
insb
pop
sub
in
rcl
rclb
cmpsb
mov
gs
lret
repnz
insb
adc
lret
aas
mov
jb
or
pop
rcrb
mov
daa
cmp
mov
jmp
mov
jmp
jmp
xchg
inc
sub
sub
adc
xchg
pop
cmpsb
cmp
stos
jo
ds
outsb
push
sub
stc
int
lahf
rorb
xor
sub
xchg
cmpsb
gs
daa
out
int3
jbe
cwtl
mov
push
sub
adc
adc
shl
andb
dec
out
xchg
adc
fdiv
sub
cmp
push
mov
fwait
push
cmp
mov
push
mov
dec
push
out
adc
push
add
aam
leave
mov
xchg
xor
dec
or
popa
aad
outsl
out
cmp
out
es
dec
dec
pop
divb
repz
mov
mov
fimull
dec
inc
push
fs
stc
cwtl
or
lret
jne
push
insl
mov
leave
mov
stos
ret
enter
pop
lret
inc
notb
sub
test
insb
mov
mov
lcall
out
mov
mov
je
scas
js
sub
fwait
mov
imul
and
outsb
pop
dec
or
dec
sbb
sbb
arpl
pop
push
stos
imul
cmp
cmp
push
lahf
loope
pusha
push
pop
jbe
imul
add
ret
pop
dec
pop
dec
or
pop
call
cmp
je
add
add
sub
cmp
mov
fimuls
pop
imul
pop
push
inc
cmpsb
push
add
and
pushf
mov
pop
sarl
clc
in
jo
mov
jg
inc
add
and
mov
and
hlt
push
fdivr
sub
dec
sbbb
rcrl
and
ss
imul
je
add
xor
pop
in
cmp
jmp
in
outsb
jmp
dec
sub
and
imul
xor
inc
push
mov
push
add
pushf
bound
inc
xchg
push
pushf
sbb
js
call
out
jmp
repz
dec
xor
orb
adc
out
jmp
rsqrtps
stos
in
jae
cmp
das
sub
mov
push
sub
dec
fistpll
std
mov
xchg
fisubs
popf
push
aad
test
hlt
push
sbb
add
mov
dec
pop
cmpsl
es
outsb
cmp
mov
jle
sti
fimuls
cmp
mov
in
ret
add
jb
bnd
test
jle
fwait
sub
xchg
jb
jns
arpl
jne
dec
test
in
inc
or
insb
test
stos
xor
or
xor
testl
mov
cmp
jg
cmp
repnz
lods
mov
stos
xchg
push
add
push
sbb
and
ret
inc
outsl
mov
dec
cli
cmp
dec
clc
adc
bound
or
and
test
or
mov
movsl
mov
aad
icebp
test
dec
adc
pop
lock
jl
xor
xor
sub
mov
in
jecxz
stos
js
xchg
fucomip
cmp
and
out
cld
fs
iret
xor
sub
bound
out
rcrl
sti
mov
lahf
xlat
mul
dec
outsl
nop
into
push
bound
movsb
xlat
mov
int
mov
ljmp
pop
into
adc
cmp
push
or
das
adc
cltd
leave
xchg
pop
lcall
xchg
jmp
leave
inc
mov
sbb
icebp
out
bound
ret
lahf
and
add
pop
mov
ljmp
xchg
or
sub
test
mov
mov
aam
mov
jno
lcall
jno
jecxz
inc
dec
inc
add
inc
cs
les
mov
sbb
out
pop
mov
dec
sbb
pop
lods
and
sahf
lret
mov
movsl
and
xor
mov
hlt
cmp
dec
cmp
daa
pop
fcoml
adc
insl
in
jecxz
or
jmp
mov
jb
xchg
in
aam
sub
sti
imul
mov
mov
das
std
and
fisttpll
and
xor
in
xchg
lret
jg
lret
jno
push
sti
cmp
daa
aad
add
mov
xchg
sbb
sub
inc
movsb
push
lock
sahf
jl
sub
push
pop
fsts
jb,pt
push
push
daa
adc
data16
in
incl
aas
out
es
or
sbb
insb
and
dec
mov
pusha
xor
inc
xchg
push
xor
test
es
pop
fs
pop
pop
inc
insl
xchg
adcl
xchg
or
shrb
js
mov
dec
cmp
jne
sar
cmp
leave
test
out
fwait
enter
loope
enter
les
cmpsl
lods
or
jae
dec
cmp
stos
movsl
xchg
jbe
insb
jno
xchg
xchg
enter
loopne
in
pop
mov
adc
arpl
xor
shrb
mov
stos
lret
jb
or
jne
rolb
sbb
movsb
insb
or
imul
mov
nop
mov
cmc
push
dec
ja
call
in
test
out
inc
aam
ds
fildl
mov
sub
lcall
pop
shl
fsubp
mov
stc
testl
popf
popf
and
add
stos
in
and
or
andl
fs
insb
aam
push
adc
rclb
or
bound
adc
cltd
sbb
dec
and
inc
cmpsl
adc
push
mov
sbb
in
inc
mov
std
pop
mov
jmp
dec
outsl
mov
fwait
inc
push
xor
pop
sub
lock
and
add
test
mov
pop
sub
cltd
dec
xchg
daa
push
or
addr16
mov
imul
inc
fisttps
in
mov
fnsave
mov
jle
pop
pop
pushf
sbb
jb
jmp
cld
and
xor
inc
imulb
fisttpl
dec
cmc
xor
push
dec
mov
loop
nop
movsl
or
aam
bound
adc
sbbl
popf
adc
nop
dec
inc
mov
adc
sti
xchg
cmpsb
mov
dec
cs
mov
test
js
and
shrl
in
mov
add
mov
xchg
mov
rclb
sahf
int
mov
andl
add
push
xor
fs
push
rol
jb
jge
mov
inc
addr16
adc
jns
int
pop
fcomps
mov
icebp
cmpsb
push
jp
xchg
lds
mov
in
jbe
sbb
jmp
push
mov
pop
mov
xchg
lret
outsb
repz
xchg
clc
mov
mov
repz
xor
adc
xchg
cld
scas
insl
adc
testb
shlb
aaa
push
roll
les
push
aad
pop
mov
int
push
mov
cwtl
test
mov
dec
xor
stos
or
fnstenv
fsub
es
or
cmp
movsl
insl
sub
add
sbb
xor
jbe
test
aas
xchg
stos
iret
shrb
mov
dec
or
pop
dec
pop
and
sbb
cmp
lcall
fnsave
xchg
xchg
test
xor
or
and
faddp
xlat
ljmp
cli
stos
inc
ds
loop
mov
fmuls
pop
mov
sbb
push
or
adc
jb
aam
push
dec
jo
sbb
jg
mov
dec
jmp
shll
in
mov
fdivr
lods
pop
or
in
or
les
add
pop
sub
lods
je
mov
adc
shl
shl
dec
or
sbb
xor
popa
in
pushf
mov
xchg
xchg
lret
add
mov
xchg
divl
mov
push
inc
lods
cmp
daa
hlt
xchg
cmp
fs
jp
lock
imul
mov
xor
test
mov
clc
jns
mov
addr16
or
mov
push
gs
fildll
iret
fmuls
or
test
lea
outsl
pop
nop
mov
cli
mov
cmp
push
push
push
imull
mov
lret
adc
push
add
ds
int
mov
fmuls
fucomp
pushf
es
mov
fnstcw
mov
jle
aam
cltd
das
sub
xor
fidivl
mov
repnz
faddl
lock
xchg
sub
loopne
or
and
or
js
test
fdivrl
mov
mov
pusha
inc
or
or
sahf
mov
gs
jno
adc
xchg
sti
hlt
xchg
sarb
inc
pop
sbb
xchg
repz
cmp
into
sbb
cmpsl
xor
fcmovbe
push
imul
mov
test
lods
cmp
cld
in
or
shrb
pop
movsb
arpl
loopne
mov
cltd
dec
lret
add
loope
cmp
pop
jmp
inc
ffree
fsubr
inc
mov
repz
inc
xlat
out
and
sbbb
bound
and
fdivrl
roll
sub
cwtl
cmc
int
add
lods
cli
int
sub
add
orb
std
loopne
cmp
and
xchg
inc
js
ja
xchg
sub
in
xchg
xor
out
dec
add
dec
mov
stos
jl
xor
loope
lods
les
xor
ds
pop
mov
push
mov
or
int
cmp
stos
cmpsl
xor
cmpl
ffree
adc
jnp
and
lahf
adc
jl
lret
into
fcom
pop
sbb
inc
pop
mov
js
inc
loop
xchg
sbb
adc
jge
xchg
fcompl
scas
jne
pop
dec
movsb
iret
dec
pop
xor
test
js
or
jo
push
in
ret
insl
push
pusha
mov
jbe
xchg
and
sti
xchg
cmp
or
adc
int
leave
bnd
mov
cmp
pop
test
stos
stos
cmp
or
lahf
cmc
add
push
cs
stc
in
mov
mov
lods
mov
sbb
test
dec
inc
gs
push
xchg
mov
cmpsl
insl
rolb
mov
rcr
loop
push
or
sub
in
push
push
mov
dec
cmp
sbb
repz
outsb
mov
clc
js
enter
das
inc
mov
lret
int3
insb
lret
add
adc
mov
pop
sub
insl
xchg
aam
add
mov
roll
in
push
pop
jne
add
bound
stc
xor
sbb
pushf
fs
cwtl
arpl
mov
and
jmp
mov
shlb
adc
into
ljmp
stc
inc
xor
and
filds
loope
jb
testl
and
mov
jno
fnsave
ja
inc
adc
mov
in
xchg
cmpl
cmp
inc
sarl
dec
dec
dec
mov
je
cli
mov
xchg
pop
cmp
rol
sbb
pop
lods
lock
xchg
cwtl
divb
icebp
daa
aas
sti
push
cltd
stc
int3
xor
cmpsl
arpl
push
sbb
sarl
cltd
xchg
pop
jae
sbb
shrl
xchg
dec
mov
movsl
dec
insb
push
dec
nop
arpl
dec
shlb
push
inc
pop
lods
nop
cmpsl
push
in
sbb
scas
push
cmp
insl
imul
ret
xchg
cli
in
sub
icebp
stc
mov
sub
add
int
xor
mov
add
inc
inc
xor
mov
push
sbb
xchg
mov
arpl
dec
xchg
mov
and
jae
mov
xchg
cwtl
test
push
cli
int3
vsqrtps
addr16
into
sub
lret
sarb
lret
sarl
add
pop
dec
pop
cmp
les
jae
iret
mov
cltd
dec
jo
mov
pop
inc
pop
stc
cld
fisubs
scas
das
jno
cmp
xor
cwtl
adc
in
outsl
mov
xlat
sub
stos
sbb
or
dec
mov
jmp
push
xchg
dec
push
adc
jecxz
xor
or
or
dec
mov
das
nop
and
cli
mov
fisttpl
imull
sti
xor
mov
mov
aaa
push
add
sti
mov
mov
lds
or
aad
in
rcrl
ljmp
sbb
pusha
mov
pop
sbb
mov
daa
mov
inc
mov
mov
mov
cmp
popf
xor
popf
adc
xor
mov
sbb
jmp
pop
inc
daa
jno
push
mov
in
insb
outsl
xchg
dec
pop
shrb
sbb
repz
and
and
iret
cmp
test
ud2
rcr
in
and
daa
cmp
inc
xor
aad
xor
xor
mov
jmp
pop
mov
ret
insl
icebp
outsl
add
pop
lods
sub
fwait
add
mov
dec
adc
push
out
aaa
xchg
sbb
jecxz
inc
into
pop
lods
pop
jge
jb
data16
fidivl
xchg
lods
sub
fisubl
out
scas
jne
loopne
fildll
mov
xor
popa
add
daa
sub
push
xlat
and
les
ja
addr16
lahf
jge
mov
test
cwtl
jo
dec
cmc
add
insb
outsl
inc
fstpt
sbb
pop
push
mov
int3
adc
popf
aad
pop
cmp
mov
ljmp
test
test
outsb
fsubl
jae
loope
push
or
cwtl
jg
jnp
scas
cmc
sbb
insb
sub
push
mov
mov
cmp
jge
jbe
leave
mov
and
shl
data16
mov
int
adc
cmpsl
stc
and
sub
cmp
ficoms
stos
jl
fcom
jge
insb
mov
insl
mov
mov
jns
jno
nop
jbe
pop
add
pop
inc
pop
push
dec
shlb
pop
xlat
mov
roll
cmp
xor
fwait
lret
push
push
dec
push
and
hlt
inc
inc
stos
pop
jo
jle
fnstcw
mov
adc
adc
mov
xor
into
iret
shrl
jmp
jb
negl
loope
mov
enter
jge
or
lock
cmp
out
push
mov
popf
fbld
cli
nop
pop
xchg
das
in
pop
out
xchg
imul
fdiv
sbb
scas
pop
lock
lret
and
push
out
sbb
dec
sub
in
mov
mov
les
jo
or
sbb
in
sti
hlt
xlat
or
pop
inc
lods
or
xchg
mov
gs
add
sub
sbb
out
jge
sbb
minps
xor
dec
mov
fistpll
loope
out
dec
in
outsb
xor
xor
mov
cmpsl
call
ds
sahf
dec
jge
or
and
bound
cmp
loop
pop
cmp
arpl
and
lcall
push
lock
pop
rorb
lret
inc
mov
sbb
jge
mov
pop
ss
and
ja
lds
ljmp
test
je
int
addr16
inc
sbb
sub
loope
sbb
add
or
ffreep
cmp
lcall
push
popa
and
rol
sbb
cmpsl
push
push
iret
pop
bound
insl
ret
or
jb
stc
les
imul
push
fisttps
mov
mov
xchg
xchg
cltd
dec
outsl
hlt
inc
lea
popa
popf
add
mov
cmpsb
and
fcomps
dec
insb
daa
mov
fucomip
ss
nop
jl
hlt
dec
cs
subl
cmp
adc
add
in
pop
inc
int3
in
add
les
pop
add
das
xor
sub
in
mov
pop
or
jle
call
ret
push
inc
insl
std
stos
jp
lods
test
test
sahf
jno
sub
data16
mov
out
in
dec
les
jmp
jb
fnstsw
fldt
test
fcomip
inc
cs
hlt
je
loopne
std
cmp
sub
push
pop
mov
lret
mov
push
into
repnz
sarb
arpl
test
inc
mov
out
push
and
daa
ljmp
jb
cld
add
push
jb
test
sbb
sub
loopne
push
in
sahf
in
nop
jns
jmp
leave
jbe
push
out
adc
xchg
pop
xor
es
bound
pusha
sahf
pop
shll
out
das
xchg
sub
sbb
mov
push
or
mov
mov
cmp
cmp
jg
mov
push
push
dec
mov
and
scas
inc
pop
in
sbb
loope
adcl
js
aad
adc
shll
adc
stc
mov
xor
cmp
int
shl
cli
imul
or
repz
fnsave
cld
dec
jno
push
stos
pop
test
cmc
adc
mov
pop
mov
in
test
add
iret
and
lret
push
hlt
sbb
sub
mov
push
cmp
adc
mov
test
addr16
jmp
or
imul
aam
inc
in
cmpsb
push
add
out
fmull
fistl
in
test
add
cmpps
cli
adc
mov
aam
inc
and
aam
jne
xchg
lahf
fwait
dec
cmp
aam
cli
in
pop
mov
mov
add
sbb
imul
mov
push
or
xchg
stos
mov
scas
jbe
inc
shll
jo
aaa
repz
lcall
jecxz
xchg
lds
mov
xchg
jo
popf
sub
mov
out
fstpt
cli
cmp
sbb
fabs
xor
shrb
add
or
ficoms
adcb
and
jno
cs
pop
hlt
push
icebp
xchg
aas
pop
fucomp
rorb
dec
pop
cmp
fistpl
pop
and
mov
cmp
loop
mov
or
push
pop
jae
inc
lcall
mov
pop
inc
dec
dec
outsb
in
or
inc
pusha
lods
adc
xor
jl
ret
xor
mov
cmp
and
mov
fidivs
lea
pushf
xchg
push
ljmp
aaa
dec
dec
cmp
adcb
leave
mov
lret
gs
aaa
out
mov
dec
lock
xchg
add
xchg
shll
icebp
aad
sub
lahf
pop
jns
repz
push
lcall
push
inc
adc
fisubl
or
pusha
mov
aaa
push
loopne
scas
dec
push
xor
out
pop
scas
repz
int3
lods
mov
mov
stos
sub
add
stos
mov
xor
shll
jmp
sbb
imul
addl
xchg
push
dec
cmpb
sbb
adc
aam
mov
and
rcll
cmp
lock
cltd
or
inc
fucomi
mov
clc
jo
adc
in
jg
xor
in
movsl
pop
sub
sbb
pop
xor
cmp
pop
das
inc
subl
cld
fmulp
push
scas
lcall
cmc
sub
dec
lret
adcl
pop
pop
inc
lea
lea
sbb
cwtl
pop
mov
and
add
jecxz
ret
mov
out
xchg
sub
popf
lea
pop
cmp
sub
arpl
enter
ss
in
movsb
jp
or
mov
mov
adc
call
mov
push
cmc
dec
pop
lods
test
mov
cmpsb
push
xlat
fidivs
sub
xor
mov
mov
mov
aam
scas
mov
mov
test
sahf
ja
pop
xor
mov
stos
dec
mov
rclb
decb
mov
push
aas
in
shlb
push
jb
jae
clc
cmp
loope
push
cmp
dec
stos
pop
xor
cmc
mov
inc
and
ss
movsl
lock
jecxz
jnp
outsl
xor
xchg
dec
cwtl
cmp
mov
jnp
mov
sbb
or
lock
dec
push
pop
mov
push
aad
insl
add
lods
mov
clc
jp
push
mov
sbb
loop
jae
lock
and
out
cld
fwait
popa
scas
idivl
stos
ss
adc
xor
in
mov
scas
cmp
inc
xchg
addr16
fnsave
add
cmp
mov
mov
xchg
fimuls
and
call
xlat
add
repnz
fbstp
movsb
mov
xchg
cmp
and
and
ja
pusha
pushl
cli
add
in
out
movsl
dec
out
or
in
lahf
push
jo
inc
cwtl
iret
inc
and
pop
mov
cld
push
out
xor
in
or
push
out
xchg
loope
dec
repnz
loop
dec
in
iret
into
or
cmp
les
jle
lea
mov
pop
mov
sar
adc
mov
xor
lahf
fstp
mov
adc
fsubs
into
movb
mov
fcomip
sbb
out
fadd
scas
rclb
lret
xchg
cli
dec
and
rolb
inc
inc
inc
imul
jae
std
cmpsb
inc
int3
cmp
pop
mov
std
cltd
cwtl
xchg
and
lock
test
test
mov
das
cmp
cmp
mov
testl
mov
data16
push
cmpsb
shr
dec
add
das
insl
mov
xor
xchg
xor
jb
fcomip
aas
icebp
dec
jno
jns
cld
and
scas
bound
inc
in
test
sbb
xchg
pop
or
mov
outsb
xor
stos
lahf
dec
xchg
sub
in
xchg
xchg
jnp
hlt
mov
ljmp
cmovg
xor
cmp
imul
test
stc
cmp
ja
ds
or
mov
aaa
push
sbb
jbe
daa
mov
ss
ret
jp
inc
xchg
mov
mov
aam
lahf
cmc
fistl
mov
cli
jbe
stos
cmc
shr
es
push
push
les
stos
imul
adc
sbb
inc
mov
pop
and
cld
xchg
inc
xor
lods
nop
das
inc
ret
sbb
or
push
cmp
incl
inc
jo
scas
dec
out
push
or
mov
and
pop
xor
add
popf
dec
push
and
les
mov
jle
mov
outsl
inc
fmulp
imul
pop
insl
or
repnz
das
or
adc
out
fstpl
sub
shrb
or
xchg
add
jbe
lock
add
push
stos
push
push
adc
mov
std
and
push
stos
ss
mov
dec
test
loope
lods
cld
and
push
cwtl
adc
das
imul
push
add
sahf
pusha
mov
lods
cmpsl
dec
call
sarb
insb
inc
add
sbb
adc
xchg
jp
and
mov
loop
sarb
xchg
je
add
fcomps
sahf
stc
lods
hlt
cmp
popf
lea
mov
pop
mov
xchg
ja
push
insl
cli
std
jle
push
mov
adc
add
mov
cld
cmp
xor
and
gs
mov
fistpll
cmp
push
aaa
imul
push
jmp
aam
cmpsb
cmp
gs
sti
imul
xor
dec
mov
push
stos
mov
sbb
cs
push
movsl
fnstenv
cmpsb
inc
jmp
and
mov
shr
clc
xor
outsb
cmp
fldcw
push
sbb
inc
xor
cltd
test
mov
jb
inc
jecxz
cmpsl
xchg
mov
lock
mov
arpl
cmpsb
in
dec
das
movsb
or
cmpsb
mov
sbb
sub
mov
jnp
mov
jae
scas
sub
aaa
inc
clc
xchg
dec
inc
shll
data16
sbb
imul
push
xor
and
cmp
std
adc
cmpsb
movsb
cmp
int
xchg
outsb
mov
loopw
sub
jb
mov
shll
jle
mov
fs
shlb
push
adc
loope
xchg
in
jecxz
into
popl
outsl
push
std
inc
in
mull
jne
mov
mov
mov
mov
pop
sbb
cmp
push
test
roll
nop
int3
sub
rolb
push
xlat
xor
mov
xor
mov
or
enter
sub
shrb
sbb
dec
rorl
cmp
add
sbb
xchg
and
and
dec
cli
ficoms
cmp
imul
js
mov
mov
das
adcl
adc
mov
cld
shrb
jae
dec
orb
cld
lfs
jnp
xchg
aad
mov
pop
inc
cltd
cmp
mov
int
xchg
sti
lret
rolb
loope
aam
fs
push
inc
std
add
movsb
fists
or
mov
nop
cmp
imul
movsb
push
dec
pusha
cltd
repnz
popa
pop
pop
adcb
mov
fs
sbb
xor
sub
add
mov
enter
mov
and
cld
pop
cs
subb
and
xchg
popa
xchg
add
idivl
imul
jl
shll
xor
idivb
mov
push
stos
test
movsl
lcall
imul
jo,pn
cmp
inc
and
insl
sub
popa
mov
imul
inc
pop
fs
scas
push
aaa
in
and
inc
mov
jnp
cmpsl
imul
and
shll
xchg
xchg
or
xorb
dec
mov
pusha
stos
xchg
shll
movsb
cmp
aaa
pop
inc
fistpll
outsb
out
mov
popf
sub
fnstsw
mov
mov
xchg
cmp
jl
and
xor
cmpb
push
xchg
push
idivl
xchg
add
or
mov
mov
int3
loope
jbe
cwtl
test
ret
and
mov
ds
test
sub
clc
mov
inc
mov
into
mov
test
scas
fnstenv
or
mov
xor
out
subb
dec
lock
cwtl
jo
mov
sahf
in
jo
sub
or
jne
fildll
cmp
aad
jle
cmp
dec
sbbl
ss
jno
addl
cmpsb
sub
mov
pop
jae
or
inc
mov
pop
test
push
aad
loop
repnz
and
arpl
add
rolb
aas
mov
call
popa
int3
jbe
out
aad
mov
stc
mov
add
add
lea
int3
jle
and
jno
push
filds
xchg
in
lock
popa
idivl
jl
pop
nop
addb
or
cmp
jl
fdivrp
stos
fimuls
test
mov
into
mov
pop
rorl
sbb
xor
shl
jne
jmp
push
fsub
outsb
hlt
sbb
out
xorb
insl
dec
ss
inc
sub
leave
dec
into
mov
std
in
jb
mov
icebp
mov
in
rcrl
sahf
outsl
rorl
adc
sbb
into
movsl
mov
mov
add
sbb
inc
push
enter
ret
dec
jae
push
xchg
ljmp
inc
dec
and
aaa
stos
cmp
mov
inc
idivb
iret
dec
mov
inc
or
jp
cmp
rcr
mov
sbb
daa
mov
xorb
or
and
add
jns
or
mov
sti
mov
xor
pushf
dec
enter
fimuls
adc
scas
sub
jbe
clc
psubd
jne
cmp
jae
dec
jle
mov
in
cmc
in
xchg
add
pop
notl
scas
mov
scas
outsb
shlb
cmp
pushf
push
push
cld
paddsw
cwtl
add
lock
cld
sub
xchg
mov
jb
add
cmp
ret
cmp
gs
pop
jo
jo
xchg
add
test
lods
cmp
jb
adc
push
shrb
shll
sub
adc
test
insl
jnp
lret
insb
bound
xchg
mov
cmc
dec
mov
repnz
mov
stos
sub
aaa
or
jge
es
sbb
sahf
ret
jno
pop
add
ss
jg
fisubrl
out
insl
cmp
out
lret
cli
outsb
and
mov
mov
push
rorb
xor
int
dec
iret
jmp
test
dec
daa
jle
lahf
cmp
pop
pop
sbb
adc
dec
out
mov
push
mov
dec
les
pushf
lret
cld
in
xchg
mov
adc
cltd
xor
ljmp
out
rolb
mov
stos
push
notl
out
cmp
sbb
mov
pop
xchg
ret
xchg
sub
out
mov
xchg
pop
mov
das
push
pop
mov
mov
jb
stc
lock
inc
sbb
xor
pop
mov
push
xor
dec
and
mov
outsl
push
push
mov
gs
ss
jo
jecxz
das
clc
push
xchg
movsb
add
cmp
shlb
sbb
cmp
pop
pop
sub
mov
pop
cmp
sub
orps
adc
fucomi
or
mov
mov
out
pushl
dec
cwtl
test
test
dec
pop
and
sub
mov
cmp
minps
leave
jnp
lcall
jne
inc
sbb
push
jle
inc
mov
add
outsb
cs
mov
enter
cs
xchg
sub
push
into
test
lret
dec
insl
add
mov
inc
or
or
mov
ret
rcrb
mov
aaa
loope
dec
ret
fucomip
cwtl
adc
movsl
sbb
hlt
push
sub
mulb
insb
test
and
xor
xor
xchg
sub
push
xchg
cmp
inc
xor
push
xor
in
cmp
mov
add
xchg
dec
aad
iret
push
xchg
mov
adc
inc
lahf
push
insb
mov
cmpsl
mov
mov
rolb
into
lret
and
repnz
fcomps
or
sub
scas
xchg
fiadds
pusha
js
loopne
sbb
lods
out
shrl
pushf
xchg
sbb
popa
lahf
or
test
xchg
cwtl
or
in
xchg
nop
mov
mov
pop
ss
daa
clc
adc
jae
aad
xchg
add
cmc
lock
inc
nop
lret
dec
shll
aaa
push
adc
jae
sbb
mov
push
enter
outsl
and
jmp
mov
push
mov
mov
mov
mov
lods
enter
xchg
add
mov
xchg
stc
pusha
cwtl
mov
dec
fucomi
orl
fnstcw
mov
mov
or
sub
push
mov
push
push
nop
scas
inc
push
xchg
stos
testb
movsb
and
adc
or
ja
je
xchg
add
fcmovne
lahf
movsb
pop
fisubs
loopne
dec
cmp
pushf
mov
sarb
sbb
fsubrs
cmp
js
in
mov
repz
data16
mov
fisubl
push
add
inc
lret
adc
popa
cmp
popf
cmp
xchg
push
test
out
mov
popf
imul
pusha
lahf
push
in
imul
push
iret
test
xchg
imul
xchg
mov
mov
mov
mov
xchg
push
repz
daa
in
push
lcall
push
inc
ss
clc
andl
aad
lea
imul
adc
fimull
mov
stos
fcomip
sbb
jmp
mov
pop
out
xchg
aad
sbb
scas
mov
adc
add
add
jbe
int3
cwtl
lret
ret
cld
mov
je,pn
cmp
pop
in
xchg
xchg
shl
sbb
dec
test
adc
pop
call
cmpsl
mov
pushf
add
popa
pop
cmpsb
cld
test
rolb
test
test
rcrb
dec
or
mov
test
mov
iret
inc
ret
dec
or
sub
cmc
and
iret
pop
sbb
repnz
scas
jg
int
push
mov
mov
inc
mov
mov
sub
mov
fwait
in
adc
jb
mov
cli
sbb
and
lret
daa
add
test
inc
and
in
popa
out
and
or
inc
shlb
adc
cwtl
mov
mov
in
xor
fimull
add
in
inc
fsts
add
int
push
add
icebp
inc
lods
inc
inc
sbb
add
mov
or
mov
iret
jmp
pop
dec
dec
push
mov
cmpsl
test
ret
imul
sbb
test
loopne
pop
movnti
scas
stc
inc
ja
mov
push
inc
inc
xor
lret
inc
add
jb
scas
cmpsb
inc
gs
adc
imul
xchg
dec
push
pop
and
bound
inc
jnp
clc
out
jo
aad
mov
jae
repnz
xchg
shl
test
inc
pop
cli
cmp
je
jp
popf
fstpt
fs
mov
orl
in
and
bound
jns
adc
and
push
test
scas
mov
divps
fs
aad
call
jo
testb
push
jg
lock
loopne
push
adc
xchg
sub
out
cli
xchg
push
mov
push
lret
cltd
and
scas
fmuls
pop
jecxz
bound
sbb
mov
clc
mov
das
ss
xchg
xor
gs
cmp
cld
stos
mov
popa
int
push
dec
daa
or
push
push
idivl
cmp
cmp
bswap
repz
xor
and
out
cmp
xor
jmp
scas
jmp
fnstsw
cmp
insb
imul
and
jmp
xchg
test
jb
mov
jns
in
jo
add
scas
imul
and
sub
es
arpl
xchg
mov
ret
popl
test
xchg
out
mov
fstps
stos
jns
iret
cmp
out
sub
xor
mov
leave
and
mov
dec
xor
psubq
push
mov
push
sbb
orl
cmp
mov
and
xor
push
and
mov
mov
ret
mov
divl
mov
in
or
movsb
push
dec
sbb
xor
adc
in
add
jl
lea
sbb
fstpl
movsb
popa
pop
xor
scas
dec
scas
xor
loopne
sub
adc
icebp
sub
dec
jne
inc
arpl
call
mov
sbb
fdivrs
dec
mov
test
pop
add
adc
add
sbb
pop
and
jb
out
ret
enter
orl
arpl
push
lret
adc
std
push
cmpsb
jmp
adc
mov
inc
xor
sub
xchg
adc
insl
dec
cmp
push
add
xor
xor
in
mov
dec
push
mov
xchg
pop
call
inc
or
inc
decl
dec
fwait
imul
out
cmpsl
mov
daa
dec
cli
push
leave
mov
jg
xchg
or
insb
jnp
push
or
call
mov
ja
pop
push
mov
mov
jge
fndisi(8087
push
push
punpckhbw
sub
xlat
inc
add
dec
xor
aas
sbb
xchg
mov
jbe
mov
fildl
sbb
push
cld
jb
push
int3
stc
xchg
mov
stos
jnp
pop
inc
cwtl
and
dec
mov
out
push
stc
pop
lods
in
pop
subb
sarl
das
pop
adc
cmp
mov
cmpsb
jp
push
mov
add
iret
call
xor
cmp
inc
imul
cwtl
jnp
sub
jp
ljmp
sub
data16
pop
out
mov
in
jmp
fsub
cli
test
xchg
cltd
lods
jmp
sbb
imul
pop
cmc
xlat
pushf
cmc
cltd
add
addr16
mov
or
cmc
xor
cmp
push
dec
daa
and
cmp
lahf
je
mov
out
lea
pop
inc
enter
shrb
decl
mov
sarl
push
push
iret
roll
pop
mov
or
outsl
jbe
add
sbb
sbb
lods
jp
hlt
insb
push
and
dec
dec
inc
dec
cwtl
fistpl
jp
aam
addr16
int
sbb
push
mov
sub
mov
pop
or
inc
flds
sub
cmp
xchg
pop
les
xchg
sti
ror
popa
imul
mov
sub
jge
aaa
clc
sahf
mov
push
sbb
es
cli
pop
stc
ret
dec
in
mov
add
cmp
push
hlt
dec
or
jnp,pn
mov
cmp
insb
push
mov
pop
outsb
lahf
shlb
fdivl
inc
push
push
cmp
dec
mov
dec
cwtl
into
test
frstor
pop
xchg
adc
add
xor
es
repnz
jl
or
jmp
add
movsl
pop
movsb
xor
mov
inc
jo
xchg
xor
adc
sbb
xor
cmp
and
fwait
aaa
testb
cmc
inc
out
inc
sbbl
add
jno
popa
push
push
sbb
inc
das
and
iret
or
jb
popa
fwait
loope
cmp
lahf
aaa
sub
pop
das
mov
mov
icebp
add
iret
in
stos
xchg
inc
jmp
cs
daa
or
add
popf
addr16
ja
scas
mov
shrb
lcall
xor
pushf
lcall
mov
push
subl
push
sbbb
cltd
dec
aam
xchg
imul
lea
sahf
mov
mov
nop
std
imul
dec
xor
push
mov
fldcw
mov
mov
jl
jecxz
mov
addr16
incl
test
xchg
fwait
shll
movl
cltd
aad
hlt
inc
inc
in
sahf
imul
lds
dec
loop
aas
out
inc
push
or
xor
jb
fnstcw
sbb
adc
aam
es
mov
xchg
pop
push
loope
push
fcompl
bound
lea
mov
sahf
ss
jecxz
scas
fcoms
enter
shlb
cmp
mov
fldl
hlt
sti
aas
out
lods
icebp
mov
jne
jnp
xor
inc
loopne
xchg
mov
pop
push
cwtl
xchg
mov
test
test
add
fcoml
out
push
inc
enter
dec
push
xchg
ss
push
arpl
sti
repz
cmp
jno
outsb
fadds
sub
push
push
pop
cli
inc
ret
add
push
mov
rol
sub
aas
loope
push
sbb
adc
loopne
sbb
cs
inc
xor
fs
shrb
add
push
mov
or
push
push
add
jecxz
add
xchg
xchg
in
subl
mov
lock
sbb
pusha
inc
loope
mov
or
xchg
bound
cmp
mov
imul
push
ss
ja
cmc
sbb
out
fidivrl
popf
jp
jno
xchg
les
mov
sub
in
sub
ret
sbb
ljmp
or
xchg
jb
jne
dec
icebp
jmp
lods
stos
imul
ljmp
negl
in
adc
lahf
mov
fdivl
add
sbb
mov
pop
popf
loopne
int
add
jns
add
std
push
or
pop
mov
jno
add
cmp
pop
push
pop
les
ret
xchg
jmp
lods
fdivl
mov
inc
adc
in
add
mov
stos
add
fst
xor
decl
sti
add
sarb
lods
or
dec
aad
sbb
mov
mov
xor
fwait
pop
adc
push
outsb
mov
mov
xor
adc
push
jl
test
mov
pop
cld
xchg
ss
cs
fdivl
fs
out
xor
mov
ret
lds
stos
jg
dec
mov
outsl
or
push
mov
imul
sar
es
sub
xor
jge
lods
test
mov
dec
dec
out
rorl
rcrb
aas
add
xlat
xchg
fistl
cwtl
dec
lock
mov
jg
ret
into
inc
cld
add
push
adc
rcrb
and
popf
add
gs
mov
and
mov
adc
mov
and
mov
pop
xor
incl
xor
rcrb
fidivrl
jbe
jl
ret
inc
dec
add
testl
mov
lea
xlat
sbb
cmp
ds
inc
lret
xchg
sbb
les
push
and
push
xlat
push
add
push
mov
pop
andl
dec
aam
aam
mov
andl
cmpsb
and
push
aas
and
repz
sbb
fidivrl
dec
ljmp
sbb
dec
es
sbb
rcrb
sbb
aaa
loop
hlt
incl
adc
jae
ja
mov
add
popf
cmp
mov
ds
pop
inc
push
push
xchg
ret
mov
jae
dec
jbe
add
jl
push
cmpsl
cmp
lods
in
int
test
call
jge
pop
add
dec
add
imul
testb
call
mov
jp
call
sbb
xchg
bound
shl
mov
cwtl
sarb
cli
fcmove
inc
roll
gs
ja
mov
add
loopne
mov
sub
jecxz
pop
and
inc
js
jnp
sub
arpl
icebp
xor
push
push
out
popf
xchg
dec
dec
mov
sbb
sbb
inc
mov
in
pop
outsl
dec
lds
jmp
out
ss
add
in
imul
mov
mov
ret
jb
aaa
cmp
sub
jb
adc
movsb
pop
add
cld
les
test
repz
pop
cwtl
jmp
cltd
pop
decl
in
movsl
mov
push
xlat
ss
test
add
fcoml
test
fsts
jno
mov
or
gs
notl
rcrb
or
mov
cmp
insb
mov
or
add
rcl
dec
ss
jmp
push
add
pop
jo
insl
ja
cmp
or
inc
cmp
jecxz
clc
mov
fistpl
xchg
jmp
push
inc
std
pop
loope
cld
and
testb
out
scas
lcall
rorb
fmull
push
fdiv
mov
add
loopne
sbb
sub
test
cld
pop
or
test
xor
rcrl
sarl
jg
add
lock
fldcw
inc
dec
mov
data16
lods
mov
push
cmpsb
insl
push
xchg
lret
xchg
sub
mov
xchg
dec
lock
pop
dec
pop
leave
sbb
cli
aaa
mov
movsb
idivb
mov
fucomp
into
popf
adc
ds
cs
or
int
ds
xchg
xor
hlt
push
bound
xchg
cs
aaa
fstpl
adc
les
divb
mov
in
push
out
movsl
dec
das
clc
cmp
or
sub
push
fcmovb
push
inc
lea
or
mov
dec
daa
aam
stc
loope
jnp
shlb
imul
stc
push
sub
repz
jae
lcall
mov
in
and
sub
repnz
push
ret
xchg
inc
dec
int3
inc
jmp
out
ss
mov
jle
fnsave
nop
loope
cmpl
out
ss
fdivs
mov
pop
inc
xchg
xor
enter
stos
jo
test
shr
test
cmp
aam
shrl
and
sbb
jns
imul
iret
test
int
and
push
mull
fdivrl
push
sub
xor
lea
dec
adc
faddl
inc
popf
cmp
cmp
pop
ret
jg
rcrl
arpl
or
sub
or
nop
movsl
les
and
mov
mov
mov
sbb
and
mov
in
mov
pop
mov
shrl
ds
cs
xchg
idiv
fnstcw
jne
sbb
xorl
mov
out
ret
lret
je
dec
lcall
jp
lods
int
ja
rolb
cmp
dec
movsl
push
bound
mov
mov
jb
insl
pop
pusha
and
std
pop
mov
inc
cmpb
xchg
add
test
adcb
jp
pop
xchg
fcomp
sub
int
lret
sbb
shll
leave
dec
or
mov
mov
inc
das
adc
xor
sbb
mov
sub
jmp
push
jmp
push
int
push
out
adc
jmp
aaa
inc
xor
add
inc
imul
lret
data16
repz
inc
dec
jp
mov
movsb
out
call
sti
fcmovnbe
xchg
lods
push
outsb
xchg
shrb
sbb
mov
fwait
movsb
xchg
int
test
outsb
bound
aad
push
push
call
jo
sbb
nop
imul
mov
jmp
outsb
loope
sbb
sbb
xchg
mov
or
push
pop
and
push
cmp
ja
mov
pusha
or
push
cmp
dec
ret
mov
in
mov
shll
jno
lock
jle
clc
subl
xor
add
dec
dec
leave
push
ds
arpl
insl
or
jbe
pop
pop
test
jbe
imul
out
pop
mov
adc
bound
mov
cmp
fnsave
clc
or
inc
add
lods
sub
push
dec
xchg
jecxz
xor
mov
add
xchg
pop
scas
imulb
hlt
mov
fisubs
pushw
test
subl
out
popa
adc
jmp
lods
push
add
inc
ud2
mov
aad
push
push
add
iret
mov
aas
into
add
iret
in
into
jg
lcall
pop
mov
cmpsb
add
fdivs
xlat
fbstp
mov
push
xor
xor
mov
push
mov
mov
sub
add
dec
mov
out
mov
ret
and
push
or
add
push
int3
stos
mov
push
mov
or
and
mov
mov
push
mov
daa
mov
movsl
test
fdivp
jecxz
cmp
push
inc
pusha
mov
jb
push
popf
test
pop
inc
outsl
and
push
xor
cwtl
popf
sahf
ljmp
xchg
pop
js
pushf
pop
mov
dec
push
and
add
dec
cmp
popa
or
dec
popf
aad
orl
mov
fdivp
dec
pop
push
loope
ror
push
push
mov
rclb
in
push
stos
mov
pop
outsl
cli
sbb
or
pop
mov
jge
lds
xlat
xor
add
fimull
das
je
dec
cmp
pop
insb
jmp
adc
jecxz
xor
sbb
outsb
dec
cmp
adcl
mov
dec
outsb
scas
pushf
subb
out
fsubrl
stos
xchg
mov
mov
dec
das
mov
insl
imul
jne
jmp
and
sub
in
je
sar
clc
loop
insl
test
pop
adc
or
or
or
jge
pushf
test
mov
inc
jl
inc
adc
mov
clc
aas
mov
cmpsb
and
call
mov
ljmp
lcall
fstpt
mov
stos
mov
xor
sub
lret
aaa
xorb
dec
sbb
jbe
xchg
enter
stc
xchg
jg
stos
stc
fcomip
add
sbb
mov
scas
jmp
ja
idivl
cmpb
mov
in
mov
jbe
or
and
flds
ss
mov
aad
inc
or
fidivrl
mov
repnz
stos
shr
stos
mov
in
cmp
xor
decb
mov
movsb
ljmp
dec
cli
loope
in
loopne
ret
jp
cltd
and
mov
movsl
or
fisubrl
js
lahf
or
not
jns
push
xchg
mov
hlt
lret
adc
add
xor
jno
movsb
out
test
scas
push
sbb
cwtl
pop
dec
pop
outsl
or
out
loope
aaa
cmp
fcomps
ja
xchg
adc
cwtl
dec
scas
cmc
lret
pop
insb
pusha
sahf
mov
test
adc
clc
int
and
movsb
cmc
and
cli
xchg
adc
rorb
mov
out
push
jl
push
mov
push
add
mov
mov
dec
out
ret
repz
repz
adc
fs
or
hlt
clc
fsubr
cs
mov
repz
aaa
xor
fstpl
stos
in
sahf
pop
jo
mov
xchg
adc
mov
movsb
sbb
ficomps
sub
pop
sti
mov
cmp
xor
sub
scas
sbb
xor
icebp
inc
push
push
mov
ret
push
or
je
mov
or
fwait
push
mov
daa
cltd
mov
mov
cmc
test
rcrb
clc
popa
push
cs
sub
sub
xor
mov
dec
pop
mov
aam
loop
mov
imul
xor
pushf
mov
sbb
in
sub
jl
scas
sbb
pop
xchg
arpl
and
clts
mov
push
mov
notl
daa
fs
rcl
xchg
pop
fsin
add
hlt
push
shl
call
pop
insl
sub
in
testb
cmp
or
filds
arpl
and
mov
xchg
je
mov
pop
insb
cmp
pop
cmp
cli
fstpl
js
leave
mov
push
sbb
jecxz
or
daa
sbb
loop
cmp
cmpsb
mov
outsl
popf
cmpsl
lods
fdivrp
push
xchg
push
roll
dec
push
jle
popa
adc
adc
xor
das
xor
inc
mov
cs
xchg
add
mov
pop
dec
frstor
enter
dec
sub
xchg
lock
test
call
cmp
repz
test
pop
push
std
or
pop
cmp
cmp
add
dec
mov
outsl
outsb
in
adc
and
xchg
addr16
and
push
inc
or
jge
test
mov
out
cmc
lds
ljmp
insb
jne
push
adc
scas
xchg
rol
fwait
push
push
fcompl
lds
stc
jg
fdivl
iret
scas
dec
sub
adc
mov
pop
and
rclb
nop
push
movsl
daa
lods
movb
mov
sti
and
rorl
mov
jmp
addl
and
mov
out
shlb
sbb
into
dec
out
jo
add
xchg
pop
cld
inc
dec
or
psrad
int
sbb
add
mov
stc
jns
test
xchg
jp
jmp
adc
add
or
xchg
and
dec
xchg
push
arpl
push
mov
mov
push
iret
xchg
and
cltd
xor
in
lret
mov
cmp
xchg
jg
scas
jb
push
testl
in
es
xor
nop
and
and
push
push
mov
xlat
or
jnp
jecxz
test
shll
jno
push
pushf
sarb
mov
insb
and
mov
xchg
dec
mov
stos
addb
add
cli
fnstsw
and
inc
xor
or
xchg
mov
iret
stos
mov
mov
fwait
push
nop
popf
mov
std
mov
loop
sub
popf
xchg
push
out
shrb
mov
out
das
ja
ret
jo
leave
sbb
inc
icebp
jne
rcll
leave
test
mov
mov
iret
call
mov
sub
loop
xchg
mov
or
filds
adc
mov
mov
fistpll
out
leave
pop
fdivr
pop
call
dec
xor
cmc
fildl
mov
inc
sub
in
gs
cmc
rclb
and
and
movl
je
pusha
mov
xchg
xchg
movsb
pushf
aad
loopne
xor
dec
lahf
cmp
mov
insl
xor
lock
and
inc
sbb
cmp
cltd
pusha
ss
loope
and
icebp
push
push
push
xchg
sub
add
sbb
cwtl
daa
aas
aas
mov
fdivrs
add
in
mov
inc
mov
lret
mov
xchg
popa
cwtl
stc
mov
mov
repz
add
in
pop
cwtl
scas
stos
xchg
imulb
ret
jo
stos
sub
cmpsb
cli
sub
dec
es
or
sub
inc
sub
sbb
push
push
pop
push
fidivrs
lahf
fs
adc
mov
scas
pushf
int
sbb
dec
dec
loop
jmp
int3
pop
xlat
sbb
movsl
adc
std
pop
push
js
sahf
mov
mov
and
gs
int3
pop
adcb
ret
pop
cmp
dec
nop
cs
adc
mov
fs
inc
je
push
andl
and
scas
mov
out
and
dec
lcall
sub
adc
jmp
jno
aad
push
test
adcb
lcall
out
mov
shlb
fsubp
pushf
out
dec
cmp
mov
sahf
push
and
mov
lahf
imul
jl
outsl
sahf
xor
sub
jecxz
fimull
jmp
push
ss
shr
and
jecxz
push
pop
jb
xchg
filds
xchg
mov
out
stc
out
or
mov
aaa
mov
push
mov
mov
xchg
test
push
adc
rorl
add
nop
int
push
pop
xchg
or
icebp
sbb
pop
ret
hlt
mov
or
push
loopne
mov
or
notb
push
dec
bound
mul
lods
inc
adc
int3
and
jmp
jmp
mov
jb
aam
outsb
test
jno
movsl
jbe
push
popa
inc
repz
fs
into
icebp
fistps
insl
out
cltd
adc
xor
subl
add
jge,pt
jbe
pop
mov
mov
sbb
adc
pop
and
xor
mov
sbb
fs
jp
stos
cmpsb
mov
xor
fcmovu
push
mov
lret
daa
inc
ja
sbb
push
repnz
scas
xor
and
xor
mov
mov
addr16
fisubrl
or
xor
fmuls
ljmp
mull
out
gs
movsb
jl
out
in
push
pop
call
ret
and
sbb
mov
fdivp
ljmp
cmpsb
movsl
or
adc
cs
outsl
nop
push
fs
inc
nop
sub
je
popf
je
clc
outsl
mov
aaa
das
ret
pop
and
stc
das
dec
lret
js
pop
insl
or
movsl
mov
lea
or
sahf
mov
jb
adc
cmp
imul
cmpsb
mov
lods
mov
mov
mov
pop
mov
add
repnz
nop
ret
jle
out
stos
movsb
scas
call
mov
sti
sub
sub
mov
mov
dec
lahf
xchg
jg
or
aam
and
scas
cmc
scas
iret
pop
cmp
pop
adc
jg
or
adc
sbb
mov
bound
ret
sahf
add
and
xor
and
into
xor
sti
data16
leave
decb
std
les
daa
ljmp
xchg
add
fisttpl
and
jg
adc
scas
out
insl
out
popa
fdivs
mov
ret
mov
mov
inc
push
loopne
inc
and
loop
dec
test
or
inc
out
mov
add
dec
int
clc
jbe
rorl
or
loope
mov
stos
mov
jecxz
cmpsl
iret
out
cmpsl
shll
sub
fmul
jnp
xchg
dec
sub
cltd
or
pop
test
pop
sub
pop
stc
pop
cmp
pusha
insb
cmp
dec
repnz
ds
ljmp
cmpsb
arpl
pop
std
inc
or
adcl
xchg
push
cmp
pop
ret
sbb
mov
bound
stc
mov
sub
pusha
pop
stos
cmp
pop
test
lods
sbb
sbb
hlt
aaa
sub
adc
cmp
pop
pop
int3
cli
je
xchg
pop
push
mov
mov
jl
and
stos
jae
pop
mov
xor
jnp
sahf
sbb
mov
fcompl
sbb
test
imul
loope
jo
mov
fistl
cltd
insl
inc
jge
fs
sbb
sbb
cmpl
notb
push
or
dec
lret
daa
or
cmp
sub
fs
out
aad
in
inc
push
adc
add
in
mov
hlt
lods
lahf
cmp
sbb
loop
mov
xchg
pusha
dec
push
add
push
rcrb
xor
mov
push
stos
and
push
ds
fsubs
faddp
push
add
leave
pop
mov
pop
mov
and
mov
gs
sbb
push
addr16
mov
xor
add
je
jnp
fdivrl
jns
dec
call
stos
sbb
mov
fbstp
xor
imul
mov
outsl
repz
outsb
rolb
fwait
insb
imul
aam
mov
fsubrl
push
inc
fwait
add
in
pusha
cs
fwait
ret
pop
je
aas
xor
add
jno
mov
mov
cmp
daa
push
mov
mov
or
jae
inc
mov
aad
and
jb
lcall
mov
filds
int3
jmp
imul
ja
sub
out
test
hlt
ss
mov
shl
ss
test
or
sbb
pop
loop
add
cs
test
mov
enter
icebp
jnp
mov
roll
adcb
fsubr
cmpsb
pop
outsb
pusha
test
jo
xchg
mov
dec
andl
dec
xchg
out
sbb
fsub
mov
ljmp
inc
stos
dec
pop
aas
sub
xchg
dec
enter
popa
cmp
mov
xchg
in
dec
hlt
cs
je
ret
xor
inc
sarb
mov
inc
adc
lds
xchg
jae
and
jns
add
jo
stos
mov
and
mov
cmc
aaa
push
sbb
adc
loopne
out
loope
mov
jg
sarb
inc
lods
dec
jno
sub
sub
cmc
or
ljmp
outsl
or
cmp
jne
test
outsl
push
and
mov
hlt
out
mov
and
push
add
scas
sbb
test
das
cs
push
mov
cmp
pop
pop
push
inc
add
and
pop
dec
push
out
jmp
or
outsb
jae
fsubrs
mov
mov
add
call
std
roll
mov
xchg
sub
adc
stos
cmpsl
ficompl
inc
push
xchg
iret
sub
pop
dec
and
xchg
pop
inc
in
rcll
stc
xchg
in
sbb
pushf
inc
aas
int3
clc
cmp
push
xchg
lods
std
addb
addr16
lahf
test
dec
pop
lea
add
mov
orb
adc
and
sub
adc
stos
addr16
out
lds
pushf
mov
mov
leave
mul
inc
rcrl
arpl
popf
cmc
shrb
aaa
add
jbe
fmuls
xor
adc
shll
sahf
push
mov
movsl
push
xor
sub
jle
mov
notl
or
dec
jae
and
loope
enter
sub
cmpsb
push
repnz
adc
mov
fisubs
lahf
pop
sbb
outsb
dec
test
stos
sahf
icebp
aas
add
mov
faddl
arpl
pop
push
gs
pop
ja
xor
push
pop
jle
pushf
add
je
sti
insl
xchg
pop
xor
inc
bound
and
xor
fs
add
pop
xlat
sub
mov
sbb
push
fs
jns
and
hlt
int
sahf
clc
xchg
cmpl
xchg
cmpb
enter
sub
push
and
out
addr16
adc
xchg
in
push
sbb
lret
sbb
push
sahf
lcall
std
push
in
cmpsl
xor
jp
add
dec
mov
shll
jg
lods
lahf
fidivrl
mov
pop
push
dec
leave
cli
adc
pushf
cld
rcll
ret
inc
mov
stos
mov
pop
pop
int
insl
pusha
bound
dec
mov
push
mov
xchg
sbb
mov
adc
lock
leave
mov
aas
xor
mov
push
xor
cwtl
or
imul
in
rorb
repnz
das
mov
rcl
adc
out
lea
pop
mov
inc
and
mov
sbb
cmc
and
nop
jmp
inc
push
dec
add
mov
in
stc
test
stos
mov
cmpsb
mov
inc
add
sub
stos
lret
lds
push
outsb
mov
pop
into
lods
icebp
dec
inc
negl
in
adc
mov
pop
insb
jb
dec
jne
xlat
out
hlt
jbe
xchg
pop
sbb
ss
outsl
fistpll
pop
xchg
xchg
dec
xchg
leave
and
cld
dec
fsubrl
divl
out
in
repnz
enter
lock
pop
ret
addl
ja
out
scas
mov
and
mov
loope
adcl
imul
fcoml
ds
daa
mov
push
ficoms
add
movsb
out
jno
adc
jnp
mov
stos
or
jno
and
sbb
or
xchg
cmpl
push
pop
sbb
popf
push
jecxz
fbstp
push
push
xor
punpckldq
rclb
and
ljmp
mov
adc
xchg
aaa
scas
dec
fildl
pop
test
cmp
movsl
repz
xchg
push
cmpl
mov
xor
push
test
or
pop
imull
push
adc
fnstenv
dec
and
int
adc
pop
cmpsl
dec
push
cmp
bswap
sbb
jbe
enter
lock
push
pop
add
in
jno
cli
invd
mov
adc
jbe
adc
inc
sub
sbb
or
jb
loope
pop
cmp
lea
or
sbb
mov
outsb
idiv
add
insl
push
sahf
out
lock
lock
lock
sbb
pop
daa
scas
or
test
cmp
out
lods
loop
ljmp
pop
dec
xor
cltd
cmpb
and
inc
push
mov
jno
sahf
loop
fwait
sub
sub
fisubrl
sbb
daa
inc
mov
xor
push
test
dec
shll
ret
lcall
rcrl
mov
adc
xchg
rcll
aad
pop
xor
xchg
mov
les
push
inc
insl
in
sbb
mov
or
sbb
lahf
mov
dec
dec
cmpb
cmp
and
or
jbe
cmpsb
and
imul
mov
outsb
and
pop
push
iret
push
rclb
jle
icebp
test
stos
nop
ret
inc
aam
das
jp
dec
cmpsb
inc
rcrb
sbb
xor
bound
movsl
imul
mov
pop
mov
push
mov
inc
jne
jmp
stos
aaa
pop
stc
jae
mov
pop
movsl
pop
adc
je
out
scas
or
jl
ss
imul
cli
sub
loope
inc
add
nop
mov
ja
call
leave
inc
xor
test
movsb
add
add
pop
lret
aas
adc
sub
xor
fiadds
mov
pop
and
cmp
lcall
out
fwait
mov
int
dec
cmp
mov
cs
cmp
mov
sub
pop
aas
sub
dec
and
xchg
mov
lds
mov
inc
or
in
and
cld
lcall
mov
imul
nop
xchg
lods
add
data16
addr16
mov
cmp
mov
push
sahf
jb
push
mov
popf
cmpsl
jle
gs
std
xchg
decl
xor
adcb
dec
push
stos
xchg
lret
pop
jnp
cs
test
clc
faddl
js
mov
jge
inc
dec
sub
sbb
mov
cmp
mov
adc
imul
mov
mov
clc
cs
xor
xchg
push
jmp
or
mov
adc
or
dec
push
mov
pop
in
push
push
fistps
inc
leave
lret
into
jg
lahf
loope
mov
mov
out
push
leave
outsb
rolb
mov
test
push
jle
paddusb
mov
mov
adc
pop
in
mov
adc
adc
repnz
scas
je
and
sbb
ja
outsb
push
and
xlat
and
mov
push
inc
sub
icebp
sub
sub
aam
add
or
sbb
imul
jecxz
jp
repz
jecxz
or
mov
pop
sub
jbe
jnp
push
sarl
mov
int3
sbb
jg
jns
or
out
mov
mov
nop
push
adc
push
adc
test
rorb
or
add
mov
jecxz
pusha
das
jnp
hlt
addr16
jl
push
leave
or
aam
inc
icebp
jns
les
xor
lret
inc
push
aas
popa
aam
test
xor
mov
jl
mov
rclb
jmp
cmp
into
test
loope
into
or
push
xchg
arpl
lea
movsl
popa
loop
std
pop
gs
jae
push
and
jle
xchg
jl
dec
cli
xchg
mov
call
jo
mov
fwait
popf
data16
mov
push
xchg
mov
inc
push
cmc
movsb
adc
ljmp
and
in
cmp
adc
enter
cmp
cwtl
test
xchg
mov
dec
mov
adc
or
cmpsl
dec
std
mov
addr16
mov
add
mov
fadds
sahf
cld
mov
mov
fstl
mov
enter
xchg
jecxz
stos
daa
dec
js
or
sbb
fisubl
sbb
push
es
test
lods
sub
dec
leave
loop
and
pop
jae
dec
jmp
loop
push
jmp
insb
xchg
into
aas
inc
mov
jnp
out
fmuls
std
fidivs
mov
arpl
adc
and
iret
sti
int
icebp
scas
xchg
movsb
clc
jno
imul
jge
dec
xor
lods
xchg
xchg
and
out
movsl
dec
mov
xchg
js
ret
fistl
push
ds
test
loopne
les
add
sbb
out
pop
lods
jp
add
std
rol
fs
cmp
sbb
jge
dec
ja
mov
sbb
aam
cmpsb
push
loope
ficoml
or
cmp
mov
mov
adc
scas
adc
data16
cld
fisttpll
insb
push
adc
sbb
pop
rorb
jle
jne
lret
jnp
push
pop
cmc
ret
pop
gs
mov
aas
int
sbb
push
add
pop
cli
xor
xlat
pop
jno
or
sub
xor
push
or
in
sub
mov
jmp
mov
aas
shrl
inc
out
xor
insl
aad
mov
mov
and
dec
mov
xor
dec
jmp
xchg
iret
andl
cmp
insb
sti
xchg
lods
ljmp
pop
ljmp
jmp
sti
jmp
insl
popf
stos
push
rclb
mov
add
xchg
mov
xchg
xor
add
mov
sbb
mov
mov
mov
fdivp
daa
push
sbb
mov
mov
dec
mov
stc
psrad
scas
out
imul
cmp
xchg
jge
lods
jo
push
pop
sbb
push
push
xchg
enter
xor
mov
loop
adc
lcall
cs
cmp
mov
mov
in
insb
mov
in
int3
mov
fsubrs
pop
add
adc
ljmp
cltd
sbb
xchg
fcoml
data16
fcomp
mov
push
mov
popf
stos
subb
sarb
out
clc
push
dec
add
jg
add
sub
subl
push
push
out
rcrl
cli
lods
mov
or
mov
sub
jnp
iret
sbb
pop
pop
or
in
icebp
pop
xchg
daa
in
xchg
lds
push
mov
sub
icebp
mov
test
sbb
mov
dec
cld
jg
sub
cmp
jg
fwait
andl
and
dec
xlat
flds
aaa
loopne
add
mov
dec
cmc
push
fsts
mov
subl
icebp
push
sbb
xlat
in
std
xlat
iret
mov
xchg
pop
insb
cs
test
sub
stc
push
pop
push
lahf
mov
add
loope
into
paddb
test
out
xor
outsb
rclb
lret
or
xor
sub
repnz
inc
das
cmp
insl
cmp
addb
stc
sub
imul
fisubl
lret
addr16
cmc
jecxz
sbb
jecxz
popf
adc
cmp
xor
add
sub
dec
or
loopne
shlb
cmp
xlat
scas
rorb
and
test
cli
int
cbtw
cmpsb
adc
fwait
test
dec
push
shl
rol
xor
mov
je
imul
xor
jl
mov
sbb
push
jg
lea
jp
fstps
mov
mov
push
lods
xchg
cmpsl
mov
adc
xchg
pop
mov
inc
faddl
nop
xor
decl
xchg
add
cmp
cmp
mov
add
push
push
stc
sbbl
inc
pop
xor
push
jge
test
add
mov
push
insl
imul
idivl
pop
mov
out
and
loopne
sub
mov
hlt
mov
mov
add
mov
movsl
dec
xor
pushf
fsubs
sub
adc
in
subl
cmp
add
adc
or
cld
jmp
pop
xlat
adc
sahf
mov
cwtl
mov
out
sub
fucomi
adc
loop
rclb
inc
pop
dec
and
test
loop
ja
or
push
inc
mov
mov
pop
out
ja
cmp
sbb
xor
push
or
or
and
pushf
shll
lcall
adc
jo
or
enter
adc
iret
cmp
mov
mov
jne
in
movsl
jecxz
mov
and
and
leave
mov
add
inc
xchg
adc
insl
arpl
mov
insb
or
ds
mov
js
pop
mov
mov
inc
ja
lock
mov
add
shll
or
xor
mov
dec
push
lds
lret
sbb
insl
stos
das
je
sub
js
stc
jl
jae
test
jl
jno
aaa
fsub
mov
jne
out
mov
loope
mulb
inc
jb
scas
mov
fnstcw
outsl
test
jno
xchg
int
jp
outsb
cmp
test
out
arpl
mov
pop
ret
mov
or
sbb
inc
test
inc
aad
fstl
pop
mov
cmc
jne
in
mov
fwait
insb
movsb
inc
cld
or
ret
mov
or
notl
adc
and
insl
lahf
add
cmp
sti
fwait
ret
push
insb
pop
pop
xchg
sub
mov
jae
add
sti
xchg
or
push
flds
adc
aad
mov
and
xlat
pop
out
add
movsl
nop
in
bndstx
repz
lock
cmp
test
jmp
clc
push
pop
sub
sbb
clc
adc
cmp
popa
cmp
fiaddl
ror
out
popf
int
mov
iret
lcall
sbb
or
call
pop
stos
mov
pmuludq
shrl
cs
dec
add
push
gs
push
or
int3
sub
inc
orl
sbb
mov
aad
mov
loop
std
sub
push
mov
push
bound
xchg
sbb
cmp
ljmp
imul
sar
push
ss
push
dec
mov
xchg
add
sub
jle
ficomps
mov
jp
rolb
daa
aad
hlt
int
cmp
lea
or
leave
call
inc
xor
push
jle
or
jns
cmp
mov
in
push
scas
xchg
adc
or
xchg
mov
clc
arpl
loop
and
add
sub
fdivs
cmpsl
xchg
mov
fimull
inc
incl
mov
ret
or
icebp
add
call
into
pop
mov
cmp
scas
int3
sub
aam
scas
adc
mov
stos
push
je
mov
xor
aam
inc
dec
xchg
aaa
mov
int
or
mov
popa
popa
jp
sbb
cmpsl
fdivrl
push
ds
or
imull
adc
cmp
je
jns
outsb
sbb
cs
push
dec
out
push
sbb
inc
add
jne
outsl
test
mov
ret
repz
ret
add
int3
sahf
and
ret
mov
pop
mov
adc
scas
cltd
dec
testb
lret
leave
mov
mov
xor
cld
pop
and
test
push
aad
mov
cltd
popf
add
fsub
dec
scas
mov
bound
aas
and
cwtl
dec
in
mov
jo
xor
sahf
leave
mov
andb
out
jge
popf
in
shrl
pop
push
lea
push
sar
cmp
inc
cltd
cmp
pop
add
push
loope
dec
shll
or
ja
iret
or
movsl
mov
xor
test
movsl
js
in
push
inc
fs
pop
cmp
dec
jmp
inc
xchg
dec
add
xchg
leave
outsb
pop
aad
jnp
aad
pop
dec
jg
mov
mov
pop
xchg
aad
cmpsb
in
cmp
inc
add
stc
sarl
daa
adc
jbe
popf
inc
push
cmp
sub
mov
lock
mov
mov
icebp
mov
insl
pushf
push
jne
xlat
add
ja
xor
data16
lcall
rolb
jmp
pusha
push
addb
push
mov
add
sbb
xchg
je
push
mov
ficompl
aaa
repnz
lea
and
lds
inc
pop
lods
cltd
inc
and
sbb
inc
dec
jg
hlt
sub
push
sbb
sbb
dec
loopne
sub
fwait
es
adc
push
push
pop
test
pusha
outsl
mov
in
addr16
jle
pop
xchg
mov
out
push
daa
adc
nop
add
lahf
mov
fs
mov
cmp
mov
dec
xchg
adc
mov
lret
addb
outsb
cs
xor
pop
pop
cmc
loop
sub
xchg
jl
inc
daa
jp
sbb
mov
sbb
out
mov
popf
cmpsl
icebp
pop
es
shrb
jno
shl
inc
test
sti
cmp
ret
ljmp
mov
rcl
cmp
pop
movsl
push
jmp
gs
and
push
jmp
mov
mov
lret
mov
fsub
mov
xchg
pusha
add
arpl
push
in
cmpsb
cmpl
lret
sbb
sub
sbb
scas
jbe
dec
mov
inc
ja
pop
das
in
adc
add
out
idiv
loope
jno
inc
sub
dec
push
mov
mov
sub
ss
mov
jne
add
addb
scas
shll
stos
xor
and
fs
shrl
pop
ret
jp
cmp
mov
jb
jb
sbb
outsb
add
sub
nop
daa
add
mov
adc
int
pop
inc
dec
fdivrs
push
repnz
out
xchg
or
sub
icebp
cs
adc
xchg
rorl
add
push
push
mov
enter
adc
popf
ss
lahf
stos
repnz
inc
andl
sub
pusha
jbe
mov
push
sti
push
jl
add
shld
lock
shll
dec
jle
orb
stc
xlat
jp
sub
loop
and
shrl
push
xchg
cwtl
or
shlb
mov
cld
addr16
es
stos
rol
dec
ret
jecxz
mov
stc
sbb
mov
xchg
jecxz
mov
sub
roll
xchg
inc
shlb
inc
and
stc
subb
pop
leave
das
pop
mov
xchg
or
sub
mov
bound
xor
push
sub
xor
mov
push
outsb
sbb
or
lcall
pop
iret
pop
arpl
movsb
loope
cmp
mov
add
sub
pop
sub
pop
pop
xchg
xor
pop
push
hlt
movsb
cmc
mov
push
scas
mov
jle
jns
push
fiadds
cmp
xchg
mov
int
data16
outsl
jmp
dec
sub
mov
xor
and
push
insb
je
and
push
pop
dec
jo
jg
mov
nop
lahf
stos
add
jne
push
pop
out
jnp
shll
out
mov
inc
jecxz
movsl
mov
sbb
xchg
and
lods
xchg
add
fadds
push
and
sbb
jne
setne
ret
hlt
mov
xchg
stos
repnz
insl
test
imull
add
gs
fadds
stos
int3
push
adc
mov
fistps
xor
fmull
pusha
mov
mov
hlt
es
lret
xchg
into
mov
or
push
jo
xor
jae
stos
mov
xchg
shll
inc
mov
dec
jg
push
push
pop
sbb
sbb
dec
add
jge
test
pop
daa
pop
or
push
jg
sub
icebp
pop
mov
add
or
adc
pop
insb
lods
out
arpl
xor
repnz
adc
sub
test
mov
dec
adc
adc
fwait
imul
xchg
hlt
or
scas
xlat
sub
pop
mov
mov
aaa
rcll
jl
mov
fs
ljmp
rcl
push
jne
pop
outsl
push
mov
push
test
add
dec
insb
xor
out
test
fsub
dec
or
test
add
pop
xchg
popf
cmp
leave
clc
pop
push
int3
xchg
hlt
lret
mov
xor
cmp
pop
sbb
push
loope
and
dec
fcomps
js
iret
and
pop
jg
imul
addr16
jne
subb
in
mov
std
adc
idivl
mov
and
sti
push
mov
shr
popa
dec
mov
fwait
jbe
inc
jae
jmp
js
pop
fdivs
cwtl
clc
xor
mov
jle
adc
cld
std
sahf
leave
mov
mov
int
sahf
add
in
adc
dec
xchg
insb
pop
sbb
testb
in
popf
cmp
stc
inc
jns
xchg
adc
pop
js
pop
outsl
shrb
popa
mov
mov
test
fistpll
scas
je
sbb
lods
dec
mov
call
mov
add
dec
les
fistps
xchg
jl
lahf
xchg
mov
xchg
rcrb
insb
and
arpl
jns
xchg
test
dec
add
sbb
repz
insl
lds
ss
sbb
sbb
pop
fdivrp
pop
push
movsb
inc
mov
lods
cmp
popa
call
outsl
cmp
aad
ljmp
jg
out
aaa
dec
enter
repz
scas
adc
cmp
adc
insl
xor
mov
cmpsl
jne
std
outsl
js
jne
fbld
mov
sub
roll
fists
lret
into
mov
test
cmpsl
cmpsb
xchg
out
and
incl
iret
bound
sbb
sbb
sub
xchg
leave
icebp
jle
mov
sbb
or
lds
inc
mov
inc
add
xchg
stos
mov
push
outsb
xorb
clc
lahf
jle
dec
repz
and
pop
mov
dec
or
sbb
cmc
bound
xor
clc
data16
sbb
lcall
adc
push
cmp
sbb
xor
ret
nop
ja
mov
fdivp
pop
cmp
adc
dec
ss
dec
jl
cld
dec
lret
add
call
push
add
loope
push
sub
add
jns
adc
add
or
sub
xor
sub
cmc
or
xchg
and
adc
fmuls
int3
into
out
ljmp
push
cmpsl
imulb
aaa
loope
addr16
rorl
cmp
daa
call
adc
in
xor
xchg
mov
and
mov
ja
into
inc
inc
mov
cmp
imul
jg
cli
rcll
jnp
mov
sbb
mov
js
jmp
jecxz
cmpsb
mov
pop
jecxz
addr16
or
xchg
cmp
pop
insb
or
lahf
dec
orb
es
aad
sub
lret
mov
fwait
lcall
xchg
jae
xchg
lcall
pop
cmpsl
scas
mov
mov
adc
push
popa
fwait
push
mov
clc
pop
out
ret
in
stc
int3
cmp
mov
lock
mov
ja
dec
mov
dec
aas
mov
sbb
jle
scas
pushf
loopne
mov
fcompl
jns
push
mov
or
setbe
arpl
add
cs
pop
xor
imul
mov
sti
xchg
gs
pop
mov
or
repz
insb
shlb
in
adc
outsb
sub
mov
fwait
adc
fs
sbb
inc
lahf
cwtl
adc
adc
aam
int3
lahf
outsl
push
ss
mov
mov
outsb
lret
jmp
add
mov
and
sub
frstor
lcall
and
cwtl
cmp
pop
sub
and
aad
sti
sarl
mov
int3
xchg
mov
andb
or
mov
std
repnz
push
loopne
mov
out
mov
repz
xor
sub
decl
add
es
mov
std
in
aas
lods
mov
pop
ficoms
es
outsl
movsl
scas
cmp
mov
fwait
mov
xchg
mov
stos
mull
and
imul
jmp
mov
mulb
jge
mov
shrl
nop
insl
mov
inc
insb
push
pop
push
lcall
cmp
insb
sub
dec
fcoml
pop
insb
xor
cmc
into
inc
xchg
int
adc
dec
inc
xchg
shrl
inc
stos
adc
std
icebp
sbb
popf
cld
out
bnd
push
dec
mov
popf
cld
inc
aas
add
loop
or
adc
mov
sahf
in
inc
test
andb
inc
outsl
aas
or
inc
repnz
sti
inc
out
and
push
xchg
into
xchg
lahf
and
mov
mov
rorl
bound
scas
shl
cmpsb
pop
xor
xor
sub
sub
push
jne
mov
inc
pop
xorb
pop
bound
add
repz
aam
ss
pushf
pop
add
je
add
loop
mov
push
xor
in
gs
pop
imul
pushf
shr
or
mov
push
jl
fs
stos
mov
stc
scas
nop
sahf
popa
or
and
addr16
add
das
icebp
cli
jmp
cmp
test
add
inc
xchg
jg
push
sbb
mov
mov
movsl
mov
insb
xchg
in
sub
mov
movsb
xchg
fldcw
lret
ror
test
fsub
out
popf
ljmp
stos
pop
pop
int3
lods
in
js
push
mov
push
and
mov
push
jmp
es
pop
loop
cwtl
decb
push
cmp
fs
add
int3
fs
add
leave
sub
sub
push
and
inc
mov
movsb
mov
movsl
lret
jmp
mov
inc
out
mov
scas
pop
xlat
sti
int
sbb
aas
or
mov
inc
rol
in
leave
inc
xor
imull
imul
repz
out
sbb
push
daa
push
push
scas
cmp
xchg
pop
stos
xchg
jo
jmp
inc
or
hlt
loopne
pop
xor
lods
nop
and
sub
inc
adc
clc
mov
rcl
and
dec
stc
cmp
push
dec
add
and
aam
inc
fwait
imul
sbb
mov
lods
loopne
pusha
scas
in
add
rcr
faddl
push
fwait
movsb
jae
daa
pop
fs
xor
orl
mov
jmp
das
or
push
dec
inc
imul
fs
outsl
mov
shr
push
leave
es
or
sarb
pop
cmpsb
mov
mov
hlt
xor
shll
loopne
rcrl
push
cltd
iret
push
hlt
inc
bswap
mov
jnp
cld
sub
popa
xchg
push
pop
call
sbb
ljmp
jne
inc
adc
movsb
jnp
stos
in
mov
xchg
xlat
pop
sbb
jp
mov
cmp
xor
adc
ss
mov
push
adc
push
pop
nop
xchg
cmp
push
and
lret
das
or
nop
push
cwtl
and
arpl
cmp
sub
fldl
ss
xchg
cmpsl
jecxz
andb
mov
test
rclb
insl
in
outsb
sti
gs
sbb
repnz
xorl
mov
xor
mov
out
jl
out
loope
cli
cmp
jmp
adc
dec
jl
adc
enter
shlb
movsl
loopne
inc
inc
and
inc
or
jno
enter
stos
sub
das
and
in
bnd
or
out
test
inc
in
pop
sahf
fstp
cltd
icebp
jbe
sbb
stc
pop
stos
data16
cmpsl
sahf
ret
mov
mov
cmp
add
repnz
sbb
sub
test
shll
std
test
daa
add
jmp
int3
push
jge
adc
ret
push
lret
insb
lcall
sahf
sub
and
or
xor
jnp
mov
test
lods
mov
sbb
xor
cltd
hlt
popa
loopne
add
push
test
enter
or
push
stos
lea
rep
lock
clc
jmp
in
lret
ret
cmp
or
dec
cmpsb
push
sub
lds
push
sbb
mov
adc
sbb
mov
enter
scas
sbb
movsl
dec
nop
dec
adc
jp
cmc
roll
sbb
adc
popa
inc
cmp
ret
sbb
scas
arpl
cmp
sub
jnp
aaa
aaa
cmp
ds
or
jecxz
mov
lods
sbb
imul
mov
loope
jne
cwtl
inc
sub
mov
cltd
jne
shll
aas
pop
xor
sbb
inc
mov
dec
sub
out
push
and
mov
sbb
aam
xor
loop
sti
push
jb
ret
sub
xchg
sub
mov
fsts
adc
cmpsl
cmp
xchg
scas
in
and
les
fucom
and
sbb
movsl
je
loop
adc
out
aad
stos
cmpsl
mov
out
dec
test
aas
outsb
sub
adc
and
and
xchg
pop
mov
push
jp
sbb
push
decl
adc
ljmp
or
push
leave
xor
int3
push
scas
int3
push
xchg
das
pop
xor
lahf
dec
out
pop
outsb
nop
push
dec
jl
test
dec
jg
add
adc
or
sarl
into
dec
dec
xchg
scas
popa
xchg
neg
pop
xchg
dec
sbb
xchg
or
add
sub
fs
push
dec
pop
clc
jne
mov
loop
push
mov
jnp
pop
lret
dec
push
xchg
loope
fadds
sub
loopne
xchg
and
dec
mov
jb
mov
and
jnp
mov
jb
xchg
inc
je
cwtl
cld
loope,pn
clc
push
push
pop
or
mov
out
ficoms
inc
inc
rcl
push
dec
lcall
add
sub
aam
rcll
test
xchg
std
mov
or
and
mov
test
es
xchg
cmp
sarl
outsl
mov
pop
mov
jp
shll
sahf
adc
push
mov
xor
add
fadds
cmc
sti
and
fsubrl
ljmp
xchg
xlat
aad
dec
pop
dec
sbb
gs
adc
bound
ss
gs
shrb
adc
outsb
sbb
or
js
outsb
sahf
imul
out
mov
and
jmp
ds
scas
jb
repz
iret
rol
sub
push
scas
hlt
inc
movsb
mov
xor
cmpsl
mov
popa
test
dec
cmc
test
mov
push
ja
mov
add
loopne
pop
popf
jne
push
push
add
leave
add
add
lods
data16
lret
push
das
jb
sub
fdivs
xchg
jnp
dec
add
mov
je
fstpl
lods
jg
in
mov
xchg
cmp
push
fnstenv
adc
cld
loope
cli
add
sti
xor
jnp
popf
add
aaa
adc
mov
push
cs
mov
mov
pushf
lds
mov
sub
leave
repz
dec
ljmp
aam
mov
test
cld
daa
daa
rcl
stc
test
in
push
leave
jle
sbb
lock
xchg
cli
pop
dec
hlt
jne
stc
mulb
das
outsl
outsb
cmp
mov
dec
mov
mov
adc
js
jnp
jg
stc
pop
dec
sti
sbb
push
mov
pop
pop
jns
xor
nop
jl
in
jnp
aaa
dec
sbb
mov
mov
adc
stc
leave
sbb
outsl
cmp
pushf
cld
cwtl
incb
iret
cmpsl
cwtl
in
jno
mov
adc
imul
or
pop
pop
mov
mull
and
push
xlat
cmc
mov
aad
jno
or
xchg
ss
mov
mov
test
pushf
mov
push
or
outsb
jecxz
push
test
pop
daa
mov
pop
xchg
sbb
jle
fcmovu
push
stos
mov
clc
xor
push
repz
clc
fstpt
push
mov
jbe
sti
in
xchg
mov
insl
ja
push
xchg
sub
fcmovb
negl
sbb
fwait
testb
mov
cmc
lcall
jp
bound
insl
sahf
mov
mov
sub
fsubr
fstps
aam
mov
es
decl
inc
inc
les
lods
cmc
add
sarb
adc
sub
mov
loope
ds
les
notl
mov
aas
adc
lret
mov
loope
lock
pop
add
loopne
push
aad
inc
push
mov
lret
sbb
nop
les
cmp
mov
jno
in
inc
jge
iret
dec
adc
inc
mov
icebp
fldl
jmp
popa
insl
mov
dec
pusha
or
xor
faddp
cmp
test
imul
stos
dec
xor
jp
jnp
inc
pop
cli
ljmp
outsl
rcrb
lods
jno
test
xchg
xchg
sbb
or
mov
mov
inc
sbb
push
push
xchg
push
sti
ljmp
sti
mov
mov
jp
gs
je
aad
movsb
dec
pop
std
push
sub
out
add
ret
inc
or
out
arpl
das
or
jne
test
aas
imul
push
movsl
sbb
rorl
sbb
sub
call
les
adcl
addr16
pop
out
jecxz
mov
arpl
mov
cmp
xchg
pop
dec
shl
or
popf
bnd
mov
addr16
mov
mov
xor
fistps
cmpsb
and
stos
push
add
mov
lcall
pop
mov
mov
and
cmp
movsb
fistps
negb
jge
int
mov
sub
mov
icebp
add
push
in
mov
sub
mov
dec
jge
sbb
xor
cs
bound
ja
xchg
mov
mov
jnp
add
jne
movb
icebp
dec
fstp
loopne
xchg
ja
dec
mov
lret
adc
xor
xlat
jnp
inc
lcall
lock
xor
stos
bswap
sub
adc
sbb
clc
cmp
sbb
jle
into
fstps
js
out
scas
repz
cwtl
or
orb
push
sub
push
jmp
bnd
orl
jb
addr16
or
daa
sbb
out
and
xor
jnp
mov
mov
mov
pop
jg
xchg
lods
dec
test
push
sub
xor
sbb
aas
sub
sbb
jns
push
xor
lahf
inc
hlt
mov
mov
jbe
lret
adc
sub
test
adc
inc
and
and
adc
mov
or
cmpsl
jge
stos
iret
xlat
test
pop
lahf
mov
outsl
pusha
dec
dec
jle
or
adc
out
add
fwait
or
mov
jnp
not
fbld
mov
scas
cltd
pop
mov
cs
out
adc
xchg
gs
xlat
leave
loope
incl
sub
pop
xchg
jmp
sub
mov
mov
mov
sbb
popf
adcb
inc
add
subl
jp
sahf
aad
adc
cmp
jle
daa
and
daa
xchg
addr16
cmc
loop
mov
fstpt
imul
push
jb
mov
xchg
jae
cmp
mov
ret
sbb
in
dec
or
mov
xchg
add
mov
inc
fcomp
enter
mov
outsb
pushf
clc
test
add
test
stc
pop
jle
jnp
mov
mov
add
mov
nop
push
xorl
sub
add
cmp
fstpt
xchg
xchg
mov
fstpt
inc
and
loopne
xlat
repz
insl
mov
vorps
in
iret
stos
xchg
or
loope
fldcw
add
mov
icebp
out
or
jp
jbe
and
hlt
push
dec
push
rolb
outsl
test
jecxz
sbb
sahf
stos
cld
add
pop
cmp
xor
jnp
popf
into
in
add
pop
mov
jns
sbb
test
adc
lahf
pop
push
inc
fucomip
mov
fimull
jmp
dec
push
cld
pop
movsb
loop
cmp
loopne
hlt
adc
jo
mov
add
nop
int3
gs
testb
xchg
in
leave
adc
popf
fwait
mov
mov
xchg
xor
scas
stc
adc
xor
out
adc
lea
jl
shlb
add
cmpsl
fldl
pop
or
jmp
push
dec
jae
jae
into
or
scas
mov
imul
adc
xchg
aas
sbb
or
sahf
outsl
mov
xchg
cs
mov
popa
sbb
test
add
jg
push
lahf
dec
sub
pop
jmp
inc
mov
pop
pushaw
loopne
inc
insl
outsl
out
repnz
ja
nop
dec
add
rcrl
mov
leave
sahf
jb
or
ds
lcall
aad
mov
clc
push
cmp
pushf
sbb
cli
dec
inc
data16
enter
dec
cmp
jmp
xchg
movsb
xchg
push
pop
pop
push
inc
in
cmpsl
or
xchg
xor
cs
mov
dec
das
cld
cmpxchg
paddb
jb
push
mov
loope
mov
jecxz
xchg
pop
pop
lock
add
sbb
xchg
sub
daa
std
ret
cmpsl
xor
fwait
rcll
and
xor
flds
xchg
in
sbb
shlb
inc
cmp
mov
addb
mov
jmp
cmpsl
cmp
dec
and
pop
inc
cmpb
lods
sbb
sbb
icebp
cmp
xor
and
insl
and
pop
rolb
insb
inc
push
xrelease
xor
mov
cmpsl
inc
fldt
outsb
imul
adc
xor
int3
fildl
cmpsb
xchg
mov
fisubrs
jmp
pop
inc
arpl
test
adc
sbb
xlat
mov
loop
pusha
ret
sbb
test
pop
das
mov
cmp
out
iret
inc
mov
int
clc
fidivl
jbe
push
adc
dec
jmp
loop
lea
hlt
enter
data16
ss
bound
popa
sbb
lds
adc
int3
pop
mov
push
cli
push
inc
jb,pt
push
std
in
testb
jp
inc
lret
aaa
push
xchg
imul
incb
mov
jl
jle
lods
inc
fbstp
fistl
inc
xor
cltd
add
lds
mov
inc
mov
loopne
enter
test
cmp
icebp
pop
dec
test
das
iret
insl
test
sbb
div
out
fisttpll
out
mov
nop
or
mov
push
sub
insl
mov
or
xor
pop
clc
imul
mov
jge
sahf
or
pushf
insb
cli
sbb
jmp
sbb
imul
daa
lds
loope
movsb
subl
inc
or
and
adc
hlt
out
mov
cmp
in
cmp
in
mov
sub
mov
jae
pop
xchg
aam
mov
push
push
push
mov
ds
mov
mov
mov
pop
mov
xchg
movsb
aam
jmp
stos
cmp
mov
fucom
jb
nop
push
push
movsl
insb
iret
dec
repnz
jle
mov
sti
pop
sub
and
xor
lcall
sub
cs
dec
mov
inc
inc
mov
adc
addl
scas
es
repnz
push
or
insl
sar
cltd
pop
push
push
inc
test
mov
test
fidivrl
insb
mov
pop
outsb
dec
negl
cmpsl
sbb
les
lret
mov
push
push
fucomip
push
and
mov
xor
lret
insb
test
inc
push
shlb
mov
inc
call
sarb
inc
adc
mov
sbb
clc
fisttps
mov
in
and
inc
inc
rorb
addl
push
mov
cs
push
ds
outsl
push
sti
cmpsb
push
arpl
jecxz
mov
xor
cmpsb
push
jmp
ds
xchg
inc
clc
nop
jb
sub
push
push
mov
cmp
ja
xchg
push
pop
inc
cmpsl
push
add
rorb
shlb
add
and
loop
cli
or
sub
int
xchg
mov
cmpsb
and
shlb
test
jo
push
into
push
arpl
arpl
push
push
adc
sub
lods
mov
adc
js
call
bnd
js
pop
mov
xor
ret
jno
mov
loop
int3
out
dec
sub
repz
popf
les
pop
jo
dec
outsb
pop
adc
fdivrs
add
cmc
cmp
inc
loop
shll
push
adc
dec
call
es
cs
test
jle
push
push
das
ja
stos
inc
xchg
rorl
sbb
flds
cmp
fwait
dec
stc
repnz
sahf
cltd
pop
pusha
pop
sahf
ljmp
es
pop
fisttps
jl
pop
add
jp
addr16
lret
hlt
out
dec
out
xchg
out
es
test
int
out
cmpsl
rorl
jb
sub
sbb
push
in
dec
jmp
shlb
xchg
push
ficompl
js
mov
jne
pop
cmp
lret
pop
and
xor
ret
push
fmull
mov
jg
jle
adc
ja
mov
push
mov
ljmp
mov
addr16
mov
xor
pop
pop
mov
gs
fisubrl
leave
dec
hlt
lahf
test
lods
push
cld
xor
xor
iret
push
mov
push
ja
mul
adc
jbe
outsl
sub
lcall
mov
ret
add
jns
outsb
repz
cmp
mov
dec
sar
xchg
pop
push
rorl
popl
xor
mov
cmp
pop
fimull
ret
mov
notl
popa
add
gs
ror
out
call
jle
cld
mov
cmpsl
pop
out
push
cmpsb
aad
push
dec
outsb
sti
xlat
mov
xor
ret
out
xchg
adc
std
hlt
fiaddl
adc
jg
xor
out
and
inc
je
ffree
test
in
aad
xchg
push
jle
pop
pop
jbe
icebp
jl
push
in
jne
and
iret
mov
pop
mov
loop
pop
push
xchg
roll
jge
push
mov
cli
inc
outsl
jecxz
xchg
cltd
jle
sub
addb
pusha
js
popa
cmp
cmc
fdivrl
aad
popf
sbb
mov
push
xor
in
scas
lahf
xor
inc
fsubr
jl
and
jmp
jl
mov
cmpsb
jbe
popf
aas
cmp
int3
loopne
jae
mov
pop
cmp
lods
mov
dec
aam
sub
push
bound
aaa
outsl
fadds
lcall
in
pop
jmp
mov
fidivl
ja
dec
lahf
iret
loopne
mov
loopne
jle
lock
lods
cmpsl
mov
xor
mov
push
in
shrl
xchg
stos
fcoml
lock
mov
dec
sub
gs
orl
mov
jbe
insb
addl
mov
daa
xor
push
hlt
mov
out
lret
hlt
mov
jle
jae
mov
adc
push
or
not
fwait
into
xchg
and
popw
fs
mov
mov
jge
fildl
divl
testb
mov
push
dec
popf
pop
jl
cmp
call
adc
lods
inc
stos
xor
ljmp
hlt
or
push
pop
out
pushf
es
sub
repnz
cmp
push
ror
pusha
ficompl
cmpb
adc
jg
pop
jb
in
xor
leave
stc
out
in
xchg
fmull
jle
shl
mov
xor
shll
iret
cli
subl
mov
xchg
int3
fistpl
pop
mov
push
and
scas
hlt
adc
testl
or
xor
adc
out
push
lcall
addl
scas
and
repz
mov
stos
lds
or
outsb
loope
jbe
jecxz
fidivrl
ja
jg
lcall
out
or
gs
mov
pop
popf
mov
insb
xchg
dec
or
outsb
sub
mov
xchg
adcb
shlb
incl
and
nop
sbb
fwait
dec
scas
pop
xchg
push
leave
mov
int
clc
outsb
sbb
shlb
push
xor
mov
xchg
xor
ret
mov
int
int
jae
sub
dec
jl
add
jge
sbb
xchg
paddq
dec
cmp
sbb
and
and
ret
imul
cs
dec
push
clc
test
push
and
push
insb
xorl
into
xor
stc
cmpsl
repnz
.byte
lahf
sub
xor
adc
stos
add
or
ret
mov
jp
pusha
xchg
sti
lea
fcmovnbe
pop
idiv
xchg
nop
dec
push
push
pop
push
pop
stc
test
not
sbb
sbb
jge
call
daa
loop
mov
and
xchg
movsl
popa
mov
lahf
call
mov
sbb
dec
daa
or
push
pusha
jbe
and
push
jecxz
cmp
cmc
rcll
inc
push
out
test
pop
mov
arpl
out
inc
pushf
lahf
dec
mov
mov
sahf
pop
ret
or
add
mov
sbb
gs
add
dec
inc
hlt
test
mov
subb
sbb
jle
je
decl
sub
addr16
cltd
add
adc
jp
out
lock
cmp
xor
pop
cmpsl
stos
jg
push
mov
and
movsl
mov
add
arpl
repnz
fists
nop
repz
sbb
adc
call
pop
pop
jp
adc
ret
bound
lret
push
cld
sbb
xchg
fistps
push
adc
adc
adc
and
scas
jb
call
adc
fisttpl
inc
insb
fldenv
xchg
and
xchg
or
rcr
dec
lret
js
cmpsl
mov
xchg
lods
push
repz
mov
out
test
pushf
sti
iret
jno
push
nop
sub
jg
test
mov
xchg
icebp
jmp
push
sub
andl
lret
pop
or
jbe
pushf
cmp
dec
stos
pop
divb
push
mov
call
in
xor
jmp
cmpsb
push
jl
fiadds
mov
test
push
pslld
loop
aad
xor
fsubp
imul
cltd
cmp
cmp
sahf
cmp
out
push
pop
and
imul
push
cmp
cmpsl
mov
repz
sti
mov
jle
xchg
hlt
lcall
pop
or
lods
cmpsb
ja
inc
js
test
sub
pop
bnd
ljmp
sub
jne
inc
sub
push
xor
inc
inc
pusha
inc
adcb
pop
xchg
enter
mov
xor
cmp
push
dec
xor
xor
es
pop
inc
cli
add
pop
sub
mov
add
test
rcrb
sub
jle
mov
mov
jl
pop
out
jmp
mov
jmp
pushf
daa
adc
mov
outsb
mov
mov
fists
out
sub
sbb
cmc
dec
sub
outsl
mov
jno
ljmp
lods
andb
icebp
sub
js
xor
pusha
imul
xor
sub
cmpsl
outsl
jb
ss
add
mov
cmc
das
ret
inc
adc
xor
in
xchg
loopne
push
push
xchg
push
cmpsl
jo
dec
mov
pop
sarb
jnp
sub
cltd
xchg
loopne
and
xor
push
mov
inc
repnz
dec
inc
xor
into
sbbl
test
add
cmp
push
lea
cwtl
cmp
inc
mov
jmp
or
cmp
inc
and
jl
pop
ficoml
pop
push
popf
aas
lcall
gs
jb
xchg
sbb
or
push
mov
shl
filds
xchg
cmpsb
aas
shl
mov
inc
and
and
fs
xchg
sub
mov
loopne
sub
in
and
adc
mov
and
repnz
std
sub
push
mov
mov
outsb
xchg
dec
std
test
vphaddwq
shrb
adc
lea
add
movsl
out
jne
pusha
shll
repz
mov
sub
xchg
and
jg
mov
push
jb
xchg
repnz
mov
outsb
mov
movntq
out
sub
sahf
pop
jno
or
pop
jb
pop
jp
aad
mov
leave
push
inc
adc
cltd
clc
jno
aad
scas
mov
lock
push
pusha
dec
data16
out
cs
ja
pop
popf
dec
mov
push
push
sub
inc
pop
pop
mov
insl
lret
addr16
in
test
cmc
xchg
sti
mov
mov
pop
inc
clc
repz
add
ret
gs
mov
icebp
sub
and
or
or
test
rorl
jp
loope
push
xchg
jmp
push
adcl
cmpsl
pop
inc
aas
fcmovnu
test
and
in
inc
mov
bound
test
and
mov
push
and
jbe
push
mov
mov
sahf
rcrl
xchg
call
outsb
dec
dec
sahf
add
cwtl
scas
pop
loope
mov
mov
dec
xchg
push
outsl
xor
mov
xchg
mov
lahf
data16
ljmp
ja
sahf
jl
cmp
sbb
push
je
jmp
jmp
in
dec
push
mulb
aaa
xchg
loope
sub
add
dec
push
jmp
shrb
push
mov
xor
push
jg
adc
in
pop
es
sub
sbb
addr16
in
and
push
shll
sbb
outsl
sbb
fcoml
xor
inc
sbb
mov
fidivrl
sub
sub
iret
jno
inc
cli
hlt
cmp
cmp
mov
shl
fidivrs
jb
mov
and
or
cld
xor
add
mov
out
sti
mov
nop
mov
fstps
push
test
ss
std
adc
out
sbb
mov
rorb
xor
sub
pusha
xchg
inc
adc
ljmp
pop
jl
dec
lcall
adc
test
cwtl
fcmovu
sub
push
xor
lods
push
mov
mov
xchg
mov
cli
push
dec
inc
mov
mov
inc
cltd
cmp
xchg
lock
enter
adc
pop
add
jne
js
ret
shrl
sub
fwait
sbb
push
lret
mov
dec
shrb
pop
fs
jno
repnz
daa
push
add
mov
fists
idiv
dec
dec
repnz
pop
and
filds
jbe
nop
in
mov
out
push
xlat
repz
pop
sti
xorb
and
ljmp
fstl
inc
out
pop
sub
mov
xchg
test
push
sub
arpl
mov
xchg
sub
cmpsb
inc
mov
xlat
or
xchg
imul
mov
fildl
cwtl
add
push
sbb
imul
adc
mov
xchg
insl
xchg
lret
arpl
dec
icebp
ljmp
jmp
jmp
pop
mov
in
stos
pop
and
mov
pop
mov
xor
add
inc
sbb
lret
or
xchg
addr16
fs
enter
xor
sbb
push
loope
aad
dec
adc
mov
nop
popf
sbb
aaa
mov
daa
jg
ss
jo
shlb
or
or
js
jle
mov
xor
mov
inc
jno
push
in
xchg
and
push
sahf
and
lret
xor
roll
addr16
cltd
or
loope
enter
adc
lock
and
adc
enter
cmp
mov
push
flds
sahf
movsl
mov
outsb
and
fsubrs
inc
das
outsl
adc
arpl
cmp
ficoml
iret
ljmp
out
xor
xchg
mov
and
mov
and
in
xchg
inc
dec
sub
sbb
fsubs
xchg
out
dec
subb
push
mov
shl
loopne
aam
dec
fcompl
jg
int
jnp
repz
shrb
jae
lea
stc
mov
mull
jno
lea
dec
data16
xchg
jp
xor
stos
push
popf
inc
inc
jnp
ds
xchg
into
xor
andl
sub
das
or
jl
fnstcw
adcb
lods
mov
mov
jmp
les
mov
arpl
add
rorl
ds
movsb
sbb
xchg
fldlg2
xchg
aam
push
cmp
fucomip
ljmp
and
nop
jne
xor
sub
out
sub
lcall
push
test
out
es
mov
stos
test
or
pop
push
mov
sbb
mov
jl
jb
mov
enter
inc
sahf
aaa
or
pusha
adc
repnz
loopne
dec
adc
icebp
nop
mov
dec
add
outsb
rorl
lret
and
mov
adc
decl
mov
fcmovnu
push
shrb
mov
dec
pop
lods
sbb
xchg
adc
push
lret
lcall
push
mov
iret
popf
jnp
jge
mov
iret
dec
mov
push
imul
push
out
and
add
cmp
rcll
cs
xchg
clc
push
xor
xor
aas
adc
mov
mov
dec
or
push
adc
sbb
push
pop
insb
mov
and
and
xchg
leave
xor
rorl
xor
mov
pop
mov
and
pop
xchg
fwait
out
dec
push
sbb
and
imul
pop
inc
mov
cmp
sahf
cli
cmp
into
sub
pop
dec
or
daa
pop
insl
rclb
sub
jbe
mov
mov
sub
ja
adc
jae
inc
xor
ja
les
cmp
fs
lods
push
or
cmp
xchg
push
aas
fsub
push
rcrb
add
jno
and
into
fldl
cltd
in
je
fists
add
loopne
call
add
cmp
ret
in
xchg
sub
jmp
mov
mov
in
push
clc
icebp
or
mov
pop
push
mov
daa
xor
ss
lods
pop
adc
cmc
std
testl
mov
adc
aas
outsb
call
int
mov
fs
packsswb
mov
lret
loop
data16
orl
push
jne
cld
popf
call
or
test
mov
bound
pop
fcmovne
mov
mov
xor
push
ret
xlat
data16
xchg
pop
fcoml
or
iret
mov
ja
jne
popf
jle
sbb
inc
mov
fiadds
imul
gs
cmp
mov
ret
lock
adc
add
cld
mov
fisubrs
fistl
push
cmp
add
inc
mov
repnz
sahf
push
stos
nop
int3
cmpsl
aaa
jae
push
ss
and
int3
xor
xchg
dec
ret
pop
cli
add
cmpsb
cld
imul
mov
cmp
and
mov
gs
int
bound
test
sbb
add
xor
mov
push
dec
cltd
mov
mov
push
inc
icebp
mulb
dec
jnp
pop
jecxz
jnp
iret
repnz
jno
adc
xchg
aas
scas
inc
push
xchg
pop
mov
arpl
cwtl
ret
inc
mov
inc
es
and
add
aad
add
mov
inc
scas
stos
mov
daa
lret
je
fdivl
les
mov
xchg
test
add
xchg
xor
cli
dec
dec
dec
mov
andl
adcl
fdivr
mov
sbb
or
jle
in
add
push
frstor
fdivrp
fists
cmp
lea
push
cltd
aas
lret
daa
mov
xchg
mov
push
sub
cmp
dec
mov
loopne
push
out
mov
sub
lret
dec
outsl
sbb
pop
add
mov
aaa
movl
xchg
ja
lcall
mov
mov
cli
xchg
enter
std
rorl
jns
mov
sbb
adc
addr16
cmp
lret
dec
mov
jae
shlb
add
je
sar
jmp
adc
jmp
pop
les
mov
inc
pop
movsl
pop
push
add
inc
dec
or
rcrl
sub
ret
or
sahf
ss
push
xor
adc
xlat
addl
add
ja
ds
jb
cld
decl
out
push
cmpsl
aad
or
shlb
mov
mov
hlt
pop
cmp
fcmovbe
test
dec
inc
pop
pop
mov
nop
push
and
xchg
out
rclb
xor
sbb
je
and
and
rclb
inc
inc
das
mov
bound
mov
mov
push
stos
jmp
pushf
jle
sbb
ja
repz
sbb
mov
les
push
mov
sarb
out
mov
xchg
adcl
dec
in
mov
dec
popa
je
cmpsl
add
rol
loope
in
int
xor
jb
jne
stc
sbb
jbe
testb
pop
shr
into
cs
and
mov
fnstsw
dec
mov
add
lret
mov
sub
jg
push
mov
in
orl
mov
push
inc
sbb
out
adc
mov
jle
in
je
lods
cli
push
ja
dec
mov
inc
popf
or
add
xor
jae
ja
ret
mov
fistpll
aaa
sahf
loope
aaa
dec
jmp
jge
es
imul
cmp
jl
dec
shrb
fucomi
cmpsb
repnz
in
jo
aam
cmp
fstpl
mov
fistpll
or
shl
xor
fdivp
mov
cmp
clc
sbb
mov
aam
add
ljmp
push
jae
xor
xor
jbe
pop
jp
fnstenv
shrl
orb
push
shrb
mov
je
xchg
fidivl
jbe
push
dec
sbb
lcall
jns
jle
pop
ja
nop
xchg
sbbl
nop
cmp
in
pusha
sbb
test
lret
and
sbb
push
jmp
leave
rol
rorl
and
xchg
xor
push
dec
ds
pop
popf
mov
sti
gs
inc
push
xchg
xchg
add
dec
ret
stc
sbb
stos
arpl
daa
shll
and
dec
addr16
and
pop
fisubl
sbb
mov
outsb
inc
ret
xchg
cwtl
lds
cs
xchg
out
pushf
sub
mov
xchg
push
push
lret
icebp
fdivrs
les
mov
mov
sub
push
pop
les
adc
inc
pop
push
or
cmp
mov
mov
sbb
jg
sub
fnsave
in
mov
push
and
jg
sarb
dec
aaa
dec
mov
sub
nop
rolb
add
mov
add
dec
fmull
rcl
sbb
adc
and
fwait
mov
lods
dec
push
es
or
int
inc
xchg
addr16
or
fcmovbe
shl
cmpl
repz
in
add
xor
cltd
fnstcw
bound
pop
and
icebp
xchg
add
lcall
mov
pop
push
aam
outsb
sub
addb
pop
xchg
xor
inc
mov
jge
out
js
in
popa
mov
pop
mov
xor
sbb
pop
adc
or
xchg
lods
les
push
push
jns
cmp
out
lcall
xchg
test
push
notl
leave
pusha
pop
jl
cmp
testb
dec
or
or
add
xchg
push
or
fs
sbb
cmp
cs
icebp
xor
xchg
mov
pop
jbe
jl
lret
xchg
in
out
popf
lea
dec
fnstsw
mov
adc
inc
imul
movsl
clc
mov
iret
dec
and
push
lods
dec
popa
add
jg
xchg
inc
jg
jmp
shr
mov
shrl
inc
dec
shrl
fcomip
shl
adc
dec
xchg
and
push
repnz
jp
pop
or
das
sbb
or
ret
push
pop
adc
ljmp
cld
pop
push
stc
adc
inc
mov
shll
call
inc
push
adc
shll
pop
out
addr16
sbb
dec
xchg
cmp
sbb
inc
xor
insl
and
xchg
sbb
jns
inc
mov
test
mov
fdiv
popf
ficoml
mov
xor
lock
addl
or
mov
mov
xlat
stos
adc
fnstcw
add
sub
ja
sub
fcmovnbe
fbld
and
pop
jecxz
lret
dec
sbb
adc
mov
inc
incb
push
push
lods
test
movsl
pushf
jmp
test
ret
sbb
incb
sbb
cwtl
aaa
out
add
loope
jne
js
rorb
arpl
cmp
imul
xchg
xchg
insl
div
xchg
js
mov
push
and
arpl
sti
cmp
inc
dec
out
inc
add
or
in
std
mov
or
lret
xchg
rcrb
mov
jae
inc
in
add
adc
xchg
xor
fld
sub
gs
jl
jl
rcrl
jns
aaa
int3
add
push
or
lods
psubq
insl
lret
mov
or
inc
incb
push
clc
lret
pop
pop
mov
mov
mov
xchg
adc
mov
and
xchg
add
out
mov
cs
je
mov
cmp
mov
mov
mov
pop
in
cmpsl
push
dec
cmp
lods
mov
out
mov
mov
leave
adc
leave
aad
sub
adc
mov
into
dec
fmul
mov
jp
cs
in
lock
and
mov
mov
repz
mov
pushf
xchg
ss
scas
hlt
lods
decl
ficoms
fidivrl
add
jmp
jne
inc
in
rcll
imul
jo
insl
mov
pusha
xchg
lds
mov
pop
adc
imul
imulb
mov
jmp
xchg
fidivrs
arpl
push
mov
mov
neg
cmp
push
shll
mov
cmp
test
test
mov
inc
inc
and
std
mov
push
cmp
cli
jmp
fcoml
pop
add
xor
dec
or
adc
fdiv
mov
jle
sub
ja
stos
repz
mov
mov
xor
pop
jne
dec
cltd
das
cmp
mov
mov
mov
imul
fdiv
cld
movsl
je
popa
adc
jnp
das
add
pushf
lods
mov
mov
jns
push
dec
jnp
mov
cmova
mov
adc
data16
pop
dec
inc
push
xchg
mov
pop
push
cmp
push
nop
fsubrs
mov
mov
xchg
mov
mov
out
adc
jge
iret
outsb
add
sbb
xchg
loopne
movsb
or
outsl
pop
mov
or
pop
movsb
or
lret
push
sub
into
leave
cltd
inc
sbb
push
cmp
xchg
pop
jle
test
lods
call
or
adc
jmp
mov
popa
out
pop
add
ja
hlt
xchg
dec
loopne
lds
fnstsw
arpl
mov
aad
dec
push
je
sbb
stc
inc
jecxz
movsb
add
scas
std
cmp
cmpsb
rclw
inc
push
push
insl
xchg
jno
jae
mov
push
xor
stos
nop
xor
pop
stc
mov
inc
jne
sub
inc
mov
test
sbb
or
in
sub
adc
mov
xchg
dec
inc
adc
addr16
inc
fidivrl
out
leave
mov
sbb
xchg
inc
dec
jmp
pop
push
mov
call
sbb
in
fs
insb
jmp
push
add
frstor
inc
jbe
aad
mov
mov
pop
dec
mov
push
loop
test
sti
pop
nop
into
add
lcall
data16
lods
xchg
inc
lock
pop
lret
jmp
cwtl
jmp
pop
cmpsl
rcrb
rolb
pop
out
push
out
loop,pn
movsl
mov
add
das
mov
out
mov
imul
mov
jae
adc
rcrb
cs
je
cs
xor
cltd
pop
ss
aad
inc
lret
pop
movsb
dec
repz
movsl
dec
adc
loopne
sbb
xor
inc
jge
shl
mov
xor
outsl
iret
movsb
mov
jg
mov
pop
and
mov
and
aad
int
aas
insb
jmp
popa
pushf
cmp
fsubl
adc
and
push
shrb
cld
lret
pop
loopne
lret
or
cli
push
jns
sub
movsb
mov
insb
mov
clc
jbe
add
inc
leave
aaa
outsb
popa
hlt
jb
xchg
aaa
arpl
and
das
js
push
lea
out
inc
movsl
xchg
ljmp
fsubrp
adc
cli
movsb
sub
pusha
xchg
mov
pop
mov
sbb
pop
inc
xchg
cmpsl
and
or
mov
pusha
add
mov
scas
jl
mov
icebp
mul
pop
jecxz
fcomps
in
pop
clc
mov
xchg
push
out
push
sub
clc
movsb
mov
push
sub
test
test
aaa
loope
sub
fs
testl
outsb
sti
rolb
xchg
fdivr
fs
sbb
rcll
dec
xchg
negb
int3
pop
aaa
jmp
test
popl
test
jle
test
cmpsl
icebp
scas
add
fnsave
pop
mov
int3
inc
xor
xchg
das
cmc
pop
js
xchg
pop
sub
push
mov
add
fisttpll
test
jl
adc
xchg
gs
int
mov
imul
loopne
mov
sarl
push
loopne
xchg
mov
in
mov
sub
stos
or
ret
dec
aam
sub
xchg
sbb
int
mov
outsl
sbb
cli
cli
repz
sbb
stos
jno
jns
nop
int
fmull
xor
pop
mov
cmp
das
mov
in
test
daa
imul
mov
pop
and
insb
jnp
fnstcw
lds
test
jmp
cmpb
mov
bound
fs
shlb
call
push
adc
hlt
in
add
in
stc
cld
mov
jmp
add
mov
mov
jbe
loopne
pushf
inc
addr16
jne
xchg
das
jmp
cmpsb
in
add
lret
movsl
push
rorb
xor
mov
ja
xor
loop
push
mov
push
pop
xor
xor
xchg
shrl
adc
jns
std
inc
mov
sbb
iret
sbb
test
sarb
icebp
imul
scas
out
xchg
loope
in
jne
cltd
clc
out
bound
out
sub
sarl
call
les
int
sbb
jmp
lds
mov
hlt
pushf
cli
gs
or
les
mov
data16
das
dec
xchg
jmp
add
pop
xchg
jae
jbe
or
xchg
shr
jecxz
ljmp
outsl
xchg
and
in
int
pushf
call
add
dec
shrl
mov
mov
sub
cmpl
jg
pop
and
aas
mov
aas
outsb
dec
loop
enter
dec
dec
and
les
xlat
pop
mov
add
call
xor
cmp
pop
mov
cmp
xor
ljmp
xor
mov
mov
mov
xor
orb
addr16
int
test
cli
hlt
test
mov
fisubrs
bound
inc
sbb
loope
push
pushf
fdivrs
ljmp
adc
repnz
sub
push
mov
cld
mov
xor
sbb
sub
clc
xchg
ljmp
inc
dec
rolb
fs
sbb
stos
imul
popa
mov
mov
movsb
out
cld
ror
lock
fcoml
mov
cmp
xchg
jnp
mov
lcall
aam
sub
dec
xchg
add
jp
mov
lret
dec
and
aas
mov
adc
cmp
jae
xchg
aaa
xchg
jge
into
cmpsb
test
sbb
push
inc
push
movsl
dec
adc
repnz
test
shrb
daa
or
aam
mov
xchg
xchg
xor
mov
out
jl
pop
insb
lds
ret
sahf
or
jb
push
jecxz
push
imul
cmc
enter
gs
gs
je
hlt
dec
mov
and
jmp
xchg
lds
nop
or
out
add
lcall
add
repz
and
dec
dec
mov
les
or
outsl
testl
leave
les
adc
out
sub
inc
pop
fxch
adc
sub
movsb
lods
gs
cmp
lods
lods
fidivrs
arpl
dec
fmull
int
test
daa
and
sahf
adc
push
mov
imul
sbb
jp
jae
and
iret
movsb
xchg
pop
sbb
in
xor
out
xor
dec
das
ljmp
aaa
mov
push
xchg
cmpsl
mov
jge
imul
sub
fdivrl
dec
xor
test
loop
add
idivb
mov
and
mov
or
ror
jno
in
add
sub
lock
cmp
jg
mov
mov
je
gs
sub
loopne
cmpsl
mov
jle
fisttpl
jns
jns
mov
cmc
push
mov
xchg
shlb
push
out
es
cmp
cld
sub
into
add
cli
clc
lods
fwait
mov
xchg
push
inc
mov
ljmp
mov
xor
add
sbb
jle
sub
repnz
add
push
mov
pop
es
xchg
mov
icebp
mov
xchg
popf
ja
jo
cmp
loop
test
jne
add
or
lock
loope
and
scas
xchg
cmp
js
in
shrl
mov
xchg
pop
jg
xor
cmp
xchg
clc
cs
out
testb
hlt
lcall
jg
js
mov
lea
push
nop
or
fidivs
out
push
mov
xor
and
mov
sahf
repnz
push
imul
call
ds
mov
xor
sub
mov
dec
fidivrl
adc
pop
ljmp
mov
and
sbb
cwtl
sbb
cld
fists
std
das
inc
loop
xchg
push
mov
pop
cmp
dec
popf
push
outsl
jno
mov
mov
lods
cld
cmp
lds
jle
jae
cmp
orl
lods
lea
int
jns
loopne
mov
clc
mov
ljmp
pop
std
outsl
mov
pop
mov
and
out
out
pop
and
mov
ja
fildl
pop
lods
add
xorl
xor
xorb
mov
rclb
dec
out
jnp
enter
movsb
inc
mov
mov
loop
xlat
inc
jb
xchg
add
inc
repz
add
xchg
jecxz
mov
xor
pusha
pop
ss
mov
incl
std
or
pop
sbb
cli
push
loope
icebp
push
lahf
push
xor
in
cld
mov
insl
outsl
shr
inc
push
fldl
mov
mov
and
push
xlat
int3
push
pop
in
js
out
dec
clc
mov
sbb
jp
cmpsb
enter
mov
push
or
out
fidivrl
pusha
lods
cmp
adc
push
inc
inc
addb
inc
fisubl
dec
into
cmpl
out
lret
xchg
or
mov
mov
std
cltd
cli
arpl
and
cmpsl
xchg
pop
lret
clc
shrb
je
jbe
cmpb
xor
es
inc
outsl
loop
loope
push
xor
mov
push
and
push
std
ret
add
in
inc
adc
cmc
pop
lock
lods
push
mov
ja
.byte
cmp
push
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
add
add
push
add
push
add
add
add
xor
fs
insb
add
popa
jb
dec
outsl
outsl
imul
je
jo
outsl
outsl
imul
and
mov
add
negl
pop
into
daa
xor
pop
and
and
cmpsb
xchg
gs
jnp
jo
xchg
push
or
adc
stos
sbb
xchg
mov
mov
clc
in
mov
and
mov
pop
inc
pop
cmpsb
ja
nop
add
or
sbbw
sysexit
xchg
pop
fiaddl
inc
shll
rcrl
and
adc
mov
fisubrs
xchg
add
lods
inc
es
dec
cmp
insb
icebp
pop
insb
xlat
push
mov
test
mov
mov
cmp
fcom
mov
adc
js
mov
aaa
and
fisttpll
call
cmp
mov
pop
sbb
pop
push
pop
pushf
jnp
out
jle
mov
pop
lea
shr
insb
fbstp
push
in
add
rcrl
pop
sbb
inc
sub
jns
mov
sub
mov
loope
aaa
popl
test
xchg
int3
mov
fidivs
sub
je
in
aad
mov
in
mov
mov
in
rcrl
inc
push
xor
mov
std
fwait
add
movsb
in
mov
inc
add
and
shlb
jge
outsb
xchg
fisttpll
and
int3
add
in
repz
test
cs
test
jnp
cmp
ja
int3
jno
cmp
dec
push
stc
cmc
into
cmp
lds
cmp
push
or
pop
subb
ljmp
mov
add
sub
mov
sub
xchg
into
mov
xchg
push
dec
adc
fimull
cmp
sar
cwtl
sub
and
int
mov
scas
mov
test
fstp
testl
mov
cltd
sbb
notb
jo
pop
pop
mov
xor
nop
xchg
add
pop
leave
push
sbb
mov
in
hlt
xor
ror
outsb
dec
jae
stos
ret
mov
out
in
pop
pop
hlt
adc
es
push
test
push
cmp
or
add
stc
insb
out
call
fwait
scas
aas
pushf
in
jns
pop
fldt
inc
xorl
dec
jp
rcrb
popf
cmc
jmp
mov
jge
imul
ret
sti
mov
jnp
stc
nop
xchg
dec
psubusw
jp
pop
inc
inc
outsb
sti
scas
jbe
jge
clc
cmc
jle
stos
mov
or
jl
ljmp
in
xchg
xor
stc
sti
jns
mov
jns
inc
inc
scas
shrl
cmp
sub
ljmp
aaa
clc
or
cmp
xlat
arpl
or
xchg
fistpl
sub
cs
insb
roll
and
mov
mov
roll
test
mov
mov
push
jne
pop
xor
adc
test
into
xchg
cld
shlb
push
push
arpl
jae
arpl
into
push
sarb
cmp
fisttpll
push
ja
push
and
or
add
inc
mov
push
pop
fnstenv
mov
insl
lds
inc
xlat
adc
sub
icebp
or
push
out
das
adc
add
ret
cmc
push
call
xor
mov
mov
fsub
jb
roll
cmpxchg
fs
out
and
repz
xlat
sbb
ds
sti
and
cmp
clc
add
je
xor
test
and
mov
stos
jg
add
sbbl
lds
std
stos
or
push
inc
and
xor
icebp
jae
jnp
in
mov
test
sub
xor
push
ljmp
call
fcmovnbe
inc
idivl
jle
lds
xchg
adc
dec
cmp
push
or
das
fs
lahf
mov
mov
or
dec
repz
insl
xchg
push
fdivs
test
insb
gs
mov
gs
dec
repz
stos
lea
lods
pop
in
clc
fstpl
mov
inc
mov
push
sti
enter
jge
shll
add
lds
add
pushf
shlb
int3
pop
loop
leave
scas
mov
mov
rolb
clc
andb
or
cmpsb
cmp
ja
xor
repnz
jg
jg
out
sub
cmp
icebp
dec
out
inc
sahf
scas
push
adc
xchg
dec
push
pop
lahf
mov
imul
ss
or
xchg
and
cmp
add
mov
and
cmp
cli
sub
pop
addl
push
inc
jecxz
loop
xor
xor
xchg
and
bound
es
dec
ret
outsb
jecxz
mov
clc
test
sbb
dec
addr16
jmp
movsl
push
xor
mov
sub
cmpsb
bts
pop
sub
loope
push
loope
or
mov
adc
mov
inc
je
daa
data16
cmpsb
sbb
jmp
and
dec
push
dec
jge
jecxz
or
mov
lds
add
pop
push
push
add
adc
movsb
loopne
ret
mov
dec
flds
mov
jbe
leave
mov
rclb
in
cwtl
mov
movsb
and
add
js
mov
fs
xor
or
sub
mov
imul
pop
in
outsl
mov
ds
inc
add
push
cmp
push
push
jg
sbb
sbb
pushf
fsubrl
cmp
or
insb
pop
idivb
jnp
mov
dec
inc
sub
push
imul
fwait
adc
xchg
and
mov
stc
outsl
adc
leave
inc
cmp
aas
xlat
jbe
scas
xchg
lods
loop
lahf
ret
sti
loope
pop
cmp
das
bound
cmp
lock
andl
jb
gs
add
pop
cmp
pop
in
stos
or
jl
pop
mov
nop
lock
hlt
sbb
rcrl
das
inc
dec
add
jb
je
js
and
jp
inc
pop
push
imul
push
ljmp
filds
xchg
test
roll
in
cmp
mov
mov
add
sub
pop
jae
ds
ljmp
ret
lods
inc
xchg
scas
xchg
jmp
xor
fcomps
lods
jnp
sti
xor
adc
pop
call
adc
mov
loop
into
push
dec
fiaddl
fs
movsl
lods
imul
xor
xchg
fdivrs
into
ljmp
shr
mov
sub
inc
mov
out
insl
popa
testb
push
add
push
mov
cwtl
ret
mov
mov
and
mov
xlat
sub
ljmp
sbb
fstpt
push
loop
int
push
push
sbb
dec
mov
rcrb
mov
mov
sub
ret
loop
imul
into
sahf
loopne
push
mov
xchg
loopne
or
inc
movsb
jno
scas
icebp
bnd
movsb
ret
in
in
xor
pop
jo
sbb
loop
movsl
and
pop
fnstsw
sub
cld
js
out
ds
mov
pop
sarb
clc
mov
xor
push
loope
ret
popa
ret
xor
gs
jno
mov
mov
pop
enter
xlat
sub
in
jge
sbb
dec
cmp
dec
cmp
sbb
lret
jle
mov
cmpsl
imul
movsb
imul
pop
jb
xchg
jns
sub
push
popf
or
cs
cmp
jl
push
roll
push
js
or
pop
cmp
cmpsb
shrl
shll
mov
xchg
lods
mov
sub
ljmp
mov
dec
scas
lock
push
or
mov
xor
pop
inc
iret
xor
add
ret
cmpsb
std
mov
imul
arpl
hlt
btc
add
dec
outsl
sub
fnstenv
mov
jo
add
ljmp
dec
sbb
movsl
push
inc
pop
clc
xor
test
jb
fistl
jbe
sub
jl
dec
ds
or
popf
stos
dec
loopne
mov
enter
enter
imul
jbe
and
fwait
xchg
outsb
repnz
push
out
js
les
popf
push
lcall
fwait
scas
stos
pop
test
ja
out
inc
push
sti
ret
addb
pop
add
insb
jmp
cmp
mov
dec
mov
dec
sub
push
outsl
orl
iret
mov
mov
call
test
loopne
aad
dec
cwtl
scas
sbb
insl
lods
in
je
into
or
loope
cli
push
xchg
mov
and
jg
ljmp
sbb
jno
mov
mov
inc
sbb
aas
mov
jno
out
lea
mov
mov
neg
shll
adc
xor
inc
pusha
sub
hlt
mov
stc
or
sarb
pop
and
jnp
adc
inc
mov
lret
sub
sub
or
popf
dec
mov
roll
jge
mov
rolb
mov
sub
xchg
xchg
in
push
jmp
insb
popf
loope
divl
xor
std
xchg
loope
xchg
inc
jge
adc
ret
ror
sbb
pop
inc
mov
sub
add
mov
sbb
xchg
cmpl
ja
dec
adc
mov
mov
mov
fiadds
lret
jg
xchg
aam
lock
xchg
sbb
sub
xchg
mov
sti
mov
sbb
sbb
push
lea
dec
int3
pushf
jp
bound
sar
push
cmp
mov
lea
sbb
lret
addl
dec
hlt
mov
mov
xor
subl
mov
push
xchg
out
pop
jp
test
sarl
ret
lret
fstl
or
imul
sarl
add
lods
repz
xchg
test
mov
cmp
xchg
xchg
xchg
and
js
mov
ss
push
sub
faddl
inc
data16
sbb
dec
enter
call
jmp
xchg
pop
jmp
aam
ja
mov
jno
and
mov
in
test
mov
cld
test
dec
icebp
divl
clc
mov
cmp
adc
inc
data16
lea
sbb
or
mov
mov
movaps
mov
aad
test
fdivl
mov
dec
pusha
ret
pop
stos
mov
ret
and
mov
test
movsb
add
in
inc
ret
sbb
cs
mov
cltd
or
pop
les
mov
cmp
jne
inc
inc
cld
jg
lods
mov
out
push
lcall
je
aaa
pop
mov
imul
adc
xchg
push
push
mov
sbb
mov
int
les
test
mov
repz
sub
test
popf
in
xchg
not
pop
add
or
loope
mov
xor
cmc
jnp
jge
fistpll
mov
aam
icebp
inc
in
je
mov
cmp
lds
mov
leave
add
xchg
sbb
dec
enter
add
lds
sub
mov
or
pop
sbb
or
std
sub
lea
cmc
mov
inc
mov
mov
mov
adc
pop
das
inc
icebp
inc
pop
mov
cmp
imul
cld
sub
push
push
jo
xchg
aas
ret
mov
hlt
add
outsb
xor
or
push
lea
bound
in
sub
mov
out
fs
xor
and
pusha
movsl
in
adc
sbb
imul
mov
mov
inc
push
shll
dec
out
add
inc
mov
stc
adc
ja
jne
push
dec
inc
dec
aas
sbb
pushf
popa
adc
rorl
xor
outsl
fisttpl
adc
jg
loop
inc
loop
fsubs
xor
pop
jp
jo
into
xlat
mov
loope
scas
cltd
xchg
add
xor
sub
cmpsl
js
xchg
fs
push
sub
inc
and
jp
movsl
fisubl
adc
cmpsl
and
push
rcll
lods
pushf
rclb
pushf
and
mov
bound
jae
adc
adc
jb
enter
mov
sbb
pop
mov
cmp
xlat
outsb
sbb
adc
push
dec
call
mov
jmp
cmpsl
lods
dec
rorb
ljmp
and
push
mov
lea
lret
mov
pop
and
mov
mov
scas
mov
pop
and
popw
or
rorl
mov
add
jp
outsl
cmpsl
push
sub
jle
push
jecxz
mov
cld
mov
mov
fsubrl
arpl
in
and
pop
pushf
cmp
mov
stc
daa
jl
test
sub
mov
insb
push
push
test
mov
inc
ffreep
rcr
mov
aaa
cmpl
xor
fwait
in
cmp
nop
adc
rol
cli
clc
aad
xchg
inc
mov
movsb
mov
jmp
lahf
sahf
push
roll
jae
iret
repnz
iret
pop
sbb
xchg
out
cmp
imul
mov
inc
cmc
push
mov
iret
jae
cmp
sub
cmpsb
cmp
lret
lcall
lds
mov
data16
dec
loope
push
adc
das
jl
pop
in
rcrl
mov
movsl
adc
mov
repnz
xlat
test
rol
shl
data16
cmp
mov
mov
sbb
jp
inc
int
push
pop
js
data16
cmp
or
add
lods
in
loop
dec
mov
pushf
push
test
outsl
and
mov
xchg
jecxz
int
mov
mov
adc
jecxz
mov
sbb
ljmp
cmp
and
mov
push
push
aad
and
pop
mov
pop
movsb
sahf
push
sbb
in
sbb
dec
pop
jbe
push
lret
mov
push
add
pop
movsb
push
pop
push
nopl
xor
jle
stos
or
test
xchg
mov
repz
sbb
pop
cmp
cmp
xchg
insl
pop
movl
in
cmp
mov
xchg
sbb
jae
and
xchg
daa
icebp
add
dec
or
xchg
sbb
mov
jmp
fistpll
sbb
cwtl
sub
mov
pop
mov
pop
inc
enter
push
leave
lods
dec
jp
sub
mov
mov
pop
das
gs
mov
shll
mov
stos
jbe
insb
ficomps
loope
push
inc
shll
pop
push
cmpsl
test
stos
testl
shlb
jne
aad
out
add
movsl
ret
je
iret
sub
jg
mov
rcr
popf
ds
jmp
push
ljmp
outsl
sbb
ja
aas
sub
icebp
lcall
cmp
mov
jmp
xchg
cmp
mov
sti
subl
lret
ss
cwtl
mov
pushf
nop
mov
ret
pop
incl
test
fcmovnu
lea
pusha
xchg
pop
lahf
push
add
fiaddl
sub
shlb
dec
dec
ds
notl
sub
jbe
lods
xchg
push
movsb
dec
fs
int
cmp
out
imul
push
xchg
mov
push
fdivrs
or
data16
cmpsb
mov
add
hlt
mov
test
or
mov
aad
adc
or
lahf
stos
adc
ds
adc
dec
fnstsw
test
sub
dec
pop
mov
stos
jmp
imul
xchg
repz
je
push
xor
add
mov
out
pop
pop
dec
push
testl
dec
test
xchg
js
mov
cmp
push
lret
xor
fnstsw
in
out
mov
mov
in
adc
lahf
jg
negl
pusha
xchg
mov
xchg
jae
push
mov
mov
or
mov
mov
popa
or
popf
addr16
insl
nop
sbb
aam
lods
mov
cmp
test
sbb
mov
dec
adc
cli
sub
sti
mov
adc
push
or
addr16
call
pop
and
pop
cmp
xlat
lods
movsl
hlt
out
mov
xor
lock
mov
pusha
insb
adc
sub
cwtl
scas
repz
mov
jae
movsl
pop
mov
daa
xchg
pop
ja
jo
icebp
outsb
cmpsb
mov
xor
xchg
mov
mov
fstpl
or
movsl
movsl
sub
test
jno
xchg
pop
push
pop
imul
adc
nop
add
rclb
scas
rorl
or
adc
xchg
out
stc
mov
inc
shlb
cs
in
enter
mov
and
gs
inc
add
xchg
mov
cmp
or
popa
cmpsl
and
xor
pop
roll
popf
imul
and
inc
xchg
or
jge
mov
std
popa
and
sbb
pop
rclb
ror
idivb
jl
or
sbb
cmpsl
pop
imul
aam
cmp
push
mov
sub
jg
inc
test
insl
push
inc
sbb
pop
pop
lahf
arpl
inc
sarb
mov
pop
cmp
ret
daa
jp
push
flds
mov
jle
cmp
test
adc
rorb
shrb
movsl
and
cmp
sub
outsb
pop
mov
xchg
mov
dec
std
imul
andl
jnp
cmp
fs
shll
daa
icebp
mov
imul
pop
pop
scas
adc
push
les
lea
adc
pop
fisubl
fmull
sbb
in
xor
and
test
xchg
cld
lock
sub
or
mov
sub
mov
popf
adcl
loope
mov
iret
cmp
add
insl
xchg
sbb
xor
xchg
ror
cltd
rclb
mov
call
mov
rolb
mov
subb
inc
daa
addr16
bound
lahf
jmp
inc
repnz
repz
and
and
ja
and
cli
jge
ret
test
mov
push
data16
or
popf
mov
pop
shll
sbb
int3
icebp
sbb
inc
cmp
push
push
push
roll
pop
test
test
xor
push
xor
lret
dec
aas
ss
jae
sub
outsb
aam
loope
fidivl
lret
stos
dec
mov
push
test
loop
push
lcall
imul
xchg
leave
inc
int
daa
jbe
and
or
dec
xor
movsb
loop
cmc
test
pop
sbb
nop
inc
pushf
push
daa
mov
mov
xchg
test
hlt
popf
cmp
mov
stc
daa
fstpl
sub
pop
dec
negb
xchg
fidivrs
mov
mov
cltd
jl
jmp
mov
dec
sub
dec
xor
into
ljmp
pop
or
je
in
in
ss
ret
or
jne
fwait
addr16
sbb
push
cld
and
and
pop
movl
sbb
push
mov
dec
std
and
out
mov
jns
pop
pop
ja
mov
cmp
aas
nop
stos
dec
pushf
xchg
cmpsl
call
lods
xchg
ja
xchg
jl
ror
jle
sbb
je
clc
jb
jg
fidivs
add
fistpll
mov
shll
pop
add
jbe
and
pop
notb
into
repnz
ja
adc
cmpsb
pop
sub
dec
cmp
neg
pop
sub
xchg
out
js
sbb
mov
mov
aas
pop
das
push
push
lcall
mov
lds
mov
in
xor
popa
leave
rcrl
pusha
int3
xor
mov
mov
mov
adc
push
nop
push
pop
mov
movsb
xor
and
or
and
inc
sbb
aam
cmp
stos
and
cmp
loopne
fisubl
sti
cmp
aad
jle
jmp
fidivrl
xor
xor
sbbb
loopne
das
out
xchg
or
and
shlb
scas
mov
jl
test
cld
xchg
shlb
xor
pop
push
outsl
in
adc
inc
movsl
mov
out
and
pop
mov
popa
xchg
lods
push
jl
xor
mov
cmp
push
int
jg
in
gs
mov
call
ret
inc
jb
pop
and
test
subb
or
bnd
fs
ficoms
int
es
std
and
jmp
add
cmp
test
push
jle
add
lds
push
xor
jmp
or
imul
xor
sub
jo
sbb
mov
mov
out
sub
aam
push
aas
jmp
lea
push
dec
fidivrl
add
xor
add
sbb
adc
pop
push
pop
xor
lds
jp
mov
dec
scas
mov
test
rorl
xor
scas
movsl
pop
sub
dec
jg
cmp
lret
inc
pushf
or
cmp
ja
bound
sbb
mov
add
cmp
xor
xchg
in
shlb
dec
or
or
jno
mov
in
push
mov
push
jmp
mov
test
orb
aaa
ss
cmc
inc
ret
jg
int
fdivrl
jp
or
pop
mov
push
lock
pop
fs
mov
pop
clc
push
imul
jb
push
iret
add
jae
call
ffreep
ljmp
cld
in
jae
jno
out
das
xorb
test
repz
daa
lret
iret
add
in
push
adc
mov
stos
loop
sbb
fldcw
dec
jp
insl
data16
and
pop
shl
ficoml
or
sbb
std
sbb
pusha
mov
scas
cmp
fidivs
pop
add
jne
mov
and
mov
jmp
push
cld
pop
imul
pop
add
or
shl
ja
popa
cmp
push
mov
mov
insb
push
lret
repnz
sub
fwait
or
fwait
mov
and
hlt
or
sbb
call
fs
js
pop
aam
jle
loop
or
pop
arpl
mov
nop
fidivs
sub
clc
xchg
dec
inc
mov
or
outsl
repnz
dec
sbb
push
adc
or
sarb
fstps
and
xchg
jns
cmp
insb
test
movsb
pop
or
fwait
jne
out
stos
jge
push
mov
ror
push
enter
psrad
loope
xor
outsl
insb
sti
mov
fidivrs
lret
ljmp
pop
imul
push
loopne
mov
sub
mov
cmp
ss
fcomps
xor
mov
shll
or
mulb
mov
push
cmc
mov
frstor
sahf
jns
cmp
mov
sahf
flds
xchg
jp
stos
cmc
jp
fisubrl
adc
mov
mov
adc
rcr
mov
addr16
movsb
das
jle
xlat
push
pop
and
add
push
insl
mov
xlat
mov
out
pop
or
adcl
repnz
test
fldl
jmp
stos
outsb
sub
push
addb
out
xor
mov
inc
inc
ljmp
inc
cmp
dec
mov
popl
push
push
movsl
push
pop
stos
lret
popf
inc
ja
in
jno
mulb
pop
fiaddl
mov
add
call
movsl
adc
ds
xchg
in
aad
pop
lock
iret
std
xchg
and
loope
daa
lcall
mov
adc
dec
or
xchg
ret
mov
or
pop
sub
pop
dec
sbb
rcll
mov
testl
aas
push
xor
icebp
jbe
sub
std
lds
daa
scas
xchg
jecxz
pop
movsb
push
dec
xlat
notb
outsb
sub
xchg
test
inc
shrl
push
sti
pusha
mov
int3
adc
adc
aam
icebp
and
je
sub
jo
loopne
dec
mov
dec
push
std
lods
les
scas
call
and
mov
push
and
adc
sub
ljmp
jbe
fists
lock
loope
jl
add
pop
push
inc
fwait
sbb
in
mov
out
fisubs
and
and
rcrl
clc
js
jnp
and
aad
adc
and
fs
or
xor
es
dec
mov
inc
pop
bound
jnp
sbb
out
pusha
popf
sub
mov
das
lret
mov
out
pop
jmp
call
mov
lahf
xchg
sub
mov
sbbl
daa
push
jmp
pop
mov
cmp
fdivrl
lcall
sti
adc
enter
jns
ret
lods
push
dec
add
sbb
dec
xor
arpl
les
push
cmp
bound
mov
std
mov
in
sub
fldenv
jae
stc
add
adc
test
and
push
dec
inc
xor
and
cmpsl
sub
mov
mov
repz
or
xorb
js
sbb
push
pop
sub
sbb
pushf
sbb
fldenv
cmp
xor
mov
jg
adc
mov
push
add
dec
mov
cltd
sbb
scas
pop
popa
pop
in
lcallw
sub
dec
add
inc
loope
std
subl
popl
lcall
sti
push
sbb
mov
xchg
insb
bnd
sub
jmp
pop
cmc
xor
push
insl
aas
or
push
test
mov
jmp
imul
dec
ss
in
ljmp
or
push
jo
mov
cmp
dec
sbb
cs
mov
daa
icebp
sub
mov
iret
xchg
icebp
mov
lock
popf
push
jo
mov
rcrb
pop
or
lcall
cli
cwtl
mov
or
add
lret
and
popf
jne
bound
xor
insl
stos
and
mov
in
cmc
lds
pop
sbb
xchg
xor
dec
imul
or
jp
sti
jns
ss
or
xchg
push
sti
or
js
add
loope
cmp
int3
jbe
ljmp
scas
loopne
test
roll
iret
xchg
fcompl
imul
outsb
pop
jae
lods
dec
pop
movb
out
add
jb
andl
push
pusha
sbb
cmp
mov
inc
test
sahf
mov
out
stos
jge
jl
das
adc
sti
pop
and
pop
sub
inc
loope
test
sub
xchg
pop
cmp
insb
cmpsl
mov
sbb
and
loop
or
inc
and
inc
inc
jge
pop
rorl
js
scas
sub
popf
out
outsl
jns
xlat
sbb
lds
test
icebp
xor
ret
es
inc
icebp
xlat
test
mov
lahf
inc
xor
jno
mov
push
shll
fs
pop
jne
out
cmc
adc
sbb
in
ljmp
insl
or
data16
cs
ljmp
cmc
sub
adc
mov
and
dec
inc
sub
testl
insl
cs
cmp
or
push
ret
cmp
push
and
cmp
push
xchg
jg
inc
and
xor
push
cmp
sahf
fstl
aas
push
sti
mov
rorl
mov
mov
push
push
rcll
add
stos
ret
repnz
in
and
test
add
jle
xchg
popa
adc
aad
sbb
add
lcall
cmp
inc
movsb
repnz
mov
and
out
mov
and
out
mov
adc
cli
cmpsb
sub
and
ds
ja
push
jecxz
sbb
into
imul
imul
scas
fsubrs
pusha
fdivp
pushf
out
testl
mov
outsl
call
sbb
xchg
jmp
mov
push
cmpsl
stos
mov
lods
push
adc
call
pop
jge
mov
ja
adc
fnstcw
or
movsb
test
sub
repnz
sbb
fcomip
xchg
adc
cmp
repnz
stc
xchg
mull
test
push
xlat
test
sahf
pop
and
in
jnp
or
mov
xlat
mov
mov
cmpsl
in
jl
and
cmc
mov
test
cmp
les
push
dec
push
pop
push
fcmovu
ret
inc
sub
rclb
call
in
or
sub
addb
mov
cmp
into
loop
push
ret
lret
jmp
testb
mov
rolb
stos
add
sbb
lcall
pusha
sarb
fst
push
dec
mov
orb
std
xchg
loop
xor
adc
xchg
and
jge
push
jl
jno
mov
or
cmp
cli
mov
xchg
lods
jo
js
or
add
test
movsl
dec
and
add
lds
nop
add
xchg
out
outsl
mov
je
inc
movsb
xor
jnp
mov
pop
add
inc
repz
push
xor
dec
mov
pop
adc
pop
inc
leave
out
out
test
pop
mov
cmp
mov
int3
ficomps
mov
in
mov
push
mov
mov
adc
bound
mov
mov
jmp
or
ds
jg
out
cmp
cmp
pop
cwtl
jge
mov
mov
dec
xor
ficoml
pusha
jl
enter
int
jo
xchg
lods
jmp
xor
or
out
cld
add
movsb
ret
mov
or
jae
mov
lods
into
inc
pop
or
sahf
lret
jno
fdivp
xor
lret
loope
pop
inc
and
mov
add
or
inc
xor
pop
cmp
ljmp
mov
out
jns
mov
je
push
jb
dec
sbb
bound
repnz
add
insl
jb
inc
loopne
outsb
cmpsb
xor
xchg
stos
xchg
das
mov
pop
scas
ror
aas
loop
cmpsb
scas
jle
aam
mov
inc
fnstcw
dec
in
add
inc
and
xor
dec
mov
aaa
popa
mov
sub
lcall
sbb
jecxz
stos
in
pop
fsubrl
inc
push
std
inc
leave
sbb
cmp
ret
dec
and
shll
sbb
xchg
cmpsb
mov
or
daa
into
fistpl
lods
fisubrs
int
jo
rclb
dec
pop
or
jne
sub
mov
inc
adc
cltd
jg
fisttpll
sbb
test
loop
push
je
push
mov
cld
out
mov
mov
es
imul
ljmp
dec
jo
loopne
insl
mov
ss
or
nop
jo
xor
fists
js
fcomi
mov
jbe
movsb
pop
shlw
push
loope
je
dec
int
fimull
inc
repnz
insl
cmp
inc
and
lods
or
and
test
nop
push
and
add
bswap
mov
leave
cltd
jb
pop
lds
cmpsl
leave
loop
cmp
push
xchg
aas
js
lods
adc
cmpsl
mov
fimull
mov
leave
ficoml
enter
jl
popa
flds
and
sbb
adc
loop
ljmp
sub
cmp
mov
add
push
ret
ret
outsl
test
mov
inc
pop
jecxz
fnstcw
inc
pop
sub
fimull
jle
loop
sub
je
jp
hlt
rolb
xchg
cmp
and
ss
mov
xchg
shlb
cmpsb
es
inc
mov
sbb
pop
or
push
das
sbb
mov
or
inc
mov
mov
fdivrl
push
dec
dec
cmpsb
xor
pusha
cs
jg
jns
cmpsl
mov
in
cmc
mov
imul
cmp
mov
fnstenv
push
sub
int3
mov
push
add
xor
testl
pop
xlat
jle
mov
jecxz
cltd
xchg
inc
xor
dec
ss
sbb
inc
mov
fcoms
inc
out
push
dec
xor
cmpsl
lret
mov
popf
popf
ror
lock
xchg
fnstcw
ljmp
xor
roll
jbe
test
test
test
mov
sub
or
stc
mov
negb
mov
and
sti
addr16
inc
repnz
dec
jmp
push
fstpt
fmul
aad
jae
mov
int
push
push
mov
or
std
cld
popf
pop
into
iret
pop
dec
repnz
cltd
mov
stos
push
aad
sbb
sbb
push
jo
sbb
iret
xor
inc
dec
mov
dec
lock
cs
mov
push
stos
cmp
pop
jb
fs
pop
cmc
int
xor
jmp
mov
es
repz
and
aam
ds
repnz
icebp
shl
adc
nop
in
lcall
sbb
pop
push
mov
int
dec
subb
repnz
imul
mov
aas
push
jl
jns
pop
les
out
test
out
jae
mov
jge
mov
jge
movsb
mov
pop
mov
adc
or
mov
inc
jmp
sbb
inc
loopne
mov
sub
push
xlat
fdivr
dec
mov
inc
xor
jmp
mov
lods
in
clc
roll
or
xor
xor
and
outsb
jnp
and
aas
pop
jmp
push
mov
sbb
sti
or
das
shrl
sub
xor
mov
std
mov
mov
or
mov
or
outsb
cld
clc
das
add
mov
in
adc
jg
xor
pusha
icebp
fstps
xchg
xchg
clc
sti
dec
push
add
ret
sbb
sub
mov
lcall
lock
xchg
push
gs
jnp
or
and
jno
aas
pushf
and
std
and
add
out
push
xchg
lea
mov
mov
js
push
xlat
and
jb
push
aad
movsl
notb
add
cltd
hlt
jnp
cmpsb
or
ja
dec
ja
es
imul
ret
sti
xchg
xor
das
sbb
pxor
pop
imul
dec
cwtl
mov
sbb
repnz
enter
fcomip
xchg
sub
bound
mov
cmc
aam
les
jp
rcll
out
push
stos
xchg
insl
jns
addr16
add
sub
pop
sti
repnz
mov
inc
mov
sub
test
dec
dec
pop
xchg
lods
jno
ljmp
sbb
incb
mov
repnz
jl
xor
adcl
mov
pop
pop
cmove
ret
mov
cmpsl
push
sub
push
sti
enterw
cmp
orl
js
or
or
stos
cli
push
roll
mov
xchg
stos
repnz
sbb
xchg
lcall
int
fcomi
dec
adc
js
out
das
xchg
outsl
jle
nop
add
sub
loopne
loopne
iret
adc
or
aaa
mov
dec
inc
add
imul
cmp
push
enter
call
out
jge
or
gs
and
bnd
scas
dec
mov
outsb
bound
scas
outsb
out
aaa
addr16
xor
bnd
jmp
outsb
negb
ficompl
fdiv
push
mov
fildl
adc
adc
rorb
stc
mov
popa
lcall
inc
xor
push
mov
aas
cmc
ret
mov
insb
ljmp
adc
outsl
ds
cmp
icebp
call
pop
add
dec
ficompl
fwait
mov
xlat
repnz
scas
leave
and
loope
test
test
in
mov
dec
push
les
shrb
popa
mov
loopne
mov
xchg
jns
xor
clc
addr16
imul
subl
cltd
test
push
dec
mov
pop
jne
es
mov
movsb
xorl
fucom
dec
add
fldcw
mov
mov
sub
jle
fs
mov
mov
ljmp
jne
bound
pop
mov
add
inc
add
adc
sti
mov
aaa
and
lods
data16
mov
jb
ss
add
iret
std
push
sub
insb
and
dec
lret
mov
loopne
and
jg
fmull
cmp
mov
inc
jmp
cwtl
jae
jecxz
jo
pusha
movsl
fimuls
popa
sbb
test
sub
push
outsl
mov
cmc
in
ljmp
and
enter
imul
movsb
cmp
push
and
adc
mov
popf
cmp
ja
mov
lock
xchg
daa
and
sub
jo
push
xor
inc
jbe
loop
cli
dec
mov
bound
dec
mov
sub
arpl
std
aas
inc
jecxz
imul
subb
mov
mov
sub
scas
xor
or
sahf
add
inc
cmpsl
sub
jbe
lcall
mov
inc
and
aam
dec
cwtl
lock
lds
out
dec
sarl
push
out
xor
mov
add
xchg
out
movsb
shrl
or
dec
lock
mov
and
cld
hlt
popf
mov
mov
shlb
dec
repnz
in
test
in
mov
sbb
loop
and
ret
insb
xor
adc
cmp
ret
inc
mov
repnz
adc
jmp
fidivrl
lret
lods
or
iret
push
pop
out
setp
jns
xor
xchg
fstpt
sbb
adc
popf
jns
lahf
sub
xchg
push
fs
scas
stos
ds
jmp
cmp
sbb
mov
add
fadds
sbbb
insb
cwtl
sbb
ss
repz
xor
and
into
aas
push
mov
cld
jo
int3
inc
jae
sub
sbbl
rcrb
sbb
in
in
dec
mov
mov
push
push
imul
das
push
and
mov
in
xor
fcoms
testl
ss
xchg
mov
cmp
push
mov
sbb
das
lods
sbbl
out
rcrb
in
insl
pusha
imull
ds
mov
test
orl
shlb
push
push
or
ljmp
je
xchg
sub
in
inc
dec
lds
imul
pushf
dec
jne,pt
mov
jo
inc
out
dec
out
cmp
jle
push
jmp
lcall
jp
xor
lock
push
sub
sub
mov
inc
adc
repnz
in
dec
xchg
jmp
sub
cmp
push
mov
loope
xor
inc
sbb
inc
xor
je
incb
es
out
push
out
icebp
rorl
enter
fimuls
stc
mov
jge
icebp
mov
sar
and
cltd
adc
jge
adc
cli
stos
ja
lret
sub
pop
ljmp
xor
push
mov
aad
xor
sbb
and
sbb
add
sbb
xlat
mov
pushf
cld
jmp
sub
xor
ret
outsl
jg
cmp
in
adc
pop
test
fidivrl
aad
inc
push
mov
pop
xor
ljmp
cwtl
movsb
xchg
test
sub
movsl
sti
cmp
lret
lods
xor
mov
mov
loopne
in
push
adc
jg
xchg
ret
stos
lahf
adc
dec
cmpsb
mov
cmpsb
mov
sarl
sbbb
dec
pop
shrl
dec
cmp
sub
mov
or
mov
sub
imul
imul
mov
adc
cmp
dec
fnsave
inc
sub
sbb
ja
inc
jle
mov
rcr
jle
xchg
push
insb
addb
inc
js
adc
out
lea
xor
aad
jae
dec
sbb
adc
pushf
sbb
pop
inc
out
negl
and
shl
cltd
in
xchg
and
and
jns
mov
mov
clc
mov
lea
nop
iret
shl
das
push
test
outsl
outsl
bound
mov
sub
inc
iret
pop
inc
fsub
in
movsl
rcrb
mov
insl
dec
cmp
testl
out
sahf
lahf
inc
fwait
push
or
cmc
or
and
adc
cwtl
hlt
fsubl
mov
jne
inc
lret
mov
loop
push
leave
into
in
push
mov
fidivs
push
inc
adc
arpl
add
repnz
push
add
sbb
jp
mov
hlt
jge
out
xor
inc
pop
push
jno,pn
insb
xor
and
mov
pop
sbb
movsb
ret
int3
movsl
sbb
push
out
ficomps
addr16
repnz
jae
insl
test
daa
xlat
push
push
movsl
and
lret
push
out
cmpsl
outsb
std
icebp
imul
nop
roll
ljmp
mov
imul
inc
push
repnz
and
mov
adc
pop
xorl
insl
mov
popa
mov
xor
lea
pop
arpl
add
rclb
mov
call
pushw
insl
cmc
mov
in
fcomps
mov
and
mov
orl
jge
or
mov
adc
xlat
mov
mov
xchg
mov
jmpw
jb
mov
pop
adc
dec
hlt
stos
data16
pusha
cmpl
jecxz
mov
or
push
push
jno
aad
xchg
add
test
lret
lods
xchg
sub
dec
xor
pop
ljmp
lds
jae
xchg
cmp
into
mov
mov
ret
mov
or
cmpb
arpl
pop
push
cld
push
or
and
or
in
ficomps
fnstenv
mov
mov
pop
xor
add
push
mov
mov
sub
xchg
addr16
ja
andl
popf
lea
pop
lds
fs
inc
push
and
pusha
in
ja
test
jp
ret
push
push
push
adc
mov
mulb
dec
xchg
shll
loopne
xor
xchg
push
mov
ss
adc
cmc
add
ret
adc
dec
fwait
js
aas
ss
icebp
mov
sub
or
stc
rcrb
xchg
lods
iret
add
fists
xchg
jno
cmpl
rolb
dec
sbb
mov
or
jbe
outsb
jp
pop
mov
movsl
jno
cltd
das
stos
mov
sbb
lds
mov
pusha
push
sahf
fsubs
loope
fwait
inc
add
fucomp
lds
inc
xor
lcall
pop
iret
mov
dec
dec
inc
dec
cmp
js
mov
pop
insb
fld
out
mov
inc
pop
stc
dec
pop
inc
inc
jno
dec
outsl
and
rcrb
popf
movsl
inc
sti
rolb
out
dec
mov
stos
sub
xor
push
mov
xor
add
jo
jns
lods
cld
ljmp
aam
out
xor
sahf
sbb
les
push
lahf
xchg
and
gs
ljmp
pop
or
stos
mov
cmp
inc
cmovns
xchg
pop
rol
adc
mov
jbe
mov
and
push
sub
setb
sub
fs
jnp
incb
or
push
pusha
mov
cmp
dec
popf
jle
int
mov
cmpl
outsl
arpl
and
sahf
mov
add
push
push
sbb
mov
add
sahf
jns
mov
push
dec
and
popa
pop
mov
or
add
mov
imul
test
aad
sahf
or
fbld
jp
pop
inc
or
in
push
addr16
fs
aaa
or
jb
ror
or
pop
dec
sub
pusha
pop
cmp
xlat
xchg
imul
imull
sbb
jp
inc
scas
cmp
je
sarb
rclb
mov
jns
movsb
and
shr
popf
pop
cs
pop
rep
call
int3
out
in
pop
dec
xchg
scas
add
call
scas
cmp
outsb
dec
fcoms
pop
lcall
scas
shll
jmp
jbe
add
lea
mov
insl
xor
push
push
paddusw
insl
imul
pop
aam
cmp
fsubrl
and
pusha
xor
mov
mov
inc
mov
repz
adc
jmp
std
scas
into
push
cmpsl
daa
out
pop
jmp
mov
push
les
in
adc
cmpl
jge
mov
int
cmp
mov
mov
sub
mov
in
mov
cmpsl
out
out
psubusb
add
mov
mov
es
stos
mov
sbb
addr16
das
pop
call
and
mov
ja
sbb
cmpl
sub
dec
pop
fstps
and
or
pop
cmpsl
outsb
mov
into
xlat
shll
bound
mov
in
into
xchg
and
loopne
xchg
stos
push
and
and
sub
pop
inc
jg
mov
jl
pop
sbb
pop
fisubs
or
cwtl
and
je
pushf
scas
xchg
mov
adc
outsb
std
cmp
push
xchg
sub
or
sbb
sub
lret
fisttpll
xor
fwait
popf
pop
pop
cli
add
pop
xchg
add
sub
nop
fcomi
xlat
cltd
rcrl
mov
jle
cs
pop
inc
gs
add
xchg
int3
dec
cmc
cwtl
ss
cmp
bound
xchg
sbb
mov
lea
pop
push
stos
mov
cmp
pop
and
sbb
jge
sub
movsb
pop
xchg
inc
test
xchg
and
dec
push
mov
test
sub
mov
xor
ret
out
jbe
repz
mov
xor
icebp
int3
mov
addr16
dec
push
outsl
iret
cmp
test
cmpsb
cli
add
lock
jp
push
mov
lods
cmp
lods
and
mov
movsb
ret
data16
dec
scas
cld
test
rcrl
std
xor
cmp
xor
data16
mov
adc
jge
imul
dec
or
ret
aad
aam
add
lret
mov
fcompl
scas
lahf
into
xor
mov
mov
scas
xchg
rol
sti
sbb
push
inc
jge
push
aam
mov
loopne
rcrb
pushf
pavgw
pop
fistl
aas
inc
xchg
cmpsb
xor
gs
ja
leave
xchg
lret
fsts
shll
out
test
xor
mov
mov
adc
sbb
or
dec
ljmp
or
jnp
inc
push
mov
xchg
lcall
punpckldq
pusha
sub
sbb
jecxz
jecxz
das
push
or
ljmp
pop
sbb
mov
fbld
stos
inc
pop
repnz
iret
mov
mov
cmp
loop
in
loope
jmp
dec
fmull
and
popa
push
cld
cld
ret
out
rolb
cmp
and
iret
rclb
ljmp
mov
pop
dec
aad
xchg
testb
pushf
inc
cltd
cmp
nop
fadd
insb
std
inc
cmpsl
mov
jo
adc
ja
aad
jmp
mov
push
cmp
inc
hlt
iret
and
xor
mov
mov
aam
push
loope
and
mov
mov
jno
push
sub
daa
push
mov
sub
sub
inc
mov
mov
push
xchg
jno
pop
inc
dec
mov
push
jmp
sub
repnz
div
mov
shlb
lahf
xchg
and
data16
sub
jns
les
inc
xor
repnz
mov
popa
adc
mov
jae
inc
or
jb
mov
mov
push
mov
mov
loopne
push
mov
xchg
or
hlt
pop
inc
xchg
dec
jns
arpl
add
loop
pop
xor
ret
test
cs
sbb
das
push
add
arpl
in
frstor
and
ja
and
cmpsb
jbe
pop
mov
jmp
sbb
push
mov
or
xor
mov
push
stc
in
dec
cmp
sbb
push
ss
cmp
divb
or
aas
mov
push
mov
pop
and
push
insl
fwait
cmp
pushf
cmp
ret
jnp
popa
lahf
je
mov
bnd
les
cld
xor
iret
pop
mov
std
add
les
mov
adc
repz
shrl
push
and
adc
bound
and
jae
stc
fsts
and
iret
pop
adc
dec
inc
stos
push
test
ret
mov
jmp
adc
arpl
fwait
lods
enter
imul
scas
dec
inc
loopne
stos
or
subl
xchg
jae
divb
arpl
mov
and
push
cmp
aad
cli
out
sub
sub
stos
clc
sbb
or
xlat
nop
sbb
jmp
dec
or
dec
mov
xor
loope
cwtl
cs
movsb
stc
cmpsw
adc
adc
adc
sub
pop
mov
inc
inc
dec
mov
jb
xchg
adc
ret
cmp
mov
hlt
xchg
add
out
fisttps
adc
fwait
cmp
nop
adc
jne
mov
call
pop
cwtl
mov
ss
lds
movsb
out
popf
pusha
es
push
mov
mov
and
pop
sub
das
push
in
notl
dec
cmp
loope
cmpsb
pop
scas
jmp
enter
dec
orl
push
ss
xlat
mov
imul
adc
aad
aam
shlb
lods
lea
cltd
dec
imul
pop
mov
adc
lods
insb
jg
lret
add
and
push
mov
dec
mov
fwait
rcl
int
mov
xchg
loope
or
xor
outsb
out
fneni(8087
jb
push
stos
mov
jno
movsl
sub
pop
int3
aam
loop
mov
lret
cmp
pop
xor
clc
and
into
movsb
aas
shll
inc
adc
jmp
fdivl
cmp
jmp
mov
cltd
sti
adc
sbb
sub
mov
mov
jl
cli
jg
js
jno
cltd
jecxz
enter
lock
xor
pop
icebp
rolb
sbb
jnp
loope
xchg
imul
xor
add
jecxz
adc
sbb
movsl
sbb
lret
fs
sbb
lcall
adc
mov
insb
mov
xor
mov
cli
das
xor
stc
loop
mov
nop
sbb
jle
imul
mov
mov
cmp
xchg
nop
mov
jo
cltd
aas
lock
les
out
pop
pop
movsl
ds
sub
mov
aam
ljmp
xchg
jle
mov
jnp
push
scas
add
cmp
cpuid
xchg
repnz
ds
outsb
divl
notl
leave
push
fistl
sbb
mov
aam
dec
or
popa
and
pop
xchg
sbb
adc
pop
pushf
pop
mov
scas
and
shrl
stos
jbe
and
sub
mov
scas
adc
leave
icebp
adc
std
xchg
bound
mov
cltd
mov
sub
xor
push
pop
inc
pop
fs
xor
outsb
or
dec
leave
sub
sbb
in
sbb
mov
out
adcb
xor
xchg
adc
pop
and
fisubl
and
inc
and
movsb
pushf
lret
rcrb
xchg
rcr
mov
sti
pop
xchg
pop
fwait
leave
lea
mov
lds
inc
fwait
pusha
stc
cmp
push
cltd
mov
les
bound
push
jne
dec
adc
lahf
jne
popf
jl
incl
addr16
stos
jne
adc
sbb
fwait
cmpsl
outsl
popf
jno
lods
call
push
jecxz
inc
sub
push
inc
push
inc
pop
push
insl
jecxz
inc
mov
fisubs
lea
hlt
xchg
inc
cmc
rorl
push
lcall
addr16
cmp
out
test
push
sub
push
mov
imul
div
and
push
das
lcall
pop
fnstsw
in
push
xchg
xchg
aam
leave
push
loop
cmp
push
test
push
frstor
leave
ret
addr16
cwtl
fcomip
dec
sti
std
mov
stc
mov
or
out
test
in
add
dec
mov
aad
icebp
adc
gs
in
xlat
stos
subb
pop
imul
mov
adc
jne
lds
out
mov
add
or
cmp
es
dec
sahf
xchg
test
inc
jbe
dec
mov
mov
sarb
enter
pushf
jb
push
dec
sub
xor
rcl
pop
jo
out
ljmp
insb
xor
scas
inc
cld
je
out
lret
or
jle
les
jo
lcall
cmp
es
pop
loope
fildll
fcmovu
jb
xchg
scas
test
cmpsb
shll
loopne
jmp
ljmp
mov
sbb
adc
inc
inc
add
aas
mov
mov
bound
mov
f2xm1
addr16
fs
pop
das
je
icebp
lahf
sub
jp
pop
adc
enter
adc
and
sub
testl
inc
arpl
dec
sti
rcrl
xorl
arpl
fwait
je
jno
mov
xchg
fadd
fwait
jecxz
js
jb
lds
mov
add
fnstcw
mov
push
sbb
xor
scas
mov
or
xchg
xchg
insb
ja
fsubrl
mov
pop
dec
or
sub
scas
adc
mov
inc
popf
push
out
lahf
xor
fdivrl
sub
adc
repnz
push
sub
dec
imul
cwtl
imul
mov
pop
add
lret
jp
adc
pop
pop
mov
inc
pop
push
fldt
aaa
push
aam
xchg
push
in
test
xorb
testb
mov
fnstsw
push
dec
lret
push
scas
xchg
int3
dec
in
mov
mov
dec
ficompl
int
mov
sub
xor
jns
mov
stos
add
rol
cmp
sub
jo
push
addl
sub
mov
xchg
outsl
xchg
mov
xor
xor
mov
push
add
mov
xchg
clc
out
pushf
jns
sub
cmp
or
mov
addr16
cmp
icebp
sbb
in
std
popf
aad
out
push
ljmp
iret
sbb
call
test
ret
fstpl
xchg
mov
mov
adc
es
cwtl
int3
inc
or
cmp
orb
mov
cmpsl
or
jno
pop
in
add
adcb
sarb
dec
push
daa
jge
push
mov
sub
mov
addb
mov
jmp
mov
inc
pop
ret
dec
lahf
dec
aas
call
jbe
rcr
xchg
lcall
lret
loopne
popf
inc
adc
mov
push
cltd
inc
orl
movsl
dec
cs
lcall
push
aaa
adc
or
mov
test
mov
stos
hlt
subb
xchg
xchg
and
push
sbbl
std
adc
mov
fwait
adc
lea
xor
ret
pop
pop
orl
insb
inc
add
movsl
in
mov
repz
sbb
mov
lret
pop
xor
loop
subb
.byte
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
cwtl
add
addb
add
or
add
and
add
cmp
add
rolb
add
add
add
dec
add
addb
add
xor
outsl
cmp
add
add
add
add
add
add
add
js
add
nop
add
addb
add
add
add
add
addb
add
fadds
add
lock
addb
add
xor
outsl
cmp
add
add
add
add
or
orb
add
and
add
cmp
add
push
add
subb
subb
cmpb
addb
orb
add
mov
add
enter
mov
add
mov
add
andb
adc
addb
add
xor
outsl
cmp
add
add
add
add
add
add
add
addb
add
xor
outsl
cmp
add
add
add
add
or
addb
addb
add
xor
outsl
cmp
add
add
add
add
sldt
pop
add
xor
add
jo
add
mov
xor
add
mov
sldt
mov
sldt
rolb
xor
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
xor
outsl
cmp
add
add
add
add
or
xor
add
or
add
and
add
cmp
add
xor
outsl
cmp
add
add
add
add
jg
add
add
push
jg
add
jg
add
jg
add
jg
add
push
add
loopne
add
xor
outsl
cmp
add
add
add
add
or
cmp
add
xor
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
pop
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
inc
or
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
add
xor
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
add
or
add
add
add
outsl
cmp
add
add
add
add
add
and
add
cmp
push
add
add
jo
push
add
add
movsb
popf
push
add
add
fcomps
add
or
push
add
add
inc
mov
add
je
push
add
add
test
push
add
add
add
push
add
add
add
add
add
add
push
add
add
add
stos
push
add
add
add
lods
push
add
add
add
add
insb
mov
add
add
add
push
add
add
add
push
add
add
add
mov
add
add
add
mov
add
fiaddl
add
add
add
nop
or
call
add
add
add
add
xchg
or
push
add
add
xchg
or
sbb
add
inc
xchg
or
fadds
add
sbb
add
mov
or
je
add
and
or
push
add
add
or
call
add
add
add
add
or
sub
add
mov
add
xchg
mov
add
mov
or
mov
add
push
add
add
add
add
mov
add
je
or
mov
add
sub
add
or
pop
add
add
add
add
add
add
sbb
add
sub
add
rol
or
stos
or
add
add
add
add
add
adc
or
adc
add
and
or
adc
add
cmp
or
adc
add
dec
into
or
adc
add
pusha
into
or
adc
add
je
or
adc
add
mov
or
adc
add
pushf
into
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
dec
add
dec
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
mov
sbb
movb
inc
orb
ds
cmp
dec
sbb
inc
pop
insb
fsin
inc
inc
adc
mov
jge
out
aas
xchg
das
jbe
inc
inc
push
pop
movsb
fidivl
xor
mov
add
iret
add
cli
xchg
xchg
je
mov
sub
xor
push
jl
enter
add
cmpsb
push
xor
xchg
lcall
test
push
lds
mov
pop
add
cs
xchg
adc
mov
jns
pop
dec
mov
push
cli
in
push
inc
scas
mov
inc
outsl
jl
out
pop
adc
push
cmp
mov
scas
cmp
adc
cs
outsb
mov
lahf
in
aaa
rcr
std
leave
add
push
idiv
xor
lock
mov
ds
int3
cmpsl
cmpsb
push
imul
sbb
and
dec
mov
and
jno
mov
in
ret
xchg
cmc
push
xor
and
mov
jge
or
movsl
mov
insl
pushf
pop
aaa
movsb
rcrl
stos
sti
bound
add
and
add
pop
movsb
xchg
xor
lods
stos
lock
clc
mov
sub
mov
lea
int
add
stc
push
cli
push
cld
lea
call
ret
xchg
and
scas
or
jbe
and
dec
andl
es
les
and
nop
sti
idivl
adc
cmp
mov
sarl
pop
jo
mov
daa
xchg
cmp
push
lea
mov
xorl
mov
inc
iret
outsb
push
out
xor
pop
repnz
adc
add
mov
or
or
and
mov
and
subl
stos
mov
outsl
xchg
stos
push
cltd
insb
xchg
and
stc
and
jge
jo
jle
fldenv
mov
jl
cmc
jp
mov
or
jmp
pop
js
dec
jp
jge
les
es
or
in
out
aad
in
pop
call
inc
adc
iret
lcall
inc
adc
cmp
inc
xchg
cmp
add
push
loopne
xchg
pop
nop
negb
lods
push
enter
cmp
jle
add
push
cmp
cld
xlat
push
test
push
dec
xchg
or
sbb
xor
jl
xor
in
add
fcoml
enter
in
jno
pop
dec
sub
jg
cwtl
imull
push
icebp
out
fiaddl
jbe
repnz
and
and
push
sub
adc
mov
movb
push
cmp
out
lock
pop
lahf
scas
jae
outsb
pop
js
adc
imul
loopne
lret
sub
shl
ds
mov
adc
imul
cli
xor
and
inc
pushf
ss
jg
xlat
aad
and
sarb
cmp
add
mov
mov
mov
mov
xchg
negl
sbb
rolb
lods
xchg
outsl
pop
mov
push
pusha
push
inc
lds
mov
outsb
inc
add
inc
inc
sbb
mov
jbe
mov
into
movsl
ljmp
pop
xchg
sbbl
xchg
jae
xchg
cmp
jmp
pop
test
cmpsb
dec
dec
push
out
mov
pop
pushaw
bound
dec
int
stos
fistpl
inc
push
fsubl
pop
push
stos
cmp
js
xor
mov
mov
aas
mov
out
cltd
aas
cvtpi2ps
dec
lret
ljmp
or
outsb
pop
stc
fisttps
jl
popa
je
test
icebp
sbb
in
inc
and
lods
add
jno
sbb
mov
bound
dec
je
xchg
subl
outsl
dec
fcmovu
decl
and
cmpsl
adc
add
ret
adc
cmp
adc
sbb
mov
pusha
les
cld
fdivl
cmp
js
loope
daa
imul
and
pop
inc
inc
push
sbb
add
fwait
xor
push
inc
or
push
lret
fmuls
adc
mov
std
ret
cmpsl
ret
outsb
mov
fldcw
int3
push
lea
mov
pop
sbb
adcb
pop
xchg
jge
adc
mov
jle
mov
mov
jmp
jae
ja
mov
push
add
stos
add
rclb
out
bound
aaa
scas
stos
mov
std
inc
call
mov
and
ficoms
sbb
pop
xchg
sub
jl
scas
fwait
jge
stos
fldenv
out
adc
add
cmp
jecxz
dec
mov
cmc
or
pop
mov
lods
xchg
and
pushf
sbb
xor
xchg
daa
addr16
loope
rcll
pop
cmp
leave
jbe
cld
enter
mov
shl
leave
sbb
push
push
push
pop
sbb
nop
inc
stc
pushf
push
das
jle
mov
inc
inc
push
sbbb
hlt
or
dec
cmpb
stc
out
test
adc
sbb
pop
repz
xchg
sahf
int
loopne
int
scas
sub
pop
cmp
je
repnz
and
inc
inc
jmp
loop
sbb
mov
xchg
ret
jo
dec
dec
dec
dec
fcoms
push
gs
jle
mov
cmpsl
and
insl
aas
xchg
aad
pop
inc
lds
lods
push
add
mov
pop
or
bound
shrb
sti
jecxz
adcb
fistps
xchg
loope
pop
dec
fucom
lods
in
popa
insl
jecxz
clc
add
loope
scas
mov
filds
testb
or
sbb
les
jp
ja
or
out
lea
dec
mov
or
sub
je
in
insl
leave
lock
add
stos
fisubl
mov
mov
in
imul
loop
push
test
pusha
addl
out
inc
cmp
shrb
aam
rcll
hlt
iret
lahf
xchg
push
fnsave
push
test
cwtl
adc
scas
sbb
and
mov
adc
sub
sbb
lods
inc
leave
ja
orb
xchg
in
mov
jb
dec
xchg
in
sub
arpl
icebp
cmc
stc
decb
sub
push
insl
jg
pop
enter
pop
cmp
lock
push
xchg
fildl
cmpsl
int
dec
outsb
cwtl
popf
sbb
sti
push
in
or
mov
xor
inc
xchg
dec
int
sub
xor
mov
cmpsb
lds
push
stos
mov
pop
sti
cmpsb
mov
shr
mov
aam
mov
or
xchg
test
sub
je
or
lea
xchg
stos
ljmp
sahf
stos
cli
mull
xor
sti
xchg
je
cwtl
test
adc
imul
enter
pop
xor
pop
sub
pop
jecxz,pt
mov
cmp
orb
mov
add
jmp
cmp
cmp
iret
lods
mov
pop
mov
cli
and
push
out
sub
xor
xor
out
inc
inc
dec
dec
imul
push
fwait
sub
out
mov
xor
mov
test
aad
aaa
push
jmp
and
int3
mov
mov
cmpsb
and
add
scas
ds
mov
mov
sub
ficoms
mov
pop
jns
mov
in
cmp
lods
loop
clc
adc
cmp
xchg
xorl
repnz
pusha
push
data16
out
adcb
std
xor
je
jg
outsl
rolb
insl
sysret
ss
mov
dec
or
rclb
inc
movlps
or
stos
inc
cmp
mov
xchg
add
mov
out
les
ret
dec
movsb
mov
std
jg
mov
or
fadds
add
mov
mov
jo
shrl
mov
pop
mov
dec
cmpb
outsl
call
pop
jae
jb
call
dec
and
xchg
xchg
or
leave
inc
loopne
mov
or
loopne
sbb
scas
jecxz
jecxz
jle
jnp
hlt
pop
les
inc
xchg
mov
ja
test
sbb
mov
int3
cmp
mov
orb
cmp
adc
inc
mov
pop
xor
movsb
call
cmp
cmpsb
into
test
lds
lret
mov
shll
dec
sti
add
cmp
out
clc
mov
in
ret
into
in
or
xchg
push
stc
pop
mov
jb
clc
push
xor
push
flds
pushf
scas
cmpl
imul
push
add
push
push
push
jns
jae
add
mov
dec
pop
lret
jnp
imul
fldenv
insl
adcb
pop
lods
cmpb
push
jle
rol
loop
dec
cmp
pop
jb
stos
ret
enter
adc
hlt
lcall
ss
push
aad
cltd
psubb
repnz
push
push
sub
pop
sbb
mov
dec
imul
mov
mov
sub
push
adc
sub
sub
lcall
sub
mov
bound
add
push
push
adc
ret
movsl
mov
sbbl
in
xor
idiv
cmp
outsl
fsincos
hlt
stc
xor
bound
sub
sbb
sarl
mov
xor
imul
push
mov
pop
call
lret
pop
xor
leave
js
push
jb
nop/reserved
jge
pusha
push
mov
jno
adc
call
jne
inc
mov
cld
push
or
pop
lahf
idivl
pop
mov
sub
js
xchg
xchg
adc
pop
push
push
add
sbb
in
fnsave
xor
sbb
mov
push
lret
lock
mov
ret
sub
push
imul
in
outsl
mov
adc
fisttpll
popa
out
cmc
aas
scas
cmp
push
clc
je
push
popf
imul
iret
addl
das
cmp
sub
mov
sahf
pushf
cwtl
mov
push
mov
mov
insb
sbbl
aad
inc
xchg
data16
int3
fildl
mov
cwtl
out
sbb
in
push
ds
popa
ss
and
and
inc
cmp
mov
fstpl
push
std
dec
das
lea
sar
out
lds
add
dec
sub
sbb
pushf
pushf
fwait
testl
clc
aam
notb
cmp
pop
sub
cmp
fsts
xchg
mov
mov
call
orl
and
lods
xchg
cltd
imul
imul
fcmovnbe
dec
adc
mov
jle
jle
mov
push
mov
je
jp
push
cmp
cmp
scas
mov
mov
jb
rcr
test
sub
cmp
inc
lretw
adc
les
ss
sbb
cli
or
out
and
sbbl
out
add
jbe
fsub
shlb
pop
into
add
xchg
pop
and
pop
add
push
sub
test
shrb
inc
jg
movlps
mov
mov
andb
test
fmuls
cmpsl
lock
mov
sub
out
cmp
in
mov
rolb
push
jg
in
or
fmul
ljmp
push
pop
xchg
push
mov
add
pusha
shl
roll
pop
ljmp
pop
sbb
and
pop
es
ljmp
pop
mov
inc
das
pop
rcll
sub
add
push
stos
sbb
fdivl
dec
xchg
mov
sub
jle
adc
dec
cmpsb
adc
ljmp
adc
add
icebp
cmpsl
xlat
sub
cmpsb
loopne
push
outsl
lods
movsl
stos
fs
mov
sub
and
push
adc
cmp
sbb
pop
mov
push
xor
sub
das
shll
cwtl
sarl
fldenv
mov
xchg
mov
cltd
nop
lock
or
push
leave
cmp
test
ficomps
test
mov
mov
xor
sahf
pop
dec
mov
xor
outsb
and
pop
pop
mov
out
in
mov
cmp
jae
mov
lea
mov
cli
mov
js
mov
push
add
lcall
imul
cmp
mov
andb
addr16
inc
pop
inc
mov
gs
cmp
push
pop
xchg
jno
dec
rolb
lods
or
add
add
cmpsl
mov
mov
cmp
adc
adc
in
lock
push
aaa
fidivs
add
sbb
and
push
mov
xor
lods
mov
jno
xchg
add
aad
push
movsl
add
inc
mov
mov
mov
call
outsl
fwait
cmc
mov
jbe
xchg
sub
mov
sub
gs
bound
mov
mov
aas
inc
cmp
in
push
notb
rcr
inc
mov
outsl
mov
out
addr16
ljmp
add
fcmovu
fwait
popa
mov
je
dec
sbb
and
outsb
movsl
iret
pusha
mov
xor
cmpsb
fs
xchg
push
outsl
push
lret
cmp
or
jl
inc
mov
pop
xchg
jbe
sbb
or
lds
jae
cmp
jp
insl
cmp
xor
test
pop
dec
les
mov
sub
push
and
sbb
ror
shl
sbb
push
das
pop
pop
outsl
imul
leave
xlat
leave
add
into
or
scas
mov
mov
imul
adc
and
push
fs
in
mov
pop
aad
dec
aad
shl
ds
vmwrite
jne
dec
nop
xor
fldcw
ret
mov
bound
rcr
mov
pop
inc
repz
ja
lahf
xor
push
mov
out
mov
lea
xor
ss
sbb
lret
hlt
in
inc
and
sub
pop
jno
loope
xor
lcall
push
aas
nop
mov
fwait
xchg
mov
adc
mov
or
loope
pop
adc
mov
xchg
ss
xor
out
out
loope,pt
and
mov
xchg
and
stos
enter
push
mov
aas
or
clc
repz
push
push
lret
or
mov
or
ret
xorb
ret
out
repz
icebp
or
sbb
shrb
testl
rcl
jg
jle
mov
push
mov
jle
outsl
mov
inc
movb
jge
icebp
pop
mov
push
dec
cmp
mov
pushf
cltd
call
clc
push
negl
mov
lcall
inc
or
in
loop
shll
loopne
fisttpll
mov
ljmp
and
je
xlat
mov
aad
pop
mov
and
ljmp
jo
cmpsl
add
xchg
pop
or
jmp
mov
outsb
sub
mov
sbb
adc
pusha
cltd
repnz
sub
pop
jb
jne
inc
stos
fimuls
movsb
out
sbb
push
popa
es
loopne
lods
cmp
push
out
arpl
xchg
dec
les
std
adc
jns
sbb
scas
fldenv
sbb
inc
int
data16
adc
pop
xchg
imul
sbb
je
dec
mov
sub
or
pop
mov
and
push
sub
sysret
or
mov
in
pop
push
scas
stc
bound
cmp
jne
mov
in
jge
jne
repnz
inc
into
pusha
dec
and
mov
mov
xchg
add
outsl
in
test
push
mov
xchg
mov
push
out
aad
adc
fcmovu
mov
cltd
mov
int3
adc
decb
orb
dec
push
rcl
sub
xchg
mov
add
fisubl
inc
repnz
arpl
data16
push
xor
insw
pop
clc
lods
cli
or
flds
and
fs
loope
shr
pusha
mov
push
pusha
scas
rcrb
dec
in
enter
xor
xchg
sub
jmp
testb
xchg
xor
adc
stos
adcb
test
jle
pop
and
in
popf
hlt
in
xchg
cmp
pushf
pushw
lcall
outsl
shll
xchg
stos
or
out
int3
lret
cmp
dec
xchg
xchg
sbb
cs
adcl
shrl
stos
out
adc
add
jmp
mov
xorb
mov
stos
sbb
arpl
addr16
cwtl
mov
pop
jmp
xor
adc
push
and
mov
mov
aas
mov
or
fpatan
mov
mov
les
aaa
and
fdivs
shl
cmp
mov
dec
mov
imul
inc
cmpsb
and
test
cmp
shll
jmp
add
mov
sahf
mov
and
jmp
xor
cmp
mov
mov
pop
ja
stos
sarl
lock
fisubrl
adc
cli
aas
fisubrs
andl
in
pop
ljmp
mov
popf
inc
mov
scas
push
or
outsl
or
jne
cli
add
test
adc
and
inc
fadds
fneni(8087
shlb
cld
popf
push
pop
pop
insl
in
mov
dec
sub
add
mov
sbb
or
int3
in
inc
add
out
mov
push
cmp
add
or
dec
xor
jge
js
jle
pop
mov
incb
rcrl
lea
loop
adc
lret
xchg
add
cltd
pop
push
popf
inc
call
xor
xor
and
out
mov
hlt
sti
cld
xor
inc
dec
sbb
inc
mov
inc
mov
sub
sub
xchg
or
outsl
adc
out
ds
decl
addr16
inc
aam
jbe
sti
cmp
mov
movsb
and
into
mov
pop
fs
jl
das
aam
mov
jbe
nop
hlt
out
push
fdivrl
mov
rorl
out
cld
int3
mov
ficoml
outsl
aam
lcall
inc
dec
dec
fldl
cmpl
call
sbb
pop
jb
xchg
add
sbb
mov
out
jg
shrl
sahf
imul
mov
fmul
fcomi
call
mov
xor
clc
popf
insl
ds
iret
mov
bound
adc
push
dec
xchg
stos
jmp
push
sbb
inc
sbb
adc
insl
cs
xchg
and
inc
lods
jmp
je
and
sbb
mov
call
mov
push
pusha
add
stos
inc
aas
pusha
jb
dec
push
mov
fstl
lcall
and
jne
leave
movsb
out
mov
xchg
addr16
push
in
cli
xor
inc
and
xor
sbb
dec
push
cmp
insl
mov
xchg
lock
mov
popa
ja
sub
fcomip
dec
inc
or
loope
mov
ret
pusha
or
or
lea
jns
or
cmpsb
movsb
stc
mov
inc
sbb
sahf
jbe
test
loope
sbb
mov
lcall
fwait
and
dec
mov
cmpsl
mov
lods
mov
aam
pushf
cmpsl
jno
push
xchg
push
mov
fdivl
in
add
push
xchg
sub
add
jo
in
inc
in
jmp
mov
adc
in
mov
mov
adcl
jge
push
add
cmp
sub
stos
pop
add
shlb
xchg
test
sbb
cmpsb
inc
clc
dec
xchg
movsl
jo
mov
adc
cmp
push
cmc
mov
sbb
out
jb
push
mov
mov
mov
cwtl
iret
outsb
sub
inc
mov
dec
or
jle
xchg
add
mov
pop
xor
test
mov
psrld
cwtl
repz
shll
xor
dec
roll
dec
mov
fcoms
inc
and
jns
dec
push
mov
dec
scas
loope
jbe
mov
pop
mov
das
stos
filds
add
jp
lock
add
xchg
mov
rcll
loope
fwait
jl
in
js
pop
jge
jo
fsubrs
lds
out
rcr
dec
fsubrl
lods
sbb
and
mov
hlt
shrb
inc
mov
push
fildl
adc
in
mov
mov
fsubrl
mov
rol
cmp
add
mov
fisttpll
pop
dec
jge
shl
mov
aad
fucomip
repnz
cmpsl
inc
add
add
je
es
into
mov
push
jg
repnz
mov
cmp
push
jbe
adc
sub
adc
in
je
xor
icebp
test
jmp
pusha
jae
cmp
fidivs
daa
mov
cmpl
popf
mov
ret
inc
push
std
jbe
jl
pop
fadd
pop
jo
lret
sbb
sub
in
sbb
mov
cmpsb
out
mov
and
ds
dec
mov
mov
mov
push
xchg
enter
lods
popa
ret
mov
xlat
icebp
test
movb
js
xchg
enter
rcl
pop
fld
jbe
mov
pop
mov
dec
adc
cs
dec
sbbb
gs
stc
stos
mov
mov
cltd
dec
popf
or
mov
stos
add
mov
jns
jbe
lea
add
shl
test
mov
dec
or
sub
aam
xchg
mov
cld
cmpsl
jmp
jne
stc
nop
jb
push
faddl
decb
dec
and
inc
xchg
das
mov
arpl
scas
cld
call
outsb
push
push
fimull
gs
bnd
and
jmp
adc
cmp
push
out
cmovo
stc
sub
inc
xchg
dec
push
add
mov
pop
adc
add
pop
jae
or
in
movsl
nop
or
xor
mov
test
sub
inc
or
sub
out
jae
fs
mov
push
fbld
pop
mov
insl
imul
inc
orl
test
push
or
loop
insb
or
sbb
xorl
movsl
pop
jp
add
das
scas
in
jnp
jl
shlb
xchg
clc
adc
pop
mov
mov
aam
repnz
mov
pop
gs
movsl
cmp
movsb
stos
mov
xor
sbb
xchg
pop
fwait
sbb
stc
or
mov
cmp
or
outsb
push
fucomp
fiaddl
shl
divb
pop
adc
mov
aas
xor
jg
movsb
xchg
mov
adcl
test
xor
sub
sbb
jno
cwtl
xchg
mov
push
push
rorb
fstps
call
test
inc
jae
in
mov
call
mov
adc
lock
or
std
out
adcl
and
jp
fcmovu
insb
in
out
sbbb
sbb
fs
xor
ljmp
sub
xor
ffreep
xchg
nop
addb
movsb
or
mov
pop
mov
cwtl
popa
popa
xchg
ss
in
inc
loope
cmp
mov
into
pop
ret
mov
and
add
jne
data16
aam
mov
mov
int3
cli
repz
mov
mov
mov
fwait
inc
pop
outsl
inc
loop
xor
inc
lret
pop
dec
push
jo
add
repz
sub
sbb
jbe
clc
lock
popa
popa
push
push
cs
ljmp
enter
push
dec
mov
testb
ret
bound
dec
into
mov
jns
mov
and
test
lods
jmp
mov
es
dec
fistpll
dec
mov
jl
cmp
sbb
ljmp
rorl
std
icebp
pop
xlat
dec
in
addr16
int
inc
jp
mov
xchg
push
iret
lcall
fnsave
inc
inc
scas
stos
or
lret
jge
pusha
pop
testl
inc
add
push
insb
pop
rcl
jb
jle
or
clc
lods
enter
add
inc
xchg
mov
lret
mull
push
and
into
int
push
outsb
and
arpl
cmp
cmc
mov
hlt
cs
outsb
mov
xor
cltd
bound
xchg
or
and
mov
add
lock
xchg
popf
jecxz
push
push
stos
xor
mov
inc
inc
int3
dec
dec
push
loop
cmc
add
mov
jbe
mov
out
arpl
add
dec
jmp
int
mov
lcall
mov
mov
adc
jg
js
outsl
push
or
repz
dec
lahf
add
arpl
push
aad
pop
scas
push
dec
sub
and
leave
shr
mov
add
dec
sub
loop
xor
jne
iret
xor
pop
out
lret
lock
push
hlt
jmp
and
roll
lcall
cmp
sub
push
sysexit
and
cltd
mov
dec
dec
in
movb
imulb
or
daa
adc
movsl
sarl
xor
cmp
mov
xor
jbe
testb
scas
cmpsl
insl
push
push
ret
or
iret
das
cmpl
jb
mov
mov
aam
jge
add
add
pusha
lods
sub
pop
push
fldt
cmc
dec
fsubrs
dec
leave
ret
lcall
out
adc
xor
addr16
inc
xor
test
xor
loop
incl
add
outsb
cld
or
add
and
je
shl
cwtl
in
push
cmp
mov
leave
jg
adc
adcl
mov
cld
mov
loope
cli
es
xlat
mov
pop
sbb
call
ror
ret
jmp
add
xor
adc
cmp
add
or
xchg
jge
mov
aas
xchg
jle
leave
movsl
stos
mov
push
cltd
adc
or
mov
lds
mov
cltd
aaa
inc
aas
mov
cs
or
xchg
adc
frstor
mov
inc
pushf
int3
sti
out
push
out
in
out
adc
mov
sub
lret
push
cmpsl
clc
test
adc
stos
sbb
pop
enter
ljmp
mov
leave
je
pop
arpl
xor
dec
or
adc
ror
sub
sbb
adc
sti
rorl
gs
sbb
call
movsb
lret
frstor
add
xchg
push
push
push
stos
and
fs
pop
ret
push
cld
cmp
hlt
pop
int
cmp
das
sbb
les
xchg
cmp
stos
pop
lock
stc
out
sub
pop
daa
jl
mov
jmp
push
sahf
lret
rcll
roll
shl
push
jecxz
test
test
xchg
testl
test
shrl
popf
jp
shll
fildl
jns
jne
cmp
fadds
sub
xchg
and
fwait
in
rcrl
es
jle
dec
xchg
and
dec
aad
or
sub
cmp
shl
pop
cmp
movsl
notl
dec
and
and
movl
fstps
insb
cmc
neg
and
push
mov
out
cmp
adc
add
scas
aam
cmc
lret
idivb
andl
ljmp
stc
dec
sbb
mov
dec
fld
xor
jge
mov
add
fcoml
jp
push
mov
mov
insb
push
push
push
pop
lods
mov
xchg
mov
stos
ficompl
xor
mov
xchg
xor
pusha
rcr
fs
es
pop
test
fsts
pushf
rorl
inc
incb
sbb
adc
fisttpll
dec
imul
pop
and
mov
or
or
repz
xchg
dec
popf
add
inc
dec
pop
and
inc
iret
cwtl
and
sahf
push
mov
scas
aaa
adc
sub
loop
sbb
push
psubusb
mov
fists
sarl
push
lock
movsb
dec
sub
xchg
xchg
orb
movsb
bound
outsl
subl
jnp
in
stos
lock
mov
jmp
mov
imul
pop
and
jg
icebp
andl
jo
cmp
repnz
xor
fwait
push
arpl
xlat
inc
or
test
mov
cli
rol
push
imul
push
repz
or
dec
out
notb
lcall
aad
and
pop
jb
scas
mov
cmp
sub
ret
push
inc
mov
cmpsl
nop
dec
mov
adc
push
inc
jecxz
xchg
and
out
fstpt
sbb
shrb
out
fldl
ja
mov
dec
inc
sub
clc
mov
pop
or
aaa
xchg
scas
aam
in
xchg
mov
lds
popf
icebp
insb
mov
jge
aam
or
dec
mov
les
dec
xchg
jb
shlb
pop
out
cmp
lret
rcrl
adc
nop
or
loope
dec
mov
inc
mov
ja
pop
aaa
out
out
or
xchg
outsb
aaa
pop
fldl
int3
sbb
jne
or
mov
and
aad
pop
xchg
dec
xchg
pop
nop
fidivs
sbb
push
dec
add
inc
dec
lea
jl
sub
js
cwtl
fxch
inc
neg
adc
rcrb
jmp
mov
jg
add
std
js
pop
nop
test
and
and
arpl
in
int3
mov
xchg
lods
lret
xor
pop
cli
sbb
jae
mov
xor
pop
bound
jb
mov
fstps
aad
adc
movsb
popf
dec
mov
mov
mov
jb
por
lods
cmp
inc
inc
popa
mov
mov
lret
jbe
cld
cmpsb
sbb
cmp
popl
jl
repz
xacquire
movsl
les
xor
adc
arpl
sub
xor
push
jl
pop
push
cli
mov
mov
negl
lea
or
out
cmp
sub
mov
in
mov
pop
shlb
imul
jmp
mov
fdivrl
cmc
jns
pushf
rclb
xor
jecxz
add
div
loopne
inc
sarl
mov
sub
test
inc
fmull
test
jl
push
xchg
out
int
sub
add
xchg
jmp
adc
xchg
pop
loop
push
out
dec
lock
mov
sbb
rclb
and
rcr
scas
int3
fistps
dec
xlat
xor
addl
jnp
sub
repz
adc
lock
xor
dec
seto
sbb
dec
add
xchg
mov
mov
cmp
xor
xor
jecxz
iret
and
sub
and
and
mov
mov
mov
mov
sub
das
mov
inc
push
test
xor
xchg
lock
sbb
or
mov
out
sbb
cld
in
mov
add
or
cmpsb
add
xchg
cmp
xchg
lret
mov
mov
out
add
movsl
xor
out
and
adc
mov
cld
shlb
dec
out
cld
sub
xchg
or
int3
sbb
add
xor
push
insl
rorl
fisubs
jae
push
dec
icebp
in
jle
jmp
outsb
jmp
push
jne
clc
lahf
adc
and
loope
lock
cli
ss
arpl
fwait
mov
leave
or
les
pop
mov
stos
pop
cmp
mov
testb
scas
adc
not
push
outsb
dec
cmp
pop
xor
subb
dec
dec
and
rolb
sahf
subb
mov
jns
pop
pushf
jne
out
pushf
push
test
or
jecxz
lods
and
rcrl
cmp
push
sbb
dec
xchg
rcll
cli
scas
out
adc
je
xor
sbb
shll
int3
das
in
pusha
and
into
movsl
xlat
inc
popa
hlt
cld
xor
and
adc
mov
dec
faddl
inc
push
or
lret
dec
xchg
mov
xorb
clc
scas
jmp
or
pop
sbb
lahf
cmp
mov
icebp
not
sub
adc
test
pop
hlt
lods
mov
add
mov
jo
push
inc
jmp
sbb
ret
xchg
call
jp
out
pop
cld
je
mov
nopl
cwtl
adc
iret
push
or
dec
pop
arpl
and
lcall
mov
cmp
cmpsl
cmp
add
xchg
int3
mov
sub
push
enter
clc
movsl
and
mov
fstl
clc
addr16
icebp
pop
daa
pop
cmp
inc
jae
inc
adc
aaa
aam
shrl
or
stc
push
imul
jns
mov
pop
ret
xchg
inc
arpl
mov
mov
add
mov
cwtl
xor
cmp
cwtl
sbbb
enter
cmp
add
inc
leave
jmp
mov
es
sahf
subl
popa
push
imul
or
xchg
push
gs
pop
add
in
stos
xor
or
xor
xor
inc
daa
cld
popf
push
mov
int
jne
push
mov
push
cmpsb
dec
inc
lock
shlb
inc
sbb
mov
sbb
cmp
pop
test
out
ffreep
sarl
out
repz
adc
xchg
xchg
xor
data16
popf
shrl
fisttpl
mov
fmull
mov
mov
cmc
pop
enter
test
movsl
ss
cmc
bound
data16
sbb
sbb
jno
popa
aam
xchg
fcmovu
loop
loopne
orb
cmpl
out
and
push
xchg
ja
mov
xlat
jmp
dec
mov
push
or
les
movsb
push
inc
imul
insb
nop
push
pop
mov
or
adc
data16
or
jle
mov
push
lret
andl
pop
mov
mov
mov
pop
aad
fldcw
xchg
mov
add
mov
pop
mov
ljmp
sbb
cmpsl
popa
mov
icebp
add
cmpsl
jg
sbb
jmp
int3
sub
and
mov
in
movl
xchg
cmp
sub
pop
ret
repnz
leave
push
gs
mov
jg
dec
int3
cmp
pusha
leave
cmp
jecxz
jg
mov
mov
or
inc
in
cmc
icebp
sub
xchg
lods
mov
push
xor
cmp
pop
dec
and
std
or
jno
adc
pop
mov
xlat
mov
xor
js
jge
lahf
lods
ja
int3
mov
and
test
mov
cld
adc
pop
sbb
je
es
mov
push
enter
and
push
sub
xchg
cmp
fisttps
mov
out
mov
inc
movl
sub
or
lods
mov
sub
vandnps
xor
loopne
push
dec
cmpsl
stc
popf
movsb
clc
cmpsb
xor
jp
enter
jae
lock
push
rol
xchg
pop
jg
xchg
xor
mov
sbb
dec
xlat
inc
push
cmp
xchg
loope
jp
add
sti
cmpb
push
pop
psllq
ljmp
rcrl
in
imull
mov
cmpl
icebp
jl
push
std
mov
xchg
jae
mov
push
stos
fnstenv
pop
aaa
jne
fistpll
push
decl
ret
nop
les
aad
out
jmp
jne
and
popf
push
push
in
dec
ss
jns
xor
mov
push
and
dec
mov
les
adc
adc
xor
or
fucomip
cs
or
in
stos
daa
sub
stos
jmp
xchg
jge
test
icebp
sub
notl
imull
mov
arpl
and
repz
jl
sub
xchg
clc
clc
loop
negb
loope
mov
push
andl
xchg
adc
cltd
inc
lcall
imul
in
nop
xchg
aad
test
dec
fadd
popa
push
mov
or
shl
add
jecxz
sub
pop
outsb
lods
testb
ljmp
decb
inc
add
push
push
lea
add
stos
jmp
mov
mov
cli
add
cmp
or
dec
cmp
or
pop
xlat
dec
pop
lds
xor
test
arpl
shlb
sbb
adc
sbb
nop
inc
pop
push
xor
push
pop
mov
lret
lea
movsb
fistpll
mov
aaa
mov
xchg
ss
push
xchg
xchg
dec
mov
push
pop
sub
fs
push
out
add
pop
mov
popf
push
repz
stos
push
cli
aam
xor
or
out
nop
cmpsl
mov
push
movsl
mull
sbb
jg
in
xchg
add
lcall
or
mov
sub
cltd
push
xchg
push
out
psubsw
lcall
cmp
fsubs
mov
xchg
cmpsb
push
mov
jg
pop
jno
jmp
std
outsl
ficoms
dec
stos
pop
lds
mov
cmp
test
fmull
sub
fnstsw
sub
icebp
stc
push
mov
or
or
in
cmp
ficomps
pop
js
jp
jb
xchg
es
cmc
mov
push
pop
adcb
dec
add
cmp
roll
mov
jle
lret
test
mov
ret
dec
sub
pop
xor
mov
mov
nop
mov
pop
data16
ror
xor
popa
dec
aam
xchg
sub
or
add
in
shl
outsl
out
je
sahf
xor
pop
test
push
mov
dec
int
mov
xchg
jecxz
sub
sbb
xchg
outsl
std
das
xchg
shrb
aam
ret
cmc
insb
call
xchg
pop
sub
lret
in
scas
cmp
inc
rcrb
fmuls
iret
ficoml
mov
not
mov
or
fwait
pop
pop
sub
dec
mov
outsl
pop
lods
mov
push
ja
and
in
sahf
hlt
sbb
stos
adc
jo
and
arpl
enter
leave
cmc
es
imul
inc
and
or
push
lret
push
add
jmp
xor
repnz
mov
sahf
leave
xor
pusha
sarl
push
pop
xor
push
cmp
shlb
in
je
test
ret
ds
inc
ja
sbb
scas
sub
aas
adc
jmp
jns
adc
and
insl
aaa
stc
fidivrl
into
inc
scas
es
pop
lret
push
lea
lock
sbb
enter
aad
stos
mov
mov
stos
daa
mov
add
jns
cmp
lods
or
or
test
xchg
rcl
loope
mov
mov
outsl
xlat
inc
jae
or
push
cli
mov
pop
icebp
cmpsb
outsl
test
ficoms
lahf
lods
shlb
xor
and
jne
cmp
call
lock
push
test
popl
stos
lcall
inc
mov
lret
int3
fsubrl
les
fisubl
outsb
xor
jmp
mov
incl
int
aaa
mov
push
je
xor
std
sti
adc
sbb
outsb
xor
clc
or
adc
mov
in
mov
int3
jbe
stc
pop
push
outsl
sub
lock
pop
enter
inc
mov
push
mov
repnz
nop
scas
incb
sub
out
iret
outsl
test
sti
sarb
xchg
cmp
jno
jnp,pt
aad
cmpsb
sub
add
ret
sar
dec
das
mov
dec
pop
sub
xchg
sbb
inc
jbe
jbe
xor
es
push
mov
in
mov
pop
pop
add
mov
stos
cs
aas
dec
rorl
xor
jle
clc
jge
call
xor
lods
daa
pop
mov
add
loop
or
xchg
add
sarl
and
arpl
dec
popl
pop
imul
push
movl
dec
ss
popf
out
ds
lret
scas
movsb
es
xchg
or
hlt
fcmovnb
dec
xlat
scas
mov
fidivl
push
or
aam
aaa
cmc
andb
aam
cltd
leavew
in
out
jbe
das
and
dec
sbb
sbb
rcrl
adc
out
inc
lret
movntq
mov
cwtl
cld
fwait
cmp
mov
les
bound
lods
xor
dec
js
xlat
push
push
repz
xor
pop
pop
cmp
jg
cmp
cmp
test
lcall
out
scas
loopne
movaps
adc
shlb
shll
xchg
or
xchg
icebp
mov
es
jmp
aaa
mov
adc
and
dec
in
and
mov
shll
lahf
fwait
cmc
jge
sbb
call
xor
mov
les
pop
addr16
and
adc
jmp
pop
jae
roll
popf
xorl
sub
jle
xor
les
dec
push
fldt
clc
and
lods
ss
flds
scas
test
call
shl
out
mov
dec
mov
pop
jo
sub
mov
iret
dec
sbb
push
icebp
fsubrl
shll
or
mov
xor
xchg
sub
loopne
sub
jl
nop
ljmp
cmc
aas
scas
in
cmp
es
stc
mov
and
xor
sub
cs
shl
rcll
mov
movsb
jmp
push
test
mov
aas
and
in
sbb
pop
or
add
in
cmp
fisttps
leave
outsb
ljmp
pusha
andb
sub
es
icebp
out
add
pushf
push
mov
xchg
lret
out
in
cmc
fwait
push
pushf
shlb
scas
mov
adc
lret
lret
push
fwait
mov
lret
xlat
lds
push
mov
inc
das
jo
clc
cs
into
inc
pop
call
push
add
mov
call
mov
xchg
cmc
lods
dec
mov
hlt
mov
push
fisttpl
mov
mov
or
imull
sti
mov
xchg
aas
jmp
mov
and
push
sub
movsl
sbbb
push
leave
mov
mov
sti
ds
mov
sub
push
orb
ficompl
call
popa
or
sbb
int
lea
and
add
add
sbb
sub
imul
xchg
or
push
sbb
clc
adc
pushf
pop
cmpsb
fcoml
cmp
dec
xor
cmp
or
dec
jg
inc
mov
ja
pop
cwtl
sbb
inc
repnz
pop
xor
in
out
mov
sarb
inc
adc
cmc
lcall
push
xchg
or
mov
jmp
aam
hlt
sub
stos
aas
mov
ficomps
cmc
das
rolb
push
icebp
ss
xchg
jns
fdiv
imul
or
lahf
shll
xor
cmpsl
or
sti
push
daa
jg
jo
jno
jl
sbb
mov
test
scas
hlt
fs
pop
mov
xchg
std
lret
es
jmp
rcll
pusha
sub
popa
cmpsb
sub
jne
pop
clc
and
ror
mov
pop
movsb
mov
ljmp
stos
inc
sarl
arpl
dec
jbe
rolb
ror
aas
je
adc
xor
cmp
push
cld
mov
insb
pop
js
jecxz
jo
call
sbb
test
sbb
mov
push
or
test
shr
leave
cmc
cltd
lods
rorb
pop
mov
push
mov
sub
push
es
jne
lret
loopne
divb
loope
mov
lods
xchg
ss
imul
rcl
rep
mov
aam
pop
cmp
xchg
sbb
sub
jb
into
fs
andb
dec
mov
loope
adc
cmp
insl
mov
xor
sbb
nop
pushf
xlat
stc
adc
std
addr16
adc
and
repz
add
cmp
lds
loope,pt
pop
loopne
mov
xor
or
and
movsl
or
mov
xchg
pop
inc
mov
ljmp
jnp
call
test
aas
lock
test
jmp
ja
cwtl
mov
push
fistpl
add
insb
mov
pusha
mov
aas
xchg
fsts
hlt
mov
mov
lcall
test
sbb
push
and
push
ljmp
cmp
push
out
bound
push
pop
adc
or
xor
jecxz
mov
insb
aas
inc
stos
cmp
lds
loope
jbe
test
fldt
pop
push
jg
adc
and
push
data16
mov
pop
pop
pop
xor
push
push
in
mov
jecxz
push
filds
lea
aad
out
cmp
xor
test
sub
push
fmul
cwtl
sub
jnp
cwtl
xor
loope
cmp
in
icebp
cld
out
inc
sbb
mov
fmul
outsb
stos
jecxz
sbb
add
lcall
lret
fs
je
add
gs
or
mov
mov
mov
fnstsw
mov
lds
insl
jae
test
mov
adc
pop
gs
jb
xchg
and
xchg
sbb
mov
mov
movsb
sbb
push
out
cmp
stc
fiadds
sbb
insb
loope
fnsave
sub
jecxz
inc
push
pop
push
cs
mov
adc
xchg
jp
out
or
popf
adc
inc
ljmp
inc
jo
clc
dec
cmpl
cmp
jl
add
dec
or
pop
xchg
js
cwtl
mov
xchg
jne
fisubs
mov
or
das
in
subb
pop
push
push
mov
subb
xor
mov
sub
in
jmp
push
sbb
aam
or
arpl
mov
into
fsubs
test
jbe
aam
cld
fiaddl
push
fdivl
mov
ss
sbb
and
sub
movsb
lcall
xchg
das
mov
sub
sub
add
ret
repz
inc
fsubs
mov
inc
negl
and
inc
mov
mov
push
push
mov
adc
pop
jno
pop
jp
movsb
and
xchg
into
or
rcll
sbb
test
out
jne
out
and
adc
test
mov
out
pop
lcall
orl
leave
shlb
and
fld
jge
mov
inc
xor
push
call
sub
sub
in
in
jg
jmp
inc
sahf
shrb
dec
sbb
data16
fstpl
mov
popa
clc
mov
das
shlb
pop
mov
lods
mov
rorb
mov
js
int
jb
mov
arpl
cmp
jg
aam
imul
mov
add
adc
outsb
loope
dec
lds
jge
lock
scas
jb
pop
cltd
sub
imul
dec
lods
add
cmp
mov
sbb
dec
pop
inc
cmp
loop
js
int3
jl
jno
or
mov
or
lods
loope
add
icebp
xchg
cwtl
std
push
bound
xorl
jns
setae
outsl
or
cmp
pop
jmp
dec
adc
aam
popf
xor
lock
cmpsb
push
pop
cmc
bound
stos
out
mov
insb
mov
xchg
std
lcall
enter
jnp
hlt
test
jecxz
mov
mov
xchg
aad
sub
push
cli
jnp
push
add
fstps
or
mov
pop
pop
shl
cmp
or
iret
cld
in
outsb
rcll
and
xchg
loope
stc
in
movsb
pusha
sub
add
fcmovbe
jno
xchg
lea
cld
loop
xor
fisttpl
insb
dec
pop
or
loopne
pop
sub
fistpll
repz
into
pushf
jno
adc
mov
rorb
adc
mov
sarl
rcrl
push
cmp
pushf
sub
xchg
push
jg
test
push
push
add
addb
fld
dec
in
shll
pop
sbb
in
ljmp
scas
in
inc
dec
pop
imul
xchg
mov
sub
push
scas
bound
enter
or
int
cmp
xchg
jmp
sub
adc
and
xor
and
xchg
pop
add
into
out
sbb
jae
jae
adc
repnz
xor
pop
pop
or
ret
scas
mov
push
sub
jge
jl
add
repnz
jge
xchg
jno
jl
call
mov
stos
out
das
push
das
xor
push
pop
das
test
inc
cwtl
ret
in
or
add
pop
cmp
adcb
inc
rep
in
mov
cmp
push
stos
fs
insl
or
int3
dec
push
jl
cmp
xlat
lret
pop
cmpsb
bound
cmp
dec
push
and
outsb
and
fsubrs
add
test
fdiv
push
mov
xchg
jl
jge
repnz
xchg
lods
xor
add
add
xchg
shlb
jo
aaa
mov
xor
push
stos
xchg
cmp
ja
xor
xor
xor
insl
sub
lea
sub
or
enter
icebp
pop
mov
sar
and
dec
dec
sti
hlt
xchg
inc
test
repnz
fucomp
or
subl
mov
xchg
sar
cmp
icebp
and
negl
out
pop
sbb
push
dec
inc
xchg
jl
cmp
sub
ds
jge
adc
and
mov
out
xchg
stos
jae
idivl
repz
shlb
push
xchg
outsl
cmc
orb
add
inc
js
out
cli
in
stc
push
shl
push
cltd
dec
sbb
adc
pop
int3
sar
push
and
neg
nop
adc
das
cmp
cld
clc
into
sbb
int
sbb
lahf
mov
fiadds
rcll
out
inc
rorb
psrld
push
sub
and
cmpsb
and
flds
stc
mov
adc
mov
cmpsb
sub
jmp
out
incl
dec
inc
mov
imul
leave
sub
adc
jmp
roll
pop
lods
leave
insl
add
inc
js
sbb
int
orb
mov
push
pop
shlb
mov
adc
scas
ret
mov
xchg
push
pop
cmovs
scas
jmp
lahf
fs
fidivrs
rcr
ljmp
loope
push
or
enter
xchg
and
pop
in
push
clc
jbe
mov
cmp
incb
testb
daa
push
xor
or
mov
mov
jno
dec
test
data16
out
stc
int
cs
fstl
loopne
out
leave
xor
insb
and
dec
js
lret
inc
clc
push
cmpl
insb
and
cmp
push
xor
fldenv
xchg
pop
stc
push
arpl
rorl
std
popf
xor
inc
stc
aam
mov
pop
mov
cmp
sub
add
scas
adc
rolb
mov
jp
and
icebp
aas
out
insb
pop
rolb
mov
adc
jp
fwait
getsec
popf
lods
and
arpl
fildll
je
push
cmp
lcall
jno
mov
test
lahf
add
outsl
fisubrs
bnd
sbb
in
or
and
sarl
das
dec
mov
out
push
lds
ja
xor
pop
xchg
test
and
loopne
sub
dec
iret
fisttps
dec
pop
sbb
fsubrl
mov
inc
adc
dec
sbb
sub
jne
insl
into
fsubrl
lahf
jle
sub
mov
test
fisubs
sub
inc
in
cwtl
int
test
lret
jl
lea
test
adc
mov
add
inc
not
adc
cmp
sbbb
and
xchg
pop
cmp
push
fmuls
cmp
pop
or
push
mov
and
imul
scas
xchg
adc
push
les
pop
cli
xor
xor
dec
lahf
popa
insl
sbb
xchg
sub
push
jp
int
jnp
mov
cmp
xor
push
ficoml
rorl
pop
mov
stc
cmpsl
pop
lds
push
xorl
movsl
cs
sahf
repnz
shrl
rcrb
adc
push
dec
adc
mov
addr16
mov
imul
es
xchg
cmc
jo
icebp
in
push
mov
inc
jp
not
cltd
and
cmpsl
daa
xchg
xor
push
inc
aaa
jno
inc
mov
shl
dec
icebp
or
and
dec
dec
pop
repnz
loope
repz
movsl
idivb
outsb
out
imul
fisubrs
dec
jecxz
add
inc
aas
fbstp
mov
and
out
lret
push
pop
xchg
lods
shr
outsl
add
inc
es
and
jns
std
cld
arpl
pop
fidivs
cmp
vcvtsi2sdl
bound
mov
into
mov
sbb
out
sub
inc
data16
aam
sbb
inc
or
dec
iret
ffreep
pop
mov
adc
adc
out
call
mov
neg
call
adc
and
cmp
xchg
xchg
lea
mov
into
push
mov
and
sbb
mov
xchg
scas
jge
ss
inc
add
adc
adc
scas
and
lahf
icebp
sarl
sub
dec
in
orl
push
icebp
jmp
adc
xchg
cld
mov
inc
mov
fadd
shr
dec
and
aaa
clc
adc
inc
hlt
roll
aaa
lahf
adc
mov
outsl
aas
into
mov
shr
push
lret
jg
stc
dec
mov
lea
jns
ja
ror
jg
orl
fs
jle
push
adc
xchg
addr16
out
xlat
addr16
or
ja
seta
mov
addl
jns
pop
cwtl
mov
int
ds
mov
adc
dec
pop
aas
fnstcw
cmc
xor
call
icebp
push
cmp
add
sbb
shll
jle
icebp
push
sti
inc
pop
ljmp
shr
fistl
dec
cltd
rolb
mov
jno
xor
pop
cmpsb
clc
movsb
or
sub
xchg
mov
pop
mov
cmp
clc
aad
sbb
nop
push
test
das
mov
fiaddl
rcll
test
or
stc
xor
xchg
push
jns
leave
sti
hlt
or
sahf
jle
lcall
adc
shll
dec
lods
sbb
jmp
xchg
xor
repz
lahf
mov
insl
data16
mov
jae
das
inc
jbe
inc
out
xlat
js
fdiv
jnp
imul
fidivrl
mov
jle
jne
xor
repz
jno
aam
lds
imul
add
mov
pop
adc
lcall
adc
xor
jb
fadds
lock
pusha
cmc
pop
pop
je
mov
fdivr
jg
lahf
xchg
mov
stos
cmp
out
cmp
push
cmp
fstpl
dec
andl
xor
add
repz
shlb
test
popa
xchg
jl
ret
xchg
outsl
out
mov
out
mov
sarb
clc
fldenv
repnz
xor
pusha
imul
dec
sbbl
dec
inc
fists
add
and
iret
stc
insl
mov
pop
sbb
ljmp
or
scas
mov
lods
fs
cld
mov
inc
push
add
ja
jns
pop
ljmp
inc
outsb
jmp
ficompl
mov
out
mov
mov
add
dec
mov
mov
jg
jbe
mov
mov
imul
in
filds
fildll
iret
lahf
pop
mov
adc
dec
inc
mov
icebp
sbb
xchg
xchg
lds
xchg
scas
sti
scas
rorb
clc
movsb
inc
aaa
out
sub
jp
mov
loope
mov
rcrl
ret
scas
mov
mov
lods
in
test
or
sbb
call
stc
mov
and
pusha
sub
pop
mov
rcr
jmp
cmp
out
repz
xchg
lds
movsl
pop
in
mov
xlat
xlat
data16
cmp
mov
adc
xchg
lea
mov
les
cmp
cmpsb
push
lods
stos
jns
xchg
push
ja
rsm
mov
xor
pusha
dec
jecxz
loop,pt
mov
aaa
cmp
fnstcw
loopne,pn
fcompp
pop
sbb
mov
inc
push
pop
mov
mov
mov
xchg
adc
xor
xchg
xor
or
sbb
fs
lret
jge
xor
loopne
mov
imul
testl
fwait
mov
adc
jno
cmpsb
ds
push
das
lret
mov
push
adc
icebp
fcompl
rcrb
int3
cmpsb
scas
loop
xchg
fisubs
or
repnz
pop
cmp
out
addb
std
push
xor
xchg
int3
jl
les
inc
bound
cmpsb
inc
mov
mov
inc
mov
push
iret
je
fnstenv
and
test
and
cs
ja
ret
xchg
movl
sbbb
jmp
mov
notl
pusha
adc
sbb
sub
or
or
adc
pop
les
mov
loopne
sbb
dec
cmp
mov
mov
pop
lods
and
mov
dec
stc
aaa
mov
mov
ss
insb
jg
outsl
cld
cwtl
fdivrl
hlt
dec
inc
ds
leave
cmp
iret
hlt
add
and
std
pop
sbb
sbb
subl
out
mov
out
jmp
jp
mov
dec
lea
add
es
ret
sbb
push
popl
aas
mov
jle
lock
jp
inc
subb
jmp
test
mov
inc
sbb
push
loop
add
in
daa
movsl
mov
mov
int3
xchg
jl
jp
shrl
mov
push
gs
aaa
dec
cmp
jo
fwait
mov
scas
add
rcr
sbb
or
jge
push
jg
xchg
jmp
imul
aas
push
mov
imul
ret
ja
or
dec
adc
fisubs
pop
jae
mov
aas
fdivrl
dec
out
clc
sbb
add
ror
jae
andl
pop
lods
pop
dec
ds
xchg
jecxz
add
enter
xchg
aas
push
pop
inc
jno
pusha
mov
out
sub
pop
pop
adc
adc
xor
and
xor
jge
aas
leave
into
js
jmp
pextrw
sub
lret
inc
adc
mull
and
pushf
cltd
sub
dec
sbb
ss
ficoms
sahf
or
xor
push
sbb
sub
push
sbb
leave
push
repnz
fnstsw
cmp
into
mov
into
add
cmp
adc
sbb
jb
xor
jle
sahf
push
jno
loope
out
inc
cmp
pop
push
test
jecxz
leave
inc
jle
lcall
fmuls
leave
pusha
add
jge
in
in
shll
inc
test
mov
aam
xchg
imul
test
mov
js
xchg
push
xor
fsubrl
icebp
ljmp
lcall
lea
inc
push
mov
test
mov
adc
daa
out
jno
xor
leave
inc
test
in
or
jmp
imul
js
sbb
popa
lea
mov
int3
out
jb
mov
adc
adc
and
push
rorl
int
pushf
in
mov
ret
imul
out
loop
inc
dec
push
push
std
push
cld
add
inc
test
stc
mov
lret
push
imul
xor
mov
jne
and
test
dec
or
inc
push
sbb
inc
repnz
jno
adc
les
add
lret
mov
push
pushf
sbb
nop
sbb
xor
mov
clc
mov
dec
fidivrl
xor
sub
loope
or
cmp
dec
je
jge
mov
std
iret
cmp
test
cmc
adc
mov
dec
pop
xchg
adc
gs
push
mov
lock
aaa
icebp
js
lods
xlat
fisttps
bound
cmp
jmp
sbb
fistpl
pop
ds
pop
roll
add
jmp
fwait
inc
je
push
dec
add
jo
sub
mov
push
or
ret
imul
rcll
cmp
call
mov
and
jne
inc
xchg
stc
ds
fsub
push
xchg
gs
dec
dec
and
jmp
push
stos
ret
jl
flds
pop
idivb
mov
int
arpl
sub
xchg
stos
loope
adcl
push
sbb
jb
scas
jmp
aam
hlt
and
pop
popf
mov
mov
imul
push
add
jge
push
sub
xor
xor
cmp
rcl
mov
loope
rol
imul
aam
pop
mov
jecxz
ds
and
jb
mov
ret
test
cmp
sub
rcrb
aad
ljmp
jne
dec
push
pop
pop
push
sub
xchg
mov
aad
das
mov
mov
mov
or
cld
bnd
cs
cld
sti
xor
add
pop
sub
fs
repz
or
sub
addb
lods
and
jl
lds
fs
cwtl
mov
test
jle
mov
mov
cmpsb
or
dec
mov
stos
not
lea
insl
jae
int
mov
enter
jge
lock
leave
fisubs
jg
xchg
cmpsl
mov
fnstenv
push
lcall
in
and
cmc
or
flds
mov
int3
mov
cmc
jle
adc
mov
insl
cmp
mov
sbbl
out
int3
andl
sti
ja
jns
mov
mov
xchg
sub
jg
inc
or
sub
roll
lret
mov
scas
repz
js
lods
and
int3
mov
jae
idivb
mov
or
push
push
dec
jg
imul
call
test
fwait
js
mov
and
hlt
inc
in
push
mov
lock
push
scas
enter
lret
inc
rol
mov
loope
inc
adc
cmp
inc
jmp
lret
adc
cmpsb
mov
xor
sub
out
sbb
push
mov
stc
test
cmp
push
mov
aas
mov
xchg
aaa
stos
sub
mov
fimull
sbb
enter
jp
js
int
aaa
cmp
test
hlt
jbe
xor
jne
cmp
call
jbe
push
outsb
cmc
jo
fnstsw
cmp
mov
hlt
and
sarb
iret
pop
notb
xchg
hlt
cltd
jecxz
pop
mov
push
or
outsb
mov
mov
ret
pop
cmpsb
mov
sbb
bound
xchg
xchg
xchg
jl
aaa
sub
add
or
addr16
add
out
xor
jl
sub
mov
js
cmc
xchg
sarl
and
aas
std
movsl
adcb
cwtl
andl
inc
ja
push
pop
negl
popa
or
fs
out
mov
mov
adc
fnstcw
sahf
sbb
leave
xorl
fnsave
ljmp
arpl
add
pop
push
cmp
push
jmp
fsubrl
jg
cmpsb
lds
adc
mov
dec
ja
pop
jbe
bound
push
outsl
and
cltd
shl
mov
adc
jle
mov
fwait
mov
cmpsl
xchg
aaa
lods
addl
jge
push
mov
xor
in
ljmp
push
ja
cs
outsb
movsb
hlt
shrb
jg
movsl
xchg
jnp
and
and
ret
add
test
fwait
jge
xor
loopne
popf
into
mov
repnz
cmp
and
out
div
and
stos
scas
pop
fldl
loopne
or
push
call
jmp
xchg
cld
dec
pop
cmp
and
mov
jg
sbb
loope
jp
sbb
sbb
cltd
add
pop
popa
divb
xor
test
leave
mov
pop
xor
jmp
sub
ljmp
sbb
addl
jg
jbe
adc
jmp
in
and
pop
outsb
in
mov
test
fs
adc
sbb
push
xchg
stos
sti
mov
add
xchg
orl
add
es
aad
cmpsb
mov
or
cld
jge
xchg
std
mov
adc
leave
fdivl
jo
insb
push
jecxz
cpuid
mov
cmp
and
and
add
mov
cmp
add
outsb
mov
jg
dec
inc
xor
cmpsl
xor
mov
xchg
pop
sub
cmp
jmp
in
push
add
pop
adc
sti
cwtl
cmp
pop
push
mov
add
or
adc
mov
fsts
ljmp
aad
aaa
sub
cwtl
push
pop
and
popf
sub
mov
popf
outsl
cltd
repz
jmp
les
mov
out
cltd
loopne
add
dec
pop
out
add
aad
cmc
dec
sbb
ss
mov
mov
pop
add
pushf
mov
jae
jnp
orl
flds
cmp
sub
mov
repz
pop
adc
cmpsb
bound
and
cmpsl
jo
aas
movsl
pop
sti
sbb
lret
jo
fsubrl
pop
mov
mov
fstpt
fnsave
inc
std
insb
inc
mov
sub
rorl
push
aad
mov
sub
push
sti
jb
push
icebp
ja
mov
cmp
mov
jo
in
push
cmp
add
movsb
jecxz
fadd
jecxz
sbb
aam
xchg
nop
jl
inc
fwait
stc
jle
aaa
sbb
mov
pop
mov
mov
cld
cmc
cli
sbb
in
test
mov
iret
out
outsb
int3
pusha
sub
sub
jg
inc
aad
jl
ds
in
jge
cld
add
jmp
cs
outsl
add
mov
mov
pop
sub
and
inc
and
or
pop
fdivrs
xchg
push
jae
mov
idiv
ret
sti
sbb
xchg
scas
cmp
lret
pop
or
in
or
add
sbb
sbb
in
mov
pop
adc
or
push
pop
push
mov
adc
jecxz
sub
enter
or
or
mov
not
call
or
bound
lret
sti
pop
inc
dec
and
arpl
outsb
pop
hlt
mov
mov
lods
jns
xor
icebp
dec
mov
jmp
push
pop
dec
aad
adcb
xchg
imul
push
lret
lret
hlt
push
rcl
push
dec
iret
xchg
inc
mov
mov
lret
fsubr
aam
mov
lock
movsl
mov
fildll
dec
imul
test
hlt
into
lcall
dec
xorb
sbb
pop
pop
xor
mov
inc
mov
scas
cwtl
pop
xchg
scas
scas
sbb
inc
stos
jb
and
or
mov
enter
add
js
mov
mov
fbld
sbb
pusha
out
outsb
or
and
xchg
imul
js
loope
aas
lds
sub
outsb
sbb
mov
mov
sahf
xchg
jp
add
adcb
cs
cmp
inc
and
add
test
sub
ss
pop
add
out
cmpsb
push
fidivl
sub
stc
sti
adc
mov
mov
cli
inc
adc
xchg
in
mov
scas
jb
xor
insb
ja
cmpsl
cmp
pop
sbb
or
fidivrl
pop
and
mov
jns
in
mov
daa
bsr
cmp
sub
insb
in
jecxz
and
addr16
int
lret
mov
popf
fmulp
mov
inc
or
imul
pop
sahf
dec
imul
ja
pop
inc
sub
mov
mov
aad
sbb
and
cmpsb
adc
popa
push
lcall
sbb
aaa
bound
in
jg
into
mov
jge
jbe
in
prefetch
or
mov
shll
aas
pop
mov
ljmp
testb
andb
pop
out
addr16
daa
push
cltd
rcll
pop
bound
push
jg
mov
jge
mov
cwtl
xchg
ret
jns
mov
mov
fcoms
cmc
xchg
nop
sbb
sbb
jo
pop
jne
nop
cmp
pop
out
lods
int3
pop
hlt
es
jnp
mov
mov
jb
nop
dec
push
arpl
xchg
test
push
or
clc
push
jge
push
testb
dec
adc
xchg
xchg
int3
and
sbb
lods
lea
aad
dec
cltd
ret
and
test
cmc
out
sahf
mov
in
cmp
inc
mov
dec
mov
mov
mov
mov
mov
notb
pop
xor
push
mov
xor
add
rol
pusha
popf
out
lock
clc
push
imul
loop
orb
test
cmpsb
arpl
mov
dec
lret
and
cmp
jmp
int
xchg
cli
mov
and
push
sbb
mov
push
fiadds
addb
lret
jl
outsl
jae
lea
lock
pop
lods
xchg
pop
sahf
pop
dec
notb
int3
adcb
fisubrs
inc
mov
jae
jmp
icebp
mov
daa
dec
stos
xchg
gs
mov
and
inc
test
inc
insb
xchg
dec
jmp
adc
fstpl
aad
mov
out
fneni(8087
subb
adcl
inc
dec
cwtl
mov
dec
pop
mov
sub
mov
push
xor
cwtl
dec
adc
or
js
adc
cmp
xor
lahf
and
lods
push
sarb
sbb
sub
mov
inc
push
and
mov
push
orb
sub
out
add
pop
mov
test
sti
sub
add
in
outsl
stos
fsubs
xchg
push
lret
or
sbb
push
mov
mov
sub
jae
dec
js
inc
mov
dec
mov
xchg
daa
lret
lds
sub
or
add
in
neg
inc
lods
jecxz
test
and
les
inc
mov
dec
fwait
in
jo
pop
push
popf
ja
scas
jl
aas
add
inc
sarl
ror
and
fists
jnp
sub
pop
inc
cmp
movsl
pop
xor
sti
xchg
daa
pop
aam
push
sub
xorb
repz
dec
scas
mov
cwtl
fs
xor
aad
or
xor
or
sbb
push
xor
aam
dec
orb
cmpsl
int3
cmp
xchg
lods
and
push
xchg
fbld
mov
mov
mov
push
iret
push
mov
inc
stc
lods
repnz
lods
jl
into
fdivrs
xchg
in
movsb
jp
fldcw
push
cmp
pop
mov
loop
push
jmp
inc
in
test
add
sti
mov
dec
lods
into
and
mov
ljmp
and
xchg
aas
mov
hlt
add
in
aas
push
mov
in
in
aam
les
data16
mov
or
mov
mov
daa
and
ss
jno
mov
or
outsb
push
lods
pop
test
sub
xchg
stc
in
jmp
lret
cmpsb
aas
lods
loope
ret
push
jge
add
imul
cltd
mov
pop
fwait
and
outsl
xchg
sub
scas
xor
cltd
sub
pop
std
and
xor
lods
and
push
leave
stos
mov
mov
pop
and
inc
mov
fildll
outsb
leave
inc
test
add
or
nop
into
sub
out
mov
push
sub
dec
inc
ja
push
mov
sub
pushf
mov
sub
cmp
inc
mov
scas
test
arpl
or
pop
mov
xor
xchg
cmpsl
out
out
fstps
mov
mov
pop
enter
cwtl
test
mov
xchg
lods
in
push
sub
cmp
pop
enter
dec
shrl
mov
int
mov
leave
mov
xchg
aas
push
rol
inc
sbb
call
push
test
fcomi
or
pop
adc
mov
cmp
mov
mov
aam
std
orl
cmpsl
mov
fisttps
gs
jecxz
out
stos
xor
inc
out
dec
aad
add
cmp
fisttps
jp
mov
mov
jle
push
mov
cmp
pop
dec
rclb
or
sti
loope
add
pushf
jb
out
push
lahf
outsb
xor
push
sbb
dec
xchg
xor
add
repz
mov
test
adc
mov
xchg
xchg
stos
push
rcrl
fistps
lahf
cmp
jnp
adc
jno
loopne
fstpt
jge
rcl
pop
mov
push
shrb
xchg
jno
aaa
rcll
pop
pop
shlb
and
mov
mov
mov
not
adc
jg
sbb
inc
xchg
mov
cmp
xchg
xchg
and
pop
xchg
cli
mov
pop
push
sbbb
aas
xchg
mov
mov
test
movsl
and
push
out
xor
xchg
movsb
inc
stos
mov
lods
ret
cli
lods
or
out
mov
jge
scas
scas
mov
sahf
test
push
push
inc
xor
sbb
repz
mov
fnstsw
shr
pop
lcall
ljmp
shl
sti
xor
mov
stos
incl
mov
push
and
lcall
mov
adc
push
add
pop
pop
imul
mov
or
sti
scas
addb
push
adc
mov
and
fldenv
jle
movsb
mov
out
mov
pusha
iret
loop
push
iret
mov
or
inc
add
add
test
call
pushfw
jge
push
lea
sbb
jnp
rclb
jno
imul
outsl
outsl
sub
push
in
div
xor
mov
rolb
fsubrp
push
push
ja
mov
stos
outsl
mov
push
xchg
pop
xor
mov
jno
out
push
imull
mov
or
lock
push
mov
jno
inc
iret
mov
jns
sahf
imulb
jno
mov
jp
xor
jg
xchg
sbb
cltd
xchg
out
pop
xchg
ljmp
fidivl
add
cmpb
lcall
sbb
testl
jp
jo
mov
and
loop
xor
pop
push
inc
pop
cli
sahf
cmpb
repz
push
in
sahf
das
fucomip
mov
enter
ret
sbb
jp
sahf
pusha
xor
leave
cmpsb
popf
mov
adc
out
sub
mov
mov
imul
add
push
cmpsl
adc
and
dec
movsl
shll
lcall
stos
mov
int3
ja
test
pusha
pop
int
inc
push
call
adc
testb
stos
cmp
in
mov
pop
movsl
sti
in
dec
shlb
mov
arpl
ja
scas
mov
cmpsl
push
mov
aaa
pop
stos
inc
cmp
out
cmp
pop
xchg
nop
in
in
jmp
pushf
xchg
pop
xchg
insl
jbe
data16
cmp
mov
out
ret
dec
stc
aaa
xor
inc
test
pop
scas
arpl
stc
int3
scas
jmp
dec
aad
jo
jo
mov
inc
inc
mov
jbe
mov
add
lea
das
fcmovnbe
decl
jae
dec
pop
xchg
mov
pop
fsubl
adc
jbe
mov
stc
out
lahf
jp
cld
inc
xor
divb
test
dec
cmovnp
mov
or
test
je
in
sub
xchg
iret
or
insb
stos
pop
adc
jnp
lret
cmp
mov
lcall
outsb
mov
or
rolb
jg
sbb
fldl
lcall
or
ror
xchg
sbb
pop
jg
cli
lret
xchg
aaa
add
mov
jne
mov
push
cmc
jl
fnsave
xchg
mov
push
mov
push
cwtl
fdivrl
aad
out
test
add
ja
scas
rcll
std
ljmp
mov
xor
lods
inc
inc
inc
call
stc
sub
stos
orl
jnp
cmpsb
mov
test
xlat
and
add
mov
or
jp
cmc
and
mov
popa
mov
push
pop
mov
fisubl
jne
rol
inc
movsb
push
int
lock
ror
xor
inc
lret
mov
pop
js
cmpsl
roll
xchg
in
loopne
into
fldln2
push
pushw
cltd
xchg
dec
xor
xchg
mov
lods
xor
lcall
mov
loop
xchg
push
cmp
cli
adc
adc
and
inc
jp
pop
mov
cwtl
mov
decl
pop
mov
repnz
leave
cmp
fs
imul
xor
push
push
jbe
mov
sub
stos
adc
fs
das
adc
call
push
cmp
mov
out
xor
ss
dec
add
adc
cmc
push
jbe
sub
div
sub
in
inc
fisubs
imul
inc
sub
cmpsb
sub
jg
shl
xchg
inc
mov
sub
outsl
iret
lea
xchg
aas
inc
clc
pop
decl
adc
je
cld
ror
stos
xor
int
adc
lods
cmp
cmpsl
xchg
sbb
cmp
sub
mov
mov
clc
push
mov
pop
les
test
cwtl
loop
push
stc
lret
repnz
rcrl
shll
ja
and
add
mov
mov
xlat
jl
and
int
add
inc
rclb
mov
imul
repnz
adc
clc
imul
stc
imul
int
adc
in
xchg
inc
adc
adc
loop
insl
int3
ds
in
push
mov
popa
stos
test
mov
pop
jmp
cmc
in
rorl
into
cmp
dec
cmp
jo
add
xchg
out
pop
jo
or
dec
not
ja
dec
aaa
int
fs
pop
mov
dec
test
push
enter
test
ficomps
sbb
insb
pop
pop
sub
in
jae
call
cmp
stos
cmpsl
xchg
dec
push
mov
pop
dec
stos
and
inc
push
mov
lcall
mov
xlat
fs
loop
jnp
and
out
dec
cmpsl
scas
xchg
mov
mov
dec
icebp
mov
push
push
cmp
in
call
dec
scas
push
cli
lea
cmp
movsb
outsb
into
daa
shrb
test
mov
ds
sub
xor
push
jno
test
jno
rcll
aad
in
idivl
sub
mov
lahf
in
adc
dec
or
pop
xor
xchg
dec
inc
lea
pushf
inc
scas
add
add
sbb
loopne
cmp
mov
sti
jnp
sub
push
xor
push
push
pop
fistps
sbb
and
cltd
insb
in
push
or
xor
in
mov
xchg
stc
out
loopne
andb
jbe
lahf
push
cmpsl
je
ljmp
ret
xchg
jl
icebp
jno
jmp
sbbb
clc
jno
testb
in
pop
and
xlat
or
jmp
cld
push
js
fdivp
into
mov
jno
jg
and
insb
cld
insl
xor
out
mov
xchg
sbb
inc
or
pushf
or
cltd
xor
mov
negl
ja
mov
fwait
dec
xorb
adc
dec
mov
cmp
pusha
ljmp
dec
push
pop
pop
push
sub
jmp
pusha
dec
outsb
out
movsl
mov
fcmovnu
jp
test
out
stc
fwait
nop
and
inc
pop
push
fadds
in
dec
mov
xchg
or
mov
rol
push
div
and
out
mov
icebp
fildll
dec
fisubl
cmp
bound
ret
sahf
test
xor
push
shrb
lcall
inc
loopne
add
mov
xchg
xor
mov
dec
lds
push
push
push
jbe
pop
sub
jae
out
pop
imul
push
jbe
mov
pop
xchg
jmp
mov
or
movsb
sub
dec
mov
add
bound
movsl
sahf
jp
add
aas
jge
jo
mov
pop
push
rorb
pop
std
xchg
aam
rcrl
aaa
pop
orb
in
lahf
cmp
cmpb
push
fld
xor
sbb
sub
or
mov
sahf
xchg
stos
insb
cmp
and
sub
outsl
xor
push
loopne
scas
ret
jge
sbb
subb
imul
and
js
stos
sub
js
sbb
mov
push
rclb
outsl
mov
add
dec
lock
fcompl
call
pop
pushf
in
xchg
dec
repnz
es
xor
adc
mov
and
fs
or
mov
es
xor
scas
pushf
lret
ljmp
inc
sub
push
lds
stos
mov
jbe
sub
notl
mov
pop
orb
mov
decb
adc
cmc
or
ret
jp
cltd
pop
nop
sbbb
sbb
mov
mov
shrb
shl
cmc
adc
pusha
jecxz
int
xchg
mov
das
es
xchg
pop
dec
add
scas
les
add
pop
push
nop
movsl
cltd
jnp
cmp
loopne
and
ret
mov
mov
notl
push
jo
cld
cmp
pop
xchg
inc
outsl
cmp
push
sti
inc
test
mov
inc
mov
inc
adc
push
xchg
xchg
sahf
jp
add
lods
lahf
fstp
ja
mov
mov
cmpsl
xchg
scas
push
in
jecxz
sbb
cmpsb
repz
mov
int3
mov
addr16
addr16
or
fldl
and
inc
and
shll
jb
mov
mov
jns
inc
aaa
out
sbb
lods
aad
mov
loopne
mov
arpl
pop
jo
sbb
sti
cmp
add
push
mov
pop
mov
inc
add
sahf
bound
mov
inc
cmc
jmp
dec
loopne
icebp
push
push
jmp
jno
xchg
stos
daa
je
adc
js
rcll
ret
or
and
jae
repz
pop
xchg
add
sti
lret
xchg
imul
insb
sti
and
outsl
adc
pop
inc
test
sub
les
test
adc
jb
push
mov
stos
les
es
loop
dec
dec
jp
lret
lret
pop
insb
xchg
cmpsl
lods
xor
and
sub
daa
add
ljmp
inc
mov
lss
xor
xchg
xchg
inc
adc
outsb
xor
jge
xlat
fbld
lods
inc
push
or
push
popf
dec
nop
push
adc
pop
addr16
dec
addr16
fcmovnb
rcll
adc
push
push
dec
jg
cmp
and
fs
mov
lret
and
vcvtpd2ps
fwait
cmpl
or
cli
cmp
dec
sti
dec
lods
divb
jge
loope
or
push
cwtl
and
sub
stos
xchg
sub
out
enter
xor
daa
pop
fimull
fs
dec
dec
orb
andb
inc
fidivrl
dec
push
dec
xchg
aaa
and
int3
call
out
cmc
xchg
or
sub
jmp
inc
cli
mov
ljmp
popa
add
push
into
jbe
sbb
cltd
sbb
mov
lods
je
cld
sub
fdivrl
jl
out
sbb
add
jmp
push
sahf
test
add
mov
mov
and
push
shll
test
loop
jb
call
xchg
mov
push
enter
sarl
mov
mov
adc
mov
pop
dec
pop
xchg
imul
xchg
add
lret
aaa
dec
movsb
cmp
ss
aam
mov
xchg
ficoml
andb
mov
xchg
andb
mov
mov
in
fsubrl
cmp
mov
rclb
outsb
lods
or
imul
cmc
adc
bound
sbb
adc
push
test
out
daa
xor
push
clc
and
sub
sub
cmc
cmp
sbb
push
iret
out
xchg
or
jo
and
sbb
cmp
out
test
xor
xor
inc
inc
repnz
inc
js
cmp
lods
dec
cmc
arpl
jg
loopne
add
jb
icebp
mov
stos
outsl
imul
pushf
mov
inc
outsb
pop
fsubrs
mov
xchg
cmp
iret
stos
add
push
inc
pop
and
sbb
dec
add
push
int
pop
xor
sbb
xchg
ja
or
stos
test
loop
dec
fldpi
repz
sub
xchg
stos
xchg
lods
sub
inc
lds
jne
in
inc
test
cmp
push
aad
jmp
cmp
stos
mov
dec
push
fs
test
and
add
dec
sub
sub
inc
xchg
out
jl
decl
ds
leave
jge
mov
fiadds
xorb
out
shl
jge
cmpsl
cltd
mov
rclb
outsb
sub
and
lods
lock
pop
or
xchg
std
sbb
iret
mov
pop
or
jns
pop
dec
mov
sub
shrb
subl
pop
das
in
dec
add
in
adc
xor
pop
stc
imul
cmp
jl
mov
fistl
repz
into
push
push
mov
jmp
inc
xchg
pop
sub
jle
xlat
push
test
enter
sbb
in
cmp
imul
dec
adc
ja
xchg
outsb
jns
mov
mov
jbe
mov
jbe
or
and
jp
pusha
pusha
jno
jno
loope
fldl
fs
ja
pusha
xchg
test
pop
inc
xchg
mov
sbb
cmp
bound
cmp
andl
outsl
icebp
mov
arpl
lods
mov
test
mov
in
add
sub
mov
ds
mov
adc
in
insb
adc
xchg
xchg
bound
dec
or
adc
loopne
or
add
loop
sub
inc
mov
mov
xor
or
pop
xor
mov
pop
lahf
mov
xor
mov
and
aas
xor
in
xchg
or
or
xchg
or
sbb
adc
sbb
imul
mov
mov
popa
xchg
stos
xor
ja
mov
mov
xor
sub
jmp
dec
push
and
mov
cwtl
hlt
das
push
push
dec
das
lods
sbb
jl
stos
push
cmp
pop
adc
imul
pop
mov
into
cmpsl
push
cmpsl
pop
and
mov
test
sbb
adc
sub
cs
aaa
dec
aam
sbb
mov
or
cmp
inc
scas
push
aaa
fisttpll
sar
xor
fstl
in
push
cmp
repnz
lret
jns
dec
and
ret
push
addr16
xor
lret
cmp
test
or
xorl
cltd
sbbb
roll
push
ret
insb
faddl
stos
xchg
fisubrs
push
rcr
notb
fmuls
fmul
incl
jo
inc
add
mov
dec
int3
push
pop
adc
pop
dec
cwtl
pop
cld
and
out
hlt
xlat
sub
mov
and
mov
sub
pusha
pop
adc
xor
or
leave
clc
out
pop
outsl
add
int
and
or
lret
loop
out
stc
mov
pop
add
test
sbb
int3
pushf
jb
or
in
shrb
sbb
mov
lock
cwtl
xchg
adc
aaa
push
sub
jg
xor
inc
and
mov
shlb
jp
xchg
mov
int3
stos
mov
jmp
leave
data16
xchg
out
mov
es
mov
inc
xchg
dec
shlb
lods
pop
fidivrs
cmc
cli
lods
out
adc
daa
lock
aam
sub
iret
lret
xlat
push
ret
inc
in
sbb
xorl
mov
out
dec
mov
ja
jp
dec
iret
lret
dec
std
ret
cwtl
push
xchg
jne
daa
add
push
in
subl
inc
add
andb
rcll
xor
call
mov
sahf
cmpsb
sbb
add
sub
loop
or
or
clc
pusha
or
cwtl
xchg
dec
xor
stc
adc
xor
out
and
mov
pop
xchg
and
xor
jno
clc
mov
idivl
int
xor
insw
in
lock
int3
das
insl
inc
pop
sub
add
aad
cmpsb
sub
xchg
push
jne
add
pop
adc
adc
or
cmp
add
inc
dec
adc
adc
ds
shll
addb
addb
or
js
fcomps
push
addr16
les
xorb
gs
test
adc
cli
inc
mov
cmpsb
mov
push
xchg
jle
adc
adc
mov
mov
dec
xor
cmp
ds
pop
pop
adc
cld
mov
pusha
arpl
push
mov
inc
fsubrl
mov
mov
lds
jmp
imul
lahf
mov
into
push
ja
fs
lret
pop
pop
fcompl
cmp
sub
pop
xchg
in
and
je
mov
pop
shl
sub
jne
leave
es
mov
cld
jg
lea
ljmp
out
out
sbb
movsl
test
xor
push
sbbb
xchg
and
cmp
lods
and
jecxz
lret
inc
fs
decb
push
gs
into
aam
xchg
sub
mov
xchg
pop
inc
pushf
lea
je
pop
shll
sub
pusha
pop
add
jbe
xchg
int3
cltd
jno
mov
xor
add
aas
les
test
xor
xchg
and
mov
cmpsl
fwait
push
cltd
repz
mov
cmp
cwtl
jo
insb
je
jl
cmp
aam
push
inc
push
sti
sbb
loope
sbb
jo
mov
cmc
sub
sub
push
dec
shrl
cltd
xchg
movsb
int3
out
push
popa
fwait
mov
scas
push
mov
loopne
aaa
pop
adc
mov
cwtl
jle
mov
xor
mov
xorl
inc
out
mov
sub
adc
lret
je
stos
mov
nop
movsl
mov
xor
fdivrp
mov
pop
cld
das
mov
fidivrl
push
pop
in
cmp
push
imul
sti
pop
sahf
pop
pop
xlat
push
nop
lds
and
sbb
add
push
xlat
rcrl
adc
fs
inc
pop
push
pushf
xchg
outsb
mov
adcb
cwtl
or
lock
fidivs
push
and
mov
xchg
shrl
jmp
cs
adc
jnp
sbb
add
pusha
inc
in
push
roll
sbb
pop
frstor
mov
inc
xchg
aaa
sbb
lret
cmp
mov
test
dec
test
test
ja
ja
sub
sub
loop
cli
scas
xor
jecxz
dec
out
xlat
ret
jl
test
mov
push
sbb
lds
and
adcl
push
enter
ret
enter
insl
mov
aaa
push
lahf
mov
icebp
jae
fdivrs
popa
mov
lock
jmp
sbb
jb
mov
dec
cmpsl
ds
clc
jns
mov
outsb
into
or
jns
sub
adc
insb
jp
lcall
out
movsl
mov
mov
lds
push
push
shlb
mov
div
push
adc
out
push
mov
pop
jns
jge
adc
icebp
aas
xchg
cwtl
lods
sahf
ljmp
push
bnd
mov
jae
stos
dec
jmp
adc
pusha
adc
stos
xchg
push
mov
movsb
sub
add
clc
sub
mov
cmc
mov
int
adc
mov
xchg
dec
jb
push
add
cltd
add
inc
adc
in
mov
adc
cs
mov
mov
movsb
mov
gs
xchg
pop
mov
mov
cmp
movsb
cmp
fstp
ss
and
jae
aad
int3
lock
std
test
ret
js
repnz
xchg
arpl
ljmp
jl
int
gs
daa
repnz
jns
pop
ja
loope
ret
jmp
in
call
ds
in
jne
adc
push
adc
cmp
or
inc
mov
ret
dec
adc
cmc
pop
jae
xchg
or
iret
sub
add
cmpsb
ficoml
fnstenv
fisubs
adc
lock
xor
cli
sub
fwait
cmp
xchg
jbe
push
hlt
inc
add
mul
and
jle
fnstenv
xchg
pop
mov
aas
out
adc
inc
divl
filds
and
xor
push
lods
fistl
sti
pop
ds
sub
in
scas
mov
pop
cmp
and
add
lret
hlt
fcoml
jmp
jmp
sub
into
mov
rcrl
mov
lds
movsb
in
loopne
in
in
loope
mov
mov
rclb
jno
jno
js
or
fnstcw
push
jo
int3
sub
repnz
divl
mov
dec
mov
sbb
mov
jnp
daa
and
adc
xlat
arpl
mov
inc
addr16
jb
inc
or
dec
push
xor
div
lds
mov
mov
int3
sub
jae
sub
ds
aas
xor
sbb
inc
pusha
fimull
mov
mov
out
adc
clc
leave
adc
lock
xchg
gs
mov
imul
stos
subb
jecxz
loop
pop
jno
xchg
add
shr
sub
nop
jge
dec
dec
shlb
or
jle
adc
std
mov
pop
push
lds
adc
fadds
cmp
ljmp
push
sbb
dec
mov
rclb
cmovnp
xor
adc
daa
jne
scas
push
or
les
aaa
inc
fs
push
mov
filds
adc
mov
sbb
insb
xor
mov
int
iret
dec
cwtl
lock
test
test
in
sub
in
mov
stc
fsubp
pop
aaa
insb
xchg
aam
hlt
outsb
dec
xchg
pushf
mov
add
stos
movsb
add
int3
aam
in
adc
dec
push
or
cmp
sti
jecxz
je
hlt
dec
insl
pop
jmp
xchg
mov
add
fmuls
imul
out
hlt
pop
cmp
inc
lods
mov
lods
jnp
int3
es
insb
movl
sub
dec
pop
inc
fsub
jmp
leave
imul
lret
jl
adc
mov
and
mov
sahf
cmp
sar
cmp
fdiv
test
mov
loope
or
xchg
fistl
gs
xor
arpl
icebp
sbb
mov
leave
add
bound
mov
or
jmp
ret
mov
daa
loop
mov
mov
aas
arpl
mov
out
imul
inc
sti
pushf
aad
pop
shlb
je
mov
ss
sbb
int3
loope
sbb
mov
cmp
in
xor
cmp
out
dec
xchg
sbb
and
sub
jb
inc
dec
xor
jl
mov
loope
fwait
inc
inc
adcb
xlat
jno
xchg
jno
dec
adc
xchg
sub
sahf
ret
jg
inc
add
mov
add
dec
sarb
sub
sbb
daa
mov
mov
mov
xor
ficoms
scas
sub
roll
sbb
lods
std
loope
jp
popa
aaa
repz
dec
or
xor
ljmp
or
ja
xchg
aad
movsb
dec
ljmp
addl
sbb
scas
jl
popf
data16
jno
xor
mov
fistps
xor
retw
sbb
ds
leave
cmpb
int3
cmp
cmp
xor
xchg
cmc
cmp
mov
leave
frstor
jbe
stos
fadds
es
xor
adc
sbb
xorb
lahf
push
push
adc
sub
lds
add
adc
cld
pop
outsl
jae
sbb
mov
in
aam
stos
loop
addr16
ficompl
iret
mov
jns
push
nop
mov
mov
mov
jle
sahf
xchg
adc
je
mov
pop
mov
fbld
out
clc
or
xchg
sub
jle
aam
daa
push
adc
cmpsb
mov
insb
pop
push
sub
es
je
mov
xor
xlat
bound
pop
popf
cmpb
and
cmpsl
sub
push
dec
in
xlat
loopne
jge
sbb
sub
iret
imul
icebp
pop
in
or
fstl
add
jo
pop
and
arpl
lds
js
sti
aaa
imul
bound
pop
jl
jecxz
lock
mov
cmp
mov
negl
add
xchg
xchg
adc
in
addr16
or
mov
dec
cmp
pop
subl
push
cltd
outsl
sub
fsts
and
clc
fiaddl
cmpsl
jmp
or
mov
xchg
mov
dec
pop
mov
dec
inc
sbb
pop
mov
in
push
sbb
mov
ficoml
cmpb
xchg
pop
fsubp
ficomps
in
inc
loop
or
adcb
loop
add
nop
add
pop
cmpsl
jp
in
add
repnz
pop
fnstenv
mov
mov
dec
lret
inc
add
add
movsl
mov
inc
push
push
lods
push
push
mov
popf
pop
fcompl
xchg
sti
push
cmc
dec
inc
adc
xchg
adc
pop
std
scas
or
mov
cmp
insb
loop
and
insl
scas
lock
aaa
lahf
jb
push
inc
mov
dec
popf
sbb
into
in
test
cli
inc
aam
mov
stos
insl
cmp
pushf
jae
enter
push
dec
xchg
inc
in
inc
mov
mov
lahf
adcl
gs
and
loopne
ret
in
jnp
pop
and
mov
xchg
loopne
rorb
out
roll
cmp
push
bound
push
mov
mov
and
jp
add
in
inc
cmp
dec
jmp
ret
push
or
push
js
jb
and
sbb
inc
data16
cld
cmp
and
popa
cmp
cmpsl
jg
sub
sbb
cmpl
bound
dec
mov
jge
xchg
mov
cmp
vzeroall
cmpsb
enter
cld
lock
mov
sbb
jne
ds
sub
fcmovnbe
testl
jbe
dec
mov
call
adc
lret
clc
jno
imul
add
out
cli
into
bound
nop
dec
add
jg
xor
call
push
arpl
je
addr16
lret
and
lret
jno
fistpll
sbbl
push
stos
ret
jecxz
jmp
adc
lahf
mov
repz
in
pop
sub
sub
jno
neg
cmpsl
xchg
and
out
sub
mov
and
pushf
push
mull
and
loopne
sub
cs
aas
adc
cmpb
out
pop
out
inc
push
and
pop
and
sub
movsl
insl
mov
xchg
out
jno
jle
sub
jne
out
cs
add
pop
rorb
outsl
fcomps
adc
adc
jp
iret
outsl
js
dec
in
aam
out
and
push
xor
test
cs
xchg
push
pop
xchg
rcrl
lret
xor
imul
and
mov
jae
incb
sub
and
int3
add
sbb
loop
lods
lock
imul
test
push
pushf
lea
icebp
test
pop
out
stos
push
push
in
call
cwtl
adc
mov
dec
add
loop
add
add
push
fstl
lret
jae
mov
sub
push
fiadds
fidivrl
loop
pop
inc
sbb
repnz
fcmovnu
int3
mov
xor
cmp
jg
push
insb
test
xchg
xchg
add
jg
mov
push
jle
xor
flds
clc
movsb
dec
scas
loope
pop
cmpsl
cmp
in
jecxz
mov
fbld
adcb
sub
shr
and
sub
lret
or
or
bound
rcrl
xor
pop
popf
xorl
div
cld
and
cmp
in
aaa
mov
jecxz
into
cmp
pop
jo
or
imul
or
mov
cmp
or
idivl
mov
inc
orl
popf
xchg
cmpl
or
or
sub
push
mov
mov
dec
sarb
pop
cmp
and
in
xor
jno
ret
jl
addr16
aad
cmc
cmpsb
pusha
pop
fisubrl
in
inc
cmpsl
in
test
aad
cmp
lcall
push
sbb
push
ds
imul
movsb
pop
icebp
repz
pop
mov
aam
add
cmp
mov
cmp
adc
arpl
pop
ror
sahf
cmp
dec
mov
int3
test
imul
mov
test
or
iret
and
shll
pop
cli
push
xchg
out
andb
cli
popa
mov
push
jns
add
mov
out
outsb
xchg
pop
icebp
xchg
jbe
movl
fs
aas
jnp
popf
xor
lret
sbb
pop
lret
mov
jbe
push
dec
std
loop
scas
adc
inc
ds
leave
pop
dec
dec
or
in
adc
movsb
push
cs
in
dec
jo
pop
rolb
or
leave
and
fcmovbe
shr
stos
lds
jns
pop
out
sub
xor
dec
bound
icebp
mov
mov
cltd
mov
outsl
jl
mov
fs
pusha
mov
jnp,pn
push
lock
xor
xchg
out
imul
push
rorl
xor
jnp,pt
xlat
jl
sub
mov
aas
pop
in
cmp
les
sbb
leave
fxch
daa
loop
mov
lcall
jle
sbb
movsb
cmp
adc
int3
mov
jns
mov
and
ficomps
pop
inc
mov
xchg
popf
aam
pushf
and
ja
daa
ror
cmp
inc
and
cld
mov
mov
fcoml
xor
dec
call
push
dec
lods
xchg
lcall
sbb
jp
or
dec
punpckldq
jnp
out
and
aad
movsb
rcrb
jmp
and
adc
inc
jp
xchg
ret
adc
dec
cmp
sbb
xchg
movsb
testb
jl
ljmp
es
dec
xor
insb
or
das
outsb
mov
jo
cmp
xchg
rorl
jl
inc
pushf
int
xor
imul
push
test
jmp
xor
or
push
add
push
or
inc
ljmp
int3
inc
mov
pop
adc
mov
inc
or
repnz
pop
pop
aam
stos
aad
insb
leave
cmp
pop
pop
movsl
add
stos
mov
push
js
mov
dec
push
shll
pop
sub
scas
enter
fdivr
in
adc
adc
stos
cmpl
insl
popa
in
clc
frstor
sbb
clc
mov
sub
insb
in
scas
pop
pop
xor
pop
ror
xor
xor
and
dec
cmp
dec
push
push
aas
into
xchg
out
dec
shrl
popf
dec
je
rcrl
mov
pop
mov
xchg
hlt
popa
jbe
jle
push
dec
mov
fmull
aaa
cmp
jp
pop
sbb
lahf
sub
add
inc
sarb
jecxz
jle
loope
dec
je
sbb
xor
out
movl
adc
cmc
iret
fmul
jo
inc
pop
ret
xchg
mov
mov
push
in
adc
cmpsl
jbe
cmp
dec
je
jle
jg
add
das
fcompl
mov
inc
iret
add
and
cld
sbb
movsl
dec
stos
out
pop
pop
xchg
out
cs
xor
sahf
iret
lods
and
inc
push
ds
jle
orb
jecxz
incb
mov
sti
jbe
inc
push
sbb
mov
aad
sbb
sbb
inc
lcall
call
jg
sbb
ja
sbb
dec
pop
imul
xor
loopne
ljmp
or
pop
clc
inc
repz
cmp
cmp
ja
fistpll
call
push
mov
pushf
icebp
push
sbb
fildl
push
push
in
ljmp
test
adc
gs
gs
fs
and
int
inc
orl
je
sbb
cs
es
in
adc
add
inc
lods
stos
xor
xor
push
mov
ret
dec
lcall
cld
outsb
rcll
ja
cmp
cmp
clc
and
rorl
and
mov
fmull
mov
clc
in
test
jno
xor
sub
pop
imul
fsubs
fwait
sub
movsb
jae
test
dec
push
loop
add
jne
outsl
xchg
or
xor
int3
fcmovnu
je
icebp
into
int
xchg
push
mov
mov
push
cmpsb
mov
ds
scas
call
mov
mov
test
movsb
xor
push
or
push
sar
xor
shrb
mov
jns
mov
pushf
sbb
inc
cmp
mov
add
inc
sbb
movsl
lods
jp
movsl
nop
repnz
sbb
mov
sbb
enter
loope
mov
fadd
inc
out
ja
icebp
adc
ss
insl
rcrb
sar
pavgw
sub
dec
sbb
fcoml
cmpsl
icebp
jle
jns
icebp
pop
std
add
hlt
mov
mov
xor
cld
imull
stos
inc
pop
jae
cld
mov
xor
arpl
fsubl
dec
cmp
mov
inc
xor
fst
arpl
icebp
iret
insl
pop
fmul
stos
mov
test
sbb
sti
adc
int3
cmpsl
add
out
dec
xchg
outsb
test
jno
mov
movsl
gs
sbb
or
mov
out
adc
lret
scas
insl
out
jbe
jmp
out
mov
mov
pop
jp
mov
dec
inc
mov
xchg
sbbb
rcl
nop
in
push
jo
sti
rclb
mov
fildll
pop
push
xor
scas
mov
mov
pop
inc
dec
lret
stos
xchg
cmpsl
je
pop
push
inc
push
pop
js
dec
test
sub
rcrl
mov
xchg
stc
push
ret
cmp
dec
mov
enter
in
or
dec
shlb
mov
inc
test
sub
sub
jmp
iret
sti
test
and
loop
dec
nop
ja
pop
js
adc
test
and
xchg
push
sub
mov
add
clc
push
push
ret
pop
les
lock
fdivr
cld
fdivrs
mov
aaa
sub
jnp
inc
mov
and
ljmp
xchg
xor
icebp
hlt
adc
popa
pusha
rcrb
mov
jnp
xor
out
fists
xchg
push
out
mov
mov
sbb
pop
xor
cwtl
xchg
shll
jae
test
sbb
or
cld
jmp
cmp
and
jge
jl
xor
or
in
xchg
in
mov
xchg
mov
leave
mov
cs
test
stos
dec
xlat
mov
sti
mov
mov
cs
mov
es
inc
and
outsl
mov
out
sbb
adc
shrl
mov
lret
rorl
mov
mov
outsb
mov
xchg
mov
push
add
xchg
jecxz
imul
cwtl
loope
lahf
xor
mov
hlt
jecxz
test
adc
cmp
stc
es
mulb
les
out
dec
jp
imul
loopne
ret
stos
addb
cld
test
nop
push
mov
push
rcrb
cmc
xor
jmp
xchg
call
xor
cmp
sub
or
push
cld
pop
sub
xchg
cli
push
push
dec
mov
or
adc
xor
pop
pop
sti
push
bound
adc
mov
or
dec
stos
out
add
jns
pop
sub
adc
lods
add
stc
add
je
out
mov
jg
add
test
notb
or
inc
enter
movsl
sub
jno
nop
dec
mov
lahf
sub
xor
in
fwait
add
mov
jle
or
push
nop
xchg
imul
sub
jmp
add
jbe
dec
sarl
ds
xchg
lahf
test
xchg
pushf
push
push
test
aam
xor
jl
or
or
jmp
mov
jo
xchg
mov
sbbl
pop
setns
adc
int
sar
fbstp
xorl
push
xor
cwtl
test
dec
push
movsb
mov
inc
je
in
ret
pop
jne
mov
jmp
cmp
xchg
icebp
sbb
jl
sub
fxch
push
orb
add
push
adc
xchg
sub
and
dec
scas
jbe
loopne
jl
sub
sub
addr16
sub
or
pop
scas
repz
daa
in
jmp
sbb
or
pop
sub
int
shll
jge
pop
sahf
cmp
and
add
loop
sbb
sti
and
frstor
dec
pop
bound
lret
test
std
into
orb
xchg
lds
btr
loop
loopne
lock
sub
mov
lcall
in
mulb
push
hlt
dec
jo
icebp
out
mov
xchg
out
popf
fnstsw
rol
cmp
les
cmc
test
mov
cmc
cmc
lcall
call
daa
int
pop
pop
xor
sub
ja
dec
pop
mov
aas
and
jae
dec
pop
test
adc
aad
leave
fcoms
insl
xchg
nop
pop
jmp
mov
inc
cmc
aaa
stos
cmp
cmp
sbb
cld
add
cmp
movhps
es
add
sbb
test
push
aad
mov
testl
adc
loopne
out
movsl
push
inc
dec
and
imul
inc
leave
loop
and
ja
or
mov
cli
cld
xor
adc
mov
sahf
pop
add
xchg
popf
sub
out
and
lods
mov
aaa
mov
adc
mov
mov
lds
sbb
ljmp
repnz
int
cmp
or
sbb
test
sbb
in
loopne
shl
test
out
test
dec
inc
enter
pop
mov
pop
int
mov
ss
add
cltd
bound
mov
andb
mov
inc
loope
sti
ja
jo
mov
negb
add
mov
ss
insl
cmpsl
inc
scas
inc
leavew
arpl
xchg
sbb
outsb
cmp
into
jns
add
sahf
aad
out
bound
ffreep
cli
push
mov
mov
sbb
mov
pusha
add
cmp
in
mov
mov
xor
xor
or
fsts
pop
mov
insl
jnp
fwait
xchg
or
shll
stos
xchg
pop
loope
es
sub
add
sti
cmp
mov
xchg
mov
lahf
xchg
stc
ljmp
dec
mov
mov
imul
mov
aas
inc
lods
aaa
xor
cmc
jecxz
dec
add
pop
dec
sbb
scas
ficoms
cmpsw
icebp
inc
fsts
stc
inc
repnz
xchg
cli
push
inc
idivl
inc
outsl
jnp
add
ss
insb
fstpt
icebp
sbb
jmp
nop
sub
popl
pop
cmp
cs
es
inc
pop
popf
test
jo
mov
xchg
cltd
cwtl
in
push
inc
lods
push
push
popf
sbb
mov
cmc
rcl
mov
and
stos
push
jl
adc
cmpsl
into
ja
mov
mov
xchg
std
mov
insl
pop
js
and
sub
sub
ljmp
xlat
and
xchg
cld
int3
cmp
xchg
arpl
es
xchg
sbb
jge
cltd
inc
testl
mov
xchg
out
xchg
sahf
sub
int
lret
dec
lahf
or
gs
jmp
out
int3
mov
pop
insl
push
in
jne
iret
xchg
pop
xlat
lock
movsl
mov
scas
and
orl
imul
inc
cmp
mov
mov
jmp
adc
jge
in
mov
xor
adc
pop
shlb
ljmp
cmc
cmpsb
mov
jb
pop
sahf
fistpll
iret
xchg
inc
xchg
test
sbb
bound
and
jmp
pop
jnp
adc
inc
ret
or
aam
outsb
loopne
pop
loopne
insl
loop
jecxz
faddl
mov
xor
push
mov
mov
sbb
dec
int3
cltd
inc
mov
cmovnp
and
mov
add
orb
fsubrs
lods
dec
add
outsb
arpl
pop
dec
xor
pop
out
ds
mul
out
mov
jne
insb
andb
sbb
stos
jae
cmp
pop
in
sbb
sbb
sbb
ljmp
pop
out
pop
or
xchg
sub
mov
push
push
cmc
pushf
inc
ljmp
adc
popf
sarl
mov
xchg
xchg
jg
mov
pmulhw
cmp
add
sub
jecxz
inc
mov
insb
dec
push
dec
aad
adc
jle
in
outsl
das
push
mov
sbb
stos
cmpb
push
dec
xchg
addl
fs
pop
aas
aad
mov
xchg
es
mov
mov
jnp
or
push
mov
std
mov
jno
add
out
mov
out
scas
and
cli
pop
pop
shrl
jp
cmp
adc
mov
and
sarb
sub
cmp
mov
loopne
cwtl
xchg
test
adc
testb
cmpsb
loope
mov
add
dec
loopne
test
movsl
cs
mov
xor
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
mov
pop
call
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
test
add
movzwl
mov
add
mov
mov
mov
xor
jmp
sbb
xlat
les
cs
pop
gs
xor
mov
add
push
mov
popl
jp
sub
sbb
sub
jne
jmp
std
repnz
sar
lahf
in
mov
add
ljmp
xor
imul
testl
cmp
mov
fisttps
xchg
dec
shlb
xchg
push
cmp
cmp
inc
fdivrl
pop
rorb
pop
rcl
ja
cmp
push
mov
addb
iret
or
cmp
pop
js
fidivrs
mov
loop
in
pop
rcrb
aaa
hlt
push
enter
jl
pop
or
dec
jp
jbe
mov
je
fldl
xchg
adc
mov
or
jnp
xor
pop
rcl
rcl
pop
dec
push
bound
iret
test
out
push
rcl
jo
fnstcw
pop
into
insl
inc
push
loopne
cmp
loop
pop
cmpsb
mov
cmp
dec
mov
inc
leave
sbb
pushfw
cmp
sub
lret
add
leave
push
stc
mov
negb
shl
popa
sbb
loop
fwait
cmp
lea
cmp
imul
inc
push
cwtl
fwait
testb
fisttpll
cltd
sarb
shll
pop
sub
sbb
push
in
sub
pop
lret
mov
mov
call
mov
inc
arpl
roll
mov
ja
movsl
inc
dec
push
cwtl
fwait
xorl
xchg
in
and
idivl
call
aam
and
js
mov
in
dec
sub
inc
mov
fwait
cmp
push
cwtl
sub
push
movsl
lds
subb
and
push
call
cmp
push
sbb
pop
enter
sbb
pop
cmp
mov
repz
sbb
pop
into
mov
lret
pop
cmp
sbb
adc
or
or
cmp
or
outsl
jecxz
test
in
fld
stos
xchg
fs
push
enter
dec
mov
jnp
inc
mov
pop
mov
fstpl
ljmp
mov
adc
test
push
or
cmc
adc
rorb
cld
inc
xchg
fs
notb
pop
cmp
dec
mov
int3
sti
inc
insl
jne
push
mov
or
insl
pusha
adc
sbb
test
pop
or
mov
aam
ret
mov
add
xchg
xchg
ret
fidivrl
orb
sbb
mov
mov
pusha
inc
jle
fmull
fisttpl
cmp
and
lret
ret
mov
insb
xchg
pusha
sahf
lret
dec
daa
movsl
mov
sub
jnp
ret
mov
rorb
mov
std
lds
add
filds
add
adc
ret
mov
or
or
into
dec
lahf
les
les
idivb
fs
inc
dec
or
sahf
repnz
scas
fsubl
mov
shll
mov
or
loope,pt
std
fstps
mov
push
push
mov
iret
mov
mov
xor
adc
pop
xchg
imul
stc
inc
jne
xchg
pushl
test
stc
insl
dec
mov
push
jno
outsl
dec
repnz
ss
add
lods
mov
push
push
jno
loopne
mov
aam
push
aam
in
arpl
punpckhwd
mov
push
sbb
addl
push
mov
dec
sub
push
sbb
adc
push
aam
push
aam
push
aam
push
inc
hlt
pop
pop
aam
adc
sbb
dec
lret
jmp
sbb
aam
into
inc
or
and
aam
push
dec
int3
mov
movb
pusha
xchg
popf
push
not
mov
ror
mov
xor
push
dec
xor
inc
add
mov
cmp
mov
inc
test
dec
stos
int3
inc
int
push
dec
jmp
fistl
push
aam
loopne
dec
jmp
inc
push
cmp
aam
push
cmc
dec
xor
aam
into
or
xor
push
rcrl
sbb
int
hlt
dec
cltd
sbb
int
call
lret
gs
aam
int3
lcall
push
sbb
sub
aas
mov
lret
inc
or
test
cmp
push
mov
xor
mov
leave
dec
xor
aam
into
or
xor
push
inc
xchg
mov
pop
leave
adc
push
inc
test
dec
jmp
fstpt
std
in
xor
loop
aad
jecxz
ss
xor
push
aam
push
aam
xchg
aam
push
aam
push
xor
shlb
mov
inc
fsts
or
test
iret
push
pop
inc
hlt
and
movsl
adc
mov
mov
xchg
leave
push
pop
inc
hlt
and
leave
sub
push
mov
xchg
mov
arpl
sub
test
jnp
ret
push
pop
ljmp
xchg
leave
push
pop
inc
hlt
and
lds
int3
adcl
xchg
adc
scas
xlat
mov
cmp
ret
push
pop
ljmp
xchg
leave
push
pop
inc
hlt
and
mov
sar
cmp
push
cmp
ret
push
pop
ljmp
mov
push
pop
inc
hlt
and
mov
ljmp
emms
nopl
pop
pop
adc
pop
inc
xlat
call
push
aam
arpl
sub
xchg
jnp
ret
push
pop
ljmp
imul
mov
movsl
ret
add
shll
call
push
lock
iret
sbb
pop
inc
sbb
jbe
cmp
sbb
adc
aad
pop
adc
pop
pop
js
mov
xor
cmp
and
das
pop
adc
push
ret
mov
stc
imul
mov
dec
icebp
cmp
jo
push
adc
xlat
mov
push
insb
push
insl
adc
mov
sub
jo
jge
adc
inc
mov
fistpl
fistpl
push
aam
add
mov
push
dec
aam
lods
inc
push
test
push
aad
imul
dec
int3
lods
push
dec
hlt
ss
enter
mov
push
push
cwtl
pop
dec
or
and
test
lea
or
push
mov
push
add
lods
mov
lods
mov
and
cli
jl
jno
mov
cli
lret
filds
adc
int3
push
sbb
lahf
mov
add
pop
mov
test
les
mov
aam
push
aam
push
aam
push
aam
push
aam
push
aam
push
cld
lods
push
outsb
jg
push
and
mov
aam
push
aam
adc
aam
push
aam
push
aam
pop
xlat
mov
aam
push
aam
push
aam
push
movb
pop
cmpsb
fiadds
push
cmpsb
cmp
pop
ljmp
fistl
aaa
ds
mov
ror
negl
add
cmp
push
xchg
aam
dec
lret
repnz
jb
mov
jge
inc
mov
sti
push
xchg
xchg
pop
iret
shlb
inc
lods
add
repnz
test
mov
jecxz,pt
or
jbe
push
jnp
mov
mov
pushf
pop
subl
subl
setg
aas
mov
in
shll
xlat
sbb
jge
out
jp
xchg
inc
mov
cmpsl
movsb
ficoml
xchg
or
jnp
es
xorb
movsb
and
add
es
xor
mov
dec
dec
enter
add
repnz
pushf
test
stos
push
ja
jecxz
mov
add
sbb
xchg
push
jns
xchg
pushf
shll
push
mov
add
xor
sub
insb
or
cmp
jbe
cmc
pop
cwtl
push
and
jns
and
mov
jg
adc
popa
addr16
sub
insb
or
and
jb
lods
pop
or
fwait
mov
mov
cwtl
cmp
adc
xchg
lock
aam
add
pop
adc
jo
mov
mov
adc
add
mov
push
ljmp
or
mov
pop
int
fs
xchg
sbb
jmp
mov
pusha
repz
test
or
repz
data16
pop
pusha
jo
cli
outsb
sbb
cmp
mov
aas
fnstcw
cwtl
mov
mov
adc
mov
sbb
mov
or
outsb
mov
xor
cmpsb
ja
loop
mov
aam
push
aam
pop
movb
test
push
mov
test
notl
and
stc
mov
mov
sarb
mov
scas
and
lock
mov
outsb
out
loop
pop
addr16
cld
inc
loope
sub
xchg
add
stos
ret
mov
out
das
and
mov
cwtl
adc
pop
add
aad
ds
sahf
imul
lea
push
test
rolb
scas
inc
dec
and
pop
cmpl
dec
push
ret
xchg
xchg
imul
cmpsl
sbb
xor
sub
add
jmp
mov
hlt
xor
xchg
lea
mov
fucom
pop
push
jno
xor
xchg
rolb
xchg
les
mov
jmp
xor
fsubl
inc
lock
add
lahf
add
and
add
add
add
fmull
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
fmull
hlt
fisttpl
je
or
adc
or
jg
or
sbb
or
mov
or
and
or
cltd
fisttpll
sub
or
cmpsb
fisttpll
xor
or
mov
or
cmp
or
mov
fimuls
fisttpll
dec
fimuls
aam
or
push
fimuls
loope
or
pop
fimuls
in
fisttpll
fimuls
cli
fisttpll
insb
fimuls
pop
fimuls
je
or
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
add
add
fimuls
add
add
rcr
or
add
add
in
or
add
add
neg
or
add
add
or
add
add
add
add
add
add
or
add
add
arpl
or
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
jb
jo
push
gs
data16
imul
gs
add
add
gs
insb
inc
js
arpl
gs
add
add
popa
addr16
imul
dec
arpl
push
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
push
pop
sbb
mov
add
add
add
inc
xorl
mov
pusha
push
cmp
mov
popf
nop
inc
out
or
push
mov
clc
stos
scas
sbb
lods
sti
movsl
xor
fstpl
push
mov
loopne
inc
bound
dec
les
out
mov
xchg
xor
movsl
inc
and
fucomip
jle
out
cld
imul
test
cli
aaa
nop
nop
shrb
fstpt
aaa
std
out
jne
sbb
push
fistpl
push
mov
fdiv
xchg
rolb
sbb
jb
pop
push
xor
dec
subb
stc
add
mov
or
pop
mov
pinsrw
push
jo
stos
sti
in
in
push
add
lahf
mov
lea
mov
cltd
cmp
and
inc
and
sti
xor
lods
push
jnp
out
push
dec
push
sub
testb
ret
dec
push
std
repz
repz
push
lock
cli
popa
mov
fistps
mov
push
inc
push
jmpw
mov
jns
dec
cmp
hlt
ret
fildll
mov
dec
pop
dec
inc
sti
and
cmp
pushf
xor
pop
sti
mov
clc
aas
adc
loope
dec
push
sbb
dec
mov
fdivr
lsl
test
sub
fisubs
scas
ljmp
in
cli
fbld
cwtl
sbb
je
movsl
mov
or
clc
outsb
test
fstps
out
xchg
xor
pop
call
pop
jle
clc
jecxz
outsb
jae
dec
inc
das
mov
xchg
dec
daa
data16
sub
daa
call
mov
gs
pop
jl
mov
sti
in
pop
outsl
call
and
xchg
dec
dec
push
pand
aam
shr
and
fisubrl
xchg
adc
push
sbb
nop
add
fs
lahf
sbb
jae
cltd
in
jb
sub
xchg
pop
or
cmpsb
loope
out
fildl
repz
je
outsl
mov
mov
clc
push
mov
in
mov
pop
outsl
and
push
mov
enter
mov
lock
out
sub
fwait
sub
xor
test
mov
addb
pop
ljmp
lods
pop
mov
pop
mov
aad
xlat
ds
sbb
mov
cmp
xchg
cmp
sti
jge
mov
scas
shr
adc
sub
mov
jle
fists
cmpsl
inc
scas
sbb
mov
xor
add
adc
xchg
int3
pusha
sahf
xor
subl
das
movsl
fwait
cwtl
sbb
sub
fsubl
fidivrs
pop
xchg
dec
dec
mov
out
shrl
lcall
test
lret
xchg
xlat
ds
sub
das
cmp
daa
imul
data16
pop
stos
inc
mov
add
or
add
shl
popf
in
bound
in
gs
enter
fistl
mov
push
sub
pop
insl
shrl
xor
xor
mov
push
fs
sbb
loope
push
jne
xor
mov
stc
ret
sbb
push
mov
push
mov
xchg
stos
add
mov
leave
inc
mov
arpl
push
add
int3
sub
cs
fldl2t
in
fcompl
mov
nop
pop
inc
xor
cmp
dec
scas
xchg
or
shl
pop
and
addb
dec
xchg
inc
outsb
mov
pop
jb
cmpsb
or
sub
push
repnz
push
cmpsl
pushf
stos
outsb
jecxz
cmp
jl
cmp
add
dec
jmp
sbb
je
int3
dec
jne
mov
xchg
lcall
addr16
arpl
iret
xlat
jp
int
push
fisubl
movsl
push
test
insl
jg
aam
cwtl
movsb
mov
adc
jno
mov
insb
mov
adc
sbb
dec
dec
dec
xor
mov
insl
pop
out
sub
notb
xchg
ret
sti
in
fdivrs
rcrb
int3
outsl
addb
adc
cltd
sub
inc
std
loope
pop
add
imul
sbb
ljmp
call
cli
sti
leave
mov
andl
inc
lea
pop
xchg
aad
iret
jo
inc
lock
addr16
xchg
and
push
or
cmp
in
mov
pushf
flds
mov
rolb
divl
pop
jecxz
pop
pop
cmp
insl
sahf
lods
leave
sarb
cwtl
adc
xchg
inc
xor
mov
and
daa
adc
out
bound
dec
sub
mov
pop
and
aam
xor
mov
and
out
das
lret
out
push
sub
sub
jo
mov
xor
pop
jg
aas
out
int
pushf
dec
add
pop
jecxz
lods
and
subb
mov
orb
shl
sbb
jns
adc
dec
push
push
ja
jl
jge,pn
pop
mov
popa
clc
insb
int
divl
fs
mov
xor
aad
fnstsw
clc
popf
mov
leave
mov
cltd
data16
lock
lea
and
and
andb
js
add
je
cmpsl
js
cmp
cmp
mov
imul
mov
lds
inc
lock
sub
mov
pop
mov
shlb
popf
scas
in
inc
jl
xlat
loope
int
xor
cld
sbb
push
and
sub
push
lds
adc
cmp
xchg
cld
pop
push
stos
pop
leave
push
fmuls
stos
mov
pop
jnp
pop
imul
sub
fisubrl
inc
movsl
jnp
in
push
jmp
mov
push
mov
js
neg
sahf
cwtl
pop
dec
mov
dec
aam
dec
test
outsb
cmp
ret
test
mov
test
mov
loop
frstor
inc
xchg
mov
xchg
push
loope
sub
adc
ret
cvtpi2ps
rolb
jmp
sub
jo
lock
cli
loopne
adc
mov
stc
stc
leave
shrb
mov
hlt
or
xlat
mov
sbb
push
cmc
pop
xor
jb
and
sub
and
lret
pop
ret
dec
daa
rcrb
xchg
repnz
pusha
divb
pop
dec
shlb
cltd
icebp
xor
or
insb
out
mov
xchg
dec
push
xchg
jmp
inc
jbe
mov
adc
in
iret
bound
dec
call
insl
stc
push
pushf
mov
xor
int3
dec
sbb
mov
pop
mov
aas
xchg
mov
inc
jae
int3
daa
scas
ret
ficoml
cmpsb
mov
pop
cwtl
push
xchg
push
mov
cmpsl
pop
inc
inc
out
pop
xchg
cld
or
pusha
jnp
es
clc
insb
pop
jne
cmpsb
adc
mov
lea
cmpsb
imul
sbb
and
push
int
ficomps
aad
mov
jne
mov
scas
sahf
shrl
cmp
testb
mov
push
sub
pop
cmp
test
rol
and
fadd
fcmovbe
lahf
aam
xchg
es
aaa
sub
out
xchg
xchg
sub
iret
cmpsb
xlat
pop
int
add
faddl
jl
mov
repz
das
aas
ficoms
push
and
test
mov
sahf
fldenv
sbb
push
sub
int3
jl
cmp
aad
stc
push
push
mov
xchg
outsb
cmp
push
adc
sub
lahf
lahf
ret
cmpsb
jne,pt
add
xor
movsl
das
nop
push
or
cwtl
mov
movsb
lahf
mov
rolb
ljmp
pop
int3
lret
shlb
scas
je
jl
ljmp
pushf
pushl
lcall
dec
daa
push
cwtl
movsb
shl
and
cs
jne
shlb
mov
jns
xor
xor
test
xchg
xchg
and
mov
push
sub
sbb
or
imul
lods
inc
dec
aas
xor
fnstenv
dec
jg
jmp
loope
adc
into
pop
pop
in
iret
lock
pop
push
xchg
sahf
mov
inc
xor
int3
pusha
das
pop
imul
inc
rolb
inc
stc
aam
jns
mov
inc
dec
icebp
adc
shlb
in
fistpl
xchg
ds
mov
cwtl
arpl
push
xchg
cmp
mov
aam
sub
pop
sub
pop
xor
test
mov
push
fistps
cltd
dec
imul
adc
sbb
xor
dec
adc
and
inc
inc
sbb
fimuls
fistpl
push
adc
aad
mov
dec
aas
pop
sbb
xor
mov
lret
cmp
je
cmc
pop
sti
in
pop
mov
mov
and
xor
push
or
cmpsl
sub
decb
fwait
inc
mov
je
jns
xchg
out
sarl
stos
es
sbb
cmpl
mov
out
push
das
add
mov
test
sbb
mov
or
sti
push
insl
sub
test
out
imul
inc
lods
pushf
cmp
push
pop
dec
jecxz
mov
mov
and
in
nop
mov
jle
or
rcll
inc
stc
pop
cltd
aad
xchg
xchg
test
fnsave
mov
pop
aaa
cli
or
push
push
fadds
pop
scas
cmp
add
mov
aam
mov
dec
scas
mov
push
int
pusha
fcomps
cld
in
dec
popf
ret
dec
mov
mov
cmp
pop
add
or
adc
xchg
inc
lods
sbb
sub
mov
mov
lea
inc
and
push
adc
xlat
inc
loope
nop
mov
shlb
pop
push
rcrb
xor
cmp
mov
fbstp
adc
inc
rorl
loope
repnz
aad
push
rcr
add
sti
adc
cmpsb
push
mov
xor
xlat
enter
inc
lret
popa
cmc
cmp
and
movsl
sub
inc
inc
shlb
sbb
and
mov
jmp
and
dec
sub
xchg
mov
ficomps
rcr
mov
repnz
ret
orl
cmp
lahf
push
ds
out
stos
sahf
jl
lods
stos
xchg
out
mov
or
mov
lret
lods
xor
push
lahf
sbb
loopne
sub
lods
std
mov
test
and
cmp
mov
ja
ret
jmp
mov
adc
out
pushf
cs
pop
sbbl
xchg
dec
xor
mov
add
or
mov
enter
cmp
loopne
les
pop
push
fsubrs
in
in
ljmp
pop
push
dec
stos
and
ret
jnp
rcrl
fisubrs
rolb
data16
into
cltd
dec
lds
xorl
or
push
sub
xchg
call
insl
mov
in
fmuls
sub
inc
js
imul
fcmovnbe
pop
sbb
mov
insl
sub
adcl
mov
or
test
mov
jno
aad
pop
sbb
xor
in
ror
inc
into
add
lds
stos
test
dec
pop
inc
push
mov
fistl
and
lea
loope
mov
aaa
mov
dec
mov
adc
push
fisttpl
hlt
and
les
xor
adc
mov
mov
xchg
rcll
and
add
adc
subl
pushf
aad
jmp
pop
inc
inc
inc
pop
scas
cmp
and
xchg
add
add
scas
movsl
push
into
out
lods
jnp
jp
xchg
and
and
movsb
pusha
lock
or
xchg
fsubp
dec
xor
not
xor
jp
mov
push
dec
xchg
shlb
dec
sub
scas
pop
sbb
outsb
popf
jmp
inc
inc
mov
fsubl
add
leave
xor
insl
push
jl
xchg
or
jns
iret
mov
mov
and
in
pop
jnp
mov
or
xchg
cmp
jb
imul
mov
pop
into
pop
es
pusha
mov
lea
dec
rolb
mov
cltd
cmp
cld
push
lahf
ss
inc
les
xchg
rorb
mov
cs
mov
xor
xchg
mov
pop
incb
jg
sbb
sbb
jae
xchg
in
push
inc
dec
popa
add
xchg
dec
mov
push
xlat
xchg
mov
ja
dec
cmp
add
nop
adcb
xor
xlat
inc
out
loope
repnz
or
rolb
out
dec
mov
sub
cmpxchg
jnp
data16
fistpl
cmpl
sub
iret
pusha
adc
scas
xor
mov
pop
fldl2t
in
or
cmc
repz
cmp
addb
jp
sub
leave
faddl
insb
loop
pop
inc
sub
pop
jno
cmpsb
aas
jno
addr16
mov
dec
jo
mov
push
popa
movups
fs
das
lods
xchg
mov
icebp
int3
imul
loopne
push
negb
punpcklbw
sub
cs
jp
sub
mov
cmpsl
pop
cmp
dec
sub
ljmp
pop
popa
loop
mov
push
push
sub
xor
loop
lret
fwait
xchg
or
add
out
dec
stos
mov
adc
fiadds
xor
sbb
xor
mov
dec
daa
shll
mov
orb
push
adc
xchg
push
xor
dec
dec
icebp
add
cmc
mov
jnp
jbe
js
and
cli
test
cmp
popf
aam
out
in
adc
add
cmp
jecxz
mov
and
inc
dec
es
dec
pop
mov
les
int3
sub
and
adc
aam
je
test
pop
mov
lret
cwtl
adc
pop
cmp
add
or
roll
pop
mull
cmc
add
cmp
ret
fisttpl
je
js
push
cmp
das
and
loop
xor
push
lds
xor
and
or
xchg
aam
imul
addb
js
sub
sbb
cmc
jp
fucom
pop
and
or
cli
inc
sub
sbb
cmp
inc
push
push
sub
inc
dec
or
mov
xchg
fmull
loope
sub
ss
jl
cmp
pop
add
xchg
out
movsl
nop
pusha
push
pop
sbb
test
test
cmpsl
xchg
inc
mov
or
aas
mov
lds
sub
dec
fwait
mov
pop
mov
xlat
rorb
lahf
xchg
mov
fwait
cli
dec
push
inc
cmpsb
and
cmp
insl
xor
lods
aam
dec
int
dec
les
jbe
adc
aaa
xor
sub
test
jle
dec
loop
cmp
or
mov
push
fwait
scas
or
add
xor
rorl
pop
cmc
jg
xchg
lods
test
das
xor
pop
or
jnp
or
clc
push
mov
mov
sahf
cmp
xchg
test
arpl
cwtl
mov
in
add
call
shlb
adc
jmp
or
xchg
cmc
pop
push
insb
pop
fildll
pusha
xchg
xor
or
pop
movsb
stos
and
fsts
loope
lcall
inc
sub
and
push
mov
pop
fnstenv
push
inc
push
mov
test
cmp
and
ja
push
jns
pop
mov
and
or
mov
je
js
pushf
in
mov
jecxz
push
mov
pop
inc
mov
les
jecxz
cmpsb
mull
divl
stos
mov
mov
fists
inc
jae
enter
lret
leave
mov
js
fdivp
inc
ret
jo
xchg
inc
psubsw
pop
not
adc
nopl
cmp
mov
not
jb
cmp
add
jno
cmpsl
loop
jb
jg
test
cmp
and
or
mov
insl
fdivrs
data16
and
negl
dec
shlb
lcall
cmp
mov
jecxz
jge
aaa
push
stc
sbb
aad
mov
repnz
call
ficoms
sbb
sti
mov
ds
jno
enter
aas
dec
pop
mov
jo,pn
dec
aas
ds
or
xor
test
cli
lea
enter
imul
mov
scas
xchg
icebp
enter
sbb
cmp
inc
jb
push
leave
mov
cltd
sbb
aaa
iret
test
jne
mov
cmp
cmp
sub
pop
std
push
mov
jbe
sub
fldt
fidivrl
adc
add
lds
lret
ret
idivb
xchg
inc
bound
dec
mov
xlat
int
stc
cwtl
push
scas
dec
cmp
insb
pop
insb
gs
fwait
dec
jns
pop
shl
dec
cltd
sub
push
loope
xchg
mov
jbe
pop
dec
lcall
cmpl
daa
scas
rclb
por
les
push
inc
jmp
fimuls
inc
sahf
sbb
scas
pop
xchg
jne
mov
pop
dec
cli
andb
sbb
mov
jecxz
add
jbe
pop
fdivrs
push
stc
pop
sub
arpl
nop
xor
jecxz
and
aad
testb
ds
pop
push
xor
jns
fsubl
pop
das
push
jecxz
mov
scas
push
rsqrtps
sbb
sub
fildll
add
mov
mov
xchg
push
sbb
insl
mov
mov
jae
sarb
rcl
cmpb
leave
mov
or
dec
mov
push
stos
sbb
in
or
sti
mov
imul
mov
shrl
dec
mov
sub
lods
cmp
adc
jmp
jo
xor
stos
sbb
das
out
xor
xchg
icebp
test
lahf
test
mov
xor
adc
shrl
sub
addr16
inc
jl
jns
xchg
mov
mov
js
sbb
insl
push
imul
ja
inc
inc
gs
inc
cmp
shll
insl
cs
jno
mov
enter
add
popl
sbb
lock
stos
adc
test
lods
add
and
ror
das
rcl
pop
mov
push
push
es
pusha
xchg
test
shll
iret
mov
hlt
in
shl
add
popf
inc
outsb
test
scas
mov
jge
or
fisubs
lcall
inc
imul
iret
pop
sbb
out
scas
cmp
movsl
fwait
dec
data16
dec
insb
in
out
xor
daa
push
stos
mov
pop
cmp
pushf
or
mov
es
stos
iret
repz
inc
pop
in
icebp
dec
scas
std
scas
inc
adc
rorl
adc
mov
std
stc
xchg
jle
dec
enter
add
aaa
push
dec
sub
xchg
push
jg
mov
in
sbb
xor
mov
lods
es
push
jmp
and
fisttpl
add
cmp
cmp
inc
and
int3
xor
loope
addr16
call
out
jo
xor
sub
jb
pop
pop
pop
push
adc
sub
ss
jb
jne
xor
insl
push
add
jge
push
push
ret
cmp
mov
and
leave
gs
jns
movsl
fucom
dec
lds
cmpsl
jbe
scas
pop
loope
sub
cmp
popl
or
punpckhbw
test
aaa
loope
jne
or
push
sbb
mov
in
xor
fwait
stos
sbb
test
pushf
cld
mov
sub
das
in
fldenv
lods
ficompl
fcmovnbe
xor
mov
cs
stos
pop
add
inc
fcomps
les
shrl
xchg
les
xchg
or
roll
ss
out
push
imulb
xchg
mov
fists
enter
dec
movsl
dec
out
popa
push
out
mov
lret
add
lret
push
jnp
cmp
aam
and
push
or
in
adc
leave
sub
cmp
cmp
into
adc
pop
push
mov
lret
subb
cmc
inc
ret
cmp
cs
inc
xchg
scas
dec
mulb
leave
sarl
ljmp
add
cmp
push
cmp
sub
jle
sbbb
mov
enter
and
in
sub
sarl
fidivs
jb
and
sub
ss
mov
sub
push
jnp
repz
jne
push
lcall
sbb
mov
xchg
add
pop
add
outsb
and
pusha
aam
jp
push
or
mov
push
or
repz
lahf
clc
jmp
imul
lcall
cmpsl
pop
daa
pushf
cli
cmc
leave
cmp
lea
daa
jne
push
cmp
nop
add
ja
faddl
lods
in
leave
sub
add
mov
cmc
shll
mov
test
jb,pt
stos
pop
sbb
aam
les
jle
addl
fimuls
cmp
lock
mov
js
mov
nop
stos
pop
shl
sbbl
pop
call
stos
je
mov
inc
cmp
popa
xor
or
dec
in
push
mov
clc
mov
stos
ret
xchg
gs
xchg
pop
xchg
jns
lea
shl
int3
mov
and
cmc
xchg
out
xchg
shl
into
mov
dec
push
mov
xor
aad
or
idivl
adc
mov
and
ds
push
and
pop
xchg
ds
int
add
mov
icebp
push
je
ja
cmpsl
imul
outsb
dec
xor
fstl
xor
aam
lcall
cwtl
push
decl
gs
clc
sub
and
lret
push
divb
sub
sahf
mov
stc
in
xchg
sbb
sbb
std
idivl
and
and
sub
sub
sbb
lods
lret
xchg
adc
dec
sub
lret
dec
in
loope
push
add
out
pop
lods
ja
int3
aad
sub
js
inc
fbld
adc
sbb
push
hlt
sub
ficomps
push
lods
add
insb
add
jg
jle
xlat
dec
cld
mov
mull
ds
lret
aas
xlat
jno
sub
or
jae
rcll
cltd
movsb
pop
sub
test
insb
inc
dec
sti
or
outsb
out
pop
das
mov
pop
scas
mov
mov
add
xchg
add
cmp
cwtl
xchg
inc
notl
loope
cmp
insl
push
add
out
in
sbb
add
rcr
mov
mov
mov
bound
cli
mov
sub
rorl
int
mov
lods
inc
mov
pop
mov
or
jne
and
sti
in
sbb
enter
sbb
xorl
notl
daa
scas
push
call
mov
xchg
push
cmc
cmpsl
jmp
shrl
sahf
adc
xor
or
mov
jnp
sahf
and
sahf
movb
fcmovb
loopne
push
sub
add
cmp
daa
cmp
mov
hlt
xchg
sbb
pop
ja
scas
lcall
and
cmp
fmull
insb
jno
les
pop
and
push
loope
outsb
or
dec
out
jo
pop
imul
insb
in
xchg
pop
cmp
xlat
and
fistpll
je
mov
pop
mov
mov
push
fstpl
popf
cmc
push
pop
mov
hlt
stc
mov
mov
cmp
je
xchg
aas
jmp
inc
aaa
insb
popa
mov
fadds
fcoml
mov
ljmp
pop
sbb
adc
call
or
cmp
mov
pop
dec
int3
sahf
inc
cmpsb
in
xor
adc
int3
cmp
lods
cmpsb
jb
dec
fsubrl
xchg
test
push
fimuls
in
ds
and
ja
pop
dec
js
std
xchg
pop
movsl
lcall
xchg
ss
jg
adc
scas
lret
je
xchg
xchg
xchg
ja
jecxz
mov
mov
ret
int3
scas
dec
xchg
in
cltd
sti
lcall
out
adc
mov
fldcw
shr
daa
jge
jmp
xchg
jnp
or
movsl
pop
xlat
and
inc
jo
dec
pusha
adc
jae
dec
push
add
xchg
out
add
paddb
push
fcoml
aaa
outsb
or
ficoml
and
div
leave
mov
jmp
enter
or
cld
jl
sahf
xchg
jno
dec
bound
jo
xchg
and
out
and
fs
jns
cmp
pop
outsb
or
or
adc
lahf
popl
push
or
pop
je
pop
cmpsl
cwtl
xor
mov
mov
rolb
sahf
adc
jnp
cwtl
das
push
dec
jmp
imul
dec
jne
clc
xor
aas
adc
mov
cmp
cmp
adc
in
pop
mov
push
stos
xchg
icebp
xchg
stc
sahf
xlat
hlt
add
push
es
adc
adc
bound
lds
jmp
int
mul
decl
adcl
push
xchg
rorb
pop
roll
adc
lahf
hlt
aam
std
nop
xor
inc
fcomps
push
sti
dec
outsl
imul
mov
inc
cwtl
aad
negb
xchg
adc
lds
les
mov
xchg
mov
mov
mov
fidivs
push
movsb
dec
jbe
mov
cmpsl
int
mov
and
push
xchg
push
pop
add
xchg
mov
sbb
xor
mov
stos
fidivrl
mov
je
add
xchg
pshufw
out
js
sbb
dec
stos
xchg
out
adc
jnp
push
mov
push
or
lret
fildl
scas
mov
push
aam
add
cmpsl
std
mov
cli
push
push
and
mov
fdivs
jbe
jbe
sub
sub
and
testl
movl
ljmp
pop
mov
dec
inc
xor
lds
out
testb
lahf
and
in
test
sub
jno
aas
inc
subl
pop
xor
push
call
stos
ds
adc
daa
loopne
cmp
jle
int3
or
push
mov
pop
xchg
pusha
cmp
push
pop
pop
xor
mov
notb
and
int3
loop
jb
sbb
mov
push
inc
lods
add
int3
xchg
jmp
ds
ror
mov
addb
dec
dec
imul
pushf
and
jns
daa
pop
sub
push
add
stc
mov
push
out
push
nop
or
adc
pushf
mov
ljmp
mov
lods
add
aas
das
sub
pop
int3
icebp
insb
lods
or
in
fsubrl
sbb
xor
test
sub
push
daa
jle
push
loope
inc
cmpsb
arpl
mov
cmp
out
in
push
in
enter
sub
mov
into
daa
daa
mov
cmp
add
popf
pop
or
lods
std
sub
mov
ror
enter
pusha
loope
outsl
mov
dec
pop
xor
mov
ret
push
enter
call
sub
outsl
out
and
cmp
mov
jmp
push
dec
jecxz
cmp
repz
stos
mov
fsubs
not
push
xchg
orb
out
sti
cmp
out
or
xchg
xor
loope
clc
mov
xchg
and
sar
gs
dec
mov
call
inc
xlat
jae
jp
inc
subb
mov
jle
pop
sbb
loopne
mov
jae
pop
les
inc
mov
aad
ss
and
lahf
sub
gs
cwtl
or
imul
jle
push
push
mov
or
mov
ret
stc
sub
sub
rorb
pop
push
inc
stc
clc
int
movsb
pushf
mov
pop
ret
out
xchg
xor
jl
enter
jae
aaa
sub
or
ss
ret
iret
cli
pop
push
mov
pop
daa
add
mov
mov
outsl
fbld
inc
fildll
adc
aad
xor
add
inc
ss
insl
addr16
jb
div
push
push
pop
cmpl
mov
iret
into
sti
push
pop
cltd
cmp
ret
dec
xchg
mov
in
sub
subb
jmp
xchg
mov
iret
inc
andl
sbb
push
ficoms
jle
cmp
sbb
pop
clc
arpl
fsubl
xchg
sbb
dec
jmp
add
notb
mov
mov
pushf
and
mov
icebp
xor
in
jge
push
or
sub
push
jp
jns
bound
clc
jae
push
jle
pop
cmp
pop
inc
mov
pop
jnp
inc
inc
aad
mov
xchg
out
xor
out
pop
pop
xchg
std
pop
push
xor
mov
jbe
outsl
cmp
or
mov
fadds
cs
mov
push
cltd
inc
popf
jb
cli
adc
jbe
jmp
not
xchg
pusha
inc
lret
mov
mov
push
call
sbb
loop
jmp
pop
outsl
jecxz
sbbb
jae
jge
sti
loope
xor
cmp
in
xchg
or
pop
xchg
or
inc
xchg
cmp
in
nop
incb
cmp
cwtl
inc
flds
andb
ret
mov
js
mov
jns
lret
imul
push
xchg
adc
xchg
push
in
or
cmp
int3
cmpsb
cs
pop
test
mov
or
fists
jp
pop
adc
pop
cmpsb
leave
arpl
mov
dec
xor
jno
sub
fsincos
scas
push
std
nop
arpl
gs
enter
test
xchg
and
mov
jnp
sbb
inc
lock
mov
ret
push
aaa
jno
inc
fdivp
cmp
jl
imul
bound
sti
pop
jge
add
push
out
lahf
sbb
arpl
orb
clc
adc
xchg
idivb
lret
sti
mov
out
scas
in
cli
loop
movsl
pop
sahf
push
sbb
aad
jnp
mov
cmp
cwtl
lea
fs
cmpsb
push
push
pop
xor
mov
lret
es
mov
mov
ljmp
shlb
add
shlb
xchg
lds
cmp
push
cmovs
jno
insl
xchg
sbb
cmpb
stos
inc
sub
aaa
sbb
nop
mov
addl
fimuls
test
pcmpeqd
dec
dec
xchg
fldt
jb
in
movsl
test
adc
subb
ret
jno
xor
lcall
stc
cmp
in
js
sbb
inc
hlt
xlat
leave
jg
lret
xor
xor
jnp
mov
aaa
je
cmp
out
push
rcll
jecxz
push
dec
popf
jl
loope
or
adc
dec
hlt
int3
pop
cmpsl
mov
inc
pop
ljmp
sub
lock
fnstenv
pushf
push
dec
ret
sub
mov
xchg
addr16
pop
jnp
das
or
xchg
cli
sub
sub
push
jge
push
pop
hlt
daa
call
jns
dec
cmp
and
xchg
loopne
or
in
jle
fdivrp
lods
pop
insb
dec
cs
repz
jnp
sahf
jbe
push
or
sti
mov
adc
add
call
aaa
jmp
adc
shll
jmp
fwait
mov
add
mov
mov
add
outsb
jmp
arpl
xchg
dec
sub
pusha
adc
push
dec
out
dec
fldenv
xchg
fdivs
call
xor
nop
and
sahf
mov
enter
push
push
push
jle
xchg
jecxz
xor
lret
inc
dec
inc
inc
xor
clc
fildll
add
sub
or
jo
cmp
xchg
and
push
mov
in
adc
jecxz
fcoml
test
arpl
dec
sahf
pop
and
fcmovu
xchg
dec
sub
in
test
jge
in
mov
jne
filds
push
or
cmp
and
loopne
lock
gs
pushf
or
xchg
pop
dec
lcall
sbb
add
jno
sbb
jg
sub
mov
int
inc
pushf
imul
and
mov
mov
insl
xor
mov
mov
mov
mov
sbb
or
and
out
fcomps
ljmp
push
clc
jmp
in
cwtl
mov
nop
cmp
in
out
sbb
inc
sbb
test
jbe
mov
cmp
add
mov
cmp
mov
add
mov
int3
lods
mov
xchg
loope
fistpl
dec
dec
cltd
test
push
or
cltd
mov
inc
sahf
fs
into
fists
outsb
push
dec
mov
ret
sub
sbb
adc
sti
xchg
sub
adc
cmc
push
data16
ret
lods
jecxz
fwait
test
pusha
inc
mov
repnz
sbb
arpl
adc
pop
mov
cmp
ds
pop
fptan
jns
mov
adc
movsb
pusha
cltd
inc
and
bound
jp
push
xor
inc
xchg
test
mov
mov
sub
ss
loopne
adc
or
lret
fcmove
cmpsl
sub
jle
subl
sbb
mov
stos
sbb
sub
xchg
mov
pushf
cmp
push
cmpb
ret
adc
mov
xchg
ljmp
mov
xchg
pop
out
jmp
testb
outsb
fdiv
adc
cmc
or
fistpll
out
ds
icebp
cmpsl
dec
push
jns
daa
lahf
enter
xchg
outsb
and
ds
leave
xchg
sbb
add
out
pop
lock
mov
mov
xchg
dec
xlat
stc
jo
dec
dec
cli
xor
pop
lock
into
xchg
sbb
stos
add
ja
out
out
enter
mov
push
in
iret
fnstenv
mov
adc
or
sbb
ja
shlb
out
paddsb
ljmp
jnp
dec
aam
lahf
cs
outsl
add
push
stc
dec
xor
mov
data16
dec
cmpsl
je
add
mov
and
cmpsb
pushf
xor
data16
or
ds
sti
cmc
nop
in
fildl
inc
out
nop
sub
push
sahf
push
sub
push
add
movb
cmpsb
ss
cltd
fldenv
rolb
shlb
sub
mov
adc
insl
sub
rcrl
mov
sub
push
inc
test
bound
cmp
mov
or
pop
cmpsl
sub
aam
push
xor
or
mov
lock
fldenv
repnz
pop
outsl
and
xor
out
lea
pop
cwtl
rep
jp
push
add
cmp
inc
enter
sbb
cltd
enter
inc
ja
movsl
add
cmp
lock
fnstenv
std
dec
popf
arpl
mov
cmc
inc
adc
mov
pop
test
loope
push
out
push
add
or
or
sahf
pop
or
test
lret
dec
fwait
mov
daa
leave
mov
mov
mov
sbb
add
xchg
inc
es
les
stc
inc
cmp
sbb
ja
jne
mov
mov
cmc
out
mov
xchg
pop
jae,pn
dec
mov
cmpsl
test
repnz
push
outsb
pop
leave
dec
adc
into
adc
aad
out
xor
mov
insb
push
add
pop
and
add
adc
inc
fs
and
outsb
dec
add
movl
icebp
ds
outsb
loop
scas
inc
decb
pop
sbb
sbb
add
test
jne
mov
mov
insl
imul
inc
push
arpl
int3
js
int3
sbb
jmp
xchg
cld
in
pop
jge
int3
mov
cmp
mov
nop
insl
pop
xchg
iret
and
rorl
fldcw
rorb
and
in
dec
sub
mov
shlb
call
test
cs
pop
mov
adc
xchg
ljmp
add
insb
mov
jae
jle
xor
add
jge
fsubrl
pop
jns
in
ljmp
mov
cmc
xchg
out
cmp
stc
lods
inc
scas
mov
mov
mov
mov
loopne
jae
into
dec
cmc
jne
cmp
xchg
in
mov
int
out
push
jno
lods
lcall
pushf
inc
sub
or
mov
sahf
fs
int
xchg
add
ds
mov
xor
int3
lock
dec
lcall
jp
xor
dec
and
cmp
pop
std
roll
repz
lret
pop
hlt
jg
sahf
shrb
pop
dec
lea
cmp
mov
xor
mov
or
lret
mov
mov
sub
enter
fcomps
mov
push
fwait
in
js
xor
jne
data16
mov
out
mov
jp
adc
aam
pop
bound
gs
cmp
daa
dec
pushf
xor
sbb
cmp
and
mov
dec
rep
fninit
aaa
dec
es
xor
push
sub
mov
stc
jno
arpl
gs
lahf
out
xor
popa
mov
jnp
push
jl
dec
add
repnz
dec
adc
jecxz
mov
in
mov
mov
ffreep
cmp
por
push
test
xor
pop
push
gs
xchg
pop
aad
mov
mov
imul
andl
mov
std
xchg
jmp
add
or
inc
mov
or
xchg
arpl
mov
dec
mov
mov
clc
in
pop
push
jns
cs
push
or
popa
mov
xchg
arpl
lret
ljmp
repz
push
rcrb
adc
mov
xchg
xchg
aam
pop
add
mov
jbe
lock
hlt
das
mov
xor
jge
mov
or
pop
jle
mov
jecxz
pop
outsb
mov
adc
pushl
mov
loop
xchg
adc
dec
cmp
pop
xchg
jp
inc
add
mov
lret
jbe
gs
mov
and
popf
jle
adc
out
insb
ret
lea
and
mov
inc
xor
or
jecxz
mov
sbb
int3
push
sbb
aaa
fcomi
cmpl
xor
sahf
jmp
xchg
lret
sbb
in
testl
insl
fcmovnu
sub
fcmovb
mov
and
xchg
push
shr
test
mov
sbb
jb
test
or
daa
or
sub
andb
mov
out
nop
mov
dec
lea
sbb
mov
stos
ret
jg
pop
push
mov
add
sub
negb
gs
jge
xor
xchg
fsub
mov
rol
jmp
sarl
imul
mov
lock
pop
fldcw
adc
dec
or
pop
mov
into
and
loope
xor
push
xchg
sub
clc
or
mov
shrb
push
mov
dec
mov
mov
rclb
jl
dec
frstor
jg
lcall
jecxz
imul
imull
dec
and
push
ljmp
mov
jns
adc
repz
xor
cwtl
mov
xchg
and
lret
lock
sub
loope
les
dec
imul
sub
lea
inc
loope
adc
or
push
fsubrp
popa
jl
inc
dec
pop
xchg
jns
lcall
push
mov
cmp
pusha
xchg
or
and
pop
cltd
mov
xchg
sbb
repnz
inc
mov
arpl
mov
mov
shll
push
inc
std
fimuls
mov
shrb
aaa
andb
cltd
insb
stos
fdivrl
insb
push
into
jecxz
pop
imul
cli
in
int
jp
rorb
ja
push
jbe
push
cld
jb
lahf
mov
sub
push
jp
add
push
insl
or
aad
and
push
popa
and
mov
jbe
fists
imul
push
and
sub
mov
xchg
mov
cltd
push
sbb
outsb
test
dec
dec
insb
jo
shrl
jp
xor
lods
mov
out
jle
adc
add
dec
stos
dec
mov
inc
push
push
xor
dec
lret
gs
push
add
jg
aad
inc
sti
add
test
push
fists
mov
ss
cld
loopne
cmp
dec
fimull
cltd
cwtl
mov
out
negl
pusha
xchg
jbe
cmp
pop
and
nop
imul
lahf
xchg
sahf
in
pop
dec
jg
in
pusha
inc
mov
and
lret
pop
aam
testb
pop
aaa
test
enter
and
jle
jmp
dec
je
inc
mov
jno
jne
jmp
insb
xor
mull
int3
push
mov
daa
fcoml
rorb
in
inc
js
decl
rolb
out
aaa
cld
mov
into
push
pop
ss
mov
push
pop
sbb
sbb
test
fsubrs
test
and
rcrb
adc
lcall
jae
outsl
cmc
xchg
or
popa
dec
mov
adc
rclb
jno
sub
test
scas
pusha
mov
es
in
or
push
pop
jle
aaa
cwtl
lahf
shlb
sbb
xchg
jp
out
dec
lds
mov
fs
mov
dec
add
jg
push
xchg
mov
or
lods
leave
xor
enter
sbb
stos
out
push
stc
fstpl
in
pop
jo
pop
in
scas
sbb
test
jb
and
sub
je
incb
xlat
fbld
pop
lret
pop
mov
std
adc
les
push
cld
mov
mov
stos
sti
jbe
mov
mov
pop
dec
out
mov
es
lock
xchg
sub
xor
and
inc
lcall
js
repnz
idivb
repz
mov
xor
adc
iret
pusha
lds
sub
push
insl
sahf
sub
imul
subb
pusha
lcall
sbbl
stos
call
jmp
stos
add
cmpsb
fbld
imul
cmp
aam
jmp
out
sahf
inc
sub
mov
gs
pop
aam
lds
frstor
cmp
jecxz
jecxz
push
pop
shrb
or
jmp
add
pop
pop
inc
jmp
dec
jmp
cmp
ret
mov
mov
xchg
jg
into
adc
dec
adc
lret
jbe
push
insb
ret
push
sti
insb
inc
not
cmp
repnz
xchg
fistps
cltd
pop
jle
movsb
mov
xchg
insl
push
sbb
sub
test
dec
out
icebp
inc
xchg
adc
mov
pop
test
call
push
cmpsl
dec
xchg
sub
jp
shll
inc
push
cmp
in
aaa
add
push
push
cmp
cmpsb
test
stos
sub
xchg
pop
out
pop
scas
xchg
adc
pop
idiv
stc
push
orb
std
and
insb
jno
popa
pop
inc
nop
jmp
mov
sbb
mov
cmp
cli
push
fadd
inc
arpl
jmp
jb
cltd
push
xor
xor
add
jge
imulb
call
in
jns
sub
cli
sub
das
push
ret
xor
mov
sbb
jmp
and
out
aas
movsb
loop
and
inc
out
dec
je
rorb
xchg
iret
scas
jo
mov
mov
pop
pop
mov
mov
repz
lret
push
lcall
ja
sbb
xchg
jp
jl
push
sbb
mov
pop
addl
adc
inc
inc
std
mov
mov
cld
cmp
filds
or
in
push
jle
jne
inc
ret
push
jb
add
push
xor
cmp
mov
sahf
add
out
aas
and
jo
xchg
sub
sub
aad
sub
ret
inc
add
adc
mov
xchg
mov
mov
and
inc
pop
clc
push
roll
xchg
xchg
mov
push
push
bound
das
xchg
out
repz
ja
testl
jp
fistps
and
bound
mov
insl
call
mov
sar
int3
icebp
aad
cmp
push
cmp
and
out
int
lods
sub
lret
push
andl
test
cmp
ss
decb
mov
shl
mov
cmp
outsb
cld
addr16
xchg
or
inc
or
sbbb
sahf
sysenter
push
cmp
cmp
or
mov
sub
out
xchg
fnstenv
sbb
cli
sbb
xchg
xchg
push
cmp
pop
push
inc
movsl
xor
sub
sbb
xchg
dec
int
aaa
push
and
shll
js
insb
loop
and
sub
jbe
sub
xor
add
push
mov
xchg
stos
or
pop
rclb
aas
rcll
mov
inc
ret
jp
pop
rcll
xchg
mov
or
push
xor
inc
jae
cmp
pusha
fldt
adc
mov
sbb
lods
in
pop
in
ret
inc
pop
pop
cmp
jmp
and
stc
mov
or
push
outsb
adc
loope
or
jne
add
adcl
in
test
cmp
jp
and
push
push
addr16
jmp
mov
mov
add
cmp
mov
loop
pop
sbb
mov
testb
add
out
xchg
ljmp
adc
test
fldcw
js
je
pusha
jbe
shlb
pop
sbb
in
sub
test
icebp
push
push
enter
mov
test
and
cld
and
xchg
adc
loopne
loope
sub
xchg
fisubs
imul
pop
sbb
adc
mov
cmp
pop
cli
scas
fcomps
and
sub
xchg
mov
add
popa
pop
rcrl
nop
in
fwait
sbb
repnz
cmc
shll
add
test
sbb
dec
out
lcall
mov
adc
or
out
enter
adc
dec
pushf
aad
jl
add
out
xor
int3
xchg
fstp
jb
inc
mov
push
sti
mov
arpl
lret
repnz
adc
popf
lahf
pushf
add
cwtl
mov
mov
xchg
lea
inc
fs
jmp
divl
pop
out
fs
pop
shl
add
loopne
lds
adc
lret
cvttps2pi
test
adc
mov
popf
xor
ret
fdivl
inc
mov
gs
hlt
ljmp
cmpsb
faddl
out
inc
lods
or
sarl
sbb
jp
xlat
ljmp
push
push
es
mov
sbb
popa
ja
std
mov
sbb
xor
dec
sti
dec
aaa
mov
loope
addl
jno
inc
or
mov
push
mov
test
pop
adc
jge
ljmp
mov
mov
lret
and
mov
add
mov
fwait
cmc
inc
call
rdmsr
ljmp
shlb
rcrb
test
insl
sub
xor
mov
testl
adc
repz
lds
stos
mov
dec
xor
xchg
sub
push
cmp
nop
pop
inc
jbe
xor
das
mov
mov
arpl
ds
push
std
push
mov
xchg
dec
jge
aaa
jg
or
cwtl
add
outsb
or
sub
mov
test
lods
pop
les
arpl
xchg
sbb
pop
mov
jg
xchg
idivl
loop
lods
stos
jne
in
and
out
ds
jnp
push
push
je
xor
pusha
mov
fmull
sub
dec
mov
fsubr
in
clc
fdivrl
and
push
repnz
lods
adc
fs
pop
mov
add
push
and
test
insl
xchg
xor
cltd
ficomps
xlat
cs
popl
imul
mov
push
mov
add
enter
loop
std
mov
xor
fistps
test
add
jl
mov
mov
dec
cmp
push
leave
stc
xlat
loopne
fnstenv
xchg
movsl
icebp
outsl
lods
pop
cwtl
mov
frstor
ja
pop
add
jo
mov
lret
jp
fdiv
mov
dec
mov
popa
pushf
test
sbb
aam
xchg
inc
in
cmp
sbb
fmuls
push
mulb
pop
inc
pop
jg
incl
ret
jle
data16
sahf
jae
insl
lock
jae
out
lock
mov
ss
incl
add
mov
lahf
inc
xchg
popa
xlat
gs
cli
and
iret
add
repnz
add
mov
loop
mov
xchg
sti
xchg
add
pop
mov
mov
or
sbb
add
mov
lea
mov
icebp
dec
xor
pop
sbb
mov
pop
cmp
adc
mov
sbbb
xchg
xchg
pusha
out
fisubrl
sub
imul
push
enter
or
dec
sub
clc
pop
es
pop
inc
xchg
stc
mov
imul
pop
adc
repnz
mov
add
cmp
xchg
addr16
rep
jb
in
push
mov
push
mov
movsb
out
incb
aaa
mov
lret
adc
add
in
cs
cmpsb
add
sti
pushf
outsl
adc
or
aad
clc
xchg
enter
divb
into
fidivl
shlb
cwtl
inc
jp
ss
fdivrs
or
iret
mov
mov
aas
jp
imul
pop
and
stos
push
lret
addb
dec
dec
mov
dec
mov
xchg
lret
mov
inc
pusha
jge
mov
dec
outsl
push
pop
adc
sahf
iret
sub
mov
scas
push
lods
pushf
sub
and
adc
jecxz
repz
out
out
pushf
or
pusha
imul
ret
lea
call
xchg
loope
sub
cs
inc
into
push
out
je
test
stc
jl
adc
dec
andl
loopne,pt
enter
icebp
push
xchg
mov
mov
fmull
pop
jl
call
adc
aaa
sbb
ss
stos
and
pop
and
push
repz
xor
adc
jmp
into
lcall
shll
je
jle
lds
scas
mov
pop
pop
mov
test
rcrl
cli
and
xchg
xchg
pushf
pushf
pop
shll
sbb
std
jb
xor
pop
fwait
xchg
mov
cmp
icebp
mov
fsubrs
outsl
sti
sbb
and
gs
ficoml
mov
daa
icebp
sbb
inc
jo
add
shll
xor
xor
cltd
inc
psadbw
adc
sub
cmp
dec
loopne
cmpsb
xchg
jns
iret
jne
lods
xor
outsl
lcall
dec
mov
fmuls
je
push
cmp
dec
adc
sbb
mov
lods
stos
sbb
sbb
pop
sbb
pop
sbb
sbb
mov
ds
push
jns
sbb
orl
mov
stos
pop
jb
cwtl
test
mov
in
hlt
jno
js
mov
mov
cmp
imul
outsl
mov
inc
adc
bound
cmpb
cmpsb
fisubl
fldcw
and
cmp
je
mov
jmp
and
push
iret
mov
fiaddl
stos
add
inc
add
inc
xchg
dec
xchg
mov
push
xchg
sahf
shrb
adc
inc
sbb
jge
push
es
pusha
ret
or
inc
data16
mov
inc
xchg
lods
bound
ljmp
test
dec
or
and
jae
je
insl
jb
loopne
je
icebp
sbb
cs
mov
and
mov
and
cmp
sbb
divb
xchg
cmpsl
cmpsb
js
aam
mov
inc
loope
sbb
std
xchg
sub
mov
jg
push
sub
inc
mov
xchg
std
cmp
mov
cmp
jo
fwait
icebp
mov
sbb
lock
out
scas
movsl
aaa
outsl
adc
lds
push
xchg
sbb
xor
mov
repnz
pop
int
es
mov
inc
or
or
jnp
test
jbe
push
sahf
xchg
jbe
nop
sub
lods
pop
fnstenv
pop
push
add
inc
and
jns
repz
orb
xchg
sbb
das
jle
push
cli
aaa
dec
cld
sbb
lea
push
jnp
xor
dec
fcoms
sub
and
jge
xor
mov
jmp
inc
push
outsb
cmpsb
dec
das
add
sub
sbb
jbe
add
ds
mov
sub
inc
fwait
test
sbb
push
aam
test
stos
into
pushf
mov
rclb
stc
loopne
iret
xchg
subb
sub
mov
cmp
xchg
pushf
adc
jp
repz
mov
daa
add
mov
mov
mov
fwait
xchg
push
nop
jo
fsqrt
into
mov
imul
inc
xor
outsb
mov
cmpsb
xchg
sub
pop
xlat
dec
daa
addr16
pop
les
mov
sub
jo
or
lods
mov
enter
ja
mov
popa
leave
cltd
mov
clc
push
xchg
mov
lret
les
imul
int3
jnp
pop
cs
mov
insb
sbb
std
cli
xchg
mov
or
and
sbb
pop
xchg
insl
int
loopne
fldenv
jbe
ror
xlat
mov
hlt
pop
sbb
into
jmp
mov
and
pushf
or
cmp
jge
mov
shl
rorb
xlat
jbe
sub
andb
int3
mov
insl
lret
inc
and
lcall
jle
cmp
jle
icebp
shrl
leave
out
push
adc
pop
jl
ret
into
pop
leave
pop
scas
and
adc
sub
in
pusha
lea
mov
movsl
fmulp
add
scas
mov
adc
fiaddl
pop
inc
add
mov
adc
iret
jne
clc
leave
or
xor
jb
fsubs
xchg
loope
dec
sub
lock
loopne
mov
cwtl
sbbb
jb
in
mov
sti
xchg
jge
mov
repz
fs
dec
adc
xchg
mov
pop
sbb
ret
cmpsl
ss
or
mov
cld
push
mov
push
dec
cltd
pop
dec
das
push
movsl
mov
clc
pop
jae
adc
ret
jge
stos
inc
push
jmp
cmp
push
outsl
push
xchg
xor
andb
xchg
mov
mov
and
cld
xchg
adc
xor
sbb
sbbl
lds
adc
pop
into
les
push
sub
mov
lock
push
jb
andl
rorl
add
popa
sbb
push
adc
mov
dec
js
repnz
pop
aaa
movsl
je
add
and
insb
pop
loope
orl
push
pop
mov
xchg
xchg
outsb
iret
dec
mov
and
out
inc
or
ljmp
nop
sub
push
mov
xchg
div
mov
cwtl
cmc
stc
inc
pop
call
xlat
pushf
roll
cmc
test
xor
inc
in
mov
add
or
xor
pop
insl
push
ja
xchg
sub
dec
fisubrl
vmovntps
ret
fisubl
sbb
add
test
push
imul
mov
add
push
sub
inc
xorl
push
sbb
call
sub
sbb
nop
pusha
adc
fildll
fstl
mov
push
cmp
mov
xchg
test
mov
xchg
mov
test
mov
push
dec
in
les
fiaddl
rolb
jne
mov
xchg
adc
ret
push
xchg
lea
pop
cmp
rorb
imul
mov
mov
imul
and
xor
std
pop
adc
pop
das
adc
xchg
fistpl
add
scas
mov
pop
repz
cmp
ljmp
ret
out
lahf
rol
stos
pop
inc
xchg
lea
jno
sub
lahf
into
sub
cli
mov
jmp
aad
mov
mov
sbb
add
cmp
lea
lock
xchg
cmpsb
inc
xchg
sarl
idiv
inc
ret
sarl
push
xlat
and
adc
push
pop
inc
sbb
cli
push
mov
xchg
lcall
pop
pop
adc
push
jae
in
fwait
ds
dec
adc
aam
mov
cmp
sbb
mov
outsb
setl
xchg
push
xor
loop
mov
andb
roll
and
jae
cli
cmpsl
xchg
testl
and
je
sarb
pusha
mov
jbe
scas
rol
pop
lret
push
sbb
sub
pop
gs
push
add
es
jecxz
popa
jl
mov
mov
scas
out
xor
mov
dec
jae
sbb
push
and
mov
popa
dec
push
jb
lret
push
icebp
cmp
inc
jle
mov
jnp
in
into
jno
cmpsw
push
loop
pop
add
sbb
hlt
adc
orb
xor
repz
jge
cmp
shl
xor
inc
roll
xor
lcall
add
mov
sub
stos
or
xchg
pop
xchg
movsb
insl
mov
aaa
ss
jae
add
inc
mov
notb
mov
xchg
lret
pop
xchg
mov
dec
pop
pop
mov
nop
popa
mov
or
icebp
push
jo
cmpsb
pushf
pushf
jecxz
mov
pop
ja
and
arpl
push
stc
fwait
and
mov
pusha
dec
adc
gs
push
jno
mov
insl
cmp
and
jae
or
cmc
pop
cmp
cmp
les
mov
jbe
xchg
add
imul
jno
xor
icebp
dec
test
jge
pop
cmovge
ret
leave
repz
in
or
and
push
jmp
in
sub
loop
jbe
or
ds
sbb
push
mov
shr
xchg
mov
sbb
scas
push
stos
rol
dec
hlt
jl
in
sub
dec
lea
scas
ret
add
cmpsl
xchg
pusha
pop
lods
dec
std
repz
xchg
xchg
int
ja
insl
fisubs
out
inc
cmc
bnd
movsb
jno
inc
arpl
loope
fnstenv
inc
sbbl
jp
outsl
jnp
jg
pop
inc
insb
or
or
or
mov
ficoms
xchg
push
cwtl
in
hlt
jb
repz
inc
test
or
mov
pop
scas
in
mov
inc
adc
xchg
ds
sbb
out
aad
and
shlb
xor
lds
jo
inc
inc
jle
sarb
fmul
daa
cmpsl
lds
test
sbb
gs
sbb
adc
push
adc
dec
and
int
xlat
mov
xchg
jns
inc
call
and
add
out
pop
outsb
mov
jmp
pop
movl
xchg
mov
xchg
jle
mov
xor
lds
clc
xchg
mov
sub
and
adc
sbb
aam
dec
push
jne
sbb
repz
xor
stos
mov
mov
lods
int
imul
enter
je
mov
rorl
std
mov
outsl
in
outsb
iret
jle
dec
jl
xchg
fadd
mov
aas
mov
fisubs
sarb
jns
add
popf
mov
jo
inc
sub
ja
enter
push
mov
dec
movsl
mov
sahf
mov
aaa
cld
sahf
mov
mov
enter
push
fidivrs
inc
ret
fwait
jmp
mov
insb
mov
push
fcmovbe
inc
mov
call
lea
neg
jns,pn
mov
or
mov
arpl
mov
push
cmp
sbb
rsqrtps
nop
in
cli
jp
mov
arpl
xchg
pop
test
clc
push
mov
lret
sub
cmp
pop
fists
mov
jbe
sti
imul
enter
jnp
shlb
mov
fildl
or
push
clc
lods
mov
inc
inc
adc
nop
xor
adc
daa
fimull
fwait
cmp
mov
shrb
aas
test
lret
dec
imul
je
iret
add
cmp
rcr
inc
pop
aas
xor
bound
sub
rolb
jae
mov
add
insb
mov
js
outsl
loopne
repz
js
jmp
fists
leave
dec
lret
movsl
les
inc
mov
mov
jae
pop
fs
xor
fnsave
aaa
mov
cmp
sbb
out
mov
mov
pop
xor
cmp
adc
mov
push
jb
dec
movsl
loope
pop
adcl
dec
xchg
imul
mov
jbe
out
push
movsl
mov
cmpl
sub
mov
adc
out
jno
pop
loope
push
cmpl
mov
aad
aam
cmp
pop
mov
adc
cmp
push
and
pop
pop
dec
mov
pop
cli
scas
lds
xchg
addr16
std
outsl
aad
fwait
mov
mov
mov
jle
or
lcall
imul
inc
dec
cmp
test
adc
jae
push
ret
clc
mov
nop
and
dec
fisttpll
bound
jp
mov
push
repz
xchg
fidivrl
push
cmp
lahf
scas
je
adc
loope
dec
iret
cmpsl
mov
insb
pop
dec
add
xor
jecxz
das
ret
in
xchg
or
push
dec
dec
add
fistpl
sub
jge
push
jle
cmp
addr16
jne
cmc
or
fidivrl
push
add
dec
sbbl
adc
jbe
push
fildl
push
xor
jl
xchg
in
fbld
mov
test
jecxz
or
jne
insl
lret
lods
jne
jb
aad
mov
or
inc
fwait
or
sub
ss
cltd
leave
adcl
filds
sbb
jg
jae
adc
cmpsb
inc
je,pt
std
xchg
mov
jge
test
adc
xor
out
nop
sub
test
pop
push
inc
mov
dec
sub
mov
jb
mov
stc
push
push
or
mov
nop
movb
sub
xchg
push
cmp
sub
cmpsl
fs
pushf
notrack
stos
mov
mov
push
pop
inc
icebp
addl
data16
ja
mov
test
cmpsl
rcr
clc
sub
jp
mov
mov
push
ffree
dec
pop
shl
push
push
test
outsb
pop
leave
xor
push
push
pushf
subb
sbb
ss
iret
ds
dec
xchg
jb
cmp
adc
and
xor
add
push
jle
dec
push
insb
movsl
and
push
imull
fs
dec
xchg
push
pop
mov
lcall
int
enter
scas
sbb
repnz
sbb
mov
inc
jno
repz
inc
xchg
not
out
push
pop
fwait
push
push
jp
insl
inc
int3
dec
mov
movsl
jno
lock
xchg
jne
test
mov
aas
loopne
inc
inc
mov
data16
fcmovbe
mov
add
ret
lds
mov
fstps
int
repz
jne
add
and
scas
xchg
dec
repz
sub
dec
mov
mov
add
push
push
je
je
mov
and
stc
mov
sub
loope
fimuls
push
rcl
js
es
mov
or
fstp
adc
jo
in
jmp
clc
sbb
aam
cmp
ss
lcall
iret
out
clc
inc
insl
dec
sbb
sbb
cmc
pop
xor
imul
sub
push
sub
sub
xchg
xor
sub
rcrl
in
sbb
push
sahf
or
or
das
dec
pop
mov
jns
aam
fildl
cli
pop
negb
mov
cmp
bound
dec
mov
call
xor
dec
mov
or
add
pop
pop
fwait
andb
mov
jg
cmp
int
xor
test
std
inc
out
imul
xor
pop
stc
xchg
repz
jae
popa
in
lock
add
arpl
mov
mov
xchg
jae
mov
test
rcr
fnstsw
xor
outsb
in
data16
push
sub
rorl
lock
or
mov
das
jbe
sbb
testl
fisubl
sbb
out
push
adc
nop
xor
add
push
rcrl
dec
adc
jl
mov
hlt
mov
xchg
movb
push
mov
add
jl
shrb
or
push
out
push
sbb
lcall
dec
pop
clc
arpl
adc
int3
pop
test
push
sbb
inc
mov
rorb
rcrl
cwtl
fnstsw
enter
sub
fisubs
dec
jno
add
add
idivb
sbbb
push
xchg
mov
push
test
in
or
mov
adc
mov
rorl
pop
out
jle
into
xchg
adcl
addr16
cltd
adcb
icebp
mov
adc
test
mov
sub
nop
xchg
out
mov
pop
scas
xor
imul
cld
pop
bound
les
call
sbb
inc
mov
out
jp
mov
jnp
sub
or
ljmp
sub
pop
into
or
cli
add
cmp
lds
jp
lret
aam
sti
icebp
pavgb
imul
add
adcl
lahf
test
imul
lret
outsl
loope
test
add
int3
push
stos
js
push
lea
pop
mov
push
mov
out
mov
mov
dec
push
cmp
rclb
dec
add
or
sbb
scas
mov
call
adc
xchg
int
shll
xor
pop
pop
xchg
mov
iret
rclb
mov
mov
icebp
and
fbstp
push
cmpl
popa
fcoml
roll
pushf
into
pop
mov
scas
jbe
inc
testb
cmp
push
or
ja
fsubs
pop
jge
ja
nop
in
jp
repnz
orl
inc
mov
fmul
dec
sub
scas
jnp
test
adc
jl
cli
or
stos
sub
fisttps
sbb
out
je
sub
inc
mov
and
adcl
pop
loopne
or
mov
cld
xchg
aaa
rolb
xchg
out
inc
pusha
pop
jnp,pn
loop
fldenv
adc
test
jae
mov
pusha
sbb
pusha
and
ljmp
mov
push
and
ja
movsb
cwtl
bnd
adc
push
push
xchg
ja
jo
filds
jg
cmp
mov
bound
int
pusha
gs
sbb
jl
push
ljmp
mov
pop
arpl
aad
pop
mov
mov
imul
sbb
and
lds
flds
sbb
cmp
sub
loop
sub
fwait
cmp
pop
fstpt
out
gs
hlt
jno
sbb
mov
sub
les
shrb
cmp
lds
pop
adc
or
cwtl
and
or
enter
movsl
push
mov
sbb
nop
fbstp
iret
cmpsb
cltd
fnsetpm(287
pusha
xchg
xchg
pop
ret
dec
rorb
cli
push
xchg
jle
adc
js
pop
hlt
cmp
subb
dec
repz
inc
push
mov
mov
or
push
lahf
lret
cmp
lret
mov
enter
push
rcl
xor
push
sbb
push
popf
shll
push
push
jb
cmp
or
addb
sub
mov
jecxz
int
push
dec
mov
das
test
adc
hlt
xchg
std
add
sbb
mov
push
xlat
sarl
adc
mov
mov
std
and
mov
jmp
fcmovne
jne
lret
push
ljmp
fimuls
jg
and
mov
cmp
push
movswl
and
std
mov
sbb
cmp
mov
inc
fstps
icebp
dec
aas
push
ja
ss
repz
add
icebp
inc
jg
ja
orl
adc
push
add
xlat
popa
and
cmp
pop
movsb
jp
fcmovb
mov
data16
add
mov
mov
add
lods
push
mov
movsb
sub
mov
push
add
inc
sub
pusha
decb
xchg
mov
fldenv
cmpsl
iret
cmp
es
mov
push
jbe
inc
cmp
add
ret
jbe
mov
out
nop
dec
push
and
sbb
out
sbb
lock
fdiv
mov
push
mov
inc
or
je
xchg
cmp
mov
adc
shlb
fs
fsubs
cmc
int3
fimull
inc
mov
and
bswap
jl
add
push
jo
roll
cmp
and
mov
jl
rcll
push
out
push
pop
xor
cmp
shlb
cli
cltd
cli
adc
lds
inc
rorl
and
xchg
dec
outsl
mov
movsb
popa
jmp
cwtl
pop
movl
xchg
popa
es
pop
sti
jmp
fstps
lea
mov
push
mov
js
int3
loope
cltd
int3
inc
lds
sbb
pop
negb
mov
push
fdivs
jp,pn
inc
add
jb
mov
or
daa
shrb
push
mov
mov
adc
into
imul
notb
pop
and
movsl
fdivrs
test
jmp
mov
jb
pop
nop
cmp
mov
fs
mov
xor
cmpsb
jb
mov
add
push
outsb
and
mov
popl
pop
push
and
jno
fnstenv
mov
or
aas
jecxz
sbb
mov
js
xor
or
jb
jne
xchg
outsb
push
mov
movsl
xlat
test
cmp
xchg
xlat
imul
jne
jl
jb
push
sbb
mov
push
inc
pop
push
icebp
push
bnd
mov
mov
test
pop
mov
adc
dec
and
lea
jae
mov
movsl
push
add
js
sbb
roll
outsb
mov
lret
mov
test
inc
xor
add
pop
or
loop
fstl
push
js
ret
aas
mov
jns
add
jecxz
push
roll
jmp
cld
in
push
pop
pop
jae
or
into
adc
push
nop
pop
out
xchg
mov
inc
cmpsl
aas
and
lods
dec
mulb
mov
mov
dec
negb
push
xchg
idivb
adc
std
je
fbld
mov
scas
pop
sub
pop
hlt
sbb
int3
jmp
imul
xor
lds
fwait
leave
cli
or
leave
fcmovnbe
xchg
and
pusha
divb
push
and
or
dec
ffree
push
jbe
cmpsl
shll
loop
bound
and
and
lods
sbb
inc
dec
sub
shll
dec
push
fdivrp
cmp
inc
cmpsb
dec
insb
mov
jge
push
mov
jbe
movsb
adc
stos
ror
inc
mov
add
cmpsl
rolb
outsl
repnz
xchg
mov
and
dec
stc
dec
pop
cmc
dec
repz
fldenv
and
gs
fisttps
add
mov
push
cmpl
and
xchg
icebp
sbb
push
notl
bound
loopne
adc
mov
dec
cmpsl
aad
xor
stos
adc
test
or
push
es
in
lret
pop
js
jl
inc
jp
jl
movsl
negl
jmp
push
rclb
mov
xor
mov
mov
out
sbb
aas
adc
mov
add
in
in
pop
stos
mov
aad
arpl
dec
lods
dec
aaa
stos
xor
pushf
arpl
xor
or
mov
fs
adc
nop
xchg
xor
add
out
icebp
inc
rclb
adc
push
mov
pop
test
inc
lods
mov
nop
jno
aas
repnz
sbb
imul
pop
mov
inc
adc
sub
mov
lret
dec
jle
dec
cmp
loope
int3
daa
lods
sub
aas
add
imul
add
add
lcall
xchg
xchg
pop
mov
adc
test
jmp
sub
jne
jmp
popa
push
mov
outsl
sarb
add
ljmp
inc
mov
jo
fistl
cmp
out
in
sbb
bound
mov
ret
xchg
xchg
js
inc
xchg
xchg
scas
xor
outsb
fisttps
xchg
into
int3
add
dec
out
mov
jmp
sub
mov
aas
inc
dec
imull
dec
jle
popa
and
xchg
js
cwtl
rcrl
stos
xor
inc
cmpsl
add
cmp
fiaddl
push
jle
sbb
lock
out
xchg
mov
out
imul
test
iret
repz
mov
jl
leave
fistpl
dec
mov
mov
cld
sub
leave
stos
sti
sbb
ja
mov
sbb
icebp
push
clc
inc
iret
loope
aaa
mov
or
inc
mov
mov
xor
or
push
stos
mov
and
mov
pop
aas
enter
mov
push
bound
in
scas
mov
nop
icebp
in
adc
adc
jbe
int3
outsb
popf
out
mov
adc
add
jg
xor
sahf
sbb
mov
adc
adc
fildll
xchg
fwait
rorb
fistpl
mov
stos
gs
mov
sbb
and
mov
sbb
sbb
roll
jle
fdivs
inc
addb
ja
xor
bound
pop
push
mov
int
mov
loop
xchg
cmp
pop
pusha
inc
cli
dec
push
adc
cmpb
push
ss
xor
enter
rcrb
or
movsb
xchg
neg
in
push
and
sub
ljmp
and
jmp
addr16
scas
out
adc
and
and
xchg
cmp
or
sbb
mov
mov
dec
push
jbe
dec
xor
frstor
mov
out
into
insb
push
xchg
rcll
and
sbb
jge
push
subl
add
cmp
xchg
cmp
xchg
or
adc
mov
jbe
sub
add
test
ret
mov
pop
nop
and
cli
xchg
and
test
cli
addl
fidivl
jg
out
neg
or
in
adc
call
repnz
sbb
push
insb
mov
test
out
mov
add
mov
lcall
sub
sbb
xchg
cmp
lods
sbb
loope
inc
cld
mov
sub
add
das
ficompl
sbb
mov
loop
enter
or
mov
test
adc
sub
lods
rorb
faddl
fisubrl
mov
flds
mov
push
cmc
adc
adc
lret
jge
lcall
mov
repnz
popa
icebp
sbb
ret
dec
push
mov
iret
outsl
lods
cmp
pop
xchg
ret
orb
xor
or
aad
cmp
iret
lahf
clc
sbb
mov
mov
je
cli
leave
bsr
dec
ja
mov
add
mov
push
rol
mov
ret
out
clc
lcall
sub
and
push
sub
add
cltd
les
jo
aam
dec
sbb
pop
jb
push
popa
inc
push
ds
hlt
outsl
jle
dec
es
or
aaa
cmp
mov
insl
mull
jo
das
pop
sub
pop
popa
or
movsb
xor
cmp
loope
mov
mov
jecxz
xor
ret
sbb
lea
sarb
and
pop
scas
jo
adcl
ds
pop
call
mov
cmp
scas
xchg
adc
int3
cmp
jg
cmp
push
jo
cmpsl
and
adc
flds
lahf
pop
cmc
dec
jl
into
or
aad
mov
out
cmpsl
imul
rolb
cmc
xchg
dec
sub
popa
jmp
mov
jg
imul
lds
in
out
xor
push
repnz
push
ljmp
mov
mov
sbb
in
clc
sbb
mov
inc
add
sbb
rol
lds
adc
test
pushf
sbb
fld
mov
push
or
sbb
lock
pop
fadds
sub
cmpsb
mov
cwtl
aaa
movsl
aas
stos
je
push
pop
dec
jne
sub
cmpl
jge
mov
pop
adc
cmp
out
je
inc
or
aam
out
movsb
inc
lcall
rcll
cs
xorb
repz
jl
cld
add
push
lret
mov
cmp
les
jg
mov
cli
add
jecxz
xor
sarl
stos
mov
jae
mov
lret
adc
icebp
insl
loopne
jecxz
cmp
stos
lret
pusha
sbb
xchg
ret
call
mov
mov
stos
cwtl
cmpsl
icebp
mov
sbb
les
pop
in
lret
ja
flds
daa
ds
stc
jo
jmp
xor
mov
push
cmpsb
jl
fdiv
mov
lods
sub
daa
jp
push
cmp
pop
aad
mov
in
pusha
es
and
push
int3
mov
dec
xor
adc
outsl
or
inc
mov
repz
ficoms
fbstp
push
xchg
jno
sarl
scas
mov
fbld
dec
mov
imul
push
jl
ljmp
push
dec
push
stos
aad
sub
cmp
rorb
cmp
scas
pop
xor
add
xchg
and
sti
mov
insl
mov
sub
jb
xor
lock
and
xchg
adc
sti
js
into
in
or
decb
sub
sahf
rorl
int
mov
negb
mov
pop
sbb
push
and
scas
or
lret
jne
aad
int3
add
xchg
rorl
adc
sub
cs
sbb
in
shlb
pop
inc
dec
stos
les
and
sub
pop
pop
rolb
out
cmp
pop
pop
push
mov
es
mov
sahf
rcrl
or
mov
loop
jg
insl
push
dec
push
mov
cmc
xchg
sbb
div
iret
sub
push
push
mov
repz
test
mov
nop
add
sub
dec
loopne
add
add
cmpsl
out
adc
dec
cmpsb
and
sbb
imul
mov
sub
push
inc
ret
mov
adc
fwait
xor
inc
ss
jge
cltd
lret
cmpsl
dec
pop
cmp
jmp
and
cmpl
mov
dec
scas
fldl
xor
mov
dec
lods
xor
lret
loopne
lret
lods
jno
push
dec
push
cs
movsb
push
lcall
dec
dec
inc
xor
pop
adc
sti
pushf
fsub
or
xchg
mov
adc
imul
sbb
sbb
mov
mov
les
es
xchg
out
dec
inc
mov
mov
or
pop
cs
inc
add
add
fstps
cli
cmp
in
xor
nop
inc
mov
mov
xor
orl
mov
icebp
sub
mov
pop
add
sbb
pop
xchg
ret
movsb
and
outsl
cmpsl
test
cld
or
mov
bnd
mov
inc
xor
mov
cwtl
push
into
ss
cmp
mov
in
sub
mov
jecxz
decl
lcall
lret
in
loope
arpl
sub
jp
inc
jge
add
cmp
leave
fwait
xlat
cmc
sbb
daa
ret
sub
or
lods
addr16
pop
and
testb
xlat
stc
lea
movsb
ror
fsts
inc
jnp
pusha
icebp
sub
add
push
fmul
jecxz
adc
xchg
scas
addr16
jge
and
pop
outsl
pop
orb
fldln2
jmp
rcll
fwait
pushf
sbb
lcall
loopne
cmc
dec
mov
loop
iret
fsubrp
add
sub
push
shlb
xchg
xor
jmp
or
push
pop
and
iret
pop
mov
lds
aad
cmp
sbb
mov
add
fnstsw
push
push
scas
jp
lea
jae
fbstp
mov
outsl
jno
jl
sbb
popa
inc
jno
dec
jnp
test
cli
add
test
adc
mov
push
dec
fs
dec
mov
insb
insl
sub
ret
call
dec
loopne
jecxz
dec
aad
in
adc
mov
test
fisubl
xor
mov
cmp
pusha
pop
add
cmp
dec
mov
pop
dec
test
xor
push
inc
dec
cmp
push
fidivrs
sbb
decb
push
bnd
in
inc
mov
mov
test
pushf
jbe
mov
mov
mov
jg
rcrl
lods
mov
xchg
mov
cs
stos
xchg
fbstp
xor
rolb
mov
sbb
in
call
xchg
lods
mov
int3
dec
xchg
xchg
hlt
mov
gs
jecxz
cmp
xor
test
pop
ja
add
out
xor
cmp
fcmovu
add
pop
je
cmp
dec
xchg
jne
ja
testl
fwait
add
flds
fsubrl
jg
fcmovnbe
sbb
adc
sti
sub
scas
pushf
pop
loop
dec
pop
dec
int3
fcoms
stos
push
inc
push
sar
pop
loop
pop
lock
mov
xor
ret
cli
insl
and
mov
jmp
add
std
mov
or
shr
jmp
cmc
rcrb
jbe
or
push
iret
xchg
mov
rorl
repz
adc
lods
mov
out
adc
lds
int3
xor
xor
sub
pop
pop
icebp
and
loope
out
add
out
subb
pop
mov
fmulp
xor
push
jns
jl
cli
rcrl
lahf
xor
and
lea
ljmp
das
xchg
hlt
xlat
or
outsl
loop
fistpl
pop
adc
inc
cmp
movsb
xlat
jbe
xor
push
cmp
shlb
push
sub
push
mov
cli
sbb
xchg
mov
sbb
inc
jecxz
cmp
push
xchg
aaa
fsubrl
xchg
inc
sub
pop
and
mov
stos
ja
sub
sbbl
scas
jns
inc
pop
or
mov
out
cmp
mov
outsb
sahf
test
lock
mov
push
sbb
jp
insb
test
sub
pop
xchg
adc
push
pop
mov
bound
inc
jmp
call
test
ds
stos
xor
pop
dec
cwtl
adc
mov
cld
jg
xchg
push
dec
cmp
sub
mov
cmc
cli
mov
repz
ret
add
pop
popf
test
xchg
sub
test
stos
fnstcw
inc
pusha
in
push
ret
inc
ret
sbb
adc
popa
inc
es
stos
mov
arpl
add
jno
popf
pushf
mov
idivb
aad
aaa
mov
and
gs
sbb
ljmp
or
jg
ffree
insl
jl
push
popf
mov
in
mov
adc
sahf
shlb
jp
rcll
pop
and
gs
push
jo
push
sbb
add
mov
jb
jge
mov
push
lea
rcrl
xchg
dec
cwtl
mov
push
imul
jmp
or
sbb
idivl
in
or
mov
outsl
pop
daa
inc
fdivrl
sbb
cmp
dec
jb
adc
cld
dec
mov
cmp
mov
sahf
push
cmp
les
loopne
faddl
inc
mov
clc
fstps
popf
pop
adc
push
xchg
inc
mov
adc
nop
movsl
xor
and
push
dec
flds
lcall
xchg
mov
mov
push
jge
cmp
push
xchg
mov
xor
mov
mov
sahf
pop
and
ss
ret
out
push
mov
cmpsl
imul
movsb
dec
popa
cmpsb
ja
fsubrp
int3
outsl
fisubs
jg
nop
out
orb
nop
repz
xchg
sub
inc
or
imul
push
xor
xchg
dec
jne
or
lock
ja
push
pop
cli
decl
adc
xlat
aas
scas
push
cmp
lods
sub
xor
pop
lock
mov
and
sub
idivl
ds
rcr
lahf
push
icebp
test
inc
sbb
mov
jge
dec
ror
xchg
adc
lock
fcompl
sub
cmp
and
rcll
mov
dec
fildll
push
sbb
popf
fs
xchg
mov
fdivs
scas
mov
and
sbb
push
insb
adc
mov
adc
add
xchg
push
ljmp
or
inc
mov
loopne
and
lds
cltd
sti
pop
shll
mov
xchg
xchg
imull
mov
xchg
inc
pop
xchg
out
xor
icebp
or
test
and
jno
sbbl
inc
clc
and
pop
lcall
repz
out
jg
std
out
jb
mov
jecxz
negb
insl
pop
xchg
sbb
xor
decb
bound
mov
mov
loope
mov
repz
add
mov
mov
lods
lods
jnp
jnp
pop
jo
std
jae
outsb
xchg
addr16
ja
les
mov
sbb
pop
and
adc
out
push
pop
je
push
imul
lret
lret
loopne
popf
hlt
push
pop
aam
mov
xchg
lock
sbb
ss
push
bnd
test
inc
xor
loope
int3
pop
push
pushf
test
pop
sbb
test
sub
jno
jbe
fstpl
and
ret
jg
inc
pop
out
sbb
aad
test
cmp
adc
lahf
dec
lcall
mov
sbb
jg
jle
aaa
jge
adc
outsb
fstpl
subb
sbb
and
sub
xor
loopne
push
add
leave
fmull
add
mov
aas
push
mov
push
sbb
adc
je
sar
bound
hlt
clc
push
mov
iret
arpl
std
sub
cmpsl
or
insl
inc
sbb
jecxz
aam
nop
or
add
clc
jo
testl
fstl
pop
sahf
hlt
nop
fdivrl
fildl
iret
push
stos
jo
repnz
jne
inc
subb
mov
sbb
or
push
or
xor
test
xchg
add
jae
cmp
mov
dec
adc
xor
in
mov
popf
jg
roll
dec
pop
sub
dec
mov
dec
fiaddl
pop
pushf
mov
imul
xor
int3
add
cld
push
mov
in
adc
mov
popf
decb
test
mov
pop
pop
scas
add
sbb
mov
stc
pop
subl
subl
or
jnp
gs
insl
aad
jp
xor
cmp
mov
push
dec
outsl
xchg
adc
sbb
jb
add
arpl
popf
cmpsb
xacquire
dec
adc
fsubr
lods
call
sbb
aam
jns
sahf
cmpsl
popa
jne
push
inc
es
lret
xchg
xchg
clc
aaa
in
and
das
ss
outsl
fidivl
cmpsl
popf
add
cmp
mov
lods
pop
ret
sarl
or
cmp
push
dec
enter
fistpl
cld
inc
fistps
add
fstpt
stc
fs
sub
mov
arpl
in
in
cmp
xchg
lods
inc
push
cwtl
jb
mov
or
push
lock
jle
sub
inc
add
lods
loop
int3
cmp
scas
jnp
loop
inc
xchg
orl
push
imul
mov
rcrb
inc
ljmp
jo
adc
mov
mull
or
jb
mov
dec
xchg
mov
sbb
mov
divb
sub
insl
push
xchg
adc
cld
or
inc
sbb
xchg
lea
iret
inc
cmc
fsubrp
and
dec
repz
xchg
xor
jp
sub
sbb
mov
repz
cmpsl
test
arpl
push
mov
clc
lret
mov
jmp
out
shll
add
out
inc
jne
in
ja
xchg
cli
jg
mov
cmc
lret
add
xor
pop
or
test
jae
push
mov
or
out
andb
jle
ljmp
push
mov
xor
or
scas
add
xchg
inc
fstpt
add
push
pop
push
mov
add
xor
xchg
lahf
push
pop
lcall
dec
push
gs
mov
xchg
or
pop
xchg
dec
pop
push
dec
ss
int3
in
sbb
lods
cwtl
jbe
pop
movsl
shlb
je
aad
and
fimull
mov
mov
dec
sbb
pop
stc
in
int
cmp
mov
jo
mov
push
xchg
add
adc
les
imul
jbe
add
cld
ret
inc
add
les
jg
and
adc
sarl
sti
cld
gs
cltd
xchg
xchg
mov
jns
pushf
test
or
cmpsb
xor
or
push
inc
movsb
pop
xor
sub
push
xor
cmc
add
jmp
xchg
cmpsl
sahf
adc
jne
ljmp
stos
sbb
sbb
xsha1
cmpsb
leave
arpl
jb
aas
mov
cmpsl
or
es
sahf
sti
mov
inc
pushf
push
add
out
daa
incb
jb
leave
outsb
int3
pop
sbb
clc
jno
push
call
sti
xor
dec
hlt
xchg
push
inc
mov
js
add
cli
int
cmp
negb
in
idivl
push
fdivrl
je
imul
and
sti
sahf
es
pop
in
les
dec
jne
out
xor
jp
dec
push
bound
std
test
mov
xor
pop
stos
sbb
xor
adc
jg
mov
or
push
imul
jae
sahf
insl
addr16
out
int
push
and
jo
push
pop
test
insl
xor
add
test
mov
pusha
pop
lock
adc
mov
clc
arpl
mov
pusha
add
xchg
in
pop
inc
inc
push
mov
fbld
sbb
and
push
pop
xchg
insb
imul
lret
movsb
mov
testb
xchg
pop
mov
mov
adc
sbb
or
and
push
add
enter
xchg
jo
add
pop
xor
pop
push
cli
inc
pop
add
cmpsl
xor
scas
mov
sub
dec
stc
add
dec
dec
lods
jnp
inc
inc
js
push
push
daa
fwait
pushl
cmp
insb
ret
cmpsb
xorl
mov
lcall
es
xlat
jbe
insb
fwait
dec
pop
sub
push
add
mov
outsb
outsl
ss
movsl
xacquire
fsub
scas
and
lods
mov
push
sub
subb
xchg
sbb
pop
test
rcl
shrl
imul
push
mov
in
jmp
in
in
icebp
and
cltd
dec
add
in
mov
mov
dec
fs
mov
dec
ret
test
call
insb
mov
jmp
dec
mov
inc
out
into
lods
gs
ss
arpl
xor
push
pop
dec
and
mov
sbb
cmp
adc
xor
dec
xor
insl
pushw
pop
adc
mov
push
push
xchg
cmc
cmp
xchg
add
ds
pop
pop
cltd
and
adc
fucomip
in
adc
mov
std
fwait
std
lahf
xor
insl
and
insl
arpl
inc
loop
or
stos
jnp
lea
cmc
sub
mov
pop
test
lods
xchg
sub
icebp
push
repz
aas
push
adc
pop
cwtl
lea
adc
outsl
dec
shll
pop
cltd
loop
stos
das
mov
out
mov
call
adc
dec
push
mov
out
leave
cli
xorl
ja
testl
mov
jmp
mov
mov
pop
lcall
inc
or
loopne
in
dec
sub
cmp
push
icebp
dec
mov
fiadds
dec
lahf
xchg
fistpl
mov
jle
dec
sbb
dec
dec
inc
adc
dec
int3
fstpt
lahf
sub
mov
dec
jbe
sbb
xor
lea
or
adc
loopne
sbb
cmp
hlt
adc
mov
cmp
sub
sub
and
sub
mov
push
xchg
xchg
xor
outsl
or
cmp
dec
movb
jne
fisttpl
aad
cltd
inc
scas
or
lock
sbbl
test
and
outsb
dec
aas
push
bound
loopne
push
pop
pop
mov
inc
mov
aas
fcmove
insl
mov
sub
mov
push
aaa
dec
sbb
mov
rorl
int3
cmp
add
push
hlt
jmp
xor
dec
jno
push
test
or
pop
mov
dec
in
bound
xchg
dec
fcoms
mov
fisubs
mov
mov
inc
cmpsl
fwait
enter
call
mov
add
mov
jge
mov
sarb
ljmp
mov
or
imul
arpl
inc
fldt
cmp
bnd
inc
imul
push
ss
cltd
push
das
sbb
pusha
movsb
fnstenv
push
dec
jl
sbbb
pushf
enter
pushf
adc
fidivs
sub
mov
jbe
dec
mov
xchg
push
sbbb
mov
pop
sbb
jo
push
push
lods
xor
clc
jg
cmc
icebp
inc
int3
push
sub
popa
mov
mov
shrb
dec
mov
mov
in
jmp
int
add
add
das
repnz
jbe
mov
das
lods
jno
fucomip
inc
pop
rcrl
sbb
and
inc
add
mov
ficompl
or
gs
cli
mov
jns
jae
inc
inc
mov
xchg
mov
in
dec
pushf
jns
dec
push
es
xor
cmpsl
das
std
lods
mov
lods
xchg
push
push
pop
dec
out
mov
repnz
enter
push
add
js
es
cli
fs
push
bnd
mov
pop
sub
sbb
cmp
pusha
cmc
out
daa
lods
rorl
xor
movsb
fisubs
rcl
les
int3
iret
pop
sarb
mov
insb
es
mov
movsb
int
inc
je
xor
test
enter
cmpsl
push
out
test
xchg
add
lea
stos
call
fndisi(8087
rolb
cmp
fcomip
add
adc
cmc
sbb
in
js
inc
cmp
jne
aas
scas
xor
pusha
sub
aaa
dec
daa
mov
es
or
or
dec
mov
jo
mov
adc
mov
jbe
pop
dec
push
xchg
pop
adc
sub
jb
fwait
mov
call
imul
xor
pop
xor
jns
push
in
xchg
frstor
and
mov
and
push
loopne
push
xor
cs
push
jo
xchg
add
js
insl
adc
xor
daa
sbb
xchg
lcall
js
or
push
aas
icebp
clc
js
repz
dec
rcrl
pushf
daa
or
xor
movsl
outsl
mov
ret
sub
or
divl
clc
sub
mov
insl
push
sbb
cmp
pop
mov
cli
imul
ret
stos
sub
cmc
xchg
stc
jg
dec
stc
mov
jecxz
inc
mov
movsl
add
push
fstpt
out
outsb
adc
stos
add
add
cmp
add
orl
mov
sti
inc
pop
pop
cmpsl
call
and
or
jmp
ret
or
mov
dec
arpl
out
sub
cmp
jge
adc
mov
cs
outsl
mov
addr16
mov
fldcw
stos
fs
or
fistpl
mov
setb
daa
mov
adc
flds
push
js
fadd
insl
jg
in
ljmp
lcallw
cmp
pandn
std
loopne
cwtd
mov
add
ds
cmp
jecxz
xchg
add
pop
xchg
je
cmp
add
sub
lret
adc
cmp
sbb
push
pop
es
push
or
das
jne
fdivs
hlt
inc
xor
jl
cmp
repz
mov
sub
push
adc
data16
cmp
sub
into
cs
push
inc
loopne
push
aas
repnz
jecxz
scas
out
jge
das
nop
add
mov
out
mov
pop
cs
pop
mov
stos
cmpsb
xchg
xorl
ljmp
fdivl
cmp
int3
pusha
sbb
or
insb
stc
je
push
add
mov
lds
enter
ficomps
mov
aaa
jae
dec
pushf
lock
cli
mov
xor
push
push
push
cmp
push
enter
cltd
lea
ljmp
cmpsl
out
shrb
test
movsl
jns
xor
mov
and
push
pop
mov
push
sub
or
and
xor
cmp
sbb
inc
adc
insb
mov
lret
sub
addr16
add
mov
lock
ror
mov
les
jl
xor
test
mov
xchg
adc
add
rol
inc
mov
sub
sub
fistpl
stos
push
add
mov
xchg
leave
ja
fsts
in
std
mov
jno
lods
ja
cld
cmp
sbb
cmp
enter
ljmp
sbb
or
aam
push
je
mov
jecxz
popl
lock
push
jp
fstp
sub
mov
or
pop
pop
mov
dec
sub
clc
fistpll
pusha
addr16
int
pop
imul
xor
sub
rcll
dec
or
es
xor
shlb
jo
movsl
in
lea
fs
adc
adc
pop
mov
push
push
mov
cmpsl
lock
sub
dec
js
mov
in
inc
adc
ljmp
push
mov
push
push
insl
mov
movsb
push
notb
xor
stc
inc
mov
arpl
xchg
mov
ret
in
pop
loope
xchg
js
test
jns
shll
les
outsb
push
aad
sub
nop
lock
push
dec
xor
addr16
shrl
scas
in
dec
andnps
push
sbb
pop
jnp
pop
mov
cwtl
lds
dec
mov
sti
mov
sbbl
dec
push
xchg
or
push
adc
in
movsb
sbb
sahf
lahf
test
inc
lcall
mov
or
pop
jno
push
stos
cld
push
ret
iret
das
mov
aas
dec
push
and
shlb
scas
shll
aad
pop
inc
dec
dec
push
mov
lret
fsubl
sbb
in
test
stc
xor
scas
mov
js
outsl
outsb
pop
jns
xchg
aad
stc
inc
lahf
mov
das
cltd
lods
jmp
push
data16
fstps
lea
lock
sahf
mov
in
lds
sbb
xchg
adc
push
inc
pop
out
lods
imul
cmp
ds
fsts
outsb
xchg
adc
cmp
push
jne
xlat
pop
call
shrl
add
aad
mov
sahf
xchg
ret
int
cmp
movsl
sbb
sti
dec
mov
push
add
dec
dec
ss
sub
dec
push
shl
xchg
sub
loopne
pushf
sbb
pop
mov
jp
jne
push
sbb
ljmp
rclb
nop
jge
jo
mov
adc
pushf
pop
std
jecxz
add
std
push
and
pop
out
push
xchg
stc
or
jns
daa
jbe
cmpsb
mov
dec
push
pop
ljmp
cld
cmc
fisubrl
leave
sub
cmp
pop
push
lock
ss
add
lock
xor
movsl
aad
dec
aad
push
xchg
ljmp
jne
cmp
repnz
orl
jmp
inc
add
mov
jl
mull
lods
pop
xchg
dec
jne
pusha
sbb
ja
fdivr
lcall
pop
push
stc
repnz
jge
push
mov
mov
pusha
mov
jge
mov
pop
aas
outsl
sbb
repz
inc
imul
xchg
aaa
movsb
mov
cld
push
out
les
mov
addr16
loope
mov
inc
dec
stc
cmp
push
sar
jae
hlt
out
mov
sbb
jnp
push
jno
cmp
pop
sbb
cmpb
lds
xor
lret
mov
sub
sbb
mov
stc
out
es
popa
hlt
xchg
mov
jmp
iret
outsl
ret
sub
pop
dec
sub
test
ja
inc
xor
sub
popl
or
movl
push
inc
jo
in
dec
aam
out
pushf
out
popf
add
repnz
icebp
insb
aam
mov
test
dec
lods
lret
std
mov
mov
push
fildll
jb
lea
imul
lods
xchg
dec
sarl
loop
fsubp
jbe
dec
inc
add
adc
rcl
push
add
ss
push
rolb
push
pop
xorl
pop
xlat
jle
push
xor
or
jl
push
xchg
push
repz
cmp
mov
jl
sub
into
push
cmpsb
xor
subb
icebp
push
inc
mov
xor
cltd
insl
aad
addr16
and
push
pop
dec
xchg
mov
cmp
inc
enter
push
outsb
popf
cmp
push
and
sub
adc
test
scas
push
push
push
js
dec
mov
mov
mov
inc
in
inc
mov
mov
andb
std
push
adc
add
cmpl
and
mov
xlat
xor
jle
sub
shrl
mov
xchg
jo
cld
mov
sub
repnz
cmc
mov
jecxz
jp
inc
loope
mov
sar
test
aad
xor
pop
std
stos
push
dec
pop
dec
jae
xchg
stos
mov
test
inc
or
cld
icebp
in
mov
fmuls
add
inc
and
scas
lahf
xor
cmpsb
xchg
imul
loopne
fimull
sub
sub
xor
andl
fnstcw
add
ret
and
cltd
mov
xchg
or
das
sbb
dec
fwait
les
imul
ja
or
mov
xchg
lcall
or
dec
insb
jbe
jp
movsb
xchg
mov
out
pop
push
nop
dec
lock
imull
lods
scas
xchg
ljmp
xchg
push
inc
cmpl
test
fcoms
inc
cmpsb
leave
bound
mov
xchg
sbb
into
pop
and
mov
test
mov
add
out
lret
inc
mov
cmp
sahf
ret
testb
loop
punpckhwd
sub
adc
mov
outsb
add
xor
sub
in
bound
popa
cs
outsb
dec
sub
push
jle
push
out
xlat
push
in
scas
inc
mov
mov
mov
add
sbb
ret
int
int3
xor
das
inc
mov
subl
jle
shl
xlat
pop
fbld
inc
add
inc
scas
and
cltd
in
cltd
push
fildll
mov
stos
dec
push
jo
push
add
testb
sbb
sbb
js
je
push
enter
mov
mov
clc
in
cmpsb
or
add
push
mov
and
movsl
inc
outsb
daa
fdivrl
je
and
mov
scas
pop
loopne
test
test
gs
mov
push
push
stc
fnsave
cmp
add
clc
subl
ja
mov
xor
and
sbb
bound
outsb
mov
loop
dec
int3
std
insb
mov
push
fistps
or
pop
popf
or
lods
idiv
scas
mov
sub
fs
inc
les
mov
sbb
sub
sub
ret
outsl
cmp
sti
sub
adcw
mov
dec
cmp
arpl
mov
pop
mov
xchg
mov
cli
enter
bound
mov
loope
out
jnp
pop
cmp
fidivs
xchg
clc
mov
sbb
adc
xchg
fdivrl
and
nop
adc
lods
jg
mov
mov
mov
jle
fcoms
rcll
adc
jge
add
pop
enter
cmp
and
push
xor
test
cmp
xorb
adc
adc
inc
mov
jmp
shll
inc
inc
lcall
pop
or
inc
mov
inc
mov
movsb
push
mov
mov
xor
adc
movsl
pusha
stc
cltd
sbb
andl
in
fdivs
inc
xor
jbe
scas
xor
jg
test
add
pop
subb
push
in
in
adc
adc
call
lods
xchg
mov
jne
mov
cmpsl
repz
in
dec
sub
jb
ret
dec
in
push
jno
in
jae
xchg
scas
loopne
mov
popf
mov
add
and
fsubrl
std
jmp
adc
loop
xchg
xor
mov
and
sbb
add
clc
mov
pop
xchg
sub
or
popa
test
adc
cs
mov
iret
or
fcompl
enter
mov
iret
dec
repz
cmpsb
ss
insl
xchg
shlb
andl
cmp
xlat
sahf
jecxz
outsl
or
ficoms
pop
or
mulb
and
dec
sbb
sub
inc
jno
call
rorl
fcmovnu
cmp
bound
nop
sti
cmp
es
adc
and
cmp
mov
fisttps
jno
aas
pop
dec
xchg
cwtl
sbb
cmp
xchg
cmp
push
push
je
xor
pop
mov
xchg
push
mov
mov
jg
sahf
inc
mov
outsb
mul
jns
push
and
mov
xchg
and
push
ds
cmp
out
pop
cmpsl
cmp
xchg
xchg
lahf
xchg
movsb
inc
loope
push
iret
mov
jmp
roll
rdpmc
lock
outsl
idivl
push
in
fldt
add
inc
sbb
test
xlat
shl
mov
jnp
repz
dec
sti
fcoms
dec
cmp
jne
test
movsb
out
jg
mov
mov
addr16
ss
ljmp
sahf
dec
mull
jp
or
in
cmc
es
or
push
movsb
dec
xor
push
pop
fs
xchg
addr16
jg
aas
mov
je
sub
jmp
mov
fmul
ret
ret
jp
or
xchg
cwtl
push
popa
and
das
rcrl
push
inc
jp
lods
adc
test
leave
xchg
loop
fdivl
lretw
popf
cld
cmpsl
push
pop
xchg
or
cmp
xor
ret
adcb
in
fwait
pop
nop
pop
jmp
sbb
jg
mov
ja
mov
pop
dec
in
mov
xchg
sbb
insl
fcomip
addr16
cwtl
sahf
cmpsb
ret
xor
ficoml
es
out
lods
add
xchg
cli
inc
rclb
push
aas
sahf
pop
dec
xor
lea
ljmp
cmp
std
pop
ret
jg
pop
dec
fldcw
in
mov
out
out
test
mov
inc
ficoms
mov
sub
in
mov
aad
dec
fs
mov
lods
mov
adc
vmaxss
sub
push
nop
mov
pop
xor
xchg
shr
jl
fs
insb
xchg
int3
or
repz
jnp
mov
aam
ret
mov
push
push
aas
inc
pop
imul
rcrl
sbb
inc
mov
sbb
inc
es
bound
and
jo
cmp
or
dec
xchg
faddl
imul
inc
nop
repz
jnp
int
fs
clc
insb
dec
popf
pop
daa
insb
cmp
jg
mov
cwtl
cld
popa
ds
popf
dec
inc
in
je
xor
icebp
out
int
mov
xorb
push
mov
mov
xchg
mov
imul
stc
lret
push
and
lret
xor
jb
pop
jecxz
xchg
sbb
scas
mov
out
pop
cmpsb
testb
mov
inc
jge
out
scas
jmp
xor
pop
adc
cmp
or
and
dec
inc
pop
adc
outsb
je
sbb
cwtl
cmp
stc
push
aaa
jmp
dec
fdivr
inc
out
es
mov
adc
out
bound
jo
loop
jae
pusha
push
scas
mov
xchg
lcall
mov
movb
mov
jge
cmc
out
nop
mov
inc
push
adc
lea
add
and
xor
xchg
call
mov
add
sub
in
orb
scas
jg
xchg
hlt
sahf
jle
jo
xchg
jne
dec
shrl
xchg
xchg
jp
out
les
outsb
mov
jle
clc
cld
testb
jg
sub
or
lea
int3
pop
orb
xchg
cmp
lahf
push
clc
lds
fwait
leave
inc
push
mov
mov
imul
pop
xor
mov
xchg
movsl
cltd
jecxz
and
ss
jne
sub
cwtl
or
mov
jnp
adc
mov
repz
in
incb
js
ss
inc
sub
lods
push
or
cwtl
and
aas
adc
rcrl
push
mov
pushf
and
mov
cs
pop
mul
sbb
rorb
int3
and
out
cmpb
ret
loop
and
mov
mov
dec
hlt
xchg
and
mov
and
es
xchg
xor
out
pop
mov
ja
pop
repz
dec
bound
and
mov
sbb
mov
pop
cmp
xchg
data16
dec
push
cmp
sahf
out
cmpsl
inc
mov
mov
pop
push
mov
jns
daa
jl
xchg
inc
ss
out
loope
pop
test
cmpsl
rcrb
sbb
lcall
popa
adc
insb
push
adc
test
repz
notl
push
repz
outsb
pop
in
pop
ret
inc
pop
cmc
and
mov
cwtl
mov
sti
gs
jg
mov
cmpsb
jno
dec
jmp
shlb
dec
cwtl
into
cmp
inc
mov
push
jb
repz
and
popa
lcall
mov
enter
inc
and
dec
lret
adc
ljmp
jb
xchg
mov
xor
in
add
mov
cmovae
arpl
jl
cmp
into
cwtl
xchg
and
mov
inc
lds
aas
js
and
adc
sar
testb
scas
icebp
or
cld
xchg
test
xchg
and
mov
loop
sub
jno
outsb
mov
cmp
lahf
push
fmuls
rorb
ja
mov
out
mull
sub
mov
pop
dec
jg
mov
mov
xchg
lret
jg
sub
sbb
popf
cltd
pop
ds
nop
repnz
into
mov
adc
cmc
xor
dec
dec
jg
push
xchg
sub
xor
jmp
jge
mov
sub
dec
je
cltd
repz
mov
mov
aam
xlat
fwait
ljmp
ret
inc
dec
fnsave
shlb
or
xchg
aam
gs
pop
push
mov
inc
xor
test
jae
xchg
cmp
imul
outsb
hlt
pop
or
jmp
inc
lods
sbb
dec
sub
jnp
test
ljmp
imul
ja
ret
jle
mov
scas
ret
pop
inc
ror
ljmp
shrb
sub
mov
dec
fsubrl
xchg
mov
aaa
test
xchg
xlat
call
test
inc
lret
dec
stc
lods
add
mov
hlt
jmp
cli
adc
add
mov
mov
fwait
cwtl
mov
push
jmp
dec
sbb
add
or
sbb
inc
jl
in
arpl
cld
xchg
jbe
imul
gs
inc
lods
push
ficomps
loopne
out
cs
fwait
xchg
jbe
aad
sbbl
add
js
fsubs
gs
add
cmc
pop
pop
and
fsubl
xchg
jae
fwait
sbb
dec
and
loopne
mov
in
ror
mov
xor
insb
mov
fdivp
and
sbb
std
ss
mov
and
int3
pop
lret
aaa
ficomps
mov
dec
pop
cmp
push
cmp
loope
insl
aad
push
imul
mov
sub
jbe
add
fsub
push
loope
mov
mov
fiaddl
xchg
or
cmp
xor
punpckldq
add
cmp
pop
test
mov
dec
ret
js
movb
test
mov
aam
cmp
aam
mov
ret
mov
jbe
xor
mov
cwtl
push
out
jo
mov
outsb
out
push
pop
or
lret
mov
lret
add
ficompl
data16
lea
mov
jns
mov
lds
bnd
cmpsb
ljmp
cmpsl
lods
cmp
push
iret
shr
jns
jae
icebp
mov
push
outsb
popw
out
dec
dec
and
cmpb
ret
jae
pusha
pop
push
imulb
je
or
imulb
sub
mov
scas
pop
leave
adc
std
divl
pop
lcall
insl
sub
or
test
mov
dec
or
xlat
xchg
fistl
add
add
add
jne
push
enter
dec
lahf
fwait
xlat
inc
or
sbb
xor
mov
dec
mov
mov
add
enter
jnp
cltd
mov
jp
stos
ljmp
xchg
popa
mov
stc
insb
inc
outsb
push
dec
loope
movsb
cwtl
lahf
mov
and
xchg
push
push
ljmp
xchg
mov
mov
imul
pop
cltd
imul
adc
stc
xchg
movb
imul
es
outsl
xor
mov
push
jne
ss
cmpsl
fsubrl
and
add
icebp
inc
mov
jg
lods
lds
int
mov
dec
shr
hlt
cmp
fimull
loop
fisubl
mov
lcall
adcb
arpl
adc
cmpsb
or
iret
cmp
enter
out
jnp
imul
lahf
pop
add
mov
mov
and
cli
pusha
jecxz
divl
or
sub
xor
jecxz
into
das
pop
xor
or
icebp
mov
cli
sub
daa
xlat
adc
inc
fstpt
dec
mov
aam
enter
adc
sbb
inc
push
mov
xchg
lods
or
xchg
mov
xchg
xor
jno
and
aaa
call
mov
jle
in
clc
ja
gs
xchg
int
iret
cmp
xchg
scas
jmp
add
adc
pop
and
cmp
fnstenv
test
scas
sbb
mov
mov
dec
cmpsb
mov
hlt
daa
adc
xor
out
jne
sbb
jne
push
mov
dec
in
aam
mov
sub
push
xor
fwait
cli
into
cmp
cmp
iret
filds
add
or
sub
cltd
xchg
pop
and
out
push
pushl
decl
mov
sub
shr
sbb
cmpsl
mov
fld1
xchg
daa
stc
fildl
and
xchg
jg
jo
xchg
neg
in
ss
sub
pop
sub
inc
loope
lret
rcll
orl
iret
sbb
mov
adc
subb
out
iret
repnz
sbb
sbb
stos
xor
roll
dec
or
std
cmp
mov
call
rolb
inc
or
addl
les
ret
jmp
sbb
ror
test
sbb
out
pushf
jnp
stos
enter
pop
dec
push
mov
adc
pop
call
rcr
sub
cld
sbb
loop
jle
pop
sbb
fsubl
clc
dec
cld
call
xchg
and
ret
fsts
popf
cli
shlb
xor
push
mov
inc
dec
fisttps
or
imul
movsl
mov
iret
mov
or
xchg
sbb
mov
aad
lcall
adc
call
lods
pushf
jle
lahf
xor
jns
in
xchg
scas
push
mov
jg
mov
sub
xor
sbb
cltd
mov
test
in
fwait
stos
jno
mov
testl
cmp
add
lods
mov
dec
ljmp
xlat
jo
mov
xchg
dec
je
out
out
jmp
inc
gs
mov
mov
pop
sub
inc
pop
jl
jl
jle
fcmove
fwait
xor
adcl
or
andb
sarb
popa
lods
push
stos
fwait
jnp
repnz
xchg
or
in
xchg
xchg
jo
out
imul
call
inc
add
mov
fwait
adc
scas
pop
stos
adc
mov
sub
int3
cmp
incb
pusha
mov
and
dec
cmp
aad
jmp
stos
mov
dec
daa
adc
cmp
xchg
mov
mov
pop
ljmp
notl
into
sbb
jmp
scas
push
and
xor
mov
or
pop
sbb
pusha
into
rorb
inc
mov
or
add
inc
sarl
and
mov
in
mov
sbb
addr16
pop
mov
in
mov
lret
jle
dec
lret
dec
not
jecxz
inc
ret
cmpsb
mulb
sub
inc
cwtl
dec
jno
cltd
icebp
mov
mov
pop
add
mov
scas
add
in
push
and
sub
add
js
mov
adcb
mov
adc
mov
shr
add
scas
jmp
mov
mov
xchg
jmp
adc
dec
das
shll
jne
adcl
push
mov
jae
sub
in
mov
into
xor
or
insb
cmc
cmpsb
das
scas
push
sbb
ja
lahf
jo
mov
sbb
cltd
xchg
outsb
cmpsb
jge
mov
jb
bound
ret
cmp
fyl2x
sbb
add
addr16
test
push
lods
imulb
cmpsb
lahf
inc
cmp
test
insl
lods
jmp
mov
cmc
out
add
nop
iret
mov
jo
mov
in
dec
sbbl
cld
sub
repz
jg
adc
push
xor
lret
and
sub
and
jp
fidivrl
fidivrs
mov
mov
push
stos
mov
dec
aam
js
inc
insl
mov
cmp
xor
jmp
aaa
jae
mov
test
test
mov
fdivrl
aaa
dec
mov
dec
cltd
popa
mov
push
add
mov
inc
pushf
pop
or
or
pop
cmp
push
lahf
adc
rolb
fcoms
pand
push
jge
scas
btr
dec
mov
stos
fisttps
inc
sub
sbb
and
inc
movsb
push
test
dec
jbe
stc
aam
pop
outsb
out
sbb
mov
les
xor
rcr
jb
fdivp
test
cmp
sbb
sarb
pop
jnp
dec
idiv
jb
xchg
shll
inc
ror
mov
sub
js
mov
popf
mov
sbb
mov
repz
fldcw
mov
add
ret
xor
xchg
js
adc
stos
adc
scas
adc
nop
add
dec
stc
xchg
xchg
add
inc
cmpsb
fists
xchg
test
jbe
popa
lahf
dec
out
xorb
xchg
xlat
jl
andl
or
cmpb
ljmp
rclb
in
nop
fs
ss
push
mov
ret
pop
cmc
test
inc
popf
push
xchg
inc
les
jge
inc
data16
fs
jle
cmpsb
lds
sbb
std
fdivl
in
xchg
push
sub
icebp
sbb
sbb
lret
out
lods
mov
stc
xor
sub
imul
jl
call
jp
pushf
sub
std
cli
in
jb
popl
sub
xor
fcompl
cmp
adc
sub
je
insb
push
dec
out
adc
js
out
dec
mov
cmc
in
mov
in
add
sbb
sbb
pop
inc
pop
les
inc
adc
loopne
les
adc
call
lea
loop
repz
dec
push
aam
and
sub
jo
aaa
pusha
pop
fcmovu
mov
dec
lahf
lret
add
and
pop
loopne
cwtl
mul
xchg
mov
ss
mov
mov
inc
mulb
push
inc
movl
mov
dec
daa
test
rolb
pushf
inc
inc
movsl
xchg
cmp
idivl
aas
les
dec
into
loopne
push
jb
mov
call
imul
sbb
xchg
and
dec
rcrb
imul
jbe
cwtl
shrl
jmp
sbb
xchg
into
pusha
cwtl
sarl
fcmovne
popf
pop
lods
xchg
loop
lods
mov
push
push
push
mov
fimuls
adc
jge
sub
mov
add
ja
ret
xchg
push
dec
push
int3
mov
repz
and
aaa
sub
out
sbb
addl
fisttps
call
and
notb
fldcw
pop
data16
pushf
rclb
push
xor
cmpl
aas
lret
out
or
mov
enter
mov
mov
hlt
out
cmpsb
xchg
aaa
inc
or
adc
fmuls
and
iret
push
outsb
push
xor
addr16
or
gs
sbb
dec
nop
push
xor
push
enter
in
push
arpl
inc
inc
jne
int3
in
dec
jmp
fiadds
testb
xchg
push
popa
push
xchg
lret
mov
adc
call
jl
push
pusha
fdivrs
xor
cltd
xchg
mov
xchg
dec
ror
cmp
lods
sbb
jge
mov
out
jp
popa
call
shlb
lods
fs
xchg
mov
add
outsl
push
cmp
push
add
lret
fwait
sti
cmpsb
aas
push
pop
pushl
xchg
adc
das
popa
jb
nop
cmpsb
in
sbb
fsubp
xchg
ds
into
pop
jne
or
inc
roll
xchg
xchg
movsl
mov
js
lret
jne
add
xchg
testl
dec
in
ret
int
nop
mov
loop
pop
sbb
push
mov
mov
xchg
inc
jbe
fs
clc
adc
fnstcw
push
push
daa
out
mov
scas
jl
bound
mov
in
push
mov
jmp
or
cld
notl
mov
jmp
mov
out
scas
jmp
out
sti
mov
cmc
jne
xchg
rcrb
adc
push
sub
jno
xchg
ret
cmp
xor
mov
cltd
enter
add
cmp
rorl
cmpsb
mov
and
movsb
sub
das
mov
mov
cmp
data16
cwtl
pop
pop
loope
mov
ror
push
push
mov
aaa
adc
pop
mov
rcl
mov
add
insb
popf
mov
pop
fcoms
cmpsb
xor
rorb
and
and
adc
scas
push
fidivs
and
andb
cli
adc
sbb
pop
ret
xor
cld
xchg
sahf
xor
adc
ja
lods
xchg
dec
mov
mov
mov
jae
mov
mov
jmp
add
stos
subb
insb
pop
adc
add
mov
pop
pop
jmp
cmp
push
xchg
es
imul
adc
xor
cli
clc
out
enter
vpperm
testl
ror
xchg
in
mov
push
nop
jo
jmp
rcrb
push
cmpb
sub
sub
decb
out
pop
into
add
sub
test
sbb
out
mov
pop
lcall
xlat
xchg
xchg
xchg
aad
mov
jl
xor
cld
insl
xchg
add
shll
mov
jne
push
inc
mov
dec
gs
jnp
out
adc
aam
add
shrl
daa
mov
lcall
mov
add
hlt
push
ss
and
call
or
fwait
cld
scas
js
outsb
push
or
enter
jbe
ret
add
loope
shll
rcll
mov
or
mov
lret
int
in
jecxz
mull
daa
lods
jle
inc
add
push
push
mov
mov
aam
xchg
das
pop
mov
xor
jae
mov
sub
jecxz
inc
jns
icebp
repz
jecxz
adcl
fs
mov
xchg
jb
loop
jo
movb
inc
popf
and
outsl
mov
ret
das
add
pop
in
xchg
push
iret
stos
cwtl
jecxz
and
aaa
in
outsl
add
dec
mov
mov
xchg
or
inc
and
jecxz
adc
push
lret
jbe
lret
dec
xchg
jge
xchg
dec
fdivp
test
pop
lahf
fstps
mov
outsl
fcoms
jb
push
pop
cmc
xchg
inc
sahf
jle
push
ss
out
out
lock
and
mov
fwait
out
push
xchg
mov
roll
or
int3
dec
lret
push
aaa
popf
into
inc
pop
adc
in
adc
cmp
popa
fcmovu
imul
inc
ja
jno
jo
pop
push
inc
std
sbb
xchg
sub
xchg
cs
pusha
aaa
jno
push
mov
mov
push
mov
fisubrs
out
repnz
push
mov
cmp
mov
das
repnz
sahf
xchg
xor
jbe
dec
pop
outsb
sbb
adc
push
mov
xchg
xchg
idivb
mull
hlt
mov
gs
push
outsl
cltd
push
cmc
cmpsb
jmp
dec
mov
out
jg
lods
pop
or
jns
or
push
mov
mov
notl
out
sbb
shlb
adc
sbb
mulb
cmp
xchg
fsubl
mov
cwtl
push
xchg
mov
xchg
mov
adc
cmpsb
fnstcw
pop
cltd
invd
add
popf
es
pop
xor
push
push
dec
pop
and
mov
rorl
rcl
jmp
enter
stc
lock
int
mov
mov
shl
mov
sbb
lret
ja
jo
ljmp
mov
movsb
int3
loopne
int3
sub
mov
incb
inc
pop
sub
lret
xchg
popa
jae
inc
rcr
cltd
xchg
lret
push
adc
notl
in
sub
cmpsl
and
pop
jle
das
jge
pop
xlat
repnz
xchg
bound
movsb
js
mov
xor
cmp
adc
lock
outsl
dec
adc
and
pushf
out
fnstenv
cmp
les
mov
inc
mov
sub
fildll
xor
push
lret
ret
xchg
xchg
inc
inc
mov
imul
fmull
inc
cmp
insb
lahf
rcrb
jbe
and
sbb
test
adc
cltd
lds
cmp
out
das
cli
pushf
testl
arpl
int
fwait
xor
rsqrtps
jmp
pop
push
movsb
mov
push
ja
icebp
pusha
cmp
mov
mov
pop
pop
sbb
faddp
aaa
pop
jae
mov
nop
stos
cmp
int
xor
pop
mov
inc
adc
imull
sar
ret
je
sub
out
xor
subl
adc
jae
mov
dec
sub
test
push
jbe
loopne
repnz
jp
inc
add
xchg
xchg
sub
sbb
outsb
imul
ret
xchg
je
bound
mov
movsb
leave
adc
sub
mov
sti
test
add
lods
stos
out
subb
or
push
in
dec
mov
push
mov
test
xchg
inc
adc
popa
push
popa
jns
mov
lods
jl
jmp
lods
ret
cmc
test
and
aam
push
frstor
sti
addr16
bsf
xchg
movsb
popl
insb
in
out
popa
in
push
or
jecxz
push
sti
lret
test
mov
aam
movsb
jnp
mov
add
inc
test
test
imulb
xlat
pop
into
out
loop
lea
sub
bound
xor
xchg
out
cs
pushf
xchg
and
and
lods
hlt
jl
lahf
add
and
and
jb
mov
shrb
pop
xchg
pop
idivb
cmp
mov
pop
or
xorl
xchg
xlat
dec
xlat
sub
pushf
cmpsl
jmp
and
xorb
mov
movsl
mov
pop
je
pop
push
enter
in
rolb
rol
push
push
inc
jns
ficomps
inc
or
add
out
test
fdivrp
mov
mov
cltd
pop
jg
xor
cmp
aas
add
cmp
or
mov
andl
pop
jg
jmp
rcrb
shl
push
sbb
pusha
je
andb
adc
mov
push
fnstenv
in
mov
andb
push
adc
mov
sbb
dec
adc
add
fnstsw
mov
loope
nop
adc
stc
repz
fisttpl
mov
or
mov
pushf
dec
lods
shlb
outsl
test
clc
outsl
pop
pusha
push
dec
test
stos
cwtl
int3
std
es
lods
ja
enter
sti
xchg
stc
stos
mov
push
sahf
sub
aad
orb
gs
or
pop
leave
push
leave
push
aaa
push
xchg
jo
das
mov
push
call
mov
popf
add
push
cld
cmp
call
adc
mov
mov
fsubrp
and
imul
test
sbbl
xchg
and
inc
lods
push
xchg
sbb
stos
lret
dec
xchg
sbb
dec
add
cmc
in
lret
es
pop
js
andb
rcrl
ss
jle
mov
sub
jle
sti
imul
imul
cs
or
jl
and
adcw
jnp
push
pop
ror
jo
inc
jl
add
mov
or
aam
xchg
mov
mov
movsl
imul
xchg
mov
repnz
daa
adc
cltd
mov
xor
dec
sti
pop
jbe
jbe
fistpll
xor
xchg
add
loopne
pop
repnz
mov
cmp
xor
push
sbbl
cmpsl
je
mov
mov
jp
or
push
add
lea
cmp
test
sbb
pushf
jae
mov
jns
sbb
adc
inc
inc
xchg
fstpl
xchg
sbb
jge
add
in
aad
movsl
mov
sti
dec
outsl
jl
cmpsb
movsb
xor
sub
pop
scas
pop
mov
cwtl
cs
addl
and
test
pop
inc
in
pop
push
mov
aam
js
popf
cmp
add
push
ss
and
in
xchg
push
or
call
dec
aam
scas
ss
pop
test
jmp
sbb
loope
shll
xchg
test
push
jle
adc
dec
daa
jl
pop
movl
data16
aas
inc
popa
add
jp
lcall
push
xor
add
daa
inc
enter
xchg
jmp
mov
mov
inc
xchg
pop
or
fmull
jbe
jo
mov
inc
pop
dec
dec
mov
popa
fstpt
push
popf
and
cmp
cmp
gs
out
adc
mov
inc
insb
cli
addl
loope
pop
clc
rolb
add
add
sar
shr
jns
mov
js
inc
sete
out
jnp
sahf
rcrl
out
adc
roll
xchg
cli
aam
mov
dec
add
adcl
sar
add
add
push
popf
mov
paddw
sbb
repnz
test
push
clc
jns
xchg
xchg
push
dec
and
pushf
inc
xchg
enter
or
jbe
jge
push
mov
test
daa
xor
out
mov
cmc
scas
cmp
orb
js
test
popa
xchg
xlat
xchg
lea
push
xchg
xchg
mov
loope
dec
sub
test
add
dec
mov
pop
cmc
pop
and
dec
fnsave
push
xlat
jnp
cli
adc
fldenv
pop
cwtl
shrl
push
rorb
imul
pop
inc
jns
ja
in
nop
fildll
stos
mov
fidivs
add
int3
mov
stc
sub
icebp
sti
inc
in
sub
cmpsl
and
ret
xchg
xlat
jg
cmp
call
add
repz
xor
add
jl
cmpsb
and
imul
scas
mov
or
ss
jle
inc
mov
out
lds
sub
jp
mov
stc
movsb
push
mov
jmp
daa
sub
xchg
sahf
xchg
addr16
xor
sbb
sub
cld
test
loopne
cs
gs
xlat
sub
out
xchg
ds
xchg
add
lods
pusha
ja
jge
aaa
inc
mov
es
out
push
dec
pop
push
xlat
loop
aas
stc
cli
movsb
mov
pop
sub
xchg
cld
fdivrl
ljmp
rorl
insl
jle
out
addr16
and
jle
xor
push
push
imul
sbb
jnp
push
mov
jle
arpl
xor
xchg
out
mov
inc
arpl
lret
test
iret
xchg
imul
and
rorl
push
lret
inc
inc
sbb
push
dec
rcrb
xor
repz
fistpll
ljmp
das
pop
xchg
mov
mov
cmp
or
insl
dec
dec
sbb
pop
cwtl
mov
jl
fs
xor
sub
inc
cmp
and
pop
cmp
lods
cltd
jb
test
pushf
jbe
dec
and
rcrb
scas
xchg
push
fdivrs
bound
adc
cmp
fisttpll
loop
mov
adc
dec
pop
mov
xor
int3
daa
xor
xchg
cld
cwtl
sar
insl
mov
xor
inc
rcrl
mov
inc
rorb
lea
xchg
dec
cld
or
xor
pop
inc
mov
inc
adc
push
jge
test
inc
es
shlb
es
fisubs
pop
jae
cltd
sbb
filds
fists
jecxz
adc
rclb
subb
mov
lret
lret
inc
dec
outsb
sarb
into
sbb
mov
mov
test
jge
dec
rcrl
jae
in
xchg
fistps
sti
cltd
jno
xlat
jmp
add
sub
push
mov
shlb
in
mov
and
das
cltd
lcall
movb
aas
pop
fisttpll
sahf
into
lds
jle
daa
jns
xchg
push
outsl
sbb
cmp
into
add
ljmp
shll
mov
cmpb
cmpsl
and
insb
mov
inc
xchg
and
js
jns
mov
xchg
arpl
mov
sbb
mov
jg
lods
repz
lahf
mov
out
int3
pusha
inc
jns
pop
or
adcb
in
lock
nop
inc
and
lcall
pushf
iret
push
mov
out
jge
mov
lods
dec
bound
js
jp
push
and
push
push
mov
rolb
shr
or
inc
push
pop
xchg
dec
repnz
sbb
inc
sbb
std
push
mov
mov
hlt
mov
pop
stos
pop
mov
repz
cmp
dec
icebp
fcmove
pop
lock
mov
mov
shlb
imul
xor
fnsave
scas
ret
ss
jg
dec
test
aam
sbb
or
mov
inc
subl
mov
jo
addr16
in
scas
movsb
ret
movsl
mov
shll
xor
jae
mov
and
inc
sbb
xor
je
push
sbb
mov
test
push
fcom
and
mov
xlat
add
loope
mov
dec
cmc
push
xchg
and
dec
rorl
sarb
or
inc
es
mov
add
inc
push
in
movsl
cmp
push
ret
xor
out
shr
jbe
sbb
mov
mov
lds
mov
pop
xchg
dec
mov
lahf
cmpl
sub
push
shrl
aaa
in
out
lahf
stc
out
mov
xchg
mov
clc
dec
mov
mov
and
stos
dec
push
inc
outsb
dec
xchg
pop
mov
ss
mov
shrb
loop
in
add
cs
andb
and
pop
cmpb
sub
cmovb
xor
call
mov
cmp
sbb
pop
add
cld
and
incb
push
mov
and
mov
mov
sbb
jge
push
stc
push
das
aad
jno
outsb
jle
push
pop
xchg
adc
rol
xchg
icebp
gs
arpl
or
fwait
out
cmc
push
inc
repz
xor
mov
fstpl
int3
dec
ret
mov
test
or
push
xorb
nop
leave
sbb
je
sub
arpl
pop
or
cwtl
stc
xchg
add
ret
dec
and
cmp
pop
push
mov
xchg
imull
push
mov
or
xor
dec
std
dec
xchg
mov
rep
call
test
xchg
loope
or
adc
mov
or
js
inc
cs
sub
sub
push
out
and
fdivrl
push
inc
int3
stos
push
add
outsl
mov
xor
adc
shrb
fsub
mov
mov
ds
scas
cmpsl
dec
insl
add
aad
cmp
push
in
out
add
fucomp
mov
xchg
sti
and
sub
add
or
test
mov
fdivp
lock
stc
pop
cmp
jg
xchg
cmp
cli
ds
aas
adc
fld1
and
cmp
or
fists
adc
mov
dec
lret
shrl
pop
lcall
das
push
and
lods
mov
inc
pop
or
xor
daa
xchg
cltd
lock
inc
mov
loop
cmp
jg
jge
push
push
mov
xchg
xlat
jge
dec
sbb
jl
inc
dec
shll
sbb
repnz
dec
mov
push
test
lret
mov
pushf
in
dec
jp
pop
mov
fcoms
daa
mov
pop
popf
cltd
addb
sahf
inc
dec
mov
std
mov
xchg
xchg
mov
add
imul
pop
pusha
aaa
jbe
imull
imul
dec
aad
jg
sbb
xor
sbb
test
sbbb
popf
addr16
lds
and
mov
stos
cli
push
pop
mov
push
mov
inc
inc
pop
push
mov
add
sbb
dec
sarl
call
outsl
lods
cmc
cmpsl
mov
iret
popa
push
add
inc
dec
cltd
push
call
lahf
mov
mov
cmp
ja
cli
fcomps
dec
jecxz
int
and
dec
jb
mov
iret
dec
xchg
pop
stc
xchg
out
mov
inc
pop
jbe
sub
xchg
mov
inc
mov
push
and
fs
pop
mov
test
adc
or
and
icebp
mov
clc
arpl
xchg
ret
lret
jbe
jl
ds
add
jl
out
shll
mov
outsb
push
test
add
pop
push
sbb
cld
lods
les
jns
cmp
in
lret
addl
jae
jmp
cmp
pop
push
fwait
nop
js
push
push
sbb
test
lret
adc
inc
push
mov
fidivrl
and
inc
jp
push
into
movsl
inc
pusha
mov
mul
repz
lock
loop
insb
pushf
testb
push
je
sbb
imul
test
sub
movsl
dec
sbb
and
sub
stos
aaa
inc
mov
dec
aas
push
jno
mov
mov
fimuls
stos
icebp
aad
mov
push
cltd
mov
imul
jae
std
repz
cmc
cmpsb
mov
sub
jno
xor
xor
cmc
ds
fldl2e
movsl
popf
imul
outsb
pop
push
pop
enter
inc
push
popf
add
and
cwtl
ss
neg
pop
loop
pop
fbstp
mov
jecxz
and
aas
dec
mov
cmpsl
fsubrl
pop
xor
iret
loope
addr16
fnsetpm(287
rorb
push
mov
sub
jnp
aaa
aaa
and
pop
sub
mov
push
mov
data16
sbb
sbb
add
ja
pop
sub
push
test
add
dec
add
popa
imul
add
repz
sbb
mov
pop
ret
fstp
fwait
pop
pop
roll
jae
je
inc
push
xchg
dec
dec
das
jne
popf
jnp
jp
fs
xlat
imul
add
loope
iret
dec
loop
push
push
sbb
out
push
mov
rcl
and
dec
and
or
pop
xor
out
shll
addr16
mov
push
cmc
cmpsl
ret
mov
xchg
pop
mov
pop
cmc
pop
dec
and
jmp
into
xchg
je
dec
fnsave
fistl
jecxz
into
cmp
and
icebp
push
pop
mov
sub
nop
push
aam
mov
xor
add
pop
scas
and
xor
mov
sub
push
aaa
dec
jo
push
out
and
sub
xchg
stos
icebp
loopne
xor
pop
push
lds
aad
sub
and
add
pop
out
sbb
arpl
insb
adc
fidivrl
cmp
dec
int
inc
dec
mulb
adc
dec
outsl
pop
inc
xlat
and
and
adc
inc
fisubl
sub
xchg
xchg
push
mov
pop
and
mov
jmp
adc
les
jns
sbb
jle
adc
mov
or
jae
pop
addb
xor
sbb
mov
push
sbb
fimull
mov
mov
inc
sub
push
stc
test
mov
inc
inc
stc
xor
outsl
sub
jmp
repnz
cmc
jne
xor
movq
or
sub
ss
mov
in
popa
push
xchg
bsf
call
dec
jecxz
mov
sahf
push
sub
dec
scas
xchg
xorb
push
push
push
mov
lar
enter
sub
push
push
scas
or
popa
and
jmp
dec
aad
push
out
mov
jae
cmp
ss
inc
lds
pop
enter
dec
pop
pop
pop
xchg
insb
mov
dec
movsl
add
mov
std
jae
pop
sbb
xor
cld
jne
pop
subb
xor
jmp
push
mov
mov
fwait
push
pop
adc
or
jae
xchg
adc
lahf
out
frstor
aas
jge
repnz
es
jns
inc
jb
jp
das
std
lret
out
insb
pop
bt
sub
add
imul
fnstsw
gs
aaa
test
hlt
pop
pushf
dec
ja
stc
ret
mov
popf
test
bound
stos
dec
cmp
aas
push
imul
scas
outsl
int3
js
add
scas
sub
dec
imul
fidivrl
mov
xchg
mov
mov
xor
incl
sarl
lods
or
jmp
or
in
test
data16
popf
push
cmp
in
xchg
pop
sti
jns
divl
push
nop
mov
mov
pop
pop
lods
pop
sub
or
sub
xor
outsl
sub
pop
ficomps
and
or
add
popl
fcmovnu
pop
sbb
xor
cmpb
xchg
inc
nop
aad
arpl
mov
jge
dec
scas
popa
inc
pusha
in
push
or
jae
adc
pusha
jp
incl
scas
mov
cwtl
push
clc
or
sbb
cltd
sbb
or
inc
xor
inc
xchg
add
push
test
pop
mov
andl
jg
lock
aam
scas
pop
cmc
aam
mov
lret
leave
nop
call
push
shlb
mov
mov
mov
stc
xchg
jle
sbb
adc
push
sub
mov
fisttpll
inc
mov
add
sbb
imul
mov
xchg
insb
scas
lcall
mov
lahf
cltd
test
lret
mov
adc
movsb
inc
mov
xor
aas
adc
add
test
jge
dec
push
jmp
jl
pop
stc
xor
ja
push
test
or
pop
cmp
jmp
cli
andl
inc
aaa
jle
mov
push
xchg
inc
movsl
push
dec
and
ret
into
push
jns
icebp
xorb
lahf
lods
ret
cmc
jge
rcll
fsubs
test
data16
add
pop
ret
and
or
xlat
push
stos
or
mov
loop
sbb
ljmp
outsb
loop
aas
js
jb
lds
ret
adc
adc
xor
adc
sti
mov
mov
test
aad
push
out
divb
push
jmp
aaa
xchg
daa
jge
gs
and
daa
subb
sbb
fisttpll
mov
pop
xor
es
dec
push
mov
sbb
xchg
mov
outsb
sub
push
lret
dec
jnp
scas
idiv
adc
movhps
movsb
inc
xchg
and
dec
stos
cmp
mov
rorl
in
xchg
mov
mov
push
popf
and
jge
xchg
imul
in
jg
push
test
lock
or
adc
push
adc
mov
fdivl
inc
or
inc
xorl
and
arpl
mov
sbb
out
fiadds
ret
jnp
sarb
inc
rolw
cmp
ja
jae
pop
push
es
xor
push
mov
jmp
int
jp
mov
nop
adc
scas
sbb
mov
cmpsb
jnp
sub
or
mov
sbb
sti
sahf
loope
clc
jecxz
mov
mov
and
dec
jp
push
xchg
mov
xlat
outsb
iret
int
je
imul
add
lcall
xor
inc
fdivr
xchg
mov
popa
jae
or
mov
jbe
mov
out
push
xor
lret
mov
cmp
mov
lds
mov
pop
cmpsb
rcr
aaa
les
aas
mov
dec
xlat
push
cltd
adc
add
lahf
out
aam
xlat
mov
call
pop
cli
sub
xchg
inc
sarl
std
push
in
sbb
test
rcrl
jmp
adc
int
lret
hlt
repz
mov
pop
movsl
xor
sbb
adc
inc
xchg
and
cwtl
aas
cmp
in
stos
pop
push
das
add
jo
movsl
sahf
mov
push
xor
xchg
fstps
lock
cmpsb
mov
sbb
loop
bound
scas
dec
ljmp
mov
add
xchg
and
cs
les
mov
out
repz
enter
fisttps
insl
adc
pop
clc
adc
sub
sub
adc
movsb
cmp
jp
fimull
gs
jg
dec
inc
aas
add
mov
xchg
jp
mov
xor
fdivrs
push
add
inc
insl
lcall
in
mov
add
inc
jle
fildl
adc
or
lock
lds
into
xchg
mov
push
lahf
push
sub
data16
jbe
sbb
xchg
push
push
cmp
stc
out
movsl
adcb
ds
test
outsb
jge
fbld
mov
xor
sbb
aam
add
aaa
push
sub
add
or
fistps
adc
push
xor
cmp
push
loopne
mov
ret
jno
mov
mov
call
jo
dec
inc
data16
xchg
push
or
out
dec
jbe
jnp
sub
xchg
xchg
jo
push
mov
jns
and
outsl
and
and
fidivs
mov
in
js
jb
adc
out
or
jno
movsb
lds
push
pop
sti
movsl
jg
add
mov
shlb
icebp
jge
xor
pop
lret
fsubl
loopne
mov
ret
je
dec
xor
lret
sub
inc
int
repnz
lahf
cli
sbbb
xchg
ret
cwtl
push
pop
les
or
lock
xchg
mov
aaa
push
dec
loopne
xor
mov
and
shlb
stos
mov
addr16
popf
sbb
add
aad
add
dec
mov
jle
pop
decb
adc
mulb
gs
adc
dec
fldenv
lahf
rcll
mov
jns
push
sub
xor
xchg
dec
mov
dec
or
and
add
jmp
mov
sub
rcrb
and
pop
jmp
mov
out
xor
sbbl
fdivrl
or
mov
jg
movsl
dec
data16
out
inc
pop
mov
pop
outsb
popf
inc
test
js
and
mov
aas
stos
mov
lds
std
lods
pop
je
inc
push
push
pop
push
xchg
jno
dec
int
data16
scas
mov
cmpsb
xchg
popf
shrl
test
mov
cmp
mov
adc
adc
pop
inc
es
test
inc
xchg
aas
into
int
xchg
stos
rorl
cmp
or
xchg
fwait
outsl
cmp
and
jns
lea
xor
out
push
xchg
hlt
imul
xchg
mov
mov
ret
cmpsb
fildl
fldcw
pop
xchg
ss
into
push
lea
ja
push
mov
xchg
mov
cld
rclb
stos
test
scas
fmull
ds
xchg
xchg
jg
mov
loop
sub
aam
jnp
sbb
gs
iret
lock
in
dec
jnp
add
clc
into
insl
pushl
push
mov
sub
add
fs
xchg
mov
push
ja
out
lods
repnz
ret
jmp
pop
jne
add
cmp
cmp
sbb
aaa
push
mov
inc
daa
push
mov
xor
xor
dec
nop
cmp
aad
ror
mov
push
pop
xor
fwait
xchg
pop
fbld
das
testb
xchg
mov
aam
sbb
lods
sbb
pop
mov
jno
lock
jecxz
push
outsl
sbb
xchg
cwtl
repz
int
into
cmp
out
test
fnstenv
xchg
test
stos
add
shrl
stc
inc
ljmp
flds
push
out
ljmp
daa
in
xor
xchg
sub
lock
shl
mov
cmp
sti
adc
ds
cmpsl
push
or
int3
in
mov
dec
lock
xchg
and
data16
mov
push
mov
cmpsl
and
jge
xchg
pop
stos
fprem1
pop
repnz
out
push
sub
xchg
stos
inc
shufps
xchg
mov
adc
data16
fldcw
and
subl
movsl
jmp
iret
stos
leave
pushf
sbb
sbb
out
ljmp
lea
xor
jne
stc
xlat
pop
jmp
sahf
aas
mov
leave
add
push
aad
inc
daa
mulb
xor
ror
bound
push
mov
jnp
ror
mov
xchg
sub
cmc
ds
stos
fcmovne
xor
pop
mov
lea
gs
js
lods
pop
sbb
insb
lds
xchg
sub
sti
adc
in
fiadds
inc
xchg
mov
sbb
dec
add
push
ljmp
inc
adc
cmp
pop
sub
lock
fnstsw
mov
or
dec
and
insb
pusha
xchg
aas
ljmp
xchg
push
in
sub
adc
sbb
push
jb
adc
add
xchg
iret
mov
jo
push
test
mov
icebp
out
xor
pop
push
dec
fwait
push
cmp
aas
insl
aas
mov
xlat
mov
mov
mov
popf
jmp
dec
sbb
enter
cmc
push
mov
and
fidivrs
sbbb
bswap
lret
cmp
pop
cmc
bound
push
mov
enter
cld
ja
stos
sub
push
sub
faddl
subb
sbb
sbb
cmpb
mov
push
mov
inc
adc
dec
xchg
jge
cli
xchg
dec
or
push
repz
call
lret
mov
cmp
nop
xor
xor
mov
andl
dec
jl
add
andl
sub
pushf
daa
mov
inc
jmp
inc
in
and
test
pop
xchg
cmpl
loopne
jnp
rclw
push
inc
fmull
push
push
popa
stc
movsl
mov
sbb
dec
pop
sub
add
pop
hlt
pop
push
adc
mov
js
fsts
aam
fldl2e
cmp
dec
add
fstpl
stos
aam
cwtl
in
outsb
sub
add
adc
mov
xor
sbb
loopne
leave
fmull
hlt
jl
or
push
fwait
xchg
mov
add
adc
jmp
ss
and
sbb
cmp
sub
mov
xor
ret
adc
fnstenv
jnp
cmp
mov
inc
imul
push
or
mov
fbstp
inc
sub
dec
mov
sti
or
mov
mov
mov
daa
push
xor
popa
fildl
cmp
xor
mov
jmp
outsl
fldt
lahf
ret
setp
outsb
fcmovu
insl
jmp
or
push
test
mov
int
inc
orb
inc
or
lock
jmp
leave
add
int3
cld
and
lahf
mulb
ds
jge
cmc
or
mov
jbe
scas
lods
testl
mov
lods
xchg
jle
enter
lods
mov
rclb
rorl
mov
mov
jae
cmp
aas
loope
or
add
push
mov
or
clc
push
arpl
push
es
clc
add
filds
inc
dec
add
aas
mov
mov
fdivl
xor
mov
dec
test
jp
xchg
in
add
insl
xchg
mov
test
data16
push
aaa
mov
cmpsb
jp
scas
mov
in
mov
mov
add
mov
sarl
pop
incb
or
std
push
daa
aam
popa
adc
in
adc
adc
xchg
pop
sti
addr16
lahf
lcall
jnp
inc
sti
pop
clc
and
push
neg
push
mov
enter
cmpsl
adc
xlat
ja
adc
adc
jbe
adc
fiaddl
jbe
jno
arpl
mov
aas
jg
inc
stos
push
dec
shl
mov
cwtl
enter
sbb
lahf
xor
bound
stc
aaa
fidivrs
pop
pop
ss
je
int
mov
jge
les
aas
ja
jne
mov
sub
incl
pop
and
mov
cmp
cmp
dec
pop
sub
test
movsb
loop
rolb
fnstsw
jne
shrb
and
xorl
and
mov
into
movsl
ret
sahf
aad
cmp
nop
ja
rorb
aaa
cmc
mov
cmp
push
mov
in
lods
aam
cwtl
mov
popa
daa
outsl
call
daa
shr
gs
push
jl
dec
jae
cmp
cmp
inc
inc
jae
fidivrl
ja
test
sub
andb
dec
mov
pop
out
adcl
cmp
push
pop
movsb
mov
mov
sub
nop
jmp
sarb
mov
xchg
mov
pop
idivb
xchg
push
pop
cmp
test
cmp
and
ljmp
outsb
pop
fstl
and
testl
mov
pusha
movl
push
jns
lods
cmp
dec
pop
jae
inc
aad
fwait
sbb
dec
std
mov
xor
mov
jo
sti
jno
testl
jae
shlb
dec
in
jecxz
jo
or
xchg
inc
mov
icebp
cmp
mov
dec
xchg
add
hlt
add
and
mov
add
push
int3
lahf
pop
out
xchg
out
icebp
mov
mov
mov
fs
cltd
fs
in
jbe
ljmp
insb
dec
arpl
fnstenv
mov
inc
inc
dec
jmp
or
push
int
fadds
pop
test
sub
mov
leave
sti
push
test
movsl
push
jp
cld
sbb
add
into
mov
data16
xchg
cmpsl
dec
xchg
push
pop
fdivrs
iret
dec
clc
push
sbb
pop
and
dec
movsb
or
mov
push
pop
dec
adc
push
loop
xchg
ds
push
pop
aaa
push
xchg
orl
pop
lods
dec
flds
push
jae
jmp
in
scas
xchg
pop
cmc
mov
sub
mov
and
daa
mov
shrl
std
sub
cmp
push
inc
je
lret
xchg
jle
imul
sub
stos
xchg
vmovq
xchg
out
ret
lahf
cmp
dec
sbb
scas
movsb
mov
xchg
pusha
dec
xchg
mov
rorb
out
mov
enter
hlt
js
inc
rcll
sbb
arpl
push
pop
out
xchg
dec
mov
or
xor
cmp
test
and
add
std
xchg
pop
xchg
push
pushf
aad
nop
js
jle
xchg
sub
cmp
pushf
cmp
rclb
mov
lcall
sbb
int3
mov
add
fnstenv
nop
or
cs
ss
and
mov
fsubrl
mov
fidivrl
xor
or
inc
pop
mov
inc
loop
loope
dec
add
fsubrl
push
int
inc
adc
dec
mov
pop
xor
in
popa
push
xchg
cmpsl
mov
scas
sbb
out
loop
lock
mov
out
sub
sbb
int3
cmpsb
aas
aaa
pop
out
xchg
pusha
scas
sbb
add
fcoms
popa
fldenv
cmc
mov
inc
jl
fldl
outsb
sbb
and
repnz
push
scas
sub
jae
ret
mov
inc
sbb
aad
dec
mov
sbb
js
ds
jmp
lret
les
ljmp
cmpb
jo
and
mov
push
xor
mov
mov
jne
and
mov
jge
pop
add
pop
push
dec
sbb
pop
push
out
jno
xor
inc
pop
xchg
mov
and
outsl
or
xor
push
rcll
cmp
jg
popa
mov
push
jo
cwtl
or
lret
sub
dec
leave
ss
js
jg
and
fidivs
imul
pshufw
jo
xor
ja
mov
pop
fiadds
mov
push
iret
pop
stos
jl
out
pop
fsubs
mov
je
dec
pop
jne
movsb
scas
pop
inc
mov
das
xor
cmp
xlat
mov
mov
xor
add
imul
dec
add
or
int3
es
enter
xchg
outsl
int
push
call
sub
jns
in
outsl
push
pop
shlb
inc
notl
pop
mov
mov
mov
push
push
imul
push
xor
fildl
mov
mov
adc
sbb
jnp
or
cld
dec
mov
sbb
loopne
cmp
stc
and
sbb
inc
pushf
mov
sbb
mov
xchg
mov
jmp
sbbl
addb
mov
inc
push
testl
inc
push
in
push
jb
and
mov
jae
sbbb
xor
sub
out
cmc
sub
lret
orl
sub
jae
xor
bound
sbb
mov
push
mov
xchg
jp
mov
and
mov
rcrb
mov
jg
mov
mov
loopne
or
xor
or
stos
pop
cltd
mov
stc
or
shll
ret
mov
movsl
ret
jne
mov
lods
leave
and
add
fcoms
scas
push
movsl
mov
mov
popl
stos
stos
sahf
dec
out
push
mov
push
pop
jb
pop
adc
xchg
out
jle
and
loope
and
int3
add
pop
int3
jne
push
xorl
and
sub
mov
fwait
pusha
in
jmp
mov
fiaddl
sbb
mov
push
rcrb
cmp
jnp
popa
cmpsl
cmp
mov
test
insb
es
pop
popa
out
jnp
push
lcall
push
ds
inc
adc
dec
sbb
xchg
std
xor
mov
sbb
pop
or
sub
sbb
insb
xchg
insl
shrl
cltd
push
jae
mov
mov
cmp
es
mov
dec
scas
popf
enter
leave
ljmp
inc
ret
xor
mov
or
jg
jle
aaa
sbb
addr16
add
jp
fsubrp
push
or
push
fldt
pop
jl
jns
loope
gs
xchg
mov
scas
mov
mov
mov
add
cli
int3
dec
or
and
fwait
mov
lahf
ds
mov
push
loope
cmp
inc
xor
or
in
ss
pop
testl
pop
push
adc
cmpsl
aam
mov
and
push
inc
dec
jge
or
or
pop
and
mov
inc
push
mov
xor
fucomp
or
in
jbe
roll
lret
fwait
pop
jg
push
pop
stos
gs
daa
cmp
dec
cmp
cmp
movsb
jecxz
cmpsb
aaa
dec
ficomps
ret
lahf
test
push
ret
pop
jb
cmp
and
fcom
xlat
mov
jmp
adc
call
orb
idiv
mov
inc
cmp
inc
mov
jg
cmp
call
and
mov
test
roll
or
jge
and
sub
insb
test
in
xchg
mov
xor
idivb
push
outsl
sbb
les
pushf
str
aas
les
and
fld
shlb
sbb
test
mov
sub
sti
ss
pop
cmpsl
mov
jae
in
cmp
xor
int
popf
xchg
push
or
pop
std
jl
bound
cmp
inc
shufps
xchg
std
xor
inc
loope
sbbb
push
push
js
xor
cltd
jp
addr16
in
ret
in
add
mov
fisttpll
aad
lods
shl
movsl
pop
mov
fistpl
aad
push
xchg
xor
inc
mov
loopne
jbe
ret
sbbb
dec
pushf
mov
sub
sbb
jg
sti
mov
aas
sbb
sti
sbb
push
outsl
cwtl
dec
insl
stos
imul
dec
push
test
inc
cmpsb
cmp
adc
jo
sbb
popa
sbb
pop
mov
movsl
mov
jns
lahf
lock
test
inc
or
fsubl
sar
insb
add
dec
mov
xor
dec
div
mov
cmc
aam
jl
push
mov
data16
mov
es
sub
pop
ja
loopne
lahf
mov
cli
jnp
or
data16
outsl
inc
push
das
xchg
rolb
adc
mov
pop
cmp
movsl
mov
sti
jae
and
test
push
orb
mull
push
repz
jb
jmp
cli
leave
push
xchg
or
pop
and
cwtl
xorb
lods
adc
cpuid
lahf
imul
cmp
and
inc
aas
pop
pop
enter
inc
cld
pop
and
xor
popf
lahf
jbe
out
cmp
or
add
fidivs
sahf
lea
jno
loope
mov
and
roll
push
pop
sbb
imul
mov
in
mov
mov
nop
push
xlat
in
cmc
push
fisttpll
mov
cmp
or
fsubrl
ja
adc
push
sub
lea
int
sub
push
insb
insl
xor
jne
icebp
mov
into
cli
jbe
lcall
cltd
add
aad
cpuid
inc
adc
icebp
cli
mov
xor
push
push
xchg
andl
or
test
adc
push
out
push
xchg
pop
dec
xor
dec
sbb
les
xor
hlt
or
daa
push
clc
push
call
adc
adc
dec
mov
mov
out
adc
sbb
mov
into
mov
jae
mov
fidivl
jmp
pop
xchg
pop
mov
mov
and
fstpt
mov
and
cld
cmc
mov
or
aaa
nop
imul
stos
std
inc
das
aad
cmp
lods
lret
sub
and
xchg
xchg
mov
or
jge
cmp
fiadds
lret
inc
cwtl
mov
cmp
jbe
dec
jb
test
mov
shlb
scas
pop
jb
cmp
arpl
cmp
sbb
sbb
lds
pop
push
sub
daa
adc
sbb
jo
jl
sbb
jns
sub
test
les
xchg
into
stos
or
sbb
fidivrs
fildl
repz
xor
mov
pop
or
push
cwtl
mov
lret
mov
pop
and
xor
sahf
xchg
mov
xchg
dec
push
push
or
cmc
cs
aad
decl
or
cli
dec
lods
fs
in
xchg
xor
push
orb
mov
dec
in
cli
mov
mov
mov
in
gs
insb
push
dec
roll
dec
adc
jp
or
push
fstpl
leave
outsb
lds
sub
pop
cmpsl
jb
push
shll
mov
inc
cwtl
jmp
dec
into
stos
imul
imulb
mov
and
xchg
sbb
outsl
mov
dec
mov
out
and
cmp
je
repz
pop
cwtl
jmp
or
ret
xchg
cmpsb
mov
movsl
hlt
xchg
addr16
jmp
sarl
or
sub
inc
inc
das
rcrl
mov
adc
outsl
inc
dec
inc
vfmsub132ps
cmp
or
lods
xor
repz
sbb
popf
dec
cmp
ret
imul
mov
cmp
int
mov
push
cli
icebp
xchg
fiaddl
pop
ja
adcl
cmpsb
dec
jne
popl
and
movsb
popf
and
dec
lcall
ja
imul
rorb
popf
leave
mov
notl
jmp
movsl
push
fdivr
adc
add
xor
mov
or
add
pop
repnz
in
jo
sub
lcall
pop
sbbl
mov
mov
std
pop
adc
or
mov
lods
cli
sub
repz
in
push
popf
outsb
xchg
test
cmp
mov
add
dec
xor
lods
in
dec
outsb
std
add
add
aam
lock
imul
sub
cs
dec
stos
int
popa
and
fwait
into
ss
loop
es
das
jb
cmp
jle
dec
jnp
ficoms
xchg
das
pop
lahf
fcmovb
or
xchg
adc
mov
cld
xor
mov
xchg
testb
outsb
jb
jo
out
mov
push
scas
sarl
and
inc
roll
push
and
repz
or
xor
mov
jae
outsb
jl
inc
out
push
cs
movsl
insb
add
inc
out
lods
jne
or
push
lret
aad
adc
in
das
lods
mov
les
xor
add
jno
adc
push
hlt
cmp
shl
sti
sbb
xlat
out
mov
out
lea
lcall
sub
repnz
add
pusha
mov
das
lret
ss
jle
repz
movsl
mov
test
lods
mov
loopne
push
enter
or
mov
xchg
or
adc
pop
shl
movsl
pop
sub
repz
cmp
nop
inc
xchg
push
mov
in
roll
leave
stc
loop
or
mov
push
add
xor
bnd
inc
pusha
fbstp
sti
xchg
mov
jne
dec
aaa
scas
add
aad
into
pushf
or
cmp
inc
mov
push
dec
lock
and
xor
and
adc
shll
sub
xlat
xor
ffree
adc
int3
scas
inc
test
sbb
add
pop
aam
push
mov
stos
jne
inc
mov
fisubrs
js
xchg
jno
jae
sub
mov
xchg
adc
pusha
pop
rorl
popa
repnz
mov
jp
scas
xchg
daa
and
pop
cmp
add
xor
mov
xchg
in
mov
jo
in
xor
out
jnp
clts
jp
cmp
pop
lods
sbbl
bound
int3
leave
xor
cwtl
xor
mov
call
gs
loope
jle
mov
scas
mov
fsts
push
pop
aas
pop
mov
mov
pop
and
in
addr16
cld
lcall
bound
pop
inc
xchg
push
jb
std
xchg
xchg
mov
test
dec
add
dec
insl
or
cmpsl
cltd
mov
aaa
clc
lret
mov
push
mov
dec
inc
dec
int
ret
mov
inc
pop
adc
pop
sub
fldenv
add
in
dec
mov
sub
lods
aas
jo
popa
adc
jp
mov
lods
sbb
jl
mov
popa
cmp
lods
fcoml
cltd
jb
jl
adc
shrb
je
inc
inc
push
adc
clc
pop
out
mov
adc
idiv
pop
mov
inc
push
pop
js
pusha
add
fbstp
mov
dec
adc
lds
nop
sbb
jmp
je
or
popf
mov
xchg
or
nop
stos
inc
shlb
insl
inc
xor
push
cld
in
mov
inc
jo
inc
filds
mov
and
lock
xchg
cli
fwait
test
lods
rorb
inc
xchg
dec
ss
jge
dec
dec
repz
adc
mov
imul
add
xchg
icebp
out
cmc
inc
sbb
in
shrl
or
test
pusha
pusha
inc
stos
xchg
rclb
andl
es
inc
pop
jl
test
xchg
jb
lea
in
or
stc
mov
clc
dec
inc
sbb
dec
xchg
and
pop
mov
movsb
stos
fiadds
mov
and
xor
mov
sub
dec
shl
es
mov
jo
mov
jl
fidivs
ret
pop
fs
jno
dec
lret
xlat
and
push
not
push
sarl
aaa
xchg
mov
rolb
pop
movsl
jecxz
js
fldt
mov
scas
in
mov
mov
jecxz
popa
jbe
sbb
add
cmp
aam
or
outsb
lret
aad
dec
scas
cwtl
pushf
scas
out
push
xor
fcmovbe
repnz
enter
add
xchg
mov
cmp
pop
int
jmp
dec
test
cli
gs
daa
push
dec
arpl
int3
sbb
mov
js
pop
popf
xchg
pop
repnz
and
lret
lret
push
and
lcall
or
popa
mov
mov
cmpsl
mov
add
pusha
and
les
mov
mov
imul
stos
cltd
testl
popf
das
push
test
in
push
sub
push
into
cmp
out
pop
ret
stc
add
pop
scas
add
dec
movsb
and
ret
sbb
arpl
data16
pop
jl
cli
xlat
testb
ret
pop
adc
loop
push
repz
jmp
or
and
mov
jnp
fdivrl
xor
mov
jg
push
daa
pop
sarb
sbb
dec
lds
pop
outsb
and
sub
jecxz
cs
repz
mov
sub
jno
inc
leave
add
es
mov
idivl
xchg
fstpl
out
cwtl
sub
js
push
mov
daa
mov
or
sub
frstor
xchg
mov
dec
inc
sub
push
mov
icebp
xor
roll
xor
mov
inc
divb
imul
stos
call
dec
pusha
outsl
out
mov
les
adc
dec
add
mov
push
jp
ret
or
rolb
popa
sarb
push
int
adc
and
inc
sbb
pushf
aaa
xorl
mov
and
or
daa
aad
repnz
sub
or
cmp
scas
pushf
pop
cmp
inc
inc
and
push
and
and
enter
rclb
push
pop
psubb
mov
dec
fdivr
mov
ljmp
daa
cmpsl
inc
sti
dec
je
push
mov
push
rorl
add
test
lret
xchg
lods
imul
inc
pusha
iret
jl
push
cmpsl
cmp
push
dec
inc
push
dec
sub
out
mov
cmp
lea
xchg
mov
xchg
dec
sub
movsl
test
dec
adc
push
mov
push
push
leave
pushf
push
loop
xchg
fstpl
add
inc
mov
sbb
scas
or
mov
dec
xchg
jle
repz
or
inc
js
jae
push
xchg
aad
loopne
mov
dec
fnstsw
insl
clc
fcoms
insl
adc
jp
jno
pop
pop
cmp
push
pushf
sbb
cltd
xor
dec
sub
adc
xlat
lock
mov
stos
mov
jns
sub
add
mov
iret
loopne
mov
xchg
js
vunpcklps
pop
or
push
mov
daa
mov
xor
mov
sti
test
sbb
pusha
andl
dec
mov
test
add
cmpsl
scas
add
dec
inc
fs
jns
cmpsb
push
daa
ret
push
mov
lret
jbe
insl
rolb
pop
negl
iret
ljmp
sub
or
out
arpl
push
aaa
cmp
cmp
push
scas
mov
testb
shl
inc
gs
cmp
int3
pop
pop
out
imul
lret
out
jle
add
notb
imul
loopne
imul
add
lods
xchg
cmp
insl
push
loope,pn
push
or
inc
mov
cli
mov
scas
pop
je
push
xor
gs
or
sub
jmp
fs
movsl
stos
xchg
mov
dec
adc
stos
pop
ja
sub
pop
inc
jmp
lods
jo
xchg
push
sti
sahf
jecxz
cmp
mulb
pop
loop
dec
jns
pop
jmp
loop
fwait
jmp
in
pop
adc
int
xchg
mov
lds
fs
popa
sbb
ja,pt
lock
in
lods
xlat
jbe
pushf
das
sbb
sub
cmp
cmovge
xchg
lds
scas
or
in
movsb
xchg
andl
sbb
loope
jmp
mov
dec
xor
xor
jae
int
mov
mov
js
outsb
pusha
notl
add
jl
xchg
in
lock
and
xchg
lret
lahf
sub
scas
inc
jbe
ja
dec
pop
dec
cli
clc
movsl
fwait
cmp
jo
xchg
les
xor
and
int3
roll
cli
insl
sub
sub
add
jo
xchg
mov
les
add
aas
mov
xchg
jle
leave
jg
out
fwait
push
mov
inc
lods
push
adc
push
addr16
js
cmp
pop
jle
bound
pop
stos
mov
negl
mov
dec
aaa
pop
adcl
jns
iret
xorl
mov
inc
gs
je
jmp
or
mov
sbb
xor
rolb
xchg
aas
mov
enter
push
add
movsl
cmp
out
fimuls
nop
cli
fxch
push
fcmovnbe
push
outsb
xor
pop
out
scas
mov
daa
add
in
lahf
dec
jb
xor
ja
pop
cltd
mov
sub
push
mov
cmp
dec
addr16
test
das
cmpsl
iret
sbb
push
call
adc
mov
lea
mov
cwtl
lcall
jns
call
int3
mov
xor
cmpl
sub
stc
mov
add
add
push
movsl
jnp
cmpsb
xchg
inc
cmpsb
sbb
dec
sbb
das
jbe
test
dec
call
push
sub
call
pop
in
sahf
sbb
cli
stos
aas
mov
ds
loop
sbb
rorb
and
pop
mov
sbb
nop
mov
cmp
mov
jg
sub
addr16
mov
mov
push
or
jge
mov
insb
test
inc
sarl
xchg
enter
cs
sarl
cmpl
jno
inc
sub
out
lock
inc
jl
xchg
decb
or
add
jmp
jp
mov
leave
adc
and
or
in
aas
push
pop
mov
push
jge
das
push
pusha
dec
fsubr
mov
push
inc
inc
fnstcw
pusha
xchg
and
into
jge
inc
mov
jg
int
arpl
sbb
mov
pop
push
xchg
aas
push
in
in
dec
jecxz
pop
pop
rcrl
pop
cmpsb
mov
cmp
js
dec
xor
rclb
call
mov
jge
into
stos
mov
loop
shl
shll
cmp
testb
inc
sub
imul
mov
push
into
pop
arpl
popf
lods
inc
or
push
push
inc
in
fwait
adc
or
pop
sarl
mov
aas
mov
xlat
xchg
arpl
mov
adcl
adc
lock
xchg
cmpsb
fnstsw
lea
loopne
mov
aas
ds
jne
decb
sbb
loop
adc
clc
stos
cmp
scas
icebp
adc
repnz
adc
xchg
repnz
out
neg
sub
imul
cli
pushf
adc
imul
and
mov
test
insl
stos
mov
in
lods
lock
repnz
popa
insb
mov
xchg
push
xchg
mov
into
cld
cmpsl
sbb
mov
call
loopne
std
idivb
sub
lds
dec
or
sub
aaa
das
jae
mov
push
xor
inc
sti
dec
xchg
mov
scas
mov
push
in
inc
test
das
fs
fldt
aam
data16
shlb
xchg
call
or
and
mov
in
fimull
fdivrs
mov
fwait
lods
xor
cmp
cmp
fmull
mov
mov
inc
and
cs
mov
and
jl
push
int3
clc
mov
imul
push
repnz
push
jne
fiadds
xchg
fldl
rorl
leave
dec
pop
mov
push
push
ret
scas
xor
sbb
jnp
sar
add
or
icebp
push
sbb
or
lret
add
loopne
mov
mov
jnp
lods
test
jle
aam
cmp
jbe
mov
cmc
fists
push
push
sarl
pushf
xchg
inc
or
dec
and
sti
cmp
dec
pusha
das
dec
inc
in
push
inc
hlt
pop
cmp
sbb
push
loopne
int3
pop
cmpsb
lods
push
mov
aas
lahf
aas
hlt
sbb
shrb
pusha
jecxz
fnsave
movsl
mov
stos
iret
mov
bound
out
ret
aas
leave
add
sub
in
leave
mov
xchg
mov
xorl
and
inc
pusha
inc
movsb
push
fadds
cmp
into
ret
nop
sub
popa
dec
sub
sti
inc
mov
mov
mov
out
inc
push
pop
sbb
push
mov
in
xchg
mov
into
cmp
les
test
xchg
adc
and
pop
addr16
jle
push
pop
or
pop
lret
mov
movb
scas
sbb
mov
pop
mov
and
leave
lcall
mov
hlt
push
mov
lock
jns
icebp
sbb
in
lahf
adc
and
xchg
aas
jbe
jge
and
dec
pop
outsb
cmpsb
test
lcall
mov
cmovp
cwtl
or
push
push
iret
sub
jp
pop
sub
mov
pop
sti
mov
xchg
push
jo
test
roll
testl
mov
fistpll
js
lret
cmpsb
test
push
cmp
rclb
jo
inc
data16
dec
xchg
lea
cltd
xor
pop
push
arpl
jge
mov
jmp
out
xor
std
and
dec
inc
fistpll
xchg
dec
cmp
add
mov
insl
lahf
pop
jne
adc
aas
dec
std
cwtl
push
lea
sti
jp
jns
mov
sbb
cmc
lret
mov
popf
cwtl
adc
imul
mov
mov
fbld
in
aad
stos
push
adc
push
mov
jns
stc
mov
test
fstps
or
sbb
inc
cld
inc
es
or
aas
repnz
mov
xor
cmp
loope
movsb
dec
lea
jb
int
cmp
cmp
test
push
popf
in
mov
js
sbb
scas
dec
daa
add
out
jle
icebp
lea
ret
cmp
mov
mov
jmp
jl
adc
jl
lock
xor
mov
sbb
jnp,pt
mov
and
xchg
dec
insl
lcall
sbb
outsb
cmp
call
lods
dec
rcll
movsb
std
jge
xchg
add
pop
lahf
push
mov
sub
decl
mov
and
fcompl
pop
push
test
shl
cmp
jne
arpl
mov
inc
jnp
or
and
subl
jg
dec
cmp
orb
loop
xchg
clc
sbb
insb
repz
and
jge
pop
popa
adc
nop
in
mov
test
sbb
inc
pushf
dec
mov
push
stc
insl
push
sub
mov
sbbl
dec
es
xchg
mov
fisubs
setbe
lret
in
sub
inc
loop
fdecstp
cli
and
mov
mov
std
pop
inc
jae
jge
jp
outsl
mov
pusha
dec
inc
roll
and
push
add
in
gs
jge
xor
pop
int
mov
mov
jbe
xor
bound
aas
rclb
sbb
pop
pop
cmp
cwtl
push
cmpsl
mov
xor
xchg
cmpsl
pop
xor
fisttpll
mov
fdivs
mov
inc
jns
jns
push
test
pop
pop
popf
loope
lret
pop
push
lahf
aas
insb
pop
sub
adc
bound
or
or
out
insl
fcomps
dec
pop
rol
sbb
fisttps
fst
pop
js
jecxz
jae
ljmp
hlt
cmp
xor
or
jmp
in
aad
out
jne
xchg
int
loopne
or
add
scas
xlat
sbb
sub
inc
stos
ret
pop
in
push
push
inc
adc
and
cmp
or
insb
out
test
inc
insl
ss
push
sbbl
and
lret
cwtl
and
aas
in
je
push
sub
dec
testb
mov
jae
or
stc
sub
orb
js
mov
pusha
and
adc
fistps
repz
xor
loope
pop
pop
adc
scas
outsl
aaa
mov
mov
or
xlat
je
fs
cmp
sub
ret
push
cmp
mov
testl
push
clc
mov
jg
or
sbb
mov
sub
or
cmp
mov
push
inc
mov
daa
fs
mov
ret
shll
pusha
or
test
mov
jno
jp
stc
cli
insb
int3
icebp
sbb
roll
or
std
inc
in
jnp
jnp
push
push
mov
mov
mov
cmc
lret
push
xor
jg
xor
scas
sub
pop
insb
push
add
iret
test
mov
inc
inc
add
dec
insb
dec
dec
dec
adc
adc
dec
das
scas
sbb
xchg
repz
dec
jae
test
xorl
or
pop
test
pop
repnz
add
lock
outsl
jp
mov
or
rorl
dec
or
pop
nop
and
mov
mov
cmp
sbb
jnp
push
push
xchg
inc
xchg
ret
mov
sub
and
pop
mov
sbb
scas
inc
stos
cli
and
xlat
lds
in
iret
aas
cltd
mov
dec
enter
lret
cmc
stos
mov
mov
jb
test
insl
pop
jne
or
mov
cli
mov
mov
cmpsb
enter
in
mov
clc
fdivl
and
pop
mov
cwtl
lods
gs
sti
push
dec
inc
fcmovnu
sub
pop
add
inc
mov
ret
mov
dec
fldcw
int3
cmpl
daa
push
cmp
into
push
xor
sahf
sub
mov
sub
mov
test
xor
xchg
push
and
jmp
or
neg
push
lcall
cwtl
imul
es
add
add
fcomps
sbb
movsl
mov
pop
mov
mov
scas
sub
jno
ljmp
out
iret
mov
mov
and
lods
pop
sbb
pop
pop
popf
mov
jae
pop
xchg
add
mov
mov
sub
call
pop
leave
jo
ja
mov
push
aad
lcall
cmp
jne
dec
lds
addr16
ret
xchg
ret
add
subb
ret
pop
cld
sti
shrb
loopne
xlat
loopne
lret
bound
fisttps
sbb
push
pop
test
movsl
mov
popf
xor
and
xchg
sub
loope
bnd
push
and
ja
rcll
mov
loopne
rcr
cli
mov
in
mov
and
out
data16
xor
in
lds
aam
push
jnp
add
pop
imul
ds
popf
mov
icebp
or
jnp
push
enter
dec
mov
ds
stc
push
shlb
pop
in
scas
or
js
cmpsb
stos
jecxz
cld
sub
adc
mov
dec
mov
pop
lock
mov
adcl
int3
and
push
into
cmpb
mov
jmp
inc
add
mov
in
fimuls
or
lret
sub
ret
lcall
mov
scas
in
jbe
mov
js
pop
insb
insb
mov
push
in
cmc
pop
loope
cmp
sub
add
jo
sarl
jl
inc
int3
insl
cs
movsl
sbb
and
jns
fs
ss
pop
adc
out
jmp
ljmp
out
ds
inc
push
mov
push
push
mov
dec
mov
jg
addr16
and
ss
mov
ja
jg
push
js
lret
inc
test
push
cmp
inc
in
shlb
bound
mov
fisttps
jbe
mov
jae
adc
pop
cmc
mov
icebp
test
inc
dec
in
push
sbb
sub
xchg
adc
pop
xor
stc
mov
rolb
test
jg
movb
add
dec
call
popf
or
mov
xchg
scas
pop
push
addr16
imul
push
xchg
and
mov
in
sub
mov
mov
outsb
dec
outsb
ret
or
jno
pop
sbb
cli
jno
and
sti
xchg
mov
mov
stc
cmpsb
add
add
mov
adc
outsl
xor
add
out
xor
or
pop
or
lcall
dec
jae
jle
aad
mov
ljmp
inc
mov
mov
sub
sub
addr16
inc
sub
or
or
mov
and
adc
imull
mov
in
les
popf
cmc
shll
mov
rorb
outsl
daa
xchg
xor
push
bound
add
xchg
movsb
add
lea
pop
in
push
pop
mov
aad
clc
mov
cmp
aad
push
cmp
mov
outsl
xchg
cmpsb
pop
jbe
fadds
movsl
add
adc
cmpsb
lcall
sbb
xor
adc
lock
xchg
push
std
and
inc
jns
sarl
push
add
mov
mov
cli
sbb
adc
jne
imul
iret
push
inc
lret
into
dec
adc
xchg
add
sar
and
or
addr16
int3
inc
jge
ret
mov
leave
inc
dec
xchg
cwtl
movsl
test
lods
xchg
xchg
xchg
add
nop
lcall
jle
mov
mov
mov
scas
call
mov
insl
ljmp
mov
pop
sub
aas
repz
cmp
ss
push
jl
sbb
mov
test
je
sub
aaa
jp
daa
cli
imul
jae
aam
sub
xchg
pop
mov
cmp
repnz
jle
xcrypt-cfb
cmpsl
adc
icebp
and
mov
ret
push
scas
push
add
mov
fnstcw
movsb
shlb
xchg
shll
cmpsb
clc
sbb
lock
jns
mov
jb
test
in
cmp
jae
cmp
or
or
repz
jo
in
xchg
mov
cld
xchg
sbb
mov
push
shl
mov
test
in
jbe
incb
push
adc
jl
push
lahf
push
iret
adc
adc
xchg
mov
out
ret
repz
or
pusha
jge
into
xchg
daa
les
xchg
mov
cmpsb
cli
jle
pushf
add
and
inc
jo
addb
cmc
lods
es
lahf
lods
jmp
jo
fimuls
sbb
xor
push
push
push
test
sahf
mov
es
mov
and
jp
ror
sahf
repz
adc
fnsetpm(287
push
ljmp
popa
mov
repnz
pop
in
mov
xlat
cltd
lods
inc
gs
aad
add
add
repnz
jb
add
jp
ret
jb
xchg
sub
imul
fsub
rcrl
add
or
int3
pop
or
xchg
sub
mov
in
mov
cs
adc
sub
xor
push
cli
fiadds
lock
dec
push
dec
jmp
push
or
aas
test
outsl
sbb
or
lock
fcmovne
in
push
xchg
jmp
shlb
movsl
shll
loope
jbe
es
xchg
push
mov
divb
in
fmuls
mov
sbb
loopne
xchg
jbe
pusha
and
or
repz
add
gs
call
in
mov
mov
loope
jnp
sarl
or
int3
in
scas
pop
mov
cwtl
jno
rcrl
adc
leave
add
mov
and
mov
cmp
push
mov
push
xacquire
arpl
repz
xchg
push
ss
rclb
in
lret
mov
imul
ljmp
sub
lcall
cmp
pop
jae
ja
popa
aam
jecxz
aad
push
mov
mov
or
subb
xor
or
adcb
and
in
popf
mov
repnz
adc
or
dec
or
test
jle
inc
mov
jl
rcrl
mov
dec
lret
jno
inc
sti
fsts
fsincos
repnz
cmp
fcom
int3
xorl
inc
mov
add
test
sub
xor
ds
cmp
popl
jns,pt
dec
jnp
lods
jp
pop
mov
out
xchg
mov
cmc
lods
sbb
adc
push
fidivrs
arpl
push
mov
imulb
leave
cmp
sub
test
adc
cmp
xchg
mov
cmpsl
inc
push
xor
xchg
cwtl
cs
pop
mov
pop
dec
add
enter
cmp
or
repnz
fnstcw
gs
lds
sub
insl
xor
dec
pop
filds
fldl
fs
xor
mov
rcrl
push
in
addr16
inc
cmp
mov
add
mov
push
lea
or
pop
fcmovnu
js
into
and
push
daa
sub
push
or
sbb
rcrl
xor
jns
sbb
adc
xchg
js
xchg
and
cmp
adc
aaa
out
dec
ret
inc
testb
stos
dec
mov
xor
jns
insb
lock
mov
mov
inc
outsb
ss
mov
mov
in
out
xchg
ret
mov
sbb
into
leave
dec
test
fbstp
test
cltd
movsl
pop
lds
lods
inc
cltd
icebp
bts
test
push
inc
movsl
ss
sub
jecxz
lret
sbb
xchg
insl
fsubrl
nop
es
mov
mov
mov
inc
mov
stc
sub
sub
xor
jno
les
scas
lock
xlat
aaa
cwtl
lahf
sbb
dec
jnp
adc
sub
push
aas
aam
lds
mov
pushf
xchg
xor
pop
rcll
xchg
int3
sub
pop
call
mov
sbb
cmpsb
cmc
xchg
pop
lret
repz
aam
loopne
enter
and
mov
cmpb
adcl
xchg
or
sbb
xor
add
fildl
orb
fsub
bound
xchg
sub
clc
add
sub
mov
mov
cli
in
jne
mov
jmp
js
insb
jo
call
fldt
push
lds
dec
dec
mov
cwtl
imul
movsl
push
cld
mov
insb
loop
test
dec
xor
and
ret
and
mov
and
outsb
pop
insb
cmpsl
lahf
xor
sbb
cmp
aad
lahf
cvtpi2ps
xor
pop
push
adc
and
std
push
mov
div
rolb
dec
xchg
in
imul
xchg
jb
push
adc
mov
jle
push
cwtl
lds
mov
cmp
and
xchg
and
dec
test
mov
mov
cwtl
dec
andl
dec
sbb
mov
xor
fwait
mov
shll
iret
xchg
or
mov
jno
shll
pop
sub
popa
movsl
dec
sub
mov
rcll
pop
clc
mov
xchg
out
or
sub
cmp
jns
push
sbb
addl
or
or
imul
adc
jb
inc
and
xor
inc
repz
or
inc
fwait
int3
outsl
bound
in
ja
sbb
add
jecxz
lcall
mov
out
and
addr16
cmpsl
test
xchg
xchg
daa
cmp
ret
fidivrl
push
out
adc
inc
sub
or
or
xor
mov
fwait
scas
clc
popf
push
mov
adc
fcmovnu
jle
xor
js
xchg
add
adc
aaa
in
cmpl
repnz
mov
jl
lahf
push
xchg
and
mov
insl
mov
subb
gs
push
push
lahf
aas
scas
or
cmpsb
lahf
xchg
xchg
mov
pop
fcmovnu
mov
xchg
imull
sub
push
mov
mov
add
jno
mov
rolb
inc
stos
andb
or
shlb
or
adc
mov
sti
xor
mov
sti
cmpsb
les
popf
jp
sbb
add
jmp
sbb
fisubl
inc
shlb
or
xor
jmp
inc
dec
or
out
aaa
pop
orl
mov
imul
fsts
jnp
fsts
cmp
xor
cmp
jne
cmp
xor
es
xchg
imul
or
sub
loop
inc
push
movsl
mov
lcall
js
xchg
sub
ret
leave
clc
add
scas
inc
test
jle
jmp
icebp
rcl
movsb
add
inc
or
push
mov
pushf
aas
add
aaa
lret
mov
pop
xor
push
mov
aaa
add
adc
mov
push
mov
je
int3
repnz
cmc
mov
leave
cld
jecxz
adc
mov
rol
push
outsb
push
ss
and
bound
jae
addr16
dec
in
cs
sub
stc
push
pop
mov
xchg
xor
stos
out
mov
cmp
je
mov
jl
js
mov
call
dec
aad
jnp
adc
cli
and
inc
inc
test
pop
les
inc
fildll
inc
and
dec
loop
mov
rorb
mov
rcr
mov
pop
daa
test
pop
cmp
mov
or
in
rcll
popa
daa
fcmovb
lods
sbb
outsb
idivl
or
push
jmp
xchg
lcall
push
mov
xchg
pop
xlat
stos
movsl
xchg
cs
xchg
cmpsl
pop
mov
stos
inc
add
jle
mov
push
aam
mov
mov
jae
and
int
mov
ret
sub
stos
sbb
push
pop
loopne
xor
fucom
and
insb
cltd
cmp
add
and
shr
push
inc
inc
mov
mov
psrad
nop
lock
adcl
xlat
hlt
stos
out
test
jns
mov
push
mov
fbstp
lods
adc
fs
in
mov
aad
inc
sbb
dec
cmp
jae
sub
xchg
cmpsl
ja
into
pop
adc
cmp
jne
add
xchg
lret
les
push
or
xlat
ds
push
cmp
adc
xchg
dec
pop
mov
mov
xor
xchg
lods
hlt
pop
jecxz
int3
outsl
cmpsl
sbb
lds
fcompl
hlt
adc
mov
or
mov
lea
or
push
sti
hlt
mov
push
cmc
lea
jg
jmp
cmc
jb
out
inc
mov
pop
lock
enter
out
icebp
mov
push
mov
es
add
inc
ds
and
adc
pop
xor
jg
jnp
stos
cmp
in
rcl
xor
or
mov
dec
inc
jno
mov
ljmp
in
cli
xor
xor
pushf
inc
int3
test
icebp
adc
insb
cmc
addr16
cld
or
data16
and
dec
popa
jnp
insl
xor
dec
xchg
pop
or
js
push
test
out
mov
pusha
les
addl
cmc
sti
ss
mov
in
xor
xor
push
dec
lds
std
push
clc
xchg
fdivl
mov
call
out
mov
ror
in
mov
jl
mulb
and
sti
hlt
add
out
dec
and
fistl
enter
push
cmp
inc
push
inc
sub
mov
mov
mov
out
scas
into
lods
pop
loop
stos
inc
mov
rclb
inc
outsb
push
push
negl
aam
cli
outsl
jne
or
push
inc
or
push
es
pop
gs
les
mov
imul
jmp
pop
rcrb
mov
jge
popl
mov
xchg
scas
adc
add
dec
inc
sbb
sub
inc
test
imul
or
or
fxch
adc
xchg
in
fwait
xor
nop
inc
aam
cmpsl
jle
inc
push
or
popa
aas
fldt
addb
sar
stos
mov
inc
add
jp
xchg
cmp
fbld
mov
arpl
sub
aas
aad
fwait
hlt
testb
dec
cwtl
ret
addr16
ret
in
rcrb
mov
shll
imul
sarb
cltd
xchg
movsl
sbb
popa
cli
dec
clc
lea
pop
push
xchg
out
test
fistps
jmp
sbb
ljmp
scas
daa
mov
mov
mov
pop
jbe
push
scas
xlat
int3
sbb
scas
cld
enter
mov
pop
xchg
popf
mov
dec
mov
sub
lods
push
and
jno
loopne
mov
mov
aam
push
lock
test
mov
lret
data16
sahf
add
mov
repnz
dec
ds
adc
test
movsl
sub
xchg
pop
repnz
jno
lods
sub
adc
or
pop
xchg
popf
test
cltd
les
imul
push
in
lcall
das
outsl
mov
push
into
scas
pop
aaa
sub
pop
push
stc
xchg
loope
out
mov
lods
jae
and
lret
xlat
sub
mov
inc
and
dec
rcr
cmp
stc
imull
fimull
fnstenv
push
mov
ja
je
pop
in
mov
arpl
mov
nop
fcoms
pop
inc
add
xor
dec
adc
aam
push
cli
insb
mov
inc
sub
push
loopne
add
aad
lods
lods
sarl
adc
pop
mov
in
sbb
sub
mov
jge
add
mov
inc
sbb
lea
les
test
addr16
or
xchg
aam
pop
int
mov
std
ret
xor
out
aad
das
pop
or
sbb
out
in
jp
inc
push
out
adc
sbb
mov
lods
repnz
mov
fisttpl
imul
gs
inc
stos
sub
push
adc
aad
cltd
daa
idiv
and
ja
dec
daa
jg
mov
hlt
popl
or
pushf
test
rclb
rol
in
scas
xor
jb
nop
mov
jb
xor
test
jne
rolb
cmp
repz
jl
out
outsl
sub
mov
sub
xchg
push
shr
or
insb
js
into
stc
pop
jl
mov
lock
lock
icebp
mov
inc
cli
lcall
je
int3
and
cs
fsubp
lret
sub
mov
cmpsb
dec
leave
lret
cmpsb
outsb
subl
loop
sbb
daa
mov
jnp
dec
and
add
and
mov
in
lea
adc
lahf
mov
in
sbb
iret
xor
jecxz
mov
out
dec
inc
push
in
jmp
xor
in
or
fnstcw
in
pop
insl
adc
in
and
jne
nop
mov
jae
scas
xorl
mov
rorb
pop
imul
pop
adc
xlat
fmulp
push
dec
mov
mov
sub
mov
cmpsb
xlat
test
loopne
xchg
xor
jecxz
sbb
push
cmp
push
jg
inc
sub
pop
push
lods
jl
out
cwtl
popa
ret
inc
pop
sub
mov
push
jmp
das
dec
popf
xor
mov
mov
adc
sub
xor
mov
push
sub
cmp
add
and
or
mov
ljmp
loope
xor
addr16
pop
subb
in
dec
bound
aad
mov
movsb
ror
mov
mov
jbe
mov
cli
inc
addr16
cmpsb
addr16
cwtl
popa
ds
aam
shl
stos
pushf
xchg
and
mov
shlb
je
xor
loopne
out
out
inc
lret
sarb
mov
jp
into
popf
sub
cmp
pop
xchg
pop
push
fcmovne
and
mov
testb
and
mov
mov
les
hlt
mov
add
cmp
jns
xchg
push
jae
sbb
jne
shlb
icebp
xor
test
std
lcall
lock
or
negl
aaa
incl
in
fidivrs
loope
xlat
push
and
push
inc
insl
cltd
int
jecxz
push
adc
mov
lods
sub
pop
fdiv
dec
mov
stos
shlb
stos
sub
out
daa
mov
xchg
sarb
cmpsb
adc
divl
cmp
faddp
fwait
lcall
or
sbb
cmp
fdivrp
jg
or
dec
xor
stos
adc
in
mov
ret
cmp
mov
fs
cmp
mov
jmp
mov
jns
pushf
pop
popf
pop
or
cmpsb
jg
xor
mov
pushf
pop
arpl
push
jno
icebp
jno
cli
inc
mov
adc
jne
jae
cmpsl
fcompl
das
push
inc
insb
or
jmp
xchg
jb
pop
ss
dec
and
sbb
arpl
daa
inc
faddl
out
in
push
popf
lods
pop
enter
nop
clc
notb
scas
cmp
pop
movsl
xchg
imul
das
pop
ss
pop
dec
inc
or
rorb
test
mov
iret
dec
sbb
fistpll
jmp
dec
mov
daa
outsb
xchg
test
out
stos
push
and
push
outsb
jno
mov
pop
div
test
cmp
mov
add
movsl
pop
lcall
das
fistl
bound
mov
ds
jne
xchg
insb
in
into
pusha
loopne
or
pop
cli
mov
test
or
xor
lods
sysexit
rclb
push
mov
mov
jbe
test
mov
sahf
dec
in
jg
test
outsb
mov
jne
push
push
inc
int
mov
mov
lret
mov
mov
lods
xor
xchg
test
mov
rcll
mov
mov
push
push
pop
lods
fisttps
pop
fldt
pop
aaa
cmp
in
test
pop
cmp
mov
xor
sbb
mov
outsl
mov
xor
jns
stos
sahf
xchg
add
sub
stos
cmpl
cmp
lret
and
pop
or
insl
sub
sbb
xor
cmp
sub
cmp
out
pop
inc
fdivrp
jno
icebp
call
dec
push
mov
arpl
mov
jmp
pop
cmpsb
sub
push
stc
lret
push
sub
sub
sub
cmp
movhps
xor
or
ret
inc
jg
xor
add
fs
aas
jmpw
xchg
sbb
lcall
iret
popa
out
cmpsb
and
jo
pop
mov
dec
mov
jecxz
ficomps
and
rorb
das
mov
aaa
add
push
push
leave
cmc
loope
and
adc
jp
rcll
in
jo
xchg
imul
push
stos
jecxz
push
mov
aam
ret
or
cmp
cmp
fwait
and
inc
sarb
pop
cmp
xor
lahf
jl
push
inc
cmp
fisubl
fildl
jns
xchg
or
stos
mov
xchg
cltd
loopne
loop
lods
jb
arpl
hlt
dec
dec
lea
sub
loope
pop
sarl
and
inc
test
xchg
sarl
inc
movsb
in
jge
fisttpll
jl
and
push
stos
and
push
icebp
sub
sbbb
jl
icebp
in
shll
push
out
std
out
jmp
push
jae
dec
testl
lock
loopne
jl
pusha
je
inc
clc
sub
and
hlt
xchg
ret
jno
pop
lods
popf
loope
cwtl
ret
nop
lcall
cld
fdivs
ret
mov
bound
push
push
mov
andb
test
imul
inc
out
ret
fdivl
ss
iret
jmp
aaa
cmp
add
pusha
int3
fisubs
add
fidivl
jmp
mov
leave
repnz
xor
je
xchg
hlt
cs
push
push
sub
imul
mov
jl
mov
stos
out
xchg
je
fwait
push
mov
dec
enter
pop
ja
mov
pop
in
dec
out
or
xchg
xlat
cmpsb
test
in
mov
mov
aam
aaa
test
sbb
adc
enter
mov
std
adc
xor
subb
and
imul
adc
xchg
test
xchg
pop
xchg
push
aad
adc
insb
xor
subb
insb
mov
aam
daa
scas
fldenv
xor
dec
cwtl
or
jg
pop
adc
dec
jb
add
add
not
push
outsl
adc
notb
hlt
into
imul
icebp
mov
sti
cltd
out
pop
sub
gs
inc
adc
pop
cmc
lea
es
xor
inc
mov
mov
mov
rcl
fstl
dec
pop
jae
popf
sub
and
jnp
cltd
inc
mov
adc
das
test
in
inc
pop
pop
add
nop
cwtl
jae
inc
add
movsl
rorl
int
push
out
or
ret
mov
xor
mov
sbb
push
inc
ret
lret
pushf
mov
xchg
scas
adc
dec
outsl
push
mov
jno
loopne
les
mov
jmp
mov
jae
or
adc
flds
ja
out
in
in
ret
loope
mov
dec
jnp
sub
loope
mov
loopne,pt
add
xchg
mov
pop
in
adc
imul
rol
jne
into
insl
jne
hlt
sti
mov
aas
xchg
push
cmp
push
shrb
lock
fwait
out
cmp
iret
or
les
xchg
pop
lcall
push
shrb
or
icebp
pop
push
fbstp
popf
cmp
jns
ljmp
es
push
inc
xor
xchg
pop
push
out
xor
data16
dec
js
push
das
lods
icebp
mov
sub
cmpsb
jg
call
test
lods
idivb
in
and
adc
je
ja
cld
mov
mov
leave
imul
mov
lods
mov
cmp
inc
shrl
dec
pop
cs
or
enter
inc
inc
adc
lock
pusha
pop
clc
jp
xchg
movsl
pushf
lret
fbstp
inc
jge
icebp
je
pop
loopne
out
lcall
pop
or
mov
ja
scas
fidivl
iret
adc
jecxz
cli
loopne
mov
and
sarl
fbld
push
add
js
inc
repnz
push
xchg
outsl
and
movsl
jmp
and
ret
sbbb
out
daa
mov
mov
xchg
sub
aad
dec
adc
add
stos
or
rclb
push
xor
fildl
add
shll
je
inc
jmp
mov
lret
dec
jmp
push
sub
lret
mov
pop
and
stc
dec
jne
mov
adc
test
xor
or
sbbl
add
repnz
cltd
loopne
mov
sarl
inc
xor
pop
stos
or
push
loopne
pop
jmp
mov
xlat
imul
jecxz
out
adc
mov
sub
cmp
push
aas
or
cmpsl
or
rcrl
jmp
mov
adc
test
cmpb
lods
fmuls
aam
xor
mov
pop
and
pop
jmp
movsb
scas
addr16
icebp
xor
outsl
jns
and
leave
jle
jbe
fidivl
pop
aam
dec
cmp
inc
pop
sbb
and
test
aad
int
adc
into
cmpsl
pop
dec
cmp
das
stc
ljmp
std
cld
sahf
sub
imul
sub
cld
or
jg
dec
lea
shl
mov
jle
add
mov
xorl
mov
push
mov
sbb
mov
in
popa
pop
adc
test
fincstp
dec
mov
jbe
outsb
pop
ja
jne
repz
mov
mov
and
push
fstpl
xor
pop
stc
pop
aad
mov
insl
pop
inc
ret
and
daa
push
in
mov
aaa
jo
mov
cmp
cmc
je
pop
in
lods
imul
dec
addb
rolb
and
dec
jbe
inc
xlat
add
addr16
sub
cmc
rclb
mov
xchg
stos
cmp
jecxz
shr
in
jb
outsb
lods
sbb
mov
mov
dec
int3
jbe
fs
dec
ret
adc
pop
sbb
add
pop
push
lret
ljmp
std
pop
push
or
adc
jge
add
sub
add
inc
pop
mov
test
xor
les
cld
test
dec
add
test
or
leave
sbb
dec
lret
jns
or
mov
call
rclb
mov
lock
add
aas
ljmp
in
dec
sbb
pop
cmp
pop
pslld
jp
leave
adc
sbb
scas
jge
jno
jbe
arpl
fistpl
lods
mov
dec
push
fiadds
test
inc
pop
fimuls
push
xchg
mov
lret
xlat
jge
pop
push
repz
shll
fdiv
cltd
iret
pop
sub
push
adcl
and
int3
in
cmpsl
cmp
or
mov
push
xchg
cmpsb
cmp
cmpsb
aaa
mov
mov
adc
call
enter
mov
sbb
xchg
aaa
push
shrl
add
ds
test
leave
std
cli
int3
pop
clc
cmc
mov
in
sbb
je
mov
movsl
bound
aam
cmp
adc
nop
sarb
push
or
pop
cltd
into
mov
or
outsl
cmpsl
pop
imul
outsb
jmp
fs
jbe
lock
mov
mov
pop
pop
out
add
std
in
int3
push
jnp
out
xor
xor
pop
and
or
inc
cmp
les
cli
aad
xor
hlt
sub
adc
cltd
loopne
xchg
aaa
or
push
test
add
andb
je
or
jecxz
loope
add
out
cmp
jmp
cmp
adc
movsl
int
idivl
mov
icebp
dec
shll
aas
add
jne
out
jmp
insl
imul
movsl
mov
enter
jno
punpcklwd
das
mov
or
mov
scas
push
lock
pop
sub
in
jmp
les
ds
into
sub
or
cmp
adc
aas
ljmp
sub
int3
dec
mov
insb
movsl
mov
clc
out
ljmp
aas
mov
repnz
xchg
iret
adc
insb
in
push
push
ret
cmpl
xchg
xor
or
cmpsl
mov
les
inc
pusha
sub
pop
dec
pop
sarb
mov
and
mov
or
pop
movsb
sub
rcll
int3
inc
pop
insb
dec
nop
push
push
xchg
iret
xchg
insb
stc
sbb
int
jne
add
ja
movsl
cmp
jns
sti
out
inc
mov
dec
cmp
rcrl
add
lret
stos
jmp
addb
dec
dec
jg
inc
loop
movsl
adc
movsl
lock
mov
sub
cli
stos
shll
scas
ret
test
cmp
sbb
sbb
jmp
jae
aas
pop
adc
sub
out
xchg
xor
jp
js
lock
add
fsts
addb
or
aaa
outsb
cmp
sbb
xlat
push
mov
pop
shrb
pop
out
pushl
jbe
jne
sub
push
es
aam
add
xchg
aad
sahf
cs
scas
cltd
jg
push
push
cmovle
xor
sbb
sbb
popa
xor
test
lcall
aad
stc
and
or
test
push
pushf
test
xchg
test
jmp
mov
cmp
js
ret
movsb
or
outsl
mov
in
inc
xor
mov
fldt
imul
xchg
inc
addr16
pop
in
mov
shll
data16
and
stos
mov
mov
dec
jg
xchg
xchg
enter
xchg
leave
adc
insb
maxps
jg
nop
mov
es
jge
jg
scas
mov
subb
cmp
lret
adc
dec
mov
push
add
aas
adc
fucom
adcl
push
into
cwtl
out
adcb
push
test
stos
movsl
cmp
iret
shrb
ja
fimull
rcrb
mov
pop
jns
push
fsubs
adc
stos
sbb
and
sbb
push
or
xchg
xchg
inc
mov
addr16
adc
push
es
stos
mov
xchg
and
pop
push
dec
add
rcr
pop
adc
sbb
sub
jg
xchg
cld
jg
scas
jns
jmp
mov
push
daa
ret
mov
mov
jnp
and
adc
push
cmpsl
push
div
mov
stc
or
les
mov
enter
cmp
cmpsl
mov
mov
fildll
ljmp
loopne
outsl
nop
nop
jg
es
adc
mov
jno
xchg
cli
sbb
adcb
fucomip
push
arpl
pop
jo
mov
sbb
adc
or
and
mov
ret
mov
xlat
call
rolb
sub
mov
push
cmpsl
mov
mov
es
arpl
loop
cmpsl
loope
loope
push
aam
ljmp
or
pop
xchg
repnz
mov
sub
outsl
imul
pop
cmpsl
cmpsl
jno
jecxz
repnz
out
orb
pop
cmc
test
cmp
loop
jg
dec
pop
lahf
push
jns
rolb
shrl
stc
jge
fdivrl
mov
aas
stc
fwait
push
mov
fnsave
in
cmp
jl
add
pop
in
iret
popf
fdivl
data16
out
arpl
jmp
push
add
jg
imul
xchg
jbe
mov
pusha
leave
ss
pop
ret
sahf
jge
or
test
shlb
dec
in
hlt
cmpsb
enter
pop
cmp
dec
in
test
mov
out
es
sbb
dec
dec
mov
inc
bound
cmc
sbb
push
adc
xor
xor
mov
adc
rolb
in
pop
into
and
and
outsb
in
hlt
jae
scas
mov
fldl
pop
popa
hlt
xor
xor
or
les
jge
mov
loopne
lcall
movzwl
sbb
mov
jle
movsb
pusha
jbe
or
xchg
fmuls
loop
mov
or
bound
pop
dec
rcrl
jle
xor
and
xchg
mov
or
das
xor
std
pop
xorb
jns
sub
mov
dec
call
and
fildll
fisttpll
cmp
mov
cli
popf
rcr
out
cltd
repz
cmp
lret
mov
push
and
mov
std
insl
rcll
aaa
add
mulb
mov
mov
fsubrp
sbb
push
mov
pop
push
lahf
mov
sub
xchg
popf
jb
mov
iret
ret
mov
add
lret
jo
xor
data16
adc
and
andl
inc
dec
cmp
xorl
or
inc
outsb
aam
sub
jb
rolb
mov
mov
mov
out
hlt
mov
xchg
into
shlb
inc
add
scas
push
push
js
xorb
in
flds
imul
mov
jl
jecxz
xchg
sbb
add
repz
out
pop
dec
das
cs
xchg
mov
add
jae
adc
and
repz
cltd
sbb
push
repz
xchg
mov
loop
daa
push
or
adc
jnp
fcompl
in
popa
and
sub
leave
int
xor
jp
inc
jbe
mov
filds
ret
and
lock
vphaddwq
jmp
and
sub
faddl
sbb
mov
or
xchg
je
jns
mov
data16
lret
push
cwtl
fnstcw
push
xchg
jmp
aam
imul
adc
and
enter
mov
mov
hlt
cwtl
cmp
cmp
inc
les
mov
sbb
loope
repz
xor
adc
push
dec
pop
shlb
sub
stc
gs
in
movsl
and
add
addr16
lahf
sub
ret
outsl
dec
and
cmc
into
jbe
inc
mov
movsl
rcl
mov
xchg
sbb
stos
xor
inc
jae
mov
xchg
push
xchg
push
sub
xchg
and
out
pushf
clc
shlb
xor
xchg
lods
add
aaa
jle
xchg
mov
enter
pusha
into
jle
cmp
sub
iret
pop
fistpl
inc
dec
sub
add
cmpsl
fs
jns
mov
scas
lods
xchg
stos
fnsave
int3
dec
out
sub
dec
lcall
lock
loope
and
lret
inc
arpl
push
mov
ficomps
push
dec
xor
push
cli
jp
lds
nop
mov
pusha
pop
cs
jno
cmp
xor
xchg
or
inc
jne
or
xor
wbinvd
cmp
inc
add
push
pop
in
lcall
lds
ret
fimuls
xor
jo
xlat
or
lds
push
mov
jb
sub
mov
jp
xor
inc
push
sub
mov
std
clc
sbb
pop
insl
fistps
test
sti
cmc
xchg
lahf
lahf
mov
outsb
adc
jecxz
pusha
or
inc
sarb
xor
inc
add
mov
push
cmp
cs
shl
cld
popf
fs
sti
mov
xor
fdivr
inc
pop
mov
pop
hlt
jb
sarl
andl
cmp
fdivrl
scas
mov
push
or
pop
or
pop
icebp
xor
mov
insl
nop
push
cmc
mov
sub
repnz
inc
cmpsb
rcrl
inc
dec
adc
cld
sahf
inc
inc
hlt
out
mov
push
das
stos
sahf
bound
fmull
pushf
cmpsb
movsl
cwtl
ffree
xchg
test
leave
xchg
push
aam
idivl
push
pop
xor
fbstp
rcl
cld
clc
out
popw
jmp
stc
mov
fnstsw
dec
popf
scas
into
vpsadbw
std
dec
push
mov
stc
nop
pusha
and
stos
xor
mov
xor
xlat
lret
in
adc
inc
adc
dec
in
jbe
mov
rcl
pusha
add
lcall
or
push
push
jl
bound
jp
jp
inc
shr
xchg
xor
inc
cmp
and
adc
test
xor
ds
sub
aad
cmpsb
mov
in
jmp
mov
sbb
lret
mov
subl
xchg
xor
out
scas
cmp
mov
stos
mov
std
mov
adc
pop
xor
lds
enter
or
jl
mov
cmp
inc
imul
adc
or
das
xor
add
jae
insb
int3
add
leave
stos
cltd
mov
adc
sbb
cmc
fistps
add
mov
cmc
push
sbb
rol
mov
int3
js
fnstenv
adc
pop
push
inc
push
lock
pop
mov
mov
loop
js
push
addr16
enter
pop
rorl
or
add
fwait
lahf
scas
adc
sahf
cmp
rolb
test
pop
or
scas
popa
push
rorl
and
hlt
pop
cli
and
lods
stos
mov
test
or
popf
sub
jmp
mov
push
test
call
xchg
jno
loopne
scas
cmp
mov
rcrb
lahf
mov
sub
and
pusha
mov
imul
inc
sub
or
xchg
es
xchg
lahf
fildl
pop
fildl
xor
push
ret
jne
in
ja
jno
and
push
mov
push
shrb
loop
or
xor
adc
add
dec
pop
sarl
out
mov
pop
xchg
dec
out
sub
mov
pop
sbb
nop
push
les
lret
xor
xchg
mov
push
pop
mov
ret
mov
and
lahf
nop
inc
out
sbb
pop
loopne
roll
mov
int3
cmp
pop
aas
movhps
rolb
lods
cli
aaa
xor
pop
out
mov
dec
mov
mov
fistpl
aad
outsl
mov
aas
fldt
push
push
jo
loopne
movsb
sbb
sbb
push
push
das
sub
pushf
repz
fdivp
mov
fs
sbb
cs
cmp
inc
push
and
sub
lds
fwait
jp
jae
adc
es
imul
sub
jge
cmpsl
pop
fucom
int
adc
cmp
jge
fs
jge
dec
push
ss
ret
mov
outsb
cld
jmp
sub
loopne
cmpsl
idivl
aaa
dec
or
andl
or
ds
pop
fwait
in
jns
fdivs
mov
adc
and
lcall
js
ret
mov
mov
lds
roll
or
out
pop
ss
mov
sbb
adc
out
mov
or
les
sub
arpl
enter
inc
ljmp
or
inc
dec
and
adc
mov
pop
in
js
mov
mov
pushf
cmc
aam
ds
cmpsl
mov
xor
outsb
loop
stos
pop
cmp
mov
jb
sahf
sbb
sbb
sub
jecxz
filds
push
dec
pop
mov
xor
jne
sub
push
pop
inc
sahf
popf
imul
enter
cli
aas
jmp
lcall
inc
dec
sub
nop
sub
xchg
fs
stos
pop
push
pushf
arpl
cwtl
repz
and
cmp
mov
push
push
and
bound
jnp
ret
push
dec
jle
pop
lret
repz
cmpsl
shlb
fnstsw
cmp
push
das
ficoml
bound
daa
shl
fstpt
es
mov
pop
sbb
shlb
xchg
ret
sub
aas
in
and
jb
xor
lds
mov
pop
dec
jecxz
inc
mov
gs
movsl
cmp
adc
rcrb
cmpl
lea
std
sbb
mov
nop
pop
sahf
in
inc
arpl
cmc
test
andb
lock
or
lods
popa
leave
push
push
lock
cltd
arpl
mov
mov
jge
mov
fidivs
in
and
lods
xor
and
movsb
roll
cmp
sbb
push
fisttps
lds
js
lret
in
lds
sub
popa
into
xor
add
imul
push
lods
mov
fldl
repz
out
jmp
push
sub
into
aad
js
and
arpl
sub
lock
int3
ret
add
gs
shll
lret
pop
jne
push
dec
pop
fbstp
clc
in
test
xor
cmp
jl
cmp
in
inc
fimull
int3
adc
fs
lcall
popa
in
imul
paddsw
insl
add
xchg
rorl
adc
rorb
mov
popf
das
mov
and
pop
repz
mov
ret
sahf
loopne
mov
add
dec
loope
loope
adc
inc
cs
fsubrs
mov
repnz
push
es
decl
sub
das
ds
dec
inc
mov
repnz
push
add
push
clc
pop
pusha
mov
cmpsl
jmp
pop
js
cmp
pop
and
shlb
dec
adc
add
nop
ret
jl
push
sub
xor
les
andl
outsb
fcmovnbe
lods
jge
dec
jbe
dec
inc
jno
push
inc
outsb
mov
dec
cmp
sub
pop
cmp
movsb
sarl
pop
loope
jg
dec
enter
lods
std
mov
fsubs
push
jae
push
add
xchg
mov
cs
mull
mov
inc
jb
popa
jmp
js
dec
dec
fbld
mov
xchg
inc
dec
mov
mov
bound
out
push
cmpsl
xchg
scas
es
inc
xchg
xchg
mov
test
in
fcompl
mov
add
push
ret
das
mov
les
pop
sub
sbb
push
jo
pop
notl
xchg
mov
fwait
sarb
push
adc
cmp
inc
inc
insb
and
int
test
mov
sahf
fucomip
sbb
jl
dec
aad
outsl
cmp
shll
adc
pop
jp
sub
pop
cmp
xor
pop
or
mov
jb
or
xchg
loopne
xor
andb
movsl
scas
mov
fwait
xor
fsubp
sbb
push
lods
add
mov
out
pop
call
fs
jae
das
shll
mulb
dec
enter
mov
outsl
mov
imul
sbb
push
movsb
mov
xor
xchg
jp
sbb
gs
jg
inc
mov
arpl
mov
cltd
pop
cmp
cmc
dec
loop
out
in
lret
fs
push
jb
push
mov
sahf
dec
movl
enter
outsl
rorl
sbb
adcb
cmpsb
mov
sarl
jge
jbe
faddl
int
mov
sti
aas
adc
cmp
mov
stos
adc
repz
mov
cmp
and
ficomps
scas
enter
sub
sbb
ljmp
in
jb
test
mov
add
and
loop
popa
enter
loopne
jle
sbb
xlat
mov
dec
cli
or
aad
in
test
int
xchg
mov
data16
lods
aas
repnz
lahf
addl
cwtl
mov
loop
jo
ja
mov
pop
and
push
mov
lods
mov
dec
scas
cltd
adc
lods
pop
cmp
sbb
test
inc
out
mov
insl
aaa
test
push
mov
pusha
sbb
pop
addb
les
clc
rorl
push
pop
inc
loop
and
jle
fwait
xor
xor
inc
cs
mov
xor
push
dec
int3
mov
imul
cmp
out
cmpsb
or
lds
das
mov
or
inc
pop
xor
add
xchg
clc
aas
ja
sub
call
sub
xlat
jmp
xlat
imul
lret
call
jle
out
sbb
pop
cmp
popf
add
push
fwait
mov
mov
adc
adc
sub
cmp
sub
sbb
out
loop
dec
out
rolb
jb
sbb
pop
inc
pop
gs
sti
les
fwait
repnz
adc
stos
inc
insl
stos
mov
pop
mov
or
shlb
push
sub
inc
push
aaa
ret
or
stc
xor
movsb
sbb
sub
push
sahf
stos
lea
push
cli
imul
mov
cmpsl
pop
or
mov
adc
add
sub
lret
adc
dec
mov
push
popa
jmp
aad
js
insl
mov
les
or
insl
pop
mov
cmp
and
rcr
roll
out
push
jne
mov
mov
fnstsw
push
mov
hlt
inc
jne
cmp
int
mov
mov
inc
test
lods
sbb
je
cmpb
roll
jo
jge
or
lock
mov
and
int3
stc
push
push
repnz
pop
jbe
pop
cli
fwait
pop
add
jne
sub
outsb
mov
dec
or
jmp
shlb
jno
dec
add
addb
mov
mov
xchg
xchg
lret
sbb
ljmp
inc
xchg
sbb
inc
les
pop
daa
ret
nop
push
mov
lods
gs
mov
lds
add
xchg
movb
jecxz
sub
jl
subb
cld
test
jecxz
xchg
sbb
ss
jo
and
mov
movsl
int3
leave
hlt
sbb
rcrb
loopne
and
stos
mov
sbb
dec
fcompl
hlt
icebp
push
cmp
push
popf
sbb
or
enter
add
out
sbb
das
sarb
leave
ss
stos
jbe
fxch
out
inc
push
pop
mov
sti
sbb
and
sbb
lcall
cmpsl
lret
jae
les
rclb
sub
jnp
sub
popa
enter
aaa
pop
push
jae
lods
push
inc
lock
dec
sbb
into
mov
repz
notb
hlt
leave
or
lret
loop
and
fs
cwtl
into
into
or
push
inc
lods
mov
in
inc
mov
sbb
clc
jge
push
jmp
sbb
call
push
add
and
add
cmp
das
out
mov
adc
ljmp
add
insl
dec
add
cwtl
test
out
orb
lcall
mov
xor
lds
scas
push
out
xchg
pop
into
mov
shlb
pusha
dec
cltd
popa
adc
out
test
xchg
cmp
pop
and
and
or
mov
and
jg
dec
dec
andb
push
cmpsb
jne
push
adc
jbe
mov
add
mov
dec
push
sahf
icebp
insl
sub
and
out
leave
cmp
and
shrb
ret
push
inc
push
adc
cld
daa
out
je
ret
xor
pop
push
add
xor
push
mov
mov
mov
aas
ja
test
cmove
in
add
cmpsb
dec
mov
lcall
xor
loope
sbb
sbb
sub
sub
popl
loop
sbb
out
loopne
shlb
fdivs
xor
inc
jge
in
incl
out
add
xchg
hlt
and
ret
mov
mov
outsb
paddusb
lcall
test
loope
jecxz
ret
leave
jbe
cmp
add
pop
inc
adc
pushl
jl
dec
repnz
jne
jmp
leave
or
outsl
and
inc
rcrl
inc
ja
and
cmp
dec
jno
mov
inc
mov
jecxz
les
test
mov
ret
sahf
inc
xchg
mull
sub
lods
loope
icebp
mov
cmp
cmp
push
sub
cli
repz
pop
cwtl
mov
out
xchg
mov
sub
sar
jle
pop
xchg
into
lea
fcompl
pop
notl
rcrb
jae
and
push
pop
mov
jp
jg
jge
sub
xchg
clc
jg
inc
inc
jae
rolb
xchg
sbb
aas
cmp
lock
mov
sbb
outsl
rcll
ljmp
xor
pop
inc
xchg
fstpl
xchg
sbbb
aam
push
iret
punpckhbw
bound
je
xchg
mov
addr16
jge
ja,pt
add
stos
pop
mov
rcrb
orb
push
or
sbb
test
cli
xchg
js
push
ss
and
or
fwait
insb
adc
inc
or
dec
cld
es
sbb
out
mov
loopne
xor
inc
cmp
mov
xchg
repz
pushf
insl
outsl
xor
stos
sub
mov
and
lahf
pop
and
dec
adc
lock
and
xor
imul
insb
xchg
and
sub
out
and
and
xor
and
lods
loopne
mov
mov
lock
test
movsb
and
pop
sbb
pop
mov
jmp
adc
pop
call
out
int
aaa
jg
jge
mov
icebp
outsb
jmp
and
stc
cli
xor
repz
sbb
mov
mov
or
pop
mov
movsl
insl
addb
loope
or
jbe
popl
mov
pop
cmp
adcb
nop
cwtl
stos
out
pop
inc
mov
sub
add
inc
dec
jle
sub
jae
fisubs
inc
or
test
dec
sbbl
ljmp
test
lret
bound
cmp
xor
popf
add
out
sti
fdiv
addr16
xchg
push
addr16
pop
mov
pop
mov
push
jne
test
mov
add
mov
adc
sub
cs
adc
and
add
bswap
and
stos
mov
inc
push
sahf
sub
jae
sahf
push
sbb
mov
sub
push
sahf
aam
mov
dec
mov
in
int
cli
les
xor
rclb
mov
cmp
sbb
xorl
ja
std
lods
pop
adc
fwait
dec
movsl
jle
cmp
xor
test
inc
cmp
jnp
fucomip
pop
push
mov
imul
push
outsb
call
push
divb
mov
bt
sub
mov
adc
lods
jge
fwait
movb
test
out
jno
in
rcrl
movsl
xlat
mov
fimuls
push
sub
push
rcr
adc
add
int3
or
in
adc
pop
xchg
inc
je
xor
arpl
sbb
in
push
inc
fisubrl
cwtl
mov
xor
pop
xchg
vpaddd
test
push
mov
repz
gs
addr16
fldcw
and
test
icebp
dec
push
jmp
fld
mov
xchg
inc
mov
aas
fistpl
lods
or
cwtl
mov
ret
dec
shr
push
dec
push
jno
mov
jmp
mov
daa
mov
cmpsb
xchg
jnp
orb
add
sub
push
stc
pop
xchg
outsb
cmovs
adc
inc
pop
and
mov
int3
jns
pop
out
f2xm1
mov
pop
shrl
dec
pop
sbb
mov
lret
inc
test
inc
mov
lods
inc
add
movsbl
pop
mov
aad
adc
sub
stc
sub
cs
insl
adc
pop
fstps
pop
subb
push
or
xchg
scas
fildl
sub
out
mov
lcall
cwtl
ds
add
sarl
sub
or
insl
add
inc
mov
dec
aaa
rolb
leave
and
int3
mulb
xchg
mov
pop
add
pop
dec
lcall
shrb
xlat
loope
mov
cmpsl
sub
pop
or
fiadds
shll
movsb
cld
in
icebp
iret
fistps
les
iret
into
fdivs
mov
xor
scas
xor
jae
mov
cmp
pop
cld
fwait
push
cmp
lret
push
imul
sti
lock
inc
jp
jo
or
xchg
jecxz
pop
sbb
es
imull
adc
testb
or
insb
addr16
aaa
sar
or
and
mov
cltd
and
mov
shrl
mov
mov
mov
test
cmp
xor
out
push
cmpsb
mov
cmpsl
popa
lret
mov
inc
mov
inc
jg
inc
ret
jg
pop
push
arpl
xor
jbe
insl
push
pop
or
sub
inc
xor
es
lods
push
mov
ds
stos
lds
jno
inc
enter
adc
xchg
movsl
cmp
pop
and
jecxz
shl
shl
mov
adc
fninit
aas
jno
xchg
sarl
clc
decl
stos
iret
lcall
inc
bound
andb
jns
sbb
rorb
insb
sub
mov
jne
dec
mov
or
shlb
cmp
or
repz
in
pop
test
dec
inc
sbb
rol
mov
sub
add
insb
add
and
mov
jp
xchg
lock
sub
push
add
xchg
test
imul
je
or
pushf
jg
sub
and
mov
or
repnz
imul
add
pop
enter
scas
jle
in
xor
adc
aam
je
imul
rclb
jecxz
clc
loop
pop
movsb
and
mov
rol
inc
mov
add
or
pop
pop
es
subl
fisubs
pop
in
lea
or
mov
mov
sub
andb
sarl
pop
popf
orl
jb
mov
jle
shr
push
sbb
popa
xchg
and
xchg
mov
mov
loop
push
imul
jnp
test
pop
sub
sub
xchg
mov
mov
jl
lods
dec
scas
ja
cmpl
sar
sarb
dec
aas
mov
fbld
sub
fcompl
imul
dec
fbld
push
je
mov
cmp
or
sub
pop
addr16
sub
xchg
rcl
lahf
test
sbbl
cmp
xchg
jo
testb
adc
insb
xchg
arpl
jg
dec
jecxz
push
push
orl
push
movsb
add
cmp
cmc
movsl
mov
sub
adc
sbb
sbb
sub
cmp
cmpsb
push
out
data16
inc
xor
jmp
ss
mov
fsubrs
arpl
adc
imul
mov
int3
cmp
movl
adc
fdivs
das
imul
jle
pop
cmpsb
push
xcrypt-ofb
cmpsl
das
cmpsl
outsl
div
xor
xor
mov
jle
mov
dec
xchg
dec
nop
cmp
xchg
inc
inc
adc
cmp
dec
mov
shl
stc
push
push
fwait
out
rcl
aaa
jp
or
mov
je,pt
push
es
jns
push
rcr
shr
add
call
xchg
xchg
fiaddl
push
mov
mov
sti
xchg
pop
add
adc
dec
add
insb
mov
jmp
ds
jl
out
dec
int3
ds
stos
mov
dec
insb
out
scas
or
or
fmuls
cmc
test
scas
adc
stos
sbb
and
jbe
aas
repnz
sbb
out
mov
popaw
sbb
pop
cmp
leave
cmp
pop
dec
or
lret
imul
xor
jno
sub
imul
sub
pushf
xorl
jle
jbe
cmpsb
lds
jb
das
sub
fsubr
adc
stos
push
xchg
lcall
aad
lock
test
mov
xor
and
fdivrl
arpl
negb
arpl
fbstp
ds
push
dec
and
xor
sbb
mov
jecxz
push
pop
and
in
mov
cmc
lcall
sub
sub
or
mov
fnsave
stc
es
mull
stc
loope
mov
std
cmp
sbb
xchg
adc
or
sub
lods
push
dec
in
xor
out
les
mov
int
dec
fwait
cwtl
clc
inc
andb
iret
fs
sahf
push
xchg
cmp
pop
sub
out
cmp
jbe
lret
ret
dec
sbb
mov
pop
out
mov
inc
pop
xchg
clc
sbb
xchg
cmp
adc
xchg
push
xchg
testb
shlb
lcall
cmp
leave
push
leave
pop
int3
stos
or
and
inc
mov
stos
fwait
push
mov
int3
jb
out
push
mov
lock
stc
xor
mov
and
sbb
sub
inc
sarb
popf
stos
add
dec
in
xor
ret
mov
rolb
in
test
add
jns
lds
push
and
xchg
sti
xchg
jo,pt
lock
dec
xor
mov
mov
xchg
scas
gs
pop
inc
movsb
scas
dec
inc
jnp
pop
sub
and
out
cmp
dec
mov
add
movsl
daa
adc
pop
lds
jp
pusha
xor
xchg
sti
or
popf
adc
rcll
adc
stc
dec
push
test
push
jecxz
das
push
jp
cmp
aam
add
add
mov
pop
nop
xchg
inc
xor
cmpsb
pop
fimuls
jl
sub
mov
or
or
ja
adcl
sub
mov
jecxz
adc
pop
mov
sahf
out
push
ficoms
jno
outsl
push
out
xor
out
sub
mov
jae
xor
in
arpl
idiv
cli
imul
adc
je
ficompl
out
sbb
incb
pop
cmp
cmp
hlt
adc
sbb
inc
sbb
pop
cmp
iret
pop
int
test
ds
push
pop
cmp
out
sbb
jmp
rcrl
and
cmpsl
out
mov
mov
aad
icebp
shll
pop
ret
mov
push
or
mov
inc
inc
add
in
test
cmp
mov
dec
andb
mov
loope
inc
sub
xor
or
xchg
stos
addr16
das
jne
fisubs
pop
addr16
jne
and
js
sbb
pop
and
pop
cld
push
out
in
xor
inc
mov
push
dec
mov
pop
adc
jo
nop
cmp
sbb
add
adc
stc
fmull
push
stc
xor
enter
popf
push
pop
mov
or
dec
inc
aaa
xchg
int3
mov
push
inc
cmpsl
cmpsb
or
lea
in
mov
jge
sub
xchg
pop
ja
sub
push
push
in
lea
int
stos
test
mov
outsb
and
idivl
push
sub
rcll
dec
jns
and
sub
adc
fdivrp
stc
sub
mov
sbb
jl
xchg
cmp
jmp
imul
out
fiadds
dec
mov
push
mov
push
mov
mov
jge
mov
mov
mov
outsb
test
xchg
push
or
adc
jmp
lock
jno
cmp
call
and
mov
aas
add
popf
das
mov
ds
fwait
sub
cmp
xchg
cli
jmp
inc
cmp
mov
les
or
std
rcll
sbb
add
jle
nop
subl
insb
std
scas
xor
mov
jne
xchg
into
pop
call
mov
sub
in
xchg
in
mov
cmpsb
cs
movsb
pop
sub
sub
mov
dec
fldt
es
into
sub
xchg
jns
out
pusha
mov
inc
insl
adc
ret
mov
cli
sti
mov
testl
inc
test
dec
enter
ja
mov
jecxz
cmp
mov
or
push
sbb
push
jno
out
mov
xchg
fisubs
cmpsl
test
xchg
stos
js
scas
cs
dec
dec
fbld
or
dec
push
mov
dec
cmp
scas
rcrl
lods
data16
mov
push
push
scas
testb
and
mov
notb
sbb
enter
or
adc
in
xlat
cmc
mov
add
xor
pop
fs
jmp
addb
daa
jle
or
xchg
cmpsl
out
cli
hlt
xchg
jp
and
mov
into
mov
scas
mov
mov
and
subb
stos
push
dec
push
jbe
gs
popa
scas
sarb
scas
sbb
jl
cmc
adc
aaa
fwait
cmp
mov
mov
divl
mov
call
jo
pop
inc
mov
jnp
ret
mov
push
bound
fsubp
jg
icebp
cmc
pop
imul
dec
mov
mov
repz
adc
jmpw
sub
xor
imul
dec
push
lret
mov
push
cmpsl
fildll
lret
inc
adc
cld
and
je
mov
jne
cltd
jo
mov
imul
les
sub
popa
ljmp
push
clc
rorl
adc
and
add
cmpsb
jp
leave
aam
lods
daa
mov
mov
jg
xchg
sub
or
push
adc
ja
push
iret
inc
jns
jle
andb
popa
xor
mov
aas
dec
fidivrs
dec
mov
or
rcrl
repz
pop
into
mov
leave
push
mov
xchg
inc
mov
pop
xchg
mov
jge
and
or
insl
shll
aad
jne
adc
fdivrs
cmp
shll
inc
in
push
neg
fdivl
cmpsl
aam
dec
and
popf
pop
mov
jp
dec
jecxz
xor
push
or
enter
fsts
sub
adc
repnz
pop
push
outsl
test
dec
test
jo
mov
sub
fs
pop
push
jl
sbb
out
aad
mov
jne
test
lods
mov
loopne
sub
inc
mov
stos
pop
adc
imul
add
or
loopne
xchg
add
ret
test
fldenv
add
daa
leave
jae
arpl
cmp
ret
dec
testb
mov
lods
sub
mov
mov
outsb
cmp
xor
addb
sub
jl
icebp
subb
subb
in
jb
cmp
dec
test
int3
jo
rorl
es
mov
sarb
in
adc
loope
xchg
and
jge
mov
data16
push
adc
shl
data16
jb
adc
mov
rolb
sub
cwtl
imul
xchg
jmp
jnp
insb
fsubs
cltd
push
mov
jmp
xlat
pop
dec
jnp
incb
ja
jl
jmp
aaa
pop
popf
xlat
or
add
es
mov
xchg
mov
lret
mov
inc
mov
add
cltd
jo
sub
xor
sbb
mov
xor
call
mov
pop
adc
fwait
push
mov
movsl
adc
xchg
inc
sti
and
push
mov
stc
xchg
xchg
dec
imul
adc
cmpsb
mov
into
inc
lods
pop
outsl
mov
sub
leave
in
dec
sbb
loop
and
in
sub
test
and
pop
fnstcw
xchg
pop
xor
jae
ljmp
fdivrs
insl
push
je
adc
bound
add
sbb
aad
cmpl
sbb
shrl
pop
sti
cmpsl
int3
pop
bnd
lret
cmp
js
cmp
jmp
insb
push
test
push
repnz
mov
dec
mov
int
sub
or
repnz
jno
xchg
fsts
out
loope
mov
xchg
sbb
mov
mov
or
mov
push
clc
lahf
out
mov
push
mov
shr
add
shl
mov
adc
cld
pop
imulb
add
fcmovb
out
daa
xor
shrl
sbb
cmp
fwait
in
scas
cltd
add
xor
shll
scas
cmp
adc
pop
jno
dec
sub
dec
call
lods
cs
scas
arpl
or
mov
mov
aas
out
xchg
hlt
jns
loop
fdivr
daa
xchg
or
dec
bound
ds
sub
push
loope
stc
inc
jmp
pop
xor
pop
sbb
dec
in
xchg
orl
and
pusha
cld
add
jp
push
inc
add
loope
push
icebp
movhps
dec
xchg
cmp
adc
sbb
insb
loop
mov
sbb
ret
insb
pop
scas
inc
sub
incl
jl
ror
popa
loopne
push
loopne,pn
pushf
call
arpl
mov
push
scas
lret
sahf
xchg
mov
mov
lock
bound
insb
in
das
jg
pop
pop
les
jle
adc
dec
mov
mov
lcall
prefetch
fdivrl
pop
ss
inc
adc
pop
add
loopne
jno
add
mov
out
mov
mov
pop
cmc
cmp
cs
mov
cmpsb
cs
mov
sahf
mov
rcr
xor
xchg
outsl
out
and
jno
out
add
fdivp
push
cli
cmp
dec
push
cwtl
pusha
or
test
mov
pop
dec
pop
roll
xchg
mov
adc
mov
push
adc
stos
cmp
iret
jno
sub
mov
adc
inc
add
add
ja
rcrl
dec
jno
xor
adc
test
xor
sahf
and
int
fbld
shlb
push
jnp
cmp
dec
push
scas
lahf
rcrl
and
imull
mov
int
mov
xor
shlb
sbbb
je
push
aad
insl
pop
bound
call
ljmp
cmpsl
stos
enter
fildll
or
pop
adc
pop
push
shll
xchg
inc
pop
cwtl
and
pop
mov
mov
sub
roll
mov
cwtl
pop
and
scas
int3
sbb
mov
testl
sub
jns
adc
mov
subl
cmp
das
popa
outsl
test
pop
mov
ljmp
sahf
xchg
fdivrs
mov
push
fcoml
sbb
movsl
pop
icebp
cmp
or
in
and
repnz
xchg
jle
aaa
loope
adc
mov
sti
stos
dec
mov
mov
xorb
mov
lret
les
lahf
mov
add
into
xor
ret
rolb
mov
mov
stc
inc
test
sbb
roll
orb
add
add
xor
call
hlt
sti
mov
loopne
cmp
lds
cld
inc
inc
pop
stos
mov
js
xor
rorl
mov
jg
loop
test
cwtl
aad
outsb
xchg
faddp
and
sbb
out
xor
adc
jnp
insl
xchg
push
sub
scas
clc
push
jecxz
pop
mov
jp
or
cmp
movsb
adc
xchg
fistl
mov
outsb
shlb
xchg
jns
add
vpshlq
xor
subb
mov
xor
test
mov
add
ja
rclb
aaa
out
dec
enter
in
data16
and
inc
xor
mov
cmp
add
xchg
daa
fisubrs
imul
cmp
dec
push
bound
adc
sbb
fdivrl
push
push
push
mov
fisttps
hlt
lahf
mov
push
adc
xorb
ja
push
aas
pop
addb
jge
inc
je
mov
mov
testl
dec
jne
or
std
pop
cmpsb
lea
mov
and
rcrl
mov
push
stc
push
nop
pushf
shll
cmp
test
int
daa
test
inc
push
fbld
pop
mov
inc
jle
cmp
test
dec
and
dec
xchg
inc
sti
xor
or
jbe
lcall
sub
sahf
mov
mov
bound
jae
xchg
adc
push
dec
test
data16
fwait
enter
sbb
pop
jb
xchg
jge
int
mov
scas
cmc
das
sbb
cli
jp
call
in
ds
jns
sbb
dec
les
pop
ljmp
sub
cld
int3
fadd
inc
hlt
fiaddl
das
ljmp
ljmp
loop
dec
jecxz
pop
adc
inc
ret
push
jp
and
pop
inc
jecxz
fsubs
mov
cmpsb
push
lret
mov
rcll
pop
add
pop
imul
inc
mov
popf
mov
xchg
inc
add
jns
cld
add
ficoml
ror
pop
pop
push
sub
inc
cmp
sbb
movsb
push
dec
mov
sbb
cld
push
cmpsb
into
fsub
fists
pushl
pop
mov
movsl
xorb
jmp
stos
lds
cli
lcall
lcall
popf
cmp
out
insl
out
push
pop
sub
or
clc
hlt
or
pop
mov
fildl
mov
mov
outsb
arpl
xchg
or
aam
sahf
jno
mov
fwait
mov
clc
stos
cmpsb
cmc
inc
int3
enter
loope
aam
jmp
lret
mov
inc
into
push
jae
pushf
mov
negl
or
xchg
mov
loop
mov
pop
add
fstpt
in
shufps
mov
nop
stos
and
pop
ret
pusha
sbb
fcoml
mov
pusha
mov
or
inc
push
ss
inc
jae
arpl
push
mov
and
pop
cltd
sbb
sahf
mov
ret
pop
mov
mov
push
dec
rcrl
jne,pt
fucomp
cmp
xchg
call
lret
mov
inc
roll
cs
pop
inc
loopne
aad
addl
call
mov
cmp
mull
or
inc
das
xor
inc
adc
inc
xchg
in
xchg
not
shll
dec
out
popf
pop
push
adcl
push
movsb
adc
cmpsl
movsl
fldenv
push
mov
sub
clc
inc
cs
jg
pop
es
mov
dec
xchg
or
jmp
shlb
insb
out
mov
or
sub
notl
lea
jp
fcompl
inc
out
sbb
repnz
adc
add
icebp
jo
fisubs
inc
mov
shl
push
mov
jg
pop
pusha
push
dec
out
xor
test
cmp
mov
rorb
push
or
add
push
mov
xor
or
icebp
cmp
mov
mov
into
nop
ficompl
movsl
jmpw
pop
cmp
jns
inc
sbb
sub
stos
ret
add
movsb
cmpsb
shlb
pop
icebp
fbld
dec
addl
ljmp
in
sti
arpl
push
jmp
adc
arpl
daa
jle
add
mov
in
sarb
out
data16
ss
nop
push
mov
jg
in
lods
in
push
mov
dec
sub
scas
call
dec
jge
ja
and
fs
repnz
xchg
push
ror
gs
jb
or
bound
adc
into
lds
jge
sbbl
clc
sbb
sbb
mov
dec
xlat
cmp
pop
pop
test
leave
sub
stos
inc
mov
cmpsl
scas
pusha
out
or
cmp
pop
nop
cmc
mov
hlt
inc
sahf
das
cmp
lcall
mov
and
imul
aaa
lahf
rcl
aaa
lahf
and
pop
pop
cmpsl
hlt
dec
inc
jbe
arpl
push
lret
mov
outsb
dec
mov
pop
inc
or
push
jbe
testb
fcompp
pop
xchg
fs
sub
sti
mov
leave
mov
lods
loop
js
mov
dec
inc
mov
aaa
and
mov
aas
jle
pushf
mov
adc
test
pop
scas
outsb
mul
add
jo
cmp
fnstsw
pop
mov
fs
test
movd
lea
pop
addr16
or
in
push
xor
jmp
pop
mov
mov
and
jb
adc
push
mov
mov
aas
and
sub
lods
std
lods
scas
fisttps
push
cld
mov
jl
jle
pop
roll
inc
arpl
sarb
xchg
pop
fisttps
test
pop
ret
rorb
cltd
mov
lcall
aaa
pop
shll
lahf
inc
push
stc
add
and
push
popf
rclb
pop
xor
sub
das
push
popa
adc
push
fdiv
lock
movsl
mov
or
out
dec
dec
add
mov
orb
lret
leave
inc
stos
add
add
fs
cmpsb
mov
call
xor
test
fiaddl
fwait
ljmp
repnz
or
xchg
outsl
insl
xor
shlb
add
and
clc
in
add
fldt
in
aas
dec
packssdw
jo
ds
mov
shlb
decb
and
jno
adc
out
rcrb
jns
or
pop
lret
inc
pop
dec
les
outsl
fdiv
out
out
pop
dec
pusha
fdivr
cs
pop
mov
dec
jge
mov
cmp
pushf
and
movsb
sub
pop
aas
and
dec
fildl
nop
add
aam
pop
dec
pop
lods
ss
add
sub
hlt
mov
repnz
or
out
xlat
adc
lods
lahf
repnz
nop
std
pusha
sbb
inc
mov
mov
mov
data16
adc
jne
movsb
or
inc
bound
sbb
arpl
and
sub
add
mov
nop
dec
mov
adc
inc
comiss
lds
lahf
pop
rolb
test
gs
mov
aad
fwait
jl
mov
mov
imul
arpl
jo
iret
push
mov
cmpsb
pop
test
test
mov
les
in
cltd
mov
or
or
add
ret
cmp
jb
call
sarb
popf
inc
jnp
sub
cmp
jns
enter
xrstor
add
dec
and
xchg
mov
xor
cmp
outsb
cmc
sub
inc
xchg
jae
call
cmp
pop
xlat
es
or
in
int
outsl
or
out
nop
ja
negl
aad
les
or
mov
rolb
rolb
add
cmpsb
sbb
je
into
flds
popa
jo
movsl
sub
int
nop
xchg
out
sbb
jecxz
cltd
mov
stos
fs
add
stos
cmpsb
loop
jmp
popf
pop
sub
mov
aam
sub
and
insb
mov
or
mov
cmpsb
testb
and
in
push
sub
xlat
xlat
sub
divb
pop
cmp
push
cmp
and
inc
roll
xor
mov
dec
out
pop
cld
pop
ret
mov
jne
lret
xlat
fsubrl
xchg
dec
mov
cmp
call
in
int3
or
sub
push
je
ror
lock
cmc
xor
clc
sti
jnp
mov
fs
stos
pop
xchg
out
int3
jne
fidivl
cltd
push
ficoms
mov
adc
push
clc
mov
xchg
xchg
mov
push
push
push
push
push
mov
sbbb
mov
stc
and
fidivrl
imul
js
cld
inc
fsubl
jl
push
stos
pop
out
sub
shll
add
sbb
fs
test
out
xor
add
or
test
cmp
mov
andb
sbb
jnp
inc
cmp
cmpsl
push
cmp
daa
shll
loope
sbb
ja
test
daa
sbb
fisttpll
clc
inc
mov
and
decl
clc
mov
pushl
mov
adc
movsl
test
and
push
sub
cwtl
jle
or
cmp
push
divb
mov
nop
sub
loope
cmpsl
jle
adc
imul
push
in
pusha
inc
pop
lahf
movsb
xor
out
xchg
inc
int
loop
xlat
ret
jmp
adc
cmp
bound
jmp
fucomi
test
js
pop
fstps
movsb
push
mov
or
pop
fnstenv
dec
and
ja
mov
bnd
lcall
ss
mov
xchg
ljmp
sub
scas
mov
loope
sti
aas
jecxz
andl
neg
jns
out
mov
push
add
push
dec
mov
pop
outsb
push
fldcw
mov
scas
js
xchg
mov
adc
out
dec
ja
out
fdivs
pop
jmp
rorb
or
adc
adc
sbb
movsl
scas
mov
xchg
lcall
adc
adc
jne
clc
aad
dec
out
cmp
pop
pop
movsb
pop
outsl
pop
aas
add
jae
mov
inc
jnp
movsb
pop
pop
sub
xchg
xchg
add
mov
mov
pop
rolb
pop
xor
fcompl
mov
dec
jns
incb
pop
cmp
dec
sbbb
add
mov
push
pop
mov
nop
xchg
sbb
leave
nop
jb
outsl
stc
xor
or
pop
stos
dec
cmp
cltd
and
scas
divb
addr16
in
cmp
imul
dec
pop
or
adc
mov
jbe
sub
inc
sbbl
lea
pop
sbb
lds
roll
fnsave
xor
imul
cmp
fsubs
xlat
jns
add
push
pop
fiaddl
push
pop
popf
fwait
out
adc
rep
or
ret
stc
test
shl
out
pushf
lret
mov
adc
xchg
xlat
and
data16
frstor
sbb
jmp
loopne
aam
dec
fs
fs
imul
lret
ficoms
sub
leave
sbb
divb
in
into
jo
loope
lahf
hlt
push
dec
inc
jns
push
or
add
pop
or
mov
xor
inc
pop
scas
mov
jmp
jle
sbb
jne
push
mov
insb
jb
pop
loopne
push
inc
jge
sahf
mov
mov
lcall
mov
sub
sbb
stos
jb
xchg
push
iret
sub
std
mov
out
and
jo
stos
pop
insb
lods
dec
xor
addr16
je
sbbl
lods
or
or
mov
fsubrl
aaa
mov
jle
popa
dec
pop
pop
icebp
mov
int3
adc
gs
gs
insl
dec
popa
andnps
out
mov
fiadds
lahf
mov
adc
jmp
jae
push
sbb
mov
dec
pop
addr16
nop
js
in
ljmp
cs
scas
add
xchg
hlt
mov
lds
dec
or
mov
bound
or
fdivs
mov
daa
mov
movsb
and
xchg
data16
lock
mov
int
out
fldcw
dec
dec
adc
in
cmpsb
pmuludq
inc
into
mov
xchg
mov
lods
xchg
call
push
popa
movsb
fucomip
or
shl
push
sub
dec
pop
xor
nop
inc
adc
sbb
gs
mov
sahf
push
xchg
ror
sahf
push
shll
dec
lock
jnp
and
dec
out
ljmp
inc
das
or
ds
jmp
in
lahf
dec
in
jo
inc
push
or
push
shl
cli
inc
dec
sbb
push
das
add
xor
mov
iret
dec
das
xor
jmp
arpl
dec
push
adc
cmp
adc
pop
and
jb
pop
in
test
fldt
stos
mov
aas
fsubl
xchg
cmpb
add
lds
rolb
pop
adc
mov
or
lds
in
dec
inc
aad
cmp
push
and
jns
ljmp
mov
add
xor
fcmovu
sbb
mov
mov
mov
push
sarl
xor
push
mov
inc
add
loop
sub
in
imul
adc
and
sbb
cmp
or
stos
sub
inc
push
cmpsl
loopne
icebp
sub
mov
xchg
jbe
popl
scas
xor
insb
push
shl
lds
fildll
insb
jle
loop
imulb
sbb
jo
jnp
or
mov
xchg
dec
mov
xchg
sarb
and
movsl
das
add
ss
push
push
mov
lcall
and
and
inc
adc
xor
repz
push
xchg
inc
xor
movsb
mov
dec
clc
or
lods
and
loopne
mov
movsb
jnp
pop
dec
popl
shrl
push
cmpsb
adc
sti
push
subl
in
xchg
in
push
hlt
push
repnz
mov
imul
sti
fcmovb
pop
daa
cs
pushf
fisubrs
ljmp
subl
xchg
push
and
add
mov
sarb
out
sbb
popf
call
push
xchg
test
aam
jb
addr16
mov
cmp
bound
mov
jl
jmp
and
pop
shrb
jle
xor
pop
and
jne
jecxz
cmovp
cmp
mov
jecxz
push
pop
xchg
xchg
pop
xchg
adc
cmp
iret
xchg
mov
aaa
mov
daa
push
int
pop
test
pop
aaa
sbbl
cmp
test
fdivs
stc
mov
jmp
outsb
sarl
int
jne
mov
cmc
add
lret
out
ljmp
jp
shl
mull
cmp
mov
mov
arpl
or
cli
mov
fistps
fidivl
xor
fstpl
bound
stc
jle
xchg
mov
xor
or
lcall
add
icebp
test
int
cmp
push
fmul
in
stc
pop
fcomp
push
push
push
pop
aam
ffreep
adc
aaa
cmp
insb
sahf
rol
push
and
push
xchg
repnz
mov
adc
add
gs
jg
cmpsb
cmpsl
jge
cs
or
jno
mov
lret
mov
andl
push
fiaddl
mov
or
mov
mov
shl
cmpsb
adc
scas
jmp
call
mov
arpl
adc
adc
mov
clc
jle
test
add
jb
cmp
js
sbb
aam
iret
mov
inc
dec
xchg
cmc
insb
test
jmp
or
outsl
xchg
mov
adc
out
dec
bound
lret
adc
cs
pushf
push
int
insl
int
inc
ja
push
dec
subl
sub
xchg
xchg
add
mov
fistpll
add
bound
xchg
popl
mov
imul
jmp
inc
iret
dec
enter
dec
mov
fldenv
faddp
mov
cmp
aas
cwtl
pop
add
xlat
daa
pop
mov
arpl
lods
xchg
mov
loope
lea
cmc
pop
mov
lods
cltd
or
push
jmp
shlb
in
pop
insb
pushf
and
ds
pop
filds
jge
out
dec
xchg
pushf
xor
inc
sarb
call
cmc
sahf
ds
out
fwait
jg
pop
shlb
or
mov
xor
fildl
es
inc
add
push
insb
out
aam
or
xchg
popa
rcr
shll
xchg
xor
popf
or
mov
push
push
gs
scas
cmp
mov
jmp
mov
cltd
xchg
loop
leave
lret
push
adc
xchg
mov
jge
nop
xchg
icebp
cltd
scas
adc
dec
pusha
pop
add
push
sbb
mov
dec
mov
push
mov
push
pop
lret
xchg
arpl
ljmp
stos
lds
enter
add
mov
movsb
mov
pop
jl
sbb
fildl
faddl
push
mov
leave
mov
loope
shl
pop
push
cli
stos
popf
shll
and
stos
mov
push
xor
inc
push
pop
ss
in
cmp
loope
pusha
fldt
js
adc
icebp
or
inc
les
mov
stos
shlb
popa
in
aam
mov
cld
mov
jmp
mov
sub
add
sbb
push
mov
outsb
fadd
shl
out
pop
sbb
cli
lcall
subb
push
adc
xor
je
sub
push
add
pusha
dec
adc
es
jp
jnp
mov
mov
pop
pop
jb
sahf
mov
adc
pop
cwtl
loop
mov
mov
inc
in
sub
sbb
testl
pop
cltd
inc
dec
xchg
sti
push
add
jo
cmpsl
in
push
push
loope
imulb
lcall
or
cli
push
in
push
pop
push
inc
loope
cmc
lds
dec
sub
dec
dec
jbe
les
cmp
and
enter
sbb
pop
enter
xor
jge
je
xchg
mov
loope
lods
stos
aam
add
xlat
ljmp
xor
and
insb
cmp
xchg
dec
push
and
loop
mov
dec
jb
pop
mov
lahf
cmp
jnp
xchg
popa
inc
loope
inc
ret
pop
stos
pushf
addr16
stc
push
nop
bound
mov
mov
fnsave
aaa
clc
ljmp
jmp
lods
mov
or
jne
repz
mov
and
outsl
and
cmp
add
add
mov
cli
mov
add
pushf
dec
adc
ss
and
ljmp
xchg
mov
add
imul
or
out
shlb
and
jp
les
hlt
subl
in
jle
ds
jmp
sbb
dec
mov
ja
dec
andb
mov
rcr
jp
mov
push
ds
movsb
pushf
dec
mov
xor
ss
arpl
cmp
mov
pushw
arpl
mov
aas
mov
adc
mov
jle
jnp
pop
sub
and
mov
xchg
add
dec
outsl
cmc
js
cltd
mov
xchg
fidivs
mov
jge
mov
or
pop
or
cli
mov
cmp
pop
out
mov
lods
rcll
mov
orb
cmp
dec
dec
negl
imull
jecxz
out
imul
das
gs
into
sub
cmp
push
jns
cwtl
outsb
fists
aaa
xchg
mov
mov
bound
scas
xor
push
pop
inc
xor
adc
xor
andl
or
xchg
pop
sahf
adc
add
les
adc
mov
movsl
movsb
sub
push
fsts
je
in
add
arpl
pusha
sub
icebp
inc
mov
push
testl
loop
push
xchg
test
hlt
movsl
sub
jno
mov
daa
adc
mov
movl
ret
into
ret
fwait
mov
xor
hlt
ret
cmpsb
enter
stc
push
xor
mov
or
in
shr
fnstenv
ret
lret
out
ljmp
jp
ljmp
or
cmc
int
jo
cli
popf
adc
add
fistl
out
jb
cli
mov
mov
jnp
cmp
cmp
imul
fsubr
xor
pushf
popf
mov
fiaddl
xlat
inc
cltd
ret
adc
shll
mov
xchg
dec
cmp
cs
out
push
data16
mov
ret
pop
fnsave
inc
cwtl
pop
add
repz
mov
pop
int3
and
arpl
sub
add
lret
dec
cmp
adc
stos
inc
dec
or
mov
sub
jnp
out
xchg
imul
mov
mov
jb
cmp
xchg
and
push
cmp
adc
movsl
and
ja
add
pop
or
cmp
dec
sbb
insl
pop
inc
push
jo
jmp
push
cmp
ret
and
pushf
sub
mov
lcall
addr16
das
inc
imul
mov
sub
lds
cs
ds
mov
into
mov
xchg
shrb
lock
out
xchg
xor
divl
adc
pusha
test
setb
pop
mov
test
mov
out
test
testl
int
and
out
mov
insb
push
dec
dec
mov
sbb
xchg
das
push
adc
insl
das
and
addr16
mov
popf
mov
sub
js
add
xchg
cmp
add
cwtl
aad
xchg
mov
lret
cmp
addr16
mov
pop
lret
shlb
cmpsl
jns
adc
sbb
xchg
or
pushf
lahf
call
add
and
sbb
sub
sahf
mov
mov
push
sub
push
dec
dec
push
test
cmp
cltd
jp
jno
lods
pop
fstp
test
lret
bnd
call
shrl
mov
sbb
in
inc
lea
je
ret
pusha
call
and
lret
inc
nop
dec
mov
fiaddl
out
jle
add
cmp
sub
insb
mov
xchg
or
in
stos
xor
push
pusha
sbb
and
mov
add
cltd
fcoms
dec
jb
lea
fs
iret
out
sbb
in
and
add
ret
mov
scas
test
pop
xchg
repnz
mov
push
push
sub
bswap
xor
out
repnz
sbb
mov
pusha
and
divb
inc
ds
cmp
ljmp
icebp
or
gs
hlt
cmp
stc
hlt
sub
xor
cmpsl
popf
add
mov
or
fimuls
std
rcrl
ds
fwait
push
cli
dec
mov
ficomps
xchg
pop
mov
ds
add
or
int3
sbb
or
jae
testb
icebp
dec
aad
push
sbb
add
xchg
xchg
mov
pop
leave
mov
sub
push
cmp
mov
jne
jbe
xor
push
repnz
pop
popf
clc
or
jge
mov
jg
or
sahf
push
push
push
outsl
and
jb
or
fdiv
and
cmpsb
cmpsb
test
jecxz
ret
hlt
mov
lock
pop
shrl
xchg
jno
jae
and
pop
and
mov
cmp
jle
ret
xor
repz
out
test
fcompl
and
sub
inc
mov
mov
dec
jno
xor
js
pop
bound
loopne
lcall
jle
xchg
push
push
and
je
test
xchg
test
mov
fbld
stos
sbb
inc
push
popf
jne
fwait
cmp
xlat
push
testb
cmc
or
cmpsl
sub
and
mov
pop
ret
das
movsb
xor
inc
adc
orb
pop
pop
pusha
sbb
xor
in
loope
mov
sarb
jno
add
in
adc
jae
or
lds
sub
and
jg
sbb
loop
adc
pop
shrb
stos
push
mov
and
adc
mov
out
nop
mov
loopne
sbb
jg
push
call
add
xchg
imul
cmp
push
xchg
mov
scas
mov
cld
and
sbb
daa
fwait
or
data16
or
and
scas
xchg
sbb
leave
test
imul
mov
inc
aad
dec
push
out
jl
pop
jnp
ficomps
stos
sub
cmp
mov
outsb
sub
loop
in
or
call
sbb
mov
repnz
test
xor
cld
mov
pop
negb
movsl
and
push
mov
adc
inc
dec
faddp
sti
adc
stos
test
cmc
adc
inc
pcmpgtw
jns
enter
fisubs
stc
mov
xor
and
lret
insb
and
sub
dec
lcall
cmovb
inc
push
mov
fimuls
mov
shll
dec
dec
adc
mov
mov
add
pop
pop
cmpsl
cmpsl
or
pushf
xchg
adc
inc
imul
aaa
or
addr16
shll
mov
adc
mov
mov
div
scas
movsl
dec
mov
add
mov
jle
lds
push
push
pop
sub
or
mov
les
xor
mov
daa
xlat
cmp
adc
jnp
imul
mov
aam
outsb
jl
xchg
adc
inc
mov
lret
fwait
mov
dec
lea
ljmp
and
jp
mov
or
sub
dec
das
push
xorb
jbe
aad
xchg
or
mov
ljmp
subl
jns
xchg
addl
stos
lock
push
xchg
in
pop
aam
mov
dec
push
adc
insl
fcompl
inc
fldl
int
sub
repnz
dec
xchg
idivb
dec
call
ja
test
aaa
adc
outsl
imul
mov
into
fwait
jno
and
frstor
or
pop
adc
aaa
movsl
jp
ret
data16
xchg
inc
shr
inc
outsb
hlt
jns
in
cs
sbb
fwait
das
iret
dec
popf
shr
addb
call
out
xchg
cmp
xor
mov
pop
outsl
add
mov
cmp
cmp
jno
jp
fcoms
xchg
cwtl
test
loope
dec
dec
mov
test
sbb
ret
lret
push
sbb
sbb
dec
mov
repz
push
mov
mov
rorl
imul
cld
jl
xchg
mov
ljmp
pop
mov
or
dec
push
and
and
mov
jo
ljmp
arpl
fistl
ss
mov
les
lcall
jb
add
cli
adc
pop
shrl
xchg
and
lahf
shlb
mov
gs
push
imul
ss
sbb
repz
imul
or
adc
imul
into
iret
cmpsb
popa
jmp
pop
adc
mov
movsl
push
out
in
or
mov
jl
jo
push
jo
cwtl
pop
mov
mov
cmpsb
adc
aas
and
dec
adc
popf
ds
cs
fcomip
sahf
sahf
lea
or
imul
xor
inc
mov
fisttpl
ja
sarb
lods
mov
imul
int3
xchg
dec
std
rcl
xor
test
pushf
js
and
mov
clc
push
fstl
jo
ret
pop
mov
and
adc
xchg
fdiv
adc
jb
pop
ja
es
dec
inc
cmp
out
mov
cs
mov
push
and
scas
scas
cwtl
pop
pop
mov
mov
mov
adc
mov
xor
mov
dec
xchg
push
mov
mov
mov
push
jp
insl
loop
adc
decb
popa
and
popa
mov
pop
scas
outsb
push
rorl
out
mov
inc
lahf
fucomp
fisubl
pop
clc
and
ljmp
pop
outsl
test
adc
xor
xlat
popa
in
pop
test
mov
push
dec
mov
inc
cmp
pop
in
inc
push
cs
xor
push
adc
daa
pop
stos
outsb
lock
jae
dec
jp
xchg
icebp
cs
pop
jg
gs
xor
pop
cmpsb
or
icebp
sub
cli
ja
xchg
inc
jge
fiaddl
mov
xchg
sbb
xor
pop
jb
xor
cmpsl
push
lret
and
mov
iret
push
rorl
lods
cwtl
cmp
insb
xchg
xor
push
adc
aam
inc
stc
sbb
inc
adc
loop
aas
test
sub
inc
or
push
sbb
sbb
adc
push
xchg
je
js
popa
inc
daa
in
xor
jne
mov
aad
xor
push
adc
mov
nop
sti
sbbb
in
lahf
mov
scas
shrb
xchg
jmp
jmp
jne
adc
ss
cmp
hlt
mov
or
std
jg
leave
mov
push
cwtl
addl
nop
outsb
sar
cld
in
mov
aaa
sbb
xor
movsl
outsl
clc
sbb
mov
in
cltd
mov
jae
cmp
pusha
gs
cs
adc
clc
or
sub
xor
xor
jns
test
xchg
pop
mov
pop
loope
xchg
movsl
lret
dec
or
pop
xor
inc
pop
adc
mov
mov
xchg
mov
add
les
pop
add
out
xlat
leave
inc
cmp
sub
int
and
jbe
pushf
repz
jne
cmp
jne
jb
lcall
jb
dec
xor
dec
cmp
in
in
jno
mov
pop
mov
jg
xor
cmc
lret
insl
jae
scas
lret
fisubrs
xchg
pop
divb
inc
clc
mov
mov
push
int
xchg
jecxz
out
insb
or
jp
jmp
adc
loop
cwtl
xor
and
xchg
out
leave
cbtw
adc
push
inc
xlat
sbb
insb
in
jl
mov
mov
call
jge
cli
mov
rorl
push
mov
aad
neg
xor
in
mov
test
sub
xchg
das
aad
or
mov
fsts
sbb
ret
outsb
cs
ljmp
jp
rolb
imul
jno
pop
jnp
subb
xchg
cli
dec
jle
inc
jne
sahf
pop
aad
out
pusha
mull
jp
aaa
fisubrs
mov
xchg
iret
imul
rcll
jbe
in
sub
push
in
enter
adc
lock
leave
mov
pusha
add
cld
sub
adc
dec
inc
push
jns
pop
negl
xor
in
push
cmpsl
push
jae
xor
pop
pop
jb
imul
push
and
hlt
in
cwtl
stos
xor
jbe
adc
out
insb
jmp
xchg
icebp
lods
dec
or
push
stos
fucom
pop
push
in
sbb
pop
outsl
mov
fldcw
mov
into
stos
cli
and
in
stos
loope
lea
pop
pop
lahf
or
ja
mov
dec
lret
lcall
imul
imul
mov
inc
and
cli
dec
int3
push
imul
and
mov
scas
jne
int3
std
int
pop
sub
lds
add
mov
lds
jmp
xchg
and
ret
out
jecxz
jmp
push
divl
ficoml
das
mov
mov
ret
iret
mov
data16
inc
movlps
in
mov
jo
push
mov
pusha
pushf
ljmp
fnstenv
xor
loop
test
add
inc
fisubl
jmp
orl
fnstsw
mov
and
imul
jne
stc
stc
es
cli
movsl
or
in
pop
mov
pop
orb
shll
pop
mov
xor
lcall
test
mov
sbb
ljmp
sti
fiadds
fs
imul
jp
sbb
xor
icebp
dec
jmp
push
stos
adc
push
mov
repz
sbb
lock
test
pop
loop
push
aaa
jge
cmp
mov
aaa
scas
jo
xchg
nop
cli
cmpsl
or
xor
dec
std
fldt
fimull
dec
leave
sbb
or
scas
cmp
aaa
push
es
test
subl
push
adc
or
xchg
aam
fcompl
xor
adc
mov
shll
inc
aad
jo
xor
mov
inc
sub
daa
loop
data16
dec
and
mov
mov
add
inc
test
xchg
pop
pop
leave
add
sahf
push
enter
inc
popf
mov
sbb
dec
push
je
sarb
aam
imul
out
frstor
pop
xchg
push
jno
adc
ret
aaa
mov
dec
xchg
jne
sbb
sub
ljmp
pop
popa
cmp
jge
sub
push
nopl
adc
leave
cmp
mov
xchg
stc
pop
adc
imul
push
das
pop
add
or
add
cmp
loopne
adc
push
dec
push
jge
cmp
inc
pop
xchg
mov
jns
adcl
imul
cmpl
dec
mov
ret
xor
jne
lcall
ret
inc
aad
pushf
push
in
push
and
xchg
nop
pop
cmp
pop
imul
pop
cmp
imull
mov
dec
mov
mov
pop
andb
cmp
xor
int3
mov
xor
jle
cmp
out
xchg
cmc
jnp
int3
push
imul
xchg
mov
sub
mov
mov
rol
mov
div
sbb
fidivs
add
mov
leave
shlb
aad
inc
pushf
sub
sti
sub
fistps
xor
stos
mov
pop
movsb
das
sub
ljmp
jp
mov
sub
fbld
nop
negl
call
fstl
out
mov
mov
sub
iret
push
sbb
out
adc
dec
int
fwait
and
mov
hlt
adc
cltd
push
fidivrl
lock
sub
sub
or
or
sub
loop
xchg
roll
in
aaa
vucomisd
bound
xchg
into
in
lahf
mov
xchg
or
in
cmpsb
fwait
pop
addr16
dec
jnp
movsb
sbb
inc
aad
pop
mov
sarl
ja
ror
mov
jp
aam
faddl
mov
cmp
in
outsl
lret
ret
sub
sub
dec
and
adc
pop
dec
jecxz
pop
dec
and
mov
les
jae
test
lcall
xchg
mov
mov
lea
xchg
xchg
pop
loop
add
pop
add
sbb
fidivl
sub
xor
hlt
dec
and
xchg
aaa
mov
daa
jno
stc
popa
jo
push
pop
daa
test
jo
cs
push
loopne
push
fcoml
and
movsl
add
push
jmp
sar
repz
orl
std
fwait
xor
cmp
gs
inc
adc
adc
or
push
mov
mov
mov
pusha
popf
aad
push
cs
mov
push
cli
xchg
ficoml
mov
in
xchg
sarb
pop
push
loope
adc
cmpsl
push
adcb
sbb
ja
jo
xchg
mov
mulb
or
add
ret
xor
arpl
movsl
or
mov
clts
jno
cmp
js
jnp
pop
mov
lret
aaa
push
sti
mov
aaa
es
xchg
dec
mov
fwait
loopne
imul
fcompl
shlb
fdivs
sahf
mov
sbb
jg
push
pop
cmp
jmp
sahf
arpl
pushf
sbb
pop
inc
sub
leave
push
or
ret
or
sub
stc
xor
cmp
pop
out
push
repnz
xlat
inc
add
cltd
and
push
push
call
fcomps
sub
out
inc
mov
hlt
lret
or
icebp
enter
dec
outsb
xor
mov
and
popf
ds
or
loopne
xchg
into
lods
sarb
fisttpll
dec
mov
ret
movsb
mov
out
cltd
fisubl
sub
lods
aaa
push
cmp
pop
push
xor
mov
es
cwtl
insl
cmp
into
jb
int
push
inc
jne
push
cmp
push
stos
aaa
pusha
in
jne
push
popf
sahf
sbb
mov
aad
fdivrl
inc
cmpsl
mov
pop
push
push
ds
std
lock
dec
dec
in
imul
xchg
inc
push
mov
ds
and
pop
shrl
movsb
or
lods
pop
or
push
roll
movsb
push
into
into
jae
in
mov
outsb
inc
mov
push
lock
or
imul
or
add
out
push
in
sub
xchg
cld
ja
push
popl
arpl
adc
push
fcmovnbe
mov
pop
lret
addr16
outsb
xchg
lret
stc
rorl
movsl
and
mov
jbe
jns
push
pop
ss
lcall
test
movsl
mov
in
lea
xor
mov
fwait
scas
sbb
cld
mov
xchg
mov
cmp
cmp
cs
rcrl
orl
or
lds
push
stos
in
push
dec
nop
cmp
cmp
inc
and
inc
mov
xchg
dec
xlat
mov
push
fldpi
mov
and
mov
out
dec
jne
push
inc
and
jg
loope
aas
sbb
jg
cmp
add
or
nopl
lea
or
push
pop
daa
xor
cmpsl
call
dec
je
iret
jge
add
cmpl
dec
push
xchg
out
or
or
jno
js
leave
cmp
jbe
mov
or
iret
adc
movsbl
int3
and
in
pop
lret
or
movsb
pop
push
cmp
cli
jno
jno
xchg
dec
int3
adc
jnp
insb
pushl
sub
into
xchg
addr16
sbb
rclb
fwait
je
mov
neg
aas
sub
sbb
lcall
sub
sti
jbe
sub
push
in
pop
fimuls
mov
addr16
or
mov
or
cli
xchg
jge
fmul
adc
das
xchg
dec
cmp
xlat
inc
dec
idivl
push
push
xor
lock
stos
jecxz
and
pop
dec
xchg
ljmp
push
and
xor
aaa
mov
sub
aam
loopne
out
sub
iret
cmp
adc
adc
sub
sahf
bnd
dec
dec
gs
jo
lret
sahf
pop
push
jns
imul
scas
xor
add
icebp
icebp
mov
shl
xor
mov
lret
jae
aaa
rcr
cltd
cmp
cmc
pop
adc
out
flds
pop
aad
xchg
add
test
scas
add
push
popa
popa
sbb
and
icebp
or
into
mov
cmp
jl
xchg
aas
lea
jp
in
sub
jge
pop
jne
dec
cmpsb
inc
mov
addb
shlb
cmp
in
pop
icebp
in
xor
imul
cld
icebp
filds
out
xchg
popa
sbb
lahf
pop
dec
dec
xchg
pusha
cwtl
fbstp
jp
xchg
add
push
mov
loop
inc
sub
push
out
jl
into
sub
lahf
dec
sbb
pushf
stc
leave
pushl
mov
push
inc
jp
int
jnp
and
nop
inc
push
cli
add
das
test
and
scas
out
fldt
inc
and
and
fbstp
mov
adc
loope
call
call
std
enter
stc
leave
and
xacquire
xchg
loopne
cmp
fdivrs
push
add
push
int3
mov
mov
pop
in
mov
aam
rclb
mov
fnstcw
adc
cmp
lods
lahf
testb
mov
pop
popa
shlb
stos
rcll
shlb
mov
cmp
jbe
pop
inc
mov
in
je
or
xchg
dec
sbb
jnp
sbb
adc
push
add
jp
imul
mov
cmp
inc
inc
aam
sub
nop
test
jge
ss
inc
das
lret
pop
aaa
xor
xor
push
mov
lret
leave
inc
jmp
push
rcl
and
or
fidivl
and
dec
cmp
dec
add
das
xor
in
xor
rcrl
ret
loope
out
xchg
out
das
mov
inc
cmpsb
stos
scas
adc
mov
pop
dec
push
push
or
xor
notb
push
cmp
rcl
jge
loop
push
aas
jns
dec
pop
sub
pushf
shrb
xchg
mov
mov
dec
push
jnp
xor
lea
push
or
inc
or
in
test
not
fmull
mov
sbb
or
push
mov
jbe
scas
adc
pushf
xchg
movsl
ret
dec
push
mov
in
add
or
popa
outsb
xor
out
mov
jge
sbb
mov
push
cmpsl
xor
xchg
cmpb
xchg
jns
and
das
mov
jl
ja
adc
aaa
sti
int3
cmp
pop
cli
sbb
mov
xlat
pop
mov
sti
push
and
mov
dec
subl
sub
popa
xchg
push
sbb
inc
xchg
pop
add
inc
xchg
repz
fisttps
mov
mov
pop
in
jp
aaa
inc
lds
pop
adc
jecxz
and
adc
or
push
in
vcvttpd2dqy
clc
nop
push
lret
mov
mov
xchg
shr
jmp
cmp
pop
mov
cmp
jne
test
mov
adc
test
decl
hlt
aaa
les
sbb
mov
into
add
iret
dec
roll
push
shrl
cmp
int3
mov
inc
addb
push
aad
push
filds
test
pmullw
icebp
les
insl
dec
cs
int3
jmp
lcall
push
mov
mov
mov
jnp
and
cwtl
rcrb
stc
lahf
cs
andl
xchg
sbb
add
lret
stos
gs
mov
fs
adc
mov
mov
out
push
cwtl
jb
or
cmp
push
inc
mov
popf
jo
cmp
push
js
cmpl
loopne
lods
enter
xchg
stos
push
mov
or
pop
lods
cmp
pop
pop
fcoml
adc
or
inc
add
rcrb
ficoms
sbb
cmp
or
popa
mov
xor
addr16
out
clc
data16
icebp
and
and
stos
push
inc
ret
push
xor
mov
sti
lret
aaa
lahf
movb
xchg
cmc
xor
mov
mov
jmp
or
sbb
roll
cmp
add
sti
mov
push
test
outsb
push
lret
loop
cwtl
addl
pop
gs
xchg
dec
int
sbb
in
rcrb
mov
jg
sub
inc
not
xor
imul
sbb
dec
vmovd
jmp
rclb
jo
cmp
andl
pop
cmpb
dec
shl
test
jl
pop
xchg
movsl
push
insl
mov
cltd
sbb
addl
xchg
outsl
incb
xchg
test
cmpsl
lods
movsb
out
leave
add
lds
out
cwtl
negl
inc
rorl
jg
jge
mov
pop
imul
ret
push
push
mov
push
fisttps
cmp
mov
mov
jnp
daa
adc
imul
cmp
mov
mov
xor
out
dec
jbe
movb
xlat
push
mov
mov
leave
sti
clc
adc
inc
cmp
sbb
out
je
cmpsb
js
pushf
mov
mov
repnz
pop
std
test
and
outsb
sti
add
movsl
add
cmp
mov
and
clc
jne
ljmp
mov
mov
scas
sub
jmp
pause
pop
or
inc
in
scas
nop
xor
sub
sbb
pop
dec
mov
out
ret
rclb
pop
loop
mov
add
js
aam
out
fnstenv
jg
out
add
hlt
adc
lods
sub
call
ds
push
mov
pop
xor
dec
icebp
xchg
push
out
dec
or
pop
lods
mov
nop
in
aad
shl
mov
in
dec
dec
push
mov
addr16
aaa
pop
xchg
mov
fwait
dec
rorl
aam
sub
sbb
xor
mov
test
and
popf
movsb
xor
jecxz
push
mov
test
ret
sub
out
idivb
lods
cmp
and
pop
and
sti
in
jnp
adc
sbb
lahf
lahf
pop
mov
and
dec
mov
adc
sub
std
jmp
outsb
cmpsb
fildll
cltd
insb
inc
xor
xor
xor
repnz
rorb
mov
adc
push
ds
jnp
add
add
cmp
adc
xchg
fprem1
movb
sahf
push
add
je
mov
jo
pop
pushf
inc
push
mov
sub
test
mov
mov
push
sahf
les
cmp
cmp
pop
and
xchg
aad
mov
pop
and
fildll
insl
daa
jae
sbb
std
in
sub
aad
clc
jle
cli
or
mov
jmp
jo
sbb
mov
sub
push
xchg
inc
and
loop
add
fidivl
xchg
xor
pop
push
sbb
fwait
xchg
jmp
pop
add
cmp
scas
pop
sbb
js
push
pop
cld
adc
mov
aad
add
sbb
popf
mov
lcall
push
pop
inc
sbb
push
cmp
insb
push
mov
mov
adc
in
jne
test
das
adc
xchg
xchg
sbb
in
add
xchg
jp
daa
sub
cmp
icebp
xchg
divl
pop
mov
rcl
add
out
xchg
jnp
imul
rcl
push
jge
insb
ja
cltd
and
xchg
sbb
enter
jmp
push
stc
lret
mov
aaa
lods
mov
fisubrl
jge
imul
sahf
add
xchg
mov
add
mov
xchg
pop
push
je
nop
mov
sub
call
mov
or
shrb
xchg
daa
sbb
addl
lock
inc
mov
dec
pop
mov
jmp
sbb
sbb
xchg
pop
imul
out
orb
pop
sbb
cltd
mov
out
mov
sbb
sbb
xor
cmp
pop
out
xor
lock
inc
mov
mov
ud1
mov
movsl
f2xm1
flds
lcall
lahf
aad
int3
pusha
mov
jp
popa
jbe
mov
orl
lods
ss
mov
in
imul
sbb
in
xchg
lret
sub
sub
xchg
lret
mov
nop
pushf
pop
lds
add
pop
push
push
into
je
pop
lret
sbb
test
jg
dec
add
mov
test
js
call
cmp
clc
loop
lock
mov
nop
add
sahf
in
cmp
cmp
sbb
inc
xor
lods
out
dec
mov
int
push
adc
pop
and
mov
mov
mov
sub
push
xor
lcall
or
sbb
decl
pop
hlt
mov
in
xchg
sti
outsl
addr16
in
addr16
mov
ret
xor
out
repnz
jno
jno
cwtl
arpl
sub
mov
js
fisttpll
or
mov
inc
mov
inc
dec
clc
adc
xchg
dec
xchg
test
stos
and
shll
scas
jecxz
test
dec
cmp
xchg
aas
or
jbe
arpl
xorb
fdivl
add
jg
mov
jmp
lret
or
aaa
outsb
imul
mov
int
add
push
movsb
into
arpl
inc
push
cmp
insb
gs
or
repnz
ss
jl
xor
sub
shrl
sbb
inc
mov
add
xor
int3
aad
subb
test
xlat
fstps
jae
mov
sub
sahf
out
and
cwtl
sbb
rclb
cmp
jae
repz
pop
lea
cmc
push
lret
adc
sub
mov
xor
std
lock
cmp
sbb
pop
jl
fsubrp
clc
xchg
dec
out
shlb
mov
adc
cmp
addl
jle
xchg
std
jle
sbb
nop
orl
stc
addl
cmp
imul
mov
call
mov
inc
addr16
push
dec
jb
jg
subl
aad
push
js
stos
lea
mov
add
in
clc
sub
push
dec
cli
imul
or
jmp
and
stos
cmpb
fcoml
std
cmpsb
outsb
adc
mov
lret
sub
les
rolb
xor
in
xchg
call
les
xor
std
dec
fldenv
adc
clc
mov
cmp
lods
mov
dec
mov
fcoms
sub
inc
ss
leave
mov
xor
and
cmp
clc
push
jbe
mov
mov
in
ret
je
ds
test
ja
dec
xchg
inc
aam
int
shll
mov
cmp
int3
and
psrlq
jmp
sbb
mov
scas
inc
xor
xor
inc
stos
icebp
nop
push
rol
pop
pop
stos
dec
shl
scas
xor
imul
dec
xchg
inc
ja
add
into
icebp
in
das
jo
inc
in
hlt
pop
js
xchg
adc
mov
xor
cltd
cmp
cmpsl
add
fnstcw
into
inc
xchg
and
and
das
sbb
cs
mov
jno
mov
insl
xchg
pop
xor
jp
inc
mov
jp
inc
sbb
jae
mov
inc
sbb
or
nop
push
mov
lods
icebp
dec
mov
mov
dec
xor
movsb
orb
dec
xchg
pop
arpl
sti
mov
lods
jg
add
imul
xchg
push
or
call
test
ja
fisttps
orb
das
call
test
les
out
xchg
out
cmp
xchg
sbb
mov
shr
add
sbb
rorl
dec
add
fcompl
mov
add
dec
xchg
cwtl
cli
loopne
lock
scas
dec
addr16
ljmp
xlat
imul
pop
sub
and
xor
rcll
add
mov
test
loop
cmp
inc
test
cltd
aaa
out
stos
xchg
inc
pusha
pop
mov
cmp
or
push
dec
cmp
outsb
mov
or
cli
popf
mov
adc
xor
mov
xchg
lds
imull
adc
cltd
xchg
dec
sbb
pop
adc
sbb
je
ret
es
and
daa
pop
popa
cmpb
add
daa
dec
mov
les
dec
inc
xor
mov
addr16
xor
pop
popf
or
pop
sub
enter
jp
ss
imul
mov
jecxz
pop
out
enter
pop
inc
pop
bound
jb
in
mov
lahf
es
inc
repz
scas
gs
ret
pusha
call
nop
cli
add
sbb
xchg
rclb
scas
test
xchg
push
sbb
negl
mov
jnp
fwait
jae
jbe
stos
hlt
add
inc
and
push
push
repz
in
mov
mov
cmp
inc
in
je
pushl
push
out
icebp
add
jle
mov
adc
adc
dec
pop
lea
jae
sub
push
push
push
dec
or
cltd
mov
mov
repnz
aas
push
lea
loop
jbe
push
xorb
or
dec
adcb
push
jnp
jg
mov
iret
into
mov
fists
daa
aam
cmp
ja
and
jecxz
pop
loopne
mov
out
repz
fs
out
outsb
dec
pop
aad
xchg
aas
adc
pop
imul
push
test
add
sbb
mov
sub
testb
sub
arpl
jb
movsl
or
and
add
int
xchg
add
adc
daa
loope
and
jmp
mov
dec
andb
xor
arpl
add
les
jb
leave
mov
mov
and
out
out
int3
mov
in
add
aas
inc
xor
jmp
mov
pop
sbb
sbb
popa
dec
cltd
cmp
out
xlat
and
xlat
mov
dec
sub
cmp
clc
leave
les
loop
fdivs
imul
cmpsb
aaa
imul
sbb
cmc
lret
xchg
dec
scas
fwait
loopne
pop
or
cmp
adc
shlb
sti
pop
xlat
jnp
mov
xchg
fldenv
fisttpl
jns
xchg
out
inc
enter
xor
and
push
push
lret
repz
inc
sub
js
ljmp
mov
and
jl,pt
inc
in
negb
loopne
loope
adc
dec
rclb
and
jg
mov
add
es
sbb
pop
cmc
pop
mov
cmp
mov
xchg
dec
lds
adc
cltd
xorb
cmp
jns
lea
ss
jmp
fmull
test
test
enter
add
stos
mov
mov
movsb
fimull
cltd
std
pop
test
popa
vcmpps
pop
inc
push
ret
popa
scas
adc
cmp
mov
test
arpl
gs
mov
inc
or
mov
jbe
aas
pop
inc
push
cli
std
pop
daa
dec
or
js
jl
dec
pop
cmp
jo
pop
pop
pop
push
rcrb
mov
inc
aam
mov
in
mov
or
xchg
pop
inc
xchg
xor
jne
hlt
jl
adc
pop
roll
xchg
sbb
nop
in
fwait
dec
sbb
mov
push
and
jno
jmp
push
add
inc
and
inc
push
scas
add
xlat
cmp
mov
pusha
or
dec
jns
mov
add
int
cmp
outsl
outsb
pop
faddp
pop
pop
test
cmpsl
outsb
cld
leave
les
cmp
ds
lds
push
push
mov
stc
jno
jp
xchg
in
cwtl
mov
mov
or
insb
rclb
les
out
xchg
cmp
sar
movsb
xor
push
cmpsb
fsubs
jl
iret
xor
popa
inc
xchg
or
rol
mov
xchg
cmp
pop
xchg
xchg
fsubl
pushl
out
call
ja
xchg
popa
iret
loopne
ja
insl
stc
inc
dec
fnsetpm(287
les
mov
jge
sbb
inc
lock
jno
jle
or
cmc
movsb
or
mov
in
or
or
test
in
cwtl
stos
inc
repnz
cld
push
fildl
jl
aad
loop
in
xchg
fsubs
adc
mov
out
pop
inc
jnp
mov
cmp
lods
push
movsb
pop
push
cs
sub
sbb
mov
xor
push
xchg
pop
rcrl
fstps
push
add
xbegin
add
fiadds
addl
xchg
rcrl
sbbb
fmulp
ret
mov
xor
jmp
pop
mov
cmp
je
test
stos
and
xchg
adc
aam
adc
mov
insl
in
inc
push
sarl
xchg
push
xlat
lds
pop
push
mov
inc
mov
dec
jg
es
andl
sahf
std
lcall
pop
nop
cli
or
push
test
shrl
inc
xchg
sbb
imul
fld
int3
jmp
mov
mov
mov
sub
imul
and
sbb
aad
jmp
rcrb
cmp
adc
cmc
iret
jp
push
enter
movsl
or
inc
pop
pop
in
popf
ja
iret
mov
stos
mov
outsb
xor
push
popf
mov
push
inc
sbb
cmpb
lahf
std
fucom
xchg
pushl
jge
icebp
or
dec
inc
cmp
xorl
or
or
cld
mov
mov
pop
or
push
repnz
and
mov
inc
ja
rcr
mov
push
push
scas
or
xchg
aas
or
lds
push
or
filds
test
jnp
fldt
fsubs
movsl
roll
mov
rcrb
pop
orl
and
adc
mov
jp
and
adc
push
xchg
aas
and
jne
xchg
push
addl
fcmovb
test
in
roll
test
sub
mov
fs
mov
inc
fstpt
sub
xchg
push
cltd
cli
pusha
in
dec
inc
cmc
insl
notb
adc
rcll
adc
lahf
aaa
jbe
in
test
insb
mov
imul
sti
sub
sub
mov
cmc
adc
or
add
ficomps
bound
into
pop
shll
pop
cmc
jae
enter
and
lods
cmp
xchg
lods
rcrb
sahf
jecxz
mov
fidivrs
pop
cltd
jae,pn
adc
loopne
mov
movsb
out
cwtl
mov
stos
movsl
jle
sbb
into
sbb
repnz
jnp
add
leave
pusha
and
cmp
shr
int3
mov
inc
sbb
std
mov
xor
ljmp
dec
adc
jnp
inc
es
xchg
frstor
lret
loope
fildl
and
repnz
sbb
aas
add
in
gs
repnz
xchg
cs
jnp
sbb
inc
popf
mov
mov
lock
adc
jp
sarb
test
test
push
mov
push
mov
jmp
dec
jge
scas
aaa
jle
cmpsb
movsb
scas
sarl
add
dec
mov
repnz
mov
dec
mov
mov
and
das
mov
cmc
inc
jno
repz
jno
push
enter
pop
and
sbb
and
in
cmc
cmp
pop
decb
adc
outsb
jb
xchg
jnp
ret
cmp
push
add
and
icebp
xchg
out
adc
roll
ljmp
jp
inc
int3
mov
inc
stos
sbb
jp
xchg
pop
push
add
push
mov
or
xchg
inc
jne
mov
mov
inc
daa
loop
mov
cmp
lds
loopne
fprem1
aaa
daa
cmpb
insb
fidivrl
cmpsl
mov
mulb
dec
cld
fldl
ret
cs
dec
fwait
adc
inc
adc
mov
xor
xlat
or
mov
scas
enter
out
sahf
ret
xor
xor
repnz
cltd
icebp
cmp
shrl
sbb
in
sub
or
push
mov
pushl
movsl
outsb
mov
inc
mov
jo
into
sbb
sub
inc
dec
pop
cmp
mov
imul
jmp
das
lock
loop
ret
lds
movsl
mov
adc
shll
inc
sub
xchg
iret
adc
pop
and
xchg
lods
sub
aas
xchg
jp
mov
ret
mov
xchg
pop
cmpsb
sahf
lds
mov
cli
insl
pop
je
test
idiv
es
pop
jl
fcoms
int3
mov
and
testb
cmp
add
in
inc
xchg
mov
xor
mov
sahf
lds
mov
dec
nop
inc
mov
shll
roll
mull
pop
inc
outsl
stc
mov
fwait
pop
jecxz
ja
jle
mov
popa
or
mov
push
cmp
ror
mov
push
fdivrs
cmpl
sbb
cmp
xor
jb
je
arpl
mov
std
test
ss
das
xchg
ret
popf
pop
in
cli
shlb
push
or
loop
mov
test
pushl
mov
mov
repz
cmc
add
xchg
mov
enter
ljmp
xchg
fisttps
mov
orl
popf
out
adc
repnz
lods
jmp
mov
cmp
add
dec
dec
orb
inc
pop
rcrb
pop
inc
inc
inc
xor
mov
xor
int
xor
inc
and
clc
push
js
xor
cld
rclb
mov
sbb
jo
enter
lock
mov
push
fdivr
xchg
push
std
ret
hlt
in
arpl
xchg
mov
fcoml
cmp
andl
hlt
cld
xor
mov
lcall
mov
or
or
jb
or
mov
in
test
lret
adc
mov
jb
mov
dec
cmpsl
add
xchg
lock
rcrl
push
pop
je
inc
scas
and
out
mov
nop
push
enter
xchg
gs
inc
xchg
pop
int
dec
ss
pop
push
sub
insb
pop
test
faddp
bound
sbb
outsl
mov
mov
scas
jnp
ret
pop
sbb
xchg
push
mov
sub
fs
sti
xchg
mov
ret
cmp
pop
sbb
xchg
push
jle
fstpt
fadds
mov
and
into
push
dec
mov
insb
adc
bound
aad
adc
outsl
inc
mov
sub
faddp
xor
pop
pop
bound
fstpl
popf
jbe
mov
adc
stos
test
shlb
scas
loop
pop
mov
fwait
inc
pop
fistpl
cmp
mov
inc
mov
shlb
cmpsb
int3
pop
fbld
pop
cltd
pop
fistl
ja
movsb
fadd
xabort
mov
int3
xchg
jp
rclb
and
and
mov
push
pop
jne
cwtl
push
cmc
xchg
cmc
add
mov
nop
pop
mov
cltd
fbld
andb
or
sbb
add
xor
mov
mov
loopne
xchg
jmp
dec
dec
mov
outsl
adc
jmp
les
movsb
mov
cltd
repnz
sbb
sbb
shrb
test
das
push
inc
cmpsl
sub
inc
sub
cmp
adc
sub
stc
pop
adc
push
mov
sbb
in
outsb
push
outsb
pop
jl
jp
mov
pop
pushf
push
test
lahf
push
repz
pmulhw
and
cs
xor
or
dec
je
mov
mov
jae
adc
pop
jp
jnp
fiaddl
xlat
jge
push
add
rcrb
test
inc
cmpsl
xchg
pop
test
imul
test
stc
int3
mov
data16
orb
or
out
je
mov
nop
into
dec
cltd
adcl
cmp
fsubl
or
xchg
outsb
adc
cmp
cmp
stos
iret
test
stos
std
dec
mov
dec
dec
mov
pop
insb
cwtl
adc
mov
mov
decl
inc
mov
mov
lret
in
ret
cmp
lcall
and
out
lods
xchg
fs
gs
mov
and
mov
add
imul
jle
sbb
or
shlb
sbb
out
leave
lds
sub
mov
sbb
inc
or
pushf
and
push
sbb
shr
xor
ljmp
cmc
roll
mov
mov
xor
xor
or
xor
pop
jno
inc
dec
push
xchg
sbbl
adc
dec
xchg
outsb
cmc
hlt
fcmovb
int3
movsl
ss
loopne
cwtl
or
test
xor
std
mov
or
clc
adc
decl
aaa
das
dec
push
inc
or
cld
in
test
jo
jnp
es
fs
aaa
dec
xorl
pop
cmp
dec
sub
mov
mov
dec
mov
addb
fcmovnu
xchg
nopl
lret
testl
mov
into
adc
stos
and
lods
add
les
std
sbb
lahf
test
sub
jecxz
mov
or
fcoml
ret
out
or
adc
call
xor
aad
mov
mov
pop
cmp
xor
cmp
xor
push
pop
push
aas
cmp
pop
add
jnp
xor
je
into
cmpsb
repnz
push
pop
lock
inc
pop
dec
punpckhbw
insb
arpl
push
iret
push
loope
xor
mov
popa
int
loopne
xchg
pop
aam
push
jle
adc
cmpsb
dec
lods
lods
cld
icebp
push
cmp
push
mov
jge
aam
sbb
adc
mov
movsl
data16
mov
sub
pop
loopne
adc
adc
sti
xor
cmp
jnp
or
pop
popf
sbb
xor
sub
dec
mov
push
aad
pusha
jmp
cld
adc
in
pop
lret
in
es
cltd
mov
pop
sbb
lret
sahf
lcall
xchg
insb
lds
xchg
jl
and
add
xchg
inc
and
idivl
mov
test
pop
scas
or
mov
ds
stos
jle
or
dec
jmp
pop
pop
icebp
arpl
xlat
scas
xor
pop
inc
dec
add
repnz
inc
shll
push
flds
jl
jno,pt
mov
xlat
mov
mov
ret
lcall
sbb
nop
cs
mov
dec
adc
xor
rol
rorl
rolb
xchg
jnp
push
adc
out
les
mov
xchg
iret
js
pop
mov
cmc
jnp
mov
mov
jnp
aad
dec
mov
xchg
jb
adc
pop
into
test
popa
xorl
add
xchg
jno
insb
mov
jb
ret
cmp
inc
mov
inc
sbb
into
xchg
andb
add
xchg
pushl
imul
mov
inc
mov
shlb
pop
pop
sar
leave
mov
cli
mov
insb
sub
dec
mov
xchg
popf
jmp
sub
jns
in
in
or
pop
addl
mov
stos
es
and
cmp
incb
lods
cmpsb
mov
test
fs
jb
bound
adc
cmpsb
xor
mov
arpl
aaa
scas
adc
dec
adcl
dec
add
fnstcw
adc
icebp
cmp
sbb
pop
nop
push
mov
dec
orb
aas
mov
ds
es
sbb
ss
pusha
loopne
jge
subl
adc
xchg
dec
andb
or
ds
push
jle
test
jno
adcb
jb
aad
sub
and
sub
fstpt
jne
adc
arpl
and
adc
rorl
jae
ja
mov
sub
je
xchg
lea
and
jns
loopne
shrb
mov
loope
lcall
xorb
mov
xlat
ret
push
pusha
push
mov
or
pop
xchg
int3
mov
or
out
mov
pushf
aaa
dec
in
mov
lea
loop
push
loop
adc
mov
clc
or
pop
rclb
sbb
mov
cltd
dec
int3
mov
pop
xlat
jge
add
adc
cld
push
and
test
mov
pop
mov
xchg
xor
or
ret
xchg
cmp
sbb
xchg
movsl
enter
mov
shrl
pop
cltd
fdivs
and
jg
mov
hlt
cmp
popf
pop
inc
xchg
mov
or
xor
xchg
xlat
cwtl
rcll
mov
pop
push
insl
lret
subl
aaa
hlt
mov
adcb
gs
jns
cld
gs
mov
sahf
mov
dec
mov
push
decl
xlat
jl
int
pusha
out
cmp
dec
xor
movsb
add
repnz
pop
cmp
pop
push
and
mov
bound
jbe
push
jae
mov
jg
sub
out
xor
pop
fwait
cmp
jg
movsb
sub
sbb
jo
aas
rcll
cmp
mov
jmp
ret
aaa
mov
ja
test
pushf
fdivrl
out
xchg
clc
sub
ficoms
test
jge
das
push
bound
addr16
push
cmpsl
inc
lods
fisttpl
rol
cwtl
mov
das
xchg
mov
rcrl
orl
in
push
mov
jae
lods
cmp
pop
loopne
in
adc
nop
test
call
into
addr16
jp
ds
dec
jae
ret
loopne
loop
int
cltd
jns
push
and
and
and
sbbb
imul
daa
loope,pn
jecxz
shrl
ds
sub
aam
shr
jl
test
and
push
aaa
out
inc
pop
mov
xor
mov
hlt
je
out
dec
decb
inc
movsl
jmp
or
pop
xchg
sti
mov
or
inc
pop
cmc
jmp
loopne
ffreep
and
and
inc
sahf
jl
fcmovnbe
jle
lahf
mov
addl
arpl
shlb
fsub
sahf
rolb
std
call
cld
mov
clc
jnp
cmc
mov
lret
into
sub
or
xchg
into
sahf
or
dec
jmp
jb
das
call
mov
int
push
pop
imul
rol
out
push
push
push
arpl
outsb
loopne
clc
repz
popa
stos
pop
pusha
inc
sub
js
xchg
pop
jmp
cmp
xor
out
mov
repz
daa
bound
sub
cmpl
and
xor
scas
jae
daa
jmp
pop
les
dec
cltd
adcb
xchg
sbb
push
pop
rorl
dec
negb
imul
mov
ljmp
sbbl
lock
push
mov
and
sbb
lea
test
inc
mov
xor
jnp
ret
decl
dec
inc
xor
adc
jp
cmpsb
push
in
pushf
and
call
mov
subl
cmpsb
xchg
in
fsubrp
fdivl
ja
cmp
or
stos
jbe
cmp
aaa
or
stos
icebp
stc
sbb
xor
leave
add
adc
sbb
sub
gs
lock
les
sbb
pop
mov
pusha
push
je
cld
mov
fldenv
cmp
fwait
jo
das
jno
push
std
pop
repnz
sub
mov
mov
sub
pop
mov
jns
inc
out
pushf
push
dec
or
mov
pop
mov
mov
test
rcll
lds
cwtl
arpl
pusha
mov
or
mov
push
xchg
adc
pop
dec
lods
jmp
jo
cmp
sub
inc
or
xor
cmp
imul
inc
adc
mov
ret
adcb
sbb
rolb
adc
jle
movsl
mov
nop
xor
lret
mov
rcrl
push
movsb
je
pop
mov
pop
into
fildl
xchg
xor
outsl
bound
sub
je
mov
xor
stos
in
aad
nop
frstor
ss
pop
loope
dec
add
scas
repz
jb
pop
push
ljmp
rcrl
test
inc
test
sahf
sbb
push
vandps
jne
sahf
cmp
je
lret
lock
movsb
cld
jae
je
xor
xchg
add
xchg
adc
pop
adcb
lcall
inc
lea
cwtl
cmpsb
enter
inc
in
or
or
inc
fistpll
imul
pop
mov
cmp
pop
push
pushf
test
jl,pt
imul
and
imul
adc
fnstsw
insl
sar
mov
jge
jl
add
and
pop
subb
pop
sbb
jo
jnp
lcall
xor
stos
in
add
fwait
sbb
out
fs
push
jp
inc
cmp
lods
jae
loopne
push
test
cmp
adc
mov
jp
jns
xlat
pop
jbe
je
dec
sub
adc
ficoml
or
push
push
dec
rcll
insl
mov
aaa
xchg
or
subl
cmc
sbb
repnz
ret
or
jne
pop
cmp
cmp
mov
inc
test
rorl
test
rcr
mov
sub
addr16
mov
mov
clc
xor
xchg
mov
lcall
aas
sbb
ret
sub
faddp
and
loop
adc
fsubrs
mov
mov
insb
fildl
adc
iret
inc
mov
xchg
mov
push
loop
push
ja
clc
cmp
out
inc
shrb
pop
jo
js
jae
or
pop
stos
subb
insb
outsl
ret
mov
adc
stos
aaa
clc
dec
nop
adc
outsl
lods
aad
cld
popa
dec
ljmp
inc
in
into
mov
xlat
fs
shrl
int3
movsb
dec
popf
iret
cld
hlt
xchg
mov
pop
rorb
lods
jns
mov
add
mov
adc
pop
jg
or
xor
adc
or
insb
icebp
mov
ret
in
movsb
pop
and
push
adc
ret
cmp
loope
ds
stos
data16
inc
and
or
xchg
std
xchg
dec
add
lret
mov
roll
add
pop
adc
repnz
mov
mov
aam
jae
fwait
shll
gs
mov
fwait
in
outsb
inc
fimuls
and
aad
enter
jne
mov
pusha
outsl
enter
fs
hlt
mov
jecxz
test
add
xchg
inc
sub
inc
in
add
cmp
loope
pop
dec
lods
xor
test
or
mov
push
test
iret
hlt
cs
push
mov
shr
xor
rclb
sbb
adc
adc
mov
movsb
and
push
or
in
xchg
daa
push
mov
stos
mov
movsl
xor
repnz
hlt
insb
iret
js
jg
pop
push
sbb
jne
les
sub
out
enter
or
cld
in
pop
push
imul
dec
jmp
ficompl
aam
orl
lahf
xor
push
jg
aam
add
pop
push
jb
push
enter
mov
data16
push
xorb
orb
into
mov
sub
sub
xchg
mov
jl
pop
jo
and
push
pop
xor
or
push
pop
scas
lret
call
cltd
fimuls
sar
in
mov
fidivl
pop
mov
or
adc
cmp
xor
push
fisttpll
fdivrs
or
adc
pop
ds
adc
lret
cmp
adc
repz
stos
mov
xchg
add
pop
jp
xchg
mov
inc
cmp
sbb
adc
inc
pop
ja
mov
jl
aad
jge
into
pop
or
ja
xchg
dec
mov
mov
test
iret
mov
in
ss
mov
add
in
nop
sub
mov
inc
in
aad
outsb
add
aas
lds
xor
xlat
mov
fs
ret
push
mov
push
xchg
and
stc
jns
test
shrb
dec
nop
es
sbb
outsl
mov
dec
lret
ljmp
push
inc
movsb
ret
movl
jno
jge
xchg
or
add
add
lods
rcll
fisubrs
pop
sahf
pop
aaa
addr16
fbstp
mov
jle
xor
jb
or
jp
jbe
push
call
pop
repz
and
inc
in
cs
sarb
in
push
das
sub
jmp
aam
loope
jle
cmp
call
faddl
sbb
sbb
scas
cltd
es
cmp
push
and
jae
and
sti
or
push
daa
mov
jmp
scas
test
lods
flds
notl
out
imul
mov
inc
lods
dec
cmp
add
in
cld
clc
push
inc
in
xchg
push
gs
outsb
xchg
xor
pop
cmc
xchg
cwtl
pushf
jb
inc
test
xchg
icebp
pop
orl
ljmp
rcrb
mov
cwtl
push
add
add
nop
xchg
adc
sub
fs
mov
cmc
aaa
xchg
add
add
and
scas
sub
jmp
int
outsb
lret
inc
fists
push
mov
jp
ficoml
mov
in
shl
xchg
push
movsl
dec
xchg
pop
adc
mov
subb
sbb
cmp
mov
frstor
sub
inc
leave
pusha
mov
dec
int
sub
cli
scas
lcall
mov
jp
mov
out
adc
dec
mov
mov
sbb
imul
and
add
push
adc
subl
jne
pop
push
mov
fdivp
aas
mov
add
in
xorb
jae
xchg
push
orl
mov
pushf
cltd
int3
incl
aaa
dec
xchg
daa
pusha
inc
ret
arpl
push
add
jle
dec
bound
outsb
rcr
push
test
pushf
nop
adc
addr16
pop
enter
scas
call
into
ret
pop
mov
or
lock
add
js
dec
in
mov
xchg
test
mov
xor
push
push
leave
or
mov
push
cmp
mov
xlat
loopne,pt
outsb
sbb
lahf
sub
sub
aad
pop
xchg
mov
sarb
mov
mov
xor
imul
push
loop
hlt
xor
int
clc
pop
movb
cmp
ffree
cmpsb
orb
add
push
popf
mov
test
pop
into
xchg
sub
cmp
lahf
and
outsl
and
arpl
and
test
enter
rcl
xchg
cli
sub
into
out
mov
clc
fcompl
sub
dec
jae
das
out
jge
out
js
scas
push
jge
cmp
cld
imulb
ljmp
push
push
in
arpl
in
ret
repnz
sbb
rorb
push
in
or
ret
xor
sahf
pushf
push
stos
dec
sarb
jecxz
out
aam
mov
arpl
sub
mov
jbe
mov
adc
mov
cli
dec
jg
pop
cs
xchg
and
ja
into
jbe
cld
fwait
and
add
cmc
adc
fcmovbe
xlat
add
mov
push
scas
iret
fsubrl
lret
loop
jle
jle
or
es
jge
mov
xor
sti
scas
inc
pop
mov
jns
in
pop
mov
in
jno
lcall
xchg
das
adc
test
es
sub
xchg
mov
xchg
push
jo
push
or
xchg
push
fdiv
cs
and
out
mov
mov
mov
lods
sub
dec
xor
stc
loope
push
xchg
add
cmpl
lods
rcrb
push
push
fdiv
cwtl
jmp
imul
or
xchg
aad
iret
pop
adc
sti
jp
test
mov
cmp
mov
cmp
std
call
int3
inc
push
dec
popf
and
push
test
dec
jle
in
addr16
clc
jmp
out
inc
add
push
sbb
pop
push
daa
add
outsb
mov
loopne
out
pop
adc
pop
cmp
xchg
adc
ret
sub
fisubrs
sbbb
jae
lret
xchg
fbstp
fstl
jl
jo
push
popa
mov
jge
ja
addr16
xchg
scas
push
idivl
push
lods
test
out
stos
mov
ss
add
movsl
faddl
mov
inc
movl
xor
add
movsb
ret
mov
lahf
sub
inc
cmp
and
inc
movsb
movsl
jle
inc
lret
add
mov
inc
fs
dec
lahf
les
or
sbb
inc
mov
insl
lret
icebp
les
cmc
les
or
stos
push
jae
cmp
jno
mov
in
jmp
jnp
sbb
sub
jmp
xlat
repz
cmp
ja
fs
ljmp
and
cld
dec
aas
lds
aas
adc
cmp
mov
jo
scas
sbb
cs
fucom
or
or
jne
inc
cltd
inc
xchg
add
push
fs
mov
pop
lods
in
or
cs
sbb
negb
or
fnstcw
pop
push
pop
mov
lods
aas
clc
inc
jbe
idivl
nop
mov
in
data16
xchg
add
sbb
nop
inc
or
bound
sbbb
cmc
repz
and
cltd
mov
mov
mov
loope
outsb
pop
inc
into
lret
test
mov
adc
mov
jge
add
aaa
outsb
notb
lret
push
sub
or
clc
outsl
push
daa
lret
hlt
pop
in
mov
adc
lods
fistps
dec
jl
outsb
lcall
and
jg
shll
sub
loope
adc
outsl
and
jne
mov
adc
xor
js
jne
mov
sub
xchg
xlat
mov
negl
mov
inc
cmp
out
or
sub
push
neg
inc
fs
outsb
hlt
jmp
jmp
mov
cmp
jmp
mov
add
insb
bound
mov
shr
nop
icebp
add
push
dec
fwait
push
stos
add
or
cmp
cmp
xchg
mov
lods
testl
jae
rcrl
cmpsl
adc
sbbb
loopne
lods
xorb
sti
mov
cmc
cmpsl
inc
fldl
mov
gs
aam
fidivrs
xchg
xor
mov
sbb
and
roll
leave
jb
ss
adc
out
inc
notl
cmpsb
icebp
gs
mov
lds
xchg
test
mov
xlat
fst
lds
jge
sub
pushl
cmpsb
popf
aaa
loope
dec
jl
lock
pop
push
out
and
mov
in
cwtl
ljmp
sub
jo
push
sbb
lret
push
xchg
stos
jp
lret
push
adc
sub
sahf
stc
or
lods
add
pop
xchg
repz
xchg
neg
mov
mov
lret
arpl
pop
mov
add
rolb
push
and
sub
inc
or
jecxz
xor
fdivl
cmp
es
fdivrp
push
mov
mov
xor
shrl
into
nop
add
fstps
ret
out
stc
or
push
dec
arpl
cs
push
add
call
andb
xchg
mov
popf
test
xor
mov
fs
cmp
mov
cmp
fisttps
mov
and
es
test
jmp
and
pop
push
cli
movsl
xor
cmp
pop
repnz
insb
mov
orb
shll
fwait
fs
pop
adc
fidivrl
xchg
test
lock
pop
test
nop
mov
hlt
dec
fs
mov
mov
jecxz
dec
in
pop
out
mov
ret
dec
ret
int3
jge
push
xor
xor
and
dec
lea
test
lcall
addb
mov
mov
cmp
dec
mov
push
mov
in
imul
push
repnz
inc
repnz
jnp
mov
lock
in
bound
push
mov
dec
jae
clc
lahf
push
and
out
or
rorl
aas
or
xchg
dec
sbb
es
sub
mov
sub
sarl
or
mov
xchg
or
mov
xor
push
stos
pushf
aaa
sub
mov
call
in
popa
mov
jmp
mov
jb
dec
pop
xchg
dec
jmp
cwtl
nop
ret
shlb
sub
shrb
sarb
adc
xor
sbb
adc
add
ljmp
xchg
and
mov
sarb
mov
xor
repnz
xchg
je
mov
sbb
jb
xor
sbb
add
lahf
ja
arpl
popa
push
mov
mov
cmp
add
pop
fdiv
ret
shlb
es
and
pusha
enter
les
xchg
push
es
jecxz
mov
sbb
add
shl
mov
push
jl
rcrb
mov
lods
xlat
int
clc
mov
sub
dec
push
fsubrl
mov
outsl
notb
mov
daa
lea
sub
pusha
jmp
lods
and
daa
js
xchg
outsb
add
push
inc
repz
shrb
out
dec
sub
pop
loopne
push
mov
and
mov
xchg
jmp
dec
cmpsl
push
or
jle
insl
inc
fbld
clc
rcrb
stos
roll
ja
cmp
ret
fidivrl
xor
xor
jb
pop
add
outsb
fnstcw
mov
dec
ja
dec
xlat
pushf
jne
sbb
push
mov
fdivl
sbb
in
pop
dec
jne
xchg
mov
inc
call
push
fidivs
add
pop
push
or
imul
mov
sbb
movsb
add
mov
cld
imul
jnp
fisubl
add
stos
xchg
inc
cmc
inc
mov
push
dec
imul
add
ds
push
pop
mov
fcomps
inc
dec
stos
or
ret
or
jmp
imul
negl
in
push
sub
jl
mov
pusha
add
or
sub
cwtl
push
mov
mov
cmp
mov
push
sbb
push
sub
cmp
mov
popf
test
sbb
test
add
in
cmpsl
addb
push
xor
ja
xlat
mov
xchg
jnp
xchg
xchg
dec
mov
mov
data16
sub
sub
nop
xor
dec
xchg
jp
jae
xchg
push
jne
cwtl
push
repnz
lds
cmp
in
pop
repz
shlb
fcomps
xchg
outsl
cmpsl
mov
jb
jle
sbbb
adc
ret
or
cmp
push
in
test
testl
jae
popf
inc
pop
xchg
nop
xchg
test
fs
or
mov
sbb
xor
add
push
repz
insb
outsb
fs
aas
out
into
pop
inc
sti
addr16
movsb
fcmovne
xor
pushf
xlat
ljmp
daa
inc
es
gs
mov
and
insb
stos
jecxz
jno
sub
into
inc
mov
incb
ljmp
cmp
int3
add
stc
cmp
clc
dec
mov
stc
fwait
mov
sahf
test
adc
add
cli
sbb
scas
testb
mov
cmc
cmp
jb
out
js
xchg
loop
arpl
lahf
dec
sub
jnp
mov
dec
test
sbb
mov
adc
mov
mov
adc
fpatan
outsb
ret
dec
cmp
fidivs
and
dec
rol
push
daa
lret
mov
hlt
mull
cltd
rol
dec
shlb
inc
cs
test
fstl
cs
je
jp
lahf
sbbl
outsb
and
pop
aaa
push
push
out
mov
out
in
outsl
scas
xchg
aas
cmpsl
xor
mov
sti
mov
daa
jl
dec
insl
add
ss
jmp
in
divl
imul
es
test
mov
xchg
xchg
cwtl
inc
cmc
inc
push
mov
fs
jnp
and
stos
xchg
leave
sbb
sbb
scas
sub
jp
mov
xor
mov
shl
jle
into
push
loop
push
cmpsb
jnp
xor
sbb
das
sbb
movl
aaa
mov
aad
jmp
mov
bound
and
mov
jb
or
sub
lods
outsl
mov
sbb
aaa
out
outsl
push
int
pop
dec
jae
out
mov
dec
or
xchg
jne
pop
push
js
sub
mov
pop
jg
push
or
fst
movb
jnp
rcrb
leave
jp
cmp
lret
ljmp
mov
bound
mov
subb
divl
sbb
xchg
and
enter
stc
xor
mov
negb
rcl
mov
stos
inc
adcw
loopne
test
mull
loopne
mov
push
sbb
ds
fistpll
test
out
sub
xor
mov
adc
jno
rol
filds
shll
mov
test
pusha
lahf
cmp
pop
leave
push
adc
add
pop
mov
rol
loopne
sbb
mov
or
cmp
jnp
inc
dec
jns
loop
and
loop
cmpsb
cmpsb
lcall
mov
jle
fcomip
clc
mov
lahf
fcomps
sbb
scas
push
inc
mov
lret
out
xchg
lahf
or
mov
inc
movsb
rcll
mov
rorb
es
jo
repz
adc
in
call
sbb
mov
scas
or
fs
imul
xor
adc
fnstsw
or
jnp
lcall
mov
into
pop
not
mov
jp
lret
jns
std
loop
lret
mov
or
lahf
xchg
movsl
mov
mov
adc
enter
daa
push
out
pop
mov
fs
mov
adc
test
cli
lahf
adc
mov
lods
rol
fstpt
push
leave
incl
xorl
dec
add
cld
push
test
lret
cwtl
ret
iret
cmp
movsb
sbb
into
shll
sub
scas
dec
push
or
aas
add
mov
mov
in
repnz
xchg
xor
or
sub
jecxz
adc
movsb
jg
and
sub
or
clc
cmp
fwait
push
sub
out
cltd
and
jmp
fdivl
cmp
mov
xor
xchg
daa
jae
push
scas
adc
adc
scas
mov
or
xor
out
add
adc
out
sub
sbb
out
mov
jno
data16
into
out
jns
mov
or
out
xchg
push
and
loop
mov
xchg
movsl
push
mov
ds
lock
popa
ficompl
cli
jae
and
cli
adc
and
jns
sbb
cmc
dec
mov
mov
icebp
mov
xchg
push
xor
bnd
and
pop
mov
test
loopne
jle
popf
call
aad
popf
cmpsl
js
stos
pextrw
jns
sarb
jno
rcrb
pop
in
inc
arpl
and
dec
leave
adc
in
xor
lret
cmpsb
scas
xor
inc
stos
inc
decl
es
outsb
repz
mov
add
jbe
gs
or
jno
or
int3
add
mov
lret
jp
jmp
fdivrp
dec
cmc
jmp
incl
mov
push
jle
xor
mov
cltd
jnp
push
mov
xchg
sbb
movb
decl
daa
push
or
fidivl
mov
dec
test
fidivrs
sbb
xor
out
out
lds
lret
cmp
out
cmp
pop
testl
fisttps
fcmovbe
xor
mov
mov
add
stos
shl
push
shlb
cmp
sbb
xchg
fnstcw
enter
and
or
clc
out
mov
push
mov
icebp
stos
rcrb
jno
sub
call
pop
pusha
out
cwtl
adc
rorl
ja
jecxz
jbe
push
jecxz
inc
fistps
xchg
xor
aas
add
sbb
cmp
bound
scas
cld
cmpsl
and
inc
adc
dec
sub
or
mov
lret
int
mov
mov
daa
jle
inc
mov
xchg
ss
add
xor
ljmp
and
dec
into
push
or
xor
cmp
sub
inc
xchg
aad
imul
mov
in
test
push
inc
inc
xchg
repz
inc
pushf
fnstsw
sbb
repz
gs
sbbb
pop
mull
movsb
loop,pt
in
ja
bound
adcb
ds
pop
fwait
in
and
inc
les
outsl
jnp
mov
sub
ljmp
push
sbb
add
dec
cmpsl
pushf
lea
pusha
xor
insl
dec
cmpsb
ja
jno
fdivl
and
sbb
pop
test
mov
mov
fsincos
clc
fwait
jle
daa
daa
loope
in
add
push
out
push
out
push
mov
pop
dec
mov
mov
cmp
mov
push
mov
lret
push
pop
sbb
cwtl
xor
cld
push
shlb
and
lcall
inc
dec
jl
call
fstpl
call
lret
shr
stc
add
or
or
rorl
push
push
scas
iret
sub
lret
pop
lods
push
sub
mov
pusha
xor
inc
xchg
negl
adc
pop
cmp
rcrl
add
mov
mov
rcr
aas
cltd
sahf
aaa
fisttps
inc
pop
sbb
push
rorb
adc
push
and
cmp
jo
or
cmp
mov
in
mov
aaa
ret
push
pop
cmc
push
imul
imulb
push
mov
jp
cmp
mov
inc
pushf
jecxz
sarb
ja
stos
mov
and
movsl
sbb
mov
std
fcompl
lcall
pop
lods
js
cmp
push
pop
sbb
cli
push
cmc
loopne
push
mov
aas
push
lods
hlt
push
push
lods
in
push
fsubr
sbb
cmc
cmp
xchg
sub
mov
std
push
push
adc
sbb
add
inc
rorb
call
lock
adc
xor
js
jmp
mov
pop
icebp
in
mov
add
in
fsub
cmpsl
mov
jbe
push
cli
popa
jns
sub
or
xor
sti
sub
dec
jne
loopne
or
fs
add
lock
mov
xchg
mov
outsb
pop
push
cwtl
daa
rcl
sbb
or
orb
mov
fisubl
xchg
push
mul
xor
test
sub
pop
jl
repnz
push
out
scas
in
stc
out
cmc
or
fistl
inc
mov
pop
mov
aaa
or
cmp
pushf
nop
out
shlb
cmp
sarb
ds
or
push
out
ss
aam
mov
into
cmpl
popa
bound
dec
cmp
dec
std
sahf
jnp
mov
test
pop
mov
lods
jg
xchg
clc
outsb
pop
xor
push
mov
movl
aam
jmp
jmp
aaa
je
pop
rol
cltd
inc
mov
fcomip
xchg
pop
outsl
jge
add
fidivrs
adc
stos
jecxz
lods
fdivp
fildl
pop
out
push
popa
mov
imulb
es
setno
call
shrb
pop
mov
lea
xor
sub
pop
fcom
or
mov
in
test
mulb
jecxz
xchg
test
push
xrelease
and
or
push
in
inc
sub
pop
push
fucomip
cmc
xor
mov
push
or
into
ja
pushf
mov
js
je
mov
xlat
jo
insl
push
out
paddsb
addr16
bound
repnz
fucomip
cmpsl
cmpl
fsubl
aad
push
adc
stc
into
sbb
stos
scas
sub
lcall
adc
adc
mov
loope
cld
jne
imul
add
cmp
and
outsb
adc
xor
cmp
mov
jne
sub
inc
js
sbb
fdivrl
hlt
xlat
sbb
mov
or
mulb
sahf
mov
in
lods
call
mov
dec
shl
pop
mov
lahf
rcrb
fstpt
sub
and
and
lds
repz
mov
mov
cmp
daa
fmul
cs
jg
scas
movsl
loope
mov
or
mov
sbb
xor
daa
sub
mov
scas
sbb
cmp
pop
jns
out
mov
pop
jno
scas
pop
neg
mov
popf
pop
pop
icebp
in
dec
mov
add
movsl
cmc
clc
dec
nop
mov
sub
addr16
mov
call
sbb
or
xchg
lods
stc
push
xchg
addb
pop
add
mov
inc
cmc
xor
jg
imul
lods
mov
js
nop
sub
xor
aas
ret
icebp
xacquire
cmp
cmp
aad
dec
cmpb
xlat
ret
mov
mov
mov
sbb
in
stc
pushf
add
stc
add
scas
mulb
pop
stos
daa
imul
daa
imul
jns
xor
push
sarl
fmuls
es
mov
xchg
pop
xor
mov
mov
stos
pop
pop
std
mov
jns
xor
push
testl
lahf
dec
cltd
inc
stos
orl
xchg
jmp
fwait
jl
repnz
popf
popa
mov
mov
or
inc
mov
mov
pop
xchg
jo
mov
test
inc
sub
iret
jne
adc
imul
dec
inc
shll
push
dec
push
push
sub
or
imul
repz
add
je
sbb
aad
std
jmp
mov
bound
fdivl
xchg
loope
addr16
cmpb
add
mov
cli
pop
xchg
xchg
in
and
sbb
bound
pop
dec
or
int
inc
xchg
jg
movsb
std
imul
inc
pop
in
xchg
bound
nop
mov
jo
push
pop
jle
xchg
adc
jno
sub
cmp
adc
sub
mov
add
ds
fadds
shrl
test
insl
jle
mov
sub
dec
jge
addr16
dec
mov
adc
andl
scas
and
mov
in
imul
xchg
xchg
cmp
int
loop
ds
mov
nop
xchg
cmp
insb
icebp
dec
fisubrl
pop
int3
sbb
mov
sub
ljmp
mov
lods
shll
add
xor
pop
push
xor
call
lret
rcl
fwait
ja
aaa
movsb
mov
adcb
jge
push
pop
sbb
fwait
dec
test
xor
jge
xchg
mov
mov
scas
xor
pop
mov
and
ret
lods
mov
fld
add
loop,pn
mov
mov
adc
xchg
dec
push
dec
or
and
icebp
and
aam
test
fwait
js
into
movsb
cmp
aaa
cmp
icebp
rcll
xor
pop
adc
imul
aaa
jno
jecxz
lahf
dec
lret
bound
out
mov
sub
outsb
mov
bound
or
cli
sbb
pop
jle
clc
inc
out
push
mov
insb
and
dec
sbb
mov
mul
adcl
shll
xor
jle
ret
outsl
mov
xchg
jmp
pushf
push
pop
cmp
and
aas
inc
call
scas
scas
test
pop
xor
call
dec
rcl
sbb
rcll
fsubl
xor
out
jne
or
cld
mov
pusha
test
pop
cmp
or
test
sub
out
cli
insl
mov
xor
mov
popa
popa
andl
in
add
mov
xor
xor
xorl
add
out
cmp
xor
out
in
pop
pop
jecxz
push
push
dec
test
push
sbbl
or
lret
pushf
sbb
inc
sbb
cwtl
pop
ret
xchg
lret
sub
sbb
push
std
in
xchg
jbe
and
sahf
and
add
pop
loope
add
loope
dec
mov
notl
cmp
xchg
sub
ja
insl
ret
aas
outsl
mov
insb
sbb
fsubrl
cmp
scas
or
imul
mov
jno
aas
movsl
mov
or
add
cmc
jmp
push
pop
cwtl
leave
lock
mov
sahf
mov
sti
xchg
adc
push
mov
jae
lcall
adc
or
push
add
push
xor
daa
mov
pop
jnp
popa
xor
mov
mov
sti
jae
dec
popf
mov
leave
addr16
imul
leave
dec
add
sub
scas
arpl
jp
lret
mov
and
dec
gs
jne
cmpsb
in
cltd
adc
hlt
push
mov
pop
xor
push
push
mov
sub
outsl
bswap
xchg
pop
xchg
aas
sbbb
in
and
dec
xchg
dec
inc
movsb
sub
fs
iret
call
in
mov
inc
out
popa
jmp
mov
or
dec
stos
jae
xchg
xor
pop
dec
pop
in
xchg
sub
mov
sarl
in
cmpsl
xor
and
jo
sbb
subl
mov
test
pop
adc
xchg
sbb
adc
xchg
jne
insb
ficoms
inc
rep
cmp
cmc
lods
mov
push
xchg
testb
inc
stos
push
adc
addr16
fnstcw
add
idivb
xor
dec
in
sbb
mov
movsb
mov
jo
jbe
fcmovnb
jae
and
adc
repnz
lcall
inc
outsl
cmpsl
sbb
int
in
xchg
push
dec
jmp
mov
insl
mov
push
std
add
jbe
aas
ret
call
std
test
mov
jg
jns
in
lret
lods
mov
and
xchg
sub
roll
scas
loopne
aaa
clc
push
sub
sahf
dec
pushf
ret
sbb
sbb
cld
test
inc
enter
outsl
xchg
xlat
cmpl
push
shrl
lods
pop
arpl
arpl
mov
mov
or
jne
mov
ror
jb
jns
leave
inc
es
icebp
xchg
xor
xchg
shrl
out
or
dec
and
mov
lods
loope
mov
call
push
int
inc
mov
mov
dec
fsts
sarb
ljmp
jge
fists
pop
jg
jne
cld
or
shll
inc
clc
pop
testb
dec
or
lods
out
dec
adc
test
shlb
dec
and
popf
rcl
pop
sub
rcrl
movntps
cltd
jmp
xor
push
push
jb
jno
rorl
dec
inc
ja
push
sub
sbb
mov
cmp
adc
in
test
mov
icebp
mov
leave
outsl
movsb
push
xchg
lods
sub
sti
cmpsb
add
or
jns
push
in
push
jg
out
imul
imul
lahf
js
adc
gs
cs
mov
sbb
inc
mov
sbb
inc
mov
insl
add
sbb
mov
jae
bound
scas
push
xor
mov
adcb
mov
jnp
rclb
cli
sahf
xor
dec
rol
push
mov
mov
and
lods
mov
jle
icebp
mov
out
rcrb
rclb
jmp
ret
addb
adc
or
push
andb
or
xor
jecxz
cld
icebp
xlat
mov
and
mov
lock
xor
test
xor
mov
push
mov
cmp
insb
sub
pop
lahf
push
jp
sbb
jno
imul
jnp
or
add
insl
sbb
shr
push
cs
scas
je
out
sbbl
test
cltd
popf
pop
mov
mov
xor
ret
cs
pushf
add
mov
add
xor
dec
ja
xchg
jne
jle
adc
mov
xor
ret
and
popa
pop
adc
stc
fmuls
jge
pop
shl
sbb
mov
xor
mov
sahf
in
loope
out
xor
andb
push
add
xchg
pop
in
lahf
mov
es
cmpl
pop
bound
and
fsubl
mov
dec
popf
xchg
into
and
in
jle
push
adc
and
sbb
sub
mov
pusha
outsl
push
push
mov
cmp
nop
inc
sarl
neg
out
lret
cmpsb
popf
hlt
inc
add
push
sbb
inc
movsb
adc
push
bswap
cld
jp
sbb
repnz
inc
jecxz
jmp
in
adc
aad
xchg
jg
push
mov
lcall
adc
gs
divl
mov
push
cmp
aaa
xchg
cwtl
popa
jle
roll
lea
push
xor
ss
pusha
in
xor
add
mov
daa
xchg
dec
gs
pop
mov
pop
jmp
out
out
and
mov
pop
cmp
mov
mov
push
jb
insb
mov
xor
addb
sbb
test
sub
mov
aas
jnp
fwait
int
fildl
into
xchg
enter
cmp
cmpsb
cltd
lret
mov
cmp
aad
sbb
mov
xor
insl
add
jns
cmp
push
pop
sbb
push
mov
push
mov
cmp
or
in
mov
loopne
or
sahf
pushf
pop
rclb
and
lcall
icebp
mov
or
shrl
leave
jb
xor
add
jge
movsb
insb
jae
sbb
lods
dec
je
aam
adc
popf
push
jb
les
in
jl
adc
and
cmp
ficoml
enter
and
xor
or
fbstp
and
insb
dec
xchg
out
add
cltd
jmp
adc
sarb
or
inc
add
std
bswap
sbb
test
adc
xchg
aas
or
iret
mov
jb
and
mov
pop
stos
sbb
ffree
aad
xchg
cmpsb
sub
popa
add
neg
dec
insl
and
out
in
call
in
xor
adc
lret
xchg
mov
cmp
enter
add
pop
sub
inc
fsubr
fs
cmp
inc
imul
sub
mov
daa
jne
xor
jo
dec
mov
push
jns
inc
push
stc
ret
push
lret
mov
cmp
and
insl
cmp
in
cmp
iret
mov
pop
and
lcall
outsl
jmp
xchg
xor
sahf
ficompl
nop
stos
xchg
dec
mov
lret
iret
test
add
stos
xchg
pop
das
mov
adc
sub
push
out
aad
pop
out
jge
sub
and
sbb
out
sub
xchg
jae
test
and
leave
lods
sbb
dec
cmc
ljmp
mov
inc
mov
push
cmpsb
cmp
cmp
push
ret
push
dec
aas
out
mov
aas
loopne
aad
or
xchg
js
jl
out
out
clc
mov
and
add
jg
scas
dec
imul
dec
pusha
adc
mov
lods
daa
orb
iret
add
pop
mull
xor
mov
test
dec
arpl
clc
pop
inc
cmp
and
int3
scas
iret
xchg
movsl
out
pop
cmp
cltd
nop
stos
shrl
outsl
push
aam
out
dec
rcl
lock
push
xor
das
stos
inc
mov
sbb
ss
dec
sti
push
cld
mov
loop
ljmp
sub
je
inc
sbb
hlt
adcl
out
scas
fildll
xlat
leave
sub
sbbl
pop
icebp
ds
add
xchg
into
ljmp
out
mov
sbb
into
xor
outsb
fsub
xor
ss
mov
insb
out
loopne
jecxz
js
mov
xchg
push
fldt
sbb
inc
add
dec
inc
lods
xchg
sbb
bound
jmp
into
out
and
pop
pushf
lret
mov
pusha
in
mov
xchg
add
int3
loopne
movsb
out
fildll
pushf
loopne
div
xchg
xor
repnz
loope
dec
mov
lea
jmp
jne
int3
jo
roll
and
mov
nop
aam
xor
fisubrs
cwtl
hlt
push
ds
fsub
cmp
out
adc
stos
jmp
lds
push
fcompl
fcompl
lock
cmpb
sbb
mov
and
repz
jl
xorb
mov
xor
mov
lea
jge
mov
fcmovnb
fwait
jle
std
lcall
clc
scas
out
imul
and
add
cli
cs
bound
cli
lock
ljmp
mov
imul
sbb
xchg
ret
icebp
pop
dec
push
insb
fcomps
cmpsl
xor
mov
xor
sbb
flds
mov
loop
dec
pop
fdiv
xchg
push
xor
cld
rolb
cmpsl
push
int3
pop
scas
push
insl
sbb
jle
jb
cmp
cmp
add
mov
inc
sbb
sub
add
sbb
sarb
std
sti
jbe
dec
sbb
loop
shlb
xchg
or
das
or
xor
pop
mov
pop
jne
lods
xor
mov
and
insb
mov
xchg
push
sbb
in
aaa
and
insb
dec
imul
sub
adc
fidivl
andl
sbbl
test
lds
shrl
leave
ret
mov
sarb
xor
cmp
shll
iret
push
lcall
icebp
scas
jp
pop
inc
rcrl
mulb
test
sbb
jg
loopne
lods
sbb
and
pop
sarb
icebp
dec
and
jbe
push
push
cltd
and
or
loope
fdivrl
out
inc
pushf
cld
add
daa
and
or
iret
arpl
into
mov
ja
scas
push
dec
inc
mov
add
xor
decb
in
jl
push
mul
das
cs
ret
inc
mov
jl
push
mov
mov
fidivl
jmp
pusha
mov
pop
xchg
dec
scas
outsb
pop
lret
and
mov
loope
adc
add
inc
mov
lea
hlt
out
mov
pop
sbb
pusha
lods
mov
inc
adc
movsl
adc
inc
stos
push
stos
mov
jne
out
xchg
jnp
cmp
xor
jae
jb
call
imul
ret
and
inc
rcrb
test
arpl
mov
mov
in
inc
add
repz
mov
lds
cmc
dec
imul
push
xor
or
pushf
lods
scas
sahf
xchg
in
mov
rorl
mov
fstpt
cli
inc
hlt
ss
jbe
mov
pop
les
dec
cmp
add
loop
shll
sbb
repnz
mov
fmuls
cmp
stos
cmpsl
cs
shl
fidivrs
and
sbb
mov
fmull
sub
jns
xlat
call
inc
xor
push
inc
adc
ficomps
sbb
mov
aas
addr16
iret
sub
adc
sub
dec
mov
jbe
mov
sub
xchg
adc
xlat
pop
adc
das
cld
cmp
xchg
cwtl
jo
in
les
outsl
sbb
xor
mov
cmp
popa
sbb
movsl
in
loopne
jg
fsub
shll
int
xchg
xor
loopne
insl
add
xchg
and
cmpsl
mov
shlb
jmp
pop
cmp
in
pop
cmp
and
mov
mull
sti
xchg
xor
adcl
push
icebp
out
ss
mov
xor
test
fnstsw
out
sub
lds
je
loope
shr
ficoms
clc
test
adc
and
xor
or
sub
lods
xor
pushf
xor
mov
fwait
inc
ja
inc
jae
mov
mov
shl
daa
imul
shll
pop
mov
add
cmp
in
pop
or
jle
push
in
lret
xchg
pop
mov
and
pop
mov
inc
in
cli
lods
mov
or
popa
repnz
dec
sub
call
xchg
enter
push
sbb
cmp
cmp
int
xchg
nop
mov
mov
mov
push
inc
adc
aam
mov
test
iret
sub
inc
or
mov
movsb
cltd
fs
dec
ret
xchg
jae
sbb
push
ror
xor
iret
ffree
mov
rclb
bound
mov
pop
mov
mov
in
pushf
cltd
push
xor
jmp
repz
fmull
jl
addr16
xchg
mov
repnz
arpl
add
cwtl
test
mov
sbb
sahf
mov
sbb
pop
js
jo
in
mov
and
mov
inc
in
cmp
shll
in
test
lret
pop
or
xchg
nop
push
xor
cmc
mov
in
sbb
aam
xchg
sahf
jp
or
lock
in
loop
pusha
inc
mov
xor
or
stc
adc
enter
ficoms
arpl
fst
cwtl
xchg
jno
in
rcll
adcl
imul
adc
cmp
mov
sub
inc
mov
iret
xchg
mul
ret
add
or
hlt
and
aad
inc
pop
sub
into
fldpi
lahf
in
jo
shrl
xchg
dec
outsl
pop
and
pop
andb
inc
movsl
fidivl
mov
int3
pop
xor
int3
adc
mov
push
iret
fnstenv
cli
mov
test
test
cwtl
aas
inc
adcb
xor
inc
nopl
xchg
mov
jp
mov
shlb
dec
jmp
jae
loopne
imul
adc
adc
mov
inc
shll
testb
mov
pop
stc
push
cmpl
popf
xor
in
dec
cmpsb
das
in
sahf
nop
jmp
xchg
fcmovb
or
shlb
dec
dec
jle
push
mov
lds
xor
mov
ljmp
std
dec
fs
push
pop
or
outsl
lea
js
and
lret
out
movsb
mov
dec
ficoml
mov
mov
mov
sub
inc
xlat
lahf
and
int3
hlt
push
call
pcmpgtb
mov
dec
mov
inc
inc
adc
mov
vmovdqu
or
fdivr
sub
leave
shlb
dec
mov
mov
data16
out
dec
or
mov
cmpsl
loop
filds
jo
shll
xchg
add
adc
inc
ds
adc
jae
dec
in
ljmp
nop
push
sub
pop
mov
xor
je
mov
mov
outsb
push
sti
fwait
mov
mov
jne
lods
mov
jl
movsl
sub
ss
loop
jbe
sbb
xor
inc
push
aam
jo
sbb
daa
mov
add
rcrb
gs
insb
imull
hlt
pushf
inc
test
pop
sub
fndisi(8087
out
jge
nop
test
sub
arpl
int3
dec
insl
gs
insb
mov
fs
mov
leave
add
sbb
push
jl
mov
lea
js
cmp
cltd
hlt
jno
mov
ja
add
hlt
mov
aad
xor
cli
cmp
sbb
cmp
push
and
xor
push
xor
jae
cmp
out
dec
sbb
test
jb,pt
ljmp
cmp
xchg
and
pop
mov
and
push
jno
in
mov
rolb
mov
int
cmp
dec
xchg
xchg
repnz
out
movb
fidivl
aaa
jo
inc
pop
push
movsb
outsb
daa
pop
cmpsl
sbb
add
aas
and
iret
stc
inc
cmp
push
mov
mov
out
jg
inc
loope
pop
mov
cmp
lods
push
jmp
loope
mov
fsubr
cli
push
mov
xchg
sub
sub
sbb
dec
xchg
popf
cld
ret
xchg
incl
stos
push
inc
insb
jo
mov
mov
dec
mov
pop
jnp
xchg
dec
jl
je
mov
out
arpl
or
in
rclb
adc
mov
and
fistl
pushf
sbb
dec
inc
js
xchg
sub
inc
aas
mov
cmp
sbb
out
mov
xchg
xchg
jl
aam
cmp
pop
cmp
jecxz
push
dec
aaa
fstl
cmpsb
dec
rcll
mov
data16
ja
xchg
scas
xchg
int3
ret
into
movsl
or
scas
jno
mov
xor
imul
fstpt
dec
fstl
int3
add
mov
lods
dec
popa
dec
xchg
push
in
add
sub
enter
xchg
inc
call
inc
mov
mov
test
rcll
dec
pop
and
mov
inc
xchg
dec
mov
cltd
in
adc
divb
mov
out
call
or
push
mov
cli
push
xchg
mov
and
or
dec
xchg
adc
sub
dec
cmp
pop
imul
je
sbb
mov
dec
add
mov
or
xor
cmpsl
cmp
jl
xchg
call
enter
or
pop
add
pusha
andb
push
push
push
xor
dec
push
daa
adc
cmp
gs
or
es
mov
pushf
fdivs
mov
and
mov
pop
lods
scas
ljmp
jecxz
sub
cmpl
xor
and
pusha
ret
fs
add
cmp
cmpsl
lods
cmpsb
inc
mov
cmp
and
mov
or
push
pop
aaa
mov
mov
pushf
idivl
iret
pop
inc
repnz
sti
addr16
enter
jmp
rolb
cmp
sub
pop
in
mov
ja
lods
dec
xchg
mov
cld
out
or
int3
mov
mov
dec
or
adcl
sub
aam
paddd
mov
and
cmp
push
pop
fildl
add
adc
jecxz
push
pop
inc
bound
push
divb
movsb
or
push
push
xchg
mov
xor
pop
mov
cmp
js
mov
xorb
dec
imul
negl
in
mov
pop
jmp
pop
sub
jno
lea
xor
out
jl
pop
cli
es
stc
repz
in
mov
lock
mov
add
mov
pop
movsb
cmpsl
jb
sbb
repz
xchg
mov
fcoml
mov
mov
repnz
xor
fwait
add
dec
pop
jp
pop
inc
sbb
cltd
xchg
lods
pop
ret
sbb
and
push
ror
in
dec
repnz
jecxz
dec
inc
mov
stc
outsb
into
adc
adc
test
jl
or
and
insl
int3
mov
jno
data16
in
testl
nop
xor
je
sbb
bound
or
mov
push
xor
mov
mov
insb
incl
idivb
scas
and
add
dec
out
fidivrs
sbb
jge
rcrl
push
nop
sub
sbb
ss
into
fwait
adc
push
inc
adc
inc
lcall
sti
or
fsubrl
lret
jg
xchg
sbb
xchg
push
bound
fimuls
mov
dec
mov
out
sbb
xor
scas
jl
pop
and
shll
dec
lods
cltd
xor
sub
addr16
sub
or
call
inc
mov
mov
jp
gs
pop
jl
inc
cmp
jg
shlb
lock
fdivr
pop
test
int
xchg
in
mov
and
xor
push
jecxz
fldt
sub
cld
lahf
ret
mov
dec
js
push
lcall
mov
push
ljmp
sbb
out
push
in
inc
pop
movsl
inc
add
fwait
mov
xchg
xor
jmp
bswap
mov
jecxz
vmovups
xor
jae
add
je
in
push
or
mov
enter
stos
cli
jae
adc
addb
out
addr16
pop
ja
xor
cmp
or
or
add
in
cmp
ret
jle
lods
call
jae
or
cmpsl
js
stc
xchg
mov
insb
sbb
jno
test
imul
scas
pop
and
sahf
xor
leave
push
or
imul
and
push
popf
outsb
sub
dec
icebp
outsl
fcmovnbe
popf
popf
insb
xchg
shll
ss
xor
iret
movsl
jno
mov
adc
popf
pop
push
sbbb
mov
mov
pop
jecxz
cmpsb
mov
lahf
das
ja
pop
inc
adc
and
push
lahf
pop
dec
xchg
xor
scas
adc
test
ror
adc
fstl
push
les
into
jle
pop
mov
mov
aas
cmp
lods
mov
nop
ficoml
movsb
sub
mov
inc
test
mov
add
mov
fsubrs
ja
popw
out
jno
jbe
cvtpi2ps
add
cmp
jne
loope
aad
sahf
sbb
fstpl
out
addl
sub
andb
fstpt
daa
jmp
add
fdivl
sbb
xchg
repnz
movsb
push
and
mov
enter
inc
inc
sbb
popa
std
scas
fistpl
mov
add
pusha
cmp
add
jl
cmpsb
lock
leave
ja
loope
mov
cmp
push
add
jae
xor
cwtl
mov
ds
or
or
xor
mov
and
dec
int3
jl
std
stos
inc
ret
inc
aad
hlt
mull
leave
dec
jnp
ss
adc
dec
nop
scas
dec
sub
sub
decb
sub
pop
and
int
mov
or
jb
mov
xlat
loope
push
dec
or
sahf
out
js
cwtl
push
in
inc
fistl
xlat
fs
sbb
pop
inc
lds
jno
xchg
in
mov
sahf
adc
fisttpll
icebp
out
xor
jl
sbb
insl
mov
sub
jne
fwait
push
mov
cwtl
loopne
xchg
push
hlt
nop
scas
add
imul
cmp
in
mov
fsubl
enter
inc
xchg
adc
scas
sub
loop
cmpsb
pusha
fisttpl
mov
xchg
imul
ja
xchg
inc
scas
jae
lret
sub
insl
xor
scas
dec
inc
dec
inc
fcoml
loope
adc
inc
inc
popa
in
sbbl
aam
and
outsb
inc
xor
shll
mov
push
pop
mov
out
lods
add
sub
mov
je
cmc
push
addr16
fisttpll
mov
jp
xor
pop
out
mov
int
insl
orb
int3
xchg
add
inc
sub
mov
out
cmp
pop
mov
or
or
pop
mov
out
negb
add
test
lcall
cmpsb
mov
ljmp
iret
inc
lds
push
sub
mov
sub
xor
push
int
movsl
fwait
stos
pop
lds
fstl
std
jle
pop
repnz
jo
fbstp
int3
jo
push
int
or
mov
popa
ja
outsl
outsb
sub
push
dec
loopne
mov
in
mov
mov
and
sub
movsl
jno
push
dec
adc
sub
jmp
cmp
or
add
mov
mov
int3
popa
pop
std
cld
mov
arpl
inc
bound
outsb
lock
mov
mov
inc
push
inc
repz
jns
test
push
outsl
clc
mov
ljmp
jo
xor
call
ss
cmp
je
lods
rol
jno
mov
pop
test
mov
mov
repnz
and
cld
dec
fdivl
lcall
subb
push
or
mov
add
int
sti
mov
pop
out
pop
arpl
sbb
hlt
mov
adc
jno
ja
shrl
xchg
sub
aad
test
xor
pop
fcoms
xchg
dec
ljmp
pop
jb
push
ret
push
push
sub
stc
add
adc
sbb
inc
shl
popf
xor
push
imull
push
lods
arpl
xchg
cmp
mov
ss
loope
jb
sahf
sarl
adc
cmp
pop
out
popf
shrb
js
sub
mov
mov
roll
popa
out
call
ljmpw
lcall
movsl
xor
jae
cs
jmp
int3
xchg
push
xchg
outsl
ret
mov
in
cmpb
cmp
and
add
push
push
add
xchg
cmp
daa
shrl
mov
rclb
push
jb
jnp
inc
xlat
pop
push
jmp
sbb
and
test
cmp
sti
dec
ret
jge
decb
insl
and
sub
fcoml
xor
cwtl
mov
sbb
fstl
inc
xchg
xor
inc
lods
lret
mov
inc
fs
pop
mov
mov
sarb
mov
mov
dec
add
mov
dec
mov
pushf
mov
fbstp
add
inc
xchg
repz
cwtl
mulb
push
outsb
xor
jno
mov
mov
adc
jmp
dec
push
popf
mov
adcl
inc
std
rcrl
add
mov
push
push
imul
dec
aad
xchg
cmp
cmpsb
cmp
aas
push
negb
sbb
xchg
repz
jns
push
pop
filds
mov
sub
mov
mov
fisttps
sub
insb
mov
push
loopne
add
stos
push
notb
aad
les
das
aas
mov
int
push
sbb
sub
rolb
pop
add
std
popf
cs
cwtl
aam
fs
jmp
repnz
icebp
cmp
fdivrs
mov
movsb
inc
sub
mov
les
test
in
lea
dec
imul
mov
aaa
loop
mov
mov
ljmp
sub
aaa
into
or
jb
xchg
sub
mov
fld
sub
out
lahf
std
mov
icebp
xchg
mov
ret
imul
mov
inc
das
in
rorl
popf
sbb
aad
pusha
loopne
sbb
mov
cld
lret
mov
sbb
lock
insl
fcmovne
pop
and
push
mov
es
testb
dec
inc
pusha
mov
popf
or
adc
adcb
push
sub
incb
jb
xchg
adc
movsl
xchg
jl
sahf
cs
xchg
and
inc
out
add
aad
push
push
outsl
outsl
cmpsl
cwtl
adc
sbb
mov
iret
movsl
xlat
pop
sbbl
xchg
mov
mov
test
cmp
mov
mov
outsb
push
cmp
cwtl
jmp
sub
jnp
dec
test
xor
repz
fsubrl
into
mov
cmp
cmc
xchg
out
std
fsubl
imul
loope
adc
pop
mov
mov
inc
sub
into
push
stc
decb
jp
sub
ret
in
sbb
orb
out
inc
subl
ret
addr16
adc
incb
incl
jb,pt
jg
enter
xchg
fwait
sti
cmp
xor
jmp
pop
add
adcl
xor
fdivp
and
in
mov
mov
fwait
sbb
or
xchg
fstpl
adc
mov
popa
add
imul
sarl
inc
jle
push
add
sub
inc
xchg
or
inc
sbb
lcall
outsl
mov
xchg
lret
mov
mov
addr16
inc
imul
std
sub
mov
aas
sbb
dec
mov
out
pop
adc
loop
push
int3
dec
sub
outsb
inc
xchg
sbb
or
dec
cltd
pop
pop
jecxz
and
push
push
lods
mov
leave
insb
add
xor
mov
outsl
hlt
fnsave
add
aaa
and
pop
adc
xchg
adc
pop
or
ficomps
mov
repnz
int
ret
inc
fs
pop
stc
std
out
into
movsl
dec
js
out
or
push
rcl
jnp
insb
dec
bound
lahf
mov
inc
xor
popf
add
lds
add
loope
pop
aad
mov
lods
loop
mov
iret
sbb
dec
aad
or
iret
into
mov
ret
pop
or
addr16
xchg
mov
sub
and
mov
cmp
add
push
push
movsb
lods
jae
test
sbb
test
mov
test
jne
jmp
repnz
gs
dec
dec
flds
push
cmpsl
jecxz
push
mov
mov
pop
xchg
or
mov
hlt
fisttpll
xor
xchg
mov
push
jge
fnstcw
arpl
clc
orl
push
insl
pop
out
outsl
pop
sub
sar
inc
cmp
adc
jl
not
inc
int3
mov
sub
fists
dec
daa
cli
repz
in
push
cld
lock
das
and
mov
stos
inc
jnp
les
mov
test
jbe
and
inc
mov
data16
sub
rcll
push
out
loopne
sbbl
test
divb
cmp
cmc
fs
ret
rorl
mov
xchg
or
adc
outsl
lods
cmp
ss
jge
clc
push
mov
sbb
lods
sub
adc
in
ss
pusha
fwait
mov
dec
iret
adc
fidivs
sub
dec
in
dec
fwait
push
in
repz
pop
and
cld
daa
sub
sbb
mov
mov
push
cmpl
iret
int3
mov
push
mov
jb
xchg
jo
add
int3
ljmp
or
xchg
inc
add
bnd
sbb
mov
mov
lods
add
push
leave
sub
push
lret
mov
or
jno
dec
nop
addb
push
jb
outsl
notb
xchg
jg
cltd
in
ds
out
pop
imul
mov
mov
cmpb
or
popa
and
lret
repnz
mov
test
mov
pop
and
cmpsl
cmpsb
jne
lret
push
or
pop
and
sbb
popf
push
js
out
xchg
push
or
dec
mov
lahf
push
cli
and
sbb
mov
icebp
add
mov
aam
inc
sbb
je
push
dec
add
sub
das
or
mov
test
cmpsl
adc
aam
shl
mov
xorl
stos
add
arpl
pop
inc
pop
insb
sbb
and
shlb
and
sti
jp
scas
fs
subl
fistpl
cmp
mov
sub
aad
jle
cld
jmp
add
ja
imul
fcoms
dec
mov
push
inc
sub
or
xor
mov
repz
fcoms
mov
add
leave
aaa
ret
lock
dec
mov
in
jae
clc
into
pop
mov
dec
fcmovu
ret
jne
jl
jg
xor
mov
stos
in
orl
xchg
aaa
aam
mov
movsl
xor
in
mov
adc
sub
fisubrs
scas
push
insb
aas
push
js
roll
inc
lcall
jnp
sti
inc
pop
test
in
xchg
rcrb
adcl
sub
push
out
mov
popl
popf
sahf
mov
and
outsl
mov
fbld
rclb
lcall
and
enter
lret
popf
push
popa
mov
sbb
xchg
sbb
push
mov
dec
scas
or
mov
mov
vmovdqu64
mov
pop
add
repz
dec
mov
adc
aad
pop
cli
aam
pop
pop
jno
rclb
cmc
xor
jne
mov
scas
sbb
pop
dec
mov
outsl
pop
pop
int3
ja
inc
insl
lcall
int
imul
sarl
lret
dec
and
andl
inc
cmp
xchg
jns
sub
ljmp
in
js
add
ljmp
dec
jnp
push
lcall
xchg
fildl
xchg
xchg
xchg
hlt
clc
mov
iret
call
push
test
mov
test
adc
pop
sbb
xor
xor
test
cmp
in
fsub
sub
xchg
push
inc
jo
lret
jbe
out
popf
loop
add
ds
adc
lds
adc
adc
adc
add
enter
mov
pop
mov
mull
cwtl
mov
mov
arpl
pop
pop
adc
jnp
xor
xor
jo
fadd
cltd
out
hlt
dec
mov
xorb
sbb
subb
lret
jno
xor
xchg
shr
adc
xor
push
xor
das
sub
mov
pop
xor
cmp
dec
jmp
test
push
xor
fsubrs
andl
and
js
out
in
scas
stos
sahf
cltd
out
sbb
es
clc
arpl
inc
mov
dec
in
int
ja
dec
inc
ljmp
jl
xor
lahf
shlb
movsb
dec
mov
add
ret
add
inc
mov
xchg
sub
pop
cmp
andl
sub
je
addr16
lcall
pop
loopne
pop
jg
cld
sbb
pop
adc
dec
cwtl
mov
and
mov
fcmove
mov
fiadds
in
leave
imul
or
cld
aam
dec
mov
add
pop
adcl
rcll
ss
fcoms
sar
iret
pop
or
mov
inc
jo
pop
movl
xor
aad
and
push
push
cmpsl
xchg
fwait
xchg
adc
in
dec
push
mov
adc
and
or
push
lcall
mov
dec
pop
test
pop
outsb
push
fildl
scas
fsub
xor
fwait
adc
and
mov
xor
xchg
xlat
sub
shlb
call
inc
inc
int
int3
inc
sbb
ficoms
or
insl
inc
pusha
aaa
dec
jg
xor
and
add
push
sbb
stc
inc
add
mov
dec
inc
inc
psubw
jecxz
loopne
daa
fs
fwait
or
lods
les
xor
add
int
mov
push
inc
inc
scas
aas
jge
clc
mov
and
out
ror
stc
fisubrs
in
outsl
fcoms
push
popa
lods
popf
xchg
jb
and
xor
cltd
arpl
dec
push
addl
jns
jbe
add
mov
sub
lds
xor
dec
sbb
std
aaa
mov
jo
aaa
cmp
add
sbb
and
xor
mov
hlt
or
mov
dec
imul
xchg
mov
cmp
jne
cmp
adc
repz
rorl
shll
mov
popa
outsb
ret
aad
fwait
outsl
lcall
push
cltd
insl
mov
mov
insl
pop
lahf
pop
adc
sbb
outsb
pusha
lea
inc
fwait
call
leave
scas
ljmp
adc
loope
dec
mov
pop
adc
addr16
add
sbb
movsb
sbb
subl
push
jg
je
xchg
loope
mov
gs
into
daa
popw
pop
pop
push
or
mov
orb
mov
lock
cmp
pop
cmp
movsb
std
and
fbstp
push
mov
sbb
jnp
push
pop
add
jl
fisubrs
xchg
lock
or
lea
or
inc
lock
dec
sbb
outsb
push
cmp
sbb
andb
out
insb
rcrl
pop
popf
imul
xchg
mov
je
xchg
lods
mov
rorb
clc
inc
jle
jge
inc
sub
mov
dec
jae
out
xchg
in
jle
sbbl
jecxz
jl
loop
ss
arpl
push
xor
dec
push
cmp
hlt
inc
mov
bound
pop
leave
adc
mov
dec
push
pop
mov
mov
cmp
xchg
push
xchg
pusha
jmp
outsl
mov
add
das
fs
push
or
addr16
rclb
xchg
in
mov
jecxz
jl
imul
cwtl
pusha
jge
xor
daa
mov
cmp
imul
add
testb
dec
test
push
insb
push
fdivrl
push
lcall
sub
leave
jae
mov
call
js
pop
cmp
repnz
sbb
xchg
imul
emms
sbb
mov
pop
cwtl
aad
cmpsb
jl
loope
sbb
push
inc
mov
popf
cld
je
movsb
test
fs
test
pushf
jg
rcll
pop
repnz
cmp
mov
cmp
rolb
ficomps
insl
fwait
mov
jle
call
pop
jle
xchg
push
pusha
dec
mov
cmp
add
sbb
aad
dec
fstl
inc
shl
sbb
lret
pop
lods
rorl
popa
adc
and
repnz
xor
add
push
pusha
sahf
xlat
sti
jbe
add
fidivl
fs
jbe
inc
mov
clc
lret
pop
push
cmpsl
lcall
pop
lock
icebp
jae
or
add
mov
xchg
rcll
jge
cmp
scas
fwait
incl
cmp
cmp
jb
movsb
xor
or
push
xor
cmp
lods
mov
mov
sub
sbb
fwait
sub
loopne
dec
dec
in
and
outsl
mov
pop
mov
adc
in
jle
es
mov
push
stos
mov
and
mov
addr16
and
jecxz
cmpsl
cli
add
xchg
inc
ljmp
or
inc
push
mov
mov
or
movsl
jnp
decb
inc
sub
iret
mov
xchg
pop
into
rcr
inc
aaa
push
inc
mov
push
mov
sub
xchg
push
aam
mov
data16
mov
mov
xor
sub
cmp
jb
daa
cmp
outsb
push
test
cmpsl
sub
fwait
into
sub
les
sarb
pop
insb
das
mov
pop
out
mov
adc
js
scas
pop
push
xor
repz
addr16
mov
sbb
loopne
jmp
and
push
fadd
shlb
or
jge
cli
insl
outsl
iret
fsubs
cmp
scas
cmp
adc
push
add
or
fcomip
adc
outsb
daa
out
ja
sbbl
stos
mov
xlat
jge
mov
les
addr16
dec
test
mov
add
dec
xchg
push
inc
xorb
pop
clc
sti
cmpsl
int
push
jle
in
xchg
gs
mov
mov
out
test
jnp
mov
jae
popf
xor
mov
subl
fisubl
xchg
dec
int3
mov
and
xor
inc
stos
xchg
mov
in
and
mov
mov
scas
andl
test
lods
dec
xor
dec
jb
out
fdivr
fwait
lea
xchg
sbb
jo
sub
cli
cltd
and
xchg
lret
stos
xchg
adc
xor
pop
add
adc
pusha
repnz
rcrb
jo
es
out
jb
test
insl
in
scas
sarb
adc
dec
movups
pop
jmp
cmp
sbbb
adc
enter
and
mov
xchg
add
outsb
mov
stc
adc
ss
add
and
and
or
adc
icebp
fsubl
bound
mov
aas
js
pop
jmp
xchg
xchg
scas
jle
jno
sbb
cwtl
sbb
mov
insb
sar
jae
jmp
cmpb
jge
push
mov
inc
imul
and
shl
mov
mov
cwtl
cli
inc
mov
add
add
inc
mov
cmp
out
daa
pop
jmp
xor
repz
mov
jo
int
xorb
repz
adc
sbb
adc
sub
sbb
push
mov
dec
or
out
or
dec
sahf
adc
aam
mov
jle
or
jl
sub
push
push
fwait
jne
lret
dec
push
pop
in
es
pusha
jb
jae
cwtl
insb
pop
gs
std
test
inc
shrb
cmp
mov
shll
outsl
dec
imul
jle
cmp
shlb
cs
stos
push
stos
mov
mov
call
out
sbb
sahf
fs
jg
loope
je
mov
rcrl
repz
mov
lea
add
mov
jle
and
movsb
pop
add
mov
and
cwtl
arpl
adcb
pop
test
mov
ja
pop
sub
xor
sub
mov
mov
shrl
loop
jmp
mov
cmp
insb
adc
ficompl
imul
roll
bnd
push
xlat
mov
ds
push
mov
fwait
xchg
push
pop
ss
adc
fcoml
fsubrl
ja
nop
je
add
in
idivl
jl
sub
enter
cld
mov
jo
jmp
push
pop
aam
push
mov
cs
adc
cmc
aas
lock
loope
test
in
ds
push
rorb
mov
insb
int3
mov
sbbb
iret
xlat
leave
out
xchg
mov
pop
mov
or
jnp
ret
mov
jl
fidivrs
call
pop
xchg
pusha
push
shr
pop
pop
into
jae
test
mov
loop
mov
sbbl
and
clc
ret
aad
lret
and
test
sarb
sub
sub
sti
lds
icebp
dec
or
dec
xor
es
adc
push
jge
jno
ds
xor
xchg
sub
es
js
jge
ljmp
cli
and
lret
loopne
cmpsl
xor
cs
es
call
jae
aaa
jnp
stc
movsl
inc
dec
mov
andl
pop
add
add
insl
inc
xor
mov
lock
push
outsb
push
cmp
add
xor
insl
sarl
or
mov
xchg
mov
roll
xor
pop
adc
fcomi
or
addr16
or
and
push
ret
sub
jb
mov
fcoms
movsl
sub
ss
mov
cltd
sbb
cltd
add
mov
jb
stos
hlt
mov
shlb
xchg
movsl
and
scas
xchg
scas
dec
test
sub
adc
rclb
xchg
mov
sub
loope
test
fidivs
sbb
adc
cmp
xorb
insb
add
out
xor
imul
jl
adc
sub
decb
jnp
mov
loop
adc
loope
lock
xchg
call
mov
or
jmp
inc
or
inc
negb
push
aaa
pop
hlt
out
bts
cs
xor
rolb
and
or
fbld
sbb
mov
xchg
in
push
mov
clc
mov
xchg
ret
xchg
or
mov
lret
sbb
ljmp
outsb
or
adc
inc
icebp
leave
in
dec
movsl
and
into
or
dec
xchg
cmpsb
in
and
xor
pop
loope
xlat
divb
xchg
dec
test
enter
and
and
movsl
push
aaa
xchg
pop
scas
cmp
mov
imul
scas
loope
cmp
jl
je
sbb
mov
lods
cmpsl
jnp
pop
out
or
scas
xor
inc
inc
jp
adc
lods
and
push
adc
cmp
loopne
fldenv
jo
adc
dec
mov
xchg
daa
fsubs
stos
and
pushf
and
and
cmpb
shrb
push
mov
repz
sahf
sbb
sub
test
push
add
loope
xchg
inc
pop
or
pop
lds
repnz
aas
sbb
xchg
mov
xor
pusha
cmp
xchg
cs
outsl
lahf
push
sbb
inc
unpcklps
mov
push
subl
aaa
push
cs
jg
nop
insl
stos
arpl
push
into
sahf
es
cmovne
fisubrl
jns
mov
pop
add
xchg
xchg
insb
push
xor
xchg
push
daa
xor
push
nop
loopne
cmp
into
sarb
test
mov
and
lds
ret
mov
jnp
mov
and
mov
or
xorl
aam
std
or
lret
mov
inc
mov
jl
stos
je
pop
jle
je
je
fchs
rcll
int3
mov
rcrb
sub
or
mov
push
imul
jge
lods
xchg
dec
jo
mov
push
stc
mov
data16
inc
push
pop
adc
pop
add
ljmp
in
aaa
mov
loope
test
fnstenv
jns
adc
cs
std
pop
xchg
jns
stc
gs
xor
inc
cli
and
mov
imul
das
add
cmp
test
xchg
mov
icebp
push
repnz
sbb
mov
add
xor
stc
cltd
push
push
call
xchg
ss
push
pop
sub
repnz
and
leave
mov
or
test
mov
adc
dec
jmp
adc
out
lret
fcompl
loope
popf
sub
mov
xchg
inc
xchg
adc
add
jae
add
ljmp
dec
outsl
pop
pop
add
cmp
sbb
scas
sbb
pop
std
mov
stc
repz
pop
popa
inc
clc
scas
push
movsl
insl
mov
jb
pushf
cmp
out
test
sar
fwait
repnz
shll
jp
pop
adc
adc
push
fisubs
cmp
mov
hlt
inc
xchg
or
sbb
add
mov
mov
xor
js
aas
mov
sbb
ja
mov
sub
idiv
clc
mov
lods
push
sbb
flds
jmp
add
xor
pop
out
push
xor
enter
movsb
out
mov
dec
lods
jmp
or
imul
cmp
popw
fdivrl
pop
sub
paddusw
jmp
popf
mulb
les
je
movsb
dec
xor
ds
fdivp
adc
push
clc
test
push
aam
movsl
or
add
pop
ja
imul
push
cltd
mov
jg
gs
push
xchg
in
mov
aas
cmp
or
mov
jg
cmp
mov
and
test
mov
mov
push
cs
in
mov
sti
push
cmovle
daa
xchg
xchg
jb
stc
dec
jmp
je
push
test
jl
push
mov
insb
pop
push
adc
nop
mov
fistpll
and
add
cmp
or
dec
add
dec
shll
mov
data16
mov
jnp
cwtl
mov
icebp
pusha
repz
or
call
push
imul
xchg
and
cmp
test
repz
and
bound
daa
out
adc
leave
movsl
mov
shrl
jle
xchg
adc
testb
ds
fsts
es
inc
push
pop
jae
add
loopne
das
jae
xchg
movsl
fisubrs
fsubrl
ret
inc
jns
push
xor
enter
int
sub
mov
jle
into
pop
xlat
xor
pop
enter
pop
jo
lahf
jmp
test
pop
lock
sbb
ds
cmp
xchg
mov
add
roll
leave
add
test
mov
xor
lods
hlt
lahf
fcoms
xor
shrl
mov
xchg
rcrl
xchg
sbb
insb
pusha
pusha
jns
out
or
or
pop
dec
push
hlt
push
mov
mov
cwtl
mov
inc
mov
add
mov
push
iret
xorb
outsl
pusha
gs
test
sbb
ficoms
lcall
jnp
js
jne
lahf
ja
lods
repz
cmova
imul
clc
fnstcw
mov
ret
scas
cmpsb
lea
mov
or
sbb
cld
out
pop
test
dec
gs
jle
movsb
test
rcl
xor
popf
mov
adc
or
test
nop
xchg
loop
push
jmp
jp
ja
inc
cmp
or
stc
jge
loop
lea
adc
pop
in
mov
xchg
mov
xchg
xchg
das
jne
test
mov
loope
inc
inc
subb
cmp
cmpsb
and
dec
mov
incl
dec
dec
add
inc
je
in
inc
mov
repz
stos
cmpsl
pop
cmc
call
add
xchg
or
sbb
jb
in
xor
test
push
stos
push
leave
lret
icebp
mov
xbegin
dec
inc
mov
mov
dec
mov
inc
pusha
xchg
orb
jl
push
ficoml
in
xchg
mov
sbb
sub
ljmp
cmpsl
fsubrp
mov
jb
shl
jmp
sbb
mov
cmp
push
lea
push
cmp
cmp
movsl
jle
mov
jno
add
cmp
or
jbe
pusha
test
in
stos
mov
mul
add
push
jge
and
mov
dec
cld
push
or
sbb
pop
icebp
cmc
scas
xchg
loope
cmp
out
lock
dec
int
pop
data16
movsl
inc
sub
inc
nop
ret
xchg
fwait
jmp
pop
je
enter
sar
pop
or
or
fwait
push
in
dec
mov
ss
decb
pop
call
jb
outsl
into
jno
je
nop
jne
sub
scas
aam
faddl
cmp
lcall
xlat
and
loope
lods
insl
cmpsb
push
pushf
loopne
jb
pusha
xlat
pop
pop
cld
sub
std
mov
jecxz
out
pusha
dec
call
enter
insb
dec
or
dec
fwait
pushf
push
ficomps
iret
mov
cltd
inc
xchg
stos
lods
inc
rclb
or
mov
icebp
out
jne
lcall
or
ja
push
mov
fsubrl
xchg
xor
into
pushf
in
lahf
sub
mov
xor
jo
stos
add
pop
mov
ret
pop
push
movsl
add
fsubl
inc
pop
aad
out
popfw
push
mov
arpl
insb
push
stos
xor
xchg
pop
test
enter
and
out
movsb
or
cli
sahf
scas
mov
fistpl
outsl
or
mov
shll
punpckldq
and
data16
pop
shll
outsl
mov
push
cwtl
sbb
xchg
stos
xchg
adc
or
mov
fdivl
test
stos
iret
sbb
add
cmp
hlt
lea
mov
push
rcl
ss
data16
sbb
rol
aas
mov
jo
jmp
iret
sub
push
clc
pop
jne,pt
into
push
cs
inc
and
sub
in
fcmovnb
add
and
roll
pop
xchg
pcmpeqd
dec
fdivs
dec
or
or
sbb
mov
jbe
cmpsl
jne
enter
pop
lretw
dec
mov
or
loope
call
loope
xchg
adc
ret
lcall
inc
add
insl
stc
push
pop
or
jl
iret
subb
xor
fcoms
push
and
popf
xchg
jne
mov
xchg
pop
out
and
int
inc
cld
scas
in
push
xor
and
stos
mov
stos
dec
jl
ret
shll
xor
mov
mov
adc
and
mov
and
fdivs
ss
and
mov
mov
jmp
ds
scas
pop
repnz
adc
inc
lods
lret
lret
add
cmp
sbb
push
nop
lcall
nop
xorb
int3
je
sti
push
xor
cmp
rolb
comiss
jb
dec
mov
or
cmpsl
ds
lahf
push
rorl
mov
cmpsb
fcmovu
xchg
fisubs
mov
cmc
int
mov
or
add
gs
xor
mov
scas
repz
sbb
mul
lret
push
movsl
xchg
sub
test
inc
neg
cmc
xor
jg
nop
cmp
xlat
lahf
or
mov
arpl
xor
jns
pop
or
mov
insl
mov
pop
jno
mov
or
sbb
in
push
sub
call
pop
loop
adc
subl
pop
cs
lret
jl
repz
shl
loope
xchg
imul
rcrb
int
test
lret
adc
push
sahf
sbb
mov
push
push
mov
test
xchg
fs
ljmp
nop
mov
cwtl
mov
je
mov
hlt
movsb
inc
leave
into
nop
popa
clc
js
mov
rcrb
xor
mov
aam
or
into
cli
mov
insl
aaa
pop
fbstp
cmp
hlt
les
out
shll
mov
mov
mov
sahf
subl
add
int
jmp
out
je
movsl
mov
lds
ljmp
xchg
jae
xchg
daa
cmp
cmp
pop
adc
xchg
imul
lret
std
inc
dec
imul
jb
out
pop
mov
pop
xlat
arpl
push
mov
and
cmp
adc
push
adc
dec
mov
jmp
andb
xchg
mov
aas
js
cmc
pop
inc
sub
or
pop
and
mov
cmpsb
shrb
add
push
lcall
push
jbe
test
sub
fcmovnb
sbb
dec
pop
les
jno
push
or
cmp
inc
dec
stos
xchg
xor
loope
div
jns
cmp
fistpll
daa
into
jbe
and
cmpsb
jns
jno
jne
sub
xor
lds
mov
mov
sub
lods
sbb
jmp
push
cltd
popa
mov
pop
push
pop
js
xchg
ja
mov
addr16
in
and
mov
mov
pop
jno
add
cmpsb
dec
movsb
jmp
je
push
pop
mov
cld
and
add
sub
pushf
out
fnstenv
lahf
imul
leave
dec
or
sti
call
je
sbb
sub
in
or
xlat
add
jno
in
not
jge
mov
aad
pusha
pop
cs
sub
out
inc
xchg
sbb
ficoms
cmp
xchg
fld
outsl
fsubl
lcall
lods
pop
dec
movsb
jnp
and
int3
xorl
dec
inc
push
nop
in
or
or
xor
xor
mov
std
movl
int
ret
pop
insl
ja
cltd
arpl
mov
addr16
cltd
out
mov
xor
push
and
xorb
and
mov
pop
aaa
cmpsl
mov
sub
xchg
lret
je
add
push
push
push
mov
cmpl
addr16
push
lea
fdivp
ficoml
pushf
xor
scas
push
add
int3
push
xor
imul
inc
je
mov
test
inc
add
loopne
sbb
adc
mov
cmp
icebp
repz
or
shl
inc
loope
es
call
xor
push
pushf
sahf
sbb
out
xchg
sbb
data16
sbb
jnp
testb
push
insl
rorb
test
in
movlps
cmp
mov
push
inc
push
pop
ret
nop
or
hlt
pusha
xchg
fsub
inc
bndldx
daa
testb
test
xor
mov
add
cltd
test
rcl
js
mov
rorl
adc
mov
push
dec
and
sub
xor
cmp
and
loope
aas
inc
jecxz
jae
les
les
out
sbb
pushf
pop
data16
lcall
and
aas
inc
mov
jge
inc
push
jp
xor
lods
clc
mov
sub
and
movsl
push
mov
and
push
sbb
cwtl
cmpl
and
adc
insb
cmp
sbb
fwait
dec
in
aad
sub
add
pop
int
or
mov
test
pop
cs
sub
test
push
inc
insb
out
sbb
dec
jo
jo
mov
cmp
data16
mov
mov
push
xchg
inc
mov
xchg
shlb
add
mov
push
sub
mov
pop
roll
mov
sub
adc
push
push
jb
cli
add
xor
and
xchg
sbb
stc
inc
xchg
test
fcoms
or
xlat
jns
test
mov
pop
push
das
notl
xor
pop
xor
shrb
mov
or
push
jg
jb
loopnew
scas
mov
cs
add
out
stc
divl
pop
repnz
lcall
mov
movsl
sbb
add
mov
sbb
icebp
das
dec
jmp
xor
incb
and
mov
into
sbb
rcrl
ret
mov
fidivs
insl
xor
sbb
rcll
loope
xor
pop
in
lret
xchg
in
dec
jle
int
xor
push
push
sbb
cmp
adc
test
mov
pop
incb
lcall
and
fnstsw
pop
mov
lret
sbb
cli
fldenv
cmc
stos
out
and
hlt
cmp
subb
sbb
mov
clc
outsb
cmpsb
fwait
mov
mov
decb
xor
xchg
push
push
mov
mov
add
push
mov
lods
sbb
jbe
mov
outsl
lds
or
sub
pop
xlat
dec
sbb
pop
imul
lret
stc
lret
cwtl
loope
xchg
cmp
push
les
mov
shll
xchg
mov
mov
mov
dec
mov
lcall
call
xchg
dec
inc
jmp
fs
loopne
add
inc
aad
pop
rcl
pop
and
stc
enter
sub
lret
cmp
cmp
lds
jns
out
lret
mov
clc
jmp
imul
inc
cmp
dec
out
shll
mov
dec
mov
jae
xchg
push
or
and
mov
or
jmp
xchg
cmpsl
fstl
pop
adc
xchg
mov
ljmp
mov
cmp
enter
add
arpl
loopne
cmc
sub
push
mov
sahf
inc
int
fbstp
xchg
in
xor
pop
divb
ds
push
mov
es
add
nop
pop
pop
add
inc
adc
movsl
ljmp
in
xor
add
aam
mov
lahf
cmp
les
nop
aas
dec
andb
imul
pusha
push
mov
popa
fucomp
mov
mov
call
sub
fisttps
insl
inc
jnp
add
fnstenv
inc
jmp
pop
push
add
xchg
pop
outsl
sahf
ljmp
xchg
sbb
les
shlb
or
fsqrt
fistps
dec
push
mov
pop
lds
enter
mov
jp
jns
inc
xchg
aaa
dec
push
int3
xlat
outsl
mov
in
xchg
cmc
fldenv
mov
orb
stos
imul
les
push
adc
mov
push
out
mov
xor
sbb
imul
leave
test
xchg
lret
inc
cltd
stos
fmuls
cs
testb
inc
dec
or
fistps
xlat
aad
jnp
movsl
jmp
ret
pop
push
push
xor
enter
jne
daa
xchg
data16
fisubl
jae
movaps
mov
lret
push
pusha
fistpl
ror
call
push
jl
fwait
hlt
sub
test
xchg
or
addr16
jae
aam
aaa
movsl
test
add
cmpsl
outsl
and
mov
push
sub
mov
negl
inc
and
insl
xchg
pop
push
push
xchg
mov
enter
xchg
push
jo
fucomip
test
cmc
push
sahf
fcmovu
call
adc
mov
shrl
mov
xchg
das
jmp
popa
loop
scas
out
rclb
xchg
mov
or
xchg
rorl
dec
mov
and
ds
js
insl
adcb
xchg
loop
iret
in
scas
fildl
bound
aad
xor
lcall
ljmp
sti
orl
sub
movsb
sub
pop
lods
in
jne
lcall
push
xchg
loop
xor
mov
sbb
or
cs
lods
sbbl
divl
outsl
jno
adc
jp
pop
mov
sbb
and
stc
daa
xor
mov
mov
out
jns
aam
mov
stos
loopne
js
jne
loop
adc
flds
scas
ret
xchg
sub
into
fcompl
mov
cs
mov
loop
mov
loop
jg
adc
xchg
push
pop
hlt
fucom
push
adc
add
push
loopne
call
lret
push
mov
inc
mov
push
pop
mov
mov
add
push
push
pop
stos
push
inc
icebp
mov
ja
int
adc
outsl
and
jl
ret
loope
repz
ss
scas
in
jbe
push
or
in
test
pop
rcrl
and
aaa
cmp
and
lret
xorl
mov
rcr
xor
add
mov
addl
sbb
and
out
dec
loope
call
push
push
add
addr16
sarb
je
int3
inc
popa
mov
dec
sbbl
int
and
test
popa
add
push
ja
popa
aaa
push
insl
mov
jno
push
xchg
fstpl
sub
test
lret
add
fisttps
xor
sub
pushf
lahf
cltd
out
add
addb
pop
insb
out
xchg
ret
ds
jmp
int
mov
dec
mov
push
outsb
cmp
dec
or
mov
mov
adc
out
outsb
push
jbe
enter
jb
push
push
addr16
add
in
push
mov
mov
xchg
fimull
iret
incb
cmp
or
xchg
in
sti
popl
or
mov
leave
inc
shlb
stc
fnsave
test
loope
call
in
mov
filds
xor
dec
pop
repnz
jle
adc
repz
pop
movsb
rol
notb
mov
fcomp
xor
ja
sub
xor
movsl
dec
push
es
mov
jae
push
or
mov
dec
out
ds
ja
mov
stos
fimull
lea
xor
shrb
xor
pop
adc
xchg
imull
mov
cmp
out
mov
jnp
sub
sbb
mov
cltd
rclb
ret
mov
or
cs
decb
aad
pop
push
test
fsub
sar
adc
popf
push
jp
inc
mov
fyl2xp1
and
enter
mov
and
movsl
pop
ljmp
sbb
inc
jge
mov
dec
and
into
stos
mov
sbb
push
mov
daa
xor
mov
fsincos
mov
pop
lock
fdivrs
or
xchg
and
mov
and
mov
shll
daa
jp
stos
in
dec
mov
jnp
mov
aad
cmpsl
loopne
jmp
jne
ficompl
aad
ret
dec
and
shll
les
loopne
jp
mov
jo
out
aam
pop
add
test
ret
mov
or
idivl
dec
lods
sti
aaa
or
jo
mov
xchg
inc
in
or
iret
inc
mov
lcall
lds
xchg
inc
imul
mov
dec
fists
lret
or
data16
sub
das
inc
dec
dec
sbb
adc
mov
push
adc
lods
test
push
mov
setg
adc
pop
pop
lcall
mov
movsl
mov
jecxz
mov
push
push
rclb
es
jb
adc
xchg
fcompl
or
mov
insb
add
stos
mov
mov
mov
mov
adc
cmp
inc
jno
jns
call
or
dec
popa
sbb
iret
mov
or
addb
mov
lods
data16
mov
inc
int
mov
out
jne
sarl
int3
mov
fsts
mov
inc
sbb
inc
lret
lea
ja
inc
in
jb
dec
fistps
sbb
cli
imul
xchg
stc
daa
fimull
lret
cs
jecxz
push
dec
or
fcmove
mov
jmp
das
sub
dec
add
leave
mov
psrld
add
add
adc
push
pop
int
add
dec
sub
stos
cmpsb
imul
mov
mov
ss
stos
cmpsb
inc
mov
lret
mov
scas
xor
xchg
sub
add
mov
enter
ja
cs
lret
and
push
aam
ret
insb
loope
or
dec
outsb
ja
jle
pop
adc
sub
addl
mov
clc
jo
lahf
adc
fmul
xchg
loopne
call
out
push
push
adc
mov
push
adc
pop
fcompl
add
mov
xchg
sbb
sti
add
pop
push
adc
sti
xchg
iret
mov
cltd
pop
scas
dec
sbb
jle
scas
bound
lcall
pop
add
push
mov
or
mov
rol
sti
rol
push
push
lods
jmp
dec
xor
push
xor
mov
sub
je
into
testb
dec
push
fdivr
subb
out
loope
mov
jae
mov
xlat
jns
out
jns
idiv
jge
jp
cmpsb
push
xor
sbbb
and
mov
xchg
sub
cmp
cmpb
aam
push
out
dec
or
inc
mov
rol
jnp
popa
xchg
cmpsb
pop
or
arpl
mov
fistps
jns
push
ljmp
ljmp
jg
adc
dec
dec
sti
add
jl
movsb
inc
sbb
test
fimull
test
sbb
divb
push
test
push
adc
mov
push
jmp
fidivs
dec
notl
decb
jl
cmp
pop
enter
pop
xchg
std
pop
cmc
pop
je
arpl
into
and
ret
jl
push
jl
mov
stos
pusha
sbb
inc
push
inc
insb
neg
xor
loopne
popa
pusha
jnp
sbb
adc
and
sub
cmpsb
ds
data16
andb
divb
in
jo
xchg
int3
jb
push
and
in
scas
mov
cwtl
in
cld
pop
leave
ljmp
mov
dec
jg
aaa
sub
nop
sti
sarl
pop
xor
inc
fs
lret
jns
xlat
cli
xor
ss
notb
enter
sbb
cmp
hlt
ss
dec
repnz
ficompl
loopne
pushf
dec
lret
fbld
outsb
and
int3
or
sahf
mov
lock
mov
dec
mov
aaa
cmp
push
sbb
imul
or
add
inc
xor
pushl
int
add
aad
rol
jle
dec
pop
xor
daa
dec
jbe
mov
hlt
popa
lcall
pop
mov
and
pop
adc
add
xchg
test
pop
mov
imul
outsl
mov
mov
sbb
push
ficoml
in
xor
mov
outsl
push
dec
js
or
shll
mov
push
push
inc
xlat
adc
js
or
push
sub
xchg
shl
or
cs
jnp
jb
inc
addr16
cmpsb
adc
test
arpl
mov
fistl
sti
pop
jmp
mov
test
or
sarb
pop
rep
add
add
call
xor
popa
shlb
pop
cmp
or
loop
xor
arpl
sti
movsb
aaa
in
sbb
mov
fldenv
mov
push
jo
cmp
jbe
fidivrl
mov
mov
cwtl
addr16
jno
scas
adc
clc
jne
mov
jb
xor
cmp
lahf
mov
sbb
testl
pop
stc
adc
into
mov
js
call
pop
inc
das
push
and
out
test
insb
dec
sbb
aam
pop
add
gs
je
out
das
dec
mov
cmpsb
mov
pop
stos
lcall
cwtl
inc
jge
jle
jno
push
xchg
xor
fmull
push
lea
inc
fistl
jbe
jp
dec
adc
lahf
cwtl
lock
push
pusha
addl
aad
cmp
insl
jae
mov
inc
cmp
lcall
shrb
lret
addb
add
jns
jmp
nop
loop
mov
push
lods
pusha
dec
daa
or
das
repnz
sbb
jnp
pop
or
popa
test
inc
cld
push
sti
push
adc
cmp
imul
out
jmp
ljmp
mov
sub
xorl
mov
pop
inc
fisubrs
imul
sbb
dec
adc
shll
sbb
and
jmp
inc
inc
mov
mov
imul
bound
out
cltd
dec
subl
xor
mov
adc
push
adc
dec
jmp
add
ja
outsb
pusha
rolb
dec
fwait
out
dec
into
and
jecxz
daa
or
repnz
lahf
test
mov
mov
aas
divb
lahf
imul
jne
enter
lret
cmp
mov
inc
xchg
cltd
lds
movsl
mov
and
jmp
into
adc
lcall
push
sbb
enter
movsb
mov
xorb
inc
mov
push
js
sahf
pop
mov
or
xor
push
push
and
mov
xor
popa
jecxz
mov
lahf
push
insb
addr16
test
mov
in
add
pop
jl
stos
cmp
repnz
push
sahf
mov
jmp
jae
test
enter
lock
aam
mov
xor
and
bts
and
adc
mov
loopne
and
and
fcmove
pop
dec
mov
out
adc
sti
mov
test
pop
inc
or
repz
and
cmp
rclb
xor
push
xlat
in
rolb
into
xchg
inc
fbstp
inc
pop
test
jbe
sbbl
lods
mov
cmp
gs
mov
ror
mov
fdivrl
and
scas
pop
and
mov
gs
dec
pop
or
add
test
out
mov
aas
in
stos
repnz
ret
pop
lods
xor
out
mov
xchg
mov
cmp
insb
cmpsl
dec
pop
dec
xchg
fwait
cmpsl
cmp
leave
pop
jno
jp
dec
lock
push
mov
mov
jmp
mov
jg
cmp
push
test
cmp
ret
aad
sbb
inc
insb
aaa
fwait
in
add
cmp
push
push
mov
jecxz
push
dec
rolb
jno
add
jnp
loope
shl
repz
adcl
cmp
lods
inc
xchg
addr16
cmc
data16
movsb
test
cmpb
add
jno
mov
jno
js
rcrb
jne
jae
ds
jl
push
jns
int3
test
dec
es
xor
sti
xchg
sarb
push
xor
dec
pop
inc
cltd
mov
push
mov
xor
xchg
sub
roll
and
add
add
add
inc
ja
imul
pushf
inc
xor
movsb
push
popa
mov
adc
cld
pop
jae
je
mov
xor
inc
enter
lcall
or
and
test
repz
dec
push
jnp
or
std
mov
mov
push
fcmovnbe
movsl
pop
stc
mov
stos
iret
adc
pop
add
xchg
test
and
mov
and
js
in
movsl
push
jmp
xchg
jmp
iret
gs
insb
mov
out
jo
inc
sbb
ljmp
or
adc
sbb
stos
loope
imul
push
sbb
data16
fdivs
dec
mov
sbb
scas
sbb
sub
sbb
aad
insb
jnp
lds
add
mov
imul
test
lret
mov
cmp
mov
les
insb
sbbl
adc
sub
lcall
mov
inc
and
adc
pop
xchg
repz
push
jg
movl
enter
xchg
cmpb
scas
mov
xor
iret
cmp
pop
in
pop
and
push
cmpsl
data16
push
dec
js
pusha
out
insl
cltd
negl
pop
jmp
xor
into
xchg
icebp
stc
in
in
jg
ja
jl
adc
mov
iret
addb
mov
jge
int3
pop
filds
sub
test
mov
push
outsb
ds
aam
gs
sbb
stos
mov
push
jge
xchg
test
outsb
mov
leave
arpl
nop
test
or
mov
cli
push
shll
test
push
lcall
adc
inc
divl
sub
pusha
lret
filds
pushf
xor
pop
jne
aas
jb
dec
loopne
xor
push
inc
push
sbb
pop
aad
mov
sub
jns
ja
testl
lds
andb
jg
and
or
add
inc
lret
arpl
mov
ss
push
mov
push
fwait
sbb
in
rcl
popf
ror
dec
pop
pop
sahf
jae
xor
aaa
jge
cmpsb
push
fwait
add
sub
xchg
mov
push
ficompl
test
testb
sub
and
jno
cmpsb
cmp
push
outsb
push
jecxz
mov
test
mov
divb
popa
fidivrs
pop
cld
mov
pop
daa
mov
in
gs
xor
in
xor
mov
out
std
lcall
les
icebp
jb
out
sahf
xchg
push
lods
pop
sbb
movsb
dec
lock
push
repnz
sub
mov
sahf
adc
lds
fadds
jo
fcomip
push
jp
jle
sub
mov
and
jl
add
out
rolb
inc
test
arpl
add
add
add
cmp
cld
jge
mov
sub
mov
lock
outsb
jbe
cmpb
clc
sbb
mov
popf
das
jge
jge
mov
call
loop
movsl
ja
adc
jecxz
aas
mov
jge
inc
and
pop
stc
push
mov
jne
rcll
adc
jno
scas
jo
cmp
pop
and
adc
fidivl
lds
pop
mov
and
jecxz
into
mov
add
mov
mov
dec
popf
jg
rcrl
mov
rorb
jp
jge
cmp
or
je
and
mov
adc
jne
sbb
mov
scas
jle
pop
ja
jmp
xchg
jo
push
inc
popf
cmpsb
adc
enter
and
icebp
scas
ret
sbb
push
push
hlt
loopne
fsubrl
int3
ret
jno
fldt
jg
dec
push
loope
mov
push
shr
cmp
div
ret
cmp
adc
fsub
xor
or
std
cmp
scas
inc
jl
mov
fildl
xchg
mov
inc
xlat
sub
adcl
test
dec
and
out
jecxz
outsb
jne
rcll
sub
mov
cmp
addr16
stos
pop
scas
mov
sub
test
pop
das
inc
jmp
cmp
dec
mov
and
jo,pn
inc
dec
or
cvtdq2ps
xor
mov
lret
sbb
pop
sub
sbb
in
jmp
mov
xor
iret
sub
cmp
xchg
scas
out
xchg
vandps
into
mov
xchg
dec
mov
cltd
arpl
subl
fisubrl
mov
bound
pop
mov
iret
sbb
mov
fcmovnu
push
jno
data16
std
mov
sarl
lret
popa
sbb
test
std
lods
jle
cmovno
aaa
subl
mov
mov
inc
ss
xchg
outsl
aaa
outsl
pop
jge
pop
outsl
test
icebp
sahf
mov
inc
adc
sahf
mov
adc
add
add
and
or
jg
icebp
fstl
add
pushf
jnp
dec
inc
sbb
sahf
adc
or
icebp
jmp
out
pop
loopne
push
bound
add
inc
xor
ja
stos
mov
fisubrl
jecxz
leave
inc
sbb
rcll
lret
cwtl
mov
fistpl
cmp
mov
lahf
aad
mov
mov
cld
xor
add
loop
sbb
jne
cltd
or
sub
lcall
out
inc
test
mov
mov
repz
mov
push
adc
mov
sub
pop
fyl2x
cmp
xor
cmp
lea
dec
xchg
mov
fwait
das
pop
jbe
in
xor
mov
roll
jb
in
loop
mov
sahf
cmp
aad
add
push
xlat
mov
push
dec
dec
test
std
and
add
fdivrl
in
lahf
mov
mov
adc
mov
dec
adc
mov
add
insb
popa
or
cwtl
fs
cmc
jle
push
sbb
xor
bound
mov
pop
jmp
lahf
push
ljmp
pushw
ss
ret
mov
mov
or
pop
jne
mov
ds
ja
pop
pop
mov
jae
aam
out
sub
and
mov
cmc
sbb
cwtl
xchg
fs
cmp
stos
mov
add
in
mov
push
daa
dec
pop
pop
imul
adc
addr16
lods
fcmovnb
mov
jg
push
dec
push
mov
add
and
xchg
xor
std
xchg
adc
mov
sti
ja
sub
icebp
ja
movsb
arpl
popa
inc
and
inc
mov
mov
sub
mov
jp
lods
lret
xor
mov
mov
gs
sub
in
loope
loop
mov
dec
imul
push
iret
lods
xor
ficomps
xchg
pop
mov
xchg
fistpl
pop
js
or
or
loopne
shrb
dec
jecxz
test
push
inc
bnd
lea
ret
popf
mov
aam
sahf
pop
mov
fs
call
out
jo
ljmp
cmpsl
movl
lock
cmp
cmp
ret
inc
clc
pop
dec
bound
pusha
inc
roll
xchg
sbb
stos
sbb
adc
int
aam
cmp
in
or
jecxz
xlat
add
js
lret
cwtl
sbb
je
rclb
sti
loope
out
loop
out
subl
scas
pop
jp
mov
ret
movsb
pop
mov
cs
sbb
xor
jl
sar
sbb
jp
rol
cmp
add
hlt
pop
mov
fwait
mov
push
cmp
bound
mov
pop
sub
loopne
test
mov
cmp
je
push
fwait
outsb
rorl
call
sub
mov
cwtl
push
cld
cmp
pop
into
and
pop
xor
mov
mov
lock
sahf
xor
mov
mov
jo
cmp
in
shl
add
fxam
aad
sahf
push
mov
gs
xchg
push
xchg
pop
cmp
std
lods
ret
sbb
inc
in
and
loope
adc
cmp
lds
sbb
cli
cltd
sti
sbb
push
lret
xchg
cmc
cmpsl
andb
xor
xchg
xchg
insl
test
notl
out
fnstcw
es
movsl
adc
jg
adc
ja
or
aas
pop
mulb
dec
das
xchg
fdivs
push
out
push
adcl
and
roll
int
and
xor
mov
dec
push
lea
je
int3
sub
or
aam
outsb
repnz
loop
pop
dec
ret
pop
sub
ss
test
mov
icebp
dec
cmp
pop
or
or
add
ficomps
clc
int
out
shrl
push
jae
outsb
shll
and
mov
addr16
sub
movsl
imul
xlat
push
ja
imul
lods
sarb
lea
inc
mov
xchg
mov
mov
into
mov
mov
fs
xchg
pop
xchg
xchg
mov
dec
popf
sbb
jno
int
jp
dec
push
mov
lock
addl
sub
mov
sub
mov
outsb
popa
insl
adc
aas
jecxz
sub
jns
aam
test
js
add
dec
stc
push
and
and
jmp
fisubrl
out
sub
sbb
fdivrl
shrl
fmul
sti
xor
mov
stos
mov
mov
insb
xchg
push
dec
sub
mov
jl
dec
xchg
mov
push
adc
and
pushf
lods
roll
icebp
movsl
loop
sti
repnz
insl
push
mov
ror
addb
pop
jbe
push
push
jo
lea
andl
or
push
inc
push
fidivrl
mov
sbb
mov
mov
mov
inc
ja
mov
push
in
push
shlb
out
cmp
sarb
fildl
mov
stos
pop
fisttpll
dec
xor
jmp
jl
add
cmpsb
call
cmpsl
jge,pn
push
jmp
sub
push
mov
aaa
inc
or
cmp
iret
sbb
cmpb
push
sbb
cli
adc
jae
pushf
sub
jo
std
xchg
cmpsl
sub
push
cmpsl
arpl
popa
sub
push
jns
sub
inc
shrb
push
jb
push
icebp
loope
or
dec
push
fistpl
mov
enter
dec
jl
push
sub
pop
xchg
xchg
ffree
hlt
je
dec
sahf
pusha
sbb
std
adc
pushf
loope
ftst
mov
enter
jbe
filds
out
push
mov
pop
arpl
andl
in
dec
inc
cmp
mov
jge
xchg
out
movsl
or
mov
jae
push
xchg
imul
sbb
jnp
or
int3
adc
testb
aam
sub
pop
mov
repnz
sbb
icebp
ds
cld
lods
mov
lods
movl
cwtl
lods
scas
fsubrs
inc
dec
fbld
icebp
iret
mov
arpl
jnp
ffree
mov
push
pop
xor
cmp
cs
insl
sahf
dec
jl
das
inc
mov
mov
cwtl
sub
popl
pop
push
cmp
cmp
jbe
testb
adc
mov
cli
mov
iret
movsb
ja
pop
das
sbb
movsl
into
test
stos
cmpsb
in
xor
fidivrl
ficomps
inc
rcll
dec
push
mov
jb
mov
push
jge
and
cmp
xchg
test
or
icebp
cmp
xchg
add
pushf
into
adc
jbe
mov
enter
dec
sbb
mov
push
cld
push
xchg
adc
loop
sahf
xor
lods
sub
cmc
push
dec
mov
gs
sahf
sbb
je
or
add
sbb
sub
std
pushf
fidivs
jge
fsubs
enter
jae
mov
daa
lcall
test
and
mov
shrb
mov
pop
mov
push
cmp
out
or
jbe
inc
xchg
dec
jl
shll
nop
mov
cmp
leave
lret
adc
loope
andl
fs
out
ror
add
shrl
fucom
add
sti
xchg
mov
rorb
mov
fwait
dec
cltd
mov
fsubs
mov
xchg
jp
mov
cmpsl
sbb
pop
push
xor
cmp
mov
xchg
mov
adc
jg
imul
adc
jecxz
int
jb
jle
test
test
xor
outsb
jno
leave
push
inc
clc
cmp
loope
out
mov
jp
idivl
lea
jo
mov
test
mov
scas
adc
sub
pop
ret
inc
cltd
sbbl
ret
fnstenv
cld
ja
iret
jno
mov
push
push
sbb
inc
push
sti
cs
adc
mov
call
mov
mov
dec
jp
sahf
repz
mov
sbb
push
or
xor
movsb
cmpsl
mov
je
sbb
mov
xor
mov
stos
mov
stos
mov
movsb
mov
fldcw
xchg
idivl
int3
inc
in
insl
popa
and
xor
and
popa
aaa
cmp
xor
jb
cltd
lcall
mov
xor
mov
rcrb
ret
sub
pop
sub
fisubs
sub
fadds
lret
std
push
imul
inc
push
loope
push
das
lret
push
scas
xchg
cld
das
push
xor
jl
or
push
loop
xlat
test
mov
mov
adc
sbb
loopne
adc
dec
int
cmp
ja
mov
inc
sub
inc
pusha
in
js
xchg
js
or
test
mov
jbe
inc
add
aad
in
adc
xor
push
cltd
pop
lock
int
mov
mov
pop
movsl
add
sbb
aad
insl
lret
sbb
xchg
iret
cs
insb
pop
jb
fnstsw
fsts
jl
mov
mov
test
pop
pop
inc
rorl
call
sbb
or
sub
and
sbb
cmp
outsb
add
out
fwait
ds
cmp
jne
popa
mov
inc
jbe
jo
and
pusha
in
add
sub
outsl
adc
in
mov
movsl
adc
out
pop
xor
sbb
fdivp
xchg
pushf
lcall
add
insb
pop
daa
cmp
in
lds
sbb
stos
push
shll
xor
mov
fsubrl
adc
cltd
jb
xchg
repz
xchg
mov
mov
cmp
sti
in
mov
movsb
cmc
mov
mov
sub
lods
and
push
mov
repz
dec
pushf
inc
mov
sub
lahf
push
dec
in
out
pop
inc
lea
clc
sub
adc
test
jecxz
mov
mov
add
repz
aas
jle
pop
xor
mov
mov
xchg
jmp
xchg
mulps
imul
mov
clc
js
xchg
js
add
ds
cmp
scas
mov
ret
fcomps
fs
adc
inc
std
push
nop
cmp
je
pop
add
mov
mov
add
pop
test
test
imul
jle
mov
gs
jae
test
or
stos
movsl
arpl
mov
or
push
movsb
inc
popf
imulb
call
sub
pop
xor
jl
mov
shlb
sub
shr
sub
cmp
fwait
rep
and
enter
add
cld
enter
dec
xchg
mov
fsubrl
xchg
insb
inc
pop
inc
arpl
push
inc
jne
enter
aas
mov
mov
mov
fdivr
iret
or
dec
rcll
inc
js
shll
filds
jne
das
jns
mov
in
sbb
add
cmp
or
insl
or
icebp
mov
aas
dec
sbb
mov
adc
add
jbe
jge
adc
ljmp
xchg
sbb
insb
adc
daa
lahf
test
adc
shrb
add
lret
lock
pop
testb
cltd
movsl
cmp
mov
inc
fs
pop
pop
push
or
mov
mov
inc
loop
pushl
mov
test
mov
fadd
es
shr
jne
pop
cmpsl
adc
jb
adc
push
xchg
xchg
sti
xor
fnstsw
rclb
gs
xchg
pop
nop
pop
adc
pushf
je
cld
or
mov
popa
movsb
ret
arpl
fisubl
test
clc
stos
in
ljmp
orl
add
decl
xchg
mov
dec
cmp
xor
inc
leave
adc
sbb
dec
adc
int3
inc
and
or
shrd
mov
mov
adc
jle
mov
pop
loope
push
andl
dec
gs
inc
div
add
sub
cmpsl
lret
ljmp
push
sub
adc
and
mov
je
fistl
inc
cvttps2pi
sbb
inc
sub
movsb
pop
pusha
iret
popf
clc
cmp
popf
js
inc
sbb
fldt
or
stos
jb
cmpsl
fidivrl
pop
lcall
daa
int
stos
cmp
xor
cmpb
jp
adc
and
mov
pop
xor
or
popa
adc
pusha
jbe,pn
adc
lcall
mov
sti
or
mov
inc
or
adc
scas
clc
and
stos
pop
jo
fcmovnu
lock
pop
daa
mov
inc
in
cmp
inc
xchg
jle
sti
cmp
adc
inc
push
inc
jns
jp
ds
mov
sub
les
loopne
stc
mov
sbb
jecxz
rclb
shll
pop
mov
mov
push
xor
rcr
pop
dec
repnz
dec
test
inc
sub
rcll
mov
xor
cwtl
xchg
inc
lea
pop
cltd
dec
xorl
xchg
push
fsubl
cltd
lret
test
mov
les
lcall
aaa
outsl
mov
xor
test
mov
mov
xchg
lahf
xorb
mov
xchg
imul
pop
xor
idiv
jge
sti
fdivl
or
adc
push
imul
mov
jb
jle
pop
jb
mov
jns
cwtl
out
push
mov
adc
hlt
aad
mov
imul
and
mov
xchg
lock
jnp
mov
xchg
movq
and
test
fmulp
arpl
and
in
adc
je
jb
scas
call
adc
jb
pop
mov
cmpsb
repz
sbb
dec
jnp
out
xlat
loop
addl
pop
pop
cmp
mov
pop
and
rcll
cltd
lods
sub
repnz
and
mov
pop
fidivl
xor
outsl
stos
loopne
fdivr
dec
out
adc
out
jo
inc
imul
das
mov
jle
jne
jbe
jmp
test
xchg
xor
movsl
jl
and
and
ljmp
push
cmp
in
pop
cmp
jo
mov
xor
cmp
clc
xlat
clc
mov
xchg
sti
mov
xor
lods
nop
hlt
cmpsl
and
orb
mov
xchg
in
xor
test
and
pushf
xchg
enter
ss
arpl
xor
data16
push
mov
sbb
jb
mov
jnp
icebp
ret
out
push
pop
gs
mov
stos
gs
mov
and
add
sbb
insl
scas
int
mov
pop
xchg
imul
sbb
pop
pop
repnz
ds
shr
xlat
inc
xlat
ja
push
or
mov
xchg
dec
pusha
jbe
shll
pushf
dec
repz
xor
push
les
jo
addr16
imul
push
mov
loop
outsl
mov
mov
icebp
daa
out
xchg
mov
mov
cmp
fnstenv
dec
nop
inc
ja
push
add
imul
push
jge
jl
int
test
jge
sbb
repnz
out
push
sbb
push
scas
fwait
jbe
ds
popa
pusha
adc
cmp
inc
or
dec
repnz
aam
sub
jae
popf
pop
jge
jp
outsb
addr16
pushf
orl
aad
cmp
je
dec
aam
int3
adc
add
jge
adc
stos
xchg
outsl
roll
out
inc
mov
lcall
movsl
jg
and
cmp
push
add
mov
stos
inc
mov
cmp
ss
mov
pop
jge
push
nop
xchg
and
sub
bswap
fcoms
mov
dec
xlat
imul
inc
or
jne
out
cmpsb
popf
ret
call
shl
sub
jnp
outsl
hlt
xor
adc
rcrb
mov
sbb
fists
call
xlat
xchg
jbe
loope
adc
jg
or
fistps
mov
jle
jae
notb
push
call
test
mov
adc
jecxz
dec
push
testb
jge
ret
ret
jbe
adc
xlat
push
adc
mov
cmp
push
test
adc
adc
lods
cmpsl
stc
rclb
sub
pop
sbb
ja
or
sub
inc
jno
lea
pusha
out
pop
xor
aam
jno
stos
test
popl
mov
aad
loop
cli
inc
lods
ss
pop
fsubs
loope
in
loopne
mov
push
fsubp
xor
sbb
mov
lret
inc
push
or
xor
repnz
sbb
xchg
mov
jno
add
push
fnclex
push
xchg
jns
lods
jns
or
jmp
movsb
movsl
into
popf
lcall
push
pop
xchg
rcr
adc
ja
sbb
loop
in
hlt
aad
jmp
sbb
rcll
lock
mov
je
jp
imul
mov
cli
add
adc
cmpsl
and
rcrb
repnz
lock
dec
nop
addr16
xor
hlt
sbb
cld
mov
mov
inc
mov
jle
dec
jp
mov
mov
sbb
jno
add
test
pop
outsl
sub
aaa
add
mov
cmp
cs
jp
pop
sub
je
xor
add
sbb
pop
in
lds
fs
mov
sbb
push
or
cmp
popf
jo
pop
push
ficomps
insl
movsl
popf
xchg
mov
xchg
in
test
test
fwait
jle
movsl
xor
cmpsb
push
mov
fiaddl
sbb
push
pop
icebp
push
xor
pop
aam
cmp
loope
insl
cmp
dec
lahf
mov
repnz
push
push
mov
dec
sub
dec
pop
pop
mov
jb
sbb
les
shll
mov
cltd
push
pop
jno
adc
mov
ja
loope
or
inc
add
xchg
xchg
add
mov
cmp
cld
das
test
push
add
sbb
adcl
cmpsb
pop
or
int3
fbld
xor
ja
dec
cmp
cmp
jle
insb
adc
mov
dec
pop
xor
popf
shl
je
fidivrs
and
mov
inc
enter
jo
fldcw
sbbl
in
roll
imul
in
or
mov
jne
cmp
inc
stc
lock
and
shlw
jle
jbe
push
stc
inc
jge
ss
dec
xor
repnz
and
sub
cmp
cmpsl
sti
jl
dec
cli
addr16
add
dec
push
ffree
lahf
jns
sub
jb
cmc
add
loope
jae
sbb
push
jbe
sbb
in
xchg
push
mov
das
xor
aad
repnz
in
out
sbb
cmp
or
mov
add
lret
xor
jmp
cmpsl
xor
inc
inc
jb
or
std
nop
fidivrl
cmc
mov
data16
add
bound
jg
into
enter
push
lock
mov
lods
add
aaa
sub
lock
jl
aaa
sbb
dec
rcll
jmp
pushf
jne
mov
xchg
xchg
sbb
sbb
push
data16
push
andl
ret
fwait
into
xchg
scas
or
mov
sub
movsb
lea
mov
or
or
push
pop
into
push
iret
adc
dec
sub
or
pop
xchg
dec
ja
xor
aaa
shl
mov
ljmp
popa
add
sbb
dec
imul
das
cmp
in
scas
inc
mov
and
in
xchg
in
jne
pusha
cmp
mov
xchg
int3
aam
or
orl
sbb
pusha
into
sbb
das
stc
pop
sbb
mov
mov
pop
arpl
dec
je
aad
dec
movsb
rolb
mov
or
lods
inc
lods
adc
in
sub
add
jmp
pop
jb
pop
cld
jno
xor
shrl
or
imul
add
cmpb
arpl
outsb
rorb
xchg
es
push
push
inc
repnz
cmc
push
shrl
shlb
xchg
mov
and
scas
mov
outsl
clc
dec
ret
sub
dec
ljmp
scas
add
ljmp
stos
outsb
mov
into
negb
sbbl
inc
push
sub
cs
in
and
sbb
insl
test
or
out
adc
loop
out
sbb
inc
lods
lcall
xchg
mov
repz
mov
test
jle
push
ret
mov
imul
es
inc
xor
and
mov
das
hlt
icebp
cmc
into
or
xchg
push
dec
xchg
cmpsl
cld
idivl
adc
mov
dec
in
xchg
sbb
jb
push
add
mov
pusha
imul
jle
add
shrb
xchg
les
mov
enter
scas
push
jecxz
xchg
std
stos
daa
jns
ljmp
test
dec
fsts
xchg
sbb
loopne
adc
mov
add
pop
js
adc
sbb
in
push
or
ljmp
sub
cmp
xchg
push
sub
and
mov
ficoml
clc
sbb
loopne
aaa
fnstenv
rorb
stc
call
push
xchg
mov
lods
mov
xchg
mov
into
dec
addr16
push
add
push
cmp
mov
stos
gs
in
dec
std
or
mov
mov
ficoml
xor
mov
adc
dec
daa
mov
add
xorl
enter
pop
pop
pop
shll
pop
jo
loopne
sbb
out
jae
push
movsl
pop
xor
add
hlt
jns
push
jg
add
xchg
inc
pusha
int3
lret
inc
cmc
fnstenv
repz
ficoml
leave
mov
or
xchg
adc
pushw
test
mov
lcall
pop
xor
addr16
scas
loope
lret
push
mov
imul
and
xorb
loope
test
loop
rcrl
shll
xor
lock
add
jae
dec
fs
cmp
fidivs
adc
fsub
rorl
adc
out
push
or
add
out
adc
mov
sub
mov
mov
push
push
push
adc
or
iret
adc
mov
in
inc
rcrl
cmc
xor
arpl
adc
sbb
repnz
roll
enter
xor
shlb
pop
pop
mov
sub
xorb
aaa
or
test
push
mov
pop
push
add
fbld
mov
add
shll
jnp
inc
or
popf
pop
scas
cmp
adcb
fldt
push
mov
add
imul
sbbl
rcrl
imul
pop
outsl
fiadds
aad
mov
sbb
cmc
in
jecxz
fcmove
dec
and
lods
mov
pop
daa
stc
stos
lock
push
pop
xor
jbe
push
loope
in
mull
adc
pop
nop
clc
sbb
out
pop
jl
int3
data16
add
int3
lock
loope
movsb
mov
minps
xor
subl
pop
add
adc
or
lahf
mov
cli
cs
out
iret
adc
mov
add
dec
and
lcall
insb
dec
sti
dec
and
cmp
cs
cmp
jb
mov
addr16
xchg
mov
or
addr16
cmp
pop
push
xor
idivl
mov
out
pop
add
push
push
repz
xchg
fmull
loopne
rcrl
cmp
cli
cmp
out
cmp
loop
sub
stos
pushf
sub
fwait
push
mov
je
pop
cltd
dec
add
ds
add
lods
xchg
cld
popf
mov
aam
pop
in
lock
mulb
inc
dec
sub
idiv
sahf
sahf
push
mov
add
mov
sbb
adc
psllq
daa
ljmp
xor
sub
inc
daa
push
scas
popa
inc
mov
jl
daa
or
or
loope
insl
xchg
or
addl
cmp
fwait
lcall
test
pop
std
jo
in
mov
or
add
test
fsts
nop
outsb
pop
cmc
test
not
out
sub
cld
jle
mov
cltd
pop
add
or
loope
iret
fidivl
stc
iret
xchg
sarl
movsl
ret
inc
mov
dec
add
daa
mov
js
loopne
icebp
cltd
test
ds
push
mov
inc
mov
fadds
sbb
in
mov
pop
notb
pop
loope
inc
cmp
fldenv
add
imul
inc
cli
das
or
in
and
jg
decb
jbe
inc
sbb
and
adc
in
loope
mov
mov
adc
mov
insl
rolb
mov
add
mov
jmp
hlt
repnz
sub
pusha
int3
repz
pushl
icebp
mov
mov
cmp
add
loope
jp
cli
push
outsb
xlat
sub
sbb
pop
mov
inc
cmpsb
cltd
sti
jns
inc
cmp
pop
popa
push
in
test
loopne
cmp
cmp
xchg
dec
dec
mov
cmp
mov
packssdw
xchg
loope
roll
pop
xchg
add
fbstp
cmp
test
mov
cld
cmc
div
imul
xchg
xchg
sub
sub
lds
sbb
sub
push
mov
ss
push
pusha
jae
mov
dec
insl
clc
cs
imul
cmp
imulb
xchg
pop
ja
dec
stos
jae
xchg
jmp
jnp
sarb
jbe
sahf
and
rclb
out
jo
mov
mov
cwtl
lds
mov
mov
scas
adc
jmp
mov
mov
cmpsl
test
or
in
lds
aaa
data16
cmp
scas
mov
pop
lret
or
sbb
jge
pop
in
pop
mov
mov
inc
xchg
inc
inc
dec
and
or
daa
out
jmp
xor
loop
aas
syscall
orl
mov
mov
aad
dec
cmpsb
dec
mov
xchg
mov
xchg
xorl
mov
pusha
or
sub
dec
ljmp
enter
cwtl
mov
test
cmp
pop
addr16
sbb
dec
popa
lahf
cmpsl
fcmovnbe
call
inc
or
ds
test
mov
ja
push
subb
sub
and
ficompl
mov
lods
xor
and
mov
clc
insl
sub
adc
sbb
cs
ja
into
mov
fistl
mov
mov
mull
xchg
fldcw
mov
xchg
pushf
out
xlat
stos
gs
jl
shlb
sub
mov
and
in
add
mov
cld
pop
dec
dec
lret
jecxz
idivl
sub
pop
out
jnp
cmpsl
jp
xor
sbb
push
sbb
mov
cs
adc
repz
jae
push
mov
insl
inc
subb
push
lret
sub
adc
or
xor
dec
dec
daa
adc
cmpl
mov
lock
inc
jecxz
andl
mov
jbe
nop
inc
mov
pop
mov
negb
sbb
popf
imul
mov
aaa
mov
jae,pn
jl
daa
pushf
mov
arpl
loopne
roll
dec
xor
sub
in
mov
xchg
subb
rolb
jne
xor
js
pop
inc
lret
cmp
push
fstpl
enter
or
mov
push
dec
mov
enter
jmp
sub
call
and
leave
lea
mov
lock
pop
repnz
inc
and
fistpl
mulb
cs
popa
sbb
lea
sahf
adc
movsl
cmp
xchg
jg
cli
fisubl
fcompl
mov
test
leave
fldl
push
mov
lret
mulb
jne
xor
dec
das
mov
rorb
scas
jae
les
mov
cmp
jl
test
je
lds
sbb
xor
loope
fs
sub
cmpsb
push
mov
jle
pop
jmp
pavgw
mov
cs
inc
or
sub
dec
mov
sbb
or
aas
lea
push
sbb
ret
mov
pop
insb
mov
xchg
pop
data16
insb
jne
xor
mov
into
cmp
and
into
outsl
out
mov
sbb
dec
cvtpi2ps
outsb
sbb
sub
cmp
movsb
mov
imul
sbb
addr16
xchg
leave
setg
aad
vpaddsw
pop
lods
mov
adc
sbb
sbb
sahf
adc
and
sbb
mov
pop
mov
sbb
cmp
add
push
js
sub
cwtl
jb
dec
mov
loope
dec
inc
pop
xor
cli
or
push
gs
xchg
outsb
bound
cmp
mov
jae
cmp
and
sbb
popf
stc
jg
push
cmp
lds
and
imul
cwtl
mov
and
and
rcll
sub
add
dec
jns
xlat
and
or
testl
or
mov
xchg
push
int
pop
xor
inc
scas
pop
dec
jne
xorb
push
in
mov
cmp
and
ds
or
rclb
and
add
lods
out
mov
rcrb
push
sbb
ljmp
movsl
cmp
push
cld
rclb
or
sub
jae
jae
popa
out
inc
xlat
cmpxchg
pop
out
leave
push
inc
jmp
fnsave
and
mov
cmpsb
xor
pusha
ds
or
out
ljmp
inc
adc
imul
inc
jl
fstl
jmp
push
lea
add
iret
push
ljmp
and
cmp
mov
mov
or
mov
or
inc
add
xchg
mov
add
add
ret
push
dec
popf
xorb
jae
sbb
or
call
cvtpi2ps
std
sti
ss
test
inc
adc
mov
adc
cmpb
stos
fxch
in
std
mov
cld
xlat
sub
scas
add
cmp
in
jmp
lods
xor
dec
enter
in
mov
inc
jg
test
mov
mov
inc
mov
bound
jge
dec
and
inc
push
in
pop
mov
gs
mov
sbb
repnz
loope
enter
push
repnz
lods
pop
add
int
das
outsb
icebp
test
fwait
push
push
cmp
ja
lret
and
movsb
addl
push
aas
popa
lret
adc
mov
aaa
orl
mov
adc
and
sbb
mov
lods
mov
inc
mov
push
cmpsl
dec
or
push
xchg
fistps
push
mov
inc
es
adc
mov
loop
mov
mov
sbb
lret
sarb
push
dec
jle
js
js
cmp
cs
xchg
mov
dec
leave
cs
or
xchg
cmp
lods
clc
cmpsl
xchg
jno
sbb
cmpl
lcall
or
mov
or
mov
rorb
and
sbb
lods
adc
pusha
sub
push
jne
mov
mov
mov
push
in
les
data16
pop
pop
popa
sti
pop
in
dec
inc
icebp
repz
jbe
push
push
xchg
sub
dec
dec
stos
das
leave
pop
pop
mov
nop
in
add
loope
cmpsb
mov
cmpsl
cmpsb
fcoms
stos
jmp
push
mov
mov
addb
xor
cwtl
test
and
fldenv
pop
lock
jge
mov
dec
inc
mov
lret
fcmovne
jae
sub
popa
das
lret
pop
add
mov
dec
lcall
pop
xchg
repnz
rcl
xchg
jl
daa
movsb
sbb
sub
inc
das
sahf
data16
pop
ffreep
xchg
jmp
mov
nop
cmp
lods
jp
cmp
jo
mov
stc
jp
push
adc
repnz
dec
jno
mov
in
mov
std
mov
adc
cmp
or
sahf
ret
aad
inc
pop
xchg
cmpsl
push
in
pusha
movsb
xor
out
in
mov
movsb
jp
sbb
fwait
in
jbe
negb
cmc
xor
xchg
dec
in
mov
mov
pop
xor
movb
or
test
mov
adc
or
fs
popfw
ret
fdivs
pop
lret
rol
ja
aaa
xor
stos
insl
and
cmpsl
push
cmp
pop
arpl
das
xlat
shll
pop
mov
lret
sbb
das
dec
pusha
and
push
sahf
jp
gs
sbb
dec
jb
adc
cmp
xor
inc
in
fsubp
rorb
xlat
out
push
dec
and
iret
mov
arpl
mov
xor
sub
jecxz
mov
xchg
pop
jnp
flds
dec
pop
ficompl
hlt
sub
pop
jnp
mov
ljmp
mov
xor
adc
addr16
lods
test
xchg
jo
sbb
imul
idivb
sti
jo
mov
shll
lret
push
pop
or
pop
pop
add
imul
aam
fisubl
jbe
in
pop
pop
and
add
popa
push
and
jns
sbb
jl
or
imul
mov
pop
shrb
out
add
je
mov
add
imul
aas
fsts
push
cmp
loopne
punpcklbw
rorb
mov
popf
xchg
popf
addb
imul
sbb
inc
cmp
out
add
pop
pop
pop
add
stos
push
das
fs
mov
das
cld
adc
mov
ret
arpl
xchg
jae
xlat
dec
or
arpl
mov
orb
sub
mov
jae
das
mov
out
and
push
push
dec
frstor
dec
or
test
adc
decb
pop
adc
rorb
cmp
mov
jne
lret
xlat
lds
adc
iret
xor
cld
popf
add
int
fs
inc
stos
dec
inc
into
dec
ss
in
int
call
std
or
xor
and
out
mov
popf
fdivs
sbb
jnp
pusha
clc
mulb
mov
xchg
popf
clc
fistl
xor
mov
jo
in
sub
or
pop
dec
sbb
push
mov
mov
rcl
jno
fwait
sub
xchg
mov
mov
or
or
push
cwtl
stos
jecxz
adc
mov
leave
push
jno
push
addl
cmp
inc
cmp
jle
mov
pushf
test
dec
adc
ret
fisubs
mov
call
lods
or
into
clc
lds
scas
outsb
push
movsl
inc
jns
stos
sbb
and
icebp
adc
leave
jmp
scas
cmp
mov
mov
jg
mov
mov
xchg
fildl
scas
sub
faddl
cmp
ja
test
enter
stos
cmp
sbb
dec
cld
imul
ds
sub
fisubs
shll
push
lea
fs
pop
push
sarb
negb
pop
xor
adc
jb
sub
cmp
pop
addl
push
jne
test
jp
add
push
cmp
mov
shrl
jo
sub
outsl
popf
iret
lds
xor
cltd
addr16
push
cs
or
mov
xor
out
lods
push
and
xchg
leave
pop
int3
inc
loope
adc
js
mov
push
movsl
pop
addr16
push
jge
xchg
and
xchg
sti
mov
and
add
jo
das
push
in
cmp
and
fstps
loope
inc
jmp
pop
lret
movsl
xor
insb
push
xchg
sub
xchg
int3
loop
jp
ss
out
sti
sbbb
cmp
repz
mov
shll
lods
mov
add
out
dec
test
pcmpeqd
in
aam
data16
cmp
sub
add
test
stc
sbb
dec
xor
jl
mov
iret
sub
mov
movsl
cmc
out
repnz
xchg
pop
fistpl
fs
out
inc
je
sbb
in
inc
jb
mov
xor
and
pop
fmul
and
test
adc
xchg
and
ds
fsubs
or
xchg
negl
xor
dec
lret
sub
mov
popf
arpl
sbb
lods
das
cmp
stos
and
fisttpl
notb
adc
insb
lods
ljmp
icebp
lea
mov
stos
pop
loope
push
repnz
inc
or
mov
and
xchg
jg
and
enter
sbb
popl
dec
mov
fs
pusha
pop
in
pushf
mov
inc
and
push
lods
jge
add
mov
cs
lahf
mov
add
out
loopne
inc
jnp
sbb
fwait
lcall
roll
cmc
or
lret
fs
and
mov
sbb
xchg
loop
or
notl
ss
jecxz
push
cmp
out
idivl
cld
jae
lea
push
mov
mov
arpl
push
dec
sbb
jb
lods
aam
cmpsl
out
mov
dec
xchg
or
or
mov
mov
arpl
and
in
push
mov
fld
sub
inc
and
pop
inc
test
inc
jl
xchg
insl
xor
jg
in
mov
sbb
das
pop
dec
pop
or
cli
xchg
push
mov
divb
in
aam
mov
arpl
cltd
outsl
cld
insb
or
xor
test
fists
sbb
adc
rcll
mov
jns
movsb
sub
ret
subb
lret
lock
push
pop
or
inc
jmp
repz
xchg
popf
xchg
jmp
icebp
mov
push
cwtl
sbbb
movsl
and
movl
ret
nop
mov
adc
ret
cs
and
dec
imul
mov
dec
jecxz
cltd
xchg
es
fdivrs
repz
xchg
outsb
mov
dec
addr16
lods
pusha
fisttpl
and
bound
ret
je
ljmp
in
pop
xchg
int3
adc
mov
leave
leave
hlt
outsb
add
adc
dec
pop
stc
sbb
mov
notl
mov
jns
mov
push
cmp
dec
xchg
jae
pop
mov
pop
pop
pushf
mov
pop
add
fisubs
aas
insb
push
bound
in
mov
and
inc
push
es
sub
dec
lds
add
outsb
ret
in
inc
sub
or
jp
ret
lock
in
jnp
jb
xchg
xor
sub
mov
mov
cltd
repz
out
call
repz
or
imul
xchg
add
push
sub
lahf
lcall
push
cmp
rcll
jge
outsl
out
push
and
jbe
jg
fstpt
jg
ljmp
inc
popf
mov
rclb
in
sub
inc
add
mov
ljmp
repz
faddl
lock
outsl
cmpsl
mov
adc
movsb
insl
mov
stos
lods
pop
stos
out
dec
dec
int3
sbb
outsb
in
loop
push
sub
or
gs
shlb
mov
into
inc
sbb
arpl
or
stos
pop
das
inc
push
push
movsb
lods
xorb
mov
xchg
cmp
jp
inc
pop
jbe
into
pop
int
popf
cmc
mov
iret
push
pop
fcomp
les
xor
lods
es
sbb
adc
and
pop
je
cmpb
cmp
push
test
adc
xor
stos
mov
aam
cmpb
jnp
sub
int
or
push
bound
cmpsb
mov
jnp
sub
sar
repz
xchg
bound
mov
outsl
out
test
test
ljmp
sbb
inc
mov
add
sti
ror
movsb
mov
aas
mov
je
sbb
mov
xchg
cmpsl
insl
push
lds
mov
push
push
push
mov
sbb
xchg
popa
sub
lret
xchg
ret
leave
pop
rorb
pop
orl
mov
ret
inc
dec
adc
xor
adc
inc
xor
scas
iret
pop
dec
xchg
shlb
add
adc
pop
test
enter
mov
lret
dec
ss
jge
out
sbb
sbb
rcrb
outsl
in
dec
data16
xorb
jb
popa
int
cmp
mov
mov
data16
sbb
insb
jae
rorl
jmp
aaa
cmpsl
mov
cmp
dec
shll
add
and
push
xlat
xchg
sti
mov
xor
int
outsl
push
push
pop
pop
mov
jb
push
xchg
push
pop
incl
mov
ja
in
inc
daa
adc
push
test
push
and
push
loopne
mov
and
cmp
movsb
mov
jl
in
je
dec
adc
jnp
orb
test
ds
jns
xor
ror
jno
jnp
aaa
loopne
mov
or
dec
sbb
mov
rorl
mov
xor
push
jbe
ds
pushf
xchg
or
orl
subl
jb
cli
out
pop
hlt
insl
mov
xchg
xchg
adc
popa
pop
imul
mov
cltd
mov
push
rorb
sbb
iret
mov
fsubl
xlat
testl
repz
das
mov
push
aad
pop
insb
and
ds
repnz
and
insl
sarl
mov
lret
das
dec
icebp
or
inc
fcoml
nop
std
cmpsl
push
mov
outsl
movsl
cmc
adc
xchg
adc
sbb
inc
mov
or
ja
sahf
jl
and
or
jbe
out
mov
mov
aas
push
btsl
ja
stc
rol
mov
addb
pop
rcrl
insl
xchg
cmp
icebp
mov
imul
add
mov
shll
xchg
add
inc
fidivl
pop
mov
pop
imul
push
or
sub
add
mov
ja
sti
nop
lret
or
push
xor
mov
ss
repz
je
nop
adc
or
mov
je
jmp
cmpsb
stos
xor
scas
mov
aad
dec
or
push
dec
pop
mov
dec
jo
loopne
in
data16
insb
js
pop
adc
je
mov
mov
aad
xor
mov
enter
xchg
mov
cmp
insb
bound
mov
stc
or
pop
fcmovnbe
adc
iret
int3
shrb
ror
dec
test
cmp
out
push
sti
pushf
inc
push
mov
mov
out
in
mov
jmp
push
pop
les
mov
fisttps
or
imul
clc
jo
hlt
repnz
dec
dec
popa
mov
loop
dec
and
push
ljmp
aad
ljmp
aam
jns
pop
movsl
inc
insl
lcall
xorb
nop
add
test
push
ret
xchg
fdivrs
roll
aad
sub
mov
shlb
fldt
es
aaa
mov
dec
jns
aas
mov
inc
cltd
sbb
cmp
or
or
test
imul
dec
ret
cmp
pop
mov
fistl
xor
cmp
adc
enter
test
jnp
inc
lea
pushf
push
js
sub
xlat
pusha
ljmp
ret
and
and
imul
pusha
jb
roll
sub
pop
loop
sbb
xor
aad
in
mov
stos
mov
lds
sbb
icebp
outsb
mov
sbb
dec
mov
neg
jo
or
sarl
xor
movsb
push
stc
dec
add
cwtl
std
mov
lods
dec
iret
xchg
mov
jmp
dec
lcall
mov
lds
in
mov
mov
aaa
gs
jg
mov
mov
shl
in
fnsave
cmpb
fistpll
rcrl
xor
lea
dec
jne
bound
repnz
cmpsl
xor
adc
mov
jo
jb
stos
jae
push
in
push
loopne
or
inc
sbb
sub
cmpsb
sbbl
icebp
jo
push
pop
cmc
sub
lds
int3
popa
fcomi
or
stc
xor
mov
das
sar
add
push
fidivrs
andb
arpl
add
cmpsl
jle
mov
das
mov
xor
shll
cmp
dec
sahf
pop
stos
inc
pop
mov
cmp
jne
loopne
lea
sti
pop
xor
pop
or
sub
dec
lds
adc
dec
sub
jg
sub
fs
fldl
fdivrl
jg
aaa
test
push
jmp
inc
dec
and
jge
xor
scas
bound
mov
jne,pt
mov
out
roll
aas
dec
jb
shl
or
pop
icebp
xchg
ret
and
xlat
fistl
sub
adc
mull
push
jnp
gs
jge
cmp
outsl
ljmp
push
xchg
sub
sbb
adc
mov
ja
movsb
mov
jne
mov
ss
loope
out
movq
push
lret
mov
loope
sbb
imul
jae
sbb
jb
fisubrl
push
test
out
std
xchg
xchg
int
lcall
jno
cli
icebp
in
push
call
cmp
ds
test
stc
xchg
and
loopne
xchg
adc
cmp
hlt
dec
xlat
mov
fucomi
loop
add
sbb
std
pusha
dec
fwait
dec
enter
call
test
repz
out
icebp
dec
xchg
sub
jge
dec
xor
xor
fwait
ds
adc
push
movsl
push
cmp
rcrl
mov
std
scas
in
outsb
pop
xchg
dec
pop
jp
or
xor
jge
xlat
pop
push
jg
es
cs
sub
pushf
sub
sub
add
pop
mov
sahf
sbb
shll
adc
test
rorl
fwait
dec
mov
mov
pop
and
pop
push
cmp
clc
or
mov
stos
in
test
ficoml
aas
test
mov
ficoms
adc
enter
les
daa
inc
gs
popf
jno
enter
inc
jg
adc
mov
mov
adc
mov
mov
pop
cld
mov
aad
or
lods
or
cmp
in
loope
xchg
and
ds
lgs
or
hlt
xchg
in
cmpsb
sti
enter
ds
inc
push
shll
dec
out
sbb
inc
fld
rorl
repz
sbb
add
popa
pop
rcrl
scas
jle
in
rcll
jp
hlt
or
adc
fwait
sub
ret
in
lretw
or
add
jnp
iret
jp
mov
fwait
adc
sub
mov
in
sbb
mov
dec
mov
gs
mov
add
push
pop
icebp
lock
xchg
adc
fstps
pop
mov
in
or
push
dec
mov
push
push
adc
inc
xchg
pop
mov
lret
cmp
and
repz
mov
push
push
mov
jno
in
ret
inc
shlb
popa
in
sub
push
mov
cmpsb
jb
out
out
mov
mov
ficompl
mov
pop
clc
out
mov
xlat
shll
aas
les
orl
sub
mov
dec
orb
jb
test
popf
rorb
int3
fsubs
push
out
jle
mov
xor
aam
sub
in
aaa
loop
in
cmp
jnp
jns
jg
dec
jle
arpl
aad
adc
lret
dec
idivb
push
mov
aam
mov
push
mov
outsl
mov
arpl
jb
mov
mov
xor
xchg
push
cmp
or
test
lds
iret
iret
or
je
inc
xchg
cli
fidivrl
add
scas
add
inc
scas
subl
clc
aam
and
pop
inc
out
dec
xor
pop
rcll
iret
pop
jp
lods
bnd
sarb
test
pop
mov
fiaddl
mov
stos
xor
fwait
pop
loope
inc
jnp
jmp
popa
aaa
daa
or
xchg
movsb
pop
les
pop
leave
pop
push
rcr
adc
xchg
xor
sbb
pop
stos
mov
mov
movsl
sub
loopne
shl
out
cmpsb
ja
or
pop
jno
push
mov
cmp
pop
adc
in
fnstsw
pop
pop
mov
push
xchg
sahf
rcrl
add
xchg
inc
repz
cli
push
in
scas
mov
jl
mov
push
push
aaa
or
pop
mov
adc
dec
mov
push
mov
push
daa
xchg
sub
ret
fnstsw
sbb
inc
ret
dec
xlat
jno
or
movsb
jae
loopne
ret
bound
mov
adc
sub
inc
addr16
push
mov
push
jb
lcall
sub
inc
decl
pop
xchg
or
pop
push
lea
lea
xlat
mov
adc
xchg
jge
aas
sbb
and
cmp
pusha
les
and
jecxz
icebp
iret
inc
lods
mov
mov
call
movsl
aam
scas
leave
mov
scas
add
lret
cmpb
pop
jbe
push
les
int
test
hlt
xchg
push
xchg
sbb
push
adc
hlt
add
adc
daa
addr16
mov
pop
jle
addr16
aas
popf
push
scas
movsl
adc
pop
and
stc
pop
push
mov
ret
cld
mov
inc
lcall
dec
and
aad
pop
fidivrl
push
sub
fs
jmp
xor
push
cmpb
mov
rcrl
jne
outsl
xor
gs
mov
dec
fadds
dec
cmpl
int3
out
xchg
xor
clc
pop
jb
mov
fs
cmp
push
ds
out
lret
xchg
fwait
or
sbb
mov
in
sub
negb
popa
xchg
popa
jb
stc
sti
mov
adc
lods
pop
push
dec
js
in
sbb
divb
xchg
movsb
ss
in
lods
movsl
pop
xchg
inc
js
cmp
ja
mov
test
push
or
inc
nop
adc
andb
inc
fcmovnbe
pop
cmp
iret
mov
lret
mov
jl
dec
push
mov
push
out
cltd
jmp
in
add
xor
jno
cmp
xor
pop
stos
inc
loopne
es
cltd
cli
inc
adc
dec
test
aaa
fsts
popf
adc
and
xchg
daa
out
jcxz
dec
sbb
aam
xchg
clc
into
lock
ja
jmp
xor
mov
into
jg
adc
and
int
cld
aas
jle
mov
mov
push
cs
pop
add
lock
scas
jnp
test
mov
push
dec
push
or
xchg
lcall
cwtl
sub
cmpsl
outsl
out
out
enter
and
scas
push
fisubl
mov
or
sti
rolb
sbb
jno
push
pushf
push
mov
popf
dec
fcomip
imul
repnz
mov
mov
mov
imul
dec
lea
cmpsb
aas
push
je
add
pop
pop
cmpsb
or
xor
pushf
push
fisubl
sbb
sub
xor
cmp
into
sti
xchg
sbb
fnstcw
mov
mov
ret
add
stos
mov
inc
ljmp
ret
out
cmp
jg
sub
std
xchg
rol
mov
jmp
push
pop
xor
js
mov
out
cli
adc
xchg
cmpsb
stos
outsb
and
xor
cld
xchg
xchg
jge
mov
mov
push
xchg
sub
cli
aaa
jecxz
jo
push
into
lea
push
or
sahf
pop
cmp
jne
test
arpl
or
outsb
and
lcall
insl
cmpl
sub
out
test
push
cmp
adc
xor
es
in
inc
lods
scas
mov
es
or
rcrb
mov
out
jmp
decb
mov
mov
pop
dec
jge
outsb
jb
inc
mov
pop
dec
gs
mov
in
rol
pop
cmc
rorl
dec
fisubrl
mov
mov
jl
xchg
hlt
adc
stos
repz
sub
dec
ljmp
nop
xorb
jle
jnp
xchg
shll
or
dec
xor
test
add
jmp
inc
addl
pop
jae
dec
std
mov
push
sub
push
push
in
mov
dec
stc
cmpsb
adc
call
mov
adc
ret
mov
bound
fldt
cmp
aas
mov
out
imul
sub
mov
out
xorb
mov
adc
movb
mov
out
in
sbb
dec
cmpsb
sahf
mov
outsb
fsubrs
lcall
dec
mov
xor
lret
push
faddp
xchg
repnz
jbe
dec
cmp
mov
mov
pushf
mov
lret
aam
or
sbb
pop
xchg
push
sub
jge
sub
scas
shlb
clc
or
pop
fwait
jle
das
les
fbstp
sub
inc
ret
push
add
mov
mov
dec
shr
or
mov
add
pusha
filds
pop
in
mov
xor
dec
adc
das
imul
push
dec
scas
fildl
sub
or
sub
sub
jg
or
cmp
jo
fistps
in
cltd
pop
xchg
arpl
mov
scas
push
and
and
movsl
inc
std
js
inc
int
inc
inc
and
push
fs
mov
fstpt
xchg
and
mov
sub
adc
cmp
data16
adc
dec
sahf
sub
jnp
imul
incl
mov
and
lods
push
insl
in
stos
idiv
adc
call
dec
es
or
cwtl
ja
ret
sub
shll
adc
cwtl
stos
push
inc
std
xchg
pop
push
push
iret
rorl
xchg
cmovne
mov
push
xchg
jo
jnp
cmpsb
shlb
mov
popf
popf
jne
adc
test
fstl
cmpsb
pop
cmp
xor
call
xor
call
test
mov
scas
daa
add
inc
push
cmp
hlt
or
cmp
in
xor
mov
popa
xor
jno
rcrb
jae
cmp
daa
pcmpgtb
mov
xchg
cmc
pop
lods
lret
push
leave
push
test
movsl
jmp
scas
je
sti
fstl
adc
pusha
jbe
lahf
xor
sub
shll
cmpsb
xchg
lcall
popa
dec
shlb
sbb
mov
inc
mov
xor
cli
mov
mov
outsb
mov
push
mov
add
xor
add
ds
aaa
jl
pop
xchg
sti
sub
mov
mov
aam
pop
inc
andb
ret
xchg
iret
inc
idivb
mov
fiaddl
jge
mov
push
xchg
aam
rcl
enter
int
iretw
adc
add
sti
xor
js
popa
jl
jne
movsl
xlat
inc
int
enter
lahf
push
pop
jns
cmpsb
or
sub
inc
pop
sub
sarl
test
sub
fwait
ja
dec
sbb
loopne
outsb
sub
push
aad
decb
ja
in
popa
jo
addl
das
adcb
and
mov
lds
mov
inc
and
mov
fs
xor
jae
xchg
fstl
or
mov
push
mov
inc
push
into
incb
or
jnp
pop
xor
pop
add
lea
jp
movsl
add
pop
adc
test
fildll
push
jge
cmpl
xor
xchg
ficoms
inc
or
ja
jg
sti
jo
push
leave
sbb
hlt
jo
aaa
and
push
cmpsb
cwtl
adc
js
pop
push
pusha
imul
and
mov
pop
cld
frstor
sub
sub
loopne
bound
or
adc
and
mov
cmpsb
mov
rcl
testl
cmp
and
jg
imul
and
jno
bound
adc
addr16
lods
mov
push
xchg
mov
inc
ja
pushf
stos
lods
fs
or
or
jmp
adc
pcmpgtd
pop
hlt
adc
sbb
addr16
notb
sub
lds
enter
test
xor
pop
sbb
int3
dec
sahf
xor
les
ret
fisubs
and
rcl
daa
jg
pop
enter
rcrl
cmp
cmp
cmpl
div
mov
sbb
mov
push
lret
iret
and
ret
lods
pop
sbb
fs
jno
inc
mov
mov
jns
push
iret
mov
or
outsl
pop
shrl
push
add
jbe
jo
roll
xor
mov
inc
and
mov
push
fcmovne
xchg
xchg
movsl
decb
mov
stos
rcl
mov
jecxz
mov
sbb
stos
insl
mov
dec
aam
jecxz
out
or
dec
fdivrs
arpl
mov
popa
or
lea
mov
and
addl
arpl
jmp
ljmp
xchg
out
sti
push
or
and
popf
mov
jne
or
adc
pop
mov
sub
fmuls
rcrb
rcrb
imul
cli
loopne
mov
inc
stc
jl
int3
sub
aad
add
jo
mov
mov
scas
sarl
popa
sub
xor
cwtl
sbb
loop
mov
add
and
ss
jne
mov
pop
pop
xchg
xchg
int3
jl
pop
mov
xchg
push
adc
popa
mov
add
cmp
insb
imulb
hlt
pusha
jge
addr16
mov
popl
ror
and
or
test
popf
or
or
mov
cmp
scas
stos
hlt
sti
push
pusha
int3
xchg
ja
push
pop
loopne
adc
pop
cmp
aaa
ficoml
loop
in
inc
jb
dec
sti
dec
rcr
das
add
hlt
nop
fistl
pop
aas
adc
adc
mov
out
je
sti
icebp
pop
pand
xchg
xlat
es
mov
jb
pop
test
cmp
jns
inc
jmp
xchg
xchg
std
jmp
add
dec
and
inc
aas
xor
inc
mov
jno
std
inc
pop
add
mov
xchg
or
mov
mov
pop
in
inc
pop
mov
pop
fcmovbe
fwait
in
mov
jo
data16
push
clc
mov
lret
sbbl
std
push
xchg
ftst
mov
ja
testl
fnstsw
ja
adc
repz
in
mov
fdivrp
jge
pop
push
sub
or
mov
das
mov
xor
fistpll
sub
dec
mov
out
sbb
js
sub
es
or
pop
and
push
dec
popf
push
mov
adc
push
inc
mov
mov
lret
pop
into
lods
repz
add
sbb
repnz
bound
repnz
in
jge
add
popf
fimull
cmc
xchg
lcall
adc
or
push
sahf
xchg
xchg
dec
adc
sahf
mov
xor
xor
add
jg
jmp
cmp
cmp
or
xchg
enter
sbb
call
insb
xchg
je
jae
popf
es
adc
push
mov
or
cld
pop
cwtl
adcl
fst
jmp
inc
xlat
std
dec
outsb
mov
add
filds
mov
mov
loopne
aaa
add
cmp
repnz
xor
mov
mov
sahf
push
xor
jnp
mov
and
out
in
outsl
push
cli
adc
adc
mov
ret
sub
popa
movsb
lret
jl
mov
imull
add
dec
mov
push
xchg
in
xchg
mov
out
sub
mov
dec
repnz
adc
out
mov
cmp
loop
dec
push
pop
cmp
out
pop
pshufw
dec
jmp
mov
fsts
mov
push
lret
pop
cmpsb
lods
dec
jg
jp
push
stc
sbb
sahf
ror
push
add
pop
mov
paddw
scas
or
cmc
xchg
push
shrb
ret
popf
xchg
jge
sbb
jo
and
push
aas
dec
mov
inc
mov
fiadds
or
mov
cld
iret
je,pn
sub
bound
dec
stc
outsl
scas
mov
ret
mov
lret
ret
int3
pop
push
int
push
pop
inc
cmpsl
lea
inc
cltd
shlb
cmp
jnp
out
sub
and
mov
mov
inc
daa
cli
xchg
or
aaa
add
lods
push
movsl
repz
fisttpl
stos
xchg
mov
sbb
push
xor
out
dec
mov
testl
xchg
cmpsl
push
adc
adc
sub
fcoml
cld
mov
mov
lods
sbb
rcll
adc
push
cmc
xor
mov
lahf
cmp
addl
jnp
mov
hlt
sub
insb
sbb
adcl
mov
xor
mov
les
sbb
insb
sbb
jg
leave
mov
daa
dec
jmp
mov
bound
mov
push
fldt
mov
mov
mov
dec
mov
xchg
in
rcrl
fisttps
pop
aam
icebp
xchg
cs
addr16
sbb
adc
sub
cmp
jnp
insl
dec
roll
dec
add
movsb
das
aam
add
sub
icebp
sub
add
cli
cmpsl
test
inc
dec
pushf
repnz
fwait
or
decl
pusha
lods
inc
mov
cli
movsb
push
mov
shrb
xor
or
jecxz
mov
inc
outsl
leave
jmp
in
pop
mov
push
bound
leave
mov
rolb
stc
mov
lea
movsb
in
mov
push
jnp
xchg
subl
mov
add
clc
dec
mov
sahf
push
push
mov
cltd
mov
repnz
mov
and
shld
pop
dec
out
sub
iret
cwtl
das
out
or
fsubs
je
out
call
int
inc
ja,pt
xor
int
jae
fdivs
rcrb
in
fmuls
ss
test
jmp
je
jns
inc
xor
sbb
mov
pusha
fcmove
out
sbb
push
sti
fdivl
mov
lcall
mov
lret
lret
adcb
in
leave
pop
mov
cltd
mov
aam
mov
pop
jle
int
cmpsl
popf
icebp
sub
out
out
je
sub
cmp
pop
popa
add
dec
sub
cltd
jmp
cmp
jbe
scas
push
ret
jp
sub
aaa
js
xor
fst
add
fcomp
adc
fs
jmp
inc
cmc
aaa
mov
xor
leave
xchg
fnstsw
push
je
cs
cmc
cs
mov
arpl
out
int
dec
aam
repz
shll
cli
mov
adc
pop
es
or
push
leave
push
cld
stos
sub
arpl
outsb
adc
mov
adc
dec
mov
fwait
cli
sbb
hlt
xchg
mov
insl
lahf
push
aad
and
bts
inc
mulb
hlt
xor
mov
dec
mov
and
mov
adc
fildl
add
les
rcl
cmp
mov
xchg
js
jae
and
pusha
push
adc
leave
xor
lea
test
inc
nop
js
pop
lea
fs
cmp
add
popf
cmpsl
inc
adc
push
adc
test
dec
jg
pop
lock
mov
lock
in
cli
push
shll
sub
movsb
mov
bound
or
cmpb
out
in
or
insb
cmp
rol
add
mov
sub
cmp
je
frstor
test
xor
iret
push
jbe
lds
imul
bound
mov
mov
cmp
pop
mov
mov
aas
sbb
pop
xchg
sub
imul
test
leave
inc
dec
cmp
and
fsubr
adc
jecxz
packuswb
lock
repz
into
jmp
out
jb
pushf
mov
imulb
and
loop
dec
faddl
ljmp
jnp
out
repz
pop
scas
mov
gs
adc
adc
sub
mov
in
cmp
add
leave
jg
push
in
repnz
xor
sbb
lods
outsb
or
pop
ljmp
fisttpl
inc
inc
int3
loop
lock
test
cld
hlt
and
push
sarl
pop
or
shlb
or
idivb
mov
xchg
mov
xchg
repnz
pop
sub
shl
cs
aad
jl
addr16
fldt
in
fs
push
jl
ss
jne
sbb
aam
lahf
xchg
cmpsb
loop
sub
sub
pop
or
push
ljmp
jmp
addr16
mov
jp
jecxz
in
push
insl
sbb
inc
out
cmp
xchg
jmp
mov
pop
push
movsb
xchg
in
ret
fsubrl
mov
fisubs
jae
inc
das
inc
mov
mov
movsl
dec
and
fisubs
std
mov
mov
in
roll
sub
jae
mov
shl
adc
mov
pop
sbb
les
or
js
rcrb
or
loop
xchg
pop
out
xlat
adc
mov
addl
in
scas
mov
comiss
int3
int3
out
dec
or
hlt
mov
movb
adc
stc
adc
aaa
movl
int3
dec
bound
inc
icebp
cmpl
std
hlt
addr16
or
les
and
incl
jnp
cltd
jge
cmp
test
loopne
std
out
sar
inc
stos
test
jbe
xchg
mov
cli
inc
pop
popa
inc
dec
mov
insl
and
xchg
xor
cmc
lock
je
and
and
insl
data16
inc
incl
xchg
movsl
test
jp
adc
dec
stos
test
fucomi
lods
lahf
push
iret
xchg
sub
js
sub
call
add
cmp
jbe
test
in
adc
fsubl
inc
and
addr16
test
add
ja
arpl
scas
es
inc
add
xlat
adc
rcrl
and
fbld
pushl
jle
loop
mov
clc
repnz
dec
mov
icebp
sbb
loopne
mov
nop
xor
push
ret
fdivr
mov
stc
or
jmp
out
js
pop
loop
mov
mov
es
stos
sbb
xor
mov
je
add
pop
xabort
out
or
cmp
push
sub
sbb
cld
xchg
enter
jae
inc
bswap
cmc
lock
flds
mov
imul
inc
in
xor
test
popf
cld
cmc
cmp
aam
iret
and
jae
push
add
bound
or
in
push
divl
addr16
sahf
inc
push
or
lock
ds
inc
mov
or
jo
cmp
gs
or
shll
cmpsl
iret
icebp
cmpsb
dec
cmc
push
iret
addb
fs
sub
fbstp
loop
fisubs
dec
dec
lcall
pop
out
testl
sbb
sub
outsb
shl
cmp
pop
movsl
mov
push
es
shrl
dec
push
or
push
dec
sub
sti
es
daa
mov
sub
add
mov
imul
sub
ds
shll
scas
lock
stc
icebp
mov
dec
adc
sub
sbb
cld
insb
xor
lret
mov
mov
adc
push
mov
sub
push
add
shll
sarl
shlb
cmpsb
and
outsb
xor
xor
cmp
push
cwtl
insb
jns
mov
xlat
sbb
mov
outsl
sahf
add
add
xchg
xchg
fistps
sub
mov
repz
and
enter
and
and
nop
out
sub
ss
inc
cmpsl
dec
mov
int
loope
lods
mov
je
jnp
int
push
dec
fsts
or
add
les
sub
push
inc
push
jae
pushf
jns
sbbb
aaa
sbb
and
sub
ret
dec
testb
loop
pop
cmp
sub
pop
mov
xor
les
xchg
jp
xchg
fistps
ja
outsb
jae
mov
sbb
inc
daa
nop
jg
dec
mov
dec
in
fstpt
xorl
sahf
outsl
into
mov
mov
xchg
scas
inc
cmc
into
or
jo
imul
aaa
adc
xchg
adc
ljmp
sub
inc
repz
aad
aam
in
into
roll
dec
mov
in
push
jns
pushf
jne
std
mov
test
aas
scas
and
jno
or
jmp
dec
movsb
hlt
dec
adc
add
stos
movsb
and
push
pop
cltd
out
arpl
movsl
adc
es
popa
mov
push
sbb
sbb
loopne
dec
sbb
mov
mov
xchg
inc
mov
xchg
orb
mov
mov
jecxz
test
leave
mov
cmpsl
mov
lcall
sub
push
adc
int
js
outsb
mov
xor
addl
xchg
jecxz
mov
lret
mov
iret
ret
ret
sub
jl
sbb
mov
leave
cmp
in
ja
decl
sub
insl
push
xor
cmpsb
scas
jno
jb
rcrl
ss
cmp
pushf
pop
repnz
lret
inc
notb
lret
dec
inc
outsb
cltd
stc
sbb
jno
pushf
loopne
sbb
insl
xor
arpl
xor
adc
xchg
divb
in
mov
pop
jmp
mov
cmp
ret
or
sarl
cmp
push
add
bound
jbe
imul
mov
fnstsw
dec
and
sub
pop
test
sti
mov
push
xchg
ja
ja
mov
add
push
out
xor
ja
fcmovu
mov
xchg
data16
adc
aas
orl
pop
mov
sbb
dec
dec
and
dec
in
inc
mov
or
ds
sbb
pushf
and
xor
xor
lcall
pop
mov
dec
push
adc
jnp
jp
imul
sub
lea
or
push
cmp
sub
fnstenv
push
dec
cmpsb
bound
call
dec
mov
pop
or
and
mov
sbb
imul
cmp
push
and
inc
fstps
movsb
cmp
mov
movsb
push
adc
int3
jae
or
addr16
jo
fisttpll
sbb
jo
push
sbb
movsb
int
and
xor
das
adc
cmp
push
and
rcr
inc
pop
je
push
cmp
inc
test
add
rcl
mov
pop
imul
mov
bound
push
inc
sbbl
xlat
xor
shlb
stos
xchg
jg
cmp
xchg
fsubl
adc
ret
dec
mov
test
push
ss
fdivrs
dec
and
loope
pop
mov
das
push
push
dec
lods
sbb
sbb
xor
stos
out
sub
mov
dec
pop
and
test
clc
aam
test
mov
xlat
pushf
sahf
push
ficoml
mov
pop
cmpl
dec
push
cmp
xchg
mov
sbb
push
fdivr
push
sbb
sbb
pusha
shl
test
adc
add
inc
lods
aas
inc
aas
and
mov
sbb
sahf
push
aad
jle
or
fadd
push
sbb
rorb
lds
mov
mov
or
fnstcw
mov
ret
cmc
fdivrp
mov
aam
jmp
cmp
inc
dec
stos
addl
daa
pop
push
popa
div
pop
sahf
push
mov
push
leave
add
push
sub
fidivl
shrl
ret
aaa
cmp
bound
int3
mov
mov
lret
pop
fadd
jmp
lea
sahf
lds
jp
pushf
mov
insb
int
pop
ret
inc
or
sbb
roll
and
ret
mov
push
inc
sbb
jb
inc
xchg
adc
push
xor
xchg
mov
mov
inc
lret
jnp
jns
outsb
mov
outsb
imul
sub
jb
adc
dec
mov
jg
loopne
bound
jb
ret
xchg
mov
push
adc
test
outsb
mov
xchg
xchg
push
daa
adc
sbb
mov
ljmp
add
ret
adc
cmp
jno
shl
pop
push
loope
aas
addr16
outsb
test
stos
adc
daa
jne
sub
push
iret
lahf
sahf
push
jno
jmp
je
push
xlat
dec
or
xchg
loopne
subb
lret
dec
mov
xchg
imulb
nop
add
cmp
inc
stc
add
inc
mov
int3
sub
icebp
jb
loop
loop
stos
xor
pusha
or
popf
aad
imul
cld
push
mov
jp
in
jecxz
ficoms
push
leave
stos
jnp
pop
push
in
or
fs
mov
jo
pop
iret
es
pop
inc
daa
rolb
shlb
push
loopne
sbb
xor
nop
cwtl
cmp
inc
sbb
ds
sti
adc
lret
leave
pop
push
inc
lods
out
inc
lea
sbb
into
movsl
push
ret
test
jb
stc
mov
push
sbb
dec
loopne
movsb
xor
cmpb
xor
std
arpl
aam
stc
jae
lret
inc
iret
das
insl
mov
jb
ficoml
ja
je
push
xchg
dec
rcrb
bound
sbb
roll
or
dec
test
ljmp
push
sti
cwtl
outsb
sti
dec
adc
test
sub
int3
js
dec
jno
mov
in
jp
pop
mov
sub
loopne
or
insb
addr16
sub
ds
cltd
add
xchg
xchg
push
mov
mov
outsl
ljmp
add
cmp
pushl
fstpt
hlt
pushf
xorl
out
pushf
and
subl
jo
xchg
pop
cmpsb
mov
imull
pop
test
inc
mov
insl
pop
scas
push
rolb
mov
adc
xchg
imul
and
fidivs
filds
jp
in
cs
fcompl
mov
xchg
out
cli
or
ret
pop
dec
xor
sbb
rclb
pop
dec
lds
add
loopne
ror
call
jmp
xchg
addb
push
lock
add
mov
add
mov
jns
mov
jmp
ja
cwtl
outsl
sub
sahf
inc
dec
fisubs
xchg
imul
loope
cmp
hlt
jb
iret
jnp
stc
scas
mov
jne
clc
or
lds
or
sub
inc
aas
mov
adc
scas
sbb
arpl
lcall
pop
push
arpl
xor
and
push
dec
sub
xchg
outsl
int3
add
adc
fdivrl
adc
stc
mov
fistl
pop
gs
pop
enter
inc
inc
pop
js
dec
in
mov
xchg
fsub
movsb
push
aaa
fsubrs
mov
adc
xor
dec
sbb
insb
imul
sub
out
mov
sbb
iret
pop
aas
lcall
lret
bnd
cmpl
dec
mov
scas
data16
add
out
push
push
mov
dec
sti
aaa
adc
mov
jp
les
test
add
mov
lods
mov
aaa
dec
call
sub
andps
insb
and
int3
daa
mov
fstpl
xorl
cmp
imul
inc
xor
inc
xchg
lds
mov
mov
popf
lock
pushf
leave
push
push
mov
push
out
jbe
sarl
inc
push
into
mov
stc
fsubs
or
sarl
xchg
ret
xchg
xchg
add
shlb
lods
and
das
cmp
xchg
mov
pop
adc
sbb
mov
xchg
int3
aas
pop
aam
test
out
lahf
add
fstpt
push
or
xchg
aas
jl
mov
adc
daa
aaa
lea
insl
mov
push
outsl
push
mov
repnz
cmp
jae
inc
or
or
sbbl
mov
sar
aas
push
and
stc
sbb
jge
pushf
ljmp
ss
adcb
lods
jbe
outsl
mov
test
inc
test
inc
cmp
push
and
lret
adc
lret
gs
das
test
pusha
xchg
dec
mov
adc
lea
lods
mov
cmpsl
sub
dec
cmp
xor
jle
in
aad
fadds
mov
icebp
sub
xor
cwtl
scas
sub
sbb
inc
jg
cli
sub
jecxz
stos
lods
cmp
mov
sbb
jge
jge
adc
sub
mov
pusha
dec
cmp
cmp
xchg
inc
jecxz
in
xor
sbb
adc
pop
and
iret
in
cmpsb
xor
jl
lds
mov
xchg
outsb
sbb
mov
out
jp
cld
stc
sti
int3
leave
jae
xchg
dec
pop
add
es
rcrb
test
xchg
dec
push
adc
js
repnz
ficoms
mov
and
cltd
ret
test
test
mov
mov
sbb
rcrl
fucom
and
cmp
jge
jne
sbb
and
imul
call
in
hlt
push
dec
stc
sub
adc
mov
or
out
adc
ret
fmul
sub
mov
repnz
add
adc
and
mov
in
lret
or
cmpsl
hlt
pusha
mov
pop
rolb
in
sub
and
sarl
scas
lods
dec
cmp
mov
cmc
sbb
xor
loope
add
ficoms
out
dec
mov
js
add
movsb
mov
adc
dec
aaa
push
out
push
pop
faddp
loop
test
xor
shrl
jge
int3
inc
mov
out
sbb
adc
lret
out
inc
jmp
sbb
addr16
jp
jno
fistps
push
dec
mov
lret
or
adc
nop
or
push
je
mov
lods
icebp
mov
inc
xchg
mov
movsb
nop
mov
cs
aaa
jno
lds
std
test
pmaddwd
lock
in
hlt
jnp
into
hlt
mov
ds
xrelease
sbb
imul
pop
stos
add
jb
inc
repz
fwait
xor
push
out
ret
cld
xor
cltd
std
mov
cmp
rorb
andb
jne
in
cld
ret
out
bswap
or
mov
mov
cli
std
aaa
rcll
fisubrl
sub
into
lds
and
push
in
sti
cltd
aas
int3
inc
or
pop
in
sub
push
push
and
roll
xchg
and
push
xchg
outsb
jg
dec
fst
es
das
or
iret
js
mov
mov
nop
addb
xchg
or
loope
test
push
pop
xchg
or
jle
shrb
inc
inc
push
add
addr16
pop
push
cmp
sub
shrl
std
mov
or
xchg
pushf
out
mov
test
lcall
cmc
into
jge
out
leave
xchg
cmpsb
mov
popf
std
sti
xchg
out
shll
out
push
mov
push
pop
push
ffreep
inc
xchg
xchg
mov
pop
movsl
mov
insb
mov
movsl
jg
lock
mov
lahf
insb
not
mov
cwtl
ljmp
add
ret
xchg
push
adcl
dec
mov
loopne
xchg
sbb
xor
push
repz
xor
mov
inc
push
test
push
jnp
mov
xchg
mov
out
sti
push
notl
push
pushf
xchg
pop
inc
or
mov
sti
fists
mov
and
test
sarb
arpl
or
mov
or
xchg
cmp
mov
and
adc
dec
push
push
adc
adc
int
packuswb
cwtl
outsb
into
stos
or
xor
aaa
xchg
scas
rcr
dec
mov
xlat
loope
sbb
dec
jmp
dec
and
or
lcall
pop
xchg
fidivl
jae
push
in
add
je
xchg
pop
and
cmc
dec
add
jp
mov
cmpb
xchg
movsl
mov
rep
pusha
fcmove
and
push
mov
out
lods
lods
cmp
add
addr16
sahf
xchg
fisubrs
flds
loop
cmp
cmpsb
ret
call
dec
xchg
jo
xchg
ss
jno
mov
xchg
adc
push
jmp
xor
lods
xor
je
sti
or
cli
mov
mov
xor
es
fwait
popa
mov
imul
xor
mov
add
pop
outsl
clc
dec
jmp
add
dec
pop
pop
test
testl
xor
pop
adc
mov
and
in
adc
setg
dec
ds
iret
xchg
sti
push
hlt
sarl
and
testl
pop
shrl
jno
adc
test
dec
and
pop
add
adc
shrb
dec
xchg
inc
imul
pop
outsl
dec
jge
mov
pop
stos
xchg
sarb
pop
cli
in
xchg
aas
push
xchg
jae
inc
sbb
dec
in
push
fists
xchg
je
dec
cmpsl
mov
mov
ret
scas
adc
add
lea
push
ljmp
dec
push
fxch
or
sub
movsl
xchg
loope
test
mov
mov
in
or
mov
pop
cmpsl
push
outsb
negl
inc
jg
jmp
push
dec
pop
arpl
cmovp
shrl
pop
cmp
ljmp
jl
mov
lret
int
sbb
jns
xchg
insl
xchg
popa
shrb
cmpsl
xchg
xor
leave
jbe
pop
inc
std
insb
pop
cmpl
fwait
inc
jge
lock
xor
loop
lahf
xchg
test
pushf
int3
sbb
or
aad
cmp
out
cmp
and
pop
dec
dec
adc
mov
aas
xchg
and
clc
xor
scas
pop
ja
mov
imul
mov
call
je
shrb
add
push
push
mov
cmp
pop
jp
clc
loop
mov
adcb
jae
mov
cmp
xchg
push
add
jae
dec
mov
fwait
jns
mov
or
mov
adc
outsl
jns
imul
pop
mov
pusha
cltd
enter
inc
cld
lahf
mov
jne
mov
aas
stos
sub
stc
cmp
stos
mov
mov
insb
adcb
in
or
dec
mov
icebp
mov
jp
outsb
mov
dec
iret
push
push
xor
mov
xchg
int3
cli
adc
ss
mov
repz
lcall
pop
repz
mov
fistpl
in
add
pop
shl
cmp
sahf
inc
cmpsl
pusha
adc
cmp
arpl
xchg
test
add
lds
jnp
sbb
push
js
testb
adc
cmp
repz
inc
xchg
mov
lods
cmpsl
call
dec
adc
or
dec
jnp
push
gs
push
mov
pusha
adc
lret
jae
pop
dec
mov
sbb
in
push
nop
clc
andl
nop
or
jo
out
cmpsl
ja
or
xor
call
ljmp
movsl
das
push
shll
insl
mov
mov
or
mov
mov
js
loope
adc
adc
jle
mov
loope
outsl
mov
push
or
inc
dec
mov
test
cmp
fwait
adc
insb
js
dec
shrb
lock
or
outsl
std
add
enter
dec
loop
or
rorb
sarl
jg
and
and
cmp
inc
rep
fiadds
cmpsl
cmp
push
aaa
sub
cmpsl
mov
push
mov
int3
xchg
xchg
or
jecxz
xor
nop
fwait
mov
mov
or
dec
mov
mov
sub
pop
mov
stos
out
xor
cli
pop
pop
in
xlat
stos
jne
jbe
outsl
mov
sbb
cli
adc
mov
sub
and
cli
adc
sbb
ds
dec
scas
scas
lods
mov
ret
cmp
out
sub
lcall
lds
loopne
in
stc
test
leave
enter
cmp
pop
push
cmpsl
sub
shl
mov
jnp
fdivrl
xchg
xchg
pop
dec
out
test
cmp
in
xor
lock
popa
adc
insl
mov
and
inc
scas
test
shlb
sub
dec
mov
xor
jle
xchg
xor
dec
cmpsl
cmp
scas
gs
fsubr
stos
mov
and
mov
jecxz
or
xor
jl
push
pop
out
repnz
icebp
mov
in
mov
and
jmp
js
adcb
mov
and
ror
iret
idiv
sti
outsl
bound
stos
mov
es
mov
sbb
add
mov
mov
jae
jmp
jb
mov
es
push
adc
xor
lock
sbb
push
aas
dec
mov
rcrl
out
sub
add
xchg
daa
fsubl
ds
dec
xor
loop
cmp
enter
mov
jne
jns
push
daa
mov
loopne
out
test
lods
push
xor
clc
iret
pop
xchg
in
fdivrs
stos
stc
push
sub
inc
lret
ds
pop
jne
jmp
cmc
ss
cld
lods
pop
ljmp
cmc
les
sub
xor
sub
scas
cmp
pop
xor
fisubl
adc
pop
lret
adcl
adcb
fwait
and
lods
jl
push
sbbb
addr16
pop
inc
pop
push
pop
adc
ja
daa
out
in
add
inc
xor
lea
dec
xchg
sub
xchg
cmp
jmp
test
inc
dec
jmp
sub
cli
fwait
inc
and
fisubs
mov
jg
pop
adc
pop
xchg
dec
loop
je
leave
adc
cmpsb
jmp
sub
jle
sti
movsl
out
rcrb
sub
add
inc
and
rcrl
or
or
inc
mov
imul
push
insb
int3
or
mov
add
jmp
dec
push
cld
fbstp
and
hlt
mov
scas
and
pushf
test
mov
pop
aaa
cmp
push
pushf
xchg
sub
and
cmpsb
out
nop
das
jnp
xchg
push
imul
adc
stos
shll
push
mov
orl
out
shrb
stc
jne
and
inc
dec
push
pop
jb
push
pop
jnp
into
mov
idivl
add
nop
push
dec
pop
rorb
sbb
fadds
cld
out
cmp
insb
adc
push
jns
xor
ret
stos
icebp
sub
dec
retw
mov
movsl
lcall
dec
inc
lock
ror
ss
adc
cmp
nop
jmp
mov
add
xchg
adc
dec
jle
sub
mov
out
sub
enter
daa
push
or
out
and
aam
mov
mov
lahf
mov
jecxz
inc
iret
xchg
and
cli
movsb
jo
mov
test
or
enter
adc
insb
mull
push
mov
out
jp
adc
popa
out
cmp
pop
lret
ds
loop
mov
into
hlt
pusha
js
sbb
aaa
and
loope
inc
nop
clc
ds
jge
inc
and
aas
ret
cmp
dec
or
cmp
add
dec
and
scas
mov
xor
jbe
mov
cmp
mov
inc
fcoml
xor
scas
ds
mov
adc
fdivr
jae
mov
bound
je
fisttpl
adc
loopne
push
lea
adc
jne
mov
adc
test
in
out
jg
xchg
sub
sub
nop
pop
jge
jmp
mov
jns
push
ret
and
sub
out
add
mov
into
push
out
subl
cmc
mov
imul
adc
psrlw
les
es
mov
mov
test
ret
mov
insb
movsl
cmpsb
or
in
cmp
fwait
mov
in
cmp
jns
xor
xchg
push
and
jne
push
mov
cli
movsl
loope
rcrb
rorb
lods
icebp
jne
imul
es
out
xchg
sahf
fisubrl
and
lret
inc
into
xchg
xchg
mov
jo
xor
dec
pop
out
stos
inc
cmp
pusha
sub
shrl
jns
inc
ljmp
les
ds
xchg
dec
pop
inc
inc
cltd
cltd
push
orl
mov
push
lcall
cs
adc
dec
sub
sub
test
aam
xor
push
movb
adc
pop
gs
lods
fldt
xchg
fistl
cltd
in
shll
out
or
mov
sbb
rcr
sub
mov
jmp
fisubl
mov
xchg
pop
adc
jp
ss
test
inc
movsl
js,pt
out
xlat
rolb
xchg
adc
or
sti
scas
push
mov
sti
jne,pn
fwait
xor
sbb
roll
mov
popf
stos
xor
out
enter
xor
xor
test
jbe
das
out
xor
aam
bound
pop
nop
movsb
push
pop
in
lock
imul
inc
shr
xchg
pop
es
mov
insb
mov
jo
iret
imul
dec
xor
cmpsl
mov
add
stos
sbb
cli
lcall
push
pop
shll
insb
das
cmc
cwtl
mov
gs
fcomps
lret
xchg
xlat
rolb
repz
js
xchg
pop
inc
xor
mov
bound
sub
inc
xchg
cli
jmp
pop
xchg
das
xchg
mov
sub
outsl
or
test
movsl
mov
test
push
sub
jg
jbe
fisttps
push
xor
hlt
leave
jg
sahf
and
mov
imul
lods
xchg
sar
pop
cmp
cltd
lds
arpl
mov
mov
pop
mov
aam
gs
je
sti
adc
movsb
sbb
out
lret
mov
int
cmp
jb
insl
lcall
mov
cmpsl
mov
adc
pop
jge
repz
mov
imul
shlb
addr16
sbb
fcomi
jae
fdiv
mov
das
dec
add
movsb
shrb
mov
and
push
adc
mov
lock
cli
outsl
fimuls
in
lcall
cmpsb
and
movsl
cld
adc
sti
jp
adc
out
dec
pusha
mov
push
jl
fiadds
or
loop
out
xchg
pushf
mov
fidivl
xchg
mov
outsl
leave
add
sub
ss
jo
xchg
lods
mov
push
xor
push
mov
rorb
pop
push
add
jecxz
dec
stc
jno
push
iret
pop
adc
int
mov
jmp
enter
push
fdivs
or
out
sbb
jl
imul
jg
idiv
xor
leave
push
cmp
inc
mov
mov
ds
loop
fistpll
fistps
push
rorl
sbb
lret
inc
and
sbb
scas
mov
stos
mov
sub
xlat
add
call
sbb
mov
cmp
push
loope
xlat
ja
loope
inc
jp
push
add
mov
inc
test
add
pop
sub
xorl
pop
fsubrl
in
pop
lock
jecxz
lock
andl
in
int
or
out
into
dec
inc
mov
les
jmp
cwtl
lods
inc
inc
hlt
into
cmp
and
inc
mov
scas
test
daa
sbb
pop
rcll
lret
cwtl
lea
mov
mov
add
lods
add
mov
cmp
sbb
push
out
imul
or
mov
inc
andl
mov
jecxz
sbb
std
jnp
in
jne
fldl
das
xchg
push
mov
inc
xchg
sub
in
aad
jno
xor
lock
cwtl
push
mov
call
fucomip
lret
leave
xor
fcmovb
sti
aas
inc
pop
fucomp
into
or
stc
mov
mov
dec
and
les
lds
je
xchg
negl
push
aad
inc
popa
push
mov
push
lcall
js
or
sub
xchg
and
xchg
xor
mov
sub
mov
adc
lea
lods
data16
rcrl
push
xchg
push
pop
fisubrl
push
aad
mov
push
dec
leave
lret
pop
fbld
stc
lahf
pop
in
push
mov
inc
xchg
cmp
mov
mov
xchg
push
nop
cmpsb
cmpsb
mov
pop
xchg
in
inc
sbb
jle
jbe
inc
popa
out
rolb
lds
add
and
shl
mov
scas
dec
loop
inc
arpl
sub
pop
sub
bound
push
out
mov
add
mov
fbld
cmp
ret
jle
cltd
scas
adc
pushf
dec
aas
adc
mov
outsl
xchg
fmulp
adc
cmpsl
es
lods
stc
rep
pop
push
dec
movsb
inc
sub
negl
es
push
push
cmpb
mov
xor
fidivl
xor
mov
stos
push
push
pop
sub
or
push
add
mov
cmp
rol
xlat
inc
jecxz
jns
mov
xchg
outsb
adc
mov
push
mov
pop
test
punpckldq
call
loop
pop
dec
lahf
std
push
mov
mov
or
add
sbb
mov
push
js
pop
fisttps
in
and
call
test
test
sub
and
lret
mov
in
cli
fcom
inc
inc
sub
push
test
push
test
int3
or
insb
movsl
dec
lcall
jmp
mov
jp
jbe
xchg
jae
mov
mov
xchg
ds
xor
mov
addr16
push
in
lret
mov
sahf
xor
subb
insl
xchg
xor
push
mov
add
pop
bnd
add
repnz
add
sub
adc
push
hlt
push
mov
jmpw
xlat
xor
aaa
mov
add
adc
inc
loope
xchg
xor
xor
mov
cmp
subl
mov
fmull
xchg
xchg
push
rol
jge
pop
clc
sub
fisubrs
push
sub
pop
adc
int3
pop
xchg
faddp
dec
adc
popf
cli
xchg
mov
cmp
fwait
daa
frstor
or
test
pop
arpl
adc
jecxz
add
push
mov
jne
adc
es
xor
add
pusha
sub
fsubl
and
push
mov
pop
fwait
jle
adc
aam
adc
or
pop
mov
mov
adcb
aad
jb
push
or
mov
out
sub
pop
ret
push
mov
sbb
dec
dec
arpl
inc
mov
mov
ss
fnstenv
mov
inc
clc
dec
filds
imul
or
adc
xor
shl
cs
sbb
outsl
fnsave
xor
addr16
fisttps
les
sbb
enter
les
out
cmp
and
push
inc
dec
cmp
in
lock
es
push
cwtl
int3
je
pushf
scas
pusha
insl
jbe
mov
das
stos
in
leave
pop
lds
sbb
leave
xchg
mov
lret
out
push
sbb
lods
dec
fbld
sub
jbe
sbb
pop
rol
fisubrl
mov
addl
add
pop
inc
jecxz
fldt
jo
sti
lods
adc
pop
xchg
jns
mov
orl
aaa
adc
xchg
std
jmp
fidivrs
mov
imul
pop
mov
xchg
mov
or
mov
mov
insb
jo
pop
ds
pop
jp
jp
pop
iret
clc
xor
loopne
add
inc
push
dec
popa
icebp
mov
adc
subb
lds
mov
jno
out
nop
mov
inc
xlat
loop
adc
ror
hlt
mov
pop
scas
arpl
ret
out
lret
orl
add
sub
shl
add
pop
cwtl
aad
xchg
pop
pop
lods
cwtl
and
ja
pop
outsb
cli
in
push
and
fs
lret
pop
sub
stos
pop
mov
std
test
push
fdivs
xor
mov
lock
enter
push
outsb
dec
sbb
mov
adc
nop
cmp
xchg
xchg
daa
inc
lods
adc
clc
loop
push
push
mov
je
push
sbb
adc
sahf
or
jmp
cld
rorl
mov
movb
iret
insb
jmp
jge
sbb
xchg
pop
cli
jae
pop
jbe
arpl
push
outsb
sub
popf
lea
cwtl
mov
testb
das
sbb
push
adc
ds
sbb
cmp
adc
add
push
ret
mov
movsb
stc
in
out
rolb
movsl
ret
xchg
add
mov
in
dec
cmp
and
or
outsb
pop
mov
pusha
test
mov
jae
aaa
lcall
jl
push
test
gs
into
xor
ljmp
push
into
pop
xchg
lret
jbe
push
jo
inc
mov
push
add
cmpsl
sub
mov
jnp
push
outsb
push
mov
fiadds
and
test
cmp
call
cmp
cs
push
rcrl
iret
jecxz
icebp
mov
aaa
shlb
xor
lcall
inc
pop
push
call
jmp
sub
push
jbe
imul
stos
mov
pusha
in
fisubrs
push
inc
leave
xchg
or
movsb
pop
mov
jno
inc
cmc
or
rcrl
inc
fxam
jecxz
or
stos
jne
jp
ret
inc
addb
sub
add
mov
push
push
xor
or
pushf
scas
xlat
rcl
fldt
dec
or
sahf
cmp
and
ret
cmp
dec
outsb
test
or
pop
ret
call
mov
xor
add
pop
test
mov
push
xchg
inc
sbb
xor
lret
pop
mov
sti
ss
je
rolb
lea
fsts
add
mov
lret
into
dec
cltd
std
test
pop
std
out
xchg
mov
adc
jp
stos
fucom
inc
or
into
or
sahf
insb
jg
inc
cltd
add
mov
pop
xchg
fistps
and
xchg
les
dec
mov
rcr
cmpsb
cmp
mov
inc
sbb
pop
cmpsb
xchg
mov
xor
lret
cmpsl
lock
enter
clc
sub
loopne
ja
push
cld
test
in
mov
repz
mov
xchg
and
push
clc
xor
mov
xchg
mov
imul
push
negb
scas
popf
stos
movb
push
mov
sub
push
jnp
je
push
inc
jbe
aad
test
xchg
into
mov
sbb
adc
test
sahf
or
sbb
cmp
aaa
cli
pop
call
repz
ret
sbb
push
out
mov
in
jae
add
cld
pusha
dec
sahf
rorb
rcr
push
daa
inc
lahf
out
aaa
jge
mov
aam
cs
cmp
xchg
or
loop
ss
fwait
scas
pop
push
jmp
lods
mov
jmp
sbb
fs
cmpsl
xchg
pop
pop
push
or
loope
cs
stos
and
dec
jecxz
mov
rep
repz
lret
lret
add
mov
je
sub
js
push
shll
jg
arpl
push
mov
and
test
jp
adc
pop
or
cmp
dec
xor
sbb
adc
ja
xchg
pop
movsb
inc
mov
es
out
add
pop
inc
lret
jmp
stos
cmpsl
cld
in
nop
repnz
roll
dec
pop
adc
popf
fistpl
add
cmp
out
decb
mov
in
enter
rcll
adc
mov
push
sbb
push
mov
dec
add
popa
cmpsl
lea
push
js
push
lods
push
mov
inc
jecxz
add
in
ja
out
iret
jmp
push
push
repnz
push
sbb
mov
icebp
push
lock
fcoms
and
or
pop
lret
xchg
ret
out
popf
addb
cli
cs
mov
orb
pop
sub
outsb
fistl
sbb
nop
lea
cmc
mov
movsl
ss
mov
xor
aad
loope,pt
js
xchg
jle
pop
es
cmpsl
pop
push
movsl
clc
pop
xorb
mov
out
xchg
pop
shlb
cmp
mov
jae
dec
pop
xor
mov
push
sbb
scas
push
iretw
mov
lcall
subb
cmp
adcl
push
or
jne
iret
xor
pop
jae
adcl
mov
cld
mov
rcll
shr
pop
stc
loopne
pop
in
jno
lcall
rorl
ja
hlt
jl
je
int3
stc
negb
fxtract
imul
or
test
lcall
stos
adc
cmp
out
test
imul
jmp
popf
sti
bound
mov
jle
movsl
inc
stos
dec
imul
pop
movsl
inc
int
inc
shl
dec
cli
pusha
and
decl
jp
push
dec
cld
adc
mov
inc
cmc
push
cs
add
xor
loope
xlat
test
loopne
js
pop
pushf
addl
xchg
shlb
scas
repz
xchg
cmp
stos
imul
ja
outsb
jge
adc
dec
shll
and
mov
xchg
cmp
cmp
cld
stos
lahf
cmp
cmpsb
je
mov
cmp
sarb
test
jcxz
inc
mov
fistps
inc
mov
jle
mov
pop
aas
jle
mov
inc
scas
icebp
inc
xor
in
jnp,pn
aam
sbbb
iret
mov
xchg
push
sub
fistl
dec
repnz
dec
bound
mov
mov
mov
jmp
shrb
jmp
cmp
test
push
decl
cmp
mov
jg
imul
pop
pusha
fistps
sbb
hlt
pusha
stos
and
mov
int3
cmpl
test
loop
outsb
push
imul
mov
push
test
or
dec
jl
adc
fldpi
add
mov
and
rclb
pop
icebp
mov
fldcw
pop
in
out
fs
repnz
push
cmp
sahf
aaa
test
pop
in
add
dec
es
daa
jae
sbb
mov
clc
stos
adc
mov
aad
mov
div
pushf
psllw
dec
test
movsl
enter
mov
cmpsl
insb
jns
fdiv
into
push
clc
fcomip
xchg
pop
jmp
ss
icebp
add
in
inc
fldpi
lock
pop
xor
sub
xchg
push
and
insl
insl
jne
mov
jno
dec
dec
shrb
mov
push
inc
repnz
fcmovne
popf
in
mov
adc
cli
aam
lret
dec
movsl
jnp
or
les
lret
out
xlat
jno
int
fcmovbe
mov
stc
shll
iret
lods
inc
shl
cmp
test
daa
fstpl
sbb
push
push
inc
addr16
test
imul
mov
jge
push
xor
ret
divl
cmc
pushf
mov
fdivr
insl
pop
sub
push
lcall
pop
jle
jp
dec
into
and
scas
jmp
insl
pop
mov
or
xlat
test
cmp
dec
fldpi
cmpsl
fs
sub
das
pop
push
xorb
stos
loopne
ret
adc
jl
cmc
mov
loope
loop
imul
mov
lret
hlt
and
fistpl
push
arpl
dec
test
std
jne
stos
jbe
or
fnstcw
aam
pop
sbb
dec
mov
dec
ret
jne
stc
cs
or
pop
cli
dec
xchg
push
pushf
repz
fistpl
lods
xor
cmpsb
push
xchg
cmpsl
sub
or
lods
mov
sub
push
pop
fstps
pop
add
leave
lds
cmp
aaa
lds
sti
jo
lods
mov
out
or
leave
pop
sbb
cld
rcll
xor
movsl
mov
jae
jmp
xchg
push
mov
das
push
pushf
shrb
xchg
xchg
gs
push
and
mov
popa
dec
mov
inc
rcrb
push
imul
ljmp
mov
insb
movsb
fstpt
nop
mov
adc
or
mov
sbb
jns
lahf
push
inc
xor
mov
jb
mov
insb
pop
push
xchg
or
sbb
roll
sarl
sahf
cmpsb
mov
ds
sub
cmpsl
pop
and
cltd
push
mov
push
aas
or
lock
mov
sbb
xchg
and
and
sub
xor
cmp
xchg
ret
sar
mov
inc
aad
cmpb
and
in
decb
scas
aad
dec
push
mov
shlb
icebp
js
fldt
adc
mov
inc
pop
dec
mov
andb
les
in
sbb
pop
xchg
insb
scas
loop
xor
and
adc
or
sarl
inc
movsb
adc
mov
ret
push
lods
push
cmp
push
cmp
repnz
inc
push
add
mov
ja
ljmp
shl
cs
cmpl
jl
movsb
pusha
in
jmp
cmp
imul
cli
jp
jg
jnp
lea
xchg
mov
push
xchg
mov
push
ret
popf
push
pop
push
inc
sub
mov
inc
sub
adc
sub
or
in
lret
mov
test
and
sbb
fmull
mov
fsincos
mov
pop
mov
sbb
add
mov
cmp
dec
insb
imul
add
sub
outsb
and
jg
rcll
add
sub
jbe
adc
insb
push
cltd
add
cmp
andb
es
mov
fwait
jge
sbb
pop
or
cltd
pop
mov
aad
add
xchg
mov
add
jmp
stos
sbb
sbb
push
enter
mov
cmp
rorb
out
and
push
cltd
movsl
shrl
push
push
mov
test
sub
rcll
addr16
sub
pop
punpckhwd
std
pusha
movsl
rol
repz
mov
mov
fldl
cld
mov
jno
hlt
adc
mov
sbb
mov
fldcw
xor
push
adc
mov
call
rorl
pop
jo
lods
popf
out
jbe
jle
cmp
loope
push
cli
add
cmpsb
cmp
jp
mov
push
jne
in
sbb
repnz
sub
scas
pop
xchg
in
jae
sbb
dec
push
imul
jg
cmp
outsl
inc
mov
in
push
mov
or
call
shlb
outsb
sbb
cmpsb
cmp
ds
xchg
push
lds
push
push
sbb
xchg
vpaddusw
outsb
and
fisubs
aad
test
cmpsb
jae
mov
imul
jmp
mov
and
aaa
decl
gs
jg
cld
add
rcll
mov
pop
push
sti
or
insb
pop
jo
leave
std
push
xchg
int
jbe
cld
imul
sub
sbb
adc
inc
int
sbb
and
mov
ret
push
dec
idivl
stos
mov
mov
jns
roll
ja
rcr
into
lock
lea
inc
adc
and
movl
mov
in
jl
int3
movsb
sbb
inc
rcl
fadds
popf
mov
inc
lret
ja
fcmovnbe
fisttpl
shrb
call
pushf
jno
hlt
pop
je
popa
jae
addr16
repz
jnp
lods
int3
insl
mov
stos
push
dec
in
cmpsb
dec
xchg
push
mov
mov
and
popf
push
repnz
xchg
mov
pop
sbb
jmp
pop
addl
adc
dec
shll
scas
lret
scas
pop
test
jae
jbe
lods
daa
mov
push
popa
lcall
mov
xchg
inc
adc
xlat
call
stos
enter
jae
lods
sub
lds
push
dec
adc
fcmove
jp
mov
imulb
and
cmc
fucomip
test
adc
lods
dec
ret
scas
pop
push
cmp
cmc
in
hlt
mov
jne
pop
adc
popf
xchg
add
push
fstps
push
data16
aam
pushf
add
inc
push
mov
ds
sbb
aaa
repz
sub
pusha
mov
popa
sub
nop
in
dec
sub
in
lea
sbb
testl
jb
cmpsb
lds
adc
push
jp
test
ret
es
rcr
ret
mov
fistpl
mov
jne
mov
imul
lea
imulb
xor
xor
testl
lods
cmp
bound
sahf
adc
shl
cmpsb
add
push
sub
add
in
fsubs
adc
mov
outsb
aam
adc
push
xchg
sub
aam
lahf
jbe
sbb
into
sub
popa
xor
jle
add
or
xchg
inc
mov
or
mov
and
aaa
adc
push
jp
int3
mov
loopne
nop
jbe
cli
loope
push
xchg
push
jne
or
or
shlb
outsb
jbe
je
je
inc
shl
add
jb
popa
mov
xchg
inc
lock
sub
xchg
pop
movsl
push
jge
cmp
in
jg
add
popa
xchg
inc
cmp
addr16
pusha
ret
mov
inc
mov
stos
mov
xchg
mov
mov
dec
lret
daa
ror
or
inc
js
push
icebp
popf
lods
pop
and
jb
loope
int3
mov
lret
or
in
sub
scas
insl
jg
and
repz
icebp
dec
adc
test
repnz
xor
movsl
imul
lock
and
test
lcall
cmpsl
inc
nop
ljmp
mov
jmp
ss
push
sbb
or
mov
fndisi(8087
lret
loop
sub
das
cmpsl
jne
stc
shrl
outsl
outsb
or
shll
ja
sbb
mov
pop
hlt
popa
cmp
movsl
xchg
sub
xchg
divl
xchg
jp
jns
push
jl
sub
mov
icebp
pusha
mov
mov
mull
push
ljmp
scas
mov
je
jns
adc
inc
sub
or
pop
rcll
js
movsl
xor
dec
xchg
iret
xor
rcrb
sbb
adc
sub
cmp
jg
and
imul
dec
data16
gs
push
data16
int3
xchg
jmp
daa
xor
jmp
mov
loop
outsb
cmpsl
xchg
push
scas
stos
out
mov
add
hlt
fnstcw
sub
push
int3
leave
sbb
cmc
pop
push
and
mov
mov
push
or
jns
jg
or
cmp
fstps
dec
cmc
hlt
push
mov
in
mov
and
insb
out
inc
mov
cmp
movsl
nop
xchg
inc
jo
and
xchg
or
mov
popa
sbb
jo
jne
lds
jge
xchg
daa
sahf
mov
sub
push
mov
cmc
ja
pop
aam
gs
ret
jl
sbb
xchg
in
inc
lret
push
push
outsb
inc
push
cs
cmp
ja
sar
cs
insb
sub
sti
pop
sub
ljmp
xor
aaa
fldl
scas
jbe
mov
mov
mov
mov
aas
nop
inc
les
xchg
dec
xchg
stos
fs
je
cld
push
es
mov
or
rolb
push
stos
mov
pop
in
mov
xchg
jnp
or
push
push
js
and
sbb
cli
addb
in
cmpsb
leave
xor
push
sbb
rclb
mov
cmp
cwtl
lret
sub
mov
stos
lods
dec
pop
popf
ret
jne
adcb
sub
add
ja
mov
shlb
mov
pop
je
mov
push
lea
mov
xorl
sub
adc
push
sub
fstpt
mov
pusha
sbb
ret
xchg
jb
dec
filds
dec
and
xchg
gs
jle
aas
and
mov
lret
mov
cmpsb
bnd
in
es
faddl
mov
jmp
js
push
sub
icebp
insb
add
push
loop
xor
mov
push
cmp
jbe
pusha
mov
jb
sbb
jg
nop
arpl
aam
aaa
fisubs
or
cltd
cs
cld
xor
in
psllw
inc
scas
mov
scas
mov
mov
les
xor
mov
mov
insb
jp
mov
jnp
fnstsw
lods
push
leave
jg
pop
or
push
xor
mov
popf
xchg
outsb
jnp
stc
mov
leave
pop
insl
mov
jne
nop
mov
pop
stos
or
data16
test
bound
mov
cmc
cld
es
aam
fisttpll
imul
pushf
mov
out
inc
lock
jnp
cwtl
sub
stc
adc
out
or
mov
mov
negl
dec
int
cmpsl
inc
pop
mov
adc
shlb
mov
sub
js
sub
movsb
sub
mov
clc
push
leave
xchg
or
push
pop
sbb
cmp
mov
mov
pusha
out
andb
in
sbb
fs
push
adc
stos
pushf
adc
sbb
cltd
push
sarl
cmp
lock
adc
scas
xchg
or
sbb
sbb
push
sbb
lret
mov
pop
out
inc
add
in
lock
faddl
in
inc
jnp
jns
jp
lcall
cmp
and
jbe
pop
xor
call
mov
dec
sub
rcrl
pop
mov
cld
or
mov
cmp
xor
or
push
xchg
cmpsb
dec
and
testl
push
push
pop
jo
sub
inc
in
sub
and
push
and
mov
jmp
stos
dec
lea
dec
mov
in
scas
fxsave
lcall
mov
xor
mov
ljmp
inc
sbb
mov
jno
add
insl
xor
or
jmp
cld
jp
adc
cmp
pop
jb
adc
or
adc
addr16
sbb
mov
inc
jbe
std
stc
jl
movsb
stos
or
mov
push
int
xchg
lods
mov
pop
out
popa
xchg
mov
and
cmc
scas
xchg
jmp
and
pop
push
lahf
adc
lock
jg
std
xchg
cs
rcr
mov
or
xlat
xchg
push
and
jae
sub
negb
xchg
imulb
cmp
mov
loope
inc
test
imul
adc
int3
dec
mov
in
cmpsl
into
test
jle
das
test
ja
add
and
sbb
inc
adc
adc
test
lahf
mov
dec
jns
xlat
cwtl
arpl
inc
cltd
inc
push
ret
cmp
jl
fsub
das
es
sbb
call
jg
fidivrs
xlat
rclb
add
add
push
hlt
icebp
nop
mov
sbb
in
in
clc
sbb
jbe
dec
lcall
add
ret
mov
dec
mov
push
push
xlat
sbb
jnp
scas
int3
pop
imul
xchg
mov
or
fcoml
xchg
push
call
les
fmul
inc
jne
push
idivl
clc
push
dec
mov
push
fisttpl
addb
out
mov
cmc
sub
xchg
test
es
sbb
xchg
xchg
fildll
sbb
or
outsl
fwait
int
and
cmc
es
addr16
imul
jmp
int
lahf
sarb
xchg
xchg
pushf
inc
sbb
das
pushf
mov
ffree
clc
push
sbb
or
push
adc
popa
xor
jmp
dec
dec
loop
inc
mov
popf
push
outsl
pop
add
pop
jge
daa
sarl
dec
ss
xor
cmp
ret
into
pop
in
loope
into
int3
data16
push
and
in
das
mov
mov
std
filds
icebp
push
sbb
ds
aam
mov
movsl
and
icebp
das
aad
xor
shr
sarl
gs
sbb
xchg
or
lock
in
ret
in
je
and
popf
or
add
jo
cmc
leave
out
fnstsw
pop
aas
and
push
xchg
and
jnp
sti
mov
xor
loope
sahf
hlt
push
xlat
cwtl
test
and
out
repnz
cs
or
dec
mov
pop
and
push
mov
jae
push
fidivrs
mov
pop
aad
or
jle
test
push
and
push
into
daa
out
push
jp
add
pmaxub
cmp
imul
xor
xchg
clc
cmpsb
inc
jno
dec
xor
push
shrb
enter
xchg
adc
stos
mov
jo
pop
stos
and
sbb
insb
or
loopne
mov
dec
pop
and
jnp
jmp
arpl
insb
call
mov
iret
xchg
add
aad
dec
mov
test
mov
shlb
push
sahf
push
xchg
xlat
mov
sub
jns
int
mov
and
dec
or
lods
sbb
mov
enter
pop
jo,pt
mov
icebp
xchg
cltd
lret
mov
adc
dec
sbb
out
aaa
mov
inc
fcmovne
sar
mov
test
scas
jns
jl
in
inc
xchg
sbb
sub
dec
xchg
enter
dec
cwtl
adc
add
push
imul
jo
mov
mov
rorb
sbb
xor
insl
push
dec
movsl
add
mov
push
subb
fidivrs
inc
and
and
fisttpll
test
pop
dec
xor
jg,pt
push
cmp
adc
shll
mov
les
ror
data16
minps
mov
ljmp
or
movb
sbb
sbb
lahf
jnp
add
or
jmp
lret
or
xor
ja
stos
and
frstor
mov
and
pop
dec
jns
mov
sbb
dec
jecxz
lahf
test
dec
adcb
and
loopne
dec
les
cli
xor
push
and
xchg
popf
pop
xorb
lret
dec
pop
lcall
jns
ss
mov
out
into
leave
aaa
inc
ds
sub
pop
lret
xor
lods
mov
test
lea
lock
fistpll
jmp
xor
bound
inc
loop
dec
ljmp
aad
orl
ja
cmp
jmp
xchg
pop
jne
add
mov
inc
push
cld
cmp
push
in
lea
notb
jge
out
lret
xor
lods
fisttpl
dec
mov
pop
lret
mov
test
ljmp
sbb
loopne
fstl
jmp
push
cwtl
push
fwait
out
out
cmp
sub
push
sbb
lods
jnp
addl
popf
xchg
mov
jae
dec
nop
outsl
xchg
xor
into
xor
clc
pop
lcall
fistpll
mov
or
mov
out
xchg
jbe
lahf
push
jle
mov
jnp
loopne
andb
or
out
or
mov
leave
fmul
dec
cld
add
inc
cmpb
sub
jle
mov
gs
mov
mov
adc
cmp
push
jne
inc
xor
and
lcall
in
outsl
subl
ljmp
shlb
push
lds
dec
xor
push
insl
xlat
xchg
imul
or
cli
push
push
sub
jle
imul
in
imul
push
push
mov
cld
jmp
sub
out
out
add
lods
in
push
mov
aad
cwtl
loope
jno
in
data16
pop
and
mov
push
cltd
fwait
pop
and
mulb
jg
fimull
in
jb
mul
jp
sbb
negb
loopne
mov
xchg
jne
add
inc
adc
daa
add
enter
lahf
icebp
in
and
xchg
sub
xchg
pop
push
xlat
fadds
sub
dec
sbb
aas
cmp
call
loopne
xor
mov
cmc
cmp
push
inc
cs
xor
insl
outsl
lock
cmovg
mov
mov
or
andb
cs
cld
pop
repnz
stos
sub
dec
in
add
orl
in
iret
in
cmp
loope
mov
adc
shrl
aaa
addb
lea
jne
adc
push
clc
jg
fmul
push
out
lret
sbb
adc
xlat
or
add
jb
repz
dec
mov
inc
cmp
adc
xor
int
adc
pop
out
sbb
shr
test
je
subl
out
pop
mov
cmpsb
pop
repz
jae
and
dec
push
dec
lock
pusha
lea
push
mov
jbe
into
aad
adc
xor
push
xchg
xchg
mov
rclb
loope
inc
inc
adc
pop
inc
mov
cmp
xchg
or
pop
dec
add
adc
xor
xchg
cwtl
lds
adc
fs
test
stc
mov
out
push
pop
inc
out
or
cmp
or
sub
mov
ljmp
cmp
insb
insb
xchg
outsl
xchg
push
gs
dec
and
scas
fidivl
dec
mov
sbb
push
jns
dec
mov
add
pop
mov
sahf
cli
iret
mov
xchg
pop
push
test
fmulp
sub
js
jge
movsl
pop
jb
fsubr
mov
pop
out
lahf
and
shrb
stos
rolb
jae
dec
xor
ud1
insl
add
jbe
ja
push
add
frstor
push
xor
sub
das
stc
add
into
jne
mov
imul
add
and
in
iret
out
add
in
scas
xor
dec
cmp
loopne
cmpsb
js
mov
dec
rcrb
scas
pop
dec
and
inc
mov
les
out
clc
clc
xchg
jge
jbe
dec
or
fnstenv
mov
xchg
add
pop
pop
scas
nop
cmpsl
int
call
cmpsb
loopne
stos
std
inc
stc
in
fnsave
pusha
adc
xchg
inc
std
fdivl
ljmp
cld
movsb
mov
icebp
add
sahf
cs
push
cmp
bswap
ret
fsubrl
pushl
loopne
sbb
push
out
lahf
sub
cmpsl
arpl
outsb
or
cmpl
in
pop
adc
xorb
addr16
lcall
shll
dec
xor
outsb
mov
sti
rcrl
and
jecxz
push
dec
pushf
mov
fstpt
xor
mov
test
dec
xor
cmpsb
mov
and
or
and
jmpw
cmpsl
mov
std
mov
dec
push
ret
call
push
insb
mull
ja
movsb
notl
les
inc
fwait
cmp
mov
addr16
ss
mov
loopne
xchg
test
cwtl
or
clc
add
xchg
repnz
mov
imull
sub
int
enter
sub
lods
adc
and
and
cmp
jno
sub
push
sbb
leave
add
push
mov
adc
cmp
push
jecxz
jp
add
mov
imul
out
in
xor
xor
sbb
fcomip
inc
jbe
push
jno
nop
outsb
subl
pop
aaa
scas
mov
lahf
add
dec
sbb
stc
aam
jg
mov
test
push
je
jnp
sub
mov
sub
cmp
dec
int
mov
mov
mov
and
cltd
push
int
imul
mov
mov
cmp
addr16
jg
lret
movsb
xor
xor
adc
or
or
cli
dec
xor
inc
push
jne
or
push
add
dec
testb
xor
test
push
shl
adc
and
pop
hlt
imul
dec
cmp
cmp
lock
jmp
pusha
insl
insb
gs
andb
pusha
fdivl
mov
sub
fcoml
jp
bound
daa
sbb
mov
mov
adc
xor
lods
pop
out
pop
mov
add
faddl
adc
inc
adcb
dec
mov
cmp
arpl
shlb
hlt
jp
cmp
insl
cmp
sarl
mov
xlat
fimull
cwtl
out
mov
cmp
iret
xor
inc
js
aas
pop
add
outsl
pop
dec
xor
movsb
clc
pop
divl
add
pop
test
aad
rorl
xor
jae
aas
iret
rclb
sbbb
in
sbb
pop
jl
push
lea
in
subb
orl
outsb
cmp
sub
adc
ret
and
sahf
sbb
xor
lock
sahf
sbb
adc
pop
scas
in
int3
inc
fcomi
mov
or
adc
ss
mov
nop
xor
push
fstl
sub
xchg
mov
sbb
xchg
mov
std
jl
xchg
xchg
sahf
inc
test
sarb
cmc
lret
sbb
mov
jle
mov
daa
adc
insb
and
imul
out
movb
gs
mov
out
fs
mov
xchg
ds
adc
jo
dec
pop
sub
pop
pop
insb
xchg
lods
into
lahf
aaa
sbb
push
and
cmp
xchg
aaa
dec
insb
pop
add
loopne
push
lds
insl
jle
fisttps
in
outsb
fbld
cwtl
add
mov
mov
mov
lods
ficoml
jnp
lcall
xor
fdivp
mov
notb
into
cltd
xor
insb
test
xchg
mov
adc
inc
gs
movsl
xchg
std
cli
out
test
repnz
jmp
aas
xchg
add
fidivs
dec
inc
aad
out
mov
dec
and
sub
outsl
cmpsb
jns
movsb
mov
mulb
aam
ret
int
pop
into
cwtd
pop
ficoms
imul
adc
push
and
stos
and
fdivrs
mov
dec
adc
sub
xchg
push
pushf
push
mov
out
mov
clc
into
divb
insl
mov
xchg
xchg
movsl
bound
mov
add
lods
fildll
ljmp
inc
fsubr
lret
pop
xchg
ret
sub
scas
adc
jmp
mov
mov
in
rcrb
sarb
xchg
push
lea
pop
add
add
sti
and
jb
fdivs
fsubl
jb
dec
bound
lret
enter
sub
jle
dec
popa
imul
sub
mov
jo
pop
push
adc
mov
adc
pop
std
cmp
mov
clc
xor
dec
sub
jge
cmp
lret
int
or
test
leave
sub
stc
cwtl
and
hlt
xchg
dec
outsb
dec
cld
cmp
xor
clc
jecxz
jge
or
cld
gs
js
mov
mov
push
inc
inc
push
push
or
test
pop
pop
adc
nop
or
add
pop
and
xchg
push
push
mov
out
fistps
cld
pop
xor
inc
mov
ljmp
or
lret
enter
sub
shl
outsl
out
popa
pop
add
jo
loopne
mov
mov
int
or
cli
cmp
jmp
adcl
jmp
popf
movsl
and
div
insb
xchg
jbe
ret
ja,pt
imul
pop
push
xchg
dec
out
jecxz
and
cmp
ds
or
aam
sbb
xor
dec
sti
jecxz
out
imul
xchg
imul
fcmovb
cmpsb
xchg
and
fisubl
xchg
push
mov
add
mov
jns
std
pop
or
out
cli
push
adc
sbb
pop
mov
mulb
fcmovne
or
mov
xor
pushf
adc
cmpl
bound
lea
ret
movsb
cmp
cmpsl
push
dec
das
loop
pusha
hlt
add
xchg
dec
jecxz
stc
sbb
pop
jle
or
dec
cmp
int
in
imul
cmpsb
arpl
popf
push
jae
jnp
fcoml
xchg
jl
push
mov
lds
outsl
mov
sub
clc
mov
push
pop
cs
push
or
lock
jbe
pop
je
sbb
sub
xlat
jae
in
out
cmp
adc
push
mov
lock
mov
es
cs
insb
pop
out
int3
sbb
pop
rcl
stos
dec
add
leave
inc
imul
mov
les
insb
mov
sar
and
jl
dec
pop
idivb
and
ss
popa
mul
inc
aad
add
mov
pop
adc
mov
test
mov
sub
ficomps
fldcw
cmpsb
lock
xor
lds
dec
popa
cmpsb
adc
cmpsb
jne
leave
pop
mov
add
stos
imul
push
shlb
jno
inc
inc
addr16
int
repz
cmp
dec
mov
outsb
and
outsb
jge
je
xchg
xchg
hlt
jle
dec
stos
xor
mov
pusha
cmp
sub
add
and
jp
mov
aaa
adc
mov
in
mov
fimull
into
std
xor
popl
mov
xchg
mov
push
xor
xor
push
and
cmc
adc
push
arpl
mov
or
mov
mov
sub
xchg
or
int3
push
fsubs
cmpb
out
mov
imul
xor
loop
imul
enter
dec
sbb
ja
adc
sbb
or
lods
sahf
ja
rcrb
insl
cmpb
inc
aad
sarl
aam
inc
pop
sub
gs
mov
arpl
cmp
dec
push
fisubrs
cmp
push
mov
pop
shlb
mov
xor
je
sub
hlt
mov
cmpsl
and
cmpsl
or
out
test
push
aaa
mov
daa
jp
xchg
jl
xorl
push
add
std
int3
aad
xchg
ds
cmp
sub
mov
ljmp
aad
stc
cmc
test
add
add
push
or
lahf
pop
cmc
mov
clc
pop
pushf
sbb
inc
daa
xlat
inc
loopne
push
jo
aam
push
sub
in
ret
add
cs
mov
mov
mov
sub
ficompl
ja
repz
lcall
icebp
cmpl
out
ret
adc
outsb
or
jns
out
xor
dec
jne
mov
add
jmp
fs
pop
add
push
inc
cld
mov
xchg
adc
jne
aam
test
jns
ljmp
cmc
dec
movsl
scas
fisttps
rorl
mov
xchg
jns
imul
daa
sub
mov
pop
out
or
and
pop
out
add
cmp
pop
ret
push
cwtl
dec
dec
xor
mov
int3
jp,pt
in
mov
pop
cmp
fisttpll
xchg
insl
lods
mov
out
sub
out
cs
aam
out
test
test
enter
ret
cmp
fiaddl
stos
loop
pop
mov
cmp
jg
and
add
xor
iret
xor
leavew
pop
xchg
daa
je
lret
xchg
pop
ljmp
sub
or
and
pusha
lods
jns
xor
jecxz
stos
ds
inc
mov
inc
or
imul
sub
or
ss
stos
fdivr
aaa
xchg
inc
aas
stos
pusha
mov
fstps
cs
cmp
enter
hlt
dec
sub
imul
dec
sbbl
jmp
push
and
clc
lret
loopne
sub
xchg
dec
jno
sbb
inc
xchg
sbb
sub
ss
insb
push
mov
ficoms
repz
outsb
inc
adcl
sbb
repnz
cmp
fsubrp
inc
lcall
sbb
pop
xchg
pusha
push
shll
test
ret
add
jo
lcall
dec
in
mov
adc
dec
scas
inc
jne
inc
mov
jne
dec
push
push
jbe
sub
xchg
lret
fstpt
gs
outsb
dec
jmp
push
cld
out
xchg
mov
dec
and
cmp
fldl
push
fwait
pop
outsl
sbb
shl
rcr
push
divb
cltd
xor
and
and
add
setle
iret
mov
xor
pop
fnstsw
xor
daa
ficoml
into
adc
insb
inc
in
cmpsb
out
jae
icebp
sub
fimuls
xchg
jo
iret
adc
xchg
push
sbb
fldenv
ror
addr16
jne
aam
fidivl
outsb
adc
mull
mov
push
or
xlat
xor
lock
mov
adc
dec
sbbb
ror
in
lret
aas
mov
sub
mov
xchg
icebp
push
adc
and
testl
mov
lret
sbb
imul
in
repz
sbb
scas
pop
out
jb
or
jae
enter
loope
popf
addb
std
roll
inc
lock
addb
mov
xor
mov
test
inc
pop
aas
jge
into
shl
addr16
jno
bound
and
adc
out
ds
or
mov
add
lods
cmp
push
push
pop
sub
aad
and
pop
sbb
bnd
jbe
jb
mov
out
cmc
aad
icebp
xchg
add
popa
xor
ljmp
out
std
imul
pop
pop
repnz
es
fidivrl
push
push
jns
lea
aad
pop
mov
xchg
push
sub
sbb
mov
fsts
pop
xchg
add
sarl
lock
pop
pusha
test
cwtl
and
sub
scas
mov
or
cmp
pop
popa
jg
imul
ljmp
pop
faddl
xchg
clc
mov
mov
jp
pushf
leave
inc
fmull
cs
mov
mov
out
cmp
xchg
adc
and
bound
push
popa
mov
dec
imul
pop
push
gs
pop
movsl
jo
dec
adc
ret
mov
pop
cmp
daa
je
je
adc
fsubs
cld
dec
push
repnz
fdiv
xchg
mov
scas
and
xor
jno
add
push
stc
movsl
lock
mov
xchg
jmp
cmp
adc
xchg
cmpsb
stos
iret
jp
or
cmpsb
ds
jge,pt
pop
aas
dec
fwait
mov
mov
mov
mov
movsl
insb
add
sub
ret
lret
sub
sub
mov
pop
andl
sbb
popa
cmp
enter
push
jbe
mov
sarb
dec
movsl
scas
push
and
loopne
ficomps
add
mov
xchg
mov
shrl
mov
in
aad
fwait
aaa
lea
arpl
sub
ss
xor
enter
imul
fmul
in
movl
sbb
inc
mov
or
fisttpl
sub
or
nop
out
sub
ret
rcrl
pop
sub
addb
ret
mov
jbe
enter
mov
in
testb
mov
leave
cmp
sahf
mov
lret
add
jge
leave
pop
xchg
out
pop
dec
bound
adc
cmp
mov
cmpsb
lock
hlt
pop
and
test
mov
push
xchg
and
or
and
or
popa
or
popa
int3
scas
bound
lods
pop
pop
jo
imul
cld
js
pusha
cwtl
lods
into
pop
out
jne
cmp
pop
xchg
push
insl
xor
or
xchg
pop
xchg
push
and
mov
mov
shrl
adc
stos
pmaxsw
int3
mov
or
cmp
inc
lds
sub
shrl
ss
cmpsl
movsl
cmpsl
enter
or
out
popa
mov
inc
or
ds
cmc
pop
or
add
orb
lods
mov
into
dec
aam
or
mov
lock
mov
push
dec
lret
scas
or
gs
add
mov
or
jg
sub
inc
test
sahf
mov
mov
ror
or
jae
adc
adc
rcl
ret
stc
xor
inc
ficompl
xor
and
fcom
int3
int
or
test
sbbb
scas
mov
mov
mov
xchg
sti
dec
and
imul
lods
xchg
inc
xchg
pop
adc
jo
loope
mov
out
mov
xchg
add
mov
add
mov
lods
xchg
push
mov
std
sbb
rcr
popf
push
hlt
hlt
sbb
pop
sub
clc
inc
aaa
or
push
inc
shlb
xchg
in
push
mov
jns
xor
insb
fisubs
insb
fdivrs
mov
xchg
and
lods
dec
test
lret
das
pushf
cld
and
imul
daa
scas
and
pop
rorb
ja
inc
xchg
bound
jmp
push
test
xchg
sbbl
das
and
mov
ljmp
sbbb
stos
loope
out
mov
sahf
shlb
jle
call
or
or
jo
outsl
rcrl
fidivrs
loopne
push
loop
pop
sahf
aam
insb
inc
inc
call
mov
or
test
push
and
push
stos
mov
test
outsb
test
push
mov
nop
cmp
loope
xchg
jg
inc
xor
jl
adc
mov
fisttpl
daa
fbld
popf
ss
testb
test
imul
call
lock
jnp
fildl
cmpsl
jne
ffree
adc
addb
mov
aaa
loopne
push
sar
add
pop
pusha
popl
stos
sub
jmp
call
xchg
push
fadds
or
bound
sub
jge
pop
inc
inc
sub
aas
sbb
mov
stos
dec
decl
add
jmp
pop
loope
scas
push
enter
cs
clc
fldcw
lret
jg
es
and
push
stc
or
or
nop
mov
repz
xor
outsw
add
pop
mov
js
outsb
fwait
movsb
xor
ljmp
sbb
loopne
push
jbe
mov
lea
add
or
repz
mov
mov
cmpsb
lret
outsb
jbe
test
cmp
sbb
dec
loopne
iret
or
jae
aaa
aas
push
pop
stos
mov
sahf
cmpsl
pop
sarl
pop
pushf
add
xor
sbb
cmp
adc
xchg
inc
in
add
inc
adc
inc
ljmp
xchg
movsb
sbb
mov
inc
add
in
push
test
and
pop
rolb
adc
scas
add
sub
inc
fs
call
xor
in
jmp
into
pop
not
ret
xor
ds
out
cmpl
adc
mov
push
cwtl
in
lods
xor
pop
fstps
data16
clc
push
inc
jbe
jle
or
inc
jo
lcall
jns
loope
cmp
nop
sub
pop
adc
bound
xor
fisubl
dec
push
sub
js
xor
jp
pop
call
imul
or
in
into
fwait
sahf
jl
pop
popa
lret
mov
or
enter
mov
das
and
add
xor
mov
pop
into
es
pop
xor
test
and
ljmp
add
add
jae
into
lods
mov
and
lods
popf
xor
shlb
scas
inc
icebp
and
lds
xor
aas
rol
pop
loopne
aad
adc
popa
jnp
cmp
push
and
stos
mov
loope
sbb
jbe
sub
dec
jg
push
jecxz
mov
cmp
dec
and
push
and
xor
pop
mov
sbb
addb
adc
cmp
push
inc
xchg
fistpl
into
adc
loop
inc
fsubr
mov
fsubl
es
fldcw
dec
mov
xor
scas
pop
int
lods
push
test
mov
fcomps
cmc
in
mov
cmp
adc
sbb
pop
xlat
ret
clc
mov
push
pop
sbb
aad
out
xchg
aas
pop
enter
movsb
sbb
xchg
inc
xor
roll
notb
lods
sti
popf
xchg
jno
xchg
adc
gs
or
aaa
fdivrl
jnp
sbb
loop
imul
nop
or
xchg
cwtl
mov
js
dec
push
into
icebp
xor
xor
clc
sbb
cmpsb
adc
inc
jne
arpl
scas
push
scas
sbb
movsb
sbb
jle
mov
fists
xchg
ret
outsl
jne
in
jbe
loope
or
xor
loop
mov
pop
jno
xchg
adc
pop
push
in
loopne
clc
jae
mov
xchg
fdivl
popf
imul
outsl
nop
sub
mov
xchg
fistl
pop
cli
sbb
pop
dec
mov
loop
jge
jl
jp
sahf
bound
aaa
adc
popa
shrb
sti
popf
add
inc
outsl
xor
fisttpl
push
dec
xchg
popa
cmpsb
dec
gs
dec
cmp
sbbb
xor
or
or
popa
mov
mov
aad
jecxz
mov
std
cmp
sub
test
mov
pop
xchg
mov
sub
pushf
movb
inc
xchg
sub
mov
pushf
xor
fdivs
fcoml
call
stc
and
addb
inc
lret
arpl
fcomp
fstpt
jmp
push
popf
mov
in
mov
pop
je
insb
dec
cmp
pop
dec
bnd
cmpsl
add
push
xlat
xchg
mov
adc
push
fnstsw
mov
jmp
mov
pusha
sub
jnp
sbbl
les
rcr
mov
xor
lcall
xchg
pop
nop
das
and
jo
sahf
imul
js
subl
cmp
xchg
popf
lods
push
aad
lods
jmp
fnsave
jbe
rorb
mov
add
loopne
orl
or
sbb
or
adc
mov
adc
lds
in
jnp
jae
fidivl
sub
int
lret
mov
push
sbb
mov
je
pop
jmp
sub
imul
test
mov
inc
mov
shl
push
ret
movsl
cld
addr16
setb
imul
in
pop
sahf
pusha
jmp
and
pop
add
popa
mov
mov
adcl
cmp
lds
xor
lds
scas
push
lret
sbb
negl
sbb
xchg
ljmp
lret
push
push
fwait
mov
lods
push
addr16
adc
shlb
ds
push
mov
and
outsl
shll
hlt
int3
out
cld
shll
and
popf
jecxz
inc
fucomp
daa
push
dec
cld
jg
cmp
add
mov
fisubrl
push
push
cld
xor
xchg
or
add
xchg
cs
add
xor
jl
mov
dec
push
out
add
test
add
or
adc
lods
and
mov
dec
and
dec
inc
sub
insb
lods
fisubl
pop
cltd
pushf
scas
xor
fisubs
fnstsw
das
push
sbb
dec
je
cmpsl
push
xchg
inc
popl
push
ja
in
mov
xchg
ss
popf
sub
mov
insb
jle
pop
adc
add
jge
into
mov
jmp
mov
mov
lods
jle
sub
jg
lret
mov
arpl
cwtl
sbb
leave
mov
test
cld
cmp
sbb
test
pop
sbb
mov
mov
add
data16
mov
inc
out
ljmp
mov
and
arpl
arpl
les
mov
outsl
test
jnp
and
ds
add
or
cltd
hlt
mov
into
sti
stc
sahf
xor
insb
push
lahf
cmp
lea
push
insb
inc
in
mov
pop
jle
jmp
sbb
fwait
xchg
mov
stos
adc
mov
inc
xchg
mulb
loop
rcr
push
mov
jne
adc
or
inc
ret
push
data16
iret
enter
out
push
pop
mov
fiadds
push
out
cmpsw
fs
sbb
nop
pushl
je
dec
and
sti
movsl
sbb
das
inc
adc
pop
dec
inc
clc
fucom
mov
lret
sub
xor
push
lods
push
xor
mov
pop
xlat
and
in
xchg
clc
insl
pusha
insb
add
push
scas
sbb
sub
ja
xchg
push
sub
jp
pop
pop
dec
popf
jne
mov
ss
hlt
dec
lret
jmp
sarl
cmp
bound
cmp
pop
addr16
mov
dec
adc
and
xor
into
sub
pop
add
cmpsl
outsb
pop
and
cmc
das
test
inc
int3
in
out
enter
jp
and
inc
mov
jl
outsl
push
fidivl
cltd
xor
pop
in
xchg
inc
sub
pop
std
mov
nop
pusha
cld
adc
ljmp
pop
mov
sub
push
and
movsb
vmread
lds
xor
mov
aam
mov
and
add
push
mov
shll
dec
nop
push
mov
xlat
push
cli
push
gs
aaa
xor
dec
xchg
cwtl
dec
pusha
lds
and
pushf
jge
pop
mov
inc
out
lcall
je
data16
pop
lds
sub
pop
into
and
or
shll
into
mov
ss
add
lds
and
fmull
and
fwait
xlat
jbe
cmpb
or
aaa
pusha
and
mov
addr16
fstpl
test
ret
insb
push
push
stos
addb
mov
jp
lock
enter
fld
outsl
push
pop
add
dec
mov
xchg
sti
cmp
and
loop
mov
sarl
jmp
fistpl
lcall
mov
xchg
enter
pop
sub
mov
xchg
mov
mov
imul
pop
mov
aam
mov
hlt
or
inc
mov
imul
mov
mov
mov
shll
cli
aas
xor
iret
pusha
add
inc
rorl
pop
xor
lret
shrl
dec
sub
push
dec
inc
jl
mov
pop
test
fmull
adc
lahf
movsb
pop
orl
jae
mov
cmp
popa
addr16
mov
cwtl
cmc
and
mov
mov
sbb
push
test
es
push
xchg
popa
pushf
jle
cli
push
cmp
cmp
sbb
pop
xchg
std
stos
or
cmpsl
xor
sbb
in
sbb
cmp
scas
push
mov
cmp
movsb
sub
mov
push
inc
or
mov
or
ror
int3
gs
sub
out
rorb
push
adc
inc
mov
nop
sbb
pushl
push
daa
jge
and
jle
imul
jl
xor
or
adc
pop
and
shlb
add
dec
or
push
movsl
pop
mov
fistpll
fisubrl
cmpsl
popf
add
xchg
fimull
pop
sarl
xor
into
into
cmp
sub
lea
mov
sar
xor
and
int
sub
pop
mov
cmp
fs
sub
mov
stc
xchg
pop
pop
push
aad
xchg
mov
pop
push
push
sub
sbb
divb
fsubl
add
sbb
or
jne
add
xor
sbb
in
mov
and
mov
jl
pushf
or
dec
cwtl
sbb
jecxz
dec
aad
pushf
cmc
into
jnp
std
into
cmpsl
in
gs
stos
inc
mov
jl
xor
inc
pop
inc
outsb
dec
roll
ljmp
rolb
mov
daa
sti
or
adc
xor
lahf
loope
jno
popf
mov
and
pop
sub
cltd
insb
test
imul
mov
movsl
cmp
orl
and
es
movsl
stos
pop
pop
push
repnz
decb
and
sub
push
in
pavgb
in
ljmp
mov
cld
addr16
lds
out
mov
jl
add
dec
sbb
mov
xchg
and
arpl
subl
test
call
mov
in
pop
stos
out
sarl
in
push
aaa
push
xor
or
daa
cmp
jl
and
sub
inc
fcoml
push
adc
xchg
cmp
xor
mov
pop
add
pop
scas
in
cmc
and
adc
repz
movsl
jnp
dec
inc
arpl
push
xchg
cmp
mov
call
fsubr
je
xchg
mov
daa
push
jns
int
sti
or
jmp
fsubrs
mov
push
lea
mov
push
lret
mov
out
jecxz
xor
nop
mov
out
dec
popf
lods
dec
mov
xchg
mov
hlt
stos
adc
imul
cmp
mov
arpl
cs
out
clc
cmp
aam
xor
dec
sub
rorb
mov
mov
mov
sub
sbb
stos
std
repnz
push
fisttps
aaa
adc
mov
jns
jno
into
sbb
pop
adc
jp
cmpsb
aas
mov
jbe
sarb
mov
mov
rcrb
push
and
cmp
pop
cs
out
jo
pop
test
movups
mov
add
sbb
insb
push
inc
mov
insb
rcl
mov
jl
sbb
sar
mov
lds
push
fiaddl
aam
out
adc
xor
insb
out
sub
fstl
push
int
inc
aad
sti
xchg
insb
cltd
movsb
mov
xor
add
jge
inc
imul
or
cmpb
stos
mov
cmp
pop
xlat
es
pop
push
jbe,pn
rcll
add
stc
shl
push
mov
std
sub
pop
mov
push
outsb
and
push
adc
arpl
xchg
test
mov
sub
arpl
loop
jp
fisubs
shrl
repnz
or
dec
jnp
xchg
mov
xchg
std
test
lcall
cmp
mov
sub
insb
jns
ret
aam
jle
inc
fdivrs
mov
dec
sub
inc
jge
sbb
clc
stos
sbb
inc
and
js
arpl
mov
das
andb
jns
adc
pop
call
fwait
loop
pop
jnp
inc
cmp
dec
adc
dec
or
mov
cmpsb
notb
push
xchg
xchg
mov
mov
mov
inc
mov
sti
shl
loope
sbb
rorl
cmc
fwait
pushf
scas
dec
or
pop
jmp
loopne
xchg
enter
jno
outsb
loop
pop
jnp
push
dec
fwait
out
sar
xlat
inc
andl
pusha
out
dec
dec
jb
idivl
ja
jns
jg
shlb
xor
dec
sub
aas
loopne
mov
hlt
addr16
adc
movsl
xchg
fdivl
orl
adc
imul
mov
sub
scas
push
int3
mov
and
int3
popa
xor
in
xchg
inc
int3
push
mov
sub
cmp
iret
lret
rclb
push
pop
popa
xlat
sub
sbb
test
lock
and
add
fisubl
std
push
sub
inc
pop
or
push
daa
mov
ja
adc
arpl
shr
pop
addl
aam
lcall
out
adcb
add
aaa
daa
push
sbbl
icebp
out
fists
call
mov
push
ljmp
mov
pop
pop
movntps
jbe
mull
mov
scas
mov
or
mov
xor
lods
inc
jp
xchg
cmp
loope
fs
jmp
xchg
fpatan
xchg
std
mov
scas
ret
data16
pusha
mov
and
xchg
lods
xor
out
lahf
push
loop
ljmp
mov
mov
jge
orb
pop
ja
enter
sti
imul
mov
into
dec
inc
cltd
push
movb
mull
push
jle
mov
sbb
test
or
inc
repnz
in
insb
pop
jmp
jle
xor
fwait
movsl
cld
imul
lahf
add
jb
lahf
cvtdq2ps
lods
nop
testl
mov
scas
xchg
sub
das
gs
cmpsl
stc
inc
mov
adc
add
dec
mov
cmp
ret
cwtl
and
adc
mov
mov
add
outsb
xchg
das
xor
std
and
sub
add
lds
mov
mov
dec
sub
xchg
mov
sub
xor
int3
pop
outsl
mov
shrl
add
or
icebp
xchg
popa
arpl
imul
mov
out
add
mov
inc
inc
mov
mov
insb
cmc
mov
and
xor
stc
daa
shlb
dec
xor
clc
jmp
popf
push
xchg
roll
imul
test
ljmp
sarl
imul
and
movb
in
mov
pop
lock
jecxz,pn
cmp
mov
xchg
pop
rorl
mov
nop
nop
push
push
push
lds
mov
and
sub
test
fiadds
xor
mov
xchg
mov
push
jmp
cs
push
subl
notl
loope
imul
rclb
and
stos
sbb
or
and
or
sti
roll
mov
cmc
lods
push
ficompl
mov
mov
lcall
fcmovne
push
inc
sub
sti
dec
movl
dec
jmp
int3
xchg
cwtl
lea
or
lret
and
add
cmpl
out
pop
jno
mov
sarb
test
leave
pcmpgtb
icebp
lret
sbb
test
iret
push
pop
bound
cmp
adc
pop
jp
and
pop
sarb
and
jno
dec
sub
stc
push
dec
sbb
push
mov
sbb
fildll
and
mov
fsubrs
mov
fcomps
jbe
ret
sbb
outsl
sub
mov
adc
dec
xchg
movsl
push
xchg
push
popf
sti
mov
lock
mov
xor
inc
cmp
cld
jbe
pop
adc
sbb
or
jo
insl
mov
test
and
xchg
loopne
fs
xor
jmp
pop
and
dec
inc
push
sub
cmp
xchg
xchg
xchg
cmpsb
bound
pop
cmp
scas
push
push
jl
lods
test
mov
lock
inc
cld
add
bound
inc
mov
ljmp
xchg
dec
cmp
or
dec
addr16
and
out
jl
ret
cmp
jae
or
test
aaa
pop
sub
into
jne
push
stos
xchg
mov
and
dec
add
or
int3
cmp
pusha
push
push
adc
repnz
xor
shll
inc
arpl
aaa
fsubs
push
into
mov
pop
int
cmp
mov
lods
sub
dec
das
pop
mov
das
enter
mov
cwtl
push
mov
add
dec
pop
jns
dec
inc
mov
movsb
lods
inc
repz
das
scas
sbb
sub
push
jne
jne
push
ret
fisubs
cld
jae
jbe
and
sbb
repz
mov
pusha
int3
push
dec
arpl
mov
sub
shl
fstl
inc
push
sahf
push
stos
and
adc
outsb
push
pandn
adc
xchg
jb
and
pop
cmpsl
mov
sbb
aas
rorl
adc
test
cli
icebp
int3
lret
pop
js
fs
inc
xchg
inc
jns
out
lods
sub
divl
sub
out
or
lods
sbb
push
fiaddl
in
cs
mov
xor
cmp
push
or
fcmovb
xlat
es
cmp
mov
lret
push
nop
pusha
or
pop
adc
inc
insl
lea
jl
arpl
push
pop
fmul
xchg
mov
cs
imul
xor
andb
ds
dec
pop
sub
sbb
aaa
loop
sub
decb
mov
push
scas
lods
notb
push
in
inc
ljmp
jecxz
mov
xchg
dec
dec
leave
push
sbb
inc
and
fcmovu
fdivrl
xchg
addr16
adc
in
icebp
fnstsw
sbb
sub
lahf
sub
sbb
or
fldenv
out
pop
adc
dec
stc
mov
je
movsl
mov
test
mov
and
scas
push
jne
add
call
and
sbbl
adc
mov
aam
inc
xchg
mov
pop
loopne
repnz
cwtl
into
aaa
pop
pushf
cmc
cltd
inc
adc
rclb
sub
out
pop
mov
jle
push
aaa
icebp
jns
pop
test
and
cmp
in
ret
xor
add
add
push
dec
add
in
sarb
xchg
xor
roll
cli
mov
jae
fs
cmp
and
jns
mov
or
adc
or
push
aad
push
mov
or
mov
and
arpl
jmp
mov
mov
mov
lock
rorl
jmp
adc
xor
ret
pop
scas
shlb
popf
mov
mov
pop
jbe
mov
testb
movsb
rcrl
fwait
inc
cmp
stos
xor
pop
outsl
mov
cltd
sbb
dec
mov
lods
xchg
push
icebp
or
outsl
add
test
adcb
mov
mov
add
in
add
sub
adcl
dec
sbb
lret
adc
loopne
push
pop
std
dec
pop
cmp
lds
dec
xchg
inc
in
push
js
mov
shrl
outsl
xchg
pop
lret
adc
aad
mov
sub
clc
sub
xchg
or
stos
int3
push
imul
lock
mov
test
fdivs
in
leave
out
xchg
adc
rcr
out
mov
dec
lods
pop
cs
jl
mov
ficoms
push
add
outsb
iret
cmpxchg
xchg
push
cwtl
cmpsb
and
js
mov
sbb
mov
jecxz
add
cld
inc
mov
mov
push
sti
ret
bound
xchg
pop
pop
xchg
and
rclb
push
lock
ds
adc
fcomps
stos
mov
jbe
mov
ljmp
repnz
hlt
popa
aas
mov
imul
or
sub
mov
push
dec
aaa
push
sbb
sarl
jle
xor
and
mov
pop
add
mov
cmpsl
cwtl
insl
icebp
repz
insl
imul
mov
mov
sbb
cmp
test
icebp
mov
ds
repz
imul
shll
imul
add
dec
adc
popf
es
xchg
dec
icebp
xchg
mov
mov
inc
fistl
sbb
cmp
stos
notb
inc
mov
dec
int3
push
jg
pop
fstpl
sbb
xchg
xchg
icebp
mov
xor
pop
jle
cli
addr16
into
jb
stos
mov
push
das
and
lock
je
movsb
es
mov
icebp
mov
dec
push
mov
jle
iret
lods
mov
push
sbbb
mov
ret
test
in
aas
mov
push
jo
jnp
push
jl
nop
inc
roll
cmpsl
cmc
mov
sahf
mov
and
ret
ret
adcb
sub
icebp
fs
nop
sbb
cmp
aaa
in
sbb
push
insl
cwtl
out
push
leave
fcomps
movsl
dec
pushl
in
dec
add
jnp
lock
mov
mov
jg
jge
push
sarl
xchg
inc
jno
inc
icebp
cwtl
mov
jge
adc
cmp
cltd
into
int
mov
dec
push
sahf
push
cltd
mov
sub
jecxz
arpl
xor
ret
jle
cs
and
negb
filds
les
cmp
or
pop
je
arpl
jno
pop
mov
and
xchg
jl
sbb
in
adc
jb
ret
in
xlat
push
orl
pop
pushf
movsl
lahf
inc
sub
aad
cmc
or
mov
js
xor
and
daa
sub
pop
int
sahf
dec
jno
sub
xor
notb
and
mov
imul
xchg
fcmove
dec
cmp
les
fwait
stc
or
inc
add
movsb
out
pop
pushl
popa
jo
xchg
push
dec
sbb
lods
sub
repz
popw
sbb
xchg
mov
enter
adc
adc
stos
xchg
stos
push
sub
xor
cmp
sbbl
fwait
es
inc
dec
fmull
icebp
pop
rcrb
add
adc
mov
pop
sbb
outsl
inc
icebp
pop
xchg
rorb
adc
call
inc
jp
insl
sti
aas
sub
clc
mov
jbe
sub
mov
sbb
inc
sar
cmc
mov
call
jae
and
push
mov
repz
jo
sahf
hlt
inc
adc
xor
ret
test
fwait
mov
or
lahf
inc
xorl
adc
mov
cwtl
push
adc
daa
sar
insb
fisttps
push
adc
enter
out
clc
lock
movsl
push
jnp
mov
sbb
scas
jl
rclb
push
xor
into
cmpsl
jmp
loope
jmp
inc
and
cmpsl
mov
fldln2
subl
hlt
sub
mov
xchg
hlt
pushf
mov
fstps
loop
and
add
ds
mov
pop
inc
inc
or
outsb
mov
cltd
xchg
mov
pop
fs
scas
jmp
xor
sbb
pop
iret
repnz
sbb
popa
cmp
xor
sub
push
pop
cmp
and
lea
popa
fdivrs
nop
stos
push
xchg
lahf
mov
dec
addr16
test
dec
repz
add
xchg
cmp
and
sbb
orl
cltd
enter
xchg
movsb
clc
pop
mov
or
outsl
jmp
jmp
out
sub
fildl
adc
in
mov
adc
sar
inc
fidivrs
cmp
pop
mov
movsb
xchg
ret
subl
popf
loope
adc
adc
push
mov
std
xor
repz
mov
sub
rcrl
cmpsl
repnz
cmpsb
or
js
sbbb
lahf
dec
mov
mov
ljmp
sbb
inc
inc
rclb
xchg
icebp
pushf
xor
cmc
nop
in
mov
hlt
ret
xor
jp
mov
icebp
xchg
or
push
mov
repz
stos
sub
scas
mov
xlat
push
jp
lods
add
pop
add
pop
sub
xor
icebp
cmp
sbb
push
popf
xor
std
gs
mov
fwait
mov
enter
aaa
sar
enter
cmp
add
stc
stos
fwait
mov
repz
pop
sbb
mov
jecxz
loope
addr16
movsb
icebp
xchg
popf
push
popf
les
cmp
push
xchg
push
adc
out
lods
adcb
pop
pop
xchg
sub
adc
cli
jecxz
clc
pop
cmp
sub
xchg
pop
test
and
and
inc
and
jge
lcall
test
lahf
push
test
push
push
mov
lret
pushf
in
ret
add
leave
outsl
jnp
movsl
gs
sar
popa
xchg
stos
xor
imul
sbb
gs
fdiv
aaa
and
in
cmpsb
xchg
ret
cld
enter
push
aas
enter
fdivs
mov
xchg
dec
jae
xlat
xor
insl
xlat
into
xor
xorl
outsb
clc
daa
out
dec
dec
jae
enter
jb
shrb
ret
lea
fs
scas
push
cs
or
jmp
ret
lock
push
xor
or
in
enter
icebp
pop
shrb
mov
loop
aad
inc
cmp
mov
mov
lcall
or
xor
nop
mov
or
or
cmp
push
and
lret
sbb
repnz
mov
adc
sarl
pushw
in
pop
out
or
fld
xchg
pop
arpl
xchg
pop
inc
push
in
stos
push
inc
cmpsl
mov
testb
xchg
jnp
lods
jb
cwtl
push
add
pop
xchg
sub
mov
repz
pop
pop
shlb
ja
jmp
xor
jbe
mov
sub
or
jnp
cmpsl
aad
pop
push
adc
imul
mov
jne
jle
push
inc
xchg
insl
push
test
mov
xchg
push
dec
inc
mov
push
call
xlat
pop
push
fadds
rorl
imul
sub
sti
and
in
ret
inc
mov
sti
in
mov
jmp
vmovntdq
out
pop
scas
enter
jge
push
xor
mov
pop
mov
inc
call
lcall
jp
shr
dec
adc
leave
ja
fwait
sub
cmpsb
dec
push
cmp
push
xchg
jl
orl
xor
insb
mov
mov
into
fsubr
xor
js
jge
fstpl
dec
lods
mov
in
adc
fsubp
or
stos
xchg
cli
aam
icebp
push
je
dec
int3
or
fdivl
lcall
add
jns
xchg
insb
mov
sbb
outsl
aas
dec
rorl
or
aam
cmp
pop
push
outsb
inc
lods
jge
fwait
scas
aas
add
pop
lods
test
neg
cltd
ds
jns
aad
add
scas
test
pop
add
imul
test
xchg
xor
lea
inc
clc
jecxz
jnp
xchg
cltd
imul
cld
push
popa
out
js
nop
push
enter
or
xchg
adc
push
push
jno
add
jmp
in
cmp
xchg
sub
movsb
add
fwait
mov
pop
push
pop
fmull
inc
mov
popa
sbb
outsl
inc
gs
jecxz
mov
frstor
inc
cmp
mov
jge
sbb
xchg
lock
in
mov
pop
dec
shlb
lea
push
adc
fsts
push
pop
cwtl
ret
cmp
pop
sbb
ret
pop
ljmp
sbb
movsl
loope
data16
inc
enter
jmp
push
mov
sub
push
mov
cmp
imul
sahf
sub
adc
fisttpll
pop
leave
jl
push
mov
and
fmul
jp
leave
push
sub
cmpsl
pcmpeqw
mov
xlat
inc
sbb
xlat
jl
pushf
sub
sub
jae
and
es
xor
and
add
or
out
inc
adc
xor
rcrb
or
jmp
jae
out
xorb
add
sub
xor
scas
ret
cltd
adc
pop
fwait
sbb
push
inc
cmc
inc
cmc
pushf
sar
mov
fwait
mov
imul
add
or
pop
int
jp
inc
imul
cmc
jecxz
cmp
ret
and
outsb
pushf
pop
add
lret
push
or
and
jno
scas
lods
mov
stos
pop
rolb
shll
sub
repnz
mov
push
mov
cltd
xor
out
push
gs
dec
jae
jo
in
loope
imul
inc
iret
xor
cmp
adc
mov
inc
dec
xchg
gs
jp
int3
arpl
inc
in
out
loope
out
xor
pop
push
sub
mov
pop
mov
jno
in
or
xchg
cmp
dec
jbe
stc
xchg
xorb
arpl
push
pusha
mov
cmp
add
ljmp
pushf
stc
pop
cmp
sbb
mov
cmp
call
adc
iret
dec
sarl
and
xchg
cld
ret
test
aam
or
cs
mov
fidivrl
mov
mov
lods
movsl
mov
push
subb
jbe
cmp
ret
jp
divb
mov
sbbb
sub
xchg
pop
or
and
sti
rorb
in
fcompl
mov
add
mov
fidivrl
xchg
mov
xchg
cmpsb
jecxz
pop
xor
stos
mov
iret
inc
sub
adc
cmp
lret
bound
or
and
sub
add
push
push
jae
das
sub
mov
arpl
mov
add
push
pop
mov
and
rorl
dec
adc
push
mov
mov
inc
xchg
xor
and
subb
arpl
lock
xchg
adc
mov
js
fld
shlb
jno
cmp
xchg
loopne
imul
jb
sbb
mov
out
sub
in
sbb
and
shll
ret
shl
sarb
adc
cmp
test
xchg
mov
cmc
xchg
jle
inc
mov
jo
test
es
inc
xchg
sbb
aam
cwtl
dec
nop
pop
ljmp
and
pop
mov
mov
cmp
aad
sbb
inc
xchg
sbb
sub
data16
jnp,pt
dec
pusha
sub
andb
loope
lret
out
test
outsl
mov
mov
lret
push
in
outsl
imul
jl
out
sub
pushf
outsb
xchg
mov
loope
out
xor
adc
out
cmp
inc
push
rolb
stos
or
cs
gs
dec
aas
fs
arpl
push
cmp
dec
dec
jmp
jne
int3
sbb
sbb
xlat
scas
es
inc
adc
push
sbb
out
jb
xchg
fnstenv
stos
repnz
ret
ret
loop
push
pop
clc
or
lods
and
push
cltd
sub
lods
adc
pop
pop
clc
nop
xchg
std
cmp
mov
pop
test
add
out
loop
or
aas
xchg
push
sub
dec
mov
push
fsubs
int3
jbe
pop
lods
aas
pop
or
fidivl
ss
and
sbb
scas
sbb
mov
push
gs
xor
addr16
jno
jb
push
dec
dec
jg
inc
leave
fbld
mov
out
stos
xchg
int
ja
mov
add
xchg
fadd
mov
mov
sbb
sbb
cmp
and
mov
pushf
lahf
push
fs
jb
xchg
add
mov
cmp
adc
xchg
aad
or
mov
mov
sub
push
jle
jp
jo
addr16
mov
jecxz
inc
and
xor
mov
lods
xchg
pop
inc
jl
or
xor
int
mov
mull
in
lock
xlat
mov
cmpl
push
inc
mov
pop
mov
mov
pop
repz
call
stos
dec
imull
push
cmpsb
or
sbb
jne
orl
mov
sub
lret
sub
inc
pop
imul
leave
or
rolb
stc
cmpsl
std
adc
aas
es
popa
fldt
std
icebp
pop
mov
xlat
pop
iret
call
aam
push
push
shl
movsb
popf
addr16
sarb
fisubrl
pop
push
fdivl
test
call
pop
mov
mov
pop
iret
xor
push
xchg
and
dec
sub
mov
inc
mov
sbb
xchg
sub
mov
push
insb
xchg
push
inc
inc
stc
jmp
les
gs
notl
xchg
adc
mul
xchg
movsl
bound
adc
mov
in
mov
sub
xchg
xchg
or
push
cltd
insb
jae
mov
cld
cltd
stos
cmpsb
sahf
push
fsubs
cmpsb
mov
enter
fcmovb
fistps
in
adc
aad
aam
inc
add
pop
dec
mov
fnstenv
arpl
dec
xchg
addr16
fiadds
in
cmc
popa
faddp
imul
fisubrl
dec
mov
add
jns
call
stos
xchg
cmp
adc
mov
aaa
shl
mov
pop
mov
xchg
fidivs
stc
sbb
sub
hlt
mov
add
and
push
mov
jno
mov
cmp
imul
sbb
mov
lds
push
aad
dec
inc
pop
cs
mov
sub
aad
sbb
cmp
leave
xchg
icebp
int3
fdivs
jl
mov
jge
repnz
std
sar
or
xor
dec
lods
mov
sahf
cmp
pop
mov
cli
ret
dec
je
mov
push
sbb
mov
out
dec
rcrb
add
mov
pop
imul
in
mov
pop
lods
pop
pop
inc
movl
sti
pop
add
das
loop
int
push
rcr
pop
test
adc
bound
fdivrs
add
dec
cmpsb
sbb
mov
pcmpgtd
fwait
or
out
push
push
stc
sub
xlat
daa
jb
andl
out
ljmp
fldt
mov
rcrl
or
push
jo
repz
in
push
dec
mov
stos
dec
xorl
mov
cs
cltd
push
sub
mov
sub
stos
test
sub
insb
cmpsl
paddq
and
inc
xchg
xchg
out
adc
rcll
add
andl
shlb
inc
ret
gs
dec
hlt
in
out
push
les
in
mov
push
fnstsw
ret
gs
or
mov
mov
xor
dec
inc
jmp
into
fwait
shrb
loope
sub
sub
lcall
inc
cmpsb
fadd
pop
sbb
mov
arpl
sbb
mov
icebp
push
faddl
pop
aas
mov
lods
je
push
lea
jne
sbb
pop
fildll
jnp
sbb
aam
push
adc
loope
jbe
mov
aaa
icebp
mov
dec
insl
inc
jmp
and
mov
pop
stc
fcos
jae
jae
xor
inc
dec
inc
dec
lea
out
cmc
sub
shlb
fnstenv
das
mov
mov
xchg
cwtl
hlt
xor
fwait
scas
push
push
cmp
divb
into
xchg
inc
cmp
mov
fildll
leave
dec
jbe
push
sbb
or
insb
fcoms
cld
sti
jge
mov
int
mov
or
shlb
repnz
jb
fnstcw
cmp
shll
jmp
test
xor
xchg
loopne
aaa
jg
add
or
outsb
mov
sbb
pop
cld
mov
sbb
pop
mov
ds
out
movsb
adc
stc
or
and
bound
pop
shrb
jp
daa
rcr
adc
cmp
sarb
dec
jmp
icebp
inc
mov
mov
jo
xchg
cmp
mov
jb
cmpsb
cmpsl
jne
xchg
mov
flds
push
mov
pop
or
ficomps
loope
pop
ret
add
add
jl
loop
mov
imul
and
mov
adc
mov
clc
mov
lret
rorl
push
xor
mov
ja
dec
dec
add
inc
jl
test
mov
push
mov
jns
cmpsl
pop
pop
mov
lds
inc
and
xlat
add
in
movsb
add
jmp
mov
mov
lahf
mov
mov
or
fwait
scas
cmp
sub
mov
sub
fdivr
mov
xlat
lock
loop
adc
pop
cmpsb
dec
inc
dec
adc
mov
pop
dec
sbb
mov
cmp
ja
or
push
inc
lret
into
add
mov
fs
out
push
aad
xchg
imul
sbb
adc
inc
in
inc
in
inc
movsl
in
and
fimuls
push
cmpsl
in
test
lods
pop
outsb
loope
mov
sbb
mov
xor
lds
sub
jns
je
cs
jns
js
lret
shl
jle
daa
dec
jns
loop
dec
in
jg
leave
adc
inc
adc
sbbb
pushf
rorl
insl
xchg
cs
xor
pusha
xchg
sub
adc
in
sti
lods
mov
fwait
pop
add
stos
and
aam
add
mov
test
sbb
xchg
adc
mov
mov
loop
sti
add
jb
or
mov
sbb
push
out
pushf
into
sbb
leave
lret
int3
cmc
popa
gs
adc
mov
sub
loop
scas
pop
or
in
jp
sarb
scas
scas
pop
ret
push
ret
pop
gs
insb
mov
jbe
mov
cwtl
insb
and
xor
inc
dec
icebp
iret
mov
nop
push
testl
xchg
shrl
lods
cwtl
inc
sub
mov
cmpl
jb
or
pop
mov
mov
pop
cs
dec
popf
fidivl
jb
jns
cs
adc
test
mov
shrl
lea
inc
push
pop
bound
dec
or
aas
pop
fists
fstl
and
shll
call
push
pop
push
pop
jnp
mov
sub
push
mov
pop
xchg
xlat
insl
mov
mov
sete
cmp
adc
test
loope
push
notb
sub
mov
fdivs
rorl
orb
xchg
xor
and
sarb
pop
and
or
lret
jnp
imul
jl
adc
add
push
mov
sbb
shlb
jae
xchg
push
jl
repz
mov
out
mov
inc
mov
pop
and
dec
popf
mov
in
jbe
jl
cli
fidivs
adcl
pop
cli
cmp
sub
pop
loop
sbb
scas
sbb
das
data16
adc
adc
cli
xor
xchg
andb
rcll
roll
mov
movsl
es
dec
or
push
add
mov
popf
jbe
fisttps
call
outsb
fdivs
xchg
mov
aam
out
or
jmp
out
lret
stc
xor
mov
xchg
inc
or
fmuls
pop
orb
out
mov
xchg
push
dec
add
xlat
xor
test
rcr
mov
cmpsl
lahf
fwait
int
sub
cs
in
decb
mul
or
pop
add
push
inc
aas
ret
in
pushf
sub
cwtl
sub
fwait
and
and
adc
lahf
sti
sub
sub
xchg
mov
sub
pop
and
jnp
mov
push
and
aas
aad
jnp
push
sub
inc
sbb
mov
push
sbb
add
mov
int
bound
into
sti
sbb
xchg
mov
mov
loop
xor
dec
std
and
sub
cmp
inc
inc
mov
scas
mov
ret
pop
into
cli
mov
jno
testb
ds
push
test
jns
in
sub
push
push
hlt
and
subb
adc
repnz
push
addl
cmpsl
pop
push
mov
sbb
hlt
mov
xchg
or
movsl
pop
dec
adc
mov
xchg
xchg
mov
xor
xor
xchg
mov
test
xlat
mov
je
push
mov
jae
push
mov
mov
jae
push
int
adc
push
movsb
dec
gs
dec
inc
sub
dec
dec
push
jbe
insb
pusha
jne
mov
mov
jmp
mov
cmpsl
test
mov
jnp
inc
and
mov
inc
push
inc
sti
mov
mov
cmp
imul
push
xor
mov
xor
or
and
int
stos
xchg
cld
and
adc
jg
fcompl
mov
insb
xchg
jbe
jge
xor
mov
scas
inc
in
in
std
xchg
shrb
jnp
pop
fsub
daa
jb
out
mov
jns
ds
xor
jl
adc
lret
les
in
pop
sbb
js
sbb
and
insb
push
xor
push
out
bound
push
mov
stc
nop
shlb
aad
cli
das
cmc
faddl
call
popa
iret
ret
insb
lock
lds
push
sbb
jnp
sub
cmc
scas
addb
jno
mov
ljmp
imul
and
xchg
inc
shrb
adc
sbb
sbb
int
cwtl
dec
mov
arpl
rclb
and
fucomi
in
push
pop
ds
push
hlt
push
nop
adc
lahf
leave
mov
and
inc
xchg
lahf
ja
inc
leave
push
jae
xchg
aam
clc
lret
aam
mov
xchg
xchg
push
mov
insb
push
scas
daa
dec
sub
xor
das
xchg
and
mov
push
popa
adc
inc
dec
and
sbb
stc
ror
adc
xlat
aam
sbb
pop
xchg
cmp
lods
jno
mov
cmp
mov
and
or
fs
mov
gs
scas
sub
jle
aam
in
push
pop
add
arpl
adc
xor
xchg
or
dec
sub
xlat
cmp
fisttpll
cmp
jae
inc
test
pop
aaa
cltd
fcoml
inc
sub
in
lods
ret
mov
push
pop
xchg
or
daa
ljmp
mov
xchg
movsb
fistl
loopne
mov
inc
cmp
adc
and
enter
incl
mov
xchg
push
pop
sub
outsb
movsb
adc
pavgb
adc
dec
in
mov
das
add
push
shl
mov
add
xor
cmp
lods
div
mov
sub
and
movsl
push
push
cmpsb
into
jmp
xor
mov
ljmp
cltd
add
mov
xchg
bound
loop
lods
call
leave
cwtl
pop
jle
mov
push
loopne
iret
and
aad
icebp
in
or
inc
dec
jbe
xor
test
insl
inc
push
aaa
inc
sub
lcall
pop
mov
add
pop
pop
mov
dec
push
jp
push
cmp
jmp
fstl
mov
pop
sbbl
sub
cltd
out
sbb
js
sub
out
pop
mov
test
mov
adc
popa
loop
sti
inc
and
jmp
adc
lcall
pop
aaa
and
sbb
or
fistpl
adc
lods
or
sub
imul
cwtl
sbb
rorl
and
pop
ljmp
inc
pop
mov
sti
push
pop
pop
mov
out
andb
mov
rol
push
in
xor
in
les
ror
pushf
arpl
jbe
inc
or
cmc
sahf
in
pusha
in
arpl
dec
fidivrs
out
fadd
dec
mov
movsl
push
sti
insl
pushf
add
xchg
sbb
stos
xchg
pop
addr16
mov
jbe
out
aam
popf
or
jmp
xchg
jae
cmpl
pop
jl
inc
repz
stc
sahf
mov
inc
dec
jge
es
jbe
inc
cmpsb
std
mov
cwtl
and
cmpsl
jg
in
mov
andl
mov
push
scas
leave
or
mov
ret
lock
fisubrl
add
dec
lret
jge
scas
cmpsl
ss
inc
lods
or
icebp
clc
ret
fs
cmc
fmull
loop
sbb
mov
lret
mov
ret
out
cmp
or
out
ret
shlb
sbb
cmpsb
jns
scas
sti
incl
pop
mov
push
nop
leave
pop
fists
outsb
imul
and
cwtl
mov
fbstp
dec
bound
push
shr
movsl
mov
add
int3
push
aam
push
scas
pop
aad
pushf
fucomip
cwtl
ss
lods
pushf
fidivs
mov
pop
mov
or
jo
mov
xchg
lahf
cmp
insb
scas
leave
pop
xor
fisubl
sub
mov
or
orb
inc
jmp
adc
nop
mov
add
jmp
and
mov
mov
sbb
jge
inc
shll
mov
divb
mov
dec
mov
mov
jge
test
sub
adc
xor
jnp
adc
mov
je
int3
add
pop
pop
or
scas
sub
add
cmp
inc
cs
push
mov
pop
xchg
fdivr
lods
gs
enter
dec
test
pop
push
imul
dec
cmpsl
stos
adc
cmpsb
inc
or
cltd
jbe
repz
push
fbstp
loop
xchg
mov
or
push
cmp
cmp
fstps
stc
sahf
stos
dec
xchg
sub
nop
mov
fldl
sbb
aaa
loope
pop
fdivrs
shr
xor
and
jnp
popa
iret
dec
notl
into
mov
test
cmc
cs
cmp
test
fcomi
sbbb
mov
ret
mov
xor
pop
ja
test
pop
out
sbb
test
xor
adc
cmp
lahf
fldl
popa
jne
mov
test
mov
sbb
das
xor
aas
loop
les
pop
jne
jae
fs
fisttps
fnstcw
dec
pop
xchg
push
push
shrl
sub
pop
shll
and
xchg
xchg
leave
cli
push
das
addb
cmp
mov
mov
test
movsl
cli
sbb
mov
push
jmp
shrb
adc
fistps
fdivs
or
add
mov
mov
data16
xchg
neg
int3
imul
mov
hlt
or
ret
js
lods
rclb
pusha
scas
out
inc
aas
inc
cmpsl
cli
test
cmc
sahf
jecxz
inc
dec
cmp
inc
stos
jbe
jp
jo
ret
adc
sbb
loop
dec
push
mov
mov
sbb
jb
daa
test
mov
xchg
sti
andl
lahf
repnz
mov
sub
inc
loop
aad
inc
or
sti
fwait
out
ficoms
push
jmp
dec
and
js
mov
xor
or
das
jmp
cmp
xchg
mov
nop
sbb
jmp
mov
addb
hlt
or
stos
pop
add
and
push
into
jg
scas
outsl
mov
mov
sbb
push
mov
jno
cmc
in
stc
mov
pusha
insb
add
pop
ret
fdivs
aas
imul
xchg
mov
ja
xor
in
sub
test
pop
add
in
lret
scas
or
sarl
loope
jp
xorl
cwtl
out
xorl
in
jns
inc
add
mov
mov
aam
jecxz
mov
test
dec
fiaddl
cmpsb
push
sbb
add
add
inc
sub
lods
loope
ret
dec
jge
scas
add
adc
lret
mov
jb
push
aas
lods
mov
stos
lret
push
xor
xor
lods
flds
push
sahf
xchg
sub
cmc
stos
jns
mov
adc
movsl
daa
sbb
push
stos
adc
ret
jo
jno
mov
push
pushf
outsb
popa
add
das
mov
ds
mov
insl
mov
in
aaa
lcall
mov
shll
outsb
movsb
jge
push
lret
bound
bound
mov
mov
mov
in
jge
icebp
ret
inc
stos
decl
lds
dec
loope
add
inc
out
scas
ret
insb
mov
jnp
pop
jo
loope
sbb
icebp
loope
movsl
mov
sbb
mov
or
and
jecxz
movsb
inc
mov
nop
lret
jo
mov
rorb
xchg
dec
fadd
cmp
xchg
push
jb
inc
xchg
sahf
jnp
pop
scas
test
mov
pusha
mov
and
cmp
fisttpll
in
jbe
insl
fcmovb
pop
inc
in
sub
out
loopne
in
mov
inc
mov
gs
call
out
addl
and
stc
pop
ffree
xchg
sahf
stos
out
xchg
push
ficomps
inc
jo
sbb
cld
dec
aaa
test
push
inc
jl
in
pop
mov
and
mov
enter
mov
js
sbb
mov
ret
xor
push
or
test
mov
push
adc
pop
ret
mov
inc
sub
outsb
mov
jno
mov
jg
rcll
movsl
cmp
subb
rorl
imul
loopne
pop
lret
inc
into
ljmp
addr16
xor
incl
subl
add
aaa
jg
out
loop
lahf
inc
loope
test
add
jno
inc
mov
pop
enter
dec
adc
gs
mov
ljmp
dec
xchg
mov
and
popa
repz
mov
cld
fmuls
push
sahf
jl
xor
sbb
lock
dec
scas
inc
pop
sbb
push
cmp
push
xchg
in
ret
jg
gs
cmp
or
inc
loope
daa
stc
sub
jle
lods
pushf
js
rcrl
test
sub
sti
xor
mov
pop
mov
jo
out
cli
iret
mov
rolb
mov
push
xorl
pop
pushf
fldt
les
add
push
sbb
sbb
adc
mov
arpl
sbb
in
xor
sbb
push
ljmp
jmp
xchg
pop
sub
mov
stos
push
std
mov
rolb
lret
stc
mov
cmp
sar
mov
jno
push
orl
cwtl
sahf
cmp
addr16
jbe
push
mov
into
stc
xchg
cmp
lret
mov
hlt
mov
pop
test
or
push
mov
pop
pop
adc
fcoms
xor
pusha
sti
sub
or
adc
shl
hlt
mov
and
inc
mov
mov
push
adc
stos
mov
sub
hlt
rolb
push
loop
inc
ret
xlat
and
adc
xchg
lods
aam
mov
out
pop
xor
int3
push
mov
jge
lea
push
xor
lods
push
fstpt
aam
inc
push
sbb
dec
into
xchg
cmpsl
loop
cmpsb
push
imul
jne
push
sbb
push
fistpl
in
and
mov
cmp
xchg
jne
int3
mov
lods
das
int
loopne
in
and
inc
lahf
xor
rcll
ljmp
mov
push
sbb
xchg
mov
pop
ss
jbe
dec
shlb
in
jo
lock
jnp
out
and
ljmp
pushf
lret
lea
out
mov
xlat
mov
inc
xor
cmp
push
jo
push
push
in
jns
xchg
addb
or
jbe
mov
jbe
aas
xlat
pop
in
fistps
dec
dec
aad
mov
cmpsb
push
js
enter
in
push
jp
subl
mov
ds
pushf
mov
out
lock
jecxz
push
jne
sub
fdiv
xchg
mov
and
sbb
and
mov
sub
and
loop
stos
subb
insl
or
xchg
mov
mov
and
sahf
xlat
clc
xor
fprem
sbb
cltd
loopne
fdivrl
pop
jle
popf
sahf
lcall
outsl
xor
pop
dec
pop
out
mov
repnz
ficomps
setl
popf
push
xchg
lret
jns
inc
negl
push
push
xor
jb
mov
push
sub
xchg
orl
jecxz
popa
aas
sub
mov
inc
repz
add
out
arpl
hlt
push
lock
xor
into
test
sbb
xor
int
push
iret
ficompl
dec
sub
pop
mov
sbb
sub
mov
cltd
xor
and
xor
jl
lods
or
pop
jmp
xchg
in
xchg
test
mov
lods
mov
sbb
das
mov
repnz
sub
inc
sti
sbb
dec
jle
fcoms
mov
xchg
jmp
lds
cmp
cmp
fisttpll
lods
jo
js
xchg
push
cli
packuswb
or
call
and
js
or
test
lret
mov
insl
shl
rolb
js
sub
sub
mov
hlt
data16
call
sbb
fistl
mov
les
call
int3
push
fadds
rcl
inc
int
inc
daa
jmp
dec
and
psraw
pushf
add
pcmpgtb
mov
imul
add
sahf
cmp
ja
mov
xor
enter
mov
jbe
fs
xchg
pop
xchg
xor
stc
xchg
insb
push
sbb
dec
arpl
iret
dec
jo
mov
xor
icebp
jno
lea
es
int
ss
xor
xchg
pop
sahf
mov
pop
add
mov
lock
hlt
ja
mov
or
xor
push
xchg
pop
popa
in
jo
fwait
das
mov
and
mul
fwait
push
inc
pusha
inc
sbb
pop
sub
cwtl
popf
xchg
nop
jmp
sbb
inc
xchg
repnz
xchg
fisubrl
repz
insl
sarb
adc
movsb
xchg
cmpsl
pop
mov
sbb
mov
rcl
cwtl
push
pop
sub
lea
arpl
ljmp
jge
test
aad
fsts
mov
jno
cmp
push
cld
das
and
dec
and
loop
sub
inc
lea
fistpll
mov
hlt
mov
adc
out
andb
fnstenv
sbb
xchg
xchg
inc
lret
push
mov
mov
fbld
pop
jmp
mov
xchg
xchg
push
sbb
xor
cli
xchg
cmpsl
insb
add
inc
lds
scas
mov
aam
negl
xchg
xchg
push
lds
pop
or
outsl
ret
flds
xor
lahf
pop
add
or
and
pop
mov
testl
dec
test
scas
jp
in
inc
sub
faddl
pop
movsl
rcl
sub
mov
pop
xchg
cmpsb
adc
pusha
xor
inc
fimuls
mov
dec
push
adc
aad
mov
sbb
or
cmc
inc
into
idivb
js
fbstp
or
xlat
mov
cwtl
pop
or
lret
outsl
jmp
mov
clc
mov
cmc
icebp
rclb
dec
mov
insb
jmp
enter
push
je
xor
test
rol
push
mov
sbb
repz
xchg
popf
stos
mov
adcb
push
mov
shrb
addr16
insl
jae
sahf
mov
mov
inc
ja
jb
popa
cmp
xor
rol
popf
xor
push
lea
sbb
add
push
in
outsb
cmp
mov
add
popf
push
jbe
cmp
mov
scas
cmc
in
xchg
in
lock
andl
ret
xlat
bound
outsb
pop
xor
mov
add
pop
.byte
.byte
