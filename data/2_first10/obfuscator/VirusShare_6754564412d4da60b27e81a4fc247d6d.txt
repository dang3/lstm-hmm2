out
aas
inc
ljmp
repz
ja
dec
pop
fsubrs
movsl
enter
xor
pop
adc
mov
push
mov
js
jle
rcr
test
cli
jb
es
rcl
outsl
push
push
mov
xor
lcall
aaa
cmp
pop
loop
jg
mov
dec
psubusb
mov
inc
dec
mov
push
xor
cld
xchg
push
sahf
and
ret
into
scas
adc
gs
cmpsb
dec
int
inc
pop
inc
and
cmp
mov
add
imul
ss
and
mov
sarb
pop
aaa
stc
repnz
stos
testb
xor
hlt
test
mov
sbb
int
loope
inc
push
sub
ret
imul
dec
adcl
in
aaa
xchg
mov
or
test
shlb
popa
mov
dec
das
leave
sarl
les
jne
mov
pop
jle
fmuls
rcll
push
cs
add
pop
sbb
jge
cmp
popa
lea
mov
pop
leave
imul
sti
sbb
mov
rcll
pop
xchg
mov
sub
push
xor
pusha
cmp
je
das
jg
push
mov
xor
adcb
sti
inc
sarl
xor
xor
movsb
bound
pop
dec
dec
cmp
push
imul
int3
xchg
sub
test
inc
jl
push
fdivrl
xchg
enter
int3
test
push
call
cmpsb
stos
cwtl
notb
push
xor
mov
xor
test
jo
jmp
push
or
jo
push
aas
or
cwtl
cmp
mov
jle
lds
faddl
lret
mov
jp
je
mov
dec
fs
sub
xchg
mov
clc
repnz
jl
or
sbb
repnz
inc
add
aam
cmpsl
ds
and
xchg
push
mov
pop
movsb
fsubl
sub
adc
xchg
lods
sub
fldl2t
xchg
lods
sub
mov
mov
enter
arpl
pop
mov
iret
cmp
mov
mov
out
test
inc
jle
pop
push
sbb
mov
rorl
js
scas
ret
jo
pushf
adc
insl
imul
js
adc
mov
jp
add
into
xchg
pop
shll
pop
xor
jae
lret
push
sub
cs
adcb
inc
sti
cltd
or
mov
in
shlb
pop
repz
and
push
push
fisttpl
idivl
jbe
aam
sbb
aam
and
leave
xor
cwtl
inc
stos
sti
adc
rcrb
mov
insl
inc
jnp
and
fdivp
sbbb
sub
push
mov
movsl
loope
jl
outsl
sbbb
das
and
pop
sub
mov
in
fdivrs
fwait
xchg
inc
cmpsb
shll
adc
push
xchg
dec
popf
jp
divb
shll
lret
jle
rclb
xor
cmpsb
sub
cmpsb
push
jne
stos
popf
cltd
dec
fstpt
push
jnp
ret
cld
dec
std
testl
pop
filds
fcos
loop
cltd
testl
mov
cmp
mov
xchg
scas
iret
data16
or
pop
outsb
scas
loope
cmp
or
and
cld
sahf
sbb
test
fdivs
sub
mov
cmp
pop
inc
sub
push
repz
js
mov
call
sbb
insl
xchg
sbbl
xor
or
icebp
jmp
mov
xor
imul
jle
dec
or
ljmp
mov
add
sbb
sti
pop
sub
sub
sub
fstl
xacquire
wrmsr
shlb
inc
pmulhw
sarl
xchg
cld
in
pushf
movl
movw
lea
je
pushf
movl
pushf
push
pusha
push
lea
jmp
js
or
xchg
ss
mov
mov
mov
xchg
js
jne
cmp
into
and
popf
lock
jmp
jmp
rcrb
cmpsb
pop
pop
or
loopne
push
and
sub
xor
jecxz
maskmovq
testl
adc
mov
repnz
dec
cmc
std
jle
hlt
dec
sub
mov
arpl
dec
xor
pop
sub
adc
and
movsl
shrb
inc
rcll
xorl
xchg
push
bound
jns
popf
jg
xlat
in
je
inc
sbb
insl
xchg
mov
ja
xchg
sbbl
jmp
sub
stc
pop
addps
and
mov
mov
lock
inc
sub
arpl
inc
dec
sub
jbe
addr16
add
mov
push
push
sbb
sbb
cmpsb
loope
roll
sub
mov
out
push
mov
mov
mov
hlt
clc
test
add
xor
adc
sbb
lock
pushf
mov
lret
sbb
lret
mov
shl
mov
cmc
push
sar
mov
pusha
pusha
stc
bt
sub
call
add
dec
outsl
popa
fs
imul
add
xchg
ret
inc
cmp
pusha
neg
xchg
test
bt
movw
mov
call
push
lea
jae
jmp
pop
mov
stc
int
pop
mov
dec
cltd
jnp
inc
adc
adc
in
xchg
clc
add
inc
das
dec
mov
jbe
imul
fidivrl
fucompp
mov
cmpsl
inc
lret
xchg
movsb
fsubr
js,pt
and
ficompl
mov
mov
sbb
clc
or
ja
outsb
mov
jmp
push
aas
mov
jne
nop
xchg
scas
mov
pop
dec
fcmove
cwtl
xchg
addr16
clc
jne,pn
sbb
jno
xchg
mov
xchg
lret
cmp
dec
dec
dec
repz
push
cwtl
or
mov
sub
xchg
dec
cmpsb
xchg
rcll
stc
mov
adc
sbb
ja
pusha
sub
adc
xchg
pop
mov
ret
pop
cmp
in
mov
sub
mov
rcll
repz
fs
daa
push
ja
mov
xor
ljmp
insl
xchg
lods
lds
and
xchg
lea
je
jmp
jb
pop
sub
in
jnp
cmp
add
repz
mov
inc
outsb
and
jmp
xchg
lods
movsb
cmp
cld
inc
les
cmpsl
mov
mov
push
jl
mov
in
rcl
mov
or
addr16
dec
mov
sub
pusha
and
jp
in
fisubrl
mov
inc
mov
mov
cmp
push
mov
pop
imul
pop
and
mov
not
movzbw
pushf
mov
mov
pushf
mov
pushl
ret
mov
aaa
lea
sub
jp
jo
repnz
sub
dec
hlt
dec
or
lcall
sub
push
std
inc
push
mov
out
test
push
xchg
inc
or
jl
xor
repnz
jmp
loop
pusha
popa
nop
cmpsl
loop
dec
xor
scas
mov
enter
aad
inc
aaa
push
sub
sbb
mov
mov
fs
mov
jnp
enter
lret
movb
push
sbb
loopne
sbb
arpl
call
push
add
jb
cmp
jge
cmpsb
sbbl
mov
inc
outsl
sub
mov
inc
cmp
in
or
xlat
cltd
or
incb
pop
mov
fisttpl
push
inc
jge
dec
or
cld
stos
pushl
mull
lock
mov
lret
xchg
mov
fistpll
lret
rorb
pop
fstl
xlat
push
imul
fistpl
jle
sbb
mov
divb
pop
xchg
lods
roll
jmp
iret
or
stc
pushf
movsb
push
rclb
test
jno
lds
ljmp
test
sub
daa
push
adc
xor
dec
test
jns
jns
pushf
das
test
dec
or
aad
xchg
lret
js
mov
xchg
data16
push
test
xchg
mov
cwtl
scas
es
stos
xor
xor
rorb
movsb
adc
int3
mov
or
in
xor
fwait
je
inc
xchg
jge
shlb
ss
sbb
mov
call
push
clc
divl
stc
test
imul
sub
jmp
test
ret
rcll
xchg
jle
dec
insl
xlat
pop
jmp
mov
hlt
mov
xorb
jge
lret
ficomps
lock
adc
insl
adc
fwait
push
lret
inc
sub
inc
xlat
mov
xor
sub
pop
aad
ret
mov
leave
or
addl
gs
add
int3
mov
out
and
mov
push
addb
xchg
shll
jno
mov
mov
repz
lret
xchg
lock
xor
sbb
faddp
icebp
loopne
insl
cwtl
inc
mov
stc
inc
push
and
mov
cmc
xchg
bsr
xor
fbld
int3
add
filds
or
fwait
aad
mov
fadd
ja
sbb
xchg
shr
or
ret
cwtl
xor
movsl
data16
jg
fcomi
sbb
sbb
in
int3
sbb
sar
push
arpl
ss
icebp
in
mov
lcall
aam
lret
int3
jmpw
lcall
subb
roll
pop
pop
repnz
mov
push
stc
jp
ss
test
outsb
xchg
out
cwtl
sbb
inc
in
xchg
clc
clc
cmp
cmp
call
and
xchg
sub
gs
sti
aas
pop
imul
rcrb
add
or
inc
inc
das
or
push
in
inc
iret
jno
pop
jb
bound
xchg
xchg
rcr
push
insl
adc
insl
out
push
lret
out
xlat
dec
outsl
popf
out
xor
or
xor
lret
pushl
add
negl
add
add
add
add
add
add
mov
jmp
add
add
add
ret
add
loopne
pusha
push
icebp
xor
sbb
loope
repnz
push
test
out
nop
sbb
inc
mov
cmpsb
imul
push
push
pop
mov
dec
arpl
lock
ret
adc
lods
sbb
imul
inc
push
pop
out
andb
sbb
mov
nop
jl
ret
rcrb
inc
sub
into
jo
add
loop
mov
add
sub
add
dec
cmp
sbb
cmp
insl
movsb
ret
ljmp
divl
xchg
or
jo
or
jne
jmp
es
sub
stos
inc
mov
mov
stos
cwtl
in
call
sub
js
es
push
inc
push
adc
in
out
add
mov
cmc
sub
loope
cmp
outsl
or
sub
iret
lcall
and
push
and
pop
jp
test
lret
pop
aas
test
push
xor
mov
pushf
push
frstor
jmp
jl
enter
jne
jmp
push
rorb
jg
add
jl
aas
rorb
sbb
repz
adc
loop
cmp
push
add
rcll
and
add
in
lahf
push
repnz
sub
add
xchg
mov
into
das
dec
fisubrl
cmpsl
das
push
addr16
test
arpl
cmpsb
inc
lcall
push
mov
push
jg
sahf
int3
loope
mov
xor
fs
push
in
sarb
xchg
fadds
fisubl
stos
popa
inc
and
mov
flds
jbe
decl
add
pop
push
pop
push
or
pop
xchg
std
cmc
lret
add
mov
push
shlb
jl
imul
xchg
ss
or
aad
hlt
push
and
lods
shrl
inc
push
dec
repnz
stos
and
into
jbe
xor
pop
loope
xor
xchg
test
cmp
pop
mov
pop
popa
sbb
adc
pop
inc
jg
sahf
jmp
mov
loop
jge
cmp
cmpsb
pop
xor
mov
lods
mov
aam
repnz
mov
xchg
insb
in
mov
push
push
sbb
lahf
lds
push
sbb
hlt
pop
push
shll
sbb
sbb
adc
and
xchg
or
or
stc
cmpsb
fsubrl
cltd
push
or
xchg
test
jo
lods
mov
mov
pop
aaa
js
xor
loope
fwait
adc
xchg
pop
inc
dec
js
sbb
xorb
jne
lods
mov
mov
pop
loopne
movsb
xchg
adc
addr16
cltd
mov
jge
inc
jbe
push
and
sbb
in
mov
popf
scas
loop
aam
pushf
addr16
scas
fxch
aas
or
jp
xchg
adcl
and
adc
mov
lea
push
es
mov
cs
popf
mov
mov
cltd
bound
mov
pop
in
movsl
jae
outsl
xchg
xor
adc
sub
insl
rorl
out
pusha
jmp
testl
fucomp
mov
inc
pop
stos
neg
aas
aam
mov
sub
dec
or
jo
or
cs
jecxz
push
in
test
pop
jl
clc
icebp
insl
out
packsswb
dec
repnz
rclb
pop
or
xchg
add
call
mov
stos
adc
pushf
loope
fsubs
dec
into
rol
push
inc
push
and
cmpsl
mov
mov
mov
repz
mov
pop
dec
adc
xchg
sbb
rclb
sbb
add
push
mov
or
sub
int3
stos
add
xor
lret
or
fldl
jl
and
idiv
sarl
lcall
dec
jno
icebp
shrb
mov
test
and
fs
mov
dec
sub
push
cmp
lods
adc
push
movsb
mov
sub
int
in
not
cmp
in
lock
adc
and
loopne
pop
mov
mov
sub
and
sub
dec
ja
ds
xchg
mov
adc
and
add
fsubs
stc
jge
fimull
and
mov
ds
sub
dec
sbb
mov
in
xor
ljmp
out
push
adc
leave
jecxz
jg
lock
mov
pop
mov
xchg
mov
sbb
pop
cld
subb
xchg
sbb
jg
or
es
in
clc
or
mov
scas
ss
es
daa
add
sbb
mov
mov
movsb
sbb
jle
loop
and
adc
out
jb
xor
mov
mov
dec
lods
popl
pop
sbb
sbb
aas
scas
clc
fsubs
test
xchg
add
dec
mov
add
lret
xchg
rdtsc
and
dec
lea
xchg
inc
out
or
cmp
stos
test
mov
dec
stos
cld
jns
repnz
cmp
fs
mov
hlt
and
or
mov
lock
jae
mov
dec
xor
fnstcw
dec
lods
mov
xchg
pop
xor
popa
sbb
mov
fucomip
shlb
pop
xor
inc
insb
push
jl
or
out
inc
add
jecxz
xchg
daa
icebp
jecxz
and
dec
jl
fldl
adc
xor
test
mov
mov
inc
mov
pop
std
les
mov
mov
inc
lods
mov
es
enter
mov
inc
insl
fsubrs
icebp
xor
aas
fldcw
cmc
sbb
dec
cmpsl
sbb
sub
lock
js
push
sbb
cmp
pop
cmp
jle
aam
xchg
fs
lock
or
dec
imul
movsb
mov
or
ljmp
add
mov
nop
mov
jo
push
ret
mov
cmp
les
pop
cmp
and
sub
mov
aas
cli
mov
ret
jbe
test
sub
pop
cmp
mov
les
out
push
imul
les
pop
lds
imul
push
fs
push
pop
test
inc
inc
xor
cmpsb
mov
and
mov
pop
dec
jl
pushf
arpl
cmp
xchg
fs
sub
pop
xchg
jl
lahf
sti
fistl
xchg
adc
addl
mov
inc
push
and
push
push
faddp
leave
enter
daa
mov
sbb
std
clc
cld
inc
cmp
pop
jno
repnz
movsb
lds
dec
lock
in
faddl
into
roll
lods
and
fiadds
repnz
mov
in
mov
dec
imull
pop
loopne
cmp
mov
xchg
dec
lock
ja
loopne
mov
scas
bound
adc
jp
ljmp
sbb
aam
xchg
sbb
xchg
inc
adc
es
rcr
pop
inc
jg
push
cs
aaa
clc
mov
mov
dec
loop
xchg
dec
dec
stos
subl
jle
mov
out
lods
push
arpl
mov
stos
mov
inc
inc
add
mov
inc
out
stos
push
negb
insl
in
daa
adc
subl
sub
cmp
rcr
fstps
or
dec
mov
cmp
out
mov
mov
movsl
in
pop
mov
push
mov
stos
rcrb
lahf
sbb
sbb
push
mov
aaa
stc
mov
xor
lret
push
and
inc
insl
mov
rcll
mov
dec
mov
xor
mov
pop
fisttps
and
adc
movsl
cmpsb
mov
adcl
mov
inc
jmp
std
cmp
and
dec
adcl
xchg
hlt
stos
lods
daa
imul
or
sbb
sti
int3
jp
ljmp
mov
mov
jmp
jno
aas
mov
mov
insl
icebp
cmp
gs
add
mov
mov
fcmovne
in
sbbb
popa
xor
sub
jbe
in
fnstcw
fwait
repz
mov
mov
xchg
jo
ror
jle
rcll
push
mov
pop
popa
mov
rolb
or
inc
cmp
pop
cmpsl
ljmp
pop
in
push
icebp
pop
dec
mov
xor
js
jmp
pop
nop
pop
jb
std
cwtl
leave
xchg
ret
add
jecxz
push
mov
sub
sbb
aas
in
aad
pop
sbb
aad
jle
sub
and
cmp
stos
or
scas
push
dec
inc
fdivs
sbb
test
scas
jne
push
iret
ds
flds
push
cmp
popf
adc
jmp
or
fcoml
push
push
in
mov
adc
pop
mov
sub
fistpl
mov
push
push
data16
in
or
xor
fildl
mov
das
outsb
fldenv
loop
inc
insl
jno
xchg
push
jmp
out
fildl
sub
or
scas
or
or
repnz
mov
pop
pop
xor
data16
dec
imul
frstor
lcall
push
jo
mov
mov
lods
cmpsb
fiadds
movsb
mov
mov
adcb
push
xlat
cmc
push
xor
sub
dec
iret
mulb
or
mov
push
daa
jmp
xor
les
jnp
stc
je
test
cmp
add
jecxz
xchg
or
fcomps
pop
dec
filds
cwtl
sub
aaa
rol
and
call
pop
insb
sbb
fsin
mov
cld
jbe
jno
sbbl
out
and
scas
mov
outsl
ret
inc
push
push
frndint
jle
jno
pop
mov
in
loope
cmp
inc
push
mov
mov
jbe
scas
jae
mov
or
outsl
cli
jb
pusha
outsb
hlt
pop
icebp
add
push
aaa
sub
inc
rorb
mov
in
sub
rcl
jne
pop
shlb
mov
popf
bswap
loop
ret
ljmp
out
ret
push
shr
iret
mov
push
mov
sub
mov
mov
fdivs
lahf
or
mov
lret
lods
xchg
imul
out
xchg
mov
das
addr16
xor
std
xor
or
ja
or
sub
sbb
push
sbb
test
mov
pusha
mov
jle
cmpl
sbb
in
lahf
sbb
sub
and
rclb
int
inc
rcll
scas
test
movsl
enter
lea
mov
xor
stos
nop
sbb
add
sar
bound
fs
jp
je
cmc
stc
jmp
leave
xor
test
xchg
and
jb
mov
loope
mov
cli
gs
xor
out
movsl
call
lcall
add
pop
jbe
testl
int
out
or
mov
cmp
push
push
jecxz
sysret
sbb
cmp
and
push
ljmp
sbbb
adc
or
mov
vmulpd
outsb
aas
push
lods
arpl
lods
pinsrw
mov
and
lea
je
test
clc
jmp
cmc
stos
psubq
and
es
jle
xor
xor
outsl
mov
mov
jb
sbb
lret
lahf
inc
sbb
push
movsl
jp
jb
cmp
aad
xor
lods
mov
iret
push
int
push
dec
add
addr16
adc
pcmpeqd
cmp
pop
icebp
fldcw
xor
int3
cmpsl
mov
fdivl
insb
aas
mov
sub
add
daa
inc
enter
out
or
mov
mov
fcmovu
jae
xchg
ret
mov
fmul
insl
mov
adc
outsl
addr16
pop
mov
jecxz
shr
sub
fadds
pop
in
or
out
inc
cmp
xchg
push
stos
mov
adc
int
sbb
cwtl
lret
push
jnp
in
sti
add
pop
lds
sub
in
rcr
std
lock
inc
sub
push
jns
sbb
xlat
jmp
fstpl
mov
sbb
xchg
adc
loope
ljmp
les
stos
stos
jp
mov
mov
inc
push
xor
sahf
stos
sub
mov
sub
fbld
cmpsb
repnz
gs
mov
push
int3
pop
test
mov
insl
mov
and
call
insb
adc
cs
pop
les
mov
outsl
cs
or
or
test
jg
es
mov
pop
or
fistl
xlat
jno
cmp
sub
scas
pop
sbb
jno
into
or
fs
rcrb
adc
or
inc
dec
pop
push
lahf
mov
insl
mov
and
sub
mov
call
push
test
outsl
repz
xor
out
sbb
fidivl
jg
testl
test
lahf
adc
ret
stc
pop
loope
fistps
or
inc
dec
xor
xchg
pop
push
sbb
js
push
rcrl
xchg
repnz
out
inc
fwait
and
sbb
dec
mov
cld
add
sarl
push
imul
data16
dec
mov
and
movsl
dec
cmp
scas
and
insl
mov
xor
mov
das
xchg
popa
icebp
pop
sbb
sub
or
sub
dec
aas
lcall
mov
fcmove
pop
cmp
or
in
dec
shr
cmp
outsl
pop
lret
andb
outsl
stos
and
dec
push
sbb
ficoml
dec
test
dec
push
mov
stos
sbb
and
mov
daa
dec
push
xor
std
test
pop
jp
mov
dec
cmp
mov
sbb
push
std
loopw
push
mov
lret
daa
aas
and
or
inc
xor
or
nop
xchg
in
data16
mov
test
push
push
or
jecxz
mov
cs
mov
push
loop
mov
loop
dec
addl
aas
push
mov
adc
jno
aaa
mov
add
scas
cli
in
nop
inc
push
gs
subb
jns
xchg
xor
out
inc
xchg
adc
aaa
test
and
rclb
leave
inc
pop
lahf
int
mov
and
cs
insl
mov
jns
pop
mov
aad
bound
sub
mov
sub
and
cmp
loop
mov
insb
jnp
xchg
imul
mov
adc
and
fs
sub
pushf
push
hlt
jnp
jbe
test
xor
xchg
mov
jge
pop
ret
test
mov
jge
xor
mov
data16
xchg
les
clc
jne
push
jle
rcrl
sbb
add
imul
or
scas
outsl
enter
ja
push
cli
cwtl
ret
jl
add
and
pop
outsb
movsl
add
rclb
adc
out
lods
mov
imul
sbb
popf
movsl
es
mov
inc
jp
das
clc
mov
inc
cs
mov
test
inc
and
mov
pushl
lea
jne
call
add
dec
gs
popa
addr16
outsl
js
add
add
je
outsl
fs
gs
imul
add
nop
cwtl
inc
cmpsl
mov
rorb
js
dec
xchg
push
push
xchg
sub
inc
sar
bound
aam
jb,pn
inc
push
outsb
add
cli
jns
push
pop
pop
mov
cmpsl
mov
cmp
aaa
data16
adc
adc
pop
jb
outsb
rolb
jb
les
push
mov
repnz
adc
adc
out
mov
adc
in
and
jecxz
mov
cmp
add
cli
fnstenv
push
mov
jne
cmc
mov
in
add
push
mov
icebp
pop
push
mov
lahf
xor
and
insl
mov
and
mov
dec
adc
cmp
imul
or
push
add
xchg
js
filds
rcll
ret
dec
and
and
cld
fistps
sbb
fmull
es
lea
xor
shll
dec
sub
repnz
das
fld
and
lret
adc
sub
push
outsl
addr16
adc
cs
xchg
aam
jne
mov
jo
ss
cmp
pop
hlt
test
push
bound
push
sbb
pop
into
mov
xchg
lret
in
je
pushf
jl
xor
ret
cmc
stos
push
pop
outsl
sub
sbb
into
das
loop
pop
lret
ret
sbb
mov
ljmp
imul
mov
push
loopne
into
pop
mov
mov
xor
xchg
mov
dec
pop
jle
mov
rcl
cmpsb
xor
jne
mov
iret
pop
push
call
inc
out
shlb
cs
in
or
lret
shl
outsl
or
gs
xchg
lahf
cmpl
dec
push
mov
xlat
adc
ret
cmp
vmwrite
jl
in
push
mov
addr16
sub
fwait
sub
sub
lea
xor
lods
lock
sub
jae
aad
movsb
xor
xchg
fdiv
push
std
cmp
int3
nop
jns
and
leave
jb
push
into
movsb
sbb
in
repz
test
xchg
orl
or
mov
jecxz
add
jl
add
cmp
cmc
outsl
xchg
loopne
mov
imul
clc
and
or
mov
imul
jne
inc
mov
xor
les
aad
jne
imul
fdiv
fimuls
jmp
dec
out
sbb
in
lods
sub
mov
aas
nop
sbb
pop
es
aad
out
insl
add
pop
fcompl
enter
mov
cmp
jmp
or
xchg
inc
jecxz
cmc
test
mov
nop
xchg
xchg
and
std
sbb
sahf
xchg
out
adc
or
sub
push
leave
cwtl
adc
sub
add
xchg
sub
cmp
lahf
daa
jmp
ficoms
sbb
mov
call
in
sub
aam
jo,pt
sahf
inc
lods
sbb
push
mov
or
mov
cmc
sbb
icebp
jns
add
xor
xchg
cmp
push
inc
js
dec
sbb
lods
cld
pop
push
jmp
pop
hlt
mov
mov
fdivrl
daa
push
cwtl
sti
jg
jo
mov
aaa
inc
sub
jg,pn
lea
ret
pop
push
js
pop
pushf
repnz
mov
sbb
mov
push
jmp
lret
gs
lods
sahf
in
mov
push
lret
mov
insl
mov
in
repnz
cli
mov
loopne
imul
scas
push
scas
pop
notl
and
lock
lcall
out
test
pop
add
sbb
push
pop
sbb
add
test
push
push
popf
jecxz
xor
xor
hlt
and
popa
pusha
inc
pop
or
lret
xchg
bound
nop
nop
and
into
inc
add
out
in
in
mov
add
aam
pop
cmp
xor
dec
insb
fmuls
gs
cmp
push
dec
pop
gs
out
scas
push
ja
mov
insl
push
jg
insb
jae
jp
ror
mov
jmp
add
push
gs
jo
outsb
dec
gs
js
add
lret
lcall
test
adc
pushf
inc
pusha
inc
pusha
push
mov
lea
jmp
xor
mov
mov
push
xor
dec
jge
je
mov
add
xlat
mov
nop
iret
sub
push
mov
scas
lds
lahf
push
js
popa
xchg
inc
dec
dec
sahf
cmp
pop
add
sbb
ja
out
js
lods
dec
dec
or
add
push
outsb
push
add
mov
pop
sub
mov
imul
lret
dec
stos
es
push
ret
push
in
cmpsb
imul
pop
scas
lock
and
add
mov
mov
cmp
add
cmp
push
mov
pushf
call
fstps
or
cmp
idivl
pop
dec
cli
or
ret
cmpl
imul
and
into
out
xchg
rclb
fsubrs
int3
int3
fdivs
out
jmp
stos
jb
scas
ss
xor
push
mov
in
imul
fists
cltd
pop
mov
and
push
idivb
ret
pop
xchg
add
addr16
das
xor
jmp
pop
xor
dec
add
inc
sahf
add
adc
movsl
aaa
inc
cmp
insb
jno
push
out
rol
xor
mov
xor
add
adc
insb
loopne
jae
repz
adc
cli
lds
daa
pop
jbe
dec
or
cwtl
ds
pop
add
dec
icebp
sub
bound
jg
sbb
xchg
shrb
push
movsb
fwait
insb
lret
cltd
sub
fwait
jno
or
lock
push
cmp
daa
mov
movsb
pop
insl
andb
jecxz
jle
inc
ret
inc
pop
ror
and
pop
mov
cltd
xchg
adc
hlt
sub
dec
add
or
xor
or
adc
sar
mov
mov
in
testb
vpaddusb
fldl
outsl
dec
mov
xor
into
in
stc
int
call
add
cmp
shl
adc
shrl
scas
rol
scas
lcall
dec
stc
adc
xor
scas
cli
sub
xor
mov
test
pushf
lret
add
stos
pushf
clc
ror
clc
shr
pushf
jmp
setne
inc
mov
stc
cmp
jmp
fsubrs
mov
jno
divps
mov
inc
and
cmpsl
fdivr
in
push
loope
or
xchg
mov
cwtl
mov
cli
ljmp
dec
xor
pushf
jmp
cld
out
xor
add
movsb
add
xchg
and
outsb
jl
cld
stc
mov
and
add
mov
fwait
jb
xlat
cltd
push
mov
and
aad
outsl
xchg
int
jp
ret
mov
pop
mov
mov
ja
fucomip
lret
dec
out
ficompl
test
aas
push
lahf
push
cmp
xchg
cmp
or
xor
arpl
or
cmpsb
or
icebp
inc
xchg
mov
rclb
fucomip
add
out
mov
stos
jnp
ja
ja
das
push
push
and
lahf
dec
test
in
testb
insb
jns
leave
add
leave
jg
ja
pop
mov
and
mov
mov
and
insb
ja
in
sbb
nop
cltd
aad
dec
int
test
push
stc
add
inc
sbb
mov
in
sarl
cli
jp
mov
lahf
cmp
and
pop
rcrb
cwtl
hlt
sarb
cmpsl
rep
ret
pop
in
mov
pop
cs
andb
jae
adc
push
mov
cmp
cmc
push
dec
ss
adc
lock
inc
pop
pop
push
lea
jmp
sbb
lds
sub
cs
pop
fs
mov
stc
test
sub
adc
mov
mov
insb
je
fisubrs
push
sbbb
out
xchg
push
and
cltd
js
or
test
pop
das
lods
loope
hlt
in
cli
mov
in
test
repnz
ja
and
ja
mov
xlat
in
and
xlat
out
aam
cmp
lods
ret
imulb
cmp
loope
in
jbe
std
shld
jbe
testb
in
jo
bound
insb
cltd
push
mov
dec
push
jecxz
test
pop
subl
mov
and
jge
push
push
pusha
pushf
lea
jmp
jmp
cmp
mov
movsl
adc
inc
cmp
mov
adc
mov
roll
ficomps
sub
or
push
out
dec
adc
lea
xor
pop
movl
out
aam
or
dec
arpl
mov
inc
push
xor
or
jge
int3
mov
mov
adc
cld
xlat
add
sti
cmc
bnd
popa
push
mov
jne
rcrl
movw
lea
jae
cmp
clc
pushf
cmc
cmp
jmp
pop
subb
insb
out
daa
popf
adcl
and
pop
cs
cmpsl
cmp
aaa
xlat
xchg
mov
fcompl
mov
jmp
arpl
mov
inc
sbb
test
das
scas
test
or
mov
rclb
repnz
jmp
sti
push
or
jle
in
cmp
sbb
adc
xor
das
mov
xchg
push
cli
out
cmp
xchg
clc
stc
push
out
push
stos
mov
cli
lret
pop
aad
ljmp
mov
xchg
shrb
test
xchg
aad
adc
out
sbb
mov
dec
inc
or
dec
cwtl
sbb
cltd
dec
arpl
aad
push
push
fwait
push
xor
adc
mov
std
jmp
loopne
inc
pop
jno
push
stc
adc
jge
jb
inc
mov
sti
and
adc
mov
lahf
cmc
jae
loope
pop
pop
jge
lret
cmp
sub
jge
jae
pop
movsl
icebp
or
mov
add
psllw
stos
jno
imul
or
fstpt
pop
dec
popa
pop
mov
dec
and
dec
xor
sub
movb
jne
xchg
addb
sub
cwtl
cli
or
movsb
dec
push
jae
aad
cmp
sti
cld
inc
pop
mov
or
jmp
stos
daa
std
adc
or
out
in
dec
in
xchg
lret
popa
stc
lds
incl
fisttpl
sbb
and
inc
in
pop
fcmovu
pop
xlat
leave
aas
jg
sar
mov
push
jp
cwtl
dec
mov
mov
cmp
add
add
movsb
movsb
imul
lods
mov
jo
sbb
cs
sbb
pop
fmull
xchg
xchg
inc
cs
push
aad
lcall
inc
add
push
cmp
test
xor
xor
pop
jns
insb
jnp
push
sbb
and
inc
and
dec
pushf
setne
lods
pushl
stc
stc
bt
ror
movb
call
ja
xchg
cmp
sub
jno
scas
cmpsb
cltd
push
test
add
lea
fidivs
mov
sub
lret
es
mov
add
inc
cmp
das
xchg
rorl
jae
mov
js
dec
inc
xchg
sbb
out
idivl
xlat
jg
fsubs
push
jne
js
xchg
inc
mov
es
or
cld
adc
leave
daa
nop
jno
jno
and
cmc
cmpsb
in
lea
insb
es
xor
jecxz
push
ds
mov
lret
sbb
inc
push
call
ds
out
shrl
xor
pushf
sub
mov
dec
push
push
inc
jp
add
mov
rcl
icebp
daa
jbe
sub
daa
ja
xor
mov
pop
mov
sub
loop
mov
jo
hlt
xor
and
mov
lods
mov
add
mov
jecxz
fsub
stos
sarb
adc
xchg
mov
lcall
mov
push
test
es
fxch
xchg
sub
or
rorl
or
lret
lods
and
and
test
or
sub
sub
mov
mov
mov
clc
and
add
sub
mov
or
mov
call
pushl
test
pushf
call
mov
mov
xlat
mov
jg
stc
pusha
stos
mov
mov
int3
sub
and
daa
scas
out
clc
outsl
jo
icebp
inc
jo
pusha
xchg
loope
stos
icebp
lret
aad
fdivs
mov
movsl
and
in
or
cmp
or
testb
data16
fiadds
adc
mov
nop
test
ret
jecxz
mov
movsl
sbb
mov
pusha
mov
andl
loop
add
arpl
pop
sub
int
sbb
mov
cmpsl
mov
lea
movsbl
movzwl
pusha
lea
movzbw
pop
bswap
pusha
mov
pushf
lea
call
call
pushf
movl
pusha
pushf
movb
lea
jmp
mov
or
add
push
lcall
bound
dec
push
mov
fildll
push
and
pop
mov
add
xchg
nop
imul
js
faddl
enter
addb
fwait
daa
arpl
out
inc
dec
outsb
out
nop
cwtl
call
add
sbb
outsl
mov
test
call
loop
inc
push
mov
and
pop
pop
adc
cmp
mov
in
push
jo
cmc
rorl
mov
test
pop
sub
mov
icebp
push
push
mov
add
cmp
mov
jg
inc
adc
mov
jb
jnp
mov
inc
sub
std
int
mov
test
test
xor
inc
mov
cs
xchg
xor
cmp
loop
mov
aam
leave
mov
inc
cmpb
lods
lcall
ret
adc
insl
sub
rolb
mov
jl
adc
insb
jg
scas
jns
fs
ja
push
push
jmp
sar
inc
mov
jno
outsb
movsl
aam
dec
mov
mov
clc
lods
add
inc
push
pop
dec
xchg
enter
xor
pop
fadds
sti
mov
repz
mov
add
mov
outsb
xor
into
jge
lods
sub
sarb
outsb
lods
addr16
leave
mov
ljmp
push
xlat
push
ljmp
or
adc
fisubs
addr16
aam
insl
inc
loop
xchg
lret
mov
jecxz
sub
clc
mov
cmp
and
push
clc
add
pushf
pushl
pushf
movb
lea
jmp
mov
cmp
cmc
test
pushl
push
call
call
or
popf
sub
or
mov
sbb
out
jno
or
adc
mov
stc
outsl
xchg
mov
mov
inc
jno
sar
mov
fwait
mov
jge
idiv
daa
imul
imul
aas
scas
sahf
lcall
lcall
push
je
xchg
repnz
xchg
and
inc
int3
fstpt
js
or
sub
stos
or
xor
rclb
lret
sbbb
xor
imul
cmp
cs
jbe
dec
cmp
vminsd
add
push
and
das
fdivl
xchg
lock
or
pop
js
negb
sbb
test
test
pop
xlat
popa
sbb
push
fcoms
enter
dec
mov
mov
dec
mov
xlat
jb
cs
je
xor
inc
xchg
ret
jo
enter
pop
inc
fmull
test
insb
jge
daa
repz
xorb
aaa
loop
mov
sub
sub
sti
mov
pop
mov
sub
or
sub
or
aaa
pop
fwait
fwait
lea
mov
scas
xor
fwait
loopne
lahf
popf
lea
mov
pop
pop
sub
lods
cmpsl
das
mov
pop
sbb
lods
push
mov
sub
add
aaa
pop
fldt
sub
pop
sbb
pop
xor
mov
fucomi
push
dec
movsb
insl
sahf
adc
push
lods
or
sub
test
mov
pop
pop
lock
cmp
je
mov
pop
sbb
in
sub
scas
into
pop
sbb
xchg
mov
push
xor
outsb
inc
int
mov
sub
in
fs
mov
pop
sbb
xor
out
lods
sbb
mov
pop
sbb
sub
mov
pop
ret
push
sub
pop
sbb
leave
or
sub
pop
sbb
mov
push
jge
adc
sub
fwait
adc
mov
pop
sbb
xor
leave
in
jnp
mov
pop
pop
cs
fwait
inc
lods
lret
xorl
lods
xchg
lods
sarl
push
and
imul
sbb
stc
adc
stos
call
mov
faddl
sub
jl
scas
xor
sbb
test
or
cmpsl
xchg
mov
pop
fisttpl
lods
imul
jnp
fldcw
pop
fwait
leave
cmp
inc
inc
in
cltd
mov
sub
js
das
sub
pop
sbb
sub
daa
popf
scas
xor
mov
lods
add
sub
mov
lods
xchg
mov
sub
push
cwtl
mov
pop
sbb
push
xor
lods
adc
sub
test
fwait
stos
call
mov
pop
pop
sub
addr16
lods
lods
mov
mov
pop
sbb
in
outsl
daa
int
popf
scas
ss
fwait
jge
aad
sbb
jno
mov
pop
fwait
push
daa
arpl
sub
pop
sbb
dec
mov
aas
pop
fwait
insb
cmpsl
ficoms
pushf
jmp
fs
xor
pop
adc
or
pop
mov
jmp
xchg
ja
and
mov
cmpsl
adc
sti
out
mov
gs
testb
loope
mov
ret
out
or
jne
and
in
cmp
in
jnp
add
nop
jecxz
stos
dec
aaa
sti
mov
fwait
xor
inc
xchg
bound
repnz
negl
lahf
outsl
ja
inc
dec
lcall
test
mov
pop
jle
pop
push
pop
mov
mov
inc
sbb
xchg
fimull
out
shll
pusha
aad
push
lods
not
not
bt
not
jmp
call
jns
nop
mov
sub
pop
jbe
or
push
sub
js
jl
pop
xchg
or
push
aas
fldt
mov
mov
mov
rcll
or
shufps
popf
aam
inc
xor
dec
pop
and
jle
mov
cmp
outsl
lret
inc
sub
lret
and
push
mov
xor
movsb
dec
push
dec
in
sbb
in
inc
cld
scas
lret
cwtl
add
mov
dec
sub
ja
insb
popa
stos
test
ljmp
insl
xchg
aaa
sbb
jge
xchg
push
dec
mov
jmp
jmp
loopne
daa
xor
gs
xchg
aas
incl
add
xor
or
pop
fstps
xor
xchg
mov
mov
xlat
arpl
push
repz
stos
loopne
fdivl
inc
enter
stos
test
mov
aas
jge
cmc
push
mov
mov
bound
lret
cs
add
ds
mov
and
and
out
push
jmp
jo
lret
mov
mov
add
jp
cwtl
adc
dec
mov
sbb
xlat
mov
xor
js
add
lahf
lds
sub
inc
ficomps
shrl
xchg
shrl
out
mov
xchg
xor
imul
repnz
testb
push
fidivrs
imul
jl
push
adc
pop
dec
clc
int3
repnz
ja
or
ljmp
pop
es
inc
or
cmp
orl
lret
adc
push
pushf
pusha
pushf
lea
jmp
shlb
int3
call
insb
mov
mov
pop
or
pusha
mov
inc
xor
fistpl
fdivs
xor
push
push
cli
test
test
mov
imul
pop
cli
test
dec
adc
adcb
notb
aad
shrl
ds
js
inc
or
cmp
push
imulb
rclb
mov
push
test
add
arpl
push
wrmsr
je
neg
sub
xchg
adc
jmp
mov
addr16
mov
cmp
add
xlat
add
test
and
jmp
gs
test
fsubs
dec
pushf
push
fwait
add
je
mov
jno
mov
jmp
inc
das
cmpsl
cmpsl
mov
enter
and
stos
xchg
mov
sbb
add
cmp
ficomps
adc
icebp
adc
pushf
ss
aaa
stc
xor
test
adc
pop
jns
pop
loope
fmull
pop
iret
out
mov
testl
lock
sub
sub
fwait
jecxz
inc
out
pop
sbb
sub
test
jo
mov
lret
icebp
imul
arpl
stos
cmp
sti
adc
push
dec
jns
mov
out
fucomip
test
pop
add
popf
or
push
notl
xor
jns
dec
pop
sbb
inc
popf
in
inc
mov
xchg
test
push
push
cmp
fwait
mov
addr16
push
jle
mov
mov
in
mov
push
pop
movsl
pop
xlat
mov
ds
je
cltd
and
xlat
movsl
ffreep
aas
fbstp
jbe
es
sub
push
insl
fs
in
lods
lcall
insb
fs
pop
mov
inc
outsl
push
in
push
daa
inc
popf
fs
cltd
cmp
popa
movsb
adc
ret
adc
sub
cmpsb
cld
aas
test
jnp
in
daa
mov
or
lds
mov
out
nop
call
dec
out
mov
mov
sbb
imul
fs
lds
push
push
mov
lea
push
pushf
pusha
lea
call
push
call
ss
scas
or
sbb
lret
and
and
sub
insl
setg
shll
stos
mov
cwtl
lods
dec
sbb
popa
adc
add
sub
or
xchg
jl
imul
cmpsl
jl
pop
sbb
imulb
pop
cmp
int3
xor
daa
pushw
jb
xchg
xor
mov
scas
dec
or
xchg
insl
daa
mov
ds
jl
jge
xorl
repz
lods
jns
bound
sbb
mov
push
xchg
xor
std
cmp
mov
in
aam
es
outsl
cmp
and
push
lock
xchg
push
push
push
jge
test
push
push
mov
xor
int
aaa
andb
out
fcomi
adc
out
push
adc
mov
xchg
push
mov
stc
xchg
xor
mov
jle
in
sbb
test
push
xchg
jp
insl
xor
jecxz
cwtl
out
lret
xchg
dec
cmp
push
lea
jae
rol
jmp
mov
icebp
mov
mov
mov
test
xor
outsl
inc
push
pop
loope
adc
movsl
test
xchg
mov
push
push
inc
popf
xchg
jmp
cwtl
stos
fpatan
jge
imul
outsl
fiaddl
dec
ror
jecxz
lahf
fistpll
dec
shl
mov
xchg
and
mov
adc
and
dec
push
xchg
cmp
dec
sub
push
ds
or
mov
xadd
add
xchg
test
adc
cmc
jmp
pushf
lea
jne
seto
movb
setns
movsbw
pushf
jmp
test
push
cmp
movb
lea
ja
pusha
imul
bt
add
pushl
movb
movw
lea
jmp
call
inc
pushf
lea
jg
mov
lea
pushf
mov
lea
not
dec
inc
not
mov
push
call
cltd
aad
mov
sub
in
push
mov
jle
pop
lds
movsb
ror
jmp
test
divb
cld
add
inc
mov
mov
mov
movl
aad
in
popf
ret
mov
sbb
xor
ljmp
fucomi
stos
xor
pop
outsb
lods
and
dec
jp
insb
imul
mov
adcl
cld
mov
scas
mov
lret
insl
pop
div
lods
xchg
inc
adc
xor
inc
xlat
jl
cmp
mov
xor
xor
lret
pop
mov
and
cmc
mov
in
mov
push
push
data16
mov
repnz
push
mov
add
incl
cltd
and
rol
cs
push
adc
lret
cmpsl
orb
not
mov
pushf
movw
mov
pushf
movsbw
bswap
lea
mov
mov
movb
pushl
ret
pushf
push
lea
jne
shrd
setg
shld
mov
sbb
sub
test
jmp
mov
and
push
leave
push
or
mov
jae
jl
fwait
xor
sub
icebp
pop
mov
test
push
jo
mov
xlat
out
mov
dec
dec
add
jmp
xchg
add
xchg
cmpb
cld
cmpsl
popf
out
jae
loopne
cmpsl
mov
ret
stos
popa
sahf
pusha
enter
cmp
popa
and
cmp
sbb
lcall
imul
ret
push
sbb
xor
inc
outsb
sub
fisubl
add
lods
adc
icebp
xchg
or
mov
sbb
sti
mov
sbb
icebp
lahf
and
imul
inc
shrb
les
pop
scas
xchg
sub
inc
fcomip
rcrb
repz
insl
int
movsl
stos
mov
pop
and
sub
psllq
psubsw
ds
mov
or
into
jge
clc
jl
jnp
repz
pop
and
fsubl
xlat
push
fildl
xchg
jns
mov
lds
imul
xlat
daa
mov
xor
inc
shrl
clc
aaa
out
adc
in
gs
or
outsl
jle
jmp
mov
adc
scas
ret
pop
mov
pop
push
sbbl
shlb
sub
dec
inc
sub
fisubrs
or
push
push
dec
pop
pop
or
je
ficompl
aaa
pushf
pop
packuswb
jp
sub
sbb
js
push
adc
cmp
adc
inc
bound
pop
xchg
loope
pop
inc
in
inc
mov
mov
scas
bound
jo
and
rclb
pop
insb
testl
lods
cmp
cmp
sub
test
bt
jmp
jbe
adc
cmp
xchg
cltd
test
mov
stos
sbb
pop
add
fcmovbe
push
mov
ret
std
dec
lea
sahf
fldcw
inc
mov
adc
jge
jle
cld
push
mov
xor
xchg
mov
ret
pusha
pop
add
bound
xorl
lcall
xor
loop
out
pop
mov
loope
sbb
jp
xchg
sti
xchg
int3
and
mov
lret
sbbl
and
mov
sub
stos
inc
jbe
movsb
pop
cmp
fs
into
push
testl
cmp
push
out
popa
mov
inc
subl
cwtl
aam
rclb
call
push
pop
adc
out
sub
mov
fisubrs
decb
fdivp
mov
sbb
mov
movsl
xor
and
and
mov
outsl
mov
xchg
stos
sti
fsubs
data16
xlat
ret
push
insb
pop
inc
addr16
ja
adc
inc
and
rol
dec
jg
inc
pop
mov
inc
pop
test
imul
outsl
int3
data16
xor
add
fstps
inc
mov
inc
popf
insb
orl
sub
out
ret
cli
jge
jmp
or
addr16
mov
sbb
idivb
cmp
push
enter
push
sub
sti
adc
loop
fcompl
xlat
bound
mov
popa
add
pop
in
ja
sub
mov
daa
nop
jge
mov
lds
addr16
lea
sbb
push
rorb
inc
push
inc
or
dec
insb
insb
popa
mov
sti
in
rorb
test
jmp
mov
push
lea
jmp
cmp
jmp
add
ja
outsb
xchg
insb
pop
sbb
cmp
aad
xchg
insl
insb
pop
mov
out
cmc
push
in
les
or
data16
pop
mov
pop
pushf
jbe
mov
adc
lret
sbb
pop
popa
orb
das
repz
inc
mov
imul
mov
mov
mov
fisttps
or
ret
jbe
out
fsubr
je
cmp
lret
cmp
fcoms
and
mov
ljmp
out
out
inc
dec
push
inc
add
es
test
xor
pop
add
jl
and
cmpsl
daa
jae
test
outsb
pop
mov
roll
neg
icebp
shr
xchg
cmp
xchg
in
xchg
push
xlat
insb
sbb
cmp
sub
dec
pop
lods
mov
jno
push
std
nop
push
push
sbb
sbbb
adc
adc
aad
sbb
stc
fidivl
insb
insl
fcoms
call
movl
pusha
push
call
lea
ja
bt
push
lea
jb
clc
imul
pushf
add
pushf
pushf
movl
mov
lea
jmp
out
mov
dec
dec
jl
adcl
sbbb
movsb
dec
add
sub
adc
mov
jnp
or
out
imul
jl
lahf
popf
mov
or
jne
xor
lea
int
mov
push
jbe
or
or
mov
xchg
mov
push
pop
fwait
test
mov
xor
outsl
adc
lret
imul
sbb
mov
setae
mov
lea
push
xchg
cwtl
bswap
mov
movzbw
movl
jmp
outsl
lahf
imul
sbb
daa
int
icebp
xor
xor
jne
jecxz
push
aas
push
fldt
inc
add
cmp
fcompl
or
repnz
imulb
dec
cmp
loopne
adc
adc
shrb
add
psrlw
mov
lods
mov
les
xchg
cltd
clc
sbb
push
xchg
in
sub
sub
push
in
add
dec
fxch
insb
push
test
and
rorl
pop
add
mov
or
add
sbb
mulb
jnp
loope
int3
mov
andb
xchg
or
loope
jge
push
xor
mov
pop
jmp
push
lock
xchg
mov
mov
push
movsl
xor
add
pop
out
into
lods
push
rcrl
mov
push
mov
inc
jno
mov
mov
push
outsb
leave
mov
xchg
mov
add
dec
adc
xchg
or
xor
pop
push
mov
mov
stc
adc
orl
pop
gs
scas
dec
xchg
fldl
cli
test
lret
inc
fildl
dec
test
mov
and
mov
insb
push
icebp
sub
movl
lea
je
bt
call
dec
outsb
ljmp
lods
xchg
pop
stc
in
mov
fcomp
adc
popf
cmp
ret
or
rolb
mov
stos
dec
rolb
and
pop
test
insl
jae
mov
inc
aam
stos
mov
xor
cmc
aad
pusha
cmpsb
mov
cli
adc
adc
hlt
popa
mov
lcall
in
add
inc
push
inc
mov
and
andl
pop
xor
dec
sbb
out
xchg
inc
repz
mov
ljmp
jle
ljmp
mov
insl
sahf
mov
jno
iret
xchg
mov
loopne
sub
or
or
pop
test
mov
aad
adc
test
loop
lss
ja
out
adc
jnp
icebp
jmp
xlat
jns
pop
out
mov
addr16
cmc
mov
mov
faddl
jmp
mov
xchg
xchg
cmp
outsb
xchg
mov
and
loop
in
shll
adc
add
mulb
mov
inc
mov
sbb
jg
dec
push
mov
or
cwtl
add
test
mov
js
xchg
js
push
dec
add
inc
and
and
adc
data16
and
lret
stos
cld
jl
lcall
lret
mov
lock
push
and
lods
add
std
cwtl
jbe
mov
fistpl
mov
mov
jle
je
iret
adc
repnz
test
sbb
fs
inc
popa
lahf
inc
lcall
push
clc
lea
push
xor
add
test
mov
dec
nop
lahf
push
sbb
sbb
or
pushf
pop
test
or
lret
jmp
pop
bt
stc
cmpb
lea
jl
pusha
pushf
push
lea
jne
bsr
or
dec
xor
sub
mov
shl
call
cltd
loop
adc
mov
stc
add
icebp
mov
incl
rclb
repnz
movsb
ror
jae
lcall
push
cmp
ja
leave
jnp
dec
pop
mov
es
outsb
cmc
sahf
xchg
push
sbb
sub
mov
cmpb
movsl
mov
addr16
rcrl
ljmp
inc
test
inc
pop
outsl
mov
ljmp
fwait
jmp
adc
push
ret
jno
popa
sub
scas
jle
xorb
inc
rol
xchg
repnz
lret
cmp
stos
imul
shl
jnp
xchg
shlb
decl
jo
jl
leave
xor
mov
data16
xor
movsb
fidivrl
pop
mov
aas
and
out
incl
add
je
push
popa
bound
aad
mov
lret
and
xor
dec
sub
test
out
fucomi
push
pop
mov
jnp
fldt
in
mov
jbe
inc
addr16
lock
push
cmp
push
stos
hlt
lahf
daa
push
getsec
jg
sbb
add
fprem1
adc
icebp
mov
fucomip
push
xchg
cmc
or
call
dec
inc
and
jne
lret
pop
arpl
ja
insb
push
imul
add
lret
and
movl
mov
pushf
movl
mov
lea
jmp
lea
call
push
jmp
out
cwtl
ret
mov
xchg
shl
les
mov
dec
push
out
jge
loopne
mov
push
inc
aas
inc
aad
stos
cmpsb
data16
into
call
je
xchg
lock
pop
xor
add
fs
fcmovne
shr
xor
mov
popa
inc
scas
add
add
jne
stos
dec
pusha
and
xor
repnz
ret
sub
mov
out
jnp
and
movsb
add
insb
push
addr16
sti
jmp
push
movb
pushl
popl
push
push
pushl
ret
pusha
call
inc
out
shl
adc
lods
stos
repnz
mov
ret
sti
cmpsb
push
idivl
sbb
mov
add
das
xchg
inc
xorl
ficomps
jp
add
or
out
adc
das
imull
popfw
dec
inc
xchg
dec
jmp
push
sub
xchg
cli
cli
jmp
in
scas
lret
push
fsubrl
or
push
lret
adcb
jne
inc
dec
pop
xchg
lcall
sbb
dec
push
adc
fdivl
fwait
and
popf
ret
mov
push
sbb
das
and
push
push
adc
add
pop
xchg
pop
cmpsb
sar
jmp
test
ss
inc
jo
cli
out
xchg
rcr
andb
pushf
cmpsb
push
jnp
add
xor
dec
arpl
sub
and
mov
or
outsb
pusha
jbe
and
dec
adc
jl
inc
add
in
inc
gs
dec
xor
jno
loop
mov
dec
divb
repz
int
test
cltd
xchg
test
int
lret
cmp
ret
bt
bt
cmp
pusha
pusha
pushf
lea
jae
push
pusha
pushf
cmp
call
out
inc
gs
xlat
add
xchg
icebp
dec
loopne
es
jae
fldenv
xchg
sub
jge
mov
aam
jns
push
inc
adc
sbbl
and
cmpsl
cmp
mov
dec
mov
out
scas
cmp
jmp
packssdw
movsl
jg
mov
inc
cmc
nop
xor
pop
arpl
lret
push
add
xchg
scas
sbbl
bound
insl
xchg
and
loope
rolb
and
inc
cwtd
mov
gs
sbb
dec
test
pushf
lea
jne
shrd
mov
sub
daa
mov
jmp
loope
mov
add
xchg
test
adc
or
adc
xorb
cli
dec
fsubs
xchg
dec
cmpsb
dec
hlt
daa
pop
dec
loop
cmc
mov
pop
ds
adc
pop
movl
out
leave
outsl
cld
loop
ja
into
orl
push
lcall
or
and
add
scas
lds
cs
inc
ds
push
mov
mov
dec
je
ret
inc
jo
push
sub
jg
lret
scas
insl
mov
aam
aaa
or
pop
push
lret
mov
cmp
add
clc
cmp
test
jmp
cmc
xchg
xchg
mov
stos
testl
mov
lock
xchg
or
iret
hlt
outsl
iret
xlat
xchg
sar
aam
mov
push
jae
and
add
sub
push
fistpl
mov
adcb
pop
sub
ss
movw
call
adc
scas
shrb
adc
insl
cwtl
xchg
inc
or
pop
mov
pop
sahf
jo
and
xor
les
int
bound
testb
adc
adc
lret
pop
or
cltd
push
testl
cmpsl
imul
xchg
sbbl
mov
addb
adc
sub
testl
repz
jp
in
jo
test
push
cs
xchg
loopne
mov
or
lret
dec
mov
insl
rorl
adc
stos
shr
pushf
pusha
lea
jmp
pushf
pushl
lea
je
cmp
stc
clc
sub
test
stc
cmp
pushf
mov
push
lea
ja
clc
cmc
clc
call
movsl
mov
mov
test
fiadds
cmpsb
inc
or
addl
mov
pusha
or
and
jecxz
xchg
out
cmpsb
add
dec
jmp
mov
lock
data16
and
fs
mov
fsubrs
inc
push
push
xor
into
sahf
hlt
incl
lcall
xlat
xchg
or
arpl
popf
jge
sbb
adc
insb
pop
mov
push
mov
lea
ja
call
popa
fs
jo
xor
cs
insb
add
mov
inc
and
cmc
jmp
inc
sbb
and
rol
and
inc
cltd
js
cmovp
sub
sbb
sub
aaa
pop
jno
sub
out
or
loopne
roll
fnsave
addr16
repz
jg
sahf
dec
add
sub
add
pop
leave
xchg
lret
je
push
inc
dec
xor
imul
iret
pop
repz
pop
loopne
movb
std
test
adc
xchg
inc
pop
sbb
mov
or
adc
lret
fwait
dec
out
push
loopne
cld
leave
cmp
fidivrl
xor
xchg
outsl
data16
or
in
mov
out
scas
xor
outsl
testb
cmp
ret
xchg
pop
unpcklps
push
ja
es
cmp
add
insb
lret
mov
jle
jo
cwtl
ror
mov
jl
cmc
sub
or
mov
cltd
lock
jmp
xor
cld
push
push
jg
mov
shll
mov
mov
enter
mov
xor
jne
mov
cld
push
les
xor
iret
add
fs
jo
js
pop
mov
iret
or
imulb
add
hlt
push
mov
sbb
or
add
push
out
jne
test
sub
notl
call
sub
and
lods
xchg
stc
movsb
cld
push
lock
test
xchg
push
or
mov
add
add
or
or
hlt
mov
adc
add
mov
mov
sub
dec
shr
jecxz
sti
scas
rcrl
xchg
cmpsl
jg
jae
xchg
repnz
cmp
jp
mul
das
jno
divb
ja
dec
xorb
pop
ja
xor
jns
sarl
push
cmpsb
xor
mov
lcall
roll
xorl
cmp
sti
loope
clc
or
inc
lock
push
jb
push
je
jnp
shl
adc
mov
cld
in
je
xchg
and
rorl
sbb
orl
cltd
fwait
lock
inc
icebp
and
addl
adc
repz
jno
jecxz
clc
pop
push
testl
cmp
lods
add
mov
cld
xor
pop
xlat
add
outsb
mov
ss
or
xor
jne
xor
les
cld
out
iret
leave
xchg
add
repz
stos
mov
push
jnp,pn
mov
repnz
into
xchg
xor
shl
push
ljmp
cmp
lcall
or
pop
hlt
mov
mov
das
subl
imul
decl
inc
mov
jo
insl
hlt
or
clc
aam
jmp
lahf
adc
dec
inc
test
sti
js
pushf
add
cmp
jne
pop
and
mov
mov
cmp
test
jo
and
xorl
add
sub
sbb
xor
cmp
movsb
pushl
cld
outsb
repnz
fs
icebp
mov
mov
add
or
cmp
xor
jecxz
mov
pop
push
shll
or
jo
and
inc
or
cmc
testl
or
xchg
mov
das
leave
loopne
scas
push
xchg
add
addb
mov
loop
xlat
repnz
lahf
iret
sub
inc
dec
pop
stos
sbb
imul
jo
jo
je
and
jle
push
push
js
incb
repz
ret
xor
shll
xor
aaa
lret
cld
xchg
dec
mov
lock
or
icebp
loopne
pop
stc
lods
pop
push
and
xor
sti
mov
icebp
cld
mov
scas
mov
out
int
jo
or
adc
add
xchg
imul
lahf
cli
lea
sub
jae
sbb
roll
mov
test
sub
pusha
cmp
jb
bound
xor
or
adc
das
ss
stos
mov
ja
cmp
testl
cwtl
stc
sti
pusha
lahf
jno
or
mov
stc
jo
hlt
xchg
shll
cmpsl
testl
add
add
sub
jb
rcrl
add
jmp
jno
repz
roll
into
sub
mov
sub
mov
adc
mov
pushf
dec
sbb
lret
jae
mov
mov
inc
dec
imul
icebp
bound
mov
mov
jno
xchg
mov
and
push
mov
arpl
adc
add
mov
pusha
add
movsl
sub
das
push
adcl
into
stos
mov
psubq
clc
stos
icebp
pop
mov
mov
sub
cmp
mov
loop
pop
repz
mov
jns
mov
scas
sbb
and
das
sub
ja
jno
cmc
lcall
mov
jne
imul
and
fxch
sbb
sub
lret
jg
jnp
pop
rcr
xor
inc
jns
push
push
jb
sub
stc
or
hlt
cld
jmp
aad
jne
fwait
xor
inc
sub
jo
adc
int
into
jge
mov
push
insl
mov
call
sbbl
jne
push
jge
lock
lds
out
dec
scas
insl
add
xor
sub
jecxz
and
sbb
push
xorl
fwait
bound
mov
test
add
icebp
push
lahf
xchg
adc
sbb
pusha
push
jae
int
rcll
not
loope
push
adc
add
lahf
aad
cmp
push
push
cmp
xor
xor
mov
jne
inc
into
repnz
sub
add
jbe
pop
mov
dec
or
popl
push
dec
or
iret
or
mov
jl
out
dec
cld
repz
mov
ljmp
inc
xor
call
ret
add
cmp
jbe
inc
cs
dec
lret
pop
jae
ret
push
inc
jno
ljmp
mov
inc
hlt
push
push
dec
outsb
in
das
popa
lcall
stos
sub
std
mov
xor
aaa
mov
sub
xchg
add
or
scas
add
lret
sbb
out
dec
mov
lret
push
or
ds
clc
shll
xchg
mov
movsb
push
and
das
mov
xchg
add
std
outsl
adcb
and
pushf
pop
lret
arpl
push
inc
jecxz
xchg
je
lcall
fdivrl
addl
jp
lret
or
add
nop
sub
popa
dec
xchg
xor
cwtl
jecxz
jle
pusha
pop
ret
push
xchg
ret
inc
int
jno
lcall
jge
cmp
call
or
add
jbe
jno
enter
mov
mov
mov
out
icebp
xlat
push
push
popa
mov
shlb
pusha
adc
sahf
cs
repz
sarl
fnsave
sub
and
ja
stc
and
inc
mov
imul
cmp
aas
hlt
test
dec
test
xorl
mov
dec
jmp
mov
push
adc
js
iret
dec
pop
jmp
jb
fstl
add
cld
int
push
add
mov
sub
rorb
adc
arpl
dec
or
out
sbbb
xchg
aam
mov
sub
cmp
jns
cmp
mov
cmc
sbb
push
xor
nop
in
rcll
dec
sbb
out
mov
test
and
jo
lock
shrl
jle
xlat
movq
mov
lret
mov
cld
in
adc
inc
je
ja
js
and
pop
sub
stc
push
hlt
and
mov
dec
pop
xchg
ljmp
cld
mov
inc
sbb
push
add
test
xor
push
add
add
and
sti
mov
fst
sub
in
xchg
adc
out
xor
arpl
lods
pop
inc
cltd
lock
je
sub
cmp
scas
loopne
mov
push
inc
xchg
cwtl
cmp
cld
pop
jmp
pop
mov
repz
daa
fidivrs
xchg
add
ret
idiv
sbbb
inc
dec
jae
xor
test
ljmp
aam
sbb
mov
adc
push
or
cmp
push
adc
repnz
xchg
xchg
je
loopne
in
mov
and
sub
mov
add
sub
or
in
sbb
aas
inc
push
sub
cmp
repz
cmp
sbb
jb
push
hlt
mov
mov
push
fpatan
and
jne
push
scas
sbb
jg
or
ss
andb
pop
adc
pop
mov
and
xchg
dec
xlat
shrb
and
cld
mov
fwait
jnp
sahf
mov
call
ror
jno
repnz
movsb
xchg
mov
pop
jge
add
into
mov
push
adc
popf
repz
or
repnz
lcall
lods
scas
xor
ss
sbb
sar
sti
iret
leave
dec
push
into
dec
ljmp
dec
repnz
dec
add
dec
fbstp
pop
outsb
push
pop
mov
inc
cmp
adc
push
pop
mov
adc
pusha
and
imulb
cmpsl
cmpsb
cld
cwtl
fldl
sub
inc
lds
jg
mov
iret
push
dec
sbb
or
pop
cli
sub
es
and
in
jmp
or
data16
aaa
arpl
xor
fs
cmp
or
add
push
pop
jno
dec
icebp
or
adc
cmp
lock
aam
cli
inc
mov
lock
inc
add
imul
bnd
add
or
repz
add
ds
repz
jg
cwtl
cmp
idivl
cmp
cmc
inc
or
jle
icebp
lock
jo
mov
pminub
mov
jb
popf
jle
icebp
mov
icebp
shl
lock
mov
inc
xorl
in
push
cmp
jl
sbb
push
jne
add
mov
xor
add
add
xor
and
sti
add
adc
adc
jbe
adc
popl
inc
jle
fdivr
adc
add
imulb
mov
adc
nop
div
mov
mov
jp
or
icebp
testl
lcall
or
xorl
cmp
mov
or
repz
cmp
repnz
hlt
je
or
jb
or
je
icebp
add
cmc
mov
mulb
repz
inc
add
inc
or
or
clc
test
jbe
pop
or
sub
clc
jne
cmp
nop
js
je
jp
repnz
cmp
inc
add
test
jns
add
clc
add
test
or
clc
mov
inc
je
or
adc
jbe
xchg
hlt
adc
mov
jb
jns
jns
add
or
inc
div
jbe
fldenv
repz
hlt
xor
add
bound
icebp
sbbb
movsl
div
adc
inc
or
pop
mov
jp
icebp
shlb
push
add
cmp
jo
cmp
rcl
jp
js
sub
js
and
in
sub
ret
das
sti
mov
sarl
insl
shll
cmp
filds
push
popf
jb
mov
mov
jg
sti
mov
inc
dec
lock
mov
rorb
push
enter
dec
or
mov
or
and
sbb
lret
sbb
mov
dec
mov
or
xor
std
sub
push
sarb
sub
dec
int
xchg
sti
mov
jmp
pop
or
cmp
jb
lods
dec
jecxz
aaa
dec
add
shl
cmp
mov
sub
dec
xor
movl
in
cmp
mov
roll
jbe
repnz
cmpsl
ret
lock
mov
sub
and
cs
in
dec
cmpsl
jnp
pop
sub
cltd
and
insl
popa
mov
xchg
rcr
in
dec
rolb
sahf
jno
repz
push
dec
jecxz
adc
cld
lret
pop
addl
jo
testl
cwtl
jno
popa
and
icebp
sbb
jns
xchg
fistl
cmp
xchg
lret
cwtl
movsl
and
cld
jmp
sbb
stc
and
sahf
lock
ds
adc
sar
in
scas
fld
add
or
mov
sub
or
enter
mov
test
pop
testl
xor
push
rorl
push
icebp
je
inc
pop
pop
xor
mov
outsl
mov
cmpsl
jmp
or
or
call
cld
cmpsl
lods
sbb
sbb
jmp
push
hlt
push
ss
or
xchg
dec
adc
push
xchg
repnz
in
aaa
rol
and
dec
testb
into
and
dec
outsl
je
and
out
mov
mov
adc
xor
imulb
sub
adc
movsl
or
sub
and
lods
or
jb
scas
mov
push
or
test
cmp
decb
pop
stc
mov
adc
or
sti
jp
mov
rorb
test
or
icebp
pop
cmpsl
push
cwtl
mov
rcr
stc
idivb
jmp
pusha
orl
js
mov
rorb
xchg
and
or
movsb
jl
jp
call
repnz
or
xchg
cltd
into
xor
lahf
xor
subb
clc
cld
iret
push
daa
or
scas
pop
xor
iret
mov
mov
clc
negb
add
or
cmp
add
jo
push
xor
add
mov
aad
cwtl
cmp
js
es
lea
cld
inc
ja
int3
loop
sbb
cmp
and
cmp
pop
icebp
pop
add
xorb
jmp
mov
xchg
clc
cmp
ja
dec
mov
mov
xchg
or
mov
sbb
sub
jo
scas
push
fsubrl
sub
out
mov
shll
into
das
cmpsl
mov
mov
out
push
push
cmc
test
loopne
jno
out
call
xor
insb
lods
push
jp
mov
mov
sub
add
clc
call
add
cmc
std
dec
mov
xchg
mov
jle
add
bsf
stos
add
enter
pusha
loope
inc
aad
outsb
decl
mov
sti
repz
or
call
loopne
adc
and
ljmp
xor
mov
mov
or
jae,pt
push
fcompl
cmp
jmp
mov
and
inc
clc
gs
das
push
test
decl
scas
hlt
push
outsb
rorl
or
into
lret
inc
jno
aas
mov
clc
int
enter
pop
and
sub
das
mov
jmp
ljmp
sub
mov
dec
jne
ja
lret
lock
outsb
ja
add
cs
pop
push
sbb
xchg
cli
xchg
out
std
sti
xor
cli
icebp
mov
jae
repz
sub
js
jle
cld
xchg
int3
push
inc
frstor
sahf
repz
mov
lret
cmp
mov
pop
int3
pop
sub
jg
inc
jne
push
sbb
sub
andl
sbb
sub
or
mov
nop
push
pusha
int
addr16
lods
incb
cmp
enter
mov
mov
and
push
inc
jnp
cmp
mov
sub
pop
int
inc
dec
cltd
shl
pushf
shrb
mov
cmc
or
lcall
into
lahf
subb
or
mov
adc
out
lods
outsl
sub
mov
imul
psrld
mov
popa
jb
fs
adcl
mov
xor
mov
sbb
icebp
cmc
repz
or
adc
into
sub
sbb
cltd
jo
cmp
adc
or
xchg
push
negb
and
add
jecxz
movsb
inc
jge
push
xor
popa
adc
pop
xchg
enter
sub
lcall
dec
pop
testb
mov
mov
xor
cmp
sti
pusha
sub
cmp
arpl
cs
idivb
pusha
filds
cmp
lods
cmp
mov
into
outsl
sub
pop
sbb
das
lods
aaa
out
xchg
ja
jbe
test
js
jmp
cld
fdivp
jb
aam
or
cmp
push
push
lods
jmp
test
dec
sbb
jne
lahf
cmp
sub
cmp
xchg
loope
and
push
mov
pop
aam
movsl
or
iret
xor
stos
sub
sub
lcall
sbb
sbb
in
sub
mov
sub
or
pop
mov
xor
add
mov
into
loopne
lock
sub
inc
adc
sub
mov
cmp
incl
shl
mov
das
pop
test
sti
push
loopne
aaa
jno
mov
icebp
xor
xchg
add
ja
xchg
insl
sbb
mov
aam
lds
imul
dec
push
rclb
push
shl
or
cli
jp
arpl
arpl
addl
or
push
mov
cmpb
in
negb
pop
or
mov
push
or
and
or
push
jg
shlb
and
out
add
js
pop
cmpsl
mov
inc
sbb
mov
and
cli
sub
adc
into
add
sub
fucomi
or
jp
cmpl
into
push
loope
and
jl
icebp
rcll
dec
mov
decb
in
sub
sti
add
cld
dec
xor
xchg
mov
mulb
mov
sub
jno
inc
cmp
sbb
dec
xchg
fmul
insl
adc
dec
sti
leave
cld
mov
sub
mov
inc
xchg
pushl
cmpsl
adc
xchg
mov
lcall
jns
clc
or
mov
fisubl
sub
pop
push
adc
clc
sbb
imul
mov
xor
je
out
add
lods
addr16
fdivrl
push
inc
mov
add
movsl
cld
adc
ja,pt
in
jp
jge
xor
mov
insb
adc
fisubrs
jb
jmp
imul
xor
pop
outsl
stc
sub
lock
imul
jns
xor
pushl
js
repnz
push
mov
pop
and
cmp
rcr
cld
test
std
in
test
or
ret
js
iret
mov
mov
fiadds
jg
sbb
out
test
jp
mov
lahf
jbe
inc
sub
clc
aam
sbb
mov
ret
mov
jp
push
cmp
mov
mov
js
xor
stos
jae
cmpl
pop
push
sbb
cmp
push
xchg
outsb
xchg
rolb
jae
test
hlt
push
imul
test
add
fsubs
jp
cmp
dec
adc
cltd
dec
sti
adc
jg
mov
ret
jno
jne
dec
adc
je
iret
ljmp
cld
icebp
out
dec
sbbl
hlt
hlt
loope
pop
xor
das
cld
fisttpl
xchg
into
jne
outsb
dec
movsb
inc
mov
pushw
ret
xor
fldl
add
push
stc
xchg
cmp
mov
stos
add
push
push
das
and
lods
push
inc
jne
mov
sub
mov
push
iret
cld
adc
mov
loopne
aad
aam
mov
and
loopne
sub
adc
mov
shr
mov
sti
out
adc
add
mov
mov
in
push
je
dec
jmp
or
mov
mov
or
repnz
ljmp
dec
insl
in
inc
cmp
dec
imul
iret
sub
and
sub
sub
sti
inc
mov
lods
jbe
mov
xor
mov
sbb
inc
pusha
push
leave
inc
adc
add
enter
cmpsl
sub
mov
jp
sub
xor
pop
insb
mov
iret
cmc
stos
imul
outsb
push
cmp
xor
clc
repz
stc
jp
bnd
mov
dec
cmp
cmp
jl
sub
in
daa
push
mov
mov
jne
jno
fucomip
pop
popa
dec
outsb
and
rcl
inc
push
add
into
push
push
add
or
push
cmpl
push
jo
pop
lods
inc
sub
repz
add
and
ja
jmp
xchg
cmc
xor
lock
js
add
jno
xchg
jnp,pt
cmp
jb
std
popf
outsl
pop
leave
fwait
add
ds
stc
xchg
scas
prefetch
or
lcall
lahf
bt
sub
jl
cltd
popa
in
mov
adc
addr16
sbb
and
and
add
dec
cld
scas
adc
xchg
test
mov
sbb
cmpl
mov
clc
cmc
and
pop
popa
or
popa
or
stos
cmp
lcall
add
les
cmp
iret
pop
dec
sub
adc
jl
adc
int
stc
inc
or
push
iret
jns
xchg
pop
sti
ss
xchg
inc
cmp
push
iret
loope
nop
in
sbbl
inc
jo
and
icebp
addb
bound
push
cld
dec
xchg
pop
enter
mov
adc
shl
hlt
aaa
jecxz
xorl
divl
mov
or
aaa
lea
mull
and
jecxz
jl
cltd
inc
mov
cmc
jecxz
xor
push
sti
in
xchg
add
and
or
decl
mov
jmp
sub
fdiv
out
sub
lods
xchg
push
cmp
hlt
hlt
ja
outsb
xchg
sbb
jne
push
nop
and
subb
mov
adc
mov
adcl
mov
or
shll
jb
decl
hlt
mov
jg
jbe
shr
pop
outsb
or
sti
xchg
jno
jns
stc
mov
dec
cwtl
push
xchg
orb
sub
data16
scas
mov
icebp
inc
and
repz
sarb
mov
xchg
ds
call
pusha
cmc
sub
cmpb
cmc
xorb
loop
mov
je
and
jecxz
inc
and
cmp
jl
jo
ret
or
ds
movsb
inc
bound
inc
adc
mov
movsl
and
aad
xor
fdivl
shl
push
sbb
sbbb
xchg
and
adc
add
push
repz
lcall
inc
dec
mov
push
mov
loop
cld
mov
rclb
fisttpll
inc
xchg
xorl
stc
test
in
push
or
cld
jbe
xor
jmp
sti
or
ret
aad
sbb
mov
add
std
out
or
lock
stos
mov
add
cmp
push
and
stos
pop
push
call
in
cld
pop
sbb
es
push
icebp
cmpsb
je
jbe
adc
xor
roll
jp
hlt
xchg
cmp
or
sub
cld
adc
daa
fcomip
or
shlb
stos
hlt
fistpll
das
mov
subl
insl
repz
lret
sar
push
inc
mov
push
ds
xchg
sub
or
popf
movsb
test
adcl
push
cmp
push
cld
lea
pop
mov
mov
shll
mov
jne
aad
pushf
push
sub
jno
or
adcl
sub
inc
orb
shl
test
scas
ja
push
cmp
or
jbe
movsb
outsb
or
or
loopne
or
sbb
das
stos
sub
hlt
and
jle
and
scas
jg
loopne
das
addb
xlat
mov
bound
add
imul
cmp
push
inc
jp
jge
sbb
mov
enter
mov
push
xor
icebp
push
xchg
mov
xchg
adc
mov
aad
add
dec
clc
repz
adc
push
dec
pop
cs
outsl
cld
rolb
cmpsl
inc
cmp
dec
in
add
sti
push
and
shlb
dec
sbb
push
fildll
jge
xchg
jge
pop
xor
and
jno
iret
push
std
mov
sbb
loope
xor
sub
int3
jb
testb
xchg
add
cwtl
andl
cmp
in
fildll
dec
mov
sbbl
pop
ljmp
mov
cmp
adc
dec
in
lcall
add
jae
jle
fldl2e
js
sub
jecxz
das
dec
lahf
fwait
outsb
lea
cmp
push
xor
imul
lcall
sub
orb
and
out
test
sub
push
or
cld
mov
sbb
mov
test
cmp
fisttpl
push
shl
in
pop
or
sub
scas
sti
and
popl
mov
add
pop
push
lods
sti
xor
testb
push
popa
mov
outsl
adc
cmp
andb
mov
xchg
dec
sbb
mov
sbb
lret
clc
push
mov
add
add
xor
xchg
or
loopne
outsb
ds
aas
adc
push
sbbl
dec
jno
fisubl
scas
dec
mov
adc
and
cltd
loopne
xor
mov
adc
out
mov
unpckhps
testb
lock
push
rcll
mov
and
pop
cmc
xor
mov
andb
push
dec
clc
push
out
call
lock
mov
push
or
ljmp
and
leave
or
sbb
xchg
sub
xor
adcl
pop
xor
sub
inc
out
mov
lods
rorl
and
int3
lea
dec
xor
leave
push
andb
dec
push
popf
add
sbb
xchg
and
push
cmp
lods
lret
cli
cmp
pusha
cld
mov
repz
repz
or
testl
xchg
ret
sbb
jno
add
stos
xchg
cs
and
push
data16
push
sub
lods
lea
or
cld
bswap
jo
jg
popa
outsb
push
dec
int
mov
mov
sub
jno
mov
repz
xchg
icebp
cmpsl
push
nop
sub
scas
testl
popf
decl
hlt
mov
push
add
iret
or
dec
ja
mov
mov
mov
mov
fadd
xchg
movsb
loop
imul
sub
xchg
and
cmp
mov
scas
dec
mov
icebp
inc
add
or
cld
xchg
sbbl
loop
hlt
bound
aad
and
popa
jo
mov
test
xchg
bound
mov
sbb
jo
sbb
fisubrl
and
sub
nop
sti
jp
imul
xchg
mov
lea
lret
lock
jb
mov
shll
test
xor
xor
or
dec
rorl
adc
mov
or
push
and
pop
or
mov
scas
add
imul
insl
dec
ret
and
inc
add
xchg
add
daa
mov
sub
outsl
sbb
ss
cli
mov
jbe
jbe
and
mov
and
pop
lret
add
cld
inc
xor
aas
sbb
inc
bnd
xchg
add
into
push
movsb
scas
bound
adc
scas
cld
aad
orl
sbb
fiaddl
in
adc
and
mov
mov
sbb
dec
rolb
adcl
pop
je
or
adcb
fisubl
and
sub
inc
mov
dec
sub
add
cld
jno
pop
push
arpl
js
pop
test
mov
das
das
mov
les
mov
xorl
xor
test
mov
and
ja
pop
ret
inc
movsb
clc
int3
mov
loopne
daa
ja
pop
out
mov
dec
xor
imul
cld
testl
sti
in
xchg
push
cs
arpl
cmp
aaa
dec
pop
in
enter
xchg
dec
add
icebp
dec
sti
push
cld
jnp
or
out
add
andl
add
fildll
cld
push
jle
mov
dec
and
sti
xlat
aad
fs
subl
lea
lret
stos
out
lock
inc
int3
push
iret
xor
adc
dec
fisubs
pop
or
xor
sub
loopw
scas
or
test
lret
out
xchg
sub
mov
xchg
inc
test
or
stos
test
movsb
or
mov
outsb
mov
push
mov
scas
stos
jb
fisubl
push
ret
pop
data16
loope
inc
add
subl
jl
cmp
push
xor
ja
and
sub
fldcw
out
hlt
sub
xor
cld
xor
std
shlb
fadd
xor
or
add
dec
int3
and
cmc
test
push
sub
je
mov
and
outsl
mov
pop
push
or
sbb
xchg
jne
mov
dec
push
jp
jmp
iret
mov
lock
sbb
out
sub
adc
add
mov
xor
pushf
sbb
popa
xor
iret
mov
adc
cld
mov
ds
add
pop
add
sti
add
dec
mov
pusha
mov
dec
add
dec
loop
repz
inc
in
push
stc
test
inc
test
push
test
pop
out
dec
lcall
sub
ss
loop
in
in
and
loopne
fiadds
sub
mov
or
js
sbb
mov
repnz
add
pushf
mov
enter
popa
mov
fnstcw
xchg
andb
pusha
stc
xchg
push
pop
inc
sub
subl
inc
sub
sub
jnp
popf
ja
pop
out
aas
movsb
cld
repnz
leave
add
and
cs
rolb
cmp
stos
nop
repnz
out
dec
mov
and
cld
xor
pop
pop
add
jbe
mov
mov
fisttpll
adc
inc
adc
inc
xor
ret
flds
or
in
idiv
pop
ja
out
xchg
mov
cmp
mov
xchg
div
mov
xor
mov
ds
fs
int3
mov
cmp
pop
not
cld
or
rolb
jge
je
add
outsl
xor
mov
jne
mov
inc
js
outsb
repz
add
mov
inc
idiv
imul
sub
into
xchg
lea
in
rorb
cmp
add
pop
fnstcw
push
loopne
popf
pop
mov
stc
and
cmc
shll
mov
jne
loopne
adc
into
adc
div
add
shl
mov
js
andb
cmp
pop
rorb
jne
or
sti
into
jae
or
xchg
mov
sub
divl
loop
pusha
arpl
or
jno
pop
cs
or
mov
test
pop
mov
or
repnz
clc
or
shlb
lods
jbe
shll
add
push
jnp
insl
dec
sbb
mov
mov
mov
jnp
mov
mov
divl
and
mov
pusha
push
pop
xor
idivb
inc
mov
mov
jle
lods
xor
add
ljmp
xor
dec
inc
jno
mov
stc
mov
ljmp
repz
pop
dec
orl
cmp
xchg
jo
mov
adc
dec
push
mov
add
icebp
sub
mov
mov
adc
and
cmp
fdivl
inc
xchg
pushf
mov
sti
andl
add
jo
push
jbe
inc
add
fsub
jle
add
jns
add
and
stc
jecxz
dec
cli
clc
or
dec
mov
inc
sub
push
loopne
sub
add
sbb
nop
cmpsl
jne
fsub
or
push
lock
shll
mov
sbb
or
repz
lcall
jl
call
add
js
and
inc
sbb
pushf
push
fldl
mov
xchg
inc
sbb
sub
loopne
add
dec
dec
addb
cmc
dec
jp
sbb
cltd
and
clc
inc
repz
mov
repz
sub
xchg
iret
mov
push
or
js
add
or
pop
cltd
mov
js
clc
cmp
arpl
scas
pop
jmp
add
popa
jg
mov
sbb
aad
mov
cmpsl
bnd
mov
leave
dec
movsl
cld
sbb
add
iret
sub
loopne
mov
push
sbb
fwait
rcrl
cmp
dec
xor
movsb
push
cld
mov
pop
jb
dec
xor
jae
in
xor
xor
jg
cli
xchg
jne
shll
shll
cmp
mov
outsl
mov
sbb
push
ss
pushl
jo
in
std
add
cmp
aaa
sub
aam
jl
xor
add
std
sbb
xchg
and
dec
cmp
std
aaa
xor
fimull
lahf
arpl
mov
sti
pop
sub
jge
xchg
cmp
push
lock
or
jp
jnp
loopne
call
xchg
or
pop
rolb
mov
enter
and
and
rcr
jbe
add
xor
or
pusha
pop
add
sub
ret
sbb
jns
or
and
fistpll
adcl
xlat
mov
sbb
xor
jns
lahf
repnz
clc
cld
adc
or
aaa
sbb
or
aas
js
sbb
pushf
ja
lock
cmp
jns
hlt
insb
xor
ss
repz
pushf
sbb
push
add
push
jle
sbb
push
or
adc
loopne
pushf
les
inc
das
insl
stos
test
or
cmp
xchg
push
jp
mov
fnsave
push
add
mov
lcall
jae
test
arpl
pop
push
lcall
cmpsl
mov
mov
xchg
popf
mov
jl
xor
inc
xchg
lock
pop
mov
int
fisttpl
mov
stc
orl
mulb
cmp
test
shl
mov
cmp
push
cld
pop
cmc
das
and
sub
dec
jno
in
xchg
orl
cmp
or
sbbl
cli
out
js
out
sbb
hlt
movsb
pushf
push
nop
cltd
jo
pop
jae
sbb
jno,pn
ja
push
jmp
xchg
sti
popf
std
sub
hlt
mov
mov
push
mov
jmp
and
cmpb
pop
aad
mov
lcall
iret
ss
cld
jge
push
or
add
cli
in
mov
adc
pop
inc
outsb
mov
sub
xchg
cmp
cmc
sub
rep
xor
loopne
mov
sub
inc
leave
cld
mov
gs
sti
sbb
dec
daa
inc
push
mov
mov
xchg
add
fildll
enter
jae
and
notb
mov
sub
cmp
jno
mov
add
nop
movsb
cmp
shlb
rcl
mov
push
jmp
negl
or
adc
inc
cmp
in
stc
sbb
xchg
fnstsw
adc
sub
xchg
pop
mov
sub
jmp
xor
jno
imul
xchg
mov
xor
push
int3
jecxz
pop
and
and
jmp
mov
repz
xor
mov
mov
sbb
push
shl
fcoml
mov
jbe
fsubrl
mov
add
or
pusha
xor
jae
cmpsl
xorl
inc
movsb
loope
pop
push
xchg
pushf
and
lds
ret
pop
in
push
xor
inc
repz
rol
int3
inc
cwtl
stc
test
dec
add
mov
sti
cmp
or
sub
inc
movsb
loopne
ret
and
push
hlt
addl
push
outsb
pusha
cld
pop
sbb
cli
inc
es
ja
mov
sbb
mov
in
jo
add
mov
sub
stc
mov
jae
mov
pop
outsb
mov
jle
addr16
jo
test
mov
lods
inc
fcomps
iret
jmp
sar
and
pushl
mov
out
cwtl
repz
xchg
insl
aam
xchg
xor
xchg
jg
add
cli
mov
or
jns
sub
das
pushf
xor
add
out
repnz
sahf
sarl
or
mov
ljmp
xlat
push
imul
lret
ja
dec
jmp
test
xor
popf
cmc
xor
je
pop
faddl
arpl
in
vsqrtps
xor
xor
call
cmp
xchg
ja
jmp
fnsave
arpl
aam
sti
mov
cmpl
je
mulb
lock
push
mov
pop
mov
mov
lock
pushf
mov
push
mov
int
jecxz
xchg
or
lahf
pop
addr16
mov
out
xlat
sti
add
cld
cmp
pop
lods
or
xor
dec
stc
mov
inc
inc
clc
mov
jl
jo
fcoms
or
stos
add
jmp
stos
add
fwait
push
sbbb
pop
or
adc
cli
add
push
leave
xchg
sub
push
roll
iret
add
push
cs
das
add
loope
pop
addl
leave
jge
xor
jne
jmp
and
or
dec
sti
cld
pop
inc
mov
pushf
enter
ret
or
push
sub
insb
jp
ss
sub
rol
mov
sbb
sti
jecxz
lods
jp
push
dec
rolb
or
idivl
imul
shl
inc
push
add
xchg
cmpsl
push
pop
xor
or
out
sbb
add
xor
test
cld
or
imul
sub
push
inc
and
ja
pop
hlt
dec
out
mov
mov
mov
sub
cmpsb
push
or
test
orl
mov
cmpsl
or
and
data16
inc
push
testl
mov
cmp
mov
adc
xchg
xor
push
pop
lock
mov
lods
cmp
insl
xchg
mov
pop
sub
sbb
call
stc
jg
ret
movsb
les
jae
neg
or
and
dec
and
cmp
pusha
or
sub
std
xor
movsb
loope
sahf
mov
push
popa
inc
or
fs
mov
int3
bnd
mov
cmp
jno
or
sub
mov
dec
lods
clc
mov
mov
testl
repz
cld
fsts
inc
movsb
and
lcall
inc
icebp
test
adc
fidivrl
sub
mov
mov
push
orb
mov
enter
or
call
xor
mov
dec
jl
cmp
inc
cmpsl
movsl
movl
push
cmp
das
lss
xchg
dec
cmpsb
xlat
cmc
nop
out
push
inc
add
jbe
test
adc
xor
adc
outsb
xchg
cmpsb
push
inc
ja
and
cld
psadbw
cmp
pop
fmull
xor
cmp
mov
push
sub
jns
or
mov
ficompl
push
repz
rcrl
jno
sbb
sbb
imul
fnstenv
mov
pop
cmp
cltd
push
add
aad
pop
sbb
scas
pop
mov
push
inc
aam
sbb
leave
cmc
push
sbbb
dec
es
push
cli
mov
mov
aaa
cli
jmp
adc
in
je
sub
mov
fisttps
cmpsb
mov
sar
dec
pop
adc
cmp
push
jle
ds
xor
mov
popa
sbb
sub
mov
jne
and
out
jge
pushf
inc
aaa
xchg
repz
loopne
dec
mov
inc
dec
mov
inc
jno
cmp
mov
xchg
fnstenv
loop
loopne
int
adc
add
push
andl
fsubs
int
ret
add
lcall
xor
mov
or
out
test
jnp
test
jno
adc
sarl
xchg
dec
sub
pop
or
je
dec
inc
insl
dec
jp
dec
roll
xor
jae
in
js
mov
fildll
bound
icebp
push
add
cmp
push
arpl
jb
xchg
fsts
or
push
cmpl
mov
mov
outsb
or
ljmp
xor
cld
xor
cmpsb
fstpt
xor
mov
cld
aaa
mov
xlat
sub
cltd
dec
stc
mov
mov
pop
popf
mov
sub
lods
jmp
imulb
cs
xor
inc
arpl
xor
jmp
popf
pop
lock
out
fistl
add
mov
pop
clc
nop
imul
or
pop
jne
ret
shr
jno
inc
lcall
shlb
addr16
div
jg
bnd
addl
in
sub
das
mov
push
ljmp
ds
xchg
push
dec
sti
mov
aam
mov
jp
jnp
pop
sbb
subl
mov
popf
test
in
mov
jbe
testb
imul
icebp
jbe
inc
testb
cmp
mov
gs
add
hlt
push
adc
cmpl
add
lahf
mov
lea
dec
out
fildl
mov
adc
or
fbstp
mov
inc
xchg
or
rcrb
sub
test
push
insl
add
xor
dec
fwait
loopne
sbb
js
pushf
jne
dec
sub
roll
stos
data16
xor
xor
dec
pop
lods
dec
cmpsl
or
lret
inc
orl
and
mov
pop
sub
add
in
aad
das
add
data16
dec
test
adc
ds
push
adc
xchg
xchg
repz
cmp
mov
sti
fxch
subl
sub
dec
jbe
repz
push
and
or
xor
sub
inc
out
stos
cmpsl
pop
fsubp
xor
inc
ja
add
mov
cmp
or
adc
sbb
cmc
jbe
inc
xchg
stc
sti
add
xchg
scas
roll
hlt
jnp
lea
mov
adc
mov
and
adc
divl
jbe
movsl
imul
out
hlt
cmp
mov
jo
outsl
ljmp
pop
decl
xchg
sbb
sub
and
ret
aas
clc
mov
add
aad
fs
adc
mov
or
jmp
cltd
jecxz
imul
lahf
pop
xchg
cli
outsl
icebp
mov
jp
or
push
mov
shl
push
out
fisttps
jp
or
xchg
xor
cmp
jns
mov
stc
in
adc
push
repz
repnz
dec
sbb
cmp
xchg
mov
out
cltd
xchg
sti
mov
cmp
stos
ret
or
adc
lret
mov
add
sarl
jle
mov
mov
push
jle
outsl
ds
cwtl
rol
rcrl
popa
ret
xorl
es
xor
mov
out
inc
sbb
sbb
adc
pop
test
nop
cmc
sub
push
stos
pop
jl
cwtl
js
shrb
in
mov
lds
cs
lahf
fsubrl
pop
test
dec
enter
ficomps
test
jmp
jg
jo
xchg
movsl
push
mov
lret
imulb
jnp
mov
fcmovnbe
pop
hlt
sub
cmpsb
test
add
mov
cmp
jl
hlt
inc
ret
and
xchg
xchg
add
pop
jecxz
nop
aas
mov
rcrb
mov
mov
ds
popa
push
jo
or
pop
mov
adc
jb
repz
xchg
sbb
loop
dec
mov
pusha
mov
sub
pop
orl
jno
pop
cmpsb
mov
sub
cmp
push
das
in
rol
sbb
xor
jns
jmp
pop
push
sub
sub
dec
jg
jmp
int3
sub
inc
pop
pusha
or
pop
popf
and
into
cmp
cmp
ret
push
out
inc
fbstp
lret
ds
or
inc
dec
jne
or
rcll
orl
jecxz
repnz
aas
aam
loopne
gs
std
pusha
cmp
scas
push
inc
jmp
jne
rcll
leave
mov
popf
sbb
cmp
sbb
or
and
nop
nop
adc
lods
scas
idiv
sub
dec
dec
adc
adc
adc
or
adc
insl
into
xor
test
cltd
aam
cli
push
adc
je
add
test
sub
jg
cmp
lcall
push
sarl
sbb
sbb
mov
push
jae
and
les
imul
cmpl
xor
js
or
add
sbb
dec
lret
outsb
pusha
je
sbb
movsb
lock
dec
cmp
cld
jge
popl
or
orl
and
add
and
xor
idivl
es
xor
pop
sub
mov
mov
sbb
adc
movsl
fisttpll
jne
xchg
mov
jo
sub
loopne
jbe
push
or
sbb
iret
pop
cmp
xlat
aam
stos
shlb
addr16
je
dec
xchg
ss
movsl
ret
jne
xchg
add
lock
push
jbe
neg
mov
pushf
adc
inc
inc
push
mov
and
cli
ds
adc
add
and
pop
loope
and
aad
cmp
out
mov
and
int
jge
fstpt
pop
jo
sahf
hlt
adc
idiv
sub
dec
dec
repz
pop
neg
xchg
rorb
out
and
loopne
cli
xor
xchg
sbb
sbb
aas
xor
add
cld
and
and
shlb
jb
pop
dec
mov
sub
mov
and
add
fidivrs
jae
rclb
sbb
repnz
mov
adc
mov
sti
dec
sbb
xor
inc
and
loope
test
fwait
bound
dec
pop
xchg
lock
pop
sbb
out
ret
shl
add
mov
xor
les
inc
movsb
js
push
cmp
inc
sbb
aaa
stc
sub
dec
cmc
mov
cmpsb
and
or
jp
cmp
add
mov
push
lret
imul
jo
shl
cwtl
push
xchg
inc
sbb
sar
and
in
icebp
mov
xchg
and
ja
mov
xchg
or
and
dec
xor
adc
test
repnz
cmp
call
leave
nop
mov
enter
sti
pop
mov
add
adc
shll
pusha
scas
insb
ret
stc
sub
popf
mov
jo
movsb
cmpsb
scas
loop
jnp
jns
sbb
test
std
push
cli
stc
insl
shll
mov
aas
imul
aaa
jg
bound
jno
jbe
fsubl
test
cmp
push
sub
mov
xor
xor
sbb
sub
ss
js
sbb
sub
scas
adc
insb
and
data16
int
daa
pusha
or
jg
add
out
push
mov
dec
lock
mov
cmp
inc
sub
adc
push
repz
dec
ret
subb
gs
xor
out
out
movsb
inc
pop
or
push
aad
out
lock
nop
sub
dec
mov
fadds
or
sub
push
sahf
sbb
dec
add
dec
cmp
lret
pop
mov
push
lret
lods
lea
mov
addl
adc
sub
mov
pop
into
mov
leave
or
push
dec
xor
cltd
test
pop
cmp
sub
mov
xor
outsb
into
mov
cmp
sbb
sub
aam
sub
mov
pushl
sti
jp
push
adc
mov
rcrb
adc
mov
aas
fnstenv
test
movsl
jle
rorb
das
repnz
xlat
jno
pop
sub
mov
sub
cld
or
mov
rcll
dec
rclb
repz
push
sbb
mov
mov
or
aad
push
sarl
xchg
call
out
clc
das
adc
push
jb
leave
xor
sbb
adcl
sbb
loopne
sahf
add
push
clc
loope
xchg
push
stos
dec
mov
inc
pop
pop
hlt
adc
push
pop
xchg
lock
push
lcall
lock
cmp
xor
mov
fmul
push
or
or
pushf
mov
rclb
fwait
sbb
add
hlt
pop
bound
mov
xchg
testb
shrb
enter
jo
ja
add
or
jmp
data16
enter
lds
inc
dec
loop
int
stos
fwait
ss
dec
push
mov
sub
mov
push
or
cmc
xor
dec
aas
sbb
mov
cld
or
push
ja
push
fidivl
test
cmp
mov
sub
cmp
and
and
fistpl
leave
fstpt
aam
mov
test
jne
xor
push
sbb
dec
cmpsl
out
loop
cmp
add
add
repz
xor
adc
or
sub
or
add
sti
into
sbb
jmp
shrb
adc
nop
xchg
or
sbb
mov
pop
sub
jno
testl
adc
adc
sahf
and
xor
lods
add
sub
lret
call
rolb
stos
push
or
inc
out
jb
sub
mov
or
dec
test
xchg
pushf
ret
rclb
mov
pop
notl
ret
lock
shrb
or
lock
scas
mov
or
dec
popa
negl
repz
js
dec
lods
mov
lcall
or
das
sbb
andl
inc
popa
mov
mov
icebp
xor
lidtl
dec
jo
mov
and
insl
leave
cltd
add
test
cmp
xor
pop
clc
js
xor
xor
lock
lahf
jno
cmp
mov
sub
cmp
adc
jne
adc
inc
stc
je
sbb
cltd
push
orl
add
and
push
imul
cli
cmp
jmp
xor
add
mov
das
xor
sti
cld
xor
mov
inc
and
test
and
pop
add
adc
mov
dec
jo
in
xchg
hlt
sub
and
mov
leave
jecxz
pop
jae
sbb
xchg
js
inc
and
mov
xor
jmp
hlt
pop
dec
rcl
sub
sahf
jno
cmp
add
fwait
adcb
fisttpl
ja
xchg
or
jge
push
and
or
fs
loop
jae
pop
jg
or
inc
xor
sbb
xorl
ljmp
xchg
adc
push
dec
xor
movsl
push
push
lock
inc
lret
in
lcall
xchg
pop
jle
dec
push
repz
stos
pop
into
cmp
push
sub
ds
sti
cmc
jno
mov
scas
popf
dec
add
or
xchg
dec
xor
and
cwtl
cwtl
mov
pop
fsub
cs
nop
mov
out
dec
push
cwtl
xchg
test
mov
sub
mov
pop
lahf
mov
ror
or
sub
or
lock
sbb
xchg
xor
movsl
insb
int3
jp
aam
mov
adc
push
ja
fwait
jno
add
popa
nop
int
jecxz
push
inc
xlat
out
test
lea
jecxz
adc
mov
xor
lret
loopne
jns
adcb
hlt
or
cld
push
xor
mov
xor
fs
in
xor
in
jge
push
enter
xor
jg
test
add
enter
outsb
mov
aaa
fwait
jl
in
and
out
sbb
int
add
or
fbld
stc
jbe
js
or
xor
jne
imul
idivb
test
and
out
loop
xchg
div
inc
and
mov
jge
sbb
es
sarb
jae
xchg
sti
and
aaa
cmp
fidivl
nop
mov
mov
push
dec
sbb
jmp
pop
addb
add
dec
popa
movsl
cmp
sbb
add
aaa
xchg
stos
cmp
daa
add
push
ljmp
cwtl
jp
repnz
mov
xchg
enter
lock
inc
dec
aam
outsb
xor
dec
sti
and
jbe
pushf
cmp
jle
jl
add
add
sti
roll
jb
jb
jle
jo
je
pop
pushl
in
pop
or
mov
andl
push
insb
out
xor
inc
pushf
rclb
lcall
pop
into
ficoms
fstl
or
jb
jmp
sbb
or
mov
mov
xorl
mov
jbe
ror
cli
mov
push
insb
inc
adc
adc
outsl
sub
add
sbb
and
fsts
xor
repz
repz
repz
mov
mov
mov
repz
xor
cwtl
jbe
mov
jecxz
jne
jg
scas
notl
lock
dec
sub
sbb
cmp
adc
popf
mov
aam
and
cmp
lret
mov
inc
pop
push
xor
adc
sbb
pop
std
fwait
ret
jg
xchg
add
fadds
cmp
push
out
sarb
js
inc
test
xor
aas
push
pop
add
scas
add
cld
jecxz
or
xchg
pop
incl
jae
lock
mov
daa
and
mov
or
jecxz
push
mov
lahf
test
pop
pop
inc
js
popf
mov
push
pop
mov
dec
shlb
inc
rorb
pop
mov
cmp
push
jns
out
pop
lds
pop
cld
pop
push
sbb
test
add
shlb
dec
mov
or
addr16
outsl
inc
or
cmc
arpl
cwtl
xchg
popw
mov
cs
and
adc
push
cli
cmp
adc
hlt
xlat
mov
nop
xchg
cwtl
ret
arpl
dec
jb
jb
ja
aad
scas
mov
add
daa
leave
sbb
rcl
adc
dec
mov
inc
repz
scas
in
hlt
jns
xchg
rol
inc
push
fldcw
jmp
or
xchg
div
mov
cmc
cld
inc
pop
cltd
das
adc
cmp
cli
or
cld
aaa
out
addl
adc
jmp
or
int3
cli
nop
mov
dec
cmovbe
sbb
popa
movsb
cld
xchg
xor
cwtl
bound
xchg
add
cld
mov
xchg
cmp
dec
in
lods
les
push
or
sub
je
fwait
add
and
inc
mov
mov
mov
cmc
add
mov
in
mov
mov
repnz
pop
push
mov
lods
inc
or
and
dec
mov
adc
movsb
mov
rcrl
mov
adc
out
xchg
jp
popa
mov
stos
cld
add
addl
and
nop
sbb
push
cltd
jge
pop
or
or
test
loope
adcb
popf
loopne
xor
inc
xor
shlb
and
mov
cmp
adc
push
mov
sub
mov
enter
add
jae
les
mov
xchg
mov
pushl
out
rclb
sub
push
jae
in
jecxz
js
mov
push
inc
add
push
mov
mov
cmp
add
xor
scas
adc
mov
pop
xchg
or
dec
cwtl
lods
xchg
sub
popf
pop
or
fs
pop
jb
mov
inc
das
sbb
sub
or
outsb
addl
push
and
sbb
mov
shrb
and
inc
xor
les
dec
mov
jl
push
mov
and
dec
dec
orb
add
inc
repz
jmp
sub
sbb
mov
cmc
push
mov
add
sbbb
adc
icebp
inc
cmp
adc
nop
inc
fdivrl
jge
and
xchg
mov
cmp
rorb
xchg
or
and
sti
outsb
cld
add
aas
mov
and
test
aam
sub
xchg
inc
hlt
and
sub
stos
loop
mov
or
aad
pusha
push
xor
dec
cld
sub
add
inc
es
cmovo
cwtl
fwait
pop
add
jae
push
adc
jns
movsl
jge
sti
dec
jnp
cld
leave
jae
lock
pop
aam
cwtl
xor
pusha
icebp
sub
xchg
push
push
mov
dec
mov
adc
out
fnstsw
sub
dec
ja
mov
out
dec
add
inc
sub
push
lcall
inc
sub
roll
sti
sub
xor
or
pusha
out
dec
loopne
in
dec
inc
lds
ljmp
xor
fldcw
test
sahf
repz
sub
icebp
faddp
cmp
mov
xor
push
jo
cwtl
daa
cmp
add
clc
clc
or
dec
push
mov
mov
lret
cmp
fs
mov
lret
inc
and
inc
push
jmp
sbb
mov
push
cmp
out
pop
add
jecxz
fdivp
fistl
pop
fdivl
mov
add
mov
adc
or
mov
dec
push
xchg
out
pushf
scas
pop
stc
insl
xchg
xlat
adc
lock
addl
sub
cmp
adc
sti
cmc
iret
into
shlb
or
xchg
inc
jo
mov
inc
sub
hlt
ja
cmp
out
xor
inc
movsl
out
aam
sub
mov
xchg
add
divb
fldenv
jp
cmp
fiadds
jnp
mov
cwtl
add
xor
scas
js
pop
incb
or
sub
push
push
nop
inc
scas
adc
sub
ja
inc
into
pop
xchg
mov
pusha
mov
addr16
jne
sub
and
pop
mov
or
adc
mov
pop
push
pop
into
push
add
xchg
cmp
xchg
push
adc
int
cmpsl
popa
out
jle
adc
cld
mov
cmpb
xor
pop
jae
push
jg
adc
xchg
pop
popa
and
stc
repz
pop
mov
sub
clc
les
xor
push
sar
loop
aaa
add
mov
sub
sahf
jno
daa
mov
hlt
add
jb
data16
add
mov
loop
cs
mov
aam
xor
cmp
mov
adc
push
and
outsb
lds
jb
adcl
minps
and
jle
or
leave
or
movsl
std
orl
xor
push
pop
xor
or
adc
popa
xor
popa
xchg
es
sub
push
sbb
cmp
cmc
lock
xor
sub
adc
aaa
imul
cld
sub
jae
jge
sbb
mov
hlt
jg
shrb
inc
adc
jl
and
mov
sub
add
sbb
dec
adc
fistl
daa
inc
dec
dec
add
sete
sub
mov
clc
sbb
setle
nop
es
shl
jo
aam
xchg
inc
cmp
sub
inc
lret
repz
loop
fstpt
or
mov
jg
rolb
mov
pop
fidivrs
and
sbb
xor
popa
push
imul
xchg
lock
jl
aam
mov
stc
sub
dec
inc
mov
bound
cmp
pop
jne
imull
out
mov
je
addr16
das
decl
push
add
cld
ud1
cltd
xchg
inc
adc
js
jmp
mov
insl
push
stc
mov
ja
push
test
in
into
sti
or
sub
loop
xchg
cmc
fs
roll
loop
je
stc
pop
inc
imul
pop
or
testl
xadd
sub
ljmp
icebp
lock
call
and
adc
push
cli
lcall
out
jnp
lahf
and
or
imul
sti
sti
mov
add
mov
loop
and
hlt
push
not
flds
enter
add
mov
inc
mov
clc
adc
add
pop
xchg
div
sbb
add
sbb
lock
pop
cmpsl
lea
imull
jge
mov
xchg
sub
push
and
pop
mov
movsb
add
and
mov
adc
leave
aam
mov
inc
jo
jae
add
mov
popa
mov
shrl
cli
add
pop
jne
jb
sbb
or
lret
jp
mov
or
fisubrl
pop
mov
decl
cmpsl
xchg
adc
loop
adcl
adc
lods
sar
bound
lods
movsb
jne
movsl
les
jb
or
fwait
and
dec
into
outsb
adcb
dec
xor
dec
fldenv
inc
testl
xor
xchg
add
pop
outsl
lret
push
inc
dec
repnz
jae
or
xor
orl
aad
ja
fst
outsl
andb
mov
mov
ret
dec
cwtl
invd
adc
repnz
xchg
in
imul
inc
push
dec
adc
jnp
hlt
inc
stc
insl
push
cmp
andl
pushl
arpl
cmc
or
pop
pop
loopne
pop
frstor
jl
repz
jl
fwait
cmp
mov
adc
cmp
loopne
add
cmp
and
cmp
and
out
xlat
ret
mov
dec
js
mov
jo
or
sti
xchg
sub
in
adc
out
mov
push
pop
adc
js
rcr
mov
iret
cmc
negl
int3
mov
pop
mov
xor
and
jb
notl
cmpsl
cmc
repz
mov
or
fwait
mov
data16
adc
xchg
push
pop
rolb
mov
mov
adc
pop
pop
add
jae
leave
add
xchg
lods
ja
addl
into
inc
mov
movsb
pop
xchg
cld
mov
js
sub
or
cmp
dec
jge
or
xlat
and
and
adc
std
and
dec
icebp
out
dec
push
je
sub
rcrb
movsb
rep
push
push
mulb
or
xor
lods
mov
frstor
add
add
mov
ret
xor
test
inc
aam
dec
push
cmpsb
clc
repz
ljmp
push
push
adc
add
sub
jb
fidivrl
jno
lock
mov
iret
cwtl
mov
xchg
pop
js
emms
or
or
mov
scas
fidivrs
xor
pop
cmp
sub
add
xor
sub
inc
nop
jl
and
pushl
mov
insl
fadds
add
inc
test
cli
pusha
mov
mov
dec
cld
test
mov
pop
fidivl
std
xchg
popf
jle
mov
mov
rol
mov
add
sbb
and
lret
xor
incl
adc
iret
cmpsb
jg
push
jb
dec
in
jl
push
or
lea
stos
cltd
mov
scas
stos
jge
xchg
xchg
push
and
xchg
sub
icebp
pushf
push
sub
pushf
xchg
cmp
push
xor
out
scas
mov
lret
cmpsl
xchg
jno
insl
inc
andl
sbb
cmpsb
mov
xor
nop
xchg
in
lcall
dec
sub
test
jo
dec
cli
pop
fists
cmp
mov
outsb
cmp
leave
bound
loop
inc
xor
cmpsl
jnp
movsb
xchg
inc
test
or
jo
mov
cmp
sbb
fdiv
pop
mov
add
inc
enter
lret
cmp
mov
into
xchg
jae
sub
jae
cmp
lods
jbe
inc
mov
or
repz
repz
xchg
es
mov
cmp
push
icebp
adc
dec
pop
inc
pop
int
pop
mov
jae
testb
stc
lods
mov
iret
out
cwtl
jne
jecxz
or
add
adc
mov
lahf
mov
in
pop
popf
sbb
mov
ret
in
add
adc
mov
outsl
fildl
hlt
pop
dec
mov
xchg
addb
inc
test
jo
nop
mov
popa
and
xlat
and
mov
hlt
cmp
inc
adc
mov
mov
mov
fdivr
out
aaa
daa
pop
sub
jp
xor
inc
mov
adc
sbb
add
sub
xchg
fwait
xchg
mov
lret
add
in
mov
ja
dec
stos
nop
popa
mov
fcmovne
xor
pop
sti
fiaddl
cmp
xchg
mov
ret
out
adc
leave
imull
cld
ds
dec
add
out
adc
jne
jp
cmp
notl
dec
out
lock
cmpsl
imul
xor
fwait
jnp
mov
movsb
data16
imulb
fisubrl
mov
jb
pop
push
jnp
cmp
clc
fs
mov
adc
dec
stc
outsb
add
sub
cmc
cmp
sahf
icebp
in
xor
sti
sbb
mov
mov
testl
movsb
jmp
dec
pusha
adc
in
paddusb
cwtl
jne
sti
lahf
mov
and
mov
scas
dec
fistl
push
adc
out
inc
incl
inc
rcrl
xchg
jmp
imulb
test
rcl
sbb
cmp
pop
jnp
loop
mov
push
idivl
or
cmp
mov
sbbl
out
add
adc
xor
rorl
mov
mov
sub
nop
sub
test
add
or
pop
add
lret
aas
push
xor
xor
lea
sbb
or
imul
loope
push
cld
fwait
push
sbb
or
push
jne
and
stos
int
sub
repz
sti
cld
mov
sub
enter
scas
jge
js
rcll
test
pop
ss
pusha
int
jbe
and
aas
fldt
sub
adc
add
sbb
sub
cmpsl
sbb
xchg
incb
int3
lret
push
jecxz
mov
clc
jbe
pusha
es
test
cmp
ret
cmp
mov
cmp
add
sbb
iret
adc
lret
je
and
xlat
xchg
add
push
mov
outsb
pop
cmp
push
pop
mov
mov
loop
jb
or
lock
repnz
lret
jns
push
or
pop
xor
loop
addl
inc
insl
add
add
xor
and
pop
loop
push
jno
cmp
les
and
jnp
out
cs
push
or
mov
push
lds
inc
or
add
ljmp
dec
xchg
sub
adc
push
ret
dec
adc
add
movsl
and
test
call
cli
div
inc
add
mov
jne
adc
ret
pushf
jp
push
add
stos
out
pop
dec
pushf
inc
xor
cli
out
cld
jne
sbb
loopne
xchg
movsb
push
sbb
xchg
mov
cltd
jne
and
mov
push
pop
fisttpl
out
mov
push
cmp
mov
daa
out
cmp
dec
cmpsl
sub
outsb
in
pushf
and
movsb
cld
jns
inc
jno
sti
orl
sbb
enter
fistpl
je
xchg
fdivs
cld
jb
add
dec
push
xor
clc
jns
loop
adc
mov
or
shll
pop
ja
and
mov
jp
cld
mov
loop
add
sub
clc
or
adc
xchg
cld
mov
pop
dec
subl
jb
ljmp
je
jl
jl
inc
push
inc
pop
in
sbb
divb
mov
movsl
mov
cmpsl
add
ds
stc
fidivrl
lock
cld
ljmp
aad
pop
shl
sarl
xchg
cmpl
xchg
ds
gs
icebp
das
cmp
test
ret
pop
xchg
ds
cwtl
aas
cmc
jl
jp
int3
sti
inc
cmp
test
push
jl
into
cli
ret
loop
in
dec
cwtl
js
leave
test
cld
mov
mov
and
jp
hlt
xor
loop
mov
pop
or
ljmp
or
xor
mov
mov
daa
or
mov
testb
clc
dec
adc
ret
stos
or
leave
lock
jne
popa
jno
pop
sahf
pusha
nop
dec
out
and
lea
hlt
cld
leave
push
xor
or
shll
sarb
bound
and
lea
pop
xlat
add
xor
ds
loope
inc
mov
rclb
adc
icebp
mov
push
or
pushf
sub
lret
test
fstps
push
cmpsb
scas
fstpl
jmp
cmp
cli
jbe
mov
sbb
mov
and
loopne
sbb
pushf
jae
and
push
add
cld
jmp
mov
sub
dec
push
insl
xchg
cmp
jno
push
iret
dec
jg
sub
sub
outsb
jno
out
lcall
inc
inc
sub
inc
outsb
xlat
xor
stc
sub
adc
in
inc
dec
lcall
sub
pusha
ja
and
sti
dec
add
mov
dec
gs
mov
mov
add
adc
xchg
xchg
fimull
fwait
xchg
dec
or
push
sub
iret
adc
cmp
and
xchg
or
dec
into
dec
push
inc
ja,pn
hlt
xor
iret
aad
jae
dec
iret
pop
mov
add
decl
pop
xchg
add
mov
adc
and
rclb
push
out
dec
mov
adc
inc
inc
jbe
jg
xor
int
es
mov
out
loopne
pop
sti
adc
out
aam
repz
sti
sub
cli
jge
cmp
adcb
addr16
movsl
hlt
push
adc
dec
adc
jae
pop
cmpsl
fs
mov
adc
xchg
jns
push
mov
dec
adc
push
int3
cli
in
popl
xchg
xor
into
or
cmp
lcallw
mov
loope
rol
insb
jns,pn
sub
stc
add
or
gs
fstps
lret
push
test
cmpsl
push
xorl
push
loop
inc
pmulhuw
lock
scas
adc
adc
rclb
pop
xchg
cmp
or
xor
sub
mov
xchg
dec
pushf
int
xchg
cld
jnp
cmp
cli
adc
sbb
jns
ret
push
cld
fsts
jbe
test
cwtl
or
cmp
jp
mov
out
xor
dec
pop
cli
dec
and
notb
sub
insb
in
pop
jae
arpl
out
jle
push
shrb
loop
in
repnz
add
shlb
fnstsw
data16
add
push
int3
fists
push
jecxz
rcrl
push
and
inc
cmpsb
sbb
clc
sub
lods
out
sub
lret
jbe
mov
mov
mov
mov
jmp
jmp
push
adc
popa
subl
movsl
xor
pop
aam
sbb
out
int
icebp
sub
dec
push
pop
jmp
push
adc
mov
rcll
inc
and
mov
in
adc
mov
imul
call
leave
push
imul
mov
jns
scas
or
or
and
push
sub
sub
or
mov
sub
inc
adcl
sub
lahf
xchg
add
cld
sub
hlt
xchg
sub
sbb
leave
dec
xor
lea
xchg
pop
xor
test
mov
ficoml
xor
add
push
imul
fidivrl
pop
and
jno
gs
jecxz
sti
inc
mov
not
lods
scas
movsb
add
arpl
inc
inc
stc
sub
decb
push
or
jne
sub
les
adc
jp
jp
and
xor
ljmp
add
iret
fsts
std
nop
xor
push
and
sub
cltd
lock
mov
nop
addl
ja
inc
push
mov
and
lock
sub
into
mov
jns
cmpsl
or
aaa
xchg
pop
sub
call
dec
nop
cld
fs
aaa
out
adc
pop
inc
sbb
xchg
out
push
stc
mov
mov
cmp
popa
dec
insb
lods
adc
add
pop
leave
mov
test
push
adc
xor
shll
mov
psraw
jle
and
pop
pop
shlb
scas
sbb
jb
mov
xchg
mov
pop
xor
clc
mov
cmp
add
sub
adc
enter
ds
fwait
test
sbb
cltd
fs
jae
inc
push
push
cmpl
hlt
pop
arpl
outsl
mov
dec
into
sub
aad
aam
ss
push
outsb
adc
push
cld
sbb
xor
dec
dec
dec
inc
adc
sub
inc
and
std
stc
add
cmp
insl
cli
sub
adc
sbb
and
adc
push
add
push
fcompl
lea
js
xor
mov
xor
mov
fidivrl
jge
mov
add
out
lahf
and
scas
mov
xlat
ret
jecxz
in
push
rorb
outsb
xchg
movsb
mov
cld
loopne
hlt
cld
mov
adc
lcall
mov
loop
sub
imul
sub
ret
test
and
into
stos
daa
ror
psllq
jb
sti
sbb
sahf
cmc
and
in
mov
add
jl
mov
adc
dec
lret
jo
pop
or
push
xchg
pop
xchg
sub
jp
add
mov
mov
or
or
sub
cld
faddl
pop
mov
add
push
mov
arpl
add
push
dec
xor
dec
in
mov
cmpsb
cld
xchg
lods
ss
cmp
jge
lret
jnp
inc
xchg
jbe
clc
scas
mov
sbb
jae
and
and
xor
repz
icebp
daa
imul
pop
mov
js
add
bound
cld
test
or
mov
popf
divl
add
push
add
lock
int3
test
rcl
pop
mov
lahf
mov
xor
sub
mov
subl
popa
sub
xchg
ret
clc
shl
decb
sbb
mov
das
xor
lcall
call
pop
stos
sbb
jecxz
movsb
negl
int3
add
pop
sahf
fs
dec
icebp
mov
das
dec
mov
and
out
movsb
add
pop
aad
add
or
subb
orb
stos
fdivrl
jns
or
jle
cmp
or
jp
inc
mov
and
int
jb
sub
xchg
fcompl
mov
ret
test
lcall
fucomi
or
insb
lret
fcoml
cld
das
inc
shl
jp
mov
decl
xchg
or
mov
or
js
sub
add
pop
stc
lods
add
jns
test
hlt
and
rclb
mov
int
out
inc
xor
daa
mov
shlb
test
ret
sub
fstps
and
and
mov
xchg
jne
inc
jp
popa
xchg
push
sub
cld
add
loop
inc
mov
jg
repnz
cmp
sub
sub
in
lock
or
cs
dec
xor
cmp
icebp
pushf
push
push
fwait
jo
push
test
aad
js
in
pusha
mov
outsb
popa
adc
movhps
adc
add
jo
insl
outsb
xchg
enter
dec
or
cld
mov
bound
mov
icebp
cmp
aad
cwtl
sbb
and
lods
mov
lcall
or
sbb
in
loop
mov
bound
pop
ret
jmp
rcrb
cld
stos
fwait
out
pop
cmp
jo
or
mov
aaa
aas
xor
das
dec
or
adc
mov
cwtl
lcall
test
jo
jmp
add
arpl
int3
sub
in
pop
pop
aas
data16
inc
add
pop
not
popa
into
push
in
xchg
mov
stos
xchg
mov
scas
or
pop
adc
aaa
mov
cwtl
or
lock
jecxz
xor
shrb
cld
fbstp
sub
out
add
jne
pop
sbbb
icebp
push
loopne
xchg
sub
into
push
push
popf
cmp
sub
and
sbb
mov
cmpsl
xchg
push
mov
push
fcoms
mov
pusha
sbb
out
leave
into
lods
pop
jnp
and
adc
aam
mov
mov
ret
adc
addr16
outsb
jns
out
sarb
aas
cli
shrb
sub
out
dec
mov
mov
aam
test
out
ja
and
in
fcomi
inc
shr
lcall
cli
xor
sbb
push
test
push
and
pop
addl
and
into
sbb
ja
sbb
pop
out
fisttpl
cmp
xor
or
test
xchg
pusha
stos
pop
add
pop
je
stc
decl
into
add
icebp
adc
movsb
push
inc
test
dec
cmc
mov
shll
adc
ret
lcall
addr16
cmc
cmp
or
es
sarb
push
inc
aaa
jo
mov
pop
test
xchg
jg
and
shrl
sbb
cmp
lcall
sub
ss
adc
xor
ja
mov
popf
jno
jb
sub
jno
sbbw
test
xchg
or
lds
jne
cld
adc
cmpsb
sub
adc
ss
imulb
add
mov
xchg
inc
or
xor
int
sbbl
push
imul
push
testl
mov
sub
sbb
and
stc
leave
xor
sub
or
enter
stos
sbb
fcomps
ss
ret
sub
mov
mov
cmp
pop
jp
mov
push
rcr
movsl
outsb
xchg
add
push
out
insl
xchg
adc
inc
fisubrs
push
and
inc
movsl
xchg
clc
outsl
xchg
xor
mov
dec
xchg
inc
xchg
out
sub
ret
xor
sbb
outsl
int
sub
dec
push
rorb
sub
sub
jbe
shll
xchg
and
add
cld
jno
sub
mov
adc
mov
ret
hlt
lea
dec
mov
addr16
jb
jecxz
inc
popf
inc
pop
cli
jno
jne
sbb
xchg
out
sbb
fidivs
lea
dec
das
daa
andb
or
pop
push
pushf
or
je
insl
inc
xlat
cmp
mov
lock
pop
add
je
mov
out
push
les
sub
dec
shll
loop
pop
dec
push
fldl
cmc
and
lret
andb
pop
mov
or
popa
adc
sub
aad
or
insl
imul
add
sbb
in
pop
sti
in
lods
or
jbe
xchg
jg
rcll
lahf
pop
enter
cld
out
or
add
ret
jl
loope
movsb
fdivs
push
and
addb
cmc
inc
sbb
or
out
adc
sub
dec
je
or
hlt
aad
mov
repz
cmp
inc
cli
jp
cmp
addr16
push
dec
mov
sbb
daa
fs
inc
add
aad
bound
or
jo
fsub
push
pop
jno
sbb
add
repnz
jmp
sub
sti
or
cmp
daa
push
sub
pushf
insl
ja
mov
dec
in
add
lahf
add
xor
js
subb
cmp
mov
aad
lea
or
cmp
dec
cmc
add
jmp
call
pop
notl
mov
js
push
sbb
and
push
cmp
jp
dec
cmp
or
add
aad
gs
sbb
inc
jne
mov
daa
in
addb
mov
incb
pop
mov
inc
movsb
xlat
dec
lret
xor
mov
jl
shll
xchg
cmp
inc
lcall
inc
jg
js
rorb
and
mov
adcl
xor
nop
mov
add
dec
push
sub
aas
mov
cmp
mov
fstps
pushf
inc
dec
cmp
xor
clc
jp
aam
and
xchg
test
movsl
and
pop
lcall
les
or
push
pop
insb
add
add
shrl
sub
cld
mov
sub
xor
cld
or
mov
xor
enter
aad
sar
sub
scas
mov
jmp
inc
xchg
ds
aad
aas
pop
pop
dec
or
mov
das
xchg
inc
mov
clc
push
adc
shrd
push
jno
mov
dec
lds
or
fucomi
push
loop
sub
jae
sub
mov
jp
push
adc
and
jns
xchg
out
mov
sbb
or
jle
cld
push
test
mov
sbb
movsl
shll
insb
dec
hlt
fidivl
adc
cmp
add
add
bound
inc
jne
iret
stos
cmp
add
pop
or
add
cmpsl
inc
xchg
pop
clc
pop
or
test
add
mov
int3
adc
mov
pop
mull
sti
test
jno
push
or
mov
adc
je
insl
mov
jne
das
lcall
mov
repnz
and
lock
and
and
popf
adc
push
pop
mov
scas
ds
xchg
imul
sbb
mov
mov
add
mov
mov
hlt
lock
lods
mov
fwait
add
cld
mov
aas
xor
ljmp
xor
repz
inc
bound
and
test
push
inc
into
xchg
dec
aas
sub
test
xchg
aam
pop
int
mov
jo
cmpsl
xchg
imul
dec
fiadds
iret
add
jb
ret
mov
stos
icebp
ss
inc
xor
in
ss
sti
push
xchg
push
cmp
lds
testl
mov
or
lods
daa
push
fcomi
mov
sub
movq
andps
xor
sti
push
jae
aaa
loop
sbb
jl
in
stc
aas
ss
icebp
in
jle
add
dec
jnp,pt
ljmp
dec
xchg
dec
movl
jp
mov
add
xchg
mov
call
push
ja
aaa
inc
inc
fprem1
mov
sub
mov
jl
mov
clc
pop
pop
push
out
hlt
es
cli
sbb
aaa
out
jne
notl
sub
or
xchg
aam
dec
sbb
rcr
xor
or
je
filds
or
mov
push
aam
cli
and
dec
lea
insl
inc
shll
xor
or
mov
roll
push
adc
fidivrl
jns
cmp
cmpsb
sub
daa
inc
adc
pushl
inc
sbb
cmp
mov
test
jecxz
popa
rcrl
cwtl
lock
repz
or
jg
jle
adc
pop
xchg
sti
sub
pushf
and
dec
dec
sbb
cltd
hlt
stos
sbb
push
add
sbb
out
shlb
in
dec
add
in
sub
fcom
push
mov
or
fidivl
pusha
jne
add
pop
stc
push
lret
add
xor
out
in
sti
sub
jbe
jmp
mov
sbb
out
cmpsb
icebp
pusha
mov
cmpl
or
sub
cmp
jne
nop
jae
mov
stc
js
adc
push
lcall
jne
mov
or
pop
stc
jbe
mov
int
fimuls
orl
lcall
jne
mov
jb
sbb
jmp
xor
xor
mov
cmc
push
cli
add
or
mov
test
pop
hlt
push
jo
mov
in
mov
mov
push
sub
jo
lods
and
pop
push
loope
sbb
jmp
mov
xchg
insl
push
stc
into
ret
mov
fcmove
push
fiaddl
std
add
mov
dec
ret
xor
cld
and
cld
dec
mov
arpl
rolb
rolb
mov
add
in
cmp
loop
pop
xor
mov
push
add
repnz
imul
pop
push
insb
jno
push
push
in
and
mov
loop
cmc
adc
adc
hlt
rcr
test
push
dec
insl
cmc
or
cmp
jns
cmc
mov
hlt
add
pop
test
push
mov
xchg
in
push
dec
sub
sub
xor
imul
ds
add
xchg
and
scas
xchg
adc
cltd
sti
xlat
fists
push
xor
jno
inc
cmp
mov
mov
leave
xchg
mov
xchg
jo
jp
pop
add
push
dec
sbb
mov
montmul
cmpsb
xorb
in
cli
into
mov
jo
pop
mov
shrb
aam
jo
cltd
cwtl
jne
sub
lock
adc
repz
imul
cld
ljmp
pop
sub
test
sub
pop
push
cmp
nop
insb
sub
subl
jo
mov
lahf
aad
push
inc
loop
push
mov
mov
add
mov
dec
pushaw
push
outsl
lcall
pop
pop
das
sub
adc
sub
xor
pop
pusha
cmp
unpckhps
inc
xchg
lods
cmp
inc
pop
aad
xor
and
cmp
clc
add
in
fcomps
fisubrs
arpl
flds
mov
shll
push
push
inc
cld
pop
popa
add
pop
sub
loop
push
xor
out
mov
popa
sbb
mov
add
push
stc
mov
mov
xor
pop
cmp
clc
out
push
push
pop
push
out
aam
andb
dec
mov
stos
test
repz
hlt
sti
pop
xchg
xor
sarb
daa
add
and
jp
push
xor
cmp
nop
cmc
loope
xorl
cmp
repz
inc
xor
xchg
pusha
mov
xchg
jb
decb
jecxz
mov
movsl
cmp
aam
or
xchg
repnz
sub
push
shl
in
out
std
inc
xchg
sub
jo
pop
fistpl
test
dec
cmp
loopne
inc
adc
inc
push
xchg
repz
jmp
andl
sub
sbb
std
jo
mov
cmp
frstor
cmp
xchg
push
pop
mov
add
or
push
dec
lods
aaa
add
cltd
loope
je
mov
clc
jno
cli
sub
mov
jb
and
dec
mov
and
xor
mov
cld
mov
push
dec
push
es
into
pop
dec
and
mov
fwait
insb
cltd
repnz
xchg
addr16
outsl
cmp
mov
mov
push
cld
or
pop
push
or
mov
add
pop
cmpl
sub
jp
test
dec
popf
rolb
cltd
dec
dec
add
dec
out
addr16
xchg
cld
dec
cmp
fidivrs
cs
xor
in
ja
lret
iret
inc
hlt
push
pop
xor
mov
out
out
scas
jp
cmpsl
push
aas
test
xor
jl
cmpsb
adc
outsl
cmp
jnp
pop
popa
rorb
cltd
jns
or
mov
iret
cs
add
ljmp
push
stc
arpl
sub
sub
daa
mov
mov
scas
push
push
adc
xchg
in
leave
lods
mov
in
std
inc
adc
lods
mov
and
xchg
mov
lret
sarl
sbb
push
sti
std
cmp
lret
xor
or
sbb
inc
sahf
inc
rorl
jg
cmp
push
movb
fwait
adc
fcomps
or
cmpsl
xchg
lret
fdivrs
add
dec
mov
dec
push
jmp
or
roll
or
sarb
mov
popa
dec
jae
jp
sbb
mov
insl
sar
fcoml
mov
not
test
jnp
jb
inc
sbb
inc
cmp
out
dec
add
aad
mov
lea
iret
test
mov
jge
adc
lcall
jns
adc
fcmovu
subl
add
hlt
push
dec
or
add
xor
mov
int
mov
xchg
xchg
test
jb
cwtl
add
pop
call
ljmp
xorb
repnz
movsb
mull
xchg
push
scas
nop
test
outsl
xchg
lds
pusha
jg
or
cmp
jl
jno,pn
adc
inc
andb
testb
cmp
add
add
loopne
fiadds
jo
cld
ss
sub
jp
cmp
int3
push
adc
roll
mov
and
add
call
xchg
push
mov
imul
and
adc
aas
enter
or
xor
push
les
in
sub
mov
mov
and
lock
sub
stc
cld
aam
jge
jg
xchg
cmpsb
xchg
icebp
jp
pop
nop
sub
fs
jns
out
xor
out
and
fbld
fimull
movsb
shll
repz
adc
imul
jp
movsb
xchg
adc
pshufw
addr16
mov
xor
mov
in
sub
insl
mov
scas
jg
flds
outsb
mov
mov
fs
xor
dec
loopne
sub
adc
cld
imull
xchg
or
xchg
push
shr
xchg
jb
jl
or
daa
mov
fdivs
add
xchg
dec
sub
ret
inc
shll
xchg
sub
loop
in
sti
inc
cmc
adc
movsl
jmp
fldl2e
test
dec
sbb
adc
sbb
mov
in
repz
inc
out
ficompl
call
xor
mov
mov
pop
shrb
pop
repnz
push
cmp
xor
or
add
in
mov
xchg
inc
add
aad
cmp
cmp
mov
out
adc
fcoms
add
lock
loop
clc
jmp
daa
shlb
les
les
movsb
popa
mov
add
add
call
jns
cmp
mov
xor
inc
inc
cwtl
test
into
popf
adc
filds
mov
nop
adc
push
dec
pop
add
jecxz
jo
or
xchg
mov
in
push
mov
add
pop
pushl
leave
cmp
sti
test
xchg
inc
inc
push
and
test
rorl
jb
fldenv
mov
cli
and
inc
jp
out
mov
push
mov
test
enter
jp
je
lock
inc
aad
jb
sbb
fimuls
sub
dec
sbb
repnz
or
or
xlat
repz
lock
mov
ja
test
imulb
repz
sbb
cmpsb
ret
add
jnp
pop
movsl
std
dec
add
bswap
sub
repnz
xor
enter
jbe
sub
mov
ja
mov
mov
add
sahf
dec
aas
xor
cli
cmp
mul
mov
popa
pop
mov
or
xor
stos
jae
push
adc
sub
aad
shll
les
xchg
sarb
out
dec
sti
add
insl
jo
nop
dec
sub
add
pushf
cmpsb
leave
add
pop
mov
jo
xchg
cltd
in
or
mov
push
pop
cmp
bound
add
rolb
sub
add
jae
sub
xchg
cld
jecxz
jge
mov
mov
jb
repnz
repnz
pop
lcall
orb
or
outsb
mov
jp
stos
mov
cmpsb
test
xchg
push
mov
mov
mov
dec
into
add
xchg
jb
popf
mov
add
cli
in
rcll
or
xor
fcmovu
test
cmpsb
add
cld
jp
gs
mov
or
sub
add
int3
mov
sti
popa
push
rorl
pop
lret
adc
add
mov
jns
xor
filds
pop
push
call
or
outsb
addr16
sub
xor
arpl
push
movd
in
ljmp
cmc
in
mov
out
push
mov
in
stc
dec
out
mov
sub
out
dec
xorl
add
loopne
xchg
push
push
sub
call
and
jne
in
repnz
cld
adc
add
fbstp
cmp
and
jns
scas
aaa
fisubrl
out
push
in
dec
js
jb
add
jns
sti
fstpt
fidivs
sahf
push
sahf
inc
jecxz
dec
in
add
cmp
add
es
bound
imull
mov
xchg
mov
outsb
sbb
sub
repz
in
xchg
mov
or
push
out
shll
ret
jp
and
sub
lds
shlb
add
xchg
xchg
popa
xor
scas
mov
adc
pop
xlat
cmp
loop
aad
stos
dec
pop
xor
cmp
jae
cld
mov
and
jmp
or
cmp
outsb
inc
pop
test
and
jno
push
mov
mov
or
push
adc
in
mov
lcall
mov
jmp
add
iret
pop
dec
adc
pop
inc
sub
test
xor
decl
ds
dec
or
adc
sbb
cltd
cmp
mov
out
fistps
inc
pop
jnp
lret
js
nop
imul
cltd
jbe
pop
jno
andl
sub
mov
adc
adc
scas
bound
ret
xor
lahf
adc
test
add
stc
es
cmp
mov
adc
add
sti
movsb
xchg
sub
jbe
dec
rolb
ljmp
add
test
loope
sub
or
dec
mov
push
pop
out
lcall
mov
loop
mov
rcr
shr
inc
int
ljmp
lock
leave
jg
ljmp
xchg
mov
jl
sbb
repnz
push
stos
or
insl
nop
lret
shrb
mov
and
jae
fildll
scas
inc
mov
and
iret
xor
jo
cmp
sarl
adc
imul
cmp
jge
insl
mov
pushf
sub
and
mov
add
shrb
sbb
mov
cmpsb
xor
sbb
adc
loopne
cmp
mov
mov
sbb
jge
adc
cmp
xchg
test
fstl
pop
movsl
cmc
lret
movsl
aad
xchg
sub
negb
std
sub
sahf
and
loope
stc
cmc
pop
les
inc
test
out
xchg
imul
shrl
or
adc
push
cmp
adc
jo
pop
xor
mov
mov
in
pop
dec
cmp
adc
adc
adc
shlb
ret
iret
jl
out
ds
fisubrl
outsb
cmpb
subl
and
stos
xor
mov
aas
xchg
push
cli
sahf
cmpsl
fsubrl
xchg
cmp
jp
xor
or
dec
or
das
push
loopne
cld
adc
push
cmpsl
negb
in
sbb
out
lock
jnp,pt
inc
repnz
fdivp
into
xor
jo
adc
cmpsl
fldl
jo
cmp
adc
pop
sub
sbb
xor
adc
jae
mov
fwait
icebp
pop
xchg
repnz
fld
add
divb
shrb
sahf
dec
xchg
test
lea
imul
adc
gs
sbb
mov
pushf
out
pop
out
in
lods
cmp
testl
daa
movsb
popa
xchg
sarb
inc
stc
and
outsl
inc
lcall
sub
cmc
lea
loop
sub
sbb
mov
adc
or
gs
test
fimuls
mov
mov
jno
ror
pop
bound
loope
pop
pop
leave
add
cmp
or
and
rclb
or
pusha
aad
dec
hlt
sbb
lahf
sub
pop
ret
xorb
mov
dec
jmp
and
loope
adc
sahf
cmp
inc
cmp
dec
lea
cmp
jp
inc
mov
andl
cmp
fistpl
out
andb
jno
mov
mov
cmc
xchg
mov
xchg
inc
jo
aaa
xchg
pop
pop
das
jl
aam
sub
pop
out
sbb
or
loopne
dec
out
fistpll
cmp
nop
loop
notb
insl
or
shl
outsl
mov
push
out
or
aad
add
xchg
scas
sbb
int
or
movsl
and
popf
inc
push
xchg
rorl
call
sbb
js
and
add
xchg
cld
data16
push
or
add
and
ds
nop
add
dec
push
adc
out
test
mov
mull
cmp
mov
sub
nop
das
out
jle
or
es
xchg
mov
das
adc
mov
cmp
jl
ja
jg
sub
xlat
shr
loop
jle
lea
push
inc
inc
rep
pushf
pushl
out
pop
sub
fs
stc
xchg
test
and
jbe
js
lret
xor
in
inc
cmc
stos
add
and
or
sub
stc
mov
stos
or
or
mov
sbb
lahf
hlt
fiadds
inc
mov
in
sbbl
pop
sbb
test
inc
mov
mov
insb
cmp
pop
jno
mov
inc
mov
xor
data16
sub
jno
xchg
or
or
push
lods
cs
lods
shlb
aam
xchg
push
add
mov
adc
cmp
ret
jp
lds
js
inc
xchg
loop
mov
sub
cld
fisttpll
mov
test
fchs
mov
out
outsl
nop
xchg
daa
popf
mov
iret
cwtl
jg
dec
lea
xchg
in
out
pop
fldt
mov
inc
xchg
imul
pop
mov
cmp
clc
inc
notl
mov
and
xlat
mov
xchg
lods
and
or
and
mov
xor
and
fistpl
dec
iret
hlt
inc
or
stos
or
sarb
repz
sbb
outsl
repz
xor
pop
push
mov
xor
mov
cmpsb
mov
or
testl
out
inc
les
ficompl
push
orl
ds
mov
jle
mov
xchg
ljmp
inc
loop
sub
shlb
popf
stc
push
add
mov
out
inc
movsl
cmp
push
gs
sbb
loop
adc
xorl
cmp
xlat
mov
jo
das
and
stc
add
cmp
sub
stc
inc
mov
add
sub
cmp
neg
jmp
inc
xchg
add
adc
std
pop
nop
aas
xchg
loope
icebp
idivl
inc
icebp
add
xchg
lahf
adc
sbb
or
add
dec
mov
sarl
stc
pop
or
jo
test
js
and
pop
push
sbb
scas
mov
imul
inc
stos
and
test
xor
call
jo
mov
jo
add
dec
popa
imul
jbe
sti
movsl
stos
das
lods
arpl
pop
mov
std
stos
push
xlat
mov
repz
jns
or
popf
cmp
insl
xor
repz
clc
push
xor
test
repz
inc
or
mov
cmp
and
sub
daa
jbe
adc
add
pop
xchg
inc
lods
cmpsl
mov
or
out
data16
test
loop
sbb
cmc
dec
jo
clc
cli
aam
sub
add
clc
fdivrp
stos
sub
repnz
cli
and
arpl
int3
in
psrlq
cs
jb
mov
dec
adc
or
push
mov
xor
and
dec
mov
subb
or
mov
aas
xchg
fcmove
cld
sbb
bound
sti
stos
mov
lahf
push
sti
sbb
cmpsl
push
addr16
sbb
sbb
scas
fldcw
cs
add
and
sub
sbb
arpl
enter
ja
icebp
test
and
add
insb
adc
push
jbe
add
mov
mov
scas
sub
js
push
nop
push
inc
push
inc
mov
dec
ror
adc
test
cmp
out
push
sbb
fmull
mov
fcomps
mov
mov
js
jmp
sub
inc
adc
sti
cmp
xor
aas
and
and
out
js
jle
sbb
pop
scas
push
lahf
add
jmp
add
cmp
loop
jle
das
fbld
xlat
push
adc
icebp
xchg
sbb
into
or
cmp
rcl
ss
popa
daa
mov
mov
inc
jae
cwtl
push
rolb
sub
inc
jbe
push
jo
jno
add
xchg
lds
xchg
xchg
sbb
add
pop
jb
enter
lods
cld
movsb
dec
sub
js
das
or
xor
pusha
test
mov
sub
or
and
and
pop
ret
mov
sub
sub
jo
mov
pop
push
cmp
sub
push
cmp
jle
lret
push
aad
loopne
mov
push
or
and
movsb
in
mov
or
jg
adc
popa
jmp
arpl
pop
add
push
inc
pop
or
shll
repnz
mov
lret
or
xchg
dec
or
insb
or
jns
dec
ds
pop
stc
xor
xor
dec
clc
out
ss
movl
and
xchg
dec
xchg
ficoml
push
or
xchg
repz
shlb
or
adc
cmp
jp
repz
mov
mov
inc
rcl
xor
out
dec
or
loopne
mov
aam
cmp
jns
testl
popa
mov
xchg
pop
shrb
push
test
pusha
pop
push
add
sub
imul
jns
icebp
inc
or
lds
inc
inc
add
mov
and
push
cld
pop
xchg
repz
push
test
push
sub
lcall
add
inc
repz
sahf
in
sbb
orb
inc
jp
lds
cmc
pushf
mov
inc
xlat
jo
sti
add
xchg
jecxz
mov
mov
lcall
adc
mov
lcall
push
cwtl
xor
xor
push
cmp
outsb
sub
bound
loopne
jp
rolb
fucomi
out
fcoms
add
lcall
adc
enter
adc
jg
adc
fidivrs
pop
or
dec
loope
loopne
mov
inc
adc
insl
in
sub
inc
mov
and
xor
cmp
xor
stos
push
mov
dec
mov
data16
les
push
iret
lods
dec
pushf
adc
nop
mov
ftst
inc
stos
aad
jl
fstps
ret
mov
dec
add
aam
sbb
jecxz
xor
or
mov
movsl
inc
lret
push
dec
aad
les
push
imul
mov
pop
test
adc
add
adc
or
cld
pop
inc
aaa
xor
mov
push
or
movsl
fiaddl
sub
shll
mov
sub
dec
jg
mov
pop
fidivrs
testb
mov
addb
icebp
cwtl
push
mov
mov
loopne
mov
pop
in
popa
or
jecxz
mov
dec
mov
inc
lahf
or
scas
pop
xchg
fnstsw
sbb
add
int
adc
mov
adc
jg
and
adc
mov
es
and
push
mov
dec
and
and
stc
mov
scas
dec
outsb
stos
jnp
sub
xor
adc
out
dec
mov
mov
popa
insl
push
and
sbb
iret
push
into
mov
push
cli
mov
subb
mov
ror
mov
xchg
or
in
sbb
test
cld
mov
icebp
add
ret
int
mov
hlt
cld
lock
cmp
dec
cmpl
int
pushf
inc
mov
push
ds
xor
cmp
inc
xchg
mov
adc
mov
cmpl
shlb
in
inc
sub
andl
je,pn
sbb
loopne
out
push
jns
fisubrs
adc
out
andl
push
inc
cmp
pop
jb
sahf
xchg
loop
push
imul
in
sbb
icebp
inc
lret
pop
cld
imulb
inc
push
jb
loopne
lds
leave
or
es
ss
lcall
test
or
das
lods
xor
mov
push
pop
push
imul
jne
xlat
mov
lods
xlat
pusha
mov
popa
and
mov
mov
add
mov
xor
pop
cmp
stc
pop
adc
test
sbb
add
mov
rol
cld
data16
sub
xor
aad
out
jno
scas
movsl
xor
cwtl
imul
xor
mull
cmp
sub
outsb
ja
push
pushf
lock
fidivrl
das
dec
sbbb
add
jo
mov
test
imul
out
and
mov
or
xor
pop
dec
cmpsb
femms
addb
movsl
loope
jnp
mov
ret
stc
cmpb
orb
and
add
pop
pop
leave
popa
cmp
lcall
sub
lods
int
sub
adc
je
xchg
push
jp
or
clc
push
cmp
nop
fnsave
push
adc
test
push
and
andl
and
out
dec
pop
dec
aaa
push
xchg
xor
lock
lcall
xor
imul
idivb
sub
sarl
xchg
inc
inc
mov
push
out
jle
addr16
mov
rcrl
cmc
call
rcll
xchg
rcr
dec
pop
fwait
jae
fcos
sbb
xor
sub
cmc
loop
into
cld
pop
es
cli
inc
inc
incl
lods
or
jecxz
xchg
ds
cld
xor
pop
dec
sub
xchg
aad
dec
push
nop
movsl
add
lcall
data16
and
icebp
mov
mov
push
pop
cmpsb
push
push
shl
in
add
repnz
test
in
inc
pushf
mov
loope
xchg
jnp
stc
xchg
addl
adc
mov
cmp
dec
ret
lret
jbe
mov
dec
gs
pop
dec
xor
pop
mov
aad
cmp
jno
les
jbe
bound
int3
pop
fstp
popa
pushl
lods
inc
outsb
pop
daa
inc
shl
lcall
sbb
mov
push
add
mov
cmp
mov
icebp
xchg
xchg
call
test
inc
in
or
shl
fidivl
call
jecxz
ja
mov
adc
mov
ret
cmpsb
or
adc
aam
inc
fildll
sbb
sbb
movsb
fisttps
mov
aam
mul
into
stos
sub
daa
les
test
or
fisubrl
inc
add
das
jecxz
mov
popa
cld
sub
lcall
push
xchg
out
add
fwait
jp
scas
dec
jle
adc
jnp
fldcw
or
pop
dec
cmpsb
ss
loope
cmpl
mov
mov
fwait
jne
aas
loope
pop
fiaddl
insl
jbe
jp
push
pop
dec
fdivrl
lods
jbe
fwait
cmpsl
mov
add
repnz
out
mov
or
cmpsl
adc
push
mov
add
mov
stos
sbb
cmc
pop
jns
les
cmp
or
cmpsl
clc
out
leave
sbb
lds
cwtl
inc
stos
adc
adc
push
mov
popf
lods
xor
adc
push
adc
xsha1
cmpsb
or
insb
fldcw
cltd
xchg
add
stos
mov
adc
jecxz
pop
out
ja
pop
inc
bound
leave
aaa
cmp
cmp
sub
push
add
xchg
adc
sbb
xor
and
pop
add
xorl
ljmp
jg
and
or
mov
or
cmp
fiaddl
xor
mov
cmp
jno
popa
inc
add
aaa
adc
pop
sbb
loop
jge
imul
xchg
cmp
icebp
aaa
xor
inc
test
notb
add
ljmp
dec
sub
pop
aas
rolb
testb
insb
or
loop
fidivl
dec
inc
jg
add
ljmp
daa
daa
flds
mov
aam
call
mov
cmp
sbb
mov
aad
imul
xchg
push
rcrb
xchg
movsb
jno
cmp
cld
lret
or
ljmp
repz
jo
aaa
mov
jb
xor
loop
push
sbb
push
stc
cli
mov
cmp
cwtl
jb
cmp
add
addb
loopne
imul
bound
xchg
xor
js
push
das
xor
insl
out
into
ljmp
mov
cld
push
inc
sub
lea
mov
lahf
inc
movsb
adc
stos
mov
dec
xor
daa
sub
sub
sti
mov
cmpsb
or
sbb
xor
pop
mov
add
push
push
xchg
dec
fnstenv
and
xor
test
fadd
mov
push
xchg
sbb
pop
xchg
repz
inc
xor
dec
mov
aam
sub
cld
in
stos
fisttpll
add
cld
pop
xchg
dec
out
adc
mov
mov
in
jne
adc
add
cld
out
mov
lods
sbb
adc
cmp
pop
pop
and
out
cmp
stos
or
loopne
insl
cld
fldt
fiadds
dec
pop
inc
mov
loop
push
and
inc
imull
and
adc
jmp
mov
xchg
inc
scas
and
xchg
dec
pop
test
pop
clc
or
gs
rcll
lock
jl
dec
or
adc
cmp
cli
mov
nop
xchg
aaa
call
aam
cli
xchg
xlat
or
repnz
xor
roll
xchg
jp
pop
sub
push
sbb
sub
data16
xchg
push
scas
icebp
lea
loop
es
inc
sbb
inc
jbe
inc
cmp
push
jne
fistpl
push
inc
jb
push
mov
mov
outsl
mov
push
push
movl
dec
mov
arpl
sbb
or
xor
mov
shrl
and
add
sub
cmpsl
dec
mov
or
icebp
fabs
cmp
cmp
jae
shrl
add
stc
adc
repnz
cmp
xor
aaa
or
mov
stc
dec
cli
aad
cmp
xchg
test
xor
jl
xor
stc
lcall
sub
adc
pop
dec
dec
inc
sahf
das
mov
sti
add
inc
int3
loop
gs
lods
arpl
sbb
sbb
or
fwait
mov
cmpsl
lret
and
mov
ficoms
mov
cmpsb
das
inc
jne
jns
xor
push
sbb
popf
xorb
mov
and
lret
cld
mov
pop
insl
inc
and
mov
mov
out
add
jp
gs
imul
mov
fcompp
xchg
fbstp
sarl
imul
movswl
fistpll
dec
or
addr16
mov
mov
sub
into
sub
jns
lret
test
cmp
mov
sbb
idiv
xchg
or
lret
lcall
dec
cld
or
xchg
pop
idivl
cld
jg
jle
aam
mov
pop
movb
das
add
bound
stc
movsb
sub
push
xchg
push
cmc
xchg
sbb
ret
int3
repnz
lock
cmp
adc
pop
jb
xorb
icebp
xor
testl
enter
cld
inc
push
std
mov
fs
iret
push
cli
cld
xor
lods
iret
movsl
loop
pop
aam
iret
fwait
rcll
out
mov
cltd
fsts
loop
xchg
jns
mov
insb
gs
adc
idiv
ds
pop
jle
or
cmp
add
fwait
daa
clc
and
add
sbb
std
fmuls
sub
adc
divl
jmp
sbbl
or
jl
push
js
lods
test
or
and
pop
push
repz
mov
xorb
fstl
movl
ja
and
mov
les
sbb
in
idivl
insb
aad
outsl
cmpb
adc
add
pop
data16
in
fidivrl
or
sbb
addr16
orb
mov
insb
enter
bound
inc
jecxz
sti
cmpsl
inc
pop
fwait
push
mov
cld
cmpsb
cmp
push
and
mov
stos
arpl
xchg
and
dec
xor
add
dec
repnz
je
movsl
xchg
icebp
inc
sbb
cld
pop
lahf
push
gs
enter
xchg
call
cmc
pop
adc
cld
add
mov
inc
test
icebp
dec
popa
sbb
arpl
add
cmp
dec
cld
mov
mov
xor
mov
pop
sub
mov
push
sbb
aam
lret
mull
mov
mov
mov
xchg
cmp
das
and
rolb
add
imul
pop
ret
mov
aaa
xchg
and
das
ds
push
outsl
push
pop
pop
not
xorb
pushf
movl
cmp
int
cmp
pop
js
or
and
jp
push
cmp
sbb
fidivs
jecxz
or
ret
js
dec
movsb
xchg
add
dec
jo
mov
addb
movsb
es
and
xchg
mov
inc
inc
jbe
adcb
xchg
pop
push
add
mov
rcrb
sti
loop
jp
sub
jae
call
lods
outsb
mov
adc
arpl
adc
cld
push
int3
push
push
cmc
sti
int
fs
xor
ret
arpl
and
mov
mov
loope
lcall
gs
push
mov
enter
scas
fnstenv
add
lods
pop
les
les
pop
mov
pop
mov
pop
jle
jl
inc
dec
sbb
loopne
shlb
dec
dec
cmp
cmpsl
xor
push
insb
push
in
and
jl
movl
push
mov
adc
enter
aas
or
dec
xor
pop
push
jo
loopne
std
popa
mov
aam
cwtl
jbe
call
adcl
mov
addr16
jecxz
mov
or
movsl
inc
mov
and
lock
shl
and
aaa
ret
addr16
mov
xor
fs
int
test
xlat
nop
cld
inc
cmpsl
mov
mov
jnp
aaa
or
fisubl
in
aaa
jae
test
scas
insb
sub
fcompl
lds
xchg
fwait
or
leave
fwait
and
or
dec
cmp
cmp
adc
cld
adc
sbb
push
mov
xchg
mov
push
and
pop
outsb
pop
lret
mov
lret
andl
jae
int
and
push
cmp
fcmovnbe
sub
rorb
xlat
cli
stc
lock
jo
enter
test
inc
jecxz
movzwl
mov
adc
pop
aad
in
xchg
sub
jp
pushf
or
adc
mov
nop
sub
cmp
sbb
addl
stc
pop
outsb
cmp
lods
xor
add
imul
sub
fldl
mov
inc
inc
sti
cmp
je
add
or
sbb
xchg
jle
test
pop
js
repnz
mov
jae
pop
jne
repz
int
push
xor
das
sub
push
xchg
push
mov
pop
sub
pop
je
lds
or
pushf
andb
repz
cmpsl
or
add
pop
andb
push
mov
push
add
mov
cmova
cmp
pop
sub
cmpsb
lahf
push
sahf
push
and
insb
mull
sub
add
in
aad
insb
xlat
cli
stc
or
lea
and
stc
int
imul
jp
mov
jae
pop
pusha
test
inc
mov
add
shrb
ja
xchg
jmp
out
mov
adc
mov
into
xor
inc
aaa
test
cli
jno
adc
out
icebp
xor
inc
sbb
xchg
mov
cmp
shrl
andb
loop
cmp
sub
inc
fildll
outsb
xor
scas
jge
pop
lea
push
xlat
dec
icebp
pop
sbb
lods
mov
add
sub
xor
jns
pop
xor
sub
cld
dec
daa
mov
add
inc
das
inc
lds
movsl
pop
repz
xchg
add
sbb
jae
insb
sbb
cmp
mov
push
or
mov
rcr
cs
repnz
popf
push
outsb
mov
and
lret
cmpsl
mov
cmp
stc
cmc
stc
test
mov
lea
jne
push
jmp
lea
jbe
movzbw
ror
cmc
sub
push
cmp
rcr
mov
lea
call
enter
jb
loopne
jbe
sbb
adc
pop
test
inc
and
in
mov
dec
lods
push
inc
pop
lods
aaa
xchg
stos
add
fwait
std
xchg
jae
jns
inc
cmp
in
leave
sbb
sub
js
mov
lret
cld
jbe
insl
les
inc
int
jbe
cmp
xchg
jae
jecxz
jno
inc
or
jle
push
mov
xor
test
mov
push
test
imul
mov
jb
ret
stos
push
call
rolb
aad
add
or
pop
mov
push
mov
insb
pop
shrb
cmp
rep
shrl
push
not
or
cli
and
bound
pop
sahf
cwtl
jns
or
aad
iret
je
sub
jbe
jno
fildl
mov
add
sbb
xchg
mov
scas
or
jmp
popa
and
test
sarl
test
imul
sbb
mov
nop
into
jne
adc
fiaddl
stos
xor
shll
notl
scas
test
in
fwait
mov
ror
insb
aaa
lock
popa
out
cmp
xor
xor
pop
lea
mov
jns
cmp
idivl
nop
scas
lahf
sub
jmp
add
out
ljmp
push
mov
pop
mov
jp
mov
nop
cwtl
fcompl
pusha
jbe
xchg
mov
sub
adc
push
jmp
lods
mov
jae
ds
out
mov
insb
mov
sub
jmp
push
bsr
shrd
push
not
sub
seta
push
pushf
cmp
mov
rcr
bsr
cmp
pop
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
test
cmpb
jmp
sub
sub
outsb
push
imul
mov
and
jp
cmp
ja
dec
mov
mov
xchg
jge
leave
loopne
cltd
or
fstpl
push
std
call
mov
inc
repz
ret
lea
sbb
push
stc
adc
das
lahf
fsts
adc
orl
xor
jno
and
or
cmpsl
lods
out
cwtl
xchg
xor
stc
pop
dec
lret
lods
into
jbe
in
add
inc
aad
dec
movsl
mov
sahf
fldenv
sbb
pop
es
pop
insl
push
xchg
mov
mov
jns
adc
sbb
addr16
nop
push
dec
bound
ret
xchg
test
loop
in
pop
out
jp
js
dec
sub
loopne
gs
cmp
jnp
xchg
pop
clc
push
adc
orl
sbb
fldenv
call
sahf
add
xlat
xchg
inc
iret
adc
push
ficompl
stos
pushf
jp
dec
fsubs
cmc
mov
fidivs
add
xor
dec
add
jecxz
inc
or
shl
es
adc
sbb
jae
mov
test
dec
shl
dec
in
aas
subb
into
mov
ss
fldenv
sbb
adc
movsl
addr16
xor
insl
sbb
push
push
mov
sahf
inc
sbb
and
add
test
insl
cmp
fsubrl
mov
mov
push
aas
lods
pop
mov
insb
lds
mov
pop
fwait
pop
fstpl
xor
ficompl
sbb
lahf
fidivs
sbb
ficomps
xor
pushf
xor
push
fidivs
pop
fstps
sbb
sbb
fstenv
out
pop
lcall
and
pop
jmp
jmp
lock
ss
popa
or
pop
push
jo
cmp
test
jb
jb
jb
wbinvd
and
mov
adc
and
test
cmp
jno
mov
lret
push
clc
sbb
jno
mov
lock
std
sti
loope
cld
lock
std
std
loope
lock
std
add
call
add
call
add
call
or
call
or
call
adc
pushf
icebp
pop
repz
repz
cmc
rorl
test
xlat
and
or
mov
adc
xor
mul
mov
fists
or
mov
push
mov
rorl
add
push
rorl
or
std
mov
dec
icebp
rcl
adc
popl
fdiv
sub
adc
xor
xlat
add
xor
add
xchg
lock
lock
or
ljmp
or
dec
mov
sub
adc
dec
fucomp
or
cmp
pushf
rep
fdiv
cmp
add
push
call
xchg
mov
notb
sbb
pop
js
mov
mov
shlb
lock
loopne
jb
repnz
rcll
xor
dec
jne
je
repnz
outsl
hlt
and
je
clc
push
cmpl
aad
mov
sub
js
push
sti
add
test
jnp
nop
xchg
mov
icebp
jl
add
je
jne
jbe
ja
js
jns
jp
and
je
clc
jg
xorb
addb
xchg
xchg
mov
js
mov
mov
lea
popl
jo
adc
jb
jae
and
jbe
ja
js
xchg
sbb
jo
and
pop
cmp
jns
cmp
idivb
lock
roll
repnz
mov
addb
mov
push
add
adc
push
filds
jns
dec
mov
lock
fimull
ret
xchg
sbb
lea
jge
mov
cmpl
xor
icebp
icebp
adcl
jl
add
adc
mov
lea
xor
cli
jo
clc
cmc
and
xor
js
jle
xorb
je
clc
push
and
punpcklwd
dec
xor
popa
push
icebp
or
sbb
cld
adc
hlt
adc
nop
jp
mov
sub
js
mul
ds
pop
xchg
lock
or
outsb
or
cltd
pop
repz
sbb
js
js
adc
cli
xor
adc
hlt
adc
add
repz
test
or
xor
adc
adcb
notl
sbb
dec
adc
xor
hlt
push
div
or
clc
orl
adc
dec
push
inc
std
xor
outsl
jo
mov
add
xor
and
xor
or
adc
push
xor
repz
jae
icebp
xor
xor
clc
and
xor
enter
adc
add
jae
adc
je
clc
xchg
and
mov
mov
add
and
repz
clc
ja
push
xor
js
and
xor
and
mov
shlb
mov
push
loope
push
jb
or
ss
xchg
je
clc
mov
jne
nop
js
mov
clc
lock
adc
lcall
adc
js
and
inc
and
xor
js
add
add
clc
inc
and
inc
add
and
je
mov
ja
lret
xor
js
jge
out
xor
push
cwtl
sbb
lcall
lcall
hlt
aam
js
icebp
mov
mov
mov
dec
jl
imul
push
add
mov
icebp
dec
repnz
repz
iret
pop
push
les
out
cltd
xchg
xchg
adcb
mov
int
xchg
push
subb
jo
iret
pop
adc
repz
inc
lock
icebp
lahf
mov
fidivs
pop
mov
imull
js
movsb
jb
icebp
ss
adc
jl
jno
clc
inc
add
call
push
xor
add
push
test
addr16
inc
or
insl
cmc
hlt
cmp
mov
fs
push
scas
and
dec
insl
ljmp
inc
jns
push
nop/reserved
adc
int3
call
scas
add
add
jp
lock
stos
mov
jo
lret
movsl
mov
nop
lock
popl
loopne
hlt
and
je
testl
xor
and
jge
adc
and
orb
add
lock
insl
adc
mov
mov
or
daa
loopne
loopne
xchg
push
mov
xor
ja
and
xor
je
fsubrs
mov
repnz
hlt
icebp
push
lock
js
mov
pop
fmuls
push
pop
or
movsb
xor
dec
sbb
jb
test
pop
sbb
adc
adc
jbe
jnp
icebp
movsb
addb
lock
js
inc
push
xor
sti
test
popa
cwtl
pusha
dec
pop
jg
idivb
xchg
xor
mov
mov
sub
roll
icebp
int
or
jecxz
push
or
xor
add
aad
cmpl
pop
call
add
add
mov
popa
fidivl
sbb
xchg
mov
adc
adc
rcll
adcl
ss
std
push
jg
xor
adcl
test
adc
push
orl
cmpsl
out
and
cmp
xchg
adc
nop
push
clc
adc
hlt
and
icebp
and
pop
lock
add
dec
clc
inc
stc
pushf
adc
jae
repnz
repz
mov
mov
in
int
ss
icebp
or
and
or
loopne
pslld
jl
clc
lods
add
adc
pop
inc
xorb
adc
sub
cmp
adc
or
js
adc
and
adc
add
adc
sbb
cmp
push
notb
adc
leave
sub
adc
ret
add
push
icebp
adc
test
lock
add
add
mov
xchg
mov
cmp
jno
push
push
div
adc
adc
stc
add
icebp
push
jb
push
adc
jg
adc
xchg
mov
je
bound
adc
dec
add
std
js
bound
mov
adc
out
jb
testb
sub
adc
inc
pop
xor
push
dec
std
lret
adc
adc
out
cmp
xor
sbb
lock
push
adc
mov
adc
adcl
neg
add
push
add
clc
jns
push
xor
clc
icebp
enter
adc
adc
lahf
std
jge
add
scas
mov
add
inc
mov
mov
inc
pushl
mov
clc
jno
adc
xchg
pop
or
jae
aad
mov
xor
push
adc
addr16
xor
xor
lock
or
sbb
andb
add
add
sbb
adc
xor
push
or
lock
xor
je
jbe
js
jp
sti
std
and
pop
adc
je
clc
or
or
or
inc
push
mov
adc
stos
loop
ret
xchg
xor
adc
and
and
scas
or
adc
or
and
mov
js
mov
sub
clc
hlt
and
clc
js
cld
and
add
test
xchg
js
or
dec
xor
jbe
clc
mov
lock
add
jnp
lock
adc
xchg
fsubl
add
lock
sub
cwtl
xor
sti
ret
sbb
mov
hlt
sbb
mov
loope
jno
push
js
shlb
mov
cltd
iret
stos
adcl
je
clc
and
das
and
pcmpeqb
sahf
adc
xor
js
cmc
and
xor
js
cld
and
xor
push
clc
add
in
xor
js
pop
and
clc
mov
insl
jg
dec
shlb
cmp
hlt
adc
mov
push
jo
push
mov
mov
jbe
xchg
adc
mov
icebp
mov
pop
push
clc
pusha
lock
arpl
inc
xor
cld
scas
pop
ficompl
and
jge
les
push
icebp
aaa
mov
je
jb
sbb
and
jo
in
adc
addl
adc
icebp
mov
std
adc
or
pop
sub
add
jno
adc
inc
xor
je
clc
outsl
and
iret
testb
jns
adc
int
cwtl
push
dec
aaa
outsl
icebp
psubw
mov
je
daa
xchg
andl
or
scas
push
adc
xor
mov
sub
inc
hlt
cmc
test
cmp
xor
adc
js
cmc
and
xor
je
clc
clc
add
mov
fadds
je
movsb
jno
cmc
push
mov
pop
mov
adc
loope
push
dec
jo
nop
jae
rcr
push
lock
or
mov
jno
xchg
clc
mov
shll
js
xor
push
xor
xchg
clc
mov
shl
repnz
adc
xor
push
pop
jae
xchg
pop
mov
roll
repz
adc
xor
push
pop
je
xchg
pop
mov
aam
hlt
pop
adc
pop
jne
xchg
pop
mov
aad
imul
xlat
push
in
jl
xlat
or
adc
iret
fdiv
mov
icebp
divb
jae
add
add
push
clc
mov
mov
pop
repnz
divl
out
jno
jo
clc
mull
adc
icebp
js
repz
xor
je
clc
mul
js
inc
jmp
and
lods
adc
inc
add
and
xor
je
clc
sub
sbb
cmp
adc
jp
cwtl
mov
and
inc
je
clc
lds
in
push
js
xchg
inc
xor
xchg
inc
and
cmpsl
js
movl
xor
je
clc
sbb
js
popf
and
idivl
xor
pop
push
es
add
fstps
dec
push
les
icebp
jl
lods
pop
jne
jl
and
cmp
bound
jecxz
mov
or
sbb
pop
jl
mov
jp
repz
sbb
sbb
enter
or
adc
or
inc
addl
adc
jns
jp
adc
fstp
mov
insb
sub
scas
das
sahf
insl
outsb
sbb
pop
enter
cli
mov
jb
je
or
xchg
dec
xchg
movsl
jo
and
lock
test
fnstenv
xor
fistl
jecxz
icebp
pop
jmp
add
cld
cwtl
testl
adc
mov
sbb
adc
or
std
nop
push
push
xor
and
pop
arpl
out
or
inc
lock
xchg
lret
push
repnz
je
test
je
popa
das
cmp
icebp
std
cli
fst
cmp
repz
adcl
inc
xorl
and
mov
jle
push
xor
enter
lea
sti
mov
jl,pt
jle
xchg
pushf
or
jg
testl
xchg
pop
outsb
pop
ljmp
or
pop
std
pop
inc
lock
mov
mov
pushf
jge
pop
je
aad
leave
xor
lock
hlt
sub
dec
out
fidivrs
lcall
and
mov
xchg
lea
dec
icebp
mov
je
sbb
mov
jae
dec
ja
cmp
or
jl
js
stc
xchg
andb
mov
aad
xchg
add
idiv
push
cli
stc
inc
mov
or
sahf
adc
insl
in
fcoms
or
jle
fstl
lea
jb
sbb
pop
xor
nop
cmp
pop
adc
sub
mov
jno
int3
repz
push
or
mov
adc
sub
push
pop
or
repz
stc
mov
add
or
push
xchg
pusha
mov
fwait
push
pop
scas
nop
ds
xchg
or
push
pop
stc
or
and
hlt
and
out
lods
jp
xchg
inc
jno
push
movswl
sub
sub
xchg
repz
popa
out
push
or
ret
jae
or
inc
cld
mov
jno
pop
fwait
push
psrlq
fisttps
inc
clc
repnz
mov
out
sbb
jecxz
int
fisubl
jle
fldl
enter
mov
repz
rorl
repz
inc
fwait
test
add
jae
popa
xchg
adcl
dec
cld
jns
aas
mov
and
adc
jo
jno
jmp
fnstenv
add
jle
cld
jnp
add
jg
into
xchg
sbb
mov
test
jo
fmuls
sub
jno
jmp
lods
or
add
adc
jge
xor
jb
repnz
sbb
push
jp
cmp
repz
js
rcll
jle
jb
adc
mov
nop
movl
adc
adc
int3
in
cmp
push
or
popf
shl
jmp
fs
dec
mov
pop
mov
dec
jo
mov
adc
icebp
ficoms
jo
mov
data16
mov
repz
ficompl
jbe
adc
dec
mov
mov
hlt
inc
repnz
adc
push
add
pusha
xlat
lcall
je
push
mov
jb
inc
mov
jl
cmp
adc
ss
jno
sub
sahf
pop
pop
adc
sbb
sti
inc
jb
enter
pushl
or
mov
repz
lock
sub
jno
fistps
popa
test
test
call
pop
popa
lahf
jo
rclb
inc
xor
shlb
or
out
orb
iret
mov
mov
push
add
sahf
inc
cld
add
mov
mov
add
inc
lods
cwtl
mov
mov
movsl
add
and
or
push
repz
jno
push
push
jo
clc
sub
pop
and
cwtl
push
dec
xor
in
push
cld
iret
inc
push
mov
stc
fwait
or
js
push
add
sbb
mov
mov
mov
addr16
shlb
cmp
lcall
or
lcall
inc
lods
cld
adc
jnp
addr16
por
adc
fndisi(8087
lret
in
and
sub
jae
pop
pop
inc
xor
pop
sbb
or
addb
sbb
rorl
cwtl
lret
push
or
stos
into
pushf
push
out
add
lahf
or
pop
je
popl
test
mov
cld
mov
mov
and
xor
test
and
cmpsb
cmpsl
pslld
stc
std
scas
mov
cmp
dec
push
jmp
sub
mov
ja
sub
icebp
icebp
jb
xchg
or
pop
jbe
int3
adc
jl
js
popa
sbb
xor
ret
and
aam
call
or
and
shll
mov
cli
push
and
inc
popa
ljmp
test
cltd
mov
xchg
mull
pxor
gs
push
popf
mov
dec
push
add
xlat
repz
cld
xor
xchg
clc
pop
jo
push
or
je
rcrl
stc
sbb
add
stc
das
repz
sub
fwait
add
xor
jb
sbb
jp
sbb
adc
adc
xor
or
or
dec
mov
push
cli
xchg
scas
mov
mov
mov
mov
mov
adc
push
loope
icebp
or
mov
add
cmp
push
or
or
or
xor
add
sub
adc
or
or
or
imul
clc
icebp
jne
hlt
mov
sub
jb
fbstp
repnz
cmp
pusha
scas
test
movsb
enter
movsb
icebp
adc
mov
adc
fdivp
mov
shr
push
sub
mov
repz
movsb
sbb
jne
ret
hlt
cli
cmp
js
mov
test
jno,pn
jbe
mov
nop
lcall
mov
in
jb
jb
ret
stc
fiaddl
push
push
or
mov
dec
cmp
jl
in
roll
mov
lcall
iret
push
and
sbb
ficompl
das
or
add
out
push
or
and
sbb
cmc
jp
shrb
pop
jl
add
nop
popa
mov
popa
push
adc
insb
push
mov
jbe
xor
dec
std
test
sbb
dec
jb,pt
cmc
xchg
mov
loope
sahf
adc
les
sub
jl
xor
jle
or
lret
xchg
lret
jnp
mov
xor
repz
xchg
xor
inc
testl
shl
shrb
jecxz
andb
pop
mov
rcrl
ret
clc
push
ss
ret
mov
push
setl
out
sti
or
lods
mov
and
add
mov
call
es
out
push
paddb
popa
cmc
jl
lock
sub
ja
pop
lcall
mov
fistpll
and
xor
cmp
pop
sbb
cmc
push
sbb
jne
mov
cmpsl
and
or
mov
loopne
repz
push
push
jns
adc
xchg
orl
and
xor
xor
out
outsb
push
fwait
mov
mov
adc
lahf
jnp
test
jb
adc
scas
std
into
int
xchg
in
inc
hlt
and
lock
dec
rclb
std
cmc
pop
cld
pop
push
jle
cmp
cmp
pop
pop
lock
aam
cmp
jno
adc
adc
dec
and
mov
pusha
mov
leave
pop
push
pop
hlt
lock
cwtl
dec
cs
sbb
mov
or
jle
mov
mov
adc
pop
mov
divl
jnp
xchg
cmpb
and
lar
pop
xchg
push
enter
mov
popa
repz
ficoml
pop
and
adc
and
jae
xchg
lods
jae
push
add
pusha
iret
jo
or
pop
je
add
loope
jb
out
repz
xor
jle
push
mov
and
test
sub
ss
into
ds
mov
cld
jb
jp
stos
pusha
shld
inc
gs
mov
dec
popa
xchg
repnz
pop
mov
stc
repz
cli
add
hlt
dec
mov
fsubrs
popa
jb
fisubl
mov
xor
cmpsl
test
adc
aam
aad
push
pusha
int3
das
int
rdtsc
or
into
push
jo
fidivs
pop
mov
ret
insl
inc
push
dec
das
mov
add
daa
mov
add
and
stc
xchg
add
mov
shlb
mov
adc
jnp
pop
cmp
xchg
or
inc
repz
jb
pop
adc
push
lea
jo
fdivrs
jb
dec
ds
ficoms
mov
adc
subl
or
add
or
shrl
loopne,pt
adc
sbb
test
insb
lock
sub
push
jp
cld
test
repz
or
stos
sub
idivb
data16
mov
and
xor
hlt
sub
jne
mov
fnstenv
popa
xor
inc
adc
pop
lods
fisttpl
adc
call
mov
mov
lods
xor
mov
or
or
jmp
divl
jl
and
es
daa
xchg
xchg
xchg
mov
jae
repz
xchg
aam
mov
sbbl
sub
stos
scas
mov
mov
icebp
jb
lock
aad
add
fnstenv
pop
pop
adc
mov
das
inc
xchg
sbb
insl
clc
xor
pop
sbb
lock
xchg
daa
mov
xor
icebp
mov
call
cmp
push
and
cld
push
out
rcl
and
or
lock
jo
dec
add
jns
and
stc
cmp
repz
jle
mov
lahf
movsb
cwtl
xchg
adc
jl
js
or
mov
orb
mov
inc
mov
mov
jno
repnz
xor
cmp
cmp
addb
hlt
and
hlt
lret
paddq
insb
cwtl
icebp
mov
adc
lods
loope
and
lods
stc
pop
lock
cltd
jb
mov
inc
lcall
js
mov
jno
push
shr
js
add
or
push
fmulp
push
mov
fwait
je
mov
push
jne
cmc
push
mov
shl
jno
std
cmp
stos
lcall
orb
clc
cmp
mov
cmp
divl
cmp
stc
and
add
adc
cld
je
lock
cld
jns
jnp
pop
sti
icebp
fwait
std
push
jle
sub
cmpsb
add
mov
int
adcb
cmpsb
add
cwtl
andl
add
or
mov
cmc
inc
push
popa
cmc
xor
test
cmp
add
jno
sbbb
rolb
mov
repnz
xor
or
jae
nop
clc
daa
mov
loopne
inc
hlt
adc
popa
outsl
js
cmp
or
mov
cld
jbe
add
ja
or
add
repz
mov
pop
nop
adc
icebp
jnp
or
adc
lods
icebp
add
jge
sti
sbb
js
jne
cmp
add
adc
cltd
cli
jae
sarb
and
popf
clc
shl
js
jne
cmp
add
mov
or
aad
add
mov
stc
mov
xor
mov
cmc
fidivrl
lea
or
sub
dec
cmp
push
je
jne
mov
js
jne
mov
icebp
clc
out
pop
hlt
sahf
sarb
push
mov
mov
add
sarb
adc
mov
jno
cmpb
or
cli
das
insl
xorb
cmp
pop
cmpb
or
clc
xor
mov
or
js
ss
adc
push
icebp
or
adc
lock
lahf
or
lea
add
mov
lods
sbb
nop
cmp
std
fdiv
repz
adc
fmull
or
adc
cmpb
mov
adc
icebp
mulb
stc
jge
adc
add
add
xchg
sarb
adc
cmp
fnsave
mov
mov
mov
push
icebp
add
inc
fcoms
stc
lock
or
js
jne
cmp
adc
test
dec
sub
mov
imul
neg
hlt
test
xor
sarb
mov
sarb
xor
inc
push
adc
pop
mov
jge
pop
jno
inc
cmp
sbb
pop
xchg
and
clc
push
incb
xchg
stc
add
push
inc
push
hlt
or
push
lea
inc
xor
add
add
dec
or
jb
sub
mov
ja
xor
cmpl
std
xor
push
inc
in
orb
mov
inc
pop
adc
lock
cmp
or
dec
stc
sub
js
push
orl
mov
dec
mov
adc
mov
adc
cmp
in
adc
lock
sub
push
fld
sub
or
sbb
mov
or
pop
cmpsb
dec
arpl
mov
add
cmp
insb
and
enter
xorl
add
sbb
out
dec
mov
setne
shrb
mov
pop
push
or
lret
xorb
jb
cli
clc
out
hlt
mov
hlt
inc
mov
push
cmp
or
push
cmp
pop
cmp
fdivs
fwait
cmp
or
daa
push
sub
loop
mov
clc
cli
icebp
xchg
mov
push
inc
cwtl
xchg
shl
or
push
mov
xorb
dec
add
dec
pop
iret
sbb
or
ret
cmp
ds
pop
adc
lock
jae
mov
ljmp
fbstp
sbb
lret
jne
or
iret
cmc
dec
idiv
pop
popf
jl
pop
cltd
inc
mov
xchg
adc
jle
or
xchg
mov
clc
push
cmp
add
test
adc
div
repnz
push
lock
mov
mov
or
xchg
test
cld
xor
jmp
xor
adc
xchg
arpl
stc
andb
or
xor
lock
cli
fistpll
push
subb
push
ret
mov
sti
lock
push
sbb
adc
dec
repnz
icebp
lea
nop
cmp
push
adc
sar
cmp
leave
adc
sbb
or
ret
ss
std
adc
sti
jle
cmpsl
leave
adcb
pop
jg
sub
cmc
and
shl
clc
cmp
jg
stc
leave
ss
std
jo
icebp
mov
mov
icebp
stos
push
pop
xor
mov
jo
mov
dec
notb
xchg
adc
out
pushl
icebp
nop
pushf
or
jp
dec
out
test
cmp
test
icebp
sti
nop
mov
call
jp
push
xchg
xor
nop
cmp
stc
andb
adc
nop
cwtl
hlt
cmp
clc
xor
add
cmp
jo
mov
testb
cmpb
ja
cmp
adc
adc
or
aam
stc
adc
sbb
or
or
icebp
or
mov
adc
lods
mov
repnz
cld
icebp
or
lock
sbb
push
stc
adc
or
jno
popa
test
push
jg
xchg
inc
sbb
lock
mov
push
loop
clc
bound
xchg
or
xor
sbb
mov
or
inc
add
cmc
clc
cmp
sbb
repz
push
punpckhwd
rclb
js
adc
imul
js
adc
imul
faddp
mov
icebp
adc
or
add
mov
in
jge
mov
push
call
adc
jl
xor
es
adc
or
mov
adc
out
loop
or
cli
jo
mov
mov
sarl
mov
xchg
fbstp
push
xor
sub
pusha
push
push
cmpb
cmp
add
sahf
jecxz
popa
mov
mov
insl
push
mov
or
lock
jl
xor
adc
jp
pop
push
or
push
call
std
icebp
imul
xchg
cld
sbbb
add
loop
popf
in
subb
jns
popf
mov
test
jne
jb
pop
data16
add
cmp
icebp
aas
jle
mov
add
jle
or
call
cmp
inc
add
sti
add
or
call
stos
sub
sti
icebp
enter
addr16
adc
xchg
stos
lock
cmp
adc
add
add
adc
lock
pop
pop
adc
icebp
cli
or
adc
jno
and
mov
jno
es
xor
cld
repnz
ss
lahf
xor
lret
add
push
mov
jno,pn
sbbb
add
imul
js
ss
adc
inc
std
sbbb
or
add
jl
xor
adc
lock
sarb
adc
add
add
cmp
or
add
jns
std
sbbb
clc
icebp
mov
repz
push
xor
adc
lock
sarb
adc
add
ret
stc
stos
add
js
ss
adc
lret
adc
adc
add
add
jl
xor
adc
lock
sarb
adc
add
add
and
or
shlb
pop
pop
adc
icebp
std
or
js
ss
adc
xchg
dec
adc
xchg
pop
xor
js
push
mov
jb
jmp
xor
or
or
sti
icebp
popa
jecxz
inc
lret
push
ror
add
out
js
out
xchg
dec
dec
xorb
fwait
adc
out
adc
add
or
sbb
jno
cmp
fidivl
dec
cmp
pop
xor
xchg
filds
mov
push
test
dec
sub
fnstcw
out
xchg
and
fcmovnu
pushf
stc
insl
jmp
add
les
push
fdivrs
inc
neg
int
pusha
mov
repnz
push
fadds
mov
sbbl
jno
test
inc
rol
cwtl
xchg
popa
lock
add
push
and
jle
push
sti
mov
imul
jno
adc
adcl
or
hlt
adc
cld
sub
ds
ljmp
repz
push
cltd
lock
jb
sbb
aad
pop
mov
jae
cmp
push
cld
xchg
popa
push
lret
aad
sub
jns
es
and
jno
cmp
call
jne
imul
mov
xor
ss
jbe
push
xchg
js
mov
adc
cwtl
adc
pop
adc
jp
aaa
cmpb
sahf
repz
mov
mov
or
negb
fdivrl
jo
cmp
repnz
adc
push
in
jecxz
jo
or
adc
cmp
stos
cmp
jo,pt
dec
jbe
add
mov
jb
adc
call
and
icebp
inc
mov
adc
lods
push
add
test
popa
mov
insb
pop
pop
sbb
pop
f2xm1
sbb
neg
dec
iret
fsub
and
pop
push
sbb
in
je
aam
lock
pop
jns
call
xor
xchg
fimull
fcoms
jae
pop
js
outsb
ficoml
in
das
lret
mov
fildl
cmc
je
bound
stc
jg
imul
jns
subb
imul
fcomip
sbb
fstp
cmp
jge
xor
cmp
je
mov
aam
popa
mov
xchg
ds
lds
imull
xchg
repz
idivb
pop
stc
push
ja
loop
rolb
loop
add
clc
rcrl
mov
xchg
je
xor
ljmp
enter
xchg
lock
movsb
loop
pusha
mov
xchg
mov
pop
or
sub
shlb
inc
fmuls
jns
cmpsl
jp
inc
push
xor
mov
test
lahf
add
adc
fistpll
add
sub
mov
dec
push
jnp
xor
daa
sahf
push
jne
cmp
pop
sahf
or
fdivl
mov
pusha
das
stos
mov
test
adc
cmpsb
fcoms
push
add
sbb
aas
sbb
sbb
inc
push
cld
or
rcrl
sbb
adc
mov
mov
lock
mov
jl
repz
sar
mov
ficomps
xchg
dec
fisttps
mov
xchg
push
xor
xchg
cmc
lret
mov
stc
or
stc
lret
sbb
cs
div
cld
lret
out
cltd
mov
shrl
xor
push
mov
aaa
jb
sar
cmp
hlt
mov
rclb
jo
faddl
clc
jp
cli
cld
add
xchg
cmp
dec
movsb
jp
push
jle
cmp
jecxz
js
jg
popa
subl
xchg
dec
mov
in
jb
xchg
mov
addb
gs
mov
data16
test
jb
cmp
lock
notb
jne
mov
dec
std
or
sub
clc
icebp
sahf
xchg
pop
mov
ds
or
repz
icebp
adc
sbb
pushl
and
fcompl
mov
cwtl
dec
je
js
xchg
xor
int3
sbb
push
lock
mov
insb
xchg
cmp
std
mov
mov
scas
mov
fnstsw
xchg
icebp
add
fadds
mov
icebp
mov
repz
push
lods
dec
push
adc
fprem1
icebp
into
addr16
and
and
outsl
jb
dec
pop
test
adc
addr16
adc
add
sbb
xor
and
fbld
jae
repz
mov
js
push
pop
lods
push
adc
fprem1
push
jp
pop
adc
outsl
jmp
aaa
sub
xor
dec
data16
inc
sbb
add
ljmp
fmul
inc
flds
out
xor
test
add
mov
mov
cmp
test
lock
inc
xor
cmc
sub
hlt
shll
je
repz
repnz
jb
jno
aad
scas
adc
xchg
push
push
jne
lods
push
xor
push
adc
push
cmp
test
inc
xchg
mov
cmp
and
adc
adc
inc
inc
rorb
jle
cli
add
cmp
mov
inc
idivl
push
leave
push
dec
jo
dec
sahf
xor
out
and
int
ljmp
mov
outsl
icebp
or
add
or
aas
mov
jle
mov
mov
lock
add
xchg
mov
repnz
xchg
inc
adc
adc
enter
mov
adc
dec
xchg
sti
add
adc
mov
out
lock
pushf
add
repz
or
inc
lea
das
xchg
fcmovnb
not
inc
mov
sti
push
je
shll
xlat
test
out
inc
mov
xor
ret
je
add
adc
ret
add
jb
aad
sub
jnp
lods
fisubrl
jl
cmp
mov
rorl
test
pusha
sub
mov
sti
push
shll
mov
les
out
inc
sbb
rdmsr
lcall
lock
sub
ja
adc
ss
push
repz
std
out
orb
rclb
lret
add
jo
mov
insb
dec
jns
filds
xchg
or
pusha
aas
dec
roll
icebp
jnp
inc
out
clc
cltd
jl
iret
mov
mov
inc
add
or
jmp
mov
lret
cld
mov
sbb
xchg
inc
and
je
or
add
aad
in
je
jecxz
mov
push
outsl
out
hlt
fisttps
pop
jne
out
xor
adc
jb
xchg
jp
dec
jbe
adc
xor
xor
jo
xor
jno
clc
into
aad
lret
xchg
xor
add
jp
test
popa
cmp
jne
and
stc
mov
fwait
inc
dec
xchg
stos
push
ret
sbbl
cmpb
je
clc
cmp
or
xorl
subl
ret
mov
popa
call
mov
ja
xchg
pop
icebp
and
push
push
mov
jb
icebp
jg
jbe
mov
loop
push
or
icebp
out
test
shrl
dec
dec
lahf
xor
mov
cmp
insl
xchg
xchg
ret
repnz
inc
or
xchg
adc
push
lods
cld
mov
mov
mov
jecxz
push
clc
jle
cmpsb
or
sti
sub
icebp
test
mov
mov
js
cmp
ss
and
xor
and
int3
sbb
notl
mov
or
fildl
test
adc
in
jne
push
jne
or
sbbl
cmp
xchg
jmp
fistl
shlb
mov
mov
or
std
and
les
repz
xchg
imul
sbb
sti
lahf
fucom
xor
insl
push
adc
inc
fdivs
icebp
roll
in
xchg
jb
mov
data16
jne
inc
repnz
mov
into
push
clc
cld
jecxz
mov
daa
add
pop
nop
xchg
inc
jle
popa
mov
js
inc
pop
jp
test
cmp
outsb
lods
lock
cld
mov
and
cmp
add
outsl
jnp
mov
inc
hlt
xlat
cmp
jbe
cld
insl
in
sti
int
data16
loope
stc
mov
stos
sbb
add
int3
movups
fidivs
mov
and
je
sti
rcll
sub
out
lock
jns
stc
jo
inc
cmp
dec
push
add
fadds
repnz
mov
mov
and
push
insb
pop
mov
or
insl
ds
icebp
clc
sbb
mov
insl
mov
pop
mov
xor
cltd
aaa
mov
inc
outsb
mov
loop
xchg
mov
xchg
mov
jl
fimuls
cmp
das
je
push
repnz
mov
stc
fucom
sbb
fldcw
dec
movsb
popf
cwtl
dec
sbb
cmp
add
xor
sahf
js
mov
jb
nop
adc
mov
push
push
inc
jo
or
cltd
dec
inc
cwtl
jno
adc
lret
jne
and
xor
inc
js
push
xchg
mov
inc
pop
inc
insl
cmp
adc
add
mov
xor
xor
add
jne
xchg
cld
jl
mov
mov
xor
jge
sub
cs
dec
sahf
icebp
enter
addl
and
sti
std
inc
insl
rcrb
mov
loopne
jb
jle
cld
cltd
inc
js
clc
popf
hlt
fistpl
mov
cmp
dec
mov
clc
aam
andb
xchg
mov
ficompl
es
stos
dec
and
lock
scas
flds
jb
repnz
out
sub
out
sahf
jae
mov
enter
cs
movsl
push
repnz
into
and
add
dec
cld
pusha
adc
repnz
sbb
fiaddl
sbb
ror
fdivs
loope
fs
push
push
xor
jmp
fcomps
rolb
lock
call
pusha
sbb
not
aam
pop
dec
push
sbb
call
inc
dec
jb
and
cmp
xor
mov
out
cmp
pushl
addr16
test
cmp
and
loope
lret
xchg
pop
add
popa
dec
rol
orl
and
ret
ljmp
pop
imul
divl
clc
pop
cmp
adc
std
jb
xor
dec
ja
ljmp
and
xchg
mov
cmc
jo
jb
add
jbe
or
shll
mov
sti
dec
jno
clc
jge
mov
and
fs
das
adc
pop
imulb
out
add
push
xor
aaa
push
adc
mov
aas
cmpb
sahf
jp
lds
jne
mov
ret
adc
push
xor
sub
sbb
push
dec
xor
jl
inc
imul
xchg
cmpsb
sub
pop
xchg
sub
test
jns
rdmsr
push
or
push
das
jo
cmc
mov
push
push
or
xchg
pusha
out
push
jle
mov
push
push
sahf
lcall
cmpsl
cmp
out
ds
cld
jp
lsl
mov
xchg
add
sub
cmp
or
inc
jno
xlat
jnp
mov
test
dec
mov
lea
mov
mov
mov
inc
int
xchg
sub
push
jns
sbb
daa
and
vpshufhw
mov
push
icebp
xor
fimuls
jl
outsb
sti
insl
xchg
xchg
cld
cmc
or
insb
pop
popf
enter
repz
call
cmc
stc
mov
cmp
dec
popa
adc
mov
cmp
and
xchg
shl
mov
xchg
stos
xor
adc
sahf
pop
xchg
aad
stc
mov
mov
and
js
shlb
outsb
ds
mov
lock
lret
push
leave
and
and
xor
clc
or
xor
insl
xchg
out
xor
xchg
mov
xchg
rcl
shlb
dec
pop
outsb
mulb
jbe
jnp
adc
ss
repz
iret
fdiv
sub
test
mov
clc
rorl
negl
idivl
push
mov
outsl
adc
sub
jns
adc
push
lock
push
mov
adc
adc
mov
pusha
testl
sahf
xchg
and
hlt
xor
push
nop
mov
xchg
add
rorl
add
jns
add
loop
pop
mov
repz
push
rclb
aad
xor
pop
stc
or
sub
jle
pusha
scas
pusha
in
or
sbb
ss
jb
rorl
and
push
jp
rcrl
pop
lcall
and
cmp
add
idivl
stc
outsb
ret
push
andl
in
xor
push
jmp
jb
rolb
fidivl
adc
mov
pop
cmp
adc
hlt
push
jmp
pop
add
test
push
sub
sub
add
pop
popl
nop
lods
or
and
add
scas
inc
cmc
repnz
sub
jne
ds
ja
and
loopne
test
mov
and
flds
add
mov
or
popa
lds
cmp
xor
aaa
popa
pop
pop
push
fidivl
sbb
cs
inc
les
lcall
shlb
inc
jne
mov
arpl
mov
cmp
lods
add
cmpsl
adc
or
lret
sbbb
testl
not
ds
jle
xchg
push
pop
mov
mov
enter
cmp
imul
cmp
and
aas
mov
jb
idivl
mov
das
add
mov
cmp
or
jne
stc
push
jmp
mov
mov
mov
notl
cmpl
jae
jg
js
jne
mov
scas
xchg
dec
jb
xor
xor
add
sbb
dec
xchg
dec
in
jmp
mov
jge
xchg
scas
les
jg
hlt
and
or
pusha
dec
jae
mov
js
pop
rolb
adc
jnp
subb
stc
sbb
mov
or
adc
ffreep
rcll
loopne
sub
mov
cli
mov
scas
cmp
in
mov
push
hlt
jae
dec
stc
xchg
jp
hlt
cmpsl
js
cmpsb
push
xchg
pop
add
shrb
dec
shl
xchg
in
dec
xchg
scas
adc
adc
les
jp
out
push
movsb
pop
add
pop
in
push
sbbb
mov
clc
les
cmp
inc
add
rol
xchg
dec
in
adc
shlb
pop
lea
sub
mov
add
call
fldl2e
movsl
lret
push
fldt
xor
pop
fildl
push
add
or
fnsave
jbe
dec
addl
hlt
pop
js
popa
test
les
hlt
jo
or
addb
cltd
movsb
add
shr
xor
lahf
jbe
push
cmp
ljmp
push
out
mov
dec
add
jae
inc
and
popf
or
into
int3
jae
inc
inc
jle
pop
lret
adc
sub
mov
adc
cli
inc
test
add
push
outsl
mov
jbe
nop
out
test
jle
push
or
pop
mov
sbb
mov
fwait
gs
xchg
aas
jbe
pop
cld
push
ss
sub
aad
cmpsl
pop
push
insl
mov
jle
cmp
and
sahf
pop
push
sbb
mov
mov
xor
add
sub
mov
xchg
out
inc
pop
clc
loop
mov
mov
jecxz
std
mov
andl
push
mov
rclb
ss
cmp
arpl
cli
test
mov
ss
xchg
cmc
jne
adc
andl
sbb
mov
fsubr
lret
push
push
or
xchg
sbb
lock
xchg
or
xchg
fsubrs
movsl
lock
cli
jl
xchg
je
inc
lds
push
lret
sbb
dec
nop
jb
sub
mov
cmp
rorb
mov
pop
jb
repz
sbb
sub
adc
mov
stos
lock
lea
xchg
push
lods
cmp
imul
out
iret
mov
popf
xor
lea
or
divb
cwtl
outsb
xchg
aad
pop
call
inc
and
fidivl
sbb
clc
hlt
ret
jb
movsl
lcall
fcmove
out
inc
and
cwtl
insl
rorb
and
inc
int
mov
push
inc
sbb
add
dec
or
testb
cmp
add
pop
pop
xor
inc
outsl
sbb
imul
insb
dec
jb
mov
adc
das
pop
sub
jb
adc
or
prefetch
or
int3
dec
inc
dec
divb
imul
gs
mov
jns
loopne
adc
xor
jl
mov
xchg
adc
mov
mov
inc
movsl
mov
cmp
jecxz
or
je,pn
pushf
add
dec
bndldx
and
js
fwait
pop
mov
sbb
lock
dec
popa
mov
jb
div
jae
jo
cltd
xchg
pusha
repz
add
icebp
push
and
mov
mov
push
jl
add
mov
xor
repnz
test
movsl
aad
and
push
dec
jp
divl
pop
push
or
ds
jp
cmp
jl
aaa
loop
inc
filds
mov
jns
inc
bound
sub
inc
cmp
dec
rcll
cmp
iret
lahf
leave
pop
fs
mov
shl
jle
std
cmp
and
or
aam
mov
jg
imull
sarb
adc
add
enter
mov
sub
add
jae
mov
inc
mov
out
in
sbb
fldl
push
jbe
cmc
mov
cmp
lret
jns
and
dec
xor
clc
aas
adcb
push
mov
out
je
icebp
sub
rorl
xor
pop
xor
xor
je
bnd
xchg
dec
adc
xchg
lret
jns
xor
sub
addb
stos
lock
jo
push
outsl
inc
cmp
and
outsl
out
xor
mov
rorl
std
movb
or
aad
pslld
jecxz
sub
adc
arpl
enter
cmp
pop
adc
je
fsub
fs
sbb
js
aam
pusha
or
mov
jb
mov
jno
push
jns
icebp
mov
leave
pop
iret
xchg
sbb
adc
mov
repnz
jecxz
jmp
and
popa
xchg
icebp
or
sti
inc
inc
je
ljmp
mov
xor
xor
js
xor
xchg
jno
mov
test
and
jae
add
repz
jecxz
jb
es
mov
insl
cmp
dec
pop
rclb
cwtl
xchg
orl
insl
rorl
fdiv
stc
xor
pop
nop
inc
and
mov
xchg
push
imul
sub
insb
ret
negl
jb
lea
int
xor
and
js
mov
add
push
jbe
out
rorl
mov
push
clc
popa
xor
dec
repz
jne
fwait
iret
sahf
cmp
sub
xor
je
icebp
out
push
push
ficompl
xchg
jnp
aam
mov
loopnew
push
ss
cmc
hlt
or
and
pop
xor
adc
js
mov
negl
mov
loope
rcrl
jle
adc
inc
cmpsl
shl
mov
std
cmp
cmpb
add
dec
mov
sti
fiaddl
ret
mov
xor
mov
sub
mull
xchg
fbld
or
in
repnz
jb
jne
lret
ret
insl
adc
in
cmpsl
push
mov
cltd
jns
push
fistl
hlt
pop
stos
cmc
and
sbb
icebp
loope
jle
adc
push
jno
jo
cmp
xchg
cmp
pushf
mov
repz
cmpsl
sub
jmp
mov
loop
adc
or
lock
add
int
xchg
iret
fildl
sbb
push
mov
add
shlb
sbb
loop
inc
and
sbb
test
xchg
daa
loop
sub
jge
js
push
icebp
mov
out
sbb
mov
and
test
inc
adc
push
inc
push
and
orl
mov
or
add
mov
jne
xchg
pop
outsb
xlat
sub
out
xor
xchg
mov
pop
cs
bound
clc
vmread
cmpsl
jae
cmp
sti
cmp
das
shlb
cwtl
cmp
cmp
cmp
mov
jbe
xchg
jle
pop
adc
enter
xchg
sub
ret
push
adc
clc
je
stc
pop
mov
mov
je
ret
pop
dec
jp
cmp
or
mov
in
sbbl
cmp
jb
lods
dec
ja
jae
xor
jbe
xchg
cmp
lods
or
orb
shlb
loopne
mov
stc
pop
testl
insl
and
dec
adc
xchg
inc
cwtl
push
int3
adc
icebp
testb
icebp
mov
or
sub
jns
es
stos
xor
psubw
bound
adc
jmp
adc
mov
inc
push
mov
xor
ja
pop
pop
mov
or
push
lods
pop
je
ret
cmp
sbb
fstpl
repnz
test
mov
pop
xchg
bnd
xchg
dec
xor
or
mov
xor
push
adc
sub
pusha
mov
fwait
stos
sbb
push
xchg
or
sub
sbb
repnz
sub
cmp
mov
adc
add
cmp
sbb
fbld
stos
mov
aad
inc
jbe
add
xchg
xor
push
int
out
xor
cmp
jmp
push
push
sti
cmp
add
inc
inc
xor
test
push
mov
dec
push
les
inc
rep
out
mov
adc
adc
jns
or
ret
stc
add
add
mov
add
mov
cmp
loop
adc
and
test
sub
adc
and
adc
inc
inc
mov
adc
dec
cmp
push
mov
sbb
popa
sbb
jle
popf
int3
push
xchg
mov
popf
or
mov
imul
rclb
pmuludq
sahf
mov
aas
shlb
movsb
push
sbb
cmc
jnp
stc
test
pusha
inc
ja
adc
cmpsb
or
loopne
pop
inc
repnz
cmpl
pusha
xchg
jne
sti
adc
movsl
sub
mov
and
pop
jns
inc
pusha
lahf
jo
loope
pusha
mov
add
dec
lret
sbb
div
popf
movsb
clc
loope
cs
or
repnz
or
mov
dec
sbb
push
adc
jnp
cli
test
imul
sub
es
js
pop
sbb
js
lcall
push
es
loop
jo
cs
loop
sbb
xchg
das
test
in
push
add
adc
cmp
aas
mov
es
andb
push
xor
stc
lea
xorb
aam
mov
mov
jb
jne
adc
or
jae
mov
jmp
xor
sahf
ror
incl
pop
jg
inc
or
pushf
add
adc
addl
jge
js
mov
sub
lock
in
cmp
mov
xchg
icebp
inc
and
into
mov
xor
fiaddl
or
cmp
mov
xor
add
jno
add
rcll
jae
fldcw
std
mov
iret
mov
notb
int3
cmp
sbbl
xchg
popa
pop
test
loopne,pt
mov
sub
out
xchg
cmp
mov
nop
test
pop
addb
int3
aam
mov
ficompl
mov
mov
sbb
call
js
inc
xor
aam
orb
jno
repz
mov
mov
inc
adc
les
mov
sbb
icebp
inc
jbe
out
js
push
mov
add
bound
sub
test
jbe
mov
dec
jo
call
jg
or
call
sub
fildll
dec
popa
stos
jae
neg
int3
mov
mov
outsl
clc
inc
or
ret
imul
cwtl
inc
cmp
mul
inc
and
in
push
jl
cmp
inc
sti
xor
xchg
popa
push
jne
mov
jns
adc
call
xor
imul
loopne
ljmp
stos
mov
stos
cmp
icebp
cmpb
orb
lahf
and
xchg
pop
mov
scas
sub
icebp
add
mov
mov
xchg
xchg
push
xor
jno
fstpl
aas
daa
jl
idivl
xchg
xchg
push
add
mov
dec
jno
xchg
mov
add
pusha
cmpl
mov
leave
jnp
push
cltd
xor
outsb
cmp
in
jno
push
in
cmpsb
dec
or
mov
mov
test
imulb
out
xchg
jle
mov
dec
xchg
enter
mov
sbb
je
test
iret
pop
xor
adc
jae
test
repz
bound
and
xor
and
inc
mov
testb
leave
jae
adc
addb
adc
roll
pop
call
cwtl
inc
jns
cmp
int
add
rcr
shrb
mov
aad
fistl
je
mov
movsb
dec
sahf
mov
mul
gs
stos
movsl
rolb
lock
cli
dec
insb
inc
xor
into
cmp
inc
adc
popf
mov
xchg
cmp
pop
enter
cs
icebp
rol
std
push
sub
add
cli
in
mov
lret
enter
mov
or
js
jnp
mov
push
lret
aad
add
cmp
ret
add
movsb
fs
mov
add
push
inc
arpl
cmp
hlt
cmp
mov
adc
orb
push
push
cwtl
orb
xchg
ss
pop
push
and
ljmp
mov
frndint
fisttpll
fistpll
xchg
lcall
clc
aam
xchg
sbb
loop
jb
cmp
xchg
out
add
pushf
adcl
lcall
jno
xchg
cmp
hlt
xorl
pop
lock
add
push
mov
sub
xor
je
repz
aas
and
mov
fs
jb
popf
adcl
movb
cld
lock
or
hlt
mov
adcl
xchg
cmc
int
mov
inc
aas
icebp
inc
inc
fs
mov
cmpsl
jb
mov
jmp
mov
mov
or
stc
loope
jmp
icebp
in
int
pop
stos
adc
cmp
test
fsubs
cs
and
xchg
les
mov
dec
mov
lea
adc
sub
push
mov
lock
aad
mov
out
sub
inc
xchg
cmc
mov
ficompl
outsb
push
dec
dec
push
movsb
pop
and
dec
or
fiadds
loopne
inc
imul
sub
or
lock
dec
inc
inc
pop
sub
pop
popf
mov
imul
or
jbe
xchg
mov
add
cwtl
pop
add
push
jae
inc
lret
or
fcmovbe
ss
mov
cmc
mov
test
xchg
mov
inc
jno
mul
or
mov
sahf
cmp
cmp
addb
xor
cmp
adc
imulb
pop
shrb
cmp
xor
pop
dec
add
fldcw
pop
outsb
call
and
jecxz
lods
cmp
xchg
jp
shl
outsb
das
ficoms
scas
xor
xlat
sbb
pop
pusha
ss
insb
stc
sarl
sbb
pop
fldcw
out
mov
pop
rorb
inc
notl
shl
mov
xchg
lret
mov
mov
sbbl
xor
mov
int
stos
xor
xorl
xchg
repz
cli
test
mov
inc
dec
cli
cmpsb
sbb
movsb
sub
outsl
rcrb
dec
repnz
cmpl
lahf
sbb
jp
xchg
ljmp
movsb
std
cwtl
mov
ja
mov
lahf
and
pop
loope
cmp
imul
sbb
enter
and
jp
outsl
into
jne
push
enter
mov
imul
xchg
or
jg
jae
xor
mov
xchg
cmp
divb
mov
aaa
pop
xchg
push
adc
lea
adc
movsl
pop
imul
mov
stos
jb
bound
pop
jnp
and
ss
add
gs
repnz
pushf
out
pshufw
imul
cmpsb
sbb
in
dec
or
add
ss
cmp
jb
psrad
pop
addb
jmp
cs
repz
inc
push
pop
sbb
sub
cmp
jns
shlb
dec
mov
call
or
or
sbb
add
pop
lret
adc
repnz
xor
lock
pop
add
pop
xor
adc
stc
cmp
xor
and
into
out
sarb
jg
int
add
mov
popa
pop
mov
cmp
push
mov
mov
adc
cld
divl
mov
out
adc
je
js
push
sahf
cmp
sbb
dec
popa
stc
fildll
mov
or
imull
jne
mov
jns
mov
rclb
cmc
test
test
adc
arpl
cmp
cmpsb
and
mov
jb
adc
sahf
shlb
cmc
loop
sti
lods
ss
out
sub
sbb
rclb
addr16
pop
adc
stc
mov
jle
dec
dec
pop
inc
adc
andl
stc
and
xchg
cwtl
or
or
ljmp
sub
and
xor
orl
or
hlt
mov
dec
mov
in
or
xchg
jns
jmp
jg
stc
roll
inc
push
cli
dec
sbb
daa
xchg
adc
ficompl
xchg
jbe
mov
push
loopne
test
xor
setb
mov
inc
add
push
pop
add
mov
sub
jbe
cwtl
push
sbb
fisubs
outsl
inc
lods
punpckhdq
sbb
dec
hlt
test
adc
jle
push
out
leave
xor
jne
daa
hlt
mov
xor
adc
lods
mov
adc
sbb
lcall
mov
and
cwtl
pusha
jb
push
movsl
ficomps
jb
adc
lret
cwtl
lock
hlt
xor
push
dec
pop
mov
cmp
and
insl
xchg
mov
pop
jg
xor
or
adc
hlt
gs
hlt
xor
or
cmc
adc
xor
push
push
add
out
cmovnp
lock
outsb
dec
sbb
pop
dec
faddl
and
add
and
test
and
mov
sub
push
dec
lcall
mov
add
out
aam
jle
jl
lock
je
in
ds
mov
je
repz
mov
xor
adc
pop
test
enter
jle
insl
ficoms
sub
cmp
push
jb
lahf
loopne
cwtl
pushf
and
add
aaa
daa
mov
imul
pusha
shrl
sahf
je
sti
popa
mov
dec
jno
out
xchg
psllw
dec
lock
out
ret
push
sbbb
shll
dec
push
or
sbbb
sahf
xor
mov
sub
lock
or
repz
in
add
mov
shl
jbe
mov
repz
loopne
or
push
inc
push
or
fucomi
push
jmp
pop
adc
and
lret
add
xor
out
notb
cs
stc
fwait
js
int
mov
out
inc
jae
loop
jne
mov
cmp
ds
dec
mov
and
cmp
inc
jno,pt
xor
iret
jne
jp
xchg
add
iret
and
icebp
or
pop
dec
dec
mov
xor
jbe
ret
mov
filds
jo
xchg
subl
cmp
mov
outsb
xchg
adc
push
adc
push
shlb
push
xchg
push
inc
movsl
aam
ljmp
push
test
ffreep
adc
ljmp
add
cmp
es
shll
fcoml
dec
stos
test
jl
inc
inc
or
add
adc
pusha
lahf
push
mov
mov
std
adc
jle
std
rcl
and
mov
and
add
jno
mov
dec
je
lock
add
lea
cmp
fdivp
xchg
push
xchg
jle
xchg
div
adc
sbb
std
mov
jb
pop
mov
xor
jle
jae
rep
mov
arpl
repz
je
outsl
add
jecxz
test
xchg
sahf
or
lock
stc
cmpsl
hlt
cmp
adc
lahf
xchg
insb
lock
pop
inc
or
mov
aas
push
mov
orb
and
bound
test
das
push
testl
aad
lods
iret
aaa
mov
mov
clc
inc
adc
repz
jle
test
inc
pop
cmpsl
test
push
stc
or
test
repz
push
pop
sbb
loopne
je
adc
cmp
mov
sbb
xchg
stc
push
mov
mov
movsl
pop
fwait
std
das
daa
pop
fcoml
jo
mov
outsl
or
pop
pop
xchg
ljmp
xor
out
xchg
adc
jp
ret
push
mov
pop
outsb
outsb
test
js
inc
out
mov
notb
sbb
lds
adc
mov
lret
and
scas
inc
sub
out
jnp
js
repnz
andb
sti
pushf
xor
inc
push
mov
mov
pop
sti
or
mov
loop
mov
sub
or
push
scas
and
repnz
lahf
das
mov
and
into
push
mov
scas
mov
icebp
add
stos
adc
sub
adc
inc
mov
mov
or
xchg
push
jns
pusha
nop
imul
push
hlt
jae
mov
add
or
movsl
stos
pop
xchg
cld
cmp
mov
cmc
or
xor
mov
xor
jo
outsl
shl
outsb
movsl
inc
jno
add
pop
push
orb
jle
cmp
sbb
jp
xchg
adc
lock
add
xlat
adcb
or
and
clc
ja
ret
mov
sub
inc
inc
testl
insl
lock
push
test
rolb
add
cwtl
pop
lock
les
shl
repnz
stc
ret
mov
sbb
and
push
out
lret
push
into
jg
loope
dec
dec
andb
mov
mov
icebp
outsl
dec
lcall
push
adc
insb
out
iret
mov
push
adc
jg
mov
mov
imul
xchg
notb
fucomip
push
adc
mov
clc
ja
divl
mov
push
repz
sub
stos
adc
stc
inc
stc
push
sbb
jb
push
jne
xchg
shl
js
jne
gs
cmp
std
and
std
les
lock
jne
xchg
fadds
sub
cmp
sahf
inc
nop
cld
aas
adc
movsl
push
cmp
fstps
stos
divl
xor
mov
xchg
add
xchg
into
push
pushf
jnp
je
mov
cmp
mov
push
xor
xchg
roll
pop
adc
add
cmp
push
fildl
sti
repz
add
adc
adc
add
pusha
ret
jp
add
test
inc
xchg
xor
es
bound
adc
jo
shll
sbb
ja
pusha
hlt
and
enter
sbb
jecxz
rcrb
jg
or
ret
cwtl
or
test
push
mov
add
pop
fstl
nop
ljmp
fstpt
ss
stc
cmp
cld
push
cs
adc
dec
sti
outsb
or
inc
call
mov
or
adc
pusha
test
shlb
add
add
repnz
stc
into
inc
js
adc
into
cmp
ds
and
cmp
test
ds
jns
pop
aam
pop
push
or
jle
cmc
out
in
push
das
shll
out
sarb
mov
xor
push
dec
pop
sahf
ljmp
jo
jae
repz
xchg
mov
xor
js
jnp
ja
ja
call
data16
adcl
jle
dec
incb
sbb
cmpb
or
push
mov
inc
mov
lret
jg
outsl
data16
or
sahf
cmp
lcall
pop
aam
mov
cmpsb
sbb
cmc
sub
xor
xchg
sti
lea
bound
ljmp
jl
xor
popa
into
insb
jbe
sbb
cs
cmpsl
ret
insb
mov
inc
std
inc
mov
lcall
ds
mov
dec
dec
mov
cmp
ret
mov
sbb
lahf
std
and
jp
fists
cmp
les
es
jl
push
clc
ss
lahf
inc
stos
cmp
fimuls
cmp
inc
jns
inc
add
or
roll
push
fwait
es
push
inc
loopne
mov
repnz
pop
adc
addr16
fildll
lock
int3
pop
les
js
testb
rorb
pop
lahf
ret
ja
xchg
xor
add
fs
movsb
loopne
push
int3
jmp
lret
sbb
add
addr16
fisubl
inc
or
iret
sub
xlat
cwtl
in
push
jae
popa
lods
pop
mov
test
mov
sbbl
push
mov
gs
jb
push
dec
addr16
cmp
orb
jg
shlb
mov
jge
mov
daa
adc
xchg
icebp
xchg
or
pop
das
mov
test
cs
stos
sahf
sbb
sbb
adc
in
xchg
xchg
pop
test
push
mov
shll
roll
int
movsb
repnz
sar
xchg
dec
mov
push
add
xchg
hlt
cmc
adc
or
pop
mov
push
scas
push
es
xchg
pop
bound
xchg
push
cmp
or
mov
mov
jno
and
fidivs
add
fisttps
push
scas
sub
adc
cmc
cmp
lcall
jle
ja
mov
jp
and
cmp
xor
push
add
repnz
add
add
pushf
xchg
add
mov
mov
lods
lcall
sub
push
or
sub
pop
dec
mov
push
xor
sbb
loop
sub
adc
rclb
rorl
popa
test
mov
aad
lcall
dec
push
mov
sub
adc
out
cld
xchg
add
pop
pop
lock
jge
push
xchg
in
cmp
imul
sti
inc
lods
jg
mov
fbld
sbb
shll
mov
es
orb
cltd
sbbl
ja
mov
mov
rcrb
xchg
pop
sub
fisubl
jo
adc
shlb
icebp
pop
test
push
sub
inc
fisubrl
ja
push
inc
fimuls
cmp
jmp
rcrb
leave
xchg
out
add
in
mov
and
xchg
push
ss
pop
xor
in
xchg
xor
add
ja
cmpsl
sbb
add
idiv
add
pop
mov
pop
jo
aas
fisubl
and
call
pop
sti
mov
mov
icebp
idivl
xchg
inc
stos
jb
adc
and
divb
mov
cli
xchg
and
inc
mov
add
into
push
out
and
je
pop
mov
inc
lock
mov
lds
bndldx
jo
inc
jno
jb
mov
or
push
fists
mov
xor
push
add
add
mov
xor
push
sub
lret
or
push
or
mov
decb
mov
cmpsl
aad
mov
pop
jae
rol
ret
pop
jle
mov
jno
or
pop
cmp
fildl
xor
push
mov
mov
inc
push
test
cmpb
es
dec
aaa
in
xor
cltd
test
push
cmpsb
lds
cwtl
fs
outsb
clc
fsubrs
cmp
inc
mov
sahf
xor
dec
je
jnp
ficompl
int3
stos
push
mov
mov
and
or
or
lahf
sub
jno
mov
pop
pop
scas
ds
jmp
popf
xor
int3
pmullw
sti
or
jo
mov
divl
adc
adc
mov
icebp
ja
jne
xor
imull
out
xor
dec
sub
jb
test
adcb
xor
adcb
std
mov
cld
adc
or
push
and
dec
mov
mov
mov
scas
movsb
cld
and
leave
and
jge
daa
push
sbbb
push
mov
add
repnz
lfs
adc
push
cmc
out
and
mov
or
ja
das
popf
lods
mov
ljmp
cmp
push
mov
or
fld
cmpsl
cmpsb
cmp
ss
sar
cltd
add
cmpsl
cli
fsubs
mov
add
pop
gs
xchg
sbbb
adc
or
jle
in
and
adc
mov
ret
xor
cwtl
sub
push
push
and
adc
dec
push
hlt
dec
addl
mov
lock
mov
and
test
filds
in
shll
insb
pusha
loop
jno
push
stos
sahf
xchg
mov
movsl
sarl
mov
adc
jb
dec
jecxz
or
hlt
lea
inc
sti
in
pop
cli
adc
sub
mov
inc
jmp
push
sahf
aad
imul
mov
push
leave
xchg
xor
or
enter
div
add
aam
sbb
pop
sub
xchg
repz
ds
inc
xor
and
mov
jb
sub
call
jb
dec
cmpsb
jecxz
flds
dec
cmp
pop
xor
xor
out
lcall
bound
adcb
jno
add
stc
pushf
cmpsl
mov
iret
inc
dec
and
pop
jb
add
js
adcb
sbb
cmpsl
adc
jl
js
arpl
push
test
inc
cltd
gs
adc
mov
ret
dec
int3
sbb
daa
or
sbb
add
cmp
fsts
lret
xor
loope
adc
mov
mov
inc
push
mov
rcrl
cmpsl
xor
jae
arpl
cs
push
stos
mov
push
hlt
sbb
dec
pusha
add
rol
mov
or
lea
adc
push
repnz
or
inc
mov
cmp
mov
aam
adc
cmovns
mov
mov
lcall
sbb
add
xchg
loop
fstp
cmc
cwtl
and
and
adc
sbb
mov
xchg
pop
jg
stc
inc
and
jnp
inc
xchg
aas
in
test
lods
jg
imul
ljmp
in
or
jp
adc
pop
jge
cmpl
or
sahf
fidivrl
xchg
cltd
repz
cmpsb
jl
mov
insl
add
inc
stos
sbb
pop
ja
scas
and
fidivl
push
sarb
push
push
in
sbb
xor
pop
push
and
add
or
les
adc
pop
in
clc
add
mov
xchg
cmp
hlt
mov
add
mov
jle
mov
inc
outsl
mov
mov
shl
jp
fdiv
mov
popa
sbb
xchg
fs
xchg
sub
nop
divl
lods
mov
sub
lock
cmp
inc
gs
pop
aad
or
xchg
and
push
adc
test
shr
fisttps
addb
mov
dec
sti
cltd
pop
or
add
ja
add
or
sysexit
test
sub
inc
test
xorl
rcrl
xor
lcall
sub
mov
sub
pop
out
xchg
push
lcall
adc
orb
or
inc
jg
nop
jno
rorb
adcl
repnz
push
ss
aad
loopne
jae
icebp
lcall
jno
rorb
sbb
pop
fildl
sub
lret
mov
xorb
inc
jb
je
adc
js
or
js
push
mov
sbb
push
call
lods
movsb
test
push
mov
adc
shrb
jbe
adc
mov
aas
inc
faddp
sbbb
in
sbb
mov
dec
jle
scas
or
lods
push
enter
add
mov
add
or
or
adc
add
or
bound
paddusw
and
mov
andl
jnp
clc
rorb
xchg
jecxz
cmp
pop
adc
jp
add
es
sub
add
inc
xor
je
inc
dec
js
repnz
outsb
out
subl
repz
pushf
mov
dec
push
jp
loopne
xor
pop
les
dec
mov
adc
sub
jb
aam
outsb
or
sbb
data16
adc
xor
pop
push
lcall
xor
jge
push
decb
mov
xor
ljmp
popa
clc
adc
fsubs
cld
je
cmpb
stc
push
sub
mov
mov
popa
xchg
subl
mov
xor
clc
and
and
lods
sbb
push
and
mov
popa
out
arpl
adc
into
sbb
add
es
push
add
stc
jle
mov
subb
dec
mov
jo
cmp
icebp
shll
fsts
xor
xchg
add
sub
push
jns
mov
in
mov
outsl
loope
or
loope
jo
dec
loope
jnp
jno
test
cltd
jl
add
aas
lods
mov
clc
and
sub
lock
out
aam
dec
pusha
sbb
sub
mov
and
repz
xchg
xor
pop
pop
hlt
cmp
xor
in
mov
repnz
cmc
hlt
hlt
push
dec
sbb
xchg
roll
imulb
jl
scas
outsb
cmp
bound
pop
dec
dec
in
jle
mov
sbb
pop
jl
jp
and
aaa
xchg
push
pop
cs
lods
xchg
outsb
test
cmp
mov
push
push
les
jbe
jne
sbb
dec
dec
inc
xor
adc
outsb
lock
loop
cmp
inc
mov
aas
cld
mov
jnp
pop
pop
mov
stc
push
or
jno
out
shlb
adcb
or
xlat
lret
push
adc
adc
mov
push
adc
cmp
inc
xor
fisttpl
fmull
push
inc
stc
cmp
or
movsb
jecxz
mov
addl
mov
jl
xor
cmc
mov
mov
push
mov
lds
jnp
add
in
mov
jp
push
push
pop
or
cmpsb
mov
sarl
testl
cmp
test
mov
mov
sbb
pop
xchg
mov
pop
sbbb
mov
int3
or
mov
push
dec
and
jno
pop
jb
fcmovnbe
hlt
inc
inc
mov
pop
sbb
sbb
cmp
push
dec
lahf
lcall
mov
mov
add
xor
out
insl
push
mov
and
push
mov
aaa
pop
fcomip
lods
jb
xchg
mov
addb
repz
push
or
test
gs
mov
mov
jg
inc
andb
jecxz
xorb
xchg
adc
ds
sub
sbb
sbb
inc
xchg
xor
repnz
add
stos
aad
fcomip
mov
aad
mov
xor
icebp
or
imul
in
popa
mov
cmp
mov
pushf
lahf
inc
and
stos
mov
push
adc
mov
inc
imul
fdivrs
add
sarb
xor
outsb
jns
inc
xor
sbb
jg
fwait
jne
or
sub
cmpsb
clc
in
dec
ficompl
xchg
adc
fst
mov
mov
outsl
ja
dec
mov
mov
notb
or
add
fyl2xp1
jle
fbld
jmp
adc
inc
stc
shll
pop
ficoms
mov
xchg
hlt
clc
sub
fwait
xor
mov
sub
sahf
repz
pop
xchg
jbe
xchg
sub
adc
ljmp
pop
xor
pop
pop
pop
or
push
lcall
cltd
pop
adc
negb
clc
call
push
adcb
jl
adc
or
sarb
into
dec
repnz
clc
repnz
loopne
lret
add
inc
ja
cmpb
xor
push
cmp
adc
adc
add
pop
mov
shll
les
mov
jle
dec
mov
mov
test
or
cli
cmpb
dec
sbb
xor
adc
adc
cmp
movsb
xorb
sbbl
add
inc
das
cmp
pusha
movl
or
popa
subl
cld
in
inc
mov
fiadds
mov
jl
push
ret
aaa
test
fwait
xor
imul
repnz
out
mov
loop
jl
das
push
add
cmp
rorl
shlb
out
nop
fisubl
lret
sbbl
mov
sub
pop
cwtl
mov
lock
mov
or
imul
icebp
or
fisttpl
mov
and
mov
int
andl
cmp
add
loop
jbe
stc
xchg
iret
stc
popf
xor
push
xor
sub
jb
adc
add
shrl
loopne
and
pop
aam
mov
loop
adc
int
push
aad
jb
dec
mov
fcmovne
movsb
ja
dec
pop
jg
mov
inc
xchg
push
mov
sub
stc
lahf
jle
popa
into
cmp
push
test
cli
mov
cmp
mov
fidivrl
divb
mov
xchg
sbb
sbb
sub
pop
add
cmp
pop
mov
mov
xchg
xchg
sar
leave
push
xchg
add
mov
xchg
adc
cmp
iret
mov
test
cwtl
ss
mov
xchg
add
jae
sbb
jnp
movsb
and
lock
push
cwtl
xor
sub
push
fwait
push
bound
das
xchg
ret
mul
mov
kxorw
or
stc
jl
ds
sbb
xchg
out
dec
pop
jbe
jl
cld
xor
pusha
or
mov
loope
jnp
cmp
jl
mov
xchg
das
js
outsb
pop
fdivs
jb
scas
jecxz
decb
xorb
xchg
les
sbb
jne
jle
popa
js
mov
repz
or
lret
jecxz
inc
jne
add
outsb
ss
lds
faddl
mov
inc
mov
jbe
xchg
jnp
cmp
or
das
add
xchg
adc
fwait
jne
les
icebp
cltd
je
sub
mov
adc
and
xor
jo
push
cmp
adc
stos
cmp
test
xor
xchg
divb
cmp
push
cmp
add
das
test
or
dec
pusha
rcll
and
or
jl
xchg
clc
ds
repz
sub
sbb
mov
mov
xchg
push
movsb
sub
imul
sarl
push
out
subl
repz
and
lock
pop
mov
mov
and
dec
mov
loop
cmpb
rcll
jne
sbb
inc
ret
pop
add
nop
out
sahf
cltd
push
jnp
adcb
es
jae
ljmp
outsl
dec
repnz
push
or
mov
out
push
in
lcall
fbstp
cld
clc
jecxz
fidivrl
xor
sub
cmp
mov
ret
push
bound
push
or
or
add
nop
rorb
pop
icebp
xor
jb
outsb
add
mov
fimull
mov
push
and
sbb
adc
jns
jmp
push
jae
aam
sbb
pop
pop
dec
and
stos
rclb
sub
aas
mov
pop
and
idivl
mov
jnp
mov
jae
mov
js
jns
stc
jb
push
and
lea
cmpsb
mov
inc
jo
fisubs
js
lret
push
inc
mov
lock
test
fisttps
das
hlt
loop
xor
dec
je
sarl
aad
js
adc
shlb
fwait
cmp
inc
mov
mov
imul
jb
or
pop
or
in
mov
sbb
dec
aad
call
or
repnz
or
rcll
adc
xor
or
andl
popf
or
mov
sbb
jnp
push
mov
dec
popa
push
adc
or
decb
push
pushf
lahf
jg
sub
jo
xorb
pop
nop
push
or
sub
mov
pop
adc
jg
faddl
push
xlat
rclb
je
divl
sub
xchg
lods
sub
xchg
jle
and
jb
out
mov
ja
mov
dec
fldcw
icebp
lret
es
sub
data16
mov
hlt
rolb
test
ja
adc
repnz
sub
xor
xorb
add
mov
stc
jae
xor
js
pop
clc
cmp
mov
sub
cli
add
cmpb
add
pop
mov
pop
jae
cmpb
mov
nop
mov
adc
div
jbe
sub
add
add
fdiv
push
cli
sbb
ret
sbbb
add
pop
scas
fdivr
add
adcb
inc
mov
cmc
jnp
cmp
push
xlat
div
push
in
cwtl
test
ss
fdiv
add
jl
cld
lock
js
fsubrs
cld
jb
xchg
adc
cwtl
xchg
cli
add
sbb
mov
rcrb
cwtl
cmc
lock
xor
xor
divl
pop
cmpb
ss
cmc
pop
jbe
fdivs
hlt
jg
js
sub
jge
icebp
sbb
fstps
xorl
pop
add
call
cmc
adc
xor
testb
mov
adc
ss
add
repnz
sbb
std
mov
cmp
repnz
pop
or
xor
mov
ss
or
aam
js
sbb
and
and
mov
pop
ja
add
std
sbbb
cmp
fnstsw
ss
sbb
dec
adc
mov
sbb
nop
fldl
stc
jo
outsl
adc
cltd
xor
jae
mov
cmp
insl
imulb
dec
or
or
mov
cwtl
jo
jns
dec
add
stos
movsb
ljmp
rcrb
movsl
push
mov
decb
divb
lock
das
cmp
sub
cmc
cmp
adc
push
mov
div
adcb
mov
add
cmp
fidivrs
aam
mov
cs
into
push
js
mov
sbb
clc
dec
clc
orb
mov
and
xor
test
shrb
dec
adc
popa
sub
data16
jne
adcl
mov
add
add
rclb
ja
jne
fwait
jae
je
mov
and
loope
call
or
xor
adc
or
icebp
and
cmpb
sar
mull
jne
je
stc
addr16
hlt
jl
or
jo
or
xchg
add
dec
jbe
cmpsb
scas
add
mov
mov
mov
mov
loope
add
push
jns
mov
add
sub
adc
push
stc
lods
jns
adc
sahf
and
add
xor
mov
push
aaa
dec
nop/reserved
fmuls
inc
insl
shlb
and
push
out
adc
sahf
xor
and
js
cmp
inc
jbe
fs
inc
into
cmp
mov
dec
sub
int
in
adc
pop
addr16
lock
pop
pop
mov
repz
lods
ja
jmp
mov
dec
lcall
jle
xor
push
push
cld
stos
inc
add
jecxz
cmp
das
push
xchg
addr16
mov
pop
sahf
adc
repz
movb
roll
xor
ljmp
xchg
jle
cld
into
fimull
jle
jp
jge
inc
mov
popa
cld
int3
mov
js
or
fdiv
inc
mov
cmp
dec
xorb
call
idivl
jle
cli
sbb
sbb
cmp
or
nop
inc
mov
cs
mov
mov
mov
icebp
in
jl
add
lock
mov
cmc
xor
jbe
cmp
cmc
insl
sbb
test
fs
out
push
lcall
mov
adc
mov
pushw
in
cld
sbb
lahf
mov
jo
jno
cmpsl
sti
arpl
jmp
adc
and
cmp
ljmp
test
inc
dec
push
fistps
lea
fistl
or
ljmp
insl
xor
clc
fstl
jp,pt
icebp
sbb
mov
sub
loope
mov
adc
or
lock
ss
mov
sub
jb
cmp
fsubl
jp
adc
hlt
sbb
mov
ss
push
cld
mov
push
jns
sti
cmpl
xor
rolb
xchg
fildll
inc
add
cli
jb
xchg
mov
xchg
cli
not
mov
sbb
clc
push
sti
and
cmp
push
andb
je
fimuls
or
sub
nop
sbb
xor
jg
out
pushf
mov
inc
dec
mov
or
mov
lea
fprem1
es
mov
jmp
xor
mov
iret
rolb
push
fbld
xchg
adc
push
loopne
or
sbb
pop
std
push
clc
jmp
loope
cmp
xchg
add
lods
adc
mov
dec
add
inc
dec
adc
push
in
fstpl
mov
mov
int
xchg
faddl
push
pop
aad
cmp
push
mov
das
repz
jo
adc
cmp
add
scas
mov
outsb
scas
std
or
push
pop
push
js
hlt
int
std
lds
sbb
cmp
cld
push
outsb
or
mov
lret
push
or
inc
adc
arpl
lods
jp
dec
or
dec
scas
jno
jle
out
sub
cld
jb
rep
dec
add
sbbb
pop
loope
jmp
mov
adc
movsb
popf
push
aam
in
jb
lcall
xchg
sub
push
ss
sti
scas
xchg
xchg
inc
fstl
pop
inc
mov
inc
inc
fistpl
insb
clc
inc
stc
mov
add
stc
scas
push
sub
xor
xorl
add
sbb
xor
repnz
jl
pop
mov
testb
repz
xchg
sub
lea
pop
popf
leave
incb
jg
icebp
add
pop
icebp
arpl
sub
cwtl
jle
cli
add
fisubl
jge
loop
dec
sub
icebp
jb
mov
int3
adc
jae
pop
repnz
ja
mov
pop
mov
jge
int
or
mov
jge
jne
mov
das
adc
push
icebp
jae
mov
or
cmc
mov
xorl
push
pop
pop
xchg
repz
cli
js
adc
mov
pop
adc
ror
and
add
xor
divl
pop
sub
lock
fistl
sarl
mov
inc
das
stc
push
xor
pop
aam
lea
test
xchg
mov
icebp
pop
mov
hlt
jne
mov
ja
jno
leave
adc
scas
sti
pop
stc
jb
inc
push
jg
icebp
repnz
cwtl
xor
jb
bound
hlt
xor
adc
mov
mov
jbe
data16
mov
xlat
cmp
das
cwtl
push
rcrb
cmp
cwtl
test
pop
add
or
cltd
sarb
adc
xor
insl
sahf
js
xor
push
div
or
cwtl
inc
inc
stos
jbe
or
or
sub
xchg
mov
adc
mov
lldt
mov
inc
adc
sbb
int
rorb
clc
pop
add
jb
hlt
inc
or
adc
sub
mov
data16
mov
push
hlt
mov
adc
xor
icebp
add
mov
cmpsl
outsb
or
push
shll
addb
mulb
jl
sti
shrb
icebp
pop
jne
or
sbb
sub
js
movsb
adc
push
push
xchg
push
sbb
add
or
and
dec
and
notb
leave
hlt
icebp
xor
adc
cmpb
movsl
add
pop
or
cli
mov
dec
fldenv
mov
dec
icebp
and
ss
jl
pop
repz
scas
ss
cmp
std
sub
hlt
ret
add
faddl
jmp
outsl
adc
lock
push
in
jbe
add
push
and
cmpsb
jb
push
negb
mov
stc
dec
ss
lret
addr16
cmpb
ret
pop
dec
push
mov
mov
dec
adc
fs
sub
pop
or
icebp
leave
cld
in
pop
pop
xor
lock
mov
cmp
subb
jns
mov
xor
jle
cmp
xor
jae
or
into
mov
out
jns
or
cmp
in
pop
ja
sti
pop
mov
or
js
arpl
hlt
inc
icebp
mov
fildl
dec
and
jp
xchg
lods
xor
pop
pop
dec
mov
xchg
dec
es
cmp
mov
or
xor
adc
scas
cmp
stos
inc
mov
mov
pushf
mov
jl
hlt
js
xor
pushf
je
int3
push
or
icebp
outsl
mov
or
mov
std
jo
jle
rcrl
sub
jb
mov
adc
mov
stos
push
dec
sti
jbe
xor
fwait
outsb
push
xor
std
cmp
cmp
lahf
test
cwtl
push
cmp
jnp
xchg
mov
cmpb
xor
jne
sub
int
jl
sub
lock
aad
mov
xchg
or
or
or
add
dec
stc
adc
xlat
movsb
jecxz
shlb
and
adc
adc
xor
xor
cmp
jl
pop
jle
data16
mov
outsl
xor
cli
ja
jb
pop
xlat
mov
flds
daa
ss
mov
mov
adc
fprem1
inc
cmp
add
lock
cmp
push
dec
mov
arpl
xchg
push
jge
mov
sbb
fstpl
icebp
scas
cmp
clc
jge
dec
jno
mov
adc
lock
mov
push
icebp
pop
and
test
sbb
dec
scas
addb
and
addb
sbb
or
out
enter
or
jl
ljmpw
inc
insb
out
sub
jae
out
add
or
push
adcb
push
fnsave
or
mov
jl
sbb
xor
inc
sbb
fstpl
push
add
test
mov
stc
ds
lea
adc
lock
out
dec
mov
add
jae
sub
adc
cwtl
sbb
mov
js
hlt
incb
add
inc
xchg
xchg
mov
xchg
dec
xor
imul
in
sahf
jnp
xor
inc
xchg
xor
js
cwtl
hlt
add
in
stos
sti
icebp
orb
popa
jmp
mov
ror
cs
aad
mov
push
or
test
push
push
icebp
mov
push
ljmp
dec
lea
mov
and
cmpb
xchg
lret
jne
push
enter
mov
stc
jae
xor
out
jns
xchg
xor
push
jecxz
movsl
lods
push
xchg
xchg
cli
cmc
loop
fists
insl
loop
mov
es
xor
ds
sarb
lret
and
or
and
andl
aaa
mov
pop
sub
movsl
mov
in
sbb
stc
xlat
dec
fs
jge
cwtl
mov
xlat
aas
cmp
fs
fldcw
jns
icebp
xchg
pusha
dec
dec
cmpsl
in
inc
fs
adcb
or
andl
and
fists
xor
or
or
out
pop
cmpl
aaa
pop
xor
popf
js
xor
or
push
sbb
lock
add
sub
push
jg
int3
mov
and
test
mov
adc
andl
sbb
and
mov
add
cmp
and
inc
jb
ficompl
mov
ficoml
add
shrb
mov
push
sbb
jbe
add
enter
js
xor
adcb
icebp
mov
jo
mov
nop
inc
push
stc
cmp
mov
and
mov
stc
jnp
repnz
sub
lock
jno
and
xchg
stos
xchg
jl
cmp
push
mov
cld
sbb
jle
mov
fxch
mov
mov
and
inc
pusha
xor
scas
lret
push
ds
repnz
jle
icebp
icebp
add
ret
mov
sarb
mov
xor
sub
cmp
jb
cmc
xor
and
jne
test
jbe
jns
cmp
ja
idivl
xor
jb
clc
xor
add
or
jns
stc
cmpb
mov
and
andb
icebp
add
loop
lret
movsb
nop
sahf
addl
mull
jo
aas
mull
daa
cli
popl
insl
popl
cmp
cwtl
lods
out
sbbb
push
dec
or
test
sahf
mov
push
sbb
xor
fistpll
cmp
jo
add
lock
xor
jecxz,pn
xchg
xchg
and
inc
shl
mov
pop
ja
xchg
cld
fldl
pop
cltd
ss
cmp
ficoml
in
out
mov
out
das
push
cs
imul
inc
js
dec
sbb
aad
insl
push
add
adc
jno
sarl
shll
add
cmpsl
cmp
jns
jecxz
aam
mov
hlt
lea
sahf
lock
rolb
outsl
pushf
mov
inc
jg
jp
lea
sub
jmp
js
push
in
xchg
ja
mov
add
jne
hlt
push
xchg
hlt
icebp
lahf
xor
mov
xchg
lahf
sbb
xor
xchg
lret
jb
jecxz
add
fldl
mov
adc
xrelease
aam
out
lea
push
in
or
je
stos
jle
cmpsb
andb
xchg
hlt
xor
jns
ja
mov
and
adc
icebp
sbb
addr16
add
adc
cmpsl
cwtl
jl
xor
xor
out
js
or
sub
and
pushf
dec
lock
sti
icebp
pop
mov
mov
xor
repz
repz
call
and
insl
adc
adc
dec
xor
repz
imul
cltd
mov
mov
test
leave
adc
popf
jmp
or
push
sbb
int
lock
jo
clc
lret
subl
fbld
adc
icebp
jbe
xor
js
jge
lret
call
fs
mov
jecxz
add
lock
repnz
jb
pop
addr16
repz
das
insb
in
outsl
cmp
stos
mov
aaa
out
add
roll
pushw
push
mov
call
adc
sbb
pushf
xchg
idivb
xchg
jecxz
push
idiv
cmp
add
lret
out
ret
cmp
push
sbb
ja
repnz
std
or
outsl
mov
push
jno
lret
and
stos
dec
jb
dec
jmp
mov
pop
add
int3
or
jae
push
jp
sub
and
sub
or
sub
insl
adc
mov
cmp
lods
xor
mov
aam
in
fiadds
in
js
dec
xor
mov
adcb
int
xor
pop
cld
jge
xchg
pop
mov
xchg
hlt
jp
int
fs
mov
jg
sbb
lods
jl
mov
sbb
jno
cmpb
xchg
pop
pop
insl
inc
orl
stos
in
clc
sarl
cmp
or
lret
dec
js
test
cmp
out
ss
addr16
addb
mov
pop
xlat
mov
mov
pop
clc
dec
sub
repnz
push
jb
lea
sub
sbb
loopne
push
pop
jne
jbe
xor
add
repz
cmpsl
outsb
aam
inc
mov
lock
mov
xchg
xor
pop
sub
sarl
loop
adc
or
aam
enter
inc
cmp
stos
or
xchg
or
and
sbb
xchg
imul
or
cld
decb
out
getsec
fnstenv
xor
jne
into
loop
mov
jle
inc
or
or
pop
nop
insl
enter
shrl
ret
xchg
leave
push
dec
hlt
xchg
cmc
js
clc
mov
and
sbb
jo
pop
das
adc
cmc
and
dec
xor
pusha
repz
shlb
inc
adc
xor
xchg
cld
jns
std
out
test
notl
xchg
lcall
fmull
out
push
push
fstpl
jb
sbb
test
int
hlt
mov
mov
sub
imul
iret
cld
xor
ret
cwtl
subb
mov
jl
fdivrp
mov
sub
sub
sar
mov
repz
jecxz
pop
negl
ficoml
int3
inc
cmp
test
and
sub
jg
pop
and
xor
mov
xchg
movsb
pop
out
add
idiv
jmp
cmp
inc
cltd
jae
jne
mov
out
xchg
cmp
subl
adc
stos
xor
shll
inc
sti
testl
jg
dec
and
jb
repz
xchg
out
outsl
fldenv
cmpsb
jp
jmp
lret
jne
lcall
jg
imul
lea
dec
add
adc
jle
adc
or
sub
stc
jne
jb
or
xchg
mov
icebp
and
shl
cwtl
lcall
jno
sbb
xorb
xor
addr16
jae
add
jge
dec
cmc
ljmp
push
test
fidivl
cmp
lret
cli
jle
jecxz
clc
jnp
inc
ljmp
popa
pop
outsb
aas
test
int3
test
aaa
popl
mov
sbb
cmp
mov
mov
loopne
inc
shll
jl
mov
cli
pop
and
rclb
popa
push
add
jp
or
rclb
inc
mov
movsb
testl
jb
imul
inc
jge
xor
popa
inc
bound
out
pusha
icebp
jae
movsl
das
out
out
lock
dec
xchg
and
adc
pminub
pop
outsl
cmpsl
ret
xor
adcb
cmp
mov
sbb
mov
cs
adc
in
push
jns
cmpsl
cltd
jl
js
in
testl
ja
stc
cmp
sbb
adc
sbb
mov
repnz
or
inc
xorl
jae
mov
sti
mov
add
or
sahf
sub
sahf
push
cld
mov
popa
scas
test
mov
jb
hlt
jo
jns
dec
out
outsl
sbb
xor
sahf
jge
xor
sbb
dec
icebp
push
jg
lahf
xor
test
shlb
es
das
xor
ror
xor
ja
sub
scas
out
mov
jnp
ret
out
xchg
jno
lds
fisubrs
add
push
xchg
push
and
inc
std
and
in
jbe
cmc
mov
mov
mov
xor
push
xor
stos
js
adc
bound
movsb
pop
cld
push
pop
sub
and
loop
pop
jne
aad
divps
shr
gs
inc
cmp
push
insb
ljmp
adc
adc
or
or
ljmp
cmp
setb
je
and
in
fidivrl
xor
js
aad
dec
adc
mov
test
daa
adc
std
flds
or
push
pop
jo
mov
out
adc
jb
adc
cld
test
bound
push
leave
addr16
pop
mov
jecxz
imul
lret
or
jle
out
rol
idiv
lock
and
ljmp
repnz
ljmp
rcrl
insb
and
stc
add
push
or
jp
mov
or
or
jae
nop
or
dec
aad
cld
repnz
cld
js
sbb
sub
sbb
in
mov
xchg
xchg
hlt
mov
and
in
lret
loope
repnz
fsts
int3
std
or
lret
sar
mov
adc
sbb
into
adc
hlt
cld
jbe
add
jl
mov
dec
add
shrb
jb
repz
lods
ss
lea
xchg
aam
dec
fcoml
and
out
mov
inc
out
ss
js
jb
xchg
push
jb
push
test
icebp
stc
mov
rclb
jp
ds
mov
out
sbb
mov
xchg
xchg
jle
sbb
mov
aas
mov
je
mov
jno
cmp
call
rep
mov
xchg
dec
jl
sub
cmc
iret
push
lock
xor
mov
stc
adc
cmp
std
and
popf
dec
fisttpl
subb
scas
inc
notl
jo
cwtl
jmp
int
ss
sbb
scas
xchg
hlt
push
int
add
adc
xor
cmp
mov
lods
cmp
lret
js
sub
icebp
pop
jnp
ljmp
jbe
jbe
outsb
xchg
sub
pusha
push
fidivrs
insl
jno
iret
fs
movsb
jp
cmp
es
jns
mov
sti
mov
jne
jns
sub
jb
xchg
aaa
cmpsl
cs
mov
cltd
push
or
inc
add
jne
outsb
icebp
hlt
adc
xchg
lods
xchg
xor
scas
test
adc
jne
or
aam
xor
sub
icebp
testb
mov
insl
nop
cmp
das
push
xor
jbe
lcall
pop
and
jne
jp
fcomps
cwtl
adc
fcomip
js
mov
jne
adc
xchg
mov
popa
test
hlt
sub
hlt
jo
cmp
or
testb
pop
pop
test
pop
repnz
mov
sbb
test
test
scas
xor
xchg
jb
pop
inc
js,pn
imul
repz
pop
inc
int3
sti
jecxz
fcmovu
cld
cmpsl
jp
cwtl
mov
mov
repz
mov
push
adc
xchg
add
inc
sahf
push
out
lods
push
adc
imul
or
xor
std
mov
loope
cmpsb
adc
mov
sbb
cwtl
mov
lock
cmp
xor
std
mov
lock
adcb
sahf
xchg
mov
dec
adc
lret
or
ljmp
jo
test
adc
gs
jbe
add
add
loopne
sub
nop
push
adc
add
add
mov
movsl
out
scas
test
xchg
popa
aam
aaa
daa
popa
sbb
insl
push
push
sahf
sub
inc
and
fdivs
subb
add
xchg
or
mov
mov
xchg
sub
fldt
loopne
push
mov
mov
fildl
push
sahf
stc
imul
mov
int
cltd
dec
sub
lock
cmp
insl
sbb
xor
inc
push
imul
lcall
or
call
movsb
dec
and
dec
add
jmp
gs
xchg
dec
repnz
sar
adc
loopne
xchg
pop
pop
pop
clc
pop
adc
and
push
add
pop
jle
out
jp
sub
xchg
lcall
sub
xchg
orb
cmp
fwait
add
sub
and
addr16
xchg
adc
xor
mov
dec
mov
not
repz
lcall
or
ret
sub
fldcw
sbbb
lcall
andb
movsl
test
fidivl
out
andl
cmc
pushf
pop
cmp
cwtl
cwtl
jae
notl
adc
adc
dec
jae
hlt
mov
hlt
sub
jge
loop
cmc
mov
orb
pop
xor
push
jmp
pop
scas
mov
ret
sbb
cmp
addr16
cmp
inc
jne
push
fs
fcoms
es
lods
fdivp
inc
add
fimull
xor
cltd
addr16
xor
xor
lods
std
int
sti
cmpsb
decb
inc
and
pop
test
popa
push
ljmp
and
or
fcom
cmp
sub
fdivs
cmpsl
mov
aaa
xor
lock
cmp
pop
jo
jo
add
sub
icebp
mov
loope
call
pop
scas
or
rclb
mov
ds
mov
inc
std
and
xlat
stc
or
sub
mov
aad
xchg
mov
jmp
rcrb
or
push
shll
shlb
pop
mov
add
and
mov
repz
mov
cmp
hlt
jno
xchg
push
mov
mov
cld
xor
or
mov
cli
push
stc
mov
loope
push
jp
xor
aad
and
pop
or
mov
mov
outsb
adc
mov
push
nop
or
vcvtsi2ss
mov
xor
xor
stc
push
adc
fucomip
out
ja
fstpt
push
dec
fcmovu
xor
fsubrs
rcl
addr16
int3
jg
les
fwait
push
jo
into
mov
fimull
movsl
add
pop
jne
icebp
add
lods
adc
mov
adc
mov
add
xor
adc
test
lds
dec
xor
cmp
xor
push
push
cmpsl
into
in
mov
sbb
sub
jb
lahf
pop
inc
mov
sbb
and
add
in
push
xorb
mov
sbb
xchg
ds
imul
and
push
pop
xchg
inc
cmp
mov
mov
add
popf
jne
sbb
fwait
and
jb
fdivrs
fcoms
xor
fidivrs
je
fiadds
fimuls
and
inc
push
xchg
jb
cmp
test
pop
or
sub
cmp
mov
jle
test
fs
cmpsb
xchg
out
or
push
aad
popa
cmc
out
jne
cmp
mov
xchg
xchg
fbld
sahf
xor
ret
dec
outsb
add
mov
push
mov
test
push
js
inc
add
aaa
movsb
add
lcall
jle
aaa
mov
cmp
push
mov
mov
aaa
jns
add
inc
jb
push
mov
stos
lock
imull
ds
and
fistl
dec
std
sub
aas
push
aad
or
add
cltd
push
jo
xchg
pop
rolb
sbb
xor
mov
sub
push
addr16
add
xor
lock
in
and
in
pop
fstps
cs
cmc
cmp
jo
sahf
insl
mov
in
cmp
pop
sub
clc
pop
imul
mov
or
pop
xor
xor
je
xchg
or
addb
pop
push
pop
xchg
add
shrb
ds
add
sahf
sub
into
push
or
cmpsb
daa
mov
cwtl
push
and
pop
push
dec
pop
push
insl
xor
cmp
lock
add
or
popf
out
test
loop
pop
jp
xchg
adc
jbe
mov
popa
fnstenv
test
add
jmp
push
fsincos
icebp
repz
jb
pop
add
inc
std
push
and
mov
inc
repz
cwtl
fs
xor
popa
push
inc
push
fidivl
dec
jbe
out
adc
jl
push
into
les
int
stos
inc
int
fmuls
fsubrl
jnp
std
bound
lods
fimull
mov
lock
mov
cmpsl
add
pop
lods
shrl
mulb
lahf
push
and
outsl
jle
and
das
rol
cmpsb
or
stos
lret
push
addr16
push
adcb
outsb
pop
icebp
jle
mov
insl
loopne
das
push
push
jne
pop
sbb
pop
stc
daa
mov
push
jne
xor
pop
inc
add
dec
bound
gs
stc
xor
iret
jp
popa
clc
cltd
shl
inc
mov
mov
clc
stc
sbb
xchg
mov
jmp
mov
test
add
lcall
movsl
popf
mov
movsl
adc
stos
push
adc
dec
cltd
sub
push
std
inc
pop
ljmp
and
and
inc
shrl
loope
add
or
das
add
sbb
xchg
fists
mov
xchg
es
lock
aad
mov
movsl
mov
loope
jmp
and
pop
ljmp
sub
and
rcl
sti
jo
testl
push
mov
xor
adc
aad
xchg
fsts
add
pop
mov
mov
push
pop
popa
dec
push
mov
fwait
push
or
sbb
or
push
adc
mov
and
pop
jnp
mov
jmp
sbb
icebp
cmc
pop
frstor
rorl
int
inc
pop
pop
xchg
inc
fwait
scas
pop
repz
mov
test
jno
test
cmpsb
push
push
ficomps
mov
mov
jne
fdivs
sbb
jp
test
movsb
mov
inc
mov
mov
xlat
rorl
push
shll
push
fsts
ficoml
pusha
push
or
push
cwtl
pop
mov
mov
adc
adc
ss
pop
mov
or
pop
outsl
mov
add
popl
std
jae
xchg
fwait
pop
adc
or
sahf
mov
pop
lcall
and
sti
bound
adc
push
push
cs
std
nop
sahf
jno
adc
mulb
or
cmp
test
or
fs
push
insl
jno
jg
push
popf
push
pop
mov
test
pop
mov
xchg
icebp
pusha
fnstcw
jns
and
xchg
adc
and
jle
cmp
push
mov
push
cmpsb
stos
cld
mov
cmp
and
jae
clc
out
pusha
pop
sub
stc
test
sbbb
pop
mov
movb
mov
lcall
icebp
sub
add
xorl
scas
dec
out
js
sahf
xchg
stc
int
mov
jg
xor
cwtl
push
xchg
arpl
scas
dec
xlat
add
icebp
or
insl
cmp
push
sbb
aam
in
or
popa
inc
push
inc
or
push
fidivl
imul
hlt
sbb
add
subb
test
cmpsb
cmp
inc
lcall
sub
push
xchg
xor
enter
or
sbbb
jg
fnsave
xchg
inc
daa
jae
pop
xchg
out
and
orl
dec
dec
ss
ss
fiaddl
sbb
inc
inc
pminub
imul
lds
sbb
or
xor
pop
and
aad
push
pop
cmc
pop
mov
fstpl
int3
into
add
cmp
rorb
cmp
sbb
mov
clc
or
lcall
push
add
xor
fs
jno
test
lods
pop
repnz
mov
xchg
std
xor
adc
movsb
ficoml
movsl
mov
pop
out
stos
lea
enter
pop
mov
jo
movsl
rcrb
stc
xchg
repz
orb
jg
cmp
push
enter
push
mov
dec
pop
inc
aam
sahf
inc
sub
mov
inc
cmp
repnz
add
inc
sahf
mov
int
repnz
lock
push
adc
xrelease
rcll
add
sbb
cmc
ret
xor
jb
int
pop
cld
ss
push
add
repnz
in
inc
stc
xchg
or
xorb
push
xor
test
lea
xchg
mov
mov
mov
or
ja
mov
mov
push
test
mov
sbb
adc
jl
jne
mov
cld
mov
xor
xchg
js
cld
mov
pop
aad
je
andl
imul
lock
push
xor
push
and
mov
jg
negl
cmp
mov
lock
mov
aam
aad
pop
shll
pop
sbb
mov
cmp
hlt
jecxz
shlb
sub
aam
adc
jle
scas
cwtd
xchg
jns
jmp
in
rcrb
pop
mov
inc
out
inc
mov
xchg
fisubrs
dec
inc
fwait
jle
push
inc
push
push
lods
xchg
and
jg
jp
jl
sub
jns
cmp
pop
cli
cmova
rorb
inc
jae
jp
mov
jne
mov
pushf
pop
cmpl
mov
nop
mov
mov
inc
xchg
pop
hlt
mov
repnz
fs
insl
call
out
mov
xchg
jae
add
fs
push
das
ficoms
mov
aaa
dec
cli
mov
or
and
mov
add
clc
cwtl
xchg
mov
pop
cmp
imul
push
push
push
jnp
scas
add
jno,pt
xchg
shl
jno
or
sub
arpl
and
nop
stos
push
mov
xlat
mov
aaa
add
mov
mov
aaa
adc
mov
mov
xchg
rorb
xor
xchg
pop
mov
mov
mov
mov
and
xchg
jle
sbb
mov
add
cld
js
into
xchg
lea
or
cld
jp
or
repnz
and
stc
sahf
mov
pop
dec
roll
cwtl
test
mov
xchg
ret
ss
add
mov
js
jl
xor
repz
popa
stc
stc
test
mov
inc
pop
cli
ja
jbe
lock
cmc
add
cmp
mov
repnz
ss
push
mov
or
js
test
inc
inc
mov
ds
mov
xor
or
insl
xor
mov
sub
addl
sbb
dec
jbe
mov
sub
ds
mov
scas
or
scas
mull
and
gs
dec
adc
mov
and
notb
adc
notl
lret
loop
aas
or
and
repnz
adc
scas
addl
fmull
cwtl
std
hlt
pop
adc
sub
xor
pop
cmp
lcall
inc
or
clc
sar
jle
dec
xchg
les
aam
mov
je
test
push
push
push
and
xchg
iret
cwtl
or
rcrb
add
scas
pop
add
or
jmp
push
cmp
hlt
pop
xchg
shrl
sub
cmp
add
xor
stos
push
xchg
push
sub
xchg
fbstp
xor
addr16
jns
adc
xchg
push
sbb
mov
repnz
pop
xlat
add
les
movsb
push
outsl
push
or
lcall
cmp
jae
or
mov
mov
adc
pop
stos
mov
mov
ss
pop
lahf
pushf
iret
dec
add
dec
cmp
xor
lcall
mov
out
dec
dec
mov
inc
and
adc
fidivl
popa
jle
inc
aaa
loope
sbb
and
lahf
stc
xchg
xor
xor
ss
cmp
push
out
pop
mov
nop
test
sahf
sbb
add
mov
test
jbe
sub
and
xchg
cmc
pop
nop
lret
rclb
fidivrs
mov
cmp
addr16
insl
leave
jp,pt
lock
stos
xor
mov
lcall
test
xor
push
or
jb
sbb
or
fldenv
insb
xlat
orl
and
fstpt
addb
sub
fidivrs
push
or
inc
jbe
repnz
cmpsl
push
adcl
pop
xchg
clc
xor
sahf
mov
jl
inc
jl
dec
mov
loop
push
stc
gs
sbbb
jbe
sbb
xchg
xor
inc
hlt
and
hlt
push
out
jae
jecxz
icebp
icebp
repnz
stos
dec
aam
cmp
pushf
sbb
data16
into
push
cmp
pop
or
fstl
add
jne
sbb
das
xor
jae
lcall
into
fdiv
dec
cmpsl
notl
cmp
sti
push
out
mov
ja
and
call
aad
sbb
inc
fstl
arpl
add
cmc
dec
or
scas
imul
std
sbb
lea
sbb
cmp
push
push
mov
sbb
cmp
sub
push
xchg
lock
push
testl
or
sub
icebp
dec
mov
add
ret
aad
outsl
repnz
mov
rorl
cmc
aaa
in
inc
push
ss
cmpsl
mov
mov
or
cmp
clc
cmc
test
dec
scas
sub
ret
clc
and
push
dec
jp
sub
shll
stos
lds
push
rcll
pop
or
lret
outsl
fldt
ficompl
inc
and
push
or
testl
cmp
adc
add
and
gs
mov
mov
int
das
pop
inc
mov
cmp
add
or
adc
in
sub
lcall
movb
xchg
hlt
cmp
jno
xchg
int3
jae
div
mov
in
repz
out
lods
mov
ds
sub
sbb
xlat
mov
inc
addr16
jne
movsl
sbb
add
test
icebp
push
xchg
add
nop
imul
stc
push
std
mov
or
or
pop
adc
enter
dec
push
movsb
jp
xor
stc
ficoml
add
inc
lock
icebp
dec
mov
push
call
outsl
mov
pop
add
mov
jns
cmp
and
mov
jg
jns
stc
repz
adc
cmp
push
stos
xor
push
int3
lds
jnp
sti
gs
sbb
hlt
xchg
push
jbe
push
or
test
sbb
in
testl
imul
push
xor
dec
daa
aam
jl
inc
xor
repz
in
pop
stos
xchg
dec
adc
rcrl
data16
arpl
repz
add
movsl
push
jl
stc
test
lds
jbe
insl
mov
cmp
loopne
add
mov
mov
cmpl
cli
cmp
dec
inc
mov
sub
packsswb
clc
dec
lods
mov
hlt
stc
sbb
mov
fldt
inc
cvtdq2ps
mov
dec
mov
inc
mov
add
in
mov
int3
jae
jle
jbe
int
cld
fimuls
out
sub
inc
or
ret
sub
sbb
sbb
push
stc
sub
add
cmc
repnz
sarb
out
cmp
mov
ficompl
stc
cmp
scas
inc
shll
test
stos
daa
enter
mov
popa
mov
and
inc
mov
adc
or
leave
add
pop
add
and
dec
stc
pop
leave
mov
subb
fnstenv
fmul
or
in
mov
dec
hlt
mov
je
cld
pop
mov
cmp
cmp
push
lret
cmp
fwait
and
fldcw
lods
push
lea
lret
mov
sbb
sti
jge
nop
or
sub
pop
mov
add
pusha
mov
out
xor
rorb
ss
std
scas
push
rclb
jb
lcall
cmpb
mov
ja
movsb
xchg
xchg
enter
mov
test
clc
pop
cmc
pop
fwait
sbb
cmpsl
lods
or
mov
imull
adc
or
out
add
sbb
es
rclb
jp
mov
and
fdivs
mov
dec
jb
add
inc
adc
aad
mull
out
rcrl
je
test
xor
pop
test
cmp
fnstcw
and
or
jbe
push
inc
or
negb
or
pushf
orl
aam
mov
sub
lret
mov
mov
jno
mov
out
xchg
mov
mov
neg
iret
push
pop
sbb
lahf
mov
adc
push
xchg
mov
pushf
hlt
mov
jb
sahf
rclb
repnz
pop
sub
push
jle
lds
outsb
inc
push
repnz
mov
rcr
sahf
adc
or
into
pop
ss
inc
mov
dec
dec
jb
add
ljmp
enter
inc
xchg
mov
and
out
sti
mov
mov
mov
roll
adc
call
lock
sbb
dec
fwait
xchg
adc
jbe
xchg
adc
ljmp
pop
daa
aas
divl
push
repnz
push
roll
repnz
rolb
cmp
mov
pop
hlt
or
gs
mov
sbb
data16
sti
icebp
into
or
push
int
xchg
scas
ds
movsl
lret
inc
cltd
mov
inc
push
rcll
out
cld
jl
sub
lret
xor
add
add
mov
mov
sti
mov
aas
imul
mov
sub
ficomps
and
repz
std
mov
jno
jns
push
cmp
fcoms
sub
and
sbb
xorl
xchg
ljmp
cmp
inc
jne
sbb
lds
adc
gs
stos
jne
sub
es
sbb
pop
das
lods
fildll
test
lahf
pop
xchg
fistps
dec
inc
test
insl
push
lret
dec
or
mov
ret
lea
idivl
sti
scas
cmp
lahf
mov
int
sbb
push
dec
push
lcall
pop
out
mov
inc
in
ja
or
inc
mov
add
inc
add
ss
lcall
out
ret
inc
jae
sub
fs
cmp
pop
into
xchg
pop
repnz
daa
jg
mov
mov
jbe
xchg
sahf
sbb
repnz
sbb
mov
das
jbe
roll
aas
cs
and
dec
inc
jnp
sub
ficoml
adc
loope
hlt
xchg
adc
xor
subb
xor
push
jbe
inc
in
jb
jno
inc
aaa
push
ss
push
pusha
or
jns
cmc
add
sub
pop
inc
adc
dec
cmc
and
loope
mov
testl
filds
lcall
aaa
mov
aaa
mov
iret
scas
inc
es
mov
outsb
push
lret
lret
or
rcrb
xor
push
test
sbb
dec
subb
mov
jp
mov
mov
cli
mov
mov
outsl
je
adc
pop
insl
icebp
hlt
rorb
ljmp
out
mov
pop
mov
enter
scas
decl
les
sbb
cwtl
mov
sub
add
daa
inc
addl
fistl
stos
movb
sub
icebp
in
or
fwait
hlt
ljmp
or
sub
testb
ja
jo
idivl
add
cmpl
jae
icebp
jp
idivl
jne
jnp
repz
ja
jl
lock
jns
and
jge
adc
cli
jae
jle
scas
enter
cld
icebp
lock
sbb
arpl
movsb
xor
ss
and
adc
je
cmp
aad
adc
add
adcl
xor
aad
sbb
jbe
adc
xor
test
je
xchg
or
and
and
repz
lret
jne
loopne
pop
enter
lea
push
xchg
dec
aam
rcl
mov
lds
out
or
adc
cmp
divl
cld
icebp
fdivl
fs
js
rclb
mov
pop
sahf
lock
mov
sub
test
jle
add
in
movsl
dec
push
mov
xor
scas
sbb
cld
clc
or
insl
imul
or
fimull
in
push
popa
pop
ret
aam
add
add
xchg
and
mov
jne
sub
jle
mov
icebp
jo
ja
push
adc
dec
stc
cld
fstpt
fstpt
xor
test
mov
add
adc
imul
or
xor
decb
sub
roll
push
movsb
pop
and
inc
jo
mov
mov
push
das
mov
lock
divb
stos
push
mov
test
pop
jbe
add
jp
aad
call
adc
sahf
pop
sti
add
ret
sub
clc
or
shll
and
pop
sub
in
mov
icebp
divb
add
ja
lock
jl
push
mov
jne
icebp
js
stc
xchg
dec
movsb
rcl
inc
clc
in
xor
push
mov
clc
icebp
ja
adc
sti
add
icebp
lock
call
cmp
or
faddp
adc
rol
xor
js
pop
int
add
leave
push
orl
add
sbb
testb
mov
icebp
js
jnp
fdivrs
ror
jno
cmpb
adc
xorb
xchg
adc
sti
add
dec
jns
push
xor
test
push
ja
lock
jmp
clc
add
addl
adcl
or
jl
ss
sbb
push
std
fcoms
push
sbb
push
xor
negb
xchg
and
stc
sbb
or
mov
inc
divl
maskmovq
loopne
jbe
add
jl
std
or
cli
mov
ds
add
push
out
adc
icebp
addb
fbld
mov
orb
cwtl
mov
outsb
std
inc
mov
outsb
jmp
pop
add
push
sbb
test
sbb
inc
or
notb
cmp
lea
push
mov
dec
mov
dec
jae
pop
lahf
or
sub
stc
mov
sub
cmp
fisubs
adc
pop
jp
jno
pop
or
repnz
clc
mov
loope
push
cmpb
cli
sti
bnd
add
mov
sub
add
add
xor
cmpl
sbb
cmp
adc
das
jae
f2xm1
mov
loopne,pt
dec
psubsb
push
das
pop
pop
jg
fidivl
icebp
inc
jge
lods
jne
dec
jg
lock
jl
push
pop
mov
jge
stc
lcall
add
or
jge
adc
mov
cmp
pop
inc
jo
or
notb
lock
loopne
cmp
cmp
clc
popl
add
push
and
aas
stc
icebp
clc
enter
aad
jmpw
das
jae
fdivs
loope
add
lret
and
mov
out
jp
or
sbb
xchg
pop
and
popa
or
es
mov
out
sub
dec
sub
xchg
nop
sti
sbb
push
push
jo
pop
inc
in
cwtl
sbb
in
mov
ljmp
decl
push
cmp
add
dec
adc
jge
xor
sbb
push
fyl2xp1
aad
xor
js
cld
jno
cs
clc
stos
jne
fiaddl
ficomps
in
cmp
std
dec
or
enter
scas
mov
xor
int
pop
sub
fwait
bound
or
sbb
aaa
dec
jp
imul
push
ficompl
jmp
mov
xor
inc
jno
xchg
rsqrtps
mov
enter
mov
mov
jo
popa
xchg
xor
jae
cmpb
out
clc
cmc
mov
daa
mov
mov
insl
lahf
rorb
and
sbb
aaa
inc
testl
cwtl
jecxz
mov
out
jle
cmp
gs
testl
clc
mov
and
stos
nop
mov
xor
lock
mov
push
es
push
add
jle
add
rorb
lcall
push
out
pusha
xchg
mov
ret
scas
jb
loop,pt
mov
cmp
mov
test
mov
sbb
loopne
stos
js
or
jle
sub
push
repz
test
xorb
cmc
jae
xchg
cmp
mov
jns
xor
mov
stos
jle
mov
adc
imul
js
xor
cli
dec
cmp
jno
fcomps
cmc
mov
xor
stc
mov
fldt
xor
mov
lds
jp
sbb
enter
and
lcall
inc
pop
loop
out
lret
inc
mov
dec
adc
mov
jne
jno
lods
test
iret
imul
repz
cmp
push
iret
adc
push
scas
mov
adc
sar
adc
cli
f2xm1
or
fcomi
push
fcmovu
sub
inc
lret
lock
adc
inc
jno
js
mov
jne
adc
sub
xor
adcl
sarb
ret
inc
rclb
popf
idivb
hlt
gs
mov
incb
push
inc
add
cmp
mov
mov
lock
mov
xchg
mov
push
fcmove
int
jmp
movsl
ljmp
push
movl
cmp
scas
push
stos
enter
aas
subl
push
fdiv
and
pop
lcall
mov
push
inc
lcall
mov
frstor
popa
mov
jns
xor
push
cmovno
repz
aaa
dec
push
ds
mov
dec
cmpsl
cld
pop
iret
icebp
out
add
or
xchg
mov
stc
test
out
xlat
ljmp
or
or
je
xor
adc
in
push
out
ds
and
in
jle
push
mov
inc
push
push
icebp
insl
xor
icebp
popa
pushf
cmp
test
dec
je
gs
rcll
cmp
test
jbe
jb
inc
push
add
xor
rcrb
jne
jle
movsl
push
add
mov
and
cmp
or
adc
int
sahf
pop
enter
mov
xor
stc
push
dec
lret
pop
push
pop
iret
mov
mov
push
roll
out
push
test
cmpsl
pop
sbb
mov
mov
jnp
loope
and
fwait
insl
push
push
lahf
mov
jbe,pt
enter
pop
sbb
xlat
lea
push
leave
pop
push
mov
jno
mov
mov
ret
lock
daa
insl
and
sahf
push
push
or
cs
rorb
daa
clc
xchg
loope
push
xor
add
mov
xor
and
mov
push
mov
pop
call
mov
jae
pop
popa
push
push
enter
out
or
pop
loope
pop
adc
cmp
jb
test
jl
ds
add
icebp
int3
fs
dec
repnz
repz
andl
mov
movsl
icebp
mov
mov
sub
sbb
dec
sbb
dec
pop
push
xor
loopne
mov
inc
jg
int
jmp
lods
out
mov
push
iret
mov
and
cmp
mov
jbe
lock
adc
xchg
inc
enter
out
cmp
lock
test
jae
jo
sub
ds
xor
pop
sbb
jno
js
fldt
dec
clc
xor
mov
movb
adc
add
xchg
inc
sbb
inc
ds
push
jb
or
xor
inc
dec
lock
lds
gs
or
adc
mov
add
adc
pop
mov
hlt
filds
rcll
or
jb
repz
jnp
aad
adc
cmp
cmp
mov
stos
popa
push
mov
imul
pop
and
stos
call
addr16
outsb
jne
xchg
fldt
or
push
inc
push
scas
adc
mov
cmp
inc
outsl
jns
mov
xor
in
pop
ret
mov
scas
xor
fistps
mov
decb
sbb
and
sub
mov
int3
add
mov
popf
pop
xchg
xchg
in
jae
adc
je
rcr
xchg
mov
adc
cmp
pusha
mov
mov
cli
lods
repz
iret
dec
xor
dec
push
test
fcmovne
sbb
nop
sbb
shrl
stc
mov
mov
push
cmp
adc
and
cmpsl
ror
dec
mov
push
sub
lahf
sbb
into
loope
mov
push
inc
push
out
mov
xorb
pop
sub
js,pt
xchg
fdivs
sub
push
loopne
xchg
jb
sahf
mov
xchg
jp
popf
stc
push
push
lea
jle
cld
sub
cmp
xchg
icebp
cld
dec
in
cmp
addr16
xor
jo
cmp
inc
repz
pop
adc
add
or
add
repnz
or
clc
imul
jbe
out
add
jno
push
xchg
add
cmp
mov
jne
aam
aas
cld
and
lods
push
mov
and
sarb
pusha
stos
push
jne,pn
hlt
xchg
and
push
scas
ja
aam
mov
adc
stc
stc
jb
and
mov
jo
loop
pop
mov
pusha
lret
lds
insl
iret
xor
and
ret
fistpll
adc
sbb
mov
pop
push
adc
add
add
js
push
or
mov
shll
inc
mov
push
stc
or
xchg
push
pop
and
mov
mov
popa
outsb
ror
add
imul
fildl
sub
ret
dec
std
inc
or
adc
fisttpl
pop
hlt
mov
mov
adc
into
sbb
loopne
sub
stc
push
push
shrb
sbb
and
mov
rol
adc
mov
add
xchg
test
repz
js
and
mov
xor
insl
push
xor
pusha
jns
dec
push
stos
mov
sub
and
and
xor
clc
lock
adc
adc
xor
push
outsb
sub
insl
dec
mov
cmp
jno
sbb
mov
mov
xor
inc
jno
sahf
aam
shlb
add
mov
xor
add
test
push
shrb
sahf
xchg
xchg
add
jb
clc
push
jb
push
jbe
xor
adc
dec
jo
adc
stc
inc
or
jb
xor
insb
test
outsl
nop
shrb
jae
into
cwtl
shl
xchg
popa
fwait
pop
xor
mov
mov
mov
imul
xchg
adc
push
icebp
bound
insl
adc
jg
into
test
and
roll
mov
test
test
sub
sub
cld
pop
sbb
dec
xchg
data16
addr16
mov
negb
sub
inc
add
lods
movsl
add
sub
xor
sbb
cmc
add
nop
sbb
sbb
shlb
jae
subb
push
insb
filds
push
pop
bound
hlt
dec
mov
lods
sbb
fidivs
and
into
out
je
imul
jb
sti
cld
mov
lcall
xor
rcr
bound
sbb
adc
pop
dec
adcb
cmp
jno
and
mov
cltd
push
xor
popa
pusha
cld
cwtl
mov
fstps
or
addb
icebp
sub
adc
lcall
cltd
xchg
jo
leave
or
xor
sub
lock
push
xor
adc
adc
ja
std
adc
sub
repz
rcll
adc
jb
ja
stc
test
ret
jg
jbe
out
push
mov
pusha
adc
xchg
ret
inc
insl
loop
jp
cmp
jbe
cmp
jno
std
mov
loop
lcall
mov
adc
adc
or
lock
xor
adc
cmc
shl
or
adc
shrl
pusha
sbb
adc
dec
jle
xor
or
fisubl
hlt
push
inc
pop
pop
mov
ss
arpl
aam
pop
xchg
nop
or
and
outsb
fistpl
nop
jecxz
lret
outsl
push
int3
popa
dec
and
fs
xchg
testb
cmp
out
cmp
cvtdq2ps
dec
mov
mov
sub
add
mov
push
push
int
outsb
in
mov
inc
mov
lcall
pop
push
ljmp
icebp
shlb
sub
fiaddl
shrl
sub
or
fcomi
adc
fists
ja
loop
arpl
mov
mov
add
in
jae
scas
inc
xor
lcall
xor
mov
mov
sub
sub
mov
jno
roll
lahf
lcall
popa
popf
test
scas
icebp
xor
xchg
jno
mov
sub
cmp
jno
jne
mull
push
sahf
pop
shll
mov
lahf
mov
jno
or
repz
push
mov
add
pushf
jo
mov
lret
add
xor
push
sub
jg
xor
sbbb
sub
or
mov
adc
mov
jbe
mov
xorb
pop
fwait
int3
loopne
cltd
jno
adc
sbb
mov
sbb
push
pop
and
stos
mov
mov
jb
and
repnz
mov
repnz
sbb
int
xchg
jle
outsb
xor
adc
flds
xchg
aad
and
push
cwtl
or
mov
cltd
dec
pusha
jg
clc
pop
jg
jg
repz
mov
hlt
jno
mov
dec
stos
add
sub
add
icebp
in
inc
js
jno
push
sbb
cmp
insl
pop
out
mull
lcall
fdivrl
jo
cmp
jns
mov
mov
notb
push
mov
aad
cmp
mov
add
adc
mov
fmuls
mov
adc
add
lods
adc
cmp
mov
xor
adc
lret
aam
into
sarb
aaa
jne
nop
sahf
xchg
cmp
mov
roll
push
shlb
sbb
sbb
inc
movsb
das
cmp
inc
ret
mov
cs
fwait
cmp
inc
mov
sbb
dec
test
icebp
mov
mov
inc
push
xchg
xor
lock
pop
push
in
dec
inc
and
inc
xor
sahf
adc
sub
popa
mov
adc
outsl
push
std
or
push
sub
jo
mov
mov
stos
repz
push
jmp
adc
scas
pop
mov
push
fwait
pusha
cs
mov
iret
sub
pop
out
lock
shlb
inc
and
mov
sbb
dec
fnstcw
inc
enter
mov
jle
movsl
pop
add
jo
shrl
xor
inc
pop
or
sub
xchg
push
fs
push
into
into
jp
popa
pop
and
sbb
jb
clc
mov
repnz
sbb
cli
mov
insb
pop
test
add
into
xor
push
add
xor
insl
pop
imul
inc
inc
mov
pop
adc
lcall
and
push
fcmovne
inc
fidivrl
jl
pop
pop
aad
adc
outsl
pop
jo
and
mov
aas
jb
data16
sar
pop
jge
and
or
popf
jl
mov
out
fucomp
push
inc
dec
jbe
xor
push
push
xchg
sti
mov
xor
lock
cmp
jecxz
adc
push
negb
xchg
dec
iret
cmp
jl
mov
cli
fidivl
dec
mov
cltd
xchg
lock
lock
lea
ds
fdivs
sti
jle
in
adc
repnz
rcrb
mov
loope
flds
bnd
pushf
jle
pop
or
mov
jge
inc
out
add
cmp
jb
ja
jo
jno
mov
jmp
in
sub
cwtl
xchg
adc
sahf
ss
push
cmpsl
push
lds
sub
dec
mov
pop
pop
lcall
adc
push
fwait
mov
call
cmpsb
mov
and
sbb
or
push
add
dec
xchg
jecxz
lahf
push
in
outsl
dec
mov
fdivr
addl
mov
shlb
shll
int3
ja
je
inc
movsb
xor
push
cmp
rorl
int3
add
adc
push
xchg
jmp
xor
pop
jae
cmpsb
cmp
aam
push
mov
jecxz
add
push
ficoms
sub
int3
insl
je
pop
int
pop
jne
popf
or
outsb
add
add
add
push
pusha
push
sub
loop
cwtl
lea
mov
out
sub
jns
rclb
xor
push
adc
nop
adc
dec
fisubl
cmp
mov
cmp
sub
mov
loope
or
je
cmp
push
ficoml
mov
adc
and
clc
jb
sub
fldenv
lock
or
or
jno
mov
or
adc
xchg
jb
fidivl
gs
jb
pop
jns
push
mov
jno
insl
add
adc
je
sbb
sub
aaa
add
sbb
js
mov
add
jno
cmp
xor
or
movsl
fisubl
pop
jle
ficoml
mov
mov
test
pusha
les
andl
gs
in
sub
notl
xchg
mov
mov
inc
jl
or
inc
mov
cmp
cmp
int3
test
push
jle
lahf
mov
loop
ret
stos
movsb
arpl
dec
mov
addr16
fistpll
xor
shlb
jl
jbe
fdivl
fisubs
in
xlat
jle
daa
or
aam
pop
xor
int3
adc
push
mov
sub
sub
mov
inc
jp
pop
fstl
in
cld
gs
lret
xchg
xor
fsubrs
ficompl
stc
and
jne
dec
das
mov
sahf
mov
lcall
scas
push
jo
ljmp
dec
repnz
sbb
mov
push
jnp,pt
adc
lods
divb
xor
xchg
pusha
int
xchg
add
inc
andl
and
and
push
test
iret
nop
jno
adc
mov
inc
lcall
or
inc
add
iret
movsb
lods
and
ss
adc
inc
imul
sbb
scas
je
push
mov
call
js
adc
aas
iret
dec
mov
outsl
or
loopne
aad
xchg
jnp
dec
jnp
fstpl
pop
cld
je
hlt
add
sbb
leave
xor
push
fiaddl
lods
xor
movsb
iret
sub
add
dec
add
pusha
jne
in
cmp
xchg
lods
pusha
mov
testl
pop
xor
fidivs
imul
icebp
fcoms
adc
adc
cmpsb
mov
shrb
sbb
je
jbe
mov
outsl
or
out
in
cmp
push
call
cs
sbb
insb
orb
in
dec
aaa
test
sub
mov
push
jmp
jb
cmp
xchg
cmpsl
cmc
xchg
fsts
and
mov
mov
lea
repz
push
popa
in
sahf
jo
lret
insl
push
mov
xchg
push
outsb
inc
aam
lret
add
mov
push
stc
adc
call
adc
pop
cmp
lea
jne
push
lods
push
lcall
je
jae
adc
add
lds
test
sub
pop
lcall
mov
xchg
lds
cmp
lock
mov
into
out
or
add
push
push
xchg
add
mov
fdivrl
jl
add
je
rcrb
repnz
icebp
inc
push
enter
fisubrl
inc
mov
dec
adc
bound
push
lcall
xchg
sar
fists
stc
stc
repz
mov
dec
ret
mov
lcall
sahf
insl
insb
fwait
clc
in
pop
mov
jbe
xor
dec
and
and
in
mov
push
cmp
mov
out
roll
jg
int
jbe
jp
xor
mov
or
inc
cmpsl
mov
jle
bnd
pop
popf
shl
insb
std
jae
fisubrl
add
xor
push
or
or
xor
mov
dec
inc
imul
ret
xor
push
dec
jg
popa
loopne
sub
push
jno
jmp
mov
push
or
jo
xchg
leave
fisttpll
pop
cmpsb
and
dec
inc
sbb
mov
fsubrs
push
dec
pop
dec
subl
or
hlt
pop
xor
insl
cmc
clc
and
sub
jge
dec
lcall
xor
idivb
add
fldt
test
push
aaa
and
das
add
and
outsl
inc
imul
push
daa
js
and
pushf
arpl
test
jb
and
jbe
push
rol
shlb
cwtl
xchg
push
sbb
cld
cwtl
ja
popa
dec
jno
cmp
jecxz
or
fadd
shrb
cmpsb
xor
cmp
je
idivb
mov
nop
jns
mov
push
js
jge
cs
lods
js
or
mov
cwtl
or
jp
std
inc
jae
popa
jbe
and
mulb
dec
pop
or
fwait
cmp
rcrl
clc
int
and
or
aaa
or
xchg
fildll
ret
push
sub
adcl
pop
cli
aam
fbstp
mov
and
adc
cli
aaa
sub
popf
pushf
icebp
lret
lods
jp
sahf
jl
imul
xchg
mov
rorb
add
mov
push
pop
mov
and
cld
xchg
jge
andl
bound
or
std
cmp
jae
int3
js
outsb
nop
pop
repz
push
in
pop
push
test
fistps
dec
pop
cmp
mov
lidtl
jle
out
adc
mov
add
or
orl
dec
sub
pop
xor
sub
jle
xor
sub
xchg
out
sarl
icebp
adc
mov
xor
sahf
sbb
sbb
push
dec
push
ljmp
mov
xchg
enter
mov
jle
cwtl
imull
or
lret
out
adc
and
ss
push
mov
push
jbe
xchg
or
movsl
dec
bound
mov
jle
mov
ficompl
add
push
fisubrl
sbb
jae
push
xchg
lea
mov
pop
andb
fwait
jle
xor
jb
inc
dec
lds
shl
push
xor
xchg
int
xchg
and
imul
int
mov
test
cmp
sbb
inc
xor
mov
cmc
xchg
subl
hlt
jge
mov
dec
pop
xor
jle
push
icebp
push
mov
shr
pusha
ja
push
aam
mov
adc
mov
mov
fistpll
icebp
dec
mov
aam
inc
cmpsl
repz
aad
bound
or
xchg
iret
ja
stos
loopne
cwtl
mov
adc
jge
or
mov
adc
xor
lcall
jno
sbb
jl
cld
shll
iret
dec
cmc
test
jae
les
icebp
cmp
aam
push
daa
xor
negl
jg
cli
mov
ficoml
jne
xlat
in
push
lret
dec
mov
push
inc
pop
pop
orb
popa
sbb
push
nop
sub
add
fimull
out
sbb
cwtl
push
aam
dec
and
imul
xchg
push
mov
int3
test
loop
or
mov
in
xorl
pushf
mov
mov
ja
inc
ja
cmc
adcb
xor
fcomi
mov
fpatan
mov
ss
and
adc
sub
adc
sbb
int3
add
pop
call
adc
add
popa
ret
inc
xchg
xchg
inc
fdivs
cli
mov
jb
jb
jae
lea
push
fxch
push
xchg
push
mov
ds
shl
test
leave
inc
adc
incl
insl
mov
ret
mov
jle
inc
stos
cmp
mov
add
xchg
and
and
in
sub
add
stc
mov
pop
xlat
and
leave
and
ja
loop
dec
push
out
out
je
mov
int
aas
lock
cltd
cmp
mov
dec
cmp
add
or
and
pop
stos
jnp
aad
jnp
movsb
jnp
sbb
lea
sahf
push
lcall
push
xor
cmpsl
push
xor
test
imul
inc
add
mov
mov
inc
xchg
aas
cs
push
dec
jns
jg
out
lock
xchg
dec
adc
or
sbb
pop
or
dec
pop
cmp
jno
das
insb
aad
cli
cmp
add
mov
call
addl
movsl
mov
xorl
or
fisubs
jle
notb
push
lds
push
mov
jle
adc
jbe
cmp
jp
mov
das
sarb
xchg
sub
xchg
pop
add
mov
mov
icebp
dec
fidivrs
mov
icebp
enter
fidivrs
jge
or
xor
je
jae
ret
jp
add
arpl
jns
pop
adc
shll
cmp
fidivrs
pop
lock
inc
sti
mov
sti
inc
push
cmp
sbb
xorb
fmuls
inc
ret
mov
jno
test
or
pop
fs
pop
mov
fnstcw
push
cmp
or
dec
or
push
mov
mov
jb
iret
cld
mov
sub
jae
orb
jb
xchg
je
adc
adc
and
das
adc
je
jmp
or
addl
mov
lds
mov
iret
and
outsb
lret
fnstsw
stc
add
adc
and
push
or
cmc
loop
into
and
repz
dec
push
sub
pop
repnz
dec
bound
outsl
fsubrl
out
cmpsb
adc
or
out
sub
mov
ret
arpl
mov
xchg
and
ljmp
iret
icebp
cmpb
inc
cltd
jo
popa
insl
jle
sbb
rorb
out
repnz
lcall
jg
dec
xor
push
cmp
clc
roll
push
iret
or
sarb
nop
lds
push
dec
shl
cmp
xlat
sub
push
mov
sbbl
dec
jp
and
cli
fwait
and
hlt
xchg
scas
pop
xor
cmp
scas
icebp
jno
jg
sub
xchg
adc
testl
xchg
out
inc
jle
pop
dec
push
scas
cmp
pusha
adc
mov
add
in
and
daa
mov
mov
adc
repz
leave
jp
mov
shlb
push
cmp
sti
mov
mov
aaa
lods
xchg
push
and
and
xor
or
adc
call
ja
and
xchg
rcrl
sbb
rolb
xchg
dec
and
fdivr
or
outsb
enter
jge
pop
xor
inc
add
mov
mov
push
xor
or
xor
test
outsl
or
lahf
xchg
jge
test
inc
fists
push
stos
xchg
fcmovbe
mov
mov
fisubl
loop
jmp
cmpsb
cmc
dec
movsb
hlt
test
adc
ja
xorl
xchg
cmp
push
in
xorl
xchg
adc
push
mov
xchg
into
cmpsl
jle
movsb
xchg
push
insl
arpl
dec
fldt
inc
je
orb
sbb
ja
lock
push
bound
nop
cmc
cld
hlt
bound
das
jb
xor
movsb
xor
mov
das
xlat
inc
jo
js
hlt
addr16
pop
cld
adc
xor
xchg
jae
outsb
mov
push
cmp
adc
or
push
fbld
or
bnd
xor
sbb
test
outsb
dec
bound
ja
and
jae
add
adc
dec
cld
jbe
addr16
sarl
or
out
in
xor
int3
and
xor
test
rolb
loop
ljmp
xchg
xor
and
stc
sub
and
into
aam
jmp
dec
push
lret
test
and
rcrl
icebp
or
clc
sub
scas
inc
fldl
adc
fisubrl
and
mov
push
mov
jnp
rcll
xchg
pop
insl
addl
imul
xor
stc
repnz
fs
or
pop
lcall
scas
and
or
push
lods
mov
mov
dec
sbb
hlt
sar
adc
push
sbb
jge
cmpsb
mov
and
stos
and
jnp
imul
or
cmc
pop
iret
cmp
push
dec
push
inc
add
fstp
bound
xchg
rclb
sbb
pop
jl
mov
stc
jno
insb
xchg
mov
nop
loopne
pushf
int
in
ds
mov
out
loopne
insb
out
cmp
mov
mov
jbe
scas
add
pop
aad
mov
lods
pusha
adc
nop
or
xchg
in
add
jmp
mov
imul
add
xchg
aas
and
jbe
push
xchg
mov
cmpb
mov
mov
cmp
test
ja
movsb
dec
loope
mov
mov
bnd
add
es
loop
fptan
inc
pop
cmp
mov
mov
outsb
xchg
or
mov
mov
jle,pt
xor
add
inc
xor
stc
push
jg
hlt
and
leave
sti
cmp
mov
mov
lock
aad
dec
mov
or
mov
fsubl
or
insl
lcall
dec
mov
pop
cld
stc
je
ret
hlt
jg
dec
rolb
cli
jb
xchg
mov
fisttps
push
dec
adc
mov
mov
movzbl
push
loopne
call
jp
push
push
scas
add
mov
mov
or
xchg
repz
sahf
clc
push
std
sub
cmpsl
push
mov
lea
pop
test
jle
gs
mov
stc
jecxz
in
mov
mov
ja
hlt
ss
mov
cmc
mov
mov
pop
mov
inc
xchg
adc
scas
icebp
or
repz
jl
outsb
arpl
mov
mov
rcrb
jecxz
lret
into
and
mov
add
sub
mov
adc
lret
xchg
add
cmp
mov
ret
and
and
pop
jo
sbb
pop
pop
adc
sub
mov
int
mov
in
in
scas
mov
out
int
xor
mov
aad
neg
add
test
mov
ret
lds
and
cwtl
iret
repz
xor
outsb
lds
cmp
xchg
xchg
push
mov
lcall
outsl
jg,pn
lret
inc
adc
mov
sbb
jl
sbb
popa
xchg
or
xchg
xor
hlt
push
jecxz
fstpl
and
xchg
inc
xchg
js
sti
jns
lret
cmp
addl
sahf
pop
jge
jge
pop
std
pop
mov
and
adc
adc
push
ret
imul
jg
loop
push
push
mov
movsl
repnz
inc
fwait
cmp
pop
shll
dec
fmulp
jge
mov
insl
pop
rcrb
dec
push
pop
cmp
in
mov
fwait
and
dec
xchg
aad
mov
mov
add
inc
sbb
popa
add
es
clc
inc
pop
pop
xor
jae
ljmp
jge
xchg
pop
fbld
ret
cmp
or
jg
pop
fists
negl
add
int
test
js
popa
pop
and
cmp
add
sbb
cmp
clc
jae
cli
adc
imul
stos
inc
js
cs
ds
pop
cmp
sub
jns
push
out
mov
mov
addr16
pop
int
mov
int
fiadds
lret
lret
sbb
jns
cmc
pop
sub
rcr
and
cld
mov
das
xor
push
xlat
jno
inc
xchg
xchg
outsl
pop
sbb
or
mov
fisubl
call
sub
xlat
fs
cmp
test
xchg
dec
push
cld
inc
sub
fnstsw
adc
mov
or
cmp
cld
adc
repnz
dec
sbbb
arpl
shll
jae
inc
stos
sahf
int3
inc
aad
or
idiv
ja
popa
pop
jb
or
jp
in
hlt
fadd
ja
and
inc
cltd
adc
imul
jno
mov
fidivl
jb
cmp
push
cmp
stos
repz
loop
push
cmc
mov
div
div
js
jns
sbb
pop
lds
fists
or
pop
push
fimull
mov
pop
mov
mov
pop
sub
fwait
xor
cmp
es
push
sbb
fcoms
vmread
cs
fs
and
jb
push
push
test
push
imul
xchg
xchg
stc
jp
cmp
lahf
xor
cmp
fistps
test
mov
pop
inc
shl
adc
sbb
int
push
fisubl
std
mov
dec
les
xlat
jmp
pop
imull
and
fldenv
mov
push
inc
push
cmpsl
pop
jecxz
out
mov
sub
sub
push
shl
ficomps
mov
popa
sub
jb
mov
jl
or
lret
pop
push
sahf
jno
aas
mov
ss
iret
pusha
les
es
sbb
fisttpl
mov
sti
add
jno
popa
mov
div
sbb
pop
addr16
inc
fildl
les
mov
mov
ret
rcrl
mov
test
ficoms
pop
stc
jo
cmp
jnp
rcr
scas
lods
mov
lock
mov
push
insl
scas
jecxz
nop
and
aam
notl
dec
sahf
jns
notl
idiv
sti
or
out
sub
and
repz
je,pt
and
mov
mov
ret
loopne
mov
cmpsb
out
jbe
xchg
lcall
orb
jl
int3
fwait
pop
mov
movsb
xor
or
roll
push
mov
mov
lcall
mov
cmpb
subl
sub
loope
in
mov
out
cmp
in
inc
sets
sti
clc
push
ret
jnp
add
ja
mov
insw
mov
lock
filds
inc
inc
idivb
sbb
cmp
stc
adc
adc
jne
add
jne
cmp
dec
inc
out
cmpl
push
or
cmpb
ljmp
mov
adc
enter
test
test
testl
adc
inc
add
cmp
testb
inc
pop
insl
sti
adc
fdivs
mov
pop
out
addr16
push
add
clc
dec
adc
les
ret
fidivs
xchg
mov
lret
inc
jae
cli
stos
adcl
adc
icebp
and
mov
mov
xorb
mov
adc
ret
dec
leave
loop
mov
push
mov
fistl
into
popa
add
add
cmp
mov
je
int
and
sbb
push
xor
addr16
push
cld
test
cmp
jle
adc
into
lods
xchg
cmp
mov
bound
dec
test
cmp
mov
sub
pop
icebp
xor
pop
icebp
and
pop
test
adc
stc
pop
je
pop
cwtl
test
or
shll
dec
out
adc
inc
pop
adc
cmp
sbb
xor
jle
xchg
xor
cld
jns
mov
jae
ja
std
add
mov
add
loopne
cmp
add
sub
adc
pop
jl
testb
dec
xchg
imul
js
out
push
es
add
adc
aam
cmp
inc
or
and
shrl
adc
iret
out
lcall
dec
cmp
mov
sub
pop
and
or
inc
xchg
jl
xor
adc
and
daa
jno
pop
jb
adc
daa
add
pop
fbstp
cli
je
js
clc
mov
test
cmp
mov
fnstcw
xor
mov
cmp
push
mov
out
ret
and
adc
imul
test
imul
jbe
jl
jl
gs
push
dec
cmp
xchg
mov
or
aaa
rcll
lds
scas
xor
and
sub
cmp
adc
fxam
ss
sbbb
jg
adc
nop
add
in
dec
cli
scas
adc
inc
icebp
jnp
sub
and
out
inc
inc
add
adc
cmp
popa
mov
push
xchg
add
cmp
imul
leave
sbb
jb
int
ljmp
call
cli
push
or
shrb
dec
popa
xchg
sbb
cmpsl
mov
and
adcb
jle
or
pop
cmpb
mov
in
es
int
push
pop
clc
std
pop
mov
data16
mov
in
stc
cmp
out
jl
lods
add
adc
mov
test
das
push
andb
stos
and
cmc
xchg
loop
jb
inc
test
or
movsb
dec
inc
lock
push
jns
mov
in
rclb
jno
sub
or
push
mov
filds
int
push
out
push
mov
ds
fcom
std
lret
push
mov
cmp
or
xchg
cmp
cmp
adc
push
mov
stc
or
sbb
aad
dec
aam
out
test
mov
add
loop
js
jne
ja
test
dec
sub
sbb
jle
outsl
adc
jp
cmc
mov
adcb
inc
pop
xor
xchg
mov
clc
cmc
xor
scas
mov
inc
mov
jmp
inc
jbe
je
pop
bound
jae
xchg
sbb
push
loop
aaa
ficomps
or
mov
add
sbb
adc
insl
fwait
lea
xor
mov
adc
inc
mov
mov
mov
mov
xchg
pop
jp
shll
lret
mov
dec
jo
imul
lret
cmp
or
or
mov
sti
aaa
or
push
jmp
jmp
repz
push
cmp
shr
adc
dec
repnz
aas
mov
sbb
out
push
xchg
loop
xor
shll
lock
sub
pop
xor
mov
cwtl
add
ds
jns
mov
inc
jp
adc
outsl
pop
pop
outsb
cmp
sbb
xor
pop
pop
lds
add
push
addr16
xchg
imulb
mov
xchg
scas
inc
jmp
jns
mov
lock
xchg
into
lds
dec
repz
je
push
adc
adc
sub
sbb
in
and
stos
nop
popa
adc
jne
mov
sub
jmp
jmp
xor
jle
xor
mov
xor
push
fcomip
dec
xor
mov
cmp
pop
repnz
aaa
adc
insl
mov
xor
mov
and
pop
sub
mov
mov
pop
push
out
lcall
sbb
repnz
xor
push
jl
test
bound
ss
icebp
fsubl
aad
stc
test
inc
sub
inc
insb
sahf
jb
mov
jne
sbb
sahf
and
addb
jo
inc
xchg
push
dec
mov
push
sub
sbb
mov
xor
xchg
stc
mov
push
int
dec
dec
std
lret
mov
pop
mov
bnd
in
test
fldl
xchg
insl
adc
aam
sbb
test
pop
hlt
pop
pop
jne
push
popl
popa
push
and
and
mov
int3
out
mov
flds
iret
subb
idivb
jbe
cmc
and
sbb
jmp
testl
aas
leave
fidivs
cmpsl
stos
notl
jne
aam
loope
cmc
add
lds
jecxz
sbb
fiaddl
inc
je
xchg
out
cmc
js
xor
sub
fisubrl
inc
icebp
push
and
cwtl
push
jl
inc
mov
pop
out
cwtl
or
sub
call
jbe
repnz
test
adc
xchg
test
mov
jns
mov
les
xchg
adc
sahf
lock
movsb
dec
jl
mov
adc
jb
mov
sub
xchg
mull
mov
mov
leave
lods
leave
inc
jge
aam
mov
inc
mov
mov
inc
cmpsb
jle
dec
adc
xchg
push
or
mov
rorb
push
cld
push
lock
and
jne
sbb
mov
push
or
and
idiv
dec
push
or
add
or
xchg
or
mov
or
nop
add
into
lock
test
lret
data16
sub
stc
inc
les
rorb
adc
xchg
adc
or
inc
jb
mov
and
and
or
and
fistpl
andl
xor
bnd
mov
or
js
inc
cmc
pop
add
add
push
pushf
mov
aad
sub
test
mov
jp
jle
mov
adc
push
or
gs
cmpsb
sahf
es
iret
sahf
jg
fnsave
and
gs
cmp
adc
adc
iret
mov
jns
movsl
xchg
pop
divb
repz
ljmp
movsb
jg
cmp
xchg
cs
xorb
pusha
jmp
cmp
int3
sbb
fstp
dec
jmp
shll
xchg
cld
out
arpl
mov
and
loop
inc
jne
push
clc
and
xor
into
mov
xor
aad
scas
stc
xor
adc
clc
subb
mov
jge
and
popf
and
cli
jge
in
sub
mov
lret
mov
jmp
xor
jb
mov
mov
icebp
repnz
and
adc
punpckldq
test
icebp
mov
lcall
fbld
aad
imul
mov
xchg
fnsave
dec
repz
jg
jne
mov
std
mov
dec
cmp
dec
mov
sbb
idivb
fnstcw
sub
sub
hlt
pop
xchg
mov
xchg
out
inc
out
xchg
sub
bound
test
fisubrl
mov
outsl
pushf
mov
xlat
jg
adc
push
imul
fisubl
cmp
insl
cmc
imul
mov
adc
or
aaa
pop
fwait
push
cmc
adc
es
loope
inc
push
jl
test
loopne
shl
sahf
ds
icebp
pop
add
xchg
jg
push
mov
repz
repnz
insl
out
test
jns
pushf
push
ss
push
not
dec
adc
or
jecxz
push
inc
ja
js
das
push
push
je,pt
xor
add
lds
test
mov
es
and
fisubs
movsb
fcomps
adc
adc
test
pop
icebp
cmp
xor
xchg
mov
inc
add
pop
jb
xor
adcl
adc
push
aaa
pop
mov
std
jae
js
aaa
mov
mov
stos
and
adc
test
stc
or
movsb
jnp
aam
cli
add
iret
ja
int3
dec
inc
dec
pop
mov
jb
scas
aaa
fcmovnu
sbb
pop
jmp
and
or
cmpsl
and
hlt
sti
xchg
mov
aad
push
mov
xor
cmpl
ss
add
and
push
scas
mov
mov
cmp
xchg
test
pop
sub
add
pop
pushf
sbb
and
cmp
pop
insb
movsb
push
pop
dec
fidivl
sub
in
jns
cwtl
and
out
dec
adc
dec
push
lret
cli
mov
pop
cwtl
jle
lcall
sbb
fisubrs
push
mov
add
fcoml
clc
adc
xchg
jmp
jb
das
or
call
addl
sub
aam
divb
xor
sahf
movsb
cmp
sub
leave
dec
mov
pusha
xor
mov
inc
addr16
xchg
mov
popa
pop
cli
xchg
mov
jo
push
push
inc
jb
js
cwtl
add
nop
loopne
jbe
test
js
xor
cmp
cmp
xchg
addr16
popa
and
cmpsl
push
ficoml
cmpl
iret
hlt
dec
sub
cmpsl
inc
jb
xchg
mov
pop
loop
in
test
rolb
push
outsl
add
xchg
mov
add
mov
mov
add
jns
fdivrl
and
or
mov
je
fstps
lahf
stc
cld
or
stc
push
and
jae
repz
and
testl
xlat
pop
pop
in
mov
stc
push
or
cmp
xchg
lea
mov
test
into
mul
add
adc
jb
mov
es
wrmsr
adc
test
sti
and
es
sarl
adc
fadd
dec
add
cld
bnd
cmp
mov
pop
push
out
xor
outsb
and
idiv
xor
push
xor
je
cmpb
sti
inc
push
iret
xor
aad
sub
in
mov
cltd
push
fwait
sbb
mov
mov
int3
out
jae
jle
stos
mov
push
push
push
clc
leave
push
cs
testb
ret
cld
pop
lret
test
inc
adc
mov
jle
mov
mov
popa
or
sub
filds
mov
test
je
lds
inc
and
mov
outsl
jmp
aam
fldl
in
xor
ret
pushf
js
adc
ds
aam
test
jb
xchg
jne
daa
jge
fistps
adc
pop
test
imul
add
int
jl
or
flds
mov
cmp
push
add
jae
push
adc
movsb
pop
or
outsl
out
movsl
xor
movsb
sbb
dec
cs
inc
aad
into
mov
flds
cmpb
lock
or
mov
mov
daa
mov
adc
movsl
jne
bound
outsb
outsl
js
negb
add
jbe
enter
mov
or
adc
cmp
fs
add
inc
xchg
mov
mov
pop
pop
adc
xor
icebp
mov
mov
dec
cltd
xlat
scas
sub
cmp
jno
icebp
push
jb
mov
imul
pop
rclb
and
inc
jecxz
ss
add
cmp
mov
je
jbe
and
fdivs
xor
mov
cmp
mov
add
jbe
loopne
pop
adc
add
sbb
repnz
mov
out
sarb
sub
ds
push
jge
fnstcw
inc
inc
add
pop
mov
inc
inc
aas
and
cs
xchg
fwait
scas
xor
pop
cli
insb
in
and
cld
xor
dec
and
sbb
sub
or
sub
jb
sbb
dec
sub
add
ja
or
dec
push
jbe
sbb
loope
rclb
lods
cmp
mov
addr16
sub
in
mov
jle
stos
mull
mov
hlt
insl
nop
xor
jg
cmp
stos
pop
idivl
push
adcb
push
lcall
loopne
jae
cli
push
je
xor
mov
push
cmpsl
cmp
imul
mov
mov
xchg
not
out
fldt
ret
mov
hlt
stc
scas
pop
adc
xchg
outsb
jno
loop
mov
enter
xchg
aas
inc
mov
push
adc
jp
sarl
and
push
cmpsb
call
add
jmp
adc
sti
stc
dec
or
xchg
jnp
push
in
sti
or
sub
jp
pushf
xchg
jb
pop
lcall
jns
popa
insl
stos
jmp
pop
insl
enter
cmp
dec
lds
lahf
adc
std
mov
xchg
xlat
sahf
ds
cmc
sbb
fidivrl
inc
ljmp
sbb
pusha
lock
fldenv
jnp
sarb
scas
outsl
ss
sub
xcrypt-ofb
cmpsl
insb
jne
inc
cld
mov
jecxz
adc
aaa
jge
bound
xchg
in
sbb
pushf
call
sbbb
je
jnp
lret
int3
or
mov
jp
xor
or
inc
aas
imul
mov
and
cmp
in
aas
je
jo
xchg
mov
inc
popa
ja
hlt
imul
lea
notl
js
or
jne
inc
mov
xor
jl
fildl
mov
sbb
push
popl
jne
cmc
adcw
out
adcb
ja
fstpt
lods
gs
and
jno
fstps
leave
add
xor
cmpsl
dec
ret
lret
fdivs
jge
movsl
repnz
push
lcall
imul
push
jb
lods
sbb
gs
andl
jbe
pop
or
sub
jae
aad
jo
roll
mov
cmp
inc
cmp
shll
ret
pop
hlt
cli
push
scas
xor
pushf
sbb
shll
ja
popa
imul
ret
xor
ss
mov
div
add
or
lret
aam
test
in
fwait
push
xor
and
fistps
movb
mov
lret
jle
ljmp
scas
lea
sub
or
je
push
or
mov
sub
pop
mov
mov
std
aad
push
xlat
test
mov
push
hlt
push
push
dec
bound
xorb
pop
sbb
or
int3
mov
inc
mov
movsl
jmp
lea
add
lds
or
sbb
inc
pusha
and
fwait
and
mov
xchg
rol
jl
adc
pop
inc
pop
stos
addr16
and
mov
insl
ss
sbb
and
pop
mov
jns
cmp
xor
and
adc
cmp
cmp
fmul
add
test
and
xchg
jb
xor
aad
mov
pop
jp
idiv
pop
mov
mov
test
cmp
iret
pop
enter
sar
xchg
inc
xchg
roll
repnz
fisubl
push
xor
out
lret
jb
dec
push
and
js
out
xchg
push
push
dec
or
mov
lods
enter
repz
cltd
mov
out
push
mov
and
adc
in
jae
and
dec
aaa
lret
jns
cmc
sbb
enter
cmpsb
pop
leave
pop
push
dec
or
dec
rcll
std
addr16
divl
dec
lea
mov
mov
xor
test
sahf
in
xor
imul
adc
das
fwait
sub
xlat
inc
lcall
sub
pushf
jne
and
cs
ja
enter
movntq
out
das
lret
movsl
sbb
pop
xchg
pushf
push
repnz
popa
adc
xor
add
jbe
repz
repz
xchg
outsl
dec
stos
hlt
mov
fdiv
and
fldenv
inc
jo
pop
push
xor
mov
cli
jae
jle
sahf
imul
jb
xchg
clc
in
xor
outsl
sbb
adc
dec
cld
push
rcrl
jge
lahf
and
hlt
lcall
shr
or
add
jle
es
mov
or
mov
pop
les
stos
dec
pusha
jns
jne
clc
cmp
repz
cs
sbbl
inc
sti
jns
lcall
inc
or
out
xchg
addb
pop
or
fcoms
dec
jno
pop
jb
movlps
or
or
push
cmpsb
leave
fnstsw
stc
jo
jg
jno
mov
pop
pusha
pop
std
jbe
mov
adc
mov
cmp
pop
aas
add
xor
mov
mov
andb
add
sbb
mov
adc
jle
or
mov
addb
in
div
jl
loope
and
dec
es
sti
push
mov
mov
iret
sbb
pop
pusha
adc
xchg
aaa
std
pusha
jne
lea
es
repnz
aad
adc
nop
push
test
dec
adc
xor
in
sbbb
jl
dec
mov
ficomps
jb
xchg
mov
sarb
xchg
or
xchg
jne
stos
inc
ljmp
loopne
mov
mov
js
jmp
adc
mov
aaa
lahf
add
movsb
jg
cmp
icebp
xchg
fcmovbe
int
jb
jecxz
push
stos
ds
cmp
cli
dec
loope
repz
sub
out
ljmp
scas
and
pop
aad
movsb
xor
jl
mov
mov
stos
inc
lods
or
add
cmp
pop
jno
hlt
cwtl
les
andl
adc
repz
cwtl
hlt
xor
sbb
pop
mov
in
pop
cwtl
xor
rclb
sub
cmpsl
std
mov
loop
lock
jo
lock
sbb
repz
scas
aad
mov
popa
jmp
sbb
pop
xchg
mov
mov
or
or
lret
adc
jg
leave
mov
pop
sbb
push
mov
xorb
mov
jp
dec
fchs
lds
cmp
sahf
mov
xlat
adc
sub
inc
cmp
sti
push
mov
inc
push
stos
cmp
push
cmp
imul
in
out
sub
imul
cmp
xchg
jg
pop
es
add
and
or
jnp
push
imul
and
hlt
lds
repz
inc
je
cmp
sahf
jp
jae
xor
movsb
push
icebp
cld
fs
sahf
iret
push
inc
shl
enter
cmp
leave
mov
pop
into
cli
xchg
mov
js
inc
mov
cmp
fisubrl
mov
aad
rorb
lods
jecxz
mov
in
jnp
pop
out
aam
adc
rcrb
fcomps
adc
hlt
ss
push
cltd
ja
adc
sbb
outsl
sbb
sbbb
inc
sub
fistpl
addr16
mov
or
imul
mov
fldenv
jne
mov
test
add
orl
fmulp
inc
cs
icebp
mov
hlt
push
je
jne
mov
testb
bound
mov
mov
orb
loopne
sbb
adc
outsl
mov
cwtl
adc
icebp
xchg
mov
jb
or
cltd
push
sub
jmp
adc
add
popa
dec
adc
mulb
repnz
and
fiaddl
inc
jmp
cmpsb
cli
xlat
movsb
clc
push
dec
adc
js
lock
hlt
push
shlb
inc
push
xchg
jp
inc
inc
cld
sub
call
jns
add
clc
scas
cmp
jle
sub
mov
cltd
cmp
scas
outsl
dec
sub
adcb
cld
repz
repz
push
pop
leave
xchg
cmovge
enter
clc
std
or
jmp
dec
int3
sbb
jg
out
dec
jno
sbb
repz
push
sbb
pop
stos
pop
pop
cmpsl
adc
aam
ficoml
scas
cltd
push
dec
jne
push
jbe
sub
cmpsl
xor
push
inc
repnz
jae
lods
lret
fnstenv
hlt
push
cmp
and
int3
jbe
repz
jae
push
test
ljmp
lock
clc
mov
jno
mov
bnd
mov
fdivl
dec
repz
mov
sub
sti
push
or
jae
xor
and
push
cmc
dec
test
push
xchg
test
movsl
dec
imul
lock
insl
stos
mov
xor
lcall
bound
mov
lea
xor
in
pop
inc
dec
movsl
fisttpl
aaa
lcall
pop
adc
jge
cmpsl
sbb
jge
insl
clc
fisttpl
push
adc
inc
add
popa
fldt
jo
xor
push
inc
xchg
jmp
ret
and
push
mov
cmp
and
dec
test
bound
add
idivl
ror
jb
adc
jb
mov
sbb
iret
push
cmc
cli
fstl
lret
outsl
loope
add
and
imul
jp
pop
jb
cwtl
lods
pop
cmovnp
icebp
push
repz
testl
icebp
stc
jne
orb
push
ja
and
sahf
mov
add
jl
loopne
out
js
cmc
orb
scas
adc
mov
mov
lds
add
ljmp
imul
leave
lret
dec
jb
adc
fmuls
leave
xchg
in
movsl
sbb
mov
add
cmp
add
sub
pop
ja
ja
sahf
pop
xchg
icebp
jne
mov
sub
fwait
jbe
jns
mov
sbb
imul
stos
jl
jg
pop
cwtl
push
jmp
lret
sub
imull
jle
test
jb
test
sbb
push
jmp
cmc
pop
mov
jl
in
inc
pop
push
mov
and
mov
subb
btc
xchg
cmpsb
jnp
jl
in
popa
aad
sti
cmp
cmp
add
jg
lahf
movhps
adc
jnp
pop
xchg
jge
sub
clc
leave
sub
cmp
push
repnz
leave
and
cmp
sbbl
sub
mov
jb
ljmp
jl
int
je
ret
and
les
adc
mov
jae
jbe
fstpt
or
testl
inc
push
xchg
mov
add
aaa
xchg
je
js
out
mov
xchg
xor
jno
sahf
insb
xchg
test
pop
daa
js
xchg
aaa
getsec
push
ss
jns
and
outsl
xor
jae
stc
or
xor
std
cmpl
adc
repnz
add
sbb
mov
cltd
notl
lods
int
add
sub
in
cmp
gs
inc
adc
adc
add
dec
push
inc
jle
sbb
jb
popa
xorb
data16
jg
inc
les
xchg
cmp
inc
xor
test
mov
mov
stos
out
inc
or
inc
outsb
jnp
xlat
test
sub
into
add
repnz
pop
mov
js
hlt
inc
ljmp
pop
cmp
rorl
pop
scas
cmp
pop
cmp
push
sub
fidivs
fisttpll
sbb
in
jle
fildl
mov
repz
sub
jne
jmp
xor
js
movsl
aam
inc
xor
cmp
repnz
cwtl
lea
repz
xor
cmc
xor
cmp
clc
or
cmc
mov
jne
sub
aad
fstpt
rorl
fldcw
pusha
jl
mov
jmp
adc
rcrl
cwtl
mov
push
in
inc
aad
inc
pop
notb
into
xor
adc
and
in
imul
shl
cs
jle
mov
jle
mov
push
jne
iret
sahf
lods
notl
xchg
or
iret
mov
xchg
and
dec
dec
sbb
std
inc
ja
pop
jne
rorb
adc
lahf
in
outsb
xchg
pop
pop
scas
shll
gs
sahf
cld
xchg
js
cmp
or
movsl
xchg
out
scas
xchg
iret
lret
mov
or
push
divl
or
jle
cmp
js
out
sbb
pop
je
orl
mov
mov
subb
ljmp
sub
loope
jmp
xchg
jge
out
div
data16
add
push
or
mov
mov
pop
or
lcall
jge
and
jle
test
pop
sub
jp
stos
push
mov
mov
fcmovnbe
pop
std
xchg
fidivs
sarb
sti
stc
push
mov
jle
push
jne
imul
sbb
mov
mov
and
iret
and
in
js
orb
mov
aas
xor
jno
jnp
pusha
insb
outsl
or
fisttpl
mov
ljmp
cmp
and
dec
dec
push
mov
push
cmpsb
mov
fistps
neg
add
push
jmp
push
stc
insl
lock
add
popa
or
rclb
daa
cmpb
mov
mov
jp
cmp
lods
aad
mov
sbb
mov
stc
jae
adc
mov
mov
or
jl
xor
mov
call
dec
clc
les
cmp
mov
sbb
adc
pop
fisubrl
and
jg
sub
and
outsl
mov
pop
les
add
ret
mov
xorb
xchg
mov
test
or
and
cmc
inc
pop
sbb
aad
or
repz
sbb
scas
popa
jae
adc
or
pusha
inc
stc
and
mov
fisubs
jb
loop
xchg
mov
adc
cwtl
out
mov
in
in
jnp
inc
rcrb
mov
test
mov
xchg
push
popa
or
xchg
cmp
xor
sub
push
and
cltd
insl
mov
loope
mov
jmp
jmp
in
adc
and
lahf
or
jmp
out
sub
iret
push
out
pop
cmp
add
pop
repz
out
push
js
cltd
imul
push
mov
ficompl
dec
dec
jae
inc
inc
test
or
xor
or
test
addl
jg
out
popf
cmc
bound
repz
mov
adc
push
pusha
popf
add
divb
testb
les
adc
mov
ss
neg
sub
mov
mov
movsb
into
in
sbb
fcom
pop
add
inc
mov
xor
jle
inc
nop
push
out
test
lods
inc
inc
jp
sbb
gs
fildl
ljmp
rcrl
adc
jb
sar
push
cmp
clc
insl
lods
adc
jo
jle
dec
jbe
movsl
sub
jp
cs
mov
es
cmpsl
pop
sbb
jl
fldcw
or
inc
icebp
dec
adc
add
out
mov
movsl
sbb
push
push
test
pushf
mov
outsl
xor
popa
mov
dec
xchg
rcrl
pop
lret
test
lahf
jno
jp
aas
inc
jne
out
lret
sbb
lock
arpl
lds
inc
dec
lea
adc
cwtl
sbb
xor
neg
lcall
lock
ja
xor
js
fadds
sub
repnz
repz
cmpsl
sbb
icebp
cmp
fidivrs
test
dec
popa
std
testl
or
mov
pop
aad
fidivrl
pop
into
inc
mov
or
cmpl
mov
sbb
popa
xchg
xchg
int
sbb
rorb
inc
push
cmpsl
cmp
push
hlt
jo
pusha
jg
mov
outsb
adc
rclb
xor
clc
adc
stc
xor
adc
sub
jp
jl
in
les
xchg
ljmp
add
mov
push
cmp
insl
add
loop
inc
dec
sbb
xor
dec
jmp
cmp
aaa
cmp
or
jns
fcmovu
imul
jb
mov
jnp
adcb
xor
xchg
add
pusha
jl
cli
sub
mov
int
out
popf
sub
pop
repnz
ret
pop
jns
sbb
out
out
push
cltd
push
dec
sub
and
ja
sbb
pusha
int3
stos
icebp
fimuls
adc
outsl
push
sub
cmp
addr16
fs
out
jge
inc
jae
adc
hlt
mov
test
hlt
insl
aad
std
mov
cmc
and
sub
lcall
das
scas
xchg
nop
or
xchg
add
cwtl
push
cmp
jle
mov
lret
push
cmp
xor
pop
int
push
dec
jb
jnp
aas
loop
iret
mov
pop
mov
mov
push
inc
dec
insb
fildl
adc
mov
add
adc
jle
mov
jmp
push
sbb
lret
ljmp
stc
or
stos
daa
roll
cltd
roll
cs
leave
inc
add
push
pop
push
fwait
pop
sub
popa
ljmp
les
push
sub
lods
or
sbb
xor
aaa
pop
jbe,pn
inc
nop
loopne
cmp
push
nop
leave
or
scas
or
add
ficompl
mov
jne
mov
test
push
adc
jns
pop
push
lods
ret
insl
ss
sahf
mov
sbb
pop
cli
adc
enter
arpl
movsl
cmp
mov
roll
xchg
jg
push
bnd
outsl
xor
jle
mov
xor
xor
and
xchg
jmp
push
out
cmpsb
test
movsb
jmp
or
and
sub
sub
xor
jnp
aas
jle
mov
push
out
mov
xor
add
cmp
pop
inc
icebp
loopne
dec
aas
jae
in
dec
ja
ret
dec
ja
out
add
xchg
sbb
mov
jne
push
cmpps
cmpsb
pop
dec
call
fs
enter
xchg
xchg
pop
cmp
or
repnz
ss
fsubr
adc
pop
bound
add
loop
dec
jp
sbb
in
test
lds
xor
mov
xchg
clc
out
ja
js
mov
repz
sahf
xor
lea
jecxz
mov
insl
ficomps
loopne
fistps
adc
inc
outsl
neg
push
add
loop
rorb
dec
pop
insb
jle
jb
stos
sbb
dec
scas
imul
jp
mov
jp
hlt
jecxz
int3
jp
dec
or
lahf
xor
jno
fisttpll
addb
pop
jbe
add
loopne
dec
out
repnz
cmp
jne
cmp
outsl
sbb
mov
iret
cmp
and
jmp
outsb
push
sbb
ss
dec
cmp
jnp
std
inc
push
ret
adcb
cld
nop
gs
addl
cli
dec
pop
and
dec
sahf
shll
std
xor
jo
sub
gs
stos
jecxz
ja
dec
push
stos
arpl
lea
cmpb
data16
push
pop
xchg
or
fistl
roll
int3
xor
aaa
lahf
adc
fadd
or
pop
xchg
pop
aam
add
and
out
fdiv
mov
faddl
lock
fcoml
pop
mov
fsub
pop
fsubrl
and
ds
stc
adc
jbe
pop
stc
xchg
in
mov
pop
push
xor
sti
mov
pop
sbb
test
pop
lret
inc
movsl
or
in
clc
pop
xor
ss
out
inc
dec
lock
sbb
and
js
sub
cmp
dec
pop
ss
mov
clc
mov
fadd
sub
shl
xchg
pop
push
hlt
mov
sub
or
jns
loop
xor
addr16
or
mov
scas
in
mov
in
mov
ja
push
sub
lret
sbb
inc
sbb
in
stc
mov
in
arpl
mov
in
dec
mov
xchg
sbb
in
iret
mov
mov
dec
cmp
lret
jb,pt
pop
pop
insl
and
pop
inc
inc
ret
sbb
std
lret
xlat
jo
flds
push
mov
repnz
mov
xchg
mov
adc
jecxz
popa
mov
jae
ret
popa
rcll
in
test
pop
icebp
in
arpl
cmp
pushf
adc
sub
fisttpll
sbb
lods
xchg
ja
cmp
cmp
xor
adcl
pusha
cmp
push
sbb
or
add
adcb
mov
or
sbb
aad
xor
push
cltd
shrb
inc
aam
sub
push
sub
pop
jae
jno
cmp
dec
inc
xor
arpl
pop
add
sbb
xor
daa
jns
add
xchg
adc
out
rcrl
pop
xchg
mov
jae
sub
jmp
mov
cli
sub
jp
stc
insl
shlb
andb
push
adc
in
hlt
iret
sahf
sbb
xorb
fistpl
mov
cld
and
arpl
jge
pop
js
fdivrl
fyl2xp1
repz
repnz
sub
shlb
or
inc
sub
mov
daa
pop
rolb
ds
popf
scas
pop
stc
add
loop
int3
dec
xchg
sub
movsb
cmp
cmp
jb
pop
jae
cmp
mov
dec
test
aad
cmp
xchg
or
fidivrs
mov
dec
mov
out
test
repnz
pop
push
xor
add
or
push
xor
mov
stc
cmp
mov
or
cmp
push
mov
mov
int
jbe
mov
and
es
lock
sub
stc
pusha
loopne
xlat
mov
xchg
sbb
rcr
lcall
xchg
add
negb
jp
lods
cld
and
mov
adc
mov
sbbl
in
mov
scas
enter
pop
cmc
je
jbe
loop
fcoml
push
or
lret
lahf
notl
adc
mov
or
icebp
push
mov
imul
jle
push
mov
insb
mov
sub
sbb
mov
test
or
sbb
aad
sbb
cmp
xor
aaa
ficoms
sub
jle
xor
xchg
icebp
orb
push
mov
sub
push
dec
pop
pop
dec
bnd
rclb
push
movsb
xchg
fstpt
cld
sbb
push
mov
call
mov
std
sbb
lock
aam
in
test
and
imul
jae
cmp
dec
std
push
or
sti
or
or
ss
loope
lret
xor
scas
add
adc
cmp
or
scas
stos
jle
leave
or
sbb
repnz
xchg
mov
sbbl
sbb
pop
test
xchg
xor
test
test
inc
mov
adc
inc
jnp
cmp
cmp
pop
and
stc
jg
stos
mov
or
scas
fcompl
pop
adc
push
lock
pcmpeqb
dec
outsb
mov
clc
jno
jl
lock
ja
adc
inc
cmp
pop
sub
adc
fiadds
sub
sbb
mov
movzbl
iret
sub
mov
push
and
push
out
ficomps
ljmp
inc
hlt
clc
ret
int3
jb
jb
push
xor
add
jmp
cmc
mov
cmp
push
insl
jo
mov
int
mov
pop
sbb
pusha
call
sub
setle
inc
add
xchg
and
mov
rcll
repz
xor
shlb
add
xor
add
sahf
xchg
push
lock
fwait
fwait
test
sbbl
push
add
adc
mov
fistpl
or
imul
jecxz
cld
xchg
xchg
adc
sub
pop
mov
xor
iret
cmp
sarl
mov
dec
or
adc
ja
jno
mov
pop
inc
xchg
xchg
sbb
test
xchg
movsl
mov
pop
lock
fstpt
sarb
add
pop
pop
jno
cmpb
inc
cmp
mov
cmp
push
and
mov
sub
mov
and
adc
push
fadds
dec
or
inc
or
enter
adc
ja
cld
rorb
sbb
ljmp
xor
cmp
sbb
or
jne
sti
shlb
adc
iret
xchg
loopne
sarl
shl
inc
or
pop
push
sahf
xor
inc
adc
adc
ljmp
xor
sbb
rcl
call
xor
pushf
xor
test
fisubrl
xchg
filds
icebp
in
lahf
cmp
sahf
push
scas
mov
repz
push
fidivrl
add
xor
cmp
cld
inc
sub
xor
jbe
mov
or
call
jle
sub
pusha
pxor
fsubrl
push
inc
jmp
xor
push
add
loopne
scas
adc
aad
xor
jns
adc
cmp
jns
cmpsb
jo,pn
repnz
sbb
outsl
xor
jbe
sbb
daa
lcall
jo
mov
hlt
or
sub
push
not
mov
das
cli
pop
mov
idivl
mov
push
sti
outsl
pop
pop
fcomi
jle
ss
cmp
mov
aam
adc
xor
inc
pop
push
ds
jp
xor
jno
cmp
sbb
mov
aam
push
fwait
xor
push
mov
ret
or
xchg
call
std
mov
xchg
ljmp
jp
in
or
push
pop
cmp
mov
out
fwait
popa
jo
jae
cmc
sahf
mov
decb
rolb
decl
andb
insl
sub
stos
popa
push
or
sub
adc
call
stos
inc
mov
add
clc
jbe
cmp
mov
mov
adc
mov
sbb
xlat
inc
fildl
scas
add
inc
fidivs
movb
or
adc
cmp
orl
adc
lahf
xor
insb
push
outsl
popa
lods
sub
outsl
int3
gs
ds
call
stc
aaa
dec
out
xchg
and
mov
mov
cmpsl
xchg
into
mov
lcall
sub
push
sbb
outsb
cmp
and
jp
jb
icebp
nop
je
pop
jbe
and
insl
sbb
enter
nop
push
inc
sub
repnz
push
xchg
dec
and
movsb
pop
stc
pop
ret
pop
sbb
or
mov
fcoml
sub
sub
cs
pop
incb
jp
test
sub
popf
mov
pusha
testb
jno
lock
mov
mov
or
out
loop
pop
test
cmc
xchg
nop
or
mov
xchg
xchg
jle
mov
fdivs
rol
cltd
and
daa
fistl
xchg
pop
lret
xor
imul
mov
mov
push
lds
push
mov
push
pusha
enter
and
pop
les
mov
and
jmp
bnd
and
lcall
cli
cwtl
iret
cmp
add
or
cld
lock
xor
mov
or
xchg
js
out
adc
mov
cmp
adc
divl
mov
jge
mov
repz
xchg
mov
cmc
enter
mov
bound
iret
jle
xchg
cld
lds
or
mov
add
cmp
jecxz
out
push
fildl
pop
testb
cmp
mov
ss
and
test
xor
hlt
nop
sub
jb
dec
jge
push
mov
ds
loop
mov
mov
mov
idivb
adc
je
dec
dec
mov
std
mov
ljmp
jle
xor
mov
mov
add
cmp
mov
inc
repz
lcall
adc
push
jle
jl
jns
orb
push
pop
or
xchg
das
sub
xchg
push
xchg
ffreep
xor
or
inc
rclb
or
mov
jno
lret
ret
mov
roll
pop
call
sahf
mov
insb
mov
jecxz
lods
xor
xor
sbb
testl
dec
mov
inc
push
cmp
repz
fisubl
loop
push
inc
inc
mov
out
aad
fsubl
xchg
xor
pop
xchg
pop
sub
cltd
and
clc
jb
jecxz
jp
xchg
in
push
pop
rolb
scas
mov
cmpsl
cmp
lea
push
cmpsb
fdivr
jecxz
jb
xor
fisubl
jg
fstps
lds
in
data16
stos
dec
dec
inc
cmp
pop
sbb
lods
fldcw
test
jl
and
outsb
mov
pop
jno
jae
ficompl
daa
ja
mov
mov
lret
push
fiaddl
into
call
aam
rcll
mov
adc
outsb
stc
jg
ja
jnp
shrl
fisubrl
call
jg
or
lods
popa
lcall
fs
jnp
xchg
aad
jge
sub
push
xchg
subl
inc
cli
cmp
pop
or
mov
int
mov
movsl
lahf
test
rcrl
cmp
pushl
mov
jb
and
mov
mov
in
popa
decl
stos
icebp
mov
mov
fists
pop
leave
insb
dec
cwtl
fwait
mov
loope
mov
xchg
mov
pop
lock
jno
out
sbb
sarb
int3
sub
mov
sbbb
sub
ja
dec
les
sahf
stc
je
jbe
and
push
inc
push
fmul
mov
lahf
pop
lea
subb
jno
aam
push
call
xchg
pusha
lods
pop
add
dec
push
add
jnp
fimull
cmp
bound
jnp
push
pop
jbe
pusha
pop
fidivrl
sbb
jns
mov
sub
out
push
sbb
icebp
aas
push
repz
cmp
out
das
aad
jbe
cmp
inc
incw
mov
vmwrite
in
cmp
insb
cmc
mov
out
nop
pop
jne
dec
cmp
lahf
lock
movsb
ljmp
shrb
jle
lcall
pop
dec
adc
pushf
jno
mov
jnp
repnz
dec
out
mov
mulb
add
or
mov
adc
inc
inc
mov
leave
mov
repz
orl
popa
psrad
cmp
shlb
xchg
xchg
inc
mov
mov
xchg
push
fcomps
cmp
fmuls
push
test
mov
pop
xlat
jecxz
push
sub
lahf
jno
mov
pusha
sub
mov
test
jecxz
inc
ret
js
sarb
cmp
or
imul
lods
sti
pop
mov
jnp
jnp
testl
pop
fdivs
dec
push
mov
pop
mov
dec
jle
mov
dec
push
sub
in
inc
mov
mov
stos
mov
add
jecxz
mov
adc
xchg
inc
fadds
std
std
xchg
mov
lock
or
cmpsl
loopne
sti
aam
cmp
cmp
xlat
jmp
pop
adc
and
inc
icebp
mov
sbb
push
mov
and
rolb
and
or
insl
cmp
adc
shl
enter
frstpm(287
or
rorl
fnclex
jbe
fildl
cld
inc
call
mov
pop
out
loopne
jnp
mov
movsb
lahf
clc
inc
dec
cmp
jae
mov
lahf
mov
push
movsl
mov
sub
stc
mov
dec
stc
fmuls
cmc
stc
xor
sbb
sahf
imul
inc
divl
fmull
inc
dec
pop
out
or
jb
cmp
addr16
push
or
sbbl
mov
jae
test
into
cli
adc
fstl
xchg
pop
leave
testb
pop
fs
movsb
mov
in
jle
or
dec
fidivrl
mov
push
addr16
push
pop
testb
mov
rcr
or
xchg
or
pusha
dec
lods
fildl
lret
js
dec
insb
stc
jle
cmp
aas
adc
sbb
push
jmp
ljmp
popa
or
fbld
jg
jl
add
adc
sahf
xor
cltd
push
inc
call
fwait
sub
pop
loop
jnp
xor
cmp
mov
push
movsl
sti
jmp
cli
pushf
call
pop
lcall
shlb
and
fcmove
in
fdiv
push
fwait
jl
mov
out
push
jo
add
pop
ja
inc
fnstenv
xor
fcomps
idivl
insl
pop
jne
sarl
cmpsl
mov
cmp
fsub
outsl
fwait
inc
fstp
push
and
sti
sarl
cmpl
push
stos
fildl
cmc
cmpsl
dec
xchg
fwait
aas
dec
repz
jo
repz
outsl
test
mov
cmp
aad
setg
ja
jle
xchg
mov
mov
sub
ss
cltd
cmp
rcr
in
andl
mov
or
add
repz
mov
push
mov
sbb
insl
loope
mov
push
das
sahf
dec
loop
add
into
loope
mov
lcall
mov
ljmp
jle
data16
insl
xor
std
clc
lcall
adc
xor
xchg
pop
adc
fstpt
pop
loope
scas
hlt
add
xchg
dec
addr16
sbb
add
addr16
das
pop
add
lock
or
dec
dec
loop
sar
and
xchg
fwait
popa
in
jb
inc
xchg
mov
cwtl
xor
fwait
bnd
or
lods
aad
ljmp
dec
fidivrl
mov
stos
rolb
adc
adc
push
cmp
push
adc
jl
xor
jle
or
or
push
cmp
xchg
mov
iret
adc
sbb
add
mov
adc
push
popf
pop
fsub
lret
into
cltd
and
xor
call
push
negb
hlt
lret
test
inc
xchg
sahf
lods
or
mov
sahf
repnz
js
imul
call
pushf
std
stc
and
dec
xor
push
adc
mull
inc
mov
xchg
push
push
fcomip
sub
nop
les
lahf
mov
and
sbb
add
ficompl
adc
popa
cld
pop
dec
xchg
aad
shlb
rcrb
push
mov
cli
icebp
mull
mov
sbb
cmp
cmp
sahf
outsb
pushf
inc
fnstenv
enter
sub
jmp
in
push
adc
lret
lods
dec
xchg
mov
dec
push
cmpsl
mov
sub
mul
insl
xchg
add
xlat
mov
dec
sub
add
aas
xlat
push
lea
aam
test
je
lcall
ficompl
lods
jo
mov
xchg
popa
je
add
adc
popf
adcb
xor
in
pop
add
icebp
out
xchg
loop
leave
negb
pop
lods
add
xchg
pop
adc
mov
and
or
dec
in
cmpl
adc
scas
dec
out
xchg
sahf
imul
jl
inc
test
gs
rcrb
rorb
dec
xchg
stos
inc
fadds
xor
sub
clc
mov
enter
testl
out
rcll
fisubl
out
sbb
insb
jg
mov
das
int3
pop
mov
push
sbb
cwtl
pop
inc
jno
test
sahf
mov
pop
lcall
gs
je
mov
idivb
imull
xor
sub
fcomps
ffreep
adc
arpl
mov
lds
stos
dec
icebp
loope
jecxz
lcall
imul
add
sbb
jle
jecxz
repnz
hlt
mov
das
stos
mov
mov
ljmp
cmp
movaps
fiadds
sti
xor
pop
pop
push
sarb
cmp
pop
inc
pop
enter
mov
icebp
push
jae
jmp
fwait
jns
iret
xor
push
cmp
insl
repnz
add
mov
jl,pt
xor
mov
mov
inc
push
lock
push
movl
push
cmp
lea
rcrl
mov
add
xchg
jne
popa
push
sbb
xchg
repnz
stos
roll
fisubrl
xor
xor
lcall
fidivrs
pop
lcall
dec
cmp
in
mov
xchg
mov
xor
pop
xor
aaa
cmp
aas
xlat
sarb
je
stc
mov
repnz
lahf
add
xchg
lea
repz
add
push
pop
pop
sbb
std
out
xor
imul
jns
jecxz
cmc
lods
fcmove
int3
roll
adc
xchg
mov
popf
xor
mov
test
xor
ds
es
push
mov
pushf
push
jno
in
aaa
aam
icebp
icebp
aad
ljmp
loopne
test
inc
jl
push
lock
fdecstp
scas
rcrl
xchg
inc
in
xchg
pop
out
pushf
incl
fidivs
mov
int
sahf
das
jmp
fsubp
not
dec
popa
sbb
daa
pop
mov
push
flds
adc
cmp
cmc
bound
aad
cmp
xor
lds
cmp
sbb
jno
rcll
repz
mov
fildl
sub
or
rcl
or
xchg
stc
adc
jl
push
cmp
add
or
outsl
mov
out
scas
xor
jge
jmp
jae
xor
bndldx
cmp
std
add
aas
xchg
cmc
test
pop
add
cmc
or
jno
leave
shrb
lock
mov
jge
js
inc
mov
ret
clc
cmpsb
xchg
sub
xlat
mov
push
mov
sbb
cli
in
scas
mov
lret
pop
xlat
pop
pop
fidivrs
data16
adc
inc
xor
out
adc
stc
imul
imul
jnp
inc
mov
push
outsl
je
cltd
jmp
mov
sbb
push
mov
add
je
nopl
ja
mov
xor
cmp
mov
cmp
rorl
mov
pop
icebp
cmp
out
mov
clc
jns
fcomi
jp
stos
and
mov
and
ja
fs
mov
adc
sarb
add
jle
xchg
or
test
icebp
push
loop
adc
lea
or
testb
mov
cltd
jae
popf
repz
jo
insl
out
lret
out
iret
cli
pop
sti
out
pop
imul
insb
add
push
or
idivb
fcoms
cmp
sahf
mov
jns
jp
jg
pop
cmp
fstpt
mov
cmp
dec
mov
std
addr16
xor
ljmp
aad
shl
lahf
jae
pop
lret
and
sti
test
cmp
rcrl
jle
pop
jo
dec
pop
rdpmc
lret
out
test
or
jle
int
and
dec
jb
icebp
push
mov
xor
enter
out
and
imull
mov
ret
xor
ss
mov
jp
repnz
pop
push
mov
push
movsl
or
add
jnp
pop
and
fcmovnu
pushf
std
imul
popf
lcall
jae
cli
mov
xor
lret
push
mov
or
aaa
sub
in
clc
xor
mov
jg
cmp
lods
es
fldenv
add
fs
push
mov
or
clc
sarb
xchg
mov
lock
mov
lock
jle
mov
inc
insb
mov
cmpsb
or
xchg
pop
sub
and
loop
loopne
add
mov
xor
aaa
stc
inc
jle
sub
aam
sbb
and
jo,pn
xlat
mov
dec
xchg
ficompl
xorb
jnp
sub
daa
push
in
mov
pop
filds
hlt
les
jne
push
or
stos
inc
iret
fdivl
jns
adc
mov
cs
xor
push
stc
xor
test
cmp
aad
cs
inc
outsl
jne
hlt
arpl
fwait
lock
sub
xor
notb
push
negb
pop
and
das
push
push
ja
mov
das
jl
pop
and
pmuludq
or
xor
inc
mov
or
inc
aas
push
jmp
call
or
loope
dec
push
sbb
push
mov
push
out
xor
jmp
and
stos
add
and
out
iret
jmp
sub
mov
lret
insl
jg
rcrb
adc
cmpsb
lock
dec
das
xor
leave
push
mov
insl
adc
sarl
or
inc
mov
push
in
in
clc
dec
and
ret
decl
clc
xchg
sbb
stos
sub
xor
cwtl
mov
mov
add
clc
jo
loop
cltd
xlat
and
stos
aam
fiaddl
test
and
fiaddl
jae
imul
enter
sbb
xchg
inc
dec
cmpl
mov
std
out
mov
xchg
add
cmp
cmp
cmpsl
mov
mov
lods
xor
xor
call
dec
mull
xor
push
lea
out
sbb
jmp
sub
pop
movsl
xchg
sbb
cmp
mov
popa
xchg
push
sbb
jp
stos
or
mov
xor
mov
sub
and
push
pusha
mov
dec
push
repz
add
aad
jecxz
stc
out
ljmp
cmp
add
mov
loope
sbb
push
mov
push
mov
mov
aam
je
mov
jns
xchg
lret
inc
jne
mov
fstps
push
leave
ss
stc
jmp
movsb
cwtl
inc
xlat
pop
pop
fidivrs
mov
imul
outsb
mov
insl
jne,pn
add
loope
pop
hlt
out
sub
pop
lcall
and
iret
push
stos
imulb
subb
mov
mov
or
sub
push
xchg
and
int
mov
or
jle
dec
cld
push
or
cmp
mov
js
push
int3
in
or
ljmp
out
aam
jb
adc
cmp
rorb
scas
sub
jmp
clc
push
and
dec
push
pop
gs
in
xchg
mov
xchg
and
in
mov
jp
or
outsl
adc
sbb
mov
add
cmpsb
add
cmc
popa
call
cmpsb
ficoms
mov
jnp
imul
gs
inc
ss
mov
loopne
jmp
std
mov
cmp
repz
or
jo
cmp
push
fists
jnp
lods
std
mov
ljmp
cli
out
xchg
lods
sub
dec
in
das
icebp
shll
flds
add
jno
pop
add
lods
fiaddl
mov
shll
aas
add
mov
mov
hlt
in
js
dec
pop
add
ljmp
out
jne
adc
sbb
dec
ljmp
addr16
bound
mov
sbb
sub
in
mov
inc
sbb
fidivrl
or
hlt
mov
and
sahf
fidivrl
js
stc
out
stos
or
nop
and
icebp
lods
cli
fbstp
sub
xor
loopne
shrl
mov
lea
add
rolb
jnp
cmp
aas
test
cmp
xchg
lods
jp
pop
sub
aad
mov
mov
jle
loope
jno
and
pop
sbb
push
xor
cmp
scas
push
push
cmp
mov
fidivs
and
jle
add
mov
scas
adc
cmp
js
out
adcl
loop
hlt
cld
mov
lock
icebp
das
adc
test
ja
fnstenv
pop
icebp
xor
mov
xchg
push
add
mov
mov
and
inc
lea
out
adc
xchg
xor
inc
pushf
mov
lock
push
mov
and
lcall
add
addl
enter
add
jae
out
jb
insl
out
in
popf
adc
mov
pusha
or
adc
shrb
out
mov
push
aad
imul
or
fisubs
jle
jle
xor
sahf
mov
lcall
push
adc
repz
or
test
pop
mov
and
out
jo
jnp
push
mov
in
jnp
jns
mov
push
stc
test
push
outsl
js
bnd
jle
mov
adc
int3
js
testl
pop
sub
push
imul
fwait
imulb
lods
sub
lds
push
lret
mov
clc
push
mov
pop
xchg
loope
pop
outsl
mov
and
loop
xchg
insb
sbb
lock
xchg
pop
mov
jecxz
mov
xorl
aad
and
repz
fsubrs
xchg
idivb
mov
adc
loopne
sub
out
jmp
ret
jle
cmp
repnz
push
divb
dec
stc
ret
mov
clc
stos
xchg
stos
fcomp
sub
jno,pt
stos
xchg
sbb
cmp
jmp
dec
add
push
repnz
hlt
cmpsb
xchg
testb
push
sub
pop
push
je
inc
add
clc
jnp
mov
push
xor
fmull
sarb
mov
cld
lds
pusha
addl
aaa
mov
cmp
push
ret
push
jle
subb
xor
cld
and
andnps
mov
into
cmp
jo
push
stc
addr16
or
in
sbb
roll
lds
std
push
or
cli
jge
mov
pop
imul
iret
stos
leave
push
jnp
inc
rcll
neg
cmpsl
sub
test
dec
nop
or
lahf
cmp
add
pushf
xor
stos
xchg
xor
es
pop
jno
sbbl
mul
push
jge
mov
mov
adc
repz
xor
xor
roll
pop
loopne
jbe
mov
mov
stc
pop
dec
pop
scas
andb
icebp
int3
lods
js
adc
popa
pop
lock
loopne
insl
jnp
cmp
inc
adc
jno
inc
lcall
test
or
mov
ljmp
push
call
push
pusha
pop
stos
gs
out
ja
cmp
pop
jne
movsb
shrl
clc
lcall
mov
ja
xor
lods
shlb
push
out
sub
aad
lea
or
cli
xor
mov
mov
ds
scas
and
into
mov
pop
xchg
sbb
ror
xor
push
shl
or
sbb
mov
inc
adc
icebp
xor
aaa
adc
dec
bound
icebp
pop
xor
imul
stc
icebp
in
cmpsb
mov
lcall
mov
adc
inc
adc
dec
fnstsw
icebp
xchg
andb
shlb
gs
sbb
arpl
call
xchg
inc
jb
ret
add
aaa
pop
in
push
push
imul
push
xchg
shrb
cmpsl
pop
xchg
and
mov
mov
roll
in
mov
std
rcrl
push
int3
pusha
xchg
rclb
mov
neg
jb
js
xor
scas
mov
in
sarl
pop
jae
jbe
sahf
daa
imul
ret
jecxz
repz
pop
lahf
or
or
fwait
mov
adc
or
shl
bound
cmp
and
daa
pushf
bound
inc
mov
cmp
jb
movl
loope
dec
icebp
outsb
xor
addl
pop
pop
pop
xchg
cld
test
mov
lock
push
cli
das
adc
test
loope
dec
sbb
sti
add
das
std
jno
mov
decb
stos
loope
repnz
sub
jmp
icebp
jmp
xor
mov
adc
lods
int
cmc
jnp
leave
sbb
scas
bound
xchg
aaa
js
jo
sahf
inc
jnp
inc
sbb
adc
or
pop
mov
add
push
lock
shrl
push
ret
mov
cs
add
int
add
imul
mov
mov
sbb
movsl
rcrb
dec
das
mov
inc
mov
cwtl
cmc
pop
pop
loope
push
arpl
mov
lret
xchg
imul
push
add
shl
mov
mov
cli
or
mov
lock
les
xchg
add
in
imul
adc
mov
mov
data16
aas
dec
push
movl
jne
pop
out
push
xchg
sti
enter
ljmp
ret
imul
pop
scas
lods
push
jg
push
cmpb
xor
push
gs
dec
jp
sub
cltd
out
xor
repz
lret
pop
pop
mov
cmp
ljmp
std
mov
adc
lcall
or
jg
inc
sbb
pop
dec
sahf
inc
xor
pop
lret
adc
lock
add
mov
mul
mov
sbb
shl
xor
and
ljmp
dec
iret
mov
mov
xor
imulb
lret
ja
outsl
popl
inc
and
jbe
inc
pop
rcll
in
es
bound
xor
outsl
ret
adc
xchg
or
jbe
and
sub
in
scas
inc
inc
ss
dec
ss
inc
repnz
cmpsb
movsb
inc
adc
cmp
sbb
and
popa
jnp
or
pop
jmp
mul
cmp
js
xor
sub
sahf
fcoml
push
mov
into
jecxz
adc
test
xchg
add
lret
inc
mov
out
adc
pop
dec
addr16
add
dec
lock
push
xor
mov
out
mov
and
mov
icebp
test
filds
inc
not
daa
mov
or
sahf
push
adc
fisubl
fwait
mov
push
cmpl
add
or
xor
mov
jbe
jl
loope
mov
and
fisttps
or
jne
fldenv
lock
or
mov
lahf
mov
mov
divb
addr16
cld
add
loop
xlat
lods
fs
sub
or
mov
cld
or
pop
scas
sub
sub
fdecstp
test
or
cmp
xchg
push
std
xor
jge
xor
decb
cld
gs
sarb
rcrb
jb
mov
rcrb
sbb
pop
or
jae
jmp
jne
dec
push
cmp
or
inc
call
add
mov
xor
add
es
sub
mov
icebp
jl
movsl
repnz
pop
js
cmc
cwtl
shlb
add
lahf
enter
and
addb
cmp
xor
stc
and
add
inc
lods
dec
nop
push
js
cmp
push
add
mov
test
push
add
push
scas
inc
enter
lret
or
add
pop
orl
cld
cmp
jg
cmp
pusha
int3
sub
scas
lret
push
xlat
iret
adc
mov
xchg
dec
popa
push
push
or
push
and
push
inc
pop
nop
fisttps
and
into
push
and
inc
jmp
loop
andb
cwtl
xor
add
push
arpl
mov
cmp
xchg
add
je
test
mov
fisttps
pop
and
or
scas
jle
clc
lcall
push
lea
fidivl
pop
je
xchg
adcb
in
subl
cmpsl
mov
xor
mov
jnp
jo
popf
js
cld
test
xor
out
sub
and
mov
lahf
aas
add
or
fs
jnp
add
cmp
test
jl
jo
scas
out
mov
push
pop
push
scas
jmp
pop
pop
mov
test
dec
repnz
adc
popa
xchg
inc
int3
jnp
daa
dec
jp
std
dec
outsl
sarl
inc
cmpb
mov
rolb
sub
scas
xchg
ds
stos
inc
push
scas
inc
inc
movsb
aaa
jb
loope
int
xchg
sbb
cmp
in
movsl
mov
mov
test
cmp
fistpll
xor
xchg
rol
mov
repz
mov
xchg
jmp
inc
sub
pop
dec
pop
cmp
mov
dec
insb
insl
ret
adcl
mov
xor
cld
clc
loopne
ljmp
lret
fcoml
jge
cmp
cld
inc
loopne
xor
jo
jl
cld
or
out
je
jno
mov
push
outsb
xor
sbb
dec
dec
jo
nop
repz
add
in
mov
xor
dec
dec
fld
cld
insl
in
js
rcrl
mov
clc
mov
pop
inc
leave
clc
sbb
mov
inc
gs
inc
cwtl
sub
enter
in
pop
imul
lods
cmpsb
jecxz
js
jg
imul
aaa
sbb
sbbl
stos
xor
sahf
outsl
push
xchg
insl
add
push
jl
enter
push
adc
hlt
inc
pop
insb
aad
lcall
rolb
ss
sbb
fnsave
cmp
xchg
mov
and
jns
xchg
aam
and
mov
cmp
or
jb
fsub
mov
rol
add
iret
add
and
outsl
in
scas
jns
inc
xchg
jbe
push
and
or
sbb
push
or
outsl
into
mov
aaa
repz
loop
mov
sub
addb
xor
js
jle
sbb
pop
or
imul
pop
pop
pushf
aad
out
adc
cmpb
mov
mov
add
or
out
icebp
lahf
dec
jb
call
mov
ficoml
inc
js
clc
aad
punpcklwd
or
inc
mov
pop
jmp
mov
add
push
xor
push
sub
push
jne
lds
sbb
sub
xchg
dec
jle
pop
mov
push
sar
jbe
pop
mov
in
repnz
imul
xchg
push
adc
adc
leave
ja
das
leave
int
cmpsl
jp
xor
nop
jge
out
xorl
add
xchg
jb
ds
dec
or
ret
out
loopne
ss
pop
mov
in
test
das
lahf
fcomi
dec
shll
mov
dec
xchg
outsl
pushf
sub
push
js
pop
repz
fcmovnb
push
std
xor
push
pop
jmp
aad
sti
lds
scas
mov
clc
push
push
xchg
jae
shl
adc
icebp
enter
hlt
stos
pop
xchg
pop
inc
xor
add
mov
lahf
nop
lds
inc
repnz
xchg
movsb
jb
aas
cmpsl
daa
pop
out
sub
xor
adcl
cwtl
mov
ss
add
test
fisttps
adc
mov
xlat
push
nop
or
sub
xchg
rcl
pop
andb
cmc
notl
xor
repz
insl
mov
mov
push
loop
lahf
jne
nop
cli
mov
dec
outsl
push
mov
test
rclb
loop
push
cld
add
aad
adc
jge
jae
in
scas
xchg
out
mov
dec
inc
jns
mov
sarb
cli
idiv
sbb
inc
lcall
sub
bound
push
jmp
mov
jmp
das
mov
ljmp
sbb
xchg
xlat
push
sub
cmp
cwtl
ljmp
mov
leave
cmp
mov
xchg
pushf
imul
inc
into
jge
mov
inc
pop
mov
outsl
out
cs
sub
xor
xlat
mull
cwtl
pop
addr16
sub
sub
push
std
das
inc
stos
push
movsb
push
lods
out
mov
jne
adc
iret
js
clc
pusha
in
stc
lock
cmc
dec
out
das
iret
jb
out
repnz
outsb
int3
idivb
loop
repz
jg
lahf
adc
fildll
dec
mov
dec
adc
notl
lret
fwait
js
addr16
mov
jg
lret
nop
ja
jnp
aam
or
mov
mov
flds
dec
aad
sub
imul
ljmp
jbe
pop
insl
mov
pushf
hlt
sub
test
xchg
xchg
xchg
pop
pop
daa
ret
sti
mov
fsubs
jno
push
jecxz
mov
nop
popa
add
aas
sub
icebp
ficompl
mov
outsb
enter
aad
scas
xor
into
inc
in
mov
mov
push
popa
xchg
and
push
scas
adc
xorl
fnstcw
mov
mov
sbb
and
mov
inc
lods
outsb
dec
adc
les
jb
data16
hlt
lcall
xchg
add
out
iret
jne
clc
pop
aad
in
pop
clc
fildll
pop
push
fcomi
jl
jb
cmpb
scas
mov
dec
pop
or
pop
jl
sbbb
dec
es
mov
xchg
xchg
pop
outsb
negl
aad
cs
xchg
out
js
jns
add
sbb
and
into
call
inc
push
lods
xchg
arpl
pop
inc
movsb
repz
mov
iret
cmpsb
sub
andl
dec
xchg
in
dec
aam
and
inc
mov
in
lss
lds
pop
jo
mov
loop
in
stc
movsl
xor
enter
loop
xor
or
rorl
jb
out
ss
hlt
sti
jl
dec
lahf
cmp
add
inc
jmp
stos
mov
xor
ljmp
jle
movl
std
into
and
lcall
sbb
jns
jl
or
or
jo
mov
dec
stos
jl
adc
jae
or
mov
mov
jecxz
bndldx
mull
fldcw
cmpsb
daa
sub
hlt
jns
cwtl
shl
mov
pop
cmpsb
int
clc
mov
fmull
and
stc
mov
jbe
cmpsl
pop
stc
in
mov
mov
in
add
cmpsb
mov
mov
cmp
sbb
cmp
dec
pop
and
insb
ds
jge
pop
mov
dec
jne
cmc
mov
mov
inc
dec
pushf
jg
mov
repnz
sahf
xor
xor
popf
jmp
iret
sbb
imul
loop
icebp
or
out
dec
aam
dec
jle
shll
jl
sbb
mov
cmp
insl
mov
incb
add
aad
mov
imul
mov
push
sbb
cmp
cmpsl
jle
data16
jl
mov
sbb
push
lea
add
repz
adc
cld
xor
push
adc
jle
dec
movl
xchg
jbe
xchg
or
sbb
jle
scas
inc
dec
sbb
sub
dec
and
inc
hlt
mov
sub
js
jb
mov
movsb
cmp
dec
ja
cmc
jnp
popf
dec
jl
add
jl
cmp
outsb
test
dec
xor
pop
outsb
jp
call
rclb
shll
xchg
jg
jo
cltd
xchg
jmp
xchg
cmp
xor
repz
add
and
mov
out
push
mov
sti
ja
aas
idivb
test
outsb
cs
jl
jle
push
ja
inc
xchg
icebp
fsubr
add
scas
mov
and
dec
xor
sbb
pop
stos
xchg
nop
fisttpll
test
fs
push
lea
xchg
das
dec
mov
cmp
test
icebp
out
jmp
mov
movsl
mov
jnp
jo
das
mov
lods
lock
loop
xchg
test
imul
and
mov
gs
sbb
xchg
fsubr
movsb
ljmp
jns
stc
repz
lret
sbb
mov
pop
or
push
sub
cmc
sub
sub
gs
ljmp
xchg
or
inc
lret
fnstsw
cmpl
xchg
xchg
jnp
js
in
in
popa
xchg
jl
dec
imul
lahf
popa
cmp
lods
addl
lods
xor
stc
scas
cwtl
inc
sub
stos
movb
scas
pop
inc
xor
jno
insl
xor
xchg
sub
cs
xchg
out
cmpl
push
icebp
xchg
or
nop
adc
stc
jae
dec
sbb
inc
js
int3
jb
clc
jp
aad
or
fisubl
das
sub
push
je
aad
mov
out
cmp
jb
sub
inc
sub
push
xlat
push
jle
push
es
pop
inc
cmp
push
push
data16
and
std
stos
dec
pop
fimull
fs
sub
pop
cmpsl
repz
inc
icebp
add
adc
jb
sbb
push
call
pop
jo
jo
push
inc
mov
pop
push
insl
rcr
fmulp
int3
pop
addr16
xor
adc
movsb
mov
mov
push
lcall
or
outsl
mov
pop
sub
daa
scas
xchg
pop
iret
sbb
loop
repnz
and
cwtl
jns
je
js
lds
cs
movsb
pop
sbb
or
scas
in
int
jb
xor
and
das
rcll
xchg
push
gs
clc
jnp
sti
cld
repnz
xor
or
fs
or
sub
sub
roll
mov
ficomps
sbb
lods
dec
fmul
jae
and
stos
js
jge
push
nop
dec
adc
out
mov
cmp
scas
int
sub
jl
subb
dec
cmpl
sahf
dec
adc
mov
jle
inc
out
pop
pushf
xorb
rorb
repnz
or
lret
add
insb
scas
mov
test
mov
sbb
dec
enter
cld
pop
mov
test
add
clc
jge
std
jp
mov
mov
or
into
nop
cli
pop
test
cmp
mov
out
fmuls
fcomps
push
test
mov
jae
data16
ja
out
out
ljmp
mov
xor
mov
int
int3
test
lcall
mul
icebp
clc
mov
insl
adc
lea
icebp
mov
sbb
orb
les
insl
jb
icebp
mov
sub
inc
out
mov
mov
xchg
enter
mov
push
gs
pop
outsb
das
and
cmp
mov
pusha
mov
in
mov
xor
dec
dec
inc
sti
lcall
negb
push
and
out
mov
stos
sub
call
jb
and
mov
das
fiaddl
idivb
jno
stc
int
int
mov
jmp
mov
test
adc
jnp
adc
jns
mov
sarl
xchg
and
cmp
frstor
adc
inc
adc
inc
stc
jae
jp
push
addl
mov
aad
int3
and
sahf
lea
pushf
jne
inc
mov
xor
in
adc
test
pushl
xchg
repnz
xor
lcall
or
jo
push
jb
jns
push
rol
push
jo
add
bound
jae
inc
insl
push
loopne
xor
add
icebp
out
and
jae
pop
les
sub
ds
or
add
sbb
jb
push
pop
mov
or
or
inc
push
lds
ss
icebp
jnp
es
and
cli
dec
jb
mov
in
mov
cli
mov
cmpsb
and
in
lock
ja
pop
es
lcall
inc
cmp
jg
rol
aas
int3
stos
mov
clc
lods
rcr
out
mov
jns
lea
out
push
mov
or
jne
or
pop
or
ja
int
mov
sub
or
pop
add
jne
xchg
push
add
push
das
cli
data16
dec
dec
loopne
mov
cmp
or
cmp
fldenv
dec
sub
out
add
cmpsl
sub
mov
push
daa
pop
test
cmp
stc
icebp
call
or
push
pop
dec
add
push
shlb
fistpll
and
sahf
mov
imul
test
lods
shrb
fmuls
scas
lods
loope
xor
pushf
lea
or
sti
std
arpl
mov
xchg
lcall
aam
jnp
cli
dec
cmp
sysenter
idivb
cmc
pop
test
orl
mov
push
xchg
add
mov
mov
test
pop
test
xor
inc
cmp
mov
pop
add
adc
jae
cmp
in
ja
loop
iret
testb
rclb
inc
dec
ja
mov
mov
inc
adc
out
es
xchg
test
or
mov
je
xchg
mov
jl
sub
testb
xor
cmp
push
cmp
fcmovnb
loop
mov
leave
stos
cmp
testl
popa
adc
sar
and
cmp
xchg
icebp
add
pop
and
pop
fadds
repnz
add
jne
sub
jp
mov
andb
jle
sub
jmp
jmp
inc
mov
push
icebp
jae
or
inc
es
repnz
add
pop
inc
imul
jae
and
aaa
xor
xchg
int
cld
add
inc
pushf
mov
lods
mov
xchg
ja
test
dec
bound
hlt
mov
loop
lcall
mov
add
pop
int
or
adc
and
jg
pop
cmp
mov
int3
jl
jne
pop
test
mov
mov
sub
jecxz
cmp
push
cld
std
cltd
push
cmpsl
adc
and
xorb
orb
ljmp
mov
lcall
lcall
cmc
mov
roll
or
dec
ss
xchg
jmp
add
fisttpll
enter
add
flds
addr16
icebp
pop
ljmp
xchg
cmp
das
push
sub
hlt
repnz
fmul
sub
jge
and
filds
cld
cmp
dec
cmp
in
dec
sbb
js
adc
fdivl
xor
mov
call
cld
inc
insb
daa
std
inc
int3
sbb
inc
ret
sub
mov
sbb
popl
pop
add
lret
movsl
push
add
iret
aad
stos
dec
fdivrs
cwtl
aam
sub
xchg
pop
sbb
sti
mov
mov
mov
xchg
cmpsl
pop
pop
xchg
mov
fbstp
loop
mov
sbb
outsb
sahf
inc
stos
orl
je
push
xchg
scas
rorb
out
xchg
cmp
int3
jl
cmp
hlt
dec
pop
jmp
mov
sub
jbe
mov
in
lods
sbb
mov
mov
outsb
mov
fsub
out
test
test
dec
lret
jns
js
jp
into
lret
pop
test
and
sahf
test
out
imul
test
js
ret
insl
xor
jo
movsl
or
loopne
mov
lock
out
ret
in
adcl
jne
adc
or
or
jae
dec
gs
add
pop
sub
inc
test
bound
pop
pop
fisubs
cmpb
jg
cmpsl
mov
inc
and
pop
rcll
mov
ret
sti
jns
ret
pop
repz
cmp
out
xor
adc
cmpsb
bound
inc
inc
movsl
jg
inc
push
or
out
mov
inc
test
aaa
inc
cld
pop
loop,pt
lods
movsl
lock
popf
repz
jbe
cmpsl
shrl
xor
xchg
hlt
call
sub
scas
adcl
adcb
push
sbb
push
cmp
adc
mov
lds
xchg
cli
mov
fs
or
jl
jl
cmc
pop
mov
rcll
int3
mov
hlt
cmp
into
or
add
sub
push
mov
subb
cmp
jb
jp
clc
ss
lcall
loopne
mov
je
lret
test
xor
addl
fsubs
cmp
and
cwtl
or
inc
fcoml
mov
jnp
cmpsl
jb
cmp
add
clc
cmp
cmpl
adcl
cmp
das
lcall
mov
xchg
cmpsb
scas
flds
pusha
lcall
xchg
ret
dec
or
ret
out
fucomp
outsl
mov
jb
add
and
jmp
arpl
adc
add
inc
mov
or
pop
jns
xchg
test
lret
popf
fistpl
pop
imul
sbb
jae
sarl
or
cmpsl
add
mov
pop
sub
push
cli
inc
call
or
xchg
cwtl
xchg
fs
add
add
pop
cld
fdivs
xchg
repnz
fists
push
push
pop
lcall
push
add
cmc
icebp
or
js
sbb
js
jb
ljmp
mov
test
xor
fcom
std
push
dec
or
cmpsl
push
aam
push
inc
or
jne
imul
sub
cmp
aas
cmp
sbb
pushf
jae
sub
mov
pop
fs
inc
pop
jp
pop
outsb
and
repnz
inc
xor
sub
add
lcall
stos
outsb
out
xchg
pcmpeqd
mov
push
or
pushf
dec
xor
add
pushf
jge
mov
in
and
dec
adc
xor
out
jmp
imul
cwtl
add
xchg
movsb
mov
xor
add
fisttpl
jo
ljmp
nop
mov
inc
stc
mov
cwtl
and
inc
push
rorb
adc
pop
inc
mov
in
adc
mov
shrd
jmp
fucomip
or
push
mov
push
mov
sub
inc
add
push
into
int
ret
repz
in
xor
pop
lret
or
out
or
dec
fildll
mov
sub
into
xchg
les
cmp
cli
sub
rol
faddl
push
pop
repnz
mov
nop
pop
jbe
and
fadds
sbb
pmullw
pop
mov
mov
jb
loope
into
mov
sub
mov
repz
sub
jns
scas
sub
popa
inc
mov
flds
jns
and
jnp
mov
mov
shll
pop
cmp
pop
dec
mov
fwait
ret
jp
jbe
shl
add
add
lods
mov
mov
and
sub
dec
mov
mov
or
into
sub
jae
sub
mov
idivb
repz
dec
jle
fildl
mov
scas
mov
push
into
sbb
dec
xor
sub
mov
add
jmp
mov
or
cmp
cmpsl
pop
jnp
pop
clc
test
js
repnz
loope
or
sbb
push
add
cmp
or
push
fcmovbe
or
aas
and
push
into
xor
mov
popf
xor
add
insb
adc
jmp
sbb
inc
mov
or
and
jmp
negl
push
xchg
aam
fisubl
add
or
jge
shlb
jg
jle
mov
adcb
mov
jno
cmp
mov
adc
cmc
shrl
nop
jbe
pop
movsl
scas
lds
adc
sub
cmp
cmc
mov
pop
push
or
mov
sbb
popa
lahf
jne
mov
fcoms
fbld
lar
or
mov
mov
enter
and
lds
mov
dec
stos
jge
xchg
sahf
jl
push
jne
push
ret
xlat
sub
xchg
hlt
adc
arpl
sbbb
push
mov
aad
dec
adc
jo
idivl
ficompl
js
addr16
notl
push
mov
loopne
mov
lahf
pop
inc
sub
mov
ja
and
cld
add
inc
xchg
push
outsl
mov
mov
flds
xor
mov
movl
mov
cmpsb
cmp
pop
imul
add
popf
insl
iret
imul
dec
and
jae
cmpl
faddp
dec
inc
and
sbb
lock
push
jg
adc
hlt
or
xlat
mov
mov
ret
loop
aad
imul
dec
and
imul
in
push
stc
cli
or
inc
cmp
aam
adc
leave
pop
cmp
pop
scas
daa
mov
je
cld
hlt
cmp
jge
mov
outsb
lods
shlb
insl
aam
xor
inc
xor
jp
mov
mov
data16
sahf
lds
mov
dec
and
js
mov
push
add
and
div
or
mov
push
xchg
add
out
ja
in
add
std
bnd
xor
dec
lds
je
pop
test
mov
mov
pop
ret
mov
xor
loope
nop
ret
test
dec
and
pop
or
or
out
mov
xchg
test
arpl
mov
mov
and
jae
mov
mov
dec
lcall
mov
sub
mov
mov
jecxz
cs
pop
in
ret
xlat
iret
sbb
pop
sub
xor
cwtl
ljmp
leave
test
dec
dec
xchg
mov
sub
aas
lcall
push
jmp
add
adc
mov
or
mov
and
mov
fadds
mov
xor
insb
pop
xor
adc
mov
lods
jmp
clc
arpl
mov
xlat
mov
sub
sbb
adcb
in
cmp
call
mov
pop
xacquire
add
mov
push
callw
inc
dec
jae
inc
adc
jecxz
jns
adc
clc
cmp
push
mov
es
xchg
or
aad
pushf
aas
insb
and
lock
mov
mov
fildl
adc
inc
jnp
push
push
mov
sub
jp
inc
ds
adc
mov
add
jne
add
pusha
pop
mov
and
pop
scas
and
test
aaa
js
xor
inc
push
sub
pop
shlb
adc
mov
in
jne
repz
pop
iret
inc
jmp
adcb
push
fildl
jmp
sarb
stos
rol
xchg
test
and
das
ss
jb
dec
fstps
dec
ja
xor
and
out
adc
add
bound
jne
jno
popa
test
testb
xor
adc
mov
pop
sbb
push
aas
daa
and
add
mov
mov
shrl
jge
ret
jbe
lds
mov
add
sbb
mov
loope
fsubrs
dec
jle
in
in
out
adc
jo
mov
jl
mov
test
mov
xchg
xor
into
or
ret
jne
jge
in
mov
sti
and
mov
push
adc
je
mov
in
or
sahf
daa
pop
test
jl
jle
pop
dec
sub
out
adc
mov
sub
pushf
pop
hlt
add
mov
lret
jae
outsl
ja
and
jns
jg
jecxz
jmp
dec
mov
jns
sahf
fistpl
xchg
jno
inc
xor
mov
mov
das
mov
lock
outsb
shl
nop
mov
out
dec
in
test
jmp
outsl
dec
xchg
fucom
jo
inc
iret
gs
cmp
insb
hlt
dec
add
add
pop
add
mov
add
adc
and
orb
adc
xchg
dec
test
mov
mov
sub
xchg
sbb
sub
cmp
push
test
dec
in
ret
out
movsl
or
sub
arpl
mov
imul
pop
stc
out
jl
adc
bound
pop
lock
sub
lock
xchg
mov
ss
mov
sbb
sub
fwait
loopne
sti
sub
sub
scas
inc
movsb
sub
xor
outsl
inc
hlt
fldt
aad
mov
pop
jp
and
jo
cmp
fwait
ror
adc
je
fcmovb
iret
adcb
mov
jg
pop
add
lock
jl
adc
shlb
dec
cmpb
icebp
pop
rorb
cmp
or
les
xor
cmpb
shlb
xor
cmp
jecxz
xchg
jbe
out
xor
bound
cmp
js
xchg
subb
pushf
test
jne
test
cltd
js
in
es
out
push
inc
shll
or
test
mov
fcoms
add
mov
nop
popa
aas
jo
insl
rolb
icebp
jbe
jg
dec
xor
testb
in
sub
cmp
sahf
xor
out
enter
stc
cmpsl
inc
pop
out
dec
std
dec
and
xlat
jmp
cld
and
cltd
cltd
int3
je
fbstp
fstps
inc
scas
pop
icebp
imul
sbb
ss
into
inc
xchg
inc
movsl
lock
adc
or
cmp
inc
mov
mov
call
roll
jb
enter
cmp
xchg
call
lret
jle
dec
push
iret
push
adc
icebp
cmp
adcl
xchg
cltd
add
pop
push
ret
out
mov
inc
inc
jbe
popf
pushf
fmuls
lds
push
leave
pusha
scas
outsl
inc
mov
mov
mov
adc
imulb
mov
adc
mov
movsl
in
and
orb
jg
or
inc
out
lret
dec
or
adc
pop
icebp
mov
add
arpl
mov
push
scas
push
inc
test
pushf
xorb
xchg
cmc
sbb
cwtl
lock
mov
xchg
dec
sahf
lock
nopl
pusha
repz
shlb
js
dec
clc
jp
outsl
inc
lret
repz
jae
mov
ja
dec
negb
xchg
push
push
enter
pop
popa
fmul
push
notl
fwait
das
xor
pop
lock
icebp
mov
repz
sahf
push
mov
popa
xor
jae
jbe
out
popa
mov
int3
xor
popl
adc
push
bound
mov
cwtl
inc
int3
mov
and
int3
divl
adc
pop
jge
lret
cmc
push
fidivl
shr
adc
jg
aas
sbb
in
lds
idivb
nop
fdivl
in
jb
testb
repz
mov
sahf
xor
ja
push
clc
gs
movsl
mov
sub
dec
push
mov
inc
dec
lds
or
push
insl
icebp
inc
loop
dec
mov
sub
cs
xor
mov
jno
int
mov
sub
fcomi
mov
cmp
fwait
mov
ljmp
fcompl
push
cli
sbbl
movsb
xchg
jns
sub
cmp
pushf
in
push
repnz
ja
inc
cwtl
adc
push
cmpsl
cwtl
bound
cmc
aam
aam
mov
pop
out
mov
inc
dec
or
test
mov
aas
pop
mov
add
jno
inc
ss
jg
clc
out
xchg
push
lea
movsl
or
jns
push
jle
or
daa
xchg
jge
stc
sub
and
add
divb
push
movsb
aaa
push
rolb
xchg
jecxz
sbb
push
jp
sub
adc
testb
mov
sbb
daa
adc
mov
and
out
sbb
bound
inc
cmp
xor
mov
push
and
dec
inc
out
dec
pushf
sbb
sbb
jl
fidivrs
out
jge
cmp
mov
jl
mov
pop
jecxz
popa
cmova
in
xor
repnz
jle
dec
cltd
mov
insl
ret
gs
jns
adc
outsl
movsb
xlat
je
shlb
lahf
out
lea
ja
sahf
inc
cmp
sbb
xor
ret
push
jnp
xchg
lcall
push
adc
es
fwait
and
movsb
or
pushf
repnz
in
lcall
fstpt
repz
lcall
cwtl
outsb
xor
inc
repz
sahf
mov
add
ljmp
daa
adc
mov
dec
cld
inc
add
jne
cmp
pop
repnz
movsl
mov
inc
jl
jg
dec
icebp
or
inc
push
xor
fidivs
mov
sub
dec
sahf
cmp
jne
mov
jle
mov
clc
and
xchg
popf
jne
popf
aam
ficomps
insl
js
js
add
push
cmpsl
cmp
add
pop
add
mov
fcmovu
mov
nop
mov
aad
cmpsl
mov
addr16
fisttpl
lock
sahf
lret
loop
or
insb
xchg
scas
adc
cs
mov
repz
mov
mov
mov
ja
pop
cltd
mov
push
aaa
pop
mov
mov
ja
add
push
mov
pushf
sub
shlb
fnstenv
in
mov
pop
adc
popa
sbb
aas
sbb
addr16
cld
adc
shll
push
cli
push
sahf
xchg
xor
jle
pop
out
clc
pop
hlt
fbld
adc
int3
mov
and
fwait
inc
sub
frstor
fstl
pop
cmpb
insl
data16
bound
test
sbb
adc
xor
sbb
mov
test
outsb
pop
mov
ja
cmp
xchg
fldcw
mov
jbe
and
jo
inc
jns
cmc
test
sbb
rol
gs
push
cmp
ret
or
fnstenv
push
mov
popf
fiaddl
and
push
cmc
adc
lret
xchg
and
mov
jnp
ficoms
cli
popa
push
imulb
lret
mov
std
imul
mov
sub
ficompl
jbe
mov
outsl
out
iret
adc
mov
cld
inc
lret
je
pop
enter
sbb
xorl
add
pop
lahf
mov
sub
sub
xchg
dec
orl
insl
xchg
or
test
jp
xor
dec
daa
push
xor
ret
sub
jb
and
mov
cmpsl
or
scas
mov
cmp
sahf
cmpb
mov
mov
xchg
mov
inc
cmc
xor
jne
mov
insb
jg
jle
push
pop
jns
jecxz
mov
data16
mov
pop
test
jl
adc
xor
pop
dec
inc
add
inc
pop
icebp
xor
pop
pop
add
adc
dec
xchg
lock
outsb
add
mov
addl
cmp
push
jg
lahf
jne
inc
push
fs
out
pop
fwait
sbb
push
or
mov
and
push
lods
lods
jmp
cmp
cmc
push
scas
xchg
jbe
adc
inc
fldt
xchg
js
clc
je
push
fbstp
xor
pop
clc
jecxz
xchg
mov
sbb
decb
dec
mov
stc
adc
jae
or
std
cmp
test
ss
ljmp
mov
cmp
dec
pop
mov
pop
pop
int3
loopne
or
mov
aam
shll
mov
cltd
pushf
cwtl
xor
cmp
dec
jno
in
loope
add
and
xlat
das
loope
jno
jo
movsb
loope
dec
inc
dec
push
cmpsb
filds
cmp
adc
imul
pusha
inc
sbb
jbe
inc
clc
mov
xchg
loop
nop
jno
cmp
dec
stc
insb
icebp
dec
rcrl
adc
sbb
cwtl
and
inc
inc
sub
leave
cmpsb
push
cli
pop
push
shrb
testl
push
out
dec
adc
sbb
addr16
mov
int3
xchg
ss
rclb
pusha
push
sub
dec
fadd
xor
xchg
in
xor
jle
mov
adc
add
or
cmp
sbb
jge
jecxz
aam
sbb
test
sub
imul
into
sbb
jle
add
mov
and
sub
pop
pop
dec
fiaddl
lcall
push
or
pushf
cmpsl
loop
daa
or
sub
mov
stos
aad
jnp
lds
push
inc
je
movl
dec
xor
fimull
testb
cmc
cmp
adc
lahf
cmp
xor
aam
daa
out
jl
inc
loop
test
jle
adc
inc
inc
jne
gs
repz
jle
or
xchg
xlat
sub
push
sub
xchg
icebp
je
or
mov
stos
sub
xor
sub
mov
adc
pop
sahf
sti
sub
subl
mov
call
mov
push
jbe
mov
pop
aad
repnz
mov
jmp
sbb
fdivr
mov
lds
cmc
outsl
insl
and
sahf
lcall
mov
es
and
jge
mov
test
push
inc
mov
xchg
inc
mov
push
or
ja
fs
mov
clc
dec
sahf
inc
in
push
sub
jle,pn
mov
inc
addb
push
xor
dec
add
bts
outsl
mov
pop
add
cmp
push
pop
cmp
ret
adc
dec
dec
adc
mov
jmp
idiv
pop
data16
rcrl
xor
bound
sub
loop
repnz
jmp
or
jp
inc
fwait
cmp
out
sbb
push
int3
fcomps
stos
popa
add
lret
mov
sbb
pop
fimuls
jl
fiadds
pop
mov
jne
js
jne
rorl
add
stc
push
adc
shl
fcoms
scas
xor
xor
or
mov
ja
outsl
dec
push
aam
jae
bound
stc
adc
xor
fxch
mov
jmp
repnz
pop
loop
inc
push
ret
into
sub
loop
mov
test
or
pop
movsl
push
sub
push
xchg
push
imul
push
movsl
xchg
bound
lds
pop
popf
ja
lahf
loop
and
movsl
push
idivl
cmp
std
incb
mov
popa
push
testl
gs
mov
pop
gs
int3
sub
jo
cmp
out
xor
cmp
vpsadbw
test
cmp
jle
subb
xchg
lcall
inc
ficompl
sti
out
xchg
xchg
stc
adc
mov
lds
lds
dec
lods
popf
adc
add
aaa
test
jl
pop
sti
jge
pop
aam
lret
mov
pop
jp
and
sub
lcall
jecxz
adc
das
mov
pop
cli
jl
sub
flds
adc
xor
ficompl
dec
out
jb
movsl
cmpsl
mov
movsb
hlt
hlt
jl
xor
les
add
mov
sub
lahf
sahf
pop
test
mov
enter
icebp
test
adc
push
add
mov
mov
pop
dec
aad
mov
lahf
mov
cwtl
scas
add
dec
mov
adc
outsl
int3
insl
push
jmp
dec
mov
fisubrs
addl
loopne
jl
sbb
pop
mov
lods
pop
mov
jno
adc
out
hlt
leave
rcrb
add
lds
incb
jl
push
mov
insl
pop
aam
ficompl
mov
push
lock
dec
xor
cmp
loop
hlt
lret
lock
imul
push
scas
int
test
jmp
gs
add
adc
aas
mov
mov
jbe
jnp
adc
dec
outsb
lods
mov
xor
mov
mov
je
ficoml
sarl
jnp
cmpsl
inc
cwtl
jno
incl
cmp
lcall
imul
cmp
inc
push
dec
stos
xlat
sysenter
mov
in
jle
xchg
cmp
ljmp
sahf
mov
lods
cmp
pop
jnp
inc
and
cwtl
pop
lds
adc
test
jno
loopne
fucomip
jne
mov
push
xchg
jle
imul
imul
push
push
adcb
sbb
ficoms
sbb
mov
jle
nop
test
jo
hlt
out
int3
xchg
cmp
sub
in
jne
cmp
push
push
imul
enter
adc
dec
or
pusha
xchg
pop
push
dec
test
call
push
lret
outsl
test
pop
mov
stos
jns
xor
add
xchg
jge
mov
mov
jno
movsb
icebp
subl
lahf
push
mov
stc
xor
pop
test
ret
jne
xor
stc
adcb
andl
mov
out
cmp
cmpsb
sub
jp
jle
inc
ds
pop
cmp
adc
addl
and
mov
mov
xor
cmp
adc
inc
pop
push
lods
xchg
and
adc
mov
fmuls
loope
sbb
sub
clc
lahf
cmc
js
fs
fcoml
dec
add
mov
dec
add
cmp
xorb
jle
add
sbb
push
pop
or
adc
cwtl
repz
xor
adcl
repnz
xchg
ja
fimull
or
ror
mov
jmp
hlt
pop
ja
lods
andb
cwtl
icebp
mov
inc
popa
out
jo
in
outsl
out
fcompl
leave
and
pop
jbe
ret
sahf
mov
push
mov
add
jb
test
icebp
out
enter
repnz
imul
sbb
mov
mov
shlb
jb
cmpb
cltd
repz
jb
push
mov
rol
jne
fsubs
or
cld
icebp
jo
add
andb
pop
mov
movsb
pushf
xchg
orb
add
jo
mov
hlt
mov
push
jg
push
into
and
mov
lock
sub
popa
xchg
inc
inc
into
xchg
jne
mov
out
movsb
push
mov
testb
or
push
addb
je
or
inc
pusha
jnp
orl
hlt
add
cld
dec
dec
mov
sti
xchg
pop
cmp
stos
aaa
adc
dec
push
jp
cmp
mov
sahf
jne
lods
sub
xchg
push
sbb
call
and
loop
push
xchg
cld
fwait
leave
adc
outsl
nop
xor
cs
mov
adc
lock
ret
cmp
ret
jl
add
loopne
pop
cmp
adc
ffreep
sbb
movsl
mov
or
lahf
push
std
jne
ja
data16
or
lods
jb
cltd
lds
push
test
inc
stos
adc
repz
mov
outsl
lds
aas
jae
adc
xchg
fadds
adc
pop
jno
pop
std
add
lock
mov
mov
mov
sbb
testl
push
jb
push
dec
pop
mov
out
inc
xchg
jnp
sub
fimuls
hlt
mov
jns
jno
sbb
es
jne
xchg
repnz
xchg
sbb
push
fnstenv
jne
pop
mov
push
leave
xchg
inc
mov
jne
jp
test
jg
dec
pop
stc
jno
mov
push
rcll
notl
adc
cs
push
xor
unpckhps
cmpl
js
sbb
neg
mov
test
das
lea
aad
cli
xor
test
sbb
adc
jle
nop
imul
push
pop
iret
pop
xchg
pusha
dec
cmc
cmp
fnstenv
cmc
gs
adc
arpl
repnz
dec
sti
rclb
dec
in
sti
bnd
xorb
mov
stc
loopne
loope
notb
idiv
popf
pop
je
in
andb
ret
mov
cwtl
cmpsb
jbe
das
movsl
sahf
jl
mov
adc
pushf
stos
lock
or
or
repz
popf
mov
add
inc
jecxz
mov
dec
nop
and
pusha
jp
push
push
pusha
mov
lahf
into
push
stos
movsl
or
subb
sahf
movsb
ret
in
aas
or
lods
xor
pop
add
jl
pop
jne
adc
sub
mov
fdivrl
adcb
cmp
fists
sub
sub
js
stos
xor
push
int
jb
cmp
xchg
loop
mov
jae
mov
sbb
add
inc
cld
add
mov
mov
int3
mov
out
int
enter
lock
repz
out
sti
sub
pmullw
mov
outsb
lret
stc
je
cmc
cwtl
lods
sahf
sbb
test
lcall
mov
scas
adc
cs
xor
repz
jb
lcall
xchg
pop
stos
inc
testb
mov
push
xchg
pushf
cmp
lock
repnz
sub
xor
jge
xor
rorb
outsl
loop
movb
or
dec
int3
cmp
adc
cmp
jae
dec
ret
cmp
iret
cmpsl
icebp
dec
mov
xor
xchg
sahf
fsubrl
jp
out
pop
sub
aas
cmp
call
roll
out
fistps
mov
pop
lock
pop
cmp
or
mov
cli
mov
mov
fucomip
jle
cmp
pop
je
cmp
fsubrp
mov
hlt
xor
push
lods
test
push
mov
add
mov
jl
popf
inc
enter
mov
mov
or
jne
cmpsl
out
lahf
fcoml
xor
clc
cmp
mov
xchg
lahf
inc
inc
cld
in
dec
jb
enter
insb
add
sub
add
loopne
icebp
pop
fcomi
dec
xchg
mov
cmc
mov
push
fimull
sbbb
out
and
jno
and
jo
inc
repnz
mov
or
sbb
lcall
popa
push
rcll
stos
xchg
dec
push
mov
or
cmp
dec
inc
xlat
popa
pop
inc
outsl
jae
and
pop
xor
cmp
push
mov
bound
nop
jg
mov
pop
rcll
lods
or
sub
adc
xchg
iret
std
push
adc
push
pop
lcall
adc
or
in
inc
mov
repnz
sbb
scas
mov
jp
cmp
lcall
mov
push
imul
jnp
adc
orl
pop
xchg
fildl
cmp
sbb
or
mov
cmp
cld
cmpl
lret
icebp
movsb
lret
xor
inc
jle
mov
ds
pop
sarl
in
int3
dec
cwtl
dec
dec
mov
jle
ss
add
filds
fldt
mov
jae
out
data16
loop
ds
out
cltd
inc
cmc
add
aam
add
and
jb
push
es
jo
mov
sbb
lret
mov
lahf
fdivs
push
int
adc
push
sbb
ret
jno
or
mov
repz
lock
jb
ja
jmp
sbb
test
push
loopne
dec
sub
sbb
repz
aad
pop
imul
inc
cli
cmc
sbb
xchg
jo
add
push
insl
pop
movsl
mov
in
push
ret
lds
ret
push
mov
mov
push
adc
add
fidivrs
jne
decb
mov
mov
xchg
jmp
xchg
xchg
jge
adc
ret
lods
repz
enter
dec
pop
fstpt
jecxz
mov
sbb
xchg
xor
push
bound
cmp
test
in
cmp
jp
adc
pusha
mov
clc
iret
cli
pop
or
sbb
loope
or
xchg
imul
xchg
clc
pop
sbb
sbb
and
ss
testb
xor
and
or
xor
in
xor
pop
push
cmpb
or
lret
adc
cs
lret
xchg
aam
and
pop
outsb
rep
aas
add
cmp
ss
adc
xchg
out
mov
ss
dec
das
fistpll
push
fbld
sub
add
bound
mov
inc
sbb
into
pop
rcll
lcall
lret
jp
fdivs
add
jp
and
nop
testl
in
test
movsb
dec
jle
jmp
mov
das
test
jnp
sahf
cwtl
test
jb
mov
jp
sub
add
repnz
sbb
adc
adc
roll
cmp
loop
scas
lds
movsb
bound
mov
mov
and
out
sub
jae
sahf
out
fisubl
test
bound
sbb
cmpsb
into
push
cld
push
jl
stos
sarb
adc
jle
sbb
dec
xor
roll
ret
ds
iret
in
and
inc
movsl
fcmovnu
ljmp
fdiv
inc
pop
cmp
insl
sbb
orb
lods
bound
cmpsl
jg
sub
push
jnp
test
xchg
repz
mov
sarb
or
pop
add
jne
icebp
or
add
xchg
cmp
jmp
jnp
andps
repz
pop
fildl
je
jne
add
and
sub
mov
jb
push
leave
sahf
pop
and
cld
stc
mov
stc
inc
repnz
cmp
mov
and
adc
jae
xchg
fisttpl
mov
dec
fwait
adc
out
jbe
adc
insl
cmp
mov
stc
arpl
sar
leave
cmp
pop
dec
add
ss
outsl
inc
jb
in
test
push
ljmp
lock
mov
mov
add
jp
mov
lret
out
adc
pop
and
and
repnz
pop
out
aad
xor
adc
cmp
adc
adc
xor
negl
lret
ljmp
ret
dec
adc
aad
sti
jle
lret
cmpsb
pop
addr16
pop
jb
xchg
ficoms
push
and
jmp
jmp
pop
mov
addr16
xchg
lock
adc
xchg
dec
xor
jg
mov
or
std
cmp
les
push
add
mov
inc
inc
out
pop
mov
sub
pop
fstpl
imul
popa
vmread
pusha
or
jp
inc
cli
or
jno
pushf
xchg
in
mov
imul
push
adc
or
add
or
out
js
cmpsl
mov
aas
les
scas
mov
cmp
lcall
mov
out
adc
sti
rcrl
incb
cli
mov
sarl
cmp
stos
inc
sub
push
movsl
repnz
cld
adc
fisubl
lcall
mov
cmp
stc
loop
pop
jbe
andb
jle
add
jp
jb
insb
test
leave
mov
lcall
xor
pushf
std
cmp
fisubrl
int3
sbb
iret
adc
jae
pop
dec
jecxz
add
cltd
bound
aad
jbe
push
mov
mov
fucomi
imul
push
mov
sar
mov
pop
out
mov
cmp
stos
pushf
stos
mov
rcll
mov
xlat
je
add
rcrl
ret
enter
xchg
dec
mov
fnstenv
sub
aaa
sub
jo
out
jl
jne
add
mov
jns
idivl
dec
inc
pop
imul
pop
out
es
outsb
mov
movsb
sub
repnz
sbb
mov
mov
loopne
mov
mov
mov
mov
cmp
jmp
outsb
inc
mov
adc
scas
ret
gs
or
fiaddl
lods
push
idivb
xchg
xchg
xchg
and
das
scas
ret
jae
js
pop
jae
jno
sbb
add
jle
or
pop
imul
gs
cmp
adc
pop
ja
ja
and
orl
ja
data16
cwtl
jno
pop
add
outsb
xor
mov
push
jg
sub
add
out
or
add
lds
pop
int
in
fucomp
jb
dec
pop
jb
mov
lcall
cmp
and
lcall
dec
rcr
ret
push
popa
pop
push
pop
dec
aam
lock
sbb
mov
ljmp
mov
mul
fmul
or
cpuid
jmp
outsb
aad
xchg
rcrb
divb
imul
jp
hlt
jecxz
imul
mov
mov
jo
or
inc
mov
or
std
lock
lods
jle
sahf
sbb
jmp
fnstcw
push
iret
cld
jb
xchg
imul
ror
mov
mov
mov
movsl
pop
sub
add
test
cmc
data16
mov
jne
add
jl
jecxz
push
repnz
and
lcall
sbb
add
js
jbe
divb
xchg
mov
adc
ja
cli
sbb
cmp
inc
cmc
jecxz
dec
sub
inc
das
mov
mov
insb
pusha
mov
add
jne
push
into
lods
adc
adc
adc
cmp
fwait
mov
sub
aad
test
xchg
fs
sub
sbb
rcr
add
xchg
neg
ds
mov
cld
xchg
fistl
push
or
jo
fsts
push
test
xor
out
or
jno
mov
clc
lahf
aam
jb
sbb
fdivrs
push
dec
dec
jno
dec
sub
add
or
aad
inc
or
and
or
out
lods
out
stc
xor
shl
fcoms
shrb
and
shll
bound
dec
push
roll
fisubl
cltd
jbe
out
mov
sbb
xlat
or
push
xor
or
mov
xor
xor
int
or
xchg
push
icebp
jnp
adc
add
je
pusha
push
xchg
and
addr16
sub
cs
add
clc
rcrb
xchg
out
cmp
xchg
sti
icebp
adc
jo
xchg
and
add
sbb
cs
xchg
aam
jmp
dec
lds
push
pusha
xlat
adc
sahf
mov
adc
icebp
fcompl
sbb
je
cmp
nop
or
push
mov
and
xor
in
cld
push
push
out
and
test
dec
imul
dec
pop
repnz
and
jmp
scas
int
push
pushf
pop
adc
fwait
dec
fstpt
scas
insb
andb
sub
mov
xor
sahf
sub
mov
inc
fstpl
fcomps
push
je
lcall
sub
push
shll
inc
jmp
or
or
cltd
pop
jg
and
out
cmp
subl
jg
cmp
mov
xchg
jle
pop
sysenter
pop
push
and
paddsw
cmpsb
testl
mov
dec
in
aaa
stc
inc
pop
lods
repnz
push
call
jbe
out
push
jg
out
jmp
fcmovb
into
cmc
xor
lahf
adc
in
jp
int3
adc
xchg
lea
cmp
xlat
cmpsl
lret
add
stc
loope
jb
das
rcrl
mov
xchg
xchg
cmp
mov
pop
in
ds
shll
nop
sti
pop
pop
mov
mov
lea
fimull
sbbb
das
pop
adc
adc
enter
add
dec
add
je
movsl
aas
or
je
add
enter
cmpsb
xor
push
insl
jno
jg
dec
adc
pop
jo
jb
jle
xchg
daa
adc
mov
cwtl
outsb
cmp
fbstp
ds
mov
lahf
sub
mov
jl
lock
test
xor
scas
insb
out
or
fildl
mov
repz
aam
inc
mov
xchg
mov
mov
orb
es
push
jno
imul
add
xchg
subl
mov
aad
cmp
fs
sbb
movsl
cmp
push
xchg
test
sahf
push
leave
push
insl
dec
addb
ja
mov
jp
popa
cld
out
push
jl
gs
mov
and
data16
and
cmp
inc
psubsw
call
pop
push
js
hlt
sbb
fcoms
xor
add
mov
mov
mov
iret
inc
push
js
adc
out
leave
cmc
mov
add
test
cld
pop
push
outsl
sbb
sarl
fwait
inc
fsubr
mul
cld
clc
std
imull
aad
test
sbb
inc
push
ret
and
incb
in
icebp
mov
adc
fwait
mov
mov
xor
ret
in
fisttps
cwtl
cltd
push
aam
xlat
xchg
repnz
xlat
fldt
push
add
mov
adc
jb
loop
inc
jp
in
fldt
hlt
aad
scas
popl
jae
mov
dec
jb
xor
loopne
out
cld
sub
mov
call
fsubrs
pop
loop
xchg
movsl
iret
add
pop
cs
xlat
je
test
fcomi
xchg
jns
push
adc
sahf
and
jne
push
sub
add
xlat
lock
fdivrl
jmp
and
jb
lret
int
cmp
mov
inc
add
jmp
rcll
and
inc
push
cmp
mov
push
popa
lahf
in
negb
xlat
push
stos
fnstcw
jge
iret
lcall
mov
imul
filds
sbb
fisubl
xchg
jle
pusha
das
ds
rclb
sub
mov
rcrl
jae
cmp
rclb
ss
enter
jb
insl
shll
mov
rcl
cld
adc
lods
mov
mov
or
sub
pop
pop
repnz
mov
pop
pop
cmp
imulb
lock
pop
jae
pop
fidivl
xchg
jecxz
xor
jo
mov
dec
rol
pop
cmp
jb
jno
add
test
dec
repz
adc
inc
roll
dec
pop
pop
adc
js
popa
xchg
jae
popa
and
pushf
sbb
jae
xchg
icebp
mov
push
punpcklbw
jo
call
adcl
adc
xor
cs
jo
pusha
mov
pop
ds
adc
cld
mulb
push
xor
xor
movsb
sahf
nop
addr16
or
add
sub
jle
pop
std
bound
jg
adc
leave
or
mov
pop
and
dec
stc
popf
sub
push
xchg
push
jns
in
push
sbb
dec
jmp
push
dec
dec
inc
mov
lods
adc
les
stos
shl
mov
fstpt
idiv
push
shl
testb
mov
add
das
push
popf
clc
movsl
xchg
sbb
sbb
mov
js
repz
mov
mov
xor
adc
or
fimull
push
jmp
xor
jno
sti
cmp
lds
jbe
xchg
xchg
jbe
mov
jecxz
es
aad
inc
push
and
xor
jnp
inc
in
jns
scas
inc
dec
mov
popa
xor
sarl
mov
movsl
lds
mov
shrl
insb
pop
and
scas
xchg
push
and
rcrl
and
inc
dec
jb
sti
lods
xlat
sbb
xchg
pushf
icebp
aas
stos
test
cmp
push
icebp
lret
cmp
or
mov
adc
sub
jo
clc
mov
adc
sub
push
pop
hlt
push
pop
xchg
rorl
scas
pop
aam
fbld
daa
push
jp
out
inc
and
neg
iret
xor
stc
pop
iret
stos
pop
cwtl
dec
call
repnz
mov
and
mov
sbbl
jb
mov
push
inc
loope
leave
inc
fcmove
dec
dec
pop
sbb
imul
shrb
push
or
cmp
or
jo
push
shr
test
icebp
sahf
cmp
ds
cmpb
imul
inc
push
lret
clc
cmp
push
and
lock
stos
sub
inc
ror
clc
int
or
lds
xor
mov
lcall
adc
xorl
dec
sub
scas
lcall
loop
repz
arpl
jae
mov
and
call
inc
xor
rolb
xchg
sbb
cwtl
jnp
lcall
push
cld
scas
shl
push
lcall
mov
clc
lfs
shlb
and
xchg
orb
sub
sbb
adc
cwtl
in
repnz
jae
jns
adc
fsubrs
scas
addr16
jnp
daa
das
jno
mov
and
mov
imulb
dec
and
mov
imul
ja
push
sub
xchg
and
fnstenv
mov
mov
add
int3
adc
sbb
lock
mov
je
adc
add
mov
andl
xor
in
adc
dec
lret
pop
or
out
es
push
xchg
jno
pop
xor
jbe
rorl
mov
push
mov
fists
mov
rclb
jmp
sti
cmp
test
iret
jecxz
out
mov
mov
popl
xchg
or
cmp
add
sbb
adc
sbb
xchg
out
cmp
cmp
es
jo
dec
xchg
inc
push
dec
xchg
fildll
adc
lock
push
rcrb
lds
jbe
jbe
repnz
movsb
mov
cltd
lcall
repnz
or
fisubl
mov
mov
stos
fistpll
jb
push
stos
or
push
jae
mov
imul
ss
lcall
xchg
ja
rcll
lock
stos
jnp
test
pop
dec
imull
inc
dec
push
fbstp
stc
add
cli
jmp
in
add
pop
fstps
cmp
or
sub
inc
stc
mov
sbb
adc
adc
jne
cltd
icebp
adc
dec
add
hlt
movsb
jb
add
repnz
std
sbb
lret
jp,pn
xor
into
push
push
fstps
arpl
clc
stc
sub
dec
pop
ja
pop
cmp
jb
sub
cmp
add
lahf
inc
aad
scas
lret
adc
or
push
daa
pop
push
out
push
ss
mov
inc
pop
add
mov
std
outsl
sbb
into
sarb
jg
loope
repnz
jecxz
cmp
inc
out
xor
or
xor
jne
mov
xor
andb
jb
jno
movsb
or
jbe
data16
jne
std
sbb
jo
or
push
cltd
sahf
std
dec
stos
scas
adc
sub
pop
add
fstpl
mov
pop
jno
or
mov
dec
cmpsl
mov
mov
jb
and
xchg
sub
jo
xchg
dec
mov
adc
lock
pop
test
ljmp
inc
and
sub
dec
jb
repz
inc
xor
lret
es
pop
ds
aaa
and
and
pop
mov
mov
and
mov
test
jb
stc
iret
add
sbb
xor
das
not
adc
mov
push
je
lds
or
xchg
std
sahf
lea
mov
xor
xor
push
ja
dec
xor
cmp
andl
dec
ss
les
cmp
jb
push
shl
jl
aad
outsb
inc
mov
xor
sub
jge
je
xor
mov
and
pushf
pop
shlb
and
loop
icebp
rep
and
adc
jecxz
jl
out
mov
mov
repz
call
repz
pop
dec
xchg
mov
cmp
mov
and
aad
lcall
mov
sbb
sub
sbb
adc
mov
mov
aad
imul
cmp
loope
or
add
imull
jb
push
gs
lock
int
jo
push
lods
cwtl
ljmp
cld
rcrb
aad
icebp
fcmovnbe
sbb
xchg
xor
dec
mov
sbb
inc
mov
jge
jae
xor
std
repnz
add
pop
jo
repz
jb
clc
pop
mov
repz
pop
rcrl
repz
cli
lods
mov
fldenv
sub
adc
data16
fcom
shl
icebp
mov
jo
push
push
adc
or
or
xor
repnz
jmp
insl
mov
int3
mov
sbb
dec
dec
or
popf
pop
popf
inc
sbbl
dec
imul
dec
jae
add
xor
and
repz
cmp
mov
stc
jecxz
push
or
pop
mov
mov
push
jg
subb
adcb
jo
pop
mov
sarl
push
addb
inc
and
mov
push
push
ror
cmp
popa
mov
lea
inc
or
sar
jns
ljmp
repz
ss
cmp
and
push
lcall
lock
mov
mov
enter
mov
jne
lahf
push
or
pusha
sub
xlat
test
imulb
xor
ja
jnp
pusha
imul
loop
lret
mov
adc
iret
sub
jmp
xor
pop
loopne
mov
stc
js
repnz
pop
loop
xor
shll
or
xchg
or
or
les
jg
aaa
lods
imulb
and
and
cmp
daa
and
sbb
mov
cmpsl
cmc
sarb
dec
xchg
movsl
aas
push
lahf
stos
out
xchg
jnp
push
scas
mov
pop
add
pushf
in
dec
lods
cs
in
sbb
cmp
pop
mov
cmp
test
in
and
adc
out
movsb
fwait
lcall
xor
xchg
or
and
push
push
push
test
outsb
jns
clc
dec
sbb
jo
daa
iret
dec
das
sub
mov
out
test
lea
push
repnz
sarb
in
inc
sbb
sub
pop
inc
inc
ja
mov
stc
jb
pop
rorb
addb
add
lock
sbbl
and
mulb
aas
movsb
add
inc
push
sahf
mov
xchg
xor
jno
data16
jns
sub
stos
jb
lods
ljmp
xrelease
loop
cmc
loopne
cmp
jb
stc
movsb
icebp
clc
popa
push
xor
sbb
cmp
push
pop
in
aam
imul
test
cmpsl
and
jns
sbb
addb
ficompl
fs
sub
mov
dec
and
mov
mov
icebp
jl
adc
xor
js
ret
xor
je
clc
or
or
js
iret
add
ret
and
repz
clc
cmp
cmp
js
mov
je
clc
dec
and
xor
js
jo
jecxz
adc
xor
je
clc
mov
js
inc
and
push
mov
sub
adc
add
xor
mov
jp
sti
je
clc
andb
xor
js
or
lea
jo
xor
and
xor
js
andb
xor
xbegin
dec
mov
inc
sub
js
mov
je
clc
andl
xor
js
mov
mov
mov
adc
xorl
je
clc
or
inc
xor
jp
or
das
mov
arpl
and
and
xor
xor
jae
and
bound
jno
dec
and
mov
xchg
mov
lock
adc
jo
repz
shl
mov
pmaddwd
lcall
jae
leave
adc
js
xchg
mov
pushf
ds
mov
insl
dec
mov
icebp
add
jnp
int3
dec
jb
jg
xchg
aaa
cmp
or
sub
xor
sbb
dec
add
std
not
sbb
js
clc
imul
mov
das
push
lcall
pushf
mov
lds
call
imul
xor
nop
fldenv
xor
icebp
ss
dec
out
aam
in
push
mov
jmp
test
nop
adc
movsl
popa
mov
xorl
in
xor
fscale
pushf
mov
sub
lods
sbb
sub
cmc
pop
ds
pushf
sbb
test
add
fidivrl
out
cltd
shll
repnz
bnd
mov
jae
mov
popf
jg
lods
int3
xor
sbb
imul
call
jg
inc
xchg
aaa
add
mov
negl
out
test
loopne
sbb
pop
cltd
sbb
cltd
sbb
mov
mov
push
icebp
push
lcall
sahf
std
jge
pop
shr
cmp
push
mov
mov
jge
push
jae
fucomp
ficomps
js
out
aaa
inc
repnz
pop
pop
movsb
push
repz
ret
push
sbbl
or
clc
jb
jbe
inc
cmc
pop
cwtl
sti
and
push
adc
negl
inc
aad
icebp
rcl
jl
repz
addl
jl
aam
orb
sbb
fcompl
jno
cwtl
decb
inc
cltd
xor
jg
jns
ds
jne
icebp
add
testl
icebp
inc
pop
sbb
inc
fnstcw
divl
xchg
das
sbb
jo
xchg
jge
mov
jecxz
ficompl
stc
data16
pop
gs
popf
pop
mov
mov
cmp
sbb
js
push
rcrb
nop
adc
rorl
je
sbb
jns
ds
jbe
js
jno
mov
xchg
decb
add
or
fnsave
jae
sbb
jae
sbb
pop
repnz
or
mov
inc
hlt
push
dec
mov
dec
fabs
jb
cwtl
clc
enter
jo
fldl
xor
dec
pop
adc
fildl
cmp
push
sbb
xchg
je
out
stc
subl
in
push
jne
inc
adc
repz
mov
adc
ja
mov
cmp
daa
sbb
jp
pop
dec
sbb
cmp
cwtl
hlt
xchg
cltd
xchg
jge
inc
jnp
popf
stc
ss
jl
sbb
jge
cmp
stc
test
pop
inc
ret
mov
and
js
mov
fwait
std
mov
daa
ret
mov
cltd
pop
fildl
jne
pop
aas
stc
add
cld
aaa
popf
stc
repnz
insl
jne
mov
push
imul
aaa
mov
into
add
adc
cmp
adc
jne
mov
std
fisttpll
fdivs
aad
pushf
idiv
clc
xlat
aam
sahf
pop
xor
jnp
cmpsl
push
xor
leave
jno
rorl
adc
pop
mov
and
mov
dec
jge
hlt
mov
in
movsb
adc
adc
mov
jnp
xchg
or
cmpsb
jl
jbe
sbb
mov
adc
addr16
loope
mov
sarb
dec
sbb
sbb
push
adc
xchg
lock
dec
and
xchg
add
and
xor
cmp
and
cmc
scas
stos
xchg
xor
xor
xor
sarb
xchg
mov
ds
sub
add
setne
sbb
push
das
adc
add
jns
jecxz
inc
inc
lahf
sarb
xchg
mov
fwait
mov
cmp
into
std
adc
and
add
push
repnz
adc
jle
sahf
movsl
mov
idivb
sub
xchg
negb
xacquire
mov
mov
jnp
xorl
pop
sahf
iret
cwtl
in
cld
idivb
or
mull
test
ds
aas
shlb
mov
and
mov
push
cmc
bound
cld
daa
pop
dec
movsb
sub
xor
rcr
sahf
ficompl
sbb
pusha
mov
inc
mov
dec
jnp,pt
ficoms
mov
stos
fidivl
mov
or
inc
hlt
jb
xor
std
ret
jne
mov
out
xor
adc
and
jae
xor
cld
cli
pop
jnp
testl
fstps
test
cmp
push
jg
int3
xor
mov
or
pop
sbb
int3
ss
pop
mov
jno
xchg
leave
adc
xchg
xchg
arpl
lods
lret
icebp
notb
and
xchg
js
nop
fstl
fwait
cmc
and
mov
cmp
add
cmc
div
pop
jbe
pop
xchg
int3
lea
xchg
dec
push
sahf
push
scas
sub
imul
js
out
xchg
loope
cmc
daa
cmp
out
fcoml
cmp
xchg
mov
lods
adc
ret
pop
divb
sar
add
jns
lcall
adc
cmp
mov
divb
neg
mov
xchg
std
in
add
in
ss
hlt
jno
popf
adc
mov
or
das
xor
sub
cmp
popf
xchg
cld
adc
fdivrl
mov
pop
ret
sbb
fcoml
sahf
xor
fstpl
sbb
mov
cmc
mov
jle
jae
ds
dec
mov
jbe
repnz
roll
mov
pop
sbb
and
movsb
fmull
dec
das
jp
cmp
cmc
inc
popf
xchg
fcomp
rcrb
pop
cmp
jle
add
popf
add
pop
aaa
aaa
cwtl
enter
dec
sbb
jns
add
fdivrl
mov
and
xor
je
xchg
xor
push
mov
jae
adc
mov
arpl
ss
sbb
pop
mov
cmpsb
and
push
mov
add
fdivrs
stc
push
adc
fadds
mov
push
adc
out
pushf
fsin
jnp
pop
faddp
inc
loopne
sarl
jle
cltd
fnstsw
cmp
icebp
cmp
or
sbb
adc
fnsave
pushf
arpl
jb
inc
lcall
movsb
mov
jns
std
xor
mov
sub
fnstsw
pop
push
fistl
jae
jo
scas
push
out
pop
mov
and
jge
mov
or
pop
jo
fstp
mov
test
cs
or
pop
out
inc
fdivs
inc
ds
sbb
pop
fdivl
add
in
sbb
sbb
lcall
cwtl
cwtl
cmp
jbe
sbb
arpl
jmp
rcr
lods
pop
icebp
ljmp
sbb
je
fxch
out
outsl
outsb
imul
jmp
je
js
fs
stc
sbb
xor
repz
jae
cmp
jecxz
sbb
js
stc
rcrl
repz
jle
jle
jg
cmp
mov
scas
pop
fdiv
cwtl
pop
lret
cltd
in
mov
repz
int
mov
mov
jns
repz
mov
fidivl
jle
add
cmpb
das
inc
dec
sbb
pop
add
mov
dec
loopne
js
hlt
mov
xor
clc
fmuls
je
sbbl
sbb
mov
cli
test
test
cmp
and
xabort
add
cli
or
jmp
sbb
sbb
lods
cmp
ret
push
cltd
scas
inc
jo
lcall
mov
dec
cltd
add
cltd
lcall
cmc
cmp
push
or
cmp
sbb
mov
mov
jl
testb
sbb
out
cmp
xchg
cmp
sub
fs
jb
fsub
jae
hlt
clc
jnp
xchg
adc
imul
in
js
dec
cmpsl
ja
fisubl
cmp
adc
mov
mov
jae
pop
cwtl
sbb
cmp
add
cltd
and
sbb
cmp
mov
test
repz
cltd
adc
jo
aad
mov
jo
mov
mov
jge
or
fcomps
stc
dec
xor
push
jle
stc
lods
loope
cmp
roll
inc
dec
jns
dec
lret
push
lcall
cmp
movsl
cmp
fdivrl
andl
shlb
cmp
repz
dec
inc
pop
rcll
push
jns
clc
push
cwtl
int3
mov
jl
dec
ss
je
jle
mov
cmp
xchg
dec
xor
and
orb
push
jae
bound
imul
fcmovu
cmc
arpl
mov
mov
orl
ds
int3
cmp
shlb
test
shll
popf
pusha
rcrl
repz
sub
js
divb
adc
mov
loopne
je
sbb
sbb
push
mov
mov
jae
jmp
jns
xchg
adcl
cs
jmp
jo
sbb
sub
mov
or
out
stc
or
mov
cmp
dec
fiaddl
xor
xlat
fbld
xor
lret
movsb
lret
adc
or
test
cmp
mov
mov
sub
in
mov
insb
stc
inc
mov
loope
adc
out
jbe
rorl
daa
push
cld
cmp
je
xor
mov
es
or
ja
pop
add
repz
movsb
stos
adc
ja
lods
repnz
fdivrp
movsl
sub
jae
js
jge
je
lret
outsl
out
repz
sub
xchg
ja
out
pop
repz
sbb
mov
cmp
daa
xor
mov
cli
cmp
scas
mov
mov
leave
and
movsb
sti
cmp
test
adc
mov
sbb
loopne
adc
add
xchg
pop
js
push
int
mov
cltd
popa
ljmp
ss
repz
mov
cmp
jg
fidivs
scas
lcall
or
cmpl
stc
mov
inc
test
icebp
mov
mov
inc
xchg
jae
adc
repz
ret
hlt
xor
mov
push
fisubl
pop
movsl
ja
inc
pop
pop
xadd
pushf
jnp
and
mov
imul
ja
sbb
mov
imull
cmp
jl
pop
sub
lcall
mov
mov
loopne
pop
cmp
jae
mov
xor
in
jp
and
fcomps
aad
xlat
cmp
dec
sbb
cmpl
int
jns
jae
mov
icebp
je
sub
dec
in
jbe
das
cld
rolb
lahf
scas
fsincos
add
std
and
xor
lea
xor
xchg
pop
xor
js
hlt
test
mov
and
dec
sub
enter
clc
inc
test
je
stc
cltd
stc
sbb
stc
jle
hlt
daa
fdivrl
xor
cs
clc
sbb
mov
add
dec
testb
add
stos
repz
mov
ljmp
leave
fsts
inc
mov
jle
insl
inc
je
inc
cmpsb
jno
sub
sarl
aad
xor
ret
cli
inc
jg
daa
cmp
xchg
fsubs
lods
sbb
mov
mov
and
and
leave
cmp
xor
jne
lods
xor
adc
dec
add
sub
daa
jl
sahf
clc
xor
add
sub
pop
stc
fdivr
xor
jns
es
ds
lcall
jle
sbb
cmp
loop
xlat
mov
mov
jae
mov
or
xor
mov
repz
mov
add
test
pop
jne
cltd
mov
xchg
or
xchg
imul
cs
jne
cmp
fcomps
popf
jno
mov
jb
and
test
sbb
jl
xor
aam
pop
xor
push
jns
push
cmp
cmp
push
sbb
setl
cmp
popf
add
and
jge
cmp
cli
mov
jae
cmp
cmpsb
dec
inc
dec
or
ret
imul
lret
mov
mov
sub
addr16
stc
loope
mov
jae
mov
or
xchg
bound
hlt
mov
and
fdiv
fistpll
cld
jo
cmp
cltd
jbe
jae
mov
mov
xchg
js
das
push
xor
mov
xchg
mov
lcall
push
xchg
add
pop
js
pop
hlt
out
shl
and
dec
xor
gs
jmp
mov
dec
mov
cmc
insl
jl
movsb
scas
test
xchg
and
and
js
leave
ds
pop
idivl
mov
ret
lock
xchg
mov
sbb
jns
adc
mov
inc
mov
mov
dec
jle
add
xchg
fiadds
and
cmp
and
push
sbb
cmpsl
xchg
stc
jns
pop
mov
mov
or
ficomps
xchg
clc
repz
inc
push
pop
lock
pop
ss
mov
xor
xlat
pop
mov
inc
mov
jbe
sbb
mov
sarl
jl
rolb
lahf
divl
inc
popa
cmp
push
xchg
mov
mov
stc
outsb
cmp
cmp
mov
in
push
pop
icebp
xor
hlt
or
pop
and
dec
jo
cwtl
in
or
push
sarl
out
clc
dec
adc
cmp
mov
subb
stc
mov
pop
xchg
divl
xchg
add
sbb
pop
push
sbb
sbb
push
pop
xor
mov
xchg
test
iret
fwait
mov
idivl
xlat
xchg
mov
les
data16
hlt
jnp
bound
mov
clc
adc
idiv
lock
cmpsb
or
cmpb
int
pop
clc
mov
jbe
pop
or
scas
jae
xlat
sbb
add
loop
loop
out
mov
sbbl
std
ret
pop
adc
sub
gs
mov
orb
xchg
aas
test
sbbl
les
inc
mov
cmpl
negb
test
mov
push
mov
orb
push
stc
add
cltd
insb
movsb
ret
outsb
gs
movsl
xchg
cld
repz
ss
ud1
and
js
inc
and
inc
xchg
std
add
mov
xor
ret
data16
mov
pop
mov
or
pop
xor
cltd
jae
mov
push
sbb
mov
cmpsb
stos
pushf
inc
adc
jae
jl
outsl
ljmp
sbb
icebp
les
lds
pop
jae
daa
dec
mov
aas
mov
sub
sbb
les
arpl
cmp
and
jmp
fstps
je
fisubl
jnp
push
inc
bound
cmp
jne
mov
shlb
jns
jecxz,pt
dec
loop
addr16
adc
pop
jns
mov
pause
push
mov
fsubs
out
into
mov
jle
pop
sbb
jne
dec
xchg
vaddsubps
repnz
adc
jl
jle
mov
mov
pop
pop
jnp
fldenv
mov
pop
outsb
cmpsb
and
ds
lret
es
in
clc
jne
pop
or
cli
movl
push
cmpsb
add
pop
inc
add
adc
jp
jae
mov
outsl
iret
mov
in
cld
fs
push
xorl
jae
in
aad
test
sbb
sbb
jae
pop
jb
inc
push
cmpsb
xchg
xchg
std
test
inc
and
ljmp
jae
push
test
push
clc
mov
bound
lea
adc
test
cli
dec
es
push
and
jg
idivb
lea
imul
add
stc
push
loopne
test
in
adc
push
adc
dec
cmp
out
movsb
cwtl
pop
fistpll
adc
and
pop
sub
lds
jp
popf
movsb
cmp
data16
inc
hlt
lret
mov
movb
movsb
cltd
sbb
daa
xchg
inc
fadd
jg
cmpb
cmp
outsl
add
push
fs
and
or
aaa
push
lcall
lods
dec
rcrl
dec
dec
fistpll
push
lods
inc
jle
lea
inc
xchg
cs
dec
lcall
dec
pushf
mov
repz
into
jnp
or
movsl
push
imul
je
stc
cmp
pop
repnz
fs
pop
aas
ret
push
loop
cld
fidivl
cli
divb
in
shlb
xchg
jle
in
jae
ja,pt
and
rdmsr
mov
icebp
push
xchg
fsubs
imul
jns
cwtl
xchg
inc
cwtl
insb
ss
das
cmp
inc
std
add
push
cld
fstps
incb
cwtl
cmpb
jb
test
notl
jle
mov
outsb
and
jge
ret
dec
xchg
cmp
inc
add
popf
fistps
add
mov
movsb
lock
js
and
je
adc
ljmp
lock
sbb
flds
cmp
stc
xchg
dec
pop
xchg
repnz
xchg
icebp
cld
cli
jns
sbbl
mov
sar
fisubl
mov
js
jae
ss
cmp
outsl
clc
std
sub
jp,pn
or
movb
jecxz
mov
xor
jne
jge
mov
ret
mov
out
pop
add
push
ss
push
xor
mov
aam
jle
inc
movb
and
aas
jp
dec
jle
popf
mov
int3
adc
sbbl
inc
jae
fcomi
sbb
pop
pop
rorl
lahf
jne
je
inc
sbb
shll
and
mov
jl,pt
rorl
sahf
cmp
mov
sbb
or
cld
xchg
inc
adc
xchg
jl
imul
dec
cmp
sbb
lods
ss
popf
or
bound
mov
jae
or
cli
or
aaa
sbb
notl
jnp
and
push
mull
mov
repz
ret
bound
and
jg
cmp
pop
mov
jns
dec
sbb
or
jno
into
jo
int3
push
pop
stc
insl
add
rcrl
shl
jle
movsl
push
in
in
mov
clc
sub
and
sub
call
jecxz
hlt
inc
iret
test
jb
cmp
insl
and
pop
jle
das
sti
mov
incb
mov
insl
xor
mov
aas
pop
lock
fprem
cmpl
hlt
adc
inc
mov
cltd
test
cmp
sub
mov
mov
sub
ss
into
add
fistl
cmp
or
ds
and
jnp
jp
jns
sub
mov
ret
jne
fidivs
cmp
test
mov
loop
fcmovbe
jb
pop
js
push
ljmp
or
mov
or
sub
inc
dec
inc
dec
pop
out
hlt
in
push
insl
jg
sub
flds
in
or
ret
jmp
dec
sub
and
pop
or
mov
jbe
aaa
negl
add
arpl
pop
repz
jmp
mov
add
sbb
out
pop
jnp
jmp
mov
sub
shlb
repnz
cmpsl
dec
cmpsb
lret
cli
and
fldlg2
or
add
andl
loope
jecxz
lret
sbbb
cmp
andb
imulb
je
cmpsl
inc
inc
lods
out
pop
push
cmp
fimuls
mov
jns
push
dec
loop
jbe
shll
inc
loope
ret
clc
mov
jne
fdivrl
jle
jnp
xchg
and
sub
xorb
inc
mov
ret
pop
adc
stc
jp
push
clc
and
jne
loope,pn
sbb
add
test
add
movsb
xor
pop
mov
pop
cmc
sub
xchg
pop
sub
add
ljmp
xor
movsl
in
mov
jo
mov
cwtl
cmpl
sub
ljmp
lret
pop
mov
jae
jns
xor
or
lods
cwtl
xor
in
into
fwait
xchg
xorl
sti
mov
sbb
js
jle
dec
shll
jecxz
fdivrs
aam
inc
fcomps
orl
adc
test
xor
jo
clc
adc
push
cmp
mov
leave
lcall
pop
lret
or
stc
icebp
addr16
lods
pop
mov
lahf
cmc
cmpsl
and
inc
and
repnz
or
outsl
cwtl
pop
in
mov
mov
repz
and
movsb
sahf
stc
jbe
out
aas
scas
inc
imull
mov
add
imul
dec
test
test
inc
shlb
test
clc
mov
imul
cmpb
jae
mov
dec
jg
jg
ja
pop
test
jae
push
jecxz
or
push
testb
dec
pop
push
test
sbb
sub
fiadds
xchg
repz
adc
xor
mov
xchg
sub
aad
jg
testb
mov
mov
in
lods
cmp
lret
inc
pop
loopne
je
mov
les
mull
jnp
push
mov
add
pop
les
xchg
jg
mov
test
out
inc
dec
lret
in
jne
scas
sbbl
cmp
push
cmpsb
test
out
cld
add
gs
arpl
or
sbb
mov
pusha
add
mov
movsl
xacquire
jae
lock
xchg
test
aam
cwtl
ret
push
and
sub
fadds
xor
add
xchg
es
cmc
push
aam
cs
cmp
cltd
inc
push
out
sbb
lea
enter
imul
imul
sarb
cwtl
into
jg
adc
adc
xchg
cmp
push
jae
push
jnp
inc
cs
xchg
add
jge
xchg
inc
lahf
jnp
jb
jnp
bnd
mov
test
add
cs
xchg
jge
xchg
loop
mov
xchg
and
xchg
xchg
mov
xchg
fcoms
ja
scas
into
mov
cmp
mov
xchg
mov
cmp
and
cmpsl
adc
int
mov
fisubrl
mov
adc
sahf
lods
shll
ja
cmp
ljmp
mov
pop
in
lods
test
cmp
xchg
xchg
mov
cmpsl
mov
movsl
pop
aad
jb
adcb
xchg
pushf
jecxz
lahf
loop
repnz
push
imul
mov
cmp
pop
xor
jne
sub
outsb
mov
xor
cltd
stc
jmp
push
pop
out
inc
add
mov
repnz
clc
push
int3
std
lcall
lahf
test
or
cli
std
mov
inc
es
cmp
jae
lds
and
daa
dec
sub
roll
std
push
insl
dec
loop
movsl
dec
jge
mov
jae
jle
aas
dec
jp
js
stos
popf
lock
sbb
mov
pop
xchg
push
js
movsl
or
in
lods
xor
sbb
or
push
xor
lret
cmp
cmpsb
ds
sbbb
in
and
ret
imulb
outsb
outsb
fcomi
popf
repnz
add
clc
outsl
xor
sbb
in
arpl
pop
add
imul
or
jbe
cmpsl
in
xorl
sub
or
out
fbld
lds
movsb
and
push
je
test
bound
xorl
mov
stc
in
mov
js
faddl
clc
cmpl
mov
jb
xchg
jbe
mov
mov
cmp
cmp
stc
shl
pop
adc
inc
push
cmpsb
jae
enter
jae
push
push
notb
lret
mov
and
push
mov
push
cmpb
push
movsb
xchg
add
outsb
sbb
push
push
push
xchg
xor
pop
and
pop
jae
repz
pop
sub
and
cli
dec
mov
in
add
add
fisubl
leave
popa
sbb
aam
js,pn
fnsave
mov
arpl
inc
xchg
and
mov
or
in
aam
and
sbb
jle
pop
cmpsb
sbb
or
and
dec
mov
sbb
mov
pop
jae
jns
adc
or
pop
mov
data16
insl
jg
or
imul
call
push
and
icebp
pop
jns
sbb
cmp
mov
popf
andb
sti
dec
lcall
inc
repnz
mov
into
fdivrl
out
int
add
fcmove
ss
mov
mov
cmp
jle
pop
in
lea
xlat
dec
popf
adcb
inc
lods
push
push
jne
mov
repz
mov
out
cld
inc
scas
ja
stc
sub
xor
cmc
dec
movsl
lock
dec
or
dec
dec
pushf
jbe
js
popa
test
test
out
or
jns
sbb
push
add
aas
lock
cmp
ds
insb
push
pop
add
mov
movsb
jae
dec
and
add
mov
cmp
ret
sbb
dec
jb
aas
stos
rorl
loop
movsl
inc
inc
jns
fwait
lods
mov
loope
pop
aad
pop
jbe
or
repz
sbb
mov
xchg
pop
ret
jnp
sbb
stc
movsl
mov
xor
xchg
dec
xor
fldcw
or
into
insl
or
je
inc
add
mov
es
cmc
add
lret
xchg
xchg
fdiv
mov
lea
cs
rorl
jnp
xor
sarl
jecxz
mov
pop
stc
sub
icebp
movsl
mov
dec
push
scas
mov
lahf
inc
imul
sub
negb
aaa
inc
and
test
pop
pop
fisubrs
fs
flds
pop
sbb
sub
ret
push
cwtl
inc
xor
sub
mov
stos
imul
inc
sbb
mov
cltd
xchg
orl
inc
dec
std
movsb
pop
jbe
push
add
mov
mov
into
fildl
fidivl
aad
out
xchg
push
mov
cmp
mov
xchg
mov
or
aad
and
mov
pop
bound
mov
jo
repnz
js
sbb
and
inc
pop
mov
shrb
jae
inc
add
lret
lret
mov
pop
cli
push
mov
jae
and
sbb
fisttps
test
inc
jg
push
psubb
push
repz
pop
mov
jae
in
mov
adc
dec
popl
mov
roll
cmpsl
push
popa
repz
sbb
mov
cwtl
cli
cld
adc
lahf
ret
cltd
jle
fs
xchg
xor
repnz
jbe
icebp
dec
fbstp
jne
or
rcr
or
es
in
jns
jge
mov
sub
subb
mov
test
add
hlt
in
cmp
sbb
leave
add
jl
jns
imul
jl
fs
mov
add
xor
pop
add
stc
nop
pop
in
in
jb
into
test
andb
sub
scas
ret
mov
je
jmp
lret
mov
xchg
mov
repnz
mov
jecxz
cmp
loope
sbb
jmp
clc
lock
pushf
hlt
data16
lret
or
inc
mov
dec
js
mov
movsl
jne
inc
xor
pop
popf
push
aam
clc
sbb
pop
cltd
mov
xchg
notb
testb
inc
test
sbb
lcall
xor
int
out
lock
mov
ret
push
shl
push
sub
sbbb
inc
xchg
out
icebp
fcompl
sub
imul
add
cmp
adc
out
aam
pop
repnz
fimuls
sbb
popa
lcall
push
sbb
push
jp
dec
lret
cs
cmp
cmp
idiv
loop
jecxz
jno
mov
inc
jbe
pop
icebp
cmp
inc
test
in
aad
pop
mov
push
pop
xchg
and
leave
xchg
pop
mov
movsb
jns
cmpsb
faddl
jp
dec
adc
stos
jle
movsb
mov
cmp
aam
or
jb
inc
loop
addb
add
iret
clc
cmpsl
jns
test
add
daa
cmp
ret
scas
les
pop
and
das
or
cli
dec
inc
icebp
add
mov
add
or
fs
adc
popf
fcompp
arpl
pcmpeqw
add
mov
mov
ljmp
dec
fidivl
or
sub
dec
mov
sbb
jecxz
jne
fbstp
repz
jle
jmp
pop
je
xchg
jg
sbb
add
data16
pop
push
cmpl
pop
cmp
jle
mov
mov
leave
ss
insl
lahf
adc
push
xor
xor
xor
xchg
or
jl
dec
std
lods
xor
push
std
int
dec
xchg
pushf
std
imul
or
cltd
jns
or
js
loope
and
sbb
xchg
jle
add
mov
add
aam
scas
jns
mov
movsl
js
sarl
cwtl
stos
call
sbb
in
std
inc
cmpsl
jle
out
jle
stos
pop
lcall
mul
jl
gs
dec
test
mov
jb
addl
ljmp
mov
mov
sbb
hlt
jle
pop
jbe
popf
lea
xor
add
adc
pop
ffreep
push
mov
jae
mov
cmp
jo
gs
dec
jl
dec
stc
push
xchg
shl
clc
das
nop
sbb
push
fstl
pop
call
mov
jle
sahf
sbb
jl
aam
fsincos
and
das
mov
push
mov
pop
je
lcall
ret
xchg
imul
iret
dec
mov
idivl
mov
js
in
xor
xchg
mov
jmp
pop
jge
clc
pushf
imul
jmp
xlat
je
or
cwtl
gs
popw
pushf
and
mov
and
pop
lods
jo
fcomps
outsl
and
mov
adcl
inc
mov
xchg
cmp
mov
neg
inc
or
mov
je
cwtl
sbb
lret
and
insl
jmp
cltd
cmpsl
or
mov
sbb
je
xchg
aad
mov
cmpsl
test
cld
jbe
xorl
pop
out
sub
or
pop
add
outsb
sub
mov
jae
dec
push
push
insl
push
xchg
jmp
outsl
mov
jbe
mov
mov
js
pop
loope
out
je
inc
add
pop
jbe
dec
add
push
lahf
test
outsb
lret
jp
bound
jns
mov
cmp
pop
pop
lock
push
inc
sbb
popf
inc
ret
fldcw
cltd
jg
in
jbe
mov
sbb
cltd
mov
sbb
xor
fisttpl
test
fstpt
loope
sbb
lret
or
and
lods
jp
cmp
xchg
adc
xor
orb
lret
pop
mov
repz
cmpsl
fsubrs
fstps
aam
shlb
jbe
push
jae
ret
and
and
dec
out
cmpb
repnz
adc
pop
iret
cmpl
repz
fnstenv
push
lods
jne
out
cld
push
ficompl
mov
mov
jge
inc
dec
jae
push
mov
and
xlat
mov
insl
xchg
cmc
movsb
icebp
bswap
push
stc
mov
pop
pop
sub
sbb
icebp
dec
lahf
test
or
js
iret
inc
mov
lods
clc
xchg
dec
ss
test
mov
shl
pop
jae
jecxz
outsb
jnp
aam
dec
in
sbbb
popl
cmpsl
leave
xchg
sub
jae
and
push
cltd
out
mov
xchg
cmp
add
pushf
cmp
incl
adc
mov
repz
dec
faddl
call
add
jbe
or
bound
pop
inc
pop
sub
dec
jnp
pushf
cmp
or
jb
outsl
aad
out
movsb
inc
cwtl
push
insl
mov
das
mov
sub
stc
lret
stc
sbb
fld
popa
test
mov
xchg
push
cmp
fdivs
adc
mov
xchg
dec
aad
push
push
pop
lret
cmp
cmp
data16
mov
jns
jle
pushf
test
jl
xchg
inc
popa
cltd
pop
push
xchg
das
repz
lcall
jp
sub
push
fldenv
fisttpll
mov
push
shll
mov
inc
add
cmpsl
hlt
loopne
aaa
negl
loop
pop
and
xor
jmp
aas
pop
add
pop
aad
sbb
jbe
leave
mov
sub
pop
jle
sub
push
cs
out
sub
movsl
adc
inc
jae
repnz
fldcw
inc
lea
iret
pop
int3
add
je
int
jnp
out
jge
loop
in
scas
push
sbb
fdivrs
cmp
add
xchg
test
xorl
fs
iret
imul
cmp
cltd
jb
dec
pop
pop
aaa
push
inc
js
int
shlb
aad
inc
adc
push
int
sahf
icebp
jl
adc
cld
lcall
jge
out
mov
aad
dec
mov
cld
lock
or
icebp
add
mov
adc
or
mov
insl
in
push
inc
jb
cmp
jae
jg
aad
jge
add
jno
fwait
mov
out
test
jbe
dec
sahf
loop
decb
hlt
adc
ror
mov
sbb
jae
fiaddl
xchg
lahf
popa
push
icebp
popf
mov
xchg
test
sub
sbb
icebp
lcall
dec
xchg
add
icebp
push
ret
in
push
adc
and
inc
jns
cmp
sub
bound
jp
add
lea
sahf
fsubs
lret
jbe
ss
dec
xchg
cmp
stos
test
adc
movsb
sub
bound
sbb
adc
xorl
adc
rorl
dec
pop
shr
imul
movb
dec
lods
xchg
adc
cltd
ds
mov
pop
add
mov
mov
bound
repnz
cmpsb
cmpsl
int
inc
sub
mov
icebp
shlb
and
jb
pushf
test
sub
xorl
stc
insb
xchg
faddl
icebp
add
cmp
dec
adc
or
fists
mov
aas
jae
mov
jns
ss
sbb
add
sbb
cltd
jecxz
int3
rorl
xchg
jnp
clc
jno
call
or
js
jne
pop
cmp
cmp
js
cwtl
fwait
or
aaa
xchg
dec
icebp
jle
push
mov
jmp
mov
pop
lret
adc
lds
push
or
or
and
jo
add
mov
jg
sar
jl
lock
js
jne
xor
jb
push
js
jnp
jno
mov
js
mov
adc
and
adc
xor
je
clc
push
and
jb
pop
js
or
mov
mov
xchg
repnz
js
jle
repz
je
clc
cmc
and
jb
push
maskmovq
idivl
je
or
mov
xchg
in
push
testl
and
xor
scas
rolb
and
je
nop
lock
shlb
lock
xor
jge
push
je
clc
jno
cmc
xor
js
mov
mov
and
xor
js
andl
xor
je
clc
std
and
jp
xchg
ja
mov
repz
clc
jno
repnz
push
fidivl
js
xor
mov
push
je
clc
jae
xorb
jg
and
je
clc
repz
adc
lock
lea
je
clc
add
js
jge
aam
jns
hlt
clc
cmc
and
lcall
and
add
xor
aad
xor
js
cli
and
clc
hlt
and
xor
js
mov
jp
lret
mov
adc
ja
pop
incb
xchg
sub
dec
push
incb
stc
xchg
pop
cmc
rorb
cs
or
pop
rorb
cs
sub
dec
push
push
cs
clc
jle
lret
add
clc
cld
add
clc
clc
lret
mov
adc
add
push
clc
je
cmp
fst
or
adc
ja
pop
incb
clc
popf
add
mov
xchg
sub
dec
push
push
clc
sbb
loope
rorl
icebp
and
test
add
js
nop
and
xor
jae
xor
icebp
or
mov
xchg
fst
adcb
loopne
add
rorl
rorb
cs
sub
dec
push
sub
dec
push
call
add
out
sbbl
jnp
xchg
sub
dec
push
incb
cld
add
cs
cld
adc
mov
pop
lret
mov
adc
add
push
std
jg
lret
add
add
push
repz
xchg
clc
std
lret
lock
lret
mov
adc
ja
pop
fldl
xor
std
fldl
xor
std
loopne
add
lret
adc
notb
pop
adc
je
clc
andl
xor
js
jnp
cmc
xor
push
clc
repz
xor
js
or
or
xchg
je
clc
and
pop
and
xor
je
clc
push
mov
cmp
xchg
xor
xlat
xor
js
test
sbb
xorb
and
jns
js
and
js
sbb
fsubs
mov
cwtl
mov
je
clc
cmp
add
js
jns
clc
xor
and
fpatan
push
clc
js
mov
sbb
add
cmp
jp
jle
lcall
js
je
cli
xor
sbb
fdiv
cmp
or
js
jnp
add
fwait
je
clc
mov
cwtl
testl
lock
repz
jl
mov
push
and
and
xor
clc
stc
and
jae
jge
lock
mov
push
xor
je
clc
push
and
js,pt
pop
and
xor
cmc
clc
sahf
and
xor
js
mov
xor
je
clc
push
and
xor
js
and
cld
je
clc
jns
mov
repz
xor
je
js
pop
lock
and
andb
xor
and
js
add
cmc
xor
aad
xor
repz
cmp
or
xorl
add
shll
loope
and
xor
je
clc
repz
jo
bound
mov
mov
and
add
sti
xor
je
clc
inc
and
xor
js
addl
mull
mov
clc
push
and
xor
js
and
jnp
inc
clc
ja
fs
js
jo
movsb
adc
clc
in
test
jle
inc
je
clc
and
test
movsl
add
or
and
xor
js
add
inc
xor
je
clc
std
and
mull
xor
clc
jo
pop
icebp
mov
inc
and
clc
xchg
xor
js
and
xor
je
fstpt
jb
add
ja
dec
xor
je
clc
pop
and
jg
enter
call
xor
js
repnz
xorps
imul
test
xorb
je
clc
or
sti
xor
js
dec
and
push
es
repz
js
mov
lret
je
clc
test
or
js
jg
dec
xor
imul
and
lock
adc
mov
or
xchg
js
dec
and
xor
clc
mov
divl
js
int3
and
in
xor
divb
clc
or
sub
andb
xor
clc
jp
lods
fbld
int
jae
in
jnp
js
mov
and
xor
test
outsb
and
xor
js
scas
and
xor
je
clc
out
and
xor
js
das
add
mov
test
xor
js
and
xor
je
clc
js
repz
clc
xor
xchg
mov
jo
pop
xor
js
mov
add
shlb
lock
xor
js
xor
jb
push
xor
jbe
add
dec
cmp
add
roll
popa
mov
jge
adc
js
cmc
and
or
jb
mov
push
mov
push
and
xor
repnz
add
adc
push
xor
jae
cmp
xchg
mov
ss
mov
shll
repz
adc
add
cld
xor
clc
je
ja
xchg
das
xor
push
push
js
mov
adc
clc
test
push
xor
js
cld
and
clc
cmc
and
xor
das
push
mov
and
xor
add
jbe
xor
js
mov
jns
aad
xor
js
pop
add
aad
aaa
xor
push
clc
or
ja
test
andb
xor
je
clc
jge
divl
js
mulb
cmp
repz
clc
jo
js
or
or
je
clc
clc
and
cmp
clc
xor
jbe
jns
jae
cltd
sub
mov
fprem
mov
stc
xor
js
andb
xor
je
clc
sti
and
jns
lcall
fidivrl
js
mov
jne
and
clc
pop
and
xor
js
fwait
and
xor
outsl
xor
xor
push
jo
clc
mov
cmp
pop
js
andl
xor
js
js
fdivl
hlt
je
clc
jno
sbb
cmp
push
xor
add
popf
and
ds
xor
je
jle
jo
sahf
repz
and
xor
and
xor
js
jle
jg
sti
je
clc
jns
mov
into
je
js
hlt
lock
or
js
pusha
and
clc
mov
js
loopne
je
add
and
aam
inc
xor
js
mov
xorl
add
shll
loope
and
xor
and
jno
inc
icebp
push
mov
bound
andb
xor
and
loop
jnp
and
xor
je
clc
inc
add
adc
xchg
add
xor
jo
mov
and
xor
and
shl
or
and
xor
and
jle
jno
and
fisttpl
lock
mov
push
lock
or
js
push
and
clc
xchg
and
mov
cmc
shlb
jb
repnz
xor
adc
mov
xor
js
andb
xor
xchg
clc
jnp
mov
ja
shll
repz
adc
mov
pop
and
clc
je
add
js
mov
jp
aam
ja
hlt
and
xor
js
xor
push
xor
je
mov
and
clc
jg
cmc
xor
js
js
xor
push
clc
lock
shll
js
mov
xchg
je
clc
mulb
jle
pop
js
aaa
and
xor
jae
ja
js
add
mov
xchg
divl
js
add
cmp
sti
je
clc
clc
and
jbe
cwtl
jb
mov
fdivs
clc
and
stc
and
xor
je
clc
cmp
ja
pop
js
jp
lock
mov
xor
js
andl
xor
cmp
jl
pop
xor
js
cmc
and
js
push
lock
and
xor
js
cmp
xorb
je
clc
jl
jp
pushf
js
mov
je
clc
cld
add
js
add
je
clc
cld
and
jbe
fnsave
bnd
js
adc
push
and
pop
and
clc
mov
cwtl
cli
dec
je
clc
pop
and
add
push
bnd
mov
inc
xor
je
clc
andb
xor
js
jp
shlb
je
fisttpl
add
psrld
or
inc
sbb
and
popa
xor
js
add
mov
clc
jl
loope
stc
js
ja
and
repz
clc
jo
vpsllq
icebp
lea
or
xchg
adc
je
clc
cld
and
xor
js
cmc
and
jb
cmpl
lock
js
jecxz
xorb
je
clc
and
cli
xor
js
fs
clc
test
lea
movsb
xor
js
mov
in
add
js
std
and
jp
gs
jbe
test
cwtl
movsl
dec
je
js
push
lock
mov
and
inc
and
data16
xchg
jae
cmpsb
mov
xor
repz
and
xor
and
xor
js
cli
and
jbe
mov
repnz
enter
and
clc
sub
xorl
cli
xor
and
xor
mov
or
xchg
sub
js
jle
push
cli
je
clc
mulb
stos
xor
js
mov
shr
and
clc
sub
jnp
dec
js
imul
mov
mov
or
xchg
lret
xor
js
jg
or
jnp
sub
js
dec
xor
js
jb
mov
xchg
xor
test
js
or
je
clc
dec
and
xor
outsl
xor
lods
clc
mov
int
add
push
xor
je
clc
sti
and
idivl
repz
icebp
lea
into
js
out
and
clc
das
and
dec
js
outsl
and
xor
and
xor
repz
js
or
cmpsl
and
adc
xor
js
std
popa
clc
jp
jo
idivb
repnz
shlb
lock
pop
and
clc
push
and
js
adc
hlt
xor
jb
stc
pop
js
add
je
clc
xchg
jp
add
and
clc
ja
cli
xor
js
maskmovq
cmp
mov
pop
je
clc
jnp
add
mov
je
clc
sbb
jne
cmp
jo
add
mov
jl
push
je
clc
andb
xor
sbb
sub
cld
bound
xor
sbb
cmp
add
adc
or
add
je
clc
jl
std
adc
jns
add
xor
or
mov
xorb
xor
loopne
stc
and
xor
js
jb
inc
push
jg
xor
js
mov
je
js
jo
jnp
add
js
adc
fwait
add
xor
cmpb
or
mov
nop
xor
js
add
shlb
add
jl
adc
js
hlt
and
lock
or
xor
outsb
xor
and
adc
xor
hlt
xor
cwtl
lock
aam
lock
push
and
xor
and
xor
js
mull
adc
jae
or
xor
icebp
adc
push
and
repz
testl
mov
push
rclb
sti
je
clc
mull
adc
scas
xor
push
js
iret
lock
pop
xor
js
mov
std
xor
je
mov
and
xor
mov
and
add
shlb
jle
repnz
cli
and
ja
je
je
clc
jo
aam
mov
xor
je
clc
mov
std
xor
js
cmc
and
push
je
clc
and
push
repz
js
xchg
xchg
xor
icebp
inc
jo
jne
icebp
mulb
xor
stc
jb
or
jns
or
push
xor
je
clc
add
nop
xor
js
jns
shlb
je
lock
xor
adc
and
clc
jno
xor
jl
adc
jns
adc
mov
adc
or
js
push
and
xchg
pop
or
sbb
js
repz
lock
and
xchg
shlb
lock
adc
xor
jne
push
je
clc
jno
or
or
mov
add
xchg
js
xor
jne
cwtl
into
je
js
scas
ret
js
mov
add
pop
idiv
adc
xlat
pop
lock
pusha
mov
xor
std
sbb
cmp
add
inc
adc
inc
jno
jo
cmp
mov
ja
in
rcrl
sbb
lock
cld
clc
ja
sbb
jae
adc
popf
std
fnstsw
jle
pushf
jl
mov
mov
mov
mov
jp
cmp
mov
std
jnp
js
pushf
std
mov
adc
cmp
adc
lock
xlat
mov
lock
cmp
mov
movsb
ss
movsb
stos
and
pop
pop
sbb
popf
aaa
enter
adc
sbb
rcl
push
outsb
ficomps
sahf
jge
mov
mov
pushf
jmp
mov
pop
dec
lahf
rclb
out
daa
sahf
mov
in
pop
jo
icebp
xchg
mov
sub
fxch
cmp
inc
cltd
jne
jge
pop
leave
adc
xchg
jle
xor
xchg
dec
mov
mov
mov
popf
jge
xchg
repz
dec
or
pop
mov
jle
jb
test
sub
gs
popf
fstpt
lret
mov
mov
xor
out
fcmovne
fisubrs
pop
out
adc
cmp
dec
cmp
jnp
mov
mov
jbe
push
jbe
gs
inc
xchg
mov
cmpsl
dec
dec
cmp
xchg
sbbl
cmp
out
and
push
imull
dec
aas
arpl
xor
mov
xlat
add
fs
shl
xor
xor
adc
clc
std
and
xor
cwtl
or
lock
and
clc
nop
mov
nop
popa
pop
adc
sbb
stc
not
or
cmc
lock
std
adc
pop
adc
xor
js
popa
lahf
adc
jno
popa
insl
xchg
pop
sub
std
mov
sbb
xchg
rcrl
outsl
mov
adc
mov
push
add
pop
jb
imul
mov
cmc
xor
jae
repnz
inc
pop
or
stc
flds
adc
lret
adc
or
or
or
jge
sbb
cmc
and
xor
je
clc
push
and
xor
push
add
sbb
push
push
xchg
sbb
sti
adc
hlt
sub
adc
and
sbb
sbb
imull
adc
js
pop
inc
mov
ds
cld
mov
mov
or
mov
mov
jl
dec
les
jns
jns
adc
movsb
dec
push
mov
push
xor
lods
cld
mov
add
setns
and
add
jbe
mov
ret
cmp
jae
lock
lcall
mov
inc
stc
les
and
clc
add
cmp
test
fs
xchg
xorl
mov
pushf
sti
lret
mov
jl
cmp
pop
mov
les
arpl
jg
and
test
js
imul
mov
fs
or
push
mov
pop
sub
stc
sahf
addr16
sbb
enter
mov
mov
aam
jnp
pop
xor
in
mov
xchg
sbbw
test
arpl
scas
fs
cmp
inc
sbb
push
mov
inc
dec
mov
jl
mov
push
inc
push
or
pop
and
je
cmp
ret
hlt
or
repnz
lcall
xchg
or
cmp
fistps
jmp
sub
fucom
outsl
das
pop
lods
mov
mov
mov
pop
mov
daa
outsl
xor
fildll
xor
xchg
or
add
mov
mov
push
mov
mov
ud2
ds
jl
test
mov
in
sbb
push
stos
mov
push
or
cmp
jbe
int
mov
pop
pushf
imul
push
adcb
xchg
sbb
test
mov
push
jl
fwait
xchg
sbb
jb
or
movsl
jbe
or
aas
xchg
notl
out
cld
jmp
movsb
mov
sbb
fstps
inc
gs
insl
pop
cli
movsl
fs
cwtl
jne
jle
fmull
stc
mov
sbb
dec
inc
je
and
mov
mov
mov
shll
mov
js
ficoml
ljmp
cs
mov
xor
ds
xchg
lds
ja
xchg
pop
cmp
mov
cmp
test
dec
pop
mov
inc
mov
js
ret
popf
push
jg
jl
add
inc
cmp
jp
cmp
push
mov
testl
pop
cltd
sbb
and
sti
fcomps
sbb
fmull
insb
fidivs
jle
jl
xchg
inc
cmp
popf
add
aaa
sub
fisubs
js
push
pop
data16
cmpsl
mov
cmp
rcl
je
ds
sub
lds
sbb
and
or
stc
into
in
or
mov
inc
add
stc
pop
mov
mov
js
aam
dec
mov
push
and
dec
cmc
xchg
mov
and
xlat
sahf
and
sbb
pop
jp
xor
adc
dec
lods
prefetch
mov
dec
xchg
fstl
movsb
or
sbb
sbb
hlt
cld
gs
imull
xor
sbb
mov
lcall
aaa
mov
mov
xor
mov
mov
pop
imull
sbb
add
mov
bound
and
cld
jl
dec
cmpsb
or
mov
lret
jg
loope
sub
data16
negl
aaa
movsb
mov
adc
fldt
pop
cli
in
dec
sti
or
push
or
mov
jno
adc
popa
dec
test
sti
clc
add
repz
push
adc
call
or
adc
add
repz
jo
dec
or
add
adc
mov
test
sub
push
or
dec
xchg
adc
std
push
cmp
jl
repz
cld
jno
dec
sbb
sub
add
jbe
push
stos
rcrl
lret
idiv
sti
and
xor
js
or
sbb
notb
xchg
lods
clc
jno
fs
xor
xorl
xor
sub
xorl
popa
cmp
mov
test
hlt
adc
mov
sbb
nop
pop
popf
std
sbb
push
in
dec
or
inc
mov
dec
lahf
aas
jge
jp
mov
not
add
ficoml
imul
jge
push
test
push
out
lds
test
rclb
fisubl
icebp
rcrl
and
repz
flds
cmp
adc
sub
sahf
ds
mov
shll
cmpb
fcoms
add
adc
je
cmp
lahf
roll
jb
imul
cmovne
cmp
mov
add
in
cmp
sbb
mov
mov
adc
repnz
std
js
mov
xor
cmpb
shll
mov
xchg
push
pop
jno
std
sub
xlat
pop
or
or
pop
aas
push
stos
inc
jo
or
arpl
sub
cwtl
lcall
cld
fisubrs
pop
notb
add
repz
aad
sub
popf
jnp
jmp
repz
sbb
and
sbb
jl
adc
mov
jg
leave
adc
clc
lods
negb
sub
gs
test
pushf
cmp
repz
jae
xor
popl
sbb
xchg
push
sub
dec
dec
dec
xorl
sahf
hlt
mov
adc
mov
mov
aas
in
inc
mov
in
sub
jb
negl
push
or
or
pusha
xchg
stc
fnstsw
ret
mov
push
mov
cmp
mov
mov
sub
jns
mov
dec
dec
mov
cli
add
push
xor
jl
leave
bound
mov
movsb
enter
mov
fldenv
or
cmp
fdivs
add
push
or
test
sahf
jnp
idivl
add
pop
cmp
insb
sbb
xor
adc
push
push
outsl
cld
add
hlt
cld
js
imul
mov
push
jge
sbb
jne
inc
mov
cmp
repz
push
adc
xor
clc
xor
cmp
pushl
cltd
mov
cld
xor
fstpl
push
xor
jb
mov
frstor
sbb
mov
jge
mov
lahf
outsb
jns
xchg
xor
add
mov
push
lcall
jno
cmp
std
jnp
inc
movsb
stc
pop
mov
je
nop
cwtl
xor
pop
pop
xchg
inc
pop
lcall
scas
fcomi
je
mov
aam
aas
in
andl
enter
push
adc
in
stos
inc
and
or
sbb
lds
mov
xorl
mov
addb
lcall
mov
negl
add
adc
xor
add
adc
inc
aas
pop
sub
add
pop
xchg
cmpb
sbb
cmp
js
jo
outsl
out
je
dec
or
sarl
int3
jns
iret
fwait
sub
xor
sbb
mov
dec
dec
cltd
clc
mov
jbe
jae
mov
jge
jnp
ret
nop
lods
mov
inc
mov
icebp
cmp
ljmp
test
fs
add
cmp
je
shlb
sarb
inc
jno
mov
jge
xor
imul
mov
sbb
dec
mov
xor
jbe
ret
rcll
fcoms
cmpsb
cmp
les
fdivrl
test
xchg
pop
jns
pop
aam
ret
fnstcw
lock
or
sub
cmp
in
inc
jle
pop
jo
add
movsb
icebp
lock
repnz
jbe
xor
lock
add
or
push
rolb
lock
mov
adc
jo
rcrb
adc
add
push
repz
sbb
cwtl
andl
and
inc
and
rcll
into
jmp
lock
jno
add
cmc
push
fstl
adc
sti
adc
shlb
push
mov
adc
divl
cwtl
and
cmc
adc
and
or
add
push
mov
pop
adc
stc
and
adc
sbb
arpl
sti
adc
adc
fstl
addb
jne
clc
and
and
adc
adc
mov
pop
aas
and
xor
out
js
and
xor
js
in
add
je
clc
std
and
xor
js
lods
and
adc
xor
andb
xor
js
icebp
testl
loop
or
repz
fisttpll
adc
adc
js
int
xchg
lds
jbe
mov
and
movzbl
in
adc
sbb
fnsave
inc
je
clc
dec
and
jo
xchg
shl
mov
pusha
jno
test
mov
roll
xor
sub
cmpb
shrb
cmc
dec
std
clc
jae
std
clc
mov
std
mov
mov
je
xchg
sub
mov
clc
push
jbe
jp
jl
rolb
push
ss
push
or
std
xchg
clc
mov
std
std
idiv
pop
sbb
ja
ja
xchg
divb
sbb
cmp
sub
test
out
xchg
test
daa
mov
cmp
and
rep
loope
jb
fs
int
loopne
aam
lods
and
aam
mov
fcmovbe
movsb
subl
or
subb
addr16
insb
test
push
xchg
and
lods
xor
dec
pop
xchg
dec
sbb
mov
push
test
lods
lret
push
xchg
and
lods
je
jb
mov
pop
clc
and
cmp
clc
inc
sub
adc
pop
sbb
xchg
mov
loope
pop
xor
cmpsl
mov
fdivrs
lahf
js
aam
adc
leave
xchg
jge
movsl
mov
mov
ds
or
mov
out
int3
mov
jne
ds
shlb
mov
and
cs
cmp
sbb
lock
xchg
lcall
sub
mov
aam
stos
cmpsb
inc
sub
pop
cltd
sbb
mov
incl
jno
movsl
jae
mov
mov
pop
loop
cmp
int
cs
cltd
and
ret
mov
sbb
mov
pop
pop
sbb
mov
sub
cwtl
push
or
cmp
cmp
mov
aam
push
sarl
mov
mov
add
in
lods
test
xor
dec
aad
stos
mov
jnp
cmp
cmp
add
jp
stc
dec
or
lcall
je
fs
sahf
sbb
mov
dec
jnp
clc
popa
out
mov
cli
test
sbb
ljmp
fcmovne
hlt
sarb
aam
lock
jge
lods
clc
rcrb
cmp
add
fisttpl
mov
negl
pop
push
fldt
aam
pop
pop
mov
ljmp
push
cmpsb
lret
xchg
mov
lods
lods
cmp
out
ljmp
inc
push
adc
push
cmpsb
fs
test
jae
xlat
ret
push
fs
xor
push
out
fists
bound
aaa
jo
sahf
nop
add
loop
rcll
data16
jmp
jno
adc
inc
add
sbb
sbb
jno
es
fs
enter
jecxz
push
xorl
mov
push
icebp
push
adc
jb
and
aam
push
mov
lods
adc
push
jmp
mov
enter
loop
out
and
pop
xor
mov
pop
in
xor
enter
jge
or
loopne
fbstp
push
adc
xor
xchg
mov
repnz
mov
fists
push
pop
cmp
jg
rcll
notl
iret
fwait
out
fsts
mov
pop
fdivrl
xchg
adc
xor
mov
mov
xor
xor
xor
sbb
xlat
pop
mov
xchg
adc
shl
push
sub
cmpsl
and
rorb
jmp
jae
jae
jae
nop
inc
packuswb
jae
nop
call
mov
jo
daa
insl
in
jno
xor
mov
shlb
mov
adc
rolb
xchg
mov
hlt
push
in
test
push
xor
mov
mov
xor
jns
test
into
and
movsb
dec
les
ljmp
loope
or
or
movsb
fsubrl
and
ret
mov
dec
jns
lock
popa
add
jl
adc
inc
mov
movl
pop
add
cmp
add
jg
mov
aas
in
mov
lock
dec
sub
sarl
stos
mov
scas
scas
push
pushf
mov
push
and
aam
sub
dec
cli
adc
cltd
out
push
and
dec
jb
imul
push
sbb
cld
loope
cmp
push
xchg
rcr
pop
jnp
sti
sub
mov
mov
push
sbb
mov
aam
ret
push
mov
xchg
out
xchg
xor
mov
js,pt
sub
mov
xchg
outsl
adc
cmp
jp
jbe
ds
pop
and
idivl
jnp
or
adc
adc
xor
adc
add
mov
pop
cmp
insl
outsb
sahf
stos
in
repz
pop
dec
popf
fwait
push
inc
mov
and
je
js
adc
sahf
or
push
popa
cli
jo
mov
sbb
sbb
pop
loope
sbb
cmp
cwtl
and
lods
or
push
push
mov
jb
or
jnp
push
adc
int3
icebp
inc
icebp
xchg
cmp
adc
jo
push
and
das
or
icebp
jbe
icebp
lock
and
xchg
fiaddl
xor
or
mov
mov
and
movsl
test
xor
pop
sti
mov
jae
sbb
add
je
popl
hlt
shrb
stc
pushf
out
fldl
jb
hlt
fnstcw
aas
repz
xchg
push
daa
ja
xchg
add
pushf
push
adc
xor
aam
or
adc
sti
xor
cmpb
gs
xor
jb
xor
xorl
xor
mov
icebp
repnz
xor
js
cld
and
xor
sub
in
add
aad
jns
and
xor
aam
hlt
and
xor
js
add
in
or
xor
inc
xor
js
lods
add
adc
je
clc
movsb
and
xor
and
in
sub
or
psllw
push
xor
js
sbb
and
loop
push
and
insl
dec
scas
or
jp
sahf
mov
cwtl
ljmp
into
jl
sub
xchg
das
or
jge
add
mov
lret
insl
into
std
adc
xchg
out
or
jle
out
jmp
xchg
lock
dec
std
or
test
adc
pop
lcall
xor
stos
js
testb
push
dec
or
pop
mov
rcrl
xor
testl
or
xchg
sub
icebp
inc
or
xor
pop
mov
jb
aaa
decl
push
mov
test
icebp
xchg
cmp
icebp
cli
nop
fdivs
xchg
dec
cmp
jmp
jo
shll
test
test
orb
repnz
jmp
jo
aaa
adc
nop
jp
je
inc
xor
hlt
sbb
mov
and
lock
imul
or
fdivrs
xor
stos
scas
or
jge
mov
and
lock
mov
lods
xchg
mov
out
sbb
jae
jmp
ja
cmc
xor
push
popa
pop
lock
adc
xchg
adcl
div
mov
add
idiv
mov
fstpt
cmc
inc
icebp
sahf
mov
push
jle
cli
insl
in
loope
es
mov
int3
inc
outsb
jp
lcall
pusha
or
adc
sub
mov
jno
int3
repz
push
or
jb
in
dec
xor
push
nop
pop
lock
lods
testl
inc
out
pop
rcl
or
pusha
mov
gs
add
int3
or
jmp
and
cs
ss
lods
add
and
and
mov
sub
xor
stc
or
out
push
and
ja
or
dec
or
push
enclu
fisttps
pushf
clc
repnz
mov
jb
pusha
call
fisubl
jle
lret
inc
add
mov
jp,pn
mov
xchg
call
and
pushl
popa
xchg
xchg
loopne
imul
aad
fnsave
mov
jg
fdivrs
out
push
movmskps
cld
jg
and
insl
dec
add
clc
pop
ret
mov
repnz
mov
or
js
jno
jle
or
lahf
push
add
adc
push
jae
push
iret
push
clc
repz
jb
push
test
xchg
dec
pusha
imul
mov
pop
add
div
mov
int3
scas
mov
nop
in
adc
loopne
loop
xor
fs
fcmovne
test
call
dec
jne
popa
xchg
enter
ficoms
jo
mov
data16
loop
push
movsl
addr16
xor
aam
cld
insl
push
cmp
mov
jl
inc
repnz
icebp
xor
lret
xchg
cmp
push
pop
bswap
add
fistpl
push
mov
inc
sub
mov
add
adc
and
jle
sbb
jae
sub
push
mov
fistpl
in
sub
insb
pop
xchg
add
out
clc
lds
or
call
adc
lahf
sbb
sub
lea
iret
cmp
repnz
adc
xchg
inc
scas
shlb
rorl
rclb
or
jo
add
inc
stc
in
je
pop
sub
xor
xor
roll
jb
sbb
mov
in
jnp
out
jg
cld
addr16
ret
nop
cmp
mov
add
add
xorb
inc
xor
inc
mov
add
sahf
lods
cld
or
subl
test
rolb
bnd
or
xor
pop
push
jno
push
push
jbe
jp
les
xlat
stc
movsl
fcmovbe
mov
push
lds
or
adc
jecxz
mov
das
js
flds
push
xchg
xor
or
and
jnp
dec
repz
mov
ljmp
movsb
xor
movsb
out
mov
jno
pop
mov
jge
pop
lock
and
inc
fisttpl
test
fcompl
lret
sahf
popf
and
popa
cwtl
jmp
dec
add
sbb
call
fnstenv
add
dec
icebp
mov
or
popa
shr
push
dec
xor
xchg
test
cltd
rol
sbb
orb
scas
fistl
popf
add
pop
mov
push
jb
pusha
loope
je
mov
sbb
dec
or
xchg
hlt
rcll
sbb
mov
and
lret
push
test
jmp
jb
adc
xor
js
lcall
jo
add
push
cld
iret
adc
sub
lock
andl
lods
out
inc
test
je
icebp
hlt
cld
xchg
and
pusha
cmp
sbb
idivb
pop
jp
jb
xchg
lods
adc
jl
cli
lods
jno
iret
insb
xlat
adc
push
stos
add
jae
pop
sbb
cld
or
jnp,pt
sbb
sbb
push
popa
enter
js
push
mov
or
or
ret
ss
cmp
cwtl
add
iret
out
enter
add
mov
add
lea
mov
loope
or
out
repnz
cmp
xor
shlb
or
mov
cmp
hlt
add
xor
or
or
fwait
inc
movsl
icebp
cld
clc
icebp
clc
cmp
mull
js
adc
repnz
enter
shrb
inc
loopne
iret
mov
xchg
jne
addb
jo
adc
or
jmp
inc
or
xchg
sbb
orl
xor
mov
sbb
xor
mov
jnp
jmp
pop
and
stc
jo
or
push
xchg
cmp
or
dec
mov
dec
adc
mov
repnz
iret
pop
add
insl
jne
test
or
jns
and
das
xor
pusha
ret
out
cli
push
add
push
jmp
push
or
jbe
jecxz
cs
ds
popa
mov
popa
and
imulb
push
pusha
xor
xor
testb
pop
adc
cs
add
cmpl
icebp
out
inc
loope
sahf
fstpt
stc
fisubrl
mov
jl
xor
jle
or
lret
xchg
mov
adc
mov
jo
or
popf
xchg
xor
inc
or
sub
sub
push
repz
in
jns
or
jecxz
andb
pop
adc
rcll
lahf
repz
mov
cmp
add
push
mov
jo
or
mov
jbe
out
sti
or
xchg
xchg
push
inc
bound
lcall
dec
mov
sti
dec
in
rcll
jbe
mov
push
xor
int3
ljmp
ret
mov
icebp
adc
stos
push
out
repz
push
push
jmp
andl
jae
pushf
push
testl
aaa
inc
xor
stos
lret
add
in
mov
fmuls
outsl
faddp
xor
and
jns
shlb
push
lock
pop
cmc
imul
pushf
inc
xchg
test
or
push
lock
or
sbb
cltd
dec
xchg
xchg
mov
pusha
mov
mov
or
and
ss
mov
sbb
mov
or
dec
out
call
or
repz
push
xchg
test
add
pop
sbb
xchg
add
mov
popa
rorl
fidivl
cmp
hlt
lods
mov
in
and
jae
xchg
mov
xchg
iret
jo
or
mov
mov
shl
jmp
fwait
ds
cwtl
push
outsb
leave
je
cmp
adc
test
fwait
ret
or
sbb
les
rcrb
cld
jae
jb
in
pushf
shlb
add
gs
mov
dec
popa
xchg
repz
mov
jp
repz
test
mov
lahf
lods
test
cwtl
aad
mov
int
inc
push
hlt
adc
je
dec
ud1
push
fidivrl
ja
jg
gs
rorl
adc
sahf
jg
aam
jmp
ficoml
and
add
popa
cmp
mov
push
add
xchg
jle
pop
stos
xor
orb
inc
orl
sbb
jb
mov
adc
popa
push
xchg
mov
or
lds
mov
test
repz
or
inc
mov
mov
jnp
jp
lcall
mov
sub
shl
adc
sahf
adc
dec
xchg
popa
xor
sub
into
fisttpl
icebp
push
call
dec
sbb
mov
lods
xor
mov
mov
sbb
mov
repz
adc
out
jnp
xchg
loop
jae
cli
lcall
lahf
subl
jne
int
mov
mov
push
fistpl
inc
icebp
dec
mov
movsb
cmp
gs
cli
inc
mov
mov
jne
repnz
jmp
jo
or
push
sbb
bound
ja
mov
mov
push
xor
mov
jp
sub
ljmp
jg
push
enter
cmpsl
aas
xchg
adc
icebp
outsl
shl
jo
jae
pusha
rcl
mov
or
pop
pop
and
test
test
xchg
adc
das
xchg
lea
jae
and
aam
or
push
jg
outsl
cmp
stos
mov
lods
and
push
dec
sahf
fsubrp
mov
lock
mov
and
inc
cmp
nop
push
cld
ja
lret
adc
imul
cli
pop
cmp
insl
das
test
cmpsl
fistl
push
sbb
cmc
sbb
jne
inc
add
mov
mov
xchg
cwtl
jnp
mov
add
mov
cmp
aas
push
mov
inc
shrl
mov
jle
add
lcall
push
adcb
xor
test
adc
shlb
xor
xchg
push
pop
xchg
push
fsubl
testb
hlt
mov
divl
loopne
xchg
aad
and
repnz
or
ljmp
or
pop
cmc
xchg
adc
cmc
pop
inc
mov
jbe
and
jmp
ja
rcl
adc
pop
sahf
lock
sbb
repnz
jbe
add
adc
rclb
mov
add
or
sub
iret
push
mov
fwait
je
mov
mov
repnz
iret
jbe
shl
mulb
sbb
sub
orb
mov
fidivrl
xor
and
sub
inc
xor
cwtl
pop
jl
jns
icebp
mov
jnp
cld
repz
cmp
lock
add
sti
push
fwait
std
push
jle
mov
bound
add
mov
adc
adc
out
dec
push
jb
xor
andl
add
or
mov
jne
jb
cmc
dec
xor
shlb
icebp
ret
test
xchg
pop
pop
adc
icebp
cld
or
test
mov
mov
cmp
fsubl
adc
mov
inc
or
popa
push
outsl
call
adc
sahf
mov
mov
or
adc
inc
and
clc
lock
addr16
js
ss
icebp
jo
mov
jl
xor
mov
push
or
or
js
js
cmp
faddl
repz
es
xchg
out
mov
jns
dec
add
adc
insl
jb
rcll
cmp
jl
pop
imul
mov
add
sbbb
dec
jb
mov
add
or
add
icebp
jl
jne
sarb
adc
cmp
pop
jb
adc
icebp
push
es
popf
xor
dec
dec
add
flds
jb
push
add
hlt
inc
or
icebp
jbe
std
xor
add
add
or
mov
cli
subl
pop
sbb
jno
cmpb
jmp
sahf
inc
notb
cld
lock
mov
adc
cmpb
mov
fdivp
dec
cmp
out
hlt
imul
or
add
shlb
cmp
jno
cmpb
mov
pop
hlt
mov
mov
jno
cmpb
mov
mov
add
jne
shr
push
addr16
or
cmp
daa
jg
xor
lock
jae
sarl
or
mov
jne
adc
mov
adc
icebp
add
in
jl
xor
mov
or
js
or
cli
push
icebp
or
inc
clc
push
xchg
js
mov
clc
jg
cmc
popa
mov
js
mov
hlt
int
in
and
cwtl
jl
icebp
xor
add
push
iret
push
ds
aaa
inc
push
js
or
cld
hlt
adc
or
js
fdivl
hlt
inc
sarb
push
or
cmc
inc
sbb
orl
mov
add
mov
lods
mov
js
sbb
int
icebp
into
int3
add
js
cmp
mov
dec
adc
adc
add
sbb
jno
js
cli
xorl
inc
jno
cmpb
rclb
lock
cmp
sbb
into
xor
add
js
and
xchg
hlt
mov
out
jnp
adc
cmpsb
mulb
andb
cmp
mov
jle
popa
push
xorl
hlt
rcrl
aas
cltd
cmp
xchg
xchg
lods
call
jle
or
cmpsl
add
mov
lods
or
mov
and
outsl
mov
fstpt
sahf
mov
adc
jnp
sbb
mov
mov
and
jmp
mov
or
push
sbb
cmp
inc
xchg
or
xor
cmp
push
xor
es
aaa
fldcw
dec
repnz
lods
bound
inc
jo
lret
add
sbbb
fnstsw
sbb
sbb
mov
mov
andb
xchg
repnz
jne
shl
out
insl
sbb
or
xor
adc
inc
adc
inc
jae
adc
adc
add
mov
fmulp
cmp
xchg
add
cmp
sub
jl
xor
push
xorl
xor
add
xor
test
pop
test
sti
xor
dec
ljmp
pop
adc
ljmp
rcll
add
xor
cmc
icebp
adc
jb
add
hlt
push
push
jno
xchg
jmp
cmp
push
mov
cmp
or
add
lock
push
stc
jle
jp
mov
faddp
cmp
stc
or
add
push
mov
cmp
lea
inc
jl
lret
bnd
mov
adc
jb
lock
jo
repnz
add
jo
cmp
add
test
cmp
pop
jp
xor
cmp
mov
cmpb
jae
nop
sarb
jp
sarl
nop
sbb
pop
add
cli
nop
inc
test
dec
stos
cmpb
jp
or
icebp
leave
stos
or
icebp
inc
stos
rcrb
or
ret
repnz
sub
jno
cmp
cmp
repnz
mov
icebp
xchg
cmp
lret
pop
mov
or
cmp
or
idivl
mov
lock
or
mov
or
mov
mov
shlb
jo
adc
lock
testb
or
lock
or
cs
fs
adc
or
pop
xorb
mov
jae
bound
cmpsl
jge
movsb
clc
or
pushl
cmp
xor
xor
shlb
mov
mov
shl
std
icebp
or
lock
jle
test
xchg
push
cmp
mull
inc
add
jmp
icebp
cld
lock
or
ds
xchg
push
adcb
mov
adc
mov
or
bnd
mov
repnz
add
repz
adc
adc
jbe
xchg
rolb
cli
mov
lock
jo
stc
fmull
mov
push
jle
cs
pop
jno
fidivl
pusha
enter
pop
icebp
inc
divl
pushf
pop
jb
push
sahf
aam
popa
bound
insl
xor
sbbb
ficompl
adc
mov
jae
xor
test
test
fimull
icebp
in
pop
in
and
jns
or
loop
fwait
jle
xor
nop
jnp
cmp
add
add
sbb
fwait
test
jno
roll
std
stos
adc
push
ja
divl
mov
sub
testb
and
bound
int3
aaa
icebp
and
lret
push
fcmovnbe
pop
add
adc
lcall
sti
pop
cmp
cmp
xor
push
add
leave
aam
mov
mov
adc
hlt
insb
mov
sbb
std
jb
xor
xor
aas
cmp
rep
xor
mov
xlat
pop
add
push
stc
mov
push
bswap
out
xchg
sbb
pop
push
cmp
mov
aas
rcl
insl
mov
or
in
nop
repnz
fadds
fidivs
out
pop
mov
out
xor
mov
hlt
popa
xchg
adc
notb
out
jnp
clc
xchg
jnp
sahf
into
xchg
pusha
pop
push
push
inc
aam
jle
fs
rcrl
outsl
inc
xor
cwtl
lock
lahf
mov
cmp
sbb
xchg
xchg
mov
mov
cld
mov
and
rdmsr
push
or
inc
xchg
and
nop
jl
xchg
push
shll
subb
adc
push
int
out
imul
xchg
jb
jo
lock
sahf
adc
mov
dec
xor
add
mov
mov
dec
sub
push
addr16
lods
mov
nop
cwtl
les
pop
jb
or
ret
shr
fcmovu
dec
repz
push
mov
or
or
ret
and
jno
sbb
test
idiv
clc
push
jle
clc
jl
sarb
stc
adc
or
and
jae
add
jp
and
mov
sub
iret
js
push
push
aas
sbb
jne
sub
add
addl
push
xor
mov
jbe
lret
hlt
mov
jo
adc
adc
dec
lcall
sub
rorl
or
mov
push
jns
adc
lock
popa
das
jle
sbb
clc
jle
pushf
mov
repz
loop
adc
add
add
jg
add
and
dec
shr
push
sti
xchg
jle
inc
aad
jbe
popa
out
xchg
dec
xchg
mov
notl
xorl
jae,pn
testb
jbe
mov
jecxz
dec
adcb
sub
add
insl
pushf
push
add
shrb
adc
fwait
inc
stos
cmpb
push
add
sbb
pop
sub
les
frstor
mov
add
cmc
xchg
mov
adc
xchg
pop
decl
sahf
mov
add
mov
out
mov
imul
jb
neg
repz
pop
lock
stos
inc
aad
xor
out
or
sti
and
cmp
xchg
mov
sbb
aaa
ljmp
jne
xor
mov
xchg
fcomip
scas
mov
fdivl
aad
cmp
stos
clc
jecxz
divb
stc
in
and
xor
push
hlt
xor
hlt
sbb
mov
fdivs
mov
sub
stos
pop
cmp
popa
ljmp
mov
ret
pop
sub
aam
mov
jo
mov
cld
cmc
and
shlb
shll
push
cmpb
popa
or
shl
xor
dec
outsb
mov
loopne
pop
jnp
sub
sbb
jne
mov
inc
lock
aad
sbb
inc
dec
mov
dec
out
push
push
jb
push
fidivrs
sti
pusha
mov
pusha
push
inc
popa
test
inc
xchg
add
sub
xchg
push
into
push
sbb
push
xchg
xor
scas
hlt
xchg
sbb
adc
hlt
nop
fcomp
call
push
jmp
outsb
pop
xor
jl
xor
jnp
adc
jo,pt
push
out
ds
and
add
push
movsl
or
push
hlt
xor
ja
xorl
js
call
jo
or
sub
add
into
jb
popf
movsb
pop
or
aam
push
mov
sbb
adc
adc
push
pusha
xchg
sbb
mov
mov
dec
sahf
add
rcll
pop
push
lock
sub
inc
xor
mov
cmpsl
fildl
mov
subb
pushf
aas
popa
pop
xor
scas
outsl
repz
cmpsl
shrb
jno
or
ss
add
jb
sbb
sbb
ds
jl
add
pop
xchg
push
sbb
imul
cmpsl
and
xor
sbb
inc
inc
ficompl
shrl
mov
bnd
jle
mov
mov
lock
lods
mov
or
push
mov
pop
outsb
xlat
test
repz
enter
cmp
icebp
push
mov
add
fcompl
adc
andl
test
mov
or
into
add
test
xor
adc
lock
lock
jecxz
xor
test
pop
icebp
inc
or
js
ss
adc
adc
icebp
rorl
or
adc
popf
sarb
adc
and
mov
adc
and
jl
sti
lds
add
imulb
aad
jae
addr16
mov
adc
xlat
push
mov
xor
adc
lock
sarb
adc
add
nop
add
or
js
ss
sbbb
cli
icebp
fs
js
ss
xchg
or
xor
pop
lock
cmp
adc
add
add
divl
adc
lock
shlb
pop
notl
icebp
xchg
or
xor
jno
sbbb
hlt
icebp
adc
cmp
xor
push
push
mov
add
stos
jno
sbbb
div
call
jle
clc
es
xor
adc
lock
cmp
adc
add
add
adc
dec
je
or
jl
or
dec
or
xorb
xorb
cmpxchg
or
out
jl
pop
xchg
add
push
test
push
jno
mov
add
mov
mov
fs
add
das
or
rcl
mov
xor
sub
cld
mov
sub
xchg
mov
fimull
stc
xor
adc
fdivr
jns
fcoml
fnstcw
adc
scas
dec
mov
mov
or
in
scas
rcr
and
stos
push
cmc
or
adc
xor
push
jg
mov
stos
mov
rcr
imul
ljmp
clc
jo
xorb
mov
jl
add
std
dec
mov
jge
ds
add
cld
or
lahf
adc
jp
pusha
jne
xchg
out
pop
or
push
xchg
cmp
mov
mov
sbb
mov
negl
jecxz
into
xchg
data16
arpl
mov
scas
pop
xchg
daa
pop
pushl
out
dec
sahf
cmp
scas
insl
ss
popa
fstps
jl
jnp
mov
test
je
xchg
jns
cmp
mov
and
mov
fnsave
or
mov
div
ja
sub
rcll
mov
div
stc
std
call
push
cmc
jnp
sbbl
jl
cmp
sbb
add
std
adc
adc
jle
dec
decb
cmc
jg
and
adc
push
into
xchg
xor
add
js
dec
add
stos
test
cmp
mov
add
sti
jne
cmp
mov
adc
cmpl
xchg
js
or
jb
xchg
stc
xor
adc
insl
and
push
sti
adc
push
std
adc
push
add
mov
or
or
mov
or
lea
xchg
push
orb
sidtl
sarb
jb
jbe
inc
cmc
lcall
mov
lock
std
mov
insb
xlat
mov
cmpl
sub
jno
and
adc
das
xor
push
hlt
adc
xor
popa
mov
jbe
jb
divb
mov
ja
jbe
notl
stc
push
jno
and
repnz
add
mov
push
xor
mov
or
notl
and
sti
dec
sarb
cmpl
int
cld
adc
jae
mov
adc
xor
and
popa
pop
ja
daa
adc
push
insl
push
or
jp
js,pt
add
or
cmp
mov
add
outsb
js
andl
add
js
xorl
je
cmp
xor
in
adc
xor
push
xor
push
xchg
stc
push
pop
xor
push
xchg
jle
or
push
push
mov
adcl
shlb
mov
or
mov
or
mov
push
adc
add
mov
jne
or
xor
xchg
shll
mov
pmullw
repz
clc
test
jmp
sub
mov
adc
mov
lock
add
jecxz
mov
jne
and
mov
sbb
jae
cmp
mov
repz
jne
and
hlt
and
clc
mov
and
adc
js
test
jne
ja
sbbl
clc
sbbb
aaa
cmp
pusha
lahf
bnd
shll
inc
cs
push
jb
inc
push
adc
shlb
pushf
jno
or
cmp
stos
nop
xchg
xchg
das
sahf
jno
out
testl
xchg
dec
shl
cmc
push
insl
bnd
repz
shlb
popa
push
cmp
jg
idivb
push
xchg
inc
lods
bnd
cmp
mov
cwtl
ljmp
jbe
xor
or
sbb
outsl
loopne
adc
and
ss
shlb
xchg
push
cwtl
repnz
ljmp
ret
je
xchg
fdivr
jmp
cmp
subb
ss
and
cwtl
pop
std
mov
xchg
mov
push
adc
jno
cmpsl
fmul
orb
pop
outsb
dec
jo
testb
and
xchg
xchg
arpl
inc
jge
loopne
leave
inc
lret
mov
add
fiadds
lcall
inc
add
test
jle
orl
iret
lahf
and
mov
jns
xor
xor
cld
subl
adc
movsb
or
or
ljmp
je
outsb
push
sbb
int
adc
je
mov
js
or
ds
pop
stc
add
aas
add
repnz
adc
iret
jns
js
ljmp
push
repnz
cltd
lock
sbb
push
imul
cmp
or
cld
or
jbe
sub
mov
xor
imul
cmp
bnd
mov
bnd
ret
xchg
pop
fnstenv
adc
pop
adc
jp
aaa
js
jecxz
negb
notl
mov
or
or
sbb
movsl
jno
dec
adc
ficoms
xchg
jo
scas
pushf
setae
jne
jae
or
clc
stos
int
fwait
cmp
inc
fisttps
sub
call
shll
dec
sbbl
inc
mov
adc
aas
addr16
xchg
popa
mov
outsl
xor
clc
xor
lock
int3
pop
repz
dec
pop
fmuls
pop
js
mov
orb
aam
jae
jo
jae
cmp
fnstenv
sub
leave
imul
fldenv
out
mov
sahf
test
stc
out
add
aad
xor
or
sub
fcomip
sbb
movsb
cmp
adc
or
cmc
sahf
mov
or
xchg
loop
push
addr16
sbb
or
xchg
jp
mov
idivb
jns
pop
test
mov
div
loope
data16
ljmp
repz
bound
push
inc
mov
icebp
and
repnz
cmp
xor
cmp
fidivrs
scas
in
mov
loop
loopne
stos
push
inc
sbb
inc
outsb
xor
aam
inc
xchg
mov
int3
icebp
fwait
lahf
inc
cli
je
or
xchg
mov
mov
out
insb
xlat
inc
cmp
cmpsl
leave
xchg
mov
in
addr16
adc
push
lea
nop
add
cmpsb
fdiv
add
xchg
cmc
sbb
push
cld
or
fstps
cmp
jl
add
out
mov
cld
jns
repz
bound
push
jb
jl
test
xchg
mov
push
xchg
lods
xchg
filds
out
mov
cmc
out
mov
pop
and
in
stc
mov
fimuls
and
idiv
mov
cltd
adc
mov
rorl
jo
faddl
fidivrs
sbb
jno
cmp
or
pop
mov
mov
pop
clc
jp
cli
cld
add
xchg
cmp
dec
movsb
jp
push
jle
push
shrd
mov
add
pop
subl
xchg
mov
insb
loope
into
pop
cmp
cmpb
nop
outsb
lods
xchg
gs
mov
mov
mov
pop
jno
shl
ficompl
push
int3
fsts
and
gs
std
fadds
enter
inc
sahf
xchg
mov
ds
std
repz
incl
nop
mov
or
mov
and
fcompl
fidivrs
cwtl
dec
je
js
movsl
mov
repnz
pop
es
outsb
sbb
jo
jle
iret
push
stc
push
imull
movsl
cmp
std
cmp
lea
inc
mov
lea
jl
lock
xor
repnz
loopne
fsubs
sbb
cli
sbb
add
lods
sub
sti
xor
add
test
scas
jno
fsubrs
fstpt
test
add
jae
mov
adc
mov
lock
add
jg
hlt
sbbb
pop
mov
jb
xor
mov
jb
adc
add
js
data16
adc
add
and
inc
xchg
lret
add
add
mov
add
mov
add
mov
add
jb
xor
dec
pop
leave
inc
xor
cltd
cmc
xchg
mov
ss
hlt
sub
je
adc
xor
js
jb
jno
call
out
inc
jne
orl
lret
adc
das
mov
int
mov
dec
es
cmp
jno
adc
icebp
orl
mov
jne
mov
fisttpll
pop
out
faddp
pop
movsl
ret
sub
sbb
testb
lock
mov
jle
mov
or
mov
hlt
mov
mov
repnz
xchg
inc
adc
cwtl
adc
idivl
cli
repz
or
mov
scas
shrl
lock
mov
pushf
and
mov
shlb
call
mov
into
repz
das
or
roll
sbb
inc
fcmovbe
int3
xlat
inc
repnz
xor
cmp
cmp
pop
xorb
imul
hlt
add
adc
sub
in
fisubl
fwait
mov
cmp
dec
jne
mov
shl
aaa
pusha
sub
jb
cmp
or
inc
call
repnz
mov
ds
arpl
or
cmpsl
sub
ss
fidivs
adc
push
push
adc
mov
push
xorb
push
jbe
fcmove
add
jo
jbe
inc
push
lods
adc
or
pusha
aas
dec
jbe
xor
inc
jnp
xor
int3
pop
cltd
jb
jo
popa
stc
das
xchg
xlat
ret
mov
cmp
lock
sbb
sbb
or
push
cmp
out
orl
in
mov
leave
add
or
add
ja
fxam
je
jmp
loope
xchg
outsl
xor
int3
sbb
cwtl
pushl
out
mov
jle
jb
cwtl
xchg
jnp
dec
scas
or
lock
xor
jno
fcmovne
sub
lret
xchg
sub
sbb
xchg
orl
les
mov
or
mov
cltd
in
pop
and
cmpb
in
icebp
clc
cmp
adc
or
xor
lret
mov
popa
call
mov
ja
xchg
pop
icebp
and
lcall
repz
jbe
sbb
jp
sbb
sbb
adc
adc
mov
mov
sbb
movsl
ror
addl
adc
push
lods
cld
mov
je
pop
std
test
push
inc
jle
xchg
or
ss
cmp
cmp
mov
js
pop
lea
repnz
xchg
xorl
mov
insl
stos
insl
int
cmp
imul
notb
sahf
ja
iret
jle
cli
inc
adc
jno
pop
xor
repz
mov
and
mov
cmc
jmp
fldt
mov
pop
repz
mov
or
sarl
outsb
test
ret
push
outsb
sti
mov
lods
jns
and
mov
rclb
shrl
ret
jb
icebp
roll
in
shlb
insb
ds
jne
inc
repnz
mov
shlb
jecxz
mov
daa
inc
mov
push
jle
popa
mov
js
pop
sub
popa
push
insb
ret
pop
and
mov
and
test
outsl
push
xchg
or
hlt
in
xchg
xchg
les
add
cld
lock
aad
cmpb
in
push
xchg
bound
movups
fidivs
fldl
out
je
sti
lock
sub
out
enter
call
push
cmp
cmp
xchg
fidivl
inc
inc
xor
les
mov
cmp
sbb
rorl
insl
ds
icebp
clc
sbb
mov
insl
mov
pop
mov
lods
cltd
aaa
in
imul
pop
loopne
jne
repnz
mov
cmp
das
je
push
repnz
mov
stc
fnstsw
or
dec
ret
dec
sbb
sarl
and
iret
cli
repz
jl
lock
clc
mov
sub
xor
push
iret
mov
jo
or
cltd
dec
stc
cwtl
cmp
sbb
repz
cmp
clc
mov
lahf
sbb
cli
pop
pop
cmp
aad
mov
sahf
pop
notl
xor
jno
divb
faddl
fnstcw
fs
hlt
adc
pop
fistpl
pop
push
jl
and
sub
push
push
mov
jge
sub
sub
ret
icebp
mov
test
ficoms
or
cmc
std
inc
pop
dec
adc
sub
shl
pop
jb
jle
pop
roll
popf
hlt
ds
adcl
xorb
sbb
in
bound
fcmovbe
cwtl
or
dec
repnz
shrl
sub
cmp
pop
shll
xor
push
jae
out
sub
out
mov
enter
lcall
or
in
jbe
cmp
jno
pop
inc
test
xchg
repnz
popa
mov
sub
enter
loope
push
cli
xor
je
add
jno
rorb
out
xor
sbb
not
inc
fstps
dec
movsb
sahf
loope
cld
mov
add
sbb
fdivs
fnstcw
shll
cwtl
mov
cmp
dec
jo
cmp
addr16
rol
repnz
xor
mov
adc
gs
fidivrs
xlat
and
cmp
sahf
mov
in
divl
pop
adc
add
subb
dec
ja
and
pop
mov
imul
dec
cmc
add
jb
dec
pop
shlb
or
shll
test
clc
jne
mov
and
das
mov
pop
imulb
addl
cltd
mov
cld
cmp
cmpsl
icebp
pop
jecxz
xchg
cmp
aaa
dec
push
jge
jne
pop
add
je
aad
sub
je
out
lock
push
negb
mov
loop
jbe
stc
mov
sub
test
mov
pop
sbb
push
mov
in
jbe
xchg
mov
push
or
jle
mov
push
push
sahf
mov
jne
aam
push
pop
sbb
aad
xor
sti
cld
inc
jns
xlat
xchg
js
fstl
cli
add
sub
cmp
fwait
or
xlat
jno
mov
push
xor
out
enter
lret
repz
adc
sub
or
sub
nop
push
scas
lods
fdivs
dec
adc
jo
push
clc
adc
and
inc
jge
arpl
in
aad
xchg
push
xor
cld
testl
enter
xor
push
call
add
inc
mov
outsl
dec
mov
xchg
jno
aad
sti
cmp
xchg
inc
mov
jo
mov
adc
in
and
sbb
sahf
xchg
xor
cmp
sub
outsb
ds
mov
cmp
rcll
push
push
test
and
in
aam
mov
cmp
shlb
mov
xchg
push
rcl
dec
aaa
push
pop
xchg
in
stc
sbb
addr16
mov
mov
dec
mov
std
iret
scas
mov
pop
mov
imul
adcb
repz
fildl
divb
lock
push
int3
push
jo
js
mov
push
adc
div
int3
xchg
lcall
pop
xchg
mov
fs
insl
mov
xchg
hlt
push
nop
mov
xchg
add
dec
mov
cmp
stc
lods
xor
xor
sub
pop
pop
mov
jge
jbe
hlt
push
inc
shlb
sbb
cmp
stc
or
sub
jle
inc
scas
pusha
in
fists
inc
std
jne
cmp
mov
stos
jb
lcall
xor
and
jecxz
int
cmp
sbb
das
jae
out
cmp
or
jne
and
push
mov
fidivrs
pop
ret
outsl
mov
out
cmp
mov
cmpb
push
pop
jnp
imull
sub
cwtl
popa
pusha
das
in
mov
lods
or
push
and
jbe
jb
out
add
movsb
mov
pop
cmc
adc
hlt
fwait
xor
jne
fldenv
dec
negl
test
rolb
jg
jnp
fldenv
ss
xchg
pop
push
cli
or
arpl
jae
lcall
mov
add
je
jb
cmpsb
mov
test
nop
xor
and
sarb
and
arpl
mov
sbbb
sbb
icebp
adc
out
jle
push
push
push
jb
xchg
xor
mov
or
jle
mov
sahf
sbb
mov
mov
adc
sub
adc
sub
cmp
or
jp
adc
xchg
inc
leave
mov
jo
and
add
clc
ja
idiv
test
inc
cmp
and
cmp
or
pop
mov
insb
xchg
pop
adc
fldcw
xor
push
and
add
add
icebp
lea
mov
cmp
jecxz
addr16
adc
jge
dec
jecxz
int
sub
jg
movups
mov
or
dec
and
pop
repz
nop
push
cmp
jb
mov
insl
adc
mov
mov
pop
xchg
push
pushf
test
in
in
jb
adc
pop
psadbw
ja
jp
xor
fwait
mov
std
dec
enter
dec
shl
movsb
lret
mov
stos
in
cmp
pop
repz
int
fwait
sub
loop
cmpsb
jo
mov
fisubrs
jb
out
std
push
and
mov
sub
pop
lret
add
jge
adc
jmp
xor
cltd
cli
jno
cmp
xor
addr16
enter
aam
leave
shll
push
mov
pop
fildl
push
add
or
fnsave
jbe
cmp
and
stc
pop
movsb
and
test
pop
test
les
hlt
adc
mov
stos
mov
mov
lahf
ret
repz
in
jne
jl
push
cmp
fsubrs
xchg
mov
out
jl
cmc
xchg
push
dec
pop
cwtl
leave
nop
lret
lcall
add
enterw
dec
adc
insb
sbb
add
push
mov
jb
scas
es
mov
data16
fstps
and
push
add
sub
out
scas
test
lahf
lret
outsl
pop
dec
ljmp
and
dec
cmp
aas
jne
pop
bound
xorl
sub
sub
fstps
mov
xchg
cmp
add
aaa
mov
sahf
pop
pop
push
sub
or
inc
pop
fisubrl
or
mov
into
add
pop
out
xor
push
loop
push
inc
xchg
cmp
lahf
divl
jge
cmpsb
repnz
mov
mov
add
jne
or
arpl
pusha
sub
xchg
ret
les
inc
sbb
out
lret
add
cmp
lock
cmp
dec
fisubs
outsl
pop
rcrb
push
and
inc
inc
sub
jnp
lret
adc
movb
adc
aas
dec
mov
push
dec
sbb
leave
in
inc
or
mov
movsb
testl
lret
sbb
mov
iret
incb
roll
jbe
pop
add
dec
divb
lods
rcr
out
std
xchg
lret
push
test
icebp
jae
clc
cmp
xor
jno
pop
xor
cli
es
sbb
and
cwtl
scas
popa
push
or
inc
push
int
out
xor
sbbw
or
cmp
or
clc
scas
ret
and
xchg
out
sbbb
xchg
inc
sub
pop
jo
or
pop
and
add
or
dec
out
and
or
jb
cmp
int3
dec
dec
sub
push
push
mov
sub
imul
in
mov
mov
push
test
xor
and
inc
adc
add
mov
test
inc
mov
dec
into
add
icebp
mov
cmc
mov
aas
mov
xor
stc
jg
add
clc
aam
sti
es
add
cwtl
dec
jl
mov
inc
fwait
mov
adc
js
mov
popa
shll
jb
bnd
pminub
push
jo
add
push
mov
iret
sahf
cmp
cli
or
push
xlat
push
dec
sub
lcall
bound
mov
jle
and
sbb
sbbl
div
xor
push
or
pop
es
inc
adc
jnp
xor
mov
xchg
rdmsr
lret
cmp
adc
cmp
push
adc
inc
iret
jp
pop
stc
popf
aad
jle
pop
adc
test
aam
mov
xchg
das
incl
stc
mov
or
roll
les
repnz
scas
mov
es
cmp
cli
lea
inc
or
sbb
sub
jbe
mov
stc
pause
xor
cmp
mov
cmp
and
dec
repnz
hlt
sub
mov
mov
out
lahf
jo
icebp
sub
int
or
pop
sahf
xchg
xorl
test
sub
push
ss
scas
jge
xchg
aaa
inc
out
sbb
jns
xor
pop
test
adc
xor
sahf
cmp
sub
push
outsl
repz
inc
pop
mov
and
shll
je
icebp
fsub
cmp
js
rorb
pop
xchg
dec
repnz
xor
mov
mov
mov
jno
test
mov
js
aam
shlb
push
sahf
mov
jb
lock
push
jns
icebp
mov
leave
pop
iret
xchg
sbb
adc
mov
repnz
jecxz
in
and
popa
xchg
icebp
or
std
inc
inc
je
ljmp
mov
xor
xor
js
xor
aam
mov
and
and
jae
add
repz
mov
repz
mov
insl
cmp
dec
pop
rclb
cwtl
xchg
orl
insl
rorl
fdiv
stc
xor
pop
nop
inc
sbb
mov
xchg
sti
imul
leave
div
jb
jns
int
std
adc
je
clc
lods
add
add
fcoms
fisubl
fmull
sbb
xorb
sahf
int3
cmp
lahf
jne
fwait
dec
sahf
ficoml
gs
and
lcall
ficompl
xchg
ds
mov
mov
adc
cmc
cmc
hlt
ret
jge
ficoml
ss
mov
out
inc
imul
gs
or
mov
jmp
jb
hlt
dec
mov
repnz
cmp
insb
mov
rolb
fcmove
ret
jo
or
sbb
hlt
cmp
idiv
aam
xchg
test
clc
in
and
popa
add
loop
adc
mov
xchg
cmp
inc
jno
push
mov
stos
jmp
mov
sbb
lock
add
and
adc
pop
testl
fadds
mov
or
jg
mov
fisubrs
xor
stc
or
pop
and
pop
jns
mov
or
jb
xchg
pop
or
sub
in
and
xor
loopne
scas
call
adc
idivl
setge
cmp
cld
inc
orb
jp
cmp
xor
jo
and
lcall
repnz
sbb
outsb
jb
pop
bound
jo
or
es
stos
ja
jbe
mov
add
pop
pop
in
shll
loopne
inc
dec
xchg
xchg
sahf
pop
or
or
jo
cmpsl
xchg
jae
cmp
jp
adc
sti
fcmovbe
push
xor
in
xchg
xchg
stc
inc
push
mov
sbb
adc
add
jb
js
add
inc
jp
cmp
sbb
mov
sub
loopne
pop
aas
pop
mov
rcll
jns
push
int
cmp
jns
lods
in
pop
in
jae
mov
pop
jbe
add
je
jae
adc
cmp
out
sbb
and
adc
into
xchg
loope
repz
cmp
xchg
add
xchg
stc
jns
icebp
xchg
mov
jl
push
sbb
mov
cli
mov
mov
xor
cmc
inc
arpl
in
dec
fwait
jno
xor
mov
mov
test
icebp
push
pusha
test
xchg
test
dec
outsl
or
xchg
in
inc
or
mov
cwtl
fstp
jp
or
aas
mov
dec
mov
imul
pop
repnz
xchg
test
or
add
les
test
push
imul
fs
cmpsl
lods
fwait
je
mov
enter
inc
sub
sbb
stos
xor
mov
push
cwtl
stc
hlt
jo
mov
push
and
aam
add
and
adc
rclb
rolb
jbe
mov
shl
movsb
sbb
fisttpl
sbbb
std
into
xor
loope
stc
fs
mov
xchg
cltd
jo
jo
lds
mov
lea
inc
stos
stos
xor
push
cmpsl
cmp
inc
jge
jns
test
pop
sbb
dec
dec
lock
or
xchg
in
std
cs
ret
aad
clc
lret
and
dec
xor
cmp
adc
icebp
sub
lock
or
flds
dec
addb
mov
into
push
and
inc
pop
mov
and
cmp
or
popf
cli
bnd
cmp
jmp
repz
push
stc
lock
push
jb
push
addl
xor
jb
cmp
push
mov
or
sbb
xor
or
cmp
or
jl
ja
mov
jne
mov
sub
mov
cmp
mov
xchg
or
hlt
jno
pop
or
mov
iret
add
mov
add
or
sbb
repz
popf
stos
clc
add
pop
out
or
cmp
out
xchg
insl
pop
push
out
add
add
add
dec
cli
inc
cli
xor
add
mov
inc
decb
sbb
pop
sbb
mov
and
lret
adc
jae
jo
out
xchg
jo
bound
xchg
jmp
test
mov
add
add
loope
cld
jae
push
pop
adc
cwtl
push
pop
push
fists
mov
push
xor
sti
out
jns
xchg
lcall
and
loop
fimull
fs
sbb
out
push
cs
cli
icebp
mov
rcrb
pop
mov
cwtl
jge
jl
jns
mov
clc
popa
outsb
subl
divb
sbbb
sub
outsb
cmp
stc
mov
stc
aam
scas
sbb
js
dec
ds
xor
add
dec
xchg
jno
test
cmp
lahf
mov
add
jno
or
loopne
enter
out
push
jle
sub
sub
jge
icebp
or
lahf
ja
sub
xchg
test
xchg
jb
out
lahf
loope
mov
add
pop
lahf
mov
mov
shrb
cmpsb
fs
cmpb
ficoml
int3
add
sbb
incb
xor
aam
orl
cmp
hlt
push
fistl
xor
pop
inc
xor
les
mul
aam
add
js
jbe
or
cld
add
dec
adc
jne
push
out
test
vandnps
int3
cmpsb
es
mov
test
call
sub
inc
mov
jae
not
mov
dec
jne
push
clc
jg
cs
push
or
cmp
inc
cwtl
inc
cmp
out
imul
pop
and
in
push
jl
cmp
pop
xor
out
xchg
addr16
jne
mov
jns
adc
jl
adc
into
jno
incb
cmp
adc
dec
fadds
jno
jno
out
mov
icebp
and
adc
mov
xor
movsl
aas
fs
sub
icebp
icebp
rcrl
dec
or
ret
jmp
inc
add
les
pop
negl
jmp
xor
sub
adc
arpl
mov
imul
andb
push
flds
out
je
add
mov
and
std
daa
test
adc
sub
sbb
mov
pushf
push
in
ljmp
sub
aaa
sbb
in
hlt
push
test
cmc
insl
sub
out
jle
sbbb
imul
std
or
test
add
xor
push
jnp
bnd
cwtl
jae
je
mov
cltd
bound
testl
das
ret
and
repnz
cmpb
test
out
into
das
jae
out
into
mov
and
je
adc
imul
rcll
hlt
out
push
mov
pop
popa
jb
xor
inc
shrb
mov
xor
cmp
jne
mov
aad
sahf
xchg
sbb
cltd
gs
mov
push
cli
cmpsl
mov
sbb
icebp
push
and
fnsave
ficomps
repz
sub
sysexit
es
fmulp
mov
push
jmp
icebp
rcr
cs
cmpsb
xor
test
mov
mov
js
jp
movsb
sub
lret
lods
cs
cmp
add
and
mov
jno
xchg
pop
mov
adcb
hlt
ret
add
rdtsc
stos
adc
xchg
je
es
mov
xchg
adc
sahf
std
js
in
dec
xchg
lcall
xor
subl
call
cmc
cwtl
vcvtps2dq
mov
mov
lcall
jno
mov
shl
mov
mov
pop
andb
adc
bound
adc
das
sbb
iret
adc
iret
adc
jle
call
jle
mov
mov
fadd
test
add
cmp
movsb
fisttpll
xchg
insb
lock
fs
test
out
mov
dec
pop
hlt
or
adc
test
test
call
mov
fucomp
inc
pop
pop
fimull
sub
inc
adc
sub
dec
in
or
xchg
dec
push
imul
das
mov
and
fmul
add
add
mov
dec
gs
cld
es
jb
dec
je
pop
and
jne
inc
fbld
sub
cmp
mov
lock
fiaddl
leave
inc
inc
scas
cs
bound
push
icebp
add
push
mov
sub
cmp
mov
push
es
push
sbb
and
rcrb
pop
jae
push
cmp
popf
inc
es
rcll
push
mov
dec
stos
xor
clc
lock
cmpsb
xor
jae
pop
leave
or
fcmove
push
nop
mov
or
xchg
dec
adcb
xor
test
int3
mov
clc
lds
sbb
pop
lock
andb
cmp
jmp
divb
or
mov
pop
shlb
call
and
inc
out
inc
filds
mov
repnz
icebp
xchg
add
popa
call
xor
arpl
daa
jbe,pt
ljmp
xchg
push
jnp
mov
in
mov
stc
jo
rcll
rol
out
data16
js
shrl
mov
mov
out
mov
push
mov
stc
and
or
iret
xchg
test
je
mov
mov
cmp
and
xchg
scas
cli
aas
insb
pop
pop
push
pop
and
mov
jne
xor
mov
ja
and
xchg
in
mov
xchg
test
test
mov
cmpsb
movsl
mov
ja
and
push
in
loop
inc
dec
mov
orb
stc
jmp
xor
or
adc
jo
data16
xchg
enter
mov
pop
out
mov
push
scas
and
clc
adc
out
insb
mov
sahf
aad
js
xchg
push
xchg
xchg
xor
xor
mov
aaa
pop
cmpsl
push
adc
lea
dec
test
lcall
and
xor
xchg
stos
test
sub
jnp
and
sub
pop
mov
or
dec
mov
out
shlb
ss
fucomip
adc
sbb
scas
add
cmp
into
cmp
jb
push
pminub
call
adc
mov
and
or
pop
sbb
stc
loopne
cmp
sbb
push
dec
xchg
and
clc
mov
push
dec
out
jle
movsb
pusha
inc
stos
or
or
subb
add
out
or
xorl
pop
nop
popa
adc
insl
adc
iret
dec
je
testb
jmp
sub
scas
and
mov
cltd
pop
mov
cmp
mov
insl
hlt
mov
adc
add
mov
push
mov
out
cwtl
add
or
js
push
sahf
cmp
sbb
cmp
adc
decb
and
dec
mov
cmp
jae
and
mov
mov
cmc
loop
push
test
xchg
jb
lret
bound
cmp
cmpsb
and
mov
jb
adc
sahf
shlb
cmc
loop
sti
lods
ss
out
sub
sbb
rclb
push
pop
fcoml
adc
stc
mov
jle
dec
dec
and
push
andl
repz
xchg
cwtl
or
cld
pop
sahf
imul
sbb
inc
xor
orl
sbb
shll
fisttps
mov
cmpsb
fsubl
leave
pop
xchg
jg
jmp
jg
stc
roll
inc
push
cli
dec
sub
xchg
adc
ficompl
xchg
jbe
mov
push
loopne
test
xor
bswap
mov
ljmp
shlb
pop
js
cmp
cmp
jbe
cwtl
sbb
mov
push
pop
pop
loopne
mov
das
cmc
xor
shl
sbb
sub
mov
mov
xor
jp
sahf
jnp
lods
arpl
push
add
leave
ret
lcall
jmp
push
xchg
pop
repz
jb,pt
push
movsl
ficomps
jb
adc
ljmp
outsl
or
popa
mov
dec
pop
mov
lahf
aam
or
insl
xchg
leave
mov
and
mov
adc
hlt
stos
jae
hlt
xor
or
cmc
or
add
add
out
jg
cwtl
lock
shll
mov
lock
paddq
sub
hlt
jmp
and
pop
movsb
adc
bnd
jne
push
xor
popa
add
mov
add
mov
loopne
sbb
dec
and
dec
dec
mov
mov
jmp
gs
ss
jle
cwtl
push
test
mov
adc
jb
sbb
and
and
cmp
push
mov
lret
mov
in
dec
mov
adc
popa
mov
jno
lock
or
lret
and
inc
push
sahf
cwtl
xor
push
jle
aas
or
cmp
test
icebp
cmp
inc
ljmp
push
or
inc
mov
ret
xchg
cmp
sub
lock
or
testb
lret
push
or
pop
scas
icebp
fptan
xchg
inc
rcr
push
add
or
popf
xchg
push
iret
aas
js
cmp
nop
inc
pop
jl
xor
std
push
or
xchg
pushf
push
add
inc
loop
add
scas
je
xor
dec
and
sub
cwtl
pop
mov
push
inc
cmp
lret
insb
lods
imul
push
pushf
jge
cmp
xchg
adc
lret
jg
dec
mov
lahf
dec
lcall
pop
jnp
popf
sti
add
in
cmpsl
or
adc
mov
jle
and
jae
popf
jmp
mov
or
mov
movsl
mov
mov
ja
stc
loope
mov
add
push
jle
inc
testl
xchg
sbb
aas
cmp
xorb
jge
mov
rep
mov
arpl
std
adc
dec
stos
mov
test
negl
mov
inc
cmp
jno
or
jno
or
aaa
data16
jl
mov
adc
fnstenv
ret
jo
inc
popa
adc
and
mov
sub
adc
not
mov
inc
stc
pop
aad
mov
movsb
or
stc
sbb
mov
pop
repz
ljmp
pop
adc
or
mov
lret
add
test
sub
lea
push
aam
int
andb
adc
stc
mov
or
insb
shlb
sub
mov
cli
and
pop
fistl
lock
mov
fwait
es
aad
pop
outsl
xchg
stos
push
out
test
mov
pusha
aam
loope
mov
push
cmpsl
out
mov
mov
adc
cwtl
jb
dec
and
testl
divb
adc
push
popa
xchg
xchg
test
add
sbb
xorb
shrl
jnp
sub
mov
loop
xchg
fcmove
adc
xor
insl
mov
jne
jb
mov
add
cmp
jl
test
lahf
mov
cld
add
push
pusha
insb
scas
mov
jo
push
in
loopne
scas
add
ja
mov
jle
cmpsl
test
iret
push
mov
out
jecxz
cmp
bound
pusha
imul
push
xorb
cwtl
add
pop
xchg
and
adcl
cmc
or
sbbb
inc
jecxz
jo
icebp
outsl
dec
pop
mov
jno
xor
push
sbbb
mov
inc
ret
pop
xor
js
jp
or
jmp
int
mov
sub
cmc
and
test
ja
ret
int
sub
or
jae
ja
insl
lock
aas
sub
push
test
and
xor
pop
xorb
sbb
js
aad
sub
or
into
push
jns
ret
sbb
pop
rcll
andb
mov
xor
icebp
out
and
jb
out
push
adc
out
iret
lods
jmp
shlb
xor
lcall
lock
div
fucomip
sub
mov
idivb
testl
adc
xchg
adc
xchg
stc
push
xor
push
cwtl
jne
xchg
fimuls
fcmovnb
insb
mov
cmpb
std
push
or
add
das
add
cmp
sahf
dec
nop
cld
aas
adc
scas
push
fld
xchg
fisttps
dec
xlat
mov
cli
add
and
cld
packsswb
sbb
lea
test
mov
push
xor
rcrl
xchg
mov
dec
inc
pushf
mov
pop
js
js
mov
in
stc
mov
add
xchg
add
aad
adc
fistpl
inc
fdivr
jl
jo
xor
inc
xchg
mov
sbbb
sbb
mov
mov
dec
dec
adc
xor
push
jmp
cwtl
icebp
aaa
sahf
push
les
jl,pt
dec
or
dec
pop
cltd
dec
mov
mov
ss
adc
leave
xchg
nop
fisubl
lcall
mov
int
enter
sub
pop
fisttps
je
jg
push
inc
lcall
mov
or
pusha
cmp
push
popa
mov
or
cld
xchg
and
lock
and
jo
repz
mov
jle
adc
iret
pop
and
scas
add
mov
mov
or
icebp
cmc
cli
dec
enter
adc
jo
add
adc
negb
xchg
cmp
xchg
push
lret
inc
push
pop
inc
inc
sbb
mov
sti
cmc
dec
fiaddl
aad
clc
test
push
cld
sti
lock
dec
std
add
add
jne
fs
mov
xor
sti
pop
pop
lcall
cmc
out
aam
jg
mov
sahf
cmp
jmp
adc
movsl
enter
pushf
cmpsb
sbb
sbb
sub
xor
bound
adc
xor
out
xchg
test
outsl
push
test
stc
dec
jle
jo
push
repz
sbb
int3
stc
pop
mov
cmpsl
mov
addr16
fisttpl
ret
movsl
push
jbe
jno
push
add
pop
mov
jecxz
js
jns
addl
mov
cli
xor
jmp
into
and
fwait
cwtl
test
add
jae,pt
xor
cmpb
mov
mov
bnd
mov
xchg
pop
or
adc
roll
into
or
jne
mov
popa
or
repz
cmp
hlt
int
mov
mov
inc
xchg
stc
call
xor
add
dec
cld
jp
push
jb
pop
repz
push
data16
add
jl
xchg
dec
dec
cmp
aas
or
sarl
lods
pop
dec
ss
mov
jl
mov
mov
aad
mov
push
add
insb
aam
mov
int3
jge
lret
in
adc
jl
mov
xchg
xchg
repnz
xchg
ljmp
push
cs
stos
ljmp
sub
pop
and
shll
sarl
and
dec
mov
dec
sub
dec
cmpsl
std
stc
adcl
es
xchg
mov
fildll
scas
ljmp
jns
aas
fdivs
cmpsl
push
fisttps
scas
sub
out
mov
pop
mov
sbb
arpl
clc
jle
sbb
jp
and
cmp
jg
outsl
in
stos
imul
int
adc
xlat
jo
mov
mov
push
lret
jge
add
je
add
or
dec
sub
jle
js
xchg
js
into
xchg
mov
or
add
cld
adc
dec
or
cmp
cmp
xor
lcall
dec
push
mov
sub
pop
xchg
filds
cld
std
mov
sbb
xchg
lahf
mov
jg
adc
subb
xchg
popf
push
or
jo
pop
sbb
cmp
cmp
push
enter
shl
fiaddl
cmpsb
sbb
mov
xlat
xlat
xchg
pusha
sub
jo
aaa
xchg
sbb
xor
adc
movsb
add
inc
or
inc
mov
in
inc
add
push
jge
cmp
jmp
shrb
push
cld
aaa
xchg
jl
xchg
cmpsl
in
xor
xchg
jmp
and
repnz
out
cmp
mov
xor
sub
movsl
lcall
fnstsw
sbb
mov
fiaddl
mov
xchg
nop
cmp
dec
ljmp
icebp
idivl
xchg
inc
lahf
orb
or
divb
pop
out
stc
sub
cli
xchg
and
dec
stos
adc
or
lock
das
cld
xchg
adc
mov
inc
jne
mov
pushf
cmp
cmp
mov
mov
ret
push
cmp
and
mov
sub
xchg
or
jp
mov
mov
jle
xchg
push
aas
or
sub
call
fnstcw
xchg
dec
rcrb
iret
mov
loope
xchg
xlat
cli
or
push
cld
andl
lock
xchg
mov
stos
leave
sti
mull
adcb
test
add
inc
adc
pop
cmpsl
xchg
fcoml
sti
dec
andl
std
cli
inc
lcall
andl
mov
add
outsb
fidivl
xor
or
and
cwtl
or
xor
rol
mov
or
or
in
sbb
mov
scas
mov
test
xchg
or
stos
mov
inc
lret
mov
adc
jmp
jns
jne
xor
jno
add
out
xor
je
sub
filds
inc
and
insl
jl
dec
js
jg
push
divb
in
pop
or
push
mov
and
mov
sub
dec
enter
int
sbb
fwait
adc
jge
mov
cmpsl
push
popa
jbe
das
in
xacquire
repnz
pop
cwtl
outsl
pop
outsb
xchg
push
fbld
or
scas
sub
out
gs
xor
mov
jle
int3
mov
pop
jg
jb
pushf
push
cmp
enter
and
add
adc
rcrb
cwtl
mov
fwait
mov
xlat
popa
mov
sahf
outsl
jle
pop
mov
into
inc
xchg
test
mov
sahf
pop
adc
icebp
jg
jle
in
and
adc
push
xor
jp
pop
inc
inc
adc
das
push
enter
rcrb
add
and
pop
inc
stc
mov
outsb
xor
hlt
jb
dec
adc
loope
mov
sbb
aaa
test
adc
sbbb
test
negl
cmp
jae
pusha
loop
jno
push
stos
sahf
xchg
mov
movsl
push
mov
jp
push
adc
jb
test
lock
mov
nop
mov
mov
xchg
les
ficoml
imul
sahf
aad
aaa
imul
push
loopne
xor
or
sbb
xor
sbb
sub
enter
idivb
repz
ds
xor
and
mov
jb
sub
call
mov
outsb
fistpl
cmp
or
out
push
in
hlt
aad
cmp
adcl
add
mov
sti
mov
pushf
dec
jns
pop
add
and
stc
jl
addl
or
sbb
adc
test
gs
in
andb
jb
aam
adc
dec
pop
fldcw
orl
sbb
sub
cltd
add
and
test
mov
shll
imul
xchg
stc
cmp
jns
rcll
cmpl
xor
mov
mov
adc
mov
clc
fmuls
push
or
mov
or
mov
jno
or
stos
jp
sub
xchg
mov
je
cmpl
xor
mov
and
sub
fldt
ja
lahf
jbe
scas
xor
cwtl
and
es
jbe
shl
add
jns
cmp
jp
jb
jle
sbb
scas
arpl
inc
in
sbb
jns
push
xor
jns
clc
jnp
cltd
mov
sar
mov
adc
jge
andl
out
icebp
or
sahf
lcall
scas
cmp
jae
xor
jnp
scas
in
cwtl
daa
lcall
push
js
and
push
fmuls
adc
andb
xor
out
hlt
pop
mov
inc
xchg
lret
fldenv
xchg
pop
add
add
mov
cmpb
sbb
test
dec
leave
push
cmp
inc
pop
mov
adc
pop
jp
fdiv
sub
popa
xchg
mov
xchg
insb
loope
mov
jl
aas
jl
hlt
mov
dec
fcomi
cmp
inc
gs
pop
aad
pop
xchg
and
add
push
adc
test
inc
scas
ret
fisttps
orb
mov
dec
and
or
inc
addr16
adc
fiadds
fnsave
xor
cs
test
sbbl
mov
adc
arpl
fwait
jno
out
popl
les
js
cmpsb
pop
call
lcall
xor
aam
lods
adcb
adc
add
ljmp
in
adc
adc
cmp
jecxz
insb
lock
pop
sbb
jne
mov
lock
sbb
jne
movsb
adc
add
aam
inc
pop
mov
xorb
dec
loopne
inc
je
cmp
shlb
and
or
cltd
push
vmwrite
dec
mov
dec
popf
out
aam
sahf
sbb
loopne
adc
daa
or
std
jbe
sub
cld
jo
cmp
lea
fmulp
rclb
jbe
int3
add
shlb
out
ljmp
in
sarb
cmp
aam
mov
adc
and
aas
mov
cmp
clc
adc
push
adc
mov
jmp
jb
mov
test
stc
mov
cmp
hlt
inc
sub
movsb
inc
add
xor
cltd
lds
roll
mov
cmp
loope
add
hlt
icebp
je
clc
dec
jae
repnz
call
pop
repz
je
arpl
mov
out
mov
repz
mov
cmp
sbb
mov
scas
arpl
add
or
mov
xor
adc
lcall
and
mov
push
decb
mov
aaa
ss
lea
cmpsb
push
aad
gs
cwtl
add
les
jp
sar
data16
xchg
or
cmp
popa
xchg
sub
xchg
sub
xor
icebp
pusha
lds
jp
lods
sbb
push
pusha
fsubl
sub
adc
into
sbb
add
es
push
add
stc
jle
mov
adcb
mov
std
and
ja
adcb
cltd
inc
xacquire
aas
pop
mov
push
inc
lret
inc
ds
rorb
jl
sarb
shlb
sbb
inc
mov
ret
stos
pop
xor
sub
inc
repz
sbb
sub
mov
sub
repz
xchg
mov
inc
fldt
push
mov
dec
xor
sub
sbb
cld
jnp
repz
dec
push
push
xchg
roll
sub
addr16
outsb
jb
jecxz
repnz
dec
loop
andb
pop
jl
inc
movsb
adc
push
fstl
in
insl
lods
and
test
cmp
push
adc
aaa
xor
or
push
jbe
jge
sbb
in
adc
and
out
pop
pop
dec
aam
stc
push
xchg
cmp
dec
sarl
movsb
fmuls
pop
xchg
pop
mov
jnp
test
fs
xchg
pusha
fisttps
lcall
fwait
or
cs
cmp
pop
shlb
mov
in
dec
push
cmp
xor
pop
int
cmp
mov
inc
mov
adcl
mov
mov
xor
push
cwtl
mov
xlat
cltd
and
mov
cwtl
lcall
fs
lds
xor
sbb
shlb
sub
cltd
dec
shll
mov
xor
icebp
sbb
mov
fildl
inc
jg
and
rep
sbb
sbb
xlat
aam
xor
cmp
push
sbb
push
cwtl
sarl
dec
jo
push
ljmp
xchg
out
cmpsb
push
inc
inc
js
sahf
mov
mov
cmp
sub
xor
xchg
sub
pop
adcl
mov
lcall
jo
push
call
ss
mov
sub
stc
mov
xor
inc
or
fidivrl
cmp
or
inc
jg
mov
mov
clc
dec
add
adc
jo
jo
inc
outsb
cmpsb
cmp
je
add
adc
inc
repnz
ret
inc
or
xor
xlat
call
dec
mov
mov
jb
inc
mov
push
jp
push
in
mov
cmp
jns
lea
or
pop
mov
jl
jl
sub
mov
or
lcall
hlt
push
sub
dec
push
mov
push
or
xchg
add
and
pusha
pop
sub
or
ja
or
pushf
repz
cmpsl
js
cmp
xor
jle
inc
outsl
test
dec
jg
jbe
clc
inc
ret
fdiv
mov
jns
test
rorb
sub
dec
xchg
xchg
jp
repz
mov
jbe
ret
adc
sbb
xor
lock
push
mov
or
pushf
xor
dec
popa
mov
testb
add
stos
sbb
lahf
adcb
js
out
push
sbb
stc
push
lea
push
xor
add
mov
stos
adc
cmp
mov
mov
adc
cmp
sbbb
push
cmp
jae
and
sbbl
in
loopne
pusha
je
std
jle
inc
lds
sbb
lret
subb
xchg
cmp
negb
je
xchg
jbe
xor
movsb
xor
das
aam
fidivrs
fisubl
sbb
out
mov
xor
repz
dec
xor
les
mov
sub
or
out
cmp
sub
test
pop
jbe
sub
fnstcw
jae
cmp
and
jbe
mov
pop
inc
cmp
lcall
clc
push
xor
push
or
push
stos
mov
pop
hlt
sub
ficoms
loope
cld
or
push
sub
jns
insl
roll
jecxz
push
or
mov
stc
in
cld
out
xchg
mov
sbb
pushf
scas
jb
aaa
repnz
or
mov
daa
mov
sahf
repz
push
push
dec
ss
and
jp
ficompl
es
repz
in
mov
adc
sar
xor
and
jae
lret
pop
cwtl
imul
fwait
inc
mov
cmp
mov
clc
mov
hlt
add
jae
xor
fcmovnbe
insb
add
cmp
fldcw
add
xlat
fdivrs
push
pop
mov
mov
scas
adc
jbe
inc
pop
pop
inc
jns
sarb
cmpl
aam
bound
clc
loop
inc
cmpsb
cltd
push
aad
lcall
adcl
push
sbb
and
aad
pop
adc
insl
mov
sbb
lret
out
cld
out
sti
xchg
insl
push
stc
fnstenv
xchg
fimull
fcomi
or
cli
jecxz
jge
mov
ss
or
or
lret
and
mov
mov
adc
sahf
out
aam
pop
jp
dec
insl
adc
xor
adc
stos
mov
inc
out
jae,pn
xchg
push
mov
mov
dec
ret
sub
in
out
add
cld
sbb
push
sarb
inc
leave
ljmp
pop
mov
and
dec
pop
dec
mov
lea
jg
xchg
lock
xor
lret
aas
cltd
xchg
lahf
sbb
bnd
push
adc
lock
or
mov
ficomps
out
cli
rorl
aam
out
sbbb
adc
cmp
lahf
xor
das
push
test
movsl
push
mov
push
in
sub
sbb
dec
dec
xchg
mov
mov
repz
cmp
jb
data16
mov
mov
jecxz
sbb
or
loope
jbe
test
cltd
xor
sbb
mov
lcall
insb
mov
add
inc
xchg
cwtl
stc
or
sbb
cmpsl
pop
sub
fisubrl
jbe
xchg
or
jge
popa
jmp
dec
aas
les
and
ljmp
mov
adc
icebp
scas
sbb
push
std
iret
out
int3
aad
into
jno
aam
inc
jle
addr16
xchg
lds
push
enter
rcr
sbb
das
push
fadds
leave
jg
hlt
inc
or
sbb
sbb
jo
lahf
adc
idivb
scas
lret
pop
pusha
dec
xor
mov
ds
stos
adc
add
adc
cmp
rclb
add
xor
out
push
and
cmp
pushf
lock
scas
and
int3
imul
mov
sbb
sarb
sub
xor
jge
xchg
mov
inc
sbb
pop
je
jl
shrl
mov
lds
sar
rcll
sti
test
negl
cmp
int3
inc
das
xor
jg
icebp
pop
jp
or
insl
std
pop
jg
pop
or
aas
add
les
xchg
pop
sub
jno
inc
jns
imul
aad
sbb
fcmovbe
add
jl
dec
fmul
dec
mov
cmp
leave
inc
loop
std
cwtl
jl
stos
shlb
mov
repnz
cmp
jg
cmp
pop
sbb
mov
mov
fstpl
cmc
xchg
jmp
test
into
cli
push
into
outsb
sub
pop
arpl
pusha
lea
add
jle
adc
add
and
cmp
mov
ret
out
fistpl
orl
aaa
sub
pop
ja
test
jno
icebp
sbb
push
jmp
cli
addb
dec
cmp
popf
testl
pop
or
aad
adc
js
lods
int3
lock
je
fnstsw
insb
outsb
repz
xchg
push
sub
sti
sbbb
mov
sbb
ds
out
loope
push
sub
xor
jo
clc
lret
pop
push
loop
pop
sbb
xor
mov
divl
cmp
mov
xor
cmp
pop
repz
inc
call
mov
scas
xchg
repz
scas
clc
popf
push
inc
mov
popf
push
repz
icebp
jb
repnz
clc
sahf
js
repz
sbb
jno
jecxz
jo
repnz
cmp
stc
or
mov
mov
sub
cmp
jp
clc
jge
icebp
jno
ret
cmp
sub
stc
pop
rorb
push
mov
pop
cld
add
push
xchg
mov
and
int3
xchg
jle
inc
jb
push
out
jp
imul
push
mov
add
cmp
pop
sahf
mov
nopl
cmp
add
mulb
mov
je
iret
push
push
xchg
mov
and
cwtl
pop
cli
dec
cld
mov
sbb
push
cmpsl
cmp
and
clc
cmp
mov
push
or
ret
sub
fcoml
fcompl
dec
js
cmc
jecxz
adc
sub
in
gs
das
mov
jmp
mov
add
fwait
dec
cmc
mov
cwtl
cmp
shl
pop
push
push
mov
pushf
cld
push
scas
push
xchg
movsb
dec
jmp
cmp
daa
js
subb
xor
aas
test
sahf
lock
cmc
lret
push
mov
sbb
pop
inc
pop
rcrb
hlt
push
cmpsl
pop
testl
insl
mov
dec
mov
jbe
cmc
mov
inc
cmp
lock
mov
lar
mov
cwtl
inc
movsl
mov
arpl
sub
mov
stos
mov
cli
sbb
sbb
push
cmpsl
fyl2xp1
mov
xor
repz
jne
mov
sti
cld
add
jmp
cmp
dec
adc
fisubs
jnp
cli
aaa
dec
pop
xor
sbb
add
mov
xchg
mov
adc
mov
stos
stc
dec
cwtl
xor
leave
mov
andb
adc
fwait
fs
jne
out
push
fsubrp
xor
ja
pop
jl
sti
push
test
inc
xchg
inc
nop
loop
sti
es
hlt
push
mov
jnp
add
jmp
cmp
adc
fisubs
and
notl
loope
pop
popf
dec
jae
mov
cmp
cmp
js
lret
js
cld
subb
xor
insb
ja
outsl
adc
xchg
mov
data16
mov
out
xor
clc
sarb
loop
dec
adc
in
add
outsl
push
mov
mov
sub
dec
ficoml
js
mov
add
std
mov
je
sbb
aad
andb
adc
mov
test
push
xchg
cmp
clc
mov
or
in
jg
xor
repz
push
mov
push
aas
out
push
icebp
dec
jp
or
jp
adc
fisubs
jg
aaa
dec
pop
xor
dec
out
pop
std
sbb
mull
aam
stc
push
cmpsl
jo
js
ret
push
adc
mov
xchg
es
lock
add
push
ljmp
and
aam
hlt
push
adc
call
or
xchg
inc
push
xchg
mov
mov
or
out
mov
adc
ja
xor
xor
and
push
iret
cmp
divl
enter
pusha
in
repnz
iret
aam
mov
push
dec
imul
xchg
push
push
mov
stos
and
repz
push
imul
dec
jl
dec
stos
lcall
inc
pop
cltd
push
and
fidivrl
and
dec
fistl
jae
mov
push
pminsw
mov
pop
fisubrs
sqrtps
xor
fimull
hlt
jbe
or
sbbl
xor
test
xchg
inc
rcrb
or
xchg
xor
adc
sub
jl
mov
adc
leave
xor
pop
cmp
lods
aas
cmp
jg
jnp
fidivs
mov
std
mov
clc
sub
lret
jne
mov
mov
hlt
test
mov
and
in
shr
jnp
test
mov
clc
dec
shll
cmp
lock
inc
or
mov
in
dec
pop
mov
sahf
icebp
clc
fcmovu
imulb
mov
and
ret
adc
repz
mov
test
lock
js
push
dec
adc
push
xchg
js
push
or
adc
dec
adc
rcll
lock
push
enter
std
mov
adc
inc
add
fprem
lret
inc
push
icebp
testl
jno
add
xchg
add
mov
mov
fdivs
rcll
add
push
cmc
adcl
push
adc
adc
or
xor
xor
add
loopne
push
cmp
cmp
or
cmpsl
mov
clc
cmp
pop
jne
push
sub
adc
sbb
in
repz
pop
icebp
ss
repz
or
dec
mov
sbb
push
push
popa
outsb
or
xchg
sti
sbb
bound
sarl
mov
pop
insb
push
push
push
or
push
hlt
mov
jle
xor
sub
hlt
push
or
mov
fimull
sarl
arpl
adc
adc
jnp
outsl
push
xchg
jge
loopne
jl
pop
insb
push
jl
stc
in
jl
push
sub
jbe
orb
enter
mov
test
xchg
cmc
cld
cmc
cmp
xchg
idivl
test
inc
adc
aam
idivl
sub
xor
jno
mov
jp
or
test
or
nop
push
addr16
sub
roll
in
and
mov
gs
insb
decl
adc
mov
fdivs
inc
cmpsb
sub
rcr
insb
push
cmp
icebp
adc
fildl
or
and
test
cmpsl
mov
add
pop
pop
mov
push
mov
mov
mov
or
jo
xor
fidivrl
dec
iret
mov
inc
fldenv
mov
dec
icebp
xor
jne
fstl
add
jle
xchg
add
shl
add
pushf
gs
push
icebp
in
mov
inc
mov
dec
pop
mov
jb
cld
add
jmp
pop
roll
rclb
adcb
inc
jmp
and
mov
or
and
sahf
pushf
fneni(8087
mov
dec
fwait
mov
subl
jg
in
push
mov
or
or
add
or
lahf
mov
cld
add
or
jmp
addl
cwtl
adc
xor
lock
or
mul
sbb
sub
je
icebp
bound
dec
lahf
dec
add
cwtl
adc
lea
pop
xor
xor
xchg
sahf
ja
int
loop
lret
mov
or
xlat
lret
bound
shll
jb
xchg
and
inc
cwtl
std
pop
out
mov
in
rol
scas
adc
int
jmp
pop
stc
loopne
jno
into
push
push
bound
addr16
mov
leave
mov
adc
mov
pop
jb
push
fiaddl
or
cwtl
repnz
add
jecxz
push
cmp
or
push
xor
fildl
mull
repz
out
cwtl
icebp
stos
and
mov
adc
fimull
adc
adc
test
or
mov
jae
cmp
jne
mov
mov
in
mov
dec
daa
xor
jle
mov
jnp
test
addr16
xor
ficomps
lahf
mov
pop
sbb
jecxz
incb
xchg
sbb
vmread
in
inc
add
repz
jbe
orl
jmpw
cmp
pop
jle
cmp
pop
xchg
xor
cwtl
icebp
sbb
jo
cmp
in
sub
into
mov
jne
shl
push
sbb
fsubl
and
push
out
jb
pusha
mov
sub
idiv
in
mov
adc
cmp
push
sbb
gs
ret
jno
mov
mov
jno
clc
dec
scas
push
loop
xor
xchg
loop
out
push
pop
jae
lcall
fdivrl
repnz
inc
jae
repnz
mov
movsl
ja
or
push
test
xchg
cmc
neg
shlb
adc
xor
cmp
inc
push
mov
push
nop
mov
aas
hlt
test
or
and
cmp
mov
stos
mov
clc
pop
and
xchg
int
jno
inc
fadd
xchg
jmp
adcl
or
cltd
jmp
xchg
mov
lock
decl
daa
inc
pop
fwait
rolb
sbb
pop
js
add
int
cmp
jb
sbb
and
rcrb
xor
push
mov
ja
xor
xchg
xor
mov
mov
cmpsb
and
adc
xchg
sahf
inc
fwait
dec
mov
adc
fisttpl
pop
and
xor
jne
ja
adc
clc
in
mov
jmp
jne
jbe
xchg
clc
pop
xchg
lretw
inc
xor
xchg
ljmp
lahf
xor
cmp
sbb
adc
inc
fnstcw
mov
nop
inc
jle
xor
addr16
leave
dec
mov
jnp
jae
jl
fstl
push
aad
xor
cld
mov
sti
js
pusha
sbb
or
adc
stc
dec
ficoms
mov
inc
mov
or
mov
jge
mov
pop
sahf
sbb
pop
cld
lock
fwait
test
insl
loope
xchg
or
and
addb
adc
sahf
pop
pop
adc
adc
sbbb
imul
push
loope
out
mov
andl
popa
jmp
scas
cmp
lea
pop
jb
xchg
push
lahf
jge
pop
add
les
aas
lcall
fldcw
enter
insb
aam
mov
iret
mov
mov
popa
in
sub
pop
push
stc
je
mov
push
jno
mov
push
adc
xchg
dec
jl
dec
pop
shrb
mov
jecxz
shl
mov
sbb
xchg
icebp
dec
push
cltd
sub
push
pop
mov
adc
cmp
add
je
and
pop
daa
ret
ret
dec
xchg
filds
cmpsl
or
icebp
xchg
gs
cmp
mov
push
loope
cmpl
inc
mov
or
sub
iret
ja
icebp
jae
push
jg
insl
jno
jbe
dec
dec
scas
arpl
pop
in
xchg
scas
adc
repnz
and
lock
and
sti
xlat
add
loop
cwtl
push
bound
loop
daa
jle
adc
xor
mov
adcl
adcl
xchg
mov
mov
sub
xchg
int3
pop
add
mov
add
mov
jns
imul
jae
into
stos
pop
cmp
mov
mov
jb
add
mov
pop
mov
push
mov
lahf
shrb
icebp
hlt
mov
cltd
pop
dec
stos
mov
clc
out
cld
push
jo
mov
inc
xor
pop
mov
arpl
js
test
add
ja
xchg
fbld
fwait
xchg
mov
xor
jbe
mov
add
pop
gs
ljmp
inc
mov
cwtl
in
and
popf
jno
pop
sub
je
rcrb
or
int3
mov
js
xchg
fcmove
imul
gs
mov
push
fwait
or
jno
cmp
cmp
loope
sbb
cmp
xor
dec
inc
mov
jbe
mov
or
rcll
jo
add
mov
cmp
loopne
mov
pop
xor
test
xlat
adc
push
cs
push
aaa
out
mov
jno
in
mov
dec
cmc
sub
adc
pop
repnz
mov
mov
jge
mov
jne
shlb
cmp
movsb
dec
lret
idivl
sub
imul
push
lahf
enter
imul
xlat
mov
int
or
push
adc
fadds
test
push
or
repz
sahf
imul
jle
xchg
movsl
out
inc
add
add
jle
icebp
je
outsl
push
call
sahf
scas
jne
rclb
lock
dec
mov
push
pop
popa
cmp
divb
ret
cmp
shll
pop
ficompl
mov
cmp
mov
jl
nop
dec
or
fimull
cltd
fdivrs
cmp
daa
mov
call
mov
or
or
jno
ret
cld
jo
pop
test
ret
rclb
lret
add
test
jns
mov
mov
cli
push
mov
loope
add
adc
pop
decl
and
adc
insl
aam
outsb
xor
and
and
and
adc
xchg
push
and
stc
push
das
fcmove
ds
pop
aad
jbe
inc
mov
nop
dec
push
dec
pop
fimull
aaa
cwtl
lds
push
shrb
or
inc
int3
xchg
stos
test
sarb
cli
test
pop
sub
mov
adc
jne
lock
jle
cmpsl
test
rep
inc
mov
sub
rorb
or
add
dec
pop
push
jg
xor
mov
xlat
mov
sbb
sbb
lahf
pop
and
out
pop
pop
out
and
pop
in
sbb
sub
ja
cmp
cmp
inc
cltd
sbb
loopne
and
mov
je
ja
pop
xor
jno
push
adc
pop
xor
xchg
jg
dec
sbb
fwait
adcb
js
jle
dec
mov
xor
mov
je,pt
loop
out
je
adc
push
mov
xchg
inc
pop
push
jb
cmp
test
sub
dec
xchg
fnstcw
and
xor
or
orl
repnz
ja
ret
inc
push
inc
pop
icebp
movsb
aaa
test
scas
or
adc
xchg
jb
add
fildl
repz
cmp
std
jbe
neg
or
inc
movsb
pop
into
icebp
cmp
cli
mov
jg
add
sub
push
call
push
je
push
jle
push
pop
rolb
shrl
inc
jb
sub
insb
sub
test
mov
jo
jle
add
pusha
sub
xchg
add
stos
xchg
or
push
or
xor
pusha
inc
pop
jo
ja
insl
mov
movsb
mov
push
clc
pop
push
jmp
pop
xor
xor
jg
xor
lret
int
dec
sarl
push
push
popa
shlb
aam
inc
sahf
sub
aas
lods
rsqrtps
sbb
mov
negb
pop
add
inc
or
pop
stc
push
jle
or
push
insl
sbb
inc
scas
cmp
les
mov
jns
mov
add
push
xor
pop
mov
push
pop
rcll
sahf
jno
mov
jbe
mov
popa
fnstenv
test
add
mov
xchg
lret
testl
xor
push
pop
xchg
fldenv
inc
pop
cmp
adc
push
dec
push
icebp
mov
cmp
pop
clc
cmp
sbb
test
mov
inc
jns
repnz
ja
pop
mov
fisubs
pop
repnz
jno
icebp
or
iret
rol
movsl
adc
repnz
popa
repz
jb
xor
sub
xchg
mov
out
je
stc
test
test
divb
call
cmp
push
adc
jg
mov
and
add
sbb
sbb
not
add
jno
push
lods
sahf
mov
xor
repnz
mov
or
subb
fdiv
je
sbb
loope
insl
lahf
inc
fnstenv
test
push
leave
insb
cmp
adc
jmp
sbb
fcmovbe
ficompl
pop
mov
lock
pop
fnstsw
inc
fcmovnb
cmp
mov
pop
shl
loopne
out
cmc
fdivrl
lods
sahf
and
adc
push
fidivs
cmp
mov
jns
fcoms
mov
lods
lods
test
mov
mov
push
hlt
mov
lahf
inc
push
stos
sti
adcb
lock
mov
jmp
xlat
push
push
out
jl
jbe
ret
call
adc
sbb
test
dec
jl
push
rorb
jp
mov
cmp
push
mov
pop
scas
testl
push
adc
sbb
in
dec
sahf
xchg
cmp
jno
fimull
clc
push
adc
subb
push
or
add
pop
lods
test
mov
bswap
or
adc
lcall
sbb
in
rol
xor
xor
jle
mov
stc
shlb
jmp
jne
inc
dec
push
add
dec
dec
xor
adc
add
or
lock
jg
pop
dec
int
cld
mov
or
mov
mov
dec
sub
movsl
mov
cmp
or
or
jo
stc
idivl
mov
jle
sbb
cmp
js
add
push
dec
ds
scas
dec
in
stos
js
sahf
xchg
stc
cld
push
popa
fistpll
jne
add
cmp
cmc
aad
push
push
fbstp
mov
popa
add
mov
insl
cmp
sbb
xor
or
hlt
es
inc
or
pop
pop
cltd
push
fidivl
imul
or
jnp
shl
subb
pop
cmc
test
lcall
xor
cmp
rcrb
push
xchg
xor
out
sahf
test
jle
clc
test
sbb
das
mov
out
add
cmp
push
sbb
iret
dec
jge
movsb
push
inc
hlt
xchg
inc
out
xor
push
testl
pop
add
add
jmp
mov
xor
negl
jne
mov
mov
xor
or
xchg
cmpsl
ds
xchg
mov
insb
scas
iret
or
xchg
pop
ficomps
sbb
nop
bound
sub
pop
repz
jns
pop
ja
cli
negb
fcmovne
in
imulb
pop
movsl
fcmovb
mull
test
jl
hlt
sahf
pop
sarl
mov
inc
xchg
clc
clc
xchg
je
sub
cmp
adc
test
out
jle
stc
mov
mov
push
jbe
fs
ljmp
cld
clc
xor
jb
sbb
push
inc
add
add
mov
or
addr16
or
sbb
fiaddl
jb
lods
bnd
mov
jb
ja
cmpsb
cld
orb
hlt
mov
cmc
cwtl
jl
cmp
stc
xchg
xor
fs
push
push
imul
add
sbb
test
xor
xchg
and
ljmp
cltd
cmc
xchg
sub
jle
fucom
sub
lock
mov
push
sbb
insl
mov
cmp
or
hlt
sti
jno
lret
fadds
sub
dec
mov
mov
leave
push
xchg
mov
icebp
cmpsb
jle
sub
rolb
push
xchg
jle
insb
mov
dec
or
push
xchg
jecxz
lahf
xor
jb
sbb
add
push
push
inc
ret
xor
pusha
mov
mov
mov
mov
add
mov
mov
and
mov
popa
mov
out
and
xor
stc
add
push
and
sub
inc
mov
lret
adc
xor
adc
mov
ja
in
std
pop
cli
xchg
inc
xor
mov
out
push
rclb
sti
and
add
idivb
pusha
jl
hlt
jle
add
mov
adc
aaa
jg
mov
sarb
sahf
push
es
mov
mov
sub
jo
inc
add
xchg
jle
cld
pop
mov
or
cld
mov
inc
lcall
fisubs
pushf
and
jp
mov
scas
pop
mov
out
sbb
mov
aad
pop
push
outsb
pushf
lock
push
xchg
push
pusha
push
mov
out
or
xor
jle
popa
clc
gs
out
pop
dec
or
mov
xor
push
nop
sarb
mov
ja
fs
and
out
jmp
out
mov
xchg
clc
iret
mov
int3
aaa
in
shlb
cwtl
cld
or
xlat
inc
push
xchg
pop
pop
xchg
mov
pop
jl
adc
out
int3
out
jne
xor
insl
adc
pop
dec
inc
adc
sub
fcomi
fs
dec
inc
mov
mov
imul
jge
pusha
hlt
lahf
lock
adc
fisttpl
mov
int
xchg
cld
js
jne
das
add
xor
sbb
aad
mov
lahf
test
push
and
cmp
xchg
mov
add
inc
nop
push
sub
pop
lcall
cltd
dec
icebp
rolb
pop
xchg
sub
ret
mov
orb
fyl2x
cmp
and
sbb
mov
pop
jb
hlt
adc
testl
js
stc
or
mov
push
or
mov
push
push
stos
push
jge
adc
icebp
xchg
jno
lods
xor
cmpb
mov
daa
pop
negl
jge
push
and
pop
adc
adc
lcall
push
or
outsb
stos
fistl
ja
lods
xchg
jo
addr16
int
mov
loop
data16
push
lock
testl
push
mov
dec
xor
rcrl
or
sbb
lock
xor
imull
jle
mov
xor
and
xchg
xor
fsubs
adc
fistl
test
pop
notl
xchg
aam
sbb
and
dec
fcmovnu
das
test
mov
divb
hlt
jg
adc
dec
xchg
jbe
mov
arpl
cmp
xor
enter
cmp
dec
dec
jp
pop
test
pop
sbb
add
lea
jg
fs
pop
xor
cmc
or
imul
or
stc
jae
cs
outsl
or
and
hlt
fiadds
cmp
jl
repz
inc
rorb
pop
xchg
jns
cmp
jl
dec
mov
mov
lret
ficomps
stc
sbbb
neg
sbb
sarl
mov
inc
leave
repnz
cld
adc
jns
mov
push
stos
adc
adc
sub
cmp
stos
das
shlb
pop
jo
out
push
movsb
iret
stos
mov
or
pop
je
lcall
sbb
notl
add
pop
xchg
sbb
test
inc
xor
jmp
adc
and
fstps
xchg
or
divl
sbb
mov
inc
mov
scas
sti
test
adc
lea
jp
sub
icebp
xchg
sahf
adc
add
mull
sbb
sbb
repz
cmp
cmp
pop
mov
mov
adcb
outsl
popa
mov
aam
iret
popa
mov
or
jle
sbb
lods
xorb
add
cmc
inc
fldt
cmp
mov
bound
pusha
lea
xor
mov
xchg
mov
inc
stos
gs
pop
xor
inc
mov
jne
outsl
adc
mov
aad
sbb
push
pop
pop
fwait
lahf
and
fucom
dec
mov
ja
or
mov
hlt
insl
int
out
jno
mov
push
jb
icebp
mov
pop
xchg
adc
add
in
sbb
xlat
jne
mov
mov
div
pop
or
movsl
cmp
jno
pop
xchg
jae
movsl
repz
mov
repz
xlat
jbe
dec
xchg
and
cld
sbb
cmpb
inc
out
mov
testb
mov
pop
icebp
push
xchg
add
nop
imul
stc
push
std
mov
or
or
inc
orb
lcall
fiaddl
lock
lret
cmp
cmp
mov
call
mov
xchg
dec
out
adc
clc
cmp
push
jns
scas
shll
cmp
jns
stc
repz
adc
stos
aam
add
jne
adc
sti
xor
push
and
cwtl
hlt
clc
xchg
orb
jno
inc
test
push
jp
in
testl
xchg
ja
das
mov
lahf
pop
pop
fmull
xchg
push
xor
sbb
sub
ss
aas
xor
mov
test
jl
int3
cmpl
xchg
cmp
lret
andl
or
lahf
push
les
divl
enter
dec
mov
push
xchg
std
xchg
push
cs
push
mov
je
add
hlt
pop
mov
aaa
xor
mov
cmp
mov
mov
mov
xor
test
cmp
xchg
sahf
addb
mov
test
js
sbb
movsl
mov
pop
jmp
pop
out
in
in
ss
aad
dec
cmp
xor
pop
lock
mov
outsb
into
jmp
and
sub
push
stos
call
mov
inc
cmp
sbbl
and
cli
lea
mov
jp
pop
insb
inc
push
add
dec
stos
inc
pop
js
lahf
test
aaa
pop
xor
stc
mov
sahf
roll
and
or
insl
xchg
stos
inc
in
adc
test
mov
gs
push
mov
dec
inc
sarl
pop
jp
xchg
jb
adc
push
pop
xchg
popa
shrl
lret
fadds
pop
sub
xchg
imul
pop
dec
cmp
push
dec
pop
mov
div
loop
popf
mov
call
repz
je
inc
cli
mov
sbb
in
int3
or
cwtl
pop
test
mov
xchg
and
cmpsl
prefetch
cmp
subl
or
mov
sbb
add
out
cltd
pusha
or
leave
inc
push
push
pop
push
mov
mov
pushf
jo
cmpsl
les
pushf
push
push
pop
jmp
jp
sbb
fwait
jmp
test
adc
pop
data16
repz
out
into
dec
cmpsb
or
rol
cmp
xchg
lret
add
cmp
lock
shrd
pop
fnsave
stc
repz
jns
shll
or
stos
push
inc
and
iret
mov
pusha
out
or
push
js
cmp
push
mov
or
push
ret
cmp
cmp
mov
jg
xchg
div
mov
sahf
mov
scas
push
mov
or
push
bnd
pop
pop
cmp
stos
shlb
sti
lds
dec
repnz
clc
mov
mov
sbb
jbe
xor
mov
mov
jo
jge
repnz
mov
int
cmp
sbb
sub
mov
aad
dec
repz
nop
nop
mov
flds
push
dec
jl
addr16
daa
stos
and
inc
sbb
cmc
aaa
std
in
aam
jmp
xchg
cmpsl
push
scas
sbb
repz
push
push
mov
and
stos
repnz
fiaddl
mov
cmp
add
loope
sbb
sbb
push
sbb
mov
hlt
out
lret
jbe
in
and
mov
jl
xor
std
scas
add
popf
push
jle
test
fimull
pop
outsb
lahf
mov
int
mov
loop
pusha
aaa
adc
dec
or
inc
into
pop
mov
cmp
ss
dec
xchg
testb
icebp
fisttpl
add
sbb
sub
repz
and
mov
and
mov
mov
popa
xor
cmp
xchg
lock
xchg
pushf
add
lret
push
and
mov
mov
mov
or
push
outsb
push
cmp
adc
push
lret
ss
out
bound
shlb
and
movsb
ficomps
in
cld
and
inc
into
cmpsl
jnp
or
imul
cmp
fwait
jecxz
ds
jb
jle
std
inc
notl
inc
mov
sub
dec
jle
mov
in
leave
or
mov
pushf
lahf
pop
mov
cmc
cmp
lock
fstpl
aad
sbb
stos
xor
lahf
sub
sub
pop
sub
xor
or
std
adc
mov
sbb
cmp
mov
clc
adc
inc
mov
jne
sub
andl
mov
fidivs
movsl
pop
inc
xor
es
test
pop
mov
mov
scas
jne
imul
pop
push
and
jns
mov
lea
lret
test
sbb
or
ret
iret
push
dec
push
subl
push
dec
fwait
inc
aas
std
fwait
mov
jg
bound
cs
add
push
gs
cmp
mov
add
into
loope
ror
clc
sbb
pop
repnz
imulb
jg
mov
fisubrl
int
mov
xorb
sbb
xchg
cltd
cltd
outsl
ficompl
in
imul
mov
adc
inc
jnp
cmp
xchg
lcall
repnz
hlt
nop
outsl
js
push
cmp
push
add
pop
mov
leave
adc
aaa
push
aaa
jl
mov
and
cmc
lcall
fistl
jo
testb
fbld
divl
cmp
jae
filds
daa
addr16
sbbl
mov
pop
lret
iret
lea
mov
ds
bswap
jnp
cmc
sahf
cmpsb
pop
aam
xor
pop
jbe
or
push
push
pop
mov
mov
xchg
mov
jle
mov
jnp
nop
or
dec
in
inc
clc
adcb
insl
push
cld
shlb
sbb
fwait
mov
xor
das
cmp
xor
shrl
cmp
pop
repnz
out
pop
cmc
test
lds
add
sbb
mov
add
push
inc
inc
repz
push
cld
sbb
out
sub
xor
xchg
hlt
add
hlt
mov
jl
xor
out
clc
icebp
jbe
xchg
add
lock
lock
mov
add
stc
mov
add
notl
cli
mov
jnp
repz
lea
jl
lock
bnd
std
lock
jae
jecxz
cmp
icebp
cmpb
insl
insb
stc
icebp
sbb
lock
and
add
add
cmp
jno
and
repnz
repnz
adc
cmpb
andl
xchg
xorl
push
pop
xor
adc
push
and
or
mov
adc
arpl
popf
mov
outsl
jmp
mov
or
ret
xchg
jno
or
fcompl
lret
stc
mov
sub
nop
push
mov
mov
sahf
lock
cld
mov
mov
jle
das
xchg
repz
cmpsl
sbb
inc
leave
out
clc
ds
mov
xchg
cld
add
push
push
addr16
add
or
jns
xchg
outsl
push
xchg
ret
inc
aas
add
lods
push
scas
or
fs
cmp
clc
ret
add
sbb
std
mov
jle
xor
mov
lock
jo
jne
sub
icebp
repnz
mov
xor
and
add
aas
adc
dec
call
xor
sahf
aaa
sti
cwtl
and
or
roll
pop
movsb
pop
and
inc
jo
mov
push
push
das
mov
lock
divb
stos
push
dec
hlt
jp
adc
cmc
cmp
jbe
xor
inc
filds
das
jae
cmp
pop
in
add
add
pop
mov
clc
dec
insb
ja
ds
xlat
add
push
call
loopne
jne
js
fdivs
out
jno
cmpb
adc
js
pop
stc
xchg
mov
cmpl
add
mov
adc
mov
jns
repnz
clc
mov
loope
and
imul
sbb
push
jnp
xchg
dec
add
mov
sbb
flds
push
shl
push
adc
rorl
and
rcrl
adc
rcll
mov
andb
mov
cmc
or
pop
xor
sbb
add
hlt
pop
push
inc
lock
negl
out
jae
test
in
lret
jle
push
jnp
lock
add
add
cld
push
sbbl
push
pop
notb
or
mov
repz
bnd
lock
cmc
jge
pop
dec
sti
stos
jae
jp
adc
xchg
inc
shlb
adc
jmp
leave
loope
and
mov
adc
mov
ljmp
jae
orb
test
out
adc
pop
orb
ss
adc
inc
leave
sti
sbb
addr16
lods
push
leave
dec
lahf
sarl
sbb
test
jge
inc
jle
jge
adc
inc
sbbl
dec
notb
mov
adc
imul
xor
jecxz
sub
cmp
fisubs
adc
pop
jp
xchg
or
repnz
clc
mov
cmp
sbb
div
cli
dec
popf
rclb
sti
hlt
test
mov
cld
mov
popf
add
xor
popf
jae
xorl
push
and
adc
mov
lea
mov
adc
pop
stc
sub
lock
icebp
add
andb
jg
adc
sub
loope
add
stc
lcall
add
adcb
jg
daa
stc
mov
popf
jb
lock
mov
popf
test
and
jmp
icebp
cmp
or
ja
out
push
insb
call
shll
out
mov
pop
inc
pop
cwtl
ret
and
nop
push
lret
cmpb
jae
icebp
hlt
lret
test
pop
es
mov
sub
int
sti
sbb
aam
push
jne
inc
in
js
dec
xchg
sub
mov
ljmp
dec
pop
lock
cmp
adc
dec
mov
dec
ret
dec
xor
sub
ficompl
aad
loop
dec
xor
lock
xchg
stos
pop
jne
and
aad
rolb
or
lcall
xor
scas
test
jecxz
or
nop
shl
adc
arpl
push
dec
lcall
mov
mov
mov
cmc
cld
mov
mov
jne
loop
mov
xchg
mov
xchg
rorl
loop
mov
in
fwait
jno
mov
or
fidivl
sub
sbb
lea
cs
out
cmp
ljmp
xor
cmpb
sar
cmovae
je
movsb
mov
jg
repz
aad
sbb
push
cmpsb
rcrl
mov
cld
or
loope
jno
sti
mov
cmp
push
aad
xlat
xchg
pusha
insb
or
mov
daa
xchg
jl
mov
lea
or
icebp
sbb
inc
fdivrl
push
push
pop
pusha
mov
push
iret
add
or
shlb
repz
repz
ds
insl
ss
xor
insl
out
push
mov
xchg
push
dec
addb
pop
cli
push
into
add
jp
sbb
loop
icebp
and
xorb
dec
pop
dec
loope
add
rolb
imul
cli
test
xchg
ljmp
std
push
adc
repnz
stc
sbb
aad
frstor
and
mov
or
inc
jp
enter
and
lcall
cwtl
pop
ss
repnz
dec
xchg
aad
adc
fcoml
sbb
fistpl
or
lcall
ja
xchg
fildll
idivl
mov
scas
ds
mov
loope
add
dec
icebp
aad
push
fiaddl
mov
dec
mov
insb
pop
adc
cmp
or
mov
sub
add
sbb
push
sub
loopne
dec
add
lret
ja
jl
hlt
lock
test
incb
inc
add
xchg
in
inc
mov
mov
xor
stc
inc
out
jno
xchg
mov
lret
int3
jns
out
inc
ljmp
lock
pop
mov
test
enter
cmp
scas
adc
adc
or
test
cmp
mov
jbe
sub
pop
add
loop
xor
repz
cmpsl
fmuls
pushf
mov
mov
xor
cmovno
add
aaa
jo
ds
mov
shlb
daa
pop
ror
icebp
psubd
or
in
pop
and
lcall
dec
sub
ljmp
dec
or
sub
or
ljmp
in
push
mov
xor
and
int
loope
iret
mov
cmp
push
icebp
insl
xor
push
pushf
cmp
mov
push
mov
jmp
daa
mov
cs
fmuls
mov
xor
clc
jmp
jae
repz
mov
xchg
or
mov
cmp
cmp
jno
add
sbb
and
xchg
mov
push
xchg
stc
push
cmpsb
xchg
pop
inc
xchg
out
and
dec
xchg
roll
out
push
ja
pop
stos
popa
add
adc
add
sub
and
fwait
shll
mov
bound
je
mov
xlat
fisttpll
xchg
mov
rclb
pop
push
mov
iret
shlb
sahf
or
pop
daa
insl
and
sahf
push
push
or
cs
rorb
daa
clc
xchg
loope
push
xor
add
mov
xor
and
mov
push
mov
pop
call
mov
jae
pop
popa
push
push
enter
loop
or
jnp
pop
jno
dec
adc
mov
mov
xlat
icebp
hlt
int3
sti
dec
repnz
and
orl
pop
lcall
xchg
xor
es
mov
mov
jb
jnp
pop
lret
or
test
push
adc
jg
cmp
sub
mov
lcall
mov
cmc
mov
cli
loope
jp
out
jo
repz
push
rorb
lock
cmp
mov
jo
jl
adc
movsb
jle
xchg
adc
pop
sbb
xor
aad
inc
or
xor
mov
jno
and
pop
xchg
cltd
sbb
stos
je
jb
or
mov
inc
das
lock
stos
xor
lds
and
cli
cmc
call
xor
cmpb
jno
fists
outsb
xor
add
repz
popa
adc
je
clc
popf
insb
stc
popa
mov
arpl
out
sti
jge
adc
fdivrp
std
call
dec
add
sub
push
cli
xchg
cli
aam
int
stc
call
xor
mov
js
jl
je
outsl
test
lods
xlat
iret
ljmp
insl
je
int
add
icebp
push
test
adc
into
push
sarl
push
test
dec
mov
imul
pop
mov
cmp
mov
test
rcr
mov
xor
test
pusha
mov
mov
push
fwait
in
sbb
mov
daa
push
and
lcall
aad
cmpsl
push
pop
loope
add
push
jo
divl
imul
nop
mov
or
adc
mov
xor
fldenv
xchg
mov
cmp
dec
aad
jecxz
mov
mov
dec
out
stc
pop
sub
dec
mulb
inc
sbb
or
pop
int
add
mov
mov
js
inc
fcoms
push
sub
push
shl
xchg
adc
cmp
movsb
lret
mov
jle
or
mov
sub
inc
xchg
lcall
xchg
jo
cmp
dec
mov
sbb
fsubl
icebp
push
repnz
push
in
clc
pop
jg
test
sbb
dec
fidivrl
xor
roll
sbb
movsb
mov
shll
movsl
push
fiadds
cmp
jno
stos
nop
mov
mov
mov
pop
out
add
and
cmpsl
add
scas
dec
inc
cmc
pop
jge
push
stc
xchg
lock
xor
jge
and
imul
mov
pusha
lret
vpunpckhqdq
inc
and
and
ret
lahf
js
adc
sbb
frstor
imul
inc
std
sub
pusha
lods
adc
cmpsl
xlat
popa
mov
jb
jo
lret
arpl
mov
xor
into
push
mov
sub
or
movsl
xchg
sbb
inc
sbb
adc
mov
nop
adc
mov
repnz
pop
test
repz
mov
lock
xor
xor
sti
ds
mov
popa
rorb
das
mov
je
mov
fcoms
les
adc
mov
push
and
inc
and
mov
sub
push
mov
xor
sbb
sahf
aam
shlb
add
mov
xor
add
sub
jae
mov
das
mov
xchg
clc
xchg
pop
fdivl
test
jo
push
or
and
sub
outsl
or
sahf
sbb
jb
fbstp
cmp
je
nop
push
into
cwtl
push
test
jns
insb
in
mov
out
cmp
add
mov
dec
push
ss
rcrb
xor
or
inc
lods
ficompl
roll
cltd
arpl
xor
jbe
xor
test
sub
jo
push
ficoms
imul
jne
lea
negb
mov
inc
fnstenv
in
xor
sub
jb
or
sbb
pusha
sub
jae
pop
subb
shrb
movsb
push
in
inc
cwtl
dec
mov
and
not
inc
fidivs
loopne
into
popl
and
xchg
repz
test
mov
lcall
xor
aam
pop
std
jbe
mov
fbstp
dec
addb
push
jle
jno
inc
xor
inc
mov
cltd
xor
popa
pop
lock
cwtl
mov
out
and
inc
pop
clc
xor
popa
lea
jno
adc
das
jp
jo
subb
xor
loopne
data16
cmpsl
xor
pusha
mov
jno
adc
mov
insl
jb
jne
jle
cltd
adc
repnz
ja
sbb
mov
faddl
call
push
sbb
nop
add
cmp
sub
loopne
add
jbe
jne
sbb
inc
std
xor
loop
xor
adcl
cli
outsl
fxch
push
movsb
mov
push
lock
jle
clc
adc
jo
jle
mulb
sbb
shll
js
in
je
pop
jb
jle
fisubl
hlt
push
sub
mov
or
fildl
jb
push
movsl
sbb
xor
mov
pop
movsb
aam
mov
test
cld
push
sub
pop
call
ror
andl
xchg
push
stos
insl
pusha
scas
ss
mov
in
clts
pushf
push
repz
das
mov
xor
xor
lcall
lods
pusha
cmovne
out
push
into
push
lods
mov
jno
roll
lahf
jno
xchg
popa
popf
dec
scas
sbb
mov
in
and
xchg
popa
mov
sub
mov
sbb
xor
mov
fpatan
push
sub
pop
push
push
addr16
clc
mov
cmp
aam
sbb
mov
mov
add
and
out
jg
mov
cmp
fchs
ja
or
push
mov
clc
jno
adc
or
cmpsb
dec
data16
dec
sti
jae
mov
fwait
int3
inc
int
xchg
lods
adc
dec
adc
xor
pop
and
stos
int3
jo
mov
icebp
lock
repnz
add
int
xchg
cld
jle
outsb
inc
js
test
push
mov
aad
push
fstpt
pop
sbb
or
mov
cltd
mov
cvtps2pd
jg
jg
repz
mov
sbb
fisubrl
lods
js
cltd
adc
sub
in
sbb
adc
jno
push
pop
lock
pop
outsl
imull
mov
jo,pt
insb
cld
pop
sbb
movsl
adc
repnz
push
pusha
xor
ljmp
ret
sahf
aad
scas
cmp
mov
cmp
adc
pop
mov
mov
adc
add
lcall
xlat
int3
xchg
mov
mov
inc
adc
imul
adc
push
shll
or
jns
jne
push
xchg
sahf
xchg
cmp
cmp
xor
cmp
rclb
roll
lds
lahf
das
sbb
jns
test
aam
je
repnz
cmp
mov
ficoml
ss
jb
rcrb
imul
roll
int3
jmp
dec
xor
and
clc
xor
cmpsb
mov
mov
adc
clc
imul
or
adc
pop
fwait
sahf
add
mov
xor
jmp
pop
xor
adc
loop
jg
mov
iret
xchg
sub
xchg
or
or
xor
mov
xchg
fnstcw
mov
mov
sub
jo
repz
xor
in
pop
dec
pop
test
xor
adc
bound
mov
popa
add
std
mov
rcll
jb
cs
lds
fwait
jecxz
in
std
sbb
out
mov
lcall
and
insl
jae
ret
out
mov
xchg
push
rclb
jo
sahf
aaa
pusha
fbld
fsub
loop
out
testb
jns
dec
inc
pop
aad
adc
jno
jo
and
sarl
aas
rol
std
or
stc
pop
push
pushl
add
test
cmp
xchg
push
push
fsincos
sub
dec
xor
inc
mov
in
loopne
mov
push
sbb
add
push
aaa
sub
ss
mov
push
xchg
xchg
rep
push
mov
and
jae
sti
push
jle
cmovs
repnz
pop
fildll
dec
aam
push
popa
fldcw
repnz
pop
xchg
pushf
jb
or
mov
fnstcw
xlat
add
xor
jb
ja
sbb
jno
mov
fldenv
cmpsb
cs
loope
loope
adc
sahf
fsts
push
pop
sbb
sub
cmpsb
mov
cwtl
jae
or
cmpsb
push
fwait
pop
mov
call
mov
and
test
adc
cwtl
push
icebp
add
jecxz
lahf
jns
mov
fdivr
inc
mov
xorb
push
int3
jmp
sbb
clc
mov
sub
pop
mov
add
jmp
cwtl
cmp
sti
jo
cld
adc
ss
mov
test
cli
mov
hlt
cmp
dec
fidivs
or
das
push
test
push
sbb
inc
pop
les
jae
mov
and
jnp
fldt
sti
stos
in
cmp
inc
sbb
rorb
jno
xchg
test
adc
mov
mov
pop
jmp
xor
push
xchg
mov
mov
sub
rcr
sbb
arpl
clc
aaa
movsl
pop
lods
fbld
js
daa
jecxz
jb
repz
push
cmpsb
dec
daa
or
aam
jle
aam
call
xlat
mov
fwait
loop
bound
jbe
mov
xor
imull
aas
ja
lea
notl
xchg
mov
jl
or
pop
jbe
out
xor
int3
mov
cmpl
or
lcall
pop
jp
mov
out
adc
add
ss
jle
mov
fcoms
adc
out
pop
push
cli
in
mov
cmp
dec
gs
sub
cmp
cmp
mov
cld
lock
inc
in
frstor
or
pop
iret
cmp
pop
out
outsb
ficompl
stc
cmp
pop
mov
push
push
mov
ds
push
rolb
pop
insb
sub
jmp
adc
out
sbb
js
repz
shrl
xor
roll
sub
push
add
or
sub
mov
int3
pusha
out
jno
aam
sub
or
inc
in
fcmovne
repnz
sbb
insb
and
cmp
sub
test
mov
adc
mov
movsb
mov
in
push
or
fisttpl
data16
mov
clc
jo
mov
adc
push
scas
adc
fs
addr16
ret
push
mov
popa
fisubl
xchg
push
mov
adc
xchg
jns
inc
add
cmp
pop
bnd
hlt
add
adc
xor
push
and
inc
int3
movsb
iret
dec
js
sub
sub
mov
mov
mov
pop
div
add
mov
jbe
xchg
lock
test
fs
mov
ljmp
pop
mov
push
lcall
mov
movsb
mov
pop
sti
aad
sbb
or
pop
xor
jo
mov
leave
add
sbb
push
cmc
je
lcall
mov
push
xchg
inc
sub
xchg
adc
icebp
mov
sbb
dec
sbbl
inc
sbb
test
enter
dec
jg
sub
or
add
pop
sub
sbb
mov
pop
shll
insl
adc
shll
mov
push
mov
sub
popf
mov
cwtl
xchg
insl
mov
xor
xlat
std
ret
add
pop
pop
inc
test
add
and
js
repz
sub
jb
cmp
jge
dec
or
test
jge
ja
cmp
sbb
rcl
mov
scas
lahf
adc
and
push
lock
movsl
lods
jo
bnd
dec
xor
and
or
mov
and
inc
jbe
cmpb
xchg
inc
rorb
and
mov
mov
hlt
mov
hlt
int3
jbe
mov
movsb
mov
sub
das
test
jle
fbstp
shr
xor
imulb
jns
mov
fstpt
int3
inc
decb
cmp
call
out
repnz
pusha
mull
dec
lcall
js
add
fisubl
hlt
xchg
push
fidivrs
mov
or
or
js
sbb
ja
sub
adc
xor
add
mov
dec
pusha
loop
jmp
xchg
scas
arpl
sahf
push
add
push
imul
dec
sahf
sbb
test
fcoms
iret
fs
lret
jp
pop
jl
pop
and
bswap
sahf
adc
mov
cltd
cmpsl
fs
jl
clc
cld
add
repz
data16
jg
test
pop
and
scas
xor
divl
mov
pop
mov
jae
push
pusha
add
jbe
and
scas
add
sub
push
cmp
data16
aas
add
pop
or
repz
fldt
add
xchg
out
or
or
adc
pusha
dec
pop
xor
insl
lret
popa
dec
push
stos
push
addb
sahf
push
mov
nop
push
sub
hlt
nop
mov
leave
pop
stos
imull
aad
hlt
fbld
test
aaa
add
mov
iret
rorl
nop
adc
repnz
pusha
call
fimuls
fisttpl
mov
mov
dec
push
jae
test
jno
mov
shll
mov
adcl
jle
cld
xor
jge
repnz
mov
bound
jg
jg
adc
xchg
cmp
xchg
fistpll
std
rcrb
outsb
pop
cltd
fists
in
sarl
mov
aas
ljmp
out
sub
mov
lcall
jge
ds
insl
adc
pop
ja
lcall
ja
dec
inc
into
mov
or
add
les
xor
xor
mov
or
dec
xchg
inc
push
and
mov
push
mov
pop
cmp
add
mov
lock
cmpsl
int3
xor
cs
test
in
int
inc
mov
in
xor
cmp
pusha
daa
stc
jb
mov
test
daa
shl
repnz
cmp
enter
dec
mov
mov
cs
das
cmp
call
push
cmc
xchg
test
push
hlt
push
mov
mov
add
jno
jle
and
push
adc
xchg
adc
cmc
push
ja
push
mov
mov
jno
push
jmp
fcomip
scas
lcall
mov
pop
sbb
fst
xchg
scas
and
mov
outsl
xchg
fidivrs
push
add
jae
sbb
jne
out
mov
pop
dec
test
inc
mov
jno
sbb
add
shll
lods
test
add
fldcw
add
aad
fisubrl
dec
push
out
push
in
xor
jg
mov
lahf
mov
or
sub
mov
cmpsb
cmpl
sbb
or
sub
or
push
fiaddl
adc
lods
xchg
and
xchg
cmp
jge
out
push
mov
jg
mov
loop
out
or
push
decb
cmpsb
sub
add
fnstenv
or
ja
call
push
iret
add
pop
fcomi
mov
fpatan
cmp
mov
push
sbb
addr16
add
out
sub
xor
sub
insl
adc
dec
jnp
roll
cmp
and
cli
repz
jb
push
jb
mov
jmp
push
jp
mov
ds
sar
test
leave
inc
lock
sarb
xor
cmpsb
jp
and
add
repz
xor
adc
jnp
aam
mov
enter
std
cmp
cmp
es
mov
cs
xchg
filds
loope
inc
xchg
mov
add
lock
sbb
daa
dec
sbb
mov
inc
fiaddl
fnstcw
xor
push
loopne
imul
sbb
lcall
xchg
addb
lcall
orb
lds
mov
mov
or
adc
popa
addl
in
hlt
inc
sbb
repnz
shrl
fisttpl
sub
inc
cmc
test
mov
push
push
insl
pop
push
imul
loopne
les
testb
pop
or
jno
jo
call
xor
lcall
jp
insb
cmp
mov
shlb
inc
test
ret
cmpsb
xchg
mov
cmpsl
push
cld
lods
mov
cmp
adc
js
clc
adc
xchg
or
jae
jle
mov
cwtl
incl
in
mov
cmp
mov
or
pop
fs
dec
stc
insl
pusha
aam
jl
test
scas
jno
jb
ja
mov
adc
lret
das
pop
scas
jo
nop
adc
bound
and
jae
orb
cs
stc
jbe
xchg
cwtl
div
enter
mov
mov
mov
clc
add
sbb
addl
xor
faddl
fld
dec
into
ret
push
adc
fs
sete
cmc
stc
sub
cmp
clc
stc
insl
cmovo
dec
push
sub
repnz
shll
dec
inc
clc
cmp
cmpsl
sbb
lret
outsl
mov
popa
cld
adc
lcall
into
addr16
addr16
add
pop
stc
mov
ljmp
iret
icebp
cmpb
inc
sbb
popa
insl
jle
sub
rolb
mov
iret
stos
movaps
fwait
or
out
cwtl
xor
roll
leave
scas
add
sarb
nop
sbb
aas
fnstenv
in
loop
adc
jle
push
mov
hlt
stc
dec
mov
add
sbb
xor
fcmovnbe
sub
repz
pop
jmp
mov
jg
dec
xor
and
push
adc
div
jge
adc
popa
add
dec
jle
pop
xchg
pop
sar
xchg
pusha
in
xor
xor
jl
and
daa
orb
mov
cmc
dec
clc
bnd
data16
mov
pop
fimuls
fldt
mov
cmp
sbb
dec
sbbb
pop
and
or
arpl
pushf
loop
testb
jno
loope
nop
mov
rclb
xor
rcl
negl
clc
or
pop
enter
jge
pop
xor
inc
add
test
jbe
popa
dec
jle
xor
orl
sahf
jge
and
or
xchg
andb
xor
mov
sbb
out
stos
fcmovbe
mov
dec
or
push
jp
cmp
arpl
cmpsb
pop
cmc
jb
vmovsd
ja
inc
andl
repz
stc
insl
mov
adc
cmpsl
push
push
inc
xchg
pop
test
jecxz
insl
enter
insl
arpl
pusha
sub
push
xor
cwtl
xchg
sub
ja
dec
pop
je
cmp
cmc
cld
or
loop
dec
jbe
pushf
xchg
fldl
jmp
jo
adc
lcall
scas
ret
mov
jae
lret
int
adc
imul
out
das
scas
add
or
xchg
out
cmpsb
sbb
xchg
xor
insl
loop
or
int3
mov
rorb
add
out
shll
je
out
mov
add
dec
repnz
andl
addr16
inc
test
mov
icebp
cmp
ds
adc
jo
and
into
xor
adc
inc
fcmove
js
cmpsl
inc
cmpl
test
mov
pop
xor
outsl
sub
fnstenv
in
das
jnp
ror
xchg
aad
adc
faddl
or
pop
cmp
xor
daa
repnz
xchg
aaa
dec
icebp
test
lcall
das
jns
mov
jo
lods
dec
das
mov
mov
push
push
cmc
mov
hlt
shrl
add
leave
xchg
push
mov
cmpsl
fisttpl
scas
inc
cmc
and
add
or
xor
leave
insl
jb
orl
fldl
jae,pn
shrb
inc
adcb
xor
pop
shr
sbb
push
out
scas
dec
stc
mov
jne
cld
push
jg
xchg
imul
popa
mov
test
xchg
lret
jecxz
mov
andb
out
movsl
cltd
lret
test
dec
stos
pop
mov
rclb
stos
cld
inc
stos
push
xchg
repz
add
lret
aad
inc
adc
movsl
mov
add
or
jbe
mov
push
std
pop
add
hlt
loop
mov
cmp
movsb
dec
mov
movsb
dec
loope
mov
sbb
adc
and
sti
arpl
pop
les
mov
jle
and
add
cmp
mov
std
lods
jne
add
adc
out
pop
inc
cmp
mov
hlt
adc
pop
jo
jle
sub
xlat
sub
dec
push
stc
lea
jns
mov
mov
or
insl
lcall
cmp
sti
aad
push
movsb
ret
inc
cltd
mov
call
jbe
imul
fisubl
pop
push
dec
adc
mov
mov
push
mov
xchg
call
sub
scas
ds
sarl
cmp
cwtl
repz
cmpsb
mov
cld
mov
and
icebp
inc
xchg
jle
cld
inc
mov
sub
scas
jb
sbb
leave
ja
pop
hlt
sahf
mov
cwtl
cmc
sub
clc
ret
loopne
int3
ds
std
add
push
test
cs
xor
push
hlt
sahf
pop
outsb
hlt
pop
adc
stc
jb
xor
popf
mov
ljmp
lret
repnz
cmp
mov
add
push
jbe
mov
pop
icebp
or
and
push
or
ret
into
aam
leave
negl
mov
jo
cmp
and
imul
dec
js
leave
adc
jb
push
sbb
test
neg
loope
pop
pop
xor
testb
sbb
leave
data16
out
clc
dec
jo
cwtl
iret
inc
dec
xor
outsb
daa
add
bound
sub
sbbb
xor
mov
add
mov
sub
sub
pop
xor
in
test
xchg
inc
cmp
xor
push
xchg
lcall
pop
mulb
lcall
sti
jns
lret
fidivs
xor
faddl
lahf
xor
sahf
pop
les
jge
mov
push
and
adc
pop
add
sti
and
jbe
cmc
and
push
ret
repnz
sub
dec
add
fwait
jns
and
dec
data16
cmp
xchg
insl
rolb
testb
out
pop
insb
cmp
mov
xchg
leave
jle
pop
lds
popf
sbb
inc
mov
pushf
adc
adc
inc
es
repz
lods
jge
add
scas
mov
mov
mov
mov
add
movsb
lahf
mov
fiadds
adcl
add
sbb
xor
mov
jae
cli
addb
ret
stos
jb
and
sub
pop
and
test
fnstsw
js
cmp
adc
sbb
fiadds
addr16
cmpsl
sub
stos
fidivs
sub
aas
sub
cmpsl
inc
and
mov
test
ret
push
insl
xchg
mov
popl
bound
push
xchg
sbb
mov
jne
or
mov
js
in
out
stc
sub
ja
lahf
jle
aam
sub
lret
cmp
jl
imul
adc
lcall
pop
movsb
in
pop
jl
jno
cld
adc
aad
icebp
into
sahf
shlb
icebp
jbe
std
shll
iret
inc
jnp
sbb
or
in
jae
and
mov
pop
jl
icebp
nop
jb
das
mov
insl
lcall
cmp
mov
out
fxtract
mov
test
fidivl
hlt
mov
cmp
inc
repz
clc
pusha
cmc
cli
jbe
mov
icebp
div
js
jns
sbb
pop
lds
jle
je
mov
mov
push
call
cld
into
les
or
lahf
cmpsl
dec
sub
and
cmp
adc
dec
xor
and
repz
ret
mov
mov
popf
shlb
test
push
into
mov
lea
push
mov
cmp
sahf
inc
mov
add
mov
pop
inc
shl
adc
sbb
int
push
xchg
push
sub
jb
sub
jmp
pop
imull
cmc
addb
popa
fdivp
out
data16
mov
scas
mov
stos
mov
dec
in
fidivrs
mov
rcrb
insb
test
jne
lds
fists
push
dec
or
lret
mov
xlat
out
and
cmp
push
mov
or
aas
cmp
xor
loopne
rcrl
jbe
dec
inc
push
jno
push
mov
add
pop
les
jae
dec
mov
in
and
mov
cmp
jo
inc
ss
fisttpl
fs
idivb
and
loope
inc
and
les
cmc
xchg
scas
mov
notl
sahf
pusha
ja
mov
jle
dec
divb
cld
icebp
subl
aaa
mov
out
and
dec
xchg
add
cmpsl
fmuls
test
dec
sub
in
enter
mov
or
push
cmc
cwtl
out
ljmp
dec
sub
or
or
roll
push
mov
mov
lcall
hlt
cmpxchg
inc
jns
add
pushl
in
adc
adcl
xor
scas
aas
stos
das
or
test
push
clc
pop
push
sbb
or
mov
scas
inc
pop
push
adc
push
lock
testb
fs
je
rorb
dec
add
pop
call
idiv
fcomp
jl
inc
dec
inc
and
icebp
jbe
add
push
cmp
out
adcl
add
add
enter
add
sbb
fists
leave
xor
repnz
lock
pop
and
ss
mov
inc
ficomps
test
add
lock
cmp
sub
or
adc
mov
pop
out
gs
sub
or
push
out
sub
shlb
add
xorb
inc
addl
inc
icebp
xchg
and
ja
fidivrl
or
mov
push
sub
inc
push
icebp
mov
mov
push
mov
fistl
les
sbb
xor
mov
and
enter
mov
fimuls
jb
cld
jge
ret
xor
std
out
push
cld
add
jg
jo
notl
enter
mov
shrb
adcl
out
in
test
mov
cmp
stos
in
mov
mov
rolb
icebp
xor
inc
pop
test
adc
inc
pop
cmpsb
stc
mov
mov
insl
pop
paddd
dec
fadd
sbb
gs
jmp
jecxz
pop
jno
addb
mov
ficoml
int3
ret
cmp
jp
mov
loopne
ja
repz
mov
testb
in
or
jae
dec
adc
adc
mov
dec
lret
jo
pop
js
out
sbb
sbb
add
add
adc
cmp
fwait
sbb
cli
arpl
aad
lahf
daa
pop
pop
in
push
cmp
ss
stos
shll
leave
pop
and
scas
imul
cmp
cmp
sub
cmpl
das
cmp
cmpsl
push
lea
mov
xor
mov
or
xchg
add
xor
icebp
sub
mov
ds
xor
jecxz
les
mov
pop
xor
ret
lods
movsb
aaa
push
imul
xor
xor
mov
inc
dec
jbe
jl
jl
gs
push
dec
cmp
xchg
idiv
mov
mov
cmp
adc
jl
cmp
adc
lods
sub
adc
mov
mov
jge
dec
int3
out
or
push
mov
jo
addr16
ds
mov
ja,pn
push
adc
shl
pop
add
sub
xor
mov
push
dec
add
cmp
gs
mov
or
push
inc
addb
inc
iret
std
ret
sbbl
cld
lock
pop
jno
mov
int
cmp
jo
jle
sbb
aas
mov
cltd
mov
and
sbbb
cmpb
inc
mov
sub
xchg
xchg
add
pusha
mov
ss
cmc
xchg
mov
push
pop
clc
std
pop
mov
out
and
aaa
stc
cmp
call
xchg
cmc
xchg
cmp
xor
adcl
ds
xchg
andb
es
pop
aad
xor
divl
cmpb
jns
mov
jecxz
aaa
mov
inc
push
push
jbe
or
and
push
out
push
mov
ds
fcom
std
lret
jp
cmp
or
or
fbld
jne
pusha
jno
sbb
cmp
mov
idiv
mov
jp
cmp
ja
test
sbb
xchg
jle
out
jb
das
cmp
cmc
mov
adcb
icebp
inc
std
xor
cmp
xor
scas
mov
inc
mov
je
setle
shlb
andb
jae
sbb
xor
out
in
pop
out
lds
or
cmc
sbbb
sbb
adc
lea
mov
xor
dec
lea
adc
out
jbe
mov
arpl
js
jbe
jp
xchg
popa
jb
sbb
out
movsl
xchg
insl
sahf
lock
cmp
test
rclb
xchg
ret
lods
xchg
xchg
stos
xor
pop
xor
arpl
cmp
push
movsl
mov
movsl
sahf
inc
cmp
and
lock
cmp
test
fbstp
cmpl
sub
xor
cmp
shlb
inc
cwtl
dec
shll
or
mov
sub
adc
sbb
aad
pop
push
pop
negb
popf
xor
int
pop
dec
push
xchg
stc
leave
aaa
in
je
jle
mov
mov
inc
xchg
pushf
lcall
mov
xor
adc
push
into
cmpsb
mov
jns
jo
mov
pop
jne
mov
jbe
inc
shrl
sbb
adc
xor
aam
cmp
scas
pop
jmp
pusha
jno
xor
xor
mov
xor
push
flds
xor
adc
js
cwtl
lods
mov
stc
jle
pop
call
or
lret
cmp
sub
pop
mov
mov
xor
pop
dec
inc
in
scas
sbb
cmp
adc
mov
xchg
repnz
test
xchg
push
lret
loope
dec
dec
icebp
popa
fmull
imulb
popa
push
nop
sub
js
sahf
jb
lods
xor
sbbl
sbb
add
sub
lock
inc
sbb
add
push
sub
push
mulb
pop
test
int
mov
lret
and
add
pop
mov
bnd
adc
inc
cmp
ss
outsb
insl
dec
dec
fcom
jne
push
xchg
aad
ljmp
jne
push
lea
dec
popa
push
and
and
mov
int3
out
mov
flds
iret
mov
sarl
idivb
mov
xchg
enter
enter
adc
testl
dec
mov
fsubp
out
inc
test
out
jp
inc
data16
mov
and
and
inc
stc
sub
xchg
inc
mov
inc
out
insb
jo
insb
xor
mov
adc
insb
mov
fildll
scas
push
sbb
shll
popl
dec
fadds
xchg
and
mov
test
lock
pop
call
les
clc
mov
adc
mov
pop
in
jb
js
jnp
adc
cli
cmc
push
ret
lret
sub
mov
lock
jge
jb
mov
mov
mov
xchg
sbbl
addl
push
fwait
or
sbb
push
mov
jno
test
sbb
push
xor
loopne
hlt
js
xor
or
add
clc
idivb
jae
fmuls
mov
mov
or
or
pop
jae
cmpl
cmp
and
pop
or
sub
push
jo
mov
inc
pop
rorb
nop
call
sbb
jb
add
pushf
cmp
out
cmp
push
popa
test
jno
lcall
ss
bnd
mov
or
js
inc
cmc
pop
add
add
push
pushf
mov
aad
sub
test
mov
jp
jle
mov
and
xor
adc
mov
call
out
ret
dec
sub
cs
pop
add
icebp
adcb
add
xor
sar
cmpsl
lret
mov
lods
xchg
daa
stc
cmp
xor
mov
movsb
sahf
test
adc
addr16
jne
clc
outsb
jmp
mov
iret
jle
in
fisttpl
enter
popf
cld
cmp
cmc
adc
or
imul
clc
sbb
mov
mul
or
jge
xor
fbld
jo
ds
clc
dec
inc
push
cmp
stos
movsl
out
xchg
jge
data16
xchg
ds
subb
xchg
mov
xchg
cmc
sub
int
mov
mov
popf
addl
sub
jb
mov
adc
hlt
jp
pushf
adc
addr16
clc
mov
movsl
test
cmpsb
das
fildll
imul
push
mov
mov
cmpsl
push
xchg
cltd
jbe
test
mov
jbe
pop
inc
sbb
addl
jnp
pop
cmp
jl
in
in
repz
pop
adc
clc
dec
test
bound
lea
cmp
inc
test
fisubl
jnp
lock
mov
jne
jbe
mov
nop
out
xlat
lds
xlat
inc
mov
adc
jmp
xchg
hlt
xchg
mov
aam
jae
add
mov
rol
test
addr16
repz
cmc
xchg
adc
rcr
add
mov
mov
loopne
hlt
sahf
mov
add
inc
jg
repz
pop
cld
inc
repnz
insl
out
in
jns
cmp
cmp
jno
or
andb
js
aad
rcpps
je
inc
cmp
or
clc
mov
mov
cli
clc
xchg
cmp
cmpsb
mov
dec
sbb
cmpsb
mov
mov
and
cmp
ja
and
xchg
cmpb
ret
and
xchg
xor
pop
fnsave
addl
mov
idiv
add
cmp
movsb
out
pop
cmp
test
stos
imull
lret
js
cmp
outsb
cmp
xor
or
jecxz
dec
adc
ret
lds
bound
shll
lret
or
cmpsl
and
hlt
xchg
sti
mov
aad
push
push
or
mov
hlt
js
sbb
int3
push
mov
shrl
add
and
movsb
mov
bound
inc
add
nop
rclb
inc
mov
adc
inc
andb
lea
pop
movsb
sub
jle
dec
fs
xor
les
subl
out
dec
lock
insl
push
repnz
xchg
rolb
xor
jno
pop
mov
je
js
int3
push
rorb
insb
icebp
cmp
pop
push
add
pop
pushf
xchg
call
subl
push
sub
in
cmpsb
mov
fidivrl
aam
in
xor
sahf
sbb
jg
mov
pusha
mov
mov
mov
popa
out
xor
shrl
cmp
push
sbb
adc
add
jecxz
shll
dec
adc
icebp
jbe
xor
push
push
cmp
xchg
addr16
cmp
mov
adcl
pop
cmp
sub
cmpsl
sub
cmp
into
xor
sbb
dec
jg
pop
out
nop
cmp
cmp
cmpsl
sahf
jle
pop
add
adc
test
fwait
jbe
outsb
aaa
push
sub
mov
jae
mov
sbb
mov
test
cmpl
add
or
enter
orb
in
std
pop
mov
cmp
lock
or
cmpb
jg
into
pop
fidivs
cld
je
xorb
icebp
jecxz
and
fs
sbb
xchg
std
or
add
pop
mov
push
push
hlt
push
mov
or
std
in
and
mov
inc
idiv
xor
push
shrl
notl
jl
jl
cmp
xorl
gs
sbb
inc
xchg
mov
jl
out
jae
jle
jle
dec
push
stc
pop
clc
fcoml
in
aad
jae
insl
pop
jmp
cmp
icebp
nop
shld
jle
in
xchg
mov
and
jbe
repnz
xchg
sbb
inc
push
mov
clc
inc
sbb
lds
cmpsl
push
mov
mov
jmp
fmull
in
mov
aad
fs
ret
cmp
sahf
std
out
es
movsl
add
sbb
movsb
jno
sbbb
aaa
cmp
add
mov
or
test
mov
mov
cmp
push
add
jae
push
adc
outsl
out
movsl
stc
adc
test
sub
adc
das
inc
sbb
pop
das
js
icebp
xor
fidivrl
and
cwtl
mov
stos
mov
outsb
fcmovnb
test
cmp
adc
or
mov
adc
fidivl
push
adc
div
ja
or
mov
mov
add
mov
cld
push
cmc
xor
icebp
adc
out
add
cld
cmpb
fsub
push
jno
icebp
and
mov
arpl
push
add
inc
scas
xor
xchg
lcall
xorb
add
jg
cmp
mov
sbb
ss
xchg
inc
js
mov
push
cmp
js
xchg
dec
push
dec
fcoml
hlt
jmp
les
addl
aas
xor
call
flds
cld
hlt
jecxz
imull
je
adc
cmp
jno
sbb
aam
sub
dec
fadd
stos
lods
ja
inc
sub
mov
inc
imul
inc
xlat
js
and
pop
hlt
mov
push
push
sub
jne
sub
mov
xor
xor
sbb
addl
cmp
ss
bnd
sbb
loope
rol
cmp
jmp
adc
mov
dec
addr16
sub
mov
pop
sub
pop
cs
jle
fwait
or
inc
shlb
jle
insl
nop
mov
sub
andl
cmp
loope
dec
sbb
loopne
push
pop
cli
inc
and
inc
pop
sub
sbb
outsb
insb
mov
jne
push
mov
jge
cmp
repz
out
push
lret
cmp
aam
jl
or
ret
popa
out
sarb
ret
pop
dec
jb
xchg
push
push
scas
nop
or
in
cmp
mov
lock
mov
or
and
jl
addr16
jnp
sti
stc
xor
jnp
movsl
push
pop
sti
stc
push
or
sub
xor
call
jb
mov
pusha
and
popa
insl
stos
jmp
pop
insl
enter
cmp
dec
lds
lahf
adc
std
mov
xchg
xlat
sahf
ds
cmc
sbb
fidivrl
inc
ljmp
sbb
pusha
lock
fldenv
jnp
sarb
sahf
sbb
subb
call
scas
pop
rcrb
out
repnz
jle
sub
mov
mov
nop
imul
movsb
sbb
std
fld
sub
clc
or
dec
aas
pop
inc
es
mov
and
cmp
in
aas
je
jo
xchg
addr16
adc
ja
hlt
imul
push
test
jne
inc
add
mov
adc
sbb
xorb
xor
adcl
xor
addr16
xchg
cmc
out
adc
and
sbbb
ja
cmp
ds
sbb
mov
add
push
jno
sbb
addl
xor
clc
inc
ret
lret
fdivs
jge
movsl
repnz
push
lcall
imul
push
jb
cmpsl
add
out
int
lea
jbe
pop
xlat
xor
sub
jae
xchg
roll
mov
pop
sbb
push
dec
sarl
jl
pop
hlt
cli
push
scas
xor
pushf
sbb
shll
ja
popa
imul
ret
xor
cmp
dec
adc
lock
dec
jnp
or
ret
hlt
sbb
outsb
add
jmp
inc
negb
mov
adc
jmp
mov
lods
add
lcall
hlt
in
xchg
jmp
cld
jle
jecxz
xor
sahf
iret
push
repz
insl
push
xor
fildl
mov
andl
mov
std
scas
inc
adc
and
xchg
mov
stc
hlt
cli
push
sbb
dec
xchg
push
iret
jmp
out
push
incb
xor
mov
jg
sbb
inc
xor
ret
je
jnp
jp
and
clc
lds
or
xchg
mov
addr16
repz
jnp
rol
jl
pop
scas
sbb
xchg
sbb
icebp
mov
enter
push
jo
adc
xchg
out
cmp
test
inc
icebp
cmp
pop
insl
inc
sub
scas
dec
aas
loope
adc
popa
sahf
mov
xor
add
fidivrl
gs
add
mov
xlat
mov
je
dec
inc
jae
ret
fldcw
sub
xchg
mov
jge
push
and
repnz
ja
clc
leave
xor
lret
jb
dec
fidivrl
xor
mov
cmp
adc
push
sti
push
pop
ja
jp
mov
cmp
scas
cwtl
push
aaa
mov
sbb
fcomps
fstl
pushf
sti
dec
divl
enter
test
sbb
cmp
pop
shll
popl
xlat
xchg
divl
dec
pusha
push
dec
fidivs
ljmp
cmp
xor
adc
adcb
fwait
mov
test
mov
cmpsb
jb
ret
jge
and
das
ja
enter
insb
add
mov
orb
fdivrp
pushf
add
jnp
mov
ja
out
aaa
in
jbe
divb
es
pop
divb
xchg
lcall
in
decb
leave
stos
mov
jg
xor
xlat
inc
mov
push
ss
mov
je
jb
mov
stc
push
xchg
data16
dec
mov
jge
test
inc
xchg
mov
lcall
out
or
sub
xchg
lcall
add
aaa
mov
stos
and
cmc
jne
and
lock
cs
in
sub
adc
adc
jbe
cmp
out
pop
scas
pop
mov
or
fcoms
insl
jno
pop
jb
movlps
or
or
push
cmpsb
leave
fnstsw
stc
jo
jg
jno
mov
pop
pusha
pop
std
jbe
mov
adc
mov
cmp
in
jae
movsl
mov
fdiv
xchg
jp
and
mov
inc
pop
xchg
or
or
iret
test
inc
arpl
fidivs
mov
iret
mov
and
repz
sbbb
and
outsl
cmp
lret
mov
lcall
in
sub
adc
pusha
loop
push
repz
repnz
outsb
adc
in
pop
add
subb
dec
pop
jnp
ss
mov
jle
xor
xlat
cmpsl
enter
imul
xchg
xor
aas
cmpsl
or
or
xor
stos
ljmp
mov
mov
mov
icebp
add
sbb
cmpsb
mov
mov
cmp
push
cli
cmp
inc
pop
xor
repz
jae
out
mov
sahf
mov
pop
add
lcall
jmp
ljmp
loop
dec
lcall
push
add
or
inc
lea
xchg
or
or
in
xor
jbe
xchg
cmp
cwtl
jnp
sti
xor
jno
repz
or
pusha
hlt
and
addr16
aaa
movsb
mov
aaa
sbbl
sub
ret
or
adc
lock
fs
enter
push
scas
mov
adc
ficoml
pop
xchg
mov
mov
or
or
xor
rcl
mov
scas
jmp
sub
or
clc
push
jbe
inc
cmp
mov
or
mov
movsb
negl
aam
dec
mov
jp
cmp
xchg
rcll
pop
inc
push
jp
pop
push
ret
imul
mov
lret
lods
cld
daa
out
or
xchg
in
clc
lret
cmp
pop
es
rolb
jae
mov
sbb
repz
and
adc
fnstenv
jl
hlt
lods
sub
cmp
cmp
loop
jp
jae
sub
test
nop
xor
mov
fdivrs
dec
cmc
shr
repnz
sbb
mov
pop
or
loop
add
ja
js
leave
sub
add
fisubl
test
pop
scas
jg
shl
aad
enter
lods
cmc
pusha
sbb
mov
repnz
rcrl
push
xor
shlb
insw
dec
pop
ss
repnz
js
hlt
outsb
mov
push
dec
ja
inc
mov
sbb
aaa
inc
xchg
cmpsb
xor
sub
inc
or
mov
and
mov
adc
rcr
xchg
addl
jmp
out
mov
push
orl
mov
xor
adc
icebp
jecxz
lods
or
test
icebp
je
cmc
mov
div
test
bound
xor
loope
adc
xchg
adc
xchg
jecxz
outsl
movsb
pop
cmp
cwtl
mov
cwtl
icebp
lahf
add
or
sbb
jmp
cwtl
ja
pop
out
mov
testb
imul
jne
ficompl
bound
add
andl
jl
fsqrt
daa
lock
dec
or
fdivs
mov
hlt
lock
lcall
call
fistpl
icebp
jns
jns
add
clc
out
jmp
ss
xor
bound
sub
out
add
stos
xchg
or
cmc
and
into
push
leave
jne
out
mov
xchg
xchg
dec
repz
or
jmp
dec
int3
sbb
jg
out
dec
jno
sbb
repz
push
and
sbb
pop
stos
pop
aas
cmpsl
and
aam
ficoml
scas
cltd
push
dec
jne
push
xchg
jbe
stos
xchg
mov
and
fidivrl
jl
out
adc
push
lods
stos
mov
sbb
inc
sub
or
xor
psubd
cli
jae
pop
test
in
jno
mov
xor
jne
and
jno
mov
jl
clc
repnz
repnz
ss
push
xor
xor
sub
enter
lahf
sti
push
or
jae
xor
and
push
cmc
dec
test
push
xchg
movsb
mov
movsb
cmpsb
out
add
jb
push
popl
dec
cmp
lea
xor
lods
adc
addr16
cltd
add
mov
in
add
dec
add
jl
imul
popf
pop
aaa
fisttpl
fldt
jb
pop
sbbb
mov
sti
shlb
lea
mov
jb
xor
lret
out
out
test
andl
and
mov
mov
scas
cmp
cli
sub
add
int3
js
adc
mov
push
cmp
jl
push
cmc
push
fnsave
out
jb
gs
incl
insl
into
push
cld
fstpt
mov
lock
or
icebp
cmpl
mov
icebp
fcoms
or
mov
pop
sbb
xor
and
sahf
mov
add
and
loopne
xchg
or
jge
divl
sub
stos
jns
addb
jbe
add
fistpll
push
out
imul
roll
hlt
fmuls
xlat
add
iret
faddl
in
add
pop
pop
inc
adc
lret
idivl
sahf
pop
adcb
push
push
dec
pminub
mov
dec
test
shll
nop
cwtl
leave
jmp
lret
sub
xor
repz
mov
jb
jnp
sbb
push
jmp
xor
pop
sbb
jo
mov
inc
pop
push
mov
and
sub
mov
jl
in
popa
aad
sti
cmp
cmp
add
jg
lahf
movhps
adc
jnp
pop
xchg
jge
and
push
jecxz
clc
int
loop
leave
js
xor
mov
mov
mov
clc
mov
je
cld
ficoms
sub
and
in
and
je
mov
fwait
xchg
test
and
jge
jae
add
into
or
jbe
jle
neg
stc
inc
jne
jg
in
inc
insl
popa
cli
pop
pop
mov
rcrl
sub
fisubs
mov
insb
arpl
jno
inc
insb
filds
daa
adc
loop
cvttps2pi
mov
jns
test
clc
leave
cmp
repnz
stc
or
xor
jnp
ja
into
mov
dec
shll
add
inc
mov
pop
js
adc
or
mov
sarl
outsl
sahf
pop
loopne
xchg
aam
lcall
inc
jle
sbb
jb
popa
xorb
data16
jg
inc
les
xchg
cmp
inc
xor
test
mov
mov
mov
out
sub
push
lods
js
xlat
sbb
xor
clc
lock
sbb
jle
add
repnz
pop
xor
hlt
fimull
std
xlat
inc
xor
mov
sahf
sub
push
adc
xlat
sbb
jecxz
lock
pop
or
je
xchg
outsb
jle
fldt
rcrl
in
jb
cltd
icebp
sti
xor
in
and
sbb
xor
js
mov
fisubs
inc
lea
repz
dec
xor
cmc
and
adc
mov
or
cld
cmc
loopne
jne
lea
rolb
in
lcall
dec
fcoms
mov
std
std
fnstenv
iret
in
jb
jne
lahf
or
addr16
ret
lods
ficoml
inc
loop
inc
xchg
testb
dec
test
jb
outsl
adc
jno
mov
in
iret
ja
jne
jo
mov
adc
cli
jl
jle
shll
mov
iret
sahf
lods
notl
xchg
or
iret
mov
xchg
and
dec
dec
sbb
std
inc
ja
pop
jne
rorb
adc
lahf
in
outsb
xchg
pop
pop
scas
adc
fisttps
mov
xchg
js
cmp
or
movsl
movsb
out
scas
xchg
iret
and
mov
sbb
pop
push
mov
or
jle
cmp
jb
mov
inc
inc
cmc
jnp
aam
ud1
insl
pop
and
maskmovq
testl
push
lahf
repnz
cld
or
jge
out
div
mov
add
int
stc
or
lods
push
testl
lahf
testb
sbb
adc
adc
ljmp
lds
jle
popf
jne
push
push
mov
and
std
mov
ja
adc
jge
stc
and
push
out
pusha
inc
pop
inc
std
push
jle
push
jne
imul
jnp
mov
fstl
jmp
dec
add
or
shlb
inc
insl
jmp
dec
jno
inc
jnp
insb
outsl
or
xchg
iret
dec
fldenv
mov
stos
and
add
cmp
and
orl
out
lods
mov
jbe
xchg
add
jne
lcall
out
adc
insl
lock
add
popa
or
rclb
daa
cmpb
mov
mov
jp
cmp
sub
les
push
divl
out
jl
mov
sarb
repz
jnp
jae
jl
mov
xlat
jb
push
fnstenv
xor
icebp
mov
sbb
lcall
aas
mov
and
xor
sbb
popa
leave
add
add
or
in
add
cmc
add
sbbl
aas
outsb
ss
negb
inc
and
push
xchg
adc
cmc
mov
or
mov
cmp
cwtl
mov
popf
jg
scas
mov
cmp
or
pusha
stc
andb
aaa
popf
es
pop
pop
aam
or
sbb
xchg
adc
pop
stos
sub
flds
push
daa
aad
shl
push
testb
adc
cwtl
mov
imul
push
shrb
lods
test
aad
jns
push
pop
test
insl
sahf
stc
or
mov
fnstenv
sub
aad
push
push
xchg
add
out
sub
iret
push
out
pop
cmp
add
pop
repz
out
push
js
cltd
imul
push
mov
ficompl
dec
dec
jae
inc
inc
test
or
xor
or
test
addl
jg
out
popf
add
repz
mov
adc
push
pusha
popf
pop
iret
ficompl
sbb
testb
adc
lcall
neg
mov
fstpt
mov
sbb
mov
add
in
movsb
into
mov
sub
add
or
testl
movb
xor
repz
pop
adcb
mov
pop
ja
xchg
mov
adc
stc
push
outsl
jns
mov
jle
jecxz
scas
mov
adc
jp
xor
mov
sbb
add
out
popf
loop
mov
jl
mov
into
shlb
or
push
or
dec
adc
add
pusha
jg
sbb
push
push
test
pushf
mov
outsl
xor
popa
mov
dec
xchg
rcrl
pop
lret
test
sbb
sub
negl
lret
adc
and
inc
les
fidivl
mov
mov
cmp
icebp
and
fisubs
fnstenv
cltd
je
lock
cltd
pusha
mov
fidivl
fcoms
repz
ljmp
push
cmc
or
cli
icebp
add
inc
lock
push
mov
push
or
xchg
xchg
hlt
mov
pop
sbb
push
das
mov
push
inc
cmp
mov
lahf
dec
jne
jnp
mov
sbb
xchg
stos
mov
js
and
jl
test
inc
mov
imull
test
sbb
in
paddsb
scas
int3
sbb
outsb
cmp
shl
sahf
sub
out
lods
inc
pop
adc
jae
lds
adc
lcall
fs
sbb
call
and
mov
push
cmp
insl
add
mov
sbb
popa
iret
es
daa
aaa
add
or
lds
mov
or
daa
lock
sahf
and
push
xchg
lds
movsl
pusha
call
xlat
xor
xlat
inc
inc
cmp
ljmp
pop
sbb
dec
xchg
cmp
test
push
pop
in
pop
leave
icebp
xorb
jl
pusha
fcmovne
sahf
icebp
lret
or
adc
lods
call
scas
and
nop
push
out
jle
jp
sbb
sahf
mov
mov
sbb
hlt
lret
leave
insb
mov
addr16
sbb
out
lcall
and
scas
sub
pushf
dec
pop
incl
negl
icebp
pop
aas
or
push
sub
adc
in
sub
aas
imul
gs
rcrl
shlb
add
adc
ljmp
ficomps
lock
rcll
mov
es
jmp
push
ret
sbb
mov
iret
sub
sbb
loope
cwtl
lcall
pop
mov
mov
and
leave
inc
add
jge
bound
pop
sbb
ljmp
jmp
jbe
lcall
ret
or
jge
repnz
std
mov
jle
lods
cmp
push
nop
leave
or
scas
or
cli
ds
int3
mov
in
pop
and
enter
mov
hlt
jns
pop
adc
aam
mov
int3
inc
les
cmpl
xor
test
mov
insl
jl
mov
dec
bnd
cmp
out
stc
popf
outsb
sahf
and
mov
xchg
js
out
lds
divb
or
and
out
xor
sub
fstpt
jmp
sbb
sbb
mov
jmp
ds
add
jno
jns
and
sbb
xchg
ret
fiaddl
cmp
in
push
push
ja
ret
or
test
sahf
js
aaa
leave
sub
pop
jne
dec
push
pcmpeqw
lret
jmp
mov
outsl
adc
xchg
cmp
fisubs
fcomi
testb
ds
xor
adcb
movsl
loop
out
popa
jp
je
push
in
loopne
mov
sti
cmp
xchg
xchg
xor
ja
jno
mov
jb
fstpt
cwtl
clc
jo
mov
mov
cltd
lret
or
sbb
mov
bound
outsl
notb
aad
rorb
dec
out
jle
jb
out
loope
loop
inc
jne
dec
xlat
std
mov
int3
jp
dec
cmc
dec
or
and
lret
add
lods
xchg
or
add
push
mov
rorl
enter
popf
cs
push
pop
sbb
dec
lahf
xchg
xorb
and
jmp
jg
sub
dec
hlt
loop
fdivrl
or
xchg
mov
cmp
jno
sbb
gs
mov
xchg
movsb
lea
dec
sahf
shll
sbb
fwait
or
stos
pushw
inc
jbe
inc
pop
stos
icebp
pop
xor
cmp
xchg
lahf
adc
call
fmulp
sarl
ja
or
lahf
jle
sbb
add
mov
jne
add
sub
inc
dec
fadds
sbbb
pop
jae
out
popf
pop
fmuls
pop
fistpll
sarb
or
stc
xor
cld
xlat
stc
shlb
adc
jecxz
sti
ret
js
stos
mov
aam
xor
stos
in
clc
pop
xor
ss
out
inc
scas
push
mov
mov
push
std
inc
cmp
addr16
mov
xchg
inc
jo
mov
hlt
mov
cmc
xchg
and
leave
mov
cmc
inc
push
xchg
jns
sub
mov
ljmp
notb
dec
adc
ret
jbe
jl
jo
pop
lock
jmp
icebp
lds
push
test
shll
jbe
jns
add
test
js
or
xor
sbb
mov
es
aam
lds
cmp
pop
frstor
xchg
adc
cmp
jnp
shr
aam
jo
sub
icebp
lea
int3
jae
jb
sbb
xchg
cli
push
lods
and
addl
movsl
mov
fs
insl
xor
mov
xlat
outsb
test
mov
jbe
lock
dec
push
push
cld
loope
xchg
repnz
cli
in
jns
pop
xchg
mov
add
add
adcb
jo
je
mov
sbb
push
pop
adc
xchg
jo
or
mov
mov
jbe
push
aad
sahf
xor
push
cltd
insl
sarl
aam
ss
inc
ds
pop
sub
mov
xorl
hlt
idivl
arpl
lcall
insb
cmp
cmp
lcall
cmp
jns
js
fdivrl
jle
push
mov
das
rcll
into
scas
pop
dec
mov
xor
jle
mov
rolb
inc
sti
jbe
pop
and
rcl
sbb
pusha
iret
push
loopne
repnz
icebp
xchg
aad
outsb
mov
lret
iret
stc
sahf
roll
mov
fistpl
jns
or
xor
xor
jge
pop
js
pop
xor
fistps
subl
cmpsb
ss
mov
xchg
rolb
xchg
faddl
aaa
mov
daa
pop
rolb
ds
popf
lcall
mov
sub
movsb
cmp
mov
jae
cmp
jns
test
jle
push
test
push
mov
cld
mov
mov
int
sarb
test
rorl
test
jge
add
loop
mov
pop
jecxz
scas
add
jp
add
hlt
repz
mov
jecxz
jg
push
push
pop
pop
pop
adc
jae
int
sbb
loopne
jne
mov
pop
lock
mov
xlat
mov
xor
lcall
jne
add
sahf
mov
xor
in
setle
xor
call
rcll
sub
je
stc
cmpsl
pop
xchg
push
out
sar
or
cmc
inc
lahf
sbb
adc
push
sarb
push
jno
add
xor
xor
fdivl
push
sub
ss
sub
sbb
push
and
and
dec
adc
mov
hlt
mov
pop
mov
and
cmpsb
gs
or
int
inc
dec
xchg
xchg
stos
lods
jle
inc
jb
xchg
adc
inc
les
mov
in
dec
pop
pop
dec
repnz
pop
rclb
push
movsb
xchg
fstpt
cld
sbb
push
mov
call
mov
std
sbb
lock
aam
in
test
and
imul
jae
cmp
dec
std
push
or
mov
enterw
push
pop
pop
or
xlat
insb
loope
insl
jle
mov
nop
inc
push
adc
lock
jl
cmp
mov
or
jmp
mov
mov
mov
cmp
xor
xlat
inc
xor
or
mov
outsb
xor
add
adc
adc
mov
mov
scas
fcompl
pop
adc
push
lock
pcmpeqb
dec
outsb
mov
clc
jno
jl
lock
ja
adc
inc
cmp
aas
movsl
std
dec
or
test
mov
mov
sbb
mov
test
dec
xor
mov
push
outsl
sbb
inc
clc
jne
xlat
cmp
test
adc
shll
test
sbb
insl
jo
mov
int
mov
pop
sbb
pusha
call
aad
fsub
pop
movsl
stos
mov
adc
cwtl
or
or
repz
cmpb
lret
sbb
call
xor
cmp
aam
lret
mov
push
add
fwait
test
movsb
jmp
push
sub
xchg
xlat
mov
fadds
inc
pop
fisttpl
movsb
outsl
lds
mov
mov
nop
sub
jae
adc
dec
mov
cmp
dec
roll
sub
dec
or
adc
pop
jno
sahf
add
pop
movsb
inc
movsb
inc
xchg
adc
test
xchg
cld
mov
pop
lock
jmp
fcoml
pop
jno
and
and
fiaddl
aaa
mov
and
xor
gs
inc
sahf
xor
jns
push
and
inc
xorb
dec
or
sbb
pop
cld
loope
lret
mov
stos
adc
fs
sbb
cld
rorb
sbb
ljmp
xor
mov
out
daa
and
jns
mov
movlps
mov
xchg
test
ss
push
sahf
lcall
lods
mov
add
jne
push
lcall
jae
xlat
rcrl
xor
cmpsb
imull
xor
std
rcr
test
sahf
push
outsl
add
dec
notl
popa
lods
adc
lock
mov
cmp
push
jp
add
fnstenv
mov
or
call
popl
jecxz
pushl
pusha
pxor
faddl
mov
jmp
jge
add
loopne
scas
adc
dec
fisttps
dec
insb
fwait
xor
imul
imul
scas
xor
xor
repz
jnp
inc
enter
mov
cwtl
adc
jl
pushf
jle
scas
push
dec
icebp
mov
stos
in
mov
sub
mov
push
mov
jle
mov
push
sti
outsl
pop
pop
fcomi
jle
ss
cmp
mov
out
adc
xor
in
jp
lret
dec
loopne
mov
les
cmpsl
add
jbe
inc
jbe
mov
cmpsl
repnz
mov
dec
jb
lods
mov
pop
ljmp
and
cmp
xor
xchg
daa
cmp
mov
out
fwait
test
and
cmc
aaa
bound
aam
rorb
data16
insl
lea
dec
test
or
xor
orb
mov
jmp
icebp
gs
lea
aam
xchg
cmpsb
and
outsb
sahf
xchg
sbb
jecxz
fstpt
lcall
sahf
jecxz
sub
jno
imul
or
adc
adc
xor
mov
and
insb
lahf
push
out
imul
int3
stos
dec
daa
mov
test
xchg
sbb
js
push
and
add
mov
lcall
add
repz
and
mov
pop
or
jb
icebp
nop
xor
xor
icebp
jp
rcl
insl
sbb
inc
push
inc
insl
loope
aam
and
xchg
pushf
fsubrs
dec
push
insb
jbe
cmp
inc
push
pop
sub
adc
mov
xchg
inc
mov
push
dec
and
je
sbb
sahf
jo
out
dec
xchg
loop
clc
inc
push
xchg
adc
repz
or
bound
sbb
adc
add
fdiv
push
sahf
popa
xor
xchg
lock
or
int3
sti
mov
add
mov
mov
sarl
dec
and
sub
stos
mov
popa
pop
negl
std
push
lret
jno
push
inc
popw
pop
or
sbb
pusha
enter
and
sahf
add
inc
xor
jecxz
mov
repnz
cwtl
and
imulb
push
cli
cwtl
iret
or
mov
xor
je
inc
sub
mov
push
jb
push
pop
das
adc
sub
mov
std
div
bound
aas
xchg
pop
lcall
xchg
push
jle
jl
out
mov
cld
dec
or
and
movsb
xor
cmp
or
out
push
fildl
pop
testb
cmp
mov
ss
and
test
xor
dec
mov
jbe
or
fldl
and
pop
mov
subb
rcrl
or
loope
adc
xor
popf
inc
dec
xor
mov
std
mov
mov
ret
mov
adc
rorb
jne
and
mov
mov
js
sbb
cltd
scas
sbbb
or
push
jle
leave
xlat
jns
subb
xchg
inc
ss
mov
inc
jb
cmpsb
cmpl
mov
inc
xor
sti
mov
mov
or
jl
aas
jno
mov
cmpsl
xchg
jno
push
or
jmp
insb
mov
jecxz
lods
xor
xor
sbb
testl
dec
mov
inc
push
cmp
repz
fisubl
loop
push
inc
inc
mov
das
cwtl
sbb
push
cmc
jae
lods
out
xor
and
mov
lahf
xchg
adc
jb
add
xchg
jbe
pop
push
and
pop
sarl
sbb
mov
dec
sarb
test
and
aam
in
incl
je
fidivrl
xchg
cs
pop
iret
faddl
mov
in
sub
cmpsl
sti
sahf
call
fiadds
neg
push
repnz
mov
cwtl
jno
jae
ficompl
jnp
shl
push
stos
fistps
mov
sbb
xchg
pop
adc
aam
rclb
dec
adc
das
stc
xor
jnp
shrl
fimull
push
cmp
pop
pop
lods
popa
lcall
fs
lds
sar
repz
shl
or
into
mov
stos
jne
sbb
or
scas
mov
lods
outsb
push
lea
jb
call
sbb
cmp
xor
push
int3
mov
mov
out
ja
lahf
shl
xchg
mov
pop
insb
lret
pop
cwtl
movsl
inc
imul
or
mov
pop
lock
pop
fs
fbstp
or
pop
sub
sub
xor
cmp
mov
mov
popf
pop
inc
xchg
aaa
stc
inc
lahf
jbe
cmp
add
imul
lret
push
push
inc
in
std
in
xchg
push
std
movsb
xor
ret
aam
push
call
mov
add
dec
add
gs
mov
cmp
pop
test
in
jno
inc
add
pusha
lahf
pop
sub
mov
icebp
push
clc
cmc
mov
fidivs
mov
hlt
jl
xor
loop
push
ja
jno
sahf
cmp
iret
subb
dec
rorl
je
mov
movsb
cs
adc
xchg
mov
adc
fldcw
adc
scas
xor
dec
js
clc
cmc
cmp
popa
jle
mov
mov
jno
flds
jmp
repnz
test
xchg
mov
imulb
cmp
or
mov
addr16
mov
mov
repz
or
or
popa
push
pop
and
push
scas
cltd
add
cmp
dec
adc
sbb
inc
mov
or
mov
lret
pop
ss
loope
in
rcll
lahf
xchg
jno
fiaddl
pop
pusha
xchg
mov
xchg
jbe
and
adc
iret
ret
cli
mov
add
pushf
sahf
mov
stc
js
sub
bound
inc
jnp
cwtl
jnp
adc
dec
roll
cmp
xor
iret
mov
dec
and
addr16
cmp
outsb
xor
enter
inc
push
cld
mov
mov
adc
pop
xchg
sub
rcl
and
std
std
aaa
mov
lock
or
cmpsl
loopne
sti
aam
cmp
cmp
xlat
jmp
pop
adc
and
inc
icebp
mov
sub
push
mov
and
shlb
jmp
adc
insl
add
push
dec
fdivl
frstpm(287
or
rorl
fnclex
xor
add
sbb
pop
jmp
loopne
add
sarl
jge
scas
xor
test
xchg
dec
mov
mov
hlt
adc
stc
mov
test
and
xor
stc
sbb
imul
jae
fsubrl
cs
fbld
aad
mov
mov
incb
cmp
ret
adcl
fstp
sub
test
into
cli
or
dec
pop
xor
cmp
imul
push
insb
aam
push
mov
or
dec
fidivrl
mov
push
sahf
mov
pop
divb
ja
sahf
shl
push
push
or
rorb
lods
fildl
movsl
cmp
and
cmp
jns
adc
ret
mov
pop
push
jb
ficoms
idiv
jo
popa
or
out
mov
movsb
pxor
add
xor
sahf
xor
cltd
jb
inc
adc
fwait
sub
pop
mov
jnp
xor
cmp
mov
sahf
outsb
add
idivl
insl
or
push
adc
pop
lcall
sarb
insl
push
out
xor
sub
sub
push
jo
add
arpl
adc
ss
sbb
xor
dec
mull
mov
xor
into
inc
inc
lret
inc
mov
or
sbb
jl
in
mov
stos
fisttpl
cmc
pushf
mov
adc
sbb
xor
adc
mov
sub
or
ficomps
repz
fidivrl
clc
pmaxsw
mov
das
jle
mov
iret
pop
xchg
jg
ss
cltd
sub
xchg
sub
cltd
mov
ljmp
testb
inc
sahf
cwtl
add
repz
push
clc
mov
and
popa
push
inc
imul
pop
dec
fcomp
cmp
xor
push
push
lret
mov
test
aaa
daa
or
lods
sub
mov
int3
mov
jle
mov
mov
lret
lcall
icebp
xchg
fildl
adc
rcrl
fldt
aas
push
and
dec
cmp
mov
inc
das
stos
aaa
add
cmp
xchg
or
adc
insl
sub
xor
lcall
and
out
sbbl
or
inc
roll
xor
jle
inc
or
add
add
jae
xchg
and
or
adc
jle
cmp
cmpsb
mov
jne
xchg
mov
cmp
mov
adc
or
stos
lock
xor
inc
test
idivb
dec
lahf
xor
and
jns
xchg
cmpsb
jl
push
xchg
in
or
fildl
mov
mov
sarb
imul
call
pushf
idiv
and
dec
xor
push
adc
js
lock
mov
xchg
push
push
fcomip
sub
jo
push
lahf
mov
cmp
sbb
dec
add
loop
inc
or
xor
cld
dec
sbb
test
xor
aam
dec
push
scas
adc
or
xlat
je
enter
loop
fwait
pop
xchg
shll
push
enter
mov
push
mov
mov
cli
and
push
jge
jno
flds
sarb
add
stos
jp
cmp
add
mov
out
cmp
cmp
scas
cs
xlat
xchg
lods
mov
pushf
imul
add
cmp
sbb
hlt
daa
pop
mov
icebp
scas
sbb
inc
and
aam
cmc
in
cwtl
icebp
xchg
pop
dec
aaa
mov
or
mov
lcall
subl
adc
scas
and
sahf
imul
jne
fwait
out
mov
mov
inc
popa
mov
adc
inc
fs
xor
cmp
insb
aas
lods
or
ljmp
pop
or
push
jmp
mov
jb
jle
and
ret
in
push
jp
sbb
jg
fs
lcall
idivb
push
scas
jle
jp
xor
es
shlb
ffreep
adc
push
out
mov
lds
stos
cmp
in
sbb
adc
icebp
sahf
imul
xor
cmpsl
push
dec
sahf
sahf
xchg
jnp
push
je
loop
jecxz
xchg
repnz
mov
test
push
xchg
mov
sbb
xchg
push
dec
ficoms
or
pop
and
js
int
pop
inc
adc
add
adc
jno
lea
out
cmp
aad
repnz
cmc
cmp
imul
dec
pop
fsubrl
imul
cmp
sub
sub
sahf
rcr
lds
and
cmc
dec
push
jmp
popf
fwait
xchg
and
mov
fnstenv
loope
push
mov
push
or
addr16
fcomi
stos
sbb
sub
repnz
and
inc
js
cmpsb
mov
and
xorb
rorl
ja
sahf
adc
cmp
lcall
mov
xchg
dec
inc
addl
xchg
fimull
in
xor
and
sbb
faddl
imul
lea
dec
stc
shlb
push
pop
sbb
std
xlat
fistps
out
xchg
ficompl
cltd
push
cmc
xchg
out
add
stos
mov
mov
fidivs
int
mov
stc
push
lahf
mov
jg
jo
int
adc
jecxz
and
aad
pushf
jno
in
clc
xlat
jecxz
div
jb
iret
ss
xlat
out
enter
and
sub
clc
push
xchg
cltd
stc
mov
repz
or
cli
xor
rcll
icebp
imul
mov
fucomi
xchg
das
xlat
fxsave
js
mov
fiaddl
ja
add
mov
push
push
fimull
mov
xor
xchg
pusha
cmp
inc
clc
jne
mov
insl
je
add
leave
pop
pop
jns
xor
sbb
bound
adc
jnp
sub
cwtl
and
sbb
jp
inc
adc
test
aam
jmp
xor
sub
aas
or
popf
icebp
sub
mov
adc
add
mov
mov
nop
mov
dec
ret
cmc
mov
inc
or
sub
repz
jae
mov
or
sbb
std
lcall
jne
lret
es
jno
stos
loop
adc
mov
repnz
mov
dec
and
fmul
aad
sub
stc
pop
sub
adc
xor
cmp
movsl
dec
pop
xchg
pop
dec
push
inc
lock
mov
and
adc
aaa
lods
push
xchg
iret
sub
cmp
loope
pop
mov
jnp
xor
scas
int
push
into
idiv
jmp
push
mov
sbb
repz
jns
add
stos
mov
mov
mov
repz
mov
hlt
cmp
adc
pusha
mov
div
xchg
cmp
js
clc
adc
inc
lock
fwait
je
je
jo
ja
xchg
clc
movntq
adc
sahf
add
jbe
or
pop
movl
sbb
adc
jge
mov
or
lcall
sbb
xchg
in
fcompl
mov
repz
inc
cmpsb
sahf
outsb
mov
scas
xor
push
sti
out
imul
insb
add
div
fwait
testb
mov
fwait
sub
sahf
int3
jns
mov
fidivrl
fdivrl
ficompl
andb
fldt
inc
ljmp
or
jae
push
lret
or
aaa
mov
rorl
pop
cmc
ror
jle
cmpsb
mov
adc
sub
pop
ljmp
testl
jle
sub
jb
pusha
loopne
clc
sbb
mov
xor
stos
adc
mov
mov
shll
jg
or
repnz
pop
fldenv
adc
push
subl
cmc
inc
cs
das
lret
test
jnp
add
dec
push
mov
jge
mov
xor
notb
mov
pop
lods
int3
loop
cmpb
or
xor
testl
sbb
mov
cmpsl
add
jp
movsl
cld
repz
out
sub
mov
or
je
mov
shl
lds
mov
lds
xchg
movntq
out
es
into
stos
mov
mov
je
or
cli
and
leave
pop
sub
in
dec
fildl
jb
pop
adc
jae
in
xchg
stc
fadds
movsb
icebp
jbe
mov
dec
dec
fimull
or
out
dec
repnz
pop
pop
ror
sbb
adcl
iret
jb
js
cmp
add
push
or
mov
fildl
jb
mov
push
cs
xor
push
stc
xchg
mov
arpl
mov
sbbb
clc
test
lret
and
js
dec
repz
adc
inc
inc
jb
push
divb
or
imulb
mov
popl
xchg
stc
jp
mov
mov
test
sbb
mov
movsl
das
call
lods
lock
pop
mov
mov
in
pop
add
fwait
icebp
and
dec
iret
sub
sub
add
push
das
repz
icebp
jns
fcompp
push
into
das
xor
aad
cmc
jle
pop
fwait
pop
pop
jns
das
aad
stc
sub
rorl
or
shll
mulb
icebp
inc
mov
mov
in
js
imul
fidivrl
mov
fimull
xor
lea
mov
sbb
stos
pop
pusha
test
repnz
cmp
adc
jecxz
adc
inc
mov
sub
add
sbbl
dec
or
or
lcall
out
lahf
xchg
ss
je
cmp
sub
sbb
icebp
sbb
mov
mull
gs
daa
jo
push
jne
cmc
out
test
adc
sti
sub
rcr
xchg
cmpsb
cwtl
mov
and
add
and
je
xor
fwait
jmp
pop
mov
xor
jb
sub
in
add
add
repnz
mov
cmp
addl
out
ljmp
xor
outsb
out
enter
adcl
lods
inc
push
call
jbe
lock
aam
je
mov
jns
adc
cmp
mov
push
leave
jns
jecxz
mov
sub
pop
stos
pop
fwait
testb
loope
dec
into
fwait
add
sbb
adc
rcll
imul
xchg
cwtl
mov
adc
popf
add
xchg
cmp
jb
mov
push
cmp
pop
lcall
insb
push
jle
sub
loopne
jo
mov
sub
xlat
loop
pop
jbe
pop
lods
stc
push
repnz
mov
mov
mov
sti
dec
adc
or
pop
outsb
iret
add
sbb
lcall
and
test
mov
or
out
ret
shll
push
jp
ja
test
adc
lahf
ds
or
hlt
jl
sub
call
mov
pop
mov
xor
jno
je
into
xor
mov
loopne
stos
inc
push
mov
cmp
repz
or
jo
cmp
push
fistl
jnp
lods
std
jne
ficoml
jle
fildll
xchg
fstpl
mov
dec
xchg
jae
push
adc
mov
hlt
insl
out
outsl
push
cld
aam
andl
movsl
ds
inc
aad
hlt
jmp
push
pop
mov
pop
hlt
cli
pop
push
jbe
inc
adc
xchg
mov
in
jne
adc
sbb
jmp
and
push
lea
shll
jmp
fisubrl
mov
int3
in
into
push
cmp
inc
cmp
mov
xor
sub
mov
lahf
cmp
cwtl
aad
int3
adc
add
enter
stc
fists
pop
repnz
nop
pop
adc
dec
cli
iret
adc
hlt
xchg
jg
loopne
rorl
icebp
popa
out
sub
call
fldt
js
cld
jne
jns
add
icebp
dec
mov
xchg
dec
jp
out
push
in
les
fstpt
loope
jno
shll
cmp
push
mov
push
dec
push
fdivrl
mov
fidivs
sbbb
dec
and
mov
lcall
out
repnz
pop
push
js
jge
sub
sub
dec
lret
test
mov
fistps
rcrb
orl
push
or
mov
jnp
sbb
xchg
lahf
in
pop
aad
mov
sahf
push
in
notb
xor
cltd
or
rcrl
fstps
mov
cwtl
filds
mov
push
xchg
mov
push
xor
adc
jl
inc
lahf
cmc
aad
cmp
pop
fwait
jnp
jae,pn
lods
xchg
test
in
ds
push
inc
push
icebp
ret
push
inc
fildl
or
outsl
cltd
mov
loopne
loopne
sbb
sub
pop
mov
pop
push
leave
mov
lods
add
pop
jno
mov
mov
and
sbb
out
mov
pop
je
or
movsl
push
test
insl
popa
test
ljmp
push
je
sbb
adc
int
popa
insb
stc
xchg
mov
int
bnd
mov
or
jb
testl
lds
mull
inc
jb
add
xor
adc
sbb
dec
dec
rorb
aaa
fisubrl
and
add
or
mov
loopne
adc
xchg
repz
or
aas
punpcklwd
jmp
fbstp
out
push
jae
adc
data16
pop
popf
outsl
xorl
into
push
xchg
lods
ds
push
inc
xchg
icebp
add
jecxz
cmp
jo
adc
dec
add
aas
aas
hlt
cmp
repz
rcll
shl
gs
jp
das
call
outsl
int3
push
adc
sbb
lock
xchg
movsl
xor
rol
out
pop
in
icebp
mov
repz
add
xchg
dec
xor
test
push
clc
icebp
add
mov
test
or
push
cmp
test
insl
fimuls
int3
shll
cmpsb
add
pusha
add
aas
or
inc
adc
jle
sbb
sub
and
mov
lds
jo
push
stc
addr16
testb
sbb
roll
lds
stc
push
or
cli
mov
mov
scas
test
cmpb
iret
int
pusha
mov
dec
fcoms
mov
aam
mov
mov
aaa
arpl
mov
in
imul
push
int
scas
jno
lods
popa
mov
xor
cmp
sarl
outsl
fsubl
push
popa
mov
and
shll
je
sbb
push
lods
mov
jbe
fisttpl
in
mov
dec
xor
jns
mov
sub
pop
fcomi
test
insl
cmpsb
sbb
xchg
mov
insb
lcall
shrl
fwait
gs
jne
xchg
pop
push
loope
cld
mov
shlb
pop
adc
push
icebp
xor
fldt
mov
jmp
push
sub
adc
lds
xchg
mov
cmp
lock
inc
repnz
stc
mov
mov
scas
mov
or
cmc
negb
int
or
lock
rorb
and
sti
int3
sbb
loop
icebp
ret
addr16
adc
cmc
mov
mov
aaa
push
xor
xor
push
inc
jno
and
jno
xchg
filds
push
fwait
or
push
jg
sub
mov
lods
cmp
xchg
lock
pop
xor
cwtl
aas
adc
push
cmp
adc
jnp
sub
xchg
stos
xor
insb
and
jb
stos
dec
rcr
mov
sub
push
imul
xor
mov
test
test
fadds
xor
adc
mov
lret
mov
push
dec
outsb
repnz
mov
testb
repnz
adc
loopne
adc
fnstsw
jae
test
mov
pop
bound
ret
in
mov
jle
mov
insb
roll
stc
das
shlb
icebp
mov
mov
jb
movl
add
xorb
sbb
dec
adc
inc
jae
lcall
sbb
int
enter
scas
mov
jl
push
xor
adc
sbb
xchg
mov
in
sbb
sti
adc
das
dec
jg
ja
stc
jg
xor
push
jns
cmpsl
test
rcll
stc
mov
xchg
xchg
mov
rcll
in
rorl
fs
cmp
xchg
xchg
ds
pop
push
xchg
adc
scas
mov
jl
add
bound
add
dec
stos
dec
idivl
fiaddl
das
mov
pop
mov
iret
inc
xchg
sbb
cs
in
push
scas
lock
ret
bound
lods
adc
pushf
adc
sti
add
repz
adc
push
pop
inc
cmpsl
gs
push
mov
aam
cwtl
add
add
lahf
mov
js
popa
fcmove
add
sub
int3
xor
repz
inc
sbb
movsl
rcrb
inc
mov
ja
nop
adc
daa
mov
push
or
ljmp
adc
cmc
fsubl
sbb
loope
rolb
mov
cmc
addl
ljmp
shl
cmc
fcompl
sbb
int
arpl
icebp
adc
out
push
xchg
add
in
outsl
dec
dec
xor
mov
gs
testl
mov
addr16
xor
jmp
imul
mov
pushf
push
mulb
out
xor
inc
pop
mov
and
adc
pop
inc
mov
xchg
aad
out
insb
mov
inc
cmp
int3
sub
xor
adc
sarb
scas
mov
lcall
xchg
out
aaa
cmp
pop
test
mov
fdivr
pop
ficomps
ja
xchg
ja
jns
shl
inc
mov
xchg
sbb
mov
iret
xchg
push
inc
int3
mov
insl
js
ja
inc
cmpl
push
aad
sub
roll
mov
inc
mov
bound
jb
stos
jne
icebp
cmc
push
or
sub
test
xchg
push
jmp
jp
test
repnz
outsb
mov
scas
arpl
cmp
jnp
ss
xor
fwait
outsl
push
xor
test
mov
scas
cmp
scas
jae
das
icebp
jb
test
xchg
lods
pop
jb
dec
mov
ss
ja
das
adc
xor
call
pop
mov
cmp
mov
scas
cmp
jno
dec
sbb
out
xchg
je
adc
pop
loop
mov
jae
repz
sbb
lea
pop
sbb
add
enter
or
scas
and
xor
ficomps
push
jbe
jo
ja
stc
inc
and
addb
out
inc
je
cli
add
enter
fnstenv
shrb
and
or
insl
push
shrb
mov
orps
shlb
mul
push
sti
iret
dec
bound
add
cld
or
test
xchg
add
inc
sub
push
add
cmp
testb
lock
fisubl
stos
lea
or
std
or
add
or
sbb
push
and
adc
and
mov
repz
xor
inc
mov
mov
cmc
das
xchg
mov
clc
add
mov
jo
testb
jg
shll
roll
dec
cmp
push
mov
scas
sub
add
or
xchg
shlb
mov
push
cmp
add
xor
sbbb
push
add
inc
stos
dec
nop
push
js
cmp
push
add
adcl
push
add
sub
ret
cmp
int
push
scas
adc
out
inc
sbb
jg
mov
lret
pusha
jge
xchg
scas
in
dec
jb
cmp
shl
shl
fildl
daa
sub
push
or
and
inc
cmp
adc
add
push
cmp
rorb
jmp
loopne
andb
cwtl
xor
clc
sub
xor
mov
cmp
adc
xchg
test
iret
addb
int
or
clc
pop
lcall
or
fisubrs
pushf
lcall
and
xchg
adc
in
insb
cmpsb
push
push
adc
mov
jbe
or
jo
js
jbe,pt
sahf
push
dec
mov
in
add
pop
addr16
dec
sub
and
lahf
cmp
loope
cs
jnp
add
cmp
test
jl
jo
scas
out
mov
push
pop
push
scas
jmp
pop
pop
mov
test
repnz
adc
popa
xchg
inc
int3
jnp
pop
inc
jp
mov
xor
test
icebp
jo
mov
jmp
rorb
daa
js
ret
cmp
or
or
out
inc
jp,pt
jb
loope
int
xchg
adc
cmp
xlat
ljmp
nop
in
mov
xchg
mov
rol
mov
repz
xlat
js
xchg
push
push
aam
sarb
movsb
mov
cmp
mov
xor
and
mov
and
aad
sbb
ljmp
outsl
fimull
leave
push
fildl
pusha
insl
mov
cld
push
and
divl
add
or
inc
das
je
jno
mov
push
outsb
and
sbb
popf
dec
xor
nop
icebp
repz
xor
jge
mov
or
cld
insl
in
js
rcrl
mov
push
iret
cld
mov
dec
sbb
movb
xchg
inc
gs
les
mov
pop
ljmp
movsb
jmp
jg
imul
xor
or
out
mov
sub
or
cwtl
push
sbb
les
insb
push
adcb
jp
pop
xchg
and
mov
jns
or
sub
or
pop
xchg
cmpsl
imul
hlt
and
sbb
call
xchg
pop
sbb
or
jb
pushl
icebp
out
jo
fidivrl
orb
scas
mov
fnstenv
jle
sub
and
jecxz
stc
nop
sbb
or
and
mov
aaa
fdivs
adc
mov
in
hlt
pop
mov
xchg
jle
icebp
xchg
and
sub
imul
pop
and
add
xor
add
inc
pop
imul
push
out
inc
call
test
ficoml
inc
js
clc
aad
punpcklwd
or
inc
flds
xchg
js
imul
outsl
adc
js
xor
push
push
xor
insb
dec
or
cmp
sub
jne
enter
cmpsb
push
imulb
xchg
jle
adc
outsl
push
and
cld
mov
push
rcr
repnz
imul
insb
mov
repz
jne
insb
test
leave
jmp
fsubrl
stc
clc
jge
inc
outsl
ss
adc
xchg
jb
ds
dec
or
mov
icebp
dec
dec
xchg
pop
mov
in
test
scas
ss
pop
mov
in
add
sub
scas
xchg
clc
lahf
push
adcb
ret
repz
pop
xor
pop
in
xchg
movsl
xlat
insb
xor
inc
and
adc
mov
das
xor
enter
or
aad
clc
xor
ds
fnstenv
rclb
dec
or
es
cwtl
hlt
inc
outsb
test
sub
inc
jo
xchg
adc
mov
decb
cmpsb
aad
test
push
dec
xorb
orl
jae
negb
aad
imul
in
fcomi
mov
adc
mov
pop
push
xchg
pop
push
cli
scas
bound
and
push
pop
or
mov
push
fwait
repnz
js
pop
push
or
in
jp
cmp
cmpsl
idivb
xchg
pop
adc
mov
dec
out
iret
mov
out
iret
xor
cmc
mov
clc
enter
cld
clc
lds
int3
xor
xchg
jae
stc
push
out
sub
sbb
sbb
and
mov
je
cli
and
sbb
jo
sub
mov
xor
xchg
push
jmp
xchg
add
push
imul
adc
in
or
mov
xor
andb
sub
sbb
inc
add
and
js
filds
mov
cmp
and
push
sbb
and
sbbl
cmc
rcl
out
fprem
inc
pop
mov
outsl
out
sub
shrl
mov
xor
xor
xlat
sbb
sub
loope
lock
xchg
mov
stos
sub
push
sub
push
lock
iret
sbb
repz
insl
stos
stc
xor
push
xor
mov
scas
enter
sarl
out
xchg
xor
iret
out
out
mov
ja
xchg
jb
or
lret
inc
dec
sbb
test
dec
enter
sti
xor
pop
jnp
aam
std
call
outsb
pop
inc
inc
dec
mov
js
xchg
pop
scas
scas
es
push
pop
pop
insl
mov
fldt
movsl
int
outsl
popf
xor
int
and
aad
fdivrs
call
jmp
adcl
jle
cmp
lods
lds
pop
xchg
mov
or
fidivrl
pop
and
xchg
push
popa
xchg
adcl
fstp
or
cli
sbb
jle
and
mov
movsb
ss
sbb
dec
xchg
aas
mov
sub
add
movsb
repnz
lret
xorl
jl
in
jp
cmpsb
mov
sbb
jmp
inc
mov
mov
mov
test
ss
out
pushf
mov
enter
in
or
ds
dec
sahf
xchg
in
mov
hlt
imul
jae
or
xchg
das
dec
adc
hlt
sub
mov
in
insl
fwait
repnz
ja
leave
cmc
fisubrl
adc
dec
hlt
mov
jl
jecxz
into
movsb
gs
scas
inc
sbb
repz
loopne
and
jns
dec
xor
add
cmp
pop
mov
and
add
idivl
mov
add
sahf
push
mov
nop
addr16
adc
repnz
lahf
lock
in
mov
stos
sbb
sub
outsl
adcb
test
jns
push
inc
dec
iret
mov
cld
mov
mov
adc
push
cmpsl
fistpl
dec
movsb
clc
das
mov
jecxz
cld
add
es
cmp
mov
sti
sub
jns
movsb
adc
addr16
clc
cmp
dec
pop
xlat
mov
stc
xlat
les
ljmp
add
lds
mov
xchg
and
ljmp
sub
iret
sti
push
sahf
nop
pop
es
aad
dec
push
loopne
scas
jae
cmc
int
cmp
loop
out
sbb
inc
scas
ss
mov
push
xor
dec
cs
ffree
lret
je
pop
loop
or
and
imul
push
dec
push
dec
in
or
inc
hlt
cmp
push
imul
xchg
hlt
cwtl
jp
jg
and
sub
sahf
leave
ficompl
cld
movsl
aam
iret
fiadds
je
or
sbb
inc
inc
scas
dec
adc
aaa
jl
shl
addr16
mov
or
cmp
xorps
adc
or
sub
jns
sbb
sarb
fists
arpl
and
and
xchg
mov
dec
test
daa
aam
jp
ljmp
lds
xor
hlt
lret
and
lea
loope
cmp
mov
lods
mov
push
pop
xor
xchg
repz
cmp
outsb
andl
out
jp
call
nop
adc
or
jg
add
sub
lea
xor
test
aad
and
in
jne
sahf
ret
jmp
mov
inc
pop
push
orb
pop
cltd
sbb
loopne
and
and
jle
popa
ja
inc
icebp
cmp
fwait
shrb
lret
xor
jbe
sbb
inc
loop
nop
fldl
daa
test
fs
imul
jns
push
inc
sub
rcrb
enter
xchg
cmp
iret
out
mov
mov
bound
jo
das
in
out
enter
or
addr16
repnz
imul
cmp
sbb
xchg
fsubr
movsb
stos
int3
loope
flds
jns
stc
repz
lret
ret
sbb
jg
or
push
sub
cmc
sub
sub
inc
dec
cmc
push
xchg
or
inc
lret
fnstsw
cmpl
xchg
xchg
jnp
js
in
in
pop
xchg
jl
inc
imul
dec
lods
or
les
add
out
outsl
xor
pop
sbb
dec
les
ljmp
xchg
jge
jno
add
xchg
mov
jne
enter
push
add
mov
mov
stc
rcrl
fistpl
sbb
dec
jb
dec
or
bnd
ret
sub
je
aad
and
in
push
fnstsw
inc
push
mov
jle
cmp
push
push
mov
lods
push
test
inc
dec
add
arpl
faddl
push
mov
push
fcom
loope
or
sti
aam
adc
push
bsf
add
and
test
sub
iret
push
into
pop
ficoms
jo
push
inc
and
insl
rcr
in
mov
addr16
jp
jno
int3
pop
add
dec
adc
push
lcall
or
mov
mov
sub
int
stos
lock
addr16
cmp
dec
enter
andb
jle
stc
adc
sbb
cld
xorb
dec
scas
gs
cli
mov
push
fstpt
test
gs
xor
sti
cld
hlt
into
jp
mov
out
ret
xchg
cmp
sub
pop
shll
fisubl
ds
jbe
lods
icebp
dec
int3
cmp
jne
xchg
xor
insl
clc
add
sbb
or
je
add
scas
out
jns
mov
stos
aaa
into
sub
adcl
sti
dec
int
inc
int
mov
adc
sub
adc
or
mov
or
jmp
std
and
cs
subl
test
outsl
test
cwtl
mov
lock
inc
mov
jge
std
and
xor
sarl
cli
adc
mov
mov
insl
push
and
jnp
sub
push
ja
imul
dec
ss
sbb
fwait
pavgw
push
cmpsl
pop
orb
icebp
stc
sub
mov
mov
cmp
ja
div
clc
rclb
clc
rcrl
cmp
or
sbb
jl
xor
int
push
xlat
add
jb
es
jmp
lcall
in
xchg
mov
in
pop
jp
lret
enter
mov
push
inc
sbb
xor
stos
movsb
lock
mov
sub
aaa
mov
inc
pop
xchg
cmp
xor
testb
sbb
fisttpll
daa
stos
inc
jp
rcl
mov
jb
pop
adc
add
lea
cmc
idivb
jno
jecxz
leave
mov
xchg
cwtl
jmp
mov
inc
xchg
jo
cmpb
jae
cmp
inc
mov
roll
xor
aam
xchg
movsb
call
lods
lock
cwtl
in
jae
test
push
ja
clc
in
or
adc
je
dec
mov
stos
pop
mov
jne
lret
mov
lea
or
fadds
js
inc
fs
mov
cmpsl
jns
lahf
adc
adc
ss
push
ret
jns
rol
push
jo
jge
jb
stc
dec
mov
stc
jae
insl
call
fsubp
lods
push
push
push
jae
inc
ret
stc
out
shl
stc
add
adc
add
testb
and
pop
mov
cmpsl
out
cmp
neg
andl
dec
shlb
jne
vhaddpd
repnz
test
cmpb
cli
mov
pop
and
call
adc
icebp
and
stos
and
arpl
ret
xchg
int3
fimuls
testb
fdivs
xchg
aaa
push
out
jns
fisubs
ja
jne
push
xchg
cli
and
push
xchg
and
jae
adc
mov
mov
jnp
out
dec
cmc
and
bnd
cmp
dec
int3
jae
adc
test
mov
add
xor
inc
or
in
repz
cmpsl
dec
fsubl
inc
pop
pop
shrl
ret
gs
pop
xchg
push
pusha
dec
push
mov
mov
notb
gs
pushf
insb
and
fimull
imul
cld
loope
push
lods
sub
mov
lea
loopne
sti
mov
popf
push
sbb
je
sub
data16
gs
pop
xchg
aas
pop
idivb
mov
mov
outsb
mov
pop
ficompl
inc
iret
bnd
rcr
dec
jne
add
mov
cli
inc
enter
dec
cmpsl
int3
cmpsb
ret
inc
shlb
adc
xor
and
inc
mov
das
adc
jae
sbb
jl
ja
pop
repz
jae
pop
cmc
pop
jnp
adc
sti
xor
std
ret
stc
mov
mov
je
xchg
sbb
mov
pusha
cmp
xchg
and
adc
fildll
sbb
or
outsl
jle
cmp
mov
inc
sbb
sbbb
dec
mov
sbb
jge
dec
div
cmpsb
in
adcl
and
xor
or
add
fimull
dec
testb
test
add
icebp
add
in
add
imulb
sub
xchg
jns
mov
iret
popa
mov
cmp
inc
mov
or
test
sbb
cmp
in
cmp
insl
shll
push
popa
xchg
add
sbb
mov
xchg
test
sub
mov
loop
add
xchg
add
mov
or
pop
cli
bnd
movsb
pop
inc
mov
dec
pop
mov
mov
adc
cmp
lds
mov
scas
jmp
loop
and
pop
jecxz
inc
inc
xor
repz
cld
cmpsl
mov
psllq
sbb
mov
adc
movsb
cmp
sbb
sbb
ss
cmc
in
dec
mov
sub
fwait
shl
ss
in
dec
std
ss
addr16
push
cmc
adc
mov
sbb
xorl
scas
push
outsb
cmp
aad
fs
pop
aad
scas
cmpsb
cmp
sbb
mov
push
out
aam
jl
cwtl
jge
and
iret
sub
fs
inc
cmp
stos
out
sbb
xor
mov
call
cld
inc
insb
int3
std
and
mov
xchg
sub
and
sbb
lahf
movsl
sarb
icebp
and
sub
les
js
cli
xorl
adc
cwtl
jecxz
sub
mov
mov
sub
cmpsb
pop
icebp
jbe
add
mov
sbb
iret
fwait
mov
iret
ss
fwait
mov
push
dec
andl
jns
cmp
push
out
inc
mov
jnp
dec
jl
cmp
mov
dec
pop
sub
enter
mov
aam
mov
mov
mov
cmc
hlt
sahf
stos
xchg
sbb
and
test
das
adc
js
lret
jns
and
icebp
test
adc
xchg
aad
les
imul
insb
adc
jge
in
es
mov
lea
bound
in
aas
pop
mov
jne
pushf
pop
mov
loop
das
fs
jae
xor
popa
lcall
adc
mov
jae
test
mov
xor
outsb
lock
cmpl
jnp
js
adc
test
fsubl
mov
fists
adc
mov
lds
add
daa
add
je
ds
push
jb
xor
sub
jne
mov
int3
imull
and
adc
sti
andb
add
inc
cmpsl
or
movsl
xor
mov
xor
psubsb
adc
jb
inc
dec
leave
mov
xor
popf
fcoml
mov
mov
sub
sbb
cli
or
xchg
push
mov
lea
jl
cmc
mov
adc
cli
scas
sbbb
sbb
jg
hlt
hlt
movsb
gs
lret
add
add
sub
mov
jl
sub
fidivs
or
jb
jp
mov
and
stc
or
fstpt
mov
mov
addb
sti
adcb
add
xor
fsubr
shlb
mov
inc
jnp
cmpsl
lock
cmp
and
and
and
cmp
xor
mov
xor
and
add
mov
pushf
shrl
divl
mov
enter
cmpsl
jp
cmp
pop
ret
hlt
or
xchg
out
lret
jns
fdivrp
test
or
jb
and
xor
push
or
add
aas
add
mov
std
add
outsb
or
xchg
inc
jp
popf
adc
xor
jmp
mov
call
jae
aad
adc
or
push
mov
xchg
out
aam
data16
sub
jae
xor
sahf
sti
mov
inc
xchg
sub
add
mov
repz
clc
cmp
cld
mov
repz
testb
ret
jg
or
add
mov
mov
add
out
iret
xor
adc
cwtl
dec
aad
ljmp
stc
stc
testl
xorb
or
ss
push
pop
pop
inc
jo
repz
inc
sbb
testb
inc
movsb
aas
xor
xor
adc
ret
sub
mov
cmp
inc
scas
shll
push
mov
repnz
push
jns
jge
jl
jecxz
inc
cmp
xor
lock
into
mov
int3
push
or
xor
ret
rcrb
jmp
and
xor
out
jmp
imul
scas
mov
mov
xor
mov
cld
fcmovne
xor
or
sbb
dec
test
mov
inc
cmc
mov
cwtl
and
inc
push
rorb
movsb
jl
pop
pop
inc
mov
mov
xlat
shll
mov
lods
sahf
xchg
pop
jecxz
sbb
jg
fucomip
or
pusha
decb
push
sub
pop
in
sahf
fnstenv
pop
repz
jmp
aaa
dec
incb
or
aaa
push
or
stc
xchg
add
cmp
enter
addr16
fildl
xchg
sub
rcr
or
insl
mov
push
repnz
repnz
nop
jbe
and
adc
out
adcl
loopne
test
push
pop
dec
xchg
cmp
and
dec
cld
and
stc
iret
sub
subl
jmp
push
aam
and
and
outsb
and
cmp
cmp
inc
stos
pushf
jecxz
push
cmc
lea
pop
jle
jnp
imul
arpl
fidivs
mov
arpl
sub
jbe
and
stc
adcl
sub
sub
arpl
repz
inc
dec
mov
or
into
aaa
or
xor
mov
in
mov
sub
bnd
neg
adc
add
xor
inc
cmp
mov
pop
sub
int3
mov
andl
cld
jmp
mov
xor
sbb
idivb
and
or
icebp
add
jbe
adc
je
movsb
std
mov
mov
outsb
dec
shrb
adc
sbb
push
int3
xor
rcll
in
clc
popf
sub
or
ja
call
inc
aam
mov
mov
out
sbb
and
mov
daa
mov
push
decb
mov
addr16
or
repnz
sub
inc
popa
inc
adcl
xor
mov
jle
xchg
and
cmc
loopne
jb
push
or
in
addr16
inc
inc
adc
inc
cltd
sbb
cmp
and
xor
mov
push
or
add
fwait
jne
aad
jp
add
mov
jo
popa
sbb
out
or
xchg
or
loope
dec
mov
std
mov
xlat
pop
xor
ret
adc
jmp
cmpsb
andl
ret
mov
aad
xlat
jo
pusha
lahf
hlt
adc
adc
subb
push
push
lret
xor
mov
cmp
lcall
imul
fwait
adc
push
outsb
push
add
bound
pop
or
or
inc
jg
push
pop
lret
testb
pop
out
aaa
idiv
xorl
xor
clc
add
jl,pn
fcmovne
mov
or
das
xchg
and
imul
add
test
add
mov
jae
cmpl
faddp
dec
cmp
jle
sbb
lock
movsb
jnp
mov
addr16
jg
adc
ss
scas
adc
loop
mov
ret
aad
fucomip
ss
mov
dec
xchg
mov
scas
aaa
inc
push
and
or
inc
jns
pop
cmc
push
or
leave
cmpsl
enter
movsl
mov
test
cmp
push
jge
js
sti
lret
jae
into
popa
xor
mov
xor
jp
in
jae
aad
mov
fwait
sbb
stos
inc
ljmp
sahf
jns
adc
jge
in
andb
ret
and
add
mov
lea
popa
rcl
push
rorl
mov
or
lds
mov
inc
jbe
scas
aam
push
pop
mov
mov
sahf
push
mov
xorl
or
out
mov
rcrb
xor
mov
push
push
not
sbb
xchg
mov
cmp
adc
pusha
cmp
shll
jl
jae
pop
das
popa
in
adc
outsb
aam
dec
add
out
pop
fidivs
test
out
pop
int3
or
rcrl
xlat
pop
das
mov
outsb
mov
adc
inc
mov
subb
push
cld
xlat
leave
pop
sub
cwtl
xorb
mov
xor
jp
mov
adc
std
loope
loope
std
adc
scas
mov
add
fildll
pushf
cwtl
push
test
mov
sbb
cld
mov
nop
int
icebp
arpl
bound
sbb
test
loopne
enter
sbb
jge
adc
push
inc
iret
pop
mov
cwtl
jnp
jae
xchg
pop
andl
adc
imul
fst
icebp
outsb
inc
or
or
rcrb
pop
sub
inc
pop
loopne
adc
loope
and
adc
repz
mov
adc
push
or
roll
pop
mov
fdivs
divl
mov
fistl
cmp
xor
in
jb
adc
mov
or
pusha
mov
shlb
pop
fistpl
insb
hlt
inc
mov
test
mov
cmp
sbb
adc
jo
sarb
mov
add
lcall
mov
push
outsb
jae
int3
mov
fs
mov
ja
mov
jae
pop
jb
dec
dec
pop
ja
mov
adc
dec
ja
pusha
jmp
and
and
shlb
xor
jl
testb
sbb
dec
xchg
xchg
inc
jnp
sub
mov
cmp
add
mov
pop
jmp
mov
pushf
xor
icebp
loop
inc
cwtl
xor
add
hlt
jmp
sub
jae
cmpsl
xor
or
js
inc
push
popa
fldcw
pop
xchg
and
fisttpl
pop
addr16
lock
xor
jge
jmp
adc
leave
xor
push
xor
loope
cmp
xchg
add
addb
outsb
xchg
cmp
test
jecxz
js
push
jle
pop
icebp
cs
pop
data16
pop
adc
inc
pushf
hlt
stos
xor
shlb
outsl
ja
in
jns
mov
jmp
jae
mov
fistl
mov
mov
mov
fucomi
mov
jne
lock
mov
imul
xlat
ljmp
insl
in
inc
pop
out
xchg
mov
push
adc
dec
mov
cmp
xorl
bnd
and
cmpl
and
push
adc
and
mov
sarl
sub
test
ret
dec
fcmovnu
push
arpl
in
xchg
cmp
adc
gs
jle
xor
imul
test
stc
loop
push
or
cmp
pop
sahf
jl
mov
mov
and
shrb
xchg
fisubl
xchg
push
inc
hlt
repz
loop
std
add
sti
adc
test
scas
xor
icebp
popa
scas
inc
hlt
je
inc
outsl
xchg
hlt
scas
xchg
shl
jge
push
and
and
fsubrs
xchg
mov
iret
push
je
jecxz
je
pop
iret
sub
fdivr
jmp
bound
mov
loope
cmp
mov
inc
enter
cmpl
rcrb
mov
mov
lods
sub
adcb
shl
mov
lds
push
loop
dec
rorb
xchg
and
fpatan
pop
fld
push
imul
divb
and
jne
pop
test
fimuls
mov
fbld
nop
in
lock
iret
mov
push
cmc
cmpsl
in
lods
in
insl
sbb
push
nop
popa
aas
xchg
jo
rcrb
jg
lahf
adc
idivb
push
cld
in
mulb
test
jge
dec
pop
ret
mov
mov
or
dec
sub
lods
out
and
cltd
cltd
int3
je
fbstp
fstps
inc
scas
pop
push
imul
sbb
jno
into
inc
xchg
inc
movsl
lock
adc
or
cmp
inc
mov
mov
call
roll
jb
enter
cmp
xchg
call
lret
jle
dec
push
iret
push
adc
icebp
cmp
adcl
xchg
cltd
add
pop
push
ret
out
mov
inc
inc
jb
popf
pushf
fmuls
lds
push
leave
pusha
scas
dec
dec
iret
popa
mov
mov
adc
outsb
pop
add
fldcw
inc
sbb
mov
movsl
in
and
sbbl
outsb
cwtl
inc
cld
popa
out
pop
dec
add
jne
ljmp
xchg
or
mulb
jbe
jb
push
fimuls
pushf
jl
or
sbb
cmp
dec
adc
fiaddl
lock
movhps
fiadds
mov
scas
js
dec
push
jp
int
clc
repz
or
mov
or
push
cmp
gs
dec
pop
cld
adcl
fimuls
and
cmp
xchg
jle
roll
repz
cmp
jae
jbe
iret
mov
dec
jmp
sbb
lods
add
cwtl
bound
in
inc
pop
cwtl
and
jge
stc
pushf
and
clc
mov
daa
test
scas
push
adc
pop
jge
lret
cmc
push
fidivl
shr
adc
mov
in
lds
idivb
nop
fdivl
in
jb
testb
repz
mov
sahf
xor
ja
push
clc
gs
movsl
mov
sub
enter
push
cmp
cmp
push
or
push
addr16
dec
loop
dec
mov
sub
cs
xor
mov
jno
int
mov
sub
fwait
xor
jno
fistl
lds
mov
cwtl
popa
fdivs
push
jne
xchg
scas
mov
xor
mov
xchg
sub
push
sahf
bnd
and
cwtl
lock
cmc
aam
frstor
pop
pop
out
aam
and
jge
clc
push
or
insl
cltd
lods
mov
cmpsl
fs
jae
repnz
fimull
jno
inc
ss
mov
dec
ljmp
xchg
adc
cmp
sahf
aam
fwait
add
mov
pop
sbb
jge
add
or
mulb
clc
out
mov
popa
orl
inc
cmp
add
jl
push
les
xchg
xor
xor
divb
loope
cs
divb
sub
and
push
and
sbb
jnp
dec
sub
push
cld
xor
ds
push
add
sbb
sbb
mov
jle
out
jge
dec
xchg
shlb
mov
movl
sbb
stc
repnz
mov
daa
mov
gs
cli
addr16
cmp
fwait
aaa
out
outsl
bound
adc
lock
lcall
lcall
push
adcb
inc
js
mov
movsb
rorb
bnd
pop
sub
sarb
push
sub
stc
cmpsl
jp
or
outsb
cmp
xor
repz
mov
test
daa
je
mov
and
push
es
adc
repnz
call
push
jg
dec
xor
out
cmp
mov
inc
sub
push
and
fdivs
mov
pushf
lods
dec
cmp
push
adc
sub
std
fsubp
lret
adc
sub
sti
add
aaa
push
stos
xchg
aas
nop
test
push
pop
sahf
mov
cs
mov
imul
add
aas
out
or
xchg
sub
mov
inc
cmc
mov
push
xor
insb
fldl
push
mov
repz
into
scas
mov
adc
pusha
mov
in
insb
cltd
mov
data16
and
mov
adc
push
sahf
int3
cwtl
clc
repz
mov
ja
sub
mov
divl
aas
popa
mov
adc
repnz
loop
cli
sahf
cli
xchg
int
fs
inc
cwtl
pop
cli
jbe
xlat
testl
jno
ret
mov
inc
fwait
pop
xchg
fadd
cmpsb
pop
adc
sahf
adc
pop
cmp
insl
data16
cmp
hlt
stc
adc
xor
enter
lret
notl
int3
in
repz
jle
and
ds
test
cmpsb
pop
xor
mov
cmc
and
mov
cmp
xor
mov
mov
push
cmpsl
and
popf
out
clc
dec
aaa
sbb
dec
or
push
ljmp
mov
sub
negb
lret
mov
std
pop
jle
addr16
mov
push
jbe
inc
sbb
ficompl
shlb
fisttps
stc
mov
jp
push
cld
xchg
xchg
xor
sbbl
inc
stos
add
pop
mov
mov
xchg
into
jb
mov
in
xlat
xchg
lea
jecxz
adc
es
lock
cmp
add
in
xor
lret
mov
add
inc
jp
fstpt
mov
in
cmpb
and
aaa
movd
test
std
add
popf
loop
xchg
add
or
test
inc
leave
pop
out
inc
ss
call
add
and
mov
mov
mov
shlb
push
lcall
pop
ljmp
pop
icebp
xor
jno
mov
xor
lock
mov
adc
dec
out
jo
testb
addb
cmpb
sbb
xchg
adc
movsb
int
xchg
bound
mov
outsl
mov
push
lods
dec
jmp
cmp
push
scas
adc
clc
mov
lods
fistl
xchg
mov
sbb
decb
dec
mov
stc
adc
add
pop
or
std
cmp
test
ss
ljmp
mov
cmp
dec
sbb
int3
loopne
or
mov
shlb
fisubrl
cltd
sbb
or
dec
jno
out
sarl
push
popa
add
and
out
add
jno
jo
jno
inc
scas
push
in
push
mov
inc
lods
cmpsb
aaa
repz
mov
mov
inc
xchg
mov
clc
lcall
and
jo
jbe
jno
cmp
ja
shrl
adc
xor
sbb
cwtl
and
inc
inc
add
ret
cmpsb
test
mov
ficompl
insl
imul
and
cmp
fdiv
test
test
insl
xchg
cmc
fidivs
int3
pop
or
pushf
rclb
rclb
push
or
bound
xchg
and
out
mov
shrl
pop
adc
add
ss
aad
inc
outsb
cmp
stc
jp
mov
pop
xor
test
call
adc
fcomi
into
inc
cmp
jle
leave
or
movsb
pop
ficompl
xor
or
movsl
loop
mov
and
mov
stos
loop
jns
stos
and
xor
in
outsb
sbb
xor
dec
shrb
test
push
sbb
testb
cmp
xor
aam
daa
out
jl
inc
loop
test
jle
adc
inc
inc
jne
gs
repz
jle
or
dec
insl
fsts
sbb
or
adc
mov
je
push
or
mov
stos
inc
sub
lds
out
ja
or
pop
sbbl
or
popf
lret
xor
push
lcall
pop
cmc
les
lret
dec
popf
rorl
fdivr
mov
lds
cmc
outsl
insl
and
sahf
lcall
mov
es
and
jge
mov
test
push
inc
mov
xchg
inc
mov
push
mov
inc
adc
loop
divl
xchg
jp
mov
sub
push
lock
dec
sti
mov
push
add
int
imul
push
cli
ficoms
cmp
mov
and
dec
adc
inc
repz
shl
cli
sbb
add
mov
xor
add
sub
imul
cmp
mov
and
popa
hlt
fwait
mov
je
test
out
lret
aam
pop
mov
sbb
movsl
addr16
xchg
fldenv
mov
xor
pop
jne
roll
lahf
or
pop
add
lock
rcrl
push
bound
sahf
nop
push
pusha
or
mov
ja
lahf
sub
jno
pop
sbb
stc
xor
dec
pop
pop
fstps
xor
sub
xchg
push
sbb
lock
push
outsl
mov
pop
and
repnz
adc
sahf
inc
or
scas
xorl
lahf
imul
jecxz
mov
cmpsb
call
pop
jmp
jg
notl
jl
sub
std
jmp
cmp
xchg
cld
and
notl
inc
jb
jbe
lcall
xchg
lods
gs
jl
in
andl
sbb
jbe
movsl
inc
adc
xor
cmp
cmpsl
adc
or
sbb
mov
in
push
fcmovb
sbb
push
jae
test
adc
pop
fidivl
adc
inc
cmp
adc
lcall
jbe
jo
xchg
test
test
inc
divl
jge
mov
adc
mov
cmp
stc
not
std
mov
lret
cmc
aam
das
jnp
mov
inc
cli
sbb
aaa
jge
cmp
mov
xor
pushf
pop
clc
fiaddl
std
mov
or
in
sbb
test
xor
jl
adc
mov
loop
inc
cmp
leave
cmp
and
fwait
sub
out
mov
push
enter
adc
ds
sbb
cmp
ds
mov
fucomp
test
mov
lcall
and
aas
cwtl
push
cmp
xchg
jle
in
and
outsl
cmc
insl
jmp
jecxz
mov
out
sub
jnp
addl
fstps
pop
push
dec
inc
xor
push
into
rorl
xchg
in
out
lods
mov
or
fsts
cli
add
repz
lret
and
jecxz
sbb
push
lock
dec
xor
cmp
loop
hlt
lret
lock
imul
push
scas
int
test
jmp
add
adc
aas
mov
mov
jbe
jnp
adc
dec
outsb
lods
mov
xor
mov
mov
je
ficoml
push
cmp
jnp
movsl
lds
jno
inc
sbbl
xor
std
xchg
enter
icebp
das
fisttpll
repz
lds
dec
stos
aam
wrmsr
mov
in
jle
test
sbb
cltd
add
jecxz
sahf
mov
lods
cmp
pop
jnp
inc
and
cwtl
pop
lds
adc
test
jno
loopne
fucomip
adc
and
pop
test
jle
jg
clc
mov
test
add
jecxz
cmp
push
enter
push
adc
jmp
adc
out
mov
fidivrs
js
push
xor
pop
mov
mov
adc
pop
daa
push
adc
pusha
xchg
push
cmp
inc
je
jb
movsb
or
notb
sti
movsl
or
mov
fistpll
xor
test
stos
inc
lods
fistpll
and
cmp
jno
inc
xorl
icebp
xor
movsb
add
pop
test
lret
jno
sbb
stc
xchg
cmpb
push
xor
cli
cmpsb
add
push
or
lods
pop
or
mov
xor
mov
je
mov
mov
ja
jl
adc
popf
jno
pop
incb
inc
inc
pushf
mov
inc
popa
fidivrl
mov
lds
pop
jnp
xchg
xchg
and
inc
sbb
stc
imul
mov
movsb
clc
lahf
or
pop
cmp
mov
divl
dec
pusha
loopne
ficompl
jg
cmp
and
pop
push
test
sbb
cmp
or
shlb
cwtl
mov
or
push
js
push
push
xor
jle
repz
stc
jae
ja
mov
cmp
mov
pop
jmp
hlt
lods
jne
das
cmp
push
cwtl
icebp
mov
jge
out
jmp
mov
data16
add
ret
hlt
mov
idivb
js
jb
insl
xor
jbe
cmp
sahf
lret
in
or
aam
cli
jmp
mov
je
jb
and
cli
bound
push
ljmp
popa
adc
stc
outsb
mull
cld
js
adc
fs
cwtl
add
pop
jno
pop
mov
sbbb
fs
and
lds
leave
mov
into
and
mov
lock
sub
popa
xchg
inc
inc
int3
scas
jne
mov
out
movsb
push
mov
aad
cmp
icebp
push
testb
cmp
push
inc
mov
sbbl
xchg
sub
mov
pop
or
out
jp
jmp
push
mov
lock
push
sbb
push
dec
and
adc
int
push
xchg
popf
les
js
sub
add
xlat
sbb
push
pop
inc
incb
or
test
xchg
cmp
arpl
cmpsb
pop
shlb
stc
hlt
or
mov
ja
test
add
lods
mov
inc
in
in
stc
iret
push
ret
icebp
clc
stos
adc
jmp
daa
es
mov
cmp
hlt
dec
fmulp
rorb
addl
push
mov
dec
push
sub
call
popa
gs
xchg
xor
sbb
inc
out
pop
jnp
xlat
or
lock
into
xlat
inc
mov
jns
jno
jnp
fldl
jb
jne
ja
repnz
push
push
jne
jne
pop
sarl
leave
hlt
xchg
mov
addb
stc
jno
mov
xor
push
dec
negl
add
xchg
ja
unpckhps
jecxz
jp
adc
fcoml
jnp
ss
lea
jmp
cli
xor
test
sbb
adc
jle
nop
imul
push
pop
iret
pop
xchg
pusha
dec
cmc
cmp
fnstenv
cmc
gs
adc
or
inc
mov
dec
loop
bnd
sbbb
adc
sbb
mulb
ja
idiv
sbb
test
icebp
inc
mov
mov
adc
movsl
gs
pop
hlt
hlt
stos
mov
jge
orb
repz
popa
push
inc
mov
lock
test
or
inc
xchg
mov
bound
and
in
push
ret
lods
mov
sub
movsl
jne
pop
fs
insl
pusha
sahf
xchg
sub
jne
jnp
mov
mov
lcall
fbld
push
sub
sub
js
stos
xor
loopne
or
cmp
hlt
daa
cmp
add
hlt
inc
add
fisttpll
jl
test
rcrl
pop
ret
sbbl
xor
out
inc
lahf
cltd
bound
out
leave
mov
lock
add
inc
out
call
fsubrs
je
xchg
std
jae
std
xchg
cmc
inc
lods
sahf
sbb
mov
jmp
mov
aas
adc
mulps
lods
decl
jb
lcall
ret
sub
pop
sbb
ficomps
xchg
dec
repnz
sbb
and
call
rol
dec
adc
cmp
adc
sbb
xor
mov
inc
cmp
jae
sbb
fsubs
imul
sub
fwait
mov
add
add
scas
ret
out
inc
add
cmc
clc
out
icebp
jp
inc
rcr
inc
dec
push
mov
push
lock
cmp
cmp
mov
rclb
js
fxch
mov
lret
push
movsb
rcl
icebp
lods
jnp
xchg
mov
gs
and
adc
bound
aaa
mov
hlt
jp
push
adc
xchg
jmp
adc
movsb
mov
cwtl
cli
adc
scas
pop
fs
inc
mov
xchg
push
arpl
or
xchg
inc
dec
out
push
pop
sarb
lods
jnp
lods
inc
push
in
dec
jb
xchg
sub
jle
enter
jne
aam
fisttpl
xor
pop
repnz
adcb
add
push
fimull
subb
sbb
cwtl
jo
fwait
lock
icebp
push
mov
stos
ret
xor
push
clc
xor
jmp
popa
push
push
hlt
mov
inc
mov
aaa
rorl
mov
or
rcrl
pop
outsl
pop
and
adc
sbb
xor
dec
filds
jg
mov
rcrl
ja
push
sub
adc
iret
sub
adc
sbb
cmp
adc
mov
inc
mov
repnz
jg
and
cltd
test
dec
ficompl
cmp
cmp
jp
dec
pusha
and
sahf
dec
sub
adcl
push
into
jae
adc
cmp
sub
xchg
mov
imul
ret
push
xor
jle
mov
mov
mov
jle
mov
ds
mov
pop
mov
ss
sbb
fistl
out
push
jg
mov
jns
add
jns
pop
adc
arpl
or
out
mov
cmp
test
scas
adcb
pop
iret
and
pop
lds
inc
sbb
push
push
pop
jo
icebp
push
xchg
mov
jle
push
dec
jno
push
int
adc
sbb
stc
pop
sbb
jno
repz
in
push
push
dec
cmp
and
mov
test
and
or
sub
movsl
loop
or
and
xchg
pop
pop
jo
hlt
pop
outsl
push
dec
arpl
dec
sbb
lods
add
scas
daa
movsl
mov
lcall
sbb
sti
pop
out
mov
addb
enter
or
cmp
xchg
fimull
flds
test
jnp
imul
movsl
mov
leave
inc
jae
jbe
xchg
pop
cs
fstpt
lcall
mov
sbb
test
add
test
or
rclb
cs
mov
clc
iret
cli
pop
or
sbb
loope
or
xchg
imul
xchg
clc
pop
sbb
sbb
and
ss
testb
xor
and
or
xor
in
xor
pop
push
mov
or
out
scas
test
pop
jecxz
sti
cs
in
push
xchg
out
and
outsb
repz
aas
or
xchg
push
adc
lea
in
ret
outsl
leave
xchg
ss
lcall
outsb
adc
and
jecxz
add
int
data16
jmp
lock
pop
xor
repnz
popa
int
mov
lret
xor
js
jp
sbb
and
scas
pop
add
shll
movsb
jle
dec
push
cmpsl
jne
aaa
inc
test
mov
sbb
sub
frstpm(287
pop
sbb
or
sbb
fs
adc
push
or
in
xchg
cmp
or
loop
out
lds
movsb
jnp
mov
fdivr
add
sahf
xor
xor
push
fidivl
aad
jae
out
fidivrl
mov
cmp
sub
xor
sub
test
loop
shl
js
push
jle
jns
mov
fidivl
ds
in
iret
stos
outsb
mov
mov
sub
movzwl
push
out
mov
cmp
insl
sbb
orb
lods
bound
cmpsl
jg
sub
push
jnp
test
xchg
repz
mov
sarb
or
pop
add
xchg
mov
add
jo
adc
inc
andps
or
jno
pop
cmp
cmpsl
fidivrl
xorb
imull
addr16
sub
mov
jb
push
leave
sahf
pop
and
cld
stc
mov
stc
orb
push
mull
and
rcll
jo
je
fstps
test
push
fwait
ss
inc
adc
jbe
xor
insl
cmp
mov
stc
sub
and
stc
cmp
mov
cmpsl
xchg
jb
imul
lcall
bound
mov
mov
jns
xor
lret
in
mov
pop
mov
add
out
jae
xor
dec
rep
test
jl
xor
cs
outsb
mov
dec
lcall
push
test
addr16
and
mov
sahf
mov
cmp
out
fidivrl
push
shrb
and
std
adc
frstor
jb
test
cwtl
lock
xor
mov
push
gs
sub
mov
fwait
in
cmpsb
in
or
pushf
fiaddl
mov
test
scas
xor
jnp
fisubl
fcmovne
std
cmp
repnz
imul
popa
fcmove
js
mov
movsb
pop
or
dec
xchg
imul
jmp
stos
ret
cli
sub
or
cwtl
fs
mov
mov
gs
inc
jle
int
mov
pop
cmp
iret
mov
cmpsb
xchg
jl
jno
add
and
and
adc
inc
xchg
loop
dec
mov
out
jbe
adc
inc
aad
adcb
and
stos
fwait
sub
mov
lret
jo
push
fimull
push
mov
mov
cmpsb
imulb
add
dec
jp
push
je
xor
jle
add
mov
or
xor
xchg
and
xor
gs
std
xor
add
xor
std
mov
sbb
int3
mov
cs
jb
out
mov
pop
andb
or
lods
popa
sbbb
out
imul
and
push
or
or
jg
in
mov
mov
stos
jg
mov
dec
mov
and
int
jbe
addr16
xchg
dec
es
enter
push
scas
add
xor
inc
repz
inc
push
clc
jo
mov
ficomps
dec
cwtl
mov
adc
div
sub
push
dec
dec
imul
outsb
leave
dec
sub
repnz
and
mov
out
mov
mov
mov
mov
cmp
jmp
outsb
inc
mov
adc
scas
ret
and
mov
insb
mov
xchg
popf
xchg
loope
pop
pushf
scas
cmpl
fadd
aam
lcall
pop
jo
inc
xchg
add
jle
xchg
or
mov
andb
mov
ret
add
push
sarl
xchg
dec
hlt
out
mov
orl
mull
cwtl
jno
mov
add
lock
cmp
adc
mov
aad
sub
or
repz
push
xchg
xor
in
lret
dec
les
jb
mov
add
out
cmp
push
jmp
ljmp
mov
push
aas
add
dec
dec
mov
mov
cmpsl
jl
jp
rolb
sahf
lock
imul
fsubrs
sub
inc
packuswb
lods
xchg
adc
xor
ffree
cmp
dec
imul
repz
repz
nop
or
sub
dec
rclb
daa
outsb
js
jle
aaa
test
in
add
mov
and
mov
xor
insb
add
ja
adc
std
add
andl
popa
fcmovu
aaa
add
dec
add
popa
xor
push
repnz
lcall
sbb
xorl
je
cmp
hlt
cli
lcall
inc
fprem1
xchg
lods
mov
out
icebp
dec
das
mov
mov
outsb
push
mov
xorl
lods
adc
adc
adc
cmp
fwait
mov
sub
aad
ja
adcb
sub
cmc
test
lret
or
sub
sub
add
dec
mov
xchg
not
daa
jmp
ljmp
in
xlat
or
xchg
jecxz
mov
out
and
je
mov
mov
dec
lock
call
dec
cmp
mov
jp
mov
sbb
adc
adc
or
dec
mov
out
std
xor
sarl
in
xor
rcrl
inc
in
xchg
add
aam
cltd
sbb
scas
jno
jbe
push
imul
fs
and
enter
and
insb
mov
inc
lock
sbb
sahf
mov
or
push
in
jle
xchg
dec
addr16
gs
adc
push
scas
test
call
dec
push
shll
push
xchg
and
and
repz
ds
fistpl
rolb
sbb
jecxz
lea
sbb
repz
aas
cmpsb
jnp
leave
dec
mov
push
xchg
cmp
sub
add
cli
adc
adc
loopne
sbb
push
adc
xor
mov
ficoms
jle
mov
sub
repnz
mov
pop
jne
cs
mov
lcall
push
out
iret
loop
mov
xor
out
fadds
add
or
rcrl
fnstsw
mov
lret
push
sub
sbb
push
cwtl
adc
dec
xchg
js
pop
jo
jno
mov
push
jns
mov
sahf
sub
jo
adc
test
adc
push
sub
icebp
mov
jb,pt
pop
push
push
call
or
insl
or
sbb
testb
outsb
cs
dec
cmp
and
pop
cmp
sbb
xor
push
or
in
cmp
push
xor
mov
mov
dec
test
mov
mov
outsl
rorl
mov
shlb
arpl
mov
push
ljmp
popf
mov
xchg
jnp
decb
fcmovnb
cmp
jg
lahf
jp
cld
out
push
or
jno
jmp
pop
leave
out
shrl
cmp
and
inc
lods
stos
jecxz
movsl
cmp
cmp
movsl
adc
sub
rcrl
inc
cli
aad
jb
stc
or
inc
adc
sahf
fcoml
sbb
xchg
mov
pop
or
cmovs
cmp
lea
mov
fdivr
addb
push
fiaddl
dec
cli
or
pminub
jne
add
adc
enter
mov
cmp
push
sub
and
jle
and
fiaddl
jno
enter
cmpsb
xor
push
lret
adc
test
dec
cmp
and
xchg
jle
jle
xchg
pop
and
cmp
loop
outsb
add
push
insb
hlt
adc
lahf
inc
sahf
ja
cld
or
or
inc
ficompl
push
xor
pop
pop
fbstp
push
or
sbb
jb
or
shlb
test
cltd
mov
push
rorb
icebp
jno
imul
add
xchg
test
fadds
and
cmpsl
pop
int
imul
loope
mov
ljmp
sahf
leave
lea
dec
andb
dec
xchg
pop
jl
popa
cld
out
lods
testl
scas
jns
and
call
popa
add
push
and
not
js
idivb
mov
repz
inc
movsb
cmp
adc
sub
or
movsl
jno
divb
roll
jl
js
mov
lods
out
mov
push
ljmp
mov
jge
xchg
rcrb
cld
mov
cwtl
shll
mov
adc
repnz
pop
pusha
cmp
mov
mov
mov
push
cld
sarb
std
sbb
xchg
out
xor
pop
dec
ss
xchg
repnz
divl
test
push
incb
mov
hlt
sahf
scas
out
dec
je
push
scas
push
test
mov
jb
fnstenv
sbb
mov
xlat
sbb
inc
call
fs
inc
mov
out
xor
mov
add
and
shll
scas
adc
rcll
pop
repnz
adc
push
sahf
and
push
sub
inc
mov
xlat
sub
clc
xlat
push
cwtl
cwtl
outsb
pop
mov
pop
inc
int
jb
mov
sub
xchg
loop
sti
jp
xor
dec
icebp
orb
mov
jl
mov
out
mov
popa
lahf
pop
sub
xchg
lcall
xchg
cmp
gs
adc
jle
jp
sub
sbb
pop
test
xchg
jmp
lods
xor
lret
push
or
xor
inc
sbb
push
push
adc
mov
lock
loopne
insl
adc
pop
adc
and
imul
std
pop
shll
cwtl
rcr
imul
sub
fwait
cltd
jb
pop
mov
cwtl
jae
sbb
mov
test
add
cmp
mov
lods
sarl
lret
js
fdivrs
jno
pop
pusha
sahf
test
dec
repz
arpl
roll
hlt
pop
pop
mov
xchg
fnstcw
popa
loopne
pushf
jl
adc
jo
jae
fwait
divl
mov
cmp
mov
adc
jb
in
nop
mov
mov
or
fistpl
shl
adc
add
dec
or
mov
movsb
sahf
nop
decb
add
add
jle
ss
mov
pop
jg
int
mov
or
push
xor
jo
fldt
xchg
mov
adc
fs
adc
add
sbb
dec
ja
adc
sbb
push
cmp
pop
icebp
mov
xchg
mov
or
mov
jmp
mov
or
fldcw
add
cmp
jno
cmp
add
les
adc
push
or
in
clc
inc
push
icebp
xor
xlat
push
cmp
cmp
push
jp
xchg
movsl
adc
mov
jecxz
cmp
sahf
nop
ss
xor
mov
jo
daa
sarl
and
mov
inc
dec
sbb
mov
or
mov
cmp
push
sub
pop
and
scas
sbb
jge
pop
pop
enter
jb
sti
pop
ss
js
push
stos
xchg
js
stos
cmp
push
scas
ret
or
push
push
push
inc
cli
clc
push
cs
dec
mov
adc
jbe
clc
addr16
jp
cmpsb
mov
outsl
jg
call
sbbl
pop
aam
fbld
sub
jp
out
scas
js
ljmp
add
iret
cmpsb
jnp
psubsb
xchg
adc
and
mov
sub
jnp
call
ret
add
test
addl
jecxz
push
pop
sbb
and
outsb
fcmovu
hlt
inc
hlt
nop
mov
sub
push
rcrb
cmp
ds
cmp
das
adc
cwtl
push
pop
cmp
adc
and
mov
into
or
dec
cs
sub
pop
je
xor
or
mov
ljmp
ja
lcall
cmp
jp
mov
cmp
push
outsl
lcall
loop
repz
dec
test
popa
cltd
ss
daa
jbe
rcll
and
jp
icebp
add
in
or
jae
cwtl
daa
cmpsl
lcall
push
or
dec
add
mov
add
mov
and
fiaddl
cmp
jo
scas
xchg
adc
pop
mov
adc
cwtl
cwtl
jmp
lea
adc
lods
loope
and
sarl
das
jno
addl
or
mov
testb
sahf
or
jne
jl
mov
ja
faddl
pop
and
fstps
or
insl
scas
stc
dec
arpl
xor
inc
lret
mov
mov
sbb
adc
jae
fs
xor
repz
flds
and
jbe
sahf
cmp
loop
test
cmp
or
inc
cmp
fstpt
push
pop
jno
pop
xor
sbb
aam
jo
and
pusha
mov
sub
ss
mov
cmp
xchg
dec
xlat
and
push
and
and
jno
insl
loop
mov
fsubp
adc
xor
clc
repnz
inc
stc
fwait
xor
cmp
xchg
push
push
cmp
jb
inc
or
jo
sub
fdivr
or
mov
xchg
cmp
cmpsl
arpl
lock
mov
lock
fcomi
cmpsb
jbe
xor
repnz
lcall
repnz
fstps
adc
cmp
sbb
push
popa
aaa
mov
mov
out
stos
jnp
mov
jl
fidivs
sti
pop
jge
pop
jae
jp
push
ss
mov
or
sarb
mov
sbb
jns
test
dec
jno
je
rorb
push
adc
dec
jns
fsub
scas
add
pop
cmp
add
in
icebp
jno
or
sbb
xor
test
adc
add
test
mov
icebp
adc
testl
sub
dec
repnz
stos
insb
push
hlt
lret
inc
push
add
sub
push
dec
popf
pop
imull
push
mov
popf
push
stc
or
and
pop
push
sbb
or
xor
addb
out
mov
push
pop
mov
inc
add
fcmovnu
inc
or
rorl
xor
inc
movsl
sahf
inc
insl
adc
mov
pop
push
std
stos
push
popa
fcmovb
into
sbb
and
repnz
outsl
and
mov
add
sbb
enter
subl
jno
jmp
inc
shlb
cbtw
ss
stc
adc
or
or
adc
sahf
inc
stc
cmp
pop
xchg
cmc
adc
enter
inc
sti
imul
sub
and
aam
cmpsl
imul
and
jge
xor
insl
shl
in
in
xchg
lcall
cwtl
inc
decl
push
xchg
dec
xchg
adc
cmp
pop
lods
mov
sahf
xor
test
into
fdivrs
cmp
scas
fnsave
test
jno
or
jl
aad
lret
dec
jae
push
jno
pop
mov
sti
ds
xor
repz
and
pop
xor
mov
mov
rcrb
pop
jo
jg
pusha
dec
adc
sahf
dec
xor
sub
std
aam
das
xor
int
es
out
test
sub
mov
jb
int
add
xor
test
add
jmp
rcrb
dec
jns
pop
repz
jmp
ljmp
dec
call
pop
sbb
pushf
scas
add
xchg
ss
stc
adc
pop
push
inc
jae
repz
cmp
cltd
mov
and
jae
int3
imul
mov
xchg
add
arpl
icebp
pusha
int
cmp
push
mov
fnstenv
outsb
push
and
jno
cli
lcall
repz
cs
lahf
int
xor
jns
jae
lcall
push
sub
insl
jo
lock
pop
repnz
add
pop
cld
repz
adc
pop
push
pop
and
repz
pop
pop
pop
rcll
sub
shl
cmp
lods
xchg
ret
cld
mov
lds
mov
adc
data16
mov
mov
push
lea
fadds
scas
das
mov
aas
xor
repnz
jmp
insl
mov
mov
fstps
jmp
dec
or
popf
pop
popf
inc
test
fmuls
cwtl
out
adc
push
add
xor
and
repz
cmp
mov
stc
jecxz
push
or
pop
mov
mov
push
jg
subb
adcb
jo
pop
mov
sarl
push
addb
inc
and
mov
push
push
ror
cmp
andl
xlat
or
add
ja
pop
inc
fpatan
jecxz
push
push
ss
lcall
out
pop
jmp
pop
or
pop
and
enter
pop
mov
fists
outsb
sti
jo
out
dec
mov
sbb
cmp
bound
rorl
push
xor
dec
loop
mov
xchg
push
mov
fs
pusha
sub
js
div
or
dec
addb
push
popa
stc
ds
mov
mov
sub
ds
out
xor
in
fisubl
cmp
sub
push
iret
jbe
insl
push
loop
sbb
inc
or
repz
xor
sar
mov
rcll
or
outsl
xor
add
sbb
jl
adc
sbb
js
push
cmp
sub
cmpsb
aas
sti
into
js
inc
fdivs
outsl
mov
push
out
pop
cmc
in
pop
mov
scas
and
cld
int
mov
cld
xchg
in
gs
pop
adc
lcall
xlat
mov
add
cltd
out
stos
hlt
lcall
and
jo
push
add
call
out
pop
sub
in
adc
mov
daa
xrelease
mov
inc
sbbl
add
mov
inc
pop
mov
test
inc
aad
icebp
cwtl
movups
jnp
call
cmc
add
sbb
in
lods
or
sub
iret
data16
dec
movsb
leave
ja
or
lahf
js
mov
loopne
push
adc
movsl
push
sub
icebp
popf
jb
lods
in
cmp
and
mov
icebp
or
pop
jb
dec
into
xchg
push
xchg
js
je
icebp
push
cmp
mov
es
mov
pop
sub
jne
sbb
pop
in
hlt
mov
dec
mov
sub
iret
shlb
adc
std
push
jl
adc
clc
dec
and
xor
out
jb
adc
in
xor
clc
mulb
mov
and
clc
inc
and
xor
js
dec
and
xor
and
je
and
xor
js
add
add
lds
dec
and
xor
js
mov
inc
xor
jne
ja
clc
clc
mov
js
inc
and
inc
je
clc
or
adc
gs
jae
adc
js
mov
je
clc
andl
xor
js
or
into
adc
test
bnd
clc
js
cli
xor
js
add
add
inc
je
clc
dec
and
xor
rep
js
mulb
jp
jge
inc
clc
add
add
dec
and
mov
xor
je
clc
ja
enter
adc
je
clc
aas
and
or
adcl
arpl
jno
adc
or
xor
mov
sbb
jno
adc
je
stc
adc
jae
mov
xor
and
pop
icebp
jp
divl
repz
shl
mov
pmaddwd
lcall
jae
leave
adc
xchg
push
ficoms
add
ss
mov
into
inc
adc
icebp
shlb
xchg
int3
iret
pop
shll
xchg
aaa
cmp
sbb
pop
xchg
std
mov
jl
xchg
xchg
pop
jne
cmp
jb
and
xchg
std
div
sbb
sarl
lret
aas
pmaxub
repnz
xchg
adc
pop
std
add
clc
imul
xor
ss
out
aam
in
stos
jae
cmp
stos
jecxz
sbb
adc
popa
xor
push
cwtl
hlt
cltd
dec
mov
jp
clc
cmp
ret
jmp
jle
ds
pushf
sbb
sub
mov
sbb
pop
mov
dec
mov
adc
jns
jge
mov
das
stc
push
sbb
aaa
repz
pop
jmp
mov
mov
mov
pusha
dec
mov
popf
pop
fnstsw
xor
icebp
fidivrl
int
shll
cmp
or
hlt
insb
pop
jno
sbb
jg
lret
sbb
push
int3
pop
xor
test
pop
xchg
xchg
add
mov
negl
out
dec
loopne
cmp
stc
pop
les
sub
cltd
sbb
mov
mov
mov
popf
mov
cmc
xchg
pushf
xchg
fnstcw
mov
xchg
jae
in
popf
xchg
mov
js
push
and
jbe
movsb
cmp
orl
push
sbbl
or
clc
jb
jbe
inc
pop
pop
cwtl
sti
and
push
adc
negl
inc
aad
icebp
rcl
jl
repz
addl
jl
aam
orb
sbb
mov
repz
jge
cwtl
cmp
or
clc
cltd
cmc
cmp
dec
jne
icebp
cmp
mov
and
pop
xchg
xchg
xor
xor
mov
xor
adc
icebp
dec
jge
xchg
mov
mov
lret
repnz
stc
mov
pop
dec
sbb
lock
mov
xchg
je
sbb
repz
or
pop
fldl
adc
decb
jns
ds
sbb
js
jb
jl
rorl
decb
cmpb
fldl
jae
fcompl
jae
jp
repnz
or
mov
int3
hlt
orl
dec
fnstenv
cwtl
xor
enter
js
addr16
jnp
leave
stc
jb
idivb
clc
jno
push
adc
mov
fdivrs
xchg
xor
sbb
or
dec
xor
xor
mov
jp
pop
mov
push
mov
pushf
jp
sbb
je
mov
jo
repz
or
and
sub
sub
add
ret
mov
sbb
out
je
xchg
jbe
and
jge
jae
stos
xchg
push
test
testb
adc
popf
sub
jns
xchg
inc
inc
data16
add
push
xchg
jl
sub
nop
pop
push
fwait
pop
push
cmp
fstpl
sbb
mov
je
fstpt
loope
hlt
sti
mov
cmp
addr16
mov
hlt
mov
test
repnz
ficompl
rcrb
pop
cmp
out
add
iret
push
adcb
fidivrl
cmp
pop
std
fsubs
xor
inc
in
stc
mov
je
cli
fstps
out
push
add
out
cmp
add
je
cmpb
addr16
or
jl
jae
out
dec
clc
pop
adcl
dec
dec
push
aaa
push
jbe
ret
jb
mov
dec
sbb
popf
ja
push
flds
jb
sbb
outsl
je
add
std
add
lcall
dec
add
jns
aas
pop
push
jl
mov
xchg
push
shl
xchg
sti
dec
mov
fidivl
jg
stc
pop
xchg
je
cmc
add
movsl
jnp
pop
fwait
inc
stos
jge
jb
xchg
loop
push
xor
movsb
bound
mov
je
jne
loopne
adc
adc
or
jg
daa
ds
mov
mov
ljmp
int
mov
jl
push
jge
mov
mov
pop
mov
stc
jns
flds
loope
and
pop
push
push
sbbl
lcall
push
add
mov
jp
jne
clc
xlat
jg
xor
cmpsl
cli
or
jge
fdivrl
xor
mov
hlt
fdivs
dec
ja
cld
mov
mov
je
and
sbb
or
and
hlt
fwait
and
lods
mov
and
testl
lret
insb
dec
aas
popa
adc
hlt
fimull
jecxz
jno
cmp
or
cltd
sbb
enter
notb
cs
inc
dec
pop
lea
xor
repz
loope
push
lcall
push
movsl
pushf
div
andl
repz
fcmovu
add
adc
sahf
cld
cmp
sbb
jle
xchg
push
mov
js
mov
xchg
adc
notb
mov
pop
xchg
scas
in
test
cmc
mov
sbb
lods
sbb
lods
std
pop
std
jmp
jb
cli
rcrl
cmp
pop
sahf
jnp
push
arpl
add
xchg
jb
movsl
mov
adc
jp
imul
or
cmp
mov
dec
test
sbb
xorb
lret
stc
movsb
xor
dec
cmc
mov
and
js
mov
fwait
std
mov
pop
adc
jae
js
pop
fildl
inc
push
jne
pop
clc
aas
mov
and
clc
js
sbb
insl
repnz
adc
mov
lods
pause
aaa
and
icebp
xor
and
or
adc
xor
xchg
std
fisttpll
fcoms
pop
jae
pop
imul
aam
xchg
jp
hlt
dec
inc
insb
mov
cmp
mov
sub
mov
xor
pop
xor
mov
inc
dec
pop
rclb
mov
or
repz
test
shl
rclb
cmp
mov
adc
int3
push
sub
xchg
mov
xchg
mov
sti
push
mov
sbb
inc
mov
push
lock
pop
or
dec
or
pop
test
cmp
xor
ds
cmp
inc
cmc
mov
mov
je
mov
js
loop
adc
mov
aad
cmc
aas
jnp
sub
cli
enter
mov
lods
loopne
clc
sbb
push
loop
aaa
rcrl
xchg
push
jns
je
lahf
aad
pop
lret
cmp
xor
cwtl
mov
cltd
push
cmp
mov
hlt
ja
or
mov
cld
xchg
bnd
jle
mov
xor
cmpsl
adcl
jle
dec
mov
loopne
sub
inc
mov
mov
jnp
inc
mov
xor
dec
push
in
pop
testb
sbb
xor
daa
aaa
icebp
dec
sbb
dec
push
lock
push
cmpsb
xor
cmc
ds
mov
pop
hlt
out
xor
xchg
mov
or
lds
or
popf
ret
mov
pop
sub
jp
ficoms
mov
pop
xchg
test
jbe
enterw
mov
pop
std
jne
mov
into
stc
lods
fyl2x
push
ds
frstor
mov
cmp
sub
mov
stos
fldenv
mov
adc
cmc
xchg
mov
pop
sub
mov
and
mov
bound
icebp
idivb
push
or
mov
dec
or
jbe
cmc
repz
jbe
pop
pop
xchg
mov
scas
aaa
push
push
iret
or
scas
js
out
shr
cmc
mov
cmp
fcompl
movsl
ljmp
ds
out
je
popf
imul
dec
lock
sahf
loopne
aaa
daa
mov
and
lcall
sbb
ja
rcr
mov
xchg
add
xchg
std
nop
jno,pn
mov
xor
hlt
mov
xor
mov
jo
sbb
fdivl
std
sahf
cmpsl
je
ds
sti
add
mov
sbb
mov
cmc
and
jle
jae
ds
pop
sub
jb
repnz
add
or
fstl
jecxz,pt
test
cmp
sahf
push
mov
cmpsb
adc
fisubrs
pop
cld
lret
ss
mov
push
mov
popf
stc
aas
movsb
pushf
lods
sbb
les
push
sahf
dec
and
mov
inc
pop
cld
mov
cmpsb
mov
and
xor
cli
fwait
cmc
xor
popf
and
fdivrl
cvtpi2ps
push
jecxz
or
in
lea
sbb
sbb
add
pop
fnsave
and
js
or
je
icebp
repz
mov
js
fdivr
inc
rol
fidivrl
pop
inc
loopne
jle
cltd
setns
cmp
aad
xlat
lcall
fcompl
repnz
rdpmc
dec
dec
cmp
inc
repnz
std
xor
xchg
movsb
xchg
pop
popf
cmp
or
pop
das
rcrb
test
ds
jae
fadds
imul
add
aaa
jle
xlat
adc
fstp
mov
mov
and
fcoms
ja
inc
out
push
adc
sub
jae
jp
mov
jns
mov
fstps
pop
xchg
mov
fcmovu
int
stos
icebp
fistpll
sbb
xchg
cmp
jns
das
fldln2
in
ja
sbb
sbb
mov
outsb
dec
mov
cwtl
mov
sbb
loopne
clc
jae
into
stc
movsb
repnz
jecxz
in
sbb
stc
rcr
pop
repz
and
repz
cmp
into
out
scas
fmuls
pop
jmp
repz
iret
int3
cmp
movsb
repz
mov
add
andb
outsb
jb
sbb
add
arpl
mov
movsb
mov
js
hlt
sub
imul
pop
mov
fidivrs
flds
aaa
sbb
cli
clc
test
cmp
mov
add
pop
cli
and
pop
loop
sbb
inc
adc
pusha
jne
sbb
xchg
adc
jnp
mov
dec
cltd
cmc
mov
cltd
lcall
cmc
test
push
or
mov
cmp
sbb
xchg
aas
fildll
shl
adc
add
stc
clc
dec
cmp
sub
mov
fadds
inc
adc
imul
dec
js
dec
aas
negl
fidivrl
pop
pop
add
sti
mov
stc
and
jns
jae
mov
sbb
mov
mov
jmp
mov
cmp
scas
mov
add
mov
lret
inc
adc
jo
add
jmp
scas
jbe
jge
pop
or
add
cwtl
insl
cltd
adc
or
or
or
sbb
jle
inc
mov
mov
loope
mov
andb
and
jp
adcl
js
cmp
fdiv
cmpsl
shlb
rol
sti
pop
xchg
push
lret
mov
jl
push
inc
int3
movsl
imul
je
jle
mov
cmp
stc
or
mov
and
rolb
jae
bound
loop
cmpsb
cmc
jne
cmc
mov
jae
flds
mov
addl
lock
test
rcrl
push
jnp
popf
pusha
mov
sub
sub
js
idivb
jo
stc
clc
xor
xchg
mov
inc
inc
sbb
mov
cmp
dec
cltd
or
negb
scas
push
cld
cmp
mov
xor
pop
adc
mov
fs
jae
mov
push
popf
mov
mov
mov
cmpsb
push
mov
adc
mov
xor
mov
xchg
hlt
cmpsl
cmp
pop
je
mov
aad
clc
push
test
inc
add
cmpsl
loop
mov
stos
mov
in
mov
insb
stc
pushf
mov
js
mov
mov
stc
push
stc
ds
je
mov
test
xor
loop
in
add
mov
lds
repz
pop
inc
adc
mov
mov
movsl
fs
jae
js
jge
je
lret
out
fisttpll
insl
insl
push
cltd
cmp
mov
inc
push
mov
cmp
daa
jbe
mov
cli
pop
movsb
jg
push
jecxz
inc
push
rep
cmc
cltd
leave
pop
je
movsb
jmp
movsb
inc
adc
ja
pop
lods
xor
sbb
negb
push
ss
mov
sahf
push
mov
lcall
stos
mov
cwtl
jbe
mov
stc
mov
or
das
and
jae
outsl
lcall
jp
mov
in
or
test
icebp
mov
sbbl
in
xchg
mov
lret
ja
je
or
fimull
outsb
out
mov
insb
ficompl
pop
cmp
sti
jb
ljmp
mov
sbb
mov
jle
ja
mov
in
lea
push
gs
jnp
call
pop
inc
and
lcall
add
ja
mov
imul
in
jp
xchg
add
fcomps
fstpt
xlat
mov
pop
mov
popf
int
jns
jae
mov
je
jae
push
ficomps
mov
ja
sub
repz
outsl
dec
jecxz
repz
jns
je
mov
cmp
xchg
fdivrl
hlt
cli
push
cltd
mov
lods
cmp
push
or
inc
test
cmc
mov
popa
add
stc
flds
sub
js
xchg
add
insb
or
clc
mov
pop
stc
jns
pop
movsl
mov
adc
test
clc
repz
push
mov
or
bound
and
jb
inc
cli
cli
leave
ret
pop
lret
je
ljmp
je
daa
inc
pop
jno
sub
cwtl
adc
mov
mov
cmc
push
fists
jg
daa
cmp
cmpl
xchg
shll
dec
sbb
add
movsl
add
and
leave
cmp
lcall
jne
div
clc
cmp
movsl
lahf
iret
addb
inc
pushf
aas
push
das
daa
cld
imul
idivb
stc
sub
stc
data16
mov
jl
pop
stc
push
fmull
mov
jge
aam
bound
lea
jecxz
jns
in
cwtl
mov
cmp
xchg
or
xor
mov
add
aam
mov
cmp
mov
mov
mov
xchg
or
loope
xchg
dec
aaa
bound
jo
mov
xchg
out
je
cmp
fdivs
dec
xchg
cmp
pop
mov
bound
mov
cmp
jns
js
in
pop
sbb
xchg
into
inc
jae
mov
bound
jns
fxch
adc
imul
push
sbb
cmovbe
cmp
movsl
daa
ds
movb
and
sbbl
adc
aam
sarl
dec
sub
clc
fdecstp
pop
insl
pushf
mov
inc
icebp
mov
movsl
push
stos
mov
repz
stc
fcomps
loope
cld
das
xchg
sub
orb
or
fadds
xchg
ficompl
les
jae
popa
sarb
jae
fcoms
sbb
dec
cld
mov
cmp
mov
xor
shll
jae
pop
js
xchg
hlt
imul
stc
sbb
gs
outsb
cmp
mov
xchg
jae
xlat
icebp
clc
jbe
jns
dec
and
scas
inc
jg
scas
dec
pop
sbbb
xchg
or
std
and
mov
pop
ja
jns
mov
je
xorb
in
je
bnd
xchg
jb
pushf
cli
fmull
mov
gs
clc
sbb
cmp
xchg
fmulp
popf
aad
jbe
test
clc
and
pop
push
hlt
lcall
sbb
stc
jns
es
mov
cwtl
add
sbb
add
test
repz
aaa
sub
or
xchg
and
lds
test
cmpsb
mov
inc
loop
imul
jecxz
and
sarl
jl
push
add
mul
xchg
addb
popa
adc
cmp
mov
rorb
pop
stc
movsl
hlt
xchg
push
mov
in
push
adc
out
mov
jns
ret
jo
cwtl
pop
ja
pop
clc
hlt
xchg
and
cmp
sbb
adc
mov
subb
rcr
xchg
jbe
lret
dec
fstl
push
in
insb
mov
je
dec
jbe
addb
sbb
ds
sbb
lds
sbb
fs
cmc
cmp
mov
dec
shlb
gs
pop
sub
mov
je
sbb
cli
adcb
jnp
xchg
out
push
ja
data16
adc
mov
dec
jnp
cld
xchg
xchg
test
sbb
test
add
out
out
cs
adc
fnstenv
or
jbe
or
rep
push
fs
push
mov
adcb
and
sbb
push
xchg
add
mov
andl
mov
push
leave
fadds
mov
xchg
stc
add
hlt
push
cltd
dec
ret
pop
jmp
jle
lret
lock
pop
and
pmulhuw
sahf
lcall
inc
sar
mov
jg
add
inc
sbb
std
aad
fistpll
js
or
pop
xor
mov
mov
sub
rclb
sub
clc
jae
inc
int3
pop
outsl
pop
jmp
xchg
arpl
icebp
xchg
fisubl
pop
push
jae
dec
loop
cld
push
mov
bndstx
cld
pop
pop
dec
test
sbb
push
mov
dec
mov
cmp
sbb
push
fs
mov
sbb
jno
pusha
xchg
aad
xchg
jne
enter
mov
pop
jecxz
cs
repnz
adc
pop
les
push
loopne
fcomps
inc
out
outsl
mov
xchg
push
lods
jmp
pop
add
lods
popf
bnd
inc
jl
jle
mov
or
movsb
and
popa
cmpsb
mov
xchg
mov
cmpsb
or
xchg
pop
dec
lret
cli
add
pop
popl
add
fildl
cmp
movsb
in
dec
add
cvtdq2ps
pop
add
dec
mov
jp
icebp
jae
sbb
xor
out
mov
sub
push
mov
lea
loop
test
sbb
jmp
adc
jnp
pop
sbb
cmp
add
xchg
pop
fwait
test
clc
popf
repnz
insl
cmp
test
push
dec
ficoml
mov
leave
cmpsl
and
push
js
inc
test
sbb
out
clc
xchg
mov
imul
jp
imul
dec
pop
out
mov
sbb
adc
dec
and
and
cmpb
arpl
jne
mov
ljmp
movsl
test
std
test
mov
pop
mov
mov
cmp
xchg
inc
fsubrs
cmp
lahf
add
add
movsl
push
sub
xor
jnp
sbb
sub
cmp
lods
das
fcomps
mov
lods
js
subb
sub
fnstcw
xchg
dec
or
and
pop
mov
xchg
cld
insl
push
inc
adc
cmp
adc
sub
cmpsl
pop
xchg
ficomps
lcall
mov
sub
xor
mov
sbb
jae
pop
ja
jp
addb
aam
icebp
mov
imulb
mov
push
cmpsl
movsb
repz
addl
cld
xchg
fstps
add
cwtl
cmp
jb
cmp
and
aaa
repnz
and
iret
xchg
adc
xlat
popf
pop
dec
xchg
add
dec
mov
movsb
inc
loop
orb
adc
mov
cwtl
repnz
sub
clc
lret
lock
sbb
ja
xchg
clc
xchg
dec
xchg
ret
repnz
mov
mov
cli
cld
mov
fdivr
adc
and
loop
js
jae
ss
stos
jbe
pop
repnz
clc
pop
sub
xor
sub
test
xchg
jecxz
mov
mov
js
hlt
ret
mov
outsl
addl
jb
mov
test
mov
test
push
jmp
jle
stos
mov
stc
xorb
sbb
mov
int3
jb
adc
adcl
fistpl
xchg
ficompl
dec
mov
pop
jne
xor
lcall
fucom
in
ljmp
or
sahf
cmp
repnz
dec
mov
or
mov
cmp
jl
lods
mov
subl
mov
or
inc
sbb
mov
cwtl
mov
cmp
lret
push
ds
adc
mull
out
ffree
push
repz
icebp
xlat
jle
mov
fnstenv
bound
mov
nop
xor
cmp
pop
in
xchg
lret
inc
xor
lds
mov
mov
test
xchg
stc
mov
cltd
jno
pop
int3
sbb
mov
scas
cmpsb
push
cmp
mov
in
xchg
push
aad
cld
ret
xchg
xchg
nop
and
jno
stc
hlt
jecxz
movsb
inc
jb
cmpb
cltd
jns
add
mov
mov
mov
push
stc
cmp
mov
pop
lahf
lock
sbb
mov
pop
sbb
pop
mov
outsb
xlat
jbe
out
sub
mov
xchg
sub
push
mov
jge
and
cld
pop
pop
mov
cmp
cmp
js
jl
jbe
pop
cli
mov
dec
dec
push
leave
jne
lods
and
and
cmp
add
jns
fimull
sarl
or
mov
mov
ret
pop
sbb
push
pop
inc
ficompl
hlt
xchg
push
sbb
pop
sub
mov
inc
jne
stos
shll
cld
lods
xchg
jg
fwait
mov
mov
and
or
xchg
cs
jmp
mov
negl
jg
pop
pop
cld
repz
lea
fstl
out
cld
jnp
addr16
sub
sub
dec
in
add
add
dec
ljmp
and
repnz
add
jae
cmpl
js
outsb
out
imul
repz
adcb
jle
dec
ss
inc
inc
fwait
and
outsl
sbb
dec
out
cld
mov
ja,pt
mov
sub
loope
pop
clc
or
imul
fdivrl
xchg
mov
inc
inc
inc
xchg
push
negb
loop
inc
mov
dec
jle
sbb
and
and
jne
mov
fcmovnb
sbb
mov
out
add
test
mov
push
jp
sub
ljmp
movsl
hlt
into
es
sub
in
out
ret
add
adc
cmp
jg
jp
je
xor
cmpsb
xchg
test
cwtl
sbbl
stc
ret
ss
test
imul
mov
adc
movsb
aaa
cmp
std
arpl
pushf
lods
cwtl
data16
in
mov
mov
push
mov
pop
inc
sti
push
xlat
and
push
xor
jl
mov
pop
cli
sub
or
push
fcomps
cmp
pop
sbbl
inc
mov
jo
sbb
clc
jo
hlt
cmp
pop
dec
cltd
mov
sub
lcall
mov
dec
pop
fldcw
cmp
cld
out
mov
cmc
out
lds
lea
out
cld
pop
cmpsb
dec
mov
sbb
std
movsb
repz
jbe
vcvttpd2dq
mov
dec
aas
push
scas
jnp
repnz
mov
addl
rcll
repnz
cmp
adc
cmp
jne
mov
mov
and
cmp
lods
orb
mov
jae
mov
cmp
loope
add
pop
test
out
jae
insb
jecxz
or
push
aam
inc
jae
fidivl
loop
push
adc
xchg
pop
push
ja
xchg
mov
shl
dec
and
pop
repz
test
xchg
jns
inc
ja
icebp
xchg
das
jg
notb
xchg
dec
out
icebp
add
shrd
pop
addr16
cmpl
loopne
mov
leave
mov
dec
orl
idivl
and
inc
mov
aad
sarb
dec
pushf
jg
pop
mov
pusha
adc
out
dec
into
mov
movsb
ret
xchg
inc
js
push
mov
cmp
push
adc
pop
add
arpl
int
stc
dec
lcall
xchg
repnz
bound
shlb
jns
ret
push
inc
xchg
or
fdivs
cmpsb
jae
andb
add
cmc
in
fxch
xor
inc
movb
sbb
cwtl
xchg
pop
bound
pop
lret
cmpsb
movsl
repnz
dec
int
movsb
cwtl
ds
xchg
xchg
movsl
arpl
cmp
fcomps
adc
adc
mov
jnp
jle
jae
push
jnp
cs
enter
jne
ja
xchg
mov
jo
mov
push
mov
fnstcw
jb
jnp
inc
repnz
shlb
add
iret
xchg
lods
xchg
xchg
ret
cmpsb
xchg
cmp
outsb
mov
and
test
or
stc
dec
jecxz
push
fadds
daa
sti
fdivs
push
movsb
aad
dec
sbb
sbb
jl
imul
xchg
in
shlb
dec
hlt
lret
fists
ficoml
or
push
mov
jae
les
mov
in
pop
adc
lret
clc
pop
xchg
lods
scas
popa
std
cltd
mov
mov
test
ljmp
imul
or
pushf
data16
in
inc
pslld
js
or
sbb
mov
mov
mov
loopne
stc
outsl
into
push
pop
mov
cld
mov
repnz
hlt
inc
cmp
push
sbb
push
jg
dec
icebp
movsb
jmp
in
cmp
mov
lret
cmp
loop
repnz
push
cli
or
aaa
sub
pop
inc
mov
xchg
push
cmp
scas
pop
jge
icebp
mov
mov
jp
hlt
pop
movsl
and
xor
cmp
repnz
aas
sahf
or
movsb
repz
fidivl
gs
xchg
jae
push
or
mov
inc
ds
fwait
mov
cmp
dec
ss
lret
dec
inc
lahf
mul
mov
pop
hlt
lods
repnz
sbb
aad
add
clc
out
hlt
sbb
loop
arpl
xor
or
repnz
orl
idivb
in
outsb
lds
test
ja
out
test
xchg
imul
ljmp
inc
xor
add
je
fwait
sbb
je
jbe
in
cli
sub
jle
rcrb
ret
clc
jae
inc
rclb
int
mov
mov
lret
mov
mov
push
or
jbe
and
mov
lret
sbb
aas
jle
inc
add
stc
and
push
call
test
repz
jae
repz
negl
and
sbb
xchg
popf
lods
add
lea
sbb
inc
aam
xor
insb
jnp
sahf
fidivrl
xchg
mov
pop
push
pop
dec
hlt
fsts
jbe
repnz
lea
scas
xchg
repz
adc
in
adc
adc
aad
mov
add
xchg
mov
bound
dec
rcrb
mov
xchg
adc
mov
ret
xchg
jbe
adcb
or
or
aas
pushf
daa
pop
cld
scas
xorb
icebp
jns
cmp
lret
mov
push
xchg
adc
dec
sti
cmp
mov
repnz
mov
fsubr
mov
add
scas
ss
pop
mov
mov
pop
outsb
lea
movsb
jg
pop
sbb
mov
test
imul
dec
mov
inc
in
mov
mov
sub
cmc
lcall
and
mov
dec
jb
loop
jle
outsl
test
or
jns
sbb
js
fstp
lock
clc
mov
shlb
add
movsl
aaa
jp
add
popa
std
fcmovnb
or
punpckhdq
loope
cmp
inc
jle
inc
or
js
mov
cs
dec
pushf
mov
mov
cmp
lods
push
test
fcompl
das
ficoml
mov
dec
push
repnz
sbb
mov
dec
insl
fwait
mov
out
je
push
add
dec
add
ret
test
inc
es
cmc
ds
jae
lret
mov
sub
repz
cmp
aad
cli
sbb
jne
jle
sub
cmp
fstps
stc
xor
dec
push
imul
xor
negb
stc
and
test
adc
ficomps
gs
jp
sbb
pop
mov
pop
xchg
pusha
inc
lock
mov
andl
jg
outsb
cwtl
mov
or
mov
bound
mov
jp
dec
fucomi
xchg
jbe
add
mov
out
imul
mov
outsb
lcall
lods
out
mov
xchg
mov
sub
sub
dec
or
lods
push
and
pop
dec
sbb
js
dec
pop
jle
lret
push
xchg
test
clc
repnz
jbe
sbb
or
lcall
jbe
movb
cmp
testl
push
jae
lahf
les
jae
mov
sbb
repz
jl
aam
imul
dec
cltd
clc
repz
repz
fidivl
mov
mov
clc
loop
push
xchg
xor
mov
mov
sub
shl
movsb
push
repz
mov
movsb
stos
mov
clc
cli
movsl
adc
jle
xor
xchg
jae
repnz
fcmovnb
icebp
inc
pushf
mov
clc
sahf
adc
scas
sarb
test
je
xchg
popf
popa
inc
data16
adc
xchg
cmp
sub
cmp
in
sbb
jp
cmp
sbb
sbb
dec
jl
icebp
jns
push
lahf
into
fisubrl
pop
mov
dec
lret
lcall
add
push
pop
dec
xor
nop
xchg
pop
cld
mov
mov
mov
xchg
xchg
aas
push
jne
inc
inc
lret
movsb
xchg
testb
out
aam
mov
repnz
leave
mov
mov
addb
xchg
sub
hlt
aas
mov
mov
mov
jge
mov
jb
sbb
popf
push
test
sub
jmp
and
in
or
inc
mov
cld
push
cmpsb
data16
insb
stos
mov
lret
lock
and
jnp
xor
int
sub
dec
jne
mov
cwtl
lods
push
pop
ret
aas
pop
or
fwait
daa
pop
imul
pop
int3
cmp
sbb
fldln2
pop
repnz
inc
cmpsb
sti
lds
movsl
stc
xchg
cmp
popa
push
sub
testb
add
cmp
mov
cmp
lods
push
jno
fs
ljmp
pop
pop
mov
mov
in
pop
movsb
push
sbb
cwtl
jb
leave
popf
xchg
cmp
mov
sub
inc
jecxz
sbb
shrl
ljmp
mov
sub
or
sub
insl
pop
add
lods
jecxz
clc
and
add
repz
cwtl
decl
jb
subb
out
cmp
xor
mov
xchg
jg
cli
mov
repz
or
jb
movsb
pop
xchg
pop
fsts
ds
adc
add
mov
fisubrs
lret
add
les
jno
fwait
mov
mov
mov
mov
imulw
push
jne
aad
repz
jl
loopne
xchg
push
js
js
call
pushf
cmpl
popa
pop
fiaddl
inc
ljmp
add
and
jns
fldl
lcall
pop
or
sbb
fisubl
jnp
sarb
dec
test
daa
pop
and
in
jp
or
hlt
cmp
add
xor
add
add
mov
dec
fildl
xchg
rcrl
inc
mov
cmp
dec
fiaddl
xchg
outsl
pop
inc
adc
pushf
clc
sbb
mull
adcb
bound
pop
add
outsb
jle
jb
jle
dec
push
mov
push
jle
leave
hlt
popa
pop
gs
in
xor
add
mov
and
mov
mov
mov
inc
jo
pushf
add
fwait
mov
cmp
out
adc
test
int
frstor
stc
in
cmpsb
ficompl
ljmp
push
bound
mov
and
adc
aas
mov
je
lcall
in
ljmp
sub
cmp
fldcw
daa
loope
xchg
push
test
mov
xor
loop
imul
mov
dec
add
jmp
pop
jge
lea
push
and
into
mov
mov
xchg
arpl
gs
scas
popf
jnp
fidivs
pushf
ja
arpl
xchg
and
fbstp
add
fcomps
jecxz
pop
mov
les
pop
hlt
sbb
sub
test
dec
jbe
and
push
mov
jp
movsl
mov
add
sbb
jb
dec
mov
fldenv
dec
cltd
out
xchg
cmp
movsl
xor
ret
loopne
movsb
fsubrs
pop
stos
movsl
xor
xorb
mov
in
popf
add
bound
mov
fisubl
jmp
sbb
lahf
repnz
xchg
lock
fstpt
jbe
mov
aad
js
mov
out
je
push
add
lcall
xchg
paddq
test
mov
dec
cmp
popf
jns
add
popa
cmp
push
addw
inc
test
sbb
jg
movsl
jmp
or
mov
rcrb
sbb
cmc
adcl
lods
pushf
je
repnz
das
bound
imul
imul
mov
sbb
addl
mov
inc
sbb
test
sbb
push
andb
pop
fstps
in
cmpsb
xchg
sti
loopne
sbb
jbe
xlat
neg
dec
mov
lods
mov
sbb
movsb
popf
jns
jmp
rorl
frstor
inc
dec
push
ss
jne
in
cld
fcomp
fnsave
scas
mov
pop
cmc
inc
int
mov
sbb
outsb
mov
pushf
cmc
xchg
out
iret
stc
push
cmpsl
jnp
sub
pop
dec
icebp
flds
mov
lock
push
pop
clc
test
cmp
jp
je
jae
xchg
divl
sub
pop
adcb
adcb
mov
xchg
popl
movsl
push
ljmp
push
nop
aad
neg
iret
mov
sub
and
pop
das
add
fldt
in
repz
mov
movsb
xor
fwait
int3
mov
xor
jns
sbb
pop
addl
pop
jb
ficompl
push
cmpsl
aas
jecxz
xlat
mov
cmp
push
sub
xor
test
jnp
push
cmp
jae
adc
mov
push
aas
fiadds
stos
and
sti
pop
dec
lret
jns
int
addl
push
out
repz
inc
jle
sub
push
sbb
jp
or
lds
sbb
test
sub
sub
inc
ds
movsb
mov
loopne
sbb
loop
repz
mov
adc
cmp
jbe
das
mov
xchg
cmc
mov
jg
push
mov
stos
aad
xchg
movsb
repnz
in
ss
bnd
scas
stc
mov
repz
cmp
out
jg
dec
fwait
inc
mov
ljmp
das
scas
inc
lock
cmp
cmp
ret
jno
jae
jle
jl
and
xor
div
jecxz
cmp
pop
movsl
pop
mov
jb
das
pop
cltd
aaa
mov
or
jno
fs
out
adc
insb
int
lret
mov
movsl
lcall
lods
popf
ret
in
leave
repz
and
test
and
ds
ds
mov
icebp
xchg
cli
iret
pop
jb
mov
jnp
mov
jb
cmp
repz
nop
mov
aam
jno
xchg
cmp
xchg
adc
mov
jns
push
inc
adc
ret
jne
cmp
pop
adc
outsb
and
and
icebp
popf
mov
repz
adc
cmp
jb
iret
xchg
cmp
jb
push
imul
in
push
adc
aam
adcb
out
fwait
jns
mov
inc
pop
ss
mov
or
jp
cs
repnz
push
lea
movsb
mov
out
jbe
icebp
sbb
test
inc
xchg
push
cmp
cmp
lods
mov
shll
jp
aaa
jae
fs
cmp
rcrb
mov
fwait
and
cltd
dec
jnp
test
mov
fadds
aam
or
shlb
cmp
ret
cmpsl
pop
or
bound
or
cmp
imul
jb
xchg
and
push
mov
cmp
xor
mov
sbb
adc
icebp
jmp
and
repnz
and
push
add
mov
or
add
outsl
adc
mov
add
adcb
pop
xchg
jno
call
nop
jno
mov
or
hlt
cmp
and
push
std
sbb
icebp
fdivrs
push
inc
mov
jb
nop
lea
jne
jmp
add
xchg
xor
adc
std
mov
push
icebp
mov
adc
cli
xor
js
mov
jne
shlb
lock
mov
mov
push
xor
and
jns
mov
jne
adc
js
idivl
je
clc
xchg
and
xor
js
shlb
jl
bnd
clc
adc
je
repz
adc
or
and
mov
add
js
jl
push
in
idiv
fists
and
xor
inc
repz
jl
jo
and
clc
add
shlb
js
jnp
adc
add
xor
cwtl
push
dec
je
js
pop
lock
and
xor
js
shll
adc
adc
xor
divb
push
je
clc
jb
jo
xchg
repz
mov
and
xor
and
xor
js
jle
push
xor
jae
js
xchg
xor
js
jb
rcll
sbb
repz
clc
adc
pop
xor
js
push
and
je
cli
clc
xchg
and
mov
jae
add
or
adc
xor
js
add
xchg
xor
adc
stc
clc
xor
cmc
aas
and
jo
lock
nop
and
fistl
push
xchg
push
stc
push
addl
lret
mov
adc
ja
pop
repz
je
fnsave
mov
fst
or
lret
mov
adc
ja
pop
jg
push
jnp
xchg
xchg
clc
lret
mov
adc
add
xor
jo
fwait
mov
push
incb
clc
out
and
push
mov
xchg
pop
js
lret
add
clc
popf
add
mov
jnp
decb
xchg
cmpsb
add
shl
push
sar
icebp
and
jp
add
sub
pop
mov
pop
incb
xchg
sub
dec
push
push
jns
fst
jbe
pop
loopne
add
jae
pop
adc
cmp
incb
rorb
cs
sub
dec
push
push
stc
add
shll
lret
mov
adc
ja
pop
adc
sbb
add
xor
roll
cld
loopne
add
roll
push
pop
loopne
add
add
clc
std
lret
mov
adc
add
push
std
je
cli
std
fst
or
imul
mov
push
push
fbld
push
std
push
cs
std
fldl
xor
std
lret
mov
adc
imulb
push
std
incb
cs
pop
sbb
jl
xchg
jns
mov
jne
aad
jno
cmc
icebp
lea
and
clc
jbe
xor
js
and
divb
pop
pop
js
add
and
add
ja
test
andb
xor
je
clc
jge
divl
js
jbe
cmp
bnd
js
jp
js
mov
js
mov
je
clc
clc
and
sbb
cmp
divb
pop
je
clc
jns
cvtps2pd
cltd
xor
js
xchg
fnstenv
add
stc
clc
andl
cmp
popa
mov
mull
jp
je
lcall
xor
je
clc
cli
and
cmp
add
pop
je
clc
jnp
clc
xor
js
mov
add
sbb
sti
xor
js
pop
and
xorl
and
js
sti
and
cmc
and
xor
cwtl
sbb
or
mov
add
mov
and
xor
js
push
and
je,pt
clc
pop
pop
js
add
and
clc
add
js
add
pop
xor
je
clc
js
pop
xor
js
repnz
mov
and
xor
js
and
xorl
je
clc
pusha
and
js
mov
je
clc
loopne
setns
add
cwtl
and
je
clc
add
popa
xor
js
sti
and
clc
je
loope
lock
or
or
inc
je
clc
bound
xorl
jg
and
je
clc
loop
je
add
and
pop
jo
clc
or
arpl
js
add
mov
clc
sti
and
xor
js
hlt
and
jno
inc
js
cmp
and
movsb
and
clc
in
jnp
add
je
inc
je
clc
add
cwtl
movsl
dec
je
clc
add
in
add
jl
es
je
clc
mulb
data16
js
jo
cmpsb
adc
clc
xor
je
clc
out
xchg
js
daa
and
xor
jnp
and
xchg
cmpsl
popa
clc
movl
xor
outsl
xor
and
add
cld
and
clc
jne
enter
call
and
dec
js
imul
clc
test
js
jmp
aad
xor
repz
push
add
mov
lret
je
clc
jp
or
js
jne
dec
xor
imul
lock
mov
js
lret
and
clc
or
jge
sub
jns
and
xor
xor
repz
pop
js
or
int3
xor
and
jl
dec
xor
insl
clc
je
lea
js
or
mov
in
je
clc
push
and
dec
and
outsb
je
clc
mov
je
scas
js
into
add
or
xchg
das
xor
js
jg
outsl
xor
clc
mull
scas
xor
cwtl
iret
into
je
js
divl
adc
in
xor
cmpsl
js
and
cld
je
clc
clc
and
jae
lock
and
rorb
and
push
xor
js
andl
mov
jp
shll
outsb
xor
adc
cli
stc
jl
push
mov
and
clc
sti
and
xor
js
mulb
adc
jae
xor
xchg
lock
and
xchg
je
clc
mov
xorb
jl
and
xor
idiv
xor
repnz
js
je
lea
xchg
xor
js
add
hlt
xor
and
mulb
jne
bnd
jnp
js
or
push
aad
mov
cmc
je
clc
push
and
xor
js
push
and
xor
hlt
clc
xchg
mov
xor
idiv
mov
pop
xor
out
xor
je
clc
and
jnp
xchg
js
mov
cmc
je
clc
jae
idiv
and
adc
or
pop
and
cwtl
and
xor
and
clc
js
sbb
repnz
xor
divb
clc
mov
jns
mov
push
and
clc
jg
stc
xor
js
js
cmp
hlt
je
fstpt
jp
not
lcall
clc
fisubl
push
xor
js
sbb
jg
cmp
pop
and
xor
js
fwait
popa
cmp
add
and
xor
sbb
andb
xor
js
jns
jl
jbe
pushf
clc
jb
mov
fdivrl
cld
and
clc
cmp
js
jge
clc
xor
and
ds
jbe
pop
mov
jle
xchg
add
mov
jl
mov
jp
aas
xor
js
je
jg
or
lahf
icebp
push
xor
js
fbld
clc
add
add
inc
and
je
clc
andb
xor
outsl
xor
xor
ss
clc
mov
add
js
test
inc
xor
je
clc
jle
xorl
rcl
and
icebp
mov
xor
js
and
xchg
inc
je
clc
bound
add
js
mov
je
clc
loop
jno
add
or
js
xchg
inc
xor
je
clc
jge
xorl
xor
jbe
add
repz
js
or
mov
xchg
add
lock
js
jnp
xor
ja
push
clc
je
jno
jo
xchg
divl
shll
cmp
add
and
xor
je
clc
push
and
jb
jae
add
or
sar
mov
repnz
js
andb
xor
je
clc
js
jae
je
xchg
jno
mov
lea
shll
repz
xor
jle
push
je
clc
je
cmc
xor
js
mov
jo
aam
lea
hlt
clc
or
adc
add
mov
add
jne
std
js
sti
and
clc
jne
cmc
lahf
and
adc
mov
push
and
xor
js
xchg
and
xor
and
xor
js
pop
and
aaa
xor
adc
and
push
js
add
mov
jg
xlat
clc
jl
divl
js
cmc
and
rorb
and
pmuludq
js
cwtl
and
clc
fsubs
xorb
jl
popa
mov
stc
out
sbb
jno
cmp
mov
jp
pop
js
andl
xor
je
clc
cld
and
xor
js
jne
cmp
jb
pop
js
mov
jnp
or
mov
test
sti
je
clc
sbb
jl
cmp
js
and
xor
clc
pushf
add
mov
xchg
cld
xor
and
mulb
jge
bnd
jnp
js
mov
je
and
xor
je
clc
push
and
pop
and
je
clc
mov
js
incb
or
mov
add
and
js
sti
and
js
cmp
and
or
or
add
add
addb
adc
cli
je
clc
mull
mov
jb
loope
lock
icebp
lea
and
inc
and
clc
xor
add
mov
xor
jns
loop
and
xor
je
jnp
js
or
repz
mov
xorl
and
jecxz
js
add
hlt
clc
and
lock
repz
cwtl
fs
je
clc
andl
xor
js
jle
in
cli
je
clc
mull
and
jo
adc
clc
movsl
and
xor
js
in
std
xor
je
clc
es
xor
js
add
mov
push
and
xor
js
jle
pop
xor
je
clc
js
sub
js
lock
mov
mov
test
test
js
call
je
clc
sub
ja
dec
js
imul
lea
test
xor
js
add
or
jl
sub
mull
dec
xor
js
lock
stos
je
clc
lret
xor
js
or
divb
sub
dec
add
add
stos
clc
jge
lret
xor
js
jne
or
jno
sub
mov
lock
and
mov
test
lods
je
clc
int3
and
in
js
or
add
or
clc
add
lods
xor
js
cli
and
xor
push
clc
hlt
and
lahf
and
push
mov
outsb
je
clc
mov
push
xor
js
into
and
xor
je
clc
mov
xor
js
dec
and
outsl
xor
xchg
jo
clc
mov
scas
xor
js
andl
xor
mov
into
and
js
ja
xor
repz
xor
sub
nop
je
clc
mov
test
js
lock
xor
je
clc
xor
cmc
xor
out
xor
xor
push
jo
clc
or
xor
mov
push
and
xor
and
jl
jp
and
clc
jno
lea
xor
js
sbb
add
clc
pop
and
xor
js
fwait
and
xor
and
xor
repz
js
xchg
pop
xor
je
clc
sti
and
and
shlb
cmp
add
or
push
clc
pop
and
xor
js
popf
and
xor
and
std
icebp
testl
outsb
xor
add
pusha
and
cmpb
and
xor
je
clc
loopne
js
add
je
clc
add
sub
clc
jns
shll
adc
jno
insb
adc
jb
add
xor
clc
jo
xorb
jl
and
xor
je
clc
lock
js
add
jno
xor
or
push
cmpsl
mov
and
clc
stc
and
xor
outsb
xor
je
js
push
lock
or
cwtl
pop
dec
je
clc
xchg
and
mov
sti
shlb
js
bnd
clc
adc
mov
add
xor
adc
mov
or
xor
add
adc
sti
xor
push
hlt
and
adc
test
or
or
js
and
add
cld
and
repz
shl
xchg
jl
or
push
and
and
xor
and
out
xor
shlb
clc
mov
mov
xchg
andb
xor
je
clc
jnp
push
xor
js
repz
xor
je
js
mov
push
and
xor
js
push
and
xor
jge
xchg
and
mov
je
jo
add
cmp
or
mov
and
xor
scas
xor
je
clc
mull
adc
je
clc
lock
xor
js
xor
jg
push
je
clc
jno
ja
xchg
xor
jb
mov
lea
push
stc
xor
mov
test
add
xor
js
hlt
inc
mov
xor
push
pop
pop
or
jo
push
xor
js
mov
jge
shlb
lock
adc
icebp
mov
xchg
jno
add
and
clc
jbe
mov
adc
mov
adc
jb
add
xchg
and
mov
cli
shlb
div
add
adc
push
jl
lock
adc
pop
adc
js
sub
lock
jo
std
cmp
adc
div
ja
data16
push
clc
cmc
adc
xor
push
sub
ja
add
adc
loope
popf
mov
ds
pop
mov
jne
shlb
sub
pop
mov
jp
or
add
js
pushf
jae
jae
xor
cmp
dec
jo
jno
adc
xlat
pop
jb
pusha
mov
ja
je
std
xchg
sub
mov
sahf
pop
xchg
rcl
push
outsb
ficomps
sahf
jge
mov
mov
pushf
jmp
add
out
out
jle
daa
sahf
mov
int
test
adc
lret
inc
cltd
jne
jge
pop
leave
adc
xchg
jle
xor
xchg
dec
mov
mov
mov
popf
jge
xchg
repz
dec
or
pop
mov
jle
jb
test
sbb
pop
gs
popf
fstpt
mov
cltd
mov
xor
out
fcmovne
fisubrs
pop
out
adc
cmp
dec
cmp
mov
insl
pop
out
std
push
jbe
in
xchg
inc
xchg
mov
cmpsl
inc
dec
cmp
xchg
sbbl
cmp
out
and
push
imull
dec
inc
arpl
xor
mov
xlat
add
inc
iret
mov
adc
add
or
push
aad
out
adc
xor
js
push
and
jb
add
mov
std
or
push
push
add
and
or
nop
jo
mov
adc
rclb
sub
mov
sbb
or
imul
insl
push
jle
and
adc
or
jns
je
shll
or
adc
adc
add
push
add
and
repnz
lods
xor
stc
mov
or
add
mov
cmc
clc
mull
sti
xor
js
add
or
or
add
xchg
es
adc
push
sbbb
test
adc
sbb
jnp
jp
sbb
sbb
pop
adc
adc
pop
idivl
adc
xor
cltd
pop
mov
ds
lcall
mov
jnp
fnstsw
ds
jl
dec
push
and
pushf
jns
pop
cmp
mov
ss
cld
loope
clc
repz
cltd
and
add
sbb
adc
add
les
f2xm1
and
xor
sbb
mov
mov
repz
pop
xor
adc
clc
or
movsb
cmp
xchg
clc
sub
xchg
fstpl
lret
sbb
popfw
jae
inc
pushf
mov
mov
jl
jnp
sahf
mov
cmp
and
lcall
jns
cmp
mov
mov
and
fsubr
or
hlt
pushf
stc
stos
addr16
sbb
sbbl
aam
jnp
pop
or
jbe
out
jne
iret
test
inc
fcmovnu
xchg
jns
cmp
pop
aaa
lods
shll
in
inc
inc
inc
jne
sbb
mov
sub
icebp
pop
xor
je
cmpl
lock
lods
mov
mov
cmp
iret
and
jmp
aaa
stos
pop
clc
dec
inc
xchg
ja
mov
outsl
out
xchg
lods
pop
ret
cmpsb
jbe
sbb
mov
jl
ljmp
fisubs
test
xor
inc
sbb
stos
push
sarb
adc
daa
push
or
outsb
fs
adc
jl
xor
jmp
aam
mov
add
inc
cmp
inc
xchg
ds
sub
lahf
int
mov
pushf
arpl
les
cmp
xor
fdivr
and
sub
push
jl
insl
test
jae
aam
and
cwtl
aad
fdiv
movsb
inc
push
clc
leave
jecxz
xor
ret
movsb
subb
gs
insl
cld
cli
sahf
xchg
jle
test
inc
mov
xlat
sbb
cmp
inc
pop
mov
mov
cmpsl
mov
jg
jl
xchg
mov
lret
fcompl
mov
sarb
cmp
dec
sahf
xchg
jmp
add
scas
fdivrl
clc
cwtl
cmp
cli
jp
jg
in
std
and
push
mov
js
jl
popf
loope
inc
jl
adc
in
cli
mov
sbb
adcl
std
sub
daa
fwait
cmp
sbb
pop
push
add
mov
xor
sbb
fcompl
loop
dec
insb
mov
jne
mov
mov
sarl
fwait
push
pushf
pop
decl
fsubl
mov
imull
mov
je
mov
xchg
cld
sub
and
fistl
and
cmp
xor
leave
lea
stc
pushf
int
adc
js
int
aas
or
dec
shlb
stos
push
daa
mov
dec
aam
int
jbe
into
add
inc
cltd
sbb
push
sbb
xlat
fwait
fwait
xor
in
jmp
mov
xchg
push
sbb
xchg
aaa
xchg
cld
cld
negl
pop
pop
outsl
mov
inc
jne
fmull
xor
add
sbb
aaa
cmp
inc
xor
js
ljmp
test
negl
cmp
xlat
add
testl
and
mov
jecxz
addl
addr16
jae
cmc
das
adc
test
and
je
ss
fstpt
jle
xchg
cli
sub
testl
icebp
jno
mov
push
add
js
repz
std
enter
dec
call
or
push
js
imul
lret
or
cmc
addl
sub
std
cmp
nop
adc
push
or
out
adc
push
adc
adc
sti
and
in
mov
mov
divb
or
stc
push
sub
xor
repz
jns
enter
or
jbe
ret
and
jb
add
ret
jns
insb
push
pop
popf
jne
sbb
out
clc
fistpll
out
jge
mov
dec
lahf
aas
jne
jp
mov
not
add
ficoml
imul
test
jecxz
mov
rol
cmp
dec
fwait
push
fmulp
mov
add
push
out
subb
inc
cli
subl
sub
lea
scas
mov
cmp
jb
dec
jl
lahf
pop
shl
fiaddl
add
jecxz
sbbl
xor
daa
addb
mov
icebp
or
movsb
add
xchg
sub
popa
mov
dec
movsl
sbb
and
mov
adc
repnz
std
js
mov
loope
push
idiv
xchg
fstpl
add
mov
add
addb
ja
dec
aas
adc
sbb
sbb
daa
jno
xchg
js
scas
mov
scas
adc
pop
js
jb
jge
aas
xchg
cmpsb
xor
out
or
scas
cltd
lea
xchg
xor
adc
adc
sbb
add
mov
mov
xchg
xor
shll
mov
jnp
in
daa
cmp
xor
mov
divb
pop
lcall
mov
jno
sbb
push
fwait
mov
cli
inc
adc
mov
icebp
je
mov
andl
adc
inc
and
push
pop
test
andb
hlt
jmp
pushf
jp
pop
adc
adc
push
push
xor
mov
lods
incb
dec
fstpt
sahf
popf
mov
cltd
jb
and
pushf
and
fcom
fsubl
mov
fwait
jecxz
andl
repz
iret
fs
xchg
aad
pop
mov
mov
movsl
adc
loope
and
push
xor
lahf
cmp
jp
enter
mov
sti
bound
sahf
arpl
mov
pop
cmc
cld
mov
jmp
or
mov
cmp
pop
jbe
hlt
jle
loopne
mov
mov
mov
popf
lret
daa
addb
xor
ss
js
test
sbb
popa
pop
rorb
addr16
fildl
jbe
dec
ljmp
sahf
push
add
hlt
in
lods
ret
ss
xchg
xorb
fs
inc
cmp
mov
dec
xchg
lcall
or
cmp
jae
insl
fwait
int
and
and
push
mov
jb
cmc
iret
test
inc
xchg
cli
call
int
jo
jbe
inc
pushf
xchg
stc
ja
sbb
mov
test
mov
xor
loopne
pop
gs
adc
clc
mov
push
or
aam
lods
aas
jg
and
repnz
jl
inc
iret
lahf
dec
pop
xor
xor
jno
mov
xorl
sahf
jp
daa
pop
mov
xchg
dec
ret
pushf
mov
mov
aas
in
inc
push
pop
push
xchg
pop
cmp
cwtl
rorb
cmp
into
xor
ss
loop
and
and
xchg
sub
mov
hlt
js
inc
add
test
mov
cmp
insb
inc
ljmp
jle
sbb
fdiv
rcr
jae
mov
pop
xorl
cmp
or
ljmp
icebp
pushf
sbb
aaa
cwtl
ljmp
test
decl
gs
add
call
jno
or
mov
jl
mov
sbb
and
sbb
adcb
xor
mov
cli
pusha
xor
ja
popf
xor
mov
cmp
loopne
lcall
repnz
sarl
negl
adc
popf
pop
jns
mov
addr16
mov
fnstcw
test
lds
adc
sbb
ret
rcrb
jo
ret
xorb
lock
push
jbe
mov
jno
jb
sti
xor
adc
repz
mov
adc
stc
adc
std
repnz
or
or
lock
mov
mov
push
push
xor
icebp
repz
pop
or
or
xchg
adc
lock
cld
shll
hlt
adc
sbb
jge
adc
add
repz
aad
push
or
add
or
adc
mov
adc
mov
icebp
and
enter
adc
jae
adc
repz
and
cltd
addl
dec
les
or
out
scas
or
sub
movhps
adc
or
pop
and
xor
js
or
jo
and
xor
and
insl
repz
js
pop
and
clc
leave
and
icebp
jb
xor
js
jnp
pop
xor
je
clc
dec
add
lcall
cmpsb
je
clc
scas
add
repz
test
and
adc
xchg
daa
jo
clc
pop
and
xchg
xor
inc
cmc
and
clc
jecxz
out
test
addr16
and
or
pop
notb
jno
xchg
je
pop
hlt
jbe
adc
xorb
jae
jae
jb
std
cli
adc
jae
xchg
pop
std
std
shll
push
sub
jae
push
aam
inc
adc
nop
jne
lods
aas
cwtl
jl
rorb
icebp
ss
push
lcall
imulb
pop
adc
jbe
ja
xchg
add
cmp
mov
inc
sahf
in
gs
std
scas
cmp
scas
lret
add
push
cmp
int
xchg
cmp
jecxz
inc
jmp
or
lds
int
jns
int
sbb
mov
sub
jecxz
lret
out
lds
cmpsl
pop
daa
sahf
sub
pop
test
lods
pop
or
xor
cmp
fistpll
cmp
xlat
mov
ret
cmp
push
pop
daa
andl
loop
in
insl
pop
inc
ret
xor
scas
inc
in
lret
pop
ret
stos
lods
lds
scas
in
cmpsl
scas
pop
popl
cmp
popa
lods
lds
pop
pop
pusha
scas
lds
pop
or
pop
idivl
dec
mov
lret
xor
xchg
cmp
mov
movsb
inc
mov
cmpsb
inc
out
fldenv
mov
int3
and
mov
xchg
or
cmpsl
icebp
outsl
push
ljmp
xchg
inc
mov
pop
aaa
bnd
sahf
cmpl
jne
mov
xchg
negl
pop
push
fldt
xchg
jnp
pop
mov
ljmp
sub
lret
xchg
xchg
push
loopne
jl
xor
lcall
mov
bnd
repnz
divl
add
adc
xchg
test
xchg
xor
sbb
std
ds
cmp
fbld
dec
or
aas
sahf
loop
stc
js
mov
jp
xchg
mov
je
js
flds
sahf
or
push
popa
test
jne
sbb
sbb
pop
call
icebp
repz
adc
xchg
push
mov
jb
or
xor
adc
stos
xor
mov
jns
repz
jo
xchg
sbb
xchg
add
arpl
sbb
add
sub
mov
sbb
je
jae
fwait
lods
mov
mov
xor
add
mov
jl
jle
xor
inc
adc
jb
fs
and
xchg
cmc
imul
adc
xchg
loop
mov
lods
movsb
fisttpl
mov
int3
je
jno
jo
push
or
in
aam
jo
rcll
imul
xor
mov
mov
repz
jo
clc
adc
xor
stc
repz
icebp
cmp
jp
pop
dec
sahf
es
push
sahf
out
inc
ljmp
pop
jg
int
pop
xchg
push
pop
sti
sbb
std
loopne
aaa
mov
je
pusha
dec
sub
fldt
icebp
jne
push
xor
out
jnp
xor
mov
fs
adc
test
js
cmpsb
push
faddl
mov
insb
imul
vmovlps
scas
xor
out
fistpll
adc
adc
mov
loop
fs
mov
sti
insl
and
adc
add
rcrl
ret
jno
into
inc
mulb
push
push
jo
stos
mov
sub
icebp
add
cmc
ss
push
adc
mov
xor
dec
adc
push
dec
in
jne
divb
add
or
push
icebp
out
mov
fwait
imulb
popf
in
jae
mov
lret
jge
or
dec
aam
lods
fisttps
push
adc
out
mov
mov
test
push
push
pop
cmp
jg
rcll
notl
iret
fwait
out
fsts
cli
mov
fdivrl
xchg
adc
jno
xor
mov
mov
pop
adc
xor
xor
shl
nop
test
jo
pop
mov
mov
mov
cmpsl
adc
inc
add
inc
sub
or
jmp
jae
jae
jae
nop
inc
packuswb
sub
hlt
out
movsl
jl
mov
lock
daa
stc
insl
in
mov
xor
repz
sti
push
mov
out
rolb
mov
mov
and
in
mov
push
xor
pop
lock
cmp
or
faddl
fsubs
movsb
mov
jae
ljmp
pop
ficoms
or
movsb
push
xor
dec
inc
int3
fdiv
adc
add
adc
mov
scas
or
push
cmp
popa
fcomp
jg
mov
aas
in
sbb
lock
cmp
pop
mov
mov
scas
int
into
cmp
bound
test
push
inc
mov
cli
and
sbb
dec
out
jge
sub
dec
out
int3
notl
sbb
js
jg
rcll
pop
xchg
add
sti
out
fsts
mov
mov
cmp
pop
inc
mov
push
ja
and
xor
push
mov
rolb
push
cltd
mov
in
xor
stos
dec
jo
movb
dec
jp
lcall
clc
push
xchg
in
cmc
jns
mov
push
je
insl
adc
jp
test
jle
cmp
jb
das
cmp
sub
adc
mov
ss
push
adc
mov
xor
sarb
pop
pushf
push
inc
icebp
mov
xor
jb
adc
and
ljmp
fwait
and
mov
repnz
and
clc
and
and
sub
xchg
divl
je
clc
add
cmpsb
xor
repz
js
sbb
cmp
jge
add
in
or
repz
and
or
icebp
adc
xor
js
mov
insl
adc
pop
clc
and
in
sub
lmsw
push
and
and
loop
loop
jbe
call
add
jp
xor
daa
mov
outsl
lds
mov
mov
aad
and
push
out
sti
jge
add
or
test
mov
in
insl
into
sahf
in
aam
outsb
lahf
scas
pop
lock
out
out
mov
test
repnz
adc
clc
xor
jge
cmp
hlt
jbe
mov
xchg
lcall
jbe
fistl
jbe
mov
jo
iret
clc
cld
xor
xchg
lock
xor
hlt
ss
scas
dec
xchg
jg
xchg
addl
sbb
iret
icebp
inc
xchg
je
lds
and
cmp
or
xor
fcompl
popf
nop
std
iret
xchg
pop
inc
shrl
jp
xor
mov
xchg
ds
mov
cmp
xor
and
adc
jge
subl
lds
repz
test
xchg
xor
sbb
jl
mov
std
cltd
ds
xchg
sbb
adc
scas
aaa
mov
in
add
sbb
xchg
jge
adc
add
testb
push
movsb
lcall
mov
pushf
je
negb
add
cmp
leave
inc
and
andb
jns
xchg
fdivl
pop
pop
lret
je
xor
je
jns
and
mov
push
lret
pop
movsb
add
inc
jb
lcall
mov
lcall
inc
jp
cmp
jl
lret
push
adc
pop
fadds
cmp
pop
xor
xor
mov
adc
icebp
pop
inc
icebp
or
xchg
dec
je
add
lret
jle
test
in
mov
popf
aaa
pop
cmpsb
in
xchg
gs
adcl
dec
mov
dec
addr16
aas
stos
mov
sub
je
outsl
dec
andb
jp
mov
inc
mov
and
jle
add
repz
mov
jno
ja
lret
cmp
jg
and
xor
jns
fdivrl
popf
mov
xor
jo
int
test
xor
xchg
mov
push
loop
inc
bndstx
push
cld
aaa
fstl
ja
xchg
lds
fbstp
mov
or
sub
iret
lss
push
xchg
aaa
sbb
ja
xchg
lahf
mov
mov
jbe
mov
daa
rorl
pop
pop
xchg
and
sub
mov
lods
mov
mov
loopne
popf
aam
fsubrs
push
negb
sub
sub
sub
or
pop
ds
decb
gs
dec
ret
dec
shlb
push
shl
loopne
push
mov
outsb
sub
sub
sub
sub
inc
das
push
sete
ds
clc
mov
lods
cmpsb
sub
and
pusha
out
shrl
pop
push
push
xor
cmp
push
dec
outsb
scas
dec
lock
mov
ret
jbe
aam
fadds
in
call
int3
in
push
in
scas
lods
nop
jae
mov
mov
push
jecxz
rcrl
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loopne
mov
aam
fcoms
loopne
in
call
sbb
mov
in
mov
in
test
xchg
in
push
in
dec
in
dec
in
sub
adc
push
sub
sub
sub
sub
sbb
mov
das
lahf
das
mov
das
test
das
addr16
imul
dec
das
mov
das
movups
ds
jle
clc
hlt
fdivr
out
sub
mov
das
sahf
das
mov
das
test
lea
pop
push
aaa
icebp
push
repz
xchg
aad
xlat
xlat
sbb
mov
xlat
popf
xlat
lahf
xlat
adc
xlat
movsb
xlat
test
xlat
test
xlat
sub
mov
aaa
jno
adc
adc
hlt
rcll
jmp
sti
jmp
jg
and
and
add
mov
jmp
or
stos
jmp
cs
xchg
fs
data16
adc
outsb
cwtl
outsb
stc
outsb
mov
cwtl
cmc
mov
sbb
mov
and
push
mov
lock
icebp
mov
mov
and
cmpsl
shrl
dec
loopne
jbe
aam
fdivrs
fdivr
loopne
in
call
or
out
push
jno
push
mov
or
loope
inc
inc
std
mov
mov
sti
jge
push
sub
ret
in
insb
sub
fsubrl
data16
les
call
mov
clc
mov
mov
ror
bound
jnp
aaa
shll
inc
data16
lret
insb
femms
icebp
push
xor
add
insb
push
outsb
daa
outsb
or
outsb
out
push
xor
mov
xlat
test
and
cltd
cmc
mov
sub
test
sbb
adc
repnz
sub
cmp
ds
ds
inc
mov
inc
sbb
xlat
test
or
imul
xlat
xlat
mov
xor
push
loope
fstps
loope
jmp
sahf
jmp
ret
jmp
dec
jmp
mov
in
das
sub
push
shrl
xor
xchg
sub
sub
sub
jnp
fsubrl
jl,pt
add
and
or
cmp
jle,pt
mov
idivb
mov
jl
aas
mov
arpl
xchg
dec
xlat
stos
xlat
or
mov
push
mov
xor
jge
loope
jmp
fisubrs
inc
in
add
fs
in
mov
jmp
jmp
adc
ss
pop
outsb
mov
dec
fists
gs
in
int3
in
cs
dec
in
out
sub
shrl
xchg
sub
subb
pop
notb
aaa
repz
aam
xchg
mov
loopne
arpl
xchg
ljmp
inc
push
mov
pop
jg
mov
das
jae
aaa
cwtl
loop
fnstenv
shrl
outsb
jecxz
push
mov
push
aam
add
sub
ja
sub
sub
or
jle
jae
mov
mov
xor
je
xor
and
add
xchg
cmc
mov
clc
push
cld
mov
inc
mov
mov
pusha
adc
jbe
xchg
cld
decl
out
mov
divb
sub
and
stos
sub
sub
sub
jl
icebp
or
jae
cmp
mov
fdivrl
mov
jae
inc
loopne
xchg
inc
aam
fsubs
or
in
and
mov
sub
or
xlat
ds
mov
idiv
sbb
inc
jg
mov
or
mov
push
jns
jp
sti
subl
cmc
ss
push
sub
sub
cs
jle
lahf
scas
dec
sbb
sub
or
ss
mov
push
pop
and
mov
je
jae
mov
std
mov
xor
or
dec
sub
pop
fdivrl
jnp
jo
loop
jle
mov
jmp
mov
mov
bound
bound
fs
sub
jo
rorl
pop
xlat
sbb
mov
ret
jb
add
cmc
adc
or
loope
jmp
xorl
xchg
cwtl
ret
or
jb
push
aam
fsubrs
notl
sub
jbe
sti
jle
mov
frstor
inc
pop
ja
aam
ds
loope
add
inc
mov
je
aad
mov
and
pop
ss
fdivrs
in
sub
or
push
ds
jle
mov
inc
mov
sub
push
xchg
mov
faddl
call
or
pop
xlat
jg
dec
cmp
xchg
loopne
ret
sub
pop
add
ja
hlt
repz
cmp
pop
aad
mov
addb
mov
and
jmp
inc
pusha
or
mov
and
sub
sub
aas
sub
scas
hlt
mov
inc
in
call
adc
add
fimull
xchg
cmp
cmc
clc
in
sbb
jecxz
xchg
push
fldt
inc
sub
imul
aam
fsubr
fsubrl
cwtl
out
ljmp
mov
cmp
inc
dec
sbb
sub
dec
xchg
cli
dec
push
cmc
push
sub
sub
sub
fs
bound
xchg
data16
add
dec
outsl
cli
lds
sbb
mov
dec
mov
imul
fwait
aaa
fstl
xchg
cmpsb
das
je
xchg
add
mov
int3
loope
sub
sti
jle
jp
or
push
insb
mov
fidivs
and
xchg
int
stos
ds
jle
mov
jne
mov
aas
sub
add
rorb
xor
push
aam
fadds
inc
loopne
test
or
and
hlt
push
jp
add
sub
sub
sub
adc
nop
mov
or
jnp
sub
ljmp
aaa
cmp
roll
jo
in
sub
in
insl
loopne
je
adc
xorb
push
inc
outsb
sub
lea
push
jne
and
xor
inc
jnp
sub
test
xchg
aaa
ds
push
frstor
push
ja
aam
fdivrs
pop
sarb
cmp
in
or
insb
in
insl
lods
cs
mov
xor
mov
jmp
mov
incl
iret
jae
pop
mov
aas
xlat
mov
xchg
lea
push
mov
mov
cmc
and
and
ret
sub
hlt
inc
mov
xlat
or
dec
xchg
dec
rol
rcll
loopne
dec
test
std
shlb
add
inc
and
push
daa
insb
out
ds
decb
push
add
dec
push
das
das
shlb
pop
jle
mov
cmp
fnstenv
xor
hlt
inc
push
insb
adc
jg
mov
fistpll
std
aaa
pop
inc
rcrb
add
wrmsr
push
ds
mov
mov
outsb
or
jo
rep
pop
into
mov
push
insb
push
push
adc
call
or
repnz
adc
divl
jne
jb
mov
or
or
pop
pop
cmp
jp
mov
dec
xchg
dec
or
imul
add
es
test
js
popa
and
ja
aam
xor
xchg
cmp
loop
inc
sub
push
lret
je
scas
ret
mov
mov
and
test
pop
inc
data16
or
or
jo
jb
je
pop
dec
in
sub
pop
cld
enter
inc
xlat
xorl
pop
mov
dec
jl
add
imul
xchg
aam
fadds
push
mov
into
mov
or
outsb
sbb
aaa
jp
jmp
push
mov
mov
mov
addb
repz
jl
mov
or
mov
testl
ret
pand
push
std
sarb
faddl
ss
add
inc
sub
mov
mov
or
ja
cmpsl
jb
mov
add
and
xchg
xor
repz
mov
mov
mov
les
add
inc
push
push
mov
add
push
pop
je
fadds
sub
sub
je
mov
fldl
data16
js
dec
or
dec
sbb
xchg
je
mov
test
aad
pop
divl
inc
pop
inc
ret
ret
xlat
loope
add
testl
ret
out
bound
inc
pop
sub
sub
sub
inc
push
data16
xchg
lret
push
jmp
push
pusha
xor
ret
mov
sti
pop
mov
bound
test
mov
push
jmp
je
inc
mov
loope
ret
jl
cmp
mov
sbb
aam
mov
push
shlb
mov
aaa
xor
jae
push
and
mov
or
mov
xchg
ja
bound
inc
or
and
sti
sbb
pop
jl
push
xor
lea
push
sbb
sub
out
cmp
mov
bound
jge
jo
pop
xchg
cmc
je
idiv
xchg
mov
mov
insl
sbb
jle
addr16
mov
push
mov
xor
fptan
cs
xchg
in
jnp
test
stos
mov
sub
jnp
sahf
and
pushf
sub
sub
pop
dec
mov
xchg
xchg
pop
xchg
push
ret
mov
movsb
cmc
push
pop
test
xchg
repnz
mov
add
xlat
cli
mov
test
mov
sbb
cmc
pop
jbe
sub
xchg
sub
inc
inc
dec
mov
cmpsl
adc
scas
sbb
sub
jno
cwtl
xchg
pop
shlb
cli
insl
shlb
jne
jmp
mov
add
rclb
add
cmp
mov
add
sub
lret
jecxz
jecxz
ret
iret
dec
push
inc
pop
aaa
xor
shl
jno
test
repz
jecxz
jecxz
jecxz
jmp
jecxz
jecxz
jecxz
ret
mov
sub
xchg
enter
sub
insb
ja
xlat
das
mov
pusha
xchg
push
mov
cmp
mov
pop
loop
popa
mov
ret
inc
sub
cmpsl
das
test
das
dec
das
in
das
mov
dec
jle
jo
xor
xchg
sub
je
aad
xchg
inc
mov
xlat
pop
xlat
sbb
pusha
bound
inc
sbb
das
sub
jmp
xlat
or
lods
xlat
in
xlat
pcmpeqb
mov
cmp
rol
inc
add
stc
test
vpcmpgtd
inc
sub
mov
adc
and
sti
cmp
popl
pop
popl
ret
or
es
jecxz
jecxz
jecxz
inc
sub
enter
out
lock
adc
jo
adc
repz
jecxz
roll
push
xchg
aam
fdivs
sbb
pop
es
xor
ds
and
xor
push
xchg
push
push
mov
push
fimuls
sub
push
pop
jbe
xchg
inc
testl
in
xlat
inc
ds
sysret
fnstcw
repz
aaa
loop
push
cli
inc
cltd
dec
jae
pushf
nop
mov
sbb
sbb
or
xor
jge
mov
mov
xchg
int
xor
dec
neg
movsb
or
pop
movb
or
mov
cmc
and
fs
or
jg
cmp
dec
add
or
xchg
aaa
popf
push
sub
pop
jbe
sub
daa
cmp
sub
cld
cmp
enter
sti
dec
push
xor
sbb
and
rcl
sbb
cld
dec
lret
cmp
jae
push
ja
jns
jnp
jge
jg
xorl
jp
nop
rclb
xchg
sbb
sub
cmp
push
cmp
sbb
push
int3
mov
or
hlt
rcrb
xor
mov
test
mov
lea
jae
jne
xchg
ret
jns
fcmovnu
xor
stos
popl
mov
ror
cmp
xor
jno
jae
jne
ja
jns
jnp
jge
xor
outsb
subl
test
add
jle
mov
mov
jnp
jge
jg
subl
jl
mov
std
sub
daa
sub
or
jbe
mov
ja
sub
add
das
repz
xor
je
pop
js
mov
sub
sub
sub
or
mov
in
addb
cld
rolb
add
dec
ds
jle
sbb
xor
jb
aam
fdivrs
aas
and
xor
ret
xor
stos
jecxz
jecxz
jecxz
popa
mov
add
or
testl
jmp
sbb
in
loope
roll
popa
xchg
aas
imul
mov
dec
lds
and
mov
ja
xchg
scas
mov
push
lahf
mov
rorl
fldz
loop
lock
fldl
mov
lea
mov
mov
or
rol
mov
aam
fdivs
inc
pop
add
lods
mov
pop
inc
mov
adc
push
push
push
testl
fldcw
push
ret
fs
push
ja
fimull
xchg
mov
jp
mov
loop
std
xor
out
iret
adc
repnz
adc
and
mov
jne
fldt
ds
sub
dec
sub
stc
xor
adc
add
sub
pop
pop
mov
ja
jae
cmc
xchg
xchg
xchg
cli
rorb
fisubrs
cmp
cmp
push
mov
mov
xchg
js
shll
decl
sbb
jae
xlat
jp
jle
or
sub
testl
aam
fadd
jl
test
jle
add
aad
ror
int3
in
push
sub
ss
decb
add
sub
mov
mov
aad
xor
inc
mov
fnstcw
mov
xor
cmp
jle
push
add
jge
xchg
ja
mov
cwtl
rol
out
test
push
pop
mov
cmp
adc
cmp
jo
mov
mov
cs
mov
inc
sarb
xor
repz
js
pop
iret
ret
shlb
notl
mov
jl
popa
cli
sbb
sub
cmp
dec
push
pop
xchg
jp
mov
pusha
jp
add
notl
xchg
loopne
add
loopne
mov
adc
inc
push
mov
cmpxchg8b
or
jbe
xchg
push
pop
mov
adc
call
jae
aaa
push
bound
sbbb
hlt
jle
jnp
mov
sub
or
mov
adc
xlat
push
cmp
xchg
shll
xchg
mov
mov
sub
rcll
ret
jns
movsl
popf
orl
hlt
or
ret
in
jp
xor
pop
pminsw
add
pop
lods
ret
icebp
pusha
andl
jp
lret
shlb
filds
das
aad
push
jg
or
and
push
push
ja
cltd
add
idivb
xchg
pop
mov
xlat
cmp
std
push
lahf
sub
dec
in
imul
js
or
push
pop
jbe
aaa
pop
xchg
sub
adc
dec
sbb
aas
sub
or
ds
jle
pop
mov
mov
scas
pusha
mov
jle
xchg
enter
movsb
push
xchg
call
lods
or
mov
push
or
cltd
or
dec
inc
clc
mov
push
test
sbb
add
xchg
push
roll
inc
adc
lea
and
cmp
pop
jg
ja
xchg
mov
int3
or
je
ljmp
jl
aad
jle
push
js
out
rcrb
mov
leave
je
orb
cmp
adc
aaa
sbb
jno
jnp
aam
mov
sub
mov
in
mov
jge
inc
sti
or
cmc
repnz
push
and
cmp
xor
inc
xchg
push
xor
jbe
xchg
mov
je
ds
fnstcw
mov
dec
rorl
jae
or
ja
sub
inc
sbb
aam
push
aaa
add
and
add
xor
mov
xchg
lret
rorl
fdivs
rcrl
push
mov
mov
or
pop
mov
loop
and
xor
xchg
into
xor
xor
xchg
bound
or
pop
cmp
test
mov
aaa
dec
push
cs
or
mov
out
sbb
xlat
mov
and
cmc
xor
cmp
sbb
insb
outsb
dec
jmp
xlat
hlt
add
inc
rorb
and
jbe
mov
fyl2x
dec
inc
sbb
cs
jnp
jne
mov
ret
push
pop
dec
mov
inc
jae
pop
xor
rclb
mov
push
mov
pusha
cmp
mov
cmpb
fisubs
mov
cli
jns
jb
bound
or
js
dec
mov
mov
jp
shrl
outsb
loopne
xchg
pop
xchg
movsl
loopne
fnstsw
xor
jo
icebp
or
ret
loop
mov
push
mov
stc
pop
pop
push
jge
mov
mov
jne
movsl
idivl
xchg
ds
pop
xchg
shll
dec
loope
dec
nop
mov
aam
pushf
or
test
mov
mov
inc
xor
mov
and
nop
pop
outsb
or
xor
or
pop
ret
lock
mov
loopne
push
out
or
sub
cld
jne
pop
xchg
jne
inc
push
mov
xchg
jo
push
push
jb
push
aam
xlat
in
bound
sub
xor
fcoms
ds
jle
cmp
mov
push
push
cmc
inc
or
add
inc
jae
jns
fwait
add
inc
push
sahf
movb
cmp
pop
xchg
mov
mov
sti
lret
xchg
add
gs
mov
push
ja
mov
test
or
ret
jle
sub
mov
lret
xchg
xor
lea
cs
bound
inc
push
dec
aam
sub
into
push
mov
repnz
js
inc
sarl
and
add
loopne
rcr
loopne
and
xchg
and
jmp
mov
push
mov
mov
lret
lods
fmuls
cmp
xor
cmp
cli
xor
xchg
push
aaa
je
or
in
pop
fisttpl
pop
and
xchg
or
inc
jle
jp
xchg
pop
xchg
push
xchg
cmp
xchg
dec
sub
clc
test
xorl
add
ss
mov
ret
jb
lods
xor
inc
and
sub
dec
push
ds
and
loop
mov
out
clc
idivb
push
hlt
mov
repnz
loope
call
ss
or
jp
inc
dec
ret
mov
push
dec
add
pop
jb
test
mov
mov
rorb
dec
jae
xlat
and
or
in
test
jo
divl
sub
inc
mov
jg
mov
dec
jp
sub
push
ds
jle
mov
cmp
out
dec
icebp
jbe
or
pushf
cltd
scas
mov
xchg
and
and
sub
sub
mov
xor
mov
or
adc
push
cld
mov
psubq
mov
lahf
sub
fs
stc
mov
mov
iret
or
adc
jo
pushf
add
and
cwtl
mov
mov
push
xor
aad
adc
or
xor
or
xchg
mov
inc
cmc
push
mov
aas
inc
jp
push
into
push
dec
mov
xor
inc
cmp
xchg
dec
sub
fldcw
lret
ret
sub
sti
je
xor
pop
push
mov
ja
xchg
jmp
adc
enter
orl
loopne
jmp
dec
jnp
addb
divl
stc
pop
and
push
out
jbe
pop
xchg
adc
pop
das
and
mov
cmc
mov
mov
andl
mov
sub
mov
arpl
push
dec
mov
dec
jle
scas
sub
mov
lds
pop
inc
in
pop
das
push
aaa
sbb
xchg
cld
jo
stos
or
mov
repnz
xor
roll
loope
and
xlat
sbb
aad
dec
xlat
icebp
clc
add
cmc
rcrb
sarl
or
sub
cmp
cmc
cmpsl
loop
les
mov
push
ror
lret
xchg
sbb
sub
xchg
jecxz
or
or
push
ds
jle
jae
xchg
jae
mov
ffree
call
jecxz
dec
cmp
mov
cld
xor
cli
mov
test
arpl
stos
adc
pop
jbe
rcrb
clc
hlt
cmpsl
or
popl
push
cmp
or
stos
xor
and
pop
mov
scas
and
adc
mov
push
lea
xchg
inc
push
adc
aam
js
push
inc
adc
push
pop
jne
inc
bound
add
xchg
pop
sub
sub
push
rorl
mov
inc
idivb
adc
xor
cld
mov
std
rorl
imul
mov
xchg
test
mov
loop
and
or
mov
push
pop
mov
mov
sbb
test
mov
cli
xor
mov
or
push
pop
pop
push
mov
mov
inc
fdivr
jo
in
jp
and
jg
and
fs
int
idivb
inc
mov
dec
lret
pop
or
filds
icebp
fldt
mov
icebp
mov
xchg
sbb
inc
jbe
sub
lret
jle
jae
mov
mov
repnz
sbb
lods
sub
nop
aaa
adc
aas
push
or
sub
mov
push
mov
into
call
nop
dec
push
inc
cmp
lods
ret
and
add
add
mov
push
push
xchg
ja
cmp
jp
loop
jl
push
subb
hlt
inc
xchg
out
imul
push
jbe
bound
pop
mov
test
xchg
mov
mov
add
addr16
inc
or
int
test
push
dec
ja
je
or
xchg
and
testb
enter
cmpb
sbb
dec
mov
xlat
pusha
push
push
ss
je
mov
ss
jns
jg
push
jns
pushf
movsb
or
mov
or
lea
jnp
sub
sti
push
pop
jns
jo
jns
jae
jne
addb
xchg
jp
mov
mov
dec
orb
mov
xchg
mov
orb
xchg
mov
xlat
jno
jb
bnd
jne
jbe
ja
js
cmp
mov
xchg
jo
dec
int3
orl
cltd
test
xchg
xchg
mov
adc
mov
dec
jns
add
jo
inc
xchg
sbb
jae
repz
jne
jbe
mov
adc
jp
or
jl
dec
jle
mov
orb
stc
mov
inc
xchg
dec
mov
mov
aas
xlat
mov
rolb
fdivl
movsb
jbe
mov
add
aaa
aad
loopne
jg
orb
xchg
test
xchg
xchg
mov
mov
mov
lea
or
xor
ja
sbb
jbe
ja
js
ret
mov
jle
mov
andb
xchg
dec
xor
ret
xor
into
leave
jae
mov
mov
jbe
sahf
outsb
js
inc
add
mov
mov
inc
xor
test
jno
xchg
mov
inc
lea
jo
or
jb
jae
je
jne
xor
js
inc
xchg
jp
cmpb
jle
add
orb
std
mov
xchg
mov
outsb
mov
or
vpmacswd
xor
int3
jne
test
ja
mov
mov
jl
dec
jle
jg
orb
roll
or
mov
jge
cmp
sbb
jb
shll
jl
dec
mov
dec
jnp
jl
mov
jle
jg
sbb
dec
mov
test
xchg
mov
mov
lea
pshufw
jno
jb
jae
je
mov
mov
jp
xor
jl
dec
jle
xchg
subl
test
dec
mov
int
dec
mov
jno
xchg
jae
aas
jne
push
jns
stc
jg
jns
jp
pop
jl
cmp
cmpb
test
mov
mov
mov
cli
mov
jno
xor
jne
mov
outsb
js
jns
jp
jnp
cmpl
jg
addb
or
test
cmp
rorl
xchg
mov
aaa
not
jno
icebp
jae
cmp
jne
jbe
ja
mov
or
jnp
mov
jg
orb
and
or
rorl
lea
stc
add
push
jno
jb
jae
notb
ja
js
jns
ret
jnp
mov
jg
and
jecxz
jecxz
jecxz
movsl
movsb
incb
sbb
mov
roll
jmp
mov
jno
jae
je
jne
mov
jns
jp
jnp
jae
jge
jle
jb
ret
or
outsb
test
dec
xchg
mov
inc
int3
lea
push
push
push
jno
jb
add
adc
jbe
inc
mov
xor
jnp
jge
mov
subl
jge
jle
mov
mov
push
mov
cmp
inc
or
jae
sub
mov
jno
cmc
pop
mov
movsb
icebp
testl
jle
cli
inc
repnz
sti
xor
pop
mov
movsb
repz
add
or
sbb
sti
jne
cmp
or
or
mov
sub
push
jge
xchg
mov
sub
repz
hlt
inc
mov
idivb
ret
jg
xchg
mov
sub
jl
cld
inc
rcrb
add
inc
ret
addl
add
sub
jl
add
add
inc
ret
orl
ret
or
mov
xlat
setne
insb
icebp
jns
ds
push
jne
inc
ret
xchg
add
sub
push
or
pextrw
jae
lock
test
sbb
cmc
inc
mov
or
clc
sbb
mov
dec
int3
sti
sbb
std
inc
lea
incb
orl
syscall
jbe
push
inc
cltd
pop
iret
jne
inc
or
xor
mov
or
icebp
lock
scas
addl
adc
add
aas
dec
pop
xchg
add
fs
fnstcw
mov
pop
push
mov
mov
or
fnstcw
or
lea
or
aam
push
or
pop
cmp
xchg
mov
push
aam
les
push
dec
mov
out
andb
adc
dec
inc
add
and
inc
in
fildl
mov
unpcklps
push
rcrb
cmp
sub
mov
out
jo
outsl
roll
and
gs
dec
imul
add
push
jae
inc
xor
pop
mov
xchg
clc
or
mov
cmpsl
sub
sarb
outsb
cmpsb
dec
out
shl
mov
lret
in
insb
in
outsb
lods
scas
in
push
xor
push
mov
jecxz
sar
jecxz
jecxz
jecxz
loop
add
add
mov
pop
xchg
repnz
insl
das
scas
das
dec
das
xor
push
inc
push
stos
loopne
clc
test
in
shll
push
aam
shrb
mov
xlat
leave
xlat
push
insb
push
lret
pop
xor
mov
or
cmc
mov
sub
mov
das
mov
fistl
mov
lret
dec
jecxz
loopne
divb
out
adc
cmp
sti
inc
and
movsb
xlat
dec
jge
stos
loopne
enter
push
decl
shrl
jecxz
xorb
xor
mov
add
sarl
mov
ss
les
inc
cmp
stos
adc
cmc
push
mov
roll
sub
push
push
lret
jae
cmp
jbe
push
stc
inc
fisttpl
add
or
xor
ss
xor
cmp
xor
push
loope
int
fs
gs
xlat
xlat
outsl
xchg
sbb
mov
fxam
push
add
mov
lods
outsl
push
add
rcl
push
adc
jl
dec
mov
xchg
mov
shlb
or
add
inc
std
mov
inc
push
iret
jbe
sbb
lret
mov
mov
loop
xor
ds
shl
sahf
std
aas
jg,pt
lcall
je
dec
adcb
lods
mov
aas
mov
lea
mov
add
add
addb
cmpl
jle
push
xor
or
sbb
mov
call
jnp
mov
add
fcoml
ret
mov
mov
js
clc
push
dec
jne
fiadds
cmc
sti
lret
shll
or
dec
xlat
push
stos
xlat
in
xlat
lods
xchg
std
jp
push
bound
int3
pop
aam
lahf
mov
test
nop
xor
push
adc
mov
fwait
sarl
adc
pop
mov
sbbb
inc
jae
loop
add
ja
popa
clc
ja
xchg
cmp
mov
rcl
adc
sub
ds
fisttpll
in
loop
mov
and
pop
repnz
inc
enter
sub
pop
add
in
into
push
aad
std
cmp
xchg
xchg
ret
or
orb
jp
cmpb
mov
incb
mov
mov
push
dec
add
orb
sub
cmc
pop
aaa
or
xor
xchg
mov
xchg
dec
pop
shlb
rolb
rcll
mov
inc
mov
ret
or
aad
mov
ret
xor
int
push
sub
inc
inc
dec
pop
int
xchg
aam
inc
out
loopne
or
mul
fucom
xchg
sub
lcall
gs
test
mov
push
or
mov
xchg
sti
movl
cmp
mov
dec
xor
mov
or
or
jmp
dec
ljmp
mov
jmp
inc
xor
je
add
lock
js
sbb
or
mov
insl
xor
inc
ret
sub
xor
movsl
decb
outsl
jae
mov
loop
test
aad
or
jg
mov
jnp
pop
pop
mov
in
pop
mov
and
pop
and
fldenv
arpl
dec
sti
scas
mov
or
dec
sbb
sbb
cmp
add
sub
cmp
sub
push
invd
inc
bswap
inc
sbb
arpl
hlt
mov
xchg
ss
lahf
nop
ret
faddp
adc
lock
mov
divb
repz
jg
cmp
cmp
mov
mov
insb
mov
mov
loop
and
add
xor
mov
ret
mov
inc
lcall
push
inc
xchg
adc
mov
notb
shlb
bound
mov
mov
bound
dec
ret
cmp
aad
cmc
mov
mov
mov
xlat
cmp
sub
clc
test
and
icebp
push
cmc
mov
mov
bnd
fisttps
jmp
mull
dec
stc
sub
das
push
mov
ds
pop
pop
or
in
in
xchg
sub
sub
jo
or
mov
or
mov
pop
aam
int3
aaa
movsb
push
movsl
aam
cmp
push
jmp
ja
inc
mov
inc
jmp
iret
rorl
pop
push
aad
or
mov
clc
mov
std
aam
push
ret
mov
xchg
mov
mov
sub
mov
mov
sub
sti
subl
icebp
ss
xor
cmp
js
mov
ret
ds
jle
mov
icebp
push
lret
outsl
jmp
repnz
ret
or
orb
xor
mov
mov
ficoms
jb
mov
js
dec
mov
cmpsb
rorl
adc
sbb
dec
sahf
ja
xchg
inc
cld
cmp
mov
fldenv
loope
jmp
xor
sub
int3
mov
jecxz
xor
lret
mov
cs
mov
ja
mov
dec
cmc
iret
push
rcr
clc
mov
sub
lds
aaa
xchg
jecxz
jnp
frstor
pop
inc
gs
push
pusha
jb
dec
push
lcall
or
add
cmovae
out
sub
jle
dec
push
lret
xor
pop
adc
mov
jbe
jge
leave
dec
pop
and
cs
xor
aam
mov
pop
jl
mov
xchg
cmc
xchg
pushf
ret
aas
xor
cmp
mov
dec
cmp
xchg
aaa
cwtl
cmp
fimull
jge
add
rcrl
mov
or
rorb
inc
iret
adc
into
jnp
inc
mov
add
flds
dec
ss
add
cmc
cmpsb
sbb
cmp
js
inc
fnstsw
xor
lods
jp
jne
scas
shl
jl
cld
inc
shll
mov
inc
das
cmpb
add
sub
xchg
pop
cmp
dec
aam
sub
add
jmp
adc
cmp
aam
shlb
push
dec
ret
shlb
add
xlat
mov
or
jmp
push
aad
add
inc
dec
cmp
adc
xchg
sub
imul
shlb
popa
cltd
lret
mov
movl
pop
inc
inc
mul
sbb
frstor
jp
popf
add
dec
lods
sub
pop
divb
aad
cli
std
push
repnz
pusha
mov
inc
add
aaa
and
clc
mov
jle
mov
into
pop
adc
xchg
push
int
mov
pop
jl
loopne
xchg
push
outsl
shll
outsl
sbb
sbb
je
pushf
or
mov
jo
sahf
sbb
and
test
jbe
add
pop
mov
dec
jnp
mov
or
push
lahf
loopne
aaa
cwtl
call
xchg
pop
ret
mov
ret
cld
stc
xor
cmp
enter
inc
mov
inc
sar
cmc
jle
fnstcw
je
fwait
rolb
push
je
dec
pusha
jae
and
ja
mov
inc
insl
fidivrl
xor
sub
mov
mov
or
out
insl
push
notl
or
fchs
adc
das
int
psubusw
flds
roll
mov
lret
cmc
fcomp
mov
push
mov
mov
jecxz
ret
cld
add
mov
std
xchg
ror
insb
cmpsl
sub
dec
das
out
ja
xchg
mov
cli
icebp
fdivs
jl
out
roll
popa
push
loope
jmp
adc
loop
lea
loope
jmp
add
inc
addb
mov
int3
lods
out
iret
push
xor
aam
sbb
fcomps
loope
jmp
jnp
in
int
movsb
add
ljmp
fimull
mov
clc
push
push
ja
xchg
mov
push
xchg
aaa
xorb
jae
mov
inc
jmp
gs
mov
aad
lock
mov
inc
dec
aam
xchg
jg
mov
lcall
push
mov
or
jmp
dec
dec
in
sbb
mov
or
xor
sbb
mov
add
orl
push
das
das
scas
push
int3
xorb
sarl
mov
add
fldcw
loope
jmp
sbb
push
inc
or
ss
jmp
arpl
sub
fwait
mov
push
push
ja
xchg
mov
je
aad
decb
int
add
and
not
xchg
roll
fwait
add
xadd
push
add
sub
or
ja
inc
hlt
mov
mov
xor
lock
pop
jno
lret
icebp
ror
jecxz
inc
dec
mov
sbb
sbb
hlt
inc
sub
repz
adc
adc
jae
mov
pop
orb
jo
mov
push
iret
adc
pusha
sbb
stos
insb
mov
jae
sahf
sub
adc
aad
rorb
into
sub
ja
mov
jl
loopne
ds
mov
repz
out
cli
jnp
ret
rol
lods
test
stos
dec
inc
lds
nop
add
sub
mov
lea
jno
shll
xchg
push
pop
mov
dec
jecxz
xor
sbb
mov
ljmp
into
ret
inc
sti
je
idiv
sub
divb
xchg
add
mov
add
dec
mov
enter
jg
xor
jnp
test
incl
jmp
cmp
or
sub
je
mov
lret
orl
sub
sti
xchg
dec
jle
mov
or
cmc
adc
repnz
inc
roll
lea
add
stos
nop
cmpl
add
lret
sbb
loope
push
add
leave
sbb
mov
pop
jbe
sbb
test
mov
pop
stc
dec
mov
push
lret
into
pop
xchg
or
xorl
jl
orl
xchg
dec
add
sbb
push
sub
xlat
std
jne
ja
ret
jecxz
jecxz
loopne
push
and
lock
push
rol
insl
in
outsl
lods
xor
test
mov
repnz
sahf
or
sub
mov
dec
xchg
insl
jg
enter
lock
aam
and
pop
xor
mov
lock
xchg
pop
xchg
sbb
test
mov
add
rolb
mov
cld
dec
push
popa
stc
xor
mov
cltd
cmovl
bound
std
out
jle
sub
sub
sub
sub
xchg
jp
xchg
push
xchg
inc
ret
add
in
mov
sbb
loopne
arpl
pushf
jbe
jp
shll
mov
testl
and
mov
xlat
jmp
pop
xchg
xchg
jne
xchg
xor
jle
loopne
loope
dec
jae
pop
aaa
mov
inc
addr16
ss
ljmp
sbb
dec
sub
push
xor
shrb
adc
aam
xchg
sub
jge,pt
jne
jbe
mov
orl
mov
cmp
or
popa
nop
aaa
shr
inc
les
push
int3
adc
inc
inc
mov
mov
out
mov
dec
or
mov
mov
dec
xchg
int3
out
or
or
jle
pop
add
dec
inc
or
jecxz
mov
rcpps
gs
sub
mov
sahf
push
inc
test
xchg
aaa
sub
push
xlat
push
inc
push
ja
xchg
push
sub
sub
sub
aaa
xlat
inc
cwtl
std
lds
mov
dec
ja
cmp
push
shrb
xchg
or
cmp
inc
push
jo
sub
jne
add
sub
outsl
cmp
ja
and
xor
cmp
fists
shl
push
je
pop
inc
les
jle
idivl
jne
mov
mov
mov
sub
das
das
push
cld
xor
xor
mov
rclb
test
and
xchg
mov
jg
mov
xor
inc
or
cmp
sub
divb
or
aaa
cltd
ja
inc
pop
scas
rol
lahf
sbb
sub
dec
ja
adc
popf
sbb
jae
cmc
adc
and
inc
sub
movl
and
inc
into
testl
ret
pop
push
add
mulb
mov
lods
xchg
iret
mov
mov
xchg
jp
mov
xlat
inc
pop
fs
movb
adc
fistpll
inc
jl
fisubrs
hlt
mov
mov
dec
cltd
mov
and
mov
cmp
cld
mov
mov
in
loop
cmc
xchg
dec
pusha
mov
mov
jne
pop
xchg
sub
dec
sbb
xchg
xor
mov
dec
add
or
and
lcall
inc
mov
test
inc
add
mov
into
jl
lds
mov
push
mov
add
sbb
mov
in
mov
sbb
xchg
push
dec
ss
and
mov
fwait
pop
mov
jno
mov
mov
jl
sub
mov
or
mov
jg
sbb
jmp
dec
aam
int
adc
cmp
jae
ja
bound
inc
je
fwait
sbb
sbb
sub
test
sbbl
mov
pop
push
lret
test
push
shll
lock
mov
scas
shlb
jl
or
test
dec
or
sub
xchg
out
or
mov
mov
inc
lcall
push
fidivrs
das
push
cltd
adc
lret
shll
inc
pushf
mov
vmread
add
mov
add
std
push
je
pop
iret
stc
xor
jnp
pop
push
mov
sub
mov
lea
imulb
mov
test
lcall
cmc
mov
mov
out
jge
cmp
jle
repz
mov
out
ss
add
pusha
rep
dec
jmp
xlat
mov
leave
inc
and
inc
lods
jge
xchg
rcrl
push
add
icebp
stc
mov
adc
ret
cld
ret
xchg
jmp
dec
cmp
cmp
dec
cmpb
or
push
or
lea
scas
pop
ret
movsl
xor
inc
push
je
sbb
imul
push
and
iret
mov
ljmp
mov
lcall
pop
jbe
jge
push
inc
into
fimull
cmc
push
xor
mov
incb
lods
lahf
sbb
sti
adc
push
add
test
jae
xchg
inc
xlat
jnp
push
bound
into
das
sti
dec
adc
push
stc
aaa
adc
cli
aam
data16
bound
or
adc
xor
push
cmp
pop
add
sub
sahf
or
mov
sbb
inc
dec
mov
sbb
jne
mov
gs
xchg
dec
ret
xor
ljmp
mov
xchg
inc
iret
push
sub
add
inc
push
or
adc
pop
push
mov
xchg
dec
pop
mov
ret
ja
aad
push
js
orb
or
fstpt
and
dec
sub
jo
aas
xchg
imul
ret
loop
repnz
or
hlt
xorl
mov
mov
pop
xchg
mov
sti
add
mov
pop
btr
pop
jne
jnp
testb
dec
push
jns
nop
dec
mov
jb
mov
int3
cmp
pusha
xor
bound
jge
add
mov
into
in
jl
push
sub
aas
aam
lret
je
loopne
add
inc
in
test
outsl
adc
stc
clc
out
or
inc
pop
inc
jo
mov
pand
je
leave
addb
xor
scas
add
mov
data16
idivb
inc
xchg
push
jle
adc
test
add
scas
xor
mov
out
sub
mov
stc
or
inc
lea
loop
and
mov
push
aaa
call
xchg
aad
xchg
clc
ret
fsts
push
cmp
pop
mov
jbe
push
inc
pop
inc
dec
data16
push
ja
mov
mov
gs
jae
mov
mov
sbb
scas
fisubrl
lods
je
outsl
dec
in
fcmovnb
push
jbe
loop
push
xor
add
jge
xchg
jbe
inc
inc
dec
jnp
mov
adc
pusha
xchg
xchg
movsl
sub
enter
call
or
inc
or
mov
daa
mov
push
aaa
jmp
rcrb
push
insl
xor
aam
cwtl
sbb
xchg
les
xor
mov
add
or
inc
popa
mov
push
mov
mov
cmc
fstpl
sub
dec
jb
rcll
pop
into
or
mov
cmc
pop
cmpsl
mov
jle
mov
xchg
adc
enter
sbb
cltd
cld
jbe
sub
dec
aad
fwait
add
mov
inc
stc
jae
ljmp
ds
pop
add
std
mov
mov
dec
mov
ja
mov
idivb
popa
mov
call
out
sub
mov
dec
les
mov
cli
stc
pusha
in
in
mov
das
out
loopne
add
pop
sbb
jbe
idivb
adc
rorb
jp
push
fcompl
and
test
dec
adc
hlt
std
inc
add
sarl
nop
jg
add
cmpb
lds
cmp
aas
or
pop
xor
cmp
add
shll
pop
and
mov
xlat
mov
repz
push
test
cmp
mov
fldenv
or
or
jbe
sbb
popl
inc
inc
cmpl
push
fisubrs
push
xor
out
sub
shll
lcall
mov
fimull
aaa
or
out
les
push
lods
ret
mov
inc
cmp
pop
mov
addr16
pop
sbb
sub
sub
popf
je
stos
add
ja
mov
xchg
fcmovb
jecxz
cmp
xorb
lock
mov
push
jg
test
dec
notl
mov
sbb
adc
add
xchg
sub
dec
xlat
jae
aam
mov
lcall
mov
push
push
ss
icebp
push
push
idivb
jecxz
dec
sub
cmpsl
outsl
idivb
mov
push
aam
fcomps
fcompl
xchg
xchg
leave
out
and
xlat
movb
jne
insb
mov
ret
icebp
xchg
popa
nop
mov
push
or
dec
cmpsl
shll
push
test
inc
or
sub
xchg
bound
daa
lea
xchg
mov
sub
mov
or
outsl
les
loop
sarb
mov
aam
ss
pushf
arpl
stc
outsb
ret
xor
mov
jo
xchg
adc
fmuls
cltd
mov
dec
inc
mov
dec
aam
xor
jo
jl
sub
lret
dec
or
test
push
and
dec
adc
ror
outsb
jecxz
sbb
jl
jl
loop
mov
jb
jbe
jle
mov
add
adc
cmovb
mov
and
xor
sbb
or
xchg
xlat
ret
mov
cmc
sbb
jo
sbb
divb
push
aaa
pop
aam
inc
mov
add
fwait
xchg
bound
int3
ja
add
pop
jno
popa
and
pop
ret
add
fmull
testb
sub
pop
sbb
sbb
popl
push
pop
xlat
sbb
ficoml
test
lods
repz
mov
jnp
jbe
mov
mov
add
mov
xchg
jge
mov
sub
stc
addr16
int
icebp
adc
jle
incb
fwait
add
add
add
sub
pop
inc
jae
or
or
or
ret
dec
dec
inc
xor
or
rorl
or
xorb
pop
cli
cli
ds
inc
jne
add
pop
ret
repz
add
inc
inc
cmc
sub
add
stc
test
cli
pop
push
cld
mov
data16
mov
leave
stc
inc
or
jp
push
jbe
add
cltd
add
mov
or
add
dec
add
mov
or
inc
lea
push
bound
sbb
test
sbb
dec
pop
xchg
repz
movsl
adc
lahf
pusha
mov
mov
adc
popf
pushf
mov
std
pop
mov
in
ds
lods
cmp
jle
cmp
fucom
data16
pop
dec
fucom
pop
outsl
xor
cwtd
das
aaa
add
xchg
sbb
mov
lahf
call
mov
mov
loop
gs
mov
dec
sahf
sbb
into
mov
jo
fldt
jo
fldt
ds
push
dec
scas
aam
out
aam
xchg
push
aam
out
in
loop
fldt
push
dec
sahf
pop
loope
sahf
push
inc
or
mov
inc
out
jecxz
mov
dec
daa
or
xor
fs
pop
inc
sbb
lock
shlb
not
xlat
cs
arpl
adc
lock
mov
cmp
add
clc
adc
push
repnz
add
adc
stc
pop
jl
jge
stc
sbb
mov
fmull
adc
ja
mov
mov
push
pop
icebp
repnz
sbb
and
sbb
adc
sbb
sub
push
or
add
push
pop
add
mov
test
add
clc
adc
arpl
mov
insb
leave
pushf
sbb
adc
adc
add
jge
sbb
and
std
stc
sti
or
mov
adc
jae
sub
and
push
and
add
mov
push
lea
cltd
add
andb
add
jg
or
pop
or
and
push
pop
stc
sub
adc
repnz
sbb
lea
test
incb
mov
repnz
test
cmp
jo
test
int
sbb
jno
cmp
cmc
sub
mov
rolb
sbb
xorl
jo
repnz
jnp
cltd
add
adc
sbb
lock
adcb
or
xchg
std
and
les
mov
jp
xchg
adc
push
lock
jno
andl
and
jns
or
mov
jge
adc
sti
pop
jg
and
repnz
adc
jo
orb
sbb
mov
mov
add
or
stc
sbb
and
mov
jp
or
xchg
jmp
or
hlt
and
cmp
les
xchg
jl
adc
jns
and
hlt
testl
cmpsl
sub
adc
jns
subb
mov
jl
adc
mov
or
lea
mov
adcl
mov
ss
jns
sbb
and
adc
add
mov
and
sbb
mulb
pop
je
lea
and
cmp
andb
push
or
sti
xor
add
jno
mov
jp
or
jbe
sub
adc
and
jle
mov
icebp
jns
negb
test
mov
jae
pop
and
out
jp
or
jmp
je
and
jne
or
jns
and
jns
je
bound
jle
and
adc
push
and
and
clc
ss
cwtl
jo
xor
std
and
sbb
repnz
adc
dec
jo
push
lock
sub
sbb
jge
pop
add
add
and
test
push
and
push
adc
mov
orb
mulb
push
jle
mulb
jne
and
adc
xchg
adc
jge
jle
ss
or
cmpl
clc
and
adc
sbb
mov
or
xor
mov
pop
mov
mov
sbb
jbe
sub
mov
jl
adc
and
xchg
push
push
or
or
mov
or
or
add
test
mov
icebp
icebp
dec
testl
sbb
xorl
sahf
cmc
jmp
mov
movzbw
call
mov
dec
ret
out
xor
jge
ret
push
xchg
mov
aam
les
inc
push
pop
mov
aaa
scas
xchg
div
popa
adcl
mov
jb
enter
shrl
push
inc
aad
inc
ss
fdivrs
in
cmpsb
sub
cmp
enter
mov
in
mov
mov
jl
mov
sub
je
mov
dec
lds
or
inc
dec
popf
or
jl
xchg
lods
and
hlt
mov
and
orl
adc
sub
dec
jnp
inc
and
push
je
lret
rolb
push
jecxz
or
out
lods
movb
fwait
add
loop
inc
mov
or
cltd
mov
inc
add
call
in
mov
sbbl
jmp
or
ds
cwtl
clc
mov
bound
push
xor
inc
or
add
test
shlb
jae
lods
ljmp
dec
xor
jns
jns
xor
mov
and
cmp
add
mov
fcomip
sti
push
roll
lret
inc
ror
xchg
je
mov
pusha
pushl
mov
cmp
cmc
bt
mov
stc
mov
push
test
sub
mov
lea
jo
pusha
rep
bswap
not
mov
pushl
mov
movb
lea
jmp
pushf
push
clc
add
pushf
clc
mov
add
adc
test
mov
stc
cmp
pusha
push
jmp
jb
push
sbb
dec
int3
stc
push
cld
jmp
mov
repz
xor
add
shr
push
adc
cmc
cmp
xor
push
sub
mov
and
xor
push
fildll
je
jb
aam
repnz
push
mov
out
jp
fidivs
xorb
xor
pop
xchg
lret
pusha
cli
add
mov
clc
stos
push
jns
cmp
fmuls
jecxz
adc
push
adc
mov
fiadds
sarb
iret
add
cmp
adc
std
xchg
imul
cmp
sbb
sarb
xor
sbb
aaa
repz
mov
pop
gs
leave
inc
pushf
int
add
pop
and
in
jl
and
push
pop
out
jnp
or
movsb
scas
mov
push
cmpsl
xchg
out
enter
or
lret
sub
scas
sbb
pop
test
icebp
aam
sbb
cld
jmp
pop
out
lods
mov
jae
pop
xor
pop
ret
icebp
popf
pop
repz
pop
xchg
pop
out
lret
dec
or
mov
in
andb
dec
enter
cmc
inc
aas
ljmp
dec
jg
pushf
mov
rolb
sub
mov
cmpsl
shl
dec
shl
xchg
jl
or
mov
cmp
inc
mov
ljmp
pushf
and
pop
mov
cmpl
dec
aas
cmp
mov
lods
lret
adc
or
lods
and
push
ds
daa
shufps
aas
and
add
test
mov
xor
push
or
pop
or
or
loop
cmc
mov
jg
sub
aaa
jp
push
pop
adc
outsl
pop
mov
rclb
mov
fwait
xlat
or
adc
pop
addr16
sbb
fmuls
mov
mov
cmp
xchg
mov
xchg
xchg
and
out
or
add
sub
push
mov
nop
sahf
pop
lret
and
xchg
and
sarb
mov
pop
and
gs
out
sti
lret
pop
mov
sub
inc
insl
mov
shll
or
cmp
sbb
or
pusha
jae
lahf
fsts
ret
xchg
sub
int
xchg
shrb
outsl
ss
cltd
ret
xor
jnp
jmp
add
mov
sub
mov
lods
or
sarl
adc
jecxz
movsl
mov
jno
sbb
xorl
push
mov
cmpsl
mov
sahf
and
jge
or
and
mov
rcr
push
lret
cmp
fwait
jl
jmp
fwait
add
pop
cmp
push
popf
mov
leave
enter
out
xor
ror
dec
fdivrs
out
xchg
and
jb
lods
adc
inc
sar
mov
cmpb
popaw
iret
xchg
out
mov
add
dec
out
jb
xchg
jnp
repz
fwait
lods
sub
mov
insl
lret
mulb
mov
out
or
mov
nop
dec
mov
test
cmpb
xchg
rol
aam
test
icebp
push
pop
and
sbb
push
mov
and
inc
ja
dec
frstor
roll
push
jp
fbld
sub
cmp
pop
lcall
in
sbb
jmp
addr16
clc
rcrb
inc
mov
cmp
jne
mov
fildll
mov
push
sbb
mov
stc
mov
mov
pop
fmull
insl
push
movsl
cmc
test
lret
aad
xor
lock
int3
or
scas
cmp
push
stc
push
mov
sub
xor
test
jp
fidivs
loop
xlat
shl
cmp
out
lds
sar
xor
sub
dec
adc
subb
and
je
dec
ja
mov
cmp
pop
and
sub
mov
rcl
movsb
les
rcrl
dec
insb
scas
hlt
jns
bound
push
and
in
hlt
lret
pop
xchg
cmp
mov
ret
cli
jnp
movsl
loope
add
push
arpl
xchg
xchg
cmp
cs
mov
jb
add
scas
sbb
out
and
jge
and
js
out
insb
or
jle
xchg
mov
sub
pop
and
addr16
mov
sub
mov
lea
fucomp
and
fistps
adc
jo
dec
cmpsb
ret
mov
pop
aaa
insl
xchg
leave
dec
dec
aad
mov
inc
mov
xchg
loope
repz
pop
dec
pop
dec
repz
push
mov
lahf
adc
cmp
shl
out
imul
call
out
pop
xor
xor
cmp
dec
outsb
addb
inc
push
lret
mov
xchg
les
mov
inc
jnp
lea
cmp
xchg
push
mov
cs
cmp
push
mov
imul
xor
mov
sbb
lcall
pop
xchg
mov
inc
bound
ss
inc
imul
mov
jae
ret
cmp
mov
mov
xor
and
leave
mov
pushf
push
sbbl
adc
test
jl
ss
jg
pop
imul
sub
repnz
xorb
notb
and
lret
xchg
ljmp
repz
push
into
das
test
sub
inc
lods
xchg
jg
frstor
out
sub
xchg
xchg
pop
push
jbe
mov
mov
in
sarl
pop
inc
fsubr
push
int3
pop
out
push
adc
adc
pop
push
mov
ret
cmc
pop
les
and
sbb
outsb
jns
xchg
inc
sar
cmp
and
idivb
out
push
mov
cmp
scas
shrl
sub
pop
out
push
pusha
xor
mov
fnsave
mov
out
outsb
pop
add
into
rcll
xor
cmp
mov
repnz
aam
int
push
adc
fsubrs
int3
je
cmp
mov
mov
gs
xor
cmp
push
jge
ret
ss
jns
jno
shll
push
popa
int
int
sarb
test
add
xchg
arpl
add
jl
cmc
push
push
push
stos
pop
dec
jnp
pusha
iret
jecxz
and
lods
int
jmp
aas
push
aad
push
fdivl
mov
sub
xor
ret
mov
std
mov
cld
notl
sbb
mov
cmp
and
sbb
jo
sub
popa
add
das
add
add
cmc
imul
bt
jmp
pop
push
sbbb
sub
push
dec
enter
pusha
ret
or
outsl
mov
lret
xchg
les
pop
adc
pop
loop
ljmp
ljmp
test
ja
inc
mov
add
enter
loopne
pop
push
xchg
xchg
mov
xchg
test
sbb
int3
test
sub
dec
cwtl
inc
xchg
push
adc
adc
push
ret
pop
mov
fldt
scas
mov
jns
loope
mov
test
cmp
ret
mov
fincstp
sbb
ror
pop
lret
mov
out
fiadds
inc
add
ret
pushf
call
mov
fnsave
in
mov
subb
push
mov
xchg
out
mov
repz
sbb
into
fisubrs
in
filds
xor
inc
fldcw
insl
and
pop
xor
and
pop
inc
rclb
sub
jg
loopne
cld
rolb
mov
xchg
fbstp
sub
lcall
or
mov
scas
dec
mov
gs
gs
inc
test
sbb
cli
and
push
in
inc
xor
cmp
repnz
adc
fildll
mov
push
addr16
test
mov
test
stc
shr
add
shl
test
pushf
mov
stc
test
pushf
call
push
loope
je
mov
stos
shll
push
add
bound
sbb
mov
nop
mov
shl
adc
cld
sub
pop
jl
mov
data16
or
cmpsl
and
push
aaa
call
lcall
push
loopne
pushf
rol
mov
out
and
cmp
dec
cli
adc
push
stos
repz
inc
inc
jmp
mov
jp
mov
pop
mov
dec
cs
xlat
js
xorb
xor
jmp
roll
mov
fcmovbe
jmp
addr16
mov
bound
les
test
dec
cmp
loope
out
mov
icebp
jno
mov
insb
stc
int
popf
into
xor
lods
sub
mov
fs
mov
mov
outsl
xchg
mov
out
sar
sbb
dec
add
push
dec
ss
int3
int
ret
pop
mov
leave
insb
lcall
nop
loopne
pop
add
lcall
enter
pushf
movl
push
push
mov
push
lea
jmp
add
push
fsts
sbb
lcall
xor
sub
xchg
pop
jns
xchg
shlb
sub
outsb
test
addl
mov
bound
xor
sub
adc
xor
pop
idivb
lods
outsb
sub
fucomip
cwtl
add
pop
xchg
inc
mov
scas
jnp
mov
mov
or
sub
into
test
nop
shr
pop
imul
mov
inc
add
jmp
enter
repz
call
or
test
ffree
cmp
push
mov
jbe
jl
ljmp
push
push
out
mov
adc
mov
lret
lret
lahf
xchg
ljmp
cld
call
xor
lea
out
inc
push
cmp
sbb
inc
fs
push
sub
lods
cmpsl
clc
subb
sub
jno
popf
fcoml
in
jns
cmp
stos
arpl
jg
stc
add
daa
iret
out
out
aaa
push
add
aam
pushf
ret
mov
std
adc
push
arpl
gs
insl
sub
out
fwait
sbb
mov
fmul
or
icebp
inc
jl
dec
fucomp
xchg
sub
sbb
jmp
jae
sbb
mov
test
jmp
dec
dec
ret
std
incl
outsl
cmp
xchg
jmp
stos
adc
scas
shrl
mov
fmull
aaa
inc
notb
loopne
fistpl
rclb
orb
dec
cmp
in
loop
mov
lret
mov
outsl
add
pushf
pushf
lea
jmp
lea
ja
xchg
movzbw
pop
not
setno
call
jmp
or
push
pop
dec
and
mov
cmp
sbb
pop
pop
push
dec
out
out
cmc
out
sar
cli
adc
lahf
cmpl
call
or
xchg
std
adc
sti
das
and
pop
cmpsl
ss
lea
cmpsb
pop
or
ljmp
mov
stc
out
sub
mov
decb
outsb
iret
shrb
fs
cmpsb
push
cmp
inc
les
stos
ss
add
xchg
adc
adc
ds
or
sbb
xchg
xchg
mov
push
mov
in
cvttps2pi
pop
or
aad
push
xchg
mov
gs
mov
hlt
aaa
shrb
scas
push
cmpsb
sti
enter
and
cmpsb
insl
popf
mov
mov
push
jae
or
push
dec
jmp
shr
push
iret
pop
pop
inc
lea
dec
jp
jae
out
sti
in
cmp
fistps
push
imul
mov
in
pop
and
out
pop
sbb
stos
pop
inc
sar
adc
ss
jl
out
push
repnz
psllq
sub
jge
push
and
cmp
inc
test
pushf
lret
sub
sub
sbb
mov
mov
mov
orb
fadd
jb
in
or
test
dec
pop
or
fisubrl
inc
adc
xchg
add
push
out
inc
roll
loopne
dec
sub
mov
ss
cld
pop
movsb
loope
into
xchg
dec
pop
jae
and
lea
daa
sub
mov
mov
lea
xlat
arpl
push
imul
mov
lods
out
subl
stc
test
and
fbstp
lods
int3
inc
js
dec
cli
or
enter
movsb
push
xchg
jb
mov
hlt
add
sti
pop
pop
scas
jno
inc
mov
mov
ljmp
sbb
insl
xor
das
dec
sbb
faddp
dec
mov
fimull
jb
and
cmp
xchg
ja
ljmp
popf
xor
sub
mov
repz
loop
add
pop
sub
add
mov
adcb
push
push
dec
xchg
outsl
or
stos
cmp
pop
dec
aaa
or
jmp
shl
fstpt
push
sbb
jb
sti
adc
pop
lods
cmp
xor
push
push
xchg
pop
add
xor
sub
mov
sbb
xor
scas
push
imul
xor
push
add
pop
clc
sbb
push
imul
pop
and
pop
mov
adc
pusha
out
aaa
cltd
pop
or
add
idivb
movsb
sbb
or
xchg
int
jmp
popf
inc
test
rorb
cmpsl
adc
call
lret
mov
lret
sub
xchg
mov
fstl
xchg
fdivrp
cmp
or
into
orb
insl
mov
leave
mov
push
or
and
xchg
enter
enter
fwait
cmpsb
sbb
jns
pop
fstps
sbb
loope
dec
cmpsl
bound
lahf
mov
es
dec
cmpl
lods
das
out
xchg
arpl
daa
ret
mov
push
pushf
mov
mov
adc
aad
lret
aad
mov
out
inc
add
in
int
mov
lock
push
jbe
push
popa
out
sti
pushf
pushf
popa
scas
cmp
lods
lcall
pop
jns
mov
fsubrs
cld
aam
enter
stos
jecxz
inc
bound
fs
sbb
xor
pushf
cmp
in
and
sbb
jmp
cmpb
jo
or
ljmp
mov
mov
push
cs
cmpsl
minps
mov
mov
arpl
pop
imul
add
mov
fmul
sbb
cmp
mov
mov
jnp
lret
sbb
lret
enter
movsl
dec
jl
push
and
sub
mov
pop
pusha
jno
cwtl
es
push
add
pusha
rcrl
jns
in
imul
aad
int
dec
mov
xchg
mov
ljmp
push
xlat
call
xchg
in
test
and
xchg
aam
mov
sahf
xchg
cmpsl
adc
es
out
fsubs
push
cmpsl
sahf
jge
das
aam
call
insl
lock
insl
pusha
jl
xor
sub
mov
xor
mov
jno
sbb
insb
mov
inc
pop
sbb
xlat
lret
stos
test
ja
nop
mov
clc
les
mov
sbb
xor
add
cmp
mov
and
loope
in
out
pop
cmp
jg
ficompl
jns
shrb
jne
dec
mov
mov
stos
add
leave
or
pop
fdivs
mov
dec
in
xchg
rorb
fmull
dec
fstp
insl
inc
adc
lret
or
mov
push
jmp
push
insl
enter
fdivs
xor
xlat
mov
cwtl
sbb
pusha
rolb
xchg
jo
movsb
std
pop
lods
outsb
sbb
pop
dec
cmp
popf
stc
add
mov
nop
mov
aad
cltd
or
sub
js
lret
mov
jns
in
repnz
adc
mov
js
mov
mov
aas
and
cmp
push
insb
mov
shlb
sti
pushf
or
pusha
pusha
call
inc
mov
cmp
nop
sub
cmp
pop
inc
icebp
and
sbb
jl
test
xor
or
test
xchg
push
bound
push
pop
lods
imul
adc
mov
cwtl
cmp
inc
sarl
mov
cld
xchg
mov
mov
and
std
adc
sti
mov
dec
loope
mov
es
cwtl
push
mov
ds
fs
adc
cltd
pop
lods
pop
push
pop
lret
das
or
arpl
dec
outsl
pop
mov
adc
xor
cli
iret
add
inc
pop
out
pop
xor
xlat
call
out
test
xor
mov
mov
add
imul
push
cmp
loopne
inc
std
xor
call
and
cmp
lcall
fwait
imul
lcall
lret
lret
lahf
pop
or
pushf
fistpl
mov
jmp
cli
mov
push
fwait
mov
dec
mov
mov
mov
enter
call
insb
cmp
jl
xorb
movsb
inc
nop
lret
cld
mov
inc
dec
inc
lea
jne
lea
movsbl
movb
lahf
sets
lahf
push
setne
lea
pushf
call
xchg
lahf
and
rclb
int
ljmp
jl
xchg
out
icebp
xchg
sub
jo
lock
jl
jne
cmp
xor
or
cli
jl
mov
pop
add
xor
pop
cmpsl
stos
inc
jbe
pop
movsl
sarl
repnz
clc
add
mov
mov
mov
sub
mov
pop
push
push
push
dec
and
out
cmp
inc
adc
dec
jmp
mov
add
add
pushf
mov
shld
not
clc
mov
sub
shr
sub
clc
push
rol
xor
aam
shl
push
mov
cwtl
movsbw
sar
push
movsbw
btc
sub
bswap
lea
jmp
dec
lods
mov
mov
sbb
popf
movsb
mov
inc
mov
and
pop
imul
movsb
lahf
int3
jae
out
xchg
jae
rcrb
adc
dec
cmpsb
jae
lods
std
int3
cmc
ss
shl
lock
xlat
iret
fwait
pop
outsl
sub
shr
xchg
stos
mov
push
int
cmpsb
fimuls
pop
dec
scas
sub
pop
xchg
test
outsl
movsl
add
push
push
rorb
daa
mov
xor
sub
jae
cltd
add
sahf
insl
lahf
js
fstpt
sub
jno
xorl
mov
in
cmpsl
mov
sbb
int
cmp
stc
lods
ret
jnp
sarb
mov
lcall
sbb
push
mov
or
xchg
jnp
cmp
jmp
arpl
jae
fwait
pop
mov
popa
negb
push
push
jp
ja
push
fidivs
sbb
pop
pop
ficomps
ficompl
sbb
fstpl
pop
pop
ficompl
sbb
lahf
fidivs
sbb
ficomps
xor
pushf
xor
push
fidivs
pop
fstps
sbb
sbb
fstenv
out
pop
call
rcrb
pushf
adcb
push
sbb
lods
or
mov
cmc
jge
lret
js
filds
or
scas
es
fadd
fwait
test
add
mov
and
mov
mov
arpl
adcb
push
loop
and
ja
int3
cmp
mov
sub
std
inc
or
add
pop
inc
jecxz
stos
adc
movsb
daa
lods
stos
movsl
ret
test
lret
mov
subl
sub
sub
daa
sahf
cmp
mov
data16
fwait
inc
add
shlb
jl
add
loop
push
imul
fs
std
int
mov
jg
mov
gs
pop
mov
lods
jb
fstpl
dec
and
mov
push
lods
mov
jmp
iret
pushf
imul
or
cmp
mov
imul
mov
fistpll
mov
stc
xor
push
lea
call
call
mov
in
ret
mov
loope
xchg
in
pop
fstpl
push
sbb
pop
and
lock
repnz
xchg
jns
add
push
cwtl
daa
stc
aaa
leave
in
stc
or
sbb
or
aas
aaa
adc
dec
fs
or
pop
mov
mov
bound
daa
cli
mov
cmpl
mov
rorl
repz
shlb
sbb
inc
pop
sub
aad
lcall
push
mov
in
in
je
cli
in
pop
push
lret
cwtl
inc
pop
cmp
in
push
stos
cli
daa
int3
dec
mov
jmp
pop
sbb
cmc
scas
scas
jns
mov
add
fidivrs
inc
shlb
inc
and
mov
push
and
aam
sti
sub
test
fsubl
jle
add
test
mov
mov
mov
orl
out
xor
lea
ljmp
repz
adc
or
xchg
mov
addr16
data16
cmp
dec
inc
cmp
mov
jno
or
gs
lahf
fwait
imul
mov
mov
aam
ret
jge
pop
outsl
cli
xchg
lahf
enter
mov
mov
pushf
data16
pop
mov
or
xor
test
mov
rcll
mov
xchg
pop
and
sbb
dec
in
fmul
push
push
inc
pushf
pop
shll
or
inc
out
arpl
decb
out
push
adc
pop
outsb
jmp
xchg
cmp
in
sahf
ret
mov
lea
push
hlt
xlat
lahf
push
and
faddl
popa
cmpsl
mov
dec
ror
ret
push
nop
mov
inc
out
mov
dec
sub
pop
jge
js
rcrb
lret
out
xchg
rcrb
and
mov
cmc
not
bt
ror
pusha
push
neg
call
call
call
push
lock
std
std
out
addr16
cmpb
inc
ret
sub
mov
pop
mov
xor
outsb
scas
lods
dec
jge
imul
popf
and
aam
pop
into
add
out
and
test
xor
addl
stos
add
cmpsb
ja
in
xchg
push
mulb
add
sti
inc
enter
dec
jmp
push
cmc
cmp
pusha
lea
jb
cmp
jmp
push
call
movb
pushf
stos
pushf
pushf
movl
pusha
lea
jmp
pushf
lea
call
pusha
lea
jne
not
movzbw
not
mov
pushf
pushf
push
lea
jmp
fisttpl
dec
and
mov
xchg
adc
repnz
adc
or
xor
xchg
pop
xchg
adc
sarl
ss
arpl
mov
ds
add
rorb
sbb
xor
pushl
xor
or
gs
jno
sub
mov
sbb
mov
jp
push
mov
aad
sub
xor
lret
bound
not
push
sarb
jge
sbb
std
adc
push
nop
sti
xchg
nop
mov
pushf
jo
ds
mov
xor
pop
repz
push
adc
notl
mov
pop
sbb
add
and
fists
cli
lock
pushf
fsubl
jo,pt
jp
nop
popa
or
xor
jo
pop
lock
xor
nop
fcmovu
jl,pt
jnp
cmp
add
pop
test
pop
nop
repnz
add
or
jo
js
sahf
stc
cmp
adc
lock
xor
xor
sbb
push
or
jle
ret
mov
push
ljmp
icebp
jo
pushl
mov
pushf
jle
jb
icebp
xor
dec
rclb
adc
jo,pt
jo
or
or
mov
repz
lock
call
jp
cmp
pushf
pop
jg
jmp
push
xchg
adc
sbb
pushf
popf
add
add
shll
clc
sbb
and
mov
ret
std
or
pop
mov
orb
call
sbb
pop
std
sbb
jle
cld
adc
mov
jo
rorl
cvtps2pi
icebp
imul
mov
xor
ss
push
lock
les
sarl
hlt
ds
jno
repz
and
adc
out
sbb
or
rclb
icebp
lcall
das
push
fists
mov
test
adc
insb
dec
mov
sbb
sbb
push
mov
icebp
pop
sub
rcr
pop
in
push
mov
adc
dec
fwait
jo
mov
movsl
test
in
adc
or
pop
test
hlt
pop
test
idiv
shll
jo
out
je
add
imull
and
and
sarl
clc
inc
push
sbb
fs
pop
mov
mov
adc
add
or
sbb
sbb
stos
repnz
icebp
js
add
and
out
mov
test
xor
loope
cmp
xor
imul
or
subb
add
sub
add
pusha
mov
jp
sbb
jns
xor
jne
jle
shl
jnp
cmc
popa
push
jbe
aam
clc
pop
adc
jl
cmp
push
pop
push
sbb
rcr
cltd
xchg
repz
jl
cwtl
push
imul
in
jecxz
and
jbe
loopne
xchg
dec
stc
sbb
cmpl
arpl
je
fnstsw
jmp
jle
enter
sahf
mov
scas
push
xor
push
adc
andb
idivl
push
icebp
cmp
cmp
aad
jno
repz
lods
sar
mov
fmuls
pusha
xchg
mov
icebp
out
mov
cmc
xlat
in
aas
push
mov
adc
mov
mov
mov
add
mov
lcall
repz
mov
mov
mov
mov
or
pusha
sub
dec
jo
sub
push
jmp
lret
jge
cmc
jg
adc
ja
pusha
sub
sbb
js
and
ss
push
mov
lock
scas
popa
mov
and
sar
add
pop
sub
daa
push
cmp
push
repz
outsb
dec
sub
push
rol
push
lret
notl
or
mov
or
icebp
and
xor
and
cmc
push
std
mov
out
push
call
sub
mov
xor
popa
nop
sbb
dec
and
xor
sbb
push
jo
jl
lds
push
adc
test
cmpb
xchg
repz
into
mulb
jae
into
testl
hlt
xchg
push
push
adc
and
nop
jp
mov
repz
repnz
push
adc
shlb
adc
cwtl
cmc
xor
inc
pop
fs
insl
daa
aas
cmp
or
or
cld
or
stos
cmp
cmp
leave
mov
cs
mov
cli
or
jl
jno
and
call
add
and
add
dec
rcll
dec
xchg
sbb
sbb
adc
imul
fmuls
pusha
mov
pushf
dec
mov
or
sti
mov
add
xchg
cltd
in
rcl
jle
insl
adc
sahf
repz
pushf
repnz
add
jmp
and
xchg
xor
adc
adc
lds
mov
repnz
pop
icebp
call
mov
cld
int3
or
mov
or
imul
outsl
and
lock
stc
leave
popa
fidivs
jno
lahf
push
mov
jno
call
jg
sbbb
repnz
push
pop
push
fstpt
sub
mov
or
jmp
xchg
jp
jns
jno
into
dec
lock
xor
popf
add
mov
les
clc
outsl
xchg
call
xlat
pusha
jmp
lret
bound
lods
push
mov
sub
adc
fdiv
imul
cwtl
cmc
sahf
nop
pushl
popa
jle
jb
push
int
mov
pop
adc
jmp
push
ljmp
jmp
int3
sub
cli
movsb
in
dec
call
dec
add
packsswb
or
inc
lret
push
jns
inc
xchg
xor
arpl
mov
out
int
ljmp
push
lcall
stc
popa
nop
jb
pop
dec
and
jg
pop
fsubr
sahf
std
in
test
add
and
pop
jnp
stos
test
xor
repz
jp
xchg
dec
adc
pop
inc
or
push
repz
negl
or
jl
stos
mov
cmp
and
stos
or
cmp
ja
lret
jno
jmp
fisubrs
test
aas
lcall
jae
xor
mov
shlb
div
popa
mov
and
in
dec
dec
jg
pop
sub
push
outsb
ds
andb
mov
lock
les
or
and
xchg
adc
add
leave
cmp
test
repz
cmp
push
inc
xchg
repz
insb
jne
sub
inc
or
or
add
mov
cmp
daa
cvtpi2ps
dec
pop
sub
dec
movsb
push
sub
cmp
inc
test
xor
sar
out
xor
sub
jno
fidivrs
lock
pop
adc
hlt
xor
jb
cmpsb
ss
pop
aas
test
jle
dec
loopne
xorb
nop
imull
inc
xchg
xor
repz
das
shl
cmp
ljmp
jns
sarl
inc
pop
push
push
xchg
repnz
mov
adc
icebp
mov
mov
adc
leave
seto
rol
pop
nop
jmp
je
xchg
std
add
xchg
sub
out
es
test
bnd
stos
cmc
fidivl
sahf
rolb
pop
dec
icebp
adc
mov
int3
sub
mov
xor
adc
dec
repz
push
xor
orl
dec
inc
das
lcall
rclb
jmp
jae
pop
hlt
xor
dec
shlb
and
adc
jp
insl
pop
adc
pop
xor
inc
enter
inc
test
je
push
mov
add
push
out
mov
daa
push
or
repnz
sub
hlt
mov
insl
repz
sub
test
mov
lock
out
adc
xor
mov
xchg
std
je
bound
adc
push
mov
popa
sbb
mov
insb
pop
add
adc
mov
xchg
mov
sbb
push
jne
imul
cmp
sbb
mov
dec
repnz
popa
test
sub
or
and
add
xor
xor
adc
and
insl
rorb
adc
loopne
sub
cmc
in
add
pop
call
imul
sub
jg
ds
rorl
cmp
inc
jg
jnp
and
cmpsl
je
lcall
push
xor
popa
jae
into
dec
ret
lock
imull
xor
test
jbe
mov
push
popf
cmp
add
popa
mov
mov
sbb
pop
cmp
push
pop
frstor
cmp
cmp
in
jne
pop
ret
test
cmp
cmp
jmp
or
sbb
clc
dec
test
add
sbb
pushf
mov
cmp
xor
aam
or
push
pusha
scas
mov
scas
jle
scas
nop
lea
in
xor
push
in
jo
push
or
in
xor
pushf
rolb
pusha
sub
push
push
into
mov
and
ficoms
push
call
lar
dec
xor
jo
and
jp
add
adc
and
sar
or
repz
mov
rorb
lret
adc
jnp
sahf
jne
out
popa
mov
or
sub
mov
mov
cli
mov
jbe
pop
add
fwait
repnz
nop
cmp
push
loop
sub
mov
dec
and
clc
ljmp
rcrb
out
adc
cwtl
popa
adc
shl
push
pop
sub
inc
mov
mov
imul
inc
adc
mov
sub
dec
jp
or
popa
adc
scas
xor
jns
repz
ljmp
out
adc
adc
jge
test
mov
sar
ja
pop
paddb
push
out
pop
jae
and
mov
jbe
xchg
mov
je
imul
sbb
insb
rcll
jnp
arpl
cli
dec
loopne
xor
test
dec
xor
into
jne
pop
xchg
add
mov
inc
jp
pop
inc
inc
push
decl
mov
into
add
jo
sub
aad
bound
js
js
xor
push
sub
cmc
sbb
repnz
push
mov
and
nop
test
and
adc
jbe
mov
rolb
paddb
adc
ljmp
mov
and
sbb
js
popl
stc
shlb
shl
mov
add
scas
cmp
shrl
fdivs
and
or
fcomps
es
and
or
rcll
hlt
jmp
xchg
or
xor
sbbb
lock
mov
cmp
out
lea
jge
mov
xchg
les
jb
rorl
sub
xchg
adc
push
xor
push
ror
subb
rorl
cmc
or
cmp
pop
add
insl
mov
or
sbb
aas
repz
jg
cmc
into
test
jne
rclb
insb
idiv
jecxz
stos
and
cmp
icebp
mov
xchg
stc
jmp
cmp
pop
sub
xchg
sysenter
xlat
mov
outsb
push
lock
push
jbe
lock
adc
pop
mov
or
nop
sub
out
add
ljmp
int
jb
pusha
push
xor
dec
popa
or
push
fmulp
xor
aas
push
test
xor
jp
pop
enter
xor
icebp
and
aad
icebp
push
or
or
push
rolb
adc
xchg
sarl
and
jae
push
cmp
sahf
lock
cmp
adc
push
pop
lret
pusha
insl
xchg
mov
and
cli
cmp
push
or
lock
mov
add
pop
sbb
sbb
std
mov
dec
add
mov
adc
je
ror
sub
clc
adc
jae
pusha
xor
shr
popf
fisubrs
jmp
jmp
js
jae
sarl
adc
sbb
inc
fnstenv
push
or
mov
sub
xchg
dec
xchg
add
mov
shl
fnstsw
mov
xchg
add
aas
push
adc
adc
subl
dec
or
lcall
mov
pop
je
dec
jecxz
lahf
mov
sahf
pop
test
adc
xchg
pop
push
lret
cmc
pop
rclb
push
sub
fistpll
cmc
cmp
mov
int
dec
cwtl
or
decb
jo
mov
push
and
or
sahf
xor
into
testl
adc
ret
or
incb
xchg
pop
fwait
pop
hlt
push
add
mov
nop
and
or
pushf
lcall
sbb
sbb
add
push
or
sahf
jp
adc
aam
or
aam
or
add
mov
mov
ret
sahf
mov
cltd
mov
fwait
nop
pusha
mov
xlat
cwtl
push
mov
cld
arpl
pop
inc
lods
and
sbb
push
xchg
int
or
xlat
fnstsw
test
lods
notb
mov
xor
xchg
xchg
adc
dec
fwait
fs
adc
popa
shll
adc
add
and
iret
xlat
inc
push
lcall
lock
jnp
jo
add
ss
cwtl
js
dec
sbb
sub
or
popa
shrb
pop
cmp
es
mov
mov
and
ljmp
jb
xor
movsb
xor
mov
xor
add
idivl
sahf
stos
cmp
cmc
xor
ss
lods
shlb
add
pop
nop
mov
lock
mov
iret
out
mov
inc
pop
xchg
push
xor
sub
dec
mov
xor
mov
fisubl
repz
rcl
enter
mov
fildl
pandn
cwtl
adc
pop
dec
pusha
and
jns
push
icebp
add
dec
xor
loope
xor
xor
leave
xchg
push
ss
and
enter
adc
mov
jae
add
repz
push
xor
repz
and
jp
pop
xor
cltd
or
sub
add
mov
xor
addr16
sub
push
ja
jle
mov
mov
adc
outsl
imul
and
stos
jo
add
adc
inc
popa
shlb
dec
shr
lret
cli
dec
jns
stc
pop
aam
push
and
clc
sahf
into
sbb
xchg
je
dec
fldl
test
push
je
mov
test
cmovb
rep
mov
inc
movsb
and
loop
in
push
stc
dec
add
cmc
out
enter
mov
push
cltd
lcall
or
cmpsl
fdivs
jo
pusha
int3
xchg
mov
and
es
mov
repz
push
mov
pop
addb
push
test
dec
das
adc
sahf
rorl
inc
or
mov
jbe
xchg
xchg
add
mov
and
lock
sbbl
jle
add
jg
add
jne
sub
test
js
mov
or
jne
repz
daa
jp
insl
or
call
sub
xor
frndint
insb
or
xor
fs
je
mov
or
pop
je
stos
cwtl
popa
push
je
xlat
jl
in
inc
push
sub
loopne
je
pusha
stc
mov
sar
xlat
add
inc
sahf
xor
cli
sbb
cwtl
popa
push
mov
pop
jecxz
adc
enter
lock
pop
popa
sbb
push
push
repz
mov
xchg
push
inc
pop
add
mov
xor
jnp
jb
push
inc
sub
iret
sti
imul
adc
cmp
pop
pop
addb
je
jne
pusha
dec
mov
inc
sti
hlt
mov
mov
add
dec
mov
adc
rdmsr
fnstenv
mov
pushf
lds
and
pusha
sbbl
cmp
pusha
jns
je
aas
ss
cmc
lock
addl
mov
ds
clc
cmpsl
xor
out
and
icebp
inc
jle
lock
out
cmp
mov
sti
jmp
pop
mov
push
xchg
sub
push
cld
icebp
es
or
xchg
cmp
push
stc
andb
adc
mov
sub
sbb
mov
jl
popf
lds
fnstsw
pop
mov
rcrl
xlat
jnp
mov
jge
mov
in
rcrb
xchg
sub
xor
mov
xor
inc
jbe
lcall
push
cs
and
mov
mov
sbbl
sbb
mov
test
cmpb
stc
cld
out
sbb
cli
cmc
pop
jns
ds
inc
iret
sbb
xchg
mov
in
nop
sub
rcrl
shrb
in
push
popa
leave
mov
jo
push
movsbl
adc
cmp
mov
scas
sti
pop
mov
or
sahf
mov
icebp
sbb
mov
mov
repz
mov
stos
cmpxchg
shl
push
call
into
int3
cmc
push
or
jo
aad
in
jae
ficompl
pop
nop
pop
fcom
pushf
or
loop
or
sarb
or
dec
dec
add
lods
sub
mov
inc
popl
call
jo
jno
and
rcr
xor
mov
daa
shlb
push
out
jo
cli
shll
push
xchg
loop
fucomip
add
dec
out
pop
cs
lret
in
sahf
loopne
iretw
push
fidivrs
and
mov
call
jo
jb
ds
iret
push
inc
inc
dec
push
mov
inc
push
shl
sahf
outsb
cmp
jecxz
jo
jb
sub
xchg
ficompl
popa
mov
jo
xor
fldl
dec
jo
or
scas
push
outsl
sahf
je
inc
mov
dec
nop
and
jb
nop
jo
div
xor
jb,pt
movsb
adc
cmp
pop
jo
clc
shlb
mov
cmp
and
pop
xor
pop
or
lret
adc
mov
mov
pusha
xchg
mov
jmp
lock
or
repz
add
xchg
pop
mov
adc
and
cmc
icebp
adc
fwait
xchg
mov
xor
xchg
jb
rcrb
pushl
outsb
push
gs
enter
push
cmc
jne
js
push
outsl
xorb
sahf
aam
sub
mov
sub
rorl
stc
and
and
jbe
sbb
cli
adc
xorb
adc
insl
rcrb
xor
jmp
ss
jb
orl
dec
pusha
adc
outsb
pushf
icebp
xchg
popa
add
push
cld
loopne
adc
cwtl
ja
addb
push
movsb
xor
xor
push
add
pop
mov
xchg
in
xchg
mov
data16
xchg
jo
call
or
add
xlat
or
add
stc
lock
xor
call
or
add
add
insl
roll
outsl
repnz
or
push
pop
call
cli
inc
pusha
or
mov
stc
cmp
sbb
jo
sbb
cli
sbb
or
cmpb
idiv
sbb
inc
pop
mov
popa
jg
jno
mov
add
dec
fists
or
neg
jg
into
sub
or
lret
rcr
outsb
test
inc
ret
dec
sbb
fildll
push
or
dec
add
jp
mov
movsl
lods
push
rcrb
xor
add
call
or
pusha
das
repz
out
je
add
jne
mov
shld
icebp
xorb
and
mov
lock
push
and
xor
clc
cmc
cmp
js
pop
sbb
jns
sti
jb
out
sub
dec
jno
fstpt
inc
popa
push
jg
ret
pop
jae
push
fisubrs
adc
jb
mov
pusha
mov
unpckhps
scas
sbb
xor
lods
push
jo
mov
add
divl
xchg
add
xchg
adc
jo
insl
mov
pusha
jno
mov
add
push
mov
andb
js
add
insl
clc
lock
xor
filds
push
pushf
stc
xorb
mov
push
das
pop
adc
jno
lcall
lods
xchg
and
mov
rcrb
jnp
out
icebp
jb
xor
std
rclb
push
imul
int3
and
xor
cmp
lea
stos
xor
mov
and
or
push
into
hlt
insl
cmp
ja
mov
mov
jo
xchg
and
mov
add
xchg
push
pop
mov
cld
stos
xor
mov
pop
into
dec
clc
and
aad
pushf
or
rorb
adc
sar
mov
cld
nop
cmp
movsb
cmp
mov
or
sbb
add
int
inc
fwait
lret
pop
cmpsl
in
repnz
jle
mov
pusha
push
mov
cmpsl
pop
lock
pusha
sub
or
je
into
cmpsb
push
fs
imul
push
imul
mov
push
out
dec
mov
adc
sbb
mov
aas
ficoms
jne
push
sahf
mov
imul
lock
fnstenv
cli
icebp
pusha
jns
loop
xor
cmp
jle
jno
mov
mov
call
pop
jmp
jo
imul
dec
enter
aas
notl
pop
imul
xchg
decl
mov
lea
fsubrs
loopne
jle
aad
or
pop
jo
jae
push
loopne
pusha
mov
call
mull
cli
out
pop
iret
cs
repz
sbbl
jecxz
dec
ss
inc
jo
jl
mov
jno
andl
stc
popa
and
adc
push
or
push
mov
cli
lret
mov
mov
stc
mov
lcall
sbb
push
adc
mov
mov
push
mov
shl
shlb
jno
cmp
inc
jle
push
fld
pop
clc
roll
mov
ss
push
std
jmp
sbb
xchg
add
mov
jno
icebp
mov
dec
aad
and
mov
mov
mov
out
pop
push
add
pop
add
or
in
aam
repnz
xor
or
icebp
mov
jnp
repz
add
inc
or
mov
nop
cmp
mov
mov
xchg
push
ja
and
adc
push
push
mov
or
js
enter
push
hlt
pop
xor
pop
mov
jbe
dec
es
sbb
ret
and
pop
cmp
add
xor
add
or
xor
ss
xchg
pop
add
sahf
nop
mov
icebp
xchg
sub
add
mov
mov
jb
hlt
outsl
sbb
cmc
int3
mov
iret
aad
pusha
pop
pop
mov
mov
subl
jle
es
fs
imul
and
jbe
xchg
sbb
repnz
loop
mov
sbb
xchg
xor
stos
data16
and
pop
xor
adc
jp
hlt
mov
sbb
ret
nop
jbe
clc
push
fdivs
std
push
mov
andl
push
mov
repz
sbb
push
clc
xchg
jg
jne
rcll
xor
sbb
pusha
push
xor
popa
push
mov
loopne
push
imul
xchg
jae
mov
lea
fsubrl
mov
cmp
cwtl
clc
psubw
push
xor
bnd
push
into
mov
mull
aad
mov
adc
jb
pop
sahf
mov
add
adcb
xchg
jle
inc
aad
cld
mov
stc
dec
mov
mov
mov
dec
xor
imul
xor
inc
or
cmp
hlt
daa
mov
inc
mov
sarb
and
dec
cmp
or
jle
mov
mov
rcll
sub
out
push
pop
das
fucomi
rclb
pusha
enter
add
dec
ss
mov
jo
fnstsw
iret
or
jae
mov
adc
sahf
aad
push
mov
lods
je
mov
repz
lods
adc
movsl
xchg
cmp
idiv
icebp
fsubrs
jmp
out
sbb
sbb
and
sub
push
shl
and
adc
cmp
mulb
xchg
lock
arpl
inc
lock
lock
repz
popa
mov
sbb
push
add
push
xchg
push
push
pop
xchg
pop
push
add
sti
cltd
inc
xor
das
xor
sub
lods
je
cmp
iret
jle
cs
cmp
add
adc
repz
jne
jge
adc
adc
and
lret
lock
sub
sub
andl
adc
xchg
icebp
jg
mov
xor
jns
or
dec
iret
or
aaa
mov
mov
repnz
and
xor
js
xor
mov
lret
stc
mov
sbb
fisttpll
cs
inc
das
push
mov
aas
into
arpl
aaa
je
icebp
imul
add
cli
into
fldenv
inc
jae
repnz
xorl
fdivs
jbe
and
imulb
pop
or
xor
add
pop
fstl
ds
jle
clc
fistl
shlb
xor
xchg
icebp
push
inc
or
es
add
lods
adc
xor
cmp
jmp
pop
lcall
or
jg
mov
xor
ja
jle
jle
scas
insb
decl
mov
mov
or
pop
fmuls
shlb
cmp
cli
sub
loope
inc
jl
mov
xchg
jne
mov
dec
jl
cmp
or
add
lret
mov
cmpsl
jo
push
xchg
push
and
inc
dec
daa
mov
pop
push
std
and
push
das
sahf
push
cmp
aaa
xchg
or
pop
xlat
stc
xchg
xchg
hlt
and
mov
mov
cli
push
xor
and
imul
arpl
iret
adc
xor
hlt
adc
mov
dec
pop
sub
into
push
jns
xchg
stc
nop
icebp
jge
arpl
mov
xor
mov
add
cmpsb
xchg
loope
xchg
sub
push
je
scas
cmp
cmc
xor
je
js
loopne
and
insl
jo
xchg
xchg
outsl
push
cmc
je
ficoms
mov
inc
or
repnz
jp
insl
out
repz
decl
mov
adc
iret
test
ds
addb
jmp
sbb
push
dec
xor
pop
mov
rcll
xor
sub
add
sbb
into
je
ss
test
icebp
or
jmp
adc
lock
outsb
cmp
and
lahf
jl
add
setbe
pop
jb
or
mov
lock
lahf
and
dec
fcomip
adc
jle
outsb
test
jo
cli
insl
push
dec
or
inc
xchg
adc
mov
rolb
xchg
push
jl
cmpsl
in
mov
daa
or
mov
cmp
lock
mov
jbe
mov
mov
push
jbe
xchg
fs
movsb
xor
or
jbe
jb
xor
adc
bswap
andb
inc
sub
jge
inc
xchg
clc
or
and
das
sarl
je
cmp
mov
add
sbb
or
sbb
cwtl
push
xor
clc
fwait
stc
xor
cltd
es
adc
push
jb
dec
mov
dec
inc
rcl
add
imul
pop
rcl
in
lret
sub
cmp
jle
mov
sarl
jno
adc
sbb
stc
icebp
xor
insb
mov
or
sbb
cmpb
dec
das
adc
push
das
insl
mov
or
cmpsl
push
jb
int
inc
xor
sbb
out
fistpll
xlat
rcll
xor
mov
nop
hlt
dec
fdiv
ficoms
cmp
sar
je
xor
mov
repz
adc
jae
das
xor
icebp
pop
inc
push
or
movsb
mov
in
andb
add
mov
int3
cmpsb
cmp
fldt
jo
out
push
shll
mov
adc
lahf
sarb
clc
add
inc
js
cmp
test
incl
aas
shl
lock
or
add
repz
incl
cld
and
push
mov
push
dec
push
or
jb
sbb
sbb
xchg
cmp
or
jmp
repz
shl
imul
orb
rcll
xlat
and
lods
push
daa
mov
rcl
loope
fcomi
jmp
fdivl
pop
sub
cmp
ret
cwtl
push
jg
pushf
mov
jmp
test
sbb
jmp
aas
jmp
test
gs
call
add
fdivs
inc
ror
fists
pushl
lcall
or
add
sub
shr
ret
in
test
add
inc
sbb
aad
jnp
adc
mov
adc
js
xor
imul
jecxz
add
inc
pextrw
insb
test
dec
add
addl
jle
incl
jl
mov
insl
shrb
aas
mov
add
mov
pop
mov
rol
add
insb
fs
jno
and
mov
in
pop
call
pop
inc
lods
pop
lods
fwait
pop
xchg
test
jmp
inc
cmp
push
and
push
or
adc
aaa
xchg
fwait
and
ljmp
movd
out
or
stos
incl
mov
xor
adc
mov
cmp
push
xchg
lds
adc
cltd
lahf
shrb
or
push
cmp
lods
int
jo
dec
rcrl
dec
in
mov
xchg
push
mov
shlb
xor
add
jns
mov
out
mov
pop
int3
jge
cmp
cmp
xor
jge
or
pop
cltd
push
or
sub
jl
cmc
sub
repz
mov
cvtps2pi
popa
adc
jbe
popa
andb
sub
std
cmp
cld
cvtps2pd
mov
mov
sub
pop
in
ds
mov
ja
psubd
mov
xor
data16
or
pop
fnstcw
cmp
sub
mov
cld
fistps
mov
pop
aaa
pop
mov
addl
arpl
push
jo
sbb
iret
mov
lock
int3
inc
ds
lea
mov
sub
sbb
xor
inc
push
and
mov
dec
cmp
lods
push
pop
mov
jne
jecxz
or
xchg
gs
push
xor
lcall
lock
fidivs
adc
xor
fcomps
loop
dec
xchg
or
adc
roll
xor
hlt
xor
lock
lea
mov
mov
adc
push
lea
or
jnp
pop
jae
les
or
or
decl
xorb
shrl
xchg
push
jl
nop
pop
push
ljmp
adc
inc
add
out
sbb
dec
ljmp
or
sub
mov
pusha
sub
push
dec
aam
pop
or
adc
push
pop
mov
mov
insl
lods
pop
mov
pusha
push
pusha
push
mov
pop
jb
cmc
jbe
repz
sahf
stos
push
shrb
ret
in
mov
xchg
insb
mov
inc
jae
aas
add
mov
loopne
and
cmp
xor
iret
ds
mov
adc
sub
adc
sub
adc
sub
or
mov
fwait
call
loopne
das
push
sub
jb
jae
mov
mov
push
push
loop
pop
int
push
push
mov
pop
mov
js
popa
mov
xchg
jo
insl
shlb
lods
call
lcall
js
prefetch
adc
xor
leave
mov
mov
cmp
push
cmc
sahf
ja
ds
jg
push
icebp
or
lock
xor
jle
cmp
idivb
test
stos
pop
int3
lea
aam
syscall
xchg
push
or
addr16
jp
js
inc
push
fmul
push
pushl
pop
sub
mov
sbb
add
sahf
outsb
push
xor
cwtl
cmp
xchg
fcmovu
ret
mov
dec
rcrb
pusha
call
in
xor
add
into
inc
loope
push
or
jle
js
mov
mov
push
xchg
mov
adc
or
lret
lds
adc
adc
cmpsl
sub
lock
add
js
ss
sbb
add
test
mov
adc
rcl
inc
and
dec
test
xor
and
and
mov
ficomps
push
dec
lea
ds
inc
sbb
sbb
movsl
mov
cmp
enter
mov
sub
xchg
mov
leave
jb
sahf
cs
pusha
imul
cmpsb
lea
push
mov
jae
add
sahf
int
xchg
mov
cmp
stc
and
mov
mov
mov
dec
adc
cmp
push
jp
stos
or
mov
cmp
or
nop
cmp
pop
and
jg
cmc
push
mov
push
jmp
popa
xor
adc
sbb
stos
mov
jno
shll
pop
pshufw
mov
jno
add
lock
and
inc
cmp
sub
mov
xor
out
cmp
lcall
push
jns
cmpsl
jle
fdiv
ss
popa
xor
push
mov
ss
or
insl
adc
test
divl
fnstenv
stos
jo
sbb
xchg
fistps
mov
divl
cmp
cmpsb
sub
adc
in
jmp
lods
mov
xchg
jb
adc
jae
or
jp
lock
cld
mov
add
or
repnz
jo
cli
hlt
adc
lret
jge
sar
mov
sub
aad
adc
adc
pop
sub
insl
sahf
sbb
or
loope
push
pusha
sub
push
jbe
popf
lods
xor
lods
clc
ds
sbbl
or
xor
and
dec
push
xor
mov
popf
fisubs
out
testl
push
sbb
and
lret
cwtl
xchg
popa
stc
push
fnstenv
jb
mov
cld
xchg
icebp
lret
and
subb
sbb
sub
cmp
ret
jno
jns
inc
and
leave
dec
in
jo
jle
or
or
std
je
adc
mov
or
sub
and
gs
dec
pop
sbb
jno
cmc
fwait
push
adc
gs
push
xchg
stc
cmpsb
dec
les
sub
sbb
jo
xor
cmp
xor
hlt
mov
sbb
mov
mov
xor
or
pop
icebp
xor
add
jo
xchg
jae
fmuls
jge
pusha
push
push
ds
sub
int3
xor
adc
add
sub
push
movsb
jne
fnsave
xchg
rorl
jno
mov
adc
sahf
std
aas
clc
lret
es
and
lock
lcall
nop
mov
push
sbb
pop
sbb
ljmp
push
jo
push
fldenv
sahf
rol
jl
push
andb
cmp
adc
sahf
or
xchg
pop
ret
jmp
and
add
sbb
es
push
inc
sti
sub
and
andb
mov
adc
mov
cs
pusha
dec
add
add
or
cmp
pop
repnz
mov
fstps
xor
pop
rcll
sub
and
psrlw
and
bound
pop
js
xor
push
adc
add
icebp
jbe
rolb
sbb
shll
fisttps
mov
sub
hlt
mov
dec
inc
out
aaa
test
hlt
inc
out
pop
or
lock
icebp
mov
cmp
hlt
or
nop
xor
jp
fidivrl
shlb
lods
sbbb
jb
push
pop
fnstsw
or
rclb
jno
sti
jo
scas
test
aad
mov
sbb
je
pop
sbb
and
pop
movsb
das
xorb
sbb
mov
js
je
xchg
lock
out
xchg
fwait
or
push
xor
and
dec
dec
jno
mov
xor
fbstp
jnp
rcrl
or
xchg
nop
popa
fdivp
fucom
out
xchg
clc
add
insl
sti
nop
sti
push
ret
or
xlat
cmc
xor
xchg
ret
adc
xchg
bound
mov
insl
fbstp
stc
scas
rcl
jmp
push
xor
shrl
xorl
rdmsr
ud2
cmpxchg
dec
rdtsc
movntps
sub
rol
repz
jno
iret
inc
scas
fwait
iret
ss
das
and
jb
scas
cli
or
inc
jle
adc
mov
and
lock
scas
cli
push
pop
jmp
divb
pop
bnd
sbb
dec
sub
or
xchg
test
add
mov
cmp
pop
cmp
mov
dec
sbb
push
mov
jle
mov
adc
mov
sti
insl
out
inc
mov
and
push
jns
jae
pop
cmp
jae
xchg
sbb
inc
jle
pop
adc
push
or
or
mov
xchg
xchg
jo
shll
psubw
pop
sub
jo
xor
lret
fildll
stos
mov
sbb
movsl
jns
cmpb
inc
fidivs
jmp
movsb
idiv
std
out
mov
das
jne
push
outsl
mov
or
jge
cld
test
fildll
cmp
inc
or
add
nop
and
xor
repnz
sbb
jg
fldenv
adc
cmp
push
cmc
xchg
or
mov
not
repnz
sbb
mov
sub
popa
ja
or
out
mov
in
fbld
adc
cmpsb
pushf
jmp
sahf
insl
mov
and
outsb
push
sub
and
adc
xor
xchg
out
std
lock
data16
popa
xchg
mov
daa
xor
adc
out
das
add
push
add
adc
cmc
aam
lcall
jae
jo
pusha
or
sar
add
fsubl
mov
std
jo
daa
icebp
inc
push
fiaddl
cli
divl
loopne
add
out
or
adc
out
mov
add
fdivl
repz
daa
push
sbbl
push
mov
cs
mov
pop
and
jb
push
or
xchg
adc
mov
sub
push
dec
shrl
push
xor
sahf
xchg
notl
and
cmc
cmp
repnz
push
jns
sti
or
pop
mov
push
xchg
xor
das
or
or
out
jnp
leave
pop
hlt
xchg
popa
mov
popa
rorb
push
clc
rcrl
inc
cld
adc
or
pop
loopne
leave
bnd
xor
pop
aad
mov
xchg
or
ja
pop
adc
jle
popa
insl
icebp
sub
jae
ret
aaa
cli
sub
sahf
pop
push
xor
xor
sub
leave
popl
push
xor
iret
mov
xchg
xor
stos
aam
adc
cli
dec
repnz
popa
push
jecxz
pop
outsl
sbb
lcall
add
or
loope
jo
sub
xorb
push
xchg
or
xor
cltd
jbe
xor
cld
push
mov
push
sub
cmp
jns
push
adc
adc
sub
cmpsl
xor
stos
jnp
jbe
lret
cltd
xchg
mov
mov
sub
dec
sub
clc
jmp
or
and
nop
xchg
repz
je
mov
mov
cltd
lods
adc
mov
add
pop
mov
fidivl
jp
testb
lock
stc
adc
or
mov
test
push
jae
dec
jb
nop
cmp
sbb
repnz
mov
mov
popa
push
lcall
dec
lock
mov
dec
dec
mov
push
cwtl
sbb
xor
mov
pop
and
cli
repnz
jo
lret
add
insl
jge
mov
mov
js
lock
je
jb
mov
xor
mov
push
push
cmp
into
xchg
or
lret
mov
out
pop
aas
or
sub
imul
add
pop
sbb
mov
adc
dec
push
jecxz
jle
je
cmp
lock
sbb
test
adc
or
mov
out
bound
lcall
dec
cs
pop
add
dec
fists
inc
mov
subb
dec
aam
mov
sbb
cmc
inc
repz
shl
dec
add
mov
or
or
jne
stos
push
imul
push
cmp
ja
enter
xchg
jp
cmc
lahf
xor
push
shll
lret
pop
cmc
mov
and
sbb
jb
mov
cmp
add
adc
aaa
xor
out
sbb
jecxz
xor
push
and
pop
pop
push
mov
xor
sub
adc
mov
js
xchg
adc
mov
xor
jns
mov
and
insl
mov
aaa
mov
sub
xor
scas
inc
sbb
mov
xchg
shrb
cli
adc
push
fldt
sti
nop
mov
push
fmuls
popa
cmp
or
adc
sub
lock
push
enter
mov
jnp
jns
mov
sbbb
popa
pop
mov
daa
and
dec
std
mov
leave
mull
adc
arpl
imul
cmpsb
xchg
aad
mov
xchg
xor
inc
lea
cmc
add
btc
stc
sbb
sub
push
leave
fisubl
insb
push
mov
sahf
dec
pop
xor
pop
sbb
pop
out
xor
pop
jo
sar
sbb
dec
mov
adc
and
sub
dec
mov
jg
adc
inc
pop
push
xor
jns
jb
sbb
jno
cmp
inc
push
sbb
iret
jno
push
sti
push
repz
fistl
jmp
xor
imul
fimuls
or
mov
insl
lock
imul
push
enter
xorb
insl
pop
iret
testl
dec
mov
sahf
sub
jno
cs
or
or
arpl
mov
sub
inc
or
cmc
sbb
adc
xor
pop
cli
je
push
inc
push
pusha
pusha
sub
adc
leave
adcl
or
popa
jae
push
inc
adc
inc
in
outsb
jle
repz
rcl
xchg
insl
push
imull
pop
cs
jo
aaa
int3
adc
mov
lock
lret
pop
push
push
shr
xor
addl
pop
xchg
fcmove
mov
mov
es
jae
mov
sti
add
mov
cli
xor
add
pop
and
clc
or
cmp
lock
push
and
cmp
xor
dec
lahf
rcll
adc
sbb
dec
adc
or
insl
sub
push
aas
insb
test
adc
bound
sbb
fdivl
inc
cmc
decl
fdivl
sbb
mov
andl
dec
mov
cmp
hlt
inc
xchg
clc
cmp
outsl
mov
and
cmp
sbb
pusha
in
pop
sub
or
pop
or
push
popa
mov
mov
mov
fcompl
gs
orb
data16
sub
xchg
call
xor
and
imul
in
push
pop
lret
jg
sti
xchg
ja
pop
adc
xor
jle
ja
or
pop
or
and
adc
xor
jno
jae
xor
sub
sarb
xor
inc
adc
pop
xchg
adc
mov
cmp
xor
and
pop
push
fcom
or
xchg
mov
gs
push
shl
jbe
ficomps
xor
and
lock
cmpb
push
mov
push
cmp
and
clc
lock
icebp
sub
jb
popa
jbe
push
out
cmc
add
adc
jg
mov
sbb
sahf
cmp
movb
dec
adcl
decb
loop
xchg
jno
lock
or
test
lahf
movsl
aas
lods
add
sar
insl
hlt
mov
sub
cmove
add
pop
ljmp
addb
push
mov
push
pop
jg
lret
add
xchg
loopne
sub
jl
fwait
pop
jg
dec
jo
imul
arpl
insb
lcall
and
sub
lock
lret
fisttps
incb
mov
ret
mov
or
adc
push
mov
lock
or
mov
add
and
adc
or
scas
cmp
adc
lahf
xor
and
mov
cmp
jg
repnz
out
xor
orl
sbb
jne
addb
insb
mov
mov
push
sbb
xchg
stc
nop
ret
js
movsl
jbe
sarl
sti
and
or
jo
mov
cmove
dec
scas
mov
push
iret
mov
jo
inc
dec
adc
jnp
push
or
and
cmc
sbb
cmp
xor
sub
ficoml
dec
push
sub
push
sub
mov
sub
js
imul
lahf
stos
fs
push
ljmp
cmp
fstl
or
pop
push
push
sbb
sahf
dec
push
into
xchg
out
daa
divb
adc
mov
add
cmp
jne
fildl
stc
push
cmp
adc
sti
inc
jp
clc
mov
dec
decb
pop
jbe
cli
cmp
cmpxchg
mov
fdivrp
mov
shlb
sarl
repnz
decl
fidivl
add
or
aad
cmpsb
and
outsl
adc
pop
push
jns
adc
out
or
ret
lock
push
sbb
push
dec
orb
cltd
lock
dec
out
jge
je
aaa
lds
mov
fldcw
mov
mov
adc
mov
add
pop
sahf
adc
and
ljmp
adc
dec
cmp
ja
push
js
je
xor
dec
mov
imul
aam
inc
sti
dec
xchg
imul
push
lcall
push
aad
cmp
loop
add
faddl
aad
cmpsb
loopne,pn
xchg
jno
cmp
js
push
pop
inc
cmp
add
mov
aaa
jg
mov
push
adc
leave
xor
leave
push
xor
fucomip
jbe
or
inc
lret
xorb
jne
adc
pop
push
or
jno
je
sub
shrl
mov
dec
lock
lret
cmp
sub
insl
cwtl
jb
pop
test
mov
shr
insl
ss
xor
xchg
push
jnp
sub
jns
xorl
addr16
mov
adc
adc
scas
cwtl
lcall
sub
mov
addr16
xchg
icebp
jg
inc
shr
xchg
pusha
adc
das
or
pusha
das
mov
stc
int
je
xchg
clc
mov
sbb
sbb
push
icebp
js
sub
sti
adc
fbstp
or
sub
dec
stc
stos
jno
lds
add
dec
xchg
out
xor
fmull
mov
rcll
std
shl
push
pop
xchg
jo
or
cld
mov
adc
jmp
sbb
insl
push
sbb
mov
cmp
xchg
cmp
bnd
jae
cwtl
or
decb
les
adc
rcr
pop
mov
bndldx
jo
sub
push
mov
shlb
jo
and
jne
stc
xor
xchg
sbb
xchg
aad
xor
std
aam
shrl
sbb
adc
stc
inc
cmp
dec
sub
fbstp
cmp
subl
insl
lahf
clc
adc
das
cmpb
sbb
cs
das
and
xor
scas
adc
xlat
cli
insl
lcall
mov
adc
xor
xor
jns
pop
adc
push
lock
jl
cltd
adc
mov
dec
xor
inc
repnz
xor
pop
je
lea
inc
shll
pop
cmpb
adc
icebp
fisttps
bound
ret
mov
dec
leave
andl
cltd
sahf
xchg
int
cmp
rorb
and
lock
pop
dec
xor
and
xor
xor
into
xchg
sbb
jae
shll
mov
xor
inc
call
divb
or
lods
insl
jp
cld
inc
inc
dec
mov
hlt
jecxz
or
mov
lea
pop
orb
pop
aad
pushl
xor
scas
iret
mov
mov
mov
int3
adc
icebp
and
or
jns
fcoml
or
js
lds
shr
arpl
sbb
mov
mov
enter
shrb
lods
out
inc
xorl
test
out
out
jmp
push
jmp
insl
js
adc
sbb
dec
lock
fistpl
hlt
lea
stc
push
cmpsl
fisttpll
es
mov
sub
adc
push
fstl
popf
and
sub
add
out
push
pusha
cmp
ret
jge
ja
xchg
sahf
lock
adc
mov
je
xor
inc
out
xlat
ja
hlt
jae
jns
jbe
sbb
push
or
xor
xchg
jae
call
popa
sub
or
ds
das
fdivl
xchg
push
xor
mov
pusha
in
cmc
push
mov
lock
sub
jno
into
jg
les
sarb
fsubrs
outsb
pop
and
xchg
or
cmc
fbstp
sarl
add
jb
test
lds
stos
push
scas
xchg
lcall
cwtl
push
imul
stos
aad
test
sbb
dec
push
sub
add
pop
loope
sbb
cwtl
xor
aam
sahf
jge
lock
lods
cmp
fists
and
add
loopne
cmp
ret
jle
in
or
jle
clc
mov
rcl
inc
or
fiaddl
jle
cltd
mov
hlt
fbld
shrb
insl
xor
cmp
icebp
cmp
add
push
xchg
je
adc
clc
mov
xchg
mov
pop
das
adc
or
les
cltd
js
fwait
jo
das
addr16
mulb
lock
rolb
xor
dec
push
cmp
or
sbb
or
loope
push
lods
xor
push
adc
add
mov
dec
mov
mov
lcall
aaa
ss
out
adc
or
inc
and
push
in
dec
jle
cli
ret
jns
je
mov
mov
push
adc
int
ds
cmp
pop
add
repnz
cltd
xchg
push
push
jmp
mov
mov
sti
insl
mov
stc
xor
or
mov
das
sbb
fistpll
sub
js
cmp
sbb
or
mov
inc
lcall
negb
jb
push
int
jbe
and
add
push
lcall
enter
and
pusha
lahf
movups
jo
mov
jg
sarl
xchg
jnp
popf
mov
mov
pop
push
repz
repnz
cmp
mov
cmp
adcb
or
out
sbb
sahf
mov
outsl
xor
xor
mov
subb
shrb
mov
pushf
lock
or
out
hlt
repnz
sbb
jb
icebp
pop
mov
and
outsl
cmp
cmp
fcomi
ja
mov
xor
testb
jo
cli
ficoms
jae
or
fstpl
enter
sahf
push
mov
push
jno
mov
add
inc
scas
and
jg
loop
scas
jmp
test
mov
xchg
mov
push
repz
pop
cli
stos
sub
lock
push
mov
repz
iret
add
inc
xor
xlat
mull
nop
add
sahf
in
xchg
add
das
push
jecxz
cmova
cld
push
sbb
popf
in
adc
add
cld
jno
mov
jmp
xchg
push
xchg
xchg
movsl
pusha
add
jns
adc
scas
pop
xchg
repnz
or
prefetch
or
dec
cs
xor
or
mov
cmpl
or
sbb
adc
mov
push
xor
mov
cld
cmp
pop
mov
mov
scas
je
enter
xchg
clc
test
jbe
add
stc
mov
jge
sbb
xchg
and
sbb
and
fsubrp
cmp
and
test
nop
push
pop
adc
lcall
jnp
rcll
push
push
fnstcw
cld
or
push
push
pop
cmp
lret
stc
sahf
xor
jb
mov
pop
pushf
ds
mov
mov
mov
or
mov
cld
mov
jb
mov
or
insb
fstl
enter
enter
or
jge
push
xor
xchg
inc
mov
xor
xlat
mov
jge
ja
adc
test
xchg
pop
adc
nop
repnz
or
aas
dec
repz
mov
subb
add
and
addl
test
lock
subb
jne
pop
xor
add
sub
in
xor
cmp
stc
add
nop
push
dec
mov
cmp
repz
into
add
xchg
sbb
jno
adc
ret
mov
mov
xor
pop
add
dec
pop
push
icebp
or
sahf
push
test
or
sbbb
jle
popa
push
or
inc
pop
or
xor
push
mov
jb
jl
and
inc
outsb
je
jg
mov
scas
jb
paddb
add
mov
in
je
stos
movsb
mov
idiv
cmp
pop
das
iret
pop
sub
mov
adc
sbb
cwtl
push
xchg
lock
data16
push
js
aam
icebp
adc
jo
cmp
pop
fmulp
add
mov
repz
test
hlt
xor
das
dec
inc
mov
lock
mov
jmp
jnp
iret
push
out
ljmp
xchg
mov
push
aam
mov
sub
mov
out
sub
pop
or
cmp
cmp
xor
sub
jmp
popa
aaa
pop
dec
sahf
call
or
icebp
imull
and
lret
mov
and
popf
shl
nop
pop
aam
jno
repz
insl
shll
dec
bound
and
or
sahf
adc
shll
jmp
dec
add
xor
fs
xchg
adc
xor
mov
loope
sub
sbb
ret
sbb
rcll
jle
add
jb
sbb
push
shlb
fnstenv
push
fisubs
mov
and
jo
pop
movsb
xor
movsb
sbb
mov
std
dec
popf
xor
fbstp
xor
xor
flds
and
xor
cltd
icebp
iret
cmp
stos
nop
addb
pop
xor
add
or
mov
cmp
in
repz
pop
mov
mov
call
push
push
fs
sbbl
xchg
xchg
repz
ret
pop
adc
sub
repnz
icebp
test
inc
gs
fistpl
fstpt
dec
repz
add
test
das
xchg
imul
push
imul
inc
loopne
pop
sbb
aaa
push
xchg
jb
cmp
pusha
dec
mov
dec
cmc
sarl
mov
mov
fiadds
jno
imul
mov
insb
xlat
stos
jae
xlat
jnp
adc
dec
jb
sarb
xor
push
insl
repz
cwtl
xor
mov
or
add
sti
aaa
cltd
lock
nop
dec
sahf
jb
ds
nop
icebp
jo
xchg
mov
hlt
xor
sbb
adcb
andb
ds
mov
push
push
lcall
mov
addr16
lret
inc
mov
call
or
push
cld
loope
mov
jno
mov
jle
pusha
shl
cltd
pusha
ljmp
repz
test
sub
int3
outsl
insl
mov
xor
popa
dec
pushl
push
sub
dec
jne
mov
sbb
sbb
jno
pop
mull
adc
arpl
clc
loopne
call
cmp
cwtl
cmp
inc
mov
movsl
xor
add
xor
mov
sahf
stc
rcll
xor
xchg
test
out
push
mov
jp
cmp
test
jne
cmp
mov
add
pop
loopne
mov
jle
mov
rorb
mov
fs
daa
push
fwait
dec
cs
xchg
iret
popl
cld
mov
adc
lods
mov
pop
sbb
inc
scas
mov
xor
lock
xor
or
inc
rorl
int3
fidivs
push
cmp
insb
adc
push
sub
push
lea
int
cmp
lcall
sahf
sbb
add
lret
inc
sub
icebp
test
arpl
cmp
addr16
cli
insl
jb
dec
in
fcoml
pop
leave
jae
cmp
adc
or
shlb
mov
daa
mov
mov
movsb
stc
add
lock
daa
mov
and
xlat
xchg
daa
and
fdivrl
aaa
aad
pusha
fs
mov
jnp
or
xor
int
mov
mov
dec
add
mov
mov
jl
xor
or
sub
xchg
dec
scas
xor
or
sub
lea
xchg
shrb
addr16
sar
dec
je
lret
sub
ljmp
inc
aaa
sar
jg
mov
xchg
adc
jo
rcrl
xchg
fcmovu
push
repnz
cmp
hlt
dec
pop
jbe
push
or
mov
xchg
add
in
lock
dec
pop
push
stos
push
push
push
jno
xchg
jnp
and
and
xor
sub
inc
xchg
mov
and
mov
jl
xchg
jne
or
or
mov
clc
push
jle
push
xor
fwait
adc
imul
fistps
dec
bndstx
cmp
vmread
nop
arpl
adc
inc
js
sbb
pop
leave
idivl
pushl
pop
mov
pop
or
sbb
cmp
add
cmp
stos
mov
je
or
push
xor
pop
ja
push
or
imul
adc
fidivrl
mov
xor
out
cli
add
jl
pushf
jge
pop
shl
mov
ds
pop
xor
cmp
mov
adc
pop
xor
mov
leave
js
mov
mov
clc
into
xor
fdivr
push
mov
mov
fcompl
and
xchg
js
jns
cmp
add
js
push
jne
fnsave
fdivrl
mov
rcr
sub
add
jno
jecxz
mov
jp
fisttps
js
and
pop
jle
les
cmpsb
ret
cmc
jg
jb
cmp
xlat
ljmp
fstl
fistl
cld
cmp
mov
hlt
adc
mov
push
adc
sti
out
or
mov
pop
mov
lock
dec
fidivl
mov
pop
adc
aaa
hlt
mov
repnz
and
push
hlt
icebp
scas
adc
add
add
mov
adc
dec
aam
fs
pop
adc
pop
xchg
adc
mov
or
repnz
push
push
jns
push
push
add
addl
mov
xchg
mov
push
lock
sarl
push
and
mov
push
outsb
jns
mov
push
push
cld
icebp
jl
ss
adc
add
stc
ja
pop
sbb
inc
cli
test
pop
test
dec
rol
mov
notl
push
push
add
bnd
and
notb
adc
cmc
pop
jmp
mov
hlt
or
repz
sbb
pop
mov
mov
mov
sub
cmp
repnz
or
out
push
icebp
push
fsubs
sbb
adc
cld
mov
xor
repz
fcomi
pop
cmp
jno
adc
adc
test
inc
and
arpl
or
sub
sbb
adc
push
dec
push
or
cmp
std
dec
mov
push
add
mov
jle
hlt
xrelease
rcll
push
jo
mov
xor
pop
jns
cltd
std
adc
sbb
adc
outsb
je
es
stos
cli
and
mov
out
xor
repz
xor
ljmp
cmp
icebp
test
sub
sub
add
adc
sbb
mul
cmp
hlt
rol
mov
mov
add
repnz
mulb
fwait
and
lock
add
cmp
xor
sti
repnz
outsl
mov
ss
fwait
mov
inc
icebp
jb
jge
je
adc
dec
ret
fstpt
adc
jns
mov
add
in
pop
test
mov
jle
mov
inc
icebp
jp
cli
stc
test
push
stos
mov
xchg
cmp
je
cmove
js
sub
movsl
icebp
lock
jl
dec
add
push
test
test
push
inc
idivl
xchg
nop
stc
inc
push
js
out
xor
sti
cmp
loop
addr16
sbb
outsb
jno
cmp
repz
adcb
sbb
js
or
in
dec
mov
testl
imul
into
jge
shll
arpl
shrl
add
pop
addl
push
adc
xor
mov
jge
lea
pop
cli
and
or
test
or
aaa
repnz
and
pop
std
adc
push
test
and
shl
cmpl
popf
cmp
adc
fnsave
cmp
jb
sub
jbe
add
add
adc
cmc
mov
mov
pushf
adc
mov
mov
mov
sbb
mov
lahf
fidivl
cmp
clc
shl
mov
lock
in
adc
jl
idivl
push
clc
cmp
hlt
push
or
cmpl
div
and
push
fs
dec
xor
sbb
and
push
pop
sti
xchg
bound
xchg
sahf
aam
xor
scas
cmp
fidivrs
mov
fwait
rcll
repz
pop
mov
fdivr
xlat
xor
loop
jns
aaa
adc
sbb
mov
jp
or
and
loop
icebp
adc
xor
repz
outsl
out
sub
and
in
pop
clc
in
xor
jbe
xchg
clc
or
hlt
loop
jl
adc
lods
inc
add
stos
xor
cmp
and
pop
jle
imul
xor
or
ja
lock
ss
test
sbb
inc
inc
xor
pop
rclb
aas
xchg
shl
clc
sbb
notl
notl
mov
cmc
cld
fs
test
adc
outsl
hlt
mov
jge
adc
xor
arpl
inc
push
add
inc
cld
xchg
pop
repnz
sbb
push
hlt
jns
push
cld
scas
add
adc
dec
in
fadds
xor
and
xorb
inc
in
mov
test
icebp
jne
ror
sti
mov
inc
leave
pop
sbb
and
xlat
sbb
add
ficompl
mov
inc
or
addr16
and
dec
icebp
fnstenv
jmp
push
ficomps
add
cmp
sbb
jge
inc
pop
clc
movsb
xlat
xor
sbb
clc
repz
sbb
repnz
jle
cli
add
jp
testb
icebp
repnz
daa
xchg
cwtl
rorb
roll
cmp
jns
adc
stos
scas
int3
icebp
adc
pop
shll
or
or
lods
sarb
sub
jecxz
pop
cli
fwait
dec
cli
subb
and
scas
mov
maskmovq
testl
stc
adc
cmp
xor
fs
loop
add
cmc
lods
lock
repz
fidivrl
repnz
add
and
cli
notl
dec
xor
rcrl
mov
rcrl
xor
sbb
mov
pop
sub
adc
push
add
jns
mov
cmp
repnz
mov
das
mov
test
adc
fistl
pop
mov
or
iret
jmp
sti
mov
das
add
xor
xchg
cld
clc
test
sbb
inc
shll
pushf
outsb
mov
lods
mov
inc
loope
or
cmp
cli
add
sub
adc
jl
xor
jb
or
sbb
push
lret
xchg
pop
or
sti
lea
mov
add
xchg
mov
std
jl
add
insb
jp
repz
inc
fldt
js
push
imul
mov
xlat
add
inc
xchg
add
jnp
divb
les
jge
je
mov
fs
pop
xlat
ss
adc
in
sbb
xchg
add
xor
inc
mov
dec
sbb
std
sti
loope
icebp
sahf
hlt
add
aaa
jno
imull
cli
mov
stc
dec
or
jns
fsts
xor
sbb
icebp
cli
lock
jb
repz
mov
bound
cli
sti
je
mov
in
adc
xchg
or
shrl
lret
mov
filds
ljmp
adc
xlat
cmp
push
loopne
cmp
repnz
sub
in
lea
scas
and
divl
inc
inc
sbb
sub
push
cmp
push
or
ljmp
and
bnd
repz
ljmp
fimull
xchg
sbb
jb
cli
stos
loop
dec
pop
push
cld
add
xchg
dec
and
mov
jno
scas
icebp
lcall
rorl
insb
mov
lea
lcall
xchg
cmp
push
jno
insl
rcr
inc
mov
rolb
or
lock
fdivrp
call
std
xor
out
and
cltd
sbb
pushf
jge
rcll
clc
cwtl
test
dec
xorb
xor
cmp
cmc
push
fstpt
fldcw
adc
mov
stc
loope
cmp
push
xchg
cmc
push
sub
pop
sbb
movsl
add
add
jo
xor
and
hlt
call
fdiv
mov
push
jns
xchg
mov
jle
les
fistpl
int3
jno
push
rolb
add
std
sbb
lock
or
popf
sbb
add
call
lock
pushf
ds
sbb
adc
pop
les
mov
sbb
pushf
hlt
add
cmc
cmp
inc
sbb
cmpb
mov
jo
je
push
cwtl
mov
pop
test
divl
mov
push
cmp
and
and
or
jge
je
sub
lcall
ret
adc
das
xchg
sbb
dec
inc
jbe
mov
xor
aaa
xor
mov
add
sarb
mov
adc
cmp
sub
rolb
mov
mov
movsl
add
inc
ret
inc
xor
cli
addl
jb
xchg
shlb
int3
or
divb
bound
test
js
incl
push
stos
mov
xchg
sbb
push
mov
push
cltd
inc
xor
das
cmp
push
ret
dec
sbb
jno
pop
cmp
icebp
fiadds
mov
push
pop
cwtl
idivb
fsubrs
push
mov
hlt
sahf
or
maxps
ss
xor
addr16
cmc
jno
inc
mov
add
clc
test
mov
add
idivl
icebp
mov
shlb
in
notl
push
sbb
and
push
mov
ds
dec
pushf
sbb
sub
hlt
lock
bound
ljmp
jne
add
xchg
mov
adc
mov
lcall
push
ljmp
dec
mov
mov
scas
jae
rcr
jg
fsubrs
push
dec
and
mov
ds
sub
dec
rcr
push
mov
lods
or
mov
ds
rcr
push
lea
lods
or
mov
or
sub
rcr
push
mov
stos
or
mov
or
sub
rcr
push
mov
stos
or
mov
or
sub
rcr
push
mov
test
enter
or
sub
rcr
push
mov
test
ds
pop
es
rcr
push
xchg
cmpsb
or
mov
ds
pop
daa
jae
rcr
push
xchg
cmpsl
or
mov
ds
and
inc
rcr
push
test
movsb
or
in
push
or
pop
gs
rcr
xor
aam
and
insl
adc
mov
add
sub
xor
outsl
sub
mov
push
mov
cwtl
or
adc
adc
daa
mull
mov
in
ds
pop
mov
adc
out
mov
mov
or
cld
addb
sbb
cmpl
jp
repnz
inc
mov
clc
sbb
in
or
jnp
or
adc
fstps
data16
add
xor
icebp
cwtl
jno
push
cwtl
sbb
pop
and
jl
push
mov
in
filds
mov
mov
into
fmuls
xor
adc
and
xor
xchg
test
lea
std
xor
cmp
cmp
fldl
jo
in
cmp
xchg
dec
or
cmp
in
jl
push
sub
lock
ss
push
pop
cmpsl
jnp
pop
mov
jno
loop
in
data16
fcmovb
cli
and
shl
cmp
sti
adc
pop
push
cli
sub
mov
jb
out
or
xchg
or
into
pop
or
clc
jge
repnz
and
lcall
pop
cli
push
std
test
fwait
xor
hlt
sti
stc
jle
outsb
jl
mov
jnp
mov
aad
dec
jno
jmp
mov
hlt
pop
add
xchg
mov
jns
inc
andb
dec
shl
cwtl
xchg
pop
dec
mov
sbb
clc
xchg
mov
adc
ds
pop
jge
or
and
and
jo
pop
pop
dec
and
add
aas
cmp
outsb
add
sbb
push
mov
or
or
xlat
jbe
aaa
jnp
or
pop
mov
xor
xchg
or
lret
divl
ds
mov
bound
adc
bound
pop
pop
jnp
jl
jl
icebp
shrb
mov
lea
cmc
add
mov
or
mov
and
push
mov
jbe
push
test
cmc
lock
pop
push
pop
lcall
je
testb
movsl
mov
je
xchg
std
adc
sbb
add
xrelease
movsb
cld
sub
jl
and
jo
pusha
or
add
sar
adcl
cs
jb
ret
cmp
icebp
push
dec
inc
xchg
xor
movsb
les
in
js
mov
je
stc
mov
cmp
xchg
imul
fimull
jno
xchg
xlat
mov
jne
or
mov
and
cmc
and
js
fcmovu
xchg
xchg
je
cltd
sahf
clc
jge
xor
ljmp
popf
repz
and
mov
xchg
cmpsl
aas
out
mov
dec
sub
icebp
mov
mov
push
sahf
inc
add
clc
jp
inc
iret
and
mov
or
fnstcw
push
icebp
xor
adc
adc
and
lock
xchg
fwait
lock
jno
cli
ret
push
cli
lock
jno
push
sbb
ljmp
fistl
out
sbb
and
jns
xor
cmp
dec
mov
xor
call
mov
or
jle
cmpsl
dec
sub
add
mov
stc
dec
sub
add
lret
xchg
pop
push
xor
mov
in
pusha
push
push
mov
pusha
insl
adc
insl
push
dec
sub
jo
testb
push
mov
cld
or
add
stos
dec
push
pop
fs
stc
lods
adc
adc
mov
add
mov
xor
mov
adc
ret
sub
mov
jge
jmp
lock
adc
mov
pop
mov
lock
inc
mov
cs
shll
adc
pop
and
inc
pop
cmp
icebp
in
adc
sub
mov
xchg
fwait
push
jnp
jo
push
fnstcw
nop
sub
sarb
sahf
dec
mov
jae
xor
fildll
and
repnz
adc
fists
pop
cmp
aaa
cmp
andb
adc
adc
push
pop
lcall
scas
adc
adc
or
mov
push
jle
repnz
jo
adc
jg
push
cmp
lock
push
jg
or
into
add
outsl
repnz
xchg
mov
mov
sti
cmc
testb
lock
pop
lret
rolb
xchg
mov
adc
pusha
xor
test
push
rolb
push
cmp
sahf
jno
pop
loop
data16
adc
andb
cmpsb
fistpl
test
mov
add
test
jmp
stc
sbb
cmpsl
or
outsl
xchg
dec
ja
jmp
leave
jmp
int
mov
mov
push
or
shlb
clc
sub
test
das
xchg
mov
adc
pusha
or
cld
jl
call
sub
inc
and
outsb
rcl
add
shr
repz
xor
insb
mov
mov
inc
jle
push
imul
jl
fwait
out
mov
stc
imul
lret
lcall
cmp
mov
ljmp
repnz
and
and
push
jne
sbb
push
notl
lahf
out
adc
pop
pop
push
mov
pop
inc
xor
arpl
jbe
lcall
mov
fnsave
nop
repnz
add
add
sarb
xor
pop
sub
fiadds
cwtl
lea
or
fcomp
pop
repz
aam
sarl
mov
mov
and
fsubr
adc
sti
fisttpl
dec
lods
xor
clc
add
std
push
insl
pop
hlt
push
jo
rclb
stc
loope
movsl
adc
add
mov
ret
xor
sbb
lret
scas
arpl
repnz
dec
cmp
seto
movsl
shlb
popaw
loope
js
inc
arpl
or
js
and
jp
insl
cmp
mov
adc
xor
adc
inc
mov
pop
sub
shrb
jo
jno
iret
adc
out
insl
xor
in
cs
andb
subl
dec
jbe
or
xchg
sarb
xor
shlb
xchg
icebp
stc
das
cwtl
xchg
and
lock
adc
cmp
pop
push
jne
sub
jecxz
and
push
push
rorb
pop
mov
adc
xchg
sbb
out
repz
lar
adcb
cmc
rorb
push
icebp
repnz
mov
sahf
dec
mov
cmp
icebp
adc
xchg
push
cmc
xor
insl
mov
jo
cmp
popf
mov
icebp
push
sub
std
cmpsb
cs
ret
dec
cli
xor
push
mulb
sub
pop
cmp
mov
ja
std
mov
jmp
or
jae
pusha
jp
xchg
ss
or
out
xchg
push
mov
add
int3
fdivs
mov
imul
or
and
mov
nop
lahf
mov
jge
lock
or
lret
sub
fildll
jo
mov
push
fbstp
hlt
cmc
ja
xor
mov
mov
push
jmp
ret
xchg
pop
sub
jge
mov
mov
or
insl
or
rep
inc
in
mov
cmpsl
add
lock
je
shl
adc
mov
adc
mov
dec
sti
or
or
jne
sbb
cmp
xor
repnz
jb
dec
in
clc
add
pusha
mov
adc
lahf
push
lock
lret
and
pop
dec
or
out
pop
enter
lock
sbb
dec
jbe,pt
test
jns
xor
cmp
pop
jnp
adc
icebp
and
cld
and
jle
mov
adc
and
and
enter
adc
cmp
or
test
pop
or
inc
jo
rolb
xchg
repz
iret
jb
arpl
xor
pop
jb
jno
jecxz
sbb
divl
loop
mov
mov
sahf
pop
jbe
mov
or
cwtl
out
out
adc
xor
and
mov
push
lret
jle
xor
cli
cmp
pxor
adc
push
xlat
fiaddl
or
das
push
add
lret
in
das
pop
daa
jbe
sub
lock
popa
enter
add
out
int
repnz
lret
outsl
push
int3
jno
sub
sub
adc
push
or
add
xor
pop
sbb
and
push
mov
sbb
dec
negb
push
js
mov
push
sbb
dec
dec
das
sub
outsb
jo
cmc
jno
xor
xchg
push
aad
clc
mov
or
into
adc
push
pop
iret
icebp
rolb
push
adc
sahf
cmp
add
sub
push
jb
js
cmc
or
or
pusha
pop
gs
outsb
stos
push
xlat
xchg
push
dec
push
sub
mov
dec
ss
movsl
push
xchg
inc
xlat
xchg
adc
and
or
icebp
cmpsb
pop
jns
call
stc
sbb
push
push
jl
in
pusha
mov
jne
call
cmp
ret
jne
pop
jmp
mov
ret
je
test
and
and
pop
sub
sahf
icebp
jg
stos
clc
jle
pop
testl
mov
pop
js
cmpsb
test
cmp
mov
push
adc
rcrb
sahf
dec
adc
push
fistpl
fdivl
or
adc
inc
cmp
stos
repz
neg
popl
andb
lds
mov
cmp
ds
dec
or
lcall
out
js
cmp
incb
push
pusha
push
lahf
into
add
insb
mov
mov
aad
dec
insl
into
cmp
and
les
les
clc
testb
lock
fsub
dec
repz
and
inc
pop
push
inc
notl
js
mov
sbb
sbbl
fsub
ljmp
xchg
orb
mov
out
insl
xor
jae
mov
cmp
adc
push
insl
sbb
jne
push
sbb
sahf
lret
jp
mov
pop
aam
xor
loope
mov
popa
mov
notl
cmp
repz
jb
mov
mov
jno
pusha
xor
cmp
iret
mov
daa
das
jno
or
into
inc
push
sbb
mov
push
out
dec
pusha
dec
mov
mov
lock
cbtw
cmc
sar
lea
sbb
int
mov
stc
or
xor
dec
xchg
lea
add
dec
xchg
call
cli
ret
cmp
ror
jl
inc
stos
hlt
jno
mov
ja
xor
imul
clc
dec
aad
add
testb
scas
push
inc
jmp
lds
adc
mov
jl
loope
mov
mov
ljmp
fld
cmp
call
add
les
add
and
pop
popl
aaa
xor
jbe
lock
and
xchg
fistps
xchg
and
idivb
out
lret
movsb
imul
mov
or
adc
inc
sbb
push
push
push
mov
bound
mov
jl
or
xor
adc
or
mov
dec
pop
fwait
pop
add
xor
outsb
jne
jb
adc
aam
sub
sub
popf
movlhps
cmc
lds
push
clc
cmp
mov
cltd
jno
sub
hlt
push
xor
and
bound
dec
in
jo
sub
mov
mov
testl
or
push
xor
jnp
dec
jnp
lret
sbb
xor
and
add
and
pushf
mov
and
movsl
ror
dec
int
in
int3
int
in
push
lret
adc
jo
shl
sahf
iret
add
mov
fwait
add
push
dec
nop
xor
dec
or
add
stos
fwait
pop
arpl
cmp
sub
lahf
cmp
pop
cmpl
mov
arpl
jge
dec
pop
cmp
add
incb
and
dec
adc
or
add
mov
dec
out
xchg
dec
pusha
mov
push
or
mov
subb
adc
lods
clc
int
filds
xchg
sub
cmp
lds
outsl
call
mov
adc
jbe
inc
and
inc
xchg
mov
repz
dec
and
jle
insl
jo
xor
and
idivl
pop
inc
icebp
mov
cs
fmulp
cli
push
cmp
aam
inc
mov
pop
lcall
adc
lret
sub
mov
outsb
movsb
mov
dec
pop
cmp
jl
cmp
lret
sub
and
add
jns
std
sbbl
roll
push
sub
les
iret
push
bnd
pusha
das
clc
jecxz
pushf
xchg
cmp
pusha
in
jp
stc
js
jae
hlt
pop
sub
xchg
inc
jno
pop
jne
hlt
mov
push
shlb
rcrl
or
ljmp
mov
nop
sub
les
inc
mov
mov
jae
xor
adc
xchg
adc
cli
push
cmc
pop
inc
pop
into
aaa
pop
sub
lock
jp
mov
out
sub
jle
mov
sub
jmp
pusha
adc
mov
mov
fchs
adc
or
add
jg
sbb
cmp
stos
lcall
mov
cmp
fld
add
repnz
xor
jbe
fsubs
scas
and
ret
dec
cmp
leave
and
ret
shlb
cmp
add
mov
lods
cmovle
sarl
das
push
sbbl
sbb
jl
enter
ja
mov
fidivl
push
cmpsl
jge
addr16
add
insl
xchg
hlt
cmc
repz
xchg
jne
enter
mov
adcb
dec
push
xor
sub
pop
pop
pop
addb
enter
and
mov
mov
mov
mov
sbb
leave
mov
inc
mov
out
or
movhps
inc
sub
cmp
add
add
mov
xchg
mov
mov
mov
cmc
mov
sub
je
addr16
ja
mov
cwtl
cmp
or
shlb
push
jbe
popa
clc
mov
imul
fsubr
ret
dec
sub
sub
test
sub
push
repz
inc
mov
cmp
cmc
xorb
push
xchg
or
sbb
mov
fcoms
iret
xor
pusha
pop
fisubs
mov
and
inc
rorl
mov
mov
fbstp
into
icebp
iret
xor
jg
dec
ja
jae
jle
rorb
push
jmp
sub
popf
ja
leave
jo
repz
jno
push
jbe
fldenv
jmp
jo
je
je
gs
adc
lahf
mov
sub
adc
mov
ja
push
or
enter
mov
addb
or
lcall
dec
pop
cltd
mov
mov
mov
add
hlt
cs
lret
cmpl
xor
lcall
in
mov
mov
rorb
decb
lret
das
pop
mov
ja
cmp
cmp
mov
mov
mov
dec
insl
cmp
sub
test
adc
or
movl
nop
mov
lcall
adc
mov
bswap
fstpl
fisttpl
push
movsb
jae
mov
inc
scas
add
mov
cli
cmp
pop
int
adc
das
das
sti
sub
or
stc
adc
cmp
mov
inc
in
je
cli
adc
cmp
imul
fdivrs
fildll
mov
stos
imulb
xor
outsb
xor
sarb
inc
mov
movsb
stc
stc
xchg
pop
dec
mov
mov
sbb
adc
in
insl
xor
xor
flds
jno
packuswb
push
pop
shll
stc
cld
push
loop
jl
mov
inc
adc
loop
ss
insb
push
push
ja
flds
mov
xor
adc
lds
dec
sub
xchg
das
mov
xchg
xlat
push
or
notl
mov
icebp
shl
cs
pop
in
or
add
adc
sahf
or
cs
xchg
mov
out
pop
mov
dec
addr16
dec
movsl
and
inc
test
lods
mov
cmpsb
dec
lods
js
cltd
adc
lahf
scas
repnz
cwtl
insl
icebp
movsb
jne
inc
shll
loope
mov
mov
xlat
xchg
or
cltd
push
mov
leave
cmp
loop
repz
sbb
gs
icebp
mov
mov
loop
cmpsb
idivl
lock
add
mov
xchg
xchg
out
dec
mov
incl
or
inc
stc
and
ss
movb
fnstcw
pop
mov
add
fildll
inc
pop
insb
or
cli
mov
mov
mov
cmp
sub
stc
lock
and
inc
xor
add
in
outsb
mov
call
pop
jns
mov
adc
lahf
mov
cmp
mov
xchg
aam
lahf
icebp
jb
ds
push
inc
push
cmp
cmp
push
push
call
xor
add
std
fsubl
push
cmp
outsb
push
test
rcrb
nop
mov
adc
push
jo
adc
out
sbb
mov
jae
push
in
fwait
push
out
push
sub
cs
xchg
mov
icebp
xor
fldcw
sub
or
cmc
imul
push
jb
inc
lock
cs
cltd
mov
cmc
in
adc
xchg
pusha
das
scas
jg
je
xor
inc
add
mov
cltd
out
sub
mov
push
cmp
lock
add
pop
mov
js
pmuludq
fistpl
sub
mov
pop
mov
inc
pushf
sbb
mov
pop
mov
push
inc
inc
or
call
inc
fwait
lea
out
mov
or
mov
mov
xor
nop
clc
inc
cmp
add
sbbb
add
and
clc
add
into
outsb
add
insb
pop
or
jle
pop
sahf
mov
dec
push
sar
lods
or
jae
ret
adc
adc
pop
pop
cmp
jno
sahf
cli
das
cmp
push
push
ds
adc
jae
shll
imulb
add
movsb
or
mov
es
pushf
daa
and
repz
jle
mov
pop
xorb
and
mov
push
int
int
mov
dec
push
insb
adc
jo
and
pushf
vmread
add
xor
push
cltd
repz
jns
xor
xor
cmp
adc
add
nop
scas
out
sub
xchg
push
push
nop
fdivrl
hlt
mov
sub
mov
adc
aam
cltd
xchg
push
adc
sub
adc
pop
into
shr
inc
lock
and
repz
xchg
rcrb
mov
cmc
pusha
mov
adc
mov
testl
mov
imul
or
cltd
shll
sub
or
imull
sub
lock
or
jbe,pn
imul
mov
stos
ror
pop
cwtl
ljmp
out
mov
sahf
or
adc
pop
arpl
xor
or
adc
mov
mov
jne
ret
insl
or
inc
or
lock
sarb
sbb
scas
jno
fnstenv
jg
shlb
pop
aam
jg
loope
insb
xchg
enter
xchg
fsin
xchg
iret
adc
push
pop
fisubrs
call
pop
adc
xchg
adcb
xor
jle
push
mov
sub
jnp
xchg
push
pop
xor
pop
int
mov
mov
or
xor
or
sub
out
add
sahf
pop
mov
mov
out
adc
popa
jo
shl
xor
repnz
dec
data16
or
pop
dec
sbb
mov
andb
lcall
pop
mov
dec
xor
clc
rorl
push
loopne
xchg
fwait
lock
jmp
push
daa
and
sahf
mov
jmp
rcrl
rclb
jo
out
repz
sarl
pop
adc
mov
or
rolb
out
jp
jo
shrl
push
adc
insl
adc
jbe
adc
ss
mov
and
sub
test
xchg
sbbb
push
int
stc
mov
out
push
repnz
into
fwait
push
jg
jno
inc
mov
cmp
xlat
lock
rcll
jle,pn
add
xor
mov
cli
adc
outsl
sbb
cltd
nop
sahf
push
and
stos
or
jne
and
cmp
jbe
or
add
jo
xlat
pop
insl
jle
jecxz
outsb
mov
inc
es
push
inc
gs
sbb
jmp
push
aaa
xor
pop
rorl
inc
jp
inc
leave
mov
cmp
jae
inc
mov
aam
cli
clc
xorb
stc
add
jne
mov
inc
ds
jae
xor
testl
shl
mov
jecxz
nop
xchg
or
mov
dec
push
cmp
std
clc
cmc
mov
or
mov
add
xor
lret
sub
mov
lock
mov
inc
mov
imul
mov
out
test
cmp
add
sub
adc
ret
xor
push
imul
cwtl
lock
add
movsb
fwait
aaa
xchg
sbb
orl
test
mov
cmp
adc
jo
ss
imul
sbb
pop
cltd
jno
ja
fsubs
das
xor
scas
dec
loope
stc
or
or
add
mov
xor
and
dec
push
mov
ja
mov
pop
imul
xchg
or
addr16
lock
repnz
arpl
adc
ss
mov
imul
fwait
bound
jmp
rcrb
add
out
lock
lret
rep
xchg
pand
sub
mul
and
mov
jb
rorb
lods
cltd
or
inc
inc
test
imul
jmp
xchg
lret
dec
add
jno
jge
inc
jbe
pusha
or
jle
adc
sub
and
mov
out
popa
cmp
or
jb
mov
add
adc
xor
popf
jge
or
or
or
fbld
test
rcrb
pushf
je
iret
rclb
mov
fidivrs
xchg
jg
in
push
outsl
ss
call
iret
fidivrs
clc
inc
add
mov
sbb
clc
sahf
out
jne
lods
sbb
jns
and
popf
xlat
popa
sub
dec
add
dec
xor
dec
jbe
push
divl
das
add
xor
int
iret
inc
sahf
xchg
and
insl
mov
inc
inc
icebp
je
sbb
jp
and
xchg
push
xor
dec
mov
jo
sbb
fbstp
std
mov
aad
fs
cltd
lea
int3
mov
and
lock
fidivl
dec
jb
mov
sbbl
xor
es
xor
outsl
sub
cwtl
lock
adc
push
lahf
jl
dec
dec
dec
xlat
push
testl
fwait
das
jo
in
jns
xor
push
je
jl
xchg
or
sti
jnp
nop
or
push
push
cld
or
dec
and
imul
jge
stc
fwait
scas
mov
or
dec
loope
cmp
sar
mov
jns
sbb
sar
clc
repnz
icebp
ds
sub
imull
or
jno
jb
sbb
mov
dec
andb
clc
push
sbb
mov
pop
iret
daa
loopne
orl
xorl
add
push
scas
xor
pop
jbe
jne
idivl
cmp
repnz
push
cmpsl
test
xor
xor
push
jno
fs
mov
shll
aam
divl
cli
and
dec
jns
int3
ret
dec
seto
jp
jmp
icebp
jns
mov
add
or
push
push
and
push
mov
xor
cs
adcl
cmp
inc
mov
add
out
cmc
in
stos
pop
xchg
cmp
or
in
leave
cld
pop
or
stc
mov
jo
xlat
mov
xchg
mov
or
sahf
outsl
mov
adc
xchg
mov
cmp
adc
int
or
xlat
adc
add
and
xlat
outsl
add
cltd
adc
jle
lods
jb
idivb
and
cmp
loopne
lods
xor
push
leave
std
jno
mov
adc
stc
push
inc
jns
or
enter
adc
cmp
insb
jo
lahf
inc
cli
mov
xlat
add
or
outsl
and
insb
xchg
outsb
mov
mov
xor
mov
cmpsl
mov
pusha
xor
sbb
xor
push
je
fdivr
inc
dec
and
or
les
mov
push
inc
inc
push
js
pop
mov
adc
push
mov
cmp
push
mov
pop
add
mov
add
jle
xor
cli
push
fstl
push
or
popf
repnz
xchg
or
sbb
mov
mov
cmpsb
mov
ret
push
and
mov
dec
icebp
mov
mov
mov
pop
loop,pt
jb
pop
push
mov
push
or
into
xchg
sbb
add
xlat
adc
test
jge
out
add
fsubl
outsl
pop
or
mov
push
ljmp
inc
cld
fimuls
xchg
adc
xor
xor
and
daa
adc
dec
icebp
jle
rorb
xor
mov
je
neg
cmc
clc
aam
scas
sbb
mov
js
mov
popa
xor
test
aad
popa
mov
popw
loope
jnp
pop
sbb
mov
mov
or
push
mov
xlat
pop
scas
xor
inc
ljmp
xor
flds
add
pusha
in
repz
lods
imull
or
mov
jno
lock
jnp
lock
xchg
fmuls
jne
xorb
and
xlat
xor
fwait
outsl
add
jecxz
xchg
xor
addl
adc
lahf
dec
clc
or
data16
add
inc
lret
sbb
testb
jl
out
out
jns
or
nop
leave
push
xchg
icebp
data16
push
push
and
cmc
inc
xor
mov
jo
shlb
adc
out
aas
pop
stos
pusha
jne
xor
sbb
insl
add
sub
orl
xor
xor
push
mov
sbb
mov
jmp
cmp
mov
je
adc
sbb
xchg
mov
cmc
dec
dec
dec
test
sub
push
fbstp
mov
sbb
xor
andb
mov
adc
pop
jp
xchg
inc
jg
rcrb
mov
lods
push
in
cmpb
adc
repnz
in
jno
mov
adc
repnz
cmc
mov
xor
add
mov
or
icebp
jnp
out
das
push
int3
scas
rcrl
pop
jae
sbb
jbe
jl
push
int
xchg
mov
xor
and
inc
cmp
fisttpll
and
cmpsl
xor
aam
sbb
sbb
and
jb
iret
popl
cltd
sbb
lock
rcrb
xor
das
xor
sbb
or
jns
sub
mov
jbe
lock
rorb
jg
add
nop
clc
fists
pop
mov
xor
pop
xor
mov
fdivr
mov
enter
outsb
ljmp
sahf
mov
push
daa
push
mov
shll
sub
xor
jae
jo
adc
jne
adc
mov
fwait
or
sub
bound
mov
xor
inc
lret
mov
and
push
mov
dec
lock
pop
sub
sub
fists
rcll
ss
jno
cmpsb
jl
add
cmp
rdmsr
xchg
push
push
es
mov
push
jnp
or
or
mov
cmp
icebp
push
inc
divl
push
loopne
hlt
lock
outsl
cmp
mov
fnstenv
ret
xchg
push
test
pop
add
jno
addb
adc
mov
sahf
aam
mov
xchg
xlat
cmp
icebp
mov
into
add
shlb
cmp
pop
mov
xor
adc
out
xor
pop
insl
inc
xchg
push
inc
pop
adc
xor
inc
insl
roll
clc
push
jno
sbbb
nop
test
xor
aam
sbb
pushf
push
push
cmp
ret
dec
push
out
mov
cmp
sti
xor
jl
outsb
adc
test
or
popf
cmp
sbb
clc
add
add
rorl
cli
fwait
sbb
test
cmc
stc
loop
add
das
adc
add
mov
adc
jne
ss
rorl
mov
pop
mov
mov
or
cld
xlat
pop
dec
xor
loop
sbb
xorl
bound
mov
xor
cmc
orl
ret
mov
enter
movsl
mov
mov
mov
aad
out
xchg
mov
dec
icebp
push
push
lock
repz
jb
ud1
and
mov
imul
fdivs
pop
cmpl
movsl
enter
xor
les
fcoml
adc
sbb
xlat
or
push
movsb
rcll
and
jle
and
aaa
inc
sbbb
clc
add
out
mov
xor
or
jb
push
xor
insl
mov
ds
add
mov
dec
mov
pop
cltd
sbb
mov
xor
sarb
xor
push
repnz
xchg
xor
cmp
push
and
mov
sub
sub
or
sub
or
xor
popa
xchg
sahf
adc
xchg
test
outsb
adc
xor
into
leave
add
jmp
popa
mov
je
mov
movl
push
mov
fcompl
jge
ffree
aaa
dec
sub
in
ret
adc
cmp
xchg
or
lea
adc
pusha
adc
jae
add
aaa
mov
cmp
loop
xor
push
sarb
jl
sarl
out
aaa
in
je
mov
xchg
sahf
and
cli
or
mov
mov
je
jne
jle
iret
or
jmp
out
pop
sub
mov
icebp
aaa
data16
adc
inc
mov
dec
and
imul
mov
ja
xchg
push
popa
push
pop
jbe
jl
push
popa
les
fnsave
xchg
les
dec
sbb
cmp
test
repnz
mov
push
push
lcall
rcr
push
push
das
sub
cmp
push
add
cmp
pushf
insl
adc
dec
shr
negl
jae
adc
ljmp
adc
xor
nop
fbstp
or
jecxz
xchg
mov
push
dec
push
jns
xor
mov
ja
or
sbb
pop
pusha
decb
push
out
cli
bound
mov
out
clc
adc
ljmp
and
addr16
movd
aad
mov
mov
scas
outsb
sub
div
outsb
cmp
mov
iret
nop
or
cli
xchg
xor
mov
sahf
jbe
js
out
movsb
pop
in
sub
test
mov
insb
cmpsb
sub
mov
cltd
pop
insl
lahf
jae
xchg
xlat
pop
sbb
in
or
nop
mov
mov
pop
in
loop
dec
mov
outsb
pop
xor
push
and
inc
scas
push
adc
sti
js
int
fdivs
dec
xorb
lea
into
outsl
repnz
adc
xchg
imul
ds
push
push
sbb
scas
sti
lret
dec
adc
mov
and
adc
mov
xchg
int
pop
push
xor
scas
xor
ja
lea
daa
push
push
xchg
xor
repz
lcall
or
data16
or
inc
sbb
dec
sbb
mov
clc
repz
mov
or
jl
aad
out
mov
dec
adc
aas
sub
jae
jp
adc
sbb
push
xor
xchg
mov
and
xchg
filds
pop
and
pop
inc
cli
adc
ja
test
and
ss
add
aaa
repz
dec
pop
mov
pushf
test
shlb
jp
loopne
xchg
push
adcl
rcrb
adc
or
jns
add
xor
repnz
mov
dec
push
cltd
les
clc
insl
or
outsb
daa
in
sub
push
clc
adcb
mov
jle
ds
pushf
aaa
mov
jl
and
jle
dec
mov
seta
and
dec
das
shl
mov
mov
leave
divl
pop
hlt
fld
cmp
xor
adc
or
scas
das
jno
jbe
jno
xchg
xorb
out
dec
loop
inc
cmp
jge
cwtl
clc
push
movsb
xorb
xor
jns
jmp
xor
inc
bnd
test
xor
rcrl
icebp
clc
in
cmp
movlhps
dec
push
mov
push
xor
adc
and
pop
fcoms
adc
das
or
emms
jns
das
pop
lock
fidivs
jo
sbb
popa
push
out
xor
xchg
mov
pop
icebp
adc
mov
sub
and
jge
sbb
cmp
add
aam
pop
into
xor
push
push
xchg
enter
insb
mov
cmpsb
in
or
out
xchg
sub
jnp
enter
shr
test
lock
jno
xor
cld
ds
enter
fiadds
lret
or
adc
mov
icebp
adc
jl
dec
aaa
int
loopne
dec
cmp
sub
pop
icebp
mov
adc
ss
repz
stos
inc
popf
int
xchg
repz
aaa
inc
ds
icebp
push
mov
shll
jp
xchg
jl
test
jp
and
out
dec
cmp
mov
ss
or
adc
sbb
roll
jo
orl
xchg
jle
add
or
mov
ret
xchg
mov
fwait
lock
loope
scas
cmc
add
mov
sub
js
inc
out
dec
and
rorb
lret
add
orb
xor
sbb
cmp
mov
mov
xlat
adc
dec
faddl
push
iret
sahf
xchg
es
mov
pop
cmp
dec
aaa
in
xchg
add
jnp
sbbb
jle
dec
hlt
or
dec
scas
add
inc
nop
push
out
push
lcall
fildl
cmp
pop
js
xchg
and
cli
xor
je
push
lock
divb
mov
xlat
fcomps
dec
inc
ds
xor
sahf
lds
add
aaa
add
pop
imul
mov
or
or
sbb
dec
xchg
scas
adc
adc
iret
sub
lock
sbbl
cmp
push
icebp
mov
or
outsb
loop
push
push
push
into
jns
insl
sbb
mov
ret
jl
out
imul
push
test
ja
cmp
sub
lock
and
xchg
icebp
test
mov
and
mov
imul
sbb
push
sarb
adc
inc
push
mov
push
fcomp
bound
lods
sbb
shlb
daa
sbb
adc
dec
clc
scas
lcall
pop
orb
ja
jo
mov
cld
clc
inc
jmp
fs
add
pop
xchg
call
jo
sahf
mov
cmp
add
dec
into
mov
out
ret
andb
ds
jb
cmc
and
imul
inc
cmp
inc
adc
call
sysenter
cmc
subl
push
jg
jno
fldt
mul
and
xchg
xchg
push
mov
jne
imul
dec
sarb
repz
fs
or
sub
into
add
mov
in
cmc
pop
xor
sub
xor
push
subb
jge
dec
inc
adc
push
xacquire
sub
and
scas
adc
xor
jns
test
repz
or
jo
sti
repnz
pop
lock
add
rcll
cli
mov
sbb
push
shll
mov
div
insl
mov
jle
jno
mov
or
sarb
jecxz
push
push
add
in
fistps
rol
lock
fmuls
add
arpl
insb
ja
repnz
mov
js
std
push
out
cli
lcall
xor
xchg
shl
in
cli
and
nop
mov
inc
jo
mov
jo
dec
inc
push
and
sahf
pop
jae
or
popa
dec
mov
xor
in
xchg
mov
inc
sub
andl
aad
in
testl
std
cmp
rep
iret
pop
data16
or
cld
ljmp
cmc
sbbb
push
mov
or
add
imul
mov
pop
sbb
or
mov
adc
jo
and
repz
add
shll
les
push
cmp
jg
pushf
test
pop
push
xor
sbb
ss
nop
dec
mov
fnstenv
mov
mov
pop
scas
sbb
mov
cmp
test
mov
cmp
xchg
sub
jno
or
lock
mov
out
sti
inc
sub
sbb
addl
clc
test
leave
jbe
push
jns
mov
out
mov
out
imul
push
xchg
and
pop
fisubrl
or
add
iret
imull
xchg
iret
loope
add
fisubrs
adc
pop
mov
pusha
inc
lods
mov
xchg
xor
and
and
gs
addr16
in
je
in
inc
pushf
outsl
push
fdivs
out
pop
aas
xchg
adc
pop
rcrl
adc
gs
or
sbb
mov
stos
push
movsb
or
jne
lock
mov
popl
sti
aas
call
mov
lock
ds
mov
je
jne
mov
fidivl
test
dec
popf
xor
cmp
in
fimuls
lea
imul
in
sub
bswap
add
fstpl
push
rcll
ds
test
add
dec
jge
loope
dec
push
mov
mov
les
cmp
mov
roll
movsb
fisubs
adc
rcll
adc
inc
push
aaa
out
sbb
mov
imul
loopne
push
outsl
mov
adc
push
jbe
jne
cmp
xchg
popa
mov
cmpl
xchg
and
movsl
add
and
dec
inc
iret
jmp
std
jno
xchg
pushf
add
sahf
xor
push
or
dec
adc
add
xor
cmpb
ret
adc
ret
mov
jo
cs
and
pop
lret
ja
outsb
inc
orl
jne
or
jle
adc
jns
push
imul
jl
mov
xchg
cmpsl
imull
or
loop
jmp
mov
addr16
and
lahf
mov
nopl
mov
je
push
cltd
lods
jnp
adc
push
cwtl
js
imul
xor
lock
pop
mov
and
xor
xor
mov
ret
adc
pop
adcl
out
dec
das
sbb
mov
fwait
pop
mov
sbb
lcall
jne
ret
push
xor
insl
add
lock
aad
xchg
xor
idivl
jl
mov
lock
shl
lock
push
and
xchg
jo
shll
cmp
out
xor
xchg
iret
andb
xchg
test
and
mov
cld
xlat
cli
xchg
pusha
pop
mov
rcll
add
adc
ret
add
xor
cmp
pop
jno
or
xchg
lahf
push
and
shll
in
adc
mov
mov
ret
popl
adc
mov
mov
daa
pop
xchg
or
mov
inc
sub
or
xor
mov
dec
cmpsb
or
jl
ss
add
xchg
sarl
sbb
add
pop
dec
xor
ret
add
add
pop
test
orb
icebp
add
jl
ja
shlb
cmp
lret
xor
jle
lret
mov
sbb
jle
in
dec
icebp
or
stos
popa
outsb
xor
dec
mov
jmp
xor
or
scas
mov
jecxz
mov
pop
xor
adc
push
test
scas
push
mov
cmp
fdivrl
div
push
adc
ds
sbb
and
jp
add
rcll
mov
jmp
xchg
mov
xor
jmp
loope
ss
sub
pop
std
dec
or
xchg
mov
jp
sbb
inc
push
lds
mov
pop
sahf
adc
loop
repz
pop
xchg
dec
mov
lock
jmp
xchg
push
out
out
stos
test
repnz
lret
add
or
mov
xor
xchg
js
ds
and
xor
divl
and
lock
add
repz
notl
or
mov
inc
adc
adc
sahf
xorl
push
jno
add
hlt
jne
cmpsl
lahf
jge
jnp
adc
loop
xor
or
lods
mov
lock
or
in
mov
sahf
icebp
xchg
mov
xchg
mov
push
insl
adc
mov
loop
and
dec
lods
push
or
addb
cltd
jb
push
lock
lock
lret
mov
mov
js
cmp
xor
add
arpl
flds
aas
mov
mov
xor
sahf
lea
mov
pop
inc
inc
repz
cmp
int
dec
xchg
or
pushf
cmpl
scas
mov
cld
mov
xor
dec
add
addb
push
or
cmpb
je
xchg
sub
add
call
mov
cmp
sub
ja
xor
add
dec
sub
ja
cmp
jnp
shrb
int3
lahf
sub
add
insl
cwtl
popa
out
sahf
mov
push
jg
jbe
cmc
and
sub
lock
jmp
jbe
add
pop
nop
sbb
iret
sbb
xor
fidivrs
neg
or
xor
fstpt
lds
sbb
dec
mov
lret
inc
xor
or
sub
cmpl
dec
in
jo
sub
adc
pop
pop
mov
push
into
mov
psllw
test
cmpl
sub
cmc
jnp
insl
jg
je
lods
aas
cld
mov
dec
aas
or
sbb
lahf
mov
scas
fmuls
aad
cld
and
pop
adc
pop
jb
repz
xor
mov
lret
xor
rcll
js
clc
mov
movsb
fildll
lods
ja
outsb
pop
jns
clc
rcr
adc
mov
cltd
fbstp
or
adc
das
sbb
outsl
fldcw
jno
mov
push
sbb
xchg
adc
rol
lahf
inc
inc
adc
insl
lock
inc
push
push
lds
cmp
sti
xor
push
and
scas
lods
outsb
mov
xchg
rcrl
or
rcl
and
lahf
push
pop
icebp
xor
cmpl
ss
loop
add
add
mov
ljmp
repz
jecxz
push
sbb
dec
adc
test
cmp
push
enter
xchg
mov
cs
xor
mov
adc
imull
popa
cmp
testb
fbld
cwtl
xor
data16
andb
adc
xor
sub
lods
popf
jne
out
fidivrs
cmpb
lret
aad
test
jbe
lret
test
sarl
inc
or
fwait
inc
test
push
sbb
pop
jns
xchg
add
test
push
aam
notb
adc
cli
scas
cmp
lods
icebp
cmpsb
repnz
push
insl
std
cmpsl
das
sahf
arpl
in
aam
cmp
and
nop
xor
scas
fcomp
cmp
mulb
pop
mov
and
xchg
les
fwait
push
lods
pop
movsl
pop
aaa
add
adc
cwtl
imul
pop
inc
xor
xlat
test
add
jl
vmovups
insl
and
fdivr
test
dec
gs
adc
andb
fidivrs
jg
js
decb
in
pushf
repz
fsubs
data16
stos
push
push
jle
sub
and
push
or
ret
add
xor
ds
negb
cmp
dec
shll
xor
sahf
push
ja
sub
mov
xchg
rclb
and
push
dec
mov
sbb
xchg
clc
je
and
mov
xchg
jb
mov
je
int
movsl
sti
sub
xchg
inc
dec
push
hlt
jle
pop
ljmp
push
xchg
jle
pop
fistps
fsubs
pop
addb
test
mov
mov
pusha
call
outsl
out
push
into
jnp
cwtl
pop
cmp
jnp
shlb
or
adc
cwtl
xchg
aas
dec
mov
iret
xor
imul
push
aad
lock
rcrb
jbe
xchg
or
lock
inc
rorl
jo
lock
or
push
xor
mov
mov
mov
push
ret
mov
or
sti
jno
sub
ret
ss
mov
movsb
push
mov
inc
or
pop
mov
jg
nop
enter
imul
mov
popf
add
scas
gs
push
cltd
nop
rcrb
mov
xchg
mov
or
js
in
insl
hlt
or
or
inc
adc
inc
sub
int
dec
push
push
sub
in
nop
in
or
sbb
fcmove
in
arpl
test
insb
int3
lret
or
jno
dec
cmc
adc
out
in
xor
adc
cmp
xchg
xor
hlt
inc
mov
push
mov
enter
sarl
push
mov
adc
sahf
jl
clc
aam
icebp
repz
xchg
cmpl
testl
mov
jb
adc
cld
icebp
mov
repnz
mov
mov
push
pop
cmp
xor
xor
aaa
inc
mov
js
cwtl
inc
jae
popf
or
cmc
add
dec
sub
and
cmc
cmp
jo
xor
push
in
xor
pop
je
pop
mov
lss
and
or
mov
add
data16
xor
filds
lea
cld
stos
pop
mov
movsb
mov
mov
push
inc
rcrb
lret
nop
icebp
rcrb
or
inc
sti
lock
mov
std
xor
pop
or
add
icebp
mov
daa
add
adcl
addl
das
and
scas
mov
lret
repz
insl
xlat
cmp
icebp
enter
sub
cmp
or
adc
aad
dec
lret
cli
repnz
push
repz
jne
ret
js
sbb
popf
jno
std
or
out
inc
jne
repz
and
repz
roll
aaa
leave
xchg
and
pop
pop
sub
xor
mov
fistps
loopne
cmp
xor
push
subb
or
shrb
insb
jmp
mov
xor
cwtl
push
std
aam
cmp
je
lock
jg
enter
adc
sbb
mov
cwtl
adc
jg
sub
andl
push
sbb
pop
aaa
stos
stc
xor
in
mov
pushf
cwtl
rcll
push
adc
faddl
insl
dec
in
or
xchg
push
mov
add
xlat
outsl
sub
sbb
mov
mov
lods
mov
mov
into
lock
fwait
and
jl
rolb
pop
push
adc
in
sbb
cld
negb
ds
xchg
pop
repnz
adc
jb
mov
int
mov
jp
fstl
ret
mov
push
lods
xchg
sbb
adc
nop
inc
mov
sbb
jg
push
cmp
push
punpckhwd
ss
push
mov
lahf
adc
adc
ljmp
mov
xchg
sahf
scas
adc
ljmp
loopne
push
jb
push
or
cli
jmp
jle
jmp
jno
daa
and
jo
jecxz
or
roll
into
mov
pusha
jg
mov
jle
xchg
lret
addb
jp
popf
iret
jl
jns
add
cmp
js
mov
daa
scas
push
pop
ror
dec
addb
test
or
adc
mov
dec
inc
pusha
jns
pmuludq
push
xor
js
cmp
adc
fucom
jecxz
rcrb
movsl
pop
negb
push
dec
cwtl
push
stc
jb
ds
repz
cmp
sti
shrb
jecxz
sti
sbb
xchg
test
leave
pop
push
xlat
fwait
test
divb
pop
or
hlt
adc
hlt
xor
adc
test
inc
add
bound
sbb
jne
mov
mov
cmp
dec
sub
pop
push
pop
mov
mov
mov
clc
push
cmp
pop
enter
or
les
jb
or
sarb
sbb
aam
sarl
mov
in
xor
inc
lock
xlat
adc
xor
xchg
or
sbb
mov
fs
inc
pusha
xchg
xorl
push
cmp
out
sti
pop
pop
mov
pop
std
push
adc
sti
inc
push
shrl
xchg
xor
jg
mov
xor
icebp
iret
and
jb
mov
imul
add
fbstp
jo
pop
inc
js
inc
rol
in
xchg
lret
and
out
mov
fsubs
icebp
shrb
dec
cmp
and
xor
lcall
or
cmpsl
pop
jge
lock
je,pn
sbb
adc
mov
add
push
or
bound
jge
jo
push
mov
adc
aaa
das
sub
pop
mov
push
xor
inc
xchg
pushf
mov
cwtl
lock
insl
cmp
fbld
xchg
out
pusha
jns
cmp
lods
xor
mov
shl
mov
test
sbb
jnp
clc
outsb
aam
mov
nop
or
and
test
dec
xor
imul
leave
jle
jp
jp
inc
dec
js
scas
stc
push
call
aam
test
pusha
and
icebp
mov
icebp
mov
jecxz
pop
je
xor
stc
shlb
sbb
or
test
and
pop
sbb
bnd
pop
test
pusha
cmp
jb
cli
push
repz
add
aad
xchg
negl
jno
pop
adc
xchg
repnz
in
mov
jecxz
xchg
lods
or
mov
mov
je
dec
daa
sbb
inc
stos
cmp
jns
add
loopne
adc
rcrb
loop
insb
cmpsl
or
cli
and
fldcw
inc
xor
sti
mov
fsts
ret
pop
jbe
aad
test
sahf
dec
or
ja
loopne
adc
adc
lahf
arpl
clc
push
in
roll
jae
jge
sbb
push
pop
repz
jae
pop
ret
subb
sub
mov
rolb
shlb
je
and
xor
jo
pop
pop
and
adc
sbb
inc
adc
jle
add
sahf
ja
push
dec
sbb
inc
in
pushf
jnp
mov
add
pop
jb
cmp
or
add
cwtl
cmp
fisttpl
jb
mov
dec
add
adc
fiadds
xor
sbb
fimull
and
cmp
sbb
mov
sub
xor
add
push
inc
aad
pop
icebp
je
lock
mov
sub
sbb
or
mov
cmpsl
mov
adc
scas
mov
stc
mov
or
imul
mov
mov
xchg
pop
ret
push
mov
mov
popa
dec
leave
scas
mov
icebp
stc
lcall
hlt
aas
int3
mov
mov
adc
out
adcl
sbb
lahf
iret
cmp
ja
mov
psubq
xchg
sub
fsub
cltd
pop
iret
dec
stos
jp
outsb
daa
xor
das
dec
push
or
cmpsl
push
in
mov
dec
imul
or
jle
cmpsl
mov
sub
bnd
mov
sarl
cmp
enter
jns
inc
loope
cli
xchg
pop
sti
jno
lock
jle
adc
adc
adc
adc
gs
or
cmc
sbb
or
push
adc
shl
and
xor
cwtl
push
outsb
xor
add
js
fdivp
add
imulb
add
xor
add
add
adc
mov
sbb
std
or
and
and
test
cli
cmp
lock
mov
adc
icebp
or
mulb
xchg
fwait
mov
adc
je
cli
mov
add
adc
bnd
mov
jno
jb
sarl
sarl
mov
jbe
xor
fmuls
std
popa
mov
xor
orb
adc
repnz
push
add
add
mov
pop
cmc
xor
add
cmc
js
inc
js
add
bnd
jae
cmc
js
add
js
or
js
jb
sti
js
test
lds
jno
pop
outsl
xacquire
cmc
jns
push
and
jae
and
jns
add
js
add
je
add
and
xor
mov
xorb
and
xor
jge
ja
scas
jns
adc
dec
dec
repnz
adc
enter
aas
sbb
aas
pop
push
rcll
daa
js
repnz
push
or
pop
adc
add
clc
or
xor
jnp
xchg
cmp
inc
icebp
repnz
repz
adc
cmpb
adc
icebp
jne
js
sbb
sbb
xor
fstps
add
js
notb
adc
outsl
jl
andb
jge
cmpsb
xor
mov
loope
testb
lods
jl
xchg
js
daa
xor
xlat
xchg
jp
dec
and
adc
xchg
mov
test
inc
xchg
popa
jecxz
out
dec
cli
ret
stc
addr16
mov
sub
mov
call
out
test
daa
push
mov
scas
icebp
add
in
mov
dec
int3
cmp
dec
sbb
add
pop
and
repnz
bound
inc
hlt
lahf
or
divb
cmc
jb
in
jno
jno
add
sarl
outsl
les
jno
addr16
push
sbb
inc
inc
cmpsb
mov
jae
repnz
jne
sub
outsl
cmp
dec
cltd
inc
and
jo
jne
mov
dec
nop
jae
inc
daa
or
adc
test
and
mov
rcll
adc
dec
xchg
jae
inc
dec
or
push
adc
aas
xor
ficoml
inc
pop
lea
rcrl
mov
sbb
mov
mov
mov
lock
filds
cmpl
dec
xchg
xor
iret
testl
cmp
fptan
push
stos
dec
cmp
jge
dec
icebp
jbe
push
scas
adc
push
aad
div
sub
jnp
pop
rorb
pop
inc
gs
push
jb
add
or
mov
xchg
or
dec
repnz
cmpsb
aaa
cld
lods
rcll
mov
jbe
mov
lea
lret
pop
inc
mov
and
dec
dec
xor
dec
push
xchg
xchg
sub
dec
popa
add
je
movsl
and
es
lock
das
rcll
and
pop
iret
mov
addr16
pop
dec
aad
stc
sbb
std
dec
faddp
insb
or
xor
sbb
add
or
sbb
int3
lcall
sbb
out
lcall
fs
ret
jne
adc
jb
mov
ss
lock
mov
adc
icebp
cwtl
or
lock
pop
hlt
add
jae
jo
pop
push
adc
mov
lods
iret
lock
icebp
jb
ljmp
sub
add
js
or
adc
mov
icebp
fisttps
clc
mov
add
js
aam
jl
push
repz
xor
xchg
jno
sarb
adc
icebp
aam
cli
fdivl
add
ss
xor
cmp
add
push
cmp
scas
incb
sahf
jle
in
enter
xor
fcompl
repz
mov
fnstsw
lock
pop
sahf
cmp
out
and
lock
cmp
push
lock
repnz
sbb
mov
rclb
popf
std
sbb
jbe
fisttpll
dec
outsb
pop
cmpb
icebp
push
imul
js
cmp
xchg
pop
repz
cmp
xor
mov
adc
icebp
or
aam
stc
sub
cmp
jmp
sub
or
mov
cld
dec
dec
paddd
push
notb
sub
xor
xor
pushf
dec
fists
sbb
pop
das
pop
mov
push
sbb
add
cmp
outsl
imul
stc
jbe
lock
and
and
icebp
cmc
pop
ss
adc
jno
dec
adc
repz
adc
jo
xor
sahf
mov
jb
mov
pushf
mov
rclb
cmp
pop
lock
pop
js
sarb
sbb
pop
call
mov
and
mov
inc
pop
scas
cwtl
pop
aad
jp
pop
pop
jl
pop
lret
cmp
adc
nop
mov
pop
ljmp
xlat
add
in
je
jne
sbb
cmpsl
jl
mov
cmp
adc
roll
cmpsb
jne
sub
imul
fiaddl
mov
adc
add
pop
pushf
jl
outsb
cli
inc
jb
cld
mov
mov
mov
fdivrs
jg
mov
std
lds
xchg
popf
std
jge
add
mov
insb
out
and
cmp
mov
insl
fistps
jl
test
and
dec
mov
xchg
mov
dec
push
jle
idivl
mov
lock
aaa
das
cmp
mov
xchg
cld
insb
call
add
and
jmp
push
mov
insb
es
or
sub
movsb
mov
fldcw
adc
xor
cmp
les
jbe
and
jno
mov
movsb
xor
leave
add
cmp
lds
out
dec
mov
and
cwtl
sbb
fistpl
or
inc
cwtl
iret
jge
addl
jnp
cld
nop
mov
clc
loope
push
lds
loop
sub
mov
mov
jl
icebp
xchg
inc
or
adc
add
icebp
ret
xor
add
add
movsb
push
dec
int
jbe
lock
cmp
orb
js
test
scas
jnp
arpl
fdiv
adc
mov
insl
xchg
cmp
xor
add
pop
fcmovne
stc
nop
xchg
xchg
sarb
xchg
lret
cwtl
jge
mov
adc
sub
lock
xlat
clc
jmp
mov
xor
test
test
inc
dec
das
mov
enter
sbb
mov
dec
testb
mov
or
add
loop
mov
add
cmc
jp
into
and
add
and
xchg
mov
mov
and
aam
cmc
mov
xor
and
xor
and
fiadds
xor
cmp
sti
mov
push
adc
jae
adc
lea
sahf
xor
mov
sarb
imul
sub
pop
xor
push
clc
cmpb
inc
adc
xchg
repz
and
add
je
xor
xor
pop
stos
xor
test
xor
mov
rolb
and
cmpsb
fidivl
mov
mov
cltd
mov
lret
inc
mov
jo
dec
and
stos
adc
or
mov
push
xchg
into
push
xor
cmp
xor
in
mov
xchg
add
fxch
jmp
or
lock
adc
xchg
lret
movsl
or
and
scas
scas
mov
push
and
pop
enter
xchg
lss
popa
dec
je
rclb
outsl
pop
icebp
sbb
mov
js
pop
mov
jp
ret
pop
addl
cmp
scas
jl
pop
add
mov
in
xor
xchg
add
and
adc
push
or
xor
pop
xchg
mov
repz
mov
jns
cmp
mov
dec
cmp
js
dec
js
xchg
ja
mov
andb
jp
in
push
fsubrp
or
and
rolb
xchg
push
jb
add
pusha
mov
dec
clc
iret
stc
xor
cwtl
lahf
insb
test
movsb
push
rorl
fs
lahf
xchg
cld
cmpl
enter
push
dec
rolb
xor
ds
dec
insl
mov
xor
jb
clc
or
out
mov
add
sbbb
imul
push
pop
aad
iret
push
mov
out
aaa
test
mov
mov
mov
jle
push
xchg
mov
add
cwtl
insl
sarl
mov
mov
sbb
add
rcrl
imul
push
cmc
sbb
call
stc
push
mov
lds
mov
pop
es
loope
fxam
xor
push
mov
cmp
pop
adcb
pushl
icebp
and
fcomps
mov
pop
hlt
shll
sbb
add
xchg
xor
jo
inc
pop
outsb
lcall
jmp
lcall
or
push
mov
mov
cwtl
xor
xor
dec
cwtl
push
dec
sti
and
scas
adc
iret
jb
xchg
scas
sbb
xor
data16
jnp
or
push
adc
inc
jo
or
or
sub
lods
insl
xchg
mov
ss
imul
xchg
fidivrl
xchg
and
dec
add
loop
xchg
sbb
stos
insl
outsb
xor
push
or
movsl
iret
add
sahf
mov
pop
aam
jg
out
mov
and
adc
int3
add
sbb
mov
add
inc
lock
push
addl
icebp
ret
jns
add
lea
movsl
xchg
inc
or
xchg
shlb
jae
mov
sub
inc
add
sbb
addr16
cmp
sahf
cs
ret
nop
imul
fldenv
and
push
sbb
std
lock
add
dec
mov
fdivrp
and
cmc
cmp
adc
dec
sbb
or
sub
insl
push
dec
scas
xor
xor
int
inc
in
add
in
test
jbe
xor
lock
in
inc
jbe
in
mov
nop
adc
xorb
insl
pop
loopne
addr16
rcl
pop
jp
ret
shll
and
push
xlat
push
pop
repz
adc
push
xchg
and
out
push
or
xor
call
std
push
push
mov
test
xor
fistpl
call
jb
xchg
js
dec
sbb
push
int3
xor
pop
cmp
jg
push
outsb
jle
mov
adc
cmpsb
cmc
cld
xchg
and
push
and
sub
add
jno,pn
jno
fdivl
pop
outsl
and
pop
dec
jns
push
jp
ds
mov
jg
sbbb
jb
xchg
movsb
push
xor
enter
push
jmp
xchg
xor
jb
mov
xchg
pop
popl
mov
fcoms
xchg
pop
and
dec
xor
mov
cmp
cmp
xchg
sbb
mov
mov
jns
mov
adc
inc
pushf
notb
adcb
das
inc
push
icebp
mov
inc
xorb
icebp
add
mov
hlt
jae
adc
sbb
sub
mov
xchg
stos
gs
mov
or
es
fimull
pop
out
or
icebp
out
arpl
push
xchg
aaa
xchg
pop
shll
pop
jp
mov
sbb
mov
inc
mov
das
orb
scas
jmp
sbb
pop
test
movsl
mov
imul
jae
mov
add
sbb
insl
push
les
jl
repz
or
sahf
jns
movsb
mov
push
mov
bound
arpl
push
push
dec
pop
sub
sub
shl
inc
shr
sti
xchg
rolb
clc
jl
adc
xor
repz
js
mulb
cmp
dec
je
cmp
lock
jle
jo
and
cmpl
inc
mov
adc
xchg
repz
cmp
out
xor
mov
das
adc
into
add
hlt
inc
inc
jl
and
sbb
xchg
or
xor
addr16
push
jne
shlb
rclb
lcall
xor
mov
mov
push
rclb
add
ja
and
shl
jbe
jcxz
adc
xlat
adc
push
popa
lods
mov
push
and
cmp
mov
arpl
and
xor
push
insl
aas
xchg
cmpsb
lock
cmpb
fcoms
adc
adc
cmp
adc
jb
add
and
dec
je
test
and
push
jle
cmp
and
xor
icebp
jb
add
insb
lea
inc
xchg
mov
fbstp
add
adc
adc
or
add
sbb
lea
cltd
fmulp
add
jl
fdivl
icebp
outsl
push
scas
fistps
mov
push
pop
cmp
vmread
enter
mov
add
jno
push
mov
xchg
data16
mov
or
sbb
cmc
sub
cwtl
push
dec
pushf
fstpt
sub
cmp
fiaddl
icebp
stc
test
cli
mov
insb
movl
push
lret
or
sti
xor
sub
adc
push
adc
gs
or
mov
jns
mov
out
xchg
imul
mov
cmp
adc
adc
cld
add
pop
add
int
cli
mov
jno
sub
loop
jb
xchg
cmpb
sbb
inc
inc
push
or
inc
mov
ss
push
lock
je
clc
jle
inc
xor
js
insl
add
and
es
adc
adc
aaa
js
cli
and
xchg
popl
ret
ss
and
pop
aam
add
loop
out
or
and
mov
sbb
sub
loopne
jl
xor
psrlq
cli
mov
mov
adc
xor
adc
cld
lock
xlat
in
and
clc
mov
fdivrs
out
nop
or
in
jb
pop
add
push
adc
or
mov
out
pop
adc
mov
sub
and
jno
xchg
inc
test
rcll
js
push
xor
mov
addb
out
dec
sbb
insl
repz
push
stc
sbbl
clc
push
cmc
rcll
movsl
and
jno
in
aad
out
and
lock
mov
mov
adc
clc
fs
xor
adc
xor
cmp
push
js
cmp
sti
xor
idivb
xorl
icebp
add
sub
call
push
add
fiadds
jo
push
adc
dec
ret
repnz
or
cmpsl
cmp
ja
cmp
adc
jl
test
adc
out
pop
push
cmp
inc
insl
lcall
mov
orb
aam
push
je
in
iret
or
adc
aaa
jns
xchg
aam
inc
imull
sub
ss
inc
mov
fs
shll
pop
xchg
lret
lret
aam
divl
fldl
outsl
or
icebp
add
leave
adc
mov
insl
cmc
lret
fbstp
icebp
xorl
popa
fwait
or
test
loop
jbe
inc
sarl
insb
dec
js
add
add
iret
inc
jne
mov
cld
pusha
mov
cli
push
sub
icebp
jo
lods
jns
stc
jne
xchg
push
xchg
mov
mov
and
cmp
xrelease
add
jb
cwtl
xchg
shll
mov
adc
push
mov
xchg
xor
push
and
dec
add
shll
xor
jo
adc
and
xchg
js
or
imulb
xor
cmp
xor
mov
adc
adc
adc
adc
icebp
test
test
into
repnz
adc
lock
ud2
mov
loopne
xor
pop
lea
xor
mov
pop
adc
sar
icebp
test
scas
jo
jmp
aad
adc
mov
test
jg
adcl
adc
jns
mov
xor
out
jle
jmp
repz
sub
lcall
repnz
mov
mov
pop
xor
in
pop
mov
ss
popa
adc
test
cmpsb
and
xor
and
push
lock
int3
jl
xor
xchg
sti
hlt
or
push
int3
adc
mov
jecxz
rol
sbb
cmp
fcmovnb
dec
add
push
icebp
mov
popf
ja
repz
mov
fnstcw
repnz
dec
and
insb
shlb
mov
lods
push
sbb
cmp
xor
ret
repnz
out
sbb
xchg
push
push
push
sarb
push
dec
jae
push
add
jb
add
xor
popf
xor
out
movsb
xchg
repnz
jl
mov
lds
hlt
insb
inc
pop
je
cmpsb
push
cmp
xchg
mov
push
scas
ss
fistpl
aas
xor
popa
iret
fsubrs
daa
and
fmuls
xchg
jno
hlt
icebp
jb
es
stos
shl
cmpsb
roll
jmp
jb
rorb
push
inc
xor
sbb
xchg
hlt
xchg
lret
fldl
lock
mov
xchg
lock
mov
fistl
push
inc
lds
mov
adcb
dec
mov
in
mov
or
adc
xchg
push
mov
insl
pop
sbb
sbb
xchg
inc
adc
icebp
divb
xorl
fwait
scas
popa
fdivs
jmp
cmc
or
adc
dec
mov
mov
fdivs
cmp
inc
and
xor
js
cld
not
pop
and
icebp
divl
or
push
cwtl
mov
lahf
mov
cld
imul
jb
mov
push
sub
jae
sub
xor
mov
sub
loopne
cmp
xor
mov
adc
dec
sub
hlt
mov
adcl
jb
xor
test
test
push
push
pusha
jge
xchg
mov
fdivs
pop
andb
stc
lock
and
mov
aam
xor
fisubrl
xchg
push
loop
jo
insl
mov
mov
mov
adc
cmp
or
imul
sbb
hlt
js
cli
xor
je
clc
les
mov
mov
int3
adc
adc
adc
xchg
cmp
mov
jb
or
in
movsb
xchg
mov
test
iret
push
fmull
mov
or
out
sbb
repnz
push
cmpsb
and
inc
push
add
mov
xchg
insl
fsub
test
test
push
pushf
subb
icebp
out
jl
fldcw
pop
mov
hlt
insl
mov
daa
icebp
xchg
push
test
cmp
jb
lock
push
push
jb
xchg
insb
inc
std
mov
mov
lret
daa
test
aas
xor
pop
pop
fdivrs
xchg
mov
outsl
lock
mulps
mov
pop
outsl
fistpl
addr16
mov
insb
cmp
fisttpll
sub
xor
cmp
icebp
mov
and
xchg
lret
or
and
pop
in
ret
xchg
loop
or
adc
push
and
or
jb
xor
hlt
lcall
push
jb
stos
lods
les
xor
ljmp
ss
mov
add
and
icebp
jno
add
test
fisttpl
in
push
mov
and
outsb
icebp
xor
repz
pop
and
xor
je
clc
iret
add
int
icebp
divl
mov
es
and
push
aaa
sub
stos
mov
js
push
inc
push
movsl
pop
lock
mov
xchg
ficoms
out
and
xor
xor
minps
xor
adc
ja
insb
add
mov
inc
les
add
in
pop
test
into
adc
dec
xchg
in
mov
clc
push
or
mov
push
dec
mov
lock
js
dec
dec
loopne
mov
sbb
insl
mov
xlat
test
add
rcl
fcoml
and
sbb
xchg
adc
mov
jo
mov
or
jmp
mov
push
jle
movsb
je
mov
inc
pop
icebp
divl
and
xor
dec
and
test
sar
outsb
sar
bound
imul
xchg
adc
sub
dec
mov
push
adc
loop
imul
fiaddl
add
mov
adc
stc
inc
pop
dec
js
jno
ret
rorb
scas
div
in
cmc
lret
jge
jecxz
push
sub
adc
sarb
out
xor
test
dec
lret
movsl
xchg
mov
cli
mov
jae
push
movw
cmc
cmc
or
shrl
rolb
inc
addr16
out
sbb
nop
mov
stos
jne
and
dec
mov
adc
orl
push
icebp
stos
sbb
jle
cli
imul
xchg
inc
lcall
cltd
mov
lods
inc
jb
xor
xchg
cmc
mov
xor
packsswb
cli
ja
xchg
cmp
or
dec
xor
jb
jo
xchg
jge
cmpb
mov
les
jnp
adc
lock
ss
clc
cmp
mov
addl
push
xorl
xor
adc
push
mov
adc
adc
nop
and
adc
jmp
movsl
push
adc
inc
mov
je
xor
iret
adc
cmp
jbe
je
inc
test
adc
xchg
sbb
sti
jbe
out
bound
xor
push
rol
xchg
jl
xor
mov
adc
out
jno
mov
jnp
jge
jb
adc
jno
int3
cmp
ds
adc
stos
cmp
mov
jg
xor
rep
and
inc
xor
add
ljmp
dec
adc
push
mov
adc
adc
sbb
adcb
icebp
xchg
jo
and
movl
xor
jo
sub
into
lock
push
or
push
in
jb
hlt
test
push
jl
sbb
xchg
xor
rol
mov
adc
dec
pop
adc
mov
fisubrl
and
les
out
pusha
mov
rorl
pop
js
cmp
xchg
adcl
push
mov
movsb
lods
lret
je
inc
dec
xor
js
add
xor
xchg
shll
jae
dec
mov
and
push
adc
push
jo
aas
mov
subl
test
loop
scas
mov
imul
dec
mov
aas
push
pop
push
pop
push
je
addl
cmp
lret
dec
cmp
push
pushf
cli
sti
lea
xor
movsb
xor
cmp
aam
xchg
fdivrl
inc
push
sbb
sub
js
testl
jo
push
or
lds
cld
xor
sub
xchg
push
xor
xlat
aam
sbb
xchg
rol
or
push
adc
add
sahf
fmuls
jmp
out
rolb
xchg
pop
adc
fists
jle
sub
iret
xor
mov
adc
mov
jecxz
pop
mov
ja
cmp
xchg
fs
insb
jle
in
loope
std
jle
int3
in
mov
jno
cmp
outsb
cwtl
jle
mov
xor
lret
pop
out
inc
mov
jbe
scas
int
ror
stc
int3
mov
stc
addb
mov
mov
adc
inc
push
mov
xchg
mov
cmp
fs
divb
mov
inc
shll
pop
sahf
and
icebp
divl
mov
adc
adc
inc
sbb
call
dec
test
jbe
fs
pop
popa
divb
pop
test
js
sbb
jae
loopne
add
aaa
push
nop
sbb
push
mov
scas
jae
xorl
cmp
add
jg
jno
add
icebp
fildl
pop
or
test
xor
js
mov
and
js
dec
movsb
icebp
add
mov
js
or
sub
mov
scas
adc
mov
in
mov
dec
repnz
imul
test
or
push
push
pop
push
or
addb
jl
adc
dec
mov
add
add
push
sub
rcll
mov
cmp
lock
adc
push
lea
loopne
mov
add
inc
dec
mov
insb
push
xor
dec
mov
push
roll
cld
lock
mov
cwtl
xor
cld
dec
lods
cld
dec
add
je
fstp
mov
cmp
jne
add
dec
lods
ja
adc
ljmp
ja
clc
mov
xor
loopne
jns
ja
mov
xor
adc
clc
dec
and
mov
cmc
xor
repz
js
stc
dec
adc
icebp
cmp
rclb
clc
xchg
mov
out
pop
add
imul
jno
xor
in
sub
inc
into
cmpl
icebp
int3
sbb
mov
xchg
test
mov
fmuls
mov
inc
cmp
mov
jl
in
add
clc
sbb
hlt
xor
cmp
les
aaa
cmp
scas
adc
mov
inc
lods
roll
test
xor
cmp
cmpsl
ds
adcl
nop
jmp
push
jo
adc
adc
push
repnz
adc
movsb
icebp
add
js
cmp
fbstp
and
je
ja
jbe
int3
or
movsl
sbb
xor
adc
or
lea
icebp
adc
cmp
sub
cwtl
mov
xchg
sbb
and
add
xchg
pop
mov
cmp
ljmp
jmp
fisttpll
xor
mov
pop
rolb
xor
pop
jle
jl
and
fisubrs
cmp
lea
push
cmpsl
das
dec
mov
clc
pop
push
daa
ja
testb
jnp
or
shlb
imul
idivb
fcomps
cmp
bnd
mov
push
push
xor
jne
iret
out
add
sub
dec
rorb
popa
push
or
rorl
sub
inc
push
xor
insl
mov
cmp
adc
cmpsl
testl
nop
daa
loop
jne
sub
cmp
aaa
test
mov
pop
popa
and
ds
leave
xchg
adc
pop
sbb
pop
jb
mov
cmp
cmp
or
jne
lock
cmp
inc
pop
jecxz
push
aad
sub
xor
add
inc
or
clc
movsl
subb
mov
pop
aad
add
rolb
icebp
lock
lods
std
aad
add
out
cmp
inc
insb
cmp
and
sub
mov
push
push
pop
mov
movsl
rcr
sbb
cwtl
add
std
dec
pop
mov
sarl
add
dec
adc
and
outsl
add
addb
lods
lret
jmp
and
mov
xor
or
mov
pusha
xchg
mov
lods
pop
push
pop
push
daa
mov
lock
loopne
jne
sbb
lret
xor
js
rcll
inc
dec
and
cwtl
jo
clc
mov
mov
adc
sbb
add
adc
adc
adc
lret
jo
mov
dec
js
repz
mov
in
push
push
push
sub
push
sbb
cmp
sahf
or
dec
shlb
pop
mov
rcrl
stc
dec
fwait
int3
fsts
movsl
sbb
mov
scas
aas
js
sar
sub
test
stos
scas
nop
sub
addb
add
pop
jno
lock
hlt
inc
out
rcll
ja
dec
mov
xor
xchg
je
cmp
ja
jmp
stc
lahf
xchg
cwtl
or
ret
or
cmp
cmp
pop
or
and
push
xchg
adc
mov
dec
js
js
mov
xor
push
dec
je
xor
push
mov
push
dec
cmp
pop
or
xor
xorb
or
clc
inc
cwtl
ret
aam
dec
mov
cmpsb
scas
mov
js
int
lret
inc
stc
xor
jnp
hlt
sub
pop
sar
rcrl
fdivrl
xchg
add
testl
push
int3
mov
mov
dec
mov
xorb
xor
js
xchg
push
cmp
mov
adc
push
and
xor
out
xor
cs
and
lds
inc
cs
xchg
negb
lahf
and
shl
ficompl
test
push
mov
fstl
add
rclb
jns
clc
sub
pop
popf
jo
push
or
add
and
shrb
cmp
xor
sbb
pop
push
xchg
sub
pop
jae
adc
cld
or
je
xor
test
or
adc
xor
bound
out
lcall
inc
adc
xchg
mov
and
jge
out
dec
jge
lock
push
sbb
sub
orb
cmpb
and
outsl
and
shl
out
xor
push
mov
aam
aad
pop
mov
dec
push
mov
pop
cmp
aad
mov
sbb
add
adc
push
adc
xor
in
inc
inc
xchg
sbb
insl
adc
out
pop
roll
push
add
lock
fwait
adc
mov
jo
test
loope
adcb
loope
jb
push
lret
xor
ret
jbe
test
mov
gs
push
adc
jg
loope
adc
sarl
sub
dec
xor
lea
sbb
adcl
stc
or
and
pop
lahf
lods
rcrb
pop
adc
xor
jl
ficompl
push
xchg
mov
fyl2xp1
sub
xor
sub
mov
fdivs
dec
cmp
and
rcrb
clc
or
adc
jae
aam
push
ret
sbb
cmp
stc
shlb
adc
or
daa
and
repz
js
cli
and
cltd
jo
jns
adc
inc
ss
mov
test
jl
adc
mov
jbe
adc
xchg
mov
lock
mov
cmpsl
xchg
stos
icebp
xor
cwtl
adc
outsb
push
dec
roll
js
sub
leave
cmp
push
sar
jmp
mov
loop
rcll
je
jge
cmp
fwait
aam
mov
aam
icebp
jb
pop
mov
mov
hlt
xor
aam
fsts
xchg
xchg
adc
adc
fnstenv
push
xor
inc
xor
and
in
mov
xor
clc
mov
mov
xor
or
dec
xchg
testb
mov
mov
or
stc
push
mov
xchg
mov
mov
jo
mov
clc
andb
xor
cwtl
lods
bnd
and
jne
push
and
xor
movsb
and
testb
sbb
mov
xchg
insb
xor
or
insb
xor
or
xchg
mov
xchg
sbb
push
push
mov
push
or
push
lea
xor
mov
testl
cltd
pop
aad
stos
jno
xor
test
push
pop
jno
xor
sbb
jno
xor
adc
leave
ss
jno
xor
add
mov
xorl
push
jae
and
xchg
dec
xor
push
testb
cmp
or
fiaddl
xor
es
cmp
stc
adc
xor
xchg
scas
inc
nop
xchg
lock
test
mov
nop
jg
xor
xor
pop
adc
repnz
mov
push
add
and
inc
dec
iret
cmp
mov
push
pop
inc
mov
in
outsl
adc
push
rclb
aam
cmp
bound
aam
xchg
fldcw
adc
es
rorl
cmp
pop
push
lea
mov
xor
stos
xchg
jbe
in
push
lock
insl
cmp
xchg
inc
loopne
stc
push
rcll
xor
cltd
xor
sub
adc
enter
mov
cmpsw
xlat
stc
jno
and
cwtl
pop
push
mov
lret
lcall
in
push
dec
lods
push
scas
and
arpl
mov
add
dec
pcmpgtw
and
jno
push
mov
mov
test
mov
dec
rolb
call
idiv
pop
cmp
adc
popf
pop
adc
adc
cmp
push
mov
pop
xorb
jae
sub
jp
dec
iret
cs
adc
test
xor
fisubl
out
shlb
icebp
nop
testl
cmc
push
or
nop
dec
call
fdivp
pushf
mov
mov
pop
lock
cwtl
and
adc
mov
adc
cmp
sti
jl
cmp
xchg
adc
icebp
mov
sub
and
js
cmp
mov
mov
popf
js
jne
or
out
enter
pushf
mov
divb
and
ss
jne
mov
js
mov
sarb
jb
adc
xchg
add
inc
stc
sbb
inc
arpl
bound
addl
rorb
ds
hlt
pop
inc
js
add
addr16
std
xor
lret
iret
adc
add
sbb
ja
cmpsb
mov
lock
jg
imulb
std
rcll
cmc
sub
js
adc
jne
or
int3
sbb
out
xorb
ja
ret
cmp
inc
or
add
push
adc
rorl
cmc
rcrb
ret
push
cmp
test
bnd
adcb
scas
lods
hlt
push
add
gs
adc
adc
pop
into
cmpb
push
jno
push
mov
ret
add
mov
xchg
pushf
jmp
or
aad
fsubr
arpl
andb
cmp
pop
daa
adc
push
or
and
xor
jle
adc
nop
add
cwtl
dec
ja
cwtl
sbbb
sbb
clc
dec
ficoms
mov
lea
shlb
jno
roll
icebp
clc
jae
cmp
out
insl
sahf
cmp
or
pushf
xorb
inc
iret
and
cmpsl
pop
add
das
jns
lock
pop
aad
loope
adc
adc
inc
shr
xchg
add
nop
xchg
push
test
xchg
es
sub
jb
lock
insl
pop
xor
mov
jbe
popa
and
outsb
lock
lods
testb
popf
std
jle
mov
sahf
push
jge
jns
lock
sahf
lret
jb
rcrb
inc
pop
sti
fs
fcomip
idivb
mov
js
pop
jmp
or
aas
fimuls
fnstcw
aaa
out
std
out
mov
stos
inc
loop
add
icebp
sahf
jge
shl
lahf
inc
pmaddwd
js
xor
je,pn
je
mov
int
jne
test
cmp
loopne
icebp
jl
mov
jns
addps
nop
cmc
jae
jbe
mov
ficompl
pushf
daa
lock
stc
popa
outsl
push
icebp
sbb
in
cmp
xor
jns
adc
add
iret
push
ret
jl
cmp
or
enter
fisttpll
mov
lock
jns
cld
popa
insl
push
filds
in
push
and
jecxz
movsb
jmp
xlat
stc
fisubs
aam
test
icebp
data16
jno
ja
push
mov
aad
jmp
push
subb
mov
inc
push
jb
xor
daa
push
into
call
add
cwtl
clc
push
testl
mov
imul
jne
cs
xchg
lods
stos
mov
cwtl
mov
out
pushf
add
pop
and
sbb
push
testb
repz
movd
notb
and
mov
dec
lret
fwait
push
cmp
mov
xchg
ss
and
or
sbb
mov
cmp
or
adc
mov
or
mov
pusha
and
repnz
nop
jbe
cmpsb
out
jo
mov
imulb
pop
cmp
jb
and
iret
in
xor
adc
jo
or
add
repz
scas
sarl
pushl
mov
adc
leave
out
and
out
testb
cmp
lock
pop
roll
adc
icebp
fisubl
and
cwtl
js
xchg
mov
or
lods
or
mov
xor
negb
movsl
inc
adc
mov
add
push
repz
lret
sub
mov
jg
jno
out
lcall
je
inc
push
mov
sub
or
add
outsl
jns
movsl
mov
sbb
bound
dec
addr16
jo
mov
xor
add
js
xchg
and
xchg
mov
inc
jnp
aas
sub
int
movsl
or
leave
cmc
and
test
mov
dec
xor
ds
inc
sub
insl
pop
cmp
dec
js
call
repnz
gs
ficoml
shll
xchg
push
jbe
or
imul
or
cmpsb
dec
add
int3
iret
xchg
adc
pusha
xchg
out
sbb
ds
rcl
jo
mov
lret
fildll
aaa
mov
or
jo
jb
and
or
js
andb
dec
pop
jecxz
xor
addb
fisubl
mov
cmovo
xor
arpl
jne
push
cmp
push
lods
adc
mov
mov
int
pop
cltd
loop
sub
sbb
sbb
test
xchg
loope
nop
pop
lods
mov
jg
mov
jae
out
push
pop
jne
xchg
inc
pushf
xchg
dec
or
icebp
push
or
je
mov
into
out
mov
rcrb
push
and
ljmp
sahf
data16
test
adc
mov
xor
add
arpl
or
adc
or
or
push
or
adc
and
push
adc
jns
adc
jge
xor
es
cld
mov
xor
sbb
hlt
lods
cmp
cmpb
xlat
out
push
and
jge
jns
out
ja
add
lock
inc
jae
rcr
push
mov
mov
and
inc
jae
rcr
push
mov
mov
and
inc
jae
rcr
push
mov
mov
and
inc
jae
rcr
push
mov
mov
js
sti
outsl
lret
cmc
dec
sbb
das
mov
out
jl
out
repnz
sbb
test
xchg
mov
mov
jns
ficompl
data16
pop
lcall
nop
pop
push
icebp
or
sbb
mov
and
adc
jno
mov
in
mov
xchg
lret
pop
inc
mov
in
insb
and
xor
pop
xchg
jno
xchg
xchg
mov
popf
or
mov
mov
in
das
xchg
lret
out
fildll
and
jo
mov
out
mov
adc
xlat
loop
cmc
add
dec
inc
stc
adc
js
icebp
xor
dec
lret
adc
mov
sahf
push
xchg
or
insl
pop
and
push
notl
sbb
xchg
mov
pop
jle
stos
and
lahf
sbb
push
shll
cld
and
xlat
repz
jecxz
lock
mul
or
pushf
push
test
mov
or
mov
scas
jmp
notl
enter
xchg
scas
stos
inc
in
sub
inc
sbb
in
iret
adc
in
adc
fildl
jo
push
xor
js
fs
jle
rol
jg
rclb
or
fistpl
push
mov
shr
ss
into
push
ucomiss
mov
idivl
push
jo
pop
movswl
jp
std
add
dec
insb
add
mov
loop
xchg
jns
jbe
jp
push
dec
push
adc
pop
fdivp
and
nop
movsb
insl
sbb
adcb
and
inc
out
lea
ret
and
adc
push
inc
roll
mov
call
sbb
repnz
out
mov
shrb
mov
add
jmp
imul
shlb
insl
mov
mov
lea
or
add
dec
ja
jge
fmul
fdiv
dec
into
test
in
in
pop
inc
push
jle
sbb
arpl
cld
and
jl
neg
jo
out
mov
adc
jb
fs
loop,pt
gs
or
pop
cmc
mov
mov
xchg
data16
jo
jle
inc
lods
add
clc
shl
xor
xor
rcr
iret
xor
icebp
ds
ficoms
adc
xor
inc
adc
cmc
add
sbb
addr16
adc
push
rcrb
sahf
adc
mov
push
in
out
lcall
inc
mov
in
cmp
in
mov
and
sbb
dec
in
lock
push
iret
or
ds
adc
push
cmc
out
jp
and
and
jno
push
add
mov
adc
mov
mov
xchg
pushf
mov
inc
jmp
adc
xor
jp
push
adc
out
push
insl
pop
mov
rorl
push
lret
mov
fildl
push
mov
cmp
push
cs
add
mov
andb
mov
or
inc
cmp
inc
fisubrs
mov
add
stos
add
scas
jnp
push
inc
cs
negb
lahf
xor
jbe
test
lea
ds
popa
jle
cmp
gs
cmpsb
push
or
iret
idivl
ljmp
out
mov
lock
mov
jne
outsl
jb
jl
cltd
outsl
mov
xor
cltd
and
insl
push
mov
call
pop
add
insl
lds
jns
jle
push
push
nop
call
jno
sti
inc
jg
pop
or
push
sub
pop
ljmp
repz
fimuls
jno
cld
add
fidivs
pop
scas
leave
int
push
dec
pop
fcompl
mov
data16
int
mov
jo
jne
icebp
pop
movsb
jno
fldln2
sahf
scas
push
push
aaa
push
pop
or
mov
in
test
dec
jbe
ret
repz
rorb
xchg
and
dec
enter
mov
sti
popf
pusha
sbb
lret
jns
or
in
jns
imul
rol
jp
repnz
sti
mov
and
test
adc
test
or
int
fadds
sub
or
sub
cld
push
inc
dec
add
or
je
dec
inc
std
iret
fistpl
inc
mov
xor
hlt
daa
ss
or
cmp
jge
sub
mov
sbb
dec
iret
mov
lcall
js
repz
jb
xchg
and
or
add
orl
xlat
cwtl
push
pop
dec
jo
sbbl
iret
pop
sub
lret
inc
insl
fdiv
popa
fs
adcb
mov
or
and
and
outsl
jns
mov
pop
aam
xor
loopne
cmc
add
nop
push
iret
sub
jne
push
fists
xlat
xor
les
xchg
shrb
clc
std
cwtl
les
mov
add
push
xchg
ja
imul
push
push
addr16
sbb
mov
push
mov
sbb
bnd
loop
adc
xor
mov
outsl
pop
xchg
add
sbb
inc
and
push
shrb
iret
pop
pop
or
dec
lahf
fsubs
out
xor
insb
fldenv
push
lret
rorb
push
leave
cmp
fdivs
mov
into
jnp
sti
xchg
xor
xchg
sahf
mov
pop
lock
jl
pop
or
sub
xchg
mov
cmp
clc
in
es
mov
mov
out
or
out
idivl
sub
push
jge
or
shlb
aas
ret
mov
imul
in
ret
arpl
mov
pop
xchg
mov
outsl
loop
pop
aaa
aad
adc
aaa
sub
dec
pop
icebp
xchg
les
lcall
jb
lds
jno
lret
jge
mov
lret
adc
ret
adcl
lock
adc
push
push
inc
pushf
pop
icebp
icebp
inc
sub
push
rcll
lahf
call
xor
js
dec
add
push
lock
arpl
stos
and
xchg
daa
popa
xchg
xor
mov
lock
jmp
jb
push
and
xchg
hlt
mov
js
lock
xor
lcall
jmp
jbe
loop
hlt
adcl
xchg
adc
clc
mov
mov
cmc
enter
lret
mov
xor
out
movsb
stc
iret
jbe
ss
pop
push
jmp
mov
or
loop
fidivrs
bound
mov
out
xor
mov
add
insl
push
mov
inc
cmp
jecxz
aam
mov
idivb
adc
out
pop
cmpsb
jne
inc
xchg
sti
ja
or
aas
ret
test
push
ret
imul
push
dec
push
lock
sub
pop
int
xor
jo
movsb
outsl
cmp
add
mov
repnz
adc
movsl
mov
push
pop
or
jno
clc
jo
sub
push
out
das
sbb
fdivr
push
sub
out
iret
les
xchg
aaa
clc
xor
push
sub
clc
or
sbb
xchg
push
adc
jb
mov
leave
and
cmp
dec
nop
pop
test
sti
roll
xchg
lret
in
iret
and
dec
sbb
popa
xor
add
jp
jge
fdivrl
testb
mov
sub
jns
mov
scas
sbb
jae
jns
cld
shl
lock
rcr
jge
pop
sarl
add
std
stc
jns
cwtl
adc
adc
and
adc
sbb
cmc
pushf
adc
push
xchg
cmp
sbb
jp
mov
divl
mov
repnz
scas
out
jbe
mov
fstps
jnp
and
xor
js
xor
pop
sbb
loop
adc
pop
adc
dec
xchg
and
in
jmp
jae
aaa
loope
add
inc
xor
clc
mov
shlb
mov
nop
icebp
inc
lea
ds
push
ret
pop
pop
test
icebp
cltd
push
movsl
push
int3
xchg
sarl
push
xchg
mov
jp
fldt
ja
mov
sbb
pop
push
shlb
clc
pushf
jge
pop
fucom
sar
jo
jecxz
aam
add
stc
nop
jae
stos
xorb
mov
adc
fisubrs
and
aaa
fs
jb
jp
adc
ja
mov
pop
insl
in
push
or
lock
sbb
in
cwtl
lcall
pop
icebp
pop
jl
ds
fisttpll
jp
js
ds
jno
js
push
mov
jo
sub
into
fadds
nopl
aad
cwtl
lahf
lock
push
pop
xlat
notb
jp
xchg
pop
lea
xor
jnp
into
pop
jnp
push
and
repz
or
cmp
adc
mov
lds
mov
lea
adc
fidivrl
sbb
cli
sub
pop
adc
push
jne
mov
repnz
jnp
test
mov
inc
jle
mov
add
pop
jle
mov
adc
into
clc
cmp
adc
mov
cli
icebp
je
int
cmpb
icebp
and
jl
push
sub
adc
fstpl
lods
clc
fisttpl
icebp
aad
ficoms
das
inc
test
jno
fcmovu
jnp
mul
pop
push
adc
jne
test
int
daa
sti
testl
jb
add
lock
arpl
jl
lock
repnz
nop
jp
inc
mov
ljmp
sbb
pushf
xchg
push
insl
int3
add
cli
cmp
cmc
cmp
test
addl
or
pop
mov
enter
jp
mov
mov
lock
adc
push
add
sbb
cmp
nop
jl
pop
push
nop
mov
pop
mov
push
jo
jbe
xor
sub
xor
pop
push
pop
xor
xchg
out
push
adc
loopne
and
jle
faddl
pushl
js
sti
decb
push
fwait
loope
fs
popa
mov
adcb
xchg
jp
aas
dec
mov
sbb
jb
in
mov
jle
push
jle
orl
lock
leave
xor
push
sbb
lods
pop
push
jl
cld
std
pop
pop
call
jbe
sbbl
cmp
add
and
pushf
xchg
xchg
mov
testb
cmp
repnz
test
movsb
dec
mov
icebp
jo
push
jnp
lock
divb
in
jne
push
and
lock
inc
data16
std
xor
and
repz
add
adc
gs
mov
icebp
cli
adc
lea
aam
sbb
js
mov
mov
jo
lret
jb
je
adc
shll
iret
pop
jnp
jb
add
mov
mov
inc
clc
popf
sahf
pop
movsl
sub
je
aam
test
jg
icebp
cli
and
adc
aam
sub
data16
or
and
xor
cmp
je
pop
testb
mov
adc
sbbl
testb
and
push
xchg
mov
sbb
sub
mull
stc
sbb
push
hlt
jbe
xor
rolb
jne
mov
out
push
mov
jne
in
dec
inc
mov
test
and
popa
adc
jp
stc
aam
lahf
out
mov
pop
imul
test
and
idiv
cli
call
sbb
jl
enter
sbb
adc
lahf
cmp
out
lock
into
out
jno
xor
mov
je
mov
icebp
xchg
decl
stc
xchg
das
jno
cs
out
loopne
mov
pop
jg
mov
fcomps
rclb
leave
jecxz
cmp
pop
aas
adc
neg
roll
jg
cld
mov
mov
sarl
fimuls
cmp
jno
push
icebp
jl
jge
mov
mov
push
push
hlt
clc
adc
adc
xlat
xor
inc
sbb
add
icebp
insl
fbstp
js
pop
and
xor
je
clc
data16
xor
cwtl
stos
xor
aam
ja
pushf
mov
jb
jb
orl
mov
mov
divb
ss
mov
xchg
jo
js
mov
jbe
lock
jns
cli
js
or
mov
jo
pop
int
dec
and
jb
repz
push
jg
jne
inc
xchg
lret
mov
push
pop
jnp
or
hlt
xchg
sbb
sub
mov
dec
testl
testl
and
mov
or
jl
mov
or
test
addl
je
lock
cs
adc
lret
daa
jl
add
sarb
stc
mov
fiaddl
int3
test
cwtl
mov
xchg
imul
add
sbb
mov
scas
jns
ror
jo
icebp
pop
xor
mov
je
adc
sub
jbe
dec
jae
rorb
sub
inc
clc
sub
fnstenv
jns
pop
push
or
scas
mov
xor
pop
fwait
xor
sub
push
sbb
mov
xor
out
xor
je
pop
add
repnz
decl
sbb
fpatan
jno
lods
movsb
push
hlt
and
pusha
pop
jne
push
jns
subb
pusha
jg
jo
sar
rcll
adc
mov
data16
add
adc
jno
adc
or
push
push
hlt
nop
icebp
push
push
add
notb
cmc
mov
and
clc
adc
inc
adc
adc
loope
xchg
ja
iret
mov
aad
mov
outsl
push
xor
das
push
insb
out
outsb
into
outsb
scas
outsb
mov
dec
dec
push
int
cs
mov
cwtl
or
adc
and
icebp
js
or
mov
rclb
push
adc
je
xor
jmp
add
and
dec
cmp
lret
and
or
sarb
add
jo
js
inc
or
jb
roll
fdivl
pop
mov
jb
popl
jl
add
or
xchg
js
add
lea
icebp
jp
and
sbb
popa
ret
jns
inc
pop
add
test
jne
jle
adc
jp
xchg
adc
in
js
mov
test
pop
syscall
add
add
or
add
stc
xchg
in
ss
or
jno
push
inc
test
adc
xchg
cmp
xor
cld
jl
cwtl
shl
sbb
jl
mov
sbb
cwtl
jno
ds
ffreep
jb
test
xchg
stos
bnd
iret
mov
mov
jp
mov
add
outsl
stos
stc
lock
test
repz
mov
notb
mov
test
loopne
test
and
stc
adc
mov
fstpl
add
mul
shl
cmp
adcl
jno
mov
shl
sahf
addl
call
popa
imul
es
lock
test
rclb
ljmp
jmp
pop
sub
push
push
aaa
mov
xchg
push
clc
xchg
adc
mov
imul
hlt
add
sbb
aam
addb
and
insl
xor
pop
mov
fbstp
pop
mov
imul
stos
mov
fs
lahf
std
sti
jb
enter
inc
mov
dec
ja
sbb
jnp
cli
and
jbe
lcall
inc
repz
xor
fidivs
xor
xor
imul
fst
insl
dec
pop
mov
sub
sbb
pop
and
inc
iret
jp
xor
icebp
stc
fistl
loopne
dec
and
mov
ja
and
lock
adc
jg
cwtl
adc
xchg
cmp
push
ret
mov
xor
movl
mov
div
sbb
cwtl
adc
lea
adc
mov
push
dec
icebp
xor
mov
mov
or
mov
mov
lock
and
mov
add
mov
lret
fdivl
ja
inc
addr16
lock
xor
into
mov
inc
sbb
and
fimuls
fisttpll
iret
xchg
inc
je
cmc
in
mov
mov
cmp
xor
mov
sbbl
sarl
pop
jo
sahf
roll
bound
repz
mov
inc
dec
and
icebp
aad
mov
cmpsl
mov
jo
ds
loop
mov
insl
outsb
dec
mov
pop
mov
bnd
mov
push
or
jg
ds
push
inc
mov
mov
mov
aam
sahf
adc
sbb
imul
dec
mov
aas
nop
xchg
xchg
loopne
dec
xor
lock
add
or
jb
pusha
psubsb
aam
dec
mov
mov
jns
and
sub
jge
mov
inc
daa
popf
and
out
xor
not
es
inc
pop
push
add
cwtl
or
or
pushf
div
sbb
cmp
out
xchg
icebp
pop
pop
jo
arpl
out
push
xchg
test
xchg
jl
loopne
loop
out
add
add
enter
out
mov
iret
and
fs
and
movsl
cwtl
sub
mov
mov
loope
je
xor
push
pusha
mov
lods
aam
mov
stos
and
mov
daa
and
repz
or
push
add
xor
xor
cmp
fadds
xor
mov
push
pop
jl
add
popf
jb
lock
or
add
icebp
adc
mov
ret
sbb
cli
mov
dec
adc
cmc
lcall
sahf
clc
rorl
mov
push
jo
filds
std
or
divb
and
inc
nop
in
sbb
fcomps
cmp
lcall
jle
testb
js
test
int
punpckhwd
push
xchg
ljmp
fnstcw
mov
fldcw
out
mov
shrl
jg
insl
aad
or
adc
sti
xchg
jno
xchg
or
push
jle
mov
or
add
sbb
test
sub
ljmp
sahf
rclb
mov
cli
inc
push
xor
stc
mov
mov
lods
inc
inc
add
cld
jecxz
inc
xchg
clc
push
mov
int3
pusha
jl
rclb
jmp
add
inc
xor
jno
je
xchg
xorl
loope
pop
outsl
out
sbb
adc
cmp
push
push
divl
mov
lahf
jae
mov
test
lock
and
aas
jbe
xor
and
adc
jnp
testl
inc
cmp
rsm
loop
ja
pop
loopne
lock
sahf
adc
adc
iretw
xor
mov
xor
lods
imul
test
dec
loop
daa
xchg
cltd
mov
stos
ljmp
or
pop
clc
xor
add
mov
adc
sbb
mov
sub
push
test
icebp
push
push
out
push
movsb
cmp
sbb
stos
add
das
daa
sub
insl
inc
push
js
mov
or
add
sbb
inc
shlb
icebp
adc
dec
test
inc
push
inc
les
lock
int
fiadds
or
push
cmpsb
mov
call
int3
or
adc
inc
adc
mov
les
push
dec
adc
pop
scas
add
xchg
xor
or
jle
lods
out
sub
sahf
dec
ds
mov
xchg
orb
add
push
js
aad
in
dec
push
adc
adc
dec
loopne
xor
mov
cmp
inc
jb
fwait
mov
mov
adc
iret
or
lds
js
dec
jnp
imull
fiaddl
mov
call
ja
pop
fs
arpl
fisttps
fnstsw
adc
test
out
mov
and
repnz
pop
cmpl
xchg
add
test
cli
pop
pop
push
jno
xchg
stc
insl
xchg
test
push
ret
jle
inc
aas
adc
movsb
lods
or
out
enter
movsb
bound
ja
stc
std
popl
fiaddl
cmc
std
subl
inc
sub
popa
mov
ds
push
adc
stc
mov
push
icebp
ret
outsl
dec
stos
mov
ljmp
in
add
dec
roll
icebp
adc
mov
xor
popa
shufps
or
dec
sbb
dec
popl
pop
shr
add
inc
push
adc
fildl
icebp
out
outsl
pop
push
jbe
insl
cltd
xchg
andb
fwait
push
arpl
jno
mov
sub
xor
movsl
std
or
sbbb
stos
and
or
or
mov
mov
arpl
shll
adc
lds
loop
out
mov
lods
nop
push
jo
xchg
sub
cmc
in
xor
xor
jmp
cwtl
into
xchg
sbb
adc
sahf
jbe
sahf
push
out
idiv
and
das
sahf
adc
jg
jae
cmp
shl
test
wrmsr
cmc
call
xchg
scas
pop
popf
add
stos
push
pop
test
cltd
jb
cmp
mov
in
push
push
dec
icebp
sub
outsl
jecxz
call
xchg
jp
xchg
int3
dec
xchg
shr
out
xorb
sub
or
sahf
adc
fs
popa
outsb
pop
mov
and
or
dec
jno
icebp
sbb
or
ja
and
outsl
cmp
push
mov
xchg
stc
sbb
mov
adc
jo
aam
enter
sahf
mov
sbb
mov
cmpb
insl
stc
cmc
push
add
roll
movsb
lds
xchg
scas
les
cmp
call
jg
int
fsubrp
and
mov
fimull
push
icebp
mov
pop
xchg
lock
stc
popa
mov
jbe
divl
pop
xlat
add
xchg
test
cmp
push
test
add
push
popa
add
cmp
pusha
adc
adc
gs
or
lret
mov
adc
lock
enter
mov
inc
or
mov
ss
inc
fisttpl
sti
xchg
and
stos
cmp
adc
jns
int
jo
sbb
aad
push
imul
je
lock
pushf
cmp
clc
xor
out
jg
pop
jb
adc
sbb
jns
mov
gs
jno
out
lea
dec
adc
xor
iret
add
imul
xchg
cmp
cwtl
lock
std
rsqrtps
xchg
fldl
xchg
and
lds
cmp
xor
jmp
mov
cli
jl
xor
mov
icebp
daa
iret
roll
outsb
xlat
imul
push
push
fnstsw
jb
test
and
ljmp
nop
or
adc
shl
push
mov
add
adc
xchg
jmp
popf
or
loope,pn
sbb
dec
out
push
fdivrl
les
repnz
cmp
loop
repnz
sbb
dec
inc
fldz
in
dec
dec
stos
sahf
sbb
inc
enter
sub
sub
fcomps
add
jns
ja
push
lods
aaa
cmp
push
push
sub
cli
enter
xchg
mov
pop
adc
jne
and
sti
add
inc
pusha
jns
lock
xor
dec
push
lahf
xor
out
pop
cmp
push
mov
js
cmp
push
xor
inc
ficomps
dec
mov
and
gs
insl
dec
enter
sahf
push
in
mov
mov
push
sbb
add
adcl
fists
mov
add
push
arpl
subb
inc
mov
call
push
or
icebp
inc
outsb
icebp
je
push
mov
cmp
sbbl
push
pusha
dec
idivl
mov
sub
adc
lock
lds
popa
sub
dec
bound
clc
lock
repz
cli
jo
jb
sahf
dec
push
jnp
sub
imul
cmp
iret
xor
jp
and
shlb
jbe
sti
mov
movsb
ss
or
shrl
daa
repnz
out
hlt
fdivrp
inc
pop
mov
push
stos
adc
mov
or
jnp
jmp
add
adc
ret
enter
cld
sbb
xchg
rclb
inc
clc
mov
jmp
sbb
mov
inc
lret
mov
mov
push
clc
jle
sub
bound
mov
inc
clc
je
or
push
or
inc
or
mov
popa
jae
xor
fbstp
in
add
cltd
adc
sahf
outsb
or
aaa
jle
pop
or
loopne
pop
xchg
movsb
inc
sub
mov
xor
push
and
adc
mov
iret
and
add
push
or
daa
in
or
or
idivb
out
push
jecxz
xor
pop
push
xor
mov
or
jne
lahf
adc
add
les
pop
add
push
adc
mov
sti
dec
sahf
fcmovbe
icebp
icebp
aas
outsl
jb
mov
inc
xor
jb
mov
mov
jbe
addr16
push
or
adc
push
push
mov
pop
lds
add
fstl
out
mov
adc
pusha
bound
jecxz
mov
adc
xor
fisttpll
inc
inc
jo
xchg
add
stos
in
in
mov
nop
andb
sti
setno
jg
repz
add
pusha
and
or
cli
lahf
mov
jmp
sub
jle
push
jo
addb
subl
mov
push
not
sub
nop
pop
popa
dec
out
out
sbb
or
push
in
jle
out
mov
out
pop
xor
or
fistpll
mov
sbb
sbbb
pop
adc
mov
dec
xchg
imul
sbb
mov
dec
js
xor
stos
xor
inc
jge
mov
enter
call
rcrl
sub
test
push
jae
xchg
add
mov
cmp
cmc
push
sbb
cli
xchg
insl
dec
lcall
shlb
mov
test
roll
jle
mov
cld
inc
inc
or
dec
xor
fidivs
fs
nop
jg
xchg
push
push
push
add
xor
push
ja
sahf
stos
mov
pushf
daa
call
stos
xorl
les
and
roll
sar
shll
mov
aad
mov
mov
dec
and
xchg
sbb
xchg
mov
and
icebp
jecxz
xlat
or
fcmovnbe
mov
sub
enter
sub
add
mov
sbbb
insl
sub
js
mov
inc
es
sub
ret
add
push
pop
lcall
jmp
mov
xchg
sti
fsin
add
test
inc
in
es
adc
adc
adc
or
and
rolb
fs
adc
rcrl
repnz
inc
lret
and
inc
sub
dec
aas
scas
add
cmpsb
data16
addb
push
inc
add
cmpsl
jae
cmp
jnp
dec
xchg
fs
dec
inc
and
inc
sar
cmp
inc
mov
addr16
and
push
jo
frstor
push
sbb
mov
or
repz
xchg
mov
loopne
out
std
mov
jae
adc
insl
sbb
mov
pop
daa
sbb
dec
jae
les
flds
sbb
add
dec
bound
xchg
mov
repz
lock
sbb
popa
popf
sbb
rcll
jecxz
jle
sbb
rcr
ret
das
pop
xchg
jl
and
and
popf
rclb
inc
push
adc
mov
push
fs
lea
dec
out
mov
mov
fstpt
xchg
sti
mov
jne
bound
negb
clc
push
or
je
in
or
mov
pop
rclb
lds
mov
mov
mov
flds
xchg
xor
scas
push
sbb
jno
lods
mov
orl
ja
xor
xchg
pop
movsb
xor
das
or
pop
test
cmp
repnz
adc
xchg
mov
orb
in
push
pop
hlt
mov
pop
cmp
lea
js
outsb
rol
mov
mov
mov
js
shrb
jo
xor
mov
pop
icebp
jns,pn
stos
mull
stos
icebp
add
das
pop
add
xchg
mov
sbb
pop
scas
pop
push
and
jbe
inc
dec
repz
data16
ror
pop
mov
aam
jp
hlt
unpckhps
inc
outsb
adc
inc
xor
mov
bsf
fdiv
movsb
cmp
stc
aam
ja
cmp
adc
cmp
in
cmc
or
cltd
les
ret
cmovns
xchg
jp
sub
lock
xchg
icebp
inc
inc
dec
in
push
inc
int
daa
xlat
push
pop
sbb
scas
pop
pop
jb
or
mov
je
js
xchg
jl
mov
jg
stc
sbb
in
sahf
lock
cmp
std
adc
sbb
fisubs
jne
ss
lds
pop
pop
test
dec
mov
cmc
push
cmp
add
loop
imul
and
jmp
fs
adc
lahf
repnz
es
cld
cli
lret
adc
mov
imul
sub
aam
or
and
mov
lods
je
pop
jle
xchg
div
mov
test
stc
enter
jge
dec
les
or
mov
adc
jne
jg
push
dec
dec
sbb
fwait
sub
dec
cltd
and
cmpsb
and
sub
push
insb
mov
ja
cmp
and
in
les
mov
loopne
mov
insl
sbb
push
out
enter
inc
cltd
push
mov
jl
or
jl
paddb
mov
mov
xchg
enter
mov
jno
test
addr16
fwait
jae
cmpsb
lret
push
or
sbb
pop
xor
arpl
dec
jae
cltd
ret
sub
push
fcmovb
std
pop
or
adc
mov
xchg
dec
stc
mov
push
sti
and
loopne
inc
adc
dec
sysenter
out
shlb
lahf
add
inc
inc
mov
jnp
in
hlt
jmp
xchg
inc
add
cmp
movsl
hlt
ljmp
xchg
push
sub
sbbl
mov
xchg
jbe
hlt
xchg
mov
mov
cld
cmp
subb
lahf
in
push
add
out
pop
ficoms
fisttpl
insb
xor
hlt
sbb
call
and
les
stos
or
repnz
scas
scas
js
data16
push
ret
or
jnp
xchg
lcall
stos
lcall
or
rcll
sahf
test
mov
pop
dec
pop
daa
mov
jmp
adc
jecxz
insb
cmp
pushf
lock
js
call
lret
aaa
mov
jle
psrld
in
pusha
leave
or
fwait
cmpsb
mov
test
pop
lock
ret
pop
inc
jne
cmp
jle
jnp
mov
mov
add
push
jns
inc
jge
dec
xchg
in
add
xchg
faddp
cwtl
lea
cli
sbb
adc
mov
lcall
push
push
mov
aas
leave
jl
pop
mov
test
faddl
xchg
movsl
mov
insl
mov
cmc
mull
imul
clc
mov
sub
pop
and
push
outsb
jle
jnp
lahf
lret
mov
sbb
out
lds
clc
fidivl
dec
insb
push
in
lods
idivb
pop
sub
repnz
test
in
push
bound
sub
fnsave
imul
in
movsb
adc
aad
dec
and
push
mov
ret
out
mov
add
xchg
push
repz
lret
dec
inc
dec
hlt
fnstenv
jmp
jnp
and
xchg
mov
in
lds
jb
xchg
ret
addb
cld
dec
decb
sar
in
jl
jne
mov
orb
js
outsl
lret
push
xor
pop
movsb
movsl
jne
sub
jno
incb
mov
arpl
cmp
fldt
push
clc
push
subl
adc
cmp
lock
or
pusha
xor
shl
add
add
jne
mov
push
inc
adc
and
inc
scas
xchg
cmp
add
cwtl
icebp
je
cli
cmpsb
bound
les
mov
pop
or
rcrl
aam
sub
inc
fisttpll
and
lea
pop
iret
xor
adc
jne
fs
test
leave
test
rorl
testb
xchg
jge
jnp
xor
sub
dec
sub
sub
inc
fisttps
adc
addl
lock
pop
popl
test
sub
jns
inc
mov
aad
cmpsl
setne
movsb
mov
sahf
push
lcall
sahf
into
mov
je
push
jge
xor
in
jl
inc
es
mov
lock
mov
rol
adc
dec
mov
add
cmp
aad
fucomi
mov
out
add
out
and
inc
jbe
jle
sub
adc
popf
bound
xchg
or
js
cmpsb
dec
sbb
cmp
test
sti
fmulp
pop
jo
lock
jno
add
jecxz
andb
cmpsb
pop
stc
out
jp
les
jb
mov
mov
pop
mov
xor
inc
push
dec
fimull
test
loope
mov
push
xchg
and
pfrsqrt
sbb
jb
and
pop
xchg
push
orl
pop
mov
sbb
add
pop
jb
xchg
orb
mov
lock
cmc
xchg
jbe
push
repz
das
scas
jae
jns
inc
or
mov
pop
dec
add
jae
dec
mov
hlt
loop
negl
sub
pop
bound
stc
lret
add
movsb
or
pop
mov
xor
lea
xchg
mov
cmp
xor
mov
aaa
and
add
lret
outsb
mov
lea
jnp
shlb
scas
aad
test
adc
adc
or
jmp
jne
iret
hlt
jae
ss
repz
cmc
cli
mov
add
inc
stc
cmpb
sarb
adc
and
rolb
dec
add
push
or
jo
xor
lcall
in
pop
call
xor
jo
icebp
jb
xchg
js
inc
fwait
pop
jg
popf
cmp
pop
add
fisttpll
dec
and
mov
clc
arpl
sub
jae
pop
je
enter
push
divl
lods
fs
sub
add
mov
jmp
jle
loopne
sub
and
lret
inc
pop
mov
cld
int3
jae
sbb
mov
push
jle
lock
mov
push
xor
sub
inc
mov
call
jbe
icebp
pusha
jg
lock
insl
push
sub
xchg
js
sahf
stc
xchg
pop
adc
out
jne
repz
out
js
cmc
pop
adc
cmpsl
movsb
xlat
jo
in
fucomp
sub
push
sbb
stos
repz
jae
test
pop
lcall
mov
inc
dec
cmp
sub
imul
or
push
mov
pop
ret
mov
sub
and
xchg
xchg
xchg
mov
cmp
push
stos
ret
test
sbb
gs
adcl
sbb
jae
mov
movsl
sbb
xchg
adcl
inc
lret
ljmp
and
clc
sbb
cmp
sbb
push
jecxz
dec
cmp
bound
in
out
insb
jp
js
out
jmp
cli
sbb
test
insl
xor
jl
outsb
sub
aam
and
cmpsl
icebp
mov
jg
sub
sbb
movl
push
lea
mov
pop
daa
dec
inc
dec
mov
add
mov
fists
push
outsb
jg
and
or
xchg
rcrb
lock
cmpsl
xor
mov
jae
mov
insl
aad
incl
lret
cmp
mov
orl
repnz
shlb
or
xor
cltd
je
mov
xlat
cmp
adc
test
xor
inc
call
jb
es
jbe
je
inc
repz
lods
sbb
inc
jne
hlt
adcb
mov
xchg
sbb
pop
bound
std
add
clc
mov
xchg
pop
cmpsb
lret
mov
adc
cmp
add
xor
adc
cld
push
mov
inc
push
jo
adc
dec
je
fs
sbb
jne
into
cld
sbb
inc
orl
mov
xchg
xor
mov
jo
mov
repnz
mov
jl
xor
pop
push
pusha
lahf
xchg
push
and
call
sbb
push
and
mov
xlat
rcrl
mov
mov
pop
ljmp
jo,pt
jp
js
jge
jp
loopne
jp
push
adc
faddp
add
sbb
lock
jns
mov
sub
mov
xor
inc
test
mov
jo
ror
push
out
mov
ret
dec
arpl
push
adc
imul
in
dec
sbb
pop
xchg
and
or
xor
sbb
negl
add
int3
mov
fs
sub
inc
int3
out
cmp
push
mov
imul
push
xor
stc
fimuls
mov
jno
jno
cmpsb
push
cmpl
and
and
inc
icebp
push
mov
adc
dec
je
xor
jb
cwtl
add
leave
xchg
or
sub
je
fistpl
je
test
divl
fistps
or
pop
pusha
push
loopne
mov
scas
sbb
or
and
stos
in
xor
andb
and
add
insl
cmpl
nop
insl
push
in
cmp
test
iret
inc
push
sahf
in
adc
mov
and
cmpsl
jns
out
sbb
cmpsl
jl
push
or
aaa
bound
mov
inc
add
dec
mov
push
fwait
xor
and
pop
adc
cmpsl
sbb
xchg
adc
aad
cmpsl
add
push
adc
cmp
cmp
mov
sub
mov
mov
fidivs
bound
mov
add
dec
pusha
jns
pop
jbe
lret
clc
icebp
xchg
lcall
rcrl
pop
jns
or
push
mov
mov
fbstp
cli
test
test
jbe
daa
shrl
out
sbb
pop
jl
pop
pop
cmp
loopne
lcall
cmpsb
std
shll
or
cmpsl
popl
pop
aad
mov
jb
out
add
icebp
mov
mov
sarl
mov
pop
mov
pusha
mov
jbe
loop
jae
sub
lahf
or
into
add
shll
or
xlat
cmp
scas
dec
aam
sub
out
jp
ljmp
mov
lcall
negl
fistpll
aaa
test
insl
pop
inc
enter
inc
or
and
clc
movsl
sub
js
push
mov
push
mov
pop
ds
pop
adc
xchg
stos
popa
mov
inc
inc
testb
lock
sbb
inc
sbb
idiv
imul
test
shl
lods
imul
adc
mov
hlt
cmp
inc
jne
pop
sar
and
inc
js
popa
pop
jno
out
je
sub
cmp
push
out
scas
into
std
push
push
leave
lahf
xor
enter
jmp
into
push
std
dec
std
adc
fmulp
int
enter
sub
jle
jno
sub
insl
jge
ret
xor
adc
push
mov
or
xor
fmul
jb
inc
sub
mov
add
out
jno
nop
jno
jnp
push
mov
enter
xchg
inc
iret
leave
or
out
cmc
xchg
es
out
daa
mov
scas
out
enter
mov
imul
je
and
cmp
mov
dec
pop
movsb
lahf
cli
fbld
cmp
lret
test
out
push
add
lahf
xchg
mov
inc
dec
mov
xchg
dec
and
sbb
dec
cmp
jp
push
popa
and
mov
leave
dec
xchg
or
punpcklwd
or
icebp
push
dec
jle
fidivl
jno
mov
jno
mov
push
mov
jge
adc
mov
dec
sbb
xchg
movsbl
add
and
das
ret
jne
mov
jne
jno
ret
mov
jo
iret
or
mov
lock
icebp
lret
ljmp
mov
jb
mov
inc
sub
in
imulb
loop
dec
jbe
ret
push
stos
add
jb
loop
fdivl
lods
aam
or
divl
xor
adc
addr16
mov
dec
int
cwtl
bound
xor
add
mov
out
jmp
insl
mov
bound
sub
sbb
ss
in
sub
in
jecxz
or
icebp
cmpsb
jb
jne
add
scas
push
shll
adc
dec
shrb
pop
jmp
xor
xchg
mov
icebp
mov
xchg
clc
adc
push
jb
push
loopne
fnstsw
into
cs
ret
sbb
out
test
mov
add
add
push
mov
inc
testb
mov
in
inc
dec
and
cmp
and
jo
mov
xor
fidivs
arpl
inc
push
ljmp
mov
cmp
and
std
cmp
mov
adc
addb
lock
xor
jp
mov
sahf
sbb
jb
pop
ja
mov
mov
cmp
xorl
add
adc
inc
icebp
aam
and
andl
sbb
push
sub
jecxz
pushf
fidivrs
add
nop
nop
add
sahf
outsb
and
insl
push
int
test
lret
loope
sbbl
push
loop
pusha
in
mov
cmp
ret
out
enter
cmp
add
mov
push
movsl
cmpl
stc
xorb
xchg
mov
divl
inc
repnz
pop
in
dec
sbb
dec
xor
lret
icebp
mov
and
sub
lret
adc
xlat
sub
cmp
jo
jne
pop
adc
push
cltd
mov
mov
shld
mov
mov
push
inc
mov
dec
push
cmp
daa
push
inc
out
lret
push
mov
dec
xchg
xchg
mov
mov
incb
shufps
push
inc
sbbb
rcrb
loope
cmp
in
lea
mov
mov
mov
jns
or
cmp
xchg
pop
xor
sub
inc
pushf
adc
addr16
hlt
fstps
ss
adc
cwtl
daa
jge
gs
idivb
dec
ret
push
or
js
scas
jnp
pusha
jnp
pop
nop
rol
notl
inc
jne
popa
sbb
mov
test
mov
ficoms
fwait
test
stc
fnstcw
icebp
xchg
loopne
pushf
fimull
mov
mov
jle
xchg
push
xchg
aad
or
divl
xor
adc
jae
in
icebp
jl
insl
aas
xchg
add
lret
sbb
and
adc
xor
inc
insl
push
cmp
adc
roll
in
xchg
frstor
shll
lret
and
stos
aad
mov
sarb
std
pop
fisubrl
cmp
dec
cmp
loope
cmp
xor
xchg
mov
sti
ffree
clc
mov
aas
jmp
rcrl
mov
fisubrs
fs
shl
mov
sbb
popa
fisttpl
mov
js
push
cmp
aam
pop
fdivs
lock
mov
xchg
xchg
addb
mov
leave
cltd
imul
shr
sub
aas
int3
dec
adc
pushf
dec
jne
cmp
mov
int
or
in
jle
adc
in
cmp
imul
and
or
ss
jb
ljmp
push
test
test
loopne
into
or
xchg
ficoms
les
mov
cmp
lock
repz
mov
js
mov
inc
and
inc
jg
pop
iret
xchg
ret
push
jo
pop
xchg
sub
inc
jb
xor
mov
push
inc
int
into
jb
in
and
subl
jg
mov
pusha
inc
jp
push
or
imul
bound
mov
movsb
loop
iret
mov
xor
dec
repz
mov
xchg
orb
inc
cmp
idivl
inc
ja
hlt
mov
push
push
xchg
stc
inc
ja
jle
xchg
adc
push
adc
xchg
enter
adc
adc
mov
es
mov
ja
dec
pop
adc
mov
adc
jae
pop
push
cli
in
mov
jne
test
icebp
sub
icebp
mov
pop
inc
test
add
rcrl
test
sahf
clc
aam
icebp
push
inc
sbb
mov
pop
cmp
xchg
jp
pop
dec
dec
mov
mov
data16
xorps
sub
and
insb
inc
cwtl
add
push
icebp
cli
loopne
mov
sbb
mov
dec
int
out
mov
addr16
push
js
imull
jo
data16
dec
adcl
insl
sub
fisubrl
add
sub
aas
adc
sub
push
jp
adc
loop
fisubs
mov
gs
andb
add
aad
stc
inc
lods
xor
lds
push
jg
mov
jmp
push
outsl
je
xchg
int
lock
xor
pop
inc
cwtl
cmp
xchg
rclb
push
ficoml
mov
icebp
jno
or
or
add
and
icebp
push
jmp
push
fdivrs
outsl
adc
orl
negl
clc
mov
adc
cmp
addl
std
stos
icebp
int
out
aam
push
in
pop
jb
es
and
xor
pop
mov
out
gs
jne
xchg
sbb
push
repz
mov
lahf
in
add
pop
fdivrs
movsl
jnp
add
jmp
cltd
xchg
jnp
inc
into
or
mov
sbbb
lds
loope
fists
mov
sub
lds
mov
hlt
or
stc
into
xchg
cmp
aas
pop
aam
cwtl
or
pushf
add
cmp
aas
lcall
popf
mov
imul
cmp
jns
pop
and
nop
cld
dec
js
dec
ds
out
push
int3
repnz
cmp
adc
aam
hlt
xor
jecxz
pop
lea
insl
fcomps
jmp
sub
mov
mov
clc
dec
gs
cmp
sarb
fldt
mov
sub
movsl
fst
nop
xchg
jnp
pop
int
test
xor
jo
push
xchg
inc
sub
sahf
es
xchg
add
xchg
movsb
xchg
shlb
andl
xor
xchg
sub
std
scas
pop
out
add
and
pop
cmpsl
cmp
mov
dec
dec
int
add
inc
push
inc
and
sbb
insb
cmp
dec
stos
mov
push
lret
ja
imul
mov
fidivs
test
popa
mov
sub
shl
mov
pop
push
add
or
shrb
test
lods
cmp
mov
pop
mov
movsl
adc
xor
sub
jb
fcmovu
lret
not
mov
sbb
jnp
icebp
scas
jns
and
lret
ja,pn
iret
pop
adc
ret
jl
jge
daa
xchg
es
movsb
jp
stos
insb
clc
mov
int3
mov
mov
pop
dec
repnz
cmp
push
decb
or
and
ret
xor
out
adc
pslld
loopne
jmp
fsts
mov
cmpsb
pushf
jo
push
mov
adc
cmpl
jo
jne
pop
mov
aam
push
out
xor
lods
cmpsl
pop
fsts
mov
sbb
or
xor
xchg
add
cmp
test
push
ja
jecxz
fdivp
lcall
xchg
mov
cmp
testb
or
cwtl
xchg
add
jb
xchg
inc
jbe
icebp
enter
ljmp
in
pop
bound
or
xor
leave
pop
popf
dec
idiv
or
fistpl
in
je
push
adc
xchg
and
mov
aaa
inc
dec
add
in
pop
movsb
into
mov
add
aas
lea
add
xor
rolb
lahf
scas
xor
add
jmp
jae
mov
mov
sti
jne
or
jmp
orb
mov
adc
push
flds
adc
or
cmp
add
pop
mov
pop
inc
cmpsb
mov
mov
ds
push
sti
fwait
xchg
jp
aaa
xor
jo
jl
or
mov
inc
in
sbb
sbb
push
adc
mov
in
push
xor
pop
orb
lea
std
setbe
loopne
dec
imul
out
push
and
or
fisttps
clc
jae
and
rclb
stos
xor
clc
cmp
push
adc
out
dec
dec
fildl
sub
stc
or
xchg
fwait
jae
push
push
sub
jnp
cmpsb
mov
loopne
mov
push
and
xor
inc
mov
xorl
mov
fwait
adc
test
fdiv
xor
mov
dec
push
notl
adc
cmp
push
mov
jo
aaa
fsubs
add
and
or
xor
or
push
mov
xchg
sub
pop
mov
and
sbb
sbbb
enter
cmp
mov
hlt
loop
jle
insl
jae
mov
enter
aam
push
and
cltd
or
lcall
or
icebp
mov
scas
mov
adc
mov
adc
es
lret
lahf
cwtl
jge
into
push
push
jle
adc
or
ja
jecxz
mov
scas
hlt
jae
roll
cmp
lods
das
notb
outsl
cwtl
sbb
cmc
loopne
inc
push
push
gs
or
or
mov
push
gs
rep
mov
addl
sub
add
xchg
xor
push
inc
adc
sbbl
mov
fsubl
add
push
sti
jae
scas
lcall
sub
pop
mov
and
das
add
jge
sbb
jne
jne
pop
or
movsb
pop
ss
and
jae
dec
or
fisubrs
pop
xchg
jne
xor
sub
stos
outsl
mov
je
cmp
push
jno
pop
roll
sbb
sbb
or
push
pop
adc
out
pop
sbbl
push
inc
dec
aam
lea
out
jo
fdiv
cmc
aam
mov
mov
cmc
and
cmp
std
rorb
pop
mov
xor
dec
pushf
xor
mov
dec
fmuls
data16
jle
xor
xor
clc
cltd
dec
mov
xorb
into
jae
inc
xor
mov
cs
adc
imul
and
call
mov
inc
push
cmp
or
scas
out
enter
xor
mov
sbb
push
mov
hlt
cmp
xchg
adc
popf
mov
dec
aam
aas
or
nop
jnp
jo
daa
xor
nop
insl
mov
push
adc
jle
jne
cmp
pop
out
jnp
xchg
movsl
lock
adc
repnz
xor
hlt
aaa
inc
push
sbb
mov
adc
icebp
rorl
jo
test
xchg
xor
cwtl
lock
sar
clc
add
push
lock
mov
repz
adc
push
or
loop
xchg
mov
cmp
dec
idiv
data16
and
xor
adc
lock
sti
stos
xchg
shl
mov
add
ss
rcll
icebp
jb
push
mov
jl
adc
jns
adc
sub
and
pop
mov
insl
adc
enter
xchg
or
int
pushf
aas
rorl
sbb
xchg
mov
das
lods
jne
mov
xor
adc
jp
sub
push
and
lock
mov
mov
scas
outsl
jle
gs
add
sbbl
scas
mov
sbb
adc
divl
stc
lods
outsb
add
js
sub
test
xchg
mov
xor
cmp
outsb
inc
xor
dec
push
fiaddl
jge
pop
pop
ja
sahf
pushf
rcl
popl
rclb
jo
lahf
dec
pop
icebp
scas
aas
in
cmp
cmp
nop
jl
or
add
je
push
ja
sahf
adc
test
shl
into
andb
shlb
mov
xchg
out
dec
fildll
push
das
pop
iret
loop
add
repnz
jle
rcr
inc
push
mov
jle
add
fs
ret
inc
xchg
inc
pop
jp
icebp
mov
mov
or
and
fimuls
or
mov
cmpsl
fldt
ljmp
mov
push
xchg
xchg
cwtl
mov
das
stc
xor
jge
ljmp
cmp
pop
inc
adc
pop
adc
and
aas
bound
insl
lds
jl
push
sub
les
sub
daa
push
xlat
mov
sbbb
adc
testb
out
sbb
out
mov
mov
adc
mov
out
mov
cs
mov
mov
mov
pop
dec
mov
pop
adcb
and
inc
jne
out
pusha
lods
out
sbb
test
mov
lea
lea
pusha
pop
dec
sub
dec
in
jge
add
stos
push
ret
cmc
lock
mov
xchg
add
pushf
aad
ljmp
inc
rclb
jl
icebp
stos
rcrb
add
sub
out
dec
jl
cmovo
cmp
out
cmp
push
or
sbb
rcll
xchg
sub
adc
and
out
sbb
adc
xor
lock
mov
pop
add
pop
aas
mov
js
dec
insl
push
pop
mov
xchg
jo
cmpsl
std
or
orl
xchg
pushf
sbbb
add
jge
cmpsb
mov
push
cmp
cltd
int
jns
adc
mov
movsl
cmc
test
rorl
stc
mov
push
je
test
cmp
nop
cmc
or
fwait
stos
pop
subl
xchg
stc
mov
cltd
add
sub
sub
dec
mov
aas
add
movsb
fwait
int
add
ds
popf
push
lds
pop
ja
sahf
adc
adc
jecxz
iret
or
jl
or
fsubrs
xor
mov
mov
outsb
lret
clc
in
cmp
xor
dec
loope
test
out
pop
insb
adc
fnstsw
cmp
inc
icebp
movsb
faddl
fists
stc
loopne
pop
out
cmpsb
lock
dec
sbb
mov
mov
stos
push
fs
scas
out
enter
sbb
adc
xor
movsl
jmp
sahf
xor
cmpsl
pop
shll
cmovp
aad
insb
and
psllw
loopne
loop
jecxz
or
adc
adc
lods
lock
pop
xor
pop
inc
jb
push
pushf
xchg
sbb
ss
je
cmp
clc
lods
nop
ja
jecxz
mov
out
mov
sahf
bound
jmp
outsb
mov
insb
push
pop
or
adc
push
test
lahf
and
fs
mov
xor
pop
dec
lock
icebp
jns
loope
push
mov
ja
out
outsl
or
mov
cmp
cld
push
jae
jo
fs
pop
rcll
mov
xor
adc
add
jno
sbbb
shll
cwtl
xchg
cld
out
stos
sbb
ficoms
cs
fistl
bound
je
rcrb
sub
jb
cmp
pop
jne
sbb
out
ret
pop
mov
mov
add
cwtl
insl
dec
pop
pushf
xor
stc
sub
pop
shl
jb
sub
insl
adcl
stc
es
lea
mov
add
fwait
in
pop
lcall
push
mov
xor
and
inc
xchg
jle
mov
dec
mov
sbb
test
adc
stc
jns
pushf
sbbb
dec
xor
push
jl
xor
fidivs
mov
jbe
cmp
or
int3
je
adc
sub
jl
lret
orb
jl
xor
jge
xor
repz
out
ljmp
lods
push
fsts
test
sbb
in
mov
pusha
xchg
pop
fildl
push
aam
or
jle
cmpsl
mov
or
mov
or
mov
mov
add
push
ret
mov
es
cmp
pop
hlt
push
xor
ds
hlt
nop
sysret
movsl
sbb
sbb
gs
sub
in
aas
hlt
jle
ljmp
out
xor
test
out
add
arpl
push
push
les
js
xor
aaa
or
in
movsb
mov
leave
scas
dec
cmp
mov
cmp
jb
in
jo
and
lds
data16
mov
jae
adc
or
pushl
xor
sarl
adc
jge
cmpsb
adc
adc
insb
xor
xchg
int3
repnz
xor
xor
adc
adc
adc
xor
testb
stos
push
fldenv
test
imul
out
sbb
ret
popa
fidivrl
jl
mov
lds
int
sbb
mov
fimull
mov
scas
and
leave
xor
jbe
mov
mov
into
mov
insl
fcmovb
xchg
aam
and
ss
lock
sbb
leavew
adc
out
repz
sbb
push
leave
mov
xchg
addb
cmp
out
and
lret
out
cli
and
mov
in
lock
in
or
gs
loopne
cmc
push
imul
mov
or
scas
rclb
pop
mov
shll
insl
imul
gs
fwait
push
cmp
sahf
in
sbb
ret
sub
stos
dec
repnz
data16
ljmp
ss
adc
jno
jle
and
mov
cmp
add
inc
sbb
pop
cld
icebp
pop
jge
inc
xchg
cmp
push
scas
insl
xchg
jne
scas
jo
xor
je
xchg
or
sbb
pop
xchg
sub
mov
jne
push
pop
push
inc
hlt
jb
pop
jmp
in
icebp
lods
mov
jmp
enter
stos
popf
ret
jg
stc
cltd
fsubs
lods
mulb
mov
sub
test
cld
cmp
imul
dec
adc
cmpsl
xor
xchg
mov
paddw
and
push
xor
cmp
add
fistps
inc
or
out
mov
add
scas
mov
insl
notb
bound
push
jp
popf
add
xor
mov
lret
fxch
icebp
dec
lea
scas
pushf
fs
ja
inc
cmp
sbb
bound
cmp
push
rorl
fcompl
lds
sbb
jmp
gs
int
pop
pushf
xchg
shlb
mov
mov
and
and
out
mov
int3
sbb
mov
dec
dec
insb
jne
rcll
popf
fs
mov
movsl
insb
lea
xor
push
outsb
js
aas
ljmp
xchg
inc
sarl
and
inc
xor
addl
cli
mov
dec
mov
nop
fistl
inc
repz
aad
jg
pop
adcl
and
adc
in
orl
jns
adc
adc
push
xor
js
fwait
and
aas
xor
outsl
xorb
inc
lods
sbb
nop
js
push
sub
sarl
adc
adc
push
js
xor
pop
adc
push
aad
adc
hlt
sub
push
dec
push
sbb
outsb
xor
insl
jg
push
mov
dec
lahf
movsb
adc
out
mov
enter
adc
push
testb
xor
adc
pop
push
sbb
scas
scas
inc
xchg
xchg
lods
lahf
out
sub
lea
cmp
aas
pop
in
std
popa
test
lods
in
sub
outsl
hlt
jnp
adc
in
cmp
test
dec
cli
mov
cmp
add
test
nop
and
inc
dec
movsb
and
dec
sub
adc
js
sbb
sarb
stos
mov
lods
loop
cwtl
xchg
and
add
mov
push
aam
mov
adc
cmp
inc
jge
push
mov
jb
xchg
xchg
cs
pop
mov
jo
xchg
cbtw
xor
push
xchg
sahf
js
and
fiaddl
mov
jnp
out
pop
cli
xchg
pop
inc
sarb
and
mov
es
xchg
xchg
mov
cmpb
ja
mov
orb
popf
jl
enter
cmp
cmc
or
stc
inc
sahf
jae
adc
in
imul
out
out
jmp
popa
inc
adc
dec
shll
sbb
mov
lcall
ror
jg
repnz
adc
lret
inc
int3
idivl
cmp
xchg
jle
xor
or
inc
repz
jecxz
mov
sahf
pop
sub
fldt
dec
aad
outsl
fnstsw
push
adc
sbb
sbb
and
xchg
rolb
popa
addr16
pop
xorl
fildll
aas
push
aad
jb
mov
sub
insl
hlt
xchg
scas
pop
outsb
arpl
push
inc
xor
sub
addl
mov
aad
xchg
jmp
in
mov
mov
push
cwtl
imul
fldt
and
jbe
or
inc
fistps
jno
sub
and
jnp
and
insb
fisubs
cmp
sbb
das
jl
dec
push
testl
test
int3
push
cmp
xchg
test
mov
mov
lods
sbb
push
push
jmp
lock
iret
xchg
mov
scas
adc
push
xchg
cmpsb
push
add
call
inc
movsb
pop
adcl
fcmovbe
inc
inc
xor
sub
inc
sbb
fcomp
add
hlt
add
cmp
cmpb
jbe
mov
push
lret
mov
xlat
jae
loope
inc
rcrl
adc
in
push
push
sub
pushf
and
stos
pushf
aam
inc
inc
mov
sub
adc
adc
repnz
icebp
or
jbe
jne
jp
cld
je
cmp
lock
stc
pop
icebp
movups
roll
adcb
sub
ret
mov
dec
ss
popl
ds
push
out
iret
sbb
shrb
mov
fdiv
iret
adc
xchg
jl
adc
jno
sbb
push
lock
xchg
add
add
mov
xchg
add
aam
scas
lahf
push
add
jbe
fwait
insl
popf
hlt
divl
cmp
jae
sarb
xor
mov
mov
pop
sbb
add
mov
xchg
xor
push
add
mov
fwait
jb
inc
adc
ja
xchg
cmp
cmp
outsl
xor
jl
xchg
add
push
xor
jp
or
dec
das
xchg
js
fsts
jno
dec
push
pcmpeqd
imul
push
arpl
adc
stc
in
xchg
fisttpl
push
data16
icebp
or
cmc
push
jns
or
inc
adc
fs
scas
sub
cwtl
lock
pushf
mov
or
jg
leave
xchg
fists
iret
sti
bound
mov
sbb
mov
iret
cs
jg
push
mov
inc
push
xchg
dec
jne
xor
xor
rclb
dec
mov
cmpsl
lock
adc
cmp
lcall
pop
jle
and
je
out
stos
jae
push
inc
jb
mov
iret
xchg
jmp
ja
xor
insl
pop
addr16
scas
add
testb
or
jno
fidivs
popf
cmpb
ficompl
setle
sahf
pushf
xchg
push
xchg
cmpsl
incl
mov
cmp
ret
adcl
pop
repz
cld
or
stc
push
fidivrs
scas
cld
div
fs
xchg
pusha
xchg
fs
test
push
out
inc
fimuls
dec
sbb
stc
imul
shlb
mov
sub
xor
pop
add
jl
mov
lahf
mov
cld
or
rolb
and
xchg
push
inc
lock
or
xchg
jg
aaa
rcll
jle
lods
push
rcrl
sarl
sar
sahf
push
jnp
adc
xor
mov
jle
push
and
mov
jp
add
and
cmpsb
jae
in
aaa
cmpsl
repnz
lahf
subb
dec
mov
jle
cmpsb
push
or
aad
iret
movsb
pusha
sub
mov
or
inc
and
dec
mov
add
sahf
cmp
mov
mov
fldcw
inc
ljmp
pop
shll
xchg
add
lcall
scas
pop
ds
xor
cmp
cmp
jae
test
aaa
mov
adc
std
jg
jo
dec
stc
in
jl
cmp
mov
push
testl
or
jns
xor
xor
cmpsl
arpl
lea
shl
hlt
xchg
and
lret
sbb
ljmp
js
jbe
lea
or
iret
jle
xchg
mov
pushf
add
dec
loop
cmp
jo
sub
mov
dec
mov
fs
push
std
jb
sbb
ror
testl
mov
outsb
inc
clc
mov
xor
fnstenv
sub
cld
add
pop
loop
mov
mov
dec
icebp
bound
push
mov
mov
mov
xchg
sbb
sti
or
or
mov
jbe
fs
scas
lods
ret
mov
xchg
cwtl
shlb
mov
jb
stc
int3
cs
aas
cmc
pop
pusha
mov
rcr
int3
inc
rorb
and
mov
pop
shlb
stc
dec
add
add
cmp
jno
mov
fwait
mov
inc
cmp
lret
mov
sti
or
mov
int3
adc
jecxz
lcall
dec
xbegin
imul
lahf
sub
xchg
mov
jb
nop
sub
outsl
inc
jecxz
mov
frstor
mov
jle
jb
xchg
mov
ud1
adc
xor
or
cltd
jp
cmp
jp
push
cmc
aas
lret
lret
popf
clc
pop
and
add
movl
lock
push
pop
xor
and
mov
cld
js
or
sbb
test
push
dec
mov
inc
jge
and
aad
adc
movsb
mov
movsb
pushf
sbb
xchg
push
imul
sub
xor
rcr
ret
sahf
mov
xor
scas
push
je
lock
add
sbb
adcl
imul
and
mov
pop
cmp
icebp
scas
jns
leave
mov
mov
out
push
push
sub
hlt
mov
mov
cmp
jmp
sbb
pop
cld
or
mov
mov
xor
adc
push
mov
and
ljmp
lock
dec
or
in
cmp
ret
out
xor
fcoml
dec
rcrl
stc
sbb
lret
lahf
mov
mov
gs
lock
xchg
jmp
add
push
insb
mov
mov
out
xchg
or
xor
fdivp
pop
cmpl
cmp
pop
ret
ja
mov
xchg
fdivp
out
cmpsb
jbe
fidivrl
add
movsb
xchg
adc
sahf
jno
fwait
in
mov
int3
xor
pop
lea
cmp
cmp
and
add
pop
jne
idiv
repz
and
lret
fs
jno
push
jne
iret
hlt
sbb
dec
mov
pop
test
les
jle
js
and
cmp
popf
sbb
into
lahf
add
sahf
jo
pop
mov
int3
imulb
out
push
lea
int
sbb
mov
xor
ljmp
pop
jmp
mov
insb
idiv
push
icebp
sub
push
cs
xchg
shll
inc
int
xor
mov
or
sbb
adc
cmpsb
insl
jno
fildl
sbb
test
push
test
dec
cmp
popf
pop
fsubp
sub
jle
cmp
daa
mov
test
adc
and
push
outsl
xor
inc
push
xor
adc
lds
rcl
push
sbb
insb
fwait
xlat
jp
mov
push
insl
filds
xchg
pop
inc
adc
fimull
sub
jmp
mov
iret
mov
fs
jo
jge
sbb
xor
push
in
xor
push
pushf
addb
sub
sahf
cmpb
je
push
mov
out
outsb
call
mov
aad
and
cmp
icebp
xchg
add
iret
ja
idivl
mov
imull
push
jg
sbb
push
cwtl
xor
or
add
xor
rclb
add
dec
gs
cmp
stos
leave
hlt
cli
or
jg
shl
inc
pusha
cmp
inc
daa
xlat
xor
pop
les
lds
insl
lock
scas
lock
and
and
mov
adc
fnstenv
jl
scas
or
into
fsub
jo
push
addb
andb
iret
pop
cli
hlt
loopne
pop
lock
pop
repz
xchg
icebp
jle
mov
js
cli
jns
insl
pushf
pop
push
xor
jns
cmovp
push
sbb
mov
mov
jno
push
or
mov
insl
popf
dec
outsl
iret
inc
fs
jl
add
mov
mov
jg
xor
bt
aas
and
pop
stos
mov
adc
cmp
in
and
enter
repnz
lds
xlat
xor
or
dec
pop
mov
push
ficompl
out
and
xchg
add
mov
subb
push
addr16
or
test
icebp
pop
mov
rclb
adc
fwait
cmpsl
pop
jno
dec
test
jl
fs
sub
xchg
loop
jno
mov
clc
sbbb
test
jno
sub
jo
repz
dec
aaa
push
add
xor
mov
mov
mov
mov
add
fldcw
mov
jbe
push
jno
jo
test
pop
cltd
hlt
add
pop
jo
and
bound
bnd
pop
out
iret
clc
hlt
mov
lock
mov
rorb
vpcmpeqw
lea
gs
sbb
frstor
aas
mov
push
push
xor
fstpt
sahf
sbb
push
idivb
sbb
mov
pop
or
mov
push
sub
sbbl
push
das
push
lock
mov
test
xchg
out
adc
fwait
outsb
jl
rcll
cmp
nop
jg
pop
push
lods
adc
outsl
push
imul
jnp
cmpsl
pop
inc
inc
push
mov
pop
ljmp
ret
mov
add
jle
nop
rcl
inc
or
add
lret
dec
js
cwtl
xor
xchg
dec
mov
call
shll
inc
sarl
lret
jo
in
cmp
jns
mov
jno
out
fdiv
jne
jl
dec
stos
lret
xchg
dec
mov
in
jp
mov
stc
add
je
jle
sarl
lock
sahf
cmovns
mov
sbbb
jae
push
dec
jns
aas
xor
add
into
lahf
lret
push
lret
push
cli
mov
ljmp
or
fsubrl
mov
or
xor
dec
adc
inc
shl
sbb
mov
stos
in
xchg
jno
jle
addb
mov
sbb
dec
enter
cmp
jns
sti
push
fcomps
or
mov
fsubp
push
hlt
dec
mov
lret
sbb
repnz
fs
mov
xor
jno
sub
cmp
sbb
cmc
add
cmpsb
into
mov
dec
push
add
push
add
mov
clc
pop
das
mov
outsl
test
jecxz
mov
imull
je
cmp
andl
xor
lahf
notl
lea
dec
xor
push
sahf
jb
pop
adc
je
fisubrl
pop
repz
xchg
and
inc
add
jno
and
dec
mov
loop
cwtl
jo
arpl
imul
xchg
mov
push
or
jmp
add
ret
mov
daa
jp
xor
cld
lock
loop
pop
cmp
aaa
mov
add
xor
pop
mov
or
xlat
jns
or
in
mov
push
or
jo
push
push
jle
int3
mov
add
pop
icebp
ret
push
fldcw
xchg
or
ja
push
cmp
cmpsl
add
add
les
shll
ljmp
mov
adc
ja
mov
or
insb
cmp
sub
cmc
jns
ljmp
stc
push
push
insl
icebp
mov
call
jns
cld
mov
sbb
mov
sbb
or
mov
lds
cmp
pop
and
imul
add
pop
xor
sahf
cmc
mov
jecxz
cmpb
js
adc
je
xor
cmp
cmp
jae
xor
jae
add
ds
push
pop
imull
js
aaa
sub
stc
mov
cwtl
jae
int3
arpl
add
ret
in
or
and
pop
cld
xchg
jnp
jl
and
aaa
sbb
lock
sahf
pop
rcl
outsl
xchg
mov
jge
and
mov
or
mov
test
mov
aam
icebp
decb
out
out
xchg
scas
xor
in
inc
mov
xor
push
push
jge
jg
cltd
icebp
cs
aaa
sarl
sbb
adc
mov
xor
push
sub
movsl
sbb
xor
fisttpll
aaa
cmp
test
cld
pop
push
push
jo
or
shll
or
out
rcrl
push
adc
ret
mov
aad
lahf
mov
nop
std
lea
clc
xor
fdivs
shrl
outsl
je
adc
adc
add
push
xchg
rcr
es
adc
mov
cld
fld
cld
fistpll
lds
xor
or
sub
jne
jmp
mov
mov
jle
inc
icebp
cmpsb
inc
sbb
push
pusha
adc
or
mov
mov
add
aam
mov
cli
xor
mov
repz
and
mov
adc
movsb
mov
pop
or
cmc
or
sub
pop
add
or
sbb
or
adc
icebp
cmp
sbb
dec
scas
pop
pop
xor
push
jp
mov
icebp
mov
aad
psrlw
icebp
pop
mov
mov
sbb
sbb
dec
or
mov
stos
mov
push
mov
sbb
push
aaa
push
arpl
roll
pop
push
jnp
jl
and
push
stos
cmc
mov
jmp
jp
iret
repz
xor
imul
adc
push
push
jae
pop
mov
jno
fsubs
add
push
mov
push
jbe
pop
xchg
push
clc
fcmovnu
cmp
jb
or
jbe
mov
adc
cmp
and
test
loopne
adc
push
cmc
push
cmpsb
mov
adc
sarl
jo
or
jae
aad
and
mov
js
or
sub
enter
adc
add
test
ja
jmp
inc
sub
dec
fwait
mov
getsec
lds
sub
jp
jnp
mov
jne
xor
mov
cmp
jo
repnz
mov
jecxz
into
adc
call
jle
dec
pop
jo
add
test
pop
scas
xor
adc
icebp
jae
repz
inc
rorl
icebp
adc
movl
ljmp
aas
fidivrl
out
mov
mov
sub
adc
rcr
xchg
clc
inc
fidivl
scas
dec
mov
out
jp
sbb
adc
stc
mov
js
int
xor
xor
ljmp
repz
sahf
sbb
add
dec
popa
sbb
adc
icebp
lds
push
or
daa
jns
push
out
mov
jge
cmp
nop
cmp
xchg
fdivr
popa
push
and
or
and
pop
setnp
cmp
inc
jge
shll
das
and
sub
xor
push
out
fstps
gs
test
xlat
adc
xor
push
repnz
sarl
xchg
cmp
mov
shrb
cmp
adc
xchg
sbb
repz
nop
sbb
mov
inc
xor
jl
dec
ret
sbb
dec
pop
push
fs
pop
push
outsb
repz
or
leave
or
xchg
jg
push
loopne
mov
rcll
aad
or
inc
xchg
add
ds
jne
icebp
daa
jne
push
adcb
or
mov
inc
pop
dec
ret
ja
pop
push
and
push
push
adc
mov
add
jp
xor
outsl
and
out
dec
insl
lahf
mov
hlt
adc
jg
stc
or
cmp
xchg
fildll
movlps
jl
push
sub
xor
mov
mov
adc
arpl
pop
mov
adc
aas
inc
ja
lea
xchg
sbb
jbe
cli
xchg
montmul
cmpsb
inc
pop
divb
mov
or
mov
arpl
xor
mov
ljmp
clc
or
out
ja
out
mov
cmp
push
es
jb
inc
adc
jge
imull
xchg
adc
js
icebp
jg
cld
adc
jno
fnstcw
jl
jmp
xor
cmpsl
cld
and
sbb
adc
jle
pop
pop
add
je
gs
lea
push
mov
ja
lahf
mov
jecxz
adc
jo
icebp
push
xchg
xorb
mov
adc
cli
inc
push
mov
cmp
sbb
mov
or
mov
xchg
push
lock
jp
in
in
pushf
in
inc
lret
fistpll
jne
test
rcl
xchg
sbb
shlb
lea
fucomp
icebp
inc
cli
rorb
cmpsb
fs
or
pop
jb
aaa
adc
movsl
insb
pop
inc
add
pop
mov
push
test
sbb
cmpsb
adc
mov
and
jl
lret
and
jp
mov
sbb
in
dec
xorb
jecxz
and
or
fisubrs
in
xchg
out
mov
loop
jl
mov
in
mov
lock
adc
xchg
push
dec
sub
xor
push
adc
rorl
or
icebp
das
mov
push
xchg
xor
test
subl
arpl
jb
pushf
pop
fnstcw
addr16
dec
adc
push
mov
cwtl
mov
dec
push
adc
das
push
adc
adc
adc
and
xor
js
fldenv
fidivl
aam
mov
xor
mov
jno
pushl
push
jae,pn
sub
sbb
mov
lcall
mov
add
das
xchg
outsl
xchg
movsb
sub
sbb
ja
jae
add
jns
clc
cmpsl
popa
jmp
rcll
push
jbe
int3
mulb
popf
clc
jae
pop
repnz
rcr
mov
jecxz
sbb
adc
push
xorl
test
sub
push
js
repz
sbb
sub
cmc
mov
cld
cltd
repnz
mov
jno
xchg
jg
cmp
test
and
mov
mov
xor
xlat
xchg
dec
lock
jle,pt
sahf
adc
dec
fwait
adc
repz
mov
pop
xchg
or
push
add
aaa
js
and
dec
repnz
shl
xchg
je
daa
mov
jbe
pop
pop
dec
or
adc
dec
daa
jne
repz
xor
subb
popa
jbe
mov
mov
adc
push
icebp
shl
dec
hlt
cwtl
jb
call
jge
repnz
cs
cmp
jne
xchg
lahf
repnz
jg
ficoms
lock
mov
sub
sbb
mov
fwait
mov
jne
mov
fstps
ficomps
adc
jb
gs
and
icebp
sub
adc
dec
jmp
jne
mov
cmp
jae
push
push
cmp
jmp
add
pop
push
jb
f2xm1
mov
cmp
xchg
pop
bnd
jl
mov
xor
inc
xchg
inc
pushf
test
mov
inc
test
jno
mov
int
add
mov
loop
and
xchg
jo
fwait
sbb
pop
aad
fs
lahf
mov
test
adc
into
adc
lods
fcmovnu
cmp
mov
or
incl
stos
outsl
std
lock
pop
sbb
andl
orb
icebp
lea
xchg
cmp
movsb
std
mov
mov
mov
outsl
and
pop
jle
ret
mov
pop
sar
jmp
and
sub
fdivr
shll
imul
xchg
xchg
inc
add
inc
es
icebp
in
and
repnz
and
jle
xchg
xchg
js
mov
js
mov
in
adc
xor
cmc
or
mov
out
or
dec
xorb
and
notb
cmp
mov
xchg
xchg
popf
or
dec
jle
jno
adc
andps
roll
push
orl
cmp
sbbb
mov
ljmp
fs
xchg
jb
push
pusha
testl
xchg
das
daa
jne
push
cltd
mov
subb
push
in
cmp
pushl
xor
mov
lcall
lret
pmaxsw
mov
or
inc
imul
push
ss
xchg
and
rorb
or
or
jl
adc
rcll
test
mov
icebp
or
dec
adc
in
adc
xchg
or
mov
icebp
cmpb
dec
xor
add
pop
pop
cmp
add
jmp
je
mov
aam
sbbb
mov
cli
fsubrs
add
add
inc
inc
add
cmp
cmp
xor
cld
cmp
cmpb
mov
addr16
push
mov
or
int
mov
mov
test
pop
xchg
jb
loop
idivb
xor
pop
sbb
dec
rcrl
mov
or
and
jp
jmp
and
add
cmp
mov
cmp
shll
idivl
cwtl
or
pop
adc
cmp
out
jge
out
aaa
push
mov
jo
add
aad
mov
out
sub
mov
pop
addl
push
inc
and
in
xor
fcomps
add
sbb
mov
stc
xor
add
jns
cmp
fsubrs
mov
sbb
out
push
pop
xor
sbb
daa
jnp
sbb
xor
sub
test
mov
cmp
test
push
jns
mov
adc
imul
ja
mov
xlat
bound
inc
ljmp
add
lcall
jns
addb
push
outsb
pop
mov
repnz
sti
jmp
je
icebp
js
dec
mov
ja
pop
rcrl
cmpsl
fisttpl
or
repz
sti
pop
stc
mov
push
mov
mov
jl
mov
cmp
xchg
xchg
out
pop
adc
pop
mov
fstpt
xchg
xor
jno
xorb
add
je
hlt
mov
fisttpll
push
jae
jp
dec
repz
xor
push
jae
out
adc
push
fidivrl
loop
jge
jo
or
jne
mov
test
iret
mov
sti
pop
idivl
les
add
add
push
sbb
cmp
lahf
cltd
or
inc
or
pop
or
cmpb
mov
cmp
aaa
js
je
xchg
icebp
stc
mov
dec
test
adc
repz
xor
pop
xchg
mov
or
push
call
stc
add
push
and
push
sub
lcall
adc
mov
jle
inc
add
mov
jmp
sar
gs
xlat
dec
xor
xchg
fimuls
mov
fiaddl
push
imul
xor
xor
and
sbb
xchg
inc
aam
fimull
adc
xchg
xchg
nop
cmpsl
leave
mov
sbb
sbb
hlt
xor
mov
jbe
call
je
loope
sbb
ja
jb
jecxz
rcrb
lds
sbb
mov
or
incl
xchg
cmp
clc
push
scas
dec
idiv
sbb
pop
adc
push
add
push
cmp
inc
mov
xchg
shlb
mov
and
push
lock
sahf
test
adc
mov
repz
out
push
push
mov
xor
je
adc
mov
fwait
add
shr
data16
jne
or
or
lods
test
lods
sub
imul
mov
in
adc
dec
mov
jecxz
jb
xor
and
inc
lock
and
add
jns
adc
mov
xchg
xor
and
xlat
insb
aad
lret
sub
out
js
sbb
in
sysexit
push
xorl
pushf
push
jne
out
push
iret
xchg
xchg
or
pop
add
adc
je
int3
stos
rorl
mov
mov
mov
or
cmp
push
push
sbb
call
loope
sbb
rol
push
jecxz
sub
mov
dec
jnp
repz
or
cli
stos
jb
push
ror
push
cld
dec
icebp
push
roll
sahf
mov
jmp
lcall
cwtl
and
fnstsw
ds
call
test
mov
subb
jecxz
add
pop
bswap
xor
mov
hlt
repz
xor
or
dec
mov
dec
test
jb
movb
add
pop
je
cmpsb
daa
mov
stc
repz
cltd
subb
add
mov
hlt
daa
mov
push
and
jno
push
jo
les
sbb
repz
xor
hlt
stc
and
lods
push
lock
aaa
pop
push
push
shl
jo
out
sbb
xor
push
adc
dec
add
fsubrs
mov
dec
mov
pop
enter
inc
rcrl
mov
push
xchg
out
sbb
sbb
ss
lock
test
push
or
jno
incb
pusha
or
dec
xchg
jle
cmp
mov
mov
xchg
cld
popa
adc
jbe
nop
das
pop
xchg
mov
and
ret
lds
mov
test
loopne
ds
ds
lahf
lock
daa
mov
cmp
xchg
push
xor
jno
out
inc
jb
jae
xchg
sbb
pusha
or
push
cltd
sahf
fsts
jno
shlb
push
push
insb
xor
jno
jo
nop
cmp
inc
jbe
mov
dec
clc
movsb
repnz
xchg
movsb
stos
sti
clc
cmp
cltd
mov
dec
inc
sahf
test
cmc
adc
add
xor
xor
jno
stc
add
pop
rol
in
negl
or
lret
jae
jnp
pop
xor
rcll
xor
push
mov
scas
xchg
adc
jb
loop
jae
bound
push
xor
icebp
push
or
jno
mov
test
adc
xor
xor
push
je
xchg
xor
lahf
repnz
cwtl
or
lea
add
scas
outsb
jmp
sub
push
sbbl
hlt
push
popl
inc
lods
stc
xchg
and
mov
sahf
jl
mov
mov
ds
cmp
jo
or
clc
mov
nop
lock
mov
cld
adc
icebp
mov
enter
push
xlat
mov
sti
mov
ds
cld
mov
sbb
adc
pop
pop
lock
repz
pop
stc
jns
sbb
mov
adc
icebp
adc
fs
mov
jmp
fisttps
mov
cltd
jns
sub
sbb
adc
jo
or
icebp
addr16
lcall
sarb
mov
and
daa
mov
js
adc
or
jno
lahf
dec
inc
jle
cli
fisubl
sub
mov
iret
inc
sbb
test
and
cld
outsb
xor
addb
rdmsr
call
xchg
setno
sbb
xchg
aam
movsb
inc
xor
mov
mov
loope
sahf
je
cs
adc
jno
xchg
sbb
jo
cmp
xchg
mov
cmp
call
test
cwtl
mov
and
jge
pop
aam
jg
cld
push
not
cld
or
fs
sbb
hlt
pop
cmp
xor
lock
cmp
jno
jbe
js
js
jne
jb
mov
xor
add
xchg
shrl
lcall
idivb
push
sub
add
pop
dec
out
add
aad
add
iret
std
pusha
xchg
cmc
and
adc
scas
fdivs
xor
sub
cld
mov
and
xchg
icebp
jb
mov
jbe
push
mov
xor
hlt
jbe
fnsave
lds
jge
cwtl
incb
mov
xchg
xor
xor
out
mov
jl
mov
adc
and
push
cmp
and
adc
rcrb
sub
loopne
lcall
aam
add
shll
repnz
test
adc
shlb
push
fisubrl
pop
cli
lcall
adc
push
add
shl
cmp
sbb
adc
add
cmp
sbb
cmp
sarb
imul
sbbb
push
inc
mov
adc
xlat
mov
mov
insl
pop
aas
inc
or
stos
xchg
cmp
mov
stc
jne
cwtl
adc
imul
jo
jp
pop
pop
pop
clc
add
cmp
jl
ds
popw
xchg
mov
lock
and
or
mov
jg
lahf
jae
rcr
push
sti
and
cmp
pop
jl,pt
pushf
jae
rcr
push
cld
and
jge,pt
popf
jae
rcr
push
stc
and
or
in
sbb
jp
lcall
rcr
push
cmp
pop
or
fwait
ds
rcr
push
cmp
pop
or
cwtl
ds
rcr
push
cmp
pop
or
cltd
ds
rcr
push
and
jbe
xchg
ds
jae
rcr
push
aaa
and
ja
xchg
ds
xlat
jae
rcr
push
xor
push
or
ds
aam
hlt
rcr
push
xor
mov
jae
rcr
push
xor
push
jnp
mov
roll
dec
ja
sahf
xchg
pop
je
push
out
or
pop
cmp
gs
andl
xor
jbe
add
cwtl
cmp
xor
add
xchg
movsb
sti
jbe
jg
mov
adc
sbb
mov
mov
inc
xor
stos
lods
test
jle
jbe
cmp
repz
push
xorb
add
jmp
pop
fpatan
movsb
mov
push
xor
and
jb
xor
test
fnstsw
sti
or
iret
ss
movsb
and
movl
sub
daa
jno
mov
xor
sbb
mov
xchg
cmp
icebp
jb
mov
inc
pushf
sahf
mov
pop
pop
xlat
fimuls
cmp
scas
js
jae
mov
cmp
adc
pop
and
and
inc
pop
and
movsl
sbb
jo
iret
nop
aad
jae
dec
jg
pop
clc
dec
sub
xor
inc
cmp
jg
fwait
idivb
mov
xor
push
cmp
ss
stc
inc
push
sahf
xor
daa
adc
dec
repz
std
and
ror
loop
or
xchg
adc
sar
out
cmp
add
sub
pop
mov
xor
and
test
orb
into
out
mov
jbe
insb
insl
mov
insb
pop
pop
lea
nop
loop
std
push
std
pop
adc
rcrl
jno
mov
adc
cmp
mov
popf
sbb
adc
push
mov
aad
mov
jmp
dec
pop
xchg
sub
negb
icebp
jne
mov
and
or
ljmp
outsl
je
mov
inc
xlat
jo
lds
pop
adc
mov
cmp
push
push
add
cwtl
cmp
andl
int3
negl
out
sbb
inc
arpl
mov
sbb
jns
das
dec
dec
mov
int
cltd
push
mov
ficompl
dec
fistpl
pop
fucomp
dec
in
rolb
lea
and
dec
xchg
dec
les
xchg
mov
or
pop
test
lods
outsl
dec
rolb
je
sub
fnstcw
movntq
stc
jge
incb
iret
enter
and
frstor
mov
adc
out
fwait
xlat
push
mov
je
xor
dec
add
push
jbe
loopne
testl
loopne
push
aaa
fsubrs
js
push
adc
mov
mov
jl
push
test
adc
sahf
ret
add
fdivrs
pop
pop
push
push
jnp
inc
push
xchg
mov
lahf
cmp
cmc
repz
jp
mov
mov
into
dec
jae
rclb
mov
sbb
jge
sub
add
pop
sarl
adc
pop
add
fidivl
adc
cmc
mov
jno
pop
cld
sarl
scas
mov
movsb
std
jae
popa
pop
jge
test
repnz
pushf
or
push
pop
push
sub
lcall
xchg
cmp
inc
pop
call
sub
push
stc
stc
pop
adc
cmc
psubw
stc
adc
lock
mov
leave
rcrl
js
sub
nop
out
cmpb
and
sbb
mov
mov
out
cld
out
inc
insb
and
lcall
sbb
xorl
cmp
ja
push
iret
inc
add
outsb
fsubs
fistps
xchg
popf
cmp
pop
inc
repnz
adc
cltd
leave
pop
fcompl
xchg
xchg
jno
es
adc
push
jbe
xor
shlb
push
xor
cmp
repz
cmp
xor
insb
cli
sbb
lock
add
icebp
push
sahf
je
sahf
mov
mov
sarb
xchg
clc
cmp
icebp
cli
xor
icebp
clc
mov
stc
xchg
lret
add
push
imul
cmp
divb
mov
adc
divb
mov
icebp
adc
jno
lock
mov
jnp
push
push
sub
adc
pcmpeqw
sti
push
rclb
sbb
and
push
jns
sbb
movsb
sbb
mov
jecxz
mov
mov
push
shl
js
into
ret
cmp
je
mov
adc
or
icebp
sbb
dec
je
cltd
test
mov
dec
or
cmp
xchg
int3
ss
cltd
nop
enter
sar
push
mov
jae
adc
dec
int3
mov
jl
cmc
jl
lock
adc
fmuls
ret
pop
divl
push
mov
xor
xchg
repnz
adc
pop
testb
sbb
xchg
clc
pushf
stos
sarb
jmp
xlat
lea
sti
push
scas
cld
inc
test
add
or
in
aam
jno
lock
mov
nop
jo
xchg
mov
adc
pop
cmc
add
fimull
push
lret
pop
add
idivl
sbbb
clc
jae
in
mov
jo
cmp
cmp
pop
and
fcmovnb
push
mov
pushf
dec
jbe
mov
jo
mov
dec
jp
inc
xor
dec
mov
hlt
pop
cmp
repz
ss
neg
or
jle
add
je
sbb
das
sbb
jl
repnz
ljmp
je
mov
jns
mov
pop
stc
add
rol
xchg
stos
or
add
pop
mov
cmpb
test
jne
cmp
lret
mov
mov
iret
sbb
jl
cmp
jl
pop
cli
mov
cmp
xchg
or
sbb
sbb
jnp
xchg
mov
mov
add
jge
cmp
mov
jp
or
out
cmp
pop
and
mov
lock
movzwl
sub
add
and
jo
sub
divl
inc
sbb
cmp
mov
ds
ss
pop
std
push
jecxz
xor
push
hlt
xor
xchg
pop
gs
mov
iret
ss
lock
sar
xor
mov
ds
dec
nop
sbb
std
sbb
inc
pop
pop
js
es
cld
dec
adc
iret
jl
xchg
mov
cs
fs
xor
push
cltd
pop
fdivl
adc
les
pop
cmp
jbe
mov
jecxz
mov
mov
mov
je
cli
xchg
cli
shl
dec
stos
jge,pn
push
dec
xor
push
or
test
xor
mov
pusha
dec
idiv
inc
stos
jno
js
xor
sub
cwtl
hlt
jno
leave
push
bound
in
push
or
fdivl
negl
jne
loop
cmp
cwtl
pop
push
lock
push
ja
xor
jns
lea
notb
pop
mov
fcmovu
jne
jo
repz
xor
imul
jno
rol
adc
xchg
pop
sbb
fcompl
dec
mov
fwait
mov
pop
mov
adc
and
cmpsb
cwtl
clc
movsl
cli
pop
sub
and
je
jae
mov
clc
jne
in
or
stc
adc
and
or
das
pop
scas
clc
inc
clc
pop
ss
lds
mul
inc
jae
adc
arpl
jle,pn
add
sarb
mov
mov
and
mov
ret
je
jne
imul
sarl
pushf
sti
idivb
add
xchg
mov
pop
stc
je
jo
sub
out
cmc
mov
lock
pushf
jo
js
push
jno
pop
mov
movsl
sbb
push
add
sub
mov
test
cmc
inc
jb
ljmp
sti
cld
mov
and
mov
js
jno
clc
or
jns
pushw
in
or
add
jno
cltd
loop
repz
data16
jbe
adc
add
inc
jl
mov
jecxz
adc
addl
sbb
lock
adc
sbb
lock
shlb
cwtl
cwtl
mov
in
int3
sbb
jle
in
testl
popf
xchg
xchg
xchg
inc
add
cs
data16
jl
icebp
js
aaa
mov
daa
and
jge
js
xchg
mov
icebp
or
cld
rorb
inc
testb
leave
push
daa
cmpsl
lock
hlt
jmp
je
enter
and
mov
xchg
xor
movsb
cmp
xlat
jns
je
repnz
xchg
adc
jp
pop
fnstsw
jnp
push
icebp
js
jbe
clc
jle
or
cli
testb
hlt
sub
push
mov
jg
push
mov
jno
test
push
lods
jmp
lock
push
pop
adc
xchg
or
repnz
adc
add
cmp
scas
int
or
nop
js
jo
and
ret
mov
push
jns
push
jae
cmp
addr16
jl
js
test
out
dec
add
mov
repnz
les
add
mov
cmp
jmp
fsts
popf
add
and
mov
push
ja
sub
nop
xor
sbb
add
scas
cmc
mov
gs
scas
push
vucomiss
testb
jb
adc
and
mov
xor
dec
scas
xor
das
js
push
xor
push
sbb
lahf
mov
fyl2xp1
cmpsl
sti
adc
out
push
adc
inc
xchg
lahf
push
jno
xlat
mov
jo
mov
sub
lods
jae
adc
mov
sahf
sub
mov
dec
icebp
or
jns
add
sahf
cwtl
add
adc
mov
add
icebp
lret
inc
push
xor
xchg
mov
icebp
add
cmp
divb
faddl
repnz
pop
cltd
mov
lds
sub
shl
dec
sbb
lods
jle
mov
adc
movsb
cmpsb
mov
pushf
jmp
cmp
sub
imul
xchg
pusha
movsb
ficoml
hlt
cli
outsl
push
add
inc
sbb
mov
sahf
out
in
mov
fsubrs
cmp
adc
inc
pop
pop
aam
cli
sbb
push
sahf
cmp
out
sub
sub
cmpsl
stos
in
mov
adc
adc
mov
icebp
inc
sbb
fbld
sub
aad
sub
and
sbb
mov
add
scas
ja
dec
mov
loope
scas
adc
fsts
mov
psubusb
mov
mov
test
and
aas
mov
sahf
shlb
aas
xchg
scas
sbb
repnz
fsubrp
jge
push
pop
mov
adc
mov
loop
jmp
mov
pusha
int
or
jo
fimull
xor
mov
jne
loopne
pop
scas
adcb
cld
cmp
sub
orl
lds
mov
add
sbb
xor
mov
sub
add
push
pop
fbstp
and
mov
stc
add
adc
jbe
sahf
dec
or
lret
fwait
sbb
stos
sbb
lods
cli
mov
adc
xchg
or
adc
out
std
lods
repz
pop
ds
fnstsw
je
fdivrs
pushf
xor
or
mov
sbb
pop
cmp
stc
loopne
std
pop
scas
in
jg
hlt
jp
sbb
mov
ja
pop
pop
sbb
mov
js
jns
popf
pushf
divb
scas
jmp
cld
testl
adc
mov
sbb
push
sahf
sbb
sbb
push
aam
int
inc
jo
sub
jns
pop
pop
pop
je
jne
pop
test
sbb
jne
cltd
inc
xchg
imul
pop
mov
jle
push
cmp
inc
sbbb
mov
repnz
fistpl
cmpxchg
idiv
inc
fidivrl
pop
lahf
jle
pop
pop
add
cmp
add
sahf
mov
cmp
mov
adc
adc
js
adc
les
idiv
jecxz
insl
jns
xchg
rol
mov
jge
shlb
mov
ljmp
pop
sbb
in
and
icebp
xor
imul
xchg
jb
xchg
jne
clc
mov
add
popf
sub
aas
mov
roll
fnstenv
lock
mov
popf
or
testb
arpl
mov
add
cltd
jo
jb
or
stc
dec
mov
pop
pop
loop
ss
mov
jmp
cmp
sub
pop
gs
shll
sub
pushf
xchg
xchg
jb
aam
adc
push
ret
std
push
lahf
push
scas
dec
sbb
push
adc
mov
and
push
icebp
repnz
aad
jne
cmpsl
clc
add
lock
stc
jb
ljmp
or
clc
icebp
dec
fsts
jg
mov
pop
clc
fidivrs
pop
cwtl
jp
loope
xlat
js
mov
inc
push
cwtl
mov
sbb
movsb
cmc
nop
cltd
sbb
jne
adc
sbb
sti
int3
je
mov
jbe
xchg
cmp
repnz
fdivs
push
dec
push
jne
sbb
cwtl
je
fcoms
lahf
pop
loope
jg
lcall
mov
scas
shll
repnz
bound
pop
mov
lock
dec
sar
jmp
or
sti
or
cmp
xor
sbb
jp
sarl
fyl2xp1
ss
mov
and
sti
cmp
xchg
movhlps
xlat
and
add
sub
popf
fstpl
dec
outsl
aad
jbe
push
adc
outsb
movsb
mov
cmp
inc
adc
push
xor
movsb
push
jmp
insl
loopne
jg
icebp
xchg
addr16
mov
pop
xchg
adc
aaa
jb
sahf
push
js
xchg
sub
aaa
or
pop
mov
aaa
mov
xchg
jp
jae
mov
or
out
xchg
pusha
je
shll
rorl
or
push
imul
arpl
insl
lret
xor
frstor
inc
iret
or
or
in
scas
adcl
add
std
mov
xchg
cltd
mov
adc
loopne
in
xor
add
sub
adc
out
testb
in
shll
jge
cmp
fidivrs
jns
lock
das
mov
add
add
repz
je
jecxz
xchg
movsb
jns
sub
fwait
cmovns
bnd
negb
dec
mov
jp
jge
or
sub
add
fidivs
jo
xchg
or
jb
mov
xchg
add
inc
xor
xchg
or
jge
xor
jg
sar
push
and
mov
addr16
add
xor
iret
arpl
xchg
outsl
adcb
movsb
inc
popa
adc
sub
cmp
xor
addr16
push
stc
bnd
lods
xor
xchg
or
adcb
aaa
nop
cmp
mov
push
pop
push
shll
lock
jle
mov
addr16
in
add
or
xchg
pop
cmp
lds
sub
lock
dec
orl
cmp
pop
mov
xchg
je
adc
int3
jb
pop
or
cli
mov
mov
mov
into
adc
lahf
or
push
cmp
push
jl
xor
loop
cmp
stos
add
jl
stc
sub
je
jb
sub
xor
push
ja
insl
push
jmp
xor
pusha
dec
or
sahf
mov
and
out
add
pop
rcll
and
inc
stc
mov
dec
fnsave
sbb
and
push
xchg
xlat
pusha
xor
xor
inc
aam
lods
jae
adc
data16
adc
jns
adc
aas
js
std
inc
nop
clc
pusha
not
xchg
xlat
aas
xorl
in
sub
iret
scas
mov
mov
dec
cmp
jb
or
insl
adc
mov
add
mov
lock
pop
jno
imul
xor
xchg
adc
mov
and
ret
pusha
pop
test
mov
push
xlat
cmp
xchg
int
pop
cmp
into
cli
sbb
out
scas
xor
hlt
aad
ss
add
dec
sub
mov
cld
push
test
cmp
stc
pop
mov
add
jne
testl
sbb
push
mov
imull
test
iret
in
je
call
ficoml
xchg
sarl
icebp
repz
stos
scas
xor
inc
mov
imul
je
jbe
imul
xor
sub
cmc
push
jns
addl
and
clc
add
jns
xchg
mov
out
or
adc
insl
inc
test
cmc
jno
dec
pop
push
mov
idivl
inc
jne
enter
mov
sub
cmpsl
push
outsb
and
iret
adc
scas
popa
adc
invd
test
pop
mov
js
inc
xlat
add
jno
xchg
sub
ja
or
das
ret
rcr
push
pop
incb
lock
pop
sbb
sub
das
mov
jmp
enter
jbe
cmp
imul
sbb
push
and
in
pushf
jno
nop
sub
repz
mov
into
sbb
mov
add
lods
test
push
xor
jnp
imul
mov
into
lock
jp
xchg
pop
shlb
cmp
mov
inc
mov
xchg
fwait
sub
inc
jmp
adc
adc
les
in
mov
scas
lock
lea
jbe
mov
jmp
loope
pop
jge
fs
test
push
scas
lea
adc
sbb
movsb
mov
add
fwait
jecxz
push
mov
mov
jbe
jbe
xor
ds
clc
mov
cwtl
insl
mov
aad
cmc
pop
aaa
clc
addl
shrl
inc
iret
shll
cld
or
scas
lock
cmp
iret
fmull
dec
add
cltd
stos
movsb
push
ja
xor
jp
jno
movsb
mov
or
jmp
inc
xchg
mov
iret
mov
insl
push
mov
imul
lea
lock
jae
xchg
cmp
mov
jp
or
insl
xor
or
xor
push
ljmp
pop
push
jecxz
ja
inc
lods
scas
jl
mov
insl
mov
lods
unpckhps
and
mov
lea
cmpsb
mov
movsl
insb
icebp
jle
and
outsb
push
lock
jns
xchg
ss
arpl
popf
mov
sbb
div
xor
cli
hlt
or
sbb
adc
dec
jae
and
xor
jbe
mov
js
ret
dec
fdivl
jno
sub
cmp
pop
jg
dec
dec
sub
sbb
push
ss
popa
sbb
mov
mov
subl
push
lahf
mov
jno
nop
enter
pop
adc
xchg
jle
push
push
shll
lret
into
sub
pop
mov
sahf
jg
sub
in
ret
push
adc
std
repnz
pop
xchg
cld
cmp
lea
or
dec
cmc
and
insl
icebp
rclb
adc
in
xchg
test
sti
xchg
cmpb
xchg
push
xchg
mov
in
clc
pop
shll
lahf
xchg
jb
pop
push
inc
popl
mov
mov
mov
jp
mov
xorl
subb
shlb
nop
mov
mov
sti
add
fdivr
mulb
mov
outsb
add
mov
add
sbb
push
cmp
push
mov
clc
adc
cmpl
cmp
mov
sub
mov
lods
add
or
jl
scas
cmp
ljmp
aad
and
jp
scas
mov
or
lret
cwtl
das
aad
and
push
lock
push
mov
xchg
xor
add
or
ficoms
lds
addr16
push
mov
pop
loop
add
mov
xchg
mov
enter
xor
shlb
mov
inc
sub
cmp
popf
push
inc
mov
cmp
cmpsl
and
and
add
test
hlt
push
xchg
push
mov
cs
ja
pop
jo
push
pop
xor
loop
mov
aaa
out
push
sahf
and
dec
mov
mov
cmp
test
ljmp
icebp
mov
insl
jns
lret
jge
xor
int3
sub
cld
rorl
and
inc
je
or
xor
lock
sahf
mov
pop
xchg
cwtl
inc
xchg
mov
bound
xchg
aad
shlb
dec
popf
or
inc
pop
scas
mov
stc
push
adc
push
iret
jmp
fimull
adc
and
out
mov
push
or
sub
xor
jno
jnp
test
mov
sbb
sbb
jecxz
mov
ja
dec
repz
cmp
adc
cld
xchg
das
jae
xlat
ror
xchg
mov
or
lcall
icebp
js
xchg
cmp
xor
or
clc
adc
mov
idivl
js
xchg
jge
and
or
xchg
cwtl
jecxz
test
adc
adc
mov
ljmp
fdivrl
push
and
adc
fidivl
xor
xchg
adc
adc
fistpl
loop
int3
mov
mov
adc
fnstenv
mov
dec
jmp
sbb
mov
gs
sub
dec
ficompl
jo
shll
xor
mov
ret
inc
mov
or
cmp
fs
xor
mov
push
andl
adc
inc
xor
jae
sbb
mov
enter
lahf
pop
push
stos
inc
fwait
dec
or
sahf
adc
lock
div
dec
data16
xchg
and
push
mov
mov
shll
push
jmp
adc
jb
lds
lea
dec
out
dec
pop
adcl
cmp
loopne
adc
addb
and
clc
xchg
inc
mov
repnz
mov
xlat
sub
repnz
call
mov
cld
incb
divb
pop
stc
add
into
stc
xor
ja
data16
jno
sbb
es
jg
xor
cmpl
pop
fdivs
push
cmp
mov
xchg
in
js
cmp
mov
mov
cmpb
icebp
jno
or
in
and
mov
sar
shld
mov
popa
or
xor
sbb
cmp
xor
aad
pop
mov
sub
pushf
test
enter
std
pop
rorb
jecxz
inc
mov
and
test
ret
lods
lea
fs
mov
test
in
out
inc
cmp
pop
rorb
out
popa
jg
sbb
cs
std
stc
xchg
roll
shlb
mov
sbb
lds
in
lret
push
ljmp
notb
mov
push
sub
js
mov
pop
ret
mov
lock
jno
jb
jo
sbbl
adc
push
mov
jbe
sub
loopne
mov
sub
stc
cmpsb
aad
scas
mov
notb
xchg
mov
xchg
inc
test
clc
and
test
dec
mov
inc
xchg
adc
dec
jo
nop
and
xor
push
jge
mov
cld
pop
dec
pushf
icebp
insl
les
mov
out
or
pop
lock
fs
or
and
stc
scas
push
testb
and
jp
adc
test
lock
sbb
divb
shll
dec
cmp
mov
xchg
add
add
sbb
add
and
sub
pop
mov
mov
in
sub
enter
mov
xor
dec
add
cmpl
into
loopne
jp
fs
jb
pop
out
in
adc
pop
add
mov
loope
jb
cmp
addr16
flds
pop
fstl
and
xor
add
mov
or
jecxz
mov
lds
or
xor
lea
addb
jno
icebp
dec
cltd
cmp
add
sbb
loopne
and
jb
cmc
fs
and
adc
jne
jae
je
xchg
stos
push
adc
sahf
mov
sub
adc
incb
dec
fdivrs
inc
xor
nop
adc
mov
test
ss
divb
das
into
cmp
adc
inc
jecxz
fcoml
cld
fadds
repz
cmc
outsl
and
mov
jl
jmp
sbb
or
cmp
sbb
and
jbe
mov
xor
adc
jno
aam
pop
dec
push
xorb
xchg
jle
sub
std
cmp
adc
jne
push
iret
insl
data16
cmpb
xchg
popa
std
shlb
sub
push
pop
dec
xchg
push
lret
or
outsb
mov
pop
js
push
pusha
or
xchg
pop
imul
iret
inc
pop
sbb
xor
div
or
pop
xor
lcall
imull
mov
xchg
jb
and
nop
jle
sub
lods
sbb
or
sub
les
cmpb
sub
mov
stos
orb
fldt
mov
sub
rclb
jmp
xchg
leave
orb
xor
ja
add
lock
shlb
sub
mov
insl
cmp
loopne
push
je
dec
dec
jl
sub
pop
movsl
xchg
xchg
test
test
notl
jbe
pushf
bnd
repnz
lods
add
subb
ret
xchg
lods
stc
and
pop
push
lret
mov
lret
mov
pop
movsl
mov
adc
clc
icebp
jns
xor
xor
sbb
jae
ret
mov
sbb
shrb
jg
into
cmp
int3
das
ljmp
mov
pop
xor
push
push
mov
jo
std
rorb
loop
and
push
push
jne
jmp
dec
push
sub
sub
out
jmp
mov
inc
mov
out
push
cwtl
jb
fidivrl
jno
shll
fwait
jne
mov
adcb
jo
in
push
lcall
add
mov
pop
cmp
mov
inc
or
js
je
hlt
xor
mov
popf
add
and
jg
fadds
sub
scas
nop
or
fldl2e
and
push
xchg
xchg
cltd
out
adc
bound
push
pusha
negb
xchg
int
mov
push
mov
nop
mov
and
lcall
cmp
or
mov
cld
insl
adc
ss
mov
inc
xor
mov
push
js
xor
xor
dec
and
mov
dec
cs
jge
or
enter
dec
loop
jb
rol
lock
sbb
and
or
ror
stos
sete
or
cwtl
xchg
js
pop
jo
add
cmp
push
push
testb
pop
dec
gs
jno
std
hlt
ret
xchg
push
dec
iret
inc
mov
xorl
jno
mov
sub
sbb
add
jmp
push
adc
push
pop
cmp
fdivs
dec
dec
add
and
sbb
xlat
or
mov
xlat
es
jb
mov
imul
imul
movsb
pusha
xchg
out
adc
fstps
testb
inc
add
push
icebp
test
adc
push
call
rolb
add
mov
loop
fwait
or
aad
jg
xor
jne
sub
repnz
sbb
push
dec
insl
adc
imul
call
jmp
and
xchg
sub
and
hlt
call
or
xor
repnz
out
mov
inc
scas
lds
out
pop
mov
or
push
fidivrs
jecxz
xchg
icebp
sbb
pusha
icebp
roll
mov
lock
mov
insl
hlt
or
push
sahf
jns
imull
adc
mov
pusha
lds
cmp
mov
not
pusha
insl
inc
pop
test
adc
js
insl
cmp
lock
adc
xor
push
sbb
sub
repz
jb
mov
adc
in
jg
or
inc
sbb
xchg
cmp
clc
cmp
nop
frstor
dec
aam
dec
lods
test
testl
adc
jg
mov
ss
or
pop
sub
repnz
sub
pop
and
xchg
incb
shl
sub
addb
mov
lock
outsl
add
clc
into
inc
clc
xor
push
fbstp
negb
xor
mov
pop
pop
cmpsb
movsl
cmp
fiaddl
and
div
and
xor
sbb
push
mov
popa
dec
dec
sub
movsb
pop
push
div
lods
push
and
mov
iret
and
xchg
out
cmp
cmp
popf
xor
and
mov
push
sbb
xchg
adc
mov
cmp
adcl
push
mov
aaa
lahf
push
cwtl
cli
mov
js
cmp
pushf
cwtl
shll
cmp
repnz
sub
f2xm1
dec
pop
push
cmp
notb
das
pop
jb
out
cmp
jb
loopne
mov
aaa
cmp
push
clc
adc
out
cmpsb
add
aas
mov
pusha
xchg
or
fisubl
sub
cli
lea
push
ljmp
cmpsl
push
int3
jle
cmpsb
inc
andl
aas
jmp
jp
ss
mov
jo
push
popa
jmp
xor
bound
inc
stc
fisubrs
jecxz
leave
adc
loope
insb
andb
cli
mov
xchg
lret
btrl
div
out
and
sub
pop
cmpsl
add
sbb
pop
out
cmp
iret
xor
into
mov
test
in
cwtl
popf
inc
fdivl
ret
mov
or
jae
mov
jns
out
clc
nop
adc
or
aad
dec
jp
gs
pop
and
mov
into
xor
mov
push
or
scas
inc
outsl
in
inc
adc
push
out
adc
mov
cmp
and
out
dec
pop
jp
adc
mov
sub
mov
jp
jae
inc
mov
cmp
addr16
mov
cmovbe
mov
mov
gs
pushf
dec
jno
subb
jo
jo
shlb
dec
repz
mov
mov
ret
cwtl
aam
xor
push
push
or
jne
mov
mov
jno
and
jno
es
xchg
test
fcompl
stc
das
xor
popf
adc
mov
dec
cmpsb
inc
add
lock
jecxz
dec
or
cmovg
xchg
sub
mov
jmp
ret
mov
js
xchg
insl
jno
mov
cmp
jg
or
push
cmp
inc
leave
ret
jne
shlb
stc
mov
scas
xor
jno
xor
idivl
cmp
testb
mov
cmc
mov
jb
mov
mov
cltd
add
cmpsb
jl
mov
and
mov
adc
mov
push
pop
adc
cmpsb
push
cmp
or
cmp
sbb
stc
add
icebp
nop
push
or
hlt
jb
clc
clc
stc
rcrl
inc
mulb
adc
lock
cwtl
mov
or
scas
adc
add
sub
xorl
cwtl
add
sbb
xchg
popf
pop
push
xor
push
inc
and
aad
bt
and
add
std
lahf
or
and
push
xchg
outsb
ficompl
icebp
das
outsl
mov
insl
inc
and
dec
xchg
add
daa
and
sbb
inc
outsb
aaa
push
pop
mov
into
es
scas
scas
insb
mov
mulb
jb
fisttpll
xchg
push
xor
jp
inc
or
test
ss
icebp
add
test
div
mov
lock
mov
stc
push
lret
repz
mov
add
pop
or
jb
xchg
mov
ja
clc
iret
mov
ret
sar
jbe
dec
je
scas
dec
insb
fisttpl
jnp
arpl
lret
rorb
out
mov
idivl
repnz
xchg
adc
ds
adc
outsl
mov
xor
and
insl
sti
mov
enter
xchg
aam
and
call
jne
mov
shl
lock
enter
sar
jno
mov
mov
call
jb
lock
cmp
and
cmp
dec
shlb
mov
mov
addr16
cltd
jno
pop
mov
push
xchg
je
push
xor
lcall
mov
xor
or
dec
or
pop
jb
dec
jp
daa
jge
or
mov
lahf
mov
loop
jns
xor
int3
ss
push
jb
jle
jg
mov
insl
mov
sub
sahf
jb
lahf
dec
xor
jo
pusha
and
push
fisubl
dec
xchg
sbb
sahf
cmp
and
in
mov
outsl
or
dec
lods
push
ret
and
sbbb
das
scas
in
icebp
add
movsl
les
mov
cmp
adc
mov
mov
and
cs
dec
fdivrl
pop
add
mov
fists
and
dec
xchg
ret
stc
fldenv
lcall
pop
or
or
inc
test
fiaddl
cltd
aad
or
pop
lret
cmp
add
mov
sbb
inc
fistps
into
xor
inc
and
xor
sub
je
fwait
bnd
cmp
daa
mov
or
hlt
cmp
dec
add
cmp
sbb
sbb
xchg
push
mov
int3
jp
push
or
or
les
mov
push
dec
cmp
dec
mov
adc
or
mov
mov
xor
push
dec
mov
cmpb
test
sarl
xchg
dec
repnz
daa
pop
mov
adc
int3
enter
jo
lcall
imul
sub
movsl
lds
mov
mov
dec
addb
neg
enter
adc
mov
fisubrl
daa
xchg
mov
push
push
popa
push
jg
cli
xchg
add
or
es
mov
dec
cwtl
push
push
push
rorl
cmp
inc
push
icebp
insb
inc
ret
dec
into
pop
sub
lock
js
addr16
addl
fs
mov
push
sbb
into
scas
pop
or
push
repz
jle
xor
jb
icebp
dec
insb
mov
lods
cwtl
aam
out
cli
dec
sub
xchg
sub
inc
xor
repnz
dec
inc
ja
repnz
es
orb
jb
jbe
aad
lcall
cmc
test
aas
js
lcall
pusha
cmp
inc
pop
lret
std
mov
lret
fisttpl
cmp
and
push
movsb
jle
andb
aaa
out
aad
test
xor
mov
std
dec
sahf
adcb
inc
push
pop
enter
leave
out
shlb
and
push
cmp
mov
xor
pop
stc
pop
insb
lret
ficoml
xor
cmp
mov
int
iret
mov
or
and
dec
mov
lahf
pop
mov
scas
xor
enter
lcall
xchg
adcb
je
push
adc
aaa
jp
mov
push
pop
sbb
mov
push
jp
add
dec
or
sbbb
jl
lds
call
push
icebp
inc
stos
jnp
sub
xor
addr16
xor
mov
mov
jne
sarl
rolb
push
mov
lock
cmpsl
js
xchg
jae
adc
into
icebp
jne
repnz
stc
adc
adc
push
icebp
xor
inc
cli
mov
movsl
cmp
fnstsw
jns
rcrl
cmp
outsb
jo
lock
aad
shrb
or
sbb
xchg
stc
fidivrs
add
icebp
pusha
imul
jle
test
lock
dec
mov
sub
cmp
rcll
test
ret
xchg
or
jle
adc
scas
jae
mov
sbb
mov
clc
mov
add
mov
mov
sub
mov
cmp
rcrb
cmp
inc
je
push
or
jo
movsl
jge
mov
aam
mov
push
sub
adc
jp
mov
popf
mov
sbb
cmp
std
out
add
push
jl
dec
mov
and
call
cmp
cli
rolb
mov
cltd
sahf
xchg
lcall
and
push
or
pop
test
out
add
fnstcw
dec
rcll
in
in
lret
insb
adc
lahf
icebp
iret
fldcw
nop
insl
xor
dec
mov
and
sbb
xor
clts
pop
add
xchg
iret
daa
in
xor
scas
add
dec
loop
mov
add
icebp
push
xchg
xchg
dec
cmp
push
xor
xlat
add
push
daa
or
dec
xor
and
out
aad
mov
jle
or
loope
mov
add
and
orb
test
pop
imul
rolb
enter
adc
jge
std
cmp
sbb
sbb
jmp
ret
inc
cmp
scas
add
push
stc
mov
mov
pop
inc
push
adc
clc
cmpb
aad
jnp
cli
ret
xchg
cltd
pop
push
dec
mov
imul
push
inc
icebp
mov
std
lret
xor
rorb
in
inc
adc
pop
xor
sahf
jmp
push
je
sbb
sahf
inc
pop
xor
pop
insl
xchg
ljmp
add
aam
add
or
jns
cmpsb
and
sub
and
pusha
icebp
add
loop
xchg
shll
nop
jl
testl
subb
add
addr16
xor
out
sbb
cmp
lcall
push
mov
fs
movsl
out
dec
sbb
lods
jb
jbe
fsub
icebp
jmp
lcall
dec
movsl
xlat
xchg
mov
cmp
call
sbb
xchg
out
jmp
add
stc
pop
cmc
sahf
mov
cmpsb
mov
mov
cmp
in
mov
test
int3
icebp
xor
jae
pop
xor
repnz
mov
loop
pop
dec
jo
xchg
sbb
addl
cmp
cmp
test
jno
loopne
fidivs
subl
and
test
aad
adc
cli
push
jb
jno
xor
and
icebp
test
jae
add
popf
inc
bnd
add
out
addb
pop
hlt
pop
mov
mov
insl
inc
out
outsl
inc
mov
dec
inc
and
das
in
das
xorb
repnz
or
or
sahf
xor
lcall
mov
jmp
and
out
addr16
xor
sbb
mov
jg
inc
cwtl
push
sub
lock
mov
adc
out
mov
out
xchg
aad
fstpl
mov
xchg
mov
inc
dec
inc
sti
fstpt
or
push
std
shl
lret
ljmp
sub
or
arpl
ljmp
add
mov
cmc
nop
iret
loop
xor
notl
push
jns
mov
jno
mov
pop
insl
mov
test
imul
or
stos
sub
cmp
addb
leave
inc
push
cmpsb
push
data16
out
cmp
sub
push
repnz
repnz
cmpsl
call
xor
repz
repz
divb
ret
shlb
cmpsl
ret
mov
in
mov
add
cltd
xchg
cmpsl
mov
mov
or
pop
jmp
push
test
mov
and
jp
xacquire
lahf
and
dec
pop
pop
jge
xor
data16
addr16
xchg
dec
sbb
lea
ret
mov
fsubs
inc
jne
jo
cmpsb
insb
jo
sbb
sub
icebp
pop
test
dec
fs
or
or
lea
sbb
jo
imull
fbld
mov
pop
jo
jle
fdivs
mov
sahf
and
fwait
jl
xchg
cltd
ret
cmp
sahf
paddsw
fidivrl
mov
stc
mov
lret
push
jb
jle
mov
std
sub
sub
xchg
das
sub
xor
inc
mov
test
and
std
cmpsl
into
jo
add
mov
and
jae
cmp
ret
dec
std
sub
lahf
mov
daa
repnz
adc
sbb
fdiv
add
sub
mov
add
sysret
in
jne
add
es
mov
pop
or
push
lock
loop
sbbl
jnp
inc
dec
lock
jbe
mov
add
shll
push
fs
jmp
push
gs
xchg
int
shl
adc
scas
popa
pop
pop
fsubrl
mov
movsl
cli
test
or
data16
push
adc
lock
lock
je
mov
cli
fimull
sahf
xor
mov
add
adc
inc
cli
or
adc
pop
push
rcll
jo
add
cmpsl
int3
add
pop
jl
icebp
loopne
nop
insl
cmp
addr16
aam
ret
jl
hlt
pushf
scas
call
mov
mov
jo
std
pop
repz
and
dec
adc
xchg
lock
movsb
std
jl
lock
inc
xor
xlat
mov
pop
cmp
in
stos
mov
cmp
mov
les
push
cli
shl
das
jl
push
xor
jae
mov
mov
outsl
push
mov
xor
adc
cmp
popa
mov
fsubrs
mov
dec
or
std
push
inc
and
mov
or
cmp
xchg
in
ds
xchg
insb
movsb
or
adc
xchg
ficompl
push
pop
jecxz
hlt
cltd
push
aas
sub
add
or
push
add
xchg
or
inc
inc
sti
lcall
inc
adc
pop
xor
sbb
fistpl
dec
mov
sub
push
adc
dec
scas
imul
test
out
adcl
es
xor
xor
hlt
xor
es
getsec
pop
xor
flds
in
or
pop
pop
hlt
inc
pop
push
and
fwait
hlt
dec
mov
stc
hlt
and
aad
das
jne
pop
inc
insl
scas
xchg
popa
js
mov
movsl
jno
sti
enter
adc
cmp
mov
adc
icebp
in
cmp
inc
and
lret
imulb
dec
repz
dec
ret
je
hlt
jecxz
push
jp
lods
add
inc
enter
lret
bound
add
je
mov
mov
push
inc
mov
jns
adc
icebp
add
xchg
adc
cmp
mov
gs
js
mov
cmpsl
aad
je
notb
mov
jns
ljmp
and
or
pop
push
inc
push
mov
leave
shll
cld
es
mov
shll
push
les
push
pop
stc
xor
xchg
cmpb
inc
add
mov
sub
jp
cld
mov
xor
mov
or
lret
push
lods
stos
out
push
mov
sub
or
stos
push
lcall
orb
stc
mov
jo
adc
dec
sahf
shr
lea
dec
mov
push
pop
lock
push
rep
push
jp
jl
int
je
fdivl
dec
jns
icebp
hlt
dec
imul
insl
xchg
jb
lea
jle
dec
cmp
imul
sbb
jl
jbe
mov
bnd
aam
mov
ss
sbb
jno
jns
xor
mov
sub
dec
pop
cmpsb
cmp
iret
shlb
mov
int3
out
adc
sbb
mov
mov
mov
ja
adc
pop
or
outsb
cmp
mov
or
mov
test
inc
xchg
repz
or
sarb
add
mov
gs
add
aam
adc
movsb
cmp
xchg
mov
xor
jge
push
clc
repz
push
or
jae
adc
lret
mov
inc
insl
xor
fisttpl
pushf
enter
aad
cld
lock
hlt
js
dec
int3
adc
pusha
ja
push
fists
mov
jle
pop
nop
mov
adc
pusha
sub
mov
ja
add
jmp
cli
out
jmp
inc
aaa
sti
mov
lahf
adc
repz
cltd
mov
stos
andl
orb
mov
mull
lret
dec
mov
pop
fld
inc
mov
loope
imul
clc
push
mov
adc
and
lds
mov
les
insl
cwtl
pop
push
test
sbb
adc
jne
xor
fsubs
lcall
fcmovbe
ljmp
js
cmp
mov
icebp
and
mov
fnstcw
leave
jno
or
ljmp
xchg
xor
lods
dec
sbb
es
pusha
popf
mov
loop
bound
and
out
pop
cmpsb
hlt
xchg
out
add
xor
cmp
aad
pop
dec
outsl
sti
shlb
push
push
nop
lock
mov
js
int3
sbbb
icebp
mov
jae
dec
jb
nop
hlt
dec
and
adc
jns
mov
orb
mov
clc
jl
or
test
mov
and
inc
mov
int3
lret
mov
dec
mov
addl
inc
xor
icebp
cli
lds
and
mov
out
rcrb
mov
mov
stc
outsl
repnz
pop
sarb
xchg
sbb
push
or
add
fdivrs
subb
xchg
int
dec
mov
mov
jb
dec
add
jne
add
movsl
and
jnp
add
outsb
xorb
fadd
movsl
cld
in
add
jo
mov
and
dec
mov
sarb
add
jne
push
cli
add
mov
mov
insl
jl
or
dec
rcrl
dec
adc
mov
fisubrs
pop
sbb
dec
imul
inc
push
sahf
imul
nop
mov
and
je
push
and
repnz
sarb
and
mov
int3
sbb
jnp
and
outsl
jp
add
push
repz
sbb
mov
insl
xlat
cmp
cmp
xchg
sub
cli
jo
or
scas
sbb
xchg
xchg
jmp
jb
cmpl
dec
xchg
in
aaa
xchg
or
adc
shrb
push
std
icebp
dec
jl
adc
dec
loope
cmp
lods
dec
push
repz
jno
lods
fcomp
loope
add
pop
mov
push
push
jae
imul
dec
or
sbb
out
fmuls
dec
jae
lcall
dec
outsl
inc
leave
enter
pop
push
jo
iret
jl
mov
inc
dec
lcall
inc
out
scas
out
cmpsb
cld
push
xor
add
adc
cmp
je
into
ret
lahf
test
push
or
cli
sahf
cmp
daa
sub
xor
add
jo
mov
adc
xchg
fimull
lahf
inc
and
or
mov
jl
mov
mov
dec
loop
call
xor
sbb
test
repz
xor
mov
incb
popf
push
and
adc
or
sub
add
xchg
cmp
mov
loop
jne
jg
xchg
das
loope
xor
mov
aas
test
mov
test
jle
adcl
std
hlt
fimull
inc
sub
cmp
jnp
add
fbstp
int3
sbb
dec
or
je
nop
arpl
push
jmp
sahf
sub
clc
scas
mov
and
jle
cmp
fadds
roll
lret
and
inc
xchg
cwtl
jno
push
out
xor
call
scas
mov
das
cmp
jo
pop
jnp
stos
ljmp
lret
mov
mov
mov
cmp
jp
adc
imul
push
mov
adcl
mov
adcl
mov
adc
mov
insb
adc
push
insb
lret
inc
cmp
adcl
icebp
dec
inc
inc
inc
shl
cmp
cmpb
pop
xlat
das
clc
or
or
mov
test
into
rcrl
hlt
sub
xchg
sbbl
pop
mov
sbb
ss
ljmp
insb
sbb
loop
mov
dec
mov
mov
adc
aas
xor
cld
icebp
dec
mov
shl
mov
mov
adc
cmp
dec
dec
cmpsb
dec
lods
jno
das
jge
rcrl
or
rep
pop
add
cwtl
lret
fs
insl
dec
xor
add
mov
test
js
insl
fwait
jbe
inc
mov
jae
jb
xor
jge
inc
fistl
cmp
mov
ret
push
jae
sti
les
xchg
shrl
xor
rcrb
popa
xor
insb
add
and
and
xchg
aad
cld
mov
lds
sub
fisttpl
cltd
sbb
adc
xor
and
inc
enter
hlt
push
pop
imul
jmp
and
mov
and
or
xlat
nop
inc
inc
ds
hlt
mov
lahf
lock
jle
pop
sbb
xchg
sti
inc
cld
test
repz
paddq
lret
aaa
add
les
jmp
push
add
cli
add
cmp
mov
push
inc
mov
aam
inc
ds
mov
add
insb
or
add
iret
hlt
test
fdivrp
push
les
xchg
mov
aas
dec
jle
mov
pop
cwtl
mov
mov
out
aam
out
cmc
add
push
repz
and
jnp
inc
xchg
lcall
sub
sti
aad
cmp
pop
cli
dec
jg
cmp
enter
in
js
subl
dec
aam
repnz
inc
out
fs
fildll
or
js
clc
or
scas
repnz
push
add
aam
push
leave
cltd
or
jbe
adc
movsb
sbb
sarl
std
lock
rcrl
mov
and
jnp
lock
icebp
sbb
in
add
fs
xor
repnz
sti
ss
std
pop
into
loopne
xor
jno
jns
add
adc
pop
les
xchg
mov
pop
imul
mov
xchg
fldenv
mov
xor
loopne
or
repnz
aad
sub
pushf
hlt
jl
inc
icebp
or
rolb
in
push
inc
scas
inc
ret
sahf
in
add
add
and
push
scas
jb
sbb
cmp
sub
jbe
sbb
imul
inc
add
or
fsubp
scas
pop
addr16
push
adc
inc
sahf
ret
repz
lock
loopne
shlb
addl
ss
aas
clc
and
mov
int3
lea
inc
cmp
mov
bound
cmp
pop
into
mov
pop
sub
mov
ds
cwtl
les
adc
inc
pop
lret
and
ljmp
push
jle
push
mov
push
inc
loope
pusha
xchg
sub
call
std
dec
mov
or
icebp
clc
shrl
insl
push
adcb
xchg
aam
out
aam
or
lret
mov
pop
and
aam
notb
jae
add
repnz
cmp
je
hlt
lock
jp
lret
scas
pushf
add
add
icebp
push
nop
pusha
pslld
bound
xor
mov
imul
ret
dec
aaa
push
mov
add
hlt
pop
mov
or
mov
outsb
cmpsl
or
fwait
cmp
repnz
sub
sbb
adc
jns
push
add
jne
jo
mov
xorb
movsl
mov
cltd
jae
xor
je
add
shlb
and
mov
xchg
and
mov
lcall
dec
into
fistps
xor
fnsave
ss
fidivrl
sub
cld
pushf
or
xor
push
jp
mov
orl
hlt
adc
mov
jo
ljmp
inc
jns
repnz
mov
mov
lcall
inc
shlb
add
xchg
sti
jb
sar
ret
sub
mov
mov
jno
out
mov
daa
mov
clc
lock
sbb
psllw
xchg
push
pusha
movsl
aam
xchg
insb
test
jnp
movb
neg
mov
or
pop
fistpll
cmp
ret
mov
pop
mov
int3
test
cmpsb
jle
fidivrl
inc
push
mov
sbb
lods
mov
pop
mov
inc
loopne
lods
scas
mov
and
js
sub
js
xor
cmp
or
cwtl
mov
or
xor
test
outsl
ficomps
in
lahf
cs
dec
xchg
mov
cmp
push
jle
lea
andl
jo
pop
xchg
les
fnstcw
mov
testl
add
icebp
es
sub
mov
sbb
subb
sbb
nop
test
push
fsubrl
inc
fidivl
mov
es
lret
ficompl
jb
mov
mov
adc
sbb
mov
insl
repz
cmp
inc
insl
aam
push
test
js
add
xor
js
cmp
stos
push
add
lcall
xor
xor
sbb
add
fwait
mov
jb
inc
sub
movsb
and
adc
sbbb
fimull
je
cmpsl
add
sub
add
jno
xor
and
inc
aad
sub
outsb
stos
andb
push
cmpsl
push
and
sub
out
inc
mov
rclb
mov
fstpt
jne
inc
pushf
push
mov
testb
repnz
mov
add
push
cwtl
sahf
jae
sbb
push
cmp
bound
rcll
clc
leave
push
and
lcall
test
inc
mov
push
out
or
inc
out
in
into
inc
idivl
mov
lock
xchg
mov
iret
and
mov
xor
mov
jl
cmpsl
mov
sbb
mov
or
pop
or
lock
out
mov
dec
or
int3
adc
cmp
mov
inc
push
cmpsl
mov
inc
and
adc
jo
je
dec
or
cmc
cmp
push
pop
fwait
inc
add
fwait
xorb
imul
mov
scas
pop
pop
mov
add
mov
insl
and
sahf
jae
cmp
jbe
inc
or
cmp
cmp
mov
xor
out
orb
inc
mov
test
imul
add
leave
push
jp
mov
icebp
mov
push
pop
or
jnp
cmpsl
push
icebp
xor
sbb
es
lock
push
xchg
jmp
ljmp
push
xchg
push
ljmp
cmpsb
cmp
mov
jo
mov
xor
jo
jge
jmp
daa
inc
cmpb
pusha
xor
mov
jb
or
inc
adc
jae
call
cmc
jae
test
popf
mov
inc
jae
addl
mov
pop
jmp
cmp
add
add
cmp
sbb
fdivp
xchg
sbb
mov
xchg
jl
cs
sub
es
lahf
or
xchg
andb
rclb
mov
in
jne
mov
int
fnstsw
arpl
or
add
xchg
pop
xchg
mov
aam
and
ret
mov
cld
sti
xor
dec
sbb
add
popa
outsb
mov
adc
jl
out
fs
xchg
add
push
lods
xor
xor
cmpsw
cmp
jle
icebp
jp
ret
pushf
fidivrs
mov
das
shl
int3
gs
test
int
and
mov
push
cs
add
lea
loop
inc
imul
add
test
lret
fsts
iret
stos
sbb
lret
fcompl
push
mov
push
xchg
dec
add
xor
packuswb
jecxz
lahf
jns
mov
movsb
addr16
stc
lea
rorb
std
lcall
mov
push
insl
mov
aam
bound
cs
ret
pop
adc
push
push
loop
cwtl
cmp
xchg
xchg
add
xor
nop
jp
or
std
xlat
loop
test
mov
xlat
aam
cmp
scas
mov
cmp
out
jmp
mov
pop
cli
popa
test
leave
or
es
mov
xchg
insl
adc
mov
jb
repz
nop
sbb
jmp
mov
or
cmpsl
cmp
mov
add
pop
dec
pop
xchg
icebp
pop
jp
mov
je
sar
mov
lds
jecxz
push
xchg
dec
repz
lods
adc
lock
jno
xor
push
cmp
or
mov
lret
push
out
xor
in
push
xchg
dec
jg
jnp
adcb
inc
sub
pop
sahf
ret
fdivrl
test
mov
and
mov
in
xor
inc
xor
rcrb
add
and
dec
clc
push
xorb
adc
mov
nop
hlt
int
out
inc
fidivs
test
dec
adc
lds
jns
loop
leave
adc
sbb
testb
mov
sbb
lock
shlb
out
add
pushf
dec
xchg
mov
jp
cmp
fldcw
or
enter
mov
out
inc
mov
mov
push
cmp
bound
div
sbb
sub
orl
adc
clc
add
and
push
pop
xchg
lret
into
js
mov
pextrw
xchg
cwtl
push
add
xchg
and
stc
loop
test
push
cs
xor
inc
bnd
mov
pop
push
pop
sub
mov
cmp
insl
inc
adc
ds
inc
movsl
xchg
xchg
sub
sarl
es
xchg
adcb
sub
mov
push
out
loopne
cwtl
sub
out
jns
mov
jne
mov
arpl
js
hlt
loop
add
sti
test
lods
lahf
and
test
lret
aas
mov
call
movsl
scas
test
test
cmp
push
jb
and
push
push
xor
lock
jl
mov
jle
push
mov
pop
rol
repz
cmc
jno
or
out
mov
hlt
xor
xchg
mov
stc
test
repnz
je
mov
rcr
xor
inc
icebp
lcall
sub
inc
ja
and
fdiv
dec
shlb
mov
ljmp
icebp
fists
jle
pop
sbb
fadds
sub
fcoml
lock
loopne
jbe
xor
cmc
loopne
enter
aas
jns
rolb
aaa
data16
adc
aas
pop
mov
cmp
pushf
xor
xor
push
lcall
rcll
shlb
imul
xor
test
cltd
addl
mov
pop
push
outsl
nop
mov
call
nop
mov
mov
je
addb
out
in
push
cwtl
jb
mov
mov
jbe
cwtl
repz
pushf
jne
or
jge
lret
mov
rcrl
repz
cmp
aam
xchg
sbb
inc
stos
dec
pop
mov
cmpsb
das
dec
bound
insl
pushf
push
sub
cli
les
pushf
filds
sbb
mov
cmp
push
ret
repnz
fwait
add
inc
pop
call
mov
lock
lret
push
hlt
daa
mov
icebp
pop
gs
fbstp
dec
mov
ja
cmp
cld
ds
or
add
jne
xchg
push
adc
mov
jl
push
mov
xorl
cmp
cmpsb
push
stc
mov
lcall
mov
inc
ret
or
jns
cmp
push
pop
ja
dec
addr16
ret
ror
int
xorb
jp
popa
cmpsb
ja
mov
sti
jecxz
sub
js
in
movsl
push
dec
dec
cld
repz
xchg
popa
xchg
and
adcb
add
pop
ljmp
in
cmp
push
sub
gs
sbb
push
nop
addl
outsb
addl
arpl
pop
xor
arpl
mov
loope
call
ficomps
jne
icebp
ss
mov
push
adc
mov
cwtl
dec
xor
xchg
repnz
iret
les
fidivl
scas
cltd
in
repnz
ret
cwtl
outsb
pusha
stc
enter
aaa
lock
mov
scas
hlt
mov
fistps
shll
icebp
xchg
ret
jb
cwtl
adc
and
vpunpckhqdq
sbb
out
insl
mov
inc
inc
lahf
stc
mov
lock
or
xchg
nop
add
lcall
jge
mov
inc
cwtl
std
pop
rcrb
test
sub
add
xor
inc
addr16
icebp
leave
mov
ret
cmp
fdiv
adc
popa
cld
repz
sub
or
xor
dec
mov
mov
rorb
cmpb
xor
nop
ss
mov
rolb
insl
push
or
outsb
adc
pop
rolb
iret
add
dec
gs
or
push
add
add
loop
push
and
jno
ret
xchg
jo
daa
jb
add
adc
pop
out
mov
data16
push
lods
popa
lds
addr16
or
adc
adc
cld
ja
mov
addl
repnz
add
inc
subb
push
cwtl
lock
std
icebp
rol
repz
push
mov
in
mov
std
xchg
xchg
pusha
dec
lds
pop
mov
sbb
xchg
sub
lock
insb
jl
in
add
js,pn
inc
xor
in
cltd
lods
push
jge
mov
push
adc
mov
mov
mov
mov
sub
jp
jmp
add
cmp
adc
mov
ss
jmp
cmp
sti
mov
sbbl
mov
cmc
cmpsb
cs
inc
or
jge
dec
xor
stos
or
pop
fcmovne
inc
add
jle
mov
leave
aam
jecxz
fs
push
pusha
or
nop
pop
or
lods
inc
stc
jp
adcb
mov
cmp
or
pusha
inc
mov
push
fwait
cmp
mov
inc
repz
push
ss
jo
mov
jno
add
sub
or
add
or
sahf
or
mov
or
js
mov
pop
sub
test
mov
sahf
sub
mov
cmpb
jp
push
cmp
lods
push
mov
and
cmp
pop
mov
adc
xor
pop
mov
icebp
mov
pop
jb
enter
repz
pop
mov
mov
mov
test
pop
adc
mov
push
sub
jno
aaa
sub
shl
xchg
fisubl
popa
mov
pop
push
xchg
cmp
data16
add
dec
pusha
jmp
mov
out
in
jbe
adc
sbb
pop
leave
cmp
andl
or
sahf
xchg
xor
pop
hlt
pop
loop
push
loop
push
push
xchg
lahf
dec
movsb
out
mov
filds
mov
push
push
mov
les
inc
mov
cmp
adc
cmp
stos
xor
inc
in
xchg
jnp
dec
add
test
jge
push
push
leave
add
roll
mov
push
pop
pop
addl
bound
xor
mov
push
nop
or
or
movsl
adc
sub
adc
mov
pop
mov
mov
cmc
icebp
cmpsb
inc
insl
push
jnp
cs
push
into
add
xchg
jnp
push
leave
movsl
loope
mov
and
lahf
sub
test
into
in
insl
dec
loopne
or
xchg
mov
cld
cltd
dec
stc
cmpsb
lea
inc
stc
pop
jne
sbb
mov
and
add
xchg
fmull
mov
int3
aam
mov
cmpl
lock
cmpsb
js
loopne
mov
ja
pop
mov
inc
addr16
rclb
fiadds
divb
pop
dec
add
and
or
pop
rcr
clc
bound
mov
pusha
jbe
in
clc
repz
add
cmp
jp
repnz
cmp
add
repz
add
jae
adc
pusha
mov
xor
push
xorb
rcrl
js,pn
adc
insl
idivl
mov
xor
es
cltd
or
scas
sbb
push
inc
add
dec
dec
xchg
adcl
and
mov
adc
pop
xchg
adc
xchg
inc
add
xchg
imul
jo
or
mov
cmpb
inc
cmp
sub
mov
cmpsl
adc
or
in
lret
push
mov
mov
outsl
sub
enter
sub
jno
repz
jp
or
dec
mov
mov
icebp
insl
pop
xchg
xor
ror
xchg
adcb
loop
adc
int3
push
fmull
out
mov
decb
orb
js
dec
insl
cld
scas
movsl
push
vfrczps
jnp
aaa
or
adc
mov
lock
jno
adc
dec
push
fisttps
xor
call
int
push
subb
popa
fdivs
lret
sbb
adc
adc
scas
shl
loope
sub
push
and
icebp
fs
sub
lret
test
out
jecxz
sub
repnz
pop
jne
testl
dec
jb
rcll
outsb
mov
adc
lock
mov
rcll
nop
in
mov
or
sbb
lock
inc
aad
or
inc
push
ljmp
insl
push
jp
add
push
fsts
fwait
lcall
jae
jmp
aaa
jae
fimull
push
fdivp
mov
mov
sbb
mov
sub
cmp
das
dec
clc
xchg
enter
push
nop
mov
icebp
lock
inc
fnstcw
mov
js
outsb
cmp
mov
lock
icebp
icebp
xchg
push
popa
adcb
adc
rcll
aas
aas
and
cmp
cs
pop
rcrl
ret
decl
dec
or
inc
cmp
sub
popa
cmc
mov
ss
dec
cmp
test
js
jo
push
mov
pusha
or
mov
enter
add
jo
enter
dec
inc
add
mov
jnp
push
test
negl
jne
ds
sarb
adc
inc
jae
sub
or
pushf
popf
shrb
fs
xchg
sub
imul
std
and
fs
mov
push
fimull
cs
call
sub
jno
nop
push
xor
push
mov
outsl
sub
mov
adc
repz
push
iret
imul
pop
out
cmovb
and
pop
data16
xor
lret
jecxz
mov
sbb
in
cmpsb
jno
jae
imul
jo
loopne
rcll
add
dec
and
mov
mov
test
scas
pop
push
std
adc
imul
inc
push
mov
pop
add
cs
cmp
jno
jle
jo
jle
and
cld
and
rcl
jbe
and
mov
jmp
lret
notl
push
pop
mov
aaa
hlt
js
or
stos
nop
scas
inc
sarb
inc
add
push
insl
icebp
mov
push
in
in
cs
xchg
jns
stc
mov
es
mov
and
sub
stos
stc
sub
cltd
js
cld
jge
lods
jle
mov
cwtl
sbb
push
testb
cli
jge
and
push
push
loope
fwait
int3
das
shrb
mov
adc
cwtl
pop
jb
dec
xor
popf
lcall
outsl
xor
jno
add
sbb
std
push
xor
outsb
lock
mov
fidivl
fdivp
out
hlt
xlat
mov
xchg
popa
adc
cmp
cmp
mov
loope
or
add
and
push
packuswb
jne
xchg
dec
imul
pop
mov
xor
mov
push
pop
lret
jno
xor
jmp
lods
push
add
push
pop
pop
pop
sbb
data16
push
mov
jg
xchg
mov
cmp
js
push
sbb
xor
push
test
mov
mov
iret
scas
inc
sub
jmp
fwait
lret
xor
pop
sbb
in
sub
js
movsb
xchg
repz
repnz
fisttpll
roll
jle
aam
inc
int
orb
sbb
and
inc
lahf
test
pop
pop
fnstenv
adc
mov
mov
mov
aam
adc
push
js
divl
and
leave
imul
mov
jno
adc
mov
lcall
sbb
add
ss
idiv
es
and
test
dec
lock
dec
dec
bound
xor
shlb
cwtl
sbb
mov
lock
ljmp
mov
out
and
mov
xchg
pop
xor
je
lock
jne
jne
aad
push
lea
test
push
and
ljmp
inc
xchg
imul
mov
stc
ret
ja
xchg
hlt
mov
aad
sub
push
xor
movsb
or
shrb
lret
xor
jle
sbb
lock
sbb
hlt
clc
push
loopne
adc
lahf
xor
jnp
orl
mov
cmc
dec
mov
jae
nop
and
repz
jbe
out
mov
ja
and
adc
repz
cld
cmp
mov
add
or
mov
sub
jg
lock
je
inc
rolb
test
push
xor
sub
xor
fcoms
mov
cmp
pop
inc
jne
jno
or
fsubl
or
hlt
shrl
std
push
mov
inc
fsubrp
jbe
out
cmpsb
scas
and
add
test
mov
push
xor
fcoms
ret
inc
push
cmp
sub
insl
push
jge
and
loop
mov
cmp
stos
jbe
stos
mov
dec
xor
pop
ja
mov
inc
sub
xchg
mov
mov
out
cmp
mov
cmp
push
sbb
ret
or
hlt
out
jb
adc
add
dec
push
or
jae
sub
push
mov
test
or
fistl
mov
push
dec
adc
xor
xchg
insl
hlt
and
pop
mov
xor
mov
mov
inc
xchg
clc
dec
mov
xchg
mulb
ret
mov
and
jp
addr16
sub
jbe
inc
push
sar
sbb
pop
inc
gs
iret
add
insl
clc
inc
sahf
cli
adc
aam
jle
dec
cmp
out
mov
insl
pushf
push
sbb
and
nop
xchg
and
int3
movl
pop
push
jno
push
out
pop
out
test
jle
hlt
ret
push
push
pop
orl
sbb
lea
push
or
das
and
push
jge
stc
out
mov
jge
pop
dec
adc
push
sarl
and
clc
mov
pop
aam
pop
cmpsb
lret
adc
lock
pop
sbb
dec
jg
dec
pushf
cltd
jb
pop
dec
jle
add
lock
mov
cmp
cmp
rolb
xchg
andb
dec
xchg
fldl
frstpm(287
dec
imul
sub
movsl
lock
jns
cld
stos
sub
pop
bswap
and
cmp
pusha
xchg
mov
pop
dec
aas
xchg
repnz
ja
les
mov
js
jb
mov
cmc
cmpsb
and
jecxz
orb
push
push
insl
int3
xchg
ds
mov
pop
lahf
cmc
xchg
and
inc
add
aad
loop
sahf
leave
ss
clc
cmc
pop
and
js
ja
jne
push
dec
dec
notrack
cld
jno
sub
inc
or
in
ljmp
popf
cwtl
push
aaa
outsl
adc
mov
and
stos
and
cmp
jbe
js
fs
fs
inc
add
sahf
subb
cli
rcll
fs
push
aad
jle
sub
data16
ss
inc
andl
push
sahf
icebp
jp
mov
popa
nop
and
je
out
adc
testb
enter
aaa
add
pop
clc
fs
clc
lock
inc
nop
out
or
shlb
dec
hlt
mov
xor
testl
mov
repnz
dec
fnclex
cs
pop
sahf
pop
int
and
dec
xchg
js
ja
push
push
and
and
jmp
and
repz
insl
fcmovnu
sbb
mov
cwtl
jle
xchg
ja
xor
sub
cs
aad
scas
adc
sub
and
cmpsb
or
adcl
sbb
fstpl
add
mov
cmp
fnstsw
pop
xchg
mov
lcall
sahf
push
ds
fildll
xchg
jg
insl
out
out
mov
xchg
fwait
mov
jae
pop
repz
pushf
jge
leave
js
fdivrl
sub
mov
repz
inc
std
insb
adcl
jp
sbb
xor
mov
dec
lea
aam
mov
icebp
aas
push
inc
das
mov
test
ret
jno
aaa
frstor
aaa
jbe
imul
fldenv
divb
or
fs
and
cmp
sub
icebp
icebp
push
cli
lock
sahf
dec
lock
jno
dec
mov
mov
push
loop
adc
mov
xlat
shl
ficoml
imul
fcmovnu
jg
movsb
lahf
inc
push
ret
add
mov
mov
cmp
sbb
pop
or
mov
mov
xchg
mov
testl
int
inc
scas
push
outsb
imul
jb
xchg
push
mov
mov
xchg
jne
outsl
imul
movsl
aad
nop
mov
adc
cmp
pop
nop
clc
pusha
or
cmp
shlb
and
cmp
pop
dec
iret
dec
stos
stc
arpl
lcall
outsl
adc
dec
jno
add
in
imul
push
mov
cmp
sub
pop
jne
mov
dec
fisttpl
inc
mov
sub
adc
sub
cmp
mov
lock
push
sbb
and
xor
sbb
jmp
xor
js
and
addr16
fwait
xor
pop
cmp
das
mov
jns,pn
adc
sbb
stos
out
sbb
pop
mov
imul
popa
lcall
jbe
xchg
scas
movl
das
std
dec
movsl
inc
sub
dec
cld
push
andl
xor
js
xor
adc
lock
ficoms
call
es
ret
xchg
pop
int
bound
add
popa
xchg
xchg
shlb
lock
pop
xor
popf
and
cmpsl
jbe
xor
mov
imul
mov
aad
mov
mov
pop
pop
mov
xchg
out
icebp
adc
or
jl
or
jae
mov
or
inc
pop
or
std
and
jp
ds
pop
pushf
mov
addl
sbb
mov
inc
subl
jle
adc
cmc
popa
jbe
lods
and
mov
lea
inc
cmc
jno
arpl
ret
out
jge
pop
jo
push
jp
std
imul
idivb
imul
ss
jl
mov
js
hlt
mov
xchg
or
gs
fs
jp
mov
aam
push
push
repnz
cld
pop
pushf
popf
cmp
mov
cwtl
jg
test
jle
repnz
clc
icebp
jle
insl
xlat
mov
and
cld
push
mov
xor
xor
sbb
movsl
push
cmp
mov
aam
sbb
popa
inc
fimuls
pushf
jno
imulb
insl
mov
xchg
jns
jmp
lret
jg
ret
decb
testb
ds
inc
cwtl
mov
push
jb
fldl
jg
xchg
cmp
mov
nop
or
std
adc
mov
jg
adc
push
sarl
pop
test
jge
push
clc
addr16
rcrl
jge
cld
pop
outsl
push
or
fidivl
or
fstpt
or
add
adc
mov
xchg
js
push
lahf
roll
jae
pusha
mov
test
and
fs
push
roll
test
xchg
pop
mov
cmp
push
mov
or
adc
cmp
push
repnz
cmpl
jb
rolb
lock
icebp
push
jb
repnz
jne
cmc
push
jbe
testb
js
clc
mov
stc
push
jp
cli
sbbl
or
and
add
cmp
repz
jle
mov
push
mov
xchg
cmp
push
je
pop
sbb
jne
xchg
or
dec
xchg
lock
jo
sub
jb
test
clc
ss
adc
cmpsb
adc
adc
and
push
add
and
jbe
fists
adc
xor
pop
pop
lock
mov
push
or
add
js
ds
adc
adc
icebp
or
jae
adc
adc
in
js
or
icebp
mov
or
ds
adc
mov
mov
mov
push
adc
mov
fildl
vmread
lock
sarl
std
js
pop
cmp
int3
mov
xor
adc
nop
cmpb
push
jbe
outsb
addb
add
sub
jb
cli
jae
cmpb
push
jge
cmpsl
add
cmpb
adc
adc
pop
and
je
fadds
xchg
jae
cmpb
push
or
sbb
jbe
push
or
js
xor
pop
xchg
lock
push
jo
icebp
push
add
js
adc
js
ja
xor
bound
clc
push
jp
lods
add
jge
push
xchg
pop
sub
jp
fadds
in
cli
add
leave
jge
loop
shrl
mov
cmpb
insb
insl
push
cmp
jle
xor
fcompp
aas
std
mov
add
pop
and
xchg
stos
mov
ret
xchg
sbb
in
xchg
or
test
repz
sbb
outsb
in
movsl
xor
sbb
add
mov
fcoml
fidivrs
or
cs
mulb
repz
and
icebp
cmp
pop
lds
dec
pop
loope
js
mov
jl
cmp
add
push
pop
jp
cs
std
add
mov
xchg
cmp
push
jb
mov
jae
fnstsw
sub
xorl
mov
mov
jne
loopne
out
repz
shlb
inc
negb
lcall
sub
int
jb
fldenv
sbb
pop
inc
fwait
pop
sub
mov
lods
mov
je
or
cmp
and
out
ret
xor
pop
in
cmp
mov
or
xchg
icebp
cmp
pop
jb
out
add
and
enter
nop
fcomps
cmp
arpl
icebp
sbb
mov
or
jle
lds
or
mov
and
sarl
js
xlat
pop
sahf
leave
int
stos
adc
stc
inc
cmp
jo
int
rclb
xchg
je
or
jbe
sahf
mov
notl
sbb
loopne
sti
mov
adc
cmp
dec
shlb
cmp
aam
pop
iret
icebp
imul
mov
add
insb
adc
push
sar
pop
frstor
cmpsl
loope
add
shll
outsl
jno
js
add
lods
mov
loopne
js
cltd
sbb
sbb
mov
fldenv
jl
mov
fisttpll
cmp
out
scas
sbb
ljmp
push
and
add
stc
sub
cld
adc
sub
xor
fsts
push
cmp
cld
je
outsl
mov
dec
lcall
sbb
pop
add
divb
out
push
inc
and
fbld
mov
stos
test
sarb
jae
add
push
mov
sub
hlt
cmp
cli
jb
insl
icebp
fs
adc
jo
cmp
push
cmc
out
js
shlb
sti
pop
mov
or
cmp
scas
jg
repnz
mov
repz
jecxz
xchg
jno
cmc
sti
jbe
sbb
jp
clc
xorb
mov
insb
and
repz
mov
jb
jo
arpl
and
jmp
icebp
add
gs
inc
arpl
dec
sbb
sbb
and
adc
xor
repnz
adc
sub
add
bnd
repnz
stc
lea
or
adc
dec
sbb
adc
jb
sti
sti
adc
add
xchg
jno
xchg
lock
leave
pop
jo
mov
xor
fs
and
and
adc
xor
xor
jp
sbb
std
and
js
rcl
dec
sbb
dec
xchg
mov
and
pop
addb
fsubrs
orb
add
xor
jp
sti
sbbb
ss
adc
ss
add
push
adcl
outsb
repz
cli
sbb
mov
mov
xchg
push
jl
str
mov
xchg
or
rcr
ds
jne
ret
xchg
fistpl
add
mov
leave
cmp
jl
andl
cli
or
pop
dec
and
aaa
or
popa
jae
push
cld
cmp
nop
adc
adc
push
inc
ja
xchg
inc
adc
stos
in
xor
push
pop
test
xor
cmpsb
insb
jmp
addr16
lock
mov
notb
xchg
jnp
shll
js
repz
ja
jo
lods
iret
and
jbe
pop
pop
cmp
icebp
and
sbb
xor
pop
add
push
fldenv
loope
icebp
jo
out
mov
add
xchg
pop
notb
ss
fcomps
js
pushf
je
push
sar
xlat
cld
adc
mov
adc
fmul
mov
inc
std
sbb
add
adc
add
inc
mov
jmp
or
inc
stc
sbb
jl
icebp
fistpl
mov
or
or
jbe
ss
jo
ficompl
sti
jge
push
je
insl
adc
inc
test
adc
je
popa
adc
aam
test
cld
push
or
xchg
mov
mov
sbb
and
mov
ss
shll
movsb
inc
push
pop
jo
fdivrp
or
or
out
cmc
and
mov
stc
xorb
iret
and
xor
clc
sbbb
inc
lock
fdivs
out
jb
lods
daa
insl
ss
mov
dec
fiadds
mov
enter
je
aas
fcomps
mov
mov
addl
xchg
mov
lret
repnz
xor
lock
cwtl
inc
divb
jg
push
sub
add
push
js
jl
cmc
fwait
push
in
aam
rcrl
push
mov
xorl
popf
pop
hlt
mov
sbb
je,pn
arpl
xchg
mov
xchg
sbb
or
or
repnz
jecxz
cmp
mov
or
sub
xchg
xchg
lea
lock
mov
sbb
jp
adc
in
mov
jmp
sub
xchg
adc
jmp
inc
pop
mov
xor
push
icebp
popa
cltd
divl
stos
push
mov
and
clc
push
jns
clc
mov
repz
cmovp
incb
inc
je
sbb
cmpsb
sub
daa
leave
push
lock
xchg
push
inc
adc
repz
je
sub
inc
sahf
pop
add
sbb
js
leave
jp
icebp
jle
mov
xchg
pop
adc
add
jns
rorb
testb
leave
mov
jno
or
cmc
sar
das
jnp
jns
sbb
cmp
or
xorb
inc
or
inc
fmul
pop
lock
std
stc
je
push
stos
sbb
pushf
aaa
push
cmp
xor
adc
loope
push
mov
sbb
mov
xor
shrb
jns
push
mov
outsb
iret
cmpsb
jl
mov
pusha
push
fxam
pop
mov
mov
lock
clc
pushf
xchg
and
out
lea
mov
or
notl
jp
out
cmc
insl
std
scas
jmp
int
mov
mov
test
mov
mov
ficoml
call
add
scas
hlt
icebp
repnz
notb
test
cli
repnz
ret
mov
jb
int3
or
xlat
pop
xchg
std
lock
ja
lods
scas
notb
ja
addr16
in
adc
jge
sbb
inc
add
mov
negl
stc
sub
cmpsl
jno
mul
or
mov
xchg
sti
faddl
nop
adc
push
mov
mov
enter
jp
addb
test
divb
xchg
jno
push
add
pushf
jge
clc
divl
rclb
cmp
xchg
scas
ja
sti
into
cmp
xor
repz
ja
cli
mov
and
addb
inc
rclb
adc
mov
dec
adc
pop
sbb
loopne
ret
xor
mov
outsb
lods
dec
shll
mov
icebp
mov
fnstsw
add
lds
pop
dec
movsl
icebp
and
into
test
inc
je
jp
jne
jp
movswl
adc
arpl
add
mov
fwait
int3
arpl
fnstenv
dec
mov
dec
mov
js
aaa
add
dec
dec
or
xchg
cltd
sub
stos
fdivs
jno
sbbb
mov
push
push
adcl
adc
in
hlt
push
insb
jecxz
jnp
push
and
xchg
je
scas
xchg
ljmp
lret
adc
loopne
shl
mov
cmp
pushf
dec
std
fs
aam
jl
aaa
add
outsb
fimull
sarb
push
or
mov
inc
aad
add
cmp
lea
loopne
jecxz
add
push
push
sub
lea
cli
repnz
repnz
and
aaa
pop
push
inc
leave
push
sti
pop
lock
pop
mov
cld
push
xor
iret
gs
adc
adc
xchg
jb
adc
jg
testb
scas
xor
adc
data16
pushf
push
lock
pop
cli
hlt
sub
std
lds
pop
sbb
icebp
jp
js
jge
push
je
lock
adc
stc
jg
sbb
mov
rclb
jne
cld
out
cmp
adc
mov
clc
adc
add
addb
ret
mov
adc
pushf
out
pop
icebp
gs
cmp
jle
jo
clc
jp
push
xor
repz
push
pushf
stos
xchg
push
rclb
inc
mov
sub
addb
mov
bound
icebp
cwtl
xchg
mov
cmp
jp
xorb
adcb
clc
rol
push
xchg
fcoml
in
cmc
mov
pop
mov
xor
jo
jge
xor
cmpsl
mov
adc
adc
xor
push
testl
repnz
shll
mov
pop
test
js
cmp
lret
push
add
clc
or
lock
push
push
lock
jns
fldenv
inc
cmpl
pop
mov
cmp
mov
sar
or
iret
mov
push
sbb
jp
pop
lcall
cltd
adcb
shrl
fimull
xlat
add
push
jae
rcr
add
dec
jbe
repz
pushf
adc
xchg
mov
xor
add
xor
sbb
movsb
jno
sbb
pop
mov
push
adc
popf
pushf
clc
popa
incb
cwtl
xchg
out
je
xor
or
mov
jns
cli
lcall
mov
jg
sbb
cwtl
cltd
xchg
mov
dec
adc
jle
nop
hlt
xlat
mov
add
adc
sbb
add
xor
sti
js
jne,pn
jno
cmp
fidivrs
ljmp
mov
mov
add
cmp
pop
xchg
mov
inc
cmc
xlat
xchg
mov
sub
pop
pop
jl
or
adc
sbb
sarb
xchg
sahf
inc
adc
aad
jbe
inc
xchg
xchg
js
mov
fwait
icebp
testb
mov
dec
push
xchg
jl
hlt
or
xor
pop
pushf
pop
xchg
icebp
sbb
je
mov
xor
jle
add
clc
das
xlat
sub
jno
mov
test
inc
cmp
mov
add
add
mov
div
mull
mov
inc
adc
mov
aas
mov
pop
jno
out
jo
mov
aad
jae
jg
outsb
push
jb
xor
and
adc
repnz
adc
jb
roll
cmp
jp
mov
repz
insb
or
sub
pop
push
jb
jb
std
adc
jo
loopne
inc
push
pop
out
dec
jno
lcall
test
mov
pop
cltd
pushf
scas
inc
and
push
lcall
mov
xor
icebp
add
add
xor
ret
nop
je
dec
add
xchg
cmp
popf
lock
outsl
fldcw
sarl
adc
mov
orb
fwait
icebp
xor
push
mov
fisttpll
xchg
ficoml
mov
data16
rcl
add
addr16
adc
xor
push
xchg
mov
add
shll
adc
jae
pop
sbb
std
adc
xchg
mov
jns
clc
lcall
cmp
loopne
mov
inc
aam
jl
mov
adc
xor
ds
cmp
fmuls
jp
data16
out
in
or
add
pop
mov
xor
pop
cli
xlat
jo
ficompl
pop
lock
faddp
push
popf
cwtl
lock
push
add
repz
stos
push
xor
mov
lcall
popf
out
lds
call
inc
adc
mov
sbb
push
sti
js
aas
std
icebp
jns
jne
push
add
adc
ret
xchg
xchg
jo
add
lea
xor
repnz
icebp
jl
add
mov
mov
or
xchg
push
cltd
cmc
push
outsb
sbb
mov
repz
sbb
loop
add
jl
adc
andl
clc
adc
sbb
sbb
jp
sahf
loop
xor
sbb
pop
xor
xchg
mov
js
movsb
icebp
adc
mov
adc
ja
cmc
out
js
cli
idivb
push
imul
cli
dec
mov
mov
test
jae
jb
in
out
sub
adcl
test
rol
rolb
dec
mov
pop
sbb
mov
adcl
jnp
ret
stc
jno
das
xor
outsl
jg
cli
iret
adc
add
push
lret
xchg
or
loop
inc
sarb
adc
adc
insl
out
call
idivl
lock
xchg
adc
adc
adc
rcl
and
push
cmp
test
test
jl
adc
shll
xor
cmp
push
jo
into
ds
jne
pop
imul
or
icebp
lods
in
jle
mov
adc
rcrb
sbbl
movsl
mov
pop
push
test
inc
fs
fldenv
addr16
or
lods
xor
mov
sbb
jb
pushf
pop
dec
pop
cmp
sub
xchg
xchg
js
outsl
push
mov
rcr
mov
dec
addb
jl
jge
add
mov
js
xor
outsb
mov
mov
adc
or
icebp
jne
adc
jle
mov
aad
sbb
push
inc
push
rorb
fwait
add
adc
mov
xchg
add
cltd
cld
pushf
jl
enter
mov
mov
pop
cmp
lcall
dec
repnz
xor
jno
jg
dec
xor
pop
jo
jg
incb
adc
sub
jnp
mov
add
fwait
call
cmpb
adc
push
mov
nop
pop
or
insl
mov
adc
jp
mov
ret
cmpsb
hlt
fs
clc
or
inc
rcl
dec
and
jge
cmc
adc
dec
adcl
je
icebp
js
pop
sub
cmc
mov
xchg
adc
add
movsb
xor
add
arpl
inc
popa
aad
cmp
xor
std
xchg
xor
into
imul
adc
push
dec
mov
adcb
fsts
insl
test
test
pusha
mov
mov
xchg
js
xchg
lahf
jecxz
and
aas
js
fists
jle
xor
push
mov
xchg
lahf
cmpsl
imul
dec
aam
lods
movsb
sub
push
inc
adc
js
aaa
popa
push
cwtl
sub
je
cmp
mov
xchg
adc
mov
xchg
xchg
lcall
pop
xor
jne
inc
xchg
xchg
mov
add
inc
adc
mov
mov
out
in
push
mov
adc
jp
aam
sahf
cmpsl
xorl
lcall
or
pop
rcrb
lds
aad
pop
or
jge
xchg
sahf
ja
scas
mov
hlt
dec
cmp
jb
mov
fnstcw
js
repz
sar
sbb
dec
clc
cmpb
push
cmp
jo
mov
mov
ja
mov
mov
inc
stc
lock
lock
jg
and
and
xlat
push
mov
icebp
sub
pop
hlt
das
cmp
xor
pop
cwtl
clc
repz
adc
aaa
push
mov
fwait
lock
xor
sti
sbb
cmp
xor
pop
adc
cmp
sbb
pop
fcomp
lods
rorb
aaa
add
iret
cmp
lods
xor
sub
jp
push
outsb
inc
mov
rcl
jl
mov
adc
xor
sub
je
repz
xor
mov
mov
gs
hlt
fdivrl
or
push
lods
fmuls
mov
aam
imul
adc
xor
adc
jle
aad
cmc
mov
icebp
dec
ss
pushf
push
inc
add
push
dec
mov
jl
push
or
fwait
add
add
pop
stc
mov
and
mov
shlb
dec
add
jle
lock
push
adc
icebp
jo
mull
mov
test
test
lock
ja
or
mov
inc
sbb
jl
adc
mov
icebp
pop
lock
repnz
lock
cmc
hlt
test
adc
lea
mov
adc
lea
sub
jno
shl
xchg
and
xchg
dec
mov
xor
imul
std
push
rolb
adc
and
sbb
mov
adc
cmp
sbb
gs
or
test
xlat
push
pusha
stc
mov
pop
jnp
push
xchg
inc
hlt
push
xchg
call
mov
mov
add
sub
xor
xor
push
ljmp
pop
stc
gs
int
out
pusha
pop
je
cmpsb
sbb
stos
sbb
jnp
sbb
cld
in
fcomps
popa
imul
jmp
hlt
sahf
lods
push
ja
das
xlat
add
xor
mov
fcompl
hlt
inc
dec
adc
cwtl
mov
daa
imul
cmpsl
fnstcw
clc
xchg
mov
and
in
dec
ret
mov
cmp
je
cltd
pop
add
jno
mov
iret
hlt
push
and
adc
shll
leave
mov
shll
clc
pusha
and
push
cwtl
ljmp
adc
xchg
xor
or
sub
mov
imul
nop
sub
pop
push
pusha
xor
movsb
push
lock
push
das
and
out
mov
jns
push
orb
rcrb
mov
cwtl
out
cs
inc
cmp
icebp
rcr
cmp
repnz
pushf
jl
dec
add
orl
inc
push
xor
jle
jb
add
rcl
xchg
and
cli
jno
pop
mov
sub
clc
jbe
div
push
sbb
jns
popf
jmp
inc
inc
sub
dec
dec
sarb
inc
pop
clc
clc
jo
sbb
xor
mov
inc
fwait
jb
pop
scas
pusha
icebp
ja
testl
rcrl
popf
cmp
xor
je
repnz
scas
mov
rcll
pop
push
outsl
push
and
add
sub
xchg
jmp
shlb
bound
or
cwtl
repnz
mov
arpl
mov
cs
sbb
push
sbb
sbb
imul
mov
int3
lahf
cmc
jmp
push
fildl
sub
push
or
in
cwtl
mov
adc
cmp
setno
cmp
and
jle
push
cld
xchg
xchg
bound
mov
cmp
lock
mov
flds
jge
lcall
jnp
cmpb
sahf
fcoms
xor
leave
mov
mov
clc
push
cld
push
cwtl
add
mov
cwtl
xchg
xchg
rcl
mov
adcl
js
pop
lock
daa
fldt
cmp
in
push
mov
xchg
or
in
jb
out
jo
add
shll
imul
jecxz
icebp
cltd
lret
call
aad
cli
push
je
lods
inc
mov
cmp
mov
loope
popf
xchg
outsl
mov
jns
mov
and
movsl
nop
dec
inc
or
xor
loopne
add
test
mov
cmp
mov
ret
jb
shlb
xor
negb
add
sbb
enter
rolb
insb
adc
add
or
sbb
int3
mov
shll
pop
push
out
or
pusha
insl
jno
push
xorl
je
xor
cmp
test
jnp
or
fwait
mov
jge
pop
out
mov
or
or
adc
nop
outsl
ljmp
cmpsb
lods
push
or
aas
mov
push
ret
and
xacquire
xor
push
adcl
lret
xor
sbb
ror
aam
fimull
ficomps
faddl
sahf
jne
dec
popa
cltd
pop
cli
repz
mov
jg
std
pop
pop
and
ds
adc
dec
push
adc
sahf
fldcw
js
or
je
push
xchg
xchg
cs
int
fwait
cmp
xlat
mov
inc
cmp
mov
mov
jl
cmpb
adc
clc
mov
pop
add
inc
xor
fisubrs
mov
fistpll
push
sbb
out
xchg
mov
jae
mov
mov
outsb
jbe
mov
mov
gs
fcomi
inc
adc
inc
mov
and
addb
into
call
jl
sbb
xchg
add
add
mov
and
mov
mov
lock
cmp
mov
or
xor
imul
fbstp
mov
mov
push
out
ss
repz
adc
add
push
psubq
inc
pusha
insb
out
xchg
rol
add
call
mov
pop
jecxz
sbbb
jo
jne
mov
push
adc
mov
sarl
jne
xor
and
mov
je
jno
mov
pop
xchg
test
into
xor
sahf
push
push
scas
cmp
icebp
and
mov
mov
pop
and
cmp
fld
pop
sbbb
fstpl
scas
mov
jle
mov
ja
sahf
fldt
xor
or
sahf
mov
add
daa
test
dec
and
jae
fstpt
push
mov
push
push
xchg
mov
scas
mov
out
jp
lret
mul
ficoml
jecxz
repz
call
lcall
adcb
mov
lret
cmp
mov
cli
daa
popl
insl
hlt
in
mov
ret
inc
mov
jne
xchg
mov
dec
in
add
push
push
mov
xor
push
icebp
repz
dec
dec
pop
mov
je
and
jg
mov
adc
jecxz
dec
xchg
xchg
pop
aaa
stos
stc
jo
xchg
inc
ljmp
xlat
scas
jbe
es
mov
push
popf
pusha
dec
cmp
mov
lds
sti
xchg
stos
lods
pshufw
rorl
mov
orb
clc
clc
mov
mov
pop
div
imul
imul
inc
dec
imul
js
pop
js
aaa
pop
pop
xor
xor
sti
fsubrp
lea
sbb
lret
nop
inc
cmpl
lods
mov
shll
xor
sahf
push
pop
push
cmp
or
ss
xchg
shl
mov
shll
jo
mov
icebp
mov
out
mov
andb
icebp
test
mov
loopne
popa
pop
out
cwtl
sbb
inc
mov
pusha
imul
push
xor
jne
imul
out
cmc
stc
fcmovnu
mov
jg
jb
sub
sub
mov
mov
xchg
xorl
jns
into
jae
insl
sti
std
or
add
xchg
ss
pop
xchg
inc
jb
mov
jl
jp
xchg
repz
sbb
lock
jns
enter
dec
inc
xchg
fisttps
push
divl
xchg
and
inc
imul
xchg
call
pusha
push
adc
dec
cmc
jno
cmp
sub
mov
add
mov
jb
pop
push
pop
notl
idivl
icebp
add
pop
dec
mov
adc
xchg
ss
jbe
mov
cs
sub
adc
jo
bound
dec
inc
hlt
jb
cmpl
ret
jle
add
insb
pop
sub
add
mov
xorl
stc
add
xor
enter
repnz
lods
jo
sar
into
xchg
stc
xor
mov
ja
and
add
dec
add
inc
cmc
mov
fiaddl
mov
add
out
out
movsl
fxtract
cmp
shrl
mov
and
lea
je
clc
cld
ret
in
icebp
daa
jl
aaa
loop
adc
push
add
clc
repz
dec
xor
sub
cld
loop
jbe
cmp
and
add
sub
jmp
mov
loopne
xchg
outsl
adc
js
imul
ret
clc
repnz
imul
pusha
add
jp
sbb
cmc
addl
repnz
jecxz
shlb
inc
adc
adc
xor
xchg
scas
in
shll
cmp
pop
lock
icebp
mov
dec
sbb
data16
jle
jle
addr16
xor
insl
aas
lock
xor
sbb
sub
je
xor
mov
jp
adc
clc
sar
cmpl
rolb
out
cld
cmp
cmp
cs
push
adc
xor
mov
lock
cld
test
mov
xchg
xchg
pop
xchg
movsl
or
xor
push
repz
mov
lods
loop
js
aaa
bound
jle
add
mov
aad
in
sbb
shr
sahf
mov
push
lock
addl
xor
xchg
and
adc
xchg
lcall
jl
je
lds
fdivrs
incb
push
xor
fwait
out
and
dec
test
daa
xchg
xor
pop
sbb
mov
clc
stos
idivl
ja
adc
push
jl
es
fwait
push
add
stc
cld
sub
and
fwait
add
in
addb
mov
sbb
adc
rolb
test
xor
adc
jb
sbb
xor
cli
push
bound
call
pop
xor
jl
ss
js
movsl
xchg
icebp
push
mov
jp
or
cmpsl
nop
adc
xchg
das
in
push
repnz
and
inc
push
jle
xchg
mov
or
and
cld
push
ret
or
fists
jno
imul
lock
insb
cmp
sbb
fwait
ds
inc
js
sbb
hlt
dec
popa
int
sbb
inc
sbb
pop
fldl
mov
and
push
push
jbe
sahf
dec
lods
sbb
push
sarb
dec
cmp
mov
jnp
mov
add
pop
adcb
push
or
mov
and
pop
lcall
enter
cs
clc
jno
inc
fimuls
push
notl
mov
mov
push
dec
dec
xor
push
lahf
pandn
fldenv
pop
cwtl
jg
lret
mov
pop
sti
rorl
es
bound
push
and
dec
orl
inc
ds
call
push
fidivs
push
sti
jb
or
add
hlt
aam
pop
fadds
sbb
ret
inc
jg
and
xor
push
dec
iret
shrb
or
add
cmp
jl
outsb
stc
add
daa
push
outsl
imul
jae
jl
mov
sti
inc
movsb
mov
jb
push
aam
mov
add
xchg
xor
dec
fists
mov
pop
add
mov
cmp
push
cmp
andb
lds
pop
mov
jnp
cmc
add
push
out
pop
mov
divb
js
jp
jno
test
jle
pusha
and
pusha
movsl
aad
fsubrs
into
cmp
lock
repnz
daa
push
fldt
adc
jl
add
fisttpll
stos
adc
stos
mov
pop
fdivr
mov
insl
rcrb
into
pop
xchg
fwait
pop
add
aas
outsb
gs
add
cmp
cmp
jbe
mov
fs
xchg
movsl
mov
cmp
add
push
xchg
xor
add
outsl
mov
notb
jb
pop
lea
pop
push
cltd
mov
adc
cmc
lahf
les
movntq
out
dec
pop
or
push
lea
call
hlt
fdivr
adc
jl
fdivrl
loop
test
cmp
sbb
xlat
je
pusha
jge
hlt
fstl
pop
inc
adc
hlt
push
sbb
test
inc
xchg
push
inc
cli
jb
push
xor
gs
cmp
add
stos
aas
jle
and
mov
jp
jns
cmc
push
mov
shll
mov
js
cmova
mov
jl
mov
fcmovnu
sbb
sbb
addr16
mov
sarl
fimull
shrb
popa
jae
ja
push
into
mov
ss
push
or
mov
and
outsl
xor
bound
jp
mov
mov
std
xor
repz
cmp
xor
pusha
addr16
lea
jl
out
xchg
sti
xchg
outsl
add
or
and
inc
aas
icebp
jp
es
pop
xor
repz
cld
repnz
and
aam
or
lods
adc
sbb
dec
xor
adc
pop
cmp
inc
adc
xchg
aas
dec
push
popa
mov
cwtl
mov
xchg
aad
push
je
imul
add
shll
mov
push
cmp
cmp
cmp
xchg
sub
divl
xor
mov
dec
flds
inc
jle
adc
dec
ja
or
jl
enter
fidivrs
add
mov
inc
cmp
push
aad
xor
rcrb
add
hlt
testb
clc
stos
mov
test
inc
insl
ficomps
nop
sahf
pop
lock
cmp
push
sbb
and
jb
mov
xor
js
inc
mov
pop
add
hlt
mov
lcall
inc
cmp
in
data16
lahf
dec
sub
sub
lret
pushf
popa
mov
lea
push
sub
inc
add
call
lret
xor
mov
jnp
cmpsb
cwtl
push
add
test
js
mov
pop
cmp
or
push
xchg
into
pop
sbb
and
mov
adc
outsb
repz
mov
push
sahf
xor
daa
jnp
dec
adc
movl
cmp
mov
jp
xor
imul
repz
cmovo
orb
mov
mov
adc
ja
or
ret
and
popf
jge
xchg
aad
mov
xchg
or
adc
or
and
jl
mov
rcrb
sbb
ss
and
movsb
inc
clc
inc
cwtl
add
sbbb
insl
cmp
push
jl
mov
or
xor
insl
mov
mov
mov
xchg
mov
push
and
pop
or
mov
out
jns
scas
mov
loope
adcb
mov
jg
pop
push
adcl
enter
clc
sarb
cmp
shl
shll
push
xchg
xor
inc
jle
jg
jnp
push
lock
pop
lods
mov
mov
mov
adc
sub
in
cmc
les
loope
stc
mov
pop
xchg
dec
inc
pushf
sbb
hlt
aad
sarb
sbb
adc
jno
inc
cli
jns
cwtl
push
or
je
inc
mov
ljmp
or
idivb
xchg
rol
dec
or
jne
mov
stc
push
push
xor
sub
fstpt
sbb
xor
and
jl
shrl
mov
xchg
sbb
dec
js
lar
mov
jae
repnz
iret
clc
fisubl
cmpsb
js
subl
cmp
add
inc
divb
je
xor
aam
add
insl
mov
enter
push
mov
jbe
pusha
or
sar
repnz
int
bound
adc
jns
xchg
stc
pop
adc
icebp
cli
mov
hlt
lret
js
hlt
mov
repz
arpl
icebp
cmp
out
cmp
sahf
mov
inc
xbegin
aad
sahf
aaa
or
adc
jle
xchg
push
lods
mov
mov
xchg
sbb
jno
jb
ljmp
adc
cld
mov
lahf
sub
in
mov
cltd
lret
sbb
std
ror
push
dec
out
sub
push
or
adc
loope
jg
cmp
mov
adc
lock
bound
leave
or
outsl
jne
aas
cmp
aaa
add
negl
cmc
push
repnz
jno
mul
mov
or
enter
push
inc
inc
fidivs
adc
std
push
pop
adc
mov
data16
test
repnz
mov
or
in
add
jbe
push
mov
shlb
jb
jae
rclb
inc
sarl
sbb
jg
out
daa
mov
and
inc
push
out
ljmp
jle
popl
int3
fisubrl
mov
mov
sub
dec
jo
dec
loop
sahf
sbb
jecxz
or
jae
mov
pop
cmpsl
mov
dec
scas
and
lock
xor
js
jae
aaa
in
imul
icebp
jp
mov
or
cmp
cs
xchg
icebp
jle
push
fimull
or
xchg
jb
rcr
pop
sar
fisubrl
xchg
clc
lcall
dec
jle
mov
cmc
pop
xor
sbb
fldcw
or
shl
or
stc
cld
sub
js
ss
push
push
cld
addr16
mov
mov
adc
test
mov
mov
push
mov
fadds
repnz
stc
ja
dec
arpl
jns
mov
jg
jmp
adc
add
push
ja
adc
cmp
push
pop
inc
clc
sahf
push
mov
push
push
hlt
mov
dec
and
test
mov
movsl
mov
pusha
mov
push
mov
adc
adcb
leave
or
xor
sub
mov
stc
add
adc
mov
test
add
and
hlt
inc
popa
test
lcall
clc
jmp
and
fs
and
cmp
stc
fistpl
lea
je
fadds
jno
hlt
enter
add
dec
add
xor
fwait
xor
and
and
imul
push
push
mov
mov
and
div
adc
rolb
iret
jne
inc
dec
cld
inc
popa
push
push
jae
jae
and
jno
fcompl
int
rolb
mov
xorb
iret
scas
rol
sbb
subb
push
js
insl
vmread
or
and
lods
enter
nop
out
inc
cmpsb
mov
or
mov
jno
mov
or
lea
pop
xchg
insl
cmp
mull
les
xchg
pop
push
stc
jns
add
cltd
adc
xor
jb
adc
out
pop
stc
cmp
icebp
loop
cli
ja
add
or
mov
pop
mov
add
jl
lea
mov
mov
adc
out
xchg
shll
stc
jnp
mov
jg
cmp
xor
mov
jl
leave
jge
or
mov
call
hlt
dec
sbb
bound
sbb
pusha
shlb
mov
push
repz
cli
add
in
icebp
subb
pop
int
stos
push
or
mov
lods
fdivr
xchg
clc
rcl
push
stos
sbb
add
andb
mov
cmp
and
cmpb
stos
pop
aaa
push
mov
lcall
or
mov
xor
into
cmp
or
cmp
xchg
adc
sar
lret
push
call
adc
mov
adc
aad
js
inc
or
cli
bound
repz
push
lea
cld
and
idivb
pop
clc
fstpt
mov
mov
sbb
mov
push
pop
adc
or
lcall
cmp
test
jo
les
adc
in
cld
mov
inc
mov
js
stos
or
jb
adc
ja
icebp
icebp
ficoms
xlat
sbb
fdiv
or
jb
ja
rcll
jmp
xchg
cwtl
sti
mov
inc
mov
push
mov
out
jge
cmp
cmp
fnstenv
stc
add
nop
sub
dec
xor
loope
mov
jecxz
jle
add
mov
js
mov
xchg
jge
cmp
rclb
pop
push
push
insl
into
cltd
cmp
jge
cmp
or
xor
andb
push
sti
pop
addr16
clc
and
sti
fistl
cmp
dec
sbb
add
jl
repnz
add
mov
fadds
ljmp
sahf
dec
add
data16
mov
cmpsl
dec
leave
cli
repz
or
and
mov
push
push
cld
mov
into
hlt
rcrb
hlt
xchg
mov
xchg
xchg
cwtl
fadds
fwait
loop
dec
shl
or
hlt
insl
adc
adc
clc
cmp
push
insl
shl
popa
xchg
pop
push
mov
xor
pop
xor
loop
jb
shll
add
add
inc
inc
lret
jge
in
icebp
sbbb
jp
and
xor
xchg
push
dec
adc
add
dec
or
imul
cs
sbb
int
cltd
push
loopne
fnstsw
or
cs
leave
mov
dec
test
sub
cli
push
pusha
dec
nop
xchg
push
dec
loope
xor
je
js
arpl
dec
lret
mov
lock
mov
dec
in
add
xor
cmpb
orb
ss
mulb
leave
xchg
cmp
in
and
xor
xchg
add
mov
icebp
sub
test
dec
mov
pushf
pop
arpl
or
dec
jae
das
sbb
shr
push
add
lods
cwtl
rcrl
inc
test
cld
xchg
sbb
cmp
clc
fcmovnbe
xchg
cmp
jecxz
icebp
stc
and
pop
push
outsb
cmp
divl
and
lods
jb
or
iret
rcrb
sbb
pop
sbb
cli
stos
fists
icebp
cli
xor
insl
sbb
jp
jne
push
lods
jl
dec
js
aas
insl
mov
enter
sub
mov
icebp
stos
arpl
js
int
std
push
push
xchg
sub
sbb
mov
sbb
lds
sub
adc
adc
mov
das
iret
cmp
ds
clc
lahf
scas
jecxz
lea
lods
fwait
mov
stc
fidivl
or
mov
xchg
adc
push
add
jb
loope
sub
sar
cwtl
inc
cmp
fiadds
fs
rorl
push
or
pop
cmp
dec
ljmp
add
ds
pusha
test
lods
shrb
jg
dec
push
cmp
adc
xor
mov
stc
fiadds
cmp
and
cltd
jae
es
cmp
mov
jb
push
jl
sbbb
fdivr
icebp
imul
mov
push
cmc
cmp
cmp
jb
adc
call
cltd
repnz
mov
fs
stc
cmp
cmp
out
iret
shlb
in
clc
cmpsl
or
cmp
jl
repz
inc
sbb
insb
pop
mov
mov
mov
mov
pop
xor
outsl
stos
jns
adc
fimuls
cmp
movsl
xor
insb
cld
or
je
ljmp
or
mov
in
push
mov
mov
hlt
dec
inc
lcall
stos
add
jge
push
fwait
loop
add
in
mov
add
xor
add
jnp
stc
ficompl
sub
push
lds
add
mov
xor
sbb
fwait
mov
lcall
neg
dec
jl
mov
jbe
xor
mov
sahf
call
shll
jne
cmp
adc
sbb
and
imul
mov
inc
sbb
jp
shl
add
cld
fstpl
mov
xchg
mov
xor
in
insl
mov
inc
inc
lods
mov
jae
stc
pop
sbb
aaa
pop
mov
mov
fnstsw
idiv
cltd
fucomp
insb
jae
sbb
cmp
push
fstp
jl
sub
aas
sahf
ds
mov
cltd
mov
ljmp
shlb
mov
cwtl
idivb
frndint
cmpl
jnp
pop
fs
push
push
sahf
pop
sbb
data16
jnp
sbb
jae
sbb
cs
mov
mov
xchg
xchg
jp
rcl
dec
inc
pop
xabort
js
ds
fnstenv
fsubr
cmp
pop
cmp
cwtl
jno
jne
push
cli
sub
add
fs
jne
pop
sbb
popf
pop
xor
dec
and
mov
call
cld
jp
fstpl
add
sbb
push
jno
cmp
fidivrs
xchg
adc
test
push
jp
adcb
add
es
xor
daa
push
test
dec
mov
dec
add
sbb
mov
pop
movq
int3
jl
in
fwait
dec
cmp
and
ja
add
ds
mov
or
sub
cmp
pop
loope
jne
stc
pop
cmp
lock
adc
and
out
data16
shll
mov
cmp
jne
jae
mov
mov
idivl
test
aad
cmp
std
fdiv
jne
mov
add
stos
cmp
mov
cmp
push
pop
sbb
lret
lret
sbb
mov
mov
jbe
mov
cmp
add
sbb
insl
mov
xor
dec
xor
xor
in
adc
lods
push
imul
lea
stc
add
fsub
xchg
jns
pop
xchg
repnz
push
cmp
test
fsubl
push
mov
or
je
cmp
test
mov
bound
repz
xlat
sbb
push
jne
pop
and
ds
mov
jae
xor
fcmove
mov
push
idivb
mov
scas
jmp
xchg
orb
xor
fdivrl
dec
mov
loope
mov
repz
add
jno
push
inc
mov
jl
ds
adc
lock
mov
jnp
cwtl
pop
call
movsl
hlt
and
or
sbb
repnz
pop
in
jne
sbb
fdivr
pop
add
xor
popa
imulb
xor
out
rcrb
es
lock
jae
or
sbb
pop
and
cld
add
or
and
jae
fcmove
pop
sub
in
xor
negb
jae
adc
sarl
add
lock
adc
stc
cmp
jp
jbe
jle
dec
jge
clc
fstpl
add
push
sub
loope
inc
xchg
pand
pop
adc
ja
shll
mov
jle
test
push
pop
jmp
cmp
bound
sarl
repnz
stos
cwtl
xchg
roll
push
pop
popf
fstpl
ret
jno
fwait
mov
push
sbb
pop
and
pop
imulb
mov
mov
fcoms
sbb
pop
shrl
aad
pop
jno
xor
or
adc
cs
push
xor
xor
xchg
adcl
loopne
pusha
mov
and
lock
or
pop
icebp
mov
jae
scas
cmc
mov
int
popl
std
pop
adc
dec
jae
cmp
daa
jg
cmpps
mov
dec
adc
push
xchg
pop
mov
and
orl
push
mov
in
or
and
or
out
ds
add
jp
les
or
jo
pop
add
lock
jle
xor
inc
sbb
cmp
sti
and
pushf
outsb
add
repz
pop
push
cwtl
icebp
xor
and
outsb
into
dec
adc
jl
mov
push
jb
adc
cld
xor
inc
mov
xor
sbb
dec
aam
fcmove
test
xor
mov
sbb
in
mov
inc
add
in
popa
mov
jg
or
inc
jno
paddw
mov
push
into
and
add
jae
add
loope
cmp
jo
gs
jp
xchg
mov
fmull
xor
xchg
js
mov
xor
icebp
push
inc
adc
mov
loopne
aam
inc
hlt
rorb
fwait
add
ja
cmp
dec
mov
pop
int
aaa
push
outsb
orl
adc
fimuls
icebp
mov
and
sbbb
lcall
fcmovnb
xorl
jo
jl
cmp
jo
push
push
jno
adc
sbb
negl
in
add
cmp
shlb
push
add
cmp
es
pop
js
lret
mov
daa
lahf
jl
jns
cwtl
push
loopne
pop
data16
inc
xchg
jge
iret
or
or
nop
jo
and
adc
aam
jecxz
pop
insb
divb
adc
fwait
sbb
add
mov
icebp
mov
or
inc
and
sub
ss
fadds
repnz
aas
or
and
cmc
and
ja
cld
cwtl
jg
movsb
adc
inc
stc
dec
dec
lcall
xchg
stos
mov
cwtl
dec
jle
add
or
cmp
xor
loop
imul
jg
out
sbb
add
repz
xchg
test
jle
cltd
sarl
idivl
fwait
adc
icebp
clc
test
bts
rorb
mov
int
vpaddsw
ljmp
js
test
icebp
mov
add
sti
fiaddl
inc
jb
sbb
or
inc
adc
xchg
fisttpl
xorl
lcall
dec
pop
gs
adc
jnp
rorl
xor
push
mov
and
mov
std
and
aaa
insb
movsb
dec
je
popf
mov
jne
and
sahf
fmull
xchg
and
fsubrl
adc
jle
sbb
xor
add
push
xchg
iret
push
fsubs
mov
xchg
adc
add
sbb
xor
les
push
dec
subl
push
movsb
ljmp
jbe
hlt
cmp
lock
push
mov
fstpt
cmp
add
cwtl
pop
dec
mov
add
adc
insb
jnp
notb
icebp
pop
inc
push
aaa
pop
call
add
icebp
xchg
inc
adc
mov
lds
mov
jle
cmp
mov
mov
sub
fwait
test
movsb
jge
sbb
inc
jns
sarl
loop
loop
add
add
add
or
mov
adc
movsb
lock
xchg
xchg
push
les
out
adcb
push
jp
cmp
orb
mov
push
cs
sub
in
sbb
fistpl
das
rcll
mov
xor
into
mov
sbb
pop
aam
fwait
jge
and
mov
loopne
inc
push
add
inc
jb
js
mov
mov
icebp
rorb
repnz
xchg
dec
jl
aad
xor
jp
add
push
push
jp
lret
inc
mov
adc
mov
imul
add
bound
xlat
sbb
mov
loope
shll
adc
add
icebp
push
in
je
pop
xchg
test
aam
aam
lret
add
adc
stc
jae
inc
jmp
jbe
in
loop
sbb
repnz
push
sarb
push
cmp
adcl
add
imul
pop
adcb
and
and
dec
mov
icebp
mov
cmp
mov
pop
push
push
mov
icebp
add
pop
cli
popl
ficoms
push
jno
ja
test
xorb
pop
xor
fisttpll
jl
lods
repz
and
rclb
movsl
js
inc
out
ljmp
jns
loope
cli
mov
mov
jl
add
jp
scas
jb
js
rclb
je
sbb
mov
mov
jnp
shrl
inc
imul
xchg
imul
out
orl
xchg
push
je
and
in
sbb
cmc
mov
dec
je
xchg
push
jp
repz
xor
xor
push
mov
sub
pop
xchg
cld
inc
jp
mov
cmp
jge
push
addb
jp
aam
fstps
xor
sarb
aaa
bound
dec
out
test
xchg
fcomi
mov
adc
jnp
cmc
pop
push
mov
push
xchg
jl
push
add
adc
jle
testb
dec
push
xchg
mov
or
adc
jle
testl
mov
add
adc
mov
int3
or
ja
lock
pop
mov
adc
repnz
mov
push
mov
and
and
mov
out
movsb
je
jbe
mov
mov
mov
sub
xor
sbb
sub
adc
mov
cltd
push
mov
or
lock
mov
int3
jb
mov
cltd
dec
lcall
sti
inc
stc
adc
stc
sub
or
lock
lcall
and
jns
fisttps
lock
das
jo
mov
add
jo
pop
loop
xor
dec
sub
mov
jne
insl
push
lods
fwait
pusha
add
sbb
pop
jns
cld
mov
push
repz
test
adc
bnd
jg
loop
nop
cmp
in
add
mov
or
jno
sbb
popa
jno
mov
jno
and
jl
test
pop
mov
push
cwtl
stc
inc
das
je
ss
movsl
adc
sbb
xor
and
or
loope
imul
jae
xor
push
xchg
push
jbe
fbstp
gs
mov
roll
jae
aas
rorl
mov
stos
inc
xchg
imul
adc
lret
das
stos
jnp
lock
lahf
push
jne
mov
cmp
or
punpcklbw
mov
lcall
jb
insl
ss
out
clc
jge
mov
mov
insl
shl
aam
push
jns
mov
fs
ljmp
cmp
repnz
mov
push
call
mov
jb
fildl
fistps
mov
cmpsl
xchg
mov
inc
out
loopne
push
std
jmp
and
out
and
pushf
mov
imul
add
add
pop
sub
js
icebp
or
data16
mov
imul
push
sub
add
pop
mov
in
dec
test
iret
jg
jb
xchg
push
into
clc
stc
pop
sarb
outsb
cmp
jecxz
adc
popl
push
test
add
xor
cs
iret
inc
stc
or
std
inc
adc
stos
in
bound
gs
xorl
jle
shll
push
ja
enter
jle
aam
lsl
pop
movsl
dec
xor
inc
iret
nop
sbb
xchg
enter
cld
iret
push
testb
testb
adc
push
out
lea
adc
jns
pop
or
test
std
sub
lahf
xchg
pop
aam
cwtl
jp
imulb
push
mov
add
out
sahf
outsb
inc
or
xor
cmp
dec
test
aam
imull
psrad
add
rsm
popa
cmp
rcll
and
scas
add
add
xor
or
aaa
repz
loop
cld
adc
add
jne
lock
mov
cld
jnp
mov
or
xor
fwait
or
ret
inc
test
jle
sub
rol
and
and
subl
add
mov
jg
add
cwtl
jb
stc
pop
jle
lods
jae
and
lock
test
xchg
pop
and
sti
and
gs
lcall
cld
loop
jns
add
push
mov
cmpl
adc
push
sub
push
pop
pop
clc
mov
dec
mov
scas
inc
jb
or
mov
xor
mov
imull
add
mov
mov
lods
sbb
add
in
ret
adc
icebp
adc
outsb
mov
gs
insl
dec
pop
test
sahf
jne
cmove
adc
rcll
clc
sbb
or
out
adc
shlb
loop
scas
push
test
xor
adc
push
movsl
sub
xor
popa
divl
subl
into
mov
rorb
test
push
sbb
mov
jo
jne
pop
pop
xchg
xchg
push
imul
jne
pop
pop
mov
adc
push
cwtl
adc
rolb
cmp
add
xchg
notl
call
mov
pop
mov
jbe
int3
add
movsl
add
pop
lods
sbb
out
in
cmp
xchg
out
xchg
add
pop
leave
sub
iret
push
sbb
xlat
adc
mov
mov
jge
jp
sbb
sub
and
sahf
pop
cli
mov
ret
movsl
je
repnz
jl
leave
lock
mov
ds
imull
fbstp
mov
lret
jecxz
cmp
mov
pusha
sub
jle
notl
add
aaa
push
sbb
push
mov
mov
sub
fcmovne
test
and
jns
ja
push
dec
leave
scas
lock
scas
jo
test
pop
ror
and
testb
stc
clc
mul
push
add
or
mov
cmc
push
repz
or
mov
jno
xchg
ja
not
pop
cmpsb
hlt
pop
ret
push
iret
ss
ja
testb
inc
les
or
and
cmp
ss
jecxz
mov
xor
nop
xchg
xchg
out
dec
push
or
mov
xchg
lock
add
sbb
aad
jo
inc
adc
jl
fistpl
arpl
adc
pushf
xchg
movsl
shrl
jbe
dec
inc
push
sbb
cmpb
jns
div
lods
shll
jmp
icebp
sbb
clc
or
pusha
mov
sti
push
in
into
jle
jl
pusha
push
je
mov
inc
lahf
xchg
push
jno
mov
xchg
out
xchg
loop
jno
xchg
pop
mov
cmp
js
loop
mov
mov
addr16
fldl
add
sbb
rcrb
mov
pusha
lahf
pushf
dec
shll
adc
data16
sbb
pop
mov
mov
dec
jnp
and
test
jle
add
mov
adc
ja
repnz
push
mov
adc
dec
sub
push
ffreep
cmpsb
data16
loopne
sbbl
rcrl
add
xchg
pop
adc
jl
mov
ljmp
adc
lea
enter
sbb
jb
mov
icebp
inc
xor
vmread
cwtl
and
dec
and
faddl
test
inc
cmp
lea
pushf
push
hlt
loope
outsb
pop
lods
adc
mov
pop
scas
repz
rorl
lcall
xor
xchg
jno
std
sti
bound
jns
loopne
insl
push
or
adc
or
mov
inc
imulb
int3
scas
sbb
popa
dec
data16
push
xchg
xor
repz
push
je
stos
fldenv
fdiv
sahf
xchg
cmpsb
pop
inc
add
shlb
inc
add
mov
or
cmp
adc
sbb
jle
scas
psubsw
cld
clc
push
push
test
jecxz
sbb
mov
fiaddl
aam
push
nop
aas
cwtl
cs
data16
test
push
push
repz
mov
orb
or
les
xchg
mov
fisttpl
jle
out
xchg
shll
inc
cli
mov
jnp
ja
adc
add
getsec
add
jl
jb
adc
push
mov
in
mov
or
movsb
xchg
mov
dec
and
les
or
mov
addr16
outsb
jo
fists
add
jnp
push
xchg
dec
push
out
dec
cli
sahf
leave
pop
adc
les
std
pop
jns
ss
negl
adc
jle
adc
sub
pusha
clc
ret
inc
mov
push
push
mov
cmp
jae
pop
add
ss
dec
mov
lods
sbb
cmp
xchg
imull
xor
and
ss
ret
ret
test
popf
aam
ss
lock
jae
cmp
mov
jp
pop
xchg
add
jl
lock
sub
sti
daa
test
int
push
addb
mov
inc
sbb
stos
jmp
loope
call
sub
xor
out
popf
out
hlt
enter
loope
jmp
aam
push
ret
cmc
sub
add
hlt
jae
xchg
jecxz
lcall
repz
add
jg
ja
repnz
adc
aam
aad
xchg
movsb
dec
inc
in
pop
xor
jmp
aam
enter
std
mov
sahf
cmp
jbe
fs
or
scas
loop
and
ljmp
mov
adc
cmpsl
pop
add
mov
test
js
clc
in
inc
repz
in
push
int
cmp
lret
sbb
sbb
mov
adc
lock
cmc
mov
ret
in
je
cwtl
inc
cmp
pop
jle
mov
outsb
sbb
enter
add
mov
sub
sbb
pop
xchg
std
fwait
push
xor
add
mov
cmp
mov
sahf
xor
adc
in
mull
cld
inc
dec
icebp
adc
fldenv
xor
fcmovbe
or
jne
movl
sahf
xchg
mov
mov
or
or
pop
adc
jmp
adc
imul
xorl
inc
or
outsb
xchg
add
mov
fldz
push
hlt
mov
cmp
xor
and
and
xlat
iret
inc
pop
cli
pop
pop
pop
or
jp
mov
test
andb
notb
jns
xchg
jl
fcomps
clc
jl
rol
mov
cmp
outsb
scas
push
push
sbb
fisttpll
lock
fcoms
add
scas
jbe
or
jecxz
inc
aad
add
jns
add
cmp
out
jo
jp
cmp
mov
and
cwtl
dec
pop
test
adc
mov
scas
cmp
add
ja
pop
mov
mov
or
test
mov
xlat
xlat
xchg
and
or
clc
adc
test
movsb
out
sub
pop
xor
add
mov
mov
adc
inc
xchg
lahf
enter
in
xor
add
fimuls
jb
xor
sbbb
mov
mov
push
push
jae
cld
scas
data16
clc
cld
adc
sahf
jne
lods
inc
mov
mov
cmpl
rclb
notb
and
sahf
xchg
nop
add
add
test
jecxz
add
adc
test
jbe
pushf
jp
sti
out
add
cli
jnp
loopne
jb
sbb
and
test
js
add
adc
dec
pop
int
adcl
xor
mov
in
push
adc
insb
test
add
cmp
push
rclb
insb
inc
mov
adc
pop
jg
pop
int3
or
xor
lea
cmp
push
clc
rcrb
push
stc
sbb
ret
lock
inc
fsubrs
aas
xchg
adc
and
pop
iret
mov
cld
clc
aam
jle
movsl
scas
push
js
pop
and
sbb
cmp
nop
or
divl
stc
mov
fsubr
sub
jl
jne
adc
mov
xchg
jns
jb
pop
mov
jle
icebp
push
xorb
mov
insl
xor
dec
or
mov
push
push
xchg
push
cld
fcompl
popa
stos
hlt
repz
jmp
sub
pop
ja
pushl
andb
daa
xchg
and
sbb
and
aam
cmp
pop
jle
in
push
add
insl
sbb
vmulpd
cmp
adc
xorb
fsubrs
jno
push
mov
pushf
stos
lods
mov
push
in
sub
int
lcall
cmc
push
mov
pushl
mov
cmp
sbb
aam
jne
xorl
filds
sub
cmp
out
fs
mov
jns
data16
pop
imul
or
call
xor
and
out
hlt
aad
and
out
or
xchg
xor
punpcklbw
sbb
or
roll
imul
idivl
popa
adc
cmp
cli
movsb
jo
mov
jmp
idivl
pusha
xchg
rdpmc
sahf
add
pop
je
or
pop
cmp
cmp
or
inc
stos
das
xor
push
inc
and
ljmp
push
in
jle
jg
movl
int3
jle
subb
outsb
das
jno
adc
mov
add
dec
jno,pn
pop
scas
icebp
jns
repz
jecxz
icebp
or
sbb
xor
in
cwtl
repnz
add
loope
mov
jne
and
adc
loop
jg
or
push
repz
cs
test
icebp
adcl
hlt
bnd
cmpsl
cltd
jg
xor
mov
sbb
repz
lock
or
xor
xchg
add
mov
cmpl
hlt
andb
xor
in
cmpsb
popa
cwtl
mov
stc
rol
xchg
test
ss
jle
sbb
jae
lahf
mov
jne
stc
scas
addb
into
xlat
inc
sbb
mov
test
cmpsl
xor
lods
pop
cmc
lea
ja
call
lods
imul
cmp
add
movsl
push
adc
mov
das
or
add
stc
rol
cmc
nop
add
cwtl
lock
roll
jnp
aad
pop
cmpsb
mov
hlt
dec
push
inc
dec
and
or
jecxz
mov
out
xchg
dec
jo
adc
cltd
fsubp
fsqrt
mov
adc
test
sub
mov
popl
inc
push
idiv
cld
xor
pop
mov
in
mov
xchg
ljmp
out
sbb
movsl
mov
hlt
fs
mov
fs
fbstp
sub
sti
pop
mov
adc
cmp
lahf
je
xchg
ljmp
ret
cs
or
jl
push
int
divl
jb
std
or
aas
adc
xchg
add
aaa
dec
cmp
cmp
cwtl
or
fadds
cmp
mov
loop
pop
inc
fbstp
or
mov
mov
mov
repz
psllq
arpl
inc
mov
in
movsb
sub
xchg
sbb
or
fldenv
xchg
push
into
xor
das
js
outsl
mov
inc
pop
add
mov
sahf
rcpps
pop
imul
cmp
repz
jmp
mov
sub
mov
flds
ljmp
mov
clc
jp
or
lcall
out
cmc
add
xor
push
gs
les
stc
cmp
sbb
hlt
add
pop
sbb
add
push
xor
addb
mov
icebp
mov
or
or
mov
jno
mov
cmpsl
cmc
pop
or
arpl
adc
mov
adc
add
cmc
lret
xor
lock
sub
add
out
adcb
icebp
nop
lock
jno
xor
pop
mov
xor
xlat
sbb
jp
fstps
scas
pop
jle
out
inc
pop
adc
nop
jb
xor
loopne
pushf
dec
ds
aaa
adc
sbb
mov
and
jge
lahf
mov
lods
cli
icebp
lock
adcb
negl
es
cwtl
add
sti
insb
repz
testl
pop
lds
packuswb
inc
adc
repnz
pop
shrb
dec
in
mov
insb
clc
sbb
jbe
roll
inc
push
xchg
or
lock
cld
pushf
mov
enter
mov
cmp
aam
cwtl
and
jno
call
cmc
dec
gs
js
adc
add
movsl
dec
fcom
aas
mov
push
sub
dec
jb
sbb
mov
mov
xor
mov
add
dec
mov
shll
stc
mov
pop
imul
or
jns
pusha
aam
or
push
rcr
shr
xchg
inc
and
pop
cld
lods
mov
sahf
sbb
das
rolb
scas
bound
pop
xchg
repz
sbb
dec
sub
xorl
addr16
xor
inc
mov
mov
in
sub
push
jl
or
and
add
pusha
jle
pop
enter
push
rcr
cmp
test
or
mov
or
adcb
icebp
xchg
fildl
mov
testl
icebp
stc
and
pop
adc
movsb
mov
js
xchg
push
push
test
outsl
dec
test
xor
test
out
and
repz
push
stos
lahf
out
out
shr
jg
ret
pop
imul
dec
xor
xor
negl
imul
or
popf
or
push
lret
lahf
mov
mov
mov
adc
out
arpl
mov
and
and
or
pop
flds
out
xor
inc
mov
push
testl
cmpsb
mov
inc
mov
daa
inc
fldl
xorb
sub
xor
jne
movsb
jecxz
jae
cs
jl
pop
jnp
dec
test
std
mov
stos
and
xor
inc
jb
jl
cs
je
sub
push
jge
cld
xor
and
jmp
add
cmp
adc
lods
repz
jo
mov
adc
mov
out
loop
je
cmp
scas
cmp
push
aad
test
dec
and
pop
cmp
xchg
pop
cmp
imul
sub
mov
mov
int3
arpl
cmp
into
je
push
push
leave
or
xlat
inc
mov
jl
cltd
imul
repz
int3
fdivs
and
test
imul
cmp
jae
lock
add
push
insl
icebp
or
xor
adc
jo
das
push
ja
cwtl
int
pop
mov
jnp
cmp
jl
repnz
jno
jb
out
in
daa
mov
sbb
stc
xchg
icebp
xor
jae
out
xchg
adc
push
out
mov
push
lea
push
fldt
jae
aaa
fwait
lock
xchg
add
xchg
arpl
lcall
xchg
push
sbbb
je
add
test
sub
dec
push
cmp
and
jge
push
push
push
sbb
enter
hlt
sahf
mov
es
adc
sbbl
les
inc
in
mov
loopne
adc
jo
cmpsb
ret
shl
popa
mov
psrad
and
lds
idiv
sbb
in
push
or
xor
or
jg
nop
jno
shl
jns
or
int
xchg
hlt
cltd
iret
jmp
mov
or
cmp
loope
adc
jno
stc
shlb
jno
mov
xor
outsl
repz
ret
adc
nop
xorb
pop
lcall
fnstsw
lret
mov
das
into
add
rcrb
inc
jo
or
and
divl
xor
xchg
cld
aam
push
jo
sbb
js
push
and
cld
sbb
mov
daa
add
mov
sub
sbb
jle
add
sbb
adc
imull
fcmovb
xchg
pop
mov
test
or
insl
rcll
push
and
les
mov
shll
dec
bswap
cmp
mov
leave
cmp
xchg
or
aad
push
shll
pop
pop
jg
lret
bound
inc
jne
lret
and
jge
mov
mov
mov
cmp
xorb
rolb
or
and
nop
das
stos
mov
adc
cmp
lods
dec
cmp
enter
push
repnz
mov
mov
push
shr
test
clc
cmp
js
mov
mov
add
adc
fwait
sub
jb
hlt
cmpsl
bound
fldenv
js
lods
xchg
stc
adc
out
cld
adc
aad
popa
jge
xchg
jg
mov
jno
mov
inc
sub
lock
stc
jbe
adc
pop
adc
mov
and
stc
adc
inc
cs
push
xchg
xor
xchg
or
knotb
cmp
out
mov
fisttpl
xor
or
push
mov
cmc
fbstp
icebp
inc
fs
dec
pop
sub
lods
pop
addr16
cltd
iret
data16
mov
bound
movb
int3
push
nop
repnz
div
add
jle
out
mov
xchg
push
mov
and
pop
shlb
loopne
push
or
push
or
pop
shlb
push
jecxz
rcrb
lea
aaa
inc
dec
int
lahf
into
ss
mov
mov
pusha
cld
xchg
sbb
cmp
cmp
mov
mov
mov
xchg
loop
leave
push
inc
lret
push
cmp
or
cmp
mov
movsl
bound
xor
add
jnp
dec
jb
mov
and
jns
lock
jno
fwait
popl
cltd
jmp
lcall
jne
mov
mov
xor
sti
inc
push
cmp
gs
xor
xor
stc
xor
mov
test
movsb
sbb
jge
mov
or
and
dec
out
mov
hlt
out
es
and
js
repnz
sahf
icebp
jecxz
add
mov
pop
sbb
and
push
inc
push
jmp
divb
and
lock
inc
inc
jmp
shll
cmp
jge
xor
xor
mov
shlb
in
and
mov
mov
out
or
xchg
scas
aaa
inc
mov
je
lock
push
clc
nop
xor
mov
inc
xor
mov
xor
add
ss
pop
pop
xchg
pop
test
call
inc
stos
addl
and
xlat
jne
or
mov
xor
push
popa
mov
mov
cld
push
js
stc
lret
xor
loopne
push
or
push
adc
sub
or
cmp
mov
jno
icebp
mov
repnz
inc
cmp
cmc
aad
mov
ja
and
jl
movsl
push
push
mov
or
push
jns
popf
scas
xchg
xor
xor
fstpl
jno
ja
mov
fwait
adc
adc
push
and
mov
xor
and
or
pushf
icebp
shrb
inc
jg
pushf
cmp
in
idivb
cmp
std
dec
xchg
adc
out
xchg
add
xor
loopne
jmp
adc
jo
or
or
mov
rorb
int
sub
push
enter
int
jge
icebp
ljmp
mov
pusha
cmp
jg
xchg
mov
push
add
shll
dec
faddp
adc
sahf
arpl
repnz
mov
adc
adc
fbstp
xor
rclb
inc
iret
in
nop
mov
sub
fdivp
mov
movsb
enter
pusha
xor
popa
or
movsl
sbb
cmp
adcb
adc
fcmovne
jno
enter
jbe
inc
adc
lods
cmpsl
jb
lea
jae
or
lea
sbb
jno
add
outsb
mov
mov
jne
popf
jo
jge
movsl
jnp
icebp
mov
xor
scas
pop
test
fisubrl
inc
mov
aas
aaa
jle
xchg
mov
cli
push
jo
pop
sbb
xchg
test
std
cmp
adc
cmpb
repnz
mov
ja
add
js
pinsrw
lea
pop
repnz
mov
cmc
ficoms
add
test
jge
xor
pop
add
mov
jno
xor
inc
ja
jp
push
enter
sahf
jo
mov
inc
nop
xchg
shl
nop
jb
xchg
icebp
mov
aad
push
xchg
daa
push
clc
sahf
jo
cmp
cli
and
test
xor
notl
popl
dec
ficomps
cld
icebp
sub
fwait
outsl
xchg
add
stc
clc
sub
push
mov
pop
dec
xor
mov
jae
clc
sub
xor
das
add
rclb
cmp
orb
jb
je
lcall
repnz
mov
or
or
hlt
xorb
push
mov
int
jb
insb
jle
adc
notb
out
jnp
or
adc
mov
xchg
repnz
jp
iret
lods
sub
push
push
sahf
or
sahf
pop
sbb
sub
xor
or
xchg
xchg
stc
fisubs
int3
shl
mov
xor
adc
rcrl
push
and
loop
rcrb
hlt
mov
or
cmpsb
and
mov
movsl
push
in
sahf
enter
hlt
push
jnp
mov
cmp
rorb
fisubrl
jmp
inc
cmp
hlt
mov
sbb
jno
mov
in
xor
pusha
ja
pop
mov
arpl
cmpsb
dec
mov
xor
and
push
repz
imul
push
cld
cld
pop
mov
lcall
sub
mov
ficoml
enter
xor
and
aad
sti
daa
pop
popl
out
inc
mov
adcl
insl
xchg
iret
jecxz
add
iret
mov
pop
std
jo
or
in
and
cmp
fwait
add
cltd
bswap
lcall
cmpsb
inc
pop
push
mov
pop
repz
mov
dec
mov
loope
adc
and
add
mov
popf
jl
orb
sub
and
dec
xor
push
push
push
mov
aas
loopne
or
js
jne
shll
std
rsm
adc
dec
lock
movsl
clc
nop
xchg
shll
nop
fldt
mov
mov
lock
sub
jle
mov
enter
mov
out
push
insl
nop
or
int
test
pop
jb
xchg
mov
adc
mov
scas
xor
jp
div
lods
pop
imul
in
jl
fsubp
js
lea
ja
push
jns
mov
add
add
mov
mov
test
mov
lock
jns
test
mov
movsb
hlt
aaa
add
cmp
mov
jl
icebp
lret
adc
sbbl
adc
rol
ss
lock
xor
inc
xor
scas
and
addb
xor
into
flds
adc
and
jg
out
repnz
pop
cwtl
movsl
cld
mov
aaa
dec
cld
test
pop
mov
xchg
and
into
pop
xchg
je
sbb
mov
jo
jb
pop
push
adc
add
push
das
mov
in
add
mov
hlt
or
or
inc
fnsave
jnp
mov
push
adc
push
divb
cld
jo
icebp
icebp
in
add
js
ss
call
or
add
pop
and
sti
jae
mov
jg
fs
cld
sti
and
mov
cmp
and
mov
adc
dec
jb
jp
sbbb
push
pop
push
mov
jnp
xlat
js
rcr
adc
cmp
or
add
mov
cmp
sbb
and
repz
push
push
ss
pop
jle
sbb
xor
lret
sub
cld
ja
hlt
mov
xor
fisttpl
idiv
cmp
adc
repnz
lcall
cmc
cmp
xchg
sti
mov
in
je
xor
cmp
mov
xor
popf
test
add
push
pop
cmp
aas
xor
jg
out
cmpsl
ja
sbbb
xchg
outsl
out
icebp
sub
push
stc
or
dec
aad
jp
xor
dec
fs
hlt
pop
add
mov
leave
fmulp
pop
push
and
hlt
push
jne
outsb
mov
jns
pop
pop
cld
pop
icebp
mov
outsl
mov
jbe
xor
mov
adc
pop
jno
jb
mov
mov
cwtl
sbb
std
cmc
adc
sbb
dec
je
sbb
jp
jno
jge
pop
leave
sbb
fidivs
sub
std
xor
faddl
stos
cmp
adc
je
gs
add
sbb
mov
test
pop
adc
mov
cmp
pushf
je
cmp
or
mov
mov
icebp
icebp
dec
std
icebp
jne
cmp
jb
pop
and
fs
lods
mov
imul
jg
icebp
sbb
cmp
xchg
ss
xchg
jne
icebp
jo
sar
addl
or
and
cmp
cmp
aad
jb
sub
jl
outsl
cltd
push
cmp
push
arpl
cmp
ficomps
lret
inc
hlt
sub
out
stc
jo
fdivs
dec
nop
aam
or
leave
pop
mov
popf
std
xor
xchg
in
add
scas
in
scas
scas
das
xchg
addl
shll
xor
lock
orb
mov
mov
dec
or
popf
loope
xchg
cmp
stc
adc
lods
xor
add
rol
jno
pusha
jg
iret
sahf
mov
popa
outsl
mov
cmpsl
jp
pusha
in
pop
sti
mov
xchg
js
cltd
lahf
or
sub
xchg
jle
jno
fildll
dec
pop
lcall
cmp
mov
and
imul
movsb
bound
sbb
stc
aam
test
mov
stos
cmp
gs
std
shlb
iret
jle,pt
aad
cs
dec
or
mov
test
xor
dec
dec
rcr
inc
pop
and
inc
sbb
xor
mov
js
lock
repz
inc
jl
pusha
add
stos
xchg
mov
out
xchg
jl
push
inc
fsubp
inc
js
pop
ss
adc
or
imul
xchg
incb
nopl
sahf
sbb
jl
inc
test
sahf
icebp
aad
outsb
or
inc
dec
xor
jb
pop
or
pop
shlb
adc
fcmovb
pop
mov
jnp
lahf
adc
jecxz
aas
stos
xchg
arpl
iret
push
or
xor
adcl
xor
mov
aaa
jo
mov
or
xlat
xchg
add
xor
je
xor
adc
js
xor
je
xor
xor
mov
fists
push
or
sub
lock
mov
push
add
jne
ds
cld
pop
xchg
xor
xor
rclb
mov
lret
out
je
pop
push
shll
adc
push
sarb
and
and
in
cmpsb
clc
push
push
mov
mov
jb
or
enter
add
ljmp
xor
jecxz
mov
rcl
lock
shlb
rclb
jno
xchg
clc
mov
shll
js
xor
push
xor
xchg
clc
mov
shlb
js
xor
push
xor
xchg
mov
repz
push
je
jnp
orl
mov
xchg
and
pop
and
arpl
cmpsl
and
xor
js
adc
sub
and
je
clc
mov
js
inc
and
xchg
lret
and
add
ss
cwtl
mov
dec
and
cli
fwait
sub
lahf
add
inc
sub
add
xchg
sub
sub
mov
adc
adc
dec
cmpl
sub
adc
xor
push
xor
xor
icebp
jae
les
mov
repz
xor
add
cmp
adc
lock
cmp
adc
adc
add
js
xor
push
xor
jbe
mov
testb
mov
ja
xchg
repnz
cmpb
testb
add
shlb
adc
repnz
push
sub
adc
stc
mov
jp
in
push
lock
cmpb
add
push
insl
ficoms
mov
sbb
sbb
js
clc
repz
xor
je
xor
test
icebp
xor
pushf
sbb
mov
sbb
or
sub
pop
cmp
mov
test
into
mov
fistpl
or
in
adc
mov
out
jb
notl
movsb
xchg
or
mov
adc
imul
mov
cmp
cmp
jno
and
sbb
div
cmp
je
lea
ja
push
xor
or
shrl
out
imull
faddp
call
gs
out
jmp
shll
cmp
into
lret
hlt
cmpsb
and
cmp
rorb
or
test
mov
mov
mov
cmp
pop
outsb
xchg
sub
jmp
or
cltd
imul
sub
insl
int3
outsl
pop
test
or
pop
ja
fildl
and
pop
mov
add
notl
mov
test
sbb
pop
mov
xchg
repnz
pop
cmc
xor
shl
sti
pop
cmc
insb
adc
push
movl
stc
and
mov
mov
sahf
ds
aam
movsb
xor
or
repz
jb
xchg
pop
mov
mov
fisttpl
jno
jns
mov
xor
ds
mov
push
xor
xlat
cmp
pop
jo
adcb
cmp
add
shrb
mov
xor
fstl
mov
stos
xor
sub
cwtl
mov
lock
adc
lcall
sahf
cs
jle
popf
or
cmp
jge
fldt
sub
mov
jo
inc
ljmp
pop
out
dec
in
lock
cmp
push
pop
pop
sbb
or
lock
icebp
nop
sbb
mov
inc
loop
mov
stc
out
testb
xor
jp
jl
mov
inc
bound
shrw
fimuls
lock
icebp
and
dec
lock
cs
mov
lock
push
pop
and
scas
arpl
outsl
sbb
outsl
sub
xchg
mov
jo
js
xor
adc
push
adc
mov
sbb
sbb
sbb
bnd
stc
in
mov
scas
lods
jge
push
iret
sbb
adc
xchg
and
int
or
xchg
icebp
or
pop
js
notb
jp
lock
push
cld
scas
dec
mov
jns
adcb
xchg
imull
enter
push
mov
js
lea
clc
and
cld
adc
xor
or
adc
ss
mov
adc
and
sbb
lods
aaa
test
or
or
hlt
icebp
leave
and
adc
dec
icebp
into
xor
shr
sar
sub
cmc
jno
dec
icebp
mov
repz
jg
addb
std
iret
push
push
repnz
or
lock
add
cwtl
enter
push
sub
xor
pop
rorb
aaa
scas
push
das
ja
xchg
dec
mov
repnz
xchg
jnp
rorb
lock
jb
add
jge
adc
ret
adc
outsb
pop
mov
mov
bound
mov
mov
sub
push
pop
add
dec
arpl
mov
mov
push
sbb
cld
cmp
je
imul
adc
adc
aas
add
hlt
sbb
jae
loop
mov
out
xor
arpl
xchg
ret
adc
aam
pop
dec
fcmovbe
repnz
sbb
mov
jnp
lock
jnp
pop
mulb
cwtl
lea
or
xchg
lcall
xlat
cwtl
repz
mov
je
cmp
sbb
cmp
push
jbe
subl
inc
mov
add
jno
adc
xlat
cwtl
pop
mov
scas
sbb
cmpsl
sbb
jo
popw
mov
dec
aam
ss
out
jo
pop
outsl
dec
ror
mov
mov
mov
psrlq
jmp
adc
inc
inc
shll
sbb
xorb
sti
push
clc
jb
repnz
dec
xor
js
xor
jle
sahf
mov
jnp
test
fsts
into
movsl
mov
cli
sarl
add
sub
add
xchg
mov
mov
dec
mov
sub
xor
mov
cld
lret
mov
jle
movsl
xchg
adc
xchg
jnp
mov
repnz
jb
mov
jo
icebp
inc
lret
aam
clc
sar
push
je
jns
js
xchg
xorl
dec
add
je
xchg
fcompl
test
repnz
xor
add
jno
jb
sbbb
test
ja
mov
push
nop
repnz
popa
or
call
bound
add
sub
inc
cld
data16
js
mov
les
dec
or
sub
xor
mov
inc
loopne
mov
jno
leave
in
les
or
adc
or
dec
add
test
pop
cmp
fwait
push
popa
xchg
mov
and
dec
jo
popa
insl
lahf
pop
mov
push
adc
push
fsubrl
pushf
cmc
sbb
pop
push
sub
hlt
outsb
icebp
mull
clc
and
jbe
jle
es
mov
push
dec
jo
adc
add
lea
jecxz
push
jl
dec
jecxz
jne
icebp
aad
push
sub
push
dec
jo
add
clc
push
sarl
xor
stos
pushf
adc
jb
sbb
xchg
mov
sbb
dec
das
sbb
mov
popf
inc
jl
mov
jp
add
pop
gs
dec
xlat
cmp
cmp
adcb
jae
xchg
xchg
lock
clc
jbe
mov
xor
add
frstor
add
xchg
sub
jmp
xor
xchg
adc
xchg
mov
jae
repz
jno
and
hlt
adc
inc
mov
test
jge
xchg
mov
cli
sbb
or
add
adc
jp
pushf
bound
addl
push
lods
icebp
jae
and
cmpl
bound
pop
nop
dec
sbb
loop
test
rolb
adc
shlb
outsb
mov
subb
hlt
lock
mov
sbb
jne
mov
adc
mov
in
xor
mov
int3
int3
push
xchg
shll
test
sub
inc
out
cmp
mov
outsb
add
hlt
and
jb
in
js
lock
mov
cmp
add
xor
js
jg
inc
mov
testl
aad
js
aad
lock
push
pushl
push
jbe
mov
notb
push
sbb
pop
js
mov
cmp
cltd
mov
cmp
lcall
outsb
add
aad
paddw
inc
push
inc
ss
ljmp
fwait
push
adc
xor
outsb
movsb
enter
stos
adc
or
pop
mov
orb
xchg
or
xor
and
scas
mov
xor
cwtl
sbbl
insl
scas
mov
xor
xchg
dec
adc
xor
adc
push
enter
and
dec
xchg
xor
adc
les
inc
or
sub
mov
je
add
sbb
ss
and
cli
roll
xor
mov
jge
mov
inc
loop
add
fwait
iret
cmpsl
repz
xchg
lahf
aam
or
xor
jle
jae
roll
outsl
jmp
popa
das
push
or
sbb
xor
cmpl
sub
repz
inc
clc
jno
icebp
repnz
jbe
mov
repnz
push
xor
add
pushf
sub
cs
xor
adc
xor
icebp
and
bound
add
clc
idiv
cmpb
jp
rclb
subb
cmc
daa
dec
orl
adc
inc
icebp
xlat
inc
sti
xorb
frstor
lds
je
add
fcompl
fnsave
dec
aam
in
sbb
out
mov
mov
sub
repz
xchg
xor
jae
inc
fsubl
cmpb
mov
add
xchg
outsl
dec
int
sub
xor
cmpb
sub
movsl
pop
pop
add
clc
fmul
jbe
out
xchg
adc
sub
stos
jb
pop
push
dec
rorb
xor
add
mov
mov
mov
leave
cmp
gs
push
add
shrl
adc
aad
fwait
and
sub
jecxz
imul
fildll
mov
stos
add
pop
icebp
fimull
add
call
xchg
mov
xor
enter
mov
push
insl
int3
xchg
inc
into
sbb
sub
insl
test
xchg
pop
data16
lock
iret
aas
sub
and
out
lock
and
orb
xchg
mov
mov
rcr
sbb
add
cmp
mov
xchg
xor
mov
mov
cmp
lock
out
mov
jne
mov
or
jmp
stos
and
out
inc
mull
adc
ja
xor
sub
fiaddl
adc
icebp
andb
sahf
sbb
pop
or
stos
adc
mov
shrb
insl
mov
dec
sub
cmp
sbb
not
fldl
iret
aaa
cmp
mov
je
rorb
out
push
popf
mov
lods
push
push
inc
cmp
and
fildll
inc
or
dec
mov
sahf
mov
lea
sti
sbb
js
int
cmpb
shlb
lret
xor
push
mov
cld
xor
push
fwait
push
xor
mov
cwtl
add
inc
inc
jne
lea
push
cmpsb
shlb
aaa
mov
jb
lcall
or
mov
insl
rcll
fiadds
lea
add
push
enter
repnz
shl
mov
and
jb
dec
ret
mov
repz
sbb
pop
shl
cmp
stos
sbb
cwtl
sbb
inc
add
sub
or
aam
pop
dec
fwait
pop
repnz
pop
iret
pop
push
push
cmp
test
mov
repnz
inc
add
cmp
dec
adc
push
repz
stc
cld
jl
out
not
mov
ss
outsb
push
adc
adc
add
push
add
sub
jle
ss
inc
xchg
and
add
inc
icebp
adc
inc
bnd
push
cmp
inc
add
js
cmp
jae
lock
jg
jmp
jae
jl
cmc
add
xchg
mov
adc
sbb
cld
jge
xor
xlat
push
dec
std
fidivl
adc
cmp
cmp
mov
sbb
fnstenv
add
clc
sti
lock
xchg
leave
and
jae
cmp
iret
js
adc
mov
fidivrs
mov
fidivl
xor
xchg
add
mov
or
repz
xor
mov
scas
mov
out
sub
aas
enter
or
hlt
loopne
lahf
mov
sti
cmc
mov
cmpsl
xchg
and
jp
dec
divb
pusha
dec
cli
inc
nop
or
add
ja
xor
xor
mov
nop
aas
mov
pop
js
das
cmp
dec
jge
add
lock
inc
or
xchg
xor
pop
std
call
push
add
enter
lock
add
and
or
mov
scas
notl
sti
loopne
xor
cltd
ficoms
jae
insb
add
repz
pushf
cli
out
sbb
add
or
mov
lret
mov
pushf
cltd
and
sbb
xchg
pop
and
and
jl
mov
add
jmp
dec
dec
mov
cmp
mov
jbe
or
roll
push
xchg
xlat
xchg
arpl
mov
push
ja
mov
iret
lock
xor
add
dec
stc
fnstsw
pop
sub
adc
adc
or
fidivl
iret
and
jb
fisubl
mov
add
mov
mov
mov
jo
push
xor
pop
sbb
jnp
movsl
cmp
cmpsb
repnz
ret
lret
insl
cmp
push
lcall
pop
jl
pop
je
xchg
mov
push
jo
stc
icebp
lods
pop
icebp
mov
mov
mov
int
push
jg
scas
lahf
mov
sbb
xchg
mov
add
inc
xor
call
ror
xlat
jne
pop
ret
ljmp
adc
jns
sbb
lods
mov
and
or
jae
mov
hlt
add
inc
imul
or
aad
adc
cmp
pop
pop
xchg
xor
clc
push
or
xor
lcall
std
testl
pop
mov
stc
and
xor
movsb
je
jns
stc
mov
adc
lret
nop
adc
push
int3
dec
xchg
or
dec
mov
push
mov
push
jns
xchg
dec
fyl2xp1
iret
repz
pop
unpcklps
mov
jne
xor
repz
pop
icebp
inc
add
rorl
mov
ficoml
jg
mov
repz
xor
pusha
jb
icebp
mov
insl
lds
out
cmpsb
adc
add
jae
adc
or
adc
xor
lahf
test
in
pop
fsts
testb
push
shrl
mov
pop
add
fwait
out
andb
push
lahf
mov
arpl
jle
mov
adc
fcmove
ret
push
aad
push
mov
inc
push
push
pop
xchg
cmp
stc
cld
pop
ja
cmpsl
es
cmp
out
les
pop
dec
mov
xor
dec
out
leave
sarl
push
fwait
cs
or
sbb
dec
mov
pop
xchg
pop
add
dec
repnz
cli
icebp
nop
sbb
mov
cmp
je
xor
or
outsl
lock
xchg
xor
cli
or
push
js
iret
sbb
repz
xchg
or
sar
es
add
rol
es
movl
das
lcall
test
repnz
cwtl
int
mov
xor
xchg
adc
jge
decb
and
test
das
test
cld
lock
les
sbb
push
dec
push
popa
iret
adc
or
mov
add
xor
adc
add
mov
cld
xchg
fisttps
pusha
lahf
jns
push
leave
std
bound
and
and
and
fildl
div
sbb
lea
pop
sub
cmp
sbb
xchg
out
pushf
jge
lcall
stos
sbb
mov
stos
jg
mov
je
lahf
xor
push
and
aaa
cli
xlat
pop
adc
mov
xor
sbb
jno
mov
je
lcall
inc
cmp
adc
jbe
push
dec
pop
or
xchg
sbb
xchg
js
sbb
mov
test
add
pop
push
inc
js
popf
scas
shll
inc
jg
sbb
mov
mov
xchg
clc
stos
jl
insl
and
push
imul
imul
repz
daa
pop
mov
ret
cmp
jb
arpl
pop
xor
testb
sahf
lock
insb
out
cmc
imul
push
fs
mov
je
or
mov
push
jae
cmp
jle
je
adc
out
ret
js
jnp
fdivrs
xchg
lock
sbb
cmpsl
shlb
push
push
add
pusha
prefetch
cmp
or
jo
cmp
adc
or
cmpsb
dec
mov
sarl
sbb
jno
test
xchg
jge
call
pop
push
int
jecxz
pop
out
jle
icebp
push
fidivrl
mull
stos
pop
pop
andb
clc
sbb
mov
mov
inc
cmpl
jle
mov
mov
jle
pop
xchg
jo
and
icebp
jno
mov
xor
xor
pop
cs
cli
jae
rcrb
iret
fdivl
adc
jns
inc
xchg
test
jno
in
ljmp
push
les
pusha
pop
pop
inc
push
push
dec
loop
mov
lock
jbe
dec
inc
hlt
pusha
sbbb
bound
movsb
orl
sarb
cwtl
clc
lock
jmp
jle
adc
jb
xor
and
lahf
or
inc
sub
into
and
adc
jle
hlt
or
xor
and
or
sbb
pop
scas
push
fcoms
mov
xorb
sbb
jae
jle
cmp
or
cmp
les
jmp
lds
mov
xchg
or
pusha
decb
sub
imul
push
adc
xchg
jne
push
cmp
pushf
xor
aas
nop
add
jmp
fsts
or
xchg
and
jp
xchg
mov
mov
inc
outsl
outsl
js
addb
inc
xchg
ss
push
pop
inc
push
fildll
mov
xchg
sub
jl
xor
cltd
fdivr
mov
or
rcrl
repz
notb
jne
std
jns
push
daa
push
enter
rol
clc
out
stos
test
push
jnp
sti
stos
loope
xor
out
push
xor
adcb
push
mov
push
cmp
cs
mov
sbb
insl
mov
jne
adc
shrl
invd
adc
fdivrs
data16
mov
cwtl
jmp
or
xchg
bound
hlt
sbb
xchg
push
or
or
cmp
inc
push
push
add
adc
cmpl
mov
mov
push
stc
pop
sbbb
jle
adc
mov
jo
pop
adc
lock
cmpl
stc
and
cmp
pop
push
mov
or
icebp
sbb
sbbb
inc
mov
xchg
sti
xchg
or
cld
push
pandn
cmp
jg
jb
lahf
xchg
push
repnz
cmp
and
leave
dec
inc
jns
pop
pop
cltd
shlb
mov
adc
lock
cmp
cmp
repz
push
mov
pop
loopne
or
and
mov
pop
das
mov
cmpsb
leave
sbb
adc
ljmp
mov
aas
test
ljmp
push
sbb
push
dec
lahf
cmp
mov
loop
icebp
dec
add
shl
inc
or
fsub
xor
in
and
or
aas
cmc
outsl
jne
mov
dec
sbb
jns
inc
mov
xor
test
pop
push
outsl
xor
xchg
out
clc
cmpxchg
mov
mov
xchg
adc
pop
cwtl
bnd
pop
push
test
push
mov
mov
pusha
add
fsubs
xor
sarb
addl
ret
push
and
hlt
stc
cmp
push
ljmp
popl
fcoms
pop
dec
or
inc
mov
mov
push
fwait
andb
dec
out
sbb
sbbl
pushf
lahf
jb
inc
les
pop
fdiv
movsl
mov
stos
int3
jae
fdivs
jp
sar
mov
cmc
jns
cmpsl
pop
pop
pop
xor
add
fisttpll
shl
jo
repz
pusha
or
dec
repnz
arpl
shll
loope
adc
clc
xorl
aaa
sbb
jbe
inc
aam
mov
das
mov
push
stc
dec
push
imul
push
clc
cmc
ret
test
or
pop
jbe
adc
push
cmp
jo
add
push
sub
out
push
and
push
adc
sub
adc
icebp
mov
roll
add
cli
sti
mov
adc
xor
sub
test
jge
fisubs
mov
or
cltd
xchg
repz
rol
lds
loop
cmp
add
ret
sti
stc
ds
stc
mov
mov
sbb
in
sti
add
sbb
inc
stc
loope
or
jae
xchg
popa
xchg
mov
ret
jge
sbb
mov
or
lods
jge
add
xor
cltd
je
jge
fcmovu
or
or
vmaxsd
jae
scas
andb
xchg
adc
add
push
aas
imul
or
leave
push
add
and
in
jl
dec
fcmove
adc
imul
loope
jle
psubusw
mov
inc
pop
jl
lcall
jns
mov
adc
adc
test
cs
xor
xchg
cltd
xor
scas
cmp
cmpsl
jns
icebp
daa
xchg
lods
mov
pop
mov
dec
pop
inc
outsl
dec
movsb
inc
jns
mov
cli
ret
inc
jnp
cld
scas
cmp
xchg
aas
pushf
in
repnz
jne
fsub
cld
mov
mov
xor
lret
cld
mov
jg
insb
xor
jb
cld
and
fwait
lock
popf
cs
cld
adc
dec
adc
xchg
sbb
fucom
icebp
xor
adc
fimuls
mov
loopne
cmp
hlt
mov
imul
mov
mov
lahf
pop
les
mov
pop
pop
jnp
ret
add
pop
adc
pop
roll
mov
jg
mov
and
add
push
inc
pop
or
xchg
adc
or
jno
push
mov
ljmp
test
jecxz
sub
cmp
notb
fs
add
notb
sub
aad
leave
dec
sahf
fidivrs
loopne
and
xchg
sub
stc
lcall
imul
stc
sbb
or
or
cmp
or
inc
andb
mov
inc
je,pn
ja
lcall
fidivrs
xchg
jle
cmp
or
adc
fwait
lcall
das
jb
add
xchg
mov
and
lcall
shlb
ss
jb
inc
cmc
xchg
pop
jnp
xor
jl
push
pop
mov
pusha
aas
jg
outsb
push
or
or
mov
pop
mov
ds
in
pop
dec
sarb
test
mov
popa
mov
lock
sub
xor
mov
jno
xchg
mov
jnp
movsb
jp
ja
js
mov
jno
add
push
inc
mov
push
data16
pop
mov
js
call
addr16
aam
mov
or
and
cmc
inc
sti
shlb
lret
cmp
adc
nop
arpl
iret
xor
clc
inc
insl
pushf
loop
cld
xchg
hlt
loope
imull
icebp
subb
popa
jmp
aam
sub
push
dec
and
stc
jns
dec
inc
out
sahf
xor
int
lret
in
xchg
sbb
xor
inc
fmull
not
pusha
adc
je
dec
movsl
dec
xchg
adc
or
into
out
xchg
popf
and
sarb
jb
sti
lods
or
fisubs
iret
pusha
out
mov
or
mov
fdivs
cmc
in
sub
xor
pop
mov
jge
xorb
repz
lds
adc
or
rorb
jo
xchg
jns
xchg
sbb
arpl
cwtl
fsts
cmp
adcl
inc
ds
lods
out
adc
mov
loopne
mov
lock
xchg
js
mov
lods
sbb
sub
jo
xchg
pop
push
out
or
clc
xor
xor
inc
pop
scas
or
pop
adc
lret
sahf
rcrb
test
clc
pop
jecxz
out
mov
or
adc
jg
mull
dec
push
out
add
pop
jl
fwait
sub
mov
lahf
icebp
add
stc
xlat
aaa
pop
outsl
push
fmuls
push
mov
fdivrs
add
jle
add
movswl
test
mov
or
xor
pop
movsb
add
jp
std
inc
sahf
jle
inc
inc
push
les
repz
sbb
in
andl
pop
cmpb
out
lahf
inc
sub
dec
pop
jge
push
dec
and
stos
insl
mov
and
repnz
xchg
jno
sbb
stc
test
xlat
jle
test
mov
add
imul
xlat
add
icebp
xchg
mov
xor
dec
bnd
and
cmp
in
jbe
jnp
sahf
push
sbb
lock
push
pusha
pop
jnp
sub
cwtl
leave
mov
test
pop
aas
jnp
jno
iret
js
mov
stos
and
jno
inc
std
orb
mov
xor
pusha
dec
inc
clc
pop
sub
inc
sub
lods
xor
dec
lahf
jb
pop
pop
test
je
popf
mov
mov
rclb
fbstp
push
mov
scas
or
mov
lods
popa
ja
adc
dec
movsl
jb
ret
add
add
aam
in
jg
popf
adc
rcl
push
mov
mov
out
mov
add
mov
mov
xchg
inc
inc
sbb
cmc
jge
or
jle
mov
mov
cmpsb
out
or
rclb
adc
dec
mov
adc
notl
add
xor
dec
pop
cmp
or
lods
xor
pusha
mov
fidivs
push
add
push
aad
xor
xor
cltd
mov
inc
push
cld
shl
lahf
hlt
sub
adc
aaa
or
mov
push
adc
les
add
mov
aad
push
popa
lcall
je
popa
and
scas
mov
pushf
add
cs
xor
sub
mov
dec
and
roll
push
mov
push
pop
jg
sbb
mov
dec
inc
dec
jb
or
mov
test
push
add
push
sbb
pop
and
fcomps
sbb
inc
hlt
out
popa
cs
std
xor
test
xor
push
insb
js
sbb
inc
stc
sahf
rol
push
inc
loop
in
les
in
dec
outsl
xor
xchg
push
sub
or
push
pusha
stc
add
aad
in
add
jb
sahf
mov
cmp
jae
insl
fldenv
es
cmp
adc
or
or
sarb
jns
add
leave
shlb
mov
add
inc
inc
xor
mov
jbe
inc
adc
and
jno
js
xor
xor
add
inc
shlb
sarb
dec
pop
xchg
push
stc
lcall
mov
inc
cmpb
pop
ss
or
add
insl
mov
imull
push
sbb
mov
addr16
xor
loop
cmpsl
jne
xor
cmp
jle
enter
stc
mov
int
insl
fldenv
mov
sub
cmpsl
imul
mov
and
es
dec
jnp
fdivs
xor
jle
add
lods
scas
scas
xlat
or
arpl
ret
jns
fisubrl
pop
orb
sbb
mov
dec
fistpl
xchg
adc
mov
bound
int
mov
pusha
aas
std
dec
cmp
pop
jae
sbb
js
jae
aam
dec
lds
add
push
mov
mov
adc
xchg
mov
fcoml
mov
jge
out
cmc
es
mov
xchg
xchg
jle
add
push
shl
xchg
mov
ret
cmpps
dec
movsb
mov
sbb
jl
jp
jecxz
lods
jns
push
xchg
cli
inc
push
loopne
push
add
inc
repz
push
cmc
mov
fidivrl
mov
cmp
ficompl
pop
adc
cmp
jp
call
fnsave
cmp
adc
push
dec
sti
sbb
xchg
test
add
testl
loope
mov
sbb
out
scas
xor
cmp
popa
mov
push
loop
rclb
clc
mov
pop
mov
fdiv
and
add
stos
das
add
stos
sub
mov
out
push
jns
pop
add
ljmp
jbe
stos
add
jle
repz
repz
loope
neg
push
cmc
das
ja
or
iret
out
rorl
lock
push
clc
mov
jle
aaa
sub
xlat
mov
jp
adc
clc
add
adc
notl
in
jno
mov
sar
and
inc
pop
mov
aad
jle
sub
and
mov
imul
in
lret
jbe
je
push
push
dec
xor
pop
cli
rcl
insl
mov
mov
gs
sbb
repz
sahf
adc
pop
sub
lods
mull
jg
or
add
decb
xor
xor
xor
jbe
cwtl
mov
enter
cmp
push
stc
xlat
dec
nop
in
mov
gs
and
test
leave
iret
sar
fimull
or
adc
lret
daa
pop
repnz
xor
js
cld
inc
or
or
test
out
out
dec
cmc
adc
daa
fs
rcrb
or
fcmovb
jmp
into
jp
jb
jae
cmp
repz
pop
imul
fnstenv
sbb
pop
mov
cmc
or
es
pusha
cmpsl
sub
sub
inc
or
fdivrs
lods
outsl
push
lea
inc
mov
jb
dec
xor
dec
push
sti
adc
add
xchg
jl
jae
mov
push
adc
mov
sahf
add
mov
cmp
out
lock
jl
rorb
cltd
hlt
lea
lret
push
cmp
or
xor
js
inc
xor
or
push
jbe
adc
sbb
mov
xchg
push
outsl
jnp
add
mov
movsl
push
jns
pop
lods
cmp
and
xchg
fisttpll
jle
inc
jns
push
pop
divl
aas
jo
xor
pop
or
aad
jp
loope
fildl
hlt
dec
popa
jne
jno
adc
push
mov
add
aam
aam
stc
or
imul
in
adc
mov
ss
pop
push
loop
jg
dec
xchg
sub
fisubs
xchg
mov
mov
vmread
addr16
sbb
js
ret
jle
sbb
leave
rorl
out
cmp
adc
add
jge
sbb
xchg
adcl
scas
mov
pop
push
add
fbld
fwait
leave
sub
aam
and
aam
out
or
mov
jae
pusha
cmc
or
sbb
repnz
aas
adc
cwtl
insb
hlt
mov
push
cmp
mov
orb
xor
dec
mov
enter
jl
sbb
jge
sub
cli
lcall
xor
jns
adc
add
icebp
push
mov
sub
push
mov
mov
adc
sbb
bound
push
stos
cmp
clc
xchg
push
xchg
es
icebp
push
mov
shrl
aaa
push
mov
ret
pusha
iret
pop
jge
data16
mov
xorl
loopew
add
cmp
cld
xor
adc
pop
push
push
pop
insl
decb
inc
out
clc
or
or
icebp
push
mov
inc
dec
hlt
mov
imul
mov
and
push
adc
jb
inc
gs
push
xor
ja
sar
insl
hlt
adc
repz
aad
push
or
sarl
xor
jb
add
aaa
fists
xchg
out
jg
add
or
stc
mov
jnp
or
cmp
xorb
jecxz
xorb
add
sub
filds
and
aam
cmp
call
push
shl
shlb
mov
cmp
fisttpl
xchg
mov
sub
mov
mov
fimull
cmp
mov
or
or
pop
aad
test
cmc
xor
xchg
dec
or
mov
xor
push
pop
cmp
jns
pop
pop
outsb
cli
pop
out
lcall
cld
xchg
lock
mov
jl
sti
ror
push
or
xchg
cwtl
loope
arpl
mov
dec
data16
movsb
xchg
add
hlt
cmp
xchg
lret
dec
pop
inc
push
mov
add
stc
push
loop
cli
push
movsb
je
dec
imul
loope
subb
jl
mov
jo
jg
test
mov
enter
cmp
adc
sarl
lods
popa
jnp
jno
adc
push
mov
push
outsl
jg
fdivr
sbb
fstpt
push
shrl
test
mov
cmp
and
imul
xor
mov
inc
and
mov
lahf
mov
je
clc
je
xchg
xor
cmp
mov
pop
push
push
jmp
xor
push
xchg
xchg
mov
je
icebp
mov
push
clc
rcll
cmpsl
mov
or
fcomps
xor
jp
cmp
sbb
ja
pop
push
mov
sahf
xchg
xor
and
jecxz
inc
in
mov
movb
stc
jo
xor
cmc
adc
lret
jg
outsb
xchg
bound
aam
pop
mov
cmp
or
mov
into
prefetch
jbe
cmpsl
in
sub
or
push
pop
adc
js
or
xor
pop
sbb
fisubl
out
jo
push
xchg
xor
mov
dec
jmp
mov
dec
jae
fstpt
add
in
xchg
push
jbe
adc
dec
adc
jg
cli
and
cmp
jg
mov
mov
jbe
jbe
js
dec
pop
xor
mov
repz
mov
or
repz
das
cmp
cmp
xor
aaa
cmp
mov
shlb
cld
cmp
and
xchg
fbstp
fisttpl
and
mov
sahf
mov
out
out
pop
pushf
xchg
dec
outsl
lock
xor
and
jle
sbb
enter
sti
jo
mov
and
or
cld
push
or
stc
mov
aad
inc
pop
ss
mov
add
shlb
mov
push
xchg
cli
pop
out
cld
insb
daa
inc
push
xchg
cwtl
xchg
pushf
fidivs
sbb
jno
dec
dec
inc
icebp
cmpsb
or
add
sub
mov
dec
or
mov
stc
xor
rcr
cmc
bound
or
mov
sti
add
ret
stos
shll
aad
call
mov
pusha
jp
adc
int3
call
insl
cmp
fwait
test
push
lret
jecxz
std
fsubs
mov
inc
stos
gs
adc
cmp
aam
fcomps
mov
scas
jbe
out
pop
sahf
into
outsl
lret
mov
imull
out
incb
div
scas
mov
lock
xlat
inc
cmp
or
push
sbb
ja
push
out
push
mov
pop
jbe
or
stc
or
and
adc
xchg
repz
mov
shrl
cwtl
sahf
xchg
xchg
bnd
and
push
mov
pusha
sub
scas
jb
out
jbe
or
mov
mov
mov
mov
xor
and
leave
adc
pop
pusha
jo
lock
cmp
mov
in
mov
sub
lcall
sbb
cltd
cmc
cltd
repz
push
mov
hlt
dec
push
fistps
jo
ss
rcrl
sbb
or
jb
fidivl
pop
jp
push
and
sbb
loope
sbb
hlt
mov
lock
pop
xchg
sub
ret
outsl
jae
ret
addr16
stc
xchg
xchg
icebp
lret
add
sbb
add
pop
je
imul
dec
jne
push
add
sbb
cwtl
cltd
int3
inc
cmp
rcrl
sub
pop
cs
mov
sahf
add
pop
jnp
mov
rep
xchg
std
xor
jl
fisubrl
sub
mov
std
and
cmp
push
mov
mov
push
cmp
out
push
xchg
add
add
iret
and
pop
sahf
xchg
jo
daa
mov
mov
movsb
aaa
adc
jne
mov
icebp
or
dec
and
repz
adc
into
js
je
repz
arpl
xorl
sti
sbb
mov
stc
sahf
mov
pop
add
dec
mov
add
jl
int3
std
repz
push
push
shlb
dec
mov
xchg
inc
dec
inc
xor
xor
xor
loop
dec
sbb
int
jno
adc
or
fdiv
stc
inc
xor
mov
xor
dec
sub
mov
sub
push
xor
lret
fldlg2
stos
sbb
sbb
mov
xor
repnz
dec
jns
jo
add
inc
push
or
and
repnz
push
mov
movsb
push
or
push
xor
jns
adc
sbb
iret
or
push
fidivl
mov
enter
jae
xchg
aaa
push
lods
jne
imul
push
pushf
imul
or
sub
jbe
xor
divl
dec
pop
in
mov
add
call
out
outsb
out
clc
dec
ss
or
pop
dec
cmp
sbb
mov
xchg
lea
fstl
jb
pop
cwtl
xor
push
adc
je
inc
mov
outsb
xor
push
add
inc
mov
and
hlt
lea
mov
std
or
sbb
out
or
cmpsl
mov
mov
pop
notb
jl
or
call
adc
pusha
dec
icebp
repz
mov
js
jp
cmp
jns
jbe
xchg
mov
cmp
je
and
jmp
aaa
dec
jle
add
cmc
xchg
mov
jne
jecxz
arpl
lods
jl
push
cmp
mov
pop
divb
aaa
cmp
loop
inc
clc
mov
pop
pop
push
rclb
pop
push
mov
outsl
daa
mov
into
insl
pop
pop
or
stc
sub
mov
je
in
fsts
addr16
mov
jne
jle
clc
adc
mov
sqrtps
xchg
enter
lock
fcoms
add
push
pop
sarb
mov
fwait
popa
cmpsl
jle
ds
ds
pop
and
enter
push
shll
inc
xchg
inc
fidivrl
sbb
xchg
jecxz
push
or
mov
jle
shll
adc
adc
out
cmp
clc
subb
leave
jno
aad
test
xchg
and
fcmove
push
fcomi
xchg
call
and
mov
aad
andl
xor
lcall
jne
adc
sub
sbb
in
mov
dec
stc
mov
pop
divb
inc
data16
mov
mov
mulb
aad
int3
pop
mov
dec
jle
gs
imul
jge
inc
or
sub
mov
out
add
inc
jle
and
jae
mov
mov
or
adc
jl
cmp
icebp
adc
fprem
dec
jnp
fwait
add
pop
aam
clc
int3
test
js
push
cmp
clc
mov
push
inc
decb
pop
ljmp
push
out
ss
fiadds
mov
sbb
adc
mov
je
adc
jo
cmc
dec
mov
orb
add
int
clc
lcall
inc
scas
dec
dec
adc
push
insl
jae
sahf
xchg
in
or
icebp
test
int
mov
std
cmp
dec
dec
or
test
iret
and
into
cwtl
jl
outsl
mov
neg
xor
dec
mov
sub
lahf
push
jns
in
outsl
sbb
pusha
fisttps
pop
mov
xchg
xor
or
sub
jbe
inc
mov
lock
repnz
das
mov
es
or
push
mov
pusha
add
adc
stc
mov
or
out
cmp
inc
andl
fisubrs
xor
repz
sub
add
xor
sbb
imul
fnstenv
lea
adc
jb
popa
pushf
sub
sbb
add
lahf
mov
call
mov
repnz
imul
xchg
or
repz
mov
sbb
sbb
pushf
js
loope
loop
sbb
or
iret
inc
insl
mov
popa
jno
rcrb
dec
ret
pop
cmc
ss
push
jne
add
nop
test
push
adc
lea
rcrl
push
sub
aas
jnp
mov
push
fnstcw
addb
mov
sub
insl
xor
xor
xchg
ljmp
xlat
xchg
jae
inc
out
pop
jl
fcmovb
jbe
sub
adc
pusha
daa
clc
divb
and
cmpsb
stc
enter
adc
mov
bound
pop
push
ja
xor
mov
dec
dec
sub
enter
push
popf
jno
rorl
lock
negl
popa
push
fcmovnb
push
in
in
mov
aaa
std
jle
add
rcrb
ds
inc
loop
sbb
int
inc
dec
enter
xor
or
mov
test
cmp
xchg
stc
xor
dec
inc
mov
js
sbb
jne
shll
mov
push
and
add
pusha
dec
fists
pop
jge
xchg
xorps
jl
and
add
test
jnp
sbb
test
push
mov
push
lock
push
mov
or
jge
add
inc
movaps
pop
orb
adc
xor
or
fidivl
ss
pop
xchg
test
adc
mov
popf
xor
dec
out
jle
test
inc
cmp
mov
add
xchg
cmpsb
ret
jno
add
xchg
clc
add
cld
push
push
cmp
xor
pusha
cmp
mov
push
cmp
add
pop
je
mov
or
cli
cmp
mov
sti
cmpsb
sub
popa
std
iret
dec
nop
jg
mov
xor
loop
aas
repz
jo
inc
aad
clc
mov
cmpsl
inc
jmp
jo
mov
test
push
jl
pop
push
daa
aad
inc
xor
cwtl
sbb
or
mov
cmp
test
ret
xor
sahf
into
jle
aam
es
xchg
shll
icebp
and
mov
lods
ja
lds
mov
icebp
dec
cmpsb
jno
xor
pop
adc
icebp
or
insb
push
decb
les
mov
jg
ret
fistps
adc
adcb
cmp
mov
push
jno
aam
adc
and
pop
rclb
lock
xchg
aam
inc
jge
dec
cli
lock
dec
roll
test
add
or
pop
out
mov
sbb
pop
sahf
das
sub
fwait
cmp
or
adcl
sbb
into
mov
aas
ficoml
pop
xor
fisttps
idiv
adc
mov
aaa
or
arpl
sbb
add
call
repnz
xchg
jge
sti
in
jne
dec
lcall
daa
lods
adc
mov
andb
pop
scas
pop
dec
outsl
sahf
mov
call
xchg
pop
sbb
out
rol
xchg
out
addb
and
adc
fwait
pop
repz
cmp
adc
icebp
sub
add
mov
test
cmp
sbb
lret
inc
dec
mov
je
fs
lock
fimull
xchg
cmp
xlat
sub
lods
push
fsts
jge
ret
mov
cmp
push
and
mov
sti
adc
into
icebp
std
xor
or
mov
inc
add
dec
aaa
leave
cwtl
xchg
xor
mov
mov
cmp
push
pop
mov
xor
dec
jnp
lcall
stc
sub
adc
jns
icebp
xchg
ret
js
xlat
push
scas
add
adc
ja
or
repnz
out
jl
addr16
xchg
jbe
add
adc
push
mov
mov
cmp
imul
aam
scas
push
mov
div
xchg
jb
jo
adc
xor
xor
xor
and
rcrl
jle
ja
cmp
or
mov
pop
dec
dec
mov
add
int
mov
aas
idivl
xor
stc
je
clc
negl
mov
mov
cmp
xor
jbe
push
int
xor
cs
jne
pop
or
icebp
popa
xchg
jno
dec
cmp
testb
gs
inc
xchg
pop
xor
aaa
adc
jmp
xor
jne
aam
icebp
jbe
orb
jae
mov
adc
cmp
dec
iret
pusha
dec
sbb
or
mov
mov
sbb
mov
xor
nop
pop
jle
mov
lret
push
or
mov
hlt
lret
aaa
into
popa
mov
and
xchg
sbb
and
push
sbb
mov
or
icebp
push
and
lods
add
pop
push
add
mov
xor
addb
or
pop
icebp
ret
lcall
hlt
dec
mov
fucomip
cmp
push
pop
loop
clc
or
or
call
stos
jnp
dec
sub
push
aaa
daa
enter
xor
xchg
icebp
iret
sarl
test
sbb
ror
and
mov
mov
fcoms
or
mov
xchg
movsl
jg
fwait
jmp
cmp
nop
jb
addl
repnz
cvtpi2ps
clc
es
shlb
adc
leave
sti
push
jle
or
cli
or
fsts
sbb
stos
into
repnz
cmp
cmc
test
std
je
shlb
jge
les
add
or
mov
divl
popa
xor
insl
rolb
and
mov
dec
jmp
push
loop
orl
fiadds
clc
notl
dec
scas
dec
add
pop
jbe
or
cwtl
in
iret
icebp
pop
lock
out
cli
test
inc
shlb
fcomi
xor
pop
push
cmp
pop
cld
mov
test
out
rcrl
push
or
and
lcall
xchg
dec
stc
leave
pop
sbb
flds
das
pop
push
inc
jb
xor
ja
test
daa
push
and
dec
ja
icebp
fdivs
lock
add
mov
add
ret
xchg
pop
icebp
push
pop
or
cmpsl
pop
test
insl
and
ficoml
pop
popf
mov
scas
push
cli
bound
mov
outsl
pop
into
push
lock
add
mov
repz
jae
and
add
jns
mov
mov
dec
outsl
jb
insl
negl
add
jo
mov
adc
cmp
xor
rorb
cmp
stos
nop
shrb
push
push
xchg
stos
dec
inc
and
jb
loop
ja
xor
mov
inc
out
add
xchg
neg
mov
xor
addl
popf
std
bound
test
pusha
out
xor
mov
or
out
mov
pop
popf
mov
in
xor
mov
mov
push
jle
mov
iret
jns
mov
xor
dec
adcb
aam
mov
adc
jb
cmp
daa
jo
sbb
xor
insl
mov
xchg
adc
adc
add
rcll
rcll
jb
in
sub
test
imul
jg
and
in
jp
mov
cs
xor
cmpsl
popa
hlt
xor
sub
call
jb
lcall
or
hlt
lahf
mov
testb
dec
gs
jle
iret
pusha
addr16
lret
mov
cwtl
mov
fs
fwait
jecxz
pop
mov
or
loopne
jecxz
push
sub
aad
mov
mulb
inc
mov
sahf
cmp
jge
insb
pop
dec
xchg
mov
mov
rorb
dec
lock
add
adc
jne
xor
jb
js
jo
jns
adc
add
push
push
xchg
push
lea
mov
or
mov
push
or
add
mov
or
fidivs
jns
adc
and
sbb
je
mov
fdivrs
add
popa
xchg
sbb
out
sbb
push
xor
adc
push
pop
xchg
dec
out
cli
add
xor
rcl
lock
pop
push
imul
scas
imul
stc
or
rcr
jp
xor
xor
repnz
movhps
cmp
iret
inc
aam
shll
adc
ficoml
push
mov
mov
lahf
mov
xchg
pop
sub
outsl
enter
sbb
repz
faddl
inc
add
pushf
or
ja
leave
repz
pop
repz
movsl
lock
xchg
mov
sbb
cmp
adc
aas
mov
adc
mov
jp
jl
adc
fsts
in
stos
scas
movl
rclb
push
adc
push
xor
cmp
sbb
test
sbb
test
js
mov
mov
insb
repz
or
mov
cmp
pushf
inc
jecxz
shl
add
dec
sub
xchg
mov
add
fdivrs
insb
cmc
xor
clc
cmp
adc
mov
call
jp
or
xchg
orl
xchg
push
jb
pusha
cwtl
mov
cs
inc
sbb
push
jae
clc
lahf
js
xchg
lahf
rclb
or
adcb
je
clc
or
mov
and
das
shl
xchg
adc
xchg
sbbb
add
cs
jns
mov
jecxz
mov
add
xchg
xor
js
mov
sbb
and
adc
xchg
ja
mov
aam
mov
jl
rclb
dec
iret
jo
je
hlt
cltd
add
xor
cmp
repz
inc
jl
pushf
cmpsb
out
pop
jo
ss
dec
xchg
fisubl
add
test
xor
bound
in
push
ja
cwtl
mov
psubsb
cli
std
loop
dec
dec
jle
nop
cmpsl
cmp
xor
push
jp
xchg
xchg
pushf
mov
push
xor
mov
mov
mov
xchg
cltd
cs
pop
jne
dec
notl
mov
iret
and
mov
push
adc
enter
xor
icebp
push
ret
mov
jl
mov
jno
mov
mov
std
cli
add
sub
jp
pop
dec
xchg
mov
lock
insl
mov
ljmp
cmc
cld
add
aad
cld
xchg
adc
movsb
popa
xchg
jno
sub
mov
mov
add
mov
popf
add
aam
scas
pop
icebp
repnz
add
stc
notb
push
out
or
xor
out
ret
cmp
jp
jl
roll
jp
je
ds
xor
pop
js
sbb
shl
jno
cltd
mov
pushf
pop
js
add
pop
adc
xchg
add
jp
adc
hlt
nop
sti
addb
jo
div
jl
clc
rep
lahf
xlat
test
inc
js
andl
icebp
sbb
xor
cwtl
add
adc
sbb
out
and
adc
cmpsb
inc
sub
pop
fs
divl
inc
fdivrs
adc
push
pop
icebp
or
in
push
loope
psubusb
jb
push
xchg
dec
xchg
clc
jb
clc
xchg
inc
fsubrl
cmp
jg
jns
lock
pusha
cwtl
sbb
adcl
mov
jne
lock
filds
xchg
jl
jle
jb
js
sbb
lea
cmp
stos
ljmp
jle
stos
icebp
les
add
pop
icebp
or
icebp
nop
and
add
pop
jb
push
jo
mov
and
test
pop
aam
inc
test
sub
xchg
repnz
mov
movsb
outsb
sar
or
or
add
sub
mov
jg
idivl
cmp
jns
mov
mov
dec
jnp
into
mov
and
jle
test
or
out
stos
fstps
scas
jbe
inc
ljmp
mov
cmp
pushf
and
mov
add
mov
push
popf
hlt
and
jb
mov
lret
fprem
sbb
cmpsb
adc
adc
sbb
xchg
mov
cwtl
out
movsb
push
adc
pop
jo
cmp
fs
jno
hlt
mov
mov
xor
frstor
inc
cli
clc
hlt
divl
ja
lds
inc
lock
out
ss
ret
push
test
jbe
xor
out
add
int
lods
push
xchg
lock
mov
xor
test
add
out
je
mov
mov
and
jecxz
and
xor
ret
sbb
in
or
jp
mov
in
leave
leave
pusha
and
fiaddl
jo
adc
pop
mov
pushf
cmp
js
jno
cli
ljmp
cmpsb
aad
and
sub
cli
jb
ret
enter
daa
stos
ret
cmc
xchg
mov
hlt
and
rorb
mov
fistl
jp
push
lock
jmp
lock
mov
add
jns
jp
imul
sub
xchg
pushf
data16
sbb
icebp
lock
pop
mov
out
xor
cld
dec
mov
lock
pop
lahf
int
in
dec
adc
cmp
clc
aad
in
add
clc
pop
aas
add
mov
hlt
cmp
sarb
mov
in
mov
dec
mov
inc
xchg
mov
mov
popa
jns
and
pop
scas
hlt
sub
cld
mov
jge
sub
xor
mov
mov
cmpl
xchg
stos
and
xchg
mov
add
test
outsl
xchg
aas
sub
xchg
xor
subl
lcall
inc
or
xchg
test
mov
add
in
push
ja
int
jp
jg
cmpsl
popl
js
outsb
jp
pop
lea
inc
adcb
pop
leave
cltd
loopne
xor
add
jmp
adc
xchg
xlat
xlat
xor
rcll
mov
xchg
fcompl
lock
call
cmc
in
xor
push
in
jb
jae
aaa
in
ja
xchg
in
pop
lods
pop
out
or
or
dec
mov
int3
lods
mov
sub
or
jmp
lret
stos
mov
sub
lret
jg
mov
jp
jecxz
jecxz
and
test
jns
mov
adc
clc
or
cmc
or
repnz
adcl
xor
jle
je
sbb
jge
lret
mov
icebp
test
mov
and
adc
xor
adcb
push
sbb
or
jne
bnd
mov
mov
movsb
pop
mov
jl
sub
adcl
cmpsb
sub
add
stos
push
adcl
push
jno
mov
repz
cmp
adc
jo
mov
adc
or
dec
jo
and
add
pushf
cmc
and
and
or
pop
mov
push
je
test
and
mov
test
mov
add
add
daa
sahf
js
or
rol
shll
lret
aad
pop
loop
popa
push
mov
dec
pop
test
jle
out
pushf
mov
bound
dec
and
lock
sbb
jecxz
pop
in
jl
lock
cmc
add
jmp
div
mov
clc
jl
movsl
scas
inc
leave
jo
jns
add
pop
dec
orl
mov
cmp
xor
ljmp
gs
neg
mov
cli
ds
lock
jo
adc
mov
stc
jge
pop
in
dec
leave
adc
cld
fiadds
scas
mov
fmulp
jl
stos
bound
jp
inc
clc
scas
popf
mov
lds
mov
cli
in
cwtl
jno
es
cld
jmp
data16
je
mov
push
ljmp
cmp
ljmp
in
incl
or
xor
sbb
push
push
or
popf
xchg
gs
sbb
fnstenv
jns
mov
flds
xorl
pop
xchg
jg
lock
sub
fdiv
add
rcrl
pop
cmp
rolb
pushf
sub
pop
pop
hlt
outsl
xor
sahf
xor
std
jg
mov
mov
sbb
push
xchg
and
add
xchg
pushf
mov
mov
cmp
mov
mov
sahf
aad
mov
lock
cmp
or
rclb
sahf
test
push
lock
xor
dec
outsb
pop
sbb
jecxz
mov
jecxz
mov
ret
jecxz
jbe
ficoml
js
pop
adc
pop
jnp
les
clc
push
xor
adc
jge
pop
mov
loop
mov
ficompl
jnp
push
mov
mov
inc
jge
adcb
adc
scas
adc
mov
dec
sub
inc
sti
decl
fldenv
daa
fmull
test
insl
out
dec
or
jmp
lock
push
mov
or
cmp
sub
gs
js
adc
adcl
inc
aas
push
adc
lock
rolb
adc
inc
je
movsl
jae
stos
push
add
xchg
inc
cld
fcmovb
jb
adc
shrl
inc
inc
aaa
push
mov
ret
lods
dec
cmc
adc
sti
jnp
je
idivb
cmp
jnp
ljmp
js
jle
dec
mov
mov
dec
mov
add
and
add
mov
ja
pop
notb
repnz
mov
mov
ret
sub
sub
sub
mov
std
adc
pusha
pop
inc
jno
mov
std
xor
xchg
pop
mov
cld
lock
xchg
adc
push
mov
push
lds
jae
xchg
jecxz
jecxz
jecxz
jecxz
jecxz
ret
xor
mov
aam
aad
cmpsl
adc
mov
jne
jns
push
mov
pop
push
ja
cs
sbb
enter
mov
sub
or
out
xchg
cmpsl
shl
scas
in
xchg
addr16
inc
in
daa
lods
pop
add
out
das
and
das
cmpsb
das
xchg
data16
inc
das
es
xor
ror
adc
lock
sti
je
clc
or
push
icebp
jb
xor
js
push
add
jno
icebp
xchg
and
je
fcomi
shlb
repz
repnz
std
stos
adc
or
xchg
xor
lock
stc
jg
mulb
jge
adc
adc
pop
add
and
push
jg
sub
adc
xchg
add
shl
cmc
ja
notb
js
std
and
xor
push
repnz
and
xchg
jg
icebp
ja
push
add
add
lock
je
jno
adc
adcl
adc
xor
sub
or
push
icebp
adc
hlt
sbb
mov
xor
addl
jb
mov
push
and
repz
repz
mov
js
mov
and
clc
push
popl
sbb
sbb
mov
and
repnz
test
or
adc
and
and
pop
lods
and
xchg
mov
sbb
loopne
push
pop
xor
rolb
xor
xchg
and
mov
repz
adc
adcb
icebp
lods
insl
int3
shrd
push
or
cwtl
mov
sbb
roll
lea
fdivrs
sbb
cld
sbb
or
dec
and
cmp
push
std
inc
adc
lock
cmp
cwtl
sbb
cmp
rclb
repnz
push
jge
inc
pop
mov
jmp
add
mov
orb
mov
add
popf
insb
mov
pop
mov
sti
scas
test
jge
sbbb
cwtl
test
cmp
mov
out
mov
xor
fadds
rclb
or
jge
mov
adc
push
mov
cli
shl
push
adc
mov
cs
js
jl
add
cld
or
adc
jle
bound
cmp
mov
loope
stc
mov
popf
ret
adc
cmp
dec
xor
push
rclb
and
jnp
jnp
xchg
push
icebp
inc
add
add
xor
data16
test
mov
xor
aaa
or
cmpsb
push
pop
roll
mov
out
mov
jno
test
insb
push
xchg
or
pop
xor
mov
mov
push
lock
or
pop
cmp
xchg
or
filds
push
mov
inc
jno
cmp
addb
cmc
addr16
cmp
and
mov
pop
sub
rolb
inc
dec
mov
jle
mov
inc
cltd
lcall
pop
pushf
jl
push
sbb
adc
js
fwait
xchg
sahf
jo
push
pop
cmp
pushf
jp
pop
add
popa
in
loop
xchg
jg
loop
testl
repz
xchg
sbbl
stc
xor
js
mov
add
push
aam
push
mov
loopne
je
test
push
cld
jne
adc
inc
cmc
imulb
into
or
jb
sub
xacquire
push
adc
adc
xor
lret
and
js
and
lds
addr16
clc
stos
and
cwtl
sbb
je
xor
xchg
cmp
stc
sub
js
adc
add
orl
stc
pop
or
mov
cld
fidivs
lcall
add
test
jo
lock
bnd
idivl
aas
adc
jge
lock
test
insl
push
push
pop
add
dec
mov
inc
push
or
push
mov
out
add
icebp
in
pop
jo
jle
insl
ror
rcll
jl
mov
jecxz
daa
out
or
lahf
or
sub
sbb
push
add
js
aaa
mov
stos
push
push
icebp
in
push
xor
jle
cmp
es
sahf
cli
js
push
push
xor
insl
fcomps
test
sbb
shrl
out
and
mov
shlb
ds
jp
cwtl
pop
mov
fiadds
xor
call
xor
add
fisttps
lahf
outsl
or
dec
loop
sbb
pop
xchg
ss
push
xor
xchg
and
fs
icebp
ja
jno
cmp
xor
pop
gs
jp
adc
fidivs
shll
and
fstpl
subb
bound
jb
mov
xor
xor
bound
dec
aam
dec
enter
lea
inc
sbb
scas
decl
mov
nop
clc
shr
xchg
js
xchg
subl
jne
adc
cmp
lea
mov
and
jge
sub
cmpsl
sub
sbb
fstp
pop
icebp
push
pop
mov
mov
cmp
js
fsubrs
mov
fwait
sbb
mov
or
clc
orb
inc
andb
in
clc
pop
xor
jge
add
jns
mov
add
clc
pop
lock
jge
jle
mov
cltd
nop
mov
inc
adc
xor
inc
jo
cld
mov
sbb
insb
mov
sbb
adc
insl
mov
jnp
nop/reserved
jae
lds
icebp
cmp
fs
lea
insl
fstpt
jg
and
test
inc
dec
xchg
jp
hlt
mov
insl
icebp
js
sbb
movsl
xor
sbb
xchg
jp
mov
adc
adc
dec
aaa
cmc
mov
mov
mov
mov
mov
into
or
cmp
mov
divl
add
xor
inc
jb
mov
mov
aam
sbb
test
aam
xor
jecxz
out
bound
xor
mov
adc
popa
xchg
notl
push
cmp
jb
nop
and
mov
mov
jnp
andb
mov
leave
jns
in
mov
test
adc
mov
stc
xchg
adc
jg
inc
clc
aad
es
daa
sbb
or
cmpb
sbb
in
xchg
mov
xchg
das
out
xor
and
out
scas
xchg
das
shlb
pop
push
push
pop
cld
push
jo
subb
dec
loopne
popa
push
mov
push
jg
fucomip
jg
mov
repnz
inc
push
jp
sub
std
sbb
pusha
popa
fwait
push
push
pop
inc
in
or
outsl
or
inc
and
mov
fmuls
push
pop
jo
cltd
lods
aas
add
mov
out
or
cmp
xchg
loope
xchg
lds
mov
lock
clc
xor
adc
fiadds
fildll
pop
and
out
daa
rcrl
loope
mov
sub
sub
test
jmp
mov
xor
imulb
cmp
jae
sarb
shll
mov
mov
inc
and
or
mov
xor
or
cs
outsl
push
add
cmp
cmc
repnz
and
or
pop
or
pusha
xor
pop
or
pusha
xor
pop
or
pusha
xor
pop
or
pusha
xor
pop
push
jo
cld
jl
push
add
xor
jne
inc
jne
mov
cli
mov
mov
loopne
pop
pop
mov
dec
xor
stos
sub
xchg
ja
adc
lret
in
mov
aas
lcall
xor
fcomip
jle
xchg
rclb
frstor
sbb
aam
inc
mov
repnz
cmp
mov
add
sarl
rorl
lea
jb
mov
push
outsl
loop
and
and
xchg
pop
rorb
rcll
fs
into
cmc
lret
icebp
push
pushf
push
adc
cmpb
inc
jns
testb
cmp
inc
negl
pusha
aas
jo
adc
out
sub
or
arpl
out
in
dec
xchg
mov
out
adc
and
cmp
sbb
int3
mov
push
or
xor
cli
mov
jno
clc
sub
sub
inc
jle
add
add
jo
outsb
sbb
stc
fistpll
sub
mov
pop
loope
jno
stos
mov
jb
fdivp
sub
dec
fmull
or
cld
or
mov
mov
not
jg
mov
imul
fs
sbb
mov
js
jo
daa
push
repz
mov
mov
cmp
add
cmp
xor
in
mov
pop
inc
ret
add
cld
xchg
das
jle
pop
mov
je
out
mov
jno
pop
jmp
or
and
notl
lcall
push
into
dec
inc
jns
stos
adc
mov
or
pop
andb
cld
xchg
mov
inc
sub
inc
dec
jns
or
cmp
notb
mov
push
mov
adc
clc
inc
pushf
cwtl
xor
shrb
addr16
out
jb
jbe
adcb
add
nop
dec
mov
shl
enter
jg
push
xchg
sub
mov
mov
fistps
xchg
pop
xor
push
xlat
jnp
pop
jecxz
call
push
jle
xchg
mov
in
lock
push
out
int3
mov
test
test
ss
mov
ret
push
cmp
cmp
jne
push
dec
nop
add
xchg
popa
dec
test
lock
shll
push
dec
jg
sub
lret
or
jge
inc
xchg
or
mov
scas
add
mov
xorb
jp
shll
or
mov
enter
lock
in
ss
mull
enter
and
icebp
dec
adc
pop
lret
inc
jle
dec
jl
std
mov
jle
lcall
push
arpl
push
fidivs
repz
mov
mov
or
int
ss
inc
icebp
push
negb
pushf
and
loopne
push
ds
std
add
cmp
insl
adc
mov
leave
shrb
and
lock
push
jb
lock
jge
leave
scas
mov
nop
out
or
mov
dec
cwtl
push
xor
mov
aam
adc
xor
lahf
pop
pmuludq
and
cmc
dec
sbb
and
lahf
jecxz
fcomi
andb
adc
loope
rcr
lahf
xchg
push
mov
mov
inc
pusha
jp
in
jmp
ss
fwait
and
mov
cltd
adc
test
jle
sbb
nop
mov
lcall
cmp
outsl
enter
jne
cld
push
or
sbb
out
jno
adc
xchg
adc
ja
stc
gs
cld
iret
mov
clc
sbb
mov
lret
in
daa
xorl
mov
adc
pusha
pop
subb
adc
cld
add
in
pop
push
enter
mov
jo
cmp
mov
cwtl
sti
fs
cwtl
repz
xchg
inc
xchg
pusha
push
sbb
outsl
xchg
xchg
jno
shl
scas
mov
mov
mov
jnp
in
sbb
cmp
adc
outsl
hlt
idivl
add
testb
xor
add
test
inc
aas
lock
neg
mov
add
scas
mov
xor
out
adc
xor
pop
dec
mov
lea
cmp
push
xor
in
cmp
scas
mov
jnp
mov
pushf
sahf
xchg
push
cmpsb
cmp
jb
push
and
push
out
loop
das
xchg
orb
xor
jo
mov
sahf
clc
jb
mov
lcall
xchg
or
mov
sub
xor
pusha
jle
xor
jp
bound
movsl
push
lcall
inc
fldz
popa
mov
insl
imul
jle
mov
mov
sub
je
fs
lret
jo
out
and
negl
sbb
push
ret
mov
lret
or
mov
scas
cmp
cmp
xchg
cmpsl
ja
push
adc
adc
sbb
lea
jae
jbe
add
mov
add
roll
and
or
cmp
mov
outsl
mov
xor
cmpsb
popa
fnstcw
push
outsl
mov
stos
outsb
pop
add
aaa
adc
cli
lock
push
add
xchg
aad
xchg
cmp
adc
push
rorb
into
bound
pop
paddw
cmc
push
cli
inc
pop
fstpt
cmpsl
push
mov
or
iret
mov
mov
sub
and
or
and
fbstp
push
sbb
or
or
mov
mov
mov
scas
clc
ficoml
add
movsb
inc
in
cmp
insl
dec
in
clc
out
mov
mov
mov
addb
mov
aam
into
test
and
push
std
add
filds
mov
imul
data16
repz
and
rcl
jb
cmp
clc
mov
sahf
repnz
rolb
mov
out
sbb
pop
jnp
test
dec
testl
ss
cs
punpcklbw
jle
js
adc
mov
js
jo
push
outsb
sahf
mov
sbbl
xor
pushf
int
add
push
push
mov
nop
sti
add
adc
add
pop
jo
xchg
les
and
xchg
stc
gs
pop
add
mov
pop
fildl
lcall
jle
inc
cmp
xor
stc
xchg
jge
add
or
jns
mul
js
jb
enter
adc
inc
pop
pop
icebp
cmp
xor
jl
and
jle
jge
mov
insb
mov
andb
xchg
jle
xorb
push
jb
insl
sub
bound
dec
enter
push
sub
and
popf
repz
or
jle
mov
push
sub
inc
mov
outsb
sub
add
jno
jae
push
and
xor
dec
push
test
popa
mov
inc
sahf
jle
daa
loope
sbb
jbe
pusha
add
jo
xor
lock
cmpsl
cmp
stc
xor
mov
insl
cmc
int3
pop
les
push
adc
shll
out
shl
ljmp
sub
xchg
jl
ss
stos
lret
xor
into
cmp
stc
stc
idivl
iret
repz
sahf
incb
insl
jnp
push
test
psubd
xor
stc
daa
add
add
xor
bound
add
jnp
loop
mov
stc
push
cmp
cmp
push
jbe
pusha
pushf
jle
xchg
fistpl
jl
dec
daa
out
mov
roll
lods
notb
jl
pop
pop
inc
jl
ds
daa
xor
xchg
sbb
bound
aaa
push
or
cmp
and
mul
lock
orb
dec
mov
ret
lcall
pop
fs
loope
jl
std
cwtl
and
and
xchg
adc
mov
data16
mov
pop
jae
push
das
push
jne
repz
icebp
popa
xor
ja
push
hlt
into
jns
jnp
test
hlt
arpl
pop
xlat
enter
aaa
lcall
jo
dec
shll
leave
call
jbe
loopne
cmpsl
ss
sbb
cmc
cli
sbb
jl
jbe
jo
repnz
lret
mov
xchg
loopne
jb
mov
shlb
add
inc
addb
cmp
sub
cmp
inc
pop
push
js
lds
jo,pt
fidivrs
pushf
dec
and
xor
ds
xor
cmp
add
cmp
pop
fimull
js
testl
movl
mov
jmp
mov
fsts
jno
insb
add
loopnew
push
push
sahf
repnz
sbbl
sub
jb
std
mul
cmp
out
inc
jno
leave
aad
int3
jns
cmc
push
or
loop
xor
cmc
out
lea
sbb
mov
mov
shlb
lods
insl
hlt
in
insl
addr16
pop
pop
pusha
push
lcall
adc
fcomps
sahf
mov
dec
xchg
xor
notl
sarb
fwait
dec
xor
jp
cli
shll
nop
sub
stos
sub
mov
xchg
jg
cli
insl
mov
sub
lahf
add
movsl
and
fs
sub
test
popa
cmp
sbb
sub
mov
mov
sbb
gs
adc
subb
xor
js
jle
sbb
adc
inc
xor
mov
add
out
adc
insl
out
inc
popf
scas
rorl
or
mov
xor
cmpb
enter
jp
in
or
shll
leave
cli
adc
inc
jb
mov
mov
dec
dec
cmp
dec
push
cmc
pop
pop
jle
push
xor
cmc
test
pop
and
inc
push
add
repnz
lcall
adc
push
pop
icebp
xor
push
or
mov
mov
pop
in
mov
jb
jp
adc
ljmp
cmp
out
ss
and
fcmovnu
idivb
mov
inc
jl
mov
xor
add
push
aad
test
adc
int
pop
push
push
aaa
push
add
repz
insl
repz
sbb
sub
push
jg,pn
lock
subl
and
dec
aad
adc
push
push
adc
sahf
xor
out
cmp
inc
inc
sub
jb
movsl
sub
adc
or
movsl
lock
rcrb
mov
icebp
shrl
pop
adc
inc
or
sar
mov
cmp
cmp
jnp
dec
insl
in
lds
cmp
cmpsb
arpl
lods
testb
mov
mov
cltd
std
xchg
outsb
mov
out
cmp
inc
cltd
in
push
inc
repnz
push
mov
icebp
es
add
mov
inc
sub
pop
call
rcrb
cmpsb
mov
cmp
jg
jb
xor
rolb
lea
mov
xchg
arpl
movsb
inc
mov
addl
xchg
icebp
or
inc
lods
aam
sub
pop
xchg
in
ljmp
mov
mov
xchg
mov
scas
scas
and
aad
cmp
mov
mov
mov
jbe
movsl
pop
xchg
enter
jp
or
xchg
xchg
and
popa
jo
inc
les
outsl
and
adcl
xchg
dec
repz
ja
sahf
push
rcl
cmp
jbe
test
adc
sub
call
jne
outsb
movsb
into
into
or
push
and
add
inc
lock
cli
add
xchg
movsb
mov
add
in
push
mov
jg
in
imul
push
rcrl
inc
rorb
popa
scas
jbe
fnstenv
inc
add
fimuls
dec
cltd
mov
pop
and
cmp
aam
fistpl
add
xchg
xor
das
pusha
imul
sbb
popl
cmpsb
xor
aaa
push
push
lock
loopne
jbe
adc
rorl
and
fildl
test
fists
inc
mov
adc
inc
sbb
mov
outsl
sbbl
daa
add
dec
mov
push
lahf
enter
cli
push
xchg
push
push
or
jmp
mov
xor
lahf
and
sub
jnp
push
jo
nop
fisubl
xchg
fwait
mov
adc
out
mov
cmp
f2xm1
scas
cmp
dec
or
pop
dec
xchg
icebp
mov
stc
jnp
and
add
cmpb
outsl
hlt
mov
aam
xor
lret
mov
dec
jno
adc
stc
lock
dec
xchg
jns
ret
dec
mov
test
mov
test
repnz
sub
fstps
repz
aad
mov
or
and
loop
and
imul
int
repz
out
add
push
inc
push
aad
jo
repnz
scas
xor
inc
dec
or
or
js
sbb
mov
mov
insb
loope
jno
jb
jo
jae
in
xor
icebp
cmp
shrl
pusha
push
or
jle
jns
mov
mov
insl
mov
add
and
mov
repnz
jne
repnz
data16
mov
jp
jp
add
push
out
inc
jle
shlb
rorb
mov
cmc
mov
cmp
xor
xor
cmp
mov
mov
cmpsl
fcmovnb
cld
mov
jecxz
in
int
outsl
stos
jo
cmpb
std
bound
sub
test
jae
test
mov
jg
dec
fisubl
xchg
pusha
pop
xorb
aam
cwtl
lahf
sub
inc
add
push
cmpsl
cli
lds
mov
and
testb
jg
into
jecxz
dec
dec
xchg
cmpsl
adc
outsl
addl
test
add
adc
aam
ret
xchg
sbb
notl
adc
outsb
xchg
insb
je
fistpll
hlt
mov
cmpl
sarl
stos
sbb
movsl
jne
dec
rolb
adc
je
cmp
jae
inc
cmc
mov
loope
add
sahf
xchg
in
jl
mov
adc
aaa
stc
cmp
clc
add
pop
aaa
repnz
xlat
mov
aaa
or
aam
in
xchg
jl
mov
mov
filds
test
xchg
pop
dec
inc
jnp
dec
mov
clc
push
in
jl
push
lock
pop
scas
std
icebp
adc
sub
push
aaa
fstpt
ds
pop
test
enter
lret
std
xor
jl
mov
lret
cmp
cmp
adc
adc
icebp
adc
jb
sbb
adc
daa
fdivrs
cld
pusha
sbb
sti
jb
sahf
divb
decb
enter
adc
adc
nop
fdivr
aaa
shrb
sarb
imul
repz
scas
mov
repz
mov
jbe
jg
dec
cli
adc
in
hlt
dec
pop
sbb
sarb
mov
ja
inc
imul
sbb
add
outsb
out
add
cmp
scas
mov
add
or
add
scas
jl
daa
loope
xor
out
clc
aam
icebp
jae
repnz
inc
xor
xor
cmp
stos
dec
std
cmpb
xchg
pop
std
push
jmp
popf
ficoml
lock
je
clc
cmp
pusha
shrl
sti
notb
mov
mov
xor
jmp
test
xchg
imull
mov
pop
repnz
dec
jl
lea
cmpb
or
loopne
and
jns
and
mov
loop
ss
adc
sbb
dec
inc
test
fcoml
stc
leave
mov
dec
les
fmull
test
mov
mov
insl
adc
fcoms
or
test
dec
push
popa
ja
cld
adc
ret
jl
insb
rorl
inc
scas
xor
dec
fcompl
cmc
mov
movsl
outsl
out
adc
idiv
sahf
mov
andl
in
add
xchg
jle
test
lock
js
dec
sub
sbb
je
pop
shrl
filds
ljmp
pop
xlat
xchg
sub
add
jmp
xlat
xchg
jbe
and
stc
lcall
icebp
or
lret
call
xlat
cs
jg
fnstcw
add
je
sub
scas
test
cwtl
add
cmp
aad
sbb
push
hlt
xchg
xor
jmp
add
sahf
cltd
std
cld
std
mull
xchg
push
mov
cmp
mov
test
fdivrl
mov
add
clc
xchg
sbbl
stc
test
dec
mov
aad
add
enter
inc
cltd
mov
popa
idivb
gs
mov
call
jb
ja
stc
jmp
loop
ret
xchg
outsl
adc
jge
enter
fcoms
cli
in
xorb
lock
call
push
icebp
leave
lock
xchg
jbe
int
jns
gs
shlb
inc
mov
or
mov
enter
pop
mov
out
daa
xor
jg
xchg
xor
lock
stc
or
cmc
loop
and
xlat
cmp
push
pop
dec
add
icebp
ret
pop
fldcw
int
add
subl
mov
dec
mov
add
xor
pmaxsw
adc
stc
cmp
imul
icebp
mov
push
sbb
shll
cmpl
imul
gs
add
insb
test
js
inc
pop
push
jl
out
and
mov
mov
out
out
jne
mov
cmp
sbb
mov
and
mov
insb
sub
negl
or
xchg
add
je
add
cmp
sbb
mov
mov
dec
ss
loop
and
mov
shl
fnsave
mov
inc
sar
jne
pop
inc
or
scas
arpl
rcrb
aaa
hlt
sahf
cmc
adc
ret
push
xchg
mov
pop
repnz
lock
ficompl
sbb
loop
inc
jo
loopne
leave
lret
push
loope
loop
mov
ret
sub
add
out
pop
pop
loopne
cltd
lock
push
cwtl
pop
mov
push
dec
clc
iret
into
shll
pop
clc
aas
lcall
rolb
decb
cmp
int3
xchg
pop
iret
xchg
push
in
addb
sbb
cmp
xor
int
push
repz
and
mov
inc
in
jns
jl
rorb
add
andnps
mov
addr16
push
and
and
shll
test
dec
adc
jl
aaa
sbb
mov
in
and
insb
mov
popf
sbb
pop
dec
jb
pop
mov
js
and
adc
lock
subl
xor
inc
xchg
ret
fisttpl
js
inc
insl
aaa
add
hlt
push
inc
mov
add
xor
inc
mov
adc
js
xor
dec
adc
sbb
xchg
xor
mov
jns
add
movsb
enter
in
push
mov
fsubs
int
mov
lret
adc
out
pushf
iret
dec
sti
mov
add
add
hlt
jbe
test
pop
idiv
mov
mov
repz
cmp
idiv
add
cld
jb
jbe
lock
sbb
pop
jno
cs
cmp
icebp
in
lcall
pusha
pop
iret
mov
adc
frstor
inc
out
inc
je
adc
dec
lock
aaa
shlb
adc
add
cmc
mov
call
and
xor
lret
ljmp
xchg
test
cmp
movsl
jle
xchg
insl
cld
mov
push
push
jle
sub
aad
push
xchg
lret
xor
and
sub
inc
cmp
fidivrs
lcall
enter
inc
sysexit
outsb
loope
add
sti
jp
outsl
push
imulb
in
movsl
cmpsb
mov
inc
inc
xorb
ss
lods
rolb
stos
push
aam
popf
dec
ljmp
scas
jno
std
jns,pn
into
dec
xor
out
sahf
adc
jnp
mov
jl
push
sbb
out
ror
add
cmpsl
repz
sti
inc
pop
pop
jne
pushf
shlb
mov
jns
inc
dec
or
cmpsl
clc
cmp
pop
cmp
rclb
outsb
xor
jl
xor
jno
push
xorb
icebp
push
or
jo
jmp
mov
push
xor
lock
cmp
and
cmp
mov
and
je
mov
xor
mov
xor
pop
pop
mov
xlat
mov
jno
flds
stos
pop
cmp
inc
jb
push
push
sbb
inc
pop
sti
adc
fs
stc
sahf
push
mov
repz
push
loop
mov
and
or
outsl
sub
mov
add
cmc
and
xor
adc
jo
xor
fildl
xor
or
lret
mov
xorb
add
sbb
popa
xchg
cli
jle
pop
nop
jb
lods
mov
or
or
jp
pop
mov
push
adc
mov
mov
add
mov
sbb
jns
push
jle
push
loope
mov
mov
adc
xor
xchg
mov
test
jne
jmp
int3
ljmp
andb
sbb
inc
sahf
divb
aas
dec
mov
adc
and
flds
pop
or
mov
clc
adc
push
test
mov
or
inc
add
push
and
scas
mov
and
mov
ret
pop
xorl
pop
xor
stc
push
jno
sub
jle
dec
outsl
jmp
inc
dec
pop
jb
xor
mov
jle
rcll
cmp
testb
inc
stc
ss
adc
jnp
mov
lock
push
adc
xchg
ss
js
sub
add
dec
bound
sahf
pop
test
dec
sbb
add
popa
mov
loopne
lock
sub
jns
xchg
scas
scas
xchg
cwtl
mov
popa
icebp
out
jg
stos
mov
hlt
push
out
mov
nop
ja
popl
xchg
notl
xor
sbb
lds
lea
inc
pop
adc
pushl
mov
push
or
adc
mov
cmpsb
and
pop
out
mov
jl
ret
add
fidivrs
test
push
nop
pop
or
fsts
pusha
cld
aaa
inc
jnp
inc
add
xor
icebp
int
xor
outsl
in
test
xor
inc
mov
in
ror
fdivr
cmp
dec
std
xchg
sahf
xchg
sbb
adc
jb
lock
or
xchg
fidivs
jle
cmc
adc
sbb
cmpsb
mov
mov
xor
repz
inc
icebp
xchg
fs
lahf
jnp
cmp
mov
data16
and
xchg
imul
loop
repnz
lock
xchg
aam
xchg
lcall
xchg
pop
xchg
loope
adc
fs
pop
cmp
ss
imulb
icebp
inc
out
xlat
push
mov
scas
mov
lea
or
fcmovne
jle
mov
adc
add
cmp
push
addb
movsb
push
mov
data16
aaa
stc
mov
adc
xor
mov
inc
fadds
icebp
mov
je
push
cmp
adcb
fistl
xchg
xor
xorl
jle
cli
and
add
aad
adc
adc
cmp
jmpw
icebp
add
and
dec
icebp
lcall
xor
or
sub
repz
jno
pop
adc
js
mov
dec
imul
inc
movsl
stos
int3
pop
aas
lret
test
cli
pop
mov
inc
popf
mov
inc
fs
add
inc
sahf
sti
xor
jle
mov
enter
mov
or
clc
mov
mov
cld
or
insl
xorl
add
stos
std
and
adc
lahf
int3
add
sbb
add
mov
mov
sub
jle
mov
sub
mov
push
stc
add
sbb
jle
insl
aaa
mov
cmp
lahf
mov
pop
stc
or
pop
aaa
adc
add
inc
enter
js
or
clc
roll
repz
add
cmp
jle
and
push
add
xchg
xchg
cmp
and
movsl
mov
cmp
adc
cmp
add
orb
stc
sti
fdivs
cmp
push
stc
jg
mov
xor
cmpb
mov
imul
test
or
or
mov
sarl
insl
inc
fstps
mov
push
pop
xorl
cld
and
fwait
push
les
call
mov
add
xchg
push
in
cmp
mov
outsb
test
push
dec
mov
lods
ljmp
int
pop
mov
mov
into
imul
lahf
xchg
sub
xor
repz
jp
jle
or
sub
outsl
sbb
popa
clc
mull
sub
cmpb
stos
and
cmp
cmp
dec
es
push
test
movsl
inc
mov
mov
xchg
bnd
push
fincstp
add
cmp
leave
xor
xchg
clc
popa
es
cli
test
movsl
cld
sahf
mov
movsb
adc
mov
out
icebp
ret
ret
jge
leave
pop
cmp
xor
ror
lahf
sub
mov
mov
xor
out
sub
fidivl
idivb
ss
sbb
ss
push
stc
push
call
psubw
push
or
or
icebp
lock
jmp
inc
filds
fsts
jne
add
mov
xor
adc
jo
sti
cmp
sbb
or
cmp
mov
js
pusha
add
sbb
add
jecxz
push
xor
dec
aas
pop
out
xchg
add
aas
and
or
push
icebp
mov
fimull
rol
dec
out
iret
aam
call
aam
je
or
iret
lahf
pop
mov
jne
adc
out
xchg
pop
sbb
jg
in
mov
aas
sbb
imul
or
ficoml
push
int
mov
iret
adc
fidivrs
inc
lods
push
pusha
dec
mov
sahf
mulb
xor
sbb
sub
mov
movsb
pop
stc
addl
jg
xchg
inc
pop
add
xchg
popa
mov
xchg
pop
add
std
jl
push
lds
xor
dec
sti
cmc
add
fisubrl
int3
xor
add
cmpb
xor
mov
add
ficoms
sub
stos
shl
pop
mov
movsl
fcomip
sub
push
icebp
push
aam
in
cmp
aam
fwait
add
jns
gs
loope
or
sar
insl
cmp
mov
fisubs
lret
adc
stos
sbb
sbb
insb
mov
bound
dec
adc
jmp
inc
jbe
push
sub
and
imul
xchg
fisttpl
jg
ds
es
mov
push
cmp
cmp
cmp
insl
pusha
mov
mov
mov
mov
jnp
dec
or
add
add
bound
repz
mov
sub
cmpsb
cwtl
inc
sbb
cmp
add
out
sahf
insb
mov
pop
into
push
fdivrs
clc
and
adc
cli
mov
xchg
jne
bound
sarl
out
jl
push
lock
sarb
divb
mov
out
mov
lahf
pop
lock
fldcw
sbb
xchg
leave
jl
jbe
ljmp
lea
test
nop
xor
xor
in
cli
shlb
dec
adcb
adc
sbb
mov
cmp
testl
sarb
les
mov
jne
data16
test
mov
adc
dec
lret
jo
mov
shll
and
jno
hlt
lock
jns
jae
es
lea
mov
pop
repnz
popf
repnz
orb
pop
mov
hlt
cmpsl
pop
ror
sub
jae
arpl
jge
jb
and
jnp
sbb
ja
jns
pop
push
or
mov
aad
lahf
add
mov
mov
das
mov
insb
jo
jne
sbb
int
jns
mov
cmpb
popa
jle
push
test
mov
jnp
push
or
or
xchg
scas
cmp
test
lret
sub
aad
pop
loop
dec
mov
movnti
mov
push
out
decl
push
movsl
cmp
fsts
push
das
insl
mov
in
mov
sahf
je
inc
sub
pop
push
aad
inc
push
adc
push
pop
mov
cmpsl
sbb
notl
add
and
add
pushf
jl
lock
push
add
pusha
or
addl
mov
mov
mov
outsb
sbb
sub
lret
add
sarb
fs
sub
lahf
out
pop
js
out
orl
push
add
adc
aas
mov
test
adc
fdivrs
sets
cs
xchg
fnstsw
and
and
xor
sub
cmpsb
fildl
mov
cmp
jp
test
xchg
rorl
push
xor
sahf
cs
sarb
rorl
cld
xor
inc
cmp
test
mov
in
add
cmp
adc
or
scas
xor
aaa
test
jae
cld
sbb
adc
sahf
or
enter
aaa
lahf
mov
nopl
mov
xchg
lea
xlat
addr16
jns
inc
mov
inc
mov
lea
in
pop
add
xor
dec
xor
mov
aaa
icebp
inc
and
sub
addb
sub
outsb
or
andb
mov
dec
je
lahf
pusha
mov
lds
lret
das
adc
xchg
xor
sahf
icebp
inc
jae
sbb
std
div
loope
nop
call
lods
out
insl
xchg
jne
ds
sarb
sub
cltd
adc
push
xor
adc
and
orl
adc
fsubrs
push
jb
xor
sub
jo
cmp
insl
jl
in
mov
insl
jns
cmpsb
add
and
mov
imul
jns
dec
mov
ret
addr16
cmpsl
cmpl
daa
ret
js
hlt
push
push
cmp
lcall
lods
leave
dec
add
ja
push
inc
clc
repz
mov
js
sbb
inc
leave
rcrl
jno
cmp
pop
aad
adc
insl
out
repz
in
sbb
out
pusha
jns
popf
cmc
cmp
andb
sahf
mov
insb
cmp
mov
inc
pop
push
sub
push
sub
mov
pushf
and
push
jb
andl
mov
je
adcb
in
popf
icebp
add
movsb
jne
adc
or
xor
loop
ds
mov
xchg
mov
jno
and
pop
push
add
jnp
xchg
cmp
sti
dec
push
fisubl
jns
fcomi
cmp
mov
fnsave
lahf
mov
lcall
xor
dec
loopne,pn
jno
mov
inc
lods
cmp
and
imul
es
loop
movq
dec
jecxz
scas
adc
sahf
jl
les
mov
or
stc
or
lods
cmp
js
cmpsl
sbb
popa
clc
mov
out
out
movb
cmp
test
std
dec
mov
jecxz
shr
inc
adc
es
lret
repz
test
mov
adc
int
adc
incl
push
repnz
fs
jo
loope
xchg
push
lcall
lods
int3
movsl
sbb
and
add
mov
xor
xor
dec
lock
int3
aas
repnz
jbe
mov
sub
add
sub
adc
and
mov
out
jp
fmul
xor
lock
in
or
ss
cltd
cmc
mov
loop
pop
in
cmc
xor
pop
inc
aad
cmp
test
xor
test
ja
or
mov
gs
pop
rclb
fistl
mov
push
xchg
push
and
data16
jae
icebp
nop
icebp
jb
xor
mov
add
test
dec
add
and
jb
mov
into
add
shll
icebp
mov
mov
insl
lods
add
lock
cs
dec
pop
jno
cltd
sbb
test
icebp
or
cmpsb
out
sub
mov
sbb
insl
shll
pusha
ja
jne
hlt
mov
lahf
nop
sub
pop
jno
cwtl
mov
xor
and
insl
xchg
aad
jo
rorb
push
sarb
and
mov
pop
cmp
add
lock
outsb
dec
jne
loop
push
mov
ja
test
repz
mov
ds
jp
jb
push
loop
xchg
leave
das
xchg
aam
inc
insl
test
rcrl
xor
mov
add
and
xor
push
adc
icebp
push
sbbl
testl
clc
push
jno
xor
movsl
nop
mov
sub
push
mov
adc
jge
mov
mov
mov
push
mul
repz
mov
mov
or
pop
add
jl
inc
or
dec
lret
lds
adc
rcll
dec
jne
ds
es
fidivs
aaa
cmp
or
or
lret
jle
inc
mov
xchg
push
cwtl
sub
push
roll
xchg
dec
xor
loopne
mov
add
stc
add
push
jle
scas
mov
scas
adc
shlb
jp
pop
push
je
adc
rolb
repz
cwtl
fisttps
ja
or
mov
lret
mov
icebp
test
icebp
icebp
or
std
or
fstl
std
xor
add
adc
lahf
mov
rcrb
icebp
shlb
call
sub
cmp
stc
aaa
loop
dec
cmp
dec
push
mov
mov
cwtl
or
mov
daa
mov
lret
jo
pop
jno
inc
inc
addl
stos
in
xor
xchg
in
jbe
shll
mov
or
mov
or
jecxz
aas
jge
jp
insl
fnstsw
stos
ficoms
add
repz
jge
fnstcw
sbb
inc
add
or
jp
mov
stc
or
out
add
testl
pop
mov
sub
mov
jo
mov
mov
mov
scas
pop
push
test
cmp
ljmp
test
lods
mov
shll
jle
clc
repnz
xor
mov
inc
jnp
add
out
sbb
cli
jns
push
int3
or
adc
jmp
inc
scas
push
dec
and
cwtl
xor
fwait
insl
test
mov
test
push
stc
add
push
add
aam
cwtl
fcmovnbe
pop
push
push
cmc
pop
adc
mov
add
dec
xchg
lret
jp
cmp
arpl
xchg
stc
fcmovbe
fldenv
aaa
cmp
into
popa
xor
push
repnz
xor
adc
push
sbb
loope
iret
or
icebp
iret
cmpl
jns
add
movsb
push
pop
xor
xor
jno
sahf
sbb
loop
test
xchg
cmp
dec
pop
rcll
xor
cmp
sbb
rolb
cmp
mov
je
div
pop
sub
sbb
test
add
loopne
xorb
std
scas
mov
adc
xchg
loopne
clc
or
mov
xchg
dec
xchg
jl
fdivr
das
adc
imul
push
loop
ret
dec
fistl
jnp
in
mov
push
stc
cld
add
in
adc
push
movzbl
add
ja
mov
stc
jo
add
ljmp
addr16
lcall
or
sub
adc
stc
idivb
xor
fdivr
or
mov
popf
mov
dec
add
repz
pop
adc
aaa
ljmp
fdiv
adc
pop
scas
ficoms
jb
adc
pop
mov
std
leave
mov
imul
jg
clc
jne
mov
push
outsb
repz
ret
jo
mov
mov
mov
adc
in
aad
mov
adc
jb
xor
icebp
dec
push
fisubrs
adc
adc
fstps
nop
xchg
xor
fs
jae
add
lret
and
dec
dec
adc
pop
cmp
jno
push
sub
sbb
jl
cmpb
mov
and
mov
adc
jns
xchg
mov
jecxz
adc
lds
or
or
mov
insb
mov
or
xchg
shll
mov
test
cmp
and
das
dec
and
mov
or
mov
ds
lret
fsts
sub
lock
mov
jbe
aam
and
outsl
mov
test
and
in
inc
pop
and
sbb
push
shl
sub
jmp
ss
neg
dec
add
or
or
inc
mov
jnp
loop
ljmp
adcl
mov
cmp
pop
jno
dec
sti
xchg
das
mov
pop
hlt
push
fistps
push
cli
sahf
xor
lock
mov
rclb
outsb
cltd
mov
movsl
loop
outsl
pop
cli
xchg
int
leave
jle
lock
adc
dec
bound
xor
add
leave
push
adc
sub
mov
sbb
mov
adc
xor
mov
jl
jle
stc
inc
stc
call
cmp
and
outsb
repnz
stos
dec
jl
cltd
jo
sbbb
or
jne
scas
imull
negl
dec
cmp
lock
sub
push
dec
pop
mov
test
jecxz
icebp
dec
icebp
bound
xor
add
test
push
dec
js
dec
push
jp
mov
cmp
cmp
lds
std
xchg
push
cld
jle
jo
sbb
js
js
inc
or
lcall
pop
sbb
cltd
or
jae
stos
ret
jne
sbb
and
cmp
xor
sub
fwait
add
ds
in
push
or
pop
repz
test
icebp
mov
sub
loop
sub
push
xor
inc
add
into
add
or
imul
into
mov
cmp
jne
dec
xor
dec
pop
into
dec
push
nop
jae
add
sbb
popa
scas
jle
stc
push
fxch
xchg
mov
bswap
mov
insl
xor
jb
push
js
mov
je
test
xor
push
mov
cmpsl
mov
mov
cli
jo
sahf
adc
push
pusha
icebp
and
jb
test
outsl
into
je
adc
mov
test
lods
arpl
jno
scas
pop
je
jo
or
repnz
ds
add
icebp
xchg
stos
push
testl
push
js
push
mov
inc
cmp
fsts
or
and
lcall
aam
jle
push
jno
jo
cmp
or
icebp
das
mov
or
and
adc
out
push
pop
push
mov
pop
cmc
in
sbb
mov
mov
sub
and
sub
pop
mov
pop
mov
push
dec
add
pop
mov
or
popa
fsubp
movsb
xchg
mov
sub
test
sbb
movsl
mov
repnz
sti
cwtl
icebp
adc
sahf
xor
sarl
cmp
fdivr
pop
cmc
movsb
cmp
repnz
dec
mov
sbb
and
pop
mov
add
pop
sbb
fs
xchg
mov
push
insl
xchg
clc
popf
aam
cld
sar
movsl
push
out
cli
mov
mov
push
dec
sbb
pop
aam
mov
push
push
jmp
push
cwtl
mov
stos
pusha
mov
mov
mov
jb,pt
cmp
dec
int
ss
jbe
cmc
inc
ret
mov
into
xchg
cli
gs
jnp
pop
in
push
mov
test
in
aaa
jmp
stc
jne
push
cs
ret
dec
mov
jge
xchg
xor
sub
xlat
jno
aam
mov
fidivs
or
es
mov
jbe
cltd
subl
stc
js
push
idivl
pop
xbegin
icebp
mov
setbe
movb
add
hlt
cli
jns
lret
push
shrb
ds
push
mov
cmp
pop
into
push
hlt
push
mov
loope
mov
sbb
mov
fimull
orl
cli
and
pop
ficompl
mov
jp
inc
push
adc
dec
lcall
or
xor
cli
add
cmp
xor
jg
sbb
push
inc
sti
xchg
jae
js
jecxz
push
sub
sahf
outsl
jno
sub
adc
fldl
bound
ljmp
imul
sti
cmpsb
hlt
loopne
cmp
add
repnz
dec
aad
mov
stos
inc
hlt
out
xlat
mov
adc
dec
outsl
push
xchg
mov
fidivrl
subb
outsl
fs
mov
sub
aam
and
outsb
cmpb
ret
xchg
adc
or
cwtl
outsl
sub
dec
fwait
mov
cmp
mov
shl
add
and
push
pop
mov
lahf
imul
jge
sub
mov
aam
stos
xchg
add
jge
test
nop
xor
jl,pt
adc
imull
ficomps
xchg
test
mov
dec
jmp
sub
scas
int
icebp
mov
cltd
js
push
insl
sub
fldcw
dec
add
mov
and
ljmp
dec
es
pop
fcmovbe
fucomip
adc
data16
mov
sub
ret
mov
push
lea
addl
xor
pop
repz
pop
cmpsl
adcl
sti
pusha
dec
lock
sbb
xor
mov
arpl
or
pop
pop
repnz
mov
pop
and
movsl
and
or
lahf
pushf
pusha
std
and
stc
aam
mov
push
sub
push
cmpsl
jo
mov
pop
sti
pop
mov
jno
push
dec
adc
push
pushf
mov
dec
push
movsb
lds
mov
jnp
shll
jle
jne
test
jb
jge
cmc
jle
jae
jg
jbe
and
iret
or
ja
xchg
cmp
stos
jae
clc
or
inc
mov
xor
leave
dec
xor
dec
or
inc
repnz
fildll
mov
jge
jnp
cmp
lock
js
mov
lods
push
ljmp
insb
mov
ds
inc
pop
dec
cmp
nop
xor
push
mov
push
test
addb
mov
sbb
pop
lret
stos
add
rcrb
lret
inc
mov
into
lock
dec
dec
pushf
data16
test
inc
xchg
int3
xchg
jns
push
and
adc
call
ret
test
sti
mov
aad
or
leave
push
sub
add
sub
mov
das
jecxz
loop
inc
out
adc
data16
insl
ja
sbb
aad
pop
cmp
inc
cld
jle
jo
adc
hlt
popa
call
sbbb
sub
cmp
icebp
xchg
pusha
lret
div
int3
insl
cmp
fs
icebp
push
add
sahf
jge
xor
jo
gs
pop
pop
sbb
push
icebp
fbld
jp
inc
mov
and
into
in
cmp
popa
mov
add
loope
imul
cwtl
xor
xor
int3
fsubrs
fwait
sub
imul
fistl
popf
xchg
pusha
aam
add
xchg
lds
mov
adc
mov
dec
sub
xchg
aaa
popa
push
dec
ss
push
push
dec
jbe
xchg
lock
mov
in
icebp
push
mov
xor
xchg
add
push
push
jb
inc
pop
pop
stos
sbb
js
pop
clc
adc
aam
jb
nop
push
jbe
adc
ss
lcall
sahf
mov
xchg
aas
inc
or
out
adcl
js
aad
sahf
in
ljmp
sbbb
outsl
fsubs
cld
cmp
aam
fwait
stos
add
and
nop
call
xchg
cmp
out
mov
or
push
pusha
and
mov
jne
andl
mov
push
sahf
xor
scas
xchg
and
js
pusha
das
adc
addb
adc
add
add
inc
or
bound
repz
out
jl
sahf
add
in
sbb
sub
push
inc
stc
clc
xchg
lock
nop
cltd
dec
xor
imul
fldl
or
dec
add
addr16
push
lret
repnz
jge
add
pop
cmp
jg
cli
xchg
adc
xchg
hlt
mov
fisubs
mov
dec
jb
adc
addr16
push
pop
cld
lock
jb
std
pop
fbstp
jecxz
mov
lds
pop
data16
adc
repz
lea
stos
test
jg
jge
pop
and
sub
out
shlb
xchg
aam
xor
out
inc
icebp
push
loopne
icebp
sbb
imul
add
add
xchg
xor
bound
add
cmp
divb
add
pop
add
pop
fists
insb
inc
adc
mov
lods
in
add
pop
ss
adc
ds
push
mov
mov
aas
jbe
dec
xor
lcall
add
enter
mov
add
mov
add
cmp
pusha
repnz
inc
xchg
test
cmpsl
xchg
insl
lahf
popa
xchg
xchg
jo
int3
cmpsl
je
mov
cmp
shll
pmullw
mov
pop
jg
test
adc
roll
test
pop
sbb
insl
xchg
roll
stos
sahf
and
ror
mov
jge
loop
lcall
mov
je
and
cmp
dec
push
or
adc
ja
dec
xchg
sbbb
cli
pop
imul
or
add
aas
and
cmc
fcoms
add
mov
mov
sar
lahf
xor
sub
xchg
adc
inc
lret
and
push
aas
mov
mov
es
mov
jns
scas
lock
mov
out
test
insl
add
or
push
sub
push
hlt
push
xchg
iret
or
push
enter
xchg
and
pop
add
fstl
xor
stos
andps
aam
cld
add
adc
sub
xchg
loopne
jno
fists
or
xor
mov
xor
jno
cmp
push
cmp
push
jno
jb
add
inc
lds
addr16
mov
inc
jb
pop
inc
sub
xor
cmc
andb
pusha
sahf
bound
adc
fcmovne
clc
mov
int3
enter
out
jge
cwtl
cmc
into
or
cmc
ljmp
ret
push
pushf
pushf
jno
dec
fldt
notl
inc
cmc
sahf
xchg
scas
push
and
js
jp
aas
push
or
lcall
ficoml
lock
xchg
xor
jns
jo
pop
rcr
xor
jb
insl
jne
rcrb
fcoms
sbb
pop
mov
sbb
cli
jmp
xor
mov
xor
test
sahf
cmp
test
pop
push
sarb
mov
in
lea
fidivl
add
dec
jb
jecxz
inc
inc
je
rcrb
fildl
bound
hlt
adc
jno
dec
jo
inc
mov
clc
jne
push
fiaddl
into
gs
and
or
ficomps
or
in
stos
add
and
adc
adc
hlt
movsl
and
cmp
imul
movups
lods
push
roll
xor
and
jl
sbb
push
adc
cmp
lret
pushf
bound
movsb
adc
xor
push
xlat
or
nop
mov
shlb
in
test
popa
call
scas
and
xor
adc
dec
and
or
xor
jno
ss
xor
insl
sbb
mov
cmp
insl
xor
cmpsl
xor
pop
jae
mov
mov
xor
mov
mov
stos
mov
leave
mov
pusha
pop
in
xor
hlt
mov
lock
xchg
mov
add
pop
push
mov
add
push
add
dec
leave
fimuls
cmpsl
xor
mov
push
push
adc
mov
or
mov
adc
xor
cwtl
add
jb
adc
lock
or
orl
in
mov
in
add
shlb
push
ret
testl
or
insl
mov
mov
js
xor
jae
lods
mov
mov
add
fadds
xchg
cwtl
stos
and
jge
dec
sub
jo
cltd
in
stos
pop
xor
push
test
fcmovnb
lahf
notl
ret
push
shlb
sti
sub
js
ret
je
imul
jno
js
mov
mov
cli
pop
pop
cmp
sub
or
pop
int
inc
xchg
dec
push
std
out
lock
add
lcall
pop
shll
je
fildll
lods
mov
mov
push
stc
fmuls
and
push
std
call
pushf
inc
jno
fucomi
subb
xchg
adc
mov
adc
mov
cmp
xor
daa
out
ljmp
cwtl
push
xchg
jl
xlat
mov
push
bound
adc
adc
aaa
out
std
add
imul
pop
clc
sub
mov
jp
sahf
sub
xchg
jo
jl
jb
out
xor
or
out
mov
cld
xor
push
add
xchg
sub
sbb
fdiv
lcall
mov
pop
xchg
add
push
cmp
xchg
outsb
fldt
in
outsb
sti
inc
sub
xlat
sbbl
mov
jne
fdivrs
mov
ret
repz
add
xchg
jmp
hlt
insb
cmp
cmp
and
fcoms
add
fists
nop
lods
mov
ror
mov
mov
enter
sbb
test
icebp
rcr
jae
into
jmp
sub
xchg
repz
cmp
mov
or
cmpsl
mov
sahf
sbb
imul
mov
jp
icebp
or
sub
ds
mov
inc
or
cltd
sub
and
add
test
sti
jp
cmp
std
mov
add
or
add
fisttps
push
addl
loop
repnz
xchg
cwtl
fidivrl
pop
and
mov
dec
mulb
or
inc
mov
mov
bound
jl
hlt
je
pushf
je
push
lahf
cmp
adc
or
pop
xchg
mov
notl
loop
cmp
bswap
mov
arpl
test
mov
mov
mov
lds
fwait
icebp
mov
movsb
inc
add
mov
add
outsl
arpl
sub
repz
cmp
fwait
xor
call
lahf
hlt
ret
int3
jp
pop
xchg
xchg
sbbb
dec
repz
imul
js
mov
push
adc
mov
jo
fstps
add
movsl
addr16
mov
addr16
pop
push
push
arpl
xor
ffreep
push
insl
adc
sarb
cmp
adc
adc
pop
rcrl
and
insl
jnp
mov
lcall
xor
sahf
dec
cmpb
out
xchg
test
mov
cmp
fildll
push
add
dec
stc
testl
stc
insl
mov
out
data16
scas
icebp
pop
out
mov
mov
popa
sti
jg
aam
add
jle
rclb
fwait
jno
shlb
mov
or
xchg
call
mov
mov
cmp
pop
cmc
sahf
call
and
and
add
test
dec
push
xchg
jne
arpl
scas
sbb
and
jae
cmp
adc
pop
ret
popa
jle
lcall
cmp
xor
cmpsl
js
adc
out
xor
shll
adc
mov
aad
iret
push
rcrl
lea
ljmp
aaa
pop
adc
int
pop
mov
jno
jae
xchg
push
mov
xchg
mov
outsl
les
out
push
fildll
shll
jbe
xor
jmp
push
jns
addl
ljmp
fidivrl
insl
pand
sbb
or
mov
jp
out
mov
repz
int3
je
adc
sar
dec
xlat
data16
add
or
mov
sbb
out
mov
leave
es
mov
pusha
mov
cmpsl
cwtl
push
xlat
hlt
xlat
xor
jle
jns
lock
loopne
dec
pop
add
mov
add
daa
stos
adc
or
adc
fdivrl
ja
lcall
push
cmp
mov
push
addl
fwait
jbe
out
mov
nop
adc
out
mov
mov
lock
mov
sub
inc
sub
cmp
mov
add
mov
cmpsl
push
push
push
popa
or
adc
xchg
adc
rclb
jns
sbbl
xchg
and
or
xlat
or
mov
out
cld
sbb
test
pop
jae
shll
repz
cmp
inc
sbbb
adc
shlb
sbb
adc
mov
pusha
shll
and
cmp
icebp
cmp
scas
adc
or
mov
pop
cmp
push
js
pop
lock
clc
jl
adc
and
shlb
repz
out
dec
stos
cmp
xor
lods
pop
stc
enter
add
or
cmp
icebp
inc
mov
jl
cmp
pop
mov
jb
jns
repnz
mov
jno
jae
and
mov
jp
mov
je
and
js
not
hlt
std
cld
cmpsl
mov
mov
pop
idivl
adc
mov
lcall
xchg
imul
push
hlt
int3
sub
lea
lcall
pop
and
idivl
out
sbb
jne
adc
jns
jle
pop
and
lock
andb
or
pop
xchg
idivl
popa
xchg
mov
cld
fldl
sub
cli
adc
mov
add
shlb
mov
push
popf
enter
push
mov
xchg
incb
cmp
icebp
and
std
pop
fcmovnbe
cwtl
subl
xchg
xchg
add
jns
imul
add
inc
aad
ds
pop
mov
push
adc
aam
push
sub
add
repz
push
xchg
icebp
jne
inc
mov
mov
test
scas
hlt
in
mov
add
jecxz
scas
xor
shlb
cmpsb
repz
mov
adc
rorb
lahf
adc
xchg
jl
sbb
cltd
icebp
es
bound
clc
mov
je
pop
sbb
or
adc
or
pop
scas
dec
ja
inc
cmc
lcall
xor
sbb
and
jl
jmp
mov
jno
movsb
add
and
icebp
je
clc
repnz
movsl
push
cltd
fs
repz
cmp
lock
and
gs
scas
or
push
xchg
pusha
cmp
adc
mov
adc
movsb
push
imul
sahf
adc
push
sbb
lock
rolb
xor
cmp
mov
cwtl
push
xor
jl
xchg
push
jle
inc
adcb
and
mov
seto
push
or
movsb
roll
inc
inc
jbe
or
pop
loop
out
or
mov
mov
and
int3
fisubrl
mov
mov
push
aaa
fcomps
sbb
in
mov
sbb
or
mov
inc
data16
or
push
jecxz
mov
lahf
int3
adc
push
mov
cld
sbb
js
add
lcall
ret
cmc
fsubrl
scas
sbb
jb
and
dec
xchg
repz
ja
cld
push
ret
pop
movsl
or
outsl
adc
mov
xor
inc
insl
sar
notl
dec
add
push
daa
cmp
and
or
add
stos
pop
pop
mov
xor
nop
insl
mov
or
jle
jne
push
sub
sbb
adc
add
cltd
inc
iret
jmp
test
cmp
sahf
jge
inc
negb
mov
add
inc
sbb
push
mov
push
lret
es
xchg
rcrl
add
sub
je
lods
dec
lret
inc
xor
test
add
or
daa
mov
cli
inc
sbb
loope
mov
jl
fiaddl
push
fildll
aad
cli
lock
lcall
jnp
xchg
push
ljmp
xor
pop
mov
add
xor
cmp
or
fnstsw
and
icebp
lea
aam
cwtl
lods
pop
in
outsl
pop
or
enter
jbe
xor
cmc
mov
jb
outsl
adc
jo
push
mov
fisttpll
in
and
mov
jno
push
mov
xor
movsl
mov
or
mov
mov
xor
jle
or
ret
mov
pop
dec
inc
rolb
mov
test
push
sbb
aam
repz
mov
add
cld
inc
dec
js
cmp
cmp
push
pop
fisubrs
xor
popf
neg
sbb
pop
mull
pop
popa
data16
cmp
mov
inc
sub
sub
push
push
in
add
arpl
mov
cs
loopne
cmpsb
mov
out
fidivl
int
dec
adc
andb
ret
jmp
mov
mov
and
jle
xchg
adc
imull
xorb
sahf
ss
jp
adc
ljmp
test
ficoml
push
add
and
iret
les
scas
dec
test
pop
mov
push
aaa
leave
scas
jp
dec
rorb
cmp
mov
pop
call
sub
dec
xor
add
xchg
or
iret
sbb
lret
and
or
enter
inc
push
sahf
inc
pop
sahf
mov
pop
inc
push
sahf
test
add
stc
cmp
dec
mov
mov
and
clc
inc
out
xor
pop
andb
aad
subb
in
dec
pop
add
push
mov
push
inc
pop
ja
xchg
das
jo
outsb
ret
jg
stos
leave
aaa
clc
jb
xor
push
add
nop
push
test
sub
xchg
js
insl
pop
or
mov
das
and
mov
in
iret
sub
dec
jo
pushf
lahf
lock
cmp
lcall
mov
into
mov
fldcw
push
pop
pop
fnstenv
divb
pop
or
or
out
dec
dec
push
cmp
ja
dec
popa
add
movsb
mov
jo
pop
js
mov
mov
cmc
add
das
cmp
sbb
dec
xchg
mov
std
fidivs
iret
pop
in
cwtl
and
stos
adc
pop
aad
test
loop
mov
sahf
mov
out
lods
cmc
sub
stc
fyl2x
jle
movsl
sti
daa
mov
icebp
outsb
xchg
aad
iret
inc
add
xor
pcmpeqb
shll
mov
xchg
test
mov
loop
loop
gs
call
pcmpeqw
std
push
out
in
jge
out
inc
loop
lock
or
fldenv
or
cmp
inc
test
out
dec
shlb
test
add
scas
movsl
iret
xchg
sahf
repnz
fwait
cld
dec
and
test
inc
xchg
mov
aam
mov
or
mov
mov
icebp
and
or
lock
xlat
sahf
aam
jg
rcrb
jl
push
jno
xor
icebp
popa
mov
xchg
sti
test
adc
mov
or
sub
lahf
sbb
insb
adc
decb
xor
fmuls
cmpb
addb
repnz
pop
push
cmp
xor
rorb
shlb
popa
stos
mov
insb
push
xor
repnz
fistpl
mov
and
jbe
je
insl
mov
out
scas
xor
mov
jae
jno
cwtl
jl
xor
lret
jae
xor
mov
shrl
xchg
dec
ljmp
ja
cmp
add
mov
push
mov
pop
pop
xchg
xorl
fdivs
sbb
jb
xchg
hlt
and
cmpl
repz
into
jno
aad
jg
inc
sahf
cmp
addr16
xor
lock
cli
cmc
and
push
xchg
insl
pop
push
sbb
push
dec
daa
sti
jb
add
xchg
fildll
dec
xchg
pop
adc
xor
jb
mov
push
imul
and
mov
vmread
pop
adc
or
dec
dec
and
lahf
pusha
or
notl
dec
shlb
xor
xchg
xchg
sub
hlt
or
negl
shlb
mov
fists
pop
dec
sbb
xor
ror
adc
xchg
shlb
pop
pop
hlt
jp
xchg
cmp
cmp
xor
xor
cmp
add
add
jne
out
js
jbe
adc
fmull
inc
adc
mov
orb
lcall
scas
jns
xor
push
push
or
mov
cs
sahf
adc
fadds
dec
push
imull
sub
je
inc
mov
pop
ret
inc
cmp
cli
inc
call
adc
rcll
cmpsb
jmp
js
sub
aam
in
sub
push
faddp
lret
mov
mov
and
xor
mov
stos
add
xor
sar
outsl
push
cmpsb
adcb
mov
mov
sub
add
xor
imul
stc
dec
mov
jns
xchg
insl
adc
or
xchg
pop
aam
pop
div
sub
mov
popf
daa
mov
je
mov
cmp
jmp
mov
nop
or
add
push
cmp
loopne
sahf
jbe
aas
xor
cmc
rcrb
push
cwtl
mov
mov
cmp
mov
insl
mov
push
inc
sbb
ja
add
adc
push
mov
jb
mov
push
nop
sbb
jle
cli
xor
pop
cmc
inc
inc
inc
and
sarb
and
or
lock
add
and
shl
pop
jo
rcrl
xor
ds
lock
pop
lock
testb
sahf
push
jne
adc
call
mov
or
dec
or
and
and
adc
lret
addl
add
cmc
div
fadd
adc
aad
fnsave
shlb
roll
test
mov
jl
or
testb
int
andb
es
leave
repz
and
add
xchg
pop
or
jmp
and
and
sahf
pop
fidivrs
or
daa
xchg
cmp
push
ror
push
push
test
sbb
jns
mov
sbb
div
adc
dec
add
sbb
jecxz
dec
dec
add
dec
out
push
push
out
pop
sahf
je
pop
aas
xor
lcall
aam
xchg
add
lcall
leave
iret
and
sarb
jno
inc
js
xor
fstps
ud0
and
mov
stc
mov
add
inc
cld
add
loop
jmp
scas
test
rorb
or
xor
sbb
dec
hlt
xlat
jo
push
xchg
in
aad
lahf
nop
jl
xor
addr16
adc
fisubrl
ss
icebp
or
xor
sahf
cmp
adc
dec
ds
in
dec
je
sbb
push
imul
adc
add
and
sub
pop
std
xchg
pop
and
sub
fistps
add
lock
sahf
xchg
sbb
push
push
xor
add
dec
fcomps
sbb
mov
xor
push
fwait
push
inc
outsl
cmp
mov
sub
or
fcmovb
pop
mov
int3
cmp
mov
dec
sbb
mov
cmp
push
repnz
jno
icebp
sahf
push
mov
and
and
dec
xor
inc
cmp
popf
push
out
adc
or
mov
test
mov
outsl
add
lock
pop
sub
cmp
add
mov
hlt
mov
cmp
xor
or
jns
stos
xchg
icebp
push
adc
and
push
sub
or
sub
inc
and
pop
xchg
or
cmp
arpl
mov
sbb
sahf
adc
ljmp
cmp
push
fidivrl
sbb
aas
jecxz
ds
push
push
jo
shll
sbb
or
lahf
hlt
dec
mov
lea
and
xor
dec
jp,pn
jbe
dec
popf
mov
xchg
sbb
ljmp
out
mov
cld
or
cli
mov
push
xor
lret
push
aaa
setg
fisubrs
xchg
add
movsb
push
pop
loop
lds
mov
mov
mov
mov
jns
roll
lcall
fcmovne
cmpsl
jge
and
cltd
into
inc
mov
lret
es
and
jp
jo
mov
loop
inc
mov
ja
mov
cmp
mov
jecxz
inc
fsubr
jp
push
imul
icebp
les
or
xchg
and
cmp
inc
gs
add
mov
clc
mov
jno
sbbb
mov
int
ret
pcmpeqw
inc
jle
adc
into
mov
loop
and
push
push
leave
mov
outsb
add
pop
js
xor
inc
push
mov
mov
stc
jb
lods
cmp
push
rcrb
loop
add
js
sbb
movsb
icebp
inc
xor
add
jnp
mov
aas
nop
shl
ja
jno
mov
and
lock
jo
or
pusha
inc
push
push
test
inc
xor
push
sbb
mov
and
push
and
cmp
adc
iret
and
push
push
insl
ljmp
dec
mov
adc
xor
and
fbld
test
sub
je
addr16
fsts
and
outsb
mov
sar
insb
insl
adc
cmp
and
pop
shlb
xor
addr16
push
add
pusha
outsl
jl
aam
push
sub
std
push
mov
mov
sub
arpl
imul
es
hlt
in
jbe
and
xchg
jge
add
insl
push
xor
scas
lods
mov
shll
ds
xchg
add
out
dec
push
stc
and
and
fiadds
aam
mov
mov
dec
push
pop
xor
mov
and
mov
sbb
inc
loopne
sbb
mov
sub
jb
insl
xchg
cmpsb
out
imul
sbb
xchg
inc
and
fmuls
bound
mov
xchg
pop
or
testl
jecxz
ss
mov
idiv
pop
sarb
pop
cmp
ss
sub
jns
xor
add
imul
mov
push
mov
or
mov
loop
es
push
sub
or
into
ljmp
outsl
jl
cmp
icebp
fcompl
mov
push
lock
and
call
arpl
fidivrs
pop
orb
push
cmc
dec
andw
jno
es
xor
cld
stos
andl
add
std
xchg
xor
sbbb
outsl
xchg
cmp
cmp
daa
ds
sub
mov
or
and
mov
pop
adc
jae
pcmpeqw
fstps
hlt
test
rcrb
pop
je
hlt
push
inc
jl
mov
xchg
jnp
sub
out
cld
sbbb
xlat
mov
and
xchg
add
jp
and
or
mov
test
sbb
es
lock
add
and
mov
cmp
xchg
mov
mov
add
add
jl
xchg
xchg
imul
repz
mov
xor
out
stc
add
push
mov
sbb
cs
rorb
mov
inc
adc
stc
leave
adc
and
shlb
push
or
mov
add
jno
or
or
jo
mov
mov
imul
and
pop
adc
loope
into
adc
mov
es
jecxz
push
rcl
pop
into
pop
jne
jo
addr16
jmp
jno
mov
cmp
iretw
push
mov
xchg
add
pusha
repz
xor
add
clc
sub
mov
pop
leave
adc
adc
ficompl
mov
pop
leave
cmpsl
xchg
sbb
jbe
std
push
call
mov
mov
ret
verr
sub
mov
or
test
mov
ss
push
add
push
xor
sbb
mov
je
xor
mov
and
and
addr16
sbb
adc
daa
push
sarb
push
cmpsl
sub
xchg
xchg
rep
sbb
push
add
cli
push
sahf
lds
je
addr16
jp
xor
xchg
cwtl
fidivrl
xchg
pop
shlb
mov
icebp
clc
fdivrs
and
shlb
mov
cs
xor
cmpb
pop
loop
ror
mov
popa
pop
not
jp
ljmp
shl
dec
loopne
sbb
hlt
xor
aad
xor
in
or
mov
js
mov
jmp
mov
mov
dec
or
xchg
out
ret
leave
inc
ret
shl
add
adc
sbb
jg
xor
xlat
movsb
jnp
mov
adc
cmp
ss
insl
fdivrs
loop
lret
mov
mov
dec
insl
add
fldl
push
xchg
xchg
sub
jle
push
sbb
das
std
ret
pop
rcl
cmp
inc
fldcw
xor
je
ja
pop
adc
push
fs
int
jae
push
inc
pop
sbb
jb
inc
xorps
pop
mov
dec
and
fstpt
frstor
movl
ret
call
pop
push
js
lock
add
icebp
xlat
fiaddl
fsubrs
inc
shlb
push
loopne
mov
push
fidivl
inc
out
pop
sti
xor
xchg
mov
movl
hlt
add
ret
lret
dec
jecxz
jg
xchg
lock
cltd
in
adc
adc
pop
jp
addr16
sub
ret
xchg
call
cmp
mov
lock
xchg
lods
lcall
adc
bnd
and
mov
pop
gs
cmp
fwait
mov
push
pop
outsl
push
jne
ficomps
and
ja
mov
insb
pop
inc
sahf
sahf
mov
jmp
es
push
jle
mov
sbb
sbb
fcoms
loop
in
cmp
jge
push
aam
add
push
mov
add
stos
ret
add
inc
mov
or
leave
inc
mov
inc
sbb
inc
addr16
rcrb
lahf
jl
jl
orl
sub
add
pop
dec
xchg
repz
cmp
xchg
xor
cmpsb
sbb
fisubrl
mov
add
xorb
ror
movb
mov
js
int
xor
enter
addr16
xor
mov
mov
pop
cmp
xchg
repz
in
add
adcl
dec
fwait
add
add
je
outsb
repz
into
mov
mov
inc
aam
add
fdivp
adc
das
add
jge
test
xor
pop
sarb
mov
push
test
mov
pusha
stc
lahf
imul
xchg
jecxz
pop
cmp
les
jno
inc
cmp
inc
push
adc
sarb
mov
sti
fdivp
jo
xor
jmp
pop
pusha
outsl
adc
sahf
mov
adc
scas
fldenv
popa
call
mov
adc
sahf
cmc
cmc
cmpsl
mov
imul
mov
xchg
pop
mov
js
sub
scas
push
pusha
dec
jl
insb
xlat
sbb
movsb
inc
rcrl
xchg
stc
dec
std
mov
xlat
pop
int3
hlt
out
cli
pop
out
push
std
mov
adc
ds
repnz
jmp
out
fwait
mov
pop
fiaddl
mov
aaa
cmp
xor
add
movsl
sub
out
icebp
add
in
jg
push
xchg
mov
sbb
insl
pop
int3
jge
sahf
xor
cmp
sbb
add
jecxz
pop
js
pop
jne
insl
cmp
hlt
jbe
push
sub
push
mov
xchg
fwait
scas
xchg
sub
movsl
dec
push
mov
pop
fildll
test
jb
leave
or
mov
out
into
mov
ja
mov
inc
adc
jl
lcall
loopne
xchg
cmc
dec
stc
sti
cmp
jnp
mov
sbb
push
sub
mov
push
sti
xchg
pop
sbb
dec
mov
out
xchg
lods
aad
lcall
icebp
jno
inc
xchg
rcr
and
pop
xchg
sub
loope
mov
cli
sbb
or
std
mov
fldenv
fcmovnu
xor
jb
rclb
pop
add
mov
add
inc
xor
lock
ret
or
jbe
cmpsb
std
mov
jl
pop
lea
xor
into
mov
lock
xchg
cmp
in
call
adc
icebp
imul
add
add
cmp
mov
test
aam
repz
jle
push
pop
jge
mov
xchg
aaa
add
rorl
cmpsl
ds
iret
dec
into
ss
ljmp
fimull
fs
pop
testl
fists
lcall
sbb
shl
cs
pop
jl
xchg
xchg
xchg
jnp
mov
je,pn
fidivl
xor
jae
repnz
dec
xor
push
mov
or
int
icebp
daa
add
xchg
xor
sbb
xor
jb
icebp
or
or
xor
inc
fcomp
jo
pop
mov
js
jo
jne
loop
lret
fiaddl
enter
or
outsb
add
fs
pop
insl
test
testl
inc
mov
jmp
pop
addr16
cmpsb
push
adc
push
lret
dec
insl
mov
mov
pop
xor
rcl
inc
js
cmp
adc
sbb
idivl
sbb
stos
lea
sbb
out
sahf
dec
sti
fnsave
push
fsubr
inc
xchg
push
std
jbe
sahf
mov
lock
les
aas
xchg
mov
rcrl
mov
adc
push
add
push
mov
js
aam
imul
pop
mov
cmc
adc
hlt
arpl
std
insb
xchg
lcall
jle
and
jns
sbb
sbbb
rcrl
andb
xchg
test
adc
sub
mov
loopne
icebp
imull
pop
or
jmp
mov
add
cld
push
cwtl
add
mov
and
into
push
or
out
jbe
sub
or
stos
add
inc
in
cmp
dec
xor
in
fwait
outsl
adc
push
or
loop
add
and
cwtl
push
adc
pop
ss
cmp
or
sarb
shll
test
adc
je
mov
mov
mov
adc
and
fsubs
stos
je
add
dec
jo
dec
and
jae
jno
je
push
dec
rorl
clc
dec
jb
mov
imul
xchg
push
fiadds
or
mov
xchg
inc
mov
cmp
jne
lcall
xor
xchg
cmp
dec
or
orb
nop
insl
je
mov
jo
xchg
or
cmp
repz
mov
repz
pop
pop
test
mov
lcall
subl
and
sub
adc
jbe
xor
mov
pop
lock
sub
mov
stos
push
jge
jp
mov
sbb
sub
mov
lcall
dec
bound
flds
je
dec
xchg
or
fwait
xor
mov
lock
jb
repnz
ljmp
leave
mov
cmp
jge
repz
and
adc
lods
fisubrl
cmp
adc
push
mov
mov
fwait
repnz
push
ljmp
xor
lock
movsb
ficoml
shrl
aas
jp
insl
xchg
popa
mov
push
or
cmp
xor
add
mov
js
cmp
jg
adc
inc
mov
pop
xor
rcll
cmpsl
xor
jle
mov
dec
xchg
test
aaa
sti
arpl
xor
or
lock
fmuls
dec
stos
icebp
jle
mov
jno
push
js
or
cmc
aam
adc
adc
movsb
aam
adc
dec
sbbl
shl
dec
imul
or
mov
iret
or
insl
ja
fistps
sub
or
insl
xor
out
sub
stc
jl
mov
push
mov
and
stos
test
push
push
jg
fnstcw
jmp
pop
xchg
lods
mov
aad
mov
js
jo
xchg
xor
hlt
popa
shrb
stos
xor
je
test
cmp
inc
inc
sbb
inc
add
pusha
movsb
xor
hlt
js
test
cmp
hlt
jo
mov
inc
jb
pop
sbb
aas
pop
sti
mov
jb
sub
dec
jg
adc
ret
sub
outsl
insb
ss
mov
mov
mov
inc
add
arpl
int3
ret
push
push
jbe
jo
xor
push
fists
mov
sub
mov
xor
or
push
ds
xor
dec
push
fisubl
addr16
sar
jecxz
inc
jo
add
sbb
cmp
cmp
sahf
push
inc
jmp
loopne
test
push
jb
push
cmp
mov
xor
push
inc
movsl
mov
stos
xor
mov
cmp
mov
adc
jb
adc
insl
adc
nop
inc
sahf
jb
cwtl
jmp
cmp
xlat
mov
pop
icebp
add
cmp
clc
adc
and
cltd
xchg
jl
cltd
jle
imul
sahf
je
mov
cmp
test
xchg
mov
aaa
add
add
inc
sahf
jbe
ljmp
and
mov
adc
pop
nop
roll
adc
adc
mov
jae
jb
into
xor
test
jo
cli
lds
loope
sbb
inc
mov
outsb
adc
pop
mov
lcall
ret
sahf
movsl
push
adc
enter
pop
test
inc
sbb
scas
iret
stos
outsb
mov
xchg
ret
cmp
in
mov
push
adc
mov
sbbb
jo
adc
xchg
insb
aaa
sbb
call
jnp
pop
mov
cld
inc
cmp
xchg
leave
mov
push
outsb
cmp
iret
out
sbb
aad
sbb
test
mov
xor
pop
movsl
mov
xor
mov
rcr
sbb
inc
divb
xor
sub
outsl
inc
cld
add
push
jecxz
sbb
cmp
jg
lock
cmp
nop
daa
jnp
cwtl
pop
xor
inc
mov
nop
lods
or
fwait
ret
mov
push
jle
jg
dec
sahf
shrl
sub
xchg
mov
insl
push
js
sahf
xor
or
mov
push
std
cli
or
negl
lods
cwtl
mov
jns
jo
mov
xchg
orl
test
inc
inc
popa
mov
aaa
xchg
outsl
dec
add
push
lock
or
mov
mov
sahf
fdivr
in
cs
push
push
rcll
movsb
mov
hlt
sub
cmp
jmp
add
push
push
mov
lahf
adc
push
bound
xor
loop
cmp
xor
push
pop
add
push
hlt
je
ret
jle
orb
bound
pop
cmp
sbb
daa
out
dec
outsl
pop
dec
repz
jecxz
aad
dec
iret
sub
or
int
cmp
jb
mov
dec
filds
jle
sbb
sbb
cmp
cltd
mov
jne
mov
rcrb
js
cmc
cmpb
outsl
test
add
and
cmc
clc
lock
or
add
add
shlb
cmp
push
or
push
mov
dec
mov
xchg
push
cmp
push
lret
pop
das
sbb
jne
mov
dec
out
cmpl
lock
aaa
subl
or
xchg
mov
data16
daa
inc
add
mov
mov
adc
xor
ret
xchg
or
fstps
dec
dec
jo
add
cmp
pop
sbb
xor
dec
cmp
jge
or
lods
or
cld
out
push
sbb
mov
js
sbb
dec
dec
mov
fwait
bnd
js
pop
aaa
lea
fistl
jl
pop
mov
inc
lcall
dec
enter
dec
shl
push
std
add
movsb
fiaddl
insl
adc
cmpsl
pushf
inc
adc
or
mov
cmp
or
mov
ret
rclb
shl
repz
clc
inc
iret
sarl
inc
aad
mov
filds
inc
nop
sub
lods
and
je
or
orl
leave
fsts
add
sbb
sahf
jb
mov
sub
pop
das
ja
mov
jno
mov
and
sub
xchg
sarb
pop
and
mov
or
push
loopne
mov
repz
pop
mov
sbb
jno
adc
mov
and
mov
pop
mov
push
adc
out
jge
icebp
and
sbb
sbb
testb
movsl
fs
cmp
notl
mov
jp
sub
mov
jne
pushf
js
adc
lcall
sbb
push
or
rclb
out
and
aaa
decb
and
enter
xor
adc
cmp
gs
out
lock
mov
inc
jmp
adc
xor
adc
lock
adc
pusha
lods
fsubrp
xorb
test
or
or
inc
add
mov
leave
push
sub
bound
iret
fld1
xchg
stos
inc
or
ljmp
or
ljmp
dec
and
loope
pop
js
aaa
ret
or
dec
jns
add
pop
andl
sbb
cmp
cmp
out
lods
insb
pop
adc
mov
hlt
aam
int3
cmpsl
mov
repnz
push
jne
nop
aaa
bound
push
aad
adc
in
icebp
scas
orb
jle
je,pn
mov
pop
repnz
pusha
mov
jne
adc
adc
dec
mov
movsl
in
out
mov
or
lret
dec
repnz
add
inc
adcl
stos
sbb
mov
popl
jp
adc
hlt
dec
push
mov
jns
test
es
xchg
subl
dec
test
out
scas
adc
clc
stos
or
shl
push
lock
ret
jno
xchg
xchg
and
sub
or
aam
or
cli
bound
or
leave
pop
cwtl
push
cmp
jo
cmp
jmp
xchg
into
pop
adc
js
inc
jle
rclb
mov
or
xchg
repnz
orl
mov
and
dec
aad
loop
lods
xor
cwtl
xor
repnz
rcrl
or
packuswb
sahf
rorb
jbe
aad
ret
jecxz
pop
pop
stos
dec
mov
push
push
cli
lock
xor
ss
dec
hlt
mov
cmpl
lock
popa
pushf
lret
adc
or
adc
xchg
mov
sbb
push
and
das
loopne
out
fisttpll
lcall
ss
adc
repz
aas
jmp
cmp
sub
dec
imul
dec
ljmp
jns
xchg
roll
jno
jle
mov
mov
push
or
xchg
sbb
xor
lahf
test
movsl
popl
dec
pop
daa
add
ret
jb
jo
push
cmp
sbb
popa
xor
movl
in
jno
ret
adc
add
insb
add
push
jb
popa
adc
push
or
icebp
dec
dec
jbe
push
mov
hlt
mov
pop
dec
and
jno
icebp
xor
adc
lods
xor
xchg
mov
add
and
je
shrb
push
push
mov
xchg
sbb
push
cmp
sbb
icebp
ss
jbe
adc
pusha
std
aaa
jae
xor
data16
push
fists
shr
jno
adc
pop
testb
in
mov
adc
adc
out
mov
jg
dec
sbb
mov
mov
cmp
inc
pushf
inc
mov
xor
sub
leave
das
sbb
shl
jbe
stc
loope
pop
rorb
jg
jl
int
adc
lock
lea
or
int3
aad
cwtl
push
jne
adc
icebp
mov
push
js
fiadds
icebp
ret
insb
xchg
or
mov
or
nop
or
mov
mov
sahf
mov
push
std
out
add
fwait
xor
mov
out
mov
xchg
cmp
testl
inc
scas
xchg
scas
push
outsb
ljmp
mov
add
cwtl
fisubl
fdivrl
xchg
sbb
out
in
lock
add
pusha
lahf
stc
or
push
je
pop
idivb
or
movsl
mov
cmp
xchg
mov
clc
stos
cmp
data16
xchg
push
mov
inc
lret
inc
cmp
jg
push
inc
inc
je
sahf
xor
pusha
xor
or
xchg
cli
js
cld
add
pop
clc
add
cli
insl
mov
or
insb
gs
xor
and
or
std
inc
daa
shrb
bnd
ja
mov
jb
xor
sub
insl
repz
clc
adc
mov
add
pop
adc
adc
push
mov
or
arpl
jbe
int
xchg
cmpsl
push
sub
fdivr
or
dec
mov
jae
clc
inc
pusha
xchg
dec
int3
or
sub
push
repz
or
lcall
dec
push
daa
xchg
and
repz
cltd
repz
inc
ss
mov
or
xor
jo
jl
xchg
xor
jmp
sbb
cmp
repnz
cmp
mov
adc
adc
repz
insl
pop
ret
out
cltd
jge
sub
pop
jb
cmp
addl
cli
mov
js
mov
jnp
int3
cmpsb
cs
sarb
sti
adc
xor
into
mov
push
sub
jge
xchg
cmp
mov
bound
mov
jne
ljmp
into
adc
push
push
fstl
jnp
cli
repz
mov
and
mov
and
xor
lds
cmp
int3
jne
push
not
pop
pop
and
lahf
jb
xor
jno
pop
pop
dec
xor
cltd
lcall
rol
dec
add
sahf
mov
mov
scas
out
xchg
and
clc
inc
pop
push
inc
or
jno
jmp
loop
mov
sahf
jns
jne
sbb
addr16
pop
or
add
cmpsb
push
inc
insl
mov
stc
pushl
dec
and
adcl
sbb
aad
repnz
push
push
sbb
jno
push
lods
mov
jb
add
xchg
adc
jo
insl
rcl
outsl
mov
icebp
or
lock
or
mov
decb
outsb
inc
repnz
pusha
fwait
clc
mov
aaa
add
cmp
jmp
icebp
cld
lods
pop
cwtl
addb
addb
ja
or
and
mov
adc
aaa
jo
fists
pop
add
scas
pop
xchg
aas
clc
jmp
or
aaa
add
mov
cli
dec
mov
add
jmp
neg
imul
pop
dec
mov
pusha
and
xchg
bound
or
out
mov
add
push
pusha
mov
inc
popa
out
into
arpl
jle
das
mov
push
in
imul
jo
jno
mov
mov
cmp
pop
add
fildl
je
sahf
add
cmp
shl
mov
icebp
sub
je
movsl
push
cli
cmp
jb
mov
cmp
pop
push
stc
jmp
xor
xor
add
ret
jecxz
inc
push
imul
mov
pushf
out
adc
dec
xlat
shll
movsb
fsts
addb
js
mov
icebp
mov
cmpxchg
jg
inc
xchg
into
dec
out
jo
cli
shll
mov
adc
or
mov
lock
loopne
or
adc
adc
push
xor
add
jecxz
das
push
jae
push
add
push
mov
xor
and
xor
and
rcll
icebp
or
mov
adc
rorl
lock
sbb
and
icebp
les
xor
mov
adc
repnz
push
iret
or
popa
xor
push
lcall
je
cmp
and
adc
or
mov
adc
cmp
stc
lret
mov
pusha
xor
pop
bound
cld
js
insl
sbb
and
lea
mov
mov
test
lods
push
push
pop
fsts
stc
pop
pop
or
xchg
les
test
mov
lock
inc
sbb
push
ja
dec
mov
or
cmp
or
je
and
mov
popa
and
repnz
push
repnz
andl
je
jne
neg
sbb
fdivl
pop
lock
ljmp
jb
mov
cmp
mov
stos
inc
fisttps
push
xchg
dec
pop
sub
call
in
mov
mov
loop
mov
into
movsl
adc
stos
bnd
pusha
hlt
insl
adc
jae
pop
mov
push
jo
sub
fldl
adc
test
insl
adc
and
dec
fwait
inc
xchg
push
add
pushf
pop
fmull
xchg
lock
aam
mov
xchg
cmpsb
xor
push
xchg
outsl
fisubrs
mov
cmp
jg
pop
imul
icebp
aas
xchg
orb
xor
add
inc
xchg
popa
mov
dec
dec
fwait
or
pop
sbb
add
or
rclb
mov
test
sarl
fs
jo
jnp
dec
mov
mov
cmc
insl
nop
add
sbb
pusha
fld
addr16
out
sub
int
cmp
out
jno
or
inc
repz
mov
mov
jno
push
lds
test
in
or
jg
scas
sbb
mov
ret
cmpb
add
fbld
or
stc
cmpsb
imul
lret
fstpt
inc
outsl
fidivrs
mov
push
inc
sub
jmp
mov
out
enter
sbb
or
xor
cmpsl
xchg
aaa
aad
cmovle
push
cs
xor
test
loope
sbb
adc
and
xor
xor
dec
insl
inc
cmp
adcb
mov
cmp
or
dec
xchg
sbb
into
push
cmp
repz
xchg
jnp
sub
mov
add
inc
cld
rcll
xlat
sub
call
icebp
pop
push
inc
jbe
int
popl
sbb
jns
push
xchg
lret
add
clc
mov
cmp
pushf
lock
mov
cmpsl
js
push
or
jae
cmp
and
or
js
dec
push
push
stos
sub
pop
mov
sbbb
add
push
roll
icebp
xchg
mov
add
sbb
pop
jo
shl
aam
dec
mov
mov
pop
and
add
ja
insl
cmp
pop
jbe
scas
or
iret
lock
ficoml
aaa
push
and
icebp
lock
inc
in
filds
rclb
mov
std
add
adc
sbb
stc
xor
adc
aam
mov
inc
int3
cmpsb
lock
nop
outsl
jp
fmuls
es
add
add
pop
je
stos
je
jns
dec
adc
mov
pushf
pop
dec
imul
xor
ljmp
ja
add
mov
push
nop
pop
mov
mov
and
cltd
cmp
loop
push
sub
stos
ret
lock
pop
out
mov
cmp
inc
cli
ljmp
xor
mov
pushf
stc
inc
loopne
jns
adc
add
rep
add
push
in
aas
pop
or
movsl
jne
mov
pop
adc
pop
xor
pop
call
mov
in
xor
cli
xchg
cmp
add
rol
aad
mov
das
cmp
cmp
ja
xor
jo
adc
ss
adc
je
outsb
push
pop
dec
cmpb
xchg
pop
add
lds
sahf
mov
in
lock
pop
cwtl
std
xchg
dec
inc
lcall
clc
out
mov
push
imul
cmp
xchg
test
out
mov
pop
mov
and
cmp
lods
imul
adc
jne
or
cmp
ljmp
inc
jge
enter
xchg
adc
jg
dec
mov
mov
test
cmpsb
push
aad
rorl
pusha
push
adc
cmp
push
test
dec
lahf
icebp
ficoms
mov
test
into
pop
push
xor
clc
outsl
adc
push
push
adc
xor
in
jb
mov
adc
cmp
cmpsb
in
clc
xchg
cmp
push
jl
adc
mov
rolb
ss
aam
push
inc
jnp
dec
xchg
mov
sbb
mov
xorl
mov
pop
mov
add
std
out
mov
jno
cld
mov
cltd
sbb
push
cli
repnz
subb
push
sbb
or
insb
sti
icebp
inc
mov
icebp
and
lea
inc
insl
icebp
push
mov
xchg
jne
inc
jl
les
insb
int3
xchg
lret
mov
adc
cmp
arpl
push
test
mov
cwtl
push
or
cltd
jnp
cmp
aad
pop
insl
or
fmulp
mov
dec
fwait
inc
mov
orl
fisubrl
movsb
stos
push
cmp
xor
jmp
sub
inc
sbb
mov
add
js
pop
fst
sub
outsl
fwait
jno
sub
pop
mov
pusha
mov
xor
dec
inc
jnp
cmp
test
cmp
clc
test
fwait
mov
xchg
jb
in
sahf
dec
cmp
mov
outsl
aam
std
ljmp
push
add
mov
imul
repz
clc
inc
pop
mov
addl
testl
adc
insb
bound
arpl
mov
mov
cmp
lods
sub
xchg
clc
add
andnps
out
cmpsb
ss
xor
cmp
add
mov
imul
xor
xchg
jecxz
xchg
adc
fsqrt
rorl
cmp
add
test
dec
ja
clc
cmp
xchg
xor
in
lods
jo
inc
or
outsl
cld
jle
pop
mov
fstl
mov
pop
pushf
lock
xchg
cmp
mov
dec
add
and
jns
mov
mov
fs
es
dec
scas
and
push
or
andb
mov
fcomi
inc
mov
mov
mov
jno
addr16
add
loope
out
lods
call
push
fidivrs
jbe
adc
pop
ror
and
loop
sub
lock
jle
fwait
iret
gs
xor
in
inc
imul
jbe
test
cmp
lcall
enter
fsts
lret
sbb
cmp
sbb
je
cs
cmc
cmp
cmpsl
cld
nop
out
xchg
pop
and
div
inc
sbb
loop
hlt
jb
push
popa
rcl
adc
int3
jns
repnz
xor
into
in
rol
sbb
call
js
and
add
adc
enter
sbb
or
or
add
xor
dec
mov
test
dec
jae
adc
rorl
cmc
stc
xor
adc
clc
insb
dec
popl
dec
sbb
out
cld
sub
dec
rcll
mov
add
adc
mov
add
xchg
clc
out
add
xchg
shl
ljmp
movsb
ss
test
or
pop
rorb
xor
sbb
cmp
cmc
mov
xchg
or
cmp
xchg
pop
mov
push
or
and
xchg
ficoml
aas
icebp
je
and
push
cmp
jae
jecxz
sbb
js
dec
adc
jecxz
mov
stos
and
aam
fisttps
add
into
or
push
adc
mov
or
jo
inc
rol
cmp
insl
adc
adc
sbb
mov
into
int
arpl
inc
add
push
das
lcall
cmp
add
lcall
mov
sahf
jno
jne
mov
push
sub
mov
xor
and
push
das
inc
rcll
dec
popa
adc
xchg
out
inc
or
fwait
pop
lret
jecxz
call
cwtl
icebp
sahf
push
push
div
xchg
pusha
xchg
jo
js
mov
jns
stos
mov
sub
shll
and
imul
or
lock
xor
mov
lahf
cmp
cmp
ljmp
jg
jo,pt
dec
cmpsb
inc
adc
push
out
xchg
pop
push
pop
jb
mov
inc
jp
clc
clc
clc
sahf
cmp
aas
mov
sar
or
xor
jge
es
push
insl
sbb
dec
clc
dec
outsb
cmp
aaa
insb
mov
mov
in
iret
insl
clc
mov
hlt
jb
call
jmp
aaa
cmp
lahf
nop
push
cld
mov
or
cli
fsub
das
subb
mov
and
sbb
dec
sahf
sbb
inc
outsl
and
xorl
add
repz
mov
insl
xor
and
icebp
adc
iret
movsl
pop
in
xchg
xor
movsb
and
call
xchg
out
das
lret
or
rorb
js
xor
adc
insl
push
xchg
mov
push
sub
inc
testb
push
stc
xchg
sub
xor
push
fdivrl
xchg
push
rclb
fldl
mov
rorb
pop
mov
lret
iret
add
cmpps
out
aas
scas
ds
jno
repnz
into
inc
aas
add
shll
pop
push
shlb
cli
notb
adc
xor
cmp
test
or
xchg
repz
test
test
testb
dec
inc
fwait
dec
and
test
out
std
jb
sub
stos
popf
fidivrs
shrb
movsl
push
out
inc
test
add
cli
js
js
mov
jae
pusha
aas
jge
mov
inc
mov
add
ja
jle
lea
or
or
sarl
push
lcall
and
xchg
mov
cli
jns
pop
pop
push
xchg
std
or
dec
jne
pop
cltd
enter
adc
inc
icebp
bound
cwtl
push
xor
inc
cld
jg
shl
jle
js
xor
bound
mov
or
setg
in
cmpsl
dec
js
imul
outsl
xlat
cmp
jmp
cmp
mov
movsb
mov
mov
icebp
das
pop
dec
repnz
push
jmp
cmp
or
pop
jno
add
ss
pop
bnd
and
jb
negl
xchg
cli
fsubrs
jb
f2xm1
fs
xchg
mov
cmp
cli
mov
mov
je
xchg
mov
popl
adc
and
mov
add
jbe
xchg
xor
cli
push
cmp
lahf
sarl
jg
adc
xchg
adc
xchg
adc
xor
fstpl
mov
movsb
cld
jae
das
cmpsl
push
icebp
sub
sahf
rcrl
or
jle
pop
mov
cltd
out
xlat
in
cltd
push
clc
cs
bound
call
inc
jecxz
jp,pt
push
std
leave
xor
xchg
xor
mov
pop
xor
lds
add
or
cmc
std
js
outsl
pand
je
mov
push
js
or
push
add
lahf
jns
icebp
mov
jle
rol
sbb
scas
mov
rorb
pop
sbb
and
fidivrl
adc
mov
icebp
cmp
pop
mov
inc
mov
push
pop
and
scas
lds
neg
sbb
ja
imul
sbb
sub
push
cmc
out
or
or
jbe
xchg
dec
pusha
dec
mov
imulb
sub
or
ja
icebp
mov
in
popa
cli
sahf
das
dec
jb
pop
outsb
std
sub
xchg
adc
xchg
sbb
mov
out
fnstsw
xchg
clc
xlat
decb
xor
push
and
es
push
pop
jo
sub
cmp
setnp
jge
jnp
push
inc
mov
jns
cltd
icebp
imul
cmc
out
or
insb
or
es
sub
mov
mov
test
cwtl
mov
jp
push
adc
and
mov
ljmp
mov
cmp
or
or
xchg
and
fidivl
jl
dec
insb
add
push
xchg
test
aam
fistpl
or
cmpsl
fiaddl
fcomps
cmp
fs
fld
cmp
rolb
xor
push
xor
pop
push
add
inc
iret
inc
mov
orb
pop
cmp
sti
aaa
test
popa
or
mov
mov
and
popa
push
push
dec
inc
mov
inc
adc
repz
push
sub
xchg
jae
or
jbe
repnz
add
out
in
xchg
sbb
pop
jne,pt
xchg
xorl
mov
and
push
mov
dec
add
push
or
sub
gs
push
fnstsw
cmpsl
jns
imul
lock
sub
cmp
lahf
xchg
jne
stos
pop
lea
pushf
inc
xor
mov
flds
jb
scas
test
sbb
push
and
add
lcall
clc
sahf
jge
pop
push
pop
out
add
sbb
rclb
and
insl
jp
cmp
sub
addr16
decb
push
ds
in
mov
jge
and
cld
insl
adc
cli
push
cltd
loopne
js
sbb
ljmp
mov
push
mov
jo
mov
addr16
xchg
into
data16
mov
xor
adc
xchg
cmp
mov
lods
insl
xchg
jb
out
cmp
pop
shrb
mov
sbb
xor
adcb
xchg
in
mov
add
mov
js
mov
lret
xchg
or
gs
clc
mov
jo
xlat
in
push
cmpsl
push
sbb
in
int3
mov
jno
cli
js
inc
cmp
out
cmp
xor
dec
and
outsb
cmp
int3
mov
push
icebp
repnz
out
jb
add
clc
mull
mov
mov
fs
sahf
into
lret
or
inc
xchg
or
and
fidivs
inc
adc
adc
mov
xchg
mov
sub
sbb
xor
pop
cmp
adc
add
in
jns
mov
pop
lods
je
fadd
dec
lods
jns
decb
insl
fcmovbe
stos
sbb
es
adc
stos
in
mov
mov
ret
mov
and
pop
cltd
mulb
sahf
xchg
fildl
dec
subb
fsts
jo
add
dec
rcll
add
addl
pop
push
adc
xor
mov
into
add
sbb
inc
jae
mov
imul
pop
cmpsl
jp
sub
jnp
movsl
pop
loope
dec
add
in
int3
or
jo
jae
mov
mov
data16
fnsave
test
call
ret
out
inc
and
xchg
imull
and
xor
add
test
mov
sti
clc
pusha
dec
rcll
push
lahf
push
mov
xchg
push
insl
sbb
adc
xchg
mov
mov
xchg
shl
addr16
dec
fcomip
inc
das
shld
sub
push
paddq
inc
cli
adc
cmp
dec
push
leave
jbe
adc
loope
fstpt
add
mov
adc
cmpsb
xor
roll
cltd
jecxz
in
cmp
stos
jns
inc
icebp
cmp
xchg
popa
rcr
loope
sbb
or
jle
je
jo
dec
out
sbb
xchg
mov
insb
inc
arpl
add
xchg
repnz
lcall
inc
sbb
fs
pop
gs
jno
aad
data16
ja
dec
fbstp
int3
add
insb
xor
sti
xor
insl
cmp
xor
aad
jg
fdivrl
clc
mov
je
ljmp
lock
pop
pop
test
sub
xchg
jne
add
lods
mov
xor
testb
xchg
repnz
fldl
hlt
push
sbb
orb
pop
cmpsb
xchg
outsb
xchg
xchg
xlat
mov
inc
aad
jne
scas
xchg
fiadds
mov
mov
fxch
mov
push
xor
xor
xlat
mov
pop
inc
xor
cmp
iret
inc
jl
inc
jb
inc
test
sub
jo
mov
daa
jge
mov
add
mov
lret
out
mov
mov
sbb
test
int
daa
dec
fbstp
cs
jge
adc
sti
sub
xor
test
mov
add
imul
cmp
fs
iret
fildl
adc
sbb
or
sahf
xchg
test
push
dec
and
mov
add
mov
stc
jle
adc
icebp
adc
arpl
adc
or
aas
mov
stc
cmpsb
add
xchg
aad
pop
xor
xchg
outsl
lock
repz
int
cmp
imul
or
fsubl
cmp
or
icebp
mov
movsb
js
ret
lds
xchg
das
push
div
sahf
in
cmp
loop
ljmp
mov
pusha
sbb
cmp
or
cld
sahf
sub
mov
divb
cmp
cld
xchg
or
pusha
jp
mov
inc
into
jp
push
cmp
lea
mov
push
adc
aad
pop
push
js
lock
cmp
dec
repz
jo
mov
jp
pop
lods
dec
cmp
mov
and
adcl
rcrb
pop
mov
in
out
and
pop
sub
or
push
loop
mov
cld
jo
adc
sahf
hlt
pusha
mov
mov
cmp
mov
imul
push
sarl
ret
insl
lcall
pusha
mov
xchg
cld
mov
push
cmpsl
mov
push
ss
ljmp
pushf
sbb
jb
pop
repnz
imul
popa
pusha
movd
mov
lcall
movsl
inc
inc
sahf
xchg
fcomps
popf
insl
and
push
adc
xor
daa
cwtl
xor
or
mov
mov
dec
das
mov
cld
inc
mov
sub
add
push
enter
loop
stos
jmp
in
sub
mov
adc
push
pushf
jbe
mov
mov
loopne
mov
jbe
push
adc
cmp
leave
fsubrl
mov
adc
and
and
aam
outsl
stos
ret
pop
pop
xchg
sub
jno
sbb
pop
xchg
iret
pop
push
fildl
rcr
ljmp
or
adc
scas
popf
fadds
imul
jb
loopne
mov
mov
push
lock
cltd
pop
jno
push
cs
je
negb
imul
or
jle
adc
lock
push
cmp
push
testb
aas
lea
or
fwait
scas
out
xor
loope
mov
xchg
pop
jo
push
push
neg
sub
std
inc
sub
xor
mov
cmp
jno
dec
xor
in
add
repnz
sbb
xchg
mov
cltd
adc
repnz
in
shlb
nop
mov
mov
xor
lock
icebp
divl
sub
lock
adc
or
inc
js
pop
adc
push
lock
add
test
or
pop
push
xor
push
and
jns
les
nop
pop
inc
lcall
mov
hlt
stc
das
fwait
xorl
pop
sbb
mov
out
xchg
imul
sbb
into
xor
dec
xchg
aad
mov
sarl
fwait
es
aad
in
fbstp
repnz
sti
xchg
or
or
cmp
jg
fmuls
xchg
push
test
pop
orb
ja
add
mov
sahf
push
in
inc
mov
aas
cltd
sub
enter
push
and
jo
fisubrl
popa
insb
jle
fdiv
xchg
test
pushf
cs
out
cmp
insl
cmp
in
and
jnp
mov
aaa
push
xor
lock
push
push
sbbb
inc
jge
mov
lret
push
push
in
dec
inc
imul
push
sbb
lret
out
nop
inc
mov
jge
enter
cwtl
ds
or
push
cmp
lahf
jno
add
xchg
shrl
push
sbb
mov
sub
out
xor
and
add
cmp
imul
inc
test
sub
jae
bound
jno
cmp
insl
mov
mov
sar
cwtl
cltd
pop
jns
push
dec
fidivl
es
add
sub
pop
push
pusha
ljmp
stos
loop
add
inc
orb
jno
lock
nop
push
adc
mov
xlat
outsb
cmc
pop
nop
xchg
jmp
adc
out
mov
adc
dec
mov
lods
or
outsl
cmpsl
lret
mov
add
sub
adcb
prefetch
xor
inc
and
repnz
dec
leave
push
call
or
mov
lock
push
sbb
mov
cmp
stos
dec
cmpsb
fsts
push
fistps
lods
inc
imul
push
pop
negb
fstps
jbe
mov
int3
aaa
push
jne
push
sub
push
jle
or
cmp
or
and
in
cld
jno
decb
sti
stc
xor
and
and
pop
cli
xchg
popf
push
xor
jge
repz
mov
mov
adc
sahf
adc
or
sarb
add
lret
mov
adc
fldenv
jl
lret
div
icebp
shrb
jl
cmp
jno
adc
ljmp
jg
sbb
cli
test
jb
dec
repz
dec
jg
jne
sub
in
adc
nop
cmp
jp
cli
sbb
dec
sub
cwtl
loopne
mov
sub
shrb
add
stos
loop
fdivrs
mov
fcoms
gs
sahf
mov
push
pop
shlb
jg
mov
subl
cmp
cmp
rorl
mov
xor
mov
mov
rcll
sar
lods
pop
mov
negl
test
int
sar
das
pop
adc
iret
xor
repnz
in
add
shll
cmp
push
jo
insl
sbb
and
dec
inc
push
cli
fdivrl
cltd
pop
xor
or
sbb
xchg
sub
pushf
push
adc
sbb
mov
insl
mov
pop
inc
dec
scas
jae
fstps
xchg
lods
cmp
or
jle
cwtl
mov
add
sub
adc
inc
jb
or
not
stc
les
lret
xchg
xchg
flds
mov
mov
insl
inc
outsl
lock
outsl
cmp
add
jo
call
mov
icebp
iret
clc
dec
sbb
push
insl
cmc
aad
mov
aam
hlt
mov
xor
insl
shr
and
adc
adc
fbld
cmpsb
ss
repnz
mov
xchg
cmp
aam
push
loope
fisubl
pop
push
out
jne
sbb
and
aas
rep
aaa
mov
jbe
lds
and
mov
dec
jle
mov
lahf
jecxz
or
sti
mov
cmp
mov
in
xor
aad
push
mov
sub
shlb
cmp
js
xor
or
push
data16
sub
aaa
in
push
mov
pop
cmp
cmovne
or
mov
jo
xchg
inc
inc
cli
inc
icebp
rclb
bound
pop
cmp
je
pop
mov
adc
or
mov
mov
dec
mov
jnp
add
loopne
iret
inc
movl
cmp
add
arpl
xchg
push
xchg
or
xchg
lock
stos
mov
adc
pop
jmp
popf
add
or
sahf
call
pop
adc
aas
xor
mov
mov
jne
push
mov
xchg
ljmp
stos
test
ffree
push
popa
xchg
pop
fiadds
sub
mov
mul
sahf
adc
push
insb
push
jge
mov
imul
adc
sahf
push
pop
bound
or
stc
test
add
icebp
mov
lcall
daa
xchg
jmp
push
orb
mov
xchg
outsl
jge
lret
sbb
lret
push
lret
dec
xor
push
sbb
cmp
aas
mov
lret
adc
stos
fisubrs
aam
inc
rorb
andb
cmp
mov
loopne
inc
popf
and
repz
subl
sbb
xor
mov
mov
inc
mov
cs
mov
adc
mov
pop
jb
enter
icebp
mov
insb
adc
or
push
add
movsb
aam
in
pop
dec
and
push
jl
lock
fadds
das
imul
sbb
test
lock
sarb
xchg
sbb
in
mov
and
jecxz
mov
je
aaa
fcmovbe
ja
push
and
mov
fwait
in
or
cs
mov
fisttpll
fiadds
jns
mov
adc
inc
decl
and
cld
xor
mov
and
inc
outsl
cli
inc
xor
stc
push
jp
addr16
xchg
or
pop
fldenv
ret
sub
pop
bound
cmp
jnp
push
adc
jb
fnstcw
mov
movsb
aas
cmp
jp
push
adc
mov
sub
xchg
ret
sbb
mov
push
lods
mov
fisttpll
xchg
jl
or
push
test
xchg
fldenv
rcrl
orl
mov
push
aam
mov
mov
cltd
jle
pushfw
nop
pop
sti
mov
cs
in
push
movsb
cmp
or
shrb
pop
stos
add
mov
mov
mov
dec
in
mov
sbb
jbe
add
cmpsb
push
scas
scas
xor
sbb
daa
mov
mov
repz
icebp
or
mov
clc
or
xor
iret
and
aad
mov
dec
sbb
or
add
mov
cmpsb
in
jns
stos
inc
sbb
rorb
push
negl
js
divl
into
loop
std
jmp
lcall
xchg
hlt
add
pusha
es
adc
std
inc
push
imul
enter
test
iret
lret
adc
sbb
or
lahf
pushf
cmp
bound
loop
lret
jecxz
aaa
and
adc
setp
pop
or
mov
addl
data16
sti
fists
call
aaa
or
fisttpll
xchg
mov
lea
or
push
pushf
push
test
jb
divb
push
insl
mov
mov
xchg
mov
imul
mov
sub
mov
shrb
stc
test
ss
push
lock
mov
hlt
cmp
aad
push
pop
mov
rcl
cwtl
pop
xchg
xor
lret
insl
subl
pop
movsb
pop
jne
xchg
jl,pn
out
std
test
ds
mov
sub
into
or
pop
repz
pushf
push
lret
mov
dec
nop
xchg
je
adc
xchg
xor
repnz
push
cmp
push
push
pop
sar
sub
mov
adc
repnz
adc
jnp,pt
in
sub
xchg
out
xchg
sub
mov
cmp
jne
or
mov
arpl
icebp
push
ss
cmp
xor
test
push
jl
lds
add
js
adcb
lock
adc
mov
lret
xor
dec
push
repz
int3
or
push
stc
insb
xchg
aad
lret
pop
cld
add
mov
aam
int3
mov
repnz
add
xchg
cmp
cli
mov
or
les
and
jno
psubd
jo
fcompl
mov
cs
xlat
sahf
add
out
sub
bswap
hlt
jne
xor
fists
mov
cmp
insl
pusha
or
pop
xchg
or
push
jle
sub
pop
push
inc
xchg
xor
sub
ss
push
cmc
mov
sahf
xchg
xor
mov
pop
xor
das
add
lock
push
push
push
dec
dec
aad
clc
sub
hlt
fnstcw
int
sbb
insb
mov
sbb
cld
or
scas
cli
inc
call
or
lcall
xchg
or
lock
mov
inc
adc
mov
hlt
mov
or
inc
rcl
and
insb
sub
mov
js
jp
or
mov
xchg
out
add
sub
das
and
in
mov
out
jb
xor
data16
sbbl
mov
push
popa
mov
or
sahf
mov
push
mov
addr16
or
mov
cmp
add
cltd
aam
xor
jbe
jmp
out
nop
mov
jo
cltd
repnz
and
es
pop
adc
lret
dec
push
fbstp
mov
jge
jecxz
cmc
sub
cmp
or
sarb
mov
cmpsl
dec
iret
pop
adc
cmp
mov
cmp
xchg
and
jbe
jnp
sti
das
or
xchg
xchg
xlat
test
add
sahf
xor
dec
mov
cmp
push
adc
adc
jg
adc
pop
push
or
or
icebp
mov
lock
cmp
jno
aad
jns
bound
lcall
mov
sbb
or
adc
into
cwtl
dec
divl
mov
and
rcl
shr
filds
ss
pop
mov
mov
sub
enter
loop
mov
cmp
aam
movsb
xlat
cltd
xchg
lds
xor
icebp
mov
sub
xor
cmp
mov
xor
into
insl
stc
fcompl
mov
in
jo
nop
and
push
xlat
push
jno
in
pushf
rcrb
das
in
adc
mov
xchg
fwait
int
ljmp
icebp
sub
fwait
inc
jno
pusha
sub
push
cmp
hlt
jo
adc
xchg
lret
or
sar
adc
jae
mov
enter
and
push
lcall
push
cmp
fstl
stc
xchg
mov
mov
xor
jbe
xor
mov
stc
fisubs
dec
fbld
xor
mov
fisubl
pop
fimull
mov
daa
adc
pop
mov
int
jge
lea
jmp
push
int3
fstpl
pop
icebp
ficompl
sbb
jo
push
adc
ret
pop
lcall
stos
xor
gs
dec
fsub
pop
mov
inc
mov
icebp
xchg
imul
js
loope
mov
rcr
lret
pop
popf
jp
dec
xchg
xchg
inc
xchg
movups
fsubl
mov
and
out
lea
or
and
xor
sbb
sub
insl
lret
xor
shl
aam
gs
mov
imul
hlt
jge
mov
and
dec
fidivrl
repnz
mov
je
jns
lods
stos
adc
add
aas
lock
ljmp
sahf
inc
xor
hlt
lcall
cwtl
mov
ljmp
pop
mov
inc
adc
dec
push
add
jnp
daa
adc
nop
cmp
ds
mov
lahf
jne
jb
popf
mov
int
pop
fistpl
xchg
sbb
jo
imul
cmp
in
jne
or
ss
das
xor
pop
jne
pop
and
js
or
push
aad
testb
cmp
adc
cltd
pop
sub
in
dec
xlat
mov
jle
xor
pop
and
hlt
xchg
gs
subl
clc
push
cmp
pop
mov
jno
std
jno
cmp
imul
repz
sub
icebp
rolb
cld
or
cmpb
and
xchg
pop
jb
push
je
jae
sbb
nop
dec
jp
nop
pop
test
inc
repz
inc
subl
jle
adc
push
mov
ret
fyl2x
addr16
cmp
lret
out
sti
decb
movsb
stos
fadds
shlb
fdivrl
pop
insl
pop
xchg
mov
ja
insl
aaa
xor
jbe
mov
jbe
clc
pop
lods
out
xchg
fidivs
dec
fwait
pop
adc
or
icebp
fistps
std
sbb
and
test
sbb
popf
mov
mov
sbb
sahf
jae
mov
fsin
or
stos
hlt
push
shrl
cmp
dec
cmp
mov
fs
jae
dec
repz
fbld
and
adc
mov
jb
icebp
xchg
inc
inc
adc
add
cmpb
adc
leave
add
push
mov
xchg
add
icebp
adc
pop
js
divb
cmp
pcmpeqb
aam
push
dec
lock
mov
mov
jmp
sbb
lcall
push
ss
sbb
fcmove
insb
xchg
es
sti
sbb
mov
fistpll
pushf
jle
data16
icebp
xchg
cmp
pop
scas
xchg
jb
je
lea
jbe
sbb
ja
stos
repnz
mov
std
mov
jle
in
adc
addr16
repnz
push
bnd
jl
sbb
stos
pop
sub
repnz
icebp
bound
test
push
dec
cmp
cmp
adc
mov
ljmp
arpl
pop
sub
in
dec
push
lret
mov
cmpsb
inc
insl
imulb
mov
or
and
or
pop
jecxz
fsubl
nop
fiaddl
mov
and
int
xchg
insl
mov
shll
push
push
jns
pop
mov
cld
ja
out
add
jno
push
inc
add
push
dec
movb
mov
cmpsl
clc
and
add
and
xchg
push
test
adc
lods
sub
mov
shll
mov
jl
sbb
into
in
enter
pop
jnp
adc
sub
adc
icebp
cli
add
mov
mov
push
int3
mov
inc
adc
add
fidivrl
pop
cli
out
push
sub
lea
or
or
adc
and
repz
stos
mov
sbb
push
das
lahf
js
dec
or
orb
loop
dec
and
outsb
push
cwtl
push
sbb
dec
or
jp
sbb
scas
xor
xorb
or
fs
adc
mov
xchg
jno
push
xor
popa
sub
repz
test
movsl
das
or
mov
imul
lret
add
xor
dec
aam
hlt
cmp
xor
xor
mov
jae
inc
mov
jne
add
mov
jb
inc
adc
int3
sub
insl
pop
jae
xor
jmp
je
int
cmpsb
sub
inc
aas
xrelease
insl
cltd
es
xor
cwtl
or
mov
xchg
jge
cld
sbb
loop
or
cmp
int3
mov
mov
cli
mulb
mov
pushf
inc
pop
frstpm(287
testb
push
push
push
shrb
stc
jb
xchg
dec
movsb
push
out
popa
push
xor
shlb
sub
stos
or
sub
lds
mov
fisubrs
or
mov
fs
loop
ret
jns
call
or
jb
scas
pop
jno
adc
aam
xchg
insl
cmp
scas
pop
mov
in
scas
in
mov
push
int
xor
jb
dec
outsb
mov
in
or
dec
pop
int3
dec
repz
imull
sub
outsl
fldcw
ljmp
gs
shll
push
repnz
adc
repz
cmp
jno
or
dec
cmp
inc
out
dec
pop
jecxz
arpl
xor
push
dec
cmp
jmp
mov
fwait
imul
in
mov
and
movsb
pushf
push
jl
fsubl
into
out
out
fmuls
test
jmp
iret
push
sub
adc
sub
in
out
je
and
xor
shlb
loope
or
sbb
shl
repnz
push
fists
lock
dec
cmp
push
or
add
jno
aad
outsl
dec
je
sub
xor
push
pop
push
mov
outsb
cmpb
add
jno
jb
test
pop
fnsave
push
sub
add
dec
push
mov
add
pop
mov
mov
mov
xchg
cmp
add
call
lods
aad
push
mov
mov
cmp
daa
adc
mov
add
add
inc
testb
icebp
adc
sbb
xchg
mov
xor
mov
pop
xchg
xchg
xor
push
or
in
testb
test
xchg
add
testl
xchg
push
jp
mov
jns
repnz
mov
push
xchg
cmp
leave
ds
in
pop
or
pop
sarb
fnsave
pop
sahf
inc
xor
pop
decb
scas
push
jmp
mov
int3
xchg
xor
jp
mov
or
rcrb
popf
fcompl
add
stos
mov
jb
push
rcrb
mov
leave
and
adc
fwait
push
mov
stos
pop
loopne
add
hlt
adc
dec
ljmp
adc
sbbb
data16
icebp
jbe
sub
mov
out
mov
xor
fwait
jp
sbb
repnz
mov
dec
in
xor
push
cmp
fdivrp
xor
mov
jae
nop
cmp
push
cmp
pop
cmp
mov
inc
push
cmp
adc
pop
xor
faddp
je
xor
dec
or
fimuls
jl
cmc
xchg
mov
mov
loopne
mov
mov
adc
mov
insl
xor
jns
pop
mov
in
mov
daa
flds
cmc
mov
out
jns
inc
roll
jae
xor
mov
pop
push
imull
mov
xor
fucomi
xchg
mov
inc
iret
pop
jb
das
inc
pop
cmp
add
lods
loope
mov
pop
jbe
lahf
adc
je
jl
and
out
bound
xor
pop
divb
pop
aad
inc
fiaddl
push
push
loope
mov
cmc
js
push
or
dec
cmp
aam
in
test
xchg
fs
inc
inc
xchg
mov
adc
cmpl
sub
lock
or
lahf
ss
pop
pusha
push
pop
dec
dec
loop
xor
and
lahf
ret
fcompl
cmp
js
pop
gs
xchg
int
sbb
xchg
mov
add
divl
ljmp
stc
test
and
jne
into
mov
outsl
xlat
sbb
fdivrl
or
enter
mov
orb
lods
lcall
cwtl
out
movsl
xorb
cmp
add
jbe
xor
jp
inc
jne
cmp
xchg
and
aaa
or
test
adc
dec
mov
push
or
and
clc
push
lret
iret
cmpsl
es
mov
mov
fs
divb
jmp
je
int3
movsb
add
mov
xchg
cmc
dec
xor
scas
mov
jo
pushf
or
xchg
into
aam
rorb
and
out
cmp
fwait
ret
aaa
cwtl
pop
pop
ja
scas
mov
test
inc
lock
aad
push
clc
jne
cmp
sub
insl
push
in
jle
mov
std
or
stc
xor
test
push
add
mov
xchg
push
es
inc
mov
mov
cmp
mov
idivb
push
adc
iret
mov
lcall
jb
mov
sahf
mov
xchg
dec
push
pusha
lods
cmp
cmp
jns
mov
xchg
jle
lret
test
fsubrl
gs
pop
cmpsl
addb
stos
lea
mov
mov
call
adcl
mov
out
xor
mov
aam
cs
mov
mov
jne
or
mov
push
cmpsb
test
and
sbb
lock
mov
mov
or
bt
xor
insb
scas
stos
insl
inc
adc
fcmovnb
cmc
xchg
pop
loope
push
push
xchg
push
jg
jge
add
rorb
xchg
mov
sbb
fdiv
dec
add
out
push
xlat
mov
xor
sbb
mov
lock
addr16
mov
jno
adc
push
mov
inc
push
pop
mov
in
sbb
lret
inc
adc
jb
xchg
xorl
xor
into
add
cmp
adc
js
gs
jp
adc
add
xchg
negl
or
js
sub
xor
pop
repz
call
leave
notl
add
pop
jp
xor
xor
dec
ja
jp
jbe
addr16
xchg
pop
jbe
mov
testl
pop
adc
push
hlt
js
jge
in
mov
add
jbe
mov
into
inc
push
jne
pop
int
aam
je
push
cmp
jle
pop
inc
stos
and
dec
sarb
mov
stos
outsl
adc
dec
push
gs
cmpsl
inc
or
mul
push
loop
cwtl
cmp
pop
push
add
sub
cld
push
aad
jb
jecxz
mov
sub
cld
mov
cmp
testl
sub
jo
mov
lods
imul
lock
sub
mov
pop
push
movnti
adc
inc
jns
testl
stc
inc
cmpsb
dec
xor
lea
and
repnz
jnp
pop
clc
orb
mov
mov
sub
mov
pop
clc
cmp
push
inc
je
clc
movsl
dec
daa
mov
xchg
out
bound
cwtl
sbb
dec
lods
cmp
add
cli
ret
stc
popf
outsb
movsb
xchg
jbe
mov
adc
add
inc
pop
mov
pop
xchg
mov
pop
or
fs
xor
adcl
push
xor
sahf
jge
sbb
xchg
cwtl
pop
pop
mov
or
repnz
lret
jb
icebp
push
dec
xchg
stc
pop
cmp
andl
dec
xor
and
cmp
adc
adc
mov
ljmp
push
scas
mov
adcb
jecxz
cmc
cs
mov
jge
push
xchg
ss
cmp
fidivrl
lods
jne
cmp
sqrtps
shrb
adc
push
iret
dec
fistpl
xor
adc
mov
jl
adc
es
fstpt
xor
adc
sahf
shll
mov
notl
jne
xchg
cmp
test
adc
out
jl
and
sarl
js
xchg
imul
das
bound
orl
ja
xchg
inc
arpl
test
dec
push
pop
stos
pop
subl
add
stc
addr16
sbb
sbbl
pop
push
pusha
daa
out
adc
lods
scas
sbb
adc
out
lock
arpl
mov
adc
inc
cmc
xor
gs
outsb
adc
xor
pusha
inc
out
add
mov
ja
lret
sub
jg
pop
mov
jae
push
shrb
popfw
mov
mov
fnstcw
cmpsb
ljmp
pusha
movsl
les
pop
xchg
pop
imul
sub
inc
push
lock
and
stc
sbb
not
cmp
ss
icebp
ficompl
mov
scas
mov
push
into
add
std
leave
int
and
imull
jo
icebp
lock
mov
and
push
repz
xorb
mov
inc
shl
mov
out
movsb
ljmp
jl
or
push
inc
push
xchg
loop
sub
adc
icebp
sbb
xor
fimuls
jo
loopne
or
insb
cmpl
test
cmp
sub
fcomip
outsb
dec
jns
dec
xlat
out
xchg
popa
xor
stos
push
int3
xchg
hlt
or
aad
lock
lds
fstps
cmp
fcoml
inc
pop
jl
iret
sti
dec
loope
xor
and
mov
mov
push
and
push
xor
push
adc
cmp
xor
insl
enter
stos
sub
jbe
clc
mov
sub
int3
jae
xor
stc
mov
sub
fisttpll
xchg
cmp
mov
push
inc
lea
jbe
aas
pop
nopl
dec
and
inc
xchg
jl
mov
test
or
lods
ret
push
push
sbb
stos
or
sub
cld
adc
sahf
jb
add
adc
js
aad
gs
repnz
test
insl
xchg
xor
mov
adc
mov
call
or
mov
call
out
dec
inc
lock
inc
cmp
jbe
xlat
gs
or
in
in
cli
push
es
lock
repnz
xlat
fcmovne
xchg
add
scas
andb
pop
shl
inc
pop
fildll
cli
sbb
pop
sbb
pop
mov
sbb
or
cwtl
jb
lock
lds
cli
cmp
sbb
push
push
js
mov
pop
jge
fnstcw
pop
cs
filds
jl
add
mov
jb
adc
sub
call
adc
popl
jp
nop
or
or
subb
arpl
es
inc
mov
aam
jno
andl
mov
lea
mov
shr
arpl
push
add
arpl
jecxz
mov
aas
addb
aad
push
push
and
mov
jns
xorb
in
jns
inc
inc
cli
outsb
adcb
or
shl
ljmp
shlb
and
hlt
sub
push
xchg
imul
mov
sub
push
mov
pushf
xor
mov
lea
shr
adc
and
jb
int
movsl
mov
arpl
imul
out
pushf
inc
push
lock
push
ret
adc
sbb
mov
jge
lds
pop
aaa
ja
into
mov
xchg
xor
test
mov
jmp
cld
loop
out
dec
push
add
sbb
jne
xorl
pusha
or
js
or
dec
fldl
in
xor
int
cs
add
adc
inc
es
cmp
adc
lock
mov
push
inc
xchg
popl
lea
imul
cld
inc
inc
xor
pop
aad
lcall
add
clc
sahf
sarb
lahf
in
adc
rcr
imul
dec
in
es
repz
xchg
clc
loop
xor
jle
data16
jae
fnstenv
xor
mov
xor
xchg
test
les
mov
sbb
adc
movsl
xor
xorb
mov
pusha
ja
push
rclb
vpacksswb
fcmovnb
adc
push
in
push
call
iret
and
mov
cmp
add
jae
add
scas
push
nop
sub
bnd
jns
rclb
pop
ss
jl
nop
add
sahf
xor
lods
jns
in
pop
mov
scas
and
push
rep
mov
adc
or
jge
and
ja
hlt
xor
and
std
std
mov
ds
jg
nop
in
or
test
jno
fimull
mov
aas
xchg
cmp
jecxz
dec
mov
pusha
cmp
push
cmp
mov
push
clc
jns
aaa
jno
mov
js
js
testl
lods
fsubrs
pop
xchg
add
es
jecxz
and
push
test
adc
gs
adc
pop
fstpl
sbbb
movsl
cwtl
fst
fcmovnu
ds
adc
push
xchg
mov
add
cli
sub
ljmp
and
mov
add
adcl
dec
lock
dec
stc
lock
ss
div
xor
fyl2xp1
adc
mov
add
cmpl
and
xor
xchg
or
jmp
adc
aad
cmp
call
jbe,pn
mov
lret
and
push
xchg
adc
sti
out
in
xchg
adc
mov
cld
adc
loop
and
mov
mov
fistl
cmp
sbbl
push
das
adc
adc
sbb
fmull
jl
fwait
adc
cmp
or
fnstsw
rcrl
popa
or
and
or
icebp
sbb
lods
or
add
and
add
xorl
sbb
push
fs
data16
xchg
hlt
xchg
js
jl
pop
adc
sub
dec
adc
test
movsb
sarb
mov
or
xchg
sti
inc
or
jno
cmp
ss
notb
lock
xchg
cmc
data16
repz
repz
js
je
jnp
add
mov
adc
adc
daa
xor
push
test
or
testb
lock
mov
xchg
cmp
adc
test
test
adc
sbb
sub
mull
stc
adc
xchg
jp
cld
jo
jle
icebp
push
sub
xchg
movsb
repz
inc
ret
jae
jg
enter
jb
icebp
js
jnp
js
icebp
insl
push
insl
pop
jp
mov
das
iret
dec
xor
jl
lock
jae
inc
mov
lea
jno
sbb
push
inc
lock
sarb
xchg
cmp
mov
arpl
push
adc
sti
push
hlt
aaa
addr16
aaa
clc
jle
jg
das
jno
das
dec
mov
hlt
gs
test
pop
jle
xor
add
fwait
es
mov
push
mov
or
jo
lock
clc
icebp
in
jge
cmp
adc
sahf
jg
cmp
cwtl
inc
mov
push
dec
jne
sarl
and
scas
jo
jnp
xor
cmc
inc
or
out
and
das
or
push
adc
out
or
or
dec
ljmp
roll
fwait
lret
lcall
push
movsb
xchg
fwait
int3
icebp
jbe
cwtl
lock
dec
pop
lods
movl
push
xor
jg
pop
jnp
aas
fcomi
dec
push
jg
shlb
mov
js
xor
leave
stos
scas
pop
mov
testb
dec
jg
or
jle
mov
mov
cwtl
cmc
in
iret
push
jp
movsb
jne
jne
adc
lcall
add
mov
cmp
fcmove
sub
retw
or
ret
jmp
dec
imul
jne
cmpsb
pop
es
and
mov
mov
jl
rclb
test
out
cmp
insl
jecxz
fdivr
add
icebp
jecxz
sbb
lock
pop
pop
xlat
lock
sub
mov
lock
repz
aad
subl
loopne
jo
arpl
ljmp
loopne
push
lcall
adc
or
or
stos
xor
fwait
jg
out
test
fidivrs
cmc
inc
mov
insl
dec
or
test
sbb
out
mov
inc
mov
jnp
jl
mov
inc
push
scas
lods
sbb
dec
in
stos
addb
and
insl
lock
add
lea
scas
lods
mov
sub
cmc
repz
neg
mov
int
xchg
and
clc
adc
js
push
push
cwtl
xchg
push
cli
ja
push
stc
push
sahf
mov
ja
icebp
hlt
pop
mov
dec
pop
cmp
call
cmp
xchg
dec
cmp
hlt
add
jg
mov
push
cld
cs
mov
or
cmp
js
negl
into
std
scas
xlat
daa
inc
jmp
cli
test
jbe
iret
es
xor
pop
popa
lock
or
inc
arpl
pusha
pop
push
inc
push
popa
rolb
ss
sbb
fidivl
mov
mov
iret
rcrb
jg
ds
pop
or
adc
ss
nop
mov
out
cmpsb
ret
adc
xchg
xor
or
in
add
test
gs
xor
pusha
dec
jl
inc
sub
lock
stos
repnz
jle
xchg
inc
ss
add
in
or
lock
xor
cmp
or
jns
clc
insl
mov
repz
xchg
stos
push
or
jo
adc
cmp
subl
adc
je
hlt
mov
cld
fisubs
mov
dec
ja
inc
xor
adc
dec
rorb
insl
sbb
outsl
aad
inc
inc
adc
jmp
sar
add
loopne
mov
fistpll
xchg
cwtl
adc
ss
cmp
fdivrs
out
dec
jb
leave
cltd
cwtl
adc
outsb
scas
sub
mov
mov
imul
push
jb
call
jecxz
jmp
pop
ficoms
pop
mov
shlb
aam
scas
decl
jo
cli
cvttps2pi
icebp
cmpsl
fwait
cmp
rolb
outsb
xchg
mov
adc
xchg
add
dec
or
mov
xchg
push
iret
ret
mov
sar
add
jp
jns
xchg
pop
clc
iret
cli
cli
pop
push
inc
ja
fisubrl
lock
scas
jb
xchg
ja
int3
xchg
cwtl
sar
jl
fcmovnb
add
lahf
jl
shrb
adc
jo
add
xor
bound
arpl
lcall
fs
mov
cmp
adc
pop
js
mov
cmp
jbe
sbb
scas
xchg
dec
cltd
push
xchg
leave
lret
test
add
inc
movsl
xorl
or
inc
cmpb
mov
mov
rcll
and
xchg
test
orb
or
push
mov
mov
cld
inc
mov
enter
add
mov
lds
xor
inc
stos
pop
iret
push
pop
sub
adc
repz
xor
pop
stc
lret
dec
cltd
add
mov
nop
jle
sbb
push
movsl
pusha
jecxz
pop
push
jnp
das
and
or
cmp
lods
bound
and
pop
fisubl
sbb
lcall
cmp
stos
out
sub
sbb
xchg
ljmp
clc
popa
fiaddl
pop
push
cmp
push
test
stc
cli
int
cmpsl
adc
fstpt
rcll
ficomps
les
jae
cmp
cs
xchg
gs
loopne
jp
imul
pop
je
test
sbb
or
cltd
addb
stc
aam
mov
fwait
mov
adc
adc
jb
pushf
xor
cmc
jae
xor
fwait
jle
popa
jns
push
pop
jle
xlat
out
pop
mov
sbb
xor
lcall
add
in
jb
jge
cmpl
mov
pusha
es
mov
inc
inc
jge
sbb
cmpsl
rorb
dec
mov
movl
out
pop
std
div
and
movsb
repz
push
adc
cmp
sub
xchg
ret
and
xlat
test
mov
mov
lds
mov
push
sahf
xchg
fwait
js
js
adc
push
mov
ja
mov
subl
hlt
add
add
inc
cmpb
sbb
pop
scas
mov
dec
pop
stos
mov
test
popa
adc
and
mov
xor
mov
inc
cmp
jge
pop
aam
dec
imul
loope
push
mov
outsl
imul
aaa
and
cwtl
adc
add
pusha
sbb
mov
cmp
xchg
jne
cmpb
stos
sbb
iret
popl
scas
mov
aam
jns
pop
cmovg
arpl
mov
repnz
repnz
push
xor
cmp
fs
jg,pt
add
pop
and
jle
notl
popf
lret
loop
mov
xchg
adc
sub
pop
pop
call
sbb
lock
sarl
lahf
ret
xor
call
cmp
mov
cmp
mov
fisttpll
incl
pop
nop
mov
push
data16
ret
notl
icebp
mov
mov
push
add
mov
mov
mov
ret
inc
mov
cmp
mov
xchg
mov
jp
inc
je
mov
insb
cwtl
push
out
xchg
bound
xor
dec
cmp
jo
divl
pop
jl
mov
or
nop
pop
sub
js
in
adc
jo
adc
jg
jae
adc
ds
popf
mov
xor
jo
push
push
sub
jno
jne
or
jo
push
fyl2xp1
dec
dec
mov
or
nop
and
sahf
mov
stc
lods
mov
mov
mov
shrl
rclb
popf
frstor
jle
aaa
dec
cmp
mov
jl
push
xor
cmp
adc
shll
or
push
testb
repz
xor
js
cld
sahf
popf
cmp
and
inc
push
dec
mov
jo
jae
jle
ret
icebp
test
dec
sbb
cmpsb
cld
add
out
mov
sahf
jbe
cmp
lock
xor
jl
jno
incb
adc
push
out
mov
adc
pextrw
adc
push
test
fidivl
int
add
add
cli
adc
int
cld
jb
xchg
jle
sbb
test
test
ja
push
xchg
add
test
in
sahf
adc
imul
js
add
movsb
push
dec
sarb
cld
mov
rep
mov
hlt
pusha
out
sbb
hlt
out
adc
push
fnstcw
js
jl
cmc
fwait
push
in
mov
sarl
je
icebp
repz
cmp
sti
dec
popf
test
rcll
clc
inc
aas
ds
or
xor
fdivr
or
xor
pop
add
cmp
mov
adc
nop
add
xlat
mov
inc
adcl
pop
mov
adc
pop
mov
shll
mov
jno
jp
test
jmp
adc
push
cld
jl
test
xchg
daa
nop
rcll
cld
jp
test
repz
sbb
jmp
in
cltd
jmp
cwtl
scas
aad
lea
cmp
jbe
sbb
sbb
add
sub
test
in
inc
stos
xor
xor
incb
adc
sbb
inc
sbb
or
pop
lock
hlt
xchg
mov
sbb
repz
mov
add
mov
cld
sbb
add
sbb
pop
pusha
sub
dec
or
mov
push
push
div
sbb
rcrl
push
neg
sbb
jno
popf
cltd
enter
xor
outsl
cltd
shlb
dec
mov
icebp
mov
adc
pop
adc
adc
jnp
push
push
out
and
xor
fst
sti
sbb
jo
dec
scas
andnps
xor
pop
adc
dec
test
sbb
pop
and
pop
add
test
and
lret
icebp
cltd
mov
and
adc
mov
mov
cmova
cltd
ret
mov
mov
lock
popf
pop
cmp
stc
and
push
and
fistl
mov
adc
push
cli
cld
sbb
movsb
push
sbb
mov
clc
xchg
mov
inc
xor
sub
cmpsb
add
cld
jno
cmc
add
lock
mov
addr16
inc
jl
and
add
add
sbb
clc
sbb
icebp
xor
or
push
je
dec
cmpxchg
cmp
repz
icebp
xorl
jecxz
aad
jae
jp
dec
movsl
int3
fs
hlt
mov
inc
cli
pop
cmp
adc
pop
fdivl
pop
fstps
gs
push
and
pushf
pop
add
ja
je
sbb
adc
popf
rcr
sahf
push
daa
data16
dec
or
sbbb
sbb
insb
sub
scas
imul
popl
mov
iret
cmp
and
sbb
retw
out
inc
dec
fisttpl
cmpsl
sbb
or
add
add
cmpsl
add
cs
outsb
mov
stc
hlt
mov
mov
pop
repnz
or
out
xchg
testb
test
icebp
paddsw
mov
add
mov
sub
and
adc
mov
jg
mov
jno
pop
shl
adcl
bnd
mov
jle
aad
pushf
mov
lock
or
mov
xchg
add
adc
hlt
push
push
sub
xor
adc
test
ja
and
shrl
mov
not
and
and
data16
rorb
imul
xor
add
hlt
stos
jb
pop
dec
jecxz
sbb
pusha
repz
shr
ja
adc
nop
loope
jmp
xchg
jmp
adc
xor
adc
jmp
sub
in
dec
cmp
lds
movsl
jg
mov
and
mov
or
mov
in
sub
pop
xor
adc
xchg
clc
push
cli
jbe
adc
xchg
jo
mov
mov
mov
jae
xor
mov
negb
adc
js
pop
lea
aaa
jo
js
push
icebp
fs
mov
not
jl
fxch
nop
xor
ja
jno
or
mov
repz
repz
js
jg
add
jmp
or
jno
push
adc
or
sbb
adc
xchg
es
mov
push
scas
sbb
adc
mov
adc
mov
sbb
shll
repz
adc
cmp
je
xor
push
mov
adc
add
sbb
cmp
jo
sbb
adc
inc
xchg
jl
jne
or
rclb
push
ss
xchg
test
aam
arpl
xor
mov
outsl
push
sbb
lds
ss
lea
adcl
in
jno
sti
notl
cli
cmpsl
jg
seto
jp
xorb
xchg
sbbb
cld
bound
fwait
or
xor
jo
push
bound
dec
jg
ja
xor
jb
adc
xor
xchg
xor
fdivr
pop
sub
push
sbb
std
pop
push
lret
inc
mov
lock
dec
sbb
pop
mov
xor
adc
jnp
xchg
cmp
test
mov
jg
sarb
add
sbb
pop
push
xchg
cli
daa
xchg
je
cwtl
sbb
push
rclb
notl
iret
ret
cmp
jne
scas
sub
out
js
adc
js
add
sarl
sbb
testl
add
shll
push
test
mov
mov
push
cltd
adc
icebp
jmp
js
add
andl
out
repnz
push
jge
jae
mov
lcall
and
ret
and
sbb
push
push
dec
jne
add
adc
or
out
pop
inc
mov
negb
add
inc
test
aam
or
ror
adc
fnstsw
jae
fwait
xchg
je
push
repz
lods
adc
stc
push
xor
stos
inc
adc
out
jae
mov
and
cmc
dec
xor
lods
ja
les
adc
stos
and
push
and
lcall
lods
sub
add
push
and
ss
mov
cmp
add
js
js
sbbl
add
lds
cmp
push
pop
hlt
movsb
jo
sbb
cli
mov
dec
jo
mov
jb
aam
shlb
fstps
clc
pushf
push
lcall
hlt
add
out
fcompl
dec
cld
fcomps
adcb
jnp
sbb
adc
or
imul
mov
pushf
jl
xor
popa
add
push
cmp
mov
pop
movzwl
push
pop
add
imul
jle
clc
mov
xchg
inc
adc
and
out
sbb
mov
mov
out
inc
out
and
mov
pushf
movsb
sub
shl
sbb
aad
in
cltd
enter
xlat
jo
in
cmc
mov
inc
stc
subb
pop
fs
mov
and
repnz
mov
lret
stos
xchg
mov
mov
or
sti
xchg
fnstcw
jl
mov
jno
sub
add
jbe
data16
idivl
cmp
repz
std
push
mov
gs
cmpb
adc
pop
inc
mov
hlt
stc
sbb
pop
jle
add
cld
or
fldl2t
adc
mov
test
pmaddwd
pop
or
mov
divb
test
xor
fcoms
jo
jbe
ret
mov
or
mov
cmpsb
mov
stos
fdivs
rcrb
push
jo
add
xorb
adc
xchg
ja
xchg
aam
xor
push
xchg
dec
andl
je
das
pusha
sbb
mov
push
mov
rorl
sar
sbb
jle
movsb
clc
and
xor
push
inc
pushf
mov
mov
fiaddl
and
or
adc
jne
jl
das
nop
push
dec
jbe
lods
add
push
add
mov
sub
sub
mov
add
cmp
mov
stos
adc
xchg
lret
xor
pop
fnstcw
mov
cmp
jp
icebp
cld
lock
push
jne
jp
ss
cmp
aas
dec
add
pusha
in
dec
std
loope
cltd
add
pop
cltd
or
test
bound
mov
sbb
fadds
aaa
jp
cwtl
add
and
xchg
addr16
test
cli
cmc
and
jnp
adc
lock
fists
dec
repnz
pusha
in
cmp
lock
mov
mov
dec
pop
js
jns
jb
or
and
pushf
jns
inc
pop
jp
ret
pop
je
gs
movsb
jg
cltd
subb
sbb
push
fisubl
or
sub
xchg
std
movsb
mov
add
std
jp
cli
and
jb
xchg
fldenv
push
or
jle
test
stc
cmp
pop
or
test
mov
orb
pop
je
das
cmp
jmp
add
sbbl
mov
shr
jg
pop
push
pushf
dec
clc
out
xor
mov
andb
mov
dec
jp
push
pop
stc
dec
xor
cmp
sub
or
movsl
cmp
mov
rcr
je
xor
sub
adc
movsb
sarb
pop
xor
adc
jle
cmp
shrb
std
repz
cwtl
hlt
adc
mov
sbb
sbb
dec
xor
inc
cmp
rorb
lock
sbb
outsb
cmp
inc
xor
testb
pop
outsb
pop
inc
jno
mov
push
stc
aam
cmc
sub
jns
cmc
jno
xchg
fwait
mov
inc
or
clc
das
mov
or
mov
push
inc
pop
ss
fprem
mov
dec
sti
cmp
aam
dec
and
sar
das
sbb
mov
jne
pusha
mov
cmp
rclb
pop
sbbb
outsb
pop
inc
lock
cs
push
pop
frstor
lock
jle
insl
adc
push
jb
cmp
xchg
fdivrp
inc
push
jg
mov
dec
and
sub
repz
mov
fsub
jne
mov
jmp
sub
icebp
repnz
bnd
mov
lcall
stos
sub
push
repz
cmp
pop
out
aaa
xchg
jae
cmc
js
adc
icebp
cmc
jb
xor
repz
lcall
inc
ret
test
fcmovbe
xchg
andb
std
adc
dec
add
sub
out
scas
pop
jp
aad
jp
pop
jg
xor
dec
cli
sbb
mov
mov
dec
add
mov
sub
sbb
notb
cmp
push
add
daa
inc
stos
testb
add
dec
aam
adc
arpl
mov
pop
sbb
inc
jbe
sbb
push
xor
jne
mov
jnp
adc
je
cs
and
adc
rorl
pop
jb
rorb
lock
ss
js
and
stc
jns
jp
js
xchg
jno
sbb
lret
sbb
stc
add
xchg
fsts
lret
cmp
or
movsl
icebp
and
mov
dec
mov
fnstcw
ljmp
mov
rcrb
ja
mov
popa
cs
sub
mov
aaa
sbbb
sbb
push
xor
sub
das
xor
mov
jb
xor
cmpsb
xor
inc
push
pop
jo
fs
push
test
dec
fdivl
push
jo
add
nop
adc
fstps
lret
clc
push
ds
xchg
mov
xchg
push
add
cmp
xor
or
icebp
push
and
aam
pop
ficoml
int
mov
cmp
movsb
cltd
fistps
js
xchg
in
insl
xor
jle
repz
out
mov
pop
gs
dec
roll
je
cmp
je
adc
sbbb
jne
add
inc
jl
xor
lock
sbb
cmp
repnz
scas
nop
xchg
ds
gs
cmp
lahf
pop
mov
enter
xor
push
aad
addr16
adc
hlt
xchg
stc
ficompl
jb
and
add
sub
adc
fiadds
or
mov
xor
jns
ret
mov
mov
sub
xor
jno
out
adc
in
fildll
lock
inc
lcall
xchg
je
jp
jg
jb
in
mov
and
mov
add
xchg
jbe
cltd
and
xor
or
and
mov
insl
outsb
mov
fwait
mov
je
mov
mov
push
xor
loop
scas
and
mov
adc
mov
mov
lret
jbe
jecxz
and
movsb
xor
sbb
cmp
push
add
or
cmpsb
jle
jo
sahf
outsb
jbe
add
adc
mov
icebp
vmwrite
xor
sub
lods
pop
je
sbb
lret
frstor
lea
in
call
mov
push
inc
lock
ja
fiaddl
outsl
pushf
icebp
ja
cmp
sar
cmc
sbb
nop
mov
xchg
js
sti
xlat
sbb
je
add
jb
hlt
add
andb
adc
xor
ss
adc
hlt
xchg
das
jne
rclb
test
icebp
je
test
stc
jle
stc
and
push
daa
mov
jo
out
cmp
push
pop
out
sub
jno
mov
pusha
dec
out
adcb
icebp
dec
add
enter
jo
stos
dec
in
mov
jmp
test
repz
mov
icebp
add
leave
mov
pop
or
mov
adc
or
movsl
pop
mov
popa
mov
cld
cmp
xor
shl
test
jmp
jo
test
or
daa
jae
inc
idivb
and
and
xor
add
pop
sub
lret
pushl
je
int
cmp
push
mov
mov
adc
adc
add
dec
or
jp
or
ficomps
lea
ds
push
and
cmc
dec
mull
stos
jle
adc
imul
popa
mov
lock
ss
mov
dec
xor
test
insl
mov
stos
and
cli
adc
je
mov
adc
dec
fiadds
fwait
repz
jle
inc
xchg
into
mov
or
adc
xor
adc
adc
icebp
adc
xor
xchg
orb
mov
or
addr16
cmp
adc
xlat
push
lahf
pop
cltd
pop
ja
inc
mull
insl
add
aad
aam
loope
dec
add
jnp
or
insl
push
lea
xor
xchg
adc
mov
cmp
dec
rorb
enter
jbe
insl
mov
xor
push
add
cmp
adc
jns
mov
cmp
sbb
dec
mov
sbb
pop
dec
mov
mov
cmp
push
aad
ja
stos
pop
or
imul
xchg
add
repnz
iret
fsqrt
xor
push
mov
fdiv
enter
adc
add
divl
ja
jno
divl
enter
lock
jecxz
push
lock
cmp
or
shll
pop
inc
mov
test
cld
dec
sarl
or
js
jae
sub
out
add
icebp
add
aad
repz
inc
rcl
pop
pop
jnp
dec
jb
ss
cmp
div
jne
adc
inc
jne
xchg
and
dec
mov
insb
or
ret
sbb
push
leave
xor
xor
add
imull
fdiv
pop
push
dec
xchg
adc
xor
sbb
jb
xorl
arpl
jno
push
pop
or
push
push
or
andl
xor
adc
mov
or
std
xchg
xor
jo
jl
mov
jo
aad
jns
std
stc
ret
mov
lcall
cli
jo
into
inc
pop
fisubs
and
or
push
jecxz
dec
rorb
mov
scas
inc
clc
scas
dec
jns
or
xor
mov
cmp
sbbl
xor
cmp
sahf
or
pusha
divl
push
xor
fs
xor
jno
loop
sub
mov
sahf
nop
shl
je
out
jo
cmp
cmp
and
mov
mov
inc
divb
pusha
btc
jl
push
cmp
clc
testb
and
jmp
jae
ret
fcmove
mov
jp
sub
sti
in
dec
xor
push
fbstp
dec
add
push
call
cmpsl
sbb
out
imul
adc
jle
xchg
aad
mov
add
add
jecxz
adc
das
ret
xor
test
pop
je
push
jo
lcall
sbb
and
push
lea
repz
inc
inc
pop
sti
pushf
or
dec
dec
sub
cmp
loopne
xchg
add
cltd
push
pop
xor
roll
mov
sahf
cwtl
cli
jae
mov
jae
rolb
movsb
out
add
out
mov
mov
sub
clc
icebp
and
jle
out
mov
test
enter
ja
inc
dec
clc
push
sarl
in
cmp
or
adc
sbb
lock
fdivl
test
mull
aas
sbb
divl
bound
int
ja
leave
aaa
cmp
adc
push
sub
push
out
push
int3
notl
scas
and
xchg
or
adc
lea
std
repz
mov
fnsave
enter
out
cld
add
hlt
shlb
dec
aam
and
jne
jno
stc
lcall
push
js
cmp
adc
adc
adc
inc
jns
daa
sub
and
cmpsl
mov
and
inc
mov
add
adc
xchg
adc
adc
sub
mov
aam
push
sub
push
icebp
int3
inc
sti
jne
or
cmp
and
sbb
cmp
shlb
ret
inc
and
xor
insb
jo
clc
push
and
push
mov
pop
adc
jae
idivb
pop
xor
adc
jo
out
insb
cmp
adc
jb
adc
and
cwtl
pop
or
mov
pop
add
mov
xor
in
test
insl
jl
inc
call
lret
mov
xor
mov
dec
or
js
ja
cmpb
lds
and
jno
push
stc
jb
icebp
stos
dec
xchg
sub
je
xchg
iret
dec
xchg
xor
pusha
outsl
repnz
dec
testb
es
insl
ljmp
daa
xor
jae
cmpsl
pop
inc
in
cli
push
stc
shl
jle
xor
imul
lret
fpatan
cwtl
cmp
aaa
stc
jne
jle
add
cli
int3
mov
leave
pop
out
or
lret
push
lock
jno
and
or
mov
dec
lahf
ret
gs
and
or
insl
add
jno
jle
js
repnz
xchg
push
dec
jp
mov
inc
add
mov
mov
adc
adc
inc
outsl
shlb
pop
lods
or
cmp
iret
fiaddl
cmpsb
js
adc
push
or
insb
addr16
stc
mov
loop
sbbb
or
notl
cmc
cmp
nop
jae
cmc
stc
repz
jle
insl
xor
cmpb
adc
cmc
and
adc
decl
clc
icebp
mov
dec
ja
cmp
adc
sub
cmpl
or
ja
sbb
xchg
push
aam
ja
sbb
dec
xor
mov
pusha
enter
cmpsl
cmp
stc
es
divl
push
repnz
clc
repz
loope
inc
icebp
fwait
in
pop
adc
pusha
je
inc
adc
and
mov
neg
sbb
or
xchg
jno
mov
sbb
jae
cmp
dec
cmp
lret
adc
mov
cli
test
cwtl
xor
movsb
out
cld
inc
dec
and
mov
sub
lahf
addr16
pop
adc
jp
mov
int
shll
jae
and
mov
dec
call
add
mov
jb
xor
aam
dec
out
bound
cmpsl
jne
fisubs
testl
into
lcall
jbe
repnz
jo
test
xchg
push
cmp
fidivrs
add
arpl
mov
in
rorb
cs
xchg
popl
or
mov
sub
shll
lret
jp
leave
and
lock
jle
orl
jae
ficoms
push
nop
repnz
mov
repz
adc
adc
inc
and
adc
and
enter
dec
les
cli
xor
or
cld
lcall
aad
fstpl
in
dec
data16
iret
stc
add
jmp
xor
pop
je
lcall
ret
sahf
repz
ret
testl
loope
add
lcall
cwtl
stos
xor
adc
sbb
mov
or
xor
mov
in
mov
in
jo
cli
cmp
adc
mov
daa
iret
lcall
jns
jg
das
xchg
aad
mov
jbe
push
out
jne
lahf
in
arpl
rcl
fstps
inc
dec
push
test
aaa
mov
or
cmp
mov
jno
lret
xchg
xor
outsl
inc
push
jl,pn
in
stc
sbbb
mov
enter
cmp
inc
es
add
jp
xor
mov
adc
outsb
mov
fbld
mov
sahf
cltd
pmullw
add
jnp
and
mov
mov
mov
sbbb
cmc
inc
jle
add
lahf
mov
js
xor
dec
jl
xor
mov
or
outsb
clc
icebp
jp
fwait
jp
cli
pop
sti
lahf
cmp
fwait
cmp
mov
mov
add
mov
inc
outsb
je
pop
add
and
or
je
loopne
iret
jne
insl
jnp
push
pop
push
testb
sbb
pop
xor
ret
cltd
fdivrs
icebp
ds
and
push
dec
test
int
inc
clc
out
and
cmp
add
xchg
nop
or
jb
jns
dec
imul
xor
cmp
rclb
fdiv
out
stos
jp
jecxz
jo
fstpt
adc
movsl
jp
movsb
push
pop
mov
shll
xchg
jb
sbb
adc
lcall
inc
xchg
push
inc
mov
inc
rcrb
push
lret
and
add
push
test
xchg
or
push
jno
mov
mov
pop
xchg
mov
mov
push
andb
jo
jnp
push
adc
adc
add
jno
mov
inc
add
cmp
add
xorl
xor
sbb
push
iret
jle
inc
or
xchg
jbe
popa
dec
icebp
in
into
outsb
dec
in
inc
arpl
ret
gs
mov
jb
mov
jge
dec
adc
test
decl
pusha
adc
jp
int
shll
sbb
add
jle
and
and
lahf
sbb
jo
jnp
lea
inc
and
shrb
imul
push
cmp
pop
repz
inc
lods
jge
inc
cwtl
jp
or
loope
push
push
int
inc
out
add
pusha
outsl
xchg
in
out
mov
jne
mov
pop
pop
push
bound
scas
and
aad
and
sti
cmp
test
popa
push
pop
cwtl
call
pop
xor
lock
mov
aas
lock
add
push
pop
cwtl
sbb
mov
jb
xor
jp
jg
pop
in
sub
lcall
dec
cmc
bound
dec
lahf
jo
aas
popa
xchg
jne
jbe
cmp
lock
stc
cwtl
inc
and
dec
jmp
out
and
or
jo
mov
movsb
push
out
cmp
inc
outsb
insl
push
pusha
mov
dec
les
jecxz
pop
cmp
in
mov
fiaddl
aaa
pop
lcall
push
push
adc
jne
decb
in
orb
jo
xor
je
daa
push
mov
lods
iret
pop
lea
add
jb
mov
and
test
hlt
mov
js
sub
jnp
jb
and
inc
mov
stc
jb
ja
movsb
nop
subl
pop
lods
fistl
mov
nop
inc
stos
or
jb
lock
mov
add
cli
push
mov
jo
cs
insl
sbb
xlat
aam
fimuls
mov
faddl
or
sbb
icebp
out
movsb
push
jo
mov
xchg
or
mov
mov
and
xchg
pop
icebp
pop
sbb
pop
add
and
repz
push
js
int
add
fstpt
loop
inc
sbb
xchg
sub
popf
push
int3
repnz
xor
sbb
lea
pop
inc
ret
adc
xchg
sbb
jge
sbb
addr16
fs
bound
inc
cmp
xor
dec
fs
pop
into
pusha
test
bnd
mov
cmp
add
xorb
imul
popa
cs
or
cmpsb
adc
or
and
in
inc
addl
scas
adc
outsb
jge
xchg
pop
stc
adc
adc
notl
cmpb
push
xchg
jno
mov
idivl
aam
fiadds
add
insb
cmp
pusha
add
mov
cli
jb
imul
enter
adc
jnp
dec
pop
push
and
add
and
inc
jecxz
jecxz
or
pusha
std
jl
cmp
mov
cwtl
pop
and
adcl
cmc
cmc
testl
orb
cwtl
mov
movsl
push
sbb
xlat
cmpsb
jge
xor
sarb
repz
mov
lock
adc
mov
xchg
fdivl
pop
xor
dec
mov
adc
divb
cld
xorl
pop
push
in
pop
and
sub
call
fcompl
add
out
or
mov
ja
cltd
fcmovnb
gs
pop
cwtl
pop
sti
jne
inc
sar
in
sarl
mov
pusha
addr16
test
xlat
repz
and
mov
lcall
dec
fiadds
stos
sbb
jl
xchg
mov
ss
mov
jno
insl
stc
push
mov
les
inc
dec
insb
mov
pop
sbb
inc
negb
mov
fnstsw
sbb
mov
lcall
cmpb
xor
into
jp
mov
push
jne
push
lahf
inc
outsl
adc
lock
orl
pop
mov
cmpsb
aaa
xchg
push
fsubrl
xchg
cwtl
mov
xchg
and
mov
pop
cmp
pop
stc
aaa
pop
lret
cli
outsb
and
sbb
icebp
cltd
scas
inc
fwait
js
and
jae
push
lea
insl
shll
mov
and
in
push
mov
lcall
xor
into
add
js
iret
les
fstpt
lock
sarb
adc
sbb
jbe
shrb
cmp
outsb
jle
cmp
dec
lock
je
icebp
cld
imul
mov
popa
xchg
clc
dec
add
cmp
sbb
aaa
outsb
inc
mov
xor
gs
rcrb
sahf
and
test
push
mov
mov
clc
jbe
scas
lods
in
xchg
subl
adc
jo
xor
lods
negl
cmp
mov
hlt
sub
pop
sahf
fs
xor
or
std
iret
roll
cmp
push
mov
notl
jl
mov
or
sub
mov
or
testl
jno
inc
loopne
notb
jg
notb
dec
jb
inc
add
mull
lock
pop
loopne
xor
mov
mov
add
sbb
jns
loopne
xchg
fistpll
inc
xchg
or
sbb
adc
nop
dec
filds
mov
or
imul
pop
sbb
cmp
push
clc
scas
scas
and
adc
inc
iret
call
clc
pop
pop
adc
test
and
cmp
mov
inc
xchg
jle
xor
xchg
jb
aaa
inc
stc
int
insb
int3
inc
xchg
std
cld
clc
jno
pop
pusha
out
cmp
fildll
into
mov
and
pop
andl
push
inc
mov
mov
das
andb
or
push
add
pop
adc
add
jo
movsl
jns
push
sub
stc
jp
push
push
xorb
and
pop
cmp
adc
push
xchg
mov
jle
xchg
icebp
cmp
lock
jl
push
mov
out
add
add
mov
dec
mov
ret
pushf
lea
icebp
jb
jb
add
inc
add
bound
les
xor
int
fidivrl
pop
adc
iret
cwtl
adc
dec
mov
xor
sbb
cli
cmp
fbld
push
pushf
mov
clc
inc
and
xor
and
test
scas
adc
hlt
outsl
cmp
jl
ss
pop
push
bnd
pop
es
repnz
inc
xchg
sub
aad
or
jecxz
jl
scas
iret
mov
stc
cld
jl
jge
adc
clc
adc
jne
xchg
xor
clc
xchg
mov
icebp
inc
xor
add
ret
mov
jns
dec
sub
mov
jb
out
jle
aam
add
adc
jo
or
fadds
mov
adc
dec
idivb
mov
mov
or
std
xor
adc
pop
je
jo
mov
dec
sub
mov
sbb
cmpb
out
test
in
pop
cli
sbb
stos
popa
xchg
mov
or
test
adc
xchg
aam
pop
inc
adc
clc
jae
scas
aaa
daa
je
rcrl
aad
stc
fcomi
push
icebp
test
jl
xor
shlb
fsubrl
mov
std
loop
jb
xchg
insl
mov
add
sbb
or
and
lods
scas
outsl
or
fdivr
gs
dec
mov
mov
gs
ds
and
xchg
push
add
add
xchg
inc
shrb
or
filds
sub
cmp
xor
lret
adc
cmp
js
cmc
jp
mov
scas
sbb
pop
xchg
cld
inc
cld
pop
xor
pop
add
insl
pop
int
fwait
xor
push
push
gs
jns
rclb
movsb
push
mov
mov
push
push
outsb
mov
lcall
jl
cld
xchg
xor
pop
xchg
and
adcb
cld
stc
test
add
jp
jg
mov
mov
add
sub
push
sbb
adc
push
mov
and
data16
mov
setge
cmpsl
and
sbb
pop
mov
jbe
adc
or
pop
sub
push
or
and
sub
sub
test
and
inc
inc
xchg
mov
cmp
xchg
bound
inc
push
jl
pusha
movsl
loop
mov
cmpsl
mov
mov
icebp
mov
scas
mov
repz
fldenv
jp
in
mov
sub
test
mov
addr16
sbb
inc
mov
adc
cmp
sti
or
mov
clc
jb
sub
dec
add
mov
ret
mov
pop
inc
inc
mov
cld
not
push
lahf
lret
sbb
shlb
or
scas
inc
inc
fidivs
lock
lahf
int3
pop
mov
mov
scas
and
sahf
jb
lock
sbb
jg
call
xchg
or
adc
jo
or
mov
out
inc
jno
or
push
dec
xor
mov
jl
inc
mov
cli
jmp
sub
lock
pop
aam
nop
lods
imul
jns
cld
and
js
xor
enter
jmp
inc
jno
dec
jbe,pt
pop
dec
or
sti
xchg
aaa
push
sti
adc
dec
xor
sahf
icebp
hlt
mov
sahf
jne
les
push
and
mov
push
daa
pop
jle
push
xor
xor
add
and
iret
insb
dec
addr16
jne
xchg
jb
lock
rolb
adc
add
jg
loopne
push
mov
pop
es
aaa
sub
lret
inc
inc
adc
sahf
push
mov
push
mov
sahf
xchg
loop
cmpsl
pop
aam
pop
bswap
addb
js
std
jge
fildll
lahf
cmc
mov
mov
lock
jle
loop
mov
leave
stc
and
xchg
mov
push
int
dec
test
cmpsb
into
nop
xor
out
loope
adc
inc
push
insl
divb
lcall
xchg
or
ja
mov
and
and
xchg
lcall
cmp
shrb
outsb
lock
jg
out
or
sbb
fld
fwait
sub
xorb
pop
lds
adc
push
and
push
push
inc
sbb
mov
sub
outsb
or
in
int
inc
jns
notl
mov
cs
insb
lret
loope
icebp
es
inc
push
fmuls
mov
mov
aad
and
repnz
mov
pop
inc
add
iret
loope
insl
or
fbstp
mov
pusha
dec
das
pusha
dec
push
roll
jl
xor
xor
push
fistpll
mov
push
cmp
xor
scas
xor
orl
sub
aaa
sub
and
pop
cmc
sbb
xor
rorb
in
dec
ss
adc
mov
popa
js
or
inc
test
xor
mov
cmp
sub
repnz
rcrb
sbb
push
pusha
push
rol
mov
xor
mov
pop
sub
xor
hlt
xor
shll
jmp
icebp
cld
push
je
jns
xchg
or
movsl
xor
and
sub
lret
insl
adc
repz
js
push
aam
out
mov
in
lock
int3
pop
stos
out
push
push
pop
sbb
sahf
mov
aam
push
jl
clc
gs
mov
jno
std
idiv
add
popa
rol
xor
push
packuswb
div
jp
andl
sub
and
js
dec
aas
pop
icebp
pop
jo
lds
xlat
nop
sub
mov
adc
add
mov
adc
push
lds
aam
add
sahf
adc
push
cli
stos
sub
cltd
and
pusha
clc
repnz
xorb
adc
cld
adc
imul
jne
xor
jb
sub
rclb
pusha
testb
xor
gs
add
lcall
xor
inc
das
cmpsb
je
incb
enter
fwait
mov
sbb
div
stc
or
lods
sbb
fsts
mov
loop
add
xchg
repz
stc
adc
scas
nop
or
jbe
and
andl
mov
push
lahf
jb
test
pop
xor
pop
aad
adc
xchg
mov
xchg
je,pt
jae
sbb
test
andl
cmpsl
push
inc
fldl
xchg
or
xchg
es
push
lock
sar
test
loopne
push
mov
pushf
loope
xor
or
or
mov
mov
mov
pop
mulb
xor
pushf
jns
mov
cmp
xor
icebp
pop
and
mov
cld
push
fucomip
lock
cmp
adc
xor
sbb
inc
cmc
ret
nop
mov
and
mov
cmc
icebp
popf
inc
lcall
js
ds
jb
adc
js
ds
repnz
es
inc
push
sahf
mov
xlat
popa
or
iret
mov
stc
test
cmp
adc
xorl
xorb
aam
adc
and
inc
or
je
or
inc
mov
pop
pusha
lret
cltd
aad
dec
xchg
mov
insl
popa
add
sbbl
shlb
jle
xor
push
jae
lock
aad
movsb
xchg
out
inc
cmpsl
mov
add
in
sar
push
xchg
filds
shl
and
mov
sub
out
xor
inc
lcall
leave
cmp
test
out
lcall
add
dec
inc
in
adc
iret
cld
sti
sub
data16
lock
adc
lcall
dec
insl
lret
adcl
dec
icebp
loop
les
jns
adc
movsl
loop
add
inc
aaa
jne
jo
cmp
jb
xchg
cmp
mov
pop
pop
adc
test
and
data16
pop
cltd
arpl
sub
out
lcall
ljmp
sub
or
mov
out
cltd
xlat
xor
inc
imul
push
sahf
mov
out
leave
xor
add
cmp
mov
dec
xor
mov
rorl
fidivrl
cmp
jle
inc
mov
adc
bound
mov
imul
fstp
icebp
das
add
cmp
btc
push
insb
test
cmp
xchg
adc
insb
jae
outsb
ja
xchg
cmpsl
in
mov
xor
fldt
repnz
lret
gs
xor
cmpsb
icebp
fidivrl
push
jnp
outsl
inc
or
cmpsl
mov
push
xchg
js
lret
cmp
cmp
test
nop
fwait
cltd
jg
adc
cmc
lret
add
daa
sbb
lock
fcompl
enter
jg
sti
xchg
mov
movb
popf
mov
enter
jno
mov
pop
xor
sbb
fs
movsb
stc
scas
xor
xchg
push
int
sbb
jo
int3
lock
fidivl
clc
cwtl
ja
mov
dec
mov
popa
aaa
lcall
jnp
orb
test
xor
jb
mov
lock
add
xor
and
pusha
jns
jecxz
pushf
mov
dec
xor
sarb
clc
add
test
dec
mov
jl
xchg
jne
mov
fcmovnb
mov
push
andl
loopne
and
insl
adc
mov
xorb
nop
add
push
push
push
addl
pop
jnp
nop
into
push
xor
mov
shll
lret
mov
repnz
in
shlb
cmp
jb
cmp
jl
rorb
sbb
repnz
test
adc
xor
mov
jne
in
mov
sbbl
jb
xchg
xor
hlt
cmpb
ret
fnsave
sbb
push
push
outsb
repnz
lret
inc
shll
dec
fwait
jl
and
push
jb
arpl
dec
adc
sbbb
mov
or
jl
cmp
sub
insb
push
stos
adc
insb
add
jecxz
inc
xor
out
push
leave
sbb
mov
out
sti
clc
ljmp
popa
rorb
subb
nop
mov
xchg
xchg
pusha
das
cmpsb
jo
in
mov
int
adc
icebp
adc
xor
xorl
ffree
pop
pop
stos
or
sahf
lahf
fldenv
and
insl
int3
loopne
or
lock
js
push
pushf
out
sub
les
icebp
popa
aas
sbb
mov
mov
mov
pusha
arpl
push
lahf
mov
push
mov
pop
add
jno
ret
inc
hlt
stc
push
xor
add
repz
into
xor
adc
or
ljmp
pop
int3
jno
in
loopne
xor
loop
scas
jae
add
cli
mov
jle
dec
int3
mov
or
das
push
jae
mov
inc
adc
mov
cmp
jle
xchg
enter
bnd
aad
popf
pop
push
xor
jl
je
mov
inc
stc
xor
xchg
jge
mov
adc
push
sbb
xor
ljmp
repz
orb
imul
lahf
fnsave
xlat
add
ds
inc
nop
cld
data16
lods
mov
cmpb
mov
sub
stc
push
mov
mov
jp
aaa
pusha
inc
fwait
pop
mov
pop
cmpb
cmpb
andb
inc
jnp
iret
fldl
ss
movsb
adc
mov
push
dec
xchg
test
fiadds
sarl
test
adcb
mov
out
pop
push
push
push
gs
dec
in
add
andb
out
inc
lock
stos
outsl
dec
arpl
mov
jle
ret
add
addl
mov
push
dec
xchg
ftst
rcll
xor
add
pusha
and
fwait
cmp
ljmp
cmp
popf
mov
push
push
out
adc
daa
and
cmp
ds
adc
clc
mov
inc
xor
pop
ret
or
out
dec
cmp
push
jb
ss
jl
ja
loopne
nop
mov
movsl
aad
mov
sub
jno
shrl
pop
xchg
int3
mov
out
xchg
push
adc
mov
xor
js
jle
lar
stos
fsub
mov
inc
and
test
jo
test
adc
leave
leave
insl
push
cld
adc
mov
pop
xchg
mov
push
dec
test
xor
mov
mov
adc
mov
jbe
addb
hlt
pusha
xor
xchg
sbbb
push
aaa
add
and
jp
lea
xor
push
sahf
cmp
outsb
add
les
xchg
xchg
push
cld
push
cmp
rcll
rcl
andb
shrb
negl
jge
sub
adc
mov
push
jno
pop
in
nop
mov
xor
push
je
mov
push
mov
dec
dec
inc
mov
dec
mov
cmp
hlt
xor
cmp
pop
push
mov
and
lret
add
and
mov
xor
mov
clc
or
jbe
push
cmp
cmpsl
jge
ja
pusha
enter
popa
mov
rorb
push
popl
push
push
jnp
lods
scas
sbb
xor
xor
push
push
call
cmp
leave
jne
loope
sub
or
lds
mov
inc
dec
add
and
dec
dec
jg
call
je
adc
bound
adc
and
push
adc
or
rcr
out
andl
pop
xchg
jno
fdivrs
cmpsl
dec
lret
js
cmp
mov
aad
push
push
outsb
xor
aam
jle
ss
jo
fwait
sub
push
and
pop
xor
pop
push
lea
jbe
outsl
xor
sahf
movsb
cmp
cmpb
mov
aam
push
lcall
fucomip
push
and
data16
lahf
test
sub
gs
out
dec
sahf
xchg
mov
fwait
xchg
jl
fsts
ds
mov
shll
cli
js
scas
jb
sub
daa
cmp
pop
push
adc
repz
xlat
cmp
xchg
popa
mov
rclb
mov
int
xor
fcompl
xor
push
ret
dec
cmp
icebp
icebp
pop
cld
and
xor
and
xchg
iret
adc
stc
ljmp
stos
add
scas
mov
movsb
cwtl
inc
out
insl
sbb
fdivs
or
mov
mov
icebp
xor
and
cmp
adc
lahf
divl
pop
inc
testl
cmp
lock
stos
cwtl
mov
add
jno
dec
hlt
pusha
xchg
jp
mov
cmpsb
leave
jnp
div
orb
push
push
mull
je
xor
scas
mov
stos
pop
inc
test
mov
add
and
xchg
lods
ds
lock
ja
mov
int3
add
cmc
push
aaa
add
lds
sbb
cmc
xor
push
test
cwtl
js
aad
xor
fs
push
sbb
out
or
insb
lea
js
sub
cltd
pop
into
rcr
inc
mov
push
add
mov
in
xchg
andb
xor
jg
add
xor
lea
ret
insb
lcall
xchg
jae
ret
pop
pop
inc
hlt
hlt
mov
push
pusha
sbb
mov
jo
std
push
or
jne
hlt
adc
adc
cli
xchg
xor
test
dec
mov
leave
outsl
push
pop
push
std
sahf
aam
sbb
and
pop
stc
std
icebp
sahf
fdiv
xchg
gs
fwait
mov
out
int
adc
pop
adc
or
sahf
cld
inc
adc
bound
jg
sub
aaa
ret
pop
mov
xchg
xor
dec
sbbb
inc
pusha
inc
jae
xchg
sub
mov
in
negb
lea
das
inc
mov
xor
pop
ficomps
sahf
icebp
mov
mov
push
sbbl
add
cmpsb
pop
in
inc
lods
jbe
add
sti
and
cld
cmpsl
mov
xchg
or
ret
jb
mov
mov
dec
sbbb
subb
mov
xlat
hlt
stc
mov
notl
icebp
sub
mov
test
push
push
shll
jbe
shll
mov
inc
push
out
sub
lock
cmp
xor
sub
adc
or
fstpt
test
xor
push
cmpsl
inc
sbb
push
mov
xor
cmp
leave
cmp
mov
sahf
push
add
js
cltd
push
pop
xchg
ss
aaa
stos
outsl
sahf
sbb
hlt
out
mov
in
ja
mov
xor
adc
aaa
rorl
sarl
aaa
jbe
xchg
push
in
aaa
sub
adc
cmp
sbb
mov
in
jb
mov
mov
adcl
cmp
xor
lahf
cwtl
inc
shrb
pop
test
out
adc
jb
inc
adc
adc
clc
cli
mov
sbbb
hlt
or
add
movsb
jno
xchg
push
inc
pop
ret
loope
outsl
ja
inc
pop
push
js
es
jns
and
out
push
icebp
dec
add
sub
jns
mov
lock
je
ja
push
cmp
lods
fsts
js
sbb
mov
xchg
pop
sarb
inc
ss
or
add
ljmp
mov
cmc
hlt
xchg
nop
push
jle
cmc
sahf
idivb
je
adc
sub
lock
sub
add
orb
cmc
cmc
movsl
jp
mov
mov
add
push
loop
insb
mov
scas
js
or
les
xchg
add
cmp
jmp
bound
in
xor
mov
sbb
addb
stc
adc
js
jno
push
and
mov
xchg
iret
or
pop
xlat
sub
lods
pop
inc
inc
sbb
xor
mov
xor
fdivs
sub
cmc
mov
push
add
fucomip
addl
les
xor
add
in
jecxz
and
scas
bound
jae
popa
fisttpll
cli
xor
jg
sahf
push
mov
mov
nop
lea
cli
jmp
out
jg
push
inc
inc
cmp
std
jge
stos
jp
mov
imul
jb
and
push
xor
dec
aas
shll
in
cltd
adc
pop
jbe
jle
ret
xor
in
out
shl
pop
adc
insl
xchg
clc
js
addl
jno
xchg
sub
and
jno
je
jne
xor
insw
pop
cli
mov
mov
int
or
stc
sub
xor
jp
lahf
fs
mov
xchg
repnz
ficoms
stos
notl
iret
push
stc
jle
sub
and
jo
cmp
out
fmuls
mov
repz
jno
fld
into
jae
nop
sub
mov
xor
mov
mov
mov
adc
lock
jecxz
push
and
movsl
into
ret
repz
aam
dec
sub
xchg
out
xor
mov
push
jne
shll
bound
xor
xchg
aas
jl
push
cmp
xor
xor
push
and
pop
cmpsl
inc
stc
mov
push
std
pop
repz
adc
mov
mov
cmpsl
mov
or
pop
xlat
dec
addl
testl
inc
adc
lcall
shrl
data16
arpl
inc
jnp
xor
loopne
sub
addr16
pusha
push
aaa
inc
xchg
icebp
jg
add
sub
jl
mov
push
je
fimuls
aaa
imul
mov
ret
in
out
data16
mov
inc
ljmp
idivb
mov
insb
outsl
jo
push
fistps
cs
shl
mov
push
xchg
mov
push
and
dec
sub
or
or
push
or
cmp
sarb
cmp
stc
push
sbb
dec
adc
jmp
push
scas
sbb
lea
lret
sbb
out
mov
xchg
or
dec
jmp
sbb
addr16
in
mov
daa
fsubr
inc
and
sbb
jo
or
jmp
fdivrl
or
repz
dec
lret
pushf
movsb
cmp
sbb
out
adc
adc
inc
das
popa
sub
jnp
ds
cld
subb
std
out
out
jns
cwtl
mov
and
cld
hlt
mov
cmpsb
mov
jmp
outsb
lea
daa
sbb
js
call
aam
stc
mov
mov
or
test
xchg
mov
push
das
xchg
aad
mov
popa
xor
or
mov
dec
cmp
or
repz
push
repnz
lock
mov
dec
xor
push
push
mov
xchg
xor
popa
or
dec
repnz
push
add
and
mov
or
iret
out
jmp
rclb
dec
xchg
jo
mov
and
lods
ficompl
std
orb
cmp
adc
fimull
dec
sti
sbb
loop
or
ljmp
jmp
iret
sub
cmc
jge
and
xchg
div
and
mov
fidivrl
cmpsl
lret
repnz
push
gs
stos
lods
je
outsl
push
addr16
xor
nop
mov
aam
jge
mov
call
int3
call
add
or
test
ficoml
stos
dec
scas
jns
jno
dec
xor
out
sbb
jbe
mov
sbb
fldcw
loope
push
cmc
jecxz
or
xchg
or
push
adc
adc
adc
dec
cs
fstp
dec
orb
cwtd
lret
jae
out
std
ja
xorb
xor
xchg
jae
xor
or
jno
mov
xchg
mov
jl
inc
xorb
pop
and
stos
iret
push
int
jl
adcl
push
mov
cltd
inc
jg
fcoms
imul
or
loop
cmc
lods
or
inc
add
in
mov
xor
and
sbb
push
int
sub
sbb
dec
add
in
mov
cmpsl
and
lret
xchg
add
adc
lds
mov
scas
cld
mov
or
mov
pusha
dec
xor
loop
lock
cmpsl
iret
jg
sti
mov
jb
cld
test
fdivs
inc
stos
mov
or
clc
mov
sub
sahf
fisttps
mov
je
outsl
mov
sahf
sub
push
lahf
jecxz
mov
out
imul
push
sub
cld
push
pushf
push
adc
imul
push
jl
sbb
call
jecxz
xorb
clc
jo
ss
xor
xor
lahf
cmp
fstpt
push
mov
jne
rcr
ss
and
add
cmp
scas
or
or
adc
cmp
sbb
and
dec
or
mov
sbb
lcall
and
jge
mov
and
popa
and
cmp
push
subb
insl
xchg
clc
adc
adcb
les
sub
mov
popa
out
negb
and
insw
mov
insb
ljmp
cmc
push
jecxz
je
bound
out
adc
pushf
call
and
pop
ret
out
jbe
int
fstl
xchg
movsl
add
adc
xchg
pop
xchg
loop
test
inc
mov
fidivrl
jl
xchg
jo
xchg
add
inc
mov
push
sub
les
xor
insb
mov
push
in
xor
adc
dec
mov
adc
push
jo
ret
mov
sub
add
aad
add
adc
imul
or
pop
mov
outsl
xor
sahf
jo
rcll
lock
xor
xor
inc
inc
pop
jmp
mov
sbb
les
fldenv
lds
in
xlat
add
subb
jp
mov
mov
inc
rorl
clc
imul
pop
add
cld
and
mov
xor
bnd
ret
les
push
push
pop
sub
jl
cli
mov
pop
inc
jae
mulb
mov
jno
or
or
xchg
cmp
xor
sbb
lret
cmp
lock
je
mov
repz
xchg
roll
sbb
daa
add
cld
xor
sbb
js
sbb
xor
mov
daa
stc
jle,pt
push
jns
sub
imul
add
pop
xor
pop
mulb
pop
add
push
add
scas
push
pop
iret
cli
cmc
xor
jno
lcall
or
sbb
lcall
bound
mov
and
aas
sbb
push
outsl
ret
mov
dec
adc
add
fstl
or
pop
je
js
inc
jno
sbb
xchg
mov
fstps
mov
mov
push
cmc
icebp
adc
fisttpll
cmp
push
outsb
jo
aam
sub
sub
lea
inc
das
shlb
notb
add
imul
lock
push
cmp
jae
insb
adc
testb
into
cmp
dec
mov
sbb
insl
cmc
pop
pop
xchg
or
xchg
mov
push
mov
test
xor
dec
or
xor
lret
push
mov
sub
cmpsl
test
xchg
dec
pop
aad
adc
mov
push
pop
repnz
add
mov
loopne
push
inc
ficoml
enter
stc
sahf
xor
cmp
dec
ljmp
ja
mov
in
mov
jb
sar
out
fs
in
adc
or
scas
std
lea
or
sahf
inc
sub
neg
idivb
cmp
push
mov
xor
fisubrl
jne,pt
fidivrl
roll
inc
and
hlt
insl
jno
mov
cmp
xlat
inc
add
add
mov
adc
xchg
mov
aaa
adcb
stos
sbb
nop
cltd
jp
mov
push
cmp
cmc
cli
cmp
pop
stc
jno
jg
lock
lret
mov
sbb
in
push
mov
popa
ljmp
ja
int
push
cmpb
cmp
loope
xorps
push
aam
mov
adc
or
cltd
sahf
test
add
js
lds
jne
mov
pop
sub
out
iret
adc
lock
xor
out
add
add
push
pop
jp
and
or
in
stos
jno
out
jb
mov
mov
cmp
icebp
mov
cmp
neg
out
cld
repz
jno
sub
outsb
jne
cmp
icebp
mov
mov
cmp
je
inc
loopne
cmovl
stos
outsb
incl
daa
and
cli
adc
leave
pusha
cmc
test
or
inc
leave
sub
repnz
das
pop
inc
mov
push
fwait
in
test
pushf
jno
into
lahf
lret
inc
sbb
mov
jp
in
adc
cmpsb
mov
out
andl
pop
push
xor
mov
push
into
add
je
lock
dec
sbb
push
daa
xor
clc
scas
jne
or
cmc
sahf
fwait
clc
cld
cmc
cs
leave
add
xchg
push
mov
cmp
xor
push
adc
xchg
repz
xor
insl
mov
sahf
xchg
cmp
jb
jae
rcrb
inc
cmpsb
mov
aas
out
push
cmp
mov
nop
add
dec
out
jmp
iret
cmp
scas
push
lea
mov
mov
mov
jnp
pusha
mov
mov
loope
add
pushf
das
or
mov
clc
add
sub
rolb
mov
dec
cmp
pop
sbb
ja
xchg
inc
jmp
shlb
mov
cmp
jp
sbb
aad
les
into
push
rcl
or
inc
out
cld
xchg
mov
stos
pop
stc
cmp
vmwrite
jae
adc
pusha
out
jne
jecxz
jns
mov
jne
aam
loope
mov
mov
idivl
adcb
mov
repz
sbbl
mov
xor
xchg
cmp
inc
movsb
mov
jae
sahf
add
xchg
stc
enter
mov
inc
dec
xor
jle
cmp
jbe
adc
iret
jbe
sbb
or
ja
add
push
lcall
jbe
push
mov
fs
sub
stos
pop
aam
mov
jno
fucomip
add
scas
push
mov
mov
icebp
jg
cmp
mov
bound
mov
repnz
stc
sub
mov
mov
cld
or
mov
test
stos
test
xchg
sbb
lock
cmp
push
push
into
mov
ror
xor
mov
adc
cmp
data16
inc
mov
or
imul
xor
fisttps
or
mov
repz
sbb
insl
or
xchg
sub
push
push
pop
dec
xor
sti
pop
push
and
pop
mov
xor
mov
hlt
xchg
nop
xchg
jle
inc
aaa
lcall
xchg
andl
cmc
and
bound
movsl
and
add
in
mov
data16
jnp
mov
pop
inc
mov
or
pop
xchg
mov
sbb
mov
inc
xchg
xchg
fucomp
or
mov
cld
pop
xchg
push
mov
aas
shr
mov
pop
lock
rdmsr
mov
mov
mov
shlb
test
add
stc
sub
mov
xchg
sahf
repnz
stc
aam
xchg
out
adcl
icebp
sbbb
aam
mov
mov
mov
loopne
cmpsb
dec
adc
sahf
push
mov
cmp
sbb
lock
add
cmpsb
jp
nop
pop
sub
sbb
mov
arpl
pusha
push
test
mov
xor
insl
cmp
adc
jle
je
adc
fisttpl
adcl
fcoms
idivb
outsl
dec
push
enter
in
jmp
fcmovne
adc
pop
mov
sbb
push
pop
cmp
pop
icebp
add
or
imul
movsb
sbb
jo
push
cli
mov
fsts
adc
pop
push
xor
lock
sbb
cmp
cmp
clc
mov
mov
lcall
sub
add
sub
sbb
inc
adc
jp
mov
mov
sahf
push
addr16
adc
inc
dec
xchg
ret
hlt
jl
push
xor
es
adc
cli
adc
xchg
pop
pusha
mov
inc
and
mov
push
ss
adc
mov
and
push
test
xorb
push
and
adc
xor
bound
xchg
or
insl
ja
mov
out
mov
ja
and
xor
mov
jo
sti
cld
xor
mov
fiadds
out
adc
jns
mov
shl
push
cwtl
mov
and
aam
jo
movsl
cmp
in
push
mov
sbb
mov
insl
push
lods
pop
or
jno
sbb
and
push
aam
push
fstpt
int3
icebp
xchg
std
add
add
jae
loop
cld
pop
pop
and
xor
sbb
int
into
sarb
mov
jle
add
adc
aas
xchg
or
pop
inc
xor
xor
shrl
xor
xchg
and
and
jo
popa
insl
icebp
and
in
xchg
adc
dec
mov
in
divb
test
xlat
clc
ljmp
ja
hlt
add
repnz
clc
jb
mov
xor
icebp
pop
push
add
jno
lock
fdiv
stc
popfw
hlt
jae
mov
adc
inc
adc
jae
arpl
imull
push
enter
insl
dec
scas
sub
loop
cmpsl
mov
lahf
jo
and
sarl
sub
shl
in
sub
cmc
pop
sub
and
pop
inc
fwait
add
jno
or
pop
and
push
cmp
cmp
sbb
jb
jns
sahf
pop
xchg
sub
or
data16
notb
adc
adc
add
cmpsb
sbb
xor
into
stos
sbbl
or
jb
repnz
push
adcb
mov
adc
sub
sub
div
adc
sti
loope
loop
jo
mov
nop
add
lods
dec
and
in
push
or
mov
hlt
mov
jb
mov
aas
clc
out
mov
push
lcall
mov
icebp
andnps
test
cmpsl
inc
mov
incl
or
inc
addr16
jmp
fists
mov
push
pop
push
jno
faddl
dec
adc
pop
push
mov
js
mov
out
cmc
rorl
add
push
call
lcall
arpl
out
xor
cmp
sbb
fldl
cmp
sbb
sbb
push
add
loop
cld
push
jne
call
nop
divl
inc
ljmp
mov
sbb
cmp
pop
cli
movsb
mov
xor
push
js
out
lcall
in
inc
adc
xchg
leave
jg
shl
mov
push
fucomip
outsb
mov
insl
fcompl
adc
mov
test
jle
pop
dec
mov
int
call
push
push
mov
sub
dec
aam
xor
sub
es
stc
cmc
inc
push
or
pop
lods
mov
out
add
push
push
pop
mov
xchg
and
jo
dec
lds
xchg
cld
fiadds
pop
ss
lds
and
loop
aam
xor
sbb
xchg
or
out
loopne
sub
add
xchg
sbb
add
add
jmp
jb
sub
push
rcl
adc
outsl
adc
daa
jno
aad
mov
dec
imul
push
insb
in
and
jp
loop
loop
mov
cli
clc
sub
rorb
push
jae
jg
push
icebp
std
jns
sub
push
insl
mov
xor
and
adcb
jbe
push
adcb
jecxz
mov
and
lock
add
test
mov
xchg
cli
out
dec
mov
sbb
dec
inc
hlt
jp
dec
fildll
push
sub
xchg
jg
xor
pop
pusha
fists
std
js
push
mov
sub
push
push
scas
pop
xor
and
std
mov
cld
orb
out
add
jnp
aad
paddsw
lret
mov
lods
mov
pop
adc
roll
jle
mov
push
or
mov
adc
outsl
xchg
ja
cmp
sbb
lock
fldt
sbb
jnp
adc
rclb
data16
dec
inc
test
mov
jnp
test
inc
mov
dec
jns
mov
push
cmp
scas
mov
js
loope
or
enter
das
cmpsb
xor
push
stos
je
cmp
push
push
stc
cld
push
das
add
and
cmp
je
sbb
sbb
mov
ljmp
hlt
and
lcall
push
dec
push
cmp
nop
je
pop
cmp
mov
adc
data16
jbe
xchg
add
pop
cmp
adc
mov
inc
test
scas
mov
cld
dec
pop
xor
mov
les
jge
or
out
enter
icebp
xchg
dec
sub
div
jle
cld
cmpsl
iret
adc
fistpl
or
cwtl
ret
inc
and
call
daa
daa
xor
pop
inc
jecxz
bound
sahf
aam
das
rcrl
cmp
ljmp
outsb
cmp
aaa
mov
push
rcll
imul
test
cmp
push
ja
and
scas
mov
mov
adc
and
push
mov
outsl
xchg
ljmp
mov
push
xor
in
xchg
push
fstps
cltd
icebp
xor
xchg
mov
fimuls
add
pop
dec
jne
mov
push
pop
mov
xchg
mov
or
mov
add
mov
push
js
insl
pop
imul
adc
xchg
insl
cwtl
and
add
push
cmpsl
stos
mov
imul
sub
xchg
sbb
out
stc
pop
sub
sbb
pop
in
test
movsb
xor
scas
das
xor
adc
imul
jl
sbb
jle
and
call
sub
inc
sub
mov
adc
bnd
mov
xor
add
mov
mov
stos
adc
xchg
push
hlt
add
stos
lock
push
ficompl
mov
and
repnz
push
cmp
out
std
pop
push
push
popa
jmp
xchg
cmp
jb
jecxz
cs
mov
std
pop
xchg
cmp
jl
jae
daa
jo
pusha
dec
icebp
inc
dec
xor
sub
in
aad
bound
popa
mov
adc
xchg
scas
mov
mov
lahf
sbb
mov
mov
push
int
xchg
lods
aaa
add
xchg
sahf
push
dec
adc
lock
adc
push
and
je
ret
xor
fwait
stos
nop
clc
pop
mov
punpckhwd
mov
or
cltd
cmp
iret
mov
jno
pop
cmp
outsb
or
sahf
cmp
adc
mov
hlt
mov
mov
outsl
sti
cmp
out
mov
adc
lret
inc
mov
aam
cmp
adc
and
and
push
ljmp
movsl
jnp
cmp
add
cli
inc
or
jns
test
push
cwtl
push
daa
lret
add
sbb
cmp
push
lahf
mov
xor
pop
mov
lds
and
jle
leave
das
mov
in
cwtl
or
sbb
inc
in
push
hlt
push
hlt
ja
mov
orl
add
rcrl
ficoml
cmp
cltd
sub
lock
gs
jae
pop
std
cmp
repnz
push
stos
push
push
xchg
dec
imul
clc
mov
dec
jp
xchg
xor
outsl
out
or
inc
sti
rcrb
lods
jb
test
clc
ljmp
out
fistps
push
fstps
test
cltd
pop
dec
fidivrl
lcall
dec
arpl
testb
leave
test
rcl
call
insl
jb
push
mov
imul
roll
cmp
je
mov
stos
push
xchg
das
mov
cmc
sarb
inc
xor
jne
cmpsb
fwait
jns
shr
out
ret
xchg
xchg
xor
cltd
jo
out
push
add
lcall
cmp
mov
cmpsl
flds
cld
inc
out
aam
sar
jg
sub
xor
sahf
mul
fwait
xor
sub
std
sub
or
add
xor
sub
push
xorb
push
lock
jne,pn
inc
out
nop
or
jne
cltd
inc
push
clc
xorb
les
sbb
and
adc
das
movsl
lcall
inc
sbb
rcll
cmp
or
and
adc
icebp
sbb
in
push
add
out
leave
cmp
repz
das
popa
jno
int3
lcall
push
fldcw
sbb
cmp
outsb
std
xchg
pop
fsub
and
xor
mov
je
enter
lret
popa
dec
les
fisubs
sbb
subl
jp
mov
lods
outsb
mov
test
jecxz
repnz
push
daa
mov
inc
lcall
adc
jo
sahf
cmp
jle
sbb
push
in
sbb
movsl
into
das
loop
mov
mov
lock
inc
pop
test
cmp
cmp
in
or
fs
inc
stos
scas
das
push
mov
inc
aaa
fimull
bound
mov
jb
xchg
lcall
xor
xchg
xor
xchg
xchg
cmpb
ret
mov
push
add
and
mov
dec
fcmovne
add
or
dec
cmp
jmp
cmpsb
adc
sub
xor
mov
cli
out
adc
and
out
imul
scas
jmp
jl
je
fwait
xor
push
shll
mov
pusha
jno
shr
lock
add
aaa
sub
adc
pusha
fcomip
in
lcall
outsb
in
adc
sbb
sbb
faddl
jl
gs
xchg
fidivrl
addr16
mov
xor
or
dec
ds
jno
outsl
ja
addr16
sub
inc
pop
mov
cmpsl
outsl
mov
leave
jnp
lret
or
mov
std
mov
pusha
xchg
mov
pop
pop
and
ljmp
icebp
or
lret
pop
sbb
rsqrtps
and
fstl
std
stc
adc
mov
lss
leave
mov
out
sbb
push
sub
add
mov
mov
push
adc
sbb
ds
and
jne
int3
scas
jnp
cmp
and
mov
mov
js
adc
aaa
add
jle
add
and
hlt
fcoms
mov
adc
mov
lods
iret
mov
xor
add
and
mov
cmp
lret
pop
dec
test
push
push
dec
outsl
clc
mov
nop
jg
das
xor
jns
jle
xor
hlt
pop
mov
shlb
cmp
lock
dec
hlt
cmc
mov
push
hlt
popa
clc
repnz
mov
and
mov
cmp
cmp
stos
sub
lds
push
jp
adc
add
and
xchg
xchg
fs
xlat
mov
xchg
jle
jp
mov
lock
fisttps
xchg
xor
repnz
nop
mov
xchg
adc
push
and
or
sub
sbb
dec
das
push
ljmp
pop
aas
cltd
mov
lods
mov
xor
test
clc
sahf
fisubrs
hlt
push
jp
in
sbb
cmp
sahf
mov
mov
fnstcw
inc
imul
mov
mov
xor
add
pusha
xchg
popa
push
mov
or
pop
dec
jge
fsubrs
or
cmp
push
in
lock
repz
and
out
es
inc
test
nop
rcrb
adcl
cmp
insl
push
inc
scas
test
cmp
rcll
stos
inc
addr16
out
cmp
nop
pop
imul
gs
lods
fcmove
data16
jp
stos
push
out
lock
sbb
inc
in
inc
or
adc
xchg
imul
ficompl
movl
sbb
sbb
shl
out
lcall
jmp
fiaddl
jle
or
daa
mov
cmp
in
mov
gs
out
sbbb
mov
movsb
xor
rorl
pusha
sub
js
aam
inc
jne
jmp
push
push
sub
adc
in
pusha
push
sahf
mov
pop
mov
orb
pop
jo
out
popa
es
adc
jbe
mov
add
fwait
int
das
lds
les
dec
push
bound
int
out
lea
jmp
xchg
das
in
inc
aaa
loopne
adc
push
jo
fidivl
in
aas
inc
inc
lods
adc
repz
jge
ja
insl
cwtl
outsl
aaa
dec
xchg
in
xor
mov
and
mov
sbb
loope
cmpsl
sbb
and
outsb
adc
xchg
cmpsl
add
imul
push
test
test
arpl
aam
aam
inc
daa
xlat
adc
and
fidivl
stc
xor
mov
dec
inc
dec
in
jae
sbb
cmp
fstpt
addb
inc
sbb
scas
sbb
xchg
mov
repnz
xchg
cmc
lock
testl
pop
jp
cmp
subl
push
clc
hlt
dec
pop
add
jb
pop
push
push
dec
into
mov
mov
jge
cmp
lods
clc
daa
mov
in
sub
jne
and
jo
call
repz
lock
mov
xchg
pop
push
lds
push
cmp
pop
xchg
shl
das
sarl
jns
add
std
in
jl
hlt
aas
sarb
add
jg
aam
push
aad
aam
mov
fcomi
adcl
mov
jnp
pop
add
lds
and
jle
ljmp
inc
fidivrs
jno
xor
adc
mov
dec
sbb
mov
imul
div
jb
mov
loope
notb
lea
arpl
das
push
fistps
mov
pop
shll
cmpsb
test
xor
icebp
cwtl
jp
inc
inc
lock
inc
pop
lock
inc
adc
das
inc
jno
popl
clc
jg
js
cli
inc
sbb
mov
or
mov
xor
or
mov
ljmp
lods
aam
cltd
cmp
dec
dec
dec
lds
subl
movsb
int
xchg
mov
in
mov
insl
das
out
not
cmp
std
movsb
jno
cltd
dec
jns
pop
mov
xchg
add
in
cmp
fldt
popf
jno
dec
xorb
aas
neg
or
mul
jg
pop
pop
pop
test
push
pop
cld
push
pop
jle
lret
xchg
jae
xchg
sbb
add
std
mov
xorb
stos
xor
icebp
jle
fldenv
shll
into
cmp
icebp
sbb
hlt
mov
xlat
inc
aam
leave
mov
mov
into
pop
mov
clc
adc
add
clc
mov
mov
decb
jno
adc
addb
mov
cwtl
sti
addr16
push
shll
in
jg
adc
mov
rclb
sub
mov
std
mov
lret
fistpl
std
sub
inc
mov
lahf
sbb
sbb
sub
push
scas
pop
xor
cltd
sahf
and
popa
xor
or
xor
sahf
or
pop
mov
push
inc
sbb
orb
fucomp
jb
sahf
test
add
lcall
cmp
pop
in
mov
push
or
jnp
and
sahf
jo
repnz
rorb
call
push
ds
dec
and
or
cmp
je
fs
nop
add
jbe
rorl
testb
xchg
scas
inc
mov
sub
rcrl
rclb
jno
test
sbb
daa
dec
mov
jle
insl
mov
jae
std
adc
xor
mov
mov
mov
xchg
mov
sbb
inc
sbb
rorb
jl
fidivl
out
mov
fcmovnb
cmp
mov
into
pop
xchg
cld
xchg
fistpl
roll
fdivs
sbbl
daa
xor
or
push
cld
mov
pop
jbe
push
ja
mov
sahf
mov
add
movsb
sbbb
mov
push
push
mov
jo
cltd
push
push
mov
inc
enter
lcall
xchg
cli
jbe
or
ret
jo
int3
dec
mov
jle
js
fimuls
and
sahf
ds
mov
sub
dec
jnp
push
push
lods
sbb
jl
sahf
jns
sahf
jle
pop
jnp
mov
xor
repz
lret
inc
outsb
inc
push
sbb
pop
repz
test
cmc
aam
mov
mov
dec
jbe
xor
cmp
sahf
aad
xchg
push
aam
add
jno
mov
xchg
push
cld
jno
sbb
inc
dec
jns
pop
jl
mov
cmp
jno
je
pusha
aam
or
clc
jnp
sbb
adc
sbb
sahf
scas
xor
xor
mov
and
cmpsb
push
mov
and
push
pop
js
mov
mov
add
sahf
push
out
sub
imull
jns
into
inc
rcll
mov
dec
cmp
adcl
or
xor
xor
insb
mov
add
sbb
pusha
aam
or
repz
insl
push
shl
xchg
scas
nop
xchg
sub
jecxz
test
jns
jge
adc
cwtl
je
shr
or
add
jecxz
subb
popa
cmp
mov
adcb
xor
cmp
lahf
les
jmp
mov
sub
sub
jne
jecxz
jno
fnsetpm(287
pop
xchg
inc
fs
into
das
xchg
call
jp
sbb
adc
jbe
pop
pop
push
add
rorl
sbb
add
xor
je
mov
enter
scas
cs
shll
mov
adc
xchg
outsl
lret
inc
shlb
dec
jb
mov
inc
cmp
das
popa
mov
push
cmpsb
push
inc
mov
inc
sbb
dec
push
or
std
in
adc
add
repz
mov
add
icebp
test
icebp
mov
cmp
mov
iret
sub
adc
aaa
cmp
xchg
movb
xor
mov
fsts
fstpt
fsubs
xchg
mov
push
cmp
jbe
push
xor
fcomps
clc
pop
xlat
aas
shl
jae
js
add
push
stos
mov
aam
cmc
mov
xor
lods
adc
test
xor
cmp
adc
clc
pop
fxam
ret
ret
repnz
sahf
outsb
out
inc
adcb
and
lret
cmp
push
push
insl
rol
jnp
mov
mov
or
adc
clc
mov
jbe
fdiv
xor
push
adc
stc
jo
pop
mov
adc
pop
adc
adc
cmp
cmpsb
fcoml
push
jecxz
and
jns
adc
cmpsb
and
push
leave
fs
mov
inc
adc
and
jle
inc
xor
lock
fisubrs
ret
jno
pushf
lock
and
push
add
insl
pop
js
add
cmp
push
push
and
cli
jno
fs
xor
xchg
mov
jo
sets
and
xor
mov
decb
jb
inc
inc
mov
inc
push
sbb
cwtl
add
je
xchg
or
aaa
inc
sahf
pop
repz
cmp
adc
rcl
stc
sub
jbe
inc
fsubr
sub
into
aad
jle
and
jp
push
mov
icebp
sbbb
or
pop
fwait
ret
test
dec
les
cwtl
rcrl
xchg
push
into
insl
das
mov
outsb
lahf
mov
sub
jno
xchg
in
or
fldl
sbb
mov
imul
add
sahf
and
adc
jbe
cltd
and
sbb
lods
push
fisttps
xlat
cld
push
data16
mov
inc
scas
in
insl
push
jbe
dec
and
sbb
pop
xchg
add
test
sbb
mov
in
inc
adc
aam
jl
push
and
pushf
adc
dec
xchg
lods
adc
mov
mov
sub
xor
icebp
call
jo
subb
out
insb
cmp
cltd
lret
pop
in
fs
xor
out
cs
leave
pop
addr16
jle
js
add
cmp
insl
cmp
call
sub
or
lahf
sbb
repz
push
pop
xchg
hlt
in
repz
loopne
lock
mov
jmp
jp
or
dec
adc
aas
lea
xchg
bound
aam
dec
or
js
add
and
cmc
or
test
push
push
cmp
out
inc
gs
jg
lods
ja
test
test
test
std
sub
sahf
xor
icebp
sarl
rorl
int
cmp
std
dec
shll
bswap
push
fs
xchg
insl
adc
je
push
scas
ds
cmp
sub
add
iret
xchg
jg
dec
pop
push
push
add
pushf
divl
icebp
add
push
jmp
lock
or
xlat
jno
xchg
and
push
push
ljmp
xchg
jb
cmpsb
leave
adc
call
jns
into
mov
push
orb
or
sbb
or
xorb
push
stc
xchg
xor
jno
lea
mov
jp
add
fiadds
jnp
pushf
icebp
je
je
cld
adc
inc
jle
in
or
fs
push
scas
lods
mov
lcall
div
fidivrs
xor
shll
sti
lcall
popf
jnp
adc
aad
lahf
push
pop
out
xor
or
dec
int
nop
pop
inc
sbb
popa
jp
inc
ja
lsl
and
pop
sbb
adc
xchg
iret
dec
test
or
ljmp
call
into
cmpb
xor
jg
mov
stos
jae
sti
xchg
push
fdivr
fidivrl
lret
cmc
and
dec
or
mov
and
js
and
or
shlb
sti
dec
das
lods
std
inc
xchg
scas
push
imul
or
xchg
int
mov
ret
test
xlat
dec
jno
stos
shll
scas
mov
cmp
inc
bound
xor
push
and
jo
test
jno
lret
addb
cmp
mov
imul
inc
mov
mov
jno
push
icebp
pop
loopne
adc
jecxz
mov
pop
jbe
in
stc
loope
inc
push
shll
lahf
adc
mov
push
push
out
imul
into
jnp
bnd
mov
decb
cmpsb
lock
sbb
mov
in
bound
shll
push
add
enter
cld
std
popf
push
aam
inc
add
hlt
push
cmpsl
outsl
push
pop
faddl
push
mov
add
mov
ss
jo
jb
rorb
mov
jnp
dec
aas
cmc
add
adc
or
mov
in
sbb
enter
sbb
pop
jno
mov
cltd
lea
outsl
xchg
in
repz
mov
cmp
cmpsl
jl
cmpsb
and
sbb
cmp
adc
pusha
fdivrs
add
xchg
add
sub
sub
sti
xchg
aaa
pop
fnstcw
mov
fcmovu
jns
pop
pop
loopne
cmp
xchg
jbe
jae
xor
bnd
pop
aad
jno
adc
sbb
jmp
mov
xchg
jecxz
xor
adc
shlb
sub
push
or
push
fwait
int
or
ret
mov
rorb
pop
push
stc
sub
cld
add
mov
dec
cmp
test
popa
xchg
pop
or
aaa
and
push
cmp
xor
xchg
lcall
mov
mov
in
xor
cmp
fs
lock
aad
dec
dec
jb
mov
add
dec
or
in
cmp
cli
stc
pop
or
pop
jno
sub
into
stc
std
loopne
and
shll
lock
fyl2xp1
or
inc
icebp
pop
testl
fs
icebp
repnz
inc
and
sbb
cmc
in
filds
jle
xor
rcll
fs
cld
jno
push
or
icebp
pop
sbb
or
cltd
sub
pop
aam
outsb
cld
push
aam
loope
repnz
jecxz
ljmp
adc
les
popa
mov
cltd
jg
mov
add
adcb
cmpb
cmc
addb
xor
orl
icebp
xchg
adc
mov
pop
shlb
xor
test
push
add
dec
push
add
adc
lahf
mov
or
adcb
adc
add
icebp
or
in
repz
add
mov
xor
dec
xor
mull
nop
out
mov
jg
clc
or
pop
jl
addr16
mov
mov
das
mov
int3
and
jge
xchg
push
leave
mov
inc
mov
adc
mov
test
xlat
leave
leave
ds
push
cmpsb
pop
fdivrs
aam
lock
jecxz
adc
js
mov
cwtl
jno
in
xor
iret
out
lahf
jb
adc
jo
hlt
mov
xor
sbb
pop
repnz
scas
adc
in
aad
pop
inc
mov
mov
jbe
repz
mov
hlt
inc
bound
test
inc
inc
push
and
sbb
mov
rorb
dec
add
cmc
mov
xlat
into
orb
sub
lret
sti
adcl
rcrl
push
stos
lods
add
fs
das
add
mov
sahf
xor
aam
stos
in
loopne
jno
lock
add
negb
xor
or
movsb
dec
mov
cmpb
lock
mov
cmp
shlb
rcl
push
ret
pop
or
bound
or
jns
scas
sbb
adc
push
out
push
insl
maskmovq
idivl
sahf
mov
mov
jp
mov
pop
inc
cmp
shl
mov
cli
pop
hlt
adcb
or
push
cltd
stos
jg
adc
push
jo
bound
int3
adc
add
mul
in
push
lock
jmp
movsb
fstl
les
adc
jl
out
sbb
dec
js
cvtpi2ps
outsl
xor
hlt
mov
cmp
jne
lahf
xor
inc
pop
xor
add
cmp
lea
fnstsw
pop
mulb
cs
add
sbb
push
sub
mov
addb
push
xor
jle
lea
jmp
aad
bound
xchg
mov
push
and
movl
xor
addr16
in
lock
aam
comiss
xchg
or
inc
aam
xchg
push
popa
push
test
fistl
jo
xor
dec
jno
fnstenv
fimuls
stos
dec
movsb
js
xchg
repz
pop
dec
xor
add
inc
fs
or
rolb
adc
roll
lods
jne
mov
push
mov
pop
nop
add
mov
xor
js
inc
lods
mov
sbb
iret
clc
jmp
mov
mov
jbe
dec
sbb
sub
inc
sbb
pop
por
xor
rorl
push
jb
lcall
jo
push
add
jbe
sahf
jb
outsb
cs
jle
out
mov
xchg
mov
lock
js
stos
add
lret
pop
das
iret
adc
mov
cmpsl
vhaddpd
popa
sti
stos
in
fidivl
mov
das
add
xor
mov
dec
mov
sub
iret
jno
mov
xor
repz
sub
aam
xchg
pop
dec
push
push
push
icebp
aam
pop
jmp
pop
test
push
lahf
mov
xchg
stc
jno
push
pop
adc
mov
jo
or
xchg
sub
fcmovbe
mov
lcall
popl
jbe
mov
jno
pusha
shll
in
sub
nop
mov
repnz
cmp
icebp
cmc
loopne
adc
std
fisubs
jo
jmp
pop
jb
ljmp
or
fbstp
xchg
jl
xor
inc
clc
js
jno
insb
sub
pushf
xchg
jae
clc
adc
repnz
pop
sub
sarb
pushf
xchg
xchg
notl
adc
pusha
or
jl
roll
sbb
stc
push
jp
and
test
lret
or
sbb
repz
push
push
lea
xor
xchg
jo
mov
stc
mov
cmp
adc
push
sub
jle
jl
pop
xchg
push
adc
mov
xor
or
hlt
add
inc
nop
and
lcall
inc
sbb
gs
mov
sub
mov
dec
js
or
sub
rorl
cld
jno
pop
pop
xor
push
mov
call
pop
mov
adc
xor
mov
leave
sbb
dec
cld
dec
push
cli
je
adc
fdivr
dec
or
stos
push
loopne
leave
imul
jo
mull
inc
movsb
sub
cmp
add
fisubrl
jecxz
jns
js
sub
pop
cwtl
jecxz
jp
xor
xor
mov
add
stc
xchg
jbe
inc
mov
or
fwait
out
pop
push
addb
push
ss
filds
mov
add
mov
in
mov
or
into
xor
sub
fdivl
mov
push
mov
jbe
dec
xor
test
cmpsl
into
xor
sahf
or
das
add
pop
cmpsl
sbb
jecxz
rcrl
mov
adc
inc
sbb
mov
dec
inc
shr
and
cmp
jnp
adc
out
jbe
lds
xor
xchg
push
xor
xchg
add
aad
jp
xchg
hlt
sbbl
clc
mov
or
or
fdivrs
ss
lock
lods
dec
mov
hlt
hlt
aaa
cwtl
adc
push
adc
inc
xor
dec
ja
lock
pop
dec
ds
xchg
push
adc
push
mov
pop
cld
push
push
nop
lret
fsubs
movsb
jo
or
xchg
mov
sbb
cmp
ss
ljmp
fadd
adc
and
jns
fcoms
mov
stos
cli
out
lods
add
iret
sbb
mov
sbb
xchg
jp
jge
or
xor
lret
mov
push
mov
cmp
loop
xchg
mov
daa
xor
bnd
mov
std
pop
sbb
adc
mov
add
repnz
clc
lock
pop
pop
adc
hlt
arpl
mov
shlb
in
push
or
and
out
adc
aad
sbb
je
es
cmp
daa
jo
dec
push
icebp
mov
jae
aas
adc
icebp
sbb
fdivl
push
sbb
jno
imul
xor
mov
jmp
jo
add
or
mov
scas
notl
push
dec
and
jns
cwtl
sub
call
adc
data16
push
sahf
jl
test
xchg
mov
adc
mov
or
mov
fwait
fwait
xlat
xchg
mov
adc
repnz
cmp
dec
mov
push
repz
jbe
adcl
and
lret
jp
test
in
inc
xchg
inc
mov
fcomi
jmp
aam
pop
cmp
adc
testl
mov
adcb
mov
lds
jl
and
xchg
cmp
push
add
dec
icebp
adc
std
les
shrb
pop
push
adc
inc
push
out
cmp
add
push
movsl
xor
dec
test
fnstsw
fs
bound
sarl
lock
adc
xchg
stc
dec
adc
xchg
outsb
xlat
add
add
mov
add
xchg
xchg
shlb
adc
and
fsts
push
xchg
xor
das
in
cmc
ja
push
pop
sahf
cmc
jnp
mov
dec
adc
jb
repnz
leave
dec
scas
pop
cmc
jmp
push
pop
test
notb
push
sahf
cmp
mov
loopne
or
push
xor
ja
sarb
jae
fsts
lock
pop
rcl
and
dec
pusha
xchg
sub
dec
pusha
subl
stos
jle
cmp
xor
adc
xor
test
fisttpl
aam
ss
aam
sbb
inc
mov
mov
jbe
push
jp
iret
push
adc
sbbl
xchg
add
movb
xchg
lcall
sahf
push
stos
in
xchg
icebp
xchg
add
mov
push
imul
lret
test
inc
push
sahf
mov
mov
push
xor
test
pmaxub
dec
sub
mov
fdivs
clc
xor
push
add
or
pop
insl
xchg
mov
jp
mov
or
inc
pop
dec
lea
jo
sub
inc
aaa
inc
scas
lods
mov
stc
outsb
aad
nop
icebp
xchg
ss
cmp
or
mov
mov
sub
push
imul
xchg
cmp
jb
mov
inc
xorb
stc
outsl
scas
out
int3
jle
lea
sahf
je
fwait
movl
test
enter
push
cmp
scas
pop
add
stc
fistl
xor
pop
out
jecxz
std
call
cmc
xor
popl
fsub
js
xchg
cmpsl
dec
sub
int3
add
jge
ljmp
jle
xchg
idivb
push
dec
cltd
xor
mul
adc
fcoms
lcall
pusha
jg
nop
fcomps
push
cmc
add
jle
jb
xchg
mov
or
xor
sbb
xchg
jb
or
out
sarl
into
loopne
mov
dec
push
mov
mov
sub
or
out
cmp
jle
xor
outsl
xor
xchg
mov
lret
xor
lea
mov
jno
add
pusha
fbstp
or
mov
test
xor
xor
shr
ret
and
or
xor
cltd
jl
sbb
lock
testl
jp
xchg
dec
sbbl
and
shlb
repnz
push
insl
shl
icebp
out
test
enter
or
push
and
xor
adc
xor
cld
push
test
je
mov
dec
push
aas
mov
mov
dec
push
lahf
xlat
clc
mov
jecxz
xchg
cmp
and
adc
jb
pop
in
out
jae
loop
mov
or
jl
cmp
ja
lea
fldz
xchg
pusha
sub
sahf
adc
dec
rcll
adc
pushf
xor
add
jb
call
cmpl
neg
xchg
jns
xchg
push
adcb
dec
and
xchg
mov
xor
repnz
mov
mov
sub
ja
add
sub
sbb
enter
pop
push
mov
cmc
aas
adc
rcr
sbb
icebp
icebp
fs
idivl
ret
repnz
enter
mov
loopne
fwait
xor
sti
lret
dec
jle
fcmovnu
dec
lock
xchg
hlt
aas
jecxz
xor
push
jle
stc
xor
icebp
dec
mov
inc
pop
or
ja
sbb
xchg
sbb
push
rorl
mov
xchg
cli
cmc
pop
cmp
sbb
cmp
bound
nop
out
mov
inc
pop
push
jne
adc
xor
sahf
jmp
rolb
push
out
add
and
mov
out
mov
loopne
adc
aad
movsl
jmp
sbb
mov
cmpsb
inc
fcmovne
insl
jl
mov
std
shl
scas
inc
in
insl
out
repz
addr16
int3
sbb
sub
xor
mov
mov
cltd
jbe
push
ss
or
lock
or
enter
andl
or
fistpll
out
adc
add
sub
sti
hlt
mov
lea
pop
in
stc
out
dec
dec
rorb
or
lea
push
xor
shlb
lret
in
pushf
daa
xchg
cmp
xchg
fstps
pop
or
and
dec
and
fistl
les
dec
lcall
scas
pop
cs
jne
sbbb
or
xchg
mov
mov
push
jno
jle
call
push
mov
imul
adc
scas
cmp
cltd
add
lcall
pop
daa
in
ret
sbb
mov
cmpb
push
int3
dec
push
cs
vmread
push
aam
cltd
sub
lock
mov
mov
and
icebp
cmp
negl
push
adc
inc
stos
stc
sarb
mov
lahf
out
shl
mul
add
jo
mov
mov
mov
push
mov
icebp
xor
into
loope
jo
pop
xor
fsubrl
sbb
jmp
inc
cwtl
jo
xchg
adc
mov
inc
xor
mov
jb
add
jo
repz
cmpsl
jbe
insb
push
xor
popf
adc
mov
push
inc
add
repz
mov
jo
push
imul
sarb
cld
scas
dec
shll
mov
inc
jecxz
int3
jge
aas
sbb
dec
sbb
fbld
sub
jmp
arpl
adc
pop
movsb
fiadds
or
orl
out
cmp
cmp
push
lds
xor
adc
xchg
out
movsb
sbb
pop
aad
ja
fwait
cld
ret
xchg
rclb
xor
nop
rcl
rcll
push
sbb
insl
clts
clc
shlb
fbld
stos
mov
add
inc
inc
inc
jne
mov
les
push
stc
lods
adc
adc
mov
dec
sti
sarl
lcall
cmpsl
jp
mov
cmp
mov
je
jbe
sbb
xchg
mov
notb
mov
rol
jge
sahf
mov
pop
not
out
and
shll
fisubrl
sbb
jno
cwtl
mov
mov
into
mov
enter
fwait
push
aad
loop
cmc
or
and
out
cmp
dec
dec
les
mov
pop
mov
test
mov
add
add
mov
push
fsub
adc
sbb
pusha
xor
adc
repnz
mov
inc
iret
popf
icebp
push
test
pop
mov
fwait
dec
test
inc
xor
or
aas
hlt
mov
and
data16
inc
inc
xor
fwait
pop
scas
sti
iret
insl
xor
repz
xchg
mov
pop
test
loope
movl
cld
add
loop
hlt
jmp
and
icebp
loope
jnp
icebp
mov
ret
icebp
dec
mov
mov
subl
mul
stc
xchg
aaa
mov
pop
jle
outsb
dec
push
xchg
repz
je
icebp
fdiv
jecxz
loop
inc
adcb
mov
dec
add
push
xchg
mov
push
lret
mov
scas
push
leave
aad
push
jns
mov
out
dec
adc
push
adc
rcl
nop
arpl
add
jno,pn
mov
adc
push
xchg
mov
in
lea
xchg
jbe
xlat
and
pop
int
rcrl
inc
pop
std
mov
push
pop
clc
jle
and
xor
cmp
pminsw
lret
sahf
cmp
cmp
inc
sub
fs
pop
pushf
xchg
insb
lret
and
sub
adc
vmread
and
in
lock
mov
scas
movsb
jecxz
add
xchg
xchg
cmp
pop
jb
cs
clc
mov
mov
mov
xor
sub
adc
mov
aas
sbb
add
jne
cwtl
hlt
mov
sbb
or
xor
push
mov
pop
mov
test
add
scas
aaa
or
repnz
inc
shlb
xchg
repnz
iret
ret
scas
or
pop
mov
xor
xchg
mov
xchg
jg
adc
loop
imul
dec
xor
nop
add
cmp
outsb
dec
cmpb
mov
aad
dec
js
dec
outsl
dec
fwait
mov
cmp
jns
aam
imul
je
lahf
xchg
adc
push
iret
mov
ret
xchg
mov
je
sbb
or
jecxz
das
adc
inc
xor
daa
mov
adc
add
xor
adc
xchg
push
ficomps
std
imul
jle
mov
pop
xor
xor
loop
dec
bound
adc
pop
cmp
push
movsl
pop
jo
push
orb
test
mov
mov
dec
test
outsb
xor
aad
clc
inc
cmc
mov
mov
out
mov
dec
aaa
nop
jbe
pusha
adc
lock
scas
cmp
notb
push
push
inc
in
nop
add
xchg
inc
mov
cmp
inc
out
sub
or
pop
sub
mov
ja
xchg
mov
pusha
and
stc
popa
xchg
shl
icebp
lods
sub
dec
jl
xchg
add
inc
int
es
adc
movsb
out
std
lea
jns
dec
xchg
adc
dec
sub
imul
xchg
loopne
cld
push
xchg
xchg
adc
fildll
jbe
aam
hlt
or
xchg
icebp
mov
loopne
inc
xchg
add
enter
out
cmpb
dec
cmp
ja
xchg
pusha
adcb
nop
jb
repnz
jne
mov
rcrb
sbb
popa
sub
ja
mov
or
js
sbb
adc
lea
adc
scas
sub
outsl
pop
jo
call
sub
add
mov
inc
xchg
push
sub
pop
adcb
mov
test
repnz
and
xor
repz
and
mov
iret
hlt
add
mov
pop
lea
ds
pop
jo
mov
push
out
xor
scas
sbb
ljmp
inc
sbb
or
hlt
mov
aam
pusha
clc
xchg
xchg
add
and
rcrl
inc
fstl
movsl
adc
je
inc
flds
jp
jb
jne
popa
add
push
or
mov
sahf
repnz
lock
jp
in
sub
cmp
aam
jge
cmp
bound
mov
sahf
mov
dec
mov
test
outsb
data16
adc
mov
push
mov
insl
jno
sub
pop
jle
sub
mov
pop
sti
test
jne
ret
mov
inc
mov
movsl
mov
jae
and
mov
outsb
lds
dec
ljmp
cmpsb
jb
cmpsl
sbb
aad
sub
and
js
mov
std
xchg
nop
mov
scas
xchg
push
cmpsl
mov
outsb
and
push
xorb
push
add
mov
jns
hlt
fwait
sbbl
jmp
adc
dec
add
test
pusha
pop
dec
shll
cs
shrb
mov
sbb
cmc
mov
push
jmp
out
sub
je
in
add
leave
sahf
jae
mov
jo
dec
push
dec
jg
movsl
push
call
cld
xorb
loop
js
out
das
pop
adc
add
pop
orb
or
xor
pop
adc
or
fldt
mov
push
and
movsb
push
mov
add
and
daa
shlb
stos
movsb
jle
ficomps
mov
add
cmp
clc
out
push
dec
sub
add
inc
ret
les
or
stos
or
mov
push
cmovo
sbb
jo
outsb
dec
mov
test
lock
fidivrl
dec
jo
popa
imul
aam
lock
jge
or
icebp
pop
push
lahf
jmp
add
xchg
sahf
adc
jno
mov
je
pop
loop
adc
push
loopnew
data16
test
pop
jno
and
or
jno
adc
push
jp
inc
js
lahf
xchg
enter
fwait
adc
into
inc
push
jo
enter
mov
push
and
repz
test
repnz
sbb
cwtl
rcrl
mov
xor
xchg
push
fwait
into
data16
call
cmp
shll
outsb
popf
and
inc
js
mov
xchg
or
cld
pop
jbe
icebp
fs
fldt
xor
jns
cs
fnstenv
pusha
jno
in
outsl
sub
xor
fs
test
outsl
mov
jle
mov
xor
std
mov
addl
inc
sbb
sarb
mov
movb
mov
mov
scas
sbb
jecxz
jne
push
xchg
mov
mov
jg
lock
xor
jmp
push
sbb
and
push
or
xchg
push
inc
cmc
addr16
xor
jle
pop
mov
icebp
cmp
call
stc
cmp
inc
inc
cmp
cmpsl
shl
push
add
sbbb
mov
dec
repnz
jne
icebp
fs
hlt
push
test
jnp
cmp
movsl
cmp
lock
int
add
add
sbb
test
mov
and
dec
or
adc
push
inc
stc
fistpl
xor
insl
mov
xchg
pop
mov
loop
rcrb
aad
xor
or
aam
mov
cmp
push
push
imull
into
inc
and
pusha
seto
xor
add
jb
and
jg
mov
adc
jge
cmp
mov
inc
cmpsb
jbe
dec
add
js
js
loope
adc
pop
adc
call
insl
adc
adc
insb
xchg
push
xor
jmp
iret
das
pop
jge
scas
inc
adc
lcall
jns
dec
push
jp
cmp
xor
fucomi
cwtl
addl
pop
push
imul
lock
add
adc
push
sub
sub
cmp
cmp
jo
ja
out
dec
add
rorb
push
enter
mov
push
or
rcll
das
sub
dec
pop
iret
mov
xchg
push
dec
inc
push
adc
das
fsubs
jno
and
jge
jo
andb
cmc
in
add
jns
lock
mov
or
cld
out
js
pusha
xchg
or
pop
hlt
bound
or
xor
mov
out
jbe
sbb
das
dec
dec
icebp
mov
testl
mov
or
cltd
mov
jno
pop
lds
lods
in
data16
clc
or
jno
mov
and
adc
adc
sub
stos
mov
jl
in
out
or
clc
cli
insb
mov
js
scas
dec
xchg
mov
test
add
inc
inc
lods
aas
mov
out
cmp
roll
into
movsb
mov
xchg
scas
dec
leave
cmpsb
das
rolb
adc
jle
ds
sub
lods
movsl
or
jb
ljmp
cmp
hlt
dec
xor
and
cld
andl
lret
mov
add
jl
fs
lret
push
push
xor
ds
mov
cs
enter
dec
stos
cs
rcrl
jg
negb
out
adc
dec
xor
jp
jmp
cmp
xor
mov
test
xchg
aaa
jle
jmp
pop
cmpl
mov
insl
mov
sbb
stos
mov
adc
mov
xchg
les
dec
in
imul
jnp
es
in
mov
push
js
jo
inc
lock
or
enter
aam
std
repnz
jne
negb
aad
cli
cli
cmp
mov
in
xchg
out
add
jl
cld
arpl
jb
shll
jp
push
hlt
xor
js
push
icebp
mov
or
cmpb
mov
push
push
movsb
fcmovne
or
and
jno
mov
jl
dec
icebp
push
mov
aad
aad
arpl
lock
jno
insl
push
je
mov
or
outsl
xchg
and
mov
cmpsl
and
cld
jmp
insl
push
xor
loop
cmp
sbbl
adc
pop
pop
jno
inc
ljmp
into
stc
jp
into
sbb
arpl
mov
lock
mulb
jno
pop
sbb
jae
je
push
fistpll
jp
and
subb
je
pop
cmp
les
jbe
lds
outsl
subl
enter
cmp
les
xchg
adc
scas
clc
xchg
adc
es
inc
ss
lea
pop
in
xor
mov
jno
cmpsl
mov
inc
adc
jno
mov
hlt
add
dec
push
lret
enter
jp
sbb
repz
repz
jl
xor
or
fdivl
jae
sub
add
pop
and
xor
repnz
lods
imul
lock
add
cmp
push
hlt
cmp
movsb
aas
in
aad
mov
shrb
mov
je
dec
scas
add
pop
test
mov
lahf
mov
and
jl
cmpsb
cs
cmp
mov
jbe
mov
mov
or
mov
jo
mov
andl
add
add
je
mov
and
sbb
inc
fildll
mov
or
jg
cmp
pop
pop
mov
lock
add
sahf
enter
adc
jbe
pusha
iret
jne
xor
mov
repz
sbb
jo
shll
sti
cmp
inc
mov
hlt
hlt
mov
cmc
stos
or
xor
jo
jae
divl
xchg
xor
push
jecxz
cli
mov
push
push
xor
ds
mov
pop
dec
xchg
data16
faddl
jae
cmp
pushw
mov
dec
mov
loope
fwait
cld
cmc
nop
repz
sub
js
cmpsl
loop
mov
test
sahf
push
nop
mov
ja
ficomps
or
push
xlat
aad
imul
dec
dec
pop
jne
sub
gs
dec
outsl
dec
mov
in
sub
cs
bound
lret
lock
jae
rcr
xor
cld
pop
popf
adc
andb
lea
fnstcw
fs
frstor
aas
cli
sbb
dec
mov
or
cli
mov
in
sbb
pop
sti
lahf
movsb
jnp
cmp
data16
mov
ss
add
mov
xor
pop
xchg
leave
xchg
pop
aad
adc
jecxz
sbb
and
dec
bnd
fisubl
push
xor
cli
cmp
adc
cld
js
cmp
sbb
mov
lret
mov
push
out
add
push
push
insl
push
rcl
es
push
xor
cmp
jbe
adc
mov
mov
adc
push
xchg
jle
lcall
lock
add
add
lcall
jle
dec
iret
push
ljmp
xchg
sahf
jbe
icebp
inc
movsl
adc
je
and
adc
mov
loope
and
push
mov
jmp
pop
or
movsl
frstor
int
rorl
repz
jno
sub
stos
cwtl
daa
out
pop
jmp
test
mov
filds
push
push
inc
cmp
sahf
cmpl
sub
icebp
mov
add
loopne
out
inc
add
and
call
mov
lods
loope
subb
cmpb
mov
push
cmp
fs
movb
cmp
xchg
daa
mov
pop
pop
cmp
repz
fxch
lds
and
or
xchg
sub
jp
pop
mov
aad
imul
clc
push
loop
pop
xor
cmp
icebp
xor
es
xor
sbb
lret
mov
xor
mov
push
or
or
and
bound
adc
ja
fdiv
sub
jbe
andb
and
adc
scas
sub
lret
push
outsl
mov
out
pop
outsl
and
test
repz
jbe
repz
hlt
xor
scas
push
aam
insb
ret
test
inc
fistpll
add
and
and
lock
inc
mov
adc
sub
mov
xchg
pop
jne
push
sbb
push
xor
lock
add
mov
addr16
sbb
pop
roll
lock
xchg
adc
sub
pusha
xchg
xchg
ja
stos
repz
mov
aas
aad
jb
inc
andl
nop
xchg
into
loope
stos
aam
inc
or
or
mov
sbb
clc
call
push
sbb
cmp
xchg
push
lds
mov
aad
bound
sub
xchg
mov
daa
inc
sti
iret
inc
xor
xchg
pushf
popf
testb
roll
gs
sahf
mov
mov
or
popf
jb
into
push
stc
ficoml
add
repz
jmp
jmp
vandnps
mov
rcl
addr16
fucomi
jno
mov
inc
nop
mov
mov
cld
pop
and
push
int
addr16
jb
adc
hlt
paddd
cmp
push
inc
push
add
dec
inc
popf
pop
push
cli
xchg
jo
mov
movsb
or
xcrypt-cfb
cmpsl
popa
cs
cmp
and
leave
popa
push
icebp
data16
inc
sbb
and
fisubl
movsb
icebp
mov
sub
sarl
xchg
test
pop
lods
aas
or
adc
gs
loopne
jo
es
mov
js
cmp
ret
inc
xor
std
cmp
mov
xchg
shrb
mov
jl
adc
xlat
test
cmp
pop
push
in
cmp
xor
popa
push
ret
repnz
push
ret
mov
call
ret
aaa
lcall
cld
sbb
push
or
or
test
repnz
icebp
lock
icebp
jo
orb
clc
js
jae
bnd
xor
adc
lock
insl
jno
sbbb
jge
jnp
int
pop
out
add
aaa
mov
sbbl
out
jge
aas
icebp
rcrl
aad
fdivrl
mov
out
leave
mov
dec
mov
repnz
popf
das
pop
repnz
add
pop
sahf
dec
std
mov
sbb
aas
imul
fdivrs
inc
inc
or
std
dec
es
adc
or
push
or
std
xchg
jae
pop
inc
xor
mov
pop
xchg
mov
mov
lcall
aam
xchg
push
dec
popa
push
fwait
add
rep
idivl
mov
icebp
pop
lds
inc
push
icebp
mov
xchg
push
fwait
test
movsl
out
sub
and
ss
push
hlt
mov
xchg
icebp
dec
in
adc
rcll
and
add
mov
testl
push
fs
hlt
ja
xchg
mov
imul
or
jae
mov
imul
icebp
cmpb
push
iret
rclb
pop
je
pusha
sahf
lahf
pop
xor
cs
orb
xor
sub
mov
sahf
jle
daa
mov
scas
bound
pop
popa
cmpsl
jle
cmpsl
and
xor
xchg
cmp
pop
lock
fucomip
je
jp
rorl
sbb
stc
cltd
push
dec
push
mov
scas
sub
scas
jno
xor
xchg
mov
cwtl
mov
cwtl
or
shlb
aaa
mov
mov
and
dec
add
jns
in
sbb
pop
sbb
xchg
sub
in
xor
inc
inc
mov
jb
sbb
aaa
icebp
cwtd
repz
stc
jo
lock
jno
lock
divl
addr16
pusha
cmp
fsubl
mov
scas
icebp
xchg
and
adcl
jo
push
repz
pop
rcll
shll
push
mov
push
or
push
pop
repz
mov
adc
stc
or
sahf
hlt
jp
adc
les
adc
clc
fistl
add
xchg
xor
dec
in
fs
mov
cwtl
push
negb
in
push
sbb
lock
icebp
incb
out
insl
jnp
pusha
push
cmp
lahf
dec
xchg
aad
or
mov
popa
fwait
or
pop
jae
mov
xlat
inc
mov
add
mov
loop
clc
negb
pop
es
cmc
ja
pop
adc
ret
clc
mov
and
jmp
mov
pop
div
inc
cli
movsl
push
inc
add
inc
in
mov
arpl
xor
mov
sti
adc
shlb
jne
mov
jne
mov
sub
jns
lcall
or
adc
adc
movsl
mov
sbb
clc
enter
and
pop
push
orb
repz
jne
shl
icebp
insl
mov
mov
xchg
cltd
mov
inc
cli
ds
inc
pop
cwtl
xor
or
mov
mov
iret
or
push
lret
xor
push
lahf
mov
or
xor
push
bound
inc
test
dec
xchg
mov
and
mov
mov
inc
inc
fcmovne
add
jo
add
js
push
mull
push
je,pn
test
adc
je
lock
add
shl
icebp
out
sbb
adc
jns
xchg
insl
mov
adc
daa
mov
adc
add
push
mov
xor
mov
subb
xchg
sarb
ret
xorl
jne
jecxz
jo
mov
ja
in
les
xchg
adc
pminub
pop
jae
sbb
jo
ds
mov
mov
pop
cmp
aam
inc
pop
xchg
xchg
xchg
sub
inc
in
stos
cmp
mov
shrb
stc
jmp
hlt
flds
jno
aad
push
outsb
loop
pop
call
int
jbe
adc
addb
mov
dec
cwtl
ret
popa
repz
inc
stc
repz
ja
mov
adc
stc
inc
jno
push
cli
je
xchg
loop
mov
int
sub
pusha
push
xchg
sbb
add
jno
jb
nop
ds
rcrb
mov
stc
mov
enter
repnz
sub
xor
je
daa
or
push
cmc
sbb
je
and
cmp
pop
rcr
sbb
out
xchg
mov
shlb
add
push
adc
xchg
xchg
pop
xchg
cmp
cmp
mov
and
or
sbb
mov
inc
in
mov
adc
pop
not
pop
pop
jae
xor
or
jo
cmp
mov
popa
mov
inc
das
andb
stc
xor
or
loop
icebp
fdiv
pop
pop
nop
je
sahf
inc
mov
inc
cmp
xor
cmpsb
sbb
mov
mov
lock
ljmp
cld
jb
sub
xchg
insl
pop
stos
mov
lcall
sbbl
push
jb
mov
add
or
cmp
jae
mov
lcall
mov
insl
icebp
cmpsb
adc
xor
test
xchg
mov
sarl
inc
fnstenv
divl
mov
cli
add
adc
pop
and
pop
loop
mull
mov
xor
in
clc
mov
push
jmp
movb
test
jno
adc
or
or
mov
cmpl
cmp
sahf
cmc
add
push
cli
out
jg
out
cmp
jns
dec
outsb
adc
stos
stos
push
xchg
andb
add
in
cwtl
or
mov
mov
idivl
cmpl
and
js
sub
jno
lock
mov
das
popf
pusha
jl
std
inc
pushf
mov
adc
push
sub
xor
popa
sbb
mov
shl
hlt
adc
mov
adc
adcb
incl
xor
aad
lods
adc
push
ljmp
jae
out
xchg
testl
aaa
cwtl
or
jp
mov
daa
inc
lds
pop
cmp
xor
push
or
push
or
fnstenv
jne
jo
add
rol
repz
sbb
jb
cs
arpl
pop
adc
clc
arpl
movsb
xor
cwtl
loope
push
add
jnp
imul
std
aad
repz
pop
and
int3
pop
jmp
push
jno
shl
js
ret
js
xchg
adc
jmp
cld
daa
xor
jae
mov
ja
out
lock
clc
sub
jg
lock
loop
xor
repnz
mov
je
mov
stc
adc
or
cmp
mov
nop
cmpsb
jb
roll
arpl
adc
and
jp
add
cltd
fwait
pop
ljmp
orb
daa
testb
inc
jae
loopne
jl
pop
lea
lock
sbb
ds
pop
push
lea
adc
repnz
std
jl
adc
cmp
js
and
addl
or
or
push
sbb
adc
adc
adc
adc
adc
adc
mov
add
repnz
jns
adc
imul
adc
or
ljmp
mov
jp
or
stc
ds
cld
inc
stos
cmp
adc
lods
lock
cmp
sbb
sbb
jge
sub
or
popa
das
lahf
inc
sbb
pop
and
rclb
sbb
pop
push
cli
cli
les
add
sahf
shl
jl
ss
pop
mov
add
jle
pusha
dec
mov
xchg
in
int
jno
lock
cmp
es
ss
mov
bnd
ja
push
mov
stos
orl
jp
and
xor
or
jb
xchg
pop
or
icebp
inc
xchg
push
sti
es
test
xchg
es
xor
lahf
or
pop
adc
vmread
iret
aam
scas
push
div
push
xor
cmpsl
outsb
push
out
push
loope
icebp
adcb
xor
adc
stos
iret
mov
cmp
sbb
cwtl
rolb
mov
in
dec
mov
test
fsubrl
pop
push
rorb
mov
xor
mov
enter
pop
and
ljmp
sbb
shll
and
lcall
das
aas
inc
add
sbb
xor
faddl
inc
int3
fisubl
clc
cmc
jb
mov
popa
jg
add
movsl
lea
cmp
cmp
adc
in
addw
push
lea
mov
adc
push
movsl
xchg
rol
xchg
fsub
adc
inc
addb
cmp
xchg
cmc
cwtl
mov
out
xor
jo
cwtl
addl
aad
pop
cmpsl
dec
or
xchg
push
dec
jp
xchg
jp
add
xor
mov
jae
add
xchg
inc
repnz
fwait
add
mov
mov
inc
shll
adc
stc
mov
cmc
pop
cmp
getsec
adcb
mov
inc
dec
inc
iret
xor
or
xchg
sbb
shll
jmp
divb
inc
jne
mov
lock
js
xchg
mov
pop
insl
mov
pop
outsl
xchg
scas
adc
sub
inc
loop
push
add
adc
xchg
in
xchg
mov
popf
int
adc
cmp
jne
mov
push
repz
add
lcall
cmp
adc
sub
inc
xorl
xor
fwait
gs
adc
ficomps
mov
mov
xorb
cmp
fnstenv
dec
into
push
jle
roll
and
cmc
jno
js
sub
mov
cmc
decb
mov
xor
adc
xchg
xorb
loop
call
int3
lock
jecxz
and
repnz
inc
sub
pop
cmp
or
push
sub
or
aam
ja
arpl
imul
jae
cmpb
inc
hlt
pop
loope
jo
js
ds
adc
xor
testb
clc
mov
sbb
pushf
xor
mov
lds
imul
loop
inc
icebp
xchg
sbbb
xchg
and
add
xorl
or
or
mov
icebp
mov
and
xchg
or
or
mov
int3
pop
push
sub
adc
or
push
pause
and
lahf
or
lock
add
mov
insl
mov
lock
cmp
addr16
dec
cmp
js
sbb
icebp
cmc
add
push
adc
lock
mov
inc
popa
push
or
cs
mov
xchg
and
jbe
mov
scas
mov
jb
arpl
clc
jbe
mov
cmp
jecxz
add
rol
dec
into
and
adc
loopne
lea
inc
mull
xchg
je
bound
daa
add
push
or
mov
pushf
push
xorb
inc
xor
call
jl
aam
shlb
or
inc
xchg
hlt
inc
xlat
pop
out
loopne
jl
add
lret
cmpsl
adc
loopne
pusha
or
insl
inc
sbb
daa
cld
aad
xchg
test
cwtl
cmp
stc
push
arpl
call
cmp
lcall
call
cmpsl
cmc
repnz
lock
out
popa
addr16
out
pop
fistpl
repnz
repnz
jmp
enter
jo
mov
mov
mov
clc
idivl
sti
pop
fbstp
or
scas
aam
outsl
fistpll
icebp
xchg
enter
movsl
stc
jno
iret
loopne
adc
cmpsl
sub
jnp
or
sub
dec
cli
pop
call
lahf
adc
dec
sbbb
add
cmp
insb
mov
in
mov
mov
add
add
push
test
je
jbe
sub
movsl
or
mov
outsl
inc
or
inc
lock
or
test
xor
mov
push
jno
mov
fiadds
jno
cmpsl
lret
mov
and
lds
add
mov
add
pop
xor
dec
pusha
add
xor
test
jp
mov
stc
dec
cmpsb
test
ds
push
sub
mov
pop
mov
bound
inc
and
mov
sahf
pop
clc
je
and
cmp
into
test
movsb
stos
in
mov
push
imul
mov
test
mov
ljmp
xor
xchg
cmp
xor
icebp
hlt
rolb
mov
or
movsb
outsl
jb
jg
je
mov
and
pop
add
mov
scas
xchg
dec
sbb
xchg
jl
and
xlat
adc
ja
test
sahf
cmp
adc
jb
jno
cmc
xor
sbb
push
inc
ljmp
aas
sub
xchg
adc
cld
dec
mov
xchg
adc
or
test
sbb
xchg
lock
rcll
cmp
imul
and
pushf
shll
sbb
jle
xor
sbb
out
mov
mov
lea
nop
or
push
mov
mov
cmp
ljmp
sbb
cmp
lret
xor
or
inc
mov
mov
mov
dec
int
sti
sbb
inc
xor
div
jae
stos
vpcmpeqd
repnz
imul
mov
add
lods
into
cmp
sbb
test
out
xor
inc
test
cmpsl
pop
jle
pop
xor
cmp
xchg
sahf
cmp
ret
and
or
pop
jecxz
dec
fs
andb
js
test
mov
ret
insl
loopne
pop
add
pop
stc
je
push
lods
mov
cld
mov
xor
ja
cli
cld
xchg
mov
adc
jp
cmp
or
stc
addr16
lahf
dec
pop
scas
dec
mov
hlt
sbb
jnp
push
cmp
mov
mov
pop
inc
push
cmp
push
stc
pop
aaa
mov
hlt
daa
or
mov
fldcw
dec
rcll
adc
test
and
adc
clc
mov
iret
cs
repnz
shlb
mov
pmuludq
mov
insl
scas
loopne
aas
or
aad
je
in
push
inc
scas
or
cs
sahf
rclb
adcl
xchg
out
jo
inc
mov
hlt
rclb
sub
xchg
cmc
add
push
jecxz
jbe
fwait
iret
add
ficoml
std
ds
add
cmp
lds
repnz
jl
jecxz
pop
sbb
and
cld
jae
jns
sbb
arpl
mov
xor
fidivrs
mov
das
jo
push
div
jno
out
mov
je
icebp
insl
lcall
sbb
sbb
das
xchg
add
leave
mov
ret
lds
inc
mov
mov
adc
addr16
mov
sbb
add
int
adc
lahf
test
fidivrl
in
xor
pop
mov
push
sahf
mov
mov
sbb
cmp
nop
inc
adc
mov
adc
leave
lock
jg
or
dec
repz
hlt
adc
or
xchg
mov
sub
pop
push
adc
pop
and
adc
les
xchg
sub
and
dec
xor
lea
out
sub
imul
test
lock
pop
or
jae
sub
jle
cmpsb
xchg
jb
add
out
das
mov
mov
push
sbb
sbb
pop
xor
add
pop
jnp
inc
jbe
adcl
push
in
stos
aad
xchg
jns
cmp
add
mov
xor
xchg
adc
lea
pop
mov
cmpl
aad
mov
rcrl
sub
divb
xchg
div
loope
loopne
dec
inc
lods
jbe
lock
sar
mov
lock
xchg
pop
mov
push
outsb
js
cld
mov
mov
add
and
testb
loopne
adc
mov
cmpsl
xor
call
or
mov
and
inc
les
adc
add
or
xor
fnstenv
pop
adc
mov
add
sub
adc
pop
cmp
pop
mov
add
pop
scas
test
lock
jmp
clc
add
adc
adc
sub
mov
jle
and
xor
and
xor
js
add
mov
clc
frstor
mov
push
js
lcall
dec
push
shlb
adc
adc
pop
dec
jo
clc
sbb
adc
push
xchg
js
leave
and
or
sbb
or
jae
sub
js
mov
je
clc
inc
and
xor
repz
pop
sti
and
mov
push
hlt
or
xchg
movsl
cmp
ljmp
negl
popf
mov
leave
adc
sti
adc
sub
push
mov
push
jle
jb
push
icebp
and
pop
xchg
push
pop
pop
vcomiss
and
xchg
fsts
pop
mov
adc
mov
push
mov
fmuls
push
repnz
lahf
xor
add
dec
repnz
mov
cli
ljmp
sub
or
dec
cmp
jo
cwtl
inc
insb
cs
jg
or
or
repz
stos
jmp
mov
push
sbb
lea
hlt
jae
repz
repz
repz
jp
mov
ja
jae
lods
mov
xchg
inc
dec
pop
stc
mov
mov
fsubs
jne
dec
lcall
sti
je
jbe
mov
jl
sub
cld
xor
adc
cltd
std
adc
mov
sbb
add
adc
inc
xor
pop
imul
push
xchg
mov
mov
nop
push
adc
xor
add
imul
and
test
das
adc
dec
xor
xor
insl
push
sub
aad
add
cwtl
rclb
adc
stos
stc
cld
stos
xchg
or
ljmp
clc
dec
push
dec
add
mov
adc
xchg
sbbb
ljmp
fwait
mov
ret
iret
lock
mov
lcall
js
pop
repnz
mov
std
jne
adcb
or
ret
mov
dec
ds
fldlg2
lods
aam
test
pop
jle
fmull
inc
test
mov
push
dec
sahf
mov
mov
sarl
jg
jecxz
add
mov
sub
sbbl
ficoml
jecxz
pop
int
insl
loopne
clc
leave
or
int
xchg
or
push
fildl
mov
ret
xor
add
ret
cmp
xchg
scas
adc
mov
lock
jno
stos
cltd
xchg
sub
adc
xchg
pop
adc
pop
mov
je
leave
repnz
mov
pop
xchg
fisttps
notb
repnz
add
ds
repnz
cmc
adc
mov
inc
mov
xchg
jg
stc
nop
popf
cmpsl
sbb
insb
aad
nop
ret
add
xor
scas
or
jmp
popa
maskmovq
idivl
clc
adc
lods
xchg
sbb
aad
es
je
mov
dec
gs
subl
dec
pop
lahf
xor
and
lret
in
jg
xchg
sub
add
pop
inc
jb
adc
adc
mov
sbb
cwtl
adc
repnz
nop
dec
xorl
sar
jmp
addr16
cmp
pop
inc
enter
xor
ds
pusha
adcb
sbb
cli
or
pop
ror
idivl
sahf
ss
rclb
xor
lods
adc
and
xlat
test
mov
jno
inc
popa
xor
jl
jmp
push
sbb
xor
icebp
or
mov
or
test
inc
xor
stc
insl
lock
xchg
sti
clc
shll
in
iret
out
pop
cmc
jle
stos
out
mov
push
adc
pop
mov
vmwrite
add
shlb
push
icebp
lds
call
testl
push
pusha
mov
fidivs
add
or
loope
faddl
fcomps
sahf
int
movb
jecxz
jl
iret
repz
cltd
pop
lcall
xor
xlat
add
cmpsb
iret
cwtl
mov
lock
mov
test
icebp
cmc
in
jno
add
cwtl
mov
jb
or
jne
push
lcall
cmp
popa
xchg
mov
xchg
iret
cmp
xor
scas
mov
mov
cmp
jmp
xchg
pusha
pop
push
push
cli
mov
stc
push
divl
xor
mov
jl
inc
lea
insl
xchg
sub
pusha
imul
call
lret
jl
cmc
pop
xlat
dec
jo
fimull
jb
add
sbb
icebp
jle
gs
mov
repz
xor
jge
je
jp
ja
add
stc
movsl
cmc
xor
dec
sub
fwait
jo
rolb
push
test
dec
addb
mov
mov
add
iret
jb
add
cli
adc
cwtl
jno
bnd
or
test
and
std
mov
mov
xchg
xchg
cltd
inc
adc
lahf
sbb
sub
mov
adc
cmp
cmp
addb
cli
fistl
xor
stc
mov
adc
xor
inc
jne
adc
push
iret
add
cmpsb
inc
mov
xor
push
iret
scas
push
jo
jo
mov
loope
cmp
shlb
or
sub
sub
das
push
jecxz
out
jo
je
jge
and
popf
pop
push
sti
add
cmp
scas
ret
mov
adc
pop
push
cwtl
notb
mov
adc
cwtl
icebp
ljmp
sahf
fsts
and
adc
mov
and
imul
mov
popa
call
inc
hlt
mov
fidivl
ds
insl
sbb
mov
pop
sbb
jbe
xchg
adc
mov
movsb
sub
or
inc
ret
cmp
or
lcall
pop
mov
insl
push
nop
cmp
mov
jl
lcall
mov
repnz
fisttps
pop
aaa
lahf
loopne
cmp
mov
jb
dec
test
inc
inc
adc
adc
ficomps
orb
pop
add
jb
adc
sbb
xor
jg
xor
xchg
aas
dec
mov
sbb
mov
xchg
es
lods
sub
ss
and
into
cs
mov
cmp
pop
mov
mov
jns
nop
push
test
imul
repnz
mov
mov
cwtl
ljmp
ret
sub
addr16
adcb
pop
iret
adc
lods
dec
divb
movsb
gs
lods
mov
xchg
adc
scas
scas
or
adc
mov
out
push
xchg
cmpsl
aad
cli
cmp
pop
into
pop
inc
cmp
aam
pop
adc
ljmp
mov
sbbl
bnd
pop
and
lcall
sti
adc
into
lds
sti
ret
dec
add
insb
loop
xchg
push
mov
cli
pop
into
mov
xchg
cmpsl
setae
xchg
mov
pop
push
loopne
mov
aam
jne
xchg
sub
pop
jo
add
cmpsl
adc
mov
jmp
push
sti
pusha
xor
scas
cld
fmulp
andl
jge
and
ficomps
pop
mov
call
mov
cmp
adc
test
push
stos
xor
jb
lahf
adc
add
jno
out
mov
sbb
movsb
add
sub
ret
mov
jo
mov
inc
scas
cmp
dec
faddl
push
push
dec
push
mov
sahf
popa
and
add
jnp
mov
aam
sub
roll
cmp
mov
std
mov
imul
xor
hlt
aam
jno
out
sub
fldt
out
ljmp
das
inc
mov
push
ret
lds
mov
pusha
mov
lods
lcall
add
mov
imul
or
adc
pop
inc
popa
adc
push
out
jnp
sbb
cmp
in
pop
add
or
push
jb
jle
mov
pop
setle
jae
dec
adc
stc
and
cmc
and
ds
sbb
push
pusha
xor
push
add
fwait
stos
movsb
loopne
pusha
or
cmc
or
adc
cli
popa
jp
jo
mov
and
mov
repz
mov
mov
push
ret
or
fs
ja
in
stc
xor
sarb
addr16
lock
sub
insl
xor
mov
jno
and
push
js
out
xchg
cld
roll
shl
sbb
loop
int3
and
xor
into
inc
imul
or
aas
icebp
in
dec
sub
int3
mov
ret
inc
mov
cmp
movsbl
shl
pusha
dec
leave
fidivrs
jne
mov
idivb
xor
fdivp
adc
add
scas
jo
call
decl
mov
imul
inc
push
add
test
in
aas
loope
icebp
push
subb
pop
dec
jmp
lahf
das
adc
shlb
mov
outsl
mov
call
push
dec
daa
and
push
or
xor
imulb
lcall
aam
movsb
ds
xor
pop
lss
sbb
sub
stos
pop
add
xchg
and
jp
out
jle
cmp
icebp
ds
add
sub
push
rorb
and
push
or
sbb
in
cli
push
mov
loop
push
repnz
add
std
js
mov
pop
add
xor
xor
inc
mov
xchg
xchg
jno
push
inc
hlt
jmp
ja
fdivrp
xchg
sbb
ret
xor
jmp
shll
xchg
jno
cmp
dec
dec
pop
jmp
push
push
and
and
mov
push
inc
jnp
fistpll
movsl
mov
and
shll
sbb
loop
push
dec
test
jnp
mov
xor
std
add
adc
push
or
mov
aad
jle
mov
punpcklbw
insb
push
xchg
fs
bound
lock
mov
lcall
adc
and
into
mov
mov
jo
sbb
repnz
and
pop
jo
mov
rorb
hlt
iret
rorb
inc
dec
push
and
cmp
lea
cli
aam
cmp
ds
lods
mov
adc
imull
push
mov
ss
shll
test
mov
jle
mov
sub
inc
call
sub
out
lret
jl
icebp
or
fwait
mov
es
pusha
ret
jo
mov
mov
cmp
ja
dec
mov
hlt
mov
add
sbb
cmp
jae
and
cld
js
xchg
in
fcmovnu
fmuls
sbbl
cmc
jecxz
dec
xlat
lahf
icebp
cmc
push
or
movsb
mov
cltd
add
dec
shll
lahf
ds
inc
mov
push
insl
inc
cwtl
sbb
sahf
std
mov
add
jo
push
dec
adc
pusha
int
add
mov
adc
mov
mov
dec
and
push
pop
stc
ss
jno
sub
shlb
mov
mov
mov
dec
ss
mov
mov
pop
cli
in
cs
sbb
shl
mov
bound
dec
mov
adc
stos
mov
add
rorb
aas
out
shll
xchg
lods
sahf
xchg
aam
scas
adc
das
pop
addl
mov
sbb
clc
add
pop
notl
inc
adc
fimull
pop
sarl
cmp
cs
imul
rorl
lcall
push
inc
fiaddl
out
rclb
sbb
lahf
push
xor
sbb
add
mov
cltd
aam
push
adc
into
ja
push
or
pop
adc
inc
push
jo
movsb
lahf
pop
dec
mov
jb
cld
test
jne
std
inc
or
mov
xchg
xor
or
push
jae
in
stos
fmull
sbbb
clc
jo
xor
jb
dec
std
lock
arpl
or
bound
insb
jo
and
fisubs
push
adc
cld
lea
fwait
jl
xor
mov
adc
iret
sarl
xchg
andb
ljmp
xchg
adc
inc
lock
inc
sbb
and
xchg
div
xor
xchg
ds
mov
inc
mov
mov
xchg
lock
icebp
fldcw
sub
and
add
inc
mov
mov
js
jle
sarl
mov
in
add
adc
jns
scas
scas
int
fidivrs
cmp
fsubrl
divl
cmc
jle
fs
add
out
call
outsl
shll
pcmpeqw
pop
sbb
jl
sahf
mov
xor
int
lds
das
xor
jnp
jge
push
sbb
mov
xchg
pop
mov
insl
rcrb
adc
stos
jmp
adc
mov
out
push
or
xchg
dec
jns
aad
in
mov
add
fstps
cmpb
mov
push
mov
shlb
test
ja
enter
inc
adc
xor
js
lods
andl
gs
jnp
aas
ret
in
repnz
adcb
push
aas
fldt
xchg
xchg
or
cmpsb
fdivrl
in
repnz
mov
cld
add
sahf
xor
inc
adcl
xchg
int
jo
fists
mov
sti
add
out
repz
push
insl
insb
mov
jo
clc
cltd
aam
jl
repz
xchg
jg
int3
mov
inc
cmp
loope
xchg
and
dec
sbb
adc
cmp
lods
iret
xchg
clc
xchg
mov
popf
repnz
mov
cmp
push
and
pusha
mov
cmc
lds
pop
jo
std
xor
lret
lcall
stc
push
or
push
or
adc
sbb
ret
xchg
stc
ljmp
mov
pop
inc
add
rorl
mov
cmpsl
jb
sbbb
push
in
int
cld
fldt
cmp
mov
outsl
aam
mov
xor
inc
mov
add
inc
mov
mov
test
xor
sub
negl
pop
dec
cmp
addb
ja
pop
dec
push
test
lock
fdivr
ret
jns
mov
or
inc
adc
add
sub
es
das
pop
xchg
scas
ret
add
cli
out
push
adcb
andb
fildl
fidivrl
adc
imul
aam
add
lock
nop
push
fisubl
inc
insl
adc
adc
xchg
jl
cmp
jl
pusha
pop
lock
roll
xor
mov
cmp
and
test
jle
pusha
dec
xor
gs
adc
pusha
nop
aaa
dec
clc
cmp
js
cmp
push
inc
daa
xor
adc
pop
sarl
mov
dec
out
aaa
icebp
sub
sti
test
sub
or
rolb
cs
in
jno
and
jno
popa
mov
mov
mov
std
les
mov
clc
and
ds
inc
push
fisttpll
insl
sub
test
push
push
subb
loope
outsw
sar
pop
insl
icebp
and
pop
mov
jns
mov
pusha
jle
outsl
dec
cs
mov
inc
insl
push
xor
ss
xor
adc
push
add
das
stc
mov
jl
leave
pop
popf
cmp
bound
dec
jl
gs
orb
cmpsl
mov
pusha
incb
jns
pop
jbe
add
xchg
mov
bound
push
cmp
in
loopne
jno
sub
ds
jne
push
jb
sub
adc
repnz
into
adc
lahf
das
out
insl
cmp
out
clc
arpl
jl
mov
in
jne
js
sbb
cmp
adc
insl
repz
inc
pop
mov
cmp
mov
jae
ja
dec
out
mov
mov
clc
mov
dec
fildl
sahf
cmp
shrl
ja
sarl
or
ret
mov
jmp
out
js
cmpsl
lods
push
popa
pop
into
cltd
loop
sub
cmp
jbe
cld
mov
sbb
add
fmull
pop
jae
and
dec
mov
lret
ss
into
cmp
ss
inc
mov
jb
lret
stc
dec
hlt
mov
push
dec
inc
data16
lods
fistl
icebp
mov
cmp
ss
xchg
cs
in
adc
stc
mov
push
dec
stos
out
cmp
nop
sub
lock
xchg
cmp
mov
and
xchg
iret
sar
fndisi(8087
add
adcb
push
imul
dec
inc
cltd
das
adc
scas
jmp
inc
aam
ljmp
aad
ss
test
pushf
sub
int3
ljmp
or
pop
pop
popa
sahf
ficoms
out
cmp
roll
pop
and
mov
iret
pop
jge
adc
enter
lods
je
bts
clc
std
mov
mov
xor
aaa
idiv
add
pop
aam
inc
xchg
andb
cld
bound
jnp
inc
pop
jbe
stc
add
loop
mov
cmpsl
xor
inc
iret
int3
adc
ret
sbb
sub
xchg
lcall
das
test
pop
jg
mov
lahf
inc
mov
adc
inc
mov
mull
mov
test
pop
sub
cld
cs
repnz
out
pop
insb
and
pop
mov
add
lret
pop
nop
mov
add
sarl
rcl
add
xor
xor
sbb
jl
aam
ret
out
pop
push
add
sub
xlat
das
xor
pop
cwtl
xor
mov
xchg
xor
loop
mov
jo
pusha
add
pop
adc
or
icebp
call
or
aam
push
push
repz
adc
xor
push
add
adc
hlt
add
inc
mov
push
adc
lock
ret
adcb
rcll
pop
icebp
jo
xor
lcall
lds
pop
movsb
pop
lods
jno
jecxz
sbb
mov
xor
stc
aad
popf
out
out
scas
adc
mov
jl
bnd
aad
movsb
xchg
movsb
mov
ss
dec
test
jno
xor
lock
or
mov
js
repnz
outsb
test
daa
in
pop
jp
sub
mov
jl
mov
shr
mov
adc
sbb
xor
xchg
xchg
push
pop
sahf
jb
iret
mov
mov
push
adc
out
das
pop
js
pop
hlt
adc
insl
xchg
add
or
cmp
out
das
adc
cmp
jno
icebp
xchg
add
sbb
pop
mov
imul
enter
pop
add
insl
testb
or
hlt
imul
das
repnz
sub
aam
add
pushf
repz
mov
cwtl
mov
or
or
add
adc
adc
xor
cmp
pushf
pop
popa
outsl
mov
and
dec
mov
std
lea
add
mov
or
add
pop
jns
sub
aad
mov
push
into
imul
test
jae
add
and
mov
dec
or
mov
icebp
add
fildll
test
int3
sahf
jae
shld
out
cld
nop
in
and
or
or
mov
aad
cmp
shll
nop
cwtl
enter
stos
movsb
xchg
jae
mov
inc
fcoms
add
sbb
fstp
pop
xchg
push
rcrb
int
jle
pop
ret
sti
inc
push
pop
adc
in
sbbl
nop
lock
loopne
xchg
xchg
cmp
add
xor
mov
pop
and
adc
pop
sbb
cmc
out
or
jno
cvtpi2ps
ror
aam
sub
andl
repz
push
es
lock
xor
xor
out
inc
nop
lcall
inc
adc
sti
lahf
or
in
xor
negb
lahf
jb
mov
int
stos
cltd
bound
xchg
xlat
negb
sub
xor
rclb
insl
cmp
xchg
add
clc
iret
fildll
push
add
xchg
xorb
je
int
jno
insl
aam
std
push
ret
out
adc
sahf
add
repnz
jbe
push
call
stos
lret
xchg
nop
imul
add
xchg
adc
es
js
pusha
les
jo
xor
xchg
xchg
pop
add
je
sbb
push
sub
push
rorb
outsb
xor
xchg
out
stos
adc
push
push
das
ret
inc
std
cld
int
adc
aad
or
jno
lret
add
mov
repnz
dec
push
insl
daa
sbb
xchg
int
mov
mov
test
data16
pop
push
fwait
clc
xchg
mov
mov
adc
push
jb
add
repz
push
xchg
jl
xor
test
xor
test
repz
push
mov
inc
rcrb
pop
fdivs
mov
adc
daa
mov
adc
fwait
lock
lods
push
cmpsb
pop
and
std
push
fcompl
inc
bnd
divl
adcb
clc
repz
popa
cmc
rorl
pusha
or
mov
fdiv
imul
pop
sub
inc
sbb
mov
loop
push
gs
jb
add
or
jb
ret
div
pop
clc
cltd
cmpsl
sbb
xor
cmp
push
mov
iret
scas
adc
aad
jnp
mov
xor
adc
mov
adc
js
xchg
aad
xor
dec
add
je
and
mov
mov
lret
sahf
sbb
sbb
mov
lea
cmp
popf
loopne
outsl
cmpsb
fwait
icebp
mov
inc
popa
lock
out
xchg
pop
or
and
jo
add
or
pop
cmp
or
icebp
inc
jae
jno
cmpb
push
pop
inc
js
clc
xor
mov
cmp
rorb
sub
out
bound
in
and
cmp
inc
js
dec
daa
jo
dec
nop
mov
push
pop
not
or
in
mov
xor
adc
xchg
jp
sbb
pop
sbb
cmp
aaa
les
fnstcw
enter
mov
jno
xchg
mov
sub
mov
pop
cmp
fnstcw
mov
mov
outsl
xor
lds
mov
mov
outsb
cld
jp
test
ds
mov
sub
cmp
lahf
sbb
push
icebp
and
inc
outsl
mov
adc
nop
in
jecxz
and
xor
cwtl
popa
aas
popa
mov
push
jno
fadd
or
inc
jns
mov
dec
xchg
loopne
or
shl
test
xchg
jb
outsl
loop
dec
movsb
hlt
lock
test
xor
xchg
sub
jb
push
sahf
mov
adcb
xchg
or
jns
add
rol
xor
mov
sub
adc
xor
mov
push
fadds
cld
push
fsubs
testb
add
orl
arpl
jp
lock
sub
sbb
or
repnz
gs
xor
jg
je
sub
stos
and
js
xor
dec
lock
int3
fldl
outsb
adc
xchg
addr16
cmp
mov
push
flds
xchg
rorl
out
cli
dec
arpl
dec
push
inc
mov
or
cmpsb
or
lahf
rcrb
inc
xor
and
pop
push
jnp
jnp
pushf
push
sbb
inc
ss
out
pop
adc
out
cwtl
add
repz
mov
scas
cmpsl
jl
or
jo
xor
jne
mov
inc
test
icebp
mov
icebp
mov
xor
fstpt
xor
lahf
andnps
hlt
cmp
dec
xchg
push
or
dec
jp
xor
add
cmpsl
pop
nop
lret
xor
push
pop
fstps
xchg
or
and
popa
mov
mov
fisttpl
or
sar
lahf
mov
sbb
adc
xor
cmp
push
jb
push
dec
dec
cltd
rcll
sub
imul
inc
jb
push
mov
loopne
cmp
arpl
mov
adc
xor
repz
inc
push
pop
movsb
jb
cmp
subl
aad
jp
dec
push
ja
repz
dec
out
in
mov
loopne
inc
div
lcall
xor
stos
cmc
pop
push
mov
xchg
ja
jp
js
not
imulb
pop
xchg
and
and
push
xchg
sbb
jne
clc
inc
stos
cmc
data16
cmp
add
dec
insb
add
jb
xor
adc
mov
ja
mov
sub
cmc
sbb
sahf
das
cmpsb
sbb
test
mov
xchg
aaa
pop
jne
roll
sbb
jae
jo
sub
fwait
adc
mov
andl
jp
add
out
mov
add
jne
mov
or
stc
sbb
and
ret
outsl
out
stos
cmc
lea
or
mov
xlat
cmp
mov
pop
das
int
mov
inc
xlat
sbb
sbb
mov
pop
dec
xchg
das
xlat
xor
je
enter
insl
repnz
js
mov
mov
xor
and
jno
sub
lcall
pop
sbb
xchg
mov
imul
icebp
jle
push
clc
push
sbb
clc
add
stc
lret
mov
imul
push
not
neg
pop
out
stos
adc
negl
dec
mov
jg
icebp
icebp
icebp
cmpsb
adc
and
hlt
mov
add
in
rcll
push
jp
cwtl
lea
mov
iret
imul
ret
jo
jle
inc
xchg
push
xchg
xchg
repnz
and
xchg
std
pop
cmpl
add
fiadds
bnd
cli
mov
jo
xor
push
std
ds
or
cli
mov
stc
xchg
test
aad
in
daa
inc
fistpl
xor
out
ss
mov
repnz
pop
mov
ret
stc
mov
in
fsubp
repz
jns
mov
icebp
idivl
add
xor
inc
adc
nop
cmp
xor
cltd
sbb
sbb
and
enter
pop
rorl
xchg
sbb
mov
js
neg
pop
fisttpll
ja
idivl
shll
lret
push
adc
loopne
cmp
xchg
add
jb
sub
cmp
adc
fdivrs
or
push
adc
or
orb
icebp
mov
jle
push
in
in
cli
pop
sbb
mov
pop
adc
xor
jle
pop
cmpsb
or
xor
xor
push
adc
jle
dec
data16
dec
dec
ja
movl
and
push
adc
mov
mov
jo
lock
je
cmpsl
add
repnz
stc
jno
jle
and
enter
adc
push
popl
jecxz
and
adc
jge
cmp
add
and
jo
add
add
pushf
jno
add
jno
add
mov
inc
das
xchg
mov
repnz
push
notb
ret
aaa
adc
mov
call
xchg
sbb
rorl
xchg
cwtl
jge
aas
cld
iret
xor
nop
mov
and
jo
jp
cmp
dec
adc
mov
push
mov
mov
aam
gs
pop
setle
jle
mov
pop
xor
or
xchg
icebp
add
mov
mov
iret
pop
addr16
mov
push
aam
jp
repnz
mov
pop
ret
xor
lret
or
div
shl
adc
cli
idivb
or
mov
iret
and
jbe
xor
or
inc
or
cmp
test
sbb
push
icebp
jl
popa
std
pop
test
mov
push
jle
xor
fdivr
mov
out
lock
jne
mov
inc
and
shlb
aaa
dec
push
sbb
das
ds
stc
insb
inc
and
sbb
test
adc
dec
repz
push
push
lods
mov
ljmp
ja
cmp
jg
aam
jno,pn
sbb
ja
test
fcom
mov
jo
outsl
in
cwtl
fcoms
sti
out
mov
add
fisttpl
xchg
jb
xor
test
js
cmp
adc
mov
movsl
cmp
stos
pop
insl
adc
xorb
sbb
fmulp
pop
lret
test
add
in
push
cmp
cltd
jb,pn
mov
sbb
fcomps
and
fimull
jne
notl
mov
push
call
sbb
sbb
jl
jae
inc
outsl
sbb
jno
xchg
ja
insl
int
jno
lock
xor
sub
sub
push
and
push
cmp
add
adc
arpl
out
in
jnp
bnd
xchg
and
xor
dec
jns
dec
mov
xor
inc
jbe
or
jno
push
jmp
mov
jg
int
icebp
jno
pop
xchg
ja
pop
fidivl
jne
aam
jo
ror
jbe
or
movsl
jo
inc
jns
in
lock
clc
fincstp
mov
pop
inc
adc
mov
jbe
add
or
sbb
icebp
shrl
jbe
cmp
pop
sbb
ss
lret
mov
add
in
fisubrs
enter
test
adc
ja
mov
sarb
mov
insl
cmp
fists
fimull
call
negl
add
or
mov
lcall
jb
xchg
int
inc
xchg
jle
cmc
mov
outsl
mov
imul
or
mov
pop
cmp
cwtl
iret
sbb
mov
or
shlb
push
push
sbb
jae
repz
je
xchg
mov
enter
mov
test
xor
out
sub
sub
icebp
mov
cmc
adc
out
jbe
push
icebp
add
hlt
sbb
mov
rolb
add
ja
int3
jo
pusha
jl
ud0
sub
jbe
rorb
leave
adc
dec
out
cmp
push
mov
sbb
jae
aaa
loopne
sbb
push
fnstsw
fcompl
sbb
test
xor
jl
pop
sbb
push
mov
subb
push
jb
rorl
xor
ss
dec
dec
cmp
shl
xchg
hlt
dec
mov
into
dec
stos
xchg
add
xor
pop
or
push
cmc
clc
push
pop
or
mov
mov
cmc
xchg
or
lret
sbb
sub
jp
and
or
adc
fstl
fcoms
and
dec
cmp
sarl
sbb
hlt
es
les
clts
and
in
test
mov
imul
je
aam
jbe
es
lret
jae
jbe
sti
add
hlt
add
xor
ret
sub
fincstp
push
lret
or
sbb
into
inc
xor
or
out
cmp
sets
clc
frstor
mov
daa
cmp
or
xchg
cmpsb
dec
xchg
pushf
pop
adc
inc
lods
insb
repz
xor
dec
xorl
lock
js
sbb
add
dec
sub
aam
outsl
lds
ret
xchg
mov
shl
or
cmp
ljmp
adc
jecxz
cli
cmp
mov
call
push
sahf
adc
mov
jno
shlb
or
add
xor
inc
loop
mov
es
adc
add
mov
mov
insl
adc
sbb
fnstenv
pop
jg
repz
idivb
cmc
xchg
push
jp
jns
jl
cmp
add
xlat
das
mov
sub
add
mov
xchg
mov
mov
or
aas
jmp
adc
cmpsl
mov
jne
push
push
cli
inc
xor
adc
xlat
aam
or
fimull
jecxz
subb
xchg
inc
popa
mov
cmc
out
mov
jb
bound
in
cmpsl
pop
xchg
adc
add
stc
pusha
push
xchg
repz
adc
xchg
xchg
cmc
mov
in
xorps
and
js
out
lcall
pop
scas
adc
jne
lock
shlb
and
leave
cmc
push
sub
pop
icebp
lds
hlt
push
into
nop
stc
sbb
enter
xchg
add
imul
fidivl
aam
adc
push
leave
notl
jo
cmp
xor
je
js
adc
cmc
sahf
xor
mov
mov
mov
andl
adc
jne
sbb
xchg
pop
adc
mov
insb
and
adc
push
icebp
testl
aaa
cmp
sub
mov
pop
adc
stc
cmpsb
dec
dec
lahf
xor
push
mov
or
mov
inc
and
sbb
loope
cmc
xor
js
dec
push
push
xchg
add
push
mov
or
ficoms
push
sub
std
adc
jnp
push
sarb
in
jl
push
lret
mov
mov
pop
scas
adc
pop
andl
jnp
cli
pop
repz
divps
pushl
fwait
out
adc
pop
pop
es
sub
ss
popa
insb
pop
or
sbb
sbb
fnstcw
xchg
outsb
xchg
idivb
xchg
stc
out
mov
jl
jle
fucom
mov
xlat
pop
adc
outsl
jle
int
xor
pop
adc
xor
dec
dec
cmc
jo
adc
mov
lock
std
jno
mov
pop
je
loopne
shll
xchg
inc
ljmp
test
jno
pop
dec
cmp
add
or
push
or
or
mov
xor
adc
mov
sub
insl
fcmovnb
xchg
push
pop
xor
pop
add
add
jge
mov
addr16
lock
jle
jnp
pop
push
rcl
pop
jno
xor
mov
xorl
outsl
rcrb
pop
mov
lcall
push
aad
inc
int
mov
insl
xchg
and
adc
lret
cltd
push
sahf
inc
jmp
cmp
sub
cmp
lock
hlt
cmp
jo
push
sub
push
andb
mov
dec
adc
js
xchg
cli
push
jecxz
xchg
inc
js
mov
jle
xor
mov
ljmp
es
shll
pop
rorl
mov
cli
call
or
loop
sub
sub
iret
mov
ret
cmpsb
push
icebp
inc
outsl
out
ja
jle
inc
sub
xchg
sahf
or
or
fdivrl
push
mov
adc
je
jne
push
dec
mov
or
mov
push
xor
aam
sar
fidivrs
xor
leave
mov
lock
add
loope
ja
pusha
idivl
inc
jmp
lahf
dec
mov
mov
pop
cwtl
rcll
and
jle
or
adc
icebp
repz
jbe
or
adc
pop
outsl
and
xor
lock
mov
add
adc
lock
mov
les
mov
roll
outsl
fsts
ja
ret
sub
jns
std
push
inc
jns
xor
das
pusha
idivl
sahf
sub
pop
imul
pushf
addr16
and
das
mov
pop
jge
or
dec
imul
test
hlt
in
call
or
add
push
test
jbe
pushf
xchg
outsl
xchg
jns
ret
fdivs
pop
les
sahf
stc
filds
xor
ret
cmp
push
xorb
cltd
sahf
stos
fcomip
mov
inc
add
es
or
fisttpl
push
add
inc
int3
movsb
andb
in
pop
pushf
mov
mov
popf
repz
mov
cmp
int
pop
mov
xor
push
pop
adc
jae
mov
pause
je
cmp
adc
mov
mov
jp
lahf
das
shl
cmp
add
mov
sbb
inc
cld
and
inc
xor
cmpb
pop
mov
push
pop
out
enter
bound
jns
lock
or
pusha
std
lfs
adc
adc
and
roll
cmc
repnz
divb
lahf
or
dec
sbb
cwtl
or
xchg
neg
test
xor
push
pop
jae
add
lcall
cli
outsb
ficoms
bound
jge
icebp
and
pop
clc
mov
stos
pop
test
and
pop
push
divl
sahf
icebp
cmp
pop
ficoms
cmp
mov
aas
jb
gs
rcll
les
inc
mov
mov
in
jle
xor
int3
dec
sbb
or
cmp
sarl
daa
ljmp
and
es
xchg
dec
jbe
push
das
scas
cs
repz
aad
jns
xchg
jae
or
jo
push
xchg
and
hlt
das
xchg
cmp
sub
mov
pop
jb
and
xor
aad
rep
jl
xchg
icebp
lock
ss
aad
jne
adc
loop
xorl
fsts
neg
jp
icebp
rclb
sbb
jge
add
mov
movl
adc
inc
fiadds
hlt
xor
or
addr16
pop
imul
enter
adc
push
loop
out
fldt
push
inc
aad
xchg
jle
dec
and
lahf
mov
jp
mov
push
add
mov
pop
sbb
and
or
cmp
sbb
xchg
mov
cmc
in
sub
sub
mov
rcr
sahf
ds
pushf
sahf
sbb
mov
sbb
jb
add
jecxz
fsubrl
jbe
sbb
out
and
js
mov
xchg
popf
int3
xor
sbb
mov
lock
pop
aam
and
xchg
xor
xchg
push
nop
nop
adc
adc
or
test
mov
cmpsb
int3
adc
push
dec
jle
mov
repnz
test
add
xchg
jb
in
cltd
icebp
fadd
push
jg
pushf
and
repnz
jo
arpl
mov
movsl
sti
adc
in
ds
dec
outsb
out
sbb
out
mov
movsl
and
push
cmc
sub
out
sub
xor
ret
ss
jb
adc
and
cmp
repnz
iret
sbb
jae
lods
sti
adc
adc
lods
pop
cmp
nop
and
sbb
jno
sahf
and
icebp
lahf
sub
outsb
ljmp
or
stos
adc
test
or
adc
xlat
or
outsl
dec
cld
jnp
sbb
push
sarl
add
mov
out
dec
lock
sbb
mov
repz
pop
or
fistl
pop
jno
scas
aam
push
push
push
lcall
inc
mov
dec
rcrl
icebp
pop
push
cmp
sti
sbb
push
push
lcall
push
jnp
fstp
cmp
in
add
sahf
push
aaa
fisubl
mov
fistl
fwait
push
mov
cmp
or
or
push
adc
aaa
enter
or
testb
or
test
mov
cmp
das
and
aas
xor
add
pop
pop
subb
pusha
inc
adc
lret
aaa
repz
mov
dec
mov
pop
ret
add
sub
sub
xchg
inc
jne
and
fistpl
mov
mov
scas
lods
pop
dec
mov
cmp
js
arpl
popa
or
jp
adc
sub
arpl
rcrb
repz
out
out
arpl
or
cli
aad
pop
nop
jmp
ret
sahf
sar
jne
bound
add
push
clc
adc
push
call
pusha
hlt
mov
shl
arpl
push
lret
or
mov
nop
hlt
mov
push
ljmp
push
aas
mov
xchg
pop
shl
jb
cmc
roll
jp
xchg
nop
add
lea
mov
and
and
lock
adc
rclb
test
xor
dec
dec
and
std
negl
and
dec
lcall
add
xchg
pop
mov
loopne
mov
mov
adcb
aad
das
outsb
mov
lret
adc
sub
cmc
fcoms
xor
call
jp
sahf
sbb
mov
mov
enter
in
icebp
mov
repnz
sarb
add
xchg
or
jg
icebp
xor
push
lret
inc
mov
xchg
cwtl
pop
lock
mov
mov
sub
hlt
popa
adc
pop
lock
xor
or
lahf
pop
imul
inc
icebp
call
mov
adc
inc
jl
scas
imul
or
and
pushf
stos
out
into
lock
xor
cs
cmc
jo
inc
sbb
adc
hlt
xor
filds
out
cmpsb
das
out
dec
lock
fdivr
cwtl
lock
add
popa
pushf
xchg
add
inc
in
adc
jns
movb
test
xchg
dec
mov
shll
insl
adc
jno
xchg
fstps
js
mov
lcall
pop
imul
pop
lock
mov
adc
cmp
adc
pop
or
mov
arpl
adc
dec
pop
fsubl
pop
and
negb
repnz
add
out
fwait
jle
adc
lcall
and
push
dec
lcall
lds
or
rcr
dec
lea
mov
fcmovne
rolb
incb
cmp
das
push
icebp
repnz
je
imul
sbb
in
xlat
dec
jno
fwait
fwait
cltd
addl
inc
add
aaa
stos
je
fidivrl
bound
or
jb,pt
pusha
mov
mov
cs
push
test
sub
mov
mov
inc
pop
cmp
clc
push
cmp
push
pop
mulb
imull
outsb
insl
adc
out
cld
add
test
int
or
mov
movsl
xchg
into
and
push
sub
jns
lcall
and
mull
lret
lea
and
and
stos
into
arpl
lcall
pop
mov
les
add
bound
and
shll
std
jbe
jns
pop
and
fdivs
cli
jp
adc
mov
dec
push
and
testl
sbb
aad
mov
and
daa
mov
jecxz
jb
mov
lahf
test
lret
popa
pop
icebp
lcall
sbb
jle
add
jno
mov
dec
sahf
and
mov
xor
pop
hlt
and
les
dec
inc
adc
fstps
lock
pop
adc
pop
into
ja
jb
or
inc
dec
mov
hlt
xchg
orb
inc
xchg
addl
push
fidivl
xchg
push
sub
divl
cld
pushf
repz
pop
mov
cli
insl
insl
xchg
clc
fdivrl
sahf
lret
cmp
jl
cmp
inc
jbe
push
movsb
mov
repz
adc
lret
loop
mov
sbb
cs
cld
in
pmullw
push
sbb
repz
bound
mov
aaa
dec
cli
mov
loope
xor
das
es
jp
xchg
jmp
xchg
fildl
pop
cltd
lea
inc
xor
xor
and
shll
pop
inc
bound
jne
addb
push
dec
loopne
mov
loopne
cmp
jno
xchg
inc
cmp
adcl
adc
int
jae
adcl
dec
popa
repz
bound
orb
pop
add
push
xor
cmc
fwait
sbb
mov
push
notl
ja
mov
inc
sahf
mov
xor
jne
addb
or
leave
jns
sti
inc
repz
mov
xchg
hlt
lcall
or
or
sbb
xorb
orb
repnz
jb
jno
push
lahf
mov
adc
testb
push
mov
xchg
jae
mov
dec
pop
div
xor
ss
adc
add
mov
mov
xchg
cmp
mov
or
repz
xchg
js
jb
mov
cmp
mov
sbb
xchg
repnz
je
icebp
jecxz
mov
js
push
cld
xrelease
jg
je
jg
movsb
hlt
xchg
ja
hlt
mov
div
nop
aaa
push
lock
int3
xchg
rolb
inc
xchg
sub
lock
xchg
repz
in
hlt
loope
inc
add
das
lahf
xchg
jne
jno
aaa
adc
adc
ud0
repz
inc
add
mov
xchg
in
jae
sbb
push
fcompl
and
jae
out
push
jb
add
rclb
lock
stc
or
sub
adc
pop
rclb
sbb
push
push
shll
push
push
cmp
xor
sahf
lock
and
or
sub
rolb
leave
aam
jbe
cmpsb
push
adc
cmc
cmp
fcomi
loope
pop
sahf
daa
divb
sbb
push
bound
cmp
mov
dec
lcall
mov
jg
mov
pop
notl
ss
fimuls
jnp
jl
lods
xchg
pop
ret
jb
mov
sub
dec
xor
aam
push
adc
pusha
xor
sahf
push
dec
mov
xlat
xor
inc
mov
aad
rcrl
pop
mov
je
pop
pop
mov
dec
mov
sbb
pop
jl
push
push
ss
mov
mul
das
push
dec
popf
xor
dec
add
ljmp
and
jae
add
repz
mov
cmp
jl
hlt
mov
xor
insl
lock
add
dec
mov
jl
or
pop
clc
ficomps
and
mov
hlt
jno
jmp
cld
sbbl
jns
push
push
inc
stc
bound
jp
jbe
nop
lock
jno
repz
fisubrs
inc
sbb
cltd
subl
outsb
test
jae
adc
adc
xorb
hlt
shlb
mov
aas
add
int3
add
cmp
sub
fstl
sbb
dec
fwait
pop
mov
icebp
adc
or
cmp
xor
mov
lahf
mov
test
mov
lret
cmp
fwait
inc
push
rclb
mov
in
lock
mov
mov
cli
lcall
xchg
jbe
fbld
fists
adc
jae
and
lret
jae
jg
jge
and
out
adc
je
aad
adc
xor
pusha
xchg
lock
jbe
pop
pop
xor
mov
subl
push
arpl
add
and
fldl
das
clc
les
push
pop
push
cmc
ja
shll
xor
fwait
imulb
pop
aam
cmp
stos
movsb
fisubs
ja
and
movsl
push
push
scas
push
pop
inc
cmp
push
nop
lods
pushl
dec
dec
fldl
pushf
pop
pop
pop
lods
mov
imul
jmp
adc
icebp
or
fcmovnu
or
add
out
loopne
cmp
xlat
stos
add
idivl
mov
lea
add
or
push
jge
jecxz
jno
lahf
xchg
xchg
fiaddl
pop
inc
or
sbb
jl
xlat
subl
sti
push
xchg
mov
popf
int
dec
pop
dec
xor
repnz
fcmove
cwtl
gs
mov
movsb
jb
ljmp
lret
xor
pop
stc
adc
adc
push
cmp
mov
jl
mov
ucomiss
arpl
outsb
xor
mov
ljmp
in
jo
lock
mov
fdivl
pop
gs
aad
pop
shll
flds
jne
mov
push
mov
repnz
jp
sub
add
sub
jmp
fimull
lock
xchg
lcall
cmc
out
lahf
pop
mov
xchg
push
inc
jnp
je
dec
xor
icebp
pushf
push
dec
in
xchg
inc
xchg
xor
rcl
cmpsl
jns
ret
mov
xor
cmc
cli
adc
cmp
jle
pushf
pop
adc
fsubp
sbb
insb
cld
pop
pop
xchg
je
into
pandn
push
lahf
mov
cmp
ret
jp
mov
lea
idivl
push
jno
jge
or
xchg
push
jo
orb
inc
mov
sbb
jb
pusha
mov
addr16
inc
adcl
imul
addl
sbb
push
cmp
arpl
pop
icebp
cmp
mov
std
ds
jns
arpl
mov
fisttpll
nop
lods
cmp
stos
pushf
adc
or
test
jne
push
fnstcw
notl
loop
pop
scas
inc
xor
adc
data16
out
cwtl
frstor
test
inc
mov
lods
icebp
movsb
enter
cwtl
sbb
outsl
sub
aad
jo
sub
dec
fists
cld
push
fstl
lret
jl
aaa
dec
je
addr16
jbe
sub
test
sbb
mov
cwtl
add
cmp
inc
xor
mov
mov
pusha
mov
push
sub
sub
push
cs
dec
or
mov
xor
adc
sbb
cmp
repz
add
jecxz
outsl
adc
aaa
cmc
sub
inc
mov
push
lea
jle
stos
in
jno
pop
mov
inc
hlt
pop
negl
adc
sti
add
lods
outsb
mov
icebp
bound
pushf
aas
dec
jb
negb
icebp
fwait
scas
mov
mov
pusha
lahf
pushf
scas
push
mov
in
inc
xlat
shr
inc
xor
int3
xchg
subl
or
jne
mov
loopne
scas
mov
or
cmp
cmp
cmpsl
push
ja
jno
adc
mov
mov
cli
lcall
dec
push
stos
outsl
aaa
nop
fisubrl
jne
xor
jae
mov
adc
mov
inc
shl
jp
stc
and
xor
adc
pop
xchg
cwtl
cmp
repnz
stc
repz
fists
fdivs
in
xchg
imul
or
cmp
xor
lret
lahf
cmp
push
jge
pusha
sbb
cmovg
mov
stos
adc
push
xchg
or
mov
cmp
fiaddl
je
scas
cmp
and
pusha
out
cld
out
and
jns
push
add
into
adc
mov
xor
das
xchg
push
int3
pop
pop
jae
cmp
fdivrs
stc
scas
cmc
or
jb,pt
push
mov
sbb
adc
nop
xor
add
loope
fsubs
pop
jb
int
test
ret
loope
xor
jb
fildl
push
lds
xchg
and
test
out
cwtl
hlt
gs
jb
fildl
push
jno
sbb
mov
adc
mov
stos
cmp
mov
je
add
mov
stc
call
pop
das
cltd
jge
js
cmp
aaa
iret
bound
icebp
sub
sub
lock
or
mov
cmp
clc
stos
int3
arpl
jno
lock
or
pusha
xor
push
mov
jl
lods
jbe
adc
add
cmp
add
add
or
dec
aaa
jae
icebp
repz
repz
testl
in
popf
repz
add
ret
aam
lcall
aas
add
and
clc
push
outsl
jecxz
xor
xor
and
dec
repnz
aam
push
outsl
notb
icebp
sub
or
std
movsl
sub
xorb
jmp
aad
mov
mov
inc
std
push
pop
imul
jmp
gs
aam
fwait
jle
pop
rorb
mov
in
je
jb
sbb
fistps
adc
xor
jecxz
lock
mov
sbb
movsb
icebp
sub
into
push
mov
or
mov
int
cwtl
ja
popa
dec
mov
and
rcll
jg
out
out
cmpsl
fisttpl
and
aam
cmpsb
lret
lgs
sbb
push
mov
jbe
fcomps
ret
mov
xchg
jae
lds
scas
add
jne
out
icebp
pop
shll
xchg
xor
or
cmc
movsb
daa
xorb
sub
lret
out
mov
cmp
sbb
movsl
sti
or
pusha
or
clc
int3
repnz
insl
jae
mov
push
sahf
mov
cmc
ss
imul
addr16
cmp
jo
lock
push
outsl
mov
xor
or
push
movsb
lahf
mov
pop
bound
fsts
ja
dec
rclb
sbb
loopne
dec
push
and
call
mov
cmp
and
js
xchg
subl
aaa
clc
movsb
inc
imul
repnz
icebp
lcall
add
fxch
out
andb
xor
adc
fcomps
adc
mov
negb
and
sub
repz
push
and
push
cld
icebp
sahf
mov
pop
adc
cmpsb
in
ljmp
adc
sub
dec
fsts
roll
cmpsl
push
divl
xor
movsl
cmc
mov
mov
aaa
cmp
jb
repz
adc
push
push
fsts
out
int3
jle
mov
lods
xorb
jnp
jo
add
dec
jno
cmp
xchg
mov
cmp
or
imul
clc
jo
push
enter
in
push
je
div
xlat
cmp
xor
pop
sbb
ljmp
add
jge
push
or
pop
cmc
and
mov
push
cli
sahf
push
mov
mov
rcrb
mov
mov
xchg
enter
jbe
clc
popa
repnz
ficoml
or
inc
and
mov
iret
adc
inc
pop
cmc
and
cld
shl
adc
cli
xor
in
mov
fcomp
sub
xor
aad
push
ficoml
and
mov
notl
jne
cmpsl
shrl
mov
jbe
jle
jp
jo
pusha
out
cli
add
sub
and
hlt
lds
mov
add
and
cltd
subl
push
push
into
or
adc
dec
jg
or
push
xor
xor
jns
int3
mov
mov
je
stc
or
pop
clc
in
and
jns
adc
mov
xor
mov
xor
shr
out
enter
lds
lret
sbb
add
jg
mov
cmp
jmp
push
hlt
xchg
jns
mov
cmp
lahf
mov
rclb
fbstp
test
jae
inc
mov
fisttps
aas
mov
pushf
mov
cwtl
pusha
jne
js
daa
jle
insl
pop
mov
jmp
lock
dec
pushf
adc
int
jns
icebp
test
push
xor
adc
and
cmp
mov
lock
mov
sub
jecxz
aad
lea
das
stc
and
jbe
sub
adc
je
sbb
xorl
push
es
inc
adc
dec
loopne
daa
loop
jb
mov
fcmovne
adc
jl
dec
testl
inc
add
ljmp
scas
push
insl
mov
lcall
inc
aaa
lcall
add
xchg
lock
dec
cmp
pusha
outsl
pop
das
pusha
mov
bound
push
fsubrl
lock
lods
icebp
mov
adc
mov
bound
js
rcrb
xlat
popf
js
or
jbe
shlb
pop
ds
insl
mov
mov
into
lods
xchg
cmp
sti
mov
loope
aad
out
pusha
inc
loopne
dec
push
add
lret
mov
ss
adc
dec
inc
cwtl
mov
cmp
mov
pop
dec
pop
jg
fst
mov
mov
adc
jnp
and
xor
mov
jnp
ret
jecxz
popl
out
adc
lds
mov
jno
mov
add
movsl
adc
adc
and
daa
push
mov
lock
jo
fs
pop
xor
or
pop
fimull
cld
aad
js
xor
add
xor
add
jle
pusha
xchg
kmovw
test
pushf
test
fs
push
cmp
fdivs
rorl
jbe
lret
fwait
std
sbb
punpckhbw
add
rorl
cmc
fstl
ret
icebp
pop
xor
jp
sbb
cltd
pushf
sub
mov
or
fnstenv
es
outsl
dec
neg
and
mov
lock
in
into
mov
xchg
mov
and
and
jecxz
addb
lahf
call
icebp
lods
scas
rclb
mov
mov
iret
int
lock
jo
push
push
adc
jecxz
lock
mov
jae
xchg
sahf
push
mov
xchg
add
mov
shll
cmp
pusha
push
xchg
push
jbe
addr16
sbb
xchg
shll
adc
mov
mov
aam
pop
jno
inc
jle
into
push
icebp
jp
and
xlat
xor
mov
test
inc
adc
pop
mov
arpl
push
sub
pop
cmpsb
mov
adc
pop
xor
mov
xchg
ss
xor
cwtl
and
insl
pop
and
divl
pusha
divb
sbb
add
jne
add
adcb
pop
jb
aam
xor
test
inc
ja
test
push
pop
jnp
into
xor
push
sub
mov
or
outsb
xlat
xchg
jb
lock
punpckhdq
in
adc
outsb
and
sub
xor
sbb
lss
js
dec
adc
or
jns
mov
les
inc
scas
movsb
cld
jae
add
lcall
lods
lds
fstp
xchg
stc
jae
sub
jo
xor
repz
stos
jb
inc
aas
hlt
mov
out
lret
test
and
bound
and
mov
rorb
xor
jecxz
or
adc
fwait
push
sbb
cmp
aaa
mov
repz
stos
mov
test
push
pop
jb
out
sub
mov
inc
repnz
xor
xor
cmp
inc
hlt
lahf
adc
xchg
adc
lcall
or
xchg
cmp
shl
je
jge
or
clc
aas
ja
icebp
or
dec
lea
js
mov
clc
dec
mov
xor
push
sbb
jp
jno
andb
jbe
or
xchg
inc
dec
mov
in
push
and
and
cltd
mov
adc
or
add
cmp
dec
inc
mov
adc
icebp
repnz
sbb
xorb
cwtl
insb
jb
push
fnstsw
cwtl
pop
pop
xor
nop
jg
insb
or
xchg
mov
add
insl
jb
and
mov
out
xchg
mov
xchg
add
ja
das
and
mov
push
inc
lods
or
cmpsb
popa
les
test
and
lret
xor
sti
inc
andl
leave
pusha
or
pop
mov
repz
push
push
xorb
inc
push
pusha
push
inc
out
inc
push
jno
mov
je
pusha
jmp
ds
fsubrs
data16
mov
mov
mov
adc
popf
jb
inc
push
mov
or
mov
add
push
push
sbbl
movsb
rcl
sbb
inc
pop
sbb
push
or
ret
xrelease
mov
cld
fwait
cli
add
adc
mov
pop
out
ret
or
pusha
pop
vmovapd
push
mov
pop
mov
jge
sub
jmp
adc
xchg
cmpb
push
jbe
lock
or
cmp
add
fcmovbe
sarl
inc
jbe
mov
testl
jne
scas
icebp
mov
pop
pop
jae
sahf
jle
mov
cmp
rolb
push
out
call
orl
lods
or
je
or
adc
mov
jl
hlt
nop
xor
jl
and
pop
cld
mov
test
cmp
adcl
xor
lea
jbe
pop
inc
xchg
negl
adc
adc
jnp
aas
mov
push
test
icebp
xor
lock
cmp
icebp
fadds
jg
jns
inc
adc
or
xchg
jae
scas
mov
mov
nop
add
inc
cmp
adc
sahf
mov
jno
pop
jae
rorb
call
xchg
pop
push
add
xlat
jno
idivl
jb
jle
out
loopne
jg
inc
rcl
jle
push
lret
js
out
pushw
push
adc
xor
jle
pop
jp
push
and
fcoms
xchg
cld
pop
xchg
push
or
cmpl
shlb
pop
test
ret
push
pushf
jns
in
jne
or
jge
push
and
pusha
pop
in
aad
push
je
rorl
loop
jns
cwtl
xchg
and
pop
jbe
cmc
or
jg
shlb
pop
into
pop
xchg
xor
or
out
push
cltd
sahf
in
fdivl
notl
or
xor
aaa
stos
daa
in
pop
adc
lock
jno
jne
adc
mov
add
dec
rolb
push
xor
iret
push
stc
repz
add
cmc
and
repnz
sub
jne
repz
adc
mov
or
cmp
pop
jb
or
stc
test
push
adc
lock
movb
push
idivl
pusha
stc
or
mov
lock
stc
pop
hlt
xor
out
iret
cmpl
adc
pop
sub
mov
and
dec
dec
repz
std
out
and
xchg
push
mov
addl
sbb
cmpsl
inc
popa
scas
jl
adc
out
data16
mov
lods
orb
xor
xchg
outsb
or
mov
leave
xor
in
sbb
addl
sbbb
jmp
push
pushw
add
es
dec
cmpl
mov
sti
hlt
shll
sarl
fstl
jp
shl
adc
aaa
call
mov
js
mov
lret
stc
sarb
xorb
mov
stc
mov
mov
adc
xor
sub
dec
xor
ja
jno
js
push
jns
jno
hlt
fiadds
push
cwtl
or
ja
sub
aaa
out
sarl
fdiv
enter
hlt
mov
push
insl
jbe
mov
std
ja
xor
lcall
pop
add
sub
cmp
jecxz
inc
add
pop
xor
mov
or
adc
ficoml
xor
add
testb
adc
push
lret
iret
dec
fwait
mov
xor
cmp
mov
ljmp
xchg
xor
ret
add
pop
mov
scas
mov
push
es
ret
loope
in
add
mov
arpl
cltd
sahf
clc
cs
mov
push
jmp
dec
jo
pop
jp
and
jb
cmp
mov
outsl
mov
icebp
pop
dec
lret
and
adcb
xor
jmp
and
jb
mov
mov
dec
rcr
xor
pop
icebp
jp
or
jne
pop
sbb
mov
addr16
nop
icebp
jl
push
call
data16
clc
fcmovbe
push
pmaxsw
test
notl
cs
jne
inc
mov
mov
xor
jns
cmp
hlt
bound
decl
inc
xchg
orl
stc
adc
add
fstpt
dec
xchg
jne
pop
loop
jle
jp
out
adc
xorb
das
stos
xchg
das
xlat
pop
inc
inc
push
fdivrs
das
push
test
xchg
xor
aad
ljmp
insb
push
es
jle
cmp
mov
inc
and
into
je
xchg
dec
adc
or
jns
mov
aas
cmp
in
js
repnz
jg
mov
movsb
clc
clc
hlt
mov
push
rorb
movsb
xchg
in
jae
inc
mov
jb
int
add
push
icebp
lea
jp
jno
mov
out
jmp
and
add
cwtl
add
icebp
insl
lock
and
inc
push
sahf
sbbb
sbb
fnstsw
clc
pop
and
jb
call
popa
mov
or
shl
adc
ds
shlb
or
dec
pop
or
jno
xor
lock
rcll
sbb
jbe
xchg
or
fidivrl
mulb
mov
test
push
xchg
xchg
mov
add
or
xchg
dec
ljmp
or
aas
cmp
xchg
add
stc
js
les
xor
lock
cli
adc
cmp
leave
xor
xlat
mov
cmc
imul
inc
ret
clc
pop
cmp
sbb
push
jo
or
out
add
divl
xor
mov
jb
adc
add
std
hlt
mov
sarb
mov
xchg
je
adc
or
xor
lds
jmp
mov
in
cmp
scas
popa
ds
lahf
hlt
sarb
jbe
add
cli
aam
neg
and
adc
jno
enter
inc
hlt
pop
ss
fistpll
mov
xor
aad
repnz
mov
mov
lock
fwait
mov
xor
jno
clc
stc
jmp
push
test
lcall
and
adc
mov
nop
insl
push
xor
shlb
push
shl
fwait
inc
sbb
flds
jbe
hlt
jo
ficoml
add
test
popf
jmp
js
testb
jno
clc
scas
mull
sub
or
dec
jbe
sarl
xchg
rorl
xor
push
jae
sbb
jns
cmp
fcoml
mov
sub
test
mov
sbb
sbb
push
mov
ja
mov
test
inc
adc
or
push
dec
xchg
les
pop
jg
std
jp
push
icebp
jae
push
repnz
out
dec
sbb
filds
sti
aam
jb
dec
mov
arpl
cli
ja
and
cltd
adc
xor
mov
mov
inc
mov
sbb
or
pop
or
out
popa
outsb
cmp
adc
mov
clc
sbb
xchg
jo
mov
hlt
dec
pop
fwait
add
add
mov
cmpsl
fisttpl
in
and
xchg
xchg
movsl
test
or
jle
mov
pop
push
push
lods
stc
das
shrb
sahf
cmc
je
push
cmpsb
push
jle
dec
js
push
xor
cmp
and
dec
mov
clc
pusha
pop
andb
insl
sbb
mov
pop
dec
mov
add
icebp
test
adc
mov
mov
hlt
iret
xchg
cmp
out
into
out
idivl
cmp
push
sahf
lret
cmc
sub
addr16
mov
adc
jo
mov
bound
loop
adc
ja
adc
xor
insl
std
pop
adcb
addb
pop
cmpl
add
xor
push
dec
lock
adc
jno
shll
xchg
jge
test
push
push
adc
std
clc
cmp
insl
fstpt
pop
add
or
adc
adc
adc
cmpb
mov
push
andl
outsl
bnd
loope
movsb
xor
or
pop
and
ja
mov
cmp
adc
cmc
cmp
pop
fucomip
dec
pusha
icebp
adc
ja
fdivrs
pop
add
mov
xchg
in
or
lahf
popf
jo
mov
imul
sbb
movsl
xchg
sbb
pop
add
loopne
divl
cltd
sbb
xchg
or
movsb
das
loopne
mov
jle
pusha
movmskps
jle
xor
sahf
push
mov
addr16
inc
inc
or
jb
je
outsb
hlt
inc
pop
jno
sub
loopne
enter
and
add
scas
mov
xchg
jno
rol
xchg
mov
push
xchg
add
lods
mov
mulb
jae
jl
ja
jmp
sub
jae
xor
or
jnp
sub
jo
mov
hlt
aam
cmp
dec
movsl
stc
into
xorb
xchg
adc
xor
cmpsb
adc
fidivl
sub
push
loopne
adc
lock
sahf
jns
repnz
shll
mov
bnd
lea
jle
add
jne
loop
popf
fstps
icebp
inc
nop
adc
pop
xlat
jle
add
outsb
adcl
jmp
mov
ret
daa
push
cmp
enter
mov
and
pop
sub
insl
rcl
lock
lock
add
test
hlt
xor
mov
mov
push
sub
icebp
mov
jae
or
sub
and
add
insb
repz
xor
sbb
cmp
mov
sbb
arpl
add
push
pop
lcall
adc
inc
add
hlt
inc
fidivl
mov
and
xchg
cwtl
icebp
inc
in
push
scas
sub
push
jle
pop
xchg
sbb
lods
mov
mov
adc
cmp
or
push
int
pop
sbb
jno
push
cwtl
into
jae
mov
push
cmp
xchg
adc
lahf
lock
or
and
insl
mov
xor
int
inc
sub
dec
mov
pop
aam
out
stc
jbe
cmpsb
daa
cmc
xor
sub
lock
add
pop
adc
and
xchg
sahf
jno
add
and
testb
and
xor
mov
test
mov
adc
dec
sub
sbb
add
cltd
aam
push
jle
sub
arpl
sbb
dec
adc
inc
dec
daa
adc
lret
sahf
xchg
lahf
mov
jecxz
or
mov
sbb
or
sbb
fwait
pop
clc
inc
repnz
push
mov
ja
push
jmp
add
idivl
sbb
xchg
xor
cmp
inc
xchg
mov
or
and
jb
push
pop
jl
and
and
inc
pop
jbe
xor
sbb
je
js
sub
aas
dec
pop
and
int3
and
pop
hlt
cld
jp
or
hlt
jno
popl
pop
rolb
cmp
pop
pop
icebp
aam
inc
mov
push
mov
mov
jae
shl
mov
call
sar
gs
xor
xchg
fisubrl
jbe
in
scas
or
or
pusha
push
bound
cmp
aas
add
xor
push
mov
cld
jecxz
sbb
mov
push
inc
dec
lock
sbb
inc
jp
jp
xor
out
pop
mov
mov
xor
sti
sbb
in
jo
pusha
addr16
jecxz
rcll
dec
and
lcall
fwait
and
rorl
hlt
in
pop
cmpsb
dec
fisubrl
mov
repz
inc
and
cld
pop
cmp
out
push
ja
shrl
add
add
mov
mov
ja
push
pop
xor
pop
sbb
adc
scas
xchg
push
fwait
repz
jbe
push
or
setp
dec
hlt
jg
xchg
in
iret
bound
frstor
loope
or
mov
adc
stos
mov
push
dec
add
mov
popa
dec
inc
shlb
fwait
mov
fbstp
adcl
mov
fcoms
and
adc
mov
or
jecxz
mov
pop
int3
orb
pop
jns
repnz
fwait
inc
mov
insl
mov
stc
mov
repz
xor
mov
aas
or
out
mov
xor
mov
sub
js
lods
out
testl
mov
mov
cmpsl
sbb
je
les
movsl
cmp
inc
repz
sbb
mov
sub
xor
jb
inc
std
cmpb
adc
and
sti
mov
std
ja
arpl
mov
pop
cmp
leave
fs
jne
xchg
pushf
cmp
repz
shrb
pop
mov
xchg
or
xor
dec
loop
lods
push
xor
imul
cmp
int
inc
inc
mov
xchg
jo
cli
repnz
ja
sbb
loopne
adc
push
nop
repnz
loop
xor
adc
addl
int3
shlb
jb
aas
mov
adc
insl
mov
cmp
cmp
addr16
push
call
mov
enter
mov
cwtl
adc
adc
sbb
nop
pop
add
adc
mov
lcall
jne
xchg
or
add
jno
ja
lcall
mov
or
imul
aam
mov
mov
rol
nop
xchg
pop
adc
push
and
stc
enter
adc
add
mov
add
xchg
js
mov
jo
iret
pop
scas
xchg
xchg
insl
stos
and
xor
mov
test
push
xor
jle
dec
les
adc
inc
xchg
cmp
xor
out
clc
xor
fsts
sub
inc
dec
fldenv
icebp
lret
test
mov
fwait
aas
cmp
mov
add
std
add
jl
adc
fs
pop
testb
mov
rorl
push
cmc
cmp
add
jl
pushf
iret
repz
dec
wbinvd
xchg
jns
cs
pushf
pop
inc
sarb
pop
xchg
insl
scas
xor
mov
jg
jg
xchg
std
cltd
xchg
pop
flds
enter
js
int3
xor
sti
adc
xchg
repz
xor
and
repnz
sbb
xchg
jno
lods
jb
cwtl
xorb
push
mov
lcall
add
bound
inc
adc
ljmp
fldt
sub
fldcw
add
shlb
inc
xchg
scas
adc
roll
adc
mov
fcoms
mov
inc
test
or
jle
jecxz
ss
js
mov
cmp
ret
imul
xor
clc
cwtl
jbe
inc
pop
out
mov
xor
out
mov
aam
pusha
outsb
add
mov
maskmovq
testl
dec
adcb
pop
mov
mov
cwtl
or
xchg
jb
pop
cmpb
dec
insl
setp
jno
stos
aaa
hlt
xor
push
test
addr16
add
dec
mov
test
cmp
dec
cmp
outsb
les
shlb
or
add
pop
repnz
mov
xor
call
pop
jo
mov
cld
outsl
js
dec
push
repz
je
xchg
or
adc
mov
adc
dec
mov
outsl
xchg
jb
jno
divl
fisttpll
icebp
inc
addr16
cmpsl
pop
dec
inc
testb
test
xchg
mov
pop
xor
inc
xor
or
filds
mov
push
scas
aaa
adc
test
in
sub
lret
push
test
dec
cltd
clc
int3
sub
mov
cmp
or
add
adc
test
stc
jo
mov
inc
push
lret
dec
and
dec
xchg
jp
mov
xor
adc
sbb
and
vphaddbd
add
mov
and
jg
lea
out
bound
cmp
dec
stos
push
fdivl
jle
jl
mov
xchg
daa
mov
lahf
push
jno
push
push
popa
add
sub
pusha
xchg
outsl
dec
lcall
mov
in
add
pop
test
iret
cli
das
jne
push
mov
dec
icebp
inc
sbb
nop
fwait
xchg
scas
out
jns
xchg
andb
adc
mov
inc
nop
repz
pushf
popl
lods
dec
adcb
or
jnp
jl
jb
xchg
pop
xorb
and
jp
xchg
fs
jle
push
adc
pop
xchg
in
jecxz
shll
cs
mov
sahf
dec
loop
mov
lock
repz
xor
dec
or
arpl
pop
add
addr16
sub
sub
pusha
jb
lcall
xor
and
imul
xchg
imul
pop
cli
xchg
inc
dec
repnz
repz
cld
jl
je
pop
mov
inc
repz
xchg
into
idivl
fisttps
outsb
jae
pop
cmp
aam
enter
cmp
mov
jae
jl
sti
pusha
movsb
ror
xchg
aas
mov
lds
add
scas
inc
and
pop
jl
mov
jo
inc
fildl
pop
cli
pop
lcall
cltd
cmp
repnz
push
clc
out
xchg
add
sub
inc
xor
shl
ror
insb
icebp
js
xor
and
clc
rcrl
or
movsb
sbb
xchg
xor
xor
mull
dec
sub
sbb
flds
inc
fdiv
jno
cmp
dec
popa
and
or
xchg
nop
jle
adc
xor
insl
mov
cmp
or
fdivp
and
mov
rorl
add
jb
adc
shll
aad
cld
inc
inc
aam
nop
push
mov
mov
jns
stc
cltd
subl
mov
pop
dec
andb
mov
out
sahf
jns
dec
or
inc
cli
fmull
jle
shl
cld
add
add
jne
dec
xchg
mov
xchg
jb
pop
add
add
xor
data16
and
mov
pusha
and
sahf
rcrb
sahf
pop
hlt
jno
sbb
adc
sub
xor
mov
out
mov
popl
mov
popa
js
hlt
xchg
aam
out
insl
cmp
call
mov
adc
addb
jg
sub
cwtl
std
lods
adc
xor
fidivrs
cmp
aaa
dec
out
mov
mov
inc
rorl
cmp
jge
mov
stc
rcr
mov
aad
and
jbe
lock
xchg
pop
mov
fstp
sbb
push
sub
mov
ljmp
call
and
fisttpl
dec
repz
enter
dec
movsl
cmc
fnstenv
ss
add
mov
add
xchg
test
aam
jmp
push
add
cmpsb
fdivrl
pusha
lcall
lods
mov
cmp
ret
negb
mov
xchg
cltd
jle
jl
jle
mov
lahf
enter
out
pop
xor
mov
ljmp
cld
sub
cwtl
dec
dec
aaa
adc
mov
adc
into
shlb
lock
and
fwait
test
xor
xchg
cmc
enter
call
icebp
jno
pop
scas
lret
iret
fsubr
stos
popa
cmp
stc
sar
cmpsb
int
mov
cld
jge
inc
push
mov
lcall
mov
jge
cwtl
mov
scas
cmc
dec
adcb
inc
repz
mov
jbe
pop
mov
sbb
cld
je
cwtl
insl
xor
jb
popa
ja
jns
outsb
jp
stos
mov
cmpsb
lods
icebp
or
ds
push
test
out
add
sub
pop
mov
mov
fiaddl
pop
adc
ret
add
and
push
xchg
xorb
pop
mov
add
mov
xor
jo
xchg
lret
and
pusha
push
dec
sti
addl
mov
lret
inc
push
sbb
stc
cmpb
sbb
cmpsl
mov
pop
mov
daa
xchg
jns
icebp
push
mov
ret
inc
ret
add
pusha
jb
adc
cmpsl
add
hlt
xorb
mov
mov
mov
in
xchg
cmpsl
jo
out
addr16
insb
add
je
pop
and
push
aad
sbb
jo
xchg
inc
xor
jne
pop
add
fildl
pop
std
sub
fisttps
dec
scas
push
sub
lods
or
sub
mov
mov
pop
mov
mov
lea
fisubs
or
adc
mov
shrb
jmp
mov
inc
xchg
push
or
fld
inc
dec
fistps
adc
xchg
xchg
cmc
push
jle
mov
jle
xchg
xor
and
pusha
pop
sub
lods
loop
adc
sbb
and
or
jle
sub
icebp
in
loope
add
adc
into
jl
das
mov
xor
jle
inc
mov
xor
pop
loopne
jge
fcomps
jo
mov
lret
stc
jae
les
xor
inc
push
jnp
pop
stc
or
cmp
adc
ret
mov
icebp
sub
add
adc
cwtl
mov
cwtl
mov
mov
mov
pop
ret
adc
jl
dec
or
or
ret
xor
shll
sub
sub
push
pop
dec
pop
insl
adc
xor
mov
push
dec
xchg
mov
dec
mov
ret
es
jg
idivb
push
pop
cltd
popa
jns
pop
and
push
jb
xchg
push
jb
dec
push
daa
std
clc
cld
data16
sub
push
dec
punpckhwd
ss
call
fsubrs
lock
out
adc
inc
or
inc
mov
adc
sbb
ds
xor
xchg
jle
push
outsb
ret
xor
cli
inc
xor
mov
daa
jl
adc
xchg
xor
adc
bnd
dec
or
repz
jg,pn
in
or
popf
sbb
in
lock
mov
pop
jge
pop
push
jecxz
test
pop
fdivr
into
andl
inc
stc
adcb
push
and
mov
ret
ficomps
fldcw
into
clc
aad
ret
in
and
pop
push
sbbl
jno
jns
mov
hlt
popa
and
xor
scas
inc
and
aad
push
add
pop
push
rcll
popa
fidivl
or
mov
inc
add
jno
jbe
xor
cld
loopne
and
cld
sub
mov
xchg
pop
lea
sub
out
sti
mov
xlat
mov
push
outsb
nop
subb
push
mov
or
jno
mov
out
adc
sbb
or
shl
xchg
cmp
sbb
jecxz
add
pushf
inc
fcomip
mov
popf
out
ret
push
adc
sbb
addb
xchg
addr16
xchg
jno
in
push
lahf
add
mov
push
call
mov
dec
int3
lcall
dec
mov
and
arpl
ds
sub
rolb
dec
in
lcall
xchg
or
sbb
mov
mov
jbe
push
mov
adc
lahf
mov
cs
xor
es
cltd
insl
jns
cwtl
lahf
fstpt
jae
inc
test
add
arpl
icebp
test
jg
sahf
pop
cmp
xchg
inc
dec
or
fwait
mov
push
out
leave
in
lods
out
popa
adc
xor
cs
movsb
scas
and
sti
shl
xchg
sbb
cmp
out
mov
js
adc
xor
les
push
jnp
mov
lahf
cmpl
jle
mov
in
sti
cs
add
insb
sbb
mov
add
jo
int3
cmp
cmc
inc
int
push
add
xor
mov
adc
add
or
ficoms
mov
fistl
adc
mov
mov
mov
lret
jmp
mov
jno
in
aam
push
xchg
cwtl
lock
bound
lds
sbb
push
pop
push
inc
xor
dec
sub
inc
sub
icebp
or
jmp
push
stos
mov
fadds
xchg
popa
mov
enter
cmp
inc
mov
lock
inc
jle
scas
pop
jg
jns
jne
fmull
dec
movsb
jle
fmull
loopne
call
mov
jns
cmp
sub
adc
movsb
cmp
xor
lods
xor
fisubl
rcr
mov
js
in
clc
je
les
push
push
xor
adc
out
repz
xor
fcom
mov
pop
adc
inc
mov
dec
pop
ds
nop
push
inc
hlt
lea
sar
sbb
dec
xlat
xlat
cltd
mov
dec
pop
add
icebp
addr16
add
dec
jo
jb,pn
fdivp
cmp
push
rcrl
mov
js
pusha
dec
rsqrtps
mov
jl
ss
in
jl
xor
and
dec
out
negl
rclb
mov
sar
inc
test
dec
arpl
mov
mov
popa
outsl
sbb
fwait
lea
lods
pop
adc
data16
and
lret
and
inc
jp
dec
xchg
add
dec
xor
lock
ficoms
sbb
gs
push
inc
popf
test
outsb
lock
int3
mov
clc
and
xchg
lock
jecxz
mov
clc
mov
push
xchg
inc
add
dec
jle
xor
mov
stc
xchg
jb
and
rcll
stc
xchg
sti
push
lret
sbbb
mov
push
jp
push
int3
popa
outsb
mov
mov
fwait
add
ja
fadds
pushf
lock
sbbb
xor
clc
lahf
outsb
mov
sahf
dec
ficoms
push
outsb
repz
in
push
push
xor
xchg
push
xchg
cwtl
push
mov
mov
test
and
adc
adc
adc
xchg
cmp
les
insb
sbb
inc
repnz
js
and
jno
lea
sub
bound
lcall
adc
in
imul
mov
ds
dec
fstp
out
sahf
std
xorb
pop
pushf
pop
pop
jb
jb
je
sbb
hlt
add
xor
movsb
xchg
push
daa
test
adc
js
mov
adc
add
push
sub
or
fxch
hlt
pop
in
bound
mov
hlt
sbb
pop
lds
into
adc
or
inc
push
ficoml
mov
ja
pop
mov
cmp
jg
add
cmpb
push
mov
scas
cmp
or
sub
or
add
jl
jae
xchg
popa
rolb
inc
sub
aas
test
or
cmp
ljmp
loope
inc
loopne
fdivrs
push
fs
sti
sbb
inc
pop
push
or
add
push
jle
add
push
mov
cwtl
in
mov
xchg
inc
dec
xlat
inc
sbb
inc
xchg
push
aad
roll
push
stos
aaa
mov
dec
stos
sbb
cmc
clc
cs
repz
pop
pop
xor
lods
test
mov
adc
xor
imul
imul
jb
or
imull
testl
cmp
fs
jl
xor
adc
jae
sbbb
lahf
daa
iret
cmp
dec
je
fs
jns
popf
fcmovb
icebp
shlb
pop
mov
repnz
add
mov
fistl
clc
pusha
call
jnp
cmp
or
iret
mov
repnz
mov
sub
je
cli
cmc
call
rcl
add
gs
lds
add
pusha
test
es
sahf
sbb
fucomp
dec
test
sahf
je
jb
cmp
addps
aam
xchg
cmc
rcl
push
dec
xor
xor
pop
inc
jge
add
out
xor
fadds
cltd
or
bound
add
clc
sarl
jle
popf
mov
or
xor
in
add
movsl
cld
sbb
xor
cmp
sahf
xchg
inc
lcall
rcrb
inc
jno
js
adc
xor
into
add
dec
shll
jno
dec
mov
test
rclb
and
mov
xchg
rorb
xor
imul
adc
leave
jb
mov
and
cmp
xchg
mov
bnd
movsb
cmpsl
rcrl
and
sub
clc
cmp
inc
mov
icebp
mov
adc
push
or
loopne
orl
shll
mov
test
fnsave
lret
pop
sahf
jmp
and
aaa
clc
xor
divb
mov
dec
je
xor
es
add
stos
fs
mov
aam
adc
fldcw
mov
aam
push
mov
mov
jg
and
ljmp
mov
imul
jne
mov
dec
adc
addr16
iret
pop
fwait
jno
js
insl
cmp
js
fs
or
orb
xor
loope
jle
insl
sub
push
push
packuswb
adc
cmc
fdivr
mulb
jb
shll
mov
xlat
xlat
pop
push
jno
js
jl
push
pop
jmp
stos
das
mov
fwait
jnp
fimuls
push
cmp
imul
add
rclb
xor
sub
cmpl
add
xor
inc
in
push
icebp
addb
mov
cmp
addb
loop
jne
arpl
add
insl
dec
js
popf
inc
cmp
lock
testb
js
iret
mov
shll
dec
in
stos
jb
and
xor
sub
xor
jmp
cmpl
in
mov
and
push
bnd
rolb
jg
or
icebp
mov
or
jne
je
std
pop
lds
pop
adc
js
jl
fldenv
xchg
cmp
mov
shlb
fwait
mov
or
lock
in
mov
dec
rcll
into
dec
pop
in
arpl
xor
movsl
pop
adc
jg
lods
jae
cwtl
mov
adc
inc
std
push
jbe
testl
mov
hlt
idivb
jns
js
call
push
add
repz
ret
iret
jl
mov
xchg
mov
movsl
in
call
movsb
or
fadd
cmp
dec
or
mov
jg
pop
jo
std
add
sarb
xor
add
test
mov
and
lock
add
or
mov
dec
xchg
xchg
aad
mov
add
xchg
mov
cmp
fdivr
add
and
stc
mov
jp
sub
lock
fsts
mov
cmp
test
cmp
dec
or
ficoml
cmp
adcb
fstl
cs
cmc
adc
mov
mov
repz
adc
jns
pop
and
cwtl
pop
repnz
xchg
mov
sbb
pop
cwtl
push
adc
mov
cwtl
lahf
inc
lock
xchg
mov
hlt
test
jbe
in
mull
not
sarl
xchg
sbb
and
push
and
lock
mov
xor
push
jo
adc
stc
or
and
jno
mov
xor
daa
dec
jo
lock
nop
movsl
inc
stc
fcmovb
out
mov
add
rolb
or
test
push
dec
push
jnp
cmp
jae
pop
popf
adc
push
add
mov
mov
xchg
jge
sub
mov
nop
pop
fdiv
push
add
adcl
test
cmc
jns
cmp
add
pop
daa
nop
lods
xchg
shrl
add
push
xchg
jle
dec
inc
and
addb
add
or
or
mov
dec
repz
push
add
push
dec
and
mov
sbb
adc
std
mov
outsl
or
cmpsb
sub
mov
insl
aas
popa
or
inc
add
repnz
push
mov
insl
sbb
adc
push
in
adcb
push
mov
pop
add
inc
movsl
fistps
subb
movsb
fdivs
mov
and
movsl
lret
xchg
data16
movsb
push
aam
cltd
lea
xchg
adc
cmp
cltd
push
jo
cli
clc
std
jecxz
mov
sbb
mov
out
cs
jns
stc
or
icebp
in
sbb
cwtl
cmpsb
adc
cwtl
js
fld
addr16
pop
setns
jns
fidivs
pop
jge
mov
push
pop
jp
cmp
dec
cmpb
stc
iret
stos
pop
lcall
sbb
cmp
faddl
cmc
dec
sbb
stc
pop
jns
sbb
or
or
out
cmp
clc
cwtl
inc
pop
or
jnp
cmc
shll
sbb
addr16
xor
icebp
pop
cli
das
and
sti
mov
ds
xor
xchg
jge
jle
out
mov
sub
dec
in
jae
sti
mov
lcall
hlt
sub
cwtl
push
popa
sbb
jmp
or
inc
push
and
in
inc
pop
mov
icebp
incb
adc
sahf
popf
aad
cmp
pop
fldcw
imull
jecxz
xchg
push
aad
mov
mov
jno
add
adc
mov
cli
sub
or
fadds
test
mov
mov
int3
js
cmpsb
push
jnp
jnp
hlt
push
pop
sbb
inc
push
pop
cmp
leave
pushf
mov
mov
sahf
mov
das
test
inc
or
xor
and
mov
xor
mov
aas
mov
mov
orl
jbe
mov
dec
inc
xor
mov
xchg
or
lods
cltd
popl
cmp
rcrb
inc
outsb
xor
and
or
aad
daa
dec
movsl
jl
iret
repz
data16
xchg
jo
pusha
scas
add
pop
cltd
mov
mov
jg
adcl
scas
ljmp
stos
aaa
loop
je
xor
adc
mov
and
push
fdivr
cmp
adc
or
cltd
push
cmp
jp
fimull
cmpb
aad
adc
mov
rclb
xor
lock
xchg
sahf
xor
es
jae
movl
inc
bound
push
loope
repz
adc
jmp
pshufw
cltd
or
test
mov
cmp
mov
mov
mov
daa
add
fnstcw
shll
lret
cmp
call
out
sti
mov
or
pop
mov
mov
inc
mov
prefetch
and
sahf
xchg
xchg
pop
and
add
add
pop
adc
daa
ss
mov
jecxz
test
in
add
mov
adc
xchg
xchg
test
jl
jnp
push
xor
sahf
mov
dec
and
repz
jl
mov
cwtl
add
ja
loopne
shll
or
ljmp
push
sub
or
push
xorl
xchg
or
cmp
out
add
das
adc
cwtl
xor
cmpsb
cmp
bnd
jae
inc
jne
push
daa
pop
xchg
xchg
pop
inc
pop
in
mov
dec
ffreep
fidivrl
notl
lock
lea
jb
rcr
add
in
and
lock
dec
pushf
cwtl
jl
xor
mov
out
aad
cltd
test
repz
flds
inc
mov
add
cmp
xor
mov
mov
lock
adc
push
scas
add
jae
enter
loope
xchg
fildl
pop
icebp
mov
jno
test
xchg
mov
xchg
mov
cwtl
push
xor
cwtl
adc
aad
pop
js
inc
stc
mov
mov
outsb
push
call
nop
xor
xor
pushf
mov
data16
inc
test
or
sbb
fiaddl
sub
icebp
sub
and
mov
cwtl
mov
adc
clc
mov
hlt
orl
cwtl
cmc
pop
or
jo
js
pop
fld
insb
or
pop
dec
aaa
loop
push
cmp
add
lods
les
dec
jge
icebp
addl
adc
icebp
mov
add
js
lahf
pushf
addb
fwait
jp
andb
xor
adc
rcll
dec
into
fstl
call
int
jnp
sbb
or
adc
xor
roll
enter
pusha
roll
fisubl
movswl
xchg
scas
jmp
inc
xor
ljmp
ja
mov
mov
and
cwtl
xchg
adc
mov
loopne
push
jnp
add
addb
or
lods
xor
xchg
mov
adc
rorb
mov
scas
jp
lea
mov
aad
mov
rcrb
xor
test
jle
cmp
cld
js
xor
ret
xchg
mov
adc
add
add
ret
stc
jle
out
mov
or
adcb
faddl
lock
pop
ret
pop
cmpsb
stc
xor
cmp
and
cmovg
popf
test
and
hlt
cmp
dec
stos
cli
imul
add
add
aad
mov
xorl
aas
js
sbb
mov
ja
xchg
lock
xchg
or
loopne
js
je
add
pop
xchg
dec
mov
mov
adc
loop
or
mov
pusha
inc
nop
sahf
pop
pop
outsl
insb
xchg
cmp
in
arpl
loop
xor
cmc
xor
lea
xchg
xor
jno
sub
loop
adc
fwait
sahf
outsb
andb
adc
fstpl
sub
pop
ja
jb
lods
push
xchg
jae
jl
mov
sub
cmp
pushf
stc
sar
sbb
pushf
xchg
sti
jle
push
icebp
inc
cmp
fidivrs
cli
hlt
pop
pop
sbb
jnp
ds
mov
out
sbb
lret
mov
popf
and
sbb
jge
int
ljmp
mov
xor
xchg
addl
iret
dec
push
std
adc
sti
fcomps
fnstsw
int3
ficoms
adc
std
inc
fcompl
xchg
stc
popa
hlt
sbb
pop
test
imul
and
xchg
sahf
lahf
xchg
xchg
clc
sbb
sbb
pop
add
and
scas
in
xchg
std
cmp
nop
fdivrl
adc
pushf
addr16
xchg
push
bnd
imul
cld
xlat
rorl
pop
inc
fstps
ljmp
and
popf
cmpb
dec
lea
pop
sti
pop
test
call
aam
jmp
pop
int3
popa
xchg
mov
adc
xor
insb
stos
adc
sahf
sub
dec
jo
loopne
mov
mov
loopne
repz
cld
stc
inc
aad
add
in
jmp
pusha
pushf
add
jo
or
jo
daa
repz
cmp
xchg
cmp
repz
lcall
sub
cmp
lret
pop
lret
xchg
test
insb
and
fbld
jbe
jne
sub
adc
aad
xchg
out
ja
mov
mov
rorb
xchg
and
xchg
sbb
out
adc
sub
xor
pause
int3
sahf
jnp
fcmovne
add
pop
push
pop
in
lock
lcall
rclb
ficoml
in
jo
adcb
add
adc
idivb
imul
mov
je
int
mov
test
clc
lods
ja
and
adc
xor
push
jo
clc
ret
test
div
xchg
adc
or
js
xor
mov
mov
push
je
mov
or
mov
ds
adc
mov
out
call
xchg
add
sbb
pop
inc
icebp
or
mov
int3
xorl
adcb
jb
aam
sub
add
scas
inc
je
mov
and
sub
mov
adc
icebp
roll
js
xor
xor
lea
outsb
adc
sub
sahf
orl
mov
cmp
sahf
xor
sbb
mov
lret
inc
mov
jb
adc
dec
repz
add
mov
pop
jb
adc
lock
or
rol
fidivs
std
insb
cmp
lret
adc
push
movl
xchg
js
sbb
add
jg
js
inc
les
jge
mov
adc
in
fwait
mov
dec
out
mov
xchg
push
sub
cmp
mov
xor
push
push
add
insl
jne
xor
aam
inc
sbb
or
mov
and
repnz
adc
shlb
jne
xchg
ret
fdivrl
mov
or
jg
mov
jo
xchg
adc
dec
out
mov
ja
xor
jle
and
icebp
cmp
mov
sahf
fcompl
out
pop
jge
pop
adc
fbstp
jge
mov
in
clc
add
jle
lods
mov
lock
mov
pop
testb
mov
xor
sbb
pop
arpl
dec
shl
push
mov
cwtl
fisubrs
xor
cmc
xchg
xchg
mov
sub
addr16
mov
popa
or
sbb
stos
push
enter
jno
arpl
aam
dec
fisubs
pop
sahf
ret
repz
bound
and
cmp
adc
sub
test
jne
test
adc
mov
test
movsb
orb
mov
xor
or
sbbl
mov
jl
femms
xrelease
shlb
add
mov
add
pop
add
xlat
inc
dec
imul
pop
cltd
xlat
push
mov
pop
imul
iret
mov
jnp
xchg
fcomps
mov
adc
sarb
or
or
or
adc
fs
mov
dec
idivb
mov
or
inc
in
outsb
ss
dec
mov
js
xchg
jno
call
aam
loop
add
mov
mov
dec
mov
push
cs
mov
outsl
cmp
ss
push
adc
or
cmp
jb
push
adc
xchg
cmp
pusha
add
and
shll
aad
addl
sub
subb
mov
or
mov
insl
mov
jnp
jo
mov
jg
mov
dec
aam
sbbb
mov
or
fdivs
mov
dec
jmp
test
jbe
inc
nop
or
push
ret
movsl
inc
jb
inc
sbb
andl
mov
out
test
jp
xlat
cmp
xchg
add
push
mov
pop
fsts
and
aam
push
push
xchg
push
adc
jb
jne
test
lcall
or
or
gs
cmp
rcrb
leave
fnstenv
out
jle
xlat
or
cmpsl
xor
mov
mov
add
mov
sahf
xchg
shlb
adc
sub
jl
jl
cmp
fwait
adc
int3
mov
mov
adc
dec
sbb
push
jnp
pop
scas
xor
out
cmp
jo
xchg
movl
jns
out
aaa
jno
subl
sub
pop
xchg
hlt
xchg
cmc
xor
mov
sbb
lock
xchg
inc
cmp
and
shll
in
mov
mov
testb
les
mov
sub
out
adc
lahf
pop
out
pop
bound
xchg
inc
mov
lods
jns
lcall
pop
into
mov
dec
xchg
sar
mov
push
pop
push
or
pop
mov
insl
insl
adc
push
jg
lret
test
mov
pop
shrl
pop
add
mov
repz
adc
add
pop
and
addl
and
jae
xchg
je
fnstcw
aaa
xchg
ja
xor
cmp
ja
push
adc
cmp
add
xor
rcrb
xchg
jnp
jns
pop
aaa
cli
das
fisubl
test
sbb
fcmove
inc
ficoms
mov
pop
adc
xchg
das
jns
and
inc
out
mov
cs
into
jmp
stc
jns
cs
xlat
cmp
ss
cli
sub
sub
and
mov
lret
sub
push
icebp
mov
mov
mov
adc
mov
jb
gs
stc
dec
jno
mov
pop
pop
daa
jae
mov
mov
in
mov
mov
jbe
divb
popa
ja
js
add
iret
jbe
fadds
test
out
cld
imul
mov
fnsave
js
bound
push
icebp
mov
aaa
sub
xchg
jne
icebp
gs
or
mov
js
mov
cmpsl
sbb
sti
in
repz
dec
data16
cmp
insl
xchg
mov
adc
inc
lahf
bound
xchg
mov
lret
mov
je
sbb
or
xor
aad
test
das
in
add
shll
mov
pop
into
fnstcw
mov
dec
loope
xor
add
sub
cs
daa
and
xchg
mull
dec
popa
sub
jmp
mov
out
mov
pusha
je
add
ror
adc
ss
test
adc
jbe,pn
loope
icebp
loop
add
mov
jle
push
stc
and
daa
cmc
pushf
xor
adc
xchg
pop
and
cmc
add
ljmp
mov
cmp
mov
je
loope
cmp
pop
shl
call
aaa
cwtl
jp
fwait
xchg
mov
cmp
mov
mov
mov
sub
mov
test
pop
jg
lds
negl
jbe
inc
sub
mov
push
mov
cld
adc
mov
dec
and
inc
out
jmp
jl
inc
je
andl
push
mov
insl
fwait
shl
dec
jbe
in
sbb
mov
lea
push
and
xor
jne
inc
mull
in
sub
loope
bound
adc
mov
data16
sahf
jb
inc
shlb
in
adc
jmp
or
mov
sahf
xor
mov
mov
jno
jle
xchg
aam
xor
adc
xchg
pop
rclb
aam
cmc
fidivrs
std
ret
inc
adc
popa
xchg
sub
lds
pushf
cmp
mov
mov
push
push
test
dec
mov
in
and
loopne
gs
sahf
cmp
sbb
fcmovne
inc
pop
fsubrl
lret
dec
lock
mov
pop
repnz
mov
lock
nop
hlt
adc
out
mov
mov
sub
loop
mov
lahf
pop
jae
push
stos
push
jne
xor
insl
mov
outsb
pop
cld
sub
ja
add
adcb
fistps
mov
cmp
xor
out
pop
sbb
bnd
pop
enter
cmp
data16
add
pushf
jp
out
shlb
scas
ret
or
cmp
push
mov
loope
jecxz
ljmp
ret
push
add
loopne
lds
ds
lret
xchg
sub
mov
aas
nop
scas
push
sbb
mov
ret
push
jl
cmc
je
jnp
rcrb
pop
rcrb
or
mov
xlat
xor
pop
jns
mov
inc
jbe
rcrb
outsb
inc
aad
xor
sub
rol
outsb
jnp
icebp
push
push
insl
push
push
pop
pop
mov
pusha
add
xor
push
mov
loopne
push
add
sbb
add
xchg
cmp
pop
inc
lock
js
lock
pusha
psubusb
int
mov
cmpsb
inc
cmp
mov
test
jb
add
test
mov
jl
loop
xchg
xchg
negb
push
aam
lahf
js
fcoml
lahf
icebp
xchg
repnz
and
js
inc
scas
aas
mov
cmp
repz
sarb
xchg
adc
cmp
or
mov
sti
cmp
test
jno
xor
and
into
lock
cmp
and
ss
addb
loopne
movb
dec
roll
lcall
inc
ficoml
add
inc
hlt
or
in
fldcw
ja
jle
inc
xchg
sahf
mov
jne
adc
and
jnp
mov
ss
stos
enter
add
cmp
jns
sub
inc
adc
jns
ret
cltd
xchg
cmp
andl
jo
insb
cs
fcomps
hlt
jb
arpl
mov
movsl
push
dec
mov
xor
and
js
or
ja
push
mov
mov
cmp
leave
sbb
mov
hlt
mov
subl
aam
fwait
scas
mov
sub
xchg
fbstp
push
hlt
xchg
add
mov
jb
sub
xchg
mov
xchg
inc
lock
jae
js
ret
xor
push
cmp
andb
push
aas
jo
ds
adc
repnz
jnp
test
dec
and
mov
push
repnz
js
xchg
shlb
cli
outsl
adc
rorb
mov
xchg
fwait
xor
shll
jbe
pop
std
cwtl
or
push
pop
mov
lahf
daa
jb
js
dec
xchg
sbb
jle
mov
sub
push
sbb
dec
sbb
repz
add
je
cmp
loop
aaa
sub
sbb
jnp
mov
inc
adc
adc
xchg
nop
xlat
pop
fstpt
and
inc
adc
negb
sbb
xchg
dec
fstl
pop
sar
inc
nop
jnp
sbb
in
sub
data16
add
mov
sbb
or
loopne
sub
fldenv
nop
jmp
sub
mov
stc
xchg
andb
jns
shlb
xchg
jo
xor
cmc
mov
fwait
push
mov
lret
mov
xchg
rorl
lahf
mov
and
outsl
add
sub
idiv
jle
loope
adc
xor
mov
es
dec
ficompl
sbb
push
roll
incb
sahf
fdivl
dec
inc
xor
rcrl
cmpsb
jno
inc
lcall
rcrb
in
mov
cmp
or
xor
test
inc
mov
dec
xor
psubb
je
push
inc
stos
andl
jo
mov
push
adc
stos
mov
fnstenv
lcall
sahf
sbb
mov
pop
xor
lret
sub
cmp
jle
mov
les
insl
push
mov
ret
add
mov
das
fcmovu
add
adc
sahf
xor
xchg
lods
in
ficompl
or
sub
aaa
inc
je
inc
jg
jne
adc
notl
add
psubusw
imul
sahf
jae
fdivrl
push
cmp
adc
or
ret
lahf
and
sbb
ja
lock
repz
adc
movsb
cld
rolb
xor
sbb
add
jle
cmp
mov
dec
sbb
test
xchg
sbb
push
or
jb
adc
outsb
push
pop
cmp
adc
shlb
mov
lcall
aam
mov
push
fmuls
sub
daa
cs
lret
sahf
mov
mov
jne
dec
push
pusha
jl
push
dec
adc
jp
test
mov
cmpsl
dec
andl
jb
aam
shrb
pushf
mov
lock
mov
xor
fistpll
cmpsl
dec
clc
negl
test
ja
add
fbstp
xor
fdiv
fimuls
lahf
outsb
xor
fadd
jo
es
lea
inc
rcll
mov
sahf
or
fsts
cli
test
mov
nop
pop
sahf
sahf
adc
aaa
jbe
pop
and
mul
les
pusha
leave
mov
push
mov
xor
inc
jp
mov
push
std
and
and
mov
lds
notb
inc
ret
insb
scas
lea
adc
fadds
ret
adc
mov
add
sub
jnp
ret
pop
xor
in
sbb
push
pop
call
lock
pop
repz
nop
ds
jg
add
adc
cmp
out
mov
mov
lock
notl
mov
fucomp
adc
adc
dec
ja
lods
adc
ja
jno
ss
clc
mov
mov
pop
jno
lcall
sub
je
or
mov
add
pop
jl
jne
cmpb
or
test
xor
jle
out
rorl
cmpl
shl
jb
rcrb
pop
inc
or
push
gs
xorl
out
aad
xchg
icebp
sbb
movsb
push
pop
mov
inc
ret
adc
sbb
int
icebp
or
pop
int3
sub
and
subl
mov
jl
adc
add
mov
mov
pop
mov
test
cmc
testl
js
inc
insb
adcb
insl
stc
lret
ror
addr16
inc
jge
xlat
pop
or
mov
es
mov
pop
push
inc
lock
push
or
add
push
dec
shl
stc
inc
ss
add
sbb
or
ja
les
mov
mov
cmc
mov
xchg
testl
cmp
jne
daa
scas
lds
sbb
mov
mov
fmuls
mov
or
dec
dec
pop
push
xor
jge
jle
push
pop
icebp
lahf
test
cwtl
daa
lock
adc
jl
push
les
test
lods
fdivp
sti
jecxz
xchg
jb
push
clc
sub
pop
lock
jnp
sbb
sti
popf
inc
push
imul
out
cmp
pop
sub
testb
mov
pusha
rcl
jbe
jge
movsb
sub
ret
push
out
add
add
push
fildl
ljmp
xchg
in
fsubl
sbb
test
in
data16
enter
sbb
jno
jmp
cwtl
xor
or
cmp
ljmp
testb
jp
stos
rclb
mov
push
inc
inc
push
mov
hlt
in
add
jo
adc
shrl
adc
lds
cmp
dec
xor
dec
and
dec
cmp
sbb
add
test
jo
fsubr
xchg
cmp
dec
or
and
sbb
jns
clc
out
addb
les
xchg
xchg
pusha
mov
imul
mov
cmc
stos
mov
gs
es
out
xchg
aaa
mov
jmp
pusha
cli
cmp
or
push
pusha
add
adc
cmp
fwait
ret
pop
mov
lahf
imulb
sbb
rol
add
push
ficomps
mov
cmp
insl
xchg
fisubrs
jle
push
add
adc
icebp
hlt
push
mov
mov
mov
and
jp
mov
cmp
fnstcw
fwait
add
inc
orl
jg
test
dec
sti
inc
int
adc
popa
fdivp
pusha
mov
or
fldenv
lea
shll
mov
clc
mov
mov
adc
sub
pop
cmp
jbe
lret
inc
incb
leave
adc
pop
mov
mov
movsb
out
sbb
pop
mov
adc
sarb
sarb
add
lret
shll
sbb
jmp
aam
push
jnp
es
rorl
aas
and
cmp
arpl
xor
pop
xor
mov
rcrb
arpl
leave
es
cwtl
test
sbb
push
adc
test
mov
add
xchg
dec
mov
mov
imul
mov
xor
inc
inc
jl
out
mov
xchg
jo
jne
cmp
loope
lea
sbb
inc
dec
je
push
icebp
lock
xlat
int
ret
pop
roll
cmp
inc
mov
lock
pop
fldenv
jge
xorl
scas
mov
bound
sbb
insb
jmp
aas
lock
mov
or
rcrb
xchg
dec
shll
jns
mov
addl
push
add
jns
sbb
loopne
int
push
mov
mov
fcomps
popf
xchg
icebp
jne
dec
mov
xorb
push
jle
mov
std
xorl
cmp
movsl
add
xor
mov
cmp
loope
pop
jno
movsb
push
outsb
mov
push
dec
xor
jb
mov
adc
test
es
push
clc
lds
push
stc
adc
dec
add
pushw
adc
mov
jbe
fistpl
dec
cmp
loope
add
mov
cmp
and
ss
jb
pop
shl
hlt
arpl
pusha
push
sub
or
sub
mov
sbb
pop
jae
out
cwtl
icebp
mov
mov
cmp
cmp
pop
rcrl
test
mov
jl
cmpsl
inc
jae
mov
in
pusha
pop
insl
pushf
jae
ds
mov
nop
insl
xor
jae
add
push
dec
or
rcr
jp
dec
je
lock
sbb
jmp
sbb
pop
xchg
hlt
mov
push
sbb
sub
mov
push
dec
fucom
js
cmp
cwtl
or
enter
adc
ret
jnp
xor
mov
outsb
mov
aam
pusha
dec
xor
and
pop
cmp
je
dec
bound
cmc
ja
and
in
pop
cmp
mov
movsb
inc
jne
cs
mov
jp
lret
ret
ss
nop
lock
xchg
adc
pop
testl
mov
js
cltd
lods
mov
iret
inc
call
out
jo
sub
repnz
testl
jle
imulb
xchg
shlb
xchg
lock
jae
ror
adc
cmp
adc
adc
xor
cld
mulb
leave
xor
mov
xor
and
pop
push
jne
rorb
insl
roll
mov
into
sbb
clc
adc
inc
jo
mov
and
jmp
xchg
inc
maxps
fwait
negb
push
xorb
outsl
mov
inc
int3
movsb
icebp
jecxz
sub
inc
add
adc
push
popa
xor
icebp
jae
cltd
lock
adc
mov
dec
shll
or
leave
add
sahf
mov
orb
cmp
loopne
andb
mov
hlt
sub
fcmovnb
mov
aam
stc
arpl
jmp
sti
cmp
inc
push
cmp
mov
and
jne
cwtl
cmpsb
repz
mov
add
push
jg
jp
stos
test
jp
insl
pop
pop
and
cwtl
and
xor
add
das
into
call
movl
xchg
sbb
data16
popa
repz
sahf
fisttpl
jle
loopne
xchg
std
sbb
cwtl
clc
test
mov
adc
ja
insl
lea
hlt
loope
pusha
notb
jb
mov
ljmp
hlt
mov
fildl
xchg
add
dec
aaa
ret
sub
mov
shl
pusha
or
repnz
mov
fnstenv
jl
cmpsl
cmc
sub
sub
jbe
sub
mov
xchg
dec
sbb
repnz
mov
mov
ljmp
cmpl
xor
ret
cwtl
cli
enter
pop
adc
js,pn
cmp
xchg
push
icebp
out
test
lods
or
inc
mov
pop
jbe
add
pushf
dec
and
jno
not
and
mov
adc
pusha
das
mov
loopne
mov
pushf
and
in
fcom
rol
mov
xor
or
in
mov
cmp
pop
push
pop
or
out
test
and
pop
mov
aas
je
dec
orb
push
or
mov
cmc
jo
and
jno
mov
arpl
subb
fdivs
cmp
loop
fisubs
jb
cmp
enter
ret
fidivrs
sbb
jbe
pop
add
das
cmpsl
lock
inc
mov
push
cmc
jae
jno
cmpb
shl
jb
stc
cld
dec
xchg
movsb
notl
lahf
pop
cmp
add
add
push
pusha
dec
cvttps2pi
pushf
cmp
push
pop
jnp
pop
pushf
mov
mov
je
ret
cmp
xor
cmp
add
jle
je
int3
sahf
mov
jmp
sahf
dec
pop
push
lcall
xor
out
data16
imul
ret
sub
push
femms
ret
push
pop
mov
hlt
outsl
hlt
out
pop
out
mov
dec
jo
add
pop
or
ja
jmp
std
mov
adc
js
mov
in
icebp
std
enter
loop
xor
cld
mov
cmpsb
sarb
pop
iret
push
inc
nop
add
cmpsb
lock
mov
xor
and
jb
loop
je
das
xchg
clc
fldt
xor
and
xor
hlt
cltd
or
pop
add
imul
sub
popf
pop
rcr
cmpsl
or
xor
mov
mov
cmp
popa
adc
outsb
mov
push
sbb
sbb
push
xor
inc
jb
cwtl
je
jmp
xchg
repnz
out
lret
mov
and
xor
mov
xlat
add
fiaddl
icebp
jno
popa
iret
negb
test
mov
sub
insl
mov
cmp
cs
dec
or
lea
inc
or
jne
pop
andb
inc
inc
pushf
aam
pop
pop
and
sahf
mov
daa
rcrb
frstor
jno
push
sbb
mov
repnz
adc
ret
xor
fimuls
pop
jp
std
add
addl
dec
and
lds
test
or
and
shll
aad
fwait
inc
push
imul
jae
mov
fimuls
cltd
lea
cmp
add
sbb
cmp
jb
mov
fistl
aaa
push
fstpt
inc
ja
inc
push
mov
dec
cmpb
test
mov
stc
popf
cmp
jl
les
push
sub
jbe
pushf
inc
js
pop
mov
xchg
add
sbb
enter
cs
xor
inc
mov
push
aas
adc
pop
add
push
cmpsl
addl
and
sub
or
mov
stos
inc
jbe
addr16
push
mov
sbb
in
cmc
je
sahf
jns
pop
outsb
cmp
and
mov
jno
jne
insl
rclb
movl
pop
xchg
add
in
mov
xchg
mov
out
adcb
sarb
loop
outsl
bound
cli
inc
pusha
clc
mov
cs
stc
adc
negl
push
repz
dec
jecxz
lods
mov
jle
pusha
mov
sbbl
cmp
xor
mov
cmp
inc
jb
lock
nop
insl
sbb
pop
cld
loope
inc
cmpsl
pop
ljmp
xchg
lcall
cwtl
rorl
psraw
cmp
push
inc
test
inc
inc
pusha
push
out
pushf
add
push
int
xor
stc
test
jb
push
mov
in
test
push
icebp
push
std
test
adc
nop
jl
lret
repz
mov
mov
sahf
cld
cmp
and
inc
and
jg
in
xor
cmp
icebp
adc
jae
xor
pop
pop
imul
xchg
mov
lahf
or
mov
mov
inc
in
scas
enter
xchg
xor
xlat
push
insl
rclb
mov
or
or
dec
pop
sti
and
inc
mov
pop
jnp
push
lcall
push
outsl
xchg
hlt
sti
lcall
cmp
test
dec
jae
shrb
lret
cmp
and
or
or
icebp
jle
mov
and
repnz
or
push
sahf
lcall
pop
mov
sbb
cmp
mov
jl
sbb
inc
cmp
xchg
mov
mov
push
syscall
fildl
dec
prefetch
or
cmp
jg
js
cmp
data16
outsb
fsubrs
aam
adc
jp,pt
int3
imul
dec
hlt
cld
scas
std
roll
pop
andb
push
in
nop
xchg
jp
je
jmp
outsl
and
cmp
push
jo
lcall
sub
xor
in
std
jo
call
add
or
sub
pop
mov
cmp
notl
rorb
movsb
scas
mov
lock
adc
and
lds
dec
sahf
stc
mov
adc
nop
cs
ficoml
mov
lea
mov
mov
sub
sahf
mov
dec
add
div
sahf
inc
stc
jo
dec
mov
movsl
std
xchg
or
cmpsl
or
inc
nop
mov
into
fbstp
dec
ss
adcb
mov
ss
ss
sub
xor
sbb
cwtl
pop
or
or
insl
aaa
ss
push
lock
adc
cmp
not
nop
push
add
lahf
jb
imul
mov
push
out
scas
in
repnz
push
sahf
pop
mov
loop
pushf
sahf
mov
icebp
mov
xchg
pop
mov
pop
out
inc
shl
pop
xor
insl
nop
cmpsl
outsb
mull
adc
popa
mov
sti
fcmove
xchg
scas
adc
cmp
mov
imul
movb
es
adc
jnp
idivl
out
xor
push
xchg
leave
out
into
pop
inc
outsb
adc
xchg
xchg
loopnew
frstor
aam
inc
jmp
or
mov
hlt
mov
stos
xchg
mov
icebp
icebp
fmull
inc
cmp
pop
popa
imul
or
test
pop
push
pusha
roll
loop
dec
or
mov
cmp
dec
jns
jae
jle
out
imul
pop
mov
jns
inc
jo
xchg
stc
mov
fists
fisubs
push
sbbb
lahf
lock
jl
test
adc
sahf
ja
fimull
sub
push
xor
push
stos
adc
dec
inc
aad
pop
pop
add
inc
stos
pop
icebp
mov
sbb
xor
xchg
push
test
in
cmp
in
xor
sbb
mov
jl
mov
mov
jp
je
dec
loopne
add
jb
iret
daa
addr16
mov
push
dec
sti
movsb
xchg
jo
inc
divl
xchg
cwtl
push
pop
xchg
stc
stos
mov
mov
xor
loop
mov
adc
lods
hlt
jns
test
outsl
imul
lock
pop
fnsave
lods
loopne
adc
mov
add
hlt
push
cmpsl
in
pop
lahf
fidivrs
jo
xorb
xchg
popf
out
in
dec
adc
mov
mov
and
clc
addr16
mov
sub
fdivs
lcall
or
add
pop
and
pop
shll
mov
pcmpeqw
ds
mov
push
imul
sbb
jbe
and
idiv
xor
jle
sub
push
cmp
push
sub
cmp
ljmp
xor
fnstsw
adc
out
je
push
out
and
das
and
dec
adc
rorb
push
and
push
adc
jno
jl
xor
into
es
lock
mov
cmp
sub
dec
or
xor
cmp
xor
push
xor
xor
in
fdivs
shl
mov
mov
or
adc
push
jbe
pop
jno
clc
std
xor
lds
insl
loope
stc
gs
push
imul
or
jl
xor
mov
xor
je
jg
out
iret
sbb
adc
neg
inc
dec
mov
mov
sti
xor
lahf
jnp
push
sbb
jl
clc
xor
inc
push
adc
mov
xchg
pop
shr
loopne
stos
jecxz
daa
push
cmp
jl
pop
jno
dec
sbb
mov
das
dec
je
push
mov
jns
adc
and
js
dec
xchg
mov
and
add
cmp
shlb
push
sub
add
repnz
lock
inc
test
mov
lock
xor
dec
iret
movsb
sub
jl
ret
bound
xor
dec
scas
xor
sub
cld
jb
cmp
lcall
sub
rorl
and
jl
clc
xor
dec
mov
in
sti
lea
jno
adc
inc
popa
fcoms
adc
adc
xor
pop
lret
push
xchg
xor
push
pop
xor
lret
repz
and
fidivrl
pop
out
cmp
add
sbb
ljmp
and
incb
mov
jae
inc
incb
or
or
setle
addr16
aam
and
mov
xor
popa
lahf
orb
or
das
jne
mov
cmpsl
push
arpl
mov
addb
dec
lea
adc
xchg
jmp
out
dec
and
pop
mov
add
lahf
push
jo
addr16
addb
fwait
jae
in
ficoms
ldmxcsr
cwtl
or
xchg
or
das
nop
repnz
lock
mov
lea
adc
add
jo
pusha
xor
mov
jo
mov
or
mov
jg
mov
fsubs
insl
icebp
ljmp
inc
sbb
test
cmc
jne
call
jo
sbb
jb
and
cli
aaa
rcrl
inc
fcoms
xchg
cmc
rclb
or
jno
fnstsw
jo
jne
xchg
cmpsl
outsl
int
mov
cli
push
push
fdiv
std
push
into
jnp
push
jno
mov
jne
cmp
cltd
cmp
and
movsb
push
in
ja
push
sbb
repnz
dec
addb
aaa
push
mov
adc
jmp
sahf
lcall
prefetch
pusha
iret
fadds
out
sub
es
mov
or
lock
jl
xor
push
lcall
test
add
icebp
addl
cmp
dec
in
cmp
fisttpll
leave
jmp
mov
jb
pushf
and
dec
loope
dec
add
enter
jmp
jp
add
xchg
jae
enter
orl
fildll
xchg
pop
pop
push
cli
cmpsl
xor
insl
mov
imul
pop
mov
in
mov
bound
pop
popf
or
daa
js
mov
mov
popa
mov
fcoml
dec
insl
cmp
mov
cmp
lds
xchg
gs
cmp
cmp
xchg
jne
mov
jecxz
and
add
adc
lock
sbb
test
outsl
adc
mov
cs
add
cmp
std
adc
insl
clc
xchg
or
adc
and
and
js
mov
inc
push
adc
js
jne
inc
cmp
js
imul
lahf
in
cmp
shlb
inc
aam
or
push
rcr
mov
scas
lea
js
mov
jge
push
dec
in
and
pop
and
cli
shr
xor
call
int3
inc
daa
inc
insl
adc
lret
sarb
lcall
pop
dec
lods
xchg
jns
lcall
jl
push
sbb
jb
cmpsl
mov
adcl
ret
movsb
xor
cmp
sub
or
cmpsb
inc
imul
jge
jb
pop
lods
pushf
call
inc
test
mov
push
clc
fstl
mov
scas
rclb
and
push
js
sub
pop
mov
sub
xor
test
cli
sbb
push
fdivl
dec
jg
faddl
lcall
push
xchg
inc
jp
scas
sub
aaa
sahf
adc
ret
xchg
not
xor
hlt
xor
mov
cld
sub
jg
pop
push
inc
cmovnp
jp
add
fsubrs
sub
testl
mov
data16
frstor
mov
data16
lock
stc
jmp
std
outsb
push
je
incl
ficoms
mov
cmp
int
sbb
lahf
das
and
iret
loope
dec
adc
shll
jno
popa
push
jno
push
jb
xchg
pop
jl
cmp
mov
sbb
dec
xor
xor
dec
inc
push
cld
js
sub
mov
fmuls
in
push
sahf
lock
xchg
xor
adc
mov
mov
iret
or
movsb
or
fldt
loopne
sub
or
rcrl
adc
inc
jle
aam
dec
sbb
xor
xchg
push
fiaddl
inc
mov
jne
pusha
xchg
icebp
jo
cmpsb
xchg
syscall
pop
push
sbb
daa
scas
pop
add
inc
mov
mov
xchg
imul
push
fwait
xchg
push
jg
jmp
lea
divb
xlat
lret
cmp
pop
mov
mov
fdivs
bound
testl
into
ud1
je
mov
sub
push
fidivs
out
and
fbld
negl
xchg
inc
jne
xchg
loope
nop
or
cmp
out
mov
jno
jle
xchg
mov
pop
cmpsl
into
mov
add
popa
das
jmp
imul
xchg
dec
dec
mov
xchg
pop
int
dec
xchg
pop
outsl
add
and
adc
adc
sub
pop
push
pop
add
nop
xor
stos
dec
push
out
imul
insl
push
mov
push
jns
test
pop
xor
stos
pop
jp
jl
nop
xchg
adc
std
pop
pop
inc
jns
arpl
movsb
and
sub
push
xor
or
xor
pop
aad
fstl
jb
popa
mov
rcl
jno
xor
aam
or
and
mov
lock
jno
jae
insl
mov
loop
insl
inc
or
mov
xchg
outsl
outsl
add
xlat
adc
xor
pop
fidivrl
mov
lret
sbb
adc
test
jbe
add
or
inc
nop
jl
test
scas
dec
out
cmpsl
cwtl
jo
aas
jge
cwtl
or
decb
pop
jo
jbe
lods
gs
loop
mov
ss
adcl
fwait
pushf
mov
xor
fdivr
xlat
js
and
push
mov
pop
xor
mov
adc
and
adc
insl
xor
dec
out
hlt
or
adc
fists
call
xchg
cmc
inc
jl
cmp
sti
icebp
fstps
in
ss
or
das
rdtsc
rcll
repnz
icebp
and
stc
decb
cmp
and
clc
mov
into
adc
xchg
push
pop
cmp
test
fwait
push
insl
adc
notb
mov
mov
xchg
js
push
xor
sbb
adc
mov
pop
rcrl
ljmp
dec
pop
fcmovnb
mulb
in
mov
inc
push
iret
dec
shl
sahf
push
adc
rcrb
mov
fidivrs
adc
sbb
daa
nop
outsb
mov
loope
into
cmp
push
cmp
ss
mov
js
push
insl
ja
jg
pushf
adc
ja
clc
jo
cld
cmp
mov
push
jmp
enter
pop
ja
or
add
mov
icebp
pop
mov
sti
pop
adc
fdivl
or
xor
call
push
push
cmp
movsb
pushf
inc
adc
add
mov
cmp
clc
jno
dec
xor
mov
sbbb
and
cmp
add
shll
xor
xor
clc
jb
mov
stos
ja
js
mov
rorl
jno
sub
and
adc
ss
testb
jnp
sub
test
mov
jecxz
or
fcoml
jp
test
and
mov
or
fsubl
mov
xchg
sahf
inc
ret
dec
sarl
jle
add
mov
mov
stos
sti
fstps
ljmp
dec
mov
aad
or
icebp
add
lock
dec
or
pushf
movsl
je
xchg
xorl
lahf
shlb
pop
mov
popl
int
iret
test
xchg
sbb
fnstenv
pop
xor
or
cli
pop
cmp
ror
mov
aaa
jmp
arpl
sarb
mov
jl
inc
stc
and
mov
jecxz
add
fwait
mov
and
pop
sub
movsb
cmp
call
bound
mov
sbb
xchg
add
or
aas
lcall
cs
mov
sub
add
adc
nop
lock
xor
mov
mov
cmpsb
fisttpll
and
sub
sub
sbb
mov
aaa
out
pop
jno
rcrl
cltd
aas
fisttpl
sub
adc
frstor
cli
mov
rclb
sar
mov
xchg
pushf
inc
sub
addb
fnstcw
and
dec
adc
aam
lret
and
pop
mov
xor
or
mov
loop
icebp
fildl
aam
inc
mov
sbbb
adcl
ljmp
push
pop
jno
loopne
rcll
xchg
cmp
jo
pusha
je
adc
inc
pop
jmp
push
rclb
mov
jle
jb
jo
enter
xlat
inc
pop
mov
js
call
mov
cmpb
mov
and
fcmove
push
jle
pop
subl
movsb
pop
adcb
inc
add
cs
fnstenv
sub
test
aaa
push
pop
mov
cmp
enter
psrlw
mov
pop
mov
jno
mov
lea
mov
inc
stc
popa
movsb
or
mov
xchg
xor
or
nop
enter
pusha
mov
inc
push
add
fists
jp
fmull
rcrb
xor
mov
or
lock
rol
dec
stc
mov
aad
sub
or
out
push
jbe
xor
fcompl
and
icebp
mov
flds
rorb
pop
cs
xchg
cmp
mov
or
adc
jbe
cmp
jecxz
push
stc
les
js
in
mov
pop
stos
xchg
xor
cltd
lods
pop
cmp
fwait
cmpsl
or
adc
xchg
mov
dec
xor
popa
pop
push
pminsw
or
jbe
or
js
cld
packuswb
outsb
cmp
or
dec
dec
mov
pop
jl
mov
and
jae
inc
clc
xor
adc
ss
or
xchg
cmp
sub
pusha
jno
mov
inc
or
push
pop
fidivrs
cmp
cmp
repz
push
mov
pop
and
or
test
mov
mov
inc
lret
sub
and
lods
push
mov
mov
test
pusha
jg
and
cmp
cld
mov
jne
stc
mov
add
pop
test
add
mov
and
adc
or
adc
xor
insb
and
movsb
dec
pop
pop
xchg
lock
pop
sbb
pop
popf
aam
adc
jno
push
cmpsb
cld
ror
jg
push
out
aad
mov
and
lods
pop
std
cli
xchg
adc
outsb
cmpsl
inc
xchg
sbb
xchg
cmp
inc
pop
xchg
adc
lahf
test
push
or
xlat
pop
mov
stos
sub
fmuls
add
or
test
in
das
lock
or
sar
hlt
cltd
xor
jae
loop
xor
stos
test
xchg
cs
pop
je
mov
inc
repnz
mov
pusha
pop
ja
in
repnz
add
pop
cmp
out
xor
push
adc
pop
icebp
adc
lahf
mov
cli
adc
inc
pop
mov
cmc
xchg
js
pop
loop
lcall
int3
loopne
or
imul
dec
pop
sub
cmpsl
mov
xor
shlb
cmp
nop
lahf
dec
inc
push
push
xchg
push
push
dec
inc
xchg
xor
cmp
addr16
push
into
push
aas
sub
mov
xor
xor
pushf
repz
test
adcb
mov
mov
mov
add
sarb
mov
mov
rcl
mov
out
add
lock
xor
aad
jo
mov
cmc
ss
leave
mov
add
dec
repz
sub
or
test
cmp
mov
pushf
test
sbb
mov
lahf
and
nop
sarl
call
sub
sti
pop
addb
shlb
push
xchg
mov
and
xor
subb
cwtl
xchg
mov
jmp
add
push
sbb
xchg
mov
orl
add
inc
aas
xlat
pop
cmp
mov
shll
sub
into
lods
mov
xchg
insb
cmc
ds
cli
into
sub
xchg
test
xchg
mov
notl
fdivrs
add
inc
inc
xor
or
pusha
shlb
das
aad
mov
insb
sub
add
xor
test
flds
loopne
pop
into
ret
adc
shlb
orl
addl
dec
dec
shlb
ret
or
repnz
leave
push
mov
sub
add
xor
ret
mov
add
icebp
pop
push
sets
jno
jle
pop
adc
push
icebp
xor
jne
divl
shll
outsl
in
aas
mov
or
rep
sbb
mov
ljmp
jo
pusha
add
and
mov
jecxz
aaa
cmp
mov
or
jo
cmp
dec
subb
mov
in
repnz
sub
jnp
movsb
cmp
in
movsl
mov
jle
js
mov
nop
xchg
ficoml
mov
jbe
cmp
sbb
lahf
cwtl
lock
adc
or
insb
add
stos
and
mull
and
xchg
jecxz
adc
jnp
test
rorl
in
and
sub
lods
push
mov
jae
xor
pop
xlat
stos
sub
pop
out
ss
loopne
xor
push
pop
and
dec
adc
js
ss
sub
lock
jno
adc
or
cmp
or
or
add
repz
push
sti
jp
adcb
call
divl
adc
sbb
movsb
jle
cmp
gs
div
sbb
jnp
jle
or
adc
bound
mov
xchg
out
inc
roll
cwtl
mov
jno
sub
sahf
mov
popa
enter
jo
push
or
fildl
fwait
insb
cmc
ds
or
xor
jae
adc
dec
adc
adc
fdivp
icebp
rorb
sub
lock
mov
and
push
jg
push
adc
xchg
jl
in
shl
or
and
aad
add
mov
ja
xor
mov
jo
notl
clc
mov
xchg
mov
packsswb
inc
nop
lea
sub
sbb
mov
lcall
jb
or
std
repnz
sbb
mov
and
add
sub
jl
sahf
cmp
fcmovb
sbb
or
cmpsl
insl
ljmp
mov
cwtl
inc
fwait
mov
xor
sbb
scas
mov
or
or
dec
pop
aaa
mov
xchg
jle
inc
orb
loop
cltd
mov
xor
xchg
mov
icebp
push
fs
mov
cmp
mov
jae
and
popa
jp
add
in
ret
jmp
cld
out
lret
lret
push
mov
jbe
push
push
test
jg
sbb
push
repnz
scas
jb
js
inc
fnstsw
cltd
or
sub
inc
sahf
cmp
les
stc
push
push
mov
aas
lret
xchg
push
add
jnp
adc
xlat
outsb
xchg
aam
rep
enter
ret
dec
cmp
mov
mov
or
mov
or
mov
fwait
jbe
or
fildll
mov
pop
and
mov
push
jbe
cmpsl
aaa
leave
mov
and
scas
add
orb
jb
pop
mov
out
and
rep
outsl
nop
in
or
insl
push
aam
je
orl
cmp
inc
inc
xor
fxch
pop
and
sbb
push
sub
ret
or
xor
push
mov
imul
xor
inc
push
insb
std
xchg
inc
adc
mov
jecxz
lods
lret
xchg
or
cli
fucomi
lret
movsl
or
sub
mov
pushf
or
push
imul
fcompl
push
jae
cmpl
mov
push
or
cmpl
rcl
sbb
push
jl
pop
xchg
leave
dec
inc
xorl
adc
and
mov
gs
and
je
lea
jbe
xor
push
clc
pop
sbb
xchg
lea
cmp
aam
lods
fidivrs
add
inc
out
and
sub
or
and
hlt
xchg
push
mov
sbb
inc
sti
mov
jb
iret
push
cmp
lods
push
mov
shll
and
adc
addb
inc
testl
and
inc
in
adcb
jmp
cmp
push
test
shl
ljmp
div
mov
xor
xchg
nop
mov
or
add
cwtl
cltd
lea
pop
and
or
nop
outsl
sbb
cltd
jns
cmp
push
mov
cmpsb
jns
imul
push
xor
repz
arpl
gs
sub
fmul
and
xchg
cmp
and
sbb
lds
jl
jge
dec
mov
adc
inc
push
mov
loop
rcrl
mov
sbbb
mov
call
xchg
push
lret
pushf
sbbb
movsb
mov
movb
jno
fwait
add
fs
shrl
daa
inc
or
movb
nop
xor
add
mov
jae
push
inc
test
cmp
rolb
pop
xchg
inc
cmpsb
je
jne
xchg
xor
xor
das
movsl
inc
outsb
jl
mov
add
or
mov
add
cmpsl
cmp
rclb
aas
aaa
sarb
lods
cmp
push
jl
aaa
push
mov
xor
jo
rcrb
jne
sbb
mov
clc
mov
push
pop
rorl
mov
sbb
or
icebp
mov
jl
mov
ret
mov
stos
js
mov
dec
ss
adc
or
movsb
jle
push
pop
pop
mov
push
add
aas
adc
adc
mov
cmp
sbb
sub
xchg
ds
cli
or
js
and
add
push
or
push
dec
and
cs
stos
sbb
into
add
lea
repnz
dec
inc
mov
cmp
or
cmpsb
and
and
enter
mov
add
jmp
mov
repz
or
imul
and
out
pop
xor
xchg
xchg
or
addr16
push
sbb
adc
lea
out
or
lock
pop
js
adc
bound
add
mov
xchg
lret
adc
mov
cmp
bound
dec
xor
or
or
frndint
mov
jno
outsb
mov
or
xchg
mov
pop
push
mov
jmp
aam
aaa
mov
push
adc
outsl
add
out
insl
xchg
mov
adc
test
ficompl
scas
inc
and
pop
popa
movsl
push
stc
push
or
jecxz
mov
leave
cmp
mov
push
push
xchg
aam
mov
stc
add
xchg
cld
xor
xor
loop
jns
cmp
or
or
out
or
gs
aad
xchg
cwtl
mov
inc
pmaxsw
mov
movsb
pop
mov
dec
mov
adc
sub
insl
adc
cld
mov
push
adc
ja
inc
jmp
push
out
loopne
push
push
mov
setnp
xor
iret
test
and
dec
push
stc
pop
xorl
sub
ja
into
icebp
and
aam
cmp
sbb
mov
mov
mov
push
cli
repnz
cmp
mull
ficoml
ss
mov
mov
push
or
clc
sbb
mov
xchg
push
sahf
pop
sub
dec
add
and
out
clc
pop
test
jge
test
lret
or
subl
js
jbe
inc
and
repz
cmp
mov
fwait
jge
notl
mov
jb
aad
shl
lock
shrb
loopne
bound
push
mov
bound
xor
roll
lea
mov
clc
shll
inc
fwait
jae
xor
rcll
fists
aad
outsl
shll
movd
test
icebp
sti
dec
jp
aam
and
frstor
and
popa
rorb
adc
addr16
repnz
cld
adc
cmp
and
fimuls
xchg
mov
inc
or
popa
sbb
sbb
push
ss
shrb
push
lds
push
cld
mov
subb
sarb
loopne
mov
enter
push
orb
add
add
add
push
push
imul
scas
mov
frstor
jb
sbb
cwtl
faddl
adc
pop
xor
adc
dec
xchg
outsl
frstor
ja
inc
xor
xchg
push
and
roll
add
mov
xor
push
lret
mov
popf
pop
lahf
dec
clc
fidivl
jp
decb
adc
insb
mov
stos
xchg
js
mov
clc
insl
shl
mulps
std
jge
adc
add
jne
push
mov
test
movsl
icebp
ljmp
outsl
movsb
xor
xchg
dec
add
cwtl
rclb
testb
pop
scas
mov
lea
icebp
push
or
dec
jbe
jge
nop
add
lock
out
js
jno
mov
or
js
pop
jl
lods
push
lea
add
repnz
icebp
jp
cwtl
out
dec
add
push
xor
xor
stc
lea
or
jge
pop
jns
xor
jae
push
jb
mov
jae
mov
sbb
pop
fsubrp
adc
add
adc
pop
add
mov
xchg
test
jge
xchg
adcl
xor
mov
cmp
mov
push
push
sbb
jmp
xchg
mov
out
mov
or
push
mov
mov
aad
icebp
push
repz
xor
pop
pop
icebp
notb
inc
inc
pop
sar
mov
sbb
push
icebp
notb
xor
sub
sub
mov
je
icebp
jns
cmp
std
xor
shlb
jp
pop
stos
inc
sub
add
aad
push
add
pop
movsl
xor
insb
cmc
mov
add
jl
stc
adc
clc
negl
jle
mov
movzwl
xchg
adc
push
jbe
xor
adc
cmpsl
and
ja
push
adc
push
decb
xor
adc
inc
add
or
test
mov
test
cmp
inc
mov
mov
lock
pop
outsb
cmpl
cltd
stc
cmp
or
std
cmp
pusha
push
mov
jle
push
mov
sahf
pop
pushf
mov
pop
ret
sarl
stc
ds
mov
cmp
cmp
push
fnstsw
jl
sbb
ret
mov
pop
icebp
mov
jne
push
xchg
jo
lahf
clc
mov
push
jg
jmp
mov
aas
push
xor
cmp
adc
sbb
stc
xchg
clc
jbe
movsl
push
negb
std
push
ret
mov
cwtl
mov
lock
pop
std
mov
sbbb
orl
lock
add
mov
cmpl
add
add
orl
push
and
add
in
adc
jns
pop
or
repz
mov
jle
andl
inc
cli
cmc
or
adc
loope
push
jno
enter
mov
mov
inc
jg
cwtl
test
push
movsb
mov
add
add
rorb
dec
loopne
push
pop
pushf
hlt
dec
jb
ja
jg
or
bound
test
pop
lret
icebp
lret
cli
ljmp
clc
popf
cmp
push
js
shlb
test
push
mov
js
jo
movsb
mov
mov
loopne
add
sbb
outsl
lock
add
or
inc
add
sub
popf
jp
xor
rolb
add
div
add
cli
lahf
cmp
xchg
jb
lock
icebp
jno
mov
jb
test
rclb
or
lods
lods
xor
pop
movsl
icebp
negb
test
mov
mov
pop
push
pop
jle
or
add
rclb
smsw
mov
jecxz
incb
arpl
adc
out
bnd
jbe
xor
orl
or
jnp
loope
mov
inc
push
hlt
mov
push
roll
mov
mov
add
movsl
xchg
repz
push
loope
xor
xorl
in
mov
sub
adc
adc
data16
pop
adc
adc
push
ss
jnp
out
mov
loopne
push
sbb
ja
push
push
adcl
ss
adc
cwtl
jb
loopne
subl
clc
dec
lea
aam
enter
mov
sub
mov
cmp
test
sbb
add
add
sub
xor
ror
jp
jle
and
jno
adc
mov
cmp
push
push
add
jo
mov
push
push
mov
pop
decl
fiaddl
jle
dec
mov
push
sarb
pop
mov
cmc
mov
movsl
or
mov
cs
in
jge,pt
stc
lcall
xchg
rclb
jge
test
icebp
pop
jnp
orl
incb
outsl
lock
cmp
mov
add
mov
mov
movsb
cmpsb
mov
add
or
scas
mov
mov
jae
adc
fld
icebp
fisttpl
adc
adc
clc
addr16
sbb
xchg
pop
icebp
inc
add
jae
cmp
test
inc
idivb
or
adc
rclb
xchg
xchg
pop
or
icebp
xor
mov
sbb
loopew
pusha
add
adc
mov
icebp
add
mov
sti
dec
mov
cld
pushf
enter
add
cmp
or
mov
jne
jecxz
stc
mov
sbb
or
movl
icebp
mov
rclb
mov
jae
cld
icebp
lock
pop
jg
inc
jo
mov
sbb
jne
ja
mov
sbb
and
add
fsts
popl
in
mov
xchg
test
jmp
inc
sti
cwtl
addb
mov
or
mov
or
adc
int
cmpsb
aaa
inc
cmp
xor
xchg
pop
cwtl
dec
sub
mov
icebp
mov
mov
or
adcb
icebp
or
adc
sub
add
cmp
dec
sahf
pop
icebp
or
dec
mov
xchg
add
adc
push
jle
xor
mov
pop
add
lods
fmull
gs
xor
rolb
jge
jbe
mov
xor
add
xchg
adc
sbb
idiv
pop
js
or
push
pop
lock
push
mov
fistpll
xor
rol
xchg
inc
mov
jmp
or
ud0
jbe
pop
sbb
adc
dec
jp
sbb
orb
lret
orb
insb
movhps
icebp
hlt
aaa
mov
ja
pop
ljmp
lahf
loop
adc
cwtl
rclb
push
gs
cli
je
loope
add
inc
jg
or
jne
pop
jns
pop
jle
sub
rcrb
pop
cwtl
mov
pop
cmpsl
push
cmp
dec
push
jg
pop
subb
addb
in
rolb
jb
xchg
sahf
lcall
lods
mov
adc
sbb
mov
fdivs
xor
ds
mov
aam
inc
sbb
stos
das
or
dec
pop
pop
clc
xorb
std
push
push
invlpg
push
jmp
cmp
push
test
or
pop
xor
jne
psadbw
cs
cs
clc
stc
jecxz
cmpb
pop
out
lret
test
dec
out
sub
and
idiv
enter
pop
fs
xor
repnz
clc
adc
adcl
shlb
xchg
addr16
lock
dec
out
jp
scas
mov
xor
shll
mov
rcrb
and
xchg
bound
out
repz
sti
and
aad
paddq
adc
ss
and
sbb
lret
dec
mov
adc
shrl
idiv
push
pusha
add
or
adc
pop
nop
and
stos
stc
fistl
push
idiv
mov
lods
mov
or
ret
jle
call
lods
cmp
pusha
jno
adc
add
cmp
mov
jb
add
aam
lahf
push
scas
je
in
jb
outsl
push
xchg
jl
xor
nop
dec
xchg
mov
stc
enter
mov
repz
sub
push
push
mov
outsl
repnz
or
mov
imul
jno
mov
cld
push
mov
sub
mov
negl
adc
call
cmp
cmc
pusha
xchg
hlt
js
xor
in
xor
and
or
push
dec
pop
push
in
dec
xor
and
scas
xchg
pop
mov
jno
data16
out
jb
inc
jns
insl
mov
enter
sub
and
out
data16
xchg
jno
pop
cmp
pop
jg
add
jnp
dec
insb
push
jl
shlb
adc
xor
jl
std
psubd
jecxz
aas
fnstenv
pop
xchg
push
cmp
push
popa
push
mov
cli
loopnew
jl
pop
mov
cmp
lahf
mov
iret
stos
cmp
lods
je
imul
adc
inc
data16
push
scas
into
enter
sarb
nop
push
out
addr16
inc
push
add
das
jae
lcall
xor
stos
das
loop
std
mov
fwait
test
clc
arpl
sub
pushf
sbb
in
rorl
enter
jbe
mov
insb
dec
adc
and
xor
xor
sahf
xchg
outsl
adc
mov
jne
insl
xor
pop
dec
cmp
pop
fnstsw
negb
jb
out
push
inc
jl
xor
sar
and
mov
xchg
cmp
jo
push
jecxz
push
pop
clc
fists
mov
cmc
and
push
xorl
mov
xchg
mov
imul
push
imul
lock
test
out
les
pop
and
sbb
jnp
in
fisubl
outsl
jmp
pushl
jo
hlt
mov
js
cmc
jb
mov
or
xchg
add
mov
call
jbe
and
sbb
cmc
movsl
aaa
lcall
fwait
push
into
jg
cmp
sbb
xchg
stos
mov
stc
adc
cwtl
mov
ret
mov
out
stos
add
shrb
sahf
clc
or
arpl
mov
mov
cmpsl
dec
mov
clc
aam
in
pop
sub
jae
inc
mov
adc
jg
push
push
ss
into
out
sbb
out
lret
push
jmp
or
scas
xchg
test
cmp
fidivs
mov
push
mov
push
cmp
dec
repz
aaa
outsl
mov
movsb
sti
jl
adc
mov
lcall
xor
idivb
add
and
sbb
insb
push
jne
adc
loopne
mov
lock
cmp
or
mov
mov
pop
mov
adc
data16
mov
mov
daa
push
xor
icebp
push
jp
pop
dec
cmp
icebp
push
into
mov
ffreep
imul
rorb
mov
out
push
scas
inc
imul
lods
int
mov
xchg
inc
or
sub
mov
cmp
jae
cmp
js
pop
xor
xor
push
js
push
mov
lods
mov
cwtl
lahf
ljmp
icebp
push
hlt
or
insl
notl
hlt
xor
xor
cmp
icebp
into
loop
xrelease
pop
or
rcr
jb
xor
or
sub
pop
clc
mov
insl
sahf
xchg
sub
inc
xor
push
pop
sbb
lcall
xor
shlb
sbb
mov
xor
gs
cs
icebp
loop
jbe
loop
call
push
insl
je
mov
aam
mov
test
clc
and
mov
cmpsb
mov
or
cmp
jnp
lods
cmp
adc
test
leave
inc
push
jle
popa
xchg
cli
mov
xorl
push
push
mov
xor
int3
xlat
scas
out
add
stos
push
movsb
out
popf
mov
pop
ret
pop
dec
mov
jg
fists
or
fisubl
hlt
cmpsl
popf
cmpb
inc
sub
fsubr
neg
push
dec
fcmovnu
int
dec
push
nop
lret
jo
sub
adc
and
imul
dec
push
insl
dec
sub
sarb
xor
out
push
cmc
push
out
mov
push
and
test
popa
push
jb
and
or
add
ret
mov
imul
pop
imul
adc
adc
psllw
mov
mov
pop
aam
out
adc
sahf
xchg
jnp
ret
rdtsc
xchg
cltd
jle
jmp
pop
rorl
bound
mov
cmp
lret
add
test
push
fs
xor
add
mov
cmpxchg
test
jge
mov
je
outsb
dec
cmp
add
out
bound
push
icebp
adc
movsb
jns
jg
hlt
mov
mov
in
or
mov
mov
mov
mov
ja
adcl
fnstsw
ja
push
and
xor
xor
xor
ja
pop
jno
xor
clc
cli
jp
orb
cmp
imul
sti
and
pop
mov
fists
xor
jns
mov
xchg
push
insl
push
lods
lock
and
sbb
xchg
shll
or
aaa
lret
psrlq
pop
out
or
das
lea
cmc
and
clc
je
loope
stos
fisttpl
jnp
push
inc
cmp
cmc
dec
das
out
fimuls
pop
push
cmp
mov
add
mov
and
dec
shl
enter
insl
aam
push
mov
mov
jnp
jae
dec
aam
mov
adc
mov
leave
mov
sbb
aas
jecxz
fbstp
shrl
add
ds
adc
lret
scas
out
jae
sahf
mov
inc
adc
xorb
and
dec
nop
mov
add
add
pusha
movl
push
mov
and
insl
cmc
mov
in
cmp
dec
insb
rcrl
clc
xchg
push
sbb
das
out
enter
test
sbb
rcrl
or
push
pop
xor
insl
or
mov
imul
dec
jl
mov
sbb
xchg
sub
xor
xchg
adc
jo
sub
aaa
mov
xor
lea
cmpsl
jp
or
pop
and
adc
into
sbb
or
popf
lret
je
cmc
adc
or
lea
dec
fs
xchg
cmp
fdivp
xor
xchg
jo
test
outsl
adc
test
jmp
insb
lfs
and
jge
mov
inc
push
mov
mov
test
insl
dec
add
rorb
jno
je
sub
xor
sbb
aam
dec
iret
adc
ljmp
jne
push
pop
sbbb
out
repz
push
inc
mov
stc
aad
xchg
sarb
dec
dec
adc
mov
idivb
cli
pop
inc
out
mov
adc
in
xchg
push
daa
xchg
adc
or
stos
xchg
call
lods
in
xor
mov
loop
stos
mov
insb
mov
add
inc
push
or
ja
inc
cwtl
xor
cltd
lahf
xor
out
push
out
scas
adc
dec
aad
stc
cmp
iret
xor
mov
jecxz
xchg
dec
sbb
les
test
mov
lcall
cmp
jbe
mov
adc
pop
pop
icebp
pop
jle
jecxz
fmull
call
xchg
add
jo
jno
xchg
xorb
loop
lods
shlb
cmp
loopne
cmp
fisubrs
ds
movsb
jno
pushf
jge
in
loope
adc
out
or
mov
icebp
ret
pop
mov
cmc
mov
adc
or
out
lock
adc
xor
int
mov
test
or
lcall
xor
dec
cmc
or
push
adc
sbb
repnz
jge
mov
je
je
scas
cmc
fstps
rorl
shrl
pop
ja
orb
add
cs
push
xchg
enter
mov
repz
mov
pop
lods
mov
addr16
jae
enter
and
jb
cltd
imul
and
mov
cld
div
mov
lods
push
add
lahf
lock
pop
mov
mov
pop
push
inc
push
jo
lock
or
and
popa
insl
pop
mov
cmp
je
movsb
mov
xchg
jno
mov
jno
cmp
leave
xor
rolb
pop
push
addr16
mov
adc
and
xchg
cmp
sbbl
mov
lcall
and
jne
xchg
fs
xor
insl
fxch
daa
testl
xchg
jl
xchg
mov
or
insb
mov
loop
ss
inc
lea
roll
das
cmp
arpl
pop
and
shll
mov
push
repz
out
call
aaa
fidivrl
mov
sbb
lock
cwtl
mov
cltd
xchg
mov
nop
outsb
enter
aaa
aas
das
mov
inc
mov
pop
lcall
add
jp
mov
mov
cld
dec
cmp
adc
xchg
lcall
push
mov
dec
mov
test
mov
into
pop
cmc
xor
in
push
push
push
adc
jo
jnp
lock
adc
setg
insb
pop
push
int3
ljmp
fs
lcall
mov
mov
jbe
addr16
adc
clc
icebp
ficompl
je
js
mov
ss
adc
xchg
xor
push
jge
push
lods
mov
fs
xor
adc
je
jns
dec
outsl
xor
mov
mov
mov
mov
cmp
xchg
xlat
jl
cmp
dec
ljmp
scas
inc
shll
push
pop
jns
les
cmp
or
inc
out
adc
idivb
cmp
push
adc
inc
mov
dec
or
mov
pop
xchg
rclb
push
flds
mov
cmp
jecxz
xchg
sbbb
xor
dec
jg
xor
repnz
inc
lcall
mov
and
hlt
jp
mov
hlt
sar
mov
cmp
inc
and
mov
ja
mov
xor
jl
adc
adc
push
sarb
ror
push
xorb
jp
movsb
adc
rorb
repnz
adc
pop
jb
out
sbb
mov
test
mov
mov
dec
xor
aam
jb
sbb
cmp
sbb
repz
cmpl
fsubrs
adc
lcall
push
and
cmp
mov
test
or
mov
cmp
sub
icebp
ja
adc
les
iret
lods
clc
xor
cmpsl
incb
mov
ficomps
cmpsl
xlat
ds
inc
xchg
aad
jge
adc
cltd
pop
sbb
pop
jbe
mov
cmp
imul
mov
lahf
pop
mov
push
das
push
inc
dec
push
in
mov
pushf
movsb
outsl
or
mov
into
por
or
mov
imul
out
addl
and
or
dec
jmp
lea
cs
mov
bound
mov
xor
out
fstps
mov
in
inc
mov
aam
mov
insb
xor
push
adcl
std
imul
repz
adc
mov
add
cli
jle
xor
mov
jp
or
xor
and
jb
test
cmp
mov
out
or
xchg
push
pop
push
fstpt
cmpsb
push
aaa
sub
pop
rclb
jge
loopne
shlb
mov
jns
add
sti
sti
or
jns
pop
xchg
push
in
aad
ret
inc
or
add
in
orb
pusha
fdivl
ds
icebp
or
std
lock
icebp
push
push
js
insl
or
sub
movsb
movsb
inc
adc
js
push
sub
inc
insl
jl
sar
xchg
insl
je
cwtl
sbb
push
add
inc
sbb
adc
xor
mov
pop
and
and
mov
repnz
inc
jb
ficoms
dec
jbe
js
pop
bnd
or
test
xor
js
out
dec
pop
xor
mov
push
or
out
rcll
cwtl
sbb
popf
pop
xor
fsubrl
shl
mov
push
rcrb
sbb
loopne
mov
pusha
xor
xchg
mov
out
xchg
lods
stos
outsl
or
shlb
add
clc
and
jae
inc
cld
loope
icebp
push
mov
repnz
stc
lods
push
adcb
repz
adc
sbb
inc
divl
shlb
mov
cmp
cli
xchg
or
sbb
inc
cld
jns
ret
sar
test
add
les
icebp
ja
mov
xchg
punpcklbw
dec
sbb
push
adc
lcall
add
stc
xchg
xchg
add
cmp
inc
adc
adc
lock
jo
insl
push
xor
adc
imulb
adc
sahf
mov
push
adc
mov
mov
aad
xor
mov
xor
add
out
mov
divl
stc
xor
dec
xchg
in
or
mov
ret
pop
cmp
add
in
test
nop
ds
popa
xor
adc
icebp
nop
bound
dec
push
cs
ds
cltd
mov
dec
xor
div
cmp
fdivrs
cmpsb
pop
mov
sbb
mov
mov
insb
jne
ds
adc
insl
xor
movsb
xchg
unpckhps
ss
adc
pop
cmpsl
jl
cs
pop
cwtl
cld
icebp
jo
mov
pop
fwait
xor
xor
jo
xchg
cltd
test
fistl
sarb
dec
incb
push
lds
insb
xorl
and
aaa
movsb
mov
push
pop
pop
pop
cmp
or
mov
xchg
jle
insl
adc
xchg
xchg
and
movsl
loop
xchg
mov
repnz
lock
pop
shl
push
imul
inc
hlt
enter
aam
shll
mov
loopne
pop
push
dec
push
fwait
cmp
prefetch
or
inc
pop
xchg
loope
daa
push
pop
int3
push
clc
sub
insl
adc
daa
xor
loop
inc
jge
pop
mov
sbb
jae
xor
jmp
add
adc
adc
in
aas
pop
ret
ja
or
fdivr
pop
sbb
sub
adc
test
test
mov
icebp
add
mov
jle
iret
or
mov
adc
insl
sbb
cmpsb
mov
test
mov
adc
mov
movsb
mov
push
dec
cli
push
test
or
pop
jl
pop
push
inc
in
pmaddwd
pop
test
and
je
aam
dec
testl
push
testb
mov
out
repnz
pop
dec
es
mov
sub
sub
sub
xor
push
mov
add
push
sbb
cmp
or
jno
jl
or
lahf
mov
adc
pop
xor
shll
push
push
stc
leave
adc
lahf
pop
mov
push
sbb
lcall
xor
pop
jmp
je
test
incb
sarb
cmp
dec
mov
mov
mov
jle
lea
sbb
dec
repnz
pop
repnz
push
jg
bnd
dec
inc
mov
adc
lea
shll
and
xchg
mov
xchg
push
jb
mov
mov
mov
das
fdivr
mov
inc
notl
repz
lock
adc
push
mov
xchg
shlb
sbb
adc
in
clc
je
mov
cwtl
sub
pop
xor
add
jbe
lods
mov
out
pusha
outsb
sub
popf
dec
add
xor
and
pop
sbb
xchg
push
decb
jbe
mov
mov
dec
fidivl
orl
ja
or
test
jns
push
adc
push
testb
lcall
insl
out
mov
mov
mov
jge
popf
cmp
mov
pop
push
decl
jge
adc
mov
dec
aad
mov
jp
push
pop
les
mov
push
in
mov
xor
idiv
cltd
sbb
fcompl
std
ss
repz
repz
pop
fnstsw
inc
mov
adc
and
adc
sub
sub
mov
movsl
push
bnd
ds
xchg
cs
repz
fldl
cmp
out
mov
popf
jnp
stc
sbb
sbb
xor
xorb
jno
out
adc
mov
sahf
lods
call
jnp
jno
ss
adc
jno
rcrb
iret
mov
xor
dec
enter
jo
aas
clc
push
or
fcmovnu
aam
cld
fstps
icebp
scas
push
push
fdivs
popa
mov
icebp
or
rclb
icebp
std
add
lock
in
mov
fdivs
xlat
or
ss
push
mov
into
fsubrs
sbb
fistpll
and
adc
mov
add
xchg
dec
xor
adc
add
popa
or
add
fisubl
cwtl
mov
adc
clc
jne
inc
add
and
loope
xor
mov
push
pop
xor
fdivs
rolb
adc
xorb
xchg
lret
js
addr16
stc
mov
je
jle
adc
pop
loop
or
push
cmp
xchg
and
mov
add
adc
inc
jno
test
and
adc
icebp
idivl
dec
dec
hlt
sub
pop
int
push
xchg
sbb
imul
or
pop
sarb
aas
popa
lock
dec
out
mov
icebp
push
or
outsl
pop
push
mov
jo
cmp
and
lea
jns
out
cmp
fiadds
aad
jl
je
arpl
cltd
dec
mov
cld
cwtl
or
mov
jp
lret
int3
repnz
pop
add
stc
push
jns
pop
inc
jo
adc
xor
adc
repnz
jge
xor
aam
rclb
sarl
inc
test
js
cmp
xchg
fcoms
imul
lock
arpl
popa
mov
push
popa
jecxz
pop
cmpsl
jle
sbb
jle
xchg
sbb
xlat
inc
shlb
ss
adc
mov
add
mov
ja,pn
cmp
in
mov
out
test
xchg
mov
add
fisubl
jns
inc
std
sbb
pop
pop
jmp
dec
xor
mov
mov
and
mov
mov
add
or
or
or
adc
jae
and
lock
add
jnp
sub
sub
outsl
mov
dec
mov
xchg
sbb
pop
icebp
mov
mov
or
or
xchg
ret
test
inc
xor
lea
into
or
xchg
popa
mov
mov
push
sbb
icebp
sbb
mov
or
mov
gs
or
stc
pop
pop
repz
pop
or
testl
icebp
inc
unpckhps
cs
imul
pop
push
mov
xchg
insl
sbb
mov
jno
or
mov
cmc
mov
mov
push
xchg
icebp
out
js
mov
cmc
adc
jle
hlt
add
pop
dec
cli
xchg
or
test
sbb
imul
mov
stos
mov
imul
inc
xlat
jb
cmp
inc
inc
pop
mov
cmc
pop
xor
ret
fcomps
cmpl
fcmovu
pop
lock
sbb
mov
push
adc
cmp
mov
or
pop
mov
pop
lock
mov
fldl
jmp
js
pop
repnz
push
adc
and
adc
dec
lock
hlt
xchg
sub
outsb
test
jl
xor
sub
add
dec
xor
jle
jp
aam
cld
ja
or
idivl
xor
cmp
pushl
dec
mov
push
sbbl
subb
add
push
sbb
push
cli
sbb
adc
dec
jae
xchg
cmpl
cmpb
mov
xor
icebp
nop
or
cmp
push
mov
jmp
loope
push
cmpb
test
out
in
or
cmpsl
test
cs
das
jecxz
cmp
in
lods
push
xchg
sub
push
and
mov
aam
xlat
ret
lock
jp
jns
outsl
dec
rcl
jbe
xor
clc
aad
int
ss
push
inc
repnz
cltd
call
pushf
dec
arpl
out
enter
stc
movsl
cld
sub
scas
lds
lahf
int
mov
xor
mov
in
push
outsl
mov
jno,pn
cld
insl
jbe
adc
push
ja
icebp
cmp
mov
in
loope
pop
xchg
test
fldz
movsl
test
sub
xor
int
xchg
cmp
pop
jmp
in
sub
dec
out
mov
ja
sub
cmp
mov
or
cmp
pop
shrb
ret
xchg
popa
cmp
shlb
idivl
mov
test
rcrb
stc
cmc
mov
sbb
sbb
pushf
test
daa
icebp
jb,pt
and
inc
clc
lods
inc
bound
and
and
out
idiv
push
pop
js
aad
gs
cwtl
mov
ja
jns
push
stc
jle
sbb
lock
lcall
in
lock
mov
cmp
mov
icebp
sbb
arpl
loopne
jno
inc
cmp
jp
jns
dec
popa
add
divb
jno
jns
mov
not
cwtl
sahf
lock
jbe
out
idiv
push
dec
jae
jp
cmc
jb
and
lds
adc
enter
imul
shl
pop
ja
mov
filds
dec
jae
or
fisubrs
loop
jg
and
adcb
push
or
test
jns
addb
or
pop
pusha
add
outsl
push
sahf
ror
call
adc
mov
test
xchg
pop
mov
xchg
lock
clc
gs
mov
add
icebp
lcall
rcr
adc
cmp
dec
enter
fwait
adc
jnp
and
mov
loope
jo
mov
mov
hlt
inc
cmpsb
test
fbstp
mov
mov
inc
sub
cmp
cli
leave
icebp
mov
icebp
xlat
inc
xlat
jae
aaa
xchg
sahf
jb
dec
xor
mov
cmp
inc
insb
in
clc
or
add
push
jle
jo
fildll
roll
mov
jno
ja
mov
add
inc
cltd
pop
xchg
scas
jae
fwait
dec
sbb
stc
cltd
push
outsl
inc
lahf
inc
clc
aaa
cmp
inc
xorb
test
pop
lock
push
lahf
jno
sbbb
fsubl
add
mov
and
xor
mov
ret
xor
jecxz
call
inc
add
jae
test
stos
mov
cwtl
cmp
jl
pop
adc
not
jns
and
lcall
dec
fimuls
cmpl
xor
inc
mov
adc
xor
sub
stos
mov
popa
fwait
clc
mov
xchg
and
or
or
cs
cmp
push
push
cmp
dec
push
push
xorl
mov
inc
orb
add
xchg
pop
in
repz
imul
mov
lcall
xor
gs
pop
shlb
addr16
push
lahf
cmpsl
movaps
inc
jb
loop
dec
and
sub
mov
cmovge
pop
jae
pop
out
and
mov
outsb
call
push
inc
jo
adc
or
inc
or
in
mov
cwtl
inc
pop
fdiv
lret
add
xchg
add
mov
add
cmp
lock
outsl
dec
rclb
insl
pop
jo
adc
ret
add
cmp
adc
mov
fwait
nop
out
push
add
jb
jl
and
jae
inc
fcmove
mov
dec
sbb
ljmp
mov
mov
lea
add
lock
outsl
dec
into
jb
int3
addl
arpl
cmp
mov
push
mov
pop
mov
stc
mov
dec
fisubl
dec
xor
push
out
xor
test
jbe
test
mov
mov
cld
add
or
cmp
cwtl
outsb
or
inc
imul
lcall
addl
cmpsb
into
cmp
push
adc
and
or
sub
mov
mov
je
jae
bound
pop
push
xchg
movups
das
or
pusha
sub
and
aas
jecxz
sub
fistpll
xor
bnd
inc
nop
dec
add
jno
dec
jle
sti
push
sti
xor
insl
imul
lds
inc
sub
mov
rol
cwtl
adc
in
add
adc
test
pop
adc
cmp
push
adc
addl
mov
cwtl
mov
push
add
repz
stc
sub
lret
pop
js
hlt
or
stc
or
shl
repnz
test
sbb
xor
inc
es
cmp
repnz
fdivr
adc
mov
jp
mov
mov
aam
sbb
pop
loope
cmpsl
fistps
cld
cmp
fbstp
pop
shlb
loopne
jo
pushf
push
fisttpl
addps
mov
adc
outsb
out
xor
roll
jnp
add
inc
jge
icebp
pop
mov
add
jae
aad
jnp
mov
xor
or
bswap
vmread
sub
int
lcall
sbb
hlt
mov
push
stc
and
cmpsl
add
cmpsl
mov
sbb
js
adc
mov
push
xchg
mov
and
enter
mov
or
stos
jg
or
cmp
aam
icebp
pop
lock
xchg
and
pop
and
aad
mov
hlt
cmpl
add
stc
movsl
pop
adc
jmp
inc
or
add
loopne
int3
mov
mov
repnz
int3
scas
inc
mov
dec
fwait
add
pop
adc
dec
mov
aad
adc
adc
mov
pop
jl
fcoml
fistl
mov
lock
scas
lar
push
xor
test
testl
mov
mov
or
mov
aam
sbb
xchg
xor
aam
cmp
wrmsr
mov
push
dec
xor
pop
ret
xchg
mov
popa
lcall
lcall
mov
xor
jge
jne
cmp
test
or
aaa
inc
cmp
icebp
sbb
jl
jb
or
jo
jne
aam
icebp
jl
cmp
dec
add
mov
icebp
or
xchg
sbb
rcrl
push
orb
test
lret
cs
test
sub
dec
jl
mov
lcall
mov
add
outsl
jo
fidivrl
mov
push
fstl
test
or
pop
mov
stos
xchg
pusha
jo
or
ljmp
addb
pop
icebp
lods
jne
mov
jne
orl
leave
inc
bound
jb
lock
cwtl
mov
pop
adc
repnz
cmp
rcll
fwait
jne
jo
mov
cmp
mov
add
dec
and
pusha
call
out
xor
xcrypt-ofb
cmpsl
stos
shll
testb
adc
mov
dec
push
jp
or
xchg
hlt
notl
jne
js
cmp
ret
or
pop
repz
add
cltd
mov
negb
notl
ret
cmp
stos
mov
add
adc
int
or
xor
and
stos
xchg
lcall
stc
jmp
sub
fistl
mov
js
gs
iret
in
das
sub
roll
inc
cltd
bound
sbb
mov
mov
insl
out
cmp
cmp
shlb
rol
xor
add
mov
cmp
js
imul
add
jp
mov
andl
xor
mov
mov
jno
iret
ret
xlat
repnz
ficompl
out
mov
std
mov
mov
cmc
subl
pop
dec
enter
mov
jb
inc
out
jb
mov
stc
add
test
fstps
lock
mov
jbe
gs
pop
jle
sbb
popa
push
jl
rcrb
mov
lret
ss
dec
fwait
dec
jmp
pushf
sahf
cmc
sub
xor
xor
add
mov
mov
ds
mov
adc
js
push
cmp
mov
jbe
in
das
sbb
idivl
icebp
mov
in
jmp
aaa
pusha
out
inc
sbbb
add
stos
sbb
lret
cmp
xchg
adc
stos
add
lock
mov
in
jp
mov
mull
jnp
stos
loope
or
sbb
jno
add
inc
jnp
xchg
out
scas
xor
sbb
adc
scas
xchg
inc
xor
sbb
cmp
xor
adc
incb
ljmp
pushf
aam
pop
push
jle
sub
cmp
aam
sti
rorb
mov
cmp
je
and
cmp
mov
xor
or
hlt
aas
lahf
and
inc
mov
xchg
xor
add
fcmovnb
repz
mov
sbb
mov
and
in
int
xchg
adc
call
ja
push
pop
pop
mov
mov
addb
lcall
push
jae
inc
loopne
lea
ja
fadds
or
adc
pop
inc
lods
inc
dec
std
and
subb
push
leave
add
jle
mov
in
daa
fisubs
push
and
add
imul
adc
dec
lret
sbbl
mov
push
pop
adc
popf
mov
repnz
push
push
sahf
js
mov
add
inc
adc
loope
js
inc
adc
shlb
aas
test
adc
add
adc
mov
mov
ret
aas
imul
mov
mov
icebp
push
cmp
cs
mov
adc
icebp
cmp
std
dec
add
push
or
pusha
pop
push
inc
adc
lock
adc
push
add
or
xor
sarl
jbe
lds
cwtl
push
xor
pop
pushf
adc
inc
fcoml
ss
int
jb
mov
add
push
or
flds
pusha
or
dec
test
les
lahf
test
lock
in
loope
imul
cmp
push
push
pop
pusha
lahf
sub
xor
sbb
adc
cwtl
je
mov
or
adc
adc
xor
cmp
gs
out
jl
xor
movsb
fwait
xchg
push
js
sbb
or
sti
push
jp
add
out
sti
or
jb
push
jb
or
iret
fldcw
cmp
push
flds
cmp
fyl2xp1
test
push
mov
jb
fwait
daa
lret
rcll
sub
inc
ret
aaa
inc
addr16
hlt
mov
ret
imul
data16
fbld
ret
jbe
jae
or
insb
push
add
stc
insl
push
iret
sub
es
push
stc
or
test
sbb
aaa
adc
cmp
or
adc
idivb
jle
cmp
in
or
adc
push
repz
je
sbbb
add
inc
push
lret
pop
inc
dec
iret
fwait
dec
xchg
nop
mov
shlb
mov
mov
adcb
jae
stc
add
stos
cmc
jb,pn
lea
cmp
dec
pusha
into
stos
jo
enter
mov
pop
and
adc
mov
sub
mov
pop
inc
xchg
cmpsl
aas
imul
out
mov
sti
rclb
adc
inc
mov
jo
adc
cltd
inc
cmc
aam
cmp
mov
rolb
aad
pusha
dec
xor
rclb
mov
sahf
orb
sub
inc
int
or
sub
add
sti
mov
pop
adc
inc
jg
dec
xchg
addl
mov
ljmp
or
outsl
nop
cld
ja
mov
cmpsl
cwtl
test
xor
aaa
lock
addl
push
sub
addr16
dec
xchg
adc
icebp
mov
cwtl
adc
or
pusha
loop
aam
inc
or
fdivl
sub
stos
fwait
test
xor
jae
mov
or
or
or
or
sub
and
or
nop
or
and
or
sub
adc
mov
inc
imul
fdivrl
sub
sbb
cmp
pop
ss
pop
stc
and
inc
mov
or
sbb
pushf
xor
insl
jp
xor
or
ret
push
dec
mov
push
inc
xor
gs
notb
cmp
or
les
insl
jns
fildl
jbe
es
cwtl
cmc
fidivl
addr16
ss
out
sbb
xchg
mov
jbe
pop
cmp
mov
mov
mov
mov
in
pop
xlat
mov
adc
das
shlb
sbb
call
push
mov
lea
mov
sbb
mov
adc
adc
jae
mov
dec
aaa
jae
add
xchg
add
push
mov
push
mov
aas
pop
stos
sub
stos
fidivrl
hlt
xor
dec
mov
push
mov
leave
cmp
notb
mov
mov
sub
push
int
and
mov
sbb
sub
cmpsl
mov
push
xchg
xor
adc
add
test
jp
iret
jle
movsl
jp
mov
repz
jo
call
jle
in
lock
scas
xchg
sub
lret
cmpsl
mov
es
pop
mul
mov
notl
jb
sbb
xor
jecxz
jl
jb
in
sub
mov
or
inc
ret
ja
sub
sbb
rcl
mov
and
inc
add
jae
push
out
shlb
push
nop
out
lds
jle
repnz
xchg
andb
jne
cmpsl
mov
fldcw
or
repz
pop
sub
mov
imul
rorl
mov
hlt
sbb
cmpsb
cmp
cmpb
testb
mov
clc
aaa
jl
adc
xchg
push
xchg
in
mov
dec
jnp
mov
fisubl
jb
scas
in
cs
cmpsb
mov
adc
addr16
jae
imul
add
xchg
sbb
adc
and
or
outsb
mov
mov
or
cmpsl
add
cmp
jo
mov
sbb
iret
push
xchg
lret
sbb
inc
mov
ret
lea
dec
in
je
pop
mov
cmp
hlt
adc
fistpll
xchg
dec
push
xchg
mov
adc
push
adc
mov
out
mov
pop
inc
in
mov
xchg
les
aas
pop
cmp
or
testl
test
mov
ss
sbb
rcll
cli
into
jb
and
mov
mov
push
inc
cmp
cmpsb
cmp
or
out
mov
insb
xor
repnz
dec
xor
or
inc
jg
jb
adc
mov
stos
xchg
push
push
icebp
and
push
loopne
cmp
aad
pop
out
and
popf
std
and
push
repnz
lock
cmp
push
mov
or
pop
loop
xor
xchg
adc
xor
mov
xchg
pop
mov
jno
inc
into
ret
xor
in
and
sub
or
or
pop
jmp
aam
dec
mov
stos
or
ret
jns
pop
and
test
or
or
sub
std
inc
mov
xor
mov
or
xchg
pop
xorl
loop,pn
xorl
pushf
or
xchg
sbb
or
ds
cs
cwtl
roll
mov
xor
xchg
sub
adc
cltd
inc
ret
cmp
test
sub
or
add
adc
mov
add
ja
adc
cmp
icebp
jno
lea
pop
icebp
es
xor
xor
test
es
cld
sbbb
cmp
sbb
mov
xor
jl
aad
out
cmp
mov
add
and
cmpb
inc
xchg
orb
adc
mov
cmp
clc
cmpsl
jge
int
dec
add
in
pop
hlt
xor
xchg
add
icebp
into
jecxz
insb
sbb
xor
jl
repz
xor
inc
daa
fisubs
ja
fbstp
adc
jmp
push
insl
jns
lcall
mov
rep
out
pop
mov
xchg
xor
inc
push
in
inc
out
bts
xchg
aad
fsubrl
movl
push
mov
xor
mov
adc
in
pop
mov
jecxz
out
leave
idivl
data16
xchg
and
sti
adc
or
cli
lock
movsl
sbb
or
addb
sub
adc
pop
faddl
mov
push
inc
or
imull
cmp
sub
mov
stc
push
mov
and
adc
jne
pop
in
sbb
cmpsb
xchg
mov
and
call
sub
jno
mov
inc
mov
int
adc
jne
xor
cmp
stos
push
jl
je
nop
xor
insl
xchg
inc
dec
sarb
cmp
outsl
pop
repz
mov
shlb
push
gs
push
jmp
clc
mov
add
cld
mov
mov
push
out
fwait
int3
divl
jno
clc
into
xor
jae
and
loope
or
push
js
and
mov
adc
sbb
fwait
or
push
sub
dec
icebp
push
leave
and
jno
mov
stc
leave
add
test
push
int
add
sahf
xorb
push
mov
dec
out
pop
scas
scas
pop
testb
sub
mov
fiaddl
cli
push
test
dec
inc
fwait
icebp
fwait
sub
fidivrs
scas
pop
pop
jo
pop
cld
pop
push
or
inc
pusha
pop
cli
bnd
push
fisubs
out
leave
jo
jnp
fdiv
adc
mov
xor
sbb
inc
outsb
fmull
fwait
icebp
push
scas
pop
enter
cmp
inc
test
sbb
mov
adc
jle
sub
pop
mul
stos
jae
rcr
and
pop
addr16
sbb
movl
lods
jnp
fldl
in
out
aam
call
dec
pop
jp
je
jo
adc
aam
fbstp
mov
adc
cmc
scas
ss
sbbb
cmp
cli
and
sahf
mov
clc
pusha
jg
add
lds
out
mov
int
adc
jle
mov
jno
xor
xor
mull
inc
or
mov
and
mov
xchg
mov
imul
add
faddl
sbb
dec
pop
repnz
sbb
dec
push
movsl
pop
aam
sub
xchg
lods
sbb
pop
mov
divl
lahf
jno
loopne
outsl
xor
std
int
mov
jl
push
ljmp
popa
in
cmpsb
mov
mov
add
xchg
mov
cmp
push
lahf
xor
out
fwait
jg
pop
inc
data16
jnp
dec
cli
cmpsl
lcall
push
lgs
aad
sub
stc
into
inc
lea
or
adc
xchg
mov
mov
cmp
mov
mov
cmpb
cmp
add
out
or
enter
add
iret
xchg
insb
xlat
mov
jp
testb
int3
sub
mov
jmp
stos
cmovb
popl
xor
pushf
fnstsw
mov
pop
mov
push
dec
repnz
loopne
repz
div
adc
dec
bound
inc
and
mov
adc
in
test
sahf
fsubl
or
cmp
nop
push
mov
cmpsb
inc
fisubrl
and
loope
mov
out
popf
or
imul
mov
push
lock
shll
jecxz
xchg
or
xchg
sbbb
push
dec
add
mov
sahf
or
cmp
jl
xchg
testl
icebp
fcom
adc
adc
or
test
mov
push
mov
scas
jo
enter
movsl
cmpsb
jb
sub
cmp
inc
or
adc
dec
mov
pop
clc
add
inc
xor
pop
jns
jb
mov
gs
fnstsw
mov
outsb
adc
xchg
divl
cmp
nop
stc
cmp
popf
mov
repz
xchg
into
cmp
call
jnp
sbb
std
xchg
inc
jnp
add
push
out
arpl
xor
lods
in
mov
mov
or
sbb
inc
sti
and
and
js
push
cmpsl
xchg
mov
adc
mov
sub
aaa
xchg
imul
insl
xor
adc
and
adc
pop
mov
pop
adc
and
inc
pusha
and
pop
mov
lret
mov
sub
dec
adc
mov
ds
pop
pop
add
sub
data16
jp
dec
cmpl
or
popa
repnz
iret
dec
pop
shrb
jmp
jecxz
lahf
mov
cmp
jne
fs
out
pop
sbbb
mov
shll
imul
cld
xor
pop
and
dec
lods
xlat
inc
test
repz
scas
icebp
or
in
adc
stos
jecxz
popf
icebp
mov
aas
or
adc
add
add
jg
xor
in
lock
repnz
les
mov
or
repnz
loop
cmp
xchg
mov
iret
inc
lahf
mov
or
loope
pop
or
clc
push
int
mov
mov
pop
cld
push
adc
inc
add
and
aam
je
and
pop
shl
inc
xor
lret
pop
sahf
push
sub
mov
arpl
or
lea
orl
xchg
add
subb
fldl
mov
xchg
cmp
inc
daa
or
prefetchwt1
add
mov
fistl
cmp
jno
mov
jnp
and
or
pop
pop
cwtl
push
inc
lock
jbe
bound
adc
aam
or
rcr
jo
shlb
js
sahf
inc
test
push
std
pop
fwait
repnz
hlt
inc
adcb
dec
mov
rcrb
aam
mov
mov
jp
jne
pop
cmpsb
in
pop
dec
or
cwtl
push
dec
fs
icebp
cmp
movsb
in
iret
aad
fcoml
mov
testl
mov
mov
idivl
aas
out
das
adc
jl
push
dec
shr
jbe
outsl
adc
mov
xchg
out
inc
cmpb
jae
aad
daa
repnz
sub
inc
lock
or
xchg
adc
js
jo
imull
movb
icebp
add
sahf
test
sbb
xchg
mov
push
mov
sbb
sub
dec
mov
cmp
mov
insl
scas
pop
push
or
and
cmp
inc
cmc
mov
add
dec
aad
inc
sbb
cmp
jb
pop
lea
scas
pop
test
pop
mov
mov
dec
jne
scas
pushf
and
addr16
jg
popa
pop
mov
dec
rcrl
out
mov
imul
clc
arpl
xchg
fdivrs
pop
inc
cmpsb
aam
mov
pop
ja
cli
inc
xchg
and
mov
adc
js
and
repz
fimull
mov
xchg
or
push
mov
and
add
jae
or
xchg
mov
out
lock
push
dec
clc
cmpsb
mov
icebp
testl
aam
mov
add
mov
fdiv
out
inc
ret
fidivrs
xor
inc
adc
ja
popa
sbb
lret
jb
ja
pop
jbe
or
lcall
or
jge
cltd
sub
dec
push
sub
jecxz
dec
test
repnz
pop
add
and
mov
mov
outsl
stos
pop
sub
mov
jge
out
dec
mov
xor
lret
ret
imul
in
adc
cmpsl
es
push
fistl
nop
pusha
insl
dec
xor
pop
movsb
mov
stc
fimull
cmpsl
pusha
into
xlat
mov
push
jno
repz
sbbb
scas
xchg
icebp
push
rol
lock
mov
or
adc
movb
adc
jo
out
or
and
jbe
xchg
mov
icebp
add
insb
sbb
push
ja
inc
idiv
orl
ds
jb
subl
popf
jb
sbb
clc
cmpsl
fmul
orb
daa
enter
insl
iret
lcall
sahf
cmp
test
rorb
xchg
scas
es
cmp
push
push
sub
andl
stos
es
clc
xor
cmp
or
jbe
and
in
or
adc
push
lock
int
fiadds
and
mov
mov
sbb
mov
or
fbstp
aam
js
int
push
jge
jg
popa
mov
mov
add
and
adc
out
mov
notl
add
enter
add
orb
mov
xor
inc
xor
lock
pop
cmp
fiaddl
in
adc
loope
push
je
dec
pop
lea
insl
xor
arpl
pop
xor
idivb
jne
xchg
les
rolb
addr16
xchg
loopne
ds
push
test
mov
push
jo
test
dec
ficomps
jne
cmc
in
mov
out
pushf
xchg
in
aam
pop
jo
test
loop
dec
sbb
loop
add
xchg
xor
xchg
out
fmull
sub
mov
cmp
mov
imul
int
inc
loop
push
inc
icebp
shlb
jg
setne
aad
js
mov
jg
mov
or
cmp
add
mov
jg
and
lock
icebp
mov
fs
icebp
in
andb
hlt
rcrl
adc
xor
mov
jg
add
mov
xchg
cwtl
movsl
jle
jle
xor
dec
mov
xchg
fsts
xchg
add
pop
xor
leave
enter
test
imul
inc
dec
out
clc
mov
xor
xchg
sub
mov
lcall
repz
fsts
test
pop
xchg
sbb
je
adc
xor
in
xor
mov
mov
test
pusha
dec
xor
cmp
stc
mov
mov
inc
xor
hlt
push
enter
or
pushf
pushf
xor
addr16
sub
popf
pushf
jecxz
adc
pop
ss
shl
test
xor
cmp
popf
sub
sub
iret
idivb
movsb
push
repz
les
sub
inc
sub
pop
dec
adc
push
cltd
rcl
mov
jg
movsb
hlt
and
jmp
cmp
pop
mov
and
fnstcw
andb
xorb
rorl
fdivrl
fidivs
das
push
pusha
add
lds
test
mov
popa
push
std
repnz
mov
pop
xchg
mulb
stc
icebp
push
mov
jns
outsl
pop
int3
cmpsl
popa
push
orb
or
mov
xchg
inc
pop
push
cmp
out
addl
add
sbbb
push
imul
lock
dec
psrld
loopne
lret
xor
fcoms
fidivrs
or
mov
mov
push
lcall
xchg
adc
add
mov
pop
cmp
and
pop
iret
outsl
and
data16
stos
fidivrs
ds
pop
adc
test
sub
sub
jno
add
sahf
das
shl
xorb
mov
sar
loope
mov
xchg
jae
inc
mov
xchg
xchg
loopne
jns
cmp
lcall
jno
mov
mov
loop
push
lods
rcr
out
cmc
push
cmp
add
mov
bound
je
mov
adc
out
mov
adc
inc
enter
pop
mul
mov
enter
movsb
cmp
fidivs
push
inc
adc
cmpsb
outsl
and
das
mov
or
cmp
mov
fmulp
sbb
xor
fildl
jns
lret
neg
push
inc
fcmovne
jnp
add
jl
shr
test
clc
into
outsb
daa
lock
repz
jle
mov
lahf
rclb
bound
divb
outsl
and
mov
mov
movswl
hlt
mov
test
jo
or
rclb
hlt
or
cli
add
mov
pop
push
jns
sbb
or
xor
sahf
mov
push
pusha
dec
mov
adc
repz
fyl2x
mov
jp
sbb
adc
push
cld
hlt
or
loopne
push
push
mov
test
mov
pop
jo
mov
fcmove
and
test
jbe
scas
arpl
mov
jns
into
jp
jbe
xchg
nop
add
inc
mov
xorb
pop
or
sub
jl
adc
ss
inc
jbe,pt
and
xor
adc
add
cmp
jbe
sar
xor
idivb
inc
jp,pt
lahf
mov
out
mov
inc
push
or
jmp
jle
or
scas
mov
inc
pushf
mov
jecxz
adc
aam
jmp
adc
dec
dec
lahf
cmpsb
xchg
fdivr
dec
xor
xchg
xchg
adc
adc
mov
mov
xor
xor
push
xor
push
scas
out
iret
cmp
xor
icebp
add
insl
xor
cwtl
mov
dec
cltd
aas
mov
lock
repnz
jb
mov
adc
push
clc
lcall
mov
push
inc
mov
jge
xor
outsl
dec
jo
insl
mov
mov
jae
or
adc
adc
lock
xchg
mov
or
cmc
int3
cmp
mov
cmc
dec
push
or
xor
adc
xchg
jo
add
ss
shl
add
jae
fildl
or
inc
js
push
icebp
jbe
push
mov
imul
push
hlt
add
lods
and
mov
sbb
dec
cmp
inc
push
ficompl
mov
ret
data16
mov
testb
or
iret
mov
xor
gs
call
push
into
repnz
cmp
repz
fidivs
sbb
shll
inc
xor
jbe
fwait
call
mull
mov
mov
nop
cs
xchg
mov
mov
pop
repz
xorb
pusha
js
clc
xor
xchg
arpl
in
js
jae
cmp
cli
sub
and
or
insl
sahf
cli
mov
or
stos
repz
pop
and
push
xchg
xchg
lods
and
or
mov
in
mov
sbb
sahf
es
cmp
popa
xchg
std
push
xlat
ljmp
cwtl
xchg
or
push
fwait
push
mov
pop
adc
xor
lea
push
jmp
pop
test
cmp
xchg
orb
sub
xor
insl
mov
lds
xchg
dec
scas
adc
pop
imul
das
cld
cmp
and
pop
jno
sarb
test
adc
push
inc
fwait
adc
jno
inc
fcomps
xchg
add
aas
and
js
stc
insb
sub
push
jecxz
notb
or
arpl
pop
mov
stc
scas
ss
adc
jecxz
cmp
nop
xchg
icebp
hlt
aam
out
mov
jl
xor
mov
stc
inc
fiaddl
fwait
inc
das
pop
sub
icebp
or
or
mov
mov
push
test
lock
lcall
adc
inc
xchg
movsb
cmp
jg
sbb
add
xor
aas
std
add
mov
and
jo
cmp
insl
ficoms
lods
pop
sbb
or
movsl
stos
hlt
hlt
and
add
outsb
rorb
jno
xor
mov
add
dec
sub
push
add
mov
aaa
rolb
leave
rorb
lcall
jne
bound
testl
clc
adc
adc
lock
cmp
data16
inc
scas
cli
push
inc
push
cmp
inc
outsb
mov
dec
sbb
in
fwait
xor
pop
fstl
cmc
add
sarb
repnz
push
cmp
dec
hlt
jo
pop
jne
stc
nop
sub
movaps
fcmovb
sahf
rcll
dec
clc
adc
jae
add
xchg
js
cmp
jbe
das
add
cs
rcr
mov
pusha
xchg
mov
scas
pop
repnz
mov
jecxz
clc
mov
and
xchg
lock
lock
jg
mov
add
xor
rclb
pop
scas
gs
jl
je
lods
ja
aam
or
jle
mov
shrl
int
pop
aaa
jno
call
shrl
in
outsl
xchg
jnp
mov
repnz
add
xor
xchg
ljmp
mov
je
xchg
push
and
cmc
xor
pshufw
or
cmp
les
leave
cmpsb
pushf
xor
push
add
lods
pop
mov
repnz
das
loop
mov
cmp
cmp
popa
push
rolb
jne
cmp
fistpl
lret
ds
xor
addb
aaa
scas
lcall
enter
js
add
pop
popa
xchg
mov
mov
hlt
or
xchg
dec
scas
adc
adc
inc
ljmp
pop
mov
call
cmp
cld
es
mov
mov
sub
fwait
mov
xchg
data16
xor
imul
mov
enter
ljmp
in
push
add
xor
jle
jo
sbb
movsl
and
incb
out
mov
cmp
jae
test
or
enter
xor
dec
negb
xor
push
sbb
das
mov
mov
data16
or
ficoml
fsubs
fildl
fisttpl
push
jbe
or
add
ret
xchg
out
pop
repz
inc
mov
loope
lea
xor
jb
cwtl
jl
repz
adc
push
inc
jnp
ja
or
jo
dec
roll
mov
in
adc
dec
and
push
add
xorb
xchg
and
pop
mov
xchg
push
pusha
enter
cmp
add
push
enter
mov
mov
lret
sar
xor
xchg
loope
mov
inc
jle
dec
test
inc
mov
repz
cmpsl
xor
add
cmpsb
insb
aaa
test
push
fxch
push
and
fsubs
push
adc
mov
aaa
scas
lea
out
mov
mov
js
ss
cmp
mov
icebp
imul
stc
add
test
fs
and
xor
push
mov
shlb
or
hlt
cltd
mov
aad
iret
jle
pop
repnz
dec
sub
and
xchg
pop
jg
pop
push
and
fs
dec
popf
popl
outsb
stos
lock
or
stc
xor
push
mov
push
or
stos
mov
cmpsl
cmp
mov
mov
xchg
shll
aam
mov
sub
adc
mov
int3
arpl
shrb
sub
dec
inc
js
popa
adc
and
push
repz
sarb
mov
mov
icebp
adc
rcrb
es
push
push
and
cmpsb
dec
repz
hlt
or
cmp
cmp
add
and
mov
add
or
cmp
lahf
push
pop
jae
mov
mov
loop
ss
mov
sub
aas
dec
dec
cmp
js
mov
mov
sbb
mov
mov
jmp
jae
fsts
add
andl
lods
cmp
fs
cmp
sub
sub
inc
js
mov
adc
movsb
dec
lds
repnz
jae
mov
pusha
loope
lahf
nop
jae
or
adc
and
ja
sbb
pusha
or
clc
sahf
cmp
das
aas
ret
cli
mov
mov
xor
inc
adcb
and
cmc
lret
ljmp
cwtl
outsl
lahf
xchg
sbb
jb
pop
test
pandn
cmp
sub
ds
xchg
mov
adc
adc
and
fcomi
insb
insl
stc
fistps
scas
ds
rcrl
add
fldl
mov
and
lahf
xor
add
stc
add
add
add
leave
js
or
jge
cmp
stos
push
mov
pop
or
aam
push
or
call
mov
xor
call
clc
lcall
outsl
out
add
lock
push
jb
lcall
adc
stos
mov
sub
movzwl
mov
jno
dec
jae
or
mov
add
xchg
sahf
push
sbb
rolb
adc
pusha
dec
cmp
jno
push
into
mov
ss
xchg
aad
fcomps
scas
cld
add
push
adc
pusha
dec
adc
dec
shl
xor
hlt
pop
mov
mov
dec
sbb
add
ret
add
cmpsb
aam
jmp
in
adc
adc
ljmp
inc
fs
xchg
ret
sub
dec
fistpll
mov
mov
adc
lock
sub
jg
xchg
cmp
mov
das
or
push
stos
lock
jmp
cld
or
xor
stc
inc
hlt
xor
jbe
test
mov
mov
or
out
adc
ss
leave
icebp
push
gs
mov
or
add
lds
movsb
mov
or
arpl
cwtl
and
cmp
jecxz
mov
ret
test
fs
add
into
call
mov
popa
cmc
add
cltd
push
and
push
jle
and
adc
adc
ja
mov
fdivp
or
pop
push
xor
dec
andl
adc
and
fisttps
out
movsb
lock
int3
nop
xchg
xchg
mov
xorb
pop
push
rorl
inc
or
sbb
gs
sahf
pop
mov
repz
jne
fdivl
test
adc
sbb
inc
jge
jb
cmp
add
test
lds
jb
xchg
jl
clc
inc
push
add
stos
icebp
sbb
cld
icebp
push
or
insl
cmc
rcr
cli
jp
mov
mov
mov
jno
rcrb
xor
adc
mov
jl
xchg
test
mov
xor
add
lock
lock
pop
inc
mov
sbb
dec
clc
shl
cmp
imul
dec
lea
pop
outsb
movsb
mov
sbb
and
stos
pusha
xor
imul
ds
cs
mov
xchg
lret
fs
inc
jge
push
or
and
andb
cmp
out
jg
push
push
ficoms
xorb
je
inc
mov
push
or
ljmp
or
cmp
js
addl
adc
sub
cmpl
sbb
jne
mov
cmpsl
sbb
imul
test
add
sbb
or
pop
xchg
pop
sub
pop
jl
push
cmp
outsl
pop
pop
push
incl
inc
cmpl
pop
pop
sub
pop
jecxz
mov
xor
sub
jns
pop
icebp
cwtl
inc
add
aad
jecxz
and
dec
cmp
xchg
or
sub
call
mov
fistpll
stos
cwtl
leave
sub
test
hlt
sub
mov
lahf
and
inc
xorl
ret
mov
arpl
fnstcw
mov
pop
push
push
adcl
jbe
movsl
lea
xchg
or
and
add
sub
cli
dec
adc
add
and
orb
sub
cmp
cld
out
mov
add
fwait
jno
rol
and
push
sub
xchg
out
mov
mov
inc
out
push
xchg
in
mov
sub
push
sub
mov
sub
sub
das
mov
stos
mov
lea
and
je
pop
jle
xchg
and
arpl
and
je
jl
mov
shll
push
mov
sub
cli
daa
mov
jb
test
sub
or
or
aas
xor
push
jl
adcl
stos
xchg
arpl
mov
rol
fstpt
pop
addl
ficoml
lret
or
fs
jne
push
dec
adc
jo
xchg
cmp
jb
in
jecxz
or
push
xor
repnz
dec
lahf
xchg
push
cmpsb
push
jnp
jb
ljmp
mov
push
lahf
push
xchg
pushf
mov
repnz
xchg
ja
aaa
out
lock
loop
sti
xchg
scas
stc
cmc
adc
xlat
cmp
xchg
jbe
adc
ret
jp
sub
ret
sbb
jge
jno
xor
sub
cmpl
in
adc
aad
add
xchg
or
adc
push
jle
jno
jbe
shlb
push
sub
ret
out
test
lcall
push
lods
loopne
lcall
nop
arpl
jne
cmp
outsl
dec
clc
lds
xchg
pop
and
mov
push
or
idivl
xor
aas
ret
xor
dec
dec
leave
pop
xchg
adc
sub
shrl
and
aam
pop
sbb
sub
pop
add
mov
adc
pop
enter
mov
dec
inc
adcb
push
add
repnz
insl
icebp
jmp
jecxz
dec
cmpsl
mov
lea
xlat
cmpsl
sub
sbb
insl
or
push
xchg
pop
lret
add
mov
xor
pop
cmp
mov
mov
push
cwtl
andb
jnp
mov
add
or
lods
ja
sar
sti
rcll
push
xorl
xchg
mov
pusha
xchg
or
pop
in
xchg
fs
mov
inc
xchg
lcall
fildll
test
mov
jle
sub
mov
xor
aam
sahf
popf
aaa
ss
sbb
in
mov
int3
loop
push
jecxz
xor
push
xchg
test
rcl
aaa
mov
sub
shll
out
adc
in
push
add
mov
mov
cmp
mov
lods
jle
jnp
cltd
mov
or
mov
fidivrl
jge
adcl
sub
add
inc
cwtl
mov
in
sbbb
xorl
repnz
repz
mov
sbb
mov
xchg
mov
das
mov
cmp
push
jns
ja
adc
push
imulb
cmc
repz
add
jge
testb
in
sbb
je
je
mov
loop
mulb
mov
std
imul
pop
xlat
mov
scas
dec
sub
cli
lock
loop
push
in
cmp
mov
cld
jo
cmp
fistpll
mov
sbb
jno
ret
inc
cmp
xor
outsb
orb
dec
loop
inc
xchg
cwtl
aaa
das
repnz
dec
divl
push
xor
push
mov
jnp
stos
fcmove
push
mov
cmc
lock
adc
lods
movsb
adc
inc
push
push
fistpl
lea
ds
iret
inc
inc
mov
popa
push
cld
or
push
inc
hlt
repnz
mov
out
add
flds
loop,pn
hlt
add
push
test
insl
rcl
mov
adc
push
lret
js
and
jg
and
lahf
aaa
mov
dec
lock
inc
push
stc
das
and
loop
adc
adc
in
and
push
and
fsubs
adc
rcr
adc
mov
clc
cmc
jp
jo
mov
shrb
or
inc
ret
arpl
sub
xor
test
scas
dec
shll
out
and
jo
mov
push
sub
xor
inc
adc
jg
push
aad
mov
inc
js
cmp
cltd
sbb
mov
addl
nop
mov
sti
mov
xchg
movsb
cmpl
insl
xchg
jg
jp
mov
adc
rorl
and
push
into
ret
out
fbstp
jle
insl
fimuls
out
sbb
sahf
cwtl
enter
adc
fidivrs
movsl
pusha
dec
inc
inc
dec
mov
lea
cmp
test
mov
push
jb
sub
sub
mov
mov
jne
or
push
adc
push
js
mov
pop
mov
fwait
mov
hlt
push
mov
mov
hlt
mov
and
cmp
inc
hlt
rorb
mov
xchg
out
cmpsl
mov
dec
or
scas
aaa
xlat
test
push
and
push
insl
cmp
sbb
sub
rcrb
dec
or
leave
cwtl
je
mov
cmpb
pop
or
cmpsl
push
jns
xor
jg
jmp
sbb
dec
notl
push
dec
sub
push
cmova
in
sbbl
aad
shlb
test
out
pop
fidivs
test
fdivr
push
cmp
loope
sbb
mov
mov
sub
repz
dec
fs
pusha
sub
mov
fsubrl
adc
push
jns
cmp
xlat
repz
lock
jbe
imul
push
fwait
or
pop
and
ds
cwtl
cwtl
jne
mov
push
pop
iret
icebp
roll
insl
sbb
xchg
aaa
xchg
call
or
fisubl
jns
mov
cmc
out
jge
push
imulb
cmp
pop
xchg
lock
sbb
and
sub
adc
xor
fdivrs
ret
jg
jno
bound
mov
insl
jno
cmp
jb
fidivrl
inc
les
mov
loopne
and
loope
xchg
hlt
push
nop
jae
lcall
xchg
xchg
push
int3
adc
sub
xchg
or
shl
sbb
add
rcr
dec
push
iret
iret
sbb
in
dec
testb
pop
call
callw
jnp
movsb
test
loopne
in
xor
fidivrl
pop
mov
push
adc
inc
jl
adcb
adc
adc
xorl
adc
adc
je
xor
pop
cmpb
shl
andb
js
jbe
test
clc
leave
std
adc
dec
lods
test
adc
fldl
stos
test
testl
mov
shll
add
mov
js
cli
sahf
sub
fcoml
mov
and
xor
adc
adc
jb
inc
clc
pop
inc
push
cmp
jl
cmpb
in
pop
lea
push
cmp
jne
lock
mov
hlt
fcmovne
jb
testb
icebp
lret
arpl
stos
and
and
inc
sub
sbb
push
clc
add
call
pop
lods
dec
add
inc
mov
es
shl
mov
cmp
insb
inc
sbb
mov
icebp
sti
mov
hlt
dec
mov
xor
cmp
mov
or
push
xchg
or
inc
ja
lock
popa
cmp
mov
repz
xlat
xor
cmp
push
out
andl
pusha
and
cmp
ja
inc
push
ja
jge
and
lock
lcall
cli
mov
add
sbb
push
pop
pop
and
pop
icebp
repz
daa
xchg
sahf
cwtl
out
jge
pop
pop
add
bnd
dec
dec
push
iret
push
out
add
or
repz
xor
push
pop
or
xchg
fldt
xchg
aam
xor
icebp
lods
sbb
inc
insb
jecxz
xchg
enter
into
test
jo
stos
add
out
mov
loop
insl
orl
add
dec
add
xor
sti
xor
lcall
cmp
nop
xchg
fists
xchg
adc
sbb
mov
inc
mov
dec
lcall
and
xchg
add
and
xor
add
push
xor
or
sbb
mov
clc
sbb
or
xchg
push
mov
jp
imul
std
flds
sbb
mov
icebp
out
or
push
cli
pop
pop
mov
fmulp
xchg
inc
adc
testl
mov
sbb
jo
out
out
xchg
mov
adc
fisttpll
push
test
or
adc
cltd
sarl
pop
mov
sbb
fs
sahf
loopne
pop
xchg
xor
shl
fwait
add
into
fdivl
mov
sbb
test
jp
mov
pop
pop
cmpsb
mov
scas
add
mov
jp
in
mov
sbb
fld
outsb
ss
add
and
mov
dec
jle
xorl
in
lcall
in
cmp
test
xor
loopne
inc
mov
jne
cmpsb
or
mov
loop
aam
sahf
ret
dec
fsts
pop
cmp
cmp
inc
adc
orb
xor
sub
mov
icebp
xor
dec
mov
cmp
sub
push
popa
or
cmp
push
icebp
call
pop
dec
std
lock
cmp
sbb
aas
clc
mov
push
sbb
or
je
les
adc
test
rcrl
jmp
xor
cmp
in
jne
negb
es
cltd
xor
mov
movl
adc
cmp
rcrb
jmp
mov
aad
mov
mov
xchg
sbb
test
xchg
and
pop
jns
inc
or
pop
mov
bound
jl
fmull
in
icebp
jmp
inc
xor
inc
rcrl
clc
cltd
ror
inc
pop
xchg
lock
roll
inc
jg
pop
jecxz
mov
mov
pop
cld
sti
scas
or
jb
adc
inc
and
addl
mov
or
in
stos
mov
mov
xor
leave
in
stc
push
mov
mov
push
pop
test
clc
or
fimull
mov
rolb
mov
sub
jbe
icebp
sub
shll
pop
mov
add
xor
outsb
or
or
mov
fmull
stc
loopne
sbb
les
xchg
sahf
sbb
xchg
sbb
idivl
lock
cwtl
mov
cmp
inc
mov
inc
jle
lret
jae
add
sahf
shrb
push
pusha
cmp
out
pop
mov
scas
jbe
inc
andl
mov
cmp
lcall
push
aaa
je
aam
inc
ja
cmp
fcoms
xor
shrw
sub
xchg
jmp
imulb
xchg
lods
mov
scas
pop
mov
repnz
cs
xor
loope
adc
push
cmp
mov
mov
cmpsl
sbb
lods
test
scas
lds
clc
stos
cmp
insl
adc
sub
cwtl
mov
adc
inc
jbe
stos
cmp
sti
cld
mov
cltd
inc
pushf
mov
sub
add
int3
xor
andb
je
mov
xor
jecxz
aaa
add
or
jge
pop
cltd
jns
or
test
inc
mov
or
out
mov
iret
dec
pop
sarb
aaa
out
dec
popa
xor
ficoml
add
out
pop
addr16
pop
xor
inc
sbb
lret
ret
out
in
push
sub
adc
xor
xor
out
enter
xchg
xchg
jle
sub
enter
clc
or
lds
jno
js
sub
ficompl
inc
cld
dec
lret
divl
jp
inc
out
dec
xchg
shlb
and
loopne
rclb
lahf
mov
js
push
adc
int3
gs
and
jb
and
xchg
js
rolb
pop
jne
jle
push
mov
xor
jp
jge
adc
adc
and
hlt
mov
inc
mov
pop
inc
mov
lcall
in
sbb
sbb
cmp
add
mov
dec
sub
push
aas
pop
jl
sbb
neg
loopne
dec
pop
pop
cmpsb
pusha
and
jg
aas
inc
inc
mov
and
push
jb
xchg
add
cmpsl
mov
sbb
test
cmp
xchg
adc
mov
stos
neg
je
sub
adc
mov
fldl
popa
mov
pop
or
push
xchg
cmp
add
adc
stc
outsb
sub
mul
sbb
fiadds
je
cltd
push
mov
out
add
sbb
cmpsl
not
push
pop
jbe
inc
enter
push
cli
mov
sub
data16
subl
add
pop
inc
data16
jo
addr16
lcall
xchg
orb
nop
testl
cmpsb
icebp
scas
mov
adc
xchg
sub
jl
clc
jb
jmp
stos
push
mov
sbb
mov
jle
cmp
mov
jno
aad
aas
das
sub
into
pusha
arpl
imul
sbb
push
xor
mov
add
cmp
jle
and
and
mov
xor
jo
out
mov
mov
dec
add
inc
call
pop
push
and
cmc
das
out
adc
repz
mov
and
pop
add
dec
jne
cmpsl
cmpsb
add
jo
cmp
lock
in
sahf
out
je
sbb
xor
bound
cmc
inc
dec
xor
mov
push
hlt
and
jbe
test
js
fdivp
and
and
add
push
sub
or
inc
or
push
test
hlt
in
add
mov
sahf
idivb
add
dec
ret
hlt
repz
into
mov
add
jno
cmp
inc
jg
inc
add
lods
cmp
js
out
lods
loop
sbb
in
js
je
daa
dec
sub
repz
setg
test
stos
cmpsb
ss
mov
in
inc
or
sub
and
push
cmp
and
or
adc
sub
dec
add
pop
mov
jae
fwait
dec
pop
sbb
adc
repnz
sti
inc
aad
shl
add
cmpsl
or
dec
fisubs
dec
cwtl
push
les
in
movsb
jae
adc
and
dec
hlt
aas
dec
xchg
sahf
jns
mov
inc
sub
cmp
pop
pand
add
cmp
cmp
fstl
adc
cmc
les
jb
cmp
dec
xchg
xor
add
jno
repnz
scas
hlt
insl
cmp
jno
cmc
sbb
and
mov
xchg
rolb
ja
jbe
xchg
cmc
push
mov
jne
sub
jbe
mov
stos
fstpt
mov
pop
add
add
xchg
pop
cmpsb
adc
jne
inc
popa
mov
stos
cmp
sbb
cmp
clc
fidivl
scas
mov
fwait
jp
in
mov
jnp
pop
out
sbb
xchg
jl
lahf
jl
adc
je
cli
leave
ficoml
sbb
push
xlat
pushf
call
sbb
mov
sbb
mov
leave
mov
fwait
bnd
and
outsl
data16
call
dec
cli
lea
push
jp
pusha
adc
daa
in
scas
mov
jecxz
xchg
jns
push
bound
je
shl
outsl
push
mov
xor
jns
in
mov
xor
ds
out
enter
das
add
sbb
push
jp
xor
xor
insl
jno
into
jb
jb
adc
sahf
mov
push
outsl
int
jb
dec
fmulp
jnp
pop
push
or
pop
into
dec
add
ds
ret
dec
lock
pop
fadds
xchg
xchg
xor
pusha
cld
inc
xchg
add
scas
cmpb
and
xor
ret
rcll
adc
adc
push
pop
idivl
js
xor
pop
cld
dec
shll
adc
loopne
jmp
cmp
outsl
adcb
cli
popa
or
jl
cltd
cmpl
cmp
sarb
push
cli
mov
and
in
adc
inc
in
les
imul
xor
sub
out
mov
outsb
in
leave
shl
jmp
in
sti
or
mov
shrl
add
xor
icebp
pusha
btc
xor
test
fwait
pusha
or
or
dec
shl
xchg
test
fwait
inc
out
mov
ja
xlat
and
addb
xor
test
outsl
and
shll
movsb
cwtl
loopne
sahf
bound
add
popa
mov
mov
bound
std
adc
lds
adcb
call
cmp
mov
lock
jp
push
push
enter
jns
stos
and
jbe
cs
push
adc
es
ds
icebp
inc
std
xorb
mov
ja
cmp
pop
mov
dec
je
sub
inc
add
fadds
test
xchg
shll
outsl
push
loopne
xor
sti
lds
adc
push
test
inc
pop
fs
mov
push
cmp
jne
lock
or
mov
bound
push
iret
pusha
test
jne
in
xchg
push
xor
dec
jb
mov
test
les
sbb
cmp
mov
xchg
and
or
cmp
sub
addb
aam
fsubr
not
lds
out
jne
xchg
in
dec
ja
cmp
xor
fcomps
pop
push
add
inc
xor
dec
int3
cmp
fsubrs
push
sbbb
dec
dec
aam
ja
inc
sbb
lea
jmp
or
jno
adc
cld
fnstsw
sbb
dec
jge
mov
shl
ja
popa
test
pusha
cltd
je
inc
dec
sbb
pop
cmc
xor
mov
and
in
icebp
dec
stc
cmp
cmpl
pusha
sub
mov
mov
js
or
pop
xor
mov
dec
fidivl
hlt
xor
xor
inc
and
sbb
fidivrs
ds
or
or
orb
mov
dec
mov
imul
paddusb
add
inc
fildl
ds
xchg
push
enter
cmpsl
add
aad
je
sub
mov
and
pusha
movl
lock
jp
adc
repnz
int3
sbb
mov
jecxz
mov
jp
mov
mov
mov
es
xchg
dec
jb
push
icebp
clc
aad
mov
mov
cmpsl
aam
add
rcrb
dec
or
addr16
sbb
jns
sub
jnp
jno
dec
clc
dec
repz
push
psubb
jg
and
mov
lahf
repnz
in
cmp
rcrl
cli
xor
mov
lock
adc
clc
dec
ret
mov
clc
cmpsb
mov
pop
sbb
cmpb
out
adc
mov
in
and
cli
inc
inc
adc
add
cmp
popf
aas
sub
jne
inc
pop
aam
nop
sahf
mov
add
lock
cmp
sub
dec
fwait
dec
adc
shlb
push
mov
icebp
nop
inc
adc
icebp
ficoml
ss
push
push
adc
sbb
ss
jge
add
outsb
in
sub
or
dec
addr16
mov
cli
mov
cmp
int
inc
popa
push
push
cmc
jle
je
sti
sbb
add
jecxz
das
mov
call
nop
stc
nop
mov
idivl
mov
lahf
pop
sbb
and
icebp
and
adc
ret
xchg
jle
lods
jge
mov
jle
pop
jl
insl
add
inc
stc
inc
insb
or
cmp
xchg
xchg
push
and
jle
pop
scas
adc
cmp
jl
push
divl
jnp
popa
push
push
sbb
cmc
aaa
xor
bound
adc
or
mov
mov
sbb
mulb
loope
cmp
cmp
cmpsb
js
jge
fdivrs
mov
fdivl
hlt
std
mov
sarl
mov
mov
js
adc
adc
pushf
xchg
mov
js
insb
sbb
xchg
leave
inc
addl
leave
jae
rorb
out
mov
adc
ffreep
add
rcll
cmpsl
movsl
sub
xchg
in
sahf
pop
icebp
inc
pusha
outsl
mov
lahf
cltd
addr16
outsb
les
adc
xchg
repz
mov
adc
xor
xor
xchg
lds
insl
movsb
sub
mov
out
cmp
insl
stc
addr16
imul
or
movsl
insb
addb
dec
adc
in
aam
adc
les
add
add
ret
push
push
adc
mov
jo
leave
and
jmp
icebp
dec
outsl
jb
pusha
xchg
push
jle
cs
fwait
xlat
mov
push
js
ret
xchg
ljmp
je
lcall
and
adc
ss
loopne
repz
push
adc
add
push
dec
jae
pop
dec
add
mov
orb
decb
inc
iret
lock
cmpl
add
out
pop
push
sbb
jl
adc
aas
clc
pop
adc
clc
jb
jb
mov
xchg
xor
clc
pop
ret
popf
sahf
andb
arpl
mov
dec
xchg
adc
pop
cmp
xor
cwtl
insl
jbe
sub
xchg
mov
adc
xchg
rclb
xchg
adc
xor
add
or
test
popa
and
jns
addr16
jle
jo
xor
jge
sbb
mov
out
mov
cmp
jb
fmull
data16
inc
fcompl
lahf
adc
cwtl
xor
jl
add
or
push
pop
addr16
or
or
outsb
sti
js
push
lea
ja
andl
out
adc
xor
add
adc
jne
jl
adcb
mov
jb
xchg
push
pop
xor
aas
jae
lahf
lods
push
fstpt
incb
sahf
test
adc
xchg
test
jge
sbb
push
shlb
mov
adc
sbb
cltd
rolb
pusha
mov
je
or
or
insl
mov
loope
adc
movsl
mov
out
icebp
mov
in
rclb
ja
addb
jecxz
ret
add
loopne
rcrl
pop
add
push
insl
jo
xchg
test
addr16
cli
lcall
xchg
mov
jno
sbb
jmp
mov
jb
xor
cwtl
mov
jae
adc
lea
gs
repz
clc
lock
push
ja
sarb
scas
in
roll
push
xchg
push
xor
and
in
pusha
imul
popf
cltd
shrb
sbb
fidivrl
in
popa
loop
inc
mov
push
pop
into
mov
push
add
les
jbe
jg
jae
mov
icebp
mov
push
xor
cmp
xchg
cmp
mov
add
out
adc
mov
ret
arpl
fmuls
mov
shll
cltd
mov
sbb
xchg
cmpsb
xor
call
cmp
dec
push
hlt
pop
push
adc
std
addr16
adc
in
sbb
push
aam
and
loopne
adcl
cli
sbb
add
movsb
out
or
insl
pop
add
jg
loopne
pushf
xor
adc
stc
nop
iret
lods
mov
push
adc
divl
ljmp
je
out
nop
cvtpi2ps
pop
mov
ljmp
jge
pop
push
adc
addr16
adc
ss
mov
mov
mov
xchg
xchg
adc
xchg
daa
pushf
and
mov
xor
cmp
sub
sbb
in
add
aas
cli
call
test
pop
arpl
mov
bound
ds
mov
push
or
mov
js
nop
je
xchg
out
sbb
icebp
filds
outsl
push
insl
xor
mov
mov
adc
push
or
les
mov
xor
sbb
sbb
clc
lcall
stc
sbb
lcall
movsl
jg
inc
sbb
aad
decb
out
cmp
sub
xchg
fxch
inc
clc
scas
mov
iret
mov
fsubrl
adc
pop
scas
jp
lea
pop
clc
lahf
mov
shlb
xor
and
mov
in
cmp
das
setne
inc
or
shll
xor
xchg
mov
je
fidivs
mov
bound
xor
test
xor
or
and
lock
adc
push
push
mov
cmp
cltd
mov
inc
sahf
inc
push
push
xchg
js
cmc
lock
adc
add
adc
cltd
mov
imul
iret
and
cs
jge
movsb
popa
inc
cli
dec
add
push
mov
or
jg
cmp
pushf
ja
jae
rcrb
cmpsl
pop
jns
sbb
jno
je
lock
jns
jbe
xchg
repnz
into
mov
xorl
sub
mov
sub
mov
jl
dec
sbb
pop
mov
push
push
or
and
inc
xor
aam
push
shll
pop
ds
std
dec
out
out
mov
fiadds
or
ljmp
add
jmp
push
mov
ljmp
popa
push
scas
leave
idivb
jb
pop
pop
xor
or
out
movl
out
inc
sub
mov
sub
jecxz
xchg
lock
add
lock
and
cmp
cmc
jae
or
adc
mov
ficoms
fwait
aaa
movsb
cmc
icebp
popa
xchg
cmp
sbb
add
xlat
lea
add
pop
sahf
out
stc
lret
sbb
adc
jg
int
dec
xor
mov
sbb
subb
fcomp
mov
jbe
into
adc
xchg
push
testl
orb
dec
dec
je
jae
add
adc
adc
xchg
mov
adc
and
cld
mov
stos
xor
sahf
mov
jb
orb
xchg
in
pop
inc
dec
mov
es
sbb
mov
pop
aad
jne
jnp
lock
mov
push
push
cmp
jl,pt
pushf
mov
jle
jge
popl
ds
xlat
imul
or
idivl
jl
jbe
inc
sub
xchg
je
xchg
pop
in
mov
xchg
ds
jb
ss
and
testb
sbb
mov
jb
mov
orb
sahf
pushf
ds
dec
mov
sbb
lock
mov
mov
gs
push
xor
out
mov
cmp
neg
stos
js
push
out
ss
sti
cli
sub
sbb
pop
mov
xor
jbe
adc
daa
sbb
mov
pop
pop
pop
dec
mov
push
inc
mov
out
ja
push
bound
aad
mov
push
push
add
sbb
pop
insl
dec
iret
jecxz
div
adc
iret
mov
sub
inc
cmp
sbb
sahf
mov
mov
fstps
clc
cwtl
call
xchg
loopne
xor
popa
imul
daa
rcl
mov
adc
shlb
adc
mov
jl
or
jne
insl
adc
sar
in
lods
cmp
cmp
mov
cmp
mov
jecxz
test
scas
in
mov
xor
out
push
iret
leave
mov
push
lret
adc
cmp
xchg
mov
sahf
rcrb
add
cld
jle
popa
push
imul
xlat
cltd
push
adc
and
cmp
nop
mov
fisubrs
sub
insl
jno
adc
aam
fcoms
or
hlt
movsb
mov
roll
std
fidivrs
out
roll
sahf
daa
mov
mov
adc
sub
push
push
fadds
repnz
mov
jp
aam
mov
xchg
inc
xchg
sub
in
push
jb
fcomi
xchg
test
sbbb
mov
xchg
jb
mov
adcl
sub
dec
dec
imul
movl
mov
jns
ss
sbb
ljmp
sub
adc
xchg
xor
pop
jo
cmp
add
and
pushf
lahf
xor
adc
pop
inc
hlt
mov
jge
lock
es
xchg
jnp
push
xchg
and
adc
push
push
insl
into
test
inc
and
scas
call
adc
push
ret
cmp
ret
aam
xor
ret
movsl
jle
or
fcomps
pop
pop
ret
add
or
dec
notl
dec
sub
and
xchg
ljmp
imul
add
and
jge
pop
sarl
adc
adc
adc
adc
xchg
push
in
mov
xchg
dec
and
popa
in
push
pusha
xor
lcall
add
jnp
xchg
xchg
dec
cmpb
mov
ficoms
loope
rolb
and
xor
jne
adc
mov
es
dec
shll
and
adc
push
gs
xchg
lret
mov
fdivs
stc
dec
repz
xor
lea
js
cmpsl
pop
mov
inc
repz
cmp
movsl
add
in
shlb
sbb
rep
sbb
fidivrs
jo
shll
stos
mov
cwtl
mov
adc
out
jg
cwtl
leave
lock
pop
mov
hlt
orl
icebp
mov
mov
xchg
inc
and
xor
jp
sahf
mov
xchg
aam
mov
outsl
mov
cltd
loop
pop
outsb
inc
andb
mov
jle
push
shl
insl
sub
pusha
lock
sbbl
loope
adc
je
jp
pop
jp
cmpsb
cmp
xor
mov
xor
cmp
mov
cmpsb
sbb
xorl
sarl
pop
and
and
out
sbb
mov
push
or
mov
pop
dec
lret
test
mov
outsl
test
jle
cs
pop
outsb
lock
pop
movsb
cmp
add
test
mov
jle
icebp
js
sub
jl
mov
xorb
ja
div
aaa
negl
pusha
xor
pop
gs
out
xor
lods
mov
rcl
jbe
mov
and
xchg
mov
fsubrs
jp
inc
push
rorl
mov
cmp
les
frstor
into
xchg
push
xor
add
fcom
add
rol
jp
adc
fdivrs
push
mov
roll
sub
and
stc
xor
inc
sub
jbe
adc
dec
adc
stos
sub
cmp
icebp
adc
repz
xor
mov
add
lahf
sub
aam
xor
pushf
and
xor
add
mov
icebp
pusha
or
cmp
mov
js
adc
js
ja
out
scas
cmp
xor
mull
insl
jb
add
inc
mov
mov
fsubr
mov
xlat
and
xchg
mov
or
repz
clc
mov
push
das
cmp
mov
addr16
lods
clc
jae
adc
add
adc
pop
inc
push
jno
dec
clc
adc
xor
xor
jae
lahf
ds
gs
cld
in
clc
mov
pop
cmp
jo
rcrb
mov
pmovmskb
std
dec
imul
adc
xlat
int3
subl
mov
mov
pop
les
in
sbb
gs
add
scas
add
xor
bound
movsb
fistl
pop
pop
mov
mov
test
cwtl
lock
xor
dec
lock
pop
add
mov
int
push
int
js
cld
mov
adcl
mov
gs
add
aad
pop
mov
shrb
push
add
jb
xor
mov
sti
aas
shlb
aas
dec
dec
sub
mov
and
xchg
inc
jbe
cmpb
loopne
mov
test
jge
icebp
lea
int3
cwtl
fmuls
xor
or
js
mov
ljmp
das
jo
ja
mov
or
inc
lret
rclb
cmpsl
push
fstl
shll
div
test
mov
icebp
mov
xchg
outsl
lcall
dec
adc
xchg
bound
jl
sbb
and
xchg
xor
testl
or
cmp
out
or
bound
dec
dec
sahf
lods
pop
pop
enter
mov
mov
cwtl
xchg
fidivrs
ss
xchg
test
cmp
fcmovnbe
xchg
loope
ss
icebp
or
push
push
out
sbb
test
jl
mov
icebp
pusha
push
fsubrs
cmp
mov
test
aas
xchg
outsl
rclb
xchg
sarb
je
jle
lea
aam
cmp
loop
test
nop
mov
daa
clc
repnz
cmovnp
data16
jno
stc
lods
sub
and
xor
loop
jno
adc
sahf
js
jecxz
cmp
test
js
add
pop
cwtl
pushf
ss
xchg
mov
jne
sbb
adc
int
orb
aam
dec
and
rcl
cmp
lahf
pop
xor
insl
cmp
xchg
je
pmaddwd
lahf
xchg
cmp
mov
sbb
push
jge
addb
dec
pop
xor
shlb
push
jno
pop
push
sbb
dec
jo
fistpl
and
sarb
add
push
repnz
sbb
push
cwtl
dec
ljmp
cli
les
jb
int
pop
clc
rorl
push
jg
insl
cli
add
jmp
cmp
inc
test
aad
das
nop
lock
cmp
insb
sub
sub
icebp
in
push
mov
jp
stc
je
xor
adc
roll
mov
inc
repz
mov
stos
mov
xchg
cli
xor
mov
movb
std
cmp
out
jge
adc
adc
inc
xchg
push
insb
in
mov
loop
mov
push
icebp
or
insl
mov
loop
ficomps
pop
stc
sti
dec
imul
adc
add
or
jnp
jecxz
mov
cmpsl
mov
aad
adc
pop
dec
xchg
clc
out
out
pop
mov
int
popf
loop
xchg
xchg
insb
fdivrl
lcall
xchg
ret
cmp
or
jbe
insb
dec
test
push
fbstp
scas
ljmp
xchg
xchg
movsb
jno
pushf
notl
mov
icebp
ficoms
xchg
insl
cwtl
imul
pop
aam
inc
adcb
xorl
rcll
lock
push
cmp
cmpb
mov
or
add
push
mov
mov
mov
out
xchg
adcl
dec
data16
into
jle
xorl
inc
loop
xor
repz
out
xor
lock
repnz
push
iret
jbe
jo
bound
repz
xor
addr16
jo
or
fildl
loop
jge
inc
ficoml
push
cmc
sbb
adc
aad
jnp
pop
clc
adc
addb
push
js
jb
cmp
sub
je
test
pop
in
cli
push
adc
push
rcll
pop
jnp
xchg
jle
adc
dec
out
popf
bound
pop
repnz
idivb
push
lea
xchg
xor
pop
icebp
pop
adc
or
cltd
stos
aaa
xor
lcall
lock
jmp
out
pushl
cmpsl
cmp
loopne
fidivs
dec
fildll
jge
dec
mov
adc
fs
mov
xor
fwait
xor
add
cld
or
stos
lahf
adc
push
jb
mov
loope
sub
xchg
out
sbb
cmp
sbb
shll
int
std
adc
jo
mov
inc
aas
ret
sub
not
lcallw
cmp
ret
repnz
sbb
xor
cwtl
mov
xchg
push
sbb
sub
xor
and
push
repnz
cltd
mov
sbb
lret
xchg
aam
out
xchg
cmc
cli
dec
je
xor
mov
in
or
xorb
adc
mov
dec
pop
jle
xor
dec
sbb
icebp
push
hlt
push
inc
mov
mov
cltd
sahf
inc
mov
push
je
aam
jae
mov
leave
call
or
sahf
es
mov
cmc
or
or
add
js
jns
enter
repz
push
in
pop
rorb
cmp
xchg
push
loop
stc
arpl
and
jnp
push
stc
jb
ja
push
cmp
cmc
lea
sub
je
in
fcmovne
xchg
loop
idivl
cmp
loop
xlat
add
adc
mov
imull
mov
xlat
ret
push
or
cmp
call
jle
jp
out
cs
mov
xor
repnz
out
pop
xchg
push
cmc
ljmp
or
cmp
cmp
or
xchg
add
aad
pop
push
mov
cmp
mov
shll
and
adc
xchg
orb
icebp
mov
adc
dec
fidivrs
enter
mov
xor
out
cmp
fucomp
lds
or
scas
je
aas
cli
cmp
cmpsb
jae
adc
mov
xor
daa
push
ss
popa
pop
inc
and
fbstp
push
fisttpl
pop
pop
or
add
fisttpll
adc
dec
into
push
mov
xorb
inc
mov
mov
mov
jns
xor
cld
push
hlt
mov
jecxz
jbe
lds
jne
add
mov
push
mov
adc
push
lea
rcll
es
mov
xor
insl
adc
in
stos
push
aad
add
int3
cmpsl
xchg
in
iret
out
push
test
cwtl
xchg
stos
add
cmc
mov
push
popa
mov
push
sbb
mov
jecxz
loopne
xlat
sub
push
sbb
mov
dec
aad
and
mov
xor
and
cmp
idiv
and
mov
push
call
loop
add
or
push
add
out
mov
mov
mov
adc
xor
xchg
jbe
movsl
jns
and
fisttps
adc
shl
leave
push
push
jns
imul
jne
es
adc
push
xor
lcall
aad
mov
or
and
fcompp
or
dec
dec
imul
sub
push
ror
mov
lret
jge
push
jnp
jp
mov
xor
push
mov
lahf
and
mov
fidivrl
mov
or
dec
lahf
mov
cmpsb
outsb
jecxz
mov
cmp
xor
mov
or
stos
cld
mov
push
jp
add
jecxz
pop
cli
nop
push
cmp
arpl
scas
pslld
adc
adcl
mov
js
fs
mov
popf
xchg
jp
or
mov
add
adc
ss
mov
jb
xchg
xchg
out
andl
imul
jb
incl
jo
push
mov
jg
imul
push
pop
inc
jo
mov
loopne
pop
xchg
int3
cmp
hlt
sub
loop
jl
fnsetpm(287
cli
in
rolb
mov
fsubrl
pusha
nop
rclb
add
adc
xor
jbe
cmp
xor
push
jns
loope
imul
cli
cmp
dec
icebp
bound
xor
xchg
addr16
add
iret
push
inc
mov
ret
sub
mov
rcrl
cmp
jo
iret
pop
xchg
adc
xor
inc
ds
xchg
and
cld
push
adc
icebp
adc
jp
lcall
and
repnz
pop
xorb
xchg
subb
adc
sbb
shrl
scas
dec
inc
js
xorb
add
pushf
testb
inc
adc
rol
sbb
jo
and
sbb
js
jecxz
adc
ja
xor
leave
dec
adc
out
xchg
out
jne
cmp
pusha
inc
mov
test
or
mov
push
stc
mov
fwait
mov
hlt
test
inc
lock
fcomps
ficomps
and
mov
pop
ja
sbbb
ljmp
inc
inc
jg
fwait
mov
in
pop
push
xchg
dec
stos
jge
push
lea
cmp
sbb
pop
push
popa
mov
cld
push
orb
or
or
imul
sub
ds
push
adc
cmp
aad
je
pop
aam
push
or
js
jne
mov
mov
push
aad
sub
sbb
mov
ret
outsb
push
mov
adc
jbe
push
arpl
jo
add
dec
out
jbe
adc
fidivs
pop
adc
and
push
xlat
cmp
push
and
mov
repnz
fcmovbe
sub
inc
sbb
jbe
adc
ds
fstl
sub
icebp
cltd
rcrl
inc
aad
sahf
xor
or
push
movsl
or
test
hlt
inc
jne
cwtl
inc
lock
daa
out
adc
cmp
lret
and
dec
and
into
es
jo
add
or
jl
push
jae
mov
sahf
pop
jle
sahf
sbb
clc
repnz
cli
push
rcrb
pushf
lret
loop
outsl
test
xchg
test
fdivrs
scas
mov
lret
bound
ss
cmp
icebp
jo
insb
stc
sub
mov
jg
or
sub
into
xor
sub
cmp
push
sub
jae
test
sbb
sbb
add
adc
sub
mov
insb
and
jle
je
lods
lahf
pop
aas
jno
pushf
movsb
mov
lods
add
inc
aad
sbb
jae
xor
out
clc
nop
sbb
and
adc
mov
xor
pminub
aad
dec
ja
sbb
cmp
jns
inc
fs
push
push
push
adc
dec
aad
adc
inc
shlb
in
ss
mov
xchg
pop
mov
out
repnz
int
lahf
lea
hlt
xor
daa
addr16
test
roll
stc
ds
pushf
and
sbb
outsl
mov
fadds
icebp
cmpsl
mov
add
push
jge
inc
push
adc
ss
jns
pop
rcrl
loope
lahf
sub
bound
hlt
add
sbb
out
mov
fsubrp
jns
jbe
bound
push
fiaddl
fnsave
jb
xchg
cld
mov
std
or
pop
fsubl
repnz
push
in
mov
out
aaa
cmp
repnz
and
adc
fldenv
stc
cs
and
add
sbb
je
sub
pop
pop
insl
mov
jbe
inc
and
imul
js,pn
lock
testl
sbb
jle
adc
cmp
and
insb
aas
cwtl
shlb
push
fbstp
pusha
cmp
sbb
out
das
jg
pop
jns
hlt
or
pop
imul
je
popf
inc
ss
dec
mov
jnp
movsb
add
mov
and
negb
pushf
xor
movsb
cltd
in
mov
shl
call
cmp
mov
sbb
lea
pop
fnstenv
inc
repnz
xor
push
es
sub
ret
mov
mov
cmp
push
into
mov
mov
sbb
and
pop
xchg
dec
sarb
lock
xor
xchg
sahf
ss
jo
push
repnz
fptan
aad
and
addr16
sbb
pop
pop
das
ds
pop
xchg
sbb
mov
xor
inc
xchg
xchg
inc
xor
pop
xorb
sbb
stos
pop
jne
add
fadds
outsl
iret
ljmp
cmp
mov
dec
pusha
pop
jle
loop
pusha
pop
xor
out
pop
push
into
jo
enter
pop
cmpsb
mov
mov
jnp
mov
out
xchg
add
aaa
lods
mov
inc
jnp
or
add
push
sbb
arpl
nop
loop
mov
push
sbb
into
dec
cmp
mov
mov
mov
es
adc
push
mov
jo
mov
adc
hlt
cmp
int3
cltd
jo
xchg
mov
pop
or
incb
in
scas
mov
popa
sahf
lock
dec
and
repz
hlt
xchg
aam
push
jg
mov
bound
inc
mov
pop
jmp
adc
add
mov
movntq
fisubrl
test
and
xchg
cmp
repz
mov
push
xlat
mov
adcl
jae
lods
test
in
xchg
add
xor
stos
xor
and
ret
dec
cmp
xor
adc
jo,pt
insb
sbb
neg
lds
icebp
stos
sahf
adc
lahf
insb
movsb
es
xchg
addr16
pop
dec
and
xor
mov
jecxz
jmp
lds
mov
sbb
adc
sbb
sbb
iret
cmpsl
sub
in
aas
outsb
fildll
adc
add
pop
cmp
xchg
aam
rorl
loop
xchg
das
cwtl
adc
xchg
mov
xor
jmp
fcompl
mov
test
inc
bound
pop
sub
outsl
or
cwtl
adcb
xor
mov
ja
in
push
in
mov
sub
mov
pop
push
cmpsl
mov
jne
in
mov
jnp
add
mov
jno
pop
mov
adcb
repnz
sub
aaa
xor
pushf
cmp
aam
xor
jb
or
in
dec
mov
aas
add
dec
inc
push
cmp
shrb
or
iret
subl
sub
sub
iret
lss
jno
out
loopne
xchg
pusha
push
pop
xor
mov
cmp
shlb
and
push
andl
fidivl
fwait
stc
lcall
stc
ja
inc
loopne
cwtl
aam
xor
xchg
mov
mov
rolb
out
cwtl
sbb
mov
outsl
dec
rolb
punpcklwd
jo
lods
into
mulb
cwtl
mov
outsl
pop
into
dec
bound
stos
cmp
das
add
jnp
dec
nop
mov
dec
add
push
sub
cli
in
notb
push
adc
xlat
xchg
jl
and
ss
mov
rcl
sbb
sbb
shl
int3
in
push
jmp
mov
sbb
rcrl
sub
jo
inc
adc
outsb
cli
xor
in
cmp
xor
rcrl
xor
sub
daa
push
std
aad
adc
and
adc
sbb
mov
cmp
movsb
mov
mov
popa
jno
ljmp
repnz
pop
std
pushf
adc
add
jp
xor
rcl
cmp
pop
scas
imul
inc
fwait
mov
sbb
xchg
nop
jno
js
mov
mov
nop
hlt
jb
xor
icebp
cmp
jb
inc
repz
pop
adc
icebp
nop
inc
xchg
xor
pop
jp
xor
fildl
shr
xlat
add
cmp
cli
nop
test
sbb
pop
ret
sbb
je
jg
mov
jns
fidivrl
cwtl
inc
ss
std
mov
shlb
pop
fwait
push
add
pushf
mov
fmull
jp
adc
jae
icebp
mov
xor
jmp
fldt
test
jp
iret
and
cmp
cmp
dec
cmp
icebp
std
and
sbb
xchg
lock
dec
fcomps
xor
clc
fadds
stos
lahf
inc
test
popf
jecxz
fisubl
or
mov
in
inc
pop
push
sub
add
and
icebp
aad
pop
add
cmc
adc
xchg
cltd
sbb
js
pusha
test
stc
in
dec
add
push
rcrl
jle
popf
fmul
inc
out
jno
rcr
push
rcr
popf
jecxz
lcall
imul
fldt
jbe
jne
mov
repnz
clc
jle
lea
mov
out
lahf
fwait
mov
mov
add
jge
loop
data16
pop
arpl
es
subl
push
iret
and
fs
pop
pop
inc
push
icebp
push
mov
add
lods
mov
xor
sbb
xchg
repnz
adc
jne
pop
push
xchg
cmp
push
adc
pop
adc
adc
push
pop
mov
jge
jp
dec
outsb
pop
push
lock
mov
jb
jge
push
nop
push
jns
pop
push
ja
sbbb
sbb
fnstcw
push
repnz
test
les
push
shlb
cmp
sbb
mov
ds
adc
fldl
sarb
clc
mov
jle
adc
mov
stc
adc
cld
fidivs
jo
fidivrl
jns
sahf
sbb
add
repz
mov
xor
xor
sub
lock
cmp
adc
mov
jp
testb
adc
inc
jno
fidivrl
adc
inc
jae
pushf
loop
inc
adc
sti
and
fstpt
jo
movsb
jb
add
xor
repnz
adc
icebp
or
adc
pop
pop
adc
pop
cmpl
jmp
inc
xlat
shl
and
rcl
add
lcall
pop
mov
mov
repz
loope
jnp
add
mov
aas
xor
sbb
jnp
repz
movsb
jnp
xor
push
nop
jnp
cld
pop
jnp
repz
movsb
jnp
add
pop
les
pushf
mov
adc
xor
lods
fcmovnb
add
xchg
cli
jbe
sbb
add
add
fadds
adc
adc
jb
pop
jo
lret
divl
cmp
xor
cmc
push
jo
jae
lcall
sti
test
adc
fiaddl
cwtl
xor
out
push
jo
sbb
mov
test
xchg
popa
jnp
jb
fcoms
xorl
repnz
repnz
cli
adc
xor
rolb
or
movsl
or
icebp
jbe
pop
lods
out
or
jb
jo
dec
mov
and
and
sbb
adc
jp
out
loope
jp
fdivl
adc
cmpsb
push
jnp
ret
jmp
mov
testl
shlb
jae
loope
mov
and
push
sbb
jnp
out
push
xchg
lock
mov
cltd
mov
inc
lock
mov
ds
hlt
pop
and
popa
sbb
inc
fisubrs
std
dec
out
add
stc
xor
mov
data16
sbb
popa
movsb
jge
push
add
ret
lcall
xchg
add
inc
inc
or
cli
pop
sub
out
mov
inc
jne
mov
push
repz
sub
xchg
xchg
push
aaa
cld
sbb
popa
add
aaa
sbb
cmp
enter
movsl
hlt
test
pop
cmp
cmp
add
cld
sub
push
mov
ds
xor
cli
mov
or
jl
inc
jg
icebp
and
mov
pop
cmc
loope
jp
jle
fadds
or
das
or
push
dec
jae
ja
rcll
cs
xorl
icebp
popf
dec
cmc
mov
stc
or
adc
xchg
repz
jl
jg
add
and
js
mov
jnp
mov
lea
icebp
std
mov
cmc
mov
jg
loope
orb
mov
sbb
mov
jle
subb
rcll
mov
fdivrs
add
das
jns
push
std
mov
jg
loope
mov
jp
jne
mov
jg
and
or
jle
ja
and
out
add
mov
add
das
ja
push
jnp
jg
and
xchg
mov
push
mov
jne
and
dec
cld
mov
add
test
mov
icebp
fsubp
xchg
jbe
inc
jnp
fadds
or
das
xchg
push
or
add
jnp
and
dec
pop
mov
or
mov
jb
mov
xor
pop
push
jl
rcr
ds
sbb
aaa
dec
adc
stc
xchg
mov
cmp
xchg
mov
jb
loop
xchg
mov
cmp
in
nop
out
hlt
jae
mov
sbb
pop
mov
shlb
leave
js
xchg
fidivs
repz
js
pop
pop
pop
cmp
mov
xrelease
xor
xchg
cld
adc
movsb
mov
call
xchg
pop
inc
push
mov
fistpll
loop
push
xchg
mov
adc
or
fimuls
mov
in
rclb
jl
sub
int
adc
repz
dec
sarb
mov
jae
mov
add
dec
icebp
ss
or
std
cmp
mov
mov
repz
mov
and
xor
jg
cltd
pushf
popf
jae
fdivs
js
and
pop
adc
cltd
ret
dec
xor
cmp
xchg
repz
mov
cmp
or
cwtl
and
fisubs
jge
xor
or
cmp
pushf
cli
add
sbb
xlat
mov
test
xor
mov
subl
mov
mov
les
sub
mov
bound
sub
xchg
jae
out
inc
lock
test
movq
sahf
add
xor
mov
sbb
dec
xor
nop
popf
mov
addps
xchg
fdivs
cwtl
jno
fadds
fstpt
mov
pop
js
stc
sbb
lods
ds
or
jnp
sbb
cmp
xchg
mov
std
jns
clc
js
movsb
jbe
sbb
out
xchg
adc
pop
subb
cmpsb
fcoml
push
cld
negl
clc
cwtl
mov
xchg
shll
xor
xchg
sbb
loop
test
add
inc
fs
sahf
inc
lea
jno
inc
jbe
cmp
mov
cmp
lcall
mov
sar
cwtl
fcompl
mov
adc
xlat
sar
jg
xchg
bound
fadds
or
jecxz
sbb
adc
negl
and
mov
sahf
or
testl
inc
divb
xorl
dec
or
divb
pop
jle
out
clc
add
cmp
clc
adc
pop
mov
test
pop
sbb
fisttpll
aaa
nop/reserved
push
je
adc
dec
push
xchg
xchg
xchg
pop
stc
ja
jns
cmp
mov
add
xor
mov
sub
xchg
add
cmp
sub
pop
hlt
xor
add
pushf
in
dec
cmp
sbb
fstps
xchg
loope,pt
pop
je
xlat
mov
cmp
cmp
mov
xorb
or
sbb
ret
or
pop
ficompl
add
arpl
pop
cwtl
xorb
push
pop
stc
sbb
push
ret
sbb
mov
mov
push
repz
mov
sbb
rcrl
and
jns
cmc
loope
xchg
push
repnz
lods
dec
cmp
dec
xchg
jle
push
repnz
xchg
jg
jbe
and
test
mov
repnz
fidivl
jns
repz
test
fs
repz
pushf
pop
in
movsb
ret
test
sub
and
or
and
rcr
xchg
jae
jns
jge
xchg
jne
notb
jg
cli
das
repnz
mov
clc
ret
xchg
fcompl
loopne
xchg
fnstcw
int
add
loopne
jns
js
inc
rolb
lock
and
jge
pop
je
sbb
push
cmp
cmc
xchg
lds
mov
subl
mov
jno
neg
xor
jg
push
ss
mov
pusha
mov
inc
push
or
xor
mov
add
mov
and
sahf
or
fildll
sbb
rep
mov
into
mov
pop
adc
jb
test
sarl
arpl
sbb
adc
sub
sarl
inc
and
ficomps
orl
push
jb
fdivr
iret
dec
push
or
pop
daa
mov
movsb
mov
lret
jb
repnz
divl
xor
xchg
xor
fdivrp
movsl
fxch
out
ror
dec
xor
icebp
cmp
pop
fsubrs
loope
enter
loop
arpl
dec
or
bnd
mov
mov
in
and
iret
jne
cmp
push
js
pop
or
aas
adcl
dec
pop
mov
in
prefetcht2
mov
adc
add
lahf
notb
shrb
lds
ret
insb
imul
cmp
lods
scas
mov
sahf
sub
add
pop
repnz
adc
jmp
and
jbe
in
pop
jl
mov
push
or
into
adc
mov
xor
mov
or
mov
clc
js
adc
clc
inc
or
cmp
xor
and
insb
pop
scas
mov
mov
mov
jne
js
orb
inc
sar
stc
jl
cld
add
pop
mov
repz
into
outsl
frstor
lahf
and
adc
adcb
dec
sub
adc
jns
popa
loopne
int
xchg
add
fisttps
sbb
pop
je
ss
inc
lret
lods
test
daa
push
sbb
mov
mov
out
rolb
rclb
jl
adc
add
cmpb
sahf
loopne
mov
test
ja
sarb
push
mov
or
hlt
inc
adc
js
add
mov
mov
call
add
sub
and
push
push
icebp
cmp
dec
loope
mov
push
push
pop
add
nop
or
enter
push
mov
ja
repnz
inc
sete
inc
xchg
stos
pop
sub
cmp
aad
mov
or
and
mov
mov
xor
popf
adc
outsl
sbb
pop
add
lea
fildll
dec
jns
mov
cmp
mov
xlat
dec
mulb
fmulp
sub
test
xchg
outsl
push
aaa
pop
icebp
ja
push
mov
sbb
lcall
cmc
jmp
test
or
mov
sarb
lea
stos
iret
sti
mov
and
inc
fs
xor
jo
or
int
inc
xchg
inc
mov
adc
aam
addb
into
and
xchg
sarl
fadd
xor
add
repz
pusha
iret
nop
sahf
int
jns
adc
push
mov
enter
xchg
push
jo
or
and
jae
mov
jb
mov
daa
cmp
jne
mov
push
repnz
insb
nop
sbb
and
ja
into
inc
cmp
stc
rorw
jno
mov
sbb
fmuls
jp
divb
mov
sbb
jno
mov
stc
clc
add
sarb
add
jl
adc
adc
add
inc
inc
adc
adc
add
inc
adcb
sahf
sarb
add
cmp
jl
hlt
pop
sarb
add
popa
cs
shrl
or
jb
lock
cmp
adc
fprem1
add
jl
adc
add
add
ss
outsb
lock
dec
xor
lods
dec
push
pmaxsw
ja
mov
rclb
jbe
cmp
fildl
jmp
sbb
outsl
ja
adc
icebp
mov
test
push
lahf
ds
repz
daa
ja
or
gs
sti
or
jbe
cmpsl
xchg
jp
aam
push
cmp
push
sbb
daa
jl
iret
cmp
mov
dec
fdiv
pop
stos
inc
jo
nop
jno
std
cltd
mov
mov
rclb
mov
cmpsb
in
push
inc
sbb
push
mov
or
mov
push
xchg
jno
insb
sbb
shrb
imul
je
mov
add
push
lahf
mov
add
mov
cmp
icebp
push
sub
sbb
jg
repnz
sbb
repz
jne
inc
cltd
sbb
ds
popf
clc
or
push
stc
lods
call
mov
pop
shll
xor
xchg
add
inc
lock
or
cs
je
and
pushf
fadds
or
fnstsw
pop
dec
inc
hlt
dec
push
mov
js
mov
fs
ret
out
and
mov
fwait
mov
xchg
mov
lock
jb
mov
shr
and
int
pusha
lahf
pmullw
xor
mov
sahf
xchg
fistl
lods
push
cld
repz
fcompl
icebp
sbb
pusha
dec
frstor
ljmp
mov
bswap
jmp
push
adc
push
jne
pop
cmp
ljmp
test
out
or
cmp
cmp
loop
ret
sbb
or
mov
repz
ficoms
and
xor
xchg
jg
out
sbb
dec
bound
push
dec
cmpsl
cmc
fadds
cltd
mov
divl
add
lret
shlb
fldenv
insl
icebp
push
mov
aaa
ljmp
push
cwtl
or
xorb
inc
scas
adc
outsb
scas
mov
xchg
shl
cmpb
adc
icebp
testl
cli
adc
jb
daa
iret
aad
nop
cmpsb
pop
js
adc
clc
jle
jb
push
data16
cld
cld
aam
inc
cmp
push
lock
cmp
cwtl
addr16
mov
out
je
xor
and
push
xor
dec
pusha
or
push
stc
mov
mov
repz
into
loop
mov
cmp
xor
and
mov
or
push
add
inc
mov
lods
ret
and
inc
test
xlat
mov
inc
jno
js
and
clc
xor
jns
test
js
loopne
push
cli
pusha
pop
js
ja
inc
jp
xchg
cmp
jnp
cld
mov
repz
fcom
sbb
enter
dec
sahf
pop
jb
cli
xor
mov
cltd
leave
sub
jle
mov
js
sahf
jno
jno
and
jns
mov
das
pop
or
or
movsl
movl
mov
xor
pop
movsl
adc
jo
xor
sti
or
ds
jo
in
ret
addl
xor
mov
rcrb
div
xchg
mov
or
cs
fwait
or
aaa
pusha
repnz
pop
xor
test
negl
xor
jge
icebp
out
push
shl
fsubl
js
pusha
push
jle
xor
lock
push
lahf
ds
xor
lahf
or
xor
push
call
fcomp
add
in
orb
and
call
mov
mov
adc
jl
sar
clc
sarb
xor
jo
shl
addr16
stos
jo
aad
out
shl
rolb
or
test
and
adc
sub
insb
aaa
sub
lcall
test
adc
push
mov
or
out
std
adc
movsl
int
movb
cmpsl
inc
xor
mov
das
or
orb
mov
fucomp
icebp
mov
inc
sbb
push
pushf
jge
cmp
fscale
mov
sbb
push
dec
jg
dec
mov
push
lock
cmp
fisubrl
sbb
sub
cltd
mov
subl
movzbl
push
popa
fdivs
xor
inc
test
pop
cltd
inc
push
movsb
xlat
lcall
sbb
or
sub
adc
jne
icebp
out
fldcw
inc
stos
mov
bound
push
cwtl
inc
mov
movsl
jo
adc
lcall
pop
push
xor
mov
jp
push
loope
rcrl
xchg
rcrb
fwait
stos
rcrl
sbb
shl
leave
xor
int
dec
dec
mov
push
inc
mov
dec
mov
imul
insb
cmp
jne
jge
popf
jns
test
xchg
into
and
imul
push
pusha
outsl
push
rorl
jb
dec
or
std
inc
addl
lcall
xchg
pushf
inc
pop
push
mov
jp
or
ret
icebp
cmp
jb
aaa
dec
adcl
dec
outsb
xor
mov
jl
cwtl
movaps
shl
add
and
outsl
cmpb
jnp
adc
out
jne
or
jle
inc
sub
cmp
iret
into
mov
cli
cmp
aad
loope
fsubr
xor
pop
repz
mov
and
and
lock
dec
inc
pop
icebp
xor
jae
jae
and
mov
jle
repnz
mov
cmp
rolb
mov
push
aad
cmc
and
mov
repnz
clc
xchg
add
test
mov
or
push
jo
divb
mov
dec
inc
adc
push
push
xor
lock
sbb
jno
mov
scas
mov
test
stc
and
rcll
into
mov
xchg
inc
xor
sar
ja
adcb
mov
jnp,pt
clc
xchg
pop
fmuls
mov
addb
or
xorl
pop
xchg
mov
dec
and
jge
fld
sahf
ss
ss
repz
sub
mov
aas
ds
scas
mov
cmp
or
push
ss
cli
mov
orl
enter
push
test
jle
cmp
add
jg
jne
cmp
cmp
adc
repz
push
jle
cmp
adcb
call
inc
cmp
jo
push
jae
push
xor
pop
mov
jae
lock
or
nop
jae
and
mov
int
pop
shrb
push
icebp
ljmp
or
mov
clc
negl
inc
xchg
rolb
stc
fadds
ja
std
push
add
push
xchg
iret
aaa
pushf
shlb
and
fs
sbbb
fcomip
sbb
xchg
cmp
shll
adc
shll
mov
add
movsb
out
lods
jge
call
dec
sub
jb
pusha
push
ficomps
enter
test
roll
shr
es
push
push
cltd
fsubrp
enter
repz
lock
fs
lret
cmp
shlb
add
lods
pop
jno
divl
leave
xor
pop
jp
out
icebp
clc
jge
add
repnz
adc
rep
push
add
icebp
jnp
xchg
scas
mov
xchg
or
adc
in
pushf
jae
jb
je
jle
push
std
xor
es
lret
sti
adc
push
icebp
mov
inc
imul
insb
dec
add
pop
mov
cmp
add
pop
and
shl
jp
outsb
mov
rolb
lock
jae
leave
xor
pop
sti
add
mov
clc
std
push
add
jle
add
add
dec
ds
cmc
xor
jae
pop
fwait
dec
or
icebp
jecxz
or
mov
jb
or
pop
cmp
mov
cmp
lea
shll
lea
jb
cli
xchg
and
shlb
loopne
shr
mov
jg
ljmp
jnp
inc
scas
push
mov
fadd
mov
jae
mov
pop
cld
sbb
mov
xchg
xchg
push
movsl
imulb
adc
add
into
add
add
es
mov
push
les
test
push
adc
mov
or
jl
xor
pop
mov
sbb
icebp
clc
lea
mov
data16
push
lods
hlt
shr
js
cltd
push
push
cmp
pop
aaa
icebp
jno
es
cmpl
mov
roll
mov
push
xor
pop
hlt
jns
dec
cmc
push
sbb
or
sub
js
cmp
addl
push
inc
mov
loopne
pop
out
insl
cmp
testb
add
mov
pusha
mov
or
lret
wrmsr
mov
push
cli
enter
xchg
insl
xor
adc
and
pop
xor
mov
adc
stos
mov
mov
aaa
insl
enter
bound
mov
rcl
ja
or
inc
jmp
loop
jne
pop
or
icebp
ja
add
add
icebp
sbb
cli
addl
jecxz
repnz
jecxz
jmp
icebp
sbb
jle
xchg
adc
scas
in
mov
cmpb
jge
cmp
mov
loop
mov
push
mov
pusha
pop
mov
push
lock
adcb
hlt
cmp
mov
add
ja
pusha
jae
and
push
jge
jno
sbb
lock
test
fidivs
or
mov
push
lock
jae
cmp
and
test
mov
out
push
mov
add
fdivl
ret
int3
ficoms
and
loop
andb
icebp
cmp
jl
and
adc
mov
ss
dec
inc
das
cmp
xor
xchg
les
jb
inc
jge
adcb
or
cmp
inc
subb
fldt
push
adc
jne
stc
and
callw
lret
fiadds
shll
jae
jb
push
or
aam
or
jl
mov
dec
add
and
lock
ds
pushf
decb
ja
hlt
sbb
lcall
push
pop
jge
std
repnz
lret
or
push
cmp
icebp
mov
not
lods
xchg
aam
je
adc
jp
jp
loop
jmp
cmp
ja
mov
roll
sbb
jge
loop
cmp
icebp
adc
dec
test
jno
inc
add
int3
je
ret
ljmp
repz
sub
push
xchg
or
test
call
or
mov
mov
mov
sub
daa
cmpl
scas
mov
lahf
leave
inc
pop
lock
imul
jl
out
and
int
pusha
dec
jns
jle
lahf
jno
andl
icebp
sub
fs
hlt
sbb
js
shlb
sbb
lret
sub
xchg
xchg
jb
dec
aad
mov
and
mov
fisubrl
in
mov
insl
scas
pop
in
lock
movhlps
hlt
call
scas
bound
int
adc
clc
xchg
mov
lret
psadbw
js
flds
std
aam
jp
lods
add
scas
xchg
ljmp
pop
jne
adc
in
jnp
sbb
imul
jge
sub
sub
stc
clc
xor
inc
fcomi
add
imull
lret
cmp
je
mov
push
ss
push
push
dec
pop
push
pusha
nop
mov
mov
adcb
mov
aaa
and
sahf
jbe
sub
jo
rorl
cwtl
mov
mov
jb
jb
mov
lds
movnti
pop
jbe
xor
loop
popa
pop
xchg
mov
lods
fistpll
mov
lret
sub
aam
stc
lea
cmp
cmp
mov
adc
stc
mov
test
repz
xor
adc
mov
and
cli
jno
sbb
sbb
xorl
movsl
mov
les
push
push
imul
xchg
jle
push
repz
mov
cld
aaa
fstpl
fiadds
stos
outsb
mov
imul
std
cmpsb
push
loopne
xor
pop
jne
cmp
jbe
test
sub
out
cmpsl
sub
xor
xorb
aaa
rclb
lods
fistl
shlb
or
or
sub
jmp
lret
jl
dec
loopne
in
test
in
jb
dec
loopne
push
or
loop
xor
je
dec
outsl
out
dec
loope
insl
mov
add
cmp
push
aas
jns
icebp
pusha
sub
jge
push
or
loope
cmp
sub
seto
mov
rolb
or
jl
std
pop
or
jp
lock
ficoml
sbb
cwtl
sub
jns
sahf
add
pusha
cmp
jb
lds
mov
test
outsl
cmp
xchg
scas
cmp
repz
pop
fisubs
add
pop
xchg
cmp
mov
xor
ret
jl
std
movsl
push
inc
lahf
lods
cwtl
jecxz
mov
inc
xchg
cmp
and
jno
imull
test
cltd
call
rcr
jo,pn
repz
inc
mov
xor
dec
mov
adc
push
lock
addr16
mov
xorl
andb
js
rcrl
jmp
xchg
out
aad
push
adc
mov
repnz
or
addb
icebp
pop
push
mov
mov
mov
xor
jae
cmp
rorl
lock
and
mov
test
pop
xchg
pop
scas
in
jg
aas
nop
lret
sbb
dec
and
jne
leave
movl
je
jbe
sbb
jae
jns,pn
lock
jbe
js
and
adc
xchg
jle
push
dec
mov
sbb
jl
jne
xor
outsl
mov
iret
inc
push
dec
mov
mov
mov
inc
clc
mov
xchg
testl
lahf
xchg
sub
cmp
xlat
and
repz
inc
mov
xor
imulb
js
mov
mov
leave
mov
dec
add
inc
gs
jge
push
mov
fcom
cwtl
push
adc
jno
cmp
into
and
xor
sbb
movb
jno
inc
jmp
imul
mov
cli
inc
xchg
in
xor
cmp
cmp
icebp
pop
and
add
mov
mov
cli
adc
inc
adc
std
add
add
sub
sub
es
dec
sahf
dec
dec
dec
cli
mov
fbstp
hlt
jns
inc
movaps
dec
ljmp
stc
cwtl
mov
push
adc
inc
ret
xor
stc
jmp
xor
gs
pusha
outsl
ret
pop
inc
lret
push
xor
fiaddl
xchg
adc
inc
mov
aam
sbbb
adc
jecxz
mov
cmp
test
fistpll
in
inc
mov
pop
sub
and
in
nop
push
add
xchg
jb
jg
cmp
out
push
lret
hlt
imulb
xchg
push
insl
ss
cmp
scas
jo
or
mov
stc
add
sbb
jno
icebp
or
and
cmp
adc
jecxz
ljmp
in
add
repz
inc
sbb
mov
stos
cmp
or
adc
inc
fildll
dec
inc
add
and
or
jg
bound
or
icebp
add
out
cltd
mov
sahf
jecxz
pop
xchg
out
push
clc
xor
prefetch
push
in
aas
mov
inc
rcl
jnp
mov
push
pop
rolb
or
stc
cmc
ret
testl
xchg
shlb
xchg
hlt
jae
adc
decb
inc
movsb
cmpsl
mov
arpl
mov
mov
lahf
stc
and
push
push
sahf
push
lock
aas
mov
xchg
lock
lock
mov
push
push
or
icebp
lahf
movsl
and
enter
inc
fs
lea
mov
xorl
cmovg
shll
out
push
xor
xor
sbb
bound
js
fmul
pop
movsb
jle
into
repz
adc
lds
sbb
lds
mov
movsb
jb
rol
jo
enter
xchg
inc
ss
cli
insl
lods
mov
pusha
in
fbstp
cmp
test
movl
jnp
icebp
enter
std
inc
fsubl
popf
cli
pop
js
mov
daa
gs
pop
in
es
jmp
js
dec
and
es
adc
lock
mov
repnz
movsl
dec
js
inc
jl
aam
aam
js
xor
je
xor
adc
lock
cmpb
xor
cwtl
fs
pop
and
and
jb
jo
pop
cmpb
add
shlb
shll
xor
icebp
jno
and
lcall
nop
cmp
add
add
js
xor
je
xor
adc
and
jnp
jg
push
mov
into
scas
xor
adc
lock
insb
lock
cmpb
xor
cwtl
or
sbb
lds
hlt
es
mov
cltd
addr16
adc
xchg
scas
adc
icebp
lock
into
test
sub
jle
mov
mov
repz
fwait
push
lret
lea
out
ja
mov
cld
fistl
ret
or
std
jg
mov
push
or
lea
lock
adc
inc
cmp
mov
sub
adc
jl
jo
jnp
pop
mov
lods
add
enter
insl
test
cltd
mov
daa
test
xor
outsb
leave
lahf
js
lcall
add
lods
jbe
pop
fs
xor
sahf
xchg
outsb
icebp
es
mov
icebp
sbb
jnp
cmp
and
scas
outsb
mov
sub
pop
pushf
xor
ljmp
mov
pop
sahf
ja
js
clc
xchg
sbb
adc
icebp
sub
dec
mov
test
icebp
popf
pusha
mov
jns
xorb
cmpsl
out
pop
or
push
jno
mov
enter
repnz
cmp
cltd
jg
cld
or
rcr
mov
and
dec
test
xor
xchg
cli
fisttps
jo
cmp
jb
xor
ret
imul
scas
in
cmc
cwtl
mov
stos
jb
cmp
fdivr
and
sub
lret
sub
jno
pop
daa
jbe
inc
xchg
aaa
cmp
sahf
jae
pop
test
lea
mov
jecxz
adc
dec
mull
inc
jno
dec
jns
js
out
clc
fwait
cmc
lea
or
ret
mov
stos
jge
xor
neg
jbe
xchg
sarl
enter
mov
sahf
mov
inc
adc
jno
xor
mov
push
sbb
mov
lock
dec
push
mov
icebp
mov
bound
jne
push
cmp
ret
mov
or
cmp
adc
aam
xorb
jg
dec
pop
fs
fmuls
jns
cmp
push
dec
xchg
ds
inc
and
adc
aam
push
mov
push
insl
push
sbb
or
lock
cmpsb
rorl
jns
repz
adc
lock
adc
sbb
es
xchg
and
movsb
add
and
sbb
paddusw
ss
mov
push
divl
and
add
jne
cmp
aaa
xor
jo
lahf
stos
outsb
sub
mov
inc
ret
push
das
in
test
and
or
loopne
xor
cmp
leave
lds
das
ret
inc
mov
adc
mov
xor
jmp
dec
and
inc
xchg
mov
flds
lret
aaa
adc
into
pop
and
sbb
cmpsl
aaa
loopne
pop
sub
test
jae
icebp
jle
loop
pushf
cli
dec
in
cmp
dec
das
or
div
add
and
cmpsl
xchg
sbb
aaa
mov
jb
adc
mov
and
mov
adc
adc
rcll
ffree
sbb
xor
cmp
and
scas
mov
cmp
out
idiv
mov
add
divl
shll
outsb
call
adc
and
jb
push
push
dec
dec
push
lock
fdivs
pop
scas
adc
mov
cmp
cmp
in
add
adc
daa
push
in
mov
aad
loop
decb
jbe
sbb
pop
clc
ja
inc
jp
es
je
movl
sbb
out
pop
cmpsb
sub
and
popf
pop
pop
fisttpl
pop
xchg
cmp
out
ret
xchg
jmp
add
push
mov
sub
bound
ds
lods
adc
inc
jb
mov
add
or
mov
sbb
test
iret
int
scas
and
lock
fnstsw
scas
xor
mov
inc
jne
push
js
lahf
adc
inc
pusha
out
lahf
dec
scas
fdivs
sub
pop
adc
add
xchg
mov
mov
sbb
repnz
js
xor
push
dec
push
sti
lock
adc
lods
icebp
ja
subb
sbbl
adc
push
inc
adc
mov
ljmp
add
cmp
jg
pop
shll
mov
jo
testb
adc
mov
addr16
inc
icebp
push
xchg
adc
cld
icebp
cmpsl
mov
mov
and
lock
cmp
adc
sbb
into
jle
int
dec
dec
aad
pop
dec
xor
mov
pusha
adc
scas
xor
rcll
jl
in
xor
cmc
test
sbb
inc
cmp
jl
std
repnz
cmp
push
xor
or
cmpl
std
lock
sbbl
add
jl
xor
push
mov
jg
mov
add
adc
cvtpi2ps
add
testl
cmp
push
icebp
dec
or
adc
je
mov
nop
stos
push
adc
adc
mov
add
cmp
test
xorl
sbb
sahf
xor
icebp
pop
out
pop
int
mov
mov
int
jb
push
pop
adc
out
shl
test
and
dec
mov
sbb
jmp
xor
xor
andb
ret
loope
adc
cmp
das
push
xchg
cmp
sbb
out
mov
mull
jle
jb
mov
cld
sahf
adc
fcomip
jno
jl
fcompl
push
loope
cmp
sub
cmp
jl
or
adc
loop
imul
cmp
xor
pop
jmp
fs
hlt
push
cwtl
stos
and
inc
xchg
mov
imul
jne
loop
add
cmp
aas
repnz
pop
dec
gs
jb
hlt
dec
jp
popf
lock
jb
loop
jns
imul
dec
mov
jae
mov
aas
mov
fstpt
hlt
jne
in
inc
lcall
popl
loop
je
dec
pushf
sub
pop
mov
mov
or
ret
pop
push
cmp
pop
pop
mov
je
push
jb
mov
cmc
out
call
pusha
mov
sub
fisubl
outsb
clts
jg
movl
dec
mov
iret
cmp
jns
sti
jnp
xchg
test
je
sbb
stc
jno
loope
js
push
stc
fisttpll
jmp
jb
xor
inc
xor
lcall
or
jns
insl
cmp
in
xchg
pusha
sti
push
dec
ja
adc
mov
rcrb
nop
jl
xor
jp
push
rcr
xor
jbe
push
dec
jne
adc
mov
subb
rolb
hlt
jge
jge
shlb
mov
hlt
jae
lock
and
icebp
add
mov
jb
xor
add
dec
xchg
xchg
je
lock
das
icebp
inc
jns
ja
ja
js
jg
cmp
mov
jle
lds
inc
leave
or
sbb
out
int3
cld
subl
inc
add
ficompl
std
xchg
jnp
pop
ds
cltd
lea
cmp
mov
ss
mov
dec
arpl
or
jo
push
stc
xor
in
stos
push
mov
xor
outsb
cmp
inc
mov
jns
xor
icebp
scas
fwait
dec
icebp
adc
fnstcw
icebp
cmp
inc
dec
jbe
enter
mov
je
mov
jg
jno
lcall
jne
hlt
mov
adc
inc
jl
pop
jp
in
or
sbb
sub
insl
cmovge
sub
jg
les
bound
pop
stc
or
mov
cmp
or
sbb
in
mov
sbb
add
fdivs
scas
xor
fcmovnb
test
push
pusha
mov
jmp
cld
push
popf
roll
pop
jle
cmp
xor
or
adc
cwtl
mov
daa
dec
movsl
xchg
int3
idivl
inc
or
pop
mov
sahf
shll
in
subb
mov
insl
js
fmul
negl
jno
out
loop
dec
pop
jo
inc
xchg
push
mov
add
pop
push
fists
jl
movsb
jb
inc
and
mov
sub
mov
stc
testl
jl
xchg
xor
pop
addr16
clc
stc
subb
pushf
loop
ret
add
sub
ss
fdivl
sbb
loop
lock
loopne
mov
pusha
jb
push
jb
mov
js
insl
xor
das
xor
popa
xchg
add
adc
sbb
insl
adc
sahf
mov
mov
mov
add
mov
xor
mov
jno
aaa
and
movsb
and
add
pop
lock
xchg
sahf
fwait
inc
push
icebp
call
jne
sbb
movsb
fmulp
pushl
inc
faddl
movsb
iret
lods
lods
mov
fwait
dec
sbb
addl
mov
ljmp
fbld
sub
or
sbb
xor
lret
sbb
fidivrl
cmpsb
mov
fcom
je
jp
push
xchg
add
dec
or
dec
pop
lcall
add
adc
mov
jecxz
lods
push
das
cmp
cmp
ja
sarl
cmp
test
cmpsb
or
cwtl
test
loopne
jecxz
daa
cmp
add
ja
pmulhuw
jecxz
andb
lea
xchg
jb
mull
sub
test
outsl
inc
xor
or
cltd
sysexit
das
sub
imul
xor
aam
mov
rcrl
mov
out
sahf
jg
jae
xchg
push
inc
cmpsl
in
lock
scas
jp
jle
ror
jl
push
mov
or
data16
add
sti
loopne
sahf
push
and
rcrl
mov
int
lret
pop
adc
cmpsl
sbbl
sahf
jb
icebp
jo
nop
lock
pop
dec
ja
test
pop
push
or
js
js
cwtl
inc
mov
jno
nop
cmpsl
scas
aad
int
rorl
stos
cwtl
jo
fwait
lock
jno
repnz
bswap
insl
sbb
repnz
scas
push
jno
les
rcl
cmp
adc
xchg
mov
xchg
xor
fmuls
xor
cltd
stc
pop
stos
sti
sbb
and
or
ret
cmc
js
lock
and
push
jns
cmp
fstpt
cmp
repz
xor
adc
ljmp
jns
incb
nop
mov
xchg
adc
add
xlat
push
jae
fcoml
loopne
loope
jecxz
add
cmp
cmpb
add
push
orb
pop
pushf
jbe,pt
mov
cmp
out
adc
ja
inc
imul
xchg
outsl
mov
xorb
mov
addr16
or
cli
ret
mov
jae
pop
adc
nop
outsb
mov
adc
notl
test
lcall
xchg
jl
cmp
jne
inc
jge
test
mov
stos
jno
push
mov
jl
xlat
lock
mov
inc
std
cmc
lods
fscale
bsr
jp
movsl
mov
mov
sbb
out
loopne
mov
rcrb
mov
dec
clc
ds
js
mov
xchg
jg
mov
cli
cmp
imul
fnstsw
in
pop
movsl
jnp
mov
push
sbb
cmp
cli
repz
push
sbb
jae
jl
push
in
loopne
mov
pop
ljmp
xor
in
xchg
fmull
add
hlt
add
jge
xchg
outsb
js
add
xor
sub
mov
jge
sbb
hlt
mov
and
xchg
negb
mov
pop
int
lock
es
xchg
jl
stc
adc
pop
fiaddl
jo
push
cltd
jae
push
pop
out
lock
hlt
push
js
les
xchg
inc
jp
inc
ds
and
mov
mov
pushf
rcll
clc
test
fucomp
cmpsl
dec
mov
jnp
push
adc
test
cmp
mov
jb
jo
test
jo
add
test
int3
pop
and
and
clc
mov
adc
or
leave
or
sahf
dec
test
lcall
pop
and
sub
push
sti
cmp
stos
dec
daa
popf
and
xchg
loopne
sbb
mov
mov
movsb
mov
xor
sbb
adc
jl
std
add
pop
cld
add
aad
sbb
sahf
adc
inc
dec
sbb
pusha
lock
jmp
pop
fs
les
mov
cmp
fisttpl
jnp
fcmovbe
clc
ja
mov
cmp
pop
sub
jno
mov
movl
sub
jo
ficoml
clc
or
cmp
lds
push
cld
push
je
lock
mov
jp
stc
mov
xchg
sub
mov
bound
lds
jne
jmp
jl
in
cwtl
mov
leave
je
jg
xor
xchg
push
inc
mov
dec
cld
addb
idivb
andb
in
mov
andb
testl
in
clc
xchg
pop
hlt
fiadds
lea
cmpsl
hlt
adc
cld
xor
mov
mov
aas
adc
sti
push
jbe
fisubs
xor
mov
pop
outsl
cld
or
aaa
js
jne
mov
mov
push
mov
int
push
adc
ret
add
out
fwait
add
std
mov
cmpsb
aaa
pop
sbb
sarl
push
push
cwtl
bswap
jge
xchg
mov
adc
mov
rcl
addb
stos
insb
rep
and
mov
pop
sti
jnp
nop
std
shll
cmp
rcrl
js
enter
jmp
lret
je
push
lock
mov
cmp
scas
mov
push
nop
nop
ret
outsb
mov
pop
inc
jge
cmp
je
imul
mov
repnz
bound
lock
cmpsb
or
lret
jg
sub
shr
push
lret
cs
in
movsl
xchg
dec
push
pop
jbe
mov
and
adc
adc
inc
jg
fs
adc
jbe
and
bnd
lcall
or
scas
dec
jp
xor
test
stos
mov
push
testl
dec
dec
jne
mov
imul
mov
ja
incl
stos
mov
cmovl
mov
jo
cwtl
sar
icebp
out
call
repnz
sub
nop
or
push
or
subb
lock
cmc
sti
pop
jbe
add
stc
xorb
sbb
adc
jb
xor
mov
adc
add
gs
icebp
inc
enter
repnz
add
jle
repz
push
or
jp
hlt
jae
or
lock
lock
jp
push
or
jo
sub
jae
xor
enter
lock
repz
or
dec
clc
jle
shl
int3
sbb
imull
add
fdivs
jne
cmp
mov
inc
xor
push
adc
daa
clc
and
ljmp
mov
out
jl
repnz
mov
jo
sbb
mov
out
jne
cwtl
filds
lock
push
sbb
cmp
mov
std
mov
std
cmp
and
adcl
push
roll
fwait
out
fdivrl
mov
xchg
mov
jp
xor
push
ljmp
cld
fnstcw
fwait
and
sbbl
xchg
cli
cmp
sar
inc
add
hlt
xor
lock
mov
cmp
or
cmc
and
push
lds
inc
jle
lock
mov
lock
je
mov
stc
push
cmp
jb
dec
cmpsb
sub
mov
push
stos
mov
xor
or
jo
mov
xchg
dec
test
pop
cwtl
lock
push
std
rcrb
xor
dec
add
bound
or
push
mov
adc
cmp
cmp
adc
xor
cmp
repz
out
sub
inc
xor
add
xorl
push
shlb
sbb
mov
dec
jae
mov
cmp
repz
xchg
or
notl
cmp
mov
call
cmp
mov
shlb
js
mov
jno
mov
and
je
and
add
and
adcb
pop
xchg
lret
and
push
jae
fs
jns
ret
jl
cs
jae
add
mov
pushfw
fs
mov
xor
jg
in
and
dec
sbb
jae
add
clc
cltd
bnd
and
pop
xlat
xor
push
addr16
adc
les
pop
dec
mov
sti
rol
or
gs
test
jb
aas
fld
jg
pop
sbb
mov
dec
aam
jg
cs
mov
jnp
sbb
jne
hlt
xchg
sbb
js
mov
inc
adc
loop
movsl
push
adc
dec
mov
xor
xchg
clc
mov
jl
sub
sub
fwait
pop
push
mov
cmp
mov
fnstenv
fsubrs
cltd
mov
icebp
inc
cwtl
mov
push
dec
lcall
lods
aad
sbb
xchg
rcll
jg
js
or
hlt
sbb
hlt
sub
sub
jo
jp
xchg
cmc
sub
aam
rcll
push
xchg
imulb
push
enter
xchg
sub
mov
negl
xor
push
mov
pop
clc
popa
test
test
jne
stc
jle
movsl
push
ret
icebp
push
jle
jle
add
jo
push
pop
dec
sbb
mov
mov
dec
idivb
loopne
add
ja
into
mov
pop
sbb
sbb
loope
aaa
xor
mov
adc
jle
adcb
in
add
and
das
mov
data16
xchg
xchg
movsb
lods
and
andl
add
std
xchg
cmp
and
mov
movsb
jge
mov
jnp,pt
or
js
fwait
push
in
xlat
mov
andb
or
dec
sub
adc
cmp
pop
dec
add
mov
push
loop
ds
dec
mov
cmp
jg
ja
dec
mov
rolb
fsubrs
inc
ds
jle
add
inc
les
hlt
cli
sub
xchg
movsb
mov
fistpl
mov
mov
add
inc
fmul
fdiv
xchg
adc
repz
fnstsw
push
std
imul
testb
in
clc
jo
sbb
out
push
inc
mov
and
jbe
pop
jl
pop
bound
std
push
inc
mov
std
cmp
adc
or
and
jle
inc
pop
andb
lcall
dec
ja
jbe
jnp
xor
lahf
orl
movsb
jge
cmp
push
movsl
je
mov
sub
test
mov
outsb
flds
repnz
jle
movsl
xor
stc
and
xor
hlt
sub
sub
xor
std
cmp
adc
inc
divb
icebp
and
add
inc
mov
insl
setb
dec
adc
addb
adc
lock
testl
aam
sbb
mov
push
daa
cmp
loopne
sbb
xchg
cmp
mov
into
adc
pop
dec
adc
dec
dec
xchg
sbbb
push
std
pusha
pop
js
in
dec
lcall
fwait
mov
push
adc
xchg
mov
out
pop
test
jbe
adc
push
or
je
stc
pop
mov
mov
or
ds
xchg
test
mov
push
mov
mov
jne
loopne
jbe
out
pop
mov
push
cmp
push
scas
iret
jae
div
pop
jnp
dec
mov
repnz
add
mov
shrl
test
or
xor
xchg
jp
data16
pop
rcll
push
jp
or
scas
mov
cli
adc
ds
adc
mov
or
mov
mov
adc
sbb
int
mov
xor
mov
ljmp
inc
push
sbb
mov
cmp
mov
cmpsb
cmp
jb
dec
adc
rcrl
js
sbb
cltd
es
inc
std
xchg
ret
mov
adc
aam
imul
xor
repnz
subl
push
xchg
jp
fldl
mov
jno
shlb
add
pushf
cmp
js
ds
adc
test
jno
scas
add
jl
xchg
fidivl
repnz
mov
pop
pop
xlat
ficompl
xorl
loopw
popa
dec
fstp
mov
pop
cmp
mov
cmpb
xorl
adc
and
pop
jb
adc
lret
div
push
xchg
inc
sbb
fs
or
bnd
testb
dec
lret
xchg
cld
adc
jp
add
xchg
mov
loopne
cld
adc
aas
adc
je
in
mulb
subl
loope
nop
adc
inc
jbe
mov
rclb
lock
loop
xor
addr16
xor
out
mov
jl
xchg
out
xorl
inc
xor
mov
fdivr
je
jg
or
add
cmp
jb
stc
add
lahf
xor
xchg
cltd
cmovb
jns
negl
sti
loope
mov
cmp
shll
push
push
sbb
mov
mov
sti
jno
nop
mov
sbb
stc
or
lods
das
js
nop
std
adc
xchg
cmovg
into
mov
iret
add
or
mov
push
jl
xor
sbb
ja
lret
psrlq
xor
cli
cld
add
mov
cmp
jne
xchg
add
sub
jno
push
stc
rclb
add
rol
stc
outsl
dec
pop
pop
enter
inc
mov
dec
adcl
or
push
add
xchg
repz
jbe
lret
mov
pop
cs
int
orl
stos
mov
cmpsl
enter
push
cmp
lea
mov
imul
or
sarb
adc
int3
pop
ja
push
repz
mov
andl
dec
xchg
nop
xchg
rclb
inc
nop
icebp
js
pop
cmp
adc
and
popa
lret
inc
push
cmp
xchg
jo
lret
xor
jae
mov
lcall
ss
cwtl
mov
sbb
ficompl
popa
gs
orb
loopne
jecxz
lcall
and
in
cmp
mov
aas
mov
adc
dec
insl
ja
or
sahf
jl
fisttps
ds
adc
dec
xor
sub
cwtl
scas
sbb
call
sbb
dec
imulb
inc
cmp
cmp
push
loope
push
andb
sahf
ret
repz
movsb
divl
or
hlt
push
rclb
std
push
inc
push
mov
mov
movsb
add
xor
or
mov
push
sbb
or
xor
cwtl
in
xchg
imul
inc
add
and
idivb
mov
int3
pusha
incl
pop
jge
scas
push
or
sbb
icebp
sbb
mov
js
jns
adc
xchg
mov
addr16
mov
mov
xchg
sbb
sbb
pop
icebp
pop
mov
mov
imul
or
into
les
and
fisttps
lcall
or
fidivs
jbe
repz
imul
push
aad
xchg
cmp
sti
push
call
fbstp
lcall
mov
push
adc
icebp
rcrb
inc
xor
iret
or
sbb
jb
mov
imul
cmpsl
stc
shll
fdivs
mov
mov
shl
adc
imul
stos
sub
mov
out
aam
pop
xor
cmpb
test
jne
nop
add
jl
or
jnp
add
cld
aas
jae
jno
incl
mov
aas
data16
mov
push
icebp
or
cmpb
xchg
sbb
cli
sbb
aam
xchg
push
push
jno
divb
clc
dec
aam
jl
stc
cmp
inc
mov
mov
pop
jbe
repz
out
loop
ret
mov
pop
into
and
cmc
je
jbe
inc
andb
or
xor
arpl
mull
jecxz
loop
xchg
xor
std
jg
aaa
jnp
arpl
or
lods
test
mov
xchg
jno
jb
adc
xchg
cmp
pop
outsl
jo
shrl
push
pusha
dec
daa
push
xor
lret
aam
add
cmp
icebp
sahf
and
adc
aad
mov
mov
imul
jg
add
jle
pop
add
into
xchg
iret
sbb
aas
movsb
out
ja
push
mov
and
aas
add
sbb
adcb
xor
cmp
cmp
cmpsb
in
stos
pop
lea
push
das
cmp
sarl
mov
iret
cmp
push
inc
sahf
push
inc
sahf
stc
insl
inc
mov
mov
xor
out
add
iret
and
add
xor
cmp
jge
jnp
cltd
pushf
mov
xor
insl
sbb
jge
rclb
jbe
and
push
aad
aam
pop
fnsave
mov
setg
adc
ret
loopne
push
arpl
hlt
mov
cld
and
mov
mov
inc
in
and
adc
repz
adcb
cmp
sbb
or
xor
lock
sbb
adc
and
adc
or
push
jg
push
lock
icebp
sub
add
ds
xor
sarl
adc
adc
adc
addl
add
jl
faddl
add
ds
adc
push
adc
adc
xchg
add
dec
xchg
mov
jo
movsl
dec
inc
repnz
jle
mov
jl
test
pop
jl
in
mov
std
call
jmp
jae
clc
mov
mov
xor
xor
sub
mov
cmp
cmp
out
inc
dec
mov
mov
xchg
negb
pop
mov
cmp
add
repz
fidivl
mov
xor
aaa
xlat
aaa
icebp
push
xlat
addb
repz
icebp
or
mov
pop
fwait
hlt
xchg
out
aad
pop
dec
xlat
jge
adc
arpl
inc
or
aad
pop
mov
cld
push
pop
or
or
repnz
loope
aas
daa
jg
ds
or
hlt
push
je
jg
or
dec
cmp
dec
add
push
imul
rorb
and
sub
jb
movsl
rcll
xchg
mov
adc
jno
aam
mov
mov
movsb
jbe
jle
adc
jp
jns
cltd
xchg
js
mov
adc
pop
sub
mov
and
notl
adc
add
in
add
jo
sahf
sub
push
cli
fldcw
mov
add
add
fcomip
cs
cmp
icebp
push
repnz
das
cmp
dec
adcl
dec
xor
lock
or
fistpll
dec
jo
repnz
test
fwait
gs
jae
jg
xchg
push
lock
shl
jno
cwtl
sub
mov
mov
and
test
inc
mov
mov
xor
repz
mov
test
mov
xor
testb
sar
imul
xlat
dec
call
into
adc
push
add
pushl
sub
push
rorb
or
in
jg
rcll
js
repz
icebp
sub
mov
lds
adc
loopne
ja
or
add
mul
in
jecxz
or
pop
out
hlt
pop
mov
ljmp
jns
xor
add
pop
adc
mov
add
add
rcrl
mov
cli
lock
lock
and
push
repz
into
test
mov
cld
mull
or
xchg
xor
cmp
jne
add
lock
call
mov
cmc
xor
pop
push
xorb
xor
sbb
icebp
and
adc
or
jne
xor
outsl
push
sbb
adc
xor
test
jne
sbbb
push
hlt
lock
xchg
stos
mov
outsl
xor
jae
or
cwtl
stc
push
outsl
mov
sub
outsl
adc
push
in
popl
pop
inc
div
sub
adc
fdivrl
jne
cmpb
cwtl
div
add
lock
dec
out
mov
not
into
push
pop
loopne
adc
jl
adc
and
mov
mov
cld
jno
lods
scas
xor
mov
aam
dec
movl
lret
pop
rcll
sti
icebp
pop
addr16
and
dec
xor
xor
xchg
stc
fs
bound
jns
enter
hlt
or
sbb
paddq
dec
adc
jl
repz
add
jbe
nop
icebp
xchg
add
divb
divl
or
cmp
lods
and
ds
mov
cli
jo
jg
rcll
xor
mov
das
mov
sbb
xor
mov
jb
divb
xlat
cld
loop
xor
loope
adc
cld
in
andb
es
add
hlt
xchg
inc
xchg
add
pop
add
push
jns
push
or
hlt
lock
adc
pop
xor
mov
out
xor
jl
repz
push
push
ja
fsts
mov
sbb
lock
int3
jne
mov
pcmpgtb
add
jb
adc
cmp
jb
lock
adc
mov
dec
into
lret
mov
cmp
jo
dec
aaa
cmpsl
fdivrp
pop
xor
xor
lock
push
insl
inc
lcall
icebp
lock
mov
mov
shlb
lock
push
inc
jb
pusha
mov
cli
test
mov
jae
push
cwtl
fcompl
outsl
gs
iret
mov
pushl
jp
cmp
lea
nop
push
jb
or
sbb
imull
adc
test
pop
cld
push
mov
jp
and
sub
cmp
xlat
aas
and
xor
adc
mov
mov
dec
xchg
repz
addr16
push
or
push
jmp
mov
popa
imul
mov
cmpsb
insl
mov
adc
dec
push
push
sub
xlat
and
insl
scas
pop
push
jmp
and
fildll
xchg
daa
jl
aad
out
add
psadbw
inc
sub
insl
pop
adc
push
pop
mov
shlb
xchg
aas
jo
std
jb
daa
lock
xlat
aam
lret
jo
push
rcrl
das
cmp
icebp
xor
cmp
inc
add
test
dec
add
imul
sub
and
lea
or
imul
lret
push
sub
popa
out
addr16
xchg
cld
movb
ljmp
sub
dec
out
neg
xor
push
cli
ds
mov
sub
repz
jo
pusha
dec
sbb
rorb
fisttpll
repnz
inc
inc
call
xor
stc
mov
out
cmp
push
adc
f2xm1
lods
cmp
lds
sbb
in
or
jo
les
jmp
push
mov
aam
jnp
mov
cmp
lock
or
push
inc
je
or
sub
adcb
imul
jmp
ret
aam
push
stos
fists
pop
and
adc
pop
nop
pop
pusha
imul
mov
push
jo
lea
lret
je
lahf
add
push
fsubr
pushf
jno
arpl
cmp
call
sub
into
insl
clc
dec
add
jo
or
xchg
lock
push
icebp
cltd
aad
jmp
push
test
pop
nop
push
mov
bound
pop
push
outsb
add
ja
jb
inc
inc
inc
cmpsl
xor
icebp
sbb
cmpsl
push
stos
or
add
mov
mov
adc
jno
rcrb
icebp
popl
jno
mov
shlb
pop
jnp
or
mov
popa
add
jo
stc
cld
adc
lods
sub
adc
mov
test
sub
jo
ret
xchg
lcall
add
mov
ffree
hlt
outsl
data16
mov
lock
push
int3
add
pop
addl
repz
das
sbb
pop
stc
cmp
pop
or
repz
add
mov
mov
icebp
mov
mov
cld
xor
aaa
cld
popf
sbb
sbb
add
cltd
cmp
leave
push
or
cmp
mov
icebp
inc
insl
adc
jae
cmp
test
stc
ja
cmp
dec
or
loope
xchg
clc
jns
lock
add
mov
mov
popa
xor
push
mov
sbb
je
mov
mov
pop
add
mov
push
int3
cmc
fcompl
jbe
pop
mov
pop
outsl
jg
mov
insb
push
cmp
cs
out
out
mov
shl
mov
mov
scas
cwtl
mov
mov
out
mov
pop
icebp
jg
lods
ds
xchg
std
lret
cmp
ret
dec
jne
xor
stc
push
adc
ja
idivb
push
in
repnz
dec
test
jp
testl
dec
add
xchg
sub
into
icebp
adc
pop
aam
iret
xchg
js
xchg
and
add
adc
out
filds
push
cld
mov
mov
cmpsl
mov
call
jg
cmc
or
insl
fists
rcrb
adc
push
stc
test
fcomps
mov
pop
aaa
jl
xor
cmp
shrb
add
lea
cmpsb
add
icebp
iret
repz
arpl
out
imul
roll
cltd
sbb
jnp
and
js
outsl
sbbl
push
icebp
loopne
mov
clc
scas
mov
or
mov
iret
push
pop
jno
sbbb
or
add
push
icebp
inc
jns
lock
popf
push
fisttps
or
xor
jl
and
aad
std
pop
pop
aam
jbe
mov
lcall
jno
pop
jecxz
aam
sub
psubw
cmp
cmp
lock
add
repnz
sahf
lods
push
xchg
and
addr16
cmp
out
sahf
adc
sub
lds
mov
xchg
push
inc
inc
fldt
adc
adc
mov
cmp
cmpsl
loope
inc
lock
mov
add
sbb
mov
mov
cmpb
xchg
jl
rorl
add
mov
test
sub
test
mov
sbb
sbb
mov
loopne
add
rclb
mov
pop
pop
cmp
ret
gs
sbb
pop
ss
je
xor
jg
xlat
mov
fldenv
adc
and
cmp
xor
cmp
sbb
mov
xor
pop
iret
sbbb
cmc
test
pop
cltd
sbb
jp
inc
js
je
stos
loopne
jno
xchg
repz
jno
inc
repnz
push
loop
xchg
mov
imull
jno
adc
mov
or
jno
sbb
sbb
add
js
add
or
sbb
paddsw
out
loope
add
mov
sub
and
adc
or
decb
xor
push
or
add
cs
icebp
adcl
bnd
inc
popf
or
aad
mov
or
or
cld
negb
and
adc
cmp
xchg
jno
clc
enter
lock
hlt
cmpb
inc
sbb
sti
mov
notb
dec
inc
jno
std
ficoms
cwtl
shrl
push
rcl
pop
jnp
jge
xor
push
std
mov
ss
jo
popf
sbb
jmp
inc
push
imul
lock
mov
push
shr
mov
clc
in
cmp
mov
jp
adc
adcl
sahf
repz
pushf
sbb
jp
icebp
ss
fwait
sbbl
divl
add
and
shlb
adc
lock
js
dec
lahf
nop
movsl
adc
cmpsb
pop
jns
adc
push
leave
lret
enter
adc
add
rorb
cmp
mov
mov
ficoml
fistpll
xchg
sahf
sub
pop
cmpb
xor
push
mov
insl
sti
out
mov
jl
hlt
pop
or
mov
pop
repz
mov
push
sbb
pop
cmpb
inc
xchg
adc
repz
sub
adc
jb
icebp
push
and
mov
pushf
cmp
test
popf
or
imull
xchg
add
dec
fldcw
in
inc
and
fiadds
dec
fadds
sahf
xor
mov
adc
sti
icebp
or
xchg
fstpt
mov
adc
pop
mov
insb
mov
cmpb
add
scas
cmpb
push
sbb
icebp
sub
xchg
adcl
cmpsb
pop
push
cld
int3
and
cld
aam
and
inc
xor
mov
clc
sub
inc
aam
push
cmp
xchg
xor
adc
mov
adc
xor
lcall
xor
das
add
hlt
cmp
addr16
js
and
mov
xchg
or
sbb
fs
hlt
xor
and
push
lock
setp
jbe
or
jbe
add
cld
mov
push
xor
or
cmp
jl
loopne
mov
inc
sbb
cmpl
add
jo
mov
or
scas
jl
adc
add
xor
pop
pop
cwtl
jle
rcrb
push
cmp
lcall
ret
xor
pop
push
sub
pop
imul
mov
sbb
ret
dec
add
hlt
movsb
and
sbb
adcl
jno
pop
cmp
add
adc
pop
xor
jle
xchg
icebp
pop
aaa
jnp
std
ret
mov
mov
movsl
mov
mov
or
je
mov
in
lret
lea
notb
push
sub
pop
inc
addl
cwtl
out
movsb
or
jb
mov
clc
fldenv
stc
das
ficoms
inc
xor
in
icebp
das
mov
ficoml
cmp
cmc
mov
fistpl
movsl
mov
mov
mov
adc
adc
adc
or
div
repz
add
push
push
xor
push
decb
and
sbb
loope
add
fstl
sbb
push
mov
pop
pop
outsl
inc
sbbl
iret
add
xlat
xchg
mov
test
ss
jo
stos
push
and
mov
inc
int
loopne
add
adc
data16
out
sarl
cmp
jae
pushf
mov
jno
jae
and
incb
stos
cltd
jbe
in
or
push
cmp
dec
or
pop
xor
sarl
mov
icebp
add
or
xor
adc
xor
mov
jl
fmull
int
pop
add
pop
je
sub
cs
jo
sub
jnp,pn
jnp
cmp
xchg
or
insb
xchg
xchg
mov
mov
js
repz
mov
cwtl
fldcw
jg
cmpsb
mov
inc
ja
out
sbb
test
mov
jmp
mov
ljmp
cld
push
cmp
sub
cwtl
or
pop
mov
and
add
movsl
sahf
fistpll
sub
sbb
pop
adc
xchg
icebp
inc
adc
and
jae
or
mov
sub
xor
mov
mov
add
pusha
seto
mov
or
das
or
xor
inc
sbb
inc
xor
sbb
cmp
je
cli
outsl
ja
cltd
mov
repz
lahf
cs
push
dec
nop
mov
in
jo
xlat
mov
ljmp
andb
in
dec
xchg
arpl
mov
lock
or
ret
xor
push
or
icebp
add
ss
shlb
jno
ljmp
jb
stc
jle
inc
icebp
pop
mov
jle
pop
jge
sub
xor
inc
pop
or
dec
add
icebp
push
add
and
and
xorb
lahf
shl
cmpsb
cmp
or
ret
inc
pusha
divl
xor
rol
mov
mov
test
cmp
add
xlat
or
add
xor
adc
fwait
cmpsb
and
add
sahf
lock
loopne
adc
push
or
pop
adcb
xchg
lret
sub
addl
lea
cld
icebp
or
stos
mov
push
clc
jl
adc
mov
lock
sarb
jb
jp
sub
and
jp
sahf
js
jne
cmp
add
or
ss
in
push
lea
divl
or
icebp
test
mov
push
fistps
clc
push
adc
add
or
dec
lahf
push
mov
stc
push
dec
data16
cmc
shrb
loopne
sbb
mov
ja
cmc
jl
xor
in
std
or
js
ss
addr16
push
lea
jb
adc
loope
jb
xchg
add
cltd
adc
repz
xchg
push
inc
js
cmp
push
lock
fcoml
lock
lock
xor
icebp
sbbb
mov
mov
mov
adc
mov
jg
lret
int
incb
orps
ds
mov
fucomi
sbb
mov
aaa
mov
insl
jge
or
mov
inc
fstpl
or
jl
pop
outsb
aam
cmp
jb
or
or
and
sbbb
rcll
adc
or
push
inc
dec
adc
push
add
pop
mov
rcrb
mov
ret
aas
fstps
or
cmp
push
lea
push
jae
cmc
push
push
mov
pop
push
icebp
and
add
jl
xor
in
push
mov
xor
cmc
mov
add
lock
add
cmp
pop
rcrl
xor
jmp
lock
divb
add
push
xorl
mov
jb
xor
outsl
adc
icebp
mov
or
adc
smsw
add
addl
jle
cltd
shrb
loopne
mov
or
or
int
cmp
push
jg
lock
cmp
sti
cmpsl
call
loope
push
jecxz
lock
mov
pop
movsb
or
mov
jl
cld
orb
movsl
adc
repnz
shrb
pop
jns
add
xor
fnstcw
mov
out
cmp
inc
inc
cmpsl
call
loope
push
jecxz
add
dec
jb
not
add
pop
mov
notl
js
icebp
shr
mov
stc
test
inc
and
cwtl
or
or
repz
add
fldl
or
and
mov
lea
cmp
mov
xchg
ds
jb
adc
and
jae
add
or
repz
push
mov
imul
lahf
rcrb
loop
xor
xlat
icebp
jno
lock
icebp
adcb
xchg
call
outsl
add
mov
aad
jne
ret
insl
jge
outsl
mov
repz
js
lock
lods
inc
push
xchg
gs
icebp
mov
daa
loopne
fimull
xor
inc
push
shlb
mov
icebp
mov
sbb
mov
mov
add
pop
mov
icebp
pop
lret
insb
add
or
call
or
fmuls
mov
subb
aam
dec
loop
shrl
insl
ljmp
fsubl
clc
rorb
pop
pusha
lahf
push
scas
xchg
stc
xor
mov
jp
cmp
xlat
dec
test
xchg
adc
xchg
lcall
shlb
aam
jge
xchg
fsubrs
and
lcall
or
lods
sbb
test
cmp
push
js
ss
cmp
aam
push
addb
inc
jns
jl
xor
icebp
mov
mov
ljmp
adc
mov
cmp
and
pop
sbb
add
pop
lea
sar
pop
add
and
mov
mov
add
addl
or
lock
sbbl
adc
mov
addl
mov
xor
cmp
pop
shll
adc
ds
andb
loope
sahf
jge
add
add
adcb
xchg
int
dec
les
in
sbb
mov
lret
adc
push
add
pop
std
push
xor
adc
roll
xchg
call
add
push
or
push
jns
cli
in
mov
jne
cmp
adc
add
cmpsl
call
loope
push
jecxz
add
sub
inc
lock
loope
stc
jne
rcrb
jp
lret
push
mov
fcoms
adc
and
maskmovq
mull
divl
js
jl
int
xor
stos
subb
loopne
into
and
mov
or
jl
adc
mov
test
push
ss
icebp
jae
scas
xchg
lock
cmp
adc
cmpsl
dec
xor
sahf
lock
int
push
lea
jo
pop
rcll
jno
adc
add
icebp
js
inc
in
dec
sub
dec
adc
ds
rorl
mov
mov
lcall
popf
push
cmpb
push
xchg
push
lea
mov
push
adc
mov
or
or
int
popf
add
inc
jne
lea
push
mov
scas
enter
add
lea
or
in
xchg
or
ud2
mov
or
mov
mov
mov
jae
into
adc
mov
xchg
and
wbinvd
mov
or
mov
pop
xchg
int
testl
inc
mov
adc
dec
imul
pop
sarb
icebp
call
pop
push
test
imul
sbb
add
sbb
add
add
pop
add
lret
insb
add
add
enter
or
fadds
cli
adc
add
subb
cmp
add
insl
lcall
add
pusha
pop
xchg
into
adc
adc
and
andb
add
sti
xchg
int
scas
mov
cmpb
xorb
xor
mov
add
sbb
icebp
mov
jecxz
sti
cmp
push
lea
jnp
lret
icebp
sarb
jnp
out
hlt
sbbb
cld
xchg
inc
ds
rcrl
stc
shrl
mov
adc
mov
jns
mov
jp
inc
add
cli
js
pop
dec
lret
ja
and
outsl
jno
loopne
inc
pop
js
mov
notl
js
ret
cmp
pop
xor
clc
adc
sahf
jne
pop
jno
rcrb
xchg
jl
mov
aam
cmc
ss
adc
in
mov
inc
ret
jecxz
add
sub
aas
lock
mov
pop
clc
jg
cmp
or
repz
movsl
faddl
mov
push
ss
int
jno
push
mov
jno
cmp
xor
adc
adc
das
jecxz
sbb
scas
cmpb
cmp
das
xchg
add
das
sbb
icebp
or
fscale
or
addl
mov
cli
xchg
mov
pop
js
or
out
jb
fists
cmp
xchg
adc
int
lea
xchg
cmp
out
inc
push
lock
js
icebp
add
pop
mov
lock
mov
je
or
jne
repnz
out
cmp
in
pushf
ret
adc
or
pop
mov
sarl
sub
mov
imul
cltd
or
push
popa
lods
outsl
sub
in
xchg
mov
cld
subb
pop
sarb
adc
cmpsl
push
or
dec
mov
aam
push
mov
mov
sub
incb
xor
adc
ja
pusha
icebp
dec
xchg
std
jns
pusha
jno
and
cmpsb
adc
pop
adc
lock
or
add
mov
cmp
add
cmc
adc
icebp
test
add
cmp
adcb
lock
ja
icebp
pushf
std
pop
xor
shlb
adc
push
shlb
subb
loopne
dec
mov
add
pop
adcb
leave
pop
fscale
dec
adcl
sbb
xchg
cmc
mov
ss
pop
jnp
jl
jl
adc
xor
xor
jg
inc
jne
cwtl
addl
push
or
and
inc
leave
jae
jle
adc
ret
sub
incb
xor
adc
cmp
adc
dec
lcall
jp
movsb
repz
into
mov
loop
mov
stos
sbb
inc
jnp
xor
or
negb
adc
adc
dec
notb
pop
test
in
subl
clc
ja
in
add
andb
adc
push
jne
jb
inc
jp
sbbb
adc
negl
notl
js
pop
dec
loop
cwtl
pop
loopne
pushf
test
cmp
mov
xchg
test
je
cmp
je
hlt
sub
repz
sarb
test
xchg
lock
jne
cmc
pop
cmpb
sub
mov
mov
ss
bound
mov
in
mov
pop
adc
icebp
push
inc
loop
add
mov
ret
mov
mov
fstl
cmpl
inc
mov
repz
adc
or
jo
mov
pop
lock
jl
jne
cmp
jno
cmp
mov
mov
cmp
sbb
push
xor
stos
mov
and
inc
xor
mov
fdivr
aas
mov
test
jne
out
ss
pop
sbbl
pop
xor
jbe
loop
jae
mov
push
js
push
inc
popl
and
fidivl
je
dec
subl
fdivrs
or
int
mov
pusha
sbb
in
jb
ljmp
xchg
inc
or
push
push
fdiv
mov
shrl
adc
jmp
lock
xchg
adc
mov
cmp
xor
fcoms
mov
mov
cmp
fidivrs
sbbb
lock
push
mov
fnstsw
dec
pop
sarb
cltd
incl
xor
lods
sub
push
inc
aad
aam
xor
test
std
adc
adc
lock
jl
stos
mov
mov
add
adc
adcb
push
mov
jae
int
dec
cmp
xchg
js
ss
ficompl
inc
dec
push
mov
jb
test
sahf
push
js
adc
imul
pop
add
cmp
add
cltd
mov
jae
fwait
mov
cmpb
fnstsw
pop
sub
add
mov
sahf
fcoms
ss
add
mov
xor
push
inc
add
jne
inc
dec
hlt
mov
stc
inc
sbb
mov
jne
fcomp
or
cmp
cwtl
stc
xchg
incb
cli
cmp
inc
imul
sub
adc
icebp
adc
aas
xchg
push
or
mov
test
ss
lret
pop
stos
imul
sbb
call
xor
push
cmpsl
js
push
cli
jle
out
hlt
xor
adc
dec
jb
cmc
mov
movsb
mov
in
mov
gs
je
dec
aam
mov
enter
pop
call
cmpsl
push
jle
pop
shlb
sbb
sbb
jne
mov
adc
xchg
shll
testl
inc
std
sbb
mov
mov
dec
pop
orb
pop
dec
jae
jl
or
ja
ds
popa
add
xchg
xchg
pop
jae
mov
mov
fwait
and
fists
test
jbe
fcoms
divb
imulb
rcll
icebp
xchg
mov
push
inc
jns
mov
in
clc
xchg
xchg
or
cltd
popa
mov
hlt
cltd
pop
adc
add
hlt
or
adc
jno
xorb
jb
xchg
cmp
push
xchg
das
dec
sahf
sarb
xor
xchg
subb
repz
xchg
push
add
pushf
inc
cmp
pop
je
in
scas
adc
lcall
dec
rcrl
push
mov
mov
mov
mov
inc
jo
shr
jb
cmc
add
jno
and
sahf
ljmp
sbbb
loope
cmp
leave
testl
mov
shl
push
out
rorl
scas
dec
mov
push
xchg
mov
lds
pop
je
cmp
in
or
cmp
aad
fsubp
icebp
aaa
mov
mov
in
push
dec
mov
and
jg
cmp
ss
cwtl
mov
pop
cmp
jge
adc
mov
cmp
lret
adc
push
jno
sub
or
icebp
push
add
dec
push
mov
jbe
or
sbbl
daa
or
ss
repz
mov
push
cmp
inc
cmpsl
push
orb
mov
cmp
pop
sarb
mov
xor
xchg
inc
sub
or
test
idivb
or
icebp
mov
jp
orb
jl
add
orb
pop
lods
or
sub
std
or
xchg
pop
add
call
fadds
orl
ret
xor
jne
xchg
sbb
cmp
jb
roll
add
adc
adc
mov
pop
mov
xchg
mov
cmp
out
xor
push
cmp
pop
cmc
adc
push
gs
ret
or
mov
jb
ret
hlt
loope
xor
sti
pop
cmpsl
adc
inc
mov
cmpb
icebp
add
jl
push
cld
xchg
jp
inc
adc
jge
lret
and
adc
subb
pushf
daa
xchg
sub
test
ss
adc
pop
daa
jae
adc
out
mov
push
lret
js
testb
pop
add
cmp
push
jnp
jecxz
jbe
push
inc
sar
lret
jb
out
es
scas
cmp
and
stos
js
ja
stc
or
ss
mov
cmp
push
adc
jl
push
clc
push
icebp
pop
xor
clc
jl
adc
add
int
adc
mov
adc
adc
adc
mov
adc
mov
jp
fwait
cli
movsb
daa
or
mov
cmpb
aad
adcb
jbe
jbe
cmp
or
loopne
je
lods
mov
sbb
repnz
adc
dec
stc
adc
cmp
add
adc
loopne
int
adc
cmpsl
mov
pusha
cmpsl
adc
adc
push
icebp
sub
xchg
repnz
movsb
and
lods
xor
add
scas
lock
mov
imul
icebp
lock
icebp
lret
sub
sbb
pop
xchg
sub
jb
mov
jb
push
adc
pusha
or
jae
dec
xorb
addr16
loop
and
push
sti
add
push
jb
add
adc
into
pop
cmp
ret
cmp
sti
sub
jle
mov
outsb
inc
or
add
pop
test
popa
mov
jne
mov
sub
test
mov
sysenter
push
out
dec
cmpsb
pusha
push
cld
or
and
ret
push
pop
ror
adc
loopne
mov
adc
addr16
movsb
xor
mov
dec
xor
mov
adc
mov
mov
adc
test
out
xlat
in
scas
pop
push
icebp
add
adc
push
into
out
nop
xor
mov
or
pop
cmp
jno
push
adc
and
bound
aam
mov
adc
icebp
or
and
xor
jb
je
mov
mov
shlb
jle
xor
or
icebp
mov
testb
and
popf
mov
inc
sbb
mov
or
cmp
and
pop
cltd
cwtl
adc
and
mov
outsl
cld
and
and
and
negb
mov
and
cmp
sbbl
xchg
pop
pop
mov
in
pop
xor
scas
mov
and
movsl
add
andb
pop
cmp
mov
cltd
xor
repz
js
push
ljmp
sbbb
divb
jl
dec
xor
lock
adc
into
ds
mov
nop
daa
mov
lahf
push
stc
cmpsb
push
cld
stc
jb
cwtl
cltd
mov
or
aam
jo
cli
ss
push
ja
clc
sub
and
xchg
repnz
mov
repnz
insl
adc
mov
pop
mov
push
cmp
add
shlb
add
into
sbb
hlt
mov
cmpsb
fs
sbb
add
or
in
adc
xchg
lahf
and
test
mov
fmuls
pop
and
bound
pop
sub
adc
adc
jl
adc
lock
out
pop
pop
das
sub
mov
rolb
inc
pushf
into
cmpsl
fisubrl
cli
inc
lods
rclb
lea
test
out
add
negl
adc
xchg
int3
icebp
xor
add
and
jb
or
icebp
add
xor
jecxz
sbbl
js
inc
stc
push
push
mov
pop
mov
xchg
aas
icebp
xor
into
pop
and
rcrb
icebp
jg
dec
xchg
mov
dec
lods
xor
push
cmpb
add
sbb
add
fmull
aam
add
push
pop
sub
mov
lods
icebp
xor
into
and
dec
and
or
push
or
adc
jno
popa
dec
lahf
lds
add
pushf
lea
jns
bnd
and
jno
out
xor
inc
pop
icebp
and
js
hlt
cmpsb
sub
stc
icebp
jbe
dec
adc
push
testb
xchg
ss
lret
xchg
cmp
cli
daa
push
xchg
jno
adcb
sar
inc
xchg
inc
dec
icebp
and
mov
push
add
mov
push
jmp
mov
mov
or
and
or
inc
jno
sbbb
mov
jl
jl
lock
inc
cmp
adc
add
ds
xor
adc
add
cmp
div
push
rcr
sbb
add
pshufw
pop
jno
jnp
stos
push
adc
icebp
rolb
icebp
and
jp
push
add
mov
lret
popa
dec
in
push
add
jge
test
add
stos
adcl
or
js
xchg
mov
or
mov
cmp
mov
jge
jno
sbbb
mov
js
lss
sahf
js
dec
cmp
lock
inc
iret
icebp
and
mov
push
repnz
jge
insb
clc
icebp
hlt
cmpsl
inc
xchg
jne
adc
add
add
pushf
ja
push
movsl
adc
lock
inc
jl
xor
adc
adc
mov
jl
mov
loop
jns
add
xchg
jno
cmpb
adc
add
jne
sarb
icebp
in
xor
or
clc
icebp
mov
jb
adc
xor
push
xchg
lock
test
jb
adc
add
inc
inc
adc
sarb
or
cmp
fcomip
adc
adc
mov
into
mull
jnp
and
mov
push
jle
mov
ss
cmp
mov
add
in
adc
mov
jno
cmpb
xchg
popa
dec
daa
movsb
push
mov
push
test
rcr
jge
inc
icebp
cwtl
push
lods
pusha
cmp
daa
mov
jno
pop
scas
dec
push
cwtl
icebp
dec
aad
cli
push
mov
jl
xor
adc
mov
icebp
cwtl
hlt
lods
xor
push
jne
push
mov
cmp
mov
push
jl
push
lea
adc
jg
sub
lods
and
cmp
jge
dec
sbb
pop
fiaddl
mov
cmp
mov
loope
movsl
push
mov
mov
scas
stos
cmp
das
in
or
mov
dec
mov
add
out
push
mov
test
jne
mov
stos
scas
or
dec
daa
je
jae
shl
dec
or
shll
cmpsl
jo
hlt
jae
and
enter
popf
loopne
xchg
sbb
pop
repnz
ds
add
sbb
pushf
movsb
jae
cmp
jno
push
adc
xchg
jg
xor
pop
jl
jb
mov
adc
sub
dec
push
ja
fnstsw
jb,pt
push
adcb
aaa
mov
hlt
ficoms
lcall
sbb
jae
jbe
stos
xchg
sarl
out
mov
outsl
mov
xchg
xlat
pop
js
sub
out
xchg
or
cwtl
mov
fcoml
lock
jmp
les
inc
push
idiv
xchg
sub
hlt
add
loopne
push
inc
jl
mov
and
jmp
pop
pop
inc
and
stc
cld
dec
mov
xor
jnp
aam
rclb
ret
fildl
and
push
push
jb
or
or
data16
dec
push
fs
pop
popa
sub
xor
cmp
cmp
or
jle
and
adcb
mov
jnp
insl
push
enter
push
aam
add
push
ds
fwait
xchg
pop
push
and
add
pop
add
lret
cmp
loope
pop
addr16
in
aad
data16
dec
into
mov
addr16
lret
push
andb
adc
lcall
jns
fdivl
movsb
sub
cmpsl
adc
add
mov
mov
adc
mov
andl
xor
ja
mov
cmp
js
test
sahf
sbb
mov
cld
stc
sbb
push
xchg
cld
pop
scas
movsl
insb
xchg
mov
arpl
jmp
ds
popf
and
jne
insl
lds
xor
sahf
sub
and
loopne
mov
ljmp
dec
mov
jae
sarb
adc
mov
loopne
cmp
clc
pop
nop
mov
aam
inc
loop
or
dec
pop
fyl2x
push
or
mov
loope
iret
mov
iret
inc
sub
and
ja
scas
loope
ja,pt
xchg
test
in
xorb
inc
lcall
xchg
repz
adc
push
sub
and
sahf
and
out
cltd
mov
pusha
mov
sbb
jae
jbe
mulb
jle
js
hlt
mov
lret
sbb
mov
sub
xor
pop
icebp
mov
mov
popf
push
imull
cmp
int3
xor
aaa
repnz
xorb
xchg
cmpb
js
popa
push
or
or
push
cwtl
add
sbb
cmp
push
subl
inc
nop
mov
nop
cld
mov
rcll
cwtl
cmpl
cwtl
and
mov
pop
jae
or
pop
dec
loope
fisttpll
ret
push
mov
js
sbb
mov
icebp
das
and
adc
jae
cld
jb
sbb
and
jg
jge
add
push
int3
add
jb
ds
cmpsb
push
mov
icebp
mov
or
inc
sahf
jo
je
hlt
icebp
loopne
std
xor
push
mov
push
jb
jle
imul
mov
adc
mov
decb
addps
jae
lock
jb
xor
push
int
aaa
mov
cmp
mov
or
push
cli
sub
sbb
xchg
fwait
or
pushf
mov
push
dec
xor
js
sub
orl
repnz
mov
or
adcb
or
mov
jo
xchg
notb
inc
mov
xchg
jle
jb
repz
lods
jp
push
jmp
sbbb
js
testb
mov
pop
gs
xor
adc
inc
jae
add
jmp
js
insl
cmp
mov
sub
cwtl
cmp
add
push
jg
jp
lret
jno
jmp
ret
fdivp
xor
xchg
cld
out
inc
addl
sub
mov
sar
adc
rorb
popa
int3
xor
out
ss
test
add
or
mov
lret
jae
ret
add
roll
push
cmp
or
lea
and
jp
ljmp
mov
negl
mul
pop
pop
mov
out
lahf
hlt
push
out
cmp
repz
sbb
push
pusha
outsl
mov
fistps
mov
roll
push
pusha
cmp
dec
adc
jnp
pushf
stc
cmpsb
push
cld
sbb
out
pop
lcall
cmp
xor
sub
jb
xchg
pop
or
orps
jae
arpl
shll
pop
pop
sarb
aas
and
push
outsl
inc
or
fstpt
cli
pop
js
xor
adc
jae
adc
insl
push
cmpsb
pop
out
mov
and
mov
scas
jae
mov
xor
adc
fwait
jb
orb
mov
or
mov
cmp
icebp
inc
dec
sahf
adc
cmp
lret
push
jmp
in
daa
jo
mov
xor
pop
lds
aam
pop
js
ss
mov
jo
fldt
or
jno
jg
xor
or
jp
push
xor
sbb
outsb
mov
icebp
mov
sub
repnz
or
inc
lea
scas
add
mov
rcll
out
pop
mov
jno
dec
pop
xchg
lock
add
pop
mov
inc
sbb
inc
add
call
xchg
push
jno
idivb
add
call
sub
pop
lods
mov
repnz
add
popa
cmp
fsubrl
jp
and
lds
pop
js
cmp
mov
jp
or
divb
xchg
xchg
mov
add
sub
fscale
test
pop
nop
sbbb
mov
sbb
xor
sbb
ret
int
mov
cmp
lret
scas
dec
rcl
cmp
xor
icebp
loopne
hlt
xor
push
mov
and
jne
mov
or
mov
cld
into
mov
sbb
hlt
out
popa
repz
scas
and
iret
jnp
lods
cmpsb
inc
push
mov
or
mov
outsl
adc
dec
xor
outsb
mov
mov
ljmp
scas
add
pop
cmp
mov
hlt
mov
mov
hlt
das
jg
mov
fdiv
xchg
mov
mov
jle
lods
mov
or
icebp
pop
cmp
dec
jb
repz
cmpsl
pop
jmp
es
addr16
adc
mov
gs
xchg
daa
scas
lret
loopne
xchg
dec
dec
jae
xor
mov
incl
dec
addr16
out
dec
cmp
cli
loopne
jns
xchg
mov
sub
or
or
decb
faddl
rcl
ret
sbbl
pop
rorb
seto
adc
aaa
in
std
or
iret
out
adc
sub
xchg
mov
outsb
and
mov
leave
cld
je
xchg
mov
ss
jg
mov
imul
sub
add
and
mov
shrb
ljmp
xorb
mov
mov
push
insl
cmp
cwtl
repnz
outsb
out
and
sub
test
lret
das
dec
call
cwtl
adc
scas
xchg
jae
in
clc
cmp
mov
mov
dec
lret
dec
cmc
out
mov
cwtl
je
inc
aam
faddl
xor
mov
inc
bound
scas
push
bnd
enter
adc
into
movsb
nop
sbb
jl
cmp
mov
sub
jbe
cmp
pop
push
mov
in
pop
xor
mov
sbb
cmpb
xor
push
add
jno
mov
jmp
inc
mov
test
pop
scas
sbb
or
add
cmp
movsb
insb
fldenv
add
push
icebp
popa
adc
repz
dec
test
sbb
dec
nop
mov
int3
sbb
pushf
mov
or
or
cmpl
add
dec
repz
mov
mov
sub
jns
or
fdivr
or
je
mov
ss
test
mov
push
pop
adc
inc
xchg
aad
mov
or
rorl
cmc
sub
loopne
or
jge
push
or
ss
shrl
ficoml
mov
mov
push
jle
adcl
movsl
pushf
inc
or
mov
jl
xchg
cmpl
ficoml
mov
mov
fs
mov
cwtl
xor
aas
cmp
dec
mov
cmp
insb
mov
cmp
lret
mov
std
add
cltd
jmp
sbbb
xorb
xor
je
int
js
pop
adc
xor
push
xor
sub
xchg
lds
leave
clc
push
and
sbb
or
test
add
cld
jge
in
mov
loopne
pop
sbb
fs
pusha
push
aam
xlat
test
cmc
cmpsl
or
inc
push
repnz
lahf
and
xchg
out
call
cltd
in
repz
cs
loope
push
cmp
mov
cmp
pushf
fs
sub
icebp
lock
and
mov
nop
setp
int3
add
push
insl
adcb
cmp
fnstsw
stc
adc
xchg
icebp
xchg
add
adc
dec
je
xor
adc
lock
cmpb
adc
icebp
or
sub
xor
adc
cmpsl
cmpb
adc
icebp
push
add
sbb
lods
iret
stc
out
adc
sub
rcrb
out
pop
out
mov
cmp
mov
repz
lock
cld
or
fistl
out
jns
cltd
cmpb
push
popl
push
add
cmp
jge
adc
icebp
rolb
icebp
sub
hlt
xor
outsb
jno
repnz
sub
jae
jp
mov
adc
cmpsl
cmpb
push
jg
gs
js
and
jne
add
cmc
adc
xor
pop
pop
lock
mov
sbb
ja
xlat
lock
js
ds
adc
lock
jns
je
cmp
push
mov
add
mov
push
cli
xchg
in
mov
stc
dec
sbb
sbb
pop
xchg
xchg
out
push
mov
mov
loop
mov
push
lahf
fdivrs
jle
xor
sbb
lcall
or
jne
pop
fiaddl
mov
sbb
inc
icebp
sbb
sub
or
into
pop
pop
fidivl
das
fcompl
clc
cmp
mov
jge
aas
mov
fisubrl
jp
std
call
test
js
mov
sbb
pop
enter
popf
loopne
fs
ficompl
ficompl
ficoml
sbb
mov
adc
sbb
sarb
and
rcrl
and
jmp
jge
dec
sbb
aas
or
or
jns
push
lock
mov
mov
aam
das
or
pop
sbb
call
icebp
hlt
adc
mov
sub
mov
add
and
xchg
shll
adc
lock
dec
adc
xchg
sbb
add
inc
lcall
jo
aam
jg
inc
popa
ss
xor
push
add
jae
push
sahf
push
dec
inc
shll
pusha
xor
xor
add
push
dec
inc
pop
movsb
and
xor
in
push
je
pop
sub
pop
neg
sub
pop
icebp
pushf
repnz
sub
add
mov
mov
test
or
push
inc
pop
sti
pop
aam
add
push
xlat
adc
and
adc
pop
cmpb
push
push
add
xchg
lock
add
xor
adc
or
lock
add
add
add
and
mov
dec
mov
rcrb
mov
xchg
bound
and
stos
icebp
insb
inc
addb
jmp
mov
rclb
sbb
sbbl
mov
adcb
add
repnz
and
scas
mov
dec
lret
lock
stc
mull
ja
lock
cmp
icebp
shll
sub
addb
jle
cwtl
out
adc
mov
add
inc
push
sbb
or
stos
sub
in
ret
push
ficoms
xor
pop
mov
in
sbb
sbb
lahf
add
inc
es
mov
ret
negb
xor
mov
cmp
mov
and
and
sarb
push
pop
dec
inc
lret
dec
adc
shlb
cmp
icebp
nop
stc
or
xor
mov
inc
ljmp
cmpsb
or
hlt
add
stos
lret
pop
jbe
outsl
adc
push
aad
or
call
std
push
test
xchg
or
or
aas
into
xor
cmpsb
dec
dec
adc
out
push
add
push
adc
cmp
std
jge
cmp
hlt
sbbb
dec
mov
pop
sbb
mov
mov
pop
xchg
popf
jle
mov
out
mov
jb
sahf
ds
cwtl
aad
pop
iret
jo
movsb
mov
clc
dec
ds
pop
xchg
sbb
clc
jp
in
mov
arpl
pop
mov
inc
fcmove
jbe
sahf
jb
lods
mov
xchg
cltd
sbb
cmp
sbb
sub
mov
pop
std
cld
lock
pop
cmp
aam
sbb
xchg
mov
popf
icebp
xor
mov
rcll
mov
fstp
push
cmp
cli
faddl
jg
stc
jge
cld
jecxz
xor
leave
fnstsw
stos
cli
fsubrl
sbb
mov
sub
xchg
fstl
xchg
push
cwtl
pop
mov
cmp
outsb
mov
sbb
in
loopne
xchg
jle
mov
mov
jp
std
add
lret
jmp
movsl
lods
add
lea
jb
mov
sub
or
dec
adc
pop
mov
sbb
cmpsl
mov
dec
mov
push
lret
jae
addb
mov
iret
jp
loope
pop
xchg
popf
sbb
xor
or
out
xor
shll
mov
in
sahf
cmp
mov
stos
scas
clc
xchg
mov
fisttpl
mov
filds
mov
push
pop
outsl
add
daa
dec
sbb
jmp
and
mov
ss
push
xor
inc
daa
mov
adc
mov
jecxz
sbb
mov
popf
or
dec
add
imul
adc
lds
sbb
ja
mov
and
or
lock
ja
mov
cmp
mov
pop
aam
js
or
sbb
mov
adc
fnstsw
fimuls
inc
push
insl
sbb
lock
push
fld
pop
mov
repz
int3
ret
out
push
hlt
mov
shr
mov
xchg
lods
in
sbb
inc
push
bound
push
or
insl
ss
mov
push
or
ret
sub
mov
dec
inc
xor
imul
js
cwtl
fwait
mov
dec
std
jmp
mov
lret
addr16
jg
andb
aam
fwait
lds
in
bound
clc
fidivs
add
sbb
dec
mov
jo
and
jle
jbe
aas
stc
aam
sbb
or
or
clc
clc
mulb
cmc
ficoml
dec
push
mov
insb
xchg
sahf
test
xchg
xor
fiadds
out
xor
dec
inc
ja
cmp
mov
popl
jo
or
orb
and
rcrb
or
cmpsl
cmp
negl
jb
push
in
clc
fcomip
scas
xchg
call
sbb
or
or
je
dec
icebp
inc
mov
push
js
or
ret
dec
adc
or
add
or
mov
xchg
mov
xor
jle
push
xchg
aaa
adc
add
inc
sbb
cmpsl
enter
jns
and
or
jmp
inc
ljmp
lds
mov
mov
pop
out
movsl
dec
fcomps
push
cmp
mov
dec
sahf
sub
sbb
push
aaa
push
or
xrelease
jle
movsb
jb
adc
mov
lods
nop
dec
inc
aas
dec
orl
push
dec
xorl
iret
repz
jbe
mov
scas
jl
divb
add
cmp
cltd
and
mov
inc
out
ds
push
or
sub
jp
push
lock
int
in
rcl
out
jb
sub
faddp
ja
mov
insl
shl
sub
jae
push
adc
lock
push
mov
sub
scas
lret
or
maskmovq
notl
jg
push
popa
xor
pusha
pop
jb
stc
and
jno
out
and
pop
shlb
movsl
fildll
lret
jbe
push
sbbb
fimull
xchg
leave
sub
hlt
mov
fldl
cmp
jae
lock
mov
lret
lret
or
sti
lahf
mov
notl
repnz
jle
fldcw
sub
and
adc
ja
mov
jg
mov
into
enter
pushf
inc
add
insl
pop
inc
rep
sbb
test
pop
nop
inc
or
ret
popf
adc
icebp
push
lret
insl
mov
mov
xchg
into
pop
int3
add
mov
and
call
xor
iret
pusha
call
or
out
dec
push
lret
mov
jno
xor
bound
add
pusha
pop
hlt
inc
dec
mov
cli
ljmp
mov
xor
and
lahf
ret
in
movsb
mov
push
push
decb
cli
jbe
xor
mov
inc
dec
push
dec
cmp
mov
popa
pop
xlat
mov
push
adc
adc
fnstenv
imul
xor
call
sbb
xchg
or
xor
mov
push
or
and
outsl
in
pusha
fistps
xchg
sarl
aaa
testb
adc
add
or
lea
icebp
jno
or
sbb
mov
sbb
fs
push
cld
iret
fisttps
inc
push
cmp
dec
ret
pop
cli
dec
or
xchg
xorb
sub
cmp
jnp
adc
add
dec
movsl
rolb
push
dec
rcl
or
and
mov
xor
fistps
bound
and
jae
mov
add
scas
adc
hlt
xor
pop
call
je
mov
adc
adc
mov
push
orb
jecxz
icebp
out
dec
test
fistpl
sub
cmp
adc
pop
bound
push
adc
add
insl
jae
cmp
inc
push
fnstsw
jnp
cld
rcr
rorl
repnz
aad
cwtl
mov
mov
mov
cmc
je
jne
mov
ds
adc
cmc
aad
or
push
hlt
xor
je
lcall
dec
xor
dec
stos
fdivr
add
shll
jbe
repz
je
xchg
cld
mov
cli
or
inc
cmpsb
mov
rorb
and
das
xor
pop
add
je
cmc
pop
inc
cmp
leave
push
dec
or
andb
lds
pop
int
cltd
mov
dec
mov
mov
xor
jno
mov
adc
psrad
add
sub
ud1
add
and
clc
jbe
pop
mov
cld
call
mov
xchg
adc
or
sbb
movsb
out
out
jo
sbb
jb
cmp
sub
test
daa
ror
imul
add
push
cmp
sub
fnsave
fisubs
dec
cmova
ja
stos
lret
das
xor
icebp
or
jae
inc
stos
push
jmp
xorb
test
pcmpgtd
rcrb
orb
mov
add
lea
pusha
pop
icebp
mov
std
test
inc
in
push
xor
push
decb
adc
mov
sbb
lea
ja
xor
push
orb
mov
or
test
fcomp
and
out
cmp
push
inc
rorl
push
stos
ret
xchg
sub
jmp
rorb
je
mov
icebp
xlat
mov
ss
sub
orl
jge
stos
out
xorb
or
cmpsb
stc
xor
add
or
pop
and
jmp
xchg
test
pop
pusha
outsl
adc
das
ds
jo
mov
enter
mov
and
dec
stc
or
mov
pop
pop
pop
or
jb
icebp
shlb
pusha
dec
xor
cs
bound
ja
cmpsb
pop
pop
aad
and
mov
adc
inc
xor
hlt
stc
inc
leave
jecxz
lahf
xchg
int
mov
mov
int
mov
push
dec
test
mov
pushf
in
fwait
loopne
dec
add
cmp
repz
test
fidivs
orl
mov
inc
cmp
hlt
cmp
dec
push
mov
stos
mov
js
dec
xor
jne
clc
jne
or
sbb
cmpsb
push
adc
sbb
je
cmp
mov
lds
xor
mov
in
clc
mov
je
mov
cmp
addl
adc
in
jno
sar
or
sbb
jbe
xor
icebp
inc
lods
stc
dec
xor
icebp
lock
push
pop
or
mov
jb
sbb
fscale
sub
inc
push
adc
add
xchg
mov
xor
xor
jno
pslld
mov
gs
pop
jb
mov
lock
in
push
xchg
dec
jge
cwtl
testb
inc
and
les
adc
and
push
faddp
sbb
mov
mov
and
negb
or
ljmp
insb
das
cmp
xor
xchg
xchg
addr16
mov
mov
mov
add
add
movsl
add
add
repz
js
jb
xor
inc
push
mov
es
movsb
ss
clc
int
cmc
cmp
mov
mov
add
xor
outsl
adc
mov
js
faddp
mov
push
xor
fnsave
inc
mov
mov
add
mov
ljmp
ja
sub
movsb
cmpsl
arpl
mov
into
lahf
push
subb
dec
dec
and
test
adc
gs
push
cwtl
and
inc
jno
jl
adc
icebp
adc
jae
jbe
mov
int
adc
in
or
lods
lret
jg
jno
loopne
jb
js
push
repnz
or
sub
cmp
aaa
dec
shll
mov
lahf
js
js
mov
inc
orl
jp
jno
js
xor
orl
lds
xchg
in
lock
xchg
clc
adc
dec
and
dec
jo
mov
les
icebp
push
icebp
mov
dec
mov
lahf
sahf
sub
icebp
push
out
cmp
stos
push
lods
dec
movsb
cmp
dec
mov
mov
jecxz
jne
jb
dec
cmp
inc
sub
or
inc
fiaddl
mov
and
in
clc
fs
inc
xor
mov
pop
loopne
cmp
pop
lock
lock
mov
push
icebp
push
cs
lock
rclb
icebp
xchg
or
cltd
mov
mov
test
adc
in
cmp
push
adc
icebp
cmp
add
xor
inc
repnz
cmc
dec
jbe
test
xor
movsl
cmp
cmp
jp
mov
in
xor
nop
xchg
add
sub
pop
loopne
add
pop
std
movl
add
nop
cmp
orb
sub
xor
add
call
and
or
xchg
and
notb
aam
xor
and
dec
hlt
les
jno
xchg
add
add
mov
dec
cmp
jl
pop
mov
loopne
cmc
xchg
js
push
jbe
lock
cmp
sub
into
sub
movsl
xor
add
xor
in
sti
add
icebp
dec
les
add
jmp
push
mov
cld
mov
adc
gs
clc
adc
xor
push
dec
lods
sub
fisubl
jp
lock
xor
scas
cmp
xchg
test
or
imul
clc
jae
mov
negl
ret
jmp
or
jo
inc
inc
push
pop
push
ret
jb
pop
repnz
xchg
fst
push
pop
cmp
loope
and
in
fiadds
outsl
test
lock
into
enter
cmp
xchg
decl
pusha
push
jg
pop
dec
mov
mov
pushf
dec
jb
jge
adc
dec
lahf
nop
adc
ret
mov
sti
jns
add
aad
push
pop
in
mov
and
sub
push
sub
jns
repz
mov
pop
pop
movsb
test
or
daa
pop
dec
ja
lret
push
and
andl
fucomp
or
pop
fbld
jno
mov
sbb
and
push
pop
pop
mov
or
fs
and
and
mov
xor
push
loope
cmp
addr16
xor
hlt
xor
mov
adc
or
adc
ffree
cli
xchg
popf
shlb
mov
add
lahf
cmp
pop
mov
adc
dec
cwtl
and
fldl
addb
push
dec
mov
fnsave
push
xor
add
xrelease
jmp
out
and
adc
pop
and
xchg
or
out
pop
push
je
out
cmp
jb
jecxz,pn
lret
incb
adc
lock
adc
mov
std
ret
push
add
mov
enter
stc
ljmp
jp
fldl
lock
popf
xchg
add
xchg
xor
push
jecxz
addb
leave
subb
pop
jmp
jecxz
addb
add
pop
push
je
xor
cld
cmpsl
stc
jmp
sub
ret
xor
sarb
into
or
adc
jge
dec
sbb
xchg
xchg
push
mov
sub
or
lock
or
and
in
lock
pop
cmp
adc
xor
push
ljmp
inc
add
inc
jno
leave
hlt
xchg
sti
mov
sahf
rcrl
jo
sub
stos
repnz
fistps
cmc
jecxz
xchg
testb
cld
movsb
pop
je
mov
pop
repz
jmp
inc
fidivrs
mov
jo
pushf
adc
mov
hlt
push
inc
cli
sbb
ret
ret
out
je
adc
xchg
and
cmp
add
arpl
xor
lcall
cwtl
mov
lcall
cltd
mov
lcall
lcall
mov
jno
aaa
pop
or
addr16
loop
and
inc
fistpll
xor
xor
loope
and
and
repz
test
jg
push
mov
cmp
mov
or
cmp
data16
scas
push
dec
les
mov
faddp
cmpsl
xchg
push
sub
pop
jae
xor
incb
fidivs
jge
jne
cmpsb
loop
daa
and
sub
mov
imul
daa
add
xor
jae
mov
push
push
stos
cmpl
add
jb
cmp
jle
negl
jecxz
mov
hlt
cwtl
mov
loope
xchg
add
aam
lret
ds
dec
sbbl
cld
shld
jb
xor
jbe
sahf
mov
cmpsl
bound
mov
leave
mov
jg
mov
cld
jo
sahf
add
push
fimuls
sub
xor
lods
xor
dec
nop
push
fisubrl
xchg
mov
push
sub
cli
pop
adc
mov
mov
mov
lods
xchg
icebp
add
adc
jle
dec
jb
iret
test
mov
and
cmpsl
lds
bound
je
xchg
push
stos
sbb
lods
arpl
es
addr16
out
dec
mov
test
mov
repz
and
movsl
mov
lock
and
iret
jno
sbb
cmpsl
jle
push
mov
orb
dec
mov
xor
xor
sbb
mov
lcall
mov
xchg
xorb
mov
fidivl
insl
jg
mov
adc
aam
popf
sbb
pop
xchg
xor
push
mov
daa
adc
jge
pop
xabort
loopne
sub
cmc
ss
add
jmp
xorb
mov
pop
rcll
lret
fdivl
cmp
addr16
pop
lock
daa
jo
mov
xrelease
xorl
lods
sbb
mov
dec
sahf
cs
and
cmp
cld
in
out
adc
popf
es
push
push
dec
cwtl
push
lock
push
xchg
jno
jno
cmpl
mov
outsb
test
mov
shll
jo
adc
push
pop
jmp
dec
jb
mov
xchg
adc
adc
add
sbb
ds
repnz
jl
mov
mov
repz
mov
inc
push
dec
cmp
jb
pop
and
stos
adc
mov
in
lret
cmp
sbb
xor
lock
in
scas
data16
imul
out
ret
sub
xor
lock
les
add
fistpl
xchg
mov
sub
imul
imul
data16
jns
mov
dec
scas
jne
mov
or
aaa
cmp
sbb
cmc
into
jbe
sbb
mov
xchg
mov
int
loopne
repz
out
or
test
dec
movsl
jg
sti
popa
or
push
ret
repz
xor
or
adc
fnclex
icebp
filds
dec
ret
sbb
or
out
mov
push
cmc
adc
jecxz
jbe
stos
adc
fistl
mov
xorb
pop
cmp
hlt
hlt
push
push
test
fwait
mov
outsl
hlt
pushf
lahf
loop
aad
test
or
pop
push
mov
lock
add
add
and
lret
lret
je
mov
lods
and
push
lds
push
mov
std
adc
push
sbb
xor
bswap
push
jge
test
pop
lret
stos
jp
adc
in
test
adc
jo
das
stos
or
add
jg
xorb
sbb
mov
fisubrs
add
xor
in
addl
rcrb
lahf
dec
je
mov
lahf
cmp
push
sub
push
pop
inc
inc
jp
xchg
adc
js
roll
ljmp
fld
xor
push
sbb
leave
mov
cld
cs
jmp
mov
jae,pn
shlb
neg
imull
pop
mov
iret
cmp
or
push
push
std
jecxz
add
and
push
add
inc
mov
sbb
jp
rcl
cltd
icebp
sbbb
xlat
mov
fwait
jno
stos
icebp
inc
pusha
insl
xchg
xor
lock
es
adc
jge
add
popa
lcall
sub
or
xor
add
or
pop
adcb
or
shl
dec
jae
imul
xchg
std
and
in
cld
jbe
cltd
pop
xchg
or
jp
mov
cltd
fildl
fstps
sub
mov
mov
lock
xchg
jno
cli
sbb
xchg
or
lahf
popa
enter
mov
clc
or
mov
fistps
add
das
and
sub
xor
push
add
mov
lock
shlb
ss
jo
mov
and
mov
fcom
into
lcall
adc
pushf
cmp
ja
mov
xlat
mov
push
jno
xchg
add
je
dec
jns
fs
jno
pop
xchg
pop
test
mov
cwtl
pop
sbbl
ja
xor
hlt
pusha
xchg
mov
sahf
clc
mov
and
mov
or
or
xchg
push
adc
xchg
clc
cmp
fs
imul
xchg
addr16
jbe
test
hlt
std
fisubrl
in
mov
jecxz
xor
cltd
mov
fdivl
push
inc
in
push
xor
sahf
shr
jnp
mov
insl
rcl
sub
dec
or
fadd
add
jae
cwtl
out
hlt
fistl
movsb
cwtl
pop
jp
fldcw
rcl
rclb
pusha
dec
adcb
mov
xchg
jmp
pop
mov
cmp
cld
cli
inc
sbb
cmp
popl
push
pop
sub
out
lahf
and
and
mov
daa
sbb
cmpsb
lods
in
call
fwait
pusha
sub
sub
mov
cmp
jo
sub
nop
adc
adc
popa
push
mov
test
sub
cmp
hlt
cmp
adc
adc
adc
icebp
in
jno
mov
and
jb
xchg
fwait
les
adcb
xchg
fwait
pushf
jp
jae
aaa
jnp
hlt
cmp
sti
iret
enter
xchg
or
push
fnstsw
jl
lock
test
xor
mov
xor
xchg
cmp
cltd
xorb
mov
cld
mov
nop
sbb
in
mov
outsl
mov
pop
jno
sub
pop
mov
xor
out
pop
xchg
mov
std
dec
xor
movsl
lret
je
pushf
sbb
dec
inc
jno
repnz
sahf
not
lea
jne
sbb
lock
lds
mov
xchg
in
stc
aas
into
mov
cs
xor
or
test
xchg
ljmp
inc
cmp
jmp
fdivp
xchg
repz
repz
cmp
outsl
pop
shll
iret
rcr
jo
cmpsl
inc
push
mov
or
int3
cmp
inc
arpl
vmovlpd
inc
push
mov
xor
cmp
lret
jns
add
add
ja
out
lods
dec
lds
xorb
push
pop
push
into
mov
in
dec
cs
js
out
ss
push
aad
push
mov
or
fldt
inc
test
fistl
push
adc
add
cs
cwtl
inc
dec
ljmp
fidivl
out
push
and
mov
ja
scas
jb
or
call
nopl
adc
ret
imul
push
nop
mov
sub
ljmp
mov
jp
shll
movl
and
or
pusha
xchg
sub
push
mov
sub
int
push
cltd
add
aam
cvtps2pd
cmp
pop
ja
ret
pop
icebp
mov
roll
cmp
push
cmc
movb
cltd
roll
les
add
aaa
push
adc
jb
jmp
or
and
sbb
icebp
repz
push
add
jns
loopne
push
xchg
subb
mov
cmc
push
loope
add
mov
rclb
add
mov
in
push
rorl
hlt
or
shrl
fcom
mov
ss
cmp
push
inc
add
test
cwtl
mov
out
nop
push
call
sub
adc
adcb
jno
test
dec
jnp
cmp
outsb
clc
test
arpl
add
mov
sub
aam
xchg
enter
adc
push
push
imull
and
iret
repz
mov
iret
pop
sbb
cmp
fmulp
cmpsb
xchg
and
cmp
repnz
jecxz
cwtl
aad
dec
das
mov
mov
outsl
fldt
xor
scas
lds
mov
je
icebp
inc
stos
mov
xchg
and
jle
adc
add
and
loope
mov
xchg
mov
add
sub
adc
andb
pushf
push
mov
adc
cmp
adc
imul
gs
mov
stc
sub
or
add
mov
cmp
or
test
xchg
or
fimull
pop
add
cwtl
cltd
ja
icebp
jle
fstps
or
mov
std
lahf
push
xchg
add
js
call
add
pop
pop
icebp
push
or
add
lret
sahf
xor
movsb
mov
popa
outsl
cmpsb
mov
xlat
add
adc
pop
jae
out
adc
shrl
xor
add
sbb
or
mov
mov
lods
or
mov
into
mov
das
add
adc
and
lret
sbb
sbb
push
hlt
stos
cmp
fsubp
cmpl
or
in
in
data16
movsb
push
test
inc
int3
jp
cmp
cmp
scas
jno
inc
icebp
mov
mov
das
dec
adc
icebp
aam
push
out
pop
or
jbe
dec
xor
inc
mov
stos
and
or
adc
mov
sub
fs
jmp
test
push
mov
xchg
or
push
pop
jg
jbe
test
repz
and
push
mov
andb
push
adc
mov
add
push
inc
xchg
sbb
cld
or
mov
and
inc
inc
cmp
test
xor
sarb
dec
adcb
sbb
sbb
movsb
ds
mov
xor
bound
xor
sbbb
add
repz
hlt
pop
adcl
and
js
xor
icebp
lods
and
mov
ds
add
add
dec
rcrb
jl
hlt
push
addb
add
lock
lock
pop
jg
cmpsb
pop
mov
js
xor
adc
jno
cmpb
xor
adc
jno
add
test
ss
adc
push
orb
xor
adc
xchg
test
mov
cld
push
sbbb
jl
icebp
inc
jl
xchg
loopne
cmp
push
adc
or
jl
jnp
mov
mov
adc
lock
mov
js
ss
jb
adc
icebp
mov
adc
or
or
mov
cmp
mov
cmpsb
or
js
jge
cmpb
adc
add
repnz
mov
ds
hlt
adc
cmp
rolb
xchg
and
pop
leave
ja
icebp
or
ret
scas
dec
push
idivl
xorb
hlt
lock
mov
inc
jne
lock
ret
js
xor
mov
jbe
cmc
icebp
or
sub
jae
mov
inc
bt
jl
hlt
cld
cmc
btl
jns
jne
or
pusha
dec
lock
or
xor
adc
cmp
repz
mov
inc
pop
divb
xchg
or
mov
mov
js
jp
push
repnz
sub
xor
adc
push
adc
icebp
or
xor
mov
icebp
adc
icebp
and
js
adcb
mov
je
data16
hlt
mov
xor
jmp
add
jg
jmp
xor
fidivrs
lock
jns
xorb
push
adc
jbe
jno
stc
pop
and
jnp
pushf
lds
xor
rolb
jno
add
repz
vmread
loop
in
sub
test
clc
nop
xchg
mov
adc
lret
xor
mov
adc
loopne
and
sahf
pop
orb
addb
xchg
push
xlat
cli
and
fistps
adc
pop
mov
adc
jl
stc
jp
lock
cmpsl
lods
adc
clc
je
popa
inc
cmp
cmp
adc
push
add
push
mov
icebp
insl
arpl
mov
adc
test
jne
push
cwtl
mov
icebp
hlt
sbbb
pop
mov
rcll
test
clc
inc
inc
and
cmpb
sbb
movb
popa
icebp
clc
inc
sbb
dec
das
addr16
dec
dec
sub
addr16
cmp
scas
xor
ss
jmp
xor
js
jp
pop
or
cwtl
dec
cs
mov
xor
add
xor
js
and
lea
inc
lret
lods
inc
push
sbb
and
and
gs
ja
xchg
jle
dec
add
ret
fmuls
addb
adc
xchg
sar
cmp
icebp
lock
sti
inc
in
dec
cltd
jecxz
jb
das
jns
mov
pop
add
push
or
xor
cmp
ret
or
xchg
pop
ja
mov
adc
sub
jl
or
dec
jmp
aas
add
mov
aam
add
add
inc
dec
adc
mov
dec
clc
dec
pop
adc
xchg
int
pop
xor
and
or
ret
out
bound
sbb
inc
subl
xchg
icebp
mov
addl
and
lock
jb
add
inc
inc
aam
shll
mov
mov
jg
sub
cld
test
lret
sbb
mov
icebp
jbe
add
add
push
and
outsl
inc
jno
add
push
ja
in
mov
movsl
popf
fstpt
cmpsl
and
add
add
inc
pop
fadds
cmpl
pop
push
add
hlt
inc
xchg
adc
add
mov
jg
push
push
xor
inc
sbb
mov
mov
mov
pusha
add
xor
int
jmp
jg
out
fisttps
jnp
bound
enter
aaa
add
hlt
pop
push
js
xor
fstpt
adc
xchg
dec
adc
lock
sbbb
push
sub
jns
adc
pop
lret
add
or
cwtl
sar
push
pop
adc
in
loop
jno
and
jmp
or
jecxz
pusha
inc
fisttpll
or
cwtl
mov
and
clc
add
cld
les
pop
sbb
xor
inc
pop
xor
xor
fidivrs
xor
cmp
popa
mov
getsec
add
sub
xchg
pop
cli
pop
and
adc
sti
sbb
adc
sahf
add
and
push
jb
cmp
or
and
ret
adc
xchg
add
pop
xchg
mov
divb
push
icebp
cmp
in
xor
js
or
jb
clc
cmp
sahf
mov
stc
mov
and
movsb
adc
push
xor
push
paddusb
dec
pop
mov
adc
adc
test
jns
xor
pop
cwtl
cmp
notb
sbb
push
adc
inc
or
jne
mov
ret
cmp
ljmp
rolb
mov
jmp
pop
adc
js
in
js
mov
ja
sub
sub
sbb
imul
ljmp
push
lcall
ljmp
xor
repz
jg
insb
add
mov
mov
mov
in
add
mov
xchg
mull
sub
movntq
outsb
cwtl
rorl
push
adc
out
add
dec
pop
push
mov
jp
into
pop
xchg
mov
push
cltd
lods
adc
mov
outsb
xchg
mov
frstor
es
clc
arpl
pop
bound
push
add
xor
stos
shlb
or
js
ss
add
icebp
iret
inc
add
in
rorl
shlb
jne
ss
popf
repz
fisubrs
mov
xchg
mov
aam
inc
test
mov
cwtl
sbbl
addl
dec
push
sbb
leave
cwtl
mov
jp
lcall
mov
out
mov
icebp
xchg
xchg
out
or
mov
cmpsb
cmpsl
push
leave
mov
xor
push
pause
jne
insl
cmpsl
gs
out
or
test
out
pop
popl
or
inc
call
jae
addr16
test
mov
out
gs
or
loope
aam
mov
loop
ret
and
enter
repz
jnp
jp
flds
aad
pop
xorb
jl
dec
xor
or
outsl
icebp
movsb
lret
mov
or
pcmpgtd
jno
xchg
imul
push
or
push
cld
cmp
cmc
stc
jbe
xchg
push
adc
mov
cmpb
cmp
jp
push
mov
scas
adc
out
int3
hlt
stc
add
xor
data16
cmp
adc
mov
xor
adc
or
push
shl
add
add
pop
inc
test
out
bound
je
int3
shl
gs
adc
push
movups
imul
jno
jge
lcall
or
mov
cmc
push
mov
mov
dec
mov
and
icebp
add
or
xor
test
stc
negb
adc
test
mov
sti
sbbb
fbstp
adc
lock
cmpb
adc
adc
je
cmpb
adc
and
icebp
xchg
test
mov
arpl
push
dec
adc
jo
insl
mov
into
icebp
push
jnp
clc
pushf
jecxz
add
mov
adc
sahf
and
and
flds
mov
hlt
inc
addr16
or
rolb
fs
mov
lcall
inc
xchg
push
push
adc
stc
and
rclb
ret
sti
out
dec
xchg
jle
sahf
outsb
add
sbb
std
pop
sub
sub
into
pop
hlt
popf
cmp
jge
loope
jl
sbb
push
mov
mov
int
xchg
fsubr
ret
mov
mov
imul
pop
adcl
lret
pop
dec
in
loope
cmp
mov
sub
mov
jnp
scas
inc
cmpsb
fisttps
inc
sarl
fisubrs
in
lock
sbb
flds
mov
repz
or
push
mov
jns
and
or
push
movups
or
das
addr16
out
jg
cmp
imul
jne
adc
mov
adc
add
orb
adc
push
push
out
nop
aaa
jns
lock
and
cmp
mov
cmp
cmp
je
icebp
inc
cmp
bound
or
push
adc
pop
or
xchg
insl
mov
mov
insl
jb
ljmp
mov
or
clc
pop
push
xor
cmpsb
mov
fists
jns
movq
pop
test
jno
dec
pop
push
sti
lahf
scas
std
adc
mov
xchg
fs
insl
imul
xor
lods
stos
data16
push
mov
jne
lea
cwtl
adc
loop
add
add
test
add
fwait
mov
pusha
xchg
mov
push
mov
cld
add
fcomip
dec
xor
and
inc
sub
int3
iret
shlb
adc
or
adc
jno
notl
cmpsb
xor
pop
xchg
shll
adc
cmp
jecxz
xorb
iret
mov
push
xor
cwtl
icebp
shll
lret
pop
repz
imul
xchg
jp
xchg
jo
adc
dec
scas
jl
shll
or
mov
jns
jp
xchg
jl
jge
jp
mov
inc
inc
movsl
insl
sub
pop
xor
xchg
xchg
rclb
push
shl
pminub
mov
mov
icebp
mov
inc
push
xor
xchg
xor
jno
mov
add
mov
mov
dec
cmp
cmp
adc
pop
sbb
xchg
les
push
addr16
sbb
or
push
xor
iret
mov
lods
mov
cwtl
mov
sub
out
lock
push
dec
push
sub
jns
aad
push
jecxz
cmp
icebp
fdivr
jg
loop
jae
subb
or
push
jle
loop
ljmp
ljmp
movsb
push
or
and
ljmp
sti
stc
mov
out
add
or
fsubp
cs
inc
jmp
mov
pusha
mov
aad
sub
mov
or
rcl
add
hlt
inc
ja
inc
clc
adcl
addl
in
mov
out
aam
and
mov
and
jo
mov
lds
pop
add
adc
add
cmp
and
adc
stc
mov
loopne
mov
xchg
fsubrl
sbb
xorb
or
push
or
cmc
js
push
mov
push
fs
enter
icebp
lea
sub
ret
cmpsb
pushf
jbe
push
test
dec
outsb
es
dec
mov
cmpsb
out
mov
movhps
negl
mov
jle
out
mov
ret
dec
push
jl
out
pop
sahf
jo
or
lods
xchg
adcb
rcll
mov
les
push
insl
sub
jne
fwait
mov
mov
repz
xchg
sahf
stc
xchg
sub
push
mov
xor
and
out
or
jg
mov
jbe
decb
shl
or
cmp
fists
push
test
lcall
inc
mov
leave
rcll
xchg
mov
es
leave
adc
aas
mov
pop
loopne
dec
ror
mov
mov
xchg
fs
aaa
push
hlt
dec
insb
cmp
jmp
xor
sbb
xchg
adc
pop
cmp
xor
xchg
icebp
scas
dec
loop
fwait
add
push
dec
jecxz
movsbl
pop
jmp
cmp
pop
and
inc
scas
shl
cmp
and
sti
adcb
adc
aad
sahf
repnz
pop
add
sbb
test
cltd
scas
jl
inc
lcall
into
sbbl
mov
mov
pusha
daa
adc
stc
cmp
and
cmp
pop
icebp
cmp
pop
inc
imul
je
cmp
into
cmp
xchg
mov
sbb
leave
lock
bound
jbe
mov
pop
mov
andb
sbb
mov
pop
inc
lock
dec
xlat
inc
push
dec
push
aad
icebp
cmpsl
aas
loopne
jae
adc
xor
mov
jb
sarb
sub
rorb
mov
test
inc
fisubl
fdivr
pusha
jge
dec
jb
xor
xor
clc
ret
pinsrw
xchg
xchg
cmc
idivb
xor
or
inc
sti
jo
xlat
andb
into
pop
cld
lock
push
out
dec
cwtl
sub
prefetch
or
lock
inc
push
jbe
hlt
dec
lahf
aaa
mov
cmp
scas
sarb
outsl
dec
lods
lds
test
push
aad
aam
leave
push
mov
push
sbb
sbb
aad
jae
cmp
test
sub
add
fstpt
dec
sbb
add
addr16
xchg
adc
divl
test
adc
dec
cwtl
mov
or
xor
xor
sarl
sub
inc
push
lock
mov
jmp
inc
cwtl
dec
adc
or
sbb
cmp
mov
sbb
sub
addr16
mov
adc
clc
ret
mov
jns
xor
mov
pusha
lock
xchg
jg
cmp
xchg
mov
sbb
cmp
in
add
pop
and
add
fnsave
lods
jge
jbe
xchg
mov
es
aaa
loop
inc
jle
dec
fsubp
pop
iret
inc
xor
repz
push
cmc
or
int3
lret
inc
add
rorl
leave
aad
iret
sub
and
push
ret
and
mov
push
push
inc
loope
dec
sub
and
mov
adc
xchg
add
jp
sub
xchg
jl
xor
mov
cmpb
add
and
jg
xor
data16
lret
mov
mov
adc
and
stos
and
dec
push
repz
xchg
lock
hlt
jle
rcr
xor
jb
jo
clc
jg
sub
adc
add
push
es
lock
push
pop
mov
lahf
xchg
cmp
mov
mov
xor
cwtl
inc
div
ss
cmp
insb
cs
xor
outsb
dec
ljmp
js
fcomip
fstl
push
out
cwtl
lods
stos
dec
in
mov
es
movl
xor
sub
into
call
dec
adc
les
lret
cmpsl
dec
dec
cmpsl
sub
jnp
dec
push
or
imul
mov
lods
mov
js
imul
xor
cmpsl
jmp
mov
pop
out
lret
cld
les
addl
sub
jne
hlt
push
fsubrl
cmpsb
mov
mov
test
mov
adc
dec
jge
leave
outsb
test
and
ljmp
lret
add
xchg
lret
adc
mov
int
jns
mov
adc
cmpxchg
push
mov
and
xchg
inc
pushf
pop
cmp
mov
aam
imul
mov
adc
dec
cwtl
and
lea
push
add
mov
orb
push
sahf
bnd
pusha
pop
sub
or
pop
insb
dec
mov
xchg
repz
sbb
cld
add
mov
push
leave
pop
mov
pop
push
repnz
loope
fists
inc
jnp
jecxz
fs
jmp
jns
pop
dec
dec
or
push
mov
fists
ret
lock
lods
xor
sbb
icebp
sbb
icebp
mov
outsb
mov
ja
mov
mov
or
dec
out
inc
xchg
adc
and
mov
lahf
jg
loop
sub
int
add
cli
and
popa
out
bnd
jne
pop
gs
cmp
sbb
sti
xor
xchg
mov
cmp
adc
pop
adc
clc
adc
xor
adc
mov
aam
pop
jnp
stc
or
out
mov
push
adc
adc
rcrl
xor
test
imul
or
push
mov
lahf
adc
xor
lods
xor
in
negb
push
fidivl
icebp
pop
cmp
mov
int
push
sbb
dec
or
mov
outsl
sbb
xchg
adc
mov
out
adc
pop
cs
adc
push
js
pusha
cmp
pop
mov
jnp
mov
fwait
jp
jno
outsl
xor
xor
shlb
cmp
mov
jl
cmp
fistpll
jg
lods
arpl
mov
sbb
inc
in
sub
push
mov
aam
inc
cli
mov
loopne
and
mov
aas
repnz
enter
pop
icebp
xor
push
lea
dec
pop
mov
pop
sbb
lcall
sub
cmpb
insb
fdivs
cmp
test
push
cs
mov
mov
sahf
and
je
xor
sbb
ret
jp
call
ss
test
cmp
xor
xchg
fwait
cwtl
jge
lods
icebp
xor
leave
fsubrl
adc
clc
adc
xchg
ds
aas
jne
xor
lods
and
jb
xchg
mov
call
or
xchg
mov
jg
fadd
mov
dec
jns
in
gs
adc
xorl
pop
lock
cmp
push
sarb
mov
pop
sbb
jne
pop
out
lock
bswap
je
add
mov
clc
push
pop
in
ljmp
loope
cmp
mov
jg
int3
cmp
and
push
and
cmpb
hlt
pop
and
pop
lods
adcb
popf
mov
inc
lock
sbb
add
cltd
lods
and
ljmp
addb
mov
orb
mov
xorl
data16
loop
mov
pop
gs
mov
lcall
jp
loope
adc
jp
jecxz
adc
adc
push
mov
dec
mov
out
out
cmp
adc
mov
adc
addb
in
js
stc
insb
add
sbb
bound
lret
xchg
add
cmpsb
cmp
xchg
js
or
iret
test
stc
js
mov
mov
icebp
xor
pop
push
je
repz
fs
iret
xorl
repz
xor
mov
add
sub
orb
xor
scas
inc
inc
push
dec
lahf
push
cmc
or
pusha
xchg
mov
xor
rcrb
pop
push
sub
pushl
fstl
lock
xchg
sbb
xor
xchg
std
neg
add
cmpsl
ret
roll
movsb
jnp
aaa
xchg
xchg
jae
cmp
push
dec
xchg
sbb
mov
adc
adc
fcmovbe
dec
xchg
sbb
test
sti
mov
fsubrl
inc
lock
mov
or
fiaddl
out
cmpsl
psubusb
xchg
movsl
hlt
pop
cmp
mov
inc
stos
nop
in
jne
mov
incl
xor
push
jae
std
fdivrl
or
std
loopne
pop
sbb
cmpsl
cld
sbb
pushf
jne
pop
add
pop
orb
jg
cwtl
insb
xchg
lock
mov
sahf
mov
xchg
push
cltd
sahf
jns
orl
adcb
lods
xchg
jo
add
mov
add
adc
into
adc
dec
mov
add
out
pop
outsl
sub
ror
rcll
cmp
push
push
jns
rcll
add
push
push
xchg
popf
adc
sti
or
out
pop
mov
dec
movsl
jo
xor
cmp
insb
mov
loopne
into
sbb
add
inc
jne
mov
add
cli
repnz
daa
mov
push
mov
push
xor
xor
dec
xor
insl
sbb
lods
int3
mov
jge
stc
and
sbb
aas
mov
sbb
lret
mov
or
fcmove
jb
sub
sbbb
das
pop
mov
inc
aad
jb
jge
xchg
jb
add
lret
aaa
mov
adc
lret
lock
jge
jg
enter
jge
pop
sub
jmp
out
test
jb
popa
enter
jge
pop
sub
sbb
out
out
negl
jb
aam
fs
jge
pop
and
scas
enter
jns
pop
mov
pop
jb
jns
aas
push
and
mov
adc
push
cmp
sbb
push
add
js
xor
adc
lock
cmpb
adc
lock
add
add
js
xor
adc
jae
xor
pop
cmp
adc
icebp
jne
lods
js
xor
adc
sub
icebp
ja
cmpsl
js
xor
adc
and
mov
mov
mov
lods
mov
sub
mov
in
mov
mov
in
fwait
in
push
push
repnz
rcll
add
pusha
mov
adc
das
jbe
cs
xchg
sub
js
adc
fistl
adc
fnsave
push
cmp
dec
icebp
cmc
divl
add
pop
inc
push
adc
rcll
jb
hlt
adc
std
push
outsb
mov
mov
mov
scas
icebp
jae
mov
mov
sub
rcrb
mov
jae
fdivrs
andl
mov
cmp
std
negl
sbb
fs
adc
mov
std
enter
icebp
push
jle
clc
sbb
repnz
hlt
xchg
addl
dec
jno
xor
je
leave
add
inc
push
jo
push
icebp
adc
adc
js
repz
push
xor
jbe
mov
js
pusha
test
push
jns
not
push
jp
adc
lret
jnp
sbb
pop
insb
jl
adc
cmp
cld
xor
dec
icebp
mov
sbb
push
jne
add
or
je
mov
or
cmovbe
adc
mov
pushf
call
mov
pop
stos
inc
out
repz
loope
decb
mov
in
ja
js
cmp
pop
mov
pop
mov
adc
hlt
out
adc
and
add
xchg
xor
sbb
cli
stos
out
enter
dec
xchg
mov
loopne
push
xor
and
xchg
push
push
scas
negb
mov
inc
pusha
jne
xchg
pop
outsb
fsub
test
in
mov
int
cmc
xor
in
jo
sub
ret
lock
xchg
shlb
jnp
flds
mov
cmc
pop
data16
insb
mov
dec
bound
stc
scas
push
mov
mov
pop
push
test
sbb
popf
push
mov
pusha
lea
jmp
pusha
mov
xchg
sub
nop
mov
push
sahf
fxch
pop
adc
xor
movsb
arpl
mov
inc
mov
mov
nop
pop
mov
adc
mov
inc
stc
dec
push
sbb
fs
or
pop
jmp
leave
je
loopne
dec
xchg
jb
xchg
int3
mov
cmpsl
ja
push
mov
and
decb
mov
jmp
mov
sahf
xor
sbb
jb
cwtl
in
mov
adc
pop
cmpsb
stos
mov
xchg
fldcw
pop
mov
and
lea
inc
cmp
filds
shll
dec
popf
cwtl
bound
cmp
pop
out
jmp
nop
cmpsl
pusha
mov
sti
xchg
xor
mov
icebp
dec
and
mov
push
lods
sub
or
cli
in
insb
mov
lock
std
hlt
fdivs
dec
lret
sbb
movsl
out
and
sub
cwtl
aam
fstl
cltd
mov
fmuls
jg
es
and
lret
ljmp
in
cld
call
lock
sub
sbb
mov
push
adc
fiaddl
push
scas
out
and
int3
or
adc
jge
inc
inc
das
inc
or
jo
adc
xor
sub
cmp
mov
sbb
pop
cmp
stos
mov
mov
push
sarl
jne
lret
xor
and
sub
sub
movsb
cmp
xchg
jnp
push
and
push
ljmp
cli
das
pop
add
mov
lcall
dec
mov
in
mov
in
aas
xchg
lahf
inc
push
stc
or
jns
imul
jle
mov
sbb
jmp
xchg
push
jle
arpl
push
and
inc
and
push
pushf
pushl
ret
push
jmp
pusha
mov
pushf
lea
je
call
ss
mov
lock
das
icebp
add
rol
xchg
andb
add
xchg
icebp
or
adc
aas
ljmp
pop
cwtl
xchg
push
inc
jecxz
mov
aam
ror
fadds
dec
bound
outsl
add
mov
fs
mov
gs
xchg
mov
mov
jno
dec
cli
popf
ja
xchg
lea
scas
mov
sub
into
mov
add
negb
test
jb
mov
jle
cmp
mov
pop
ja
and
push
mov
cwtl
loop
sub
push
lods
mov
stos
aam
mov
push
stos
sti
stos
sarl
divl
xchg
outsb
xchg
into
push
cmpsl
iret
lret
xchg
mov
mov
dec
hlt
cmpsb
adc
fcoml
mov
pop
xor
pshufw
lret
je
sbb
push
sub
cmpl
sti
inc
jecxz
or
push
push
mov
pop
mov
mov
mov
sbb
jmp
loope
mov
sbb
xor
push
movb
test
mov
xchg
mov
jle
aad
add
stos
and
je
out
jae
out
mov
adcb
xor
cmp
mov
dec
jle
pop
add
inc
adc
push
sub
repnz
negb
mov
sbb
mov
jp
shl
cld
jl
mov
sbb
sbb
adc
lock
jge
or
fcoml
mov
xor
fnstcw
mov
mov
pop
or
idivl
leave
pop
pop
add
jecxz
jl
cmp
repz
idivl
rorl
adc
add
icebp
aam
adc
and
pop
adc
sti
adc
sbb
fnstenv
lock
push
mov
or
xchg
lcall
sbb
mov
push
loopne
out
adc
aam
cmc
rclb
cmp
nop
xor
pop
and
iret
add
lea
or
sarb
xor
fucomip
sbb
add
jno
sarb
pushf
pop
repz
sarb
xor
xor
call
sti
xchg
lock
jo
mov
or
mov
xchg
jb
mov
shll
xchg
nop
ja
jne
repnz
shll
pop
rorl
xor
shr
addr16
jnp
push
and
aas
divl
mov
push
jae
nop
lock
xchg
rcrl
mov
mov
sbb
mov
xor
push
mov
xchg
clc
rcrb
push
mov
fnstcw
mov
mov
int3
adc
roll
jno
lods
cmp
push
cmc
hlt
nop
out
fs
roll
cmp
adc
mov
mov
icebp
mov
push
icebp
lock
mov
enter
sub
xor
push
sbb
add
lock
shl
rcll
sub
jno
scas
jmp
nop
add
jns
pusha
cwtl
or
enter
or
sub
das
stc
add
out
or
jae
sub
pop
mov
jne
xchg
cmp
fisttpl
mov
pushf
ss
adc
dec
insl
fwait
xchg
cmp
push
daa
and
and
mov
dec
mov
adc
xor
mov
jle
jne
jmp
xchg
out
push
xchg
jo,pt
pop
jno
rcll
adcb
test
jne
sahf
mov
xchg
push
call
or
add
iret
jno
add
mov
sub
jno
xchg
jno
insl
mov
add
xor
lock
or
sar
pop
mov
push
adc
and
hlt
push
xlat
mov
dec
je
lret
xor
icebp
xor
repz
cmp
pop
ds
add
xor
jo
pop
push
je
loopne
push
out
lock
sub
mov
xor
xchg
lea
adc
cmp
mov
inc
fistpl
int3
pop
pop
adc
xor
sub
xchg
cld
jbe
fsts
inc
jbe
out
pop
push
adc
or
movsb
sti
lret
jno
movsl
jb
adc
mov
and
push
rep
sar
adc
rorl
xchg
idiv
jl
jno
adc
cli
push
stc
fstl
jle
pop
ds
in
imul
adc
mov
mov
andb
aaa
mov
push
adc
push
mov
js
cli
divb
cmpl
mov
cmp
adc
adc
jnp
mov
jns
jae
sub
cmp
repnz
mov
std
sar
or
or
dec
aaa
sbb
inc
jns
es
hlt
shll
add
or
adc
testb
pop
stc
push
jo
jns
iret
les
int3
cltd
testb
mov
rcrb
cld
pushf
mov
leave
cmp
jns
jo
cmpl
ja
xor
push
dec
mov
add
rcll
add
ja
add
sbb
mov
je
inc
jb
adc
cld
movswl
adc
push
pop
and
lcall
subb
rorb
add
xor
or
pop
dec
mov
sar
adc
adc
pop
pop
jle
std
add
cwtl
pop
pop
jp
stc
fs
sub
jns
mov
or
bnd
lock
adc
mov
stos
icebp
xor
sysenter
icebp
mulb
js
ret
lock
push
cld
jno
fcoml
jle
sbb
mov
divb
loope
xor
clc
stc
je
jns
ja
cmp
pop
sbb
cmp
int
ja
xor
lock
pop
enter
mov
loopne
test
nop
dec
testb
xchg
sbb
call
push
xlat
xchg
outsb
push
push
add
xchg
clc
dec
add
shlb
sti
dec
add
mov
fnstcw
sbb
xchg
pusha
fimuls
inc
mov
loop
xor
adc
mov
jmp
out
orb
inc
inc
mov
or
repz
sub
clc
mov
jle
ljmp
mov
dec
loop
push
push
hlt
fwait
mov
sti
cmp
mov
inc
incl
cmp
fstl
cwtl
xor
aaa
fdivr
adc
idivb
xchg
repnz
js
repz
loop
nop
nop
int3
sbb
and
adc
cmp
add
addps
push
fiadds
mov
outsb
xchg
repz
jo
jmp
pop
mov
repnz
loope
inc
xchg
clc
mov
call
dec
jmp
xor
test
xorl
xchg
pop
js
rorb
add
jmp
fisttps
adc
cwtl
hlt
rcl
es
pop
aad
aad
repz
divb
loope
in
sbb
adc
repnz
dec
incl
and
xchg
xchg
enter
mov
cs
jae
mov
test
or
push
push
sbb
call
jl
sub
iret
dec
imulb
xor
xor
rcll
js
dec
sahf
mov
jo
adc
pop
inc
push
add
push
fcomps
mov
jb
repz
popf
sar
sub
loopne
pop
xor
jmp
mov
incl
in
adc
sarl
cmc
push
enter
push
xchg
push
decl
aam
adc
lock
cwtl
pop
inc
xchg
call
push
rolb
jg
or
pop
repnz
push
dec
aas
movsl
mov
movsb
sub
ja
lcall
mov
push
mov
jns
pop
pop
dec
xchg
mov
xchg
les
leave
mov
or
hlt
movsl
jno
sub
xor
add
test
shlb
xchg
repnz
mov
call
pop
test
arpl
cmp
fdiv
add
rcrb
add
jno
mov
cs
mov
lods
jmp
push
cli
push
pop
or
inc
lcall
ja
inc
jmp
mov
data16
pushf
add
and
adcb
pop
cs
add
or
pop
xchg
pop
mov
mov
testl
in
xchg
rclb
rcl
loop
push
sti
cmp
fnstenv
push
mov
mov
lock
int
fcoms
incl
repz
dec
lret
pop
in
and
scas
and
out
shlb
ja
lock
or
and
sub
test
adc
jb
push
loopne
das
xor
jg
ret
jb
fsts
xor
orl
cmp
out
pop
mov
aam
mov
repnz
dec
and
testb
in
shll
jbe
nop
xorb
cld
xchg
jbe
pusha
dec
mov
adc
ret
mov
pop
fsts
jl
xchg
mov
testl
push
add
sbb
xchg
lock
sub
xchg
push
mov
push
adcl
lods
xor
sub
in
adc
outsb
mov
mov
inc
push
mov
push
shll
push
adcl
push
aas
call
xchg
and
pushl
xor
or
ljmp
stc
push
add
cmp
das
sub
xlat
roll
cmp
and
clc
dec
sub
push
pop
ficoml
push
add
call
dec
push
xchg
cmpsl
imul
lods
mov
hlt
adc
fs
stc
ss
mov
mov
mov
fiaddl
mov
call
pop
and
nop
adc
shlb
add
outsb
stos
test
xchg
dec
xchg
or
jb
mov
or
sub
add
pop
ljmp
aam
lcall
inc
mov
clc
lcall
cmp
stos
mov
sahf
call
mov
xchg
shll
pcmpeqd
sti
negl
in
mov
dec
or
repnz
adc
out
hlt
xchg
nop
adc
call
pop
lcall
mov
and
xor
adc
jno
or
mov
mov
fcomip
and
cltd
sarb
and
js
mov
cli
or
add
push
aaa
loopne
xchg
xor
jbe
cli
addr16
ja
cmp
jo
and
mov
inc
nop
test
mov
pop
add
sbb
cmp
adc
call
shlb
outsb
sub
rol
stos
jne
es
cmp
xor
icebp
mov
add
mov
hlt
and
pushl
dec
dec
add
insl
icebp
cmc
mov
add
lock
or
mov
call
fsub
xlat
jno
cs
sbb
xchg
rcrl
pop
rcrl
xchg
dec
push
mov
cmp
mov
adc
rclb
or
clc
hlt
dec
std
decl
or
mov
aad
cld
mov
sub
cmp
je
lods
in
incl
iret
js
xchg
sbb
cli
mov
adc
idiv
mov
incl
sti
fisubl
jle
dec
call
mov
add
mov
jbe
inc
inc
cltd
cmp
adc
push
lcall
arpl
or
sar
rcll
pusha
sbb
mov
dec
and
mov
sbb
cmp
icebp
shll
sbb
jne
dec
leave
push
nop
mov
ficoml
rclb
jl
dec
adc
loopne
xchg
mov
jle
or
fdivs
push
sub
scas
cmp
push
jnp
xor
mov
sahf
sbbb
pop
mov
ja
lret
or
in
incl
jg
pop
repnz
pop
sub
incl
add
ljmp
dec
repz
add
into
add
fs
in
mov
add
and
dec
test
xor
lds
movsl
imul
rolb
negb
sub
cmp
or
loop
and
inc
pushl
jo
ja
popf
imul
pushf
jl
pop
call
les
add
mov
fnstsw
jno
ja
roll
jns
xor
dec
pop
xor
mov
push
test
inc
xor
mov
clc
mov
cmp
or
lret
pop
xchg
xor
mov
jo
bound
dec
mov
jne
sbb
push
fs
inc
pushf
lcall
adc
aam
jns
neg
sub
pushl
add
clc
lcall
xor
dec
cld
or
aas
mov
jmp
xchg
dec
in
out
rclb
push
mov
inc
ljmp
dec
ja
cli
jae
add
pushl
mov
in
call
sarb
shlb
cwtl
pop
mov
or
and
call
xchg
or
clc
jno
jmp
push
jp
push
cld
mov
js
jg
push
add
add
lcall
push
adc
mov
int3
js
push
mov
loopne
or
lock
les
or
adc
jecxz
ljmp
xchg
mov
sti
inc
idivb
adc
xor
pop
clc
pushf
push
jle
or
sbb
frstor
mov
push
or
jns
xchg
cli
mov
lods
out
mov
cld
icebp
pushf
repz
aas
repnz
stos
cmpsl
mov
pusha
mov
or
incl
std
aas
adc
mov
xchg
pop
pop
add
popa
pop
inc
cwtl
repnz
mov
mov
lret
fldl
decl
idivl
rol
adc
cmp
sub
push
xor
and
mov
xchg
push
add
ds
sbb
xor
int
into
fwait
imul
mov
imul
insb
cmp
sbb
push
mov
sti
hlt
xchg
in
jb
dec
sbb
xor
incl
insb
xor
popa
negl
lods
pop
add
cld
in
adc
imul
fildl
js
xor
xor
sahf
sbb
dec
repnz
jbe
pop
xor
sbb
outsb
mov
mov
xor
adc
mov
mov
cmpsl
dec
pushf
call
adc
cmpsb
dec
decl
and
adc
jne
mov
hlt
and
jno
nop
push
ftst
add
add
pushf
mov
dec
insb
adc
jns
push
xor
and
dec
cmp
in
sub
push
movsb
testl
repz
in
repnz
rcrb
or
cmpl
and
mov
adc
mov
or
or
cmp
cli
jmp
dec
pop
cmp
pop
ljmp
out
mov
sub
sub
adc
pop
inc
xchg
into
push
shl
int
pushf
cmpl
pop
insb
jmp
adc
add
std
xor
lea
mov
push
push
jbe
repz
inc
jae
das
push
xor
xchg
xor
jbe
out
jbe
out
leave
push
push
jecxz
div
mov
push
lods
bound
dec
sbb
das
jno
xchg
sub
or
or
or
xchg
in
dec
dec
mov
pop
repnz
push
enter
add
arpl
mov
jge
daa
js
or
cli
jle
loop
sti
xor
adc
test
out
aad
stc
addb
ja
and
std
mov
ljmp
pop
jno
mov
xchg
adc
iret
xorl
mov
scas
mov
and
adc
rcr
ret
ret
icebp
orl
and
lock
lock
test
mov
mov
imul
movsb
imul
inc
pushf
rcll
daa
inc
inc
adc
and
inc
stos
lock
sbb
dec
xor
icebp
pop
jo
adc
mov
and
sbb
aaa
mov
cmp
in
add
stc
hlt
roll
adc
mov
test
les
mov
add
jno
add
bound
std
jle
repz
pop
clc
fisttpll
sbb
xchg
sbb
cmp
xchg
cmp
mov
pushf
adc
pop
sub
repz
loopne
out
jnp
ljmp
dec
jno
mov
aam
mov
push
mov
repz
or
icebp
leave
xchg
xor
push
sbb
into
xchg
inc
xchg
xor
pop
repz
notl
lock
adc
neg
adc
icebp
jne
cmp
std
xlat
imul
mov
jnp
xchg
xchg
push
int3
das
xchg
xchg
add
xchg
dec
mov
insb
dec
int3
cmc
divl
loopne
jb
nop
insb
movd
aas
jbe
jo
test
xorb
add
mov
jne
notl
jge
out
and
imul
inc
xor
adc
and
adc
lret
rolb
sub
add
lcall
loope
cltd
push
jb
daa
mov
loopne
sahf
shlb
movsb
test
out
icebp
sti
lcall
loopne
call
add
movsl
push
into
shrb
xor
xchg
mov
shll
inc
mov
push
sub
jl
xor
or
int3
jno
push
stc
dec
and
shrb
out
popf
sbb
mov
into
jbe
mov
mov
scas
test
or
test
fs
lahf
mov
fs
mov
call
mov
jmp
xchg
into
sbb
and
movsb
dec
mov
out
fmull
mov
or
xlat
mov
or
or
mov
xchg
xor
sub
pop
cs
and
add
mov
or
or
addb
jb
repnz
rorb
push
rorl
push
orb
push
jecxz
xchg
je
push
test
jb
adc
cmp
mov
jae
mov
emms
xor
cmp
adc
jecxz
jne
shll
outsl
add
mov
cli
jg
jl
push
lock
mov
repnz
add
mov
cmc
adc
call
mov
or
xchg
and
lea
and
popw
repnz
xchg
add
jb
shlb
rol
mov
jg
mov
repnz
adc
adc
js
nop
bsf
xchg
pop
xor
push
xor
xlat
adc
mov
pop
les
leave
mov
jmp
idiv
pusha
pop
dec
jo
xlat
jno
hlt
lahf
and
cs
inc
clc
repz
mov
arpl
sbb
repnz
inc
loope
add
add
dec
and
add
jmp
pop
movzwl
xor
push
inc
xorl
mov
std
cltd
xchg
repnz
inc
iret
push
add
lcall
push
adc
seto
push
sarb
jo
rcrb
xor
js
adc
jp
repnz
jg
js
lock
not
lcall
icebp
jb
lods
pop
mov
subl
xchg
sbb
jb
dec
and
mov
sarb
pop
jo
or
nop
mov
xor
pop
lock
hlt
add
pop
push
cmpl
adc
mov
and
cs
hlt
lds
mov
jb
rol
std
ret
adc
clc
adc
push
test
repz
jae
adc
int3
push
inc
fnstcw
lret
dec
xchg
hlt
dec
repnz
adc
and
push
pop
dec
icebp
je
enter
pop
js
push
or
repz
sbb
loopne
and
mov
repnz
pop
xchg
mov
xor
pop
mov
xchg
xor
pop
hlt
mov
xor
pop
xor
pop
jne
shll
mov
xorb
jno
and
jno
mov
xchg
jno
xor
pop
pop
shlb
repnz
xor
pop
adc
xor
sarl
add
cmp
call
xchg
jmp
mov
lcall
xor
adc
ljmp
ret
jne
inc
adc
sbb
mov
inc
dec
mov
mov
jo
jb
mov
mov
dec
cmc
dec
jb
inc
xor
fidivs
mov
pop
mov
pop
fdivl
mov
sub
xor
mov
repnz
dec
push
jns
shlb
fdivrs
jne
popa
jbe
push
sbb
testl
mov
std
pop
xchg
or
repz
mov
push
stc
cltd
shrb
nop
mov
inc
add
popf
pop
or
jo
jl
inc
cmp
jno
mov
sub
loop
nop
or
pop
pop
out
dec
ds
shll
lahf
aam
push
mulb
rclb
cmp
sbb
push
test
mov
jp
loope
or
mov
adc
pop
mov
movsl
icebp
mov
mov
push
jg
xor
sbb
jo
xor
push
xor
aas
xor
xlat
xor
cmp
pop
xor
sahf
xor
inc
aam
repnz
hlt
rcll
mov
stos
and
add
lret
adc
mov
xor
stc
leave
or
sbb
xchg
add
test
js
in
jae
sbb
mov
pop
mov
or
add
test
into
xchg
mov
mov
dec
pusha
mov
mov
iret
xchg
mov
popf
jb
orb
xor
scas
mov
std
or
inc
mov
pusha
jge
lds
xchg
dec
adc
pop
mov
push
xlat
xchg
sub
inc
jb
lret
xchg
add
cmp
adc
adc
lock
lock
clc
sbb
negb
jb
jb
pop
pop
jno
mov
adc
mov
fdivl
xor
and
sbb
int3
stc
mov
in
out
data16
pop
jle
mov
fdiv
sbb
cmp
pop
les
ss
cli
mov
adc
out
outsb
adcb
jnp
je
std
mov
mov
push
ss
cmp
jle
mov
pop
add
imul
sahf
test
aaa
mov
or
rclb
into
adc
jno
mov
push
inc
mov
cmp
jne
adc
or
mov
sub
xchg
lock
adc
or
jbe
nop
jo
lock
sbb
mov
jge
pop
aaa
ds
scas
sbb
into
adc
daa
xchg
pop
hlt
cwtl
xor
out
jae
xchg
aaa
mov
sbb
xor
xor
push
ljmp
icebp
notl
in
rorl
or
mov
jmp
jno
adc
orb
or
stos
jo
mov
mov
mov
adc
xchg
dec
push
push
sbb
sub
sub
sub
cli
data16
sbb
mov
lock
cmc
jbe
stc
movsb
pop
mov
nop
cltd
loopne
xor
movsl
push
push
jmp
adc
cmp
pop
or
enter
lock
pop
subl
sub
cs
xor
or
cmp
xor
add
cmp
jmp
pusha
pop
cmp
push
push
cmp
je
jbe
jo
jb
jl
jle
js
jp
mov
pop
cmpsb
hlt
or
mov
scas
test
pushl
mov
mov
aas
jmp
adc
mul
jmp
iret
in
mov
clc
lods
cli
sar
div
sbb
in
hlt
push
push
mov
lods
sub
sub
and
mov
scas
cmp
cmp
push
aaa
xor
imul
pop
arpl
popa
push
xor
les
jg
jns
jnp
call
sti
jno
jae
lods
mov
scas
lea
push
cmpsl
cld
mov
mov
mov
sbb
out
in
stos
jmp
aaa
in
mov
loope
add
and
and
jno
xchg
sub
add
push
jb
cmc
insb
push
stc
xchg
idivl
daa
pusha
add
fs
callw
insb
mov
add
add
dec
ss
cmp
jb
fidivrs
ds
cmpsb
ljmp
add
scas
fldcw
jbe
push
jo
jle
fdivrs
nop
js
in
out
and
pop
loop
in
mov
ja
push
dec
mov
and
mov
jbe
jns
popf
sub
or
sti
and
gs
clc
mov
aam
rorb
repnz
lret
mulb
imul
mov
das
popa
rorb
arpl
inc
ss
cmp
loop
mov
cmp
cmp
iret
sbb
inc
xchg
adc
icebp
test
mov
jnp
jo,pt
rcll
icebp
js
xchg
loopne
mov
out
xchg
mov
or
cld
int
cmpsl
int3
cmc
xorl
pop
jo
adc
pop
or
pop
ret
test
mov
cmc
insl
cmp
in
test
mov
mov
push
and
ss
or
push
cmc
mov
cmc
in
jle
test
roll
cwtl
repz
lea
ja
mov
mov
mov
and
jle
out
mov
jo
andb
cli
and
rcrl
cmpl
fidivrl
adc
xor
mov
push
push
mov
out
mov
roll
je
sub
lds
loope
sarb
stc
sub
or
adc
jo
push
pusha
fmulp
jb
sahf
sub
add
ss
icebp
mov
and
xor
leave
mov
rcrl
add
dec
push
adc
sbb
mov
push
adc
mov
pop
pop
mov
jae
xchg
cmp
dec
cli
and
mov
cld
and
xor
jne
xor
mov
cwtl
mov
mov
divl
pop
xor
or
dec
je
sub
mov
mov
dec
cmc
popl
cmc
mov
sub
mov
call
xchg
mov
lock
xor
int
and
addr16
jg
shlb
adc
js
bnd
jbe
lock
cltd
jge
test
mov
icebp
je
pop
cmp
ss
aaa
adc
je
jns
cltd
mov
push
in
adc
ds
sbb
sub
dec
test
pop
xor
iret
fstp
popf
cmp
jge
jp
addr16
sub
sub
outsl
sub
or
mov
notb
addl
xchg
dec
icebp
push
test
loopne
add
xor
mov
add
scas
cmpsb
push
movsl
xchg
jmp
nop
int3
les
in
ds
andb
pop
xor
push
dec
shlb
jbe
mov
inc
jb
icebp
jbe
sub
jo
xor
repnz
xchg
xchg
push
out
push
push
rclb
aad
je
cmp
mov
xchg
pop
ja
push
je
push
mov
mov
sti
inc
ret
scas
adc
mov
jb
add
into
push
punpcklwd
cwtl
nop
xorl
mov
outsb
movsb
rorl
fidivrs
add
jne
and
mov
pop
cmp
popa
xchg
or
fidivl
or
dec
cmc
xor
das
jb
push
dec
daa
lods
je
inc
enter
sarb
lea
adc
jb
shll
pop
pop
fsubrs
mov
jno
mov
mov
mov
je
fdivs
adc
push
inc
stos
loop
fdiv
leave
subb
mov
andb
xchg
mov
jno
xor
inc
sbb
xor
test
and
jge
aam
or
xchg
icebp
xor
dec
mov
adc
push
nop
mov
mov
mov
repnz
imul
mov
rorl
outsb
orl
xchg
mov
stos
push
lea
jmp
lret
xchg
push
mov
jg
lock
add
adc
fdivl
mov
leave
test
push
or
or
js
push
int3
jle
pop
clc
lock
lcall
jg
add
adc
mov
jae
pop
popa
add
mov
stc
sbb
int3
mov
mov
adc
dec
inc
xchg
push
nop
pop
lret
test
in
xor
jb
orl
divb
or
adc
jb
rcll
pop
xchg
jb
push
fdivp
cli
js
xor
je
xor
dec
adc
xchg
sbb
jl
subl
dec
mov
out
xor
mov
lret
repz
jo
sub
pop
mov
iret
pop
dec
rolb
push
repz
mov
js
out
sbb
adc
xchg
and
adc
or
and
movsb
push
and
mov
push
stc
inc
fwait
std
adc
and
jne
xchg
mov
lahf
or
xchg
jle
popa
mov
inc
jno
pop
fdiv
add
xor
sub
repnz
lock
mov
dec
mov
test
je
mov
call
xor
push
mov
push
or
sbb
repz
cmc
mov
mov
push
stc
pop
mov
movsl
nop
insl
adc
cmp
mov
xor
call
jp
mov
push
cmpsl
nop
in
addl
xor
xor
xchg
push
cmp
jo
into
mov
push
aaa
adc
enter
repz
xor
lahf
dec
mov
jb
shll
nop
arpl
nop
mov
fs
and
xor
test
aam
popa
dec
insl
xor
enter
xor
ret
mov
or
dec
clc
or
cld
pop
xlat
hlt
xadd
mov
xor
dec
roll
and
mov
mov
mov
int
sahf
or
movsb
icebp
movsb
push
cli
or
dec
std
jb
nop
cmp
lock
push
divb
stos
jno
adc
push
notb
jg
std
jae
aaa
jno
or
das
cmp
jno
shlb
lret
xchg
add
cmc
jmp
mov
jecxz
sub
ficomps
aad
jae
push
adc
xchg
jbe
dec
dec
and
jno
rorb
call
push
mov
rorb
jg
sub
mov
in
insb
nop
notb
mov
mov
xchg
jl
mov
push
jae
xor
ja
faddl
inc
jg
daa
sbbl
sbb
pop
jno
pusha
sbb
xchg
cwtl
or
iret
sub
stc
jno
stc
lock
test
push
xchg
xor
sti
jno
xor
rclb
sub
aad
inc
mov
cs
andb
xor
sbb
mov
test
push
cmp
or
jl
je
push
jno
mov
sbb
dec
jl
push
clc
lret
jge
xor
dec
xchg
scas
adc
add
outsb
cmp
pop
divb
push
mov
inc
xor
pop
xchg
push
sti
rclb
std
ret
xor
ret
ljmp
xchg
shrl
lea
xchg
loopne
inc
sbb
xor
cs
push
mov
cwtl
xor
and
repnz
adc
mov
f2xm1
aaa
mov
xor
pop
in
dec
aaa
dec
adc
icebp
rcll
sti
inc
je
nop
adc
push
mov
icebp
lock
dec
rclb
repnz
icebp
mov
xor
incb
iret
push
cs
repz
adc
mov
cmc
in
jg
enter
dec
adc
jnp
inc
adc
adc
sub
xchg
mov
repnz
lahf
xor
ljmp
push
push
nop
repnz
pop
adc
ja
mov
mov
rclb
icebp
xchg
adc
adc
mov
jecxz
xchg
mov
dec
xor
das
adc
adc
mov
jne
xor
aam
cmc
dec
and
jo
cmc
out
jne
repnz
pop
xor
mov
xor
mov
xor
jbe
adc
lods
add
inc
aas
in
xchg
jnp
jnp
test
jl
dec
mov
xor
inc
mov
push
mov
and
out
mov
jb
bnd
xor
js
push
or
neg
out
lret
rcrl
idivl
nop
rcll
and
xor
push
xor
lds
aas
mov
or
lock
repz
mov
mov
mov
adc
xor
jno
mov
outsb
movsb
insl
nop
mov
pop
mov
incb
cmp
shr
sahf
pop
push
sub
addr16
jle
cmp
push
stc
lock
jno
push
sbb
rorl
rcrl
xor
pop
sub
imull
icebp
out
in
or
loop
das
jo
dec
mov
js
aam
and
mov
adcb
cmpsl
and
mov
fidivl
mov
into
xor
adc
test
mov
or
sbb
xor
out
mov
jo
imul
ljmp
lret
mov
mov
je
cmpsl
adc
jle
inc
or
mov
mov
outsb
fsubl
add
inc
bnd
dec
cmp
or
jle
iret
or
inc
mov
mov
movsb
js
mov
mov
hlt
or
fcomps
mov
leave
cmp
ja
ja
push
pop
pushf
movsl
sbb
fs
pop
mov
insl
lods
pop
push
sub
jns
mov
and
xchg
cmp
stc
pop
in
add
stc
xor
or
jg
movsb
mov
cmpl
cmpsb
or
loop
and
stos
inc
lret
mov
mov
ss
fdivrl
jb
jbe
mov
push
mov
mov
jns
fdivr
jle
dec
std
cmp
adc
adc
rorb
mov
dec
icebp
test
dec
cmp
cmp
enter
sub
fwait
lods
xor
mov
jl
adc
shll
bound
lods
jle
jl
dec
mov
ja
mov
mov
jecxz
fisubrl
repnz
lock
adc
xchg
mov
pop
scas
ret
lock
leave
xchg
icebp
icebp
xchg
inc
mov
adc
pop
inc
test
push
inc
push
and
mov
mov
cmp
cmp
push
ds
jno
out
repnz
pop
or
lret
mov
dec
push
sub
gs
fwait
pop
decl
dec
sub
cmp
xor
adc
mov
mov
push
mov
cld
xor
and
dec
jb
int3
xchg
add
and
xchg
nop
push
addl
or
inc
notl
clc
dec
ficoml
inc
mov
mov
or
lock
mov
cld
add
mov
inc
pop
push
aas
jo
dec
push
rcrl
and
hlt
out
adc
sahf
push
nop
popa
mov
push
icebp
xor
cli
jo
shl
loopne
mov
mov
mov
lock
out
pop
mov
pop
ret
sarl
repz
jnp
add
fidivs
jo
push
mov
mov
aas
cwtl
cwtl
rorb
mov
or
shlb
mov
mov
lock
jo
adcb
test
jbe
insl
xor
or
rorl
mov
add
push
sti
jb
lock
clc
arpl
and
xor
xlat
cmp
jns
jno
mov
mov
jns
jp
lock
sub
adc
lds
pop
fucompp
or
dec
lahf
in
lock
lock
xchg
mov
nop
sbb
jecxz
bnd
aaa
push
lock
rol
sub
dec
outsl
inc
jb
aad
insl
fimuls
pop
iret
push
lock
aaa
jb
lock
out
in
jg
jae
xor
pop
jmp
add
outsb
push
mov
lock
xor
in
mov
int3
push
lock
mov
xchg
fs
in
mov
jno
xchg
scas
in
mov
pop
xor
outsl
imul
adcb
mov
popf
add
lods
cltd
ret
nop
lds
adc
jae
mov
pop
shl
inc
dec
sbb
mov
out
bnd
pusha
pop
xor
pushf
repnz
mov
add
aam
xorb
push
sbb
fdivrs
inc
stc
icebp
out
stos
mov
mov
pop
or
pop
sarl
and
cmc
pusha
mov
mov
adc
imul
mov
js
cld
ss
xor
popa
call
pop
dec
jo
sbb
cs
mov
xor
stc
xchg
pop
mov
rolb
jle
jno
mov
pusha
movups
jmp
jae
movsb
pushf
push
js
cmp
pop
or
jg
je
movsl
adc
mov
mov
js
repnz
repz
xchg
pop
inc
jne
lock
insl
mulb
hlt
add
mov
std
dec
adc
xor
and
icebp
popa
xchg
div
or
jle
cmp
cli
popa
enter
shl
sub
mov
jb
and
out
dec
aas
jne
rcll
psadbw
push
inc
or
push
outsb
sbb
mov
sub
mov
mov
popa
jp
cmp
hlt
daa
aaa
hlt
mov
into
out
or
or
out
cmp
inc
adc
cmp
or
lock
das
or
sbb
push
mov
pop
xchg
cmc
or
push
mov
xchg
fucomp
xor
popa
mov
loop
push
aam
mov
mov
lret
je
xchg
push
mov
scas
in
cmc
push
sub
xor
fst
xchg
sub
imul
stc
roll
scas
lods
call
xor
push
sbb
pop
cmp
xor
xor
adc
mov
sbbl
inc
sbb
jb
mulb
into
jmp
mov
cmp
stos
repz
cmp
inc
std
inc
out
mov
loope
ja
movsl
lods
ja
mov
lock
mov
mov
add
push
xchg
push
push
sub
movsb
das
into
ret
scas
nop
inc
sbb
loopne
push
or
pusha
mov
adc
jo
xchg
jne
je
nop
xchg
out
adc
mov
inc
jno
push
xor
test
adc
dec
push
loopne
dec
jge
xor
xchg
cmpsl
lods
mov
sbb
mov
aam
xchg
icebp
sbb
popa
xor
icebp
cmpsl
std
pop
rcr
jl
inc
adc
mov
or
pusha
jg
je
jo
xor
or
shl
bound
repz
loope
mov
test
rcrb
icebp
shll
jge
and
mov
mov
dec
test
addl
jns
shlb
insl
sar
testl
inc
jb
and
cltd
sbb
xchg
cmp
jo
push
test
not
daa
adc
add
rol
icebp
push
sub
outsb
sub
pop
mov
notb
jle
sub
jno
insl
mov
nop
dec
nop
inc
xor
xor
jo
inc
jnp
out
adc
rcrb
adc
sbb
repz
cs
in
xorl
adc
push
sbb
push
or
loopne
lea
xor
adc
mov
enter
jae
add
test
push
iret
pusha
mov
mov
jbe
ret
in
cld
hlt
sbb
jge
mov
dec
addb
add
add
ficoms
mov
divl
testl
fcoms
xchg
ret
mov
jne
xchg
and
push
ret
repz
xor
pop
cld
jno
push
push
adc
jb
rol
adc
out
sarb
mov
sahf
jbe
or
push
jg
mov
adc
adc
adc
add
je
adc
hlt
call
call
pushf
adc
aaa
xor
mov
cs
and
mov
je
xchg
cmp
inc
cwtl
insb
add
mov
inc
ret
lock
xlat
std
repnz
add
pop
stos
or
mov
pushf
xor
ss
adc
mov
add
jnp
sub
dec
nop
iret
out
mov
jb
jae
setbe
mov
icebp
jg
mov
add
nop
ljmp
xchg
pop
gs
jae
xor
mov
sub
repnz
xchg
mov
jo
add
cmc
add
pop
push
lret
mov
inc
jno
add
aam
jb
mov
dec
mov
mov
adc
iret
jo
mov
or
std
mov
jae
imul
cwtl
xor
repnz
cli
jno
cmc
js
ret
lock
js
les
sub
pusha
jp
les
sti
lock
xor
sub
push
out
out
and
dec
and
and
pushl
rcl
add
inc
ret
push
stc
movsb
and
adc
pop
repz
adc
icebp
repz
adc
cld
adc
repnz
mov
jb
xchg
jp
repnz
sti
notl
xor
sbb
popa
icebp
shl
ja
je
sbb
shlb
lock
xor
cmp
icebp
cli
dec
ret
dec
repz
xchg
jmp
adc
sub
iret
xchg
adc
sarl
stos
xchg
adc
jns
insb
dec
cld
push
repnz
std
mov
inc
xchg
mov
imul
sub
adc
int
dec
dec
insl
aaa
insb
or
mov
adc
out
xor
jnp
or
or
push
gs
daa
mov
mov
stos
cmp
adc
xor
add
nop
and
push
mov
hlt
lds
cmp
or
cmpsl
push
test
cmp
clc
les
stos
ja
or
nop
cmp
push
sub
xchg
fld
adc
push
mov
ds
and
ss
xchg
std
es
mov
hlt
repz
pushf
jge
pop
mov
adc
leave
push
cmp
lock
xchg
lock
icebp
fildl
cmp
add
adc
xor
dec
cmc
add
out
cmp
stos
jnp
cmp
xchg
pop
sub
add
mov
scas
aad
cmp
inc
push
mov
roll
sub
stc
mov
out
dec
lea
or
pop
lods
fs
loop
fnsave
mov
mov
inc
lock
pop
cld
sub
mov
xchg
orb
push
jno
rcrb
jmp
mov
lods
shl
mov
sarb
sbb
cmp
push
adc
mov
loope
fdivs
add
clc
add
das
movl
add
arpl
or
xchg
rcrl
bound
ficompl
aam
ss
cmp
xchg
add
mov
insb
jmp
aam
aaa
outsb
ljmp
mov
aad
movsl
pop
stos
fdivrl
jg
lock
jmp
mov
push
mov
push
inc
filds
sahf
pushf
lea
adc
inc
mov
std
push
sub
insb
xchg
nop
out
add
test
adc
loop
xchg
je
xor
jp
ja
insb
push
mov
adc
xchg
push
movswl
adc
cmp
jns
lods
leave
mov
jmp
popa
xor
outsl
clc
inc
test
add
sub
xor
imul
jae
sbb
jne
ds
vmovaps
out
cmpsl
dec
sbb
pop
jnp
dec
lods
xchg
jmp
das
sub
insb
mov
fcomps
xchg
nop
sub
xchg
in
hlt
or
xor
iret
sbb
clc
xor
mov
outsl
cmpsb
out
pop
ljmp
xchg
cmp
mov
imul
iret
pop
stos
or
in
push
iret
sbb
xor
xor
mov
inc
test
fnsave
push
mov
pop
adc
inc
jge
out
es
fcompl
pop
pop
cmp
outsl
pop
xchg
ret
adc
ss
mov
inc
add
fs
jns
int3
push
ret
ret
dec
cltd
mov
in
inc
jne
mov
repnz
bound
in
mov
fidivrs
dec
adc
xor
push
out
xor
mov
cli
aas
fldt
sub
mov
xchg
outsl
nop
leave
jbe
adc
xchg
mov
in
in
or
lcall
loop
and
sbb
incl
lock
push
mov
lods
decl
das
shl
int
mov
mov
or
leave
dec
int
cmp
cmp
cmp
movsl
iret
xchg
xor
sub
mov
adc
outsl
jg
or
mov
jb
lds
add
icebp
xor
push
sbbl
loopne
lock
nop
out
movsb
mov
xor
fs
fwait
xor
or
push
hlt
repnz
test
lods
jns
add
stos
enter
cmc
sub
lret
ret
pop
adc
mov
pop
ret
mov
adcl
adc
mov
xor
inc
xor
shlb
add
or
pop
or
enter
and
mov
or
cltd
push
test
adc
jbe
push
or
jge
mov
loop
orb
xor
mov
insl
inc
jl
add
popa
cwtl
fbstp
jns
sarl
lock
pop
cltd
repnz
lea
dec
jb
ds
add
sub
xchg
fistpl
ss
outsb
lcall
xor
add
inc
in
mov
lret
mov
and
jo
sbb
dec
call
xchg
mov
gs
es
hlt
cmp
mov
lret
repz
insl
jl
adc
jae
add
jb
fmul
std
repnz
outsl
sbb
lock
mov
nop
pop
mov
fcmovne
xchg
cmp
dec
or
push
mov
pop
xchg
pop
insl
mov
push
sub
jno
div
std
inc
lods
mov
dec
repnz
ficoms
cmc
je,pt
sbb
or
inc
seto
pop
xchg
xor
lods
push
int
mov
insl
scas
out
loopne
and
test
dec
mov
or
add
popa
sub
xlat
jno
ss
jg
js
mov
ljmp
adc
fnstenv
hlt
xchg
jmp
inc
faddl
mov
ljmp
sbb
xchg
sbb
dec
movsl
aaa
call
cmp
sub
add
je
xchg
mov
les
push
mov
and
mov
mov
cmp
pop
std
test
scas
mov
cmp
popa
jne
xor
mov
jbe
pop
push
daa
aad
jbe
pop
mov
dec
sub
sbb
push
jg
aaa
xor
jnp
push
testl
and
add
dec
xchg
add
stos
xchg
cmpsl
test
add
jle
dec
push
movsb
out
mov
sub
cli
or
aam
jo
ljmp
pop
inc
nop
mov
sbb
sbb
cli
adc
and
ss
sahf
pushf
mov
dec
imul
mov
xor
xchg
xchg
mov
adc
dec
dec
mov
cld
bnd
fisttps
mov
int3
pop
mov
cmp
lock
lods
incl
or
jo
inc
mov
fidivrl
rcr
sbb
jle
and
mov
sbb
dec
jnp
jg
loop
and
pop
cltd
xchg
movsl
xchg
xchg
pop
clc
inc
jo
ljmp
dec
lcall
xchg
adcl
in
sbb
dec
imul
jo
pop
clc
pop
push
clc
pop
jnp
fisttpll
dec
das
inc
insl
xchg
dec
push
dec
faddl
jo
mov
cwtl
icebp
xor
nop
mov
out
mov
mov
push
jecxz
rolb
adc
outsl
and
mov
rorl
add
cmpsb
sbb
xchg
in
into
loop
jl
add
and
xlat
jg
push
add
shlb
mov
cli
lahf
arpl
sub
repz
gs
jge
cmp
dec
out
ret
daa
int3
push
and
in
cs
push
or
jnp
and
imul
pop
cmp
sub
arpl
mov
stos
nop
inc
lahf
add
or
xchg
add
adc
jg
ret
mov
mov
add
in
popf
xchg
or
pop
mov
push
int3
inc
test
mov
sbb
cs
in
sbb
fsubl
xchg
lods
jl
ficomps
inc
insb
jmp
jo
dec
incl
shl
add
insl
rorl
xor
inc
into
jno
mov
mov
lock
jns
mov
dec
xor
push
mov
fdivl
pop
jae
mov
aam
test
stos
dec
inc
adc
and
lock
mov
cwtl
icebp
push
sbb
jb
repnz
xchg
lock
adc
xchg
lock
fstl
xchg
mov
and
xchg
icebp
adc
sub
cltd
popa
xor
adc
inc
lock
mov
test
lock
mov
xorl
data16
push
pusha
push
loopne
jg
xor
adc
jno
test
imul
lods
xor
xchg
lock
mov
jae
mov
cmpsl
push
lock
push
test
ds
fs
xlat
clc
mov
jno
inc
nop
xor
jnp
jb
mov
lret
scas
push
cmp
stc
push
gs
stc
jae
xor
mov
lods
and
scas
push
cmp
or
xor
aaa
xor
sbbb
cmp
xor
fcomp
sahf
jl
repz
pop
jp
cmp
adc
out
push
test
push
notl
icebp
adc
repz
sbb
scas
lock
aad
jo
xor
icebp
cmp
mov
pop
imul
adc
adc
push
adc
and
dec
xor
or
rorl
cmc
stc
push
adc
mov
mov
adc
adc
cmp
mov
notb
mov
xchg
roll
out
mov
ljmp
pop
andl
jnp
jmp
mov
pop
inc
sub
xor
mov
xchg
inc
inc
jbe
clc
adc
inc
insl
sbb
icebp
jmp
scas
pop
dec
inc
sub
dec
scas
lods
jb
daa
cmc
mov
ss
out
pop
into
mov
add
adc
test
mov
sbb
or
ret
xchg
or
lock
xor
cmpb
dec
and
inc
cmp
das
sbb
int3
fwait
int
dec
aas
inc
lret
add
xchg
loop
mov
inc
clc
adc
cpuid
cli
lea
test
call
outsb
dec
mov
lea
or
mov
pop
jb
aaa
lcall
sbb
ret
aam
pop
into
roll
sbb
mov
pop
rcr
sti
lock
xor
add
fidivl
insb
es
adc
cmc
inc
add
in
jp
push
xchg
dec
inc
sbb
repz
incb
nop
xchg
xor
xor
or
and
xchg
jo
or
or
repz
mov
jb
ret
push
nop
cmp
xchg
nop
sarb
push
mov
xchg
xor
negl
jno
xchg
push
adc
repz
stos
jb
jae
mov
scas
jp
jno
and
xchg
cmp
std
mov
sarl
xchg
clc
repz
lret
push
rcll
adc
push
test
and
cltd
lock
les
mov
clc
xlat
jo
je
ja
je
jae,pn
push
push
pusha
shl
nop
cmc
div
xor
jecxz
lret
jp
mov
les
jae
jns
dec
inc
repnz
fidivl
inc
mov
js
xor
push
or
dec
xor
and
xor
adc
jo
mov
jo
repz
cmp
and
sti
adcl
xchg
push
jl
repz
inc
fs
lahf
pop
and
xor
fdivrs
or
repz
jno
dec
inc
inc
jo
lret
jno
jle
inc
lcall
je
xor
pop
imulb
push
add
push
xchg
and
xor
js
push
mov
lods
dec
pop
int
push
cmp
rcll
xlat
lret
inc
dec
xlat
add
jo
xrelease
adc
mov
mov
push
cmp
mov
mov
int3
sbb
test
jo
imul
ficomps
pop
imul
xor
add
inc
repz
cmp
inc
inc
mov
lock
aad
xor
xlat
jl
outsb
jb
add
inc
add
pushf
xor
js
or
mov
dec
aas
loope
fidivl
dec
lock
lcall
lea
lcall
jl
arpl
loop
lret
jo
popa
dec
jb
dec
icebp
jo
or
movsl
mov
push
cmc
test
popf
xchg
lret
stos
push
xchg
scas
sbb
ljmp
dec
xchg
test
es
xor
shll
xchg
mov
je
xchg
jle
repnz
call
mov
dec
push
jl
dec
jne
sbb
push
jns
jp
hlt
and
pop
cmc
push
fdivs
fdecstp
jns
ja
rclb
icebp
xor
fisubl
or
shl
or
inc
push
clc
xor
add
lret
shlb
inc
dec
repz
xor
mov
lcall
ss
push
in
push
mov
adc
xor
push
aaa
xor
mov
xchg
adc
les
and
cmp
movsl
mov
xor
mov
jo
adc
pop
push
mov
mov
inc
icebp
jno
xor
push
pop
mov
pop
sbb
jae
adc
dec
rdpmc
cmp
cmc
xchg
mov
sar
icebp
mov
repz
loopne
cmp
jp
or
je
xor
mov
stos
ss
jns
jo
xor
dec
dec
mull
xor
aam
out
stc
inc
or
cmpsl
js
cmp
jbe
std
ror
mov
adc
xchg
imulb
adc
add
cli
fcoml
jo
clc
repnz
pop
mov
xor
jae
push
andb
pop
pop
mov
dec
data16
adc
popa
pusha
hlt
add
ja
clc
lock
notb
or
data16
cld
in
xor
popa
call
cmp
mov
push
into
or
or
popa
stc
fidivs
ficoms
aas
jno
es
add
jae
jo
pop
mov
sahf
in
ret
std
mov
enter
fbld
aad
sub
decl
mov
and
leave
push
pop
or
lock
jno
or
icebp
je
jge
repnz
adc
and
js
jg
mov
loopne
add
jnp
call
and
xor
mov
mov
leave
mov
push
mov
sub
lods
push
lcall
xor
je
loopne
test
jae
lock
movsb
in
sbb
repnz
fistpl
push
pusha
mov
outsl
call
sbb
shlb
popa
mov
sbb
or
push
sbb
push
repz
das
jle
sub
or
jp
rclb
dec
pushl
das
mov
jle
mull
jae
insl
jmp
jo
sahf
dec
push
movsb
hlt
sar
xor
call
xor
xor
mov
fcomip
stos
inc
mov
xchg
push
push
jle
push
cmp
xchg
push
std
out
pop
xchg
test
icebp
xchg
call
js
sbb
push
xlat
cmp
out
sub
pop
test
xlat
repz
ror
rorb
lock
xor
mov
cmp
jo
cmc
jae
roll
notb
adcl
lock
xlat
push
push
push
add
mov
push
icebp
jae
jg
xor
and
adc
out
push
jb
lock
mov
dec
cld
xor
or
sub
jo
jo
aad
mov
sbb
mov
shr
or
div
aaa
das
lods
xor
sub
jle
adc
adc
mov
jl
adc
cmp
in
adc
out
test
xchg
repnz
test
out
pop
or
lock
sub
sub
mov
jae
xor
sub
notl
adc
scas
or
xor
xchg
push
dec
rol
int
or
inc
mov
mov
or
js
out
stos
push
xor
lret
lahf
pusha
mov
jl
adc
xchg
jg
stos
xor
inc
xchg
adc
idiv
cmp
xor
mov
lock
repz
mov
int
sbb
dec
sub
jae
jp
sbb
fnstenv
call
int
xor
hlt
jno
xchg
xchg
jae
div
lock
adc
adc
push
icebp
lea
into
adc
mov
mov
in
adc
into
adc
dec
repz
outsl
adc
div
icebp
sbb
or
imull
adc
imull
adc
repz
stc
mov
icebp
jae
fdivr
imul
add
loope
adc
xor
cld
sub
mov
lea
in
xchg
testl
sub
mov
fadds
sub
mov
add
add
repz
jmp
push
add
add
sti
push
add
cmp
dec
push
imull
push
div
imul
imull
jae
insb
scas
sub
scas
inc
outsb
iret
test
adc
push
push
jo
inc
xchg
je
js
iret
jo
adc
add
adc
cld
jo
rcrb
and
jecxz
adc
or
mov
lock
adc
sbb
cmpsl
adc
iret
mov
jbe
add
out
je
jbe
xor
add
xor
jo
mov
scas
fbstp
icebp
nop
stc
rcrl
dec
cwtl
jbe
in
jo
bnd
arpl
imul
push
fdivs
or
jo
or
jae
push
shl
psrlw
rcll
xlat
test
div
clc
js
adc
mov
and
bound
push
xchg
shrb
lock
jns
nop
jl
adc
pop
sahf
jl
adc
or
add
pop
fsubrs
inc
xor
frndint
xor
shlb
iret
push
icebp
push
addr16
repz
sub
cmc
mov
icebp
adc
pop
shll
shll
fbstp
xlat
scas
push
and
shlb
js
xlat
inc
fwait
adc
cld
ds
mov
adc
or
add
mov
into
sbb
add
mov
hlt
jnp
out
adc
scas
or
sidtl
fists
shll
adc
jo
sbb
sti
notb
sbb
mov
or
jge
jo
xor
cmp
adc
sbb
lock
bnd
sbb
cmpb
and
icebp
mov
mov
icebp
xor
ss
mov
and
jbe
xchg
adc
jbe
adc
ja
mov
adc
mov
mov
add
les
cld
fisubrs
filds
jno
xchg
repnz
int
add
inc
dec
stos
cmp
in
sbb
les
sti
notl
repz
cmc
cmp
pop
inc
out
adc
cli
push
xor
icebp
sbb
bnd
lock
aaa
mov
shl
jno
testl
sub
xlat
sbb
cmc
je
xor
rcrb
loopne
icebp
dec
cmpsb
in
andl
icebp
adc
push
adc
jno
add
adc
add
add
outsb
push
jb
repnz
dec
mov
push
jb
xor
cmc
adc
imul
mov
jb
xor
xchg
xchg
jb
dec
xorl
hlt
xchg
sbb
adc
jb
inc
aam
adc
mov
pop
xor
ja
jb
fidivl
and
stc
cld
cmp
mov
and
adc
xor
and
dec
pop
push
add
repz
xorl
adc
inc
stc
stos
idiv
testl
push
loopne
jg
mov
push
mul
push
adc
je
pusha
imulb
jbe
dec
pop
and
je
mov
xchg
adc
adc
adc
inc
repnz
pusha
hlt
int3
aaa
mov
imul
xchg
out
jns
adc
mov
adc
mov
and
test
iret
fs
arpl
dec
pusha
inc
push
add
icebp
adc
mov
test
adc
inc
addb
adc
dec
mov
inc
xor
inc
loope
pop
fistpll
rcr
jb
fsubs
hlt
xchg
mov
jae
fsubrp
fchs
movhps
js
div
insb
out
mov
mov
fcmovb
daa
add
cltd
stc
fst
hlt
jecxz
inc
pop
add
stos
cmp
js
add
aam
xlat
hlt
adc
pop
icebp
sbb
mov
loopne
dec
mov
xchg
cwtl
js
adc
pushf
xor
inc
pop
xlat
cltd
andb
idivb
outsb
jb
xor
jnp
outsb
in
repz
fldl
mov
xlat
and
inc
jb
mov
pop
xchg
sbb
pop
rcrl
jne
pusha
lds
sbb
adc
xor
pop
mov
outsb
aas
pushf
hlt
jl
pop
cmp
adc
xor
adc
jb
push
mov
cmp
js
jb
cld
add
push
pop
pop
mov
mov
sbb
mov
jne
push
xor
test
push
jo
add
add
dec
jbe
xor
insl
mov
nop
js
inc
test
fwait
pop
stc
xlat
inc
test
dec
pusha
je
pop
inc
xor
mov
pop
jb
repz
orl
dec
jb
cmp
xchg
xchg
inc
xor
je
pop
jno
adc
xor
xor
ss
cmp
cmp
mov
jb
xor
add
insl
xlat
nopl
inc
inc
push
xor
es
xor
xlat
cwtl
add
xor
pushf
lods
adc
cmp
pop
mov
push
inc
xchg
hlt
jb
mov
inc
inc
jmp
xchg
testl
add
hlt
mov
lock
movsb
add
xchg
xor
jge
notb
adc
xorl
dec
push
cmp
in
adc
jne
xor
scas
jo
cmpsb
fiadds
arpl
repnz
bound
hlt
stos
lods
cmp
jb
jb
into
arpl
fnstenv
fnstenv
aam
jb
xchg
mov
ss
mulb
hlt
and
and
addl
repz
adc
and
testb
xor
fwait
ja
jne
and
daa
std
cltd
xor
icebp
or
inc
outsb
inc
jb
jae
pop
mov
mov
leave
jb
clc
pop
pop
aaa
mov
xchg
push
pop
cwtl
pop
add
cmp
pop
add
cli
inc
push
sarl
jne
aaa
rorl
push
ss
xchg
mov
dec
sub
es
jmp
clc
lea
repz
addr16
mov
test
fsts
mov
jae
adc
jae
adc
inc
sbb
sub
ds
ret
adc
xorw
jae
rcrb
adcb
mov
cmp
mov
mov
xor
cmpsb
out
scas
pcmpeqd
lods
mov
dec
mov
jb
add
adc
movsb
icebp
add
punpcklwd
dec
push
xlat
test
pusha
jno
insb
dec
xlat
jmp
icebp
adc
in
cli
lock
test
sbbb
add
adc
fiadds
std
mov
pop
mov
icebp
std
jae
paddd
cmp
xchg
mull
stc
add
inc
shll
or
jno
pop
jmp
adc
shl
cld
icebp
mov
adc
jno
adc
jmp
icebp
jmp
std
mov
push
pop
push
mov
mov
or
jp
icebp
push
push
rol
pop
lcall
ret
icebp
idiv
or
push
or
test
mov
xor
out
adc
clc
xchg
mov
adc
fidivrl
mov
rcl
arpl
cmp
pop
mov
or
icebp
lods
inc
repz
mov
lock
icebp
pop
psubsw
negb
jns
inc
push
sti
pop
std
sub
lods
sar
lock
sbb
add
std
fstpt
test
push
in
hlt
and
adc
mov
icebp
scas
and
ss
popf
stc
lock
cs
mov
rcrb
cmc
cmp
dec
cld
adc
add
cmc
gs
push
push
adc
sbb
adc
add
int
inc
push
or
push
adc
sbb
and
iret
ret
icebp
push
lock
and
out
and
rclb
cld
std
into
cmc
incb
icebp
xor
xor
clc
sti
add
mov
xchg
loope
push
lock
je
stc
mov
sbb
repnz
add
lcall
pushf
ja
shl
mov
fyl2x
out
aaa
mov
in
out
inc
or
fbld
aaa
cmc
mov
push
dec
enter
adc
add
add
or
fwait
pop
mov
mov
xor
rorb
and
jle
mov
xor
rorb
cwtl
iret
hlt
push
out
add
cwtl
dec
aad
jg
mov
cwtl
dec
aad
jg
mov
cwtl
dec
aad
jg
mov
in
rolb
out
dec
aad
jg
mov
out
sub
lock
sti
adc
xor
or
or
leave
arpl
mov
xor
rorb
cwtl
dec
aad
lahf
popa
fstpt
rorb
out
into
je
fwait
xor
rorb
cwtl
dec
aad
fbld
fwait
xor
rorb
cwtl
dec
aad
jg
mov
dec
rorb
cwtl
dec
aad
jg
xchg
cwtl
dec
aad
jg
sbbl
cwtl
dec
aad
jg
es
repz
into
inc
lock
pushf
xor
rorb
and
mov
xor
rorb
and
mov
xor
rorb
and
mov
xor
jb
cmc
sbb
popa
fstpt
rorb
xchg
popa
mov
xor
rolb
out
dec
aad
jg
mov
xor
sar
cmpsl
test
aad
jg
mov
repz
pop
je
int
lock
into
or
add
xor
sbb
cwtl
dec
aad
jg
mov
testl
popa
mov
dec
das
xor
mov
popa
mov
xor
rorb
out
iret
mov
popa
mov
xor
rorb
cwtl
int
cs
popa
mov
xor
rorb
cwtl
into
aad
fbld
fstpt
pop
push
outsl
push
xor
test
icebp
fcmovbe
adc
pop
adc
ret
sahf
icebp
inc
outsl
pop
cmc
mov
adc
daa
mov
push
dec
mov
icebp
jl
and
sub
lock
lock
push
jns
icebp
and
jno
icebp
pop
mov
out
mov
sti
mov
shrl
hlt
lock
loope
shll
mov
lock
call
repz
cmc
wbinvd
or
or
jmp
adc
add
lock
int
inc
bound
xchg
popf
cmc
iret
ret
lock
outsb
sbb
push
or
push
adc
out
push
sti
adcb
jmp
stc
test
mov
or
push
insb
sbb
and
repz
sbb
testl
mov
sbb
stc
sub
repz
loopne
cmc
out
fistpll
nop
mov
pop
hlt
filds
mov
mov
mov
mov
adc
add
jo
stc
int
jge
ret
adc
stc
icebp
cld
stc
repz
stc
adc
and
divl
in
std
mov
pop
sbbl
lds
out
add
icebp
movsl
xchg
in
out
cltd
pop
push
negl
xor
add
mov
popf
or
cmpsl
cmp
inc
dec
pop
scas
int
out
test
dec
lock
repz
xlat
jb
adc
or
int
fisubrl
test
testb
cld
xor
push
or
xchg
hlt
scas
popa
or
insb
add
repz
mov
les
lock
inc
fsubp
adc
subb
mov
aaa
mov
add
cmp
inc
and
cmp
mull
add
sbbl
or
in
jmp
icebp
insb
mov
add
and
xlat
or
rcrb
fists
jecxz
outsl
and
cmc
jbe
mov
mov
js
pusha
cwtl
jp
inc
ja
jns
std
lock
cltd
cltd
pop
dec
fdiv
sbb
mov
pushf
fistps
add
cmp
jo
add
or
and
fnstcw
xchg
pop
std
fstp
jl
xor
and
jp
pop
mov
nop
adc
popa
mov
jno
testb
jle
add
std
xchg
mov
fcompl
sbb
pop
xchg
lret
fstl
adc
sub
pushf
pop
mov
pusha
pop
push
xchg
sbb
jle
push
popf
scas
ret
repz
ja
mov
pop
adc
pop
ds
or
adc
ds
mov
pushf
popf
jno
jle
xor
js
sbbl
sbb
ds
pop
js
xor
mov
jbe
gs
jbe
stc
addb
xor
inc
stc
cmp
or
lcall
popa
ds
ss
jns
mov
xchg
lods
push
ja
cld
sub
jae
jl
hlt
mov
sbb
fiadds
dec
addr16
scas
mov
arpl
lods
mov
andl
mov
jne
mov
stc
out
cld
mov
mov
mov
pop
sbb
je
je
xchg
xorb
lea
sbb
mov
xor
cmp
jge
jl
stos
cld
dec
mov
addr16
and
xchg
sbb
adc
cltd
fdivr
mov
fsubl
mov
inc
xchg
test
cwtl
aad
mov
popa
push
stos
cmp
rolb
nop
pop
push
mov
pop
test
sbb
icebp
mov
bnd
inc
dec
add
and
push
les
jae
xor
pushf
jg
mov
cld
cmc
cmp
je
std
dec
cld
jg
fwait
xor
idiv
stc
hlt
lock
jae
jne
sub
dec
test
mov
or
or
and
stos
int
dec
pop
jp
icebp
jl
cmp
xchg
test
dec
lock
xchg
cmp
adc
cmp
popf
cmp
xor
fmull
cmc
pop
stos
or
xchg
mov
or
clc
jno
mov
xchg
adc
xor
mov
repnz
mov
test
dec
or
inc
jge
add
ret
cmp
testl
std
cltd
std
into
sub
and
mov
add
dec
dec
adc
push
mov
nop
xchg
mov
pop
xchg
jo
xor
jl
inc
cmp
push
mov
les
repnz
cmp
std
inc
ja
jp
sub
cwtl
arpl
pop
and
repnz
stos
mov
push
std
lcall
jns
int3
js
je
jbe
mov
jns
test
pushf
xor
jne
cmp
ss
xchg
jo
cmpb
sbb
repnz
adc
mov
mov
cmp
push
mov
ss
std
movsb
icebp
fisubl
nop
mov
and
mov
test
add
sbb
imul
xchg
cwtl
pop
jne
jge
cmpsb
idiv
mov
clc
imul
icebp
pop
cmpsl
lods
cs
js
jno
jo
jle
xor
mov
repz
mov
popf
arpl
out
testl
notl
and
loop
xchg
xor
or
jbe
pop
inc
cmpb
sarl
and
sbb
aam
cmp
xchg
in
dec
bound
push
es
hlt
mov
fdivrs
sbb
jae
aas
pop
ret
inc
test
pop
mov
xor
aas
ja
es
popf
clc
out
sbb
or
mov
mov
popa
pop
push
dec
cmp
or
icebp
dec
dec
push
xor
mov
jl
repz
adc
mov
inc
add
mov
cmp
aas
xchg
adc
sbb
shlb
leave
adc
xchg
ret
dec
pop
sbb
into
cmc
and
cmp
hlt
jp
std
ficomps
das
fs
jl
les
pop
add
cli
fstps
inc
psubusb
and
push
mov
add
cmp
push
lahf
lret
clc
or
mov
mov
into
pop
cmp
jbe
mov
fs
adc
bound
mov
bound
js
je
stc
fnstenv
fdivrl
push
mov
movb
outsl
adc
xchg
jg
cld
and
mov
and
pop
mov
arpl
adc
inc
cmp
mov
add
pop
divl
mov
xchg
pop
ret
std
cmp
jl
std
sarb
iret
scas
imul
dec
lds
push
pop
cmc
xor
dec
pop
mov
fidivrs
push
pop
sub
xchg
adc
dec
imul
sub
cld
pop
mov
xchg
sbb
testb
push
xor
sbbl
or
adc
popa
cld
inc
or
jl
push
xor
mov
push
xor
loop
mov
fisubl
je
mov
push
mov
movb
jb
imul
xchg
popf
clc
mov
rcrb
jle
cmc
fwait
xor
add
orb
push
or
aas
push
jae
mov
jne
cld
cwtl
push
das
adc
aas
cmpsb
and
adc
sbb
push
jb
mov
pop
ds
cmp
into
dec
fdivs
mov
aad
fcmovnu
jle
rclb
dec
cmp
je
fisttpll
les
fadd
sbb
icebp
dec
lock
fnstcw
and
xor
hlt
aas
into
mov
fadds
inc
pop
in
add
push
push
or
dec
inc
pop
ja
mov
mov
ja
push
mov
ds
inc
fiadds
pushf
mov
pop
std
sub
test
sub
sbb
cmp
jbe
mov
jo
mov
adc
pop
pop
idivl
cmp
jg
and
mov
xchg
ror
cmp
cld
dec
cmp
push
les
xchg
jp
cmpsb
cmp
mov
subb
pop
cltd
mov
mov
mov
mov
aad
clc
add
les
stc
sbb
mov
jge
dec
xchg
adcb
pop
imul
dec
xor
aad
jne
aaa
mov
sbb
lds
dec
adc
sub
cmp
jne
lock
leave
mov
add
dec
push
icebp
not
aad
jb
daa
repnz
push
jle
sub
mov
js
loop
xor
sbb
sti
xor
cmp
pop
leave
inc
pop
jecxz
pop
jne
dec
add
jne
rcrb
int
mov
dec
popf
mov
xchg
jno
cltd
mov
shll
jmp
pop
mov
lds
lock
popf
les
jb
mov
and
mov
les
inc
push
cltd
mov
sub
dec
pop
mov
ret
mov
inc
sub
mov
xor
jge
mov
inc
fsts
inc
dec
and
xchg
ret
sbb
xchg
leave
je
aam
xchg
popf
dec
pop
jp
jae
shrb
xchg
fwait
mov
cmpsb
push
and
cmp
mov
jne
mov
sahf
xchg
push
xchg
cltd
xchg
fidivrl
sahf
adc
cld
adc
out
dec
mov
mov
shlb
js
and
adc
mov
cli
dec
xor
mov
cwtl
shlb
xor
inc
sbb
int
mov
mov
in
mov
push
je
lods
test
jae
mov
mov
add
push
roll
xor
test
lret
testl
jge
xor
jo
mov
pushf
adc
outsb
xorb
sarb
add
and
lock
add
xor
lock
and
mov
inc
negl
lret
cmovo
mov
jae
cwtl
add
std
movsb
cmp
inc
pushf
cmpb
xor
jne
mov
jle
sbb
inc
mov
in
ds
mov
dec
leave
inc
lret
mov
std
leave
jno
xorl
xorl
repnz
lahf
dec
sub
ja
and
jb
inc
lcall
stos
mov
pop
and
icebp
js
loope
sub
mov
cs
jnp
cli
in
in
push
fidivrs
je
cmp
or
nop
aam
jb
loop
lret
and
int3
cmpsl
lcall
mov
cmp
jecxz
pushf
pop
cmpsl
aaa
ret
xchg
rcll
cs
pop
mov
adc
neg
push
inc
push
xchg
jbe
and
sbb
mov
fdivr
clc
inc
sub
sti
dec
mov
adc
cmp
and
testb
inc
sub
jg
je
or
icebp
push
mov
jne
inc
jb
lea
rcrb
dec
repnz
mov
sti
insl
in
cmp
xor
cmp
daa
jbe
incb
mov
mov
dec
iret
or
rcll
push
repnz
add
sbb
mov
mull
cmc
sub
and
lods
ret
inc
dec
ror
xor
mov
pop
aam
sbb
inc
jae
jmp
movsb
dec
dec
icebp
out
loop
add
sbb
inc
add
out
mov
lret
jle
stc
mov
les
jge
mov
jnp
cli
cmp
xor
or
and
pop
jne
das
and
iret
cld
int
jae
sub
jno
adc
sub
mov
push
xor
xchg
into
aaa
lahf
pop
sahf
mov
pop
je
dec
xor
repnz
cmpb
testl
fmull
dec
mov
mov
or
jp
js
sub
pop
inc
aad
add
int
xchg
repz
ljmp
jl
testl
enter
aad
mov
mov
mov
jp
icebp
aad
cmp
lss
sub
sbb
dec
lcall
orb
ret
lret
jb
xor
fnstsw
jb
jne
adc
jl
mov
sub
xor
xor
or
in
insb
adc
lret
pop
aad
dec
cmp
lcall
incl
add
aaa
lcall
mov
xlat
adc
xor
aam
mov
cmp
adc
stc
fnstsw
lret
xor
pop
pop
loope
js
imul
add
pop
insb
xor
jae
mov
mov
fucom
jle
xchg
and
std
mov
fdivs
pop
pop
outsb
lcall
popf
sbb
xchg
pushf
clc
imul
pop
fistpl
push
icebp
lcall
and
sbb
call
popf
mov
push
imul
jp
hlt
rol
les
fnstcw
fstpl
xor
jp
mov
add
sbb
dec
push
scas
push
ds
sbb
mov
sbb
sbb
je
sbb
jae
cmpl
sbb
sbb
int
into
call
cmp
pop
mov
lds
cltd
add
out
and
fnstsw
pop
popf
shr
pop
dec
jl
mov
xor
xor
lcall
gs
xchg
jle
sub
and
xor
sbb
sbb
sbb
bound
loope
sar
cmp
jl
test
cmp
jb
js
addr16
int
jbe
clc
mov
adc
loopne
ret
or
xchg
movsb
cltd
jbe
jge
mov
or
xchg
jl
mov
cmpsb
adc
and
adc
jmp
rcrl
dec
cwtl
inc
clc
mov
les
ljmp
in
loopne
fstl
push
push
out
loope
repz
pop
cmp
fwait
sahf
push
mov
jae
repz
jae
dec
jno
in
add
lea
jge
shl
push
dec
cmp
sahf
scas
xchg
faddl
cld
cmpsb
shrl
cmc
cli
js
cld
push
xchg
mov
movsb
fstps
pop
mov
aam
sarb
sub
adc
pop
icebp
sbb
mov
sbb
cltd
fidivl
mov
xor
ds
fimull
xor
sbb
cmp
xor
sbb
fnstenv
mov
adc
int
push
pop
push
jb
xchg
xlat
std
test
xor
std
mov
jne
pop
bound
inc
cli
fsts
ds
xchg
mov
jno
ss
rcrl
sbb
pop
pop
dec
inc
int
adc
sbb
lock
xorb
lret
jns
xchg
pop
pop
cmp
ficompl
cli
fistl
jp
dec
into
pop
and
ja
pusha
mov
hlt
mov
cltd
cmp
ficoml
fldt
popl
clc
jo
pop
mov
dec
mov
sarb
mov
call
jo
push
pushf
mov
andl
addr16
and
pop
adc
add
in
push
mov
stc
jo
pop
jno
push
pop
mov
fdivr
mov
je
and
or
icebp
jge
rclb
pop
sbb
repz
push
js
jno
inc
clc
mov
cld
sbb
push
sub
sar
js
mov
fistl
clc
jecxz
pop
ja
xor
cmpb
xor
adc
xor
sbb
out
mov
cltd
pop
repz
nop
sub
mov
pop
outsl
jae
mov
sbb
ds
xor
xor
fsubrl
les
mov
mov
xchg
cmc
dec
insb
leave
icebp
add
inc
ret
cld
mov
jb
inc
adc
subb
mov
cltd
adc
mov
push
loope
mov
lock
adc
push
xor
idivb
jae
mov
pop
xchg
hlt
sbb
loop
rolb
cld
mov
fcom
adc
sbb
xchg
push
out
push
add
push
pop
push
xchg
mov
dec
mov
pop
in
mov
pop
xor
roll
cmp
and
test
loopne
call
rclb
jmp
repnz
test
sub
icebp
push
addl
orl
sbb
repnz
push
mov
xorl
sub
mov
jmp
testl
or
out
rolb
lcall
rorl
ret
add
sti
push
mulb
rep
fdivl
adc
inc
or
pop
inc
add
repnz
or
loop
repnz
ret
std
dec
movsb
clc
or
push
and
or
mov
inc
enter
bnd
add
or
movsl
fadds
lea
in
test
insb
fidivl
cs
pop
rolb
lahf
xchg
in
or
icebp
les
or
frstor
fs
or
xor
test
cmc
stc
xchg
insl
cli
out
jno
inc
mov
add
mov
imul
jae
call
icebp
outsb
push
leave
sbb
mov
ret
mov
mov
stc
push
into
ljmp
or
push
dec
mov
outsl
sub
and
jg
jle
add
pop
lods
in
mov
cmpsl
cli
ror
or
dec
out
or
sbb
lock
invd
jbe
push
add
mov
adc
xorl
hlt
and
jno
mov
imulb
mov
scas
and
adc
xor
sbb
lock
subb
sbb
repnz
and
cli
and
mov
jecxz
hlt
jl
add
fadds
cmpsb
lea
mul
mov
mov
mov
cmp
sub
sbb
lods
rolb
hlt
aas
inc
cmp
pop
out
pop
sub
push
mov
mov
pop
pop
dec
icebp
mov
call
outsl
cld
ljmp
mov
inc
lock
in
push
push
jmp
repnz
addl
lret
testb
orl
sub
ret
mov
jl
and
enter
test
jp
imul
or
cli
xor
jno
dec
pop
add
stos
and
dec
inc
xlat
inc
lods
arpl
push
insb
and
out
jns
outsb
pop
in
testb
push
prefetch
or
jecxz
das
dec
ret
jno
cs
lea
adc
sub
add
mov
sub
sub
into
int3
out
test
repz
mov
add
lock
mov
xor
or
jbe
sub
jno
push
iret
divb
or
bound
jp
mov
add
and
and
inc
repz
dec
push
mov
sub
inc
lret
movsb
push
repnz
add
mov
orb
lock
test
rep
shl
push
scas
push
xchg
arpl
mov
cs
or
iret
dec
cmp
enter
sbb
scas
repnz
jae
notl
psllq
out
out
icebp
lods
iret
ffree
sti
add
adc
xor
xchg
mov
jle
je
fwait
cmp
or
aad
std
push
jnp
aaa
push
jae
nop
xlat
mov
sub
sbb
push
mul
push
xchg
xor
add
xor
decl
fstpl
mov
jae
ja
daa
or
sub
push
or
mov
mov
xchg
repz
jmp
mov
cmp
cli
sbb
jb
sbb
imul
or
add
mov
fcompl
xor
dec
xchg
sbb
pusha
push
and
add
in
ljmp
or
dec
mov
int3
xchg
sahf
add
add
dec
add
je
lcall
mov
out
outsl
inc
pop
pop
popa
mov
adc
es
pushf
cld
out
and
loopne
divl
sub
nop
adc
sti
repz
sbb
pop
popf
inc
add
xchg
inc
shl
cmc
scas
jecxz
aas
incl
ret
adc
cltd
pusha
pop
pop
and
and
mov
cmc
scas
cmpb
loop
push
xor
push
xchg
xorl
shlb
mov
je
pop
mov
pop
int
mov
and
adc
addb
shll
add
psllq
repz
cmp
dec
lahf
sahf
jle
adc
xchg
repz
inc
mov
addps
jp
xlat
into
mov
mov
repnz
and
lock
push
das
outsl
shrd
inc
mov
lret
inc
sahf
divb
jle
fimuls
adc
ss
cmp
pop
flds
andb
jecxz
addb
push
xor
push
mov
mov
jns
sti
inc
adc
dec
out
or
adc
mov
addb
rcll
call
cli
shll
addr16
mov
cvtps2pi
insb
and
lods
test
test
mov
cmc
adc
divl
adc
xor
mov
decl
inc
pop
cli
std
je
jno
fildl
cmp
and
push
scas
or
cwtl
xchg
push
repz
jge
sti
notl
adc
cmpsb
jb
adc
decl
ja
sbb
push
shll
sbb
mov
stc
push
jno
js
pushl
xchg
cli
pop
jne
or
cmp
notl
sbb
cli
pop
xchg
mov
sar
sub
dec
mov
shlb
mov
aaa
xchg
xchg
repz
leave
xchg
repz
cmp
jmp
xchg
adc
call
xchg
je
xor
not
push
movsb
adc
rol
jg
ljmp
mov
rorl
lock
lock
js
lock
repz
inc
stc
scas
test
repz
mov
cmp
shl
xchg
cmp
addr16
test
xchg
call
enter
cmpsl
lahf
mov
out
incl
xor
sub
and
aas
push
xchg
test
jmp
add
mov
cmp
js
fidivl
push
dec
ljmp
lahf
adc
push
mov
jae
roll
in
call
or
push
or
xchg
pop
mov
aam
jmp
mov
xchg
jp
lret
pusha
ljmp
dec
movsl
adc
push
out
cltd
jae
xor
mov
sub
pop
or
nop
mov
push
add
pop
adc
inc
cmp
inc
cmp
call
dec
or
push
into
or
dec
add
lahf
push
sub
pushf
push
lods
pop
jg
ror
inc
divl
mov
aaa
shr
ret
ja
call
xor
dec
clc
sarb
or
and
scas
xchg
jb
jecxz
test
cmpsb
add
mov
sub
pusha
push
arpl
icebp
pop
and
iret
or
lock
imul
jo
ret
and
add
push
nop
in
call
cwtl
sub
sbb
int3
test
pop
or
xor
xor
je
sbb
jle
mov
je
xor
and
ljmp
shlb
loopne
sub
jg
pop
add
mov
pop
notl
loop
and
outsl
outsb
daa
sbb
mov
lock
sub
into
jecxz
dec
mov
push
sahf
aam
sub
or
sub
and
mov
in
jl
adc
jle
xor
scas
inc
xor
jmp
inc
jns
mov
inc
xchg
movl
sub
jbe
inc
clc
mov
xchg
pusha
loope
repnz
sbb
sbb
nop
add
sbb
aaa
xchg
dec
js
add
push
shlb
std
add
fisttpll
mov
or
dec
pop
add
je
cltd
add
jne
jbe
and
std
sbb
sub
jle
stc
ljmp
sub
and
mov
stc
cmc
push
cmp
inc
lcall
jbe
and
mov
mov
xor
mov
cmp
sub
lock
test
mov
fimuls
dec
sbb
sbb
jp
lock
mov
lds
push
sub
cltd
or
mov
mov
test
pop
push
clc
and
push
cli
jo
imul
imul
xchg
or
pop
jb
lcall
cmc
jne
xchg
shl
sub
jg
cli
or
in
or
clc
push
arpl
xchg
add
cmpsb
adc
sbb
movsl
sbb
lods
arpl
je
int3
mov
mov
jb
jl
repz
lock
imul
icebp
stos
jno
out
add
dec
jb
push
jae
mov
jle
ret
or
aam
jne
test
mov
mov
inc
add
and
jne
jle
std
shll
and
or
push
add
mov
test
adc
xor
push
testl
ljmp
cs
out
lret
jl
cli
lods
pusha
or
pop
pusha
mov
into
or
stc
fisttpll
les
adc
out
mov
das
inc
add
int
fisubrl
pop
xor
dec
and
enter
je
stos
ja
and
dec
movsl
inc
add
and
icebp
mov
divl
pop
lcall
in
jno
lret
test
out
add
cmpsb
dec
insb
push
jg
rcrl
test
mov
jp
pminub
pop
mull
testl
xor
sub
adc
pusha
add
inc
fwait
nop
dec
and
dec
int
mov
int3
cmpsb
or
lock
ljmp
pop
push
adc
sub
stc
xchg
leave
lret
mov
jle
adc
pusha
shrl
or
dec
testl
sbbb
test
cmc
inc
std
xchg
push
or
leave
add
scas
das
sub
lret
and
or
arpl
clc
cmp
lock
inc
nop
stc
js
lcall
mov
cmpsl
lock
and
mov
cld
call
lock
jge
xchg
rorl
ret
xor
andb
sub
adc
sub
imul
pop
or
nop
hlt
mov
inc
scas
xchg
mov
inc
or
sub
sbb
or
jnp
dec
test
pop
xor
xchg
jne
or
xchg
jns
cmpsb
in
xor
push
stc
test
hlt
icebp
loop
jp
mov
add
mul
lcall
jnp
mov
xchg
pushf
sub
clc
faddl
cld
sub
jge
jno
jmp
call
push
mov
hlt
cs
int
or
or
push
push
test
jnp
out
cs
inc
adc
xchg
push
movsb
in
aaa
xchg
push
orl
sub
ja
pop
imul
mov
stc
in
sub
leave
lock
or
bound
jb
mov
lock
loop
into
rcll
push
shlb
fs
mov
test
es
xor
pop
jno
mov
mov
mov
test
sub
hlt
bound
mov
lcall
pusha
fs
lock
out
or
jnp
sbb
or
dec
loopne
inc
push
xor
dec
add
jno
das
lods
inc
icebp
dec
add
je
popa
lock
sub
lods
add
xchg
xor
fs
js
jb
cltd
add
add
mov
or
inc
dec
pushl
loop
test
inc
lods
sar
stc
push
pushf
idivb
jge
and
mov
or
fisttpll
adc
popf
cmp
or
clc
inc
push
mov
test
and
int3
inc
orl
sbbb
or
cld
xor
dec
jl
sti
and
pusha
and
aaa
sbb
shll
cmc
jbe
sbb
or
test
clc
test
jge
add
lea
mov
daa
add
shll
icebp
push
mov
lock
movsb
mov
mov
lock
sarl
pop
dec
add
roll
lock
hlt
je
add
pop
or
add
jno
clc
clc
testl
or
add
jnp
dec
sti
sub
add
std
js
int
adc
jo
das
or
add
stos
les
xor
leave
popa
jo
and
xorl
lock
jp
imul
xchg
decl
hlt
or
stc
enter
xchg
jl
adc
shll
push
mov
xorb
iret
sbb
jge
jo
cmp
stos
loope
pop
dec
inc
push
loopne
orb
or
mov
pushf
inc
sti
mov
jo
cmpsl
sbb
roll
ret
imul
add
add
pop
jo
stos
xchg
sub
jl
sub
cmp
mov
sub
test
stc
xor
f2xm1
cmp
out
sub
inc
je
or
xor
test
xchg
mov
jno
call
adc
je
cli
xor
xorb
mov
mov
sti
cmp
nop
jbe
lahf
jo
adc
aas
lret
jne
mov
inc
mov
cli
ret
cld
sbb
clc
addb
hlt
or
mov
inc
push
test
dec
push
jae
and
sub
add
add
sahf
sub
xor
adc
push
xor
sub
or
xchg
out
lock
pop
cmc
out
push
dec
mov
and
xor
or
jno
test
push
mul
sarb
in
adc
fwait
test
mov
int3
push
lock
sbb
rcll
pushf
or
xor
add
inc
or
inc
push
sbb
clc
gs
lock
je
push
jo
inc
xor
mov
fadds
mov
aam
jge
pop
pushf
orl
fs
lock
cli
std
repz
pop
add
xchg
daa
cwtl
adc
dec
test
test
lret
dec
stc
or
pop
clc
mov
xor
xor
sub
aad
lock
add
and
adc
xor
mov
and
mov
mov
inc
arpl
inc
jno
rcrl
mov
jg
mov
repz
jbe
test
pop
lds
push
sti
jns
cld
push
inc
pushf
mov
mov
cli
pusha
popa
jns
or
fwait
hlt
psubsw
loop
mov
jb
fimull
xor
or
ljmp
clc
dec
in
or
js
out
add
lods
mov
rorl
push
pusha
dec
lret
xchg
repz
mov
rorl
ljmp
or
icebp
lock
repz
hlt
mov
push
scas
and
mov
xor
cld
jo
lea
adc
add
jbe
imul
stc
mov
loop
repnz
cmp
add
cmpl
sbb
add
cmp
rolb
jo
out
jge
cmpsb
cmc
sar
cmp
or
sub
xchg
test
push
mov
xlat
shrb
or
mov
stos
push
add
or
or
push
xchg
call
mov
adc
nop
add
mov
orb
jns
mov
jo
dec
inc
repz
sub
repnz
std
or
or
loope
int
aaa
add
ja
sti
or
lock
xchg
and
inc
or
add
jb
inc
mov
or
or
dec
mov
icebp
sub
add
adc
gs
lock
xor
jnp
push
mov
or
gs
outsb
hlt
add
or
dec
inc
lock
add
js
lock
hlt
mov
or
push
mov
cmp
popf
add
jo
movups
testl
xor
mov
bnd
stc
mov
or
in
ds
orl
in
cmp
push
std
sti
sub
mov
or
sub
dec
pop
add
repnz
in
lock
mulb
and
inc
dec
test
in
lock
lods
add
pop
pop
jg
add
pop
stos
mov
pushf
sub
push
lock
imul
adc
jo
mov
insb
dec
xchg
add
push
enter
and
divl
pop
jns
loope
je
mov
repz
decl
nopl
sbb
int
jns
test
dec
sbb
mov
ja
or
mov
lods
sub
lret
or
outsb
add
pop
in
inc
icebp
add
or
pusha
insb
pop
jno
or
sbb
or
push
clc
jmp
scas
or
ja
lods
xor
popl
inc
add
mov
clc
test
and
stc
add
mov
rol
or
adc
mov
or
aad
adc
test
pop
aam
shll
sub
sub
insl
inc
testl
in
cmp
mull
repnz
add
lock
and
testl
clc
decb
rorb
mov
add
pop
insb
or
repnz
lret
sub
scas
and
cld
or
mov
repnz
mov
std
cmp
clc
icebp
sbb
icebp
pop
loopne
js
or
jg
or
incl
test
mov
les
sub
add
sub
push
and
ret
and
sub
and
lods
mov
dec
addl
jbe
out
or
out
cmp
adc
lods
dec
xor
in
adc
loopne
or
je
ds
mov
xor
or
xor
addb
icebp
je
stc
xor
leave
div
inc
pusha
addb
aad
lock
dec
cli
mov
lea
cld
add
push
adc
sub
add
inc
pop
nop
ljmp
in
cld
in
lret
ja
inc
hlt
or
xor
enter
lock
xlat
pop
or
sub
xchg
mov
jmp
insb
insl
cmp
or
lock
or
add
mov
add
adc
xchg
rcll
divb
sbb
repz
cmp
lock
popf
xor
jmp
xchg
add
movsb
jle
and
and
test
or
push
mov
cmp
es
push
jmp
xor
ljmp
cld
mov
push
sub
dec
stos
dec
call
stos
push
hlt
or
mov
scas
inc
lock
or
aaa
inc
jecxz
inc
mov
push
je
cmp
mull
push
stc
push
add
sbb
clc
fsubs
into
test
jne
icebp
popa
das
mov
add
cmc
idivl
negl
push
inc
jbe
decl
aas
clc
cltd
clc
xor
ja
call
lds
mov
clc
xchg
lret
xor
jne
test
subb
jle
xor
xchg
data16
jno
clc
daa
inc
add
or
add
jns
sbb
negb
lock
xorb
shl
sbb
mov
adc
adc
sbb
repnz
mov
roll
cld
inc
out
pop
push
add
inc
xchg
dec
jle
sti
repnz
add
imul
cmp
or
cs
stc
clc
dec
inc
cld
pop
sbb
jb
add
loop
inc
addb
jb
xchg
xor
mov
adc
scas
lock
or
js
js
or
adc
idivl
lods
ret
ret
iret
xor
or
stos
sub
cmpl
xchg
repz
pop
inc
xchg
xchg
cmc
sub
test
jle
push
cltd
pop
mov
sahf
ss
lock
pop
jg
popl
popa
jno
cmp
out
add
mov
jge
mov
dec
add
jp
jno
arpl
lock
icebp
jbe
cli
push
jb
leave
daa
or
mov
adc
dec
add
into
xchg
dec
or
jbe
hlt
pop
adc
out
in
pusha
add
adcb
repz
call
stos
testb
pop
inc
repz
icebp
icebp
xchg
popa
jne
or
or
jns
xchg
inc
sbb
add
push
stos
movsb
mov
ljmp
into
jnp
enter
xor
or
nop
add
jo
mov
jne
pop
add
decb
xchg
out
clc
mov
mov
or
fidivl
mov
xor
outsb
adc
repz
movsl
clc
iret
std
or
xor
sti
cmp
jne
pop
mov
stos
repnz
icebp
cmp
add
ret
inc
jns
in
jb
add
shlb
push
divl
lock
clc
adc
adc
pop
sti
ja
hlt
pop
adc
jl
addb
ja
add
cmp
mov
mov
cmp
jo
pop
cli
jp
jge
cmpb
dec
hlt
movsb
cmp
sbb
add
pop
std
data16
test
scas
adc
mov
icebp
cmp
das
xor
loop
das
push
lea
sub
inc
mov
jl
test
push
ret
loope
popa
repnz
and
test
xchg
dec
stc
adc
cmpb
jns
notb
sbb
xor
lcall
mov
mov
outsl
addr16
pop
pop
fistl
jle
or
sbb
and
add
stos
clc
leave
sbbb
outsb
lds
lret
clts
jno
stos
lock
add
test
adc
dec
adc
cli
repz
jp
mov
and
loopne
mov
jb
pop
and
mov
mov
xchg
loopne
or
call
push
adc
lods
dec
addb
jne
inc
stc
xor
cmpsl
jnp
scas
dec
inc
mov
addr16
mov
inc
idivl
add
fmuls
mov
repnz
push
icebp
push
lods
jg
lcall
mov
js
stos
add
stc
push
lock
sbb
xchg
or
or
std
test
sarb
ljmp
add
ret
sbb
jge
icebp
pop
adc
push
jl
or
cmp
add
movb
ljmp
inc
icebp
sub
mov
lea
clc
jo
arpl
call
shlb
pop
push
lock
mov
das
ds
dec
test
or
sub
rorl
or
or
sub
mov
out
test
lock
or
jmp
mov
arpl
repz
stc
xor
pop
inc
add
sub
add
mov
test
adcb
mov
leave
inc
hlt
or
and
xchg
aas
test
lock
pop
inc
push
or
cld
push
xchg
andb
jp
repz
sub
sub
pop
daa
ljmp
ret
mov
inc
add
aam
test
adc
in
adc
lods
jo
test
pop
mov
push
add
cli
and
cld
sub
xchg
nop
jns
repz
shl
mov
je
mov
or
mov
mov
pextrw
push
je
pop
or
add
jns
lds
sub
repz
inc
wbinvd
aas
xor
or
push
mov
int
sti
mov
xor
or
jmp
jo
dec
shrl
mov
xchg
jne
enter
hlt
loopne
push
repz
jns
push
xor
add
test
adc
gs
pop
pop
fwait
inc
cmc
roll
cmp
es
add
xor
shrb
daa
test
mov
xchg
pop
add
xor
int
cli
or
jb
pop
stc
ss
movsb
cltd
lcall
push
or
xchg
cmp
xchg
rolb
loopne
pusha
dec
xor
sti
ret
mull
adc
jge
outsl
dec
popf
or
pushf
pop
js
jbe
cmp
dec
push
lahf
orb
cmpsb
cli
pusha
jge
dec
ret
sahf
lock
stc
aas
addb
repnz
mov
nop
xchg
test
mov
data16
mov
add
stc
jns
hlt
cli
pop
je
icebp
and
or
push
test
hlt
jle
add
cmpb
or
and
movsl
outsl
xchg
or
stc
nop
dec
inc
fildll
idiv
jecxz
pop
add
repz
addb
aas
test
lahf
lock
ja
hlt
add
incb
cmc
clc
les
mov
insb
jle
xor
and
dec
repz
sti
jae
cmpb
jbe
icebp
or
push
push
mov
dec
sub
sarl
out
add
inc
cmp
pop
jb
out
out
adc
adc
add
pop
push
idivl
repnz
jl
repz
pushl
add
in
mov
sub
or
xchg
jge
lock
je
push
rcll
mov
js
call
mov
adc
popa
cmc
mov
das
add
in
sti
pop
dec
adc
lss
xorb
mov
inc
stc
adc
fidivrs
mov
jb
fnstenv
xchg
dec
es
cs
inc
inc
cmpb
test
add
test
negb
cmp
mov
xor
adcl
adc
sti
outsb
inc
cmp
cs
inc
psllq
add
jne
lds
pop
popa
fwait
pop
cli
mov
and
nop
add
nop
andb
add
sti
add
lret
jae
test
shlb
mov
xor
add
or
add
mov
rorl
jle
jb
iret
sub
nop
push
sub
in
jnp
jno
test
lock
cli
sbb
jb
sbb
adc
pusha
jge
push
nop
or
sti
test
jle
aaa
cvtpi2ps
adc
mov
jle
mov
mov
lret
mov
pop
adc
dec
and
or
xchg
push
sub
pop
cli
ret
xchg
std
dec
stos
push
sub
or
jle
addr16
xor
adc
jbe
mov
or
mov
in
std
inc
std
hlt
dec
mov
xchg
or
jb
jg
gs
aad
and
lock
push
adc
icebp
or
push
icebp
add
or
fisttps
xor
push
xor
or
icebp
rclb
push
lock
adc
xchg
sub
mov
xor
add
adc
movsb
repz
or
lea
sti
add
and
push
xor
jo
fnstcw
inc
rol
pop
in
lods
lock
pop
mov
rcl
std
mov
push
leave
pop
into
sub
xchg
jge
jmp
inc
push
pop
jno
repnz
mov
js
lock
sbb
jno
push
cmp
sbb
repnz
pop
cld
fdivp
shl
push
and
xor
ret
pop
gs
mov
stc
lahf
push
jge
sti
inc
sbb
sti
xor
mov
insl
shll
mov
lcall
pop
sub
push
dec
das
pop
mov
mov
cmpsb
lods
aam
aad
lock
xor
mov
jge
push
or
scas
imul
test
cmp
push
mov
adc
cmp
xor
or
mov
sbb
xchg
or
nop
push
out
movsb
lds
inc
mov
dec
cmp
icebp
aas
jo
xor
push
jmp
hlt
jae
shlb
xor
shll
push
je
popf
pop
lock
push
mov
jne
pushf
jp
mov
rcrb
inc
mov
pop
addb
push
jo
hlt
lods
fbstp
or
movsl
jl
pushf
roll
loopne
rcrb
sbb
mov
enter
fs
popf
inc
mov
xor
mov
add
xor
cmp
and
add
sbb
jno
cwtl
mov
jbe
jmp
pop
xor
pop
fs
adc
cmp
push
sbb
adc
testl
dec
cmp
js
pusha
insb
inc
push
cwtl
cmp
xchg
xor
or
cli
add
cmp
push
xchg
adc
test
jp
ficomps
mov
and
dec
adc
shrl
pusha
push
xor
rcrb
add
pusha
fdivr
out
jno
adc
xor
and
jno
jb
inc
push
rclb
popf
in
int3
popf
fisttpll
xchg
mov
adc
jo
mov
mov
pop
jecxz
out
neg
divb
and
aam
adc
mov
das
dec
lahf
pop
std
pushf
dec
daa
adc
mov
mov
mov
arpl
repz
test
insb
pop
int3
inc
sbb
in
lods
stc
pusha
fs
or
cmp
cld
add
mov
outsb
arpl
aas
jg
leave
xor
pop
push
repnz
pop
xor
sti
inc
sarl
clc
push
sbb
mov
jnp
fdivl
jp
lret
test
pop
xchg
xor
or
out
pop
xchg
xchg
or
jb
repz
push
cmp
in
pushl
sbb
dec
sbb
adc
cmp
jp
xor
fidivs
sarb
sar
js
lea
and
xchg
hlt
sbb
bnd
jl
inc
push
inc
hlt
mov
inc
pusha
arpl
xor
cmp
cmpsb
or
cltd
jns
cmp
mov
js
pop
es
sub
pop
lock
mov
adc
xchg
imul
shll
icebp
fiaddl
xor
mov
js
mov
ja
mov
adc
jb
adc
test
mov
and
cmc
jns
clc
pop
push
pop
mov
inc
xorl
mov
repnz
push
clc
dec
add
inc
push
xor
adc
add
cmp
push
cld
jge
repnz
xchg
push
sarl
push
in
or
mov
out
ss
jbe
cmp
jb
divl
sbb
repz
dec
inc
stos
adc
sub
inc
jno
popf
or
shlb
es
and
adc
clc
xor
push
mov
frstor
add
and
cmc
inc
jae
jae
mov
xor
daa
mov
cmpsl
cmp
dec
idivl
sbb
hlt
mov
dec
cmp
jle
sarb
cmp
dec
jae
aas
ja
add
xor
js
mov
daa
nop
xchg
lcall
jmp
push
or
mov
cwtl
mov
adc
shlb
xchg
xchg
push
pop
fdivs
out
jmp
xor
inc
sti
cmp
lcall
ficomps
fldcw
mov
jb
imul
out
jl
ds
xchg
adc
mov
push
test
clc
subl
pop
loope
inc
stc
or
outsl
adc
mov
jae
pusha
sbb
add
cmp
sub
aad
push
addr16
mov
clc
repz
shll
adc
xor
jp
jbe
jae
xor
mov
add
rorl
jae
iret
daa
or
insb
inc
ja
pushf
lea
jnp
xchg
jnp
cmp
sarl
jp
adc
cmp
repz
fldenv
frstor
ds
adc
inc
pushf
sub
sahf
xchg
notb
and
sub
mov
pushf
push
mov
xchg
adc
fiadds
and
pop
adcb
sbb
pop
iret
adcb
pop
jb
sbb
sbb
mov
sarb
or
test
sbb
mov
dec
rorl
xor
inc
mov
cld
loop
rclb
test
negb
or
and
test
clc
int3
sbb
xor
add
sbb
das
jb
pop
pushf
pop
movsl
mov
repnz
icebp
lahf
sbb
je
xchg
add
add
mov
mov
mov
cmp
aam
push
sahf
out
cmp
push
mov
repnz
aaa
xor
insb
and
jp
mov
int
add
js
andb
or
inc
push
adc
sbb
mov
cwtl
mov
shlb
adc
pushf
mov
xchg
pop
repnz
or
inc
adc
ds
or
mov
push
hlt
fsub
and
push
out
pop
or
shlb
pop
fstpt
mov
jae
xchg
jae
jbe
das
push
ja
outsl
ret
cmp
cmpsb
adc
fmul
lock
xorb
xor
sbb
into
jg
mov
and
add
fcompl
incl
test
insl
loop
mov
adc
push
push
pminub
cmp
push
push
je
jo
fbstp
ror
jno
sbb
and
jmp
pushf
subl
call
dec
ss
mov
ds
lcall
add
lods
mov
pop
fisttpll
test
xlat
dec
sub
sti
mov
cmp
notl
int3
sub
outsl
in
out
mov
xchg
in
dec
jg
jnp
insl
add
scas
and
mov
cmc
nop
and
call
jnp
push
jbe
and
jmp
lock
dec
mov
ljmp
sbb
mov
xor
stc
jle
adc
and
shll
jecxz
mov
sbb
call
js
jb
decb
incl
mov
and
in
and
fcoms
das
push
rcll
inc
aam
jne
or
insl
loope
ja
mov
mov
testl
lock
or
xor
lcall
add
test
or
je
out
and
mov
addr16
aas
jbe
imul
xor
inc
scas
fnstsw
cs
ficoms
pop
test
cmp
dec
mov
sti
scas
add
sbb
test
xlat
test
jnp
insl
dec
mov
push
gs
shrb
fsubp
jmp
arpl
shll
mov
pop
adc
pop
addr16
cmp
aas
push
mov
add
ljmp
dec
adcl
sbb
sarb
jmp
add
data16
fcoml
std
rcll
insb
ds
mov
cmp
insl
push
imul
jo
add
mov
sti
inc
or
adc
pop
adc
subl
or
add
push
mov
push
xor
pusha
xchg
cmpb
or
add
sbb
add
lods
jp
mov
jl
pop
inc
adc
xor
add
sahf
pop
or
or
or
jnp
jo
xor
xor
mov
notb
xchg
inc
mov
incl
jb
sbb
xchg
cwtl
ret
pop
sub
icebp
xor
cli
lea
pushl
data16
jmp
push
adc
incl
jmp
mov
cmc
arpl
pop
fwait
and
adc
lock
sbb
fidivs
rolb
add
incl
loope
call
inc
aam
pushl
imul
sbb
xchg
data16
and
enter
test
pop
lock
repz
out
mov
pusha
sahf
mov
jae
mov
or
jbe
dec
rclb
lds
and
out
jp
pop
mov
xor
push
lds
mov
or
add
fwait
push
aad
in
and
divl
pop
ljmp
dec
clc
sbb
int
fs
decl
icebp
mull
fidivs
call
and
dec
cli
incl
jns
jmp
add
std
pusha
orb
inc
in
scas
mov
inc
adc
shlb
add
mov
sbb
dec
xchg
cmp
aaa
jbe
sarb
imul
xor
jns
stc
cltd
push
iret
repz
push
idivb
mov
push
out
pop
cmpsl
adc
add
shl
negb
test
or
faddp
insl
push
xor
outsl
mov
cmc
adc
or
dec
cmpsl
jo,pn
nop
ds
dec
mov
std
inc
gs
inc
lods
fsubl
adc
jo
scas
xor
rorb
xchg
call
ss
aaa
rolb
inc
subl
stos
lods
hlt
push
decl
movsl
lcall
pop
loope
jb
jnp
icebp
notl
xchg
insl
mov
lcall
rcr
xor
jl
add
jb
int3
repz
sti
xchg
or
aam
or
fwait
lcall
pusha
mov
jae
lock
mov
loopne
decl
push
inc
cmp
xlat
mov
push
popa
ss
lock
arpl
lcall
mov
neg
mov
add
adc
inc
dec
gs
mov
stos
sbb
inc
jmp
xlat
sti
gs
or
dec
lcall
push
nop
jle
movsb
ficompl
in
pushl
cmpsl
pop
js
mov
aas
popa
sar
mov
enter
add
pop
jno
cs
mov
and
xor
push
popf
adc
mov
ljmp
cmp
inc
in
imul
jne
iret
xchg
lods
testl
xchg
mov
push
mov
lcall
rorb
or
add
sahf
repz
jo
pop
xor
or
imull
lds
jge
out
jne
scas
fisttps
adc
add
and
inc
out
sti
push
incb
mov
mov
mov
cmp
pushl
inc
stos
movsl
or
lahf
call
lods
push
mov
out
xchg
lcall
dec
mov
push
dec
or
lcall
movb
and
xchg
lods
inc
loop
outsl
sbb
repnz
mov
aaa
fsts
movsl
loopne
sub
xor
pushl
inc
adc
add
out
lret
pop
and
data16
std
sub
xor
repz
push
adc
sbb
out
xlat
insb
das
pop
movsl
or
mov
clc
mov
sbb
inc
lock
jmp
mov
mov
pop
outsb
jae
lods
inc
add
fwait
pop
fdivl
pop
or
sti
mov
jge
push
lcall
push
pop
fwait
push
popf
hlt
fs
sti
es
push
jmp
pop
or
sti
or
fdivrp
mov
xchg
xor
out
lock
dec
std
cmp
add
mov
adc
jo
cli
cmp
lcall
sub
mov
pop
dec
lods
scas
cmc
pushf
mov
repnz
shlb
cmpsb
ficoml
loop
mov
mov
nop
sbb
cltd
cwtl
mov
xor
enter
lock
mov
push
or
aaa
mov
push
inc
popa
push
mov
sti
sahf
push
inc
jg
call
mov
pop
clc
lahf
ret
sahf
lcall
int
in
shl
pop
xor
xor
movsl
inc
inc
lcall
sbb
outsb
fstpt
mov
and
mov
pop
rclb
pusha
int
xor
stos
icebp
std
pop
mov
inc
sub
add
jmp
push
add
xor
mov
push
fidivl
fnsave
dec
push
stc
xor
add
mov
add
cltd
je
jnp
jl
pop
xchg
mov
sbb
incl
loope
inc
mov
pop
ret
nop
dec
jge
push
lcall
int
dec
add
aaa
gs
push
jb
dec
movsl
setae
cld
cmp
icebp
add
pop
nop
fcoms
jl
movsl
or
outsb
shrl
pop
dec
decl
push
cs
fsubl
lcall
pop
ret
outsl
insl
push
xchg
or
sub
add
xchg
adc
fcom
fucom
mov
daa
mov
mov
ljmp
les
shr
sbb
cmp
xor
addl
push
sar
xchg
mov
sti
mov
inc
mulb
mov
sahf
sar
inc
xor
xor
ficomps
inc
iret
ss
stos
jmp
in
add
call
shll
jae
cltd
test
inc
xchg
fstpt
sarb
pushl
sbbl
cmp
andb
mov
adc
leave
and
mov
ljmp
add
push
in
add
fadd
jp
ja
jecxz
sub
loope
or
js
add
nop
int3
aas
adc
rorb
add
mov
mov
int3
clc
cmc
xchg
xlat
into
sti
dec
decl
push
mov
add
inc
lcall
mov
inc
enter
cli
daa
xchg
cmc
lea
or
lret
jne
lcall
jp
add
int
xor
shll
add
es
sub
ja
inc
movsl
adc
lret
fucom
sti
out
out
or
inc
daa
or
ja
jmp
cmp
and
jne
jl
lods
cmpsl
mov
inc
icebp
dec
inc
xor
push
jae
add
call
jle
dec
addl
shrl
shll
xor
fsts
jle
nop
mov
push
lock
sub
mov
cld
ds
shlb
mov
push
fcoml
jae
out
add
push
jbe
cmp
push
scas
shlb
imull
pop
or
in
push
rolb
pop
and
push
sub
scas
jge
outsl
mov
lods
inc
lds
in
push
jmp
call
dec
jb
mov
mov
fdivs
add
inc
in
adc
notl
daa
jmp
call
dec
inc
mov
adc
lds
inc
inc
add
xor
xchg
daa
mov
mov
and
test
cmp
xlat
adc
jmp
push
mov
or
xchg
sar
divb
std
pop
inc
dec
or
add
sarb
jnp
sbb
cmp
cmpsb
fists
mov
call
jbe
repz
mov
push
lock
push
push
shlb
adc
xchg
fisttpll
push
push
pop
or
mov
xchg
stos
sahf
add
mov
loop
fcompp
pop
add
xor
pop
lds
push
mov
decl
add
int3
xchg
or
int
lret
add
add
push
cld
lea
jle
ret
test
pusha
ds
aad
push
loope
lcall
jbe
call
pop
or
rol
and
mov
dec
into
ljmp
lret
sbb
jmp
jp
jmp
mov
sub
imul
mov
pushf
and
lret
mov
xchg
sbb
jne
lds
shlb
mov
add
lods
cmc
jns
cmpsb
aaa
incl
mov
cmp
xchg
sbb
test
sahf
xchg
inc
aam
xchg
in
rolb
sbb
decl
pop
fs
pop
test
xchg
jle
push
push
mov
pushl
mov
ds
xchg
ja
pusha
insl
cmp
dec
out
in
inc
push
xor
enter
push
adc
daa
shlb
inc
mov
sbb
dec
adc
xorb
lods
and
sub
mov
incl
mov
aaa
loop
jmp
into
cmp
adcb
enter
out
decl
insb
test
xor
push
push
subb
les
or
out
lods
int3
add
in
stos
mov
ret
enter
xchg
gs
cmpsb
push
mov
int
lock
andps
pushl
rcrb
jns
xlat
pop
dec
jge
rcrl
jl
repz
mov
test
paddsb
jle
sbb
mov
adc
inc
jo
sbb
in
ljmp
xchg
gs
jp
xchg
in
mov
fstl
cmp
mov
or
mov
ret
mov
pop
xorl
fimuls
push
mov
test
dec
shlb
add
jo
mov
xor
jbe
mov
sarl
loopne
cmp
scas
mov
dec
es
popf
dec
jne
call
push
fucom
inc
mov
cwtl
pop
xchg
jo
mov
dec
or
test
dec
pop
xchg
pushf
pop
adc
hlt
sarl
out
dec
mov
xchg
sub
dec
lcall
gs
mov
les
sbb
cmpsb
mov
lods
divb
jmp
xchg
adc
daa
decl
out
cmp
mov
leave
decl
lahf
cmc
js
mov
jl
pop
imul
cld
cs
hlt
call
jmp
es
insb
adc
je
xchg
inc
fs
dec
mov
idivb
mov
scas
fwait
mov
xorb
push
decl
ret
pop
pushf
daa
aam
jmp
subb
cmpsb
outsl
pushl
fistl
add
push
jg
cltd
sub
or
lock
inc
inc
add
test
pop
pop
xor
mov
ds
ror
dec
push
test
adc
shl
scas
rcrl
jns
mov
lods
sbb
fcoml
clc
xchg
xchg
cmp
cmpsb
pop
js
sub
xchg
and
inc
hlt
dec
decl
lds
lea
jle
cmp
mov
dec
aas
mov
push
in
in
pop
jae
pushf
scas
in
aaa
add
pop
mov
pop
loop
push
popa
and
pushf
inc
loopne
aaa
negl
insl
sti
sub
xor
xchg
fiaddl
jo
ret
mov
mov
pop
mov
lock
shlb
call
mov
mov
js
outsl
jbe
lds
icebp
jne
add
push
or
notrack
xor
mov
or
cmp
fidivrl
xlat
mov
sbb
or
in
push
sbb
jo
sahf
jbe
inc
or
adc
xchg
xor
sub
mov
pop
lcall
les
and
fnstsw
decl
xor
notl
rclb
and
mov
pushf
iret
xor
ljmp
sbb
mov
lcall
mov
jmp
prefetch
adc
cmc
sbb
mov
test
xor
clc
adc
or
push
xor
mov
out
sti
and
test
adc
add
add
adc
push
add
dec
jge
flds
add
std
test
pop
xchg
dec
ret
cld
fnstsw
mov
gs
jns
adc
jp
test
ret
sbb
out
adc
sbb
jbe
xor
or
add
dec
dec
cld
cmp
mov
mov
loope
inc
xor
mov
sbb
pusha
jge
mov
xor
xor
mov
or
cmc
orl
jmp
pop
movsb
xchg
std
push
inc
xor
ret
scas
inc
fimuls
aam
mov
adc
repz
or
mov
push
xor
insb
addl
dec
out
push
push
sub
rclb
add
adc
push
int
das
mov
push
sub
jo
jl
enter
lcall
cli
in
add
xor
stc
test
push
mov
daa
and
jle
inc
out
sarb
fbstp
inc
cwtl
test
and
mov
dec
int3
cmp
sbb
push
in
mov
lea
fmulp
push
mov
dec
cmp
add
vpsrlw
movsb
jle
or
mov
data16
nop
pop
add
push
jmp
loopne
andl
sub
mov
decl
test
aas
scas
pushl
push
lahf
adc
pop
mov
lret
int3
jmp
lret
mov
cmpb
sbb
add
mov
mov
adc
sarl
xor
pop
mov
out
rorl
jnp
in
adc
mov
stos
adc
js
xchg
shlb
imull
sbb
cmp
decl
dec
lret
jmp
sahf
ficoml
stos
push
lods
jle
pushl
in
dec
testb
add
arpl
aaa
dec
test
cmc
ja
or
cltd
addr16
mov
push
cwtl
push
jbe
imul
insl
or
into
lea
mov
inc
jl
add
add
pop
pop
ss
aas
push
and
repz
shll
jecxz
jae
adc
inc
movsl
xchg
cmp
cmp
mov
inc
lret
pop
insb
add
lret
adc
popf
xchg
test
sti
repnz
mov
fwait
or
idivl
push
cmovp
push
push
cmp
jge
or
mov
pop
arpl
or
inc
adc
fwait
out
xsha1
cmpsb
dec
or
sub
lea
cmp
sbb
lahf
scas
lcall
inc
inc
enter
rorb
aad
xchg
pop
add
xchg
lahf
ljmp
jmp
gs
lcall
jmp
sbb
mov
outsl
sub
jmp
lahf
xchg
gs
pop
test
jmp
fwait
aas
fnstenv
inc
outsb
arpl
mov
in
inc
incb
and
in
xchg
jmp
outsl
pand
mov
mov
addr16
popf
push
in
jle
sbb
xchg
mov
arpl
ljmp
dec
jbe
mov
incl
into
xchg
jecxz
cli
enter
adc
lret
push
dec
adc
scas
mov
add
or
pop
call
push
out
rorb
insl
rcrb
icebp
out
mov
add
sub
insl
int3
push
push
dec
std
sbbb
mov
add
inc
shl
xor
fldt
dec
lds
dec
or
popf
pop
imul
lock
incl
arpl
push
ss
popf
inc
outsb
mov
nop
mov
jno
sub
insb
mov
lret
or
xchg
inc
pop
rcll
shll
and
cld
rolb
fsubs
movsb
add
lods
std
fs
popa
pop
out
dec
das
jmp
sbb
dec
push
push
mov
es
cltd
jae
in
jecxz
sar
incl
add
add
cmp
lret
mov
push
add
mov
xchg
cmpl
outsb
jne
push
add
enter
insl
iret
and
pop
mov
lock
inc
shrl
adc
or
adc
push
fwait
iret
jecxz
pop
imul
out
sarb
xchg
pop
imul
roll
insl
int
popa
lret
sarb
fdivp
jg
inc
cmp
dec
or
testb
hlt
pusha
test
cmp
jnp
cli
sub
call
pusha
jno
cmpsb
insl
dec
and
cmpsl
sahf
adc
jbe
and
sub
mov
aas
and
cmp
gs
and
movsl
xchg
lods
lea
lahf
ficomps
out
push
xchg
dec
sarb
adc
push
mov
mov
xchg
rorl
jp
xor
testl
out
mov
sti
push
add
sub
add
and
mov
push
mov
mov
add
jl
xchg
repnz
add
aas
mov
sarl
mov
iret
in
mov
dec
cmpl
mov
rolb
jno
js
scas
push
jmp
mov
mov
ljmp
jmp
and
dec
out
imul
lods
out
sub
repnz
stc
xchg
shlb
xlat
xor
add
xor
push
into
add
aam
push
adc
fstpt
test
jl
testl
and
push
mov
pushl
mov
xor
hlt
lcall
cmp
stc
mov
cmp
lret
mov
xor
cmp
or
mov
aam
mov
imul
int3
jbe
mov
cld
adc
das
divl
rcr
mov
jns
ja
mov
pop
rcll
imul
mov
cmp
xchg
call
cmpsl
pop
rorl
lods
xor
adc
dec
inc
jmp
add
decl
arpl
stos
xchg
int3
xchg
push
push
mov
jae
movsl
mov
fisttpl
shll
imul
scas
xor
js
imull
je
inc
cltd
mov
xor
pop
nop
jecxz
dec
mov
xorb
mov
or
or
test
mov
lret
add
sbb
xchg
shl
data16
les
push
push
cmp
jl,pn
lret
lcall
cwtl
cmpsl
fs
imul
dec
or
mov
adc
test
jnp,pn
jns
jns
stos
push
push
icebp
and
out
or
inc
out
or
inc
mov
and
jae
jecxz
stos
sti
mull
sbb
cs
shll
inc
xchg
test
add
or
pushf
cwtl
or
mov
mov
push
decl
mov
in
add
cltd
inc
xchg
out
dec
push
pop
jbe
mov
xchg
dec
jns
test
aas
rclb
jb
inc
aaa
repnz
loop
cli
mov
xor
or
lret
in
or
and
adc
aaa
mov
sbb
mov
scas
xor
cmp
xor
shll
sub
push
or
popa
sbb
mov
xlat
int3
stos
shll
jnp
mov
cmp
mov
jg
mov
lea
enter
rcl
adc
xor
decl
mov
or
adc
aas
adc
popf
inc
dec
dec
or
xor
pop
dec
outsl
in
lahf
lods
pop
adc
daa
aad
orb
push
icebp
lea
xchg
adc
mov
loope
xor
mov
pop
lods
and
inc
pushl
out
push
pop
in
mov
jo
add
fsts
icebp
insl
sti
xchg
jmp
ds
mov
faddl
fdivrs
flds
call
movsb
int
decl
iret
sbb
add
jno
mov
rclb
mov
mov
mov
jns
vmread
call
or
sbbb
jb
mov
incl
icebp
mov
nop
dec
hlt
push
out
cmpsl
add
lock
sbb
shrl
repz
test
pop
fistl
lock
sbb
rcrl
movsb
pop
jl
fadds
sbb
dec
add
insb
adc
jo
pop
mov
in
movsb
mov
rorb
push
add
or
test
seto
push
cmc
or
lock
sbb
call
mull
mov
test
mov
add
jmp
fnstenv
jg
iret
add
into
dec
sub
call
outsl
fidivrl
dec
inc
and
inc
cmc
add
roll
pandn
pop
or
or
aam
incl
cli
dec
jmp
pop
push
mov
mov
xchg
or
leave
xlat
decl
mov
lea
je
jae
rorb
push
push
mov
add
push
adc
ds
or
ljmp
fidivrl
std
mov
je
push
and
lcall
pop
jae
adc
bound
push
nop
out
xchg
fidivrl
dec
adc
fsubs
loopne
loopne
call
sahf
call
fwait
test
rorl
pop
ljmp
sbb
add
aad
pop
cmp
dec
dec
not
out
int
push
lahf
sarl
in
call
jmp
jmp
scas
sbb
imul
sub
sub
xchg
dec
ds
jle
mov
pop
jae
jecxz,pn
xchg
add
and
loop
in
arpl
push
out
stc
dec
mov
adc
dec
out
pusha
push
sbb
or
aad
inc
fisttpl
loope
dec
out
mov
incl
fnsave
sub
iret
cmp
ret
lods
in
cmc
dec
bound
fldl
pop
jmp
push
add
xor
mov
data16
push
insb
sbb
push
xchg
outsb
push
and
jecxz
cwtl
push
pop
mov
pop
dec
jmp
stos
push
pop
ja
mov
mov
aaa
pop
cli
jle
fcoms
adc
xlat
push
xlat
adc
in
xlat
xchg
adc
xchg
fcmovne
xor
or
jg
mov
rcll
pop
in
add
sub
fists
xchg
pop
loopne
das
or
add
mov
and
arpl
leave
add
sub
mov
rcll
fsubr
jmp
int3
pop
rolb
fldln2
add
ja
fisttps
mov
pushf
add
nop
call
sti
js
and
mov
dec
lcall
icebp
sub
xor
cmp
aas
repnz
adc
push
sub
jae
dec
mov
dec
call
dec
push
enter
push
cmp
or
das
sbbl
add
jns
lret
jmp
leave
jg
or
pop
xor
rcl
pop
jmp
and
nop
inc
outsl
sub
cmp
or
incl
rcr
lcall
gs
int3
stc
adc
lahf
scas
mov
enter
push
sti
mov
add
pop
push
std
call
rcll
aad
lds
in
leave
pop
scas
sub
daa
fisttps
out
or
std
rcll
push
or
cmp
mov
fisttps
out
mov
add
not
shll
mov
aad
jo
mov
imul
std
add
adc
push
cs
fwait
or
jmp
cltd
dec
jmp
movsl
movsb
lcall
cwtl
sub
pushl
xchg
imul
in
daa
movsb
ds
jmp
jnp
fcos
fsubl
jl
jle
cmp
lcall
pop
inc
out
ficoml
aad
roll
pop
xchg
push
imul
clc
mov
mov
or
decl
in
pop
xchg
iret
dec
jmp
inc
and
outsl
pushf
fwait
incl
adc
dec
push
mov
cmp
pop
or
fisttpll
sbb
jp
stos
sub
mov
inc
or
or
shrb
movsb
int3
out
or
hlt
js
or
dec
arpl
inc
sub
mov
cmc
insb
test
ret
push
fidivrs
xchg
dec
sub
pop
mov
ljmp
inc
movsb
push
pop
add
jmp
dec
lock
inc
inc
dec
fstps
pop
into
lea
in
push
push
fsubr
in
mov
std
jae
pop
inc
pop
mov
or
idivl
mov
shl
mov
ss
xor
mov
mov
aad
repnz
mov
mov
fildll
loopne
add
adc
test
insb
add
rcrb
loope
out
fs
pop
loopne
xchg
fsubs
adc
icebp
push
nop
xchg
sti
pop
cmp
mov
cwtl
fs
dec
cvttps2pi
cmpl
decl
jo
sbb
adc
xor
sti
push
add
aaa
lock
cmp
push
pushl
enter
push
jle
inc
inc
dec
ja
sub
mov
popf
sbb
xchg
or
loope
mov
ret
cld
cli
or
gs
neg
push
stc
aam
shrb
and
and
cltd
pushl
neg
jp
pop
mov
xchg
or
jae
lahf
sub
mov
and
mulb
cmp
std
sti
aas
pop
mov
adc
cli
or
push
icebp
rcr
incl
repz
adc
and
hlt
rorl
push
das
xor
and
sti
add
xchg
clc
lods
stos
inc
add
iret
add
flds
lds
arpl
jns
loope
imul
xor
add
inc
xchg
push
jb
fs
cmp
hlt
int
rcll
jmp
adc
dec
inc
jmp
cmp
hlt
jns
mov
mov
loope
push
add
outsb
or
call
add
dec
call
outsl
jp
inc
fs
rcl
int
adc
mov
push
outsl
xor
mull
xor
divl
xchg
mov
sbb
in
je
mov
jo
mov
add
jb
int3
in
xor
stos
sub
lea
cmpsl
jle
sub
or
mov
mov
loope
cwtl
outsl
sub
repz
cwtl
mov
xlat
pop
roll
cmp
stos
xorb
push
add
call
xor
mov
shl
push
dec
push
or
aas
loop
sti
push
jne
out
fdivr
inc
in
sub
bnd
add
jle
data16
mov
ds
fdivr
push
add
lds
or
incl
sbbb
mov
jmp
sbb
push
hlt
pop
rcrl
jo
inc
icebp
sahf
lcall
sbb
or
sub
push
insl
adc
adc
adc
mov
ss
push
cmc
lret
js
xor
adc
ja
or
jle
jbe
cli
push
and
jmp
adc
mov
ret
dec
sub
mov
lods
fwait
mov
loope
pop
or
sub
push
negl
pushl
lds
movsl
add
cld
xor
pop
or
push
add
add
mov
dec
aam
sub
movsl
adc
inc
lcall
test
push
dec
jae
xchg
ficompl
sub
adc
pop
xor
cmc
aas
sub
jno
bnd
jae
rolb
lds
leave
es
ja
repz
adc
pop
push
xor
adc
les
jns
add
push
xorb
or
mov
fisttpll
nop
push
std
mov
hlt
adc
push
dec
xor
jecxz
jns
add
subl
mov
add
or
dec
push
fmuls
call
addr16
adc
roll
and
sbb
jb
call
lods
jae
dec
cmp
imul
rcrb
or
or
lock
sti
jge
sbb
xchg
or
add
fidivl
and
add
movsb
bound
inc
mov
sbb
and
fwait
shll
pop
add
out
call
mov
lock
push
cmp
sub
or
push
cmp
es
mov
icebp
out
insb
mov
mov
mov
jae
imulb
xchg
pushl
xor
enter
fists
lret
pop
int
xor
loop
add
xchg
or
mov
mov
jle
decl
xchg
iret
push
push
lcall
mov
stc
aaa
enter
adc
mov
ror
jne
rcll
xor
fwait
test
test
dec
sahf
mov
ja
popa
xchg
js
out
xor
aas
and
pushf
je
enter
fadd
xchg
jg
dec
mov
push
lret
loopne
adc
xor
jle
stos
inc
lods
pusha
xlat
lods
ljmp
out
adc
add
sbb
push
inc
xchg
xchg
ja
lea
pop
cwtl
repz
add
nop
push
ret
fs
push
inc
lods
sbb
or
js
adc
movsl
nop
paddd
push
div
repz
pop
lcall
aaa
xor
andb
out
shll
pop
pop
mov
call
ss
sub
push
xchg
notl
decl
lcall
jb
xor
fwait
adc
lret
ja
out
stos
jo
cmp
dec
nop
jp
jmp
dec
ror
notl
inc
incl
dec
fists
xchg
cld
cmp
mov
nop
add
mov
lahf
fsubrs
xchg
or
jl
or
add
push
mov
cmp
ljmp
add
fdivs
sbb
addr16
aad
sub
mov
aas
and
aam
add
andb
je
dec
pop
mov
xor
dec
scas
add
fcoms
push
sbb
add
push
decl
adc
stos
lock
clc
mov
subl
push
insl
adc
or
insb
jo
incl
and
mov
dec
mov
xor
and
nop
xchg
mov
testl
cmc
push
sub
push
cmp
rorl
mov
push
movzwl
add
dec
clc
dec
pop
fiadds
xchg
xlat
mov
lcall
xor
push
jne
aad
xchg
das
in
nop
mov
addl
call
pop
ljmp
cld
in
sti
xor
out
cvtdq2ps
add
and
jnp
mov
sahf
pop
cs
aas
jo
jns
testb
xor
and
mov
add
decl
cmp
push
shll
rcrb
adc
mov
aaa
es
xor
mov
mov
data16
nop
sahf
sbb
push
jb
push
daa
adc
cmc
movlhps
add
adc
pushl
std
xchg
icebp
xchg
sub
push
js
mov
pop
cmc
pop
es
jae
adc
or
mov
pushl
lret
out
cmp
idivl
std
push
test
rclb
inc
popa
adc
mov
dec
inc
insl
mov
and
leave
add
into
xchg
ret
mov
or
lock
std
pop
xchg
xchg
cmp
add
sti
fidivrs
mov
sar
hlt
pusha
daa
stos
push
pushf
in
adc
nop
xor
aam
loopne
jmp
push
xor
data16
jnp,pn
cmp
add
jo
mov
outsl
or
scas
imul
and
mov
jno
jecxz
xchg
addr16
popf
pop
lods
dec
pop
ja
lret
lcall
fisttps
dec
out
push
inc
inc
shrl
pop
out
or
into
add
add
xlat
shll
mov
push
push
sub
cltd
push
xchg
dec
andb
sahf
sub
insb
push
or
jae
aam
bound
es
jp
pop
sbb
pop
cld
fbstp
mov
negb
movsb
fwait
ljmp
push
nop
add
mov
adc
roll
add
jae
cmc
jno
daa
push
add
in
cli
nop
aas
mov
icebp
or
adc
js
adc
lret
push
imul
or
aas
mov
incl
and
sti
or
pop
inc
or
jg
out
adc
pop
mov
fadd
lcall
mov
nop
mov
or
pusha
fbstp
cwtl
and
mov
push
push
lcall
jo
or
and
aas
add
andl
daa
popa
adc
mov
xor
pushf
scas
and
mov
pop
mov
loope
incl
ret
std
push
push
mov
pop
mov
xchg
or
pop
xor
xchg
mov
adc
push
or
push
popa
or
pop
dec
add
push
enter
jl
cmpsb
popf
add
push
test
pop
push
xchg
jo
add
aaa
arpl
stc
pop
dec
fists
mov
mov
test
sub
fsub
push
add
int3
inc
cmp
fisttpl
push
fnstenv
add
mov
fsubs
add
fs
ret
pop
pop
push
inc
sbb
in
mov
xchg
mov
inc
push
xchg
pop
dec
outsb
or
fchs
mov
scas
jmp
or
jns
dec
in
int3
jge
aad
inc
add
bound
dec
or
sbb
adc
enter
pop
iret
loopne
ja
add
notl
mov
mov
dec
mov
rolb
push
enter
pop
rcr
jl
sub
jnp
pop
xor
sub
enter
int
aam
movsl
rcr
out
cmp
fidivrl
cmp
out
into
in
or
test
jbe,pt
ja
in
scas
inc
add
jmp
mov
jmp
frstor
aam
lods
push
dec
jmp
mov
test
dec
call
pop
adc
int
xchg
sbb
ljmp
movsb
aam
add
mov
pop
enter
insl
jp
push
mov
out
dec
dec
push
push
push
or
xor
jo
sbb
test
scas
dec
das
sub
rorl
rcr
xor
or
mov
dec
inc
mov
xchg
xor
xchg
add
cmp
ja
push
int3
pop
inc
popa
call
int
xchg
addb
jns
dec
pushl
push
sahf
out
sbb
lcall
ja
scas
aas
or
dec
jp
or
xor
or
adc
xor
push
insb
mov
rorl
pusha
incb
jmp
pop
es
add
dec
cs
inc
cmpsb
addr16
cmpsl
ljmp
rorb
or
std
addr16
jmp
fists
incl
pop
idiv
loopne
lock
les
mov
mov
sub
jecxz
stos
in
mov
gs
outsl
add
inc
cli
mov
mov
repnz
pop
push
cmc
cmp
inc
pop
popf
mov
sub
jmp
jle
rcrb
push
arpl
movsb
adc
fnstcw
not
sbb
faddl
lods
sti
call
pusha
lds
pop
push
fcmovbe
int3
sbb
icebp
fdiv
pushf
cld
inc
xchg
and
inc
hlt
rcll
lcall
das
rorb
cmc
jmp
and
decl
sbb
cli
lcall
jge
jmp
or
add
mov
mov
pop
or
add
add
jmp
shl
adc
je
sbb
xchg
out
inc
fstl
jae
jge
js
aas
repz
and
xchg
std
pop
pushl
mov
mov
in
sub
mov
and
hlt
shlb
mov
cmp
pop
movsl
and
scas
xchg
out
push
sahf
xor
out
or
cmp
loop
ljmp
adc
lcall
gs
lods
lcall
or
call
cmp
pushl
movsl
fidivs
push
mov
push
fists
adc
add
mov
mov
shlb
pop
push
inc
rorl
jns
mov
mov
clc
jo
out
mov
add
add
jns
xor
mov
add
mov
loope
call
test
push
ja
push
jb
sbb
js
icebp
sbb
mov
mov
repz
xchg
mov
test
sar
mov
push
add
and
lret
or
es
divl
lea
incl
xor
jnp
nop
jle
or
add
mov
pop
icebp
xchg
notb
sti
adc
aad
jne
inc
mov
mov
cmp
mov
or
push
clc
mov
std
sub
mov
clc
xor
mov
nop
xchg
push
sti
xchg
add
mov
or
pop
jnp
dec
divb
aam
sar
jnp
wrmsr
decl
add
sahf
int
repnz
or
xor
dec
adc
jle
mov
add
roll
inc
mov
out
icebp
mov
xchg
mov
loopne
adc
rcl
add
cmp
xor
or
lahf
mov
push
ja
rorb
sub
add
xorb
jg
push
mov
scas
jb
mov
xor
in
ljmp
xchg
stos
hlt
sbb
nop
addr16
je
fistpll
jae
cmp
addr16
dec
loope
out
lahf
subl
xchg
pop
fisubrl
call
inc
pop
not
mov
xor
jb
stos
and
add
dec
pop
xchg
or
push
add
pop
jp
or
stc
ret
inc
mov
push
repz
movsb
arpl
push
or
dec
mov
scas
add
add
lock
mov
orl
pop
mov
sbb
add
pushl
repz
xlat
cmp
out
xchg
jmp
call
dec
pop
rolb
out
out
out
scas
cmp
xchg
aas
loopne
movsb
add
fwait
ds
jge
pusha
xchg
dec
addl
decl
movsl
xchg
rcll
cmp
loope
fsubrs
int3
sub
jl
scas
cld
bound
in
cmp
popa
cmp
in
out
xchg
sbb
inc
or
lock
int3
push
hlt
mov
push
pop
fimull
insl
es
jb
aad
roll
or
nop
lcall
loopne
icebp
shlb
add
testl
mov
add
inc
sub
sbb
adc
mov
inc
testl
test
and
push
inc
adc
lea
mov
sub
xor
rclb
xor
mov
push
xchg
or
and
icebp
test
xchg
sub
mov
push
mov
mov
je
or
clc
movsb
std
incb
pop
push
stos
addb
and
jno
jo
push
add
xchg
lea
add
or
pusha
aam
stos
das
iret
jne
int
adc
xlat
or
div
in
push
add
push
push
jg
outsb
mov
adc
sti
jbe
popa
orb
push
inc
pusha
push
add
mov
loope
sbb
add
das
stos
cs
shll
or
rorl
mov
and
lret
out
adc
scas
repnz
xchg
xor
psadbw
ds
mov
aaa
or
add
jmp
mov
clc
bound
inc
adc
jns
out
aas
mov
push
divl
inc
or
dec
jbe
push
test
push
lea
xor
pop
inc
sarl
aas
in
xchg
out
fcmovbe
in
fstl
nop
fs
inc
or
test
das
or
push
mov
cld
pop
sti
xchg
and
cmp
clc
rorb
mov
vpcomuq
mov
jae
jnp
pop
loop
push
or
call
dec
mov
js
xchg
hlt
dec
andb
lahf
bnd
pop
mov
decl
mov
mov
xchg
gs
shll
jnp
lock
jno
mov
lret
decl
xor
mov
hlt
filds
cmpsl
jg
xor
or
lods
fmuls
inc
cld
push
fiadds
mov
jge
rcl
pushf
sti
dec
pop
ljmp
lcall
cs
icebp
int
mov
ss
xor
lret
or
xor
lods
push
sbb
sarb
jae
sub
pop
das
cmp
aad
cmp
cld
jno
daa
outsl
cmp
sti
jg
int
xchg
pop
call
push
cltd
rorb
dec
repz
push
xor
inc
xchg
or
mov
stc
adc
subb
add
dec
je
or
sti
repnz
and
mov
xchg
sbb
outsl
jb
stos
jecxz
decl
loope
jl
rorl
pop
out
mov
les
jnp
out
rcl
xor
daa
cmp
fs
pop
repnz
test
mov
mov
loopne
scas
pop
sti
lods
push
in
stos
dec
or
ja
mov
pusha
fdivp
aas
jl
jnp
hlt
mov
xchg
jecxz
push
and
add
add
xchg
xchg
jmp
bound
mov
lock
sub
sarb
lahf
ret
sar
xor
sbb
aas
scas
mov
subl
and
lahf
jg
push
pop
lods
dec
mov
pop
xchg
or
mov
sti
loop
ret
push
or
push
adc
or
mov
dec
or
sub
jo
mov
repz
sbb
in
div
sbb
icebp
fdivl
pop
stc
rcrl
pop
psubsb
cld
jecxz
cmp
popa
mov
decl
push
mov
add
pop
push
push
aas
popa
into
push
xlat
push
xchg
xor
add
sub
in
or
and
inc
and
or
pop
add
xor
sbb
xchg
add
jb
hlt
sbb
outsb
xor
imul
mov
push
ja
lret
push
sti
popf
dec
xlat
mov
test
int
addr16
cli
fwait
sti
dec
dec
or
xor
notl
or
push
movsb
call
aad
mov
test
icebp
push
or
jae
sbb
xchg
dec
and
lock
pop
mov
cmp
cli
or
scas
sar
cmpsb
and
stc
cmpsl
xchg
xor
add
jg
push
mov
repz
aam
xor
xor
jl
inc
movsb
or
mov
xlat
mov
sbb
dec
lods
pop
inc
repz
pop
and
xlat
stc
repnz
mov
pushl
dec
out
clc
lahf
jmp
cmc
adc
dec
aad
xchg
int
mov
and
or
add
xor
iret
rolb
sub
out
cmp
enter
jg
add
fs
fwait
push
inc
aam
add
add
int3
adc
or
ror
fs
push
jmp
movsl
fsub
push
and
aas
das
fmuls
lret
frstor
add
inc
out
and
outsl
mov
ds
push
out
add
add
scas
mov
mov
ficomps
popa
rclb
dec
lret
decl
mov
in
sub
sar
add
imul
std
shl
js
add
or
adc
adc
xchg
aad
shl
ja
sub
lods
imul
into
outsb
mov
mov
mov
testl
fcos
ds
add
jmp
mov
int3
cmp
or
hlt
fdivrp
sbb
inc
xchg
mov
push
movsb
mov
cmp
ret
add
cmp
sbb
sub
lods
xchg
mov
icebp
leave
out
sub
repz
or
jae
int
inc
push
pop
loope
or
cmp
fwait
cli
fs
shrb
push
addr16
lret
incl
hlt
jmp
adc
add
aas
xchg
cmp
xchg
xor
sbb
adc
scas
scas
scas
dec
mov
lods
xchg
or
sti
fiadds
sti
jle
push
and
or
push
cli
ds
decl
add
in
addl
pop
cli
mov
mov
incb
repz
inc
xlat
jp
nop
add
cmc
xchg
pop
cmp
mov
out
add
jb
or
xchg
loop
adc
cmp
shll
jbe
jo
not
nop
outsl
std
sbb
xchg
push
cmc
add
std
adcl
fs
loope
cmc
stc
nop
and
repnz
sub
mov
std
pop
sahf
icebp
test
and
and
cli
int
cmp
testb
std
mov
scas
lcall
lcall
mov
sar
fcompl
pop
test
data16
or
in
jb
in
cmpsl
cmp
nop
sub
xor
sahf
or
xor
lret
movsl
inc
and
repnz
pushf
cmp
call
push
stos
cmp
cmp
lea
sahf
mov
pop
cmp
out
fcmove
jno
sub
and
jl
addb
pop
inc
mov
sarl
andb
pushf
jae
jae
mov
mov
loope
mov
push
imul
call
test
jo
xchg
pusha
mov
add
mov
jbe
or
adc
enter
adc
xor
or
mov
adc
in
xor
aas
jo
xchg
incl
shl
scas
rorl
inc
push
cmp
loop
jl
outsl
lock
pop
imul
pop
push
cmc
mov
subl
incb
xor
mov
hlt
repz
dec
xor
jp
mov
iret
or
add
or
push
xchg
mov
mov
pop
push
inc
mov
icebp
aad
sti
and
mov
xor
cmc
jae
mov
iret
cli
idivl
daa
nop
pushl
repz
xor
insb
aam
xlat
mov
dec
pusha
scas
clc
out
mov
fiadds
cmp
mov
popa
push
divl
daa
scas
fdivrl
mov
and
inc
popa
repnz
mov
pushl
mov
and
dec
cwtl
decl
mov
enter
pop
inc
add
jo
xor
rolb
shlb
incl
adc
repnz
dec
sar
test
popa
inc
or
dec
test
movsl
or
jae
aas
pusha
daa
cmp
or
cltd
dec
leave
push
notl
or
push
adc
dec
mov
pop
bound
icebp
cli
shlb
enter
or
mov
push
std
cmpsb
shlb
dec
jae
popf
push
jne
xor
sarl
push
add
mov
push
lret
push
inc
xrelease
shll
and
incb
mov
popf
outsb
sub
outsl
arpl
int
imul
jp
sbb
in
mov
iret
push
pop
xchg
or
jmp
jnp
push
push
mov
sub
mov
sub
aam
push
test
lret
xchg
out
push
lahf
out
call
push
lret
fstpl
movsl
xchg
or
iret
rcl
sub
xchg
stc
dec
pop
das
xchg
filds
add
xchg
sub
cmp
or
cli
mov
pop
mov
push
jmp
pushf
adc
cmp
or
mov
int3
imul
pop
out
push
or
aad
mov
ficomps
lea
push
sti
or
arpl
loop
cmp
xchg
push
lods
in
add
aad
sbb
adc
xchg
scas
push
shll
or
xlat
pushl
fistl
nop
push
push
in
or
add
adc
xor
cs
push
out
xlat
and
incl
push
mov
inc
mov
add
shlb
dec
add
inc
mov
inc
adc
hlt
lcall
cmp
push
mov
sub
jb
and
test
icebp
icebp
add
jl
push
push
xor
ja
xor
jecxz
or
outsl
mov
lahf
jmp
adc
mov
xor
mov
push
lds
ffreep
pusha
ret
testl
cmc
aad
ret
call
push
nop
mov
or
aaa
loop
lds
inc
mov
mov
mov
sub
ret
into
cli
inc
mov
xchg
pop
or
or
iret
std
jmp
jle
or
push
mov
pushf
mov
mov
std
or
stos
xchg
jmp
enter
jge
loope
add
int
pop
cltd
and
xor
push
or
or
add
test
cmp
lock
call
mov
adc
aaa
or
jmp
ja
sbb
dec
mov
mov
or
mov
cmp
aad
shrb
mov
movsb
call
mov
out
add
hlt
add
into
jmp
test
add
les
das
test
xor
adc
mov
cmpsb
mov
lods
push
notl
fiaddl
add
adc
xchg
andb
mov
add
xor
xchg
cmp
lcall
sti
xor
call
lahf
shl
std
push
push
lock
sub
lcall
mov
popa
push
mov
add
cmp
sarl
ja
pushl
jg
shll
lret
mov
and
decl
sbb
jno
adc
in
xchg
push
or
call
fadds
repnz
es
in
inc
stc
jecxz
outsl
xchg
mov
aas
add
bound
dec
sub
decl
mov
in
xchg
sub
leave
jecxz
imul
loopne
xor
scas
fmulp
incl
pusha
mov
push
adc
cmp
or
pop
stos
dec
mov
pop
sub
movsb
and
adc
lahf
cmp
loopne
xchg
adc
mov
pop
sub
jmp
test
cmp
loope
ljmp
loope
shlb
outsl
push
scas
sub
mov
arpl
dec
stos
push
testb
ljmp
mov
mov
add
stc
push
lock
xor
aas
adc
cld
loope
or
inc
xchg
push
rol
repnz
dec
jmp
xchg
jnp
jge
int3
notb
jnp
mov
jb
push
jae
cld
adc
arpl
add
or
push
xor
les
add
cmc
cmc
mov
roll
jns
pop
loopne
mov
jp
push
cld
xlat
fwait
jno
mov
push
into
push
pop
imul
add
adc
mov
pand
call
jg
loop
pop
shl
repz
repz
adc
adc
xor
mov
push
mov
std
cmpsb
push
xor
jns
cmp
add
mov
dec
popa
or
cmc
rcrb
aad
dec
int
mov
pop
ret
or
add
leave
pushf
pop
mov
imul
in
xchg
xchg
loope
mov
xor
loope
not
push
faddl
sub
push
sar
push
out
or
in
jnp
push
aas
shrb
pop
fsts
les
mov
xor
test
and
or
adc
mov
out
pusha
sahf
pop
dec
pop
imul
or
jp
add
aas
adc
push
push
aam
or
cs
incl
sbb
jne
dec
testl
setle
incl
jnp
jle
sbb
sbb
loop
jns
jg
xchg
sub
mov
dec
pop
sbb
inc
mov
jns
push
xchg
dec
clc
mov
pop
cwtl
inc
or
mov
fwait
nop
popf
xor
test
mov
inc
cwtl
push
pop
lds
shrb
mov
lock
and
test
sbb
sbb
pop
stos
shrb
pop
cltd
add
xorl
sbb
fstps
jbe
ja
pop
ljmp
push
sub
lcall
add
or
divb
add
jbe
cmpsl
inc
fxch
jl
mov
mov
sub
mov
mov
mov
notl
jo
fsubrl
add
xchg
incl
pop
fisubrs
push
inc
clc
sbb
add
incl
jge
loopne
shll
stos
push
mov
ret
add
xor
add
jne
xchg
xchg
pop
imul
cmp
mov
or
popa
rorb
adc
stc
movsb
dec
icebp
xchg
imull
jnp
mov
mov
ljmp
movsb
inc
add
or
mov
mov
rolb
xor
xchg
mov
mov
sbb
ficoml
or
stos
nop
or
daa
jmp
mov
call
sub
xchg
ja
inc
push
push
pop
sub
add
orl
mov
popw
pop
add
jo
push
mov
loop
or
xor
mov
shl
push
mov
push
sub
add
sbb
mov
repz
rcl
or
pusha
jmp
or
cs
mov
pushl
rorl
decl
mov
in
imulb
icebp
gs
xchg
fcmovbe
bound
test
or
mov
call
shll
mov
das
add
cmp
sbb
push
or
sahf
shll
xchg
rcrb
or
and
insb
sldt
xlat
test
add
jge
pop
jl
aam
in
imul
aaa
adc
pop
pushl
in
ljmp
push
xchg
sub
and
das
xor
enter
mov
iret
dec
jg
jne
push
nop
pop
shrl
sbbl
ja
jns
sbb
sbb
pop
push
mov
and
aam
xchg
icebp
out
sub
sub
sub
push
js
sbb
pop
iret
arpl
xor
fidivrs
or
push
test
dec
mov
xchg
push
fnsave
dec
fcoms
pop
jp
dec
icebp
jae
and
push
lret
push
jl
incb
pop
mov
mov
mov
test
add
icebp
adc
xchg
mov
test
sub
jp
xor
mov
pop
jmp
ret
call
insl
shrl
popa
decl
in
ja
ljmp
jle
pop
adc
je
jecxz
xchg
and
mov
pop
cmc
stc
cmp
jg
pop
shr
add
dec
pop
mov
jge
ja
loopne,pn
add
arpl
scas
sbb
cmp
rcl
push
push
cmpsb
fcomps
out
scas
mov
adc
xchg
fs
xor
push
lcall
jg
push
nop
je
rcll
sub
enter
cmp
repnz
mov
notl
lock
sbb
jne
cmp
mov
idiv
test
xchg
pop
sub
cli
mov
in
mov
repnz
fwait
pop
mov
sub
add
mov
and
mov
xchg
hlt
and
fistps
lahf
scas
mov
outsl
repz
push
fs
stc
insl
dec
sahf
dec
ljmp
int
out
in
dec
fiaddl
push
aas
mov
jmp
in
mov
push
xchg
jbe
lds
adc
and
mov
sbb
repz
push
xchg
sti
mov
cmc
inc
decl
jmp
jo
or
mov
incl
pop
pop
outsl
cmp
push
loope
lock
scas
nop
lds
jl
adcl
loopne
icebp
ljmp
stos
addl
sahf
push
lods
popf
sti
lds
add
sub
addr16
xor
add
je
inc
dec
inc
fdivrl
call
mov
adc
push
add
inc
pop
mov
in
xchg
mov
cmp
cmc
mov
hlt
repz
pushf
iret
mov
jb
rol
xchg
cmp
popf
repz
ret
arpl
cld
pop
jmp
xor
xchg
pushl
jbe
mov
into
in
repz
arpl
ud0
addr16
cs
mov
out
or
push
jle
add
shll
idivb
jl
scas
mov
in
cmp
popa
adc
insl
cli
or
scas
push
push
nop
fldt
fisttpll
fwait
mov
mov
sub
cmpsb
sub
faddl
xor
std
cmp
pushl
mov
adc
js
rclb
add
scas
or
jb
daa
shl
mov
mov
pusha
ficompl
xor
insb
ljmp
fadd
adc
adc
out
nop
dec
jle
push
stc
pushl
fdiv
rcrl
push
and
decl
adc
pop
stos
jno
enter
xorb
mov
lcall
rol
popa
or
mov
adc
pop
xlat
jno
call
push
aad
fisubs
push
outsl
pop
nop
in
xchg
pop
sti
pop
add
xchg
or
loope
sahf
in
mov
arpl
xchg
jg
rcr
add
lds
or
push
pop
or
not
sub
and
mov
or
xchg
sub
fwait
xlat
sub
or
insl
decl
pop
psrlw
cli
mov
shlb
rcll
rcr
adc
iret
add
repz
lock
adc
push
sti
out
inc
shrl
mov
ret
or
std
mov
inc
jno
enter
mov
jae
aaa
jp
push
push
cmc
pop
repnz
pusha
std
mov
or
leave
add
add
lret
imul
xlat
adc
cmc
mov
in
and
cmc
enter
add
mov
add
stc
pushf
sahf
lahf
jo
shr
jle
jne
ja
push
pop
sub
push
fiadds
or
cltd
sub
call
adc
int3
push
cld
imul
jg
dec
out
into
outsb
lods
push
push
cmpsl
out
popf
imul
pop
jl
lds
mov
call
pop
lea
fists
inc
mov
div
fnstcw
iret
xchg
push
ljmp
push
lahf
jnp
aad
pushl
jmp
lret
xor
sub
xor
nop
outsb
cs
sub
orb
jmp
xchg
dec
xchg
push
cmpsl
xor
out
xlat
dec
push
push
rcrl
push
dec
xchg
call
mov
rorb
jmp
mov
add
cs
jae
int3
fs
xor
bound
push
daa
xchg
and
movsb
dec
push
ds
jo
mov
cld
nop
int
stos
inc
mov
add
jmp
iret
fadd
mov
nop
dec
and
je
sbb
xor
mov
lcall
lea
or
gs
in
movl
adc
in
lock
arpl
pusha
decl
imul
push
jmp
jae
dec
loope
inc
and
jle
int
loop
mov
add
mov
mov
int3
lahf
lods
fldcw
xchg
mov
pop
scas
fisubl
and
jle
ja
popf
jae
jo
push
mulb
cltd
xchg
push
imul
inc
arpl
insb
push
or
inc
loop
push
ss
mov
aaa
in
or
push
div
adc
fstpt
or
mov
lods
cltd
add
pop
inc
arpl
jmp
stos
mov
rol
in
or
popf
dec
mov
movsl
clc
mov
call
jns
int3
push
pop
push
jmp
push
scas
xor
shll
leave
jmp
fnstsw
iret
fs
xchg
push
hlt
xlat
adc
dec
adc
jmp
mov
loop
std
fisttpl
out
xchg
mov
scas
xchg
fmuls
jae
push
jg
pushl
aas
pop
mov
loope
dec
mov
imul
pop
jge
sbb
std
add
pusha
mov
gs
mov
in
inc
repnz
inc
gs
mov
pop
mov
cmp
inc
mov
xchg
mov
roll
fsubl
push
add
mov
lret
sub
adc
aad
sub
shlb
iret
call
int
or
push
cwtl
pusha
mov
iret
cmp
stos
fwait
jg
sbb
xchg
clc
ja
cvtdq2ps
jmp
or
decl
test
vmread
mov
xor
sbb
les
cli
add
adc
dec
jmp
ss
aas
ljmp
stos
mov
mov
add
call
mov
sbb
repz
push
mov
idiv
fldt
add
bound
mov
fsubrl
out
jne
int
push
add
in
movsl
or
es
jmp
xchg
xchg
mov
movsl
mov
outsb
ds
jmp
jg
cmp
es
push
jmp
iret
mov
call
enter
push
jnp
rcll
inc
lods
jp
or
pop
ret
int3
gs
mov
stos
mov
movsl
insl
outsb
mov
xor
mov
fisubrs
xchg
notl
ds
loopne
cmp
jmp
pop
sub
aas
lods
das
cs
sub
dec
mov
jg
and
rclb
add
decl
xchg
fdivrp
ret
gs
lahf
mov
jb
movsl
jmp
sbbl
sar
sbb
loop
rcrl
mov
cmp
aas
and
add
sub
push
push
loope
inc
and
mov
sbb
ljmp
push
lods
scas
enter
popf
cli
pop
jae
cmp
add
clc
ljmp
loopne
movsl
test
push
scas
lcall
sbb
inc
jbe
test
iret
adc
test
aad
sahf
jo
data16
mov
mov
jge
push
xlat
std
jne
call
mov
xor
sahf
and
mov
lahf
test
cmpsb
mov
lds
scas
mov
mov
mov
aaa
popf
sub
mov
mov
xchg
fidivrs
xor
lret
push
mov
movsl
sbbl
sti
mov
push
xchg
jmp
stos
ljmp
shrb
jns
jmp
cmc
outsb
sbb
xor
jp
mov
dec
mov
xchg
pop
pop
mov
out
scas
hlt
mov
mov
aas
adc
sub
pop
or
adc
popl
and
cmp
jmp
int3
lret
lods
pop
cmp
rcl
and
cltd
push
aas
std
cmpsb
pop
sbb
imul
cmp
lods
clc
mov
lahf
inc
mov
jnp
mov
and
loope
js
call
hlt
fists
pushl
pop
lea
jb
std
add
jmp
xor
mov
push
xor
dec
in
mov
cmpsb
rol
decl
cld
add
incl
das
fucom
pusha
cltd
push
xchg
lcall
mov
dec
lods
mov
mov
adcl
dec
ret
lcall
xchg
dec
mov
shlb
push
inc
xchg
movsb
add
andl
lods
ficoms
and
and
outsb
push
loop
icebp
sbb
into
arpl
test
adc
mov
jns
mov
repz
mov
xor
call
mov
stos
test
pop
mov
lahf
sti
shrb
in
es
and
imul
test
fnstsw
incl
push
stos
dec
add
pop
push
incl
repnz
test
movsb
cmp
test
add
push
fnsave
inc
aad
adc
mov
adc
test
add
pop
mov
and
call
mov
adc
test
or
mov
into
xor
movsb
or
jae
mov
adc
test
mov
add
inc
call
and
mov
decl
fisubrs
mull
push
push
aaa
fptan
call
pop
ja
mov
sub
negb
in
mov
inc
test
scas
mov
enter
subl
lods
dec
mov
mov
mov
xlat
test
add
test
pushf
mov
jae
pop
dec
push
stc
jl
xchg
negb
cli
adc
fwait
call
jmp
push
int3
decl
xor
cmp
rcll
pop
cli
or
add
faddl
xchg
lock
sub
jmp
mov
in
scas
cmpsl
fsubr
pop
xlat
or
adc
int
jmp
test
or
mov
xchg
imul
test
push
arpl
jecxz
adc
mov
dec
jae
not
insb
jmp
into
hlt
cmp
sbb
aaa
popf
lcall
nop
dec
push
inc
jnp
fsubrs
and
jle
push
pop
push
mov
or
out
int
iret
or
dec
clc
push
add
insl
gs
or
cltd
push
test
sbb
adc
jno
lds
std
xchg
fnsave
jmp
add
iret
sub
mov
pop
scas
aas
sahf
dec
nop
cmp
dec
sub
aad
jbe
pushl
pop
sbb
popa
xchg
das
and
dec
pushl
ja
push
out
jbe
cwtl
xor
in
jno
scas
mov
cmc
fcomps
cmp
es
ljmp
pop
xchg
jae
lds
lods
mov
addl
hlt
mov
shl
fldt
jnp
loope
dec
mov
push
ficoml
mov
stc
enter
mov
jmp
loop
pop
out
pop
xchg
shrb
xchg
jo
and
jg
mov
xchg
or
push
jb
sahf
sbb
sub
pushl
in
cmp
sbbb
in
pop
push
mov
mov
call
out
push
jg
decl
addr16
dec
lock
shll
jnp
addb
int3
roll
fcomip
sahf
fcmove
enter
dec
stos
nop
ret
mov
mov
push
pop
repnz
jmp
jns
push
add
rorb
mov
int3
fstl
out
fidivs
xchg
mov
jle
mov
or
stos
je
fnsave
outsl
std
or
xchg
into
test
fwait
mov
repnz
fnsave
int3
mov
xor
imul
xor
mov
ss
or
adc
mov
testb
iret
lods
inc
pop
ja
add
pop
lods
cld
xor
and
inc
push
loopne
cmp
negl
jp
jo
add
adc
xor
sahf
adc
pop
xchg
lahf
push
call
push
repz
add
rcl
push
or
data16
mov
icebp
lods
push
and
add
mov
mov
popf
push
sub
or
adc
add
arpl
dec
inc
fisttps
inc
or
and
sub
in
lcall
or
cmc
shrb
cmc
stos
adc
aam
lea
movsb
cmp
add
shlb
fists
or
lret
aaa
hlt
mov
out
pushf
mull
push
dec
pop
push
xchg
adc
adc
fsubrs
mov
mov
push
and
lea
iret
cmpsl
cmc
xor
mov
mov
in
lahf
cmp
jmp
mov
xchg
dec
ds
xor
jge
and
jne
iret
cld
test
int
mov
decl
jmp
xor
sbb
testl
out
xlat
decl
clc
imul
call
mov
mov
cli
aam
add
daa
decl
jecxz
and
mov
or
xlat
jmp
sub
xchg
sub
clc
sub
pop
sti
sahf
bound
jl
pop
pop
scas
push
jecxz
jge
pop
jmp
cmp
or
inc
xchg
dec
sbb
pop
mov
in
mov
jbe
mov
push
les
adc
lcall
fildll
mov
rcll
adc
push
adc
out
repnz
cmc
fmuls
sub
add
aam
lock
xchg
jmp
iret
xchg
outsl
lahf
mov
cli
ja
rolb
ds
jb
fs
xor
das
addr16
shlb
push
mov
in
outsl
popa
out
shlb
jmp
xchg
add
mov
loopne
leave
mov
jno
or
mov
in
outsb
pop
jns
dec
mov
xlat
sub
push
fdivrp
sbb
mov
fisttps
xchg
sti
mov
jne
fdivrl
ljmp
ja
or
push
fnstenv
add
shr
sarl
or
nop
mov
jmp
int
jecxz
adc
jmp
mov
std
jae
stos
fldenv
fcmove
shll
sub
push
in
add
icebp
loopne
or
outsb
sub
shrb
int
test
fdivrl
pop
add
and
xor
ja
and
pushl
xchg
and
jge
ss
or
into
inc
inc
xor
push
pop
mov
xchg
sbb
push
mov
in
inc
jo
dec
jno
sti
pop
psrad
imul
or
shlb
adc
filds
push
dec
push
push
jns
mov
pop
cmpsb
cmc
push
mov
xor
decb
dec
inc
mov
push
std
pop
int
icebp
loop
fwait
orw
pushl
call
cltd
mov
daa
sub
xchg
xchg
loope
add
push
jne
shlb
sbb
jne
icebp
std
repz
cs
outsb
decl
repnz
data16
or
mov
add
xor
xchg
xchg
mov
mov
scas
adc
inc
ljmp
lahf
mov
jne
popf
daa
sar
dec
sub
adc
push
sti
jp
out
icebp
divl
push
pop
out
es
xor
pop
incl
fwait
les
ficomps
rcll
aaa
sti
add
cmp
add
lahf
mov
int3
pop
sub
cld
mov
or
mov
stc
cmpsl
xchg
pop
adc
lret
inc
ret
int3
out
or
xor
popf
jno
fistpll
cmc
mov
shll
fwait
xor
jmp
cwtl
mov
cli
incl
out
mov
lret
repz
mov
jmp
std
ret
inc
clc
add
push
enter
leave
stc
jge
sub
mov
es
call
jb
lock
leave
adc
lods
push
inc
mov
decl
dec
ret
jo
adc
mov
movsl
sarl
jg
push
popf
mov
pop
call
jmp
xor
mov
lcall
lret
stc
push
xor
nop
mov
cltd
cmp
stos
gs
lcall
mov
cmp
push
lock
push
imul
pop
pusha
or
sti
adc
jb
lods
push
pop
dec
cs
sbb
movsl
lcall
jp
xlat
bound
jle
call
add
stos
mov
rcll
push
jnp
lret
and
enter
fidivrl
rcl
sbb
dec
movsb
pop
popa
and
cmp
mov
incl
sar
cmpsb
lret
leave
adc
ljmp
pushl
insl
mov
adc
cmp
sub
outsb
ss
imul
shrl
movsb
sbb
in
in
mov
dec
adc
add
repz
lcall
jp
lea
cld
or
adc
pop
jmp
cmpsb
aas
pop
add
arpl
icebp
cld
xor
out
out
push
outsb
fcomps
sub
cmp
loope
repnz
call
adc
jno
pushf
pop
jp
dec
call
testl
pushf
xorb
push
cmp
repnz
cmc
mov
add
xchg
jmp
ret
mov
movsb
shrb
stos
imul
int
mov
out
out
jg
xchg
rclb
lcall
cmp
mov
push
mov
loope
jb
fs
push
jo
std
insl
lcall
incl
sbbb
ljmp
iret
test
sahf
push
xor
fistpll
inc
or
mov
cmc
mov
ja
jno
cld
nop
jnp
cmp
jo
adc
dec
inc
imul
cmp
mov
mov
cmp
leave
insw
pusha
mov
mov
xor
jnp
ds
je
xor
sti
mov
out
les
stos
or
pop
pushl
ret
or
rclb
push
clc
xor
push
out
lea
push
jns
jne
outsb
adc
cltd
or
nop
jle
push
or
stos
in
push
bound
js
stos
call
out
mov
ja
xchg
push
or
jo
xlat
in
cmp
pushf
movsl
xchg
jmp
sti
pop
cmp
sarl
push
shlb
or
int3
ljmp
in
mov
pop
lcall
adc
loopne
mov
clc
enter
cld
push
push
xchg
inc
pop
nop
mov
pop
repnz
adc
in
cmp
aaa
cli
mov
mov
fwait
lods
add
xchg
mov
mov
add
lahf
dec
test
and
gs
aam
ljmp
push
mov
and
imul
or
mov
dec
into
cmp
jg
pushl
shrl
mov
je
xor
mov
or
sub
jns
inc
lds
sbb
mov
ds
push
testb
xchg
outsb
dec
mov
xchg
mov
lods
or
clc
incl
pop
and
inc
xchg
xor
out
adc
push
incl
jo
add
mov
out
mov
loopne
inc
std
iret
ljmp
xchg
push
or
movsb
test
xor
ljmp
or
sub
shll
cld
imull
loope
divb
adc
mov
jg
dec
incl
mov
adc
adc
mov
adc
or
mov
dec
lcall
lock
out
mov
inc
inc
inc
insl
idivb
aas
jb
je
daa
adc
popf
or
xor
in
daa
add
inc
cmp
lahf
ljmp
fwait
movsl
xchg
mov
jo
pop
inc
mov
cmp
xor
or
mov
and
inc
daa
pushl
mov
mov
pop
adc
and
notl
xor
push
xchg
jmp
mov
cmpsl
add
adc
int
inc
pop
aam
es
outsb
or
sahf
in
pop
pop
xchg
mov
incb
push
mov
push
je
xor
mov
call
aam
sbb
std
jmp
pushl
repz
mov
or
aas
xor
testl
xor
testl
jp
dec
push
shlb
push
js
mov
push
adc
sbb
adc
push
mov
or
lods
or
in
inc
jae
ret
iret
cmp
inc
popa
and
push
mov
aas
mov
adc
push
ret
loope
leave
xchg
mov
adc
cmp
mov
hlt
call
fcoms
es
repz
sarl
jecxz
in
add
int3
sbb
push
and
push
push
add
adc
mov
push
stc
push
mov
les
add
std
decl
sbb
sar
in
repnz
incl
sbb
jb
ret
testb
pop
dec
push
mov
xor
mov
addl
mov
sbb
xchg
fwait
loopne
sub
sub
gs
iret
addr16
js
mov
jbe
add
jns
sub
imul
sub
adc
jne
and
dec
xor
jg
imul
scas
gs
adc
lcall
or
push
adc
adc
mov
ljmp
mov
pop
add
fimuls
push
pop
pusha
pop
xchg
cmc
in
dec
jge
clc
cmp
sbb
sbb
add
adc
mov
pushl
data16
mov
xor
mov
in
pop
cwtl
hlt
loope
mov
cld
jmp
out
mov
jne
jmp
xor
cmp
call
shlb
insl
ljmp
xchg
sub
mov
jp
adc
imul
arpl
shl
mov
int3
cmp
mov
xchg
mov
inc
js
lcall
or
lahf
add
cmp
push
dec
add
gs
movsl
adc
and
lods
sbb
xor
pop
inc
fwait
dec
orl
adc
je
jne
fisubrs
cmp
jl
mull
lods
cwtl
jle
lcall
lret
arpl
push
jae
shlb
cmpsb
shlb
add
call
sub
call
rolb
int3
pop
testb
mov
push
mov
ds
xor
xor
movsb
gs
and
add
inc
pushl
mov
inc
pop
ret
add
test
mov
cmpsb
mov
sub
call
adc
jnp
sub
xor
or
int
sar
je
or
call
shlb
sbb
cli
shlb
push
xchg
lret
cwtl
fsubr
stc
test
imul
loopne
mov
shlb
sub
cmc
outsb
jbe
add
lock
and
movl
mov
outsb
ret
dec
stos
jb
mov
mov
pushf
idiv
cmp
adc
mov
jbe
inc
mov
dec
push
pop
ljmp
gs
mov
or
sbb
or
test
subb
inc
add
add
loope
fwait
push
dec
adc
cmp
push
aas
psraw
scas
cmc
scas
sbbl
ja
push
std
pop
jne
sbb
cli
popa
aad
aas
push
adc
adc
mov
jmp
xlat
push
stc
xor
nop
sub
cmp
in
ja
repz
pop
dec
jns
push
sti
int
jno
sbb
cmc
or
pop
xchg
push
mov
pushl
add
pop
add
sbb
je
jmp
mov
out
mov
icebp
mov
push
imul
add
xchg
sarb
cmp
xchg
das
xor
imul
mov
fmuls
xchg
xlat
test
adc
fidivl
cmpsl
xor
nop
xorl
add
shrb
add
nop
jp
add
pop
sti
push
out
bound
push
icebp
xchg
cmpb
mov
xor
mov
lcall
mov
mov
jo
mov
fstps
dec
jns
outsl
dec
mov
adc
es
adc
mov
push
lcall
mov
lock
mov
mov
xor
int
sarb
dec
jne
mov
imulb
or
cli
cmp
jl
xor
cs
mov
test
mov
dec
cmp
popl
cmp
adc
sub
rorb
adc
call
stc
xchg
sbb
incl
popa
pop
jmp
mov
xchg
pop
jno
or
inc
adc
or
shlb
aad
jmp
or
outsb
cmc
xor
test
xchg
cmp
ja
dec
jae
enter
or
add
fsub
cmpsb
mull
sbb
and
or
cmpsl
lret
push
cmp
sbb
mov
shrb
mov
push
sub
rol
xchg
xchg
lods
lods
mov
sbb
stos
jmp
push
enter
inc
adc
ss
and
or
pop
pop
call
imul
cli
incl
inc
jo
adc
mov
aad
add
or
cwtl
pushl
mov
aam
mov
add
add
int
push
sarb
push
adc
sti
fcmovne
or
xor
push
nop
movsb
aas
push
add
mov
jge
ret
repz
scas
into
push
jae
jmp
sub
aaa
cmp
cmc
xor
xchg
jbe
cmp
cmp
jmp
and
sti
sub
test
push
je
pop
roll
jmp
cltd
mov
cmp
aad
rcll
incb
decl
lods
or
loop
dec
pushf
pop
loopne
repz
mov
xor
insb
lcall
jbe
shr
mov
cltd
dec
jb
add
pop
push
add
hlt
push
aas
or
rcl
fsubrs
sub
stc
push
or
push
jo
xchg
lahf
mov
push
inc
cmp
cs
repnz
pop
decl
xchg
add
ja
insl
incl
pop
js
gs
jae
mov
add
int
jo
arpl
jge
sbb
flds
push
testl
sbb
notl
xor
lea
in
inc
jmp
sub
arpl
insl
imul
sbb
add
or
push
xchg
inc
je
pop
jb
dec
push
bnd
imul
cmpsb
add
movsl
lahf
orb
je
idiv
aaa
cltd
loope
mov
imul
ja
and
mov
insb
dec
dec
ljmp
dec
mov
xor
incl
in
cmp
xor
or
test
jmp
push
xorl
int
adc
mov
sub
dec
dec
cmp
stos
or
repz
mov
ds
xor
and
jmp
call
incl
dec
xor
mov
or
mov
sub
xor
mov
jae
mov
fistpl
xor
jmp
lcall
cmp
mov
pop
mov
pop
out
cld
add
test
xor
sar
xchg
notl
mov
pop
movsb
push
outsb
lea
mov
or
dec
in
insb
imul
jo
add
sti
cs
sbb
pop
aam
sub
roll
notl
or
or
notb
xchg
imul
fs
adc
or
sub
sub
scas
jo
ja
hlt
ljmp
into
movsl
mov
xor
es
pop
xchg
mov
mov
pop
shrb
lcall
roll
cmc
mov
pop
cwtl
pop
lcall
mov
pushl
add
or
ljmp
xchg
mov
shl
lahf
pushf
mov
clc
imul
cmpsl
pop
out
ja
or
imul
daa
mov
add
ficomps
jae
cmc
jns
lods
out
and
repz
in
xchg
jae
mov
adc
mov
lcallw
mov
pop
sti
js
sbb
jmp
dec
insb
adc
xchg
or
rcl
mov
adc
out
and
ds
push
jb
pushl
sbb
add
or
fwait
mov
ret
xchg
js
mov
mov
and
lcall
repz
dec
mov
push
cwtl
adc
pop
add
push
xor
repz
or
aas
arpl
scas
mov
dec
imul
addl
sub
in
sbb
scas
les
and
sub
mov
icebp
addb
push
inc
nop
push
pop
pop
xor
add
jmp
add
je
cmpb
call
and
xchg
negl
or
fisubrl
arpl
mov
test
add
leave
lcall
fisttpl
adc
mov
cmp
mov
jmp
lock
mov
imul
shlb
jl
jbe
jmp
insb
and
inc
add
arpl
jl
xchg
popf
mov
push
cmpsb
inc
test
repnz
out
sahf
cmp
shr
push
mov
repz
mov
fs
mov
xor
jno
pop
sub
cmpsl
or
inc
and
test
push
rsm
incl
mov
cmp
movsb
fcomps
or
nop
xor
jecxz
popa
xchg
loop
lret
mov
cmp
sarl
scas
adc
mov
lods
je
and
jmp
push
dec
out
subl
testl
jp
in
je
push
addb
add
cmp
repz
clc
adc
lods
fldcw
xchg
mov
ret
xlat
call
push
cmp
popa
in
mov
fs
jns
xlat
pop
ret
incl
add
sar
xor
push
jmp
mov
lods
adc
decl
inc
leave
arpl
xchg
call
int
jo
push
push
mov
iret
or
fwait
mov
rclb
scas
fisubrl
adc
push
jno
cmp
xor
leave
xor
mov
and
add
xchg
ljmp
pushf
test
decb
cli
xor
mov
adc
dec
testl
sub
mov
outsw
add
jns
dec
jo
push
loope
or
loop
mov
add
cltd
sbb
xor
adc
fidivs
hlt
shrl
adc
and
test
xchg
or
mov
or
jno
cmp
ja
int3
add
mov
cmp
xor
push
movsb
fxch
jmp
jl
jo
adc
pop
inc
mov
stc
and
test
mov
aad
or
mov
xchg
mov
es
adc
jge
and
xchg
xor
cmp
pop
add
jo
inc
out
push
sub
xor
clc
sti
push
lret
add
inc
shl
or
es
dec
dec
fdivp
orl
pop
mov
enter
and
push
xchg
xchg
insl
incl
testl
call
pop
in
or
shrl
push
or
xchg
std
xor
mov
or
jnp
dec
adc
pop
add
jne
xor
cmp
xor
in
fwait
leave
adc
shl
data16
mov
mov
fcomp
and
mov
or
and
ret
out
pop
inc
lret
inc
or
cld
jmp
xor
sub
and
stos
std
aad
aas
adc
in
dec
rolb
addr16
xor
cmpsl
mov
jmp
push
dec
aas
popf
xchg
repz
jmp
testb
pop
ljmp
mov
jp
xchg
jno
jmp
and
mov
rcll
shrb
push
pop
enter
rorb
pop
xor
inc
cmp
dec
cmpsb
fimuls
mov
ret
lcall
mov
shrl
mov
push
aad
out
push
stos
int3
dec
adc
lahf
andl
pop
pop
xchg
jecxz
int3
incl
in
pop
test
lods
cltd
mov
fs
outsl
fsub
fcmovnbe
inc
sbb
mov
jnp
dec
or
cmc
nop
cli
xor
mov
mov
mov
sbb
fisubs
out
lcall
incb
jbe
loope
popa
insb
std
push
adc
popa
ss
testb
or
xchg
das
je
cwtl
push
or
pop
daa
call
lahf
pushf
stos
xchg
int
sbb
enter
incl
mov
sahf
sbb
pusha
cli
loopne
jnp
shrb
mov
cltd
dec
ds
call
xor
insb
rorl
fwait
repz
xchg
jl
adc
cmp
add
fdivs
xchg
sarb
lret
cmp
cwtl
out
int3
cmpsb
dec
jne
aam
jmp
xchg
movsl
inc
dec
mov
mov
sub
sar
ds
push
mov
aad
incl
pop
imul
ljmp
ds
icebp
jp
jne
stos
pop
push
mov
stc
nop
lcall
sub
call
addr16
or
icebp
outsl
adc
dec
or
jg
sbb
repz
mov
rcll
bound
in
add
inc
popl
sbb
push
jmp
aad
stc
sub
xor
adc
pop
pop
inc
ret
jbe
aas
pusha
pop
inc
fcmovnbe
addr16
mov
dec
idiv
clc
cmp
arpl
das
stos
pop
mov
decl
pop
rorl
adc
cli
jbe
mov
decl
add
decl
test
pop
dec
dec
jmp
xacquire
jnp
divl
lods
push
xchg
outsl
push
fistpl
bound
inc
in
sti
je
xchg
dec
dec
xor
and
mov
push
popf
rolb
or
inc
pushl
outsb
std
idivl
pop
xchg
nop
lcall
jno
jae
call
xchg
adc
xor
and
xchg
mov
in
adc
int
fisttps
sarb
mov
sbb
cs
mov
push
adc
or
sub
jbe
mov
gs
shll
xchg
jns
inc
inc
cmp
jg
push
cmp
dec
push
and
inc
lea
sub
jle
xor
incl
in
loop
aaa
aam
bound
int
mov
loopne
pop
mov
cmp
repz
cltd
adc
repz
mov
inc
jae
inc
sub
pushl
inc
test
decl
pushf
mov
inc
dec
push
jmp
sahf
xor
lret
sbb
nop
aad
xchg
add
rcll
lcall
frstor
pop
inc
dec
inc
lods
leave
xor
mov
lret
popa
xor
and
adc
and
das
movsl
incl
lods
decb
jb
adc
xor
xchg
jae
add
mov
addr16
imulb
mov
jne
sti
adc
lcall
or
jnp
lret
insb
sbb
mov
scas
movsb
dec
mov
outsb
add
loope
mov
cltd
xor
imul
cmp
jmp
lock
int3
shrb
pushf
fwait
imul
and
add
push
dec
rorb
adc
scas
adc
in
stos
mov
rcr
sub
aad
test
stos
sbb
and
dec
jmp
movsb
mov
test
shlb
cmp
test
lock
loopne
ljmp
fnsave
lcall
pop
lret
jmp
int
pop
push
loope
pushf
sub
ljmp
imul
ljmp
jb
inc
push
mov
push
cmc
cmp
adc
pop
scas
or
shll
pop
cmpsl
pop
jecxz
dec
inc
daa
mov
clc
nop
adc
pushf
cmpsb
or
inc
fldenv
or
hlt
jno
lcall
mov
xchg
cmp
push
aas
fisttpll
dec
dec
mov
ljmp
xor
or
inc
xchg
repz
or
adc
pop
lods
lcall
push
cli
call
xchg
push
and
xchg
lcall
pop
push
popa
ljmp
xor
cmp
or
jl
ljmp
cmp
scas
int
fsub
push
dec
mov
das
jg
cmpsb
data16
loope
xor
sub
icebp
dec
jnp
mov
push
cmc
xchg
inc
adc
test
enter
lret
push
aas
inc
cmp
faddp
xor
es
dec
clc
aad
mov
adc
mov
jp
dec
add
ja
dec
adc
mov
pop
push
add
dec
cltd
sub
lea
adc
push
mov
lahf
lock
pop
jg
cmp
mov
sub
xchg
jo
pop
xchg
js
jb
push
add
decl
dec
inc
test
xor
pop
cs
add
xchg
ret
lcall
xchg
cld
dec
stos
nop
sahf
dec
insl
rorb
xchg
in
jne
push
mov
scas
into
inc
nop
stos
mov
pop
pusha
jae
pushl
loop
test
inc
fstl
js
mov
shl
es
jecxz,pn
adc
rcl
clc
mov
dec
testl
in
push
enter
xchg
nop
rcll
mov
xlat
adc
iret
jne
jmp
loopne
mov
and
stos
arpl
inc
ljmp
push
sti
jle
push
in
jge
mov
mov
jo
les
stc
fsubs
pushl
pusha
pop
pop
dec
xor
sbb
or
jne
xor
mov
pusha
lret
fdivrp
shl
aas
cmp
inc
add
cmp
push
cli
dec
lret
test
jb
daa
rclb
seto
stos
scas
test
fdivrl
lcall
adc
mov
pushl
sarl
mov
inc
mov
std
mov
inc
xchg
dec
add
adc
mov
xchg
es
ficompl
mov
mov
sbb
or
add
scas
xchg
mov
lods
jae
push
jo
jp
dec
bound
pop
nop
add
add
outsl
imul
mov
mov
call
testl
mov
xchg
clc
or
or
pop
test
ret
ficoml
jno
xchg
pop
data16
or
jp
cld
aam
movsl
cmp
or
fidivs
jmp
pop
jecxz
jp
jo
in
repz
pop
mov
inc
nop
mov
jg
mul
cs
dec
cmpl
pop
jmp
fidivl
sub
mov
jae
mov
jmp
test
aaa
mov
ret
lcall
xchg
dec
push
loop
pop
jle
cmp
das
mov
add
sbb
mov
adc
and
push
push
out
imull
push
jb
aaa
jl
je
pop
xchg
add
mov
mov
stos
jo
adcb
dec
scas
inc
sub
add
std
lock
std
lcall
push
mov
push
repz
mov
lds
adc
shll
rorb
push
mov
pushl
out
mov
push
ljmp
dec
jbe
xchg
sbb
repnz
ss
icebp
mov
mov
fidivs
pop
test
or
ds
sbb
add
ret
inc
inc
jnp
inc
cltd
jle
lcall
out
scas
not
sub
xor
push
xor
add
jb
inc
loopne
data16
aad
sub
sub
clc
mov
in
adc
mov
das
jo
mulb
movsb
fwait
inc
cmp
pop
popf
jmp
insb
jle
scas
roll
add
daa
lcall
mov
incl
add
adc
addl
das
mov
xchg
stc
add
pop
inc
sbb
push
fwait
scas
jg
fsubs
es
or
das
repz
enter
leave
xchg
mov
pop
push
mov
lea
mov
dec
adc
int3
popf
inc
xchg
or
push
push
and
xchg
dec
push
mov
sti
js
jp
out
push
fildl
in
xchg
xor
outsb
mov
inc
inc
push
ret
lcall
arpl
lcall
pop
rcrl
pop
jae
and
sbb
sub
mov
mov
testb
push
fidivrl
ja
add
push
push
jne
adc
cmc
xchg
ljmp
fildl
fwait
outsl
and
dec
in
ud0
xor
cmc
nop
sbb
jno
xor
jmp
rcll
test
movsl
dec
sti
nop
mov
pop
push
loope
mov
inc
pop
int3
rorb
mov
pushf
or
cs
push
mov
into
sub
xor
sbb
push
stc
insb
sub
lods
sub
or
lods
rcrb
fnstenv
or
sub
xor
daa
jns
js
scas
adc
lret
inc
pop
sub
sbb
xchg
inc
lods
xor
lea
or
mov
jnp
xor
push
inc
insb
push
cmp
and
jecxz
or
jmp
stos
pushf
aas
sarl
xor
ret
lds
xchg
std
mov
xchg
cmp
pushf
jae
dec
inc
mull
sub
fstps
cli
lea
jle
pushf
sub
test
int3
push
insl
cwtl
mov
inc
out
push
ret
jbe,pt
mov
sahf
arpl
or
add
sbb
jae
or
or
dec
gs
popf
jae
addr16
jmp
loopne
dec
pop
xchg
xor
fsubr
add
nop
push
and
mov
leave
xchg
sub
pop
pushf
pop
ds
mov
lods
sahf
mov
push
or
fstpl
mov
in
add
mov
lret
stos
sub
idiv
clc
movsl
cmp
insl
ljmp
call
outsb
das
push
inc
popl
ljmp
mov
xor
adc
cli
adc
jmp
pop
fistpll
call
or
lcall
mov
scas
adc
repz
cmc
or
adc
or
sbb
sbb
mov
add
adc
fistpll
incb
sbb
or
xor
xchg
dec
dec
into
push
je
roll
loope
and
cld
and
jbe
pop
or
ljmp
lea
cli
xchg
fldt
incl
inc
pushw
shrl
decl
out
xchg
rclb
cmp
or
fcomip
inc
out
filds
and
add
dec
cli
movb
mov
ud0
mov
cmp
lcall
mov
push
test
rcrb
rcll
add
xor
imul
es
mov
add
into
adc
fwait
dec
stos
inc
roll
mov
jns
call
cmp
cwtl
lcall
sahf
clc
ror
mov
pop
inc
or
sbb
adc
cmp
jb
gs
mov
jno
add
xor
es
ficompl
ror
insb
cmp
mov
sbb
xor
hlt
movsl
mov
nop
out
jecxz
or
jge
mov
sahf
cmc
pop
out
fiadds
adc
push
idivl
jne
jb
xchg
in
push
push
mov
or
rorl
hlt
push
in
mov
mov
dec
or
sub
inc
xchg
add
lahf
repz
aas
xor
js
imul
adc
and
dec
jp
call
enter
and
iret
shrb
mov
add
or
je
dec
cli
inc
cmp
incl
inc
stos
pop
dec
andb
out
testb
rorl
mov
jnp
popa
das
push
stos
inc
iret
mov
ja
sbb
in
xchg
mov
insb
cwtl
ljmp
adc
cmpsb
jno
pop
das
test
cmpsl
mov
pop
stos
fstp
adc
mull
stc
scas
pop
outsl
movsl
jmp
popf
push
fsts
xor
inc
mov
pushl
mov
cmpsl
ficoms
shll
out
push
jne
idiv
cwtl
cmpsl
mov
or
scas
loop
add
mov
push
and
add
mov
inc
pop
mov
or
sub
dec
adc
sar
and
jg
adc
inc
adc
stos
fidivs
lods
push
pop
dec
leave
js
mov
sub
aas
push
inc
sahf
push
adc
lret
add
inc
pop
incl
mov
lock
dec
jnp
cmpsl
push
sub
aad
jae
mov
sbb
cmp
xchg
call
mov
push
cmp
or
repz
sub
leave
jp
lods
dec
dec
pop
les
add
call
mov
xor
ret
add
roll
in
sarb
adc
insb
mov
push
sub
stos
jno
out
and
mov
mov
or
xor
mov
je
mov
xchg
pusha
sub
out
mov
ror
movsl
push
lcall
stos
cmpb
xor
jae
jmp
xor
xor
stc
dec
insl
pop
call
sbb
mov
xor
int3
stos
clc
fcoms
xlat
dec
mov
adc
cmp
cli
mov
xor
push
notl
jp
xlat
mov
dec
outsl
push
and
hlt
xchg
addl
push
mov
xchg
test
inc
lds
into
pushl
out
leave
sbb
pop
stc
pop
mov
pop
add
xor
fsubr
in
aaa
es
scas
mov
std
push
call
inc
insb
bound
out
in
adc
rclb
testl
scas
mov
dec
ret
shl
pop
cmpb
decl
inc
add
test
jae
mov
rclb
stc
lahf
fidivs
stos
das
fimull
push
mov
repz
push
repnz
xchg
ds
adc
scas
out
xchg
cmpsl
insl
cmpsb
xor
jmp
enter
out
testl
mov
sahf
rcrb
repz
icebp
rolb
into
mov
mov
push
out
mov
lcall
cmp
and
adc
icebp
add
fldcw
add
lahf
ja
lret
call
in
push
mov
sub
inc
mov
jns
dec
pop
mov
dec
je
mov
add
adc
push
out
loopne
sbb
clc
mov
pop
jne
mov
negl
xor
cmp
pop
sbb
jbe
daa
ret
shll
mov
xor
jns
dec
popf
mov
jmp
pop
or
sbb
mov
dec
hlt
daa
jg
mov
sarb
add
and
push
push
in
cmp
test
adc
mov
xchg
call
pop
mov
sti
enter
or
push
fisubrs
add
divl
sbb
rorl
mov
insb
xor
jae
xchg
into
xchg
ficomps
outsb
test
push
ljmp
outsl
stos
lods
push
cmp
cmp
mov
cmpsl
hlt
mov
rcl
arpl
std
mov
mov
cmp
fldt
repz
adc
out
shll
jp
fwait
int
mov
add
push
jns
inc
in
int
jno
push
mov
call
or
jne
pop
leave
shrl
and
xor
shlb
cmc
pop
xchg
aaa
out
int3
std
or
xor
aas
adc
push
popa
add
mov
xchg
lds
push
icebp
inc
out
stos
sti
in
dec
decl
xchg
pop
cmpb
sbb
inc
pop
enter
in
jmp
inc
mov
mov
xlat
movsl
push
aam
push
jp
cmp
adc
test
orl
cmpsl
incl
cmpsb
mov
dec
and
sbb
jg
call
leave
cli
scas
sbb
cmp
dec
and
dec
add
lods
xor
mov
int
daa
mov
data16
mov
out
movups
sbb
inc
std
clc
xor
popf
popa
call
call
jae
jmp
int3
loopne
stc
jb
push
leave
cmp
jecxz
mov
xchg
lss
push
cmp
inc
mov
dec
fs
inc
mov
std
mov
out
cmc
call
mov
faddl
mul
lcall
and
add
xchg
mov
mov
nop
lods
sbb
push
jge
js
incl
in
or
ds
testl
xchg
stc
sub
sbb
decl
push
imul
jle
pop
inc
enter
call
in
sub
nop
aad
xor
ljmp
xchg
decl
push
and
aaa
lods
or
rclb
xchg
push
test
cmp
mov
xlat
shlb
push
adc
dec
adc
ss
fldl
mov
xchg
jecxz
inc
sub
fcmovnu
and
inc
out
mov
pop
aam
cmpsb
ret
sub
jns
into
rorb
out
sub
into
shll
push
lret
cmp
or
lods
scas
loop
jnp
stc
sbb
aaa
jl
mov
pop
cmp
adc
rclb
fcmovbe
xor
push
jle
jl
sbb
mov
daa
or
decl
push
cmc
or
nop
sbb
dec
insl
or
mov
enter
push
rcrl
add
sub
sahf
idivl
jne
sub
in
mov
mov
jb
ret
lahf
xor
sub
jmp
shl
aas
xchg
mov
ljmp
jg
mov
mov
test
lcall
out
out
cmpsl
mov
xor
nop
add
sub
sbb
inc
ficoms
rorb
movsb
movntq
mov
imull
jbe
test
inc
adc
mov
cwtl
mov
mov
dec
or
leave
adc
push
mov
ja
incl
imul
into
call
fisubrs
mov
xor
js
mov
inc
ss
xchg
mov
je
or
stos
adc
inc
push
and
push
xchg
or
pop
and
cmp
shl
out
or
sub
jge
imull
cmpsl
loope
jns
data16
pop
xor
xchg
mov
and
mov
push
sub
dec
in
out
in
inc
pop
outsb
pusha
add
mov
fs
cmp
ljmp
add
fstps
enter
mov
loope
pop
lret
test
dec
push
insl
mov
insb
add
orb
lds
nop
xor
jo
movsb
shll
cmp
mov
push
mov
lret
mov
leave
adc
data16
or
jcxz
sbb
leave
repnz
sbbl
xor
mov
ret
dec
pushl
pushf
xchg
lcall
add
adc
cs
mov
int
lahf
sbb
adc
jmp
into
icebp
inc
js
cmp
adc
stos
dec
xlat
fiadds
sti
xchg
push
pop
xchg
decl
movsl
sbb
in
adc
mov
push
mov
push
sub
outsb
ljmp
mov
add
in
xchg
incb
jmp
lret
lea
mov
add
mov
push
push
dec
pop
call
mov
scas
sahf
mov
cmpsl
jo
add
shrl
cmp
inc
add
ret
push
scas
and
cmp
fisttpll
sahf
pop
add
push
hlt
inc
jmp
stos
insb
outsl
cmp
or
fstpt
sub
cli
rclb
sub
iret
mov
sub
mov
lret
sub
insb
add
inc
add
pusha
xchg
scas
in
bound
lea
pop
adc
lret
xlat
dec
lods
mov
test
inc
addr16
cmc
aaa
pusha
jmp
pop
cmpsl
dec
push
adc
dec
xchg
rep
inc
xchg
xchg
pushl
sub
mov
adc
sbb
or
cli
addr16
sub
mov
daa
sub
push
or
cwtl
sbb
jg
into
dec
pop
push
or
xlat
test
fmuls
outsb
sar
adc
mov
xor
add
push
xor
xchg
jg
sbb
out
les
cmp
xor
shl
pop
stc
div
into
and
gs
out
xchg
lock
pop
sub
pop
lcall
pop
mov
sti
test
aas
sahf
push
roll
add
rcr
iret
xor
enter
mov
rorb
test
pop
mov
mov
mov
push
add
int3
sti
mov
xor
jg
cltd
mov
ret
jecxz
or
imul
mov
aas
in
xlat
mov
rorb
mov
sub
add
xor
sarl
xor
rcll
mov
sbb
imul
hlt
int3
or
sbb
mov
pop
and
shl
nop
stos
jge
xchg
push
pop
in
flds
cmpsl
stc
outsb
pop
jo
mov
int
decb
or
das
pop
and
push
fadds
sbb
ja
pop
mov
insb
add
iret
sbb
lds
mov
xchg
shll
cmp
push
jmp
sub
or
sahf
and
sbb
or
add
insl
push
scas
jmp
sbb
cltd
mov
ret
mov
fildl
sub
mov
jl
gs
dec
fadd
hlt
rcrl
mov
or
cmp
xchg
ret
sti
call
out
mov
adc
stos
adc
jp
sarl
enter
sbb
xchg
or
push
xor
sub
in
jmp
inc
sub
mov
fmul
scas
add
cmp
jl
mov
movsb
or
xor
jmp
outsl
and
xor
inc
jg
mov
testl
inc
dec
movsb
call
inc
mov
mov
js
push
int3
inc
jns
jbe
lock
pop
in
or
dec
fs
sub
and
xchg
stc
fcmovne
mov
lods
cwtl
sbb
cmp
fldenv
xor
ljmp
and
mov
out
pop
scas
cmp
sarb
daa
out
cltd
ficomps
fstl
aaa
jle
iret
insl
mov
add
inc
push
mov
out
xor
push
lds
xor
stos
imull
call
add
popf
xlat
fwait
sbb
daa
cmp
scas
sbb
in
rcl
dec
inc
sar
xor
ljmp
cmp
mov
sti
mov
jmp
sti
ds
je
nop
out
cld
and
cmpsb
fstpt
pushf
das
mov
dec
in
ja
idiv
mov
fnstcw
mov
add
and
adc
movsl
into
arpl
les
sbb
movd
ljmp
adc
pop
rclb
in
pop
lea
cwtl
cli
add
call
int3
mov
mov
mov
out
add
call
cmp
sub
sub
mov
incl
bound
push
push
fdivrs
sbb
lret
or
call
or
lcall
fistpll
xchg
xchg
lahf
push
ljmp
xchg
dec
xchg
lret
enter
test
movsb
icebp
sbb
aad
sbb
pop
ja
cmpsl
cmp
inc
mov
adc
scas
jmp
outsl
or
and
nop
mov
pushf
cwtl
ja
pop
std
int3
jae
xor
daa
fcmove
loopne
or
test
fwait
into
mov
pop
stos
decl
aam
dec
adc
mov
fiaddl
lods
or
hlt
mov
icebp
testb
loopne
push
cmp
adc
mov
push
pop
add
jle
fcoms
push
incl
cmc
nop
sub
lcall
pop
or
sub
movsb
ljmp
and
aam
add
iret
push
sbb
je
adc
rcll
mov
insb
xchg
je
mov
push
cmpsl
shll
push
mov
pop
push
in
aaa
mov
or
ds
or
loope
pop
sbb
and
rol
test
and
sti
mov
jmp
and
out
xor
out
push
std
icebp
sbb
sbb
add
jae
adc
add
jmp
add
adc
xor
sti
dec
push
xchg
or
jo
xchg
jmp
or
int3
jae
cmpsl
sahf
jae
call
lea
stos
add
std
push
sarb
mov
mov
push
jne
es
push
push
or
xor
or
adc
jp
push
mov
ljmp
popa
fiaddl
cmpsl
adc
lcall
data16
ljmp
outsb
ret
jecxz
lret
mov
mov
xlat
jae
add
dec
adcl
ret
out
mov
jp
loope
dec
xchg
fcom
and
das
vcvtpd2dqy
jmp
adc
mov
bound
ret
push
outsl
add
sti
aad
hlt
out
inc
pushl
add
mov
movsl
add
pushl
jnp
adc
and
icebp
lock
pop
xor
mov
sbb
shrb
jae
call
cmpsl
gs
jmp
inc
dec
outsb
inc
lret
add
xchg
and
mov
cmp
call
inc
repnz
mov
mov
icebp
std
or
outsl
add
rcll
xchg
mov
fadds
inc
packsswb
sbb
add
xorb
xchg
lret
mov
add
inc
das
cmpsb
pop
mov
inc
push
in
std
out
call
fidivl
pop
cmpsl
roll
jmp
lretw
dec
mov
scas
lahf
fbstp
jbe
je
fdivr
pop
cmp
inc
test
mov
cmpl
inc
mov
pop
fmuls
mov
lret
pop
sub
cmp
std
cmp
sahf
jo
int
or
jl
mov
add
jae
jbe
add
decl
xor
mov
in
xchg
aam
inc
adc
mov
jp
cmpsl
adc
shll
add
pop
jg
xlat
fmull
add
mov
mov
cmpsl
lds
cli
jae
les
xchg
ljmp
add
or
fistpll
int
push
dec
pushl
insb
jmp
lret
push
dec
push
pop
imul
mov
jg
sbb
jle
pop
jae
inc
sbb
js
imul
fsubr
aad
pushl
repnz
xlat
xorb
sbb
pushf
leave
cmpsl
mov
dec
aam
stos
jge
cwtl
pushl
loopne
jno
cltd
dec
insb
pushl
fsts
push
cmp
test
add
ficoms
mov
xchg
mov
sahf
call
adc
inc
mov
ret
xchg
mov
sub
cmpsl
mov
ljmp
in
and
or
pcmpeqw
mov
jmp
out
shlb
es
xor
jo
outsb
cwtl
testl
jmp
xor
cs
cmp
in
mov
fistl
insl
sub
ja
jmp
leave
cmp
push
scas
ja
aad
test
ss
jb
clc
lcall
cmp
out
lret
pushl
xchg
or
inc
xchg
dec
arpl
and
in
pop
push
shrl
lcall
and
jmp
cs
adc
pop
out
mov
mov
movb
ljmp
fildl
hlt
mov
std
popf
call
mov
outsl
lcall
scas
es
mov
jns
and
fnstcw
xor
or
call
and
mov
sarb
push
divb
sti
sbb
push
cmpsl
dec
ss
inc
shrb
stos
dec
sub
adc
cwtl
out
lods
adc
lea
mov
jnp
dec
xchg
mov
decl
das
sub
stos
xor
sub
cld
pop
scas
pushf
nop
pop
jp
lods
cmc
test
pop
cltd
scas
and
iret
push
ljmp
sub
out
repz
setns
mov
cwtl
fsubrs
test
jb
loopne
push
ljmp
jmp
dec
mov
outsb
out
int3
jle
cmp
push
popf
scas
rclb
cmpsl
cwtl
jmp
fisubrs
add
out
fbstp
cmp
or
fisttpll
iret
loopne
js
ljmp
popl
jmp
cmpsl
pusha
cli
fwait
int3
push
and
cmp
nop
mov
xor
incl
mov
or
testl
in
lcall
mov
inc
push
add
cmp
shlb
stos
fcompl
rcrl
testb
cmp
sarb
jp
dec
jecxz,pt
sti
cmpsb
mov
push
push
dec
pop
aad
xor
pop
das
lahf
fstps
enter
loopne
sub
scas
ss
jp
cltd
mov
shlb
mov
hlt
jae
cld
pop
test
mov
mov
lret
test
mov
imul
nop
inc
add
or
test
cmpsb
out
mov
fmulp
xchg
scas
add
add
in
cltd
jmp
sub
cs
and
inc
xchg
jmp
gs
test
orb
push
pop
sarb
pop
scas
mov
outsl
ljmp
mov
repz
call
fisubrl
lcall
mov
in
or
xor
enter
das
lret
mov
mov
fdiv
adc
jae
mov
repnz
mov
mov
fwait
pusha
pop
fstps
xor
outsl
call
adc
or
push
stc
xchg
xchg
or
out
jmp
hlt
scas
repnz
enter
jmp
and
decl
movsb
adc
loop
ficoml
call
inc
jge
js
jb
push
pop
sbb
pop
pushl
dec
ficoms
daa
mov
aas
pop
sub
lea
mov
ret
ljmp
adc
ljmp
push
scas
outsb
hlt
sub
mov
xor
mov
lds
mul
xchg
xchg
add
pop
les
mov
jl
pop
mov
scas
jae
fwait
mull
jle
pop
push
or
cltd
cwtl
pop
push
push
inc
cmp
out
incb
inc
addr16
jg
aad
pop
cltd
call
sbb
bound
and
incl
mov
sbb
in
out
inc
sub
mov
jmp
ret
sub
or
call
testb
lods
adc
jo
dec
xchg
cwtl
mov
fwait
lahf
out
repz
pop
imul
test
add
rcrb
repz
decl
pop
push
cs
adc
lret
xchg
cmp
mov
addr16
imul
jmp
push
xchg
adc
sqrtps
les
mov
or
mov
push
cmp
dec
jnp
scas
loopne
and
mov
push
xor
neg
xor
xchg
mov
dec
xor
xchg
pushf
inc
ljmp
cmpl
or
stos
je
cmpsl
inc
add
and
ja
rcl
test
xor
mov
xor
in
dec
std
mov
in
aaa
or
and
jne
pop
xor
add
mov
call
popa
ja
sahf
or
in
push
fidivs
or
daa
jne
popa
aaa
shlb
mov
add
ljmp
push
fildl
cmp
sub
popa
idivb
add
mov
stc
and
pop
push
out
das
fidivrs
push
push
ljmp
lret
push
lcall
lock
outsb
inc
out
mov
aaa
inc
sub
cmp
jp
pop
fmull
xor
icebp
fistl
push
out
push
pop
data16
loope
mov
inc
cld
inc
incl
dec
test
fwait
out
rcll
lcall
pop
lea
ds
mov
xchg
xchg
push
pop
into
call
dec
mov
pusha
cmpsl
sub
inc
out
pop
clc
aaa
movsb
movsl
mov
push
cld
xchg
cmp
xor
pop
int3
pop
int
fcoms
or
push
mov
arpl
sub
xchg
jae
jne
xlat
lcall
arpl
jne
jo
xor
insb
shrb
aam
cmc
and
enter
adc
dec
shrl
jne
cmp
decl
dec
lret
aam
out
iret
mov
shrb
mov
test
fcompl
mov
add
pushl
mov
aad
sub
and
fadds
cmpsb
mov
in
bound
cmpsb
adc
or
lret
stos
cli
popf
gs
int
jl
lcall
shrl
jg
mulb
repz
mov
xor
cld
push
fnstcw
and
dec
out
xor
add
jg
in
call
or
pop
cmp
mov
mov
adc
or
mov
int
cmp
movsl
push
icebp
stc
ljmp
bound
sub
movsl
aas
dec
stos
incl
sbb
cmp
pushf
xchg
and
call
insl
mov
adc
sti
xchg
add
mov
push
fsubp
add
pop
hlt
adc
push
mov
mov
in
xorl
jmp
inc
xor
adc
loope
cmp
or
push
leave
std
lds
jmp
loop
fidivrs
enter
xchg
fildl
fdivrl
lods
mov
xor
insb
mov
data16
shrl
pusha
mov
or
in
cmp
addl
jmp
push
lods
int3
idivb
pusha
orl
add
mov
or
adc
inc
leave
jg
lcall
outsl
or
incl
add
adc
pop
push
es
aad
mov
and
or
xchg
shlb
ljmp
out
lock
jge
add
sub
aad
mov
xchg
xor
int3
xor
xor
sub
jne
sbb
add
mov
push
addr16
sbb
sbb
sbb
rcl
xor
in
rol
pusha
daa
adc
hlt
repnz
js
pop
in
testl
in
jmp
adc
loop
aaa
es
decl
pop
mov
addr16
xor
cmpsl
aas
inc
sub
cmp
dec
sub
add
mov
not
lcall
xchg
or
xor
jns
inc
mov
incl
idivl
sbb
call
ss
and
push
push
sarb
push
add
jmp
adc
lods
pusha
add
jle
ja
inc
xchg
mov
lret
push
jno
sti
jg
xchg
aas
mov
mov
sbb
push
pop
fcom
int
ljmp
add
xor
pop
cld
sar
scas
mov
push
aad
jmp
mov
add
adc
push
push
cmp
mov
scas
leave
cmp
xor
pop
or
je
add
imul
rolb
sbb
repz
sahf
in
mov
pop
mov
mov
jae
dec
enter
fstpl
outsb
cmp
mov
lods
dec
lcall
mov
inc
cmp
mov
jne
imul
data16
cmp
push
popf
or
shrl
inc
dec
add
shlb
fcomps
std
add
sub
sahf
iret
mov
sbb
fadds
push
push
pop
clc
mov
pushl
inc
filds
xchg
cmp
jl
cmp
lahf
shlb
aad
mov
inc
jle
or
dec
mov
hlt
add
repnz
adc
shlb
repz
shrl
psubq
notb
pop
jp
lock
add
or
cmp
rcrb
xor
pshufw
mov
pop
adc
adc
adc
or
dec
jb
nop
xchg
pop
xor
sub
pop
idiv
data16
stc
lock
lods
sarb
add
aad
pop
add
aas
pop
adc
inc
loope
imul
in
mov
dec
hlt
and
jae
testl
pop
jmp
stos
dec
add
ljmp
fdiv
lcall
mov
cmp
xor
ljmp
sbb
hlt
add
rolb
add
fistl
cmpl
bound
inc
jb
pop
fcom
subb
inc
iret
notl
dec
fidivrl
cmp
mov
les
int3
popa
call
lods
sub
mov
movb
mov
int
aaa
push
arpl
jle
lret
mov
test
fildl
cmp
imul
cmpsl
jnp
jae,pt
pop
xlat
jge
mov
pop
cli
divl
scas
lods
dec
inc
outsl
adc
xchg
test
je
add
xor
jae
cmp
inc
ja
sar
fldcw
sbb
repz
cmp
and
dec
push
repnz
pop
inc
cmc
cmpsb
loopne
ficoms
decl
jmp
loope
or
pushf
hlt
jmp
inc
jnp
push
mov
add
mov
push
and
dec
adc
aam
sub
adc
adc
push
push
xor
add
shl
adc
cmp
cmc
inc
push
incl
xor
mov
es
aam
icebp
repz
pop
push
and
push
inc
adc
cltd
mov
cmp
push
pusha
dec
inc
and
sub
call
mov
js
mov
movsb
das
pop
sti
mov
addr16
sub
fstl
pushl
mov
fwait
xor
xchg
pop
pushf
jno
or
or
pushl
pop
push
dec
adc
mov
popf
dec
rclb
cmpsb
div
aam
icebp
jb
mov
push
js
add
adc
xchg
and
test
sbb
pop
or
incl
adc
mov
add
or
add
lret
mov
fimuls
xor
jp
mov
sub
or
sub
xor
jge
bound
sar
fdivrp
fdiv
cld
lea
push
outsb
lahf
aam
jecxz
sar
or
incl
shlb
inc
shlw
jecxz
mov
pushf
lret
decl
faddl
shl
test
mov
out
sbb
divl
mov
xor
lret
push
mov
rcrb
outsl
enter
mov
or
mov
push
rorl
repnz
ja
out
ljmp
int
jns
jae
mov
adc
mov
in
scas
std
push
jg
sarb
js
pop
sub
call
rolb
or
pop
mov
out
jb
cmc
mov
mov
ss
push
test
inc
adc
adcl
aaa
xchg
mov
or
dec
sub
ljmp
jno
adc
mov
insb
leave
adc
dec
or
xchg
xchg
or
cmpsl
fsts
dec
aas
add
mov
xor
pop
and
mov
xor
or
adc
cltd
ss
and
dec
add
daa
mov
xor
loopne
bound
sbb
or
in
cld
stos
jae
insb
sahf
sarl
mov
dec
mov
pop
xchg
mov
adc
aam
or
xor
pop
or
fwait
xor
cmp
lret
sbb
mov
push
dec
xchg
popa
dec
sar
sub
ss
js
les
or
mov
dec
jno
push
jno
arpl
push
or
shll
lret
add
out
add
add
xchg
push
cmc
aad
or
xchg
jg
cmc
pop
push
dec
testl
xchg
movsl
and
pop
sub
sar
ds
sti
cmc
jno
add
in
icebp
arpl
mov
dec
lds
add
jg
jno
pop
xchg
mov
movsb
rorl
xchg
xor
jg
push
in
pop
stc
ljmp
stc
incl
insl
cmc
cmp
cmp
mov
bound
hlt
or
leave
jmp
cwtl
jmp
pop
jp
cmpsl
test
pop
pop
xor
rol
dec
sbb
lret
bound
or
jp
cmp
sub
iret
xchg
adc
push
xchg
cmp
mov
enter
dec
les
cmpsb
ret
daa
mov
data16
inc
pop
or
push
in
outsb
or
mov
fidivrs
mov
cld
add
xchg
mov
cmpsl
mov
clc
xor
push
and
push
shr
fsubrs
out
or
mul
add
dec
cmp
sahf
aad
outsb
bound
push
mov
icebp
into
dec
push
and
add
or
lock
adc
mov
cmp
mov
repnz
sub
mov
lods
jno
pop
mov
jno,pt
mov
pop
cmc
pop
jno
xchg
mov
dec
ss
mov
js
ds
add
repnz
and
xlat
or
aad
xlat
ret
je
sbb
and
fldl
out
daa
shll
aad
insb
adc
int3
mov
out
fisttps
call
or
sub
lahf
call
mov
loope
add
adc
xor
or
xchg
lock
push
jecxz
fstpt
mov
jecxz
stc
inc
pop
jg
aam
adc
mov
or
xor
jp
popf
jmp
push
mov
addr16
insb
add
daa
sbb
pop
add
es
or
popf
lret
in
add
jp
leave
ljmp
xchg
mov
dec
decl
daa
adc
cmp
cs
fisttps
and
lea
faddp
inc
daa
pusha
shl
push
inc
or
and
enter
in
subb
rol
cmp
movsl
outsl
cmpsl
rcr
jmp
fists
leave
arpl
into
ja
or
lea
jmp
fcmovnu
insb
lcall
pop
fdivrl
mov
mov
test
imul
xchg
iret
sbb
idivl
mov
cmpsb
cvtdq2ps
nop
in
adc
jmp
cs
push
lret
lahf
ljmp
out
out
int
scas
push
imul
lods
or
push
lea
jmp
decl
ljmpw
xchg
cltd
outsl
cmp
sub
daa
cld
ljmp
fildl
arpl
mov
or
stos
push
inc
aad
scas
outsl
popf
out
mov
or
into
popa
adc
cs
add
fcomip
outsl
lcall
or
adc
sub
sbb
dec
or
in
push
inc
mov
pop
or
aad
loope
cmovle
dec
int
and
insb
sti
pop
xor
cs
aas
xchg
push
mov
ret
add
add
or
adc
loope
mov
fs
inc
xor
mov
hlt
or
repz
pop
pop
xor
arpl
cmp
clc
jo
jp
adc
fldl
out
mov
sti
aam
inc
fists
jmp
int3
cmpsl
xchg
sub
jne
or
jne
ffree
mov
mov
push
and
push
movsl
in
loope
mov
adc
testb
xor
add
imul
xor
mov
push
or
cmp
loope
sar
pop
icebp
sbb
pop
movsl
ficoml
xor
mov
dec
xor
ja
jnp
xorl
sti
xchg
inc
mulb
pusha
push
cld
sub
jb
and
or
push
rclb
nop
push
sub
lahf
std
push
lcall
shl
test
xchg
es
js
fldenv
insb
lcall
mov
pop
addr16
test
adc
jne
in
add
cmp
jb
jle
add
clc
mov
fwait
and
ficoml
cltd
shll
sbb
jne
sti
xor
jae
or
add
push
sti
nop
xchg
std
xchg
int
xchg
push
mov
xor
popa
cld
cld
sarl
imul
cmp
nop
insb
stos
scas
mov
push
xchg
add
push
push
cld
mov
add
add
adc
in
cmpsb
lcall
lods
mov
push
jmp
test
in
in
cmp
fmuls
loope
test
mov
sbb
jae
mov
jb
jge
fmuls
mov
mov
jmp
jae
sarb
cmp
fs
push
data16
daa
mov
push
out
push
in
push
push
xchg
mov
sub
or
jle
movsl
cs
cmp
push
or
orb
xchg
es
or
jge
mov
divl
xchg
int
out
es
loopne
lods
int
mov
repz
jl
xchg
or
cmp
add
lret
pop
mov
xor
icebp
lods
jmp
ror
mov
imul
pop
inc
lds
and
clc
push
xchg
push
rolw
xor
and
cmpsb
inc
sub
movsb
lods
sbb
push
xor
je
jo
std
jae
shr
pop
xor
push
pop
daa
mov
daa
out
xchg
daa
lods
and
inc
cmpsl
std
rol
jge
xor
std
es
lahf
mov
pushf
test
jo
or
rorl
nop
enter
mov
incl
lea
adc
loop
or
mov
aad
idivl
pop
mov
sti
xchg
cmp
mov
pop
adc
jo
jge
leave
andl
cmp
cs
and
add
and
jo
jecxz
xor
rcll
pop
hlt
xor
dec
inc
or
mov
push
mov
ja
xchg
xchg
and
xor
adc
enter
xchg
scas
dec
fdivs
add
js
popf
xor
jp
xor
hlt
ja
test
cmp
and
aas
test
xchg
dec
repz
and
xchg
idivl
mov
xor
shll
sub
std
xor
mov
mov
andl
xchg
std
rcl
push
or
inc
insl
mov
lea
and
mov
jo
incl
aaa
adc
inc
sti
mull
mov
inc
mov
ret
pop
ss
sbb
pop
dec
lcall
ljmp
movsb
popf
cmc
in
or
push
loopne
sbb
insl
pop
mov
cmc
jge
xor
push
ret
mov
outsb
sub
mov
xor
xchg
in
jg
ret
stos
lea
iret
fbstp
pusha
pop
jnp
ljmp
sub
jecxz
cmp
cmc
jmp
jae
dec
add
call
shlb
lret
dec
xlat
test
ljmp
or
mov
fmuls
xchg
dec
test
dec
je
push
push
cmpsb
jo
outsb
mull
enter
and
xchg
pop
sub
sbb
jp
testw
pop
ljmp
adc
jae
rorb
icebp
xchg
xchg
jl
ljmp
add
add
adc
jo
inc
xchg
or
jecxz
mov
cmp
mov
mov
int3
je
mov
pusha
dec
aaa
out
addb
sarb
pop
repz
xchg
inc
out
rorb
sti
xchg
ss
xor
cmp
mov
rolb
xorb
add
pop
push
or
or
or
imull
jle
xchg
hlt
pop
xor
mov
mov
lods
outsl
xor
mov
fimuls
jmp
adc
je
pop
sbb
jmp
das
or
xlat
rclb
cld
xchg
iret
jmp
flds
shrl
in
cli
sti
in
aas
aaa
inc
xor
repnz
imul
or
or
add
inc
fiadds
jbe
xorl
ja
sub
sbb
xor
push
scas
fsts
push
daa
lods
call
cli
loop
push
out
mov
adc
gs
sbb
add
sbb
or
iret
lahf
pushl
mov
aam
sbb
xor
mov
outsb
das
sti
and
scas
pushl
aaa
std
je
test
out
add
sub
scas
scas
call
push
iret
xor
dec
pop
shr
jecxz
out
movsl
mov
repnz
testb
push
pop
jmp
mov
fidivl
lods
jmp
out
popf
loopne
mov
insb
add
jne
jne
and
daa
jg
adc
in
or
clc
or
shrb
repnz
inc
repnz
test
xchg
jns
roll
ljmp
mov
add
sub
ljmp
jmp
jmp
or
int3
mov
adc
push
mov
ret
sar
sahf
push
mov
rolb
shlb
pop
mov
mov
cld
femms
mov
push
or
lea
lret
adc
dec
mov
cmp
iret
inc
sub
adc
push
xchg
mov
push
sti
mov
icebp
cmp
mov
mov
call
cmc
inc
pop
adc
nop
mov
or
ljmp
push
les
andl
xor
rol
test
add
lcall
pop
pop
mov
push
ss
incl
int3
test
repnz
adc
cmp
jae
jno
xchg
dec
roll
sub
adc
inc
or
rorb
ljmp
mov
cmpsb
flds
inc
pop
cwtl
rcrb
scas
call
incl
jo
lds
pop
add
ds
pop
mov
fistl
mov
in
out
mov
mov
mov
cltd
aad
xchg
dec
pop
xchg
jmp
dec
and
sub
movsb
ss
mov
xor
inc
push
call
decl
js
popf
lcall
cmp
testl
cmp
repz
add
adc
push
mov
mov
shll
inc
mov
ret
subb
lret
bound
nop
pushf
jnp
push
pop
push
pop
jg
jmp
mov
test
lcall
add
pop
xchg
outsl
adc
orl
dec
xchg
mov
mov
gs
xor
and
jb
rep
cmp
adc
loope
sarb
cmovle
mov
sti
arpl
adcl
imul
sbb
xchg
fisubrs
cmp
lea
inc
add
sub
xchg
icebp
pop
jge
ds
mov
movsl
mov
xchg
pop
lcall
mov
stc
jmp
aaa
cltd
cmp
in
clc
adc
sti
sbb
pop
mov
jns
or
pop
lods
push
or
shrl
push
jnp
mov
fs
test
repz
dec
incl
aas
dec
or
mov
pop
jne
in
lcall
stos
xor
jp
xchg
pop
add
mov
test
mov
cmp
adc
sub
mov
cltd
cmpsb
add
dec
daa
cmp
add
sahf
mov
jecxz
movsb
leave
xchg
xchg
or
lret
loopne
inc
xor
incl
cmc
push
fisubl
imul
fdivr
mov
pop
jb
ljmp
mov
add
lods
cmp
push
mov
or
je
adc
jl
sub
jecxz
stc
push
xor
shl
in
aad
xchg
sub
inc
popa
fidivl
incl
push
pop
dec
es
incl
lods
xor
mov
and
insb
aam
sub
lods
call
jns
mov
stc
lret
jb
arpl
movsl
jmp
rol
or
incl
cmp
in
xchg
flds
imul
add
adcb
out
push
test
leave
into
jecxz
mov
fwait
cli
or
xchg
cmc
mov
dec
add
or
add
call
cltd
dec
sbb
gs
xor
or
xorl
cld
inc
dec
xchg
xlat
hlt
cs
decl
jbe
inc
dec
jnp
in
and
inc
rcll
enter
js
pop
pusha
lcall
dec
sub
and
add
gs
test
dec
sub
test
jle
sarl
nop
imul
mov
icebp
rcr
sbb
add
add
and
stc
jmp
and
std
call
cmp
xchg
jge
dec
mov
rcrl
pop
dec
test
push
in
or
scas
add
stc
inc
in
xor
xor
insb
fistps
push
pusha
pop
frstor
inc
push
outsl
pop
mov
mov
mov
popa
and
mov
push
outsb
pusha
mov
decb
and
jmp
and
or
in
inc
push
push
cmp
mov
or
lods
int3
and
jp
xchg
scas
fcomp
in
add
sub
rcl
call
lahf
dec
jmp
fidivrs
movsl
scas
fistps
jb
sbb
adc
hlt
xor
jg
lcall
int
incl
fs
fiaddl
mov
adc
shlb
dec
add
repnz
mov
xor
lcall
cmp
adc
int3
leave
call
mov
out
add
rol
mov
jmp
cmpb
adc
mov
lret
sti
push
movsl
lcall
rcrb
cmp
xor
mov
push
pop
aaa
jnp
stc
icebp
pop
sahf
cmp
mov
mov
pop
and
ds
push
jno
mov
sub
pop
sbb
fmull
test
adc
xor
sahf
sbb
cmc
shll
popf
ja
mov
stos
pop
jg
sbb
rcrb
jge
test
in
mov
mov
add
rolb
push
shll
xor
movsl
sbb
lock
jge
pop
jle
xchg
flds
mov
aam
pop
inc
push
cli
adc
jnp
ss
jno
cmp
mov
sbb
push
ljmp
mov
in
int3
xor
cmpsl
add
cmpsl
jnp
sub
mov
bnd
adc
jle
mov
pop
inc
sahf
in
cmpsb
nop
icebp
mov
pop
fisubl
jecxz
cs
jecxz
call
sub
jns
in
mov
ds
sub
rclb
fimuls
or
mov
divb
push
jecxz
jle
rcll
jbe
xor
ja
xor
movsb
adcl
push
enter
repz
xor
clc
sbb
jae
mov
jmp
hlt
in
lds
mov
bound
and
pusha
out
sbb
pop
xchg
lcall
test
lahf
push
ljmp
push
aaa
fs
jmp
or
sub
push
mov
adc
clc
mov
sti
xorb
aaa
cmp
sbb
sbb
mov
xor
clc
cmp
popa
adc
adc
push
insl
jmp
jbe
pop
jl
sbb
xorl
sbb
int
mov
add
sbb
dec
adc
stos
push
cmp
adc
lock
push
popa
cmp
clc
mov
sarb
and
adc
jbe
cmp
xor
add
ds
adc
dec
xor
int3
in
notb
std
jo
or
popa
mov
mov
fadds
scas
pop
or
pop
pop
cld
dec
cltd
adc
and
mov
adc
and
mov
mov
and
or
push
cmc
dec
xor
dec
jbe
int3
shl
pop
gs
cwtl
sub
addl
pop
push
repz
lock
sbb
inc
addl
xorb
fs
hlt
nop
cltd
mov
jp
xor
xor
mov
ss
stos
test
mov
pop
pop
pop
mov
mov
icebp
rep
mov
out
sbb
in
fcoml
push
loop
cmpsb
hlt
push
push
jecxz
cs
push
rorl
in
mov
xor
mov
nop
jo
mov
cltd
xchg
add
jl
out
daa
mov
bound
cmp
xor
shl
adc
addr16
cltd
pop
mov
push
aam
adc
jmp
repnz
pop
pop
stos
xlat
daa
pop
inc
mov
hlt
or
mov
dec
test
and
ficompl
out
push
popa
xchg
aas
adc
mov
adc
xor
nop
mov
jb
xor
rolb
nop
xchg
push
stc
shrd
mov
jmp
xchg
hlt
jg
mov
into
filds
xorl
into
inc
pushf
fwait
jne
push
adc
daa
xorb
call
add
loopne
dec
adc
cmp
and
inc
int3
iret
aad
mov
add
sub
clc
sti
mov
cwtl
hlt
sbb
idiv
paddq
sbb
out
decl
das
inc
int
in
mov
in
lgs
popa
mov
cmp
jne
lds
push
pop
dec
es
xor
lods
fucomip
addr16
lods
fisubrl
out
lret
ret
pop
push
cld
pop
jl
xor
add
test
ss
and
inc
insb
cmp
jle
dec
xchg
mov
shrl
add
out
push
dec
dec
aas
cmpsb
sbb
pop
pop
push
jmp
jb
stc
xchg
stos
je
adc
js
inc
test
idiv
sub
cmp
cwtl
test
push
sub
lcall
addr16
iret
fnstcw
jp
xchg
dec
cmp
rclb
and
mov
cmp
add
xchg
inc
ror
push
movsl
jle
movb
movb
lea
ja
inc
pusha
jmp
mov
rcrb
mov
xchg
fidivrs
adc
mov
clc
into
stos
or
cmc
mov
and
lods
repz
sahf
inc
out
and
call
ja
sbb
inc
nop
jle
pop
fidivrs
mov
push
mov
lahf
sub
out
outsb
pusha
sub
jne
mov
push
inc
or
push
call
pushf
pusha
mov
movb
inc
push
pushf
mov
lea
jmp
dec
stos
movsl
or
stc
int
mov
push
loope
xchg
lret
jg
pop
fwait
inc
mov
idivl
xor
gs
mov
ljmp
sub
and
lret
fcompl
dec
out
sub
xchg
divps
ljmp
ret
nop
add
xor
pop
leave
cmp
jmp
daa
jo
cwtl
jo
imul
sub
fwait
pop
test
sbb
not
data16
adc
jge
dec
adc
xor
cmpb
sub
jle
jecxz
sldt
pusha
stc
add
sub
stc
test
bt
add
pusha
dec
mov
lea
jne
clc
ror
mov
pushf
pushf
pusha
cmp
jmp
je
out
sahf
and
push
cmp
dec
jae
xchg
add
push
ss
test
jg
or
xchg
ss
sbb
mov
ffree
sbb
orb
adc
jg,pn
in
pop
or
test
push
bound
xchg
mov
addr16
std
dec
lret
scas
mov
mov
jmp
mov
jns
push
pusha
lea
call
pushf
push
pushl
mov
pushf
pushf
movw
lea
jmp
movw
mov
mov
mov
pushf
pusha
pushl
ret
pop
sub
loopne
popf
insl
cwtl
ja
cmc
sub
push
mov
mov
mov
mov
jg,pn
lea
push
pop
xchg
ss
adc
movsb
cli
jg
stc
lret
fstl
mov
jge
out
or
lret
push
je
dec
pop
stc
sbb
fidivrl
pop
mov
or
out
xchg
outsl
leave
sbb
into
pop
or
jl
mov
shl
pop
dec
pop
jle
jg
inc
mov
xor
xchg
jae
jle
inc
pop
icebp
outsb
mov
sub
lock
xchg
push
or
inc
fcompl
fdivs
fisubl
cli
jecxz
mov
mov
shll
push
data16
or
movl
pushf
pushf
lea
jmp
stos
or
in
nop
movsl
mov
out
add
movsl
adc
push
outsl
enter
xchg
push
lea
mov
xchg
pushf
loope
insl
xchg
fadds
and
jp
out
push
ja
jb
mov
jmp
lret
in
or
cmp
jo
pop
inc
ret
sub
and
insb
imul
loop
ja
push
jmp
cmp
mov
xchg
jns
fistl
fldcw
adcl
cli
jnp
jns
iret
stos
in
loopne
sbb
sahf
cmp
sbb
pushf
or
lret
xchg
dec
outsl
dec
fadd
scas
outsl
pop
ret
loop
clc
sti
push
pop
dec
adc
cmp
gs
iret
stos
in
mov
inc
and
adc
cmp
mov
sbb
mov
jae
dec
mov
js
mov
fwait
jae
adc
add
xchg
mov
cwtl
hlt
lret
pop
xchg
imul
fbld
add
test
add
add
inc
js
je
jb
arpl
jae
mov
pushf
bswap
pop
pop
pusha
pushf
pushf
pushl
pushl
ret
bswap
pop
call
xchg
les
out
dec
cmp
or
shll
cmp
imul
push
in
pop
push
enter
popa
into
cltd
lcall
test
and
mov
rcl
ret
sub
lcall
push
decb
pop
jae
cmc
dec
sbb
ja
gs
je
cli
lret
cmp
adc
mov
mov
sbb
nop
sbb
jbe
in
pop
sti
std
adc
stos
shrb
jecxz,pt
pop
ficoml
lret
mov
sahf
cmc
push
xor
ljmp
lcall
xchg
ljmp
adc
flds
mov
push
adc
insb
cwtl
sbb
es
jae
les
sub
mov
jno
mov
jno
hlt
or
je
test
dec
adc
or
adcl
mov
add
mov
xchg
xchg
cld
js
jmp
push
inc
repnz
adc
sbb
lret
cmp
test
lret
insl
pusha
insb
nop
movsl
test
inc
inc
sti
sbb
shl
pop
sbb
dec
add
ss
mov
out
aas
push
dec
daa
xor
in
or
mov
fistpll
mov
pop
add
fcmovbe
test
lret
ss
scas
out
rcrb
jo
fstpt
lods
push
iret
ds
jnp
push
ret
mov
lcall
pop
fsubrp
pop
dec
jbe
leave
std
aaa
mov
dec
xchg
jl
stos
pop
repnz
les
and
mov
xchg
or
fldenv
push
pop
into
out
loope
or
mov
fsubr
inc
int
jl
push
movsb
cmpsb
jb
jo
out
dec
js
scas
jle
xor
out
xchg
popa
xor
and
or
pushf
lcall
mov
mov
or
shr
lods
mov
cmp
sbb
sbb
sbb
mov
in
mov
pop
push
cmp
sbb
les
leave
jmp
mov
aaa
loope
mov
inc
or
mov
testl
mov
stc
jge
dec
xchg
popa
mov
xchg
adc
push
icebp
fsts
mov
outsl
pop
shll
sub
mov
sub
icebp
in
orl
push
test
fwait
mov
jo
test
dec
dec
pop
rclb
test
mov
sub
dec
xlat
and
ja
pop
in
div
adcb
xchg
pop
push
or
sbb
aam
cmp
out
clc
stos
lods
insl
imul
add
ret
pop
inc
adc
push
icebp
jnp
aam
leave
movb
pusha
movb
lea
jmp
push
push
in
fsts
stos
repnz
and
pop
mov
jno
sbb
out
jno
cmp
push
inc
xchg
sub
jns,pn
and
fwait
movsl
or
ss
sbb
ljmp
movsl
clc
pop
shl
jnp
mov
clc
inc
mov
in
mov
mov
xchg
mov
cld
mov
fwait
add
jl
lret
hlt
das
push
adc
adc
nop
cld
test
aas
mov
insl
aam
mov
inc
aaa
cltd
lods
aaa
cmpsl
xor
jo
mov
es
pop
int3
mov
lock
pusha
dec
inc
leave
inc
or
addr16
sub
dec
xchg
jge
jl
clc
mov
mov
adc
inc
into
sar
pusha
mov
sbb
add
push
hlt
lock
ds
lahf
dec
rclb
ret
mov
inc
and
jg,pn
mov
test
test
cmp
popa
mov
ja
fwait
in
lret
lret
cmp
push
not
pushf
clc
ror
jmp
sbb
rclb
leave
inc
xor
or
cmpsb
inc
push
xor
in
imul
inc
xor
mov
dec
or
dec
mov
mov
rcrb
inc
xchg
in
jo
mov
hlt
pop
fdiv
push
out
movsb
push
mov
fucomp
insl
push
in
decl
sahf
test
pop
mov
mov
ja
jmp
ret
mov
imul
jge
loope
sbb
movsl
shll
lret
movsl
jle
xchg
add
lea
inc
pusha
xchg
imul
pop
xor
jbe
popf
lret
shrb
enter
rcll
dec
sub
xchg
mov
push
mov
imul
dec
sbb
popf
scas
mov
jns
shll
push
and
imul
dec
adc
and
jae
outsl
and
pusha
lret
xchg
enter
scas
ficompl
cmp
sti
aam
jge
subl
or
shrb
pop
int
xor
mov
test
enter
add
jmp
and
add
inc
xchg
pusha
dec
mov
jecxz
adc
or
push
mov
push
jp
f2xm1
and
inc
out
jnp
mov
cmpsl
inc
cwtl
loop
repz
xchg
adc
fisttps
dec
dec
or
mov
movsb
out
sub
outsb
push
ret
negl
clc
popf
addl
inc
sub
xchg
add
mov
cmp
sbb
dec
outsl
pop
les
into
rcrl
push
xor
mov
ja
fstpt
stos
sti
jg,pn
mov
jl
cmp
dec
cwtl
scas
cmpsb
pop
xchg
or
push
sbb
cmp
push
hlt
sbb
ja
aas
lock
shrb
in
xchg
xchg
push
push
ja
sbb
out
or
sub
pushf
pop
pop
mov
inc
lcall
fidivrl
adc
adc
xor
data16
dec
inc
adc
int
divb
mov
ss
fisubs
pop
leave
push
cmp
loope
jnp
outsb
adc
aaa
sub
pop
jne
fildl
xchg
test
push
cmp
fsubs
rclb
orb
jl
lahf
ds
addr16
je
ja
ror
push
cmc
mov
lcall
or
add
jns
aas
jno
mov
ljmp
outsl
out
xchg
xor
or
push
mov
jae
and
inc
push
mov
f2xm1
mov
fwait
pop
jmp
push
sbb
shll
mov
xchg
push
mov
sub
inc
xor
mov
inc
or
imulb
or
sbb
sahf
movhps
sbb
adc
test
lcall
jmp
sbb
pop
dec
popa
lret
aaa
pop
xlat
test
das
inc
push
gs
adc
cmp
jns
push
cmc
ficomps
sub
push
add
out
loop
sbb
dec
mov
jp
xor
push
aam
mov
pop
insl
and
js
mov
push
push
test
out
insb
pop
iret
jnp
lods
sarb
xchg
sbb
mov
pop
rcrb
pop
lret
cmp
sub
and
add
rcr
pop
xchg
adcb
mov
sub
xlat
sti
inc
popa
idivb
cmp
pop
push
out
iret
mov
dec
lea
call
xor
stc
out
mov
repnz
jecxz
cwtl
test
aam
lret
decl
cld
pusha
mov
push
push
mov
pushf
movl
not
lea
pushl
movl
push
pushl
pushl
popl
pushf
mov
pushl
ret
cmp
cmp
pusha
call
xchg
lods
sub
shr
ret
and
push
dec
add
push
push
int3
mov
ror
and
shl
ja
mov
loope
iret
lock
xor
jmp
lds
outsb
mov
push
test
mov
or
mov
addl
movsb
movsl
les
icebp
cmp
lods
ret
ss
add
jmp
mov
ret
mov
gs
stc
cmc
lret
pop
aam
imul
movsb
iret
dec
pusha
mov
repz
fsubs
int
sub
xchg
lret
in
movl
mov
fs
into
insb
out
stc
push
lret
cmp
and
in
lret
and
or
sub
insb
testl
das
xor
fmuls
fsqrt
aad
lea
jb
push
cmpb
out
cwtl
mov
nop
sti
int3
adcb
into
xchg
and
pusha
push
std
push
vpshlq
arpl
loopne
and
mov
push
add
js
fcoml
xor
push
clc
xchg
dec
xchg
rcll
nop
mov
popa
add
sub
in
push
roll
pop
jp
adc
sbb
xor
dec
pop
and
jb
leave
in
cmp
pop
fadds
xchg
or
outsl
cmpsl
leave
in
cld
mov
test
test
andl
mov
out
push
mov
int
add
data16
mov
gs
cmpsl
adc
push
test
push
popf
jne
xchg
outsl
cld
push
push
int
and
clc
or
mov
xchg
je
nop
mov
out
pop
int
arpl
sbb
in
dec
sahf
pop
mov
aad
mov
testl
leave
into
adc
jmp
cmpsb
lds
int3
mov
sbb
push
pop
outsb
pop
std
insl
mov
loopne
xchg
sub
dec
sbbb
xor
enter
mov
add
stos
rcrb
test
repnz
mov
ds
ret
fmulp
jmp
ret
pop
xchg
mov
xor
or
and
mov
or
repnz
mov
mov
mov
jecxz
js
and
adc
fadds
int3
out
pop
sbb
les
jg
lock
cmpsb
out
jg
sub
push
and
clc
sbb
fs
leave
in
pop
repz
jle
ljmp
mov
fistpl
or
in
xchg
mov
add
insl
rorb
add
dec
xchg
in
cmc
pop
push
insl
mov
rolb
adc
arpl
stc
dec
cmpsl
dec
lds
mov
mov
jno
test
push
stc
cld
jbe
mov
movl
pushf
pushl
movl
pushf
mov
pushf
lea
jmp
add
enter
push
shrl
mov
sub
xor
mov
sub
xor
daa
add
mov
add
test
add
mov
add
mov
sub
cmp
daa
add
mov
add
daa
add
mov
add
jo
add
mov
add
mov
sub
xor
daa
add
mov
add
test
add
lea
jne
not
movb
movzbl
push
lea
lea
jmp
add
mov
mov
sbb
jmp
es
mov
fnstsw
icebp
jecxz
push
es
or
mov
leave
sub
and
push
loop
loop
adc
lods
lret
adc
xlat
pushl
lea
jae
dec
pushf
mov
push
call
ljmp
fisttpl
scas
in
pop
push
enter
jb
cmp
call
cltd
pop
cld
adc
es
inc
sub
aad
jns
fisttps
sti
daa
jno
dec
xor
inc
into
add
sbb
adc
cmp
movsb
dec
adc
repnz
fsubs
lcall
ror
inc
sub
dec
fsts
pop
sbb
inc
daa
sub
sahf
xchg
push
mov
dec
test
mov
fwait
push
inc
aam
jo
outsb
stos
inc
fiadds
push
rorb
test
inc
pop
xchg
jo
push
ljmp
ss
jns
adc
or
test
mov
enter
jmp
adc
adc
fstp
loopne
lods
test
pop
flds
mov
mov
pop
xor
inc
push
gs
mov
jae
cmp
imull
or
adc
in
aam
xchg
ds
or
pop
clc
clc
clc
xor
jmp
or
fistl
pop
push
jno
pop
push
add
sti
enter
pop
xchg
icebp
adc
inc
inc
add
andl
pop
fiaddl
xor
fcompl
push
insb
addl
add
push
mov
mov
or
cmp
das
movsl
pop
push
addr16
push
pop
mov
jne
iret
mul
in
push
lea
dec
daa
jns
jmp
std
xchg
dec
add
jb
imul
add
jb
jmp
mov
inc
add
ja
mov
or
add
ljmp
cmp
jecxz
adc
orb
mov
pop
fs
sub
call
push
pop
jne
sub
iret
test
inc
push
push
sub
mov
in
fistpl
shrd
daa
fs
mov
test
das
cmp
movsl
jle
shll
sbb
lret
and
in
mov
cltd
es
in
jo
fcomip
int
cli
jle
fwait
arpl
divl
shll
dec
pop
dec
mov
ret
or
pop
js
cmpl
and
jo
sub
mov
cmp
jnp
cmp
push
mov
enter
dec
push
push
popa
xchg
jae
outsl
xor
aas
lock
adc
divb
cmpsl
repz
rol
dec
dec
or
jge
push
scas
stc
add
ljmp
repz
jmp
add
test
cmp
pusha
call
or
mov
nop
clc
mov
cwtl
int
rorb
sub
loope
addb
insl
insl
mov
ret
mov
sbb
jle
pusha
stc
gs
fcomps
jb
addr16
int3
jecxz
inc
fbld
call
pop
insl
pop
mov
test
adc
jns
pop
fisubrs
outsl
jp
mov
sbb
pop
push
nop
sbb
adc
loop
test
mov
jmp
add
add
int3
mov
sti
pop
popf
js
sahf
push
cld
sub
or
dec
cwtl
movsb
lods
jb
iret
lret
es
jne
stos
sar
dec
sbb
in
lods
ja
jbe
dec
mov
add
pop
stos
push
pop
cmp
lea
inc
pop
xchg
cs
jno
enter
cmp
and
add
xchg
mov
sti
pop
sub
mov
xchg
pop
test
push
inc
xchg
in
mov
adc
jecxz
repz
add
test
lret
popf
adc
aaa
jb
outsl
mov
movsl
out
aaa
sahf
lods
inc
scas
sahf
movsl
cmc
mov
ret
data16
xor
pop
js
pushw
sub
push
mull
pop
outsl
jge
pushl
and
mov
repnz
add
xor
fisubrl
inc
aad
popa
js
cmp
mov
dec
in
sbb
pop
movsl
loope
xchg
je
inc
push
leave
data16
mov
scas
xlat
jle
jbe
cmp
add
xor
aad
push
loopne
jb
jl
add
mov
out
push
movsb
daa
lret
mov
std
pop
addr16
pop
ljmp
fcmovbe
rcr
push
and
jl
xlat
add
cmc
mov
xorl
ret
jns
loop
shl
cmc
or
cld
dec
mov
daa
int
out
cs
incb
fwait
movl
ret
out
leave
inc
ficoml
mov
pop
shll
add
mov
fdivrl
mov
test
mov
pop
sbb
fs
sub
loopne
mov
push
js
add
fidivrl
mov
shl
cmp
lods
adc
mov
or
mov
int
popf
lret
xchg
test
mov
fldt
popf
pop
xchg
loop
insl
jne
clc
xchg
sub
std
lds
dec
stc
sbb
push
mov
pushf
or
sub
cli
push
xor
sub
push
adc
clc
clc
mov
inc
pop
lret
rcrb
lods
cmp
dec
sub
fcoms
push
dec
mov
push
cmpsl
rcll
push
cmp
jno
sbb
hlt
ds
jg
xor
xchg
push
mov
dec
ja
les
and
inc
push
push
testb
fnstcw
dec
xchg
push
sbb
or
dec
lcall
adc
je
pop
ret
les
gs
lahf
sub
push
dec
shll
ss
lcall
lret
daa
aas
repz
xchg
jnp
test
addr16
xor
jle
inc
loope
int
les
xlat
mov
insb
cmpsb
in
jge
aaa
ret
lods
loope
data16
lret
dec
mov
xchg
cmpsb
add
sbb
ljmp
test
int
int3
aaa
notb
bnd
jno
cwtl
idivb
push
popa
xchg
sub
std
stc
repz
adc
mov
dec
lret
test
out
adc
mov
xrelease
daa
pop
into
inc
mov
adc
mov
sub
test
mov
mov
lahf
sub
icebp
out
dec
adc
fdivrs
out
lea
lret
jle
mov
lea
mov
mov
mov
pusha
call
cltd
loop
push
sarl
in
push
and
loopne
mov
pop
sahf
or
stos
pop
mov
sub
out
cmpsl
sti
out
xchg
push
repz
add
jno
shrl
pop
jbe
inc
das
inc
mov
cli
int3
loop
add
lret
xor
mov
mov
dec
lcall
pop
daa
rol
rorl
dec
pop
mov
mov
sub
andb
or
cmpsl
jg
push
lods
call
lahf
or
popa
inc
push
mov
insl
std
das
int
outsl
cmpsl
add
sti
xor
cmp
jo
cmp
adc
xchg
sbb
aad
adc
movsl
mov
movsb
xchg
inc
mov
dec
fcmovu
adc
xlat
pop
mov
repnz
cmpsl
scas
ret
out
inc
ret
cmp
and
roll
jb
adc
nop
fiadds
jnp
out
sub
pop
pop
mov
xchg
lret
sub
loop
popa
leave
cld
aam
fstps
mov
mov
popf
sbb
inc
loope
mov
dec
insl
mov
out
lret
push
clc
jbe
aaa
ret
decl
stc
lcall
call
jo
push
jecxz
cmc
subl
lcall
cmp
movsl
lods
mov
sbb
je
test
push
pushw
std
pop
push
adc
push
ret
inc
or
push
in
sub
mov
pop
nop
jl
icebp
mov
pop
push
dec
adc
out
inc
xor
mov
sbb
shrb
inc
loop
sti
and
and
jnp
es
adc
sti
dec
adcb
mov
hlt
mov
xchg
mov
cmp
mov
dec
je
fcmovb
stos
cmc
iret
fcoms
mov
mov
outsl
lods
scas
popf
dec
lret
jg
jg
jbe
test
mov
mov
in
jg
cmp
pushf
mov
push
in
and
add
subb
aas
lock
mov
mov
ss
test
or
jge
addb
adc
js
movsb
fists
lret
lcall
fs
mov
scas
push
jle
aas
int3
push
mov
inc
and
jp
jp
pushf
jbe
add
mov
fiadds
add
jno
movsl
out
add
iret
nop
aas
int3
es
lcall
lahf
xchg
sahf
pushf
mov
pop
and
sbb
fidivrl
sbb
ss
add
push
or
ss
ds
mov
cmp
lods
mov
inc
js
clc
in
scas
icebp
mov
sub
iret
in
shl
mov
and
inc
sbb
push
daa
movsl
jnp
std
or
fbld
fdivl
jnp
sbb
sti
int3
inc
jo
cmp
sub
imulb
fwait
cmp
insl
imul
adc
or
cmp
dec
aas
push
or
pop
mov
ret
arpl
dec
inc
add
stos
mov
mov
lods
lods
adc
lock
mov
mov
aam
mov
imul
pusha
popf
adc
push
cmp
fwait
leave
filds
jb
int3
call
sbb
pop
jl
cmp
insb
cmp
jae
js
insl
lret
push
leave
jno
hlt
push
lea
jmp
jmp
pusha
lea
call
call
and
push
nop
mov
mov
pop
leave
sti
xor
cld
repz
jp
cltd
faddl
imul
mov
rcr
adc
fadds
mov
xchg
mov
filds
adc
int3
scas
dec
aas
inc
cmc
cmc
inc
mov
and
int
movsl
out
lock
sbb
ret
stc
mov
pop
movsb
pop
inc
imul
pop
or
add
stc
dec
negl
mov
xchg
out
inc
adc
je
jmp
das
xchg
xchg
mov
out
pop
jae
addr16
aam
jmp
xchg
loop
nop
jno
imul
sbb
adc
lock
or
gs
dec
nop
push
pop
imulb
sub
orb
pop
jmp
mov
push
ret
arpl
mov
je
lahf
or
stos
xor
test
fwait
mov
and
sub
fidivs
push
cmc
mov
lahf
or
inc
ljmp
test
inc
jno
fimuls
xchg
xchg
or
pusha
dec
in
int3
aaa
popa
lret
xor
fstpl
or
jbe
xor
mov
xchg
notl
push
or
cmpb
lock
and
xchg
enter
notl
push
pop
or
int3
fsubs
mov
popa
and
mov
mov
es
dec
mov
sub
popa
bound
jne
aad
adc
add
fsubp
sbbl
nop
ret
pop
in
xor
dec
dec
mov
inc
int
xchg
scas
fdivs
outsl
mov
lods
or
cli
lods
out
insb
adc
push
mov
xor
outsb
sub
sti
movsb
mov
add
fwait
mov
cwtl
pop
jns
popa
xor
xor
mov
jns
cmp
sbb
xchg
cmp
pushf
jmp
fists
das
imul
lret
pop
loopne
fdivrs
mov
sub
add
inc
mov
pop
jp
loop
je
sbb
aaa
shl
xchg
add
popa
push
jno
push
sahf
adc
cwtl
mov
push
jle
popa
mov
mov
insl
loopne
sub
mov
pop
inc
mov
or
adc
or
lret
out
daa
xor
adc
inc
nop
mov
sarb
adc
pop
mov
roll
cld
dec
jp
or
out
xchg
sub
fmulp
sbb
mov
jo
jp
cwtl
mov
in
add
popw
test
ret
sbb
push
push
cld
inc
mov
jle
add
adcl
jp
push
test
jg
mov
xchg
fisttps
push
pushf
lret
add
or
iret
fisttps
mov
or
inc
test
xor
push
jmp
inc
stos
pop
cmp
inc
xchg
rcll
cwtl
mov
jns
add
sti
pop
popa
or
test
rcl
cmpsl
and
orb
sbb
jae
adc
and
cmp
js
jns
push
sbb
lock
lahf
imul
imul
cld
in
aam
outsb
test
fwait
mov
jle
xchg
or
xorl
arpl
mov
xchg
or
sub
lods
inc
and
lret
sbbl
xor
mov
mov
call
lods
jmp
mov
sub
jle
adc
lea
stc
shll
orb
aas
popl
jl
add
dec
cmpsb
shr
jne
xor
repnz
xchg
cmp
jo
sub
adc
test
mov
mov
dec
repz
push
pop
icebp
je
ret
enter
push
xlat
fmuls
cld
in
lret
out
sub
and
popf
xor
mov
lea
pop
pop
add
pushf
fimuls
push
ret
sbb
sub
xchg
push
fadd
xchg
mov
sub
cmpb
jne
lcall
fwait
loop
push
in
sbb
mov
data16
xor
sbb
mov
in
dec
inc
roll
ret
and
sub
shl
insl
adc
sbb
jnp
jp
xlat
and
sbb
push
cmp
xchg
pop
repnz
inc
ret
out
in
insl
aaa
xchg
mov
std
jecxz
out
sbb
out
pop
aad
xchg
cltd
test
or
and
int
sub
fdivr
mov
rcr
or
jnp
mov
pop
xlat
cs
out
dec
mov
pop
jbe
fwait
in
mov
sub
sub
aad
push
in
fwait
push
outsb
lahf
push
shlb
ss
leave
jg
cmp
out
jmp
add
mov
mov
data16
jle
lahf
sti
dec
imul
rcl
ret
jno
mov
movsl
gs
or
mov
mov
in
pop
lahf
xchg
xchg
jg
push
in
dec
adc
lret
xor
lret
in
inc
dec
jmp
dec
pushl
movsb
leave
sahf
pushl
js
notl
dec
aaa
data16
inc
push
adc
aas
iret
lods
imul
rcrl
outsb
jno
mov
iret
mov
cmp
xor
add
mov
cltd
test
mov
fwait
mov
sahf
xchg
pop
nop
sbb
shl
adc
psllq
mov
flds
add
add
ret
aaa
jns
cmp
call
outsl
and
pushf
outsl
test
lret
sub
fbstp
jl
mov
iret
inc
lods
mov
insb
hlt
addr16
xchg
hlt
push
pop
cmp
sub
ljmp
pop
shll
dec
sub
or
inc
add
loopne
in
dec
jne
mov
jns
sub
or
ror
push
fmuls
outsb
insl
lock
jl
jg
xchg
push
pop
mov
xchg
and
cmp
es
hlt
sbb
lahf
or
int
in
scas
jmp
mov
in
mov
enter
pushf
stc
mov
xor
js
lret
ja
inc
add
inc
pop
xor
lods
push
jp
mov
in
and
and
cmc
insb
shll
inc
push
mov
je
cmp
sub
xor
insb
rorb
loopne
cmpsb
loop
jecxz
and
movsl
outsb
packssdw
lret
xchg
pop
sbb
pop
mov
rolb
mov
fs
push
lods
jns
lea
inc
pop
nop
cmp
fisttps
jo
orl
lock
mov
xchg
jae
xchg
jg,pt
xor
cld
sbb
sub
inc
shrb
jbe
mov
or
in
out
nop
call
dec
popf
and
and
sub
add
div
sub
gs
adc
xor
or
jge
mov
popa
xchg
mov
stos
fisttpl
sbb
roll
pop
push
push
push
lahf
xor
ds
add
xchg
sub
push
inc
andb
mov
inc
dec
es
icebp
xor
sub
arpl
lret
data16
sub
push
sarb
in
movl
push
mov
mov
pusha
pusha
movb
pushl
ret
mov
jmp
pop
jb
and
lock
sub
pop
xchg
jae
cmc
inc
ficomps
je
pusha
rorl
and
xchg
out
xchg
mov
inc
cli
jl
add
lcall
leave
aas
dec
sub
push
ret
mov
push
in
pop
sahf
pop
xchg
fcmovb
mov
and
sbb
mov
dec
hlt
jae
mov
and
leave
cwtl
fcoml
adc
xchg
jnp
shld
dec
sub
lret
sbbl
imul
add
adc
mov
pop
dec
mov
and
fwait
pop
sub
mov
add
shll
mov
js
sub
jnp
inc
inc
scas
inc
sti
das
cmp
push
or
mov
and
loope
push
adc
lock
xchg
xchg
stos
sub
mov
add
adc
add
cmc
jns
xchg
add
pop
xlat
lret
cmp
out
in
xchg
nop
testl
dec
std
insb
pop
mov
test
add
xlat
lahf
push
notb
dec
fldt
push
mov
dec
test
sbb
sbb
aaa
dec
inc
xchg
addr16
and
lahf
aad
adc
cmp
dec
mov
push
mov
je
pop
in
pop
ds
jno
dec
insl
inc
jg
mov
mov
mov
jg
popf
mov
test
or
call
scas
aam
lock
cli
pop
pop
adc
push
shlb
lea
setbe
mov
pop
lea
movsbw
setge
pop
movsbw
pop
push
call
movl
jmp
add
movsb
in
sub
add
add
pop
add
add
add
add
subl
add
add
add
in
daa
add
add
add
add
aaa
aas
sub
add
add
add
sbb
add
add
ja
daa
add
in
add
out
add
sbb
addb
add
call
dec
rol
mov
imul
lds
lcall
and
cmp
paddb
clc
mov
and
mov
mov
ljmp
mov
sub
jg
ja
cs
js
dec
sbb
mov
push
pop
mov
mov
dec
ss
sbb
scas
push
mov
les
pop
shr
push
lea
pusha
outsl
mov
adc
sbb
mov
lea
adc
aas
ret
or
dec
je
aam
popl
mov
mov
es
sub
xchg
pusha
rclb
jae
and
and
sub
push
rorl
test
loope
addb
mov
adc
or
mov
in
add
aas
or
test
mov
add
add
int3
arpl
or
in
adc
mov
mov
cmpsb
dec
and
ss
push
sbbb
sub
lock
push
std
mov
out
xchg
int3
daa
push
pop
xchg
stos
dec
mov
jmp
popa
inc
iret
fisttpl
sub
mov
loope
mov
mov
inc
add
xor
sbb
add
mov
sub
sub
jno
mov
cmp
pop
jae
lahf
fisubl
jnp
mov
push
adc
ljmp
add
jecxz
cltd
aam
push
je
cld
inc
adc
in
mov
dec
in
andl
push
mov
dec
xchg
jg
out
push
dec
sbb
or
sub
jmp
push
leave
dec
mov
lock
les
addl
mov
dec
jg
mov
sub
xchg
pop
in
push
mov
pop
addb
sub
iret
mov
inc
or
imul
dec
rolb
bound
ret
mov
hlt
jg
inc
lret
stos
test
ret
xor
xchg
mov
ljmp
stos
jbe
mov
pop
sbb
or
cmc
leave
imull
add
xchg
inc
push
mov
hlt
inc
sub
adc
pop
mov
bound
jbe
ljmp
fs
or
mov
jne
sub
testb
stos
std
adc
jo
ret
push
rcrb
lods
icebp
or
cli
lahf
rcrl
fsub
mov
push
xlat
fstl
jb
fs
jne
bsr
shrd
not
mov
cmp
add
jmp
test
mov
pop
lock
lods
movsl
shl
mov
fimuls
sbb
aam
out
jl
jmp
sub
adc
pop
ljmp
sub
inc
scas
fadds
pop
pop
movsb
jp
out
fisttps
xchg
repz
jp
xor
cmpsb
mov
pop
push
addr16
roll
xor
and
push
adc
fs
lock
add
scas
fisttpl
jp
pop
test
jb
shlb
hlt
fdivs
das
pop
mov
je
outsb
into
push
jb
jp
xor
push
mov
dec
cmp
push
fstps
mov
ljmp
push
ljmp
dec
aas
shrd
test
ret
fucomp
cld
imul
inc
xor
xor
test
xor
repz
cltd
in
ljmp
ja
inc
dec
test
xor
fsubl
imul
and
ret
cld
lock
cmpsb
cmpl
xor
mov
xlat
mov
stc
or
ss
jecxz
push
lret
mov
into
insl
cmp
adc
cmp
loop
test
xor
xor
xor
pop
ja
xchg
cmp
je
and
push
jno
test
rep
cltd
loop
mov
aad
lret
xor
sub
hlt
pop
roll
jmp
xor
in
jecxz
xchg
test
jnp
out
outsl
or
mov
fisubrs
nop
mov
jecxz
lea
sub
and
hlt
cmc
idivl
ret
xor
popf
std
inc
jl
lods
mov
xor
jno
adc
bound
popf
divb
cmpl
pop
mov
or
push
cli
imul
inc
scas
fbld
dec
cltd
cmp
sub
push
lods
mov
fidivl
and
sbbl
sbb
stos
adc
push
pop
pop
sbb
mov
sub
cmc
loope
sub
mov
mov
add
xor
jmp
cli
sub
and
push
push
and
or
subl
mov
cli
add
hlt
mov
mov
cmp
pop
pop
rcl
mov
loop
repz
fnstcw
add
inc
lret
pop
shlb
aam
mov
mov
add
icebp
arpl
dec
int
aas
dec
push
lcall
daa
inc
insl
mov
sub
vminps
push
and
xchg
add
mov
pop
test
push
cmp
rol
fstps
lods
ja
add
jp
andb
clc
call
mov
bound
stos
dec
and
popf
out
mov
and
jo
hlt
ret
sub
mov
push
mov
cmpsb
icebp
out
imul
lea
in
mov
out
jg
and
jp
je
or
roll
mov
es
in
pop
sbb
movsl
fcompl
in
mov
push
repz
mov
fs
xchg
inc
popa
scas
stos
jge
xchg
mov
aad
lahf
sbb
dec
mov
xchg
mov
dec
sarl
testb
mov
and
xchg
and
stos
in
add
pop
pop
xor
xchg
sbb
pop
aaa
insb
iret
push
ds
jne
fsubs
scas
sbb
push
leave
lds
xchg
dec
inc
dec
repnz
push
pop
adc
notl
iret
jle
mov
mov
cmp
add
sarl
cmpsb
add
adc
jecxz
mov
ret
push
jge
std
push
xchg
lret
push
push
int3
or
test
aam
or
cld
mov
jnp
lret
out
fistl
jle
outsl
jge
and
and
dec
lret
lods
mov
ss
ja
int3
mov
xchg
jne
jecxz
mov
lahf
popa
and
lods
cmp
rorb
sbb
lahf
lea
or
and
pop
pop
dec
sbb
out
mov
xchg
xchg
pop
and
dec
jns
std
jnp
fucom
push
lret
into
in
xchg
test
xchg
add
sub
cmp
sub
repz
into
pop
jle
lret
js
das
testb
pop
leave
add
or
or
push
cmp
dec
fs
dec
push
inc
jb
into
mov
mov
mov
or
fnsave
rcll
test
aad
rorb
addr16
adc
push
mov
pushf
mov
pushf
pusha
pushl
pushl
test
lea
ja
je
cmc
add
test
call
movb
pusha
pushf
lea
jne
jmp
or
mov
popa
or
xchg
loope
les
cmc
xor
in
das
inc
push
sub
jmp
out
arpl
sbb
and
scas
ja
dec
out
mov
loope
cmp
jecxz
push
flds
push
adc
pushf
pushl
ret
call
pushf
mov
movw
call
inc
sbb
mov
or
add
sbb
cmpsb
inc
outsl
mov
out
mov
sub
sbb
jg
loopne
jecxz
test
xchg
mov
out
jl
lock
mov
lret
pop
pop
jmp
mov
cmc
mov
fwait
mov
sub
gs
mov
adc
xor
ficoms
xchg
jge
bound
push
xor
fdivrs
lret
fdivrl
pop
dec
incb
outsb
add
test
mov
mov
scas
stc
or
int3
xor
cmp
push
cs
imul
mov
lods
dec
cmp
xchg
and
cli
fistpl
cmp
in
fs
pusha
inc
xchg
into
repnz
dec
loopne
out
jnp
xlat
jle
push
push
pusha
ret
push
fisubs
fcmovb
sbb
fisttpll
xchg
mov
jmp
stos
push
in
mov
cmp
inc
mov
imul
int
test
and
scas
push
sub
aaa
jns
pop
sub
cwtl
jbe
mov
cmovg
adc
lcall
ss
not
xchg
and
mov
add
nop
lahf
sbb
mov
cmp
test
push
out
jge
push
push
and
jp
pop
add
movb
xlat
lods
xchg
cmp
xchg
mov
ret
aas
cmpsl
adc
out
sub
jbe
inc
pop
insl
cmp
leave
sub
mov
jb
scas
mov
jno
leave
pop
fildll
and
push
push
push
jno
aad
daa
mov
mov
in
inc
lahf
lret
jae
rolb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
mov
pop
or
cmp
ror
scas
rcr
sub
scas
jmp
push
data16
adc
sbb
in
push
outsb
mov
lahf
push
pop
lahf
lcall
gs
je
out
mov
mov
rclb
lods
xor
popf
mov
ljmp
adc
adc
xchg
ljmp
inc
xchg
pushf
cld
outsb
ret
sbb
cld
sbb
lret
mov
or
mov
pop
aam
xor
sbb
adc
test
in
jne
test
fimull
rolb
xchg
add
pop
and
fisubs
fldl
das
clc
test
xor
xor
mov
cmp
pop
dec
push
sub
adc
or
cmp
out
lahf
je
xor
test
call
push
or
scas
dec
rorl
jne
nop
fnsave
adc
pushf
push
ret
les
dec
pop
mov
mov
and
add
popa
cmp
jge
shll
popa
add
push
add
jno
fxch
insl
adcb
ficompl
inc
stos
filds
cmp
outsl
jge
out
push
and
pushl
lea
ja
setnp
ror
sub
adc
bsf
call
arpl
icebp
jae
inc
stos
cs
hlt
and
into
sbb
push
nop
fistl
loop
mov
in
lret
inc
cmp
addl
imul
aad
add
sbb
mov
push
mov
idivb
sub
sub
and
outsl
rcr
test
test
or
cli
cmp
cmpb
lret
aas
aaa
cmovge
lods
fisubrs
in
aas
es
jp
and
sub
aam
iret
push
mov
int
in
lcall
mov
lds
dec
xor
sbb
pop
mov
jge
mov
adcb
fistl
xchg
and
lds
movl
cmp
test
cmp
xor
loope
vorps
xchg
lea
insl
mov
mov
mov
push
cmp
pop
dec
and
dec
scas
sub
hlt
leave
sahf
sub
pop
push
sbb
clc
jbe
lds
adc
add
incl
out
addl
jns
aas
push
gs
aaa
stc
push
inc
stos
xchg
adc
jle
popf
mov
inc
add
sbb
pusha
push
xchg
dec
lret
sbb
mull
mov
sub
test
xor
test
clc
repnz
jmp
jno
adc
mov
jp
adc
or
sbb
pop
lcall
inc
inc
jmp
pop
xor
andl
js
jne
jb
ja
movsl
pop
mov
adc
outsl
cmp
fsubrs
pop
xchg
xchg
mov
and
in
cmp
mov
mov
or
in
fildl
cwtl
mov
pop
iret
test
pop
cmp
mov
clc
push
movsb
push
xor
lret
mov
mov
mov
movb
movb
lea
call
pushf
pushf
call
cltd
pop
gs
xor
adc
mov
lahf
mov
xchg
in
sub
dec
addr16
or
mov
je
jl
xchg
xor
aad
mov
pop
adc
dec
push
push
aaa
test
jno,pt
adc
popf
sbb
mov
push
mov
bound
pushl
les
xor
jb
mov
lret
inc
je
lock
push
ret
call
lea
je
call
lea
jae
push
push
lea
jmp
jo
clc
push
inc
cwtl
std
es
scas
xchg
sti
pop
scas
sbb
cmp
push
xor
mov
daa
xchg
adc
ss
mov
jns
cmp
shrb
pop
xchg
add
mov
aaa
test
and
mov
push
movsl
gs
jp
faddl
cwtl
out
xchg
add
pop
dec
dec
push
xor
xor
cmp
aam
inc
dec
or
fldenv
and
and
push
rcrb
fcoml
pop
loop
in
repnz
sarb
inc
sub
adc
inc
sbbb
fisubrl
mov
sbb
sub
mov
std
std
hlt
cmp
imul
and
jmp
pushf
pop
mov
add
out
into
nop
inc
jmp
and
adc
inc
repz
add
imul
xchg
sbb
rorb
xor
lock
call
sbb
jbe
inc
mov
cmp
addl
push
dec
test
push
shr
clc
fwait
cld
push
xor
add
div
decl
je
cmpl
into
dec
or
hlt
jb
xchg
iret
inc
inc
or
mov
por
pop
cmp
stos
insb
in
out
mov
cmp
into
mov
lds
in
push
rorb
jnp
mov
lds
mov
xchg
stos
pop
push
popf
mov
dec
push
aaa
push
sahf
loope
mov
push
push
xlat
cmp
dec
in
push
shll
or
and
add
loop
jmp
movl
pusha
pushf
movl
pusha
movb
lea
jmp
clc
bt
pusha
add
movw
pushl
pusha
lea
jne
ja
push
pushfw
popw
movb
mov
bt
mov
mov
push
clc
cmc
not
call
mov
cs
xchg
shlb
jns
xor
js
xchg
or
pop
jnp
js
push
jl
add
testb
or
mov
pop
pop
and
stos
fildl
lds
loope
lahf
inc
cmp
jmp
mov
cltd
icebp
das
jne
dec
or
sub
sar
ljmp
lret
jecxz
or
fstpl
xchg
push
fildl
mov
xlat
dec
pop
and
fnsave
adc
push
aaa
das
lret
push
lea
bound
jne
mov
mov
xor
xchg
into
dec
ss
push
lret
fwait
int3
hlt
lcall
xchg
pushf
dec
dec
pop
pushf
sub
repz
pop
test
dec
pop
and
or
and
or
in
mov
test
js
test
fs
adc
push
mov
cmp
out
out
pop
add
mov
fsub
mov
xchg
cmc
ret
xchg
es
test
and
push
or
clc
leave
fs
lret
push
nop
movsb
jmp
xchg
aad
rorb
cmp
leave
inc
sbb
clc
scas
mov
sbb
subl
mov
mov
int3
out
test
daa
sbbl
fstpl
popa
aas
push
aad
aas
mov
pop
lea
jmp
adc
xor
jae
cmp
test
cli
inc
mov
into
lret
mov
popa
aas
fld
mov
cltd
push
dec
mov
mov
mov
lret
into
push
sbb
outsb
mov
fsubs
cmc
add
lea
sarl
dec
aam
and
sub
jbe
add
movsb
jle
lock
pop
lret
and
jae
mov
fcmovu
xchg
test
es
xchg
cli
jmp
sub
in
xchg
stos
and
push
add
outsb
add
push
in
icebp
pop
or
mov
ljmp
push
ret
dec
inc
sbb
jge
jb
adc
mov
ret
cmp
cmpl
testb
adc
and
dec
push
inc
xchg
inc
jbe
and
add
adcb
cmp
add
outsl
mov
add
inc
daa
inc
cmpsb
pop
cld
adc
jno
pop
lahf
aad
jbe
push
pop
ss
clc
mov
lret
ret
xchg
les
jl
je
test
cli
insl
and
jno
pop
repz
adc
xor
call
roll
jg
mov
or
aaa
or
pop
out
test
cmp
jbe
jle,pt
xor
pop
jmp
mov
xchg
xchg
jp
xor
out
mov
fisubrl
cld
dec
mov
stos
mov
cmp
pop
sbb
scas
call
fmul
push
lds
movsb
jmp
iret
js,pt
lcall
mov
mov
aaa
sahf
movsb
addl
pop
int
lcall
jg
fiaddl
sub
lea
sub
inc
mov
inc
data16
cmc
repnz
xchg
and
jb
pusha
jbe
repz
mov
repz
aad
xchg
enter
push
add
sbb
push
jg
xor
aaa
lods
or
dec
adc
mov
shll
cli
xchg
mov
lret
sbbb
xchg
mov
xchg
sbb
inc
leave
pop
jg
dec
test
jb
sbb
leave
xlat
addr16
lods
adc
scas
fisttpl
sbb
repz
ret
lret
cmc
mov
jns
add
sbb
addr16
loopne
gs
data16
lret
push
mov
sub
push
mov
sbb
daa
cmp
clc
pushf
push
lret
jecxz
dec
pushf
fisubs
sbb
cmpsb
ret
adc
lahf
fiadds
aam
push
adc
ds
sbb
lret
sbb
xchg
dec
btr
mov
test
stc
push
jmp
ret
andl
ret
mov
push
sbb
aam
xor
push
lds
loope
push
ror
add
das
in
lahf
sbbl
jp
lahf
icebp
js
add
movsb
or
push
int
cmp
or
xchg
fmul
adcb
jmp
enter
dec
cli
push
call
add
int
rcll
stc
xor
ficompl
out
add
mov
leave
and
addb
fwait
cmpsl
lcall
fistpl
pop
mov
xchg
lock
push
iret
inc
mov
push
ljmp
insl
aad
ljmp
add
filds
fiadds
das
mov
sbb
popa
adc
stc
sbb
pop
jg
sub
loope
test
push
sahf
pusha
sub
in
or
xor
xchg
jg
sahf
and
mov
out
decb
push
and
stos
mov
push
pusha
pop
add
mov
jecxz
sub
cmp
add
xchg
stc
dec
lea
lret
fistl
jno
push
outsl
add
add
push
mov
ret
pop
stc
leave
fwait
jmp
jmp
jno
aad
or
lret
lods
lret
in
cld
fidivl
sub
mov
mov
xchg
pop
movhps
add
and
cmpsb
jp
vpmacssdqh
push
ds
sub
es
sbb
mov
push
enter
sub
clc
cmp
pushl
movb
jmp
lods
dec
popa
mov
sbb
mov
and
and
rcrl
hlt
call
adc
data16
sbb
sbb
and
xor
sub
adc
scas
jae
add
sbb
imul
adcl
adc
or
xor
xchg
shll
std
push
or
sub
pop
jns
aad
je
and
in
xorb
fcomps
mov
shrl
jb
jno
ss
aam
lret
xchg
inc
jb
xchg
mov
jg
jno
pop
mov
addr16
imul
in
in
insb
push
pop
call
sahf
stc
add
jmp
mov
into
jle
mov
push
cmpsb
sahf
popa
lock
mov
sub
xor
in
repnz
cmp
movsl
jae
pushf
dec
pop
cmc
xchg
push
cmpsl
lods
and
mov
xchg
stos
inc
pop
je
js
jb
or
iret
jge
sub
stc
and
jg
dec
icebp
gs
test
xchg
push
mov
xchg
int3
ret
or
mov
sub
lret
sbb
imul
nop
into
add
imul
movq
add
dec
test
jo
jns
mov
push
push
ficomps
shlb
cld
loope
ret
stc
test
sub
cwtl
mov
pop
pushf
notl
pop
aas
scas
icebp
into
lea
jae
adc
out
pop
sub
inc
or
push
out
xor
jp
push
and
push
hlt
add
loopne
jp
push
cmp
mov
cmp
sti
mov
xchg
pusha
lret
inc
loopne
call
push
lea
jae
cmp
stc
clc
add
call
jnp
sahf
popa
pop
xlat
nop
mov
gs
jnp
mov
fwait
pop
lods
insl
lods
roll
dec
jp
popf
lret
mov
jl
and
push
loopne
cmpsl
and
mov
mov
sbb
ror
and
pop
and
xchg
fldl
lods
sub
sbb
call
pop
pop
cvtps2pd
xchg
pop
sbb
pop
push
jo
push
pop
inc
andl
mov
test
xchg
test
xchg
test
fwait
or
cmp
lock
rorl
mov
jg
imul
icebp
pop
iret
mov
lods
xor
gs
sti
cmp
mov
mov
add
gs
popf
rolb
sbb
xchg
and
ret
fnstenv
fnstsw
and
or
stos
shr
pop
or
cmp
in
int
push
mov
arpl
push
insb
lds
clc
xchg
pop
divl
mov
lahf
pop
das
imul
ds
push
iret
dec
cmpsl
mov
flds
xadd
mov
pushf
rcl
jmp
add
xor
add
fcomps
clc
push
out
add
and
fadds
xchg
inc
and
xor
imul
push
jno
pop
add
add
iret
jge
cmp
pushf
inc
dec
ror
int
int
pop
fdivrs
enter
jns
and
hlt
jo
jnp
repz
dec
dec
jbe
adcl
test
mov
xor
data16
jmp
outsb
pop
inc
fisttpl
icebp
pop
mull
clc
mov
xor
xchg
andl
xor
lcall
subl
stos
test
cmp
dec
pop
outsb
daa
cmpsl
add
out
loop
aam
pop
sub
fcomps
xor
and
xchg
pop
lahf
leave
cmpsl
xchg
aas
repnz
stos
imul
hlt
jmp
mul
rol
ss
dec
cmpsl
cwtl
adc
jg
inc
mov
jl
jecxz
pushl
or
mov
ret
ds
cli
xor
sub
bound
jmp
call
and
test
bound
lods
and
xor
cwtl
sub
or
les
jle
pop
and
shl
add
mov
pop
mov
or
inc
lcall
das
inc
cmc
add
jecxz
shl
inc
push
aam
mov
shrl
fs
enter
or
pop
loope
loopne
or
jecxz
pop
inc
push
int
popf
in
popa
or
pop
ja
mov
aad
adc
loope
fcoml
and
mov
shlb
hlt
sarl
sbb
add
jno
out
and
mov
loop
popa
cs
jp
cmpsl
mov
jns
es
lds
aaa
dec
std
mov
fisttpl
xchg
test
ss
aam
cltd
out
xchg
dec
push
jg
outsb
xorb
and
xchg
push
je
nop
sbb
sub
movsl
cmpsl
add
ss
mov
aam
mov
jo
mov
adc
popa
inc
and
mov
pop
test
clc
pop
mov
push
int
js
test
aaa
loopne
push
in
les
ficompl
repz
mov
cmpsb
mov
adc
cmp
cltd
cltd
test
test
dec
push
jne
std
cmp
push
in
inc
into
mov
into
cwtl
lret
stos
dec
sub
adc
iret
sub
or
jmp
and
pop
gs
mov
mov
out
adc
testb
mov
pop
mov
adc
push
mov
lock
ljmp
mov
frstor
fld
stos
mov
push
push
les
fmull
cmp
out
push
inc
test
xor
pop
xchg
and
jmp
es
cltd
mov
xlat
xchg
or
lods
outsb
orl
lret
rorb
dec
lret
and
jge
lea
stos
outsl
and
xchg
popa
mov
mov
jae
sbb
pop
cli
in
ljmp
push
mov
push
xor
incl
pop
push
adc
jle
loopne
fildl
jo
add
sub
add
pop
cmp
and
pop
push
sbb
cld
loope
xor
or
in
mov
gs
test
js
or
pusha
jne
int
repz
fldl
mov
fs
mov
call
dec
jecxz
adc
mov
out
sarl
inc
cmpsl
jbe
pop
repnz
mov
insl
jle
outsl
bound
jne
or
pop
lahf
rclb
shll
insl
lods
adc
mov
loopne
ret
sub
cmp
pop
outsl
inc
rorb
dec
rolb
loop
fsubs
popa
xchg
xchg
cmp
xlat
ret
es
mov
xchg
push
iret
test
pop
pop
outsl
repz
inc
xchg
ret
or
stos
jp
mov
pop
inc
push
fs
fucom
rol
xchg
push
mov
xor
add
add
inc
gs
imul
js
inc
add
pop
pop
sub
sbb
gs
inc
xlat
xchg
aad
dec
rcll
sarl
xor
cmp
out
test
jbe
rorl
xor
int
je
mov
in
jns
out
daa
mov
lods
pop
push
xchg
xchg
addr16
std
arpl
in
mov
pop
test
loop
sahf
or
pop
jle
pop
adc
lahf
adc
pop
push
and
call
push
jg
call
outsb
sti
cmp
jp
lea
or
sub
pusha
pop
jo
cmpb
push
mov
fs
call
das
jbe
clc
test
in
popa
dec
mov
push
lret
daa
pop
push
jl
nop
test
adc
fiadds
jl
lods
imul
daa
mov
jmp
or
and
lret
xchg
sbb
mov
xchg
cmp
adc
inc
popf
out
cmp
out
mov
and
xchg
imul
or
mov
iret
pop
mov
adcb
cmp
dec
call
push
jo
jnp
lock
fadds
jbe
stos
mov
lret
pop
jno
adc
mov
or
xchg
sub
repz
int
pop
lret
push
ja
pop
adcl
pop
dec
xor
add
fnstcw
push
mov
popa
jo
push
mov
sbb
sbb
lcall
pushf
call
cli
cmp
lods
dec
sub
mov
fnstcw
xor
cmp
ja
push
lds
inc
test
roll
mov
mov
shr
sub
add
les
repnz
call
movl
pushf
push
push
pushl
popl
mov
pushf
pushf
movw
pushl
ret
cmp
adc
inc
add
jge
xchg
mov
lds
xchg
sbb
jmp
sub
ficoms
movsl
clc
fsubrs
jno
cmp
cmp
test
lods
push
fcomps
mov
cmp
mov
mov
mov
push
hlt
mov
xor
cmpsb
pop
aam
cmp
add
movsb
mov
push
movsb
mov
les
jne
or
lret
ret
and
xchg
repnz
jnp
xchg
mov
jbe
push
mov
push
inc
mov
pop
adc
add
loope
arpl
popf
in
ss
rorb
mov
mov
add
xor
test
out
out
sub
push
lahf
add
test
inc
lock
stos
sti
adc
leave
std
icebp
in
shll
xchg
ret
insb
add
jl
cmp
lret
or
es
dec
test
stos
or
je
mov
jp
xor
mov
mov
sti
daa
in
imul
cmp
repz
test
mov
xchg
sbb
movl
in
scas
jno
orl
call
cmpsl
es
add
adc
mov
dec
ds
in
stc
cmp
sbb
jo
sbb
mov
sbb
xchg
stc
inc
aas
inc
lahf
add
xchg
cmp
cwtl
mov
sbb
fistps
outsb
loop
enter
shr
inc
stos
movl
and
loopne
cmpsb
out
movsl
in
jne
in
lcall
lret
pop
test
add
or
inc
loope
mov
ss
xorb
test
xchg
call
mov
js
pop
test
or
je
pop
hlt
jg
add
tzmsk
fdivs
test
insl
int
outsb
js
jmp
dec
cmp
and
pop
and
out
mov
aam
sti
jbe
ficompl
xlat
sahf
das
aam
xchg
into
int
xor
lock
repz
jg
adc
in
in
mov
repz
sti
inc
sbb
in
pop
push
addr16
lock
loopne
fwait
loope
pop
ds
adc
mov
adc
mov
sub
xor
dec
jns
pop
adc
std
iret
mov
sbb
add
cmc
sbbl
push
lcall
pushf
stos
mov
outsb
test
xor
out
repz
adc
out
inc
add
fnstsw
test
jle
ficompl
push
sub
scas
mov
jge
add
outsl
dec
aam
xchg
clc
out
sbbb
pop
rorb
cs
pop
ljmp
in
cmpsb
mov
xchg
jmp
lea
inc
xor
adc
jmp
ret
sub
jo
push
mov
popf
stc
mov
pusha
lea
jne
or
adc
mov
sub
rol
pushf
bts
sub
inc
mov
lea
jmp
xchg
scas
push
mov
repz
dec
add
inc
dec
add
loope
cmpsl
dec
scas
push
pop
sbb
ret
inc
lcall
shll
push
ficomps
out
jmp
inc
push
cwtl
cld
stc
fcompl
cmpsl
add
stos
shr
push
aam
fimull
sbb
dec
insb
fadds
mov
fdivl
add
sub
mov
les
mov
mov
dec
lcall
in
out
rep
and
sub
or
jnp
push
stos
cmc
rorl
insb
jbe
add
sbb
push
mov
fwait
sub
leave
push
push
pop
arpl
lea
mov
push
js
imulb
hlt
js
je
cmpsb
dec
in
ljmp
fwait
jnp
xor
mov
or
push
lods
les
mov
cmc
shrd
cwtl
scas
push
and
mov
rolb
mov
xorl
lods
fildl
aas
gs
lret
lds
inc
xor
imul
mov
cmp
and
sub
sbb
mov
insb
lds
sahf
andb
rorb
in
pushf
xor
or
mov
flds
popa
filds
lds
push
lods
daa
fisttps
imul
lcall
iret
pop
add
mov
rorb
out
adc
push
out
or
dec
out
pop
mov
repz
mov
inc
push
mov
rol
push
add
sub
push
add
mov
popf
push
push
arpl
inc
hlt
inc
sub
mov
enter
movsl
mov
out
lods
cmc
out
daa
lea
mov
mov
ret
mov
mov
cld
seta
bswap
push
jmp
xlat
adc
leave
cmc
lahf
sub
xchg
or
lea
out
push
pop
pop
or
adcb
int
mov
or
sub
xor
jge
push
fiaddl
sub
sub
out
setg
arpl
je
sbb
ret
repnz
push
mov
mov
or
mov
sbb
inc
jp
xlat
pusha
loopne
sbb
push
repnz
xchg
and
adc
loop
lret
lcall
mov
and
jb
popf
out
mov
bound
je
pusha
push
lea
jmp
dec
into
xor
mov
pop
iret
das
into
stc
fwait
mov
bound
xlat
jmp
xor
pop
xchg
push
iret
fcompl
sti
cmpsl
jae
jle
xchg
cwtl
or
cmp
test
mov
cltd
push
sarb
pushf
movsb
rcr
outsb
repz
sbb
pushf
repz
loope
mov
push
loop
cli
mov
jbe
jo
pop
rclb
sbb
test
add
push
dec
mov
or
aad
out
ja
and
pop
mov
push
mov
movl
mov
cmc
pushl
push
call
sbb
inc
push
add
jl
outsb
fstpl
sub
sbb
rorb
push
or
push
mov
lahf
push
dec
xor
shll
mov
mov
imul
iret
sbb
cmp
adc
pop
pushf
inc
pop
jns
jnp
or
sub
stos
insl
adc
lock
repnz
cli
mov
sbb
cmpsb
repnz
sarl
mov
cmc
xchg
movsb
dec
mov
pushf
push
jb
ljmp
sti
aaa
add
sub
lods
repz
arpl
hlt
or
dec
cmpsb
xchg
sub
and
std
out
shll
ja
loope
mov
pop
pop
inc
xor
mov
lahf
in
mov
or
leave
sub
lods
or
dec
push
fldt
xor
dec
ret
sbb
xor
notl
nop
push
mov
xor
add
inc
pop
in
popa
inc
lea
push
mov
mov
fwait
lea
dec
adc
mov
shrb
outsl
inc
insb
pop
dec
jp
adc
and
pop
out
pop
loopne
sub
stc
in
and
into
loopne
jl
dec
mov
lret
mov
or
push
add
leave
jns
test
cmp
rcll
add
ja
shll
push
pop
enter
jle,pn
cmp
pop
jo
dec
cmp
or
xor
das
inc
jmp
out
sete
push
add
sbb
mov
push
mov
decl
jbe
jne
add
dec
cwtl
mov
cmp
cmpsb
sbbb
mov
cmp
ja
outsb
lods
push
mov
push
lea
nop
shrb
pop
inc
dec
xlat
mov
popa
xor
rolb
push
call
inc
pusha
adc
cmp
inc
push
sbb
stc
mov
fiaddl
pop
out
mov
add
pushf
mov
or
in
testb
lahf
das
movsl
enter
inc
bound
in
leave
jnp
inc
mov
arpl
fdivr
test
push
popa
cmp
cmpsl
les
mov
test
pop
adc
jl
cli
imul
in
or
inc
loop
add
pop
pop
lret
in
sahf
jmp
jmp
sub
fidivs
inc
inc
jg
test
shlb
repnz
popa
adc
lret
inc
and
xor
data16
pop
cld
pop
sub
fwait
add
mov
cwtl
jmp
pop
sbb
and
ljmp
dec
lcall
popa
mov
testb
insb
scas
jae
push
sahf
jecxz
mov
add
outsb
popa
xchg
cwtl
xor
aaa
jb
mov
push
std
test
jo
cli
sub
and
cmp
add
or
loop
out
clc
notl
hlt
cmp
lcall
lds
and
sub
sbb
arpl
addl
dec
adc
jg,pn
and
adc
sbb
faddl
fsubrl
out
sbb
push
enter
inc
into
lret
pushf
xchg
cmc
mov
add
jnp
push
fldcw
pop
adc
mov
aas
out
cmp
sbbb
aad
add
lock
inc
mov
ret
mov
aam
jecxz
cmc
shrd
bnd
xchg
sbb
dec
dec
push
pop
shll
dec
sub
add
js
dec
out
adc
testl
xlat
lret
dec
inc
push
cs
in
cmp
mov
cmpsl
cmp
sbb
dec
insb
mov
lock
sbb
jnp
test
cwtl
popa
fcompl
lret
fstl
jb
pushf
push
movw
mov
pusha
lea
jmp
fsubr
int3
or
push
xchg
clc
pop
dec
lahf
pop
in
je
pop
cltd
adc
ja
add
mov
fsts
dec
aam
rolb
push
add
cmpsl
sbb
adcl
dec
adc
fmulp
jae
stos
inc
out
daa
jmp
inc
das
movsl
xchg
pop
or
sub
inc
push
sub
rcrl
das
and
aam
xchg
push
les
add
lret
dec
mov
leave
push
sub
ljmp
aam
ds
test
icebp
jle
mov
jnp
xor
mov
test
mov
fcomps
push
testl
mov
nop
cli
ret
shrb
lods
mov
xor
and
lods
cltd
lret
test
xchg
cmp
sub
scas
lds
sub
movsb
icebp
fcomip
mov
jns
mov
or
loope
cmpsb
and
sub
jne
push
xchg
sub
lret
iret
addr16
repnz
hlt
ret
sbb
mov
cwtl
xlat
pop
daa
xor
push
pop
cmp
int
dec
mov
dec
lret
test
fwait
dec
and
aaa
dec
test
xchg
mov
inc
add
out
add
cmp
mov
leave
jl
and
in
adc
out
sub
jne
xor
stos
mov
push
and
imul
into
adc
inc
call
cmc
pop
sbb
negb
loop
scas
add
inc
in
push
mov
push
cmp
movl
pushf
pusha
lea
jae
rcr
mov
shl
not
shl
mov
rcl
mov
push
cmp
pushf
sub
cmc
cmc
cmp
repnz
call
in
inc
mov
mov
pusha
mov
popf
outsl
das
adc
pop
imul
push
inc
dec
cs
fbstp
ljmp
xchg
mov
push
mov
into
pop
cmc
in
lahf
out
add
iret
cmp
dec
pop
scas
pop
ss
dec
pop
ss
xor
data16
xchg
cmc
test
test
cmc
outsb
cmp
adc
jmp
daa
aam
add
out
push
adc
sbbl
inc
push
mov
pop
shlb
decb
stos
stos
out
mov
jnp
lods
jae
test
lret
insb
push
add
or
push
inc
inc
out
les
icebp
jecxz
mov
ss
stc
mov
add
ja
movsl
or
lods
jecxz
or
ljmp
ret
mov
fbld
jmp
fdivl
jno
fwait
pop
scas
mov
repnz
xor
enter
and
xchg
inc
adc
int3
add
xor
lret
sbb
mov
push
mov
ss
nop
je
ds
sub
add
jnp
adc
in
mov
imul
pop
push
lds
bound
xchg
and
sub
push
test
and
add
imul
adc
jb
push
mov
mov
mov
inc
les
xor
xor
jns
aas
pop
sub
fdiv
stc
xchg
xchg
pop
int
test
mov
push
mov
cmpsl
pop
mov
and
mov
ret
in
xchg
lret
fs
push
sub
push
inc
stos
xchg
xor
add
dec
inc
pop
data16
or
xchg
aaa
dec
mov
lret
popa
into
push
adc
xlat
jnp
rolb
mov
jl
or
adc
mov
jecxz
repnz
je
fcomps
aas
pushf
mov
test
push
mov
data16
cmp
xchg
push
adc
lds
and
fildl
cmc
mov
data16
movsb
add
add
rclb
jae
fcos
or
pop
ss
cmp
xor
adc
sub
pop
nop
sub
test
jcxz
push
mov
cmp
add
ja
mov
adc
ds
and
scas
call
pusha
inc
jp
jo
jmp
adc
pop
jp
or
inc
clc
aam
rclb
mov
icebp
movsb
and
fiaddl
sbb
fsts
mov
clc
lahf
sbb
lods
jecxz
fadds
mov
xchg
jl
insl
xlat
test
int3
addr16
lret
add
je
bswap
pushf
push
push
mov
bswap
not
mov
not
lea
jmp
in
mov
add
sub
add
fninit
addb
mov
dec
push
mov
fs
popf
notl
std
stc
dec
pusha
push
fstl
lret
adcb
leave
dec
xor
jo
fldt
inc
pop
push
xchg
sti
rcrl
test
iret
loop
lret
and
inc
push
std
ret
mov
inc
dec
sbb
and
pop
mov
jne
push
and
ficomps
into
test
push
push
pop
sub
cmp
and
test
addr16
outsb
cmp
push
push
icebp
or
lods
test
cmp
push
mov
call
push
mov
sub
bound
mov
jge
dec
xchg
or
pop
or
pop
shr
ds
cmc
enter
jb
adc
movsl
xchg
lea
sbb
pop
cmp
adc
add
scas
jo
sarb
stos
dec
insb
inc
fs
imul
mov
sahf
popf
in
ror
stos
lret
loop
mov
mov
mov
pop
js
inc
insb
xchg
mov
stos
clc
arpl
inc
cs
pop
addl
jns
ret
out
push
jno
pop
dec
cmp
popf
xchg
mov
dec
adc
incb
fwait
dec
lahf
adc
les
test
jp
inc
xchg
out
lcall
jg
push
cmp
jecxz
imul
jb
dec
insb
in
scas
in
in
inc
cli
gs
arpl
mov
xor
rep
movzbw
movsbw
mov
pushf
pusha
mov
lea
jmp
mov
or
ja
data16
xchg
mov
dec
repnz
jecxz
mov
divb
fidivs
lret
gs
mov
shlb
movb
adc
jp
dec
jge
push
mov
lahf
mov
adc
jl
flds
rcrl
cld
push
push
ret
pusha
call
shlb
mov
jno
cmpl
sbb
sub
xchg
sbb
xlat
inc
inc
inc
and
cmp
pusha
cmp
mov
jns
pop
mov
andl
dec
or
pop
pop
mov
fstpl
outsb
push
xor
add
fwait
arpl
pop
popa
scas
sub
aas
add
out
mov
test
int
xchg
cmpsl
push
arpl
adc
pop
repnz
jno
in
add
add
xlat
in
std
push
fbstp
or
jnp
lret
dec
jmp
frstor
int
mov
mov
cmp
stc
pop
jo
mov
xchg
repz
inc
push
repz
push
jle
fstpt
or
cltd
dec
push
cmc
adc
je
mov
adc
cld
lret
daa
cmp
jne
push
xchg
popf
fbld
clc
sbb
cmp
cmp
dec
jmp
outsb
imul
cld
aaa
daa
pop
sub
std
cmp
inc
push
ret
repz
pop
arpl
in
mov
push
ret
xor
mov
xchg
mov
bound
fisttps
out
add
lahf
sbb
lahf
and
aad
or
mov
ret
pop
xor
loop
dec
out
dec
flds
insl
xor
scas
loop
in
push
and
mov
xor
fisubrs
leave
data16
lahf
jl
xchg
lahf
jmp
out
mov
inc
mov
fiaddl
sbb
mov
clc
mov
push
mov
outsb
leave
jl
dec
mov
lret
fstps
pop
call
daa
leave
shll
inc
sub
and
ss
mov
jmp
and
jo
mov
or
add
aaa
inc
xchg
fsubrl
jge
fsub
mov
lods
mov
pushf
mov
cmp
divl
jmp
test
cltd
jecxz
jnp
xchg
clc
mov
push
stos
push
into
mov
stc
jo
testb
push
xchg
jbe
movsl
jbe
pop
lods
xchg
xorl
push
add
in
out
cs
testl
mov
outsl
pop
lcall
or
ljmp
in
sbb
outsl
cmp
sub
pop
xor
push
push
mov
stos
div
pop
cltd
jns
sahf
inc
mov
push
fwait
jmp
lret
sahf
push
xor
jbe
inc
inc
nop
int
sub
push
dec
xacquire
stc
lea
sub
loopne
jmp
lret
icebp
imul
lcall
movzbw
lea
call
iret
xor
je
push
nop
mov
fdivrs
ret
pop
push
dec
mov
aaa
out
mov
xor
push
out
sti
outsb
cmpsb
jg
sub
and
mov
bound
rcrb
push
bound
mov
pop
sbb
push
cmp
mov
stos
or
adc
adc
xor
sbb
rolb
jae
xchg
jno
sub
sbb
outsb
inc
nop
push
scas
and
decb
mov
arpl
adcl
xchg
or
enter
inc
mov
ret
in
cwtl
mov
mov
inc
lret
adc
popa
sbb
pop
fwait
movsb
mov
xchg
fsubr
popf
sub
sbbb
push
addl
xchg
add
call
sbb
shrb
dec
cmpsl
pop
dec
xor
mov
mov
sbb
pushf
arpl
cmpb
xchg
out
enter
cwtl
js
mov
xor
andl
test
ds
popf
cpuid
nop
pusha
jmp
sub
dec
jbe
mov
cmp
je
mov
push
cmp
inc
xor
in
mov
adc
adc
xchg
out
xchg
and
inc
out
dec
dec
repz
dec
pop
dec
adc
add
jno
dec
cwtl
rcl
add
pop
fsts
cmpsl
mov
cmp
push
mov
jae
scas
mov
sbb
repz
push
test
lahf
push
loopne
and
mov
lods
lcall
pop
xor
or
jo
xchg
jecxz
sub
insb
mov
jg
mov
pushf
dec
ja
cmc
icebp
fidivs
or
iret
fistl
mov
insb
sbbl
daa
and
lahf
inc
es
test
push
imul
enter
cmp
sbb
jne
adc
push
test
jp
adc
into
xor
xchg
jp
lcall
cmpl
mov
adc
lret
adc
inc
xor
cmc
sub
ret
pop
mov
ljmp
mov
xor
movsb
adc
int
mov
das
dec
mov
sti
dec
sub
repnz
sbb
add
or
xchg
or
in
jl
xor
mov
sbb
pop
jbe
setp
fdivr
pop
loop
out
shlb
adc
scas
mov
imul
pop
dec
jns
sti
ljmp
inc
fsubs
pop
lea
mov
out
inc
xor
int
add
xchg
pop
pop
sbb
push
push
sub
lahf
sbb
nop
out
cmovp
fildll
xchg
cmp
idiv
mov
lahf
lods
jp
jnp
inc
int
lock
lret
les
add
hlt
nop
xchg
or
rclb
xchg
and
cmp
jbe
out
mov
push
mov
xor
add
idiv
dec
jge
pop
pop
lcall
sbb
lahf
lock
jmp
jno
mov
pusha
mov
in
inc
dec
or
test
xchg
mov
stos
int
sbb
mov
or
mov
sbb
test
add
mov
ljmp
out
cmp
sub
xchg
dec
and
aas
push
adc
lret
add
sarb
out
lods
jne
xchg
inc
dec
ja
dec
xchg
mov
nop
add
mov
icebp
jae
fistl
xor
repz
xchg
cmp
les
add
ds
aam
or
call
sbb
fsts
insl
das
call
mov
lret
jbe
int
mov
add
test
clc
xlat
mov
adc
lret
cwtl
push
jae
mov
movl
jmp
push
jmp
mov
push
mov
mov
adcb
jo
sar
and
into
sbb
dec
sbb
and
mov
pop
inc
cmp
pusha
int
jge
push
jns
push
mov
mov
in
loop
and
adc
lods
add
jg
adc
outsl
scas
fists
mov
mov
pusha
mov
and
roll
imul
push
push
outsb
dec
add
adc
pushf
and
out
push
pop
aam
iret
mov
push
scas
repz
fcmovnu
daa
cmp
cmpsb
jns
add
add
adc
xor
pop
imul
push
ret
mov
out
pop
mov
mov
lds
pop
mov
cmovnp
mov
adc
fisubl
mov
mov
movsb
mov
inc
inc
leave
fistps
pushf
add
adcl
fcmovu
dec
mov
and
mov
loopne
and
cmpsb
mov
push
movsb
out
idivb
mov
cmp
in
or
adcl
jno
lret
inc
fsubrl
bnd
mov
push
pushl
es
sub
cmp
xor
mov
lds
pushf
pop
mov
and
dec
clc
sbb
popf
orl
mov
clc
fldenv
imul
pop
or
dec
pop
mov
add
mov
dec
idiv
fsts
mov
loop
jns
lods
push
cmp
mov
jmp
mov
jnp
outsl
cmp
jg
dec
pop
stos
icebp
xor
sub
pop
in
out
outsl
mov
push
lods
in
xchg
jmp
sets
pusha
not
not
pushfw
popw
stc
cmc
setae
mov
pushf
not
pushf
clc
jmp
call
movl
mov
movb
call
jnp
aaa
and
sub
dec
pushf
sarl
push
add
addb
movsb
push
sub
and
xlat
repz
pop
dec
dec
movsb
ficoml
andb
mov
adc
rcll
es
or
fwait
pop
mov
ret
push
in
add
mov
in
mov
std
fmul
jnp
cmpsb
sub
xor
pop
lret
or
push
aad
in
push
pop
fsubrs
sahf
aaa
inc
sbb
mov
test
jbe
xchg
mov
inc
cs
and
sarb
xlat
jecxz
and
lds
and
and
jle
mov
imul
xor
jbe
cmp
ret
sub
cli
adc
pop
pop
shrb
call
imull
xor
rorb
test
push
xchg
sbbl
out
mov
add
inc
int
dec
outsb
test
jnp
enter
sti
pop
fcomps
jge
mov
sub
daa
jb
dec
adc
xchg
fidivrl
cli
test
dec
in
and
xor
jns
sahf
sti
mov
sub
xor
mov
add
sub
in
inc
test
dec
dec
pushf
inc
dec
fs
adc
loop
rcr
bound
loopne
sub
jbe
inc
xchg
cld
mov
loopne
out
pop
cld
ljmp
cmpb
sbb
nop
call
mov
mov
xor
rcll
push
xor
lods
xchg
or
dec
jae
addr16
lods
popf
pop
or
adc
or
jl
sub
add
in
shll
adc
inc
mov
and
pop
mov
add
pop
rorb
push
mov
xchg
mov
or
popa
jg,pn
xor
outsl
add
or
and
inc
mov
jecxz
adc
push
xchg
jbe
addr16
sbb
dec
mov
imul
cld
in
ljmp
add
mov
addr16
dec
push
and
cmpsb
mov
ret
adc
and
in
ret
int3
xchg
call
xchg
ljmp
lea
and
popa
mov
das
sub
out
push
stc
dec
sbbb
adc
cmpsl
xlat
xchg
insl
dec
scas
fcomps
fsubrs
mov
add
shr
mov
inc
outsl
sbb
lds
xchg
mov
xor
bound
nop
mov
cmp
lret
xchg
in
call
addr16
ljmp
mov
out
fisubs
loop
fs
arpl
mov
push
in
jge
mov
pop
testb
test
push
adc
lret
jp
push
inc
sbb
insl
sub
jecxz
mov
push
xchg
stos
mov
ss
fcompl
and
mov
pushf
inc
fs
sti
cltd
and
or
test
js
arpl
sahf
mov
push
nop
outsb
leave
mov
or
test
hlt
nop
btr
xor
rcl
shrd
aam
mov
das
mov
rcr
sub
shld
bsr
shr
adc
btr
mov
pusha
mov
stc
or
push
lea
je
cmp
add
push
shld
sub
inc
sub
bts
shr
shl
xor
mov
mov
shl
add
bswap
add
add
xor
shl
mov
stc
clc
jmp
jno
xor
cs
loopne
lret
mov
push
mov
rcll
xchg
loop
xlat
adc
or
js
mov
loope
adc
or
pop
inc
push
lock
push
cli
aam
cld
outsb
cmp
jp
cmp
cmp
ds
leave
outsl
mov
mov
dec
movb
outsb
cmp
cmp
imul
sub
jge
mov
mov
sbb
iret
and
insl
lret
rorb
and
pop
and
call
lea
je
jp
push
pushf
xchg
lea
lea
call
bound
sahf
out
cmpsl
push
into
test
sti
lods
test
cmc
clc
pop
shrb
adc
out
aaa
nop
loope
repnz
inc
mov
inc
push
inc
aaa
mov
lret
push
push
push
sub
repz
pop
dec
btr
lods
les
lcall
aaa
inc
push
test
in
stos
xor
arpl
call
pop
test
lret
dec
loop
jge
fcoml
jno
xor
pop
cmc
jge
adc
push
mov
add
fldcw
hlt
and
jno
cmp
pop
xchg
sbb
sbb
jl
addr16
mov
sub
xor
lods
ss
jne
push
xor
ss
adc
cmpsl
mov
shll
xor
sub
mov
lock
xchg
je
push
lea
aas
mov
sti
cmp
ja
repz
sub
push
xchg
pushl
pop
cltd
dec
fisubl
in
push
add
movsb
xlat
push
mov
imul
into
scas
inc
mov
or
imul
jle
cmpsl
cwtl
sub
push
mov
push
stos
mov
icebp
inc
int
and
jg
xchg
in
inc
std
out
rcl
lahf
sbb
imul
cmp
das
jnp
or
mov
xor
sbb
fisubrl
xor
mov
push
aad
gs
sub
inc
ljmp
push
sahf
and
icebp
lret
cmp
and
je
cmp
test
jmp
lods
push
mov
xorl
shl
mov
lock
add
leave
cltd
mov
imulb
mov
jg
dec
shlb
testb
add
and
lea
inc
fidivs
and
leave
loop
hlt
sbbb
sub
pop
out
test
test
xchg
pop
xchg
loopne
lret
cld
mov
mov
mov
xchg
and
into
rcrb
xchg
lods
lret
xchg
dec
or
add
aaa
push
lea
jne
btc
neg
shr
mov
dec
pushf
cmc
lea
sub
cmp
clc
lea
pushf
pusha
sub
jmp
je
fbstp
insb
hlt
ss
sbb
and
push
fs
dec
fdivl
sub
pop
xchg
sub
adc
vpsubd
push
mov
stc
sahf
and
push
adcb
sub
stc
dec
cltd
cld
cmp
mov
push
call
sub
push
inc
jmp
adc
mov
adc
adc
push
lods
punpcklbw
in
jmp
push
aas
or
mov
cmp
pop
xor
cmpsb
mov
imul
sahf
or
fisubrs
in
sub
sub
pop
ret
aad
push
xchg
mov
std
sub
cld
mov
adc
fsubrl
or
jne
sub
in
mov
loop
adc
repz
lret
mov
and
jecxz
cmc
incl
add
popa
insb
inc
jb
add
and
cmp
pop
add
push
je
push
sbb
rclb
sbb
testl
jg
pop
xchg
jmp
sub
pop
pushf
pop
sbb
scas
pop
flds
imul
mov
mov
and
or
pop
push
in
xchg
or
insb
repnz
pop
or
push
insl
test
xlat
cmpsl
sub
dec
mov
les
xchg
push
xchg
xlat
adc
mov
jl
pop
andl
xchg
push
lret
sahf
jmp
adc
xor
xchg
mov
and
xorb
fdivs
ds
or
sbb
adc
adc
popf
adc
push
pop
push
and
out
loop
ja
sbb
out
xchg
inc
popa
das
leave
push
fiadds
cmp
or
push
sarl
mov
lret
jnp
loopne
xor
divb
push
cmpsl
push
mov
icebp
mov
inc
movsl
hlt
sbb
std
popa
pop
shl
aas
xchg
cmpsl
mov
pusha
push
lret
stc
cmpsb
fcomp
pop
outsb
pop
insl
js
push
sahf
push
adc
lock
add
dec
jnp
push
lcall
push
add
push
add
call
add
add
add
sbb
add
add
add
add
mov
jns
data16
add
mov
and
push
push
scas
inc
jmp
add
cmp
repz
rclb
bnd
sbbb
dec
inc
push
shr
sub
lea
xchg
and
mov
lahf
xchg
pop
sti
pop
fbstp
roll
and
pop
pop
std
push
sahf
mov
int3
add
rcl
or
jnp
add
pop
adc
and
adc
mov
call
sub
fcmovne
outsl
test
xor
or
lret
gs
std
jns
notb
and
dec
cmp
gs
xor
pushw
fwait
arpl
out
adc
dec
call
or
std
pop
cmpsl
jno
mov
fs
pop
jae
xchg
js
adc
cltd
outsb
and
fidivrs
dec
jp
inc
jmp
out
jmp
jecxz
inc
sbb
push
das
movsl
sti
add
push
jns
jg
das
push
mov
test
mov
and
cmp
and
dec
mov
mov
cwtl
out
jmp
stc
xor
cmp
cld
jmp
cli
lea
mov
and
out
divb
xor
pop
jle
je
jbe
dec
movsb
lock
in
push
dec
push
shl
repz
push
sub
cmc
lahf
mov
xorl
mov
adc
addl
jmp
mov
push
add
push
mov
into
jecxz
scas
jae
les
jbe
and
gs
mov
xchg
push
sub
repnz
ss
aaa
xchg
fisttps
mov
rcl
ljmp
adc
add
out
mov
lret
ds
add
add
dec
push
shll
cwtl
lds
call
mov
sub
outsb
dec
mov
mov
dec
inc
imul
add
dec
cmc
pop
sbb
or
jno
xor
in
pushf
adc
adc
into
xor
mov
pop
and
shrb
gs
mov
into
mov
push
fadd
cmpsb
cmp
mov
inc
sahf
cmp
mov
pop
lret
push
iret
addl
jp
mov
jbe
and
out
lock
nop
rorl
add
xor
aam
pop
xor
movsb
pop
push
outsl
stos
pop
inc
fbstp
jne
push
fs
xchg
cmp
out
loop
out
mov
cmp
and
xchg
push
mov
mov
or
icebp
sahf
or
cwtl
mov
or
scas
xor
jg
sarl
lret
rcrb
pop
mov
stc
lea
clts
inc
add
push
pushf
mov
xor
mov
add
push
jge
movsb
cmp
mov
sarl
cmp
fadd
pop
inc
pop
fldenv
ficomps
idivl
mov
fdivl
hlt
inc
cs
daa
fs
or
push
cmp
mov
mov
or
adc
sarl
xchg
flds
ret
sar
out
sbb
ljmp
mov
scas
mov
pushf
fstpl
fstp
sbb
fstpl
ficomps
out
fisubrl
clc
neg
mov
pushf
ror
call
movl
pusha
movl
pushl
pushf
pusha
pushl
lea
jmp
mov
xor
inc
sub
in
mov
imul
scas
push
fs
sub
fsubr
cmpsb
jmp
adcl
cmpsb
cltd
popf
fstpt
pop
popf
in
push
jnp
stc
cmc
pop
enter
fistl
dec
shl
xor
pop
push
lods
push
add
or
idivl
pop
repz
repz
hlt
in
dec
repz
xchg
sbb
cltd
sbb
adc
aad
pop
inc
outsl
and
enter
fnsave
lahf
cmp
lret
mov
call
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
jecxz
lea
pop
and
push
scas
out
xchg
sub
dec
enter
mov
ja
fmul
and
test
pop
mov
add
int
cs
mov
fs
xor
leave
mov
push
stos
inc
xchg
mov
mov
aas
add
mov
fadds
xlat
sarb
mov
sub
adcb
out
hlt
push
sub
jno
push
push
jns
push
lahf
ficomps
mov
sub
aam
loope
sbb
cs
pushf
jmp
add
mov
inc
outsl
enter
mov
adc
adc
test
xchg
popa
mov
or
fnstsw
cwtl
xchg
imul
inc
or
movsb
popfw
jmp
and
stos
jg
mov
jae
xchg
sbb
push
rorl
test
loope
jae
fistpl
mov
mov
mov
pushf
clc
out
loopne
out
lods
shlb
into
push
in
test
mov
repz
gs
mov
js
clc
cmp
ficoml
int3
pop
mov
cld
pop
or
mov
lock
adc
insl
push
sub
and
add
ret
pop
jge
xor
mov
dec
lock
repnz
decl
mov
sbb
push
popf
add
mov
inc
sbb
push
das
jns
mov
pop
test
movswl
imul
mov
inc
xor
adc
sub
xor
out
push
rorl
test
lret
or
fwait
mov
aam
sub
jne
xchg
fnstsw
and
push
fisttps
daa
sahf
push
movsl
scas
xlat
subb
fwait
sarl
ret
sbb
lret
pop
cwtl
hlt
shr
btc
mov
push
bt
clc
mov
shr
mov
pushf
stc
pushf
test
xor
pusha
cmc
jmp
pop
mov
mov
aad
and
pop
or
out
mov
pop
inc
aad
into
sarl
or
in
pop
jnp
sub
mov
in
std
pop
cltd
add
and
jg
shll
or
jnp
popa
gs
jae
icebp
fwait
mov
idivl
stc
mov
jns
fidivrl
fcmovne
mov
in
nop
cmp
add
inc
adc
cld
lea
and
aam
outsb
lret
rorl
mov
les
pusha
cmp
pushf
jmp
pusha
lea
jle
je
jmp
in
sar
test
outsl
xchg
pop
adc
shrb
add
jne
mov
pop
mov
xor
sub
adc
bound
in
inc
pop
cmp
icebp
out
xchg
je
xor
in
xchg
pmaddwd
mov
lahf
mov
sar
and
stos
or
mov
shrb
add
aas
push
inc
push
repz
dec
mov
cmp
xchg
inc
ror
push
xorb
sbb
out
push
pop
xor
sub
rcrl
push
pop
in
inc
pop
and
stos
aad
push
mov
lea
aas
sub
mov
cmc
jmp
aaa
cwtl
add
decb
es
shlb
pop
popa
sub
sub
push
das
xlat
loop
adc
mov
insl
das
dec
mov
aad
jmp
loopne
cld
test
sbb
mov
pusha
bound
outsb
ja
cmpb
mov
push
addl
pop
mov
loopne
jno
or
out
enter
pop
or
call
mov
imull
jb
cwtl
mov
mov
cmpsl
cmp
add
add
orb
nop
dec
jbe
push
and
mov
push
ljmp
pusha
mov
imul
notl
xchg
ja
out
inc
add
xor
jbe
mov
add
or
add
popa
mov
mov
cmp
jl
pop
cmc
push
and
cmp
and
or
icebp
cmpb
inc
xchg
add
jle
jb
div
or
inc
cmc
popf
or
sbb
int
jge
and
in
push
pop
add
jno
push
dec
cmp
call
xchg
sbb
mov
das
sub
insl
setnp
loopne
push
xor
cmc
decb
cmp
xor
into
mov
push
dec
add
adc
jae
mov
xchg
fs
or
add
and
add
icebp
icebp
adc
mov
and
cmpb
icebp
jp
mov
std
sahf
xchg
sub
jne
fdivp
repz
inc
xorl
cld
sbb
cwtl
shr
lea
shl
or
test
lds
xchg
sbb
mov
adc
sbb
adc
and
mov
imull
dec
jle
pusha
dec
mov
push
add
or
roll
and
mov
xchg
push
xchg
adc
xor
mov
dec
inc
cwtl
mov
icebp
add
ret
mov
mov
jae
add
mov
ja
stos
repz
push
mull
lock
adc
xchg
clc
cld
sti
cmpsl
push
push
jns
orb
xor
fdivrs
mov
stc
push
das
add
jno
jp
xchg
icebp
pop
add
cmp
filds
adcl
mov
cmp
repz
xor
adc
mov
xor
adc
mov
xor
ljmp
xor
xor
in
push
xorl
cmpl
and
aaa
mov
mov
std
js
cmp
imul
subb
aad
test
add
in
jle
dec
xorb
or
dec
and
push
cwtl
pushf
ss
jb
cli
jae
sbb
adc
adc
je,pt
test
hlt
adc
jae
sbb
xor
inc
daa
xor
imul
js
cmp
push
jno
mov
cld
add
mov
icebp
bound
test
pop
pop
cmp
ds
bound
jle
test
push
xchg
cmp
sbb
xchg
sahf
je
xorb
cli
fwait
addb
pop
add
jae
stos
adc
mov
cld
jne
icebp
adc
int3
inc
out
lea
js
pushf
jge
cld
sbb
jle
sahf
add
pop
push
fstpl
jle
fsubs
icebp
mov
jo
or
push
je
repnz
mov
fsubs
add
sbb
icebp
pop
js
pop
inc
icebp
xor
mov
sbb
fs
scas
add
and
inc
and
cmc
bnd
insl
xchg
repz
scas
xchg
leave
jbe
mov
and
ds
mov
pshufw
bound
popa
dec
vunpckhps
idivb
cwtl
adc
mov
add
jae
inc
scas
jb
lods
mov
cmp
es
repz
xor
push
push
fstps
xor
inc
test
pop
outsb
or
fs
mov
sbb
outsl
cmc
mov
js
lcall
imull
jb
mov
push
test
mov
jnp
lock
cmpsb
xchg
inc
pop
mov
xor
add
cmpl
call
jb
jl
repnz
repnz
divb
jle
or
cld
jb
jno
jnp
jo
jg
add
add
je
push
sub
push
mov
sbb
sahf
xor
outsl
imul
test
stos
js
mov
push
cmp
sub
xor
cmp
loope
icebp
ljmp
jns
icebp
cmc
pop
mov
and
rolb
push
pop
push
xchg
xchg
push
fstp
jge
jp
xor
jle
cmpb
mov
pop
test
mov
add
jl
ds
or
mov
cmovs
adc
dec
hlt
test
clc
neg
xor
hlt
roll
icebp
mov
push
jle
mov
xchg
and
jo
lods
je
fsts
adc
or
daa
push
repnz
jo
inc
out
sbb
stc
sub
inc
jl
maxps
fidivrl
das
adc
hlt
ja
sti
js
pop
cld
das
cld
jns
fbld
jl
xchg
inc
adc
mov
addr16
dec
adc
mov
xor
adc
cli
add
push
xchg
lock
mov
sahf
pop
pushf
ds
ss
push
jge
repnz
xlat
pop
fnsave
mov
mov
rcrl
fstps
sbb
cmp
cmp
add
js
pop
sbb
jge
pushf
stc
mov
mov
fdivr
out
enter
faddl
mov
leave
add
xor
fiadds
pop
repz
add
popa
xchg
cltd
jge
mov
mov
jg
repnz
cmp
adc
repz
je
jecxz
fiadds
adcb
push
repz
repnz
js
sbb
push
mov
stc
pop
mov
out
pop
push
mov
jo
stc
jge
pop
sub
adc
or
out
stos
mov
add
xchg
cmp
or
lret
cmc
lret
jae
rcrb
inc
in
or
mov
jg
mov
adc
dec
pusha
sub
imul
je
bnd
push
xlat
test
lret
sahf
jne
cmp
jmp
dec
or
inc
sahf
mov
outsb
xchg
jne
cmp
mov
ret
lret
enter
fs
jae
stc
cmc
cmc
cmp
call
jmp
jb
sub
hlt
inc
in
dec
loopne
jp
cld
outsb
cs
xchg
xor
out
mov
adc
bswap
and
sub
pop
pushw
int
push
mov
push
scas
pop
sbb
cltd
arpl
jle
data16
xor
ret
cli
aaa
inc
xchg
dec
std
sub
adc
mov
mov
mov
or
arpl
call
mov
dec
sub
add
out
sahf
imulb
mov
lahf
sbbb
bswap
push
mov
outsl
bswap
pop
xchg
call
dec
mov
adc
test
and
xor
cmpsb
mov
gs
into
fsubr
adc
cmpsb
pushf
scas
mov
push
sbb
into
jle
jo
fcmovnbe
orb
leave
int
mov
std
jnp
pop
into
jb
test
test
data16
fsts
lods
mov
fstps
mov
iret
iret
dec
and
out
xchg
fstpl
out
jecxz
or
xchg
mov
and
inc
test
push
mov
subl
sbb
movsb
mov
jne
mov
inc
sbb
es
pushf
push
mov
cli
enter
xor
sub
mov
push
mov
add
ljmp
adc
adc
clc
lret
aam
iret
sbb
mov
add
addl
cmpsb
cs
popl
mov
out
push
xchg
or
bound
and
js
dec
or
outsb
pop
inc
jo
das
push
in
xchg
mov
test
jg
cmp
mov
test
aam
push
sub
adc
jmp
outsl
stos
lret
or
pop
add
push
hlt
xor
adc
loop
insb
dec
lods
movsl
sub
je
adc
pusha
pop
push
ljmp
fs
fadd
inc
aad
fstpl
mov
cmp
pop
mov
gs
mov
and
mov
ret
aaa
add
xlat
int
mov
test
push
adc
push
cltd
shr
mov
cmp
adc
mov
test
rorl
sbb
test
cmp
orb
int3
lret
sahf
cwtl
add
mov
or
xchg
popf
xchg
pop
xchg
sub
mov
pop
add
push
idivl
cltd
push
nop
aas
fwait
jle
sub
js
dec
sarl
mov
iret
add
jo
xor
pop
xchg
mov
mov
lret
je
insl
sbb
lret
push
jle
inc
or
imul
adc
cmp
mov
ret
ds
inc
xor
sub
aaa
jne
mov
cmp
and
mov
mov
add
in
mov
in
mov
push
shrb
cmp
jns
xor
push
mov
test
xor
comiss
mov
js
jl
out
stos
lds
shl
data16
jno
pusha
dec
addr16
out
loopne
movsb
push
sbb
jae
sub
fists
jp,pt
sub
popf
stos
shl
mov
orl
and
rolb
sbb
dec
sbb
fsts
pop
adc
rol
jl
sahf
dec
or
sbbb
ljmp
add
fs
mov
lret
ja
call
fidivl
jae
popf
clc
out
and
dec
push
test
insb
ret
rcr
xor
fcmovnbe
popf
xor
sub
repz
ljmp
jns,pt
aad
imul
out
fldl
add
in
push
inc
leave
repz
mov
in
jb
mov
sar
dec
pop
fwait
in
add
fnsave
add
lret
fistl
jb
shll
call
mov
pop
xlat
scas
in
mov
push
xchg
imul
in
and
and
jmp
pushf
orb
mov
mov
out
fistpl
insb
cs
add
loope
test
loop
fstpt
or
xor
movsl
cmpsl
jbe
mov
mov
mov
jl
pop
ljmp
cmp
insb
lcall
inc
cltd
push
rorb
lods
stos
inc
fidivs
pushf
fwait
and
test
jo
inc
das
xor
push
jbe
ss
dec
rol
jbe
jae
popa
mov
or
sub
fadds
les
idivl
adc
cmp
in
fstp
xchg
add
mov
mov
inc
mov
in
pushf
cmp
xchg
iret
mov
repnz
and
adc
les
inc
mov
jo
push
mov
dec
mov
dec
mov
dec
cmc
bt
rol
jmp
lea
jb
pushf
clc
mov
cmp
pusha
lea
jae
add
stc
mov
xor
rcl
bsf
pushf
mov
pusha
shr
mov
jmp
pusha
pushl
mov
movl
call
clc
rcr
movzbw
btc
mov
pushf
movb
clc
cmp
cmpb
pusha
pusha
lea
jne
not
xor
or
pusha
jmp
pushf
cmp
mov
lea
ja
pushf
dec
inc
lea
seto
pushf
not
inc
lea
sete
xchg
shrd
mov
shr
dec
mov
cmc
push
bt
shr
jmp
mov
dec
dec
in
jmp
in
out
jp
js
leave
in
rclb
adc
push
into
test
loop
xchg
popa
and
mov
es
mov
pop
dec
pop
shrb
xchg
mov
sbb
jbe
addb
push
fcomps
pusha
jbe
loopne
add
sti
xor
int3
push
xchg
fnstenv
xchg
mov
loop
lods
shr
lret
lods
pop
inc
fimull
ss
mov
test
xchg
int3
in
push
adc
add
mov
mov
cmp
loop
or
pop
mov
stos
jnp
mov
int3
or
xorb
cmc
loope
mov
icebp
pop
or
lret
rolb
xor
fs
and
outsl
imul
fucomp
sbb
scas
pop
cli
outsb
add
jge
arpl
add
and
stos
int
jns
add
andb
lret
sub
and
std
add
in
mov
jg
pushl
cld
stos
jmp
int
ja
sub
pop
ljmp
dec
loopne
repz
mov
xchg
aaa
int
add
insl
pop
nop
loop
or
aam
adc
out
arpl
sub
and
aaa
dec
nop
sub
or
add
pop
dec
pop
imul
sub
add
xchg
adc
inc
mov
mov
insb
adc
test
out
lret
jne
or
mov
cmp
dec
mov
jge
adc
fadds
fucomi
dec
adc
or
in
xchg
imul
xor
adc
xor
ret
dec
xchg
outsb
sub
pop
mov
mov
mov
push
cmp
stos
les
aas
jp
pop
jne
sbbl
mov
push
jae
xor
xchg
inc
outsb
and
add
push
add
push
jbe
fldl
pop
inc
test
sbb
in
out
test
je
pop
cs
jb
pop
mov
test
stc
mov
mov
adc
dec
cmp
cmp
dec
fwait
push
pop
pop
mov
sbb
jae
adc
jge
js
cmp
iret
jmp
mov
out
jmp
pop
pop
fcoml
ja
insb
imul
fidivs
rcrb
lods
push
jb
dec
out
mov
fdivr
jmp
sub
outsl
cli
push
xor
mov
jo
daa
push
or
test
sub
out
cmp
push
mov
ret
pop
jb
sub
call
push
adc
mov
mov
pop
pop
loop
mov
addr16
cmpsb
push
push
dec
cmp
adc
neg
mov
dec
push
xor
or
add
popf
pop
jle
fistps
rcrl
movsl
call
ds
aad
sbbb
pop
cli
je
push
enter
sub
adcb
push
inc
pusha
push
or
xor
into
clc
mov
pop
jae
push
test
add
jmp
bswap
push
movl
sete
lea
push
movzbw
lea
pushl
pusha
call
add
jne
sub
mov
pop
xor
sub
je
popa
add
movsb
push
push
repz
pop
hlt
xor
out
icebp
testb
sub
popa
ljmp
mov
je
pop
loopne
cmp
or
mov
cmc
cmp
repz
sub
cmp
mov
daa
cs
js
repz
xchg
dec
sub
xor
pop
popf
jp
movsb
add
lds
or
mov
repnz
subl
stc
sti
mov
jbe
ja
push
in
sbb
and
in
out
scas
mov
add
rcrb
cld
popa
daa
rcrl
fbld
cltd
mov
iret
add
shl
cmp
addb
xor
jle
rcll
jnp
stc
ja
or
adcl
jb
mov
andl
fisttps
cmc
inc
ds
jmp
cld
jbe
ficomps
add
jp
jo
pop
sti
mov
jne
mov
sub
and
cmc
and
dec
shrb
add
cld
ror
xor
jge
lret
xchg
mov
popf
mov
jp
imul
aaa
xchg
push
jns
dec
adc
add
imul
add
or
shrb
and
ret
xor
jno
lcall
cli
add
popa
xor
push
adc
xor
sahf
fsub
mov
lock
xor
into
ss
js
mulb
and
stos
ss
sbb
sbb
pop
icebp
or
mov
mov
mov
dec
mov
and
subl
movl
mov
arpl
push
inc
sahf
ret
loopne
jp
jp
push
inc
fs
stos
call
adc
jnp
sub
sbb
cwtl
js
xor
add
xchg
xor
sbbb
and
jae
icebp
mov
jbe
repnz
adc
loop
enter
movl
popl
insl
pop
push
pusha
fstps
sti
loope
movsb
adc
mov
xchg
and
push
div
mov
test
mov
mov
mov
adc
jno
sub
mov
mov
jge
sub
push
divb
testb
stos
call
cld
push
nop
sub
jo
movsl
outsb
repz
jae
or
mov
push
roll
sub
lods
pop
fimuls
daa
or
cmc
aaa
sub
pop
addb
xor
inc
inc
fldenv
jl
push
sbb
mov
sub
jae
xor
sub
mov
imul
cmp
push
fstpt
adc
mov
loope
pusha
test
xchg
adc
or
xorl
push
mov
daa
push
cmp
popf
sbb
shr
ljmp
xor
xor
lods
and
or
cmpsb
faddl
lret
or
push
mov
mov
pop
jp
divb
dec
lods
test
fiaddl
aad
mov
xor
inc
lods
jge
sub
or
or
cld
mov
icebp
cmp
dec
es
jp
pop
add
idiv
repnz
testl
dec
fdivrl
jns
shll
lcall
cmp
or
jg
push
hlt
inc
mov
rorl
jmp
mov
xor
ret
cmp
or
into
test
and
lea
sbb
and
fwait
bound
xor
jbe
movsl
cli
das
jo
rclb
ja
mov
jno
cli
addb
sbb
jp
cltd
sbb
pop
jg
std
xor
outsl
testb
adc
sti
pushf
int3
sysret
mov
xor
xchg
clc
push
jl
push
adc
jns
fdivs
daa
je
dec
mov
mov
sti
sub
or
daa
jmp
int3
aaa
inc
and
outsb
add
pop
mov
pushf
enter
popa
jmp
into
cmc
and
sub
push
adc
dec
inc
mov
xor
add
lods
add
jae
fcompl
xchg
arpl
adc
int
rcl
cli
js
lret
sti
xlat
mov
adc
gs
xor
xor
mov
lcall
push
negl
and
xchg
sub
ficoms
or
sbb
jb
add
test
bound
add
clc
dec
clc
stc
rcll
js
pop
fwait
mov
push
jecxz
inc
pop
and
jb
pop
adc
pop
adc
idivl
xchg
imulb
js
int3
push
fildl
shl
sub
adc
adc
or
cld
mov
mov
cmp
inc
fmull
shl
repz
sub
inc
or
lahf
lds
inc
xchg
das
mov
repz
sub
lock
mov
adc
inc
fisubrl
shr
jbe
jg
push
xor
sbb
out
pop
add
push
add
mov
pop
or
dec
cli
push
adc
test
xor
xchg
add
insb
or
mov
jb
adc
leave
dec
jne
or
mov
add
fwait
andl
out
adc
cld
iret
pushf
add
jne
mov
loop
lcall
cmp
std
xor
sbb
sbb
notl
jo
adc
sub
push
pop
lahf
xchg
and
dec
cmp
xor
outsl
push
inc
outsl
push
xor
jecxz
shrb
ficoml
xor
xor
add
cmp
jb
xchg
mov
and
dec
std
cld
adc
test
ljmp
mov
mov
popa
or
mov
ss
addl
movsb
inc
cmp
add
sbb
cmc
shll
ljmp
ret
sub
insb
pop
or
sbb
inc
scas
mov
pushf
push
cmp
adc
pop
das
shl
int
add
xor
clc
lock
adc
sti
xor
ret
xchg
cld
xor
xor
or
sub
or
test
pusha
and
pop
mov
inc
addl
and
xchg
lock
cmc
negb
jno
adcb
gs
pop
jp
hlt
add
lret
mov
push
shrb
fwait
call
inc
std
pop
add
sub
or
add
jo
or
sti
adc
and
into
lret
mov
pop
jo
in
inc
push
sbb
sub
push
sbb
xor
sti
and
cmc
sub
xor
add
xor
jl
gs
lock
xlat
xchg
pop
jo
pop
jmp
test
rol
dec
xor
jg
outsb
repnz
push
and
pop
movsl
mov
scas
xor
int
lods
adc
dec
cmc
mov
pop
xor
sub
jo
into
adc
pop
test
or
icebp
push
pop
mov
ja
jp
cld
jmp
mov
test
pop
and
or
push
adc
lds
repz
jl
hlt
aaa
mov
rcll
mov
add
scas
push
jge
xor
push
inc
xor
ss
add
pop
push
cmp
jbe
lock
jns
hlt
cmp
popa
data16
or
out
sub
sbb
sbb
mov
adcb
jnp
dec
mov
mov
mov
lock
test
pop
xchg
and
push
push
rclb
loope
mov
in
cmp
aaa
bound
mov
sti
add
mull
sub
pop
loopne
mov
jae
enter
mov
mov
jecxz
mull
mov
insb
rorb
sti
dec
push
dec
adc
dec
testb
inc
ret
or
movsl
adcl
rcl
sub
push
add
iret
xchg
nop
jno
sti
divl
sub
sbb
fidivrl
or
mov
lods
scas
sub
cmp
inc
ss
loopne
fcoms
jns
roll
imul
int3
jne
fidivl
pop
mov
push
inc
jmp
mov
mov
jbe
jle
add
cld
xchg
jno
ror
cmp
mov
jns
jne
shll
add
icebp
int
xor
cwtl
push
sub
or
int3
popa
sti
jg
push
mov
hlt
sub
fs
mov
xor
repnz
rol
or
adc
js
icebp
and
stc
cld
loop
or
cmp
je
push
dec
insb
sahf
shl
adc
out
stc
mov
add
jb
and
loopne
shrb
sbb
fsts
jbe
lock
jne
or
jno
jle
xor
xchg
pop
das
push
xor
je
mov
xor
lods
inc
pop
push
add
jno
lods
add
sar
inc
xlat
call
add
mov
das
adc
adc
in
mov
push
mov
dec
jl
loopne
or
popa
enter
push
pop
sub
xor
fnsave
push
idiv
inc
cld
pop
lret
fcomps
inc
add
sti
sub
or
mov
mov
xchg
scas
icebp
lock
xchg
push
xor
or
inc
ret
xor
xchg
sub
sarb
pop
ret
adc
out
mov
push
and
fyl2x
repnz
mov
pop
lret
adc
popf
test
and
sbbb
mov
cmc
and
data16
pop
push
arpl
cmp
jne
mov
adc
addr16
clc
or
lock
imul
sub
testl
or
push
sbb
cmpl
lahf
cld
dec
icebp
lret
dec
cli
add
mov
js
xchg
cmc
add
mov
sub
xor
inc
decl
pop
xor
pop
sbb
sbb
cmp
sbb
pop
mov
movsb
sub
cmp
test
push
mov
movsb
push
lods
stc
jmp
pop
pop
cmp
or
mov
leave
or
sub
mov
sub
popa
lcall
fdiv
push
sub
dec
loope
cmp
icebp
dec
jle
add
push
add
sti
push
stc
cli
jnp
lret
mov
addr16
cmp
xchg
jno
inc
je
jecxz
cld
daa
dec
insb
es
mov
sub
mov
jne
mov
cmpl
outsb
scas
repnz
dec
fsubrl
sti
xchg
repz
sti
xchg
mov
mov
cmpl
dec
inc
pop
jl
push
in
pop
push
lock
iret
sti
inc
dec
push
daa
xor
fadds
ja
and
mov
popa
outsl
aaa
adc
jne
push
fistpll
add
xchg
add
xorb
sbb
or
dec
sbb
loopne
dec
les
dec
jecxz
cmp
sub
push
mov
sub
stos
sbb
xchg
xchg
fwait
mov
loope
cltd
xor
sub
cmpsl
mov
cmp
sti
jo
mov
jne
xor
test
lods
or
int3
jne
rol
mov
out
repz
xchg
loopne
inc
push
inc
sub
add
mov
out
push
les
ss
xor
xor
mov
insl
daa
or
sbb
cmpsl
xor
push
push
jne
mov
or
inc
out
pop
add
inc
test
inc
xor
cmp
mov
jns
cld
inc
or
rorl
sbb
dec
xchg
insl
jo
sbb
movsl
jns
sahf
ret
sbb
movl
xor
adc
daa
mov
add
mov
xchg
jne
icebp
cmp
sub
outsl
sub
shll
xchg
jb
outsl
push
mov
adc
mov
cld
jg
or
push
fisubl
mov
aad
xor
mov
repnz
adc
sbb
cmp
iret
cld
jnp
dec
sub
sub
popf
fdivs
movsl
jb
jp
sub
das
fistps
sub
pop
adc
sub
repnz
in
or
adc
push
imul
xor
mov
pop
aam
mov
dec
stos
das
daa
push
std
ja
icebp
ss
aas
push
mov
mov
arpl
sbbl
aaa
test
add
sub
pop
fidivs
pop
inc
sub
cld
add
cli
push
mov
gs
dec
push
add
and
xchg
pop
lahf
sub
addb
shll
mov
test
add
cld
aaa
mov
fadds
xchg
adc
js
pop
loope
jg
push
icebp
inc
mov
ja
dec
sbb
ja
fcomps
jnp
mov
cmp
ret
les
lcall
mov
cmc
gs
and
adc
add
pop
push
sub
mov
test
push
int3
xor
in
pop
andl
clc
jmp
cmpl
cmp
adc
cli
mov
outsb
pop
xlat
icebp
inc
mov
cmp
int
mov
or
and
xchg
std
sbb
jnp
sub
clc
inc
mov
enter
call
mov
stc
inc
repnz
fwait
lahf
jno
and
push
adc
add
xor
jge
adc
enter
mov
nop
and
or
jbe
inc
inc
push
into
cli
dec
xchg
addb
cmc
jno
and
push
dec
popf
push
xorb
icebp
lahf
jp
pop
rolb
push
jb
sub
jae
cmp
dec
sub
push
push
dec
pop
repnz
pop
jns
push
test
stos
sub
je
mov
sarb
jbe
js
adc
push
je
imul
inc
push
jp
or
shl
pop
or
lock
icebp
sti
pop
or
fildl
mov
sbb
sar
mov
sub
sbb
push
or
ja
in
sub
lret
cmp
cld
xchg
jbe
rcrl
adc
lds
rcrb
jge
push
and
mov
filds
dec
jp
adc
nop
in
add
sbb
lahf
outsb
sbb
sbb
pusha
dec
movsl
pop
pop
xchg
jae
loopne
andb
repz
sbb
stc
push
cmpsl
mov
mov
add
mov
int
fbld
mov
push
xchg
pop
or
fdivrs
lret
hlt
sti
sub
bound
xchg
push
jne
sbb
std
dec
adc
mov
mov
das
lcall
pop
mov
xchg
mov
mov
sbb
cld
fadds
push
testl
push
pop
push
xchg
jo
jo
mov
xor
add
mov
push
inc
and
outsl
push
adc
sbb
inc
add
js
negl
mov
adc
cld
inc
stc
mov
mov
inc
lds
stc
arpl
rolb
mov
push
es
sarb
jg
int
insb
mov
mov
jl
add
stc
subl
adc
jno
lock
mov
aaa
adc
pushf
push
and
sbb
nop
js
sti
in
pop
xor
insb
cmpsb
dec
sahf
adc
mov
pushf
int
fistpll
xor
rcrb
popf
cwtl
repnz
repz
nop
cli
adc
xor
pushf
outsl
popa
insl
fdivrs
repz
roll
or
icebp
and
cmp
push
or
repz
jo
ret
and
fstp
pop
mov
jl
mov
shl
sbb
cmc
mov
mov
or
mov
hlt
shrb
jmp
insl
mov
scas
jp
mov
pop
into
pop
test
jg
or
sbb
xor
or
ljmp
sub
mov
adc
aam
add
mov
mov
icebp
out
pop
sbb
jmp
push
mov
xchg
sti
addr16
adc
mov
fisttps
cwtl
add
rcrl
pop
cmp
push
movsl
cmp
dec
stos
pop
sbb
fidivl
popa
cwtl
jl
pushf
sbb
ja
sarl
sarb
jg
or
inc
mov
sbb
rolb
cmp
sbb
decb
or
mov
das
cwtl
aam
and
jns
and
mov
aad
scas
cmp
mov
pop
adc
sti
push
jg
mov
sub
add
push
icebp
outsb
inc
xchg
lock
dec
jg
cmp
jl
andb
xlat
int3
mov
mov
sti
push
inc
xchg
add
push
push
xchg
sub
sbb
int3
mov
mov
repz
in
cli
adc
xor
jp
sbb
in
cwtl
popa
xor
xchg
cmp
sbb
jne
xchg
orl
or
test
daa
adc
jbe
mov
mov
xchg
dec
add
ss
push
daa
sub
xlat
inc
lock
sbb
shlb
xchg
call
xchg
sbb
jmp
lcall
xchg
inc
add
insl
or
jnp
stos
pop
fists
test
mov
cs
testb
or
push
repnz
mov
test
cmp
pop
push
lcall
cwtl
cmp
mov
or
pop
test
cltd
fisttpll
inc
pop
inc
jg
push
mov
xchg
xchg
cmp
adc
dec
xchg
loop
cmp
xor
cwtl
subb
aam
outsb
push
inc
movsb
cmp
xlat
ljmp
sub
dec
jmp
andl
xor
out
ja
push
or
mov
push
mov
cmpsl
test
shrl
jg
inc
or
mov
inc
bound
sub
jecxz
push
jp
or
int3
sbb
sbb
lock
xor
add
fcmovnb
mov
mov
or
xor
cmpsl
push
xchg
xchg
ja
js
adc
sub
aad
pop
inc
sbb
jecxz
xchg
xchg
mov
das
call
repz
lods
xor
mov
jae
cmp
cmpsl
ja
cs
cld
mov
sbb
test
out
mov
add
bound
jns
jno
cmp
divb
mov
int
test
cmc
push
cld
es
dec
ss
sub
sbb
inc
inc
je
andl
add
cltd
ja
fistpl
or
inc
out
sbb
repz
cmp
mov
jo
js
add
push
sub
mov
mov
and
and
ffreep
mov
repz
xchg
icebp
loop
dec
repz
stc
hlt
les
push
or
sub
pop
sbb
or
dec
icebp
sub
loope
pop
add
sar
dec
mov
imul
add
mov
mov
sbb
xor
jb
xchg
or
add
or
mov
push
cmp
and
insl
jb
adc
mov
out
rcrb
rolb
push
sbb
gs
sub
nop
push
sub
and
daa
push
mov
outsb
push
mov
lock
sub
pop
hlt
mov
adc
push
popa
stc
dec
cld
lds
aad
add
das
out
addr16
cld
lret
sub
inc
lods
xchg
sarb
fstl
mov
cs
xchg
pop
aas
mov
or
insl
xor
adc
cmp
movsl
aam
cld
ljmp
add
fwait
push
xor
insl
addr16
stos
fwait
mov
aas
idivb
mov
es
rorb
mov
shl
inc
lock
addr16
xchg
push
sub
lea
mov
push
aam
xchg
jnp
rclb
pusha
mov
sbb
add
ja
out
aas
fadds
cmp
arpl
cld
aam
jnp
faddl
inc
add
negl
stc
icebp
jmp
inc
jo
popa
adc
lods
mov
out
ds
mov
enter
lcall
stos
hlt
sub
sbb
test
jae
sbb
roll
xchg
inc
int3
lcall
sub
repz
lcall
ja
ja
push
or
dec
inc
mov
test
scas
mov
inc
bound
js
imul
mov
aam
cmp
mov
mov
mov
cmp
repz
pusha
adc
push
nop
sbb
pop
pop
cwtl
addb
jg
mov
jmp
inc
or
add
cli
fnsave
lods
adc
mov
sub
inc
sbbl
add
jae
push
hlt
mov
cld
cltd
lret
shrb
xor
sbb
xchg
pushf
jb
push
mov
loope
ret
pop
mov
inc
not
idivl
xor
xchg
icebp
prefetch
or
repz
int
push
std
rcll
idiv
andb
je
add
sub
in
pop
add
sub
vcvtss2si
sahf
out
mov
push
leave
push
icebp
ss
call
mov
add
sub
cmpl
pop
scas
test
or
pop
pusha
cmpsl
sub
ja
popa
dec
add
repz
mov
jl
xchg
sub
outsb
outsb
icebp
jns
mov
shll
add
cmpl
push
sub
xchg
repz
cld
mov
sbb
out
scas
imul
hlt
int3
lods
and
cmp
pop
inc
dec
fprem1
sbb
mov
pop
pop
popf
jo
or
repnz
xchg
cld
xor
dec
sub
mov
or
andb
pop
inc
dec
pop
mov
mov
ret
jmp
loop
lcall
cld
push
ficoms
jne
pop
adcb
inc
pop
loopne
movl
jmp
jne
xchg
xlat
out
je
xor
adc
pop
pop
xor
fnstcw
pop
div
xor
cmp
or
repz
add
lea
mov
and
repz
daa
pop
xor
call
inc
ficoms
mov
jno
mov
xor
jno
mov
pop
out
hlt
mov
js
jbe
mov
mov
rorl
insl
dec
xor
and
lods
insb
je
stc
orb
outsb
sets
add
inc
or
popa
cmp
pop
rcrl
and
cs
insl
sti
add
and
flds
movsb
leave
mov
movsb
fldcw
mov
sbb
or
sub
imul
xlat
xchg
dec
aad
push
adc
jbe
int
sub
or
xchg
sbb
ret
adc
pop
ret
ss
cmp
incl
jl
mov
inc
stos
lahf
call
movsb
ja
add
fdiv
pop
pop
enter
js
jecxz
pop
cltd
pop
push
dec
stc
lods
jae
add
pop
int
shl
xcrypt-ecb
cmpsl
or
sub
add
jecxz
or
push
adc
mov
ja
add
iret
xor
or
xor
int3
jno
jns
dec
pop
lock
xorb
jmp
repnz
cmpsl
fimull
leave
inc
push
mov
iret
sahf
sti
inc
call
pop
adc
and
inc
fimull
or
cwtl
fdivp
dec
icebp
mov
pop
sub
and
jns
loop,pt
addb
ds
in
or
cmp
add
push
sub
xor
and
fwait
or
push
inc
pop
je
add
lcall
stc
mov
xor
test
stos
xchg
cmp
and
xchg
sbb
dec
jle
sbb
sbb
sahf
cwtl
cmpsl
add
pop
insb
pop
xchg
je
subb
xchg
xchg
or
lret
adc
jns
mov
jo
jbe
mov
inc
test
nop
jno
daa
push
cmp
or
rolb
test
jo
ljmp
push
jecxz
lock
and
stos
fildll
rorb
test
cmp
nop
pop
push
mov
cvtps2pi
cwtl
xor
stos
pop
outsb
add
mov
shrb
pop
mov
adc
movsl
cmp
rolb
push
test
fbld
loope
dec
cmp
add
xchg
test
mov
cmp
pop
fcomi
roll
xchg
aad
fwait
jnp
mov
xchg
out
out
movsl
clc
mov
or
out
xchg
sub
aad
pop
loopne
cmp
mov
imull
mov
jo
mov
mov
cmp
btr
jne
adc
sub
and
cmpsl
inc
push
mov
mov
pop
les
pop
mov
push
sbb
out
iret
and
cmp
pop
aaa
or
daa
repnz
add
aaa
dec
std
movsl
adc
xchg
mov
mov
loop
sbb
cmp
jp
shll
fsubs
mov
jno
or
rcrb
cmp
insb
pop
pop
mov
lcall
cld
xchg
in
out
jecxz
add
sub
xchg
jnp
sbb
jne
and
roll
cmpsl
sbb
add
stos
fwait
sub
and
push
jno
mov
aam
mov
cmpsb
push
lahf
or
add
mov
sub
and
into
add
lock
mov
cwtl
cld
ficoml
iret
ds
sub
scas
dec
lods
sbb
fwait
aaa
xchg
mov
or
pop
cld
jmp
jge
or
cld
pop
js
mov
and
push
cmp
rorb
cwtl
cmp
das
sbb
and
or
adc
int
mov
cld
and
cmp
xor
mov
cmp
call
and
leave
xor
fidivl
xor
popl
mov
cwtl
sub
push
leave
ds
shl
lcall
ja
pop
xchg
gs
pushf
loope
and
sbb
cld
data16
cld
or
aad
or
sqrtps
repz
or
xchg
js
and
mov
push
mov
loope
xchg
loope
push
nop
mov
fstpl
decl
adc
int
mov
cwtl
dec
jb
inc
clc
stc
stc
inc
testl
push
addr16
inc
fadds
rorl
add
and
subl
ret
aam
sar
inc
xchg
sub
mov
loop
push
or
cmpsb
repz
cld
out
jne
ljmp
mov
add
repz
je
addb
mov
pop
jb
cld
mov
add
dec
ss
push
les
push
mov
add
cmovnp
enter
not
and
mov
popf
pop
lock
fimull
andl
shlb
popa
movsl
jmp
sbb
mov
pop
rep
js
mov
cmpsb
add
adcb
cwtl
insl
icebp
rclb
cmp
or
mov
iret
adc
add
jbe
cli
pop
sbb
xor
mov
push
jno
sbb
lahf
sbb
push
xor
dec
mov
icebp
loop
fdivs
jno
cmp
mov
add
mov
test
sub
idivl
outsl
loope
popa
out
outsb
xchg
repz
jns
nop
imul
adc
cld
cmp
clc
mov
das
in
pushf
icebp
cmpsl
pop
pop
dec
or
sub
bound
inc
shlb
mov
repz
xor
mov
loope
or
aaa
repnz
pop
ljmp
fptan
gs
enter
xlat
repz
and
out
idivb
test
cmp
adc
jp
mov
cwtl
or
fs
or
cltd
jo
pop
cmpb
mov
idiv
sbb
fstps
sbbb
and
cmp
shl
or
je
mov
pop
push
jg
mov
push
rcrl
mov
ja
aam
leave
cmp
mov
insl
icebp
insb
cmpsl
add
sub
jecxz
inc
pop
mov
xchg
xor
pusha
xchg
cwtl
stc
nop
push
mov
xor
add
or
inc
xchg
int3
cmovle
push
sub
subl
cmp
bound
sti
or
adc
setl
push
repnz
das
sub
movsb
js
fs
mov
dec
sub
mov
xor
cld
gs
jns
xchg
xchg
dec
or
adc
scas
pop
iret
xor
or
xor
push
mov
mov
add
movsl
sub
ret
jmp
lret
push
mov
push
sahf
sbb
sbb
loopne
lcall
pop
clc
push
mov
mov
dec
push
lods
inc
mov
stc
divl
shrb
repz
inc
mov
mov
lock
sti
push
adc
add
cmp
mulb
fstpt
mov
push
roll
cmp
in
xor
pop
add
ss
jp
pop
or
mov
icebp
out
sbb
test
outsb
shl
sbb
nop
cmp
mov
xlat
adc
cmp
int
add
xlat
mov
cmc
dec
or
adc
push
imul
jbe
mov
jb
imul
iret
daa
add
insl
dec
adc
adc
jne
inc
xchg
cmp
jno
loopne
and
outsl
imul
cmp
ss
sbb
repnz
movsl
jg
cs
inc
xor
sti
pop
xchg
mov
shlb
jns
xor
jge
xchg
cmp
dec
in
adc
roll
mov
lret
mov
cltd
mov
les
iret
mov
xor
push
xor
nop
push
in
outsl
in
add
xor
lcall
inc
bound
mov
ficoml
in
or
cs
fcoml
je
aaa
xchg
pusha
xchg
xchg
out
mov
sub
fsubrl
jae
repnz
decl
sbb
mov
iret
and
test
dec
sub
mov
cli
xchg
pop
int
add
sbb
push
sub
cmc
or
or
pop
push
dec
icebp
mov
clc
daa
sbb
les
shlb
push
adc
cld
out
pop
mov
enter
incl
jnp
mov
xchg
push
loopne
mov
jg
mov
mov
divl
sbb
jbe
add
out
add
cltd
inc
fiadds
adc
sahf
je
jns
std
pusha
popf
je
iret
shll
or
push
xchg
or
gs
cmp
arpl
ret
sbb
mov
stc
mov
je
pop
inc
xor
imul
mov
push
push
jae
mov
jne
scas
pop
add
nop
jo
mov
mov
cmpsl
xchg
lret
jle
mov
pop
adc
call
ja
jb
cli
cwtl
stos
push
cmp
and
mov
and
mov
test
cmc
mov
or
out
sub
sub
push
clc
loop
jecxz
ret
sub
aad
call
push
pop
cmp
sbb
sub
mov
dec
cmpl
lock
fdivl
push
sub
jecxz
ss
roll
push
iret
adc
cmc
fbstp
out
sbb
adc
fnstenv
movsb
lcall
add
cmpsb
stc
adcl
push
fistps
cmc
mov
aam
hlt
adc
or
out
cmp
nop
cld
adc
mov
leave
inc
jne
xlat
icebp
sarb
or
gs
xor
push
sub
cmp
shlb
cmpb
pavgb
pushf
psubq
in
cmpsb
aaa
stos
pushl
cld
adc
xchg
jbe
inc
cmc
lret
jo
cld
rclb
pop
cmp
jl
popl
pop
push
std
jb
mov
push
cmp
adc
gs
sbb
xchg
int
movsl
aam
mov
xor
jp
ret
jo
add
xchg
sbb
idiv
or
or
jbe
cmp
pushl
jmp
xor
push
in
push
and
adc
jg
mov
mov
mov
mov
fdivs
lock
jno
inc
xlat
mov
decb
sub
popa
repz
int
add
inc
push
or
inc
pop
xor
adc
pop
shl
mov
int
sbb
or
dec
inc
xor
js
mov
imul
fxch
pop
xchg
sar
pop
push
jns
inc
mov
push
push
iret
jno,pt
scas
mov
and
push
add
scas
divl
aam
mov
repnz
shrb
js
enter
mov
jbe
ret
or
cmp
shlb
ja
cld
rcrb
cmpsb
icebp
std
and
mov
dec
or
xchg
add
mov
jecxz
pop
mov
int3
adc
stos
mov
aad
lock
mov
imul
mov
lock
lahf
xchg
sub
test
xchg
jbe
scas
cmc
xor
arpl
or
dec
xor
pop
push
lock
and
xor
je
iret
push
jmp
mov
xor
cli
jecxz
test
lods
xchg
mov
lea
inc
pusha
cmpsl
movsl
push
mov
aad
fisttpl
fs
in
adc
cmc
inc
lock
dec
loop
add
push
insl
jp
cltd
push
cld
mov
popa
mov
push
clc
jecxz
or
ret
sub
adc
ja
addr16
or
ret
adc
and
xlat
ja
stos
pop
cmp
mov
mov
mov
inc
or
out
stos
sti
fwait
sub
pop
mov
push
sbb
cmpsl
movsl
loop
jp
mov
test
mov
xchg
and
addl
imul
repz
mov
aaa
push
and
cmc
add
add
xor
xor
jb
fstl
mov
sub
jne
add
and
aad
dec
and
cmc
or
fdivs
cmpsb
pop
mov
push
testl
shl
xchg
mov
shr
cld
dec
and
mov
xchg
lret
add
and
or
lock
push
add
daa
adc
inc
sub
push
push
shlb
xchg
or
lea
repnz
pop
mov
or
or
cmp
stos
dec
pop
fsts
movsb
loopne
out
and
push
lret
lea
enter
or
push
cmc
rcl
out
ret
mov
icebp
das
cmp
push
cld
into
mov
stc
adc
jae
adc
popf
cmc
inc
mov
lods
xchg
sub
dec
mov
add
cmc
sbb
cld
mov
ficompl
or
xchg
sub
add
push
pop
inc
into
jg
and
leave
adc
add
ret
cmp
pop
je
lock
xchg
sub
and
push
gs
das
dec
cli
into
cmp
sub
pop
adc
dec
jo
mov
test
sub
mov
out
push
stos
insb
or
xchg
mov
add
sti
cld
xor
dec
push
leave
push
jne
xor
pusha
sbb
out
jg
stc
test
cmpsb
js
mov
jno
movsl
std
mov
insl
sbb
pop
sbb
movsl
ljmp
cltd
pop
dec
adc
or
cwtl
xchg
test
int
push
outsl
pop
std
push
add
or
arpl
sub
lret
ret
or
arpl
jbe
pop
adc
cmp
jp
es
jo
cmp
sub
xchg
jmp
add
call
xchg
jne
mov
lahf
dec
adc
cld
mov
pop
sbb
or
nop
mov
adc
and
push
sub
cld
push
mov
mov
or
xor
in
or
stc
sub
add
adc
mov
repz
jns
jg
pusha
inc
popa
inc
in
cmp
fcoml
mov
mov
inc
xchg
push
roll
ret
xchg
xor
dec
push
das
rclb
xchg
shll
mov
negl
mov
into
or
jmp
imul
sti
mov
add
lret
data16
jb
pusha
clc
repz
loopne
mov
ret
idivb
xor
sbb
add
add
cld
pop
ret
aam
das
push
xchg
xchg
or
add
jge
in
push
jo
and
add
aas
pop
add
cld
fnstenv
add
lret
or
mov
sub
nop
jg
test
mov
sub
in
mov
adc
test
mov
mov
add
sbb
aas
adc
xchg
out
adc
push
lock
ja
dec
push
cmpl
add
push
lea
sti
xchg
jecxz
push
cmp
sbb
xor
mov
pop
les
sahf
iret
add
inc
repnz
ret
or
jb
and
adc
pop
jg
sbb
xor
movsb
clc
fimull
jecxz
or
movsl
repnz
and
jge
pushf
imul
adc
dec
idivb
lret
cmpb
notb
lcall
or
mov
mov
loope
jne
and
shrb
aas
jo
std
jb
icebp
mov
es
xchg
and
pop
sti
stc
ret
add
fdivrs
jmp
sub
sub
es
xor
in
add
push
or
jo
mov
dec
dec
jp
push
ja
addr16
punpckldq
cld
push
pop
adc
sti
js
xchg
sub
sbb
aas
mov
roll
lahf
jno
loop
daa
xor
and
adc
fpatan
adc
je
push
cmpsb
inc
leave
ljmp
ret
push
sbb
ds
lea
add
sti
push
in
or
in
push
dec
dec
out
and
xchg
sub
adc
sub
and
rcr
jp
push
addr16
js
fcom
rclb
sbb
and
stc
adc
ja
movsl
mov
mov
push
adc
add
scas
pop
xor
shll
mov
test
popa
subl
ljmp
out
mov
sub
js
adc
push
fiadds
add
jle
push
or
daa
lret
or
popf
rorl
loop
aas
cmp
sti
jnp
and
pusha
xor
rcr
and
sub
out
in
dec
aad
sbb
cld
loope
xlat
and
repnz
inc
pop
sub
jns
repz
push
jo
andl
adc
sub
jo
pop
sbb
popa
or
mov
dec
jae
jnp
cld
adc
hlt
push
jg
lahf
xor
dec
inc
test
pop
jns
inc
jecxz
pusha
sub
sub
dec
arpl
mov
shrb
repnz
push
push
xchg
or
dec
sar
stos
and
adcl
and
arpl
mov
push
subb
rclb
aam
cld
jmp
xchg
sbb
mov
test
sarl
fs
fistpll
pop
cmpsb
fdivrs
scas
popf
cld
xor
push
rclb
or
rcrl
test
ret
cmc
push
ljmp
imull
sti
mov
jl
imul
cmp
sbb
loop
in
movsb
push
popf
dec
fstps
mov
xor
insb
jo
mov
jae
inc
movsl
repnz
mov
adc
jns
xor
jo
data16
movsl
add
loop
adc
aam
mov
ljmp
sbb
mov
loopne
test
movsl
and
daa
push
mov
mov
stc
inc
gs
test
mov
dec
js
jg
jb
lret
add
jg
repz
adc
loop
and
es
push
sti
data16
sub
mov
or
sti
incl
dec
fwait
test
mov
jns
movsl
jno
jmp
xor
adc
incl
pop
xchg
add
test
imul
mov
pushf
es
pop
push
push
not
nop
cmp
int3
cld
adc
std
shll
popl
cmp
dec
lahf
inc
jbe
nop
scas
xchg
cmpl
sub
cmp
mov
ljmp
pop
mov
lret
icebp
xchg
inc
popf
jns
mov
insb
dec
inc
jbe
sub
mov
leave
nop
cld
enter
dec
fwait
pop
pop
aam
imul
pop
jp
push
dec
mov
popl
aaa
sbb
ret
pop
subb
jnp
loopne
cli
pop
cmp
jmp
inc
stos
xchg
out
pop
pop
pusha
adc
mov
les
loopne
mov
sub
bound
mov
mov
test
imul
push
mov
clc
mov
push
dec
lods
jns
mov
leave
lods
push
nop
add
cld
push
adc
cs
aam
and
das
rorb
adc
and
adc
enter
xchg
aad
or
dec
inc
or
and
mov
mov
mov
mov
bswap
adc
xor
xchg
loopne
inc
sbbb
add
sti
pop
lret
push
popa
jae
add
insb
mov
stos
mov
imul
inc
test
lods
mov
jle
add
sub
out
lods
push
sbb
mov
mov
lods
cmp
and
jecxz
enter
dec
fimull
ret
test
pop
or
pop
fdiv
mov
lret
add
mov
xchg
cmovge
push
arpl
insb
xchg
pop
ret
pop
sbb
aad
mov
add
mov
push
xchg
mov
jg
jno
push
rcl
push
mov
jne
cmp
mov
and
sub
fcompl
stc
repz
lret
push
and
adc
mov
loopne
es
jns
cld
jne
into
cld
xchg
sub
cmp
xor
xchg
push
rcl
pop
mov
das
out
ret
int3
cs
push
dec
outsl
mov
cmpsl
cmp
jae
montmul
cmpsb
adcb
in
xchg
mov
and
or
mov
andl
int
clc
jl
push
lock
cmp
nop
adc
shrb
or
push
shlb
jb
stos
sub
mov
xor
sahf
mov
bnd
xchg
sbbl
ret
stos
ds
push
shl
rol
inc
mov
cmp
cmp
jns
pop
push
clc
nop
or
daa
xchg
inc
sub
movsb
out
or
nop
stc
inc
jl
mov
xor
mov
ret
pushf
loopne
jo
pop
mov
add
jl
dec
inc
pop
cwtl
or
cli
test
push
adc
mov
adc
adc
sub
xchg
call
push
test
push
and
jo
jno
xchg
pop
cmp
aam
hlt
mov
popa
cmpsb
mov
or
jl
mov
or
sbb
xor
divl
sbb
mov
cwtl
and
mov
mov
xorl
es
incl
icebp
mov
add
or
stos
jno
sub
xchg
and
xor
or
cld
sbb
sub
xchg
and
jmp
or
xor
stos
pop
test
shlb
dec
loopne
or
mov
nop
cld
or
adc
out
jmp
loop
push
fistpll
jno
jmp
rclb
bound
push
loopne
inc
fnsave
lret
sub
repnz
jns
fisubrs
inc
inc
mov
in
je
outsb
dec
mov
mov
ror
mov
and
or
popf
ret
cmc
and
pop
mov
iret
dec
xchg
les
outsb
std
rorl
or
mov
jmp
fwait
rclb
popa
mov
jne
pusha
in
and
adc
sub
xor
jle
jecxz
inc
stc
push
je
pusha
enter
lea
repz
mov
pop
roll
jp
stc
jo
add
insl
jge
xor
adc
mov
mov
test
xchg
xor
mov
or
int
and
add
push
pop
pop
fisubrl
dec
hlt
xchg
je
cmpsb
std
xchg
lock
jbe
and
mov
push
jno
aad
movsb
or
add
insb
cld
sbb
mov
cmpsl
sub
and
and
mov
fiaddl
xchg
mov
sub
push
adc
xor
push
fwait
add
sub
mov
dec
ja
iret
jbe
mov
jl
add
test
add
lock
adc
pusha
shll
in
or
xchg
sub
call
pmaxsw
sti
rorb
push
mov
add
scas
lock
arpl
imul
inc
inc
mov
mov
imul
xchg
pop
ds
hlt
pop
mov
insb
test
gs
stos
jle
rcr
inc
mov
repnz
ret
xchg
out
mov
call
xor
lods
cli
and
push
add
sub
cs
into
push
cltd
ficoml
lods
mov
ret
jp
jmp
jb
ljmp
add
jge
and
aam
aam
data16
ror
xlat
rorl
insb
out
cmp
cmp
dec
in
icebp
mov
push
mov
xchg
aad
pop
xchg
arpl
sbb
sbb
stos
xor
ret
ret
aas
inc
out
xchg
xchg
shll
jbe
xor
lret
push
push
std
pop
jecxz
sub
or
mov
popa
dec
mov
rolb
mov
add
add
mov
inc
js
test
xchg
sub
mov
icebp
scas
dec
push
xchg
rcll
or
ja,pn
sub
jbe
jp
lock
insb
mov
dec
jne
cld
mov
cmpsb
cld
clc
or
outsl
out
call
inc
cli
lcall
pop
xchg
sbb
out
xchg
leave
imull
mov
js
jno
xchg
xchg
psrlq
cld
shrb
test
xchg
nop
push
popf
pushf
mov
sbb
nop
aam
sbb
sub
test
aaa
cmpl
stc
xchg
pop
or
das
lods
jecxz
ja
jns
mov
mov
sub
and
cmp
mov
sub
inc
out
xor
out
sbbb
cmp
mov
inc
mov
in
push
push
fidivl
ds
out
or
fisubrl
adc
adc
clc
aaa
add
sbb
fnstenv
xor
cmp
cmp
pop
aam
and
lods
adc
sbb
adc
or
sahf
lods
rcll
outsb
fadds
push
push
dec
xor
out
add
dec
jnp
dec
popa
fidivrs
lea
push
mov
jns
jbe
lods
adc
dec
in
or
mov
cmp
popf
lods
clc
out
or
adc
ds
mov
xor
xor
jge
dec
lcall
inc
inc
mov
aam
dec
sti
dec
push
popa
mov
outsb
mov
lock
out
dec
push
cmp
icebp
ret
cmp
xor
insl
add
adc
sub
roll
pop
inc
add
mov
out
mov
cmpsl
mov
jnp
jecxz
add
lods
inc
xchg
mov
mov
pop
push
aas
mov
jg
cld
and
lret
or
cmp
cmp
push
sbb
sub
jo
decb
ret
cwtl
shl
xchg
notl
or
dec
inc
aam
subl
cmc
gs
jp
repz
add
sti
addr16
xor
stc
cli
add
ret
cmpsb
mov
divl
push
jecxz
je
push
into
enter
jb
cmp
and
roll
sbb
jno
cmp
movsl
shlb
sbb
iret
push
fnstcw
addr16
mov
fcomi
sub
xor
push
in
jo
inc
pop
repnz
cmp
xor
sti
movsb
sub
jb
test
add
hlt
sub
xchg
insl
bound
out
jmp
mov
dec
jo
mov
rcr
jae
not
jp
insl
sbb
dec
inc
xchg
in
pusha
mov
cld
inc
cmpb
scas
dec
mov
xchg
lret
imul
icebp
je
pop
repnz
outsl
cmp
scas
inc
imul
xchg
or
xor
jecxz
aaa
out
std
push
and
jno
dec
repnz
adc
xor
inc
jge
aam
js
outsl
push
cmp
jmp
inc
mov
and
int
not
icebp
int3
pop
cmp
cmp
lock
xor
and
mov
jecxz
adc
xor
sti
inc
pushf
jbe
fisttpl
sbb
add
insb
push
cmp
in
ja
fsts
xlat
mov
xor
movsb
and
push
mov
dec
lcall
cmp
pop
sub
push
jnp
andb
js
iret
mov
jb
and
imul
mov
dec
or
mov
inc
pusha
jno
and
repz
daa
mov
scas
xchg
gs
in
and
adc
scas
sub
pop
jno
loope
out
jmp
xor
pop
and
xor
jne
mov
fwait
orl
pop
stc
cmp
lods
xchg
cltd
adcl
dec
arpl
test
es
add
stos
out
or
add
sbb
or
stos
cmp
in
mov
and
lods
push
pushf
push
aaa
mov
mov
scas
ret
lock
add
xor
cmp
add
popa
sub
and
sbb
mov
cmp
loope
icebp
movsl
test
hlt
dec
pop
lret
inc
shl
xchg
xchg
xor
je
dec
xor
arpl
lcall
loop
cmpsl
cmp
arpl
cmp
push
jbe
lea
mov
sub
push
and
pop
faddl
loopne
inc
mov
and
dec
xchg
cmp
aas
lret
fdivl
fwait
pushf
add
xchg
mov
cld
mov
rol
push
pop
sub
insb
xchg
mov
inc
stc
sub
popa
add
sub
subb
and
mov
inc
jp
add
jp
jp
sti
adc
inc
das
xor
mov
inc
mov
and
push
addr16
test
divl
mov
fnsave
sub
stc
mov
xor
sub
scas
mov
xchg
and
repnz
insb
and
and
sub
sti
jns
subb
sbb
scas
pop
xrelease
inc
adc
sub
sub
or
xor
pop
int3
sub
add
push
jp
movsb
or
sub
dec
fcmove
sub
sub
rcr
jg
adc
movl
divl
mov
and
mov
out
ljmp
sti
and
mov
jl
sbb
mov
xchg
lods
mov
xor
stc
int
stos
lret
rorb
sbb
jl
jle
icebp
or
push
lahf
sub
or
and
xchg
or
scas
fsubl
pusha
xor
mov
in
cmp
mov
xlat
ja
pop
outsl
cmp
cmp
ljmp
cmp
pop
dec
fimull
shrl
mov
jne
int3
stc
orb
xchg
out
mov
roll
sbb
mov
imull
pop
loope
cmpl
pop
push
jle
cmpsl
into
jno
xchg
dec
or
cld
test
fdivrp
cmp
cmp
xchg
dec
xchg
sub
cld
push
ds
push
sub
mov
push
lahf
clc
pop
pop
pop
pop
xchg
movsb
mov
xchg
add
loop
popf
icebp
shl
clc
aam
or
or
sar
in
ss
dec
mov
stc
and
pop
aaa
or
lods
ret
sti
pop
sub
js
js
xor
in
cmp
mov
gs
js
decl
add
dec
cmpsl
xchg
xchg
sarl
sarl
cmp
and
stc
sti
sub
cld
sbb
lds
pop
insb
inc
mov
cmp
test
sub
inc
push
pop
mov
mov
mov
dec
cwtl
lcall
pop
out
jns
out
ljmp
arpl
and
sbb
mov
in
sub
lcall
mov
sti
sti
stc
cltd
cmc
cld
mov
sbb
xor
adc
cmp
jno
mov
imul
cld
sub
fwait
dec
cltd
out
xor
cmpsb
lods
xchg
js
clc
stos
in
xor
cmp
cmp
int
scas
pop
or
out
jecxz
cmp
inc
negl
adc
mov
pop
loop
dec
shl
add
test
jp
icebp
in
mov
dec
fistpl
cld
xor
pop
jle
inc
dec
mov
das
stc
adc
lock
movsb
mov
inc
inc
jne
scas
ret
or
push
mov
mov
scas
lret
ljmp
push
in
mov
mov
rcll
mov
sbb
mov
sti
test
mov
js
cld
mov
and
movsl
add
test
push
test
mov
or
testl
sbb
icebp
add
pop
les
mov
push
test
mov
repnz
xchg
fnstenv
xor
inc
sbb
sub
or
mov
dec
dec
ret
cmp
bts
sub
into
pop
aaa
popa
adc
or
movsl
lock
repz
dec
repz
or
add
jae
mov
mov
sti
jp
rcrl
loop
xor
adc
push
cld
mov
pop
and
pushf
mov
push
add
sbb
jmp
clc
icebp
cli
stos
push
add
ret
adc
dec
fstpt
inc
jo
cli
pop
dec
inc
scas
incl
stos
inc
cmpsl
mov
xchg
lret
or
outsb
cmpsl
loope
inc
loop
repnz
repz
sub
loop
je
dec
fimuls
in
aad
fdivrl
push
fsubrs
jns
or
sbb
rorb
and
xchg
fimull
mov
sbb
in
repz
faddl
cli
into
or
add
mov
movsl
aam
filds
test
jo
andb
sub
data16
mov
fwait
cmpsl
xchg
pop
inc
dec
cld
pop
or
dec
jge
or
repz
test
jle
stos
insb
imul
mov
or
sbb
xchg
sub
nop
push
or
jle
movsl
jnp
add
sub
dec
or
loope
loop
enter
or
leave
js
cli
sub
out
loopne
stc
xchg
cld
out
mov
xor
sbb
adc
cmp
sahf
mov
push
aam
jno
push
sarb
jb
test
andb
lcall
pop
aam
or
sti
into
pop
sub
fisubs
fimull
push
adc
cli
and
mov
dec
or
lods
inc
fsubl
cmpsb
inc
jne
call
shll
mov
test
jo
push
mov
movsb
and
cmpsb
outsl
jl
sub
dec
outsb
jmp
push
push
or
push
lods
add
mov
sub
repz
xchg
jle
push
push
rcrl
xchg
pushl
xchg
xor
or
or
xor
cmpsl
mov
jle
adc
sti
aad
fiaddl
in
or
cmpsl
sbb
push
scas
add
or
pop
pop
stc
sbb
add
movsb
mov
dec
mov
push
sub
ss
push
or
pop
sub
out
jnp
insb
sub
inc
pop
call
das
fwait
rcrl
lret
les
inc
adc
sub
mov
flds
dec
mov
mov
pop
emms
cmp
sbb
add
or
repnz
mov
mov
mov
sub
lock
dec
dec
adc
ret
lock
int
sbb
hlt
push
data16
xchg
lahf
bound
mov
setns
jnp
sar
dec
add
sub
stc
jo
and
aad
mov
inc
cmp
push
das
xor
cmp
into
cmp
dec
xchg
push
add
inc
adc
xor
rcl
cmc
rorb
fs
mov
pop
sti
ret
das
or
add
adc
or
stos
shlb
sub
leave
sti
arpl
jae
adc
pop
movsl
out
lock
repz
cld
daa
mov
inc
jb
jl
rorb
pop
idivl
repnz
xchg
call
and
mov
scas
add
popa
mov
sub
cld
xor
pushf
iret
add
sarl
jp
sub
loop
jl
mov
xchg
push
mov
xchg
imul
dec
idivb
adc
jmp
xor
fisubrl
dec
aam
pop
jecxz
cltd
push
popf
cmp
pop
movsb
pop
fcoms
pushf
adc
sub
push
ja
jne
push
nop
push
js
lret
cld
or
xor
inc
stos
hlt
xchg
subl
pop
pop
mov
icebp
inc
adc
stos
inc
sub
mov
ret
adc
xchg
cmp
mov
pop
dec
or
cld
inc
cmp
push
mov
mov
pop
push
loop
enter
inc
sarb
je
mov
pop
mov
push
lock
aad
xor
inc
add
adc
out
popa
pop
mov
pop
xor
outsl
mov
xchg
cmp
lcall
lret
ljmp
dec
xor
mov
hlt
adc
sbb
push
dec
insb
jl
inc
insb
jle
js
int3
int
sub
adc
fstpt
test
add
cmpsb
repz
mov
testl
fwait
add
sub
jns
cs
rcl
push
popa
push
add
ss
push
sbb
repnz
ja
out
mul
pushl
add
cmp
fisttpll
push
xor
adcl
cmp
bnd
xchg
mov
mov
jae
in
push
mov
jg
cmp
mov
push
shrl
dec
pop
or
inc
cmc
repz
jle
enter
lods
and
psrlw
xor
cmpsl
push
std
mov
sbb
andl
aam
and
pop
pushf
fdiv
push
and
pop
cltd
repnz
push
pop
dec
sar
dec
ss
sbb
xchg
pop
mov
ds
in
jl
stc
cmpb
sub
push
sub
aad
hlt
das
fisttps
adc
add
cmc
mulb
not
push
add
mov
or
xchg
adc
repnz
xor
sbb
mov
mov
shrl
add
ret
test
inc
jle
clc
call
inc
out
out
shll
adc
stc
mov
cli
pop
test
int3
sub
inc
cmpb
pop
jno
daa
jno
push
mov
pop
or
jp
loope
addb
inc
cmc
mov
mov
jmp
push
xor
push
mov
fbld
dec
aad
jl
fildl
push
mov
scas
pop
xor
ss
daa
xor
push
ret
xchg
and
fisubs
mov
adc
sbbl
or
std
adc
xchg
aad
aas
cwtl
inc
jne
jb
aam
out
ss
ret
imull
insb
pop
or
and
and
fnstsw
lock
movb
in
adc
cld
cmp
mov
pop
imul
adc
in
iret
and
inc
xchg
push
or
cld
mov
test
dec
adc
gs
sbb
jbe
push
aad
lea
adc
in
mov
sub
mov
mov
clc
jns
loop
jae
sbb
jnp
popa
add
push
push
add
inc
sbb
into
cmc
sub
int
imul
mov
mov
jge
sub
leave
sub
call
bound
lret
repz
and
cli
mov
pop
mov
aam
das
sub
aaa
mov
stc
adc
mov
cld
and
jne
repz
xor
lret
push
cmc
mov
inc
loopne
xor
adc
mov
stos
lret
in
mov
shl
pop
and
pushf
push
insl
outsb
fisttps
pop
xor
jg
mov
mov
ror
test
jae
in
xchg
or
pop
sbb
cld
mov
sbb
xchg
push
sti
inc
data16
pmaddwd
adc
dec
test
pop
out
mov
cmp
jns
hlt
or
cld
adc
cmp
jo
sub
sbb
std
jmp
setnp
and
loop
mov
pop
inc
pop
mov
mov
jae
popf
cmp
sti
cmpl
mov
lock
aam
jne
stc
stos
ret
sub
sub
std
xor
sbb
xchg
inc
aas
pop
in
dec
fdivrp
push
jno
inc
pop
mov
and
mov
jbe
cmp
xlat
add
repnz
adcl
cmc
out
push
out
jl
je
dec
rclb
mov
stos
ret
jo
push
rclb
popf
jecxz
lods
xor
pushl
lahf
int
sub
sbb
mov
sub
inc
mov
cmpsl
jne
js
inc
fs
lcall
repnz
outsb
aas
inc
mov
sbb
and
xor
sub
bnd
rorb
push
lds
mov
ds
popa
cmc
push
sub
mov
fistps
xlat
adc
movsl
rorb
push
sub
adc
cld
mov
cmp
xor
lcall
hlt
lret
add
inc
and
sbb
shr
mov
xchg
or
xlat
js
pop
adc
scas
outsb
lcall
jg
push
sbb
jne
in
mov
test
test
jo
js
dec
sahf
xor
mov
sub
dec
jb
dec
stc
nop
adc
movsl
mov
aam
lock
add
cmp
repz
pop
inc
jbe
or
pop
mov
push
in
sbb
mov
aad
xchg
lret
das
stos
fildl
mov
add
push
mov
clc
or
jne
fs
sub
dec
mov
leave
xor
inc
imulb
or
cmpsl
fcmovb
mov
mov
arpl
push
add
sub
or
test
pop
jb
xchg
mov
mov
jp
add
cmp
lods
rorb
cmp
jns
cmp
pop
sub
lods
popa
fs
mov
jp
mov
pop
or
addr16
out
jbe
andl
mov
rcll
cli
or
fdiv
iret
push
sti
mov
xlat
imul
xor
jns
jmp
cli
sarb
or
sbb
push
repnz
add
iret
push
adc
or
nop
sbb
je
inc
es
sub
cs
fisubrl
sbb
ljmp
mov
xor
push
insb
pop
test
mov
pop
or
aad
clc
adcb
stos
add
sbb
inc
jb
mov
gs
fmull
adc
pushf
test
out
jecxz
xchg
movsl
aaa
mov
push
add
mov
clc
xlat
int
sbb
push
adc
or
fwait
and
dec
mov
aaa
hlt
or
jns
mov
pusha
mov
sahf
outsb
xor
add
mov
cmpsl
hlt
sbb
out
or
addl
or
popf
add
outsb
scas
mov
mov
pop
mov
push
sub
adc
sub
lds
push
movsl
inc
xchg
add
push
loopne
adc
jo
cli
mov
mov
xor
pusha
shll
sub
push
or
into
stos
enter
sub
testl
bound
movsb
pop
addr16
push
repz
repnz
out
ja
andl
cmc
cmp
inc
loop
push
test
jo
cmp
and
daa
pop
sti
cmp
rcll
add
cld
pop
mov
stc
pop
subb
cwtl
cli
int3
pop
sub
and
test
outsb
add
xchg
test
in
out
cmc
adc
fld
mov
mov
and
dec
repz
jo
cs
adc
movb
adc
into
pop
clc
and
lcall
mov
sahf
and
test
xchg
xor
and
rol
sub
imul
subb
out
clc
or
sub
lods
pop
insb
jg
clc
jl
test
repnz
dec
mov
mov
loop
ljmp
mov
sub
mov
sti
push
jmp
mov
dec
mov
lret
mov
mov
arpl
or
sub
lahf
inc
push
stc
aas
sti
and
mov
ss
sbb
daa
std
bound
pop
stos
and
jle
js
sahf
loopne
jp
sub
dec
sbb
sbb
cmp
sbb
jp
clc
sbb
mov
hlt
add
sbb
dec
aam
jbe
lret
xor
pop
dec
mov
iret
mov
mov
in
pop
and
xor
sarl
jmp
js
xchg
movsb
cmpsb
pop
cwtl
xchg
mov
add
cmc
out
adc
inc
cmp
test
mov
jle
and
popl
insl
in
out
adc
stos
in
pop
pop
cmp
inc
rorb
or
sub
repz
mov
lahf
xchg
mov
sub
cmp
hlt
test
sub
ficoml
scas
sahf
jns
popf
and
sbb
or
jp
fstps
popa
pusha
jmp
pop
lea
or
into
mov
in
mov
lock
adc
test
aaa
repz
not
loope
mov
ja
sti
daa
jae
stos
cwtl
aad
cmpsb
les
imul
mov
inc
insb
pusha
pop
rep
iret
jo
addr16
add
mov
xor
call
dec
mov
roll
into
add
or
xor
cs
add
xchg
nop
stc
or
jns
add
imul
push
push
push
or
add
hlt
repz
cld
push
xchg
fstpt
int
xchg
in
ljmp
push
xor
ret
pop
xor
adc
cld
leave
sub
push
sti
or
xor
inc
xchg
push
pop
in
sub
sti
mov
addr16
cmpsl
rol
jno
xchg
mov
lods
int3
es
xchg
out
mov
lea
sub
push
jp
xchg
loop
adc
inc
xchg
into
xchg
mov
dec
icebp
into
out
aad
inc
sti
pop
sub
add
or
and
ds
adc
lret
ljmp
iret
cmp
rcll
pop
push
sub
mov
test
add
lea
cmp
pop
cld
pop
jo
insl
mov
cmp
sarb
popf
sub
fwait
jae
sti
les
sbb
lock
mov
addl
lock
push
cmp
repz
cld
icebp
and
mov
mov
cmp
in
push
sbb
pop
ja
popa
cld
xchg
sbb
cmp
hlt
pop
jnp
mov
push
add
or
cmp
fcmove
dec
fstps
aas
push
adc
sub
and
or
popa
cmp
jnp
mov
and
sub
xor
ja
or
fsubrl
push
mov
add
mov
pop
mov
mov
out
orb
pop
fcoml
mov
or
add
inc
xchg
lock
movsb
xor
lds
rcrl
daa
les
bound
arpl
aas
dec
sbb
add
xchg
loope
insl
lods
or
mov
cli
je
xor
add
inc
pop
push
push
loope
movb
jo
sub
adc
adc
cld
sub
frstor
xorl
out
xor
adc
aad
idivl
cmp
mov
icebp
lods
insl
xor
push
or
cmp
imul
mov
mov
das
add
ds
pop
push
leave
dec
inc
loop
mov
repnz
mov
pop
stc
mov
pop
icebp
push
or
jg
cmp
ja
clc
xchg
adc
sub
adc
jns
sbb
sbb
dec
xchg
xchg
cmp
jg
test
add
out
lds
cld
movsl
mov
jg
addr16
and
add
sbb
cld
stc
subl
fcomip
cs
dec
sub
and
or
rolb
rorb
cwtl
xchg
jns
sbb
movsb
or
pushaw
mov
pop
add
cld
push
in
lods
mov
sbbl
adc
ljmp
fimull
adc
daa
stc
cld
mov
cmpsb
addl
idivb
daa
enter
xor
lret
cmp
xor
insb
jmp
sub
xchg
fstpt
cmpsb
sbb
xchg
jmp
mov
or
insb
leave
jg
xor
jnp
test
dec
ficoml
jmp
pop
nop
sub
jl
pop
js
dec
or
sbb
sarl
fs
idivl
fwait
out
loope
sbb
into
ljmp
cwtl
nop
adc
inc
pop
xor
pushf
push
int
cmpsb
jmp
shrl
sub
ds
sti
aam
scas
push
mov
push
inc
push
cmp
out
jmp
popa
inc
push
jns
rcrl
push
mov
jne
insb
mov
stos
jbe
sti
repnz
jmp
dec
add
pop
in
sub
dec
movnti
or
cmpsl
out
inc
pop
cmc
add
repz
jb
push
mov
lahf
or
push
add
or
mov
std
idivl
pushf
int
or
lret
out
dec
sbb
aam
out
lods
xchg
rolb
mov
mov
jne
cmp
adcl
out
cmp
sbb
sub
cmc
pushl
jno
xor
cmp
mov
sub
sbb
mov
aaa
aam
js
add
cmp
jl
mov
lret
and
jo
lods
or
lret
xor
xor
in
inc
dec
out
andl
mov
sbb
add
inc
pop
adc
filds
or
ljmp
push
cmp
or
rclb
jbe
mov
sahf
push
or
mov
cli
incl
mov
or
jl
add
jno
push
mov
mov
pop
push
mov
ret
div
adc
loop
sub
add
mov
jp
mov
cld
rcr
or
ljmp
adc
shlb
push
or
add
pop
lock
outsl
imul
sbb
xchg
sti
inc
aas
insl
lods
mov
insl
js
test
gs
or
lret
pushf
mov
in
mov
repz
push
push
jecxz
mov
imul
cmp
adc
push
add
cld
mov
inc
fldenv
stos
jmp
les
mov
ljmp
inc
pop
or
mov
xor
hlt
sub
add
mov
fmull
sub
add
push
leave
and
mov
xchg
sub
dec
out
xor
inc
ds
shl
cmp
js
fstpt
int
jb
fisttpl
hlt
dec
sar
add
xchg
xor
mov
pop
ja
push
jo
push
add
inc
dec
aas
cltd
sti
repz
fnstenv
xor
sar
push
xor
lock
mov
out
ss
pop
loope
in
outsb
mov
adc
inc
cli
flds
and
inc
nop
pop
sti
lret
mov
fcomps
adc
nop
ret
pop
jne
jg
nop
or
jg
and
xor
loop
jmp
cmpsb
inc
call
repz
xchg
sbb
ds
and
adc
mov
into
xchg
incl
cld
jl
cmpsb
popl
lahf
cmpsb
push
adc
sbb
push
shlb
sbb
leave
mov
add
xchg
or
xchg
lods
pop
add
mov
mov
mov
mov
xchg
negb
mov
push
adc
cld
xor
jno
dec
enter
lock
push
popa
sbbb
lock
dec
aaa
movsl
inc
mov
push
mov
repz
clc
jo
shlb
push
lds
dec
add
gs
add
dec
popa
fs
xorl
ljmp
sbb
sub
lea
mov
repz
inc
fsts
mov
nop
or
icebp
sub
xlat
push
ffreep
sub
push
or
mov
scas
lea
div
cld
into
xor
or
nop
stc
or
dec
and
into
mov
add
insl
cld
jl
outsl
adc
or
cld
cs
leave
jp
mov
inc
xor
repz
int
add
mov
mov
jmp
jge
cli
mov
push
mov
out
out
inc
adc
cmp
je
test
mov
loope
out
push
clc
cmp
mov
divb
mov
shl
xchg
push
push
rclb
repnz
push
repnz
inc
mov
inc
inc
jecxz
xchg
jno
mulb
mov
inc
popf
lret
sub
mov
pop
adc
sub
enter
sbb
lret
movsb
and
imul
sbb
mov
push
divl
mov
in
fisubs
rolb
lret
imull
jo
fidivrs
xor
out
sbb
jne
nop
add
in
adc
sub
lret
sarl
push
add
sti
stc
ret
mov
push
imul
loope
jle
aad
xchg
xchg
aad
jns
mov
and
ja
xor
sub
cmp
add
clc
mov
cwtl
jmp
mov
mov
add
jge
adc
add
push
mov
sti
cmpsl
mov
stc
adcl
in
fwait
jo
sub
mov
push
mov
stc
rcrl
pop
mov
xor
and
lods
adc
call
sbb
cmpl
scas
or
or
fsubr
fistl
sub
xchg
cmp
sbb
fcmovnbe
aam
enter
lcall
popf
adc
add
push
push
xchg
pop
jo
sub
or
push
aaa
sub
xchg
mov
jb
xchg
pop
sub
js
andb
xchg
stc
clc
xchg
lock
andb
cld
repnz
arpl
push
pop
jb
push
push
or
out
inc
int
xchg
cmp
and
mov
aas
es
bound
movsb
dec
test
or
or
add
cmpsb
or
cli
stos
mov
sarb
xor
popa
mov
xor
sbb
pop
mov
and
hlt
stc
or
imul
mov
push
cs
shll
addr16
mov
add
sub
outsb
test
insl
jbe
inc
and
or
or
pop
mov
sub
inc
dec
shr
aad
xor
cld
aam
std
call
arpl
cmp
addr16
out
or
jo
shll
sti
pop
mov
jno
sub
jb
mov
inc
stos
push
and
mov
pusha
movsb
aaa
jl
or
ror
dec
add
sarb
or
sub
repnz
xchg
add
jnp
jbe
shlb
inc
shl
int
ja
mov
ret
and
mov
inc
jecxz
neg
cwtl
sub
stos
das
sbb
xlat
jne
sbb
xor
add
icebp
xor
jb
vandps
mov
push
into
xchg
lea
lahf
mov
inc
sahf
fidivrs
sub
sti
or
xchg
xchg
cmpsb
stos
inc
xchg
or
js
xchg
pop
out
or
adcb
dec
loop
sub
idiv
push
mov
fwait
inc
adc
and
test
sbb
ja
adc
and
subl
mov
bound
xchg
sbb
jne
pop
js
jb
test
sarb
incb
cltd
or
pop
jo
loopne
orl
jle
pop
ljmp
adcb
dec
mov
fildl
adc
inc
popf
sti
sti
sahf
imulb
cwtl
jns
movsb
aaa
push
and
pop
jne
jno
lcall
jp
shrl
decl
mov
lea
scas
inc
iret
out
test
cmpsl
mov
mov
int
or
testb
lea
sub
mov
pusha
pushf
fbld
mov
lock
jbe
lods
add
jnp
sti
add
cmp
add
mov
dec
insb
sbb
gs
adcb
push
jae
xor
cmc
dec
push
sar
add
dec
jns
cwtl
xor
mov
data16
sbb
nop
nop
movsb
xchg
mov
and
sbb
sbb
mov
das
dec
or
pop
imul
and
js
inc
push
repz
jne
sti
in
cmp
ret
and
cld
pop
popa
cmp
xor
inc
or
or
adc
inc
repz
xor
push
sbb
scas
in
aad
xor
xchg
lods
and
add
aam
aas
jecxz,pn
mov
lods
icebp
jmp
or
sub
pop
int3
arpl
call
arpl
fmull
movsl
or
or
pop
jp
int3
test
loop
dec
inc
adc
mov
push
cwtl
mov
ret
adc
int3
popw
dec
bound
sub
xchg
fdiv
xlat
fisubs
dec
cmp
mov
jmp
incl
sub
push
cmp
dec
pop
sti
dec
shlb
mov
out
mov
jo
mov
leave
sahf
andl
int3
dec
cmpsl
adc
cld
shrb
lods
push
fs
fbstp
mov
push
add
jb
jo
or
cld
push
sub
mov
and
addb
or
dec
das
repz
enterw
jne
cmpsl
pop
fidivrs
ja
dec
sub
or
push
mov
test
push
xor
rep
sbb
clc
test
or
aad
xchg
xchg
add
cld
mov
rclb
mov
mov
mov
cs
icebp
adc
outsl
sbb
scas
xor
or
or
out
mov
mov
insl
fistpl
icebp
dec
or
xchg
or
testl
lods
imul
jb
xor
movsb
sbb
dec
or
cld
lahf
xchg
jb
lea
jnp
add
xchg
or
mov
fldenv
dec
gs
shl
test
xor
or
mov
inc
and
or
add
mov
fbld
outsb
call
cs
sahf
jmp
lea
mov
mov
sub
mov
and
jp
dec
pop
repnz
xor
cld
adc
lcall
or
movsl
mov
mov
or
sbb
int3
ss
fsubrs
mov
cmp
dec
dec
sbb
inc
xor
sti
pop
ljmp
mov
xor
imul
add
movsl
xchg
add
xor
aam
sbb
mov
insb
movsl
lret
repz
or
out
add
xchg
nop
jae
ret
mov
not
cmp
pop
aad
lret
jge
mov
and
xor
sbb
adc
test
movsb
imul
loop
hlt
ret
aad
scas
mov
adc
cwtl
fidivl
push
add
mov
scas
inc
gs
jns
or
mov
shlb
mov
push
outsb
xor
jo
or
call
cli
test
je
pushl
and
popf
adc
cmpsl
jg
inc
pop
lahf
and
xchg
mov
into
xorl
add
cld
sbb
or
mov
mov
scas
jp
sbb
or
roll
test
mov
call
jl
aad
pusha
nop
test
lea
jecxz
pop
aas
cmp
les
add
jo
mov
mov
cmc
sbb
sub
adc
mov
inc
push
cmp
mov
push
arpl
inc
repnz
sti
and
test
shlb
fiaddl
jb
dec
lods
push
stos
inc
sub
push
pop
xchg
inc
cmc
sub
repnz
jnp
imul
pop
pushf
mov
mov
pop
scas
add
jae
aad
mov
lods
sbb
aaa
lods
xchg
sbb
inc
fnsave
test
push
addr16
fistl
mov
push
sbb
mov
jae
clc
nop
loop
gs
out
filds
cmp
xor
inc
dec
mov
imul
insb
mov
scas
outsb
fidivs
adc
pop
ds
mov
adc
xor
testb
int3
rclb
xchg
mov
and
lret
cmp
popa
dec
mov
push
sub
shrl
mov
orb
jo
fdivrl
out
enter
js
jb
push
mov
xchg
out
or
fwait
mov
xorb
lock
push
hlt
cwtl
incb
push
push
cld
sbbb
mov
in
lret
icebp
push
dec
imul
push
sahf
inc
push
repz
daa
mov
test
lret
ret
mov
incl
cld
xlat
sub
enter
in
nop
adcb
xchg
lcall
ljmp
dec
and
cld
es
pop
cmp
sbb
insb
jnp
jp
ret
push
popa
xchg
scas
je
and
xchg
pop
cs
sub
mov
inc
lret
fldl
jecxz
dec
dec
xlat
inc
and
jne
sti
add
loopne
jne
mov
cmp
push
aad
lret
icebp
cmp
lods
pop
push
ret
les
rorb
out
faddl
aad
mov
dec
jo
adc
cmp
xchg
lret
fisubs
nop
push
pop
or
mov
cld
fdivrs
adc
stos
pop
in
fcomi
add
cmp
cmc
pop
lock
cli
cwtl
push
adc
js
mov
pop
add
orw
or
mov
jge
sub
pop
xor
and
iret
icebp
push
jmp
xchg
js
inc
xchg
mov
jmp
push
jo
std
pop
xor
aam
and
inc
inc
stc
push
xor
xor
in
rol
add
jno
sti
daa
pop
pop
mov
lret
bswap
ljmp
mov
out
lock
repnz
cli
mov
jb
lds
mov
push
pop
jno
dec
adc
ja
jg
repnz
or
arpl
push
push
pop
and
add
stos
mov
sub
mov
cmpsb
xor
cmp
jbe
dec
pop
lds
jno
inc
in
or
pushf
jae
inc
inc
stos
pop
pop
and
dec
hlt
lret
iret
dec
mov
cmp
pusha
jl
adc
lods
adc
icebp
push
jae
mov
xchg
lea
in
push
dec
mov
jmp
jmp
xor
js
or
mov
pushf
fcmovnbe
ret
test
xchg
sub
adc
add
outsb
in
out
and
pop
dec
gs
adc
dec
pop
ja
or
jo
mov
das
idiv
cmp
xor
mov
add
dec
lea
mov
sub
daa
mov
push
loopne
int3
std
jp
sbb
fwait
inc
and
repz
sub
loope
mov
or
cld
add
imul
divl
fwait
cmpsl
testb
rcrb
ss
inc
sub
sub
xor
test
mov
cmpb
fstps
adc
mov
in
jns
out
add
sub
daa
arpl
fidivrl
mov
sbb
mov
mov
xorb
nop
cld
or
lea
inc
in
sub
jl
dec
mov
jo
sti
fst
mov
sub
gs
mov
dec
daa
and
sbb
es
push
das
add
push
aam
lsl
cli
pop
pop
cli
repz
fidivs
lret
or
stos
add
sub
and
xchg
cmp
pop
dec
fisubrs
stc
lods
mov
rcrb
or
lret
mov
rclb
jo
xchg
push
adc
or
pop
xor
cli
call
test
cld
filds
sub
sub
icebp
or
hlt
xor
and
inc
push
cmc
pop
ja
lods
cmp
inc
adc
ret
rcrb
xor
add
dec
icebp
jns
jecxz
push
addr16
adc
xor
shrb
sti
out
cld
mov
mov
leave
inc
xchg
pop
mov
fstps
add
lea
test
movsl
cld
ret
lods
fimuls
into
mov
in
int
and
inc
cmp
xor
jbe
jl
mov
call
clc
xchg
xor
jl
test
filds
inc
out
push
rol
pop
loope
repz
push
test
cld
or
xchg
cmp
shl
ss
push
sub
cmc
cwtl
int
inc
repnz
push
je
nop
jecxz
adc
cmp
fisttpll
sbb
add
out
pop
push
or
flds
jge
xchg
int
sbb
xchg
xchg
dec
mov
push
movsb
cwtl
shrl
inc
xorl
add
xchg
lret
dec
jo
mull
inc
push
mov
jecxz
cld
sub
pop
dec
out
and
or
jae
or
lret
mov
mov
fcoms
and
sub
push
mov
pop
sub
sarl
pop
arpl
insl
push
div
loop
pop
icebp
xor
xchg
jge
decb
add
sti
mov
aam
hlt
pop
push
sbb
nop
lods
shl
dec
and
imul
stc
test
je
add
sbb
xchg
mov
adc
in
fsincos
int3
sahf
test
sbb
mov
sahf
dec
xchg
adc
ljmp
xchg
xor
cld
clc
sbb
xor
push
and
mov
add
sub
fsubs
out
push
jbe
jne
xorb
or
rorb
shl
and
or
mov
lods
popl
mov
mov
sbb
jecxz
push
xor
mov
aad
aas
jp
sbb
sbb
fstpl
negl
test
mov
pop
and
fwait
sub
testl
sbb
jne
pop
lock
push
test
or
dec
lods
sahf
cmp
or
mov
push
movsb
sub
addr16
or
jno
sahf
mov
or
leave
sti
cld
aad
aam
cmp
fnsave
sub
insb
idivl
adc
inc
adcl
xor
jb
idivl
fnstcw
and
cmpsl
outsl
mov
inc
or
xor
adc
jp
fcoml
into
icebp
jmp
popa
aam
loope
idiv
jmp
aad
ds
je
push
iret
popa
or
movsb
adc
add
aam
inc
ss
popa
daa
jecxz
mov
mov
push
inc
push
popf
fsubs
insl
jnp
push
scas
shl
mov
push
leave
mov
outsb
das
mov
hlt
inc
ret
lea
push
iret
popa
inc
mov
fs
sub
shlb
sub
ficomps
mov
das
push
fimull
jl
mov
scas
inc
xchg
lcall
add
xchg
mov
jb
jle
and
test
jmp
nop
ds
mull
insl
or
adc
idiv
lret
dec
and
mov
inc
adc
cmp
pop
mov
jno
push
ret
addr16
mov
adc
jb
stos
add
add
mov
fstps
jno
jp
jo
hlt
push
clc
gs
cmp
or
xor
stc
sub
or
adc
addb
fstpt
pop
xchg
idiv
insl
in
stos
dec
lahf
add
xlat
cld
cmp
cmpsb
jl
out
cmc
jp
sbb
inc
inc
xor
push
push
push
pop
jae
dec
fs
or
jg
and
in
frstor
inc
sub
outsb
mov
mov
popa
jbe
aad
adc
dec
into
filds
scas
inc
and
je
sbb
mov
and
das
movsb
and
sbb
shl
cmpl
sub
cwtl
and
test
daa
std
fsubrp
push
outsb
cmp
ljmp
jae
adc
cmc
inc
push
or
popa
pop
mov
sbb
cvtps2pi
cli
fwait
and
rorl
pop
push
inc
dec
pop
and
pop
xor
call
test
or
mov
add
ds
repz
add
pop
push
outsl
mov
jecxz
jo
notl
mov
push
enter
js
xchg
fs
imul
pushf
lds
sbb
pop
fsubs
rorl
adc
adc
and
or
es
jecxz
jl
cmp
mov
dec
xor
inc
dec
js
inc
dec
scas
rcrb
jae
fwait
ret
jno
inc
xor
orl
adc
mov
mov
pop
inc
sub
sub
mov
xorl
sub
mov
or
sub
adc
neg
loop
xchg
sub
mov
jbe
fwait
cld
xor
pop
enter
mov
sub
sub
arpl
add
push
cmp
cli
xchg
dec
mov
add
fildl
stos
stc
loop
leave
cmpsl
outsb
add
pop
sub
lods
mov
repz
sbb
jbe
stos
out
cmp
pusha
incl
mov
inc
xor
clc
inc
mov
add
or
in
into
movsl
xor
xchg
jge
and
jle
jmp
movsb
roll
stos
gs
xchg
cmp
push
sbb
pop
inc
dec
xlat
or
lds
mov
cmc
lods
add
add
jp
nop
cmpsl
pop
insb
daa
mov
jbe
int
testb
jg
pop
add
mov
outsb
jp
arpl
test
mov
int
lock
call
cmpsb
and
stc
adc
shlb
lcall
sbb
testb
sbb
add
cmpsl
adc
shl
loope
pop
jecxz
roll
divb
and
mov
jg
test
or
push
push
xchg
push
decl
das
xchg
xchg
and
out
add
xor
pop
sbb
mov
cs
push
scas
mov
jae
mov
cld
pop
mov
xchg
and
or
jecxz
test
idiv
inc
mov
dec
xchg
outsb
add
das
push
adc
jns
cmc
push
cmp
pop
es
cwtl
lock
cmp
int3
lret
mov
mov
inc
pop
mov
scas
push
popa
int
jno
fsubl
sub
inc
add
mov
xorl
jecxz
pop
das
cmp
push
inc
push
mov
nop
inc
push
jo
dec
or
sbb
xor
push
ljmp
loopne
mov
lea
add
add
popa
and
jae
out
movsb
repz
add
leave
inc
repz
and
sub
inc
mov
mov
add
dec
adc
sub
daa
pop
dec
aam
pop
xor
rorl
into
cli
cmpsb
orb
out
stos
and
loope
sbb
decb
out
cltd
lock
hlt
lea
daa
jno
fsts
hlt
lret
xchg
gs
mov
dec
mov
sub
sbb
arpl
sub
cld
push
and
dec
xchg
shll
fcomps
loop
xor
xchg
les
and
jns
adc
mov
pop
cmp
add
dec
cmpsl
pop
xchg
cmp
sub
test
add
pop
dec
into
or
push
add
cmpsb
and
loope
mov
pusha
fistps
adc
ja
leave
xchg
push
sbb
inc
fdivrl
adc
cmp
xchg
out
faddl
stos
imul
out
fcmovnu
push
jnp
push
or
push
shlb
add
mov
outsl
mov
stc
repz
xlat
mov
inc
or
rcll
sti
lahf
repnz
xchg
icebp
ja
je
lds
pop
push
or
xchg
dec
mov
jg
cmc
jle
popf
mov
jbe
loopne
popl
jle
push
sub
sub
iret
aam
inc
lret
rcll
and
dec
fs
add
inc
aaa
cmp
lods
popa
inc
cld
sbb
ljmp
imul
mull
dec
pop
xchg
repnz
add
dec
or
xor
fs
dec
mov
xor
subb
mov
out
push
jp
push
push
xor
adc
icebp
inc
std
mov
xchg
repnz
xor
add
cmp
sub
jo
push
popa
lahf
out
adc
int
cmp
es
push
cmc
dec
call
fildl
adc
ret
fisttps
add
cmc
daa
popa
js
or
mov
add
nop
sti
lcall
push
cld
inc
andb
ss
cmp
mov
push
or
bnd
jecxz
xor
scas
hlt
dec
jl
inc
sub
cld
std
into
popa
inc
and
pop
nop
mov
lcall
xchg
in
cwtl
mov
add
xchg
push
or
mov
pop
pop
inc
jo
cmp
adc
inc
cwtl
xor
sbb
dec
ret
mov
repz
dec
xchg
test
sbb
inc
out
jge
xchg
and
lretw
add
mov
push
adc
cli
call
and
std
sbb
stos
inc
adc
sbbb
ret
ret
adc
cwtl
sahf
xchg
xchg
mov
pop
pop
jno
mov
les
xor
cs
jl
mov
das
out
rorb
xchg
sti
mov
dec
aad
ds
sgdtl
add
mov
stos
inc
sub
and
mov
mov
sub
mov
sub
or
movsb
dec
ljmp
sub
sbb
mov
and
and
imul
daa
inc
test
outsb
dec
mov
jg
add
pop
gs
cmp
jo
sbb
orb
lods
jne
jo
arpl
test
inc
sub
in
mov
add
mov
inc
imul
cmp
mov
mov
adc
imul
mov
xor
loopne
sahf
jl
aad
outsl
insl
cmp
or
cld
and
xchg
inc
fstpt
cmpsb
in
ret
lock
imul
pop
push
sub
ds
out
inc
or
pusha
cmp
adc
and
jmp
mov
jp
and
ret
ljmp
mov
and
adc
icebp
or
repnz
sbb
jecxz
pushf
pop
pop
iret
fildll
or
testb
out
sbb
jns
push
rcll
js
push
test
pusha
repnz
push
sbb
ljmp
add
aas
addl
loopne
mov
xchg
stos
mov
dec
popf
mov
mov
out
push
idiv
pop
jg
xor
or
lea
xorl
xchg
xchg
xor
xchg
sar
push
adc
pop
stos
inc
iret
dec
adc
shlb
mov
clc
cmp
ja
addl
adc
push
mov
fisttps
pop
adc
popa
sbb
sub
inc
push
adc
fsubrl
adc
loope
and
adc
cmp
mov
mov
jno
jp
pop
test
mov
add
rorb
std
mov
dec
fcmovnbe
add
jo
push
push
sub
or
call
and
push
mov
xor
jb
sti
nop
jmp
xchg
inc
sbb
jns
xchg
fucomp
xchg
jecxz
pop
add
repnz
push
cmc
fnsave
neg
jb
mov
adc
pop
or
mov
clc
add
adc
push
mov
cmp
orb
jno
jle
je
inc
add
mov
popl
add
and
pop
sti
lcall
cmpsl
orb
add
out
sbb
sub
xchg
enter
cmp
icebp
sub
pop
adc
mov
js
push
xor
sbb
mov
repnz
sbb
add
adc
pop
fwait
add
cmp
sub
in
mov
je
das
test
imul
fiaddl
dec
fdivl
test
jl
aas
sbb
imul
in
mov
or
push
js
sbb
cmpb
xchg
insl
push
xor
jns
iret
and
inc
or
adc
jp
adc
sbb
cmpsl
xor
mov
jp
mov
or
fstps
inc
jnp
xor
je
movl
imul
fsubl
xchg
js
lret
mov
sti
jns
cli
rcll
add
push
mov
dec
add
adc
lock
or
push
or
cwtl
mov
insl
leave
add
out
out
cmp
repnz
jno
mov
mov
in
xor
sbb
push
jae
nop
movsb
add
testl
sbb
out
mov
syscall
movl
jecxz
call
mov
icebp
aad
xchg
out
adc
mov
jo
mov
and
insl
xchg
sahf
icebp
cmpsl
pop
insb
push
int
scas
jno
mov
lret
xor
mov
daa
cmpsl
add
mov
push
xchg
ret
sub
jg
add
push
cmc
pop
or
jne
inc
insl
and
repnz
cmpsb
cltd
xchg
push
push
jp
dec
adc
insb
std
repnz
mov
lea
addl
dec
and
dec
xor
mov
idivb
insl
lods
incb
jae
mov
push
insb
testl
add
je
std
arpl
stc
repnz
jge
out
push
mov
or
cmp
adc
lahf
push
clc
cmc
negl
daa
adcl
or
jo
cmovae
and
pop
jno
jecxz
xor
das
repz
jg
cmpsl
insb
insl
or
push
iret
ljmp
nop
icebp
insl
jmp
pushf
jno
jne
mov
mov
sub
push
repnz
push
sub
cmp
jle
stc
insl
sbb
idivl
inc
scas
repz
jmp
out
test
stc
iret
jp
push
inc
punpckhwd
or
push
cli
repz
dec
add
jecxz
js
add
mov
pop
repnz
sbb
pcmpgtd
std
psubq
cltd
mov
sub
dec
jns
sarb
pop
aam
jo
outsl
inc
test
lea
add
mov
or
decl
push
and
pop
sub
sub
es
sbb
dec
push
jb
test
xor
xor
push
xor
shlb
jle
pop
push
jns
das
and
imul
leave
jg
ss
add
sub
loop
movsb
jle
or
push
aas
sti
push
cmp
inc
sbb
cli
cvtps2pd
adcl
je
cmc
push
inc
mov
clc
xor
mov
push
inc
and
orb
ret
cli
mov
jno
cwtl
xchg
lret
sbb
mull
mov
repz
and
xor
pop
mov
lock
adc
xor
adc
pop
cmpsb
loope
inc
and
or
subl
in
jle
push
lock
jmp
cmp
aam
add
shll
pop
xchg
cmc
nop
push
pushf
push
sub
jmp
add
clc
add
testl
and
push
aaa
cmp
push
es
sub
jno
jmp
repnz
pop
and
addr16
or
sbb
xchg
call
mov
inc
pop
xor
fnstsw
cli
daa
or
addb
icebp
xchg
sbb
push
add
inc
mov
mov
and
stc
push
mov
jo
ret
cli
sbb
fwait
jae
fists
mov
or
pop
push
in
pop
lods
inc
add
cwtl
jmp
adc
or
sbb
cld
inc
add
jae
popf
inc
outsb
add
sub
jle
sti
mov
int3
loop
sub
add
add
mov
ss
push
test
icebp
fs
cmc
cmp
jl
repnz
add
repnz
xchg
addr16
jb
jg
iret
xchg
cwtl
cli
push
fidivrs
dec
clc
mov
and
fstpl
mov
cli
icebp
mov
lods
hlt
xor
clc
inc
and
adc
jge
xor
pop
mov
add
push
push
xorb
notl
or
repnz
lods
and
clc
mov
mov
cli
orb
jb
or
jp
sti
adc
push
cmpl
xchg
dec
xrelease
fdivrp
jns
mov
into
test
ret
sbb
aaa
mov
add
or
test
jne
jns
mov
sub
stc
add
sarl
jmp
cltd
jecxz
fistl
xor
xorb
xlat
pusha
jp
add
xor
ret
sbb
add
es
mov
cs
mov
test
clc
pop
mov
fisttpll
aam
ds
into
fcomip
lret
clc
js
in
add
dec
or
cmp
inc
ficoms
imulb
sub
sti
mov
call
int3
dec
nop
filds
sti
mov
mov
xor
jnp
xchg
ret
cmp
push
xor
or
mov
mov
imul
dec
test
in
fwait
mov
pop
sub
and
mov
add
jns
mov
pop
jg
and
icebp
xor
xor
shl
stc
xor
or
fnsave
enter
and
add
xchg
xor
pop
xor
mov
jnp
inc
out
add
sbb
jno
xlat
ret
mov
xchg
xchg
or
xor
cmp
xor
or
movsl
adcl
jbe
adc
or
add
sahf
repz
pusha
dec
dec
xrelease
xor
daa
das
inc
mov
xor
outsb
decb
or
cltd
idivl
push
mov
cmc
scas
bnd
xchg
hlt
or
dec
add
fcompl
jl
add
mov
push
jae
mov
dec
and
iret
xlat
cmc
jecxz
cs
fsqrt
sahf
xchg
fldt
clc
adc
loope
and
daa
or
add
xchg
sub
or
add
cmc
sti
or
mov
andl
adc
je
dec
std
repz
fldcw
mov
ljmp
icebp
xchg
mov
aas
cmp
jg
xor
adc
jns
xlat
sbb
pop
mov
stos
fildl
push
push
int
sub
sbb
cwtl
pop
jnp
lcall
jb
pop
jno
mov
dec
in
aas
mov
pop
adc
pop
pop
pusha
jo
jmp
pop
or
add
fs
and
std
test
inc
dec
cmp
add
cli
repz
xchg
sti
jg
pop
or
add
inc
xchg
sub
add
pushf
movsb
or
sahf
mov
add
icebp
fs
cmpl
add
out
lds
add
xchg
das
cmpb
jbe
push
clc
cmc
out
jno,pn
loop
test
xor
sbb
push
dec
adc
into
pusha
idivb
xor
xchg
mov
stc
ficompl
test
call
jmp
mov
adc
lds
and
push
mov
aam
into
clc
cli
lea
fcmovnbe
lods
lret
in
mov
frstor
divb
dec
dec
clc
pop
lods
jle
mov
dec
pop
jle
or
lea
xchg
daa
push
xorl
std
addps
repz
addb
mov
lret
cltd
repnz
clc
std
adc
pshufw
cli
negl
inc
mov
clc
mov
test
mov
lret
jecxz
mov
mulb
pushf
data16
cmp
adc
cmc
leave
push
adc
pop
arpl
xor
adc
loop
sti
imul
insb
orl
testl
pop
or
clc
repz
add
mov
popl
push
cmovnp
xchg
jo,pt
fcompl
sbb
sub
cmp
repz
mov
add
push
fsubrs
xor
cld
cmp
sbb
pop
decl
jmp
jge
mov
lock
test
add
cmc
add
and
mov
inc
rolb
add
mov
repnz
add
leave
push
lret
adc
and
and
or
inc
add
shl
sbb
cmp
fmulp
bnd
cmc
arpl
sub
inc
mov
ret
or
mov
outsb
dec
repnz
outsl
jo
fdivs
xchg
stc
repnz
jns
hlt
fsts
sarl
jl
nop
xchg
push
adc
mov
mov
orb
fildl
out
repnz
adc
repnz
mov
arpl
push
mov
jno
jbe
add
add
push
jl
inc
lock
das
add
mov
jno
daa
or
add
push
dec
sub
jno
jb
insb
outsl
xorb
fisttps
jns
repnz
dec
lock
insl
sub
cmc
loopne
mov
repz
cwtl
inc
push
add
adc
mov
clc
mov
out
mov
paddb
xlat
lcall
lock
or
and
movsb
and
mov
jp
mov
push
dec
mov
mov
nop
sub
or
iret
testl
add
test
ljmp
nop
ds
lock
enter
pop
sti
fists
and
and
dec
jecxz
push
or
add
xor
repnz
and
ror
imul
leave
adc
push
iret
fistpll
add
sbb
js
push
decb
fyl2x
out
icebp
sub
out
or
push
mov
mov
mov
lea
adc
cltd
pop
repnz
fmul
aad
cmovl
jge
fdivrs
and
mull
and
adc
inc
cmc
mov
in
das
iret
outsb
mov
and
mov
icebp
pushf
mov
add
cmp
mov
push
mov
jo
dec
fsub
sbb
in
mov
nop
sbb
add
inc
js
push
push
sub
pushf
push
loop
cli
sbb
cmp
stc
xor
les
lret
arpl
cwtl
cmp
mov
xlat
mov
mov
inc
adc
aam
jg
or
stos
cmp
xchg
cmpb
mov
je
push
lock
and
mov
cmp
xor
lahf
add
out
inc
stc
testl
repnz
in
add
xor
sub
mov
adc
icebp
bound
jo
inc
xchg
and
or
pop
mov
dec
cwtl
imull
sbb
jp
shll
jae
jnp
sbb
jp
clc
xlat
lea
fcmovnu
add
xor
pop
notb
push
mov
or
adc
or
sbbl
mov
test
cmp
push
sbb
mov
outsb
and
pop
adc
mov
mov
adcl
cmc
jne
stos
add
out
sti
stc
push
loope
mov
jb
jnp
and
jno
int
xor
or
xor
push
dec
jne
mov
clc
or
push
add
fistl
xor
and
sub
push
pop
inc
adc
pop
leave
or
nopl
lock
jb
stc
enter
and
scas
jp
pop
add
jne
imul
outsb
add
mov
es
rcrl
pusha
mov
jle
jnp
inc
xchg
or
lock
sub
push
inc
out
mov
mov
sub
sub
push
ljmp
jecxz
jl
and
pop
repz
xor
pop
push
cmpsb
mov
lahf
or
jp
xor
sub
fwait
mov
jb
jns
xorl
jno
mov
add
je
bt
push
or
les
hlt
add
hlt
push
cmc
jo
scas
mov
dec
sbb
paddb
push
mov
repz
movsl
push
jmp
sti
mov
add
add
push
cmc
push
pop
cmp
push
jle
adc
jp
je
lds
cmp
jne
inc
mov
xchg
aam
mov
jnp
xchg
mov
ds
dec
or
repnz
subps
cld
ss
pop
mov
sub
loop
or
lea
inc
hlt
xor
pop
int
add
les
adc
shr
test
and
out
mov
out
cli
cli
cmc
das
sbb
rcrb
push
into
adc
orb
popf
mov
les
sti
bound
and
sti
xchg
sti
scas
and
fldcw
sbb
scas
js
jb
jnp
mov
jp
stc
div
js
dec
clc
int3
test
fwait
clc
jle
xchg
test
mov
adc
shl
adc
lahf
lret
in
pop
xchg
sub
or
dec
cld
js
xchg
adc
aas
icebp
and
mov
jge
push
lea
inc
daa
jle
loope
pusha
mov
sarl
repnz
mov
xor
jae
dec
jno
aad
inc
xor
test
mov
xor
xor
movsb
sbb
scas
out
sbb
and
and
dec
idivl
and
cmp
xor
sbb
mov
mov
hlt
adc
add
add
push
add
testb
das
inc
jle
mov
sti
jle
vmwrite
out
adc
popf
xor
cwtl
lock
mov
mov
and
decb
punpcklwd
repz
clc
dec
or
add
aas
push
in
mov
sbb
sti
adc
push
xor
add
or
inc
bnd
xchg
sti
cmc
add
mov
scas
add
xor
dec
add
adc
ds
and
sbb
pshufw
mov
cli
js
icebp
repz
mov
jno
lea
add
push
cli
sbb
jnp
and
fisttpl
sbb
lcall
leave
icebp
test
pushw
jge
add
adc
add
pop
and
repz
lea
jle
jg
jo
cmpsl
xchg
stos
adc
add
adcl
xchg
sbb
clc
or
daa
push
push
shl
lock
xor
pop
and
sbb
jne
addb
scas
arpl
repnz
flds
outsl
pop
icebp
mov
ja
mov
jg
adc
xlat
fstpt
and
mov
jns
setb
sbb
add
xchg
mov
dec
jl
push
mov
addr16
xor
clc
cmpsb
inc
jp
dec
dec
push
xor
jecxz
add
pop
ja
andl
dec
clc
sti
and
jg
sbb
mov
pushf
pop
add
cmc
jbe
pop
and
daa
add
lahf
testl
inc
cmpsl
and
jmp
xchg
cmp
sbb
mov
sub
mov
sub
popa
nop
jle
sub
clc
ds
xchg
scas
sti
hlt
inc
je
test
add
or
or
xchg
mov
mov
leave
jp
mov
clc
rcll
mov
push
xor
sbb
or
jg
cli
icebp
fwait
lret
insl
sub
sbb
lods
xchg
sbbb
xor
sti
lea
sub
mov
jae
cwtl
inc
sub
ds
and
fstl
add
xor
dec
int
imull
jno
inc
ds
add
or
add
std
push
cmc
mov
stos
cmpsl
and
sbb
out
rcrb
enter
cmp
push
xchg
push
lret
stos
mov
fimull
inc
addr16
jbe
pop
add
inc
pop
jle
fwait
rcll
ret
sub
push
mov
jnp
xchg
int
jnp
xchg
repz
cmpsb
xchg
std
scas
jecxz
sbb
ja
repnz
insb
push
nop
test
adc
mov
or
adc
lock
adc
fldcw
stc
xor
add
je
lret
outsl
push
jl
fcompl
adc
sti
jge
es
aaa
and
adc
lret
and
scas
mov
jae
and
out
xchg
xor
sbb
cmpsl
cmp
add
sub
mov
xchg
push
xor
div
das
jae
mov
mov
inc
jg
clc
and
push
sub
xorl
clc
repnz
addr16
test
and
inc
hlt
mov
jae
push
cld
mov
cli
shll
in
clc
mov
cs
mov
paddusb
or
and
insb
repz
js
jno
dec
ss
add
add
insb
jno
loop
xchg
xchg
pop
pusha
or
mov
mov
bnd
decl
lods
bound
fxtract
jo
inc
mov
aaa
test
repz
pop
and
imul
jp
push
out
out
insl
sub
icebp
inc
dec
div
xchg
xorl
mov
leave
push
mov
std
enter
cmc
out
add
shrb
dec
jnp
push
clc
loopne
int3
inc
mov
push
testl
push
cmc
pop
xor
mov
out
xor
dec
or
add
cli
xor
push
in
and
or
cmpsl
xchg
cli
repnz
sub
fisttpl
mov
xor
ret
and
or
jne
clc
jmp
dec
hlt
inc
lods
add
jle
pop
dec
call
add
arpl
jno
xor
lock
adc
cmp
aad
add
sbb
add
sub
push
dec
and
lahf
or
or
fbstp
inc
dec
add
jnp
add
clc
cmpsb
xor
mov
arpl
push
pop
les
stc
out
lock
mov
mov
mov
out
mulb
xchg
mov
imul
xor
or
mov
jg
sti
jp
mov
mov
mov
adc
sbb
lcall
incb
adc
lea
adc
daa
test
test
or
call
dec
ljmp
popl
xchg
xchg
stc
cwtl
jno
bnd
pop
dec
rcll
add
cmp
ljmp
movsl
sbb
sbb
or
jne
fisttpl
jno
pop
sub
jecxz
bound
loope
stos
sbb
mov
pop
add
add
push
sti
clc
sbb
lcall
repz
push
repz
push
cmp
lret
ror
and
cmp
push
in
lea
jns
mov
fdivrl
sahf
cmpsb
cmp
or
insl
xor
push
ss
mov
ds
push
pop
fldt
adcb
jg
clc
xlat
aam
and
stc
or
repnz
jne
inc
repnz
outsb
js
dec
imul
dec
mov
mov
in
test
or
sub
loopne
mov
fdivl
xchg
dec
clc
jnp
stc
add
jle
push
mov
repz
xchg
add
and
jnp
mov
and
xchg
sbb
aas
pop
icebp
test
repnz
add
mov
popa
push
hlt
sub
pushf
data16
jle
in
in
loop
push
pop
add
stos
movsl
mov
cmpb
cmp
jno
sub
pop
xor
xlat
mov
hlt
mov
or
mov
ret
mov
ds
dec
jg
mov
jecxz
sti
and
orl
sbb
sbb
sarb
cmpsb
or
jne
loopne
cmp
jns
pop
and
nop
ret
aas
jo
jecxz
inc
nop
or
add
je
nop
or
push
mul
xlat
stc
mov
outsl
addb
ja
rcl
push
sbb
xor
inc
lock
stc
testb
orb
mov
mov
mov
jns
dec
scas
in
or
mov
or
aam
lcall
add
dec
or
or
mov
push
add
lock
sbb
adc
add
movsl
jne
inc
mov
leave
push
jae
pop
add
in
dec
ss
repz
cmpsb
sar
fdivr
adc
push
cmp
xchg
shll
cmc
notl
xor
mov
js
mov
xchg
inc
adc
fdivrs
push
mov
data16
adc
clc
or
mov
inc
jns
add
in
xlat
cmc
xor
cmp
enter
leave
add
push
cwtl
push
addl
dec
lock
xchg
mov
xor
and
jmp
adc
scas
repnz
sbb
aad
data16
loop
jge
sbb
pop
cmpb
add
mov
repnz
mov
jo
mov
jns
inc
cld
adc
pop
jo
push
lods
xchg
push
pop
es
jg
loopne
hlt
cmp
add
sbb
inc
add
nop
push
repz
in
dec
and
cmp
testl
and
js
std
add
bound
lods
cmp
shrb
add
jno
sti
stc
ret
jno
push
js
mov
lock
push
aam
dec
sti
and
xchg
inc
or
cli
push
push
or
mov
jno
das
xchg
dec
std
stc
cmc
cmp
sbb
in
cli
or
cld
jecxz,pn
or
pop
std
mov
je
cmpsb
add
xor
sbb
xchg
cmc
rcrb
je
adc
repnz
mov
xchg
insb
repnz
add
fisttpl
jp
fistps
push
pusha
cmc
jmp
and
subl
add
out
scas
sbb
adcb
loope
jae
inc
pop
repz
js
push
rcrl
fbstp
dec
cmc
mov
insb
jle
and
adcb
fcomps
push
shl
and
cmp
in
dec
std
in
add
test
adc
ja
stc
xchg
sar
sti
xchg
pop
jle
inc
jp
jl
mov
data16
adc
repnz
mov
incb
popa
arpl
clc
push
enter
out
lock
js
cmp
xchg
push
sub
xorl
pusha
das
inc
icebp
adc
fnstenv
sbb
jne
cld
mov
sub
pop
div
aam
jne
pop
imul
repz
jns
and
popa
jno
xlat
mov
repz
pop
lcall
lea
sub
dec
cmpsl
or
mov
lock
jl
clc
cltd
inc
or
xchg
js
imul
repz
lea
loop
mov
test
push
in
lock
add
push
add
daa
sbb
jno
xchg
jecxz
jne
clc
jge
mov
jne
xor
pusha
cmp
sub
jmp
cmp
xor
inc
sub
xlat
les
jp
push
inc
mov
push
inc
dec
sbb
std
push
push
nop
jl
imul
fmull
dec
jb
stos
adc
adc
js
sub
pop
clc
cmpl
stc
cmp
rclb
cmp
repz
addb
rorb
jle
cmp
or
js
sahf
adc
jl
lock
jns
cli
pcmpgtb
cmc
add
int
pop
mov
xchg
out
clc
mov
or
mov
orl
js
addr16
inc
icebp
cld
cli
xchg
push
jmp
fwait
repz
mov
rorl
repnz
add
or
les
icebp
bswap
adc
and
xor
cmp
or
sarl
mov
cmc
adc
xchg
int
cmp
push
and
lock
rcll
mov
cmc
inc
cmp
stc
mov
popl
jp
sub
mov
loop
je
pop
test
xchg
clc
push
add
or
mov
repz
mov
test
addr16
cmc
cmp
js
add
xchg
cltd
sub
stc
sub
push
js
aad
mov
inc
jg
mov
jbe
test
or
add
ljmp
enter
loop
mov
inc
or
push
jmp
div
adc
push
inc
daa
push
add
pop
out
iret
jmp
push
add
dec
pop
repnz
dec
in
push
imul
pop
pusha
sbb
push
or
in
lods
mov
mov
icebp
hlt
pop
icebp
clc
hlt
cld
push
cmc
jae
push
test
sbb
lods
pop
cmp
jno
or
imul
movsb
repz
out
jge
add
mov
pushf
enter
inc
lahf
cmp
adcb
mov
sbb
sub
aad
add
jl
and
imull
lea
sub
insl
adc
arpl
push
test
mov
test
fcom
or
bound
scas
xchg
roll
xchg
sub
sub
mov
decb
and
adc
or
daa
repz
js
mov
and
mov
sub
push
push
jo
add
add
stc
cmpb
imul
xchg
imul
clc
mov
cli
push
xor
cwtl
sbb
inc
loope
mov
push
jecxz
clc
and
mov
inc
lcall
fwait
mov
inc
push
push
sub
mov
jae
and
fistl
push
cs
dec
dec
add
sub
jns
adc
or
addl
jns
mov
je
repz
sti
push
xchg
inc
lock
notl
or
add
add
pop
xor
nop
inc
ror
clc
and
shl
test
xchg
jo
scas
adc
pop
bnd
jno
aas
divl
lods
sbb
jg
ds
or
mov
repz
fcompl
mov
jns
dec
sbb
cmp
int
cmpsl
xor
cli
jo
xchg
xor
inc
stc
sub
je
cmp
jno
mov
fistl
cltd
jae
inc
xor
lods
cmc
lret
hlt
cmp
in
inc
iret
fisttps
jnp
fmuls
int3
xorl
inc
or
pop
lea
push
lock
xor
jo
inc
popl
cmp
mov
jo
mov
pop
xor
add
pop
not
adc
push
push
into
mov
fbld
mov
add
loop
inc
xchg
insl
cmpb
cmc
je
stc
js
add
xor
sbb
cs
xor
jnp
into
idivl
ret
bound
test
push
mov
cmc
mov
mov
fistl
test
repnz
inc
inc
mov
pop
fnstcw
and
push
inc
sbb
imul
sbb
and
jmp
mov
or
jp
mov
idivl
jle
loop
add
pop
xor
or
dec
sbb
xor
loop
mov
add
pushl
xchg
dec
insb
cld
xchg
inc
mov
insb
jb
test
test
das
je
rol
mov
andb
sahf
test
ds
jo
adc
adc
or
push
inc
cmp
pop
mov
js
or
cld
stc
or
clc
push
or
mov
ret
mov
jb
pop
jnp
xchg
mov
add
adc
stc
sti
sub
inc
add
roll
push
push
dec
icebp
ja
jo
xor
xor
and
repz
mov
mov
sar
add
mov
into
or
shl
aaa
je
jp
test
mov
push
dec
repnz
or
adc
outsl
xchg
cmc
xchg
sbb
lock
fs
fbstp
jno
jl
fstl
add
jb
imul
xlat
flds
inc
or
fcmovnu
add
adc
hlt
imul
inc
jne
cmpl
add
jb
sahf
scas
xchg
cmp
mov
repz
xchg
hlt
cmp
or
xor
jns
pop
inc
aam
fmuls
mull
jbe
leave
negb
mov
cmc
cmp
arpl
inc
test
push
addr16
lret
rcl
repnz
sbb
push
sarl
lock
clc
icebp
inc
or
lock
fcmovnb
ficoms
cltd
jb
sti
or
add
push
adc
cmp
add
adc
mov
xchg
stc
add
call
xlat
out
or
mov
fs
dec
xlat
dec
mov
sub
xchg
dec
mov
flds
jle
stos
inc
jb
mov
mov
aam
ljmp
xorb
loopne,pt
in
call
cli
push
loope
jmp
pop
push
jo
cltd
mov
mov
iret
mov
jb
mov
loope
andl
pusha
hlt
mov
jg
jo
cmc
push
test
lret
jo
jno
aam
sbb
jns
jae
and
push
loope
push
js
jno
pushf
sub
xchg
mov
cmp
stc
cmp
jnp
pop
sti
mov
add
add
xchg
xor
jno
fstps
ja
outsl
mov
sbb
adc
add
xchg
wbinvd
cmp
adcl
lock
or
jns
xor
add
add
repz
xchg
stos
ss
mov
imul
sbbb
jge
pop
push
inc
lea
or
and
inc
add
movl
xchg
stc
pop
cli
push
cmp
cwtl
xor
frstpm(287
clc
or
add
divb
repnz
ds
add
sti
lds
mov
inc
xchg
add
jmp
or
lret
loop,pn
addr16
cmpsb
or
pop
jp
push
fwait
xchg
dec
sub
mov
jno
push
test
mov
and
push
fldenv
cmpsb
xorl
lock
negl
adc
dec
dec
mov
and
adc
sbb
inc
and
ds
xor
sbb
push
clc
pop
mov
add
jg
fisttpll
jo
cmp
mov
je
mov
push
repz
xor
jnp
lret
gs
adc
mov
enter
pushf
ret
or
xchg
mov
xor
mov
orb
sti
cmp
jno
push
cmp
jno
sub
adcl
or
or
add
in
int
mov
xor
add
lock
movsb
cmp
xchg
pop
repz
mov
cli
dec
pop
push
insb
or
lcall
pop
mov
pop
ja
xor
fistpl
arpl
inc
cmc
movb
inc
inc
xchg
mov
mov
rorl
push
repz
and
adc
ljmp
sahf
cmp
push
inc
mov
mov
adc
sbb
mov
daa
iret
out
lahf
aaa
jo
test
cmp
enter
sbb
andl
xchg
sub
adc
xor
movsb
pushf
add
xor
cs
push
push
sar
or
cmp
or
repnz
dec
sbb
leave
and
jns
cs
mov
push
cmp
jo
fdivr
divl
push
sub
je
adc
cwtl
clc
mov
je
cmc
insb
mov
cmp
sbb
repnz
or
fsubrs
cli
hlt
icebp
jmp
inc
roll
stc
or
xlat
mov
jo
clc
addb
add
push
je
clc
xchg
not
add
adc
mov
xchg
pop
cmc
xchg
and
pop
aam
mov
daa
pop
imul
inc
and
pop
xchg
icebp
jno
sub
jns
jo
add
pushf
mov
test
xlat
dec
add
push
mov
mov
in
lea
jecxz
pop
aaa
sbb
rorl
mov
mov
xor
popl
scas
add
inc
arpl
in
add
in
xchg
mov
stc
mov
lea
cmc
or
cmp
pop
or
mov
xor
stos
aam
subl
add
xchg
or
xacquire
jno
nop
cmc
push
lret
and
lcall
aad
add
scas
sbb
je
repnz
lahf
add
testl
jo
loop
leave
daa
insb
imul
or
jno
cmpsl
das
xor
lea
jns,pn
repnz
adc
adc
mov
lcall
lods
pop
add
fnstenv
cld
sarl
or
cltd
int3
jmp
xor
jnp
mov
sub
jle
pushl
popa
cltd
test
pop
push
and
pop
rolb
cmp
and
pop
or
and
xchg
mov
aam
nop
xlat
nop
fsts
pop
xchg
mov
cmp
adc
xchg
cmp
dec
sbb
out
xchg
add
aad
mov
xor
dec
dec
gs
cld
inc
jne
fcmovnu
iret
cmc
add
adcl
sub
mov
jge
adcl
sbb
mov
cmc
fdiv
pushf
push
inc
jge
outsb
xchg
pop
mov
xor
xorb
add
inc
pop
movups
scas
xlat
add
icebp
mov
pop
mov
inc
imul
test
rorl
pop
push
bnd
push
fsubrp
adc
lock
clc
addr16
or
repnz
subl
arpl
adc
pop
ds
orb
xchg
fsubrl
negb
xor
cwtl
mov
cmp
in
xchg
xor
sti
jno
add
mov
test
mov
push
mov
sti
cmp
testl
hlt
add
dec
xorb
pusha
xor
jno
xor
into
leave
push
xor
mov
add
jo
leave
xor
adc
xor
mov
jae
or
cwtl
pop
test
xor
inc
lods
cmp
push
mov
push
aas
xor
iret
xlat
hlt
ss
mov
out
or
mov
push
add
pop
adc
or
jp
lds
test
adc
repz
mov
and
mov
fadds
jb
lea
pop
cmpsb
imul
add
xchg
mov
or
pop
clc
cmp
lahf
xor
sbb
xlat
test
repz
lret
aaa
iret
mov
jg
insl
push
xor
add
jl
fldt
cli
repz
jg
js
adc
iret
jae
in
mov
addl
stc
repnz
push
sti
in
xlat
jno
and
add
test
add
jmp
mov
pop
fdivs
jns
jns
jp
pop
or
call
adc
lret
repnz
jae
cli
icebp
ds
repnz
jb
add
aas
dec
pop
clc
test
stos
cli
xor
jo
dec
pop
jo
scas
out
xchg
or
add
lock
dec
mov
mov
adc
cld
ljmp
xchg
pop
and
jl
adc
add
push
ds
mov
and
sar
mov
ret
int
repnz
cmc
fcmovnbe
jmp
adc
pop
inc
xor
mov
mov
xor
sti
leave
sub
mov
mov
inc
jle
lods
repz
xchg
mov
out
loopne
jns
cmpsl
mov
xor
scas
cli
repz
aaa
pop
add
xchg
add
sub
cli
cmp
rcll
or
mov
dec
mov
jb
fildl
pop
int
push
jne
mov
pop
xchg
pop
adc
adc
mov
cli
rcrl
jp
xor
insb
mulb
dec
mov
or
pop
cmp
incb
daa
jno
jp
lods
push
xchg
push
inc
or
dec
or
insb
or
jae
mov
xor
out
ja
push
inc
dec
test
repnz
lock
adc
popa
dec
or
shlb
nop
jns
pop
dec
adc
add
rol
jne,pn
cli
jo
jns
xchg
push
cmpsb
jge
fstpt
inc
jno
add
dec
sbb
adc
testb
xchg
enter
lods
add
add
add
sahf
mov
add
pushf
push
stc
int
cmp
add
mov
jno
insl
sub
scas
daa
fstps
jnp
adc
cmc
add
aad
xchg
push
lods
cmpsl
lea
repnz
fwait
icebp
push
mulb
cmpsb
imul
repnz
or
jbe
not
mov
das
mov
clc
add
or
stc
addr16
out
xchg
scas
hlt
jmp
je
xchg
in
dec
sti
jns
mov
cmc
pop
lock
mov
aad
cmp
lods
push
adc
adc
lret
mov
cwtl
mov
xor
scas
xchg
mov
push
addb
in
ficoms
push
mov
push
pop
arpl
and
icebp
vmwrite
repz
outsl
xor
sbb
push
jle
inc
push
lods
pusha
or
movsb
adc
mov
push
and
repnz
push
jg
cmp
jae
sbb
xlat
push
aaa
repz
mov
or
scas
push
mov
psubw
pop
daa
jae
push
mov
pop
jno
pop
or
mov
jo
fdivrp
or
add
out
xchg
jmp
idivb
pusha
push
shrl
mov
jl
icebp
ffreep
mov
loop
repnz
xorl
rcrl
repz
add
inc
add
jmp
pandn
xchg
push
add
mov
stos
stc
cmp
popa
fildl
rorl
add
ret
sbbb
dec
xor
daa
aad
loop
jbe
mov
fdiv
mov
mov
popf
push
stos
jo
jmp
hlt
xchg
sub
sar
stc
jno
fnstsw
sbb
mov
xor
and
or
mov
js
in
std
je
iret
jecxz
stos
add
in
imul
pop
push
inc
add
xor
cmp
add
xor
push
mov
sahf
push
xor
aad
sti
idivb
push
icebp
es
jno
adc
ret
jle
or
shlb
ja
pop
mov
test
push
jp
shlb
cli
jae
dec
mov
or
gs
arpl
add
xchg
ds
pop
pushl
mov
aam
xchg
mov
iret
push
lds
maxps
or
shlb
mov
iret
mov
hlt
xor
daa
jg
pop
lock
inc
adc
mov
or
jo
sub
jns
ret
dec
cmp
or
cld
imul
dec
lcall
test
jo
and
gs
jo
notl
popf
lea
ss
nop
cwtl
add
and
clc
mov
mov
repz
xor
mov
imul
sbb
push
icebp
jno
mov
push
xor
idiv
jmp
loop
clc
jle
or
lea
enter
hlt
movsl
repnz
adc
push
sbb
push
jno
jb
jo
test
sti
or
shrb
clc
std
add
clc
push
ficoms
dec
mov
xchg
mov
and
inc
je
inc
fcmovnu
jp
adc
lahf
jns
js
in
push
jbe
imul
mov
das
and
rorl
idivl
repz
incb
orl
mov
xchg
and
popf
push
add
sub
int
bnd
insb
jbe
and
shl
push
ss
imul
and
or
mov
push
test
shl
jl
jns
add
std
mov
sub
test
in
push
xor
pop
popl
sahf
add
sub
mov
dec
pop
insl
aad
adc
jno
daa
or
and
lds
add
lds
lock
or
jo
add
mov
test
negl
adc
push
xchg
adc
stc
jae
jl
popa
test
std
mov
jp
test
mov
fnsave
outsl
jg
imul
cmp
xchg
jae
ljmp
adcl
or
test
pop
cmpsl
mov
mov
pop
out
repnz
dec
sub
cmp
es
and
add
push
imul
loope
sbbl
or
add
and
sbb
arpl
xchg
jl
or
push
in
test
push
add
or
loop
add
test
mov
in
adc
das
sti
stc
jae
sahf
jno
movsb
mov
cmc
pop
fistpll
push
aam
add
test
sti
pop
and
repz
pslld
sbb
scas
insb
lock
pusha
movsb
adcb
or
xor
push
mov
sbb
call
cmc
sbb
pop
or
ss
or
push
pop
lret
pop
jns
dec
aad
jo
pop
sarb
add
jno
lds
sub
sbb
dec
sbb
inc
and
or
inc
jo
leave
jnp
clc
aad
pushf
mov
ret
push
sub
pushf
mov
divl
push
and
push
cld
mov
pop
xor
adc
adc
rolb
mov
cmpsl
cmp
stos
orb
mov
push
jecxz
icebp
xor
and
and
sti
jl
jo
sub
and
rcl
aad
push
fisubl
pop
jg
push
adc
jb
jge
or
cmp
and
xor
btr
jge
scas
aam
xchg
cmp
add
mov
push
xor
sub
dec
xchg
hlt
xor
push
jne
jmp
jb
dec
mov
inc
out
adc
mov
sti
pop
pop
and
sub
nop
or
xrelease
fcomp
pop
push
incb
dec
cld
jo
pushf
add
repz
imul
adc
mov
jno
repnz
cld
jb
repz
pusha
out
add
cli
add
push
in
pushf
clc
int
je
leave
jbe
xchg
repz
inc
adc
cmc
adc
sbb
or
push
fcomi
jp
mov
mov
imul
push
add
xchg
cmp
dec
repnz
xchg
xor
nop
adc
daa
adc
push
pop
scas
push
and
data16
es
addl
xchg
push
lret
cwtl
cmp
and
ljmp
cmp
lcall
hlt
shlb
in
sbb
lahf
icebp
sbbb
push
or
jns
push
mov
pushf
pop
repnz
test
adc
repz
xchg
and
daa
and
mov
in
clc
or
add
jb
bound
notl
test
pushf
jg
ficoml
jp
ret
inc
mov
adc
jo
std
cmc
push
sbb
sub
lcall
cmpsl
outsb
movsb
aam
leave
pop
ja
pop
lock
jns
add
stos
or
xor
fisttps
rcrl
cmp
or
int
mov
add
rcr
rcrb
cmp
xchg
xchg
or
dec
sti
lock
and
mov
add
jo
add
imul
sbb
mov
sarl
push
add
bound
fimull
clc
movb
or
pop
inc
repz
inc
jb
add
and
dec
jno
push
push
ja
push
inc
add
sbb
adc
andl
push
cli
outsb
cmpsl
bound
jmp
jne
test
ljmp
push
or
stc
push
mov
stos
rcl
es
cmp
xchg
xchg
leave
sbb
and
cli
and
push
pop
lret
jb
test
fstps
int3
cli
adc
subl
sbb
xor
add
and
mov
mov
mov
adc
push
mov
mov
bnd
or
ljmp
fldl
cmp
or
fldl
push
and
jno
xchg
leave
jmp
adc
fldt
adc
jl
xor
fdivr
pop
cmc
or
lock
or
testb
mov
xchg
push
xor
gs
cmc
xchg
push
stos
or
pop
das
cmc
cld
xchg
pusha
push
aam
jecxz
xorb
cmc
repz
jnp
mov
push
adc
mov
xchg
jnp
fucomi
or
iret
out
movsb
hlt
jg
fnclex
jo
in
sbb
jb
daa
std
add
js
mov
test
and
pop
push
xorl
addr16
cmc
jmp
in
add
jp
into
icebp
repnz
fcomps
sbb
cmc
xchg
sbb
or
loopne
push
push
jl
loop
or
pop
ss
pop
lcall
jns
jmp
push
jl
sti
fldenv
push
mov
repz
int3
jnp
or
inc
das
or
pop
insb
loope
sti
or
inc
or
aad
aas
push
pushf
mov
cmp
data16
and
cmpsl
pop
icebp
insb
dec
cmp
dec
lock
or
sarl
stc
push
js
sahf
fiaddl
repz
stos
sbb
fldt
push
or
sbb
int
push
xchg
xrelease
leave
loopne
mov
add
jb
jecxz
sub
sbb
hlt
arpl
idivb
add
jle
xor
repnz
mov
cmp
jno
or
mov
mov
pop
cmp
dec
ss
cmpb
or
xchg
imul
jecxz
cmc
mov
push
popa
mov
clc
xor
pop
dec
mov
or
or
mov
scas
jnp
negb
xchg
cwtl
cmc
and
xor
and
push
push
div
les
cmp
dec
add
test
jb
mov
add
add
decb
jne
adc
nop
lret
sbb
or
push
hlt
addb
inc
or
stos
dec
aaa
xor
iret
xlat
dec
jno
sbb
add
call
js
xor
jno
and
dec
jne
push
adc
add
sub
imul
sbb
mov
hlt
insb
sti
adc
jg
outsb
repz
popa
push
sub
addr16
or
ret
aas
add
jb
xor
mov
push
mov
dec
xor
cmp
enter
jle
repnz
xchg
jmp
stc
xchg
jno
mov
or
sti
cmc
inc
mov
xchg
pop
sahf
push
fs
pusha
xor
push
fcomp
roll
and
sti
shlb
std
sar
clc
jo
xor
cmc
in
mov
add
sub
jp
jo
filds
push
ja
mov
mov
add
jg
js
adc
xchg
jecxz
into
mov
xchg
shrl
imul
push
sti
lods
cli
push
push
imul
xor
cli
mov
clc
addr16
insb
mov
mov
aad
mov
jne
sbb
in
mov
pushf
incl
inc
pop
pop
clc
push
test
sbb
adc
mov
outsb
mov
adcl
ja
dec
xchg
xor
sub
cmp
popa
push
adc
jns
ds
popf
push
xorb
cmp
mov
sbb
insb
orl
push
cmp
scas
xlat
loopne
add
aaa
adc
int3
js
jno
inc
ljmp
popl
inc
adc
lcall
jne
pop
jno
cmovg
sbb
adc
gs
mov
cmc
and
pop
jp
add
fnstenv
cmp
andb
popf
add
clc
mov
nop
cmp
mov
push
adc
les
push
std
cld
mov
add
dec
mov
lods
add
jmp
jne
mov
or
jne
es
icebp
sarb
add
ljmp
or
aas
xchg
call
hlt
sub
testb
xchg
lret
adc
sbb
sbb
insb
push
cli
dec
mov
popl
sub
jp
push
cs
pop
xor
mov
jbe
or
into
fld
inc
stc
iret
mov
clc
xchg
mov
test
push
mov
sbb
inc
jno
dec
or
mov
cmovs
sub
mov
cli
inc
xchg
lods
nop
xlat
repz
iret
cltd
ss
pop
mov
hlt
mov
add
mov
xchg
inc
add
adc
icebp
jno
mov
idivl
mov
sarb
jae
test
cmp
cmp
xchg
inc
sub
jmp
jo
imul
dec
jg
clc
jb
sbb
in
imul
or
mov
add
nop
add
push
bound
cmc
jbe
sub
pop
or
fimuls
sbb
repnz
repnz
jg
mov
lds
or
lods
seto
add
mov
dec
sbbb
and
hlt
pop
rcr
dec
addr16
cmp
icebp
push
mov
xchg
mov
dec
rolb
pop
clc
and
add
xchg
mov
stc
jns
adc
cmp
or
pop
mov
hlt
sub
push
icebp
add
jno
movsb
movsl
cld
sub
mov
outsl
xchg
bound
loop
cmp
add
leave
fadds
sahf
xor
mov
add
xor
out
or
cmpsb
add
sbb
hlt
lcall
or
add
nop
add
out
push
testl
mov
cmc
dec
clc
push
mov
lahf
aas
xor
addb
mov
popf
pop
lea
jne
add
adcb
cmp
icebp
std
or
dec
sti
idivl
pop
mov
mov
cmp
push
xlat
into
pop
jae
aam
pop
int
pop
insb
outsb
adc
pop
faddl
jge
cmp
cmc
aad
sti
or
sub
mov
imulb
jns
test
cmp
jle
lock
das
jne
mov
jo
ret
repz
push
aas
xor
xchg
pushf
inc
movsb
imul
jae
nop
push
push
push
mov
jl
add
push
inc
mov
xor
jne
jae
jp
cmc
nop
mov
inc
add
fbstp
push
std
mov
out
or
psubq
jne
out
jno
add
imul
dec
iret
jbe
sub
notb
push
rorb
lea
insl
sub
imul
test
aam
sti
in
add
mov
sbbl
and
movsb
jne
adc
push
pusha
pop
clc
imul
jns
repnz
inc
aas
or
mov
lock
lock
fists
mov
pop
int
or
dec
and
cli
mov
idiv
push
add
jno
lcall
add
cmp
sti
sbb
loopne
inc
lock
push
in
or
jno
mov
adc
sbb
mov
adc
jns
mov
push
mov
lea
push
xor
aas
mov
cmpsb
mov
mov
movl
in
cmc
add
pushf
ds
sbb
cwtl
stc
testl
sahf
je
nop
lods
je
jo
stos
sti
pop
adc
inc
rcr
add
jmp
cmpsb
add
in
sub
or
jne
daa
dec
inc
inc
lock
cli
repz
adc
jnp
xorb
jno
mov
repz
shlb
pop
fwait
test
cmc
aas
imul
clc
jl
and
insb
int3
aaa
lock
pop
leave
out
gs
push
test
sub
mov
adc
repnz
dec
popf
cmc
test
xchg
call
jbe
mov
jns
pop
repz
pushf
jmp
mov
outsl
inc
mov
mov
mov
xchg
sti
pop
idiv
jp
clc
clc
repz
lock
cmp
aad
fisttps
jg
xor
or
sub
mov
jge
mov
in
les
lea
data16
or
add
push
mov
mov
test
xchg
insl
js
and
cwtl
aas
icebp
mov
cmp
lret
push
pop
mov
xchg
add
or
enter
stos
addr16
jno
fldt
inc
jl
jb
aad
stc
rcll
loopne
adc
jno
or
repnz
idivb
std
bound
push
jae
mov
popa
addl
or
push
dec
cmc
sub
add
sub
push
in
cmc
push
addb
push
xchg
adc
pop
mov
sbb
push
sub
in
push
fdiv
mov
adc
add
hlt
cmp
xchg
dec
fisubrs
std
jne
mov
xchg
or
jecxz
jno
das
repz
sbb
mov
adc
les
mov
add
pop
and
sti
in
ss
xchg
shll
pop
adc
adc
sub
mov
js
push
inc
push
dec
pop
jp
jle
mov
jo
cmp
and
xor
jnp
jb
out
mov
add
fiadds
push
ret
xor
cs
cld
sbb
ja
imul
jno
add
jl
sbb
push
nop
hlt
pop
push
or
or
fs
jmp
cmp
mov
addr16
ds
adc
cmpl
sbb
xor
loopne
add
icebp
and
negl
xor
cwtl
jne
sub
xor
popa
pop
jg
imul
aaa
jg
mov
jo
inc
jno
mov
pop
clc
pop
and
pmaddwd
lahf
jg
sahf
out
add
js
add
jo
fisubrs
repnz
adc
xchg
mov
inc
ds
popf
xorl
cmc
pop
mov
jno
mov
sete
adc
ss
sti
inc
jp
inc
test
sub
mov
test
push
lahf
out
push
add
ret
int
jns
xor
mov
ret
mov
mov
pop
pop
ja
mov
push
movsb
mov
ljmp
repz
out
or
cmp
push
mov
pop
push
and
and
jno
stos
push
cmp
dec
add
sub
adc
add
mov
xchg
mov
xchg
sti
mov
and
imul
movsl
jae
jns
loopne
jns
in
stos
scas
jmp
mov
add
cmc
idivb
mov
aad
frstor
jg
clc
sbb
xor
dec
add
stc
jns
jo
jno
mov
rcll
psubd
add
and
int3
mov
pushf
sub
in
icebp
cmc
pusha
sbb
sub
add
fwait
aas
xorb
push
mov
repnz
sbb
mov
stc
test
sti
lods
push
mov
sbb
test
or
jle
add
xor
addb
or
push
push
jno
ficoml
add
sahf
push
mov
xchg
dec
repz
add
stos
cli
icebp
adc
pmaddwd
adc
push
sub
cmpsl
aad
repz
jne
call
test
push
js
loop
jne
cmp
add
and
frstor
ror
mov
int3
push
add
xchg
jg
mov
mov
xchg
or
repnz
imulb
jno
je
stc
loop
sarl
adcl
sbb
push
daa
cmp
and
add
or
mov
lock
out
aad
pop
add
mov
in
aad
jnp
clc
testl
jo
lock
sti
dec
lret
add
movsb
adc
mov
pop
mov
fisttpl
lods
mov
push
icebp
int3
fs
hlt
and
fldcw
shll
std
adc
rcr
aaa
pop
ffreep
or
push
and
jnp
lock
add
jno,pn
gs
stos
push
ja
adc
dec
xchg
daa
sub
xor
xor
and
int
add
sub
test
sub
shrb
test
jno
out
sbb
pop
or
jg
jo
movsl
xchg
jecxz
pop
repz
in
stc
imul
push
xchg
adc
mov
xchg
fnstcw
movsl
scas
xchg
mov
ds
push
lcall
shrl
jbe
add
xchg
dec
loop
lea
je
or
dec
push
cmp
cmc
jp
sbb
jne
ja
hlt
sub
fmul
xor
mov
out
repz
sarl
lcall
es
fcoms
cmp
mov
sahf
cmp
sub
js
xor
shl
sti
pop
and
xchg
jl
stc
add
insb
stc
js
xor
xchg
aas
out
pop
jne
repnz
clc
jle
into
es
repnz
imul
test
mov
sbb
adc
fs
pop
push
insb
shrb
aaa
mov
mov
std
fisubl
push
mov
loop
add
mov
roll
cmpsl
clc
out
test
xor
and
insl
div
call
cmc
cmc
xlat
mov
adc
cmp
dec
icebp
addl
mov
jno
jo
adc
cmpsb
out
push
mov
xacquire
jo
scas
cmp
loope
or
jmp
sub
leave
sbb
xor
xor
add
mov
jge
jnp
or
sbb
cmc
sub
cmp
mov
test
mov
add
cmpb
mov
lret
lahf
jo
inc
aam
lds
lret
jns
addr16
mov
push
lods
sbb
cmc
adc
sarl
mov
xchg
sub
or
imul
dec
ds
jbe
cmpsl
or
hlt
jno
mov
cwtl
idiv
cli
and
xor
loop
sahf
jo
lret
hlt
sub
jbe
loopne
ljmp
gs
jge
movsl
mov
xchg
mov
call
jno
add
inc
sbb
fs
stos
mov
adc
jge
or
and
sub
int3
xor
xor
sub
sub
nop
xor
adc
adc
sub
js
dec
jno
sbb
mov
sbbl
sub
jecxz
pop
sbb
imul
jno,pn
scas
xchg
or
fstpt
add
aam
push
sbb
stos
fisttpll
stc
xchg
mov
jae
adc
xorb
ljmp
and
adc
sbb
push
jno
repnz
mov
imull
aam
lds
or
orb
inc
jl
jb
repz
clc
out
jns
or
cmp
or
repz
or
lock
push
inc
movsb
jno
dec
adc
jae
and
jp
jecxz
push
mov
pop
notl
out
testl
out
or
test
pop
imul
jmp
or
sub
pop
roll
negb
aam
add
pop
sub
in
lea
push
cmp
jno
cmp
add
adc
lock
mov
ja
js
mov
or
push
pop
or
test
cmp
cmc
out
pushf
mov
adc
inc
jge
orb
lret
jl
adc
subl
or
add
imul
adc
clc
push
and
sbb
mov
jl
rorl
inc
add
fdivrp
sub
mov
enter
mov
xchg
cmc
repz
mov
sbb
mov
hlt
js
pushf
rclb
out
sub
cld
sbb
inc
sbb
sbb
push
lahf
adcb
je
add
xor
cld
push
lock
xchg
or
push
push
test
mov
js,pt
aad
lret
add
or
icebp
push
cmp
push
add
in
repz
mov
mov
and
subb
int3
imul
dec
movzwl
or
jmp
sbb
or
aaa
mov
sbb
insb
or
mov
mov
jns
clc
sbb
jnp
std
stc
and
dec
cmp
or
jb
sti
mov
push
add
idivl
jno
mov
out
pop
fldt
add
push
or
add
stos
or
xor
mov
pop
divb
xchg
sbb
gs
rclb
and
cmpsl
mov
mov
mov
or
push
mov
sahf
rorl
test
fcmovnb
jp
pop
jmp
jne
ss
testl
sahf
or
push
xlat
xchg
cmc
aaa
inc
ret
dec
icebp
std
jle
shlb
decb
int
push
es
adc
fldcw
pop
cld
ss
sbb
or
aaa
cli
cli
ja
jecxz
fs
aam
mov
push
jge
mov
pop
js
cli
in
cmp
mov
and
js
fdivs
cmp
mov
push
shr
adc
shr
xchg
clc
inc
adc
mov
jno
pushf
mov
idiv
dec
add
in
inc
sub
jl
enter
clc
adc
pop
mov
andl
ja
sahf
call
inc
int3
jne
lret
mov
test
iret
mov
mov
pop
fstp
popl
lock
jnp
dec
push
loope
popa
xlat
xor
add
or
mov
cmc
insb
hlt
mov
fdiv
jo
lods
cltd
mov
nop
icebp
jb
adc
xchg
inc
inc
push
repnz
fwait
xor
movsl
jns
mov
push
pop
call
or
push
mov
pushf
sar
cmp
jge
fs
adc
push
jo
dec
adc
or
adc
pusha
mov
lock
xlat
scas
stc
adc
jmp
fdivs
loopne
cwtl
hlt
inc
cmp
mov
push
inc
or
mov
nop
mov
mov
push
or
add
xchg
clc
mov
cmpsl
inc
ret
push
add
push
scas
jp
repnz
roll
adc
bnd
mov
imul
popf
jle
insb
or
sub
stc
mov
and
pop
andl
icebp
mov
nop
mov
mov
jecxz
cs
mov
cmc
mov
pop
xchg
xchg
adc
xchg
repz
add
add
sub
mov
cmpsb
pop
push
movl
clc
push
jnp
inc
fldt
test
adc
mov
jne
repz
adc
jmp
pop
or
sub
jp
pusha
cltd
and
xor
or
addl
mov
inc
sbb
fnstsw
inc
mov
mov
notl
shrl
sbb
push
icebp
sbbl
ret
mov
mov
pop
inc
sti
das
lods
in
add
jno
or
push
mov
and
sub
scas
fcompl
mov
pusha
sbb
js
js
mov
pop
xchg
int
repnz
xor
mov
mov
cmc
cwtl
jp
int
loopne
cld
xor
xchg
shlb
jmp
xor
in
orb
es
repz
leave
xchg
inc
notb
add
out
and
or
xor
pop
jno
mov
stc
xchg
ja
lock
daa
imul
dec
pushf
add
xlat
add
mov
cmp
psrlw
inc
jl
xchg
cmp
mov
xchg
movsb
adc
xlat
mov
inc
idivl
jmp
js
mov
test
rorl
sub
idivl
mov
add
fbstp
dec
stos
sub
mov
insb
add
xchg
inc
repz
mov
and
mov
push
cmpsb
fdivr
push
pop
icebp
sbb
loop
out
aad
cld
jl
ja
xchg
ss
cmp
jl
fbld
mov
add
je
mov
jno
aaa
adc
add
movl
inc
movsb
pop
lea
adc
rcrb
clc
loopw
add
xor
ret
std
clc
aad
jne
jno
testb
xchg
or
outsl
add
jns
adc
or
divl
mov
fnstsw
mov
incb
adc
xor
divl
pop
add
and
adc
movsb
cmc
clc
fsubrl
jns
add
or
or
inc
add
dec
mov
cmp
jno
adc
insb
or
sbb
inc
cmc
dec
arpl
mov
aam
dec
jl
sti
adc
jnp
xchg
dec
push
jl
jge
cli
popa
adc
cmp
inc
jg
jne
cmc
and
xchg
inc
clc
bnd
decb
lret
sbb
lods
add
inc
sti
or
jl
repnz
inc
notb
daa
clc
and
push
xlat
daa
pop
outsl
jg
adc
iret
mov
repz
xchg
jp
pushf
ja
dec
sbb
clc
push
xchg
sbb
add
lahf
push
nop
je
adc
mov
xchg
add
jo
cmpsl
scas
std
rorb
add
pop
push
adc
int3
fwait
pushf
aaa
sub
mov
and
cltd
aaa
data16
lock
lret
or
sub
xchg
rolb
mov
lods
int
adcl
sub
dec
adc
jno
fists
dec
xor
sub
dec
inc
test
xor
sub
or
out
dec
sbb
cmc
adc
popa
mov
fldt
mov
or
jne
add
mov
inc
stc
add
or
dec
in
jno
std
push
mov
xchg
aad
or
push
mov
ljmp
and
mov
mov
leave
jp
sti
addl
inc
or
ficoml
nopl
sub
and
push
je
jnp
cmp
fbstp
ja
jno
fdivl
enter
xor
push
loop
cmc
adc
pop
or
sub
js
ret
lret
push
mov
pop
mov
mov
aam
add
jno
int
mov
sub
adc
ljmp
pop
lock
adc
inc
pop
mov
les
adc
pop
into
add
sub
mov
and
mov
pushf
cmp
and
pop
xchg
cmp
cmp
lahf
shll
push
aad
stc
xor
adc
and
cmc
mov
imul
cmc
add
sbb
fdivr
stc
imul
inc
push
jns
ret
mov
test
fs
imul
repz
push
je
xor
cmc
cmpsb
in
add
adc
push
lcall
stc
stc
cmp
aas
xor
add
inc
add
or
out
add
mov
inc
pop
stc
xor
add
cmp
sarb
mov
rcll
ja
testl
dec
dec
ud1
jb
jae
cli
xchg
je,pt
inc
add
jge
adcl
mov
or
or
and
sub
popf
mov
aas
scas
adc
jne
popf
inc
data16
cmc
cmc
cltd
pop
cmpsb
int3
inc
push
es
or
aas
mov
xor
mov
or
in
outsb
es
add
std
fcompl
clc
jns
push
adc
or
mov
mov
or
pop
mov
sbb
add
dec
idivb
hlt
testl
and
pop
div
ja
xlat
jns
or
out
adc
inc
and
je
xorl
adc
jno
inc
in
xchg
in
mull
jno
push
lret
sbb
inc
mov
pop
push
push
add
icebp
repnz
sarl
scas
xor
inc
test
mov
and
icebp
cmpl
add
pop
imul
roll
mov
repnz
cld
mov
xchg
sahf
std
clc
loop
jb
stc
and
icebp
lret
test
clc
sbb
push
js
xor
lea
xchg
pushl
cmc
dec
jae
adc
pop
negb
cli
icebp
clc
push
int3
and
decb
sub
adc
shl
jp
and
je
mov
push
stos
or
sub
push
hlt
mov
mov
sar
jmp
jnp
xorb
inc
push
test
and
das
inc
push
orb
sbb
adc
ja
cmp
decl
sti
dec
mov
js
mov
ficoms
sahf
out
sbb
xor
pop
adc
jecxz
imul
mov
std
and
adc
push
lods
dec
cmp
je
cmpsb
xchg
pop
or
repnz
mov
fs
xchg
mov
stos
test
push
dec
imul
lcall
xchg
pop
fdivr
inc
sti
jg
loopne
add
jae
pushf
cmp
outsl
xor
hlt
hlt
push
jno
push
ljmp
andb
jo
aas
rclb
dec
pop
sar
bound
imul
dec
push
adc
out
loopne
stos
push
cmc
cmc
rolb
pop
cld
add
lcall
loop
jl
and
in
lods
scas
and
and
pop
in
nop
inc
or
inc
adc
std
or
fwait
add
fcmovne
xchg
inc
test
repnz
push
dec
fiadds
jmp
js
jno
or
jp
sarl
adc
inc
cmp
mov
scas
or
ret
cmp
clc
sub
outsl
cmp
xorl
mov
sbb
push
aam
dec
add
fldt
sbbb
mov
test
or
sti
xchg
fistpl
jno
or
icebp
divl
xor
sbb
sti
sub
inc
add
sahf
stc
iret
jo
or
jle
xor
sti
adc
addr16
add
inc
add
xchg
sub
std
mov
and
add
xor
or
mov
or
cmc
clc
push
das
pop
inc
ret
mov
lahf
xor
dec
mov
enter
mov
pop
xchg
sub
mov
jne
or
or
cmpsb
fwait
clc
mov
push
sub
les
daa
add
ret
incb
mov
std
dec
xor
xchg
or
add
cmc
mov
add
jl
addr16
clc
repnz
sti
or
push
adc
bnd
in
rol
add
jns
lea
icebp
adc
movsb
xchg
xor
clc
dec
fcomip
pcmpeqb
popa
xlat
aas
int3
in
cwtl
aam
or
mov
pop
sbb
or
or
mov
enter
sbb
inc
pop
mov
sahf
sub
push
cs
jae
mov
pop
icebp
enter
xor
pop
hlt
sbb
dec
ja
imul
mov
inc
lea
jae
push
clc
add
jns
and
xor
stos
fwait
repz
pop
pop
mov
pop
add
or
jl
cmp
sbb
xlat
testl
mov
xor
push
sahf
or
loopne
add
jp
idivb
cmc
movsl
js
add
decb
push
pop
push
paddq
insl
jg
mov
in
idivb
int
or
and
adc
jecxz
cli
loopne
dec
hlt
pushf
div
mov
xlat
ljmp
sub
stc
icebp
xchg
xchg
sub
jae
jne
xor
jns
jo
pop
nop
cwtl
mov
lret
addr16
testl
cltd
mov
loope
sbb
add
dec
sbb
iret
out
mov
cmc
dec
stos
pushf
or
andl
dec
mov
test
mov
mov
daa
jne
les
cmp
gs
xchg
push
repnz
mov
jno
jno
sbb
lcall
js
je
repz
int3
fisttpl
jo
sbb
mov
jp
js
lock
std
or
sti
ja
xor
inc
xor
add
inc
push
scas
add
sbb
xor
xlat
jno
sbb
xor
cmpsl
add
imul
xchg
add
inc
and
adc
or
adc
mov
push
mov
jno
cmp
std
or
and
out
mov
aad
daa
testl
jno
mov
repnz
jo
cld
mov
ja
cli
sbb
jmp
push
scas
test
cmp
outsb
ja
mov
insb
clc
mov
es
jnp
pusha
mov
inc
repz
lock
xchg
sbb
jo
fsubrl
stc
mov
call
ja
shlb
pushf
adc
cmp
mov
sub
or
sub
xor
out
mov
lret
int3
add
add
jg
test
add
cmp
and
jo
xchg
pushf
xchg
out
jp
int
mov
and
divb
xor
mov
loop
adc
sbb
jae
cmpsl
dec
repz
cmpsl
jo
scas
mov
push
dec
repnz
sti
jp
sub
xchg
push
cmp
jo
clc
pop
or
mov
aaa
lret
mov
div
mov
sub
adc
idivl
rolb
xchg
mov
jp
push
aad
call
push
adc
sub
xor
mov
jo
fdivr
mov
jns
push
fs
stos
inc
adc
filds
jecxz
mov
add
cwtl
cmp
cmpsl
loope
inc
adc
dec
pop
xor
xchg
and
clc
pusha
mov
pushf
scas
jmp
push
or
xchg
sbb
add
in
add
or
int3
test
repz
cmpsb
or
jp
cmp
adc
loopne
add
xchg
icebp
dec
push
jge
and
push
hlt
ja
mov
sbb
inc
loop
pop
add
fwait
pop
nop
xchg
in
addb
lods
fdivrl
push
or
lock
cltd
dec
add
add
stc
jmp
push
push
stc
push
jle
and
in
sbb
imull
adc
pop
push
imul
imul
xorl
add
add
aad
xor
mov
outsb
sbb
push
pop
jns
and
je
adc
mov
xchg
adcl
jae
sbb
sub
cmp
mov
sti
xchg
and
xchg
outsb
inc
push
mov
sbbl
or
jne
test
out
or
or
andl
dec
jnp
out
fcoms
xchg
add
pop
pop
cs
lea
add
ret
cmp
sbb
sbb
mov
mov
fwait
jle
inc
fs
xor
test
jns
cs
outsb
gs
and
mov
and
push
sbb
adc
ds
cmp
idiv
jnp
icebp
nop
in
movsl
sbb
stc
adc
add
and
rorl
add
scas
add
adc
push
cmpb
test
jge
int3
popa
dec
or
and
dec
repnz
jo
in
add
dec
addl
jle
lahf
add
testb
repz
in
add
ja
jno
lds
daa
jnp
sub
xorb
jns
xchg
mov
add
xor
shlb
cld
test
push
nop
loop
mov
or
xchg
pop
lock
push
int3
and
cmpsl
jg
shl
cmp
sub
rorl
pop
dec
push
sbb
pop
mov
ja
dec
repz
cmp
cmpsb
or
divl
xor
push
cmc
sahf
jmp
sub
adc
data16
dec
xchg
mov
fnsave
add
sub
in
jns
mov
mov
outsb
mov
xchg
mov
stc
jnp
add
xchg
sbb
xlat
lock
ja
adc
push
clc
stc
or
addr16
psubq
xchg
adc
js
lods
sbb
repnz
mov
int
mov
lret
mov
nop
sbb
jno
lret
loopne
lahf
addl
ja
and
jo
add
test
gs
add
cmp
icebp
lds
bound
sti
jg
xchg
ds
mov
xchg
cmp
insb
inc
jns
jnp
loope
cmc
xor
jbe
iret
inc
cmp
lea
mov
mov
lds
or
mov
repz
or
inc
les
bound
wbinvd
mov
cmc
sub
mov
mov
mov
add
cli
movsb
adc
loop
cld
jle
andl
jge
or
sub
fwait
aad
test
pop
sbb
jns
scas
push
dec
stc
xchg
stos
xor
clc
fidivrs
dec
in
insl
addb
mov
arpl
repz
jns
sub
scas
cmc
jbe
rorl
xchg
and
stc
pop
push
mov
xchg
out
dec
add
cli
adc
add
addl
neg
jno
fwait
lret
pop
in
xchg
clc
stc
loop
dec
pop
xchg
xchg
and
sbb
pop
icebp
or
jbe
jecxz
jo
repz
jo
jnp
sub
push
movsl
rol
push
mov
add
clc
dec
das
repnz
or
add
ret
sbb
and
dec
sub
pushf
fdiv
and
xor
push
xchg
insl
add
mov
or
adc
add
mov
cli
imul
cmc
dec
push
or
push
push
inc
clc
lahf
js
jno,pn
shrb
ss
mov
stc
jl
xchg
pop
adc
dec
jp
pop
xchg
in
cltd
out
iret
cmovns
push
mov
pushf
xor
lea
jne
cmp
repnz
frstor
xorl
xor
or
cmovne
je
mul
outsb
lods
cli
cmp
test
shrb
fistpll
jl
sbb
das
xchg
mov
lods
mov
or
out
push
notl
cmc
fcompl
push
xchg
cmpsl
lock
jo
rcrl
or
adc
fsub
fisubl
xchg
jge
push
outsb
dec
je
mov
testl
outsb
jg
nop
lds
xorb
mov
cmc
pop
add
cltd
mov
cmc
jl
or
repz
mov
aam
fs
stc
inc
test
pop
add
out
adc
fnsave
cs
xor
push
sti
push
sahf
scas
rorl
add
jno
add
sub
daa
leave
addb
jns
pop
aam
es
or
xlat
add
outsl
cmpsl
vfrczps
sub
rdrand
insl
mov
and
sub
add
cmp
push
rolb
aas
pusha
jns
or
xchg
lea
pop
and
movsl
add
jns
mov
or
add
fists
pushf
adc
je
loop
dec
fiaddl
jg
mov
scas
idivl
scas
and
push
stos
int
lods
and
adc
push
addl
push
mull
push
hlt
push
mov
jl
cmc
jne
bnd
addr16
jecxz
shr
sub
lock
imull
arpl
jg
and
xchg
notl
mov
push
sub
jl
cmc
movsl
daa
jp
aam
scas
and
adc
jp
pop
sub
mov
loop
mov
mov
xor
clc
andb
fists
pop
test
in
cmp
repz
jb
jecxz
icebp
or
or
addr16
push
clc
adcb
js
xor
cli
repz
add
adc
lcall
pop
adc
sti
jb
dec
sub
aam
repz
jmp
cmp
jnp
jnp
nop
fmuls
ja
xchg
clc
sub
leave
int
rcrl
xchg
pop
jo
xchg
mov
or
add
add
repnz
fstl
dec
adc
aam
xlat
push
dec
mov
sbb
aad
push
jns,pn
adc
jo
ja
inc
stc
sbb
xor
ret
adc
cmp
aas
repnz
lahf
or
adc
lods
jns
sub
sti
int
ja
xchg
insb
gs
clc
add
push
repnz
add
or
mov
ret
jg
jge
push
jbe
push
pop
inc
test
mov
loope
dec
aaa
ljmp
and
push
scas
scas
push
and
mov
add
jo
test
mov
aas
sub
ret
lods
sbb
pop
mov
shll
repnz
enter
adc
mov
les
xchg
pop
cmpl
add
rolb
movl
jb
lods
cmp
add
inc
adc
or
sbb
lret
mov
add
or
add
mov
mov
add
repz
lods
int
fsub
push
sysenter
in
mov
fdivr
fstpt
xacquire
jno
xchg
shlb
loope
inc
push
inc
mov
jge
mov
fstpt
xchg
push
imul
scas
fs
aam
cmp
push
ljmp
icebp
or
jo
inc
daa
jp
decb
or
jl
stos
cli
and
xchg
sbb
adc
add
movsb
aam
sub
jnp
cmp
leave
xchg
cli
repz
jl
adc
bound
stc
adc
loopne
sbb
repnz
orb
xchg
enter
inc
pushf
cmp
cmp
jo
inc
push
int
adc
cmc
jb
stos
xchg
loope
divb
fidivl
pushf
idivl
sub
pop
jno
sti
cmp
imul
fistps
sbb
sub
cmc
cmpsb
mov
test
fcomps
mov
push
dec
jb
jno
xchg
mov
inc
fisttpll
and
cmpsl
lahf
jge
inc
movsb
add
stos
and
loopne
or
neg
and
pop
pop
xchg
outsb
xor
adc
mov
rorb
addl
roll
cmc
stc
xor
xor
scas
je
sbb
leave
or
mov
je
hlt
jle
sub
mov
mov
or
ffree
ss
add
dec
nop
sub
jle
sbb
push
xor
mov
repnz
push
jno
pop
fsubrl
mov
add
repz
fstps
add
push
pop
iretw
xor
fidivrs
sbbl
or
pop
mov
add
out
addr16
cmp
sbb
mov
dec
cmp
mov
pusha
hlt
les
cmp
cmp
xor
aam
push
into
jb
mov
or
sub
and
pop
stc
arpl
mov
clc
mov
mov
jne
jl
add
add
jno
sbb
adcb
ja
aam
mov
mov
sub
icebp
jo
je
mov
je
adc
stc
mov
add
movsl
rorb
adc
fs
fcoms
pop
stc
xchg
cmp
or
inc
jae
add
jno
pusha
lret
mov
lds
jns
or
xor
jnp
dec
fcomip
and
pop
sbb
xchg
sahf
sbb
imul
cld
adcb
enter
stos
repnz
jno
jno
jmp
and
lret
mov
mov
ret
or
add
sbbb
into
pop
mov
mov
cmpsl
ret
dec
iret
in
push
cmpsl
aad
and
push
xor
mov
xchg
iret
jne
xchg
jno
lret
xor
clc
or
cs
xor
add
subl
add
stos
sarl
ds
lea
mov
fs
cmp
lahf
mov
sbb
mov
sub
xchg
lahf
xchg
dec
lret
adc
and
pop
add
test
les
jmp
loop
push
stos
mov
lods
not
arpl
and
push
jp
inc
jmp
out
push
adc
mov
jo
js
or
jb
or
cmpsb
mov
push
mov
sub
div
sbb
mov
cmp
hlt
adc
xchg
mov
pusha
xchg
xor
lea
push
fildll
mov
test
lea
xlat
mov
sbb
insb
inc
mov
std
mov
sbbl
fiadds
cmp
fadds
xchg
or
cmc
ja
or
push
sbb
xor
test
jns
notb
sub
aad
imul
cli
and
mov
mov
xor
sbb
call
jns
jo
pop
add
in
pop
out
div
pop
add
mov
dec
out
mov
mov
cmc
das
mov
scas
fisttpll
or
pop
xchg
in
icebp
xlat
pop
mov
jo
dec
aad
loope
jno
fwait
add
scas
push
mov
mov
mov
leave
push
js
movsl
pop
cmp
loop
adc
adc
mov
sub
stos
xor
sar
xlat
inc
push
cmp
stc
ficoms
testl
add
test
je
repz
cmc
jo
loop
add
xor
sbb
leave
bound
xchg
add
pop
es
jno
ja
jns
stc
push
js
jmp
jp
repnz
fucomip
outsb
addl
sub
test
popa
imul
and
repz
push
arpl
cwtl
pop
or
push
xor
sub
mov
incl
add
fildl
cmpl
push
or
mov
mov
outsl
dec
sti
insl
repz
inc
mov
mulb
cmp
in
out
sub
jecxz
movsb
fisubs
loop
xor
mov
sbb
push
mov
out
sub
aaa
dec
pop
cmp
cli
repz
add
stc
xor
xchg
js
inc
pop
sti
sub
xorb
xchg
push
data16
add
sbb
add
sahf
mov
or
les
testl
cmpsb
push
cltd
fwait
or
jge
js
mov
insb
or
std
inc
scas
aaa
dec
jns
cwtl
repz
loopne
jnp
pop
cmpsb
jb
data16
mov
mov
cmpb
xchg
int3
xor
inc
add
ljmp
jns
push
clc
push
js
xor
jno
jmp
mov
aad
jl
push
pop
arpl
mov
or
mov
rep
jg
jb
js
icebp
idivb
jg
push
jp
repnz
or
mov
ss
aam
rorb
aaa
pop
je
xor
xchg
sti
pop
adc
add
push
testl
push
add
mov
dec
xchg
jg
rorb
or
cmc
sbbb
lea
mov
inc
mov
sbb
jnp
dec
jl
sbb
jle
pop
add
push
hlt
add
clc
out
xchg
orl
jns
aad
cmp
cld
mov
testl
add
push
cmc
add
shlb
ss
sbb
pop
mov
shlb
mov
mov
mov
mov
xchg
xor
add
mov
xchg
imul
xor
push
cmp
sbb
jns
shrb
andl
jno
xchg
adc
idiv
cmc
cwtl
jecxz
scas
sbb
jb
in
xlat
sub
jg
and
xchg
mov
inc
add
dec
pop
jns
xor
and
mov
addl
call
adc
int
decl
stos
loope
stc
scas
cld
lret
or
cwtl
add
repnz
mov
enter
sti
xor
sbb
mov
jbe
shlb
lea
and
test
and
incl
cli
jno
xchg
mov
sti
hlt
popa
or
fbstp
mov
xchg
or
inc
mov
ja
xor
add
sbb
mov
orl
mov
cmpsl
mov
les
scas
mov
cltd
or
pusha
stc
shl
sbb
xabort
or
dec
mov
stos
jns
jns
mov
jle
cmp
nop
sti
popf
inc
push
push
clc
cmc
mov
popl
push
xchg
jnp
fisubl
xchg
pop
cmp
push
clc
popl
int3
dec
add
sub
xchg
or
and
push
xor
shrb
aam
fimuls
clc
out
jl
sti
inc
sub
mov
pop
mov
sbb
inc
xor
inc
add
dec
pop
sahf
popa
jnp
stc
jge
jle
stos
inc
xchg
xor
in
mov
add
cmp
lret
jecxz
push
jge
cmpsb
repnz
cmp
mov
jb
std
push
pop
jp
push
pop
and
js
fdivl
dec
loop
or
pop
pushf
mov
mov
lahf
icebp
pop
enter
ret
push
icebp
and
or
adc
rolb
push
sub
sarb
stc
xor
rorl
cmp
popl
push
jns
or
push
and
dec
cli
pop
scas
pop
add
repz
add
dec
push
add
jns
xlat
mov
inc
pusha
xor
icebp
hlt
mov
aad
fstps
subps
xorl
cmp
add
scas
mov
call
in
and
push
xor
adc
pop
not
mov
jo
cmp
mov
lea
add
jb
and
sub
ficoml
dec
imul
jno
addr16
lea
lret
add
pop
ret
inc
xor
lock
mov
dec
rclb
pop
icebp
cwtl
mov
ss
mov
or
in
lock
cmp
xor
inc
out
inc
nop
xchg
dec
pop
insb
movd
cmc
xchg
je
repnz
push
xlat
sarb
nop
adc
jb
mov
js
js
push
jno
movsl
xor
add
push
jmp
cmp
xor
iret
xchg
inc
sti
icebp
dec
std
sub
ljmp
or
rorb
lret
dec
mov
pop
jg
jns
es
push
mov
mov
jg
xorl
repnz
pop
std
clc
js
jno
sahf
shrb
or
sbbl
adc
sti
aas
je
jl
pop
mov
sub
mov
fwait
xchg
aad
push
out
fwait
call
inc
js
ljmp
jns
jg
lret
leave
xchg
divb
sbb
out
cli
pop
fisttps
add
adc
xor
jo
push
daa
mov
cltd
sbb
test
mov
dec
cmp
fs
pop
mov
or
add
or
pop
cli
add
mov
lock
adc
sub
pop
fs
jno
test
repnz
fstps
fdivrs
or
add
xchg
popa
jbe
hlt
inc
gs
shll
pop
mov
addr16
add
lcall
mov
mov
and
push
push
jb
jno
mov
adcb
push
adc
out
dec
pop
rep
mov
out
ret
pop
insl
jmp
xchg
in
lock
adc
sub
sbb
fucomp
insb
sbb
mov
jb
mov
push
cmp
or
repz
sub
add
cmc
push
push
push
arpl
repz
and
out
addl
adcl
cmp
and
shll
fbstp
mov
ret
mov
jle
mov
cmp
add
push
jns
jl
jg
mov
xchg
fsts
sahf
add
xor
fistps
rol
into
mov
ds
scas
inc
sbb
jecxz
cwtl
repnz
push
out
pop
and
out
add
lock
inc
out
test
jp
push
push
lods
decb
xor
repz
inc
idivb
push
cltd
add
inc
hlt
jb
adc
xor
mov
daa
sti
and
sahf
jle
sub
pop
jno
setge
lock
dec
or
fldt
adc
mov
inc
xchg
push
and
loop
jp
stc
mov
jecxz
xorb
sub
or
mov
mov
bnd
mul
divb
add
subb
or
fmul
add
popa
mov
andl
pop
xchg
push
xchg
lea
je
xor
cmpl
sub
loopne
jecxz
add
cli
roll
repnz
push
imul
lock
push
daa
and
je
data16
fldt
out
notb
and
fdivs
sti
pop
cld
je
adc
push
dec
rol
xchg
cmp
clc
ja
cld
jns
or
mov
dec
repnz
negb
xor
fninit
cli
ja
xor
mov
in
mov
dec
test
xor
jge
out
adc
rolb
clc
pop
js
sbb
add
repz
mov
int
icebp
push
push
addr16
lock
sbb
std
pop
sbb
rclb
lahf
xchg
mov
or
or
push
pop
dec
jbe,pt
or
or
sub
push
add
call
xchg
or
xor
or
and
inc
out
stc
repz
in
pop
dec
cmp
sub
xor
out
jnp
sahf
cmp
fcompl
or
push
or
mov
pushf
sbb
loopne
call
push
or
and
lcall
jp
mov
pop
sbb
daa
jae
and
cli
cmpb
inc
rorl
popa
cld
fcomip
adc
push
mov
jnp
and
divl
fs
mov
sbb
jbe
mov
jae
lea
lahf
and
in
mov
in
add
mov
imul
or
repz
mov
xor
addr16
cmp
push
scas
arpl
mov
adc
mov
push
scas
add
shr
lock
jns
push
mov
icebp
xchg
movsb
cld
outsb
rclb
mov
and
sti
push
pop
or
and
pop
mov
jns
xor
out
push
or
aam
xchg
repz
mov
cmc
or
repnz
inc
inc
clc
pop
fisubrs
adc
cmpsb
decb
sub
push
int
xor
push
repnz
fiadds
insb
sbb
jo
in
iret
decb
repz
jmp
aad
mov
insb
test
testl
add
sar
cli
dec
inc
mov
push
sbb
das
das
icebp
jl
xchg
ja
fs
adc
sbbl
push
jp
push
mov
xor
je
jb
cmpsb
sub
ljmp
pushf
jns
and
adc
sti
mov
lods
mov
mov
xchg
sub
mull
iret
or
jo
in
lds
cmp
xorl
add
ret
shl
psubq
movsl
or
faddl
xchg
fbld
jle
cld
js
mov
mov
jg
add
xchg
imulb
testb
fdivrl
mov
push
and
js
pop
cmc
add
das
out
jl
in
test
mov
in
jmp
mov
dec
jg
push
and
cmp
sub
adc
in
orb
or
pop
fistl
into
std
push
sub
clc
add
sbb
and
mov
popa
loopne
jb
add
dec
repnz
add
scas
inc
add
pop
lock
dec
jb
andb
nop
mov
cld
movsb
or
stc
cmp
pop
or
adc
sbb
sub
into
rorb
int3
sbb
jo
inc
fiadds
lods
adc
mov
sarl
fcomp
mov
push
movsb
sahf
enter
add
sti
lock
repnz
or
ret
jp
or
divl
pop
sub
cmc
add
sahf
sbb
ds
cmpsl
repnz
lcall
sub
mov
hlt
nop
jmp
jo
sahf
mov
inc
pop
or
aam
addr16
pop
imul
andb
fdivs
dec
addb
dec
fiadds
icebp
cmpsl
xchg
enter
add
scas
dec
in
add
xchg
dec
daa
jo
sbb
inc
mov
repnz
sbb
adc
adc
cmp
jo
iret
out
sahf
addr16
inc
push
add
sti
xlat
jl
jns
insb
sub
xchg
repz
aad
and
cmp
outsb
add
cmp
cmc
sarb
jmp
sbb
fnstcw
sbb
xlat
or
inc
xchg
sbb
sub
cmpsb
icebp
sbb
push
add
jnp
adc
js
xor
adc
xchg
xlat
aaa
and
sarb
shlb
in
aam
iret
or
push
fistpl
xchg
xor
cmpb
adc
or
lock
xbegin
inc
sub
sub
jp
jne
add
sbb
inc
push
aam
in
or
js
jno
xchg
mov
cmc
mov
lds
adc
pusha
pop
inc
sbb
sysenter
xchg
ds
push
add
adc
lock
fldl
or
mov
lea
inc
add
movsl
ljmp
adc
mov
mov
nop
mov
cmp
lea
out
bound
sbb
ds
mov
cmp
mov
test
inc
add
xor
hlt
xor
mov
pushf
movsb
xchg
xchg
jmp
push
adc
pop
sbb
mov
or
in
mov
lret
sti
add
insb
int3
aam
adc
push
gs
cmc
xor
lret
jo
pop
scas
jecxz
and
or
out
repnz
mov
or
shll
add
jb
ds
push
pop
add
push
cmc
mov
aam
pop
jb
fisttpl
and
dec
add
mov
dec
icebp
xchg
jg
mov
cmc
lock
xchg
lock
jle
add
and
or
ret
mov
xchg
test
test
jb
mov
jl
dec
jg
out
mov
xor
test
mov
bound
mov
outsl
std
add
jns,pn
push
jb
mov
add
add
or
or
jne
or
repz
scas
fiaddl
add
fiadds
add
imul
xor
add
or
push
sar
fwait
bound
or
test
fcmovnb
sbb
and
cs
nop
jp
push
push
sub
stc
xor
repnz
xor
popf
hlt
out
nop
inc
andl
push
aaa
lret
sbb
mov
and
pop
sbb
or
add
stc
add
jmp
xchg
scas
mov
add
bound
push
daa
or
orb
xor
mov
mov
mov
shlb
cmp
jmp
jo
scas
adc
push
xor
xchg
stc
xchg
popa
jle
jbe
rcll
fs
ljmp
test
orb
pop
mov
push
loop
sub
push
push
push
ss
push
repnz
xchg
inc
sub
cmc
ja
push
sub
xlat
aaa
fildl
adc
orb
hlt
lret
in
cmc
idivl
jg
leave
pop
imul
es
pop
mov
mov
lods
test
gs
cmpsb
sub
int3
push
cs
std
aam
daa
jae
aad
or
loopne
jl
sub
cli
mov
push
fimull
out
jo
cld
out
jns
addl
or
mov
ds
insb
nop
popa
jo
cmpsb
loopne
jge
addb
rolb
cmp
xchg
ljmp
jns
sbb
js
xchg
xchg
xchg
cli
fs
mov
rorl
jp
aad
loopne
ret
imul
outsl
iret
mov
movups
shufps
fstpl
les
cli
dec
repz
ficompl
xorb
divb
push
into
cmc
sub
add
cmp
xchg
mov
mull
jno
inc
add
lret
mov
ret
loopne
jo
scas
xlat
sbb
inc
fdivrs
jns
rcrl
sub
push
jg
adc
lcall
sbb
incb
xor
lcall
adc
movsb
jne
inc
ja
add
shr
jnp
jo
push
xor
sbb
or
stos
xchg
fisubl
repz
aam
sbb
cmp
cmp
push
or
pop
or
je
sub
sbb
jno
std
adc
adc
popa
data16
out
movsl
or
repz
repnz
mov
jo
jecxz
in
jle
and
add
push
lret
hlt
pusha
inc
push
outsl
mov
lret
aas
imul
sub
jmp
jnp
fdivrl
and
mov
mov
cmp
lock
jo
test
push
fcomps
cmc
dec
shrb
jmp
add
test
and
mov
add
nop
xor
ja
push
dec
sub
push
sub
ret
lock
sarb
int3
or
jge
add
repz
adc
das
or
out
ss
lea
xlat
pop
jle
pop
cmp
xor
cmpl
xchg
pop
aaa
inc
sbb
or
test
repnz
pop
sbb
pushf
shl
stc
sbb
xor
repz
repz
ss
sarl
testl
fsin
add
sbb
cmc
sub
xchg
ja
stc
icebp
pop
fisttpl
iret
dec
stos
icebp
repz
pop
and
and
je
mov
bound
rorl
mov
in
jns
sbb
mov
jo
test
pop
sbb
mov
sti
cmp
xchg
ss
clc
stos
push
xchg
dec
loopne
clc
xrelease
adc
push
jns
enter
sub
pop
clc
push
xchg
iret
mov
movsl
andl
push
addl
push
lea
mov
mov
shlb
shrb
mov
add
lock
mov
repz
loop
pop
sub
movsb
repz
dec
jp
cmpsl
or
jmp
jnp
roll
xor
mov
insl
cmc
add
and
clc
scas
divl
add
test
lea
bound
outsb
add
add
mov
mov
pop
movhlps
clc
jl
and
dec
sbb
push
and
mov
lret
sarb
dec
je
pusha
repnz
in
addb
xchg
je
push
or
jg
jmp
adc
ret
jne
addl
call
sbb
divb
adc
or
xor
mov
sbb
xlat
fsts
mov
sti
lret
sti
inc
imul
divl
jno
add
test
and
and
dec
leave
sbb
add
add
out
notb
repnz
and
daa
insl
pop
jns
jmp
ja
loop
test
inc
lret
adc
clc
clc
jns
xor
cli
outsl
adc
lea
aam
adc
xchg
call
and
and
xor
or
orb
in
stos
bnd
adc
mov
jmp
pop
repz
xchg
fidivrl
inc
repz
add
shl
in
jl
xchg
jne
rclb
ja
iret
jns
sbb
and
mov
jb
hlt
sarb
pop
xorl
in
jae
adc
pop
sub
movsl
lock
fwait
add
jno
jnp
fwait
mov
jns
pop
cmp
loopne
jo
jnp
bound
xchg
daa
mov
repnz
jne
pop
sub
mov
shlb
add
and
mov
pop
leave
cmp
sti
in
sbb
ljmp
add
cmp
aam
mov
push
inc
arpl
mov
xor
sar
fistpll
test
aad
sarb
scas
mov
rdmsr
adc
rcl
insb
sbb
push
xor
push
fidivs
shl
sub
mov
cwtl
inc
sub
dec
fldt
cmc
mov
mov
andl
adc
xor
lret
cmc
mov
xor
cmp
jb
push
js
mov
fnstcw
lock
aas
js
push
jmp
out
cltd
add
hlt
repnz
popf
test
stos
adc
or
pop
dec
repz
out
adc
or
or
stos
or
mov
xor
xchg
lock
idiv
pop
adc
jmp
insb
or
or
sub
in
mov
add
adc
push
ret
mov
add
in
inc
sub
jg
jae
adc
jns
and
notb
scas
push
fs
addl
testl
adc
daa
jb
mull
cmp
or
rolb
xchg
lds
push
sbb
fcmovnbe
shrl
out
add
sbb
gs
inc
je
cmp
les
jecxz
mov
lret
sbb
pop
clc
inc
movsb
testl
icebp
in
mov
mov
push
sahf
ret
pop
sti
inc
jno
mov
add
inc
addb
add
lret
ja
sbb
clc
sub
icebp
mov
mov
mov
clc
cmc
lds
mov
adc
pop
jns
jecxz,pn
mov
not
scas
xlat
ds
xchg
jl
push
stos
repz
mov
enter
clc
mov
push
sub
jmp
xor
js
push
bound
test
adc
jno
push
std
dec
ss
or
dec
les
sbb
jp
xchg
lahf
orl
push
dec
out
add
rolb
ss
repnz
mov
ret
pop
pop
xor
lea
es
adc
shl
add
adc
sti
mov
jecxz
call
push
jp
add
inc
cmp
roll
inc
mov
add
aad
add
push
sti
cmp
cmc
inc
imul
scas
nop
jns
mov
les
jb
int
addr16
inc
repnz
and
sub
jle
pop
push
iret
push
xor
jnp
sub
jno
sbb
mov
cmp
ja
cli
jae
inc
fdivs
lahf
repnz
xor
sub
repz
jns
cmpsl
aas
pop
loop
test
pop
js
xchg
repnz
repz
sbb
repnz
add
test
imul
inc
mov
lock
inc
push
sbb
add
add
add
test
idiv
sbb
and
scas
xchg
cmp
shlb
clc
sub
jb
imul
dec
add
add
or
adcl
cs
xchg
dec
stc
lret
or
repz
mov
inc
cmp
aaa
aam
push
mov
lret
cs
clc
xchg
fs
test
add
adc
mov
subb
popa
fwait
adc
push
enter
xchg
sbb
pushf
ds
jmp
jne
sbbb
inc
pop
lock
sti
iret
daa
insb
lods
imul
jbe
out
js
dec
jno
cwtl
popa
mov
popf
or
mov
mov
fldt
mull
dec
adc
adc
fucomp
jno
mov
bound
jl
ljmp
loope
mov
repnz
icebp
or
jns
xor
mov
push
scas
cmp
ss
iret
xorl
cmc
hlt
mov
push
push
sub
pop
pop
subl
mov
inc
add
cld
push
sbb
sub
push
jae
cmc
xchg
sahf
loopne
mov
sub
mov
pop
push
cmp
mov
insb
lea
pusha
pop
idivl
loop
mov
jne
adc
add
add
jno
inc
ret
add
mov
sahf
push
incb
jo
pop
fmulp
sar
nop
mov
repnz
je
repnz
ja
mov
stc
addl
cs
jb
dec
jb
scas
js
mov
push
int3
push
xchg
repnz
jne
cmc
add
orb
and
xchg
jg
call
repz
stos
iret
mov
aad
cmpsl
insb
testl
dec
clc
mov
add
lds
leave
jnp
sub
jp
mov
sub
push
cmp
push
adc
xor
jo
repz
in
xor
test
test
mov
out
testl
orb
cmc
sbb
cmpsl
push
rcl
lret
mov
sbb
xlat
aas
fidivs
inc
or
push
stos
daa
or
pop
bound
add
or
cmp
lock
sub
and
cli
xor
or
jb
lea
repnz
xor
lock
mov
push
jl
cmpsb
sti
cmp
mov
or
mov
clc
adc
inc
cmpsb
lcall
sub
push
test
addb
scas
xlat
in
mov
ds
sbb
jecxz
mov
pop
ljmp
imul
loope
inc
shlb
lea
and
lret
and
or
add
rcrb
stos
lds
jno
aad
add
jge
adcl
andb
sbb
jo
ret
daa
add
push
mov
pop
add
mov
sbb
jno
mov
loop
mov
ret
mul
loop
add
or
push
jne
xorb
repnz
sbb
mov
push
push
push
jo
mov
aaa
movsl
ja
push
mov
push
xorl
cmp
or
or
jno
jb
inc
push
xorb
jno
adc
fistpll
push
add
sub
scas
sbb
repnz
push
cmpsl
cmp
rcl
mov
jecxz
mov
and
and
mov
mov
je
push
test
xor
test
mov
mov
cmp
sbb
or
push
inc
and
xor
loop
jge
sub
ror
and
ret
cli
icebp
mov
xchg
std
push
mov
jp
daa
js
jle
nop
xchg
xchg
push
jge,pt
iret
cmpsb
leave
std
out
jbe
mov
mov
jb
adc
add
icebp
cmp
pop
fs
add
cmpsl
xchg
into
movsb
scas
jne
aad
pshufw
and
or
into
repnz
jno
xor
and
xlat
dec
xrelease
xchg
hlt
repz
xor
jp
ss
push
sbb
clc
shll
jl
and
mov
and
bound
cmp
je
das
adc
shl
mov
push
das
pusha
mov
js
mov
pop
adc
mov
mov
mov
cmc
push
repnz
arpl
sar
mov
mov
mov
dec
imul
or
mov
cld
sub
pop
cmp
dec
push
jns
mov
cmp
arpl
sub
sti
sbb
lock
insl
and
jae
and
mov
repz
mov
add
or
add
rclb
js
cmp
jmp
push
and
inc
xorb
jnp
jne
mov
dec
sti
cmp
xor
into
pusha
sub
mov
repz
stc
mov
push
fwait
xchg
loopne
or
ja
or
xorl
daa
clc
mov
pop
push
jmp
lock
ja
pop
jg
xchg
jmp
cld
call
xchg
jle
jl
or
push
add
push
pop
scas
mov
mov
cld
add
repz
daa
add
fcomi
xchg
cmpsb
out
jo
jecxz
add
orl
jns
xchg
repnz
sti
shrl
add
mov
mov
sbb
inc
daa
add
orb
sub
sbb
add
hlt
jl
jne
fisttpll
cmp
mov
mov
or
xor
or
repz
ret
push
xor
push
mov
lahf
je
add
mov
stc
xchg
jno
jmp
outsb
mov
cmc
add
jb
dec
cld
xor
iret
gs
test
jo
dec
ja
adc
dec
int
xchg
pop
loopne
adc
mov
cmp
js
or
mov
shrb
jno
shll
jle
adc
xor
or
xor
ret
xlat
or
clc
push
daa
es
je
mov
aam
outsl
jbe
cli
stc
out
jb
pop
sbbb
aaa
ret
pushf
mov
in
mov
cmp
roll
cmp
mov
cmpsb
pop
and
xor
pusha
or
divl
push
daa
sbb
test
add
sub
sub
insb
xchg
adc
xor
test
add
sbb
or
cmp
lret
jo
mov
jbe
or
fldlg2
dec
loop
sti
cmp
mov
fisttpll
dec
pushl
sarb
push
aad
call
rorl
repz
pop
jmp
pop
jle
filds
aad
loop
test
jmp
adc
das
push
jne
ss
stos
cmp
orl
adc
xor
push
mov
pop
add
aam
testb
pop
add
push
mov
mov
or
mov
wbinvd
xchg
loopne
sub
dec
outsb
mov
shll
ret
outsl
leave
or
int
daa
jle
mov
sbb
sahf
pop
sbb
call
inc
add
mov
mov
out
clc
adc
inc
mov
aad
iret
orl
pop
mov
sahf
pop
xor
inc
fwait
pusha
addb
pop
testb
adc
sbb
jle
mov
icebp
add
sti
repnz
push
cmpb
add
js
roll
adc
push
dec
xor
adcl
dec
test
add
mov
xchg
insl
sti
jp
outsl
icebp
cmp
incb
xor
std
lock
push
cmp
adc
sbb
sbb
decb
repnz
loop
jle
out
pop
incl
sarb
mov
adc
add
or
push
out
add
lea
pop
xor
pop
cmp
mov
inc
push
sbb
push
xchg
sub
mov
sbb
sub
jbe
lcall
shl
lods
fisubl
insb
sbb
and
lock
add
or
push
ja
and
push
xor
and
out
push
add
sub
cmp
sub
jle
data16
or
aam
mov
lock
add
les
je
js
cmpsl
adcl
or
jge
mov
dec
mov
adcb
xor
and
enter
cltd
jns
inc
add
je
add
test
xchg
jg
adc
lds
hlt
sbb
into
or
jmp
lock
and
dec
iret
jnp
sti
dec
mov
push
xchg
out
std
int
add
cmp
dec
cwtl
jge
mov
mov
pushf
jno
std
test
lea
jp
push
mov
adc
imul
xchg
movsl
push
jbe
xchg
dec
push
mov
out
or
mov
dec
and
stos
jo
jno
or
add
mov
mov
outsb
fwait
pop
mov
xor
jne
sbb
inc
cmc
xor
fwait
mov
cli
xchg
mov
push
out
adc
ds
jb
mov
xchg
dec
das
lock
jl
out
std
aad
jo
mov
cmp
or
add
int
sbb
test
push
mov
mov
stc
cmp
je
mov
idivl
cmpsl
lock
jnp
in
add
mov
xlat
adc
xor
mulps
or
jo
fildl
pushf
pusha
or
ja
outsb
sub
dec
jno
add
sar
and
aad
fildl
push
icebp
add
xchg
sbb
mov
push
mov
out
in
andb
jo
ret
incb
test
xchg
xchg
sub
cmp
cltd
inc
nop
mov
xchg
mov
jb
es
fistpl
or
mov
idiv
dec
ljmp
push
sbb
notl
les
add
inc
mov
jno
mov
ss
dec
test
push
ds
mov
std
fsubr
je
pop
test
fsubrs
sbb
adc
ficoms
sti
jge
fidivrl
mov
sub
test
mov
cld
sarl
or
jmp
or
jb
sti
jno
pop
pop
sub
loop
dec
repnz
jle
add
sbb
jo
insl
test
sub
js
mov
bnd
dec
and
stc
cmp
sarb
push
jnp,pn
inc
cli
cmpl
pop
in
std
sti
xchg
and
dec
enter
add
sbbl
or
aas
or
aad
or
mov
pop
bound
subb
fnstcw
jecxz
jo
sub
jmp
jp
sbb
pushf
leave
repnz
clc
mov
aad
sbb
jnp
pop
lahf
je
or
arpl
fistpl
jle
jle
sti
iret
lock
out
adc
scas
fbstp
clc
xchg
iret
adc
lods
aas
repz
or
popf
mov
xor
cmpsl
jb
rorb
adc
js
inc
setnp
sahf
push
test
movl
sub
jmp
je
and
jle
jg
pushf
mov
jnp
push
aas
out
sbb
pop
pushf
rclb
mov
jns
cmpsl
xlat
inc
fisttpll
lock
repz
sub
loope
repz
mov
mov
out
js
and
fwait
xchg
jp
into
nop
mov
adc
and
popl
or
xor
sbb
aam
andl
adc
and
add
lcall
inc
inc
or
or
jno
add
jp
jg
call
in
dec
add
inc
sbbb
aam
jp
sti
icebp
mov
xchg
or
or
and
stos
pop
icebp
push
aad
mov
outsb
clc
jns
jns
int
xchg
loop
hlt
shl
add
xor
scas
out
test
jle
icebp
add
adc
add
jns
xor
lahf
test
clc
pop
stos
daa
jp
inc
add
or
mov
imul
aam
popf
sub
lahf
pusha
sbb
jle
lret
stos
test
xor
je
cmpsl
notb
push
add
push
mov
adc
push
ret
jmp
ds
ja
cmc
adc
and
cmp
outsb
test
jno
push
cmp
sbb
test
popa
rorl
push
jno
hlt
out
push
add
adc
xchg
mov
cmp
jne
xchg
add
inc
lahf
je
or
adc
lock
and
std
jle
idivl
mov
and
xor
ret
shlb
ljmp
xchg
mov
add
push
out
pminub
pop
mov
or
cmp
test
add
cmp
add
mov
push
stos
notb
iret
mov
repz
push
jmp
sub
lock
lret
push
xor
jns
push
jb
clc
xor
inc
orl
test
das
lea
ficoms
sub
or
ja
imul
imul
in
stc
or
or
inc
jecxz
jge
sbb
add
lret
pop
and
pop
cmc
hlt
sub
dec
pop
dec
push
mov
sub
jecxz
sti
xchg
mov
stc
mov
lock
jp
mov
fldt
add
push
dec
negb
cmp
mov
jl
and
jno
mov
mov
addl
pop
repz
mov
or
sub
pop
pushf
cmpsl
sti
mov
mov
addr16
aaa
icebp
stos
sbb
inc
mov
ljmp
xor
ja
dec
adc
cld
mov
and
mov
div
add
add
xchg
inc
lret
je
repz
pop
mov
outsb
mov
inc
fstps
lock
sbb
sbb
ljmp
pop
out
pop
outsl
add
cmpsb
shl
xorb
cmc
inc
mov
repnz
imul
push
aam
int3
or
xchg
test
daa
lret
movsl
cmp
mov
jne
xchg
mov
mov
dec
add
lea
cmc
add
xchg
lret
dec
fsubp
sbb
push
and
stos
sti
push
dec
je
test
bnd
ss
in
sub
jp
mov
test
call
ret
add
sti
lods
push
adc
test
out
icebp
test
or
push
cmc
xor
adc
gs
rcl
pushf
mov
xor
aad
inc
or
ja
and
lock
das
adc
sbb
push
movsl
les
push
test
sti
lret
jge
jecxz
int
pop
push
int3
or
aad
out
movsb
rclb
adcb
xor
add
cs
lods
push
dec
xchg
sbb
mov
out
jns
add
lods
fidivrs
orl
mov
clc
nop
bound
sbb
outsl
mov
gs
loope
inc
cmp
push
in
xorl
sti
div
push
sbb
cmp
and
mov
jb
jo
inc
sbb
jp
mov
aas
inc
jnp
mov
cmp
ljmp
jno
inc
jl
adc
push
imul
mov
or
sbb
sahf
inc
add
add
xor
pop
lea
in
cli
rclb
test
mov
jbe
sub
push
repnz
mov
xchg
sub
int
std
test
test
jnp
clc
fistpl
pushl
test
mov
mov
sbb
mov
jge
jp
adc
mov
pop
jno
push
popa
in
lcall
add
lock
push
pop
pop
mov
lds
xor
imul
jg
pop
aad
sub
add
ja
test
sbb
clc
push
jne
and
push
mov
jp
sbb
clc
push
jl
mov
adc
aas
aaa
idivl
lods
mov
stc
pushl
adc
xlat
dec
shlb
jno
jp
push
mov
pop
mov
clc
xor
pop
jg
icebp
test
or
idivl
aas
add
dec
hlt
xor
cmp
inc
pop
repnz
mov
repz
fcomi
adc
movsb
sub
enter
pop
push
ret
jns
jp
stos
or
mov
pop
and
xchg
jle
repnz
xor
test
and
jecxz
imul
inc
test
jb
adc
or
mov
cli
mov
stc
mov
pop
pop
add
test
jae
xchg
repz
rcll
sub
icebp
mov
or
mov
jo
sti
ja
jg
mov
xor
xchg
fiadds
mov
pop
jno
mov
outsb
mov
jnp
or
inc
mov
clc
mov
xchg
fwait
push
movzwl
or
or
sti
cmp
repnz
jge
cmp
add
push
psubb
dec
mov
cmp
sub
dec
cmp
mov
xchg
repnz
mov
sti
and
sub
add
lock
jno
mov
cli
and
fs
xrelease
and
hlt
ret
pop
adc
jl
jmp
pop
outsl
sbb
mov
jge
push
aad
icebp
cmp
idivl
mov
add
enter
jns
gs
or
push
das
xchg
imul
cmc
mov
lock
pop
loope
lea
adc
push
dec
popf
xchg
roll
adc
pop
scas
adc
cli
aad
sub
xor
xchg
call
cli
addl
lock
jecxz
btr
xchg
mov
xor
cmovns
and
xchg
mov
repnz
xor
push
jnp
sbb
xchg
mov
mov
adc
addr16
xchg
testb
test
jecxz
or
fiadds
push
pushf
pop
or
testl
out
jecxz
mov
cmc
jo
cmp
ss
ss
jmp
push
test
or
imul
or
stos
dec
mov
orl
test
cwtl
stos
insb
inc
repnz
sub
movsb
dec
into
jno
sub
and
ret
pop
xchg
pop
sub
inc
popl
cmc
js
mov
pop
jb
imul
push
jge
push
sbbl
jl
repnz
fdivrs
xchg
inc
push
xchg
dec
lea
jl
push
testl
sbb
cld
add
test
es
sub
push
or
or
or
xor
addl
xchg
and
or
jns
aaa
test
cmpsl
sbb
ja
or
je
xor
iret
add
out
push
dec
pop
xchg
lock
mov
xchg
and
pop
mov
mov
xrelease
mov
jp
and
shl
jno
repz
add
enter
pushf
cmc
sub
xor
sbbl
mov
push
rcll
sub
or
xchg
pop
cmpsl
nop
addl
fisttps
mov
xchg
add
hlt
xor
das
lret
repz
jecxz
and
xchg
stos
cmp
cmp
fwait
cli
repz
cmp
out
repnz
stc
add
adcb
xchg
in
ss
cmc
cmp
pushf
push
cli
or
inc
xchg
jo
testl
je
jno
xor
add
dec
dec
xor
stc
js
aaa
sbb
enter
mov
push
cltd
call
mov
xchg
push
icebp
rcll
lret
std
push
fstpt
out
addr16
fisubl
add
xor
pop
mov
dec
sbb
sarb
nop
in
stos
sbb
xchg
jno
pushf
push
mov
mov
js
sti
cld
divl
or
xchg
mov
sub
add
addl
jge
jle
mov
repnz
mov
fsts
pop
jne
addl
pop
fnstcw
add
addr16
pop
lock
or
out
arpl
pop
mov
mov
jnp
mov
mov
mov
jo
hlt
sbb
ret
mov
popf
inc
sub
sarb
mov
dec
sti
or
rcll
out
or
aaa
or
pop
sbb
pop
mov
sahf
jl
mov
adc
push
sbb
jo
xor
and
repnz
ljmp
lods
xor
fcmovnbe
mov
pusha
jg
cmp
fdivs
mov
lret
dec
pusha
icebp
movups
xorl
sti
movl
jb
clc
cmp
lcall
lods
xchg
ja
push
in
adc
sbb
sti
inc
mov
add
inc
or
xor
stos
rorl
sub
cmp
lock
out
inc
or
xor
in
test
out
mov
fstps
dec
repz
das
loopne
fsubr
movsb
or
xor
cmc
pop
add
push
add
push
test
mov
repnz
push
clc
cltd
pop
add
mov
jl
jge
push
sbb
jnp
fscale
ds
sub
push
jle
cli
fistpll
es
lea
jo
push
fnsave
js
or
jo
icebp
lea
cmp
cld
sbb
je
into
dec
es
pop
lock
mov
icebp
lret
xor
nop
mov
mov
push
repz
xlat
mov
or
fldcw
repnz
pop
mov
cmp
inc
out
movups
mov
repz
xor
mov
repnz
add
aad
dec
addb
fcoml
cmp
stos
mov
xchg
cwtl
nop
sbb
or
pop
sbb
cmp
or
hlt
out
sbbb
jge
popf
adc
enter
sbb
clc
fwait
pop
imul
xchg
sub
insb
enter
inc
adcb
xchg
mov
int3
aam
xor
mov
sbb
ljmp
fisttps
sbb
sti
xchg
nop
test
or
adc
adcb
cmp
cwtl
xlat
ds
mov
out
jge
or
test
add
pop
add
aam
stos
jg
adc
cmc
int3
mov
xor
xchg
dec
testl
and
mov
cmp
fwait
int
xchg
in
repnz
lds
repz
pop
pop
inc
andl
sbb
add
shr
cld
add
sbb
xchg
mov
xor
or
lods
mov
orl
adc
xchg
shlb
xor
or
fdivs
mov
ret
orl
sbb
in
mov
add
push
dec
int
or
add
and
or
mov
jp
pop
adcl
hlt
jb
jb
jmp
add
pushf
mov
or
add
dec
pop
iret
pop
mov
ljmp
stos
rolb
adc
cmp
push
xor
or
cmovp
jae
sti
sbb
add
xor
fwait
push
mov
jb
xchg
jae
in
cmp
repz
cmp
arpl
addb
bnd
popa
jne
pushf
fmuls
mov
fistpll
push
gs
push
rcll
pop
fwait
aam
lret
mov
stos
incb
and
bound
adc
xor
movsb
sbb
cmp
cli
lock
mov
std
push
adc
mov
jnp
jb
mov
ja
stos
out
jl
shll
fcomps
pop
ret
imul
fidivl
mov
addb
mov
push
adc
xchg
shl
mov
sbb
add
cmp
or
fwait
test
jne
or
scas
dec
aam
sbb
jo
push
and
incb
jo
jae
push
inc
repz
outsb
repz
clc
divl
ret
es
xchg
sbb
roll
outsb
sub
sbb
jge
mov
fstpt
out
pop
push
dec
test
sti
pop
sbb
mov
adc
pop
add
lods
jnp
das
js
mov
xor
push
fprem1
repz
fwait
xor
incb
mov
mov
inc
push
sbb
or
push
out
add
jmp
sub
jno
pop
and
jge
lret
ss
jp
push
and
punpckhbw
inc
push
movd
dec
xor
cmp
test
js
sbb
ret
or
inc
fidivs
lds
div
inc
pop
xchg
loope
cmc
or
or
iret
lds
push
mov
testl
ljmp
hlt
testl
sbb
sub
adc
addl
xchg
hlt
daa
fucomp
clc
jne
and
xchg
xor
mov
or
std
in
dec
imul
mov
add
pop
ficoms
movsb
jne
cmc
xchg
xor
icebp
test
popf
push
or
push
stc
in
sbbb
fistpl
add
sub
insl
in
jle
repnz
ret
test
hlt
sub
or
outsl
or
shl
int
sbb
popa
hlt
mov
add
or
push
decb
sti
adc
repnz
outsb
pop
add
jbe
mov
lret
mov
inc
push
xlat
hlt
pop
jns
sbb
fdivrs
jle
mov
cwtl
dec
xchg
decb
dec
adc
repz
jo
call
or
dec
pop
aaa
add
incl
das
mov
pop
fildl
and
mov
mov
mov
lock
sub
js
js
pop
jno
test
sar
shll
jne
push
popf
in
sub
jne
pop
cli
fs
inc
insl
add
add
add
cli
adc
lds
and
xor
fwait
daa
add
xlat
pop
sti
shlb
ss
lock
je
mov
mov
out
clc
xchg
enter
std
js
rcrb
jle
jb
push
sbb
icebp
pop
xchg
sarb
das
mov
fmuls
pop
cmc
cmc
lods
sub
add
mov
addr16
xorl
lret
pop
stos
push
mov
lock
adc
fistpll
incb
sbb
or
pushf
enter
mov
repz
push
and
cmpb
enter
jbe
xor
pop
push
sbb
int3
push
jecxz
mulb
push
jb
or
jge
loopne
mov
in
dec
jnp
pop
out
andb
jno
popf
and
jl
clc
mov
out
mov
push
sti
sub
repnz
jns
hlt
popf
subl
or
pop
and
dec
fwait
add
push
jb
dec
filds
lods
dec
jb
xor
push
adc
jns
fcoms
mov
lea
sbb
hlt
test
and
js
xor
adc
pop
xor
js
icebp
pop
fistps
xchg
pop
std
dec
add
push
je
or
js
sub
mov
loopne
test
icebp
sti
xor
push
pushf
adc
push
jo
sub
inc
dec
cmc
fwait
xor
aas
cltd
jl
pop
add
mov
and
nop
jne
inc
lock
repnz
or
dec
clc
jae
shll
mov
stos
ret
sti
mov
iret
imul
and
sbb
and
xlat
dec
divl
mov
outsl
cli
and
daa
insb
in
mov
jp
mov
scas
mov
loop
sahf
lea
or
in
std
mov
repnz
jns
cmp
cmc
popf
sbb
gs
xor
cmp
repnz
mul
jp
add
aad
or
lock
xchg
out
sub
add
adc
dec
dec
notb
xlat
push
ljmp
mov
jnp
std
xchg
or
popa
lret
dec
cmc
xchg
xorl
mov
inc
jmp
je
lods
shlb
bnd
jge
or
xor
jo
in
dec
mov
rolb
cli
nop
xchg
fdivs
adc
or
add
dec
pop
cmp
xchg
sti
cmp
repz
lret
test
aam
mov
add
mov
xchg
shr
push
lea
repnz
add
jb
jmp
and
jg
adc
jecxz
cmp
mov
xchg
xchg
push
sbb
pop
scas
test
in
cli
ja
sub
into
and
add
and
dec
sarl
adc
cmp
sub
stc
outsb
sti
std
push
rol
pop
mov
mov
int
mov
inc
orl
push
sarl
mov
in
mov
loopne
or
push
xchg
stc
push
push
test
mov
pop
xchg
add
or
pop
push
push
repnz
jp
fwait
repz
xchg
iret
add
jae
jge
pop
int3
add
adc
fistl
adcl
jne
sbb
mov
adc
mov
or
ljmp
hlt
mov
popf
sti
sbb
cli
lock
jb
addr16
pushl
sti
mov
into
dec
clc
inc
repz
clc
add
mov
lods
lahf
lret
test
add
loope
jge
mov
mov
cwtl
movsb
outsl
push
addr16
xchg
pop
andl
push
repnz
addl
insb
negl
int
xor
jb
loop
movb
or
mov
shlb
sub
repnz
cli
sub
sbb
push
or
cmp
push
mov
inc
adc
pop
add
ror
jnp
inc
lcall
mov
jns
mov
pop
sbb
xchg
data16
jl
dec
add
cmp
inc
or
jecxz
repz
repz
into
pop
popf
push
mov
push
push
and
push
adc
jg
int3
rcrb
dec
adc
xchg
mov
mov
jecxz
xchg
jne
clc
sub
pop
mov
sbb
push
fstl
jb
add
mov
lods
lds
mov
cmovle
or
data16
add
repnz
js
push
push
outsb
lea
push
add
jge,pn
push
sbb
test
jno
add
xchg
popf
sub
je
bound
mov
jns
push
rep
or
add
xor
sub
push
daa
or
jg
fwait
pop
ja
call
scas
testb
dec
mov
shr
pop
out
repz
scas
push
sbb
hlt
mov
lds
jno
lahf
xlat
sub
or
outsl
icebp
add
repnz
popa
or
clc
dec
inc
jge
hlt
pop
sti
sub
xchg
sub
jbe
scas
cmc
xchg
jnp
out
or
sbbb
lock
cmp
repnz
or
jbe
movsl
dec
jne
xchg
push
cmc
push
sub
mov
or
pop
pusha
repz
sbb
xor
cli
jo
sbb
into
mov
fnclex
pop
mov
stos
repnz
dec
add
push
pop
hlt
inc
fcompl
add
inc
test
mov
cs
or
mov
into
fisubrs
hlt
sbb
lret
pop
popa
jne
jnp
ja
cmp
push
jbe
xchg
sub
sbb
testl
sti
arpl
and
mov
test
in
std
ret
push
mov
xor
test
pop
aad
sub
xor
xor
jecxz
jb
rol
in
or
fldt
xchg
push
repnz
jno
xchg
dec
sbb
pop
pushl
mov
aad
aam
adc
add
push
loop
aam
loopne
fs
popa
adc
std
adc
inc
shlb
push
mov
pop
add
sahf
or
js
pop
stc
adc
dec
pop
mov
sbb
das
jnp
inc
clc
xor
in
jge
add
or
add
testb
sub
xchg
sbb
test
sar
mov
add
rcrl
popa
xor
and
xlat
adc
jns
and
jg
push
inc
mov
and
xchg
mov
jns
jg
jl
cmc
fstpt
mov
test
jo
mov
iret
sub
int3
fwait
icebp
imul
jns
sbb
mov
mov
mov
jns
cmpsb
jnp
sub
test
push
stos
lret
dec
mov
xor
mov
ss
adc
xor
scas
push
cmc
mov
sti
jno
in
xor
or
add
aas
pop
jge
add
dec
mov
mov
jp
cmp
pop
pop
push
xchg
push
sub
adc
adc
dec
xor
leave
movsb
js
stc
div
shll
or
inc
sahf
mov
aad
in
mov
call
mov
lahf
xchg
dec
xor
jno
push
or
bound
push
mov
mov
test
jo
jmp
inc
sub
dec
xlat
aad
repz
outsb
icebp
xor
std
xchg
fisttpll
inc
cmova
mov
mov
dec
out
dec
aas
jno
inc
jle
xor
push
push
repz
movd
fistl
popl
repnz
push
sub
test
or
mov
cli
lds
movl
push
pusha
jns
cltd
cmp
jmp
jnp
mov
lock
pushf
call
insl
xor
jne
mov
ret
addb
addr16
scas
out
clc
jg
cli
lea
adc
add
xchg
cmp
int
enter
test
add
or
out
fcomi
leave
xor
sbb
std
jl
subl
xchg
scas
in
out
xorb
test
push
mov
jne
sbb
xor
adc
jns
test
cmp
adcb
adc
xchg
sti
sti
stc
push
sbb
jecxz
in
cmc
or
adc
shlb
inc
push
pop
insl
inc
dec
lea
push
stos
mov
add
mov
xor
clc
aad
hlt
mov
cmp
call
xor
push
mov
andb
add
sub
iret
adc
mov
jno
cld
aas
dec
sti
push
add
inc
mov
out
movsl
orb
shll
or
adc
push
mov
push
es
pop
jl
mov
xor
add
roll
inc
bound
mov
enter
sbb
jp
repnz
inc
mov
push
jns
sub
inc
repz
jecxz
rcrl
adc
add
add
xor
inc
lahf
sbb
pop
cmc
pop
jmp
inc
cmp
xor
sbb
fadd
xor
jns
mov
fsubrs
and
and
or
fnsave
xor
insl
sbb
pop
icebp
sub
xor
mov
xlat
lods
repz
mov
sub
cmc
or
mov
and
jnp
inc
adc
xor
lahf
pop
jge
orb
xchg
and
add
shl
pop
push
jnp
fcmovnb
call
and
push
aaa
or
outsb
xchg
adc
or
sub
or
mov
add
xor
mov
push
lret
xor
dec
cli
movsb
decb
mov
and
add
aam
addr16
mov
jl
dec
nop
rcr
sub
or
repnz
shlb
cmc
lcall
cmc
pop
enter
add
icebp
sbbb
mov
divl
or
aad
sub
mov
sbb
add
sti
data16
sbb
push
push
mov
jno
adc
gs
in
xor
lea
popa
and
testb
sub
lahf
stos
jge
pop
daa
lea
cmp
or
mov
mov
repz
icebp
or
xor
mov
mov
or
and
test
pop
jns
mov
leave
sub
orl
jne
mov
cltd
rep
aas
jo
pop
cmp
xchg
pop
pop
je
std
sbb
icebp
jg
ret
sahf
repnz
jno
pop
push
aad
or
lds
nop
and
push
cmp
nop
cltd
jg
push
add
inc
lods
mov
jl
and
pop
cltd
xchg
fisttpll
xor
loop
jp
lea
data16
push
xchg
and
jae
sbb
pop
mov
sbb
inc
mov
loopne
inc
shll
mov
mov
cmp
add
notb
jno
xchg
xrstors
jns
jo
cltd
pop
outsl
push
push
pop
push
and
repnz
mov
cli
ja
mov
fistpll
icebp
and
and
mov
add
mov
xchg
adc
inc
lcall
jp
push
ud2
cmp
jbe
idivl
mov
add
test
and
dec
cld
ret
mov
in
enter
sti
dec
jl
push
xchg
jns
and
call
lds
or
cmc
data16
bound
popa
mov
icebp
mov
sub
popa
adc
addl
or
push
jns
movsb
pop
xor
push
sahf
enter
sub
and
faddl
mov
outsb
cmp
jo
xchg
mov
jno
lods
dec
xchg
mov
jle
sbb
push
adc
sti
fbstp
clc
arpl
xchg
cmc
mov
jo
loope
sbb
sahf
call
or
jno
fcoms
sub
or
pop
push
pop
fwait
add
int3
testl
mov
jbe
mov
pop
add
xor
repz
add
rolb
and
inc
jbe
decl
stc
and
mov
xor
dec
cmpsb
adc
je
jmp
mov
sub
jae
mov
add
enter
stc
push
loopne
mov
sbb
aad
push
jecxz
bound
stos
and
std
mov
and
fcompl
add
lock
std
aam
sbb
xchg
punpckhwd
ss
push
rcr
mov
adc
mov
sti
lahf
or
mov
xor
jl
mov
stc
test
cmpsb
pop
jge
or
and
lret
jnp
mov
stc
sahf
cmc
imul
int3
jb
xor
jns
shl
xchg
adc
add
xchg
cmc
out
jns
jp
mov
adc
xorb
fwait
push
mov
out
sbb
xor
mov
lods
ret
sub
mov
in
sbb
dec
jge
push
sarl
lods
cli
repz
jg
enter
mov
or
dec
lods
std
or
ss
shl
and
divb
add
adc
jns
repz
popf
ret
inc
mov
aas
sbb
es
push
ftst
or
add
add
or
mov
jmp
mov
push
xchg
pop
repz
mov
test
jmp
adc
push
test
push
and
push
xchg
or
lret
hlt
aaa
xchg
fisttps
jle
idivb
mov
mov
hlt
xchg
adcl
aad
and
jge
jle
ss
push
repnz
jg
dec
fdivp
mov
jle
sbb
pop
lcall
adc
xor
cmc
push
jnp
push
ss
sub
and
int
out
mov
mov
sub
xor
add
int3
push
jns
scas
adc
repz
mov
cli
in
add
cmp
dec
stos
test
mov
shrb
ret
daa
insb
push
adcb
sti
pop
jg
mov
sub
iret
or
inc
add
push
mov
test
mov
push
or
sbb
cli
inc
mov
stc
shll
aas
in
cltd
je
lock
fiaddl
mov
incb
out
sub
call
or
xchg
leave
pop
imul
add
mov
lock
rorb
mov
sahf
sub
movsl
outsb
push
add
sti
repz
fildl
mov
xchg
popa
inc
nop
cmp
jmp
xchg
adc
cltd
test
dec
push
repnz
repz
jl
jo
xchg
add
adc
add
sbb
call
rep
lods
iret
jmp
jge
sbb
push
mov
fcomps
xor
adc
cli
cmp
cmpl
repz
or
add
mov
jge
jmp
jp
ljmp
jb
adc
test
fisttps
cmp
repnz
sbb
ljmp
mov
adc
dec
fsubrl
and
sti
mov
jmp
dec
jae
ret
mov
jbe
aad
jno
aas
add
fcmovnb
add
mov
and
decl
repz
pop
jb
push
repnz
pop
push
pop
dec
pop
xchg
stc
pushl
sbb
imul
fdivs
adc
test
add
pop
ss
or
pushf
mov
or
gs
or
push
push
dec
fsubl
mov
pop
cmc
js
adc
and
outsl
int3
jnp
or
inc
pop
lret
jmp
pop
pop
xchg
jno
sar
orl
sti
jns
push
divl
add
push
xor
mov
pushl
pop
cmpsl
cmpb
mov
push
ja
push
xchg
jg
or
testb
leave
inc
cmp
repnz
loopne
cmp
mov
push
in
ss
movsl
mov
ljmp
inc
pop
dec
stc
cmc
push
daa
adc
pop
push
bound
jns
xchg
div
jns
cmp
or
jecxz
cs
inc
jge
outsb
adc
push
jnp
mov
mov
sbb
adc
jp
in
add
data16
and
ja
and
xor
jbe
add
lods
adc
xor
xchg
push
testl
lahf
dec
fmuls
mov
fidivrs
test
or
jnp
repnz
inc
aam
jp
mov
mov
or
clc
add
lds
adc
cmp
lods
ds
sbb
sub
pop
adc
sar
mov
add
add
jno
call
add
sbb
or
fldenv
and
or
icebp
int
adc
and
pop
cmp
das
add
test
adc
adc
inc
bound
pop
imul
out
and
je
xchg
fidivs
repnz
or
add
mov
jo
push
mov
pop
imull
andl
ss
jle
jb
mov
clc
lods
clc
dec
lcall
xor
jo
mov
xchg
stc
sub
and
pushf
enter
xchg
mov
xor
pop
cli
jae
push
jp
clc
push
jo
jmp
cli
lret
xor
push
jl
mov
nop
xor
andl
or
xor
lcall
adc
push
ror
or
jo
fwait
inc
ljmp
aaa
adc
repz
cmpsb
jo
cmp
mov
out
jbe
clc
mov
or
mov
sub
pushf
push
lahf
sub
fists
xorb
aaa
pop
shlb
xorl
or
leave
jnp
sub
pop
sbb
xchg
and
pushf
cmp
jnp
cmp
adc
scas
aad
jbe
inc
mov
mov
test
jb
jl
add
xor
mov
pop
add
loop
jno
jecxz
adc
rep
mov
add
mov
arpl
stos
enter
push
pop
dec
cmp
mov
enter
repz
das
push
imul
repnz
loope
int3
scas
cmp
cmp
test
mov
nop
sub
cmpsb
jb
or
or
sub
outsl
cmc
xchg
inc
mov
sbb
call
push
mov
fwait
rolb
pop
jo
rorl
divl
pop
jmp
fisttpll
sbb
out
or
mov
jo
adc
dec
xchg
test
cmc
or
subb
nop
lret
std
dec
or
mov
adc
mov
push
cli
or
cli
cltd
mov
testl
fisttps
repz
enter
or
xchg
sti
ss
inc
testl
mov
push
dec
repz
sti
loope
xchg
mov
cmpsb
sub
jns
clc
xchg
shll
and
cmp
stc
sbb
fdiv
scas
inc
std
pop
and
sbb
add
xlat
add
sbb
aam
dec
sbb
push
xor
push
shl
test
fcomps
and
divl
pop
cmp
inc
leave
sti
mov
jns
ljmp
jl
rcr
pop
and
mov
xchg
sub
xor
popf
pop
mov
xchg
dec
cltd
or
hlt
enter
sub
jge
ja
add
sbb
clc
dec
test
add
out
jl
nop
jns
mov
lods
mov
les
ret
add
push
mov
xor
ffree
jnp
cmp
dec
mov
mov
hlt
or
pop
fnstsw
dec
imul
clc
and
cmp
mov
inc
jg
push
xchg
cmp
sbb
add
pop
mov
stos
push
mov
loope
shll
push
push
stc
inc
clc
xorb
je
or
addl
psrlq
mov
add
inc
cli
inc
jmp
sub
and
repz
mov
xchg
cmp
jns
out
and
lahf
and
lcall
xchg
jno
mov
shlb
jno
rcrl
cmpsl
jp
mov
jge
jle
xchg
nop
ds
and
fildll
jl
push
or
cld
stos
mov
jne
add
lret
or
inc
data16
xor
xchg
add
dec
add
push
aam
pop
bnd
xchg
push
idiv
loopne
cmp
out
mov
cmp
or
sbb
popa
fwait
mov
sti
and
jns
jo
fildll
out
negb
rorl
jnp
pop
movsl
xchg
dec
cld
push
insl
out
jp
mov
js
fildll
jae
mov
push
setae
sub
jmp
push
bound
clc
hlt
stos
cmp
sti
aaa
add
pop
imul
add
cltd
push
cmpsb
or
out
push
jbe
add
movsl
psubb
or
inc
loop
or
or
cld
push
sti
fsubrl
cmc
stc
sbb
jns
push
clc
mov
or
jns
sbb
inc
jo
fwait
repz
adc
jl
test
add
popl
and
jne
cmpsb
sub
xchg
mov
cs
jno
test
mov
or
aaa
sar
pushf
fdiv
adc
js
mov
push
orl
ja
mov
or
mov
push
push
push
add
jno
orl
je
push
es
mov
xlat
ja
xor
pop
mov
adc
rclb
fcoml
xchg
ja
jle
addr16
test
jge
sub
leave
cmp
clc
push
mov
jno
mov
xorl
mov
jl
xchg
cltd
test
jecxz
xrelease
cmpsb
aad
dec
cmp
lret
sbb
cmc
icebp
push
add
adc
mov
mulb
fdecstp
or
cltd
xorb
push
test
loopne
jns
dec
ss
gs
je
add
mov
sub
adc
out
push
cwtl
js
imul
mov
push
aad
cmpsl
insb
stc
add
std
add
push
rolb
pop
fldcw
mov
cmpb
mov
js
pop
pushw
or
push
mov
fcomps
lock
popa
repz
or
mov
js
movsb
stos
js
jo
neg
scas
sub
jecxz
mov
jns
insb
inc
mov
jno
pop
cmp
loop
push
jg
shrl
mov
sub
cmp
cmp
es
or
aam
lahf
jo
jnp
repnz
js
push
sbb
cmpsl
adc
addb
fildl
fistps
adc
cmpsb
xlat
div
call
and
nop
clc
mov
add
jg
scas
mov
movsb
push
xor
test
sbb
adc
inc
aaa
movsl
sub
lret
int
lcall
js
repz
enter
mov
pop
clc
and
rcll
pop
jno
punpckhbw
das
rclb
push
jle
andl
cmp
push
scas
mov
jo
cld
shrb
ja
or
fnstcw
jmp
xorl
jp
sbb
in
outsb
out
cmp
test
test
sti
ficompl
jns
jne
xchg
xor
ljmp
mov
or
mov
mov
dec
mov
pusha
pop
and
or
push
adcl
jno
pusha
jno
nop
test
or
int3
mov
cwtl
or
pop
push
adc
sbb
jno
or
repz
movl
pop
and
inc
adc
add
int
lods
rcrb
into
add
es
inc
pushf
and
add
push
sbb
xchg
or
sti
push
sub
std
xchg
dec
movb
adc
stos
cmp
mov
dec
mov
jnp
add
cmc
movsb
mov
movd
xchg
js,pt
repnz
enter
sub
fbstp
add
xor
clc
lock
mov
lcall
jno
pushf
adc
fidivrs
sub
movsl
je
pop
sti
faddl
insb
cmc
hlt
movsl
or
nop
mov
lret
push
xor
lock
les
repnz
pop
adc
movsl
loope
insb
pop
mov
or
loop
repnz
or
jns
mov
dec
inc
popa
or
out
mov
jl
push
ss
cmc
jle
sbb
inc
outsl
adc
lds
sbb
insb
xchg
je
dec
mov
sub
pop
push
std
andl
adc
lea
mov
xchg
adc
bound
insl
cmp
ss
and
mov
je
andl
pop
jae
cmp
push
xchg
sub
stc
add
push
jo
cli
notl
sub
xor
or
mov
or
js
mov
pop
sub
xor
js
ja
jns
and
loope
aad
fidivl
aam
lret
stc
scas
jo
cmpsl
xchg
mov
xorb
or
add
test
cmp
cmc
add
aas
scas
cli
inc
ja
fbstp
pop
or
ret
cmp
xchg
fwait
icebp
dec
push
push
push
das
adc
xor
aad
arpl
sti
es
gs
repz
push
mov
pop
push
add
xchg
or
jne
pop
movsl
hlt
sti
cmp
push
mov
scas
mov
or
or
pushf
aad
inc
add
cmpsl
jno
cmp
ja
inc
aam
cmp
lock
jle
cmpsl
aaa
cld
scas
loope
mov
or
jp
repnz
fistpll
dec
cmpb
sub
xchg
jnp
mov
emms
cmp
decl
daa
outsl
mov
add
cmp
inc
lock
test
mov
aad
xor
repz
xchg
clc
repz
mov
sub
xchg
or
insb
cmpxchg
jns
sbb
test
push
jnp
or
loop
and
cld
sbb
push
adc
dec
clc
mov
add
mov
incb
nop
loope
pop
std
push
cld
add
call
int3
rorb
ljmp
out
mov
lock
inc
pop
mov
mov
mov
pop
add
pushf
sbb
ret
inc
je
mov
sub
dec
inc
fisubrl
xor
sti
mov
into
sar
clc
fildl
sub
cmp
add
test
jle
cmpsl
mov
mov
hlt
std
xchg
sbb
add
sti
push
jmp
xorb
nop
int
mov
mov
adc
xchg
sbb
jne,pt
pusha
addb
dec
icebp
inc
add
sbb
mov
add
iret
fwait
add
bound
in
pop
inc
testb
sub
lret
testl
mov
push
stc
cmc
xor
pop
mov
mov
divb
je
negl
cltd
data16
subl
jg
lahf
adc
daa
clc
sti
ret
dec
push
negl
cmp
push
cmp
or
orl
orb
nop
aam
mov
push
cmp
vmptrld
mov
push
or
jo
cld
in
test
lock
mull
xchg
mov
test
out
lock
adc
adc
sti
cmp
inc
hlt
repz
sbb
jb
mov
repnz
lock
mov
jle
div
leave
add
ss
push
test
or
dec
xchg
out
je
imul
test
dec
out
or
jo
jns
and
pop
cmc
pop
iret
fdiv
mov
fcmovb
hlt
fistl
mov
push
mov
cmp
movl
pop
shll
xor
shlb
xchg
mov
sti
sub
sbb
cmp
adc
jae
call
int
jo
lods
xchg
mov
mov
sbb
lcall
add
sahf
mov
and
test
jo
js
testl
leave
repnz
sub
jo
mov
push
or
mov
mov
jge
cltd
scas
pop
adc
repnz
mov
jb
push
loope
loopne
jge
xchg
pop
pop
cli
push
xchg
or
push
dec
data16
xor
popa
xor
js
jno
push
xor
clc
mov
push
xchg
or
xor
xor
xchg
or
mov
insb
xor
jae
aam
jp
and
int3
xor
cld
hlt
cld
or
push
jae
pop
adc
daa
cmp
or
js
adc
add
jo
rclb
sti
jmp
add
orl
cmp
daa
es
pop
andb
mov
add
pop
enter
sbb
dec
xchg
iret
std
xlat
pop
scas
ja
out
push
xor
or
iret
imul
adc
xchg
xchg
pop
or
or
dec
xchg
ret
jae
stos
clc
stos
or
jno
fdivrl
xchg
testl
movsl
repnz
nop
fsubrl
adc
mov
jns
pop
cmp
add
push
fwait
and
xchg
repz
pop
gs
jns
and
add
clc
sub
fcomip
mov
push
jle
push
pop
cmpsb
fcmovnbe
adc
pop
inc
pop
imul
adc
mov
shll
leave
repz
enter
outsb
or
sbbl
popa
ja
cli
lock
gs
lret
or
mov
jne
xor
imull
and
xlat
xchg
je
jle
loopne
pop
xor
mov
out
lods
pop
repz
xchg
es
insl
adc
adcl
add
popa
sti
lds
adc
jp
adc
ret
jb
cmp
sti
cmp
adc
lods
aas
push
sub
adc
and
pushf
push
push
pop
push
lcall
pop
add
shll
test
xchg
pop
mov
lock
fisttps
std
inc
jmp
pop
sub
icebp
push
repnz
pop
aas
adc
aad
movsb
std
cld
clc
iret
jle
xor
fistpll
into
jle
jnp
mov
clc
pusha
pop
adc
cmpsl
int3
jns
mov
jo
xchg
xchg
fprem1
int
adc
imul
xor
ficoms
ja
jbe
and
js
lods
xor
jle
push
mov
imul
outsb
icebp
test
mov
in
std
and
add
ljmp
mov
ja
imul
mov
ljmp
cmc
insb
iret
jo
cmc
xchg
inc
icebp
jae
daa
push
insb
mov
nop
pop
icebp
jmp
mov
lods
icebp
push
dec
repnz
sub
outsb
xchg
add
sarl
push
push
lods
imulb
mov
rcrl
stos
push
stos
movb
or
or
iret
cli
pop
lds
repnz
adc
or
mov
jle
mov
add
cmp
std
ror
sahf
and
loope
out
fcoms
insl
push
clc
lcall
xor
xor
jge
iret
fcmove
stc
adc
popf
add
mov
push
jbe
push
bound
jno
movsl
sti
sbb
mov
jmp
cmpsb
pop
or
fildl
push
cmp
sub
hlt
jo
adc
nop
imull
out
adc
pop
mov
std
pop
or
pop
mov
pushf
push
in
adc
or
push
ficoms
pop
andl
cmp
pop
into
jmp
pop
adc
and
daa
or
pinsrw
lds
test
add
xchg
lds
jo
xlat
sub
or
mov
lods
add
sarb
sbb
xchg
mov
add
sub
or
je
jmp
dec
loop
xchg
push
ljmp
push
iret
roll
add
cvtps2pi
dec
mov
cld
xchg
repz
jo
js
shl
pop
mov
add
add
icebp
rcrb
fdivs
pop
cmp
push
cwtl
pop
sbb
cld
lock
ss
repnz
cmc
adc
push
aam
divl
or
pushf
repz
filds
into
leave
mov
outsl
and
repnz
add
push
xor
push
psubb
cld
xorb
in
lock
jge
sbb
sbb
ror
or
xor
repz
fbld
mov
lea
mov
test
pop
dec
mov
jns
jno
push
sbb
stc
subl
push
mov
subl
sarl
fistpll
mov
add
cmpsl
jle
pop
adc
hlt
ss
mov
mov
cmp
loopne
jnp
xor
mov
xchg
negb
lds
jo
jecxz
mov
notl
nop
test
leave
jns
mov
dec
mov
jo
push
into
jle
jae
sbb
cmpsl
shrb
add
jno
or
sub
mov
mov
dec
cmp
out
mov
aad
dec
add
lods
outsb
sbb
jo
cmpsb
mov
sub
cmc
inc
insl
icebp
mov
call
pop
pop
mov
add
fadd
mov
dec
jno
and
add
stc
jmp
test
scas
adc
icebp
sub
mov
add
std
jne
cmc
std
mov
dec
lock
cmp
jg
dec
or
or
xchg
pop
js
dec
mov
jp
cmc
mov
lcall
push
or
or
xor
add
jo
dec
dec
daa
dec
incb
sti
push
cmp
test
negb
ret
movsl
imul
cmp
push
pop
sahf
stc
clc
dec
add
icebp
mov
out
in
mov
sbb
movsb
scas
stc
repnz
sub
jns
push
xlat
sbb
cmc
rol
pop
icebp
and
mulb
push
cwtl
mov
jns
mov
inc
jb
sti
in
das
sub
cmp
cmpsl
mov
and
push
xor
dec
loop
imul
or
sbb
mov
push
gs
xchg
inc
ja
rcll
adc
mov
imul
cs
sbb
lret
adc
cmp
stc
popf
repnz
xchg
or
jg
inc
arpl
std
push
cmc
cwtl
jno
sub
push
mov
sbb
jb
sbb
mov
jnp
jp
mov
pop
lcall
jmp
js
push
mov
btr
add
push
mov
mov
out
outsl
repnz
stos
mov
xchg
test
mov
push
sub
sti
iret
lahf
daa
xchg
addl
mov
je
add
iret
and
adc
addl
add
jne
rcrl
mov
fildl
stos
sbb
and
loopne
mov
xchg
mov
ret
clc
out
idiv
mov
lea
cmp
or
subb
cmp
cmp
sahf
pop
mov
clc
xchg
in
clc
and
add
xor
in
cmc
idivl
test
adc
xchg
icebp
cld
mov
repnz
imull
das
dec
aam
and
sub
cmp
jb
js
jo
jmp
mov
inc
mov
out
add
xor
js
fnstsw
jno
das
sub
push
call
add
sbb
stos
cmc
jb
insb
jecxz
jns
cmp
adc
insb
jnp
ss
xor
jge
cmp
xor
add
adcb
repz
in
mov
iret
add
rclb
frstor
jp
jno
mov
scas
jmp
jg
jo
mov
jmp
jmp
or
pop
icebp
aad
hlt
movsl
test
jb
outsl
aad
hlt
xchg
das
outsb
movsl
std
jp
jnp
inc
sbb
xor
hlt
test
inc
ss
push
mov
xchg
push
pop
notl
xor
jle
push
jns
xchg
push
jno
adc
mov
mov
sbb
das
push
and
clc
sbb
iret
lods
or
push
mov
repnz
test
lret
fisttpl
xor
arpl
inc
subl
cmpsl
xlat
jge
inc
repz
mov
cmp
or
push
adc
xor
mov
ja
repnz
jecxz
mov
push
pop
jge
fcmovne
or
jns
cld
pusha
shlb
and
mov
cmp
jno
adc
orps
sbb
mov
jge
test
inc
cmp
fpatan
idivl
inc
inc
dec
enter
sbb
dec
adc
or
jp
out
sub
mov
dec
xor
roll
add
dec
mov
sbb
adc
xor
push
xchg
xlat
sbb
and
cmpsl
je
or
sub
mov
jbe
rclb
insb
in
pusha
hlt
xor
sub
nop
add
pop
mov
aam
rolb
jl
test
cmp
popl
pop
js
cmc
repz
cld
inc
push
add
mov
push
mov
jg
inc
out
cmp
jb
ljmp
clc
jl
or
out
loop
in
pop
jg
jne
lret
mov
inc
repnz
icebp
ss
scas
inc
mov
or
pop
xlat
std
adc
mov
jb
mov
out
das
jb
add
imul
jbe
mov
pop
pusha
stc
adc
mov
jae
pusha
dec
repz
negl
jno
mov
lcall
adc
mov
sub
movsb
adc
or
ja
test
xorb
cmc
repnz
jno
dec
xor
aam
lock
xor
ftst
adc
jae
sub
push
int
clc
sbb
inc
sub
add
jb
int3
repz
jne
call
push
jle
mov
repnz
std
mov
popa
in
inc
hlt
icebp
jns
aam
cli
cmpb
std
es
sbb
xchg
cmpsb
iret
dec
dec
add
fs
cmc
add
imul
push
data16
inc
xlat
xchg
jo
push
movl
testb
push
dec
idivl
add
in
dec
pop
iret
loop
add
jns
test
imull
jno
dec
mov
imul
jns
cmp
mov
adc
mov
lods
call
cmp
xor
icebp
mov
aad
cmp
sub
mov
pop
ss
push
jmp
jge
orl
es
sub
sbb
stos
xorb
jg
jge
xchg
push
mov
scas
pushf
cmc
jnp
cmc
xchg
and
pop
push
imull
aam
xchg
sub
or
loope
push
push
inc
cmc
fisttpl
or
sub
sbb
sbb
inc
pop
stos
or
neg
sbb
add
fyl2x
arpl
aam
or
popa
or
inc
add
enter
sbb
fcomip
fs
clc
jmp
xchg
out
lds
pxor
mov
cmp
jno
div
pusha
mov
jo
sbb
mull
movswl
aad
add
and
mov
mov
enter
sbb
pop
add
push
add
clc
out
lock
sti
pop
pop
call
rorb
mov
xor
loope
dec
pop
ret
sub
sahf
ja
and
mov
pop
xor
xchg
xor
fcomi
adc
and
or
fadds
push
mov
cmc
sbb
aas
fprem
stos
add
ss
rorb
testl
pop
mul
cmpb
sahf
mov
add
cli
icebp
jmp
clc
add
lods
cmp
lock
popa
jg
mov
aam
push
ds
xor
and
mov
push
cmpl
hlt
add
fwait
jns,pn
push
xor
decb
adc
mov
and
push
pop
xchg
ljmp
xchg
mov
pop
das
aad
sbb
addl
sbb
popa
stos
or
hlt
shlb
insb
dec
clc
push
add
mov
xchg
dec
sahf
rorb
es
and
xlat
xor
or
mov
sbb
jne
sar
fldl
enter
cld
jle
mov
adc
fsubl
pushf
jg
pop
add
sub
dec
sbb
xor
out
cmp
xor
adc
icebp
das
stos
pop
aaa
dec
lock
mov
stc
js
xor
insb
rorl
jae
add
ja
xchg
fsubrl
pop
sti
or
and
icebp
fnstenv
xchg
mov
nop
adcl
mov
mov
mov
rorl
pmaxsw
aam
or
cmp
push
int3
jb
mov
adc
divl
mov
insb
add
pop
inc
cmpl
scas
jecxz
jp
mov
sbb
pop
shld
inc
dec
ficoms
repnz
cmp
hlt
testl
xchg
ljmp
int3
in
mov
negl
pop
out
adc
jge
nop
jns
add
and
xor
decl
aam
pop
jg
push
lds
add
cmc
leave
mov
into
ljmp
adc
jne
aam
xorb
xor
dec
xor
arpl
xchg
xchg
cmp
jns
jns
xor
cltd
xchg
or
or
inc
sub
mov
dec
repz
or
jno
movsl
mov
cmpsb
nop
and
fdivrp
adc
or
pop
nop
nop
or
mov
jno
add
xor
pop
adc
stc
dec
jno
pop
mov
add
imul
pop
cmc
nop
xchg
or
div
iret
push
cmp
and
outsl
sbb
adc
mov
xor
scas
outsb
mov
andl
test
jnp
je
xlat
add
add
jg
movb
fiadds
jle
sbb
lds
stos
cmp
shrl
cli
imul
clc
dec
lea
data16
mov
lock
mov
jmp
nop
cmp
fsubr
push
xchg
clc
mov
jb
sti
lea
push
adc
ret
iret
pop
test
sbb
aam
fidivs
add
test
or
xchg
pushl
call
jle
arpl
dec
std
xchg
mov
cmp
lahf
scas
pop
xor
repnz
lret
jg
mov
repz
xchg
fistpll
sti
mov
jne
roll
stc
repnz
js
loopne
or
dec
or
scas
lret
shl
sub
sbb
dec
sti
cwtl
xor
inc
add
imull
mov
jmp
xchg
js
jo
jne,pt
lea
imul
dec
rorl
xorb
popa
or
add
leave
or
push
jnp
jecxz
mov
push
aam
mov
aad
add
mov
jne
idiv
mov
mov
icebp
clc
adc
scas
movsl
dec
out
pusha
or
mov
lods
mov
dec
idivl
jno
mov
push
add
add
mov
mov
jp
clc
lret
fidivrs
in
xchg
dec
jg
pop
and
adc
add
mov
sbb
aam
push
mov
jno
outsl
inc
repnz
in
push
jo
mov
xchg
jl
pop
cltd
sub
cli
adc
cmp
push
jne
and
andb
cwtl
cmp
push
sub
cmc
icebp
inc
scas
adc
movsb
ljmp
sti
aam
outsb
psubd
pop
repnz
adc
js
dec
dec
jnp
jns
arpl
lret
jno
in
adc
sbb
pop
addb
xorl
not
xlat
out
add
ss
push
mov
cmp
ja
aam
xor
sub
ja
je
lahf
mov
jnp
push
mov
inc
dec
or
testb
js
push
outsl
cli
jnp
mov
pop
clc
push
adc
movsb
push
xchg
pop
jo
jb
aam
lea
icebp
mov
shll
ret
mov
or
cmpl
lea
jecxz
dec
mov
and
jns
test
sbb
lock
je
jo
nop
repnz
dec
mov
pop
push
adc
rcr
jle
add
cmpsl
push
or
sbb
pop
adc
insb
jo
jle
push
sbb
push
dec
pop
jo
in
cmpsb
ljmp
mov
sub
sti
jne
test
inc
psubb
clc
cmpb
ljmp
inc
ficoml
adc
inc
xor
repz
insl
repnz
cmc
push
shlb
call
jb
jle
or
mov
add
inc
bnd
repnz
pop
sbb
mov
mov
icebp
xor
outsl
les
push
jne
pop
stc
jg
or
or
xchg
add
icebp
xor
jg
push
jno
adc
mov
jne
push
js
push
fisubrs
push
cmp
lock
loope
fwait
cmpsb
sarb
maskmovq
divl
jg
xlat
insb
lea
rorl
vxorps
insl
std
ja
loop
jae
and
fiadds
arpl
sub
pop
aad
rcr
int
push
xchg
mov
mov
popa
mov
xchg
ja
fwait
sub
cwtl
push
in
rcll
jno
popa
cmp
stc
cmc
xor
cli
push
xchg
loope
pop
test
xchg
idivl
js
cmpsl
orb
test
pushf
xor
inc
movq
and
or
hlt
in
je
push
jb
adc
js
lock
and
fisttpll
push
imul
mov
les
fstpt
je
fs
lret
loope
nop
push
aaa
fisubrl
or
sti
lcall
stos
sti
idiv
inc
insb
xchg
and
ret
dec
sub
hlt
add
fwait
mov
push
repz
pushf
mov
lret
xor
lea
adc
lret
add
xlat
xor
jns
aam
icebp
es
jne
mov
cmp
ret
sbb
mov
xchg
add
fistpl
repz
rcl
sti
pop
xor
or
bound
into
pop
clc
cs
and
jb
ljmp
or
jno
sub
clc
add
sub
pop
sbbb
jne
fnstenv
ljmp
push
xlat
mov
add
cmp
repnz
xor
outsb
jl
test
jnp
jno
fdivrs
rcrb
enter
xor
popl
repnz
sub
out
mov
das
push
jns
scas
sub
xchg
jo
add
int
push
jle
js
xor
ja
cmp
je
jae
int
mov
adc
push
add
jno
popf
daa
pop
clc
mov
xor
dec
sub
cmp
and
ud1
adc
xchg
stc
stc
je
xor
mov
xor
add
jo
outsb
iret
inc
nop
cli
fildll
adc
jnp
pop
cld
xchg
mov
lds
push
pop
cmc
repnz
add
push
jp
das
push
inc
adcb
ret
xchg
aam
push
faddl
or
lret
pop
add
mov
and
dec
aas
push
xor
add
aam
xor
cmp
fcomip
lea
xchg
sbb
cmp
mov
sti
lods
xchg
je
sub
pop
adc
mov
mov
pop
and
out
clc
xchg
push
imul
stos
mov
jo
das
cmp
sub
pop
mov
pusha
add
sti
orb
fadd
jb
mov
xor
adc
aam
addb
mov
ret
mov
cs
sti
cmp
or
mov
jb
stos
cmc
ret
push
sub
mov
lcall
push
jmp
lahf
repz
sti
inc
and
call
icebp
mov
fs
mov
cmp
in
xor
ror
jb
sarl
push
sbb
cmpsl
add
loopne
mov
xchg
mov
and
aad
repnz
and
mov
sbb
add
imul
sbb
call
lret
xchg
or
adc
xlat
mov
or
mul
push
ja
mov
addl
leave
mov
adc
xor
jne
add
out
inc
bnd
adc
leave
xchg
xchg
push
hlt
fptan
jmp
pop
aam
imul
cld
lock
and
inc
test
frstor
or
add
adc
stc
out
mov
sbb
add
repnz
pop
and
push
out
xor
xor
cmp
add
add
push
jnp
in
push
into
xchg
jno
scas
inc
cmp
cmp
inc
hlt
add
pop
sub
dec
ss
sbb
jno
mov
xor
pop
jg
push
lret
mov
mov
xor
lcall
fisubrl
aad
sti
inc
jge
pusha
bound
test
pushf
jg
fprem
in
add
mov
orb
mov
jecxz
inc
push
std
dec
movsl
push
fdivrp
filds
sub
stc
outsb
push
in
repz
or
add
mov
in
jge
adc
sbb
jmp
mov
jle
cmp
push
add
or
test
sbb
jne
add
adc
lock
sbb
pop
adc
xor
adc
jae
repnz
lahf
stos
shrl
sub
jno
dec
sbb
jp
test
or
push
in
add
sti
pop
adc
leave
fdivl
orb
arpl
or
xchg
sbb
sti
addr16
andl
xchg
jmp
add
pop
fdivrl
mov
addb
fadds
loope
je,pt
sbb
ja
testl
stos
add
fs
jne
jl
clc
add
sub
insl
dec
pop
lahf
inc
cmp
stc
xchg
clc
dec
fidivrs
repz
mov
dec
adc
mov
mov
cli
push
cmp
xchg
sub
ret
and
add
mov
adc
bound
jnp
mov
xchg
ds
rorb
aam
push
push
mov
or
repz
fcmovnu
pusha
ja
adc
jns
mov
inc
jno
lahf
fisubrl
jl
clc
bound
pop
dec
out
add
mov
fnstcw
mov
jo
mov
mov
adc
push
inc
xor
mov
lods
sub
mov
lock
add
testb
aad
jl,pt
scas
loope
add
imul
push
cmp
jne
xor
das
icebp
dec
lret
ja
and
push
mov
repnz
fincstp
sbb
push
jp
fists
or
cld
out
pop
jbe
adc
cwtl
xor
mov
aad
lods
add
sbb
popf
loop
jae
add
test
jae
pop
repnz
aad
test
add
jecxz
mov
cld
xchg
inc
je
lea
das
clc
icebp
jmp
sub
outsb
or
mov
pop
data16
jl
je
xchg
sub
cltd
jl
test
mov
cld
dec
fildl
jne
in
jns
adc
cmp
mov
cmpb
mov
jge
testl
mov
cmp
xchg
dec
mov
clc
xlat
cld
imulb
sub
lahf
loopne
es
ja
jmp
mov
aam
add
or
pop
test
mov
push
test
add
in
stos
inc
mov
into
cmp
push
pop
dec
adc
mov
jo
vmwrite
cmc
negl
or
cli
xor
sbb
int3
repnz
aad
adc
sbb
mov
nop
fwait
nop
add
dec
shl
jae
pusha
sub
clc
stc
jl
mov
push
sbb
std
mov
test
mov
sub
or
add
shlb
clc
xchg
jno
dec
mov
ret
mov
aaa
lcall
push
nop
mov
int
dec
inc
repnz
mov
mov
xchg
pop
mov
pop
sbb
hlt
mov
push
ret
add
ja
icebp
xchg
add
xchg
lea
cs
xor
cltd
imul
mov
rolb
lea
push
adcb
mov
sub
add
in
rcl
lahf
lahf
push
mov
sub
sub
ja
aas
sti
repz
fdivl
loop
dec
test
sub
mov
mov
aad
add
sti
cmp
ret
in
cmp
xchg
mov
pop
incb
aas
cmp
mov
movsb
cli
test
and
mov
push
mov
cld
adc
cmc
xor
push
std
in
mov
or
lcall
xor
lret
push
adc
adc
add
and
push
lcall
pop
icebp
jle
aam
ret
pop
pop
sahf
repz
clc
aam
and
cmc
xor
add
add
mov
dec
mov
mov
add
or
mov
fisubrs
jne
cmpsb
iret
mov
outsl
in
imul
pop
or
cmp
mul
dec
js
loope
xor
test
push
and
test
xchg
hlt
pop
push
fstps
add
divl
fistpll
push
shrl
mov
sub
sub
xchg
add
jno
loop
lods
add
ret
mov
adc
sub
jp
pop
add
call
xorl
adc
lock
pop
add
mov
add
adcl
test
cs
clc
xchg
add
or
ja
or
jge
adc
fstl
jne
aaa
lea
shl
out
dec
sar
mov
cmc
add
xor
movsb
jo
hlt
add
xchg
outsb
xor
mov
mov
lds
cltd
mov
xor
stc
jno
add
mov
fstpt
jg
sti
sar
std
lods
mov
sarb
push
or
mul
mov
mov
std
push
rcrl
std
cmc
add
lds
repz
ljmp
adc
mov
cld
mov
pop
test
xchg
sub
imull
or
daa
mov
cmc
imul
in
out
sti
outsl
sbb
push
stos
adc
inc
iret
jmp
jae
sti
ss
es
repz
xor
adcl
push
mov
cmp
xchg
and
xor
xor
jo
or
cmpsl
test
and
lock
aaa
cmpsl
xchg
lods
xchg
jb
rorb
or
mov
pushf
sbb
scas
outsb
push
dec
movsb
add
stc
jns
je
xor
sbb
jmp
roll
movsl
dec
mov
clc
mov
add
dec
sub
cmp
cmc
push
xchg
pop
outsb
push
hlt
clc
sbb
jo
sub
mov
repz
add
insb
cmp
cmp
shrl
popl
sbb
out
push
xor
and
xor
pop
jl
add
pop
cli
add
sbb
mov
fs
add
repnz
or
xchg
aam
int3
scas
add
rol
repnz
xchg
fsubrp
mov
clc
dec
add
push
or
mov
mov
stos
jne
cld
mov
jmp
fnstcw
add
push
sahf
icebp
notb
push
xchg
stc
icebp
dec
push
xchg
jae
jl
ljmp
jns
mov
cmc
loopne
adc
push
add
lock
sbb
and
fdivl
mov
stos
cmc
jnp
push
adc
test
or
in
idivl
adc
jb
in
xlat
test
cli
pop
and
jbe
push
repnz
jp
sbb
repnz
pop
std
add
jmp
cli
lahf
xor
add
sub
add
mov
add
and
clc
pushf
out
inc
icebp
repz
pop
pop
repnz
fcomp
and
adc
sub
mov
mov
dec
mov
aam
xchg
sub
mov
pop
or
or
and
xchg
jns
push
or
incb
jne
out
fldt
cmc
rcl
add
push
int
movsb
repnz
mov
aam
xor
xchg
pop
repz
ret
xchg
cmc
movsl
or
popa
dec
mov
pusha
mov
nop
adc
push
adc
inc
int3
daa
insb
adc
xchg
sub
pushf
adc
scas
aad
adc
fists
cmpsb
out
add
add
cltd
adcb
int
sti
in
fdivl
pop
es
pop
push
sbb
mov
es
arpl
adc
xchg
dec
mov
hlt
push
flds
or
push
sti
addr16
and
pop
jl
testl
mov
mov
cs
and
dec
xchg
mov
out
jge
mov
add
push
push
xchg
jb
pop
dec
or
fdivs
sbb
repnz
icebp
jle
jp
xchg
shl
dec
cli
nop
loopne
mov
add
cmc
ror
jnp
sub
insl
cli
mov
xchg
add
out
addl
jge
adc
pop
inc
sub
push
adc
and
pop
push
fisubrs
xchg
repnz
jg
mov
cs
sub
cmp
add
out
jp
int3
jmp
jns
pop
es
jl
popl
jno
loope
cmp
add
aas
jecxz
stc
adc
scas
es
jle
into
aam
sub
add
or
arpl
inc
jp
mov
push
jl
cmc
or
add
pop
jle
jb
mov
jl
ljmp
and
jg
mov
add
ficompl
lret
and
pushf
adc
lahf
cmpb
or
xor
push
lea
inc
jp
shll
mov
add
dec
add
lock
pop
jo
xchg
cmp
mov
cmpsl
mov
sbb
inc
pop
ficoms
mov
pop
add
mov
jl
dec
and
inc
pop
inc
push
xchg
and
lcall
mov
mov
lods
pop
fdivs
lods
sti
lret
and
les
clc
add
push
and
dec
add
push
das
icebp
in
sbb
pusha
mov
lcall
jns
inc
ds
out
out
sti
shlb
mov
les
dec
and
push
arpl
popa
or
xchg
clc
testl
or
add
je
insl
mov
mov
pop
or
and
push
iret
lds
cmp
cli
sub
bnd
adc
xor
icebp
mov
nop
cltd
pop
add
insl
mov
sub
cmp
fidivrs
jns
adc
roll
cmp
loopne
test
and
mov
add
push
adc
cli
popa
sbb
add
or
adc
push
inc
dec
fs
sub
test
and
xorl
out
ss
add
and
jnp
notl
xlat
cmp
js
cmpsb
sti
sub
ja
and
sarb
jns
push
inc
push
push
dec
mov
das
mov
mov
jo
fcoml
lods
push
xor
mov
outsl
and
jmp
adc
fistpl
nop
mov
jne
mov
push
sub
cmc
aam
out
sbb
push
xor
push
rol
mov
and
push
jmp
hlt
and
jb
pop
inc
or
pushl
sarl
xchg
or
adc
clc
cmp
or
outsl
pop
roll
jo
aaa
jg
push
xor
fdivl
jb
cmp
lock
inc
adc
fdivrs
mov
jg
or
mov
add
dec
mov
mov
sbb
not
mov
lahf
add
mov
ds
cmp
jmp
pusha
cmc
mov
lea
mov
mov
xchg
pop
ret
inc
inc
insb
sbb
ffreep
popa
adc
ljmp
aas
sbb
xor
repnz
mov
push
adc
inc
mov
fwait
and
negb
sub
jg
repz
mov
maskmovq
testl
push
iret
fcoml
into
push
stc
mov
mov
inc
pop
icebp
inc
push
jnp
sub
je
push
mov
inc
hlt
ja
mov
cmc
sahf
nop
or
mov
or
add
jno
and
lret
sti
fists
arpl
sqrtps
sti
nop
or
rcr
push
xor
adc
pop
flds
jl
add
aaa
lock
jno
hlt
sbb
repz
cltd
nop
jns
ss
stc
or
into
repz
sub
sub
adc
mov
arpl
adc
imul
sbb
sbb
je
pop
notl
rclb
cmc
mov
cmp
cmp
out
ret
sub
out
jl
jecxz
jg
test
mov
dec
jne
add
roll
and
aam
orb
mov
add
cmp
xchg
xchg
aad
cmc
pop
mov
ja
scas
shll
xchg
push
jo
insb
js
minps
sub
mov
jno
push
mov
cltd
or
cmpsb
and
or
mov
insl
inc
repnz
icebp
aas
scas
sub
dec
call
inc
mov
add
pushf
mov
stos
jl
jno
sti
xchg
js
imul
icebp
cmpsl
iret
add
sbb
lods
std
repnz
enter
add
jb
lret
xchg
cs
xor
js
mov
movsl
jo
ficompl
fld
pusha
pop
inc
mov
push
xor
je
stos
mov
bound
cmova
add
movsb
sti
or
les
push
sbb
push
mov
repz
or
jg
mov
push
add
cmp
adc
sti
cmpsl
repnz
cli
bound
notl
add
addl
add
cmp
mov
sti
cmp
or
or
cltd
sar
clc
out
mov
mov
int
add
lcall
jge
insl
mov
mov
dec
or
mov
cs
adc
xchg
mov
cli
mov
or
or
mov
mov
fsubrl
cmp
inc
repnz
mov
adc
jns
sbb
into
xor
fsubs
cmc
inc
scas
inc
sub
push
sbb
fidivl
mov
iretw
in
or
dec
insb
or
sub
and
mov
call
sbb
inc
xchg
mov
or
stos
ror
repnz
movsl
fcomps
idivb
mov
repz
lcall
or
xchg
adcl
lods
push
cmp
xchg
adc
mov
insl
dec
push
mov
inc
xchg
inc
push
out
data16
int
inc
push
loop
ljmp
or
in
ja
jl
xlat
sahf
ret
xor
mov
jl
lcall
xlat
or
mov
aad
movd
xchg
xchg
lcall
add
jg,pn
pop
xchg
or
icebp
roll
add
lock
xchg
lock
int3
cwtl
add
xchg
push
hlt
pop
jnp
les
cli
pop
xlat
bnd
cmc
and
add
mov
sub
mov
mov
aaa
scas
mov
clc
adc
cmpsb
es
add
cld
xor
xor
push
sarl
dec
mov
ss
and
movups
mov
js
nop
xlat
ds
push
add
jl
dec
pop
or
xor
or
jmp
cmp
stc
stc
cmp
repnz
es
adc
jge
xchg
dec
cltd
mov
mov
jne
mov
pusha
pushl
xor
mov
jo
dec
cli
cmp
add
icebp
into
dec
xchg
and
cmc
mov
lret
mov
aad
sbb
vmread
pop
push
iret
hlt
jg
out
divl
in
cmp
or
mov
test
jl
add
out
mov
jge
cmp
or
or
cmpl
and
int
or
and
pop
iret
add
or
xor
add
xchg
jp
icebp
aas
or
icebp
sti
xchg
push
repz
shll
stc
repz
add
mov
es
in
xor
dec
or
mov
xchg
mov
sbbb
mov
iret
into
sti
dec
fs
cmp
stc
jo
imul
movsl
lret
lock
or
sbb
fnclex
push
leave
dec
add
jno
mov
scas
divl
pop
cltd
scas
std
adc
js
mov
cmp
shll
sti
sti
jnp
or
fildl
jle
inc
in
out
scas
sbb
clc
ficomps
add
and
out
js
or
push
fistps
test
inc
mov
andb
sbb
daa
or
dec
xor
push
fdivrs
mov
mov
sbb
jno
mov
fneni(8087
test
push
or
sbb
inc
add
adc
inc
addr16
cmpsl
or
pop
sub
jbe
sub
sti
out
jecxz
add
jnp
sub
mov
imul
mov
jecxz
dec
and
aam
cmp
push
xchg
pop
stc
sarl
sub
fidivs
adc
adc
out
sbb
out
in
adc
dec
xchg
cmpsb
xchg
cmp
fstpt
pop
sub
mov
bound
std
out
jbe
data16
fwait
enter
addr16
fmulp
jnp
mov
push
fwait
aam
push
leave
jle
movsb
repnz
or
lock
movb
jne
dec
leave
push
add
xchg
sbb
int
push
adc
mov
jge
in
repz
fstl
jp
or
repz
dec
jns
mov
out
cli
mov
repz
adc
jl
cmc
jns
adc
out
jns
push
jb
add
pop
adc
or
cmpsb
mov
repz
adc
cli
fsubrp
sub
sub
das
outsl
cmp
repnz
sub
icebp
inc
mov
cmpsb
mov
add
dec
xchg
fdivrs
cmpb
mov
mov
repnz
xchg
jo
dec
jae
orl
adc
push
in
pop
sub
popa
mov
adc
adc
lcall
sub
stc
push
sti
lock
sarb
jb
mov
rolb
jecxz
pop
addl
xchg
pushf
sbb
dec
lea
pop
js
les
movsb
popa
hlt
jl
cmpb
add
mov
or
xchg
sub
xchg
jnp
add
fcomi
and
lock
pop
adc
xor
jg
add
cmc
insl
repz
jg
inc
or
aaa
xlat
inc
xchg
sti
test
xor
test
mov
testl
cltd
jmp
aam
aad
add
inc
into
push
loop
mov
movsb
cld
sti
add
scas
jmp
adc
add
clc
in
mov
pop
stos
and
out
leave
test
or
int
shlb
inc
mov
add
pop
int3
aas
cs
lea
cwtl
xchg
cmp
cmp
inc
jns
push
adc
dec
push
lcall
inc
insl
xchg
push
dec
jno
or
rcr
test
push
mov
jns
and
adc
std
or
std
xor
jg
add
jp
movsl
jnp
xor
je
pop
dec
in
fwait
sbb
ret
gs
cmc
add
icebp
or
pushf
lods
cmc
mov
jle
mov
sbb
add
clc
cltd
jmp
mov
mov
or
inc
mov
mov
out
cmc
mov
sti
xchg
inc
pop
lcall
cmp
clc
xlat
ja
jno
aam
cmp
xchg
cmp
repz
notl
and
push
add
jl
jle
push
mov
jnp
and
jo
push
or
sbb
push
push
xor
jg
lret
js
mov
je
sbbl
cmp
sarl
scas
inc
pop
orl
sarl
mov
jae
sub
cmp
inc
adc
or
scas
ljmp
jno
xor
push
xchg
sbb
add
cmpsb
lds
inc
js
pop
cli
testl
inc
cmp
mov
std
mov
or
stos
es
mov
push
mov
and
push
ret
test
cli
fcomps
or
sti
imull
aas
test
iret
sbbl
dec
scas
jo
sbb
mov
shl
arpl
and
xchg
in
mov
xor
and
mov
add
sbb
push
or
jmp
inc
mov
repnz
xor
mov
add
aam
sbb
rcll
mov
jp
dec
dec
cld
testl
movsb
orl
repz
mov
stos
push
add
mov
xchg
add
adc
sahf
data16
or
mov
and
js
xor
clc
mov
add
add
andl
inc
cmpl
jo
je
enter
pop
lret
cltd
adc
mov
or
clc
mov
xchg
int
or
icebp
sbb
add
jno
stos
mov
test
adc
pop
xor
addr16
mov
ret
jl
fildl
je
mov
inc
and
hlt
and
sbb
sbb
xchg
push
outsb
push
jno
pop
add
lret
dec
or
mov
xchg
sti
pop
js
pop
outsl
out
mov
mov
nop
pop
add
sub
dec
ret
mov
ljmp
stos
push
lea
xorl
jo
jnp
pop
aas
incb
jno
movb
xchg
mov
addl
lds
jl
test
mov
push
add
dec
repz
sarl
jno
and
mov
pop
push
lods
jle
aad
out
xor
pop
and
add
pop
fwait
pop
jmp
xchg
rcrb
push
inc
cli
pop
lcall
addl
add
inc
or
outsl
cli
je
add
mov
xchg
add
jno
add
dec
adc
push
fwait
dec
sar
mov
xchg
mov
xor
loope
mov
dec
jecxz
idivl
in
fisttpl
sbb
outsb
insl
or
lock
hlt
stc
leave
xchg
adc
xor
or
ret
sub
enter
cmpsb
in
stos
insl
push
dec
xor
and
push
je
and
fdivrs
dec
pop
inc
or
adc
adc
mov
add
add
dec
pop
xor
jne
repnz
ficoms
mov
js
sbb
dec
jmp
pop
push
mov
repnz
add
test
mov
ss
sub
and
xchg
testl
jo
or
or
cld
movl
adc
xor
add
test
mov
inc
popf
movb
xchg
xor
fidivs
or
push
add
mov
pshufw
jg
add
sti
jmp
shrl
mov
aad
adc
dec
repnz
pop
lods
cmc
popf
sbb
out
sarl
test
xchg
stc
or
repz
mov
sbb
popa
sub
add
repz
mov
orb
or
xchg
xor
call
cltd
mov
pop
mov
add
sbb
push
repnz
mov
or
repz
repnz
jo
mov
mov
sbb
inc
adc
sub
hlt
repnz
clc
push
aaa
xchg
jg
loopne
xlat
sub
jnp
pop
adc
add
sub
jmp
jno
clc
dec
sti
cmp
inc
adc
or
jnp
ja
movsl
cwtl
sbb
adc
movsl
out
adc
test
in
jle
or
std
or
jns
shlb
jg
inc
fildll
icebp
std
adc
mov
jg
jae
repnz
or
lret
sub
mull
lds
es
movsl
add
add
add
sbb
push
jne
sti
aaa
rorb
inc
cmc
jl
dec
mulb
adc
or
cmp
push
into
cli
shl
adc
lcall
adc
push
mov
push
adc
les
sub
inc
add
jns
ret
sub
xor
mov
fstpt
xchg
add
gs
add
jl
arpl
and
mov
sub
jmp
mov
push
inc
sbb
add
imul
adc
stos
mov
leave
jne
repz
stc
cmp
mov
cmp
repz
cltd
mov
or
pop
add
mov
add
shlb
jle
adc
xor
cmp
or
iret
add
je
sub
sbb
idivl
icebp
fwait
push
xor
mov
pop
mov
nop
cli
fnstcw
push
and
cmp
and
fwait
jp
insl
sbb
fstl
mov
adc
repnz
push
push
xor
jbe
jno
inc
in
mov
add
test
sub
hlt
inc
add
jp
cmp
divb
je
popf
mov
xor
fwait
xor
adc
addb
clc
jg
filds
jg
xor
scas
stos
mov
pop
xor
xchg
adc
jns
aam
sub
jo
stc
or
into
pop
dec
jmp
sti
sub
sbb
or
out
leave
and
mov
in
test
lret
sub
je
and
enter
jb
roll
punpcklwd
mov
mov
aaa
outsb
dec
jo
adc
sbbb
daa
jno
xchg
and
sub
stos
mov
xchg
pop
jmp
push
lock
sub
gs
push
cmpsl
das
hlt
rcll
repnz
inc
sbb
mov
pop
or
js
sti
test
jnp
sbb
imul
shll
cmc
jmp
jge
jnp
sahf
mov
icebp
ss
or
inc
hlt
cmc
xchg
sub
add
ja
mov
lods
cli
hlt
cmc
pusha
sbb
pop
cmp
mov
mov
sbb
xor
xchg
adc
or
and
xchg
cmc
iret
adc
fisttpl
add
into
mov
sahf
mov
aas
jno
mov
js
outsl
rolb
mov
add
mov
mov
out
cmc
fcoml
add
mov
dec
add
rcrb
cmc
cmp
movsb
insl
xlat
mov
or
lcall
cmc
jle
jg
jnp
loope
pop
jmp
push
int
add
sar
mov
inc
fcomip
add
adc
jne
cmpsb
sbb
out
jnp
adc
mov
rcrl
clc
push
mov
repnz
jecxz
cld
das
lret
add
push
jecxz
sub
mov
cs
int
loop
or
sar
push
mov
in
cwtl
pop
js
xor
adc
addb
movsl
pop
mov
adc
scas
jge
cwtl
sub
fdiv
addr16
xor
push
inc
push
mov
filds
add
ret
mov
or
pop
div
adc
addb
add
loop
cli
inc
out
pop
push
mov
xchg
inc
jb
adc
and
mov
jns
and
inc
sub
or
pop
mov
fstpt
cmc
and
movsb
shl
shlb
jo
dec
sub
mov
jnp
jnp
xlat
int3
jnp
nop
ret
ss
aad
mov
je
adc
push
fwait
shrb
and
jo
fbstp
xchg
add
push
cs
stos
imul
mov
mov
cld
push
mov
cmpl
cmp
push
xor
jnp
sub
mov
orl
mov
div
or
xor
stc
nop
inc
push
push
dec
xor
test
adc
mov
inc
mov
sub
mov
pop
aad
pop
or
mov
lea
xor
and
sub
icebp
decb
add
xor
mov
inc
mov
sub
loop
imul
outsb
xchg
jb
sarl
jno
sub
cli
fisubrl
jl
push
jge
out
clc
push
leave
je
popa
jno
add
nop
outsb
mov
sbb
xor
mov
ja
xor
fwait
adc
aas
cmp
or
add
fstl
push
lods
push
sti
xchg
clc
aad
sti
pop
cmp
les
cmc
mov
add
repnz
inc
or
pop
jns
negb
mov
sbb
adc
lock
fneni(8087
push
cld
jle
or
nop
adc
xor
pusha
ss
cmpsb
inc
test
mov
xor
push
mov
inc
addl
adc
cmp
add
sub
outsb
and
hlt
sahf
jno
jmp
xlat
mov
or
clc
and
push
jl
fisttps
jb
cmpsb
push
hlt
adc
cmpb
loopne
mov
push
xchg
dec
shrl
or
sti
or
popf
fwait
inc
add
xor
adc
in
push
sub
cmc
pop
fdivrs
int
mov
lahf
cmc
add
add
cld
mov
sti
subl
les
sahf
mov
mov
cmp
jp
jecxz
add
imull
repnz
idiv
decb
aad
and
push
inc
mov
out
test
mov
push
cs
outsb
dec
hlt
jmp
or
loopne
shlb
andl
push
xlat
and
out
jo
outsl
inc
stc
and
hlt
dec
and
fisubs
sbb
push
jbe
dec
mov
mov
rcr
outsl
iret
hlt
jmp
sti
jo
ret
testb
xchg
xchg
push
or
out
jns
or
and
or
mov
sti
insb
adc
daa
adc
jle
lods
insb
jb
cmovb
mov
popa
push
pop
add
test
in
leave
mov
dec
mov
lret
xchg
and
mov
push
push
pop
leave
jg
push
lock
repnz
pop
fistl
and
push
dec
popa
sti
mov
push
xchg
fs
jmp
cmc
jno
mov
sbb
adc
xchg
icebp
test
sbb
adc
clc
dec
orb
loop
jns
jle
inc
xor
dec
pushf
daa
add
xor
adc
aas
or
push
orb
jns
add
iret
jb
mov
jmp
mov
sti
mov
ret
push
cmp
xchg
lock
pop
pop
ja
xchg
cld
testl
clc
and
jecxz
popa
push
lds
jo
shrl
and
test
pop
fdiv
fsts
incb
mov
adc
sti
aaa
es
jl
addb
arpl
cld
fisttps
or
dec
call
mov
lods
in
call
push
mov
sub
mov
loop
fisttpll
movsb
repnz
pop
lret
or
dec
push
arpl
inc
sub
ss
orb
jmp
mov
cvtps2pi
fs
mov
jne
sar
sbb
ljmp
mov
iret
sub
push
mov
push
mov
icebp
decb
out
or
dec
add
xchg
mov
pop
xor
ds
jg
out
add
add
dec
lahf
iret
out
stc
das
lret
jne
jle
mull
sbb
inc
inc
and
in
sub
adc
xor
ja
addl
cmc
inc
or
ljmp
popf
pop
sti
dec
mov
xlat
push
or
sbb
push
xchg
icebp
adc
inc
daa
jl
int
and
aam
clc
push
sbb
repnz
cli
add
xor
mov
add
cld
insl
push
stc
sub
adc
push
xlat
mov
xor
lea
hlt
push
into
or
mov
add
cli
xor
cmc
adc
jo
push
loopne
adc
add
xlat
xchg
std
mul
pop
fmuls
outsl
inc
decl
xchg
in
nop
push
push
movsl
cld
lret
push
dec
fdivp
add
xchg
cld
mov
fwait
add
mov
sahf
adc
xor
scas
jmp
pop
pushl
xor
xor
mov
fsubl
rorb
call
xchg
push
pop
mov
repnz
or
mov
or
cmp
xor
and
push
push
notl
lock
jecxz
pop
repz
sbb
out
add
sti
out
lock
bound
ss
ffree
cs
test
xchg
call
stos
mov
add
dec
pop
icebp
mov
cs
loop
je
xchg
jge
xchg
lea
and
int
xchg
jne
pop
loop
add
clc
xlat
add
jno
adcl
xor
shrl
data16
xor
sbb
jnp
int3
clc
clc
das
jge
test
mov
push
xlat
pop
insb
xchg
or
sbb
jmp
adc
icebp
push
addb
les
lods
xchg
dec
aas
hlt
shrl
adc
shlb
out
jns
xor
sub
scas
lock
shll
fistps
sub
scas
pop
or
sbb
lcall
jb
imul
addl
xchg
dec
shl
fistl
je
cmp
jbe
mov
xchg
xchg
int
idivb
pusha
xor
sub
pop
pop
or
sbb
loop
cltd
xchg
cli
sub
dec
cli
jge
xchg
and
jo
jg
xor
not
inc
in
out
bnd
mov
repnz
mov
andb
icebp
cs
jb
jg
and
mov
pop
loope
into
or
sbb
dec
pop
add
jo
jno
and
dec
pop
sti
jb
sbb
mov
push
or
mov
lcall
or
icebp
js
dec
dec
repnz
mov
aad
lods
xchg
or
mov
iret
cmpsl
mov
nop
sub
inc
jb
mov
aas
dec
fidivrs
cmp
lods
xchg
es
jo
jnp
push
je
loop
sti
mov
loop
cltd
jne
push
aas
mov
mov
or
call
jmp
iret
jg
ficoml
scas
mov
jnp
cmpsl
mov
outsb
addl
push
les
or
pop
jns
cmp
insb
add
sarb
sub
xchg
test
enter
lds
dec
sbb
repnz
push
mov
mov
mov
or
jns
mov
or
mov
aad
scas
jecxz
sti
fsts
xchg
loope
pop
inc
push
adc
jo
mov
inc
sbb
scas
and
xchg
jp
xchg
fildl
xor
xlat
mov
fst
aad
addb
in
dec
cmc
mov
push
mov
push
xor
test
jnp
sbb
sbb
push
cmp
sub
push
add
arpl
stc
push
leave
mov
mov
jb
rcrb
sub
xor
xor
test
test
aam
inc
cmc
cwtl
jnp
xchg
push
mov
lret
into
add
mov
dec
ss
add
aam
pushl
lcall
lret
inc
cmc
mov
mov
or
inc
adcl
in
or
ss
or
movsl
sub
pop
mov
mov
out
push
cmp
adc
jle
hlt
or
fisttpl
pop
add
dec
dec
cmc
xrelease
mov
mov
iret
jecxz
sahf
jns
cld
test
xchg
push
fucomp
pop
mov
cmp
gs
add
adc
repnz
sbb
jno
hlt
jecxz
push
xor
and
int3
sti
adc
mov
and
pushf
push
divl
in
push
xchg
jg
xor
mov
xorb
cmp
add
icebp
jmp
sub
adc
jae
imul
dec
ljmp
enter
sub
mov
add
es
or
emms
fnstcw
jo
loop
jl
jo
pop
inc
movsb
add
dec
js
int3
pop
push
pushf
push
sbb
data16
or
jecxz
and
or
and
js
jo
shlb
sbb
and
scas
add
or
fwait
jge
jecxz
setl
add
jno
and
adc
dec
es
outsb
or
sbb
mov
ja
sar
cmp
mov
nop
or
vpunpckhdq
sub
out
testb
js
int
leave
test
popf
jb
push
hlt
hlt
or
mov
fldl
dec
and
add
xor
pop
adc
sbb
mov
js
rolb
jecxz
or
sbb
mov
adc
or
jno
insl
pop
mov
pop
lock
mov
jle
mov
lea
clc
or
pusha
mov
jp
loopne
adc
dec
xorb
inc
cmc
out
mov
jb
stc
mov
stc
adc
cmp
hlt
adc
mov
inc
sbb
xchg
aaa
mov
push
xchg
jecxz
push
movsb
sub
fnstsw
inc
jbe
mov
repnz
inc
and
cmp
mov
je
in
lock
rol
mov
popa
repz
cwtl
jno
iret
cs
jns,pn
pop
xchg
popf
push
or
add
mov
and
push
cmpsl
mov
pusha
jbe
dec
hlt
addl
push
clc
data16
fldcw
adc
sbb
not
jb
xchg
fdivp
pop
sbbl
adc
cmp
xorl
lds
psadbw
js
pushf
jno
test
or
sbb
jne
add
orl
jno
lods
div
clc
fimull
xorl
int
or
adc
mov
and
inc
jbe
pop
jo
and
jns
cmp
adc
push
clc
mov
test
clc
mov
out
xchg
inc
inc
push
cmc
xchg
adc
xchg
repz
stos
mov
pushf
adc
pop
in
mov
orl
scas
int3
jnp
pushf
and
clc
fdivrs
rcll
xlat
jns
hlt
add
inc
jle
js
mov
arpl
dec
xchg
and
mov
pop
add
push
add
xorl
orb
mov
mov
xchg
jno
shlb
js
repnz
adc
movl
es
xchg
js
jo
gs
push
out
and
xor
stos
clc
fimull
adc
mov
xor
xchg
lret
psubusw
outsl
sti
or
idivl
aaa
jmp
fists
mov
inc
mov
int
in
cmp
mov
pop
xchg
inc
je
cwtl
js
sub
xor
xor
fs
or
cmp
sub
push
mull
xorl
sbb
jo
test
enter
testl
jmp
nop
cmpsb
or
cmp
stc
add
xor
lea
test
mov
add
xlat
out
cltd
xorb
inc
outsl
mull
js
shl
inc
push
push
or
sbb
push
pop
xorb
xlat
push
je
or
pop
std
jne
or
mov
or
mov
mov
push
movb
ds
clc
pop
push
jg
push
jnp
push
les
add
xor
rcrl
xor
jle
dec
aas
cmc
inc
push
filds
xchg
adc
mov
pop
and
and
ret
stos
enter
mov
icebp
adc
mov
test
xor
nop
sub
pop
xchg
pop
pop
test
icebp
out
cld
fwait
repnz
test
jb
xor
cmp
and
bound
xlat
push
and
push
and
adc
test
pop
aas
test
add
jno
and
dec
sub
out
dec
add
xor
addb
sbbb
or
mov
jae
xor
xchg
rcl
imul
insl
repz
repz
and
lret
or
push
mov
js
mov
das
inc
cmp
inc
les
aam
or
sbb
dec
jns
jbe
outsb
xchg
jae
mov
sbb
cmc
xor
push
loop
or
push
jo
enter
cs
jns
mov
adc
mov
or
inc
lahf
hlt
aam
andb
mov
push
movsb
fdiv
lahf
mov
add
fsubl
mov
cmp
jns
sti
andb
cwtl
aam
or
cli
outsl
clc
add
inc
repz
cmpsl
div
out
mov
xchg
mov
loope
or
js
and
rcll
push
lds
mov
xor
call
gs
fstpt
lea
lock
stos
pusha
jno
ret
rorl
mov
sub
xor
repz
mov
in
dec
cld
push
cmpsb
or
and
add
and
xor
xchg
sub
lods
or
jmp
dec
add
adc
je
and
xchg
cmpsb
pushf
pop
stos
lea
sbb
roll
nop
jnp
ja
roll
inc
jge
roll
push
pop
movsb
arpl
repz
sahf
movsl
or
std
sub
sub
iret
adc
mov
clc
fiaddl
lahf
push
sbb
mov
add
mov
xchg
mov
xor
loop
lock
jb
push
add
xor
call
sbb
jae
shr
cmc
mov
icebp
insl
adc
adc
incb
inc
push
jecxz
add
lahf
cmp
or
push
fisubs
out
or
stc
adc
out
ret
js
or
xor
add
popa
jae
push
mov
test
push
stc
in
int
mov
push
adc
inc
push
into
icebp
xor
addr16
inc
dec
clc
jmp
jge
sbb
dec
adc
cmc
push
js
adc
push
mov
hlt
push
in
pop
std
and
add
roll
xchg
mov
or
out
mov
sub
dec
dec
imul
arpl
add
pusha
fiaddl
filds
or
pop
pop
jne
xor
mov
lahf
push
adc
std
add
test
dec
setle
xchg
stos
mov
add
shlb
hlt
mov
nop
test
mov
cld
nop
or
inc
outsl
pop
jae
pop
jp
xchg
std
or
and
sub
cmp
cwtl
push
nop
arpl
ror
mov
add
mov
or
mov
cmp
mov
stc
cmpsl
add
jecxz
std
loopne
out
inc
mov
repnz
lods
pop
sbb
dec
mov
xchg
shl
xchg
stc
pop
mov
xlat
jae
inc
subb
sbb
out
fidivrl
xor
mov
es
les
sub
popa
pop
jp
fidivs
jo
scas
xlat
jge
divl
dec
sti
mov
cs
jne
add
jno
xchg
xor
jmp
jg
loop
add
xor
notl
lcall
add
dec
add
add
iret
lods
cmp
mov
sbb
xor
clc
sahf
jnp
sub
outsl
mov
sub
notb
or
xchg
negl
fld
jb
dec
ret
clc
ljmp
mov
je
or
jmp
and
cld
daa
xchg
jb
cmc
adc
es
ljmp
adc
into
int3
mov
jne
out
pop
add
push
xor
pop
out
and
add
das
xor
xlat
or
jo
mov
mov
mov
aas
push
jno
mov
idivl
adc
xor
out
popa
mov
mov
clc
insl
loopne
add
nop
mov
notb
stc
cmc
jp
jns
xchg
xor
fimull
jnp
testl
cltd
repnz
jbe
push
cld
outsl
and
add
jl
xor
bnd
fimull
push
or
adc
mov
pop
sti
dec
out
mov
jo
adc
xorl
and
add
jne
jge
add
sbb
xchg
add
cmp
repnz
repnz
sti
xchg
cmpsl
xlat
movsb
mov
adc
lret
js
jo
cmp
test
in
jo
aad
sarb
js
jl
adc
xor
pusha
jns
sub
sbb
pushf
mov
jmp
add
push
mov
xor
inc
and
outsl
and
or
lods
cld
sub
sbb
icebp
jl
xchg
push
outsb
jns
xchg
mov
mov
loopne
cmc
and
pop
fisubrs
mov
and
cld
mov
push
fdiv
out
icebp
push
adc
rcrl
rorl
sub
divb
cmp
scas
add
mov
repnz
psubq
mov
dec
or
clc
aad
add
mov
lret
cmp
popf
in
ss
aam
jg
sub
imul
leave
out
nop
sahf
pop
pop
je
jle
imul
mov
lock
ja
mov
sbb
rclb
sub
add
mov
clc
lods
in
push
xor
or
int
xor
mov
bnd
xchg
repnz
jg
addr16
or
or
enter
mov
inc
xor
addl
jb
fadd
add
or
xchg
jae
orl
loop
je
sbb
lods
xchg
iret
testl
call
mov
repz
sub
jmp
adc
jo
jne
push
xor
xor
or
pop
or
jg
fwait
data16
cli
or
decl
leave
scas
repnz
aam
aad
sti
or
push
test
popa
lea
mov
jmp
and
push
cmp
in
cli
cmc
mov
js
push
popf
cmpsl
adc
add
mov
jmp
add
icebp
jnp
jb
push
fs
clc
push
or
imull
xchg
sbb
int
xor
repz
call
cmc
adc
add
jmp
xchg
add
push
repz
rolb
xchg
loopne
cmpsb
adc
sahf
test
mov
sub
out
or
iret
je
mov
repnz
lea
test
or
mov
xor
sti
or
cld
inc
into
mov
add
stos
clc
mov
jecxz
fsubr
jl
push
movsl
jecxz
jns
mov
mov
xor
inc
push
test
cmpsl
pop
shld
movsl
push
dec
hlt
add
dec
mov
ss
cmc
mov
test
ja
push
adc
cmc
ret
or
add
movsl
hlt
mov
clc
adc
jle
int
inc
ret
sub
jg
or
sti
aad
out
cmp
add
adc
mov
xchg
loop
and
xchg
push
lods
test
iret
dec
lcall
aad
add
imul
mov
je
mov
push
jbe
or
imul
mov
lds
test
push
xorb
inc
int
orl
jnp
ret
aam
sub
ret
jae
jg
mov
ljmp
ds
jo
mov
or
out
or
cmpl
cmpsl
add
sbb
mov
xchg
imul
push
clc
jo
dec
out
push
mov
hlt
mov
xchg
or
and
pusha
ljmp
mov
cs
sub
stc
ret
push
jmp
outsl
sub
or
mov
lock
fistl
mov
repz
mov
xchg
mov
addl
push
popf
pushf
and
je
or
aam
mov
push
sti
pop
pop
sub
jl
pushf
cmp
jnp
sti
jae
into
addr16
in
hlt
idiv
sbb
pop
dec
push
jg
cmp
mov
mov
jo
in
jo
aad
mov
inc
xchg
sbbl
enter
jge
cs
scas
mov
cmpps
repnz
dec
lea
or
pop
push
mov
enter
bnd
lea
cld
clc
adc
popf
sub
jb
scas
sti
dec
sbb
into
sub
in
bt
shrb
mov
fwait
pop
adc
mov
lock
add
adc
jle
adc
and
sbb
repz
push
pop
mov
mov
sub
pusha
clc
xchg
cmp
mov
adcb
jp
cmp
lea
pop
test
les
les
xchg
lods
adc
rcll
xor
fiadds
cwtl
add
xchg
or
out
add
add
fwait
cmp
push
mov
inc
data16
cmp
and
aam
xor
fisttps
imul
xor
push
sub
daa
mov
xor
adc
cwtl
jne
or
filds
testl
push
xchg
add
mov
ja
imul
mov
push
jl
jno
cld
xchg
out
ja
pop
push
imul
loop
pop
inc
fwait
aaa
xchg
xor
bnd
enter
or
xor
fimull
pop
cld
pop
je
jecxz
adc
jno
cmp
and
fmuls
dec
repz
repnz
xchg
push
fldcw
cmpsb
xor
or
hlt
call
mulb
mov
adc
sbb
jecxz
add
push
js
mov
mov
int3
pop
add
rcl
dec
ljmp
imul
jl
repnz
inc
cmpsl
and
nop
fcos
jp
test
sbb
sbb
adc
lods
das
pop
add
iret
mov
cmpsb
je
inc
adc
mov
add
jns
adc
cmp
out
cmp
dec
dec
orl
push
movsb
push
xor
icebp
pop
lock
jo
lds
repz
out
xorl
push
in
cmpsl
push
sub
mov
jge
movl
ds
or
fidivrs
addb
xor
mov
or
lahf
rcll
mov
or
mov
fsubrp
adc
lods
jp
xlat
gs
xor
das
mov
cld
add
dec
inc
push
ret
mov
gs
dec
in
nop
jae
les
hlt
or
mov
jl
push
lea
xchg
daa
mov
inc
cld
xor
jns
push
sti
xchg
jecxz
stc
add
je
add
inc
push
mov
into
jl
dec
aas
fildll
aad
lea
ror
jbe
add
ljmp
sub
ror
xor
sbb
insb
repnz
sbb
loopne
sub
lret
ficompl
or
pop
mov
and
idivb
jle
dec
and
lea
jp
daa
sarl
xchg
pop
pushl
dec
repnz
ljmp
jb
xchg
dec
add
pop
mov
add
pop
push
sbb
cmc
mov
test
lret
cmp
and
inc
jne
test
decb
in
push
repnz
pop
sbb
ret
in
fimull
add
jns
stc
roll
xchg
nop
xorb
push
ret
or
add
jns
sub
jo
jae
cli
sub
mov
inc
mov
int
pop
repnz
out
xor
nop
and
fdivl
mov
pop
mov
jl
js
ljmp
lcall
and
push
das
icebp
push
push
hlt
jl
and
adc
idivl
sub
or
outsl
enter
push
mov
jge
movsb
sub
nop
mov
test
psadbw
lahf
outsl
jo
insb
cmc
cmp
lret
add
push
aam
jl
add
cmp
repnz
dec
pusha
sub
addb
ss
cmc
or
sti
sub
jmp
cmp
cmpsb
xchg
outsb
or
scas
adcb
add
or
je
fcmove
jb
xchg
add
test
jmp
sbb
sub
aad
xchg
mov
mov
pop
jb
fcomip
or
loopne
cmpl
or
orb
or
mov
mov
hlt
fcomi
and
cmc
push
xchg
push
xchg
lret
dec
jl
jmp
jns
ret
test
repz
repz
loop
repnz
jns
cmc
sbb
cli
inc
scas
js
stc
mov
cs
xor
test
push
mull
je
test
or
loopne
clc
cs
jnp
cld
xchg
mov
jg
stc
dec
add
mov
push
or
repnz
lret
jl
xlat
loop
lock
add
pop
add
aad
xchg
inc
cli
in
adc
jo
inc
jbe
jb
stc
jp
dec
stos
add
sbb
jp
lock
rcll
mov
jno
xchg
icebp
inc
in
cmp
add
xlat
add
pop
ds
inc
hlt
mov
inc
clc
fisttps
sahf
push
or
add
jecxz
lods
sbb
xor
sbb
lcall
push
int3
mov
test
mov
xor
mov
adc
mov
ss
push
or
sub
push
dec
jo
mov
mov
cltd
mov
inc
cmp
pop
adc
sar
je
adc
jnp
adc
gs
pushl
nop
fstpt
pop
add
ret
add
stc
sub
xor
imul
pop
fsubs
inc
loopne
jle
sti
inc
cmc
fdivrl
addb
into
mov
dec
add
leave
repnz
jmp
xchg
xor
jmp
mov
and
xor
call
or
mov
test
jae
xchg
clc
add
sub
lahf
inc
pop
aas
dec
je
sbb
dec
int
lds
std
adc
sbb
leave
bnd
push
mov
mov
sbbl
hlt
cmc
adc
jle
push
repz
push
lret
xchg
ss
testl
pop
add
adc
add
add
nop
je
adc
aas
fistps
repnz
jae
or
mov
mov
int3
std
mov
sbb
xor
je
mov
and
addr16
repz
ret
imul
aad
dec
dec
add
jl
adc
pop
adc
inc
sti
sbb
repz
dec
data16
ds
cmc
loop
mov
pop
mov
jg
and
adc
pop
ss
imulb
pop
add
dec
outsl
mov
inc
pushf
mov
lret
sbb
mov
mov
fildl
mov
stc
icebp
or
jbe
and
xchg
aad
sub
push
add
sub
repnz
adc
fistl
adc
or
push
mov
sub
xlat
sbb
cmpsl
repnz
je
sub
stc
int3
fs
xor
jp
mov
clc
xor
sbb
jo
push
outsl
jns,pn
push
and
jbe
push
jno
les
movsl
roll
outsl
push
adcb
in
jo
sub
stc
sub
or
ljmp
cwtl
mov
or
pop
insb
icebp
mov
add
add
daa
xchg
int3
jmp
mov
cmp
faddl
fdivs
push
mov
in
adc
and
mov
cmpsb
gs
jp
pop
shlb
inc
outsl
cmc
or
mov
rep
or
cmpxchg8b
std
jle
imull
add
sbb
sti
xor
adc
add
shll
js
lea
pop
out
or
daa
lock
daa
clc
inc
cli
push
addr16
ljmp
lods
mov
sbb
getsec
div
pop
outsb
das
mov
add
jns
shlb
aaa
and
mov
lods
shl
sti
add
ja
icebp
cmp
xor
cmp
imul
repz
cmc
aaa
fcoml
sbb
hlt
mov
cmp
mov
inc
ficoms
mov
sbb
push
jmp
or
repnz
or
push
inc
xchg
mov
add
mov
icebp
jp
mov
jecxz
mov
mov
pop
push
cmp
mov
daa
loop
in
clc
add
pop
ja
push
rolb
xchg
fisttpll
xor
ljmp
adc
mov
jne
mov
in
push
jns
sbb
xchg
fsts
jb
shrl
jo
adc
jns
cmp
cmp
notl
xchg
mov
or
cmc
loopne
lret
enter
mov
divl
push
les
push
shrl
fmuls
int
and
stos
test
mov
sahf
or
ret
int
or
divl
sub
mov
add
sbb
pop
pusha
cmp
repz
mov
or
xor
shlb
repz
mov
cmp
hlt
jno
sbb
dec
mov
xor
pop
jo
mov
sub
and
clc
setge
pop
out
jp
pop
repz
jbe
cmc
cmp
jo
adc
mov
addr16
mov
xchg
mov
rolb
js
pop
jo
aaa
test
sub
inc
and
mov
ljmp
jle
mov
inc
leave
clc
icebp
repnz
fcmovnb
adc
in
or
cs
std
adc
xlat
scas
add
push
repz
cmpsb
popa
negb
add
jae
dec
pop
jb
push
es
jg
cwtl
fs
push
jmp
lcall
loopne
push
cltd
and
adc
mov
testl
mov
les
test
push
xchg
mov
testl
or
and
mov
test
xor
out
adc
jg
or
mov
mov
cmp
xor
stos
stc
push
mov
in
js
jno
sti
test
cmp
adc
mov
repz
or
repnz
or
xor
xchg
fsubr
push
jp
xchg
jns
add
xchg
jp
add
jae
mov
test
out
lds
push
stos
in
mov
shll
jnp
js
sbb
add
jecxz
js
ret
jno
insl
stos
daa
add
sti
arpl
ja
sub
outsl
aam
not
mov
or
outsb
cmc
js
nop
adc
jnp
out
pop
or
fnstcw
push
ret
sbb
xor
and
cmpsb
xor
pop
syscall
cmc
std
mov
or
sahf
sti
xor
cmp
inc
lea
or
mov
mov
cmp
sub
inc
jecxz
lock
cli
mov
adc
and
xor
inc
lds
or
push
insl
aad
test
xor
jno
es
sbb
xor
sti
pop
pop
xchg
cmp
jo
pop
fwait
pop
mov
jb
mov
jbe
fs
dec
or
lret
jmp
jge
mov
xlat
pop
std
lret
shr
repz
sub
adc
xor
jb
clc
or
push
int3
pop
dec
clc
or
jl
lock
cmp
and
pop
jo
je
pop
fs
iret
adc
cmp
push
sbb
repz
sbb
xor
xor
and
sub
adc
sub
adc
fsts
adc
mov
loop
je
or
fbld
push
adcb
add
pop
out
jns
fdiv
add
xorl
aas
loopne
enter
jae
or
repz
into
daa
cmp
or
mov
xchg
or
mov
xor
call
cmc
nop
xchg
or
push
fidivl
or
idiv
inc
pushf
shl
and
mov
test
jmp
push
add
jns
mov
test
pop
mull
pop
sti
xchg
sbb
xor
xor
ds
or
add
mov
mov
orl
data16
push
xor
jns
xor
cmp
or
push
addl
lret
sbb
add
stc
adcb
out
cvtdq2ps
lret
call
push
inc
in
push
mov
pop
jnp
and
ficoms
shll
js
mov
push
sbb
mov
ja
in
cmp
xorl
jae
cmc
out
pop
lea
push
sub
jo
mov
inc
xlat
push
testl
pop
jge
leave
xchg
stos
or
cmp
div
xchg
push
test
mov
mov
rorl
sar
jmp
xchg
sti
or
outsl
sti
mov
scas
fldl
add
cmp
mov
adc
jl
cmc
popl
aad
decb
mov
xchg
outsl
test
cmpsl
jl
in
out
inc
jmp
repnz
out
xor
pop
mov
xor
sub
clc
out
push
stc
adc
inc
mov
push
or
jnp
in
out
push
repz
arpl
adc
outsb
dec
rcrb
sbb
pop
sub
sbb
and
and
jae
clc
cmp
push
imul
xchg
jne
lods
xchg
xlat
sbb
cs
mov
idivl
and
jnp
adc
lea
xor
in
lret
imul
popf
fdiv
pop
inc
xor
jo
idivl
xor
pushf
out
xlat
dec
mov
pop
push
and
pop
sub
pop
and
es
xchg
jp
cmp
stc
push
stc
add
and
cmpl
gs
icebp
aaa
jmp
testl
outsl
pop
sbb
dec
cmp
movsb
cmp
add
mov
xchg
mov
fnstcw
loopne
test
adc
or
imulb
cmp
jmp
add
xor
jns
adc
push
mull
adc
xlat
mov
push
aad
cmc
push
push
mov
or
jmp
add
dec
mov
mov
clc
jl
mov
xlat
xchg
out
std
and
or
jg
insl
sbb
mov
jb
mov
adc
and
push
insl
repz
leave
aam
lods
sahf
int3
ja
xchg
repnz
add
lods
or
icebp
jno
sub
dec
xor
mov
adc
cmp
psubw
mov
ss
leave
sar
jno
cli
sub
js
dec
pop
testl
leave
add
mov
in
je
leave
imul
and
adc
and
sub
push
int3
add
cmp
js
mov
mov
mov
mov
sbb
sarl
scas
xlat
push
mov
and
cmc
inc
add
test
sub
jo
pop
jo
jb
jmp
jmp
sbbb
or
sbbb
in
sbb
test
jo
les
cmp
call
in
enter
rorl
mov
cmpl
jne
xor
add
xor
push
inc
mov
jno
adc
jns
add
shlb
es
jmp
pop
cld
adc
sbb
mov
ljmp
punpckhbw
scas
aaa
div
leave
data16
ret
xchg
stc
cltd
add
sbb
repnz
andl
sub
sti
pop
push
sub
aam
sub
xlat
jmp
add
mov
lods
idivl
addb
jecxz
lock
and
jns
ret
hlt
push
in
cld
xchg
int
enter
das
mov
aaa
ja
xchg
adc
cmp
je
cmp
push
lock
sbb
xor
flds
push
addr16
jl
xchg
or
jl
clc
rorb
es
lods
jl
inc
xchg
mov
inc
adc
nop
call
add
adc
mov
out
jp
add
jmp
xor
inc
cltd
jl
or
sbb
adc
mov
ljmp
mov
push
sbb
sti
mov
mov
stos
enter
jg
pop
out
xor
mov
xchg
incb
add
ds
xor
jae
out
std
and
inc
je
jb
div
mov
jno
lret
lea
adc
and
and
pop
pusha
and
xchg
xchg
add
jge
and
mov
ds
add
cs
jno
inc
pop
push
pop
lds
fdivr
pop
imull
test
xor
mov
daa
loope
and
xchg
sbb
lcall
dec
cs
test
lahf
sbb
jo
imul
or
fidivl
adc
sub
icebp
push
repz
std
dec
or
add
mov
mov
jns
jbe
std
dec
arpl
inc
and
sub
sbb
daa
mov
sti
jo
cmova
ja
jg
adc
mov
pop
cli
testl
sub
cmpsl
add
shl
mov
push
outsb
mov
adc
loopne
pop
cli
repnz
cmc
les
sub
jg
popf
adc
lock
add
hlt
jle
cmc
enter
lds
add
jl
int3
or
xorl
sbb
cmc
xchg
repz
adc
xor
or
movsb
sbb
test
scas
jns
clc
lock
cmp
or
das
loopne
sub
xchg
xor
xorl
cmp
push
xlat
into
js
jo
push
subl
jl
cwtl
icebp
push
cmp
pop
adc
pop
or
xor
ljmp
mov
mov
cs
cmpsl
jmp
mov
xchg
test
mov
inc
jl
jno
xchg
sub
insl
add
mov
mov
scas
mov
or
inc
jmp
aam
repz
mov
pop
mov
test
nop
adc
decb
or
testb
jns
jno
sub
inc
negl
div
sbb
jg
mov
add
pop
xchg
push
mov
mov
add
mov
inc
test
cld
inc
mov
push
test
or
jno
js
rorb
scas
jno
sub
sub
jg
hlt
gs
or
shlb
xchg
jle
stos
or
cmc
add
out
push
push
scas
cmc
fistpl
jno
mov
xor
loopne
test
mov
mov
xor
cmp
lcall
pop
jo
repnz
jp
jl
dec
notb
mov
adc
aam
cltd
hlt
jmp
push
pop
xor
sub
fisubrl
jno,pt
cmp
push
pushf
pop
cmp
lahf
fwait
inc
nop
mov
mov
or
cmpb
add
push
jo
dec
fcmovnbe
repz
dec
daa
iret
movsb
cmpsb
das
jnp
pop
jb
enter
outsl
repz
pop
std
sbb
or
js
icebp
es
neg
or
push
movsl
orb
loop
shlb
repnz
in
push
push
add
adc
fistpl
cmc
mov
scas
popa
mov
or
shrb
mov
mov
daa
scas
rol
add
in
es
mov
mov
bnd
push
sub
dec
mov
andl
stos
fcmovu
mov
repz
cli
sbb
mov
mov
xor
ljmp
sbb
xor
jo
xchg
mov
mov
xorl
mov
mov
dec
push
aam
mov
in
aas
dec
out
icebp
mov
add
xchg
aas
push
test
adc
xor
clc
xchg
mov
inc
ja
xchg
and
incl
jo
notb
jo
imul
es
adc
sarb
addr16
jnp
adc
fsubr
stc
add
cmpsl
nop
repz
or
test
das
add
outsl
aam
leave
push
ja
sbb
nop
out
push
jge
adc
jg
fwait
repz
xor
shr
dec
idiv
xchg
sub
cmc
dec
sub
fcomp
inc
aaa
add
stc
mov
sbb
test
jecxz
cmpb
push
mov
push
out
jno
push
add
xlat
sti
xor
jp
dec
lea
xor
jo
mov
jl
cmp
call
loope
pop
mov
jle
xor
pminsw
nop
lock
hlt
or
mov
je
push
jmp
icebp
mov
push
aam
push
cli
or
loopne
dec
popf
lcall
add
fistl
out
loop
test
repnz
inc
imul
mov
xor
fcmovnbe
mov
loopne
push
xor
or
test
adc
push
jb
push
xchg
jl
sti
or
loopne
mov
testl
mov
mov
or
subl
fists
xor
cmpsb
scas
sub
mov
mov
jl
add
cmpsl
icebp
jns
popf
aaa
add
mov
and
inc
clc
adc
jnp
sub
xor
dec
or
fmuls
sbb
sub
outsb
clc
jae
aas
xchg
ljmp
push
sti
repnz
and
scas
icebp
jno
out
push
fs
aam
and
sbb
subl
jno
adcb
ljmp
jne
repz
stc
pop
repnz
xchg
xor
test
and
pop
inc
and
jle
pop
lret
jnp
jo
cmp
repz
mov
or
out
pop
icebp
lret
jb
push
add
movsl
pop
out
add
or
aas
ficoml
cmp
repz
mov
inc
push
clc
push
sti
cltd
push
pusha
inc
xchg
shlb
jo
or
sbb
adc
ret
out
xor
add
jb
enter
pop
movsb
sbb
loop
sbb
lcall
jns
icebp
mov
push
fprem
inc
cmc
cmpl
fidivs
mov
cmc
or
cld
cmp
clc
fwait
aad
sbb
out
pop
repz
loope
or
sti
pop
bound
jae
aaa
and
xorl
mov
test
call
and
js
lret
insb
push
nop
scas
iret
scas
or
loope
out
cmc
add
push
cmc
push
or
ret
stos
mov
push
jmp
and
adc
int3
xchg
add
mov
movsl
inc
std
shll
shlb
push
jmp
stos
fnsave
test
or
repnz
xor
bnd
lea
push
int3
std
push
mov
aad
stos
outsl
je
std
jo
jae
es
xor
push
jno
mov
clc
clc
mov
mov
mov
add
sbb
mov
ss
mov
gs
add
into
inc
mov
mov
imul
mov
dec
outsl
jle
push
mov
add
cmp
cwtl
stc
and
xor
jne
jecxz
mov
std
jae
push
test
sub
jb
cmp
repnz
cmp
sbb
cmp
insl
ficoml
push
add
pop
sbb
adc
mov
test
pop
pop
sub
adc
loope
xchg
test
sub
jns
or
cmpb
jle
roll
cmp
jnp
adc
mov
or
inc
fldenv
sbb
repz
sahf
in
jl
or
lods
out
leave
testl
je
adc
in
sti
and
sti
cwtl
pop
mov
and
test
fbstp
or
addb
push
std
cmp
shrb
xchg
add
mov
jecxz
sbb
mov
dec
jns
dec
jo
inc
lock
jb
or
mov
jae
sbb
call
xchg
in
lock
cmpl
inc
inc
orl
icebp
adc
jle
repz
and
jo
cmp
pop
adc
pop
aam
sub
cmpl
mov
aam
cwtl
cmpsl
outsl
add
add
push
in
cmc
icebp
js
adc
gs
std
call
mov
push
or
int
stc
adc
jp
rorl
nop
pop
xchg
and
mov
pop
lds
inc
repz
stos
pop
ss
sti
ds
pop
add
les
mov
sahf
add
xor
mov
mov
out
jle
jns
xor
lds
xor
insb
dec
and
xlat
pop
or
mov
arpl
fistl
and
add
add
test
add
mov
ss
xor
jg
cmp
repz
xchg
aad
idiv
mov
xchg
in
cld
lods
mov
jmp
cmc
icebp
ret
insl
cmp
inc
fisubl
and
fdivrs
cli
fldl
fwait
daa
addb
add
pop
adc
pop
jb
mov
push
int
ja
adc
push
sub
repz
movsl
clc
test
out
sbb
xchg
xor
pop
or
decl
cmp
or
mov
and
idivb
sti
daa
es
xchg
lds
mov
xlat
inc
aaa
jge
adc
mov
sub
icebp
xlat
in
sbb
jns
dec
cwtl
ret
xchg
lock
scas
jmp
add
mov
lret
adc
sbbl
cli
fstp
push
loopne
gs
xor
aad
lcall
cmp
dec
sbb
mov
mov
loope
out
jp
pushl
test
clc
call
sbb
mov
aas
popa
ds
push
sti
push
sbb
dec
jo
jl
repnz
inc
js
lea
or
push
inc
scas
sbb
icebp
mov
jp
mov
daa
xchg
rcl
push
test
or
and
hlt
repz
xchg
sbb
repz
aaa
push
test
add
stos
loop
call
je
in
pop
xchg
push
test
inc
add
add
pop
mov
adc
pop
or
repz
push
out
scas
cmc
sbb
cmc
mov
push
lods
and
or
lods
repz
decb
lahf
jge
xlat
inc
in
adc
scas
jecxz
dec
fwait
pop
in
jb
fadds
jl
xchg
pop
xor
mov
jns
ds
insl
stc
repz
sbb
lea
lock
popa
pop
adc
add
and
mov
cmp
add
fistl
mov
push
push
and
mov
fwait
dec
push
or
pop
add
push
adc
lock
cmpsl
std
adc
clc
imul
sbb
and
test
or
aad
add
jnp
or
sbb
pop
mov
fdivr
jg
xor
jle
inc
mov
or
ljmp
jb
add
notl
pop
pop
cmpsb
lsl
cmpl
mov
and
cmp
or
mov
out
ret
jl
std
pop
xchg
or
test
outsb
sahf
adc
inc
or
mov
divl
int3
mov
jge
adc
pop
add
inc
imul
pushf
popf
cld
nop
xor
dec
pop
xor
cli
adc
mov
sbb
add
mov
adc
stos
jmp
jg
mov
adcb
add
or
pop
add
shll
adc
mov
rcrb
std
rorb
dec
and
inc
fsubl
mov
clc
mov
fwait
repz
xor
mov
scas
adc
nop
jno
pop
js
ja
movsb
iret
mov
jno
sub
clc
sbb
fstpt
jne
loopne
rolb
adc
add
mov
or
xor
push
xor
in
clc
in
adc
push
fcomip
int
roll
cmp
pop
call
or
ds
xor
xor
inc
xchg
fwait
repz
js
xor
add
out
or
xor
lcall
mov
dec
and
cmc
add
push
fidivrl
rcrl
pop
mov
lret
jnp
add
add
movsl
and
repnz
pop
add
test
xlat
cld
mov
jle
nop
cmp
lret
stos
lea
push
and
pusha
sub
xchg
aam
pop
in
add
clc
mov
mov
add
jg,pn
lods
je
aas
sti
xchg
add
test
fstpt
dec
cmpsl
sbb
xor
nop
enter
inc
xor
add
icebp
sbb
xor
ds
test
hlt
cmc
push
jno
cld
mov
orb
jnp
js
jo
repnz
sbb
icebp
repz
add
shr
xor
pop
jnp
loop
es
sub
pop
jg
int3
jno
cmp
pop
jns
fisttps
std
nop
mov
and
pop
jo
testb
and
div
cld
push
rcrl
jb
and
xor
clc
das
stc
add
mov
idiv
xor
cwtl
clc
clc
push
inc
adc
xchg
movsb
negl
jns
xor
ret
push
in
push
add
pop
cwtl
and
loop
mov
test
nop
sub
fwait
rcrb
data16
aam
stos
ss
fwait
addb
cmp
sbb
movsl
clc
fwait
repz
testb
repz
xor
mov
test
push
sti
push
pop
into
ror
jne
or
mov
push
sbb
cli
jo
jecxz
add
or
or
xchg
repnz
or
ljmp
push
sub
pop
mov
add
cmp
jno
mov
sbb
fdivr
cmpsb
xchg
inc
push
push
and
into
nop
adc
ss
ja
decb
ja
shlb
pop
xchg
and
loop
clc
test
sti
mov
sti
adc
iret
das
js
outsl
decb
adc
mov
or
xchg
push
xchg
hlt
aaa
repnz
scas
fiaddl
or
adc
jmp
adc
lds
mov
push
xlat
stos
mov
sarb
flds
jo
inc
arpl
addl
mov
lods
add
andl
int
push
adc
xor
pusha
xlat
dec
add
xchg
pop
test
out
clc
mov
push
jo
xor
sub
adc
cmp
mov
into
loopne
inc
sti
ds
add
std
gs
fmulp
or
push
dec
stos
adc
mov
cld
add
aaa
out
pop
and
pop
sub
cmpb
dec
jl
icebp
jecxz
les
cmc
mov
andb
cmp
hlt
xor
jo
das
or
or
mov
xchg
icebp
in
cmp
cmc
dec
cli
aam
fsubrs
adc
into
jp
insl
jg
testb
lea
lods
hlt
adc
adc
inc
outsl
fistpl
sahf
add
stos
pop
jge
xor
mov
push
gs
jae
leave
mov
jo
cvtps2pd
jns
jle
add
cli
adc
xor
xchg
repnz
and
dec
scas
daa
je
bound
leave
movsl
mov
pop
add
mov
test
test
and
dec
hlt
mov
xor
hlt
stos
mov
movsl
sbb
sahf
cmp
scas
mov
add
jb
das
test
adc
push
test
pop
xor
jne
ja
bound
jns
sub
jmp
rclb
push
imul
das
js
aas
jno
push
mov
push
es
pop
jg
icebp
sbb
jb
clc
xchg
movsb
jl
or
lret
out
sti
mov
mov
xchg
jp
mov
sti
or
sbb
orl
xchg
adc
lock
xchg
repnz
push
xchg
insb
aaa
lock
shrb
inc
mov
icebp
rclb
inc
repnz
jp
inc
or
xchg
xchg
xorb
push
adc
jle
add
sbb
repz
loop
stc
inc
sub
adc
lcall
inc
adc
mov
mov
lahf
jp
idivl
inc
push
cmp
repnz
jle
sub
repnz
cmp
jg
mov
xor
add
or
xor
dec
out
testl
mov
jl
lret
lea
rcll
add
adc
cmp
nop
pop
pop
inc
xor
je
dec
xchg
lret
sbb
jge
xchg
pop
xorl
nop
jae
inc
les
push
cmc
dec
push
adc
int3
mov
aas
jns
mov
js
stc
repz
mov
fcmovnb
pop
xor
fimull
mov
repnz
js
xor
jo
jle
divl
sub
jne
adc
in
sti
mov
shl
fs
xor
lock
mov
stc
popa
pop
lods
xor
mov
xor
test
add
jge
imul
push
mov
sahf
mov
jl
sti
ss
dec
ficompl
or
mov
push
fisttpll
mov
adc
sub
inc
cmp
lret
cwtl
push
push
push
dec
xchg
cltd
je
cli
ja
xchg
or
push
mov
and
sahf
adc
shll
imul
jno
divb
repnz
loop
or
or
mov
sub
xor
xlat
cs
mov
jl
into
or
push
xorb
sti
idivl
push
cmp
lret
push
or
add
sbb
xchg
inc
push
mov
cmp
loop
jbe
mov
and
dec
lods
push
imul
adc
push
or
adcl
add
or
lock
xlat
cmp
xorb
ljmp
hlt
xor
pop
int3
insl
repz
jns
pop
push
mov
incb
adc
sub
data16
jl
or
lcall
bound
sar
xor
aas
jo
jg
dec
add
cmc
sti
jno
or
cwtl
js
incb
sbb
lret
scas
push
jns
pusha
xor
mov
into
add
xchg
jge
and
cld
push
sub
repnz
sbb
mov
mov
in
xchg
hlt
add
mov
inc
lret
jns
mov
repnz
add
pop
add
sti
push
in
and
lea
subb
mov
jle
pop
nop
leave
movsb
cwtl
mov
or
repz
xchg
push
mov
clc
jno
and
rolb
les
inc
push
test
mov
xchg
pop
xor
xchg
icebp
jns
stos
aad
aam
jne
jle,pt
inc
jno
sub
mov
add
jns
fs
mov
mov
adc
ficomps
mov
test
mov
push
jno
rorl
je
push
in
sub
xchg
mov
jbe
adc
adc
or
sti
movsl
jae
push
movl
adc
xchg
and
inc
push
adc
mov
inc
and
inc
lea
push
mov
mov
mov
push
cmpsb
pop
sti
dec
sbb
mov
push
in
sub
push
lds
fwait
idivl
lods
mov
mov
dec
push
sbb
and
mov
or
loop
lods
testl
sbb
sub
or
sbb
mov
orb
cmp
cli
fcmovne
sbb
scas
outsl
mov
or
ss
mov
nop
jo
cli
or
lret
psubusw
lods
pop
dec
or
cmp
sahf
adcb
das
add
mov
ljmp
add
loop
repz
push
or
lahf
xchg
jge
stos
xchg
and
repnz
lods
xchg
push
inc
mov
mov
dec
call
jae
xorb
js
imulb
lret
adcb
inc
lods
ss
mov
add
jno
pop
cmp
fs
xor
adc
std
push
xor
lret
into
mov
sbbb
sub
iret
hlt
cmpl
testl
xchg
stos
aaa
add
sbb
push
cs
sti
cmp
cmp
les
shll
add
aas
jb
sbb
and
notb
test
or
mov
stc
aad
push
rcll
cmp
push
push
ss
fwait
add
stos
and
xor
jle
clc
sti
js
lods
lock
or
adc
ss
xchg
pusha
cmc
add
cmpsl
enter
mov
mov
je
cmp
scas
mov
add
mov
les
dec
dec
repnz
psrad
test
fnstenv
adcl
xlat
add
sub
nop
cld
adc
cmp
aam
or
syscall
mov
add
add
or
repnz
jnp
sahf
adc
test
js
out
mov
or
sbb
stc
nop
fyl2x
adc
or
cmp
mov
sbb
push
and
xor
sarl
mov
in
imul
scas
xchg
jg
jno
cltd
sbb
dec
dec
sub
add
sbb
jno
push
in
or
adc
inc
pop
xacquire
and
scas
jl
nop
jecxz
or
rclb
cmp
sbb
push
pop
or
push
mov
aam
push
xor
mov
dec
iret
cmpsl
js
nop
jns
cmpb
push
and
test
jbe
add
push
mov
mov
jb
adc
into
sti
or
popa
imul
sub
pusha
adc
outsl
insb
jns
sarl
xlat
inc
fcomi
pop
jb
inc
stc
xor
mov
xor
sbb
jb
and
cli
call
xor
mov
in
insb
mov
int
jns
pop
addl
daa
xlat
push
bound
sti
ret
adc
sub
js
jno
or
ja
xor
stc
add
fcoml
pop
test
mov
jo
inc
adc
int3
or
loope
jns
xlat
push
test
and
clc
sbbb
arpl
sbb
divl
or
aad
repz
jne
mul
loopne
inc
push
pushw
pop
or
mov
pushf
pusha
or
popl
jmp
mov
scas
adc
jp
dec
repnz
cld
xchg
or
lock
xor
lcall
sti
or
jl
adc
jge
jae
xchg
jl
aad
jae
imul
xor
nop
jp
pop
rolb
push
lret
je
jne
jge
sub
xor
pop
mov
out
jo
inc
cmp
mov
jge
repz
testb
adc
and
adc
lea
mov
je
stos
cmc
subb
in
mov
mov
mov
aam
and
add
sbb
fisubrl
es
repnz
push
andb
int3
ja
es
shlb
add
loop
pop
notl
jne
inc
jle
loop
sbb
popa
scas
rolb
out
std
inc
mov
and
jmp
test
and
mov
jp
cmpsl
fwait
jae
inc
rorl
cwtl
ss
mov
sbb
pop
pop
inc
in
push
mov
sbb
push
rclb
sub
or
xlat
adc
lcall
gs
cwtl
aas
and
dec
push
test
insl
es
push
ljmp
and
clc
jp
out
int
jo
jecxz
iret
les
inc
xorl
mov
mov
div
lahf
adc
push
stos
add
lock
sbb
push
imul
sarl
mov
int3
jge
xor
pop
rol
sti
mov
pop
add
test
inc
fadd
mov
jno
cld
aas
pop
movsb
push
cld
idiv
push
repz
mov
mov
scas
jmp
stc
adc
sub
insl
div
adc
mov
fldt
addb
cmp
xor
add
xor
rorb
jno
stos
adc
clc
fisttps
cwtl
or
or
add
enter
shll
adc
and
add
repnz
fistpll
sub
jecxz
jns
jns
and
insb
push
testl
pop
xor
addb
mov
xlat
push
jg
in
jle
js
sub
and
mov
push
jp
push
jae
outsl
or
lock
add
cmp
scas
out
icebp
xchg
repz
repnz
or
cmp
out
or
ror
push
arpl
mov
sbb
pop
cmp
mov
xchg
jo
addr16
lods
cmp
aas
call
sahf
inc
or
into
mov
and
inc
faddp
cmc
daa
je
pop
rolb
test
sub
in
jb
clc
loope
enter
ljmp
adc
js
fcmovne
add
repnz
add
or
int
xchg
mov
mov
add
push
add
mov
movsb
inc
ljmp
fdivrl
add
sub
or
adc
mov
sbb
fldcw
cmc
jl
cmc
cmpsl
mov
jnp
nop
pop
daa
orb
xor
jne
ss
dec
xrelease
pop
repnz
cmp
shl
subl
int
movsb
cmp
dec
jnp
xchg
lods
jp
mov
add
mov
xchg
or
out
push
dec
add
add
aam
pop
jp
xor
ds
jo
sub
adc
cmp
xchg
jnp
paddb
js
or
xor
jnp
push
add
jns
and
stc
rolb
nop
fs
repz
inc
xchg
adc
scas
mov
adcb
mov
push
jg
enter
adc
sahf
xchg
add
xlat
fimull
push
sbb
stos
sbb
adc
and
mov
add
je
mov
jno
pop
or
lock
fwait
push
sar
outsl
jne
push
or
stos
clc
dec
mov
cld
add
pop
xchg
lea
add
add
icebp
add
cmp
mov
hlt
pushf
aad
xlat
repz
jno
inc
clc
push
and
mov
test
mov
mov
cld
inc
add
sahf
or
add
in
push
ret
sbb
stc
inc
repnz
das
pop
inc
mov
stc
pop
adc
and
sarb
inc
jo
mov
insb
cmp
sti
jecxz
push
paddusw
addr16
pushf
clc
test
testl
sahf
dec
aam
dec
nop
jne
sti
dec
fisttpl
and
loop
bnd
lea
jo
jle
pop
stc
and
clc
cmpsb
lcall
repnz
int3
fucomp
ss
sub
hlt
ds
xor
leave
or
mov
lods
jne
pusha
movsb
ja
sbb
xlat
inc
cwtl
in
adc
mov
arpl
je
testl
pop
cli
lods
or
movsb
pop
mov
fists
outsl
push
cld
dec
icebp
in
arpl
test
cmpsl
jb
dec
popa
jl
mov
cmp
aaa
cmc
je
leave
mov
test
mov
inc
xor
fwait
mov
xchg
mov
mov
inc
inc
sti
mov
xchg
sub
test
xchg
xchg
push
in
ds
std
mov
add
jl
push
xchg
lea
adc
add
repnz
es
pop
push
stc
push
lret
cli
and
mov
clc
or
cmc
adc
push
lds
push
andl
test
hlt
andl
jmp
push
mov
jle
sub
flds
mov
adc
sbb
stc
mov
push
hlt
jae
test
scas
pop
xor
not
and
inc
cmp
xor
fidivrl
cs
add
sbb
mov
sub
std
icebp
orl
rolb
stos
pop
movsw
push
in
and
or
mov
shll
xor
mov
adc
jo
iret
xchg
test
lods
test
sbb
dec
pop
add
sahf
or
push
mov
mov
xor
dec
jecxz
sub
push
push
popa
repz
mov
or
or
sub
and
sub
sti
das
cmc
jbe
cmpsb
fs
cmp
mov
inc
jge
or
mov
jle
and
pop
sahf
lret
repz
ja
push
ljmp
jp
push
imul
adc
push
ds
bound
clc
sbb
sbb
rol
test
mov
xlat
xchg
addps
inc
iret
sbb
mov
orb
adc
jecxz
lahf
cmpl
aas
pop
push
push
or
add
adc
pop
pop
add
movq
ss
push
jl
xchg
pop
in
stos
add
mov
lahf
cmpsb
jg
aam
and
lea
mov
repz
mov
add
and
jg
movb
loopne
jp
mov
and
push
jns
in
pop
or
push
insb
ds
dec
aam
sarb
lock
rcl
bound
rorl
sub
adc
xlat
fidivrl
pushf
stos
push
repnz
and
mov
or
xor
xor
sub
push
fs
fwait
lea
fcomip
sbb
out
xor
std
dec
or
in
push
jne
js
lcall
cmp
cld
push
xor
mov
repnz
hlt
shrl
add
popa
jg
loop
bnd
mov
xchg
cld
adc
aam
jae
scas
cmp
andb
repnz
in
add
movsl
test
aaa
and
cli
cmc
sbb
push
sbbl
lahf
sbb
sub
mov
mov
sti
js
scas
and
mov
add
repnz
jns
jp
dec
jo
or
push
das
adc
xor
mov
ds
pop
mov
je
sub
push
inc
push
dec
jae
popf
cmpb
push
lock
xor
jns
mov
pushl
pop
inc
hlt
test
fldl
adc
imull
clc
loop
jp
les
cmp
jne
or
push
rorl
sub
mov
cltd
sub
fimull
or
addb
mov
es
out
adc
scas
icebp
mov
xchg
push
hlt
cmc
mov
jo
mov
inc
jg
jo
mov
or
xor
or
sub
push
icebp
jne
das
aad
mov
cli
xchg
outsb
add
fisubrl
lods
cltd
inc
or
inc
mov
insl
pop
jo
cmc
incb
sub
lcall
outsl
hlt
cmc
call
xor
loop
decl
out
ret
jmp
or
loopne
jo
jns
jle
imulb
ss
push
sub
inc
xor
ret
cli
and
sbb
push
xor
push
add
or
adc
fisttps
sbb
mov
jnp
shrb
jecxz
pop
push
sbb
mov
pushf
mov
jno
jns
test
or
lea
jp
out
je
mov
out
or
addl
push
xchg
clc
adc
or
mov
push
shrl
out
push
int3
sbb
out
nop
jbe
xchg
clc
mov
mov
lea
push
mov
cs
jge
mov
stc
push
cmp
sub
scas
push
sub
insb
int
sbb
jp
xor
test
add
lds
out
repnz
push
mov
sti
test
cli
sub
mov
mov
mov
adc
pop
nop
add
in
cmc
add
cmp
add
xchg
lock
hlt
sti
adc
xor
je
sub
add
xor
addr16
pmuludq
in
pop
ja
xchg
cmc
ficomps
inc
ss
inc
mov
add
or
mov
addl
setnp
popf
rorb
push
int
xchg
xor
mov
adc
mov
in
cmpsl
jnp
cmc
cmp
and
outsl
pop
mov
dec
mov
sub
add
jo
cmc
aas
dec
popa
mov
divl
hlt
mov
push
nop
rcrb
fucomip
cmpsb
movsb
or
xorl
data16
push
aad
mov
pop
push
sbb
lods
dec
repz
mov
add
xchg
repz
inc
shll
jle
jg
mov
or
jl
cmp
lock
and
lods
sub
add
into
inc
ja
orb
xor
insl
mov
pop
loope
adcl
das
jb
inc
imul
adc
mov
ja
mov
repz
ficoml
push
sbb
hlt
sti
adc
add
stc
insb
adc
add
jno
jp
pop
popa
inc
add
call
jae
sub
or
test
jmp
adc
repz
shr
pop
and
pop
dec
into
mov
mov
clc
add
jo
popa
or
inc
lahf
push
cwtl
fmuls
mov
mov
fistpll
and
xor
or
jae
jl
nop
xchg
sub
xchg
cmp
clflush
lods
cwtl
out
test
mov
stos
or
imul
xorl
push
adc
scas
mov
xchg
and
jle
fimuls
pop
xor
fists
scas
mov
lahf
mov
sub
cmp
jno
data16
inc
movsb
jo
ja
divl
dec
push
loopne
repnz
push
aad
add
adc
lret
test
daa
ficomps
icebp
in
outsl
lret
inc
fwait
add
sub
test
xchg
mov
sbb
push
jg
incb
push
push
cmc
fnstenv
lock
inc
sti
mov
loop
or
sub
imul
shll
jno
or
andl
and
cli
jno
inc
gs
mov
or
ja
cwtl
int3
push
push
shl
sbb
inc
inc
lcall
jb
or
iret
mov
clc
and
ljmp
push
stos
call
jmp
lret
or
cmp
add
movsb
clc
enter
mov
ret
outsb
mov
lea
aaa
mov
repnz
inc
sub
or
push
dec
inc
mov
and
cmc
pop
xor
movsb
es
adc
data16
pop
mov
xor
pushf
stos
xor
scas
sbb
mov
cmp
xor
repz
sub
cmp
mov
sysret
out
or
pusha
lcall
cmp
repnz
push
jmp
out
lock
sub
subl
or
pop
add
hlt
test
ret
fcomi
jae
push
clc
stos
mull
fnsave
push
push
fucomi
gs
rcll
mov
and
mov
insb
mov
fldenv
lretw
pop
sbb
jne
leave
out
imul
dec
fidivrs
stc
jecxz
bound
add
std
and
mov
sub
pop
xrelease
xchg
push
std
xor
jnp
jp
mov
jmp
rolb
jno
es
mov
adc
in
loope
inc
sbb
scas
inc
cld
mov
jle
inc
jo
adc
xor
cld
std
push
mov
mov
xchg
sbb
xrelease
mov
cmpsl
inc
add
dec
adcl
xchg
xchg
mov
jg
hlt
jb
in
cmc
jo
pop
mov
std
ss
or
mov
div
test
jo
aaa
or
or
call
sub
cmpl
push
mov
ja
push
mov
clc
sbb
pop
xor
iret
mov
pop
add
mov
add
adc
push
lret
push
rcl
sub
rcrl
or
nop
mov
mov
add
sbb
pop
jp
leave
pop
xor
cmc
js
mov
adc
adc
mov
adcl
sbb
cmp
or
xor
push
mov
ret
scas
push
test
jae
xchg
dec
mov
pop
sbb
ljmp
aas
aaa
syscall
test
mov
pop
nop
sbb
xor
jno
jmp
jmp
jns
leave
call
xlat
mov
mov
adc
jno
xor
adc
cli
mov
popa
add
aas
and
shl
or
divb
cmc
add
sbb
pop
jno
aad
cmp
xchg
sti
repnz
fisttpl
nop
pop
pushf
push
repnz
sbb
mov
jno
xor
fildl
add
dec
insb
xchg
ficoml
fstpt
int
sti
sbbb
or
cmc
xor
inc
mov
iret
jmp
mov
rcrl
jl
push
mov
rcrb
mov
add
jl
adc
mov
jo
push
paddd
sbb
je
or
mov
pop
arpl
jo
insb
mov
stc
pop
enter
cmp
mov
stos
enter
xchg
or
or
jns
jg
push
xlat
les
hlt
cmp
mov
fs
scas
icebp
add
and
repnz
sti
out
hlt
flds
jns
jns
push
xor
in
add
xor
fmuls
push
adcb
cmp
add
int
stc
xchg
add
cli
mov
and
cmp
jno
dec
dec
scas
popa
or
inc
jnp
int3
jmp
mov
xchg
pop
out
je
inc
testl
jg,pt
mov
mov
int
addr16
jb
add
ret
lea
in
push
jge
xor
mov
push
cmp
pop
nop
pop
xor
test
jl
sbb
sbb
cmp
jmp
jno
clc
push
add
pop
and
adc
orb
ljmp
or
ja
cmpsb
push
subb
les
push
hlt
push
cmc
sbb
inc
cmpsb
mov
xor
pop
pop
testl
xorl
or
rcll
adc
into
xor
xchg
sbb
mov
test
push
push
notb
imul
dec
mov
ret
dec
clc
cwtl
xchg
mov
mov
std
ja
rorl
mov
xor
movzbl
jb,pt
repz
js
cmp
mov
je
lret
aad
jne
jne
leave
sbb
pop
dec
ja
adc
pop
mov
in
shrl
adc
push
cld
test
mov
push
cmpsl
jl
jo
rorb
negl
jno
xorl
std
lods
repz
xor
mov
cmpsb
aaa
or
pop
adc
sbb
mov
fiadds
jnp
jle
nop
add
stc
push
inc
movhps
xor
adc
clc
inc
jne
pop
sbb
outsl
loop
pop
mov
addr16
inc
xchg
ret
or
jecxz
and
inc
or
jp
mov
or
dec
es
cld
lock
and
aad
test
and
mov
fwait
push
jge
jp
popl
shrl
lock
out
add
xchg
mov
fbstp
mov
jno
and
push
div
mov
shrb
mov
push
outsl
fmull
cmpb
add
imul
mov
daa
add
xor
test
add
add
addl
xchg
mov
outsb
cmp
mov
stos
jecxz
daa
ja
aad
jno
repnz
push
xor
in
mov
mov
bound
movsb
sarb
adc
push
into
add
jno
adc
clc
jno
lds
clc
or
ss
xchg
negb
mov
and
adc
add
pop
adc
jno
cmp
or
push
jno
ret
push
scas
jae
or
add
xchg
stos
movsb
add
les
jns
dec
int
rclb
jp
sub
cmp
fwait
and
fcmovnb
cmp
ret
dec
imul
dec
sbb
pop
and
add
mov
add
repz
repnz
pushf
jge
mov
ds
adc
dec
sub
popl
call
repnz
mov
jb
je
add
insl
scas
nop
cli
insl
adc
push
pusha
repnz
daa
and
mul
mov
mov
repnz
add
adc
cwtl
mov
addb
or
mov
add
repz
pop
es
or
pop
test
mov
das
jne
jnp
cmp
mov
ds
outsl
mov
popf
jo
sub
hlt
cmp
jge
cmc
repz
rorl
andb
mov
lock
cmp
sti
out
repnz
repnz
jnp
mov
adc
mov
outsl
lods
xchg
fdivr
sub
adc
cli
mov
ljmp
lcall
leave
mov
arpl
ret
ja
addl
dec
cmp
xor
push
idivl
add
pop
icebp
sbb
mov
or
or
repnz
sbb
push
icebp
pop
xchg
imul
add
sub
fdivrp
mov
xor
jp
sti
int
jl
push
ljmp
mov
xrelease
adc
addr16
or
mov
int
jl
repnz
in
mov
test
dec
dec
std
test
jne
xchg
pop
adc
xor
sti
and
mov
mov
clc
jno
inc
cmp
je
lods
ret
inc
aam
or
cli
stc
push
cmc
xchg
lock
cmpsl
jge
push
cltd
movsl
hlt
push
add
mov
pop
and
fcmovne
and
cmp
mov
mov
jo
std
adcb
pop
xor
xchg
and
push
rorb
sub
sbb
add
sub
push
pop
sbb
jnp
or
or
mov
inc
sti
pop
mov
adc
mov
icebp
ljmp
icebp
jns
fistpll
pushf
adc
jo
nop
scas
jmp
lods
adcl
jle
mov
push
sub
jne
shl
fiadds
cmc
cmc
mov
and
add
add
mov
xchg
fwait
popa
sub
aad
pop
mov
lods
es
mov
pop
adcb
mov
push
aam
lea
out
lea
mov
je
out
adc
xchg
fimull
inc
daa
test
test
mov
push
lea
icebp
test
xchg
add
loopne
mov
stc
jnp
dec
imulb
insl
cmp
jle
mov
icebp
imulb
popa
mov
add
xor
fxch
push
xor
add
xor
lahf
xor
pusha
lahf
sub
xor
push
jle
add
adc
fsts
sbb
repnz
xor
xor
cmp
jb
mov
or
or
out
or
lods
filds
aaa
push
jb
mov
sbb
sti
ja
or
sarl
jns
mov
clc
sbb
push
dec
je
testl
or
hlt
push
adc
add
sbb
ret
adc
out
lcall
adc
leave
cmpsb
mov
inc
or
jge
stos
or
xor
pusha
jp
cmc
imull
add
and
and
cmp
into
xorb
cmp
leave
mov
sub
fistpl
int3
adc
lock
mov
xlat
mov
sub
add
cmpsb
int
out
mov
and
lds
mov
jb
adc
add
repz
sbb
lods
loope
adc
lock
and
add
jmp
scas
out
cmc
adc
lcall
iret
loop
xor
sti
jae
pop
or
pop
dec
faddl
cmp
fisttps
xor
push
xchg
mov
sti
je
push
mov
add
stc
add
lahf
fnsave
adc
push
das
adc
and
pop
pop
xchg
add
xchg
fbld
sbb
test
daa
cmc
dec
or
mov
cli
push
sbb
into
cs
xor
dec
rorl
add
inc
push
cmp
ja
cmc
std
mov
in
adc
mov
rorl
popa
les
or
mov
xor
sbb
inc
stos
add
js
inc
rcl
push
icebp
mov
movd
mov
cmpb
xchg
clc
push
dec
call
pop
sti
aad
lret
clc
repnz
xor
adc
lret
test
sti
icebp
jno
fs
push
sub
jnp
mov
mov
xchg
sub
pop
aad
into
jg
xchg
mov
ret
xchg
xchg
imul
push
lds
je
adc
out
jno
js
adc
or
inc
js
lock
adc
add
mov
or
jge
insl
pusha
icebp
nop
mov
fdivp
and
jb
je
rolb
inc
jno
sahf
iret
dec
sub
mov
mov
dec
out
sub
push
cli
ja
das
scas
pop
clc
cmc
cmpsb
pop
ret
test
mov
mov
pop
lahf
addb
icebp
lret
pop
jl
pop
push
dec
add
lahf
push
xchg
jge
nop
scas
test
mov
push
cmpsl
or
pop
mov
or
mov
fldcw
nop
pop
sbb
dec
lds
jl
jp
std
int
cmc
pusha
mov
or
mov
das
push
outsb
call
lods
xchg
xor
sub
xorl
in
fists
jb
fisttps
mov
dec
nop
xor
mov
mov
push
pop
or
pop
ret
pusha
loop
out
sti
mov
pop
mov
add
cld
shlb
arpl
mov
lds
je
into
lea
jne
adc
outsb
in
sbb
ror
mov
or
pusha
jb
pop
cs
hlt
lock
add
les
pop
pushf
and
int
add
repz
dec
fucomp
jae
or
mov
out
or
icebp
xor
xor
sbb
ret
idiv
and
hlt
dec
sbb
and
cmpsl
adc
jecxz
cmp
cmp
mov
push
or
jmp
test
sub
adc
push
scas
jge
ret
shrb
lea
idivl
cwtl
lcall
sahf
add
pop
pop
jb
push
sti
sti
add
nop
ja
addr16
xor
sbb
push
stc
hlt
loop
jge
inc
sub
mov
jo
or
fsts
test
je
leave
lcall
or
dec
or
mov
ljmp
aaa
movsb
in
jle
jno
mov
ret
loop
jo
fistpll
ds
fwait
jnp
sbb
jns
pop
lret
into
jp
aad
or
repnz
and
or
sbb
cli
and
push
cmp
adc
ret
fildll
js
mov
push
cmp
fwait
jo
xlat
out
hlt
mov
cli
fmuls
test
in
add
push
add
dec
add
cmc
lock
add
or
sub
hlt
push
mov
inc
push
xchg
sub
fstpt
xor
jb
xor
mov
and
add
roll
rcrb
add
clc
addr16
adc
mov
cltd
sbb
add
sub
push
cmp
pop
sbb
repnz
divl
mov
cmc
bound
rcrb
mov
jle
push
sarl
cltd
pop
or
mov
add
xorl
push
shl
je
jg
ss
mov
pusha
mov
or
xor
nop
lahf
xchg
push
mov
fdiv
std
cltd
lods
std
repnz
mov
cmp
jno
cmc
mov
jno
dec
test
adc
sub
icebp
or
sub
aad
clc
stc
push
sti
xchg
xor
jnp
dec
mov
adcl
add
mov
push
sti
adc
push
ljmp
cmc
or
and
xor
shlb
and
outsb
mov
bound
test
mov
loopne
xlat
das
stc
sti
andl
push
cmp
call
repnz
into
notb
sbb
mov
cmp
scas
add
and
jo
inc
mov
xor
test
cmp
or
cmp
jo
cli
cltd
pop
push
std
xchg
js
or
ja
loopne
lock
fwait
ret
mov
jmp
insl
or
and
scas
aas
ds
orb
movsl
std
push
jmp
nop
ds
add
idivb
fbld
sti
int3
mov
add
scas
and
cmp
sbb
add
shlb
mov
xor
sti
xchg
pushf
and
or
mov
dec
or
pop
jno
shrb
sbb
mov
add
js
push
mov
mov
ret
mov
test
inc
adc
jmp
pop
repz
push
jl
std
ja
in
in
mov
aaa
xlat
dec
xor
xchg
mov
sub
sbb
push
addr16
add
fisttps
jge
jno
mov
and
jno
mov
or
xchg
idivl
jns
xchg
sbb
jge
jb
sub
hlt
loope
femms
add
fdivrl
shll
icebp
jne
fcoms
cmp
sti
out
divl
cmp
sahf
mov
xor
scas
lahf
js
jo
dec
imul
inc
push
push
rclb
inc
repz
xor
inc
xchg
pop
mov
sbb
and
add
adc
int3
aad
repz
test
xchg
dec
shl
dec
mov
cmc
adc
inc
out
and
test
cmp
push
mov
cmp
inc
adc
mov
stc
mov
xchg
mov
push
jne
rcrb
add
pop
icebp
or
adc
fbld
repz
add
test
repz
xor
mov
in
repnz
fidivl
xor
pop
into
or
inc
bound
sti
sahf
aam
pusha
jo
jno
lret
mov
pop
insb
insb
jns
nop
int3
inc
adc
out
push
call
fsubs
test
pop
je
jecxz
sub
jns
pop
xchg
add
fstpt
lds
rcl
sbb
or
cmp
add
dec
mov
mov
lahf
pop
repz
cmpsl
in
and
fcom
jl
test
xchg
mov
lds
outsb
clc
ja
lcall
movb
xchg
jne
push
xchg
sub
out
das
mov
xchg
mov
add
mov
jns
or
sbb
dec
cwtl
cmp
ficoml
push
cmpsl
insb
sbb
jae
mov
jne
in
mov
mov
nop
xchg
adc
pop
inc
mov
sub
lea
int3
hlt
les
push
clc
mov
adc
ja
push
or
cmp
xor
or
frstor
in
jg
inc
cmpsl
and
cli
cmc
or
lret
pop
xchg
push
add
jle
or
push
or
pop
adc
push
repz
pop
sbb
push
stos
push
orl
jo
cli
icebp
insb
xor
xor
or
mov
dec
stc
push
cmc
data16
adc
mov
mov
bound
xchg
push
lahf
cmc
push
cmp
repz
adc
hlt
out
xchg
repz
test
subl
cmc
into
mov
mov
jecxz
sbb
xor
or
lcall
jb
xlat
repz
jae
cld
fildl
fcoms
loop
addl
fidivs
rolb
sub
cmp
xor
andb
jne
movsb
cmc
mov
bound
and
sbb
push
stos
js
addr16
out
repnz
pop
push
inc
fiadds
data16
insb
aas
mov
dec
clc
subl
push
push
pop
repz
push
stc
out
push
mov
mov
add
pop
add
sub
sbb
lret
dec
mov
adc
add
xchg
inc
adc
mov
sbb
cmp
mov
jge
mov
sub
mov
clc
inc
adc
daa
leave
mul
mov
dec
add
and
push
pop
push
jecxz
push
mov
inc
repnz
lods
orl
cmp
dec
bswap
add
xchg
inc
jae
and
div
imul
jecxz
test
push
push
int3
lea
add
outsb
sbb
mov
das
mov
sub
shll
roll
clc
lahf
in
aad
lods
sub
dec
xor
sbb
cmp
stos
jg
subb
idiv
in
int3
or
sti
fidivrl
stc
jecxz
test
pop
sbb
jae
jno,pn
or
inc
jle
mov
sbb
arpl
hlt
jb
fwait
sub
add
inc
xchg
loop
jno
lock
stc
scas
xor
jae
mov
lock
ret
cmp
insl
cmp
xchg
das
je
lock
adcl
mov
mov
xchg
mov
les
push
add
outsb
and
mov
xor
adcb
and
push
or
mov
aam
aam
and
push
dec
aad
fs
jb
sub
lahf
mov
push
mov
ficoml
fistl
cmpb
xor
xor
testl
xor
sti
testl
inc
out
ja
es
push
je
dec
jne
push
and
inc
add
enter
or
test
xchg
fdivl
bound
xchg
cld
insb
ret
and
gs
mov
jnp
pop
mov
cli
cmp
jno
in
icebp
sub
movl
adc
in
add
jecxz
add
fimuls
sbb
push
mov
pop
jge
js
lods
adc
cmp
xchg
mov
sub
je
inc
fnstenv
xchg
mov
dec
xchg
cli
aam
pop
iret
sbb
iret
jb
loop
xor
in
ja
icebp
pop
add
dec
jl
lcall
add
cmp
mov
iret
xor
jnp
nop
push
jecxz
mov
or
es
push
std
repz
js
fnstenv
dec
rorl
and
mov
add
sub
cmp
add
aaa
inc
cmp
add
pop
arpl
jl
fildll
xchg
lds
jnp
mov
cmpl
pop
sbb
jecxz
and
adc
aaa
pop
mov
jo
into
repz
roll
mov
ret
xor
add
adc
pop
and
scas
xor
or
repz
or
jae
mov
mov
pusha
cmp
aaa
fisubrs
push
aas
sahf
adc
iret
jg
pop
outsl
divb
jmp
std
cld
or
rcrb
out
push
data16
mov
adc
movsb
xor
push
pushl
mov
iret
cmc
push
rorl
jne
push
mov
add
scas
cmp
and
dec
insb
cmpsl
jge
and
add
xchg
add
stc
sahf
mov
xchg
push
out
cmp
xor
fs
idivb
mov
not
aad
mov
imul
and
lea
lret
bound
test
lods
xchg
sbb
aaa
jle
out
sarl
sbb
fcomps
stc
cmpsb
xchg
clc
pop
inc
push
jmp
add
add
mov
repnz
icebp
or
and
or
imul
jne
in
jae
pop
popf
jg
stc
addr16
out
sti
pop
inc
stos
jmp
jb
sub
and
lock
sbb
ss
sti
lea
fwait
pop
add
jle
test
dec
inc
filds
mov
push
jmp
pop
das
repz
rorb
fwait
or
mov
jecxz
jns
ret
pop
in
rcrl
orl
ror
or
jno
sbb
add
ss
mov
cmp
sub
cld
cmp
xor
fistpll
jle
nop
adc
push
jb
clc
mov
imul
jl
pop
sub
and
cld
sub
aaa
cwtl
jb
push
adc
inc
clc
add
mov
mov
lods
jl,pn
jo
imul
inc
push
clc
jns
xor
pop
or
xlat
imul
cmp
fdivp
xor
sbb
movsb
add
mov
mov
xor
adc
ljmp
inc
int
int3
cmpsb
clc
and
mov
repnz
jns
mov
cwtl
aam
stos
and
lahf
lret
mov
jp
testl
or
aad
daa
repz
shrl
and
je
bnd
int
mov
daa
push
pushl
test
mov
push
jo
loopne
dec
push
jb
jge
leave
cld
pusha
mov
jo
mov
add
mov
mov
insl
mov
pop
pop
add
pop
cmc
push
sub
iret
jbe
lds
rorb
jmp
cmp
add
faddl
enter
jle
shrb
cld
push
ss
lcall
imul
cmpsb
scas
lret
cli
jge
mov
inc
mov
mov
or
scas
add
addl
xchg
jp
insl
addb
psubw
or
sbb
fildl
mov
fldcw
jmp
mov
std
cld
cmp
repnz
ret
int
aaa
cwtl
ss
test
cmpl
testl
mov
mov
and
mov
insb
xor
cmp
or
sti
push
pop
je
cmpsb
push
movsl
or
mov
mov
fidivl
out
mov
icebp
lret
sub
push
fildll
jp
and
xchg
mov
loop
in
in
add
cli
jo
mov
mov
xor
subl
fdiv
sub
xor
xchg
lock
xor
mov
adc
jle
dec
mov
dec
mov
fst
sub
iret
pop
pop
dec
add
add
mov
push
jmp
mov
loope
imul
repnz
inc
decb
pop
add
divb
repz
jns
ret
out
jle
sbb
addr16
dec
push
and
dec
mov
loope
jo
fiadds
or
mov
push
push
inc
je
dec
mov
xor
xor
sarl
jp
or
jno
cmpsl
sbb
out
inc
xchg
das
sbb
xchg
fcmovnb
jp
jnp
aad
bnd
sbb
or
insl
or
mov
jo
jge
add
repz
push
mov
lret
add
dec
and
add
stc
cmpb
lds
push
mov
clc
mov
ret
mov
and
xchg
pusha
pop
jno
rep
stos
mov
or
xor
icebp
popf
add
sbb
aam
add
xchg
stos
inc
push
sti
add
pop
add
sbb
mov
ret
cmc
adc
jg
push
cmpsb
pop
add
jge
decb
jnp
pop
mov
sub
shlb
call
jo
inc
ret
jp
or
stc
js
mov
ja
scas
xorb
popl
fs
push
push
lea
icebp
into
xor
call
insl
push
mov
ret
mov
mov
inc
mov
ss
sti
fidivrl
jbe
inc
sahf
jae
clc
fbld
in
xchg
addb
in
bnd
repz
repnz
cltd
adc
adc
or
xchg
ds
xor
jp
sub
add
dec
or
cmp
adc
dec
cmp
iret
psubsw
popa
push
sbbb
dec
mov
aam
or
js
jne
fwait
in
lret
mov
das
xchg
scas
and
inc
or
push
nop
into
push
cli
filds
test
push
mov
add
and
aad
leave
mov
xor
roll
repnz
xchg
fwait
add
loope
xchg
mov
icebp
sub
add
jne
dec
lds
jne
sahf
repz
enter
dec
xchg
and
mov
xchg
sarb
mov
mov
jo
fistl
loope
scas
xor
aaa
and
neg
stc
ss
push
ljmp
lret
jae
cmc
daa
cmp
es
fldenv
sub
sbb
icebp
mov
pop
clc
subb
mov
sbb
cltd
jno
aas
or
clc
call
scas
rcll
nop
stc
pop
sti
push
sub
inc
push
stos
sbb
and
iret
insb
jo
test
sti
jg
inc
cltd
rcrb
xchg
xchg
fcmovnb
mov
cwtl
push
inc
ret
inc
lock
stc
mov
fwait
xchg
mov
jl
or
fcmovne
cmpsl
aaa
stc
clc
mov
add
dec
aad
add
jb
pop
add
push
repnz
stc
leave
clc
jg
add
repnz
ljmp
mov
dec
xor
xor
inc
sarb
ror
adc
mov
jle
push
add
jb
mov
and
mov
jnp
jle
push
add
lds
cmc
sbb
negl
sbb
loopne
inc
push
xor
add
pop
jp
jmp
lock
sub
jecxz
aad
subb
mov
adc
jmp
sti
sti
ds
imul
push
std
fs
jae
ds
rorl
outsb
jge
sub
or
mov
and
icebp
scas
xlat
insb
ja
sub
push
or
aas
or
clc
dec
fsubrl
test
add
push
sbbl
bound
dec
add
push
dec
shlb
mov
test
add
div
or
repnz
push
imull
sub
sub
idivl
xor
mov
sbb
cli
and
sub
fcmovnb
mov
mov
and
push
das
cmc
xchg
push
xrelease
and
push
jecxz
jb
jl
push
fsub
test
add
cs
pop
daa
sbbl
testb
lahf
push
fisttpll
nop
dec
sub
in
js
repnz
sbb
inc
clc
xchg
ja
sub
ja
mov
enter
dec
pop
scas
sbb
add
gs
mov
sahf
hlt
xchg
add
adc
xchg
jno
ja
cmp
mov
in
xor
or
push
addr16
mov
push
es
lock
cmc
xchg
jo
ret
lods
push
jns
daa
repz
fcmovnbe
addr16
add
call
shrb
and
or
dec
out
add
push
inc
lcall
jno
xchg
or
sti
mov
push
pop
stc
add
sbb
mov
add
in
jno
dec
clc
lock
dec
sbb
mov
clc
jns
pop
hlt
jno
mov
stc
fs
or
test
sbb
cmpb
jno
mov
cmc
add
and
inc
repnz
push
bnd
incl
out
sub
jae
sub
inc
stos
lods
addl
or
repnz
sti
in
pop
add
push
adc
jg
pushf
push
leave
aam
repz
outsb
jo
stc
mov
push
and
push
sbb
cmp
adc
jns
lret
testl
sbb
lret
mov
and
insb
xorb
or
lods
add
test
aam
jecxz
stc
xchg
out
xor
mov
psrlw
das
nop
lea
add
xchg
fadd
sahf
icebp
jne
push
jno
dec
xor
mov
cmp
movsl
out
mov
mov
cli
lods
gs
test
or
jnp
movsb
pop
clc
aad
daa
add
mov
sub
or
xchg
mov
add
pop
fistl
movswl
jl
mov
and
push
ljmp
inc
test
add
add
out
push
mov
cld
or
inc
test
jb
jbe
shll
pop
lea
jae
aad
andl
xor
add
sti
icebp
rcll
cli
hlt
push
xlat
das
or
xchg
loopne
xor
push
fwait
cmc
pop
pop
dec
jno
sub
mov
int3
mov
repnz
out
cmp
inc
mov
fistpll
mov
adc
mov
add
sub
mov
cmc
pop
inc
divl
mov
xor
sbb
nop
adc
and
addr16
hlt
repz
add
adc
or
cmp
add
out
jb
loopne
jno
ret
jbe
out
dec
jns
cmp
push
inc
pop
mov
mov
adc
cmpl
out
ss
and
dec
and
add
and
jns
push
adc
cmc
add
xor
lea
icebp
push
adc
movsl
cmc
iret
mov
ficoms
sahf
mov
sbb
dec
sbb
js
cld
and
push
data16
pop
out
ja
popa
push
cmp
addl
pop
daa
add
push
in
add
jecxz
ret
cli
and
xor
fldt
mov
fcoml
imul
add
sub
mov
or
lds
cmp
fdivs
jns
out
out
addb
cmp
es
add
sarl
add
ftst
jne
push
sub
sbb
cmp
mov
sbb
fstpl
cmp
jge
adc
or
push
xchg
jl
mov
inc
add
sub
push
jmp
imul
repz
aam
sub
inc
add
cmp
mov
adc
cmpsl
in
enter
xor
inc
add
and
cmpsl
nop
cld
push
sub
add
adcb
sub
sub
or
and
pop
xchg
jo
cs
ret
push
sbb
les
xchg
outsb
or
lahf
clc
jecxz
mov
lret
jo
in
jp
jno
dec
dec
jle
out
cwtl
pop
mov
hlt
out
add
adc
shl
popa
cli
out
icebp
jge
test
sub
out
insb
xor
cmc
hlt
shll
jnp
xchg
lods
push
cli
test
rcpps
je
aad
add
stos
adc
shlb
jae
data16
jg
shl
ret
xor
push
mov
fisubrl
js
dec
dec
insl
sbb
leave
add
cmp
movsb
jb
jl
or
cmpsl
add
add
subb
push
cmp
mov
fisttpl
imul
jae
jmp
add
add
inc
and
mov
jne
or
add
daa
leave
bnd
test
push
fldcw
stos
cld
sub
xchg
lock
xor
rcr
mov
cld
cmc
push
imul
and
mov
push
cmc
push
push
and
cli
pop
outsl
push
mov
iret
cli
cmp
fwait
sub
ret
pop
add
out
ss
mov
pop
cli
imul
mov
mov
repz
es
sub
rorl
clc
adc
fxch
jno
push
or
pop
nop
adc
mov
jnp
mov
sbb
mov
mov
in
mov
push
addr16
jp
pop
int
movsb
inc
inc
scas
icebp
cmc
push
cmp
test
stc
and
sbb
push
add
bswap
gs
jae
sub
test
pop
jns
scas
aaa
and
mul
cmpsb
adc
push
and
sti
dec
divb
sbb
aaa
xchg
popf
repnz
jg
sub
add
lock
push
movntq
jo
jge
fstps
jo
into
push
cmp
add
lock
lods
mov
ret
dec
or
iret
or
fidivrl
adc
out
stc
or
mov
sub
cmpsl
int
pop
inc
push
inc
outsl
pop
inc
orb
repz
add
mov
mov
or
lcall
add
jne
mov
cs
push
in
stos
cs
pop
movsl
lea
or
push
xchg
imul
add
dec
stos
sti
push
push
xorb
lods
mov
xchg
dec
jp
imul
inc
hlt
sbb
add
adc
sbb
std
jb
ds
dec
rclb
cmp
xchg
cmc
in
mov
mov
mov
fstpl
sub
into
and
push
popa
cmpsl
clc
and
fwait
sar
xor
inc
push
xchg
jecxz
lcall
add
sbb
mov
add
sub
inc
sub
in
cli
cmpsb
mov
cmpsl
fmull
cmp
bndstx
xchg
mov
mov
pop
pop
adc
add
lock
outsl
idiv
jno
lret
aam
or
jmp
push
gs
lock
adc
loop
dec
in
icebp
loopne
fcomip
test
adc
dec
loop
lcall
mov
repnz
jl
add
pop
icebp
test
jecxz
stc
adc
sub
cmp
xchg
out
frstor
mov
dec
std
ret
rorl
xchg
aam
jno
add
or
xchg
fst
or
mov
push
and
or
add
xchg
test
inc
clc
jmp
stos
push
and
sub
sti
xchg
js
nop
les
ja
pause
pop
push
push
enter
pop
push
push
mov
mov
cmp
popa
data16
push
or
xor
mov
nop
jecxz
pop
fldl
lock
mov
daa
add
xor
in
add
inc
add
pop
insl
cmp
push
or
jo
roll
jbe
jb
loope
mov
lea
lds
add
and
or
repnz
aam
loop
jb
jno
add
mov
mov
mov
shl
out
clc
push
push
dec
ret
pop
mov
mov
cmpsb
movsl
pop
sub
loop
xchg
mov
or
dec
movsb
mov
xchg
movsb
lock
inc
nopl
clc
or
clc
or
xlat
sub
idiv
stc
icebp
cmp
stos
add
mov
orb
arpl
fdivrl
push
or
aas
push
dec
sub
xchg
outsl
repnz
ljmp
cmp
sbb
mov
roll
aad
sbb
in
mov
jns
jl
jle
mov
lret
pop
lcall
repz
stos
jno
sbb
xor
movsl
jo
push
mov
add
push
les
lock
fadds
mov
add
dec
sbb
mov
orl
dec
or
dec
cmpsl
movl
adc
lret
fiaddl
stos
cmp
orb
ret
movl
add
add
pushf
jnp
mov
cmp
mull
push
add
sub
clc
mov
imul
adc
mul
push
mov
adc
divl
and
in
sbb
mov
mov
mov
gs
mov
dec
addr16
stos
mov
mov
mov
insb
and
lds
in
fstl
movsb
cmp
adc
insl
in
fbld
fwait
scas
jp
aam
add
stc
jmp
daa
jb
cmp
cmp
movsb
push
les
imul
js
dec
jno
pop
movsl
push
add
daa
or
xor
jo
or
enter
dec
sub
lock
pop
lods
ja,pn
mov
js
lock
jle
and
cmp
lock
sbb
fwait
icebp
loopne
sbb
int3
add
fildl
test
data16
icebp
or
adc
aam
fstl
or
pop
xchg
je
adc
loop
xchg
icebp
jns
int
aam
out
mov
sub
adc
out
into
xchg
jecxz
sub
frstor
icebp
sti
std
and
aaa
mov
hlt
push
aas
or
mov
divb
xlat
nop
jae
or
les
dec
iret
dec
inc
push
nop
xor
jno
ss
inc
clc
movsb
cmp
or
xor
mov
gs
insl
lock
sbb
and
bound
jno
js
xor
adc
negl
add
mov
mov
das
add
nop
jg
add
add
lock
pop
stc
cmpsl
sbb
repnz
ret
cltd
mov
jns
push
mov
jnp
jno
loopne
sbb
mov
jle
push
jnp
and
out
xor
cmp
mov
es
enter
adcl
hlt
or
xchg
cmc
jle
push
bound
add
out
xlat
in
push
and
xor
sbb
xchg
dec
xchg
xor
mov
outsl
and
add
lldt
jmp
pop
push
and
je
mov
xor
xor
lahf
inc
sti
fs
fstl
lock
js
lahf
flds
es
jl
clc
xchg
inc
cmc
sbb
push
push
lcall
in
add
and
add
in
cmc
sub
inc
mov
jle
pop
sub
add
push
out
jecxz
jbe
jno
or
mull
imul
jne
sti
push
jmp
add
mov
push
lret
in
clc
shlb
cmp
add
sbb
pop
test
aas
add
xchg
xchg
sti
into
loop
cld
pushf
jge
notb
lret
andl
es
fwait
test
sub
adc
sub
or
cmp
jno
dec
cmc
jecxz
ja
add
sbb
xor
dec
mov
repnz
pop
sbb
adc
fisttpll
stc
cli
sti
sbb
mov
roll
stc
jbe
daa
sub
repnz
sti
nop
mov
adc
lods
pop
mov
stos
repnz
mov
in
cmp
push
jb
adc
fsubrs
jns
hlt
repnz
xor
aam
cmp
cmp
mov
mov
mov
adc
jle
inc
sbb
lret
mov
jno
notb
jb
roll
test
xorb
xor
xchg
lock
push
sbb
mov
add
push
pop
adc
mov
lock
out
and
dec
mulb
dec
push
xchg
dec
mov
int
add
sub
js
loope
jo
ud2
mov
hlt
gs
stc
cmp
or
mov
popa
mov
int
in
mov
dec
nop
scas
xlat
sti
andb
lcall
mov
jmp
sub
daa
fdivs
lret
jp
in
repz
ja
fcoml
mov
sbb
or
ss
or
jle
add
xchg
sub
or
sbbb
int
mov
add
ss
adc
sbb
push
jnp
in
jg
sbbl
cmp
pop
cmp
jae
mov
sub
pop
or
mov
adc
xchg
shll
cmpsb
add
mov
ljmp
pop
cmp
cmp
je
sarb
jno
je
insl
scas
scas
mov
psrlw
jp
fnstsw
mov
xor
aam
add
jmp
sbb
jecxz
mov
mov
push
cmc
ja
xor
and
mov
mov
out
incb
xchg
dec
pop
add
push
mov
jo
adc
stc
mov
and
sbb
dec
sbbl
xchg
imul
mov
cmp
in
ds
mov
dec
push
ret
dec
push
inc
js
cmc
imul
repnz
xchg
cs
enter
xorl
xor
push
or
popa
addr16
mov
insb
sub
xor
repz
fisubrs
out
cli
dec
and
adc
pop
loopne
xchg
adc
push
mov
sahf
lea
sub
inc
adc
or
imul
xchg
mov
mov
xlat
in
add
lea
mov
test
xchg
and
xchg
scas
sub
pusha
cwtl
inc
adc
cli
ret
and
dec
mov
lock
out
fisubrl
or
lods
push
ljmp
mov
mov
flds
outsl
testl
ds
or
push
jle
lea
outsl
and
into
push
dec
sbb
ja
mov
jae
lea
negb
and
push
test
sarl
add
push
pop
sbb
or
pop
cwtl
repz
jp
pushf
dec
in
psubw
jmp
adc
xor
xor
fnstenv
stos
sub
mov
hlt
xor
push
push
jne
out
jnp
mov
std
aad
clc
js
dec
mov
fneni(8087
out
xorl
sub
pop
mov
iret
mov
stc
adc
jb
outsb
jg
sbb
sbb
mov
fildll
xor
and
outsb
je
jnp
into
and
fwait
add
jns
jl
xlat
mov
js
and
ret
xchg
lret
mov
jno
pop
mov
xor
and
leave
jmp
in
adc
aad
repz
or
addr16
nop
fucomi
mov
mov
out
fdivrl
enter
orl
or
push
push
and
or
xchg
add
ja
mov
clc
int
icebp
iret
mov
jnp
cld
lock
pop
pusha
cmp
xchg
js
jae
or
xadd
pop
mov
or
adc
pop
cmpsl
sahf
jmp
push
sub
mov
xchg
cli
dec
test
push
fistl
das
add
lcall
push
jno
lods
push
push
cmp
push
sbb
push
lret
inc
fcmove
add
jno
sub
scas
or
loop
mov
xchg
loop
cld
pop
loopne
mov
mov
push
test
jne
outsl
mov
jl
or
stos
pop
jg
add
or
xchg
mov
mov
add
hlt
aam
mov
cmc
sti
sub
or
cltd
cmpsb
pusha
jne
pop
jo
mov
jb
inc
pusha
add
jno
scas
push
push
add
sbb
test
enter
sub
call
lods
cwtl
add
xchg
sub
pushf
fists
xor
fiadds
jmp
sahf
pusha
aaa
hlt
sub
out
repz
mov
xchg
scas
add
jl
sub
mov
pop
jns
and
or
hlt
dec
test
divl
stc
add
or
inc
fstpt
aas
or
fninit
jne
sub
js
pop
cmp
pop
std
jno
out
push
fs
push
adc
adc
or
daa
lods
jno
dec
lea
or
xor
push
repz
lock
sub
loopne
movsb
fdiv
xchg
adc
rcl
lds
push
jecxz
or
dec
fidivrl
mov
scas
jecxz
pop
push
adc
jb
ret
and
mov
jg
sbb
push
cwtl
lock
add
addr16
add
push
adc
sub
int
sbb
push
int
or
xchg
hlt
jg
sub
mov
dec
cmp
jb
lock
jo
scas
fistpll
decl
stc
and
repnz
mov
addl
adc
lock
push
or
jns
or
mov
fwait
clc
jl
xor
lock
test
test
xor
imul
adc
hlt
sbb
add
dec
add
pop
dec
dec
orl
push
pop
out
cli
mov
mov
xor
pop
sbb
pop
cmpsl
dec
mov
iret
fwait
add
xchg
sarb
ja
jno
push
lret
sahf
test
cmp
sbb
inc
clc
mov
jns
notb
add
shll
fdivr
insb
pop
orl
lret
aam
loopne
shll
sub
mov
xchg
cmp
lods
or
je
shrl
nop
inc
fwait
adc
stos
outsl
mov
or
inc
int
pop
cmpsb
clc
sahf
xor
sbb
out
jns
in
dec
push
lahf
cmp
sti
jmp
inc
pop
xorl
call
cmp
cld
jecxz
sbb
pop
orl
icebp
xchg
test
je
mov
rcl
add
movsb
jno
xor
or
xchg
xor
add
push
orl
add
adc
icebp
cld
add
jmp
and
ret
xor
push
xchg
or
leave
imul
shlb
dec
push
das
xor
in
divl
pop
sub
inc
jle
insl
xchg
test
cmpl
test
xor
push
mov
test
adc
icebp
cmp
mov
mov
je
pop
repnz
cmc
test
nop
notb
inc
or
inc
popl
rcl
mov
in
inc
fldl
shl
add
push
insb
js
xchg
adc
inc
adc
bound
jb
dec
aam
jl
mov
xor
jno
jae
and
popf
movsb
inc
into
push
sbb
adc
sti
repnz
add
data16
push
aad
add
jp
or
jbe
xor
jns
rcrb
ret
cmp
add
jmp
jae
outsb
rorb
mov
add
mov
push
shll
xchg
into
push
or
push
and
push
js
or
mov
mov
aaa
data16
test
cli
push
jmp
inc
adc
lahf
sub
jno
mov
addl
mov
stos
icebp
jae
mov
pop
or
cmc
mov
repz
ret
rorl
sbb
sysexit
out
ss
add
scas
inc
add
das
dec
js,pt
in
pop
push
mov
leave
test
xchg
sub
loop
daa
mov
pop
cmpb
jb
or
insb
and
clc
repz
lea
out
into
dec
lret
cmp
cmpb
inc
notb
mov
gs
cld
mov
or
jo
inc
adc
test
addl
pop
imull
jo
jp
xchg
push
sbb
enter
orb
add
xchg
add
xchg
push
cmc
in
mov
jne
repnz
jecxz
jl
jo
xor
or
inc
add
idiv
pop
les
mov
loop
and
add
jno
fildl
add
jb
jmp
daa
mov
cmc
sub
add
xchg
xchg
mov
jno
sub
mov
jge
fwait
add
ljmp
xchg
out
cmp
fidivrl
mov
test
adc
lods
sub
mov
add
lcall
sbb
pop
jno
mov
or
lcall
add
jns
icebp
and
cli
mov
jne
jne
xor
dec
mov
cmpsb
or
addr16
mov
cmpl
icebp
xchg
aaa
out
js
push
xchg
push
sahf
and
hlt
pop
decl
stc
push
mov
jp
out
enter
xor
cmp
mov
pop
push
pop
das
clc
xor
pop
adc
xchg
scas
xchg
pop
divb
push
sub
sub
adc
out
ss
roll
jno
sahf
aas
xor
cmp
lds
cmp
sahf
xor
mov
xorb
faddp
add
cld
cmp
jmp
test
sub
lds
scas
xlat
inc
jb
out
adc
rorl
adc
xor
mov
xchg
pop
push
bound
mov
mov
repz
jns
cmp
rorl
call
imul
add
test
sti
lret
or
pop
loopne
out
or
call
cmpsl
dec
mov
inc
rorb
test
daa
jo
xchg
push
ss
adc
arpl
xor
pushf
or
jge
js
pop
dec
outsl
iret
ficoms
cmc
jns
hlt
hlt
stc
push
cmc
nop
sbb
pop
jg
notl
imul
cmp
sub
fists
or
repz
ret
testb
cmpsl
jle
or
scas
fbld
sarb
jecxz
stc
stc
xchg
sbb
jno
mov
cmp
add
shlb
add
add
fs
pop
imul
pop
fsubs
jg
and
push
mov
sti
ret
mov
test
xor
inc
pop
sbb
xor
stc
repz
mov
movb
jp
out
add
adc
and
cmc
jne
add
repnz
js
je
repnz
mov
daa
pop
std
insl
or
mov
cmp
mov
push
jo
xor
mov
inc
in
pop
or
mov
fwait
loope
rorb
jecxz
or
inc
aad
call
stc
and
sbb
es
push
mull
test
lock
aas
mov
sbb
clc
aam
sbb
cmpsl
insb
jl
mov
dec
sbb
mov
in
js
mov
testl
push
adc
leave
popf
add
sbb
xlat
mov
js
xor
push
push
int
cmpsl
insb
mov
sub
cmp
sbb
add
sti
sbb
aaa
dec
arpl
xchg
pavgw
jmp
sub
mov
xchg
pop
icebp
inc
ficomps
push
pcmpeqd
push
jo
mov
mov
sbb
pop
adc
sbb
sbb
xchg
imul
imulb
mov
add
dec
or
fcompl
xor
ljmp
add
clc
mov
stc
push
cli
dec
xlat
sti
or
pop
fisttpll
add
lock
sub
aam
pushl
xor
xchg
sarl
or
jae
repnz
into
cmc
out
pop
inc
sti
mov
dec
sbb
or
lahf
aam
stos
push
jnp
sbb
xor
sbb
bound
add
xchg
addb
push
push
jb
imulb
dec
jnp
adc
jne
mov
add
fstpt
fsts
mov
jb
push
into
lea
rcll
je
cmc
icebp
add
enter
and
jmp
jo
xor
test
mov
test
lods
cmp
dec
lret
mov
inc
or
pop
add
fidivrl
sbb
pop
aam
test
jnp
sbb
inc
sti
jb
cmc
cmc
dec
stos
outsl
add
push
clc
loopne
xorl
add
mov
mov
rorl
mov
mov
push
iret
int3
lea
push
test
mov
inc
shr
pop
lea
xor
or
ds
add
jo
lds
iret
cld
insl
push
or
sti
xor
dec
in
or
xlat
imul
mov
aad
push
ds
repz
cmpsb
cmp
stc
mov
jl
ret
push
clc
xor
sbb
ljmp
add
sti
lds
je
scas
mov
stc
inc
or
sbbl
stc
bnd
xor
in
inc
andb
repnz
jns
xor
mov
or
mov
cmc
les
or
add
shrb
adc
lret
sub
lods
and
lods
inc
mov
and
frstor
movsb
pop
sti
pop
add
adc
mov
lahf
or
lock
push
mov
adc
cmp
repnz
out
add
icebp
push
pop
stos
adc
jo
daa
std
int
push
cmp
jp
jmp
test
mov
adc
rol
mov
sbb
push
call
neg
push
and
push
mov
test
test
insb
aaa
ja
js
sbb
jge
inc
clc
stc
add
out
int3
loop
pop
jb
outsb
sti
jl
and
sti
fwait
das
push
sub
xor
xchg
and
push
dec
cmp
add
sar
cmpsb
mov
repz
cwtl
addb
dec
mov
testl
out
and
cmp
sahf
xor
mov
xchg
cwtl
or
mov
dec
pop
int3
pop
clc
mov
nop
adc
mov
in
std
sub
add
mov
xor
mov
aad
popf
les
cmp
enter
fcompl
movsl
sub
pop
mov
pcmpeqb
bnd
mov
jle
mov
add
sub
das
mov
pop
shl
loope
push
test
mov
pop
pop
xor
adc
test
aas
inc
push
and
xor
add
orb
fwait
repnz
les
insb
stc
insl
outsb
cli
xor
mov
jns
jg
mov
pop
sbb
add
inc
jno
and
jno
aam
inc
sbb
cs
xchg
sahf
int3
mov
mov
stc
jb
xor
mov
push
xchg
mov
add
das
scas
cmpsl
xchg
pop
inc
jne
add
je
aam
adc
mov
js
orl
add
popa
in
or
movl
jmp
jecxz
dec
dec
add
out
sub
lock
add
mov
inc
mov
shll
and
cmc
aam
aam
es
insb
push
movsl
pop
testb
aas
repz
outsl
jg
add
xchg
push
jl
or
sbb
mov
fistl
ret
inc
in
test
scas
add
je
pop
add
push
push
jno
jnp
repnz
js
xor
outsl
mov
iret
sbb
xor
ret
sbb
movsl
inc
sub
test
or
sbbl
cmc
jg
sbb
jo
jne
push
sti
xor
std
push
lods
mov
adc
mov
bnd
clc
push
lcall
cld
cmc
pop
pop
addl
aad
clc
jnp
bound
mov
mov
repz
push
dec
xchg
aam
mov
insl
and
jno
mov
test
mov
mov
mov
jmp
lock
cmc
fiaddl
mov
cmc
sub
adcb
pushf
test
mov
adc
test
aad
push
push
nop
mov
mov
iret
lods
add
scas
mov
mov
lea
imul
sub
or
jns
lcall
pop
sahf
sbb
rolb
pop
add
push
nop
pushf
mov
arpl
cmp
and
dec
rorl
jl
cmp
add
inc
verw
gs
mov
enter
cld
aad
loop
ss
adc
testb
rdtsc
in
cli
ja
cmc
fstpt
loope
lods
clc
xlat
dec
jae
pop
mov
push
orb
in
fisttpl
lock
clc
cli
dec
push
push
push
sub
insl
outsb
test
scas
cmc
sbb
stc
fidivrl
or
dec
fiaddl
orb
fnstsw
addr16
jns
or
cmp
mov
insb
or
lods
inc
testl
inc
fists
mov
cmp
add
sbb
enter
pushf
mov
xor
into
std
js
pop
movb
repnz
ret
scas
bound
mov
sub
push
adc
ds
inc
jnp
add
cmp
push
fistpll
jns
int3
loop
inc
inc
mul
add
psrlq
add
or
ret
popa
clc
jmp
cmp
mov
addb
lds
jnp
icebp
push
daa
jo
gs
or
cs
scas
add
popa
mov
jg
mov
je
xor
xor
arpl
cmc
jb
test
push
lahf
sub
add
mov
fcmove
je
test
add
insl
mov
or
sahf
mov
cld
and
add
jg
adc
dec
aam
push
addb
je
popf
repnz
sub
inc
testb
cmpl
jbe
inc
mov
xchg
add
cli
jg
push
outsb
mov
push
lret
add
divl
cmp
ss
xchg
jae
outsb
inc
push
and
js
scas
jne
xor
and
repz
loop
je
out
mov
xor
mov
jne
ret
popa
xor
xor
addr16
repnz
inc
and
into
cmpl
mov
add
sbb
popa
fldl
pop
cmp
leave
add
xor
and
xlat
pop
mov
xchg
fstpt
or
mov
popa
push
stc
out
dec
mov
mov
xchg
insl
shll
and
imul
jo
dec
gs
dec
jo
pop
lcall
jo
je
cwtl
movsb
cmc
mov
push
je
jb
pop
xchg
jo
jbe
jle
inc
lock
or
pop
pushf
sbb
andb
xchg
mov
mov
mov
cli
or
mov
imul
out
pushf
call
jmp
scas
pop
xor
sub
push
adc
mov
mov
dec
sbb
mov
push
dec
fstpt
scas
xlat
add
jno
popf
push
pop
out
mov
xor
inc
or
xor
mov
mov
mov
push
pop
addb
sub
adc
cmp
cmc
pushf
div
add
pop
or
shll
fnsave
imul
cmp
push
inc
push
or
ss
imul
add
int
xor
add
add
sbb
repz
clc
adc
cmpsb
or
add
mov
loopne
test
lock
push
add
jmp
call
sbb
aad
inc
push
mov
shrb
cmpl
adc
pop
cmp
cmc
add
jne,pn
por
lea
imul
sbb
movups
cmc
std
pop
js
out
mov
nop
push
fildl
scas
and
std
dec
sbb
aad
jnp
es
cmc
push
test
sbb
decb
dec
stc
add
xchg
mov
rcr
aad
fsts
sbb
fbld
mov
add
xchg
icebp
and
jnp
mov
enter
repnz
outsl
xchg
fldcw
jne
sti
movnti
stc
sbb
and
xor
ret
je
lock
jb
fcompl
inc
pmaxsw
jl
sbb
dec
dec
xchg
lret
lds
sub
adc
mov
insl
lahf
xorl
hlt
pop
and
mov
cli
shll
and
or
inc
les
ja
shl
out
jns
mov
cs
mov
aaa
mov
popa
mov
sbb
pop
sub
fisttpll
sahf
push
jno
loop
cmc
addr16
xchg
jle
add
lea
add
mov
add
sbb
pop
mov
mov
mov
xorl
dec
std
or
sbb
std
and
sahf
add
add
out
iret
mov
xchg
loop
push
call
inc
or
push
enter
pop
xor
cwtl
add
clc
sbb
push
sbb
aad
jnp
jb
stc
out
cltd
or
jno
fnsave
aas
mov
and
xor
jl
repz
stos
cmpsb
jle
leave
and
adc
cmovo
mov
adc
test
pop
sub
mov
xchg
pushf
sub
dec
xchg
sub
add
js
mov
adc
mov
sti
push
lcall
jle
data16
inc
mov
outsl
mov
push
pop
mov
into
jno
mov
and
sbb
rorb
fwait
mov
adc
push
divl
mov
xchg
popl
adc
mov
sbb
xor
mov
and
or
int3
fbstp
outsb
out
xchg
inc
lret
das
fldt
sub
ret
add
and
sub
mov
into
in
pop
dec
push
stc
mov
jno
jmp
scas
jmp
js
mov
loope
dec
decb
sub
sbb
or
popa
test
mov
adc
adc
push
push
mov
cmpsb
insb
cmp
clc
jnp
lock
or
clc
je
xchg
repz
cli
rcrb
mov
mov
aad
pop
daa
xor
cmp
and
mov
jp
inc
jg
int
sbb
cmc
add
inc
or
and
jb
mov
dec
dec
or
gs
inc
mov
rep
les
pushf
repz
outsl
adc
int3
jne
push
call
jae
lock
lock
loope
or
in
ja
push
jae
xchg
mov
test
xchg
inc
jne
into
jnp
fdivrl
loopne
insb
arpl
jns
and
iret
or
xchg
or
ret
aad
ret
jno
push
add
jns
sbb
lret
nop
js
repz
pop
mov
jae
in
jo
rcrb
adc
inc
jns
bound
test
mov
jne
mov
mov
bswap
adc
xor
scas
fcmovnb
mov
mov
notl
jo
int
js
fldt
or
jne
inc
mov
outsb
jbe
dec
sub
jns
cli
add
enter
push
push
push
push
adc
mov
inc
nop
outsl
add
adc
inc
push
into
push
inc
testl
jmp
jae
cmp
xorl
leave
add
dec
in
sbb
popf
cld
jo
subl
fwait
aad
aaa
adc
int
pop
or
test
pop
movl
sub
divl
sbb
scas
push
xchg
addb
jne
icebp
test
push
icebp
jae
push
sti
rcll
pushf
cld
inc
push
cmpl
jno
dec
mov
lock
shrl
fcomps
mov
inc
add
mov
lea
ret
js
or
test
sarb
pop
fcmovnbe
repnz
add
rclb
sbb
iret
cmc
or
xor
ss
push
jmp
push
mov
addl
xor
cli
ret
mov
lock
cli
mov
xchg
xor
and
add
push
add
xor
in
push
jns
and
mov
mov
cmc
imul
ja
jno
pop
in
in
jno
mov
add
mov
jns
jo
cmp
iret
xchg
cli
aaa
mov
cmp
icebp
mov
pop
jp
cmc
xchg
fs
xor
fildl
mov
stos
inc
clc
sub
add
scas
jne
sbb
jae
in
sub
push
gs
mov
or
test
roll
dec
add
mov
add
cmc
push
mov
mov
icebp
sti
ljmp
addr16
mov
fildll
psubq
sti
fldenv
std
xchg
xchg
mov
sbbl
jmp
stc
push
add
bnd
sti
lcall
inc
repz
or
clc
pop
mulb
push
test
and
stc
dec
add
call
push
xlat
mov
icebp
xchg
mov
mov
lahf
sbb
jns
fmull
pushf
add
xchg
fsts
or
inc
cmpsl
mov
incb
push
rorl
test
inc
or
enter
rorl
xchg
sub
sahf
aad
notl
or
stos
cmp
jg
xchg
aas
test
push
fisttps
mov
mov
aad
pushl
int
sti
shll
lahf
call
cmpsl
mov
ja
adc
testb
dec
adc
jp
jnp
jb
jno
sub
dec
push
add
add
stos
icebp
xchg
test
jg
xor
int
icebp
cmpsl
mov
mov
adc
icebp
dec
fistps
push
stos
push
or
ja
mov
repz
xor
cwtl
add
xor
enter
ljmp
aas
icebp
adc
add
cmp
jmp
out
cli
je
add
hlt
push
sti
pop
xor
inc
or
push
fiaddl
inc
loopne
mov
addb
iret
mov
pop
add
add
push
cltd
test
int3
je
mov
xor
es
std
push
xrelease
lods
jg
add
clc
cmp
iret
lock
xor
das
mov
test
mov
test
xrelease
add
aas
and
mov
mov
pushf
arpl
sbb
add
xlat
sti
cld
cmp
mov
pop
mov
jge
sbb
loop
les
orl
jns,pt
lods
dec
mov
add
and
xor
jo
pusha
inc
movl
add
mov
icebp
mov
rcll
sbb
push
jo
mov
iret
lods
test
xor
jle
pop
lea
addl
jb
cmp
pop
ja
sub
insb
clc
or
mov
mov
pop
and
test
xor
mov
addr16
jb
lock
and
xchg
or
movl
mov
jo
mov
cmp
orb
fidivrl
shlb
and
out
cmpsl
cmp
insb
pop
mov
mov
fs
adc
sbb
sbb
loopne
cmpl
add
icebp
pcmpgtb
sti
test
xchg
push
lods
fcmovb
adc
std
adc
mov
add
xor
mov
lcall
in
pop
adc
std
int
pushf
push
incb
push
incb
add
xor
jns
mov
sbb
sahf
add
jge
and
into
adc
mov
nop
jl
push
je
sub
adc
push
adc
adc
mov
hlt
dec
orl
in
push
test
or
add
add
adcl
lret
and
lret
xchg
mov
cmc
shll
xor
sbb
test
add
ret
push
stc
movsb
js
adc
outsl
shlb
test
dec
xor
and
testb
jo
mov
jo
mov
inc
add
mov
pop
lock
push
std
stc
imul
pop
jmp
test
push
test
xor
xor
hlt
aas
jnp
xchg
icebp
sbb
xchg
icebp
mov
fmuls
add
lods
inc
clc
xor
pop
and
sub
or
sub
loop
sub
or
push
stc
out
xchg
mov
mov
out
sahf
mov
shll
lds
add
mov
or
ror
pop
pop
add
jp
lods
je
dec
hlt
lahf
sbb
mov
or
xor
jge
adc
cltd
leave
idivb
in
daa
orl
push
or
dec
mov
mov
pop
add
lock
add
jp
adc
enter
add
mov
lret
jne
das
jl
push
jmp
cli
shlb
test
jno
ficoml
mov
stos
js
mov
mov
scas
cmp
fcmovne
push
pmaxub
xor
addb
cmp
add
xchg
mov
push
imul
sub
scas
adc
ficoml
fiadds
sbbb
and
js
leave
push
mov
cmc
ljmp
or
lock
out
popa
dec
outsl
push
add
adcl
jmp
out
jnp
mov
lock
xchg
icebp
adc
jp
xchg
enter
cmpsb
sub
sub
fstps
push
nop
daa
inc
repnz
nop
jb
pop
mov
sarl
in
push
cmc
inc
add
sub
xor
xchg
jae
hlt
or
jns
test
pushf
stos
and
sti
insl
pop
sub
pop
pop
jp
sub
xlat
fsts
or
sub
xor
fists
or
repnz
or
jno
test
push
sub
and
stc
or
das
cmp
insb
dec
jns
jne
stos
xor
in
push
jae
test
aam
sbb
jg
adc
nop
fsubrl
in
push
jno
push
push
insb
aam
pop
jno
pop
and
movsl
sahf
aaa
cld
or
or
sub
pop
arpl
shl
or
and
jns
adc
nop
mov
adc
sbb
gs
xor
xor
in
add
out
orl
mov
and
loop
clc
sahf
adc
xor
adc
cltd
xor
syscall
lods
icebp
in
dec
mov
idiv
mov
popf
idiv
cmp
clc
and
push
outsb
mov
lea
and
nop
es
xchg
add
fiaddl
or
mov
mov
ljmp
out
aad
jnp
jp
mov
aam
stc
jl
icebp
or
sbbb
xor
xchg
mov
add
jge
and
stos
and
push
insb
dec
lock
pop
cmp
cmp
arpl
push
js
dec
das
shl
mov
fimuls
pop
jno
jo
clc
insb
mov
fcoml
cmpsl
mov
clc
lods
sbb
ret
pushf
or
std
int3
stc
adc
aas
push
push
jb
clc
push
adc
sbb
sbb
mov
imul
fsubrl
cmp
dec
add
mov
xchg
xchg
cli
mov
add
push
and
icebp
mov
fisttpl
jle
mov
outsl
rcrl
leave
push
xchg
cmp
xchg
mov
insb
jmp
stc
pop
leave
int3
out
sub
jo
xchg
cmc
push
push
add
pop
clc
jo
clc
fbstp
sub
push
hlt
cmp
xchg
pop
hlt
outsb
dec
mov
das
add
push
or
es
push
stos
ret
orb
clc
nop
mov
add
inc
clc
push
stc
sahf
sarb
lret
jae
mov
sbb
xor
clc
xchg
sub
xchg
mov
mov
aaa
mov
sub
xor
xchg
test
push
iret
pop
test
sub
add
pop
aad
pop
nop
hlt
mov
clc
ss
add
ror
pusha
jns
adc
mov
stos
inc
ret
es
pusha
pusha
xchg
inc
shll
xlat
xchg
repz
sub
and
add
push
inc
cld
pop
orb
sahf
push
out
cmp
or
push
out
cmp
clc
rcrb
outsl
stc
mov
orl
dec
leave
sbb
adc
push
add
cmc
adc
mov
jl
push
inc
inc
or
repz
mov
dec
xor
jp
push
loopne
push
sti
inc
js
mov
test
mov
rcr
jno
mov
ljmp
sbb
push
xbegin
mov
adc
pop
mov
scas
test
repnz
mov
js
and
ficoms
mov
mov
fisubrl
sti
mov
xchg
mov
jno
push
xor
push
add
sub
adc
add
mov
pop
xchg
lock
movsb
inc
subl
repz
xor
jecxz
pop
push
pop
scas
imul
aas
xchg
orl
mov
mov
loop
clc
and
divb
mov
jge
or
jmp
jp
scas
cmc
mov
and
push
sub
jo
decb
in
mov
or
scas
aam
cmp
jns
jae
orb
dec
repz
mov
sti
in
cmp
and
inc
repnz
sub
sbb
cmc
cmpsl
pop
ret
out
daa
lock
out
mov
punpckhwd
push
cmp
hlt
jns
js
jno
or
es
stos
or
clc
out
cmp
sbb
nop
hlt
pop
push
dec
repnz
aaa
push
mov
cmp
fidivl
jne
fdivr
mull
loopne
sbb
js
outsl
mov
add
fwait
mov
pop
repnz
push
inc
jns
addl
xlat
ss
in
fisubrl
test
add
xchg
xor
clc
push
insb
and
stos
data16
filds
lock
lock
clc
sti
pop
in
gs
add
ljmp
jl
push
daa
lret
and
sbbl
and
push
or
mov
cmp
out
mov
sbb
fcmovbe
add
clc
cwtl
and
push
jmp
testl
mov
in
jmp
cmc
adc
xchg
push
inc
dec
add
sahf
sar
add
mov
imul
dec
jl
add
push
and
jo
test
mov
cmp
roll
mov
rcll
not
shl
sbb
subl
test
stc
xor
dec
cmp
bnd
cli
repz
aas
dec
lahf
jecxz
add
icebp
js
test
out
jae
jb
cmp
lods
cwtl
sub
addr16
wrmsr
lcall
xchg
inc
mov
rolb
ret
insb
xchg
outsl
inc
or
int3
pop
imul
arpl
std
jb
or
mov
js
push
lock
sbb
ret
addr16
test
add
repnz
jle
stc
rcr
sti
pop
push
in
imul
lds
mov
insb
push
cmp
add
jle
lods
or
rcrb
daa
fidivrs
mov
mov
out
jno
sub
int3
mov
mov
jg
sbb
hlt
imull
pop
data16
js
jg
enter
mov
xor
std
cmc
pop
lahf
in
dec
add
cmp
adcl
in
add
cli
jmp
outsb
icebp
xchg
mov
cs
shlb
xchg
jns
in
sbb
mov
repnz
aam
enter
sbb
push
sbbb
sbb
aad
xchg
imulb
sbb
jae
and
rol
dec
cmpsb
aad
sbb
xlat
mov
add
sbb
inc
inc
push
inc
and
push
push
test
cld
pop
inc
push
stos
pop
push
jmp
pusha
clc
rcrb
pusha
fildl
fstpt
add
movsb
fwait
dec
push
out
mov
cli
imul
cs
mov
outsl
int
scas
rorl
fstpt
add
xor
mov
hlt
jecxz
sti
nop
lahf
mov
je
das
clc
sub
mov
mov
and
cmp
aad
push
enter
das
inc
or
push
jns
aad
mov
nop
cwtl
adcl
fwait
add
js
sub
loopne
mov
mov
or
xor
adc
jl
clc
sbb
dec
add
mov
adc
test
pop
pop
ljmp
loop
push
loopne
jle
loopne
adc
cmp
add
mov
cli
mov
test
sbb
or
cli
mov
xchg
add
aad
out
jg
push
es
jp
xchg
xor
loopne
in
or
sbb
addb
mov
fcmovnbe
jno
les
sti
xchg
pusha
inc
repz
cmp
ficoms
das
mov
sti
mov
outsl
cmp
jae
jle
cmp
stos
daa
jg
adc
pop
mov
test
and
and
repnz
into
subl
sbb
dec
ds
jg
sub
mov
lock
jnp
push
inc
jp
or
rcrb
add
cmp
rcll
add
cld
sbb
cltd
cmpsl
push
mov
neg
ljmp
or
sbb
scas
mov
xchg
jnp
iret
lock
hlt
fiaddl
pop
lock
or
push
cli
and
jle
aaa
sub
pop
clc
movsl
fbld
add
pop
loope
outsb
dec
mov
in
repnz
or
stos
fiadds
lds
pcmpgtd
test
mov
xchg
mov
or
in
or
or
scas
mov
jp
addl
push
hlt
mov
xchg
test
mov
loopne
lahf
icebp
or
xchg
js
pop
adc
call
sahf
ss
sub
and
and
daa
jo
add
add
sti
bound
mov
lret
iret
ds
or
jns
push
jge
sti
ja
push
mov
or
test
jo
ficoms
int3
js
push
cli
xchg
or
push
xchg
add
mov
es
in
repz
jmp
dec
cmc
jg
xchg
lea
sti
add
jns
or
aad
fildl
or
addr16
xchg
cmpb
icebp
mov
mov
xchg
inc
or
jb
cmp
sti
pop
sbb
call
or
adc
test
pop
jle
rcl
inc
push
repz
testl
lret
xchg
pop
cld
lret
out
repz
insl
shll
push
je
loop
xor
xchg
scas
add
jno
adcb
inc
orb
idivl
cmpsl
add
xchg
filds
insb
int
mov
int3
add
sub
and
sbb
pop
icebp
nop
in
repz
xor
loopne
cmpsb
push
imul
aad
insb
sbb
sbb
jno
mov
stc
push
andb
add
into
repz
sar
add
add
mov
out
push
pushf
lea
xor
aas
cli
and
xchg
enter
add
push
insl
cmp
push
lcall
add
imul
inc
jmp
add
cltd
outsb
sub
mov
ss
testb
lods
mov
add
cmc
mov
mov
rolb
movaps
aad
incb
outsb
lea
testl
pushf
jmp
fmulp
xor
cli
inc
pusha
jne,pt
cli
xchg
repz
sbb
jne
test
dec
cmc
test
pop
inc
mov
lds
push
jb
pop
pop
xor
jle
push
lret
imul
dec
in
xor
cld
or
jb
fnsave
adc
je
dec
out
push
add
cmp
rclb
xchg
insl
loopne
imul
pop
test
lret
addr16
or
repz
test
loope
xchg
in
sub
stc
fwait
jno
adc
movsb
push
jle
inc
or
mov
out
xchg
pop
mov
xchg
nop
scas
daa
jne
addb
cmc
push
xor
add
repz
xchg
jmp
sub
std
mov
jno
and
mov
hlt
andl
mov
jo
sbb
fldenv
jae
add
orb
xchg
add
pop
aad
dec
jo
lret
repz
paddd
jb
cwtl
stos
sti
pop
mov
mov
in
insl
repz
mov
push
cmp
lret
or
icebp
std
repnz
or
sti
js
mov
shl
lret
sbb
mov
not
mov
xor
or
and
adc
mov
or
xchg
cmpb
fidivrl
jb
add
jo
jle
cmpsb
sub
and
hlt
test
jo
lahf
pop
imul
cli
aaa
cmpsl
into
mov
xor
loopne
jne
sahf
clc
test
jge
pushf
xchg
std
jno
jns
jo
jecxz
dec
pop
dec
mov
mov
or
mov
sbb
mov
stos
sub
sub
fwait
or
adc
mov
pop
or
sti
mov
sbb
inc
xchg
icebp
xchg
fwait
xlat
lret
out
jnp
xchg
mov
call
mov
sbb
aad
mov
jno
mov
in
adc
xchg
div
sbb
inc
outsb
gs
adc
or
inc
popf
dec
xchg
adc
call
mov
xor
aad
jno
push
ja
test
push
stos
pop
popa
mov
push
in
sti
sub
push
inc
jg
frstor
cmp
and
add
dec
js
dec
mov
testl
clc
sub
jno
add
add
incb
or
pop
adc
xchg
mov
sbb
cwtl
lock
xor
sbbb
adc
dec
aam
or
dec
jb
add
repnz
sbb
ljmp
int3
cs
sbb
xchg
and
push
adc
or
imul
adc
add
cmp
cs
das
add
sbb
int
clc
movlps
cmp
dec
movsb
rolb
pop
push
test
push
daa
pop
lods
sub
jno
cmpsl
push
pop
push
dec
clc
inc
jg
mov
hlt
and
outsb
mov
mov
insl
dec
je
jns
mov
mov
push
cmpsb
mov
icebp
sahf
push
mov
lock
cmp
pop
cwtl
pop
or
mov
cmp
jg
test
pop
or
shrl
xor
dec
repnz
out
mov
push
sti
sub
fwait
adc
subl
lods
das
mov
dec
repz
push
cmc
or
xor
add
cltd
dec
stos
jl
xchg
jns
xor
in
popl
shll
jmp
adc
and
add
scas
xlat
fisubl
imul
sub
das
movsl
bnd
mov
sub
cmp
dec
and
jmp
ss
nop
jp
push
mov
cmc
std
jecxz
mov
repz
push
sub
outsl
push
cmp
cwtl
jle
push
push
aam
mov
cmp
clc
xlat
sbb
pslld
mov
movsb
dec
jae
and
repnz
add
lea
out
xorl
in
out
mov
mov
adc
js
jo
imul
lret
xor
pushf
jge
fidivrs
divl
xchg
sbb
push
mov
or
xchg
add
add
pop
xlat
pop
dec
jno
add
aad
sbb
rclb
add
mov
hlt
mov
data16
xor
xor
fisttps
jno
cli
popa
add
movsb
xchg
fbstp
mov
mov
or
jmp
mov
nop
jno
fcoms
push
sbb
call
jge
ss
and
sbb
dec
lds
mov
xor
imul
loopne
mov
scas
add
jno
xor
movsl
mov
cmp
or
push
sub
es
fiadds
imul
cwtl
dec
hlt
sarb
ret
ljmp
sti
je
inc
cld
div
bnd
sti
clc
sbb
dec
add
jmp
out
xchg
mov
xchg
push
push
sbb
or
and
push
mov
inc
xchg
mov
test
mov
and
popf
cmp
andb
stos
push
mov
mov
insb
in
cmc
mov
or
jbe
inc
xorb
cld
mov
mov
mov
mov
data16
push
dec
or
xchg
mov
or
or
xchg
hlt
jge
mov
mov
sbb
lods
xor
cld
mov
jnp
imul
lods
adc
gs
orb
jns
js
xor
jg
shl
stc
movsb
adcl
push
fld
int
xor
dec
sub
ja
inc
sbb
test
enter
aam
test
mov
out
std
je
push
lcall
sub
push
negl
fcmovne
ficompl
mov
sub
add
lret
pusha
js
xlat
and
adc
mov
cwtl
movsl
sbb
mov
and
xchg
mov
adc
mov
cmpsb
sbb
pop
movsl
popa
lock
mov
or
loope
mov
dec
movsb
scas
test
scas
sub
mov
sti
cwtl
cmp
dec
or
lcall
scas
outsb
mov
nop
mov
cmpsl
pushf
mov
or
sbb
mov
sbb
fcomip
sti
push
mov
hlt
inc
add
sub
add
test
aad
ficoms
push
mov
sbb
aas
or
cmpsl
sub
lcall
clc
mov
or
pop
rcr
dec
inc
jne
add
adc
xlat
cmp
into
divb
add
mov
xchg
stc
sbb
push
mov
lcall
cli
incl
scas
jmp
pop
add
pushf
jp
pop
rorl
das
jno
out
push
cld
movsb
mov
add
xor
fwait
imul
mov
repz
add
fstpl
or
mov
gs
jne
xchg
or
js
fcoml
ljmp
test
jnp
or
insb
mov
mov
push
jo
repz
push
mov
je
push
aas
inc
cmp
pshufd
in
or
dec
js
aad
mov
insb
imul
jns
mov
test
jns
adc
loopne
or
and
cli
aam
divb
bswap
mov
dec
or
aam
nop
call
mov
sbb
lahf
sbb
jg
cmc
mov
dec
pop
out
js
pop
aam
sbb
push
stos
cmc
mov
and
sahf
lods
arpl
cmc
lds
or
pop
jg
js
orl
or
adc
dec
stc
aam
clc
mov
int
insb
or
pop
cli
icebp
mov
rcl
push
adc
cld
lea
repz
push
lahf
adc
jecxz
adcl
pushf
mov
movl
repz
jecxz
xlat
pop
testl
repnz
inc
int3
or
jmp
js
jp
pop
mov
popa
clc
mov
dec
pop
dec
test
xor
xchg
push
mov
sub
gs
clc
xlat
jo
inc
adc
xchg
ficompl
in
idivl
xchg
out
sub
test
test
xchg
sub
xchg
into
jo
xchg
mov
imul
pushf
test
jo
fildll
je
push
xlat
aam
mov
jg
xchg
xor
add
mov
push
pushf
int
out
repz
cmc
or
cmp
shll
push
xchg
gs
hlt
stc
test
mov
adc
or
dec
jbe
mov
sbb
xchg
push
mov
mov
scas
cmpps
cli
fnstenv
adc
fwait
ret
lcall
jno
xor
cmc
sti
cltd
test
dec
jb
cmc
pop
fsts
clc
mov
push
add
push
bound
outsl
ja
xchg
pop
lock
sbb
add
jns
sti
jns
xorb
ljmp
pop
mov
cmp
add
cwtl
mov
hlt
sub
adc
loop
mov
mov
sbb
sbb
das
mov
scas
sub
iret
cld
repnz
fisubs
jecxz
or
jnp
hlt
mov
push
stos
es
insb
je
hlt
into
mov
fstps
jg
jl
add
jp
stc
imul
je
jnp
add
out
mov
dec
push
ret
popa
imul
dec
cmc
mov
popa
mov
mov
mov
outsl
ja
ret
fdivrs
repnz
mov
xchg
cmpb
add
pop
jg
out
cmp
inc
push
mov
jmp
jo
fcoms
jnp
out
fisubl
or
inc
add
dec
addb
pop
and
lcall
dec
sti
rclb
outsl
sbb
mov
cmpsl
jge
out
xor
fsubrl
or
jmp
or
cmc
mov
mov
test
mov
push
push
pop
jnp
arpl
lahf
sub
sbb
outsl
or
or
orl
mov
decl
dec
repz
aam
cld
jge
popf
mov
pushf
add
xchg
cmp
and
ja
and
shll
cmc
add
addb
cmp
sub
or
jg
mov
jge
add
fadds
cmpsl
inc
lcall
sti
mov
fwait
sbb
xor
add
sbb
pusha
push
gs
jne
notl
cmpsl
mov
lldt
ljmp
int3
or
enter
jo
jl
inc
xorl
jns
mov
cmp
mov
add
ja
push
pop
cld
iret
pop
jp
ror
pop
nop
and
lret
hlt
push
mov
rolb
pop
cmp
movl
pop
icebp
cmpsb
mov
cltd
imul
jne
adcl
vpshuflw
pushf
in
sbb
and
adcb
mov
imul
sbb
mov
ret
cmp
ljmp
mov
insb
or
stc
jl
push
push
mov
or
mov
xchg
adc
jecxz
cli
icebp
lahf
movsl
shl
test
insl
dec
repnz
je
inc
flds
dec
cmp
icebp
cmp
int
lret
pop
jg
pop
or
insb
or
jno
or
jg
jno
jmp
or
sbb
mov
sbb
adc
fdiv
js
popa
or
fldenv
mov
mov
sub
lock
add
addb
or
xorl
or
push
or
xchg
test
cmc
dec
sbb
mov
xor
xchg
push
push
lahf
rcrl
int
mov
mov
into
add
je
push
mov
cmp
push
out
push
int3
push
fistpl
rorb
push
lea
mov
push
dec
xorb
call
cmpsb
sub
loopne
fs
cmp
mov
and
or
sti
addl
out
mov
enter
cmc
xchg
repz
scas
clc
mov
repnz
cmp
loope
mov
repz
clc
inc
icebp
or
adc
test
xchg
test
iret
js
stc
cmc
clc
inc
sub
mov
jo
pusha
adc
or
enter
divl
push
cmpsl
loope
and
movsb
xor
push
lret
jl
mov
jnp
repz
lahf
jb
pop
jecxz
stc
pop
imul
xchg
mov
rclb
mov
inc
add
repz
inc
ds
pop
jb
lret
jnp
cmp
and
ret
mov
inc
jne
cld
or
jg
ss
and
lock
sub
lods
mov
clc
mov
idiv
push
es
incb
shlb
out
or
mov
sub
mov
je
aad
jl
shr
inc
dec
or
jne
icebp
pop
sub
je
cld
sti
cmp
cmp
div
ret
test
xchg
in
scas
repnz
and
mulb
je
xlat
leave
mov
stos
jns
loop
mov
mov
mov
cmc
cld
lahf
jne
stc
mov
mov
aam
sub
addl
js
sbb
xchg
stos
test
aaa
jo
rcrb
lret
cli
jo
daa
add
inc
or
inc
daa
lea
aad
or
jg
mov
push
ffree
pop
xor
push
jb
mov
imull
adc
jo
xlat
xchg
mov
movsb
push
mov
xlat
jo
scas
lods
fdiv
fstps
xlat
clc
rcll
push
dec
pop
bswap
scas
repnz
sbb
jg
rdmsr
outsb
pop
xchg
test
inc
or
icebp
repnz
xlat
fistpll
testl
ficoml
or
les
decb
jo
xchg
cli
notl
aas
xor
dec
cmc
sbb
sbb
gs
dec
fwait
push
jmp
xchg
push
adc
jae
lock
rcr
xor
insl
into
repz
adc
rcrb
mov
in
insb
push
push
aad
out
pop
in
sub
add
mov
icebp
xchg
adc
sub
jbe
xor
repnz
add
push
cmpsb
xchg
jle
cmc
in
fwait
xor
or
jecxz
jno
jle
jle
inc
jnp
push
out
clc
sbb
repnz
sbb
icebp
push
std
aad
mov
adc
out
or
mov
out
daa
cmp
add
and
and
push
xchg
loope
stc
nop
mov
pop
or
lock
adc
jge
add
push
cmp
pop
testl
aaa
mov
movl
jge,pt
push
pop
stc
xor
or
adc
fistpl
std
mov
jmp
add
repz
lods
inc
sub
cltd
mov
stc
jnp
or
sub
inc
ja
sub
jge
jb
loope
mov
daa
test
divl
loope
lcall
and
sub
mov
in
mov
fisubrl
pop
cli
sub
dec
mov
stos
sub
fs
inc
mov
test
out
jp
imul
mov
cld
xchg
sub
mov
sub
cmc
test
push
fcoml
sbb
je
out
ja
rcl
xor
mov
or
jne
dec
inc
add
lods
add
out
inc
mov
mov
loop
pop
mov
aaa
subb
pop
inc
adc
nop
or
mov
sbb
out
rorb
fldcw
aaa
sub
jp
pop
testl
out
jle
sub
jecxz
je
xchg
incb
stos
lret
xor
cmp
dec
push
outsb
ss
and
bnd
repnz
stc
add
outsl
pop
inc
test
add
mov
mov
shlb
xchg
dec
jo
mov
out
icebp
jl
lock
dec
fincstp
xchg
es
scas
dec
enter
sub
ja
push
lock
adc
sbb
add
dec
inc
or
out
inc
or
cmp
inc
stc
pop
push
repz
js
mull
orl
xor
stos
lcall
pop
fsubp
js
cmp
icebp
mov
inc
cli
jo
dec
movsb
inc
dec
fs
aad
xor
mov
sbb
nop
ficomps
lret
jns
lock
adc
daa
stc
repz
fsts
scas
jbe
pop
or
lods
cli
nop
jl
mov
push
aas
mov
adc
mov
sahf
mov
add
mov
inc
mov
cld
adc
aas
push
xor
cmp
popa
mov
idivb
xor
mov
mov
cmpsl
jp
stc
fistpll
push
sahf
pop
xchg
loopne
jnp
mov
call
push
sbb
dec
pushf
jo
sahf
add
lahf
sub
aam
xchg
cld
mov
mov
idiv
mov
stc
mov
aam
push
fwait
jl
jecxz
or
jno
cmpsb
vmread
jle
sbb
mov
repz
cmpsb
mov
jecxz
mov
cmpb
mov
xchg
add
mov
sub
sbb
fnstcw
mov
movsb
and
pop
jo
gs
ja
xchg
jg
insb
popf
aas
add
pushf
shlb
jo
dec
add
push
loopne
jbe
cmc
lret
jns
or
cmpsl
lods
mov
jp
cwtl
sub
js
push
mov
jb
dec
jae
adc
les
jne
lcall
jge
add
lock
mov
popa
lock
sbb
xor
icebp
sbb
mov
cs
jne
pop
sbbb
add
push
jae
inc
jb
jge
lea
sub
clc
clc
cmp
test
in
scas
jae
cmp
repnz
cwtl
push
outsl
mov
xchg
xchg
je
adcl
lcall
bnd
repz
out
cmpsl
sbb
sarb
nop
stc
out
or
add
push
sbb
adc
repz
std
js
scas
xor
and
fistpl
jecxz
orb
pop
ret
in
jnp
test
mov
xchg
sbb
lea
dec
enter
movhps
jno
ja
outsl
sti
sbb
sub
jge
push
jecxz
add
push
roll
call
mov
jae
pop
test
sti
xchg
je
movsb
add
pusha
adc
idivl
bnd
scas
es
imul
and
fdivrp
xchg
push
jp
imul
lds
jmp
sarb
inc
adc
push
dec
scas
sub
mov
lcall
and
mov
shl
ds
push
pop
jp
andl
inc
js
mov
setae
mov
adc
dec
fisubs
jno
movsb
add
jecxz
repnz
sbb
cmp
dec
js
or
test
jmp
scas
jns
cmpsl
sbb
inc
adc
dec
es
hlt
repnz
adc
lea
add
add
pop
adc
neg
jecxz
or
repz
cmp
mov
jp
or
jne
rorb
stos
sbb
jne
pop
cmp
or
ret
insb
push
push
push
or
icebp
mov
in
push
dec
mov
pop
mov
cmp
enter
in
push
imul
or
imul
mov
push
pshufw
cld
cwtl
push
cmpsb
or
push
xor
fldt
sbb
int3
mov
lock
mov
cs
cmp
loop
pop
inc
and
clc
sbbb
xor
mov
jb
fnstsw
mov
insb
and
jns
add
mov
add
xlat
cmc
std
adc
push
repz
add
jmp
fsts
test
add
imul
adcb
sbb
add
inc
push
inc
mov
cli
cmc
xchg
fldt
loopne
add
push
or
test
repnz
mov
out
sub
xchg
mov
sbb
dec
mov
cmc
lds
cmp
dec
sub
and
repz
popl
icebp
mov
sub
push
xchg
or
or
jecxz
mov
out
mov
sbb
lock
aaa
jo
add
cmp
or
jle
xchg
inc
in
jbe
mov
jno
mov
addl
or
push
adc
pop
jnp
cmp
lock
lds
sub
test
inc
or
xor
cmp
or
clc
outsb
xrelease
adc
push
scas
push
mov
icebp
mov
inc
jnp
add
sbb
push
mov
xor
aad
int
sub
mov
ja
es
jecxz
test
push
outsl
inc
or
mov
and
or
je
repz
sbb
push
jo
xor
idivl
adc
and
loopne
or
iret
adc
loope
push
movsb
push
or
jp
popa
fidivl
jae
ret
mov
and
leave
sti
sti
stos
and
movsb
aam
in
cmp
dec
jge
mov
add
out
orl
fstpt
add
clc
adcb
add
pop
xor
add
mov
mov
stos
inc
or
or
lea
add
adc
mov
test
mov
aas
sti
fcomps
int
xorl
inc
idivb
adc
and
ja
pop
add
pushf
sub
rorb
add
mov
sti
jae
andl
js
push
adc
add
leave
jge
add
sbb
xchg
jmp
add
pusha
pop
scas
push
sti
pop
push
orb
adc
sarb
or
mov
mov
js
jno
std
mov
push
insb
ljmp
enter
fisubs
js
nop
lock
cmp
add
xchg
sti
cmpsl
or
cltd
cmp
pop
mov
mov
xor
mov
fisttps
ljmp
std
inc
dec
clc
loop
push
out
or
imul
ja
mov
sti
pop
sbb
mov
roll
ja
fildll
xlat
imul
outsb
into
jno
test
js
and
orb
movsl
jg
shlb
xlat
and
push
pushf
int
sub
jno
cld
push
xor
je
pop
repnz
test
insb
sub
fiadds
add
ja
mov
cmc
cmc
fcomps
xchg
aam
out
push
jo
enter
gs
add
bound
mov
adc
adc
xchg
sub
fisttpl
xchg
or
and
sbb
scas
loopne
mov
push
lret
int3
xor
cltd
hlt
add
loop
xchg
stos
pop
sbb
sub
in
inc
dec
sub
add
je
or
repz
jge
fdivl
lcall
fwait
cmpsb
in
or
dec
or
cmp
cs
mov
js
sub
xchg
add
dec
pushf
pop
repnz
jl
push
jnp
sti
cwtl
push
dec
lret
pop
or
nop
sub
mov
lcall
repz
xchg
std
repnz
js
mov
lds
jb
jno
or
jmp
clc
or
dec
add
loop
test
mov
sti
cmp
push
inc
add
sub
outsb
or
inc
fidivrs
divb
int3
mov
insl
inc
sti
adc
popa
std
dec
lea
ds
nop
subb
cld
sub
or
push
stc
sbb
dec
cmpsb
xor
push
jo
cmp
flds
xor
adc
adc
cltd
addl
xor
dec
aad
xor
repnz
fcmovnb
out
xchg
mov
cwtl
repz
lret
add
sub
fadds
mov
mov
pop
adc
lock
lods
push
rorl
idivl
xor
mov
xchg
mov
pop
or
mov
or
in
xor
lahf
or
stc
push
clc
mov
lret
aas
add
notb
sub
scas
push
or
add
add
xchg
inc
stc
hlt
stc
in
clc
mov
xor
push
int
add
mov
adc
push
dec
or
xchg
scas
sysret
add
cmp
or
push
insb
mov
mov
jo
popa
inc
cmp
mov
repz
leave
movsb
push
ss
add
pop
andb
popa
idivb
mov
or
pop
loop
cwtl
mov
jg
mov
fwait
cmpsb
ljmp
sbb
mov
mov
lret
jmp
sbb
decl
sbb
mov
xor
int3
cmp
ret
push
jns
mov
aaa
in
bnd
icebp
add
stc
pop
js
in
rclb
mov
cs
je
lahf
mov
je
scas
jle
daa
aaa
mov
test
push
aas
mov
xchg
xchg
or
cmp
sbb
idiv
icebp
or
cmp
push
testl
ret
pop
mov
adc
jno
rorb
repz
daa
add
fcompl
filds
jns
mov
or
pop
jno
and
lock
jo
mov
cmc
stos
insb
or
jge
out
or
nop
fld
adc
pop
xchg
jne
or
mov
sub
pop
add
xchg
icebp
fbstp
sbb
push
mov
mov
mov
icebp
mov
mov
aam
mov
or
out
pop
add
imul
xchg
mov
pop
sub
xor
cmpsb
repz
mov
movsb
andl
pop
inc
or
sub
jmp
push
mov
rcrb
jnp
xor
add
mull
sub
xchg
ljmp
adc
mov
les
xlat
outsb
mov
push
sub
repz
mov
and
mov
push
cmc
xchg
and
int3
repnz
push
sub
jb
into
inc
xorb
cmc
jo
xor
xchg
push
xorl
jne
cmp
sbb
mov
ss
sti
push
lds
test
or
cli
push
sbb
loope
popa
daa
pop
andb
add
aam
sahf
add
aad
cmp
pop
mov
out
pop
mov
push
in
jae
sbb
mov
sbbl
mov
inc
pop
mov
mov
inc
test
into
xor
dec
pop
repz
idivb
ret
icebp
dec
test
xchg
inc
fs
add
jno
xor
testb
xor
daa
sti
cld
fistps
shl
adc
add
adc
add
iret
int
push
dec
add
jecxz
repnz
and
adc
pop
mov
push
rcl
sbb
adc
ds
test
or
or
mov
int
movzwl
mov
adc
out
pop
loope
jns
sub
loop
push
jo
mov
outsl
adc
lock
xor
jecxz
loope
dec
fsubs
rorl
repnz
dec
push
push
sbb
icebp
fst
loopne
lock
in
test
and
mov
ret
bound
loopne
out
xorb
mov
test
jg
and
mov
fwait
push
sub
insb
mov
xchg
push
scas
add
test
lds
add
xchg
out
ss
icebp
add
repnz
xchg
fisttps
subb
and
mov
mov
int
adc
dec
hlt
mov
sahf
and
clc
je
add
jno
push
xor
sbb
mov
xchg
add
mov
adc
sub
test
repnz
sbb
scas
sub
sbb
mov
enter
iret
pop
jns
ljmp
and
jle
fildll
sbb
or
je
cli
int3
adc
lcall
xchg
lds
fimull
push
xor
mov
adc
add
into
jnp
outsb
or
fucomi
insl
hlt
jge
sub
dec
stos
add
cmp
inc
clc
cmp
and
xchg
loop
adc
jmp
sbb
cltd
sahf
lods
sar
xchg
jnp
add
and
clc
out
mov
data16
push
sbb
sbb
and
scas
cmp
push
jecxz
jg
test
mov
jne
insl
std
jle
subl
shlb
mov
xor
lods
adc
insl
cmc
rcll
mov
lods
mov
dec
stc
js
xor
or
unpcklps
jg
cmpsl
or
jns
sbb
pusha
cmc
jle
hlt
fwait
inc
add
inc
fimuls
cmpb
add
jno
lea
call
mov
mov
jno
pop
hlt
int
add
imul
pop
cmp
mov
pop
xchg
mov
fwait
add
xor
mov
add
jb
or
cmpb
or
cmc
cmc
lods
out
mov
icebp
xchg
test
flds
push
jno
mov
hlt
cmp
inc
stos
push
jnp
jp
adc
mov
mov
cmp
mov
in
jno
lret
aaa
mov
mov
push
mov
push
push
and
clc
lcall
push
js
js
pop
xor
xor
popa
mov
push
xchg
mov
push
sub
or
adc
sub
aaa
sbb
js
add
ja
cld
xor
pop
shl
sbb
sbb
sub
mov
sub
daa
mov
add
out
lock
das
xlat
sti
inc
cmpsb
scas
les
std
mov
popf
adc
out
icebp
popl
mov
mov
cmp
popl
fnsave
push
jo
stos
shlb
jg,pt
xchg
sbb
enter
pop
mov
mov
dec
jno
jle
push
jae
testl
adc
adc
xor
jns
push
std
xor
je
add
sub
testb
or
adc
das
add
and
shl
sahf
pop
and
lods
jb
movsl
cmc
testl
pop
sbb
cmc
cmp
pop
pop
mov
push
mov
sbb
jo
adc
jo
push
dec
jbe
arpl
movsl
mov
repz
mov
push
nop
repz
test
subl
dec
jo
xchg
dec
or
lcall
cwtl
jmp
xchg
pop
xchg
push
pusha
incb
repnz
jbe
jb
movsb
test
add
jno
and
and
cmp
lods
inc
xorb
out
cmp
clc
cld
jl
clc
cli
inc
mov
inc
addb
or
jmp
mov
mov
pop
stc
cld
xor
cmp
nop
or
adc
mov
int3
or
rcl
inc
mov
loopne
sbb
add
pop
jb
es
pop
adc
out
adc
loope
in
sbbl
adc
stc
divl
xor
scas
sti
stos
push
jo
movb
push
cld
stc
test
mov
dec
lea
hlt
inc
mov
shrb
jmp
add
push
adc
dec
jno
or
and
lcall
xorl
rolb
or
movsb
adcb
sti
adc
stos
or
push
fldl
test
jb
add
jle
adc
icebp
out
scas
cltd
mov
or
xlat
leave
lods
push
ljmp
mov
jecxz
roll
popa
dec
jae
pop
frstor
push
in
ss
sub
jp
enter
out
aad
jmp
cmc
pusha
push
push
hlt
loope
negl
nop
mov
das
mov
ljmp
arpl
pop
js
dec
testl
je
jecxz
out
scas
mov
outsl
fwait
adc
mov
dec
add
repz
pop
cmpsb
out
jle
repnz
adc
addb
lock
cli
ret
jnp
ja
inc
mov
pop
pop
hlt
xor
xor
push
jns
dec
dec
inc
divb
push
xchg
mov
bound
mov
dec
adc
repnz
bnd
inc
pop
adc
ret
cli
and
jb
xchg
shl
jge
addr16
sbb
lret
stc
imul
sbb
jo
repnz
or
push
push
mov
jne
or
loop
push
pop
adc
add
fistpl
adc
push
or
push
xor
and
sbb
pop
add
mov
test
hlt
xchg
mov
adc
mov
adc
mov
add
repnz
jns
jno
push
adc
sti
ds
or
mov
push
jne
js
pop
movsb
or
and
push
sti
mov
lcall
jo
shll
xchg
or
test
ret
sti
sbb
push
out
jbe
fidivl
in
and
je
sbb
mov
and
push
out
add
push
aam
and
mov
or
fwait
arpl
in
xchg
add
jg
dec
push
out
or
std
jae
mov
icebp
les
dec
fwait
js
movsl
lock
dec
jl
lock
mov
fdivrl
inc
pop
std
sbb
or
push
and
sti
and
mov
pop
ds
jo
out
js
push
clc
stc
jecxz
cmp
into
repnz
cmp
adc
push
xor
add
add
in
sbb
ja
and
movl
or
aam
jle
test
bound
jg
sub
dec
mov
cmc
mov
mov
cmp
mov
daa
insb
lods
push
push
das
out
repz
aaa
or
xchg
aad
mov
jne
xor
ljmp
pop
cmc
sti
fdivrs
and
pop
popf
scas
jecxz
daa
idiv
fwait
bound
fldt
xchg
mov
jne
jge
xchg
jmp
push
xorl
loop
out
repz
adc
jl
dec
jp
aas
mov
adc
inc
sub
lock
sbb
rcrb
jl
push
js
adc
je
add
or
or
test
jo
aaa
cmp
and
orl
jns
mov
jg
testl
and
mov
mov
jnp
std
cld
in
daa
pop
dec
add
xchg
aas
testb
sub
cli
out
jns
jl
and
adc
and
ds
or
repz
movsl
sti
pushf
mov
mov
clc
bound
pop
je
sbb
je
nop
lcall
jnp
daa
xor
jl
lea
je
fstps
inc
inc
add
push
sub
mov
add
pushf
and
dec
lock
adc
into
push
std
cli
lods
xor
xor
orb
or
xor
adc
inc
cmpsb
enter
mov
sbb
lea
test
inc
or
cmpb
xor
cmp
adcb
or
cli
ret
arpl
imul
outsb
or
cmp
inc
icebp
test
popl
cmpsl
cli
pop
sti
fwait
jno,pn
fs
fistl
enter
pushf
jge
mov
scas
xlat
dec
sti
adc
jl
or
scas
cmp
insb
mov
dec
jnp
xchg
das
pop
dec
pop
xorb
rclb
scas
xchg
and
xchg
xor
mov
or
imul
mov
jge
test
or
mov
fcompl
sub
cs
mov
call
ljmp
test
jb
add
cmp
mov
aad
shrb
clc
mov
das
mov
xchg
pop
add
mov
paddq
sti
lock
scas
jp
jb
push
and
jno
add
orl
jle
and
mov
pop
sub
ret
inc
orl
aad
out
cwtl
push
repz
and
fwait
lea
inc
or
mov
movsl
dec
push
int3
sub
and
icebp
hlt
data16
mov
clc
por
mov
cmc
jle
mov
scas
pop
test
pop
repz
xor
jg
mov
add
popl
sahf
gs
stos
int
loop
sti
fs
push
ljmp
dec
adc
shlb
je
jl
add
test
lea
pop
or
test
jle
jo
jp
mov
pushf
inc
push
or
jp
loope
cmpb
cmp
sub
add
adcl
jb
cmc
jo
movsl
fnsave
cmc
in
addr16
fisubrl
jb
or
add
div
icebp
adc
mov
insl
sub
jg
adcl
push
imul
nop
xorb
popl
jns
mov
sbb
out
ss
clc
fcomi
xchg
inc
xchg
rclb
sub
movsb
repz
jb
mov
add
and
pop
daa
dec
jne
pop
loop
jo
and
testb
test
xorl
scas
sub
scas
add
xorb
sbb
xor
andb
add
shlb
add
negl
mov
dec
adc
push
mov
pop
jmp
adc
and
repnz
mov
mov
stos
ficompl
cld
add
mov
repnz
repnz
out
lods
cld
add
out
and
out
sbb
dec
adc
mov
nop
scas
fadd
push
and
add
mov
and
jp
push
jne
leave
xchg
add
lods
repnz
xor
adc
dec
fnstsw
push
fidivrl
add
ret
clc
fdivrl
ja
inc
andl
test
or
out
rcr
rcrl
inc
mov
mov
add
jns
xorb
mov
and
sub
loope
mov
push
xor
mov
iret
mov
xlat
out
cmpl
or
xchg
mov
xor
fs
orb
test
xchg
pop
pop
out
mov
cmp
in
or
add
jp
sub
cmp
test
repnz
sbb
xchg
pop
idiv
scas
mov
scas
fildl
cwtl
adc
and
xor
mov
xor
dec
into
cmc
pop
sub
andb
cltd
aam
and
push
movsb
pop
sub
xlat
jmp
data16
fistl
repnz
jno
cmp
adc
cwtl
dec
add
push
mov
xchg
jge
call
popa
test
xchg
fimuls
sbb
add
cmpb
sbb
add
mov
sub
or
mov
and
jle
lea
push
in
insl
inc
andb
shl
je
or
popf
les
jnp
repz
in
clc
mov
jno
xchg
in
stos
sti
movsb
js
xchg
scas
out
inc
jl
scas
fmull
mov
daa
icebp
mov
dec
add
mov
xorb
rolb
dec
inc
je
pop
jno
cmp
add
push
test
push
inc
add
mov
push
mov
subl
decb
xor
negl
clc
adc
cmp
sbb
jecxz
movsb
push
adc
push
add
push
pop
sub
and
popa
fisttpl
jnp
adc
add
xor
daa
or
xchg
lock
adc
lods
sub
add
push
popa
mov
jae
scas
jge
jmp
mov
jge
dec
push
xor
jecxz
js
fidivs
aad
loope
push
pop
add
jl
outsl
add
cmp
stos
add
push
popf
les
insl
jle
adc
cmpl
jns
icebp
sbb
and
mov
iret
insb
mov
add
mov
sub
pop
test
cli
lock
mov
repz
adc
mov
sti
sbb
jne
mov
adc
jg
icebp
lock
xchg
aam
in
into
test
xchg
fnsave
or
lcall
add
stc
push
sti
adc
movsb
repnz
mov
jo
test
and
lea
testl
cmpsl
or
shl
loopne
pop
imul
icebp
lock
jecxz
add
ja
add
cmp
jne
sub
aaa
pop
out
adcl
mov
mov
repnz
add
clc
xor
mov
add
and
ss
ret
mov
mov
push
or
inc
popf
sbb
mov
push
mov
cmc
mov
jge
lods
sti
loop
repnz
inc
push
adc
lods
push
lea
notb
adcb
filds
or
mov
sub
loop
inc
jo
call
mov
cmc
add
mov
add
pop
jge
dec
repz
pop
mov
repnz
push
hlt
jl
clc
cmc
mov
push
dec
or
dec
mov
pusha
fiadds
mov
repz
sbb
jno
in
jmp
push
push
jp
out
repnz
and
cli
mulb
xor
jo
inc
push
adc
pop
lret
fbstp
std
adc
sbb
cmovnp
test
sub
push
imul
jno
mov
cmp
or
sbb
add
xor
and
stc
fwait
xor
fistpll
sbb
ficoms
add
bnd
mov
repz
enter
dec
addr16
jp
xchg
adcb
imul
bound
decl
lcall
and
cmp
jo
nop
and
add
or
cmp
xbegin
and
jno
jl
cmp
mov
pop
add
xchg
nop
pop
mov
or
or
icebp
loop
adc
mov
xor
jo
in
stc
mov
dec
fwait
or
push
sub
out
jl
aas
jmp
pop
push
orb
in
repz
mov
xorb
mov
fwait
mov
push
mov
repnz
cmc
jp
pop
rclb
mov
inc
test
cld
sbb
sub
out
mov
scas
mov
ficompl
pinsrw
adc
xorb
scas
xlat
inc
cmc
xor
mov
or
jne
xor
dec
andb
adc
out
icebp
inc
sub
hlt
lret
jecxz
gs
clc
mov
inc
cmp
sti
adc
stc
cmovge
pop
or
or
mov
hlt
jg
in
test
sub
cmc
add
pop
rclb
pusha
lret
sub
and
orl
nop
inc
out
sbb
or
add
stos
xor
xchg
int
jg
inc
xor
add
pop
hlt
imul
inc
jl
cmpsl
mov
add
cld
and
pop
inc
jbe
lret
jecxz
jg
bound
inc
xchg
fs
jl
cmp
std
fcompl
xchg
mov
lock
jns
sbb
cmp
insl
push
das
repz
or
daa
inc
mov
xchg
push
add
jb
lret
test
cmp
pop
sub
outsl
push
jnp
addl
or
fisubrs
push
daa
push
shll
dec
push
or
or
push
inc
push
jp
jb
out
xor
mov
les
ss
jns
mov
scas
in
jp
aaa
cmc
testb
pop
mov
xorl
lea
mov
cmp
and
mov
xor
mov
push
out
sbb
shrl
xchg
imul
repz
daa
repnz
ja
lods
pop
push
test
mov
push
dec
push
xchg
xchg
pop
ss
xor
or
dec
jp
mov
pop
xor
nop
fiaddl
mov
xor
add
dec
lahf
in
xchg
movb
pop
nop
mov
inc
xchg
jae
cmc
mov
push
cld
add
aaa
shrb
arpl
mov
mov
mov
add
cmp
idivl
mov
mov
fstp
and
or
adc
push
mov
loop
sbbl
mov
cld
jo
add
nop
jecxz
sti
push
scas
pusha
sub
pop
cmp
push
xchg
sahf
in
lds
adc
out
lds
cs
or
jo
dec
imulb
add
fcompl
and
js
or
mov
outsl
and
pop
int3
push
movsb
and
aaa
pop
add
xchg
or
in
and
les
stos
xor
addl
mov
clc
loopne
pop
clc
cmp
sub
jp
cld
xchg
popa
cmp
test
xor
movl
call
test
lret
test
sub
jns
iret
xchg
lds
xor
inc
sub
repz
test
push
dec
clc
add
jecxz
or
shrl
ja
pop
xchg
push
xor
inc
or
or
jle
xor
mov
xor
dec
nop
mov
cmc
jo
pop
mov
sub
add
ljmp
cmc
shll
loop
dec
add
fisubl
dec
insb
and
mov
jecxz
icebp
xchg
repz
dec
jnp
sbb
pop
push
sub
stos
test
jne
je
push
sti
fistpl
hlt
push
push
hlt
in
jmp
jae
pushf
out
xchg
and
push
push
int3
cmpb
cmp
dec
jb
jno
jne
insl
hlt
aaa
inc
pop
jno
jecxz
std
add
or
repnz
jne
add
repnz
scas
mov
cmp
mov
mov
or
cmpsb
or
mov
and
js
jns
push
das
rorl
pop
nop
xor
jbe
sub
test
aad
cmc
sub
ja
sub
mov
or
cli
repz
loopne
push
xor
push
xor
xchg
push
xor
sub
ljmp
data16
das
out
fisttpll
mov
outsl
out
pop
repz
ret
adc
xor
sbb
sub
sub
add
rcrb
cmp
jnp
aam
fs
hlt
push
fisttps
pop
les
mov
aad
stc
mov
cmp
mov
ds
xor
cmp
mov
cli
jle
lcall
or
inc
in
mov
push
sub
jp
push
xor
nop
jns
ret
add
lea
je
xor
xlat
int3
add
stos
pop
mov
repz
and
dec
aad
aam
or
mov
lds
iret
mov
jns
ss
mov
mov
mov
aad
out
je
add
mul
mov
cmc
xchg
jo
fadd
cmpsl
outsl
jo
jo
sbb
sar
bound
or
mov
jp
mov
add
arpl
mov
cmpsl
sub
sbb
pop
push
mov
cmpsb
pop
jno
inc
adc
aaa
jo
jmp
mov
mov
or
and
je
adc
push
jb
and
xlat
cmp
jg
daa
loope
xor
int
push
nop
mov
or
emms
adc
lret
push
js
pop
jg
mov
jmp
pop
ds
push
mov
jmp
addl
into
xchg
gs
sub
inc
out
stc
adc
xor
lret
add
sub
div
pop
enter
mov
jo
ja
repz
adc
mov
jecxz
xchg
or
je
mov
bound
push
outsl
adc
ja
mov
sub
cli
pop
fmul
jb
sub
and
jno
repnz
rcrl
insl
cmc
jbe
stos
mov
adc
add
enter
add
in
mov
jmp
mov
iret
sahf
enter
jle
sbb
mov
pop
mov
jmp
cmp
inc
xchg
and
dec
jb
dec
cwtl
in
mov
repnz
or
xor
adc
pop
push
jg
insl
orl
mov
jecxz
icebp
adc
ret
and
xchg
and
sub
and
cmp
loopne
pop
repz
daa
jge
cmp
or
cmc
jo
int
push
mov
inc
adc
dec
mov
and
jle
and
push
cwtl
xor
or
and
sbb
std
clc
cmp
cmc
inc
push
pop
push
mov
mov
iret
mov
push
gs
and
cmp
test
xchg
jnp
stc
add
cmp
aad
mov
xor
inc
mov
mov
or
mov
testb
xor
sub
add
andl
testl
mov
cmc
dec
test
test
or
lock
xor
mov
dec
jg
mov
sub
or
push
aaa
push
jns
js
dec
aaa
sub
stos
mov
idivl
cmc
sarb
dec
xchg
inc
daa
movsb
jle
mov
int3
adc
sarl
test
add
cs
mov
cmc
bound
jno
xor
sbb
mov
and
jle
enter
aas
adc
lcall
js
mov
jb
stos
inc
aaa
repz
and
push
mov
repnz
sbb
mov
add
jg
and
sbb
jnp
xor
stos
shr
out
dec
idivl
jb
add
or
jns
shlb
lock
call
mov
add
dec
cmpl
cmp
test
xchg
lret
adcb
sub
xchg
aaa
mov
add
mov
add
jg
dec
mov
mov
add
divl
in
jp
sti
repz
arpl
sbb
jae
daa
add
sarl
mov
lcall
jle
sbb
push
daa
mov
lahf
sub
push
out
or
test
push
stos
jle
and
mov
cmp
mov
cs
add
nop
repz
jl
and
xlat
shl
bnd
push
pop
pop
dec
or
orb
jo
mov
loopne
pop
js
subl
out
xchg
mov
mov
jb
mov
push
sti
mov
insb
fisubs
fmuls
push
add
loope
aad
pop
and
or
jl
pop
push
adc
cmp
add
sbb
in
jns
jl
pop
aam
mov
xor
dec
sti
jo
lahf
push
rcll
or
js
dec
rcll
loopne
adc
mov
or
daa
or
decb
sbb
dec
rep
and
push
and
sub
int
inc
push
dec
mov
gs
mov
inc
sti
nop
xchg
test
call
xlat
jne
sub
jbe
push
sti
lcall
push
or
int3
rcl
test
mov
mov
adc
out
in
dec
hlt
push
inc
mov
add
subb
out
push
sub
push
jg
or
ljmp
xchg
xchg
cmp
repz
jb
ret
pop
sti
fcoml
stos
loopne
shrl
cmp
idivb
ret
jp
mov
push
add
adc
mov
jno
or
lea
fidivrs
jecxz
push
xor
sbb
jns
and
outsb
sub
jns
icebp
addr16
addr16
lock
adc
adc
icebp
jle
es
mov
pop
and
mov
adc
ret
js
sarl
fmuls
outsl
hlt
cmc
insl
jno
ljmp
or
mov
pop
in
push
xchg
mov
jl
push
mov
xchg
repnz
iret
add
test
or
xor
mov
test
loop
and
loope
add
cltd
jl
pushf
add
ficoms
ret
or
repnz
lret
dec
icebp
mov
cmpsb
fs
mov
jmp
xor
jo
sbb
mov
or
frstor
sub
cli
sbb
mov
mov
pop
mov
decb
adcl
test
dec
mov
sti
fisttpll
and
mov
ljmp
or
add
repz
cld
sbb
push
into
add
out
xor
mov
cmp
mov
stos
pusha
pop
popl
cmp
jo
addr16
cs
xchg
jo
sbb
stc
add
mov
insb
out
jnp
jne
push
push
ds
xchg
mov
xor
cld
push
and
stos
mov
sbb
cmp
insb
and
add
xchg
or
mov
xchg
and
or
lock
xlat
mov
icebp
fiaddl
ja
shl
add
push
lret
xor
repnz
xchg
movb
and
daa
jnp
addl
xchg
lahf
add
mov
cmc
xor
or
icebp
je
mov
jg
pop
repnz
lcall
adc
mov
iret
imul
xor
mov
push
xchg
scas
popa
add
cmc
int3
sahf
cmc
out
add
fcomi
or
xchg
push
jo
add
js
cli
or
loope
and
clc
jp
test
add
mov
stos
sti
out
or
mov
xchg
sub
aad
clc
xchg
and
mov
inc
ja
sbb
frstor
jo
out
mov
xchg
jecxz
add
or
ja
loope
aaa
cmpsb
std
or
cmpl
aaa
dec
mov
out
xor
push
insl
imul
cld
lahf
cmp
add
pop
lods
add
mov
aaa
jbe
add
jo
cmp
scas
ds
cs
jnp
jb
add
mov
ljmp
jg
and
mov
or
mov
mov
iret
add
es
movsl
mov
repnz
inc
and
jo
jae
nop
mov
lret
lds
inc
pop
icebp
push
sub
test
xorb
arpl
cmp
cli
mov
xor
sbb
sbb
jg
stos
jl
adcb
add
mov
push
sbb
jns
jp
jns
add
and
ja
into
fucom
sbb
lock
xchg
push
lock
nop
incb
pop
pop
cmpsl
aam
jg
subb
jge
out
jns
out
xchg
pop
repz
add
es
pop
sub
popa
or
adc
mov
mov
dec
pop
adc
leave
andb
andb
lret
pop
std
add
and
outsb
inc
push
jge
add
sub
and
jns
popa
inc
add
jo
xchg
test
out
out
add
jno,pn
pop
movsb
cmpsl
popa
inc
add
dec
mov
je
xor
fildll
sub
and
mov
jg
add
mov
icebp
xlat
cwtl
orb
js
push
mov
jmp
pop
addl
mov
inc
mov
jo
ret
inc
sti
repnz
pop
icebp
test
sub
xlat
test
mov
add
fcmovnu
jb
jg
stc
jb
mov
cli
xor
pop
or
outsb
and
inc
nop
cmp
shll
outsb
jbe
or
or
or
fisubl
andb
in
inc
and
mov
sbb
cmpl
jo
hlt
inc
test
sbb
xlat
add
aam
cmp
pop
jl
popa
hlt
jnp
mov
mov
mov
or
push
add
inc
push
in
jle
mov
or
fimuls
pop
mov
or
jns
pop
movsb
pop
jnp
jno
cmc
ds
repz
repz
cmp
js
cli
test
adc
aam
ficoml
jp
sti
stos
or
mov
mov
jnp
sub
jmp
inc
pop
addb
lds
int3
aas
flds
leave
ljmp
and
rorb
repz
int
mov
mov
push
cmpb
and
icebp
push
adc
repz
jne
ficoml
popa
psadbw
in
test
xchg
or
shrl
repz
xchg
icebp
adc
idivb
xorb
dec
sub
add
mov
pop
cmpsb
pop
inc
mov
enter
push
mov
push
iret
inc
mov
pop
int3
cltd
add
xlat
fs
push
je
mov
test
jmp
icebp
or
jp
jle
lret
mov
test
insl
movsb
push
push
std
lock
inc
aam
push
out
fcoms
mov
arpl
rcrl
xchg
enter
mov
orl
clc
rcll
out
cltd
xor
out
fs
test
mov
ud2
repnz
sbb
lds
jb
lea
sbb
adc
and
xlat
or
ja
pop
add
outsb
dec
add
inc
push
fsubrl
shll
jg
pop
sub
jecxz
test
lahf
cwtl
add
jo
daa
repz
xor
pminsw
insb
add
pop
jle
pop
push
fmul
mov
push
aad
leave
mov
repnz
repz
pop
call
inc
add
push
cmc
or
out
mov
add
cmp
cmpsb
icebp
mov
ror
aam
push
sbbb
mov
push
inc
sub
sbb
jg
repnz
pop
adc
sub
push
scas
sub
or
xchg
pop
in
push
push
fisttpll
inc
roll
lds
addl
push
push
jns
in
out
adc
pop
clc
nop
jle
push
leave
dec
imul
add
push
xchg
sti
add
pop
test
xlat
add
int
cmc
ret
xchg
and
cmp
int3
ljmp
jno
mov
js
mov
ja
dec
imul
data16
jo
das
jle
mov
push
pop
adc
pusha
pop
jo
add
sbb
push
icebp
mov
in
inc
addb
fldl
aaa
leave
push
scas
push
js
nop
mov
pop
sahf
or
jle
sti
or
repnz
cmp
jo
movsl
ret
lock
pusha
mov
inc
mov
jns
mov
and
sbb
or
mov
repnz
sub
jno
and
push
pop
hlt
cmp
mov
in
pop
add
cmc
mov
adc
adc
mov
pop
repnz
inc
sbb
sbb
jb
repnz
pop
lcall
inc
or
or
add
fisubs
xor
or
and
jnp
jmp
stc
sub
loopne
sti
popa
or
cwtl
sub
cli
repz
add
mov
shll
sti
je
mov
pop
cli
mov
mov
es
arpl
rcrl
mov
fdivs
popl
out
jno
inc
gs
inc
and
inc
inc
sbb
jecxz
clc
icebp
pop
sub
je
push
jnp
and
loopne
into
cltd
into
vmulsd
sbb
xor
mov
jl
pop
jno
sbb
fnstenv
xor
sub
divl
into
dec
inc
clc
jg
popf
pusha
jnp
cld
repnz
push
stos
adcl
dec
insb
add
cmc
fisttpl
add
test
cmc
iret
and
cmp
dec
repz
loop
jb
push
nop
andl
mov
and
xchg
sbb
xor
shlb
mov
or
xor
pop
push
lret
jno
inc
es
pop
scas
sub
jmp
mov
shlb
je
inc
test
jmp
add
inc
pop
jno
stos
rol
cs
out
or
add
cld
scas
cmc
jp
sbb
jmp
add
xchg
jne
mov
out
pop
aam
aam
lock
cwtl
xor
dec
mov
pop
testb
stos
jne
add
mov
inc
mov
sbb
aam
fsubl
add
cmp
sub
clc
mov
sbb
ret
dec
jo
add
mov
or
sub
enter
cmpb
sub
pop
or
add
xor
sbb
rcrl
xchg
and
mov
xor
add
std
hlt
add
repz
push
div
into
clc
jl
rorl
or
push
xchg
fcmovne
lock
inc
and
into
push
jmp
icebp
adc
sbb
jae
sub
ss
xor
xor
or
scas
aaa
mov
or
rcrb
push
test
aam
cwtl
mov
jbe
or
xor
jb
shr
insb
gs
push
dec
jp
lods
js
cmc
test
int
add
push
mov
icebp
inc
adc
dec
insl
cmc
imul
mov
repnz
add
push
mov
insb
inc
repz
sbb
xor
dec
xchg
notl
adc
lods
jno
pop
vmread
mov
push
aad
mov
rorl
ja
xchg
mov
sar
mov
or
mov
fdivs
mov
xor
push
xor
pusha
or
xor
adcl
lahf
sti
push
mov
mov
inc
jl
and
testl
lret
adc
or
into
mov
pop
push
div
fistpll
cmp
pop
add
xlat
dec
bnd
xor
jo
orl
scas
jae
sti
mov
popf
loop
out
xchg
lods
jno
dec
jno
push
sub
push
cmc
xchg
push
repz
loopne
into
xor
xor
and
sbb
sbbl
mov
out
sub
sbbl
add
push
mov
loopne
dec
mov
int
mov
icebp
cmp
xor
jmp
jb
repz
pop
inc
ss
es
mov
int3
xchg
shrl
sbb
inc
mov
lods
rcl
lock
hlt
jle
mov
clc
and
pop
lock
lea
dec
push
out
push
jecxz
mov
sqrtps
inc
or
jl
sbb
mulb
nop
push
sbb
in
cmp
sbbl
dec
test
fs
test
test
jo
mov
div
xchg
inc
cmovo
rcr
or
in
xchg
aam
or
outsl
inc
push
push
cmp
data16
sub
adc
popa
add
ret
push
sub
mov
fcoms
lahf
push
sti
or
xchg
push
ret
cli
xchg
cli
ja
push
add
in
ss
pop
dec
ja
repnz
sbb
insb
jp
or
cmc
sarb
repnz
mov
pop
sahf
out
int3
or
cld
lods
xchg
and
adc
movsb
mov
or
ud2
mov
add
fwait
sub
es
xor
ds
cmpsb
fiaddl
into
cli
repz
data16
add
pop
jmp
jns
icebp
and
mov
xor
push
sbbl
push
cmp
cmpxchg
sbb
shl
mov
sbb
or
cmp
jne
or
out
arpl
sbb
mov
jno
jnp
sti
and
add
insl
test
jo
mov
rorl
negl
inc
insl
sbbl
push
scas
shlb
icebp
ljmp
xorb
pop
add
push
sub
push
push
and
movsl
daa
add
mov
std
dec
scas
sub
aas
lahf
jge
and
pushf
add
jecxz
add
mov
imul
push
mov
int
arpl
inc
mov
adc
outsl
repnz
mov
out
movsl
dec
cmp
jmp
test
aad
cmpsl
insb
add
add
adc
dec
sbb
mov
or
bnd
cmp
cmp
adc
hlt
div
pop
push
aad
mov
or
cmp
add
push
test
cwtl
push
add
cltd
iret
mov
mov
xchg
dec
ret
mov
test
jns
std
test
jmp
stos
cld
bnd
xchg
push
cmp
cmpsl
mov
sbb
and
test
loop
dec
cmc
cmc
sar
sub
pop
icebp
repz
xchg
cld
lret
sub
lods
or
sub
imul
fwait
sub
inc
std
rolb
test
orl
flds
or
and
mov
cld
cmp
iret
lahf
push
pop
xor
add
outsl
cmc
jmp
in
mov
jo
pop
mov
in
sbb
clc
cli
inc
adc
aaa
xchg
std
out
testl
jecxz
push
cmp
ds
xchg
outsl
in
jg
push
std
jb
sub
cmp
jno
lea
leave
jg
sbb
jns
cld
or
sbb
mov
pop
or
or
cmpl
fsubl
fwait
icebp
jg
xchg
stc
ljmp
repz
or
sbb
imull
mov
mov
jo
out
add
add
or
scas
cmpsl
and
jg
add
dec
or
pop
mov
repz
flds
or
jecxz
jo
daa
iret
filds
mov
push
add
sub
add
in
mov
jl
add
push
and
adc
cld
lock
mov
push
daa
out
lea
into
cmpsl
popf
push
cmc
ljmp
fdivrs
lock
xchg
push
fbstp
jne
push
std
cmpsb
idivl
inc
addr16
stc
js
jae
lret
mov
add
mov
sub
xlat
mov
icebp
lret
pop
or
mov
pusha
mov
jne
shl
adc
mov
push
add
cmpsb
add
push
adc
pushf
movsb
add
daa
xchg
xchg
and
insb
lods
lcall
inc
gs
les
xor
jge
das
cmp
push
push
clc
popa
jecxz
cli
outsl
cmp
add
sti
mov
sub
mov
into
pushf
addr16
fwait
or
loopne
sbb
ja
repnz
sahf
mov
or
jns
cld
sbb
adc
xchg
and
rdmsr
repnz
add
push
fwait
pushl
cwtl
lds
dec
sub
sub
jb
orb
push
add
movsl
push
push
inc
mov
ja
mov
test
cmp
pop
jp
adc
popl
xrelease
jnp
jl
jns
inc
mov
sbb
jl
cmc
push
daa
orl
lock
and
ljmp
jg
cmp
hlt
ja
adc
imul
add
mov
scas
mov
sbb
mov
jae
sub
mov
push
jmp
mov
iret
mov
ret
insb
clc
sti
push
pop
jns
aad
aad
push
filds
or
push
ss
add
cmp
enter
push
and
push
and
cmp
mov
stos
cli
icebp
xor
jp
sub
out
xor
movhps
insb
aam
out
add
add
sbb
ds
int
jg
fmuls
lock
dec
jns
rolb
pop
cmp
mov
lahf
push
mov
push
or
div
xlat
in
inc
adc
or
inc
cli
adc
inc
notb
and
xorl
push
lds
cld
push
fwait
ret
or
jns
jg
loope
fnsave
cld
mov
pop
sub
cmp
repnz
add
daa
cmc
and
outsb
push
xor
test
data16
add
leave
jle
imul
or
mov
add
mov
icebp
push
sbb
loopne
push
arpl
inc
jo
jb
cmp
xchg
jl
xlat
push
add
cld
or
js
imul
cmc
adc
sbb
into
jae
negb
pop
xchg
cmc
std
jecxz
jg
inc
jg
in
mov
or
lods
lock
mov
xor
jne
mov
mov
imul
xchg
adc
and
or
jp
xor
test
or
pop
fwait
bound
mov
pop
ret
jo
and
sahf
mov
divl
add
icebp
stc
icebp
mov
or
sbb
ljmp
and
cmc
jo
btr
add
testl
inc
pop
pop
movsb
mov
jmp
jb
mov
cld
dec
or
pusha
loop
add
cltd
daa
nop
stc
out
in
jge
pusha
sbb
adc
jno
std
mov
loope
repnz
mov
and
pop
pop
or
imull
jb
cmp
adc
inc
xor
xor
clc
test
adc
aaa
lcall
mov
je
adc
xchg
mov
psrlw
cmc
icebp
xorb
xchg
mov
mov
push
clc
pop
jae
hlt
mov
imul
shrb
xor
dec
aam
push
cli
hlt
js
jo
addr16
test
add
mov
scas
sub
fistl
mov
sbb
pushl
adc
in
clc
pusha
aaa
ds
ss
push
in
add
push
sub
or
xchg
xor
jg
add
xchg
pop
call
jno,pn
out
sbb
out
aad
mov
sub
repz
ss
mov
mov
add
push
fcmovnbe
mov
dec
cmp
pushf
or
enter
lods
icebp
mov
js
mov
push
sti
cwtl
cs
in
mov
std
adc
repz
loopne
notl
mov
dec
xchg
cmp
jl
rclb
fwait
sbb
mov
xor
je
cmc
add
sub
adc
push
fidivs
cmp
cli
jecxz
push
ljmp
add
lret
mov
xor
movsl
xlat
or
cmp
je
jge
lcall
mov
mov
imul
jns
decl
lea
incl
xor
fdivr
sahf
xchg
scas
sub
pushl
push
xor
mov
scas
sti
test
mov
aad
call
push
loopne
mov
inc
ds
cwtl
imul
push
imul
fwait
movsb
incl
xchg
and
inc
mov
clc
xchg
fistpl
imull
es
add
mov
pushf
jae
xlat
mov
push
add
jo
rclb
xchg
and
sbb
jbe
sbb
mov
xchg
popa
jp
scas
jmp
mov
push
mov
mov
data16
js
mov
pop
ret
inc
lock
arpl
not
out
cs
outsl
rolb
mov
int
adc
leave
or
imul
inc
enter
xchg
add
loopne
adc
xchg
cltd
pop
test
sar
sub
mov
dec
jecxz
pop
fisttpll
adc
xorl
out
mov
data16
push
pop
lcall
jmp
test
push
sub
sbb
mov
xor
fidivs
dec
cli
into
xchg
ud0
aas
or
add
lcall
popa
mov
cmp
imul
in
and
sub
repnz
popa
xchg
xchg
fists
insb
aas
mov
inc
fmull
lock
sahf
pop
xchg
decl
or
pop
call
sub
jne
adc
push
jmp
ret
mov
mov
lods
push
adc
incl
adc
and
jge
decl
adc
lock
inc
sub
jecxz
fidivrl
iret
pop
cmpsb
ljmp
cmpsl
mov
call
cmp
cbtw
stos
js
jns
cmp
push
or
jmp
dec
push
xor
lcall
test
pop
inc
jne
jae
rcrl
and
inc
mov
fdivs
outsb
adc
mov
xor
xor
in
out
sahf
or
outsb
push
jmp
mov
cltd
mov
test
cmp
lret
loope
scas
lcall
scas
mov
call
or
or
call
xor
repnz
in
pop
lahf
cmpsl
inc
fidivrl
cmpsb
outsl
lods
test
adc
sbb
sbb
in
xor
std
xchg
mov
int3
fcos
xchg
jle
jl
gs
push
nop
pop
jne
and
inc
mov
test
xchg
inc
cmp
xor
pop
cmp
push
loop
pop
subl
jp
imul
ja
testl
sub
sbb
mov
orl
stos
test
and
pop
cmpb
mov
push
je
push
inc
lret
or
mov
adc
xor
incl
loop
loope
dec
out
or
pop
fnstcw
push
enter
shl
sbb
jae
push
inc
mov
or
dec
repnz
inc
lahf
cld
ljmp
cmp
lret
mov
and
pop
enter
add
decl
cmp
add
aad
push
out
loop
sbbl
add
dec
je
insb
outsl
pop
or
push
xor
mov
inc
mov
jl
decl
aas
dec
dec
int3
or
fldl
cmc
lea
aas
scas
jo
repz
ja
pop
xchg
xchg
mov
scas
loopne
imul
scas
int3
roll
sbb
sub
movsl
pop
push
mov
or
decl
std
push
jge
jo
decl
fildl
lcall
push
scas
adc
mov
mov
lea
mov
aam
popa
add
insb
mov
pusha
imulb
ficoms
ret
pop
outsb
xor
cmp
cwtl
and
or
test
adc
add
xlat
rorl
mov
sbb
fsubrs
insb
xchg
xorl
dec
adc
loopne
call
or
add
push
enter
insb
and
mov
mov
sbb
decl
inc
shl
loopne
sub
push
push
mov
cmp
lret
and
popa
lret
push
incl
fimull
pop
dec
nop
incl
xor
mov
add
mov
into
mov
push
int
pushl
mov
incl
sub
aaa
xchg
sbb
push
dec
dec
or
inc
cmp
inc
lcall
decl
shlb
inc
cmp
daa
or
popf
testl
cld
shrb
dec
call
fwait
jns
dec
ror
push
dec
cmp
shll
cmp
ss
and
adc
cmpsl
shl
addr16
add
test
lcall
add
call
push
inc
fimuls
sub
jae
mov
lds
mov
pop
pushf
mov
and
dec
pop
xor
jge
mov
les
mov
int
mov
or
add
sub
push
sbb
add
cltd
dec
incl
jecxz
xchg
call
jbe
or
fistl
scas
jp
out
xchg
imul
nop
inc
and
jmp
push
cltd
jno
fwait
xor
sbb
in
cmp
aaa
leave
fisubrs
popa
cli
es
shlb
stc
or
and
pop
cmp
cmp
fsubrl
adc
pushw
adc
pop
sbbb
enter
push
aaa
xchg
into
jmp
mov
cmpb
imul
fdivr
aaa
scas
lock
xchg
call
fnstcw
aam
adc
subb
ss
jo
dec
inc
jmp
sub
sti
sub
sbb
int3
add
pop
popl
cmp
int
adc
dec
adc
mov
fisubl
fiadds
decl
mov
mov
dec
sub
bound
mov
dec
xchg
mov
std
cmpsl
icebp
movsl
in
incl
lds
cmc
incl
and
aas
jae
push
pushl
fcmovnb
inc
dec
xchg
rclb
fsubs
or
pop
jns
add
adc
jmp
mov
pop
lcall
out
sar
mov
addb
or
jns
add
in
mov
lods
xor
inc
sets
sub
ja
imul
pushl
movb
jg
xor
inc
push
in
add
std
add
rcl
mov
jne,pn
sti
dec
das
jg
jmp
popa
aaa
jo
call
and
jl
lods
sti
fildll
lcall
xorb
and
jg
popa
jmp
pop
scas
ds
lahf
jmp
inc
insb
notb
jmp
sub
xor
mov
add
xlat
fisttpl
pop
ror
push
enter
addr16
incl
adc
test
jmp
cltd
aas
pusha
or
mov
mov
push
cmpsb
lock
mov
into
jg
sbb
fdiv
xchg
or
test
mov
mull
incl
mov
mov
fisttps
inc
pop
add
ds
mov
push
jle
mov
mov
or
cmp
in
rolb
out
xor
mov
or
push
jnp
lds
sub
mov
or
push
testb
jl
xchg
ret
jmp
decl
ret
frstor
push
sub
cmc
fsubr
xlat
scas
in
sbb
leave
shrl
push
pop
mov
adc
adc
dec
cmc
jg
in
sti
rolb
aaa
mov
testl
out
push
xlat
pop
sbb
xor
daa
mov
jge
les
mov
mov
out
sub
outsl
pop
rcll
dec
lea
das
and
xchg
mov
xor
xor
push
divb
add
inc
ljmp
push
mov
sub
lret
fldcw
xor
in
push
mov
ljmp
mov
call
push
ja
fildll
shr
cld
test
mov
enter
insb
add
mov
ficompl
inc
inc
or
ds
data16
lods
shll
cwtl
in
cli
mov
imul
movsb
jns
xlat
jmp
xor
mov
enter
lcall
push
add
mov
lcall
mov
jle
cmp
inc
xor
aaa
and
adc
push
cmpsb
pop
adc
mov
imul
ljmp
cs
aad
inc
mov
add
mov
push
and
call
push
push
mov
incl
aad
lods
scas
ret
dec
pusha
add
push
inc
xchg
add
or
push
addr16
stos
incl
cmpsl
movsl
jle
dec
aaa
push
or
cmp
decl
popl
imul
repz
data16
xor
cmpb
and
sar
xor
fnstenv
stc
and
mov
jg
je
test
lea
adc
cmpsb
xor
cmp
mov
add
push
push
cltd
pop
push
clc
inc
mov
or
jbe
div
add
push
ss
adc
out
xchg
std
mov
and
jo
push
or
mov
notrack
arpl
pop
push
in
sbb
mov
fdivrp
inc
data16
cli
jge
or
repnz
xchg
call
pop
das
push
push
cmp
mov
in
push
add
lock
mov
inc
push
xlat
xchg
xor
es
fistpll
cmp
dec
fmull
fwait
lock
mov
call
mov
sbb
pusha
leave
pop
addb
xchg
sub
aas
cmpsb
push
jmp
fiaddl
jle
out
lods
sbb
loope
mov
gs
pop
jge
jmp
adc
add
mov
out
sbb
dec
jecxz
pop
push
mov
mulb
es
jae
pop
sbb
xchg
sbb
push
and
notb
jmp
icebp
add
bound
lds
test
jae
repnz
and
rorl
xchg
sub
data16
sub
pop
cmc
sub
scas
stos
or
dec
jg
push
out
or
shl
push
add
add
test
stos
call
mov
mov
int
addr16
sbb
pushl
iret
gs
push
in
call
mov
push
dec
fcompl
jne
addl
mov
ljmp
and
pushl
jno
jg
out
scas
dec
push
sbb
mov
sbb
add
jb
fadds
movsb
not
cmc
add
aas
into
jp
add
xor
flds
or
cli
repnz
push
jne
movsb
xchg
push
cmp
fdivrs
andl
int
jo
or
rcl
ds
add
cmpsb
pushl
and
push
pushf
je
push
adc
dec
or
inc
ljmp
loope
xchg
xlat
or
mov
dec
jg
mov
incl
add
xchg
inc
pushf
inc
jl
rorl
insl
movsl
test
mov
fbstp
jp
mov
and
mov
inc
or
jo
lahf
add
mov
aam
mov
loope
dec
test
lcall
enter
sub
xor
sahf
out
sub
ret
or
sbb
mov
lcall
push
push
loopne
fdivrs
sub
das
mov
xchg
dec
lcall
inc
les
pushl
outsl
fsts
sub
pushl
loop
shrl
dec
pop
pop
test
in
fcomi
movsb
add
scas
incl
adc
cmc
mov
push
iret
or
sbb
sbb
xor
or
push
push
iret
xor
dec
outsl
shll
pop
xchg
mov
rcl
xor
sbb
or
rcrb
mov
popf
ret
pushl
mov
iret
sub
data16
insl
lods
filds
dec
pushl
add
loope
in
aam
inc
insl
out
mov
insb
adcl
adc
cmp
push
xchg
call
les
jg
enter
cmpsl
insb
out
jns
aam
xchg
sbb
add
incl
in
add
mov
decl
inc
daa
jns
in
and
mov
or
cs
pop
add
scas
add
lods
into
cmp
push
cmp
mov
daa
xor
dec
inc
shlb
add
push
add
shlb
divl
cmp
cwtl
push
nop
popl
jbe
push
inc
or
push
fistps
clc
mov
or
push
dec
call
mov
jmp
push
incl
mov
leave
dec
incl
loopne
sar
popa
ss
add
jp
push
xchg
decl
shr
test
mov
mov
dec
movsl
jb
loop
jge
incl
pop
cmp
mov
data16
push
sbb
pushl
adc
mov
icebp
loopne
ljmp
or
jge
int
jecxz
shlb
lods
jnp
cmc
mov
sbb
xlat
shrl
rolb
jmp
mov
fs
es
jbe
cmp
mov
arpl
shrb
pop
into
jg
test
jb
incl
mov
mov
je
arpl
jge
sub
fwait
or
in
pop
or
xorb
add
aam
lcall
pop
xchg
push
lds
scas
adc
push
add
paddsw
xchg
mov
mov
sub
cmp
sarl
popa
adc
cmp
es
gs
lahf
popf
or
fsubr
lds
scas
imul
mov
inc
bnd
pop
lahf
sbbb
ljmp
cltd
mov
jmp
cmpsl
cld
sti
rorl
lods
stc
jnp
xlat
jne
test
nop
dec
dec
jge
or
inc
rclb
xor
push
pop
pop
mov
pushf
inc
xchg
mov
icebp
adc
add
pop
stos
sbb
push
jl
dec
jle
mov
icebp
pop
jmp
test
or
jne
pop
fidivs
sub
stc
and
pushl
inc
cld
jl
lahf
sti
pusha
xor
scas
mov
xlat
pop
ja
mov
push
loope
jmp
pop
or
or
add
test
xlat
or
mov
cli
sti
or
mov
push
mov
fcomip
into
dec
adc
jle
call
fwait
add
push
ds
in
and
mov
std
mov
jnp
push
mov
add
jg
pushl
lods
push
repz
cmp
fisttps
or
test
lods
mov
popa
les
sbb
xchg
and
xor
mov
jns
lret
jmp
inc
inc
call
and
jne
cmpsl
jg
push
std
idivl
or
stos
xor
adc
notb
lret
inc
pcmpeqd
pushf
jo
dec
add
cmpsl
mov
mov
scas
decl
pop
jecxz
xchg
xchg
sahf
incl
mov
bound
inc
mov
out
data16
clc
es
fsubrl
popa
pushf
test
mov
cmp
out
xchg
fdivs
cmp
int
mov
insb
and
lea
adc
adcb
sub
scas
pop
scas
sub
add
mov
adc
cmp
popl
jmp
push
lret
jl
dec
decl
popa
or
jae
fst
div
cmc
scas
push
push
scas
call
mov
push
call
sbb
ja
icebp
movlhps
into
jno
dec
ret
in
mov
in
movsl
push
xchg
mov
push
and
fnsave
lret
sub
out
push
fucomi
or
mov
mov
mov
es
lea
cwtl
adc
or
adc
testb
test
add
loopne
out
mov
add
dec
mov
cmp
shlb
fldenv
add
or
fidivs
insl
int
mov
or
adc
push
mov
mov
cmpsl
jmp
test
push
in
imulb
popf
jle
ficoms
sbb
adc
mov
cmpsl
pushl
xlat
push
lods
lahf
testl
loopne
pop
mov
in
mov
push
scas
and
ja
hlt
inc
inc
or
test
scas
mov
push
adc
push
push
push
je
mov
daa
ljmp
loopne
inc
hlt
addr16
ljmp
cmpsb
lahf
rclb
inc
ror
jbe
xchg
pop
sub
push
and
inc
call
sub
clc
call
pop
jnp
xor
mov
jl
mov
movsl
addl
adc
popa
cltd
pushl
add
lcallw
xchg
int3
addr16
mov
sahf
inc
call
dec
mov
insl
pop
or
dec
sbb
decl
push
pop
sub
stos
xlat
inc
fsts
incb
data16
inc
cmp
adc
and
pop
adc
call
rcll
out
xor
pop
test
or
sub
cmp
popf
gs
inc
fsub
jnp
mov
sbb
decl
lods
loopne
stos
mov
cltd
rcrb
shlb
lds
adc
inc
adc
mov
rcrb
jmp
pop
mov
xlat
push
mov
arpl
mov
xchg
aas
push
add
or
cmp
pop
dec
lcall
hlt
push
cmpsl
pop
jmp
cmpsb
pop
mov
iret
jne
cmp
sbb
pop
push
xor
aas
in
mov
std
dec
scas
incl
sbb
push
out
fmul
lds
aaa
xchg
jg
loopne
int3
je
or
lods
mov
xorb
lcall
mov
push
add
lods
fisubl
mov
dec
sar
ja
adc
or
mov
testl
aad
mov
jl
pop
in
jb
js
incl
sbb
sti
jmp
mov
xchg
lcall
push
and
lcall
ja
jae
fwait
mov
and
dec
mov
inc
fdivs
rcll
and
mov
mov
shl
addr16
movsb
daa
clc
dec
cmpb
or
aam
lret
push
arpl
rorl
jae
xor
test
add
repnz
sbb
pop
sarl
test
cmc
or
xchg
mov
imul
enter
std
and
aad
pop
or
adc
test
aaa
xor
out
out
int3
push
mov
mov
les
xchg
push
mov
jmp
or
jp
mov
push
and
scas
mov
daa
cmp
out
movsb
pop
xor
mov
pop
jge
push
xchg
repnz
mov
fldt
sub
mov
cwtl
xchg
fwait
rol
jecxz
lret
dec
push
push
mov
and
jp
adc
jne
xor
cmp
add
xchg
jge
sarb
sti
xchg
or
sbb
jo
inc
imul
push
hlt
ret
dec
test
mov
and
push
ds
cmp
sbb
xchg
inc
jmp
in
fistpll
mov
add
jns
out
xor
rol
je
in
push
data16
sub
mov
movsb
out
fcomi
mov
or
xchg
lret
add
lahf
push
xchg
or
fdiv
das
cmp
mov
sbb
fnsave
adc
push
scas
loop
leave
fsubrs
mov
xlat
push
test
sub
in
fwait
not
mov
sahf
lods
sbb
mov
push
jae
xor
add
rcrl
xor
iret
stc
cmpsl
jmp
pushf
pop
xchg
in
mov
testl
sub
xor
ljmp
sub
xchg
repz
ret
ljmp
outsl
xchg
mov
lret
adc
adc
add
out
stos
xchg
repnz
mov
inc
mov
roll
adc
sub
add
call
xorl
jmp
mov
ljmp
mov
jle
push
cmp
jbe
jns
jmp
xlat
dec
sbb
imull
dec
lcall
popf
add
fnstsw
xchg
push
and
adc
cld
inc
mov
test
mov
push
cmp
in
push
je
outsb
enter
push
jmp
addr16
call
xabort
push
mov
leave
and
roll
and
xor
dec
test
xchg
incl
jge
in
xchg
dec
mov
jb
negl
in
push
pop
push
mov
or
adc
mov
shrl
add
icebp
sbb
das
and
lea
daa
sbb
shrb
mul
rcr
lods
decl
movsl
lcall
mov
dec
je
incl
loope
shll
add
pop
test
cmp
dec
shlb
ds
gs
js
jnp
pop
jns
sub
orb
xchg
and
cltd
mov
mov
pop
rcl
ja
add
inc
pushl
sbb
lods
out
and
imul
into
pushf
out
arpl
push
movsl
popf
sbb
cmp
inc
or
mov
into
jecxz
sub
sbb
jns
test
leave
decl
push
add
mov
sahf
push
mov
or
jo
aaa
mov
jae
jmp
incl
notb
scas
aas
insb
jmp
lds
xchg
pop
add
int3
in
cmpsb
inc
pusha
adcb
clc
shrl
outsb
movsl
jmp
mov
cwtl
push
insb
lods
mov
pushl
mov
lcall
repz
filds
ds
mov
jmp
dec
cmp
pop
movl
sbb
inc
cmp
jmp
icebp
jg
lcall
das
pop
pop
arpl
mov
and
sarl
lods
popf
fsubs
or
or
mov
push
sub
and
mov
out
es
test
mov
mov
pop
repz
mov
inc
jns
data16
pushl
loopne
sub
jae
jge
sbbl
xchg
je
pop
lcall
test
push
arpl
aas
data16
jo
in
mov
iret
std
or
xchg
ss
pushl
imul
jg
mov
push
leave
and
aaa
or
icebp
or
push
adc
les
into
and
jp
aad
and
or
fidivrl
jecxz
and
iret
movsb
testl
cmp
ljmp
pop
in
test
aad
enter
mov
lret
sub
incl
adc
lahf
mov
xlat
pop
push
decl
aad
insl
xchg
data16
jno
push
lret
mov
xor
mov
rcrb
nop
push
test
sbb
fcoml
popf
mov
and
call
inc
dec
adc
fildll
cwtl
fadds
fsubl
and
loop
ret
call
adc
lret
orl
cmc
push
insb
lea
out
mov
cld
or
les
pop
mov
adc
push
jle
xor
jp
das
jmp
jae
sub
cmp
pop
scas
push
gs
sarb
ja
mov
sti
dec
decl
inc
in
jnp
add
daa
movsl
lret
mov
push
sbb
fdivr
sub
ljmp
insb
fistl
orl
iret
pusha
mov
cmc
push
xlat
mov
and
jmp
ljmp
pusha
mov
ret
outsb
call
sub
cli
sbb
je
or
int
lcall
stos
jl
jmp
stc
lods
fisubrl
cmp
call
mov
inc
call
call
out
mov
lcall
bound
jle
lock
sbb
add
xchg
xlat
sbb
pop
jmp
cwtl
imul
pop
jns,pn
scas
fisttps
add
cmpsl
out
jp
rolb
sub
ljmp
push
into
push
push
vpcomub
je
decb
daa
fcomps
inc
mov
mov
mov
ffreep
mov
insb
imul
jb
cs
inc
icebp
push
inc
sbb
jp
clc
sarl
and
push
xor
mov
jecxz
xchg
push
das
inc
adcb
push
sahf
int3
shrl
sbb
xchg
mov
inc
jge
repnz
incw
adc
pop
xor
mov
pushf
stos
push
lods
repnz
data16
cmpsb
pop
cmp
pop
jmp
enter
sbb
jae
stc
xchg
lahf
push
jmp
lock
cmpsb
jmp
nop
pop
jnp
pop
mov
sub
cltd
jo
loopne
or
add
stos
scas
scas
inc
cmp
dec
add
push
lds
jg
pop
pop
xorb
ljmp
incl
lahf
arpl
incl
jno
push
inc
sbb
lock
cmp
aaa
dec
push
cli
pushl
or
jno
rcl
arpl
lcall
stos
mov
cmp
xchg
fdivr
in
jge
mov
or
or
sahf
in
add
mov
pop
incl
shrl
aas
mov
mov
push
int
inc
xchg
cmp
sbb
int3
xor
jno
incl
dec
js
adc
cld
es
shl
cmp
sbb
lods
pushf
push
xor
inc
pop
test
jge
scas
or
popl
pusha
xor
fcmovb
incl
mov
mov
test
pop
xchg
mov
into
cmpsb
sbb
into
dec
jmp
pop
push
icebp
decl
pop
stos
vmovsd
lds
jne
xor
stc
dec
test
pop
xor
je
insl
cld
stos
dec
push
call
push
jge
mov
movsl
loop
ljmp
daa
stc
sbb
or
test
out
test
repnz
push
mov
out
pop
lods
les
xchg
adc
fidivrs
inc
mov
pslld
sarb
cmpsb
lahf
in
repz
pop
loope
push
test
pop
pop
pushl
xor
sbb
in
rcr
sbb
repz
rorb
pop
in
pop
cmp
xchg
jg
enter
movsb
xchg
or
aam
das
sub
or
loope
insb
dec
push
pop
into
jmp
je
cmc
add
cmp
jecxz
jns
lcall
repz
data16
fdivr
cmp
mov
jno
push
pop
mov
dec
jne
sti
mov
inc
xor
cmp
mov
rcrb
lret
sbb
into
into
jle
adc
pop
inc
cmp
lret
out
loope
outsl
cltd
or
dec
imul
mov
push
sti
loope
mov
push
pop
xchg
inc
push
scas
std
rorb
sub
test
jl
pop
cmp
push
xchg
call
and
jne
inc
xchg
push
or
add
hlt
add
jle
mov
cmp
pop
xchg
adc
loope
or
scas
out
stos
fildll
jmp
xchg
cs
xchg
mov
jmp
pusha
push
push
jns
aam
push
js
dec
jnp
in
fisttpll
jns
shrl
shll
push
shlb
cmp
pop
inc
arpl
aad
sub
pop
stc
roll
sbb
movsl
repz
mov
aaa
and
pushl
cmc
mov
leave
pop
sub
xor
sub
popa
decl
aad
dec
les
or
or
movsb
pop
pop
sahf
shr
pop
ljmp
lret
xchg
mov
ret
cmp
mov
decl
loope
adc
cmp
loop
flds
inc
incl
sbb
sbb
rclw
insl
add
jecxz
call
sbb
iret
sub
dec
or
mov
rcr
loop
outsb
xor
jle
add
sbb
dec
fdivs
notl
cmp
mov
out
mov
jns
or
lds
xchg
lret
flds
pop
lahf
leave
out
mov
xchg
mov
into
into
loope
pop
push
jg
je
cmp
pusha
daa
iret
idivl
sub
rcl
sarb
jb
jo
cmpsb
jnp
lcall
in
icebp
imul
divb
int3
inc
incl
out
insl
clc
std
xor
sahf
popf
ljmp
das
push
mov
rcll
dec
jo
mov
call
xchg
ljmp
aaa
loope
fwait
sarb
dec
fadds
cmc
push
jp
pop
xor
fisttps
push
xor
std
mov
add
pop
sbbb
and
jnp
jle
cli
dec
psubw
popf
push
int
xchg
lcall
fiaddl
jnp
clc
iret
sub
outsb
adc
xor
cmp
rcll
add
ja
jns
fdivs
push
fs
dec
jbe
test
in
dec
or
jmp
icebp
fsts
ja
call
arpl
jns
jno
cltd
repnz
sbb
cmp
mov
dec
ficoms
push
jmp
cmpsl
js
xchg
fnstenv
sub
mov
scas
insl
pop
cmp
push
es
pop
inc
dec
push
push
loop
sahf
mov
push
into
push
pusha
inc
cwtl
add
int3
inc
dec
aas
sbb
mov
imul
loop
sub
mov
or
add
pusha
and
scas
sub
inc
and
fsubr
imul
xorb
jge
sbb
pop
mov
mov
sti
scas
push
add
pop
inc
into
or
fimull
push
cld
mov
add
test
js
hlt
aad
sub
or
fsts
dec
xor
jl
ret
push
cmp
jae
mov
xchg
fsubs
cld
stc
aad
add
inc
mov
mov
pop
test
mov
xchg
inc
sub
add
dec
push
mov
xorb
cwtl
jg
add
imul
mov
hlt
mov
ljmp
popf
cmp
ljmp
xchg
cmp
mov
nop
lret
pop
mov
in
mov
xlat
xor
jp,pn
pop
sti
into
std
adc
loop
or
sub
jmp
test
leave
cmp
lret
aaa
mov
mov
pop
mov
sub
dec
icebp
sarl
pop
mov
inc
ja
and
mov
outsb
xchg
push
cmp
movsb
mov
adc
push
push
xor
push
dec
jne
insl
xchg
sub
nop
pop
cmp
shlb
sub
pop
fwait
push
xchg
js
stc
mov
dec
push
std
mov
pushl
and
pop
jmp
inc
sub
lods
xor
lcall
mov
mov
fxch
sub
sbb
shrl
adc
imul
lods
hlt
rorl
pop
test
mov
iret
pop
push
jecxz
pushl
xchg
cmp
lds
push
es
add
pop
mov
xchg
jb
nop
push
idivl
orl
dec
jmp
sub
repz
subl
xchg
xchg
add
and
cs
jb
xor
incl
jl
jp
das
fsubl
repz
in
test
frstor
shll
scas
sbb
leave
rcrl
int3
fs
repz
das
lcall
dec
cmp
jmp
add
push
stos
or
pusha
lcall
scas
scas
sbb
iret
dec
adc
fistpl
cmp
out
fdivrp
xchg
jbe
sub
dec
outsl
popf
pop
jp
ja
mulb
xor
orl
xchg
mov
sti
test
push
mov
mov
cmp
xor
out
dec
push
add
dec
stos
dec
mov
pushl
inc
mov
incl
xchg
cmc
mov
es
call
xchg
into
adc
enter
insb
xor
testl
ds
pop
sbb
in
push
js
push
cmpsl
sub
and
gs
mov
pop
or
test
ret
push
out
lods
push
add
pop
aam
scas
adc
into
push
and
in
mov
lods
fists
incl
mov
rorl
fistl
scas
or
shlb
cmp
std
xchg
pop
pop
pushl
fdivl
inc
jmp
aas
mov
clc
nop
dec
mov
popf
jo
mov
pop
add
push
add
mov
xor
dec
ljmp
add
and
lahf
xchg
pushl
and
adc
mov
or
adc
rep
push
dec
fistps
loop
add
shrl
inc
popl
jmp
fs
jbe
nop
xchg
fnstsw
dec
out
iret
stc
push
int
mov
leave
jp
mov
mov
cs
ds
dec
xchg
loopne
shrb
add
fs
jo
sar
data16
xor
jbe
rcrb
add
aaa
out
imul
mov
jl
nop
pop
adc
lods
adc
or
jno
dec
mov
ds
leave
in
pop
add
xchg
sbb
shlb
inc
cmp
mov
or
rcrb
pop
mov
cmp
or
divb
sahf
xchg
rorb
mov
jne
repz
mov
sbb
mov
fmull
div
mov
idiv
xchg
bnd
int3
cmc
mov
jmp
js
cmpb
ljmp
jge
sub
jmp
out
push
sti
mov
aad
lods
pop
sbb
mov
pop
test
xchg
jge
lds
sub
sbb
inc
pop
push
adc
mov
sub
scas
out
mov
pushl
and
pushl
mov
pop
icebp
inc
cmp
mov
rclb
pop
xor
pop
pushl
mov
decl
pop
stos
fdivs
pop
cld
imul
mov
in
mov
or
mov
mov
pop
shrl
lret
in
sbbb
out
pop
mov
loop
adc
decl
xor
imul
cmp
test
mov
mov
xchg
pushl
imul
pushl
xor
movb
cmp
es
xchg
sbb
call
mov
sbb
ljmp
inc
dec
push
pop
addr16
aaa
call
imul
xor
dec
adc
les
fdivrl
jp
shrb
cmp
mov
cmp
imul
lea
movsb
lcall
push
sub
inc
jge
mov
jnp
cmp
xor
mov
jbe
lea
stos
cmp
cmp
push
mov
push
mov
mov
jo
lods
add
or
inc
adc
testl
or
push
dec
xchg
add
push
pop
cwtl
inc
mov
jb
sbb
loop
data16
addr16
inc
jp
test
mov
xchg
insb
pusha
xchg
mov
je
lods
and
or
add
ljmp
stos
mov
push
pushl
push
fstl
andl
xchg
dec
xchg
out
pop
jmp
or
pop
mov
mov
lcall
sbb
aam
adc
dec
inc
fidivl
fldl
aad
ljmp
fists
dec
or
je
repz
adc
mov
std
stos
add
sar
movsl
popa
fmul
mov
cli
jae
enter
jnp
xchg
or
mov
ret
push
insb
adc
fisubs
and
lea
outsl
jae
fmuls
and
adc
ljmp
jmp
ret
mov
outsb
inc
icebp
lahf
mov
cmp
ja
fwait
bound
fnstcw
sarb
lret
pop
test
cmp
adc
jl
js
sub
lcall
or
or
mov
enter
insb
adc
push
jle
cmc
sbbb
sti
add
mov
inc
not
and
cmp
dec
jmp
or
pop
pop
dec
inc
rcrb
fbld
pop
incb
dec
jns
movsl
scas
or
push
into
mov
shrl
repz
adc
addb
aad
mov
cmpsb
decl
jp
popf
inc
shrb
jmp
inc
repz
pop
cs
incl
in
sub
imul
cmp
popf
movsb
fimull
mov
xlat
xchg
push
cmp
push
inc
lds
add
faddl
sarl
mov
decl
test
lcall
dec
push
js
mov
xor
pushf
sahf
mov
sti
imul
data16
mov
xor
pop
jae
fwait
xor
movsb
shll
lds
ljmp
gs
or
jo
xchg
adc
xor
jmp
loopne
or
or
xor
and
lcall
test
jbe
jae
fistl
sub
adc
adc
jne
or
dec
mov
fsubl
dec
push
jno
xchg
adc
sbb
jl
cmp
addr16
cli
adc
out
cmpsl
inc
mov
ljmp
add
mov
push
cmp
push
ljmp
adc
loop
cs
lcall
mov
mov
popa
arpl
cmp
cmp
lock
adc
jo
fsubrl
cmp
pop
pushl
stos
jmp
pusha
jecxz
mov
addb
pop
sub
call
sub
jmp
mov
pushf
mov
aas
icebp
xor
iret
dec
pop
jle
lahf
jge
inc
scas
adc
js
popa
inc
mov
pop
adc
pop
or
and
mov
xor
dec
shrl
js
add
sbb
cmc
mov
int
xchg
push
out
jmp
xchg
and
aaa
xor
inc
add
shlb
sub
dec
cmpsl
mov
push
fsubs
cld
mov
scas
mov
and
mov
adc
mov
xchg
xchg
incl
and
lret
cmp
add
movsb
mov
lds
sar
in
xor
mov
pop
lcall
repnz
sbb
mov
jg
jbe
test
daa
mov
sub
adc
cmpsb
std
cld
loop
xchg
mov
fildl
or
jg
mov
lahf
push
jmp
fnstenv
sbb
call
pop
mov
or
or
imul
add
inc
into
and
cmp
jecxz
mov
xchg
dec
jnp
decl
mov
push
mov
jne
push
aas
sbb
and
stos
call
lea
lret
jl
mov
cli
jo
push
ljmp
adc
shll
push
cwtl
lcall
arpl
cmp
mov
xchg
icebp
pop
iret
adc
outsl
lea
test
mov
aaa
shl
nop
jge
push
xchg
xchg
shll
cmpsl
sbb
int3
in
inc
and
push
adc
fistps
or
mov
ret
pop
sub
fldl
movsb
decl
mov
push
or
call
fiadds
push
push
adcb
jl
adc
dec
call
dec
mov
shrb
inc
adc
push
jae
fpatan
rcll
or
jo
dec
or
jo
into
out
jl
ds
mov
push
in
xlat
pop
jb
lahf
nopl
rcrl
add
and
fmuls
mov
addb
pop
loopne
ljmp
push
lea
push
and
pop
fbstp
xor
movups
in
mov
test
mov
mov
sub
jbe
or
std
jmp
fcos
cmpsl
fidivl
add
push
stos
incl
mov
lret
incl
ss
adc
push
and
call
or
sbb
inc
enter
insb
repz
xlat
je
shlb
mov
lcall
or
cwtl
in
mov
imul
jo
jns
stc
into
and
fs
or
out
out
xor
inc
out
pop
into
aam
fsubrs
push
sbb
push
ljmp
inc
inc
mov
aad
popf
ljmp
push
xchg
mov
push
mov
imul
daa
jle
cs
mov
or
fsts
mov
bnd
push
and
mov
and
push
mov
xchg
dec
lahf
jbe
daa
rcrl
fists
inc
xchg
or
lcall
incl
in
lcall
ret
cmp
jp
or
mov
data16
add
addb
hlt
mov
rorb
roll
xor
push
in
mov
fcmovne
incl
es
fadd
subb
insl
in
xor
and
leave
jecxz
cmp
dec
cltd
push
outsb
sub
mov
mov
or
push
cs
cli
and
ss
mov
jae
lods
jmp
sbb
jp
sbb
xchg
out
arpl
dec
and
add
cmpb
adc
adc
cli
js
sti
cmpsl
pop
add
out
ja
ljmp
xchg
pop
es
sub
fistpl
in
or
jns
sbb
mov
popa
xor
addb
pusha
inc
cmpb
bound
or
push
xchg
int3
in
xor
mov
iret
orb
xchg
stc
sub
xor
jmp
hlt
xchg
push
sti
decl
stc
mov
pop
push
leave
xchg
ss
into
sahf
pop
lcall
fiaddl
push
filds
push
mov
dec
mov
sub
pop
pop
add
js
dec
pushl
sbb
lods
dec
dec
das
pop
inc
jmp
sti
mov
xchg
lcall
repnz
or
ljmp
inc
push
jl
mov
std
aaa
push
fdiv
xchg
lcall
cld
sub
js
insl
insb
pushl
add
in
jmp
dec
pushl
sub
xchg
mov
jmp
je
test
mov
stos
int
jmp
mov
adc
adc
das
push
pop
jp
repnz
or
lahf
pop
dec
movsb
mov
imul
sbb
pop
insb
jo
call
push
or
push
xchg
jmp
cmp
pop
mov
mov
jg
jmp
data16
call
aam
test
or
pop
sarl
dec
lcall
mov
pop
jp
call
pop
ds
enter
adc
jle
push
sbb
movsb
popl
mov
cmpsl
test
aad
sub
jne
out
gs
int
cmp
shl
add
ds
fwait
rol
adc
and
stc
push
stos
dec
push
lret
mov
mov
jne
ret
psraw
test
fwait
or
aad
lods
mov
jae
jmp
ja
mov
jecxz
scas
loopne
rorb
dec
hlt
add
fsubrs
arpl
xor
xchg
sub
and
data16
lret
mov
ret
into
sub
push
test
push
xchg
fwait
dec
aam
dec
inc
sti
adc
add
adc
adc
mov
out
call
fucomp
jl
mov
out
dec
add
ret
xor
cmc
aas
push
mov
leave
sub
jmp
cmp
ljmp
in
ficoml
cmpsb
lcall
scas
jg
decb
push
mov
xlat
pop
lcall
jbe
fildl
inc
sahf
or
ror
lcall
xor
decl
int3
push
xchg
mov
adc
sub
fcmovbe
push
adc
lods
xchg
xor
jnp
fists
xchg
outsb
cmc
into
xor
ljmp
pop
scas
adc
pusha
fnstenv
fiadds
test
call
scas
mov
lret
sar
mov
mov
out
call
mov
ret
enter
shrb
inc
jle
sbb
add
jmp
jmp
xlat
adcb
mull
mov
lret
add
pusha
jns
mov
and
cli
outsb
rolb
sbb
ljmp
incl
or
cmp
ds
pop
je
add
dec
lcall
dec
aad
pop
adc
std
add
rcll
mov
cmpsl
shrb
lea
inc
cld
lcall
clc
into
call
popf
pop
and
pop
aam
call
mov
jb
adc
mov
js
add
int3
jmp
in
cmp
pushl
test
ds
sbb
and
sub
das
xlat
push
pop
inc
stos
data16
out
outsl
loopne
std
mov
and
fidivs
xlat
add
out
out
stc
jl
push
sub
int
dec
or
mov
insb
stc
sub
xorb
mov
or
subb
decl
inc
ret
mov
psrlw
inc
es
adc
adc
push
je
out
pop
hlt
data16
incl
xchg
or
adc
arpl
jg
sbb
outsl
push
cmp
lods
ficoms
xchg
mov
out
bound
cmpsl
or
jmp
mov
decl
pop
cld
lret
fdivrl
pushl
xchg
push
in
test
inc
mov
mov
inc
pop
add
xchg
dec
pop
cmp
dec
xor
fmull
stos
insl
push
xchg
test
daa
push
insb
pusha
cmpsl
cmpb
push
movsb
xlat
popa
inc
lods
xor
xor
fdivrs
inc
or
cmovg
pop
dec
fisttpll
jno
loop
adc
push
inc
push
fisubrl
fwait
mov
mov
aam
mov
and
pop
sbb
pop
jnp
sbb
mov
dec
jno
pop
mov
push
ja
or
lds
xlat
das
lcall
sub
fwait
lods
xchg
jmp
test
cmp
fsub
sbb
cld
ja
in
xchg
cmp
mov
pop
out
std
mov
fildll
jno
ss
out
jmp
dec
test
call
lret
add
pop
or
lcall
xchg
repz
pop
ret
sub
pop
or
mov
dec
lahf
mov
mov
xor
je
pop
mov
add
push
outsb
in
push
jg
std
mov
test
xchg
jns
mov
jg
fs
or
ret
aaa
xor
call
fidivrs
bound
outsb
mov
lods
mov
repz
lcall
adc
jp
fcomp
jmp
inc
xor
jecxz
lock
lds
add
mov
pop
mov
dec
xorl
ljmp
cmp
and
movsl
mov
lcall
lret
or
sahf
sub
jo
pusha
pop
adc
sub
rorb
sbb
inc
xchg
add
mov
push
push
aaa
cmpsb
mov
js
sbb
test
pushl
dec
hlt
outsl
mov
bound
push
imul
ljmp
loop
mov
fbld
out
add
mov
mov
ret
and
enter
into
jne
jnp
outsl
sub
loop
dec
mov
decl
adc
mov
inc
cld
push
mov
lret
sti
imul
js
fst
mov
cmpl
leave
scas
popa
inc
push
pushl
dec
add
push
in
mov
cmp
adc
mov
push
adc
pop
sub
scas
lcall
xor
xchg
fucomi
std
inc
decl
push
cmpsb
pushf
cmpl
dec
in
lea
incb
xor
ljmp
cli
call
popf
xor
xchg
push
mov
jmp
ljmp
inc
add
and
fstps
pop
add
imul
inc
shlb
mov
and
sbb
cmp
sub
iret
or
nop
inc
pushl
fmulp
insb
mov
shlb
push
clc
lahf
add
arpl
push
dec
mov
cwtl
ljmp
fcompl
imul
mov
jns
rolb
and
adc
inc
mov
decl
add
cmp
cmp
movsl
push
lock
sub
fisubl
and
gs
or
lret
dec
add
ljmp
into
cmpsb
xlat
mov
rcl
sbb
jne
or
ljmp
incb
aad
in
mov
dec
cmpsb
popf
cmp
fdivs
fimuls
adc
push
mov
sar
xchg
jg
outsl
jmp
lret
mov
popa
cmpsb
pop
xchg
call
sbb
ja
dec
aaa
pop
lahf
jmp
or
mov
mov
data16
lds
inc
push
jmp
xor
decl
xlat
dec
mulb
ljmp
xchg
int
dec
iret
pushl
jecxz
jnp
imul
xor
das
loopne
ret
sub
xor
xlat
mov
pop
in
fs
push
adc
scas
enter
xor
mov
jmp
and
fisubrs
mov
stc
cwtl
arpl
push
enter
dec
jns
aaa
leave
adc
sarl
fimuls
std
test
lahf
inc
or
loopne
xor
ret
ds
jmp
or
cmp
cltd
cmp
leave
mov
shr
repz
xor
add
mov
or
inc
xchg
adc
push
fmul
mov
push
or
fstl
int3
ja
jecxz
jns
test
add
icebp
sub
inc
pop
xchg
js
mov
inc
xchg
or
dec
mov
jge
jmp
mov
jne
test
pop
pop
decl
xchg
pop
fcompl
les
testb
dec
rcll
jmp
icebp
mov
sar
and
lds
lea
xor
jae
ljmp
lret
fmuls
xor
call
stos
les
lcall
repnz
and
and
addr16
mov
outsb
decl
cmpsl
ds
xchg
ljmp
inc
or
mov
pushl
xor
ror
add
shl
and
lahf
pop
jecxz
mov
pop
sbb
mov
xor
or
mov
in
jl
std
pop
dec
pop
xchg
jmp
mov
fwait
jbe
mov
movsb
loopne
push
in
mov
out
mov
lahf
inc
lods
adc
jle,pn
stc
pop
ljmp
jp
jae
and
cmp
pop
xor
repz
movsb
or
mov
or
dec
cmovbe
cmp
call
xchg
inc
loopne
outsl
fwait
int
nop
lret
jmp
pop
jae
jo
cmpsb
jmp
inc
mov
scas
loope
data16
jne
pushl
xchg
test
mov
push
dec
jle
mov
pushl
dec
in
cltd
inc
pop
and
cmc
ror
dec
hlt
mov
ds
mov
sub
iret
xchg
add
adc
out
aad
test
aaa
and
je
jbe
push
scas
roll
ret
ja
add
enter
fsubrs
xor
add
sub
fcmove
xchg
or
push
or
mov
sub
push
mov
sbb
pop
das
dec
clc
call
leave
movsb
sbb
mov
idivb
scas
jbe
pop
or
sqrtps
repz
ja
mov
push
jmp
cltd
sub
lcall
movsl
aam
incl
mov
cmp
int
mov
addr16
incl
fcmovne
lds
or
fnstcw
pushf
bound
test
lea
fsubs
inc
divb
ljmp
cs
cli
mov
loopne
outsb
leave
sbb
mov
adc
imul
clc
dec
add
dec
stos
lcall
jecxz
or
sub
adc
outsb
je
push
jg
call
push
jle
add
mov
cltd
fidivs
sbb
out
add
mov
sti
push
mov
inc
sub
mov
imul
sarb
mov
lods
in
adc
repz
pop
xor
jl
or
push
inc
mov
test
pop
daa
clc
sbb
pop
mov
aad
push
mov
adc
sbb
test
pop
aad
aaa
inc
aam
inc
mov
or
movsl
mov
in
stos
xchg
clc
lea
popa
fdivs
rolb
in
rol
adc
push
into
pushf
scas
rol
jmp
add
test
mov
sbb
fbld
push
ss
in
mov
or
mov
sub
push
dec
test
mov
cmp
push
andb
xchg
cli
xor
ret
push
xor
sub
sbb
std
test
cmp
cld
add
adc
xchg
aas
test
loopne
cmpsl
iret
or
and
addr16
fs
sahf
jbe
cmc
fsts
cmpsl
decl
in
and
cmp
jo
subl
mov
adc
arpl
out
jle
cmpsl
or
sarl
dec
sub
out
jl
lcall
fwait
push
ljmp
cld
bound
mov
pop
pop
lret
cmp
dec
jmp
mov
fs
sahf
shl
lret
sti
leave
popa
ficoml
and
push
scas
push
cmpsb
aas
pop
pop
jmp
stos
dec
add
ljmp
stos
xchg
arpl
daa
int3
jmp
sbb
xorb
or
inc
popa
jbe
jmp
mov
cmova
inc
rorl
cmc
out
lcall
jge
imul
add
decl
add
dec
ljmp
xchg
mov
pop
mov
ljmp
js
sbb
mov
dec
ss
and
icebp
ljmp
stos
imul
pop
test
data16
and
fwait
dec
and
cmp
incl
xchg
repz
mov
pop
stos
mov
jb
dec
mov
push
xchg
call
or
fsubp
pop
test
cmp
lret
lret
pop
mov
dec
pop
mov
inc
mov
pop
jmp
mov
rorl
into
es
std
lahf
notb
mov
imul
out
rolb
testb
and
in
push
cmp
xchg
cmp
lcall
pop
pop
shlb
jg
call
test
cld
push
std
jecxz
sahf
or
sub
jbe
xor
or
inc
movsl
jp
cwtl
sbb
and
sti
mov
inc
loopne
mov
movsb
incb
into
pushl
ja
mov
test
pop
cmp
rcl
mov
push
adc
push
lret
mov
jae
pop
push
push
adc
inc
ljmp
stc
or
jo
xchg
insl
jmp
in
xor
push
sub
xchg
lret
pop
sbb
mov
push
rcrb
and
mov
je
push
das
lcall
fs
shl
roll
ljmp
xlat
mov
mov
jmp
push
call
sbb
iret
push
decl
pop
and
out
mov
jp
or
ja
xchg
inc
ja
sub
push
lea
push
jle
lcall
das
es
dec
sbb
push
mov
scas
daa
jbe
popa
push
in
add
sub
push
loope
dec
ja
ret
loope
jnp
ds
decl
jp
daa
incl
clc
fsubrl
movsl
mov
xchg
mov
push
mov
jg
sbb
xor
or
or
pushf
inc
add
iret
arpl
je
outsl
es
or
ret
cmp
inc
ljmp
add
inc
stos
ret
enter
rorl
icebp
insl
or
incl
and
add
mov
pop
jae
adc
lock
js
xchg
pop
movsl
add
mov
inc
sti
add
call
or
push
mov
enter
insb
jnp
jae
add
call
sbb
push
jmp
test
push
sub
hlt
ficoml
mov
and
repnz
jge
mov
jmp
add
fsubrs
into
push
mov
decl
aad
mov
mov
push
mov
and
out
test
sar
imul
xchg
push
xchg
cs
sub
fsub
jle
mov
popf
push
cmp
inc
insb
into
push
mov
jo
adc
sub
rcl
cmpsl
gs
add
jmp
out
xchg
dec
and
xorb
nop
addr16
in
insb
test
pop
call
sbb
inc
mov
ret
jbe
hlt
loop
stc
aaa
invd
out
jg
jmp
mov
call
mov
orb
mull
fidivrs
lret
xchg
shrl
fdivrp
adc
scas
push
sti
mov
int
stos
int3
gs
or
dec
sub
je
cli
push
sbb
loopne
jb
jge
mov
cltd
notl
idivb
ljmp
adc
decl
ss
imul
hlt
jae
pushf
ljmp
cmc
pop
mov
es
mov
shlb
add
pop
cmp
ljmp
lock
std
cmc
rcrb
stos
dec
repz
sub
push
xlat
adc
mov
das
mov
xor
pop
imull
jmp
cwtl
mov
dec
jne
xchg
add
es
and
cmpsl
fmull
enter
inc
fsts
dec
int3
cmp
addl
inc
int3
incl
loope
jmp
hlt
cmp
lods
mov
movsl
or
pop
jmp
imul
out
sub
push
rorb
aaa
mov
add
fldenv
stos
pop
lcall
nop
data16
int
je
jne
jge
push
leave
ljmp
lcall
sbb
jae
ds
pop
and
sbb
fsub
or
xchg
jmp
scas
dec
mov
decl
xor
lcall
subl
sti
xor
aas
cmc
adc
test
mov
insl
pop
pop
fwait
cld
mov
mov
xor
xor
jmp
repnz
leave
iret
lahf
in
or
mov
rcl
add
test
jo
pop
dec
jmp
push
mov
mov
xchg
push
int3
fdivl
dec
and
fdivrs
rorb
push
fwait
jno
aaa
jmp
cwtl
aam
sub
or
mov
lods
push
pop
and
jae
int
dec
mov
dec
int3
and
cmp
xor
decl
flds
sub
mov
pop
push
insl
lret
incl
fwait
or
ds
cmp
sarb
shlb
fwait
ja
mov
inc
push
adc
xchg
test
xor
pushl
or
pop
xchg
ss
push
mov
mov
or
jns
sub
pop
rorb
jge
and
jg
out
lock
xchg
pop
push
jns
in
push
sahf
inc
stos
inc
push
les
push
mov
inc
test
and
dec
adcl
mov
stos
fwait
movsb
or
adc
and
push
call
push
jl
push
pop
das
jns
call
jae
push
sahf
sub
dec
mov
xchg
leave
push
les
mov
ja
jmp
jg
shrl
in
pop
cmc
jae
pop
sahf
fisubl
xorb
repz
shrl
clc
or
jbe
aad
mov
and
stos
iret
repz
mov
shll
jnp
or
and
ljmp
mov
ret
out
outsb
jge
icebp
mov
std
decl
sub
inc
mov
jmp
add
xchg
stos
ljmp
mov
into
stc
insl
call
in
data16
adc
mov
loopne
imul
or
xchg
aaa
sbb
enter
insb
pop
data16
fidivrl
cmp
sbb
inc
mov
xor
pinsrw
mov
mov
inc
add
test
pushf
lcall
lods
js
add
cld
scas
inc
xlat
into
mov
lds
push
sub
mov
inc
xor
jge
sbb
cmpsb
incl
bound
imul
add
pushf
cs
clc
pop
pop
inc
jbe
shl
in
pop
fcos
dec
fmull
mov
nop
mov
and
adc
orl
and
mov
xchg
push
fs
clc
in
sub
mov
sbb
popa
adc
adc
or
mov
outsl
call
mov
popw
sub
and
mov
sar
lcall
mov
pusha
or
gs
jae
pop
cmpsl
and
or
out
jmp
push
push
or
idivb
add
lahf
inc
mull
mov
lret
iret
mov
gs
nop
ss
mov
in
or
jno
add
add
pop
outsl
mov
lea
cmp
jp
cli
insl
into
shll
fdiv
adc
cmp
push
mov
adc
mov
sub
fwait
outsb
in
pop
xchg
decl
push
dec
into
sahf
les
mov
roll
push
loope
es
and
xor
lock
sub
lods
xchg
sbb
jge
jne
das
cmp
sub
shll
inc
push
mov
jmp
adc
lods
test
or
or
ret
mov
std
push
lea
or
mov
shrl
jp
mov
mov
dec
rcrb
into
call
or
dec
cli
pop
aas
jmp
icebp
in
out
lcall
or
jae
sbbl
in
xor
fsubs
lods
cld
jns
mov
fwait
mov
pop
outsb
jns
mov
repz
sub
fbstp
or
test
imul
sub
and
pop
test
inc
repnz
ret
lahf
rcr
mov
pop
mov
inc
pushl
xor
cli
xor
enter
pop
mov
push
cmp
out
push
pop
push
push
lcall
push
jbe
push
js
leave
pop
mov
xor
enter
pop
scas
push
fdivrs
bound
jmp
mov
mov
xor
mov
jns
push
out
jl
sarb
ja
jno
push
inc
daa
push
jne
mov
sub
lods
int
pop
mov
inc
insl
mull
mov
ds
cld
jnp
push
or
sbb
adc
fldt
scas
lahf
in
loope
cwtl
add
arpl
shlb
sub
bound
push
inc
inc
jg
in
sar
pop
aad
hlt
in
jae
test
mov
adc
push
sar
jg
push
fdivr
push
and
rolb
iret
mov
jmp
xchg
sbb
push
pop
imul
out
sub
cmpsl
lcall
sbb
loope
subb
push
or
mov
test
jo
jl
sub
cs
dec
loopne
popa
xchg
jnp
sbb
and
leave
add
incl
ja
ret
xor
push
dec
add
xchg
in
cmp
mov
shlb
or
mov
mov
mov
push
pop
xor
fistpl
roll
xchg
sub
jbe
lods
incl
fmull
sbb
push
fsubrp
cmpb
xchg
test
lcall
inc
mov
mov
mov
dec
insl
imul
mov
mov
jb
adc
xor
sub
out
mov
inc
or
cmpsb
call
lods
xlat
sub
mov
fcmovnbe
mov
insb
aas
or
inc
imul
ds
xchg
or
jecxz
jno
testl
mov
mov
imul
jns
outsb
loopne
jl
add
adc
out
add
push
mov
sbb
hlt
lods
into
daa
repz
mov
shll
dec
sti
popf
jg
inc
jno
dec
inc
aad
push
push
decl
lock
imul
shll
inc
fcoml
mov
sub
into
popa
lret
xor
push
mov
add
decl
pop
pop
shrl
scas
adc
mov
xchg
xor
mov
dec
dec
lods
addr16
xchg
hlt
call
sbb
add
jmp
mov
movzbl
cwtl
das
mov
jmp
lret
and
xor
lcall
xchg
stc
gs
pushl
aad
int3
jecxz
into
incl
jnp
mov
sub
lea
xor
add
cltd
imul
add
loope
fs
aam
std
lahf
mov
and
dec
or
mov
push
xchg
or
out
decl
arpl
xor
jno
incl
sbb
ljmp
sbb
mov
les
mov
movb
xchg
bound
mov
mov
pop
inc
pop
outsl
or
sub
imul
ljmp
popf
push
cmc
lret
xor
test
xchg
lahf
ss
jb
dec
fmull
or
xchg
stc
pop
sbb
clc
cmc
mov
popa
addb
sub
inc
jo
das
jmp
cli
test
int
adc
jmp
dec
mov
xchg
mov
jns
push
das
push
jmp
and
in
xor
incl
pushf
sbb
pushl
xor
js
scas
sbb
inc
add
decl
sbb
jmp
icebp
inc
sbb
lcall
nop
clc
pop
inc
insl
mov
int
and
and
call
add
fdivs
mov
cld
popl
xchg
lcall
lcall
fwait
mov
pop
ljmp
fcmovnbe
dec
dec
mov
enter
dec
stos
or
out
mov
lret
mov
std
pop
call
fbstp
adc
movsl
cmpsl
xor
ss
xorb
sahf
push
xchg
lahf
xchg
incl
mov
movsb
shl
xchg
test
or
sub
in
lret
dec
in
cli
dec
std
lods
lcall
xchg
out
pop
mov
xor
or
add
shr
sti
push
pop
push
call
fwait
aaa
adc
loope
ja
fldl
or
jo
sub
loopne
dec
pop
orl
adc
lret
cmp
std
pushf
jecxz
xor
jae
jmp
mov
sti
mov
orb
mov
popf
jns
mov
decl
lods
repnz
lea
push
sti
in
push
jo
test
rclb
add
call
lret
hlt
mov
add
sbbl
mov
lock
mov
cmovae
aad
dec
stc
aaa
hlt
cmp
mov
incl
rcll
lds
and
ffreep
sbb
xchg
mov
or
call
push
in
inc
ljmp
sahf
sub
dec
jp
decl
out
pop
scas
mov
sbb
jns
loopne
pop
sub
outsb
das
lret
dec
iret
jbe
fldl
test
subl
stc
pop
push
leave
jge
push
decl
push
or
xchg
inc
clc
in
mov
add
call
cltd
mov
push
inc
mov
lea
repz
or
jp
int
incl
shrb
addr16
sbb
adc
stc
lea
jge
and
cmp
aad
sarl
push
adc
call
outsl
mov
in
outsb
xor
sbb
sub
pushl
mov
mov
sub
mov
in
aas
insl
adc
adcl
fisubs
popl
jnp
pop
rorl
lock
insb
xchg
and
add
nopl
pushl
ds
sub
xlat
mov
xlat
xor
add
bound
xchg
adc
cmp
jns
or
and
outsl
call
pusha
out
pop
mov
add
sti
scas
or
lcall
push
pop
push
push
je
stos
cmc
daa
fdivl
xchg
mov
push
cmpsb
pushl
dec
shll
nop
icebp
int3
out
cs
sub
inc
inc
lds
rcrb
adc
clc
or
jl
stos
iret
xor
mov
loop
push
incl
sbb
dec
idivb
stos
rcl
or
xor
push
dec
lods
xor
repz
or
bound
iret
sbb
mov
mov
xorl
mov
sub
mov
lea
and
xor
xor
test
mov
arpl
inc
jns
mov
adc
pop
lods
movsl
ljmp
sub
rcrb
xor
lcall
add
cmp
shlb
fs
mov
idivl
test
and
pushf
out
nop
and
fimuls
or
je
iret
pop
adc
leave
sub
xor
ror
sbb
fisubs
dec
stc
sbb
cmc
cmpsl
decl
inc
lods
jo
bound
fisttpll
mov
push
cmp
or
in
adc
add
sahf
jbe
decl
mov
push
shrb
and
nop
aas
fdivs
dec
lock
xlat
xchg
in
loopne
imul
cmp
andb
jae
inc
ljmp
sti
lea
lods
incl
test
mov
clc
pop
decl
lcall
inc
jle
hlt
pop
addr16
add
lahf
mov
mov
js
cs
or
pop
fcos
sub
scas
dec
mov
nop
into
es
fwait
cltd
push
lcall
lret
shlb
adc
jae
and
push
les
lcall
cld
mov
push
lds
or
stos
rorb
dec
dec
push
dec
sbb
adc
test
imul
lret
cmp
sbbl
push
mov
gs
xor
push
push
pop
es
repnz
jmp
lahf
mov
adc
pop
mov
cmp
add
or
sbb
shll
push
cmp
xchg
shlb
and
rcrl
adc
or
mov
aam
jo
or
stos
lds
les
ljmp
sbb
call
in
stc
inc
sbb
mov
filds
jne
sub
adc
rclb
sarl
or
rcll
sarb
out
cmp
push
add
xchg
icebp
testl
xchg
rclb
mov
push
movsb
rcr
mov
inc
jmp
inc
dec
dec
rcrb
into
adc
stos
out
sub
jmp
inc
sub
and
adc
cmpsb
ljmp
fistps
xchg
push
mov
pop
mov
mov
decl
dec
fcomps
cli
out
xor
or
mov
iret
mov
xorl
mov
das
push
mov
and
fstpl
sub
cmc
out
mov
stos
ror
repnz
fsts
stc
push
pop
cmpsl
jb
nop
in
inc
push
pop
loopne
repz
fnstsw
enter
pop
movsl
inc
dec
push
mov
push
fisttpl
addr16
sub
or
mov
jg
iret
into
test
outsl
pop
mov
lea
dec
and
loopne
pop
xor
pushl
fldl
movl
ret
mov
clc
sub
outsl
jle
add
cmp
add
ja
cmpsb
xor
push
stos
incl
repnz
dec
rcll
xchg
pop
push
push
cmp
in
cmp
cli
jne
or
mov
xor
or
adc
xor
pusha
or
idivl
shl
mov
incl
xchg
jecxz
das
or
std
inc
cli
jnp
push
mov
or
mov
in
add
xlat
imul
jg
ljmp
sbb
aad
adc
push
lods
add
call
imul
add
xchg
cs
push
aad
std
sti
mov
popf
mov
pushf
xchg
push
mov
clc
push
cld
dec
xchg
pop
or
add
mov
outsb
mov
icebp
pop
pushl
jmp
movsl
jmp
cmp
je
dec
jne
mov
mov
negb
cwtl
and
inc
mov
mov
popa
fcmovnbe
sub
sbb
int
aaa
sti
orl
jnp
out
mov
xor
xchg
loopne
add
jg
insl
nop
cltd
and
stos
decl
fs
and
xor
xchg
dec
ss
shr
test
adc
sub
mov
xchg
pop
arpl
sbb
cmp
mov
jmp
pop
mov
push
adc
stos
bound
rcll
cmp
out
dec
or
mov
mov
dec
sub
dec
shlb
inc
imul
sub
push
aas
rcrb
inc
lock
push
call
mov
fadds
stc
cmp
mov
mov
xor
jmp
and
sti
je
pop
lods
daa
fbstp
pop
pop
arpl
jge
mov
mov
fiaddl
mov
imul
stos
mov
sub
mov
pop
sbb
js
lcall
sbb
jecxz
dec
and
jmp
icebp
negb
cmp
movsb
inc
loopne
ljmp
jae
adc
mov
jle
dec
add
lret
fdiv
adc
pop
xchg
push
ficompl
sub
mov
or
xor
dec
test
jb
out
push
and
fistl
inc
pop
lret
nop
xor
pop
adc
and
inc
adc
lret
add
xor
push
insl
mov
lahf
pop
push
int
mov
pop
cs
test
xchg
xchg
pop
sbb
ja
cvtps2pi
xchg
cltd
xchg
cld
mov
jae
mov
jg
add
rcrb
daa
fdivrl
aaa
cmc
xchg
push
aam
call
lret
pushl
xor
aad
jp,pt
jmp
and
xlat
fildll
outsl
rep
mov
dec
fidivl
int3
das
shrl
not
xor
push
sarb
sbb
cmp
decl
or
xlat
lret
mov
push
lcall
adc
into
lods
movl
subl
mov
sub
mov
orb
mov
pop
push
inc
mov
or
test
cli
pop
lcall
mov
loope
rclb
js
movl
call
outsb
fisttps
enter
jl
sub
pushl
cmpsb
roll
xor
dec
sub
ljmp
test
das
pop
call
xchg
test
inc
mov
ds
cld
push
fidivrs
add
add
js
pushl
mov
xchg
lret
ret
pushl
and
inc
add
ljmp
push
loope
dec
dec
bound
jae
in
fcos
jecxz
aad
push
movsl
adc
jb
mov
int
aas
js
xchg
add
andb
fildl
pop
inc
or
pop
xor
iret
movnti
outsl
dec
pop
into
lds
push
ret
dec
sub
ljmp
adc
xchg
cmp
dec
adc
rorb
push
fcomps
cmp
pusha
fnstenv
cmp
movsb
lea
stos
out
mov
testb
adc
lcall
mov
push
or
lret
stos
enter
insb
in
lcall
jle
pop
sti
sbb
push
call
lret
xlat
jg
roll
cwtl
les
imul
fistpll
mov
xchg
and
std
test
ljmp
sbb
clc
inc
popa
scas
mov
leave
xchg
push
dec
fmuls
int3
jae
jl
pop
sbb
test
test
aad
icebp
nop
push
clc
mov
int3
mov
imul
test
std
inc
fdivl
fstl
clc
leave
shrb
popf
add
mov
add
cli
mov
call
or
adc
lods
xchg
mov
inc
push
shlb
mov
sbb
cmp
pop
pop
loop
not
mov
in
mov
mov
data16
xor
and
cmp
lahf
rcl
mov
stc
idivl
mov
int
into
or
jnp
cmp
dec
pusha
xor
aas
out
rcl
rcl
mov
mov
mov
fs
dec
mov
xor
stos
adc
mov
pop
std
and
push
sbb
pushl
jnp
decl
xlat
sub
in
out
pushl
push
xlat
add
xchg
and
cmpsl
repnz
pop
sub
mov
mov
mov
mov
outsb
cmc
in
aaa
out
addl
pop
ds
dec
mov
mov
ljmp
loopne
xchg
bound
dec
aas
movsl
testl
add
ljmp
xchg
nop
pop
dec
int3
ljmp
ss
xchg
push
testb
fwait
loopne
inc
rcrb
icebp
pop
sti
out
decl
or
jle
jnp
call
cmp
pop
xchg
pushl
mov
cs
pop
mov
cmp
dec
test
mov
or
sbb
repnz
call
jmp
push
and
ficompl
lock
cli
pop
fsubl
fdivs
inc
mov
outsl
dec
sbb
cltd
adc
pushl
cmp
mov
mov
call
lahf
je
jg
dec
sub
jnp
xor
pop
cmp
or
dec
xchg
adc
sub
sub
pop
hlt
clc
push
sub
sub
pop
adc
test
push
sub
les
lahf
add
mov
jne
inc
in
mov
dec
pop
xlat
int
shlb
add
std
into
cmp
inc
xchg
jb
mov
xchg
or
pop
shrb
or
push
add
lcall
aam
inc
ljmp
lods
ret
pop
les
dec
jp
pop
pop
mov
push
fsubs
add
jnp
fsubrl
add
movsb
cmpsb
std
outsb
pushl
mov
jecxz
cmc
sub
cmp
mov
rolb
jmp
lcall
jle
push
push
push
je
fidivs
out
or
xchg
icebp
mov
inc
sbb
loope
dec
loop
or
adc
outsb
push
pusha
and
mov
incl
sbb
and
clc
incl
pushf
hlt
push
xor
lcall
jo
popa
inc
movsb
call
pop
xchg
sub
and
mov
jae
fbld
ret
add
icebp
shll
es
push
jle
or
addl
std
adc
out
add
inc
or
jge
adc
push
mov
xor
cld
das
outsl
pop
loopne
dec
push
push
fst
fwait
sti
cmc
movsl
call
addr16
leave
xchg
lods
mov
push
adc
cmp
push
mov
enter
mov
xor
aaa
out
mov
push
lahf
xlat
jo
and
sub
fdivl
jmp
xor
and
mov
sar
xor
xchg
pop
xor
incl
loopne
divb
repnz
lcall
or
outsb
fidivrs
mov
clc
std
sub
cmp
mov
mov
xor
rcrb
jbe
add
into
stos
mov
inc
dec
adc
xchg
pop
cmp
loop
adc
xchg
cmp
call
push
sub
int3
mov
pop
sar
sbb
in
mov
sbb
pop
add
push
loop
mov
cwtl
xchg
jns
mov
imul
addb
pop
and
or
out
lret
call
insl
scas
scas
inc
sub
ljmp
hlt
mov
data16
sbb
cli
jo
aad
sub
push
into
mov
je
shll
xor
popl
lret
insl
jle,pn
std
inc
push
sub
mov
sub
mov
mov
mov
jb
div
or
call
or
mov
iret
add
push
add
mov
jg
mov
sbb
xchg
lcall
dec
stc
pop
mov
or
incl
xor
mov
xor
add
push
mov
adc
xor
sar
push
mov
mov
int
movsb
xchg
adc
into
inc
jnp
push
pop
sti
inc
adc
pop
xor
push
loopne
scas
xor
or
or
incl
fcomps
jbe
lcall
ss
dec
sbb
fdivs
or
das
arpl
call
jno
inc
push
sbb
adc
mov
in
sbb
push
inc
call
out
pop
dec
pushf
adc
bound
or
jg
cmp
pop
gs
push
ret
mov
push
dec
addb
and
nop
mov
sti
adc
xchg
xor
push
sub
ljmp
add
lea
icebp
jp
push
rorl
test
and
stc
mov
mov
cmp
jle
call
fildl
push
das
inc
cmpsl
lcall
hlt
adc
cmp
or
adc
sbb
std
fmull
rcrl
sub
js
cs
sbb
out
sbb
xor
inc
mov
int
add
pop
pop
out
lret
add
or
jmp
mov
adc
jecxz
fdivs
pop
push
mov
mov
mov
mov
imul
mov
cmp
xor
dec
incl
and
lret
pop
sahf
xchg
pop
fdivrp
sbb
mov
mov
hlt
xor
iret
add
add
sbb
inc
push
lahf
sub
mov
pop
sub
pop
test
adc
test
xor
test
jg
jmp
std
sbb
add
jns
jnp
jb
jg
add
push
fcompl
adc
aam
imul
lods
mov
test
pop
mov
stc
jp
mov
and
xchg
sub
jecxz
ja
push
adc
lds
or
fs
dec
lcall
inc
pop
adc
or
test
decb
lock
lret
sbb
outsb
xor
push
jo
xchg
in
jl
adc
jmp
pusha
or
inc
rcll
roll
mov
jle
rclb
inc
outsl
lds
ror
iret
xchg
add
ja
inc
incl
pop
push
cmp
outsb
dec
xchg
pop
mov
sbb
test
adc
popl
mov
ret
jp
pop
push
fs
lock
sub
sbb
out
fnstcw
or
push
outsb
push
cli
arpl
xchg
mov
das
out
mov
std
mov
xchg
lock
insl
scas
jge
mov
push
incl
imul
push
rcll
mov
in
cltd
push
mov
mov
fstpt
mov
push
jno
arpl
stos
cmp
aaa
sub
fcmovne
jecxz
call
adc
pushf
imulb
ret
iret
add
jl
stc
fucomi
lea
mov
add
loopne
repz
test
ret
ja
mov
fstl
sub
and
push
cmp
adc
sbb
pop
jnp
stos
mov
xchg
and
cmp
mov
sarb
ja
adc
call
jns
mov
mov
mov
call
icebp
ds
cmp
jmp
mull
lds
mov
mov
test
stos
fimull
inc
cmpsl
inc
mul
fistl
lcall
add
and
scas
adc
mov
lock
push
push
jns
repz
gs
daa
add
push
inc
ljmp
mov
mov
cmpsb
mov
dec
rcll
jmp
push
out
jne
inc
add
pushf
cmp
mov
in
lahf
dec
clc
mov
pushl
mov
and
push
mov
jge
adc
dec
roll
fildl
call
pop
push
addr16
in
test
xlat
cli
sbb
into
test
push
inc
add
fwait
daa
lcall
stos
pop
imul
dec
adc
and
into
jmp
mov
sub
dec
stc
dec
in
sbb
lods
int
clc
andl
or
push
xor
stos
nop
pusha
loopne
sub
enter
mov
shl
push
fs
cmp
mov
ss
pop
push
out
jae
fmuls
mov
ljmp
mov
push
aaa
arpl
pushl
xchg
jge
sbb
inc
adc
fsubp
int
add
cmpsl
mov
das
rorb
mov
shll
cmp
into
mov
lahf
mov
notl
jl
stc
int
mov
popa
jmp
sar
es
push
paddusb
test
rorb
jle
ljmp
inc
andb
jp
pop
sbb
pop
inc
push
outsb
jmp
loop
scas
sti
decl
or
pop
add
sar
mov
inc
mul
rolb
fcmovu
mov
mov
mov
pop
inc
fst
js
dec
mov
jno
push
and
icebp
add
jns
vpavgw
cwtl
mov
dec
call
push
mov
and
fsubs
mov
popa
mov
pop
cltd
xchg
mov
xor
imulb
inc
push
out
movsb
pusha
scas
add
or
add
test
ret
lret
int
jno
pop
les
in
and
push
mov
xor
and
xlat
test
pushl
movb
std
push
mov
pop
and
sbb
pop
into
pushl
xchg
imul
cmp
adc
test
xchg
inc
jg
les
push
xchg
or
pop
std
rcrb
mov
ljmp
add
or
pushl
aad
jge
test
mov
fcmovbe
inc
jp
add
scas
in
and
sbb
mov
movsb
push
gs
xrelease
aad
push
mov
pushl
xchg
pop
std
sub
mov
cmp
shll
call
lret
sar
dec
es
jo
xchg
push
adc
or
daa
stos
aad
jmp
or
mov
sbb
or
sbb
mul
lds
xchg
test
mov
jno
push
add
push
xchg
test
push
and
push
mov
pushl
fildll
fisttpl
mov
out
vmread
inc
popf
cmp
cld
in
dec
call
mov
mov
movsb
or
xor
dec
divl
push
jl
sti
mov
push
je
sbb
mov
push
cmc
pop
xor
dec
imul
push
rclb
imul
xor
mov
in
jns
push
add
mov
stos
ljmp
jb
push
incl
sbb
xchg
inc
aaa
pand
or
dec
scas
rcrb
idivw
lea
pushl
in
jb
and
sar
xor
mov
xchg
or
xchg
out
iret
ret
mov
outsb
xchg
add
and
or
sarb
jp
mov
pop
push
decl
mov
dec
stos
mov
fsubrl
sbb
dec
pushf
adc
pusha
cmp
pop
push
push
call
add
push
into
das
enter
insb
mov
jle
cli
and
int
mov
daa
xlat
sbb
sets
push
rol
mov
xchg
mov
jae
movsb
test
int
incl
push
adc
out
or
clc
add
out
es
pop
stc
jmp
push
xchg
mov
daa
out
decl
aad
loope
inc
push
sbb
cmpsb
nop
mov
rorl
sahf
jmp
stc
ja
shll
sub
jge
mov
fstpl
inc
aam
mov
and
repnz
sbb
js
cmpsb
mov
add
adc
out
pushl
mov
subl
jmp
test
inc
insb
push
sbb
and
dec
mov
psrad
add
shrl
mov
and
repz
or
fidivs
sub
test
pop
test
push
or
gs
jbe
jnp
pop
mov
sub
insb
xor
add
or
cmp
add
cltd
cwtl
jp
sar
sub
fs
stos
test
jae
lea
shrb
out
repz
or
movsb
adc
mov
cmpsl
mul
mov
mov
xchg
push
jno
xor
sbb
mov
lret
cli
lock
sti
cmpsl
xchg
adcb
bound
sub
cwtl
aaa
sarl
pop
enter
or
add
inc
sahf
rclb
pop
popa
pushl
sbb
jnp
mov
aas
mov
dec
pushl
lock
insl
ds
inc
mov
sbb
pusha
dec
mov
and
inc
dec
cmpsb
add
sbbl
sti
incl
pop
mov
test
xchg
pop
fimull
jge
movsb
loope
adc
inc
int
push
mov
out
jno
jl
mov
mov
adc
lahf
sbb
js
in
cld
sbb
sar
jmp
test
lcall
leave
pop
ss
into
or
in
or
and
fisttpll
mov
pop
outsb
cld
mov
out
xchg
mov
jnp
insl
cmp
adc
jmp
hlt
int
or
and
mov
and
add
mov
xchg
inc
or
xor
xchg
repnz
mov
inc
jo
mov
pop
push
decl
add
in
call
rcll
mov
sahf
sub
rcrl
push
xchg
push
in
stos
incl
aam
and
pop
mov
cmc
cmp
pop
ds
pop
int3
mov
xor
imul
mov
repz
pop
nop
mov
fldln2
push
jmp
xchg
sub
call
cmp
mov
mov
cmpsb
fwait
jle
jne
lret
in
push
and
test
jo
or
adc
loop
inc
jmp
das
loope
sub
inc
pop
xlat
rclb
imul
push
push
stc
dec
and
sbb
adc
rorb
js
cmp
mov
pop
xor
mov
and
pop
inc
inc
popf
rcrb
xchg
add
push
loop
mov
inc
sbb
adc
dec
or
adc
decl
fsubrs
decl
lods
mov
xchg
sbb
or
push
data16
jl
or
das
repz
xor
andl
push
sbb
scas
dec
and
push
mov
divb
decl
xchg
test
pop
push
aas
add
cld
movsl
xchg
pushl
mov
xor
dec
lea
sbb
decl
sub
jne
xchg
int
dec
dec
pushf
sub
iret
lret
ret
outsl
lds
push
cmp
fbld
dec
enter
mov
sbb
incl
imulb
insl
mov
leave
xor
jmp
mov
daa
sbb
out
lcall
cmp
testb
add
xlat
lock
call
insb
daa
enter
xchg
jns
push
aaa
adc
cmp
sahf
and
push
decl
mov
test
add
scas
test
sbb
sahf
call
syscall
xchg
imull
cltd
enter
inc
stos
mov
imul
jns
es
push
and
or
push
add
fisubrs
rcrl
mov
es
popa
pushf
daa
mov
adc
aad
jge
jnp
push
call
shr
cmp
imul
push
std
sub
call
filds
fadds
in
mov
jb
aas
mov
popf
or
xchg
aaa
xchg
push
jle
cmp
adc
jbe
or
mov
xchg
xchg
lcall
out
insb
pushl
nop
mov
xchg
pop
rcrb
mov
and
lahf
jmp
punpckhdq
ljmp
rol
gs
out
incl
and
push
in
sar
or
loop
xchg
dec
pop
int
pop
fisubl
das
add
push
ljmp
pop
fnsave
xor
xor
loopne
dec
jmp
and
addr16
add
mov
push
jbe
sbb
adc
ss
repz
popa
jae
push
decl
sub
lcall
repnz
rolb
add
mov
mov
pop
cli
push
xchg
hlt
fisttps
push
bound
pop
pop
pop
xchg
mov
shll
idivl
dec
loope
mov
push
movsl
pushf
mov
aam
push
es
pop
stos
mov
imul
pop
xchg
xchg
and
lret
stos
mulb
push
out
sbb
jmp
pop
popa
iret
inc
sub
cwtl
sti
push
lret
call
lods
mov
mov
pop
mov
fwait
jge
mov
sarb
inc
mov
dec
fisubrl
xor
dec
mov
push
cmc
pushf
pop
jns
cltd
js
mov
push
mov
jae
xlat
push
icebp
fisttps
mov
lds
ret
sub
lcall
mov
sub
rorb
or
fsubs
scas
cld
or
pushl
mov
pop
pop
lods
xchg
incl
dec
dec
pop
aas
sub
adc
je
or
push
std
pop
ret
lret
jbe
fstps
xchg
movsb
mov
loop
xlat
xor
sbb
add
inc
and
lahf
jae
mov
pop
leave
stc
pop
test
stos
pop
dec
cltd
xor
imul
pop
jae
std
cmp
bound
jg
push
xor
inc
jg
xchg
pop
push
decl
rol
lcall
fmull
out
xchg
lods
dec
out
pushl
pop
sahf
icebp
decl
jp
sub
shl
cmp
incb
mov
movsb
mov
jnp
mov
cltd
notl
fcmovne
jne
xor
fsubrs
or
sar
mov
ljmp
lret
fstl
sti
imul
adc
jmp
loope
or
loopne
idiv
sbb
es
sbb
push
xlat
mov
decl
sbb
mov
jg
pop
gs
out
iret
test
mov
mov
add
xchg
es
mov
int
or
push
fisttps
cltd
sahf
in
rcrb
rcrl
push
cmc
xchg
lahf
adcl
ret
or
or
sbb
add
stos
xchg
push
fdivr
outsb
mov
or
loope
lret
jl
lahf
enter
mov
mov
cmc
pop
adc
rclb
sub
lods
push
mov
and
adc
ds
cmp
movl
movsl
jb
mov
xor
xchg
shlb
dec
rcrb
xor
out
fistpl
push
jae
rdtsc
out
pushf
add
das
dec
push
outsl
fwait
lds
pop
adc
fnstenv
orl
paddsw
jmp
pop
outsb
data16
jb
lcall
icebp
sub
aas
jnp
fldln2
push
adc
decl
xor
aaa
mov
add
add
das
adc
sub
repz
jmp
adc
lcall
mov
ret
lcall
sbb
not
mov
mov
jmp
out
pop
inc
and
ret
incl
in
mov
ror
sub
push
sahf
sbb
je
daa
call
jg
mov
cltd
lahf
mov
push
or
inc
insl
jmp
imul
jecxz
push
cs
in
cmp
mov
jmp
mov
or
ja
push
push
mov
sbb
adc
call
cmp
add
xlat
imul
cmp
dec
in
dec
addr16
mov
adc
dec
jae
xor
loop
jb
maskmovq
divl
adc
mov
fdivr
call
mov
push
and
xchg
int
ljmp
jae
pusha
xchg
jp
lea
iret
dec
push
gs
sub
sub
popf
pushl
int
add
inc
imul
add
push
rol
xlat
rolb
int
ret
jbe
sarb
repz
div
mov
nop
imul
cmovno
cmp
lret
hlt
sbb
cmp
js
lea
inc
cli
mov
push
out
push
dec
mov
bound
ljmp
out
pop
data16
cmp
call
sub
xor
sub
movsb
rolb
ljmp
popa
jae
in
xchg
es
jge
aas
test
fmull
shl
lock
out
add
and
sti
xor
pusha
rcll
fwait
sub
inc
add
aad
dec
daa
lcall
insb
sub
push
push
push
jge
jno
pop
mov
and
fidivl
shl
pop
xchg
push
ds
add
mov
pop
push
lahf
js
xchg
pop
push
mov
xor
inc
sub
ret
xor
icebp
cmp
adc
out
imulb
jae
jno
pushf
and
dec
xchg
or
lret
cmp
xor
insb
cld
pop
lcall
mov
aas
push
jl
outsb
ja
sub
fs
dec
ret
push
call
adc
xlat
test
aam
lret
ljmp
mov
mov
and
jg
push
repnz
sbb
ljmp
xchg
pop
mov
test
add
xor
jecxz
stc
in
out
add
cmpsl
ret
notl
mov
out
pop
push
enter
test
push
push
push
xor
aam
loopne
pop
or
or
lcall
jl
jo
aam
call
mov
lcall
cld
jae
xor
popa
repz
aaa
leave
mov
jle
inc
push
sub
pop
sub
mov
ljmp
rorb
and
fwait
dec
decl
lret
rcll
aad
cmc
jo
movsb
pop
adc
neg
in
inc
add
aam
push
or
cwtl
dec
xchg
pop
xchg
add
push
mov
push
push
imul
sbb
sarl
pop
rorb
xchg
hlt
aaa
jne
int
mov
mov
out
xchg
idiv
daa
and
leave
decl
enter
imul
mov
or
mov
sbbl
mov
dec
int
out
rcpps
cmp
pop
jle
xchg
in
call
mov
jnp
push
sbb
fiadds
lods
jmp
inc
icebp
decl
jle
call
leave
orb
movsb
ja
ljmp
dec
test
incl
push
or
movsl
shrl
mov
push
clc
xchg
push
jb
jns
sbb
xor
addl
or
push
mov
pop
ljmp
les
cmc
or
and
pushw
pop
pusha
or
ljmp
xchg
dec
jne
or
sub
ffree
rorl
popf
iret
idivl
mov
lcall
jg
and
roll
insl
and
in
sbbl
int3
adc
incl
fsubr
sub
mov
fs
popf
test
ljmp
pop
jle
adc
add
call
mov
jl
roll
aaa
lcall
adc
dec
dec
insb
jns
mov
add
and
mul
pop
push
xlat
add
add
scas
add
push
ljmp
mov
adc
daa
mov
mov
aad
ss
push
cmp
cmp
into
imul
mov
or
in
inc
ss
aad
sbb
push
adc
mov
shrb
out
std
mov
cmc
add
dec
dec
pop
icebp
shll
push
lahf
incb
or
xchg
sbb
faddp
nop
jp
add
test
lahf
cmp
dec
loope
cld
cmp
outsl
cwtl
mov
stos
stos
call
into
mov
mov
lods
pusha
sbbb
hlt
and
dec
pushl
inc
dec
mov
inc
stc
mov
cmp
dec
gs
jmp
adc
adc
jl
and
push
loopne
jmp
incl
aas
mov
jo
arpl
out
add
cmp
mov
out
adc
inc
pop
cmpsl
dec
pop
mov
scas
xchg
mov
nop
cmp
inc
shll
or
jno
ljmp
sbb
stos
push
cmp
movsb
fdivr
pop
dec
sar
xor
icebp
nop
rclb
into
mov
pushf
jb
cmp
jge
in
das
pop
popl
and
push
ss
or
sarl
popa
jecxz
sub
jo
sti
aas
jmp
xor
ljmp
dec
leave
lock
xchg
xchg
adc
mov
out
std
mov
stos
repnz
lret
rolb
das
in
sti
sbb
imull
mov
pop
pop
jl
adc
jge
lock
adc
mov
pushl
ficompl
push
pop
ja
mov
pushl
roll
jmp
pop
enter
lcall
icebp
xchg
mov
lds
and
and
jae
or
and
loopne
cmpsl
dec
lods
in
fmuls
incl
xchg
mov
jg
pop
and
gs
movsl
mov
dec
out
ret
pop
or
call
xchg
sti
lret
aas
outsb
push
test
jb
mov
filds
pushl
pusha
out
mov
cmp
lock
dec
mov
jge
call
pop
notb
decl
std
shl
xchg
or
data16
loope
ficompl
xorl
pop
inc
lcall
mov
lcall
lock
mov
add
jp
push
enter
mov
xorl
fsubs
loop
cmp
push
mov
ljmp
decb
cmp
rclb
jl
in
in
mov
adc
mov
orps
iret
jb
jo
push
daa
mov
sbb
hlt
loope
imul
pop
mov
jecxz
mov
push
xchg
or
sbb
scas
jns
aas
repz
dec
inc
call
hlt
cmpsb
pusha
or
mov
sti
mov
xchg
xchg
jmp
fistps
pusha
lcall
ret
push
push
decl
aad
mov
ljmp
jmp
das
rdtsc
sub
ud2
mov
cmpsl
xchg
mov
in
mov
adc
iret
jl
inc
test
dec
or
sbb
in
mov
leave
fmull
add
push
push
std
and
paddb
in
clc
mov
mov
xchg
pop
jmp
ljmp
add
sbb
pop
sub
int
pop
iret
xlat
xchg
call
outsl
addr16
lea
mov
and
xor
xor
or
ret
ja
pop
xchg
pop
pop
outsb
lcall
xlat
lds
incl
jecxz
jmp
sub
push
test
sbb
subl
add
notl
mov
call
pop
data16
cmp
enter
push
insb
icebp
iret
jle
sub
inc
sbb
imul
xlat
stos
lret
jecxz
xor
ficompl
call
jns
pop
cmp
cmp
push
out
push
sbb
pushf
mov
mov
into
fimull
iret
dec
je
jmp
push
inc
dec
in
or
adc
mov
cmpsb
adc
xadd
mov
cmpsl
sbb
mov
xor
in
add
add
popf
or
mov
adc
xchg
stos
sbb
or
dec
movsl
es
push
or
nop
sahf
dec
push
xchg
stc
or
xchg
inc
addr16
incb
sbb
ljmp
pushl
jecxz
jo
popl
mov
shrl
dec
and
jno
xor
push
mov
pushf
or
stc
pop
iret
or
int
test
gs
lret
jnp
sbb
fdivr
xor
loopne
mov
enter
sbb
rol
xchg
andb
jbe
lcall
ss
push
push
lret
aam
add
inc
pop
adc
lcall
loop
test
stos
or
ljmp
fidivrs
std
pop
jmp
clc
pop
push
shll
mov
mov
lcall
in
or
cwtl
jg
popl
icebp
sahf
push
std
pop
mov
dec
mov
mov
xor
popf
fmull
xor
jnp
pop
decl
mov
jmp
aam
mov
in
addb
clc
ret
and
aaa
mov
scas
add
lods
cs
cwtl
mov
push
mov
inc
cmpsl
adc
out
flds
fists
xchg
test
data16
mov
das
js
mov
daa
add
or
push
cli
xchg
dec
adc
pop
jecxz
icebp
incl
dec
lds
push
inc
out
cmp
mov
and
enter
jg
fdiv
stos
sbb
push
leave
in
mov
pop
ja
mov
add
popa
xor
sub
js
insb
out
or
or
mov
xchg
lret
xchg
push
fldcw
cmp
inc
adc
mov
out
fptan
adc
mov
data16
pop
add
pop
add
test
sub
lret
xor
js
in
or
sub
sub
into
mov
jg
out
push
andl
lret
daa
aaa
mov
pushl
or
mov
lea
pop
xor
lcall
and
cmp
mov
or
inc
ljmp
movsb
push
mov
inc
out
xchg
cmc
push
sar
inc
jne
into
jge
decl
fbstp
cmp
cmp
xor
sbb
lret
sbb
test
lods
sub
mov
in
pop
test
int3
jae
or
xchg
mov
push
jno
jmp
std
lcall
xorb
rcl
or
hlt
cmc
add
mov
loop
leave
push
xchg
add
ja
mov
jecxz
outsl
inc
daa
mov
fisttps
insb
cmp
in
mov
stos
push
cmpsl
mov
mov
pop
adc
movsl
out
sub
mov
mov
mov
mov
adc
js
jl
mov
das
pushl
adc
jg
cmc
xor
jmp
js
ss
subb
fcom
xor
dec
push
inc
mov
sti
movsl
add
xchg
loopne
sub
push
add
idivl
push
sbb
xor
add
add
or
inc
ljmp
cmp
stos
outsl
cmp
mov
push
and
rcl
sysexit
pop
add
or
sub
pop
adc
aas
jle
ret
xchg
cmp
repz
jae
lea
add
cmp
add
jno
mov
lahf
mov
das
stos
rcrl
repz
insl
fdivl
ficoms
inc
add
imul
jmp
mov
push
mov
enter
insb
sarl
jle
sbb
xchg
push
ds
fs
xor
int3
lret
cld
mov
imul
jecxz
mov
sub
out
incl
rep
out
lahf
xchg
fiadds
xchg
scas
shr
into
inc
push
leave
push
inc
enter
pop
data16
cmp
xchg
inc
fwait
pop
int
aad
shlb
repz
rcrl
movsl
adc
jnp,pn
or
inc
add
sbb
sar
les
fdivp
mov
jno
xchg
push
add
fmull
push
add
push
sar
xor
icebp
pop
fdivr
xchg
fisubrl
pop
lock
test
inc
sbb
std
loop
dec
sahf
fdivl
movntq
mov
mov
data16
sbb
ret
mov
jo
mov
xlat
mov
aam
mov
sub
test
mov
xor
cmc
jmp
sarl
stos
add
cltd
clc
sbb
push
and
arpl
add
cmp
jmp
xlat
pop
pushf
ss
sbb
shr
push
xchg
stos
pushl
jnp
sar
push
mov
js
or
push
test
loop
dec
sbb
mov
cmp
jns
clc
ficoms
in
arpl
popa
push
push
bound
add
mov
or
sub
or
lods
in
out
aaa
push
fidivrl
call
mov
popa
sbb
fwait
iret
incl
dec
aas
cwtl
inc
xor
pop
call
push
pusha
xchg
xchg
lea
int3
mov
mov
jmp
ficoms
add
pop
sti
loop
xor
pmuludq
mov
dec
inc
pushl
xchg
aas
mov
fisubrl
cmp
test
xchg
les
xchg
int3
pop
add
mov
cmp
add
arpl
sub
insl
imul
pop
jmp
jne
xchg
hlt
dec
and
xchg
pop
orb
stos
divl
mov
push
aaa
mov
in
adc
sahf
sub
mov
push
out
aam
or
adc
test
jbe
lret
mov
mov
push
mov
inc
adc
sbb
cmp
mov
cmp
leave
mov
pop
xor
adc
pusha
ljmp
inc
xor
sahf
lods
jmp
jmp
lcall
mov
divl
mov
rol
dec
push
clc
aaa
shrb
and
fs
lods
lret
repz
inc
pop
decl
rorb
imul
mov
movsb
dec
jne
mov
stos
test
ds
sub
adc
shlb
adc
fwait
cli
pop
call
lret
pop
push
incl
push
rcll
lods
push
mov
dec
ljmp
adc
cmpb
outsl
or
sbb
pop
jmp
inc
or
jbe
fldcw
jmp
hlt
gs
test
mov
cmp
imul
and
jno
mov
mov
daa
mov
test
ret
sub
mov
icebp
nop
xorl
push
jg
test
cmp
out
add
sbb
cmpl
mov
xchg
in
sub
mov
add
inc
das
data16
fisttpl
jno
sub
cmp
cmc
mov
cs
xchg
or
ja
lcall
dec
or
mov
aam
xor
pop
movsl
incl
pop
mov
scas
push
jb
sbb
adc
jmp
fucomi
js
push
or
xchg
repz
vpcomq
lds
or
lea
out
ljmp
and
push
xor
incl
and
xchg
pop
and
rol
mov
or
filds
les
xor
cmp
mov
fstps
or
dec
stos
mov
test
stos
les
pop
sub
test
movsl
flds
mov
and
or
enter
or
pop
jle
aas
int
sbb
sti
outsb
sub
jge
idiv
repz
lcall
arpl
mov
aam
pop
and
inc
decl
out
jnp
jg
imul
into
ljmp
inc
ret
sub
test
cmp
xchg
out
pop
push
jo
cmpsb
in
xor
sarl
repnz
push
nop
dec
lahf
inc
ds
mov
decl
popf
dec
movb
push
pop
decl
sbb
ljmp
xchg
rcr
out
add
ja
popl
mov
incl
sbb
pushl
mul
pop
mov
mov
stos
cmp
adc
pusha
pop
mov
and
add
rcll
stc
in
loope
shll
inc
add
gs
cltd
lret
popf
mov
sub
inc
repz
adc
or
in
incl
test
dec
out
shrl
movsl
call
and
ss
dec
mov
fmul
seto
arpl
pop
mov
cmp
push
daa
adc
inc
sbb
push
sbb
pop
call
or
xor
shll
leave
ficoml
lods
mov
push
call
dec
add
call
push
inc
rorl
ljmp
das
mov
popa
decl
jbe
xchg
and
aas
sub
enter
add
loopne
je
lcall
jge
jl
ja
inc
xorb
pushl
or
dec
adc
out
cmpsl
xchg
mov
pop
push
stc
pushf
jge
aam
or
das
inc
mov
cmp
clc
dec
xor
adc
jbe
inc
mov
ret
sarl
rcrl
pushl
inc
mov
adc
jl
icebp
pusha
jmp
inc
jmp
xor
jae
pop
xchg
mov
pop
xchg
fdivs
loop
clc
xchg
adc
testl
xchg
mov
int
sub
or
dec
decl
lahf
out
push
ret
or
popf
je
test
lcall
pop
in
push
dec
mov
add
js
decl
cmpsl
xor
repnz
std
jb
or
mov
pop
sbb
test
sub
mov
stc
in
inc
idiv
adc
push
push
mov
gs
sti
pop
mov
jl
lcall
sbb
stos
pop
and
mov
xchg
adc
les
sub
jp
std
and
shll
xchg
fcomip
das
nop
dec
movsb
mov
inc
push
push
lahf
or
scas
test
cmp
rorb
ds
loopne
pop
aam
fcos
adc
jo
lcall
jmp
xor
or
jb
jp
xchg
inc
pop
repz
cmp
mov
xchg
call
leave
xor
ljmp
les
call
testb
incl
inc
fcmovnbe
fbstp
mov
decl
test
ret
jge
das
rcpps
stos
sub
addb
and
or
pop
repz
inc
push
rcr
insb
jl
repz
das
cmp
iret
mov
pop
cmc
or
jecxz
popl
fcmovne
icebp
mov
push
add
jp
incl
pop
lods
push
scas
mov
lcall
in
cwtl
repz
add
loop
aas
mov
repnz
outsl
int
sbb
dec
loopne
fcmovne
add
out
mov
mov
iret
add
pushl
lea
call
xor
call
fdivs
add
sti
outsb
xchg
mov
fiadds
sbb
sahf
cmp
jae
scas
add
push
in
stos
test
aad
xchg
mov
sbb
sti
dec
adcl
pop
dec
cmp
loop
jnp
das
jmp
or
mov
popa
inc
push
mov
xchg
repnz
test
lcall
jb
arpl
inc
notb
negl
cmpsb
fildl
jns
push
jmp
shr
add
cmp
out
out
addr16
scas
mov
into
repz
inc
push
out
cmp
inc
daa
pop
rolb
mov
ret
lods
pushf
mov
lret
cmpsb
mov
jnp
imul
cs
pushl
mov
inc
iret
cmc
push
in
xchg
or
addl
les
cmp
adc
dec
mov
ds
decl
test
pushf
push
ljmp
jp
push
test
insb
cli
adc
mov
or
mov
xchg
pop
mov
pushl
data16
xchg
sbbb
or
iret
mov
jb
stc
dec
or
mov
int
data16
sub
mov
rclb
sub
pushf
loope
xchg
call
sbb
shl
mov
sub
sub
jbe
jl
adc
push
ret
pop
js
add
or
nop
mov
stos
push
ss
imul
cmp
adc
cli
xchg
adc
ljmp
add
adc
pop
mov
call
sahf
push
or
incl
mov
inc
push
dec
adc
inc
addb
call
aas
mov
and
pop
xchg
push
mov
sub
pop
test
adcb
pop
sub
inc
sbb
jmp
add
sti
test
out
push
mov
repz
cmp
icebp
xchg
mov
cmp
sub
jl
cmpsb
jmp
cmp
int
js
xor
ret
dec
cmp
mov
popa
xor
push
lcall
dec
rcrb
loope
pop
add
and
orl
rol
xchg
cld
dec
sbb
xchg
add
repnz
mov
test
rcl
mov
jne
dec
xchg
push
mov
out
or
ljmp
mov
jb
pop
mov
out
mov
and
fists
mov
int3
xor
in
icebp
cmp
repnz
adc
push
adcl
test
icebp
iret
pop
jb
aas
pushl
dec
es
and
lret
xor
mov
pushl
sub
ret
arpl
add
push
into
bound
pop
or
inc
xchg
lods
test
or
pop
jmp
jae
repnz
add
push
sub
mov
adc
repnz
mov
pusha
push
fildll
popf
in
cmp
shl
clc
jae
push
lcall
xor
pop
and
push
std
cli
adc
dec
inc
shrb
repz
or
ljmpw
sar
and
push
sub
mov
xor
mov
push
sub
jmp
or
int
jmp
sub
adc
and
sti
mov
sub
jp
in
nop
xor
ret
ror
sbb
test
mov
sub
jg
out
jmp
or
push
mov
data16
push
push
mov
mov
adc
fmull
jbe
mov
pop
leave
ljmp
nop
push
fistpll
cmp
add
mov
enter
jmp
movsl
mov
pop
std
push
push
jmp
inc
sbb
movsb
lock
fistl
xor
daa
cltd
iret
imul
add
pusha
xor
mov
rclb
pop
in
mov
push
jo
push
outsb
mov
inc
ljmp
cmp
adc
push
jae
stos
jno
sbb
insl
pushl
bound
shl
xlat
push
cmp
add
jns
rorb
pop
sbb
enter
pop
insb
jns
clc
jle
icebp
pop
cld
sbb
push
cmp
fcmovbe
sbb
mov
sbb
mov
imul
push
jmp
inc
sar
sbb
out
add
sbb
pushf
push
into
pop
dec
mov
push
loopne
je
popf
nop
daa
fnstsw
inc
mov
cld
aad
lahf
int3
sub
push
mov
xor
shll
imul
repnz
sub
jmp
inc
push
fs
jl
push
or
loop
lcall
or
mov
inc
pop
jae
ret
mov
stos
fmulp
dec
das
push
mov
shll
add
jge
push
movl
xor
rcrl
sbb
dec
leave
push
scas
or
xchg
ud0
pop
mov
mov
data16
sti
lret
fisubl
int
sbb
adc
dec
sar
sub
pop
stc
movsb
push
mov
push
rep
out
or
jb
push
mov
mov
loopne
mov
mov
jb
adc
jge
decl
stos
jbe,pt
cmp
call
test
popf
ss
jmp
mov
lahf
inc
aas
nop
scas
cli
stos
mov
pop
adc
xor
aad
push
lock
cmp
mov
xchg
imul
adc
bound
inc
rorl
jmp
xchg
in
jp
pop
push
cld
out
sahf
fsts
mov
popa
shrb
or
es
shlb
pop
fmull
mov
popf
adc
sahf
shlb
dec
mov
sub
rcl
loopne
idivl
push
lods
xchg
jb
mov
jmp
cmp
adc
push
lcall
les
jle
mov
mov
nop
add
pop
scas
in
rcrl
arpl
lcall
andl
xchg
jmp
nop
jg
cmp
lds
aam
pop
pop
test
pushf
jae
popf
push
iret
and
stc
pushl
fdivs
clc
cld
fwait
incl
rcll
push
lods
lcall
lret
movl
testl
mov
lret
and
insl
rclb
dec
pushl
xor
decl
mov
mov
mov
out
jl
test
mov
xor
ror
out
in
or
rclb
push
jnp
pop
inc
clc
mov
push
test
imul
sar
sbbb
popa
adc
adc
pop
mov
pop
mov
xor
sbb
jecxz,pt
fcom
repz
mov
in
inc
mov
sbb
imul
jne
jp
or
cmp
sarb
lcall
fwait
test
jnp
daa
adc
jo
lcall
inc
xor
inc
loope
xchg
ja
incl
cmp
mov
or
push
rcrl
push
addr16
das
xchg
in
rorb
jae
fldt
mov
outsl
sbb
les
xchg
neg
and
in
or
shl
cs
dec
add
mov
mov
ret
inc
lret
pop
pop
push
incl
out
adc
dec
ret
enter
adc
or
pop
pop
pushl
push
inc
lods
jl
sub
or
mov
fisttpll
ret
scas
ss
leave
lret
push
int
pop
ja
aad
add
mov
lock
mov
mov
jno
xchg
rcll
jb
pop
and
into
xor
cmpsl
push
adc
je
push
or
imul
out
iret
int
outsl
pushl
cld
and
ljmp
jecxz
add
mulb
mov
add
outsb
jnp
bound
jmp
xchg
test
out
lock
push
add
sub
xchg
call
mov
jg
insl
push
popf
cmp
pop
rolb
int3
sbb
cmp
jge
sub
mov
jle
push
fisubrs
fidivrl
in
sbb
xchg
xchg
imul
push
xlat
decl
stos
loope
es
cwtl
decl
popa
mov
aaa
mov
jns
add
ror
inc
push
or
stos
icebp
stc
add
jno
test
inc
cltd
and
ret
pop
repz
cmp
add
icebp
rcl
adc
add
pop
andb
in
adc
sbb
divl
dec
cs
test
inc
jl
movsl
in
out
clc
incl
xor
rclb
or
mov
movsb
push
pusha
sbb
repnz
iret
mov
pop
lcall
ljmp
mov
sbb
xchg
xchg
decl
stos
mov
decl
gs
stos
out
cmp
mov
push
xchg
rclb
pusha
inc
das
and
mov
negl
stc
add
inc
mov
int
mov
gs
push
mov
mov
pop
xor
push
sbb
push
or
sbb
cmp
cltd
mov
mov
mov
adc
lahf
je
in
sti
pop
rorb
decl
nop
jg
mov
inc
arpl
cli
jecxz
pop
call
sbb
gs
ljmp
daa
cli
arpl
xor
loop
test
cmp
mov
push
dec
cmp
pop
xchg
cmp
mov
xchg
in
push
push
add
push
inc
nop
mov
xchg
ljmp
xchg
es
sarl
mov
or
push
lock
ljmp
xchg
sub
hlt
int3
scas
pushl
pusha
sub
push
push
mov
inc
sbb
dec
push
jmp
testl
lods
jb
stos
cs
stc
sub
jge
adc
scas
iret
inc
xchg
insb
lods
xor
dec
loopne
jmp
or
xchg
repz
setae
sbb
xchg
dec
add
push
pop
icebp
fcmovu
in
lcall
test
push
xlat
pop
arpl
sub
and
sarl
in
pop
mov
mov
pop
insb
mov
pop
sub
shr
adc
sarb
out
sbb
in
cmp
jns
pushf
xchg
pop
jg
xchg
mov
adc
xor
cmpsb
imul
repnz
into
sub
mov
pop
mov
pusha
imul
xor
fstpl
dec
imul
push
xchg
cld
mov
mov
insb
scas
outsl
adc
mov
aaa
mov
adc
test
aaa
iret
jmp
lcall
pop
or
or
into
repnz
jmp
mov
jmp
mov
push
jecxz
lret
add
dec
add
into
pushl
mov
shrl
pushl
jne
xchg
popa
sub
jmp
adc
mov
sbb
rcrb
lret
stos
push
or
adc
jo
mov
adc
push
inc
insb
inc
xchg
loope
add
pop
cld
rorb
popf
jmp
enter
in
roll
out
stos
mov
dec
push
sbb
and
rcrb
aam
hlt
loop
pop
test
mov
mov
sub
addr16
outsl
or
inc
cmp
add
mov
ret
lcall
xor
mov
decl
out
sub
or
ljmp
ss
adc
inc
push
aas
adc
mov
jg
dec
out
mov
aas
cmc
cs
scas
das
adc
xchg
push
fwait
sbb
pushl
sub
push
aas
xchg
decl
lea
ret
sub
and
mov
push
inc
pop
pushl
cs
sbb
xor
or
pop
mov
ffreep
pushf
repnz
sar
iret
adc
add
xchg
jmp
mov
sub
xor
ljmp
pop
cltd
xchg
xchg
sbb
and
outsb
push
inc
icebp
mov
push
repnz
add
xor
pusha
mov
add
mov
inc
ret
and
insl
xor
or
xchg
pop
ja
nop
pop
in
cmp
xor
mov
loope
fs
cmp
popf
sbb
xchg
or
neg
mov
push
cwtl
and
pushl
push
jbe
jns
adc
mov
mov
inc
mov
and
mov
out
call
call
std
loop
add
push
pop
adc
scas
std
repnz
mov
loop
inc
or
aad
mov
call
roll
fisubs
pop
or
cs
push
inc
loop
ljmp
mov
mov
js
push
mov
in
sub
dec
jecxz
dec
shrl
lcall
xchg
aas
loope
mov
addr16
sar
test
sub
or
inc
sub
ss
mov
ret
push
bswap
out
fs
add
jno
decl
pop
out
in
cmp
inc
mov
xor
iret
jle
jecxz
xchg
stc
lcall
fwait
mov
aaa
mov
ret
ljmp
sub
rcrb
inc
fdivr
xchg
add
pop
fisttps
fs
clc
jbe
sub
movups
push
adc
loope
out
mov
mov
les
xor
xchg
divl
adc
jp
inc
test
cmp
shll
mov
or
mov
stc
daa
dec
push
pop
mov
lcall
mov
movsl
and
pop
fwait
call
cmp
mov
in
xor
movsl
ljmp
push
and
push
mov
outsl
lods
cmp
fmull
sbb
mov
aas
aaa
add
daa
inc
cmpb
mov
push
jmp
xor
sti
inc
sbb
mov
pop
pusha
mov
push
rcll
aaa
inc
push
mov
je
mov
xchg
test
mov
mov
and
out
js
pushf
and
pushl
orl
jmp
icebp
or
cli
lcall
jge
pop
inc
inc
pushl
jae
jb
and
dec
push
stos
fdivr
jae
cld
pop
adc
fs
dec
ljmp
mov
aam
jmp
jae
test
dec
mov
or
sbb
test
push
jmp
gs
cmc
decl
add
mov
xor
dec
inc
jle
popa
push
xchg
out
lahf
mov
push
xorb
mov
push
mov
icebp
mov
je
in
stc
std
mov
aad
mov
lcall
sub
bound
push
pop
aaa
push
jb
pop
cmp
jecxz
or
fsubrl
les
pop
or
jg
push
mov
lahf
test
and
adc
pop
jecxz
sti
pusha
repz
sbbl
scas
aaa
fnstenv
pop
ljmp
jne
outsl
mov
aaa
cmp
mov
lcall
pop
add
call
xchg
adc
pslld
inc
divl
std
dec
mov
fwait
xchg
cmc
mov
out
call
pop
push
ljmp
sbb
negl
fcoms
dec
add
xor
repnz
test
inc
std
pushf
notb
aaa
xchg
inc
push
and
or
mov
jmp
punpcklbw
call
cmpsl
lods
andl
out
dec
add
and
push
decl
xchg
in
mov
mov
adc
mov
mov
jl
or
adc
pop
fldl
ficoml
jns
popa
scas
or
xchg
mov
subl
mov
lea
ja
lcall
push
sbb
sar
dec
fwait
cltd
inc
in
sbb
out
push
add
add
mov
cli
loopne
shlb
add
xor
mov
data16
cmc
or
sar
test
addr16
outsl
subb
add
jmp
push
sub
ljmp
sbb
ret
in
outsb
inc
orb
xchg
push
mov
jecxz
push
stos
sub
adc
mov
cmpsb
and
adc
inc
jnp
cmpb
jne
xchg
sub
std
adc
les
mov
pop
add
mov
cs
out
push
xchg
fidivrl
sti
les
xlat
mov
mov
add
sbb
js
cmp
jns
mov
es
inc
adc
decl
pop
addb
mov
scas
std
jmp
or
add
enter
fsubl
incl
sbb
push
push
cmp
jg
xchg
inc
push
inc
add
sbb
xor
inc
mov
mov
push
pop
in
sbb
pop
clc
add
test
call
cmp
jb
mov
cmp
imul
mov
sarl
xor
cmp
xchg
and
mov
xchg
fbld
cld
jo
lcall
je
shrb
call
js
loop
sbb
pop
stos
xchg
and
jmp
pop
xor
or
loopne
cmp
repz
and
mov
lcall
push
movsb
int
sbb
je
mov
mov
loope
pop
testl
add
clc
inc
push
jmp
andb
jbe
je
lea
repz
ss
xor
leave
mov
nop
push
inc
cmp
decl
fisubl
ret
call
imul
push
inc
repnz
fs
cli
adc
cmpsl
pop
aaa
lcall
xchg
adc
jae
mov
pusha
sbb
xor
add
adc
stos
mov
enter
aam
mov
popa
push
hlt
pop
xchg
aaa
add
aas
fisubs
mov
mov
dec
push
lock
ds
in
in
int3
outsl
fistpll
pusha
shlb
sbb
xchg
divl
jmp
icebp
inc
shrd
aaa
cs
sti
pop
mov
add
sarb
pop
mov
mov
mov
aaa
arpl
cwtl
mov
ficoml
rcl
pop
stc
ret
out
mov
negl
js
xchg
dec
inc
jle
jmp
adc
sbb
jg,pt
pop
pop
lock
jae
mov
jne
xlat
push
stos
dec
mov
and
cld
leave
push
cmc
xor
cli
scas
inc
call
ret
inc
mov
lods
clc
lahf
sub
xor
dec
and
out
push
aaa
decl
mov
sbb
lret
inc
add
pop
dec
xchg
shll
data16
push
adc
cmpsb
js
push
out
loope
push
adc
aas
lahf
movq
push
mov
mov
or
cmp
lea
in
shll
mov
into
sub
push
mov
xchg
xor
or
jg
lcall
cmp
dec
aaa
jl
popa
aam
jle
or
idivl
les
out
pop
push
push
mov
jp
jmp
and
cmp
and
repz
mov
imul
or
or
or
rclb
jnp
out
enter
addr16
mov
lods
call
arpl
roll
cli
pop
cli
or
sub
xchg
decl
push
xchg
jecxz
xchg
ficoms
sbb
push
mov
push
pop
lcall
scas
ficoms
inc
xor
hlt
mov
lods
mov
cld
push
xchg
pop
sbb
ljmp
dec
lcall
cwtl
push
add
lcall
mov
ret
arpl
push
push
add
add
jg
inc
dec
fdivp
mov
shll
shrl
sbb
inc
dec
xchg
shl
mov
out
lahf
push
repnz
jl
or
aam
ljmp
fildl
pop
in
cmpsl
jmp
dec
push
leave
notl
lret
ljmp
not
jle
add
in
test
mov
xchg
mov
push
fstps
pushl
cs
ljmp
and
sti
or
xchg
ljmp
mov
mov
aas
outsl
push
jmp
mov
and
rcl
xor
xor
into
mov
ljmp
cltd
mov
sub
pop
cmp
imulb
leave
fnop
movsb
or
stos
hlt
test
or
sbb
or
mov
jae
jg
sub
jmp
cmp
clc
xchg
or
mov
mov
add
pop
sbb
inc
pop
pop
ds
cmp
ljmp
repnz
jmp
shrl
jnp
jns
or
xor
inc
jb
aad
xor
sbb
std
scas
rorb
pop
adc
fstp
xchg
push
stc
or
jns
daa
pop
pop
sti
inc
cmp
mov
aad
cs
push
mov
sbb
add
pop
imul
jb
incl
pop
sti
push
adc
clc
pusha
or
popf
jbe
sti
mov
lods
out
dec
or
sbb
jmp
push
popf
rorl
in
xchg
add
inc
notl
pop
incl
mov
inc
adc
sbb
mov
stos
jbe
mov
fwait
jl
incl
dec
lahf
fdivrl
xchg
xchg
stc
adc
es
or
cmp
jge
repz
xor
pushl
fwait
add
adc
scas
add
cwtl
jbe
jne
inc
insb
and
jecxz
adc
jae
jbe
imul
sub
pusha
ljmp
arpl
jo
fstpl
or
outsl
cmp
mov
fidivrs
mov
cmpsl
sub
pushl
sti
xchg
into
xlat
adc
inc
mov
aas
call
aam
arpl
or
push
mov
sahf
pop
into
pushl
popa
ds
shll
jge
and
bound
push
jl
or
ja
adc
adcl
pop
mov
ret
cmp
and
inc
dec
mov
mov
lods
adc
sbb
mov
jne
adc
call
jmp
fiaddl
outsb
pop
popa
outsl
nop
mov
mov
pop
xlat
pop
push
jecxz
inc
js
push
sbb
xor
lea
aaa
cmpsb
jmp
icebp
or
sar
pop
lds
xor
push
nop
and
adc
lret
dec
mulb
fdiv
and
dec
or
mov
icebp
xorl
movsb
dec
decl
mov
test
cmp
call
jne
mov
ret
loope
adc
shlb
xor
dec
lcall
lahf
sar
and
pop
call
filds
in
or
or
xor
xchg
adc
cmc
mov
mov
ficompl
push
insb
push
push
aaa
loop
aam
test
ja
lods
loopne
jns
fbld
pop
push
adcl
sbb
cmp
in
dec
jecxz
xchg
jmp
mov
dec
incl
loop
adc
decl
cmp
sarb
mov
decb
nop
lcall
pusha
dec
push
lcall
mov
adc
add
loope
sub
xchg
iret
adc
cwtl
ljmp
mov
aad
adcb
mov
js
or
sti
test
inc
jo
divb
rorb
insl
add
lock
ljmp
pop
jecxz
call
xchg
push
adc
sbb
sbb
fisttps
into
mov
ret
mov
sbb
clc
mov
sub
mov
in
out
int3
negl
or
xchg
add
mov
fiadds
xchg
jl
popaw
ljmp
xchg
ja
pop
out
xor
ljmp
cmp
push
mov
inc
cmp
ja
orl
adc
push
out
xlat
or
sbb
movsl
adc
mov
lret
mov
adc
sbb
xor
movsl
mov
or
lcall
xchg
stc
mov
dec
push
cmc
jns
insl
and
jg
fidivs
sbb
movsb
xchg
inc
cwtl
mov
decl
pop
outsb
add
mov
pop
sub
aas
cmp
pop
sbb
fnstenv
push
add
lcall
mov
jmp
insl
jmp
fiadds
adc
pop
clc
cmp
mulb
call
mov
or
enter
insb
loop
rolb
loopne
je
das
dec
and
mov
and
xchg
jge
cld
cwtl
mov
out
jle
dec
imul
push
lock
xorb
rolb
or
ljmp
insb
inc
add
lcall
into
inc
push
push
push
jne
je
ret
daa
xor
inc
clflush
dec
aad
iret
pushw
cmovle
jne
repz
pop
cmpsl
push
xchg
imul
sbb
fwait
in
fistl
clc
mov
push
fnstenv
adc
in
push
test
dec
add
ja
cli
clc
mov
out
loope
ljmp
pop
das
fisubl
cwtl
lcall
xchg
rcll
push
jb
syscall
pop
mov
out
pop
push
adc
jne
into
and
or
adc
pop
out
std
sbb
push
stc
lea
sub
xlat
jns
mov
jnp
push
fimuls
loopne
mov
test
incl
jno
shlb
loop
call
data16
neg
adc
out
int
outsl
pop
mov
sub
jo
jp
add
decl
arpl
inc
jno
dec
dec
sbb
jae,pn
cmp
ja
add
inc
fs
mov
mov
pop
add
jmp
cmp
mov
in
in
push
xor
aad
xchg
sahf
pop
adc
inc
mov
sub
stc
xchg
loop
pop
es
push
decl
lock
push
sti
xor
sub
pop
pusha
xchg
xor
push
adc
movsl
int
dec
aad
sub
lods
cmc
push
ds
mov
aaa
clc
aad
jge
push
lret
adc
xchg
inc
xor
cwtl
out
sub
dec
pop
enter
mov
mov
xchg
std
pop
ljmp
ljmp
mov
jmp
push
into
dec
pop
mov
jae
test
jmp
lods
lods
mov
insl
andl
sub
xchg
dec
test
inc
lcall
fisttps
sub
cld
dec
aad
notrack
push
lea
xor
sbb
lret
or
add
int3
push
decl
pushf
ret
int
xor
xchg
mov
repnz
inc
test
mov
pop
inc
xchg
or
mov
pop
mov
push
scas
in
dec
sub
cli
xchg
xchg
cmp
jp
popf
fadd
pop
stos
div
jg
inc
out
add
pushl
or
mov
iret
lods
mov
in
les
jmp
xchg
jp
decl
and
inc
pushl
adc
mov
rcll
scas
cli
rcrl
mov
push
daa
sub
push
mov
cmp
and
xchg
xor
in
push
jb
leave
pushl
mov
inc
pop
pop
or
insl
add
or
decl
xchg
nop
xchg
mov
push
pop
icebp
cmp
sbb
inc
out
call
fsubrs
dec
ljmp
addr16
push
call
js
jmp
je
and
and
test
fbld
mov
add
mov
movmskps
sub
jmp
orl
inc
xchg
push
dec
fwait
stc
inc
xchg
out
add
scas
push
mov
adc
push
mov
iret
lret
call
das
pop
out
jmp
push
aas
pop
fst
pop
ds
fwait
clc
xchg
mov
leave
cwtl
imul
xor
push
lret
dec
into
add
mov
sbb
movsl
or
mov
or
jb
or
sbb
cmp
sbb
or
pushl
mov
mov
ljmp
dec
lahf
lea
cmp
jmp
mov
xor
ljmp
rclb
cmpsb
lret
push
das
test
dec
lods
aad
cmp
xchg
icebp
add
add
popa
out
mov
push
mov
pop
addl
push
adc
sbb
cmp
ljmp
adc
enter
insb
idiv
jle
dec
or
sbb
push
movsb
sbb
pop
xor
divb
mov
push
jmp
fistps
add
dec
lret
mov
mov
dec
add
imul
scas
sbb
xchg
adc
negb
inc
add
rcl
out
test
xchg
pop
pop
shll
mov
sbbb
rcrb
cs
insl
push
add
jb
in
inc
call
pop
cmp
popf
xor
je
mov
jne
hlt
dec
add
dec
xor
adc
dec
insl
fmuls
faddl
call
xchg
inc
in
mov
xchg
dec
das
test
mov
dec
je
push
push
pop
add
cmovp
or
stos
mov
ljmp
add
push
cmp
pusha
cmp
into
stc
call
shll
mull
movsb
aas
jnp
test
pushf
sub
sti
xor
cmp
jne
rclb
je
in
rcrb
lret
cmp
push
mov
ss
lock
jae
push
add
aad
nop
add
pop
mov
data16
arpl
cmp
lcall
into
cmp
ljmp
adc
jecxz
aad
push
int3
sbb
mov
mov
dec
pop
fdiv
mov
jle
scas
in
sarl
inc
call
dec
mov
popa
stc
icebp
mov
sbb
aas
lahf
fdivr
int
lock
rcrb
jnp
adc
pusha
incl
cmp
sbb
inc
add
fsubrp
mov
jo
lods
call
mov
inc
pop
push
sub
and
and
fistpl
jo
push
pop
adc
mov
mov
popl
pop
jmp
stos
sbb
sbb
hlt
ss
shr
cmp
or
loopne
icebp
ret
lret
lcall
outsb
pop
mov
icebp
pop
nop
and
fimull
xor
fdivs
xlat
imul
cmp
xchg
call
jbe
mov
icebp
pushl
sub
rorb
push
mov
or
or
scas
lret
pop
fcos
sub
fdivrl
jle
out
adc
popf
call
repnz
jmp
mov
roll
stos
xor
cmp
dec
in
sub
std
push
adc
xchg
pop
test
mov
push
stc
mov
jmp
ljmp
mov
or
mov
inc
xlat
jmp
cwtl
mov
and
mov
push
fs
mov
repz
push
movsb
adc
push
mov
cs
push
scas
xchg
dec
jne
mulb
lret
adc
ljmp
std
mov
js
ret
lret
adc
jo
or
sbb
loope
cmp
or
jns
repz
sarl
ret
sbb
fidivs
outsl
mov
dec
mov
hlt
iret
popf
xor
mov
and
jmp
das
and
out
es
fbstp
add
test
aad
cmpb
and
lcall
push
or
out
not
add
adcb
add
iret
push
sti
inc
ss
repnz
xor
out
and
fnsave
iret
roll
pop
jg
scas
mov
decl
hlt
pop
or
adc
push
movsl
pushf
mov
or
in
push
pusha
nop
roll
stos
lea
mov
push
fdivr
jb
adc
xor
lret
and
ljmp
lods
iret
or
outsl
push
dec
test
and
ja
bound
out
push
sbb
rorl
scas
xchg
add
adc
and
rorb
call
mov
xchg
push
inc
add
cs
scas
or
mov
cltd
loop
insl
cmpsl
notb
adc
pop
int3
cmp
pcmpeqb
call
sbb
cmp
jb
and
ret
pop
mov
jle
scas
ljmp
test
mov
inc
xchg
add
pop
movsl
inc
cwtl
je
inc
mov
imul
in
jns
dec
jmp
and
imul
and
pushf
outsl
add
jno
ja
mulb
shlb
inc
daa
std
dec
xchg
inc
push
jnp
stos
aad
pusha
ret
push
cmpsb
add
ss
push
imul
pop
adc
dec
xor
xchg
in
test
mov
xorl
shrl
adcb
sub
or
shrb
mov
mov
cmpsl
mov
call
test
mov
push
jae
outsb
and
loop
into
pop
lfs
mov
decl
subb
inc
xorl
fistl
scas
sarl
fnstenv
inc
mov
mov
cmp
xor
in
jnp
clc
fsubrl
xchg
cmp
xor
sbb
add
cltd
mov
out
pop
sbb
jbe
stc
fists
lods
pop
or
sbb
nop
les
fdivl
inc
pop
or
pushf
sbb
repz
xor
jecxz
xchg
cli
scas
mov
adc
adc
jne
or
mov
stc
pop
iret
jle
fstpt
push
push
lods
outsb
sub
or
mov
popa
out
in
xchg
repnz
xchg
aas
pop
mov
dec
ret
lock
in
xchg
setnp
int3
shl
cmp
sub
sbbb
sub
dec
inc
pop
or
push
jmp
and
movsb
decl
mov
pusha
mov
pop
add
popa
jge
sahf
mov
adc
or
inc
std
mov
lahf
pop
ja
mov
mov
pop
stc
or
jge
mov
sbb
dec
mov
adc
pop
cmp
lcall
cwtl
xlat
pop
xchg
hlt
ljmp
jae
xchg
push
dec
sbb
fsubs
inc
xchg
mov
mov
pop
sti
int
mov
shlb
xor
dec
icebp
stos
punpckldq
pop
pop
test
or
inc
adc
aam
add
les
fildl
shlb
daa
aad
int
mov
add
sarb
mov
pop
repz
test
xchg
xchg
lcall
jl
lods
mov
push
decl
mov
push
sbb
pop
addr16
sti
mov
incl
lds
aaa
cmc
movsb
push
mov
fwait
push
out
or
add
movsl
lock
xor
add
loop
adc
xor
jecxz
cmpsl
fdiv
mov
dec
jle
add
sbb
incl
data16
lods
xchg
cmpl
xor
cmpsl
loope
or
xor
push
mov
xchg
mov
inc
jecxz
and
and
lock
push
mov
push
sbb
and
cwtl
sub
insb
inc
ror
or
add
pop
cmpsb
jmp
jmp
jns
mov
mov
jo
sahf
pusha
push
and
add
out
inc
cmp
pop
mov
stc
sbb
aam
pop
push
dec
stos
or
sub
clc
lock
adc
loope
iret
mov
decl
xor
and
push
push
cmpsl
push
jl,pn
clc
add
sub
decl
adc
incl
push
push
xor
leave
push
jmp
mov
mov
sbb
or
cmp
dec
ror
decl
mov
out
mov
push
popa
outsl
inc
jb
call
lods
or
xchg
fstpt
dec
shrb
in
or
pusha
pop
pushf
or
iret
ljmp
outsl
in
lods
mov
and
cld
mov
dec
pop
mov
ljmp
imul
outsb
nop
cmpsb
jp
lods
aaa
leave
sub
or
and
push
js
int3
in
stos
push
dec
jbe
push
push
push
cmp
xor
jmp
adc
inc
lods
cmp
std
call
faddp
pushl
pop
xchg
and
jae
insb
mov
ljmp
mov
dec
and
dec
mov
add
cwtl
gs
jb
std
int
imul
pop
or
or
lock
jge
add
adc
aas
mov
xchg
push
sbb
or
sti
daa
call
inc
loopne
aad
sahf
xchg
inc
push
adc
cmpsb
call
push
je
pop
imul
adc
mov
inc
sub
jle
clc
fnstsw
popf
adc
aam
mov
and
mov
pushl
adc
and
into
dec
add
scas
mov
xchg
test
mov
fldenv
cmp
dec
dec
das
jns
dec
mov
dec
and
cmp
mov
and
inc
jg
push
mov
add
ret
and
incl
dec
stc
lahf
repnz
jb
cld
into
fsubl
lcall
push
sub
sub
cs
xor
fs
loopne
mov
mov
or
cltd
cmpsb
inc
je
rorb
fs
leave
sub
jae
call
jnp
mov
mov
icebp
pop
daa
lcall
adc
clc
arpl
or
jb
je
in
cmp
mov
xchg
sbb
mov
iret
bound
mov
roll
pushf
and
pop
jns
stc
push
negl
push
lcall
lahf
lock
pop
xchg
orl
in
cmpsb
mov
fsubr
push
cwtl
lock
xor
iret
cmp
xorb
adc
mov
jmp
mov
stc
sti
add
or
scas
fisubs
fmuls
loopne
lcall
jo
insb
incl
mov
ret
cmc
js
fidivs
mov
mov
shrl
sbb
cmp
pop
or
icebp
pushl
mov
lds
xor
mov
dec
xor
dec
jo
cmp
xchg
jbe
call
push
in
mov
inc
mov
adc
sub
filds
dec
hlt
xor
or
or
lret
sub
pop
mov
push
into
adc
add
or
repnz
push
lahf
or
gs
mov
fstp
push
incl
popa
lahf
pushl
push
cltd
in
push
lods
std
out
iret
xchg
sub
in
mov
js
pop
or
pop
jg
shlb
push
push
nop
aaa
pop
adc
adc
jnp
xlat
or
lods
push
popa
xor
mov
jp
lods
test
cmp
jae
xchg
cld
push
sarb
inc
jae
mov
fadd
jne
jmp
pusha
cmp
sarb
lea
or
lods
dec
sub
ljmp
inc
jo
into
int3
adc
xor
fildl
add
or
test
sub
mov
push
testl
sbb
popa
cld
rorb
mov
dec
test
mov
pusha
mov
incl
rcrb
jne
mov
xchg
fadds
dec
hlt
test
ret
dec
pop
adc
pop
xor
sub
subb
sbb
out
cmpsl
adc
or
mov
iret
mov
add
fs
jl
jle
mov
add
dec
xchg
fisttpll
dec
out
cmc
mov
leave
int
sahf
push
mov
mov
lcall
cmp
sar
adc
push
or
add
aaa
jae
mov
xor
push
xor
push
jb
and
cmp
xor
xchg
push
or
add
mov
mov
inc
subb
inc
lea
jns
xor
xor
xchg
xchg
mov
jecxz
push
add
movsl
mov
pushl
fucomp
dec
cmp
lea
xor
sub
add
stos
popa
ror
mov
notl
sub
adc
rorb
cmc
call
or
dec
dec
cltd
dec
test
mov
push
sbb
jle
sbb
stos
push
je
ds
or
or
call
and
push
pushl
imul
jns
incl
inc
push
push
add
test
xor
or
xchg
pop
cmp
mov
arpl
lret
mov
jbe
sbb
adc
jp
std
nop
push
jl
int3
cmpsb
int
mov
lods
imul
call
push
inc
repz
in
jecxz
sub
cmp
ss
cltd
xor
mov
je
imul
popa
mov
movb
testl
xor
sub
sbb
ret
int
das
loop
popf
sub
arpl
mov
cld
jl
subb
and
stos
mov
xor
test
stc
cli
fsubs
mov
int
sub
gs
cmc
int
adc
xchg
lods
sub
fmull
pop
add
loopne
push
jbe
add
pushl
shrb
xlat
stos
jbe
xchg
sub
and
fcomps
add
xor
mov
lcall
lock
inc
jno
dec
inc
sbb
inc
cmp
jne
cmp
xchg
mov
cli
pop
add
pop
cmpsl
je
aam
in
incl
dec
imul
pop
jge
adc
jmp
push
arpl
push
rcrl
sti
ds
mov
pop
pop
nop
es
aas
add
loope
shrb
adc
pusha
push
xchg
adc
outsb
loope
sub
negl
sub
sub
das
lcall
push
jmp
and
imul
cwtl
lods
jns
sub
pop
into
repz
jge
dec
adc
adc
mov
sbb
faddl
inc
and
mov
mov
xchg
ja
mov
iret
add
decl
xchg
sub
aad
cmc
sti
icebp
lock
lcall
or
pop
push
stc
out
jae
adc
imul
loope
cld
push
das
xchg
ret
mov
pop
mov
decl
icebp
pop
cmp
ret
out
lds
or
hlt
shrl
lret
jl
negl
mov
sbb
sub
pop
xor
movsl
xchg
in
repnz
scas
cmp
mov
xchg
mov
pop
lcall
pop
aaa
sbb
xor
push
js
in
xor
fs
cmc
push
xchg
mov
das
dec
pop
and
jg
push
or
aaa
ret
call
pop
mov
sub
lods
inc
jmp
loopne
pushf
add
dec
and
leave
lahf
stos
jmp
push
inc
repz
lods
or
movsb
mov
cmpsl
mov
jmp
inc
int
outsl
cli
js
sub
add
shlb
pop
inc
fwait
push
dec
jnp
lret
cld
push
stc
add
call
pop
js
inc
test
mov
sbb
cwtl
mov
pop
sarb
aam
add
sbb
addr16
js
xchg
push
rcrb
xchg
hlt
fucom
or
mov
ret
push
push
fildll
scas
xchg
movsb
pop
jmp
shl
inc
push
ja
iret
out
decl
mov
ret
popf
or
lock
sub
or
out
jg
dec
or
gs
xchg
decb
add
dec
aas
add
les
fmuls
dec
fnstenv
or
cmc
sub
inc
ljmp
sub
push
stos
mov
sbb
outsl
dec
dec
movsb
xor
aaa
inc
sahf
add
das
movsl
cmp
arpl
dec
sahf
jb
in
mov
xor
fistl
lret
das
or
mov
pushf
stc
dec
jb
iret
adc
adc
decl
and
les
ljmp
cmpsl
adc
ret
loop
outsb
add
aam
les
cmp
inc
xchg
and
fldpi
mov
add
dec
pop
push
mov
xor
mov
clc
test
sahf
cmp
jb
call
popf
jmp
mov
in
fxch
insb
call
iret
and
lret
popf
cmp
testl
hlt
cwtl
daa
inc
push
mov
imul
jns
dec
sub
iret
sbb
pop
out
nop
pop
add
cmp
hlt
mov
shl
push
mov
push
lea
mov
mov
aad
pop
hlt
push
pop
jns
cmpsb
std
push
mov
rorl
imul
adc
pushl
jecxz
inc
aad
and
cmp
rorb
ret
adc
mov
or
add
incb
mov
mov
pushl
fsubl
inc
add
jb
xchg
inc
out
dec
pushl
xor
sub
push
cltd
lcall
jns
mov
add
xchg
xsavec
jmp
stos
mov
pop
mov
call
scas
js
int3
cmp
and
jb
jmp
loop
xlat
stc
push
inc
fwait
mov
int
and
out
jnp
mov
xchg
mov
in
je
outsb
test
clc
cltd
pusha
stos
push
push
rorb
mov
jbe
pop
push
adc
inc
sub
mov
nop
push
aas
push
mov
xlat
xor
jno
sar
sbb
repz
cmp
sub
mov
cmpsb
cmpsl
ljmp
jne
dec
xor
call
mov
std
pop
mov
push
jmp
xor
in
xor
in
sahf
xchg
push
dec
mov
jno
xor
xchg
cmp
aas
decl
mov
lock
js
ss
paddb
test
xchg
lcall
incl
mov
mov
jmp
dec
pop
add
mov
shrb
mov
movsb
mov
jge
push
mov
adc
ljmp
sub
inc
jae
ljmp
lock
fs
pop
rclb
bnd
testl
sbb
icebp
pushl
mov
jnp
mov
jecxz
shll
imul
jae
sub
and
add
jge
cmp
xor
push
stos
push
xchg
scas
outsl
dec
mov
cmp
and
loopne
or
out
mov
and
jne
sarb
rorl
aas
cli
std
xor
pop
push
jge
jmp
repnz
jo
lahf
stos
sbb
mov
push
int
pop
xchg
add
call
push
aam
ret
add
add
popf
mov
xchg
fdivrl
mov
mov
sti
jg
sbb
add
sub
or
push
lods
and
push
in
cmpsl
pop
mov
mov
jp
inc
jmp
jmp
ljmp
xchg
and
movsb
xchg
push
adc
push
add
push
jne,pn
xor
inc
add
mov
shlb
repz
lret
mov
ja
jge
dec
adc
dec
push
int3
loope
adc
shrl
mov
test
fmull
mov
out
ljmp
dec
push
push
test
mov
xchg
mov
ljmp
xchg
add
inc
inc
pop
push
ffreep
add
ljmp
test
mov
push
sub
mov
jae
je
push
or
pop
xchg
rorl
or
push
sbb
repz
mov
jns
dec
repz
fnstsw
mov
jne
je
shrb
xchg
push
js
lcall
push
adc
les
add
sub
idivl
idivb
and
xor
push
lret
or
fwait
sub
addb
adc
inc
lea
xchg
and
jp
pushl
addr16
push
push
lods
xor
ret
push
outsb
jns,pt
mov
stos
daa
mov
into
fnstenv
xchg
sub
xchg
mov
pop
push
ljmp
icebp
cwtl
adcl
ror
jns
test
mov
sub
push
or
push
outsb
daa
enter
xchg
insb
cs
cmpb
mov
add
imul
icebp
lret
mov
cmp
out
ljmp
sbb
imul
jns
iret
and
out
daa
xchg
cmp
ret
sbb
js
decl
je
adc
daa
jns
jne
fdivr
stos
aad
xor
cmpsb
dec
push
jmp
test
jecxz
cwtl
int
adc
mov
mov
in
and
xor
sti
adc
enter
mov
pop
push
jge
addr16
test
adc
pushl
es
xor
incl
add
xchg
and
xchg
cmp
sbb
mul
dec
out
jae
loop
notl
das
stos
test
xor
pop
andl
sbb
and
ja
dec
addr16
ror
sub
repz
jmp
jbe
gs
xor
jae
mov
xor
adc
inc
xor
xchg
insl
cltd
or
xchg
shlb
or
mov
lea
adc
sbb
out
iret
sar
clc
inc
fcmovu
nop
dec
mov
lea
mov
push
jae
sbb
lock
and
arpl
sahf
cli
or
pop
cmpsl
adc
push
movb
add
mov
cmp
pop
dec
roll
cmp
enter
sub
sbb
sahf
decl
xor
popa
lcall
push
xchg
mov
sub
aas
shll
fsubl
xor
in
xchg
jmp
xlat
sub
mov
adc
les
push
loop
roll
imul
call
das
mov
mov
pop
jp
scas
jge
ret
adc
mov
inc
pushl
sub
pop
sub
adc
push
repz
cmp
pushl
pop
dec
popa
gs
out
ljmp
dec
mov
lods
mov
icebp
lods
das
inc
or
lds
xor
test
pusha
aaa
and
add
fsubs
jp
cld
xchg
jl
lret
mov
pop
pop
mov
xor
adc
adc
shrb
or
test
mov
xchg
movsb
pop
cmp
filds
adc
daa
ljmp
push
pop
xor
pop
add
adc
mov
aam
xchg
pop
mov
add
adc
jle
std
xor
inc
xor
out
jmp
pop
ficoms
addb
addr16
mov
test
or
bound
les
sub
arpl
jp
add
ret
and
xor
js
adc
or
sub
movsl
aam
push
sti
pop
xlat
in
in
lea
dec
adc
rclb
mov
dec
fwait
sbb
call
adc
jo
jae
in
in
jb
inc
insl
sbb
loope
xchg
push
dec
or
std
xchg
mov
push
rclb
pushl
sbb
inc
gs
incl
pushf
arpl
cmc
mov
xor
push
mov
fwait
jl
sarb
sti
inc
ret
fists
loop
push
mov
cmpsw
rcll
mov
cmp
sub
xlat
testb
movsb
out
dec
jns
or
add
arpl
ljmp
add
repz
mov
fmull
sti
sahf
sbb
mov
leave
loop
pushl
rolw
stc
lcall
or
jl
hlt
jnp
lcall
mov
or
push
call
mov
xor
xor
dec
jg
sti
sbb
or
lret
sub
pushf
mov
fucomp
inc
ljmp
ja
lea
jmp
xor
ljmp
pushl
push
xchg
lcall
mov
mov
jb
fidivrs
or
imul
cmp
rsm
sti
aam
js
ja
sbb
std
lcall
xchg
adc
push
cmp
inc
call
or
ror
fs
imulb
xchg
jle
int3
push
sbb
aaa
cmpsb
test
pop
or
lock
testl
scas
out
mov
ljmp
fcompl
inc
mov
inc
test
jae
xor
jp
xchg
inc
iret
scas
fstps
mov
fs
mov
pop
or
inc
mov
push
cs
dec
push
sahf
sub
cmpsb
shll
fsubr
rorl
imul
scas
mov
inc
in
imulb
nop
popf
jge
add
cmp
cli
adc
dec
stos
mov
rcll
popl
xchg
subb
push
xor
dec
addr16
cmp
fistpl
sbb
dec
mov
push
pusha
pcmpeqd
pushl
mov
data16
dec
push
add
inc
in
adc
scas
mov
push
sub
cmp
iret
int
imul
jnp
push
je
decl
mov
xor
add
lock
rcrl
add
rorb
test
sub
testb
out
sbbl
mov
mov
imul
sbb
push
scas
stc
add
nop
cmp
and
fidivrs
pop
sbb
jbe
adc
call
jg
ljmp
popa
cmp
out
add
or
push
incl
jg
mov
mov
mov
jno
lcall
outsb
aas
cmp
fdivr
pop
dec
mov
aaa
push
jne
dec
mov
pusha
pushl
xchg
push
sub
inc
ds
mov
inc
sti
test
sub
sbb
jecxz
and
push
pop
push
mov
adc
lcall
inc
in
adc
pop
pop
sti
xchg
mov
mov
and
pop
jmp
xchg
sbb
inc
addr16
icebp
or
jle
adcb
lds
or
fbstp
adc
dec
and
cmc
not
fdivr
mov
cld
adc
mov
imul
loop
pop
add
outsl
sub
jle
xor
or
in
loopne
test
aad
lret
rcrb
push
mov
sbb
shlb
fidivl
sti
repnz
or
lahf
rclb
mov
out
sub
test
cmp
jnp
mov
ljmp
xchg
scas
rcl
mov
pop
int3
scas
push
jg
in
and
sub
insb
aaa
push
aad
mov
cli
xchg
outsl
or
ja
pop
pushl
sub
pop
add
and
cmp
adc
jecxz
pushf
call
movsb
pop
jmp
push
shll
push
jne
lods
adc
adc
les
cmp
cli
decb
rcrl
lret
cld
push
cmpsl
jl
jo
inc
mov
adc
jb
loope
addb
xchg
dec
out
sub
push
sti
leave
mov
js
inc
lcall
in
hlt
decl
mov
mov
or
in
push
test
xchg
in
and
lahf
inc
ljmp
push
jl
sarb
outsb
cld
ret
push
mov
push
push
movsl
adc
subl
dec
fisttpl
mov
xor
or
mov
mov
mov
jl
gs
add
sbb
cmp
cmc
dec
jnp
dec
scas
shrb
leave
aas
mov
shll
mov
jno
pop
test
in
repz
add
xchg
mov
push
mov
movl
mov
jnp
xor
add
cmp
mov
inc
mov
add
fdivr
and
stc
divl
ljmp
push
jo
dec
mov
ret
push
outsb
icebp
incl
sbb
pop
dec
cwtl
cmp
xchg
sub
stos
in
mov
mov
adc
insl
fiaddl
arpl
adc
pop
mov
xor
cmp
or
mov
push
rcr
push
insb
shl
jns
jmp
dec
lcall
es
ds
outsb
pop
push
xlat
jl
test
cwtl
mov
jecxz
leave
imul
cmp
jns
outsl
in
sbb
push
repz
jecxz
inc
out
lcall
sub
or
scas
into
pop
sbb
add
je
lcall
mov
inc
jne
inc
mov
or
sub
cmpsb
cli
and
shll
mov
mov
jl
cs
fstl
or
in
add
clc
mov
mov
mov
sub
xchg
push
adc
push
or
shl
push
fwait
add
sub
call
pop
dec
sub
cmp
test
jecxz
sbb
xlat
xor
jmp
dec
decl
fnsave
jno
mov
test
cmp
adc
cmp
daa
roll
pushl
lock
roll
mov
mov
int
fimuls
jnp
pop
xor
aad
imul
loopne
sbb
pop
cltd
pop
ljmp
fs
jbe
int3
or
adc
inc
xlat
bound
in
adc
push
dec
pushl
mov
dec
xchg
jno
popa
in
rolb
mov
ficoms
scas
outsl
cli
xlat
cmpsl
or
pop
addr16
sbb
xchg
pop
clc
jmp
mov
in
push
pop
push
shl
dec
sahf
cmp
lea
add
es
lret
mov
out
repz
push
mov
ror
shlb
mov
push
pop
movsb
sub
inc
cwtl
xchg
sub
sti
fdivs
push
lods
cld
lcall
out
mov
inc
mov
push
jge
jl
adc
push
inc
xor
fnsave
pop
ret
shll
mov
out
pop
push
adcl
sbb
movsb
mov
lcall
in
icebp
arpl
mov
cmc
push
pop
pop
jmp
cmp
and
inc
stos
fcomp
adc
push
xchg
ss
mov
pop
loop
mov
addb
sub
call
bound
test
jne
lret
push
push
mov
mov
xchg
test
xchg
insb
pop
xor
jle
and
pop
sub
lahf
dec
sub
sbb
dec
mov
incl
add
incl
out
aaa
std
mov
xchg
mov
mov
sarl
sar
mov
pop
incl
cmp
out
call
fidivl
or
cmpsl
ljmp
xor
and
pop
and
or
and
xor
test
push
repz
lea
mov
stc
lahf
push
jnp
jne
pop
enter
jg
cmp
shlb
xchg
cmp
xchg
adc
fwait
in
sti
lret
pop
test
mov
sahf
flds
adc
push
or
adc
and
mov
lock
cmp
sbb
ljmp
rcl
sub
mov
or
dec
push
jmp
and
push
loop
stc
cmp
leave
or
add
sbb
push
ret
push
das
cmp
push
add
xchg
jmp
add
mov
pop
or
notl
jnp
fstl
mov
loope
aad
imull
push
test
dec
pop
arpl
call
cmc
xchg
clc
jmp
scas
cltd
mov
incl
push
and
xor
loope
aam
sarl
pushl
rcrb
repz
mov
ljmp
fwait
sbb
xor
cld
insb
out
pop
or
shrl
jge
mov
outsl
repz
call
fs
orb
mov
arpl
mov
call
ret
mov
push
mov
and
or
sarl
cmc
into
stos
jno
mull
add
ljmp
xor
xorb
and
adc
jnp
cmp
mov
ja
sbb
mov
enter
jae
mov
jle
bound
sbb
cs
xlat
push
pushl
in
cwtl
stos
decl
adc
imul
mov
andb
lcall
inc
int3
out
cld
or
popa
sbb
scas
mov
xchg
jl
push
jmp
je
fisttpll
sbb
adc
in
mov
push
push
ret
rorl
sarl
dec
or
xor
ljmp
fs
inc
outsl
cmpsb
bnd
mov
dec
xchg
lcall
mov
dec
testl
shlb
imul
pop
adc
xchg
leave
add
mov
mov
cmp
dec
pusha
call
mov
bnd
loop
lcall
stc
stos
inc
adc
frstor
lock
xorb
fisubl
push
outsb
enter
fs
rcll
lock
jecxz
fwait
jmp
inc
mov
jmp
loope
xchg
push
inc
ljmp
rclb
xor
lods
jmp
mov
scas
js
cltd
shrl
rorb
std
into
jbe
push
adc
cmp
int3
inc
imul
dec
push
test
out
fstpt
mov
jl
arpl
mov
adc
mov
cmp
push
jbe
cli
xor
rol
iret
push
jge
add
inc
mov
insb
push
pop
out
lahf
add
mov
rcrb
nop
mov
push
sub
sti
jg
jnp
mov
dec
xchg
insb
push
es
decl
or
cmc
call
adcl
pusha
jne
fs
int
mov
lret
stos
mov
add
fcos
lods
fnsave
test
add
jae
adc
pushl
inc
mov
pushl
popa
mov
jmp
cmp
pop
fsubrs
xor
sbb
xor
xor
push
push
jmp
mov
xor
push
pop
pop
and
jae
mov
fsubs
popl
dec
mov
test
xlat
sbb
rcl
inc
xchg
and
aam
pop
les
rorb
add
dec
xor
mov
out
push
cltd
or
repnz
bound
lods
push
mov
add
adc
sbbl
lcall
aad
stos
rcrl
and
test
popf
mov
test
dec
inc
and
ret
add
std
sub
lcall
cld
ljmp
add
iret
lret
mov
xor
loope
aaa
mov
mov
stos
push
xlat
lods
xchg
xor
mov
adc
jp
into
popa
and
cmp
out
cs
repz
jmp
movsb
sbb
mov
sarb
adc
jne
jle
shrb
push
mov
rorb
inc
jp
clc
mov
fwait
leave
call
cmp
pop
inc
sub
mov
adc
je
sti
loope
fucomi
mov
pop
cmp
mov
dec
xor
mov
dec
ja
sbb
outsl
inc
shrb
in
movl
push
add
add
mov
cs
push
dec
jns
xchg
mov
mov
xlat
fbstp
and
adcb
inc
andl
lea
sbb
decl
xchg
out
mov
dec
push
xchg
addr16
xor
int3
push
lahf
pushl
mov
ljmp
dec
jmp
dec
mov
es
into
cmpsl
jg
add
ret
or
dec
cmp
mov
xlat
push
pushf
jl
dec
sub
data16
in
xchg
sti
testb
pop
lea
lret
fsts
notb
out
pushl
idivb
pushl
xor
inc
mov
in
pushf
repz
ret
aas
iret
or
or
add
xor
mov
adc
out
jle
out
sbb
inc
add
jb
lds
mov
add
daa
mov
cmp
mov
flds
pop
incl
insb
psrlq
mov
xor
insl
gs
incl
mov
mov
shr
add
or
mov
pop
jmp
xchg
daa
adc
imul
xchg
scas
js,pt
decl
inc
xor
notl
incl
jnp
mov
imul
or
pop
fbstp
sti
out
push
cmp
mov
outsb
repnz
cmp
sub
adc
pop
sti
je
sub
daa
push
hlt
icebp
lret
inc
repz
rcrl
push
rolb
int3
cs
sbb
push
std
imul
mov
daa
inc
mov
adc
clc
or
mov
mov
out
out
inc
pop
mov
int
rclb
testl
rolb
imul
js
in
cmpsb
decl
sbb
negl
and
lods
adc
pop
stos
sub
cmp
ljmpw
in
and
jge
xor
incl
stc
aas
jo
mov
int
lcall
jnp
push
lahf
inc
add
stc
mov
loopne
jge
add
cltd
rorb
ljmp
mov
add
pop
jp
pop
push
push
mov
sbb
or
nop
or
pop
adc
stos
fstenv
add
sbb
cmp
push
fsubp
ja
cmp
lcall
je
bound
xor
cmp
jg
mov
push
pushl
cld
sahf
sarb
popa
adc
xchg
or
dec
aas
imul
fsubl
shr
jb
pop
jns
int3
push
ds
shrl
daa
add
pop
or
inc
insl
mov
mov
mov
dec
pusha
add
sahf
pop
jge
and
sub
inc
lock
sbb
inc
cmp
jb
lahf
jge
imul
insl
movsb
js
or
pop
insb
dec
inc
xchg
lods
jmp
icebp
sbb
inc
lcall
and
movsl
adc
jl
push
inc
xchg
and
mov
daa
test
lahf
mov
jae
dec
xchg
mov
addr16
cmpsb
mov
insl
sub
pusha
sbb
out
decl
or
arpl
jecxz
pop
out
lret
mov
sbb
clc
adc
pop
incl
xchg
aam
leave
int
test
in
lahf
mov
mov
add
or
sbb
xchg
call
adc
xor
insl
cwtl
jle
call
imul
cmp
dec
mov
add
and
dec
or
mov
inc
cmp
or
lods
mov
lcall
or
push
repz
pop
out
mov
push
and
or
push
jecxz
add
repz
mov
dec
mov
clc
mov
add
pusha
sub
pop
cmp
rolb
jb
fwait
scas
bswap
lret
sbb
xor
pushl
adc
cmp
sahf
loope
push
fdivr
fisttpl
imul
and
mov
adc
xchg
inc
mov
loopne
xchg
hlt
sub
cmp
mov
mov
push
sbb
scas
xchg
cli
mov
nop
fbld
rcr
jecxz
and
mov
xlat
or
push
aaa
out
push
addl
xchg
xor
or
out
into
rcrb
or
add
mov
push
test
jl
mov
int3
decl
test
stos
scas
outsb
mov
insl
cmp
or
pop
leave
push
dec
lea
lods
sbb
mov
shl
mov
outsl
in
jbe
mov
das
movsl
int
in
mov
mov
stos
xchg
jb
mov
and
or
scas
xor
or
adcb
pushf
aas
and
iret
outsl
daa
es
push
out
ret
sti
jmp
sbb
xor
ljmp
insb
call
pop
push
loope
outsb
lahf
pop
mov
cwtl
pcmpgtb
push
jmp
daa
cmp
mov
adc
add
shlb
lds
or
add
adc
decl
leave
call
or
rorw
enter
insb
ja
pop
jle
loope
sbb
loop
pop
xlat
sbb
idivl
pop
adc
roll
imul
movsl
inc
decl
decb
or
mov
adc
or
into
bound
repz
mov
out
mov
dec
aad
subb
inc
jmp
movsl
sarb
imul
adc
sbb
dec
in
ja
loop
fdivs
popf
lock
or
out
add
mov
iret
dec
add
jbe
mov
and
bound
mov
loope
push
inc
pushf
dec
sbb
mov
shll
loop
incb
repz
insb
stos
shl
mov
mov
adc
push
xor
mov
jnp
lcall
int
add
mov
jnp
pop
ret
push
jbe
cli
xor
in
js
add
ljmp
das
dec
decl
in
outsb
lret
pushl
ss
add
rcll
and
adc
sbb
dec
xor
lock
xchg
pop
mov
lcall
mov
loop
cmpsl
cmpsb
push
jge
addb
bound
sar
mov
mov
jmp
mov
sbb
pop
dec
call
pop
mov
incl
xchg
cwtl
mov
in
jl
aas
mov
sbb
sarl
or
add
xchg
cmp
or
mov
addb
popa
add
adc
test
repnz
cmp
lahf
pushl
mov
out
sti
lods
movsl
adc
ja
loop
scas
inc
mov
fcmovb
inc
xchg
pop
jmp
xchg
jo
cmc
pop
lods
or
sbb
in
dec
movsb
pop
sti
jmp
jne
incl
pop
xchg
xchg
mov
jae
fmull
or
aaa
flds
fmuls
pop
pop
gs
dec
mov
push
loopne
pop
mov
or
pushf
pusha
cmp
dec
adc
jle
out
fwait
pop
stos
pop
dec
or
mov
decl
lret
sub
or
mov
inc
dec
adc
xor
ds
pop
int3
mov
bnd
loopne
jmp
sahf
outsl
mov
pop
in
adc
ljmp
push
sbb
scas
cmc
lret
enter
xchg
xchg
adc
jmp
mov
push
ja
inc
sar
sbb
fwait
xlat
push
xchg
in
call
dec
cmp
sbb
js
int3
lods
or
iret
jmp
pop
mov
loop
push
repz
cld
incl
test
dec
repz
jmp
movsb
fistl
mov
or
xchg
jne
cmp
sub
xchg
push
sar
mov
shrl
lret
mov
enter
test
dec
push
add
sub
push
or
or
dec
mov
push
pop
mov
mov
mov
xor
sub
hlt
decl
cmpsl
movsb
mov
mov
push
inc
cltd
xchg
lcall
inc
xchg
mov
cmp
add
add
ret
dec
adc
push
sbb
cmp
sub
lcall
rorl
mov
into
or
pushl
push
push
push
frstor
das
clc
push
adc
jp
or
xchg
sbb
mov
js
leave
mov
mov
push
lret
imull
jnp
adc
ds
sub
fs
movsl
stos
sub
sarl
rcrl
jb
rcl
cmpsb
sbb
add
jns
adc
lods
jle
pusha
fisttps
sahf
add
outsl
mov
insb
lea
das
fbstp
ljmp
gs
sar
mov
outsb
jns
in
mov
inc
push
sub
and
rcr
sub
add
dec
add
stos
push
push
mov
rorl
add
xlat
add
stos
push
scas
call
dec
xor
mov
incl
scas
arpl
push
jno
sbb
dec
hlt
call
or
loop
sbb
shll
mov
decl
loop
and
lods
call
out
mov
cmp
inc
jb
into
dec
adc
push
notb
je
xor
mov
ret
inc
sub
stc
aad
sub
push
ja
push
rcrl
push
rcl
push
imul
push
jp
add
orb
clc
sarl
rorb
mov
int3
dec
push
mov
pop
adc
dec
in
roll
jne
out
insb
mov
xor
push
scas
sti
shlb
dec
dec
push
jno
jmp
pushf
pop
out
pop
push
nop
lea
or
inc
ret
adcb
and
jp
mov
cmc
sbb
stc
mov
neg
int
jge
gs
sar
jnp
bound
pushl
push
lret
outsl
jecxz
incl
jp
out
dec
stos
decl
fs
fidivrl
jae
popa
mov
ss
ljmp
clc
outsl
pop
incl
std
pop
arpl
add
jno
sbb
mov
cmp
jg
fidivrs
pop
mov
cmpsl
jnp
pushl
call
mov
pop
or
je
call
in
push
adc
sahf
shlb
mov
xchg
or
xchg
arpl
int
sbb
sti
fsubl
cmc
lock
push
xor
xchg
mov
mov
fscale
inc
sub
jmp
mulb
fs
in
aaa
data16
lods
adcb
mov
mov
mull
lds
dec
or
stos
iret
pushl
inc
addr16
sbb
wrmsr
repnz
xchg
lods
js
mov
dec
inc
pop
test
jmp
icebp
sar
mov
in
lods
fdivr
lds
loope
pushl
adc
and
ds
rorb
and
fdivr
push
popf
cld
add
xor
mov
lret
ja
push
pop
mov
adc
arpl
cmp
outsb
pop
or
pushl
stos
lret
jg
std
pop
jge
cli
or
mov
push
movsb
push
add
repnz
mov
bswap
mov
mov
mov
test
jnp
pop
dec
mov
repnz
in
es
std
dec
xchg
xchg
or
inc
shlb
test
adc
push
jb
push
aaa
mov
lret
pop
mov
or
cli
ljmp
mov
push
pop
stos
cmpsl
or
lea
and
mov
imul
jbe
movsb
adc
loopne
push
ds
add
cmp
shlb
addl
pop
es
adc
inc
push
jo
js
adc
dec
loopne
fwait
add
loope
lcall
jne
xchg
scas
jmp
adc
in
sbb
mov
jle
out
xchg
in
push
rclb
sarl
fdivrs
das
repz
enter
adc
xchg
add
inc
add
push
push
fucomip
push
cmp
xchg
loop
mov
ret
notl
or
cmpsl
sub
push
movsl
sahf
dec
rcl
shr
insb
push
or
and
call
sbb
pushl
push
das
out
call
mov
frstor
push
xor
cmpsl
daa
scas
sbb
sub
sti
or
ja
outsl
sub
dec
xchg
pop
adc
fstpt
add
xchg
idivl
lcall
jb
lods
aaa
sbb
xor
dec
fistl
aad
xlat
add
jl
add
iret
sbb
mov
outsl
test
ret
lea
pop
cmpsl
lret
pop
add
ljmp
jmp
dec
pusha
ljmp
fldenv
pop
mov
jl
cmp
ljmp
xor
rcrl
add
mov
movsl
cmpsl
xchg
cmp
data16
mov
out
lret
cmp
mov
mov
sbb
int3
ds
notb
xchg
idivl
mov
cs
mov
imul
jns
push
stc
mov
js
push
push
mov
adcb
fdivrp
mov
scas
pop
lahf
or
adc
adcl
daa
cltd
jmp
inc
jge
loope
push
push
xor
push
loop
shlb
xor
dec
ja
or
push
pop
hlt
or
cwtl
test
inc
call
mov
shll
lret
pushl
jge
mov
fdivs
inc
push
out
sti
cmpsl
pushf
lahf
call
imul
call
push
pop
push
sbb
test
pop
cmp
push
pop
sbb
add
cmpps
mov
roll
in
call
mov
jae
mov
imull
stc
call
cmp
popl
int
mov
lock
jnp
sub
sub
xor
mov
loopne
fistps
add
or
adc
fs
jne
jbe
pmulhw
mov
insl
cli
repz
out
mov
pop
or
nop
pop
mov
rorb
in
jbe
ror
loop
sbb
stc
push
cmp
jmp
mov
cli
mov
mov
cmpsl
push
popa
or
xor
aam
mov
lock
cmp
push
jmp
in
xor
push
leave
inc
incl
cltd
sbb
cmp
sub
xchg
out
adc
lcall
fdivr
inc
mov
lock
popf
xchg
push
pop
or
add
cld
inc
push
xorb
mov
inc
jl
xchg
jmp
dec
mov
idivl
cmp
fdivl
jge
mov
xorl
push
in
push
int3
mov
addr16
lcall
jg
js
lret
sbb
addl
lcall
rclb
dec
jo
xchg
lcall
cmp
mov
loope
jmp
cli
xor
fmuls
in
push
and
call
sbb
rcll
dec
jle
mov
stc
sub
pop
push
dec
mov
shll
and
popl
xchg
pop
arpl
adc
shl
bound
cli
and
jl
or
stos
cmp
xchg
fmuls
mov
dec
in
dec
lea
or
scas
es
decl
cmp
mov
inc
aam
add
std
sbb
push
insl
mov
aaa
sbb
out
sti
aam
jmp
fcmovnbe
lods
sub
pop
jge
lret
and
mov
pop
xor
jecxz
pop
repz
mov
jnp
xchg
mov
adc
push
cmp
mov
int
mov
push
jle
jbe
mov
dec
popa
je
push
loop
push
pushl
mov
in
push
inc
std
popa
jmp
mov
or
pop
sub
and
ret
mov
sbb
inc
sub
rolb
iret
hlt
dec
in
sbb
push
mov
scas
jl
push
jmp
adc
cmpsl
xor
inc
imul
add
push
stos
frstor
push
hlt
mov
push
call
or
orb
call
sbb
xchg
cmc
ficompl
mov
push
daa
push
and
inc
aas
das
incl
dec
aas
les
movsl
cmc
jno
scas
mov
adc
mov
push
xchg
ja
incl
ljmp
push
sbb
and
movsl
ljmp
cmp
decl
jb
aam
sbb
xor
pop
imul
or
lret
outsl
jle
fisttpl
and
movsb
mov
ljmp
int
xchg
mov
ret
cmp
dec
aaa
push
mov
mov
push
int3
rcr
shl
dec
clc
pop
sbb
xchg
and
jo
sti
lods
jnp
lods
call
or
stc
movsb
enter
imull
push
jle
or
mov
pop
mov
add
xlat
mov
lret
push
loop
leave
cwtl
aaa
mov
mov
ss
jo
mov
mov
inc
sbb
cwtl
int3
out
adc
ss
cmp
scas
or
xchg
into
jnp
mov
je
jo
pop
inc
out
adc
xor
test
outsl
mov
cmpsb
xor
add
lods
pushf
mov
addr16
lcall
int
decl
or
sbb
popf
cmpsl
arpl
mov
aam
dec
push
xor
and
dec
inc
fnstenv
mov
cmp
or
cltd
fcompl
call
test
out
sbb
jne
dec
fisubrl
arpl
insb
mov
add
lahf
push
and
mov
xorb
loopne
and
xor
aas
jbe
or
int
or
int3
fmull
pop
sbb
or
cmpsb
mov
jnp
sub
dec
xor
lcall
dec
fwait
add
cltd
xor
xchg
insb
adc
mov
cmpsb
pushl
mov
cmp
mov
cmp
mov
std
mov
arpl
sub
jno
and
and
push
pop
cmp
call
lods
cli
sub
mov
mov
or
decl
mov
das
pop
inc
nop
jmp
in
sub
mov
sahf
jb
pop
push
mov
outsb
psubq
es
pop
aas
in
mov
fdiv
cmp
lock
cmpsl
jle
incl
pusha
out
ljmp
subb
inc
dec
push
jmp
sub
ja
fs
subl
into
pop
decl
xor
adc
mov
fidivl
cmp
fsubl
pushl
mov
inc
aam
js
adc
es
mov
lret
xchg
fwait
jmp
icebp
cmpsl
lock
lds
pop
sbb
out
lahf
and
lret
dec
cmpsb
clc
imul
lock
cld
mov
cmp
mov
cs
ds
pop
ja
test
into
jmp
lods
jne
or
sbb
dec
dec
push
cmp
test
push
xor
add
call
repnz
and
push
mov
decl
jecxz
pop
sti
int
xor
xchg
push
in
das
aaa
mov
jg
xchg
mov
ljmp
jg
test
push
push
dec
sahf
jne
adc
aam
mov
xchg
shrl
dec
push
shll
lahf
pop
idivl
call
cmp
dec
jecxz
push
push
repz
test
stos
or
decl
sti
sbb
adc
adc
cmp
push
pop
lahf
es
sahf
xchg
mov
mov
xorl
jecxz
aam
pusha
inc
inc
loope
xchg
ja
or
cwtl
xchg
in
lcall
jmp
mov
sbb
pushf
popf
test
rclb
pop
int3
icebp
hlt
xchg
aam
mov
lods
add
xchg
jns
cltd
xchg
inc
shlb
movups
inc
mov
xor
xchg
repz
xor
pop
ljmp
insb
ret
imul
outsb
xlat
xorl
dec
in
pop
out
jg
jg
ret
pop
xchg
iret
cld
xlat
push
mov
jb
push
lock
add
push
popf
adc
dec
xchg
addl
jg
xor
leave
in
je
push
insl
fwait
ja
shlb
lret
dec
decl
lcall
incl
jmp
out
test
ret
add
pop
cmpsb
pusha
sbb
adc
push
push
pop
sti
or
shrl
ret
iret
loopne
outsl
mov
fs
and
pop
jmp
mov
dec
mov
cmp
ret
adc
outsb
daa
cmp
iret
ljmp
mov
test
cld
cmp
dec
add
adc
cmpsb
mov
add
or
mov
scas
adc
mov
rcrl
push
xchg
ja
daa
or
fldcw
xor
test
and
dec
push
int
out
add
mov
test
mov
sbb
outsl
stos
jns
mov
and
jmp
inc
js
into
out
adc
cmp
add
pop
scas
fwait
je
xchg
js
daa
dec
dec
inc
inc
mov
jecxz
push
cltd
mov
cmpsb
sub
nop
mov
or
test
sti
push
outsl
cmc
movsl
loop
adc
pusha
mov
mov
mov
sahf
inc
push
stos
xchg
testb
loope
test
or
aam
adc
add
scas
sti
jbe
pcmpgtd
std
in
es
jns
mov
xchg
xor
loop
xor
jno
or
mov
cltd
and
outsl
cmpb
and
sbb
nop
xor
push
mov
mov
int
fadd
gs
decl
rcrl
dec
xor
jae
loopne,pt
push
mov
ficompl
int3
cmpsb
jae
fs
push
jbe
jb
adc
push
push
inc
or
dec
out
jae
iret
leave
xor
mov
nop
and
mov
icebp
mov
xchg
jno
add
sbb
popf
or
adc
jbe
fidivrs
loopne
cli
jg
dec
sar
sbb
cmc
movb
inc
pop
rorl
out
negl
push
dec
in
or
sbbb
and
popa
cmp
sbb
jae
jne
es
andl
push
xor
lock
bound
int3
lds
pusha
sar
insb
addb
popf
sub
inc
xor
fists
xorb
and
dec
mov
pop
lcall
imul
call
jb
fadd
xchg
fiaddl
popa
int3
pop
push
in
dec
mov
mov
out
push
adc
sti
sbb
cs
stos
jmp
add
insl
fadd
nop
cmc
aam
cli
sbb
mov
and
out
dec
adc
lds
mov
sub
sub
out
std
pop
mov
and
add
sub
jno
adc
sub
fiadds
cltd
call
lret
pushf
lret
das
aas
lds
adc
in
jl
dec
push
mov
lahf
pop
add
mov
jmp
test
xlat
ret
pop
add
cmp
in
mov
ljmp
inc
dec
sub
sbb
jg
dec
inc
push
and
enter
outsl
and
stc
lahf
or
call
shrb
in
add
xchg
jp
jnp
sbb
test
push
cmp
ror
jmp
hlt
mov
repz
pop
inc
shlb
pop
pop
push
loopne
rorl
repnz
inc
jo
sarb
dec
inc
incb
popf
fwait
pop
lea
adc
incl
push
xchg
push
cmp
dec
mov
add
ret
loope
jg
adc
xchg
pushl
enter
jle
in
mov
xchg
push
inc
scas
cmc
fcmovnbe
pop
loope
cmp
test
decl
pop
cmp
push
and
decl
lret
xor
mov
mov
pop
mov
ret
call
push
xchg
imul
adc
pusha
fcomp
dec
inc
lcall
or
pop
push
mov
movsb
js
mov
pop
jbe
fidivl
jo
jl
mov
or
rorb
lahf
sbb
inc
in
ljmp
inc
stos
mov
push
inc
mov
sub
push
fstpl
dec
outsb
mov
add
jmp
push
mov
sbb
loop
lcall
mov
rcr
or
out
jo
mov
cs
outsl
dec
jmp
lea
ljmp
xor
push
ljmp
sti
negb
pop
or
ret
outsb
add
test
mov
pusha
sub
idivb
pop
decl
cld
xor
out
js
insl
jmp
or
neg
cmp
or
out
mov
or
or
fildl
jle
lcall
clc
ds
ret
fs
jnp
adc
test
movsl
loopne
mov
add
sarl
pop
mov
adc
inc
fidivrl
out
in
add
mov
stos
into
dec
sarl
or
mov
ds
inc
xchg
jg
jb
or
imul
call
imul
cmpb
jns
fldcw
clc
mov
arpl
mov
div
push
mov
ljmp
psrlq
ljmp
add
mov
pop
lret
imul
mov
sub
sbb
push
outsl
push
jae
inc
ret
loop
or
ljmp
pop
call
mov
sbb
loopne
push
jmp
or
roll
andl
mov
int
inc
call
jecxz
dec
movsl
scas
paddsb
or
out
xchg
xchg
incl
push
inc
adc
shrb
stos
jbe
mov
test
or
clc
out
push
idivb
xchg
pushl
ja
xlat
pushl
adc
jmp
jb
or
adc
adc
mov
psubsb
jmp
pop
sub
ljmp
cmp
movsb
dec
in
jecxz
cmc
xchg
push
jmp
outsl
sahf
inc
add
adc
xchg
daa
pop
cli
es
push
and
xchg
add
fsub
mov
push
call
mov
pop
fcos
pusha
xchg
insb
pop
sbbb
push
sub
stos
or
jle
adc
dec
lods
add
mov
pop
xor
fimull
xchg
inc
inc
jns
or
rolb
adc
mov
sub
mov
clc
rolb
push
sbb
stos
cmp
rcl
fucomip
dec
jo
repz
icebp
pop
ja
lcall
jecxz
pop
fsub
add
jae
out
and
xlat
or
add
xchg
pop
cld
jle
outsb
rclb
sub
out
mov
mov
inc
sub
fmul
out
mov
stos
cmp
lret
lock
pop
pop
and
scas
push
adc
test
jno
and
or
lahf
repnz
mov
pop
ds
or
call
in
adc
mov
mov
lcall
jg
dec
jb
std
push
mov
add
flds
xlat
or
cmp
mov
call
jp
fdivrp
and
inc
adc
jecxz
scas
popf
repz
dec
imul
inc
cltd
dec
mov
adc
ja
mov
pop
jne
sbb
sub
ljmp
shlb
jg
pop
jmp
sbb
mov
push
mov
jo
cld
sti
lods
js
adc
and
mov
decl
and
xchg
mov
pop
jecxz
pop
mov
jle
inc
add
jmp
pop
test
mov
aaa
mov
xchg
lcall
push
inc
mov
push
fistps
push
add
push
cmp
ret
adc
bnd
jp
inc
xorl
fisubl
mov
std
cmp
pop
xchg
pushl
mov
lcall
jl
test
decl
loop
shll
xchg
push
xchg
pop
pop
scas
mov
sahf
and
aaa
ja
incl
ss
mov
jae
in
mov
stos
add
int3
xor
pop
mov
adc
cs
jb
mov
sbb
xor
mov
xor
shl
test
add
test
and
pop
push
and
xchg
popf
xor
std
jmp
cmp
addb
mov
outsb
fimull
sub
push
cmp
enter
add
lods
stos
mov
cltd
mov
insl
pop
cmc
cmpl
cmp
mov
add
push
and
cmp
enter
ljmp
stos
jle
pushf
cmpsl
lcall
or
test
and
dec
pop
testl
cmp
jp
out
in
push
jns
jg
and
testb
int
out
or
call
aam
into
xchg
mov
lret
call
daa
adc
inc
sti
aad
xchg
fimuls
push
adc
nop
rorl
cld
std
mov
pop
gs
ficoml
pop
clc
adc
mov
mov
mov
xchg
adc
push
cwtl
mov
rcrl
add
sti
outsb
xchg
divb
push
loopne
xchg
cwtl
push
push
test
adc
repnz
incl
aam
loop
ud0
fwait
stos
dec
les
pop
insw
lret
jp
cmp
movsb
jbe
dec
outsl
rol
rcll
push
repz
mov
int
cmc
xor
mov
sahf
enter
jns
xor
inc
push
dec
loopne
xchg
xchg
cltd
fcmove
stos
sar
imul
cmpsb
xor
sbb
mov
dec
test
pop
nop
loope
ljmp
arpl
mov
inc
loop
sbb
adc
dec
cmc
cmpsl
jmp
das
pop
mov
or
inc
mov
cmp
xchg
cmp
mov
inc
pop
push
aaa
add
lcall
shll
shl
loopne
xchg
push
out
bswap
push
dec
fadd
mov
lock
sub
decl
mov
or
cmpb
push
test
push
shl
pushl
mov
int3
js
add
pop
sub
push
inc
jge
push
or
cltd
in
pop
xchg
pushl
icebp
hlt
les
es
call
mov
or
lret
pop
and
bndstx
mov
xor
adc
lcall
outsl
pop
pushl
test
push
daa
dec
leave
mov
gs
in
cmp
xchg
sub
loopne
pop
mov
adc
fwait
out
sub
test
inc
notl
ljmp
inc
iret
lret
jmp
and
fcompl
mov
je
inc
adc
add
push
xchg
decl
sti
repnz
incl
mov
pop
call
test
mov
loop
in
aam
cmp
orps
mov
add
pop
ja
xchg
das
jg
push
sub
fdivr
pop
aaa
xchg
or
lahf
aam
push
mov
mov
push
subl
incl
jge
and
cmp
or
repz
and
inc
movsb
and
ljmp
lods
pop
xchg
jne
in
sub
mov
and
push
add
fwait
mov
mov
adcl
adc
ret
adc
jb
xchg
push
mov
aaa
inc
xor
jl
jmp
push
mov
cmp
shll
mov
xor
sbb
pop
cwtl
xlat
rol
mov
incl
mov
pop
clc
push
cmp
mov
and
movsb
or
aam
mov
jg
faddl
jnp
push
mov
ret
xchg
mov
pusha
scas
incl
sub
inc
incl
popf
mov
jnp
jmp
in
mov
jmp
scas
int3
push
jl
adc
ds
inc
test
dec
dec
jle
cmc
cld
xor
scas
jns
or
cli
push
dec
push
pop
test
add
dec
rcrb
mov
dec
push
mov
xlat
sub
push
into
add
mov
cmc
or
xor
cmp
leave
pop
imul
xor
cld
iret
push
adc
sub
mov
push
sti
and
movsl
and
ljmp
push
xchg
std
mov
ret
insl
shrl
inc
sub
add
push
or
leave
push
flds
or
addr16
mov
mov
ror
adcl
sub
mov
or
mov
leave
lcall
jle
sub
lret
add
notl
or
mov
int
dec
jns
sbb
sub
pop
lahf
out
call
scas
jg
push
fxch
cld
sub
push
mov
je
jnp
cmp
inc
lcall
das
aad
inc
and
sarb
push
stos
rcrl
rcrl
outsb
mov
xchg
or
ss
mov
enter
cltd
xchg
call
clc
je
mov
mov
adc
in
mov
fistl
dec
int
pusha
sarl
leave
lahf
xchg
xchg
lock
mov
xchg
push
xchg
sbb
sbb
call
loop
jmp
mov
stos
call
test
incw
addl
xor
stc
rcll
cmp
mov
int
scas
in
sbb
call
sub
xchg
mov
aas
incl
scas
pushf
inc
in
xorb
jbe
xchg
lcall
out
loopne
dec
lock
nop
mov
sbb
xchg
arpl
or
sahf
sub
popa
cmp
loope
cli
movsl
mov
cmpsl
sarb
repz
inc
lcall
lret
mov
pop
mov
icebp
and
insb
push
jmp
loopne
mov
popa
in
and
es
fidivrl
push
pop
sub
lock
fsub
xchg
callw
int3
iret
jp
push
pushl
cmpsb
adcb
fsubrl
inc
imull
pop
mov
mov
pop
add
xchg
mov
call
fimull
add
xchg
fxch
clc
adc
lea
lods
mov
fildll
js
push
int3
add
fwait
push
jmp
icebp
adc
sahf
sar
lds
aam
sahf
jae
fstl
push
stc
xchg
dec
and
mov
idiv
cmp
adc
mov
call
outsb
mov
sub
add
mov
cmp
icebp
xorb
sub
sbb
pop
shrb
push
adc
and
sarb
jmp
roll
pop
stc
or
fs
push
xor
test
mov
ss
add
sahf
mov
in
xchg
inc
or
lcall
pop
gs
mov
push
mov
aaa
push
sti
or
adc
mov
push
aas
cmp
sub
jp
je
mov
in
mov
insl
jmp
mov
mov
sbb
push
incl
or
sub
faddl
cmp
out
scas
rolb
pop
mov
push
xchg
cmp
lret
je
push
inc
imul
push
pop
call
psraw
adc
out
xlat
movb
mov
push
sbb
nop
mov
scas
incb
sbb
xor
and
rclb
xchg
test
or
inc
aaa
cmc
mov
test
xchg
xchg
cli
frstor
mov
inc
aas
cs
fbld
nop
bound
sub
pop
inc
fisubrl
or
jmp
pop
out
imul
inc
rclb
ds
sti
pop
push
js
mov
jl
cs
sbb
decl
lock
push
xor
push
rcl
mov
or
ja
mov
test
addl
xor
add
inc
movsl
mov
lcall
cltd
scas
push
pop
jp
or
jbe
sbb
xor
push
adc
mov
iret
into
lods
outsl
jmp
pop
fnstenv
and
push
sti
or
int
jmp
xor
add
loop
jmp
outsb
scas
sub
mov
stos
cmpl
pushl
in
fsts
testl
stos
inc
shlb
insl
and
sbb
loope
adc
imul
jbe
dec
or
mov
sub
pop
ljmp
sub
nop
sbb
mov
lahf
xlat
pop
clc
adc
mov
xchg
cwtl
push
or
mov
imul
xor
and
lcall
out
out
push
aam
int
scas
push
movsb
call
jae
xor
jmp
in
cmp
daa
loop
ljmp
lret
fdivr
aad
insl
mov
push
fsubs
jp
decl
cmp
mov
add
adc
inc
das
fdivr
icebp
in
jo
clc
rorl
mov
dec
shrl
pop
movsl
mov
das
in
aaa
nop
loop
dec
sub
adc
add
in
xchg
jb
lock
decl
aaa
xchg
test
xor
fcompl
mov
loop
dec
idivb
pextrw
push
cmpsl
push
xchg
in
and
addb
adc
and
mov
rcll
mov
stc
xchg
mov
decl
testb
jnp
pop
dec
sub
or
add
stc
add
xchg
adc
xor
dec
es
fs
out
fdivs
and
pop
ss
mov
or
mov
bound
arpl
push
dec
jno
roll
mov
fidivrs
cld
lahf
cmpsl
or
fs
push
addl
pop
push
or
push
pop
xchg
and
cmp
ud0
in
ja
jo
push
int3
lcall
xchg
xchg
mov
into
sti
xchg
int
fistl
dec
aas
clc
cwtl
faddl
iret
inc
push
xchg
inc
arpl
adc
movsl
pusha
dec
ficoms
sbbb
push
sbb
push
jg
sub
push
mov
jne
fisttpl
pop
decl
jge
stos
push
adc
jmp
mov
incl
aam
pusha
mov
mov
xor
fwait
imul
lcall
mov
test
jnp
pop
jmp
jo
sub
lds
cld
pop
jb
cli
jae
xchg
lods
test
cmp
repnz
jbe
pop
rcr
mov
cld
out
push
push
xchg
jecxz
push
nop
mov
loopne
fimuls
or
cli
jmp
cmp
or
xlat
test
sub
lret
jns,pn
pop
cmpsb
aad
decl
inc
pop
sbb
rcl
lret
jno
repnz
jo
mov
incl
mov
or
jp
hlt
std
fdivr
sbb
push
mov
pushl
rcrb
outsb
jg
inc
fs
scas
stos
dec
aaa
hlt
jle
call
mov
jae
imull
les
xchg
pop
enter
jp
sbb
bound
jmp
test
repz
into
jmp
push
rcll
ds
sub
sarl
mov
inc
inc
cmc
inc
fwait
jp
cmp
push
push
mov
jae
mov
notl
inc
lcall
loope
jg
or
call
xchg
cmp
dec
ficomps
push
cmc
jg
mov
iret
lcall
bnd
inc
sub
fwait
jnp
test
loopne
mov
push
sti
in
xor
xchg
fistl
ja
test
repz
inc
mov
jmp
dec
mov
sarl
stos
and
dec
mov
movsl
stos
or
into
adc
mov
bound
sub
aad
mov
xlat
dec
inc
fldl
mov
mov
dec
ret
scas
leave
ljmp
sar
ja
push
popa
push
imul
add
add
xchg
movsl
xchg
and
mov
push
xor
jb
mov
test
mull
add
decl
push
or
sbb
inc
iret
mov
mov
scas
lea
jno
and
adc
pop
cmpsb
decl
push
fwait
xchg
or
dec
ret
popf
xchg
outsb
mov
push
sub
ds
cmp
aas
push
fscale
ja
mov
stos
outsl
push
aam
repz
popa
add
sbbl
adc
shll
incw
sub
cmp
cs
mov
jae
push
pop
cltd
sbb
inc
pop
add
or
ja
pop
inc
pop
push
dec
imul
add
rcll
inc
push
insl
iret
jmp
cmpsl
dec
addl
sti
aam
scas
dec
sbb
into
int
jns
mov
push
pushl
xchg
daa
mov
push
mov
aad
clc
test
jb
xor
aam
mov
sub
clc
into
jmp
cs
rolb
mov
fisttpll
xor
xchg
lcall
xchg
mov
or
xorb
data16
scas
pop
xchg
push
jbe
call
xor
test
add
in
adc
cmpsl
cli
orps
mov
mov
push
sub
jmp
xor
xor
xchg
ret
mov
outsl
shl
gs
ljmp
pop
xor
sub
loopne
pushl
incl
cmp
fdivr
stc
jbe
dec
mov
lcall
mov
fidivrs
xor
adc
xchg
xchg
nop
je
lret
mov
mov
xorb
adc
sbb
xor
or
call
ficoms
adcb
cmpsl
add
xor
jmp
es
incl
mov
mov
ret
mov
cmp
jg
in
push
add
inc
push
pop
pop
sti
sahf
hlt
dec
mov
push
mov
scas
inc
es
into
aas
ljmp
pop
lret
fsubl
or
ljmp
inc
test
and
mov
call
push
lods
cmp
mov
sub
call
push
scas
sti
jmp
subb
push
mov
int3
push
test
std
add
ljmp
fisubrl
xchg
jmp
icebp
sbb
xor
push
iret
js
sti
sub
outsl
ljmp
dec
stc
mov
xchg
icebp
jmp
or
or
jnp
cltd
mov
mov
cs
jl
dec
in
pushl
adc
sti
jae
pop
xchg
dec
mov
inc
cmp
pop
add
mov
xor
dec
jmp
in
in
cltd
or
mov
shlb
cmpb
mov
insl
mov
jle
push
push
inc
jp
scas
in
mov
dec
stc
sbb
mov
lds
jmp
test
clc
gs
inc
js
xchg
lods
mov
push
idiv
mov
xchg
icebp
adc
sti
mov
pop
pop
and
decl
jg
dec
hlt
push
mov
lcall
or
shl
xor
pushl
inc
cmpsl
jp
inc
cmp
and
fmulp
push
cwtl
jecxz
daa
aad
or
mov
es
push
decl
inc
jne
loope
sub
popa
pop
sbb
jo
lea
sub
fcomps
lret
sti
push
imull
mov
rolb
add
rorl
or
xchg
adc
push
sub
shll
mov
or
fstl
cmp
jle
rclb
push
hlt
call
add
test
out
int
push
fnstsw
rolb
iret
mov
inc
push
xor
in
mov
cmovb
repnz
sahf
sub
sub
xlat
ret
shr
jge
in
or
fisubrl
or
and
pop
mov
das
out
cltd
xchg
pusha
fists
frstor
cmc
cmc
pop
cld
mov
pop
leave
adc
fdivr
push
test
icebp
ja
mov
adcb
repnz
xor
add
movsl
mov
push
mov
and
call
test
xchg
mov
fistl
imul
cli
lret
inc
pushf
or
dec
sbb
cmp
decl
lods
mov
push
ljmp
and
xchg
or
ret
push
cmp
ljmp
mov
pop
cmp
push
fldl2t
ja
add
add
mov
or
aas
call
xorl
test
call
or
daa
lcall
enter
insb
dec
nop
and
sub
xchg
xor
xlat
fisubs
sub
inc
mov
imul
jns
in
imul
into
sbb
inc
add
mov
dec
pop
insb
push
push
add
ljmp
push
inc
jo
adc
push
sti
insb
mov
cmpsb
pop
pop
shll
test
jg
incl
incl
lock
cmp
ret
and
mov
sub
push
mov
dec
sbb
dec
fdivrl
push
mov
add
mov
ret
cmp
addr16
inc
pop
test
push
cmpsb
sbb
mov
push
add
movsl
and
stos
rcrl
sub
inc
add
call
aaa
xor
loopne
shrl
fidivl
mov
mov
or
push
jnp
push
xchg
inc
sbb
leave
xor
push
xchg
insl
add
outsb
data16
or
cmp
sub
pop
incl
lcall
mov
jp
push
and
nop
jmp
add
xchg
aam
out
add
aas
push
cmp
push
and
cli
repz
lcall
push
add
ljmp
bound
dec
testl
sub
in
dec
cs
mov
sahf
mov
ds
popa
jle
xchg
xchg
aam
aas
jno
cmp
inc
mov
lock
shrb
pusha
or
push
cmpb
icebp
sub
sub
shr
xchg
movsb
sti
mov
push
lods
shrb
xor
mov
imul
adc
std
sub
ljmp
repnz
pop
pop
jae
dec
mov
mov
pop
decl
js
mov
aaa
sbb
das
gs
pop
test
ja
mov
arpl
mov
nop
lea
dec
or
jge
mov
or
mov
imul
popf
cmp
mov
cmp
push
fwait
dec
iret
xchg
aam
mov
push
stos
test
jge
mov
neg
pop
call
sti
mov
push
mov
fbstp
push
or
inc
push
movsl
add
lahf
cwtl
jne
pop
mov
scas
lea
test
or
mov
xor
push
jge
xor
std
xchg
xor
add
mov
jp
es
cvtps2pd
push
fs
ss
das
or
in
fisttpl
xor
pop
lods
loopne
dec
les
push
popa
pop
mov
lcall
and
cmp
inc
test
dec
xchg
in
movsb
repz
or
in
and
dec
jne
xchg
lea
pop
shrl
rolb
jno
push
fwait
inc
imul
jmp
push
rorl
popa
jo
jae
ret
mov
push
in
filds
xchg
or
jmp
add
ficoms
sar
mov
jle
sbb
aas
lcall
aam
inc
jnp
dec
hlt
imul
mov
jg
dec
cmpsl
andps
mov
push
pushl
sarl
incl
or
add
inc
notl
push
xlat
cmp
mov
sbb
dec
jns
cmp
out
push
bound
or
mov
enter
clc
push
push
push
mov
lcall
repnz
xor
fnstsw
add
mov
cld
add
sbb
xchg
in
daa
ja
dec
movhps
cmp
decl
cmp
in
adc
push
mov
imul
mov
push
hlt
faddl
or
test
sbb
int3
mov
icebp
or
jnp
call
call
mov
outsl
lea
imul
lock
mov
xor
gs
xchg
mulb
add
xchg
dec
outsb
cmp
mov
jle
push
sub
into
add
mov
clc
incl
aam
out
stos
and
imul
insl
sbb
incl
adc
dec
sub
sbb
add
and
dec
jmp
insb
sub
push
jle
pop
dec
lcall
push
shl
ds
int3
addr16
mov
mov
frstor
and
or
idivb
jmp
roll
jge
push
out
mov
add
add
cld
ficoml
push
incl
hlt
daa
xchg
aad
mov
adc
dec
int3
pushf
cmpsb
aaa
scas
jnp
imul
jnp
lcall
inc
mov
pop
mov
icebp
sbb
popf
scas
cmp
mov
rcrl
push
cmp
dec
jne
dec
aaa
int
rcl
dec
bound
xchg
adc
and
lret
or
gs
sbb
test
dec
in
iret
popa
jmp
imul
pop
and
stos
cmpsb
andl
jmp
enter
out
jmp
addr16
xor
movsl
jmp
stc
int
mov
ljmp
xor
gs
movsl
data16
jnp
mov
xor
jb
loopnew
xor
add
mov
decl
out
mov
call
adc
adc
xchg
jg
ja
stos
divb
nop
or
sub
arpl
pop
push
add
pop
mov
sbb
or
fisubs
fwait
xchg
cli
and
gs
sub
loopne
mov
adc
stos
pop
cmp
popa
jnp
sarl
in
sub
and
adc
cmp
mov
popa
pop
inc
xchg
add
mov
int3
scas
aas
xlat
iret
pop
fsubl
in
mov
push
ror
pop
test
pusha
std
inc
adcb
subb
sub
pop
dec
sti
add
lods
dec
popa
xchg
dec
rcl
js
ljmp
mov
cs
imul
dec
ficompl
std
add
jmp
jecxz
dec
mov
decl
dec
add
js
shl
je
sbb
mov
mov
stos
add
icebp
mov
adc
lds
rcrl
repz
sar
mov
and
adc
cltd
pushl
cld
mov
mov
mov
lcall
xchg
adc
push
push
out
es
popa
or
jmp
outsb
xchg
xchg
lret
decl
and
inc
push
mov
xor
push
stos
add
push
out
repnz
orb
lea
push
test
bnd
xor
xor
adc
std
hlt
and
mov
cmp
pop
or
cwtl
jg
jbe
push
aas
mov
aam
jae
or
or
mov
sbb
repz
cmp
sub
frstor
adc
mov
push
sub
push
loopne
divps
rcl
outsl
dec
jno
fsubr
xor
sub
mov
stc
lret
mov
jo
aam
cwtl
adc
or
inc
xlat
push
outsb
adc
xchg
shlb
mov
or
xlat
pop
push
scas
ja
mov
and
int3
sbb
dec
mov
rclb
inc
std
hlt
call
push
fidivl
push
jae
pop
add
popf
xchg
and
push
dec
ja
xchg
aas
or
insb
or
mov
or
ficoms
mov
daa
jge
incl
jmp
adc
mov
test
test
add
loopne
or
das
xchg
mov
cmpsl
std
or
fstpl
mov
cmc
adc
icebp
scas
imul
xor
xor
call
push
stc
jb
dec
cli
jns
stos
push
mov
mov
movsl
dec
leave
push
mov
push
out
jl
outsb
pop
pop
sbb
daa
loop
fisttpl
pop
push
pushf
leave
nop
lahf
dec
jecxz
xor
shlb
ljmp
and
xor
xor
ljmp
cmp
push
and
scas
std
sbb
bound
orb
std
cmp
push
jne
mov
push
test
adc
insl
cli
mov
pop
adcl
dec
adc
in
push
imul
cmc
shll
cld
bound
enter
insb
push
cmpsl
add
jle
push
push
sbb
xor
ds
scas
jp
cmpsb
or
cwtl
shrl
mov
imulb
add
jns
xchg
cli
jmp
xor
push
cmpsl
jmp
dec
aaa
mov
test
shrb
jmp
push
fadd
pushl
loop
pop
mov
mov
sub
pop
decl
xchg
in
mov
adc
pushf
shrb
xlat
pop
rorb
push
mov
add
in
or
add
cmp
mov
mov
aaa
xchg
pop
push
xchg
jno
adc
dec
xchg
test
rcll
xchg
xchg
add
xchg
dec
xchg
cmc
jl
nop
movl
dec
adc
test
test
inc
loop
call
pop
stos
decl
push
data16
ficompl
dec
dec
call
xor
mov
stc
iret
jae
mov
je
mov
movsb
jnp
push
sub
clc
jne
xor
ret
add
or
or
cmp
ss
fidivrs
push
mov
push
sarb
lcall
lahf
fwait
nop
adc
out
mov
lcall
jno
in
sub
push
sbb
mov
pop
out
fiadds
cli
sti
es
cmpsl
jmp
ljmp
jmp
add
pop
xor
xchg
cmp
jae
or
sub
jnp
jmp
push
and
mov
popa
dec
push
fwait
xchg
adc
es
or
ds
mov
mov
dec
push
dec
xchg
mov
ljmp
enter
iret
scas
int3
adc
xor
jb
inc
pop
imul
sti
jnp
pop
lods
push
sub
fwait
mov
outsb
ja
jge
mov
adc
movsb
aas
inc
jmp
aaa
fiaddl
and
call
je
enter
lcall
stos
adc
dec
push
xlat
jmp
xlat
mov
lods
ja
add
std
in
jmp
lds
or
jo
dec
push
shlb
adc
int
jne
fmuls
je
cld
ljmp
stos
sub
mov
pop
mov
dec
sub
lods
jae
dec
test
out
cmpb
leave
nop
out
test
or
lret
lahf
push
decl
mov
nop
ljmp
xor
sar
dec
fisubl
adc
mov
jmp
hlt
test
push
popa
pop
jmp
mov
in
or
std
push
stos
xchg
rcrb
push
pop
lret
sub
out
push
sbb
ja
aaa
call
sbb
push
jecxz
lods
jmp
call
cmp
jp
push
xchg
test
cmp
fidivs
pop
mov
andl
out
jb
jne
std
cmp
pushf
incl
xchg
incl
std
fwait
push
scas
jp
call
es
or
ror
inc
adc
inc
xchg
mov
mov
jnp
mov
push
in
mov
out
sbb
mov
sub
pop
enter
push
aam
mov
testl
decl
lret
inc
call
adc
fisttps
cmp
jb
shl
stc
push
mov
adc
xchg
push
xchg
dec
ss
lcall
and
cs
inc
xchg
stos
mull
cmp
int
jl
in
fldt
sti
add
and
hlt
cmp
scas
dec
nop
xchg
leave
inc
je
push
pushl
cmp
inc
movaps
rcl
xor
popa
pusha
mov
or
add
fdivl
movsl
and
sbb
push
mov
sahf
sbb
xor
add
or
adc
jo
mov
outsl
cmp
mov
lea
test
ljmp
jp
cmp
mov
cld
outsb
call
pop
sub
out
cmp
add
lea
push
stos
shrb
loopne
insl
fsubrs
orl
push
dec
adc
dec
call
and
int
pushl
enter
insb
out
movsl
jmp
loope
sbb
or
leave
clc
add
jp
shl
jmp
xchg
mov
imul
mov
and
sub
dec
out
xchg
sub
add
pushl
dec
or
es
xorb
ret
inc
mov
daa
xor
jmp
aad
insb
jmp
push
add
cmpsb
or
cmp
imul
ja
ds
bsr
fsub
jnp
jne
in
mov
mov
inc
dec
std
sub
test
adc
or
xor
cmc
inc
arpl
sbb
call
ja
mov
incl
mov
orb
or
sbb
ud0
mov
stos
push
popa
sti
mov
data16
inc
and
call
test
cld
stc
jle
ljmp
loopne
call
gs
inc
or
call
fdivl
adc
add
cltd
hlt
mov
mulb
add
sti
adc
push
adc
mov
adcl
cld
and
jno
out
negb
sbb
in
xchg
std
and
adc
adc
fwait
cli
shl
jmp
insl
pop
or
add
lret
inc
inc
jmp
loop
sti
push
out
incl
dec
push
sarl
sbb
push
xchg
inc
in
es
dec
lods
aas
movsb
stc
jo
fsub
std
sbbb
xchg
xchg
ljmp
pusha
mov
push
cvtps2pi
sahf
dec
arpl
shlb
sti
out
pop
jmp
lods
or
push
mov
pop
inc
repz
jge
pop
lcall
adc
loopne
inc
cmp
adc
fisubrl
adc
pop
mov
xor
jns
pop
cld
push
loop
cli
dec
mov
lds
ret
push
add
mov
lcall
inc
rcrb
push
adc
and
mov
dec
jmp
mov
fstl
sti
cld
jns
loop
inc
loopne
mov
shll
sub
or
out
push
ret
add
adc
xchg
jno
repz
pop
add
xor
shll
mov
or
insb
in
and
repnz
shlb
push
mov
sub
sbb
push
sbb
lods
pop
shlb
loopne
xchg
icebp
imul
mov
sbb
xchg
jne
lock
push
adcb
adc
push
dec
push
hlt
decl
aaa
inc
fwait
lret
aam
pushl
adc
push
jns
lods
push
out
les
lret
jmp
jle
jp
cltd
lea
cmp
xor
adc
sti
mov
shl
mov
dec
or
in
jne
fisubrl
adc
rcrb
adc
shll
sbb
lea
rcll
jg
shll
nop
in
adc
mov
inc
sbb
pushl
or
add
mov
imul
mov
out
mov
sbb
repnz
push
jmp
daa
push
push
mov
fisubrl
push
insb
inc
push
gs
xchg
fstl
cmpsl
inc
jge
loopne
adc
in
adc
popf
or
inc
ret
adc
fldl
pushl
xor
xchg
aad
mov
or
rcll
or
lret
or
int3
jp
jmp
cli
dec
imul
add
inc
scas
cmpsl
dec
std
leave
mov
and
pop
ja
sub
push
iret
push
adc
dec
lcall
cmp
jmp
mov
push
stos
stos
sbb
pop
pop
pop
sbb
jae
mov
jnp
mov
fistps
lods
imul
sub
and
int3
stc
xor
cld
and
jge
inc
xchg
jmp
stos
rol
lds
outsb
jmp
sbb
decl
pop
cmp
mov
lods
stos
sarb
neg
insl
mov
push
orl
adc
sbb
les
mov
and
adc
adc
ljmp
jle
cmp
add
call
popf
xlat
outsb
out
divl
repz
ds
jno
sbb
jns
jmp
cli
xchg
mov
push
out
jle
add
xlat
mov
loopne
ror
or
je
or
inc
inc
stc
decl
jp
push
imul
cmpsb
loope
adc
push
imul
push
add
inc
push
das
jns
mov
dec
loop
incl
ss
pop
lods
push
mov
xchg
and
dec
data16
call
aas
xchg
mov
pop
ror
cmpb
mov
pop
pushl
dec
clc
insb
mov
loop
add
stos
xchg
xor
insl
xchg
pop
cmpsb
push
jb
dec
bound
xor
pop
jp
rcll
aad
mov
push
data16
dec
cmpl
loopne
sti
sub
ret
xor
call
std
add
cltd
loope
popa
shlb
xor
mov
adc
incl
cmp
mov
pusha
out
inc
testb
in
ljmp
outsl
mov
pop
jno
sarl
cmp
jecxz
dec
fimuls
stc
in
cli
dec
es
cmpsl
ljmp
jmp
test
cmp
xor
push
xor
sahf
jmp
push
out
mov
inc
das
xchg
insl
jmp
sbb
shrb
decl
jle
jo
add
int3
mov
pusha
jae
sti
cs
shrl
add
sahf
repz
sarb
mov
incl
int
loopne
pop
lcall
decl
aaa
adc
and
aad
pushl
inc
mov
mov
lcall
inc
adc
xlat
sbb
test
jmp
icebp
mov
cmc
lcall
mov
jne
repnz
and
decb
pop
out
fmul
and
call
pushf
in
lret
lcall
jno
cmpsb
ljmp
push
or
pop
mov
dec
nop
decl
test
dec
mov
push
decl
jl
je
fdivrp
xor
call
adc
imul
test
stos
adc
in
into
fdivr
and
arpl
outsb
mov
into
mov
xchg
jg
data16
push
out
dec
sbb
test
pop
aam
push
or
orl
test
adc
es
and
cmp
ljmp
cld
repz
stos
movsb
sub
arpl
mov
jb
push
fwait
push
iret
cmp
dec
idiv
lret
jae
cmp
incl
dec
push
decb
cmp
lret
mov
pop
pusha
inc
jo
out
stc
adc
mov
inc
jp
adc
pushl
cmpsb
mov
ja
jge
mov
std
xor
dec
sub
call
sbb
dec
inc
mov
cmp
add
shlb
mov
add
push
incl
pop
xchg
ffree
and
out
rcr
and
push
add
jmp
fld
mov
ljmp
ficompl
call
out
aam
jg
in
inc
xchg
push
stos
pop
aaa
decl
pushf
loope
popf
adc
jl
push
xchg
fs
cmp
or
inc
int3
push
inc
cmc
imull
outsb
dec
leave
std
call
push
push
test
pop
ja
mov
lods
push
call
in
xchg
add
roll
fwait
lea
fdivp
iret
push
mov
sub
push
jl
push
jb
sahf
sbb
sbb
ss
rcr
enter
stc
cs
insb
pushl
sub
out
ja
push
jnp
mov
push
iret
imulb
fwait
mov
ret
jmp
ret
or
mov
dec
add
sub
fcmovnu
flds
incb
bound
sbb
aad
mov
repz
nop
insl
xchg
sarb
mov
addr16
repnz
movsl
call
or
xchg
push
aaa
enter
insb
xchg
cmp
jle
jns
sbb
add
lcall
xlat
inc
jno
imull
in
cwtl
mov
mov
inc
je
sarl
or
and
and
or
out
fiaddl
add
mov
scas
xchg
mov
push
push
or
je
pop
repz
add
pop
sbb
mov
mov
lret
lcall
js
pop
maskmovq
divl
cs
int3
mov
call
sbb
cwtl
test
clc
shlb
popf
and
sahf
jae
in
testl
pop
decl
xchg
das
sarl
les
int3
xchg
cwtl
repnz
inc
cs
out
jbe
out
adc
xor
test
mov
fmuls
mov
sbb
push
mov
decw
test
add
xor
cmp
mov
xor
jns
and
sub
jl
jnp
or
icebp
xor
lods
mov
mov
rcl
or
xor
jl
xchg
rclb
ss
testb
and
nop
mov
sbb
add
add
sbb
inc
in
cli
mov
into
mov
and
mov
pop
fmul
mov
adcb
lcall
push
sahf
cld
dec
mov
lods
popa
aam
out
scas
mov
xlat
es
mov
fsubl
ret
insl
xor
inc
lods
pusha
gs
sbbb
in
xchg
jnp
jmp
mov
and
xchg
add
lods
int3
shl
sarb
push
lret
jge
call
outsl
adc
out
inc
divb
sub
pop
mov
mov
mov
mov
or
or
cwtl
jae
mov
int3
jmp
test
out
lds
shlb
and
xor
dec
fcomps
adc
mov
int3
stos
or
movsb
shll
fisubrs
cmp
dec
iret
hlt
call
out
mov
cmc
test
mov
lret
mov
iret
inc
ljmp
movsb
mov
shlb
ljmp
jp
mov
cwtl
mov
or
sub
inc
inc
shlb
popf
test
icebp
mov
insb
dec
negl
sbbb
incl
push
lret
aaa
movntps
or
ljmp
sbb
lods
subb
adc
sahf
add
inc
and
push
stos
adc
lahf
or
repz
cmp
decl
lods
icebp
mov
cmp
jne
test
cmc
cmp
out
aad
sar
push
repnz
fwait
pushf
imul
lods
push
xor
jo
pop
xchg
pushl
out
jmp
or
xchg
incl
xchg
push
adc
mov
push
daa
add
mov
pop
nop
jno
les
lcall
hlt
adc
fsubrl
adc
or
and
cwtl
incl
xor
fbld
fldenv
mov
fisttpll
push
pushl
push
sub
jmp
out
int3
call
xchg
xlat
js
jg
and
or
imul
call
dec
cs
arpl
xchg
leave
pop
jnp
or
jg
ja
or
test
xchg
dec
je
pop
in
add
xor
cli
mov
movsl
mov
and
jg
jmp
jne
xor
nop
pop
add
lods
je
or
scas
push
lock
dec
sbb
iret
or
int3
outsl
fcmovb
hlt
in
stc
and
pop
aaa
add
int3
das
pushl
dec
add
ljmp
pusha
jnp
outsb
popf
sti
push
jbe
scas
push
leave
sub
lods
in
jns
jl
adc
add
jae
sbb
dec
repnz
jb
push
orl
cmp
pop
sbb
xor
jne
movsl
or
mov
sub
jne
jge
std
xchg
xor
shlb
push
fwait
add
into
mov
cwtl
lcall
enter
push
imul
movsb
fstpt
sbb
and
sarb
out
into
cmpsl
mov
lcall
pop
xchg
add
jg
aad
push
je
frstor
fldenv
inc
mov
fwait
cmp
push
and
or
sarl
imul
cmp
and
mov
clc
out
fs
popf
adc
scas
test
xor
test
or
out
adc
adc
gs
mov
jno
out
jae
or
push
insb
in
popa
test
xchg
dec
pushl
jno
ud0
inc
scas
stos
inc
sarl
jmp
pop
arpl
and
pop
in
xor
ds
shrl
out
stc
nop
xchg
fsubl
int
sarb
jnp
sbb
pushl
add
jge
mov
cltd
fwait
jne
inc
xor
cmc
sahf
jbe
pop
sti
adc
mov
mov
movaps
ljmp
aaa
and
mov
jno
xchg
mov
mov
add
cmpsl
fidivrs
negl
xchg
int3
inc
movb
fwait
rorl
test
mov
cmp
test
in
jbe
and
push
or
sahf
aad
jne
mov
ret
incl
rorb
aas
mov
inc
faddl
and
dec
inc
xchg
int3
or
dec
xorb
imulb
int
mov
jle
sti
or
lods
lods
mov
xchg
fs
pop
in
jg
jge
push
xor
mov
incl
imul
shlb
mov
mov
stc
aaa
pop
stos
sbb
or
sbb
inc
dec
push
jnp
jmp
mov
ud0
and
pop
popa
jae
cmp
and
xor
dec
mov
mov
decl
out
xchg
ljmp
pop
incl
clc
subl
sub
dec
push
adc
lock
push
les
xchg
add
adc
pop
push
xchg
add
add
push
xor
inc
ss
dec
xor
call
fs
aad
test
ljmp
pop
test
gs
xor
sub
jno
xlat
stc
cmp
mov
das
leave
pop
inc
lret
jg
jmp
aaa
call
popa
aam
sub
or
push
adc
lods
pop
mov
negl
jnp
jp
lock
and
cmp
and
repz
pop
movsb
jmp
les
push
addr16
rcl
jne
sbb
sub
aam
cmp
mov
adc
mov
decl
lret
mov
sub
mov
add
inc
aas
incl
loope
in
or
adc
mov
add
wbinvd
xchg
sbb
pushl
rolb
jg
ljmp
jno
jae
push
or
testb
xlat
mov
inc
pushf
shll
or
add
add
in
xor
adc
sbb
cmc
cmp
dec
iret
mov
out
movsb
jmp
pushf
or
push
add
push
adc
jl
add
jns
decl
paddusw
loop
scas
xor
xor
leave
mov
sbb
rcrb
or
mov
add
movsb
aaa
shr
push
std
iret
repz
mov
es
inc
lahf
pop
int
decl
fwait
xor
mov
popa
test
ljmp
iret
mov
inc
pop
lea
cmc
in
inc
lahf
xor
pushf
cmp
xchg
jle
notb
adc
fadd
mov
jae
jl
push
push
gs
or
pop
add
add
faddp
ljmp
pop
and
subl
call
enter
mov
mov
call
aas
dec
pop
jmp
aam
shrl
je
addr16
xor
xor
inc
shl
adc
cwtl
push
aad
and
mov
popf
push
jns
shl
xchg
fldcw
out
incl
in
scas
xor
mov
shlb
cmp
inc
adc
aad
out
push
lea
mov
inc
fxch
pushf
imul
add
shrb
or
rolb
jmp
cmp
dec
sbb
mov
inc
iret
push
jne
enter
test
or
hlt
call
test
push
add
jle,pn
xchg
pop
subb
movsb
mov
dec
test
testb
and
out
jmp
lcall
shrb
or
data16
sarb
subb
nop
mov
inc
xor
jmp
outsb
stc
or
movsl
mov
int
push
sar
jnp
lahf
xchg
sub
jg
xor
std
loopne
fdivp
rolb
out
add
rclb
add
int
cmp
adc
fnstenv
shrl
fisttpl
seta
nop
jnp
mov
mov
aaa
out
std
ss
incl
pop
cmp
call
ficoms
call
cmpsb
cmpsl
mov
out
decl
iret
mov
mov
pop
adcb
leave
decl
ret
dec
mov
into
mov
jl
nop
jmp
call
es
loopne
push
pushf
call
fsubl
lock
mov
int3
lcall
push
sub
xor
sub
call
sti
pop
ret
mov
addb
flds
or
je
adc
loop
or
fisubrl
in
mov
mov
hlt
loope
push
lahf
rcl
xchg
js
cmp
sbb
lahf
ja
or
xlat
out
xor
fimull
lds
lahf
lcall
mov
jae
jns
jmp
push
fcmove
dec
fisttps
insl
mov
xor
mov
sar
pop
mov
mov
sub
sar
dec
pop
fistl
jecxz
rcl
or
push
push
lret
incl
push
mov
xchg
lock
adc
mov
shrl
lahf
lret
xchg
mov
jns
outsb
call
imul
push
out
std
pop
inc
incl
clc
out
lret
or
movsb
pop
adc
cli
push
sbbb
cmp
pop
mov
or
call
push
les
sar
jp
and
jle
ret
jecxz
xor
mov
xor
cmpsl
call
mov
inc
mov
cmp
push
adc
cmp
lea
incl
sahf
mov
decl
test
paddw
pop
push
call
jo
test
adc
and
or
es
loope
fchs
mov
test
lahf
dec
mov
push
loop
inc
mov
fsubrl
aam
icebp
inc
pushl
or
push
rorb
mov
mov
or
in
cmp
pushf
or
dec
ljmp
fucomip
imul
movlhps
ret
mov
cmpsb
loopne
test
add
xor
mov
and
mov
jmp
or
jne
xchg
push
mov
push
cmp
jl
pop
loopne
rcr
bound
std
pusha
loope
cmc
lcall
push
cld
scas
sub
push
dec
push
xchg
fidivs
ja
inc
adc
push
cmp
dec
inc
in
pushl
fildl
mov
jne
das
mov
push
adc
jb
dec
add
xor
ljmp
push
sub
mov
iret
push
add
xor
jmp
fisttpl
jmp
repz
ljmp
and
ret
dec
test
lea
shrb
leave
sbb
loope,pt
pop
fld1
jmp
call
aas
sar
mov
push
incl
dec
cmp
cmpl
push
mov
call
scas
into
iret
mov
enter
insb
cmp
adc
mov
test
insl
or
ds
popf
test
sbb
jne
xor
cwtl
sbb
fidivrs
outsb
das
push
jns
push
filds
and
sub
lods
out
shl
add
jl
and
sbb
movsl
shll
outsl
daa
shlb
or
aad
idiv
cld
push
fsubrs
incl
imul
and
inc
out
adc
mov
adc
mov
cmc
les
adcb
mov
add
adc
out
cmp
shrl
add
fisubrs
xchg
cmp
insb
dec
add
loope
rcrb
scas
ja
idiv
sbbb
push
lods
dec
jb
popa
loop
enter
mov
sub
cmp
pop
data16
gs
mov
int3
gs
jmp
rcr
or
stc
addr16
mov
int
cmp
gs
adc
rcrb
int3
push
pop
jmp
cmp
push
in
lcall
icebp
sti
mov
pop
mov
jae
divl
ss
shr
jae
das
mov
insb
into
or
loopne
jmp
jno
mov
sbb
shlb
fimuls
jl
cmpsl
xchg
pop
test
or
pop
add
cmp
xchg
cmp
sbb
jae
dec
add
mov
stos
mov
push
jle
push
add
test
out
aas
test
push
lock
mov
pop
aad
cli
gs
cmp
jae
sub
dec
clc
ljmp
sti
iret
jp
sahf
lods
outsl
dec
repnz
call
popf
loopne
call
xchg
fidivl
mov
mov
mov
sbb
js
adc
jae
dec
mov
outsl
ljmp
jmp
inc
inc
pop
pop
inc
xchg
mov
pop
xor
adc
mov
dec
xor
pushl
data16
int
movsb
jmp
cmp
dec
ljmp
mov
in
fwait
iret
dec
ret
out
mov
xchg
or
dec
push
test
divl
and
adc
hlt
shrl
adc
push
jbe
add
dec
jp
or
repnz
adc
mov
sahf
shrl
test
xor
adc
adc
int3
pop
in
cmp
xchg
shl
lock
rcrl
pop
neg
push
jg
sbb
push
pop
aaa
mov
and
aam
adc
imul
add
icebp
les
scas
pop
jnp
cmpsb
jp
lahf
push
and
cmp
xchg
in
repz
lods
movsb
stos
push
shrb
sti
adc
cli
jne
mov
sub
cmp
rolb
xor
outsl
mov
jmp
dec
push
loopne
mov
aaa
adc
rorl
incl
enter
sub
incl
cmp
mov
inc
sahf
sbb
mov
stos
pop
sar
inc
pinsrw
call
dec
mov
rclb
xchg
ljmp
push
imul
ffreep
in
sbb
les
decl
pop
push
out
pushf
adcl
lods
scas
dec
mov
es
xchg
call
mov
outsl
daa
inc
mov
ljmp
mov
adc
mov
push
jbe
test
add
mov
in
or
ja
xor
push
in
adc
and
call
mov
sbb
movsl
call
imul
cmc
jl
sbb
xor
movsl
pushl
or
arpl
pushf
out
ljmp
outsl
jl
rclb
mov
mov
call
mov
bound
jge
js
sub
mov
lea
dec
ror
mov
nop
ljmp
shlb
fs
sub
imul
call
pop
mov
cmp
orl
out
mov
mov
pop
test
jle
lods
clc
sbb
lret
ds
pushl
xlat
mov
cmp
fdivrs
adc
and
rcrl
jns
repz
pop
orb
cmp
mov
dec
mov
lcall
idivb
inc
call
daa
jle
rcrb
cmc
dec
mov
push
dec
sbb
cld
cmpsb
ds
rcll
aaa
mov
cs
mulb
xchg
clc
or
xchg
dec
mov
ljmp
mov
inc
rclb
icebp
orl
les
das
xchg
sbb
add
lahf
sub
addr16
push
cmpsl
sbb
mov
loopne
or
adc
and
stos
lods
lods
mov
mov
subb
in
sbb
pop
cli
cmp
inc
call
stc
ret
and
sub
scas
popf
gs
or
and
add
loopne
aaa
inc
add
cltd
inc
int
rclb
mulb
xorl
addr16
adc
dec
push
mov
pushl
push
xorb
mov
arpl
test
jno
mov
mov
cmp
pusha
popa
or
push
pop
shll
lahf
add
sub
mov
scas
nop
pop
xor
insb
pop
mov
shr
sub
mov
mov
insb
xchg
test
call
sarb
ljmp
lock
mov
xchg
loopne
inc
pop
int3
pop
push
icebp
pusha
in
pushl
andb
popa
mov
jmp
decl
add
les
pop
xchg
and
jns
fidivl
add
in
rolb
push
ljmp
cs
xor
sub
dec
js
add
sbb
jl
dec
call
stos
loopne
push
popf
mov
idiv
lds
jg
sbb
arpl
ja
decl
push
mov
sbb
mov
pushf
xchg
jno
push
mov
sub
testb
sub
dec
sub
pushl
in
test
dec
cmp
lcall
sbb
in
call
rorb
mov
jg
ljmp
jge
je
icebp
or
mov
nop
mov
pop
nopl
nop
xor
mov
in
sub
or
call
shlb
lods
in
jg
hlt
es
ss
inc
xor
cmp
jae
lods
lahf
ljmp
jnp
add
jp
inc
daa
and
ja
cmpsb
inc
jecxz
add
repz
in
movsb
dec
mov
xchg
xorb
call
jne
das
lods
sub
lahf
js
cmp
outsb
test
rcrl
mov
adc
clc
dec
mov
cmpsb
pop
adc
mov
mov
push
push
or
xchg
dec
mov
xchg
fcmovbe
aas
cltd
mov
sahf
js
decl
stos
cmp
je
ds
rclb
pushl
or
xchg
lcall
sahf
xchg
test
ljmp
xchg
rcrb
add
repz
outsl
jae
push
int3
mov
or
icebp
dec
ljmp
test
mov
mov
sub
int
call
das
stos
iret
jae
dec
xchg
mov
pop
push
cmc
sarb
mov
scas
push
push
inc
add
add
lock
push
clc
sbb
repz
js
lret
imull
push
call
out
lock
push
pop
lcall
sbb
fnstenv
add
imul
xor
add
lea
call
addr16
add
test
sub
ret
daa
outsb
and
adc
scas
sub
stos
cmp
data16
mov
dec
imul
xor
or
data16
imul
fbstp
or
out
fcompp
enter
insb
cld
inc
gs
mov
mov
ds
lock
xlat
movsl
call
push
sub
js
mov
call
lods
push
inc
jle
push
push
out
add
add
out
je
into
jmp
jmp
xchg
andl
or
inc
dec
mov
rorb
scas
rcll
inc
cmpsb
and
rorl
mov
add
imulb
xchg
pushf
xlat
mov
decl
in
icebp
nop
clc
ljmp
popf
jb
data16
mov
repz
xchg
mov
rorb
mov
call
lds
movsl
xor
movl
cmp
test
inc
mov
lahf
pop
cmovge
call
loop
and
xchg
and
jb
pop
mov
xchg
push
and
fdivs
cmpsl
mov
rcll
or
frstor
ja
decl
jnp
push
testb
call
cmp
jns
mov
cld
cmp
add
ljmp
and
shlb
sbbb
add
add
lock
shll
sbb
fbstp
ljmp
mov
mov
cmp
bound
cli
jne
loop
sub
icebp
decl
stos
inc
ljmp
sub
cmp
loopne
shr
push
add
ss
or
pop
rcll
mov
cmp
sbb
es
das
test
pushl
shlb
lock
notb
dec
push
pop
pusha
mov
sti
pop
movsb
sub
nop
aaa
dec
sub
call
jle
adc
sarl
mov
pop
ja
jge
aas
jne
adc
call
inc
aad
pop
insl
dec
push
mov
mov
mov
pop
adc
call
js
xchg
mov
cli
das
or
call
adc
icebp
clc
mov
lcall
cltd
pushf
pop
and
and
mov
and
xorps
add
xchg
pop
xor
mov
pop
push
mov
sub
dec
adc
mov
jg
xor
mov
mov
lret
mov
push
rorl
incl
xor
jmp
fcompl
mov
push
mull
test
ljmp
xor
imul
sar
mov
push
mov
decl
xor
incl
test
aaa
out
mov
mov
mov
jmp
or
pop
aas
ret
jg
pop
bnd
rcll
sti
repz
movsb
insl
pop
jo
mov
push
push
fidivs
pusha
jne
jmp
sub
insl
inc
cmp
shlb
ret
cmp
pusha
repnz
hlt
out
or
sbb
xchg
push
xchg
cli
jb
inc
shl
inc
adc
leave
test
inc
cmp
mov
jae
mov
jl
cmp
test
sbb
ret
rolb
jmp
push
hlt
cld
cmp
jne
fidivs
jb
inc
xchg
sti
jge
es
or
mov
aam
mov
ret
lcall
sub
imulb
mull
test
adc
incl
xchg
xchg
shll
cmp
clc
push
fsubrs
dec
jl
adc
das
adc
add
lret
dec
fnstsw
dec
push
cmc
cmp
add
decl
into
push
inc
xchg
shll
dec
or
jmp
sar
dec
push
inc
pop
in
shl
test
add
mov
adc
mov
jb
mov
adc
add
dec
push
fildl
push
gs
push
dec
pushf
xchg
dec
add
jmp
test
pop
and
push
int
stc
xor
adc
mov
lahf
xchg
inc
incl
ret
push
outsb
call
mov
movntps
adc
gs
cmc
movsb
int3
stos
mov
mov
dec
hlt
insl
out
jae
sbb
sub
xor
cmp
mov
in
decl
mov
mov
pop
insb
faddp
repnz
jle
and
cmp
ds
jne
push
lahf
mov
cwtl
into
mov
sub
imul
cld
jns
sbb
and
sbb
roll
mov
out
pop
dec
add
fildll
out
into
xor
push
push
mov
je
enter
scas
in
inc
lcall
rorb
cli
mov
shrl
or
in
jns
or
mov
inc
add
jmp
xlat
gs
clc
lret
cmp
shll
dec
push
mov
and
push
dec
jg
shl
pop
jae
clc
sar
in
fnsave
decl
movsl
addr16
pop
and
addb
dec
popf
ljmp
or
sbb
filds
push
je
mov
data16
popa
adc
sbb
and
jbe
or
into
orl
stc
jns
into
mov
int
pcmpeqb
dec
cmp
jnp
add
fimull
xchg
xor
addr16
in
xchg
cmp
cltd
sti
pop
add
adc
adc
push
jbe
inc
add
adc
lahf
dec
ss
aad
out
push
lret
mov
jl
mov
mov
cltd
test
lahf
sti
das
fsqrt
call
cmp
mov
ficoms
mov
cmpsl
cld
dec
dec
movb
shll
bound
mov
pushl
cmp
fildll
in
loope
aaa
jne
incl
sahf
xor
mov
popa
sub
xchg
out
pop
cmc
cmp
aas
call
mov
lock
rcrb
sbb
ret
pusha
nop
addl
push
jo
dec
sub
xchg
adc
jmp
test
sti
jmp
xor
arpl
xor
shll
mov
adc
add
pop
rcr
sub
pop
mov
ljmp
mov
xor
out
or
mov
xor
loope
adc
out
jmp
icebp
push
xor
lcall
test
pop
mov
mov
jae
aaa
out
test
pop
push
test
fcoml
andl
out
mov
aas
pushf
loopne
out
xlat
xor
pushl
dec
dec
loope
push
clc
daa
sub
pop
adc
lret
push
add
pop
bnd
mov
sub
es
xor
sbb
not
and
push
xchg
shr
lahf
ds
mov
fistpll
pushf
push
dec
pop
mov
xor
roll
std
mov
jl
xchg
sti
leave
imul
jg
xchg
decl
add
aam
xlat
inc
and
imul
push
int
insb
les
sub
jp
mov
jmp
push
and
cmp
fsubp
loopne
repz
sub
dec
xchg
inc
mov
bound
clc
jne
add
out
cmp
or
iret
jmp
inc
lret
lret
cld
mov
mov
std
mov
out
push
inc
sub
and
call
mov
push
mov
negl
sub
cmp
inc
or
cmpsb
xor
bound
adc
add
add
call
inc
pop
and
clc
inc
pushl
inc
fistps
add
cs
xchg
ret
lcall
inc
mov
sbb
aas
sub
fmuls
cmpsl
leave
dec
out
sti
mov
or
xchg
mov
ret
jl
mov
lahf
dec
lcall
fucomp
movb
jae
jmp
push
ljmp
sbbl
inc
xor
in
pushl
cld
movsl
decl
cmpsb
stos
mov
lcall
sub
leave
out
gs
jecxz
jmp
xchg
pushf
jb
and
aam
push
add
lea
nop
loop
xor
sti
bound
xchg
shlb
enter
push
jmp
fcoms
sti
mov
inc
push
sub
ljmp
in
fstps
notb
or
shlb
inc
dec
or
lcall
jl
cmp
stos
xchg
or
dec
add
xchg
enter
insb
shlb
popa
jle
xor
and
push
and
idiv
mov
cwtl
lahf
mov
ljmpw
dec
sub
jmp
cmp
cmp
dec
stos
add
and
cwtl
inc
in
lcall
xor
ja
and
scas
repz
or
pop
mov
push
cmpsb
call
pushl
xor
cs
dec
jmp
mov
sub
jbe
popf
dec
dec
jno
je
add
push
push
xchg
adc
pop
cmp
jl
insb
and
jmp
int3
or
scas
in
adc
gs
iret
or
arpl
loop
pop
lcall
cmp
xor
imul
ret
adc
shrl
js
aam
inc
mov
xor
cld
in
cmp
jnp
ljmp
cmpsb
sub
sub
xor
jae
loopne
xchg
sbb
repz
sbb
shr
xchg
rorb
lret
fs
pushf
shll
adc
lds
out
inc
loopne
or
mov
addr16
div
cmpsb
mov
mov
jno
mov
lcall
lret
cmp
fcompl
cmpsl
cli
inc
fidivrl
rcll
jbe
mov
and
mov
aam
push
cmp
les
push
dec
sahf
je
sub
sti
mov
popa
jns
iret
jns
adc
ljmp
std
adc
mov
call
mov
sub
sub
inc
or
xchg
jmp
aad
sar
cmp
ficompl
sar
mov
pop
sub
jge
dec
mov
inc
fwait
jae
jns
pop
sbb
lcall
out
addb
in
lock
js
pop
cmpsl
sbb
call
std
dec
fcomps
aaa
icebp
iret
adc
repz
dec
cmpsb
lds
push
minps
clc
jns
je
testl
int3
add
cld
jecxz
test
xchg
sbb
push
mov
mov
mov
mov
and
sub
push
int3
dec
dec
sahf
jmp
inc
dec
aas
rorb
movsb
or
test
add
lret
imul
pop
fdivrs
xor
xor
mov
stc
gs
push
push
sahf
imul
pop
add
test
inc
adcl
xor
incl
std
sbb
mov
insb
dec
int3
mov
int
pop
pushl
adc
test
push
cmp
add
fwait
jmp
aam
pop
int3
or
add
in
les
fimull
jp
sbb
jmp
cmpsb
pop
inc
jmp
mov
mov
jmp
sahf
loope
push
stos
pop
adc
mov
shrb
movsb
sub
rolb
decl
test
lret
cld
push
push
adc
incl
jecxz
xor
ljmp
xchg
jne
cmp
push
cmp
fmull
sbb
push
inc
popa
mov
int3
rol
repz
hlt
mov
dec
fdiv
mov
dec
scas
call
jp
inc
pop
xor
and
cltd
mov
xchg
xor
aad
mov
mov
mov
jge
in
push
sub
add
dec
push
lea
rorl
or
aaa
mov
sbbl
or
clc
push
xor
sub
imul
cmp
cmc
repnz
inc
leave
add
loope
push
cld
or
adc
and
mov
testl
shlb
mov
mov
and
jb
bound
xor
repnz
fcmovnb
cwtl
or
rolb
push
fdivrp
iret
repz
jle
push
call
and
flds
ljmp
in
sbb
cmc
ret
outsb
mov
fstl
sub
addr16
flds
push
push
adc
mov
insl
mov
ret
jecxz
adc
int3
icebp
cmp
pop
cld
call
jnp
jmp
iret
push
ljmp
dec
jle
and
sbb
icebp
lcall
inc
adc
mull
pop
adc
xchg
and
add
jns
call
cmp
cltd
add
mov
leave
jns
leave
in
into
add
pop
shll
mov
popl
cmp
mov
rcrl
cmpsb
rol
sti
and
adc
mov
or
inc
dec
jnp
xchg
popf
addr16
xchg
mov
lds
dec
mov
sbb
push
int
rcll
mov
inc
mov
out
cmp
adc
test
push
mov
sbbl
dec
pop
mov
loop
ret
xor
push
popf
mov
mov
inc
or
adcb
daa
xor
push
push
sarl
push
ja
stc
add
popa
mov
rcrb
push
jnp
xchg
mov
sub
push
mov
jecxz
arpl
jb
rcl
in
mov
push
jmp
dec
or
add
adc
jge
sbb
mov
jmp
arpl
inc
and
test
lcall
fildl
aas
cli
fwait
rcr
and
mov
inc
bound
xor
mov
rol
pop
lret
pop
pop
xchg
cmp
xor
in
cltd
mov
fcomi
sahf
add
fnstcw
popa
jecxz
lret
xchg
jnp
outsl
fsubl
int3
cmp
xchg
push
xor
fdivs
je
sub
sti
xor
dec
fdivr
jmp
mov
mov
lods
mov
jo
ss
xchg
es
pop
push
call
ja
xor
xlat
repz
orl
mov
mov
popa
int
mov
sbb
lcall
scas
add
dec
cmp
mov
lock
sub
xor
mov
xchg
mov
jae
xor
cmpsb
xor
es
jb
push
inc
ds
cld
xor
fstl
mov
xchg
std
lea
sub
rcrb
shl
sbb
xlat
or
mov
lock
mov
jne
xlat
mov
push
adc
adc
sbb
rorl
bnd
sbb
mov
jmp
jmp
sbb
cld
movsb
xor
and
jno
std
xchg
xchg
dec
adc
mov
testl
and
push
shll
add
xchg
or
sub
sub
lods
xchg
cmp
pop
aam
pusha
jp
sub
mov
das
andl
jecxz
pop
push
repz
mov
pop
pop
sub
cmpb
sub
test
mov
push
xor
fwait
jmp
push
pushf
push
push
inc
or
and
adc
sahf
inc
out
out
loope
loop
or
pop
push
dec
mov
xlat
push
hlt
push
mov
and
out
incl
rclb
rclb
test
adc
cmp
negb
add
add
jmp
inc
inc
mov
fbld
cmpsb
mov
ret
loopne
test
add
or
sub
add
xchg
lret
mov
shrl
xor
pop
mov
xor
push
jl
or
das
daa
in
repnz
and
stos
add
cmc
pop
arpl
scas
pusha
into
mov
call
call
jae
jl
dec
lods
dec
xchg
incl
cmc
enter
xchg
pop
add
nop
rcll
notl
jb
es
nop
sbb
add
xchg
mov
pushf
xor
dec
jno
pop
out
outsl
jmp
out
hlt
push
call
xor
lret
call
testb
xchg
sar
insl
ds
loop
lods
ror
add
adc
sub
loope
cmp
int3
pop
add
je
mov
ljmp
enter
dec
mov
jb
push
fsubrp
call
inc
lcall
enter
insb
test
mov
jle
jecxz
add
lods
lahf
movsl
mov
leave
fucomip
cwtl
popa
or
fwait
decl
cmp
imul
pop
and
imul
sub
int
mov
and
jmp
push
cmp
inc
je
pop
mov
shrb
inc
inc
mov
adc
and
push
sbb
sbb
sti
imul
test
pop
loop
adc
ja
cmc
clc
jmp
push
js
mov
or
lcall
test
pop
adc
cs
cmp
add
or
xchg
incl
dec
xor
bound
sub
mov
dec
enter
mov
sti
movups
in
or
popw
sbb
xor
inc
fwait
push
xor
push
xchg
sar
daa
mov
stc
stos
data16
mov
int
xor
gs
sub
jnp
mov
sub
dec
xor
jl
int
mov
adc
cltd
mov
mov
cmp
adc
ja
fidivs
jp
jae
int3
out
cmpsb
enter
mov
hlt
mov
xchg
sti
arpl
mov
mov
sbb
xlat
mov
fidivs
repnz
fwait
push
mov
bound
repz
ds
shlb
mov
in
jne
or
add
cmp
mov
popa
mov
aaa
xchg
sbb
xchg
es
imul
lock
shlb
add
pop
pusha
inc
push
jae
sub
inc
xchg
push
shlb
fdivr
add
mov
mov
pop
incl
jge
pusha
jmp
adc
rolb
fidivrl
or
mov
mov
into
push
pop
lcall
daa
pop
sbb
jbe
es
popf
fwait
lret
jmp
icebp
xchg
mov
or
or
aad
enter
dec
popf
jmp
clc
into
fmuls
pop
popa
xchg
roll
rcrb
pushl
pop
dec
add
shr
or
or
leave
and
lock
movsb
inc
fisttpl
rcr
mov
in
je
pop
fcom
in
push
or
fcompl
out
int3
sub
pop
lcall
xor
nop
and
js
std
not
aad
xchg
daa
and
jo
mov
or
jmp
pushf
imul
aam
daa
mov
add
mov
aas
pop
pop
repz
jp
mov
and
pop
jb
out
mul
repz
call
mov
xchg
jo
push
push
lahf
inc
add
jno
mov
in
cmpb
pop
push
cmp
jle
fwait
lret
icebp
adc
cltd
push
xor
popa
repz
adc
testl
or
lock
xchg
inc
fdivs
mov
repz
imul
add
sbb
inc
cs
rolb
mul
test
je
xor
push
stc
incl
out
sub
inc
scas
mov
add
adc
aad
cmc
add
rclb
inc
pop
orl
call
cwtl
dec
ret
out
mov
scas
sbb
xchg
lcall
loope
pusha
inc
push
jl
ret
aam
std
mov
add
cmp
pop
cmc
leave
inc
scas
scas
cmp
or
mov
pushf
fidivl
adc
and
in
mov
stc
inc
add
and
pushl
test
dec
jo
jb
dec
xor
sbb
sahf
std
sahf
jno
or
or
outsb
xlat
mov
iret
mov
mov
pop
movsb
and
cmp
xor
xchg
lret
imulb
push
ret
call
outsb
xchg
mov
pop
jo
sub
mov
sub
push
test
add
mov
pop
incl
dec
insl
pop
cmp
adcl
adc
mov
mov
das
repz
ret
mov
jo
fwait
or
les
jle
push
sbbl
fstpt
xlat
or
sub
imull
jae
mov
ja
insl
dec
add
lahf
dec
and
incl
out
shl
js
jae
scas
aaa
xchg
into
mov
insb
push
sarl
pushl
jo
mov
inc
and
call
jbe
mov
mov
ficomps
jae
cli
rcr
mov
ds
psrlw
cmc
cs
add
inc
jnp
jl
in
xlat
or
dec
mov
popf
loop
jmp
xchg
lcall
das
adc
dec
mov
roll
int
xchg
popa
mov
inc
fnstenv
or
sbb
dec
pop
jmp
loop
xchg
and
ljmp
stos
ljmp
or
mov
push
adcb
add
push
aas
shl
inc
add
pop
cmp
mov
push
mov
dec
jnp
into
cmp
data16
imul
nop
adc
rclb
rol
mov
aad
ss
loope
out
leave
subl
mov
dec
cmc
mov
jecxz
arpl
outsl
fsubrs
mov
mov
daa
fisubrs
jmp
fsubl
sar
call
int3
mov
or
cmp
lcall
push
outsl
popf
dec
sahf
mov
sar
mov
lahf
cmp
incl
hlt
and
aas
adc
sub
arpl
dec
outsl
xchg
cs
dec
xchg
int3
popf
adc
jmp
js
ficompl
adc
sbb
mov
ljmp
ljmp
pop
mov
and
adc
bnd
inc
scas
fisubl
xor
mov
mov
pop
jae
xchg
decl
sbb
das
dec
add
or
icebp
loope
xor
incl
and
cltd
fbstp
sbb
sub
ds
pop
fldt
adcl
add
mov
dec
push
lahf
das
mov
imul
out
dec
inc
or
pop
push
ljmp
mov
out
pop
mov
jl
adc
xchg
xor
mov
test
out
incl
test
ret
fildl
fcoml
pop
xor
pop
popf
xor
xlat
in
mov
out
call
sbb
inc
lcall
or
lcall
ja
lds
into
ficoms
aam
mov
or
fbstp
and
mov
cwtl
pop
xor
in
test
pop
cmp
pop
sub
xor
or
mov
ret
ds
push
push
dec
push
xlat
push
jne
enter
cmp
add
popf
or
sar
and
fwait
insl
mov
jecxz
push
cmc
inc
sub
out
mov
sbb
inc
insl
loope
xor
or
xchg
pop
xchg
adc
mov
shll
push
mov
outsl
jne
sbb
call
pop
rclb
hlt
mov
aad
test
aam
fistpll
xchg
mov
or
call
fiadds
fwait
inc
pushl
fimull
test
inc
jno
std
jp
sub
mov
inc
adc
add
or
stc
xchg
cli
nop
cmp
decl
jl
out
test
call
sub
pop
mov
cmc
adc
adc
leave
push
fistl
cmpsb
xor
outsb
mov
enter
loope
xor
call
in
xor
fldl
mov
adc
jl
sti
mov
jmp
add
jb
or
inc
repnz
pand
ljmp
or
or
mov
call
sbb
jp
sbb
in
xor
ljmp
xchg
xchg
lcall
sti
outsb
pusha
inc
adc
mov
sub
mov
cmp
xor
daa
cmp
add
inc
adc
mov
shll
or
push
adc
stos
cwtl
test
push
dec
loop
pushl
xchg
call
add
adc
sbb
push
mov
incl
xlat
push
divl
cmpsl
cwtl
and
mov
imul
jns
popa
incl
jge
jl
mov
ja
out
xchg
cwtl
add
add
sub
xlat
movsb
into
loope
jecxz
or
xchg
je
cmp
out
daa
sahf
jnp
inc
jbe
fcmovbe
push
ljmp
cmpsb
insb
xstore-rng
cmpsl
sarl
adc
imul
popl
int3
aaa
push
sub
in
mov
movsb
negb
push
sub
push
repnz
jmp
sbb
shrl
sub
flds
mov
ds
inc
std
test
dec
mov
sbb
int3
in
dec
repz
loop
stc
ljmp
stos
iret
stos
pushl
add
js
mov
sbb
inc
xor
call
ficomps
stc
bound
mov
gs
mov
sub
or
in
jbe
mov
cmp
pop
add
cltd
pop
inc
insb
shl
fisubl
movsb
jbe
ja
rcll
xor
popa
shlb
out
mov
mov
insl
dec
out
nop
call
cli
mov
mov
arpl
rcrb
jp
pushl
xchg
cmp
xchg
add
gs
ss
cmp
bound
into
orb
inc
inc
cmp
jns
cmp
dec
imul
push
mov
scas
push
sub
lea
sub
lahf
jo
inc
aas
ja
paddusb
shll
xchg
or
or
aam
addb
xchg
or
inc
jne
push
jmp
out
decl
lret
lods
push
push
das
and
mov
mov
into
push
mov
sti
fimull
cltd
mov
inc
pushl
insl
shlb
js
fildll
inc
lea
jmp
icebp
cmp
shr
je
loopne
pushf
lds
jae
call
fdivr
dec
dec
fsts
dec
out
pop
stc
cld
mov
or
dec
cmp
push
mov
cmp
loopne
mov
loope
mov
or
adc
lods
sbb
fdiv
xor
pop
negb
cs
int
xor
add
mov
jns
sbb
fwait
ja
inc
lahf
cmpsb
into
pusha
mov
ljmp
packssdw
jns
std
pushl
cmp
in
sub
xchg
fdiv
pop
mov
ja
xchg
or
jg
xchg
nopl
push
jo
aaa
adc
shlb
or
dec
push
lock
or
vucomiss
ljmp
jp
jle
int
jge
cmp
testl
shld
push
mov
push
icebp
push
and
pop
xor
fs
cmp
rolb
mov
dec
xor
mov
popf
push
out
dec
sar
jo
in
adc
sub
mov
mulb
int3
or
inc
sti
xchg
clc
xchg
or
add
les
lcall
mov
and
pusha
mov
rolb
hlt
cmp
ljmp
xor
mov
iret
push
jmp
lods
lret
fs
sub
fistpll
or
loope
add
ret
std
movsl
or
popf
iret
mov
jns
sub
jge
out
push
jmp
popa
xchg
out
ds
decl
adc
imul
cmp
fnstsw
dec
sti
jecxz
ljmp
fcmovne
jb
push
push
je
dec
ja
or
push
sub
lcall
xor
adc
cmc
movsl
pop
loope
mov
repnz
mov
sbb
mov
mov
mov
or
roll
call
iret
test
mov
cmpsb
and
add
xor
ljmp
sub
xchg
ss
ljmp
mov
mov
cmpsl
or
cmp
mov
inc
add
jl
stos
ljmp
les
rcrb
leave
ja
push
loope
adc
repz
je
adc
and
cmp
mov
xor
inc
lods
jle
ljmp
sarb
adc
sar
mov
mov
daa
adc
add
jns
sub
das
inc
inc
adc
out
push
movsl
add
mov
repnz
test
push
incl
out
jne
add
aad
pop
loop
push
aas
mov
cmpsb
inc
dec
lahf
rol
xchg
pop
imull
popf
icebp
mov
iret
cmc
out
dec
ljmp
shl
adc
clc
or
add
popf
pushf
and
inc
push
xor
mov
int3
dec
cmp
dec
mov
fsts
xchg
and
mov
aas
std
cld
nop
bound
outsl
sub
out
mov
pop
decl
roll
bound
bndstx
xchg
xlat
mov
int3
mull
sbbb
sbb
and
xor
ret
cwtl
call
lret
stc
mov
insl
fisubl
int
or
gs
jmp
jnp
repnz
sub
inc
dec
xor
andl
mov
rclb
lcall
lcall
ss
xchg
out
test
mov
mov
inc
aam
jae
cmp
xchg
adc
adc
sub
and
in
cmovns
mov
sahf
jg
mov
popa
fwait
mov
idivl
jno
sub
stos
sub
mov
xchg
mov
mov
pop
xchg
sub
es
lods
aas
fstl
xor
and
enter
cmp
xchg
out
test
xchg
pusha
lret
ljmp
out
nop
ja
jmp
lahf
or
push
sbbl
pop
js
pusha
mov
jo
and
ficoml
and
add
push
mov
dec
dec
pop
inc
mov
sti
sbb
scas
mov
ljmp
cwtl
ficoms
lds
in
push
pop
sub
stc
and
mov
sub
fcomps
lret
mov
push
xchg
js
inc
push
mov
sbb
push
mov
lret
jg
dec
and
jmp
stos
addr16
or
add
test
shlb
xor
push
lcall
stos
inc
mov
fistl
jmp
test
xchg
push
repnz
sti
nop
lahf
jnp
cmc
mov
pop
ja
int3
test
je
pop
add
in
xor
or
std
hlt
lds
mov
inc
int3
shll
cmp
push
popa
sti
les
pop
lcall
dec
pop
aaa
jnp
stc
call
pop
subl
push
les
loop
pop
pop
mov
jp
cltd
pusha
and
mov
push
jnp
cs
repz
adc
jae
fwait
add
jne
mov
notl
mov
sub
lcall
xor
insl
pop
out
dec
int
pop
sbb
ds
pop
push
leave
push
add
ljmp
std
inc
pop
incl
pop
or
push
or
push
pop
cmc
mov
mov
add
xor
rclb
push
test
dec
or
scas
int3
cmp
xchg
ljmp
fcoml
inc
xchg
nop
cmp
xor
aam
fists
xor
js
push
inc
push
push
mov
repnz
sub
call
push
out
dec
js
or
or
push
std
xor
push
das
mov
fists
push
fstl
cmp
popa
scas
jecxz
and
out
xor
ja
jno
lcall
xlat
in
repnz
jg
jmp
cmpsb
bound
in
mov
lcall
sub
sbb
sub
adc
iret
jmp
dec
sar
lea
fisubs
push
jecxz
xor
dec
xchg
push
fsubs
fs
pop
rol
in
mov
mov
icebp
xchg
xlat
sub
jl
fstps
inc
dec
out
stos
testl
lds
jae
fdivs
adc
js
ljmp
jo
push
pop
dec
xchg
mov
insb
or
call
jle
aad
sbb
test
repz
movsb
jnp
idiv
aaa
jo
cwtl
in
outsl
mov
imulb
loope
jns
mov
and
cli
inc
jno
adc
dec
enter
sahf
and
jmp
into
in
sbb
push
rcrb
aad
fmul
inc
cmp
in
sub
jb
stos
cmc
cmp
lock
and
mov
repnz
mov
stos
pop
outsb
inc
scas
pop
xor
push
cli
jle
addr16
popf
pop
jns
mov
in
scas
mov
mov
jecxz
adc
int3
rolb
out
je
stc
mov
movl
shl
sbb
sbb
jne
dec
inc
pop
loop
xor
pop
jg
subb
pop
mov
cmpsb
jp
cmpb
and
movsb
xor
lea
mov
jp
lock
mov
jnp
adc
xchg
push
je
adc
sti
mov
add
push
mov
rorb
xorb
aam
push
cli
ss
repz
jge
or
adc
add
nop
adc
jmp
jmp
pop
dec
jno
lods
and
sbb
push
sarb
sub
aaa
push
or
jo
mov
or
mov
pop
mov
je
pop
push
in
test
out
add
in
or
out
mov
dec
incl
xchg
es
push
dec
aas
inc
or
faddl
jae
inc
lock
les
dec
into
call
not
addb
sub
std
mov
inc
dec
incl
pop
jmp
out
cmp
jno
push
dec
lods
lcall
fistpll
pop
insb
daa
jge
sbb
mov
pop
in
inc
rcrl
fidivrl
adc
incl
push
push
inc
shlb
not
out
mov
test
shll
imul
mov
inc
mov
or
pop
mov
jns
jae
iret
jmp
mov
push
rorl
aam
or
push
cld
and
lods
clc
xchg
gs
mov
loope
rclb
mov
addr16
sub
adc
out
xchg
mov
dec
jecxz
lret
movsl
fwait
ljmp
sbb
scas
mov
mov
pushl
dec
push
push
push
lods
lahf
into
call
xchg
xchg
pop
popa
inc
jae
test
add
xlat
sub
xor
in
aaa
sbb
pusha
or
xchg
ljmp
jbe
pop
dec
popa
pop
jg
cmp
push
ljmp
les
add
aam
mulb
lods
not
and
out
jl
pop
dec
dec
lcall
jp
pop
and
cmp
push
std
jecxz
adc
enter
shll
cmp
xor
jne
orl
divl
cmp
shlb
movsb
pushf
fwait
sti
lock
icebp
push
dec
push
mov
in
adc
das
push
inc
mov
cld
jb
or
or
lock
mov
pmaddwd
mov
incb
xchg
incl
adc
idivl
test
mov
or
xchg
xchg
shll
pop
ljmp
les
jb
mov
inc
cmp
jae
rclb
pop
aas
sub
pop
dec
cmp
pmaxsw
and
bound
mov
rol
push
or
jl
das
ds
lods
stos
dec
cld
outsl
add
push
mov
cmc
aaa
add
leave
dec
dec
stos
push
xor
pushl
aaa
insl
sub
loop
lcall
in
rolb
lgdtl
xchg
negb
decl
push
mov
lds
ss
sbb
xchg
xor
or
cmpsl
pushl
cwtl
xchg
pop
iret
dec
cmp
dec
outsl
aaa
and
inc
bound
sub
fmull
sub
jns
cli
dec
jns
ret
repnz
push
sbb
in
push
sub
push
cmp
xor
mov
pop
add
stos
pushl
insl
cmp
repz
xchg
adc
rolb
cmp
xchg
es
daa
or
mov
cmc
pop
insb
in
leave
iret
jle
mov
push
and
or
js
pushf
idiv
lcall
mov
imul
inc
jns
repz
fsubl
push
iret
mov
mov
sub
add
adc
into
xor
ss
stc
daa
scas
or
ljmp
sub
push
push
push
mov
sar
or
lahf
xor
incl
scas
inc
adc
js,pt
push
sbb
popf
push
insb
lock
jl
mov
mov
aad
adc
dec
icebp
pop
scas
shll
loopne
loop
in
decl
imul
addr16
test
mov
push
dec
nop
xchg
mov
testl
add
data16
mov
jne
into
and
mov
iret
sar
sub
stc
je
push
mov
int
push
loope
ljmp
mov
sub
xchg
xor
loop
loop
jmp
mov
add
add
sar
sarl
jbe
sbbb
push
outsb
pop
mov
adc
cmpsb
nop
or
ss
test
in
leave
sbb
out
or
cmp
dec
loope
das
test
push
out
mov
add
or
push
icebp
call
int3
cmp
or
aas
pop
hlt
adcl
sti
push
fcompl
sahf
cmp
jnp
jns
add
pop
ds
xchg
mov
xor
call
stos
push
mov
loop
js
mov
xchg
fcmovne
pop
fdivrs
pusha
lahf
decb
pop
pushf
shrb
inc
movsb
fldpi
push
rol
or
fiaddl
pusha
mov
incl
push
jge
push
mov
sub
ficoml
daa
lods
jmp
scas
fwait
sub
cmc
mov
mov
pop
cli
or
js
mov
sbb
fadd
dec
decl
insb
cs
pop
outsl
xchg
jmp
ret
lds
or
fnstenv
dec
and
insb
repz
fldt
jno
cld
xlat
icebp
xchg
xor
aas
mov
fdivrp
lods
decl
mov
push
mov
out
test
or
lock
push
xchg
lods
lret
stc
popf
sar
add
and
ljmp
cmpsl
and
sti
arpl
rcrl
dec
mov
dec
push
pop
test
push
pop
into
mov
mov
add
in
sub
mov
hlt
mov
lods
cmp
call
xchg
add
mov
dec
mov
aam
xor
adc
test
or
xchg
or
ret
and
cmp
loopne
jecxz
stc
adc
movsb
xor
popf
push
into
push
ret
incl
jne
jbe
sub
fcmovbe
cmp
jle
call
insb
mov
aas
lret
xor
nop
push
jo
mov
call
inc
push
mov
loope
ljmp
xchg
xchg
sub
cmc
mov
imul
test
rolb
inc
rcl
pushl
imul
loopne
xchg
loop
push
and
pop
xchg
cmp
fistps
dec
add
sub
mov
xor
rcpps
jne
outsb
sub
mov
lcall
sbbl
sahf
mov
addr16
outsb
call
ret
das
push
mov
cmp
or
out
test
sbb
mov
or
leave
cmpsl
mov
add
lcall
dec
int
lcall
add
mov
movsl
or
incl
mov
test
js
sub
mov
fidivl
loope
pop
fnclex
xor
dec
negl
xchg
mov
outsl
sub
and
and
fdivr
outsb
xor
cli
mov
aas
pop
xchg
cs
and
xchg
imul
scas
pushl
sub
mov
js
push
andl
inc
mov
cmp
mov
ljmp
adc
call
mulb
cmp
test
and
push
jg
pop
jle
mov
sub
sbb
idiv
mov
cwtl
cmpsb
adc
iret
mov
aam
incl
dec
mov
add
out
add
mov
insl
idivl
lahf
loopne
and
popf
cmpl
je
sti
or
sbb
inc
incl
jo
aad
inc
outsl
push
jmp
jbe
out
shlb
dec
adc
imul
pusha
outsl
rclb
ja
in
cmp
clc
es
popf
xor
mov
pop
pop
push
std
dec
jp
xlat
adc
lret
or
or
addr16
ficoml
push
add
sahf
ljmp
sbb
pushl
lock
cmp
loop
lcall
cmp
inc
decl
mov
pop
into
fdivr
cmpb
lcall
pop
nop
insl
shrl
cmp
stc
out
cmovnp
int
push
adc
dec
psubusw
push
ror
mov
ds
jmp
mov
jge
xchg
cltd
out
sbb
jbe
shlb
cmp
cmpsl
and
in
ss
jl
or
push
lcall
push
pop
dec
arpl
push
jno
stos
mov
inc
dec
sbb
jmp
pop
jge
cli
aas
scas
mov
pop
mov
test
mov
sahf
arpl
jmp
or
push
mov
in
mov
push
mov
loopne
aad
int3
popa
jae
sub
es
imul
push
sar
fadd
movl
mov
pusha
jno
jmp
mov
cld
pushl
jmp
icebp
push
fdivr
scas
push
shrl
stos
pop
adc
sub
jge
dec
test
insl
inc
scas
adc
setnp
cmp
pop
fs
mov
mov
outsl
test
fdivl
mov
dec
jmp
jmp
dec
add
lcall
lods
push
pop
ret
rclb
cmp
mov
sbb
leave
dec
fdivr
lret
and
sbb
mov
inc
mov
push
sub
pop
rorl
incl
or
bswap
imul
std
mull
insl
decb
xor
jnp
lea
clc
sbb
mov
sbb
lahf
sbb
add
pop
adc
mov
call
movsl
icebp
jne
cmp
cmp
add
daa
xchg
pop
adcl
mov
jg
pushf
lret
fnstsw
aaa
ljmp
push
mov
mov
ja
lods
mul
cmp
scas
and
pop
icebp
mov
jp
jmp
mov
cltd
rclb
jecxz
arpl
les
bound
call
adcl
lret
lcall
sbb
sub
mov
je
shlb
add
decl
push
stc
lea
jbe
jge
imul
push
push
aas
or
jl
bound
push
inc
push
fimuls
sbb
testb
ljmp
hlt
mov
push
test
or
test
mov
add
sub
test
fisttps
push
lret
add
jns
adc
adc
sub
add
mov
out
rol
rol
or
dec
add
or
jmp
fwait
mov
xor
inc
mov
or
popa
cmc
push
ds
decl
mov
push
decl
jge
add
sti
push
lcall
xor
in
call
lea
dec
lret
ljmp
push
jp
adc
jb
add
cmp
test
orl
into
pushf
pop
nop
out
iret
imulb
fistps
jmp
push
xor
ljmp
push
call
push
sar
outsb
shrl
ljmp
and
popf
jg
decl
add
test
shlb
loopne
add
adc
adc
cmp
or
pop
out
or
clc
mov
enter
insb
xchg
outsl
or
lcall
filds
mov
xlat
inc
into
xchg
mull
inc
rcrb
stc
leave
lea
clc
mov
pushl
popf
and
bound
inc
lods
aad
out
les
add
mov
into
push
add
push
mov
ss
daa
lock
call
push
int3
pushf
lods
cmpsb
enter
shll
jno
pop
in
decb
cmp
divl
xchg
xchg
rcll
clc
test
popf
adc
nop
add
ljmp
js
mov
xlat
dec
sarb
xor
lcall
jb
xchg
cmpsb
notb
xrelease
dec
xor
aas
shlb
insl
pop
jmp
call
cwtl
ret
sub
mov
xor
scas
rolb
in
not
xor
aaa
push
rcl
cmp
xor
sar
daa
push
int
mov
gs
fidivrs
sub
scas
mov
loopne
jae
incl
mov
test
jecxz
lock
adc
mov
ret
leave
xchg
ds
clc
nop
jmp
fdivs
xor
pop
jno
add
sbb
mov
movsb
cli
xchg
mov
pop
and
push
jae
adcb
mov
push
mov
or
in
cwtl
adc
inc
sahf
push
pop
sub
stos
popa
rcl
out
incl
push
pop
aas
push
enter
cmp
je
popa
mov
xchg
pop
adc
xchg
pusha
arpl
mov
push
sub
pop
mov
ret
or
stos
mov
ljmp
or
dec
jbe
imul
testb
mov
cmp
pop
jle
mov
jmp
aam
dec
and
mov
into
sahf
cli
js
shlb
cmpsb
inc
cmc
dec
dec
in
jmp
es
rcrb
mov
call
and
cld
in
dec
sbb
sbb
xchg
lret
decl
popa
xchg
or
dec
mov
mov
aas
aaa
cli
sub
ss
dec
test
sbb
pop
or
push
mov
mov
ret
push
pop
int
sbb
adc
in
xor
add
push
push
jo
out
pmaxub
gs
sbb
incl
mov
adc
xchg
xor
fwait
pop
mov
cmp
lods
xchg
xor
push
xchg
pushl
jg
cmp
lcall
mov
scas
push
call
xchg
add
or
mov
les
lret
pop
jecxz
mov
jne
cltd
pop
ret
mov
xchg
popf
dec
arpl
test
sbb
data16
push
insb
call
jne
cmp
sub
sbb
xor
in
fs
ljmp
fwait
stos
mov
adc
mov
xlat
adc
sahf
inc
loop
aaa
loope
decl
call
call
insb
push
and
scas
lock
sub
lret
rclb
es
icebp
test
mov
pushf
je
daa
or
xchg
test
and
sbb
popl
incl
out
dec
outsb
mov
ret
jecxz
cmc
push
xor
fsubrl
std
clc
push
ds
rol
repnz
lret
or
insl
imul
cmp
or
push
cmp
sarb
std
das
push
cmpsb
or
dec
adc
xor
std
push
push
mov
leave
pusha
inc
loop
push
fsts
ja
inc
cmp
xchg
dec
jp
in
jb
insb
add
push
mov
addl
push
ljmp
fdivl
fldl
sbb
xor
mov
lea
pop
add
outsl
fdivs
test
insl
push
jge
xor
lret
testb
cmpsb
xchg
xlat
jae
ret
lock
mov
divb
cmp
test
fldcw
inc
add
call
iret
insl
jo
lret
add
leave
adc
jmp
test
call
or
bound
mov
jle
sub
ds
fisubs
xlat
adc
mov
decl
jecxz
push
cld
ljmp
lock
icebp
cmp
inc
or
sbb
sbb
and
mov
outsb
ret
push
mov
xor
daa
out
test
xchg
mov
cltd
push
xor
sbb
shlb
roll
fisttpll
cs
ds
inc
sub
or
popf
or
sbb
leave
mov
jne
stos
adc
and
int
lcall
test
xchg
xchg
xchg
js
out
addr16
lcall
xor
sbb
cld
rorl
loop
add
mov
add
jns
fbstp
ret
incl
incl
stc
cmpsb
cmp
mov
int
xchg
push
gs
call
jnp
outsb
jne
jb
push
jae
push
loope
loopne
jle
add
cltd
test
aaa
dec
push
or
sti
dec
mov
mov
int
adc
push
cmp
mov
cwtl
dec
pop
mov
dec
adc
arpl
pop
xchg
jno
mov
jns
cmp
cmp
incl
cmpsl
mov
mov
fbld
xor
inc
pop
cltd
cmp
pop
mov
fldcw
push
rcl
cmpsb
sahf
jecxz
add
push
shl
xchg
dec
or
loopne
pushl
mov
inc
mov
lock
xchg
cmp
mov
and
add
orb
inc
mov
jmp
cmc
loope
scas
int3
pop
lods
fwait
pop
mov
jecxz
xlat
xor
fisubrl
inc
imul
mov
in
out
mov
mov
test
mov
lods
add
in
cs
nop
mov
int3
add
push
jno
lcall
addr16
jg
out
js
mov
mulb
inc
jo
into
dec
cwtl
or
mov
cmpsl
sar
popf
call
idivl
test
xor
sub
dec
rorb
jmp
mul
push
add
ljmp
lret
js
pop
xchg
jle
decl
dec
sbb
xor
cwtl
enter
repnz
adc
xchg
sarl
test
xor
pop
push
or
xor
aaa
cmp
or
adc
cs
fidivrl
inc
call
aas
mov
addr16
or
xchg
dec
scas
aaa
pop
push
and
aam
fiaddl
inc
test
lods
ljmp
jno
push
loope
pop
pop
dec
dec
jp
jle
and
cmp
dec
jecxz
xchg
push
nop
repz
push
movsb
fs
mov
sub
mov
dec
jne
testb
pop
jmp
shlb
mov
fwait
lea
ss
sub
pop
jo
bnd
adc
add
inc
popa
mov
pusha
or
xchg
decl
sbb
push
incl
ds
mov
idivl
inc
and
inc
shlb
push
mov
jne
add
pop
ja
add
cld
xchg
mov
mov
fists
divb
cltd
cmc
out
or
add
cmp
iret
cmp
shlb
pushl
cltd
cli
or
test
dec
sbb
push
outsl
repnz
sub
sub
or
add
leave
mov
int
jnp
int3
rclb
outsb
enter
loopne
sbb
push
cmc
jmp
add
lods
movsl
cmpsb
mov
out
push
push
sbb
lcall
lock
cmp
push
add
mov
outsl
nop
into
or
lea
inc
cmp
mov
xchg
test
test
mov
cltd
fdivrp
dec
sbb
decl
rorb
mov
jg
cli
mov
outsb
ss
fs
shll
insl
or
jne
pop
ljmp
cmp
decl
jnp
dec
adc
push
enter
insb
or
push
jle
stos
inc
sbb
cmp
xlat
or
shl
sub
cwtl
or
cmpl
xchg
lret
mov
cmp
xor
rcrb
movsb
or
add
aas
in
scas
ds
dec
pop
push
xor
je
sub
daa
mov
jne
pop
aad
movsl
decl
addl
jp
in
push
rcr
test
xchg
stc
dec
lea
lock
int
inc
mov
adc
push
clc
std
adc
mov
mov
mov
push
decl
push
test
roll
subl
adc
fsub
pop
addr16
push
or
sbb
sbb
sub
sub
ljmp
packuswb
shrl
call
jle
mov
bound
add
loope
xor
icebp
xchg
sar
add
or
pop
adc
loope
scas
xchg
jnp
cld
push
sub
xor
imul
add
cltd
jbe
mov
cmc
lret
in
shll
mov
ret
sub
pop
rcrb
ss
fucomp
loopne
pushf
or
fcmovnu
nop
mov
jecxz
jb
aad
arpl
push
xor
pop
in
mov
sbb
out
cmp
add
cli
gs
xlat
cmpsl
ja
dec
inc
aam
pop
bound
jl
pop
jo
cmp
sub
push
xchg
cmc
incl
push
cwtl
sahf
mov
or
dec
incl
mov
and
mov
push
and
mov
dec
mov
mov
add
sub
cs
cmp
jmp
enter
decl
lods
jl
pop
mov
pop
mov
push
jbe
rol
daa
adc
das
enter
dec
xor
mov
cli
push
fcomps
test
jno
push
sub
dec
repnz
ljmp
rcrb
pushl
lds
push
and
stos
jae
rorb
mov
insl
fcomps
jo
jno
push
xchg
xchg
xorb
pop
data16
adc
mov
push
iret
sub
pop
jp
out
shr
decl
leave
js
test
outsl
lea
mov
pop
jns
sbb
lods
inc
imul
test
pusha
dec
mov
cmp
negb
cli
jmp
cmp
test
xchg
incl
pop
dec
xchg
mov
pop
jmp
in
test
nop
dec
xchg
pop
push
add
imul
sub
shrl
aam
mov
sti
or
jns
dec
sub
push
shlb
cmpsl
fnstenv
push
and
mov
and
gs
dec
pushf
lcall
mov
jb
aas
push
cmp
xchg
push
push
rcrb
test
sar
hlt
test
dec
jo
adc
xchg
dec
lcall
xlat
mov
sarl
pop
xor
mov
jmp
das
ret
dec
xchg
sbb
ja
pop
rclb
push
hlt
jmp
pop
inc
test
sahf
xlat
in
push
ljmp
jge
mov
lds
adc
pushf
fwait
add
loope
mov
shrl
or
orl
push
add
adc
jnp
jp
or
or
xchg
incl
inc
lret
jne
push
cmp
push
jl
popa
aam
push
jmp
adc
icebp
fstpl
decl
scas
sbb
aaa
inc
leave
incl
xchg
sar
adc
inc
push
dec
push
xor
cwtl
xor
in
xor
or
or
xchg
mov
adc
decl
imul
leave
or
ja
pushf
cld
jne
test
movsb
lea
mov
adc
and
ljmp
xor
jmp
mov
outsb
ljmp
mov
aaa
mov
xchg
cmp
scas
mov
decl
push
sahf
mov
int
xchg
insl
dec
adc
cmp
pop
iret
adc
adc
cmpsb
call
shll
cs
add
sub
xchg
cmp
mov
idivl
mov
fildl
leave
cwtl
ljmp
call
sbb
lahf
insb
aaa
or
and
inc
sti
jle
jl
adcl
into
pop
rcrl
or
cmpsl
jge
nop
jecxz
adc
xchg
dec
xor
cli
call
push
mov
pop
jmp
cmp
dec
ljmp
mov
pop
cld
out
cs
jl
aam
or
call
or
test
pop
mov
fwait
loopne
xorb
ret
mov
dec
aad
sti
addr16
add
pop
xchg
xor
dec
cmc
push
movl
sti
lcall
mov
std
loop
decl
bswap
cmp
stos
mov
shl
mov
loope
movsl
mov
and
call
mov
stc
pop
adc
mov
or
mov
lds
sub
scas
xor
push
in
add
arpl
int
lret
pushl
adc
dec
ljmp
out
inc
pxor
arpl
pop
jecxz
shll
loope
fdivl
adc
cltd
cmp
xchg
cli
add
icebp
cmpsl
insb
out
cmp
cmp
and
mov
mov
int
rcr
in
cmp
sbb
push
push
mov
jb
xchg
push
xchg
popa
jl
test
es
outsb
stos
aas
mov
out
dec
faddl
xor
adc
jns
icebp
scas
jmp
mov
movsl
push
pusha
clc
test
dec
aas
daa
pop
sub
inc
mov
sti
pop
nop
vsubsd
into
xchg
pop
scas
out
adc
insb
bound
inc
sub
sbb
mov
pop
loopne
add
mov
cmpb
fistpl
sarb
mov
pop
jmp
cmp
ljmp
mov
stos
lcall
jae
xorb
dec
cmp
fsubrs
out
lcall
xchg
xchg
and
adc
lods
add
sub
sahf
decl
enter
mov
push
sbb
test
add
adc
mov
jno
mov
daa
jmp
adc
dec
rdtsc
pop
in
call
js
inc
repnz
inc
ljmp
imul
pushf
jp
test
mov
xlat
jae
ret
in
loope
insb
std
movsb
inc
jo
fbld
fdivl
test
out
push
push
imul
pushl
aam
aad
or
call
and
jnp
das
pop
jns
or
cmp
sbbl
mov
jecxz
in
incl
sahf
adc
rolb
ljmp
push
adc
sub
dec
sbb
incl
arpl
lret
xchg
push
ficoms
je
dec
adc
clc
testb
fwait
loope
ret
add
xchg
pop
mov
mov
push
mov
iret
test
sbb
inc
xor
aas
shl
cmc
push
xor
xlat
test
mov
mov
push
int3
inc
jle
mov
ljmp
push
or
fistpll
stc
sub
mov
add
push
jmp
into
call
sub
xchg
fcom
dec
jb
inc
out
call
pop
or
daa
xchg
mov
lret
mov
push
cmpsb
push
and
jl
cltd
or
mov
repnz
mov
cmc
jnp
pushl
scas
icebp
push
or
mov
cs
ja
rorl
and
ljmp
lods
mov
jo
add
pop
ret
mov
xlat
pop
push
add
jb
add
sbb
xor
xor
fcmovnbe
ss
or
xchg
pushf
call
outsl
jp
mov
xchg
and
or
test
negb
jo
imul
ss
dec
mov
mov
xchg
push
sub
cmpsb
hlt
sub
mov
or
in
push
add
sbb
leave
adc
xchg
lcall
decl
cmp
int
push
or
shrl
enter
cs
sbb
jle
dec
push
int
cmp
ds
xchg
mov
iret
adc
inc
imul
movsl
cli
cwtl
or
mov
sub
imul
sti
push
leave
inc
ret
pushl
insb
repnz
mov
push
scas
or
ret
mov
push
shr
mov
daa
mov
scas
iret
aad
mov
cmpsb
dec
add
rcrl
xchg
dec
les
dec
dec
cs
out
pop
inc
sbb
push
in
mov
stos
clc
add
imul
jae,pt
call
xor
call
dec
iret
sbb
ds
xchg
sub
inc
movsl
push
dec
addr16
cld
mov
pop
test
loope
dec
out
sub
adc
stos
fwait
incl
or
mov
and
ljmp
xor
xchg
leave
ljmp
stc
mov
cmp
int
mov
gs
jle
push
jnp
test
divl
sub
mov
cmp
cltd
xor
nop
stos
rcrb
lods
jae
mov
testl
stos
pushl
lods
roll
test
dec
or
ljmp
nop
dec
push
sahf
mov
pushl
jno
call
aas
sbb
mov
cmp
ror
add
pop
in
or
adc
xor
mov
jmp
mov
mov
iret
pushf
lcall
ds
cmp
xchg
sub
in
sub
sub
mov
push
scas
jo
sbb
es
in
ss
lahf
pop
dec
fsubl
xor
lock
mov
xchg
out
dec
popa
or
orb
jno
aad
push
push
inc
loop
vmovaps
idiv
sbb
loopne,pn
cmpb
jp
outsb
call
sub
push
mov
xchg
and
inc
jbe
int
push
lcall
pop
sti
es
fcoms
gs
add
pop
addb
mov
lcall
and
into
dec
mov
pop
cmp
test
test
xchg
jae
je
sbb
fadd
xor
pop
sbb
nop
or
mov
and
dec
xchg
out
fcomps
iret
test
cld
lret
inc
sahf
xchg
jg
repz
test
scas
in
sub
movsl
sub
hlt
nop
or
test
pop
shrb
lret
xor
ja
inc
iret
jno
mov
add
loopne
lahf
xor
cmp
dec
repnz
cltd
push
sbb
xchg
inc
testl
adc
and
sub
add
xchg
mov
pop
outsl
lcall
jle
jg
popa
inc
mov
inc
or
aaa
mov
loopne
mov
jmp
mov
pop
imul
xor
insb
and
cmp
cmp
sub
icebp
adc
mov
scas
push
pop
adc
xor
push
sub
mov
sahf
std
shrb
push
lods
jg
jns
push
ss
lret
call
push
mov
ret
xor
filds
sub
scas
fdivrl
or
xor
pushf
mov
push
sub
mov
sub
xlat
inc
sarb
push
adc
stos
hlt
mov
xor
lret
mov
pop
add
mov
xchg
jne
and
pop
inc
rorl
fists
incl
rcl
ret
push
rclb
push
lret
subl
xlat
sbb
add
push
iret
xchg
cmp
ljmp
or
pop
das
cltd
repnz
pop
mov
icebp
scas
ljmp
push
rclb
or
fsub
xchg
push
push
decb
mov
repz
icebp
pushl
jne
cmp
test
stc
test
lds
sbb
xor
push
daa
fistpl
jmp
jge
mov
icebp
pushf
mov
in
mov
outsl
push
and
lea
leave
mov
jle
xor
dec
jae
jg
or
adc
inc
out
mov
test
mov
negb
sub
or
fstps
inc
sub
pushl
or
mov
adc
cmp
lock
or
aad
decl
insb
cli
loope
jle
jns
loop
dec
jmp
ds
xchg
sarb
mov
sar
cwtl
out
or
mov
imul
jne
daa
arpl
incl
inc
jecxz
dec
jno
adc
cltd
in
mov
into
out
adc
push
xlat
lods
je
mov
or
aam
jmp
sub
push
movsl
or
cmpsb
jnp
sbb
shl
dec
imul
sub
inc
add
in
cmc
add
clc
fisubs
xchg
mov
shr
incl
mov
adc
mov
ljmp
jmp
add
mov
enter
icebp
add
cmp
sbb
mov
pop
loop
xchg
test
insl
stos
adcb
inc
xchg
iret
outsl
xor
hlt
or
lods
fsts
sar
stos
addr16
adc
jecxz
cmp
iret
gs
orb
std
jns
xlat
xor
cmpsl
loopne
dec
adc
dec
sub
cltd
sbb
mov
sbbb
adc
scas
mov
or
shlb
ljmp
fldcw
int3
mov
je
arpl
lods
jbe
jno
popf
cs
repnz
cmp
dec
pop
fidivs
out
icebp
cli
stc
out
jmp
push
sbb
jmp
repz
adc
je
in
add
clts
mov
lcall
and
popa
cmp
into
xchg
out
es
mov
jl
add
ret
call
mov
jle
pusha
mov
stos
push
push
sub
inc
roll
push
sti
mov
jmp
mov
pop
pop
out
jge
repz
pop
adc
in
inc
add
ficompl
ds
pop
jmp
icebp
mov
xchg
and
jp
sarl
jns
or
jge
dec
sbb
hlt
icebp
paddsw
lcall
loop
pop
imul
adc
outsl
stos
jmp
int3
adc
test
fmuls
add
cld
sbb
push
jbe
in
enter
rcll
mov
add
jge
iret
out
pop
dec
decl
shll
test
jg
sahf
lret
incl
pop
sub
pop
out
adc
lcall
jg
jmp
mov
pop
push
nop
pop
test
std
fcoml
out
mov
xor
push
jbe
in
adc
push
pop
pop
mov
xchg
xchg
jecxz
lods
xor
pop
repz
mov
pop
xchg
inc
mov
aam
or
cmc
popa
decl
add
scas
shrl
dec
pop
cmp
push
push
push
and
cmp
cmp
jecxz
inc
push
repz
jmp
in
sub
dec
jne
stos
scas
push
sub
jg
cmp
xor
cmp
fwait
add
jle
lret
adc
movsb
xor
jo
or
inc
into
jmp
and
or
lcall
mov
push
shll
mov
lcall
shl
repnz
cmp
inc
mov
or
call
mov
test
and
pop
inc
sub
sub
mov
and
ds
leave
jge
push
nop
adc
andl
jae
rorb
out
and
xor
mov
jmp
push
lds
pop
xlat
popf
aad
jo
loop
push
sbb
call
jnp
ret
clc
addr16
dec
adc
aas
pushl
ja
jl
push
fcos
mov
shr
rorl
xchg
movsl
sbb
stos
inc
push
or
mov
push
sbb
jp
sti
mov
std
push
or
mov
fmul
xor
ljmp
out
lea
mov
and
ljmp
sti
out
xor
xchg
mov
inc
or
add
mov
incl
dec
pushf
add
stos
out
out
mov
lcall
dec
insl
in
mov
in
inc
imul
popa
call
mov
xchg
mov
hlt
push
aaa
insb
fsubr
xchg
jle
jae
ret
sbb
ds
xlat
ja
xchg
add
mov
imul
call
and
loop
sbb
add
and
scas
mov
or
test
je
out
sub
xchg
jo
incl
je
cmpsb
fdivrp
scas
das
push
mov
mov
mov
xor
jl
adc
pop
aad
lods
clc
inc
aaa
lods
popf
pop
dec
pushf
mov
sub
aam
push
push
mov
decl
push
mov
repnz
xor
sbb
imul
mov
aas
std
call
mov
hlt
psrad
add
mov
pop
rol
stos
gs
push
data16
in
push
and
fisubs
sbb
divb
cmpsl
rcl
orl
mov
es
int
mov
pop
dec
jnp
pusha
ljmp
call
aam
es
lods
dec
add
cltd
or
or
sbb
jecxz
call
lods
jbe
mov
test
ss
imul
pop
shll
call
clc
add
jmp
iret
xchg
ret
sbb
stos
inc
cmp
shlb
cli
loop
decl
xchg
mov
in
sbb
add
cli
js
fbstp
fadds
xlat
mov
call
popa
es
rcr
xchg
lret
or
popf
mov
mov
jecxz
add
int3
jmp
bound
scas
jp
xorb
add
xchg
ret
shr
mov
push
lods
add
test
pushl
sbbl
pusha
jge
je
push
adc
sub
pop
cwtl
fisubl
jmp
pop
dec
loope
mov
jl
movsl
pop
or
js
dec
mov
sbb
lods
or
jl
enter
jbe
ljmp
inc
lcall
insl
mov
mov
cmc
pop
and
dec
dec
pop
pushl
xchg
mov
insb
call
inc
lods
lcall
adc
ljmp
sbbb
out
inc
int3
push
incl
or
sub
and
cld
repz
push
mov
xor
cmpsb
or
xor
push
inc
aam
and
repnz
mov
lcall
mov
cmp
insb
sub
lds
pushl
xchg
cmc
in
push
iret
sar
sbb
xchg
mov
push
outsl
lcall
xchg
icebp
jg
jecxz
mov
ffreep
pushl
cmp
aam
aas
stos
decl
popa
outsb
mov
les
push
pop
das
and
jp
or
and
cmp
mov
jecxz
adc
repz
leave
jmp
call
repnz
jmp
add
cmp
rcrb
sub
cwtl
movsb
popf
fwait
jp
mov
mov
pushl
mov
sbb
inc
adc
ja
cmp
sub
gs
mov
pop
cmpsl
mov
sub
inc
lock
rcl
movsl
and
shlb
sti
test
pop
imul
push
push
cmc
xchg
xchg
int
insb
xor
lea
inc
jbe
loop
pop
pop
jg
add
pusha
push
jbe
jne
cmpl
and
dec
lods
xchg
and
stc
pushl
aas
or
xchg
mov
stos
imul
int
js
jmp
sub
mov
in
decl
leave
scas
pushf
dec
add
call
data16
jo
push
mov
outsl
loopne
xor
in
mov
xchg
incl
dec
pushf
cmp
mov
xchg
fs
jb
dec
push
sbb
aam
sub
fndisi(8087
outsl
fimuls
mov
add
push
mov
lea
lret
sahf
ucomiss
ljmp
pop
call
cwtl
push
and
outsb
or
inc
sub
sti
push
cmp
add
cmc
add
adc
call
test
xchg
orl
adc
stos
leave
jp
mov
lods
or
scas
dec
lret
add
insb
mov
dec
or
jns,pn
pop
xor
xlat
imul
push
cwtl
lods
movsl
adc
jecxz
pusha
jns
sub
and
popa
loopne
inc
shlb
out
fs
push
cmpsb
jnp
into
mov
das
mov
add
adc
cli
inc
repnz
stc
push
pop
jbe
jmp
int
daa
ljmp
cld
aam
mov
incl
stos
jne
mov
dec
call
popf
cmp
sub
xchg
push
mov
lret
adc
dec
pop
xlat
leave
rcl
lds
incl
push
xchg
int3
clc
xor
mov
lods
xor
test
push
add
jmp
add
int3
cmovl
aaa
stos
dec
pushl
mov
imul
mov
mov
shrl
addr16
ljmp
dec
ss
shlb
inc
and
jnp
push
jae
mov
pop
pushl
dec
call
inc
jae
or
add
jns
test
xor
jbe
pushl
adc
outsl
inc
ss
push
lods
out
inc
sbb
aad
push
nop
push
jmp
popa
xchg
jno
subb
mov
add
dec
cltd
cli
cmp
mov
das
bound
sub
jne
stos
mov
in
mov
adc
sahf
sbb
add
scas
loopne
xchg
std
and
pop
aas
add
and
sarl
inc
xchg
test
aam
pusha
orb
add
sub
or
add
call
xor
and
lods
loopne
sub
xlat
mov
inc
pop
daa
or
jge
scas
pop
call
stc
mov
mov
mov
testb
stos
jb
xchg
pushl
jecxz
icebp
js
data16
sbb
fmulp
push
push
lcall
add
pop
mov
lret
push
mov
push
mov
cld
fnstcw
adc
es
pop
mov
pop
iret
mov
sub
imul
inc
xchg
adc
or
lret
push
testl
mov
jnp
je
sbb
imul
out
adc
mov
jae
in
call
test
pushf
lds
out
in
push
orb
arpl
jmp
or
ja
pop
jae
int
cmpsl
in
out
aam
sub
pop
add
jb
ja
cwtl
add
pop
add
sti
mov
add
and
cmp
inc
repz
out
scas
movsb
sbb
call
aad
test
or
incl
push
cmp
rolb
inc
incb
lea
repz
add
pop
jo
repnz
je
mov
inc
jae
xor
xor
mov
or
fsubrs
notl
repnz
mov
out
sbb
add
sbb
ret
hlt
mov
push
xlat
test
mov
scas
xchg
dec
add
pop
mov
inc
loopne
sub
fisttps
stos
add
ss
icebp
ret
jb
inc
pop
push
pop
out
sbb
sahf
xchg
decl
pop
lods
out
sarl
rorl
aad
lret
jmp
repnz
jl
cmp
das
jnp
dec
mov
mov
sub
or
into
push
add
movsl
cmp
pushl
inc
lods
push
scas
fwait
popf
rorl
outsb
xor
add
lods
nop
insl
movsl
shll
jmp
mov
fdivr
jb
or
sbb
xor
movsb
fcmovnb
aam
decl
in
pushf
popa
rolb
pop
outsl
icebp
imul
dec
xor
ljmp
outsl
lahf
xchg
stc
adc
lock
mov
test
xchg
sub
jmp
adc
flds
fildl
push
lcall
stos
cltd
mov
and
pop
sbbl
jne
cmp
mov
ficoms
mov
int
or
mov
xchg
sub
clc
fdivrp
ja,pt
arpl
aas
insl
mov
negl
cwtl
jle
pusha
mov
leave
lcall
and
add
inc
lahf
ljmp
add
daa
adc
or
and
clc
or
je
xlat
rcll
out
lret
xor
mov
cli
jbe
iret
jmp
fadd
sub
inc
decl
xor
xchg
inc
mov
and
xchg
cmpsl
push
push
popf
pop
ljmp
pop
call
decl
xlat
dec
mov
mov
push
push
adc
mov
addr16
mov
out
inc
adc
incl
popf
loop
decl
setae
push
stos
das
incl
inc
ljmp
fbld
out
pushl
mov
psrlw
add
inc
mov
xlat
aaa
xchg
int
and
gs
add
cwtl
sub
mov
clc
sbb
pop
enter
ret
xor
cmp
jbe
xchg
imul
ss
or
repz
cmp
scas
add
aas
decl
rcrl
jns
pop
cmp
ds
cli
xchg
xor
inc
daa
iret
mov
pop
mov
mov
out
cmp
lcall
in
xchg
mov
push
scas
sti
or
repz
push
xor
cmp
xchg
cld
dec
fdivrs
push
lcall
mov
rcl
xchg
bound
fldenv
loop
test
cmp
ljmp
fcomip
inc
insb
in
lcall
xchg
jecxz
sti
cmpsb
push
lcall
roll
cmp
jmp
cld
or
inc
adc
dec
mov
aad
pop
pop
jns
jg
push
insb
mov
mov
loop
pop
mov
jo
adc
jmp
jmp
pop
es
testb
xchg
ss
imul
neg
lcall
setno
shll
pop
repz
stos
mov
call
sub
mov
jmp
out
insb
hlt
or
fdivrp
jns
out
inc
lret
lds
fnstsw
add
push
adc
test
mov
cmc
scas
dec
mov
pop
push
push
addb
mov
lcall
inc
cmc
std
jge
xchg
fildll
dec
pop
popa
into
out
jg
push
incl
iret
imul
aam
imull
call
jne
jmp
les
cmp
gs
mov
and
cmp
mov
xor
jg
xchg
imul
negl
xchg
xor
shr
stos
adc
addr16
pop
fwait
xchg
sarb
gs
inc
lods
shlb
mov
adc
jecxz
aad
jne
loope
xchg
mov
xchg
insb
fsubrs
mov
adc
mov
lcall
and
mov
call
xchg
adcb
jg
test
sbb
inc
mov
jmp
push
add
inc
dec
pop
test
repz
push
ret
out
insl
push
inc
leave
cmp
push
xchg
aaa
dec
push
sbb
out
nop
adc
or
jmp
aas
jl
mov
push
int
push
je
mov
jo
ljmp
adc
jae
xchg
frstor
push
mov
leave
arpl
push
shll
mov
add
add
in
jno
fwait
add
loop
movsl
pushl
mov
pop
outsb
push
jb
call
iret
xor
pop
add
or
sbbl
iret
pop
and
outsl
out
cmpsb
jo
in
les
pop
xor
ljmp
mov
xchg
ficomps
lret
add
push
xchg
mov
add
jb
jmp
add
add
out
lock
js
jne
jg
loopne
repz
lcall
loop
dec
cmp
clc
call
loopne
decl
enter
mov
jle
insl
push
sbb
lds
xor
adc
adc
repnz
scas
daa
popf
jns
pushf
fmull
lds
mov
gs
pop
int3
push
scas
push
dec
sahf
into
call
fsubrs
clc
and
push
pop
daa
fidivrs
inc
add
aad
cwtl
ljmp
push
adc
in
test
mov
imul
lahf
adc
cs
sbb
mov
sub
fildll
popf
repz
sub
xchg
mov
lcall
xchg
fmull
adc
enter
movb
xor
xchg
mov
jle
addr16
icebp
cmpsb
or
sbb
and
dec
into
jno
in
iret
sub
adc
jae
insl
data16
mov
add
pop
ja
cwtl
shll
adc
mov
rcrb
and
push
mov
shrb
mov
je
clc
xchg
lcall
loopne
or
add
cltd
nop
lds
sarb
stc
mulb
jbe
aas
adc
orb
cmpsl
lcall
mov
mov
decl
and
or
sahf
sbb
js
cltd
cmp
jmp
cmpsl
ljmp
aas
lret
pop
popf
testb
or
ret
in
jae
fiadds
stc
dec
sbbb
xchg
push
fsubs
pop
decl
xchg
adcb
aas
mov
add
mov
xchg
add
clc
int3
xor
pusha
incl
xorb
sub
inc
dec
lods
jmp
jnp
psubq
aas
xchg
mov
lret
jge
xor
pop
mov
pop
cmp
mov
push
xor
xor
lcall
cwtl
jno
push
incl
sbb
mov
cmc
icebp
jl
shll
inc
mov
pop
mov
mov
jae
dec
or
cmp
cmp
sbbb
mov
jne
cwtl
aad
xchg
filds
mov
pop
jae
or
xchg
fisttpll
daa
dec
pop
pop
sbb
out
xchg
and
popa
std
fdivr
test
cmp
sbb
in
pop
mov
in
jns
aas
jnp
cmp
jl
push
loop
mov
mov
xlat
ret
test
cmpsl
or
fstpl
std
call
adc
inc
jb
dec
add
mov
aaa
outsb
mov
sbb
jg
arpl
lods
push
cmpsl
les
out
pop
pop
and
std
or
cld
add
push
jecxz
mov
loopne
movsb
fimuls
call
add
add
add
pop
cmp
mov
xor
dec
out
fwait
jbe
sti
dec
lahf
xlat
cld
push
sbb
jge
jo
pop
push
inc
jnp
mov
cmp
or
into
or
mov
icebp
xor
mov
mov
adc
or
adcb
hlt
jo
push
inc
idiv
pop
mov
push
xchg
notl
pop
push
or
pop
jmp
fsubrl
inc
inc
xchg
cmp
bound
dec
adc
mov
cmp
push
push
sub
jecxz
out
test
enter
mov
movsb
test
clc
mov
ret
test
jl
loope
jnp
or
fimull
sarb
mov
inc
push
mov
or
outsb
push
pushl
adc
loopne
rorl
in
call
xchg
add
mov
ljmp
outsb
dec
push
rorl
lahf
jb
jmp
sbb
xor
xchg
fisttpl
xchg
mov
nop
mov
or
xor
and
jns
xor
ljmp
rol
xchg
ret
sahf
cltd
stc
shrl
incl
ljmp
aam
xor
lahf
stc
sti
add
xor
imul
add
pop
daa
sbb
adc
jae
cmp
push
jmp
lods
or
pushl
iret
sahf
enter
insb
jmp
jle
loopne
sbb
xchg
shrb
xlat
pop
stc
lcall
and
int
jmp
imul
jns
stc
jge
and
mov
mov
ljmp
into
mov
mov
decl
mov
mov
sbb
mov
out
ds
jle
xchg
shl
imul
incl
jle
inc
incl
rorl
aas
mov
popf
rol
and
shrl
mov
mov
adc
adc
mov
and
jl
mov
mov
addr16
push
inc
test
inc
incl
sbb
pushf
shl
punpckldq
stos
fsubs
mov
data16
subb
xchg
xchg
and
add
cmpsl
sar
lock
scas
mov
int
mov
gs
cmpsb
dec
jnp
stos
xor
xlat
push
test
xor
shl
push
shrl
cltd
jge
lcall
fmuls
jbe
push
or
push
push
ficoms
out
fbstp
std
fistl
pushl
cmp
dec
pop
jno
gs
push
ja
cmp
xor
out
fisubrs
call
jle
jg
xlat
pop
pushl
mov
adc
pop
xchg
cmp
outsl
popa
movl
adc
sub
setge
or
lcall
inc
es
fnstsw
call
xor
fsubl
cmp
lcall
dec
test
sbb
fs
shlb
std
or
rorb
pushl
das
or
inc
and
sarl
pop
testl
aam
add
in
jge
or
imul
pushl
pop
dec
ja
add
std
sbb
pop
pushl
out
mov
outsb
sbb
push
or
push
icebp
xlat
fprem1
lcall
call
pop
insb
mov
jae
test
ds
fsubs
xchg
cld
decl
mov
cmpb
push
cs
mov
cld
xchg
outsb
sub
sub
dec
call
popf
out
jns
or
repz
lret
mov
clc
popf
pop
shl
testl
xor
rcrb
cmp
dec
std
mov
std
and
test
dec
decl
pop
inc
push
int
arpl
push
jg
push
jp
std
imul
sub
sbb
incb
push
test
mov
aam
pushl
mov
dec
vpermq
jbe
jp
andl
cmp
stos
shl
inc
loope
movsb
mov
mov
inc
fnsave
scas
push
ljmp
mov
call
fwait
mov
push
int3
int
pop
ljmp
in
imull
push
repz
mov
adc
mov
inc
lcall
add
call
mov
out
or
gs
jae
fnstenv
inc
mov
rclb
popa
xor
fucomip
mov
loope
push
lcall
lods
out
inc
add
leave
jo
xchg
jg
mov
ret
scas
mov
push
push
repz
data16
daa
cmpsl
add
jns
mov
clc
xchg
or
je
sub
leave
sbb
dec
lret
jl
call
jnp
jmp
ja
pop
pop
ljmp
sub
scas
and
xchg
push
push
movsb
adc
push
sbb
shl
sti
cmp
insl
in
pushl
ret
inc
add
scas
and
mov
push
pop
call
popf
lods
push
cmc
xor
fstp
out
testl
pushf
add
pop
iret
daa
mov
outsl
call
or
ljmp
push
jge
add
or
xor
or
stos
xchg
test
ffree
sbb
outsb
pop
jmp
sub
mov
or
aaa
sub
fxam
add
xor
test
xor
mov
mov
lcall
cmpl
mov
mov
xor
clc
or
and
aaa
enter
cs
inc
pop
popa
jle
mov
sbb
xchg
xlat
ficoml
dec
testl
mov
leave
sarl
and
mov
adc
fwait
mov
sbb
imul
push
lods
xchg
push
mov
pusha
fcompp
inc
jl
or
push
nop
call
push
jmp
scas
dec
sar
test
imul
push
add
loop
sbb
sbb
xor
cmpsb
nop
popf
dec
jns
mov
sub
push
mov
or
dec
call
aas
ljmp
xor
pop
addr16
ljmp
push
sbb
ljmp
loop
jl
bswap
mov
ljmp
inc
sbbb
into
test
jl
movsb
stos
xor
dec
add
fdivr
and
test
jb
iret
int
movl
sbb
mov
aas
jg
xor
jae
pop
loopne
push
popa
add
cltd
push
xchg
sar
cmp
fs
push
add
sti
ss
div
jae
arpl
nop
popa
pop
mov
out
sar
in
jno
scas
add
inc
lods
dec
cmp
push
fiadds
mov
and
movb
bound
adc
pop
pop
call
cmp
mov
push
push
push
mov
test
pushf
add
cmp
mov
xchg
sub
sarl
jge
cmp
mov
int
xchg
clc
js
int3
repz
out
aaa
pusha
or
addl
lcall
jnp
adc
jo
shlb
pusha
sbb
into
js
pop
sahf
xchg
pop
jge
jmp
inc
adc
stc
pusha
inc
sbb
das
fimull
sub
mov
push
mov
add
push
or
sbb
or
dec
push
cmp
icebp
xor
cwtl
lcall
sub
imul
sbb
and
fnsave
dec
dec
mov
stc
in
call
cld
push
jle
call
daa
rorb
lcall
iret
mov
jl
sub
mov
out
jmp
dec
or
ret
dec
test
call
in
lret
loop
mov
call
adc
jg
pushl
mov
lahf
push
xchg
sub
mov
stos
or
incl
pop
sbb
js
in
mov
std
pop
lahf
cmpsb
call
jge
shlb
or
add
pusha
lret
push
aaa
sbb
imul
xor
sti
dec
adc
mov
inc
pop
mov
test
lods
sti
insb
and
push
stos
mov
dec
cli
cmp
lods
movsb
mov
clc
popf
push
and
out
jne
pushl
test
inc
imul
mov
lret
adcl
and
push
push
dec
push
in
into
out
shlb
add
add
imul
ret
or
out
xchg
pop
add
mov
int
je
mov
lods
mov
inc
loopne
jp
inc
mov
push
dec
inc
push
test
cmp
lret
pop
push
mov
mov
aad
mov
mov
fistpll
or
push
ret
add
sbb
push
pop
cmpsb
sub
test
out
jmp
push
xchg
call
je
lahf
adc
shlb
jno
das
mov
ds
xor
cmp
test
cmc
jbe
ror
clc
adc
js
imul
jmp
ficoml
sbb
xchg
adc
in
adc
push
jae
sub
movsl
addr16
or
cmp
pop
call
and
jb
xlat
push
lcall
mov
xor
dec
or
enter
mov
sub
or
shl
or
popa
dec
aad
push
incl
lea
dec
jns
mov
aas
outsb
cmp
mov
jecxz
xchg
xchg
mov
pop
cmp
mov
sub
add
xor
stos
sbb
ljmp
insl
sbb
or
adc
mov
sti
adc
dec
jmp
jmp
ljmp
sub
jle
mov
jns
mov
push
mov
into
test
imul
lret
shlb
mov
inc
mov
dec
sti
and
cmp
sbb
addb
fidivs
scas
rsqrtps
into
mov
sti
push
adc
je
or
insl
fildl
xor
decl
push
xor
xor
inc
rcrl
mov
iret
gs
cs
mov
jg
in
adc
push
inc
popf
ljmp
imul
popa
fs
mov
iret
adc
mov
cld
daa
shll
add
in
xchg
call
push
or
addr16
popf
test
mov
shl
add
fstps
mov
stos
mov
pushf
int
lretw
or
inc
and
sub
loope,pt
in
ror
lds
mov
mov
int
out
cwtl
lods
inc
sbb
fiaddl
incl
cwtl
ja
loopne
mov
add
aaa
add
sbb
pop
sbb
fs
or
jbe
addl
adc
xchg
or
ja
xchg
ds
push
jno
into
jmp
call
push
adc
lcall
cmpsb
cli
das
addb
decl
lret
in
push
loope,pn
cmp
xor
add
in
daa
pop
pushl
sahf
jne
push
mov
popa
pop
clc
out
xchg
bound
aas
jecxz
rcr
and
sarl
fld
notl
shll
pusha
add
mov
in
inc
roll
push
xchg
jmp
daa
fisttps
adc
in
lods
incl
hlt
mov
pushl
jge
fs
adc
jle
xlat
inc
mov
scas
mov
notb
mov
mov
dec
jg
inc
inc
push
js
adc
sbb
push
adc
dec
lret
jmp
ljmp
push
mov
pushl
cmp
sub
sub
mov
xchg
movsl
sub
sbb
pushl
xchg
sbb
pop
sbb
cmp
shlb
or
xchg
xchg
out
pusha
imul
push
out
iret
sbb
lcall
repz
mov
xchg
call
xlat
lret
pop
xchg
outsl
ret
or
lcall
into
out
notl
jne
test
pop
xor
cli
outsb
call
in
xchg
jge
or
push
inc
xchg
mov
adc
and
pop
cmpb
sar
cmp
cmp
lea
popf
pushf
cmpsl
lods
mov
cmpsb
inc
test
pop
xchg
ud0
pop
and
cmp
mov
sub
mov
in
movsb
cmpl
mov
mov
sub
jno
and
test
push
shrb
test
in
iret
mov
add
jmp
xorl
adc
jo
push
xor
push
xchg
sbb
cmc
loop
sbb
decl
scas
dec
incl
rclb
inc
jmp
hlt
sahf
dec
pop
test
mov
and
push
or
mov
and
mov
fbstp
pop
jnp
lods
stos
fs
ret
push
jg
push
push
mov
mov
mov
jecxz
mov
add
ret
push
ds
mov
jp
dec
push
sti
popf
repz
cltd
add
sub
cmp
adc
mov
xor
aam
mov
push
pusha
mov
ja
cld
push
push
or
cmp
lock
movsl
inc
ljmp
mov
loop
mov
lods
or
adc
dec
pop
fistpl
testl
pushf
sti
mov
pop
test
inc
jg
decl
ljmp
lods
adc
out
or
outsb
adc
sbb
sub
cmp
ljmp
popa
add
or
stos
sarb
or
insl
imulb
push
adc
outsb
push
push
cmp
sbb
call
or
fcoml
xchg
xchg
jg
insb
or
push
xor
jp
aam
push
adc
ljmp
push
xlat
mov
dec
lcall
shl
sarl
daa
dec
dec
jns
pop
shll
inc
ja
xor
rorb
fadds
xchg
icebp
scas
jecxz
push
arpl
ror
stos
push
and
je
pop
inc
in
out
push
push
inc
inc
jno
jnp
sub
push
mov
sub
ss
call
imul
inc
adc
cs
adc
inc
xchg
or
push
or
loopne
mov
mov
dec
push
mov
xchg
call
shrl
xchg
jae
shll
pop
xor
fcmovb
or
rclb
test
movsb
mov
or
dec
int
mov
js
lock
xchg
mov
movsb
and
in
jno
jb
dec
js
add
xchg
pop
pop
stc
das
jbe
mov
int
imull
mov
pop
jnp
push
sub
hlt
ficoml
xor
or
and
sbbb
sbb
mov
jle
fwait
jbe
pop
call
add
test
or
shl
push
sub
call
nop
mov
cmp
or
decl
cmpsl
cmp
pushl
fidivs
push
fmuls
jns
lock
loopne
dec
cmp
scas
jge
pop
sub
xor
add
loope
sahf
outsb
and
mov
inc
push
iret
mov
or
arpl
pop
rcr
add
cmp
dec
sbb
mov
repz
in
cmc
cmp
pop
loop
push
mov
out
jmp
lcall
xchg
sti
xchg
lods
es
daa
nop
mov
push
cmp
jle
pop
adc
add
push
fidivrl
pop
or
mov
mov
sahf
cli
or
jle
js
shlb
mov
decl
hlt
jmp
icebp
or
mov
lds
push
xchg
shll
das
icebp
and
jnp
pop
sbb
fmuls
jle
cld
push
lods
push
adc
out
mov
loope
mov
add
adc
jo
mov
jl
lock
or
jae
das
cmp
mov
stos
jmp
pop
sbb
mov
loop
lret
xor
inc
in
mull
fstps
mov
pop
push
fmull
test
ja
or
andl
repz
push
enter
xor
push
notl
mov
aaa
xor
aam
xchg
daa
divl
in
jl
or
pop
jp
int3
fisubs
cmp
cli
test
repz
mov
in
bound
mov
lock
aam
jns
pop
ljmp
test
cmp
sar
je
decb
fwait
or
arpl
lret
cltd
push
mov
inc
or
xchg
incl
add
jp
out
or
sbb
mov
jmp
jbe
test
mov
add
imul
hlt
push
test
enter
or
jg
fildl
and
addl
test
outsb
add
jnp
and
int3
addb
lahf
dec
jno
mov
pusha
mov
pop
and
or
decl
aam
cmpsl
int3
add
push
in
sahf
jl
adc
das
xchg
xor
mov
jb
rorb
lret
mov
sbb
push
dec
in
lock
ljmp
mov
mov
mov
add
push
sub
movsl
and
inc
jae
mov
pushl
int
sbb
xor
incl
sti
pushf
cmpsb
call
outsl
xor
enter
mov
cmpsb
push
and
js
ljmp
inc
call
inc
lret
xchg
ljmp
enter
add
cmp
mov
add
ljmp
icebp
mov
xorb
sbb
fwait
adc
rol
sub
inc
hlt
insb
call
mov
xor
mov
div
mov
fidivs
cmpsl
jle
add
ds
outsb
mov
call
dec
jl
mov
or
call
push
inc
aad
fwait
dec
out
movsl
test
or
mov
xor
cmp
pushf
ljmp
mov
or
inc
push
mov
out
push
or
lret
add
xlat
daa
ljmp
adc
jp
std
ljmp
jae
addl
scas
jmp
aam
dec
clc
mov
fs
mov
jne
ljmp
stc
cmc
mov
ja
xchg
adc
div
jbe
icebp
mov
xchg
sar
lahf
aam
push
and
lock
pop
jno
xchg
mov
dec
xchg
js
loop
xor
fmuls
ljmp
insl
call
lods
adc
xchg
and
inc
cmp
repz
mov
sar
test
stc
mov
mov
int
pop
dec
gs
inc
ljmp
fistpll
pop
xor
rorl
add
cltd
lock
rcrb
fs
divb
mov
ss
push
lret
gs
jb
decl
lcall
xor
ljmp
fdivl
inc
inc
fisubrs
shlb
pop
xchg
lret
mov
add
pop
add
mov
dec
js
in
ficoms
push
sar
push
inc
inc
incl
lahf
popa
adc
out
in
es
pop
aas
nop
out
push
fsub
mov
inc
call
dec
and
push
dec
incl
stos
jno
jle
rorb
fs
fiaddl
dec
fstpt
inc
inc
lahf
jge
repnz
adc
shll
outsl
inc
inc
or
fisubl
lds
dec
pushl
clc
inc
aas
mov
aaa
sbb
out
dec
push
pop
jmp
gs
mov
push
mov
lds
iret
add
jae
xor
test
or
fcomp
ljmp
cld
test
jae
inc
decl
scas
pop
fdivr
and
mov
dec
push
decl
test
ftst
decl
xor
repz
xchg
ss
add
and
add
cs
sbb
adc
dec
mov
lret
pop
jno
xor
cmp
jg
jnp
dec
cwtl
sub
test
cmpsb
pop
mov
in
and
loope
sahf
std
sarl
jno
test
mov
pop
cli
pop
xchg
sbb
dec
icebp
cmp
lock
aaa
dec
jae
out
aas
add
or
lods
ret
or
inc
adc
mov
jp
in
and
cmp
jbe
rorl
repz
imul
adc
rcll
mov
call
mov
rcrb
ljmp
dec
xchg
fcoml
fwait
out
pop
scas
dec
jns
jle
jnp
jp
jo
mov
adc
aad
loope
cltd
cmp
sub
xchg
mov
adc
addr16
push
mov
dec
sbb
or
add
test
rcl
and
or
test
pop
pusha
pop
push
popa
into
incl
inc
sar
incl
xchg
sbb
pop
daa
idiv
add
xorl
push
push
test
push
xchg
dec
mov
clc
pop
cmpsb
jns
stos
xchg
jl
icebp
pushl
iret
shlb
mov
mov
pop
fdivr
sub
push
inc
mov
in
insb
dec
cmc
cwtl
sbb
scas
mov
lods
jp
push
sti
jl
ja
xchg
aam
push
lret
ret
js
aas
mov
push
add
incl
std
pop
ss
push
cmpsb
loope
jb
js
arpl
out
adc
loopne
movsl
or
or
jmp
cwtl
add
outsl
ljmp
add
lea
xor
and
xchg
and
cli
ljmp
mov
incl
add
fwait
rclb
mov
in
jmp
xlat
or
repnz
pop
psubusw
xchg
xchg
stc
imull
adc
add
xor
mov
cmp
mov
out
or
xchg
xor
xchg
enter
insb
int
mov
aaa
and
sbb
cmp
int
xchg
add
div
stc
inc
cwtl
xchg
or
mov
imul
ret
add
and
sti
aad
xor
mov
test
arpl
scas
lods
call
cld
into
mov
mov
stos
daa
sub
mov
inc
push
cltd
fst
fisttps
rorb
push
loopne
cmpsb
add
shlw
sbb
filds
push
outsb
aaa
xlat
inc
popa
or
in
cmp
clc
sbb
cld
popf
inc
xchg
push
std
add
out
push
mov
jg
in
les
dec
push
scas
rcl
loopne
add
push
push
clc
xchg
mov
sub
mov
inc
jmp
stc
jne
sbb
outsb
inc
dec
add
and
psubq
cwtl
jl
lds
pop
mov
movl
xor
mov
insb
lret
in
enter
jmp
sub
inc
adc
ret
sub
sub
xor
xor
jg
adc
sarb
fs
push
loopne
adc
dec
fucomip
inc
mov
or
push
mov
pop
pusha
push
mov
push
inc
cltd
sbb
mov
inc
fiadds
lcall
add
out
into
mov
or
daa
mov
flds
fistpll
jns
adc
mov
int3
jmp
and
mov
add
js
xchg
daa
jl
idiv
mov
fadd
lret
jns
notl
push
xchg
mov
es
or
inc
inc
or
jno
mov
incl
sarl
mov
sub
mul
mov
pop
push
ja
jge
mov
adc
add
xchg
sbb
aad
sub
mov
call
call
stos
js
jge
sbb
shl
sti
push
rclb
lcall
jae
pop
ror
mov
jns
mov
enter
leave
sub
cld
aam
mov
mov
mov
jge
mov
incl
sub
arpl
dec
inc
test
out
and
rorl
xchg
insl
mov
lret
push
lcall
pop
in
inc
mov
jo
jg
jae
enter
popf
dec
repnz
lret
rcl
sub
push
mov
test
test
out
call
xchg
jns
xor
mov
add
xchg
push
add
and
dec
test
jg
das
ljmp
jmp
dec
aaa
xchg
push
adc
or
lahf
test
les
ljmp
jmp
lahf
test
cmp
daa
jge
xchg
movsb
and
insl
add
add
xchg
jb
pushl
or
lret
xlat
iret
xlat
cmp
add
int
cli
lcall
mov
lret
ds
push
push
xchg
clc
jo
jo
jge
mov
jmp
xor
or
mov
std
mov
push
inc
fildll
xor
pop
mov
rol
dec
inc
shl
int3
sti
icebp
test
mov
inc
out
dec
xchg
jmpw
push
clc
pop
inc
sarl
aaa
fisttps
mov
mov
ret
jne
push
imul
xor
sbb
dec
push
dec
gs
out
rclb
call
cmc
mov
idivb
mov
das
xor
lcall
ljmp
scas
jl
leave
or
cmp
idivl
push
cmpsb
jnp
jle
test
call
cmpsl
insl
loop
fisubl
pop
int
js
or
jl
mov
or
xor
inc
ja
fcmovnb
repnz
out
jnp
push
cld
fisttps
outsl
add
jo
incl
sub
push
jmp
shr
loopne
dec
idiv
add
xchg
incl
xor
ret
dec
outsb
mov
cmp
mov
adc
mov
loope
inc
mov
push
xchg
stos
mov
jne
insl
nop
ljmp
popa
adc
mov
stos
call
or
cmp
adc
mov
arpl
xchg
sbb
adc
mov
push
push
pop
pop
cwtl
test
clc
ret
in
int
jns
lods
adc
jmp
xchg
fists
incl
mov
lds
or
jp
or
dec
jb
insl
cld
daa
xor
inc
pop
rolb
sti
push
ret
jmp
sub
mov
sahf
popl
fsubrl
dec
adc
incl
xchg
test
xchg
pushf
sub
jnp
push
push
push
jno
in
jnp
call
pushf
call
int3
loop
call
mov
mov
jns
incl
addr16
and
xchg
mov
sbb
mov
repz
push
clc
loop
pushl
xrstor
movsl
stos
push
mov
pop
data16
xchg
adcb
mov
inc
sarl
lea
stc
inc
xchg
int
jno
gs
mov
notb
xor
test
push
inc
bound
rcr
dec
fs
jb
jbe
rclb
lods
daa
add
sub
mov
ljmp
push
cmc
xchg
ljmp
mov
adc
push
or
lods
adc
sub
sub
stos
jmp
lds
lcall
mov
cmp
add
mov
notl
or
daa
popa
rol
dec
xchg
repz
aas
pop
call
rcr
mov
dec
cmpsl
xchg
imul
inc
sub
add
or
sub
pop
mov
add
sti
mov
enter
aas
xor
pop
or
fnstcw
stos
das
call
aaa
outsl
inc
add
mov
fiaddl
add
mov
xor
ret
lcall
ljmp
inc
dec
xor
sbb
mov
lcall
les
lcall
je
jae
dec
pusha
jo
fs
adc
cltd
mov
dec
xchg
stc
xchg
sbb
decl
mov
mov
mov
inc
sbb
xor
sbb
or
or
lret
enter
push
mov
imul
xor
add
nop
out
adc
repnz
mov
and
pop
or
loopne
test
pop
out
pop
mov
inc
xor
adc
aaa
in
sub
std
sub
incl
rcrb
incl
jg
cmpsb
lock
nop
inc
xorl
xchg
pmaddwd
lods
jl
inc
les
inc
sbb
loope
das
jp
shlb
adc
idivl
stc
add
jecxz
mov
repz
jl
add
mov
fnstenv
call
xor
inc
lock
adc
jg
leave
fwait
cwtl
std
inc
dec
dec
lods
aas
push
dec
insl
xchg
adc
mov
adc
cmc
nop
call
push
mov
fiadds
cmpsl
xchg
push
cmp
mov
and
mov
mov
incl
stc
rclb
sbb
mov
iret
sbb
and
xor
and
dec
sub
or
jno
mov
jmp
xor
insl
addl
adc
fwait
loop
dec
out
or
jno
incl
ljmp
cmp
jl
loop
das
sub
call
sbb
movsb
jmp
imul
push
sbb
jmp
pop
push
xlat
inc
inc
ja
pop
xchg
mov
xorl
enter
movsb
xlat
add
cs
push
ljmp
loop
aad
or
jmp
popa
cltd
xor
cld
scas
mov
sub
cld
iret
popa
jne,pt
call
jl
shlb
and
pop
scas
mov
ljmp
stc
add
in
mov
push
insb
xchg
jmp
mov
testl
lret
xchg
add
aam
stos
mov
sub
cli
fsubr
insl
mov
cmp
lods
adc
lcall
call
or
push
pop
stos
jne
sbb
ljmp
jecxz
or
adc
aam
rcl
adc
es
jp
cwtl
push
or
push
dec
add
sahf
pop
mov
cmpsl
xchg
and
push
out
stos
push
add
test
outsb
scas
push
roll
into
push
push
push
push
push
inc
je
stc
adc
and
rcr
xchg
push
hlt
push
cs
push
mov
push
popf
mov
mov
mov
dec
in
mov
clc
fisubrl
popf
xchg
cli
xor
loope
dec
testl
and
movsb
push
rcrl
and
call
cwtl
decl
push
sbb
dec
push
dec
shl
shl
into
push
orb
std
xchg
stos
cli
arpl
mov
ljmp
iret
and
lds
nop
xor
mov
rcr
and
or
pushf
add
add
icebp
js
test
loopne
jnp
ret
call
sub
inc
mov
xlat
add
xchg
sub
rclb
cmp
fs
and
jbe
xchg
ljmp
ss
shlb
out
or
call
jmp
xchg
jno
repnz
jne
sbb
cmp
mov
aam
add
push
xor
or
jmp
mov
ret
lahf
pushl
arpl
loop
jb
or
sub
call
add
idivl
aas
ret
pop
int
push
xorb
xchg
inc
in
xor
ss
xor
adc
rolb
pop
inc
mov
incl
out
enter
inc
mov
loope
jmp
lock
sub
mov
cltd
mov
test
dec
pop
cmpsb
or
xchg
sbb
lods
or
add
mov
lds
or
jge
dec
jae
fcmovb
and
dec
lods
dec
jne
sbb
cld
xchg
jmp
lahf
stos
mov
sbb
mov
sub
rcrl
stc
imul
out
aaa
fisttps
adc
test
les
sbb
xchg
out
add
inc
ret
pushl
popa
icebp
xor
and
inc
aaa
or
fisttpll
lahf
call
lcall
jmp
pushf
test
arpl
xor
fs
in
jne
sar
ljmp
aaa
mov
es
cwtl
pushl
mov
lea
in
aam
sbb
or
or
pop
ljmp
les
mov
iret
in
sub
and
push
decl
jne
jg
test
in
mov
add
mov
das
inc
push
arpl
xchg
clc
jne
mov
sub
mov
repz
mov
iret
dec
sbb
fwait
jge
push
push
lret
inc
push
sub
xchg
jo
cli
loope
cmp
les
ja
adc
or
sti
cmp
lret
mov
add
sub
mov
mov
xor
inc
daa
cmp
rolb
mov
test
mov
ja
push
pop
adc
xchg
bound
shll
jne
fisttps
cld
pop
add
dec
sbb
lock
ret
ds
add
roll
push
je
dec
mov
adc
adc
lahf
push
mov
push
cmpsl
push
mov
les
call
lods
jnp
in
pop
mov
ret
xor
fldl
push
sub
leave
ret
mov
ja
dec
insb
push
pop
js
out
xchg
je
push
and
add
or
mov
cmp
out
jb
call
or
idivb
decl
jnp
pushf
sub
clc
iret
lds
push
xchg
outsl
int3
outsb
and
or
iret
jno
nop
sar
negb
enter
les
daa
outsb
jae
js
mov
add
sub
pop
in
cmp
shlb
push
add
push
mov
addr16
insl
decl
jge
mov
fists
call
or
cmp
jns
mov
push
cli
mov
add
fstpl
stos
dec
jmp
push
mov
lahf
jns
inc
or
mov
test
mov
add
adc
inc
ljmp
call
add
mov
aas
into
mov
mov
xor
jmp
inc
sbb
jae
fimuls
jns
incl
mov
push
int3
imul
outsl
iret
jo
lret
push
or
cmp
nop
jbe
scas
mov
je
lods
dec
jno
sub
fs
dec
or
popa
rorl
inc
pushl
xchg
push
test
into
loop
sbb
mov
adc
dec
adc
jecxz
xchg
jmp
or
mov
push
sub
popl
lods
inc
push
mov
mov
xor
add
push
repnz
lcall
pop
fistpll
jnp
mov
adc
xor
fneni(8087
imul
lcall
popf
push
adc
jbe
or
inc
add
fstp
push
out
ficomps
stos
cli
and
ja
shlb
arpl
jmp
sbb
or
pop
fisubrs
push
fwait
cmpsl
test
xchg
ret
inc
mov
or
std
pop
cli
jle
cmp
arpl
outsb
xor
leave
push
pusha
mov
decl
lock
lods
xchg
into
xor
mov
leave
sbb
aam
fdivrp
fsubl
jmp
call
cmpsb
pushf
sub
in
sbb
call
incl
or
jmp
clc
mov
cmp
or
mov
decl
adc
dec
out
mov
movsb
cmp
mov
mov
in
pop
xorb
js
addr16
dec
clc
jne
stos
dec
cmp
rol
mov
leave
lds
and
pop
pop
jno
jae
sub
cli
dec
jmp
loopne
fcomps
mov
add
ret
call
leave
pushf
mov
push
mov
lahf
mov
repnz
dec
lcall
scas
out
and
add
test
sub
jno
leave
push
pop
ja
stc
mov
sub
adc
scas
call
dec
repnz
or
mov
pop
mov
filds
cmp
xor
jb
outsb
push
imul
dec
test
test
mov
mov
ret
lcall
jl
dec
aaa
jge
call
push
mov
or
in
push
lods
ss
shlb
dec
sti
and
dec
push
cmpsb
jecxz
mov
repz
movsb
mov
repz
cmp
arpl
repnz
cmpsb
cmp
lcall
sub
bound
cmp
cli
adc
lcall
adc
push
jns
lods
push
cmp
aad
add
xchg
sar
xchg
and
or
fcoms
add
mov
jp
rcr
push
inc
jge
ficomps
push
xchg
or
cmpsl
push
add
fucom
std
push
call
mov
cltd
and
and
inc
repnz
cmp
call
mov
mov
xchg
jnp
push
cld
dec
adc
sub
stos
ljmp
out
js
xchg
or
cmpb
mov
std
outsl
push
aaa
popf
shlb
xchg
flds
dec
ja
sti
add
pop
imul
scas
add
leave
pop
test
xchg
movsb
pushl
sub
push
aaa
mov
pop
cwtl
in
xor
ljmp
jno
adc
push
cs
fbstp
test
out
movsl
daa
sub
aaa
push
pop
add
push
xchg
and
mov
mov
iret
sub
call
mov
stos
arpl
and
sub
add
js
fiadds
xchg
scas
dec
jecxz
lcall
xchg
pop
mov
pop
rclb
cmp
dec
sbb
adc
rolb
orb
stos
pop
cmp
lret
mov
pop
test
fwait
or
aam
scas
push
mov
pop
push
fsubrp
xor
or
mov
aam
mov
jae
jle
dec
push
sbb
mov
ds
mov
cmc
cwtl
sbb
scas
int
sti
imul
xchg
jns
mov
lds
out
adc
jp
aad
add
pop
out
and
xor
and
or
je
call
xor
mov
call
mov
outsl
arpl
push
in
icebp
cmp
roll
ljmp
outsb
in
push
insl
clc
ljmp
fnstenv
mov
in
sarb
cltd
cmpsl
pop
popf
mov
mov
pushf
push
push
xor
popa
sahf
push
dec
fcmovnbe
fwait
leave
shll
push
xor
sti
jle
adc
imul
sbb
adc
and
jle
xor
or
adc
xor
mov
data16
mov
loop
jae
jne
out
mov
js
stc
push
dec
or
jl
add
xchg
call
data16
fadds
mov
shr
pushf
add
push
mov
std
mull
leave
fistpll
notl
cmp
sub
mov
mov
push
add
sbb
sbb
in
xchg
aad
sub
jno
push
cmp
push
cmp
cmc
fiadds
cmpsl
pop
pushl
rol
sbb
bound
enter
or
cwtl
push
push
cmpb
ds
in
dec
sti
imul
pusha
outsl
lcall
insl
and
jp
jae
lret
jmp
movsb
or
aas
jo
loope
faddl
mov
call
negb
mov
sub
inc
mov
mov
sti
mov
addr16
pop
lods
aas
and
jge
inc
xchg
adc
adc
inc
cmp
adc
stos
bound
sub
dec
dec
pop
pop
xchg
js
mov
out
sbb
sti
dec
pop
in
stc
jmp
dec
lods
mov
lcall
test
cmp
les
jae
out
sub
add
inc
lock
fmuls
addr16
push
sbb
xchg
mov
leave
pop
aaa
pop
inc
ljmp
sub
push
addl
mov
repnz
and
fdivrp
test
movsb
lahf
lret
in
xor
pop
pop
rol
mov
adc
adc
orl
jbe
lock
les
lcall
and
call
das
aas
pusha
xor
pop
jmp
dec
stos
push
std
lcall
xor
lcall
nop
mov
sub
lcall
push
xchg
fdivl
cs
call
xor
mov
ljmp
pop
jo
lcall
shl
jp
fisubrl
add
sub
jecxz
ljmp
cmp
movsb
cmpsl
pushl
mov
adc
mov
jne
stos
jecxz
aaa
adc
rolb
js
jae
inc
sub
fs
fmull
ja
mov
add
adc
mov
inc
or
aam
loope
lret
lock
pop
rclb
add
push
mov
sbb
sarl
rolb
cld
pusha
hlt
dec
mov
fdivs
dec
pop
icebp
xchg
stos
jae
call
lods
add
mov
arpl
shlb
test
pop
jne
push
loop
dec
sbbl
orb
repz
push
adc
add
mov
ja
dec
push
and
cmp
adc
xchg
sub
fnstsw
jmp
shrb
scas
add
or
jnp
aaa
push
rolb
jle
adc
xor
in
adc
jnp
and
jne
pop
mov
add
adc
xor
fisubs
xor
mov
or
in
sti
pushf
jmp
mov
decl
fildl
movsl
and
and
xor
ljmp
dec
xchg
je
cmp
jne
pop
push
incl
fmull
mov
scas
dec
cmp
sbb
fnstenv
inc
stos
and
lods
mov
leave
ljmp
sbbl
incl
adc
test
lea
mov
mov
and
cmp
insb
call
je
jle
lds
ljmp
mov
rep
mov
mov
in
addr16
decl
pop
or
pushl
add
mov
push
inc
sub
mul
mov
inc
and
cmp
jmp
lea
mov
inc
daa
jp
cmp
loope
ds
add
push
push
xor
sub
imul
mov
mov
mov
in
and
lock
addl
notl
out
fildll
pop
rorl
inc
insl
orb
adc
mov
lea
xchg
sbb
clc
shl
mov
jbe
push
mov
cld
sbb
sub
repz
loop
and
test
lahf
cmpl
sbb
jecxz
xor
lock
rol
sbb
ljmp
mov
pop
inc
shl
gs
inc
idivl
neg
sub
and
push
xor
lea
movb
ds
out
pop
sub
cli
mov
je
adc
push
mov
ss
loopnew
cmpsb
inc
cmp
shll
dec
mov
std
add
jno
sub
or
scas
inc
ficomps
cli
sub
lcall
dec
fucomip
stos
daa
std
bound
gs
dec
mov
xor
dec
call
adc
lds
pop
mov
sbb
mov
add
dec
xchg
adc
aam
jg
fidivrl
rcl
leave
adc
lock
mov
fmulp
addr16
pusha
call
scas
pop
in
jecxz
mov
inc
rclb
daa
jmp
jmp
arpl
loopne
push
pop
orl
xchg
adc
pop
sub
sbb
push
pop
icebp
pushf
push
mov
mov
and
js
jg
enter
stc
dec
mov
bound
jmp
test
daa
lds
mov
push
jl
cmp
and
mov
dec
lcall
idiv
cld
adc
cmp
xchg
add
mov
shrb
and
mov
add
jmp
stc
in
out
cmp
incl
addr16
lret
push
cmp
orb
out
dec
or
imul
outsb
add
repnz
lds
mov
jae
shl
or
sti
decl
xor
and
pop
std
dec
repnz
pop
addr16
fdivrl
xor
lea
adc
xchg
je
add
adc
rorl
cwtl
fwait
test
pushl
into
pop
push
imul
and
scas
or
fnsave
repz
xor
movsb
mov
leave
mov
in
push
incl
fcompl
xchg
cmp
ljmp
enter
into
fwait
jae
jo
test
jmp
ret
jge
in
divl
loop
lods
scas
or
insb
outsb
jmp
xchg
push
lcall
push
lcall
fcompl
cmpsb
cltd
sub
inc
push
xor
adc
ja
shlb
add
or
popa
and
rcrl
xchg
add
jne
adc
les
cmpl
xchg
lcall
dec
iret
mov
in
mov
sbb
repnz
or
incl
adc
das
cmpsl
push
add
shll
ljmp
scas
fdivrs
leave
xlat
icebp
incl
outsl
in
ja
cmp
les
or
aad
fsubr
push
rclb
dec
dec
jmp
mov
shll
push
add
arpl
rorl
fistpl
sub
or
enter
int3
rorl
shr
call
lea
ljmp
out
out
xor
ljmp
xchg
mov
pop
or
in
fistpll
shlb
sub
mov
sbb
sub
out
cmp
pushf
cld
stc
add
call
ret
cmp
outsl
insl
push
jnp
xorl
adc
bound
jecxz
pop
call
or
pshufw
enter
insb
clc
std
pop
fisttps
fisubrl
ds
ss
mov
mov
push
mov
test
xchg
imul
decl
sbb
aam
das
inc
mov
out
add
movhps
pop
inc
into
aad
out
push
pop
mov
daa
push
sub
inc
shll
xchg
aad
and
push
cmpsb
adc
sar
cmp
or
and
xchg
cs
out
in
cmpsl
add
lcall
xlat
popf
mov
mov
push
ljmp
nop
repz
int3
lods
dec
sar
sub
roll
clc
stos
test
fcomip
jecxz
push
mov
mov
push
loop
dec
pop
sub
jae
dec
stos
jne
out
mov
testl
cmpb
and
cmp
rorl
bound
dec
mov
int
and
popa
jnp
sbb
sti
pushl
test
incl
sub
mov
stos
add
data16
decl
ss
shlb
jp
arpl
and
sub
xchg
in
mov
mov
sbb
and
mov
fidivs
jp
push
sbbl
push
jmp
out
mov
pop
jo
hlt
int
in
or
push
orb
push
hlt
jmp
test
roll
pop
xchg
aas
cmp
add
xor
xchg
mov
mov
fsubs
test
or
adc
inc
subb
sti
adcb
and
pop
pushl
jge
call
and
xchg
fidivrl
fmulp
pop
pop
dec
and
mov
arpl
fstpt
iret
test
movsb
dec
and
fucompp
jb
sar
icebp
add
sbb
adc
pushl
into
and
pavgw
cld
adc
jns,pn
pop
ljmp
pop
or
xor
sub
rep
out
movsl
decl
jmp
jbe
xor
scas
mov
sub
or
mov
rcll
sbb
repnz
sub
lahf
gs
mov
pop
outsb
sub
test
dec
lcall
lea
fdivr
std
push
adc
leave
pushl
mov
mov
lds
sub
call
or
inc
cltd
lods
in
ret
pop
xlat
call
pop
cmp
ljmp
mov
bound
fsub
jecxz
push
xchg
repz
mov
pop
mov
fists
xchg
jne
mov
ljmp
mov
cmp
shlb
iret
mov
inc
xor
fwait
lock
lret
lds
nop
dec
jp
dec
or
out
sbb
push
dec
loope
adc
or
xchg
mov
leave
add
mov
sub
pushl
mov
mov
add
or
or
lods
nop
test
add
lahf
dec
xchg
fsubs
outsl
inc
adc
pusha
incl
mov
andb
iret
and
push
push
adcl
add
dec
xor
and
push
or
scas
add
mov
loopne
rclb
pusha
or
pop
das
jle
lret
cmc
sbb
fisttpll
insb
dec
int
lahf
hlt
ljmp
xor
and
ja
jnp
push
out
push
and
out
sub
or
jmp
add
std
pop
jb
or
sbb
and
xchg
dec
sbb
xchg
cmp
aaa
mov
xorb
mov
mov
sub
ljmp
mov
inc
inc
mov
cli
scas
lcall
clc
stos
sub
push
push
flds
rolb
xchg
adc
imul
insl
sti
sub
pushl
and
cmp
ret
xor
mov
fiadds
std
cli
jae
insb
loop
fcomps
sbb
daa
or
ds
std
jne
pusha
imull
mov
fnstcw
sti
jg
ljmp
jae
sub
out
push
pushl
add
js
scas
mov
outsb
inc
push
or
push
daa
dec
test
inc
aaa
add
loopne
pop
and
sar
mov
lea
cs
xchg
inc
jns
ss
rcrl
clc
mov
cld
popf
imul
mov
and
sub
movsb
xchg
mov
dec
mov
adc
test
add
pop
in
call
inc
push
addr16
sbb
sbb
rorl
dec
test
push
jl
pminub
mov
stos
push
and
mov
lea
sbb
sub
and
pusha
aas
xor
mov
sarl
pop
stc
test
aaa
pop
mov
out
incl
jnp
lcall
and
fcmovnbe
inc
aad
call
ljmp
rclb
fs
mov
push
dec
adc
jno
nop
ss
and
push
sub
and
arpl
es
in
out
shr
movsb
cmp
push
cli
fmuls
inc
inc
pop
mov
bound
or
stc
xchg
nop
cmp
mov
imul
stc
push
or
dec
cmp
popa
and
jge
xchg
push
cwtl
es
mov
int
push
xchg
inc
mov
mov
sub
pusha
lods
xchg
add
cmpsl
pop
ljmp
popf
push
mov
jmp
or
sti
add
sbb
jns
mov
call
jge
push
cmp
pop
outsl
mov
fisubl
clc
pop
rorb
ja
xorb
imul
and
mov
adcb
add
lea
out
pop
clc
faddp
ud0
dec
pop
shlb
jae
incl
and
dec
gs
inc
fdiv
stos
in
adcb
xchg
jne
mov
pop
jmp
adc
repnz
sub
cmp
inc
out
push
leave
or
ljmp
add
xor
adc
dec
shll
fwait
lcall
addb
lcall
or
test
scas
adc
mov
aaa
xor
lret
scas
in
sbbl
push
xchg
incl
inc
pop
mov
incl
push
or
aaa
inc
lcall
mov
jo
leave
push
fadd
dec
lcall
test
lcall
dec
cmp
jmp
jecxz
gs
adc
adc
cmc
stc
adc
mov
push
jne
add
sbb
rorb
mov
pop
scas
hlt
push
fwait
aad
movsb
dec
jl
sub
cli
or
adc
incb
jmp
gs
mov
call
push
lret
push
ds
jns
mov
xlat
xchg
sbb
fldl
loopne
shl
movsb
aaa
hlt
pop
call
cmpsb
test
pop
call
push
push
and
xor
ds
loope
jl
pop
pop
fistps
incl
sbb
xor
sub
out
mov
ljmp
cmp
cltd
insb
shr
divl
repz
sbbl
nop
xor
sti
inc
lret
mov
inc
dec
push
jmp
mov
xchg
jle
ljmp
nop
js
ficoms
dec
fnstenv
div
push
ret
push
dec
sahf
pop
in
iret
or
inc
jo
or
push
outsb
rolb
xchg
jg
pushl
dec
adc
xor
mov
fcmovnu
mov
or
pushf
mov
ud0
fwait
adc
jmp
popa
lods
lcall
xor
negl
shl
test
call
sahf
jmp
push
mov
rcrb
sub
add
mov
mov
pop
add
rcrl
mov
sub
insl
fdivp
jo
aas
mov
adc
adc
cmp
mov
out
or
mov
rolb
mov
jle
pop
lcall
adc
or
testb
aam
imul
sub
and
push
jbe
inc
incl
adc
stc
xor
xchg
scas
xchg
rcrb
push
push
or
je
mov
jne
inc
clc
incl
push
push
dec
add
in
mov
mov
push
imul
ljmp
and
adc
in
dec
jmp
pop
and
popf
dec
out
mov
mov
loopne
push
jmp
aad
fcoml
xor
add
xchg
out
das
mov
mov
mov
nopl
popa
lea
mov
ljmp
inc
in
stos
cmp
dec
mov
lods
xchg
cmp
psubsw
pop
rorl
imul
stc
loopne
ja
cld
push
sbb
pushl
mov
jno
xor
pop
push
loopne
popf
fadds
in
adc
sarb
xor
lock
adc
outsl
xor
jmp
aaa
iret
nop
push
and
mov
lock
push
mov
push
mov
idiv
hlt
cmp
xchg
sub
add
mov
cli
xor
mov
mov
incl
bound
inc
ljmp
pop
ror
dec
cmp
sub
xchg
in
mov
sbb
or
push
ficoms
das
popa
ja
jne
xchg
cmp
adc
nop
in
aas
or
dec
add
bnd
jae
push
int3
js
stos
pusha
jle
jne
xor
jecxz
ljmp
jle
dec
xor
dec
mov
and
xlat
je
adc
sub
mov
pop
ljmp
stc
cld
mov
dec
xchg
xor
pop
loope
xor
sbb
into
xchg
dec
add
decl
icebp
mov
popa
decl
pop
mov
lcall
and
incl
dec
mov
lods
incl
out
das
icebp
xchg
adc
fistpll
int
pop
orl
cmp
out
mov
decl
test
pop
cmp
push
pop
push
pop
aam
sbb
adc
xor
push
enter
decl
mov
pop
and
sbb
stos
sub
mov
std
sub
lea
mov
popa
bound
fdivrp
sarl
lods
push
loop
lcall
aam
imul
inc
lods
cmpsb
jnp
cmc
les
sbb
ss
and
jle
lcall
mov
pusha
repz
pop
daa
movsb
jae
mov
std
push
cmpsb
sbb
aas
push
and
or
cmp
rolb
or
cmc
imul
out
adc
aam
pop
push
fs
stos
jo
sub
push
adc
push
inc
loope
incl
enter
jne
mov
xor
in
mov
sbb
cltd
test
insl
mov
rol
mov
hlt
decl
xorl
xchg
jmp
inc
out
mov
mov
jge
pop
mov
js
out
cs
pop
mov
adc
jmp
and
out
out
push
and
or
jmpw
out
pushl
test
sar
jl
and
dec
aam
int3
mov
mov
cmc
ljmp
scas
addl
ljmp
push
clc
mov
mov
push
popf
pop
xor
pop
in
jmp
push
add
decl
cmp
xchg
imul
add
xor
ret
adc
or
mov
mov
iret
add
dec
in
or
inc
and
and
ljmp
shlb
dec
fisubrl
hlt
daa
mov
jb
sub
push
decl
add
incl
mov
push
ljmp
insl
lahf
xchg
adcl
imul
push
mov
ud2
mov
mov
lea
jle
stos
loopne
sbb
fists
add
cmp
push
mov
cwtl
mov
insl
mov
imul
repz
xor
push
roll
mov
out
mov
mov
scas
or
rsm
mov
push
decl
je
fcoms
daa
mov
push
mov
imul
aad
mov
mov
mov
cmpsb
add
xchg
and
push
mov
clc
push
inc
mov
xchg
xchg
stc
add
add
mov
dec
add
inc
call
mov
push
lcall
mov
mov
dec
jmp
fwait
sbb
rorl
sbbl
lods
mov
dec
mov
or
ljmp
and
jmp
inc
fiadds
and
hlt
fdivl
mov
aaa
aam
stc
cmp
nop
jmp
test
loop
gs
mov
sub
rorb
outsl
call
pop
rcr
xchg
int3
add
pushf
or
cmp
call
movsb
mov
pop
mov
push
adc
and
mov
mov
in
arpl
mov
xchg
cmp
leave
inc
int
scas
push
mov
adc
sub
or
hlt
jg
movl
push
in
xchg
cmp
lcall
cmp
mov
ljmp
lods
xchg
call
into
aas
push
push
ds
lock
mov
xchg
push
ljmp
pusha
add
sbb
add
dec
inc
push
scas
pop
jmp
and
sti
pushf
test
stc
mov
inc
push
cmp
pop
cli
pusha
int3
jge
icebp
lret
mov
add
or
pop
push
shll
or
pop
add
sbb
xor
test
mov
rclb
add
sub
shl
pop
sub
lea
ss
lret
mov
xchg
jae
jecxz
and
xor
dec
adc
repz
jnp
xchg
add
mov
pop
scas
cs
mov
and
sub
dec
mov
pop
lods
xchg
or
rcrl
nop
lret
icebp
loope
pop
mov
shrl
pop
xchg
cltd
xor
call
sub
in
call
repz
xor
pop
or
add
test
rcll
xor
outsl
test
pop
adc
or
jae
dec
xchg
or
sahf
pushl
pop
lahf
mov
add
aaa
push
adc
addr16
push
sub
mov
or
lods
andl
les
ss
pop
sar
test
jp
push
andb
or
nop
xor
lcall
sbb
push
fldcw
jb
shrd
scas
cmp
jmp
pop
adc
fwait
lahf
ljmp
fmul
dec
push
push
decl
jo
xlat
dec
adc
adc
rcl
or
out
xchg
xchg
pop
jge
mov
push
adc
ja
sbb
insl
lds
xchg
inc
rorb
jno
mov
test
mov
xchg
add
fldl
sti
add
inc
int3
hlt
in
and
add
xchg
jns
rclb
push
jmp
inc
adc
movb
dec
push
xchg
inc
out
lahf
shl
or
pop
add
iret
cld
mov
popa
inc
out
jb
jmp
nop
xchg
das
and
add
frstor
mov
push
leave
imul
testl
add
cmpl
pop
add
cwtl
sti
enter
aam
adc
push
pop
adc
inc
test
int
nop
xor
cmpsl
pop
jo
ss
lcall
pop
lret
in
add
and
int
xor
ljmp
add
xchg
in
in
ret
cmp
mov
rclb
sahf
fsts
pop
add
add
add
std
roll
insl
jge
sbb
adc
add
pop
xchg
mov
xchg
or
push
lret
enter
insb
cmp
jle
icebp
negl
mov
add
ds
inc
xlat
adc
je
mov
lcall
cmc
ljmp
jns
mov
jmp
mov
push
inc
add
mov
out
arpl
ljmp
push
sahf
popa
shrl
lods
push
daa
in
jae
mov
aad
scas
femms
sub
sahf
cmpsb
pushl
jl
mov
dec
dec
xchg
je
cs
pop
push
inc
and
cmp
jae
xchg
popf
add
or
push
mov
adc
dec
sbb
pushf
in
pop
mov
push
testl
xor
movsl
decl
jo
loop
lahf
aam
ja
stos
add
and
sbb
fwait
orb
and
popf
and
mov
pop
stc
xchg
fnstcw
push
loop
ja
gs
jnp
pop
test
pushl
stc
daa
loopne
cli
cmpsb
adc
sahf
jo
adc
pushl
sbb
hlt
inc
jg
pop
nop
in
cmc
adc
add
xchg
xchg
mov
or
enter
push
nop
lods
shll
daa
push
and
jl
dec
std
call
sbb
sub
mov
sbb
jnp
xchg
notb
jne
jmp
bound
mov
pop
push
icebp
add
mov
shr
jno
push
push
clc
psubusb
mov
int
aaa
incl
in
out
aas
mov
cld
fdivrl
out
lock
insb
xchg
dec
into
fcmovu
int3
pushl
dec
pusha
inc
dec
in
lea
out
sub
int3
sub
jmp
bound
lods
nop
dec
mov
xchg
pop
shlb
add
adc
and
stos
fidivrl
jnp
aas
fmuls
lcall
inc
int
inc
push
sbb
add
shr
add
fcomi
xchg
pop
negl
adc
data16
cmpsl
pushl
and
pop
je
mov
mov
scas
cmp
in
std
dec
mov
pop
jno
inc
mov
lcall
dec
or
or
mov
push
inc
adc
test
xor
mov
xor
aad
add
stos
push
add
jl
mov
push
popf
push
aad
add
ja
mov
mov
pop
divb
or
je
not
fiadds
and
lret
and
fdivs
push
cwtl
ljmp
aaa
push
ret
aad
jae
cmp
lods
pusha
inc
incl
pop
ret
sarl
lds
cmp
scas
jecxz
pop
ljmp
movsb
in
jl
ja
mov
inc
push
push
inc
jne
inc
repnz
xor
xor
mov
or
les
mov
lret
xor
idiv
push
rcll
xor
in
inc
ds
loope
iret
xor
xchg
divl
mov
sub
sbb
test
shlb
push
incl
imul
push
cmc
xor
popl
mov
repnz
in
jno
fcomip
mov
frstor
inc
pushl
push
or
iret
sub
dec
mov
into
cmp
lahf
in
pop
or
and
add
pop
jl
std
lods
das
stc
adc
dec
jg
out
aaa
jmp
mov
in
fsubrl
out
push
adc
fmuls
push
pusha
incl
dec
fsts
mov
clc
movsl
fwait
ja
mov
push
dec
mov
jb
cmp
sbb
or
incl
mov
mov
pushf
adc
inc
iret
enter
mov
or
and
xor
ss
xor
xchg
mov
sbb
or
outsb
incl
subl
popf
cmp
xchg
cmpsl
fincstp
int
adc
stos
pop
sub
cli
push
insl
pop
repnz
adc
lahf
jl
pusha
push
js
inc
lods
push
inc
mov
push
cli
insb
mov
pop
lea
mov
xor
xlat
add
mov
xchg
mov
imul
rolb
cmpsb
mov
pusha
hlt
out
sub
test
jo
xor
je
mov
lret
repz
les
push
aad
push
xor
push
pushl
cmpsb
insb
push
inc
call
ret
cli
inc
or
inc
xchg
in
jmp
clc
xor
fidivrs
mov
call
fwait
in
mov
add
dec
je
test
roll
dec
or
decl
addr16
imul
mov
rcrl
sti
and
pop
lret
sti
ljmp
rcrl
data16
push
add
mov
jg
jbe
cmovle
xlat
mov
int
xor
out
push
loope
jnp
or
mov
cltd
imul
cs
mov
shlb
push
cmp
or
jae
divl
rorb
out
add
cmc
inc
ret
nop
jle
adc
mov
jbe
arpl
lahf
pop
xchg
jno
mul
pop
xchg
decl
and
ljmp
push
out
cmpsl
mov
shll
inc
jecxz
ss
pop
call
cmp
sar
mov
push
pop
sub
sahf
mov
les
lcall
es
pop
cmp
sbb
pop
mov
lock
je
sub
stc
int3
test
jnp
or
or
out
jmp
les
pop
and
sti
jmp
inc
lods
jno
mov
decl
sbb
dec
fstpt
add
inc
mov
rcr
mov
std
rorb
incl
nop
js
pop
xlat
sbb
orb
adc
div
or
frstor
jmp
pop
push
cltd
jae
lret
inc
and
xchg
fmuls
or
aad
cld
std
stos
mov
push
mov
aaa
push
decl
or
js
out
lret
or
std
push
jmp
call
pop
xchg
mov
scas
jge
adc
mov
clc
lahf
daa
shrl
jle
int
in
incl
mov
test
dec
sbb
dec
mov
xor
or
cmp
std
psubw
sti
ret
repz
pop
iret
pop
lcall
lret
int
insb
push
pushl
push
aaa
mov
push
mov
or
pop
lods
cmp
leave
lcall
jp
dec
clc
adc
rol
cmp
jecxz
push
div
cmp
call
movsb
int
pop
mov
or
cmc
push
dec
stos
fidivs
push
shlb
sub
jo
cmp
cltd
or
add
pop
std
fiaddl
push
icebp
addl
adc
cmp
mov
aam
aas
or
sub
inc
mov
in
fstps
sbb
out
iret
inc
jo
inc
sar
push
pusha
xchg
hlt
aad
adc
test
xlat
xchg
xor
and
xor
jns
add
cmpsl
xchg
mov
ret
push
xchg
and
push
or
or
sub
sbb
fucomp
ja
mov
icebp
cmp
mov
aaa
adc
adc
repz
out
add
mov
lods
dec
shll
cmp
and
jp
leave
and
push
mov
adc
inc
dec
pop
and
jns
or
add
cmpsb
lea
mov
sbb
xchg
dec
or
pushf
adc
rcr
outsl
or
or
xlat
arpl
iret
sub
lcall
das
and
pushl
mov
or
test
mov
xchg
xchg
jl
inc
and
pop
outsb
pop
mov
decl
mov
cmp
lds
add
jb
inc
inc
notb
insl
cmp
cmp
adc
add
call
xchg
aaa
test
daa
enter
insb
inc
decl
jb
jno
jge
ds
dec
adc
jmp
idivl
cwtl
pop
decl
or
adc
adc
pop
inc
and
rcr
out
xchg
aam
fistl
sbb
or
stc
ljmp
xor
je
jp
mov
lcall
aad
pushl
and
fildll
push
inc
cmp
cmp
out
std
stos
xchg
inc
in
ljmp
in
rcll
popf
mov
mov
lock
in
or
lcall
shlb
add
outsl
push
xchg
and
andb
adc
mov
or
aas
loop
iret
stos
movswl
cld
ljmp
dec
add
jmp
push
pop
add
xlat
jmp
mov
movsb
xor
arpl
rcr
jmp
stc
outsb
or
cli
mov
ljmp
insb
gs
lea
jnp
ljmp
mov
xor
ljmp
adc
jge
mov
cltd
pop
push
rolb
imulb
mov
call
cmp
jo
mov
nop
add
mov
rcll
mov
xor
and
jno
pop
pop
sbb
pop
call
insl
cli
int
adc
jmp
sub
inc
data16
pop
bound
dec
decl
or
adc
fisttps
push
ds
je
push
sub
dec
xchg
mov
in
adc
fdivr
ret
jo
mov
push
int3
stc
ljmp
push
addb
bound
adcl
aaa
or
push
mov
mov
pushf
adc
aaa
jge
test
cltd
incl
int
fimull
movsl
add
mov
decl
mov
and
sub
xor
inc
push
outsb
aam
jmp
dec
mov
lcall
in
jbe
pop
dec
nop
shll
push
jmp
sti
mov
cmp
fmuls
paddb
pop
rcll
sub
xchg
pop
mov
testl
test
ud0
push
stc
fldt
lret
call
icebp
insl
decl
repnz
xor
into
cs
jne
imul
lahf
mov
jg
pop
jmp
test
xor
add
mov
xchg
orb
outsl
iret
add
mov
pop
or
xchg
jg
pop
insl
dec
outsb
mov
je
and
call
xor
loop
xor
icebp
std
lods
sbb
or
or
test
pop
xchg
jp
cltd
jne
and
sbb
sub
jecxz
xor
scas
movsb
pushl
mov
xor
push
push
decl
in
sub
adc
mov
jae
jp
dec
inc
icebp
push
scas
pop
call
push
jo
sbb
or
idiv
loope
and
or
mov
leave
call
dec
dec
mov
mov
js
out
and
rolb
movsl
hlt
inc
cmp
test
std
xor
call
fiaddl
and
or
lock
mov
ret
or
enter
cmp
andl
std
decl
cmp
or
or
push
xchg
jmp
fdivrp
mov
mov
imul
jl
sahf
lret
das
aas
adc
pop
fnsave
mov
repnz
scas
jmp
je
jo
pushl
aaa
cwtl
push
sub
pop
lcall
and
movsl
push
jno
mov
mov
pushl
pop
scas
sbb
xor
dec
cmpsl
decl
jo
pushf
shlb
dec
jno
outsl
xchg
andb
lods
xor
ljmp
push
call
js
mov
mov
sub
lahf
cmp
ds
add
or
stos
sub
loope
mov
sub
js
or
adc
cmp
push
fnstenv
or
std
or
shrb
jle
fbld
sbb
or
pop
pushf
movsb
rcl
int3
in
neg
hlt
xchg
cwtl
or
cltd
mov
aas
and
jns
sti
mov
insb
imul
pop
add
jmp
scas
cld
iret
push
into
jo
or
icebp
je
lcall
inc
aam
rcl
dec
fiaddl
cmpsb
inc
lcall
mov
call
pop
mov
pop
add
dec
adc
in
repz
xchg
popf
cwtl
mov
mov
pushl
pop
mov
mov
in
sub
dec
dec
jmp
add
mov
mov
addr16
ljmp
xlat
sbb
lcall
push
dec
fisttps
push
xchg
jl
stos
nop
std
test
mov
enter
andb
fisubl
push
cs
pushl
inc
add
stc
leave
rolb
imul
mov
or
ljmp
push
xor
cmp
loopne
ret
in
jne
push
cltd
inc
xchg
shlb
adc
or
out
adc
movsl
mov
out
pop
rolb
add
mov
nop
mov
sbb
dec
sbb
mov
push
dec
cli
psllq
cmpsl
add
scas
imul
outsb
xchg
shl
mov
fidivrl
mov
sti
sub
out
sbb
jnp
js
jle
mov
dec
jns
cmpsl
cmp
das
or
lds
rcll
or
push
sti
enter
ficoml
sub
outsb
loope
loopne
movsl
cmc
cwtl
loopne
testb
out
mov
jmp
addb
push
je
push
icebp
loopne
cmp
pop
dec
add
mov
jo
sahf
mov
xchg
out
lods
popf
sarb
and
popa
out
test
mov
sub
aam
pop
mov
lock
jo
add
addl
or
ds
mov
sub
jb
loope
dec
push
xor
mov
push
jp
pusha
fs
jno
add
fidivrl
dec
jl
jp
dec
fisttpl
inc
inc
inc
sti
adcl
mov
add
test
call
jbe
xor
mov
add
or
into
or
repnz
loop
push
cmp
jae
inc
jecxz
jp
sub
sbb
outsl
imul
sub
ljmp
les
add
loopne
and
popa
arpl
pop
mov
sub
mov
int
roll
sbbb
cmc
pushl
test
cmp
cmp
jns
in
out
cmp
mov
or
clc
pop
sti
nop
lds
jmp
jo
add
inc
daa
jns
lcall
ja
dec
js
sbb
lock
sti
fcmove
dec
stc
jbe
out
nop
lret
aas
pop
mov
sbb
sar
jb
push
mov
int
ljmp
dec
mov
sti
xor
xor
add
mov
cmc
insb
into
ljmp
sar
popa
addb
add
icebp
sub
xchg
movsb
xor
dec
inc
pop
mov
xchg
sub
inc
jg
fmuls
jns
inc
xor
adc
out
add
and
out
ret
or
sbb
inc
jbe
or
add
mov
mov
shrl
inc
imul
inc
das
add
sbb
out
and
cmc
push
fistl
test
sub
popa
and
out
push
cmp
clc
jae
xlat
or
push
xor
loop
add
in
je
lock
out
mov
loope
pop
sub
jno
jmp
lea
push
cmp
addl
push
aas
xchg
and
add
inc
adc
jmp
add
insl
andl
or
and
and
shl
dec
adc
cmc
or
cld
in
push
shrl
stc
into
stos
push
push
cmp
ljmp
orl
jbe
mov
mov
or
xor
add
daa
adcb
dec
dec
cmp
lock
icebp
and
pop
jmp
enter
dec
jp
popa
inc
inc
sbb
and
xor
inc
insb
hlt
mov
jp
cld
shl
inc
cwtl
leave
jp
into
dec
sub
in
rcrb
add
das
mov
sub
stos
or
push
fdivrl
fwait
or
jo
jmp
out
nop
jmp
xchg
dec
cmp
pop
jne
fmul
mov
or
xor
inc
inc
into
jno
mov
cmc
cwtl
jne
icebp
xor
jmp
sub
mov
cli
jno
clc
xor
lods
mov
nop
in
arpl
imul
lods
push
inc
jp
addb
cmp
push
lock
push
sahf
or
aam
and
or
add
or
pushf
cmpsb
mov
pop
pop
or
fidivrl
sub
push
xor
xchg
cmp
ret
and
sbb
mov
add
pop
dec
xchg
adc
cmpsl
mov
inc
jo
lods
dec
or
add
sar
push
mov
push
sub
push
sub
cli
sbb
nop
popa
add
cld
int
jge
jne
push
mov
outsl
jl
xchg
cmc
subb
push
daa
mov
sub
shl
lods
idivl
stc
xchg
fisubl
bound
addr16
cmpl
in
xchg
sub
mov
mov
fiadds
dec
inc
mov
cmpsl
mov
or
jle
sti
inc
and
inc
and
in
sub
inc
mov
dec
fnsave
fstps
out
xor
add
xor
clc
dec
jnp
inc
mov
mov
repz
cmp
lret
xchg
arpl
jnp
hlt
mov
in
jo
arpl
xor
push
pop
push
leave
push
add
sub
cli
xchg
or
cmc
dec
divb
dec
and
mov
mov
gs
jns
repz
mov
sahf
ljmp
subl
test
shl
arpl
sti
cld
jno
push
or
dec
sub
or
xchg
sbb
cld
pushf
negl
sbb
jl
fsts
pop
xor
popa
cs
sbb
icebp
pusha
mov
je
add
cmp
dec
jmp
push
jb
jno
xor
mov
lret
hlt
shll
dec
xor
fidivrl
jns
and
pop
testl
daa
jae
testb
xor
add
cmpps
daa
stos
adc
shrl
lret
jnp
add
push
push
cmp
add
sbb
sbb
xor
dec
mov
fiadds
sbb
jp
ds
popf
inc
aaa
cmp
iret
sbb
icebp
inc
xor
lret
nop
sub
cli
mov
hlt
adc
sbb
pop
jno
rolb
cs
mov
movb
xor
pop
sti
sbb
mov
adc
dec
or
xchg
shrl
aam
sbb
icebp
je
nop
cmp
jo
dec
andb
arpl
mov
jl
add
mov
lahf
jne
mov
mov
es
pop
out
pop
add
push
loope
jb
xor
sub
jp
out
cli
imul
dec
sbbb
sbb
jle
xor
adc
sub
adc
icebp
in
xchg
jns
sub
idiv
adc
adc
clc
dec
stc
jo
cwtl
bound
push
movsl
int3
mov
push
cmpb
mov
xor
sbb
sub
sub
sahf
popa
js
add
sub
or
lea
arpl
sub
sub
cld
inc
jno
add
jo
cmp
sbb
adc
xchg
jae
push
or
call
sbb
jecxz
imul
pushf
inc
dec
insl
pop
xor
inc
inc
cli
sbb
adcb
dec
clc
inc
mov
push
and
jecxz
scas
push
mov
sbb
outsl
sub
int
mov
dec
add
sbb
inc
add
lret
inc
jle
push
xlat
mov
dec
mov
sub
and
js
insl
add
rcll
or
jno
xor
repnz
fs
or
fwait
ret
and
leave
je
xor
stos
cmpsb
pop
stc
repz
jle
cwtl
movsl
xor
test
mov
inc
fs
or
mov
sbb
push
lahf
lods
insb
adc
lret
outsl
mov
div
js
cld
pop
and
lret
jnp
std
sbb
adc
repz
adc
or
add
sub
and
or
add
sti
or
fnstenv
adcb
enter
pop
data16
out
jecxz
cld
push
rorl
scas
sbbl
sbb
sub
inc
hlt
hlt
lock
add
push
pop
cmp
and
es
jecxz
xor
daa
or
cli
xchg
mov
xchg
clc
dec
pop
popa
ss
outsl
pop
mov
inc
movl
dec
cld
mov
push
int
push
popa
adc
jmp
sbb
out
testl
cmp
es
cmp
push
fcomps
ret
inc
and
or
jo
gs
stc
xchg
xchg
jg
in
and
and
mov
addr16
inc
call
je
xor
mov
push
aas
xor
sbbl
decl
push
mov
add
ds
mov
out
mov
push
jnp
pusha
divl
add
sub
add
js
sub
lods
mov
cmp
inc
xor
int
jb
xchg
test
jl
or
fcmovnbe
xor
repz
add
xchg
sbb
icebp
jnp
xlat
xchg
jo
add
adcl
orl
sti
sub
inc
pop
sub
add
out
fsubp
xlat
jns
xchg
aam
pusha
dec
jge
sarl
xchg
xchg
or
jns
cld
jns
imul
cs
cmp
adc
adc
cmp
push
clc
add
int3
repnz
aas
xchg
lock
std
and
pminub
stos
clc
sbb
push
mov
or
movb
sub
pop
stos
js
add
jo
cmp
or
mov
movsb
xor
sbb
rcr
pushf
aaa
xor
scas
adc
mov
fidivrs
dec
jae
pop
rcll
pop
push
clc
jp
ret
pop
adc
cld
mov
test
hlt
or
mov
xchg
sbb
aam
data16
xchg
sub
scas
mov
inc
push
add
add
js
push
jno
insl
icebp
cld
jae
xchg
pop
cld
push
push
push
lcall
dec
xor
ret
push
das
add
cld
shr
outsb
aas
in
push
and
jbe
cmp
adc
and
sbb
mov
dec
cmpsl
loop
stos
jp
xor
and
mov
loop
push
jp
jecxz
jmp
jne
repz
and
sub
into
push
jae
imul
les
push
and
fs
mov
push
in
mov
sar
push
shrl
jge
pop
xchg
iret
incl
mov
mov
loope
jne
cs
jmp
xor
shrb
xchg
dec
fiadds
or
ja
lahf
jle
ljmp
je
decl
daa
in
sub
hlt
xchg
cld
mov
push
push
movsl
inc
sbb
int
push
test
mov
lea
jp
push
adc
loopne
incl
ds
xchg
jb
cwtl
mov
pop
lea
repz
mov
test
cld
adc
cmp
rcr
sti
jnp
repz
lods
and
mov
lock
fisttpl
decl
xchg
pop
and
mov
cmpsl
arpl
lcall
mov
xchg
pushl
pop
inc
mov
lods
dec
ja
pusha
or
sub
shlb
mov
aas
fs
pusha
sub
fistps
mov
adc
rolb
fcoml
jmpw
lahf
add
lods
sbb
idivb
mov
xor
test
add
fstpt
jecxz
adc
and
push
add
lock
add
sti
aas
and
dec
add
flds
loope
inc
cmp
xchg
into
dec
lahf
or
pop
jl
adc
mov
aam
jo
out
notl
jns
lahf
call
add
cmp
pop
lcall
xchg
add
ud0
mov
push
rorl
jbe
mov
jb
nop
bound
or
adc
add
mov
call
and
shl
jg
lock
or
pop
sbb
ror
lock
add
lods
decl
mov
decl
push
xchg
bt
cmp
popa
xchg
inc
and
mov
push
mov
les
pop
sbb
push
scas
mov
add
sub
adc
inc
cmp
or
jle
jmp
or
fildll
mov
mov
add
inc
mov
pop
push
je
mov
cmp
lret
jne
hlt
jmp
mov
xchg
jecxz
adc
orb
lds
rclb
and
ss
repz
or
or
cwtl
scas
movsl
enter
adc
and
dec
lock
sti
pop
xlat
mov
out
pop
lods
push
add
mov
jmp
adc
adc
xchg
add
pop
mov
jno
add
push
rcr
inc
in
mov
int3
out
shll
imul
dec
shl
jg
or
sar
rolb
xor
and
mov
sub
lods
aam
es
sar
mov
jecxz
notl
mov
lock
fisttpl
ljmp
xchg
or
mov
xchg
and
shlb
mov
push
or
jp
rorb
rcrl
loope
hlt
repz
add
decl
testl
lea
jmp
inc
or
cld
xchg
leave
insb
std
call
rol
adc
in
call
ds
xor
test
stos
decl
and
mov
adc
jle
xlat
jge
pop
ja
mov
insb
ret
push
jb
adc
ficoml
pop
jge
incl
mov
stc
ljmp
mov
out
imul
or
flds
or
shlb
cmp
push
cltd
imul
js
cli
sbb
daa
int3
add
loopne
dec
lret
popa
icebp
sub
lods
mov
push
xor
jmp
pop
mulb
jmp
test
push
ss
xchg
xchg
out
mull
xlat
jmp
add
cmp
push
mov
decl
arpl
cmp
fwait
jbe
add
test
pop
inc
notl
or
jmp
ljmp
xchg
aaa
fld
ret
fs
std
insb
jmp
int
sarb
add
push
leave
mov
imul
or
ss
mov
push
das
cmp
std
out
push
sub
jo
fidivrl
or
xchg
adc
jmp
pop
cmp
mov
jne
pusha
ljmp
mov
popa
ret
call
ds
lock
in
lods
push
or
ljmp
fnsave
bound
jge
imul
inc
jecxz
js
sub
and
dec
pushl
xchg
movsb
mov
imul
jae
out
mov
push
xchg
loop
scas
cmp
cmp
mov
subb
sbb
sbb
nop
roll
lret
mov
das
aaa
dec
ltr
test
notb
mov
sub
xor
div
lcall
inc
in
cmp
decl
outsb
sub
and
sti
jns
jbe
push
and
jmp
scas
test
xchg
xor
in
clc
hlt
add
outsl
sti
pusha
xchg
ret
data16
jp
xor
xlat
adc
adc
insb
fisubrl
sti
dec
and
lea
push
rclb
xchg
loopne
mov
xor
bound
mov
repz
imulb
call
andb
mov
xor
mov
push
call
rol
adc
add
mov
leave
in
adc
dec
fsubl
fiadds
mov
into
aas
outsb
add
arpl
pop
icebp
andb
xor
add
jecxz
xor
or
lods
ja
outsb
testl
cld
fldcw
ljmp
ss
daa
lock
shlb
icebp
xor
js
aam
lea
xchg
cld
adc
cwtl
jns
je
xchg
jge
xor
and
lcall
out
pop
inc
imul
add
xor
fisttps
add
je
push
in
cltd
mov
mov
call
push
stc
mov
add
movsl
pop
inc
mov
mov
dec
or
cwtl
and
je
fxam
jmp
cmp
xor
xor
adc
pop
mov
dec
xchg
mov
lcall
movsl
fcoms
sub
jo
or
cwtl
lahf
xlat
adc
ss
cmp
adc
xor
int3
cld
or
sub
add
mov
daa
ds
leave
and
xchg
mov
sub
adc
pop
mov
pop
imul
lds
lock
pop
rcrl
vmread
or
push
push
ljmp
lds
push
dec
jg
xchg
enter
push
aam
repz
out
jo
outsb
fldenv
je
push
popf
leave
mov
insb
lcall
dec
lret
inc
and
xor
xchg
into
cmp
add
cmpsb
test
call
out
loop
je
push
in
mov
outsb
lret
add
jmp
pop
cmp
jge
lods
pushl
push
inc
push
sbb
iret
test
js
in
hlt
inc
repz
xchg
cmp
loopne
call
in
and
xchg
nop
pop
sub
lcall
pop
mov
mov
stc
jb
push
decl
cmp
adc
repz
adc
bnd
lcall
adc
std
rclb
xor
xchg
int
outsb
into
leave
daa
aaa
cmpsb
loopne
nop
das
shll
or
and
insb
sub
out
or
clc
push
xor
movsb
jle
sbb
sub
or
mulb
xor
mov
pop
out
pushl
mov
inc
mov
sti
cmp
in
lock
xchg
out
rcrb
pop
push
lret
int
adc
enter
inc
nop
sbb
loop
movsl
lret
shlb
jmp
scas
mov
sbb
outsb
lea
ficoml
sarl
lock
jno
jns
repnz
add
pop
lcall
lods
sarb
adc
dec
sbb
xor
adc
mov
jmp
jecxz
je
pop
out
push
xchg
mov
xor
imul
jl
repz
call
out
cmp
scas
aad
xor
pop
movaps
jle
mov
jp
cwtl
inc
sbb
ja
adc
xor
cld
xchg
mov
pop
clc
mov
jns
je
jmp
ds
xor
shr
sub
sbb
mov
jmp
mov
xor
push
repz
xor
cmpsb
jb
xor
shrb
pop
pushl
push
imul
xchg
or
adc
cmp
add
xor
cmp
sbb
aas
es
je
popa
push
jg
das
lods
daa
add
and
cmpsl
stc
add
xor
jmp
mov
sub
adc
in
pop
add
cmp
or
xor
jnp
andb
jmp
cltd
pop
call
popa
cmp
xchg
add
clc
jmp
pop
xor
clc
int
shll
sub
push
cld
inc
adc
adcl
jg
cmp
xor
repz
bound
pop
cld
int
lods
cwtl
mov
sub
das
jge
dec
divl
mov
cld
mov
bound
or
ret
std
sub
lret
jo
inc
adc
lods
in
outsb
pop
cli
lahf
mov
ficomps
shrl
mov
insl
test
xor
add
xor
ret
xlat
out
ja
pop
or
jle
mov
add
popa
ljmp
push
sbb
lock
inc
jecxz
loop
arpl
cld
je
notl
fs
lds
and
stos
lcall
or
lret
ds
jo
pusha
adc
add
push
outsl
sbb
add
in
sahf
jo
inc
xor
adc
mov
hlt
pop
mov
xor
fnstenv
add
jmp
sbb
popf
xorl
cmp
outsl
hlt
mov
rolb
or
xor
sbb
push
pop
inc
je
test
hlt
adc
xor
push
pop
rorl
or
ret
cmp
shll
mov
cwtl
loope
jnp
jnp
clc
adc
xchg
jbe
mov
clc
mov
inc
cwtl
cmp
sbbb
xchg
out
and
and
je
adc
lds
test
lahf
mov
mov
push
pushl
je
jle
lock
jmp
add
loope
clc
aad
jecxz
ror
lods
sbbl
sbb
and
xor
dec
or
je
mov
iret
clc
add
rorl
dec
sbb
cmp
popf
adc
mov
addl
scas
mov
and
mov
shlb
xor
push
scas
add
cli
jmp
rcrb
sbb
ljmp
cmp
xlat
fwait
addl
call
fadds
clc
jle
pushl
xchg
inc
ret
jmp
insb
push
mov
cmp
mov
and
je
test
mov
add
fistpl
imul
gs
mov
pusha
lock
mov
hlt
fs
jp
jge
add
test
outsb
push
mov
out
push
push
icebp
jns
stc
push
insb
cli
outsb
jnp
sti
outsb
jl
cld
dec
jle
xor
outsb
push
xchg
adc
push
jge
std
outsb
jle
outsb
jg
add
outsb
add
jle
mov
push
or
das
adc
mov
jns
pop
ja
xchg
shlb
xlat
dec
xlat
stos
xlat
lea
cmp
sti
jmp
aas
aaa
and
js
jp
mov
hlt
mov
inc
xlat
call
ja
mov
mov
loope
jmp
sarl
fcom
mov
jmp
arpl
sub
outsl
push
cmpsb
fs
lret
xlat
mov
xchg
pop
push
repz
mov
shrl
mov
mov
imul
mov
pop
push
push
push
lahf
ja
mov
mov
mov
std
shll
and
and
jmp
dec
push
mov
sbb
pop
popf
aaa
test
mov
aaa
cli
mov
dec
push
inc
push
outsl
add
ja
mov
cwtl
push
stc
mov
mov
mov
not
pop
loope
jmp
mov
jmp
push
xlat
adc
fs
push
push
inc
dec
movsb
inc
stos
xor
cmc
jo
fnstcw
rcr
fnstcw
subl
add
inc
add
add
call
add
sub
sub
ds
jae
xchg
or
les
imul
mov
push
testb
ja
mov
loopne
jecxz
push
or
scas
mov
and
divl
test
push
and
in
test
repz
sbb
mov
add
xor
mov
and
and
je
mov
sbb
mov
cmp
jns
fldt
test
out
outsl
and
xchg
sub
mov
aaa
ds
jle
mov
cmpsl
jg
mov
cmp
ja
je
mov
icebp
mov
mov
and
jl
sahf
xchg
dec
das
sub
mov
xor
mov
cmc
jg
out
das
sbb
test
test
or
mov
adc
jo
pop
lock
xor
sbb
push
fsubrl
outsb
loop
and
les
outsb
dec
outsb
dec
outsb
iret
push
xor
push
mov
push
mov
and
ss
pop
mov
mov
push
stos
cmp
inc
adc
xlat
fcoml
mov
cmc
ficomps
negb
aaa
fisttpll
push
shlb
mov
jmp
push
xchg
cmp
xchg
in
call
inc
jae
and
std
xor
jne
out
mov
dec
inc
int3
insb
dec
xor
push
popa
aaa
loop
ret
ja
xchg
inc
mov
xlat
push
mov
stc
mov
jg
adc
in
out
mov
imul
js
cli
sub
mov
add
test
adcb
push
ja
mov
push
sarb
roll
clc
mov
xlat
jge
adc
xlat
xchg
or
xorl
cmc
xchg
iret
mov
xlat
add
movsb
xlat
or
jmp
pop
xchg
adc
or
inc
mov
pop
mov
jne
mov
jecxz
roll
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loopne
jno
jb
jae
je
jne
jbe
ja
js
add
jnp
jl
iret
outsb
jle
jg
subb
subb
test
sub
mov
into
das
mov
mov
jo
divb
jb
jae
je
jne
jbe
ja
js
les
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
bound
mov
adc
jmp
jo
jno
jb
jae
je
jne
jbe
idivl
jns
jp
jl
jg
subb
das
test
popl
dec
call
repnz
repz
in
call
jbe
imul
sti
in
cld
in
jge
std
in
jle
in
jg
add
sub
in
orl
outsb
or
outsb
or
dec
or
inc
xadd
repz
jne
cmc
fnstenv
imul
ja
imul
stc
jmp
jg
add
sub
jmp
sub
jmp
jle
in
or
mov
or
mov
or
lods
lock
cmc
inc
jbe
adc
imull
js
clc
das
jns
stc
das
sti
das
add
add
subb
das
subl
das
test
add
or
mov
push
mov
dec
push
mul
out
shl
fnstcw
clc
imul
in
jge
sub
sub
in
test
add
in
xchg
mov
mov
in
push
in
mov
paddsb
aam
fdivs
jae
ja
js
clc
in
jns
stc
in
jp
cli
in
jnp
sti
bound
subl
test
dec
test
sbb
pop
das
xchg
mov
or
jo
lock
jb
jge
js
xlat
stc
xlat
jp
cli
xlat
jnp
sti
xlat
jl
cld
xlat
jge
add
add
add
xchg
pop
flds
or
mov
or
mov
mov
jg
lock
push
inc
jle
mov
bnd
mov
idivb
jl
cld
sarl
std
jmp
pop
add
add
pop
in
or
mov
or
mov
or
mov
or
mov
push
repnz
jae
cli
je
hlt
in
jmp
movsb
inc
cmp
cli
mov
add
ret
test
jl
jmp
or
aam
mov
or
cmc
jne
inc
mov
cmc
aas
jbe
idivb
mov
rolb
flds
add
test
add
jmp
jmp
psubsw
mov
notl
aam
jns
stc
in
jp
cli
in
jnp
sti
in
std
in
add
add
sub
lods
test
test
sub
pop
das
or
stos
das
lods
das
mov
adc
adc
je
mov
add
cli
xlat
jnp
sti
shl
ret
lret
mov
or
mov
xchg
mov
repz
data16
cmc
sub
das
ja
testl
das
pop
das
leave
das
lret
mov
sarl
mov
mov
test
cmp
aam
loop
xchg
inc
mov
inc
sub
bound
cs
call
cli
pop
jnp
ds
daa
ja
mov
push
scas
mov
cmp
or
pop
addr16
das
aaa
xchg
push
sbb
xchg
sbb
lcall
xlat
pushf
xlat
sbb
mov
pop
testb
mov
scas
mov
add
push
or
push
jecxz
inc
lfs
jl
repnz
xchg
push
aas
ss
inc
push
adc
or
aaa
sbb
mov
rcll
xor
js
and
jg
out
enter
loop,pt
dec
cltd
sbb
ja
xchg
and
xlat
cmpsb
xlat
daa
xlat
cmpsl
xlat
sub
test
sub
test
push
mov
movl
aam
fsubs
faddl
das
and
ss
or
push
je,pt
fnstsw
shlb
mov
sahf
mov
jecxz
xor
mov
jp
sti
flds
loope
ljmp
cmpsl
mov
mov
shlb
mov
scas
sar
aaa
xchg
arpl
jae
mov
ljmp
cmp
inc
push
xchg
xchg
sub
cmc
ja
xchg
sub
in
rolb
sbb
pop
scas
sahf
jnp
jb
add
push
mov
bound
xor
cs
outsl
inc
sbb
dec
jbe
mov
push
xor
pop
push
cmp
xchg
rcl
sub
loope
jnp
and
insl
push
or
xchg
aad
cmp
addb
push
or
mov
sub
jbe
and
test
test
std
into
aaa
and
fwait
pop
inc
ds
test
das
in
das
aad
pop
sti
inc
loopne
arpl
hlt
add
dec
push
cs
xchg
out
adc
mov
movsb
cltd
dec
jae
or
aam
shl
pop
sbb
fisttpll
mov
inc
or
sbb
inc
jne
dec
inc
lds
mov
clc
ljmp
dec
and
or
cmc
push
jl
xchg
lea
xchg
add
cmp
jmp
jp
je
add
push
inc
mov
lret
shrl
pop
dec
xchg
cmp
push
es
mov
add
pop
idivb
inc
push
in
cmpsb
push
movl
sub
sub
hlt
dec
xlat
jmp
mov
aaa
adc
mov
jmp
test
loopne
push
jb
xor
xchg
push
shrl
gs
aas
mov
push
pop
loopne
data16
sub
dec
cmp
add
adc
pop
push
shlb
in
xchg
xor
xchg
pop
pusha
jno
cmpsb
loopne
mov
and
add
lock
jo
pop
or
or
xor
std
jb
or
mov
sub
or
or
pavgb
lock
xor
icebp
adc
mov
div
aam
jo
cmc
or
testb
clc
std
ss
sub
cld
jo
std
or
incb
testl
fadds
xlat
or
or
mov
clc
loope
sub
mov
ds
dec
hlt
push
mov
stc
sar
cli
add
cld
std
cmpl
mov
dec
mov
adc
push
das
pop
idivb
loope
sub
mov
or
or
add
mov
cmp
cmc
cmpl
clc
dec
mov
sarb
inc
in
sub
in
out
sub
imul
sub
and
aaa
adc
jl
mov
je
ret
mov
pushf
std
mov
inc
sub
jbe
in
daa
cmpl
insl
cmc
push
push
mov
jne
adc
mov
adc
popf
cli
or
push
dec
adc
sub
nop
xlat
fadds
pop
push
lock
dec
sub
jg
xor
fsts
jne
jno
cmc
xor
pop
push
sarl
push
fsts
popa
mov
dec
fsubrs
jns
fisubrl
fwait
das
cmp
popf
das
pop
jbe
pusha
and
jecxz
test
mov
jo
sbb
imul
das
int3
das
cs
out
das
push
ds
jle
pop
xchg
shll
fsts
pop
jmp
or
ret
popa
jecxz
jecxz
jecxz
mov
or
or
jae
jnp
jl
cld
inc
mov
das
jg
add
add
add
je
xchg
outsb
or
cli
mov
lock
rolb
push
mov
clc
and
jge
jo
adc
xlat
adc
mov
mov
test
push
inc
xchg
push
outsb
cmovle
mov
mov
mov
inc
repnz
inc
or
sub
das
jge
lret
xlat
xchg
jg
ja
das
mov
or
mov
or
mov
xlat
mov
or
mov
mov
mov
xchg
shll
mul
ja
imull
sti
das
add
add
add
sbbl
dec
or
test
imul
mov
mov
push
jl
mov
mov
inc
jl
mov
ss
add
xlat
dec
push
adc
push
in
mov
push
dec
outsb
cs
push
aaa
fildl
mov
addr16
mov
mov
pusha
jl
dec
dec
jp
mov
rcrb
push
push
insb
inc
outsb
les
dec
enter
rclb
mov
aam
mov
cltd
mov
mov
jo
cmc
ljmp
out
or
nop
inc
jle
pop
cmc
mov
sub
sub
out
bound
fs
data16
push
insb
cltd
outsb
sbb
outsb
sbb
outsb
sbb
pushf
outsb
sbb
dec
sahf
mov
shll
pop
stc
xchg
inc
cmpb
pop
cmp
jbe
in
outsb
out
outsl
out
push
pop
push
shlb
push
push
shll
xchg
shlb
push
xlat
aam
push
xlat
aad
push
xlat
xlat
fcoms
mov
push
sub
sub
shrb
push
rol
push
sub
cli
inc
mov
jmp
pop
cli
test
pop
mov
or
cmc
xlat
mov
repz
in
xor
or
mov
and
stc
xorb
fisubs
inc
inc
fld
loope
sub
fisubl
fidivs
pusha
loopne
into
push
dec
pop
cmp
jbe
pusha
inc
dec
outsw
or
or
out
push
mov
in
in
insl
in
in
in
outsb
in
out
in
outsl
in
out
sub
mov
sub
jbe
ljmp
insb
ja
xchg
insl
mov
xlat
outsb
xlat
out
xlat
outsl
xlat
out
mov
not
mov
push
rcl
fsts
shr
push
jmp
inc
push
push
cmp
loopne
inc
aam
fadds
ret
loopne
test
pop
push
xlat
xlat
xlat
inc
xlat
xlat
dec
aam
rolb
in
dec
in
lret
in
lret
lods
dec
push
scas
dec
ss
aaa
jle
mov
jnp
hlt
jl
cld
sub
std
jle,pn
ja
xlat
add
adc
nop
icebp
add
xor
lret
push
lods
add
xlat
std
movb
add
pop
rorl
add
shll
pop
popa
xchg
lods
lea
inc
xor
icebp
mov
jbe
test
outsb
xchg
or
or
mov
or
adc
mov
rcrl
aaa
fnstenv
mov
cmp
lea
mov
outsb
outsb
mov
push
cltd
xchg
push
inc
inc
xor
mov
add
mov
orb
jno
push
and
js
and
clc
hlt
dec
jns
xchg
dec
rorb
dec
fmul
fmull
lret
lret
std
cmp
int
dec
mov
iret
jae
aaa
mov
xor
mov
cwtl
pusha
or
inc
xor
test
test
ds
or
mov
in
jmp
mov
aam
loopne
sub
in
sub
mov
test
xor
push
jno
add
push
loope
lds
in
jmp
add
xchg
sti
pop
mov
or
xorb
or
xor
inc
sub
je
addl
fmuls
leave
loopne
in
call
rcl
aam
sbb
dec
das
into
das
dec
aad
dec
xor
mov
xor
xor
int3
negb
pop
pop
cld
aam
loopne
sub
mov
int3
loop
outsl
call
and
mov
imul
jge
and
movsb
xlat
and
cli
les
mov
adc
or
sub
aad
leave
jae
movsb
dec
testb
rcrl
push
push
mov
pop
lahf
sahf
popa
pop
pop
inc
add
push
iret
cli
lods
mov
popa
mov
pop
xorb
bound
andb
dec
push
mov
mov
ja
bound
push
shl
inc
fsubr
loopne
in
test
sub
mov
aaa
mov
cmp
popf
sarl
call
xchg
aam
leave
push
push
cwtl
mov
xor
inc
inc
sbb
xchg
add
sbb
test
or
or
or
sti
fs
mov
mov
mull
jmp
dec
xor
add
mov
repnz
es
sti
jns
push
cmp
leave
popa
loope
inc
int
mov
leave
lea
xchg
sub
sahf
jbe
xchg
dec
aad
ret
pop
mov
xor
pop
loope,pt
mov
notl
adc
ja
sub
pop
dec
mov
xchg
adc
push
adc
faddl
in
xchg
mov
xlat
fstps
mov
fildl
jae
jb
mov
or
jo
or
js
mov
cmpsl
int3
loopne
push
clc
je
popl
xchg
cmp
dec
pextrw
xchg
sbb
jp
jle
addl
into
mov
mov
cmp
dec
mov
mov
add
pop
or
mov
xor
outsb
out
push
jbe
inc
lock
xor
add
xor
pop
push
sar
lea
mov
aam
xor
into
xor
aam
cmp
sub
xchg
cmc
or
movq
fdivs
icebp
loopne
test
test
aam
xorb
hlt
jl
cld
mov
mov
sbb
add
aad
shlb
xor
std
sub
push
stc
das
std
jge
inc
add
dec
mov
or
xchg
or
xchg
popl
jne
int3
stc
push
ss
std
jg
mov
xchg
dec
or
jae
pop
xchg
mov
les
jnp
dec
mov
mov
mov
js
jbe
mov
push
ja
pop
mov
jo
jle
fs
data16
jnp
jl
mov
mov
aam
sbb
add
lret
sub
push
das
xchg
pop
xor
mov
or
mov
rclb
aam
js
clc
fisttps
sbb
not
andl
mov
mov
xchg
or
das
comiss
sub
sub
rorl
jae
mov
push
adc
mov
enter
sub
mov
xchg
mov
mov
or
mov
jge
sub
xchg
je
hlt
sbb
cmc
sub
push
mov
pop
sbb
xchg
icebp
mov
cmp
mov
mov
dec
mov
dec
mov
cmc
mov
push
or
mull
bound
inc
jg
or
dec
or
mov
or
mov
push
inc
jb
xlat
jae
hlt
cmp
int
outsb
imulb
dec
idivl
add
jae
jno
cmc
ds
xchg
mov
dec
cmp
mov
sub
cmp
sub
das
add
mov
lock
aam
mov
js
clc
lret
or
jl
addb
add
cmc
mov
or
or
sub
aas
jo
lock
jno
jo
jb
push
clc
jae
cmp
cmp
jnp
clc
inc
jp
push
sub
or
jns
nop
push
iret
loopne
fcoms
in
call
daa
lods
cmpsl
test
mov
xor
pushf
jae
push
mov
aad
loop
aam
addb
cmp
shlb
xchg
out
loope
jmp
jns
insl
and
repz
aaa
push
js
insb
orl
fwait
xorl
mov
mov
mov
jle
clc
mov
mov
mov
loopne
ret
lods
inc
push
or
hlt
hlt
cli
mov
test
aam
repz
dec
aaa
ret
sub
mov
push
xlat
xchg
xchg
ds
mov
sbb
add
jae
sub
push
cmc
push
ret
sbb
fiadds
mov
mov
sub
ss
mov
jl
mov
ljmp
or
mov
sbb
pop
jp
xor
push
sarl
jmp
in
or
and
xchg
je
sbb
aas
sbb
pop
cli
xlat
add
mov
pop
fs
jecxz
mov
pop
btc
fimuls
jp
shll
loop
cmp
mov
or
dec
mov
jae
pop
xor
inc
fisttpl
in
mov
mov
iret
mov
push
jb
ja
add
xchg
push
in
jns
pop
xlat
cmp
sbb
adc
aam
je
and
lock
push
adc
lcall
inc
xor
xchg
mov
pop
push
iret
jmp
and
sub
sub
je
dec
xchg
shlb
inc
daa
or
loopne
pop
sbb
gs
mov
push
sub
mov
mov
movsb
aaa
shrl
push
fs
inc
jmp
fnstsw
mov
xchg
xlat
xor
insl
jecxz
repnz
loop
sarl
repz
sub
mov
jno
ss
jo
ds
mov
mov
pop
and
insl
add
test
pshufw
sub
adc
or
push
ja
mov
hlt
mov
inc
in
mov
cs
bound
or
cld
pushf
adc
add
jae
jecxz
mov
lea
inc
jbe
pop
je
cli
jle
mov
mov
xchg
mov
push
addr16
xchg
xor
push
or
aam
bound
shlb
sub
ret
test
aaa
sbb
add
mov
adc
pushf
sbb
mov
jae
adc
je
jnp
addl
xor
in
mov
ja
add
xchg
mov
mov
ja
js
testl
mov
mov
sub
fldt
addr16
dec
pop
mov
testb
mov
dec
lods
sti
imul
inc
xchg
adc
mov
push
mov
or
dec
int
enter
repnz
mov
mov
lods
cli
mov
jnp
aad
rolb
inc
movsb
push
pop
cli
into
fisttpl
loopne
dec
mov
push
pop
mov
imul
ja
mov
jbe
mov
push
rcl
fsts
imul
loopne
das
xlat
das
pop
das
fcoms
cmc
xchg
pushf
iret
aaa
mov
pusha
inc
js
cmp
jp
xchg
sti
xchg
pop
mov
jns
inc
repz
aaa
pop
mov
dec
rclb
inc
cmp
xor
push
or
jle
jecxz
ret
loopne
in
call
loope
imul
mov
pop
mov
sub
fildll
pusha
das
add
and
push
cmp
lea
testl
addb
ret
addb
mov
or
push
sbb
pushf
addr16
xor
sarl
pusha
xor
dec
inc
mov
mov
jb
cwtl
sub
add
pusha
loope
imul
in
int
xor
adc
pop
sarl
pop
push
pop
or
mov
mov
push
mov
loop
dec
sbb
popl
dec
xchg
das
mov
ja
mov
fwait
sub
mov
or
push
mov
ja
and
imul
xlat
xor
inc
xchg
hlt
sbb
mov
sub
sub
shlb
dec
jge
insb
ja
adcb
dec
neg
lret
mov
mov
leave
aad
orb
test
fimull
jle
mov
pop
jl
repz
sbb
sub
push
add
fdivl
xor
fdivr
fcompl
add
cli
les
xor
jg
jmp
xor
xlat
inc
mov
inc
dec
mov
jl
imul
sarl
orl
cmove
cli
je
cmp
adc
push
sbb
hlt
dec
xchg
test
inc
sub
sub
sbb
inc
sub
enter
test
xlat
lret
xlat
dec
xlat
int3
xlat
dec
xlat
int
dec
push
xor
mov
inc
mov
mov
xchg
adc
dec
push
lret
orb
ss
dec
js
sub
das
dec
mov
dec
xor
or
or
mov
xchg
xor
lret
push
xchg
push
testb
mov
xchg
ret
iret
push
inc
push
sbb
pushf
mov
dec
sbb
je
jl
jb
cmc
mov
nop
add
push
enter
iret
shlb
push
je
fimuls
stos
fstps
enter
lcall
xor
pushf
lods
inc
rorl
cmp
mov
push
jmp
ja
xchg
xor
push
dec
sub
sub
sub
sub
inc
cmp
inc
mov
shrl
pop
shr
ds
inc
add
bound
sub
xor
inc
mov
in
sarb
lea
iret
std
mov
cltd
jle
pop
fildl
fs
ror
loopne
ja
je
call
fsubp
inc
fnstenv
outsl
push
je
shrl
mov
xor
or
inc
insl
mov
push
cli
jae
sub
push
inc
int
and
nop
xlat
adc
shrl
push
sub
dec
sub
push
push
adc
xchg
cli
ss
push
jnp
sarl
ret
out
aaa
lds
paddd
imul
jo
mov
clc
xchg
cld
std
out
inc
add
xchg
add
push
xchg
or
or
pop
or
mull
sbb
cld
not
repnz
testl
xlat
sti
xchg
cld
mov
loope
sub
movsb
xchg
nop
jg
inc
mov
or
ss
and
or
mov
out
inc
repz
inc
and
stc
mov
sti
sbb
xchg
add
cltd
add
sbb
pop
xor
xchg
or
inc
push
mov
aas
icebp
inc
mov
pop
sbb
xchg
mov
or
incb
xchg
push
mov
int
push
dec
mov
inc
leave
out
sub
mov
xchg
and
mov
imul
lods
imulb
jae
xchg
sub
xor
movsb
into
sbb
mov
mov
popa
xchg
push
xchg
cmp
inc
xchg
incb
mov
jne
rclb
add
dec
add
das
dec
das
int
push
hlt
push
xlat
rolb
jle,pn
aaa
push
ss
cmpb
xlat
pusha
je
lea
and
sbbl
lar
push
xchg
jb
mov
pop
jns
xor
jb
jnp
or
mov
or
cmpsl
adc
jo
call
jo
iret
sub
push
mov
shll
outsl
cltd
je
dec
ja
jge
mov
xor
in
and
add
mov
jnp
mov
stc
inc
int3
mov
aas
mov
cmpsl
add
adc
out
xor
mov
aaa
ja
or
stc
inc
or
je
ror
add
add
rolb
cmp
sub
cld
pmullw
das
inc
ja
dec
aaa
xchg
loop
pusha
js
scas
mov
repz
js
cmc
jl
jbe
pop
addb
pop
or
into
inc
jle
js
jl
cmp
loop
decb
jnp,pn
jg
fisubl
xchg
fisubrs
addb
or
xor
or
ret
rcl
jl
mov
cmpsl
and
stc
pop
xor
jnp
jge
cld
mov
les
xchg
inc
mov
push
je
loop
xchg
aaa
jo
lock
jno
icebp
sub
stc
sub
enter
leave
sbb
push
repz
dec
clc
push
jns
rolb
cmc
cmc
ret
cld
inc
inc
pop
add
or
xlat
or
and
or
push
cwtl
mov
add
mov
pop
xchg
js
bound
ljmp
stc
fcoms
jbe
or
mov
in
and
rorl
mov
push
mov
cli
mov
pop
sbb
movsb
jecxz
rorl
mov
push
shll
ds
fs
add
xchg
push
sarb
fdivrl
mov
dec
jo
xchg
sub
sti
xor
mov
xchg
push
mov
inc
xchg
inc
xchg
jmp
cmp
mov
xchg
filds
sbb
mov
dec
push
cmp
sub
mov
ret
sbb
inc
mov
xchg
or
hlt
inc
xchg
ljmp
sub
sub
sub
divl
jle
mov
cld
xor
add
mull
pop
out
aad
lock
lret
and
leave
adc
std
xor
xchg
push
xchg
aad
sub
cs
das
and
adc
mov
add
aam
loop
repz
inc
push
inc
int
inc
mov
xchg
sbb
mov
mov
mov
ficoml
aam
std
cmp
sub
push
iret
jne
sub
xchg
cmp
jbe
xor
xor
mov
or
test
sbb
sbbb
lods
dec
xor
jne
mov
lods
sbb
cli
add
push
sbb
std
xchg
test
std
push
ds
push
into
xor
aas
jecxz
jecxz
jecxz
mov
test
inc
or
xor
mov
inc
sbb
jbe
or
and
nop
push
xor
xchg
enter
or
pop
pop
cmp
pusha
mov
test
cmp
cmc
dec
push
dec
mov
mov
loop
jnp
shl
repz
and
cmc
rclb
inc
stc
cmp
aaa
jne
or
pop
mov
rolb
stc
cmp
testb
inc
cmc
xorb
int3
sub
mov
clc
rcr
ret
cmpb
add
add
pop
xchg
fs
das
and
add
into
insl
jo
in
in
dec
push
xchg
adc
sub
popa
aad
xor
popa
call
movsl
or
add
iret
aam
dec
add
xlat
adc
imul
mov
add
xor
add
add
ds
rolb
aam
fsubrs
and
pop
add
dec
mov
inc
jl
xor
aaa
lods
jnp
pop
jmp
sbb
or
xor
add
enter
xlat
rorb
xor
rorb
xor
jae
or
arpl
testl
pop
and
xchg
push
mov
mov
les
mov
nop
adc
fmull
mov
ja
je
lret
cmp
div
or
notl
fsubl
inc
aaa
iret
aam
sbb
sub
mov
lret
sub
fdivrl
xchg
xchg
dec
add
xchg
mov
sub
sub
lea
stos
out
xchg
xor
hlt
mov
cmp
dec
cmpsb
test
xchg
sub
fldt
cmp
mov
or
cmpsb
inc
dec
fwait
dec
cmpb
sub
mov
pop
mov
xorb
lea
dec
aam
incb
dec
inc
dec
rcrb
iret
fldt
pop
sub
rorl
fldcw
or
push
int3
nop
mov
addb
jl
adc
bound
push
dec
leave
jae
sub
mov
lock
xor
jecxz
shlb
pusha
icebp
testl
sbb
xlat
cmp
fistpll
je
add
dec
jne
lret
cmp
out
jns
mov
or
testb
or
es
push
pop
or
into
aam
xchg
xchg
adc
pop
sub
lcall
xlat
adc
inc
sub
leave
jge
xlat
or
lods
xlat
dec
xor
adc
jb
push
push
jnp
enter
sub
sbb
pop
ret
jne
sahf
inc
inc
push
or
das
gs
xlat
cmpsl
mov
lret
jecxz
inc
sub
dec
outsb
sbb
nop
sub
sub
ja
mov
push
loop
sub
std
mov
pusha
cmp
mov
or
daa
jb
or
dec
loop
add
xchg
push
push
mov
mov
ret
jns
outsb
aas
dec
fistpll
xor
push
jg
cmp
cmpsb
push
call
jg
lods
insl
push
clc
jno
jbe
xchg
leave
jo
sub
adc
sarb
xchg
xchg
xchg
xchg
out
rorl
sub
pusha
das
popa
pop
adc
arpl
jge
test
xlat
mov
iret
aam
shl
push
js
sub
adc
jecxz
pop
ret
mul
gs
dec
test
sub
jne
cmp
xchg
negb
imull
js
push
dec
stc
dec
jp
jo
xchg
mov
mov
mov
aaa
or
jnp
rcr
les
ret
outsl
xlat
cli
out
xchg
sti
sbb
cld
fists
std
sub
aaa
inc
inc
add
shl
ret
int3
xchg
into
das
xor
xor
mov
cltd
and
xlat
mov
sbb
sub
adcl
repz
pop
roll
sub
mov
lock
jb
or
aaa
fcmovu
fildl
xor
imul
dec
aad
stc
repz
lock
or
dec
xchg
mov
shlb
into
xchg
push
orb
dec
movb
faddl
imul
cmp
pop
inc
mov
mov
xor
jp
cmpl
out
in
xor
hlt
sti
clc
movl
xchg
add
lods
mov
jae
das
lret
das
jnp
push
lret
mov
jecxz
ret
test
xor
dec
cmp
pusha
lret
pop
jg
rol
inc
sub
push
push
jo
sbb
jge
xlat
or
lret
xchg
int3
sub
push
xlat
and
push
pop
dec
jl
sbb
xchg
fs
sub
sub
aam
push
sub
push
inc
je
sbb
xor
pop
jecxz
push
inc
mov
jg
test
lahf
pushl
lock
jecxz
jle
mov
clc
jae
repz
mov
xor
xor
mov
mov
xor
outsb
cwtl
outsb
mov
add
mov
loope
sub
ja
cmp
into
dec
cmp
inc
mov
or
mov
or
orb
into
int3
mov
inc
mov
fists
or
sbb
mov
sub
hlt
les
addr16
inc
inc
dec
inc
jnp
js
pop
int
xchg
sbb
pop
mov
inc
mov
adc
test
ror
movsb
sub
jbe
adc
sbb
rcrl
add
outsb
jecxz
xorb
pop
inc
aam
rolb
test
leave
loope
jmp
jno
or
into
dec
cmpsb
or
in
push
cld
push
sbb
and
enter
xor
test
fdivrs
fsubl
out
jne
mov
add
and
push
mov
inc
cmpl
or
xor
mov
adc
push
push
add
mov
mov
add
mov
dec
leave
std
mov
int
notb
pop
mov
jno
icebp
mov
shl
mov
pop
incl
js
inc
jg
jg
inc
popa
or
test
mov
sbb
ja
lea
xchg
aad
xchg
vcvtdq2pd
xlat
or
lret
aam
mov
jne
sti
sbb
mul
outsb
addr16
sub
mov
stos
push
enter
aad
aaa
sub
jl
jg
xorb
incb
sub
mov
sbb
fdivrl
andb
dec
mov
and
icebp
cmc
add
in
and
cmc
ror
mov
rorl
repnz
mov
mov
xchg
push
cmp
loop
mov
xlat
insl
mov
mov
mov
lcall
aad
sub
imul
mov
lods
leave
xchg
stc
test
add
je
jno
pop
cmpsl
aaa
mov
popl
mov
xor
mov
xor
loope
sub
mov
into
mov
sbb
xor
or
aad
sbb
xor
dec
jnp
jnp
mov
mov
ret
add
and
imul
mov
mov
push
mov
loopne
mov
push
push
hlt
jp
jnp
push
shlb
inc
fs
ror
ret
lock
mov
dec
mov
inc
mov
je
cwtl
mov
push
mov
mov
cmp
adc
adc
test
xor
cli
cld
jge
mov
jg
add
aas
cmp
cmp
fcmovnbe
dec
mov
xlat
inc
xchg
add
stc
rorl
dec
inc
inc
mov
cwtl
add
hlt
xor
xor
imul
aas
xlat
not
js
pop
mov
add
add
pusha
mov
dec
test
sarl
rclb
jo
lock
jno
je
push
push
inc
mov
loop
lret
and
nop
mov
gs
mov
mov
xchg
cmp
cmp
ret
cmpsl
loopne
inc
lods
dec
push
mov
push
adc
pop
aas
fidivrl
cmp
shrl
inc
jmp
mov
dec
lock
push
nop
add
inc
mov
sub
lods
outsl
mov
xor
rcr
push
ljmp
lahf
nop
iret
loopne
push
push
jle
lds
bound
xor
push
push
ja
and
jp
add
cmpsb
js
cmp
sti
mov
cmpb
lods
cmp
shl
cmp
mov
adc
add
idivb
lea
call
mov
lods
adc
push
mov
mov
cmp
cmp
jne
xlat
loopne
loope
into
xchg
sub
sub
or
sbb
fdivl
lds
movsb
dec
dec
imul
mov
cmp
sti
dec
fistps
ret
lods
call
cli
cmp
adc
fisttpl
loopne
leave
shll
inc
test
xlat
test
sub
out
das
xchg
push
push
rclb
pop
cltd
sbb
outsl
inc
cmc
sbb
add
xlat
adc
xor
xor
xchg
or
mov
cmp
lea
sub
cmp
shl
int
lcall
lret
dec
inc
je
fimuls
adc
mov
pop
xor
out
ja
xchg
in
sti
punpckhbw
cli
adc
cmc
adc
jp
sti
ret
dec
jge
jmp
aaa
adc
sbb
mov
sub
sub
sub
in
push
jnp
cmc
dec
mov
mov
mov
insl
int
cmp
ja
jnp
xor
sar
push
mov
push
jnp
xor
stos
sbb
or
xor
inc
jns
jne
fstl
mov
mov
popa
cs
repz
repnz
pusha
dec
sub
popa
inc
xor
or
or
lods
into
mov
xchg
pop
js
pop
out
aaa
sbb
sbb
dec
clc
popa
mov
push
std
cmc
lea
jmp
cmc
mov
jo
mov
dec
adc
int
out
pop
mov
cmp
dec
int3
lret
scas
push
jmp
inc
xchg
fisttps
cli
xchg
mov
pminub
jo
inc
or
fs
cmp
push
jne
mov
mov
mov
rolb
dec
dec
adc
jbe
aad
mov
cmp
push
fadd
mov
inc
sub
push
cli
pusha
jnp
dec
dec
std
hlt
fwait
shlb
jl
jno
push
dec
jno
or
add
xlat
and
push
cmp
repz
mov
sti
jp
orl
rcr
sti
sbbl
xlat
xor
popa
mov
mov
push
xchg
loop
test
loope
pop
mov
dec
lret
cmp
ja
mov
rcrb
push
mov
mov
shll
sbb
nop
xchg
xchg
je
xchg
aam
jo
mov
sub
stc
jle
or
inc
adc
rol
jge
shr
or
mov
dec
pusha
mov
mov
pop
iret
mov
jle
mov
psubusb
out
cmp
lret
xlat
int3
std
jns
lea
jecxz
jo
divb
mov
dec
xlat
or
int
mov
loope
inc
sub
xor
test
into
pop
hlt
aaa
fsts
push
div
cmp
mov
jmp
wrmsr
pop
cmp
popf
jmp
pop
in
loope
loop
arpl
sbb
out
das
xor
dec
rcll
xchg
push
sbb
icebp
cmp
inc
or
mov
scas
or
mov
aaa
or
cmp
push
and
fs
add
sub
sub
mov
or
adc
mov
mov
std
rcl
stos
sbb
mov
add
jecxz
dec
jl
jle
push
pop
shrl
popl
ret
dec
add
mov
jge
aad
xchg
test
push
mov
jl
pop
jl
xlat
jp
mov
sbb
loopne
mov
or
mov
aad
pusha
negb
pop
or
mov
fs
mov
xor
cmp
jbe
sub
lods
xchg
outsl
mov
push
cwtl
push
fistpll
stc
mov
jl
inc
shr
inc
in
stos
lods
stos
pop
mov
sub
cld
add
push
add
sub
dec
inc
lcall
cmpb
add
cmp
mov
lret
xchg
dec
sub
push
xor
mov
add
call
xlat
xchg
dec
repz
and
rcpps
loope
sub
sbb
push
add
std
inc
xchg
or
icebp
scas
mov
rorb
mov
orb
es
hlt
add
js
lock
lods
dec
pop
mov
xor
cmp
flds
mov
mov
mov
mov
push
cld
int3
mov
jl
inc
pop
pop
sti
xlat
xlat
sub
outsb
aam
sbb
pop
divb
mov
cmp
js
aas
push
mov
push
cwtl
mov
push
dec
and
and
shlb
mov
rol
xor
adc
inc
sub
mulb
mov
add
sub
sub
jae
rorl
sbb
mov
mov
ret
hlt
mov
mov
sbb
popa
jl
test
sti
mov
jne
addl
jge
popa
test
enter
sub
push
out
inc
popf
push
pop
mov
adc
into
push
xor
lea
in
mov
lock
mov
add
lret
or
jp
clc
les
push
icebp
orl
mov
pop
mov
mov
mov
pop
cmp
sub
cmp
sub
dec
jnp
xchg
jl
mov
mov
movsl
dec
inc
es
je
test
sub
push
xor
test
or
jmp
int
das
lods
jo
mov
push
jbe
js
rorb
mov
jmp
orl
jmp
sbb
add
push
cmp
int
jns
mov
xor
mov
shl
ss
inc
sbb
hlt
mov
lea
call
push
xchg
mov
jle
subl
es
inc
dec
push
xchg
xchg
mov
mov
mov
mulb
das
push
roll
push
jmp
lret
mov
mov
int
pop
inc
xor
nop
jno
or
mov
rolb
sahf
add
test
jne
shlb
inc
xlat
lret
jo
add
push
or
or
sbb
sub
fisttpll
mov
loop
jecxz
dec
sub
insl
xchg
hlt
add
add
fistpl
dec
pusha
mov
scas
sub
aas
push
mov
and
shll
lcall
fildl
flds
test
aaa
add
mov
je
adcb
xor
add
jmp
inc
xor
cli
inc
jnp
cld
ja
aad
sbb
dec
mov
add
sub
std
jp
clc
cmp
popa
lock
dec
mov
or
das
repnz
or
aam
inc
jbe
int3
xor
and
push
mov
fnsave
sub
jg
mov
jle
out
mov
rcr
xchg
pushf
adc
mov
pop
push
jne
dec
lods
jnp
rclb
fcom
pushf
push
or
sbb
xor
aam
bswap
mov
repnz
orb
js
push
mov
popa
jge
cmc
popa
das
loope
push
jo
or
mov
add
inc
and
lods
ret
divb
push
ret
add
inc
mov
mov
and
scas
jl
scas
push
pop
mov
aaa
push
push
fdivs
mov
sti
fadd
mov
push
mov
inc
mov
mov
sarb
lock
mov
inc
js
mov
cmp
jae
loop
add
cli
mov
dec
add
adc
stc
ret
jmp
sub
or
or
jp
inc
mov
mov
or
mov
sar
in
lock
sbb
and
mov
xchg
mov
inc
jg
jp
jle
cmp
xor
fildl
call
cs
mov
ljmp
or
aad
inc
out
xor
js
fptan
pusha
neg
inc
and
int
test
push
je
mov
inc
notb
or
or
xchg
inc
add
mov
lcall
outsb
leave
lods
jo
hlt
sub
cmc
push
push
repnz
mov
sub
scas
adc
and
add
adc
stc
jns
inc
lea
inc
push
dec
dec
lahf
or
int
mov
pop
das
xchg
mov
aaa
loope
xchg
sti
mov
neg
es
mov
sahf
lods
dec
mov
jo
popa
push
in
daa
sbb
repz
or
loop
daa
sbb
mov
inc
repnz
add
mov
jmp
loop
inc
mov
jle
xchg
test
xchg
negl
mov
inc
add
jne
sbb
lock
pop
js
and
out
dec
packuswb
call
xchg
lret
mov
js
xor
inc
aaa
adc
jle
ror
cwtl
nop
xlat
mov
rorl
mov
push
mov
push
fs
inc
cmp
les
mov
or
xchg
jbe
cltd
dec
push
addr16
mov
sbb
lds
inc
div
ja
adc
sub
jle
ljmp
xor
fistps
jle
pop
rorl
inc
xor
shl
test
hlt
in
cld
div
add
repnz
ret
dec
cmp
sahf
movsb
dec
repz
aaa
fcoms
ljmp
xchg
mov
cwtl
orl
addb
rcll
repz
adc
cmp
imul
shlb
jno
andb
push
aaa
jl
js
jl
cmp
pop
mull
mov
fadds
inc
and
jns
jnp
mov
push
ret
sbb
out
bound
call
aas
jmp
shlb
push
mov
xorl
add
cmpsl
cli
or
std
jo
add
je
je
enter
ret
fs
orl
xchg
aas
test
ja
cmp
mov
popa
filds
push
sbb
pop
jbe
inc
inc
jns
nop
pop
jp
into
xchg
jnp
ud1
test
inc
lea
dec
cs
aam
dec
pop
jne
inc
jns
jb
mov
jle
inc
mov
pop
testl
rol
jecxz
inc
dec
test
mov
push
daa
aas
shrl
jecxz
jecxz
jecxz
loop
add
rcrb
mov
push
sbb
jmp
loopne
jmp
insb
cmp
xor
out
push
faddp
mov
sbb
imul
jmp
ret
fdivl
aad
into
out
add
mov
mov
or
xor
hlt
daa
repz
inc
inc
mov
pop
or
mov
std
sarl
test
push
mov
xor
ss
sarl
mov
sbb
mov
jnp
lods
cmp
mov
das
inc
jge
xlat
inc
xchg
shrl
roll
ret
jecxz
ret
or
lods
dec
inc
jle
lret
mov
dec
dec
mov
dec
or
dec
cmp
xor
mov
xor
out
sub
ret
cmp
mov
jo
stc
out
xor
pop
mov
stc
mov
inc
jecxz
jecxz
inc
insb
xchg
add
jl
push
fstl
or
lret
clc
fdivrs
fisttps
mov
inc
push
mov
fldenv
test
inc
aad
shl
lea
cmp
add
das
push
xor
xchg
outsb
rorb
outsl
lods
out
xchg
inc
mov
dec
aad
jle
cmp
cmp
or
mov
mov
jnp
sarl
bound
decb
addr16
xor
xor
push
insb
mov
xor
mov
xor
outsb
mov
aaa
dec
ljmpw
cmp
mov
jo
jle
push
cmp
not
cmp
mov
mov
inc
jecxz
mov
pusha
cmp
decb
lds
inc
dec
jno
enter
leave
mov
lret
xchg
int3
ret
repnz
xchg
pop
adc
cmp
addr16
xor
push
mov
lock
pop
cli
sbb
jecxz
bound
dec
jo
xchg
inc
aas
mov
add
xor
xchg
rclb
flds
cmp
icebp
ret
cmc
imul
test
adcl
cld
jecxz
bound
test
jo
inc
mov
jg
xor
dec
xor
push
mov
inc
xlat
mov
cmp
inc
cmp
mov
and
sbbl
loope
sbb
test
mov
shll
pop
mov
pushl
lock
sbb
cld
mov
loopne
mov
aam
js
or
push
xchg
pop
rorb
and
test
pop
loop
enter
mov
pop
sbb
adc
sub
sub
mov
cld
pop
div
shlb
je
popf
mov
jno
push
rclb
aam
cwtl
and
insl
add
xchg
push
sbb
mov
ss
test
sbb
inc
cmp
cltd
inc
add
inc
inc
mov
mov
cmp
dec
into
stc
mov
xor
push
adc
dec
das
fcompl
pop
rorl
dec
inc
in
mov
or
sub
or
cwtl
aam
sbb
push
aad
mov
push
push
outsb
outsl
jae
xor
xor
or
test
test
movsl
mov
add
xchg
xlat
outsb
mov
mov
pop
mov
movsb
je
or
test
into
push
push
cld
adc
push
xchg
mov
mov
or
scas
mov
add
sub
mov
ds
aad
rorb
jp
lahf
jl
mov
out
iret
outsl
and
push
jl
aaa
cmpsb
sub
cmp
mov
lea
push
xchg
xor
je
rorb
or
fbld
dec
pop
lidtl
xlat
dec
mov
or
rolb
aam
jg
jbe
dec
cmp
sbb
xlat
gs
jo
out
push
stc
add
or
je
dec
mov
pop
aaa
aad
cli
inc
jg
cmp
sarl
leave
shl
das
xor
lahf
mov
mul
rorb
int3
xor
ds
or
ja
in
xor
push
mov
dec
xor
mov
sub
mov
sti
cmp
pop
fwait
mov
mov
xchg
stc
xor
rcr
push
lret
xor
fistl
add
xchg
mov
jle
movsl
je
add
xchg
or
or
sbb
jo
addr16
push
dec
jmp
ja
iret
jle
jl
add
add
inc
sbb
sub
xor
xor
mov
mov
push
xchg
and
in
mov
mov
mov
aaa
xchg
push
adc
xlat
or
cltd
mov
pop
loopne
jg
shll
jne
mov
jb
mov
add
or
cli
repz
cmc
fistl
mov
jnp
mov
mov
fists
xlat
cmpsl
rolb
loopne
push
xlat
in
out
in
sbb
aaa
push
shll
jg
xor
pop
jns
ljmp
cmp
xor
xlat
mov
adc
cmc
sbb
pusha
cmp
inc
sti
divl
push
adc
scas
mov
testl
add
cs
mov
shlb
ror
mov
jno
dec
mov
in
lea
xchg
in
outsb
movsl
outsl
stos
nop
inc
lea
shl
addr16
fldcw
int3
test
int
push
ds
jnp
push
iret
inc
stc
repz
shll
cmc
pusha
mov
inc
push
sub
add
push
int
jl
ret
cmp
or
sub
lods
jl
cmp
out
or
fs
jle
int
lea
pop
test
and
xchg
mov
repnz
or
fnstenv
xchg
jne
xor
inc
mov
and
xlat
mov
dec
aas
pop
inc
cmp
mov
lret
pop
ja
orb
bound
aas
loope
imul
mov
sbb
nop
mov
lret
pop
dec
pop
push
jecxz
ret
or
mov
mul
or
add
jb
test
add
and
mov
loop
or
sub
aad
or
icebp
add
mov
ds
or
mov
daa
ss
push
jns
pop
fs
mov
sbb
xchg
jle
xchg
pop
push
aaa
xchg
push
std
sub
sub
jne
xchg
in
adc
pop
repz
decb
call
adc
and
ja
xchg
pop
sub
adc
and
cmc
nop
push
mov
push
in
push
inc
ss
rcrl
cmp
scas
loopne
repz
add
int3
aaa
lods
sub
add
mov
mov
ret
inc
inc
mov
cld
in
mov
xor
nop
cmc
add
cmc
inc
mov
notl
ss
aad
sti
pusha
cmpsl
sub
aas
xor
mov
fwait
jle
and
ret
push
mov
sbb
inc
out
mov
push
out
aad
jo
and
add
or
mov
adcb
cmp
pop
xor
inc
nop
std
leave
cmp
sarl
push
sar
ret
adc
outsl
ja
xchg
inc
fists
or
scas
xchg
sub
or
lahf
nop
mov
shlb
mov
inc
out
mov
inc
fdivrl
xchg
out
adc
mov
sub
aaa
add
jbe
dec
hlt
neg
jp
lock
jl
add
lock
xor
add
push
mov
jp
add
int
fsubrs
cmc
or
int3
fld
xor
adc
ja
jle
push
add
inc
movsl
std
add
push
sbb
dec
lret
repz
leave
xor
sub
cmp
fsts
sbb
stc
and
dec
add
dec
push
dec
sbb
mov
add
inc
adc
stc
or
sbbl
enter
sub
dec
adc
sar
add
roll
sub
xlat
inc
aam
jo
mov
adc
lcall
adc
mov
inc
aam
nop
cli
fmull
loopne
xorl
je
xchg
fidivs
xchg
pop
sbb
pop
push
mov
pop
push
out
mov
mov
xor
mov
lret
sahf
xchg
dec
jecxz
and
mov
mov
clc
push
cmpb
jp
cmpsb
lret
mov
out
push
inc
negl
aad
int
push
and
xchg
xchg
fnsave
in
push
js
lret
sub
insl
out
repz
or
add
cmc
std
add
mov
iret
inc
jo
jnp
xchg
and
inc
push
cmc
popa
sub
or
and
mov
xchg
pop
jo
repz
test
mov
inc
fld
stos
and
bswap
pop
pushw
jg
push
adc
and
dec
clc
je
mov
inc
pop
pop
add
testb
dec
mov
sbb
movl
lea
movsl
dec
mov
sbb
ja
xchg
mov
divl
jl
dec
mov
jbe
mov
iret
mov
mov
js
dec
jg
out
xchg
enter
leave
cmp
push
pop
ss
dec
shll
lock
push
std
mov
sub
jmp
jns
mov
mov
mov
div
lds
testb
shl
xchg
cli
mov
aam
js
test
cmp
pop
pop
out
sbbb
mov
cmp
or
fisttpl
xor
jmp
pop
xchg
mov
test
jl
and
xchg
movsb
sub
mov
aaa
jbe
and
mov
or
mov
or
xor
das
mov
insb
jno
icebp
fwait
and
pop
sub
sub
sub
pusha
mov
lcall
jno
xor
jne
inc
rcrb
sub
push
das
push
ror
movaps
xor
cld
out
xlat
cmp
push
fisubl
dec
and
in
add
jecxz
mov
or
push
mov
inc
mov
xchg
daa
sbb
xor
inc
stc
pop
mov
jnp
jp
xor
dec
aam
or
adc
xchg
inc
ret
fisubrl
mov
mov
outsb
lods
dec
jle,pn
jo
xchg
jbe
mov
or
inc
daa
mov
jl
rorl
mov
mov
cmp
sarl
pusha
testl
ret
loope
jmp
inc
jmp
dec
ja
aad
or
dec
mov
dec
scas
sbb
or
xor
xor
mov
jge
mov
lock
mov
adc
das
fidivs
xlat
inc
xlat
ret
shl
or
dec
aas
int3
dec
inc
jno
lock
cmpsl
sbb
xchg
sub
mov
sarl
ret
jae
insl
roll
jmp
rclb
inc
je
ss
pop
sysenter
mov
aam
iret
vshufps
xor
mov
adc
stc
mov
negl
sbb
ret
das
enter
mov
sbb
push
cli
mov
call
cs
mov
xor
xchg
imul
pop
movsb
sbb
ds
mov
pusha
add
sti
mov
adc
push
cmp
js
or
cmpsl
lods
jb
ja,pn
adc
dec
xchg
pop
std
jp
mov
lock
in
xchg
sub
jae
mov
sbb
pop
xchg
pop
psubq
dec
iret
xor
mov
mov
fmull
mov
das
test
inc
xchg
lea
inc
mov
inc
loop
add
cmpsl
loopne
outsl
mov
add
sbb
rcrl
xchg
je
jo
jle
hlt
push
sbb
cltd
jo
fisttpll
aam
and
aas
push
sub
or
push
dec
dec
jp
mov
adc
cmc
mov
xor
test
xor
sbb
sub
jg
sbb
cmp
shll
pop
jmp
rolb
dec
mov
pop
repnz
jno
mov
dec
into
or
lret
div
push
pop
jno
inc
jb
nop
enter
repz
mov
popa
icebp
loope
sub
adc
jle
push
test
test
xor
push
push
fs
in
inc
pop
mov
mul
loopne
cltd
in
pop
in
pop
in
lahf
mov
jecxz
dec
rclb
mov
push
js
push
jb
mov
jecxz
nopl
into
mov
addl
xor
and
in
add
push
or
lahf
lods
pusha
lds
dec
lods
mov
add
mov
mov
pusha
mov
mov
mov
dec
adc
mov
and
loop
test
jae
cmp
cmp
cmp
out
aam
cmp
lcall
pop
es
mov
xlat
pop
xor
jg
or
dec
xor
mov
mov
push
mov
jbe
mov
lds
xorl
dec
fstl
pop
sahf
mov
shrb
nop
gs
jnp
sub
mov
xchg
push
test
or
mov
scas
das
push
jle
jns
mov
jae
and
mov
aam
cmp
push
clc
jecxz
nop
inc
mov
jmp
lret
push
xchg
ds
xor
mov
dec
subl
jo
test
cmp
ss
mov
dec
mov
add
shl
loopne
adc
xor
sbb
rol
jecxz
bound
mov
push
ja
repz
adcl
xchg
sub
cmp
cmp
loop
flds
jno
fldl
sbb
pusha
leave
stos
inc
lods
test
js
cmp
mov
dec
mov
add
pushf
pop
dec
xor
push
cmp
jecxz
jne
cld
and
jle
or
and
mov
sub
cmc
mov
xchg
aaa
mov
rorb
sbb
mov
pop
jecxz
icebp
sti
test
andb
scas
adc
sub
or
ds
jle
shrb
sub
xchg
xor
add
dec
and
dec
bound
adc
add
lock
xchg
push
lret
lea
push
imulb
lods
ffree
lds
xor
js
cmp
sbb
ja
xchg
shll
mov
mov
rclb
aad
sub
or
ss
dec
xor
call
sub
movsb
cmp
lret
test
xchg
mov
xorl
mov
sub
jge
aas
cs
cmp
xlat
push
lret
aad
xor
dec
inc
cmc
fdivrl
push
or
xor
mov
in
mov
andb
sub
cli
test
hlt
or
lret
in
pusha
inc
testb
ret
pop
add
dec
mov
test
lret
mov
cmp
shll
jno
add
and
shrb
mov
lods
leave
adc
sbb
sub
dec
sub
jne
push
xor
mov
mov
shll
pop
outsl
inc
ja
xor
js
mov
sub
das
mov
mov
sbb
mov
mov
inc
sub
sub
hlt
push
bound
cli
mov
pushf
xchg
jae
cld
or
xor
push
push
and
lea
add
lock
cli
or
mov
xchg
and
movl
and
push
xchg
xchg
aaa
mov
cmp
fcoml
and
cmp
cltd
stc
add
xor
cltd
movsb
shlb
icebp
shlb
push
sub
xchg
pop
sub
loopne
push
push
add
ret
or
loop
dec
fnstenv
fstpt
jb
bound
jecxz
jecxz
jecxz
ret
mov
or
aad
mov
and
call
xlat
bound
or
ret
cmp
and
or
mov
ret
rclb
orb
add
add
sub
adc
jl
pop
add
pushf
push
mov
mov
scas
dec
icebp
mov
inc
xchg
xchg
ret
pushf
inc
test
inc
pop
inc
push
inc
movsl
cmpsb
and
das
in
packsswb
ds
mov
orl
test
cmovp
pop
pop
xchg
ja
je
je
add
fldcw
and
aaa
push
int3
lret
mov
repz
xchg
pusha
aas
aam
pop
dec
clc
or
cmp
adc
add
xchg
inc
std
mov
xor
je
add
sbb
cs
xcrypt-ecb
cmpsl
mov
jle
mov
clc
add
ljmp
xchg
aaa
rolb
dec
ss
cmp
push
sub
mov
sub
jp
xchg
das
dec
sahf
lods
jecxz
in
pop
cmc
shll
lock
pop
leave
push
rorl
icebp
or
test
mov
jae
popf
cli
add
mov
clc
popa
rcr
adc
dec
sub
fisttps
fmuls
jo
insb
cmp
fistpll
xchg
out
cmc
sarb
aaa
hlt
push
enter
clc
adc
lahf
jbe
stos
lea
addb
or
popa
repnz
mov
stos
iret
cld
divb
add
or
cmp
aas
xor
push
sbb
mov
cmp
xor
mov
jno
fdivrl
xchg
aam
fmuls
sbb
adc
and
cmc
jbe
inc
cld
push
ret
cmp
push
cmc
jecxz
aas
lods
mov
int3
hlt
sbb
push
or
inc
jae
fidivrl
lea
fwait
jmp
xchg
outsb
lret
jb
mov
mov
sbb
xchg
jp
ret
mov
xlat
mov
repz
mov
cvtps2pd
xor
sbb
ss
dec
ret
adc
pop
push
push
pop
fisttpll
push
movsb
scas
sti
jmp
loop
mov
push
mov
cli
push
push
xor
mov
mov
shll
or
cmpsl
xchg
shrl
add
lahf
mov
jo
daa
test
push
jo
adc
or
add
mov
jbe
jle
xor
mov
or
push
mov
inc
sbb
lahf
sarl
sub
test
and
out
leave
movsb
jle
movsl
xor
loopne
adc
sbbb
xor
cmp
jo
in
push
jno
int3
push
or
imul
fldcw
hlt
jb
add
insb
ds
aas
iret
les
dec
mov
dec
xchg
repz
lea
addr16
out
call
rorl
lea
xchg
jb
jb
nop
xchg
xlat
sti
aad
mov
btc
mov
loop
icebp
fstps
push
lret
ret
lea
cmp
rcr
add
mov
add
aam
mov
js
inc
pusha
or
sub
nop
mov
rolb
mov
cli
push
pop
sbb
mov
cmp
aas
aaa
shlb
mov
xor
cld
adc
sub
xlat
roll
jl
inc
cmp
aaa
sbb
sub
jns
push
or
mov
add
or
mov
push
loope
and
ds
dec
mov
iret
xor
loop
mov
insl
mov
jge
xchg
mov
sub
jne
xchg
mov
jge
ss
cltd
jo
sbb
sti
xlat
adcb
dec
ja
mov
js
fscale
mov
repz
xchg
push
push
adc
bound
mov
fs
in
aaa
inc
push
mov
jne
inc
ret
jbe
in
inc
add
out
push
in
inc
clc
scas
mov
pop
fildl
cmp
inc
aas
fnstsw
rcr
jecxz
jecxz
jecxz
ret
repnz
in
rolb
fisttpl
and
cmp
lock
aad
jne
dec
sbb
push
shl
dec
jmp
mov
jp
dec
not
add
icebp
inc
cmp
dec
cltd
push
xchg
arpl
into
cmp
jne
imul
xchg
fdivl
push
or
dec
xor
xor
mov
dec
andl
sub
pop
test
test
mov
inc
dec
iret
sub
xor
add
cs
inc
sarl
aam
scas
mov
ret
jne
ret
or
inc
enter
mov
mov
or
and
popa
jg
cld
mov
push
mov
mov
or
cmc
mov
or
add
pop
xchg
inc
jo
sbb
dec
xchg
sub
mov
add
das
scas
adc
dec
xor
into
xchg
add
pop
inc
sti
hlt
sbb
pop
sub
mov
cmp
cmpsb
cmp
mov
andl
push
or
sub
jg
add
mov
jo
dec
addb
xor
xchg
xchg
je
add
jecxz
js
aam
fsubs
repz
and
loope
loope
imul
enter
jecxz
bound
ss
pushf
decl
out
xor
jle
bound
jle
mov
jle
sbb
dec
pop
idivb
test
loope
mov
les
push
jl
mov
jg
and
aaa
je
or
aaa
push
lds
jno
jge
dec
cmp
pop
xlat
pop
xchg
fimuls
add
rcr
rclb
adc
fbld
stos
rol
rorb
xor
pop
push
push
mov
cmpsl
cmpb
inc
push
imull
xchg
push
jae
mov
dec
jnp
mov
xlat
add
pop
cwtl
inc
test
in
cld
pop
je
out
mov
or
in
mov
mov
xchg
and
mov
push
mov
je
adc
shlb
mov
push
insb
adc
into
mov
imul
jp
xor
je
subb
mov
jecxz
xor
pop
jl
test
jmp
les
jns
mov
lock
mov
push
xchg
inc
jo
cmp
fisttpll
jle
lret
ud2
xor
mov
dec
xchg
cmpsb
push
jg
xor
or
cmp
stc
adc
dec
lahf
push
daa
mov
xchg
jbe
lock
stos
sub
xchg
cmc
jle
roll
cltd
daa
lea
scas
mov
aaa
xchg
cwtl
sub
fdivl
adc
aas
jnp
mov
push
jle
rorl
inc
insb
addr16
dec
icebp
inc
cmc
out
loop
push
pusha
pop
xor
sbb
or
pop
sbb
bound
dec
outsb
stos
outsb
dec
dec
lcall
out
xor
call
xchg
push
or
lcall
jnp
jbe
stos
mov
pop
pop
xlat
loope
movsb
mov
and
jnp
xchg
mov
movsl
inc
sub
rclb
xor
dec
cmp
test
dec
adc
jb
aas
or
les
test
idivl
ja
ja
aam
loopne
test
ficoml
jnp
stc
add
jge
xor
lea
cmp
inc
push
xchg
mov
jb
popa
inc
les
call
mov
xlat
mov
inc
fwait
pop
mov
pop
mov
or
dec
dec
mov
daa
sub
and
divb
test
or
jne
mul
fnstcw
inc
lods
orl
aad
mov
in
fsubr
pop
lods
sti
sub
fcmovnu
mov
xor
dec
jne
jnp
mov
push
inc
std
loop
adcb
jno
mov
mov
mov
inc
scas
dec
roll
sub
jg
mov
push
xor
popa
sti
rorb
je
or
nop
push
mov
mov
rorl
addb
mov
cmp
out
add
dec
inc
jle
sti
mov
mov
dec
into
aaa
rorl
jne
pop
xor
mov
xchg
and
std
or
xchg
mov
cwtl
aam
cwtl
mov
pushl
jl
push
mov
dec
imul
js
sbb
aas
mov
imul
rcl
dec
cmp
add
sbb
sbbb
dec
rorl
inc
popl
mov
bound
lahf
jbe
mov
leave
xchg
mov
or
lds
cmc
push
inc
add
pop
cmpsb
jo
arpl
mov
cli
mov
notl
jl
cmp
lret
int
repz
sub
sbb
aad
loopne
dec
jl
push
mov
cmpsb
mov
add
cmp
sub
xchg
call
dec
pop
aam
and
clc
jbe
xor
cmp
ja
mov
aad
inc
test
fisttpl
adc
mov
inc
or
mov
in
sub
push
mov
ja
push
mov
loopne
xchg
leave
inc
add
xor
js
repz
or
js
add
and
push
ds
pop
clc
test
push
aam
cmp
cli
jge
add
ds
stc
jae
cwtl
push
rcrb
mov
ror
iret
dec
push
mov
stos
jo
into
test
in
inc
scas
lcall
out
ja
or
jns
popl
inc
inc
repnz
ficomps
mov
sub
sub
mov
mov
add
cmpsl
inc
inc
scas
cs
push
icebp
cwtl
sbb
sbbb
push
mov
adc
push
jo
lcall
ret
sbb
jg
xchg
or
hlt
xor
jl
or
pop
rorb
mov
xchg
cmc
rcll
xchg
test
enter
push
mov
push
ss
add
dec
dec
rorb
xor
push
aad
cltd
jge
je
or
mov
push
fildll
and
jae
lods
and
repz
mov
fwait
cmpsl
sbb
outsl
aaa
inc
cmp
mov
dec
test
xor
sub
je
or
icebp
nop
pop
xchg
xor
cmp
loope
inc
mov
inc
sub
dec
push
pop
mov
setl
adc
sarb
jmp
pop
push
xor
jnp
pop
inc
xor
into
lea
aam
sbb
mov
mov
mov
test
out
inc
fildl
inc
iret
aaa
mov
shlb
push
or
adc
pop
pop
mov
mov
jg
sbb
pushf
sbb
ret
stc
call
shl
xchg
je
or
mov
iret
das
sub
outsl
or
dec
lret
dec
rcl
ss
inc
xor
mov
aaa
loop
jmp
repz
jne
ss
or
inc
or
jo
sub
mov
sub
leave
out
imul
jbe
cltd
sub
or
dec
pop
dec
push
jne
ret
clc
push
fnstenv
sbb
push
mov
mov
stc
adc
cmc
adc
push
jl
sbb
lea
idiv
mov
xor
add
or
movsl
add
adc
loop
aaa
inc
pop
lret
and
jnp
shll
lahf
and
test
push
and
adc
pop
push
js
mov
pusha
ss
movl
fdivs
jns
push
mov
inc
or
punpckhdq
add
cmpsb
in
xchg
mov
push
dec
jle
and
ret
or
xchg
cmp
dec
push
js
mov
loop
sti
rclb
add
jo
sub
push
decb
dec
add
add
fs
or
jle
popl
cmp
xchg
push
ja
xchg
jg
repnz
repnz
mov
push
push
xchg
rorb
aaa
ffree
dec
xor
mov
xchg
mov
mov
sti
inc
rcrb
inc
xor
test
xchg
dec
sbb
dec
das
lret
das
push
mov
jns
cmpsb
pop
lret
dec
jecxz
inc
mov
and
inc
movsb
in
stc
dec
insl
mov
outsb
jp
pushf
dec
sbb
mov
sbb
cmp
nop
into
add
sbb
into
mov
test
push
jae
adc
clc
cld
icebp
mov
aad
xor
in
cli
dec
das
dec
das
int3
das
sqrtps
sarl
je
jle
and
push
imul
mov
jo
out
mov
lea
mov
sbb
fldt
shll
adc
or
sub
cmp
test
aaa
mov
scas
sar
xor
jg
or
lods
xlat
in
mov
jmp
mov
mov
lock
fnstenv
mov
jnp
scas
rorb
fisttps
fucompp
lea
or
adc
das
jno
out
or
movsl
xchg
xor
cmp
dec
inc
push
add
mov
xchg
jg
stc
test
cmp
pushf
mov
sbb
sub
xlat
xor
cli
sub
xor
div
or
mov
lods
cmp
outsb
js
jp
jmp
in
aad
cmp
jnp
xor
lods
ja
xchg
xchg
das
aas
imul
or
into
inc
inc
jo
ror
cwtl
sti
add
mov
aaa
lret
les
or
xlat
mov
cld
adc
add
xlat
mov
repnz
jp
jl
fnstcw
minps
xlat
fnsave
js
add
hlt
mov
and
pop
das
test
sbb
lock
inc
add
dec
add
jns
mov
add
mov
ret
in
ret
xor
pand
mov
cmp
mov
ja
xchg
cmp
jnp
fisubl
mov
and
or
fisttpl
shlb
mov
mov
and
mov
mov
dec
mov
mov
std
cmpsb
push
sbb
pop
data16
test
pop
xchg
push
mov
sahf
mov
xchg
jno
cli
sbb
jl
lea
mov
cmpsl
push
xor
push
lods
orb
stc
inc
sub
dec
inc
lea
dec
mov
aaa
mov
mov
and
stos
divb
push
sub
scas
mov
stc
add
jmp
xchg
shll
jno
repnz
mov
in
cmc
add
sub
mov
xchg
pop
nop
int
flds
sbb
mov
add
pop
movsl
inc
ds
or
or
or
mul
fwait
and
sti
jle
lea
add
pop
ss
mov
or
test
push
testb
mov
inc
aad
insb
or
mov
lcall
inc
cmp
test
mov
leave
aam
cmp
sbb
sbb
jne
cmp
dec
add
push
cmp
or
loopne
andb
mov
lldt
repz
inc
nop
mov
inc
sar
inc
adc
add
mov
mov
mov
mov
movl
adc
push
sbb
cs
aaa
push
or
ret
mov
cmp
test
div
push
sti
and
sub
sti
mov
aam
cmp
sub
std
sub
repz
mov
and
lea
cmp
sbb
aaa
mov
add
mov
aaa
push
js
sub
inc
mov
fs
adc
lahf
pop
inc
das
push
in
daa
add
int3
mov
cmp
test
mov
mov
stc
or
cmp
push
mov
mov
sahf
inc
xor
xchg
push
stos
inc
mov
je
out
lods
mov
mov
mov
scas
aad
mov
or
add
repnz
lret
ss
mov
pop
shll
push
clc
and
jle
ds
pop
cs
inc
xchg
iret
mov
out
xor
into
jne
inc
adc
push
mov
mov
sub
xchg
in
mov
push
or
adc
lds
xor
push
cmp
and
adc
jae
xor
mov
or
out
mov
dec
test
jnp
mov
push
mov
shl
ret
and
push
mov
test
pusha
dec
dec
lahf
inc
test
xor
inc
mov
outsl
push
dec
mov
stos
pop
inc
sbb
fnstenv
or
xor
add
inc
pop
lea
jno
fmull
mov
mov
pushf
add
push
add
mov
mov
mov
adc
jae
fwait
and
xor
shll
roll
inc
int
cmpsl
or
xor
lret
scas
js
jae
push
mov
aam
mov
jo
push
cltd
xlat
cmp
mov
add
add
lock
push
clc
inc
inc
adc
xchg
lahf
inc
sub
jnp
jo
test
push
aas
adc
lcall
push
inc
mov
mov
mov
push
dec
or
js
add
outsl
std
rorl
loopne
ja
xchg
mov
mov
push
in
inc
jbe
addr16
mov
lcall
inc
jae
decb
cmp
sub
dec
sub
mov
dec
lock
hlt
mov
cltd
cld
cmp
adc
test
sti
jb
clc
mov
push
cmp
dec
cmp
jbe
das
dec
lds
inc
pop
jae
xor
xor
dec
clc
lcall
mov
aaa
xchg
jecxz
inc
fnstcw
mov
cli
jno
cmp
aaa
mov
std
or
mov
mov
gs
jns
pushl
cmp
mov
jmp
mov
ja
bound
add
cmpb
jge
fists
xchg
add
jnp
or
cmpl
inc
testb
shlb
mov
jnp
jge
mov
jg
aad
lret
aaa
js
dec
add
jns
int
jge
dec
iret
dec
or
mov
push
or
inc
jne
mov
jge
pop
sbbl
sub
add
xchg
std
adc
or
aad
xorb
or
add
or
mov
or
sub
std
push
xor
adc
sar
push
fimull
mov
cmp
mov
mov
mov
xchg
adc
movsl
mov
and
mov
ret
les
push
add
mov
push
dec
leave
xchg
in
testb
mov
xchg
and
jne
stc
xchg
mov
in
xorb
mov
out
mov
or
jle
push
push
js
std
enter
mov
sbb
xchg
push
inc
outsl
inc
fwait
mov
divb
lea
xchg
nop
mov
dec
std
stc
add
push
push
rcrb
pop
push
mov
sbb
xlat
sub
mov
xor
pop
jno
mov
sbb
scas
or
jbe
push
mov
fucomi
mov
jmp
call
xorb
test
aam
or
lea
lods
xchg
repnz
mov
in
mov
je
bound
mov
lea
filds
out
sub
scas
pushf
dec
iret
jnp
out
mov
ja
pop
hlt
mov
cld
dec
push
into
sub
or
xlat
mov
cltd
lret
lret
std
aam
adc
push
or
and
inc
push
push
push
xchg
push
dec
into
inc
jne
jae
mov
daa
inc
mov
jmp
inc
mov
mov
lods
push
fdivs
and
into
lret
push
ds
mov
adc
lds
mov
mov
mov
das
cmpsl
sbb
adc
jg
lea
inc
mov
push
std
daa
sub
jmp
addl
xor
add
and
sahf
sub
aad
mov
lret
inc
jo
push
cmp
mov
mov
in
out
inc
sbb
fsubrl
je
or
addb
gs
stc
sbb
mov
nop
adc
mov
ret
inc
aas
cmpb
dec
or
add
rol
add
mov
das
sqrtps
ret
inc
fisubs
je
sub
adc
repnz
xchg
mov
sarl
lahf
jecxz
pop
hlt
or
sbb
in
jg
push
fwait
ss
xchg
inc
adc
and
fwait
and
cs
mov
sub
mov
loop
mov
ret
sarl
jl
test
rorl
bound
mov
mov
imul
int
sbb
sub
test
lret
inc
push
push
dec
dec
fisttpl
dec
sbb
jp
and
loop
sti
push
mov
mov
or
icebp
mov
jge
jecxz
mov
ja
push
adc
lret
jns
jle
pop
xorl
cli
lret
jg
sbb
cmp
imul
add
pop
mov
dec
icebp
stc
or
mov
dec
inc
jp
fbld
int
xor
xor
push
outsl
push
dec
cmc
inc
ljmp
push
dec
sbb
inc
push
inc
or
shr
pop
imul
hlt
outsl
repnz
fwait
rorb
or
jge
out
mov
mov
push
sbb
mov
mov
inc
mov
jb
leave
rcl
lret
inc
xor
dec
cmp
jne
stc
test
jns
mov
stc
mov
rcll
jns
mov
or
add
pop
stos
test
push
pop
adc
mov
into
mov
popa
jnp
xlat
loop
movsl
cli
jecxz
adcl
ja
cli
les
jle
fistl
enter
inc
xchg
fimull
jecxz
jecxz
inc
loope
pop
jo
dec
jo
or
mov
sub
adc
inc
push
pop
mov
adc
fldcw
setae
ljmp
xlat
dec
mov
or
shl
sub
push
dec
sub
out
sub
pop
adc
cmp
inc
xor
sub
imul
sub
mov
cmp
jecxz
je
jae
mov
mov
push
stc
push
pushf
in
pushf
addl
cld
jnp
cmp
or
enter
dec
add
clc
xchg
jae
shll
xor
mov
mov
sub
pop
push
jp
iret
inc
jo
jbe
bswap
aad
or
repz
jp
rolb
dec
mov
std
jp
int3
insl
xchg
scas
inc
xor
mov
out
jle
xor
fildl
add
ljmp
xor
inc
jl
imul
mov
mov
and
push
mov
aas
push
xlat
xchg
rolb
pushf
roll
cmp
orb
pop
popf
jnp
rol
inc
adc
cwtl
pop
xchg
pop
hlt
test
or
aad
sub
sub
sbb
xchg
stos
ror
or
xor
mov
sbb
inc
aam
sub
xchg
rcr
scas
mov
xor
pop
push
push
mov
jle
jno
xor
js
sub
sub
mov
iret
mov
inc
bound
push
cmpl
fldenv
ja
push
jle
fwait
mov
movsl
dec
mov
mov
stc
outsb
lods
das
mov
aaa
cld
xchg
mov
mov
mov
sarl
data16
sub
ss
aaa
notl
aam
jo
cmpsb
stos
inc
pusha
xor
inc
xor
mov
push
push
pop
scas
bswap
ds
jle
sbb
or
sub
in
dec
ret
pop
scas
sub
sbb
dec
xor
sub
push
mov
xlat
rcrl
cs
cmc
les
add
and
jecxz
scas
add
add
frstor
jge
mov
jns
jae
cmc
rol
mov
idivl
dec
and
or
mov
stc
jge
ss
sub
into
lret
ja
inc
mov
mov
cmpsb
pop
inc
aad
or
notl
fcoml
repz
add
mov
inc
jae
in
or
jae
xor
ss
repz
mov
jecxz
adc
xlat
xlat
data16
in
jns
xchg
scas
dec
push
out
sub
xchg
test
icebp
push
dec
mov
inc
or
add
cmpsl
xor
adc
mov
sarb
push
loop
leave
pop
add
add
int3
loop
jle
in
dec
mov
xchg
jne
int3
ret
imul
inc
mov
jp
cmp
out
enter
xor
mov
or
fs
shll
fwait
push
mov
inc
pop
inc
mov
mov
push
aaa
adc
pusha
cs
jbe
scas
mov
inc
js
add
js
cmp
or
orl
cwtl
jg
mov
sbb
es
out
test
idiv
xorb
push
or
add
push
jecxz
mov
les
sub
je
mov
aad
add
mov
add
int
add
call
mov
loop
dec
ret
sub
stc
cmp
cli
xor
lock
push
jle
xchg
pop
in
xor
and
lahf
pop
lret
out
mov
xor
push
mov
mov
mov
push
dec
nop
mov
jp
jge
lds
leave
popf
cmpsb
sbb
xchg
adc
lock
add
dec
ret
les
push
pop
add
inc
js
push
xor
mov
mov
jae
adc
ret
rcl
sbb
cmp
inc
ret
inc
dec
mov
sub
cmp
int
push
mov
or
ja
mov
xchg
movsb
stc
xchg
or
fimuls
jg
push
sti
bswap
xchg
add
add
ficoms
js
dec
xor
or
mov
test
xor
leave
je
push
add
mov
lock
loop
pusha
dec
inc
outsb
inc
outsb
dec
dec
out
or
mov
or
add
les
nop
sub
push
jge
xchg
inc
aam
cs
mov
dec
icebp
in
iret
rsqrtps
loopne
xlat
loopne
test
movl
jle
mov
pop
flds
mov
jmp
mov
int
push
aaa
add
mov
out
clc
fwait
adc
push
sbb
pop
sub
icebp
xlat
scas
ja
xchg
jne
dec
jle
adc
iret
adc
dec
lds
adc
sub
aaa
add
push
pop
inc
mov
mov
aaa
fstl
aam
js
mov
stc
iret
pop
call
std
sub
or
dec
jae
push
cli
add
push
negb
mov
xlat
sbb
push
sbb
inc
ret
or
aas
xchg
lds
dec
jg
aam
inc
aas
xorb
cmp
std
mov
add
xor
dec
cmp
aas
add
jb
mov
or
daa
inc
je
imul
xchg
mov
push
std
mov
push
out
test
mov
je
pop
xchg
popf
jecxz
filds
and
xchg
fs
inc
xchg
inc
gs
mov
sub
leave
testb
mov
loop
dec
lds
into
std
stc
push
jno
adc
push
iret
ds
jecxz
push
sbb
add
repz
lret
sub
adc
push
jl
loopne
movsl
js
cmc
xchg
divb
xchg
notb
mov
inc
add
ja
imul
xchg
mov
inc
fsqrt
aas
jg
mov
sarb
and
shll
int3
stos
adc
mov
push
sub
jle
fcomps
xchg
inc
lahf
je
insb
test
mov
mov
mov
js
pop
xchg
add
cmpsl
push
mov
in
inc
enter
xchg
inc
ret
lock
movq
pop
and
test
les
mov
mov
adc
sub
sub
add
les
out
pop
push
sub
xchg
push
sti
jle
mov
ret
test
cmp
jo
mov
jae
es
jecxz
xor
jnp
mov
cmp
xor
int3
or
mov
jne
shlb
add
or
rclb
cmc
addr16
add
mov
test
enter
out
dec
pusha
xor
cwtl
ret
xchg
jns
push
bound
decb
push
push
inc
pop
mov
loopne
cvttps2pi
adc
xchg
push
jb
inc
xor
cld
pop
and
and
xor
mov
iret
hlt
scas
loopne
mov
call
ret
lods
in
lock
adc
mov
cmc
js
out
mul
loope
jmp
ret
mov
jns
fistl
add
push
adc
xor
pop
xchg
and
lret
push
ja
mov
xchg
mov
je
je
xor
lea
add
jp
inc
mov
dec
call
je
jbe
iret
mov
in
mov
clc
adc
mov
mov
add
adc
mov
dec
dec
mov
in
push
jg
pop
dec
or
clc
and
lret
mov
lret
jae
push
xchg
bound
sbb
stos
sbb
das
rcrl
mov
aad
dec
aam
stc
add
xlat
insb
xchg
push
cmpb
int
or
jecxz
bound
jecxz
jb
ss
cmp
iret
aam
loopne
clc
fdivrs
inc
pop
std
xor
dec
xchg
lods
inc
loope
mov
cmp
mov
jbe
loope
dec
adc
push
inc
xor
xor
lret
mov
aad
hlt
mov
mov
ret
addr16
dec
mov
pop
stc
hlt
clc
js
repz
cli
add
or
jbe
stc
aas
mov
xor
mov
push
xchg
jns
fucomp
push
or
dec
outsl
mov
sbb
push
sbb
lds
pop
xchg
aaa
aaa
fcoms
ja
aad
sbb
xor
ja
push
push
rorl
mov
cmp
rorl
cmovbe
pop
loopne
movsb
cmp
push
jo
cmp
out
sub
das
lret
cmp
jnp
testb
ss
push
lret
or
inc
or
stc
jge
inc
sub
idivl
aaa
cmp
adc
sbb
sbb
or
xor
nop
in
xorl
fistps
cmp
mov
push
jg
jae
ret
stc
mov
popa
loope
mov
mov
pop
sub
mov
aas
inc
add
unpckhps
lock
push
push
stc
jecxz
setnp
mov
aad
mov
nop
pop
fisttps
sbb
decb
sarl
fsts
push
sbb
nop
push
jbe
push
mov
jno
lahf
push
mov
inc
int3
fsts
pop
push
aas
push
aam
in
mov
or
rorb
mov
mov
es
js
push
mov
sub
cmp
mov
addb
mov
mov
inc
push
sbb
jae
xchg
cli
and
mov
inc
int3
jp
nop
adc
push
pcmpeqw
push
mov
jecxz
xor
je
or
data16
repz
inc
dec
sbb
xchg
scas
adc
cmp
xor
xchg
push
cmpb
bound
fwait
adc
dec
push
add
lea
fisttps
pop
out
orb
imul
in
ljmp
ds
jae
loope
dec
add
xor
push
mov
ret
mov
movsl
out
xchg
maskmovq
pop
push
push
push
xchg
xor
push
xor
out
adc
lea
mov
xor
push
lcall
push
hlt
out
psrlq
bound
inc
jo
xchg
sbb
xlat
jne
aam
cs
jg
add
or
push
loop
jno
jl
hlt
cmpsl
loopne
daa
js
or
int
jbe
adc
jmp
lods
jnp
pop
ficoml
cmpsb
sub
outsb
pop
adc
xor
push
mov
ret
mov
repz
sub
das
inc
jge
xchg
ret
mov
aaa
or
cli
idivl
sub
mov
dec
mov
xor
je
or
jg
mov
je
lods
mov
shll
xor
add
inc
or
aas
iret
jle
lods
std
mov
cmp
or
je
stos
fistpll
inc
test
cmp
jle
xchg
sub
iret
cmp
in
lret
add
adc
insb
loopne
jo
mov
xor
jb
and
xchg
ja
inc
inc
push
mov
or
iret
mov
mov
lds
sub
mov
mov
xor
inc
pop
sub
mov
aad
js
fldenv
dec
popa
bound
in
mov
xchg
dec
sub
xchg
dec
jo
push
in
stc
je
stc
dec
cmp
pushf
inc
add
jg
mov
fcmovnb
push
clc
sub
enter
jl
loop
mov
in
jb
je
flds
jo
jle
inc
loopne
sub
pusha
inc
inc
dec
xchg
js
cmp
dec
mov
mov
aam
cs
xor
xchg
iret
dec
in
dec
scas
filds
cmp
sbb
xor
jae
das
and
test
mov
cmpsl
inc
jb
pcmpeqw
in
push
adcb
jle
mov
repnz
inc
dec
adc
ds
popa
je
cmpsb
sbb
out
mov
ds
jle
mov
mov
push
cmp
pop
adc
arpl
mov
mov
lret
add
lea
pusha
xor
sub
das
mov
repz
movsb
mov
push
data16
enter
dec
dec
sub
mov
cmp
cmp
mov
push
xlat
mov
push
sub
pop
jge
mov
jbe
std
add
push
loop
js
je
dec
mov
lcall
nop
push
lea
scas
adc
movsl
add
clc
mov
push
or
cli
or
sub
jl
sarb
dec
xorl
movl
mov
mov
sub
mov
add
jmp
subb
jns
flds
fiaddl
stos
sub
push
jo
mov
mov
xor
sub
xlat
xchg
mov
mov
sbbl
cmpsl
dec
aam
sbb
mov
mov
aam
cmp
mov
and
mov
jb
loop
mov
jg
jecxz
loop
dec
enter
cmpl
sub
cld
ja
jp
idivb
pop
sub
jne
and
fbld
fldl
mov
xor
test
hlt
push
cwtl
mov
mov
pop
add
dec
iret
jns
and
jle
inc
orb
test
jbe
mov
dec
xor
jb
js
fnstenv
lock
inc
mov
jg
lds
jg
aas
cmpb
je
xchg
xorps
mov
jo
jno
cmc
jae
push
jne
sub
dec
xchg
dec
jle
jle
mov
orl
xchg
mov
mov
nop
or
push
hlt
jb
rorb
inc
js
jl,pn
jnp
mov
addr16
mov
out
mov
xchg
loopne
or
fisubs
dec
lgs
mov
mov
test
push
cld
mov
loop
dec
mov
jle
mov
mov
cmp
mov
jmp
mov
or
outsb
stc
mov
in
inc
dec
scas
fdivl
out
or
in
cmp
int
divl
je
push
push
adc
addb
int
int3
cmp
cmp
dec
aaa
xlat
pop
push
cmp
inc
loop
stc
jb
icebp
mov
pop
test
cmpsb
mov
bound
pop
jecxz
rcll
xlat
pop
sti
and
repz
aaa
dec
or
adc
xchg
or
adc
adc
loopne
or
xlat
inc
mov
or
ds
testb
or
sbb
ljmp
pop
addl
sub
aad
idivl
inc
xor
inc
std
ret
cmp
inc
dec
xchg
pop
jns
aaa
push
xstore-rng
cmpsl
xorl
inc
dec
push
cmp
cmc
cmp
stos
sub
push
sbb
and
jbe
mov
push
mov
cmp
icebp
cwtl
cmpsb
or
dec
push
mov
xor
sti
cmp
adc
sbb
or
lret
jnp
adc
push
ss
nop
xchg
mov
es
cmp
popa
iret
jo
xor
inc
repz
sahf
cmpb
mov
or
dec
xchg
mov
inc
xor
mov
and
xchg
mov
mov
push
mov
pop
push
dec
jne
dec
ret
mov
xor
push
int
je
dec
dec
add
xchg
dec
push
shll
imul
mov
btrl
add
jo
sbb
std
stos
into
ja
xchg
mov
cli
xchg
test
mov
sub
sub
aaa
hlt
dec
pop
jne
dec
jle
rcr
dec
or
mulb
xorb
iret
loop
add
mov
leave
or
test
fmull
jbe
push
or
divl
inc
lahf
popa
ret
rorb
mov
inc
pop
mov
ss
aaa
push
iret
mov
ret
dec
mov
daa
rcrb
js,pn
scas
js
or
divb
mov
mov
mov
imul
jbe
mov
addb
jb
mov
mov
aaa
mov
mov
clc
int
mov
add
stc
aam
lock
or
inc
push
xchg
out
adc
aad
sbb
or
jbe
lret
mov
and
sub
mov
or
mov
jns
inc
xchg
orb
mov
push
ds
mov
cmp
push
rolb
cmp
rclb
mov
lret
int
lahf
daa
adc
stc
std
inc
negb
push
jns
jns
ja
cmpsl
sub
aaa
push
addb
dec
sti
loopne
mov
add
or
addr16
ss
push
pop
mov
mov
add
and
loop
push
or
movsb
push
shll
pop
mov
loopne
stc
xchg
loop
stc
add
test
or
inc
lock
mov
pop
addb
inc
push
or
sub
mov
mov
movb
mov
jle
mov
orl
aad
sbb
mov
jns
out
into
adc
push
cmp
add
test
mov
or
cli
ret
jae
into
push
mov
xorl
lret
bound
ds
or
lcall
xchg
mov
mov
sub
fcmovbe
xchg
sub
jle
aam
cwtl
test
or
mov
test
inc
dec
lea
dec
sahf
pop
mov
jmp
jbe
and
dec
mov
mov
xlat
ljmp
mov
sbb
inc
jge
dec
jle
mov
sbb
shll
xchg
daa
loopne
in
and
loop
repnz
sahf
adc
shlb
dec
jge
jne
jl
push
push
les
nop
pop
notl
pop
xchg
push
adc
xor
xchg
addb
xchg
das
cmc
dec
std
std
jle
rclb
push
mov
mov
push
sub
pusha
or
inc
add
test
inc
jmp
mov
or
sub
addb
stc
aaa
mov
cmp
sbb
add
sbb
pop
xor
subl
hlt
int
lds
aam
jle
xchg
push
xchg
add
dec
jo
mov
xchg
pop
sbb
pop
ret
lea
push
popa
mov
loop
mov
jmp
and
mov
xor
shl
int
mov
jecxz
add
pushf
shr
adc
test
out
testl
pop
sbb
ds
imul
push
out
lods
mov
fsubrl
inc
sub
sub
icebp
jae
mov
cmc
mov
mov
and
scas
imul
rorb
mov
push
decl
xchg
rclb
and
add
push
btr
and
push
add
cmc
mov
shld
pusha
mov
sbb
add
adc
shl
mov
shr
xor
lea
pushf
call
test
loopne
test
dec
mov
pop
imul
fstpt
push
mov
jl
neg
mov
adc
data16
and
jecxz
mov
cmc
or
pop
dec
mov
sbb
or
iret
adc
cmp
mov
cmp
popa
fldl
iret
shrb
outsb
push
loope
insl
adc
inc
or
cmp
mov
pop
fcompl
aas
lea
or
mov
out
dec
jns
scas
enter
pop
nop
mov
pop
push
dec
jno
in
and
jb
and
inc
push
aas
dec
lcall
hlt
cmp
add
jo
ss
dec
fdivrs
and
cld
mov
inc
rcrl
addb
mov
jo
rcll
bound
push
xlat
xchg
jo
xchg
movsl
and
cmp
imul
inc
ret
in
mov
mov
dec
xchg
sbb
jae
sub
pop
dec
and
cs
movb
jbe
add
mov
mov
xor
xchg
outsb
mov
xchg
loopne
mov
rorb
lds
push
adc
sti
ja
inc
push
mov
mov
imul
jo
sbb
or
pusha
stos
dec
sti
add
push
xor
shll
lods
dec
aad
jns
cmc
dec
jg
xor
in
cmc
dec
cld
inc
jecxz
jg
sub
fstl
shrb
sub
pushf
pusha
push
mov
pushf
pushf
mov
pushf
mov
movb
push
pushl
ret
push
lock
std
std
addb
fs
mov
ret
js
push
push
iret
rcrb
bound
adc
loope
xor
xor
sbb
jge
jmp
inc
loope
aaa
aam
pop
iret
add
ljmp
pop
test
icebp
mov
stc
pop
in
push
mov
in
xchg
push
push
movsl
xchg
gs
mov
je
ljmp
inc
cmp
mov
lea
ja
rol
sub
or
add
xor
sub
mov
shr
mov
dec
sar
mov
cmc
bt
call
jb
pop
cmp
dec
enter
pop
mov
adc
cmpsb
xor
mov
push
xorb
jl
pusha
cmp
xchg
int3
or
out
insl
lods
adc
jge
sub
testl
out
add
fistl
add
mov
push
test
scas
loopne
cmp
mov
stos
and
xchg
adc
lret
add
push
mov
sub
data16
jo,pt
incl
push
repz
or
push
into
sub
ja
enter
and
shlb
and
dec
mov
hlt
lea
aas
add
mov
enter
fimuls
fstp
test
sar
push
test
arpl
mov
mov
rolb
xchg
cmp
imul
loopne
inc
mov
lock
cmp
sub
pop
ret
push
push
pusha
pushf
lea
jae
call
mov
not
subb
movsbl
push
mov
push
stc
stos
fwait
popa
rorl
int
jmp
push
movsl
lret
inc
icebp
xor
popf
xchg
daa
mov
pop
mov
add
stos
inc
fdivrp
fwait
mov
imul
std
mov
icebp
cld
mov
sub
cmp
mov
bound
aad
sub
xor
popf
mov
push
ret
fbld
xchg
push
push
pop
ret
dec
test
inc
jo
bnd
aam
into
out
and
jg
adc
sub
cmp
xor
mov
xor
jg
xor
stos
hlt
in
pop
adc
pop
in
les
les
xlat
push
sbb
adc
pop
out
jp
sbb
repnz
adc
fisttpll
and
scas
ljmp
shl
in
xor
jno
xchg
jecxz
stos
pop
inc
std
sub
pop
rorb
lds
repz
or
xor
add
ljmp
inc
xchg
clc
mov
cld
mov
mov
mov
mov
fildl
lds
popf
fisttpll
iret
sahf
mov
add
jbe
fsubrs
stos
rcrb
jg
test
xor
add
cmp
xor
or
jmp
pop
and
xor
je
outsl
adc
lea
xchg
nop
mov
mov
fs
idivl
loopne
wbinvd
jnp
sub
insl
fcoms
xchg
fsubs
cld
test
sarb
sti
jmp
and
xor
push
cli
jp
adc
push
sub
dec
mov
or
fsts
lret
cmpsl
mov
inc
ds
test
gs
fistl
cs
sub
in
or
mov
popa
popf
inc
dec
insl
mov
or
mov
pop
sbb
jbe
push
inc
dec
xor
int
jae
test
push
subl
push
stc
jecxz
inc
xchg
inc
and
mov
jbe
lret
je
or
fnstenv
mov
scas
arpl
or
ficompl
movb
adc
mov
int
xor
ljmp
testl
pop
mov
and
xchg
push
pop
ret
icebp
sub
lret
pushf
lcall
into
in
and
cmpsb
add
pop
clc
lods
mov
add
cwtl
fisubs
adc
mov
mov
cltd
inc
push
in
push
mov
cs
dec
mov
es
hlt
das
dec
xchg
sub
test
dec
ficoml
enter
push
mov
push
sbb
test
cwtl
roll
and
lahf
xchg
jns
loope
jb
pop
fstpl
cmp
sbb
pop
mov
sbb
loop
xchg
lret
sahf
push
add
in
je
mov
scas
jo
mov
mov
or
mov
push
or
jae
xor
ror
cmp
adc
pop
adc
pop
push
setge
lea
pushf
pushf
pop
cwtl
mov
movb
call
and
adcb
icebp
jo
ret
repz
mov
nop
jne,pn
or
mov
test
pusha
xchg
pavgb
mov
mov
icebp
and
push
sbb
outsb
divb
into
mov
xor
jno
mov
repz
inc
mov
jb
pop
das
xor
inc
and
lret
pop
push
sbb
cmp
out
push
cmpsb
cmp
or
dec
sti
xor
dec
mov
jns
lret
cli
xor
push
ja
call
pusha
push
mov
mov
pushf
lea
jmp
push
jg
dec
shrl
or
rorl
push
xor
div
js
mov
sub
or
lods
adc
xlat
out
lret
mov
or
test
mov
data16
jno
jecxz
fdivl
xor
fucomp
das
test
lret
cltd
in
scas
sbb
xor
jl
and
and
ret
movsb
jns
add
les
push
lret
cmp
nop
movsb
in
sub
add
add
pop
add
add
add
add
subl
add
add
add
in
daa
add
add
add
add
aaa
aas
sub
add
add
add
sbb
add
add
ja
daa
add
in
add
out
add
sbb
addb
add
sbb
cmp
and
sbb
ja
pop
jno
mov
ja
imul
push
xchg
xchg
mov
mov
adc
es
xchg
mov
mov
scas
push
dec
bound
xchg
mov
cmp
or
ljmp
pop
xor
cwtl
int3
jle
imul
pop
mov
scas
imul
xchg
xchg
mov
jae
andl
xlat
xor
ror
pop
xor
int3
fstpt
js
hlt
lret
pusha
cmp
sti
sar
cmpsl
mov
cli
ret
shrl
or
mov
lcall
addr16
call
xor
shlb
fadd
fnstenv
jmp
mov
pop
xlat
les
adc
pop
lahf
jns
xchg
inc
fsubrl
pop
out
xchg
push
and
sub
jae
jae
pop
jnp
ss
movsb
jno
mov
idiv
add
rclb
add
sbb
and
add
cltd
stos
dec
imulb
repz
lret
inc
lahf
mov
xlat
push
pusha
mov
lock
sbb
mov
mov
dec
jns
xchg
cmp
dec
lock
and
xor
movsl
negb
int3
push
jp
mov
aas
aad
add
popf
xchg
sbb
or
mov
sub
push
mov
pop
push
push
pop
sbb
mov
pop
xlat
pop
addr16
out
jae
into
jo
xor
mov
ficomps
push
mov
pop
jne
push
idiv
call
mov
push
loope
out
fdivrs
rcrb
fsubrs
out
iret
sub
pop
mov
fisubrs
sub
and
stc
mov
imul
out
mov
jns
aam
out
popa
ja
loop
out
inc
sbb
aas
pop
testl
pop
imul
mov
lea
fwait
cmp
mov
stos
in
lret
cmp
jecxz
mov
subl
mov
dec
push
lret
push
sbbb
xchg
cld
inc
lea
daa
es
mov
push
cmp
sbbb
pop
xor
jne
in
jg
sub
insl
into
movsb
push
jp
aaa
push
aaa
add
cmp
xor
mov
andb
int
mov
or
stc
leave
divl
jo
add
lret
push
lods
sub
cs
lcall
adc
scas
mov
inc
clc
inc
cmp
es
je,pn
lds
dec
mov
lea
movsl
fidivl
xchg
mov
pop
lret
stos
test
ja,pn
xor
jnp
ss
js
cli
jb
rcrb
cmp
add
fmull
bound
divb
xor
mov
adc
cltd
push
mov
mov
std
jb
jmp
add
mov
push
or
sahf
addl
pop
mov
push
sbb
aas
test
andl
nop
sti
add
xor
adc
addr16
sbb
icebp
testb
lret
rorb
inc
mov
movb
daa
cmp
movsl
and
inc
xchg
xchg
cmc
fdivrl
outsb
pop
cwtl
jo
pop
test
aad
sub
xor
in
adc
loop
loop
push
mov
iret
mov
es
mov
in
cmp
xor
push
sub
enter
shr
pushf
clc
ror
bsr
mov
shl
push
add
lea
pushl
bswap
mov
lea
jmp
fwait
or
or
pop
sub
add
mov
inc
int
ja
fs
inc
cmpsl
cmp
pop
pop
sbb
and
jg
xlat
dec
xlat
rcl
push
bnd
outsl
xchg
add
addl
xor
bound
test
jo
lret
loope
mov
xor
xchg
cli
xor
je
sub
mov
pusha
sub
jnp
sbb
sbb
cmp
call
mov
adc
sub
incb
xor
mov
pop
enter
movl
push
lea
jmp
je
cld
cs
jns
popa
push
sbb
and
push
cmc
adc
cltd
lret
push
jns
roll
repz
sbb
dec
in
dec
sti
and
repnz
arpl
fnsave
loope
mov
call
pop
adc
sub
push
mov
sbb
ret
sub
adc
xchg
pop
xor
xchg
adc
rcrl
jecxz
mov
into
cmp
popa
mov
and
popa
stos
inc
fbstp
xor
cmp
add
mov
scas
xchg
dec
stc
test
xchg
jl
mov
xchg
jo
aad
decb
lret
xor
pop
jne
jbe
inc
aas
and
mov
loop
sbb
jle
mov
loopne
push
pop
or
xchg
in
push
sub
mov
data16
mov
hlt
mov
xchg
sbbl
jae
jmp
ret
nop
cwtl
enter
in
cwtl
xchg
std
std
lret
dec
mov
rcr
sub
in
adc
pop
leave
mov
pop
or
popf
adc
push
arpl
mov
inc
es
inc
hlt
stc
lock
ret
popf
addr16
pop
bound
enter
push
arpl
cmpsl
adc
and
dec
jecxz
jnp
pop
in
xor
jmp
add
loope
jl
push
in
lcall
fldl
ss
scas
addr16
mov
lds
mov
sbb
push
and
cs
popl
adc
inc
ds
sub
and
xor
sbb
popa
sbb
cmp
movsl
jecxz
jns
sbb
enter
mov
sub
sahf
into
repz
in
and
sarl
ret
or
pusha
inc
daa
enter
jae
mov
lock
xor
jb
jae
pop
xchg
in
cltd
cmp
test
popf
mov
lret
add
add
adc
aad
out
std
mov
pop
fs
push
adc
enter
pop
pop
pop
aas
push
mov
mov
cmc
sub
pop
into
push
sub
mov
and
adcb
sub
rclb
shr
xchg
mov
lds
das
lahf
incb
leave
cmp
loope
icebp
dec
push
pushf
jae
xlat
mov
out
mov
imul
mov
and
xchg
in
out
ljmp
xor
repnz
lcall
cmpb
clc
and
jle
lret
aaa
inc
inc
sub
cltd
dec
jno
mov
fmul
test
lock
aas
jno
lcall
iret
les
xor
cmp
add
or
pusha
lea
je
clc
push
or
pushl
pusha
jmp
sub
mov
mov
cmp
movl
pusha
data16
jge
outsl
xchg
pop
cltd
shrl
push
inc
outsb
sbb
dec
push
inc
rorb
popa
pusha
add
push
jbe
stos
jo
xchg
mov
scas
jns
lret
jmp
popf
push
lret
fcomp
sub
dec
in
xor
repnz
cmp
ret
hlt
xchg
lret
push
push
pop
scas
sbb
int3
push
adc
outsb
or
pop
std
and
shl
fwait
pop
inc
inc
sub
mov
mov
mov
test
jne
insb
inc
cwtl
into
lea
sti
sub
dec
mov
pop
js
loope
inc
xor
mov
lahf
push
jmp
cwtl
mov
aad
pop
addr16
xchg
enter
xlat
inc
jno
sub
xor
lods
movsl
mov
jnp
lahf
jge
lahf
sub
insb
scas
mov
shr
lret
mov
cli
push
and
pushf
mov
aad
inc
cli
cmp
fwait
push
push
repz
adc
aad
jo
xchg
pop
pop
int3
andnps
gs
lods
dec
cmp
loope
cli
inc
cltd
mov
rclb
out
adc
out
fs
dec
pop
mov
xchg
push
clc
adc
repz
loop
pop
mov
fisttpll
out
out
push
jbe
and
jecxz
mov
and
adc
pop
int
dec
or
jmp
and
inc
fidivs
cld
fcmovbe
fs
sti
mov
mov
lea
inc
call
shrb
lcall
mov
js
or
arpl
fwait
clc
mov
sub
in
test
inc
int
into
iret
aas
pop
sbb
sarb
pusha
cmp
daa
xlat
jecxz
shr
pop
jbe
sti
daa
dec
xchg
in
insb
outsb
cmp
and
sub
loop
into
out
pop
dec
inc
dec
mov
scas
mov
inc
xchg
je
popa
into
cmp
fidivl
hlt
mov
stos
lock
cmp
or
lock
pop
mov
test
adc
add
jmp
shll
sahf
fists
out
in
mov
mov
add
jge
aas
cs
pop
call
mov
sub
loop
jmp
ret
loope
sbb
cltd
jp
in
mov
push
mov
jp
add
mull
pop
es
add
or
push
repz
pop
test
mov
pop
daa
jle
jns
inc
push
fcmove
int3
mov
adc
pop
mov
pop
std
adc
pop
or
xchg
mov
and
orl
xor
pop
out
fdivrs
and
cmp
jae
stos
icebp
mov
push
loope
adc
arpl
and
in
clc
jae
inc
lret
cmpsb
rcrb
insb
gs
jne
xor
cs
insb
add
movl
sti
add
cwtl
repnz
js
pop
mov
cmp
scas
fs
fldcw
sub
add
push
jno
out
test
test
int3
jl
cs
out
iret
xor
into
nop
clc
adc
fwait
gs
outsb
jmp
push
pop
pop
data16
addr16
push
sub
cmc
mov
outsl
jmp
mov
int
dec
imul
xor
dec
or
xlat
mull
jl
sub
fldt
out
ret
and
cwtl
push
push
leave
data16
aad
xchg
lret
clc
jb
mov
es
outsl
call
cwtl
fwait
and
adc
xor
test
sub
cmpsb
sub
je
mov
andb
and
mov
add
test
gs
je
xchg
push
loopne
or
mov
sub
lahf
popa
je
les
sahf
mov
mov
cli
shll
xchg
std
dec
xchg
int3
mov
nop
aam
psubsw
push
mov
popa
mov
xor
or
pop
mov
add
int3
popf
jmp
jo
gs
subl
pop
lret
imul
push
adc
fnsave
adc
jmp
fld
popa
xor
loope
or
orl
push
mov
push
pop
push
or
sarb
mov
out
mov
daa
push
loop
enter
or
pop
xor
shll
repz
scas
adc
adc
mov
repz
push
mov
dec
lock
xor
and
int
mov
lret
xchg
pop
pop
fcoms
repz
popa
sbb
mov
shrb
cwtl
adc
xor
push
or
ret
in
mov
dec
mov
mov
jne
jb
cmpsl
adc
pop
xchg
inc
jae
add
xor
int3
push
push
adc
mov
loope
jmp
shr
add
bnd
jl
orl
jae
dec
dec
icebp
sahf
test
scas
cmc
push
mov
loope
fcoms
add
scas
mov
push
xchg
ljmp
inc
cld
sub
movsb
xchg
push
xor
imul
push
int3
xchg
push
out
in
pop
repz
pop
sbb
loope
test
into
clc
mov
xchg
jnp
jb
mov
and
push
in
jp
pop
pop
push
push
jno
movsl
inc
or
jae
shrb
in
cmp
roll
mov
loop
inc
or
pusha
loopne
mov
addr16
cmc
cli
mov
push
dec
sub
push
sub
add
insl
lcall
or
mov
add
jle
add
fs
je
call
mov
movsbw
push
not
pushf
lea
call
fbld
test
stos
xchg
jmp
inc
jl
xor
rorl
rcll
rorl
jp,pt
push
cmp
cmp
aam
shrl
fiaddl
and
xor
in
adc
push
sub
fcomip
cmp
or
enter
jp
imul
stos
insl
pop
in
push
iret
sbb
mov
push
loopne
inc
lea
jne
movsbw
mov
stc
sub
stc
cmp
mov
pushf
sub
pushf
bt
cmp
pushl
popl
cmp
jmp
fdivs
data16
inc
mov
xchg
ret
mov
mov
stos
sub
push
das
dec
lods
cs
jmp
or
pop
jae
lods
fidivrs
insl
js
into
cmpsb
xor
mov
mov
mov
std
lcall
add
xor
xchg
mov
adc
jo
jns
in
or
fidivrs
addr16
sbb
int
and
adc
push
je
pop
push
cmp
addr16
cmp
xlat
mov
mov
lret
and
mov
cld
xchg
pop
or
data16
sub
dec
cmpsb
fdivl
test
push
push
outsl
loope
in
pop
sti
fidivrl
and
imul
and
inc
xchg
jg
sub
push
pop
shll
mov
imul
jge
mov
mov
jle
push
cmp
inc
and
les
lret
push
stos
xor
sub
adc
outsl
mov
loope
push
cmpb
stos
std
cmp
jmp
test
jns
pop
insb
loop
imul
pop
mov
add
jmp
call
pop
mov
call
je
push
xor
in
inc
lods
mov
je
push
jge
xor
mov
push
add
xchg
push
ud2
push
outsl
add
push
sbb
sarb
dec
jo,pn
mov
sbb
cmp
inc
mov
in
iret
cmpsb
sub
adc
xor
sub
lret
stc
nop
add
pusha
cli
lret
enter
push
mov
push
push
mov
jmp
mov
or
cmpsb
push
push
cld
mov
das
inc
call
and
jmp
pop
xchg
jge
push
dec
stos
fstp
push
sbb
out
mov
popa
lcall
mov
dec
pop
mov
loope
iret
pop
ss
push
shll
sbb
pop
das
sub
loop
insb
lcall
aas
dec
movl
pop
ficoml
out
mov
pop
adc
lret
inc
loopne
into
out
aam
nop
test
adc
fcmovnbe
dec
aam
xchg
jne
jecxz
sbb
ret
add
mov
outsb
aaa
push
mov
mov
jnp
dec
imul
addr16
mov
in
movsb
xor
jg
and
out
jmp
adc
cmp
scas
dec
pop
mov
dec
insb
inc
cmp
lods
dec
adc
test
jno
hlt
mov
jecxz
cltd
or
lcall
sbb
mov
push
shrl
cmpb
dec
punpckhdq
bound
lds
ret
fcomps
popa
test
shlb
test
jl
stc
aam
dec
scas
pushf
daa
sbb
cmc
pop
imul
aas
lret
mov
stos
outsl
push
mov
jno
sbb
and
loop,pt
dec
jl
pop
jb
mov
sbb
cld
mov
cltd
xchg
xlat
mov
shll
test
pop
enter
dec
in
call
les
je
lea
pop
cli
mov
je
lods
into
movsb
fwait
cli
das
and
sahf
incl
dec
jl
bndldx
cmc
jae
push
inc
cltd
fbld
rcll
test
dec
int
xchg
add
pop
rclb
pop
iret
lahf
jo
test
cmpb
inc
test
fcompl
push
incl
mov
mull
aad
iret
hlt
aam
je,pn
nop
jl
inc
test
in
repnz
pop
je
add
je
pusha
xchg
mov
pop
jb
bswap
not
lea
pusha
movl
push
call
test
dec
lret
inc
das
mov
xor
test
push
xlat
adc
repz
pop
out
in
aam
mov
push
dec
bound
or
mov
sbb
icebp
lret
aas
jl
dec
aam
sti
decl
mov
xor
daa
sbb
arpl
mov
inc
jne
mov
mov
icebp
sbb
jmp
imul
jecxz
in
lea
fcmovnbe
into
and
jno
sar
pop
sbb
inc
push
pop
dec
xchg
xchg
inc
pop
out
mov
push
jo
pop
mov
in
lock
adc
or
mov
mov
push
mov
and
out
out
mov
cmp
lahf
pop
mov
jg
rol
pop
push
xchg
add
rcll
pop
popa
pop
lds
xor
xchg
loopne
jle
sbbb
mov
into
out
cmp
sahf
dec
lret
lods
xchg
js
pop
leave
push
cmp
cmp
push
mov
inc
cmp
clc
xchg
repnz
jl
movsl
dec
shl
xchg
mov
stos
loope
adc
push
into
mov
mov
test
adc
int3
je
mov
sub
xor
bound
cltd
popa
pop
sti
mov
fbstp
rcrb
cld
lods
push
gs
pop
lret
rcrl
fs
call
push
lea
jb
push
mov
movw
pusha
pushl
ret
bt
call
into
xor
rol
cmp
clc
rclb
in
outsl
shrl
in
pop
out
cmpsl
mov
fbld
cs
aad
push
std
or
fldenv
in
movsl
fdivl
xchg
pop
mov
and
loop
dec
xchg
lahf
loopne
dec
mov
or
lret
sarb
or
xor
rolb
and
jp
mov
pop
xchg
hlt
stos
pop
inc
inc
or
pop
int3
daa
and
gs
jge
loope
mov
pop
mov
xor
fistpll
into
in
push
lods
clc
icebp
mov
or
sbb
cmp
div
jno
or
hlt
mov
inc
dec
mov
cmpsb
dec
pop
mov
cmovo
int
inc
push
mov
mov
insl
cmp
push
nop
leave
cmp
xchg
cmpsl
cmp
jecxz
mov
pop
mov
call
lock
int
fnstenv
aad
pop
mov
cmp
pop
dec
in
lea
sbb
cltd
lods
dec
enter
add
inc
mov
inc
adc
add
push
mov
ja
sbb
dec
enter
jg
or
lcall
flds
jbe
inc
lahf
and
and
ret
pop
faddl
cld
lods
lock
in
outsb
enter
mov
lods
ljmp
lret
dec
out
jmp
pushl
rep
call
mov
or
jecxz
push
rclb
imul
and
dec
aas
mov
cmp
pushf
loop
adc
pop
push
pop
mov
call
pusha
daa
das
popf
pop
cmpsl
add
dec
test
cmpsb
leave
loope
jne
mov
out
mov
into
jnp
cmp
loopne
rcl
loope
inc
push
pop
loopne
pop
jns
mov
xchg
outsb
cmc
bound
adc
mov
stc
fstpt
xchg
cli
adc
and
into
xor
js
outsb
call
shrl
push
fs
cmp
lahf
leave
jne
xor
or
fs
fs
arpl
sbb
fiadds
xchg
repz
add
pop
mov
int3
or
scas
jno
lods
aad
fmulp
sub
mov
into
sub
pop
pop
hlt
adcb
js
pop
lea
je
cmc
bt
add
mov
rcr
shld
bts
mov
jmp
inc
pushf
ret
cld
fnstsw
jb
mov
lods
mov
cltd
or
jne
add
inc
pusha
sti
xchg
add
ljmp
dec
out
outsb
ret
lods
ret
push
repnz
leave
cmc
inc
shl
arpl
int3
jge
jae
mov
fadd
mov
insl
mov
jb
mov
ljmp
imull
xlat
js
pop
lock
dec
xor
std
push
sbb
lret
mov
and
add
cmp
xchg
mov
or
dec
lcall
push
lcall
test
stos
scas
push
insl
fs
pop
addr16
nop
ljmp
nop
lods
loop
cmp
inc
xchg
and
xor
pop
loope
scas
clc
insb
addr16
mov
fwait
int3
mov
mov
sub
lds
mov
sub
and
insl
push
push
mov
mov
popf
lret
add
roll
test
insb
add
mov
rorl
lcall
stos
mov
outsl
das
iret
adc
push
nop
fwait
mov
ljmp
xlat
rcl
mov
outsl
outsb
pop
addb
mov
jno
testl
dec
mov
popf
pop
add
adc
mov
dec
dec
and
pop
pop
std
sub
test
xchg
sbb
shll
cs
out
lret
mov
adc
pop
sbb
push
jne
inc
movsl
dec
jmp
sbb
or
xor
sbb
jge
std
xchg
int
lock
pop
ja
xlat
shrl
adc
xor
xchg
cmp
sbb
pop
es
out
xchg
xlat
test
jle
fcmovnbe
nop
ds
nop
adc
xchg
add
lds
pop
cmpsl
or
das
fldenv
mov
int
xor
add
adc
adc
inc
lcall
sub
movsl
dec
lret
pushl
rorb
jb
adc
cwtl
pop
xchg
lret
hlt
das
jae
or
lcall
inc
inc
and
adc
cmp
repnz
jmp
push
es
cmc
out
stos
inc
repnz
xchg
jnp
rorb
or
pop
dec
mov
bnd
or
jo
aam
push
xor
push
std
fiaddl
mov
jg
iret
out
pop
enter
enter
cmp
xchg
lock
icebp
xor
mov
testl
push
mov
repz
mov
mov
dec
pop
dec
xlat
mov
outsb
fisubl
xor
dec
dec
adc
lea
scas
or
sbb
lret
pop
loopne
jl
inc
pop
fs
mov
add
leave
xorb
mov
ljmp
ljmp
mov
inc
in
sub
sbb
aad
pop
scas
or
and
out
imul
sbb
nop
sub
jge
aam
mov
in
scas
inc
inc
ficompl
je
and
andb
fdivl
stos
push
fnstcw
lahf
cwtl
rclb
call
scas
cmp
mov
cmp
es
and
push
xchg
sub
daa
fidivl
dec
lret
lods
lds
jnp
inc
dec
sub
and
aaa
push
xlat
jp
xorl
pop
cwtl
add
jo
mov
inc
and
add
mov
test
push
jns
mov
lahf
xor
xlat
dec
mov
push
and
fimull
stos
roll
shll
mov
movsl
xchg
cltd
inc
iret
es
mov
push
mov
aas
sub
mov
push
push
lock
popf
sbb
mull
lret
xlat
dec
fbld
lret
add
add
pushf
push
pushf
test
or
pusha
lea
ja
pushf
lea
je
clc
cmc
cmp
call
jmp
mov
fs
mov
mov
mov
cs
adc
mov
nop
pop
and
aas
mov
stos
pop
xor
ficoms
enter
idiv
push
imul
ret
jp
insb
pusha
adc
xchg
xor
cmpb
mov
inc
mov
notb
cmp
or
dec
adc
fucomp
jnp
fdivr
mov
out
adc
movb
push
cmp
push
xor
dec
shrb
push
push
lret
xor
call
clc
mov
mov
cmp
inc
imul
fstpt
nop
dec
popf
nop
les
cmc
rcr
xor
mov
daa
mov
pop
or
and
in
aas
in
cmp
arpl
add
dec
test
jp
sbb
pop
shl
insb
sbb
adc
imul
mov
mov
fldcw
cmp
sub
cltd
in
pop
mov
movsl
pop
sti
jns
les
add
fcompl
mov
xchg
lahf
movsl
jno
pop
inc
or
and
loope
je
cmp
push
or
test
aas
dec
cmp
pop
mov
imul
xchg
ds
mov
jb
mov
test
addr16
and
mov
lret
jne
xchg
lea
ja
rcr
jmp
icebp
pop
test
fistps
out
popa
rcr
stos
icebp
call
into
iret
rolb
push
xchg
fsubs
xor
sub
mov
add
adc
nop
xor
mov
inc
test
jnp
call
mov
fstpt
and
enter
lods
fistps
ljmp
sub
imul
jno
js
int
not
mov
movsl
inc
and
inc
insb
sub
xor
aad
stos
xchg
fbld
adc
cmc
cld
ds
mov
jecxz
pop
arpl
aaa
sbb
or
repnz
clc
sbb
pop
jle
cmp
mov
xlat
pop
ds
int
fbld
scas
add
jno
outsb
test
adc
out
notb
inc
stc
gs
scas
icebp
mov
jg
jl
cmp
dec
or
repz
out
in
cmpsl
das
icebp
add
jno
lock
fsts
cli
ret
xor
xchg
fdivrl
mov
or
cltd
push
dec
xchg
push
jo
leave
data16
mov
xchg
clc
push
sub
pop
push
mov
test
inc
and
addr16
push
adc
out
or
push
pop
jmp
xlat
fsubl
sbb
pop
cmpsl
jmp
fcmovnbe
outsl
push
xchg
inc
stos
jmp
std
movsb
jae
je
sub
cmp
add
xor
int3
je,pn
cmp
call
lds
stos
cmp
pop
dec
push
loope
pop
cmpsl
inc
loopne
cltd
movsl
xchg
jnp
jns
push
fs
and
adc
push
call
pop
mov
cmp
adc
shrl
stc
in
lock
jp
add
gs
out
cmpsb
mov
xchg
mov
enter
rcll
cmp
cmpb
sub
mov
jp
insl
mov
push
inc
mov
mov
sub
ret
mov
inc
into
outsb
nop
xor
loop
mov
jmp
xlat
js
pop
push
mov
lret
repnz
inc
add
lahf
scas
push
xor
aad
sti
ss
cmpsb
popl
outsb
cld
int
inc
lcall
cs
cmp
sub
adc
or
sbb
stc
in
popf
out
call
jge
insb
and
cmpsb
jl
scas
ja
push
sbb
mov
loopne
std
sub
pop
mov
ja
jns
mov
mov
in
dec
aas
mov
iret
or
nop
push
jg
cmpsl
and
pop
fcompl
or
fstpl
dec
sub
cwtl
sub
mov
aad
pop
pop
xor
pop
movsb
adc
mov
lea
jb
cmc
push
cmp
pusha
pushl
lea
ja
call
insl
out
outsl
and
push
sbbl
jo
stos
movsl
dec
pushf
scas
test
cmpsl
int
mov
dec
test
lods
inc
xor
adc
clc
xchg
add
mov
mov
mov
add
mov
loope
lret
dec
mov
stos
jne
jbe
scas
inc
leave
icebp
dec
sub
push
pop
divb
rcrl
stos
push
mov
insl
cmpsl
sub
loopne
enter
jmp
int3
cmpsl
pop
push
add
mov
repz
movsb
out
mov
sbb
icebp
cmpb
mov
dec
outsl
das
js
and
aam
jne
sbb
or
movsl
jae
fsubs
stos
lret
shl
movsbw
sbb
mov
clc
stc
cmpb
push
pusha
lea
jne
neg
bsf
xor
adc
pusha
and
mov
stc
movb
add
setno
neg
rol
mov
pushf
test
test
pushf
lea
je
pusha
clc
sub
test
cmp
call
aas
hlt
scas
xor
jne
aam
push
aaa
cmp
mov
fwait
jmp
mov
fisttpll
sub
jp
jno
mov
outsb
adc
ret
pop
cmp
inc
mov
and
jo
mov
pop
sahf
call
pushf
stos
dec
stc
test
stos
lahf
pop
dec
pusha
pushf
dec
jmp
jmp
lea
jo
push
lea
call
cmc
push
cmp
push
jmp
and
dec
outsl
loope
pop
repnz
loope
mov
pop
push
xchg
mov
arpl
cmp
xchg
aaa
or
mov
shll
fsubs
inc
fs
sbb
xor
ljmp
fsts
movl
cltd
ja
mov
add
ret
push
cltd
aad
nop
fsubr
cltd
repnz
lods
sahf
iret
fmulp
inc
mov
test
out
jmp
pop
fstl
xchg
fistpll
cli
mov
sbb
loope
xor
sub
pop
stos
xchg
lea
outsl
cmpsb
cmp
adc
mov
mov
push
bound
adc
xlat
mov
roll
adc
dec
mov
adc
loopne
add
xchg
mov
add
adc
filds
mov
stos
jae
rcl
stos
sub
xchg
cld
cmp
test
loopne
or
sub
mov
imul
div
inc
adc
push
pop
out
mov
stos
inc
mov
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
push
icebp
jecxz
dec
push
movsb
int3
sbb
sub
adc
mov
je
mov
jne
aaa
or
clc
xor
bound
add
loopne
popf
push
in
pop
inc
jecxz
mov
or
fwait
inc
dec
test
push
sbb
rorb
test
loop
andl
mov
in
stc
push
into
cmp
inc
ret
loope
mov
jmp
stos
gs
mov
jns
push
mov
lret
test
sbb
push
inc
inc
xor
or
cmp
inc
mov
mov
stos
cmpsb
out
stos
push
arpl
xor
sub
xchg
aad
lcall
and
cltd
fnstenv
lcall
jae
xor
pop
pop
adc
add
ljmp
lods
mov
or
lret
in
or
jo
xchg
cwtl
sbb
cmp
push
outsb
xchg
or
xor
cli
scas
leave
ljmp
test
lret
xor
and
push
xchg
adc
push
das
cmpsb
sub
xlat
lds
hlt
xchg
out
mov
loopne
push
repnz
mov
sysenter
fldt
inc
pushf
or
pop
loop
lock
outsb
mov
imul
and
push
clc
fnstenv
jl
mov
pop
jno
mov
jb
push
hlt
and
pop
test
into
xor
fistl
mov
push
scas
jle
call
mov
adcl
outsl
dec
adc
cmc
mov
es
mov
aaa
fwait
outsb
push
mov
insb
pop
sub
xor
imul
push
push
mov
ret
mov
ret
sbb
sar
in
add
jecxz
xor
add
xchg
jb
jne
mov
pop
cmp
sub
fidivrl
sbb
daa
popf
ja
outsb
int3
xchg
jge
sbb
es
hlt
mov
jmp
jae
out
aam
int3
scas
sub
xchg
sbbb
pop
cmpsb
mov
ja
das
jg
dec
mov
test
xor
ljmp
addl
mov
orl
loope
jl
cs
stos
sarb
in
cmp
pop
popf
pop
fistpll
add
lahf
xchg
insb
subb
fnstcw
push
out
jmp
xor
imul
mov
pusha
xchg
sub
scas
mov
add
or
add
jno
push
movzwl
lea
movzbw
btc
mov
call
shl
push
jne
lods
add
das
aad
jno
cs
das
pop
popf
and
add
push
sbb
lods
lahf
jnp
sbb
xor
lret
push
popa
dec
inc
out
addr16
dec
inc
xchg
mov
xchg
adc
sub
test
jmp
dec
pusha
hlt
seto
ret
loop
sti
test
fwait
pusha
in
xchg
push
data16
insl
xchg
pop
inc
mov
ja
or
les
ret
fmuls
dec
gs
dec
aas
pop
push
inc
orl
adc
outsb
inc
rorb
or
andl
adc
pusha
out
or
je
lret
mov
mov
sbb
dec
sub
ljmp
pop
dec
jno
inc
out
xor
sub
adc
sub
jle
aad
cmpl
and
daa
arpl
movsl
leave
shlb
inc
shr
pop
push
pusha
lret
repnz
mov
mov
iret
or
jb
inc
push
out
mov
fnstenv
cmp
bound
outsl
ss
movsb
lret
or
sub
push
imul
call
mov
pusha
push
jmp
push
push
nop
rcrb
aaa
fisttpl
cmpsb
int
out
in
in
testb
jns
mov
pop
stc
shlb
jl
adc
out
mov
pop
jmp
jmp
fnstsw
dec
mov
pop
nop
mov
int
push
andl
out
adc
scas
fdivl
dec
aas
push
test
ret
jp
scas
jg
sti
test
mull
pminub
cmpsb
xor
cmp
adc
inc
jl
and
and
and
sub
dec
data16
adc
xchg
call
and
add
sub
ss
das
xchg
cmc
in
scas
push
cli
lock
cld
lret
arpl
pushw
cmpsb
add
movl
mov
push
lea
jmp
add
iret
cmp
push
add
push
pop
push
mov
xlat
xchg
sub
mov
mov
adc
movsb
or
push
in
cmp
filds
scas
fsubr
sahf
stos
lds
xor
or
inc
les
lock
xchg
lods
or
shll
add
cltd
xchg
xchg
pop
fiaddl
ds
fcompl
push
pop
add
fistpll
repnz
std
cmpsl
les
decl
mov
push
dec
sbb
mov
lret
das
in
add
stos
mov
mov
jo
nop
loop
in
adc
pop
lods
pop
xchg
mov
adc
or
ficoml
ret
push
xor
pop
int3
subl
shrl
sbb
dec
mov
xchg
mov
cld
mov
push
out
cmc
mov
jge
js
push
push
dec
mov
and
sbb
mov
sbb
mov
imul
inc
subl
sbb
cwtl
xor
mov
ret
fsubl
pusha
ret
je,pn
sbb
call
cld
andb
inc
sbb
lret
lods
pushl
stc
dec
lods
add
or
and
push
lds
das
pop
mov
lods
fldt
fnsave
fiaddl
xor
fisttpl
decl
ret
sub
imul
hlt
ficompl
cmp
sub
loop
lock
push
mov
adc
push
pop
dec
mov
push
cli
es
and
inc
cmp
mov
filds
pop
xchg
dec
movsl
mov
mov
addr16
jge
mov
sub
add
test
fbstp
rcrb
xchg
xchg
aad
mov
dec
pop
out
mov
or
inc
ss
fstpl
ds
iret
fwait
loope
shl
jg
xchg
das
mov
data16
testl
mov
push
cmp
aam
or
inc
xor
jns
mov
pop
or
sbb
xchg
lods
sti
push
pop
pop
fdiv
mov
pop
es
aad
add
push
inc
test
out
mov
xchg
jb
pop
imul
pop
xchg
mov
xchg
mov
ja
movsl
dec
hlt
leave
fdivs
fisttpll
fistpll
out
or
arpl
lods
pop
ret
inc
jmp
or
lcall
aaa
or
jnp
stos
rcll
mov
sub
xor
mov
mov
jecxz
adc
jnp
sbb
mov
in
aad
nop
mov
push
hlt
inc
out
inc
adc
dec
pop
xchg
popa
mov
push
dec
inc
mov
leave
aaa
sbb
cld
out
scas
and
mov
push
js
in
xor
arpl
and
push
mov
jl
loope
leave
pushw
lds
sub
cld
jno
mov
pop
into
pop
adc
clc
sbbb
xchg
jns
cmp
scas
lcall
hlt
out
mov
dec
enter
push
sbb
mov
cmp
cmp
jo
sbb
test
cwtl
enter
pop
scas
in
mov
orl
cmp
sbb
out
nop
mov
xchg
xor
mov
pop
and
cmp
xchg
add
adc
sbb
push
jge
fdivrp
mov
rorl
sbb
test
test
mul
scas
or
aaa
in
fisttpll
sahf
subl
sbb
fstp
mov
insl
out
stos
jne
cmp
add
xchg
or
push
jae
pop
nop
aam
dec
pop
pop
mov
ljmp
mov
cmp
push
adc
sub
stos
cmp
and
mov
sbb
pop
push
adc
dec
pop
xlat
lret
iret
std
lret
jge
jb
lock
orl
aas
xorb
jecxz
cmpsb
test
imul
sti
mov
inc
sahf
shrb
divl
sti
mov
xchg
pop
mov
stos
pop
inc
sub
fcmove
scas
inc
pusha
push
movsb
aad
push
sub
out
xchg
push
fxch
pop
xchg
mov
pop
sbb
xor
pop
mov
rorb
loop
scas
jg
pusha
jnp
dec
xchg
test
loopne
mov
push
scas
fadds
sbb
or
shlb
sub
cmc
mov
movsb
pop
mov
in
mov
inc
mov
and
stc
fisubl
das
mov
mov
mov
mov
insb
xor
aad
leave
add
cmp
test
dec
into
scas
fmull
ss
rorl
sub
sti
js
lret
pop
adc
out
push
mov
aad
mov
cltd
fldcw
push
or
mov
dec
mov
popa
iret
push
cmc
in
testb
push
sub
stos
dec
jp
pop
xlat
push
test
pop
daa
fstpt
adc
lahf
shl
fimuls
aad
and
jg
jno
nop
jp
iret
xlat
add
mov
stos
call
repz
pop
daa
loope
sbb
popf
sbb
aas
push
sub
dec
outsb
shlb
lret
pop
shlb
xchg
xchg
daa
outsl
push
cmpsb
fadds
adc
pop
daa
loope
scas
push
push
sbb
inc
mov
mov
mov
in
push
outsl
imul
movsb
and
test
aaa
inc
cmp
inc
sub
mov
adc
and
ret
nop
jp
std
pop
aam
fcompl
out
sub
out
lret
rcrl
xchg
fiaddl
jno
daa
test
pop
mov
push
pslld
cmp
lret
fistps
jecxz
imul
mov
out
cmpsb
fdivrs
mov
shll
repnz
dec
fwait
mov
mov
aaa
scas
fnstcw
pop
mov
shl
loop
inc
xchg
mov
pop
iret
outsl
push
and
jnp
sbbl
adc
jmp
xchg
mov
enter
ret
jns
jae
aam
or
stc
ret
dec
ja
cwtl
add
dec
stos
mov
jo
cmpsl
addr16
pop
ja
and
cli
movsb
mov
into
lret
xor
and
mov
dec
pushf
dec
movb
shl
call
rcll
xchg
xchg
mov
mov
lock
clc
push
pop
test
rcrl
roll
adc
div
mov
test
sti
movsl
mov
int
addr16
hlt
test
sbb
mov
push
loope
lock
hlt
scas
sub
xchg
mov
push
lods
adc
xchg
loopne
ret
clc
in
call
testb
js
pop
aam
adc
adc
push
mov
lret
mov
add
shlb
je
add
inc
arpl
add
add
mov
add
pushf
pushf
movb
movb
lea
jmp
ret
or
or
mov
subb
mov
pop
dec
and
lock
pusha
test
sub
sbb
cli
fisubrl
inc
mov
lods
daa
sbb
jo
and
or
in
mov
stc
shrl
repnz
jle
sbb
mov
stos
test
mov
imul
mov
mov
dec
xchg
sub
gs
sub
xchg
stc
mov
jg
xchg
lret
divb
test
es
scas
push
data16
setbe
jle
call
jb
gs
fimull
in
push
fists
or
or
push
in
sbbb
xor
inc
out
mov
mov
pop
cli
mov
dec
mov
aas
or
call
xchg
jne
aam
jl
mov
adc
lahf
pushf
movsb
dec
imul
lcall
insl
scas
pushl
jae
add
and
pushfw
imul
es
inc
addr16
or
mov
push
add
mov
loop
lds
dec
scas
dec
xchg
sbb
aam
lret
mov
hlt
sub
addr16
xchg
repz
add
mov
adc
in
mov
cmp
icebp
mov
lahf
rcrb
pop
ss
xchg
subb
ljmp
xchg
xchg
dec
daa
mov
cltd
fisttpll
mov
cmp
flds
fidivrl
add
movb
xchg
sbb
out
dec
cmp
pop
inc
jge
imul
dec
cmp
mov
or
jae
cmp
jo
sbb
adc
add
adc
das
roll
inc
repnz
xchg
dec
loopne
jge
jmp
sub
sub
arpl
jecxz
cmovnp
cli
push
repz
push
xchg
xchg
arpl
mov
mov
push
mov
aam
dec
adc
out
sub
dec
fimull
popf
lret
aaa
lret
pop
pop
sub
movl
cli
push
mov
dec
mov
pop
xchg
jp
cwtl
xchg
cltd
xchg
mov
fs
and
in
scas
out
xor
pushf
mov
pusha
dec
push
cmpsb
stc
push
xchg
push
out
sbb
sbb
sub
jno
xor
pop
and
sar
ljmp
fs
fsts
adc
dec
xchg
divb
sub
cwtl
aad
in
pop
inc
mov
lods
add
sub
xchg
lret
cmpsl
mov
cli
cli
call
mov
cmpsb
xchg
scas
cld
dec
clc
icebp
mov
mull
mov
sbb
push
movsb
cmpsb
inc
or
push
stos
xchg
mov
pop
pop
aam
adc
mov
mov
dec
adc
xor
fstps
inc
sbb
je
dec
push
mov
xchg
fmulp
ret
sarb
inc
jp
mov
push
jecxz
movsb
adc
rolb
push
xor
mov
xchg
ror
fwait
daa
add
dec
call
movl
pusha
lea
jmp
push
inc
mov
stc
test
pushf
cmp
call
cwtl
inc
iret
push
ficoms
lahf
lcall
add
insb
mov
movsb
inc
push
icebp
movq
js
add
mov
mov
fldcw
dec
mov
inc
and
pop
out
add
nop
inc
add
cli
pop
ret
out
loopne
xor
test
in
pop
jo
cmc
jno
insb
test
lcall
stc
ljmp
inc
jle
add
lret
inc
popf
push
call
pushf
pusha
lea
jae
pushf
cmc
bt
xor
pusha
jmp
clc
clc
jmp
jmp
jmp
jmp
enter
repnz
in
xchg
jo
lods
xor
mov
out
mov
in
xor
push
pusha
push
fimull
dec
fs
rolb
out
xchg
sub
sbb
je
cmp
popf
cmpsb
sub
cmp
in
lock
stos
xchg
std
lahf
lods
mov
flds
push
add
push
clc
xor
aam
lds
imul
mov
adc
es
xchg
xchg
cmp
inc
call
leave
inc
push
or
sub
push
loope
orb
movsb
into
push
push
mov
dec
inc
repz
or
addr16
fnstsw
xor
and
lret
jo
insb
rorl
shlb
bound
add
frstpm(287
cld
aam
cli
lret
sbb
into
and
sub
pop
lret
cmp
mov
js
push
mov
jnp
xor
mov
jmp
mov
push
pop
popl
cld
xchg
lds
or
mov
cmp
push
nop
mov
mov
loop
sarl
in
out
pop
sahf
iret
addr16
addr16
negl
and
aam
out
fdivl
mov
mull
arpl
repnz
fdivrl
orl
mov
arpl
imul
sub
cwtl
jecxz
xchg
push
sub
adc
dec
outsl
sub
cmp
sbb
rol
insl
ds
ret
call
fstpt
mov
in
bound
enter
pop
sahf
insl
repnz
inc
pushf
ret
imul
dec
lcall
push
push
adc
cmp
cmp
in
pop
dec
pop
mov
jge
lock
pop
jg
fdivs
ficompl
out
jnp
inc
mov
sub
add
cmp
mov
fs
stc
mov
dec
cwtl
pop
lahf
cmp
jmp
add
cs
leave
test
je
sbb
adc
xchg
or
sub
pop
xchg
add
push
dec
adc
pop
rcrl
bnd
shll
in
ss
or
mov
dec
mov
xor
outsb
xor
mov
cmp
cltd
dec
cmp
loopne
pop
sbb
out
sahf
push
jnp
mov
fwait
pushf
xlat
add
enter
test
out
push
bnd
pop
and
in
add
movsl
out
repz
int
sub
lret
mov
ljmp
repz
movsb
repnz
lahf
sbb
jl
add
jae
jb
gs
je
imul
fildll
scas
jp
loopne
add
out
lcall
and
in
fnsave
adc
stos
jmp
pushl
cmp
in
or
movsl
jge
inc
or
push
das
add
pop
lahf
ret
pusha
lea
call
pushf
lea
jae
jmp
adc
sub
inc
mov
sub
add
rcr
neg
btc
mov
pusha
jmp
icebp
push
repz
call
in
jle
popa
aaa
div
stc
rep
push
pushf
das
jne
pop
mov
add
das
adc
in
and
xchg
xchg
les
in
mov
jno
and
fwait
push
daa
cmp
clc
ret
mov
std
stos
push
nop
jae
push
jo
insl
into
mov
pop
fs
mov
sbb
out
pop
leave
mov
fs
jp
cld
fmull
cltd
fs
xchg
fstpl
or
jb
push
test
stos
enter
test
xchg
cmp
ret
or
add
in
shrl
loop
pushf
jg
jne
fldl
rep
roll
std
dec
fstps
mov
cmpsb
mov
dec
push
mov
pop
insb
cmp
lahf
sub
out
mov
push
std
push
add
xor
inc
mov
test
pop
popf
mov
push
fsts
cmpsl
rclb
pop
xchg
jle
push
stos
call
cmp
roll
imul
or
add
jo
jne
or
sahf
inc
testb
insb
pop
dec
sbb
dec
sti
imul
call
pop
push
mov
and
scas
xor
ljmp
and
jge
fstpl
lea
jo
add
addr16
sbb
roll
fisubrs
rclb
add
ret
fistl
inc
add
jae
mov
or
or
jb
add
pop
cmp
xor
call
pop
mov
push
jne
lods
sbb
push
arpl
dec
inc
mov
xor
pushl
clc
hlt
xor
pusha
loop
dec
insl
pushl
sbb
sub
repnz
lods
pop
flds
mov
aam
and
subb
add
pop
add
dec
pop
popa
jmp
les
sti
fwait
jns
xchg
sbb
test
dec
cmp
xchg
call
and
cmp
inc
sub
imul
lods
fnstenv
out
or
les
or
int
sub
arpl
call
dec
xchg
test
mov
nop
out
pusha
fs
popf
cmp
xchg
outsl
adcl
loop
pop
imul
adc
add
adc
icebp
inc
adc
and
lret
push
sbb
xor
push
adc
cs
hlt
and
inc
stc
adc
adc
std
clc
add
add
push
shlb
lock
jne
idivb
mov
je
clc
add
xor
js
dec
and
adc
outsb
inc
pop
adc
clc
cmp
jp
sti
js
shll
xor
xabort
and
xor
js
xor
nop
push
xchg
push
inc
mov
jne
adc
js
cmpsl
jno
dec
xchg
cld
adc
or
andl
mov
or
xor
xor
cmp
cmp
clc
add
xor
js
int3
and
adc
into
xor
je
clc
mov
aaa
xor
js
mov
je
clc
inc
and
xor
js
dec
and
jno
xor
je
clc
jbe
mov
shll
xor
xchg
mov
mov
pslld
jbe
cmp
mov
js
les
inc
xor
je
clc
dec
and
filds
xor
and
hlt
je
clc
cmp
mov
shlb
xor
and
movzbl
dec
pop
adc
cmp
jp
mov
and
xor
js
dec
and
xor
cs
xor
mov
xor
and
xor
je
clc
ds
xor
js
xchg
dec
xor
je
js
lock
ss
js
cld
and
inc
je
clc
lds
pop
xor
js
mov
push
shlb
repz
xor
js
jnp
jge
aas
je
clc
inc
and
xchg
or
lea
push
mov
jl
adc
clc
mov
cmp
js
ds
xor
je
clc
and
dec
js
into
add
mov
aaa
clc
cmp
jnp
cmp
ret
je
clc
dec
and
lock
jl
hlt
clc
mov
jns
inc
add
std
adc
add
pop
and
dec
add
xor
js
cld
and
xor
je
clc
inc
and
xor
js
mov
int3
xor
js
xor
repnz
js
cmp
mov
clc
inc
and
and
adc
push
xor
and
xor
js
test
xchg
or
dec
and
mov
xor
js
ja
clc
xor
je
clc
jg
add
js
or
mov
or
push
js
nop
lock
jbe
mov
inc
xor
push
clc
mov
dec
xor
mov
or
je
mov
push
adc
xchg
push
fidivrs
cli
xor
jl
std
shlb
xor
je
clc
mov
lret
xor
iret
shlb
xor
xor
ss
cmp
stc
xor
js
inc
and
je
clc
or
or
push
push
lock
xor
js
cmp
sti
xor
js
andb
xor
and
adc
xor
je
clc
inc
and
or
lret
xor
xor
jo
clc
hlt
and
jg
add
add
enter
lea
mov
push
mov
mov
clc
je
clc
mov
js
mov
dec
xor
dec
fildl
jno
xor
ss
xor
add
add
shlb
orb
or
mov
adc
xchg
iret
adc
js
clc
and
xor
and
js
or
sbb
les
mov
jae
lock
mov
jns
mov
adc
push
sub
mov
adc
je
js
rcl
inc
js
cmp
sti
xor
and
xor
js
into
add
icebp
sub
adc
xor
je
clc
mov
sub
add
les
in
mov
jle
dec
loope
test
jae
xchg
mov
ds
addl
divb
aad
cmc
fcomip
shlb
jmp
in
iret
int3
call
ret
hlt
dec
sti
bnd
fisttpl
mov
aas
push
ss
in
adc
insb
jl
jle
sahf
inc
ds
dec
cmovnp
xchg
add
pushl
js
adc
es
mov
and
xorl
loope
jmp
rorb
mov
loop
div
and
mov
repnz
loopne
pop
cmc
pushl
add
shlb
inc
jecxz
sub
dec
or
pop
mov
inc
sahf
sbb
cmpsb
mov
cld
aas
sti
insl
xlat
fstp
incl
sbbl
inc
mov
pop
pop
inc
inc
std
mov
aad
out
mov
decb
or
mov
inc
and
out
testl
mov
sub
dec
out
jb
dec
dec
outsl
les
mov
pushl
popa
pushl
mov
sub
add
mov
in
jg
fdivs
aaa
lcall
clc
cld
mov
rclb
push
aas
mov
push
pop
mov
out
inc
mov
adc
into
aas
insb
sub
push
cmp
pop
aad
mov
hlt
xchg
arpl
lahf
in
lods
cltd
cli
mov
pop
sti
inc
push
cwtl
icebp
hlt
xchg
callw
mov
sbb
shlb
ret
push
xor
inc
movsl
mov
sti
cmp
push
cmp
stos
push
xor
loope
jbe
icebp
idivl
adc
cmp
pop
aas
and
mov
mov
adc
movsb
stos
sti
nop
sub
insl
ljmp
addr16
cli
add
aaa
xor
jb
idiv
mov
adc
int
mov
iret
push
negb
push
ljmp
jl
push
jns
xchg
xchg
shl
movsl
add
add
cmp
loope
pushl
daa
cs
lcall
imul
std
xchg
sub
out
pusha
mov
xchg
or
push
icebp
inc
stos
stos
loope
sar
xchg
push
sbb
add
mov
test
mov
int3
dec
adc
in
cwtl
and
repnz
xor
in
dec
or
inc
push
in
mov
lahf
pushl
sbb
dec
inc
cvttps2pi
pop
incl
mov
call
imul
rolb
or
mov
xor
dec
adc
stos
inc
cmp
gs
test
movsb
inc
or
mov
cld
je
add
and
lcall
mov
cli
inc
xchg
sub
call
mov
pushl
pop
push
add
repz
addb
xor
push
and
stc
sbb
adc
lcall
and
lea
in
fistl
add
int3
add
int
xchg
and
mov
shrb
push
aam
cmp
xor
jns
pushl
stos
xchg
jmp
insl
fidivl
or
loopne
lcall
ljmp
gs
imul
xor
call
loop
xor
jle
push
jbe
cmp
mov
push
in
pop
ljmp
mov
out
int
scas
scas
decl
jle
pop
dec
cli
lea
out
sarl
jmp
je
push
sarb
adc
sbb
adc
lods
adc
addr16
dec
inc
xor
sahf
jno
iret
jp
mov
decl
movsl
stos
ljmp
inc
jecxz
jle
popa
cmp
int3
movsb
jb
mov
insl
push
call
sub
icebp
mov
out
idivl
lock
adc
inc
decl
adc
add
lcall
stos
movsb
add
mov
xchg
ss
out
sub
ret
dec
mov
add
or
mov
movsl
jge
or
loopne
xor
mov
sub
mov
push
jo
or
adc
add
sar
push
in
pop
decb
xor
shlb
ficompl
movsl
sub
bound
xchg
mov
lcall
call
add
xor
jmp
xor
mov
pop
and
xor
inc
push
jge
and
std
jecxz
jl
mov
lcall
loop
pop
incl
mov
data16
pop
and
inc
or
adc
notb
in
ja
incl
iret
pop
or
jmp
mov
dec
jne
clc
inc
sub
notb
cmp
cmp
cmp
or
rol
jp
imull
mov
or
push
incl
nop
push
in
mov
roll
sbb
or
ret
add
pop
repnz
test
cli
loop
jns
icebp
mov
stc
jne
out
add
pushl
sub
and
ficomps
cmp
xchg
jae
sbbl
jns
add
pop
push
adc
lret
xor
icebp
sbb
mov
jmp
movsl
mov
pop
adc
lcall
sbb
roll
rolb
fdivrs
dec
das
addr16
incl
out
sar
bound
fisubs
sub
fstl
int
repz
mov
bnd
ja
inc
fisubrl
imul
decl
or
jecxz
lcall
cs
inc
call
les
pop
call
pop
push
pminub
adc
or
push
dec
mov
ljmp
or
cmp
mov
and
insb
mov
jo
fstpl
mov
fisttpl
into
sbb
and
sbb
andl
xchg
add
mov
fadds
pop
movsl
add
imul
push
push
call
or
test
cmp
sbb
xorl
cs
pop
xchg
add
fdivrp
jle
cmp
enter
outsl
test
xchg
jl
jmp
ret
fwait
cmpsb
in
push
add
mov
call
fistl
mov
lock
mov
mov
sti
xchg
xlat
jg
insb
sbb
out
push
in
cmp
jbe
cmpsb
add
lea
pop
ljmp
pop
mov
shlb
adc
dec
sbb
fdivrp
shlb
std
cli
movntps
shl
movsl
jbe
and
lret
jne
mov
shlb
xor
xor
adc
pop
ljmp
mov
add
pop
mov
pushl
adc
xor
or
nop
lods
or
and
add
incl
out
push
imul
cli
pop
cmpsl
outsl
scas
cmp
mov
xlat
adc
aam
movsb
pusha
or
adc
jo
je
repnz
lahf
jae,pn
cld
mulb
jb
add
je
jge
sbb
int3
popl
mov
aad
dec
ljmp
pop
xor
stc
daa
psubusw
xorl
mov
pushf
and
pushl
ret
lock
ds
jae
and
std
fs
mov
pop
call
or
sbb
jg
fsubrs
inc
cmc
cmp
inc
cmp
das
or
pop
sahf
ljmp
nop
sti
insl
aaa
inc
lock
jnp
sbb
sub
in
decl
inc
xor
mov
out
stc
add
sahf
cmp
mov
xchg
sbb
xchg
xchg
in
jmp
stc
and
imull
mov
pop
and
push
and
sub
arpl
inc
sub
bnd
std
pusha
mov
call
das
dec
push
jne
and
call
aaa
mov
sub
mov
jmp
or
xor
inc
and
das
xchg
sbb
jp
xchg
lahf
pop
mov
idivb
movsb
add
clc
fdivl
push
mov
xlat
xor
int
dec
ss
push
jg
js
incl
notb
ljmp
packsswb
pop
inc
jb
xchg
loopne
mov
xor
and
add
jns
testb
add
mov
test
push
icebp
lcall
jle
enter
ja
repnz
inc
and
inc
inc
jl,pt
jbe
cmc
or
call
push
cs
outsl
push
mov
lock
jge
push
or
testb
xchg
push
pushf
shl
push
sub
pop
sbb
out
or
xchg
cli
push
xlat
sqrtsd
pop
out
notrack
clc
xchg
mov
mov
cwtl
icebp
out
jmp
mov
dec
shl
mov
sbb
dec
sub
xor
push
add
fstl
mov
and
jle
stos
or
lds
xchg
pushf
mov
test
dec
add
push
fisubrl
shrb
mov
in
add
add
sbb
outsb
adcb
xchg
out
pusha
mov
jg
adc
in
pushl
pop
and
fnsave
mov
jb
adc
push
mov
push
cmp
je
sub
add
sar
iret
cmp
mov
fsts
adc
cmp
xlat
pop
sub
inc
cltd
fisubrl
add
cmp
and
or
mov
sbb
pop
ret
mov
inc
sbb
jmp
push
mov
test
sbb
push
jbe
push
fiadds
pop
in
shrb
pop
inc
adc
mov
pop
dec
mov
orl
sahf
ja
or
js
adc
xchg
mov
dec
jecxz
cmpsl
add
cmp
push
sbb
mov
pop
sti
insb
push
or
xchg
add
movsb
or
pop
adc
ror
pop
or
xchg
add
ss
sbb
jne
mov
leave
cmp
mov
mov
notl
cmp
adc
popf
scas
call
or
push
mov
push
adc
out
test
test
sbb
mov
xor
out
in
stos
outsb
pop
adcl
sbb
sub
out
test
xchg
shlb
fmul
xchg
in
aad
jns
outsl
cmp
testl
pop
pop
ret
jb
mov
push
adc
movsb
decw
pop
dec
push
sub
int
addr16
out
pusha
imul
gs
cmp
ss
mov
mov
push
icebp
lcall
outsb
xchg
decl
jmp
arpl
or
add
xchg
sub
pop
dec
jmp
inc
dec
dec
pushw
jae
mov
mov
or
dec
fmuls
jmp
xchg
mov
cmp
or
xchg
cmp
add
jno
sbb
add
cmc
sbbl
mov
mov
push
jne
add
sbb
add
decl
push
inc
xchg
sub
loopne
mov
or
xorb
inc
jmp
pop
push
daa
js
cmpsb
jns
or
xchg
loopne
std
divl
inc
sti
popf
or
stc
push
and
fistpl
sub
repz
dec
into
push
imul
cmp
fmuls
sbb
mov
cs
lea
and
xor
stc
bound
incl
xchg
lock
xchg
lcall
inc
int3
sar
sub
lock
rolb
mov
test
xorl
pop
adc
inc
nop
outsl
add
ficompl
je
ja
mov
out
or
fimuls
or
cmp
test
adc
or
hlt
je
repz
ret
jno
fs
incl
xchg
test
ret
ljmp
sbb
add
dec
xorb
mov
decl
shlb
jle
or
call
cmp
fcompl
mov
fadd
sbb
dec
sti
adc
cwtl
fstpt
mov
cs
shll
mov
jmp
sti
inc
pop
popa
fcmovnb
xchg
int3
lahf
cmp
or
cmpsl
stc
shll
outsl
jg
incl
out
ret
adc
push
daa
lret
xchg
cmp
jmp
inc
sarl
fsubs
cmp
xlat
sbb
pop
nop
push
loope
fistpll
fdivrl
push
cmpsb
aas
adc
popl
cmp
mov
adc
sub
add
dec
shl
rcl
push
jmp
pop
jb
rol
add
ja
inc
jmp
in
rcrb
lahf
cmpsb
sbb
mov
and
mov
sar
in
das
lea
call
shlb
xor
jmp
pop
add
push
outsl
xchg
std
std
mov
sbb
mov
mov
cli
inc
cmp
inc
push
fmul
test
jmp
mov
std
xchg
fcomp
jnp
mov
idivb
pusha
sbb
mov
jp
gs
pushl
popf
push
in
fwait
push
ljmp
dec
add
aaa
push
cmp
mov
sar
in
je
lods
mov
data16
idivb
jl
fcmovnbe
dec
jb
jae
sar
dec
stc
cwtl
test
fnstcw
addr16
jl
pop
sbb
jge
popf
pop
push
data16
inc
mov
xchg
push
imul
push
or
outsb
call
jne
gs
dec
mov
fcmovb
add
pop
das
jp
cmp
jae
sub
ljmp
xchg
mov
movsb
shrb
sub
lret
ret
sti
scas
inc
jae
jecxz
mov
je
push
and
mov
scas
call
popf
call
inc
adc
jae
and
pushl
shlb
test
rorb
push
repz
rcl
idiv
and
jb
shlb
data16
cwtl
das
jae
jmp
pop
jbe
sub
jo
imul
and
push
repz
andl
pop
in
notl
notb
into
jle
js
stos
sbb
test
test
test
dec
jmp
prefetcht0
out
push
push
xchg
xchg
or
and
stc
or
shrb
pop
dec
or
repz
cmp
adc
pop
jmp
xchg
out
loop
shl
enter
pushl
mov
mov
sbbl
mov
imul
pop
inc
cmp
negb
test
popa
pop
inc
je
adc
outsl
sbb
jno
mov
in
dec
decl
push
mov
incl
xchg
lret
stos
dec
aad
jp
popa
loope
xchg
outsb
add
mov
xor
imul
push
push
stc
nop
jp
sti
movsl
jo
into
sub
jnp
mov
std
call
add
rcrb
xor
fcoms
dec
ret
daa
push
lret
xor
lahf
inc
inc
or
fdivrp
call
cmp
aas
pop
sbb
jmp
call
cmp
or
xorl
push
pop
out
adc
loop
dec
movsb
cld
jmp
mov
add
jg
mov
or
dec
or
push
xor
jmp
dec
cmp
sub
outsl
int3
or
xchg
nop
lods
popf
fidivl
sub
data16
sub
mov
nop
mov
inc
dec
inc
or
test
ljmp
test
movsb
ljmp
pop
jbe
ja
mov
in
inc
or
pop
test
xchg
lock
sub
sub
pop
cmp
sbb
je
stc
mov
cmpsb
neg
push
push
lahf
jg
roll
dec
pop
add
adc
scas
dec
jecxz
scas
shl
test
lods
clc
dec
test
pop
int3
out
aad
fcomps
outsb
or
lcall
gs
jge
mov
push
mov
decl
mov
insb
jne
into
sub
cmp
pop
jmp
and
dec
mov
cmp
xor
aaa
cmp
and
hlt
add
lcall
cmc
cwtl
bound
out
mov
or
push
fs
jo
mov
scas
push
pop
lock
jae
ja
adc
sti
xor
xchg
mov
push
loopne
test
adc
pop
push
ljmp
cld
les
shl
je
inc
and
push
fucomi
or
jl
ss
cmp
ljmp
cmp
push
popf
add
ficoms
test
shll
rcrb
pushf
mov
adc
jmp
iret
push
push
or
xor
xchg
sarb
orl
pop
pop
push
or
xor
cmp
ds
xchg
ljmp
std
shrb
sbb
repz
lahf
mov
jae
push
out
testl
icebp
pop
sub
test
shl
imull
incl
addr16
fwait
fs
cld
mov
shll
mov
into
sbb
lcall
inc
xlat
adc
inc
fistps
std
inc
inc
sahf
ljmp
mov
rorb
cmp
lds
and
jne
push
dec
negl
call
xor
scas
adc
or
pushl
dec
cmp
cmp
incl
mov
mov
imul
mov
insl
leave
incl
ja
test
movsl
or
add
xor
jae
shl
idiv
shll
adc
cmp
or
cmp
cltd
movsl
sub
test
pop
pushl
lret
or
aas
xor
enter
lret
adc
adc
push
std
in
dec
shl
es
push
mov
and
dec
mov
jne
in
and
mov
pop
imul
mov
sti
fdivrs
into
lret
lret
dec
cmp
ljmp
sub
rorl
inc
xor
pop
sti
cmc
es
adc
gs
sbb
jmp
icebp
rcll
dec
lcall
mov
roll
and
adc
sbb
gs
sub
sbb
push
and
xchg
dec
xchg
popa
sub
mov
mov
cmp
or
xor
push
add
mov
or
outsl
push
sbb
int
mov
push
dec
xchg
add
mov
inc
ja
jg
mov
std
cmp
nop
test
xchg
pop
loop
xchg
stos
cs
inc
push
add
mov
push
rcrl
adc
adc
sahf
mov
push
popa
pushf
mov
rcll
xchg
outsb
clc
xchg
sub
pop
xchg
ds
cmp
in
or
shlb
loope
notb
pop
aas
sub
aam
xor
testl
rclb
repnz
mov
pop
cmc
rcl
ss
inc
push
jmp
jecxz
call
cmp
bound
adc
lock
int3
mov
rol
ret
loop
pop
rolb
cmp
mov
pop
pop
inc
call
push
decl
xor
pop
jns
jl
scas
fwait
call
ret
out
es
testl
adc
mov
push
add
inc
pop
packuswb
cmp
dec
dec
and
into
rorl
pop
ror
mov
sbb
scas
icebp
jmp
push
pop
dec
xchg
mov
fbld
mov
xor
hlt
bound
fldcw
shll
subb
outsl
call
sub
cli
and
inc
sbb
cmpsb
xor
cmp
leave
pop
ret
mov
jl
inc
sti
loop
adc
xor
and
mov
jmp
in
cmpsb
std
mulb
xchg
push
push
insl
push
sub
ret
mov
mov
lea
mov
in
cltd
std
add
je
xchg
or
pop
cmp
daa
inc
pop
push
icebp
xor
mov
inc
push
add
mov
lcall
in
call
daa
stos
shll
cltd
jnp
sti
adc
xchg
test
arpl
pushf
ja
rolb
xor
mov
loope
mov
dec
repz
repnz
mov
dec
pop
cwtl
dec
push
loop
rcr
add
pop
call
sub
sbb
iret
xor
in
rcrb
jo
call
ds
mov
push
or
xchg
popf
add
push
mov
cmp
inc
fstps
ja
ret
adc
jp
mov
lahf
dec
push
mov
out
scas
inc
push
jo
ljmp
pop
sti
mov
jecxz
clc
mov
hlt
mov
icebp
mov
mov
pop
mov
cmp
add
insb
out
rclb
push
out
std
inc
lock
sub
sarb
movsb
pushw
loopne
push
mov
push
pop
popf
mov
mov
stos
xlat
scas
movsl
loop
sar
add
ljmp
xor
ljmp
mov
hlt
decl
inc
pop
arpl
xor
ficoms
scas
sub
call
adc
movq
cmpsl
aaa
out
loopne
push
cmp
cmc
loope
sub
push
pop
mov
cmp
lret
lcall
sahf
sub
mov
dec
push
scas
fdivp
push
xor
xor
adc
xchg
dec
popa
int
rorb
mov
cmc
test
outsb
mov
and
mov
adc
add
xchg
stc
movsb
lahf
cmpsl
mov
mov
popa
adc
leave
dec
ja
push
pop
out
ljmp
or
in
jb
add
nop
push
jno
push
test
outsb
decl
mov
bound
or
lea
roll
filds
bound
jmp
fs
test
xchg
sbb
into
pushl
adc
pop
cmc
push
data16
test
xchg
ret
push
or
mov
jmp
testl
dec
repz
jnp
jg
insl
enter
dec
cltd
pushl
pop
cmp
mov
cmp
mov
imul
js
test
jae
out
mov
stos
icebp
pop
popa
mov
mov
push
add
test
adc
lcall
fnstenv
pop
int
add
rcl
mov
push
mov
mov
clc
bound
cmp
mov
or
aaa
lcall
in
mov
push
push
cld
mov
and
pop
cli
mov
outsb
push
test
andl
aas
cmp
xor
push
test
sub
add
dec
or
out
cwtl
push
in
es
mov
movsb
sub
mov
or
andb
or
loope
and
push
mov
jo
mov
loop
pop
call
jae
push
cmpsb
lcall
nop
jo
sahf
mov
jecxz
and
push
dec
les
mov
and
mov
cmp
adc
sbbb
cmp
pop
inc
and
lret
xor
stc
fmuls
dec
imul
sub
out
sbb
xor
jge
fidivrs
std
push
or
xchg
lcall
jmp
stos
jmp
test
add
pop
xlat
into
push
popa
jnp
shll
or
xor
push
push
mov
push
fldl
mov
cmp
jmp
addr16
mov
mov
ljmp
fldt
dec
or
in
mov
adc
mov
pop
repz
bound
decl
imul
fcomps
icebp
loop
clc
sbb
gs
lcall
jl
stc
jae
mov
or
ds
jp
xor
jmp
jo
mov
jmp
stos
or
sti
popf
decl
adc
ljmp
adc
test
mov
push
arpl
pushl
jle
test
pop
fbld
sbb
invd
enter
decl
mov
cmp
dec
loop
daa
aas
jnp
incl
ljmp
addr16
push
jnp
daa
shlb
icebp
imul
push
das
outsl
or
out
fwait
add
cld
outsb
jno
cmp
mov
cmp
pop
xor
mov
pop
mov
test
iret
or
lods
lock
sbbl
test
bound
dec
xchg
sbb
fisttpl
cmpsl
dec
decl
xchg
jmp
cmp
enter
dec
mov
xor
call
xlat
ljmp
push
pop
cli
sbb
mov
sti
lock
mov
xor
sar
daa
in
jg
sbb
decl
push
stc
push
push
dec
cmpsb
jmp
or
mov
addl
rol
jl
xorb
data16
push
sbb
sbb
in
cmp
adc
sub
push
aas
or
mov
xchg
call
in
or
jecxz
mov
mov
or
cmp
cltd
push
sub
push
xchg
inc
out
pop
shl
xchg
or
ljmp
cltd
push
cli
push
ret
dec
cwtl
vmulpd
movsl
popf
mov
fidivs
notl
add
xor
mov
lret
fs
sbb
test
jg
dec
mov
mov
mov
fmuls
rorb
stos
hlt
mov
sbb
rorl
xchg
mov
in
loope,pn
cmp
inc
cmp
mov
inc
rolb
fiadds
mov
sub
xchg
adc
loope
cmc
vpsubusw
cmc
icebp
incl
jg
lret
inc
add
scas
jmp
jb
push
mov
lea
push
lods
js
cmp
push
into
xor
fiadds
std
cli
andb
jbe
ljmp
mov
mov
cwtl
push
leave
in
std
test
je
xor
incl
mov
sar
pushf
jae
sub
and
jg
lcall
fiadds
pop
sti
decl
fbld
not
mov
rcl
sub
jb
icebp
ljmp
outsb
popf
jns
mov
fsts
mov
push
mov
xor
idiv
xorb
add
popf
xchg
jns
in
xchg
xchg
incl
adc
sub
pop
rcrb
shrl
mov
gs
add
jnp
in
xchg
mov
mov
mov
sub
jo
nop
fldl
std
cmp
lcall
mov
add
mov
xchg
imull
stos
sub
pushl
sbb
push
incl
adc
fcoml
or
jns
scas
add
testl
push
mov
xor
add
cwtl
fdivrs
push
inc
cs
mov
add
sbb
cmp
add
push
push
int
xor
dec
fildl
mov
push
jmp
sub
inc
and
testb
jns
lahf
outsl
jmp
mov
inc
jmp
cmp
cld
or
adc
cmpsb
rcrb
test
xchg
repz
cmpsl
mov
inc
add
sbb
sub
sti
or
lds
shrl
mov
dec
lea
xchg
fwait
push
cmc
sbb
fdivp
in
or
jns
shll
ljmp
pushf
push
shll
push
repz
data16
cmp
fisubrl
dec
icebp
out
clc
notb
mov
mov
inc
jl
gs
mov
repnz
and
cwtl
lret
push
stc
clc
shrl
jbe
decl
cmc
popf
fldl
pop
mov
sahf
out
out
or
cltd
les
adc
mov
xchg
mov
push
sarb
lret
adc
xchg
test
lods
mov
cwtl
sbb
jae
pop
dec
push
jmp
xlat
int
jmp
dec
xchg
outsl
ja
inc
cmp
sti
and
push
call
cmp
fcoml
sbb
cmp
shlb
cmp
cli
iret
imul
fadd
stc
sti
push
outsl
mov
xor
mov
out
mov
stc
mov
movsl
jmp
inc
leave
lock
fmull
movsb
daa
mov
mov
add
cmc
or
adc
in
mov
jmp
std
icebp
dec
inc
mov
bound
mov
orl
loop
add
jns
in
mov
sbb
pop
pop
and
mov
mov
mov
or
loop
ffree
adc
fiadds
push
dec
into
mov
mov
sub
mov
mov
mov
xchg
push
mov
dec
push
push
fisttpll
into
xchg
push
rcl
lods
sti
jns
push
inc
ret
je
adc
or
movsl
jae
add
jbe
call
jge
stc
xor
mov
fs
pop
cmp
das
leave
jg
push
test
add
in
xor
cmp
add
mov
sub
in
adc
push
cmp
cwtl
jbe
ret
std
repnz
jae
or
cmpsb
je
sbb
xchg
xor
jge,pt
mov
lods
aas
cld
pop
add
flds
ljmp
popf
fadds
call
jns
cmpsl
jne
xchg
hlt
je
int3
xchg
scas
ja
jge
jl
cmp
mov
xchg
mov
loopw
xor
xor
add
push
lods
mov
jg
jmp
ds
sub
ljmp
ret
cmp
mov
bound
sub
sahf
jle
aam
les
jmp
std
xor
testl
dec
push
mov
mov
mov
lcall
mov
and
aaa
and
dec
sahf
xchg
dec
in
incl
add
mov
xorl
je
mov
ljmp
push
movsb
outsb
pop
stos
sti
jb
cmc
xor
sub
in
scas
lahf
and
and
pop
outsl
sub
in
shlb
shl
push
aaa
sub
lcall
ds
jle
cmp
lahf
adc
into
jne
xchg
mov
mov
push
add
push
mov
cmp
iret
clc
mov
and
add
sbb
fs
dec
adc
xor
lea
jne
cmp
sbb
push
rcrb
mov
push
loop
jne
push
cmpsb
lods
pop
add
xchg
cwtl
shl
clc
jae
ss
or
cld
dec
bnd
push
orl
push
jecxz
subl
push
decl
mul
mov
fistps
mov
shlb
mov
fisubl
dec
sub
testb
test
mov
xchg
jle
cs
mov
sub
outsb
push
jge
inc
cmc
testb
add
push
stos
xlat
ljmp
dec
or
sub
jnp
push
shl
pop
mov
push
repnz
cld
push
std
adc
rcll
xchg
xchg
sub
scas
js
call
adc
push
movsl
icebp
je
cmp
pop
mov
push
sub
pop
daa
add
push
xor
push
adc
jno
leave
push
or
dec
inc
cmp
data16
pop
jo
fwait
stos
or
lcall
and
in
cmpsl
push
ud0
add
push
hlt
fimuls
movsb
dec
je
sbb
cmp
push
jnp
adc
stos
mov
imul
sar
sbb
adc
jmp
ss
add
stos
or
xchg
pop
jp
rorb
xchg
cli
mov
push
cmp
mov
pop
nop
and
ljmp
dec
cmp
ficompl
adc
test
lods
mov
mov
jbe
fsubrp
add
mov
scas
lods
dec
cmp
or
xchg
rcr
shlb
out
dec
es
cmp
test
orl
fldl
jnp
ret
repnz
mov
sbb
sub
sub
ss
sbb
test
in
mov
push
faddl
scas
pushl
pop
stos
sub
subl
shlb
xor
rolb
jne
adc
popa
icebp
scas
or
std
mov
pop
outsb
push
bound
test
sub
pusha
push
pop
push
daa
push
fiaddl
out
add
push
jne
sbb
mov
dec
cmp
sti
mov
rorb
pop
push
xchg
lock
xor
dec
pusha
cmp
rol
jae
push
bound
xchg
and
imul
sahf
jo
xchg
loop
pusha
jp
setg
push
inc
mov
adc
pushl
rcrb
or
push
mov
ret
rol
cs
mov
in
jne
loope
adc
mov
ljmp
xchg
dec
push
sub
pop
add
jle
pop
and
cmp
xchg
and
mov
pop
ss
ljmp
lcall
adc
sbb
call
pusha
iret
jle
cmpl
sbbb
push
or
lcall
mov
xorb
fnstcw
ljmp
cmc
lcall
outsl
push
cmp
out
cmc
push
mov
les
dec
pop
xlat
mov
mov
fs
es
pop
add
cmc
pop
cmp
sar
cs
rclb
xchg
xor
cmpsb
stc
lock
testl
dec
sub
jge
mov
or
dec
sarb
xor
jo
xor
mov
pop
sti
jge
inc
cmpsb
adc
adc
xor
mov
in
rep
jge
xchg
add
push
aad
test
or
ja
mov
test
lret
mov
and
jns
sti
pop
je
roll
or
jb
cmp
std
adc
push
and
test
shll
mov
test
add
sti
push
jg
lds
fistpll
xlat
push
pop
test
shll
inc
leave
lods
sbb
mov
pop
jge
icebp
xchg
dec
rol
int
cs
xor
xor
inc
aaa
outsb
and
dec
in
je
cmp
pushl
int
dec
enter
lock
into
inc
pop
ljmp
mov
bound
sbbl
rclb
inc
in
decl
push
mov
rcrb
ds
sarl
or
daa
push
mov
scas
sub
sbb
add
es
mov
arpl
fsubp
outsb
stos
insb
shr
imul
jae
mov
movsl
pushl
cld
push
repz
cmp
add
jo
pop
fidivs
xor
pushl
lahf
mov
nop
divb
cli
cmp
in
mov
pop
addb
shll
sub
or
or
push
lods
pop
or
push
filds
hlt
adc
sbb
lahf
or
add
stos
push
sub
push
clc
std
popf
shll
push
sahf
sub
loopne
pop
jecxz
pushf
xchg
jnp
adc
stc
rorb
cmp
xchg
jg
mov
inc
mov
or
fsubrl
sahf
or
aam
sub
or
scas
fwait
add
push
mov
or
cmp
sbb
aad
xlat
cwtl
xchg
je
pop
lahf
jae
out
dec
cmp
dec
out
sbb
xchg
mov
xor
in
aaa
outsl
rolb
movsb
out
sub
mov
imul
mov
shlb
and
xor
mov
call
push
xor
lods
inc
cmpsl
and
imul
add
cmpsb
incl
nop
stc
add
cli
fwait
xchg
out
mov
popa
dec
mov
xchg
div
xchg
shll
out
mov
mov
push
jae
push
push
sub
pop
mov
mov
xchg
lcall
movsb
pop
xor
sub
sub
or
ljmp
push
inc
pop
ljmp
add
lret
mov
xchg
js
repz
cmp
xor
inc
sub
mov
mov
repz
fmull
lock
jmp
ss
idiv
in
inc
jne
jmp
mov
repnz
pop
dec
int
aas
and
adc
jmp
xchg
push
jne
js
or
imul
in
fcmovnu
mov
adc
cmp
inc
lea
incl
mov
mov
popa
in
inc
adc
mov
movsb
xchg
or
pusha
inc
mov
adc
mov
adcb
mov
mov
imul
pop
xlat
aaa
shrb
push
xchg
jbe
inc
add
add
incl
fs
jg
aas
push
jo
push
mov
push
lahf
incl
andb
mov
ficompl
cmpsl
out
push
jno
repnz
fidivs
cmp
push
xorl
jmp
jno
push
cmp
mov
repz
xchg
inc
push
cs
decl
imul
jbe
mov
dec
inc
out
sar
icebp
cli
add
cmp
jae
xor
xchg
loopne
mov
mov
fs
and
or
popf
xchg
pop
pop
sub
negl
incl
xchg
sub
xchg
push
ret
test
mov
push
and
pop
loope
mov
add
sahf
add
and
and
lret
outsl
std
mov
sub
dec
outsb
mov
lahf
stos
inc
or
bnd
inc
inc
and
xchg
push
je
call
frstor
enter
divl
adc
mov
inc
xchg
and
addr16
push
mov
in
inc
dec
push
enter
add
cltd
test
or
xor
jo
dec
arpl
sub
insl
mov
mov
fmull
mov
adc
add
test
js,pn
fstl
push
add
mov
roll
add
inc
and
std
mov
and
mov
decl
xchg
ror
fistpll
mov
sar
loopne
outsl
out
sbb
inc
inc
pushl
loopne
cli
sarb
arpl
or
call
xorb
test
imul
gs
ja
ja
ljmp
mov
sbb
push
mov
adc
pop
xchg
stc
push
pop
popf
mov
stc
mov
add
loop
outsb
call
jne
loopne
add
decl
sahf
rcrl
lret
shr
push
movsb
rcll
pop
sbb
sarl
mov
pop
push
and
lret
je
subb
xor
cmp
sbb
pop
roll
in
push
lods
pop
rorb
sbb
icebp
mov
pop
outsl
or
roll
mov
test
int3
mov
ljmp
mov
push
out
mov
ljmp
xchg
cmp
insl
hlt
inc
lahf
jmp
and
cmp
ret
or
sti
lods
adcb
or
incl
paddb
js
mov
shl
xor
mov
cwtl
hlt
icebp
incl
xlat
push
dec
sub
outsl
loop
xor
or
cli
test
orb
cmp
mov
sub
mov
repz
or
push
jmp
or
adc
inc
mov
out
mov
add
jnp
mov
push
inc
pop
pop
adc
pop
adc
jmp
jp
or
dec
dec
or
popf
pop
mov
fs
inc
outsb
add
ds
jnp
pusha
stos
xchg
jbe
mov
jmp
dec
jae
sub
daa
int
popa
dec
sbb
mov
addr16
xchg
cmp
fwait
aad
lret
mov
dec
into
sub
dec
pop
add
imul
jp
adc
jo
adc
jge
cmpsl
rcl
sbb
fisttpll
lods
icebp
jb
dec
insb
je
stc
inc
shll
in
mov
lea
cmp
or
cmp
inc
push
mov
jne
ss
push
les
and
nop
sti
dec
test
jmp
push
jb
fistpll
sbb
lret
orl
mov
mov
call
mov
cmp
ja
pop
sbb
je
stc
xchg
loop
mov
xor
sbb
inc
cmp
inc
out
xchg
jl
les
pop
or
mov
std
or
or
popa
and
dec
mov
xor
xchg
in
jae
xlat
inc
ret
les
out
aaa
dec
pop
mov
inc
add
adc
mov
push
dec
or
inc
adc
mov
jno
inc
push
dec
xchg
mov
xorl
adc
loope
pop
xchg
dec
dec
dec
mov
add
mov
jle
nop
sbb
cmp
mov
push
lcall
iret
mov
dec
mov
in
mov
adc
inc
jg
pop
mov
jb
pop
lods
repnz
daa
aam
pop
push
cmp
inc
jmp
out
mov
or
mov
cmpsb
mov
loop
shrl
adc
or
push
sbb
xor
sbb
scas
xchg
push
fadd
push
fwait
xor
test
fisubs
mov
in
xchg
lods
lret
cwtl
cmpsl
int3
xchg
mov
mov
cmp
sbb
rorl
js
fimull
mov
or
ret
cmp
lret
mov
sbb
leave
pop
stos
dec
mov
aas
lds
jecxz
xorl
jle
pop
aaa
insl
push
push
lds
ljmp
sub
mov
dec
mov
cmp
fneni(8087
mov
mov
shll
pop
xlat
mov
inc
mov
pop
lahf
popa
xchg
mov
sbb
loope
and
jmp
movsb
out
cmp
or
ja
addr16
das
cmp
pop
push
push
fabs
cmp
and
sbb
bts
mov
cmc
jmp
sub
test
add
shl
mov
adc
pusha
or
mov
push
push
repnz
pushl
jmp
push
arpl
mov
jne
ret
ret
out
dec
push
scas
ds
add
jne
mov
dec
adc
jmp
dec
mov
mov
fisubs
cmpsb
jo
pop
stos
add
mov
fsub
ljmp
mov
push
push
scas
or
push
push
push
cmp
ret
mov
lret
push
lret
pop
repnz
mov
sbb
mov
sbb
push
push
or
lds
xchg
fs
dec
bound
push
or
pusha
pop
sbb
pop
pop
pop
mov
outsl
dec
cmp
test
daa
lcall
dec
mov
and
ret
adc
into
lret
sbb
leave
fmull
popa
outsl
jge
sarl
xchg
inc
iret
fcmovne
pop
push
cmp
repz
mov
cmp
pushf
clc
xor
pusha
call
rcrl
jo
in
mov
inc
rorl
int
scas
push
loope
icebp
jno
and
jg
mov
loopne
sub
pop
sbb
pushf
scas
mov
push
pop
cmp
stc
push
push
aam
xor
mov
inc
jo
dec
call
jns
mov
push
popl
pop
sar
adc
ss
sub
pop
sbb
adc
clc
push
popf
lcall
dec
or
ljmp
imul
jecxz
dec
mov
xchg
cmp
lcall
mov
dec
add
imul
adc
adc
pop
add
jp
ljmp
inc
out
pushf
adcl
push
movsb
js
pop
push
jnp
mov
mov
mov
imul
cwtl
scas
dec
in
data16
push
cmpsl
les
xchg
sub
mov
scas
mov
fs
bound
cmp
shrb
shr
popa
jns
jnp
push
mov
adc
mov
add
cli
mov
out
jb
out
aaa
mov
mov
lret
mov
icebp
mov
fsubrp
mov
push
jge
jecxz
inc
xlat
xchg
jle
mov
xor
dec
pop
xchg
notb
inc
int3
sbb
and
inc
fstpt
dec
repz
je
adc
popf
cmpsl
sub
cmp
push
scas
fnstcw
sbb
pop
leave
and
mov
fisttpl
insl
jp
stc
out
add
sahf
mov
xchg
or
mov
movsb
lods
push
or
xor
fnstenv
fcmovu
insb
xchg
lods
sti
loop
les
loop
stos
mov
std
or
stc
test
sbb
or
icebp
xchg
pop
mov
push
xlat
dec
mov
pop
adc
test
sbb
aad
sbb
or
jecxz
std
sbb
addr16
jg
cwtl
dec
lahf
mov
add
pop
test
jecxz
cmp
mov
xchg
cmp
ret
enter
aaa
lahf
mov
push
js
inc
imul
out
fisubrs
jl
faddl
jge
pop
flds
push
scas
test
xchg
xchg
push
inc
sahf
pop
fwait
imul
in
lret
inc
loopne
and
jae
and
insl
jb
xchg
xor
adc
cmp
and
cmp
pusha
jp
mov
mov
inc
jno
aam
dec
and
test
xor
popf
mov
jecxz
in
test
add
push
jg
or
mov
jp
in
mov
mov
or
imul
bound
ja
fwait
loope
popa
and
jne,pn
repnz
or
clc
test
or
pusha
add
or
clc
lret
stc
das
adc
ret
pop
scas
fldenv
dec
xchg
jne
jp
fnstcw
cltd
ljmp
mov
push
pop
addl
aam
mov
adc
mov
sti
mov
insb
push
loopne
fwait
pop
or
sbbb
xor
popa
jg
push
cltd
sbb
push
cmp
mov
push
jle
pop
icebp
addr16
sahf
ret
jl
outsl
int
insl
add
xor
enter
push
push
mov
push
hlt
and
pop
sbb
pusha
mov
loope
addr16
insl
sti
std
mov
add
push
data16
push
cmc
push
call
adc
jnp
xor
subb
xchg
jl
cs
movsb
pusha
pop
add
cmpsb
jbe
mov
xchg
stos
add
test
rol
cmp
adc
imul
xchg
pop
je
dec
jmp
cmpb
sahf
and
jbe
scas
sub
stos
fsts
mov
lret
aad
sbb
lret
out
add
sbbb
stos
push
mov
push
enter
mov
imul
stc
dec
cltd
mov
movsl
pop
jns
cld
sub
out
js
jb
hlt
cld
out
xor
in
dec
push
loope
or
xchg
xor
ss
cli
rcrb
push
adc
lret
ljmp
pop
in
mov
aaa
mov
or
pop
sbb
outsl
cmpsl
inc
mov
push
adc
or
loop
lcall
enter
xchg
ror
pop
pop
aaa
das
out
fisubs
clc
mov
out
dec
sti
push
or
jecxz
icebp
aas
cmp
iret
das
jns
add
xchg
and
popa
xchg
testl
xchg
dec
cli
sahf
or
iret
jp
arpl
jns
mov
pop
mov
je
sti
mov
and
xlat
loop
outsl
loop
adc
aad
pop
dec
inc
cmp
mov
dec
mov
pop
ljmp
sbb
push
push
or
sar
idiv
popf
mov
pop
add
jnp
sbb
mov
pop
pop
mov
out
push
movsb
rclb
cmc
pop
repz
test
dec
sahf
cli
inc
jnp
sub
into
jno
mov
insb
lds
mov
in
ror
mov
sub
dec
outsl
shlb
cmp
add
jbe
mov
adc
or
out
pop
mov
pop
dec
mov
push
ror
mov
dec
sbb
out
adc
or
arpl
outsb
inc
pop
ret
test
sub
mov
xchg
popf
cs
shrb
pop
pop
rorb
sub
movb
mov
test
cmp
mov
movb
pusha
jmp
add
mov
lea
jmp
jp
push
je
nop
mov
inc
loop
pop
imul
daa
stos
dec
out
pop
mov
cmp
push
stos
adc
popa
sbbb
push
mov
inc
lock
jno
fwait
pop
hlt
lret
pushf
out
lea
jae
add
addb
icebp
bnd
inc
pushf
sbb
pop
push
repz
fildll
adc
lea
mov
pop
jnp
jnp
aaa
xchg
xchg
sbb
daa
pushf
fiadds
jecxz
js
das
inc
lods
ss
mov
xchg
iret
pop
push
or
jle
shrl
xlat
mov
out
dec
jl
sub
in
fldcw
inc
xor
or
xor
lret
and
stos
xor
inc
inc
call
xchg
out
and
push
rorb
xor
test
shl
nop
or
push
int3
xchg
lock
hlt
test
mov
add
inc
int
inc
data16
adcb
loope
sub
repz
ja
mov
out
adc
or
sbb
pop
cs
int
xor
ljmp
lods
sbb
sub
data16
pop
jg
imul
mov
stos
shrb
push
or
mov
adc
imul
xchg
push
fidivs
sti
stos
sarb
or
lcall
mov
xchg
add
add
fdivr
int3
add
cmc
cmc
add
mov
cmp
stc
pusha
cmp
push
call
pusha
pusha
jmp
or
test
iret
je
add
fisubrl
sbb
and
push
inc
fwait
mov
pop
add
dec
push
xchg
jge
xchg
jl
in
mov
and
dec
mov
add
mov
mov
inc
int3
cmpb
test
lret
push
mov
in
das
int3
je
pop
lret
xchg
sbb
sarb
sbb
rolb
pop
mov
or
in
xchg
pop
push
inc
icebp
sub
addr16
inc
hlt
dec
xchg
sub
pop
dec
mov
dec
mov
xchg
addr16
lret
stos
test
push
push
push
pop
xchg
push
mov
lds
popl
xor
ljmp
xchg
fcmovnb
pop
scas
nop/reserved
imul
les
mov
cmp
inc
fs
fstp
add
fmuls
pop
cmp
movsl
faddl
int3
push
jo
xor
jno
pop
leave
mov
mov
push
pop
pushw
mov
mov
out
ja
lock
call
xchg
outsl
mov
xchg
add
jne
fildl
add
dec
ret
pop
xchg
int
jno
fs
jne
xor
xchg
fistl
in
and
nop
jno
fld
pusha
bound
xor
pop
push
mov
pop
or
jo
lock
cmp
sbb
daa
shlb
and
sbb
xor
push
push
pop
jnp
mov
xchg
xchg
jg
mov
cmp
fildll
inc
mov
pop
push
fstl
outsl
jns
inc
int
xor
mov
inc
ss
sqrtps
int
lret
push
sbb
sub
sbb
int3
rorb
nop
xorb
cmp
and
lret
pop
add
xchg
dec
movsb
lret
lods
ficomps
decl
cmp
xchg
inc
add
ret
adc
lock
and
scas
jns
nop
xlat
iret
clc
push
cmp
aas
pop
dec
inc
push
enter
popa
cmp
sub
adc
shrb
mov
sub
jle
dec
mov
and
sbb
jbe
push
movsb
aaa
jmp
jb
inc
mov
jnp
push
loope
pop
pop
mov
sub
jecxz
repz
add
mov
dec
push
clc
push
mov
clc
mov
and
xor
xchg
add
imul
inc
popf
shlb
ds
jae
and
data16
jo
mov
shrl
arpl
add
and
ds
xor
jmp
div
lea
adc
dec
shlb
lret
arpl
and
call
out
pop
cmp
pop
lds
jmp
loopne
in
loop
insl
sbb
ljmp
jbe
hlt
je
cmp
hlt
dec
sub
add
lret
cmpsb
jo
dec
jecxz
scas
push
fimuls
fldenv
cmpl
push
pop
pop
lahf
mov
or
xchg
aad
and
inc
or
sub
mov
pusha
mov
mov
clc
jbe
pop
mov
aad
into
pop
ret
pop
iret
xchg
mov
add
or
lret
stos
ret
and
fadd
add
addb
enter
add
bt
test
push
pushf
lea
jne
call
jmp
pusha
push
call
stos
mov
pusha
movb
movb
lea
jmp
push
repnz
mov
pushf
call
repz
pushf
pusha
movl
pushl
push
movb
movl
movb
movb
pushf
lea
jmp
xchg
adc
jae
in
mov
inc
ret
movsb
mov
push
add
mov
mov
sub
out
and
test
adc
hlt
gs
add
pop
inc
pop
repnz
push
fistpll
jae
push
enter
jg
xor
mov
cmp
xchg
xchg
or
jnp
enter
mov
jp
loopne
lret
jns
sub
cli
mov
mov
inc
scas
lret
adc
out
inc
lea
push
lea
call
pushf
pusha
adc
pushf
jmp
push
cmpsl
mov
add
push
lret
and
dec
adc
das
mov
mov
int3
testb
xor
adc
and
jmp
movsb
pop
xchg
movsb
iret
in
pop
pop
adc
outsl
pop
cmpsb
ds
mov
sub
rorb
adc
mov
mov
in
inc
pop
adc
sub
ss
movsl
pop
sub
out
sti
movsl
jle
ss
sub
sbb
pop
outsl
sbb
pop
inc
sbbl
pop
sbb
cmp
mov
fisubrl
mov
push
stos
lcall
aam
sub
inc
mov
repz
dec
popa
gs
and
mov
or
inc
loopne
stos
lret
loope
mov
add
roll
sbb
scas
popa
pop
dec
dec
popa
add
xchg
sbb
pop
dec
adc
aaa
jp
mov
mov
sub
mov
sub
or
out
aas
xor
xchg
inc
inc
loope
data16
stc
cmpsl
sub
pop
add
int
lea
test
add
pop
inc
cmp
mov
mov
test
mov
test
xor
sub
cld
xchg
xchg
xchg
cld
cwtl
push
mov
jge
jecxz
jle
jge
cmc
lds
ljmp
push
cli
rorl
cmp
pushf
out
aas
repz
hlt
mov
jmp
sbb
adc
insl
into
adc
sub
aad
dec
shl
adc
ret
lcall
mov
lahf
jne
inc
loope
pop
xchg
push
mov
sar
enter
ret
add
fildll
push
test
in
out
in
outsb
adc
in
mov
pop
insb
cmpsb
stos
cs
insl
sbb
pop
inc
jge
lret
les
jp
and
pop
adc
out
mov
pop
in
or
mov
enter
jecxz
dec
cltd
loopne
lahf
aam
scas
ljmp
popa
mov
mov
stos
ss
ret
popa
or
clc
aam
sbb
rclb
and
mov
cmp
mov
arpl
mov
enter
cmp
push
push
aaa
popa
mov
jl
les
mov
hlt
or
aaa
lcall
imull
mov
fmul
and
lret
mov
add
jle
pushf
call
push
movl
movb
mov
lea
jmp
cld
movsl
out
mov
addr16
std
out
stos
sub
inc
inc
fwait
sbb
dec
mov
andl
push
pop
lret
loopne
cmp
xchg
out
and
mov
sbb
cmpsb
mov
dec
fiaddl
sub
pop
arpl
sbb
adc
in
pop
xchg
mov
mov
jns
aaa
cs
pop
loop
cld
inc
fwait
push
adc
pop
and
and
enter
mov
sbb
dec
popf
jns
popf
jae
mov
jbe
ja
xchg
cmc
or
and
mov
push
xchg
repz
mov
dec
and
add
daa
mov
and
fisubrl
cs
jle
into
xchg
xchg
pop
inc
xchg
pop
mov
pop
push
jns
sbb
xchg
or
daa
je
xchg
jbe
and
es
fwait
jge
andl
mull
and
repnz
and
out
sbb
or
out
in
cmp
les
aad
imull
cmpsb
sbb
cmpb
dec
fs
in
int3
fcoms
test
sbb
test
mov
or
cmp
jge
mov
fstpt
mov
lret
mov
and
lret
fcoml
jae
mov
sbb
mov
out
test
iret
push
les
adc
push
and
add
jno
imul
xor
xchg
loop
sbb
in
cmp
std
cmpsb
mov
jp
mov
jge
xor
jmp
orb
mov
jno
mov
add
mov
inc
cmp
in
add
xchg
push
aas
pop
jnp
stos
in
in
jl
inc
ss
insl
aaa
ss
sub
nop
adc
xchg
les
mov
sti
mov
push
lret
jno
lret
repnz
unpcklps
popf
jno
ret
sub
add
lcall
je
dec
cmpsw
sub
add
inc
jbe
lahf
xor
adc
inc
cmp
mov
sbb
popf
dec
pop
mov
dec
cmp
mov
ret
pushf
pop
xchg
push
dec
adc
jp
mov
rcll
cltd
pop
sub
xchg
js
stos
mull
push
insl
sbb
inc
cmp
filds
cmp
mov
iret
repz
shrl
jno
inc
sub
mov
lret
xchg
shrb
repz
pop
sbb
stc
pop
mov
mov
mov
enter
inc
add
cs
jne
push
insb
enter
inc
sbb
les
pop
orb
push
or
pop
pop
mov
lds
shll
push
cmc
xor
lcall
int3
xlat
imul
movl
dec
push
dec
bound
lcall
pop
cmp
rcrb
jns
dec
sti
pop
adc
xor
retw
pushf
sbb
in
mov
adc
ror
pop
inc
xor
ret
outsl
push
je
adc
test
mov
mov
movsb
rcll
es
xor
mov
cmp
leave
adc
and
in
fwait
inc
dec
push
icebp
in
loopne
jnp
scas
std
dec
imul
inc
int3
daa
fiaddl
fildll
sbb
popf
in
cmp
fucom
mov
mov
sub
adc
or
dec
or
adc
add
jp
xor
mov
loop
mov
cmc
arpl
sti
shlb
rep
and
mov
sysenter
lahf
inc
add
std
fstpt
cmp
dec
lret
gs
test
xlat
cmpsl
dec
cmp
dec
ds
pop
inc
insb
repz
add
pop
pop
mov
sub
mov
es
loope
dec
jmp
cmp
jae
xchg
stos
jnp
or
ffreep
push
pushf
ror
adc
fsts
hlt
jl
stc
jg
or
clc
inc
xchg
outsl
clc
pop
and
movsb
out
inc
pop
cmpsb
ffree
sub
add
pop
scas
insb
je
sahf
mov
lea
ret
lods
pop
jmp
cwtl
bound
scas
and
push
stos
in
sub
dec
xor
mov
bound
outsb
movsb
scas
lret
xchg
out
pushf
movb
movl
movb
movl
push
jmp
pop
jb
cmp
notb
in
push
mov
cs
xor
adc
lret
mov
outsb
dec
in
pusha
fnstenv
rsqrtps
and
pusha
and
shlb
xchg
mov
push
enter
cmc
inc
js
xor
dec
aaa
das
out
jbe
int
mov
sub
mov
lds
and
loope
mov
cmp
sub
or
jne
adc
jl
jmp
sub
cltd
repz
pop
adc
mov
sbb
aad
pop
mov
mov
xchg
rolb
test
in
out
js
jb
jl
ja
icebp
push
and
jge
or
imul
dec
mov
sub
mov
lret
xchg
push
adc
add
movl
pushf
pushl
mov
lea
jmp
or
lods
lds
outsl
pop
sarl
jmp
lret
xchg
xchg
shl
iret
lods
fisubrs
lret
adc
ljmp
mov
inc
ja
sbb
dec
ja
les
mov
lds
xchg
fimuls
push
add
pop
aam
pop
pop
and
cmp
enter
aad
stos
lret
or
xlat
lea
jbe
cmp
stc
xadd
pusha
mov
sar
btr
stc
push
add
pushf
mov
ror
inc
lea
sub
add
neg
bt
movl
btr
movzbw
sets
call
or
dec
lahf
push
fistpll
jno
push
xchg
add
addl
add
mov
fiaddl
xor
xor
mov
out
movsl
mov
jp
fmulp
fimuls
idivl
dec
les
rcrb
test
add
iret
sub
cmp
push
out
xchg
mov
ss
iret
addr16
out
cmp
adc
es
daa
ss
pop
mov
and
dec
ret
out
shll
ljmp
xchg
fwait
dec
mov
out
arpl
pop
dec
aaa
das
xlat
jmp
bt
push
sub
clc
pushf
cmp
call
call
push
sbbl
pop
jecxz
cmp
je
imul
or
xchg
pop
adc
into
lds
movsb
in
mov
pop
xchg
icebp
cmp
push
push
push
add
lods
out
add
mov
xchg
pop
in
or
scas
sarb
sarb
sbb
hlt
push
sub
fucomip
daa
sbb
adc
cmp
jne
sbb
jmp
xor
ds
data16
scas
and
adc
pop
dec
ja
or
add
add
jg
push
pushl
movl
pushf
mov
pushl
lea
jmp
jmp
stc
pushl
popl
cmp
push
stc
pusha
cmp
movb
lea
ja
call
pusha
cmpb
call
mov
jne
pushf
movsbw
lea
pushf
push
call
lea
jae
or
mov
bsf
jmp
ja
addr16
movsl
or
ret
xor
imul
aas
ret
dec
scas
fcomps
dec
pop
pop
imul
jecxz
xchg
inc
test
pop
daa
sub
adc
add
pop
je
stos
or
and
fs
xor
lea
pushf
pop
scas
fsts
pusha
mov
test
jle
cmp
or
cmp
push
inc
mov
movb
xchg
cs
xchg
ja
mov
inc
dec
js
cs
and
inc
ljmpw
xor
sub
sub
pop
mov
lcall
push
lret
xor
and
sub
into
jmp
loopne
scas
adc
or
repz
push
das
rcll
lods
mov
or
ja
ljmp
dec
stos
daa
pop
loop
mov
aam
clc
out
fwait
mov
or
push
push
jge
inc
fiadds
xchg
out
add
xchg
mov
insb
sub
jmp
stos
aad
jmp
jno
fildl
enter
loop
and
jle
sbb
cmp
sti
daa
lret
mov
lea
ja
push
mov
bt
imul
jmp
adc
in
dec
int3
push
jp
cmpsb
outsb
xchg
pop
fs
cmp
xor
cmp
orl
jo
jle
mov
fnstcw
aas
jp
cmpsl
xor
mov
movb
cmp
or
mov
pop
and
or
loopne
mov
stc
shll
dec
rcrl
cmp
outsl
xchg
rorb
pop
fstps
xchg
mov
cld
lret
pop
inc
xchg
xlat
sbb
pop
push
xor
arpl
in
push
xor
psubq
pop
dec
sub
rcr
fisubrl
mov
pusha
call
inc
xchg
lret
xchg
mov
insl
sub
fdiv
pop
das
xlat
in
test
popf
cmp
sub
sub
and
cwtl
shll
lods
jbe
aad
cltd
xlat
and
lock
push
push
pop
sub
push
daa
std
dec
cmpsb
push
jp
sbb
or
fsubs
popa
rcl
mov
stos
inc
clc
leave
push
mov
mov
pop
push
push
or
mov
add
dec
fbstp
and
mov
outsb
add
pop
inc
xor
punpckhwd
push
inc
pop
cmp
pop
dec
push
sbb
pop
movsb
inc
clc
inc
cmpsl
sbb
insl
test
adc
fldenv
cmpsb
loope
test
push
fst
hlt
shll
ret
jecxz
pop
push
shrl
inc
outsl
imul
inc
imul
out
dec
sbb
jle
jno
xchg
stc
movsb
and
mov
repz
sub
jg
pop
outsb
cltd
push
mov
inc
rcll
sub
or
cmp
lock
arpl
jns
pop
aas
gs
popa
cmp
sbb
and
xor
push
and
or
inc
xchg
pop
dec
ljmp
rol
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
jmp
call
push
cmc
add
movw
pusha
lea
jmp
cmp
jmp
in
int
or
inc
cmp
sbb
dec
rorl
popa
xchg
in
mov
jo
lahf
ja
fcompl
and
sbb
fmull
pop
pop
cmp
dec
and
mov
push
mov
mov
cmp
xor
dec
adc
test
andb
push
je
push
mov
cmpl
push
mov
push
lahf
add
or
push
iret
xor
xchg
das
lret
nop
dec
popl
and
aas
scas
xchg
adc
int3
inc
push
jns
iret
pop
fiaddl
mov
sbb
sbb
jp
shlb
mov
in
xor
push
jp
movsb
adc
nop
cwtl
inc
clc
inc
mov
repz
mov
lds
sbb
mov
jecxz
adcb
hlt
xchg
push
call
out
jbe
lods
insb
sub
and
sbb
lret
push
push
dec
jmp
jne
sub
lea
xor
xchg
hlt
in
sub
fcomps
xor
pop
lret
sub
rolb
je
or
inc
and
leave
jmp
pushf
mov
lea
jp
push
pusha
jmp
pushf
lea
jne
pusha
call
sahf
pop
rcrl
mov
aad
adc
jnp
mov
repz
enter
add
pop
mov
jnp
into
imul
sbb
mov
enter
jo
push
jp
enter
sub
dec
inc
fists
xor
out
lcall
jl
mov
insl
out
add
jecxz
xor
sarb
dec
pop
pop
daa
cmc
ficompl
ja
bound
xor
cltd
shr
mov
div
mov
fwait
enter
repnz
movsb
ss
movsb
ret
std
push
fstpl
scas
leave
sbb
nop
cmc
push
mov
mov
inc
jae
xchg
in
jno
adc
sbbb
mov
popf
xor
jle
lret
sbb
sar
test
sarb
popa
xchg
sbb
in
cltd
loopne
xchg
inc
or
sub
outsb
test
jo
cmp
scas
adc
jl
mov
jl
jmp
and
lods
dec
and
lcall
adc
arpl
pop
fisubrs
adc
std
ss
mov
pusha
mov
mov
not
inc
jmp
lea
je
pusha
bt
add
call
xchg
sub
shrl
cltd
xchg
mov
lods
fbld
jbe
lret
fnstcw
outsb
fcmovbe
js
repz
adc
loopne
pop
aad
mov
mov
scas
fildll
loop
outsb
frndint
mov
les
xchg
jno
pop
pusha
push
sub
ljmp
bound
test
aaa
adc
mov
jp
je
dec
sahf
leave
sbb
inc
orb
xor
test
clc
test
mov
sbb
insb
lret
cmp
and
jae
call
ret
nop
lret
ljmp
cmpb
rcrl
inc
lea
dec
adc
in
pop
ret
sbb
mov
cmp
jecxz
ret
aas
popa
iret
mov
lret
inc
mov
mov
call
sub
std
xor
sub
call
test
xor
dec
jnp
pop
inc
aam
int3
mov
push
dec
stc
sbb
inc
in
faddl
jo
shl
std
daa
mov
push
or
xor
cmpsb
ja
jmp
pop
jne
pusha
push
enter
sbb
arpl
push
xor
mov
decl
mov
cld
mov
xorl
cmp
jne
nop
lods
and
lods
test
xor
jp
adc
fdivl
pop
jno
sti
frstor
std
cwtl
fnsave
data16
push
adcl
sub
stos
loopne
mov
pop
ja
inc
aaa
dec
ljmp
mov
addr16
inc
add
cmpl
in
inc
or
ret
sub
je,pn
mov
pop
pop
mov
lea
ret
xor
adc
out
call
hlt
inc
testl
in
jecxz
or
vpmullq
hlt
sub
xchg
mov
add
mov
cltd
mov
insl
das
mul
pop
and
cmp
int3
loop
insl
pop
test
inc
jne
and
pop
and
inc
dec
data16
push
cmp
loope
shrb
dec
iret
xchg
bt
into
dec
sub
dec
int3
cmpsb
les
lret
sbb
call
jo
lret
or
clc
pushf
pushf
neg
jmp
fisttpl
mov
aas
iret
add
fcompl
mov
clc
jg
push
out
loope
mov
ljmp
xor
push
mov
sub
icebp
mov
imul
das
insl
aad
mov
test
mov
movsl
sbb
xor
int3
ljmp
out
ret
in
mov
or
xchg
lret
mov
pop
fwait
mov
or
lret
mov
mov
movsb
jecxz
test
or
andb
jg
mov
lea
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
and
inc
jne
shrl
stos
mov
adc
stos
andl
mov
push
and
xchg
sbb
mov
push
dec
hlt
inc
xchg
inc
push
subb
mov
insb
loopne
insl
das
jmp
mov
mov
cld
ret
or
nop
sbb
mov
sub
push
mov
or
pop
xchg
outsb
test
clc
lds
xor
sub
mov
jmp
or
mov
lahf
cltd
cmc
insl
pop
std
stos
lret
hlt
outsb
icebp
xchg
notb
xlat
pop
nop
mov
add
fcomps
cmp
lret
mov
stos
dec
pop
add
and
pop
int
or
or
dec
or
mov
pushf
mov
jb
push
aaa
mov
jo
sub
scas
loope
inc
pop
xchg
in
shll
sbb
loope
adc
stos
repz
mov
sub
sub
cmp
das
inc
fadd
sbb
add
shl
push
cmp
mov
rclb
pop
adcb
enter
cmc
loopne
mov
inc
cmp
pop
xor
and
dec
adc
and
push
lret
cmpsb
xor
dec
dec
popl
scas
or
fildll
lods
mov
icebp
stc
faddp
int3
or
jmp
jg
loop
sub
push
jl
out
cli
mov
int3
inc
pushf
andb
data16
fildll
icebp
or
test
mov
or
lods
cmpsb
pop
or
imul
mov
or
adc
xor
jge
sbb
ss
sarb
inc
dec
ss
pop
fdivrp
ds
out
jg
jp
mov
lock
aas
ret
jg
sub
imul
or
negb
aam
int
ret
inc
add
push
push
sti
xor
sbb
fiaddl
movsl
mov
rclb
inc
mov
pop
lds
out
cmp
inc
outsb
sub
movb
dec
imul
out
ljmp
pop
pop
or
cmp
cwtl
or
pusha
ss
adc
daa
and
mov
adc
jp,pt
jge
ret
push
jp
mov
jbe
fwait
test
fwait
imul
xor
pushl
movl
pushl
mov
mov
push
lea
jmp
rolb
mov
gs
mov
pop
push
inc
andl
loopne
xor
hlt
shlb
jp
cmpb
test
and
xchg
jae
xor
sub
aaa
lods
pop
loope
xor
insb
fwait
sbb
mov
fimuls
and
out
scas
mov
jl
imul
push
or
outsl
adc
mov
movsb
push
mulb
mov
sbb
jecxz
lret
jo
jecxz
filds
sub
aaa
or
xchg
sti
or
jle
sarl
orb
jb
fmuls
mov
sub
clc
lods
xor
jle
loop
adc
pop
ja
mov
push
in
jns
add
jecxz
lret
mov
mov
adc
data16
popa
dec
pusha
mov
in
xchg
inc
rclb
rorb
cmp
insl
adc
jmp
and
shlb
lods
stos
sbb
mov
ljmp
dec
mov
sub
mov
inc
xlat
mov
imul
sub
push
mov
rolb
xor
in
pop
sbb
pop
shll
sub
call
adc
pushf
cltd
mov
inc
xchg
sbb
cmp
pop
push
out
jnp
cmp
fsub
lock
mov
sbb
pop
cmp
iret
movl
pusha
lea
jmp
lea
je
jmp
outsl
xchg
dec
pop
mov
push
sbb
gs
adcb
cmp
or
pop
icebp
add
and
mov
je
add
jp
add
xchg
repnz
loopne
xchg
cmpsl
imul
push
sti
rcrl
cmc
adc
and
mov
xchg
xchg
xchg
and
callw
sti
mov
xchg
push
xchg
fbld
mov
out
decb
pop
stos
in
jns
inc
imul
xchg
das
jnp
mov
xor
fidivrs
jmp
insb
add
pop
cmp
sbb
push
popa
nop
test
adc
shrb
dec
sub
pop
leave
inc
dec
pop
loope
inc
rorb
das
sahf
fsts
mov
pop
imul
sbb
iret
je
push
or
xchg
xchg
scas
dec
rorb
es
jno
mov
mov
push
add
pop
insl
rclb
add
sub
int3
mov
movsb
lret
or
sbb
pop
je
dec
sub
aaa
mov
imul
adc
lcall
mov
cltd
repnz
push
and
mov
fcomps
lods
inc
inc
in
xchg
lods
je
jae
sub
fldl
jae
fldl
pushf
test
dec
fs
outsl
dec
inc
mov
movsl
xchg
pop
into
loope
test
inc
mov
or
addb
cmp
cmp
call
out
inc
pop
sbb
ficoms
lret
mov
push
or
push
mov
or
mov
jb,pn
jp
jae
sbb
xchg
test
orl
xchg
cmp
xchg
mov
scas
adc
popf
mov
cmpsl
shll
xchg
mov
cs
fdivrl
ret
add
mov
push
xchg
iret
mov
std
popf
push
inc
outsl
push
scas
out
mov
mov
mov
sbb
xchg
xor
enter
adc
xlat
mov
xor
pop
and
ret
data16
shll
in
loope
pop
pushf
loopne
mov
push
cmp
aaa
pusha
dec
std
lods
or
fwait
in
cmc
mulb
nop
pop
jecxz
enter
mov
lds
and
rcrb
mov
fwait
sub
insb
cs
dec
mov
cltd
mov
dec
sub
popf
jo
mov
dec
or
pop
ds
inc
and
add
jmp
sub
std
add
rolb
dec
test
aam
xchg
mov
fldcw
mov
out
ljmp
mov
lcall
bound
outsb
out
call
mov
mov
xor
adc
sub
faddl
dec
or
xchg
mov
aaa
push
scas
lret
and
test
xor
add
insb
fdiv
data16
cmp
sbb
int3
insb
stc
and
aam
jne
fnsave
gs
adc
sub
ds
jp
xor
shrb
mov
leave
xchg
fadds
push
in
sub
mov
cli
clc
or
je
int
push
lahf
adc
sahf
mov
stos
pop
cmpsb
adc
std
push
gs
popf
add
mov
xchg
cli
sub
test
lret
aam
cmpl
inc
sbb
cmp
cmpl
in
js
adc
xor
fucomp
lret
dec
test
add
mov
decl
fs
jmp
lea
jne
not
aas
neg
xor
neg
mov
inc
sar
pusha
sar
add
shr
mov
clc
mov
test
call
inc
ja
jge
icebp
pusha
aas
pop
in
test
push
daa
lret
push
mov
push
insb
mov
xor
push
enter
popa
into
adc
sbb
cmp
mov
je
xor
and
fisttpl
adc
cmp
fsub
xchg
push
das
xor
leave
cmp
mov
fistpl
add
das
dec
adc
inc
pop
cmp
je
rolb
jbe
xor
cmpl
movsb
and
test
sub
mov
shrb
std
mov
shll
jp
or
in
test
sub
mov
add
mov
xchg
pop
sub
mov
add
add
adc
sub
or
cmp
push
imulb
out
cltd
cmc
push
cmpsb
ret
jmp
mov
icebp
mov
mov
out
lret
adc
cmpsb
test
nop
mov
sbb
pop
jo
mov
sub
mov
roll
xchg
jp
in
outsl
out
das
jle
mov
inc
loope
iret
push
fidivrs
stc
xor
sub
mov
mov
xor
add
xor
in
loop
fmull
mov
mov
xchg
out
dec
movsb
out
xchg
cli
inc
pop
pop
lret
mov
jae
fsubrl
ljmp
pusha
or
pop
jb
mov
and
push
adc
sbb
in
addb
mov
push
add
int
test
bound
push
lahf
sub
add
mov
pop
jmp
ljmp
popf
pop
jle
mov
xor
ljmp
xchg
nop
ljmp
je
lods
add
dec
add
or
inc
adc
mov
in
mov
cs
insb
inc
sahf
out
adc
dec
mov
ds
mov
jmp
mov
cli
faddp
inc
and
scas
std
fstps
aas
rol
lea
jmp
roll
xor
sub
bound
mov
nop
xchg
int3
push
aas
xchg
rol
or
test
sub
and
push
rclb
outsl
jmp
int3
adc
lcall
clc
sbb
scas
pop
xor
out
xchg
xor
std
inc
mov
aas
shlb
std
stos
push
pop
mov
dec
ret
data16
dec
sub
shrl
inc
test
mov
mov
mov
push
jg
xchg
mov
data16
arpl
xor
fbstp
daa
push
push
test
fldl
in
xchg
fisttps
push
repz
or
call
adc
push
imulb
push
fsubr
bound
daa
mov
shlb
enter
je
ss
lea
pop
sub
cmp
xor
sub
mov
push
sub
xchg
mov
sub
xor
inc
pop
into
std
mov
push
enter
dec
cmp
daa
cmc
loope
push
out
cmpsl
lock
mov
pop
mov
divb
and
push
mov
jae
testb
pop
lcall
mov
imull
daa
pop
xchg
nop
jmp
or
cmc
iret
push
adc
sbb
lret
or
inc
push
dec
xchg
xchg
mov
xchg
mov
sbb
mov
and
fs
stos
xchg
sub
arpl
jle
add
fldenv
cmp
xchg
xlat
mov
xor
insl
jmp
popa
jo
inc
add
jle
cwtl
insl
adc
std
mov
stc
out
fsubs
cmp
xor
xchg
out
sub
inc
mov
and
imul
adc
mov
rcrb
jmp
sub
movsbw
setns
mov
jmp
jmp
lea
clc
pusha
clc
sub
stc
bt
pushl
popl
bt
pusha
bt
cmp
push
mov
jmp
push
mov
int3
fs
repz
ret
mov
loope
fdivrs
rorl
lret
dec
out
pop
xchg
fs
mov
aam
mov
lret
lods
dec
arpl
mov
cmp
cmp
in
xchg
push
mov
shr
mov
bound
xchg
jnp
int3
hlt
in
sbb
sub
test
clc
sbb
jbe
aad
data16
xchg
adc
lret
aas
aaa
sbb
xor
outsl
push
adc
jno
pop
adc
mov
pusha
cmpsl
or
movsb
cmp
addr16
insb
xchg
outsb
pop
sub
cmp
daa
dec
js
dec
pusha
push
mov
cld
mov
add
jb
fsubrs
ljmp
jns
movsb
pop
xor
jge
xor
leave
push
sub
push
stc
sub
xor
scas
scas
stos
dec
mov
subb
push
jle
gs
mov
sub
movsb
pop
orl
push
adc
jb
fstl
mov
adc
je
jae
xlat
bound
mov
rorb
movsl
jecxz
scas
pop
ds
inc
sub
pop
orb
lods
dec
sbb
sbb
out
xor
mov
inc
jecxz
jne
adc
push
lret
xlat
and
jne
mov
mov
mov
insl
inc
lock
sti
fs
sarl
pop
fdivrs
sbb
xchg
or
lret
stos
cmp
adc
insb
cmp
xchg
or
dec
mov
sahf
inc
fidivl
out
cmp
into
je
hlt
xlat
inc
mov
scas
shll
jno
pop
and
jns
std
shl
fdivl
dec
mov
pop
and
imul
sbb
xchg
ljmp
cmp
cmp
out
cmpsb
lods
pusha
and
add
pop
add
or
adc
jno
sarb
call
cwtl
or
roll
les
adc
push
imul
icebp
jmp
xchg
sub
aas
test
jnp
call
push
mov
and
jl
mov
mov
ja
std
cmp
rcr
andl
jl
ret
stmxcsr
mov
dec
jge
cs
push
mov
shl
mov
and
jle
dec
or
xor
cmp
movb
je
addr16
dec
xor
xor
push
jmp
xchg
dec
cmc
xor
and
and
dec
js
add
pop
in
clc
mov
inc
or
pop
subl
adc
stos
or
push
loope
push
subl
push
pop
cltd
les
or
sarb
stc
aaa
inc
std
imul
push
fnsave
mov
fwait
stc
xchg
lahf
dec
mov
dec
and
fsubs
add
pushf
lock
movsl
adc
jmp
lods
inc
xchg
pop
adc
int
enter
pop
into
and
or
out
jl
cwtl
push
mov
push
push
xor
inc
insb
dec
cmpsb
or
in
inc
mov
pop
stos
out
fidivrs
xor
xchg
or
pushf
fs
aaa
push
pop
mov
stos
lea
int
cmp
icebp
test
cmpsb
not
sub
es
inc
or
mov
lock
mov
push
jle
or
ljmp
xor
push
aad
cs
mov
adc
cltd
adc
push
lahf
jmp
jmp
loop
add
xchg
mov
dec
scas
xchg
call
sub
add
std
popf
adc
ss
out
sub
fcomp
mov
clc
mov
mov
dec
jbe
pop
mov
jnp
add
fadds
mov
sub
stc
pushl
xchg
jp
pop
lds
adc
xchg
addr16
xchg
test
xchg
cmc
push
aas
push
xlat
mov
out
cs
insb
xor
pop
out
jg
pop
je
xor
and
and
out
cltd
ret
and
pop
and
pop
outsb
fwait
pop
dec
fildll
push
loope
pop
sbb
pop
inc
and
pop
xchg
test
sbb
and
push
loop
and
scas
mov
fnsave
cltd
xor
xor
cmp
push
call
adc
cltd
shl
std
dec
push
rcll
lahf
out
sbb
mov
sbb
inc
outsb
sub
sub
mov
jge
add
inc
or
jle
insl
mov
stos
rcrb
fldl
mov
dec
or
jecxz
repz
das
dec
aaa
dec
cmpsl
sbb
dec
jmp
aaa
or
fbld
imul
fxch
inc
cwtl
push
mov
dec
fldl
push
cmc
bound
dec
sub
aas
xchg
dec
stos
mov
shl
mov
bound
int3
lea
sahf
in
scas
jns
js
sub
sub
clc
xor
shrd
in
mov
pop
cmpl
or
sahf
aaa
jne
cmpl
int3
add
mov
adc
mov
scas
test
loope
sti
fists
out
lcall
testl
mov
push
cmpsl
loope
push
push
das
in
inc
into
xlat
jl
cmpsl
jl
mov
jg
shll
int3
or
sbb
fidivrs
lods
loopne
and
rcll
and
mov
jbe
repz
fs
inc
sub
cmp
sub
push
xchg
inc
aaa
adc
je
aas
in
sub
dec
icebp
lcall
and
cmp
sahf
sbb
cmc
push
dec
arpl
js
pop
adc
xor
aam
dec
cmp
mov
jmp
inc
mov
jo
cmp
loope
mov
mov
subb
out
cmp
out
aas
lret
or
pop
xor
xchg
sahf
xchg
es
dec
lcall
ss
push
mov
int3
adc
cltd
xor
inc
mov
jle
popf
mov
repz
lcall
jne
stc
dec
inc
call
xchg
mov
nop
pop
jecxz
insb
cmp
sarl
pop
push
jne
pop
push
es
je
push
add
out
inc
bound
in
cmpsl
or
mov
jg
bound
add
rorb
sub
leave
fnstcw
lods
subb
cmc
push
mov
mov
sbb
cmpl
mov
jbe
push
adc
rcrb
fcoms
stos
data16
out
test
push
sahf
aad
repnz
xchg
add
sub
repnz
mov
popf
or
repz
push
mov
xor
sub
ret
xor
and
xor
sub
jl
cld
xchg
add
and
leave
fsubl
mov
inc
movsl
dec
inc
mov
mov
add
enter
inc
xor
xlat
shrb
mov
lcall
jmp
ss
mov
mov
cmp
push
lds
xchg
aas
adc
insl
mov
or
jns
cmp
mov
pusha
cmp
daa
aam
jg
loop
jb
popf
cmpsb
add
mov
xchg
sbb
cwtl
test
mov
sbb
insl
clc
orb
mov
mov
stos
jb
inc
pop
jmp
jecxz
jb
cld
out
in
pop
xor
test
or
xchg
cmpsb
sbb
xchg
pop
test
jns
outsl
shl
jb
inc
int3
sub
fsubl
or
lret
xlat
lods
xchg
aad
adc
mov
or
or
cltd
les
and
jp
insl
xchg
pop
cmpsb
in
cmp
push
add
push
pop
enter
sbb
pushf
jns
psllq
std
cmp
dec
and
aam
push
aam
mov
rcr
cmp
dec
gs
and
inc
adc
or
xchg
mov
in
into
scas
icebp
push
ret
scas
mov
mov
jge
dec
inc
mov
stos
repz
mov
cs
outsb
pop
sub
xchg
int
xchg
xchg
dec
xor
sbb
clc
mov
mov
rcll
lea
or
mov
or
xor
inc
lods
movsl
jb
out
hlt
imul
mov
out
scas
enter
jno
loop
lock
ret
sub
iret
pushf
clc
mov
mov
arpl
subl
xlat
mov
xor
lds
ss
xchg
cmp
leave
pop
ljmp
test
mov
faddl
dec
popf
inc
scas
cld
jecxz
dec
adc
xor
ficoml
dec
mov
dec
jl
jbe
fs
mov
jo
mov
insb
movsl
in
call
sbb
rorl
pop
movsl
xor
lcall
stos
out
cmp
mull
aaa
int3
in
jo
lret
daa
mov
dec
xchg
in
mov
nop
mov
pop
int3
jo
xchg
pop
lds
enter
sahf
test
int
lods
decb
add
fs
jecxz
mov
dec
stc
and
and
das
push
jo
repz
cmc
fisubl
push
add
jns
mov
dec
mov
cwtl
shrb
in
enter
lock
jle
ret
xor
and
nop
xchg
cltd
mov
sub
xor
dec
add
jb
push
iret
mov
push
mov
sub
mov
jnp
arpl
adc
mov
insb
sbb
xchg
aam
inc
pop
stos
push
sbb
sbb
jo
subb
adc
rorl
ljmp
lods
cwtl
cmp
xor
scas
lcall
testl
movsl
adc
push
cld
daa
in
cmp
jmp
movsl
sbb
pop
mov
mov
sub
in
mov
aas
push
mov
add
pop
sub
push
xchg
hlt
mov
lret
jp
mov
cmp
cmp
add
imul
pop
cli
in
insl
dec
test
mov
notl
lahf
sub
pop
test
pop
stos
scas
pop
or
cmpl
jmp
jbe
je
sub
int
aam
jg
sbb
mov
cli
lahf
or
cs
aas
and
sti
in
add
cltd
mov
jge
test
subl
ficoms
xchg
movsb
into
add
dec
addr16
stos
ljmp
js
dec
pop
xor
fs
lea
stc
popf
mov
pop
mov
mov
mov
test
lcall
xlat
jle
xchg
fwait
arpl
pop
cmp
in
scas
jmp
sbb
xchg
lret
cmc
push
cltd
out
ss
das
sub
out
aas
lret
cmp
ret
ja
mov
pop
inc
add
mov
push
out
dec
xchg
fistl
adc
subl
add
imul
inc
out
add
mov
jns
push
xchg
sub
mov
mov
outsw
cmp
push
xchg
out
imul
iretw
je
lds
cli
out
fwait
mov
mov
mov
xor
mov
pop
bound
flds
inc
and
push
inc
lock
int3
cmp
call
mov
jns
popf
imul
mov
cwtl
in
mov
xchg
frstor
rolb
sbbb
cmpsb
popf
test
inc
ja
xchg
mov
pop
mov
pop
jae
pop
movb
les
cmp
and
inc
pop
pop
mov
inc
mov
sub
flds
addr16
rcll
outsb
cwtl
jne
test
int3
cmc
cld
push
cmp
sti
mov
loop
mov
pushf
jns
shrl
inc
dec
mov
les
fcmovnbe
jl
jge
repnz
mov
sub
push
imul
xchg
lods
mov
push
mov
jge
lods
push
sbb
sub
jle
mov
imul
adc
adc
mov
adc
adc
sbb
stos
adc
mov
ds
dec
and
subl
popa
cs
xor
rcrb
mov
adc
call
fiaddl
in
sub
dec
mov
loope
xchg
cmpb
mov
inc
pushf
mov
dec
cs
std
mov
jno
add
add
ja
push
popf
in
jns
adc
dec
les
and
adc
inc
and
pop
sub
pop
jae
or
dec
icebp
dec
cltd
xchg
adc
mov
jo
sahf
inc
sub
test
pop
mov
lock
les
mov
jno
or
out
sub
rolb
pushf
mov
push
inc
psubq
sub
cmp
dec
fstps
cmp
and
icebp
pop
repnz
dec
addr16
mov
or
adc
push
flds
push
seta
sub
cmp
popa
mov
aam
inc
repz
cmp
or
out
xorb
xchg
push
insl
jl
dec
xchg
xchg
stc
jo
rcrb
frstor
mov
repnz
arpl
xchg
aam
mov
mov
pinsrw
xor
cwtl
lods
adc
enter
ficoms
lods
fcmovnb
mov
stc
scas
in
add
push
jbe
xchg
cwtl
mov
mov
lods
cmpsb
push
xchg
jo
dec
dec
loope
jp
adc
add
mov
subl
ljmp
sub
test
insl
outsb
jecxz
mov
add
sbb
push
das
in
pop
out
les
jne
jge
in
in
xchg
dec
cli
push
icebp
rcrb
js
mov
lods
cmpl
inc
sub
jecxz
mull
fldenv
push
insb
push
out
sub
mov
pop
cmp
test
fidivl
arpl
pop
sbb
sub
aaa
jl
lods
push
scas
call
pop
xchg
jle
int
loopne
cmp
lahf
inc
daa
enter
push
sbb
or
mov
cmp
insl
shlb
and
daa
push
pop
cmp
aam
push
sbb
movsl
adc
insl
mov
jns
hlt
and
jcxz
rclb
sbb
mov
jge
adc
inc
lcall
roll
push
jmp
int
outsb
and
jge
mov
mov
rcrb
aam
pop
subl
mov
mov
cmp
loop
jb
clc
aad
push
pusha
mov
mov
test
pop
mov
xchg
mov
dec
jno
shrl
push
sbb
xor
push
inc
mov
test
lods
out
inc
jmp
out
cltd
ret
lods
sub
pop
mov
mov
mov
dec
jno
add
rep
jmp
push
dec
out
mov
insb
cmp
and
adc
add
push
pop
adc
fdivrl
imull
push
add
mov
sarb
jns
hlt
ss
lods
and
adc
ja
lret
out
adc
mov
cli
xor
xlat
push
fistps
mov
cmp
fisttps
sbb
or
cltd
lahf
sti
dec
test
sarl
xor
push
test
dec
fsubl
shll
dec
add
out
jp
or
mov
jno
in
pop
outsl
sbb
sarb
outsb
arpl
mov
repz
fs
fcmovnbe
xchg
je
inc
push
jge
mov
or
in
test
jmp
out
or
push
add
mov
add
aaa
in
dec
mov
sbb
lock
dec
pop
ss
loope
inc
dec
push
mov
mov
lods
xchg
cmp
aad
mov
sti
cmp
cmp
add
push
add
dec
add
mov
lret
add
scas
xchg
inc
jle
sbb
or
popf
aas
adcl
xor
push
ds
cwtl
pop
push
mov
std
sbb
mov
fistpll
mov
jne
xor
inc
pop
lahf
inc
mov
int
aam
add
out
sahf
xlat
add
push
inc
jmp
ss
push
cli
scas
ja
out
pop
push
out
pop
and
iret
jle
mov
ret
pop
sbb
xor
test
xor
mov
cmc
fiadds
add
xchg
push
mov
mov
inc
lret
mov
xchg
jecxz
fidivrl
pop
lds
repnz
xchg
popa
imul
inc
cs
inc
fwait
push
cmp
jl,pt
xor
arpl
mov
mov
push
dec
lahf
frstor
or
pop
movsl
or
insb
adc
loopne
jo
dec
mov
mov
sub
mov
stc
jp
out
ja
push
sbb
xchg
cmp
aad
mov
inc
push
mov
xchg
add
loopne
dec
or
dec
xchg
inc
inc
mov
nop
sub
mov
cmpsb
ljmp
jne
xor
pop
and
in
or
jae
xchg
lahf
lea
mulb
inc
cmove
add
dec
int3
imull
fdivrp
dec
movsb
and
xor
push
xor
jno
sbb
jg
jge
add
fwait
mov
rolb
lods
pop
push
scas
and
sub
or
shlb
xor
int3
push
cmp
fwait
shl
jne
push
dec
jnp
lods
in
xchg
lods
sub
pop
mov
pop
rorl
push
mov
loop
inc
mov
cli
test
lea
mov
inc
dec
xchg
pop
dec
mov
add
lret
push
jb
and
push
xor
push
cmp
in
pop
inc
or
mov
mov
or
popf
pop
cmpsl
push
push
xchg
rcll
jns
shll
and
cltd
test
je
mov
adc
or
cmp
dec
das
dec
cmpsb
add
mov
xor
icebp
pop
iret
aad
inc
sbb
inc
jmp
adc
les
ja
rorl
gs
scas
loope
fildll
or
sbbb
imul
and
xchg
xchg
sub
add
xchg
sahf
imul
mov
cmpsb
fildl
and
jae
push
inc
and
mov
faddp
ja
out
sub
xor
mov
mov
std
mov
jne
cmc
insl
dec
mov
xor
hlt
xor
mov
xchg
loope
in
hlt
imul
jne
movsb
lods
das
jns
fmul
in
sbb
lahf
dec
mov
nop
inc
clc
out
dec
push
mov
test
add
fwait
jl
je
negl
mov
or
aaa
int
popa
fldenv
lock
dec
xchg
in
sub
jp
add
jl
test
shll
fimull
xor
jle
add
and
addr16
mov
mov
cli
ljmp
pop
dec
cwtl
shrb
xchg
lret
inc
sahf
fwait
pushf
jecxz
push
outsb
mov
repnz
mov
mov
push
jp
ja
fildl
addr16
jns
std
jmp
sbb
cmp
test
and
pop
mov
imul
dec
cwtl
call
or
mov
int3
jbe
mov
ror
add
js
lock
sub
subb
pop
fldt
jg
int3
push
rol
pop
jnp
sbb
bound
inc
mov
push
int3
lret
lret
or
push
mov
ja
scas
decb
mov
sub
xchg
sbb
leave
push
cwtl
and
nop
inc
mov
insl
pop
inc
cli
dec
mov
push
jecxz
sub
nop
sti
xor
mov
fnsave
pop
stos
loopne
dec
xlat
inc
fwait
dec
sti
xchg
shrb
pop
loopne
clc
lods
fcoms
or
mov
test
xor
lahf
leave
and
xchg
fimull
and
insb
sbb
dec
push
outsl
mov
aas
sti
jl
inc
or
jo
pop
mov
push
inc
xor
cld
iret
js
mov
insb
shlb
add
das
std
loop
mov
and
jl
mov
sbb
daa
pop
jmp
sub
mov
add
jl
pop
dec
lahf
cmp
aam
push
push
xchg
mov
xor
cmpsb
in
je
stos
das
adc
sbb
or
cmp
sbb
add
pushf
mov
inc
pop
sahf
leave
xchg
dec
add
fisubrs
xor
pop
decb
sbb
ret
pop
jp
ds
push
xchg
icebp
cmpl
mov
push
mov
jmp
or
xchg
cmp
scas
cwtl
and
test
pushl
jo
pop
out
mov
lret
adc
stos
imul
sub
insl
lods
lcall
sbb
ret
mov
dec
je
mov
bound
das
rolb
into
enter
inc
sub
mov
scas
jecxz
inc
jbe
out
sarb
in
gs
sahf
mov
sub
insb
sub
jmp
xchg
inc
xchg
and
test
popf
inc
sbb
inc
pop
push
sbbb
pusha
or
or
inc
daa
icebp
fwait
push
movsl
mov
mov
imul
xor
xor
lods
and
bound
jmp
nop
leave
and
bound
sbb
push
mov
mov
xchg
in
call
mov
and
mov
and
dec
lcall
cmp
rorb
inc
sbb
lahf
out
aaa
in
nop
lods
ds
fpatan
insb
xlat
add
insb
dec
popf
sub
sahf
or
mov
inc
insl
push
roll
xor
not
push
mov
fs
jmp
inc
xchg
rcll
negl
cmp
dec
testl
push
sahf
test
pop
outsb
mov
scas
test
sbb
fmull
mov
and
dec
jae
dec
int3
leave
jo
or
lock
lret
rcll
test
cmp
xchg
mov
adcb
xchg
xor
xor
mov
subl
lahf
cltd
aam
ljmp
add
into
stos
mov
test
dec
lret
shl
push
xchg
shll
adc
ds
cmpsb
gs
cli
das
push
pop
add
adc
in
cld
xor
push
pop
inc
cmpsl
adc
or
inc
outsb
pop
popf
stc
in
ja
xchg
adc
mov
cwtl
cmc
in
xchg
mov
inc
jo
stos
adc
cmpl
mov
push
push
mull
mov
mov
lds
fcos
cmp
mov
xor
pushf
lds
aam
outsl
and
out
push
js
aam
stos
rorl
adc
ret
xor
call
xchg
or
fwait
movb
add
sub
imul
and
cmp
into
and
sti
imul
dec
jge
dec
or
lret
xor
data16
in
imulb
lea
sahf
jmp
push
mov
sub
bnd
neg
mov
mov
in
add
mov
adc
aam
mov
jne
or
sti
inc
mov
ds
outsl
xchg
adc
cmc
dec
push
dec
nop
mov
mov
xchg
lods
dec
sbb
imul
fldt
cmc
stos
aad
mov
lahf
fucom
mov
pop
pop
jns
xchg
jle
pop
shll
push
into
je
divb
jmp
xlat
sbb
mov
sbbl
push
sbb
add
int3
mov
fwait
out
add
loop
movsb
mov
repz
xlat
daa
push
lods
pop
imul
mov
cmpsb
inc
pop
cs
clc
cmpsl
call
js
pop
mov
pop
je
cld
push
push
sbb
jno
sub
jb
out
mov
or
mov
push
cmp
in
rcll
cmp
inc
mov
daa
xchg
add
stc
daa
mov
add
mov
mov
int3
add
testb
mov
out
mov
mov
in
popa
cli
xchg
or
cwtl
call
scas
pop
in
cmpsb
hlt
outsl
jmp
mov
jg
loopne
and
enter
push
dec
rol
jle
aas
popf
or
jae
adc
xor
pop
in
lods
inc
mov
pop
pop
sbbb
imul
inc
test
pop
sbb
push
sbb
das
inc
add
jns
fiaddl
mov
jns
in
push
add
push
jo
imul
stos
sarb
loope
imul
scas
mov
daa
jmp
stos
popf
dec
shl
bswap
jne
popf
pop
shlb
ret
imul
dec
dec
sbb
add
cmp
in
inc
ret
fidivl
inc
xor
sbb
mov
loope
sahf
adc
pushf
push
das
pop
addr16
sbb
lahf
inc
jg
mov
jp
icebp
aaa
cmp
dec
cli
inc
popa
xor
adc
xorb
lret
adc
in
in
js
pop
pop
fistps
pop
imul
mov
sarl
jecxz
push
cmp
mov
sub
add
out
sbb
and
pop
xchg
cmc
push
lods
scas
push
mov
rcll
sti
js
and
sbb
loope
push
sbb
imul
sbb
dec
insl
movsb
data16
test
into
fstpl
fpatan
or
insl
sub
pop
ret
bound
pop
int3
dec
mov
pop
jne
sarb
sti
aad
push
or
sub
lcall
inc
and
movl
push
pushf
pushf
mov
lea
jmp
or
sub
jae
jo
cmpsb
jl
notb
mov
mov
js
adc
dec
sbb
jmp
test
adc
jg
push
cmp
jg
sub
in
adc
repz
xor
mov
mov
addl
cs
cmp
lcall
fwait
push
xchg
push
lahf
repz
jns
sub
sbb
pop
sahf
popa
and
mov
and
push
or
add
xchg
lods
mov
ljmp
jg
divl
jae
sti
mov
adc
pminub
cmp
pop
sbb
es
ret
insl
dec
sbb
lock
stos
dec
sbb
jo
jmp
mov
jmp
or
in
ss
sar
data16
lods
into
inc
stc
push
fnsave
dec
dec
push
aaa
inc
lret
repnz
inc
xchg
xor
es
int
inc
pop
movsl
lret
adc
lock
rolb
outsl
push
push
cmc
ret
and
loope
cmc
xchg
jae
pop
sbb
imul
insb
add
inc
and
inc
rol
push
mov
cmc
test
jmp
pusha
push
jmp
in
jno
cli
push
or
add
in
pop
leave
sub
rcrb
insb
outsl
jne
push
dec
mov
imul
in
int3
ret
ret
xor
push
mov
addr16
jge
aaa
push
and
push
stc
jle
cmc
test
jae
sbb
out
testl
das
fidivs
add
dec
dec
jp
lret
mov
rolb
dec
icebp
xchg
or
xchg
xor
pop
pop
ss
negb
push
fimuls
lods
xor
js
mov
xchg
test
xchg
mov
cmpsb
and
fiadds
mov
dec
jp
xchg
inc
loope
pop
xor
clc
push
pusha
inc
sbb
dec
adc
test
xchg
add
daa
fisttps
sub
subl
add
cmp
mov
and
pop
lcall
add
shl
std
outsl
push
lahf
pop
cwtl
stos
mov
rcrb
outsl
insl
arpl
xor
fs
insb
add
adc
xor
movsbw
pop
bswap
jp
bswap
pushf
mov
xchg
mov
mov
pop
mov
push
mov
bswap
pushf
mov
mov
pushl
ret
pushf
call
jo
stos
pushf
lea
jmp
jo
add
push
pusha
adc
mov
inc
inc
fsubr
sub
lahf
dec
pop
and
lods
shr
xchg
cld
cmp
jp
mov
add
movsb
iret
in
int
sbb
sub
cmp
fdiv
xchg
nop
mov
or
lret
lea
fsts
pop
sbb
push
flds
dec
or
int
dec
data16
pop
or
or
stos
pushf
cwtl
cli
push
insl
inc
ljmp
imul
int
mov
sbb
lret
leave
popa
icebp
negb
dec
scas
jl
cmp
xor
cld
xor
test
out
sub
mov
pop
lret
out
sahf
popf
into
daa
xchg
shll
aam
adc
dec
sub
xor
pop
test
xchg
int
int
dec
mov
dec
mov
fs
arpl
push
sahf
xchg
push
mov
adc
jge
push
jecxz
jno
insl
mov
cmp
popa
and
inc
jne
test
push
scas
add
nop
mov
cmpsl
push
cmpsl
je
push
movsl
add
sub
mov
add
iret
lcall
xchg
cmp
cli
inc
movsbw
push
pushf
push
lea
not
bt
cwtl
not
sub
aad
shld
or
bsf
push
rol
mov
aad
push
or
push
not
shr
cmc
push
mov
bswap
mov
clc
pusha
test
mov
push
movb
lea
je
mov
bts
mov
cmp
bt
add
call
movb
ror
jmp
cmc
cmp
push
call
rep
pushl
movzbw
mov
pushf
movw
lea
jmp
jb
cs
lahf
lods
dec
add
in
lcall
adc
scas
dec
int3
loopne
jne
and
ret
jo
pusha
lock
mov
shll
mov
xchg
and
pop
xchg
js
mov
mov
xchg
nop
cmpsb
push
bound
adc
sbbl
and
sbb
xor
lcall
xchg
fwait
pop
sub
add
dec
pop
cmp
bsf
mov
repz
dec
add
rol
ja
sbb
lret
lds
and
repnz
jl
pop
cmp
jo
pop
xor
cmpsl
inc
movsb
xor
push
movsb
xor
mov
pop
loopne
hlt
enter
inc
insb
lcall
pop
loop
xchg
pop
arpl
dec
mov
xchg
fsubr
ds
mov
mov
xchg
mov
sbb
cmc
or
xchg
loop
nop
dec
adc
sbb
sub
popf
daa
mov
lahf
push
icebp
xlat
call
pop
pusha
movsb
hlt
ror
into
les
subl
xchg
pop
ret
xor
dec
sahf
leave
xor
xor
mov
orl
sbb
int
jns
cltd
xchg
lret
jp
imul
cmp
cwtl
mov
push
lret
daa
decl
fbstp
sub
mov
sar
lods
and
push
incb
clc
fwait
dec
push
sbb
fistpl
mov
fldt
mov
movsb
cmpsl
inc
pop
xor
xchg
lahf
and
pop
pushf
cltd
out
das
test
mov
insb
cld
clc
xlat
fisttpl
xor
cmp
mov
push
jb
push
cmp
test
lods
sub
and
sbb
hlt
cs
in
lods
stos
fisttpl
ljmp
lahf
cmp
adcl
adc
scas
ja
cltd
mov
aas
and
and
ds
fs
xchg
sub
mov
popf
pop
mov
or
testl
popf
pop
sbb
push
xchg
and
out
jns
je
ds
hlt
xadd
xchg
js
pop
or
sub
subb
mov
sarl
cmp
push
outsb
dec
jge
shr
out
test
pushf
xlat
lcall
lds
cmp
lahf
mov
js
jns
push
imul
dec
or
push
mov
out
or
lret
dec
jno
loope
dec
in
add
pop
dec
inc
sbb
inc
mov
stc
dec
jb
push
addr16
sub
out
ds
mov
pop
aad
xor
shll
mov
inc
jl
gs
test
inc
xor
sbb
loopne
mov
dec
sarb
lea
ret
lahf
je
xor
mov
sbb
mov
and
cld
imul
pop
add
xchg
xlat
xchg
jmp
js
dec
std
and
mov
mov
stos
and
dec
pushf
mov
dec
mov
pop
outsl
movsl
mov
lret
loop
ss
mov
pop
jo
ss
pop
mov
dec
pop
into
sub
idivb
pop
es
pop
nop
push
scas
sub
and
adc
pushf
fsubrl
lods
mov
cltd
jo
std
mov
cmp
xor
mov
insb
mov
adc
lea
or
out
jp
dec
pop
aad
mov
pop
cmp
push
sub
jne
jmp
jae
rcrb
ljmp
outsl
sub
bound
daa
je
xchg
shl
lock
lods
shlb
mov
iret
or
aam
shr
subb
sti
fwait
mov
pop
jno
inc
mov
xchg
add
sbb
test
lods
sub
cmp
and
fmulp
nop
lock
and
cli
or
ret
in
mov
fdivrs
into
movsl
subb
ds
sbb
pop
add
inc
and
add
lods
pushf
movl
push
movb
mov
lea
jmp
and
and
push
mov
pop
push
and
arpl
adc
xchg
rclb
imul
jmp
cmp
daa
leave
cltd
adc
jbe
cmpl
jp
imul
pop
movsl
xchg
cmp
add
jae
push
jo
fwait
mov
test
mov
daa
mov
decb
movsb
in
lods
cmp
enter
inc
inc
push
loop
xor
dec
or
subb
in
jp
mov
push
icebp
push
mov
arpl
cmp
xor
mov
aam
in
push
cwtl
sbb
sbb
jge
or
lcall
mov
mov
jo
or
rorl
fsub
ja
adc
pop
mov
movsl
jg
adc
mov
pusha
cmp
xor
lea
call
pusha
push
jmp
push
add
sub
int3
xlat
mov
push
aam
jbe
imul
rolb
push
sub
mov
pop
jp
xchg
ret
es
pop
mov
pop
es
dec
mov
mov
adc
and
inc
jae
ss
dec
pop
bswap
pop
mov
in
sub
dec
out
pop
mov
outsb
sub
into
pop
scas
add
inc
adc
cmpsl
in
out
in
shlb
push
iret
bound
std
cmp
mov
dec
mov
add
sbb
mov
cmc
outsl
inc
jnp
push
xor
cmp
sti
fisubrl
ret
xchg
rorb
addr16
xchg
jne
iret
std
imul
xchg
repz
mov
mov
imul
cmp
data16
subl
adc
mov
ret
ret
cmp
push
jle
arpl
ss
inc
pushl
inc
stos
sbb
jns
push
inc
shrl
call
sbb
inc
fsubl
outsb
or
jp
mov
pop
mov
inc
ret
pusha
aas
and
adc
in
mov
enter
sbb
and
mov
lret
mov
lds
cmp
fcmove
mov
popf
jnp
test
add
mov
out
je
and
jge
fbld
loope
in
sub
adc
pop
lret
ja
adc
cli
gs
jge
stos
leave
lahf
aad
lods
lods
jno
adc
test
lret
ljmp
ds
dec
sbb
mov
fsubs
jno
imul
pop
or
gs
pop
orl
std
fsubp
jl
cs
xor
mov
pop
or
xchg
test
insb
jge
pop
sbb
or
cli
mov
or
xchg
aas
add
test
mov
inc
xchg
push
loopne
mov
iret
mov
call
idivb
loop
cmp
test
cmc
mov
push
xchg
andl
inc
shlb
jb
sbb
icebp
mov
xchg
adc
inc
daa
sbb
dec
xor
shl
lods
dec
rcrl
nop
pop
xor
cli
test
popf
pop
jb
mov
or
cmp
lds
and
dec
arpl
mov
cmpsb
or
add
add
fdivp
inc
cltd
fsubl
mov
cmc
out
data16
jns
icebp
int3
mov
stos
mov
mov
subb
lret
sbb
or
jno
pop
loopne
mov
mov
jmp
mov
bound
stc
xchg
repz
jge
add
movl
stos
enter
add
pusha
dec
or
xchg
lock
push
add
push
out
add
adc
jecxz
cld
pop
je
mov
pop
mov
jns
adc
fcoml
mov
data16
cmp
pusha
xchg
or
push
in
add
inc
and
pop
lea
ja
pushf
pusha
mov
imul
mov
stc
push
test
add
push
push
movw
pushf
lea
jmp
jge
and
and
mov
jnp
jbe
and
in
mov
jmp
sub
adc
scas
mov
ss
inc
shrb
and
add
mov
push
jo
xchg
fsubr
dec
je
xchg
loop
pop
jp
xchg
test
js
sarl
movsb
ret
fistpll
rcrl
aaa
in
jb
xchg
fldcw
in
and
lret
xor
repz
adc
lea
jo
pusha
pushf
pushl
lea
jae
jmp
rorb
cmpsb
mov
in
mov
pop
jae
movsb
iret
out
clc
adc
xchg
lods
cmp
fs
mov
xchg
mov
mov
rorl
nop
or
sarl
mov
cmp
ljmp
imul
mov
outsb
aas
scas
in
cmp
leave
test
jne
lcall
das
xor
popa
popf
mov
aaa
jb
in
fldcw
push
jae
inc
sbb
xchg
push
popa
fstl
mov
xchg
iret
js
sub
and
test
lret
jp
push
out
and
xor
in
stos
jnp
dec
mov
adc
mov
and
daa
ret
pop
movsb
lret
or
adc
popa
mov
aas
insl
rolb
inc
insb
pushw
andl
les
js
mov
test
out
mov
pop
std
lods
mov
test
inc
stc
das
pusha
mov
das
jmp
xor
mov
das
sub
jne
je
repz
fwait
push
dec
push
adc
ret
mov
lret
sbb
sarl
xchg
cld
in
in
xchg
pop
jle
jl
nop
push
outsl
mov
lods
popa
insb
push
push
imul
mov
fs
fisttpl
std
addl
mov
jl
mov
push
test
or
pop
jo
je
push
add
sti
sbb
dec
xchg
pop
or
xchg
imul
aam
rcrl
or
adc
xchg
int3
repz
xor
mov
sbb
fcomi
lock
dec
mov
cmp
sub
mov
test
mov
sbb
mov
or
push
sub
mov
loopw
mov
stos
jp
mov
movsl
jmp
pop
rcrl
iret
sbb
inc
dec
sub
adc
xchg
lret
inc
into
xchg
ret
lods
ret
addb
in
mov
cld
and
in
ljmp
fcmovnbe
sub
pop
mov
lret
pop
sbb
mov
lds
scas
xchg
cmpsb
dec
add
scas
sti
jns
xor
iret
xlat
fsubrl
out
mov
hlt
jnp
inc
in
or
or
mov
mov
or
cld
mov
add
int3
inc
iret
dec
and
test
inc
adc
iret
adc
je
into
daa
adc
mov
cli
jbe
cwtl
hlt
xlat
mov
sub
sub
mov
add
pusha
xchg
hlt
test
outsb
jp
cmp
data16
push
inc
lods
jmp
test
in
xor
add
xlat
jno
sub
dec
ss
insl
dec
mov
je
adc
add
adc
xor
stos
or
jno
in
shll
imul
jecxz
mov
sti
xchg
xor
arpl
jp
mov
xchg
mov
mov
mov
rcrb
icebp
loop
xchg
pop
shrb
ss
test
es
mov
jle
fs
fisttps
pushf
fcompl
in
enter
xor
movsl
cmpsb
dec
push
out
sub
cs
ja
popa
aaa
cmp
mov
cld
or
cpuid
adc
je
dec
dec
iret
pop
pushf
mov
fsubrs
dec
lds
dec
push
imul
jo
mov
push
xor
arpl
mov
jns
scas
add
mull
push
mov
xchg
loope
cmp
push
ds
loope
mov
movsl
ljmp
cmp
pop
dec
fiadds
int
stos
ret
dec
lret
divb
pop
pop
jge
loope
fld
jbe
dec
jae
fs
inc
jno
arpl
or
mov
sbb
scas
imul
pop
repz
inc
imul
je
imul
jl
stc
xchg
addl
dec
xor
push
sub
adc
and
js
or
call
cli
loopne
jns
int
jb
and
stc
clc
std
mulb
pop
std
mov
and
push
fisttpll
cmp
push
les
sub
sti
and
mov
outsl
sbb
sbb
or
lods
aaa
lret
add
lret
inc
xchg
jne
xchg
xor
adc
xchg
lods
addl
pop
repz
fiaddl
fisttpl
xchg
mov
push
pop
into
sub
mov
out
cmp
sub
push
shll
lock
pop
mov
mov
sti
ds
insl
cwtl
push
inc
mov
sahf
mov
pop
orb
out
inc
push
jmp
aam
je
ljmp
xor
mov
pop
push
push
ret
inc
cltd
add
ret
fsub
and
adcb
ret
cmpsb
pop
mov
pop
lock
cmp
push
decl
ds
jo
cs
mov
fdivrp
out
loopne
or
repnz
jecxz
imul
fidivl
cmc
popa
repnz
xor
push
push
xchg
test
inc
xor
bound
test
add
sbb
sbb
fistl
stc
inc
inc
add
cmp
sti
sbb
loope
adc
mov
cmp
sbb
mov
xchg
push
lock
xor
push
xchg
fmull
das
gs
pusha
mov
cld
mov
pop
sub
cld
enter
mov
jnp
jnp
mov
dec
ds
aam
testl
leave
mov
or
jno
lods
shlb
jecxz
mov
cli
or
fcoms
rcrl
sbb
xor
xchg
adc
outsl
pop
outsb
jg
icebp
fidivl
mov
mov
call
pop
pop
movl
loope
dec
xchg
jle
jg
roll
flds
lret
inc
fldcw
bswap
insb
xlat
dec
dec
andl
aad
jmp
int
mov
or
jle
sub
inc
int
shrb
jnp
xchg
mov
mov
mov
lret
xchg
mov
cmp
jae
leave
test
cwtl
jne
jecxz
sbb
sub
mov
imul
sbb
sti
nop
dec
pop
dec
adcl
jecxz
loope
cwtl
add
xchg
sahf
lcall
inc
fldl
mov
popl
sti
dec
xchg
xor
insb
jle
jae
dec
repnz
mov
idivb
es
shrb
mov
mov
movsb
sbb
les
mov
xchg
xchg
int
clc
js
hlt
les
mov
mov
ret
push
and
xchg
shl
pop
je
iret
lock
pop
push
or
test
mov
subb
push
push
sbb
sarb
xlat
das
scas
enter
mov
xchg
mov
pop
xchg
mov
cmp
jmp
lcall
ror
shrb
int
sar
add
clc
jmp
test
jmp
bswap
mov
movb
movb
movl
lea
jmp
xchg
or
int
push
sub
mov
sbb
add
data16
lock
pop
scas
jle
add
int3
cmp
pop
push
and
lods
rorb
addr16
flds
cmc
icebp
fs
pop
fildll
fwait
aas
or
imul
add
mov
je
dec
dec
es
js
push
imul
iret
mov
test
pop
sbb
jb
movsb
cmp
jno
jl
loope
and
lock
adc
sarl
lret
jbe
jmp
decl
and
pushf
sbb
test
xchg
out
call
not
mov
pushl
pushf
mov
pushl
pushl
mov
lea
jne
mov
bswap
pusha
movzbw
push
mov
mov
pushl
pushf
push
pushl
ret
movl
jmp
imul
gs
xor
cs
insb
add
dec
test
insb
add
or
stc
pop
fsubrl
cs
fsubp
xor
loopne
sub
xchg
xchg
hlt
cmc
dec
fdivl
fwait
jle
cmp
and
rclb
push
or
pusha
leave
pushaw
jnp
pop
sub
fsubrl
lcall
cmc
and
jg
push
in
jge
sbb
mov
ljmp
jbe
loopne
int3
fucom
lds
movsb
ds
fsubs
rolb
xchg
xor
lock
sbb
jge
pop
hlt
popa
stc
jo
fdivrs
lcall
xchg
dec
and
out
inc
movsb
cmp
enter
add
inc
mov
push
mov
int3
lcall
stos
pop
jno
pop
outsl
addr16
insl
mov
test
mov
jbe
loop
in
cmpsb
pop
cmc
jne
repnz
sub
shlb
jp
scas
mov
shl
mov
xchg
bound
pop
lcall
sub
mov
sub
not
fldl
jbe
movsb
sbb
pop
inc
pushf
cwtl
push
mov
aad
xchg
xor
adc
push
jne
mov
xchg
jbe
lock
cpuid
lret
pop
inc
add
lret
pushf
cmp
int3
std
jp
aam
dec
aaa
adc
cmpsb
shll
fidivrs
add
inc
fsub
push
sbb
sbb
leave
aam
jbe
addr16
add
mov
jecxz
out
jle
jne
cmp
jns
xchg
pop
push
fidivrs
or
cmpsl
cmc
pop
jns
ror
pop
cmc
xor
mov
xchg
scas
outsl
push
out
jbe
sub
fldl
out
mov
or
jmp
popa
jmp
leave
and
mov
ljmp
pop
push
inc
scas
inc
add
pop
pushf
icebp
out
dec
dec
fidivrs
sahf
incb
fcoml
xorl
pop
cli
xchg
pop
pop
lret
inc
clc
test
mov
and
leave
cmp
xchg
cmp
sahf
sbb
bound
aad
in
lock
into
loopne
shll
xchg
fwait
roll
cld
repz
jecxz
outsb
mov
cmp
push
out
cmp
in
lea
mov
ret
adc
jge
lahf
sahf
and
in
inc
das
gs
cltd
shl
mov
jmp
je
and
adc
outsl
mov
xlat
call
dec
cmc
push
push
mov
out
jecxz
sub
push
insb
fdivrl
lret
sub
push
fisubs
xchg
mov
nop
jecxz
push
mov
jno
nop
es
ret
jnp
add
rclb
aam
insl
imul
add
mov
mov
xor
movsl
xchg
adc
and
adc
mov
cld
add
xchg
mov
xor
sub
push
leave
out
fwait
adc
in
sbb
ret
pop
sbb
in
shll
out
sub
scas
mov
xchg
jne
or
add
test
movsb
sub
in
xchg
ret
sub
in
inc
xchg
sbb
lret
inc
ficomps
test
dec
push
mov
cld
rorb
xchg
enter
jge
ds
aaa
mov
stos
dec
cmpsb
dec
pusha
push
dec
outsb
push
pop
dec
xchg
pop
loop
pop
mov
enter
mov
in
push
and
data16
cmp
out
ljmp
repnz
push
cmc
adc
jne
xlat
or
fnstsw
iret
jle
sti
jge
rcr
push
mov
loop
cs
cmp
jae
sarb
repz
jo
stos
cmp
xchg
dec
cmp
adc
addl
dec
repnz
aam
fiaddl
lds
decb
fdivr
bound
int3
iret
sbb
jno
or
in
adc
in
inc
scas
in
adc
stos
clc
sbb
inc
dec
and
xchg
mov
test
aam
shlb
or
xchg
dec
gs
push
jne
mov
jnp
adc
scas
jl
sub
fidivrs
insl
mov
sub
mov
aad
adc
clc
adc
fimull
cli
lcall
not
mov
push
lea
jmp
mov
add
movb
lea
jmp
pusha
movb
lea
call
push
pushf
mov
push
pusha
push
lea
jmp
call
add
adc
fnsave
js
pop
roll
mov
jnp
mov
fcoml
dec
lahf
xchg
sbb
sub
out
ljmp
add
pop
add
jg
push
add
mov
mov
xor
push
sbb
outsb
in
mov
and
mov
in
js
fcomps
cli
adc
jo
lods
out
cmp
or
sub
jne
int
dec
in
test
cmpsb
push
and
sbb
mov
xor
stc
sbb
xor
call
add
sti
ja
sarb
mov
movsb
jmp
mov
jnp
fdivrs
outsb
nop
sahf
sbb
mov
pop
fiaddl
cs
pop
ror
ss
inc
pop
stos
mov
lcall
jge
or
shrb
mov
sub
pop
push
stc
adc
mov
das
inc
out
dec
add
aad
int3
ret
into
inc
daa
or
lds
fdivs
cwtl
xorl
into
repz
sar
ss
cltd
push
xchg
jne
mov
data16
push
xorb
pop
inc
sub
dec
sub
into
push
push
out
gs
fmuls
movsb
lahf
lds
test
adc
stc
mov
filds
xchg
out
mov
push
push
mov
xor
dec
popf
gs
fdivrs
and
cld
push
lret
std
mov
stos
lret
js
cmpsb
test
sub
push
mov
lea
jne
jmp
call
dec
lods
mov
inc
loope
xlat
aaa
vzeroupper
icebp
int
mov
fs
fistl
push
push
daa
mov
stos
test
pop
cmpsb
aam
clc
cld
jg
inc
pop
push
pusha
mov
movsb
outsb
sub
cmpsb
pop
or
loop
mov
out
popf
push
enter
mov
inc
jno
fisubs
test
mov
jne
dec
pop
and
lret
adc
add
pop
cmp
sub
mov
enter
xchg
pop
ja
xchg
gs
push
and
enter
popf
pop
xchg
cmp
repnz
jp
push
int
inc
fs
rcrl
inc
bound
js
ficomps
mov
ds
fdivp
mov
ja
mov
ljmp
mov
mov
test
jecxz
sub
and
pop
mov
cli
mov
mov
sub
jl
popa
fisttpll
mov
inc
mov
nop
sbb
push
fcoms
jno
push
xor
xchg
cmp
or
ja
icebp
pop
pushl
inc
sub
bound
clc
fs
leave
fistpl
push
bound
xorb
pop
push
leave
sbb
dec
scas
lods
lea
in
mov
xor
push
cmpsl
loope
lret
sbbb
pushl
ret
and
xor
push
jecxz
ss
push
adc
push
dec
pop
not
fcom
push
out
imul
dec
fwait
jg
cwtl
jmp
push
subb
push
inc
push
xorb
adc
jg
inc
into
inc
mov
push
leave
rclb
add
jle
dec
adc
dec
push
popa
inc
mov
jmp
adc
in
cmp
xchg
popf
test
pop
dec
cmpsb
pop
leave
jl,pn
and
lcall
ds
and
in
and
mov
push
cld
movsl
stc
adc
add
add
push
add
mov
lret
lds
pushf
inc
jmp
inc
loope
sbb
and
push
scas
xor
stos
pop
jno
cmpsb
mov
mov
outsb
ret
outsl
pushf
orb
sub
mov
adc
xchg
ficompl
out
repnz
imul
add
out
out
cli
fisubl
mov
outsl
add
fdiv
repnz
test
inc
inc
or
inc
push
hlt
xor
dec
mov
dec
add
xor
imul
movw
cmp
add
pusha
lea
jmp
mov
dec
sbb
repnz
test
mov
sahf
test
pushf
cs
mov
xchg
loopne
xchg
add
push
add
mov
outsb
or
inc
xchg
enter
test
test
xor
inc
jl
loopne
in
mov
loope
jo
xchg
push
fdivrl
mov
dec
add
insb
push
xchg
cmp
test
mov
ja
arpl
movsb
out
inc
mov
jp
pop
std
fstl
ss
mov
adc
test
mov
mov
cmp
mov
mov
pop
add
xchg
mov
inc
gs
dec
or
or
jns
push
icebp
dec
loop
out
lods
and
movsl
mov
fisttpll
test
adc
cmc
ret
ret
dec
mov
jno
pop
cs
insl
sbb
stos
xchg
movsl
xchg
adc
testb
push
mov
push
add
inc
lret
stos
test
mov
nop
test
sbb
inc
sbb
sti
push
cltd
nop
fcmovnbe
aad
lock
mov
in
arpl
jg
inc
and
xchg
push
loopne
dec
xor
sbb
aaa
pop
push
pop
cmp
sub
aam
lcall
out
mov
scas
sub
mov
inc
xchg
adc
xchg
pop
iret
mov
bound
lcall
mov
icebp
repz
lret
sub
jmp
xchg
xor
pop
enter
mov
cwtl
sbb
mov
xor
xchg
xchg
in
cmpsl
push
sub
pop
push
scas
aaa
fldt
test
test
loope
push
in
jnp
jmp
sarb
shll
loope
iret
jmp
mov
cmp
pushf
inc
or
mov
adc
mov
std
inc
stos
insl
mov
pusha
mov
test
cmc
movsb
out
pop
fadd
pushf
lcall
or
ret
or
dec
movsl
mov
dec
bt
movb
rol
call
idivl
nop
mov
ds
mov
sahf
lods
mov
repnz
mov
aaa
inc
stos
jle
pusha
push
mov
jnp
mov
cwtl
or
mov
in
xor
int3
jl
add
push
mov
pop
jmp
lahf
jg
into
loopne
scas
das
lcall
jmp
fldcw
mov
sahf
pop
jns
mov
mov
cmp
lcall
loop
ds
mov
inc
pop
addr16
je
lock
les
jmp
jle
mov
pop
loopne
xchg
or
movsb
out
or
jecxz
bt
neg
bsf
mov
clc
dec
rcl
push
mov
jmp
out
jle
jns
sarl
out
sbb
and
in
outsl
cmc
addb
xchg
mov
add
nop
mov
xchg
jns
std
push
add
int3
daa
or
push
push
push
and
jns
outsb
lods
sbb
lret
jg
test
ficompl
into
push
pop
mov
mov
mov
xchg
fisttpl
icebp
jmp
mov
jg
xchg
push
xor
cmp
jp
ret
or
pop
jns
jne
jo
in
xorl
adc
push
stos
bound
test
js
sub
and
adc
mov
dec
pop
sub
outsb
data16
jne
mov
xchg
cmp
xor
push
loop
lcall
xchg
in
dec
push
xchg
and
pop
jp
test
fsubrl
mov
xlat
lods
out
jne
popf
out
xchg
pop
xchg
adc
pop
loope
fdivrs
call
push
test
call
mov
jmp
scas
imull
mov
lods
pop
incl
mov
sub
stc
test
movsb
and
push
scas
icebp
stos
sbb
fsubrl
js
out
sub
xlat
xchg
fiaddl
pop
imul
fucomip
lock
ja
sub
adcl
cwtl
add
push
sub
xchg
cmp
mov
mov
repnz
push
popa
jp
inc
sub
jecxz
mov
pop
nop
push
subl
stos
pop
cmp
mov
cs
xchg
mov
jb
jo
cmp
push
pusha
cmp
call
add
into
stc
jno
fwait
scas
out
std
cmp
sahf
add
and
lret
fistps
mov
xor
and
xor
stc
jo
mov
fistpll
mov
or
sbb
scas
jnp
pop
in
pop
push
fisttps
stos
insb
xor
repz
xor
cmp
sub
inc
and
aaa
mov
ret
mov
ja
jne,pn
push
std
push
ljmp
cmpsl
xor
in
loopne
insl
out
stos
int
in
sbb
pop
out
mov
and
pushf
pushf
movl
call
mov
or
jmp
sub
adc
insl
jne
inc
clc
or
shlb
inc
lea
int
insb
cwtl
sbb
out
rcrb
or
imul
or
out
xor
test
dec
enter
popa
ja
dec
inc
iret
pop
lcall
push
iret
adc
inc
insb
scas
or
xor
mov
mov
iret
lahf
fmulp
jl
jge
and
stc
mov
and
stos
mov
and
adc
mov
ds
mov
stc
add
pop
loope
sbb
fisttps
xchg
sbb
pop
out
mov
call
mov
cmp
call
mov
pusha
movsbw
lea
mov
mov
call
bt
imul
call
outsl
insb
xor
cs
insb
add
mov
pushf
call
sbb
and
repnz
scas
sbb
cmp
mov
repnz
loopne
das
dec
adc
jo
sbb
or
dec
adc
insl
mov
mov
outsb
push
mov
popa
pop
adc
mov
mov
inc
aad
mov
scas
pop
out
or
inc
mov
mov
or
mov
sti
push
inc
sub
pop
or
jecxz
ja
sbb
push
imul
xor
clc
add
mov
in
mov
push
mov
pusha
xchg
call
xor
repz
in
add
inc
in
movsb
or
jno
xchg
sub
stos
xor
and
stos
mov
scas
adc
adc
jbe
cmp
scas
push
lock
movsb
repz
sar
hlt
in
push
insl
xor
push
stos
subl
bound
movsb
mov
lods
xchg
push
insl
fs
mov
call
mov
adc
sub
jne
dec
test
or
adc
or
pop
and
js
cmp
mov
out
xchg
movl
and
pusha
inc
pushl
pushf
lea
jmp
pop
mov
mov
cld
push
in
std
adc
gs
ror
mov
shlb
pop
sub
lahf
lods
mov
mov
lea
aam
push
leave
sbb
sahf
dec
or
or
xchg
psrlw
imul
fcmovb
pop
movsb
push
dec
pop
jge
pop
jle
or
cmp
xor
in
sti
fcomi
sbb
popa
mov
jge
sub
inc
loop
jge
jbe
and
and
inc
pop
es
jmp
lret
sbb
sbb
pop
push
jmp
mov
repz
shll
push
dec
mov
popf
inc
nop
and
enter
into
bound
rcl
mov
insl
sbb
jae
push
ret
push
cmp
or
xchg
mov
leave
lods
jb
rclb
mov
dec
in
sub
fiaddl
hlt
xor
xchg
test
popa
stos
lret
repnz
stc
negb
xor
adc
jg
xor
jmp
and
add
popf
mov
ffree
add
fstl
fs
xchg
outsb
jo
and
inc
and
ljmp
cmp
mov
sbb
adc
sub
out
nop
idivb
rcrb
les
cmp
mov
mov
rolb
jo
cli
cmc
cmpsl
xor
daa
cmp
imul
out
jmp
pop
adc
push
cmpsb
pop
jb
icebp
dec
or
lods
sbb
popf
stos
test
xor
addr16
jnp
popf
sbb
sub
mov
in
dec
gs
push
or
xchg
sahf
pop
lret
scas
mov
cmc
or
dec
flds
iret
jo
lret
rorb
repnz
pushf
jmp
pushf
jmp
pop
pushf
pushf
movl
call
or
adc
fsubrs
outsl
arpl
xchg
xchg
dec
mov
das
hlt
dec
pop
xchg
add
rolb
adc
push
jns
and
je
scas
dec
mov
xchg
sarl
xchg
dec
sahf
aas
and
fisubl
xchg
push
sbb
je
inc
mov
sbb
cmp
dec
in
out
inc
push
mov
dec
mov
icebp
insl
or
inc
adc
ret
and
dec
lret
push
fnstenv
lods
cli
xchg
bsr
ror
mov
or
and
clc
push
bts
bsr
call
xor
mov
sbb
mov
xchg
andl
incl
bound
pop
push
leave
ljmp
mov
push
push
add
mov
push
pop
gs
mov
shrb
cli
xor
cmc
not
cmc
ror
test
push
neg
clc
pushl
jmp
clc
pusha
cmp
lea
pushf
pushl
ret
str
pusha
pusha
movl
pushf
movl
pushf
mov
pushf
lea
jmp
sub
lock
adc
xchg
arpl
inc
test
mov
int3
pop
fcomi
mov
jae
mov
dec
int
jnp
mov
in
push
stc
xchg
andb
or
pop
cmpsl
sbb
and
xor
dec
fcmovnbe
jbe
cmp
les
loope
mov
adc
jns
push
jmp
into
loope
mov
rorb
push
subb
dec
out
imul
add
sarl
and
mov
cmc
arpl
push
repnz
cmp
insl
jg
cmp
fsubs
and
prefetch
cmp
pop
sub
ds
jl
sahf
js
inc
jmp
jns
ljmp
xchg
cmp
nop/reserved
pop
add
addl
out
dec
dec
jmp
sub
insl
movsb
lock
out
rcl
inc
fwait
cmp
mov
imul
fldt
fcomip
mov
lods
icebp
lret
push
lods
out
in
ja
pop
inc
sahf
sub
or
lock
and
sbb
jmp
lea
je
call
pushf
movzwl
shl
mov
cmp
add
bt
test
jmp
push
jmp
xlat
cmp
rcr
jl
or
adc
ret
push
push
cmc
ret
scas
movsl
mov
or
mov
stos
divb
jne
dec
paddb
jo
imul
sarb
cmpsb
test
int
lret
push
push
inc
pop
pusha
sti
mov
addl
jp
pushf
enter
lret
xor
fs
and
in
or
xchg
sarl
testl
pop
mov
iret
aam
adc
cmp
inc
scas
mov
xor
pop
fcom
cmpsb
enter
inc
mov
pop
inc
xchg
fstpl
sti
and
mov
or
clc
je
loop
cmp
rclb
mov
lods
loopne
sbb
adc
out
lret
rclb
add
fdivrl
xor
push
sbb
into
loop
xchg
int
pop
andb
mov
mov
mov
pop
out
cmp
cmp
shrb
daa
outsb
adc
add
les
dec
js
sarl
leave
pop
jecxz
btcl
repnz
mov
roll
loop
mov
mov
adc
mov
dec
rcrl
imul
and
pop
jecxz
nop
ljmp
and
decb
das
scas
rcr
in
mov
scas
ss
cmp
mov
les
mov
jae
xor
inc
addl
out
mov
cltd
push
movsb
cmpsl
dec
ljmp
or
sub
jge
sbb
dec
icebp
and
test
outsb
fdivrl
adc
jg
test
push
ds
pop
test
fdivr
dec
inc
lret
adc
pop
push
shl
lock
test
enter
imul
inc
or
and
pop
enter
jg
lret
xor
push
std
scas
loop
aad
divb
sbb
mov
in
cltd
sbb
insl
xor
inc
xchg
rorb
outsl
jecxz
pop
seto
fsubl
mov
adc
scas
aam
jle
and
mov
push
pop
lahf
jo
or
jge
test
lret
xchg
nop
cmp
and
mov
push
clc
add
pop
cwtl
xchg
and
imul
int3
fs
and
sbbl
dec
mov
test
test
mov
les
cltd
int3
mov
test
or
fistl
pop
sahf
les
add
loopne
jbe
and
and
jp
sbb
dec
pop
pop
mov
pop
int
movsb
loop
js
xor
mov
test
testl
pop
lock
dec
push
test
adc
inc
fwait
aad
lret
adc
movsb
movl
lea
jae
push
pusha
push
lea
jmp
pushf
cmc
ror
clc
neg
pushf
push
bt
ror
cld
jmp
dec
mov
push
adc
mov
dec
mov
movsl
dec
vmovsd
inc
xor
jl
jne
xor
pop
movl
or
lods
add
aad
movsb
push
lret
mov
jo
inc
and
iret
cmpsl
and
mov
testl
sub
mov
push
loope
and
cmp
scas
push
adc
movsb
testl
xor
cmpsb
je
cwtl
int
pop
jmp
and
mov
xchg
pop
mov
outsl
lods
gs
and
cmpsb
and
stos
mov
daa
pop
adc
int
mov
lods
out
cmp
cmp
cli
lahf
jp
fisubl
jecxz
aaa
les
mov
lret
xor
movups
or
dec
jle
and
mov
inc
pop
inc
add
xor
dec
stc
sbb
cmpsl
rcrb
pusha
mov
pop
repnz
mulb
or
ja
loop
xchg
push
xor
fwait
xchg
out
mov
rorb
dec
mov
and
or
adc
iret
dec
mov
sub
test
cmp
pop
dec
cmp
test
mov
scas
cltd
mov
push
push
fcmovbe
cmpsb
out
aaa
stos
adc
mov
int
outsl
test
push
or
jnp
and
mov
je
pop
rcrb
push
repz
insl
mov
jecxz
dec
adc
lods
outsl
or
sub
push
fmull
bound
sub
add
xchg
lret
aam
aam
add
xchg
stos
lret
iretw
cmp
mov
fidivl
mov
ljmp
mov
mov
push
cli
add
jae
aaa
negb
testb
adc
sbb
fisttpl
repnz
dec
lret
sub
dec
call
push
pushl
popl
movb
pushl
ret
popf
cmp
dec
lret
and
in
xchg
xchg
jp
dec
stos
add
or
jnp
mov
insb
es
cld
jnp
dec
lret
inc
inc
xchg
test
sbb
int3
jg
cmc
fstpl
pop
sub
outsb
dec
bswap
mov
sahf
mov
scas
scas
mov
es
jecxz
and
mov
in
cmc
gs
or
and
push
push
mov
lret
dec
mov
jl
sbb
insl
cmp
out
add
jb
in
neg
int
sub
jae
lock
jb
mov
push
mov
inc
cmp
fildl
adc
xchg
inc
addr16
stos
loope
scas
mov
xchg
jl
xorb
bound
bound
xchg
dec
sbb
push
enter
mov
lret
adc
mov
rcrb
inc
add
and
jecxz
mov
cmp
iret
stos
addr16
jl
sbb
ret
shrb
loope
jno
js
push
ss
pop
std
xchg
out
sarl
lret
mov
sbb
or
xor
das
adc
fdivr
push
mov
das
lock
pop
nop
mov
mov
dec
jg
push
jmpw
jmp
adc
loopne
pop
mov
lock
lea
xor
out
loopne
out
cmpsl
xchg
pop
cmc
in
push
dec
push
and
faddl
mov
fidivl
mov
pop
addr16
jp
popa
sbb
pushf
ss
add
cmc
pop
lock
shlb
je
mov
les
xchg
pop
int
jno
cwtl
sbb
xlat
pop
pop
pop
imul
inc
stc
cld
pushw
popfw
pusha
mov
inc
push
movb
jmp
pushf
or
lahf
test
repz
jns
mov
loop
sub
ds
sub
in
and
lods
push
push
pop
push
dec
ret
repnz
jns,pt
mov
xlat
cltd
or
popf
je
sbb
lret
push
jns
sbb
dec
stos
push
pop
cmc
cmpsb
push
scas
lret
pop
mov
daa
sbb
into
sub
cmpsb
loop
add
ljmp
inc
es
adc
push
sbb
cmovs
mov
mov
scas
sbb
cmp
insl
mov
lcall
inc
inc
pop
push
loope
or
adc
jmp
out
xchg
sti
jmp
pop
sbb
mov
stos
dec
or
mov
jno
movsl
popa
scas
sti
push
mov
sbb
push
enter
pop
dec
push
lea
xchg
ror
ret
int
jbe
ficoms
movsb
inc
and
pop
lret
ret
sbb
movl
pushf
movb
push
lea
jmp
subl
jb
std
adc
xchg
fists
sub
idiv
outsb
mov
jns
loopne
pop
decb
push
jmp
enter
icebp
lcall
dec
loopw
stos
xor
inc
sbb
stos
int3
pusha
or
cwtl
mov
mov
adc
push
jo
shr
mov
xchg
pop
jns
cmp
sub
mov
or
dec
dec
add
pop
jbe
xchg
shld
mov
pusha
call
out
xchg
xchg
loop
xor
out
gs
sti
rcll
inc
rolb
or
jecxz
pop
or
in
xchg
mov
sbb
call
xor
fmul
xor
xor
fwait
out
aaa
or
es
popa
jno
and
jb
scas
sbb
inc
jo
js
add
push
adc
lret
out
dec
jns
adc
mov
cli
imul
inc
std
xor
inc
cmp
push
mov
and
outsl
enter
fadd
mov
dec
sbb
mov
inc
ret
xlat
ds
xor
test
jo
pop
fwait
in
mov
xchg
dec
test
imul
lods
jne
pop
pop
outsl
fs
cmp
cld
in
in
ss
popf
lock
movsb
out
cwtl
jmp
inc
aad
cmc
popa
out
mov
mov
xlat
xor
adc
lea
push
pushf
call
inc
gs
adc
out
adc
or
push
and
jnp
or
xchg
div
jno
movsl
fs
push
jns
pop
test
mov
lock
stc
sbbl
movsl
push
sub
xor
pop
aam
push
lods
push
lea
jne
call
rcl
cwtl
cmpsb
sti
mov
in
lods
dec
pop
lcall
daa
push
aam
xchg
into
cld
ss
push
push
mov
jecxz
jle
shlb
insl
mov
pop
pop
mov
aas
data16
int3
sub
inc
or
cmp
lahf
adc
add
pop
pop
jno
lret
cmpsb
loopne
sub
out
lret
das
or
call
cmp
in
repnz
repnz
mov
stos
aaa
mov
je
mov
lcall
scas
adc
cwtl
imul
lret
sub
pop
mov
mov
jns
fiadds
les
inc
xor
sbb
rcll
arpl
pop
and
dec
cmp
mov
push
fwait
aam
jg
sub
push
xchg
jl
pusha
xchg
int3
push
jns
cmpsb
rorl
je
adc
mov
add
and
xchg
dec
popa
insb
add
scas
les
fcompl
sub
xchg
inc
xchg
dec
push
testl
stos
icebp
mov
loope
imul
pushf
out
ficompl
mov
mov
mov
adc
subl
shl
mov
cmp
scas
mov
mov
add
jmp
add
fbld
bound
mov
test
push
push
cmp
es
sbb
adc
push
sahf
xchg
jnp
dec
in
xchg
shr
cmp
push
pusha
cld
dec
addr16
xchg
into
outsl
or
push
dec
pop
ljmp
bnd
push
ljmp
pop
aad
out
movb
call
in
call
sar
cmc
add
add
shl
mov
stc
test
push
pusha
mov
lea
je
stc
sub
jmp
btc
shr
mov
clc
cmc
push
jmp
push
pusha
lea
jne
pusha
push
mov
pushf
or
pushl
call
cmp
lds
dec
mov
sbbl
mov
pushf
fcoms
lods
fdivr
das
lcall
add
push
cltd
xor
insb
mov
out
adc
dec
jbe
bound
jmp
out
or
cmp
daa
leave
dec
pop
fucomi
mov
hlt
mov
xor
cmc
push
or
cmp
scas
push
cmpl
ljmp
cld
jg
and
inc
xchg
cmc
mov
sub
xor
lret
ret
pop
add
je
inc
btc
mov
pushf
stc
clc
bt
sub
jmp
hlt
push
aam
in
inc
dec
jg
fisubl
in
add
push
fwait
pop
xor
mov
mov
xchg
pop
mov
lods
adc
insl
aaa
bound
fisubrs
insb
mov
pop
dec
ja
iret
in
addr16
adc
adc
add
test
mov
lea
test
jge
adc
xor
xchg
push
xor
cmpsl
sub
mov
repnz
xchg
lret
gs
icebp
sub
inc
push
ret
inc
lcall
notb
roll
movsl
jp
dec
mov
xlat
jne
cltd
pusha
sti
push
adc
xchg
jnp
sbb
pop
std
add
pop
popa
xor
ss
sub
inc
mov
xchg
mov
popa
adc
jo
push
xchg
xchg
adc
stos
xchg
cs
das
and
cmc
iret
mov
dec
push
mov
out
sub
jnp
lret
fcoms
rolb
and
push
nop
test
lods
movb
pop
inc
mov
xor
neg
fs
jecxz
ret
test
adc
loope
sahf
stc
pop
imul
push
push
mov
out
add
xchg
lods
mov
gs
cmp
fcmovu
cmpsb
sahf
pop
adcl
push
jge
push
xor
mov
jnp
int3
lock
ds
popf
push
fldl
adcl
outsl
fimuls
je
xor
adc
out
add
or
sub
imul
inc
mov
add
and
mov
lahf
xchg
mov
inc
cs
ds
das
popa
in
mov
imul
xor
test
xor
movsl
xchg
cmp
sbb
es
xor
and
shll
insb
andb
nop
sbb
data16
sahf
adc
add
test
sub
cmp
add
dec
sbb
flds
je
cs
pushf
call
lcall
mov
push
sub
or
fisttpl
in
inc
sahf
cmp
int3
insl
outsb
jne
push
mov
inc
nop
loopne
or
shll
ds
and
cmpsb
fcmovnu
je
xchg
mov
fcompl
pop
dec
fists
mov
push
xchg
sahf
cltd
mov
pop
mov
xchg
js
sbb
cmpsb
cmp
mov
jno
gs
test
roll
lock
lret
adc
das
in
xor
sbb
add
movsb
ror
mov
and
int3
out
shlb
jg
sub
out
stc
rolb
outsb
fidivs
rcl
lock
xlat
ret
jge
daa
fwait
imull
mov
mov
mov
sub
push
fmuls
pop
int
jecxz
insb
ds
mov
push
fsubrp
or
push
lds
cwtl
cld
mov
subl
fwait
cmp
mov
mov
imull
mov
in
fidivrs
ss
cmp
mov
loope
sbb
inc
add
pause
xchg
outsl
mov
in
repnz
sti
dec
lret
mov
sbb
sbb
out
xchg
fisubrs
outsb
negb
aas
push
dec
mov
sub
and
nop
push
je
les
push
push
mov
xchg
outsl
push
cmp
in
push
jl
cmp
fwait
xor
loopne
lods
inc
in
ja
cmp
fnsave
sub
arpl
sahf
insl
fs
add
fimuls
and
push
out
lea
mov
mov
lds
inc
sub
icebp
ret
imul
aas
push
cmp
inc
fcomp
fldl
sub
in
pop
push
mov
push
or
sub
data16
out
sbb
out
aam
lret
out
fisttps
clc
push
jmp
pop
jecxz
dec
fs
lods
add
les
mov
cmp
xchg
xor
dec
or
ficoml
jmp
idiv
add
and
loop
sub
andl
insl
negl
insb
aam
inc
js
or
add
repz
xchg
sub
std
mov
inc
pop
jge
sub
repz
int
mov
push
int3
xchg
je
pop
xor
inc
cmp
pop
fisttps
jmp
notl
sub
ss
aam
jae
sar
cmp
ja
cmc
mov
bound
dec
mov
in
push
scas
xchg
add
imul
in
cmp
pop
fdivl
out
jns
aam
xchg
add
jb
jmp
xor
and
or
mov
push
fmuls
nop
dec
outsl
inc
dec
ret
mov
dec
jmp
cmpl
xchg
nop
lret
fcompl
sub
pause
mov
jp
mov
out
mov
xchg
mov
add
sbb
pop
pop
pop
stos
pop
fcmovne
jecxz
cmp
leave
fistpl
and
leave
adc
lea
imul
in
bound
lcall
xor
icebp
xchg
rclb
lock
test
sub
adc
mov
lret
ds
jmp
pusha
jmp
xor
pop
call
mulb
mov
pop
inc
jl
outsb
rol
add
cmp
or
mov
into
mov
sub
ror
xchg
sbb
and
pop
sbb
arpl
pop
mov
js
cs
inc
mov
daa
jo
das
dec
pop
call
jle
sbbb
mov
data16
repz
mov
fnstcw
mov
pop
xchg
inc
dec
xorl
and
inc
adc
int
jmp
lret
pop
mov
dec
add
test
leave
fs
push
mov
insl
jle
shl
leave
add
test
js
push
nop
adc
iret
and
cwtl
mov
xor
jo
xchg
push
bound
mov
xchg
mov
mov
int
ljmp
dec
fdivs
test
xlat
cmp
sarl
mov
test
mov
mov
lret
fsts
dec
mov
jmp
lds
fwait
jne
and
test
xchg
jne
push
dec
int3
jl
lret
xlat
sub
lahf
fmuls
push
jl
loop
mov
jmp
repz
or
fiadds
adc
inc
push
aam
jns
push
adc
loopne
xchg
mov
ss
dec
add
add
adc
cmp
sub
out
xchg
aas
sarb
cmpsb
mov
mov
ljmp
inc
sub
dec
daa
ljmp
push
loop
and
pop
ret
and
inc
and
push
push
sbb
pushl
mov
lea
jmp
not
lea
jge
pusha
pushf
dec
cmc
stc
jmp
cmc
push
aad
pop
std
push
xchg
mov
cmc
sbb
mov
xchg
mov
pushf
std
insl
aaa
cmp
and
cmp
dec
dec
lods
xor
xchg
lahf
xorb
mov
jae
movsb
mov
xchg
add
sbb
dec
mov
outsl
in
loop
adcl
dec
sbb
adc
mov
ljmp
jg
es
pop
push
jb
sbb
cmp
ja
xor
mov
movsb
lahf
out
pop
xor
mov
movsb
jg
ret
js
insl
stc
sub
jmp
roll
cwtl
into
sbb
dec
test
sti
ds
and
sbb
pop
call
mov
in
pop
mov
es
ds
push
mov
dec
sub
inc
or
inc
sbb
mov
add
pop
outsl
popf
xchg
out
iret
cmc
ret
mov
cli
lcall
int3
mov
call
push
dec
dec
out
scas
and
and
scas
sar
inc
out
xchg
loope
and
jns
test
sub
ret
xlat
dec
shl
cmp
lcall
or
inc
adc
fs
or
add
subb
xlat
outsl
pusha
test
jg
xchg
ss
stc
xchg
mov
push
call
fsubp
mov
pop
inc
adc
cmpsb
dec
cltd
sub
cmp
mov
int
lods
jl
in
fsubrs
xor
adc
clc
nop
scas
ret
xor
push
and
lret
stos
test
push
lock
pop
std
loopne
pop
pop
ja
mov
pushl
xchg
notl
ret
mov
negb
xlat
mov
out
mov
fwait
aaa
push
xchg
push
test
inc
pop
adc
out
in
add
daa
jle
je
jmp
arpl
in
test
jno
ds
aam
inc
mov
pop
jb
int
cmp
cmc
int
mov
sub
outsb
or
ret
out
inc
mov
xchg
test
add
fstl
jmp
adc
je
jo
mov
fldl
push
flds
ret
out
pop
loope
shlb
sarl
xchg
stos
outsb
mov
jns
dec
nop
sahf
ljmp
outsb
jns
pop
repz
int
push
ret
adc
pop
ja
sub
pop
rorl
jb
xor
fs
insb
add
jae
sbb
mov
push
int3
sbb
pop
pop
cli
cmc
and
cli
loopne
loop
lret
and
push
xor
sti
push
cmp
push
push
pop
xchg
fnstenv
jne
loopne
sahf
lds
ficoms
addr16
insl
push
loope
cwtl
pop
sbb
sar
repz
lea
sti
js
mov
cmp
sub
or
or
jns
cmp
ds
adc
pop
xor
icebp
mov
mov
add
lds
cmp
aas
es
lds
lods
jmp
jge
adc
mov
cmp
rcr
mov
clc
sub
sbb
pop
mov
add
pushl
pusha
lea
jmp
pushf
lea
je
cmc
cmp
pusha
lea
je
pusha
stc
movb
cmp
pusha
call
add
pusha
push
lea
jmp
push
fwait
int
test
add
packssdw
pop
add
sub
jns
cmpsl
xor
mov
out
mov
fldl
jl
add
sti
push
inc
sub
loop
jmp
nop
push
sbb
jbe
lock
mov
jp
lds
add
pop
mov
mov
cmp
mov
or
inc
movsb
test
inc
cld
xchg
out
gs
into
xor
xlat
pop
pop
xchg
bound
or
cmp
int3
pushf
lea
jae
bt
pusha
cmp
pusha
lea
ja
not
dec
jmp
dec
xchg
inc
in
and
inc
cmpsl
aaa
fldl
add
inc
test
xchg
movsl
nop
out
pop
pop
push
inc
gs
sub
mov
mov
fcompl
mov
xor
outsb
mov
add
inc
pop
mov
xchg
sar
inc
pop
mov
mov
pop
add
xor
cmp
mov
push
shll
cli
dec
jle
dec
lret
sbb
push
rcll
sahf
xor
jmp
mov
inc
fsts
dec
divl
or
lods
cmpsb
inc
and
adc
xor
and
jnp
iret
xchg
mov
sar
ret
inc
push
dec
jl
push
mov
add
out
lods
sub
or
or
or
or
push
cli
fldenv
dec
scas
sahf
and
or
in
pop
sbb
enter
ds
jo
std
push
ds
sub
cmpsb
aas
and
lcall
call
jmp
cld
mov
call
stc
xor
lea
jb
call
jmp
mov
push
push
pushf
pushl
ret
imul
pushl
push
add
pushf
lea
jmp
and
push
scas
ret
imul
add
sti
xchg
add
in
lret
in
pop
add
or
xor
pop
and
clc
cltd
sbb
pop
dec
sbb
jb
fsubrl
int
loope
lret
fmuls
xchg
das
mov
jecxz
out
mov
push
lret
and
add
mov
lea
jmp
out
inc
stos
push
push
in
scas
rol
push
or
jge
sub
shll
test
xchg
cmpsl
scas
out
lcall
jnp
jb
imul
push
fsubrp
dec
outsb
std
mov
clc
iret
fnstcw
stc
xcrypt-cbc
cmpsl
shrl
stos
cltd
test
push
rcrb
add
mov
or
jbe
stc
jno
decb
jo
repnz
out
stc
les
and
sahf
or
sbb
xchg
adc
mov
dec
cmp
gs
add
lret
inc
fistpll
xchg
push
fisttpl
cmp
dec
mov
or
xchg
mov
clc
pop
mov
mov
sub
in
in
dec
insb
cmpl
out
arpl
cmp
loope
or
xor
scas
mov
sbb
ret
adc
repz
clc
cwtl
and
adc
jnp
push
adc
mov
out
scas
hlt
push
adc
xchg
mov
sub
test
adc
in
jl
pop
inc
jl
in
jns
xor
pop
lret
lock
mov
inc
lret
push
cmp
test
insl
std
adc
jle
scas
das
push
mov
or
push
ja
pop
shrb
cmc
pusha
adc
pop
cmp
push
lock
mov
hlt
sbbb
in
sub
bound
adc
enter
pop
pop
push
push
idiv
das
stos
test
and
push
ljmp
adc
pop
or
idiv
sub
xor
sahf
mov
sub
fsubrs
fs
inc
out
cld
rcrb
pop
lret
loop
in
mov
add
mov
fists
push
loop
ljmp
rol
std
xchg
bound
pop
shlb
dec
pop
jno
mov
pop
cltd
or
icebp
aam
scas
adcl
ja,pt
fiaddl
andl
jmp
mov
sub
dec
inc
cmp
mov
clc
fisttps
lret
mov
mov
notl
mov
shrd
mov
cmp
call
pushf
mov
push
movb
jmp
call
mov
pushf
lea
jbe
push
pushf
movb
mov
repz
popl
call
stc
sete
mov
pusha
sub
mov
pushf
dec
pushf
pushl
call
push
inc
pusha
stc
stc
jmp
adc
pushl
popf
movzbw
lea
js
sete
movsbw
pop
xchg
mov
pop
not
pop
pushf
pushl
pushl
ret
jmp
pushl
popl
movl
movb
push
mov
lea
jmp
jmp
mov
mov
pusha
mov
jmp
jmp
pushf
call
setns
lahf
bswap
lea
mov
pusha
jmp
mov
test
clc
sub
movl
pushl
lea
jne
jmp
daa
push
movzww
push
pushf
test
xchg
cmc
add
cmc
cmc
ror
cmp
push
cmc
sub
pushf
pusha
ror
jmp
push
mov
call
add
call
jmp
push
jmp
jmp
pusha
mov
pusha
repz
popl
pushf
call
pushl
pushl
popl
pushf
lea
jmp
call
jmp
push
mov
mov
lea
jae
pusha
pushl
popl
movw
pusha
pushf
lea
jmp
push
push
pushl
pushl
popl
pushf
lea
jmp
pushl
popl
mov
pushf
pushf
push
lea
jmp
pusha
mov
pusha
jmp
push
mov
jmp
call
bts
mov
cmc
shrd
mov
bt
push
cmc
push
add
pushf
jmp
pushl
popl
pushf
mov
pushf
lea
jmp
pushl
popl
mov
mov
mov
lea
jmp
mov
pushf
pushf
jmp
push
stc
pushl
add
jmp
shld
ror
not
mov
bswap
bts
call
xor
pushf
cmc
call
mov
pop
lea
pusha
jmp
sub
or
shr
bswap
mov
mov
sar
mov
cmp
clc
pusha
not
cmp
movb
clc
test
not
pushf
cmp
jmp
mov
mov
mov
jmp
lahf
mov
push
movl
pushl
call
mov
pushf
mov
movl
mov
lea
jmp
bsf
movsbw
mov
stc
bt
add
pusha
push
pusha
lea
jmp
pusha
dec
bt
das
mov
movsbw
add
sub
mov
mov
cmp
add
pushf
mov
pushl
lea
jmp
pushf
mov
jmp
mov
call
pushf
popl
jmp
mov
mov
call
rol
mov
push
sub
bt
jmp
add
bt
adc
rcl
mov
pushf
add
push
call
mov
pushf
jmp
jmp
ror
sub
pushf
sar
mov
xchg
bsf
shrd
mov
shr
mov
push
pushf
add
test
bt
call
mov
call
jmp
and
mov
jmp
clc
shl
mov
pushf
ror
mov
sub
mov
pushl
cmp
mov
sub
cmc
shl
mov
pushf
mov
lea
jne
pushf
pushf
popl
jmp
mov
call
mov
pusha
movb
lea
jmp
mov
call
mov
pushf
pushf
call
call
call
test
mov
movsbl
shl
shl
dec
sub
adc
cmp
pushf
add
neg
movzbw
pushf
inc
jmp
repz
popl
call
mov
mov
and
movzbl
bswap
cmp
sub
setns
btr
lea
jmp
mov
pushf
mov
call
jmp
pushl
popl
push
lea
jmp
mov
mov
cmp
mov
pushf
not
jmp
jmp
pusha
call
pushf
mov
push
mov
mov
cld
call
pushf
dec
call
mov
jmp
mov
jmp
push
pushf
push
mov
call
call
call
movl
push
pushf
lea
jne
shl
or
mov
push
and
pusha
clc
bt
test
cmp
push
lea
jne
shrd
xorb
movzbw
pusha
push
mov
movb
mov
movb
pushf
lea
jmp
add
pushf
pusha
call
bswap
bts
mov
mov
jmp
mov
call
xor
bts
stc
mov
bts
test
shl
mov
test
pushf
add
movb
pushf
mov
pusha
pushf
mov
pushf
lea
jmp
shr
rdtsc
test
pusha
push
movb
sub
jmp
movw
mov
jmp
mov
jmp
repz
popl
jmp
mov
pusha
movb
mov
mov
push
pushf
pusha
mov
movb
mov
push
jmp
lea
movzbw
lea
jmp
push
mov
mov
pushl
pusha
pushf
lea
jmp
mov
jmp
call
pushf
inc
jmp
daa
jmp
pusha
mov
movb
mov
movb
jmp
rcl
aad
mov
cmp
pushf
sub
mov
mov
push
pusha
push
pushf
lea
jmp
call
mov
pushf
pushf
pushf
lea
jmp
lea
je
pusha
pushl
lea
jbe
pushf
xor
clc
xchg
movl
mov
mov
mov
cmc
sub
pushf
pusha
lea
jne
test
pushf
push
sub
push
pushf
xchg
movb
pushf
call
mov
jmp
add
jmp
rol
mov
mov
mov
jmp
mov
mov
call
sub
setbe
stc
call
pushf
pushf
pushf
rep
cmp
shr
mov
mov
clc
mov
push
pushl
popf
mov
movb
mov
movb
lea
jmp
pushf
jmp
jmp
mov
jmp
cmc
mov
cmp
mov
jmp
stc
pushf
xchg
clc
pushf
jmp
jmp
jmp
pusha
add
bt
push
ror
clc
pushf
add
call
call
setg
mov
mov
movw
pushf
movb
lea
jmp
mov
movb
pushf
call
cmc
pushl
popf
push
pushf
pushl
pushl
lea
jmp
pushf
popl
push
jmp
rol
jmp
movb
pushf
inc
jmp
adc
bsr
clc
mov
test
push
pusha
clc
add
movl
pushf
pushf
popl
pusha
pushl
popl
mov
push
pushl
lea
jmp
sub
push
pushf
sub
jns
shr
pusha
call
mov
push
lea
jmp
lea
jno
popl
push
movb
pushf
pushf
lea
jmp
jb
pusha
mov
pushf
mov
movb
pusha
lea
jmp
repz
popl
mov
mov
jmp
lea
jp
cmp
cbtw
test
cmp
cwtl
call
repz
popl
pushf
pushf
mov
jmp
not
stc
stc
push
jmp
pushf
mov
pushf
lea
jmp
pushl
popl
push
pushf
pushf
pushl
lea
jmp
pusha
mov
call
pushl
mov
movb
pushf
lea
jmp
mov
call
mov
pushl
popl
mov
lea
jmp
push
mov
call
mov
push
movb
push
mov
mov
movb
mov
push
pushl
pushl
pushf
mov
call
lea
jno
pusha
pusha
mov
jmp
bt
add
clc
test
mov
clc
mov
jmp
pushf
mov
pusha
mov
pusha
movb
lea
jmp
call
call
movl
mov
pusha
push
call
jmp
pushl
rol
call
movb
mov
call
clc
add
pushf
lea
jmp
pusha
mov
pushf
mov
pushf
lea
jmp
mov
mov
pushf
pushf
jmp
mov
lea
pushf
or
call
call
jmp
jmp
add
icebp
insl
add
in
add
in
add
shrb
mov
outsl
add
lcall
js
outsl
add
insl
add
pop
outsb
add
insl
add
push
outsl
add
adc
or
insl
add
fildll
and
add
lret
insl
add
or
outsb
add
outsl
add
dec
outsb
add
outsb
add
movq
adc
add
js
add
insl
add
dec
outsb
add
outsb
add
insl
add
dec
outsb
add
lcall
nop
movq
adc
add
insl
add
movq
adc
add
or
insl
add
dec
outsb
add
adc
or
outsl
add
dec
outsb
add
outsb
add
pop
outsb
add
dec
outsb
add
mov
outsb
add
dec
outsb
add
sbb
jo
outsb
add
dec
outsb
add
jns
add
dec
outsb
add
sti
insl
add
movq
adc
add
outsb
add
movq
adc
add
insl
add
jno
add
dec
outsb
add
imull
loopne
outsl
add
dec
outsb
add
in
outsb
add
fildll
mov
aam
add
pop
outsb
add
pop
outsb
add
adc
mov
scas
outsb
add
call
outsb
add
sbb
sarb
ror
add
xchg
outsb
add
outsb
add
out
add
scas
outsb
add
outsl
add
insl
add
cld
insl
add
outsl
add
lcall
enter
push
fisubrs
sbb
outsb
add
jns
add
imull
sbb
insl
add
icebp
insl
add
cld
insl
add
pop
outsb
add
rep
add
push
outsb
add
fildll
nop
jecxz
add
add
sarb
sbb
insl
add
or
insl
add
or
outsb
add
insl
add
outsl
add
jns
add
pop
outsb
add
scas
outsb
add
insl
add
insl
add
adc
jo
insl
add
outsb
add
adc
or
insl
add
sti
insl
add
jno
add
adc
inc
and
inc
or
sbb
insl
add
push
outsb
add
jns
add
in
add
outsb
add
jno
add
imull
mov
insl
add
outsb
add
fildll
mov
and
mov
outsl
add
mov
insl
add
call
outsb
add
cld
insl
add
leave
outsb
add
cli
insl
add
mov
outsl
add
call
outsl
add
outsb
add
outsl
add
lret
insl
add
cmp
call
pop
outsb
add
add
nop
push
outsb
add
shrb
ror
add
outsb
add
outsb
add
in
add
icebp
insl
add
outsl
add
sbb
sbb
outsb
add
shrb
dec
cli
insl
add
call
outsb
add
insl
add
add
mov
insl
add
sbb
sub
outsb
add
adc
inc
pop
outsb
add
in
add
adc
enter
mov
sbb
sbb
insl
add
insl
add
imull
loopne
outsl
add
pop
outsb
add
lret
insl
add
out
add
fildll
js
outsb
add
popa
outsb
add
js
add
pop
outsb
add
outsb
add
mov
outsl
add
lcall
inc
pop
outsb
add
loop
add
insl
add
imull
or
outsb
add
outsb
add
outsb
add
insl
add
icebp
insl
add
imull
call
pushl
popl
mov
movw
mov
lea
jmp
pushf
test
sub
pusha
movb
push
pushf
mov
movl
pushf
push
lea
jmp
jmp
lea
push
push
lea
jmp
adc
bt
mov
cmp
bt
and
push
test
pusha
pushf
cmp
pushl
mov
call
pusha
mov
pushf
jmp
mov
mov
mov
call
movl
call
push
pushf
call
call
stc
pusha
jmp
pushf
mov
mov
mov
push
mov
jmp
rol
cmc
shl
sub
and
setns
neg
mov
movsbl
mov
dec
and
cmp
and
shl
call
call
pusha
push
mov
call
lea
jne
pusha
mov
lea
jle
pushf
pusha
movb
mov
pusha
pushf
lea
jmp
pushl
popl
movb
push
movw
mov
lea
jmp
pushl
popl
pushf
pushl
pushl
lea
jmp
pushl
popl
pusha
lea
jmp
mov
push
mov
pushf
jmp
pushl
dec
push
movw
mov
pushf
mov
push
movl
lea
jmp
pushf
popl
jmp
mov
movl
mov
call
mov
jmp
pushf
popl
pushf
pushl
popl
pushf
push
pushf
lea
jmp
pushf
dec
stc
cmc
push
jmp
push
mov
call
mov
pusha
pusha
pushf
lea
jmp
jmp
lahf
rcl
sar
bsf
notl
das
das
and
pushf
mov
pushf
cmp
pusha
sub
bt
movb
bt
and
call
shr
das
movzbw
seta
mov
ror
mov
jmp
repz
popl
push
movb
call
pushf
mov
jmp
mov
push
push
lea
jmp
repz
popl
movb
pushf
jmp
jmp
call
cmp
sub
push
xchg
movb
push
jmp
pushf
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
pushf
sub
movl
test
movb
cmc
and
jmp
pushf
movb
pusha
mov
call
push
not
mov
pushf
movsbl
mov
call
jmp
call
rol
inc
dec
pushf
rol
bts
sub
adc
movzbl
movb
call
xor
jmp
mov
pushf
mov
jmp
call
push
call
jmp
mov
movw
call
pusha
pusha
pushf
pushf
mov
movl
mov
pushl
lea
jmp
mov
pushf
popl
pushl
call
push
mov
pushf
mov
mov
pushf
jmp
mov
mov
mov
mov
pushf
lea
jge
push
call
call
pushf
mov
pushf
push
movb
pusha
pushl
popl
pushf
pushl
push
lea
jmp
pushf
repz
popl
pushf
mov
call
mov
push
pushf
jmp
call
add
jmp
push
pop
mov
jmp
mov
repz
popl
pushf
pusha
jmp
mov
push
push
mov
jmp
mov
push
call
call
pushf
movw
lea
jne
jmp
push
mov
pushl
pusha
call
cmp
shld
pushf
pushf
push
mov
pusha
call
cmc
pusha
mov
cmp
bt
bswap
stc
test
xor
clc
lea
js
pusha
bt
add
pushf
pushf
stc
stc
rol
push
jmp
pushf
call
pusha
mov
push
pusha
repz
popl
pushf
mov
call
mov
pushf
mov
push
pushl
call
pushf
call
mov
movb
jmp
mov
pushf
push
mov
pushl
pushf
call
movb
mov
push
mov
movb
call
neg
bsf
mov
xor
btc
lahf
pop
xadd
pop
mov
sub
setae
sub
pop
bt
pop
cmc
adc
neg
sub
pop
seto
pop
std
pop
call
pushf
jmp
pushl
popl
pushf
lea
jmp
movb
jmp
mov
movb
pusha
push
lea
jmp
lea
jne
push
movsbw
movsbl
xorb
jmp
lea
jb
push
mov
pushf
mov
push
pushf
call
pushl
popl
mov
lea
jmp
rol
lea
ror
mov
cmc
cmp
cmc
add
call
mov
call
adc
call
call
dec
pusha
mov
stc
test
mov
sub
push
pusha
call
mov
push
jmp
pusha
jmp
movb
call
mov
call
mov
cmc
cmc
call
mov
mov
mov
pusha
pushl
popl
movb
pushf
lea
jmp
movb
mov
pushl
popl
pushf
lea
jmp
movb
push
repz
popl
jmp
jmp
jmp
pushf
add
pushl
pusha
mov
call
pushf
mov
pusha
push
mov
lea
jmp
rcl
adc
test
mov
stc
add
pusha
push
pusha
shrd
push
pushf
push
mov
mov
jmp
pushl
repz
popl
pusha
pushl
jmp
mov
pushf
push
lea
jmp
pushl
popl
movb
mov
movl
lea
jmp
push
mov
pushf
jmp
mov
pushf
pushl
jmp
pushl
popl
pushf
pushf
lea
jmp
pushl
jmp
inc
pushl
decl
call
push
pusha
pushl
popl
movw
push
lea
jmp
stc
add
cmc
pushf
stc
cmc
ror
stc
stc
sub
bt
push
ror
call
movzbw
inc
bsf
xor
not
test
bswap
shl
sub
test
cmc
rcr
not
mov
bt
movb
jmp
mov
pusha
pushf
pushf
call
mov
pusha
pushf
call
pushf
mov
pusha
pushf
mov
pushl
lea
jmp
push
mov
push
mov
lea
jg
push
push
mov
mov
pushl
movl
push
pushl
popl
movl
pushl
pusha
push
lea
jmp
shl
pushf
movb
pusha
mov
mov
push
pushf
popl
push
pushf
pushl
popl
movb
lea
jmp
sub
bswap
inc
pushf
bsf
neg
lea
jle
dec
neg
and
shld
mov
stc
stc
jo
add
pusha
mov
pushf
push
movb
lea
jmp
mov
pushf
lea
js
pusha
pushf
lea
movb
pushl
lea
jmp
mov
pushl
pushl
ret
push
pushl
mov
pusha
mov
mov
pushl
jmp
clc
clc
sub
pusha
jmp
mov
call
shrd
btc
aad
mov
bts
setnp
mov
pusha
jmp
mov
pusha
pushf
movb
pushl
lea
jmp
pushf
mov
pushl
pushf
pushl
popl
push
pushf
lea
jmp
shr
call
bswap
pop
mov
call
pushf
mov
jmp
movw
call
jmp
call
add
pushf
pusha
mov
push
pushf
pushf
lea
jmp
call
call
cmp
stc
add
pusha
mov
pusha
pushf
lea
jmp
call
mov
pushl
popl
mov
pushl
push
lea
jmp
cwtl
lea
mov
mov
jno
push
mov
mov
mov
movw
pushf
pusha
lea
jmp
neg
xadd
mov
dec
sub
mov
shl
stc
rol
mov
shl
dec
sar
neg
xchg
ror
rol
rcl
mov
and
lea
pusha
pushl
popl
lea
shr
push
rol
setp
stc
movsbw
mov
shl
lea
movsbl
neg
shr
bsr
not
clc
xchg
sets
or
bswap
clc
sbb
lea
movsbw
mov
rol
mov
shl
sub
btr
mov
sete
rol
bswap
rcl
mov
cmp
dec
rcr
sbb
add
shrd
btr
adc
jb
mov
rcr
sub
movsbw
neg
mov
push
inc
pushf
pusha
stc
rcl
ror
clc
cmc
sub
push
shld
movzbl
and
not
btc
mov
pushf
pushf
pushf
add
push
ror
stc
cmp
add
lea
jl
push
pusha
push
push
pushl
ret
pushl
popl
movl
push
movb
lea
jmp
mov
pushf
push
lea
jmp
pushl
cbtw
pushl
movl
movw
cwtl
bt
pushf
mov
pushf
sub
jmp
pushf
lea
cpuid
call
pusha
pusha
repz
popl
jmp
mov
movsbw
jmp
mov
pushf
lea
jne
jmp
call
pushl
popl
movb
push
pushf
lea
jmp
push
call
call
pusha
pushl
push
mov
pushf
push
pushf
popl
jmp
push
call
pushf
jmp
pushf
inc
movb
movw
bt
push
not
clc
pusha
sub
jmp
call
pushf
pushf
pushl
popl
pusha
lea
jmp
pushl
popl
mov
push
push
pushf
lea
jmp
mov
pushf
mov
cmp
pushf
clc
sub
bt
clc
shr
movb
jmp
call
mov
pushl
pusha
jmp
pushf
lea
jne
jmp
jmp
call
mov
pushf
pushl
ret
mov
pushf
movb
mov
mov
call
test
cmc
sub
mov
mov
push
pushf
mov
pushf
lea
jmp
pushf
call
pusha
pushf
popl
jmp
pushl
popl
mov
mov
push
pushf
lea
jmp
clc
sub
pushf
clc
jmp
jmp
stc
pusha
test
mov
jmp
stc
add
pushl
pushf
cmc
cwtl
push
cmp
cmp
jmp
call
mov
push
mov
movb
pushf
push
mov
pushf
call
mov
jmp
jmp
mov
jmp
sub
stc
bt
pusha
pushf
rol
jmp
pusha
movb
mov
call
pushf
popl
push
pushl
popl
movl
movw
movb
lea
jmp
call
pushf
pusha
mov
pushl
pushf
jmp
call
mov
push
mov
push
pushf
mov
pushf
pushf
jmp
pushf
pusha
call
pushf
pushl
pusha
mov
push
pushf
pushf
push
lea
jmp
mov
call
test
xor
push
pushf
lea
jne
dec
push
test
jmp
clc
bt
cmp
push
pushf
lea
ja
daa
lahf
sub
mov
pushf
aaa
bts
adc
lea
bts
btc
sar
bt
sub
cmc
lea
btr
and
rcr
sub
pusha
mov
pusha
lea
pop
pushf
popl
not
std
not
pop
mov
jmp
mov
pushf
mov
push
mov
pushl
popl
movw
push
mov
lea
jmp
pushf
mov
pusha
pushf
pushl
ret
mov
push
movb
movb
repz
popl
pushl
mov
pushl
lea
jo
push
push
mov
jmp
jmp
jmp
mov
jmp
mov
call
mov
push
call
add
movb
mov
mov
movl
push
lea
jmp
push
daa
shrd
movzww
test
jmp
mov
mov
call
bt
shr
pushf
pushf
pusha
or
cmc
test
xor
push
jmp
mov
mov
push
lea
ja
push
mov
pushf
push
mov
jmp
push
movb
mov
movw
pushf
lea
jmp
mov
pushf
mov
mov
pushl
push
mov
mov
mov
pushf
call
cmp
bt
sub
push
add
jle
cmpl
push
push
movb
mov
call
mov
pushf
mov
jmp
pushl
popl
pushf
movb
lea
jmp
pushl
pushf
popl
pushf
pusha
push
pushl
popl
pushf
movb
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
jmp
mov
pushf
pushl
popl
pushf
pusha
movb
movw
lea
jmp
pushf
mov
lea
jl
push
pushf
mov
jmp
pusha
not
ror
mov
bt
cmp
call
pushf
mov
pusha
mov
mov
mov
pushf
push
mov
repz
popl
pusha
movb
mov
call
pushl
call
mov
pushf
pusha
pushf
repz
popl
pushf
jmp
rol
sbb
mov
jmp
pushl
mov
jmp
push
mov
jmp
pushf
clc
xchg
clc
clc
call
pushl
popl
pushl
movw
lea
jmp
pusha
pushl
popl
mov
pusha
pushf
lea
jmp
mov
jmp
aam
clc
mov
pusha
add
test
mov
clc
add
pusha
jmp
pushf
lea
jne
not
mov
and
mov
stc
push
and
clc
cmp
cmp
movb
push
lea
jne
bts
bsr
movsbw
xorb
push
setl
mov
push
movb
pusha
lea
jmp
push
mov
pushf
lea
jmp
neg
call
lea
jo
mov
pushf
mov
lea
jmp
mov
pushf
jmp
bswap
pusha
lea
call
call
mov
mov
mov
movb
push
movb
push
lea
jmp
jmp
inc
clc
lea
not
push
ror
call
mov
jmp
add
movb
mov
movl
mov
lea
jmp
movb
pushl
popl
mov
movb
movw
lea
jmp
pusha
mov
shrd
adc
rol
stc
add
pushf
bts
xor
lea
and
neg
mov
cmp
stc
clc
pusha
shl
sub
jb
test
shr
test
jmp
pushf
or
stc
xor
call
mov
call
pusha
call
mov
pushf
mov
jmp
movw
mov
mov
movw
pushf
call
lea
jg
repz
push
mov
push
mov
pushf
pusha
jmp
push
dec
sbb
bsf
bt
movzbw
and
and
bsr
pushf
mov
pusha
clc
stc
add
jmp
not
btc
add
mov
stc
inc
setp
add
push
jmp
lea
mov
pusha
repz
popl
ror
jmp
movb
jmp
mov
pushf
call
jmp
rol
movsbw
call
movb
bt
add
test
stc
push
sub
pushf
lea
mov
mov
push
pushl
lea
jmp
mov
pushl
mov
pushl
pusha
mov
movb
mov
mov
movl
push
call
bt
xor
stc
sub
movl
sub
lea
js
pushf
mov
pushl
mov
movb
mov
lea
jmp
ja
pusha
mov
pushl
jmp
pushl
pushf
jmp
call
movl
pusha
mov
pushl
jmp
mov
pusha
pushl
movw
sub
stc
cmc
add
push
jmp
shrd
jmp
movb
sub
test
test
stc
cmc
sub
push
movb
push
pushl
mov
pushf
lea
jmp
push
pushf
mov
pushf
pushl
mov
pushl
pusha
jmp
call
pushf
jmp
push
jmp
movb
jmp
push
mov
push
pusha
repz
popl
pusha
mov
call
mov
pushf
jmp
mov
movb
pushf
popl
jmp
pushf
pushf
mov
jmp
pusha
mov
jmp
pusha
mov
pushl
push
mov
push
mov
pushf
call
sub
movb
cmp
push
shl
lea
jl
pusha
mov
pushl
mov
pusha
pushf
pushf
pushf
popl
call
movb
jmp
mov
call
call
pusha
mov
pushl
movb
push
mov
pushf
mov
lea
jmp
rcl
shl
sbb
mov
bt
call
pushf
pusha
mov
pushf
pushf
lea
jmp
jmp
mov
jmp
mov
lea
jle
mov
pushf
call
push
test
pusha
pushl
popl
bt
bt
add
pushf
call
divl
pushf
pusha
jmp
mov
push
mov
call
mov
pushf
pushf
mov
pushl
ret
jmp
call
clc
cbtw
pushl
movb
pusha
cwtl
push
sub
jmp
mov
call
mov
mov
pushl
popl
push
lea
jmp
mov
pushf
call
mov
pusha
mov
pusha
lea
jp
push
push
repz
popl
jmp
call
jmp
pushf
call
and
mov
pushf
and
neg
mov
call
call
pushl
popl
pushf
lea
jmp
mov
call
pushf
popl
movb
call
push
pushf
popl
call
repz
popl
mov
movb
jmp
sub
push
call
pushf
pushf
mov
jmp
lea
jmp
call
jmp
jmp
mov
call
pushf
pusha
mov
pusha
jmp
shrd
mov
stc
sub
call
jmp
or
shl
shr
call
jmp
pusha
jmp
call
mov
jmp
pushf
mov
jmp
mov
mov
bt
btr
test
bswap
add
setae
inc
shl
dec
btr
rcr
neg
sub
adc
xor
movsbw
dec
btr
rcr
movsbw
add
shl
push
rcr
shr
mov
pusha
test
add
pushf
push
jmp
sub
push
jmp
jmp
mov
push
lea
jmp
push
jmp
mov
push
mov
movw
mov
lea
jmp
sbb
and
mov
jno
bt
add
pusha
mov
pusha
mov
mov
push
mov
pushl
lea
jmp
shl
cwtl
bsr
pusha
mov
sar
add
jle
rcl
sub
mov
jmp
dec
pushf
call
movl
pushf
mov
movb
pusha
pusha
pushl
ret
call
pushf
jmp
sub
push
mov
mov
push
push
lea
jmp
pusha
movb
mov
jmp
call
call
mov
call
pushf
popl
jmp
pushl
mov
movb
mov
mov
pushf
pushl
popl
push
pushl
mov
lea
jmp
sub
pusha
mov
call
call
mov
lea
bswap
pushf
jmp
pushf
movb
pusha
mov
pushf
mov
call
pushf
push
mov
movl
pushf
mov
lea
jmp
clc
mov
shl
rcr
add
rcl
mov
pusha
mov
sub
cmp
movb
stc
test
shr
pushf
mov
jmp
jmp
call
pushf
mov
movw
pushf
mov
pushf
mov
jmp
push
mov
mov
pushf
call
mov
lea
jo
mov
push
mov
lea
jmp
mov
push
pushf
mov
pushf
popl
call
jmp
pushf
jmp
call
call
pushl
popl
pushf
lea
jmp
mov
pushf
mov
jmp
sub
jmp
jmp
pusha
pushl
popl
pushf
lea
jmp
jmp
movw
pushf
inc
cmc
pushl
pusha
jmp
bsr
aad
sub
mov
push
rcr
mov
cmp
cmp
cmp
call
pushf
pushf
pushf
mov
jmp
call
mov
push
pushl
popl
mov
lea
jmp
pusha
mov
call
mov
pushf
jmp
mov
mov
push
repz
popl
call
add
add
jmp
pusha
mov
pushf
movw
pushl
popl
pushf
pusha
movb
pushf
lea
jmp
decl
call
call
mov
pushf
mov
mov
call
push
mov
push
mov
mov
pushl
pushf
lea
jp
push
pusha
pusha
call
pusha
pushf
pushf
lea
jmp
mov
call
sbb
sbb
sub
xor
test
movzbl
shld
shr
mov
jmp
call
sub
jmp
rol
pushf
sub
jb
test
bt
sub
clc
call
jmp
mov
pushf
jmp
cmc
call
pushf
pusha
add
pushf
lea
jnp
mov
pushf
pushf
push
mov
lea
jmp
pushf
mov
mov
pushf
call
mov
call
lea
jg
mov
pushf
pushl
call
mov
pushl
mov
jmp
pushf
pushf
mov
pusha
pushf
pushl
mov
call
call
pusha
pusha
pushf
mov
mov
mov
jmp
movb
pushf
mov
call
rol
push
jmp
dec
pushf
pushf
bt
rol
stc
sub
call
cltd
rcl
mov
clc
mov
pushf
add
call
cmp
test
push
pusha
cmpl
call
mov
mov
pushf
pushf
lea
jmp
call
call
pushl
push
mov
pusha
jmp
mov
mov
pushl
jmp
pushf
popl
call
pushf
mov
mov
pushf
jmp
mov
mov
pushl
pushl
lea
jmp
pusha
clc
aas
mov
push
cmp
clc
mov
sub
pushf
call
lea
jno
pusha
mov
push
pusha
mov
call
mov
jmp
push
movb
call
mov
push
push
jmp
lea
jo
push
mov
call
mov
call
movb
call
push
pusha
jmp
