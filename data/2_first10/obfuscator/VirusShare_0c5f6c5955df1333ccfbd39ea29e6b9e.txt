pop
and
popf
xchg
shll
sub
sbb
xchg
or
aam
xchg
add
mov
pop
insl
scas
jge
xchg
inc
jmp
filds
xchg
out
cs
adc
out
insb
push
jmp
aaa
cmpsl
adc
jno
mov
pop
in
inc
xor
lcall
dec
pop
push
add
fcoml
xor
stos
lahf
mov
push
lret
jae
into
cld
movsl
fisubs
ds
mov
in
call
push
and
stc
xchg
lods
aam
cltd
sub
mov
cli
pop
fdivrs
ja
shl
dec
out
scas
jnp
mov
cld
fdivrs
xor
and
xchg
test
scas
ficoml
js
push
inc
cwtl
out
sub
cmp
push
call
cmp
je
sub
in
sahf
mov
adc
repnz
dec
scas
add
jmp
jecxz
inc
repz
dec
movsbl
mov
movsbw
movzbl
push
mov
lea
pusha
push
not
mov
push
jmp
jmp
add
add
push
add
push
add
rclb
push
add
loop
add
add
add
bsr
shld
or
add
add
sbb
pushf
mov
mov
mov
pushl
add
jo
bt
bt
repnz
call
movb
inc
mov
adc
lea
pushf
pusha
call
push
jg
loope
and
aas
xchg
iret
int3
imul
aas
and
jae
repz
or
fnstenv
decb
mov
mov
jne
fiaddl
cmpb
xchg
fdivs
orl
mov
adc
xlat
lahf
fidivrs
iret
jle
pop
dec
aam
repnz
leave
or
mov
mov
sbb
loope
inc
cmc
leave
lds
pop
cmp
xchg
gs
imul
sbb
test
jp
mov
popf
sub
repnz
outsb
repz
inc
orl
fsubrl
xchg
pop
stos
mov
adcb
orb
int3
and
pusha
sub
xchg
xor
scas
mov
dec
out
loop
fdecstp
xchg
xchg
and
addr16
lock
and
in
loope
lods
xchg
xchg
inc
std
dec
pop
sar
cmp
ja
or
push
cmp
mov
sub
or
fldl2t
imul
jmp
mov
pusha
lea
je
call
pushf
lea
ja
bt
push
imul
pushf
add
pushf
pusha
pushf
push
lea
jmp
xor
nop
push
inc
gs
sbb
push
fists
gs
sbb
inc
xchg
push
inc
gs
jbe
push
inc
gs
js
je
or
inc
add
mov
movaps
mov
inc
gs
xchg
fdivs
sub
mov
adc
xchg
dec
shll
sub
sahf
push
inc
gs
fwait
cmp
sub
pop
inc
or
popf
and
push
inc
gs
lods
push
inc
gs
jge
add
sbb
inc
gs
mov
xor
xchg
mov
dec
adc
jbe
push
inc
gs
dec
ja
or
push
repz
inc
mov
adc
push
stos
pop
inc
mov
subb
nop
push
inc
gs
fwait
js
stos
xor
xchg
aam
xor
xor
push
or
inc
fisttps
sub
push
inc
gs
inc
fs
lcall
inc
loope
sub
pop
and
lret
sub
aad
inc
cld
aad
sub
leave
push
inc
gs
push
or
sbb
inc
gs
xor
pop
push
inc
gs
pop
aaa
cmp
inc
rorb
sub
jb
inc
gs
push
pop
scas
or
inc
gs
inc
and
adc
inc
aam
inc
gs
int3
jl
sub
notb
gs
ljmp
push
inc
gs
loopne
adcl
inc
gs
loop
out
adc
inc
rcll
gs
add
add
gs
and
div
push
inc
gs
pop
movsb
jg
sub
ljmp
push
je
inc
gs
nop
mov
mov
gs
push
sbb
xor
jbe
push
inc
gs
pop
xor
sub
xchg
push
inc
gs
push
test
and
inc
gs
lods
cmpsl
lea
pushf
pushf
movb
mov
movl
call
jp
lret
out
pop
or
jle
and
fisubs
hlt
mov
dec
les
and
xchg
rclb
cli
ss
ret
mov
pushf
xchg
jnp
push
mov
test
mov
or
test
sub
push
addr16
sahf
adc
sbb
pop
gs
xchg
add
aas
and
cmpb
cs
into
lret
pop
repz
lahf
fwait
outsl
dec
out
inc
jmp
into
add
and
jmp
push
add
pop
or
add
adc
add
xchg
nop
call
add
cmp
call
add
ret
or
pop
loop
sbb
xchg
fcomps
sbb
cmc
and
lea
in
enter
imul
dec
cmpsl
movsb
pop
inc
and
cmp
test
mov
ja
addl
and
gs
inc
cmp
mov
cmpsl
es
fnstenv
push
mov
jnp
cmp
adc
aam
movsb
push
in
enter
enter
into
add
push
lea
je
push
pusha
push
mov
lahf
lea
jmp
lea
je
pushf
clc
pushl
stc
sub
test
clc
cmp
push
lea
ja
jmp
bswap
mov
movzbw
pusha
lea
not
mov
sete
sete
not
not
mov
lea
jb
movzbl
movsbw
not
pop
jmp
push
lea
jne
not
movb
mov
push
mov
call
jmp
mov
movsbw
pop
pusha
pushl
ret
pushf
push
pushf
lea
call
push
pushf
lea
jne
setg
bswap
push
mov
mov
pushf
mov
lea
jmp
mov
sbb
mov
pushf
push
pushl
lea
mov
neg
ror
mov
not
test
jmp
call
call
stc
clc
sub
push
pushf
call
movl
mov
pushf
lea
jmp
movl
movb
pusha
call
rorl
add
mov
inc
rcrl
ret
inc
out
enter
inc
shll
xor
pushl
and
imul
stc
add
cwtl
sub
pop
cwtl
sub
int
icebp
xchg
mov
inc
int
mov
jp
bnd
push
repnz
push
into
add
pop
cld
cmp
xor
push
movw
movl
pusha
movl
pushf
mov
lea
jmp
jmp
push
aaa
sub
mov
subb
xor
les
mov
les
or
xchg
push
cli
cmc
adc
ficompl
pop
and
mov
mov
and
push
mov
jo
repnz
inc
movsl
and
sub
mov
mov
insb
xor
jo
mov
xchg
into
add
cmpsb
das
imul
mov
pushf
movb
inc
setb
pushl
inc
stc
xchg
rol
cmc
xor
dec
mov
pushf
rcr
mov
pusha
bt
cmc
mov
bswap
cmp
mov
test
bt
pushf
push
sub
push
mov
pushf
push
rep
bswap
push
mov
movb
pushf
lea
jmp
mov
pusha
jmp
jmp
call
stos
push
pushl
pusha
lea
jmp
pushl
popl
pushf
pushl
ret
or
push
lea
jne
lea
bsf
mov
pusha
or
jmp
stc
push
clc
shr
jmp
test
mov
not
shr
clc
neg
add
not
bt
shl
mov
test
mov
cmp
test
pusha
call
adc
sti
orb
jae,pn
xorl
pop
pop
and
sti
test
jb
ljmp
and
jg
ljmp
xchg
popa
mov
mov
jle
xor
mov
lahf
jle
and
sbb
int3
pop
int
dec
sbb
int
cs
jecxz
rcrb
cmc
mov
mov
jle
xor
imul
mov
push
call
push
sti
lock
or
jge
adc
out
pushf
push
fstpt
fidivrl
fcmovu
inc
pop
pop
lahf
xor
cmpsb
out
loop
imul
scas
mov
test
cltd
sub
outsl
das
iret
mov
adc
int
loope
lods
lods
mov
dec
or
incl
xchg
aad
fs
pminsw
and
sahf
sahf
dec
mov
fldcw
stos
je
lcall
aad
aaa
rol
mov
pusha
and
mov
int
inc
inc
pop
lods
mov
movsl
mov
insb
lods
mov
adc
jle
movl
pushf
pusha
pusha
lea
jmp
push
shl
sub
rcr
movsbw
stc
xor
shr
shl
xor
bt
shl
mov
rcl
add
bswap
shr
add
bts
mov
clc
call
movl
call
mov
pusha
push
pushf
push
pushl
ret
test
pushf
call
push
movl
push
push
movl
pushf
mov
lea
jmp
add
pushf
pushf
movl
push
lea
jmp
lea
ja
pusha
clc
jmp
addr16
jb
mov
leave
adc
jo
test
lret
jmp
nop
xchg
sbb
scas
mov
mov
dec
xchg
push
lods
cltd
xlat
sub
imul
fwait
xor
movaps
mov
fistps
ret
push
push
scas
cmp
sub
xor
das
fcmovu
sbb
ss
mov
sub
fsubs
mov
imul
dec
xor
adc
adcl
into
add
cli
pop
ss
cmp
cmp
lea
jle
pushf
lea
ja
call
mov
jecxz
leave
es
hlt
lret
sub
jle
enter
hlt
test
das
mov
int3
cwtl
bound
jbe
cmp
test
mov
mov
jecxz
addl
bound
jns
cmp
movsl
out
push
cli
or
jne
sub
std
mov
in
adc
mov
jge
sbb
ret
popa
fdivl
cld
mov
mov
push
repnz
inc
push
ljmp
stos
stc
inc
orb
mov
mov
jbe
push
stos
xchg
xchg
inc
cmp
into
add
mov
pusha
lods
lock
and
adc
jns
adc
jb
push
push
ret
inc
jg
adc
ret
pusha
mov
scas
sbb
dec
insl
xchg
not
push
ret
xchg
je
shrb
mov
fsubp
xchg
add
addr16
icebp
add
jmp
sub
push
movsb
int
xchg
xchg
dec
leave
fldt
mov
sbb
or
sbb
idivl
add
xchg
lret
aad
jne
fs
add
test
xlat
call
arpl
enter
lods
icebp
pop
inc
mov
pusha
mov
fists
cmp
rcll
out
outsl
cmp
data16
sahf
roll
out
push
xor
xor
cmc
enter
fists
and
xor
mov
fs
sub
xchg
adc
adc
fisttpl
xchg
add
adc
pop
pop
and
outsl
and
pop
arpl
leave
ficoms
call
push
jo
push
dec
and
mov
push
xlat
les
inc
daa
inc
ss
lds
enter
lock
clc
dec
dec
adc
rorb
jecxz
mov
in
sbbl
ljmp
mov
xor
mov
push
test
jnp
lfs
adc
cltd
xor
scas
push
ret
inc
mov
mov
dec
sbb
adc
pmaxsw
mov
leave
mov
adc
jnp
idivl
int
gs
add
pusha
movb
movl
jmp
icebp
rcll
jns
adc
inc
xor
mov
sarb
jo
enter
sub
clc
in
pushf
and
mov
lock
shl
sub
pusha
fstl
sub
test
adc
lea
fsts
test
jb
or
jbe
pop
aas
sahf
mov
xchg
pop
outsl
shl
jb
and
sub
pop
pop
mov
sbb
pusha
in
ljmp
iret
fimull
dec
fsts
xor
cmc
icebp
lods
add
fldl
fimull
xchg
dec
pop
and
add
push
movl
pushf
mov
mov
push
movb
pushl
pushl
ret
mov
insb
or
mov
js
pop
faddp
xorb
insb
and
ret
dec
sub
mov
sub
ret
sti
pop
in
jmp
add
das
fsubrl
adc
xchg
outsb
out
sbb
ja
outsb
int
sti
lods
push
sbb
sub
idiv
lods
incb
lods
lods
ja
sbb
adcl
push
sbb
call
pop
mov
ljmp
push
stos
out
sub
es
mov
fwait
pushf
subl
jb
dec
dec
sub
inc
jae
fstps
pop
jecxz
inc
or
in
mov
idivl
test
and
adc
enter
inc
xlat
add
cmpsb
pop
out
xor
aas
inc
xor
in
cmp
cmp
pop
fwait
pop
out
xchg
mov
mov
xchg
call
xchg
jb
idivb
dec
push
ret
xchg
fbstp
jnp
outsl
sub
jne
push
pop
dec
rclb
in
roll
pop
jp,pt
xor
jno
sub
test
rcrb
push
dec
out
jae
ja
inc
cwtl
dec
insl
pop
btr
shlb
int3
ljmp
lds
cmp
pop
or
lods
ljmp
lahf
aam
push
stos
ljmp
dec
sub
repnz
add
mov
jge
add
add
add
shr
cmp
cmp
call
cltd
movsb
dec
add
sub
pop
inc
sub
dec
fistpl
xlat
fsubr
lods
cmpsl
out
dec
xor
cmpsl
pop
in
sub
pop
push
push
inc
rcrl
sbb
mov
cli
jle
push
mov
pop
xchg
iret
loope
mov
push
jecxz
inc
das
inc
outsb
mov
sbb
xchg
sahf
rcll
mov
gs
sub
jecxz
cmp
fwait
inc
mov
lcall
jb
dec
loop
mov
sub
ret
or
push
mov
xlat
pop
iret
icebp
mov
mov
subb
pop
cs
add
mov
jae
jb
xor
fs
insb
add
fistps
dec
das
dec
lea
ja
inc
shl
sub
stc
bt
add
bt
call
jo
stc
cmpb
push
pushf
lea
jne
shl
ror
bt
ror
sub
aaa
lea
and
mov
shl
pusha
test
cmc
add
shr
or
or
mov
pushf
bt
pushl
cmp
test
push
jmp
pushf
lea
je
xchg
shld
aad
shrd
xor
sbb
mov
cmp
mov
movzbw
clc
not
sub
shr
sub
mov
pushf
or
jmp
lea
movb
push
movl
call
lea
ja
clc
add
cmc
clc
call
jmp
call
call
bswap
mov
lahf
setg
movl
setns
lea
lea
jb
push
pushf
movl
pusha
call
movl
pushf
pushf
pushl
pushl
lea
jmp
call
je
das
aam
es
jbe
dec
xor
mov
movsl
mov
jp
sub
xchg
les
out
pop
inc
out
lock
or
pop
imul
movsl
mov
and
int
lock
loop
arpl
dec
pop
rcrl
mov
mov
es
xor
sub
enter
clc
mov
call
xor
movsl
xchg
int
in
lahf
jp
aaa
add
int
cmpsl
mov
sti
test
cmp
mov
xor
and
cmp
movl
pushf
pushf
pushf
mov
lea
jmp
call
add
add
and
pusha
rcr
xchg
aaa
lea
xadd
bsf
lea
cmc
shl
sub
aaa
ror
not
and
push
xor
adc
push
inc
push
inc
xor
lea
bswap
lea
pushf
jmp
pop
push
jecxz
insb
es
mov
cld
fldenv
loopne
cmp
mov
loop
repz
jo
scas
ljmp
add
mov
mov
lea
movl
cmp
mov
roll
mov
test
ds
adc
inc
push
outsl
sub
stos
icebp
in
pushf
repnz
lret
push
and
ljmp
lock
pusha
pushf
push
cs
mov
inc
inc
ds
add
add
roll
sbb
add
lea
seto
pop
movsbw
pushf
xchg
mov
pushf
push
movzbw
mov
pushf
call
lea
call
pushf
mov
push
pushf
lea
jmp
pusha
call
stc
stc
cmp
pushl
call
mov
mov
int3
stos
inc
push
fxch
lret
mov
andl
cmpsl
or
rcrb
fsts
xchg
add
jle
out
adc
cmp
out
negb
es
jae
fcmovne
fwait
xchg
inc
call
mov
fdivl
pusha
push
mov
mov
lea
je
call
pusha
jmp
lea
jne
bsr
xor
add
sar
or
ror
mov
or
clc
add
adc
mov
test
test
push
jmp
clc
cmp
jmp
mov
pop
pushf
mov
cmp
or
jmp
push
bsf
mov
inc
sbb
lods
cmp
mov
pop
ljmp
scas
pop
dec
sub
mov
push
push
adc
out
sbb
mov
sbb
cmc
icebp
lea
int
xor
test
pop
in
sub
lcall
int
xor
sbb
add
and
add
rorl
adc
in
cs
insl
dec
fbld
mov
or
or
mov
inc
sub
divl
or
inc
arpl
dec
jmp
idivl
dec
adc
aam
in
je
jno
dec
fwait
xlat
stos
mov
ret
insl
inc
inc
xlat
imul
call
lods
into
add
pop
inc
movl
pushl
pusha
lea
jmp
jmp
add
inc
gs
outsl
fs
gs
imul
add
pop
out
mov
inc
sbb
scas
dec
inc
lds
fmul
movb
add
mov
dec
push
sbb
dec
mov
es
repz
test
lahf
cmp
and
ss
sub
jge
mov
sbb
cmp
rcll
mov
orl
into
cmp
push
inc
test
fwait
push
mov
or
out
mov
ret
fldenv
ljmp
mov
push
fidivl
or
push
add
leave
sbb
adc
inc
out
cli
xchg
add
inc
sub
aaa
add
pusha
push
push
mov
lea
jne
call
sbb
shll
cld
mov
out
mov
pop
jecxz
imul
add
int
rolw
adcb
dec
insb
adc
xchg
in
mov
mov
xchg
in
mov
mov
inc
jge
stos
popa
mov
xor
sbb
adc
std
push
adc
lcall
idivl
stos
les
fistpl
ficomps
in
adc
dec
mov
loopne
aas
std
lds
out
dec
dec
fcmovu
mov
test
xor
mov
and
pminsw
xchg
sar
sahf
jmp
xor
aad
lods
xchg
outsb
lret
pop
inc
or
lds
add
xchg
jae
stos
movsl
popf
insl
divb
jno
movb
shl
lea
xchg
icebp
fistpll
dec
and
inc
jecxz
pop
inc
adc
arpl
ja
dec
dec
jns
sub
sahf
cmp
fistpll
dec
int
je
das
test
fisubs
cli
divb
jmp
xor
pop
loop
add
in
mov
fisubl
sbb
jmp
or
test
cmp
inc
push
xchg
pop
push
repz
jno
inc
inc
aas
cmp
push
push
or
adc
ficoms
mov
cld
cmp
push
cmp
cmp
dec
out
pop
adc
ret
cmp
insl
push
std
mov
or
pop
mov
mov
push
mov
xchg
pop
push
pusha
movsbw
movl
mov
lea
jmp
in
push
call
jmp
repz
push
jmp
pushf
mov
lea
je
pushf
lea
jmp
cmp
cmp
shrb
hlt
mov
xchg
xchg
xchg
xchg
jne
mov
stc
in
nop
sub
pop
xacquire
adc
mov
lahf
jae
mov
mov
addr16
sbb
sahf
adc
aam
repnz
xchg
movsb
js
mov
mov
xchg
mov
jne
mov
les
mov
stos
push
or
xor
loop
mov
or
pop
xchg
clc
shll
in
dec
jle,pt
sbb
mov
in
hlt
into
add
popa
repnz
mov
pushf
pushf
lea
jmp
add
dec
outsl
arpl
inc
jb
add
inc
add
pusha
pushl
ret
lea
jl
je
call
mov
movsb
push
jecxz
cmp
mov
jns
xlat
ds
fstpl
xchg
call
dec
fidivl
jb
mov
and
arpl
sub
mov
push
ret
hlt
jecxz
aaa
mov
mov
sarb
pop
inc
enter
fcomi
pop
int
aas
mov
movlps
xchg
sub
xchg
push
mov
addb
xor
mov
in
ret
mov
inc
push
cwtl
cmp
push
xchg
jne
bound
ja
fucomi
ret
and
cwtl
inc
xlat
pop
mov
in
inc
add
mov
out
inc
dec
or
or
int3
pop
sahf
ja
xchg
jns
adc
mov
js
daa
inc
gs
sbb
mov
in
test
das
xchg
mov
adc
xorl
out
dec
mov
out
add
xchg
sbb
add
xor
xor
pop
jge
ror
addl
sbb
pop
sub
mov
pop
sar
xchg
stos
out
sub
push
stos
test
in
xchg
pop
xchg
jb
add
fldl
pop
sbb
je
dec
inc
mov
lcall
test
addr16
cwtl
cli
mov
test
pop
xchg
cmp
or
mov
iret
sbb
fwait
inc
push
fmul
add
out
arpl
cmp
out
jbe
ss
jl
adc
jns
inc
jb
aam
pop
daa
gs
sbb
pop
popf
sbb
and
in
pop
cmp
loope
sbb
fnsave
adc
in
aas
in
loop
jne
pop
pop
ret
ret
add
xor
int
scas
jne
or
dec
mov
jecxz
sbb
das
out
movsb
fwait
mov
jno
in
ret
fcomi
mov
mov
push
pop
loope
cmp
aaa
jbe
gs
lcall
ret
xchg
gs
lcall
ret
fst
sbb
cwtl
lock
addr16
add
inc
cmpsb
jne
mov
pop
pop
or
in
repz
negl
cwtl
sbb
xchg
mov
and
les
ret
pop
sbb
sub
divl
rsm
movsl
jecxz
iret
sbb
mov
mov
clc
pushf
mov
xchg
rcrb
sbb
inc
sbb
jnp
pop
out
aaa
stc
lock
and
pushf
cmp
gs
sbb
out
sub
pop
inc
inc
test
dec
es
fwait
sbb
or
cmp
imul
sub
fstp
lds
scas
sbb
dec
into
jecxz
pop
jg
fsts
gs
cmpsb
xor
or
cwtl
lahf
xchg
mov
sbb
int3
mov
add
or
fdivl
adc
jno
push
sub
stc
lds
xlat
push
fs
arpl
cmp
ja
lret
insb
rcr
adc
filds
xor
push
cltd
outsl
popf
stc
sbb
inc
fwait
repz
cltd
js
ja
cmp
lds
dec
or
sbb
lahf
cltd
mov
mov
repz
leave
shrb
hlt
imul
pop
push
gs
ds
cltd
jge
std
inc
xchg
arpl
xchg
sub
dec
cmp
test
adc
hlt
mov
mov
je
push
out
add
in
inc
test
jne
mov
test
or
or
stc
fsubs
pop
shlb
sub
jmp
aam
pop
jecxz
daa
shl
pop
mov
daa
mov
lahf
mov
push
mov
add
out
xchg
jle
add
push
cli
add
fwait
gs
rcrl
cmc
cmpsl
sbb
and
push
and
jg
gs
jp
addr16
addr16
pop
pop
fidivrl
xchg
add
xlat
fbld
jmp
out
xchg
pop
fldl2e
clc
mov
mov
pop
ret
icebp
cmp
mov
stos
or
in
test
cltd
cmp
fstps
fdivrl
icebp
adc
lret
jge
inc
cmp
int3
stos
cmp
inc
pusha
cmp
add
out
das
fisubs
gs
stos
push
test
cmp
inc
inc
negl
scas
ljmp
mov
push
loop
pop
jne
inc
lcall
imul
pop
xchg
lock
inc
sbb
stos
movsw
out
scas
dec
fists
inc
bnd
sbb
nop
in
out
aas
in
lock
adc
push
testb
ret
add
mov
pushf
fnstenv
testl
adc
in
mov
out
mov
ss
sbb
xchg
fimull
popf
cmp
sub
retw
fmull
fimull
pop
aam
pop
pop
cmpsl
fidivl
jg
pop
or
sbbl
mov
lock
mov
loop
sbb
les
fbstp
ret
loopne
testb
xchg
adc
jne
std
enter
pushl
pop
cmpsb
jmp
cmp
jmp
mov
push
sbb
push
add
shrl
or
popa
adc
xlat
icebp
repz
negb
mov
sbb
cli
xlat
and
insb
scas
adc
dec
je
loop
imul
cmpsl
ss
rcr
inc
mov
mov
push
mov
xor
add
adc
pop
lret
jne
dec
inc
add
loope
scas
jg
sub
cmp
shrb
jae
frstor
adc
in
and
and
jle
xor
nop
ficompl
or
ljmp
add
or
loopne
xlat
je
push
movsb
stos
cmp
scas
popf
sbbl
fsubr
jecxz
pop
fidivrs
push
inc
mov
std
inc
add
jecxz
test
pop
cli
cli
pop
push
outsl
or
or
test
jmp
test
aaa
mov
loope
sbb
jns
ficompl
notl
and
pop
out
push
std
dec
cmpsl
jne
add
out
cld
or
xchg
dec
xchg
repnz
xor
frstor
repz
scas
lret
mov
xchg
out
mov
nop
hlt
xor
cmpsb
sub
jae
push
fbld
out
mov
push
sbb
arpl
fucomp
xlat
dec
gs
pop
pusha
addr16
out
iret
pop
in
add
and
cmp
mov
mov
dec
cmc
add
xor
xchg
pop
lods
fs
jne
add
sbb
mov
std
out
dec
and
dec
fistpl
inc
jl
pusha
fdivs
jns
push
addr16
and
dec
jae
pop
mov
outsl
jae
cmp
push
ret
andl
inc
and
cmpsl
inc
push
sub
lret
mov
sbb
cmpsb
jecxz
negl
jbe
or
jb
pop
adc
pop
pop
push
gs
int3
fsubrs
jl
addr16
sub
fdivr
xchg
or
in
lea
dec
pop
sbb
sub
cmp
inc
imul
sbb
push
aad
bound
xchg
pop
outsl
adc
out
pop
imulb
out
adc
sbb
gs
pop
sbb
push
pop
jp
pop
addr16
push
cld
and
hlt
repnz
dec
aaa
pop
cmp
inc
fstps
negl
jo
mov
xchg
xchg
movsb
outsl
sub
outsb
pop
pop
or
xor
push
mov
andl
mov
gs
adc
aaa
aaa
inc
loopne
sub
or
loop
cmp
pop
pop
or
and
lods
xchg
loopne
into
pop
inc
int
sbb
push
push
add
stos
sbb
cmp
in
add
fstpl
push
fwait
clc
in
pop
cmp
in
mov
mov
inc
popa
ror
outsl
sahf
icebp
cmp
fiaddl
pop
gs
mov
sbb
mov
adc
loopne
pop
ljmp
jns
sarb
hlt
xlat
data16
aaa
jbe
stos
cmp
loope
jecxz
pop
or
repz
ljmp
sub
daa
or
cmp
lret
fimull
aas
xchg
fisttpl
or
sbb
dec
dec
cmpsb
lds
jb
add
fdivr
push
sbb
pop
pop
rcrb
cltd
sbb
jecxz
andl
jne
loope
test
lret
push
and
clc
mov
addr16
cmpsl
lret
or
movsl
pop
push
pop
in
xchg
push
aaa
cmp
dec
fincstp
out
cmp
pop
add
stc
clc
xor
filds
test
pop
mov
mov
jecxz
neg
ss
ljmp
xor
xchg
xor
cltd
repz
adc
repnz
sbb
inc
mov
pop
push
adc
mov
push
sbb
mov
or
fmuls
sub
jg
pop
gs
xchg
out
adc
popa
xchg
inc
xchg
sbb
repz
mov
sbb
mov
in
dec
movsl
aam
dec
pop
or
sbb
pop
repnz
pop
sbb
in
pop
xchg
mov
insb
lock
scas
fistl
pusha
fsubrl
cmpsb
push
cmpsl
mov
sbb
adc
add
push
lahf
push
imul
pusha
cld
xor
mov
loopne
imul
and
sbb
and
gs
ja
mov
xchg
out
decl
ficomps
pop
add
leave
jne
cmc
neg
cltd
add
jae
lret
insl
outsl
aaa
outsl
mov
mov
hlt
jbe
stc
pop
add
pop
arpl
add
xchg
and
loop
pop
popa
lahf
shlb
sub
les
out
std
mov
mov
sti
push
cwtl
dec
les
sub
xchg
inc
rcrl
xor
imul
jmp
lds
cmp
shll
xchg
enter
adc
repnz
decl
mov
jne
push
sbb
jecxz
jg
in
arpl
push
pop
inc
sub
cmp
push
outsb
icebp
aaa
mov
arpl
icebp
inc
fstl
push
aaa
out
cmp
negb
leave
add
adcl
dec
mov
idivl
in
sbb
dec
sbb
insl
fisttps
pop
cmp
inc
icebp
and
jne
push
sbb
mov
loope
stc
push
sbb
fldenv
pop
inc
and
jecxz
pop
out
cmp
ss
outsb
mov
xchg
xor
imul
pop
xchg
mov
addr16
jae
mov
fdivs
add
dec
mov
or
ja
sbb
gs
jecxz
lods
daa
sub
add
ret
sbb
pop
jbe
dec
imul
xchg
mov
sub
push
loop
xor
aam
testl
jne
push
fs
arpl
fisttpl
pop
cmpsb
imul
mov
aas
es
xor
stc
pop
lret
loopne
sbb
push
stos
or
pop
push
push
fcomip
gs
in
fsubrs
or
mov
test
and
in
jnp
outsl
into
loope
pop
in
jne
out
mov
cld
repnz
fwait
jmp
push
sub
cwtl
lret
lahf
push
out
sbb
push
cltd
pop
pop
add
xlat
pop
pop
movsl
out
stc
outsl
push
cmpsb
adc
test
push
inc
cmp
and
pushf
lds
push
inc
cmc
add
int3
jne
sub
ret
mov
cltd
fsubs
or
outsl
mov
repz
sbb
es
sbb
test
pop
jne
out
mov
enter
inc
jp
mov
lods
and
add
jg
pop
mov
pop
fs
fldenv
ret
inc
xor
clc
mov
ja
mov
push
xor
fdivs
fcomps
jae
clc
mov
iret
inc
outsb
clc
push
hlt
jp
cmovnp
add
pop
push
push
pop
test
in
xchg
filds
push
pop
lock
jmp
inc
or
add
inc
fs
sbb
dec
jne
push
inc
ficompl
jp
sub
add
inc
addr16
loope
sbb
sub
fcoml
jg
pop
ds
inc
pop
out
sub
push
jno
cmpsb
xor
jecxz
arpl
mov
aad
filds
inc
inc
ss
jg
xor
cmpsl
fists
sbb
push
jne
or
out
xchg
xor
into
flds
movsb
icebp
push
cmp
int
push
negl
in
pop
push
pusha
sti
in
jne
add
mov
fdivl
popw
repz
gs
xor
ljmp
jns
loopne
ljmp
sbb
repnz
loope
pop
pop
xchg
in
cmp
push
dec
sti
xor
gs
ret
xchg
add
ja
mov
hlt
int
iret
pop
repz
int3
shufps
xor
cmp
mov
pop
das
jecxz
loopne
sarb
pop
mull
lahf
and
dec
stos
hlt
jne
lds
psubusw
add
clc
cmp
mov
jne
fsubrp
jb
jb
jae
and
ret
pop
xchg
cmp
in
gs
loope
icebp
jecxz
das
hlt
pop
pop
inc
dec
sub
ficompl
adc
fdivs
xor
call
lret
stos
stos
sbb
pop
gs
lods
sbb
in
xor
int3
ss
sub
and
sbbb
mov
in
mov
push
inc
mov
stos
mov
push
icebp
aas
icebp
fbstp
add
sbb
test
xchg
pop
xchg
push
mov
xchg
adc
repz
daa
jecxz
inc
outsl
xlat
adc
lods
push
shlb
clc
gs
icebp
fcompl
lds
je
outsb
jb
inc
adcb
imul
dec
test
add
or
sub
repnz
stc
jns
push
stos
sub
and
cli
push
add
clc
pusha
pop
xchg
push
pop
xlat
xchg
xor
adc
loope
pop
ret
sbb
test
pushl
xchg
fsubp
std
filds
xor
les
cs
add
popa
ret
or
scas
loopne
ficoms
test
imul
cmp
add
aad
or
fmull
and
stos
cmp
sub
into
or
in
repz
pop
sub
imul
outsl
push
jne
xchg
daa
dec
gs
out
dec
jo
out
aas
stos
or
jg
inc
add
and
fwait
push
mov
pushf
pop
push
push
jnp
pop
jecxz
pop
push
daa
mov
add
in
outsl
push
push
data16
call
into
or
loop
add
sti
mov
test
iret
imul
cltd
outsl
sub
jnp
xchg
test
pop
sbb
testl
push
in
insb
js
dec
jle
subl
mov
mov
enter
fwait
cmp
sbb
out
jmp
arpl
arpl
nop
out
sub
dec
pop
push
in
mov
mov
jne
js
push
mov
cli
fidivrl
ret
cltd
jne
xor
and
pop
aaa
push
inc
dec
in
lcall
pop
in
xor
add
decl
in
mov
and
adc
popf
imul
sub
pop
pop
and
mov
and
add
popa
sub
cmp
xor
cwtl
fstps
jne
push
inc
mov
or
add
jnp
in
push
mov
or
in
subb
pop
jle
xchg
pop
xor
loop
adc
or
mov
outsl
out
clc
nop
xor
inc
fisubrs
xchg
cmp
mov
jbe
pop
mov
add
adc
mov
jb
fsubs
xchg
mov
pop
push
push
or
or
sahf
lret
sub
cmp
xchg
mov
xchg
mov
and
jne
mov
je
fwait
cltd
repnz
pop
loope
cmp
fsubs
or
scas
jns
cmc
insb
and
fistps
xchg
out
inc
ret
aad
dec
inc
rol
jle
mov
scas
cltd
adc
jae
movsb
fnsave
std
mov
push
mov
in
cmp
and
dec
pushf
pop
icebp
dec
fisubrl
sbb
fsubs
in
lcall
int3
pop
mov
inc
fiadds
pop
cwtl
jecxz
daa
frstor
adc
add
out
pop
jne
stc
stos
js
add
xor
addr16
testl
and
lods
aam
pop
jnp
jecxz
cmpsb
in
mov
xor
pop
jo
mov
jns
xchg
xchg
inc
pop
or
nop
jmp
sbb
lea
dec
in
pop
sbb
loope
inc
jnp
dec
push
jo
mov
fs
fwait
mov
jae
dec
arpl
adc
pop
adc
stos
mov
xchg
mov
inc
aaa
sbb
dec
mov
dec
sbbl
push
jno
jae
dec
imul
shll
lret
shl
fwait
mov
sahf
fistps
pushf
frstor
pop
add
pop
sbb
jl
sub
das
std
sub
imul
xchg
outsb
or
scas
and
pop
pop
lret
xchg
and
or
cwtl
fisttps
inc
insl
sbb
sahf
mov
mov
xor
icebp
scas
in
gs
push
mov
cmp
cmp
mov
inc
pop
mov
cmp
pop
scas
sbb
push
pop
inc
pop
sub
bound
jp
push
out
pop
inc
xlat
fcoms
pop
adc
lods
int3
pop
mov
out
and
mov
mov
dec
sub
push
mov
jne
jp
or
lcall
and
xor
pusha
stc
lods
movsb
adc
es
cmp
cmp
shll
repz
stos
pop
fnstenv
mov
aad
fwait
mov
daa
pop
xor
pop
lea
repz
pop
inc
sub
loop
icebp
jp
in
sbb
pop
mov
dec
add
cld
mov
xor
fildl
and
jecxz
mov
xor
xor
jecxz
adc
inc
jnp
js
or
mov
call
mov
sbb
cmpsb
fwait
outsb
sbb
sar
ret
test
sub
aam
xchg
sar
cmp
and
or
ljmp
leave
ficoml
xchg
xor
popa
scas
stos
sub
pusha
or
push
in
mov
and
mov
and
in
dec
in
push
mul
add
gs
xchg
and
jle
enter
sub
bswap
push
pop
push
movsb
imul
push
cwtl
sbb
test
cmpsl
mov
inc
mov
outsb
loop,pn
int
sbb
sti
xchg
add
mov
cwtl
cwtl
outsl
sbb
cltd
fstpt
gs
mov
subl
mull
sbb
pop
push
test
xlat
mulb
out
test
fistpll
jae
je
mov
push
fstpl
movsb
jbe
and
cltd
das
and
sbb
xor
cld
loope
jne
mov
add
bound
stos
push
sbb
mulb
fdivs
xchg
pop
cwtl
jne
test
mov
ss
sbb
and
fst
std
xchg
shlb
das
gs
jecxz
jbe
sbb
or
inc
add
notl
pop
xchg
mov
xchg
xor
test
jo
ficompl
inc
dec
mov
adc
mov
jmp
sub
push
ljmp
dec
lods
lock
lret
gs
out
fstl
push
pop
lahf
dec
add
adc
fdiv
shlb
pop
loope
pop
xchg
cmp
mov
sbb
sahf
adcb
xor
jmp
jmp
bound
scas
imul
adc
out
mov
lds
pop
xor
or
lahf
stc
shrb
fcoml
fistpl
add
lds
dec
sbb
sbb
sub
and
add
pop
pop
jle
lahf
adc
pop
adc
cwtl
sbb
adc
adc
shl
push
imul
fidivl
or
sbb
push
dec
pusha
clc
pop
fbld
pusha
out
lods
jne
mov
outsl
xchg
ja
mov
add
addr16
arpl
std
inc
xchg
xor
mov
pop
mov
xchg
push
add
cmp
jne
fiadds
lahf
xchg
push
fadd
daa
stos
popa
push
xchg
sub
sbb
inc
cmp
or
fadd
and
mov
mov
mov
pop
and
movsl
push
push
sbb
loop
xor
adc
xchg
ljmp
imul
inc
mov
mov
movsl
or
push
icebp
test
mov
test
pop
sub
inc
out
pop
daa
arpl
jbe
gs
movsl
out
repz
mov
testl
inc
pop
push
pop
xchg
out
pop
add
xor
in
rclb
cltd
in
or
fiaddl
sbb
mov
stos
cmpsb
jae
push
imul
test
cmp
ret
jns
fmul
cmp
and
dec
push
ret
adc
jmp
push
mov
jmp
mov
and
mov
dec
test
jbe
pop
mov
loop
mov
cltd
pop
jl
jp
cmpsl
mov
hlt
xor
or
sub
mov
std
aas
jnp
aaa
inc
fcoms
pop
add
and
add
mov
mov
filds
out
jnp
pop
dec
cmp
out
mov
push
fcompl
or
cltd
sub
jnp
push
sbb
test
fucom
insl
push
gs
mov
adc
ficompl
pop
mov
pop
ja
cmp
adcb
push
sbb
pop
jnp
repnz
cmp
out
aas
fyl2xp1
pop
jne
lret
cltd
lock
pop
js
jno
aam
repz
mov
adc
aas
xchg
imul
sbb
sub
xchg
cwtl
pop
sub
sbb
ljmp
cmpsl
loopne
out
xor
and
in
or
out
and
adc
push
les
mov
cwtl
add
push
rolb
dec
test
ss
fs
mov
jns
scas
xor
add
movsw
bound
push
gs
insb
push
pop
sbb
jbe
leave
outsl
shl
sbb
gs
and
xor
adc
mov
ret
scas
scas
idiv
cwtl
pop
hlt
popa
outsl
fistl
push
in
add
pusha
pop
cmp
addr16
jbe
mov
scas
ret
clc
cli
sub
sbb
xorb
cld
das
arpl
pop
adc
subps
pop
xchg
xchg
inc
or
daa
and
outsl
and
cmp
sub
add
add
pop
pop
jmp
clc
lcall
dec
or
or
push
sbb
add
out
int3
scas
sahf
out
es
leave
fnstsw
mov
or
fisubl
inc
inc
popa
and
jne
dec
into
cmp
adc
jns
sbb
out
int
pop
fs
adc
out
in
cltd
js
pop
dec
cmp
add
test
ret
stos
testb
dec
adc
addl
loope
lret
xchg
sub
ss
and
lcall
mov
mov
jbe
mov
push
loope
cmp
cmp
fnstsw
fbld
pop
jecxz
in
gs
cwtl
push
loop
pop
pop
out
jg
inc
adc
add
mulb
jg
adc
shll
ss
es
or
lds
sbb
xchg
mov
inc
stc
loop
pop
push
and
cmp
push
cmp
push
aaa
jno
rcr
leave
xchg
aam
sbbb
enter
das
fs
loop
insl
pushf
sbb
pop
dec
cmpsb
cwtl
es
cltd
xor
lret
mov
xor
cwtl
jne
in
fld1
push
mov
jge
arpl
out
out
cli
jo
movsl
pop
lds
adc
repz
and
leave
push
jecxz
in
cmpsb
lea
jo
adc
add
fcomps
aad
fwait
imul
xor
aaa
ds
cmp
mov
jecxz
dec
add
and
jle
jno
fldcw
arpl
in
inc
aaa
mov
idiv
cmp
pop
ljmp
stos
and
cmp
and
addl
pop
and
or
inc
jecxz
test
aaa
jbe
filds
dec
cmc
push
data16
into
pop
fwait
setp
call
xrelease
in
pop
mov
cmc
out
jecxz
jne
sti
cmpsl
dec
and
cltd
popa
ficoms
pushf
sub
inc
xor
daa
mov
mov
adc
cmc
loope
fwait
bound
and
mov
imul
seta
pop
sarl
stc
das
push
sbb
rorl
pop
out
pop
les
sbb
cmpsl
xchg
xchg
xchg
addr16
gs
lea
cmpsl
in
jne
push
cmp
push
loope
or
lret
cld
out
imul
in
out
cs
enter
popf
arpl
gs
mov
sub
pop
push
jo
jae
and
pop
out
or
test
je
push
je
addr16
pop
arpl
hlt
shlb
dec
or
repz
pop
inc
in
mov
adc
adc
jne
popw
pop
in
jbe
sbb
mov
xor
push
hlt
fbstp
cmc
iret
jne
jmp
ss
out
inc
stos
cmpsb
jbe
daa
xchg
xor
add
sahf
test
pop
dec
test
clc
gs
xor
dec
repz
int3
movsl
sub
daa
adc
int
sbb
mov
test
xchg
jge
js
imul
cmpl
lea
imul
leave
adc
inc
add
xchg
fs
jecxz
aaa
add
popa
mov
fcomip
inc
cmc
push
sub
mov
nop
or
ficoml
fists
test
je
push
imul
and
jecxz
pushf
pop
and
int
sbb
clc
loope
sbb
inc
add
pop
mov
sub
mov
ja
std
dec
mov
faddl
in
bound
sbb
xchg
pop
lret
int
je
ja
mov
ret
in
andl
xor
addr16
cli
addr16
stos
clc
stc
movnti
mov
fmuls
push
xor
filds
std
daa
jne
jmp
js
or
mov
cltd
fisttpl
xchg
out
sub
pop
inc
mov
sti
fisttps
xor
xlat
bound
or
dec
pop
cmp
and
jne
imul
lds
addr16
fsubl
sbb
outsl
lods
push
popa
inc
mov
mov
and
mov
add
mov
add
jo
ds
cmc
gs
push
mov
cmpsb
jo
mov
jmp
jbe
daa
fistpll
push
jae
sbb
cmp
mov
test
ja
jle
repz
add
mov
repz
mov
or
mov
mov
or
aas
inc
aaa
push
loopne
xchg
pop
cmp
and
stos
loope
add
mov
or
jmp
adc
push
mov
xlat
scas
rcrb
adc
adc
int
and
outsl
add
fprem
movsl
loop
jl
testl
sti
loop
test
lds
xchg
daa
fsubs
imul
jne
and
repz
fisttpll
mov
mov
mov
push
pop
and
jb
dec
fisubl
mov
stos
fisttps
dec
movlps
and
dec
jecxz
ret
sub
imul
jecxz
push
jp
mov
sbb
cmpsb
les
lahf
xor
and
data16
inc
pop
out
imul
pop
in
stos
cwtl
push
jecxz
pop
ffree
in
push
outsl
mov
aaa
data16
add
testb
sub
call
push
imul
mov
js
xchg
sbb
mov
iret
shlb
scas
lcall
mov
int3
adc
movsb
dec
jne
cmp
rclb
xor
mov
pop
xchg
lds
lret
aaa
ret
lret
cmp
out
aad
inc
xchg
popa
add
inc
or
sub
jnp
movsb
pop
mov
fistps
loop
push
int3
imul
and
jnp
daa
push
gs
aad
pop
out
or
and
or
push
lret
neg
pop
cmpsb
popf
jae
cmp
roll
fnsave
xchg
movsl
movsl
loope
and
jno
jmp
movsl
pusha
jo
xor
inc
call
pop
outsb
loopne
adc
mov
pop
adc
jno
popa
sub
pop
cmp
stos
fs
dec
inc
dec
or
add
gs
repz
mov
and
pop
push
jecxz
jns
enter
pmullw
or
cld
inc
aam
out
ss
and
loop
inc
pop
cmpsb
jns
cmp
xlat
scas
cltd
sub
imul
cmp
pop
and
ja
ja
aaa
dec
daa
daa
out
inc
movsl
aam
xchg
ja
outsb
aam
repz
in
jbe
jns
loope
negl
fcoml
pop
into
mov
mov
roll
inc
adc
push
fs
movb
xor
dec
loop
inc
loopne
aas
push
xor
sbb
or
cmpsb
sbb
mov
les
movsb
imull
call
inc
mov
pop
jnp
enter
cmpsb
fcoms
push
push
loop
sub
pop
mov
sub
dec
fbstp
fldt
jbe
inc
hlt
js
or
in
out
sbb
jmp
dec
fists
icebp
bound
stc
sub
lock
pop
pop
jecxz
pop
out
imul
push
mov
fsincos
sub
popf
popa
enter
sbb
sub
dec
lods
mov
aam
adc
push
lea
in
jb
sbb
dec
push
sub
pop
jecxz
cmp
push
fistl
push
addb
pop
pop
scas
in
inc
sub
leave
jg
cmp
push
adc
idivl
mov
rcl
mov
lret
in
lock
into
sbb
sub
pop
scas
xor
frstor
push
pop
pop
xor
sbb
mov
cmp
std
pop
jecxz
push
jg
adc
sti
icebp
add
cmp
lahf
fdivr
jmp
data16
lret
push
push
cmp
test
test
jge
pop
movsl
cmp
pop
mov
jge
aas
xchg
loop
icebp
insb
push
sbb
sub
daa
es
pop
jbe
in
iret
int
imul
mov
xchg
jmp
sub
cld
test
lock
cs
sbb
or
test
add
orb
mov
adc
mov
cltd
icebp
pusha
sbb
sahf
pop
add
dec
jno
sahf
movsb
push
insb
in
dec
add
je
mov
sub
outsb
mov
inc
aad
push
sub
psrlw
gs
sbb
pushf
je
jns
aad
fdivs
in
push
jp
inc
gs
sti
sbb
sti
imull
ss
fisttps
push
add
push
sub
fnstcw
mov
js
sar
aam
sbb
lret
sbb
mov
imul
jge
fidivs
jmp
rcrl
rolb
pop
or
push
bound
mov
lcall
push
gs
insb
or
and
dec
and
jne
addr16
sbb
cmp
adc
lea
sti
lret
pop
jl
mov
test
xor
dec
mov
aas
pusha
loopne
and
add
inc
sbb
and
lret
jecxz
pop
adc
daa
ret
sub
addr16
pop
adc
pusha
push
cs
pop
jmp
push
mov
jnp
sub
add
cmp
hlt
ds
cmp
leavew
add
ret
add
stc
mov
pop
mov
cmp
push
pcmpeqw
in
out
js
ljmp
jbe
xchg
mov
in
jae
mov
pop
lods
dec
out
fdivrl
pushw
sub
mov
pop
mov
outsb
addr16
je
adc
cltd
movsb
xchg
loopne
push
jne
push
pop
mov
sbb
xor
loope
mov
xchg
and
jns
add
pop
jecxz
notl
mov
jne
fs
ret
cmp
inc
fisttpl
mov
pop
pop
aam
shlb
movsl
cmpl
mov
mov
movsb
jmp
out
jg
jbe
add
int
loope
out
in
arpl
fsubl
sub
sbb
loopne
pop
jecxz
daa
pop
mov
mov
add
xchg
iret
pop
loope
push
imul
jecxz
pop
fsubrl
cs
out
push
jle
pop
add
push
outsl
and
xchg
out
sub
and
jns
jcxz
cmp
test
ficoml
es
xor
test
inc
pop
add
lahf
loope
ss
ss
jb
pop
add
jne
test
sub
pop
or
pushf
push
sbb
cld
push
pop
out
or
lods
insb
mov
aaa
stos
xor
movsl
sbb
out
adc
in
pop
push
data16
leave
xchg
pop
adc
inc
std
and
xor
dec
sbb
pop
dec
push
lods
pop
mov
mov
and
lret
sbb
mov
outsb
sub
pop
and
xchg
adc
jae
jge
cltd
xchg
sbb
daa
sbb
dec
test
pop
div
aaa
movb
dec
lret
test
test
inc
push
arpl
add
cltd
adc
fstpl
and
lret
aas
mov
ja
jl
jecxz
pop
push
fadd
pop
adc
out
mov
xor
pop
add
lods
shrl
inc
push
adc
enter
cmp
pop
lsl
loope
inc
mov
mov
xchg
frstor
sbbl
test
pop
xchg
sbb
lods
add
cmp
addr16
jne
mov
pop
and
daa
mov
gs
aad
xchg
fsubl
ja
fs
out
cld
jnp
pop
push
lret
fldl
outsb
push
xchg
aaa
pop
mov
inc
in
xor
pop
loopne
test
mov
xor
adc
lea
dec
stc
jbe
pop
sub
shrb
pop
in
pusha
push
loope
mov
ja
inc
fs
aaa
xchg
pop
push
pop
pop
xor
out
dec
pop
test
inc
add
adc
inc
mov
fiaddl
xor
pop
arpl
dec
gs
repz
pop
outsl
pop
in
mov
xchg
sbb
jne
mov
xor
jecxz
imull
ret
pop
push
ret
xlat
and
fcoml
fbstp
fldenv
push
xchg
mov
inc
sti
ja
jne
aaa
test
xor
mov
sbb
xchg
test
xchg
out
pmaxub
mov
leave
pop
cmpsl
mov
xor
stos
xchg
div
sub
xbegin
in
sti
stos
fidivl
cmp
mov
and
mov
frstor
stos
ret
movb
push
xor
inc
jae
int3
cmp
divb
pop
rcl
movsl
cmpw
in
in
insl
add
addr16
lret
imul
cld
pushf
pop
xor
jb
mov
out
mov
pushf
push
fistpl
pop
dec
or
dec
xchg
push
sbb
dec
and
jne
pop
andl
stc
push
movsl
pop
adc
sahf
fsubrs
pop
arpl
fisubs
out
repz
lahf
jge,pn
xchg
sub
in
jg
adc
add
xchg
pusha
xchg
add
xchg
push
adc
mov
aaa
and
add
out
lcall
lret
lahf
dec
fndisi(8087
fld1
or
test
or
shr
push
adc
xchg
iret
mov
lahf
mov
out
inc
testl
jns
filds
pop
cltd
or
outsl
push
mov
pop
pop
sbb
mov
loop
sub
cld
mov
daa
jne
cmp
mov
xchg
add
push
pop
in
call
fdivp
add
sbb
outsb
add
inc
pop
jbe
jnp
popa
test
fdivrl
jl
pusha
gs
pop
mov
xchg
in
lret
js
sub
xchg
dec
mov
push
xchg
sbb
lret
pop
xchg
js
lods
mov
sbb
mov
je
or
clc
dec
pop
sbb
lcall
mov
dec
fnstcw
leave
maxps
inc
hlt
testl
push
push
mul
out
push
in
in
pop
xchg
gs
inc
cwtl
xchg
jne
sbb
movsb
add
inc
sbb
stc
sub
xor
add
test
jp
jne
mov
outsb
scas
and
mov
xchg
pusha
add
shrb
cmp
jg
add
imul
add
add
rcrb
ja
xorb
mov
adc
pop
xlat
ljmp
pop
out
cld
imul
andb
cmp
fsub
push
xchg
mov
cmp
data16
cld
add
in
and
fcompl
addr16
mov
cmp
outsl
pop
inc
icebp
cmpsb
imul
xchg
xchg
sbb
jno
dec
and
sbb
testl
and
mov
aaa
sub
add
jg
jle
xchg
stos
insb
addr16
lcall
in
dec
jne
ljmp
jne
arpl
add
out
jno
inc
stc
xchg
fisubs
les
into
cmp
out
jne
pop
xchg
loopne
cwtl
lods
orb
jmp
push
add
cmpsl
cmp
repnz
push
or
aaa
sub
cwtl
push
dec
mov
pop
jb
push
inc
fstpt
fistpl
fidivl
mov
sub
push
popa
pop
adc
xchg
fadds
pop
lock
bound
fcompl
cltd
jne
pop
sub
pop
icebp
pop
fcoml
mov
in
pop
aas
fsubrl
pop
imul
xor
outsl
test
push
fs
rolb
push
push
loop
add
sbb
filds
in
sub
adc
ja
push
arpl
jmp
mov
push
pop
fcoms
scas
sbb
pop
aaa
fsubrs
imul
sbb
pop
fidivrl
jp
outsb
and
or
imul
js
fs
sti
loopne
ljmp
adc
sbb
push
adc
popw
fdivr
lahf
fcomp
add
sbb
lahf
jmp
pop
and
add
imul
add
sbb
fistps
fstps
xchg
fldenv
jns
aas
data16
push
xor
xchg
cld
sahf
sbb
out
das
inc
std
jnp
pop
loopne
fldenv
icebp
fsubs
sbb
arpl
add
mov
out
movsl
dec
popa
loope
in
pop
sub
fstps
sahf
sbb
movsb
push
pushf
pop
fnstcw
cmp
addr16
ftst
sbb
gs
insl
sbb
data16
pop
sub
pop
and
push
out
sti
lods
addb
outsl
lcall
sti
pop
fistpl
popa
loopne
pop
lcall
sbb
sbb
sbb
jo
jmp
pop
sbb
pop
sbb
sahf
cmpb
and
fbld
or
push
addr16
pop
lcall
sbb
fcmovu
sbb
lods
push
js
push
nop
xchg
add
inc
bound
mov
mov
frstor
sti
repnz
inc
add
cmp
xchg
int3
fnstcw
push
cmp
or
lods
mov
dec
lea
in
and
pop
mov
and
mov
dec
sti
xchg
lahf
jp
ret
lcall
daa
push
pop
mov
push
rolb
jecxz
pop
pop
pushf
inc
test
das
xchg
jbe
movsb
aaa
dec
pop
mov
ljmp
xor
clc
jecxz
pop
jns
je
test
out
mov
jo
pop
cmc
pop
sub
stc
shlb
test
andps
testl
addr16
jmp
xor
xor
inc
dec
pop
jns
not
sub
inc
mov
sbb
lds
inc
inc
loop
mov
pop
or
movsl
sbb
loopne
ss
xlat
or
jecxz
aaa
xchg
mov
daa
mov
mov
arpl
fs
add
inc
pop
inc
dec
outsl
nop
jmp
or
adc
mov
sbb
ljmp
movsl
xchg
ret
jge
out
mov
ja
push
sbb
call
out
mov
clc
mov
ljmp
sub
and
les
or
mov
mov
mov
lret
adc
jo
xchg
and
add
xchg
pop
jecxz
repz
push
pop
xchg
hlt
jo
mulb
jne
fbstp
add
pop
or
xlat
jg
mov
rclb
jecxz
hlt
test
jns
xor
jae
cmc
mov
mov
pop
dec
jb
xor
fistpll
push
xor
adc
cmp
sbb
enter
addr16
jne
xor
test
cli
fldenv
xor
jbe
mov
jno
and
scas
leave
cmp
insl
les
aad
addr16
loopne
xchg
aaa
xor
mov
mov
std
push
jmp
gs
xor
lods
jno
push
mov
fwait
dec
mov
fistpl
jbe
gs
mov
jne
jns
jne
jmp
mov
es
xor
pop
push
movsb
leave
pop
and
outsb
repz
inc
ja
jg
negl
jbe
scas
jo
pop
xchg
sbb
push
sub
dec
jle
stc
fisttps
je
mov
adc
int
testb
mov
jo
pop
mov
jo
mov
xlat
scas
dec
fldt
outsb
xor
gs
out
cmp
pusha
shl
jne
add
pusha
mov
filds
adc
pop
in
imul
xchg
or
pop
imul
or
cmc
push
pop
gs
pop
cmp
int3
out
or
jae
in
rcrb
scas
jbe
fistps
shlb
cmp
js
and
sahf
dec
outsl
adc
jl
push
adc
insw
jnp
xchg
jno
jecxz
and
fdiv
push
fdivrs
xchg
mov
push
ficoml
data16
fldl
dec
push
movsb
pop
adc
in
and
inc
ss
stos
push
pop
popa
cmp
cmp
adc
lret
sub
test
inc
pop
pushf
cmp
pusha
xchg
dec
iret
sarb
xchg
xchg
cmp
add
imul
mov
nop
push
iret
subb
sbb
imul
mov
push
mov
arpl
cli
pop
out
cwtl
sahf
inc
or
fnstcw
fsub
fists
fbstp
cmpsb
popa
ljmp
adc
fwait
jne
jmp
and
xor
adc
mov
jo
test
gs
xor
pusha
mov
mov
mul
push
inc
sti
xor
cmp
push
add
mov
dec
xor
das
data16
sbbl
add
xlat
cltd
mov
push
int
rcrl
repz
aas
fnstenv
movsl
imul
daa
sbb
outsl
adc
cmp
push
pop
hlt
cmp
add
roll
xchg
pop
repnz
inc
fwait
pop
popl
xchg
shll
movb
test
jle
gs
out
mov
jge
mov
sub
jbe
lcall
in
std
sub
iret
jnp
arpl
fstp
jne
into
repnz
xor
imul
scas
leave
sar
pusha
out
out
ss
je
fst
xchg
mov
lea
sbb
jns
test
adc
inc
inc
add
push
lods
call
mov
sbb
jae
fisttpl
ss
sbb
mov
dec
popf
mov
daa
cmp
pop
jae
cmp
int
fwait
aad
jno
dec
mov
sarl
outsl
lods
daa
mov
out
inc
or
fsts
pop
in
inc
aad
hlt
pop
mov
sahf
xchg
mov
fistps
dec
pushl
push
inc
fcomps
fcmovnu
pop
pusha
push
mov
xchg
in
cmp
sbb
arpl
mov
mov
pop
lcall
xor
and
fnsave
sub
movd
push
cmp
pop
sbbl
xchg
shlb
les
repz
xor
ljmp
jbe
outsb
aas
dec
inc
mov
out
rcrb
mov
xor
xchg
ljmp
pop
push
mov
and
call
inc
inc
pop
add
jbe
insl
inc
sarl
xchg
fnstsw
fldenv
fisubrl
ss
ds
aam
mov
rorl
cmp
mov
repz
rclb
sub
cmpsb
jmp
pop
mov
cli
test
arpl
add
mov
cmp
repz
mov
bound
jae
stc
jecxz
daa
add
adc
iret
mov
and
cmp
lcall
sbb
lahf
lcall
push
lods
push
fsubrs
in
sbb
adc
push
push
es
xchg
inc
test
push
arpl
xlat
lds
pop
test
or
movsl
iret
adc
sub
sarb
leave
addr16
or
movsl
adc
jne
push
or
sbb
movsl
mov
cld
mov
aas
sbb
xchg
add
sub
xchg
pop
xor
sbb
mov
cld
hlt
leave
fisttpll
xor
mov
ret
pop
mov
pop
gs
push
mov
lahf
outsl
lcall
inc
mov
hlt
cmp
cltd
lds
mov
mov
stos
sbbl
cmp
addr16
dec
les
pop
sbb
out
lret
sbb
xchg
or
outsl
pop
add
jmp
sbb
sti
outsb
test
jge
out
call
mov
movb
pop
mov
iret
jecxz
add
imul
lahf
and
filds
stc
cmp
cli
pop
in
mov
test
mov
mov
imul
xor
cltd
mov
shl
roll
push
or
stc
fsts
sbb
in
xor
das
stos
mov
ljmp
push
pop
fcomps
fstpt
mov
popa
xor
inc
pop
out
les
sub
jno
dec
push
es
in
jb
xor
ret
ret
scas
daa
adc
and
cmc
aaa
ja
gs
xor
shll
mov
pop
cmpsb
add
jnp
popa
fcmovbe
and
sbb
ja
adc
inc
lahf
mov
pop
and
mov
dec
pop
pop
push
adc
adc
rorl
xorl
and
xor
mov
mov
push
xor
or
inc
mov
stos
pop
out
sbb
gs
adc
xor
xor
jge
add
loopnew
inc
movsb
dec
fldenv
dec
ss
insl
data16
xchg
pop
arpl
adc
in
push
sub
pop
pop
xor
test
jg
cmp
cmp
pop
jne
rcr
ljmp
pop
sbb
iret
test
xchg
sbbl
push
jmp
add
scas
imul
jp
mov
shr
push
add
movsb
insl
cmpb
or
mov
imul
mov
sub
cmp
pop
fdivrs
icebp
repz
push
push
push
mov
add
mov
dec
negl
pop
lret
mov
imul
test
fistpl
push
cmpsb
pop
mov
int3
and
popa
fwait
mov
lds
in
inc
add
imul
jp
dec
dec
cmpsl
fisttpl
mov
push
call
cmc
mov
negb
jp
ret
cli
or
lcall
jle
jl
xor
sub
sbb
in
jnp
or
add
out
xchg
mov
or
fsubr
jo
inc
inc
movsl
inc
mov
inc
dec
mov
dec
das
iret
mov
scas
adc
addr16
movsl
lock
push
mov
out
cltd
jne
pop
popf
mov
mov
adc
in
mov
je
mov
adc
aaa
test
gs
sbb
mov
pop
pop
xor
jne
jg
cmpsb
push
outsl
xchg
mov
ss
ljmp
add
ret
pop
insl
pop
test
cmp
jmp
call
arpl
push
jno
mov
lret
out
pop
sbb
add
xor
sbb
pop
fadd
dec
mov
dec
sbb
negb
popa
pop
jns
hlt
mov
insl
mov
neg
negb
push
pop
fisttps
pop
adc
ds
mov
jae
sbb
cmp
test
mov
sub
rcrl
popf
jae
mov
fidivs
das
cli
adc
lret
les
test
jp
push
pop
ror
pop
jecxz
dec
imul
gs
cmp
pop
and
xlat
push
aaa
jne
aas
rolb
sbb
pop
pop
cmc
sbb
and
xor
pop
aaa
jge
xchg
cwtl
imul
dec
pusha
inc
add
pop
sub
cmp
and
ss
in
push
and
lahf
push
test
bound
sahf
fmuls
inc
jbe
inc
rorb
dec
ret
mov
ja
es
gs
adc
push
jne
jmp
mull
lea
jbe
mov
and
fcomps
xchg
addr16
lods
pop
sbb
xor
pop
jmp
popw
pusha
incl
xor
divl
mov
fwait
and
sub
in
jmp
jle
sub
lahf
xor
cmp
gs
in
inc
jle
sub
nop
fiaddl
out
cmpsb
xchg
ror
lahf
out
mov
add
xlat
cmp
insb
cmp
jge
push
pusha
or
test
or
dec
adc
dec
mov
xchg
push
pop
data16
xchg
sbb
jb
jmp
push
dec
adc
imul
xor
lea
or
ficompl
cmp
inc
nop
mov
in
dec
pop
jae
push
mov
fbstp
jne
mov
jnp
inc
pop
push
je
pop
xor
jb
filds
mov
cmp
movsb
ss
or
insb
push
jl
pop
mov
mov
jbe
pop
fld
rolb
cwtl
and
dec
inc
and
fsubrs
repz
ljmp
mov
xor
sahf
jnp
mov
and
cmp
pop
int
lcall
addr16
jmp
and
imul
insl
out
sahf
jp
jne
jne
or
push
rolb
int
icebp
sbb
ja
inc
aas
clc
int3
cmpsb
mov
rcrl
push
add
push
xchg
add
lds
leave
test
cmc
sub
mov
scas
xchg
mov
push
in
mov
insl
xchg
sbb
stc
sahf
cmp
sbb
dec
cltd
gs
or
fadds
sub
inc
mov
gs
cli
out
mov
loope
in
cmpsb
add
ret
rcrl
jnp
add
leave
and
xchg
stos
sub
jne
out
mov
xor
sbb
push
bnd
xor
cmpsb
push
imul
inc
fldenv
cltd
inc
lret
push
xlat
push
adc
jo
pusha
hlt
ljmp
mov
gs
popa
jge
test
and
dec
push
mov
jle
push
gs
push
test
sahf
pop
out
add
adc
out
in
cld
jns
mov
ret
lds
sub
push
jl
mov
adc
into
mov
xor
mov
clc
fsubr
add
or
mov
cmp
xlat
push
adc
cmp
lcall
mov
notl
gs
sbb
fsubs
int
xchg
jnp
push
fcompl
icebp
push
fidivl
popf
or
jno
pop
or
add
lea
fwait
pop
pusha
sub
outsl
lea
into
xchg
out
or
xchg
test
mov
lret
dec
cmp
push
jg
mov
sti
cmp
push
fcmovnbe
imul
test
cmp
sub
hlt
mov
pop
shl
gs
sub
and
roll
outsl
sbb
in
js
mov
adc
dec
clc
or
cmp
mov
jae
fldenv
xchg
pop
out
xor
in
push
xor
hlt
push
mov
push
jno
cmc
pop
xchg
imul
mov
and
xor
pop
jg
xchg
cmp
ret
xor
xchg
fisubl
jmp
clc
das
mov
shrl
adc
fistps
inc
data16
std
lods
shlb
hlt
aam
lahf
xchg
mov
cwtl
pop
shll
movsl
add
gs
inc
test
cltd
out
or
cmp
in
cmpsl
das
mov
adc
cmp
data16
push
jmp
jge
adc
mov
fisubs
add
cmc
jp
movsb
cmpsl
shlb
jns
out
icebp
mov
scas
dec
ret
sbb
jmp
jne
pop
dec
pop
hlt
cmp
repz
add
fadds
pushf
out
fs
aas
sbb
pop
push
xchg
ficomps
jg
jnp
bound
and
lcall
adc
out
cmp
pop
and
jne
fmulp
ss
pop
mov
jne
imul
fdiv
pushf
addr16
jne
cmpsb
les
sub
dec
and
or
pop
push
adc
push
je
test
cli
test
call
xor
loop
repz
dec
push
icebp
cmpsl
pop
aas
mov
sbb
clc
std
mov
outsl
cmp
sub
je
xchg
shrl
lods
and
pop
dec
jne
loope
gs
jo
adc
mov
jb
call
push
repnz
jns
mov
inc
gs
in
mov
mov
inc
loope
loopne
rorb
lock
es
add
scas
iret
int
cli
sbb
jnp
add
outsl
cmpsl
cmc
mov
push
cmp
and
fiaddl
adc
inc
cli
fstpt
xchg
sbb
bound
andl
daa
inc
inc
out
pop
cmp
ret
daa
ss
scas
pop
jecxz
pop
repz
cmp
loopne
clc
shlb
data16
jg
xchg
gs
scas
scas
and
mov
test
addl
jle
cmpsl
and
push
mov
jnp,pn
pushf
repnz
lahf
movsb
in
jl
ffree
pop
adc
pop
out
repz
test
mov
mov
lret
cmpsb
daa
lea
dec
push
jb
xchg
jne
daa
out
add
in
xchg
jnp
mov
imul
pop
inc
inc
in
xor
dec
inc
jb
nop
lock
loop
pusha
fcoml
pop
adc
pop
jne
mov
gs
in
adc
xchg
in
sarl
jno
sbb
mov
pop
pop
inc
lock
jae
jp
pop
sbb
mov
dec
fcmovu
gs
push
pop
push
jne
je
push
ss
movsb
add
mov
loop
pop
xor
fcoml
cmp
arpl
daa
or
lock
inc
push
add
mov
cld
mov
dec
add
jecxz
xor
outsl
ds
add
mov
mov
int
sar
icebp
addr16
jle
jbe
out
je
pop
and
inc
fiaddl
loope
out
mov
xor
xchg
add
out
into
cltd
sub
popa
push
or
push
outsl
sub
mov
mov
xchg
xchg
negl
xor
cli
dec
addb
xor
and
mov
fldenv
cmc
in
pop
sbb
xor
loopne
icebp
pop
push
ja
pusha
lock
pop
jl,pn
gs
add
pushw
dec
outsl
mov
push
xchg
repz
mov
loopne
cmpsl
and
lcall
rorl
pop
and
cmpsl
adc
mov
in
mov
inc
sarl
fcomps
or
add
in
sub
scas
inc
fidivrl
out
fs
stc
stc
sub
pusha
cs
sub
pop
fldcw
cmp
and
ljmp
push
out
push
mov
and
bound
int3
cmp
mov
test
ficoml
cld
gs
xchg
int3
test
jne
adc
mull
sahf
cmpsl
mov
insb
sbb
rcrl
jnp
mulb
adc
rcl
sub
ss
sbb
insl
pop
or
pop
fisubs
dec
in
das
sub
push
mov
adc
push
xchg
pop
outsb
jl
pop
int3
fistl
jmp
add
jne
mov
fstpt
add
dec
cmp
dec
ds
and
sbb
sub
les
fmul
pop
repz
fstpl
dec
push
pop
push
mov
sub
mov
adc
and
filds
xor
jbe
in
repz
outsb
fsubl
jne
xor
mov
add
jne
ftst
push
sbb
daa
dec
enter
jnp
ds
test
or
dec
add
xor
pop
rcrb
cmpsl
sub
add
out
pop
fnstcw
mov
fs
push
push
mov
cld
call
cmp
xor
pop
add
scas
out
cmpsb
mov
orb
jecxz
outsl
in
or
cmp
inc
jp
fisubl
int
sarb
push
stc
inc
pop
imul
xlat
push
and
xchg
add
fidivrs
or
notb
add
rolb
sbb
cmp
test
in
mov
shlb
movsb
sti
mov
lds
pusha
pop
push
sub
and
call
inc
mov
addr16
pop
fnsave
popf
or
and
loopne
and
mov
lahf
out
inc
and
and
xchg
stos
mov
gs
inc
outsl
xor
es
mul
cltd
loop
pop
test
pop
sahf
or
add
outsb
outsl
divb
mov
dec
leave
dec
addr16
sahf
mov
jl
pop
ret
jl
cmc
cmp
lods
pop
popa
jg
add
sub
pop
jecxz
fsubs
inc
fs
lock
maskmovq
jne
sarl
out
add
jp
push
xor
add
or
push
andl
mov
xor
stos
jne
in
dec
insl
sub
pop
cmc
sbb
jne
push
inc
sar
or
sub
pop
sbb
je
push
gs
pop
dec
notb
movsl
add
inc
inc
loope
fcoml
fistps
pop
pavgw
outsb
loope
inc
test
hlt
test
pop
adc
sbbl
outsl
leave
sub
rcl
fsubs
imul
or
decl
data16
loopne
int
cld
jne
adc
xchg
jb
cmpsl
lods
cmpsb
lods
imul
or
push
pop
push
in
sbb
pop
xchg
inc
or
xchg
mov
pop
pop
or
jl
test
repz
aad
dec
push
fdiv
movsl
mov
loope
imul
sub
inc
and
push
out
repz
icebp
lods
cwtl
inc
fnstsw
in
xchg
pusha
push
adc
add
jg
adc
cld
dec
mov
mov
pop
loop
lret
out
pop
push
pop
xor
jecxz
mov
lret
and
out
leave
adc
mov
incb
pop
pusha
dec
imul
xor
sahf
rcrb
gs
sbbl
jge
insl
mov
pop
popf
mov
sbb
lock
or
jo
mov
shlb
lods
fwait
cli
std
int
fcomps
push
outsl
xchg
sub
push
outsl
mov
scas
pop
xor
cwtl
mov
loope
aaa
inc
xor
outsb
sbbl
cmp
or
sti
repz
ja
xor
cmc
scas
cmp
iret
cmp
imul
mov
cwtl
inc
pop
mov
adc
imul
test
repz
mov
jae
popf
into
adc
push
sub
and
outsl
es
xchg
jno
adcb
dec
andb
int3
std
testl
inc
mov
out
cmc
fisubl
repz
jecxz
pop
sub
xor
das
int3
aam
fsubrp
pop
add
adc
dec
movsl
daa
or
call
xor
repz
insb
or
bound
pop
mov
aam
ret
pop
fmull
pop
add
mov
incl
push
ss
pop
fidivrl
dec
fisttps
test
pop
push
push
inc
rorl
lods
mov
add
jne
and
pop
xor
pop
je
aam
mov
adc
mov
pop
loopne
popa
cmp
arpl
cmp
cmpsl
mov
inc
mov
ja
jae
xor
addr16
mov
je
adc
sub
inc
sub
cmp
push
xchg
jecxz
dec
jnp
and
jno
pop
jno
jecxz
cmp
and
int3
fbstp
push
fldl
loopne
jne
inc
test
les
shlb
flds
into
or
mov
imul
adc
mov
pop
into
cmp
xor
lds
out
arpl
add
int3
enter
dec
jns
dec
xor
bound
add
gs
sti
mov
out
or
andl
pop
mov
jb
fwait
sub
dec
test
call
andl
mul
jle
sub
lret
pop
push
mov
int3
out
push
jge
push
jp
push
lods
outsb
out
mov
int3
gs
push
cmp
loope
mov
das
push
das
je
push
addr16
cmp
std
out
pop
test
dec
bound
cmp
fpatan
mov
push
push
sub
test
sub
cmp
sub
push
loopne
add
fstp
dec
xor
pop
cltd
pop
fbld
add
xchg
push
fnsave
jge
es
repz
jle
jl
cwtl
cld
inc
jbe
mov
fbstp
sbb
inc
ds
negl
stc
push
call
fwait
scas
xchg
jae
adc
ss
jg
or
enter
or
outsl
xor
cli
mov
pop
push
clc
gs
pop
ljmp
xor
js
repz
cwtl
idiv
sahf
adc
pop
pop
xor
push
mov
in
add
popf
push
sbb
mov
pop
sbb
mov
outsb
sbb
jecxz
sti
lahf
movsl
push
addr16
stc
jne
xchg
jp
jmp
xor
jno
hlt
dec
iret
ss
mov
bound
out
cwtl
repz
outsl
movsl
test
int3
push
and
xchg
adc
ja
cmp
lock
std
stc
dec
mov
add
cmpsl
add
imul
sbb
cmpsb
sub
dec
sbb
hlt
jecxz
xor
xor
xor
lret
pusha
clc
loope
jno
push
mov
adc
leave
xchg
xchg
inc
in
jo
ret
jecxz
aas
lahf
inc
rolb
test
mov
lods
fstpl
push
negb
pop
nop
mov
in
out
rdtsc
negb
sub
repz
adc
sub
cmpl
cmp
xchg
mov
insl
sahf
leave
sub
lret
scas
fucomi
push
int
bound
ja
cmc
daa
test
sbb
mov
rcr
les
pop
ljmp
lcall
cmc
fmull
sarl
pop
inc
lds
lcall
pusha
movb
je
push
gs
sti
pop
out
aas
sarb
push
jecxz
mov
clc
jne
je
add
arpl
dec
lock
addr16
adc
iret
dec
gs
std
mov
adc
cmp
cmp
sbb
out
push
int3
add
out
push
movsb
mov
xchg
or
dec
fdivs
sub
jno
pop
mov
imul
ds
aaa
gs
and
leave
fs
je
filds
push
jnp
out
cmp
jbe
sub
xlat
pop
sti
pop
scas
jne
pop
popf
out
mov
mov
push
imul
push
sbb
add
adc
mov
pop
pop
stos
test
mov
fwait
cmp
mov
stos
pop
jae
rcr
mov
sti
jecxz
mov
pusha
flds
insl
mov
negl
aaa
sti
test
into
mov
push
pop
fidivl
add
andb
xlat
xchg
xchg
jg
mov
imul
add
lds
xchg
call
or
incl
lret
mov
or
pop
mov
push
ret
mov
int3
adc
xor
data16
je
xlat
les
or
dec
inc
fs
sub
das
jmp
xlat
push
outsl
adc
pop
aad
mov
sub
aad
xor
das
pop
xor
negl
sbb
test
sbb
pop
xchg
jno
clc
mov
xlat
popa
mov
fcompl
sbb
jne
dec
pop
jl
jle
dec
cs
dec
jne
test
or
jg
mov
fcmovne
jne
lret
stos
xchg
push
mov
mov
repnz
jl
and
shlb
dec
outsl
sbb
scas
xchg
out
sub
pop
mov
and
lahf
aad
mov
and
add
movsb
call
jno
aaa
incb
mov
xchg
xor
cmc
lret
cli
lahf
mov
outsb
insb
adc
pop
xchg
out
les
and
fsubrp
pushf
cmpsb
sbb
sub
fwait
jmp
jne
add
xchg
or
dec
lds
sbb
inc
pop
xor
rcrb
pusha
sub
out
lcall
mov
test
out
pop
pop
mov
icebp
sbb
inc
xchg
in
or
dec
out
insl
xor
pop
inc
in
push
and
jne
jb
test
test
jmp
jp
cltd
adc
xor
xor
arpl
pop
icebp
xchg
cmp
cli
dec
testl
adcb
cmpsb
jge
out
push
test
add
jnp
loopne
inc
out
aaa
inc
sub
jle
clc
mov
pop
fsubl
jnp
aam
cmp
pop
aam
jbe
outsb
lret
jle
pop
sti
std
fildll
push
cmpb
adc
divb
xchg
pop
inc
js
mov
or
fstps
pop
sbb
or
repnz
pop
xchg
cmp
out
inc
ss
and
arpl
sbb
ret
pushl
fsubrl
test
jmp
lret
inc
pop
in
mov
test
clc
fistpl
sbb
stc
cmp
push
fldcw
pop
gs
xchg
jno
ja
and
lea
out
and
mov
or
in
add
jo
ret
sbb
daa
leave
cltd
call
xchg
inc
fdivr
loopne
dec
pop
cmp
push
and
push
pusha
and
daa
jmp
mov
add
pop
xchg
out
fwait
sbb
mov
push
and
out
cmp
pop
repz
in
xchg
push
fisubl
ljmp
sbb
inc
and
mov
pop
mov
mov
fmuls
mull
add
or
stc
xlat
pop
xor
std
mov
lds
in
adc
xorl
pop
je
enter
jb
out
and
loop
sub
jl
mov
mov
push
xor
mov
rcrl
jb
call
outsl
mov
ljmp
aaa
add
loope
cwtl
gs
push
imul
into
arpl
adc
data16
stos
dec
fisttpll
fidivrl
add
or
adc
mov
pop
or
mov
sub
into
mov
xlat
jne
inc
mov
push
xor
adc
fbstp
push
add
jnp
inc
loopne
cmc
add
push
iret
in
and
mov
cmc
or
insl
gs
loop
outsl
jle
adcl
pop
dec
sarl
dec
sub
arpl
xor
leave
jmp
clc
rcrl
xchg
xlat
rcrl
adc
jp
dec
and
and
xchg
fldenv
pop
xor
insb
dec
add
lods
jle
xchg
scas
into
adc
ljmp
lds
negb
std
pusha
mov
arpl
addr16
imul
out
enter
adc
xchg
mov
cwtl
mov
sub
outsl
sub
addr16
ret
or
rclb
mov
leave
leave
fstpl
out
mov
sbb
fnstenv
or
shll
call
in
inc
test
or
stc
jnp
stc
adc
xchg
daa
jg
add
pushfw
push
sbb
pop
and
sbb
mov
push
sub
mov
out
gs
xorb
dec
std
cmp
clc
sub
clc
popa
sbb
dec
inc
inc
sub
pop
fstps
lea
pusha
inc
cltd
jne
mov
fsubs
push
pop
mov
adc
addr16
cmpsl
sub
int
ja
sbb
push
bound
fildll
pop
shll
sub
sub
repz
jge
fisttps
cmpsl
incb
pop
jb
jmp
sbb
or
popa
adc
mov
xorl
fwait
out
insl
cltd
mov
fwait
sbb
pop
into
and
test
ret
iret
push
arpl
ret
iret
shll
add
test
fdivl
sub
test
stc
and
in
lret
out
lahf
test
arpl
stos
mov
inc
cmp
sbb
aad
dec
shlb
stos
xor
gs
push
test
sarb
push
cmp
sbb
out
movsl
loopne
dec
out
push
test
push
or
inc
inc
pop
cltd
addl
fists
xor
aad
fs
filds
lahf
mov
imul
jp
push
add
mulb
test
sti
testl
ljmp
pushf
gs
js
pop
std
fldt
flds
jbe
mov
and
sbbl
jne
pop
stc
add
jns
popf
aad
daa
jne
pop
arpl
lahf
xchg
js
sub
sarl
sub
inc
and
pop
das
pop
lret
cwtl
not
add
data16
addr16
cmpsb
pop
lea
cmp
dec
cmpsl
mov
mov
add
dec
mov
sbb
sub
in
lea
ljmp
jle
stos
or
dec
mov
scas
repz
ss
daa
in
sbb
andb
sbb
test
cwtl
add
add
push
jo
test
jecxz
idiv
mov
sbb
push
fwait
stos
das
pop
sbb
out
push
mov
movsl
dec
insb
mov
testl
jb
xlat
cld
jg
int3
leave
insb
fbld
daa
sbbb
jecxz
test
gs
cld
test
sbb
rcr
xor
ljmp
fildl
cmp
jno
pop
outsb
push
jnp
mov
pop
jae
gs
in
push
mov
sbb
ret
mov
lds
xchg
dec
push
lea
cmp
xor
mov
in
filds
stos
mov
mov
mov
dec
loopne
sbb
jle
adc
adc
push
mov
mov
mov
mov
or
jae
decl
cwtl
jne
mov
mov
jae
and
aaa
in
inc
mov
xor
mov
sbb
mov
mov
inc
je
aaa
insl
xchg
je
and
jns
mov
mov
inc
xchg
fwait
mov
adcl
and
cmpsl
lods
and
cmp
cltd
sbb
fistps
adc
mov
mov
mov
cmpsl
ljmp
dec
addb
sbb
decb
xor
ret
testb
insl
xor
aaa
shr
rep
push
push
pop
and
jno
or
sub
out
pop
add
and
pop
mov
fisttpl
jnp
sti
pop
gs
sahf
std
inc
insl
xlat
inc
ja
sub
add
stc
out
xlat
pop
cltd
or
negl
std
push
sbb
xor
icebp
mov
inc
daa
cmpsb
xchg
sub
les
scas
ss
push
inc
out
mov
push
neg
in
jne
cmpsb
dec
clc
cmpsb
add
pop
xor
lcall
aam
add
outsl
cwtl
fs
pushf
repnz
mov
test
ljmp
cltd
pop
rcrb
inc
mov
sub
rcr
pushf
ss
bound
sti
push
mov
pusha
fdivrl
ret
sub
test
mov
xor
mov
decl
push
jno
lret
or
negl
add
xchg
and
xor
jmp
stos
pusha
pop
ss
loope
sub
aas
nop
push
push
ljmp
mov
fcomp
or
push
xchg
inc
out
out
mov
inc
push
pop
ficoml
std
fcomps
jecxz
in
mull
fsts
pop
pop
fildl
fwait
shl
xor
dec
mov
xchg
jb
sbb
icebp
pushf
out
jb
pop
dec
cs
data16
sub
mov
pop
sbb
sbb
aaa
fcmovu
das
fldcw
jno
ja
repz
or
jmp
pop
loopne
cld
add
pop
dec
sbb
adc
pop
hlt
jmp
pop
sti
fstp
loopne
mov
neg
das
aam
sbb
aas
and
cmp
jmp
jno
fdivr
fcomps
sbb
push
imul
sbb
addl
jnp
jmp
mov
loopne
jp
psubq
fldpi
and
push
fdivr
movsb
in
popf
sbb
fstps
dec
out
cld
popa
fdivs
inc
pop
jmp
loope
pop
fcomps
int
sbb
push
jmp
and
fprem
sahf
push
mov
out
fcmovnu
fadds
lahf
adc
push
jg
or
outsl
in
insb
pop
xchg
fsts
movsb
mov
loopne
das
cmp
cmp
pop
mov
fisubl
pop
add
and
fldenv
lahf
loopne
push
xlat
fdivr
dec
sti
loopne
jl
lahf
pop
out
loope
sbb
popa
pop
pop
push
stos
pushw
jecxz
mov
cmp
cld
fsubr
sbb
sbb
cmp
pop
lahf
mov
popa
in
sbb
jmp
lcall
sbb
pop
clc
fsubrl
or
cmp
insl
fwait
jno
sbb
mov
push
imul
pop
out
popf
popa
pop
mov
gs
fcompl
cmp
and
mov
fcompl
sbb
pop
and
je
adc
imul
loope
loopne
stos
and
and
fstps
xlat
shlb
mov
outsb
xchg
sub
imul
outsl
mov
and
push
aas
mov
push
inc
push
adc
pop
aam
jbe
js
mov
sahf
xchg
pop
sbb
push
outsl
adc
in
out
addr16
imul
cmp
rorb
scas
pop
out
fstl
adc
test
mov
addr16
repz
pop
scas
pop
fistps
js
testl
jecxz
push
pop
mov
jne
cmp
jecxz
pop
inc
ret
push
mov
sbb
mov
add
decb
jecxz
pop
add
mov
loopne
addb
out
add
test
clc
add
mov
mov
jl
pop
jae
inc
and
push
cmpsb
adc
mov
and
mov
daa
mov
cmc
popa
fcomps
xchg
add
pusha
out
fidivl
mov
cmpsb
sbb
enter
clc
lods
lock
or
adc
scas
aas
mov
sbb
lds
pop
push
std
mov
pop
mov
jecxz
arpl
xchg
bnd
xor
andw
lret
es
enter
inc
adc
pop
inc
xor
sub
jno
gs
jno
mov
add
arpl
jle
iret
push
mov
pop
or
out
sub
and
jne
sbb
xor
mov
push
aam
ss
mov
in
shlb
xorb
mov
add
add
loop
push
adc
addr16
ret
mov
out
adc
mov
cmc
add
push
sbb
sbb
test
mov
and
mov
add
mov
sub
mov
mov
das
adc
clc
ss
stos
xchg
mov
popa
inc
in
notl
andb
loop
or
mov
mov
add
pop
pop
lods
xor
cltd
loopne
pop
out
dec
dec
popa
cmp
adc
or
pop
jp
sub
xor
repz
xchg
out
scas
data16
fcmovb
and
xlat
pop
in
cmp
imul
fisubrs
xchg
jmp
ss
outsl
test
push
imul
inc
sub
fmull
lret
imul
jae
loop
es
cmpsb
xlat
cmp
inc
ret
loop
psubd
and
sbb
loopne
mov
inc
and
sub
dec
pop
clc
pop
fstpt
mov
ret
fmulp
ret
pop
jecxz
aas
lds
xor
xchg
lahf
in
mull
ss
mov
aas
mov
int
sahf
enter
push
aad
imul
fs
push
mov
mov
mov
ss
in
clc
mov
push
loopne
jp
ja
sbb
and
push
loop
out
inc
xor
push
lds
ret
jmp
sbb
imul
push
jne
add
dec
xchg
cld
icebp
and
sub
imul
lcall
cmc
jl
or
xor
jb
das
inc
ret
and
dec
pop
xchg
in
shrl
or
cwtl
cmp
adc
jg
dec
ficompl
jle
mov
jns
loope
push
sbb
inc
iret
repnz
adc
sub
inc
je
xlat
jbe
movsb
in
or
cmc
aam
cmp
mov
jl
add
add
flds
mov
sbb
push
repz
and
jecxz
aaa
cltd
decl
repnz
pop
jae
add
add
into
jne
mov
push
lds
xor
test
outsb
pop
or
loopne
sbbl
ds
test
nop
mov
sbb
sar
add
dec
adc
loopne
pushf
add
pop
jnp
sahf
divl
or
add
jne
lahf
outsl
sahf
popf
sbb
jmp
or
pushf
add
mov
jle
gs
sub
out
push
adc
lea
mov
jecxz
jne
fwait
mov
or
repnz
cld
push
gs
bound
shlb
jge
orb
outsb
hlt
stos
cmp
addr16
adc
jnp
push
xor
push
dec
push
lods
xor
out
call
jecxz
push
test
inc
fistpll
mov
divl
inc
push
adcl
cmp
rcrb
clc
pop
testl
daa
or
gs
cltd
out
adc
fisubl
and
xchg
loopne
xor
jecxz
mov
cmp
gs
inc
pop
lds
in
fimuls
xchg
adc
and
out
pop
jecxz
or
pop
adc
mov
std
test
dec
sbb
jg
insl
xlat
sub
loope
out
mov
gs
daa
imul
rorl
repz
and
shrl
cmp
test
les
cltd
jne
sub
in
aam
mov
mov
test
mov
ljmp
outsl
mov
int3
sub
sub
xchg
fxch
sbbl
mov
stos
fs
aaa
test
stos
mov
fisubs
xchg
cmp
pop
mov
dec
push
push
fadd
adc
loop
nop
mov
fwait
mov
test
imul
ret
std
out
data16
out
adc
mov
iret
xchg
clc
mov
or
jmp
gs
insb
lahf
pusha
cmp
inc
inc
ror
sbb
out
push
sub
sbb
rcrb
imul
popa
sbb
inc
lds
fs
lea
pop
subb
xor
jge
fsubs
les
ljmp
mov
call
sbb
pop
lock
inc
cmpsb
insl
shll
mov
jns
sub
insl
ljmp
test
mov
push
cmp
mov
inc
loop
xor
loopne
jl
jae
sbb
and
mov
pop
data16
sub
outsl
loop
push
mov
dec
push
jg
or
pop
pop
pop
xchg
push
jno
jmp
cmp
loopne
fildl
stos
imul
fwait
out
push
mov
out
xchg
ss
imul
xor
xor
mov
cmp
xor
or
jae
inc
xlat
jne
imul
lock
pop
sub
cmp
gs
push
push
lret
jmp
stc
xor
and
jne
hlt
pop
inc
inc
daa
gs
pusha
mov
mov
jp
pop
and
mov
sub
mov
sub
pop
mov
rcr
inc
fs
jecxz
cmc
andl
pop
sahf
sub
lcall
push
lret
and
fsubr
ss
mov
scas
pop
mov
in
pusha
mov
loope
cmpl
call
cmp
aas
lret
lods
mov
insb
sbb
fucomp
lcall
mov
data16
sbb
or
mov
add
je
rolb
mov
mov
aam
push
loopne
clc
sahf
das
push
mull
mov
jl
loope
push
add
insb
inc
inc
adc
loop
xchg
movsb
repz
ret
ja
out
inc
inc
mov
lds
icebp
mov
gs
roll
cli
xor
mov
adc
adc
or
push
xchg
xchg
outsb
push
xchg
mov
shr
dec
xor
int
dec
hlt
subl
icebp
mov
jecxz
dec
insb
jae
push
lcall
sarl
arpl
cmc
dec
leave
aaa
ss
int3
mov
daa
adc
fnstsw
test
cmpl
fnstsw
enter
notb
addr16
inc
or
pop
iret
fidivl
cld
movsb
push
out
push
mov
add
xchg
and
add
mov
dec
and
mov
jae
inc
cmp
rcr
fidivl
add
cmp
insb
mov
add
adc
outsl
ficoml
psrld
sar
sbb
add
in
push
imul
jne
rorl
iret
je
loopne
sbb
in
cmp
cs
sarl
loope
cwtl
outsl
loopne
fwait
repz
pop
xchg
cmp
clc
push
jmp
ja
push
push
ret
incl
sbb
cwtl
lahf
test
pop
and
fdivs
fprem
jg
pop
xor
shl
adc
lret
add
fcomps
dec
iret
pop
add
jge
ljmp
inc
mov
mov
loop
push
adc
imul
mov
adc
mov
mov
movsb
and
pop
imul
mov
mov
cmp
scas
xchg
pop
add
dec
ret
jb
adc
and
iret
lcall
sub
mov
mov
pop
inc
xor
out
popf
aas
dec
cmpb
lock
xlat
arpl
push
aaa
jne
stos
mov
or
loop
outsb
stos
cltd
les
cmp
xor
xsha256
cmpsb
adc
sbb
jnp
ljmp
sti
jmp
jmp
dec
or
xchg
out
dec
pop
in
sbb
clc
cmp
push
pop
jne
xor
imul
sub
sbb
aam
push
loop
and
sbb
xor
inc
jnp
dec
ljmp
cltd
daa
nop
jo
in
push
jbe
mov
lods
pop
shrb
test
scas
sbb
jno
xlat
fbstp
pop
out
jne
dec
and
insl
testl
push
sbb
fcompl
fistps
pop
pop
push
idiv
out
mov
sbb
or
mov
ror
or
jns
push
out
cmp
cmp
fcmovnbe
aaa
lret
or
out
mov
sahf
fwait
push
cmp
add
jae
cmp
mov
xor
jle
fs
loopne
push
jmp
mov
jne
clc
ret
add
xchg
ss
pop
jbe
ljmp
push
mov
dec
sub
adc
adc
pop
xchg
das
pop
sbb
dec
adc
adc
lret
dec
out
movsl
addr16
or
mov
mov
clc
and
mov
ficoml
mov
das
jb
movb
fmuls
jp
add
cmp
add
outsb
pop
lret
xchg
insb
xchg
cwtl
out
fwait
push
cwtl
push
jnp
sti
add
cltd
jle
clc
jne
imul
push
or
jne
mov
cwtl
mov
push
inc
inc
xchg
jo
pop
sbb
or
jecxz
je
dec
fbld
mov
repz
andl
mov
cmc
cli
mov
into
in
sbb
repz
mov
jecxz
add
inc
xchg
xor
fstp
push
lea
push
xor
out
mov
mov
xor
sub
xor
in
dec
mov
lahf
negl
test
inc
fs
push
xor
lret
loope
and
gs
stc
imul
cmp
and
jbe
out
andl
jge
shl
cmc
add
ret
mov
repz
add
addr16
sub
sub
pop
shlb
je
dec
mov
jne
aam
sub
bound
mov
xchg
scas
sbb
xchg
je
fisttpll
mov
mov
lcall
repnz
xchg
sbbb
mov
push
movsl
cmp
icebp
jecxz
jbe
ljmp
ret
mov
pop
mov
shlb
inc
pandn
outsb
mov
aaa
cmp
jbe
jno
sbb
out
fisttps
and
push
sub
dec
inc
les
pop
mov
mov
es
pushf
dec
insl
out
inc
inc
pop
sbb
jne
movsb
jne
pop
cmpsb
hlt
aad
pop
jg
sub
pushf
push
imull
pop
bound
insb
xor
outsl
rclb
cmpl
sub
das
mov
push
and
popf
pop
mov
add
adc
lahf
adc
push
test
pop
loopne
lcall
pop
xchg
cmp
sub
lret
mull
push
shlb
add
int3
jno
mov
mov
xchg
mov
fsubr
cld
mov
sub
movsb
sbb
outsl
popa
dec
loopne
jnp
loope
cmp
out
fbld
lods
adc
enter
dec
outsl
dec
addl
sub
mov
test
call
sbb
adc
rolb
xor
mov
sar
fidivs
popa
filds
push
dec
or
stc
mov
pop
out
sbb
sarl
jecxz
icebp
divl
call
rcrb
sbb
mov
pusha
pop
xchg
pop
mov
mov
cs
pop
decb
xor
push
inc
aam
aam
jae
dec
xchg
outsl
arpl
sub
not
leave
out
call
lahf
outsl
repnz
jp
das
pop
pop
in
cltd
jno
jnp
cli
cmp
jno
rclb
inc
ficoms
out
fstpl
js
add
fistl
xor
in
sbb
jns
xor
xor
jne
pop
testl
repz
pop
aas
ret
mov
add
negl
jae
outsl
xor
jnp
fcmovnb
gs
jo
jl
xchg
add
movsb
ss
std
stos
sbb
jmp
xor
dec
jmp
fistpl
cli
xchg
mov
gs
inc
inc
lret
imul
fstl
ljmp
mov
dec
jmp
pop
jne
lret
adc
mov
dec
mov
bound
aad
fstpl
fmul
xchg
icebp
and
sub
stc
and
es
xchg
xchg
sbb
jmp
aad
outsl
pop
pusha
aad
in
gs
aaa
xor
in
sahf
ss
push
fcoml
xor
xor
repz
fucomip
bound
push
int3
dec
outsb
inc
lods
jne
adc
and
xor
loop
into
mov
hlt
sub
test
clc
inc
movsl
out
mov
add
loop
pop
repnz
out
push
sbb
loop
jg
xchg
test
sbb
fisubl
aam
cmp
idivl
gs
aaa
out
jmp
adc
scas
sbb
repnz
mov
and
add
mov
mov
mov
mov
mov
subb
test
incl
or
outsb
sbb
daa
push
pop
add
mov
or
xchg
inc
add
or
xor
jno
dec
inc
mov
das
mov
or
int
repnz
sbb
push
test
lea
popl
mov
sbb
lock
out
fldenv
cmpsb
sbb
jl
add
xchg
loopne
mov
mov
jne
shlb
addr16
mov
sub
inc
cmp
andb
mov
repz
lods
pusha
mov
test
adc
sub
pop
xchg
and
daa
pop
cltd
dec
push
lret
testl
cmpsl
mov
jp
cwtl
imul
int
mov
test
sbb
jle
push
fnstsw
xor
pop
les
sub
fcomi
shr
push
mov
add
add
pop
fstl
lret
mov
push
pop
push
pop
push
pusha
js
push
xlat
aad
sub
or
xchg
dec
stc
mov
or
cmp
adc
xor
fcmovnu
inc
adc
xchg
pop
xchg
movsb
xor
mov
cmp
pop
clc
movsb
xchg
or
jne
pop
cli
clc
sbb
dec
mov
push
addr16
mov
icebp
dec
fbstp
cld
xor
loope
rolb
add
mov
cmp
fnstsw
jbe
lods
push
xor
sti
and
imul
addr16
sbb
imul
out
inc
fcmovnb
jne
xchg
mov
cs
and
daa
adc
pop
data16
pop
cmp
ss
jne
hlt
add
dec
dec
fwait
std
inc
and
int
pop
js
pop
push
jne
lcall
mov
jg
outsl
jp
and
out
jbe
repz
add
sbb
push
jne
push
jge
int
mov
sar
lds
rcrb
xchg
in
dec
pop
cltd
leave
in
adc
cmp
js
xor
daa
clc
ret
rcrb
pop
hlt
shlb
scas
push
rorb
in
sbbb
filds
sbb
sar
ficoml
orl
das
xchg
dec
sbb
das
push
add
push
jmp
lock
mov
sbb
jp
jb
std
or
pop
jbe
adc
jnp
iret
mov
jmp
push
push
fmuls
cs
aam
in
sub
jmp
test
and
and
rcr
fs
out
addl
aas
nop
push
pop
inc
gs
int3
addr16
repz
inc
popa
push
in
lock
fcoml
incl
and
scas
xchg
xor
test
and
out
test
add
movb
pop
inc
push
loopne
pushf
pop
sub
pusha
cmpsl
gs
sbb
pushf
jle
scas
push
or
test
sub
jne
shl
mov
jnp
ret
add
hlt
scas
jl
mov
push
scas
xchg
nop
xor
mov
sub
push
imul
jne
sbbl
and
les
xabort
mov
mov
push
and
gs
sti
jecxz
add
int3
movsl
pop
aaa
pop
aaa
fisubl
rolb
jnp
sub
fidivl
gs
and
xchg
enter
shll
or
fldenv
orb
add
imul
lret
mov
dec
sbb
decb
sub
stos
cmc
daa
jo
popf
negb
xchg
and
out
xchg
push
xlat
mov
adc
movsb
sub
clc
and
leave
adc
sbb
insb
jno
mov
out
pop
lea
outsb
mov
xchg
jbe
addr16
xor
loop
sbb
or
jne
mov
mov
pop
push
in
xchg
jecxz
pop
pop
lea
inc
repz
pop
les
xlat
pop
fs
iret
cmp
add
sub
jne
push
sub
repnz
jnp
xchg
inc
movsl
fstp
jne
ds
sub
mov
repnz
rcll
rcr
jmp
fcmovne
rolb
mov
sbb
lods
xor
xchg
pushf
data16
or
sub
pop
popf
mov
popf
or
cli
mov
push
and
sbb
out
or
inc
sbb
enter
pop
mov
push
xchg
pop
push
shlb
push
push
test
pop
and
mov
adc
into
shl
xchg
jae
pop
xchg
xor
ret
sbb
cmp
inc
popa
pop
pop
loope
jnp
das
adc
movsl
out
in
mov
arpl
je
add
pop
or
mov
jge
xor
outsb
cmp
out
das
xchg
pop
adc
mov
popl
aas
or
push
pop
push
jecxz
rolb
and
cmp
stos
xchg
push
add
adc
add
fbld
orb
ja
xlat
scas
mov
fstl
push
out
pop
push
in
mov
mov
orb
jmpw
or
or
ss
in
add
ljmp
push
scas
pusha
cmpsl
out
add
testl
mov
sbb
adc
jne
mov
mov
addl
es
imul
ja
add
lds
movsl
add
popl
int
sbb
xorb
add
sbb
jns
arpl
aad
jnp
xcrypt-cfb
cmpsl
pusha
repnz
mov
inc
sbb
adc
mov
inc
arpl
xchg
pushf
or
mov
js
sbb
push
push
sbb
add
or
or
shrl
and
jae
jns
xor
movsl
cli
cltd
mov
test
jmp
push
and
mov
mov
aad
das
mov
jbe
add
pop
daa
pop
repz
jbe
jb
rolb
std
insl
sub
xchg
test
pop
movsb
in
push
jne
sbb
mov
xorl
cmp
fs
faddl
pop
or
daa
aad
inc
xor
xchg
push
out
inc
mov
inc
pop
push
dec
xchg
xchg
sbb
and
sub
pop
test
push
and
cwtl
push
xchg
mov
mov
push
je
ja
adc
dec
pop
and
cwtl
jo
hlt
push
pop
pop
cld
ljmp
xor
pop
inc
adcb
loop
push
jne
lods
push
fistps
and
dec
fbld
xor
dec
add
sti
jecxz
push
scas
mov
and
in
negl
adc
jecxz
adc
jmp
push
inc
shll
push
sarb
xchg
fcmovbe
cmp
incb
fxch
pusha
pop
add
xor
and
mov
inc
adc
sub
leave
push
out
stc
pop
pop
pop
sbb
les
mov
aaa
fiaddl
fnsave
push
gs
fldl
pop
fs
mov
jns
pusha
push
mov
cmc
push
scas
push
add
fucompp
xor
mov
jno
fidivrl
loopne
pop
hlt
ret
idivb
jle
sbb
xchg
data16
cld
jnp
out
loopne
mov
in
gs
and
bound
jp
push
call
aas
add
push
mov
in
inc
xchg
insb
xor
xor
mov
adc
cmpl
std
jmp
mov
dec
ret
sbb
fimull
push
sbb
cmpsl
lods
jne
pop
sbb
fistps
pop
gs
outsb
mov
ret
jg
xor
jns
clts
jbe
icebp
lahf
mov
jns
sub
test
adc
mov
and
in
addr16
addr16
dec
dec
push
sub
imul
icebp
pop
adc
pop
imul
inc
data16
js
fnsave
sbb
cmp
or
mov
inc
lcall
std
in
xor
dec
fcmovu
scas
sbb
jne
fimuls
pop
dec
cs
cwtl
cmp
sbb
out
pop
and
outsl
out
pop
xor
daa
mov
sbb
ljmp
cmpsl
and
push
cmpsb
push
fnstsw
jecxz
ffreep
pop
mov
jbe
mov
psllq
data16
mov
adc
loopne
fisubs
mov
or
xchg
pop
mov
in
gs
test
mov
and
adc
xchg
fidivs
clc
gs
das
mov
fwait
imul
aad
lods
pusha
and
and
cmpsb
ljmp
addr16
mov
andb
fldt
sub
or
aam
jne
xchg
pusha
dec
inc
inc
xchg
hlt
gs
pusha
das
cmp
loopne
and
adc
pop
mov
jl
int3
test
and
and
leave
xor
xchg
fnstsw
or
mov
lret
repz
lea
daa
call
push
out
aaa
sbb
push
dec
outsl
fbld
fsqrt
and
lret
xor
ds
xlat
or
scas
sbb
out
shll
sub
or
and
jl
adcl
sahf
arpl
add
cmp
mov
xor
add
imul
jmp
add
jg
pop
add
pop
xchg
jecxz
lods
in
in
sbb
pop
xor
test
imull
add
cmp
lahf
sbb
cmpsl
in
push
cltd
fadds
mull
mov
mov
aaa
cld
xor
jmp
xchg
push
mov
stc
jecxz
insb
pop
imul
inc
cltd
xchg
mov
faddl
xchg
xchg
and
testb
mov
pop
ret
das
mov
imul
adc
dec
frstor
pop
or
mov
xor
lcall
adc
cmpsb
andb
xor
adc
jnp
lahf
xor
rolb
fldl
sar
aaa
and
inc
ss
and
in
cmpsl
je
and
int3
fadds
test
mov
pop
sbb
mov
sti
js
push
in
cltd
jbe
int
xorl
jns
lock
rcl
fnsave
gs
push
aas
sarb
decl
xor
mov
mov
fwait
jle
mov
xchg
insl
and
sbb
std
loopne
xor
sahf
add
das
insl
fsubs
xchg
pop
fsubl
jne
or
dec
cld
sahf
imul
ss
mov
gs
adc
stos
sub
ret
pop
jg
repz
pop
leave
pop
mul
into
push
repnz
out
pop
pop
adc
pop
cmpsl
xorb
ss
dec
mov
inc
fwait
scas
mov
sbb
push
pop
pusha
or
mov
xchg
pop
or
test
pop
sahf
inc
add
mov
jb
push
fsubs
mov
sub
addr16
fisubs
xor
sub
ds
loope
mov
sbb
push
in
xor
addr16
in
rol
sub
fldt
es
popf
sbb
aad
idivl
jb
repnz
das
xor
fldcw
push
out
shr
jle
push
sub
fxch
sbb
and
cmp
mov
pushf
mov
fldenv
stc
scas
cmpsb
test
push
sub
xchg
das
dec
mov
adc
mov
repnz
sbb
scas
mov
fcoms
fisubrl
out
imul
adc
xchg
cmp
stos
sbb
push
sub
pusha
push
cmp
sbbl
jl
rcrb
dec
ret
jecxz
add
gs
lods
repnz
fadds
xor
jo
jno
cmp
xchg
stos
xor
ds
idivl
gs
insl
push
int
dec
mov
push
push
out
push
jne
adc
sbb
mov
out
out
lahf
repnz
xor
push
ss
mov
aas
and
mov
mov
mov
and
sbb
pusha
sti
sbb
fistl
sarb
pusha
mov
push
popa
cmp
arpl
insb
xchg
or
mov
fdivl
add
movsl
loop
cs
mov
testb
jno
mov
cmp
stc
mov
jmp
xchg
adc
jnp
rclb
pop
fistl
mov
sbb
xlat
out
push
dec
popa
jne
adc
inc
es
mov
je
int
mov
jne
or
add
scas
sti
pusha
or
sti
jl
in
jp
arpl
jne
mov
inc
inc
leave
sbb
shl
sub
cltd
iret
out
add
ss
dec
mulb
jne
cmpsb
outsl
cld
out
xor
fisttpl
mov
test
mov
mov
inc
arpl
inc
jmp
sub
lret
push
das
shll
push
out
das
pop
jecxz
aaa
mov
push
xchg
inc
sbb
adc
ret
fistpl
frstor
rorb
cli
adc
ret
sbb
inc
push
je
sub
out
cli
sbb
in
movsb
and
cmp
sbb
popa
mov
mov
mov
xchg
jne
cmc
fdivrs
cmp
pop
xchg
pop
loop
cmpsb
fisttpll
mov
ja
inc
push
in
or
pop
hlt
and
or
mov
fcoms
clc
jle
xchg
in
aam
bound
add
dec
sub
inc
mov
pop
cltd
dec
es
out
adc
mov
imul
in
leave
xor
es
outsb
pop
fldenv
sbb
scas
lcall
dec
test
pop
mov
jnp
xor
push
fs
out
aaa
rclb
jecxz
dec
aam
gs
mov
pushf
lahf
and
scas
loop
sbb
stos
and
sub
mov
das
cwtl
or
fstpl
sahf
xchg
adc
out
cs
fs
in
xchg
insl
ret
inc
add
xchg
push
in
xor
xor
pusha
inc
daa
xor
add
lods
xchg
push
add
adc
xor
pop
lcall
and
pop
mov
dec
nop
pushf
pop
out
pop
outsb
pushf
cmp
adc
loopne
mov
fwait
push
ljmp
pop
adc
fwait
inc
sbb
adc
push
fsubrs
mov
or
aad
pop
fcoml
std
jo
pop
movsl
fldt
cmpsb
push
daa
mov
inc
adc
push
fstps
jnp
lods
mov
jno
dec
push
mov
xor
mov
mov
xchg
movsb
mov
rcrb
adc
lds
sbb
jg
in
mov
push
xlat
fsubrs
lret
pop
hlt
jle
push
xchg
inc
sub
xchg
fisubl
out
xchg
xor
cmp
test
xchg
mov
adc
in
inc
mov
mov
xor
mov
insb
sahf
lret
in
cli
aad
andb
test
pushf
mov
les
fprem
cmc
popa
push
and
ljmp
add
jnp
loope
cmpsl
ss
lret
mov
stc
pop
xor
mov
xchg
push
and
sbb
jp
cmp
dec
fsubs
fists
xchg
ficoml
pop
inc
cmp
push
adc
loope
push
add
mov
in
movb
cmpsb
inc
in
mov
pop
dec
pop
movsl
imul
or
jmp
adc
adc
pop
int3
gs
xlat
xor
add
add
xlat
jmp
xchg
inc
fdivrs
lds
dec
cli
jb
outsl
push
test
dec
outsb
fs
dec
dec
inc
fnsave
mov
clc
lcall
jbe
push
xor
aam
fnstcw
in
dec
mov
xchg
xorl
push
mov
pop
sti
adc
push
leave
outsl
xchg
dec
pop
out
mov
cmpsb
in
pop
cmp
movsb
and
cbtw
add
fadds
cmp
ffreep
shrl
inc
into
movsl
loope
and
pop
pop
out
fbld
stos
mov
dec
in
jne
cmpb
mov
push
insb
scas
mov
and
mov
xlat
adc
pop
sub
daa
out
cmc
ds
fstpl
cli
fidivl
fistpll
ss
ret
jne
mov
cmp
xor
icebp
sbb
fdivl
jecxz
dec
outsb
push
lock
xchg
xor
fcompl
ret
cmc
nop
sbb
or
and
das
addr16
dec
add
sbb
pop
dec
jmp
mov
dec
xor
sub
jne
mov
jae
jmp
out
sbb
cmp
mov
xchg
mov
aas
add
pop
mov
dec
fisttpll
mov
push
pop
jne
rcl
sbb
fistpll
shrb
mov
jno
movsl
in
outsl
xor
inc
or
push
inc
jp
mov
xchg
test
jge,pt
negl
and
loopne
jne
push
iret
push
adc
aaa
xor
adc
mov
fs
jb
jecxz
pop
jecxz
jbe
mov
gs
popa
and
repnz
push
out
inc
adcb
pop
xor
jne
out
loopne
fiadds
inc
xchg
jbe
push
push
addr16
dec
mov
insl
iret
pop
push
arpl
mov
jbe
jecxz
xchg
push
inc
pop
add
mov
add
cmp
cmp
push
mull
test
sbb
std
xchg
sub
xor
fwait
adc
les
leave
out
sbb
lods
std
mov
imul
arpl
fsub
ss
push
xchg
ljmp
rol
jo
jns
popa
push
repz
ja
bound
xor
adc
ret
aas
cmp
add
xor
ljmp
out
adc
leave
out
jle
testb
in
xor
out
rcr
jno
cmc
inc
cmp
arpl
mov
incb
dec
jle
sub
movsb
push
in
jne
sub
push
lea
dec
je
es
addr16
call
cltd
add
fsubs
jne
mov
into
mov
push
call
sbb
pop
imul
inc
mov
lods
adc
or
fadd
lret
jmp
or
leave
xchg
subl
mov
scas
add
cmpsb
jo
cli
adc
nop
mov
jecxz
jecxz
divl
xor
insb
add
mov
pop
insl
mov
sbb
or
xor
cwtl
pop
mov
das
dec
cmp
fnsave
xor
negl
subb
scas
mov
jnp
std
jno
xor
std
je
aad
fstl
mov
inc
repz
inc
xchg
fs
dec
out
mov
and
push
aam
addr16
movsl
loop
rcrl
outsl
push
cmp
mov
cmc
in
add
mov
mov
scas
out
mov
leave
pop
dec
fidivrl
xor
out
fbstp
jae
dec
mov
sub
sub
daa
pop
add
dec
sbb
fcoml
add
xchg
dec
in
arpl
and
push
mov
add
lds
ds
mov
sti
lods
jo
cltd
loop
gs
loopne
pop
xchg
test
pop
sub
sbb
and
add
pop
cmpl
repnz
push
es
fistpl
add
xchg
sti
test
aam
fisttps
add
in
outsb
mov
sbb
mov
pop
and
pop
adc
add
ret
push
inc
addr16
sbb
add
xchg
add
inc
mov
inc
fs
adc
ja
sbb
mov
stc
imul
aam
clc
clc
xchg
sbb
aaa
mov
sub
add
test
pop
mulb
in
pop
xchg
pushf
jb
mov
std
mov
arpl
loope
aas
jmp
add
mov
jnp
mov
shl
mov
mov
cmp
pop
jae
cmp
pop
jns
push
jbe
in
pop
add
inc
xor
imul
mov
pop
and
seta
outsl
cmpsb
xchg
iret
clc
adc
sbb
adcl
sub
icebp
das
jle
pop
xchg
pushl
jae
stc
cs
repnz
sbb
icebp
dec
insl
ss
sbbb
lret
jmp
xchg
in
fldt
dec
adc
jmp
fcomp
and
pop
pop
clc
fcomps
and
jns
out
fldl2e
xchg
push
lcall
in
push
pop
mov
jns
fildll
and
and
out
pop
mov
sbb
fwait
jnp
sbb
mov
insb
sbb
inc
push
in
inc
push
scas
or
pop
xor
aaa
fldcw
aaa
push
mov
jo
in
push
pop
cwtl
push
test
or
loopne
sub
mov
adc
mov
sahf
sbb
cmp
fcomps
in
pop
sub
xchg
popw
and
mov
cmp
and
cmp
jle
push
mov
imul
pop
fcompl
cld
fcmovnu
pop
ficompl
cltd
jnp
jmp
and
fcompp
pop
or
fcomi
jne
xor
sub
sbb
and
pop
lcall
adc
ja
inc
fidivrl
or
sub
pop
jmp
sbb
mov
push
pop
sbb
add
mov
jecxz
pop
push
in
jnp
or
fstps
push
enter
imul
fs
movsb
inc
sbb
jnp
jmp
cli
pop
sbbl
sub
and
pushf
cmp
mov
pop
xchg
pop
fisttpl
fcomp
sbb
and
jmp
cmp
jge
fwait
mov
insb
pop
sbb
arpl
pop
bound
fxam
andl
sub
sbb
and
lahf
pop
fwait
cld
stos
ja
aas
inc
pop
push
loopne
pop
fmuls
adcb
call
in
fsubl
call
sub
sbb
fcomps
sbb
sub
pop
clc
pop
jnp
cltd
sub
fucomp
xor
fnstsw
fcoms
fcomps
dec
mov
out
pop
outsl
cmp
scas
or
or
sub
lcall
fnstenv
sar
push
jo
pop
sbb
xlat
mov
dec
xchg
jecxz
pop
cmpsl
gs
lods
frstor
sahf
dec
push
jecxz
icebp
sarb
movsb
dec
nop
loopne
ds
jae
mov
sti
xlat
jl
jbe
mov
adc
inc
xlat
ret
gs
in
dec
and
popa
cld
sub
push
mov
das
out
hlt
xor
arpl
add
pusha
loope
pop
mov
jno
or
cwtl
pop
jecxz
insb
rcr
add
test
rcr
sub
sbbl
push
jl
cs
jecxz
lods
iret
pop
or
sub
mov
and
pop
pushf
ja
pop
jne
icebp
jecxz
in
add
jecxz
push
daa
sbb
adcl
in
pop
push
push
les
or
push
aaa
in
sbb
fsubs
pop
mov
or
pusha
fsubrl
add
sahf
cmp
and
shlb
aad
out
lods
xor
out
ss
call
jne
push
adc
iret
or
pop
push
dec
and
popf
xchg
fstl
jne
mov
cmpsb
lods
jg
lods
test
dec
or
mov
jns
lahf
fisubrl
xchg
lock
inc
mov
js
cmp
lret
push
in
scas
jbe
es
int
dec
in
pop
dec
push
jmp
jo
out
clc
repnz
enter
mov
out
pop
and
clc
dec
xchg
fnsave
sbb
cmp
jne
aam
scas
jnp
jle
daa
push
loopne
cld
loope
push
in
sbb
adc
pop
xorb
mov
push
pop
and
xor
mov
pop
iret
gs
jle
pop
and
pop
sbb
je
push
test
or
pop
pop
loopne
pop
dec
ljmp
cld
outsl
lods
aam
jno
imulb
inc
dec
out
fdivrl
lahf
gs
loop
es
or
cmpsb
add
jbe
movsl
xor
arpl
pop
xor
cmc
mov
jne
pop
push
cmp
inc
mov
daa
popa
jg
push
pop
mov
jg
shl
enter
aam
inc
pop
adc
mov
pop
add
out
xchg
and
test
pop
test
dec
xchg
pusha
popw
mov
sub
lret
gs
rcrl
xlat
std
xchg
add
je
add
gs
pop
aad
mov
jle
xor
mov
xor
daa
dec
hlt
pop
out
cwtl
enter
inc
in
xchg
rcll
jne
bound
adc
mov
gs
repnz
inc
mov
jge
mov
lods
leave
imul
aad
and
dec
mov
pop
out
cmc
cli
js
sub
pushf
dec
outsl
je
add
mov
mov
mov
imul
and
cwtl
popa
insl
jns
movsl
jecxz
test
dec
add
xor
xlat
mov
sub
or
mov
cld
inc
test
enter
aaa
xchg
jne
mov
clc
pop
fs
mov
out
imul
inc
pop
jb
imul
out
inc
mov
sti
gs
gs
clc
in
xchg
pop
insl
xchg
pop
test
movsl
rorb
pop
movsl
xor
repz
jbe
out
iret
jne
mov
scas
out
idivl
dec
in
pop
repz
inc
int3
fidivs
jae
and
test
ds
mov
jbe
cmp
lds
gs
jge
fidivl
pop
clc
iret
cmp
pushf
cmpsl
mov
mov
mov
and
xor
daa
mov
add
or
fldl
dec
pop
aaa
jbe
iret
dec
add
addr16
push
adc
ds
scas
push
dec
or
jmp
sub
or
lcall
decl
and
cs
jne
addl
mov
loopne
clc
pop
sub
pop
lcall
gs
pop
and
hlt
xchg
mov
fldt
std
sti
mov
inc
pop
dec
cwtl
out
and
cmp
call
mov
or
mov
jecxz
std
inc
repz
pop
arpl
xor
arpl
jae
jne
mov
fstps
imul
xor
arpl
daa
and
xchg
bound
pop
mov
repz
jg
push
mov
ss
gs
push
mov
clc
cmp
mov
sbb
jne
rcrb
scas
mov
scas
cwtl
lret
in
sbb
xchg
fs
inc
pop
mov
negl
pop
out
int
in
jle
and
inc
or
in
adc
mov
popf
inc
iret
jae
ds
pop
jne
dec
je
lea
or
inc
repnz
es
jbe
fsts
arpl
mov
jecxz
idivl
mov
idivl
cld
pop
out
xchg
push
cmc
rcrb
cmpsb
scas
xor
in
fnstsw
nop
jecxz
test
dec
loope
adc
std
leave
sbb
aam
jg
loope
das
mov
cmp
scas
hlt
pop
out
pop
stc
mov
mov
imul
fldenv
stos
mov
loopne
lock
sub
xorl
cld
xlat
sti
sbb
pop
jl
xor
fucom
push
pop
pop
and
xchg
jne
mov
stos
lock
out
aaa
sbbb
xchg
add
movsl
pop
inc
xchg
push
inc
pop
ds
andl
or
test
addr16
popf
add
push
stc
dec
add
gs
jp
rorb
leave
outsb
fnstcw
sub
fmulp
jp
jae
xchg
push
mov
cmpsb
cmp
and
xchg
sbb
pop
pop
movsb
scas
loopne
cs
shlb
mov
xor
sub
sahf
idivb
adc
cltd
leave
or
stc
lods
cmpsb
inc
cltd
test
sbb
sbbb
popf
adc
repnz
cmp
les
sti
sub
sub
je
cmp
pop
ja
dec
daa
cmpsb
insb
pop
insb
add
outsl
ret
sub
gs
int
jne
imul
jle
push
aad
imul
hlt
mov
ja
jnp
xor
sub
pop
or
mov
sbb
jl
jge
outsl
aad
mov
sbb
push
pop
loop
xchg
cltd
orl
pop
outsl
or
mov
iret
inc
and
push
sarl
mov
pop
test
pop
mov
sbb
fsub
mov
push
lret
inc
repnz
xor
pop
ret
push
lock
jmp
mov
out
imul
loope
push
les
cmpsl
xor
in
xchg
fwait
out
outsl
mov
cmp
push
push
jl
sahf
jb
clc
mov
outsw
push
jecxz
aas
sbb
add
sub
and
lods
jl
out
inc
in
pop
inc
test
jl
das
gs
fs
sub
inc
sbb
push
into
dec
sub
or
push
inc
xchg
cli
sub
imul
lret
cld
ljmp
out
shl
imul
dec
popa
fsubs
push
clc
fs
xchg
jne
addr16
and
xchg
lock
push
jnp
es
lret
iret
cld
imul
dec
loop
add
notl
add
fidivl
dec
mov
out
leave
jl
mov
lret
or
mov
dec
scas
nop
call
xor
ficoms
add
mov
imul
outsl
gs
xchg
jo
insl
cltd
insl
stc
jne
rcl
and
hlt
and
outsl
pop
dec
incb
clc
adc
mov
xchg
notl
mov
jmp
adc
rcrb
sti
and
add
and
aad
js
pop
xchg
pop
dec
shll
mov
sbb
iret
push
mov
xchg
lret
fs
das
fcoml
sbb
mov
repnz
xchg
pusha
sbb
or
inc
or
mov
mov
fwait
cmpsb
pusha
xchg
cmpsl
push
dec
int3
stos
jmp
stc
insb
int
or
jbe
in
inc
mov
sbb
mov
movsb
xor
sbb
stos
jmp
and
add
aam
insb
leave
push
mov
push
loopne
jecxz
adc
fldl
sahf
sub
push
and
jno
jmp
add
scas
xor
fs
lcall
mov
icebp
push
test
jp
mov
aas
push
xor
mov
ret
pop
xchg
dec
sub
push
adc
dec
mov
fmuls
cmp
enter
sbb
in
xchg
cmpsl
xchg
lcall
test
flds
lcall
test
outsl
mov
adc
and
sbb
push
mov
push
xchg
cli
rolb
pop
sub
adc
pop
sbb
lcall
stos
sbb
or
loope
call
es
pop
dec
fdivs
das
enter
test
cmp
pop
into
mov
popa
repz
adc
jb
fidivrl
fcompl
cltd
in
clc
cld
mov
frstor
dec
mov
pop
mov
fisttpl
arpl
push
dec
das
mov
xchg
outsl
or
push
mov
sbb
adc
loop
das
mov
icebp
pop
and
ss
popa
daa
xorl
gs
add
mov
aam
imul
jge
out
mov
push
sbb
inc
jnp
push
arpl
in
popf
inc
aas
testb
pop
mov
lret
mov
pop
add
push
add
std
push
push
push
or
dec
out
pop
rolb
aas
lahf
push
rolb
cmp
int3
or
stc
push
jge
mov
sub
imul
pop
frstor
mov
ss
inc
rcr
and
xchg
dec
mov
jnp
cld
mov
xlat
loope
mov
push
arpl
push
jne
out
subl
cmpsb
add
clc
mov
jae
pop
push
cmp
jbe
xchg
cmp
out
adc
hlt
sahf
jle
xchg
lds
xor
jb
test
data16
and
in
mov
or
sbb
lret
xchg
sbb
mov
addr16
pusha
repnz
gs
jb
add
cmp
inc
jne
mov
mov
fwait
inc
sbbl
cwtl
add
negl
or
push
sub
cld
in
and
jne
sub
cmp
xchg
daa
mov
rolb
int
pop
pop
xor
cmp
xor
mov
mov
repnz
xchg
gs
les
aad
and
inc
fldt
gs
repnz
je
loope
loop
mov
or
xchg
icebp
sbb
xor
mov
les
cmp
push
stc
cmp
sbb
cmp
pusha
sub
push
and
jbe
inc
adc
push
test
mov
sub
int3
sbbl
xor
xlat
dec
inc
pextrw
rolb
and
mov
cs
push
stos
int3
test
leave
in
inc
and
outsl
divb
xchg
loopne
mov
bound
adc
lds
and
insb
xchg
mov
fcmovu
xchg
out
or
lods
xor
jbe
jae
fldcw
push
lds
adc
lock
adc
mov
jne
shl
add
push
sbb
mov
fiaddl
or
dec
jne
mov
loope
ret
adc
mov
or
push
dec
push
add
cmp
std
xchg
adc
fnstcw
xchg
sbb
pusha
testl
dec
ljmp
repnz
sti
push
test
dec
xchg
xor
inc
add
ret
add
add
push
gs
xchg
mov
fcoml
sbb
xor
shrl
inc
shl
repz
addr16
inc
data16
jmp
push
pop
lods
lcall
add
fcomp
jge
icebp
xor
fs
loop
test
sub
scas
imul
cmp
xor
sub
mov
adc
or
outsl
lods
sbb
in
out
adc
xchg
cmp
mov
jns
ret
mov
or
inc
and
jae
lret
data16
and
test
popa
inc
in
dec
sbb
imul
and
xchg
pop
fiadds
cmp
sbb
cmpsl
popf
pop
cmpsl
jae
out
mov
and
test
dec
out
adc
movsl
fs
or
mov
dec
inc
add
inc
shrb
je
aaa
fcmovbe
xchg
daa
scas
jecxz
pop
out
movsl
mov
or
outsl
push
enter
jnp
pop
push
movb
addr16
jae
inc
add
cwtl
dec
jg
aaa
mov
xchg
in
in
fisubl
cmpsb
scas
lock
mov
jecxz
pop
pop
test
sub
and
out
lret
dec
es
fsubrl
sbb
popa
fstl
stos
add
mov
push
in
or
frstor
jl
cmpsb
and
ja
les
in
data16
pop
inc
add
ss
jp
dec
pop
mov
outsl
ss
sub
gs
adc
dec
and
lret
in
rolb
out
and
in
jecxz
daa
aas
and
cwtl
test
ss
push
dec
rcrb
and
outsl
inc
pop
addr16
sbb
sub
pop
fidivrs
or
data16
sti
push
cmc
out
imul
rorl
aaa
mov
enter
inc
ficoms
add
and
popa
jbe
pop
mov
in
xchg
push
aaa
rcll
mov
imul
arpl
mov
pop
inc
iret
loop
pop
enter
jmp
arpl
dec
sub
cs
jb
cmp
jno
shr
push
or
es
mov
fs
pop
jae
jns
push
add
js
push
push
adc
lds
sub
repnz
xor
mov
jne
fcomps
lret
and
ss
sbb
add
lahf
in
mov
test
pushf
jb
wrmsr
mov
idivb
mov
and
push
out
jecxz
cltd
xchg
jecxz
inc
push
xchg
cmp
jnp
addr16
mov
lds
lods
xorl
daa
ficompl
mov
dec
cmp
mov
or
add
jne
pop
inc
xchg
cmp
xchg
lds
pop
fwait
jne
das
lds
lret
or
xchg
mov
pop
dec
xor
xchg
mov
outsl
adc
fildll
inc
add
test
jne
pop
jecxz
cld
fisttps
ljmp
push
sbb
sbb
inc
add
cwtl
fbstp
nop
push
imul
mov
sbb
and
push
sbb
incl
jle,pn
push
imul
pop
xchg
or
jno
insl
stos
jne
push
cmp
cs
cmp
or
mov
push
pusha
dec
jne
in
jmp
jbe
fstpl
mov
leave
xchg
insb
push
xlat
dec
jle
lahf
ftst
rcrb
mov
jnp
xchg
aas
jnp
shlb
sarl
jp
and
pop
xlat
mov
pop
es
push
mov
out
push
out
out
mov
jbe
adc
jmp
cmc
jp
out
mov
sbb
jne
out
insl
sub
dec
jg
int3
sub
pushf
adc
mov
pop
pop
insl
xchg
pusha
xor
sub
jno
das
add
out
mov
add
pop
mov
rcrb
daa
ret
or
sti
ss
fdivrs
shr
enter
jns
xor
dec
xchg
sub
loopne
addr16
jno
push
jmp
add
push
inc
ret
mov
jne
lcall
mov
sbb
sub
arpl
shl
sub
into
and
and
xor
jnp
add
jns
out
xlat
pop
arpl
ret
and
stc
jbe
mov
xchg
aam
add
add
outsb
aad
mov
data16
push
sbb
fs
sbb
xchg
icebp
repnz
mov
ss
jecxz
lcall
jno
int
dec
cld
daa
pop
dec
mov
es
mov
push
hlt
sub
lds
pop
xor
data16
cmp
mov
add
ftst
pop
push
ficoml
jnp
out
mov
and
mov
pop
test
push
push
mov
subb
dec
cli
cmp
add
xchg
rolb
addr16
inc
jl
sbb
xlat
outsb
fidivrs
addl
mov
lret
loope
cs
popf
shl
inc
dec
and
or
jne
into
cli
bound
lock
cmp
adc
fwait
jge
sub
out
insb
jno
adc
mov
ljmp
and
mul
push
fcoml
mov
mov
data16
andb
xchg
sub
lret
mov
mov
inc
je,pn
xor
js
sub
add
fstp
push
sbb
push
add
call
rorb
cmp
pop
adc
imul
cwtl
fs
push
faddp
cmp
cmp
lahf
iret
add
or
or
cmp
int
test
aam
mov
push
inc
out
add
xchg
adc
orb
xor
addr16
mov
adc
repnz
dec
push
mov
adc
sbb
ret
or
push
fs
jne
pop
incw
in
lcall
movsl
xchg
scas
mov
stos
add
and
xchg
lods
cmpsl
adc
pop
testb
pushf
popa
push
in
add
into
lea
mull
pop
cmp
jmp
xchg
gs
loopne
jne
cmp
pusha
cld
fs
pcmpgtw
pop
mov
lds
sbb
fnstcw
pop
rcrl
repnz
andb
push
repnz
dec
arpl
dec
sub
sti
jmp
out
test
iret
and
mov
push
cli
popf
or
mov
xchg
adc
std
lret
scas
cmp
aam
push
fsubs
insl
add
dec
cld
add
mov
jmp
shll
add
lea
cld
arpl
movsb
loop
sub
mov
addr16
and
sbb
add
xchg
jae
xchg
mov
and
imul
int3
fdivrs
stc
or
mov
dec
xchg
mov
push
xchg
imul
and
pop
data16
repz
rdpmc
into
xor
cwtl
ret
fistpll
pop
repz
nop
sbb
dec
fdivrs
rorl
mov
add
push
outsb
nop
push
fcompl
stos
imul
ss
addr16
xor
sbb
cltd
addl
or
pop
cs
ret
repz
lret
pop
into
jo
sbb
dec
push
add
sub
pusha
jnp
mov
and
sub
sbb
pop
pop
xchg
pop
gs
gs
daa
mov
adc
mov
sar
test
popf
and
mov
inc
stos
xor
xchg
cld
xchg
mov
enter
imull
mov
lret
lret
dec
inc
xchg
fsubrl
mov
fldenv
pusha
push
or
dec
pop
inc
ja
in
cmp
or
inc
je
repz
push
sub
mov
cmc
gs
inc
shll
ret
cmp
jmp
pop
jmp
mov
cmp
fists
loopne
pusha
jne
add
fistps
loop,pn
sbb
out
sbb
inc
sub
xchg
shl
leave
push
lds
negb
mov
iret
shl
nop
inc
arpl
daa
sub
pop
mov
cmp
mov
pop
ret
insl
jae
push
popl
push
mov
lods
inc
xor
jmp
pop
jmp
sub
mov
push
sbb
sbb
cmp
jne
inc
mov
stos
pop
gs
xchg
cmpl
sbb
imul
insb
test
xor
and
mov
aad
jno
ret
mov
lcall
jecxz
test
popa
cmp
pop
and
push
adc
dec
bound
movsl
push
shlb
inc
mov
sbb
mov
xchg
mov
adc
push
xchg
jbe
pop
mov
mov
call
push
inc
xor
das
hlt
das
inc
aad
lcall
clc
scas
rcrl
gs
je
adc
xchg
mov
cltd
iret
xchg
adc
das
fdivrl
clc
jne
dec
adc
lcall
scas
pop
fnsave
add
add
pop
stos
out
pop
adc
fyl2xp1
ret
sub
cmc
sub
push
add
jecxz
fnsave
lcall
arpl
orl
mov
fs
lds
invd
pop
hlt
ljmp
test
dec
xchg
add
loop
or
in
lahf
pop
jno
icebp
aad
addr16
jbe
outsl
movsl
xor
movsl
fbstp
sbb
or
and
sti
out
fwait
fwait
push
dec
sti
sub
mov
pop
ds
mov
insb
data16
and
pop
in
and
mov
cmp
or
and
movsl
jb
outsl
pop
cld
leave
rorb
fldl
sub
sbb
sbb
mov
in
aas
lret
mov
jbe
jne
in
fwait
arpl
data16
das
rorb
inc
mov
imul
insb
and
add
aam
das
fidivrl
lods
test
ljmp
jbe
pop
shlb
imul
mov
aam
inc
push
xchg
imul
jle
mov
cmp
outsb
xor
cmpl
dec
pop
sub
xlat
sbb
sbb
add
jb
repnz
and
inc
daa
rorb
push
pop
jnp
pop
jbe
fs
sbb
pop
test
fldenv
les
int3
dec
cld
sbb
loopne
jnp
gs
scas
fsubr
adc
int
cmpsl
pop
cld
loope
das
push
fstp
push
push
pop
jnp
dec
ret
jae
popl
shrb
dec
pop
cs
je
add
mov
fstpl
jp
pop
sahf
outsl
clc
hlt
mov
lods
pop
mov
out
or
sbb
mov
or
add
push
xchg
lds
push
jmp
mov
ret
sub
shl
pushf
sbb
or
jmp
jmp
loopne
pop
and
enter
push
mov
pop
loop
xchg
add
and
sub
iret
in
xchg
jbe
mov
xchg
cmp
test
mov
add
stos
pop
sub
xor
data16
and
outsb
loopne
leave
add
cltd
popa
add
cld
push
nop
mov
rcr
aas
out
inc
jbe
fs
adc
gs
inc
xor
push
push
out
mov
imul
push
and
push
push
dec
add
adc
add
inc
fadd
iret
es
push
cmpb
push
xor
call
xchg
dec
dec
mov
cmp
xor
and
mov
xchg
inc
jp
arpl
testb
rcr
data16
pusha
out
xchg
mov
std
jae
mov
idivb
les
stos
sub
adc
pop
repnz
push
cmp
js
xor
arpl
flds
scas
ret
bnd
clc
push
jne
mov
and
sbb
ret
fwait
les
adc
loope
mov
xor
cld
leave
data16
add
mov
pop
pop
pop
bound
cltd
pop
ljmp
outsl
sbb
dec
mov
repz
fiadds
loope
cmp
sub
sti
pushf
push
mov
jae
iret
insl
in
pop
sub
addl
pop
das
pop
push
gs
clc
test
mov
xor
jl
and
and
movb
jmp
movsl
and
out
pop
mov
enter
push
shr
std
and
ja
ja
push
mov
inc
cmpsl
mov
iret
or
gs
roll
adc
test
aad
push
pop
filds
and
pop
xchg
lods
dec
enter
mov
and
inc
stc
leave
outsl
in
add
clc
outsl
cli
adc
fs
pusha
push
fwait
popa
sub
push
mov
lahf
fstps
lret
pop
adc
jns
jecxz
push
shrb
arpl
pop
xchg
pop
aam
test
cmpsb
int3
pop
rclb
add
fildl
cmpsb
cmp
std
sarl
lods
fwait
adc
mov
cmp
xor
testl
mov
imul
mov
pop
gs
pop
pop
sub
sbb
add
and
push
das
jne
loopne
cmp
scas
sbb
loop
xchg
jae
mov
lods
scas
aam
mov
int3
sbb
cmp
lods
and
xorb
or
dec
push
or
es
mov
outsb
sub
mov
popf
fistps
mov
mov
xchg
leave
inc
mov
gs
pop
cmc
jecxz
in
enter
mov
push
mov
mov
scas
pop
sbb
dec
jbe
inc
movsl
nop
ljmp
sub
xor
xor
inc
pop
or
and
loope
pop
pusha
or
sub
pop
pop
pop
push
jbe
enter
pop
add
ss
push
jne
and
adc
sbb
ret
pop
mov
cltd
xchg
imul
inc
fnsave
mov
pushf
out
mov
xchg
ds
nopl
jne
iret
loop
sbb
gs
sub
mov
loopne
aaa
jne
xor
pop
shl
gs
mov
outsl
sbb
cld
and
cld
xchg
lahf
call
sti
iret
push
popf
in
lods
sbb
xchg
cwtl
fwait
sbb
icebp
out
or
loopne
fisttps
adc
xchg
outsl
in
xchg
mov
or
lcall
mov
in
sbb
or
adc
pop
push
cmp
xor
adc
fwait
call
jl
rcll
frstor
in
sti
out
mov
jge
es
mov
fwait
adc
mov
pop
movsb
outsl
sub
pop
pop
gs
cmpsb
xchg
leave
lret
add
or
push
cmpsl
jne
mov
xchg
xor
cmp
lods
fst
add
stos
aam
mov
add
jge
push
jns
iret
mov
ror
movsl
out
fstpl
lret
push
mov
stc
xor
scas
add
push
jge
jge
sub
sbb
cmp
aas
jmp
fincstp
lods
fst
inc
lds
in
inc
stos
inc
add
mov
addr16
adc
adc
notl
mulb
scas
or
in
push
jp
push
lods
sbb
mov
js
sbb
push
sub
gs
mov
add
arpl
addl
mov
xchg
or
pop
xor
int3
testb
and
push
push
pop
mov
inc
jbe
int3
lea
sub
fwait
xor
push
xor
inc
cmc
outsl
aam
sub
add
gs
adc
push
adc
add
xchg
das
mov
mov
pop
call
in
sbb
jne
rclb
xchg
fildll
lret
xor
push
pop
lods
out
inc
mov
repz
lcall
fistpll
movsl
add
pop
mov
jb
arpl
jne
pop
mov
pop
xchg
movsb
loopne
add
push
gs
sbb
in
or
leave
xor
stos
cwtl
push
cmp
daa
out
cld
mov
cmpsl
loope
push
xchg
ds
mov
test
push
jbe
and
int
in
pop
in
pop
add
gs
aam
mov
push
push
cwtl
out
lds
mov
fs
test
jb
jecxz
xchg
push
mov
js
push
sti
hlt
aam
mov
fnstenvs
filds
push
fsub
adc
jg
add
and
aaa
pusha
add
scas
push
mov
mov
mov
aas
cwtl
mov
clc
sbb
dec
pop
jecxz
les
jbe
ficoml
scas
sbb
mov
push
nop
xchg
add
or
dec
cmp
gs
test
pop
fiaddl
or
push
xchg
mov
sti
cmp
mov
in
push
sarl
jnp
push
fisttpl
fcompl
popa
or
pop
out
rorb
sahf
xchg
scas
test
fnsave
xchg
fistpll
jge
mulb
mov
ret
jecxz
and
adc
mov
lods
inc
in
pop
pop
das
fsubrs
pop
out
test
ja
add
add
xchg
fdivs
cmc
inc
xor
je
stc
scas
xor
out
leave
popa
insl
or
arpl
jbe
xor
scas
imulb
add
pusha
add
jbe
cli
xorl
push
sbb
int
vcvttpd2dqx
jecxz
mov
leave
push
loopne
jle
or
ss
lahf
ljmp
cmpsb
aas
test
in
jne
and
fdivl
addl
push
scas
xchg
addr16
negb
mov
lret
aad
mov
or
xchg
loopne
scas
cmpb
outsl
xor
xchg
mov
jbe
xor
jl
jb
jmp
mov
or
popf
clc
adc
lahf
sbb
push
mov
cmpsb
movsl
movl
scas
clc
pop
jmp
inc
mov
clc
gs
cmpsl
cltd
daa
mov
mull
test
jmp
xor
xor
mov
lret
in
sbb
add
outsl
lods
gs
add
or
pop
loope
shrl
mov
add
dec
adcl
test
out
clc
ljmp
pop
and
cwtl
add
mov
sub
jp
aaa
outsl
pop
imul
dec
in
pop
mov
test
es
fstpl
jecxz
mov
add
mov
cmp
inc
dec
mov
int3
gs
add
pop
pop
cmp
daa
fwait
sub
push
das
aad
push
rcrb
fcos
dec
stc
loop
mov
xor
push
ret
lret
sti
daa
dec
mov
add
lcall
push
mov
xchg
or
or
mov
fstps
pushf
and
mov
int
inc
addr16
call
inc
and
sti
jl
jp
fst
push
rcrb
fbld
mov
daa
pop
dec
lds
add
imul
push
xor
push
scas
inc
ret
pop
ror
outsl
push
add
cmpsb
jne
out
mov
pop
xor
ds
pop
xor
das
xchg
lock
rdmsr
add
stc
std
mull
add
enter
mov
lret
fs
cltd
push
sub
mov
jl
cmpsl
pop
movsl
or
push
mov
loop
mov
sbb
mov
pop
ljmp
mov
xor
test
push
jmp
leave
mov
jno
addr16
ds
popl
sbb
jp
pop
mov
cmp
test
cs
clc
or
in
jne
jle
ds
dec
adc
adc
arpl
ja
or
pop
mov
bound
sarb
cmpsb
pusha
inc
sbb
pcmpgtd
hlt
inc
arpl
xchg
shlb
ret
sahf
and
add
add
mov
in
out
call
outsl
pop
fmull
nop
repz
mov
addr16
sbb
arpl
jne
and
lret
cmp
movsl
mov
xchg
mov
jl
imul
frstor
test
lods
or
dec
scas
sbb
gs
mov
test
fisttps
inc
push
jmp
loop
dec
lret
mov
jns
xchg
cwtl
loopne
test
stos
fisubrl
cmp
mov
inc
mov
adc
leave
mov
addr16
fstl
js
lret
fwait
adc
bswap
push
mov
gs
js
inc
mov
dec
cld
sbb
cwtl
sbb
pop
cwtl
dec
xchg
adc
jne
clc
xchg
shll
fsts
loopne
cld
push
cmp
clc
movl
add
loope
test
mov
mov
pusha
inc
negl
sbb
loopne
pop
pop
jecxz
in
add
gs
rol
sbb
sub
and
fdivrl
and
in
rclb
mov
arpl
test
aaa
test
inc
daa
lock
fdivs
push
mov
outsb
push
aaa
jmp
mov
test
mov
mov
dec
push
rorl
fistps
pop
push
jne,pn
adc
add
cld
jecxz
xor
jo
mov
dec
lret
dec
in
subb
mov
ss
pushf
add
jnp
xchg
jae
outsb
xlat
push
add
or
pusha
xor
mov
clc
inc
leave
jns
mulb
dec
and
addr16
mov
fistps
mov
xchg
ret
aaa
jecxz
mov
popf
sarl
repz
gs
mov
pop
test
shlb
minps
call
and
leave
stos
mov
adc
mov
mov
xchg
mov
xchg
je
sbb
push
and
push
jbe
dec
out
pop
mov
lods
outsb
pop
aas
arpl
ss
fistps
movb
mov
or
pop
test
add
pop
inc
orb
push
mull
cmp
testl
jmp
jecxz
mov
adc
inc
fs
ljmp
dec
iret
add
xchg
repz
fsubr
xchg
adc
xor
rorb
xchg
jmp
inc
hlt
add
lea
adc
test
shll
jae
in
push
jo
and
xchg
into
test
es
clc
mov
pop
pop
imul
xchg
inc
or
jns
pop
mov
push
mov
adc
cld
pop
pop
push
pop
xchg
rolb
rcrb
dec
out
push
sbb
xor
or
sub
stc
leave
loop
jno
rcll
je
fidivl
shlb
scas
pop
loope
xchg
jecxz
adc
or
xor
popa
stc
sbb
mov
pop
xchg
scas
push
ljmp
lds
mov
pop
xor
je
out
mov
out
pop
dec
inc
fstpl
add
sbb
ja
testl
and
jae
jo
sub
mov
inc
push
cmpsb
aad
loopne
rcrb
push
add
dec
fstpl
jne
lock
movsb
jg
testb
cmp
cmp
gs
test
mov
into
cli
sarl
pop
stc
data16
in
add
cmpsb
mov
sti
orb
sar
push
jle
icebp
cmp
ficoml
sbb
pop
pop
jecxz
inc
dec
push
jnp
xor
pop
dec
popa
jne
mov
jge
inc
mov
data16
rclb
cli
cwtl
cmp
adc
addb
mov
ja
jne
std
xchg
cmpb
or
adcb
pop
pushf
dec
mov
int3
fnsetpm(287
and
cmp
sub
add
out
push
sbb
add
mov
pop
jle
loope
fiadds
cmp
sub
xor
cs
je
push
sti
jnp
xor
sbb
jmp
sub
push
sbb
test
jne
jl
hlt
xor
popf
jp
push
xchg
adcl
push
cld
cmpsl
add
mov
jo
pop
mov
push
fstl
lods
mov
icebp
inc
cmp
test
fcmovnbe
mov
jne
ror
insb
ss
ss
xchg
popf
jnp
sarb
adc
inc
sbb
ss
gs
mov
and
cmpsb
test
aaa
addr16
clc
push
inc
flds
push
add
jecxz
mov
sbb
inc
lret
out
and
adc
addr16
in
les
jno
jb
xorl
fsubrs
dec
mov
lds
fsts
mov
sti
mov
fcomp
mov
push
leave
jns
fcoms
scas
push
push
les
addl
subb
jecxz
push
lds
push
fdivs
imul
loopne
sbb
fdivs
xor
pop
ficoml
pop
push
ds
fldenv
adc
or
and
pop
mov
mov
in
pop
clc
cld
dec
pop
xchg
push
ret
test
imul
xchg
imul
fstps
hlt
inc
fcomps
and
aaa
enter
shlb
loopne
je
inc
bound
gs
fstps
mov
jmp
push
js
mov
pop
les
mov
mov
lcall
mov
mov
mov
dec
loopne
sub
sbb
arpl
sbb
fchs
lahf
pop
pop
mov
jmp
pop
in
fnstcw
je
and
push
or
mov
lahf
repz
pop
lods
lods
rcll
push
and
jg
adc
arpl
shl
jmp
push
jns
aas
sbb
mov
fldenv
pop
in
pop
addr16
jnp
fistpl
pop
scas
jo
popa
pop
mov
loop
mov
lahf
ftst
pop
fnstsw
mov
in
jg
movsb
jne
mov
cmp
lcall
popf
sti
mov
add
arpl
in
pop
sub
sub
add
jmp
pop
fisubrs
fistps
imul
fsubs
pusha
cmp
sub
fwait
cwtl
add
fcomps
pop
lods
and
jmp
sbb
fsubrs
cltd
sti
fdivrs
pop
add
sub
fdivrs
sbb
push
pop
pop
imul
fcos
loope
xchg
add
cmp
imul
sbb
sbb
sbb
push
xor
into
repnz
out
xor
pop
jmp
daa
test
test
push
push
dec
mov
sbb
loope
gs
imul
xor
sbb
dec
fwait
mov
xchg
test
andl
int
test
inc
inc
movsl
dec
and
xchg
daa
mov
xorb
rorb
cmp
repnz
outsl
das
call
xchg
jp
pop
xchg
dec
xor
and
das
mov
sbb
add
ljmp
sub
dec
xchg
sbb
filds
or
lds
push
xchg
pop
aaa
pop
addr16
daa
iret
and
inc
std
jo
sub
adc
push
sahf
je
cmpsb
pushl
fists
mov
inc
flds
daa
cmp
jbe
movsb
cmc
popf
mov
mov
sbb
adc
inc
pop
xchg
je
and
mov
movsl
test
cwtl
pop
sub
test
lock
jle
pop
jae
imul
cmpsl
stos
xor
gs
cli
fistps
mov
movsl
in
jae
aaa
cmp
cmp
inc
mov
dec
sti
test
gs
cmpsb
mov
inc
add
sub
add
ret
mov
test
mov
lret
add
leave
fnstsw
aaa
neg
sub
lahf
and
jb
ss
in
ss
push
xorb
jbe
inc
hlt
aad
call
ja
xchg
mov
jb
mov
repz
cmp
fisubrl
pop
negb
push
mov
frstor
and
sub
adc
push
xchg
jo
fldt
addr16
mov
mov
cmpsl
gs
push
in
out
addr16
leave
mov
les
jae
in
xchg
sub
repz
fidivrl
js
mull
popa
roll
jbe
mov
jb
cmp
shlb
dec
mov
xchg
mov
stos
cs
jecxz,pn
pop
mov
jo
addr16
faddl
cwtl
mov
nop
sbb
jns
in
dec
fadd
in
cmpsl
das
mov
sub
xchg
stos
pop
push
sub
add
dec
pop
cmpsb
icebp
es
pop
dec
pop
push
xchg
sub
xor
lcall
fiaddl
sti
imull
cmp
adc
mov
mov
xchg
jne
jnp
sub
ror
and
mov
mov
cmpl
pop
andb
jecxz
lret
push
sub
or
sbb
es
fisttpl
mov
dec
push
jbe
shlb
pop
xchg
xchg
aaa
push
jne
fildl
lcall
fdivrl
xchg
adcl
adc
push
mov
lcall
out
fcmovnu
mov
pop
push
ljmp
xchg
pop
adc
sub
pop
cmpsl
ret
adc
fistps
inc
sbb
jbe
sbb
out
fistpl
aad
fcmovnu
fstps
add
pop
mov
xor
jns
pop
hlt
test
in
imul
in
dec
in
xchg
out
fninit
lcall
inc
out
mov
mov
cld
jecxz
cmp
in
jb
xlat
ret
sbb
fisttps
cmc
sbb
stos
push
or
cmp
in
mov
jp
pop
ss
es
cmp
sbb
cltd
xchg
in
xlat
and
mov
and
lcall
out
ficomps
push
push
fcompl
jecxz
fiadds
lahf
filds
loope
xchg
pop
cmpsl
jo
push
cmpsb
and
and
icebp
pop
icebp
gs
push
pop
imul
icebp
push
sub
sbb
pop
cmp
icebp
fistpll
pop
and
loope
loop
mov
in
push
sub
or
jge
pop
mov
stos
push
sub
pop
pop
cmp
and
fnstcw
ja
loop
and
fistps
pop
and
sbb
pop
add
lahf
pop
jmp
jo
jecxz
cmp
imul
out
lcall
mov
sbb
andl
shl
and
fistl
and
movsl
je
cmpsl
jecxz
pop
stos
pop
aaa
sbb
movsl
outsl
mov
adc
loope
fsubrs
flds
fmull
es
mov
mov
pop
sbb
jae
jmp
out
pop
sub
sbb
pop
imul
sbb
mov
cmpsl
popa
pop
and
pop
int3
push
cmp
inc
push
pop
cmp
inc
push
out
and
dec
mov
add
pop
cmpsb
fcoms
in
mov
xorb
or
ret
movsl
loop
aam
pop
enter
in
push
mov
testl
jg
mov
add
pop
push
jne
mov
adc
cmp
int3
ret
mov
jecxz
mov
push
addr16
int3
pop
push
xchg
jns
test
icebp
fs
cmp
clc
jecxz
jne
gs
mov
daa
mov
dec
vcvtpd2psx
push
sub
xchg
cmp
sbb
fistps
stos
jae
repz
mov
pusha
fs
inc
and
out
clc
movsl
jo
out
cmpsb
or
sub
xchg
and
pop
mov
adc
add
dec
in
pop
push
add
roll
pusha
mov
push
sub
xchg
xchg
xchg
or
mov
mov
repz
xchg
push
mov
add
adc
in
mov
add
sbb
and
xor
nop
ss
xor
push
jno
les
sti
stc
dec
xchg
out
test
xor
int3
frstor
push
out
push
dec
fsubrl
mov
mov
xchg
push
xor
pop
in
add
push
xchg
lret
adc
gs
mov
test
sub
rcrb
push
xlat
xchg
pop
in
xchg
or
inc
dec
inc
out
xor
mov
dec
les
ljmp
push
lahf
sbb
fiaddl
loopne
jp
jae
mov
mov
mov
xor
call
dec
and
fdivs
xor
push
lds
push
xlat
jne
out
xchg
shlb
loop
addr16
adc
mov
jecxz
xchg
jecxz
loop
cld
xchg
gs
aaa
loop
sar
cld
dec
add
aas
lret
pusha
jge
inc
mov
cmpsl
mov
repz
jne
push
leave
mov
negl
inc
inc
add
jae
dec
push
out
or
lret
or
fsubs
adc
mov
enter
jae
cwtl
insb
adcb
add
mov
pop
daa
jmp
shll
push
or
clc
cli
sti
imul
loop
jg
aad
fistps
xchg
incl
xchg
dec
imull
pusha
fdivs
gs
sar
mov
mov
cmp
scas
call
arpl
cwtl
ds
xchg
jg
test
xchg
adc
sbb
push
out
outsb
and
clc
or
fs
push
cwtl
neg
daa
xchg
cmp
call
and
popf
stos
xor
push
mov
test
xor
addr16
fs
sbb
aad
out
mov
xchg
xor
std
ja
jbe
inc
popf
out
out
in
lea
stc
xchg
xchg
inc
adc
cli
push
gs
xchg
fwait
jecxz
pop
test
inc
mov
dec
jns
mov
daa
xor
jecxz
insb
daa
test
fistpll
arpl
rolb
jge
fists
shlb
flds
ljmp
lock
pop
xlat
mov
pop
xor
rcl
adc
inc
shlb
movsb
es
jl
inc
data16
adc
xchg
xchg
sub
frstor
inc
lret
daa
data16
stc
outsl
in
and
pop
mov
aaa
mov
inc
bound
fnstcw
insb
mov
je
std
or
cwtl
adc
push
movsb
pop
jo
push
xchg
pop
xor
dec
sar
push
inc
scas
addr16
dec
leave
clc
inc
xchg
mov
jl
arpl
jmp
gs
add
pop
sbb
xchg
sbb
dec
mov
mov
inc
mov
mul
arpl
test
adcl
addb
enter
inc
adc
add
push
pop
icebp
lea
jbe
mov
popf
dec
iret
xchg
fdivrp
in
push
sbb
lea
adc
push
cwtl
loop
jo
lods
daa
out
movsb
push
mov
jle
xchg
lods
nop
cmp
cmp
cmpsb
adc
in
mov
add
jcxz
aaa
mov
cmp
mov
xchg
sub
xchg
and
push
inc
sub
push
outsb
mov
mov
fdivrs
cmp
mov
and
mov
adc
insb
cld
mov
fdivs
daa
gs
sbb
mov
add
sbb
jno
out
sbb
xchg
inc
cmp
push
inc
jecxz
in
add
popa
sbbl
gs
mov
inc
fstps
jne
or
in
sbb
addr16
jbe
mov
les
push
add
out
push
gs
lahf
daa
jne
cld
lock
jmp
or
fwait
pusha
fldenv
add
frstor
xchg
adc
movsb
sbb
cmp
add
ret
push
leave
nop
pop
test
jno
test
xor
arpl
jbe
ljmp
xor
scas
fisttpl
add
out
mov
inc
dec
clc
push
mov
adcb
push
mov
pop
sbb
je
leave
jb
adc
loopne
xor
aam
jbe
fdivr
test
pop
into
cmc
mov
cld
and
out
adc
out
stos
test
push
mov
xor
adc
hlt
insl
pop
and
outsl
popf
push
push
jnp
cltd
mov
arpl
push
stos
jae
rorb
ret
aas
pop
xlat
adc
sbb
clc
fmull
pop
mov
shl
sub
jae
xor
pop
pop
es
and
das
pop
mov
pop
fwait
sub
roll
push
cwtl
xor
ficompl
addr16
cmpsl
jno
pop
subb
outsb
pop
inc
ss
xchg
lods
adc
loop
pop
sbb
sub
mov
leave
inc
mov
jno
xor
gs
nop
rolb
mov
push
out
or
mov
jl
jno
add
adc
ffreep
nop
inc
stos
addr16
add
imul
scas
adc
xlat
pop
fcmovbe
mov
jne
rep
inc
jns
xchg
stos
andb
sub
add
sub
mov
push
cltd
cltd
repz
push
and
xlat
aam
fbstp
outsl
xor
out
subb
cwtl
ss
in
pusha
xor
sub
cld
mov
mov
dec
into
pusha
push
ficompl
mov
pop
add
scas
loopne
dec
fsubrl
fdivs
out
hlt
std
pusha
jl
pop
pop
insl
push
push
mov
jmp
decb
test
mov
push
or
jp
dec
pusha
mov
pop
mov
std
or
pop
rclb
ljmp
pusha
sub
mov
ds
pusha
adc
inc
adc
pop
fists
cwtl
outsb
outsb
sub
push
mov
gs
fdivrs
jecxz
inc
loopne
pop
sar
dec
js
fwait
sbb
jbe
out
addb
xchg
inc
int3
icebp
jns
addr16
jbe
mov
clc
add
jae
jne
push
mov
jle
clc
push
and
push
pop
out
fcomip
adc
add
xor
lret
les
data16
ljmp
je
xchg
popf
addr16
mov
pop
pop
scas
mov
sbbb
addl
fsubr
fwait
jne
push
mov
pusha
pop
xchg
adc
cmp
and
shlb
icebp
lahf
inc
adc
jns
xchg
add
xchg
sbb
imul
jle
xorb
xor
jb
test
fnstenv
xchg
clc
cmpsb
je
push
mov
mov
in
or
sbb
mov
movb
mov
xchg
out
mov
fiaddl
lret
cld
hlt
inc
divl
mov
mov
aam
cs
pop
idivb
xchg
imul
leave
lcall
faddp
fistpll
movsl
mov
push
outsl
add
push
mov
int3
aaa
and
adc
hlt
pop
cs
jg
pop
in
inc
pop
test
in
js
xchg
push
lret
push
lock
mov
out
jne
and
pop
test
pop
dec
lods
cs
mov
inc
gs
fadd
ljmp
cs
aad
pop
gs
rcrl
ret
insl
call
jmp
ss
cmc
stc
mov
dec
pop
addr16
stos
or
clc
sbb
mov
insl
std
loopne
jne
mov
push
adc
pop
daa
inc
repz
jne
les
push
lea
dec
fisubl
gs
xor
add
push
adc
pop
gs
in
add
fwait
dec
cmp
fs
mov
fiaddl
dec
push
sbb
push
addb
jo
imul
jge
stc
mov
add
jp
push
inc
cmpsb
sub
add
jp
cltd
nop
pop
mov
loope
gs
push
outsl
push
outsl
or
mov
pop
rcr
cmpsl
ret
pop
mov
in
hlt
inc
ficomps
repz
xchg
mov
jp
cmp
pop
scas
aaa
fistpll
mov
mov
es
mov
or
mov
pop
jp
and
pop
xchg
ret
xor
pop
fisttps
scas
repnz
xchg
add
ret
cmp
cmc
push
mov
gs
out
xorl
jne
pop
xchg
sti
jae
mov
push
mov
out
decl
int3
ret
lds
int
adc
pop
push
flds
inc
sahf
in
pusha
inc
jecxz
xchg
sbb
push
rorl
or
fistpl
ja
and
pusha
call
xchg
mov
cmp
les
imul
mov
xor
inc
fistpl
pop
cmpsb
test
or
xchg
and
sbb
lahf
and
fadds
scas
pop
sbb
retw
sub
push
xchg
pop
mov
shlb
jne
das
push
sbb
xor
mov
inc
xchg
fsubs
lcall
inc
fs
add
out
mov
xchg
and
fcompl
cwtl
ja
xorb
push
push
mov
into
popf
mov
push
stc
and
clc
movl
test
jmp
pop
push
cmp
xchg
div
inc
and
les
adc
testb
jle
mov
pop
dec
in
or
pop
mov
push
ret
addr16
adc
fstps
dec
and
fsts
insb
movhps
sti
aaa
push
fcmovu
jle
ljmp
adc
pop
stos
fsubr
cmp
push
fcmovu
push
pop
fiaddl
bound
outsl
fucompp
stos
add
xchg
jg
sbb
pop
mov
pop
scas
sub
sbb
jl
and
push
pop
sbb
sbb
mov
out
sti
loopne
cmpsl
out
push
orb
jge
jmp
jno
or
std
or
arpl
sub
sbb
sahf
aas
add
div
imul
mov
and
push
jecxz
push
mov
jmp
mov
push
cmpsb
push
cmp
popa
pop
fcompp
jnp
jmp
sbb
mov
push
xchg
pop
mov
mov
sbb
fldenv
lahf
mov
sbb
jmp
sbb
movsb
clc
pop
ja
mov
outsl
mov
pop
cmp
sbb
and
mov
pop
sub
cld
sbb
int
sbb
cli
and
fbstp
and
lcall
pop
or
loopne
call
pop
cmpsb
sbb
pop
sbb
cwtl
cli
and
mov
jmp
adc
sbb
cmpsb
outsl
pop
pop
popa
sbb
sub
push
loopne
das
out
lret
fsub
fldenv
in
loopne
in
cmpsb
addr16
pop
mov
jmp
mov
in
lahf
insb
ficoms
lahf
push
sub
sub
lock
mov
cmp
jmp
addr16
fstps
gs
and
in
sbb
dec
movsb
enter
je
ja
rcr
fmull
and
imul
imul
in
sbb
fstpt
fstps
fdivrp
sbb
loope
add
in
sahf
xchg
jbe
cmp
dec
mov
fidivl
aad
movsl
lret
dec
pop
shlb
mov
pop
popf
test
xor
shl
pop
leave
jbe
jae
hlt
pop
dec
mov
dec
ss
pusha
pop
cmpsl
rclb
je
scas
sub
jnp
fs
fsubs
js
mov
rcrl
inc
mov
ljmp
mov
and
dec
gs
jge
sbb
inc
int
cmp
or
fcomps
jge
and
test
jecxz
pop
gs
mov
push
mov
test
into
mov
pop
add
scas
mov
imul
ret
or
xchg
out
mov
cmc
mov
jae
mov
in
outsl
push
mov
out
pop
subb
fcmovnbe
gs
ja
cmpsb
mov
jne
add
in
adcb
and
scas
loopne
jne
lret
jmp
xor
mov
rcrl
lods
mov
cld
test
jge
arpl
push
sbb
call
adcb
ficomps
scas
loopne
repz
mov
fldenv
aam
insl
loopne
int
outsb
jae
push
sub
jmp
sarb
neg
data16
mov
xor
and
jno
in
xor
xor
fldenv
push
jae
pop
fs
addr16
fnsave
inc
insb
xlat
fildl
jb
lea
push
sahf
mov
ja
ret
shrl
mov
xchg
pushf
push
sbb
les
add
push
push
push
jmp
out
xor
lret
cwtl
push
leave
push
add
cmp
jnp
decl
or
ret
pop
lahf
and
push
in
jecxz
gs
aaa
gs
loop
fbstp
ret
pop
orl
es
ds
or
lds
fists
movsl
push
mov
or
dec
dec
mov
ret
push
add
sub
fs
test
hlt
sub
jns
mov
roll
ret
int3
mov
jno
mov
pop
ret
in
push
push
subb
adc
ret
sbbb
sub
aad
sub
xor
mov
inc
cwtl
sbb
cmp
dec
hlt
mov
mov
fidivrs
jne
pop
mov
push
or
test
je
addr16
out
pusha
addr16
and
cmp
jno
push
rorl
les
lods
mov
jae
outsl
pop
push
jne
lcall
or
adc
je
gs
mov
data16
push
add
jmp
testl
jbe
repnz
movl
add
daa
decb
jmp
out
xchg
jle
enter
leave
jne
ja
fwait
cmp
ss
rcrb
xchg
sbb
leave
stc
dec
xchg
ficompl
or
mov
jp
notb
dec
inc
movsb
adc
in
das
mov
cltd
lret
add
xlat
pop
push
push
mov
lret
test
add
popa
mov
fiaddl
dec
les
push
psubd
xchg
jne
dec
daa
pop
mov
push
pop
iret
push
jmp
jno
cmp
cmpsb
loopne
mov
mov
sub
adc
negb
adc
dec
leave
int
cmp
popa
lea
xchg
xor
sbb
dec
cmp
jle
pop
addr16
fsubrl
pop
in
sub
lcall
cmp
add
outsl
jle
not
bound
insl
push
clc
dec
pop
pop
push
push
hlt
jb
mov
stc
icebp
adc
or
ds
cmpsb
outsb
mov
scas
scas
imul
fstpt
cmc
jl
mov
pop
ficoms
inc
pop
aad
psllq
push
sbb
sbb
adc
loopne
ss
add
imul
mov
push
add
ficoml
pop
inc
enter
or
mov
or
mov
inc
push
push
bnd
aad
adc
push
pop
aas
fbstp
popa
repnz
mov
inc
mov
pop
jne
mov
dec
fwait
loopne
jmp
push
push
sbb
push
ja
leave
cmp
scas
push
xor
pushf
jne
clc
out
xchg
fstpl
ljmp
out
cmp
aam
jo
jmp
sbb
cltd
imul
and
ffreep
and
cld
jb
std
sbb
clc
imul
push
in
in
xlat
repz
sbb
sbb
xchg
inc
sbb
cmp
cltd
into
add
mov
jne
js
add
jmp
mov
mov
inc
jne
insl
ja
es
mov
dec
mov
add
and
rcrb
pop
add
inc
sbb
out
mov
daa
xor
jge
hlt
jle
add
orl
icebp
cmp
in
fildl
sbb
cs
fwait
enter
stos
jne
pop
cmp
jb
xchg
dec
rcll
add
gs
mov
pop
mov
lahf
test
cwtl
outsl
xor
add
gs
mov
fcmovu
cltd
add
mov
mov
inc
out
push
mov
pop
test
les
cli
in
out
jge
movsb
push
mov
mov
inc
adc
sbb
fidivrl
stos
das
movsb
arpl
jo
data16
and
clc
xor
rclb
inc
jo
cmpsb
inc
cmp
mov
mov
cli
sbb
std
fdivs
test
negl
xchg
pop
addr16
jg
mov
cmp
or
jmp
stc
outsl
pop
lods
fwait
js
push
push
lret
out
cmpsl
sbb
jp
jae
push
add
xor
and
jne
jg
mov
pop
aad
mov
je
xor
xchg
jne
jns
insb
push
ljmp
jmp
jb
clc
fisubrs
jne
dec
hlt
clc
jno
leave
or
xchg
xchg
sbb
idiv
inc
inc
test
xor
mov
fxch
pop
stos
jb
test
pushf
sti
ret
cmp
pop
cwtl
ret
daa
push
filds
out
rcrl
and
pop
xchg
pop
push
scas
sbb
repnz
mov
insb
fiaddl
sbb
pushf
and
mov
jns
sar
mov
mov
pop
and
sbb
out
rcr
jne
shll
pextrw
cmp
popl
pop
jge
rcr
inc
loopne
mov
pop
pop
ret
or
fiaddl
pop
mov
gs
les
cmp
or
movl
jae
sbb
in
addr16
dec
sbb
mov
push
pop
cld
xchg
pop
inc
fwait
cwtl
inc
jne
ljmp
mov
movsl
xchg
and
roll
lret
nop
pop
mov
andl
out
dec
add
pop
shlb
pop
mov
inc
lea
cltd
push
fildll
fs
xor
les
xchg
pop
jg
inc
fisubrl
inc
out
dec
cmp
jbe
fs
insl
leave
pop
xchg
int
mov
out
inc
or
add
add
cmp
sbb
aaa
mov
mov
push
pop
ljmp
push
in
sbb
pop
flds
adc
jge
out
dec
rdpmc
loopne
or
aaa
js
test
sbb
dec
ss
pusha
int3
std
fistpl
mov
inc
in
mov
repnz
ljmp
pop
je
and
leave
out
pop
movsl
das
mov
xor
in
sbb
mov
test
js
repz
sbb
jle
sti
inc
dec
dec
sub
push
in
dec
jbe
dec
mov
sub
fcompl
dec
out
ficoms
add
int3
ja
fstpl
fwait
inc
and
sub
dec
inc
fdivl
popf
pop
icebp
testl
sti
gs
sbb
in
pop
mov
mov
mov
mov
jmp
mov
adc
loop
fadds
adcl
add
lods
roll
xchg
cs
xor
adc
fstps
shrb
fdiv
pushf
jge
das
mov
leave
outsl
jecxz
add
and
lret
pushf
mov
mov
mov
mov
das
add
iret
shll
imul
in
cli
popa
aad
movsb
sbb
rorl
push
adc
xor
jbe
aas
sbb
xchg
cmp
sub
push
jle
fnstenv
idiv
mov
ret
pop
gs
and
push
adc
in
mov
xchg
arpl
incb
sub
sbb
push
sub
icebp
lahf
pop
mov
cltd
mov
pop
lock
aaa
push
addr16
dec
add
sub
lds
sbbb
pop
ds
fwait
add
sti
cmp
jg
push
dec
and
sti
push
ja
xlat
repz
and
sbb
cmpsb
ficoms
xchg
pop
adc
adc
enter
fsubrp
mov
adc
mov
and
in
gs
mov
pop
cltd
in
aaa
psrad
jecxz
fmuls
sbb
dec
jb
cmp
push
mov
jo
push
mov
js
jl
mov
dec
push
out
pop
push
mov
or
nop
sub
call
adc
inc
jnp
fwait
in
pushf
jne
out
divb
or
cmp
cmp
ss
sbb
imul
mov
pop
fwait
or
lods
mov
or
fwait
ljmp
inc
es
mov
sub
loopne
lea
imull
pop
pop
popa
dec
sub
mov
scas
xor
in
mov
pop
movsl
test
mov
aas
add
sbb
arpl
add
loop
push
in
push
sbb
or
jne
dec
in
js
xchg
push
popf
cmpsb
rcrb
cmc
lea
dec
xchg
stos
adc
push
out
out
lds
mov
sarb
xor
and
test
lods
aaa
sub
push
sbb
xor
decl
xor
and
mov
movb
pop
pusha
cmp
mov
test
sub
aas
in
push
rol
iret
dec
mov
jbe
fsubrs
pop
cmp
dec
dec
jae
fcoml
pop
pop
scas
and
jp
cmpsl
add
imul
pop
fstp
mov
and
jae
incl
into
fwait
js
notb
dec
fistpll
push
add
scas
mov
movsl
inc
mov
sbb
cmp
int3
lock
sahf
addr16
arpl
outsl
push
pop
jecxz
pop
gs
mov
add
dec
mov
ret
mov
or
add
pop
sbb
mov
mov
fdivrs
mov
shrb
sub
inc
push
sbb
int
jne
mov
xchg
cld
push
xchg
jo
sbb
in
sti
push
aam
inc
mov
mov
xchg
les
icebp
jg
and
inc
mov
lock
addr16
sahf
sub
and
popf
mov
push
and
pop
adc
sub
or
sbb
dec
mov
sub
popa
xchg
fmull
pop
shld
pop
out
cli
js
pushaw
adc
mov
pushf
xchg
inc
or
jmp
xor
sbb
mov
and
cmp
arpl
movsb
inc
cmp
cltd
leave
mov
repnz
leave
sub
lock
pop
repnz
inc
cmpb
sub
clc
and
repnz
outsl
into
repz
shrl
scas
mov
leave
dec
sub
dec
dec
or
sbb
ret
fsts
data16
es
outsl
push
lds
lret
popa
movsl
es
outsb
leave
cmp
cmpsb
mov
pop
insb
sbb
or
repz
enter
lea
stos
mov
int3
inc
xlat
je
hlt
gs
ffree
pop
lods
enter
xchg
mov
jmp
jbe
xchg
and
mov
sbb
fs
mov
orb
xchg
lcall
xchg
jb
xchg
insb
lds
fwait
mov
in
jg
pop
push
sbb
sub
and
pop
shll
cmp
ret
dec
cmp
in
xlat
sub
push
ds
outsb
pop
cmp
push
add
lret
lea
jl
add
mov
lret
push
mov
inc
mov
fcos
cmp
stc
test
inc
and
leave
xor
or
sbb
ss
pop
sbbl
xor
test
gs
sub
jl
mov
insl
or
test
iret
dec
insl
mov
pop
cwtl
fmull
mov
or
out
fnstcw
test
cmp
add
mov
jne
push
xlat
pop
inc
add
incb
jbe
scas
out
leave
or
xchg
mov
andb
loope
add
out
sti
cmp
fbstp
stos
call
mov
adc
push
test
loopne
cmpsl
bound
pushf
mov
rclb
xchg
or
hlt
inc
sub
cmp
mov
xorb
adc
xchg
and
arpl
push
jg
leave
jnp
pop
dec
outsl
lds
repnz
movsb
faddl
cli
push
inc
mov
inc
hlt
mov
pushf
nop
mov
popa
push
inc
ret
sub
jne
jg
in
rcr
jae
clc
test
dec
aas
push
push
mov
push
daa
das
xor
in
addr16
call
push
xchg
into
mov
fisttps
int3
leave
jne
loope
out
lds
add
xchg
in
pop
shr
pop
ret
pop
cltd
pop
jnp
inc
dec
shr
sbb
int3
jns
or
or
dec
xchg
das
pushf
test
arpl
and
out
ret
add
jno
jne
imul
push
in
push
add
out
dec
xor
jmp
leave
sbb
xchg
pop
scas
loopne
mov
ret
mov
push
ffreep
addb
ss
lea
sub
mov
add
lea
jp
test
aaa
pop
out
gs
pop
pop
in
repnz
stc
test
hlt
sahf
mov
pusha
dec
jbe
rcrb
jmp
jne
and
inc
cld
fld
lret
jge
stos
pusha
fdivrl
sub
sub
ds
mov
repz
stos
cmp
cld
mov
gs
push
fildl
cltd
inc
add
cld
pop
hlt
xorb
pushf
mov
push
addr16
pop
mov
mov
mov
sbb
data16
mov
mov
dec
iret
lock
xor
out
mov
cmp
leave
jbe
pop
dec
mov
sti
insb
arpl
int
cbtw
push
push
pop
shl
lret
pop
cmpsb
cmc
dec
lods
lock
mov
jae
ljmp
dec
out
xor
das
add
lret
pusha
adc
cmp
or
jne
out
pop
and
mov
fisttpl
cmpsl
jne
adc
call
cld
mov
inc
mov
repnz
adc
clc
ss
mov
jae
cmpl
test
pop
and
scas
insl
pop
xor
int
push
leave
or
loopne
gs
std
ja
xor
mov
sbb
in
pop
xchg
cli
test
div
fiaddl
rcrl
add
xor
pop
sbb
loopne
test
movsl
cmp
pusha
insl
gs
xchg
sbb
lret
pop
int3
cmp
xchg
inc
lock
rcrb
push
aam
les
cld
cmp
aas
xchg
add
xchg
clc
xchg
mov
jbe
into
addr16
aam
inc
cli
sbb
fldcw
xchg
jo
adc
pop
rolb
jae
jle
pop
loop
daa
cmp
fnstenv
mov
pop
add
push
imul
imul
mov
add
in
imul
adc
adc
xchg
outsb
int
adc
push
cld
pop
xlat
xor
add
fsts
dec
and
add
mov
xlat
and
fdivrs
in
mov
push
dec
mov
jl
jo
fnstsw
popf
adc
inc
dec
fidivrs
inc
push
fcmovnb
add
pop
outsb
cmpsl
pop
lahf
push
pop
pop
data16
and
stos
enter
mov
push
nop
pushl
dec
fwait
jb
jnp
pop
fsubl
cld
pop
repnz
jno
notl
xchg
pop
out
jne
mov
add
mov
sbb
jae
jg
enter
scas
pop
lods
cmp
dec
cltd
repz
cmpsl
dec
into
hlt
add
sbb
mov
mov
movsl
scas
rcr
scas
test
sub
xor
pop
comiss
pop
shrl
into
cmpsl
rcrl
fistl
inc
xor
pop
and
cltd
fadds
jbe
leave
fiaddl
push
shlb
arpl
jmp
pop
mov
imul
aas
xor
jne
adc
arpl
addr16
mov
jne
cmp
pop
push
pop
call
xor
inc
and
repnz
fisubl
gs
out
inc
into
adcl
sbb
mov
and
push
push
push
je
cltd
cmp
or
outsl
es
gs
sbb
mov
add
and
or
adc
cmp
fildl
gs
scas
je
ret
pop
sub
inc
cmp
in
xor
inc
negl
movsl
inc
xor
xor
fdivr
das
insl
pop
pop
gs
xchg
cmp
lods
push
cld
out
arpl
sbb
fidivrs
daa
sbb
or
mov
jmp
xor
aad
and
addr16
imul
popf
int
out
mov
or
jl
test
sbb
mov
gs
mov
lods
incb
addb
sbb
mov
negb
or
aaa
dec
pop
cmpsb
sti
js
jbe
imul
scas
adc
push
jbe
in
pop
xor
sbb
lahf
jge
shr
test
pop
dec
xchg
cli
aaa
mov
lret
sub
stos
sbb
xchg
inc
dec
dec
movsb
xor
fists
xchg
cmp
lcall
xchg
hlt
adc
xor
inc
neg
cs
cs
fstp
daa
imul
loop
lret
dec
adc
addr16
push
cmp
mov
push
cmpsb
pop
cld
fnsave
lea
cld
pop
das
cli
popf
push
sub
pop
frstor
jne,pt
sahf
call
pop
sub
cld
cmpsb
int3
lea
xor
in
ffreep
xchg
std
add
stos
cmp
sub
pop
iret
jl
xchg
out
fisttps
pop
clc
xchg
dec
lock
shrb
push
add
mull
mov
pusha
movsb
push
add
std
cmp
sub
fst
mov
jp
gs
insb
mov
ret
jge
out
gs
sarl
pop
dec
cmp
pusha
jl
jne
and
xchg
add
filds
xchg
adc
outsl
mov
jmp
lods
int
adc
sub
mov
adc
ss
es
inc
das
and
mov
or
push
pop
jge
mov
scas
cmp
inc
daa
xchg
imul
adc
pop
cmp
or
and
push
shlb
and
xchg
pop
pop
shll
test
stos
pop
push
pop
repz
pop
adc
mov
enter
fstps
push
mov
mov
xor
push
add
pop
xchg
out
frstor
mov
push
loop
in
idivb
mov
in
imul
mov
jmp
push
push
mov
xchg
xchg
adc
add
cld
pop
jb
and
inc
and
arpl
mov
fwait
jne
jg,pt
movb
adc
test
cmp
lea
nop
fldt
mov
pop
pop
jbe
je
jp
arpl
imul
push
inc
sub
fidivl
repz
cwtl
sbb
cmp
lea
mov
mov
dec
cli
push
test
gs
add
jbe
mov
sub
fiaddl
fistpl
out
push
lret
pop
sarb
xchg
push
dec
xor
mov
pop
xor
sbb
xchg
jmp
not
mov
push
sub
push
lea
push
test
sbb
test
mov
pop
mov
out
mov
ja
or
and
stc
and
enterw
cwtl
ja
xor
data16
sub
loope
stc
test
mov
ss
xstore-rng
cmpsl
add
fcompl
pop
divb
push
push
je
cmp
shrl
out
and
jecxz
pop
push
or
hlt
jle
stos
lock
addr16
inc
in
mov
push
dec
cmp
push
or
inc
rorl
insl
mov
xchg
xor
std
mov
ja
stc
pop
cmp
shll
int3
cli
test
jne
rcrb
out
inc
jge
xor
rcrl
mov
addr16
test
fld
dec
movsb
jmp
aas
mov
inc
add
int3
inc
or
mov
and
mov
or
jecxz
cmp
ficomps
push
add
popa
mov
xchg
dec
cmp
cmc
mov
ja
sbb
add
out
fwait
sub
dec
pop
in
mov
gs
aad
push
jg
sbb
xchg
pop
inc
sub
pop
sahf
lock
mov
lea
rolb
movsb
lret
lahf
iret
test
xchg
cld
push
ficoml
int
call
adc
cmpsb
iret
adc
xchg
or
or
dec
xchg
ret
or
xchg
adc
mov
fildl
in
add
cld
adc
jne
popa
cmc
mov
mov
imul
call
bound
jne
scas
aam
adc
dec
test
and
call
pop
fstpt
enter
add
jne
cld
mov
jecxz
ss
imul
addr16
add
add
sbb
cmp
pop
jbe
or
cs
test
inc
xchg
dec
add
icebp
fsubrs
push
negb
and
clc
mov
mov
out
inc
push
jne
mov
outsl
mov
stos
mov
push
inc
outsl
mov
dec
loop
test
add
imull
jns
in
fdiv
rcr
cmp
test
sbb
stc
xor
sbb
pop
pop
add
push
mov
xchg
cwtl
std
out
pop
nop
push
shrl
pop
test
sbb
cmp
xchg
sbb
push
clc
pop
in
in
xor
xchg
sbb
sti
std
adc
dec
pop
jae
inc
cmp
stos
or
jae
lcall
gs
adc
fs
or
pop
leave
test
mov
xchg
sub
pop
mov
imul
or
xchg
loopne
dec
pop
lock
repz
int
adc
jae
std
xor
leave
inc
inc
xlat
les
jbe
outsl
mov
sub
hlt
xchg
jmp
inc
jne
sbb
pop
pop
mov
add
scas
jbe
mov
jecxz
iret
mov
mov
fmul
and
add
mov
jle
push
sbb
data16
sub
fucomi
pop
and
aaa
movsb
jae
stc
in
xor
mov
jbe
imul
fs
cmp
fstpt
mov
mov
cmp
daa
dec
lods
loopne
pop
shr
icebp
xor
pop
xchg
sub
cmp
out
mov
or
jno
into
ljmp
dec
jecxz
dec
cld
jle
test
movb
push
jae,pt
aas
or
mov
aad
mov
adc
int
outsl
jecxz
xlat
in
pop
fs
push
sbb
ss
mov
clc
mov
ss
jo
repz
gs
je
pop
push
fldenv
addr16
pop
pop
sbb
lret
mov
cmpsb
lcall
inc
dec
ss
fcoms
mov
out
cmc
push
inc
out
pop
xchg
pop
push
jge
outsl
pusha
dec
jo
and
lret
rol
out
pop
pop
mov
or
inc
arpl
mov
maskmovq
xchg
insb
dec
adc
out
jne,pn
addr16
mov
shrb
out
xchg
adc
movsl
push
pop
xor
cmp
ljmp
icebp
data16
adc
fiaddl
add
xchg
mov
shld
fnstsw
rcr
in
ljmp
loop
mov
jg
xor
shl
ss
xchg
jne
outsl
adc
mov
out
inc
inc
mov
test
mov
cltd
popf
mov
push
enter
pop
shll
ret
mov
or
sub
xchg
sbb
xchg
sti
adc
xchg
pop
cmp
fistps
mov
push
push
pop
mov
pop
or
ret
gs
sub
sub
jmp
sbb
or
xor
mov
jl
jecxz
sub
repnz
pop
out
jo
gs
aad
mov
rcr
lock
mov
gs
shll
dec
pushf
xchg
add
pushf
sbb
dec
adc
jne
pop
jge
xchg
mov
push
faddl
inc
xchg
sub
orl
mov
jecxz
bound
daa
xchg
mov
push
cmc
nop
pop
mov
pop
movsb
cltd
iret
inc
insl
movntq
pusha
xor
add
pop
pop
repz
jl
jne
mov
les
jecxz
repz
popf
add
add
sbb
jle
mov
jmp
out
mov
jne
cmpsl
leave
ss
push
out
cli
xchg
cltd
test
or
ret
pop
xchg
mov
andb
inc
dec
mov
jecxz
clc
add
sbb
add
xchg
dec
sti
pop
inc
adc
repz
pop
icebp
sbb
sbb
inc
mov
scas
push
inc
clc
jg
cld
add
push
mov
jmp
mov
fistps
out
in
mov
or
mov
lret
or
mov
leave
mov
test
mov
sbb
xchg
mov
cwtl
in
fwait
pop
je
jnp
add
cmp
mov
mov
adc
test
mov
jae
lret
xlat
push
xor
jnp
lods
pop
addr16
bound
stos
jge
loopne
ljmp
std
lock
mov
je
sti
pop
or
add
test
pop
jge
xchg
and
jbe
fstpl
aaa
dec
jae
push
add
pop
xor
insl
push
clc
jbe
aam
leave
aaa
or
jns
out
mov
lods
test
ret
pop
popf
inc
adc
es
fstpl
sub
and
add
outsb
push
cld
xchg
mov
ficompl
hlt
js
popa
lret
call
arpl
sbb
das
xor
enter
push
jp
out
sbb
mov
pop
jne
rolb
jb
test
inc
sub
xor
ret
push
xchg
cmp
clc
sub
lods
test
fs
dec
cli
inc
pop
adc
ljmp
sti
gs
xorl
out
xor
sub
aas
inc
xor
pop
adc
ljmp
mov
push
mov
jmp
lret
add
add
jae
xor
and
add
xor
pop
js
xlat
sbb
cltd
in
lods
fists
lods
stos
es
pushf
push
add
jbe
mov
mov
jg
mov
inc
jle
inc
mov
scas
in
mov
pop
sbb
push
jge
les
and
push
jbe
jns
pop
fistl
fistpll
mov
jne
ficoml
dec
pop
inc
in
mov
cmp
xchg
loopne
ss
lret
in
inc
or
pop
js
mov
insl
or
hlt
fst
notb
loope
lods
push
loop
test
std
sbb
outsb
imul
xlat
stos
fnstsw
mov
jb
pop
outsl
mov
cld
mov
outsl
cmp
xchg
or
int3
xor
aaa
push
enter
rcr
sbb
data16
adc
lea
sbb
xchg
cltd
cld
out
xor
mov
daa
adc
mov
addl
repz
sti
push
lock
cmp
add
fmul
jp
pushl
or
shll
sahf
fldenv
or
movsl
pop
mov
lds
cmp
ja
cld
pusha
cmp
jmp
subl
pop
ficoml
daa
or
scas
sub
mov
mov
lret
xor
adc
add
ret
jmp
testb
xchg
in
jne
and
dec
or
cmpsb
mov
in
mov
inc
inc
fldenv
and
repz
jecxz
aaa
and
pop
and
inc
lahf
pushf
push
cmp
adc
mov
call
pop
insb
addr16
popa
cmp
ja
jae
cmp
adc
loope
insl
lock
pop
sahf
in
daa
jecxz
mov
vrsqrtps
jno
xchg
cmc
mov
lahf
nop
sbbb
fcoms
daa
jne
cmp
jae
cmp
ljmp
sub
pop
test
in
cmp
push
and
rcrb
scas
lret
fistpl
hlt
dec
out
jne
jnp
dec
lods
std
dec
xchg
xchg
sub
daa
leave
fisubl
fstl
and
and
ljmp
pop
xor
xchg
fstl
test
dec
lcall
dec
faddl
lods
pop
imul
addr16
fs
or
xchg
cmc
or
les
inc
test
dec
cmp
les
mov
rcrb
jl
cmp
cltd
outsl
cwtl
mov
fsts
or
out
sbb
sbb
cmpsl
jo
lret
mov
fsub
sub
mov
int3
mov
adc
bnd
adc
imul
pop
lods
sarb
daa
loop
sub
fs
insb
pushf
idiv
jne
adc
sbbl
cmp
jecxz
aad
cmpsb
push
les
fsubs
repz
mov
adc
push
jbe
sub
fcomps
clc
fwait
add
dec
inc
cs
fidivl
push
and
xchg
sub
pavgb
sub
fs
mov
mov
clc
mov
ss
bound
or
push
daa
add
jb
ljmp
xchg
std
ja
mov
in
inc
add
sbb
negl
push
movsl
clc
movb
push
lret
jae
ficompl
clc
sub
rcrl
fidivrl
dec
repz
or
rcll
stos
in
add
leave
push
mov
jne
cmpsl
adc
int3
hlt
push
inc
dec
pop
es
gs
clc
movsl
and
andb
dec
lds
lods
clc
mov
mov
push
inc
lds
pop
jo
pop
xorb
mov
fs
dec
pushf
or
mov
sbb
cmp
pop
bound
aaa
sub
xchg
mov
push
call
repz
mov
jae
ljmp
out
xchg
mov
inc
aam
in
aad
xor
inc
push
or
mov
aad
push
mov
xchg
sbb
jae
push
sbb
iret
add
add
outsl
push
lcall
aad
clc
pop
push
mov
jbe
in
dec
cmpsl
pop
insb
mov
fidivrl
out
in
cli
rorb
out
cmp
gs
jbe
loop
cltd
repz
mov
cld
xor
mov
fmull
lds
cmp
push
push
dec
mov
int
adc
add
out
fcmovu
fstpl
sbb
daa
fwait
pop
pop
cmc
sbb
divl
pusha
int3
mov
inc
pop
in
in
ret
sbb
push
dec
and
mov
jae
daa
xor
into
cmpsl
rol
jle
push
xchg
test
test
add
cmp
push
cli
sub
jp
call
inc
pop
push
int3
js
dec
pop
jno
sti
add
inc
data16
aaa
arpl
iret
outsl
and
cltd
xchg
and
inc
and
cwtl
mov
and
test
pop
or
push
cli
stc
sbb
xor
ja
jne
out
cmp
in
inc
xor
cltd
pop
pop
mov
loop
mov
jb
fsincos
and
cld
push
addr16
movsb
add
fstpl
and
movsb
sti
xchg
adc
fbld
jb
sbb
adc
jnp
dec
jno
add
repz
test
sbb
sbb
mov
jle
int
pushf
xchg
dec
mov
xchg
sub
dec
add
sarb
scas
xchg
mov
es
adc
lcall
fs
sbb
data16
ds
mov
sub
mov
sbb
cmp
pextrw
sbb
divb
xor
ds
inc
cli
pop
xor
ficoml
jo
jbe
arpl
cld
outsb
testl
into
in
lret
add
and
gs
sub
adc
test
sub
and
out
lea
rclb
nop
mov
aam
jo
scas
cwtl
mov
or
rolb
aas
lea
fistpl
mov
jne
xor
inc
pop
movsb
mov
jbe
fldenv
repz
dec
in
lea
dec
and
lds
lods
jnp
xchg
cli
js
push
orl
lods
or
repnz
ljmp
mov
pop
and
pop
jg
push
testl
iret
mov
ljmp
mov
dec
sarb
dec
imul
cmp
mov
out
lahf
enter
push
jecxz
inc
fimull
popa
pusha
xor
jne
je
or
sbb
and
das
loop
enter
std
cwtl
dec
add
movsl
inc
jl
int3
lret
inc
pop
test
pop
jp
jmp
xchg
sbb
cmpsb
daa
outsl
pop
in
mov
inc
pop
dec
or
or
or
roll
mov
pop
mov
fldl
jae
xchg
idiv
les
push
sbb
dec
ucomiss
shr
std
pop
inc
sub
loopne
inc
adc
aad
pop
adc
dec
sbb
mov
inc
addr16
je
movsb
sub
inc
hlt
jle
and
sti
inc
cmc
cmp
daa
loop
sub
movsl
pop
cmp
dec
adc
jmp
insl
dec
jns
repz
pop
jb
fists
xchg
in
xchg
pop
adc
jne
xchg
jne
lea
sbb
and
xor
in
sbb
dec
cmpsl
mov
icebp
adc
shll
fstp
pusha
adc
notb
fsqrt
iret
xchg
pop
mov
in
fisttps
lock
test
fcoms
xchg
fisubs
xor
aaa
xchg
jae
mov
out
jl
pushf
cld
std
lret
and
cmc
and
xchg
xchg
pop
ds
insl
sbb
mov
push
dec
test
pop
mov
and
std
or
fistpl
xor
clc
not
movb
sbb
sarb
movsl
xchg
push
inc
in
ds
sbb
xchg
movsb
xor
les
addr16
inc
ss
or
gs
pop
mov
mov
jb
sahf
pushf
xchg
jae
jnp
push
ret
xchg
leave
dec
dec
and
mov
cmp
sub
mov
mov
pop
pusha
lds
push
cmp
fcompl
loop
xor
lret
clc
ficoml
xor
bound
fstpl
inc
rcll
pusha
or
data16
adc
or
or
push
jno
push
gs
mov
push
xor
pop
mov
roll
cmp
gs
ds
jge
cmpsl
imull
sub
jbe
mov
bound
out
mov
daa
jecxz
in
movlps
ret
cmpsl
je
cmp
jle
mov
rcrb
xor
adc
sbb
inc
pop
popa
dec
lds
cmp
mov
stos
or
sbb
push
leave
push
jbe
jg
ret
out
sbb
and
push
ret
pop
pop
in
xor
mov
pop
or
or
test
jo
jl
inc
out
pop
xor
jae
mov
xchg
or
xchg
je
sbb
gs
dec
outsl
xchg
cmp
jl
cld
sbb
pop
lahf
stos
ret
std
fs
xchg
xor
sbb
push
mov
fwait
cmp
das
fstpl
mov
ja
jne
jbe
and
jne
xor
xchg
popa
inc
cmp
xor
int3
insb
and
push
pusha
xor
pop
inc
icebp
push
rcrl
pop
lds
sbb
hlt
xor
jle
mov
data16
jecxz
jbe
dec
pop
add
in
push
mov
cmpsl
jno
mov
pushf
pop
push
fistps
cld
ficoms
popa
and
lahf
pushl
xor
jp
aaa
mov
lods
and
hlt
jne
lds
and
insb
inc
int
inc
mov
imul
lods
pop
push
mov
scas
push
jae
fidivrl
jmp
cs
jne
stos
sarb
call
das
lcall
ret
sbb
push
repz
lret
cmc
out
pop
and
pusha
fstl
add
cmp
mov
arpl
hlt
in
addr16
sbb
pop
sbb
cld
enter
jo
insl
jl
push
xchg
xor
sub
mov
and
in
idivb
fildll
frstor
movsl
pop
test
add
or
mov
leave
sarb
aaa
jmp
divb
scas
aas
clc
xchg
fstl
push
daa
ret
push
cmp
sub
bound
insl
sahf
jno,pn
idiv
fidivrl
lret
inc
xor
cld
dec
mov
stos
mov
int
cmp
xor
mov
pop
in
cmc
push
pop
mov
jge
popa
icebp
jb
sbb
xor
jecxz
and
cmc
xor
popa
sub
xchg
arpl
imul
les
mov
inc
clc
inc
loope
fstp
sbb
dec
arpl
rol
stc
push
and
pop
sti
push
jae
outsb
mov
fistps
dec
cli
dec
fnsave
xor
adc
outsb
jb
mov
dec
test
inc
enter
pop
jne
push
imul
fwait
icebp
jl
int3
ret
mov
or
shll
dec
mov
movl
fstpl
ljmp
in
dec
out
or
cmp
dec
lea
clc
inc
in
sbb
jae
or
cmp
cmc
adc
out
inc
sub
outsb
lods
js
pop
lock
pop
stos
xchg
jl
ds
lods
fxch
jb
pop
stc
setne
push
jne
xor
dec
mov
mov
das
xchg
xor
cmp
push
daa
mov
cmpsb
test
add
gs
sub
push
in
add
fisttpll
inc
xor
adc
leave
pop
aaa
pop
mov
sbb
je
or
xchg
jecxz
int
and
push
std
mov
fwait
sbb
scas
in
loop
mov
sub
in
sahf
aam
fadds
xchg
cmp
push
jle
pop
pop
dec
xchg
xlat
dec
lds
cmp
cmp
mov
push
xchg
fcoml
or
jbe
ror
jb
sahf
into
jne
pop
ret
jae
sbb
dec
ds
fcmovnu
cld
jno
dec
pop
fidivs
sub
xchg
in
pop
and
fmuls
inc
jle
adc
idivl
pop
push
addl
ljmp
packssdw
jnp
add
imul
sti
adc
idivl
dec
sbb
cmpsb
jmp
clc
push
lods
xor
shrl
sti
negb
imul
leave
and
pushf
fstp
pop
gs
mov
push
out
pop
push
aad
adc
cmc
push
jle
subb
add
pop
popa
jae
mov
push
mov
and
ja
xor
inc
inc
movsl
pop
xor
or
fildl
cmp
fldenv
leave
pushf
sbb
push
mov
xchg
jo
pusha
pop
pop
fdivl
push
mov
sub
sti
repz
loope
pop
jmp
push
mov
cli
dec
out
sbb
aam
add
dec
inc
push
fstl
out
pop
lock
sbb
stc
leave
inc
jle
xor
setbe
fisttpl
outsb
jne
mov
pop
je
outsl
gs
pop
adc
aam
push
loop
dec
jecxz
into
and
leave
pop
arpl
sbb
xchg
cwtl
xchg
loope
sbb
adc
gs
cld
pop
cmp
push
and
leave
and
mov
icebp
inc
cmp
mov
repz
mov
jge
xor
add
arpl
jae
lock
clc
jecxz
out
imul
adc
std
dec
xor
gs
mov
out
pop
es
mov
adc
xor
icebp
vcmpss
cli
pop
push
mov
clc
push
adc
roll
jne
xor
stc
scas
fcmovbe
pop
in
mov
jo
pop
adc
add
and
sbb
aad
jnp
test
sub
test
push
adc
cmc
inc
pop
add
hlt
outsl
mov
sub
sbb
xchg
faddl
fildl
jle
cmpsl
out
xor
insl
push
pop
push
frstor
xor
xor
das
cli
adc
pop
cmp
mov
movb
lcall
ficoms
test
xor
cld
addl
jge
aas
push
lret
ret
movb
ljmp
addr16
int3
and
imul
cmp
popa
pop
das
push
shl
xor
add
or
jb
aad
jp
pusha
shl
adc
test
in
ds
mov
loope
in
or
add
xchg
cmp
pop
mov
or
aaa
into
int3
int3
sbbl
sbb
mov
outsl
decb
fdivs
jl
cmp
pop
mov
fistps
xchg
jle
gs
sub
mov
movsb
or
push
pop
mov
pushf
icebp
data16
scas
jl
lahf
xchg
cmpsb
add
jne
dec
imul
enter
test
pop
pop
and
cwtl
xchg
jecxz
pop
xor
fs
xor
xchg
xor
arpl
sbb
jl
and
mov
out
sbb
loopne
testl
clc
jne
loop
lds
cmp
dec
xchg
sbb
andb
push
lret
cs
push
mov
addr16
jne
or
mov
xchg
lds
cmp
data16
push
insl
mov
mulb
dec
jbe
js
mov
inc
jbe
aaa
outsl
scas
gs
cmp
outsl
fstpl
adc
mov
mov
mov
adc
dec
jp
xorl
push
sbb
dec
lods
daa
lret
adc
mov
pusha
in
cld
pusha
lret
add
cmp
and
sub
or
ljmp
imul
jnp
jo
jns
into
xor
mov
out
rcl
int
cmp
addr16
pop
pop
mov
leave
cmp
add
mov
sub
mov
push
fcmovbe
pop
in
and
mov
movb
jge
sar
hlt
pusha
sti
movsb
sbb
shlb
sub
inc
fsubl
cs
mov
sti
out
mov
add
arpl
or
sub
xor
les
sarb
cmp
imul
cmp
mov
mov
cmp
cmp
add
inc
add
jle
mov
imul
test
xor
rcrb
mov
mov
sbb
cmp
mov
pop
cmc
adc
mov
clc
es
scas
xlat
jo
scas
jecxz
mov
clc
mov
jmp
add
push
fcom
jno
out
mov
cld
or
scas
rcr
int3
daa
inc
and
cmp
movsl
push
addr16
add
into
xlat
fsubp
fs
pop
xor
dec
cmp
aam
add
pop
movsl
pop
stos
aad
loope
rcll
mov
pop
xchg
sbb
add
inc
push
push
loopne
inc
gs
addr16
repz
mov
mov
or
mov
pusha
or
jle
lock
or
pop
outsb
sub
in
pop
inc
push
in
leave
scas
push
jmp
cli
aad
jne
test
sub
insl
pop
fbld
daa
daa
movl
sbb
fdivr
and
daa
sub
dec
sub
mov
dec
fimull
push
sahf
add
test
pop
pop
fmuls
mov
cmc
pop
inc
enter
gs
insb
hlt
cmp
test
test
in
shlb
sub
leave
mov
outsl
or
jp
add
push
js
ljmp
into
loop
and
rol
mov
daa
xchg
fwait
xor
add
cld
testb
pusha
or
inc
pop
fwait
mov
cmp
pop
inc
fbld
xchg
cltd
mov
nop
mov
aad
orb
adc
jno
loop
jle
pop
mov
cmp
inc
fs
mov
mov
fwait
add
cmp
stos
fsincos
aaa
mov
jbe
dec
mov
add
stos
fstps
jle
jbe
ret
dec
mul
cwtl
jmp
and
hlt
adc
sbb
sub
jns
inc
icebp
loopne
add
sarl
inc
xchg
or
outsl
xchg
push
xchg
stos
mov
stos
test
mov
push
inc
outsb
mov
cmp
push
les
mov
mov
inc
scas
imul
inc
mov
fwait
rorb
xchg
mov
in
rolb
pop
aam
ret
adc
xor
aad
dec
jecxz
inc
xchg
jae
arpl
movsl
sahf
add
cmpsb
pop
fistl
out
xchg
ret
movsl
jp
insl
inc
clc
notb
jmp
add
mov
jg
std
mov
and
incb
scas
xorl
xor
adcb
pop
add
cmp
xchg
cwtl
adc
repz
enter
pop
sbb
pavgw
add
or
fisttps
ljmp
sub
and
push
cmp
movsb
addr16
incl
push
mov
fdivr
pop
lods
jb
out
jo
into
pop
ds
or
daa
ds
jae
or
fdivrs
test
cmpsb
xchg
jbe
addr16
fsts
mov
mov
push
divl
sbb
jmp
sbb
jle
fbstp
outsl
andl
inc
sarl
in
inc
adcb
sbb
xchg
loop
sub
lret
out
arpl
sbb
mov
ss
test
add
or
addr16
and
out
test
loope
pop
and
insb
leave
addr16
andb
push
mov
sub
and
cmpsb
inc
les
sti
jbe
das
out
fdiv
mov
mov
mov
sbb
mov
inc
fisubs
mov
pop
push
loopne
pop
pop
in
pop
std
andb
sbb
leave
addr16
cmovae
mov
inc
orb
mov
pop
popa
call
movsl
dec
jle
lahf
push
jmp
bnd
xchg
sub
cmp
test
jae
jbe
push
mov
mov
dec
pop
lcall
pop
push
push
jle
rolb
xchg
lea
stos
int3
jbe
dec
pop
xor
jnp
rcr
jbe
adc
jae
dec
jns
fiadds
stc
and
fwait
orl
or
filds
test
xchg
xor
out
scas
push
aad
lahf
mov
adc
cltd
gs
ret
lcall
inc
movsb
in
mov
xor
push
push
scas
sarb
roll
js
mov
pushf
jb
jnp
mov
jmp
std
gs
divb
and
xor
xor
xor
shll
pop
sbb
mov
inc
mov
mov
dec
arpl
sbb
adc
in
sub
and
jne
inc
pop
es
out
lds
add
mov
jbe
andl
bound
call
clc
gs
lock
ret
push
adc
sbb
roll
mov
lods
sub
jno
test
mov
imulb
push
inc
push
lahf
mov
mov
aaa
mov
sub
and
es
pop
into
xchg
lock
jle
fistpl
fs
repz
in
dec
pop
inc
sbb
fld
loop
pop
cmpsl
cmc
mov
or
mov
xor
xlat
add
in
test
and
ds
neg
lods
and
fists
xchg
or
mov
ss
gs
gs
loop
inc
lods
shl
into
cltd
pop
mov
fildl
add
mull
gs
dec
push
cmp
jnp
inc
mov
push
dec
xorb
pop
jp
fisubl
ds
ss
cmp
lea
insl
fstps
push
jo
push
jmp
fnstenv
clc
gs
scas
imul
add
xchg
int3
xor
leave
mov
xchg
ss
push
loop
out
adc
mov
pop
sbb
ljmp
dec
inc
ret
inc
sub
mov
je
mov
push
fisubl
pop
cmp
pop
mov
aad
insb
ret
xor
in
push
enter
xor
outsl
pop
fisubrl
and
or
xor
cmp
mov
pop
push
fldenv
sbbl
movsb
fstps
cltd
movsb
xchg
gs
fcomp
or
fstpl
mov
out
pop
jbe
adc
jae
add
jmp
and
xor
sbb
push
xor
push
or
xchg
cmpsl
or
stc
in
or
sbb
sub
add
xchg
test
hlt
or
stc
in
cmpsl
mov
xchg
push
rclb
scas
pop
lret
pop
cmpsl
in
jae
mov
lea
jecxz
or
xor
mov
out
repz
cmp
icebp
and
cmpb
aaa
jmp
inc
pop
out
outsl
mov
jmp
popa
in
dec
mov
es
jne
in
repnz
sbb
aad
xor
mov
mov
std
test
sub
xor
fnsave
out
jo
xor
lea
cmp
xchg
sbb
hlt
les
mov
pop
mov
sub
jp
adc
out
es
jmp
jg
cs
jno
les
pop
adc
jecxz
adc
xor
adc
mov
pop
out
test
push
and
mov
add
xor
jne
sbb
cmp
add
pop
sub
add
popa
pop
push
inc
pop
pop
add
fimull
jge
cwtl
dec
cs
sbb
sahf
sub
lds
mov
sbbb
push
loopne
pop
and
in
pop
lahf
xchg
data16
shll
insb
dec
repnz
adc
call
lock
pop
fstpt
push
push
xchg
sbb
test
inc
mov
push
xchg
cmp
into
arpl
lock
sub
daa
fdivl
sbb
nop
in
ljmp
push
movsl
aaa
lret
push
pop
dec
jl
push
cmp
pop
flds
inc
fstps
ljmp
or
pop
pop
notb
fcomps
jl
sub
pop
dec
ret
sbb
sti
fnstcw
scas
aad
fldcw
sub
sbb
in
popl
push
jns
notb
mov
cld
neg
sub
fisubl
andb
mov
jg
enter
repz
xor
pop
std
outsb
call
stc
and
cltd
sti
fcompl
and
je
pop
fsubl
pop
inc
fs
push
push
fistpl
ja
faddl
jne
bound
fcomp
pop
pop
add
jae
clc
shlb
cwtl
push
inc
pop
gs
cld
cmp
sub
pop
and
and
pop
dec
fldl
jg
nop
loopne
mov
pop
popf
dec
cld
mov
movsl
out
fdivs
insb
in
xchg
sub
in
pop
fildll
rolb
mov
lcall
out
cli
fnstenv
mov
sub
mov
pop
pop
subb
pusha
mov
enter
mov
inc
enter
pop
pusha
xchg
cmp
out
pop
lret
xlat
add
push
mov
pop
clc
mov
mov
clc
push
cmp
in
sbb
loopne
sahf
pop
imul
mov
sub
and
out
pusha
sbb
xor
sbb
es
mov
jge
std
jns
fwait
movsl
adc
test
push
out
cs
jmp
pop
loopne
jg
imul
fwait
daa
bound
nop
sahf
add
sti
mov
movsl
add
pop
cwtl
add
fsubl
loope
sbb
in
in
sbb
ljmp
sahf
in
push
insb
cltd
ja
in
pop
addr16
mov
inc
arpl
cli
push
test
fistps
cltd
jbe
sbb
out
xchg
jb
jne
es
es
lea
outsl
ret
test
inc
add
mov
jmp
xor
inc
xchg
adc
stc
in
inc
xchg
mov
popa
adc
mov
dec
pop
jne
nop
addl
ret
subl
fcom
dec
cmp
and
and
ffree
sub
jbe
and
mov
inc
cmp
std
cltd
xchg
arpl
out
inc
addr16
pop
mov
mov
loop
add
gs
jbe
pop
sar
cmp
jbe
leave
xor
xchg
and
dec
jne
int3
sarb
xchg
xchg
decb
pop
jb
out
fidivl
dec
inc
or
jg
jns
hlt
enter
jecxz
pop
int3
add
push
testl
add
jbe
pop
outsl
gs
and
clc
data16
daa
mov
pop
dec
shll
dec
std
mov
movsb
aam
or
push
add
mov
mov
imul
cli
jle
movsb
inc
leave
cmp
je
pushf
mov
pop
faddl
pusha
mov
shlb
mov
jmp
fidivl
mov
sbb
push
decl
je
shlb
xor
int3
stos
xchg
jne
out
imul
gs
test
mov
daa
mov
push
dec
adc
movsl
imul
nop
xlat
jbe
in
test
sbb
aaa
or
xchg
xorl
addr16
push
popa
orl
jnp
mov
and
or
gs
sbb
sar
pop
mov
into
mov
out
in
inc
mov
shl
jmp
cmp
mov
mov
pop
addr16
xchg
in
xor
insl
mov
aad
lock
test
notl
pop
mov
mov
sti
imul
mov
xchg
lcall
out
dec
dec
mov
add
nop
leave
mov
jmp
stos
leave
scas
mov
mov
fmul
test
orl
loopne
pop
push
mov
sub
cmp
add
sbb
lods
push
cmp
mov
pop
into
addb
test
mov
dec
xchg
fistps
pop
adc
pusha
push
pop
fiaddl
cmpsl
ret
clc
sub
das
lods
pop
or
in
icebp
icebp
mov
cli
movsb
jmp
mov
fistpl
mov
cmpsb
pop
dec
imul
pop
ja
enter
clc
mov
sbb
sbbb
sub
popa
xchg
fcoms
loopne
frstor
test
lret
nop
inc
jmp
xor
rcrb
mov
idiv
cld
dec
rclb
sbb
push
rcrb
hlt
sbb
add
cmp
ss
dec
in
and
loop
xor
push
into
stc
push
sub
or
repnz
add
gs
cmc
insl
mov
jns
mov
fldl
fdivl
pop
test
push
pushf
jae
insb
push
inc
out
fucom
add
pop
add
test
mov
mov
and
sti
dec
pop
test
and
jbe
outsl
sbb
push
jne
or
mov
je
into
outsl
dec
lods
fmull
adc
add
std
xchg
xchg
dec
jo
fistpl
mov
jne
adc
cltd
cld
lcall
imul
into
or
das
mov
or
xchg
jbe
push
test
jnp
mov
call
push
pop
cmp
xchg
pop
cmp
test
subb
pop
movsb
cmp
leave
in
hlt
push
sahf
bound
add
dec
push
xchg
mov
nop
pop
dec
aas
clc
add
mov
jae
in
cmp
enter
sbb
sub
sbbb
xor
mov
adc
sub
cmp
je
jle
push
shrl
jne
mov
frstor
scas
fnstenv
push
sub
les
outsb
fisubl
cmp
xlat
pop
stos
aam
xor
pop
xchg
ret
push
jl
jno
js
cmp
pop
test
pop
aam
fstpt
stos
sub
rclb
lock
dec
pop
fisttps
rcrl
xchg
pop
lret
sahf
pop
lahf
mov
loop
xchg
xchg
fbstp
push
jno
in
in
add
in
push
loop
mov
push
adc
out
sbb
add
dec
pop
sub
daa
push
or
push
mov
fwait
test
xchg
pop
hlt
xchg
cld
and
xor
aam
cltd
lret
sbb
jo
inc
lock
out
in
add
dec
ljmp
data16
push
lcall
mov
jae
sub
fldt
inc
movsl
addr16
sub
push
cwtl
mov
test
aam
mov
push
dec
mov
movsl
lock
inc
sahf
pop
and
pusha
adc
lea
loopne
or
push
sbbl
add
clc
gs
push
jecxz
ds
jns
ja
push
sarl
fmuls
popf
push
xor
negl
add
clc
push
dec
clc
lea
fdivr
popf
sti
cmp
mov
hlt
mov
cwtl
pop
ret
inc
lds
daa
add
icebp
clc
mov
xchg
inc
pop
outsl
ds
out
mov
or
in
leave
push
data16
mov
xchg
out
add
xchg
jp
inc
adc
mov
pop
in
and
outsl
adc
xor
stc
fsts
xlat
jbe
sub
jns
adc
rorl
xor
cmp
inc
cmp
cmp
push
das
pop
cmp
fdivrs
enter
push
adc
adc
ficompl
rcll
sbb
pop
sub
orb
shll
or
add
mov
pop
std
pop
jo
out
cmpsb
gs
movl
ffree
and
jno
into
xor
push
pop
pop
nop
add
cmp
xor
stos
clc
dec
add
ljmp
lock
out
in
inc
in
pop
aaa
jecxz
pop
dec
stc
fistps
sbb
jnp
add
push
ret
pop
mov
jbe
shl
inc
aas
in
ja
cmp
xchg
xor
pop
cmp
jne
cmp
icebp
sbb
fld
pop
in
mov
sub
cmpsb
or
nop
ljmp
test
pop
fistps
and
arpl
cld
push
xlat
pop
daa
leave
faddl
insl
inc
cmpb
enter
xor
ja
shll
sbb
push
imul
aam
test
add
dec
outsb
js
out
out
test
or
into
jo
cmp
fadd
pop
inc
aas
rcll
popa
mov
repz
pop
xchg
in
hlt
or
cmp
les
jae
popf
adc
pop
adc
fdiv
ds
cmp
je
ja
inc
out
xchg
xor
es
daa
jg
mov
add
es
inc
cmp
arpl
xchg
out
popf
ds
sahf
push
xchg
ficomps
mov
pop
out
lret
xchg
lea
flds
test
mov
and
mov
xchg
das
int3
orl
lret
shlb
into
pusha
jne
xabort
sbb
rcrl
and
test
or
inc
lahf
aaa
pop
jne
subb
in
gs
fsubl
dec
mov
xor
arpl
test
int3
mov
mov
jns
xchg
xchg
add
out
xchg
mov
pusha
in
ficompl
add
in
mov
add
stos
cmpsb
rorb
out
sbbb
lcall
add
xchg
and
jae
pop
xchg
pop
or
stos
or
add
dec
sub
shrb
jne
xchg
mov
cmp
jle
lds
imul
jne
push
movsl
data16
xchg
sahf
mov
out
push
mov
xchg
dec
int3
adc
loopne,pt
aad
sbb
mov
dec
es
fcmove
pusha
and
cmp
xor
cmp
aad
mov
inc
jle
data16
mov
test
pusha
hlt
pop
repz
gs
ljmp
stos
jle
jmp
add
in
jmp
ret
or
jp
push
stc
imul
or
rcrl
xchg
mov
movsl
popf
test
paddw
pop
gs
xchg
hlt
lods
out
mov
inc
fcoms
in
dec
push
test
add
and
int
or
xchg
inc
pop
xor
sti
das
and
imul
aad
push
int
inc
xlat
xor
leave
cltd
popf
dec
outsl
out
mov
and
or
xlat
pop
data16
add
cltd
int3
dec
stc
or
aam
dec
ljmp
jle
fstpl
aad
and
adc
gs
push
sub
cmp
bound
push
sub
movsb
mov
mull
xchg
mov
push
xor
jmp
shrb
add
aaa
pop
mov
xchg
les
jne
lock
test
adc
and
ret
int3
inc
push
bound
jmp
add
jbe
gs
addr16
and
arpl
adc
insb
pop
mov
mov
cmc
pop
lret
fldl
gs
and
pop
fcoms
negl
insl
push
outsl
into
and
sahf
cli
mov
imul
xchg
mov
mov
xor
loope
ljmp
sbb
shlb
lock
jne
arpl
dec
xor
call
xor
mov
addr16
push
gs
daa
movsb
shlb
nop
add
pcmpeqd
push
sub
sar
cmp
js
jmp
mov
dec
fbld
mov
sub
clc
dec
ret
jne
mov
mov
inc
xchg
adc
sub
scas
pop
jmp
daa
jle
dec
cmp
cmp
stos
sbbb
push
scas
jbe
test
lods
insl
cmp
fdivl
sub
jle
or
lods
xchg
std
jl
outsl
orb
movsl
fisttpl
scas
fcomps
and
hlt
jno
adc
aas
pop
mov
mov
xor
pop
mov
sub
mov
xchg
sub
mov
aas
ret
cmp
mov
mov
imul
outsb
sti
rcrl
shl
fidivs
add
fcomps
cltd
pop
sahf
repz
filds
push
lds
imul
push
sbb
outsl
pop
aaa
fwait
mov
fmuls
dec
fs
leave
clc
push
jne
rcrb
popa
fcmovne
fistl
sbb
lock
sbb
pop
pop
push
sbb
fisttpl
imul
pop
pop
lcall
fistpl
pop
in
fbld
mov
aaa
sub
cmp
lahf
mov
shlb
or
out
data16
pop
das
and
xchg
ret
sbb
in
ffree
fs
fcomps
neg
jecxz
fcos
fcoms
jecxz
and
ljmp
mov
add
sbb
lahf
movsb
imul
pop
push
shl
popf
test
fsub
sti
imul
fbstp
pop
jmp
push
stos
push
pop
cltd
test
sbb
mov
aaa
fistps
je
fabs
adc
cmp
sbb
sbb
cmp
and
pop
es
std
xor
into
fwait
sbb
bound
fdivrs
js
or
cmp
and
pop
cmp
cld
sbb
fsub
lahf
and
sti
fchs
loop
jecxz
fsubs
cmpsb
cmp
cmp
sub
ficompl
sti
sbb
fdivrs
gs
arpl
pop
or
and
fbstp
je
pop
arpl
pop
mov
ficompl
mov
sbb
sahf
jp
andl
cwtl
popa
adc
sbb
sbb
adc
mov
std
fldenv
adc
lcall
pop
es
pop
movsl
aaa
nop
lahf
adc
icebp
push
sahf
fstps
sbb
outsl
movsl
jmp
sbb
sbb
xchg
sti
out
push
mov
and
adc
jl
push
sub
mov
data16
hlt
jne
xor
ds
jno
jne
cmpsb
outsl
push
ret
data16
push
mov
bound
inc
pop
inc
jecxz
out
scas
filds
lea
scas
mov
xchg
faddp
pop
fcoms
mov
lahf
call
pcmpeqw
push
clc
mov
push
shl
daa
pop
jbe
add
gs
mov
pop
add
and
mov
mov
or
mov
cmp
std
jne
push
push
push
xchg
mov
inc
push
cmc
pop
ss
jmp
js
cltd
gs
xchg
pop
mov
sub
test
jb
mov
lahf
xor
sbb
test
push
out
sti
out
lret
mov
mov
ljmp
jbe
popa
jae
imul
add
ss
or
pop
gs
jg
or
ficompl
fldt
pop
xor
imul
add
jo
cs
mov
loop
nop
rcrb
mov
das
jne
jns
mov
dec
xchg
xchg
or
sbb
xor
dec
fdivl
push
mov
imul
mov
popa
test
xchg
ss
inc
add
in
pop
movsl
cmp
pop
sbbb
pop
mov
lock
sbb
lods
outsl
jg
cs
shlb
sub
adc
fstp
jne
pop
add
jno
clc
sahf
fcmovb
sbb
pop
scas
lods
jbe
pop
mov
cmp
test
inc
mov
mov
inc
ret
and
insb
cmp
lret
add
fldl
int3
push
arpl
pusha
in
mov
rcr
in
mov
dec
popa
add
or
dec
xchg
xor
sahf
mov
mov
lock
ds
dec
push
idivl
imull
add
inc
push
imul
ja
call
ret
push
push
iret
cli
lock
pop
xchg
rclb
xchg
ret
push
clc
pop
fsubs
fistl
mov
mov
inc
mov
xor
and
ret
jg
fsubs
jl
fldl
jg
add
fldt
dec
fwait
pop
imul
push
gs
inc
fwait
jmp
cmc
mov
push
mov
repnz
call
cmp
daa
add
sbb
push
fisubs
sbb
mov
out
sbb
lahf
hlt
pop
sub
pop
add
pop
push
and
negl
mov
pop
sti
pop
pop
nop
mov
es
jo
add
pop
xor
loope
lahf
popa
sbb
pusha
cwtl
add
divl
mov
cwtl
sti
pop
pop
pop
arpl
pop
seta
mov
pop
arpl
and
fdivr
ficomps
bound
adc
fldenv
lahf
movsb
add
xchg
loopne
pop
shrb
pop
mov
fldt
mov
fs
scas
cltd
add
int
jno
pop
mov
sti
jmp
pop
fsub
loop
lahf
add
pop
pop
arpl
sbb
bound
push
cmp
pop
pop
fsubl
fsubs
outsl
popf
pop
lcall
cli
mov
icebp
push
cmp
xlat
fcmovnu
and
fsubr
movsl
and
sbb
fsubrs
cli
fdivr
and
popa
lods
jmp
pop
fldenv
fwait
pop
jmp
aas
add
fsubrl
cmp
jmp
addr16
daa
and
into
int
sti
mov
cwtl
loop
sbb
sbb
and
outsl
xchg
jp
jp
imul
push
in
fldln2
mov
jge
fsubl
shlb
cmpsb
sti
fmuls
fidivrl
movsb
pop
and
adc
lcall
leave
adc
outsb
and
shll
icebp
sub
jne
add
loopne
div
sub
fwait
in
shrl
stc
xchg
js
out
adc
lcall
aad
mov
cli
fcmovnu
jae
test
jno
add
imul
lret
mov
pop
xchg
cmpb
das
lcall
xchg
scas
mov
cmp
jbe
push
sbb
in
xchg
cld
mov
pop
mov
mov
aad
out
movsl
pusha
mov
das
and
repnz
and
push
scas
sarb
xchg
sbb
data16
adc
jbe
sub
lret
les
or
mov
ret
xor
mov
stc
mov
mov
fisubl
rcr
adc
push
gs
sub
ja
pop
xor
cmp
aaa
mov
mov
shrb
in
mov
pushf
pop
aam
cmp
test
mov
mov
add
dec
movsb
add
jbe
sub
lahf
mov
les
mulb
out
cld
les
jg
es
shr
fs
mov
data16
jecxz
mov
and
mov
lds
mov
popw
cmpsb
cmp
rcrb
fldt
fyl2x
mov
cmp
sub
mov
and
fistpl
xchg
cmpsb
mov
pushf
ret
clc
pop
dec
mov
stos
sub
mov
cltd
sub
sbbl
mov
mov
sbb
adc
ljmp
push
dec
ss
cmpsl
das
xchg
ret
dec
xchg
adc
sahf
and
pop
lahf
ret
rep
inc
ja
ret
scas
jo
adc
popa
cmc
and
and
out
test
inc
stc
test
aam
fisttpll
xchg
js
hlt
ret
adc
push
xor
push
push
jecxz
sub
test
lret
cld
cmpsb
adc
cmp
clc
pop
enter
gs
gs
shll
inc
sahf
add
jp
push
adc
pop
jns
call
out
fstpt
jg
leave
daa
mov
mov
cltd
fldcw
and
mov
aam
pop
out
mov
rorb
xor
mov
pop
sub
mov
scas
sbb
add
sbb
icebp
outsb
shrl
pop
repz
fisttpll
call
xor
dec
movsl
out
clc
in
cld
stc
js
je
addr16
fwait
arpl
movsb
inc
sti
in
das
pop
xchg
pop
and
mov
sbb
lret
add
jl
sbb
icebp
pop
mov
insb
mov
leave
adc
gs
bnd
jno
mov
pop
fdiv
push
sbb
push
or
inc
sbb
jo
inc
cltd
xor
cmpsb
mov
pop
out
les
loope
loope
sbb
lock
fwait
es
jmp
dec
aaa
add
jne
in
jne
loope
and
jmp
loop
jle
shrl
notl
test
xchg
ja
in
push
lea
inc
aam
into
rcrl
fldcw
push
inc
xchg
mov
or
enter
enter
or
push
dec
mov
jbe
cmp
rorb
pusha
dec
jbe
imul
inc
hlt
pop
sti
fiaddl
es
push
or
push
jae
inc
inc
ss
mov
psubw
pop
mov
int3
add
xor
sahf
das
jbe
adc
inc
or
jl
sti
fsts
addr16
fistps
dec
and
dec
xor
inc
scas
test
ja
cmp
test
cmp
int3
lret
push
scas
je
int3
bound
in
and
pop
mov
xor
in
pop
and
sarl
jb
and
push
les
pushf
push
mov
mov
add
mov
add
add
mov
outsl
cltd
xor
adc
addr16
lds
xchg
leave
arpl
jg
sbb
cltd
mov
in
xchg
mulb
xor
cmp
test
jbe
xchg
cmp
shrb
jl
in
gs
mov
stc
outsl
and
push
fchs
add
fsubl
pop
cwtl
or
xor
imul
data16
inc
jmp
outsl
pop
imul
into
clc
test
mov
pop
cmp
cmpsl
bound
in
pop
adc
loope
add
cmc
add
out
mov
adc
sub
add
cmp
xor
jne
add
sub
mov
jbe
repnz
mov
push
mov
es
pop
in
mov
jne
adc
stc
shlb
rep
lods
mov
mov
bound
cmp
mov
clc
fidivl
out
outsb
push
sahf
pop
add
xor
adc
mov
sub
notl
fbld
or
notl
bound
dec
sbb
insl
loop,pn
mov
push
inc
fcoml
push
add
outsl
or
dec
int3
xor
dec
pusha
dec
outsl
or
outsl
shr
mov
adc
clc
mov
repz
aad
sbb
lcall
imul
pop
outsb
jns
repz
and
xor
inc
adc
lock
out
xor
push
in
jmp
imul
inc
cmpsb
int
mov
cwtl
pop
test
xchg
adc
dec
out
into
rorl
das
adc
inc
pop
cli
in
inc
sub
std
pop
jno
push
test
shl
mov
das
mov
xor
xchg
pop
xchg
sbb
sub
scas
sbb
adc
jne
dec
dec
testb
cmp
mov
cmpsb
cmp
mov
cli
aas
addr16
fcmovnbe
js
inc
loop
sti
pop
or
xchg
popf
jne
lods
push
or
inc
leave
push
repnz
dec
push
mov
aas
and
cmpsl
in
cld
mov
sub
mov
add
jno
mov
arpl
adc
inc
int
fwait
stos
fsubrl
mov
cmp
aad
and
jl
xor
mov
sbb
jbe
pop
sbb
hlt
arpl
mov
or
iret
xor
imul
adc
xor
dec
test
clc
repnz
dec
pusha
aam
or
fwait
push
rclb
cs
loopne
ds
sub
push
inc
icebp
mov
loop
ret
push
inc
mov
das
pop
cmpsb
mov
insb
dec
mov
ljmp
push
idiv
inc
pop
sbb
jecxz
lahf
ja
loop
nop
xor
scas
pop
jle
push
sti
pop
scas
sub
lea
fsubrl
out
pop
pop
mov
xchg
add
fcomps
cmc
dec
sbb
xor
push
mov
fadds
sub
das
and
loop
sarl
mov
arpl
pop
sbb
jg
and
adc
pop
and
and
loopne
call
das
loop
jmp
adc
popa
add
cwtl
mov
mov
popa
fsub
mov
and
je
mov
pop
push
jge
out
lcall
in
repz
pop
pop
sub
out
and
gs
lahf
inc
jg
lcall
mov
sub
pop
lcall
pop
mov
pop
call
xor
repnz
inc
ftst
mov
sub
cmp
jmp
clc
push
push
es
pop
mov
sub
push
jnp
xor
fcompl
loope
pop
xchg
sub
fbld
pop
flds
mov
fdivrs
sahf
pop
pop
mov
pop
lcall
adc
pop
pop
adc
and
pop
and
sti
sbb
jmp
cmp
pop
pop
xchg
stos
fisubrl
fisubs
imul
lcall
icebp
loop
fstps
es
pop
fsubs
mov
and
loop
sbb
icebp
fstps
sub
sahf
cmc
jg
jg
mov
insl
fadds
and
cltd
or
loope
jmp
cmp
fistpl
jne
inc
push
inc
and
or
movsl
leave
xor
popf
rcrl
popa
mov
clc
adc
fisubl
push
rcrl
and
fs
jo
fbstp
pop
jge
push
push
hlt
int3
cmp
add
sub
hlt
std
adc
pop
loopne
gs
push
ljmp
jle
cmpl
lods
loopne
mov
or
xor
into
pop
push
push
rep
leave
cltd
loop
mov
sbb
mov
lea
insl
into
cmpxchg
mov
xor
movsl
in
mov
pop
push
xor
arpl
mov
inc
and
xor
fistpll
leave
add
dec
sbb
pushl
gs
push
cmp
lock
xor
and
clc
popf
push
scas
jo
inc
dec
push
or
add
outsl
push
gs
insb
stc
pop
es
fldcw
mov
out
repz
loope
es
add
mov
sbb
xor
xor
dec
gs
dec
add
sub
ss
push
aam
aad
or
add
dec
xor
pop
pop
stc
leave
xor
clc
jne
mov
sbb
add
and
fcomp
mov
mov
cld
jns
fbstp
ljmp
xchg
pop
faddl
cs
cltd
lahf
leave
jnp
das
outsl
mov
jecxz
int3
into
test
iret
arpl
stos
push
and
loope
int3
jbe
push
lret
jmp
aas
ret
stos
imul
hlt
xchg
pop
add
ss
fdivrs
lret
fisubrl
add
lcall
inc
push
jns
jmp
xchg
fld
fdivrs
mov
jecxz
enter
pop
cmp
adc
addw
leave
outsl
sbb
aas
fstl
ss
sarl
xor
dec
flds
cmp
jg
pushw
out
add
inc
cmp
ret
mov
jo
data16
loopne
nop
push
dec
jmp
leave
arpl
mul
repz
out
add
dec
xlat
add
inc
inc
shrb
sub
cmp
or
xor
and
dec
and
test
sbb
arpl
ds
pop
pop
mov
pop
push
fbstp
jbe
daa
mov
sub
clc
adc
ret
mov
xlat
out
mov
push
popa
xor
scas
fcmovu
cmp
in
scas
out
aaa
ss
leave
les
stos
imul
sub
fs
xchg
pop
mov
data16
cmp
pop
jl
sbb
push
ja
shr
pop
loope
mov
js
fucomp
xchg
mov
xchg
push
stos
pop
add
gs
cld
fnstsw
jmp
xchg
cmpsb
je
ret
xchg
test
pop
and
jp
movl
test
loopne
xor
ljmp
cs
pop
outsb
aaa
gs
sbb
stc
push
pushf
cli
out
repnz
ss
pop
out
fldl
xor
xor
jne
fs
push
inc
pop
aam
cmpsl
jne
jmp
xor
push
stc
sbb
mov
in
pop
lods
out
lods
pop
std
add
ja
int
aas
loopne
addr16
gs
xor
pop
cs
pop
jbe
shll
hlt
mov
inc
std
push
cmp
mov
mov
in
fstpl
fwait
jne
lret
int
lahf
add
iret
add
jae
jns
sub
and
movsl
arpl
mov
jne
js
and
and
push
aaa
fwait
and
ss
fistpl
add
stc
pop
sbb
aas
out
mov
push
cmp
jne
cli
jne
mov
lahf
adc
outsb
mov
das
lcall
gs
and
cmp
mov
pop
xchg
pop
and
and
sub
xorb
mov
cmp
lret
push
in
jb
lea
push
jne
mov
flds
cli
insl
shlb
lods
loopne
jecxz
push
fstps
lds
fstps
xchg
leave
ljmp
inc
jnp
cli
sbb
jns
test
outsl
mov
in
loopne
push
fcomip
aam
and
xchg
add
add
repz
loopne
cmp
cmpsl
popa
xchg
repz
out
scas
mov
inc
inc
addr16
cld
bound
gs
ret
mov
mov
adc
lods
jge
lods
sbb
std
push
pop
ds
movsl
popa
dec
pop
mov
repnz
pop
filds
ret
cmp
sub
loop
ljmp
xchg
sub
movsl
imull
adc
push
xchg
out
pop
fs
mov
loop
rcrl
push
dec
mov
pushf
out
addr16
les
mov
xchg
mov
mov
adc
lds
and
repnz
mov
jecxz
inc
hlt
fbstp
cli
pusha
ja
inc
fidivl
fimuls
addr16
pop
int
fs
mov
pusha
cmp
lds
or
dec
and
ret
mov
ret
inc
jae
leave
and
bound
ror
sbbb
dec
insl
dec
fists
icebp
add
sub
fldl2e
arpl
mul
xchg
jae
xor
mov
mov
inc
mov
mov
cmpsb
jmp
aaa
sbb
dec
ja
arpl
daa
xor
mov
and
div
inc
cli
pop
aam
clc
dec
loopne
push
jge
addr16
pop
mov
pop
sbb
dec
mov
and
rclb
push
outsl
lds
sbb
mov
in
pop
in
xor
fdiv
and
jns
data16
mov
lcall
imul
fcomip
xchg
inc
adc
and
xchg
xor
fldl
loopne
cltd
arpl
insl
xchg
inc
sub
loope
jne
pusha
jae
test
dec
pop
sbb
divb
mov
fildl
fs
and
mov
ja
add
cmpsb
mov
mov
gs
mov
shll
mov
mov
push
scas
push
or
sbb
test
add
dec
stos
pop
push
shrb
or
cmpsl
sub
and
jae
push
xlat
add
aad
pop
out
sbb
push
decl
lods
popf
sbb
gs
mov
mov
cmp
fcmovnb
arpl
sbb
mov
mov
loopne
mov
pushf
adc
xor
loope
xchg
repz
push
and
xchg
bound
mov
sahf
mov
pop
sbb
mov
push
sbbl
jno
jp
ss
mov
fsubs
repz
pop
pop
in
sub
mov
push
lcall
jl
pop
or
cmp
jmp
mov
insb
inc
loop
xchg
pop
iret
in
xor
jne
repz
push
cmpsb
and
xchg
and
adc
jnp
mov
ljmp
loope
mov
dec
lcall
xchg
sub
test
mov
cmp
andl
fiadds
sarl
pusha
add
add
pop
clc
xor
stos
jae
leave
cmpsb
sbb
jmp
movb
cltd
cmp
shll
xlat
pop
pop
pop
push
mov
sub
and
push
stos
fwait
gs
mov
jae
xchg
andl
lock
push
jae
sub
mov
xchg
xchg
sub
repz
out
add
fcomip
push
or
ss
out
in
stc
and
add
pop
sbb
gs
movsb
or
js
mov
movsl
adc
jb
mov
dec
gs
imul
decl
in
fs
es
icebp
repnz
pusha
xor
lret
test
inc
cmp
cmp
mov
ss
jae
test
fstp
sbb
pop
out
lcall
sahf
sti
cltd
fildll
sbb
dec
fidivl
adc
dec
push
or
stos
nop
fcmovu
fwait
pop
xchg
pop
add
sahf
test
jns
fiaddl
push
push
xchg
fcoms
arpl
add
movsl
sbb
and
in
jb
lahf
cmc
fistps
xchg
mov
mov
mov
push
into
add
cmpsb
mov
cwtl
xchg
mov
incb
dec
rorb
out
xchg
pop
inc
aam
cmp
cmp
xchg
imull
cmp
cltd
sbb
inc
sbb
sbbb
jecxz
ret
out
add
dec
cmp
or
out
gs
push
popf
push
add
add
or
inc
fmull
push
ljmp
sti
fdivr
jg
push
fcomps
sub
mov
or
mov
fdivs
mov
outsb
jmp
and
pop
ljmp
das
push
dec
int3
inc
add
pop
aad
mov
pop
test
push
faddl
cmp
fnsave
and
sub
inc
ffree
add
mov
or
pop
sbb
jne
bound
test
pop
int3
pop
loope
xor
or
mov
jno
dec
dec
jo
cmpb
test
sarl
fcoml
add
add
repnz
xorl
mov
dec
xor
scas
daa
addr16
mov
add
jns
push
cs
mov
adc
ds
les
cmp
push
xchg
test
push
inc
out
sbbl
inc
or
testl
pop
imul
out
clc
push
pusha
daa
xcrypt-ecb
cmpsl
paddusw
loopne
pop
mov
loopne
sbb
inc
mov
adc
ja
js
repz
pop
frstor
mov
aam
fbld
xchg
mov
push
test
mov
mov
movsb
mov
jmp
inc
aaa
sub
in
scas
ffree
scas
popf
inc
dec
scas
and
push
in
daa
mov
inc
mov
add
mulb
lea
and
imul
or
inc
and
push
mov
jle
aaa
aad
int3
imul
fwait
loop
leave
out
fdivs
sbb
addr16
lret
push
mov
inc
push
nop
cmc
mov
jnp
out
sub
mov
cs
mov
or
in
and
addl
lret
outsl
adc
out
sbb
ss
mov
mov
mov
in
adc
mov
add
popa
jecxz
bound
mov
ret
xchg
xor
sarb
xor
pop
int3
jne
sbb
shrb
cmp
in
pop
mov
sarb
push
cmp
xchg
jb
pop
pusha
xchg
je
sub
repnz
out
push
stc
mov
cmp
out
push
adc
insb
pop
dec
sahf
inc
je
lds
ret
xchg
and
shll
adc
jno
or
cmc
mov
pop
dec
idiv
cmp
das
adc
xor
scas
mov
mov
jb
cmp
movsb
adc
nop
jns
adc
les
ret
and
arpl
add
aas
in
inc
jo
mov
jbe
lods
mov
jecxz
mov
int3
cmp
push
stos
xchg
lods
loop
jg
out
sub
loop
hlt
cmpsl
jne
fmull
test
mov
repz
ss
js
dec
inc
test
imul
cmpsl
adc
test
and
mov
mov
gs
pop
mov
ss
decb
xor
ret
lods
push
jl
dec
fsubrs
push
add
xor
repz
cmp
ja
lds
inc
ret
in
adc
xlat
and
xchg
adc
jge
scas
loop
jne
insb
aaa
add
cltd
sub
cmp
loope
dec
inc
repz
mov
mov
pushf
mov
push
mov
divps
push
sub
scas
inc
sub
inc
sar
xchg
add
lret
popa
xor
test
mov
lret
jbe
stc
pop
ss
fadds
jbe
hlt
jl
xchg
cld
sahf
pop
sbb
addl
out
fcomi
in
push
sbb
pop
sub
jne
pop
orb
daa
xchg
test
mov
jo
pop
pop
mov
push
inc
pop
shr
xor
mov
popa
or
out
jo
outsl
cli
into
ss
outsb
mov
fmuls
jbe
mov
jb
mov
sub
fsubrp
pop
jbe
mov
std
mov
imul
pushf
push
fstpl
addl
leave
mov
mov
ficomps
cmpsl
push
push
xor
das
and
clc
sbb
popf
add
add
cmpsl
mov
insl
or
popf
outsl
sub
test
mov
pop
neg
mov
ds
int
jmp
xor
pop
leave
sub
and
sub
loop
loop
sbb
arpl
pop
xchg
int3
lock
inc
incb
insl
adc
lea
adc
and
shll
sbb
mov
test
push
xor
scas
int3
cmp
enter
xor
gs
pop
fimull
lahf
mov
loop
push
lock
push
sbb
sub
jb
leave
enter
xchg
ret
sbb
ret
mov
fidivrl
jne
aad
add
xor
cmp
cld
mov
add
dec
or
aad
jl
fmuls
sbb
cmp
pop
ds
lret
xor
jo
imul
aas
add
add
pop
cmc
fnstsw
or
lods
mov
daa
xchg
and
in
popa
out
xor
sti
adc
addr16
fsubrl
mov
mov
sbb
mov
and
dec
fbld
fwait
inc
lcall
mov
push
test
lock
inc
pop
shrl
or
xchg
push
mov
jne
rcrb
sarb
mov
cmp
jp
je
sbb
test
pop
roll
mov
cmp
cmpsb
fs
pop
daa
inc
shrl
gs
inc
test
cltd
mov
out
out
js
outsb
cmc
or
call
and
push
das
fistpl
cwtl
mov
hlt
pop
cmpsb
jo
call
shr
enter
shlb
out
pop
popa
dec
cmpb
xchg
repnz
jp
dec
into
xor
pop
fnstsw
pop
and
ljmp
insb
outsl
sbb
adc
sbb
jne
dec
cmpb
aam
pushl
add
sub
loop
mov
mov
ficoms
dec
and
mov
push
xchg
xchg
jbe
sbbl
sbb
add
sahf
mov
mov
push
pop
sbb
xchg
test
neg
gs
push
out
xor
fstpl
ljmp
mov
lahf
imul
xor
push
mov
dec
cld
filds
rolb
stc
lea
cmpb
pop
adc
xor
jbe
and
adc
ficoml
cmpsb
enter
fidivrl
and
mov
js
cld
mov
sbb
int3
gs
in
imul
fistpll
mov
sbb
xchg
cmp
dec
jecxz
movsl
or
push
test
daa
ss
jne
xchg
aaa
ja
in
lds
inc
push
cltd
ljmp
call
je,pn
sarl
fucomip
add
test
inc
sub
cmp
and
and
fists
sub
cmp
sbb
nop
xor
loope
scas
add
mov
out
popl
fs
pop
fstl
loopne
push
xor
test
jne
call
pop
movsl
stos
pop
dec
fwait
xchg
mov
xlat
push
fcompl
sub
add
lcall
cld
or
dec
jne
and
sbb
push
mov
lahf
loopne
pop
lcall
sub
cmpsl
in
xor
adc
out
inc
and
cmp
mov
jp
pop
gs
pop
loope
pushf
ret
xchg
sub
dec
insb
cs
add
push
jne
jo
jbe
and
cmp
inc
xor
jae
lahf
out
and
lock
sbb
repz
outsl
imull
pusha
cmp
dec
add
enter
inc
fcoml
pop
rcr
jbe
fstl
xchg
mov
fildl
nop
dec
jl
loope
in
les
out
call
sub
int
mov
popl
dec
add
sbb
mov
fistpll
xchg
mov
gs
mov
je
out
pop
ffree
cmp
mov
dec
jns
lret
push
jo
pop
jne
daa
push
out
lock
sbb
ficompl
pop
ret
jne
add
dec
cmc
fisubrs
roll
pop
in
lock
mov
mov
push
mov
out
ret
cld
aas
ret
adc
xchg
iret
cmpsl
pushfw
push
inc
stos
cmp
out
daa
pop
push
insl
sahf
in
bound
push
mov
mov
fs
xchg
or
pop
mov
mov
push
jne
scas
xchg
mov
or
aas
mov
sti
test
loopne
loop
aaa
xchg
icebp
inc
and
push
mov
scas
lcall
loope
cmp
inc
addb
cmpsb
sarl
jge
mov
pushl
cwtl
mov
sbb
dec
decl
fwait
aam
loopne
outsl
adc
pop
adc
mov
pop
test
jmp
mov
mov
fld
rclb
fwait
out
adc
jmp
xlat
movsl
in
sbb
sbb
lods
add
andb
and
sbb
je
push
adc
movsb
loopne
mov
jecxz
fsubrl
xlat
xchg
pop
cmp
xor
pop
out
fmull
push
add
pop
sbb
out
jmp
enter
arpl
scas
or
dec
jp
pushf
pop
sbb
xchg
je
push
mov
mov
sub
xor
ret
mov
xor
inc
stos
adc
je
daa
jae
cltd
pop
xchg
mov
js
sub
pop
add
xor
ret
cmp
or
clc
jne
sti
leave
gs
outsb
xlat
cltd
pop
or
xor
imul
xchg
push
ret
pop
inc
repnz
jl
xchg
dec
jmp
add
dec
push
sub
push
and
fistl
mov
push
and
negb
mov
test
or
xchg
negl
cmp
fisttpll
loope
and
stos
xchg
mov
xor
test
mov
sbb
mov
inc
pop
sub
xchg
test
mov
xchg
push
fsubrl
scas
sbb
jp
ds
mov
cmpsb
pushf
pop
addb
jb
addr16
add
mov
sbb
xchg
neg
jae
ja
sub
fs
stc
pop
fimull
mov
loopw
or
mov
lret
jmp
faddl
insb
push
ret
sbb
or
pop
jnp
hlt
sbb
mov
inc
int
mov
add
fdivr
test
mov
pop
sub
ret
mov
sahf
movsb
out
fnsave
daa
cltd
gs
mov
loope
scas
inc
inc
mov
push
xor
push
das
xchg
sbb
xchg
dec
std
mov
div
xchg
and
pop
pop
or
repnz
movb
aas
sbb
fwait
std
jg
shrb
imul
test
lret
notl
sbb
sbb
das
pop
mov
aad
movsb
or
pop
xchg
sahf
test
add
scas
scas
out
dec
xchg
mov
fiaddl
pop
aas
cmp
xor
fsubp
xchg
sbb
clc
fbstp
pop
inc
mov
imull
or
jb
adc
and
pop
push
loopne
jne
and
into
fistpll
push
dec
or
ss
mov
loope
add
xchg
jmp
out
adc
push
pop
xlat
mov
gs
adc
mov
outsl
add
xor
sbb
xlat
jmp
or
pop
mov
fcmovnu
pusha
xchg
int
movsl
xchg
popl
xchg
cltd
repz
push
push
mov
add
xchg
mov
jg
in
ds
leave
cmp
adc
testl
pop
notb
enter
and
xchg
jne
mov
xlat
dec
xchg
pushf
pop
push
push
cmp
test
addl
test
xchg
or
add
and
pop
shlb
mov
or
call
sti
rorb
dec
addb
pop
cmp
pop
jne
leave
push
repz
dec
adc
and
xchg
pop
imul
gs
sub
mov
mov
jns
mov
or
sub
mov
rolb
xchg
xlat
adc
fsubp
ret
dec
imul
bound
clc
push
or
jbe
jge
inc
sub
cmp
cld
mull
jle
adc
xor
or
pop
das
jae
mov
cmpsb
ret
addr16
ljmp
cli
and
jl
push
lea
js
imul
lahf
pop
mov
movsl
mov
pushf
mov
pop
push
pop
sub
fildl
pop
fnstenv
dec
pop
jne
pop
pop
inc
cmp
aaa
into
jno
out
pop
sbb
fildl
nop
push
pop
jmp
cli
mov
sub
and
outsb
pop
mov
loopne
jg
movsl
int
shlb
dec
gs
xor
les
loopne
scas
frndint
insl
ds
adcb
jne
push
or
fldenv
inc
jg
sbb
sbb
or
mov
das
mov
daa
adc
daa
cmp
lds
loopne
es
clc
inc
xor
pushf
fwait
gs
or
lea
push
imul
or
movsl
maxps
scas
and
out
ljmp
pop
jnp
arpl
push
push
pop
jo
in
fstps
mov
clc
sub
test
pop
test
add
cltd
and
lods
mov
jnp
push
in
xchg
gs
xchg
out
mov
inc
sbb
xchg
das
int3
jp
shll
insb
mov
in
das
mov
loope
push
test
jl
stc
cmp
popa
mov
push
scas
test
mov
adc
in
sbb
xor
es
lea
loope
fsts
jne
in
fildll
cmp
add
mov
adc
adc
add
inc
jne
pop
js
iret
sbb
bound
fwait
lret
xchg
mov
push
iret
js
jmp
mov
or
fwait
pop
and
fucomip
mov
mov
pop
pop
es
push
cmpsb
or
push
and
jb
aad
xor
pop
push
nop
jae
imul
cmc
les
sti
mov
popf
dec
fmuls
xchg
in
xor
int3
rcrl
fwait
push
cmp
jle
pop
mov
mov
loope
mov
pop
push
fildl
imul
jp
mov
or
sub
jae
test
sbb
inc
lcall
push
jns
jae
jmp
xchg
fisubl
inc
rcrb
sub
or
push
fisubl
out
pop
inc
mov
jns
mov
xlat
sbb
adc
pop
xor
fcomi
jge
insl
popf
cmp
jbe
fildll
fldt
mov
pop
arpl
mov
and
dec
fsubr
inc
push
cmp
cmp
call
and
xor
add
push
rorl
dec
arpl
aad
or
int
mov
xor
pop
inc
push
add
xlat
cwtl
lock
data16
call
scas
enter
dec
lahf
or
cmc
inc
lcall
xlat
jg
arpl
pop
std
sahf
ja
fbstp
bound
push
lods
jo
ficoml
stos
enter
divl
cmpsb
adc
cltd
dec
andb
ret
push
cmc
sub
gs
in
je
pop
inc
fildll
adc
int
mov
out
xor
mov
ficoml
sahf
and
out
rcr
imull
fsubrs
mov
push
int
xor
mov
shr
dec
in
enter
mov
insl
das
ja
lods
into
and
lds
adc
in
pop
xlat
or
push
arpl
lock
fidivl
arpl
fcmove
shll
lret
xor
dec
fs
les
loopne
cwtl
push
lods
sarb
outsb
movl
enter
mov
cmp
dec
enter
rcrb
xchg
popf
or
adc
ds
sahf
pop
sbb
cmp
int
pop
ljmp
pop
inc
out
dec
jae
sbb
ret
out
call
fwait
pop
ds
push
shr
cmpl
mov
fsubs
int
aaa
mov
dec
add
or
addr16
arpl
pop
pushf
lock
push
insb
mov
data16
shlb
dec
jmp
flds
clc
fcmovnb
cs
and
clc
xchg
cld
xchg
or
mov
cmp
icebp
pop
orb
pop
cmp
add
sbb
in
add
dec
daa
xor
cli
pop
inc
mov
pop
push
pop
and
std
push
jecxz
clc
pop
add
push
movsb
ljmp
stc
push
adc
lcall
xchg
cmp
inc
call
std
lods
enter
pop
cltd
aam
mov
aaa
imul
stos
mov
enter
xchg
pop
loope
arpl
fwait
in
mov
inc
mov
dec
cs
out
ja
stc
jne
loopne
inc
aad
xchg
aam
inc
loop
lock
or
mov
mov
mov
loop
pop
dec
scas
inc
mov
mov
ss
loopne
pop
je
imul
jno
xor
mov
push
dec
mov
popl
sbb
mov
xchg
loopne
in
lds
add
faddl
xor
push
arpl
lods
inc
and
ljmp
jo
cmp
sbb
pop
xchg
cmp
movsl
add
cltd
imul
call
lret
notb
dec
out
pusha
repz
mov
sub
sahf
loopne
jecxz
or
push
dec
jg
mov
cmp
repnz
cwtl
in
or
sbb
sbb
inc
out
push
add
shl
mov
in
into
adc
js
push
or
xchg
jb
pop
sbb
clc
add
fnstsw
adc
dec
mov
inc
xchg
aas
push
jecxz
xchg
pop
roll
gs
pop
cmpsl
scas
lods
pop
push
gs
mov
sub
stos
sti
inc
flds
sbb
es
popa
ss
test
mov
out
pusha
fcompl
pop
daa
mov
jne
jbe
insb
fnsave
push
lcall
andb
and
sbb
cltd
push
xor
stos
gs
push
aaa
pop
adc
outsl
sbb
scas
inc
push
add
jp
gs
push
and
inc
add
fwait
iret
xchg
adc
aaa
mov
jle
push
sarb
sbb
leave
mov
pop
popf
mov
loopne
test
in
leave
in
sub
ret
ret
andb
mov
adc
rclb
gs
sahf
ficompl
in
lret
pop
fiaddl
dec
jne
sbb
insb
pop
movl
stc
stos
fldcw
data16
push
outsl
hlt
mov
adc
push
mov
popf
data16
and
call
movsl
push
sbb
shlb
ficomps
outsb
in
jge
lock
insb
jne
es
fwait
loope
mov
gs
push
arpl
inc
loopne
pop
xor
subl
jns
or
lock
les
sbb
sahf
negl
and
mov
mov
test
out
push
hlt
or
cmp
aas
or
cmpsl
inc
cwtl
jl
test
and
xchg
add
arpl
cli
mov
sbbb
js
jle
loope
shr
insb
cld
out
fs
dec
xor
and
mov
inc
xchg
push
push
push
addr16
xor
and
cmp
jp
fists
das
lret
lar
jmp
and
pop
out
out
xlat
aas
dec
add
fisubrs
out
fwait
lahf
jle
mov
cmp
jo
xlat
push
dec
push
cmp
cmpl
popf
fcmove
cmpsb
popf
pop
addr16
fwait
inc
sbb
and
sub
ret
pop
jb
adc
sub
rolb
pop
lahf
dec
lods
adc
jmp
inc
sbb
cmp
loopne
movsl
and
outsb
xlat
xor
mov
mov
xlat
pop
movsl
cmp
mov
out
cmc
aad
repnz
jmp
movsb
loopne
xlat
lret
popf
scas
scas
fisubrs
icebp
xlat
pop
mov
and
fstps
sub
inc
dec
inc
pop
mov
in
pop
pop
sahf
cmp
aas
fisttpll
xlat
cmp
es
adc
xlat
lea
push
test
shl
fbld
pop
jg
xlat
xchg
and
add
inc
pop
rolb
out
push
pop
push
dec
xchg
mov
iret
movsl
stos
scas
outsb
outsl
fmuls
and
or
xlat
in
dec
sub
push
and
dec
pop
int3
test
push
pop
mov
pop
sbb
inc
pop
or
cmp
enter
jmp
popa
mov
pop
pop
movsb
clc
cld
in
xlat
outsl
push
add
add
in
mov
and
mov
lock
push
push
dec
sbb
in
int3
pop
popf
scas
ljmp
jne
negb
and
les
mov
ftst
or
adc
pop
xor
mov
bound
cmp
in
or
inc
adc
pop
push
lahf
repz
ljmp
inc
or
in
pusha
and
add
ficompl
add
adc
jecxz
mov
pop
out
dec
dec
sti
js
push
loope
rcrl
jo
call
pop
sbb
and
insb
int3
fbstp
sub
inc
out
pop
pusha
into
mov
jmp
mov
jge
cmp
pop
cmp
xlat
sbb
push
inc
sbb
gs
adc
out
test
sub
lods
push
or
mov
in
sub
mov
jnp
adc
push
dec
push
loopne
sar
rcr
cmp
mov
arpl
in
dec
mov
jne
sbb
xlat
dec
pop
xor
enter
outsl
aas
and
mov
popa
push
xor
fs
std
in
cwtl
call
fbld
add
adc
jnp
test
pop
repz
inc
stc
in
push
fistl
int3
pushf
mov
jo
pop
xchg
lret
loopne
xchg
xlat
movsl
leave
sub
xlat
dec
pop
fdivr
mov
cmc
jmp
mov
inc
inc
mov
lret
sub
jl
sub
clc
jnp
pop
cltd
test
sti
cli
lahf
fnstsw
std
cmpsb
xlat
and
add
call
jge
fisubl
dec
lock
xlat
push
loop
int3
xchg
lods
scas
out
fucomip
arpl
mov
and
dec
jae
movsb
add
imul
lret
pusha
pop
out
divl
or
inc
push
movsb
call
add
xlat
push
inc
add
rcrl
pop
cli
add
cwtl
testl
shr
xlat
mov
dec
sub
xlat
push
push
fs
pop
dec
xlat
mov
xchg
push
leave
scas
inc
xor
xlat
jo
cld
aaa
ret
and
xlat
mov
cmc
dec
xlat
sarb
popf
mov
nop
adc
xlat
and
pop
pop
aad
imull
or
mov
jns
imul
pop
xor
push
xlat
jecxz
jl
xlat
dec
mov
and
lds
mov
xlat
mov
cli
sub
mov
notb
hlt
jbe
clc
cmpsb
imul
sarl
push
in
cli
frstor
pusha
int
in
jp
or
add
push
dec
in
jmp
xor
xor
adc
xchg
scas
in
ljmp
sub
mov
jmp
push
ss
lds
test
loopne
xlat
pop
inc
fldlg2
stos
rcl
shlb
xorb
xor
sub
ret
adc
jmp
addr16
rolb
cmp
dec
or
cmp
lods
or
dec
cs
mov
clc
xlat
push
dec
cmc
loope
push
adc
xor
and
not
add
lds
mov
xor
outsb
movl
adc
sti
ffreep
push
js
mov
aad
imul
mov
push
popf
pop
inc
xchg
jno
fbld
and
mov
lock
push
xor
repz
imul
shl
pop
or
push
push
xor
adc
xchg
dec
fsubrs
dec
xlat
jle
dec
adc
xlat
mov
loopne
or
xor
sub
pusha
xlat
mov
jg
repz
inc
sub
out
mov
in
fbld
and
jmp
vpsubusb
fdivr
push
mov
ds
pop
mov
mov
or
out
arpl
stos
lahf
xlat
cld
sub
notb
ret
xlat
dec
sti
bound
sub
dec
or
out
lds
cld
jecxz
inc
rorl
mov
push
jae
arpl
dec
dec
sbb
jnp
push
jns
fcmovne
sub
jne
or
popa
cmc
fsubr
sub
fsubrp
test
iret
or
pop
push
sub
in
lret
fs
xlat
sub
adc
xlat
xchg
nop
push
add
loop
incb
addr16
icebp
js
mov
lds
outsb
mov
lock
push
inc
mov
test
popf
out
shrl
sbb
jne
clc
repz
lds
xlat
sbb
push
mov
and
jo
inc
adc
add
push
pop
cmp
test
dec
outsb
es
xlat
add
push
sub
sbb
jmp
adc
jno
push
pop
sbb
enter
scas
jmp
jecxz
adc
daa
pop
add
das
into
out
jae
pushf
or
enter
lcall
aaa
hlt
je
mov
in
mov
test
mov
adc
aas
sub
clc
push
jnp
pusha
xlat
sub
mov
int3
push
rclb
inc
push
mov
dec
jecxz
aaa
pop
add
loopne
out
mov
sbb
orb
cwtl
jae
jnp
push
sbb
lret
insb
clc
fsubrs
jecxz
sub
hlt
xlat
mov
dec
xor
pop
pop
cmp
add
iret
test
repz
or
jbe
sbb
lahf
loopne
push
xchg
pop
inc
cmp
mov
std
in
xlat
push
xchg
add
sahf
out
movsb
out
dec
enter
fmulp
in
loopne
lahf
or
sbb
sub
lea
dec
xchg
sub
add
loop
inc
rorb
xchg
dec
xlat
icebp
pop
mov
and
and
cmp
mov
cmc
in
lds
mov
pop
gs
xor
rcr
mov
shl
add
pop
add
daa
repz
push
aam
loopne
mov
insb
push
xlat
cmc
aad
lahf
decb
push
pop
mov
push
pop
mov
dec
cltd
lret
push
stos
fwait
lret
sbb
adc
orl
clc
or
loope
fistl
xlat
cwtl
mov
mov
jne
or
pop
inc
pop
mov
pop
icebp
out
mov
push
gs
std
fs
pop
mov
stos
les
push
jb
push
movsl
add
notl
inc
fbstp
insl
lods
cmp
mov
call
popf
nop
icebp
mov
inc
clc
xlat
popa
ror
div
xlat
in
dec
in
push
inc
xchg
fildll
xlat
mov
add
xor
xchg
into
fnstcw
repz
pop
lret
dec
sub
push
push
xlat
mov
cmp
out
lret
stos
xor
out
sub
jmp
flds
out
xlat
lahf
lock
jbe
adc
push
xchg
dec
mov
out
daa
inc
cli
lcall
jmp
or
aam
fistpll
std
decl
pop
add
enter
out
fbstp
pop
push
cld
xlat
jnp
push
inc
pop
mov
jns
inc
gs
aaa
mov
rcll
les
lds
mov
sbb
clc
cmp
out
addr16
nop
test
clc
mov
push
jnp
dec
jns
fmulp
testl
inc
out
in
aaa
xlat
sub
in
cs
into
inc
sub
cmp
xlat
rorb
jae
sub
ds
cmp
aas
sbb
out
mull
jl
test
cmpsl
xlat
jge
push
jecxz
mov
jbe
pop
xchg
fnstsw
sbbb
gs
lret
icebp
idivl
test
clc
daa
insl
int3
loop
push
loopne
pop
xchg
data16
xlat
int
inc
push
jae
test
sbb
mov
pop
outsb
dec
fst
jo
fwait
cmp
add
xlat
popf
jmp
adc
pmaxsw
xlat
clc
mov
xchg
xlat
rclb
pop
or
daa
dec
out
imul
push
stos
jge
enter
jecxz
data16
lret
xlat
jne
jl
iret
imul
out
add
add
ficomps
fadd
pop
xlat
dec
cmp
test
leave
clc
xlat
or
cli
in
pusha
sbb
cmp
xor
rsm
nop
mul
shlb
cwtl
mov
jnp
dec
xlat
leave
int
int3
jns
sbb
stc
fsubl
sub
icebp
adc
in
pushf
cvtdq2ps
dec
xor
and
fs
pop
jns
pop
in
movsl
dec
sub
imul
insb
clc
xchg
sbb
jbe
sbb
mov
popf
cmpsl
mov
fistpl
iret
jmp
xlat
xor
inc
mov
jns
push
popa
lods
xlat
inc
shlb
mov
push
bound
and
inc
push
out
sub
fisubs
xlat
jl
in
add
fwait
pop
sbb
lret
jmp
xor
hlt
iret
pop
dec
cltd
mov
notb
shll
adc
stc
dec
icebp
jp
int
pop
jmp
fstps
or
sbb
sub
pusha
out
lods
ficoml
sbb
dec
cs
nop
stc
jmp
push
sbb
dec
mov
and
adc
pop
shrd
popf
cmp
fildl
and
inc
pop
xlat
and
push
fxch
xchg
jmp
adc
ficomps
fcom
sub
lret
shlb
xchg
cmp
dec
mov
fnstcw
xlat
or
arpl
cs
loopne
imul
out
mov
insb
xlat
pop
ret
xchg
js
mov
lds
imul
icebp
push
xor
mov
dec
popf
ja
lea
and
leave
pop
imul
cmpsb
or
push
mov
push
push
mov
stos
xor
xor
xchg
cmp
add
cli
xlat
cmp
push
push
test
push
xchg
outsl
cmp
pmovmskb
jbe
lea
xor
inc
xor
cmp
inc
xor
push
jg
xlat
cmp
mov
inc
in
outsl
mov
xlat
bound
xor
movsl
dec
jmp
leave
loopne
xchg
pop
imul
jmp
cmp
fs
adc
mov
aas
pusha
enter
fimull
pop
stos
mov
mov
inc
cmp
dec
xlat
adc
mov
add
xchg
addr16
pusha
pop
xlat
das
dec
dec
jnp
dec
pop
xlat
in
sbb
or
pusha
ficoms
or
sbb
stos
sbb
dec
pop
in
in
arpl
or
jg
adc
push
mov
push
shl
fldenv
in
cmp
pop
sub
push
and
mov
adc
fcompl
push
push
jp
and
pop
or
ljmp
push
cwtl
pop
jp
mov
lret
out
fcoml
dec
add
add
shr
andl
insl
pop
or
and
outsb
ljmp
inc
dec
xchg
loop
push
jp
fsubrp
sbb
jg
sub
fnstenv
inc
mov
sahf
jp
and
mov
pop
fisubrs
lahf
fstpt
jp
stos
enter
lret
in
push
lcall
sub
std
ds
pop
sarl
out
ljmp
mov
push
stos
pop
mov
mov
or
sbb
lcall
loop
pop
cwtl
fisubrl
ljmp
cwtl
rorb
test
jecxz
sbb
ljmp
nop
stos
jne
in
pop
fcomp
mov
pop
pop
loop
imul
mov
adc
cmc
arpl
lahf
cwtl
adc
mov
stos
push
jecxz
xor
sbb
sub
inc
push
mov
cli
lcall
ja
lret
sti
fcomps
loope
scas
sbb
incb
or
movsb
or
cli
out
subl
cmc
inc
jge
pop
push
jmp
mov
dec
lret
fimull
movsb
lcall
push
cli
test
popf
jp
or
pop
sbb
ljmp
cmp
pop
jmp
lock
in
imul
fidivrl
outsb
dec
jnp
out
sbb
cwtl
mov
divb
dec
imul
and
pop
lcall
fcomps
xor
push
mov
fistpl
dec
mov
sbb
decb
mov
push
mov
jne
cwtl
ljmp
dec
push
or
rcrb
or
mov
mov
pop
hlt
pop
out
pop
mov
jae
in
lcall
mov
mov
jo
incb
lahf
dec
out
inc
jecxz
inc
mov
shr
push
and
pusha
xchg
jmp
call
pop
xor
fld
and
movsb
pop
ss
mov
mov
jno
lods
jecxz
jge
fisubl
rcrl
sbb
jns
out
dec
in
ret
and
shll
xchg
xchg
inc
mov
jmp
rorl
and
inc
pop
sbb
ret
nop
xor
aaa
pop
jnp
mov
jbe
mov
das
jne
push
repz
test
sbb
mov
sub
loope
imul
add
xchg
inc
or
dec
and
sahf
mov
rcrb
ss
push
lods
xchg
arpl
push
arpl
inc
mov
pop
mov
dec
loop
mov
loope
mov
push
push
sbb
popa
jne
popf
fldenv
jo
mov
into
add
xor
mov
mov
push
sbb
push
mul
js
stos
and
popa
jne
lds
int
nop
push
in
mov
xor
pop
mov
scas
pop
pop
jecxz
fwait
push
xrelease
jo
loope
mov
lret
dec
mull
mov
shll
sbb
xchg
ss
or
repnz
cmp
lods
imul
fwait
stos
lcall
lret
ljmp
mov
sub
out
lret
fwait
out
sub
mov
out
pop
or
stos
imul
sbb
out
sub
cmp
sub
lret
pop
out
lahf
mov
scas
fwait
lods
mov
loop
sbb
mov
and
ret
rcll
lods
rorb
inc
sbbl
ss
pop
rcrl
ret
add
lahf
xor
andl
xlat
jae
adc
loope
ret
popa
test
insb
mov
cs
outsb
pop
aad
xlat
mov
imul
add
mov
and
pusha
movb
push
pushl
ret
rol
jmp
lea
jne
push
lea
jne
shr
clc
mov
rcr
rcl
clc
sub
bts
mov
call
push
dec
xor
jp
and
cmpb
aaa
fsubrl
push
nop
sbb
jle
xchg
movsl
push
dec
mov
cmpsb
cmpsl
pop
adc
pop
and
sub
inc
lret
or
jbe
xor
mov
scas
jbe
out
inc
inc
cmpsb
inc
js
jo
lea
or
stos
sub
cld
xlat
neg
insl
inc
iret
test
or
mov
push
jmp
lcall
ss
mov
inc
inc
sarl
push
pop
rcr
cli
xchg
sti
shlb
or
jne
fs
cmp
mov
fisubrs
mov
adc
cld
mov
adc
mov
out
sti
outsb
scas
jbe
jb
jl
insb
clc
fdivrl
add
sub
mov
bt
pushl
popl
call
ficoml
and
outsl
fsubrs
out
mov
mov
adc
jp
mov
popa
sbb
mov
mov
loopne
pop
ret
aad
stc
mov
idiv
aaa
rcl
push
push
push
loopne
xchg
mov
jne
mov
das
sub
lods
cmp
sub
sub
add
sahf
push
imull
dec
test
mov
or
dec
cmp
call
dec
mov
sbb
adc
push
mov
push
jbe
sahf
pop
pop
mov
and
pop
pushf
push
std
loope
ljmp
sub
inc
and
push
pop
cmc
repnz
lcall
and
fcmovbe
pusha
insb
xchg
rcrb
out
sub
fsubrl
fidivs
add
fnsave
and
repnz
in
cmp
in
sub
lret
mov
into
adc
mov
insl
cld
or
lret
addr16
cwtl
ret
bound
fs
push
and
mov
xchg
dec
cmp
int3
enter
pusha
xor
push
and
lds
push
nop
sbb
mov
pop
loop
mov
jle
mov
mov
sarb
test
push
ret
out
lret
jno
outsb
fnstsw
sahf
imul
mov
mov
dec
or
dec
mov
js
add
lret
xchg
push
ljmp
call
or
test
mov
add
sti
loopne
add
imul
clc
bt
add
pushf
lea
jmp
movb
lea
je
stc
call
jb
xchg
and
cmc
add
inc
sbb
andl
add
and
or
add
or
aas
push
inc
jle
jnp
or
add
mov
insl
xor
jg
fcmovne
std
mov
fcompl
fs
js
into
add
mov
sub
aad
lea
std
sub
test
bound
fdivrl
sub
mov
inc
cmpsl
mov
push
loop
push
add
sub
and
jg
sti
ffreep
ja
adc
or
sub
push
out
std
dec
inc
call
inc
adc
mov
js
inc
fsubs
or
ds
pop
fs
adcb
pushf
xor
push
stos
outsb
lea
cmp
lret
iret
mov
sub
lret
nop
jl
inc
sub
mov
xchg
stos
jae
pop
push
out
xchg
movsb
aam
psllq
jae
jmp
arpl
xor
fbld
movsb
push
mov
popf
jno
mov
pop
push
lods
clc
pusha
stc
not
pusha
cmp
neg
pushf
clc
cmp
sub
jmp
cmp
pusha
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
testl
mov
push
movw
pusha
lea
jmp
lods
lock
ss
movsb
ret
sub
aad
add
add
ss
iret
test
and
daa
rclb
push
pop
jb
pop
into
lods
sbb
lea
cmpsl
xchg
push
jg
jl
or
scas
jne
xchg
mov
pop
cltd
add
ljmp
fstps
or
js
and
push
in
mov
lret
jmp
adc
jl
dec
lods
adc
lcall
mov
inc
inc
inc
jg
fimuls
stc
out
stc
adc
xchg
in
xchg
test
and
xchg
xor
iret
mov
cmp
out
insl
addb
xchg
enter
cmp
test
cmp
icebp
clc
fiadds
dec
pop
pushf
es
fisttpll
mov
jge
out
sub
push
ret
nop
adc
jecxz
cmp
aam
xchg
jb
push
insl
sbb
dec
lea
sub
pop
arpl
lret
ficoms
call
inc
lea
pusha
mov
mov
lea
call
call
pushf
movl
call
movl
lea
jbe
clc
cmc
sub
sbb
mov
inc
pusha
and
clc
mov
add
inc
pushf
pop
add
or
push
shr
cmp
mov
cmp
bswap
add
movsbl
pop
pop
mov
lea
pusha
pushf
jmp
jmp
flds
fsubrl
cmc
add
mov
fcom
ret
flds
loope
shll
pushl
jle
cli
aad
mov
add
into
arpl
jle
arpl
lahf
inc
popf
out
jge
xor
xchg
inc
les
mov
mov
fsubrs
jmp
push
add
sub
pop
add
rcll
add
leave
push
add
sub
add
loope
add
leave
push
add
sub
add
push
add
leave
push
add
xchg
lods
mov
stos
add
mov
jb
mov
adc
pop
sahf
mov
ja
and
mov
jne
mov
xor
and
and
xor
adc
je
ljmp
mov
jns
sub
adc
icebp
mov
sub
sbb
in
out
sarl
xor
and
pushf
repnz
insl
imul
rcll
or
pop
std
pop
mov
sbb
or
pop
daa
or
xor
dec
mov
add
lods
and
sbb
movl
mov
lgs
adc
gs
fmull
inc
jne
sbb
sub
test
repnz
in
movsl
or
mov
pop
filds
dec
gs
inc
jbe
ja
mov
imul
cmp
aas
xor
xlat
add
pop
fcoms
les
aad
pop
imul
jecxz
popf
lcall
inc
pop
push
adc
dec
dec
aam
ja
fsubl
and
fisttpl
in
cmp
cmpsl
out
sub
mov
scas
rclb
mov
pop
mov
repnz
dec
or
cmp
fisubl
dec
shl
mov
outsb
scas
cld
faddl
movsb
fisttpl
xor
lahf
inc
stos
mov
pop
daa
mov
sub
inc
into
or
mov
xchg
pop
lcall
sbb
mov
inc
and
jmp
andb
lret
ljmp
pop
pop
clc
out
roll
xor
sbb
cs
testl
mov
mov
lahf
addr16
inc
inc
and
and
cltd
cwtl
fs
or
rorb
movsl
mov
pop
cs
push
pop
sbb
dec
lret
inc
out
inc
mov
sahf
sbb
jg
cmpsl
xor
adc
fcomps
lock
fwait
xlat
cmp
sub
out
xlat
std
cmp
popf
adc
mov
ja
cltd
cmp
pop
sbb
out
xor
js
push
popf
cmpb
call
pushf
jo
pop
jmp
imul
clc
outsb
fisubrs
faddl
in
addr16
arpl
lock
mov
addr16
pop
push
adc
mov
call
addr16
mov
or
in
es
mov
mov
jmp
lods
fistl
mov
xor
mov
inc
pop
adc
pop
jbe
inc
inc
jbe
lock
mov
mov
dec
int3
rolb
js
scas
aas
call
mov
fldl
xor
imul
movsb
addr16
or
fdivrs
cmp
fcomp
test
int3
ja
daa
or
fsubrl
in
mov
and
aaa
lock
pop
stos
or
mov
lret
or
mov
popf
push
out
jge
or
fsubrs
out
jg
jmp
out
sbb
loop
push
ljmp
sbbl
mov
pop
inc
fsubr
pop
lock
pop
cli
add
sbb
out
outsl
mov
movsl
popa
push
arpl
pop
sbb
push
addr16
adc
mov
outsl
pop
clc
sbb
pusha
imul
test
jmp
in
addr16
fs
stc
and
call
fnstcw
sbb
arpl
xchg
pusha
fcomps
call
leave
hlt
stc
pop
sbb
and
and
lock
dec
fisubrs
clc
sbb
hlt
stc
fwait
sbb
sub
and
push
and
out
fisttps
jmp
xchg
aas
sbb
test
fdivrl
push
and
mull
sub
sahf
sbb
pop
pop
pop
pusha
dec
fldl2e
fcmovne
in
ud0
sbb
jp
cmc
push
sti
jge
pop
and
pop
and
sub
sahf
sbb
pop
or
dec
pop
popa
mov
stos
fcoml
pop
in
push
lods
xchg
es
fcmovu
stos
pop
sub
ljmp
cwtl
pushf
addb
dec
fnstsw
fwait
pop
std
push
jecxz
pop
cltd
dec
lahf
mov
repz
cli
addr16
xor
test
repz
ljmp
pusha
imul
pop
lock
sbb
and
daa
fwait
sub
bound
cmpsl
lcall
fcomps
movsb
fisttps
out
or
xchg
xchg
sbb
cmp
pushf
jp
dec
movsb
dec
mov
aas
outsl
push
mov
fwait
mov
push
cltd
mov
cmpsb
push
fstpt
pop
mov
outsl
and
and
movsl
push
push
in
sbb
in
push
outsl
mov
mov
push
lock
stc
mov
cmp
or
sbb
imul
ftst
jp
pop
addr16
cmp
sbb
pop
call
in
cmpsb
fcomps
mov
cltd
sub
and
fs
xchg
popa
cmpb
push
outsl
sahf
clc
pop
stc
ficompl
popa
addr16
pop
jmp
cmp
sbb
lahf
fbld
outsl
pusha
call
shl
lock
bound
stos
cmp
sbb
and
in
and
stc
addr16
pushf
pusha
outsl
fs
sbb
in
pop
inc
jbe
sbb
and
sahf
dec
andl
and
call
inc
addr16
jmp
fldenv
andl
or
cmpsb
adc
stc
and
gs
or
jmp
mov
cwtl
jg
fstps
sbb
notl
negl
cmpsl
loope
push
pop
mov
negl
sbb
push
or
pop
imul
lcall
pusha
ljmp
push
call
ja
cltd
fcomps
sbb
or
imul
sbb
push
sbb
or
cmp
cld
dec
pop
arpl
pop
loope
dec
loopne
or
stos
pop
negl
push
js
jmp
push
pushf
mov
ja
push
stc
in
arpl
pop
fistpl
mov
stc
std
bound
xchg
mov
pop
loope
dec
and
addr16
pop
inc
cmp
sub
pop
pushf
fisttpl
outsl
in
pop
negl
push
or
or
loopne
negb
out
pop
and
xchg
pop
sbb
inc
mov
mov
pushf
sub
out
mov
sub
pop
and
pop
fsubl
and
cmp
fwait
pop
and
and
sbb
or
cmp
fimull
div
mov
dec
lahf
sbb
mov
xor
lock
and
pop
stc
pop
dec
cmpsl
or
push
sbb
push
cwtl
daa
dec
lock
loopne
xchg
call
jmp
fldt
outsl
fisubrs
mov
fistpll
xchg
enter
pop
sub
and
push
sbb
pop
insl
lock
add
sub
pop
cmp
sbb
push
pop
inc
mov
mov
leave
sbb
pop
dec
lock
stc
into
sbb
push
outsl
xchg
clc
rcrl
adc
cltd
call
dec
mov
in
sbb
call
addr16
pop
es
fisubs
imul
mov
xchg
jmp
sub
filds
pop
lock
into
fcomps
je
xchg
jmp
xchg
es
adc
into
or
add
sbb
cmpsb
popf
dec
adc
add
enter
dec
and
push
sbb
notb
fisttpll
lret
lds
sbb
arpl
shll
mov
jmp
cmpsb
sbb
enter
jnp
gs
das
lds
arpl
mov
in
mov
xor
mov
mov
stos
or
mov
and
sbb
mov
sti
gs
cwtl
jg
in
push
fstps
movsb
or
lret
mov
sub
insb
pop
ja
pop
add
fcompl
das
loopne
add
and
ja
es
fcompl
sbb
loopne
icebp
push
or
cwtl
pop
and
push
and
insb
pusha
ja
out
add
pop
loope
fidivl
pop
and
stos
dec
pop
pushf
pop
adc
loopne
lret
lret
or
jmp
lods
xlat
cli
js
push
mov
inc
add
ja
div
adc
jecxz
addr16
cmc
mov
test
fwait
jg
ljmp
push
clc
sbb
fbstp
lods
xchg
and
fisubrl
mov
jg
pop
sbbb
mov
in
int
mov
popf
sub
lods
mov
int
mov
and
jle
out
fidivrs
jnp
mov
mov
in
in
in
in
in
in
in
in
in
in
in
push
inc
fimull
movsl
push
sbb
pop
pop
insl
pop
jge
cmc
lods
repz
jnp
mov
addr16
mov
xchg
fidivrs
paddw
jle
fmuls
and
sbb
mov
or
pop
xchg
jmp
scas
jno
inc
lea
or
fsts
pusha
or
mov
jb
dec
sbb
and
pusha
mov
or
xchg
push
not
in
shlb
pop
pop
fcoms
insb
in
outsl
into
mov
add
mov
insl
mov
int
cli
cmp
fcompl
jmp
ja
fimuls
push
in
int3
insl
fs
sub
addr16
sub
adcb
into
lods
jns
pop
stos
sub
fstpl
sbb
fwait
pop
movsl
jbe
imul
adc
pop
mov
dec
or
cmc
add
sti
sbb
ljmp
leave
lcall
test
insb
popa
add
pushf
pop
sbb
negl
or
in
add
mov
mov
fs
gs
inc
insl
ds
int
mov
or
mov
pop
sbb
push
sbb
sahf
pop
cltd
ficompl
outsl
dec
and
rorb
cmp
pop
pop
out
stc
cmpsl
cwtl
or
cld
and
aas
imul
cmpsb
int
mov
hlt
popf
push
jmp
out
or
sbb
pop
and
int3
xchg
andl
daa
movsb
pop
loopne
stc
pop
insb
sub
mov
test
xchg
ret
fsts
add
sbb
jp
imul
ss
mov
stc
inc
ds
and
cmp
fisttpl
js
cs
mov
in
add
jo
clc
adc
cli
push
inc
cmp
negl
addr16
loope
int3
push
sub
adc
cmp
jmp
mov
mov
out
stos
xchg
cmpsb
xchg
loope
fcoms
fistps
mov
out
mov
stc
fcomps
dec
sbb
outsb
xlat
lret
mov
jo
shr
push
ret
addb
popf
or
cmp
mov
cmp
sub
sub
flds
mov
cmp
stos
lock
fs
sbb
insl
sub
pop
pop
cmp
imul
pop
lcall
nop
mov
cmp
xchg
inc
mov
fdiv
loope
push
xlat
mov
mov
test
je
sub
pushf
xlat
add
rclb
std
lret
push
mov
mov
jp
dec
dec
dec
mov
sbb
or
ret
stos
mov
fld
jecxz
push
fnstcw
cmpsb
cs
popf
fs
sbb
cmpsl
push
xchg
mov
fwait
test
jbe
pop
mov
pop
cmp
fwait
mov
cwtl
xor
and
dec
pop
sub
mov
bound
out
ror
ja
movsl
sbb
dec
lret
dec
or
push
outsb
xor
jecxz
adc
mov
mov
pop
shrl
cwtl
fwait
cltd
jp
fnstenv
sub
test
xchg
in
in
std
sbb
push
pop
and
imul
push
push
ficomps
aas
jbe
sbb
push
dec
cli
or
popa
push
cmp
pop
jae
ja
cltd
clc
decb
ja
sbb
loopne
loopne
test
push
or
sti
sbb
jb
ljmp
push
loopne
sub
and
sbb
sbb
cwtl
imul
pop
sbb
outsl
or
cs
lock
pop
and
sbb
jo
addr16
lock
sbb
pop
pushf
outsl
sbb
lock
push
ficomps
daa
xchg
mov
pop
popf
imul
sub
xchg
cmp
mov
xchg
pushf
xlat
je
fimuls
fidivrs
cmp
pop
adc
pop
fcoml
fdivr
clc
lock
and
sub
es
sbb
sub
cmp
fwait
mov
clc
imul
sbb
xchg
and
pop
ss
add
fistps
dec
loopne
in
mov
jecxz
popa
fstp
std
pop
pop
dec
pop
jp,pt
aam
ljmp
push
jecxz
xor
pusha
pop
in
xor
rorb
icebp
cld
pop
cmp
pop
push
lret
cmpsb
filds
xor
leave
sbb
scas
je
fwait
mov
in
xor
mov
jnp
or
scas
sbb
pusha
mov
out
pushf
mov
stos
cld
cmp
add
iret
imul
cmp
xor
xor
and
xchg
lock
or
jns
out
jnp
sti
pop
pop
gs
in
jmp
popf
sbb
xchg
push
daa
fiadds
cwtl
fmulp
xor
inc
and
and
fsubrs
insl
and
std
outsb
lea
jle
imul
adc
popf
loopne
das
jge
rorl
pop
mov
mov
add
and
scas
sub
adc
outsl
loopne
jns
sub
pop
imul
jg
fbld
pop
cmp
dec
imul
out
xchg
out
push
int3
pop
mov
jmp
loope
inc
daa
clc
fsub
aaa
push
adc
outsl
ja
xlat
add
into
cmp
fbstp
mov
lods
loopne
add
inc
fisubl
das
int3
icebp
out
aaa
push
pop
sbb
push
fstpt
add
sbb
fcomps
sbb
sbb
lret
inc
pushf
cmpsl
mov
cmp
bound
in
cmp
outsl
push
inc
xor
lcall
mov
sub
shl
lret
pop
pop
jp
imul
lahf
pop
loop
cltd
stos
lock
out
mov
into
lret
pop
cs
mov
int3
mov
cltd
mov
and
js
loopne
dec
loopne
adc
insb
pop
xchg
sbb
jecxz
or
in
and
add
test
inc
sarl
sbb
inc
ja
jge
pop
add
stc
mulps
add
or
je
and
lcall
xchg
idivl
pop
push
or
sbb
pop
and
xchg
mov
or
sbb
pop
popa
cld
stc
xchg
jb
xchg
in
cwtl
cwtl
push
or
pop
sub
xchg
iret
sub
cs
mov
lret
fdivl
xor
pop
lea
pushf
mov
inc
gs
lods
jg
pop
call
fisubrs
decb
fldcw
fwait
push
mov
lods
sbb
das
and
sbb
loope
inc
xchg
clc
andb
sbb
loopne
pop
mov
sbb
loopne
in
cmp
xchg
cmpl
mov
dec
loopne
sti
sbb
data16
sti
pcmpgtd
push
and
stc
pop
cmp
mov
std
popf
aam
inc
mov
mov
jle
mov
insb
movsb
pop
loopne
aas
mov
cmpsb
out
mov
stc
ljmp
fnstsw
pop
pop
sti
pushf
imul
andl
xchg
cmpsl
jle
pusha
mov
xchg
fidivrl
loop
neg
bswap
js
add
cmp
lcall
cli
xor
addr16
or
jns
sti
mov
loopne
fistps
addr16
sub
mov
jne
push
pop
mov
leave
and
les
mov
sub
sub
jae
sub
ljmpw
ljmp
outsl
jp
fidivrl
idivl
pop
sbb
and
add
imul
or
fnstcw
std
pop
xor
insb
mov
cwtl
enter
pop
add
jge
stc
rcrb
imul
sub
sbb
inc
jmp
dec
sbb
test
sbb
mov
add
sub
jg
lret
leave
stos
and
fwait
nop
mov
fsubl
cmp
mov
sbb
xchg
pop
sahf
popa
or
mov
pop
ret
mov
stos
jecxz
fistpl
adc
fcmovb
pop
in
out
fcomp
adc
push
insl
es
and
or
sbb
int3
cmp
cli
pushf
jmp
loop
push
nop
pop
icebp
and
das
mov
push
cli
ret
inc
aaa
test
pop
pushf
pop
sbb
sbbl
adc
jle
call
popa
lahf
inc
testl
pop
add
and
fsubp
gs
mov
je
or
popa
cltd
jno
pop
sbb
mov
pushf
push
or
add
cmp
jne
cmpsl
stc
sbb
pop
das
iret
jno
filds
mov
mov
mov
pusha
in
pop
lret
and
in
frstor
scas
fidivrs
sbb
sbb
mov
fcmovnu
fstps
daa
scas
push
or
pushf
or
mov
cmp
and
cmpsl
xor
xor
cltd
mov
lods
mov
add
ret
fldcw
mov
push
dec
jg
pop
push
mov
pop
inc
loop
js
ret
mov
xor
ss
jo
or
frstor
push
stc
cli
or
add
mov
js
cltd
enter
dec
pop
int3
fsts
pop
mov
fcomp
pop
daa
fdivrs
sub
fiaddl
sbb
sarb
jmp
fcmovu
out
pop
test
inc
lods
pop
jns
pop
out
pop
jmp
mov
out
fdivl
lock
cmc
push
push
cwtl
lahf
push
push
fcoms
pop
cwtl
push
mov
xor
lods
push
cltd
inc
aas
cltd
in
nopl
pop
push
ficompl
cwtl
adc
jbe
jmp
adc
ficompl
scas
mov
out
pop
in
in
xor
pop
out
pushf
jne
jae
imul
popf
and
mov
out
inc
je
mov
pop
sbb
push
dec
push
mov
fdivs
push
pop
push
pop
push
lahf
repz
in
arpl
and
lock
out
popf
popf
movsb
outsl
push
and
imul
and
mov
pop
movsb
popa
in
or
mov
in
in
jecxz
aad
and
and
jns
loop
mov
movsl
loope
pop
ret
pop
pop
jns
mov
loop
and
adc
and
mov
mov
imul
or
movsb
stc
mulb
fsubl
fwait
and
cwtl
pop
je
in
xor
sub
cmp
or
xchg
and
fisubrl
cmpsb
jns
gs
mov
or
repz
mov
aaa
sbb
icebp
push
in
push
cmp
fwait
inc
inc
out
and
mov
push
stc
mov
cli
inc
sbb
int
repnz
iret
cltd
nop
push
cmp
insb
fidivl
or
cmp
movsb
pop
repnz
data16
mov
je
frndint
inc
inc
jge
pop
cwtl
jns
fnstcw
ret
pop
mov
out
mov
pop
jo
jo
mov
mov
dec
push
cmp
je
mov
les
and
sub
out
shrl
inc
or
and
cwtl
jns
mov
add
in
lock
pop
cmp
fcomps
add
idiv
mov
pop
xchg
mov
frstor
setnp
pop
js
pop
mov
pop
pop
aas
test
sbb
repz
fucomp
sti
and
gs
push
add
and
fcompl
in
les
fxch
cltd
jns
sub
add
adc
fcoms
movsb
fcoml
add
jbe
and
jecxz
xchg
inc
adc
jg
mov
pop
inc
xor
call
pusha
pop
jge
sbb
movsb
imul
insl
add
les
std
adc
leave
call
fimuls
out
out
daa
cmc
enter
pop
iret
cmpsb
pop
cwtl
pop
dec
xchg
cwtl
push
clc
or
or
cmpsl
pop
mov
fmulp
iret
les
mov
mov
sub
pop
rorl
das
test
sbb
pop
pop
ss
cli
inc
cmpsl
push
rcr
pop
mov
scas
xchg
rcr
inc
sbb
fsubrl
aad
call
sub
xchg
enter
jmp
outsl
notl
fsubl
enter
clc
idivl
adc
push
in
gs
out
pop
push
filds
test
jne
popa
pop
mov
mov
jg
fucomip
sahf
daa
or
into
cmp
ffreep
pop
test
call
jg
int
pushf
pop
test
add
cld
mov
xchg
loopne
rcr
inc
das
call
xchg
add
test
hlt
pop
fwait
adc
xchg
mov
xor
mov
sbb
cmp
into
cmp
ja
icebp
fistpll
daa
dec
testl
fisubrs
clc
aas
sub
mov
xlat
pop
dec
mov
dec
mov
sbb
out
mov
add
dec
mov
imul
jmp
and
daa
pop
sub
mov
dec
pop
mov
xor
sub
inc
pop
in
repnz
lcall
rcr
ja
push
popa
pushf
iret
cmp
pop
mov
ja
cwtl
xchg
xor
adcl
mov
sbb
outsl
aas
inc
pop
loope
or
and
push
sub
mov
pusha
outsl
add
imul
pop
mov
sub
daa
ja
cli
imul
daa
std
xchg
mov
mov
stos
mov
mov
mov
jmp
pop
out
cmpsl
dec
push
cwtl
and
push
daa
or
pop
fstpt
clc
pop
icebp
cmp
daa
es
in
dec
xorl
fmull
das
insb
or
xchg
mov
les
dec
cmpsl
pop
pop
pop
pop
fwait
outsl
mov
sahf
jbe
aas
nop
call
or
sbb
jg,pn
mov
pop
pop
in
call
jle
scas
or
push
or
or
jp
loope
fidivs
jge
cmpsb
pushl
inc
push
xchg
pop
scas
fsts
sub
push
bound
sbb
jle
imull
mov
cmpsl
and
lea
xchg
nop
push
shr
lahf
stos
and
mov
pop
push
jnp
stc
dec
pop
test
clc
hlt
fisttpl
stos
pop
rorb
mov
ds
addr16
pusha
addr16
shrl
push
cs
sub
jl
lds
mov
out
mov
cmp
and
adc
sub
xor
lods
mov
xchg
mov
outsb
fistpll
fisubrs
mov
arpl
clc
push
add
sbb
pop
icebp
int3
sbb
pop
cwtl
cmp
cmpsl
sti
hlt
mov
jmp
mov
ds
or
jp
add
addr16
faddl
jge
outsl
mov
jbe
pushl
or
cli
xlat
test
sub
pop
push
or
mov
iret
mov
addl
and
adc
and
mov
mov
add
and
clc
dec
mov
out
mov
cmpsb
jns
mov
jge
xchg
icebp
outsb
push
jae
out
fcoml
test
dec
push
jmp
and
sbb
add
mov
add
add
addr16
push
into
add
pop
insb
outsb
sub
call
and
imulb
sub
filds
mov
push
outsb
stc
add
xchg
dec
pop
clc
shlb
pop
fcomp
add
stc
pop
push
mov
add
sbb
inc
cmp
leave
mov
push
add
test
jmp
xor
cmpsl
mov
push
jbe
movsb
clc
adc
sbb
push
dec
sub
call
fcomip
push
pop
xchg
push
pop
or
xchg
cmp
adc
fmull
ja
push
xchg
sub
jecxz
call
cmpsb
jg
fsts
fs
ja
xor
mov
nop
mov
xor
into
dec
outsl
inc
outsl
sbb
test
inc
sahf
cs
mov
xchg
lret
cli
push
divb
fdivrl
repnz
stc
sti
xor
and
jg
or
pushf
scas
sub
ds
pop
movsb
push
out
mov
loope
mov
sbb
xor
std
test
xchg
pop
mov
test
dec
pop
inc
scas
add
dec
pop
pop
push
cs
or
mov
xchg
push
int3
daa
stos
mov
jp
fbld
rclb
out
push
adc
xchg
daa
test
fists
nop
push
dec
cli
push
pop
pop
xchg
xor
mov
loope
js
icebp
mov
ret
lret
fstl
jae
add
inc
push
adc
les
out
sub
imul
movsb
mov
mov
shrl
or
cmpsb
das
add
les
pop
call
lcall
xacquire
xlat
push
addr16
add
add
popa
leave
or
xchg
out
nop
cmpsb
je
mov
sbb
daa
outsb
push
add
pusha
loope
mov
lea
cwtl
cmpsb
and
xchg
call
outsl
daa
mov
call
push
inc
push
adc
fincstp
mov
mov
cltd
iret
pushf
sub
adc
pop
outsl
fcmovb
roll
mull
sahf
pop
iret
into
sti
cmp
ffreep
pop
xchg
inc
mov
dec
xchg
std
adc
daa
sbb
xlat
dec
pop
mov
and
add
jmp
mov
imul
pop
sub
test
rclb
cld
rcr
mov
mov
sub
mov
in
daa
jnp
jns
jmp
sub
shll
clc
mov
jbe
inc
jbe
fwait
scas
out
xor
dec
leave
std
sub
mov
push
mov
fists
dec
jmp
outsl
rcrl
push
popl
pushl
mov
test
mov
pop
jp
out
clc
add
push
stc
push
add
cltd
mov
les
insl
sbb
pop
cmp
mov
je
loopne
mov
pop
inc
aaa
xchg
mov
inc
std
shlb
hlt
js
pushf
rolb
push
mov
adc
sub
mov
add
xchg
mov
inc
jne
dec
insb
pop
pusha
push
loopne
cmp
testb
adc
mov
push
cltd
adc
fisubrs
adc
add
inc
es
iret
dec
imul
pop
lods
movsl
or
fists
mov
pop
xchg
scas
fcoml
adc
out
adc
aaa
push
testl
mov
pushf
mov
outsb
cmc
pop
stc
out
sub
push
inc
add
ja
pop
out
out
push
fdivr
adc
hlt
xor
outsl
cmpsb
andl
jo
mov
lea
dec
pop
fucomip
dec
js
jns
mov
fwait
iret
stc
addl
or
dec
leave
test
dec
jge
shrb
mov
cld
cmc
sbb
push
pushf
call
addr16
gs
jmp
daa
lahf
repz
xor
sub
repz
leave
fwait
xor
push
shl
sub
and
jno
mov
xor
in
pop
pop
ljmp
roll
insl
add
mov
adc
daa
mov
xchg
pop
mov
xchg
jno
xor
out
scas
xor
and
inc
mov
and
mov
adc
outsl
sar
aaa
shll
add
int3
cli
int
clc
xor
push
push
inc
loop
inc
sti
xchg
cmc
or
arpl
sub
inc
mov
inc
cli
bound
out
xchg
ret
xchg
cmp
shrb
and
pop
adc
mov
ja
das
pop
call
insb
cmp
dec
test
sub
add
movsb
mov
clc
leave
clc
fists
outsl
clc
sub
call
mov
loopne
add
aam
inc
lret
inc
mov
mov
pop
jne
loope
mov
add
jmp
xchg
mov
xlat
cs
sti
mov
ror
pop
daa
mov
add
lcall
fistpll
jno
pop
mov
xchg
adc
into
mov
xchg
mov
mov
call
jecxz
rclb
cld
adc
test
daa
fwait
dec
and
call
scas
outsl
fsts
add
push
cmp
xor
mov
into
filds
daa
pop
sub
aaa
dec
clc
daa
lret
push
mov
push
outsl
inc
loopne
aaa
leave
push
mov
mov
out
mov
fxam
aas
mov
sbb
mov
call
rcll
add
pop
das
mov
pop
push
xchg
into
rcrb
int
mov
xchg
nop
push
mov
lds
fucomip
pop
mov
lahf
mov
sti
decl
push
fcomip
pusha
mov
call
mov
inc
lods
movsb
sub
das
ret
pop
or
outsl
cmc
in
and
aaa
mov
decl
aam
push
push
or
mov
in
fildll
jecxz
ror
sbb
add
and
loopne
nop
scas
inc
xlat
jb
xchg
daa
cmpsl
cmp
mov
sti
and
cli
addr16
dec
daa
mov
mov
int
mov
loope
cmp
fbld
sbb
repnz
sub
jmp
loopne
mov
sbbb
arpl
repnz
push
daa
mov
xchg
aaa
movsl
lock
push
mov
or
push
cmp
or
imul
and
push
stc
popa
mov
lret
mov
xchg
stos
insl
adc
add
mov
ret
fcompl
mov
xor
and
or
jl
dec
and
stos
fnstenv
or
xchg
das
push
push
jp
aaa
lret
cmc
pop
mov
shrb
lods
add
call
movsl
lret
nop
cmp
leave
mov
rcll
mov
push
pop
jne
shll
push
pop
push
mov
inc
ss
adc
mov
xor
adc
fbstp
lock
repz
add
out
pop
ja
outsl
test
push
mov
into
mov
inc
iret
call
pop
fisubl
out
into
cwtl
outsl
push
and
into
filds
mov
data16
das
iret
cmpsb
or
aaa
push
sysret
arpl
lods
and
pop
into
ss
ror
arpl
jbe
enter
out
enter
add
adc
notb
push
mov
adc
or
fbld
or
sbb
push
pop
pop
jl
jg
inc
das
lret
push
test
push
jnp
call
lcall
mov
mov
pop
addr16
js
filds
jmp
testl
jecxz
push
dec
loop
pop
push
adc
test
xor
test
push
fisttps
cmpsb
jg
pop
data16
lret
or
mov
inc
sbb
or
sub
out
mov
ljmp
repz
addr16
add
std
sbb
shrl
loope
and
insl
dec
pop
jns
pop
cld
pop
lret
jo
cmpsb
xchg
jecxz
inc
loop
fsubs
mov
inc
jbe
faddl
in
add
imul
jmp
je
fwait
mov
add
sbb
inc
push
xor
loope
pop
insb
dec
cmpsb
fdivrs
sti
data16
int3
jmp
clc
fsubs
push
sti
fstps
lret
jns
cmp
into
es
pusha
in
cli
insb
xor
pop
jecxz
movsb
insb
dec
out
mov
iretw
add
iret
fdivrs
and
sub
ss
cmp
pop
int
cmpsb
inc
fsubr
iret
cmp
jns
fmuls
xchg
fdivrl
in
xor
dec
fwait
dec
fcmovu
test
xchg
sbb
dec
sub
cmp
sub
adc
cli
pop
lea
out
cmpsb
mov
unpckhps
or
in
mov
adc
cmc
out
clc
lret
xchg
or
add
fadds
and
cwtl
into
addr16
mull
pop
fsubs
lcall
imul
fstps
fnstcw
insb
out
sub
dec
fsubrs
dec
sub
daa
jle
out
fsubs
popw
into
cli
lret
push
inc
fsubrs
fdivs
jmp
push
addr16
add
push
xchg
push
pop
sbb
into
pop
sub
sub
je
inc
cwtl
jmp
xchg
nop
cmpsb
pop
jnp
rcr
std
movsb
mov
neg
xchg
jb
fwait
jmp
mov
mov
add
fcomp
in
pop
mov
pop
sbb
icebp
fadds
aas
fwait
lret
push
add
test
das
fdivr
dec
fildll
enter
fildll
mov
add
rorl
imul
cmpsb
push
fdiv
sub
pop
ret
or
mov
shll
fsubr
jecxz
mov
lcall
push
shl
out
aad
stos
mov
push
pop
adc
adc
or
xor
arpl
mov
clc
push
inc
sub
fcomp
sbb
scas
lock
test
hlt
xchg
sbb
xor
sub
push
gs
push
test
mov
jne
pop
fsts
call
xor
jb
cwtl
inc
scas
dec
fildl
mov
lock
adc
je
jmp
mov
push
sbb
scas
dec
and
xorb
pop
fidivs
and
mov
icebp
xor
repz
push
sbb
push
mov
cmp
xor
popa
pop
fsub
inc
hlt
icebp
pop
out
js
fiaddl
ret
pop
ljmp
cmp
ret
push
push
movsb
dec
outsl
fdivr
sub
fmuls
inc
cmp
pop
out
sub
fnstenv
lret
pop
fldenv
pop
pusha
int3
jnp
lahf
pop
fsubrs
add
insl
add
ret
fcomps
xchg
jo
in
lahf
mov
cltd
add
and
call
call
sub
mov
jae
in
pop
cmpsl
iret
stos
icebp
popa
fcompl
jns
ret
inc
bound
xchg
push
and
add
inc
addr16
cmp
xlat
and
ljmp
jmp
push
addr16
sbb
mov
cwtl
aas
mov
cli
fsts
cmp
pop
hlt
sbb
in
stc
or
cltd
cli
dec
sub
xchg
fldt
fistpl
out
cltd
enter
sub
mov
sbb
or
lock
mov
fcos
push
sahf
xchg
das
sbb
scas
mov
movsb
and
sbbl
pop
cmp
cmp
cmp
dec
sbb
pop
sub
lahf
pop
sub
xchg
nop
sbb
je
mov
cld
and
fs
lahf
fsubrs
mov
hlt
mov
sbb
gs
in
pop
fiaddl
push
imul
rcrl
pushf
pop
cmpsb
fsts
adc
dec
jle
in
rolb
sub
dec
lahf
clc
mov
mov
cltd
inc
push
repnz
add
in
pop
loopne
ret
jecxz
cmp
fsts
mov
int3
add
jl
popf
flds
mov
iret
jecxz
mov
xchg
dec
lods
rcll
ja
sub
jge
or
lea
fdivp
or
dec
repz
fcomi
pop
jnp
repz
lods
mov
mov
test
dec
cmp
clc
jl
mov
sub
test
addr16
cmp
fsubr
rcrl
add
pop
lret
mov
fstpt
mov
push
addr16
insb
enter
stos
xor
push
jns
mov
jnp
jmp
pop
stc
add
ficomps
das
lock
inc
dec
sti
push
cmp
dec
pop
sbb
mov
imul
cmp
shrb
jmp
fistpl
inc
add
sbb
cmp
push
jns
test
push
lods
out
lcall
sti
ljmp
jo
cli
lret
sbb
and
add
loopne
leave
daa
inc
pop
xor
addr16
sbb
cmp
pop
gs
mov
jmp
pop
int
test
fisttps
cmpsl
mov
fdiv
mov
or
sub
sbb
pushf
fistps
xchg
in
pop
aaa
inc
jp
xlat
or
jbe
enter
pop
mov
cli
pop
adc
rclb
jcxz
ffreep
mov
cwtl
rclb
aas
enter
lret
cmpsb
in
adc
in
shl
pop
lret
into
in
gs
cmp
add
aam
jecxz
adc
stos
cld
lcall
and
adc
pop
push
ljmp
popa
fistl
mov
fcoml
mov
add
and
pushf
sub
and
out
sub
mov
inc
cmp
inc
gs
ja
jl
out
test
sbb
pop
fistps
pop
and
and
sbb
and
pop
ljmp
hlt
jae
add
or
and
cmp
mov
adc
cld
mov
mov
gs
push
and
inc
push
push
mov
hlt
pop
pushf
sub
clc
pushf
test
cmc
add
ret
test
push
imul
in
imul
gs
mov
fcmovbe
push
mov
out
xor
ret
mov
inc
imul
popf
in
imul
pop
sbb
popa
orl
sbb
jo
fcomps
dec
clc
pop
mov
and
sbb
subl
sub
push
fisttpll
int
sbb
out
pop
and
mov
dec
push
loop
test
add
sahf
dec
jo
pop
test
push
mov
and
and
sbb
xor
jb
or
loopne
jg
push
sub
inc
push
sub
pushf
pop
and
shll
sbb
aad
sub
sub
fsubrs
sbb
mov
fdivs
add
and
or
and
mov
imul
mov
test
fdivrl
fsubs
lahf
or
sbb
xchg
lock
xor
fistpll
pop
inc
mov
negb
call
addr16
cltd
pop
in
enter
cmpsl
sbb
addr16
cwtl
fiaddl
xor
push
cmp
cmp
cmc
lods
repz
cmpsl
or
lea
sub
xchg
cmpsl
sub
and
arpl
and
pop
pop
daa
and
int3
dec
sbb
rclb
pop
lretw
push
lock
fxch
mov
adc
nop
fldenv
fsts
dec
std
cmpsb
ljmp
xchg
pop
fldl
sub
fildll
lea
adc
xchg
out
add
mov
sub
xor
pop
sarl
out
popf
dec
pop
pop
sbbl
xor
mov
mov
jnp
pop
negl
sahf
imul
shrl
sbb
adc
jecxz
rolb
pop
push
pop
pop
pop
mov
in
mov
or
xchg
pop
adc
les
sub
movsb
mov
hlt
and
maxps
pop
pop
push
shrl
in
enter
loope
cwtl
inc
out
or
jae
xchg
ret
pop
jecxz
lcall
out
in
cwtl
mov
cltd
dec
and
and
push
movsl
ds
loope
mov
cld
pop
dec
pop
inc
out
mov
mov
push
fdivr
pop
cmp
jmp
jecxz
xor
xchg
stc
loope
rcrb
pop
add
cwtl
sub
ret
out
fucomi
jecxz
push
imul
jnp
mov
and
scas
jle
cltd
ret
jecxz
out
add
in
and
loope
lods
add
sub
pop
pop
out
or
aam
fwait
mov
xchg
adc
fldenv
pop
or
and
pop
pop
in
adc
arpl
pop
pop
je
pop
lret
xchg
cmpsb
mov
lods
shll
pop
lret
lcall
mov
mov
mov
pop
and
cmp
mov
cmp
imul
adc
pop
sub
addr16
push
push
push
or
out
pop
ret
or
loop
imul
out
pop
pop
test
daa
loope
and
pop
pop
jne
xor
adc
mov
pop
and
pop
fwait
bound
jl
mov
mov
pop
cmp
push
jnp
push
or
fistpl
cmp
pop
leave
lahf
sbb
add
movsb
pop
mov
sbb
mov
negb
mov
mov
icebp
daa
mov
cmp
sbb
mov
add
sbb
pop
add
sbb
addr16
sub
pop
sub
popa
and
pop
pushf
jl
jmp
adc
lcall
cmp
xor
hlt
out
addr16
pop
in
pop
pop
sbb
pusha
mov
jge
popa
out
and
inc
inc
cwtl
enter
and
je
repnz
pop
pushf
pop
lcall
push
jl
fisttpl
and
mulb
jle
sbb
popl
mov
xor
out
pop
add
out
push
in
push
out
pop
in
mov
sbb
ret
mul
and
fucomip
jle
idivb
jmp
jl
call
pop
jno
push
faddl
adc
leave
lahf
sbb
fadds
xchg
subps
jne
fisubl
jo
stos
mulb
jne
add
xor
frstor
negl
out
jmp
pop
ficompl
movsb
insb
or
in
pop
rcr
mov
xor
and
in
loope
lahf
clc
fsubl
pop
mov
hlt
pop
and
shlb
pop
mov
out
insb
jb
or
scas
mov
stos
sbb
fists
mov
pop
sub
loopne
sbb
xor
fstpl
insl
imul
cwtl
push
and
aad
mov
inc
lods
mov
fs
adc
xor
or
and
out
pop
jb
sbb
and
notb
jne
xor
ja
fsubl
sub
xor
mov
out
pop
pop
lcall
cli
data16
mov
and
inc
andb
pop
jae
xchg
sbb
movsb
inc
pop
fucom
sbb
jns
pop
and
lcall
lock
push
cmc
stos
mov
mov
outsl
and
mov
push
out
jo
jne
sahf
fwait
mov
int3
cmp
mul
ret
pop
jns
xor
add
mov
jno
mov
data16
sbb
in
and
cmp
sbb
data16
filds
mov
sub
fcomip
fiadds
movsl
cmpsb
mov
mov
stos
sub
xchg
in
and
aaa
bound
jo
sub
fisubs
bound
fnsave
sbbl
cmp
fs
shll
movsl
dec
roll
enter
sbb
mov
testb
testl
pop
sub
pop
pop
ja
mov
cmpsb
pop
push
mov
push
lahf
andl
and
gs
add
xorl
test
popa
movsb
sbb
out
aam
or
push
mov
sbb
pop
cmp
pop
sbb
inc
pop
fsubl
sub
pop
outsl
xlat
dec
pushf
and
sbb
mov
cld
popa
imul
or
adc
mov
and
mov
cltd
sbb
cltd
sub
push
xchg
sbb
dec
outsl
mov
cli
lahf
stos
pushf
or
and
out
pop
fisubl
pop
mov
add
out
push
andb
sahf
dec
fs
pop
add
pop
cmpsb
adc
repz
fdivp
add
dec
jle
adc
xchg
pop
sub
addr16
in
addr16
fstpl
out
pop
mov
fmuls
mov
adc
ds
mov
hlt
xchg
fcoml
jecxz
aaa
adc
addr16
xor
jb
clc
cmp
in
out
add
adc
jmpw
xchg
loop
outsl
xchg
push
jle
repnz
sbb
inc
cmc
inc
addr16
mov
leave
sbb
mul
cwtl
jno
fs
push
pop
pop
and
je
inc
jl
fsubl
bound
pop
outsl
mov
xchg
push
and
xchg
out
mov
out
repz
xor
pop
and
arpl
mov
ret
sbb
rcr
pop
push
mov
movsl
and
fstpl
je
in
jb
loop
mov
xor
cltd
fcoms
pop
sbb
inc
jno
adc
pop
jnp
and
movsb
stc
pusha
mov
pusha
mov
lcall
popa
imul
mov
aaa
out
sbb
jecxz
xor
pop
xor
loope
push
pop
lods
sbb
pop
inc
and
daa
mov
lods
inc
push
idivb
inc
in
push
sub
insb
cmpsb
sbb
inc
pop
xchg
icebp
pop
ds
sbb
cmc
in
pop
sti
and
lcall
loop
fiadds
mulb
mov
mov
pop
cmp
xor
ficompl
push
je
add
pop
fcomps
int
les
stos
cmp
xchg
mov
flds
pop
sub
lcall
xor
imul
pop
and
and
out
pop
ret
pop
repz
and
jge
add
xor
pop
mov
add
inc
and
pusha
cltd
adc
popf
push
xor
sbb
mov
mov
mov
mov
movsb
loop
sbb
lahf
hlt
xor
pop
sub
adc
xchg
jmp
cmpsb
cld
and
int3
pop
lret
fsub
sub
movsb
negl
fimull
pop
fidivs
add
das
and
adc
or
inc
xchg
sbb
pop
leave
add
loopne
in
rcrl
dec
xor
sbb
in
vmovdqu
dec
dec
clc
cmc
aaa
jge
fs
loopne
loopne
xor
jne
sbb
pop
insl
fincstp
sbb
add
imul
es
bound
insb
mull
pusha
fcmovu
xchg
dec
fisubs
pop
add
lds
mov
test
cld
and
test
and
test
data16
in
sbb
sahf
pop
stc
les
xchg
popa
movsb
out
fs
pop
in
cmpsb
mov
pop
loopne
pusha
movsb
lock
push
adc
fcompl
sbb
mov
lods
pop
pop
mov
mov
and
imul
mov
inc
test
pop
mov
mov
out
and
jecxz
pop
out
pop
fnstsw
jnp
xchg
loop
in
pop
sub
xchg
call
push
xlat
push
sbb
jae
adc
pop
insb
sahf
xchg
mov
out
jmp
test
xor
out
and
inc
jns
movsb
nop
jmp
add
or
mov
outsb
sub
jnp
add
imull
lock
pop
gs
dec
imul
pop
rcrl
js
push
insl
fistpl
jecxz
xor
cltd
xlat
dec
adc
pop
sub
dec
in
jbe
sbb
adc
scas
loopne
mul
cwtl
pop
fnsave
push
jmp
push
cmp
popf
mul
add
loope
hlt
mov
insl
loop
push
and
jmp
je
mov
pop
mov
cmp
fstpt
pop
fwait
pop
ret
and
stos
xor
and
push
fimull
cmp
and
mov
pop
je
sbb
fs
loope
mov
fldt
jnp
push
in
test
fxtract
jl
cli
xlat
and
filds
add
testb
sub
mov
out
adc
mov
pop
and
stos
loop
popa
add
xchg
mov
jae
pop
leave
and
popa
lods
add
insl
in
imul
dec
fldt
sbb
sub
outsl
je
sbb
roll
pop
imul
pop
imul
and
bound
loope
pop
cmc
mov
push
mov
xchg
fstl
sbb
je
test
arpl
jmp
mov
imul
cwtl
movsb
or
or
sahf
shl
es
and
pop
push
sbb
cltd
cmc
lcall
inc
mov
addr16
pop
sahf
sbb
and
inc
cmpsb
pop
fistpll
aam
arpl
clc
mov
andl
adcb
lock
sbb
pop
jp
xchg
ljmp
idivl
mov
int
ds
add
lret
outsb
daa
cwtl
push
outsl
cmp
sbb
js
dec
ja
testl
test
add
sbb
outsl
push
pushf
shll
xchg
ja
jo
jp
mov
in
arpl
xchg
jecxz
in
jecxz
clc
data16
fdiv
and
mov
fadd
add
insl
jp
sbb
push
ret
sbb
in
add
jne
xlat
ret
loope
mov
mov
jmp
hlt
daa
pop
sbb
pop
pushf
std
rcrb
popf
pop
jecxz
cmp
cmp
pop
pop
xor
sbb
lock
int3
imul
and
popa
inc
popa
imul
aaa
xchg
lahf
mov
pop
lcall
jle
cmp
sub
movsb
in
lahf
sahf
sahf
or
mov
pop
jo
hlt
push
cwtl
pop
addr16
fldt
add
jmp
fs
pop
dec
data16
jle
sbb
imul
sbb
lahf
pop
pop
bound
mov
add
cmp
pop
lret
xor
and
inc
loop
call
and
fsubrs
jecxz
cwtl
mov
push
adc
imul
jmp
add
cld
test
test
ss
jnp
mov
imul
fiadds
add
pop
sbb
hlt
out
in
pop
sub
mov
out
test
inc
or
fs
lea
popf
sti
mov
and
xchg
mov
mov
out
push
stos
imull
sub
sbb
cmpw
dec
pop
lock
in
mov
xor
sub
xchg
pop
fs
and
cmp
pop
sbb
pop
shll
pop
pop
and
and
test
movsl
out
xchg
cmc
sbb
bound
pop
mov
push
xor
sub
jecxz
test
xor
mov
shll
imul
hlt
cmp
negl
out
mov
push
loopne
std
mov
mov
bound
sub
outsl
pop
add
pop
fcompl
or
imul
pop
push
and
sbb
andb
clc
inc
stos
pop
cs
sbb
pop
sbb
jne
sahf
call
pusha
mov
sbb
push
ficompl
fs
popa
and
data16
add
sarl
arpl
cltd
mov
or
sahf
and
push
xchg
test
mov
jnp
out
out
repnz
test
inc
adc
sbb
mov
push
stc
and
and
sub
and
fwait
sbb
ja
movsl
sbb
add
dec
lret
in
les
pusha
pop
add
inc
dec
negl
and
imul
bound
in
pop
inc
pop
pop
lret
movsb
and
test
imul
daa
cld
pop
or
xor
xchg
hlt
and
pop
xor
lods
add
dec
pop
arpl
daa
fildl
mov
sti
in
insl
pop
xor
addr16
ja
sbb
push
lahf
lahf
sahf
add
sti
jecxz
popa
daa
push
fwait
imul
mov
fsubs
fistpl
and
out
cmc
or
jecxz
inc
mov
lcall
jae
mov
and
inc
and
ret
js
fisttps
cwtl
and
rcll
mov
and
cltd
sbbl
push
pop
xchg
push
mov
test
popf
lret
js
shl
mov
cmp
and
out
lahf
jp
add
sub
pop
mov
sub
negl
mov
out
nop
pop
inc
outsb
pop
push
daa
movsl
jg
pop
in
pop
xchg
add
cld
sbb
cld
fldl
bound
iret
push
adc
adc
xor
push
pop
pmaxsw
je
sbb
sar
sahf
dec
fistl
mov
dec
mov
pop
dec
and
pop
lahf
adc
sbb
loopne
push
mov
movsb
out
outsb
imul
jecxz
bound
xor
add
inc
cltd
pop
sub
jge
and
and
cltd
pop
mov
xor
mov
gs
and
jecxz
lock
js
xor
push
lcall
push
sbb
loop
push
lret
push
inc
and
call
andb
repz
movsb
sbb
loop
sbb
jl
xchg
cmpsl
mov
cltd
pop
imul
test
pop
in
mov
andl
out
lcall
and
out
arpl
pop
inc
movsb
fdivrl
adc
imul
and
sub
jle
push
add
jecxz
xor
rorb
out
in
dec
sbbb
in
enter
idivl
xchg
fmull
outsl
ficoms
and
stos
cmpsb
xor
lods
push
jo
add
pop
loopne
lret
xchg
mov
pop
ret
pop
mov
jmp
mov
hlt
notl
add
sbb
pop
addr16
je
mov
in
and
and
repnz
adc
pop
fs
jecxz
mov
xchg
pop
mov
movsb
mov
imul
dec
dec
addr16
and
jmp
push
mov
into
pop
and
jbe
in
pop
cmpsb
into
xrelease
push
sbb
pop
in
lret
iret
dec
and
stos
jg
jecxz
call
pusha
fsub
int
adc
pop
ljmp
fcom
jbe
flds
cmpsb
stc
enter
mov
cmc
ja
in
data16
ss
fcomps
negb
mov
sbb
call
pop
inc
flds
xlat
and
dec
out
data16
push
xchg
mov
mov
out
pop
aad
xchg
pop
mov
adc
push
and
loopne
inc
dec
aad
std
cwtl
movl
outsl
and
dec
fildll
pop
adc
push
dec
and
bound
and
hlt
in
call
and
mov
and
sbb
xchg
pop
sbb
rorl
and
mov
or
inc
pop
mov
xchg
add
or
fists
jnp
call
ficoml
add
mov
sub
cld
and
xchg
mov
cwtl
pop
push
int3
arpl
cli
adc
loopne
and
data16
jnp
arpl
imul
xchg
cmc
jecxz
scas
ficomps
andl
add
filds
movsl
loope
cmp
dec
push
negb
andl
movsl
loopne
bound
jmp
jecxz
xchg
mov
pusha
in
push
xor
jecxz
lcall
fisttps
js
lret
inc
aaa
fisttpll
jae
xor
pop
dec
add
add
data16
sub
xlat
sub
insl
loope
lcall
repz
mov
and
fbld
rcr
and
mov
push
adc
loope
dec
push
fucomp
cwtl
fisubl
add
in
and
gs
lret
sbb
mov
pushf
in
popa
push
add
repnz
mov
jl
ffree
mov
jne
jae
mov
hlt
add
fnstcw
inc
inc
push
sbb
icebp
add
and
adc
sub
pop
cli
mov
fs
and
test
stos
adc
sti
jne
mov
pop
mov
pop
aam
fwait
pop
xor
cld
out
adcb
je
fs
push
daa
pop
and
lds
and
sti
out
icebp
ret
mov
sbb
out
fdivrs
cmp
push
testl
stos
mov
in
pop
fcmove
in
fists
fistps
fstps
jmp
pusha
ss
and
add
clc
pop
xor
mov
cmp
test
adc
sub
fisubrl
dec
xchg
cmp
xchg
xor
push
shrl
popa
addr16
lret
notl
cmp
div
cmc
fmul
aas
sbb
pop
fwait
data16
popa
push
sbb
mov
mov
sbb
mov
mov
outsb
insl
or
sub
fcmovb
adc
adc
pop
in
jnp
push
pop
in
push
clc
loopne
sbb
int3
rcrb
fiadds
bound
xor
and
mov
out
pop
and
addr16
loop
add
in
out
adc
leave
loopnew
cmp
lret
adc
add
int3
pop
and
movsb
sbb
test
fcoms
imul
and
push
pop
jae
cmp
ljmp
pop
xchg
aam
xor
out
jnp
ja
pop
fs
inc
imul
fldenv
pop
or
sbb
out
mov
popf
out
pop
push
cmc
and
out
pop
cmpsb
mov
arpl
fwait
xchg
jo
and
mov
mov
fs
arpl
fidivl
and
jmp
cltd
mov
movsb
pop
xor
and
mov
imul
sbb
and
mov
mov
hlt
int3
js
pop
shll
or
stc
loope
mov
sbb
sarb
mov
or
dec
fisttpl
leave
sbb
fwait
stc
test
fcomps
pop
notb
pop
and
loope
sub
sub
mov
mov
fcoml
es
ficoms
or
push
stos
mov
xor
pop
addr16
lret
loope
mov
pop
imull
xchg
dec
xlat
sbb
fyl2xp1
div
push
jbe
xor
add
int
cltd
je
add
gs
pusha
mov
inc
or
in
jg
sahf
fs
inc
sub
pusha
mov
pop
jp
data16
push
jo
xorl
xor
fsubs
int
xchg
dec
mov
pop
out
mov
cli
mov
sbb
pop
jae
inc
imul
mov
mov
cltd
idiv
sbb
imul
divl
mov
sub
sbb
jno
add
imul
inc
addr16
mov
jno
jl
out
sub
jmp
mov
sbb
fucomip
pushf
je
fstpl
pop
dec
repz
into
inc
sbb
push
cmp
ljmp
stc
out
jne
stos
and
jno
cmp
movb
cmp
addr16
pop
ss
xor
bound
jae
shl
fs
fiaddl
lea
sbb
and
sbb
pop
fcmovnbe
cmp
push
fstpt
leave
loopne
push
lea
sbb
hlt
lods
and
mov
popa
out
out
lret
sbb
daa
in
mov
cmp
sbb
cltd
out
pop
push
call
repnz
cli
insl
stos
sbb
aad
sahf
jnp
and
gs
imul
sub
icebp
adc
insl
clc
pop
mov
popa
popf
dec
sarb
imul
fldenv
imul
pop
loopne
dec
ret
cli
jno
fstpt
hlt
cwtl
in
jecxz
dec
aam
in
mov
pop
or
pop
add
sbb
lahf
inc
mov
popa
add
aam
sbb
loop
pop
cmpsb
dec
and
pop
outsb
push
xor
sbb
sbb
add
jae
sbb
sbbb
pop
repz
roll
lret
xor
pop
cmp
xchg
loope
call
pop
xchg
neg
mov
in
fdivrl
cmpsb
mov
popf
in
fisubs
fists
fldt
lock
in
xor
add
aaa
add
pop
mov
movsb
sbb
inc
sbb
jb
pushf
pop
dec
iret
in
sbb
or
sbb
imul
pop
out
and
jg
movsl
and
notl
sbb
jmp
jae
aaa
cwtl
fnstsw
pop
pop
jg
loope
pop
add
call
test
std
sbb
pushf
add
jne
arpl
sbb
js
std
shl
divl
sbb
loope
add
add
inc
test
popf
or
movsb
inc
xor
je
divb
std
pop
sub
push
xor
loop
xchg
je
loopne
mov
fsub
movsl
sar
fwait
pop
nop
fnstenv
push
insl
xor
idivb
data16
inc
and
hlt
call
fdivrl
lods
loope
xchg
loopne
aam
andb
out
mov
sbb
sbb
xor
pop
push
daa
sahf
movsl
pop
mov
fwait
loopne
add
xchg
arpl
in
sbbb
test
cmp
mov
fisttpl
sbb
sbb
sub
das
pushf
out
popa
je
sub
imul
add
lret
fldenv
adc
imul
xor
gs
push
jae
std
pop
sbb
add
hlt
cmc
std
lcall
mov
je
sbb
andb
out
imul
cltd
cmp
jmp
movsb
sbb
mov
push
inc
lcall
sub
test
and
xchg
mov
push
out
pop
and
out
sbb
sahf
jns
and
sub
mov
stos
pop
ss
or
fwait
push
pop
xchg
pop
call
int
sbb
inc
inc
leave
loope
daa
mov
popa
cmp
call
or
inc
mov
cltd
fadds
jg
ret
sbb
xor
fsubl
out
adc
in
fs
sub
jbe
cwtl
push
sub
test
data16
dec
fwait
pop
pop
or
adc
std
es
mov
sub
pop
xorb
fdivrs
movsb
sbb
stos
jo
mov
jno
sbb
rcl
cmp
lods
clc
fimuls
mov
in
cmpsb
pushf
or
pop
inc
xor
and
sub
push
mov
mov
test
mov
push
xchg
jl
movsl
xchg
pop
js
movsl
cmp
pushl
in
fbld
mov
pop
je
add
or
add
popa
pop
sahf
mov
popa
xchg
inc
bound
and
push
sub
add
test
and
addr16
popf
xor
pusha
not
sbb
push
jae
idiv
mov
mov
sti
ficompl
mov
out
adc
mov
test
arpl
test
je
imul
pop
xlat
leave
inc
das
rorb
movaps
mov
sbb
xor
pop
aad
popa
lock
sub
lock
push
call
fsubl
sbb
pop
or
leave
dec
aaa
and
icebp
sub
fwait
icebp
fs
and
inc
sub
pop
jnp
cwtl
sbb
xor
psrad
pop
int
fstps
loopne
leave
mov
add
mov
fbld
and
fstpl
fs
and
push
fadds
fs
sbb
xor
fwait
pop
data16
std
jnp
in
data16
dec
addr16
in
fs
in
out
fcomi
lods
xchg
insl
pop
cmpsl
cmpsb
hlt
scas
pop
pop
cltd
icebp
movsl
add
mov
pop
mov
mov
and
jnp
pop
arpl
pop
inc
fsubr
ret
cmovg
ds
sub
sbb
push
fdivp
sbb
mov
cwtl
cmc
sub
pop
push
loope
inc
outsb
sbb
jnp
or
cltd
mov
out
push
out
pop
repnz
adc
push
sbb
pop
add
in
pop
jno
cmp
sahf
sbb
mov
sub
aam
jo
daa
fwait
ljmp
jae
and
ficomps
fstpl
ljmp
lret
and
pop
push
jmp
loop
lods
sbb
pop
add
mov
and
cwtl
lahf
idivl
pushf
clc
pop
jb
cmp
fwait
jns
sbb
sbb
pop
jns
int3
pop
ljmp
paddusb
sbb
dec
dec
arpl
jns
cltd
mov
lods
mov
loope
js
jecxz
pushf
sub
jne
jge
sbb
sub
arpl
andl
and
icebp
sbb
mov
cli
xor
sbb
loopne
fisubs
push
inc
and
hlt
xchg
add
xor
in
jecxz
loopne
or
pop
fldcw
and
fistps
adc
sbbl
sbb
push
jae
mov
lods
outsl
pop
js
inc
sbb
push
leave
fucomi
out
fdivrl
sub
pop
dec
and
out
out
sub
pop
icebp
sbb
xchg
popa
ret
dec
mov
xchg
sbb
call
ljmp
dec
repz
out
push
xlat
cmp
cmpsb
jns
push
and
pop
or
pop
daa
and
repz
idivb
idivl
aaa
daa
pop
in
andb
clc
aas
outsb
movsb
dec
pop
test
pop
in
sub
mov
pop
cltd
call
dec
mov
ret
xlat
arpl
push
in
xor
sbb
and
mov
call
test
mov
or
out
loop
repnz
test
inc
and
or
mov
jne
clc
out
xor
ljmp
test
fadds
cmpsb
cmp
xchg
lahf
es
call
xchg
jnp
imul
xchg
test
ficoms
cmc
ja
shrb
pop
insl
cmp
sub
aas
inc
out
cmpsb
sbb
js
pushf
ret
mov
xchg
sahf
jge
pop
sbb
neg
ljmp
cli
pop
xchg
sbb
scas
dec
insl
rclb
sbb
movsl
mov
fcomps
jmp
sbb
mov
pop
lcall
or
dec
jbe
lret
cwtl
mov
pop
push
sub
push
xchg
shll
mov
pop
pop
aaa
shrb
neg
shrl
push
push
aaa
ss
lods
and
dec
lret
mov
sarb
outsl
faddl
xchg
fwait
mov
pop
imul
mov
cmc
xor
sbb
adc
mull
mov
xchg
sub
into
push
pop
pop
aam
mov
rcrb
les
xorb
les
in
daa
icebp
xchg
or
loope
call
scas
pop
out
mov
aaa
mov
xchg
push
shll
outsl
lret
mov
out
sub
mov
pop
repnz
mov
shrl
test
fcoms
pusha
pop
dec
daa
jbe
add
fwait
xchg
or
clc
ljmp
stc
out
out
cli
aaa
sbb
xlat
icebp
repnz
or
sub
repz
std
or
push
or
sub
or
cmc
testb
add
cmp
adc
sbb
sub
adc
cmp
add
add
adc
adc
adc
and
das
and
and
xor
xlat
aas
inc
inc
inc
inc
inc
inc
inc
xlat
dec
dec
dec
dec
dec
dec
push
push
pop
push
push
push
push
push
call
scas
sbb
test
sbb
psllq
ljmp
or
daa
cli
out
lock
repz
hlt
daa
out
sbb
cmc
addr16
aas
sub
aaa
out
fildl
sub
sbb
das
adc
dec
dec
sub
cmp
sub
lcall
dec
pmaddwd
test
les
sbbl
ss
fwait
loopne
imul
in
lea
sbb
push
push
pop
add
sub
xlat
stos
ret
and
iret
mov
scas
mov
jno
ds
and
dec
test
rclb
rorw
xlat
aam
mov
out
rorl
jl
mov
xlat
lret
xor
das
add
xlat
add
in
xlat
mov
mov
xor
xor
dec
lea
int
xlat
mov
mov
xlat
pop
mov
in
mov
popa
fs
es
ljmp
cs
mov
xchg
cld
idiv
loopne
aam
ficoms
test
jb
out
mov
lret
sbb
adc
dec
stos
push
mov
pop
push
mov
lods
inc
pop
popf
mov
xchg
into
mov
xchg
jae
mov
test
sbb
fs
sub
into
stos
or
pop
jle
push
sbb
dec
imul
pop
lret
mov
imul
mov
test
xchg
cwtl
test
sub
aam
xorb
jg
xchg
adc
lret
mov
mov
sbb
pop
adc
es
xlat
push
arpl
cmp
fwait
push
ficoml
inc
xlat
mov
aam
mov
xchg
pop
push
imul
xlat
cmp
iret
adc
out
lods
pop
push
dec
push
jp
mov
xlat
and
stos
cs
mov
es
fxch
hlt
inc
push
xlat
sub
iret
aam
in
xchg
xlat
mov
sub
mov
dec
cmp
sub
lret
push
shl
add
xor
lcall
loopne
push
bound
mov
inc
xchg
test
add
cmpsl
push
mov
jae
dec
xchg
insl
test
sbb
xchg
popa
ret
scas
adc
xlat
jle
sbb
jb
ficoml
fistpl
hlt
js
jp
in
xor
sub
jmp
cmp
imul
and
pop
add
fldl
ret
pop
xlat
push
mov
xlat
push
fwait
push
sub
pop
and
xlat
add
lcall
mov
push
xor
in
aaa
je
adc
push
sbb
cmp
adc
mov
push
xlat
sbb
jb
adc
or
xlat
roll
lret
sbb
sub
jl
outsl
jne
mov
push
xchg
ffree
repz
lods
dec
inc
aad
push
jl
xor
imull
cmc
cmp
sti
jne
repnz
out
lahf
pushf
jb
xlat
out
adc
hlt
cltd
add
mov
aad
es
subb
sub
mov
inc
scas
loope
gs
inc
push
mov
orl
mov
das
mov
test
insb
out
xor
inc
dec
ljmp
add
inc
xlat
enter
push
dec
sub
xlat
adc
test
sub
scas
ret
rcll
mov
pop
es
shlb
mov
mov
ret
dec
xlat
push
rcrb
xlat
leave
jne
adc
lods
mov
rcll
inc
nop
stos
fimull
fstpt
push
push
xlat
push
xor
out
xlat
jb
loop
xchg
mov
dec
aad
inc
rolb
jle
stos
mov
xlat
xchg
push
sarl
mov
xchg
pop
add
jnp
push
test
jecxz
or
rolb
ss
nop
filds
jno
sub
pusha
aad
mov
test
int3
mov
orb
add
xlat
in
movsb
mov
xlat
sbb
mov
xlat
mov
push
push
mov
rcll
or
ja
push
movsb
push
and
xor
inc
les
and
inc
xlat
push
cmp
stos
jecxz
xlat
sub
or
xlat
lahf
aam
insb
xchg
lock
lods
cmp
xchg
lds
fbld
xor
loopne
mov
push
push
fbld
push
or
rclb
xlat
xor
inc
cld
xlat
cmpsb
loope
mov
cmp
xlat
mov
lods
test
dec
pop
aam
add
and
mov
out
pop
and
popa
mov
mov
mov
cmp
ret
enter
xlat
push
pop
inc
xor
loope
mov
cwtl
into
rolb
scas
adc
cmc
repz
mov
sti
inc
adcb
mov
lret
rolb
mov
mov
jmp
xlat
xchg
mov
mov
movsb
xlat
fimuls
dec
push
and
bound
cwtl
inc
mov
movsb
inc
mov
xlat
cld
jle
sub
lret
xlat
gs
rorl
sub
and
arpl
sarl
pushf
dec
test
inc
shlb
jnp
cmp
mov
xchg
out
jl
mov
test
loope
mov
xchg
xlat
dec
or
mov
outsb
cmpsl
adc
lret
xchg
cld
or
mov
push
xlat
xchg
shlb
insl
or
scas
pop
push
and
inc
outsb
mov
mov
aas
lock
inc
add
test
fnsave
popf
jp
jne
aas
cmp
xlat
test
pop
scas
fadds
or
push
lock
dec
imul
lods
aam
loopne
out
mov
sti
fisubs
adc
xlat
lahf
cs
lock
pop
lret
ljmp
add
dec
cmpsb
jge
arpl
mov
bound
xlat
mov
adc
mov
or
and
push
push
inc
lods
movsl
mov
out
lahf
rcll
mov
or
push
mov
fchs
jbe
mov
add
lret
jns
mov
adc
mov
dec
and
adc
shll
xlat
inc
jb
into
dec
das
mov
fisttpl
xlat
pop
push
rclb
add
fs
pop
ljmp
push
ja
xlat
push
cltd
jle
outsb
mov
push
fmuls
mov
xlat
lret
lcall
xlat
in
xchg
push
mov
mov
orl
adc
xchg
bound
pushf
cs
mov
xlat
push
popa
xor
cli
pop
popf
fists
pop
cmpsb
lret
addb
mov
mov
push
cmp
cwtl
xchg
popf
pop
mov
pop
mov
add
mov
shll
decb
out
scas
mov
movsb
push
into
pop
iret
fnstenv
out
das
int3
or
push
cmp
in
shl
ss
mov
aam
push
enter
sbb
sbb
mov
addr16
mov
jo
aaa
xor
mov
lock
dec
xchg
add
cld
push
xlat
sbb
lcall
ret
mov
xlat
dec
into
xor
sbb
xlat
xchg
outsl
lea
cwtl
add
sbb
inc
es
cld
sbb
or
in
jg
push
cmpsb
and
rcl
jb
into
add
es
out
repnz
je
lock
xchg
fistpl
out
xlat
dec
mov
aad
inc
xor
and
jns
fbstp
test
stos
pop
test
lods
inc
rclb
loopne
pushf
inc
or
pop
pop
sti
imul
orl
cwtl
call
scas
mull
xchg
mov
ja
fistpll
sti
pop
cmpsl
js
sub
fsubrs
push
pop
push
sub
lock
cmpsl
clc
mov
repnz
jns
cmpsl
call
int3
dec
leave
cmp
cmpsl
aaa
cmp
jmp
jo
xchg
aaa
sub
sub
or
mov
out
pop
mov
loopne
jae
cmp
and
aas
cwtl
pop
mov
js
pop
jp
out
adc
add
scas
flds
pushf
sahf
dec
outsl
ljmp
outsl
adc
mov
cmp
jmp
or
mov
lret
sbb
frndint
jecxz
push
ljmp
popf
das
mov
sub
iret
sti
aam
lods
in
sar
jnp
fldenv
scas
dec
aaa
push
xchg
dec
movsb
sub
sbb
pop
xor
clc
xor
cmpsl
sbb
pushf
adc
das
mov
lcall
xor
lods
ja
xchg
sub
sub
sbb
jmp
mov
divb
ret
fiadds
cmp
clc
xlat
js
lods
dec
imul
xchg
adc
cs
out
sub
scas
lock
loope
push
dec
cmp
push
xchg
add
sbb
mov
sub
pop
push
imul
jb
fwait
dec
push
enter
push
dec
jmp
or
jle
icebp
aad
stc
jns
xor
dec
dec
pop
inc
sbb
add
loopne,pt
idivb
mov
leave
ja
repz
dec
or
cmpsb
inc
lcall
push
sbb
push
sbb
addr16
inc
orb
sbb
ja
imul
and
iret
pop
add
push
cmp
sti
xchg
cwtl
lret
pop
sbb
cli
out
mov
out
xchg
push
mov
mov
insb
mov
pop
outsl
push
cmp
insb
jbe
pop
add
xchg
adc
or
and
pop
cmp
xchg
imul
push
imul
push
addr16
cld
ja
jbe
or
adc
pop
or
popa
loop
aaa
push
std
cmc
pop
cwtl
pop
pop
push
dec
fidivrs
fdivrs
inc
xchg
jp
and
stos
ljmp
jle
fldl
sub
fstps
in
stos
cmp
xchg
enter
sbb
fcmovb
fimuls
sub
adc
mov
inc
push
sbb
lcall
inc
popf
in
lods
popf
and
loope
dec
pop
leave
pop
or
stos
fcoml
insl
add
loop
test
aaa
cmp
dec
int
fdivrl
cmp
dec
adc
sbb
or
lret
lods
test
cwtl
bound
idivl
dec
add
cli
mov
loope
outsb
mov
fisttpll
dec
inc
pop
sbb
mov
lds
lea
sub
insl
arpl
fyl2x
fsubr
jns
fisttpl
mov
cli
ljmp
test
mov
mov
push
sub
cli
or
dec
dec
loopne
push
int3
sub
jmp
pop
dec
fcos
daa
jp
pop
sbb
rolb
sbb
push
cmp
dec
xchg
sub
lcall
push
int
popf
pop
sbb
test
ljmp
or
insb
cmc
sbb
sbb
leave
rclb
ficomps
mov
rcll
or
es
sbb
pop
insl
cmc
sbb
outsb
mov
cmp
ret
cmp
stos
pop
fld
mov
fwait
sub
ljmp
pop
in
cld
add
pop
cs
sub
fiaddl
test
test
sbb
mov
pop
xchg
stos
roll
aad
mov
test
in
movsl
leave
xchg
sbb
xor
test
mov
test
mov
adc
jns
stos
rep
int
sti
and
jl
dec
stos
jmp
aas
pop
sbb
es
mov
popf
mov
ljmp
mov
mov
push
sar
push
loop
data16
xorb
nop
lods
sbb
fcompl
fimull
sub
out
outsb
or
es
out
sbb
shlb
sbb
aam
mov
jns
divb
jp
lcall
ja
sub
test
cmp
enter
sub
sbb
adc
mov
sub
xor
mov
repz
dec
mov
add
out
pop
pop
ds
icebp
daa
daa
les
mov
pop
loope
push
aaa
es
cwtl
ja
push
rcrl
mov
mov
mov
push
xor
cwtl
inc
aam
xor
sbb
js
fsubr
add
inc
mov
daa
cmpsl
icebp
aaa
cwtl
mov
mov
inc
or
aam
int3
push
adc
sub
jmp
lock
out
cli
lock
inc
sub
or
std
out
push
xlat
sub
sbb
add
or
sbb
adc
xlat
cmp
sbb
pop
push
cmp
mov
and
cmp
and
imull
js
adc
sub
cmp
push
jne
pop
pop
pop
pop
xlat
pop
pop
pusha
popa
bound
xlat
imul
outsb
outsl
xlat
jo
jb
je
jbe
xlat
jp
jl
jle
addb
xchg
lret
push
popa
push
mov
lods
add
jmp
in
xor
aaa
xlat
adc
cli
icebp
repnz
sbb
rcl
or
sub
std
testb
sbb
or
cmp
or
xlat
add
add
sbb
adc
fistpll
cmp
js
loope
sub
faddl
inc
adc
pop
imul
pop
adc
push
dec
cwtl
or
jl
adc
adc
fstl
sub
jns
sub
xchg
repnz
dec
std
shll
pop
int3
fcmovbe
in
and
out
pop
sub
cmp
loop
dec
pop
xlat
popa
cmp
jae
push
xor
jmp
mov
int3
movl
ficompl
mov
jmp
cltd
xlat
lods
int
xchg
inc
pop
add
xor
sub
mov
mov
sar
add
jne
rorb
hlt
es
roll
pop
gs
out
cmc
pusha
mov
sarl
sub
fnstcw
outsb
iret
xlat
xor
and
lock
push
dec
mov
int
rclb
and
fisubs
cmp
xlat
mov
lret
xlat
dec
int3
je
ja
push
inc
xlat
ljmp
jle
leave
insl
mov
inc
or
or
push
sbb
fs
jmp
mov
sbb
xlat
dec
push
rol
decb
cmpsb
and
push
lret
ficoml
outsb
loope
lods
xlat
jno
test
mov
add
loopne
mov
rcr
test
out
fs
hlt
adc
adc
push
pop
pop
mov
xorl
mov
sbb
dec
jmp
xlat
add
lret
mov
mov
stos
outsb
nop
jnp
xor
dec
enter
xlat
inc
cmpsb
push
xchg
imul
shll
icebp
lahf
fwait
inc
mov
lcall
dec
jmp
push
imul
xchg
mov
xlat
push
or
xchg
enter
cmp
stc
jge
add
pop
pop
push
cwtl
cmp
mov
stos
jbe
xlat
shlb
adc
imul
loop
hlt
mov
inc
fwait
jb
xor
xlat
addr16
push
loop
jg
add
lahf
jnp
outsb
insb
or
jl
inc
xchg
push
shll
pop
loopne
adc
out
and
mov
hlt
pop
jle
rcl
push
adc
add
xlat
sub
ljmp
cmc
loop
xor
inc
xlat
lcall
dec
and
push
or
int3
xlat
sbbb
sbbb
fildll
mov
xlat
xchg
test
jmp
xlat
and
aam
inc
mov
xlat
mov
call
mov
mov
dec
xlat
cmp
movsl
jbe
or
dec
sbb
sub
mov
xorl
adc
dec
pop
es
dec
mov
test
movsl
cmp
xlat
es
nop
out
sbb
xor
lods
push
jne
xlat
jb
subl
fsubl
lret
mov
repz
fsubs
and
add
test
out
and
fsts
push
jmp
jnp
xor
outsl
pop
mov
add
push
ficompl
cmpsb
insl
xlat
inc
into
fxch
and
xor
subl
mov
decl
xchg
pop
cmp
ret
jne
dec
popa
xlat
in
je
testl
fst
inc
cwtl
xlat
sbb
sahf
test
mov
xor
fdivrl
bound
push
iret
clc
cmc
ja
and
mov
sub
in
sbb
adc
mov
or
test
scas
ds
inc
and
sub
rolb
mov
mov
adc
inc
cmp
dec
cmc
pop
movsb
jbe
es
xlat
test
push
in
inc
rolb
pop
popf
jo
cmp
or
scas
sbb
push
xor
mov
inc
mov
and
into
xlat
mov
mov
fcom
dec
mov
or
inc
mov
cmpsb
sti
xlat
js
sbb
sub
data16
andb
inc
into
pushl
push
int3
xlat
mov
adc
aaa
cmp
inc
addr16
daa
in
call
iret
cmpl
out
test
or
push
in
pop
xlat
mov
aam
jne
add
jl
insb
inc
and
test
mov
aaa
aas
add
xchg
mov
jae
push
mov
and
mov
mov
mov
sbb
inc
xchg
pop
test
out
aam
pop
inc
shr
int
sbb
ret
nop
mov
push
fisttpl
xor
into
mov
je
call
push
lahf
imul
out
nop
xor
gs
xchg
xlat
push
insl
xor
ds
or
adc
cltd
xlat
div
xchg
mov
xlat
aam
dec
xchg
or
hlt
xlat
jno
pop
dec
fisubrl
mov
add
push
and
lahf
and
fdivrp
xlat
jmp
orl
loopne
stos
imul
bound
fs
mov
nop
into
fstps
gs
sub
xor
iret
xlat
cmp
fwait
mov
pop
adc
add
es
out
cmp
sbb
daa
xlat
mov
aam
push
je
xchg
xlat
test
mov
inc
ljmp
jecxz
mov
outsl
xlat
clc
imul
faddl
movsb
popa
cwtl
int3
push
dec
out
ja
aad
dec
data16
pop
mov
hlt
out
jae
xlat
cltd
xchg
cli
in
inc
sar
xlat
loopne
push
push
xlat
lahf
cmp
add
inc
xor
jmp
adc
xchg
sub
aad
xor
xor
jbe
int3
stc
dec
mov
sub
rcrb
cmp
mov
push
or
mov
inc
mov
mov
xchg
push
or
idivb
jmp
pop
loope
sbb
mov
fninit
push
incb
fld
xlat
inc
clc
stc
mov
dec
pop
adc
push
xchg
test
add
daa
mov
fisttps
xchg
xlat
dec
and
pop
stos
jmp
mov
sub
xlat
sub
dec
xchg
jle
in
pop
fisttpll
imul
adc
shll
nop
xchg
enter
fistl
lcall
lret
in
repnz
dec
es
push
sub
fcmove
xor
sbb
mov
ljmp
jp
stos
subl
addr16
jp
sti
xlat
loop
lock
mov
xchg
test
and
pop
outsl
dec
add
mov
movsb
mov
scas
nop
xlat
adc
insb
adc
sbbb
jecxz
jecxz
cmovs
pop
jmp
iret
pop
mov
cmc
add
mov
inc
dec
xor
push
mov
pop
int3
jae
fistl
mov
cmpsl
dec
inc
push
lcall
mov
mov
scas
mov
inc
rcrl
adc
fisttpll
leave
dec
mov
sbb
addr16
mov
popa
pushf
cmp
fwait
out
xlat
mov
push
enter
cmp
jno
dec
xor
add
xlat
rorb
mov
scas
push
xlat
leave
je
or
pop
enter
mov
sub
dec
pop
inc
fidivrl
xlat
cmp
loopne
mov
add
cli
mov
dec
int3
ret
fistl
insl
jo
xlat
sub
mov
lds
scas
dec
fwait
inc
cmp
insb
sbb
push
mov
sub
xchg
sarl
rcrb
push
xlat
jno
int3
out
xchg
scas
or
movsl
out
ds
xchg
fwait
mov
inc
or
adc
adc
or
inc
data16
and
mov
lds
sahf
loope
dec
push
xlat
aad
es
int3
mov
cmpsb
in
inc
push
sub
jne
cmp
insb
insl
xlat
adc
lds
push
push
xlat
rorl
pop
cmc
mov
nop
loopne
mov
and
sbb
fwait
pop
pop
cmpsb
pop
cmpsl
pop
mov
push
imul
into
dec
das
enter
mov
cmp
sbb
inc
les
sti
mov
jne
lret
dec
jg
mov
dec
jp
fisubl
push
cmpsb
xlat
cli
ljmp
imul
popf
rcll
adc
xlat
pop
dec
sahf
sub
inc
aaa
push
inc
sub
fxch
ret
mov
xchg
shlb
add
inc
mov
xlat
push
icebp
lea
push
pop
fwait
sti
aad
inc
jecxz
scas
xlat
insl
cltd
ficoms
je
lahf
out
xlat
ljmp
dec
xlat
and
dec
or
sbb
pop
in
push
arpl
shrb
jle
icebp
into
sbb
xchg
mov
xor
add
push
aas
jg
pop
sbbb
push
push
inc
inc
nop
stos
stc
sub
inc
mov
mov
sbb
inc
add
hlt
add
lahf
clc
movsl
mov
lcall
xlat
js
and
cmp
dec
xchg
push
sub
adc
xchg
xlat
nop
dec
mov
stos
hlt
sahf
xchg
mov
or
push
fiaddl
les
fs
ja
and
lock
ret
pop
clc
addr16
ljmp
jo
cwtl
xlat
pop
fistl
xchg
sahf
lea
xlat
jle
sbb
dec
out
xlat
out
mov
fistl
fsub
or
add
lock
out
pushf
xchg
je
sub
testb
inc
cmp
inc
movsl
std
cmc
jecxz
dec
pop
push
pop
sbbb
cmp
flds
outsb
out
leave
ror
and
into
mov
jnp
push
inc
jae
push
loop
push
xchg
arpl
aam
outsb
sar
xlat
cmp
bound
xor
insl
xlat
sub
add
mov
mov
sub
dec
push
jle
bound
out
push
cmpb
aad
adc
sar
sub
xchg
mov
and
xlat
jo
push
xlat
mov
sahf
sbb
clc
sub
leave
xlat
adc
inc
push
cmpb
bound
xlat
mov
sub
xor
in
jmp
fstp
incl
push
mov
inc
xchg
lret
loopne
xlat
cmpsb
icebp
xchg
cmp
sub
push
inc
xchg
mov
mov
xlat
sbbl
adc
dec
arpl
in
aad
adc
hlt
cpuid
repnz
pusha
push
xlat
dec
imul
push
rolb
jns
loop
lods
jecxz
push
mov
or
dec
xor
xlat
add
movsl
fwait
adc
mov
pop
loopne
xlat
enter
mov
ss
mov
call
cmp
cwtl
sbb
add
enter
jae
mov
cmpsl
lds
fdivl
push
dec
aas
push
push
and
cmpb
push
xlat
into
push
jl
jp
xor
mov
xor
xchg
fnstsw
pop
mov
mov
sti
pop
push
push
jmp
das
movsl
int
pop
sub
cmpsl
aaa
imul
sub
ljmp
sbb
jecxz
loopne
arpl
subl
cmpsb
in
aam
dec
in
or
nop
hlt
sbb
or
push
xchg
out
insl
mov
test
jnp
leave
push
pop
mov
bound
jecxz
test
xor
fldcw
xlat
icebp
cmpsb
lods
adc
mov
dec
js,pn
mov
mov
push
shll
mov
into
xor
out
rorl
sar
test
push
dec
inc
popa
adc
stos
outsb
cmp
xlat
mov
into
mov
out
icebp
xchg
xchg
movsb
xor
loope
rcr
push
add
and
data16
fsub
adc
imul
scas
and
mov
out
push
mov
sarb
stos
arpl
mov
arpl
jnp
popa
pop
xor
mov
das
jle
call
fiaddl
inc
pop
pusha
lcall
outsb
test
adc
jp
cmp
aas
push
les
xlat
xor
stos
jns
mov
jb
or
cwtd
and
shlb
xchg
iret
adc
bound
fsubp
xorl
outsl
xlat
add
and
movsb
leave
data16
pop
cs
xor
cltd
xlat
pop
repnz
xlat
sub
std
fwait
adc
mov
lods
jbe
mov
lret
adc
xor
xlat
lods
sbb
test
repnz
enter
fimuls
xor
bound
and
lods
push
lret
mov
pop
or
imul
or
jns
and
inc
into
cmp
addr16
mov
cwtl
sbb
dec
fsubs
xchg
dec
pop
stc
mov
bound
and
icebp
xor
out
daa
addl
push
fbstp
push
xchg
dec
cli
xchg
jae
jecxz
mov
push
lcall
sbbl
xlat
rolb
std
pop
ljmp
push
loope
into
sub
xchg
ss
dec
test
js
pusha
adc
xlat
jns
loopne
push
out
mov
sbbb
fistpll
lret
xlat
sub
inc
adc
pop
xlat
loop
mov
lcall
imul
out
arpl
fsts
outsb
push
dec
lret
xlat
pop
movsb
lods
clc
cltd
in
xchg
mov
sahf
dec
mov
inc
cmp
jecxz
dec
pop
sti
cld
iret
sbb
xor
mov
popf
clc
cli
lret
cmp
mov
mov
mov
test
inc
adc
test
iret
test
xlat
sub
clc
mov
xlat
das
in
stos
aas
add
xchg
xlat
xor
test
repz
pop
mov
fimuls
mov
lods
push
mov
cmp
mov
aaa
pushf
xlat
scas
xchg
stos
rclb
out
jbe
add
in
iret
insl
inc
fildl
outsl
sarl
sarb
jno
out
jmp
inc
cmpsb
and
mov
cs
adc
in
rcr
neg
lock
mov
movsl
mov
test
mov
lcall
inc
sbb
lock
jp
xchg
mov
fimuls
xchg
fldt
fs
adc
xchg
lds
fstpt
xchg
repnz
jb
mov
sysexit
int
xlat
out
mov
cwtl
jo
int3
push
mov
inc
push
test
mov
inc
and
sub
fbstp
pop
roll
and
fildl
lret
gs
or
adc
stc
jecxz
mov
xor
sbb
stos
jecxz
inc
push
mov
js
dec
fsub
shlb
fs
into
xlat
push
test
cs
fs
pop
int
dec
inc
adc
out
dec
lea
sub
xlat
popf
add
mov
jge
test
adc
mov
pop
hlt
outsb
xchg
loop
xlat
mov
adc
lret
cmp
leave
adc
push
loope
xchg
lret
lcall
xlat
xor
outsl
xor
add
scas
ret
pop
adc
push
xchg
xlat
orl
movl
sub
arpl
push
das
out
and
pusha
mov
jge
insl
xlat
outsl
enter
clc
push
push
outsb
jbe
pop
xor
xor
xlat
pop
out
jg
mov
cmp
xchg
cwtl
push
enter
push
add
adc
jae
insl
shl
rolb
test
push
sbb
push
xlat
cmp
push
cli
nop
enter
rorl
out
sub
fcomi
fisubl
mov
fst
push
insl
cwtl
ss
jae
mov
xchg
test
inc
or
int
sub
popf
pop
xlat
jecxz
stos
cld
icebp
lds
or
movsl
dec
inc
int3
push
das
into
add
cmp
lods
jl
andb
push
xlat
sbb
xor
xchg
fwait
xlat
mov
imul
and
sbbb
movsb
aas
adc
mov
sub
jl
aas
sub
lahf
xlat
adc
inc
mov
xlat
outsb
mov
xchg
les
icebp
jbe
and
arpl
fcomi
mov
dec
sbb
clc
aad
pop
fisttpl
xchg
inc
xlat
js
mov
imul
push
xor
cmpsb
test
scas
icebp
fldt
leave
fwait
int
push
xchg
arpl
sbb
jnp
fidivrs
pusha
sbb
rolb
out
stos
loope
xchg
mov
sti
lret
pop
fcmovnbe
movsl
aas
push
push
xchg
mov
push
imul
pusha
out
dec
mov
pop
lret
cli
mov
sbb
gs
std
into
insb
mov
and
or
je
sbb
enter
xlat
push
and
ret
dec
xchg
pop
ss
push
dec
mov
in
fildl
pop
fistl
pop
mov
lods
mov
xlat
test
sahf
enter
xlat
adc
xlat
stos
mov
inc
inc
xlat
insl
scas
out
pop
mov
enter
fcoml
scas
mov
js
rclb
push
ficomps
iret
mov
push
rclb
pop
popl
rcl
rcr
mov
mov
sbb
in
cmp
dec
cmp
sbb
test
mov
cmpsl
jl
lcall
fcoms
cli
das
cwtl
sbb
not
lods
outsb
pop
out
push
lret
inc
lcall
jle
shlb
outsl
dec
daa
xlat
xor
jb
cli
mov
jp
in
pop
insb
xor
mov
xlat
stos
xorl
xchg
popf
mov
sbb
sahf
push
inc
ss
subb
mov
sbb
xlat
sbb
dec
idivl
xlat
aad
insb
lahf
jne
and
xchg
xchg
shll
jecxz
es
mov
cmpb
mov
xchg
lock
mov
aaa
cld
push
inc
sbb
insb
sub
inc
cmpsl
dec
mov
mov
xchg
stos
lret
cwtl
pop
out
xchg
mov
jbe
int
aad
lret
out
fwait
insb
mov
mov
xchg
xlat
mov
sbbl
aad
stos
lret
mov
or
xchg
int
dec
repnz
out
sbb
push
pop
mov
jle
or
xchg
mov
xlat
rolb
mov
scas
mov
sub
jge
mull
fists
out
pop
xchg
inc
outsb
sbb
out
cmpsb
hlt
or
mov
fcomi
je
inc
push
xlat
movl
neg
ja
xchg
dec
or
pushf
sbb
cmp
lds
enter
inc
mov
xor
fwait
pop
jbe
fcomp
out
mov
xor
and
sub
pop
int
sbb
idivl
fsubs
sub
pop
mov
idivl
leave
or
and
fcom
cmc
call
stos
stc
jmp
mov
lret
out
mov
out
and
cmp
mov
cmpb
jle
out
leave
movb
mov
sbb
in
jecxz
and
dec
out
lretw
dec
into
xchg
into
sbb
and
loop
sti
pop
lcall
daa
inc
sbb
push
stc
fistps
cmc
rcr
mov
or
push
mov
mov
pop
lcall
pop
ds
repnz
addr16
mov
dec
movsl
cltd
pop
cmc
jbe
clc
das
enter
mov
mov
inc
push
jbe
sbb
out
push
add
mov
pop
pop
pop
int
stc
mov
ljmp
adc
and
out
xchg
loop
pop
sarl
ja
xchg
adc
fimull
jmp
arpl
stc
leave
dec
shll
divb
or
sbb
mull
insb
fcomps
aad
jae
jl
popa
inc
xchg
ljmp
testb
incb
dec
pop
dec
cld
in
imul
aaa
mov
out
pop
idiv
mov
cmp
sti
stos
add
or
xor
cmp
push
push
out
pop
fwait
pop
fsubr
and
fs
int
and
push
xchg
imul
es
stc
nop
mov
push
xor
mov
gs
xchg
or
sarb
xor
push
cs
in
sti
dec
jb
push
and
insb
lds
test
sub
iret
gs
dec
and
cmpsb
lock
aam
dec
mov
in
sub
idiv
hlt
push
sbb
or
and
stc
inc
inc
lahf
ds
xchg
es
stc
outsl
or
call
pop
test
and
mov
cmpsl
ret
mov
or
pop
sarb
and
pop
test
mov
icebp
insb
pop
pushf
das
in
lock
cmpsb
movsb
jo
sub
nop
jg
jne
iret
lea
xor
jl,pn
mov
inc
and
pop
fidivs
xor
mov
pop
xor
add
or
cmp
imull
push
aas
loopne
and
ret
mov
sbb
sub
mov
xor
pop
mov
aaa
movl
sub
pop
daa
inc
sub
mov
xchg
xlat
testl
push
jns
fnstcw
pop
sti
xlat
pop
add
sub
out
cmc
fildll
mov
mov
pop
xor
pop
daa
xchg
push
outsl
into
mov
add
pop
fwait
sti
ficompl
sub
or
ljmp
pop
mov
aaa
jge
sbb
cmc
mov
dec
aas
push
bound
push
lock
jns
sbb
lahf
dec
ljmp
cmp
sbb
inc
add
push
test
or
clc
cltd
cmpsl
sbb
jns
pop
in
jmp
push
hlt
cmp
push
sbb
or
xchg
addb
xchg
cmc
stos
sbb
sbb
sbb
push
movsl
fstpt
or
outsl
push
add
loope
jg
aaa
aaa
mov
sbb
fcom
fcmovnu
sbb
jbe
enter
inc
lea
sub
sbb
sbb
sbb
push
xchg
add
pop
pop
push
aaa
cmpsl
and
fsub
push
xor
pop
test
popf
out
lods
ja
iret
or
mov
daa
sub
mov
or
push
jl
cwtl
fstps
cwtl
pusha
aad
das
mov
icebp
and
mov
aaa
ja
dec
or
sbb
sub
cld
or
pop
pop
jmp
neg
and
out
into
push
add
push
cwtl
stc
pop
popf
add
mov
inc
sbb
mov
mov
cmc
pop
cltd
push
fcoms
jns
cmp
in
pop
popf
lahf
and
fcmovnu
cmp
sub
pop
pop
imul
or
sbbb
mov
stc
pop
sbb
sbb
push
mov
xchg
adc
fabs
xchg
xchg
inc
scas
gs
pop
cmp
mov
add
cmp
fucomp
loopne
pop
cmp
lods
pop
cltd
adc
std
fs
sti
imul
stos
pop
inc
mov
fldt
ds
aas
pop
addr16
aas
aaa
jns
mov
out
popf
fcoms
jo
std
movsb
pop
fdiv
arpl
fdivs
pop
stc
mov
xchg
inc
sbb
shlb
pop
cmp
cwtl
pop
in
cs
imul
js
mov
mov
stc
movsl
cmpsb
pop
jg
pop
dec
flds
dec
push
dec
cwtl
jp
sub
pushl
xchg
aaa
rclb
lea
jns
push
jo
fiadds
loopne
cmp
cli
mov
mov
and
xchg
lcall
loopne
test
aaa
mov
sub
addr16
test
and
ja
jmp
arpl
outsb
sbb
pop
shll
pop
adc
arpl
orb
push
cwtl
lret
xchg
pop
nop
pusha
jo
clc
ficoms
adc
push
lcall
insl
mov
dec
pushf
adc
sbb
mov
lea
andb
sbbb
and
insl
pushf
js
js
ffree
jecxz
daa
cmp
ds
aaa
cmpsl
sbb
int
cwtl
cmp
cli
mov
sbb
fisttpl
sbb
nop
sbb
and
call
cwtl
sbb
out
mov
test
in
and
push
std
pop
mov
adc
mov
cmp
sti
cmp
mov
mov
cwtl
lea
pop
negl
mov
mov
clc
sbb
fcompl
adc
xchg
add
sbb
in
sbb
cmp
ja
sub
nop
inc
mov
sbb
or
push
movsl
dec
pusha
movsl
mov
mov
ja
aas
je
fcmovu
sti
js
cmovg
push
cltd
sahf
call
or
sub
sbb
and
and
cltd
mov
loopne
jae
sub
add
aaa
popf
popa
pop
inc
movsb
jbe
repnz
mov
ljmp
and
rorl
sbb
sbb
sub
es
ss
add
std
es
or
adc
or
or
cld
and
cmp
scas
popf
xchg
jb
in
dec
mov
gs
cltd
add
gs
jl
call
fs
push
mov
mov
in
sbb
or
fsubp
cmp
out
cwtl
sbb
sub
mov
adc
orl
mov
rclb
inc
sbb
push
fidivrs
aaa
sub
sub
daa
push
xor
out
loope
push
pop
icebp
fdivrs
data16
stos
mov
add
fstps
push
aaa
in
sbb
fadds
sub
jg
cwtl
lahf
enter
or
and
dec
or
mov
push
dec
jge
out
call
es
lcall
fistpl
mov
data16
lds
pop
pop
pop
in
xchg
xor
out
jg
call
sbb
sub
loopne
pop
or
std
arpl
fcoml
std
sbb
fldcw
pop
subb
push
mov
jo
pop
xchg
push
stc
cmp
jne
xlat
stc
pop
jne
or
out
cwtl
mov
pop
mov
lahf
sub
adc
arpl
cli
insb
fadd
int
xchg
fildll
add
jp
mov
push
loope
in
cltd
mov
lock
stc
pop
sbb
fisubrl
or
sbb
jae
sbb
idivl
scas
jp
repz
or
imul
dec
fldcw
cmp
imul
rcr
xchg
ficompl
jae
push
fstpt
mov
adc
lcall
cmp
xor
pop
cli
mov
shlb
js
fwait
sub
cwtl
jge
out
mov
arpl
pushf
sbb
cmp
addr16
sti
pushf
testl
enter
and
lahf
lods
inc
aad
pop
std
stc
cmpsb
arpl
mov
sub
arpl
mov
int3
aas
mov
cmpsb
push
and
test
jle
enter
xor
lea
inc
xor
fnstsw
sbb
xor
movsb
jo
fs
gs
stc
or
mov
pop
sbb
mov
lods
std
inc
pop
mov
es
out
movsl
mov
sbb
test
xor
mov
rcll
cmp
lock
in
mov
and
pop
mov
xor
and
inc
or
leave
les
mov
out
xchg
cwtl
enter
pop
ja
imul
jmp
xor
push
fcoms
aaa
mov
pushf
lods
dec
xor
lcall
adc
clc
pop
cmpsl
mov
mov
dec
icebp
jno
cmp
int
mov
or
mull
mov
in
fldl
mov
xchg
or
icebp
jl
out
std
mov
push
mov
and
test
daa
out
push
jge
jmp
pop
cmpl
pop
imul
push
sbb
push
mov
lods
and
cmpsb
jecxz
mov
outsb
popf
and
psubsw
push
xchg
pop
scas
lods
dec
xchg
fldenv
lahf
mov
fiaddl
movsl
xchg
insb
adc
and
fldenv
insb
dec
fcmovu
fnsave
sbb
jmp
add
in
pop
push
popf
mov
mov
cli
sahf
adc
mov
push
outsl
pop
fwait
out
fwait
std
movsl
sbb
adc
in
sbb
pop
add
stos
xor
fmull
movsl
cwtl
in
mov
js
cwtl
cwtl
cmp
pop
mov
cmpsl
or
daa
mov
lea
and
fcomps
push
push
fcomps
fsubs
add
jl
mov
pop
test
sti
cwtl
cmp
mov
sarb
cmc
dec
sbb
subb
fstpl
pop
xor
cli
aaa
aam
lea
sub
and
pop
cmp
mov
es
repnz
in
lock
cli
and
movsl
sbb
sbb
mov
push
mov
repnz
cmp
mov
push
sbb
dec
movsl
push
push
mov
mov
ficoml
lret
mov
add
xchg
fisubrs
pushf
inc
aas
incb
in
in
mov
mov
pop
jb
es
pop
mov
cmp
mov
call
mov
mov
dec
out
mov
push
pop
mov
mov
dec
cld
stos
mov
mov
or
jmp
movsl
dec
and
ja
jp
movsl
arpl
add
nopl
gs
sbb
stc
push
fsubrl
push
cwtl
scas
jae
std
inc
mov
insl
sub
into
test
mov
stos
push
mov
sbbl
sbb
ja
fnstcw
inc
int3
std
out
sbb
cmpsl
cld
mov
loope
stos
pop
pop
jg
in
fwait
call
push
inc
xchg
dec
mov
dec
pop
andl
sub
add
xchg
lea
fisubs
addr16
cmp
popf
pop
fwait
sbb
leave
int
jnp
js
out
lds
sub
negb
push
push
out
and
push
fadds
out
pop
lahf
sbb
je
in
clc
push
cli
cmp
std
in
imul
mov
and
push
sub
test
cmp
js
shlb
sub
pusha
push
ja
imull
xchg
jne
sub
inc
cwtl
aaa
notl
addr16
mov
int
cwtl
dec
lcall
imull
pop
sbb
sbb
pop
hlt
imul
and
sbb
fnstsw
mov
bound
pop
mov
pop
sub
pushf
mov
pop
cwtl
call
inc
xchg
lods
js
stos
fsubrl
jns
push
call
sbb
out
std
dec
mov
xchg
insl
mov
cwtl
mov
cmp
pop
lret
out
dec
sub
faddl
add
imul
lcall
sub
jg
shrl
inc
dec
mov
and
decb
insl
scas
adc
sbbl
cmpl
pop
popf
stos
mov
ror
sti
fmuls
pop
gs
xchg
mov
in
clc
dec
bound
clc
pushf
stos
add
adc
repz
mov
xchg
out
idivl
test
pop
and
pop
loopne
or
aaa
clc
loop
rcll
in
sbb
xchg
call
sub
lahf
sti
pop
aam
mov
sbbb
hlt
ss
repz
sti
xchg
mov
fisttpl
sbb
add
cmp
or
sarb
fnsave
dec
fidivl
hlt
cmp
jns
pop
jge
icebp
cmp
jns
ja
jmp
pusha
pop
sbb
bound
insl
sbb
sbb
pop
and
cmpsb
or
popf
sbb
jmp
into
mov
xor
pop
push
xchg
enter
adc
and
outsl
cwtl
sbb
push
fs
bound
pop
jns,pt
jo
cmp
fstp
sbb
leave
outsl
mov
test
mov
ja
xchg
sbb
sbb
fimull
fcomps
std
fwait
sbb
decl
cmp
stc
insl
push
das
in
push
mov
jnp
stc
sbb
data16
in
push
cmp
inc
add
adc
add
ss
sbb
jg
fchs
push
jmp
cli
imul
icebp
test
or
pop
add
add
cwtl
sti
inc
add
cmp
inc
add
sub
sub
cmp
dec
add
sub
sbb
jp
aaa
ja
jp
aaa
js
icebp
insb
mov
lcall
das
dec
in
or
movsl
popf
and
mov
pop
add
and
mov
sti
mov
jmp
pop
and
sbb
mov
pop
loop
pushf
inc
add
repnz
aad
fyl2xp1
mov
pop
pop
pop
pop
and
push
sbb
call
out
and
fistpl
repnz
pop
mov
and
mov
cltd
mov
ss
push
mov
inc
aaa
cmp
push
dec
cld
inc
push
ja
push
push
cmp
test
cmp
mov
mov
fdivs
cwtl
sbb
sbb
mov
fidivl
cli
lcall
adc
mov
pop
inc
adc
jg
cwtl
test
pop
xchg
out
mov
cmpsb
in
jecxz
pop
mov
cmc
daa
xchg
or
mov
movsl
outsb
inc
icebp
hlt
popf
scas
inc
es
push
pop
js
sahf
dec
insl
je
repnz
jns
and
sub
idivl
jp
scas
pop
adc
sub
decl
push
pop
cmp
sar
mov
int3
dec
loope
inc
aad
cwtl
cmp
pop
in
pop
dec
stos
push
ljmp
jo
mov
aad
es
sub
popf
cld
pop
and
xor
and
ds
fwait
cmp
cmp
pop
enter
lret
pop
sbb
dec
imul
std
dec
cmp
dec
and
ficoms
mov
inc
enter
xor
dec
pushf
loop
movb
cmp
add
sub
loopne
popf
shll
divl
sbb
iret
add
cld
pop
mov
add
sahf
sbb
pop
push
shl
push
insl
pop
xchg
loop
insb
jge
dec
pop
mov
sbb
dec
cmp
inc
stc
xor
dec
arpl
sahf
enter
cmp
sbb
sbb
pop
dec
jecxz
pop
mov
stos
pop
mov
push
or
push
push
jp
sbb
ret
and
bnd
cli
pop
adc
xor
pop
dec
clc
fistl
and
and
sti
mov
add
pop
les
popa
fimull
inc
lcall
enter
stos
cs
push
daa
fmull
mov
shll
sbb
mov
dec
xchg
mov
mov
aaa
sbb
insb
movsb
cmp
shlb
jno
fbstp
mov
lock
leave
gs
push
sbb
sbb
dec
out
lea
stos
cli
ja
inc
jl
and
mov
sub
lds
pop
dec
out
fdivrs
imul
adc
lock
xchg
mov
lahf
jle
jne
ja
pop
lds
movsb
js
sub
out
loope
and
jb
sbb
jb
cwtl
cwtl
sarb
inc
sbb
jns
sbb
sbb
call
pop
add
dec
mov
cmp
lds
mov
fstps
sub
jno
out
fistl
mov
movsb
xchg
add
pop
pop
in
fdivl
dec
pop
stc
cmp
cwtl
xor
dec
cwtl
shlb
aas
and
push
popf
mov
xor
imul
scas
fnstenv
cs
mov
test
lea
mov
adc
add
ss
dec
xor
push
sub
test
shlb
sub
mov
or
inc
mov
mov
mov
cmp
dec
cmpsb
fucom
push
sub
ds
and
hlt
add
fnstenv
adc
sub
leave
jnp
mov
dec
cwtl
sub
daa
fimull
sbb
dec
or
lea
adc
or
xor
pop
push
daa
pop
pushf
push
jg
pop
xchg
mov
sbb
addr16
lcall
jae
pop
rolb
push
jle
push
jae
cli
pop
arpl
mov
repnz
adc
mov
negl
mov
sti
pop
decl
es
sub
es
mov
loope
pop
out
xor
or
mov
push
loop
js
das
clc
xchg
cwtl
loopne
xchg
dec
cwtl
aaa
jmp
stos
jg
xchg
out
adc
rcll
sub
fcoms
out
enter
andl
loope
sbb
jmp
dec
xchg
outsb
cli
inc
mov
cmc
dec
push
push
jle
bsf
mov
aaa
and
clc
and
jle
push
inc
call
sbb
cwtl
xchg
inc
psubb
mov
fisubrl
lret
and
inc
inc
jle
ret
or
into
std
test
test
dec
aaa
test
out
aaa
test
nop
aaa
test
jbe
and
mov
and
pop
sub
in
and
push
jb
popa
sar
pop
test
and
arpl
cwtl
cltd
pop
ja
jmp
fistpll
cmp
cmp
add
fdivl
push
aaa
fimuls
jae
ret
dec
js
push
inc
push
ds
imul
test
sahf
push
mov
ds
inc
sub
mov
sbb
addr16
cmp
xchg
push
dec
sbb
rolb
pop
or
or
call
enter
sub
jo
mov
ja
add
xchg
pop
fnsave
mov
cmp
xchg
inc
sahf
pop
lods
cmpsl
xchg
or
fcomps
xchg
decb
cmc
mov
mov
decb
push
pop
xchg
or
enter
mov
cmp
cmpsl
inc
sub
pop
mov
and
or
bound
push
aad
pop
fucomp
sub
movsl
mov
sbb
pop
pop
or
pop
inc
shrb
xchg
mov
xchg
out
cmp
xchg
sub
push
bts
test
inc
jne
test
push
xor
add
nop
outsl
cmp
push
cmp
shrb
jg
mov
test
daa
dec
and
popa
sbb
je
mov
push
cwtl
add
fldcw
and
cmp
mov
popf
call
cli
loope
mov
and
addr16
loopne
fmuls
out
jno
scas
and
pop
pop
ljmp
dec
mov
cld
fcmovu
fucomp
sbb
mov
pop
push
lods
out
dec
dec
sbb
lahf
jns
scas
or
cld
fstps
les
insl
rcr
fs
movb
cltd
std
pop
jp
dec
clc
xor
cltd
cwtl
loopne
fld
jg
movaps
mov
cld
adc
cmp
and
mov
ss
xor
or
in
and
test
sbb
fistl
in
mov
xchg
add
pop
ja
sub
fstps
inc
sub
aaa
cld
xchg
negb
pop
pop
push
aaa
popf
gs
pop
enter
hlt
fcmovbe
adc
popf
mov
jmp
stc
dec
fcomps
ljmp
pop
jmp
nop
aaa
mov
jae
cmp
fsubl
mov
cmp
mov
mov
mov
mov
pop
lcall
xchg
pop
sbb
lret
popa
and
pop
add
loope
cwtl
addl
in
shr
sub
pop
sbb
cmp
xchg
imul
xchg
jmp
mov
add
xchg
cwtl
or
sbb
add
daa
mov
stos
fadds
lahf
inc
ds
test
mov
inc
xchg
cltd
call
mov
in
stos
call
mov
cmp
lock
cmp
in
mov
mov
fmuls
sub
mov
sbb
xor
movsb
leave
pop
lret
pop
cmp
mov
dec
pop
mov
pop
ret
jp
jae
inc
mov
sub
aad
leavew
aas
clc
out
fisubrl
mull
push
ljmp
pop
jns
fistpl
data16
outsl
data16
sbb
bound
and
lret
pusha
push
sbb
or
xchg
subb
push
cmp
add
fldenv
loopne
imul
adcb
in
cltd
inc
cmp
cmp
jmp
fadds
dec
mov
pop
stc
dec
sub
pop
movsl
pop
mov
in
jns
ljmp
cmpsb
jge
into
outsl
xor
ret
out
and
mov
mov
scas
mov
gs
push
test
xorl
stos
std
and
sbb
faddl
jo
cmp
movsb
ja
or
lods
mov
adc
mov
loopne
mov
shr
dec
xor
sti
push
sbb
xor
jno
jo
or
repnz
popf
fimuls
das
dec
jmp
lcall
push
push
pop
xchg
dec
in
sbb
sahf
sbb
shlb
cwtl
dec
xchg
jns
mov
mov
idivl
ror
sahf
mov
stos
mov
add
sbb
fnstcw
dec
fmull
jmp
cmp
pop
sub
add
mov
mov
lret
insb
pop
aaa
daa
dec
mov
dec
cltd
sbb
mov
cwtl
rcrb
or
mov
pop
clc
sbb
clc
pop
lock
incl
mov
jg
incb
fwait
pop
incl
and
lds
enter
push
pop
int3
fcomp
lds
iret
and
pop
jmp
or
negb
stc
dec
and
mov
cmpsb
dec
pushf
and
stc
fdivs
loopne
loopne
sub
mov
sti
inc
movsl
mov
or
aas
jg
xchg
cmc
daa
mov
popf
sahf
or
lcall
andb
ljmp
cli
xchg
sbb
das
stos
dec
mov
sahf
jbe
add
sti
sbb
popa
loopne
popa
fwait
das
call
and
jns
pop
jbe
xor
mov
pop
ja
sahf
and
leave
pop
stc
sub
pushf
and
or
mov
iret
jg
pop
repz
xchg
dec
je
stc
lock
es
out
push
mov
mov
dec
or
mov
cli
xchg
sbb
pop
mov
and
inc
cmp
mov
cmp
leave
sub
bound
dec
out
push
jbe
cmp
sub
push
hlt
int
push
cwtl
xor
add
jmp
std
add
lock
fwait
sti
scas
mov
jmp
cmp
fwait
add
push
adc
cmp
pop
lahf
push
pop
sbb
inc
dec
sbb
add
ljmp
cmc
leave
sub
jmp
add
xor
pop
scas
stc
int
stos
pop
and
popf
sbb
and
loop
cmp
pop
aaa
mov
fdivrs
or
cmp
jns
lcall
in
jmp
sbb
sbb
sahf
cld
pop
sti
in
mov
pop
ja
sbb
sbb
stos
ja
sbb
fdivrs
stos
adc
mov
lret
fldcw
jg
ss
pop
test
sbb
jl
fsubrl
popa
dec
mov
sub
sti
push
pop
sub
addr16
xchg
xchg
icebp
sub
mov
cmp
xchg
sub
mov
and
sub
cwtl
sub
sub
cmp
xor
sbb
cmpsl
xchg
icebp
mov
int3
add
leave
push
push
es
mov
or
mov
inc
inc
sbb
std
fbstp
cwtl
adc
std
inc
add
fwait
insl
inc
xchg
insb
cwtl
adcl
jecxz
nop
mov
inc
jge
in
cmp
pop
mov
dec
pop
mov
dec
jmp
ret
test
in
ret
xor
fsubrs
hlt
les
mov
pop
push
cmp
cmp
cmpsl
sbb
dec
cmpsl
pusha
ja
cmpsb
cmp
sbb
loopne
lods
out
mov
jae
xor
out
mov
mov
enter
popf
insb
jp
les
pop
hlt
bound
mov
sbb
adc
cmp
dec
sbbl
stos
negl
xchg
or
fdivs
cltd
in
xor
xlat
test
push
int3
push
loopne
push
sbb
mov
jae
lahf
cld
mov
aaa
jns
push
outsl
movsb
sub
sbb
jo
fisubl
clc
pop
sbb
pop
f2xm1
cwtl
stc
pop
sub
daa
jb
rcll
sub
cmp
and
xchg
std
popa
pop
sbb
pop
lock
stc
pop
adc
stc
push
sbb
outsl
pop
clc
pop
sbb
mov
data16
rcr
outsl
sub
pop
jne
lock
mov
mov
popa
fwait
add
lds
sbb
cmp
push
stc
cmpsl
sbb
jg
mov
call
rorb
addr16
push
jo
push
push
stc
mov
mov
lock
stc
mov
sbb
lea
sub
inc
sbb
sbb
jne
fcom
jno
cmpsl
xchg
push
cwtl
fnsave
nop
xor
fdivs
ljmp
pop
fisubrl
xchg
test
xor
dec
push
mov
push
mov
inc
int
test
loope
cltd
js
scas
sbb
xor
pushf
or
data16
repz
gs
sbb
dec
out
sbb
cmp
pop
cmc
add
jns
push
sbb
mov
cwtl
fsubr
lret
lahf
cmp
neg
push
sbb
out
push
xlat
xlat
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
je
pushf
push
lea
jmp
jle
fwait
xchg
mov
cli
lahf
xor
fimuls
in
rcll
jbe
xchg
inc
dec
mov
lods
xor
cmp
add
enter
lea
dec
add
adc
sarl
sub
loope
cmp
daa
addr16
pop
jns
pop
icebp
mov
imul
sbb
rcll
mov
mov
sub
push
fistpll
das
enter
nop
jl
push
push
nop
sbb
dec
cs
pop
cld
call
push
out
add
jmp
or
sbb
add
cltd
je
sar
inc
dec
repz
add
add
sar
enter
icebp
neg
push
pushf
call
lahf
int
xchg
and
adc
pop
cmp
cmpsl
xor
adc
sbb
ret
pop
call
push
sbb
rorb
cmp
outsb
bound
cmpsl
jnp
lea
icebp
xchg
je
ret
mov
inc
pop
movsb
push
aas
adc
cltd
inc
test
lds
push
mov
jae
add
adcl
or
sub
pusha
popa
out
out
shl
push
outsl
clts
pop
and
jp
mov
jmp
cltd
lea
loop
add
push
add
scas
clc
pop
cmp
fnstcw
sahf
hlt
fsubr
mov
jg
xor
xchg
int3
addl
sub
cmpsl
sub
rcll
and
mov
inc
cmp
rorl
xchg
mov
sub
dec
jg
pop
std
inc
sub
push
fsubl
mov
sbb
cmp
xchg
sub
pop
je
xlat
sbb
cmovl
adc
movsl
jle
mov
dec
jecxz
cli
adc
cli
into
push
cmp
lea
lods
mov
dec
dec
adc
mov
dec
adc
mov
mov
pop
push
into
fwait
jg
cmp
insl
dec
pop
jbe
call
je
sub
iret
xchg
and
pusha
jae
mov
inc
das
inc
setp
jl
dec
clc
stc
movsl
cmpsb
fcmovu
sar
movsl
cltd
cltd
lds
sub
inc
xchg
jecxz
dec
daa
lret
xchg
into
add
fnsave
push
xor
push
repz
mov
outsb
flds
cmp
scas
es
lods
xchg
ss
les
popf
adcl
arpl
pop
or
mov
repz
shlb
sub
idiv
dec
dec
push
mov
fstl
fs
mov
imul
aas
and
nop
mov
mov
add
lods
es
std
sub
jge
mov
arpl
movsl
push
hlt
mov
inc
and
xchg
aas
xor
das
mul
icebp
lahf
imul
iret
jnp
inc
pushf
xchg
test
es
push
xchg
or
cmp
ljmp
mov
mov
nop
inc
loope
xchg
ljmp
data16
jmp
mov
mov
pop
xchg
iret
jnp
pop
mov
add
add
lret
xor
jmp
fucomip
or
ret
and
ret
sarb
repnz
notb
in
cmc
fs
mov
pushf
fs
cmp
and
ret
es
add
xor
add
add
movsb
loopne
jb
xor
push
mov
fcmovnb
pop
mov
push
xlat
pop
dec
clc
pop
lret
mov
xor
movb
push
enter
mov
enter
aas
sbb
lods
pop
pop
repz
xor
or
repnz
jnp
pop
das
loop
fxch
mov
jmp
sbb
lret
push
cmp
jnp
jecxz
into
add
hlt
pop
cmp
jmp
mov
cmpsl
bound
lock
pop
out
jl
negb
ljmp
adc
xlat
cmp
loopne
fwait
bound
ss
loope
and
adc
lahf
and
out
cli
push
mov
jns
hlt
nop
imul
mov
mov
arpl
adc
mov
pop
cmp
or
jle
inc
out
dec
sbb
mov
mov
rolb
mov
jns
setns
shrb
cmp
xchg
pop
inc
shrl
lahf
fistpll
cmp
push
push
jge
add
ds
ficompl
lret
int
testb
scas
bound
dec
and
adc
dec
dec
ficoms
xor
pop
and
add
cmp
daa
adc
cmp
sub
mov
loop
cld
fadd
or
and
dec
sbb
inc
jg
xor
push
mov
jmp
sub
mov
cmpsl
dec
cs
pop
in
cmc
mull
dec
arpl
cld
cmp
jae
mov
push
popa
inc
sbb
sar
mov
jge
popf
jb
jns
daa
adc
jbe
jae
shrl
cwtl
push
inc
inc
add
mov
and
xor
testb
push
movsl
jl
xchg
xor
addr16
sbb
repz
sbb
jbe
xchg
shrb
cmp
aas
stc
adc
add
lods
pop
mov
mov
xor
sub
mov
xor
jo
pop
jge
jb
out
pop
pop
jnp
sbb
lahf
popf
subl
imul
arpl
xor
jmp
jmp
in
enter
fcoml
sub
fstps
xchg
imul
ror
mov
add
cmp
and
loopne
lods
not
mov
push
lea
jmp
call
mov
sub
jl
pop
and
inc
movsb
cltd
mov
aad
das
sbb
ficomps
mov
inc
in
sbb
or
aam
daa
jo
mov
pop
xor
call
mov
int3
push
in
movsb
addb
add
test
mov
jmp
cmp
or
push
pushf
lea
je
stc
clc
cmp
cmp
push
pushl
ret
pop
fidivl
fstpl
outsb
stos
das
and
push
xor
lret
leave
mov
push
xchg
pop
pop
cmc
push
aam
cmp
sbb
lea
mov
xor
movsl
divl
sahf
bound
test
mov
jge
push
and
rolb
xchg
push
cmp
adc
lcall
sarl
test
inc
fsts
jns
mov
lcall
and
and
ret
add
xchg
push
or
push
or
xlat
sub
call
jle,pt
sahf
xor
out
fisubl
dec
loopne
stos
jb
and
int
ret
addl
xor
adc
cmc
sub
iret
xchg
sbb
xchg
push
cmp
gs
xchg
pop
cmp
push
sbbl
test
gs
test
test
add
push
ljmp
inc
adc
fsts
pop
in
cmp
add
lea
mov
mov
or
imul
jle
rorb
push
push
xor
lods
add
lret
mov
xlat
jmp
addr16
pop
es
jecxz
scas
jne
std
or
leave
push
fcomip
outsl
aaa
and
lds
xchg
mov
out
scas
or
repnz
or
dec
push
mov
sub
and
mov
jo
push
or
add
je
sbb
push
pop
jo
push
mov
pusha
call
jmp
add
cmc
add
arpl
adc
aam
xchg
dec
or
push
lods
dec
fidivl
movsl
in
sbb
xor
adc
sarb
lds
add
imul
mov
sbb
sub
andl
fwait
outsl
xor
add
mov
setns
bswap
lea
lea
pusha
pushf
movzbw
movzwl
call
xor
bt
btc
shrd
push
btc
add
shl
push
lea
lea
call
cmp
rcr
shl
xchg
outsl
dec
and
pop
cld
andl
xchg
dec
loope
nop
aam
cwtl
pusha
inc
and
xchg
xchg
push
lret
sub
pop
aam
loope
cld
xlat
rcl
jmp
lods
scas
sub
mul
mov
and
add
mov
and
jl
pushf
pushf
movl
pushf
movl
push
lea
jmp
fisttps
imul
mov
pop
dec
push
ret
nop
jne
int
icebp
xor
fisubrl
inc
call
add
div
out
push
sbb
push
stos
in
sbb
jmp
into
popf
dec
lds
dec
sub
mov
mov
cmp
mov
push
xor
lds
jb
dec
stc
lcall
mov
call
je
or
shll
and
ret
insb
test
cmpxchg
adc
insl
stc
cli
jne
push
int
mov
outsl
repz
add
sub
loope
and
js
xchg
out
pop
xchg
pop
out
jl
js
pop
aaa
and
mov
mov
imul
out
mov
sub
arpl
fbld
add
mov
push
jne
cmp
mov
mov
or
sbbb
sahf
dec
into
add
xlat
cmpb
rorb
aam
mov
xchg
sets
movzbw
mov
movzbw
mov
movzbl
pop
bswap
mov
pusha
mov
push
jmp
test
call
jmp
lock
mov
in
es
sbb
lret
mov
loope
or
je
dec
adc
pop
addb
loop
ficompl
in
dec
test
mov
mov
andl
pop
out
loope
sbb
and
pop
loope
cmp
mov
cld
rcl
jle
lods
push
fiadds
js
insl
pushl
and
mov
movsl
sbb
cmpsl
jecxz
cwtl
push
adc
xor
jmp
into
add
jbe
mov
and
inc
and
lea
xor
add
mov
movl
pusha
movl
mov
movb
pushf
lea
jmp
jmp
imul
addb
add
aaa
xor
add
add
add
lret
adc
push
add
adc
and
adc
or
btc
shl
das
mov
test
cmc
shl
call
call
pushf
lea
jmp
outsb
sub
add
add
js
mov
mov
push
jle,pt
movsb
in
adcb
int3
mov
and
sti
nop
bound
mov
loope
mov
jp
test
leave
jge
lea
loope
push
dec
and
sti
ret
mov
pusha
not
mov
movb
pushf
mov
pushl
ret
add
dec
outsl
popa
fs
imul
add
add
icebp
cli
xor
adc
add
xchg
push
daa
stos
sbb
inc
push
shrl
and
hlt
icebp
sahf
mov
in
call
lock
fldt
enter
repz
movl
mov
push
push
push
test
shrb
pop
push
pop
shrl
add
xor
sti
push
adc
pop
mov
push
mov
sti
add
aam
push
clc
cmp
outsl
jl
inc
and
imul
in
iret
stos
ss
and
cmpsl
mov
mov
into
add
push
add
xor
mov
repnz
jmp
push
pusha
lea
jmp
movl
pusha
call
add
shr
adc
shl
pusha
mov
test
test
mov
lea
je
pushf
sub
jb
pushf
sub
cmp
cmc
cmp
jmp
lea
call
push
push
jmp
lret
xchg
cmp
das
imul
dec
sbb
outsb
pop
adc
inc
inc
fcompl
fiadds
test
lahf
adcl
fsubs
xchg
sbb
ret
dec
push
in
addl
insb
jp
mov
mov
add
pop
add
es
ss
and
pop
mov
pop
inc
lds
add
mov
les
add
mov
or
jnp
das
imul
xlat
add
fcomps
in
sarl
sub
stos
pop
pop
push
lret
pop
lahf
cmp
mov
sti
cwtl
fs
add
cmp
insl
sbb
les
mov
xchg
jno
mov
cmp
aaa
cld
clc
pushl
add
cmp
js
lds
push
mov
and
lret
pop
adc
sub
mov
cmp
or
mov
into
add
gs
mov
rdtsc
nop
call
imul
cmp
add
push
pusha
movb
lea
jmp
clc
fiaddl
loopne
jp
pop
stc
mov
sub
mov
gs
sbb
fnsave
sbb
fidivs
sub
repz
loope
pop
inc
adc
xchg
push
mov
jp
clc
rorb
add
out
mov
mov
sub
add
push
xor
pushl
ret
inc
outsl
sbb
fucomp
dec
inc
jae
js
add
into
imul
mov
jecxz
iret
fistl
lea
add
push
and
in
inc
das
sbb
mov
cmp
lcall
pop
mov
jle
test
in
les
adc
test
in
inc
in
lock
add
sahf
and
js
gs
bound
fstp
test
sbbb
out
lods
cld
incb
pop
mov
mov
xchg
mov
mov
stos
ja
loop
in
inc
inc
push
movsb
sahf
out
sub
xchg
bound
mov
and
inc
leave
aas
xchg
xchg
mov
mov
xchg
add
rcrb
sub
push
xor
push
aad
xor
loope
into
add
lret
add
xchg
clc
aaa
mov
jl
dec
cmp
test
mov
mov
xor
or
pusha
mov
dec
fildll
add
mov
sbb
xchg
dec
sbb
jnp
inc
aad
push
mov
sbb
fnstsw
mov
shlb
stos
stos
jne
js
cmp
sbb
mov
xchg
into
add
call
pushf
movl
pushf
jmp
pusha
add
pusha
lea
je
clc
add
push
pushf
push
pushf
lea
jmp
mov
jo
mov
rol
movsl
sbb
cmp
sbb
fnstsw
pop
adc
je
push
in
int
push
fmulp
lods
pop
fsubrp
or
sub
orl
adcl
mov
mov
je
sub
data16
je
adc
add
pushf
inc
orl
mov
into
ret
push
mov
and
movl
jbe
jo
xchg
subl
ds
add
hlt
xor
bt
jmp
push
lea
je
pusha
cmp
pusha
call
std
fistpll
lret
mov
adc
mov
xor
mov
jnp
sub
adc
inc
inc
int
or
sbb
lahf
scas
dec
ficompl
xor
movb
orb
xchg
or
test
stc
dec
pop
or
insl
lods
cmp
shl
xchg
cmpsb
adc
rcll
xchg
pop
popf
addb
cli
jle
and
addr16
lcall
and
push
jmp
fisubl
scas
ror
or
push
sbb
jp
loop
adc
xor
add
mov
dec
push
call
into
orb
into
add
dec
or
in
sub
sub
rorl
inc
fstpl
mov
or
and
cmpsb
outsb
or
cmc
mov
add
mov
sub
shrl
fisubrs
je
mov
not
js
dec
clc
shrb
cli
mov
decb
mov
jbe
pop
and
cmpsl
outsl
sti
cld
ja
cmc
xchg
xor
stc
lds
lret
roll
fwait
xchg
dec
adc
lock
test
inc
cmpsb
call
sti
fld
bound
rorb
arpl
jle
push
daa
mull
lret
imulb
shrl
mov
sub
dec
fcoms
mov
lret
sbb
and
cmp
pop
pop
and
dec
data16
mov
xchg
pushf
nop
xor
into
add
pop
divb
lea
jne
pushf
pop
pusha
lahf
movb
movsbw
mov
pop
movb
lea
pushf
movb
jmp
push
lea
jae
push
sub
call
in
sbb
std
adc
dec
sbb
es
std
mov
cmp
lahf
dec
test
fldcw
mov
or
xchg
push
fsubr
push
xchg
fwait
out
rorb
aas
cltd
xlat
cs
les
jns
mov
aaa
std
sti
test
ret
das
add
fsubl
ja
movsb
std
leave
xor
out
mov
lock
xchg
pop
jmp
movsl
cmp
add
dec
pop
inc
xlat
mov
sub
movsb
sub
cmpl
jae
xchg
shll
cmpsb
lcall
divl
lret
or
fdivrl
cld
or
pusha
mov
aas
or
ret
lahf
fwait
pop
lret
jg
add
pushf
xor
lock
pusha
pushl
pushf
lea
jae
cmc
xadd
mov
bts
mov
movsbw
pushf
cmp
mov
cmc
stc
jmp
movl
lea
ja
jmp
mov
dec
jge
jnp
pop
hlt
mov
test
xorb
shrl
fidivl
push
mov
scas
ljmp
mov
outsl
imul
dec
lret
xchg
scas
stos
lods
daa
jge
push
jns
mov
sub
je
enter
adcb
jae
adc
mov
cmp
mov
pop
cmp
mov
les
sbb
in
mov
sbb
ljmp
out
dec
fcomp
rorl
mov
test
fwait
pop
out
js
ret
inc
lret
xchg
por
fcmovu
shl
pop
fwait
ja
cltd
shlb
xor
cmp
leave
into
add
sahf
aaa
adc
push
inc
push
dec
xor
inc
dec
dec
add
mov
dec
shl
btr
ror
or
mov
bt
add
pusha
cmp
movb
mov
stc
test
call
mov
es
in
jle
or
loop
pop
pop
inc
fistl
nop
mov
sub
adc
inc
rorl
popa
in
jno
divl
xchg
enter
bound
mov
mov
fcompl
add
xlat
ficoml
or
xchg
xchg
add
and
cmp
insl
test
int3
cwtl
aam
mov
mov
pop
into
add
xchg
inc
jle
dec
xor
bound
or
xchg
loopne
lcall
pushf
dec
mov
rorb
icebp
sub
sbb
and
das
add
or
enter
movsb
xchg
lcall
out
or
xor
cmp
loop
jmp
xlat
pop
loope
dec
leave
pop
or
mov
hlt
pop
and
xor
push
ljmp
mov
adc
push
add
daa
or
cmp
and
rclb
fsubl
add
jo
jbe
inc
sbb
cltd
fwait
outsl
jo
and
ljmp
pop
xchg
loopne
insb
cmpsb
stos
jnp
pop
ss
out
adc
movsl
int
shl
xchg
js
in
push
data16
out
pop
sub
and
mov
jmp
ljmp
fs
xor
fsubrs
adc
add
push
cmp
lret
jg
fsts
nop
sub
mov
daa
add
mov
jmp
imul
test
and
jns
clc
mov
mov
inc
or
imul
push
jae
push
and
cmp
out
stos
mov
popf
rcll
outsb
inc
jmp
inc
inc
mov
mov
scas
out
lret
mov
push
dec
and
imul
mov
mov
je
pushf
into
add
mov
cmpsl
fsts
add
movsl
addb
mov
scas
cmp
adc
mov
pop
mov
cmp
imul
mov
push
and
mov
push
jecxz
sub
add
adc
pop
inc
int3
or
popf
and
push
xchg
arpl
xchg
pusha
cwtl
mov
pusha
add
cmp
dec
inc
aas
sub
mov
dec
out
add
pop
xchg
push
or
mov
xor
pop
in
pusha
mov
psllq
or
mov
and
adc
mov
xchg
push
or
cltd
or
ret
ds
xor
push
or
repz
sbb
sub
loop
hlt
clc
ret
dec
push
sbb
mov
in
cwtl
fcoms
out
mov
mov
idiv
int3
xchg
shlb
int3
xchg
jp
int3
into
lret
scas
xchg
jnp
mov
aam
jle
out
pop
jecxz
cwtl
popl
fcmovnb
pop
pushf
xor
orl
into
add
add
stos
fsts
lea
mov
jno
sbb
jge
daa
lods
xor
mov
data16
push
dec
out
outsl
sbb
cmp
stc
sahf
inc
out
push
adc
fistps
add
jno
add
addr16
lret
in
mov
and
call
outsl
ljmp
inc
jecxz
test
test
mov
test
outsl
nop
insb
dec
adc
push
or
mov
push
clc
into
add
and
call
pushl
pushf
lea
jae
sbb
xor
mov
bts
inc
mov
or
movzbw
inc
mov
call
mov
fsts
out
in
mov
jg
xor
cwtl
cmp
mov
ja
aad
xchg
ja
test
add
jl
pushf
jo
or
mov
js
or
arpl
pusha
cmc
mov
test
push
add
shlb
xor
mov
mov
les
aas
inc
inc
sub
mov
stos
dec
imul
push
sub
jecxz
orl
mov
add
int3
test
test
jp
cmc
or
push
je
leave
scas
imul
push
xchg
andl
aad
shrl
jns
cmp
xor
cmp
add
data16
mov
insb
sub
xchg
repz
mov
mov
setae
sbb
xchg
daa
lret
ja
lahf
into
add
mov
sub
mov
adc
push
mov
scas
shl
and
ds
sti
mov
inc
in
in
dec
push
nop
pop
popf
in
data16
fistl
xor
rorl
mov
push
cmp
jle
mov
pop
dec
fsts
mov
inc
add
xor
and
in
hlt
xchg
pop
or
mov
cmc
jo
pop
add
push
imul
fsubrl
fidivl
mov
mov
test
mov
pop
in
add
mov
outsl
mov
fwait
pushf
inc
cmp
lahf
fwait
ja
out
into
add
insb
in
add
pusha
pusha
pushl
lea
jmp
rcr
mov
neg
sar
test
sub
sbb
shr
shl
lea
cmp
sub
push
pusha
jmp
lea
jne
jmp
call
sahf
int3
imul
test
cld
jmp
push
das
cld
cwtl
insb
lods
js
jp
sbb
sbb
mov
xor
cmpsb
and
mov
sub
sub
cmpl
hlt
xor
popa
iret
inc
mov
into
jmp
popa
mov
mov
outsb
loopne
imul
or
lods
fwait
pop
xchg
mov
ret
dec
jmp
xor
xchg
idivb
sti
je
sets
popa
xor
loope
sub
into
add
repnz
cmp
pusha
lea
je
clc
cmp
jmp
call
repnz
js
es
push
sub
xchg
push
and
andl
cltd
pop
pop
sub
lahf
add
das
sbb
inc
jne
jb
jmp
enter
aad
lea
jne
call
aas
inc
adc
rorb
test
in
mov
add
orb
lods
pop
sub
aam
lds
rorl
fst
mov
cli
or
insl
orl
add
push
pop
orb
xchg
and
xchg
add
iret
mov
pushf
clc
call
into
cld
flds
mov
xor
xchg
imul
aaa
adc
lock
int
push
insb
mov
into
push
lahf
fwait
js
push
sub
repnz
jg
mov
jns
ja
gs
out
mov
fildll
pop
fs
aaa
mov
jle
lahf
xchg
xchg
jnp
jmp
sbb
jns
push
cltd
out
jmp
mov
jle
push
jae
inc
fdivl
cmp
mov
ja
push
dec
sub
mov
mov
mov
mov
sbb
rcrl
popa
sahf
insl
imul
inc
jg
loope
sbb
dec
jno
cwtl
mov
pop
lahf
sbb
out
xor
push
aad
out
rorb
lahf
cmpl
jnp
fisttpl
test
inc
sbb
mov
and
mov
mov
iret
imul
push
into
add
les
fsts
mov
insb
insl
adc
test
divb
mov
fnstcw
or
std
test
leave
pop
sahf
cmpl
mov
xchg
in
mov
jp
jbe
test
xor
sub
mov
ss
int3
lods
sbb
cwtl
push
fstps
faddl
into
push
xor
xchg
dec
dec
sbb
inc
clc
cmp
fistps
pop
ja
sub
xor
xchg
mov
jbe
aas
fcmovnu
push
lods
cltd
stos
xchg
xlat
movsb
jae
pop
sbb
scas
shrl
sbbb
jge
frstor
jae
add
lock
imul
add
into
iret
dec
mov
cld
nop
sbb
xchg
jo
into
add
rcll
add
ds
mov
and
fs
jmp
mov
mov
mov
mov
pushl
ret
lea
ja
cmc
sar
sub
call
lea
call
push
sub
lea
jl
pusha
lea
jne
pusha
call
or
pushf
pusha
lea
je
bswap
mov
mov
cwtl
movsbw
setno
push
movzbw
pushf
lea
jge
lea
jg
pusha
pushf
movl
jmp
pushf
mov
movl
push
pusha
pushf
pushf
lea
jmp
call
pushf
push
cld
mov
add
add
sahf
mov
add
fwait
aas
inc
int3
pause
lcall
cli
add
out
xchg
push
fs
lcall
dec
push
loopne
popa
arpl
or
addr16
idiv
popf
mov
movsl
data16
adc
or
ds
xlat
inc
adc
inc
icebp
fstl
decb
push
rorl
dec
sahf
dec
mov
xor
or
jae
add
sub
in
lea
js
pusha
lea
jae
bt
cmc
pushf
cmp
add
pusha
pushl
mov
pushl
lea
jmp
push
jmp
clc
sub
stc
rol
movw
jmp
or
jecxz
popf
push
movsb
mov
into
and
rcll
imul
mov
xor
idivl
and
insb
or
add
lea
call
pushf
pusha
push
adc
jmp
imul
gs
xor
cs
insb
add
ret
std
cmc
jmp
stc
jmp
dec
jl
es
cmc
jp
sub
scas
imul
xorb
or
adc
mov
iret
or
pop
push
jnp
and
andl
pop
test
out
pop
in
pushf
add
mov
test
sub
jl
cmc
fidivrl
fsubrl
add
aad
cmc
dec
bound
loopne
pushf
ja
inc
jecxz
mov
mov
xchg
cmp
add
jns
push
pushf
lea
je
jmp
loopne
stos
push
or
imul
cwtl
pop
cmp
mov
dec
ljmp
mov
xor
lcall
mov
mov
ss
ljmp
cmp
cld
outsb
add
add
jo
jb
dec
in
addl
lret
cmp
inc
adc
pop
movsb
jg
mov
call
fs
addb
jns
push
pop
or
push
xlat
add
sub
push
sbb
xchg
daa
or
ret
mov
add
fisubl
add
shl
mov
pushf
push
bt
and
movb
cmc
test
bt
add
lea
stc
add
push
jmp
lods
imul
or
sub
lahf
lcall
out
or
stos
out
lret
fwait
out
sub
mov
out
pop
or
stos
imul
sbb
out
sub
cmp
sub
lret
pop
out
lahf
mov
sub
pushf
mov
dec
inc
enter
pushf
mov
cli
xchg
mov
call
pusha
mov
leave
movsl
in
cs
mov
or
movsl
imul
mov
ror
ret
and
xchg
sbb
into
jnp
imul
mov
aam
jb
outsl
mov
stos
xchg
pop
call
push
push
xchg
mov
inc
pushl
ds
out
sub
push
mov
sti
or
divl
ds
arpl
and
dec
adc
jp
daa
je
adcb
xor
cs
push
aad
rorb
sti
jns
xchg
jae
mov
add
aad
call
int
clc
push
testb
in
mov
sub
or
aaa
xchg
rol
ret
sub
lods
jo
sub
add
dec
inc
mov
mov
mov
sbb
mov
loope
nop
cmp
jb
mov
dec
imul
inc
fstps
hlt
iret
inc
inc
imul
and
xchg
mov
std
mov
lret
xor
xchg
ror
fcmovb
mov
push
fstp
push
or
mov
pop
add
test
cs
jp
sub
add
addr16
jmp
bswap
setnp
lea
call
lea
jne
call
or
jmp
call
dec
jge
pop
shl
es
push
icebp
jnp
lods
lcall
outsb
scas
mov
mov
mov
add
addr16
test
in
sub
mov
dec
mov
imul
cmp
sbb
fs
mov
push
inc
adc
in
sub
cwtl
aam
mov
add
jle
stc
je
mov
mov
cmp
sar
sbb
shr
push
and
daa
mov
rcr
sub
sar
aas
push
shr
bts
clc
push
bsr
bsr
push
shl
bt
rcl
push
pusha
movzbw
stc
mov
stc
movl
test
pusha
push
jmp
push
lock
std
std
test
xchg
popa
or
xor
shll
je
movsb
jnp
shrl
mov
pop
lods
ss
and
or
jge
jns
rcr
dec
test
aam
push
roll
fsubrl
adc
test
push
or
mov
inc
push
in
sub
push
data16
hlt
inc
pop
mov
dec
mov
pushf
adc
dec
mov
not
and
rol
inc
add
rcl
sbb
test
mov
test
stc
pushf
movb
test
pushf
pushf
call
mov
movl
dec
call
mov
mov
in
es
gs
inc
add
ss
int
cmp
adc
xchg
outsl
xor
sub
cmc
mov
fwait
outsl
pop
ret
mov
aas
lret
cmp
outsb
cmp
mov
arpl
rorl
mov
dec
idivl
lahf
dec
sti
pushf
arpl
into
cmpsb
cmovns
adc
flds
sbb
mov
dec
jae
sbb
mov
pop
and
ds
mov
test
add
std
push
xchg
lea
je
xor
btr
add
stc
call
call
xor
xchg
jbe
imul
fidivs
in
loop
insb
sub
fwait
andb
fdiv
xchg
dec
pusha
sub
ja
sub
rcrl
les
push
int3
push
out
xchg
cmpb
daa
lret
es
inc
inc
andl
test
arpl
sahf
mov
in
lods
jo
cmp
aad
and
or
into
test
jns
dec
xchg
sbb
lods
adcb
mov
sub
ficoms
mov
popa
pop
or
leave
mov
pop
xor
dec
lock
mov
sbb
les
mov
cld
test
sbb
xchg
ret
icebp
fidivl
mov
inc
loope
jnp
loop
loopne
pop
xor
in
mov
mov
fildll
icebp
push
sti
mov
mov
ret
mov
push
int3
shrb
xor
in
leave
mov
cwtl
arpl
mov
xchg
pop
cmpsb
or
movsl
icebp
ret
mov
imul
mov
nop
and
cmp
fbstp
add
mov
sub
lcall
scas
lcall
inc
cltd
insl
movl
push
cli
pop
jg
mov
fnsave
cmp
jmp
lret
lock
std
push
jmp
adcb
ret
pop
and
xlat
cli
loop
push
jle
lahf
insb
test
push
xchg
in
mov
lods
cmp
adc
xchg
rorb
in
sbb
in
call
pop
sbb
ret
ret
xchg
aad
add
cld
mov
cmp
loop
movsl
push
mov
clc
cmp
arpl
xchg
movl
pop
sahf
cmp
ret
mov
jmp
mov
outsb
mov
sbb
decl
or
xchg
movsb
inc
mov
cmp
mov
lea
xchg
stos
cmpsl
arpl
shll
fsub
filds
cltd
jecxz
sbb
xor
or
jnp
cmp
push
shr
pushf
xchg
lahf
cwtl
cwtl
lahf
pushl
popl
call
lea
je
rol
cmc
rcl
add
dec
bt
mov
pushf
pushl
add
pusha
mov
bswap
btc
mov
mov
movl
cmp
movl
call
jecxz
and
lods
push
es
iret
stos
ja
sbb
mov
gs
pushf
cltd
sbb
cmpsl
outsb
hlt
xchg
pop
out
jnp
jbe
and
leave
or
push
xlat
mov
jns
cli
sbb
dec
rcrb
fwait
daa
add
mov
in
enter
fisubs
pusha
pop
icebp
shlb
fs
sbb
rcll
adc
jmp
mov
mov
loopne
out
pop
frstor
aas
popa
rcll
mov
orb
aad
fsubrl
jo
cli
pop
out
jl
jmp
jno,pt
int
mov
mov
sarb
cmp
das
fcmovnu
test
movsb
jnp
jbe
cld
fcoml
adc
jle
mov
jns
jl
pop
cltd
popf
mov
cmp
iret
lret
repnz
in
mov
sbb
xchg
aaa
in
enter
and
mov
or
mov
out
leave
outsb
cmp
imul
stc
xchg
aad
pop
mov
loopne
push
inc
sbb
cwtl
into
add
ljmp
pop
or
call
pusha
movb
not
mov
lea
lea
mov
movzbl
jmp
call
call
mov
cmc
add
push
sub
push
pause
xor
shll
add
xor
mov
enter
les
sets
cmp
xor
inc
popf
cwtl
out
or
int3
pusha
adc
lods
sbbb
cmp
test
add
fnstcw
lea
call
jmp
movl
pushl
push
lea
jmp
jmp
lea
jb
bt
call
adc
mov
push
outsb
inc
or
scas
mov
popf
mov
mov
pusha
mov
xor
out
dec
adc
mov
fcmovnbe
sub
mov
fnstsw
xor
inc
push
or
jbe
jecxz
add
fidivs
popa
push
sti
enter
subl
pushf
shll
pushl
std
negl
pop
add
js
loopne
cmovb
fidivrs
or
call
popa
divb
xor
fmull
mov
cmc
pop
cmp
fcomi
fdiv
rcl
rorl
lahf
ret
sub
rol
rol
bt
rol
not
stos
jmp
and
mov
push
xor
test
add
and
add
jl
pusha
in
in
xor
loop
ret
ds
mov
repz
aad
mov
cltd
and
sbb
dec
pop
lods
pop
aam
inc
cmp
sbb
sbbl
dec
leave
pop
lret
int3
shll
mov
jbe
scas
dec
sub
loope
push
add
jecxz
or
xor
mov
and
cltd
and
sarl
fldenv
cmp
xchg
dec
bt
sbb
roll
jne
pusha
pushf
lea
jb
pushf
pushl
ret
lea
je
movsbw
sub
neg
cwtl
shld
and
mov
cmp
daa
lea
mov
btc
btr
shr
shr
movzbw
test
mov
pushf
bt
push
stc
or
call
movl
pushf
movl
push
lea
jmp
pushf
lret
call
push
ret
mov
sbb
ss
pushf
ja
add
sbb
jo
mov
bound
jge
jbe
cltd
push
xor
mov
test
add
cmp
dec
pop
in
mov
xor
fnsave
or
xor
sub
lret
jmp
jg
jae
cmp
add
mov
mov
daa
imul
sub
jg
clc
in
rcl
iret
mov
or
or
dec
dec
jnp
enter
fnstsw
flds
sub
add
into
add
gs
sub
sbb
and
jb
test
clc
cmpb
call
mov
clc
add
test
btc
movzbw
mov
test
bt
jmp
shr
ror
movzbw
bt
mov
pushf
clc
pushl
cmpb
pushf
lea
jne
aas
sub
rol
mov
call
xchg
test
push
pushl
movb
jmp
lea
jbe
cmp
lea
rol
mov
add
and
xor
shr
add
jmp
pusha
pusha
push
push
movl
pushl
call
push
pusha
movb
movl
lea
jp
pusha
movl
pushf
pusha
push
mov
lea
jmp
ja
dec
ud2
mov
sub
xchg
dec
xor
xchg
and
std
mov
mov
dec
movsl
loope
inc
in
div
jmp
adc
sbb
and
adc
imul
mov
jne
pop
mov
and
popa
lcall
rcrb
mov
leave
das
cmpsl
out
ret
or
int
xchg
mov
pop
fwait
mov
pop
call
lea
mov
in
into
add
sahf
aaa
jae
test
cmc
pushf
pusha
xor
lea
pushf
call
push
movl
pusha
pushf
pushf
pushf
mov
pushf
movw
pushf
pushl
ret
sub
ret
addr16
xchg
lret
cmc
rclb
leave
mov
mov
inc
mov
or
push
mov
add
push
pop
sub
push
add
add
stos
and
xor
cwtl
add
dec
dec
imul
xor
sub
bt
pop
mov
adcb
out
fldt
xlat
xorl
cmp
add
pusha
icebp
int3
pushf
lea
je
pusha
lea
jp
setae
lea
lea
not
xchg
movzwl
bswap
bswap
jmp
mov
and
sbb
popf
xor
add
jbe
xor
jle
push
push
push
pop
out
jae
mov
test
adc
fsts
loope
inc
sbb
test
xchg
mov
data16
ja
call
fdivrs
jge
add
movl
pushf
movb
movb
pushl
lea
jmp
mov
cmc
add
int3
mov
ljmp
xchg
pop
dec
lret
outsl
jo
movsb
aad
sbb
lcall
lock
mov
les
or
loopne
cmp
cld
pop
popa
add
ret
xlat
mov
add
shll
and
add
call
jbe
popa
not
fsts
add
loope
xchg
push
or
lods
or
pop
mov
xlat
add
addl
test
jge
into
add
fs
jne
aam
xor
xor
call
cmc
mov
bt
call
movl
call
mov
movb
pushl
ret
call
movl
pushf
jmp
lea
je
pushf
cmc
sub
cmp
bt
cmc
cmp
movl
lea
ja
cmc
cmc
imul
stc
stc
jmp
cmp
or
mov
loop
pop
adc
mov
pop
clc
xchg
xchg
xor
cmp
adc
push
push
push
sub
addr16
ljmp
mov
jp
in
mov
out
pop
jp
lods
dec
test
inc
lret
mov
movsl
xchg
addb
popa
jg
inc
push
out
mov
loope
rorb
mov
cmp
popf
xchg
sahf
and
xchg
scas
and
pop
bound
mov
mov
dec
add
push
push
jae
jo
stos
mov
jns
dec
mov
in
cmp
inc
sbb
scas
dec
sbb
push
aad
popf
xor
stc
fstp
lret
sarl
aad
mov
inc
aaa
pop
sub
ja
orl
xchg
xchg
shrb
fiadds
loope,pn
jl
cmp
hlt
clc
in
xchg
sbb
testb
mov
xor
cmp
mov
fnstcw
fidivl
sub
xlat
jl
add
cltd
out
cmpl
rcl
lahf
inc
inc
mov
cmp
dec
mov
icebp
in
sub
fistps
les
pushf
mov
shlb
push
mov
fcmove
xorl
sub
adc
fnsave
add
and
or
dec
pushl
jmp
push
jmp
mov
add
in
mov
into
iret
stos
lods
aam
pop
fwait
pop
push
inc
jecxz
mov
movsb
pop
add
dec
adc
jns
add
cmpsl
outsl
lea
jb
cmc
push
cmp
pusha
jmp
pushl
lea
jae
bt
sub
not
stc
mov
mov
bts
sbb
mov
movsbw
btr
shl
mov
stc
bt
xor
clc
call
add
mov
add
add
add
add
add
add
icebp
push
add
add
add
mov
mov
int3
mov
dec
stos
mov
out
lret
test
jl
xor
stos
xorb
jge
ficoms
inc
dec
insb
or
mov
cmp
pop
lods
test
mov
push
inc
cmp
push
sub
push
push
and
sbb
aas
mov
sub
sub
jp
push
jp
aam
push
adc
and
mov
jmp
repz
int3
addb
xchg
into
pop
lcall
je
arpl
ljmp
jge
fisubl
dec
fcomps
push
movsl
sahf
jb
mov
in
push
and
jo
in
inc
dec
jmp
add
jae
or
and
in
cli
inc
mov
repz
jl
fdivrl
push
xchg
push
and
nop
sbb
mov
inc
test
cmpsw
cmpsl
out
pusha
rorb
adc
mov
movq
inc
push
cmp
clc
mov
and
xadd
sub
adc
push
test
mov
ds
mov
pop
inc
sub
cld
or
and
push
sbb
cmpsb
lret
jl
sub
popa
ss
and
sub
xor
cmp
movsl
int3
test
sbb
push
pop
dec
out
std
add
jl
jnp
cli
inc
dec
mov
std
push
inc
adc
sbb
xchg
and
out
cmp
or
dec
cli
int3
xchg
and
fnstenv
outsb
mov
test
mov
fisubrl
pop
pop
inc
aas
cwtl
aas
mov
push
stc
icebp
push
dec
filds
nop
in
sub
lock
int3
xor
cmpsb
xlat
scas
lcall
mov
in
cmp
add
fistpl
lods
pop
orb
pop
ror
sahf
call
sub
arpl
cli
sti
adc
sub
push
pop
and
xor
orl
fwait
pop
xchg
xorl
test
sbb
push
cmp
ror
imul
fldt
pop
sbb
call
cli
inc
fstpt
adc
pop
out
jp
add
in
test
pop
inc
lcall
daa
jmp
xor
mov
pusha
repnz
jmp
adc
push
test
push
clc
loope
pop
in
xor
jecxz
out
add
das
roll
adc
and
push
sub
movsl
or
ret
xchg
mov
je,pt
fistl
mov
in
in
lret
decb
inc
and
lods
cmpsl
je
jno
add
sbb
sbb
sbb
sub
cwtl
test
loopne
out
or
xchg
popa
je
mul
gs
enter
pop
add
jmp
mov
int3
lahf
dec
mov
push
leave
roll
pop
dec
test
dec
lds
and
add
inc
loopne
adc
loopne
dec
pushf
xor
ficomps
sub
pop
mov
mov
sub
push
loop
test
aaa
popf
jge
dec
es
xchg
sbb
lds
sub
pop
sbb
mov
fisttps
rcll
popa
idivb
in
test
inc
ret
mov
or
mov
or
mov
sub
ret
out
add
movsb
cmp
pop
adc
cmpsb
imul
xchg
sub
adc
test
mov
addr16
in
aam
outsl
push
loope
and
inc
inc
xor
icebp
push
fldcw
mov
push
cld
add
xchg
mov
adc
cmpsb
pop
aas
test
in
cltd
fmuls
outsl
dec
out
and
mov
pop
push
rorb
test
fnstcw
jge
pop
cmp
pop
sub
fs
mov
cmpsb
adc
jp
std
and
negb
aaa
inc
aam
shll
icebp
idivl
add
jl
pop
ljmp
jg
leave
mov
cld
imul
add
shl
mov
test
jnp
shlb
mov
cmpsl
hlt
and
adc
mov
mov
xchg
aad
and
mov
push
mov
bound
xor
or
into
add
gs
sarl
sub
sub
inc
pop
nop
les
ss
enter
mov
pop
lret
hlt
xlat
movsb
fcmovbe
pop
pop
pop
lods
mov
out
mov
aad
das
sbb
dec
push
sbb
subb
iret
mov
cmp
push
jecxz
pop
jecxz
sti
xor
outsb
cs
add
repz
sar
jmp
int3
push
in
pop
fists
ret
xor
test
jno
jge
push
push
leave
ss
jbe
add
push
pop
lret
cmp
cli
aad
fidivrs
xchg
push
mov
sbb
jg
lea
mov
popf
xchg
stos
mov
mov
xor
jg
lock
test
movsl
into
mov
xchg
xor
data16
movsb
fdivl
cmpsb
lret
iret
sti
sbb
inc
xor
sbb
and
addr16
push
movsl
xor
fsubr
and
or
mov
sub
push
push
dec
in
movsl
xor
mov
loop
mov
in
inc
lret
mov
adc
mov
adc
jnp
mov
sub
aam
mov
sub
inc
je
or
stc
test
fiaddl
movsl
pop
adc
xor
sbb
outsl
inc
pop
repz
fcmovne
fidivs
dec
jns
aaa
mov
adc
and
in
in
sub
sub
mov
inc
dec
pop
mov
ret
leave
push
fldt
jge
stos
inc
dec
cwtl
or
push
xchg
xchg
sbb
cmpsl
movsl
push
and
ljmp
ffree
outsb
pop
jge
adc
cld
int3
addb
iret
and
popa
loope
xlat
push
fiadds
ja
std
jle
enter
cwtl
lds
mov
sahf
and
add
cmp
andb
jnp
and
lods
push
lock
jp
notb
cmp
dec
roll
mov
js
je
faddl
sti
int3
pop
lea
xchg
push
adc
push
ljmp
scas
cmp
mov
aam
jle
inc
loopne
adc
xorb
jmp
fstpl
int3
push
mov
icebp
push
les
mov
pop
aaa
and
dec
or
mov
dec
movsl
or
adc
add
cmp
sub
movsl
push
xchg
adc
ss
ljmp
cld
stos
mov
sbb
pop
addr16
lcall
cmpsb
push
xor
push
lret
testl
int
movsb
rcrb
xor
mov
mov
sbb
das
sbb
xor
notb
inc
and
sti
and
mov
push
mov
or
mov
xlat
or
mov
ljmp
aam
cmp
mov
xor
cmpsb
faddl
mov
push
pop
dec
cmp
mov
add
push
xor
pop
mov
xchg
mov
mov
call
add
add
sbb
cmp
ljmp
dec
mov
pop
addr16
lahf
dec
xor
clc
adc
and
mov
jmp
xor
outsl
mov
or
outsl
inc
int3
jmp
aad
ror
cmp
fwait
out
jb
mov
push
dec
mov
add
sbb
sub
ret
call
shll
enter
inc
popf
sbb
push
and
lea
out
sbb
les
adc
and
push
add
and
sbb
mov
mov
lods
sbb
roll
xchg
mov
inc
and
cmp
cld
push
sbb
mov
and
xor
and
decb
into
cmpsl
push
out
add
nop
push
mov
and
push
mov
xchg
std
xor
fs
pop
pop
jne
jnp
mov
ljmp
test
pop
test
mov
jbe
fdivrl
xchg
jle
scas
xchg
xlat
and
add
fwait
cmp
lods
lock
and
movsb
push
inc
outsb
mov
jae
jnp
mov
mov
mov
repz
adc
adc
loop
add
add
adc
cli
les
mov
mov
leave
stc
push
lock
test
loopne
fwait
clc
inc
fucomip
inc
cld
adc
add
ror
add
lret
add
ja
cwtl
cmp
jecxz
inc
stos
rcll
les
xchg
ja
ret
jne
xchg
popf
mov
jp
adc
mov
jbe
push
insb
pop
dec
cmp
or
dec
test
jbe
movsl
pop
std
fbld
sbb
fstpt
into
insl
push
stos
fistpll
sbbl
divl
in
mov
rcr
sbb
inc
insb
andl
enter
out
mov
and
rolb
stos
fimull
int
xor
inc
jmp
xlat
cli
xchg
sbb
mov
xchg
nop
out
dec
inc
insb
fiaddl
lods
fnstcw
inc
jecxz
pop
push
test
and
dec
daa
xchg
or
pusha
icebp
sbb
cs
movl
and
int3
or
adc
out
aad
cld
pop
cmp
lea
push
cmp
data16
xor
movsl
mov
pop
icebp
dec
imul
push
lcall
jns
enter
dec
std
loopne
xchg
mov
push
in
mov
repnz
sub
insb
dec
push
test
mov
scas
pop
pusha
mov
scas
sbb
pop
xlat
sbb
xor
sub
cmp
fwait
clc
or
sbb
jno
imul
clc
push
shlb
jecxz
pop
pop
pop
dec
and
ror
push
jae
xchg
out
addb
pop
out
inc
inc
das
dec
aam
lods
mov
test
sub
push
pop
mov
mov
call
out
sub
adc
andl
or
dec
aam
fbstp
addl
adc
imul
loope
cmp
and
mov
mov
xchg
xor
cmp
dec
and
in
jmp
xchg
pushf
jmp
add
mov
andl
inc
push
jne
je
movsb
push
mov
repnz
or
daa
scas
mov
adc
js
bound
in
lcall
sahf
stos
xor
xor
pop
pop
pop
adc
cli
rcrb
mov
add
je
cmp
cmc
clc
cmp
call
jmp
les
sub
sbbb
shlb
shll
sbb
jp
inc
pop
or
xor
mov
cld
cmp
stos
jb
adc
cmp
mov
adc
int3
jo
inc
push
jmp
fidivl
push
cmc
fldenv
inc
aad
gs
cmp
repz
pop
adc
lods
adc
sbb
imul
mov
push
jle
js
and
and
mov
outsl
dec
nop
sub
das
fucomi
fs
enter
daa
in
mov
jnp
sub
shl
movsl
mov
inc
and
lret
dec
push
fcompl
dec
negl
aam
cwtl
xor
ljmp
sub
and
stc
cmp
pusha
mov
push
lea
jb
test
jns
cmc
pusha
cmp
jmp
movl
call
jmp
jmp
aaa
fsts
and
stos
pusha
sub
mov
mov
pop
mov
mov
je
jb
pop
add
dec
xchg
cmp
dec
mov
push
push
add
add
js
call
test
call
push
xorb
jbe
mov
push
fcmovnb
push
fcmovb
fs
cmc
test
fcoms
cmp
mov
fstpt
sub
mov
or
mov
fists
cmovge
hlt
icebp
pop
ljmp
in
jg
xchg
insb
add
cmp
cwtl
cmp
inc
daa
lods
xchg
cmp
adc
sub
andb
ficompl
add
add
mov
stos
pop
mov
movl
pusha
call
jbe
out
pop
jno
stos
jb
cli
and
mov
pop
in
cltd
push
dec
inc
add
mov
inc
or
cmp
xor
jle
adc
inc
aas
xchg
inc
aad
and
inc
in
mov
add
rcll
leave
es
mov
mulb
insb
cmp
lret
add
es
inc
adc
adc
cmp
les
pushf
xor
mov
or
cmpsl
in
mov
fs
jle
jns
daa
ret
xchg
test
icebp
lds
cmpsb
int
xchg
nop
out
stos
into
mov
clc
dec
adc
xlat
call
xchg
add
fisubrl
aas
sub
jae
or
scas
jle
les
int3
or
popf
lcall
sahf
xchg
push
into
add
dec
or
mov
movzbw
movsbw
mov
pusha
mov
mov
push
pushl
ret
test
pop
in
ret
cmc
add
push
fs
outsb
imul
xchg
mov
aas
or
shll
dec
pushl
sub
mov
in
pusha
mov
sbb
mov
call
enter
les
mov
adc
test
int
inc
sub
mov
add
ds
jb
pop
push
pop
or
mov
pop
das
imul
jp
sbb
push
aaa
enter
jp
ss
sub
sub
setnp
inc
jmp
data16
je
pop
pop
sbb
aad
inc
mov
jle
jle
cmp
ret
les
push
pushw
push
cs
fsubs
inc
inc
inc
cmp
jge
dec
sahf
xchg
daa
and
xchg
xchg
inc
inc
fldcw
cmc
roll
lea
and
loopne
popa
cmc
sub
push
xor
paddb
aad
dec
icebp
lds
into
add
cmpsl
outsl
push
clc
fsubr
fsts
in
cmpsb
inc
cmp
pop
jle,pt
lea
stos
xchg
iret
pushf
dec
cmc
sub
rclb
dec
clc
cmp
stos
test
or
shrl
jae
or
mov
xchg
addr16
cmc
sub
movb
pop
or
inc
add
flds
push
leave
imul
andl
clc
xor
xchg
clc
cmc
stos
ja
jae
pop
fwait
pop
adc
jno
xchg
shlb
push
pop
cli
jle
push
sub
sbbb
mov
fistpll
decl
les
or
cmpsb
icebp
data16
jp
das
stc
dec
and
repnz
das
add
adc
out
and
jg
lcall
stc
je
sbb
and
es
cld
jne
jns
and
imul
outsl
scas
pop
scas
push
int3
dec
into
xor
out
shll
push
incl
movsb
movsl
dec
fadds
pop
push
pop
cs
daa
cmp
outsb
adc
sub
dec
pop
jecxz
xor
mov
add
call
push
repz
test
xchg
jg
sub
fwait
push
mov
lods
aam
iret
stos
outsl
and
pop
or
xchg
mov
push
dec
inc
mov
xor
jmp
push
bnd
enter
ljmp
scas
out
push
aad
and
pushf
cli
sahf
fidivrs
andw
mov
leave
xchg
jmp
test
lahf
push
cmpsl
mov
cmp
xor
arpl
adc
mov
push
loopne
inc
mov
out
push
xor
xchg
pop
add
add
xchg
push
push
rol
mov
jle
sbb
push
ficoml
scas
or
mov
frstor
sub
mov
inc
stc
ret
sbb
cltd
and
cmpsb
das
imul
pusha
test
cmp
pushl
popl
push
cmc
pusha
cmp
call
lea
jae
pushf
jmp
xlat
add
es
jno
inc
call
test
inc
adcb
dec
ss
jecxz
pop
addr16
cmpl
fs
mov
sbb
mov
in
divl
mov
sbb
jne
jo
sub
adc
rorb
outsb
sarl
lahf
pop
scas
jg
loopnew
xchg
xchg
outsl
arpl
mov
insb
push
nop
repz
lcall
mov
cmp
push
out
jp
into
add
ljmp
je
cmc
cmp
pusha
lea
je
push
stc
push
cmp
jmp
pushf
lea
je
pushf
pushl
cmp
test
add
jmp
movl
push
lea
jmp
neg
gs
movsb
dec
push
sti
mov
inc
jge
das
sti
or
dec
push
sbb
pop
jns
dec
dec
and
push
loop
fistps
inc
adcl
shr
lret
sbbl
inc
jge
lcall
mov
leave
movsl
and
fimuls
mov
mov
cltd
test
into
add
enter
and
dec
pusha
mov
lea
call
xlat
xchg
das
in
mov
pop
fldt
rclb
shlb
push
jle
mov
in
dec
push
dec
adc
fldl
sub
or
aad
enter
or
sub
out
mov
pop
push
pop
mov
imul
negb
gs
loop
pop
es
nop
adc
mov
pusha
push
dec
push
lcall
jg
out
sub
add
xchg
pusha
sub
into
xchg
pop
cmp
fidivl
cli
cmc
adc
mov
mov
cld
nop
test
mov
xchg
call
push
pop
stos
das
add
inc
addl
out
jns
mov
push
and
fwait
adc
stos
mov
jmp
into
add
pop
not
xor
dec
fstpt
mov
jne
aaa
sub
xchg
pop
fwait
push
imull
adc
or
mov
outsl
outsl
shrl
adc
jp
or
stos
xchg
sbb
add
dec
or
not
inc
mov
pusha
cmp
movb
cmp
cmpb
jmp
push
mov
jmp
jno
cmp
and
push
sub
xchg
pusha
inc
or
fists
ret
add
and
xchg
mov
mov
dec
jno
jo
mov
data16
sbb
xor
int
push
lock
push
fdivl
ljmp
sub
lds
call
pop
pop
into
add
bswap
add
es
clc
cmp
pushf
pushf
call
out
loope
jb
data16
jns
sub
cmpsb
imul
dec
xchg
stos
mov
push
mov
mov
sub
lret
scas
inc
xlat
mov
cwtl
adc
add
hlt
mov
xchg
call
pop
adc
jl
pop
pop
out
scas
jmp
rcl
sahf
gs
adcl
testb
test
mov
add
lahf
adc
pop
int3
mov
insb
insl
or
outsb
mov
and
add
cs
lods
ja
mov
fstl
icebp
bound
jmp
push
cmc
bt
cmp
jmp
movl
pushl
jmp
jmp
xchg
push
inc
sbb
mov
rorl
movsb
andl
xor
add
out
mov
add
xor
clc
rorb
and
or
sub
mov
fwait
pop
lods
pusha
add
pop
and
sarb
into
add
inc
adc
pop
pushf
jmp
setg
rcr
bswap
mov
pushf
cmp
cmp
mov
cmpb
pusha
lea
jne
rcr
cwtl
shr
xor
sbb
bts
mov
sub
test
shr
inc
add
dec
pushf
mov
mov
bt
bt
stc
test
jmp
push
bsf
pushf
je
sbb
pop
push
jmp
lea
lods
cltd
dec
add
and
sbb
cs
loop
cs
pop
inc
inc
out
add
xchg
mov
mov
pop
cmpl
leave
xchg
ficomps
jns
mov
jno
cmp
jae
push
and
js
cmp
stos
sbb
leave
insl
imul
push
into
add
into
xchg
add
imul
jae
push
jmp
clc
mov
sub
jle
das
and
xchg
xor
cmpsb
pop
das
repz
enter
mov
rolb
ja
add
and
lea
mov
insb
sub
xchg
jne
cwtl
shrl
repnz
cmc
xor
rcl
dec
mov
daa
in
lret
and
sbb
jl
sub
jmp
gs
add
jp
mov
fs
jne
cwtl
setp
jmp
shr
stc
mov
pusha
bt
cmp
call
stc
mov
push
loop
ret
fldcw
in
mov
fwait
nop
sbb
loopne
insl
call
cmp
push
imul
testl
decl
rorb
mov
mov
or
inc
dec
mov
aad
fcoml
into
bound
popf
nop
scas
fwait
les
mov
add
in
jno
mov
jns
sub
fxch
add
inc
pop
sbb
mov
and
ja
dec
push
lret
mov
dec
hlt
loopne
mov
movsb
movsl
hlt
mulb
xchg
js
add
push
xchg
daa
mov
sbb
mov
xor
into
add
inc
push
call
lea
je
pushf
adc
mov
push
pushl
lea
jmp
lea
call
call
lea
je
adc
cmp
stc
xchg
add
push
clc
sets
cmc
sub
rol
cmc
and
shr
jmp
call
lea
jne
cmc
mov
bt
add
jae
movzwl
movzbw
mov
bt
bt
pushf
cmc
add
stc
clc
mov
stc
pushf
call
roll
ficomps
shll
popa
push
adc
icebp
int
stos
outsb
outsl
popa
pop
stos
push
pop
and
nop
jns
sub
into
frstor
or
xor
aaa
pop
std
push
sti
lret
fimuls
imul
jo
dec
push
fs
or
mov
lea
xchg
push
dec
pop
std
les
insb
jge
je
push
jecxz
sbb
mov
xchg
pop
jmp
sbb
lock
mov
push
adcb
push
sti
xlat
lret
jnp
dec
dec
add
movsb
sub
movw
ror
push
pushl
dec
clc
cmc
clc
cmp
call
movb
movl
pushf
lea
jmp
pusha
pusha
movl
call
mov
lea
je
pusha
movb
push
push
lea
jmp
jmp
jmp
push
lea
je
call
jb
inc
sarb
push
es
imul
mov
xchg
pop
pushf
jns
icebp
repnz
pop
xchg
in
jns
inc
push
fidivrl
xchg
rclb
adc
xchg
stos
dec
mov
test
or
mov
imul
inc
mov
push
adc
in
dec
adc
inc
nop
mov
push
mov
mov
js
mov
cmp
dec
loop
cmpsl
jae
popa
dec
and
sub
aad
add
lods
pop
mov
ficomps
jae
outsl
loope
addr16
xor
icebp
aaa
jb
in
mov
mov
test
int
into
std
dec
xchg
cmp
jbe
add
push
aam
mov
test
add
fnstcw
into
mov
and
cmp
fwait
cwtl
insl
stc
cmp
xchg
test
inc
adcl
pop
jbe
jle,pt
test
jmp
addr16
sbb
push
xor
sbb
cmp
sbb
jns
inc
icebp
xor
dec
xchg
push
push
push
inc
sub
hlt
enter
sarb
int3
into
add
xchg
inc
jle
inc
or
lea
jmp
push
lea
je
clc
test
clc
test
sub
cmc
cmp
jmp
popf
cpuid
nop
push
call
pushf
movb
movl
pushf
movb
movb
lea
jmp
mov
push
pushf
pushl
lea
jmp
inc
je
mov
js
xor
push
ret
jo
loop
je
test
mov
aam
dec
mov
dec
stos
push
testl
pop
jge
imulb
jo
cltd
sub
push
cmp
pop
call
mov
in
dec
xchg
js
ljmp
mov
lds
adc
cltd
lea
into
add
push
inc
pop
xor
add
aad
jno
adc
jmp
push
aad
pop
shll
xor
jmp
divl
add
push
push
out
test
push
mov
jne
xchg
xchg
insl
adc
jno
loope
jns
into
add
push
add
jmp
xor
fldt
hlt
lret
pop
lods
test
stos
aaa
in
cwtl
xor
or
ror
mov
push
nop
xchg
data16
add
sub
leave
add
mov
gs
or
add
jbe
sbb
test
std
lcall
movsbl
movb
movzbl
pusha
mov
lea
lea
jmp
rcl
call
jmp
mov
adc
mov
enter
lods
jno
pause
xor
pushf
jno
imul
dec
imul
inc
sub
add
sarl
test
pop
push
repz
test
ficompl
xchg
pop
xor
and
mov
test
mov
xor
mov
pushf
mov
lret
xchg
fwait
lcall
xchg
inc
lret
mull
popa
sub
xor
loop
add
mov
ja
pop
or
sbb
mov
mov
mov
and
daa
or
and
out
sarb
sub
movsl
insb
push
adcl
es
pop
rcrl
mov
cmp
mov
pop
pop
dec
dec
idiv
ret
sub
outsl
movl
pop
add
push
stc
cmpsb
push
aas
int
imul
xchg
adc
das
fcomi
jo
push
fwait
xchg
push
sbb
xchg
addb
sbb
inc
fcmovnu
imul
jle
sahf
clc
jbe
test
pusha
or
std
cmp
mov
jl
xchg
inc
push
push
rcrl
push
rcrb
sbb
fnstenv
dec
ljmp
popf
adc
adc
push
push
ret
stos
inc
xchg
bound
movsb
jo
aas
shlb
ret
loopne
cwtl
push
sbb
into
add
test
lea
call
clc
cmp
pusha
call
pushf
mov
lea
pusha
lea
call
jmp
lea
jne
pusha
call
dec
or
push
push
and
xor
mov
pop
inc
fnstsw
imul
jmp
mov
pop
adc
mov
sbb
fwait
aaa
add
iret
mov
sti
adc
movsl
test
pop
add
aas
call
sub
and
int
in
sbb
mov
ret
decb
sbb
rcr
push
cmp
xchg
insb
mov
lods
shll
jp
and
xchg
pop
mov
pop
add
xchg
into
add
movsl
cs
push
push
sub
mov
cmp
push
call
movl
push
call
mov
bswap
call
lea
ja
pusha
jmp
lahf
pop
inc
adc
es
mov
cmpsb
jnp
lods
pop
out
inc
repz
out
sarl
fs
fiadds
in
mov
repnz
ret
mov
fadd
mov
inc
dec
es
lds
fnsave
push
mov
xor
jp
and
orl
popf
dec
cmpsb
push
ret
aaa
sub
sbb
fld
sub
jp
daa
rol
ja
loope
sub
insl
icebp
movsl
imul
movsl
mov
xlat
add
add
mov
xor
add
pop
into
add
add
lcall
xor
jmp
pop
ret
call
push
imul
push
and
jnp
sbb
outsb
outsl
repz
dec
dec
push
sbb
sub
aam
sub
dec
mov
pop
xor
stos
jg
xlat
mov
flds
cmp
cwtl
add
ljmp
mov
adc
test
mov
mov
cmp
cmp
xor
outsb
movsb
sub
add
jp
loop
enter
sub
mov
into
add
fidivs
pushf
lea
ja
push
imul
jmp
popa
cmp
lea
and
lret
jo
dec
test
and
incb
inc
addb
cs
out
jno
or
xchg
data16
xor
pop
sub
outsb
jo
sbb
mov
jmp
jle
adc
lcall
dec
sbb
adcb
push
inc
push
idivl
jb
add
pop
and
aad
lret
int3
xchg
pop
cmp
insl
pop
loop
sub
inc
movsb
ret
push
and
pop
pop
std
cmp
mov
mov
shlb
clc
in
pop
sub
mov
movsb
pop
movsl
push
mov
sbb
sbb
xchg
push
in
cmp
add
popa
repnz
cmp
mov
adc
jle
push
cvtps2pi
movsl
cli
mov
stc
pop
or
and
lock
jns
jp
les
outsl
scas
int3
sbb
jecxz,pn
xchg
xchg
xchg
add
nop
jmp
lret
push
jno
mov
mov
push
add
movsb
mov
inc
sub
mov
or
call
into
or
mov
push
jecxz
and
inc
sub
mov
push
mov
movaps
iret
sahf
sub
ret
dec
lock
add
sbb
xchg
jne
jl
xor
test
mov
inc
test
push
rcll
orb
mov
and
std
lret
jp
pop
pop
and
mov
jp
xchg
enter
orl
pushl
popl
movb
movw
pushl
ret
pusha
and
call
push
cmp
pushl
lea
ja
sbb
add
sub
lea
test
sub
shl
add
inc
xor
mov
cmc
neg
shl
and
mov
stc
bt
bt
repnz
call
pusha
lea
jne
das
shld
xor
movsbw
daa
jmp
lea
jne
jmp
push
pushf
call
bswap
mov
bswap
not
xchg
pop
bswap
pop
pusha
mov
jmp
push
adcl
add
mov
xchg
and
test
loope
jnp
icebp
aas
dec
xchg
fcoml
push
nop
or
cltd
inc
fiaddl
jg
fcmovnbe
fdivrs
xchg
cmc
mov
sbb
stos
lret
test
xchg
xchg
pop
inc
lds
sub
inc
icebp
in
insb
push
mov
es
lret
jns
mov
test
inc
cmp
jo
jbe
xor
das
imul
push
fwait
mov
ljmp
aad
and
dec
fdivs
int
inc
mov
dec
cmp
rorb
out
sbb
add
test
mov
add
aad
mov
xor
cmp
imul
add
mov
fdivl
jecxz
test
aad
or
movl
push
fstpl
mov
jl
mov
mov
inc
leave
xor
xor
and
xor
enter
das
and
inc
rcl
dec
mov
les
mov
movsl
cltd
jmp
ret
cmp
ror
mov
cmpl
cmp
cmp
pusha
push
dec
mov
orb
movups
push
lahf
xlat
shrl
mov
imul
mov
and
into
add
insb
in
pop
sbb
add
jge
sub
mov
mov
fnstcw
xchg
imul
xor
bound
xor
inc
or
and
xor
jae
add
dec
push
roll
jge
xlat
fwait
pop
pop
jmp
addr16
fistl
add
dec
or
jns
pushf
cltd
dec
pop
fldcw
mov
inc
xor
xchg
push
adc
mov
push
dec
int
je
jle
add
and
fsubrl
jmp
in
incl
loopne
push
fs
inc
cmp
xchg
push
pop
popa
and
mov
push
aad
pop
pushf
ret
and
fistps
lcall
push
cmp
scas
push
sbb
jmp
imul
fildll
jne
adc
dec
cld
call
xchg
js
lock
into
add
cmp
cmp
xchg
aaa
mov
mov
stc
mov
push
sbb
and
push
add
dec
mov
dec
mov
or
sub
test
mov
ret
cmp
shll
es
nop
xor
push
jecxz
pop
loop
xrelease
xchg
jp
call
cmpsl
jecxz
push
sbb
sbb
ss
nop
mov
lock
in
mov
movsl
test
and
pop
pusha
inc
inc
and
stos
insb
lock
out
jmp
test
push
push
in
mov
jle
movsl
mov
jecxz
jbe
jbe
sbb
adc
cwtl
add
fwait
pushf
inc
orb
aaa
push
xor
xlat
add
mov
testl
loop,pn
inc
dec
add
mov
add
inc
and
mov
ret
les
inc
and
jmp
adc
jmp
xchg
ror
es
not
pop
cmc
jp
add
pop
adc
and
mov
test
sti
mov
pop
xor
pop
mov
adc
jnp
jmp
dec
or
scas
cmp
imul
push
dec
cmp
jnp
and
lret
enter
xchg
mov
xchg
popa
mov
mov
rcll
jecxz
or
sbbb
repz
cmc
data16
cwtl
test
fwait
lods
xchg
cmp
subw
xor
frstor
sub
loop
and
add
and
sbb
shlb
mov
test
arpl
fdivs
fcomp
cmpsb
cmpsl
dec
icebp
jge
and
mov
sub
xor
fsubrl
cmp
lea
stos
ret
repz
out
loopne
mov
mov
or
insb
cmp
shlb
or
mov
mov
and
inc
mov
jp
data16
jae
cmp
add
pusha
icebp
mov
fsts
pop
out
pushf
nop
xchg
dec
jno
sbb
lcall
ret
add
lea
sti
cwtl
dec
xor
push
bound
fsts
xchg
ljmp
push
inc
pusha
or
pushf
cmp
mov
xchg
ffreep
add
inc
or
xchg
movsb
ret
cli
jne
mov
adc
jmp
xchg
dec
into
add
mov
jecxz
lcall
jno
ljmp
test
dec
pop
or
push
ret
push
add
outsl
sbb
or
xchg
push
aad
sub
mov
sub
mov
xchg
sub
pop
ds
mov
inc
scas
adc
iret
stos
pop
push
aas
shrl
hlt
mov
bound
inc
inc
out
dec
test
dec
xchg
mov
sbb
hlt
into
ja
pop
out
subl
sub
jae
or
mov
pop
into
add
dec
add
cmpsl
xchg
es
push
fildl
inc
out
fldt
rolb
xchg
imul
jp
out
add
and
inc
pop
lcall
mov
mov
icebp
int
dec
lahf
jns
sti
ficomps
push
test
add
icebp
xor
aas
jnp
sbb
add
insl
cli
aad
adc
jp
mov
mov
sbb
stos
es
cli
shrb
mov
lds
cld
push
xchg
mov
testl
push
lret
sub
arpl
and
pushf
pop
jecxz
jmp
adc
and
in
adc
in
fistps
mov
pop
dec
aaa
loopne
push
mov
ljmp
jg
insb
out
mov
mov
scas
pop
mov
inc
inc
or
outsl
cmp
out
ds
xor
cmp
mov
rorl
sub
movsl
popa
vpsubw
mov
jecxz
or
in
jl
out
mov
movsl
mov
jg
pop
repz
sbb
or
in
cltd
xor
stc
repz
fistpl
xchg
in
mov
imul
jle
lahf
lea
je
or
call
mov
movl
pusha
movl
mov
lea
jmp
popf
lret
pop
in
mov
mov
mov
lock
ja
xchg
dec
mov
ja
and
mov
sub
mov
mov
xor
and
shll
cmp
or
mov
and
scas
jp
aas
sbb
mov
sbb
js
pop
scas
push
or
mov
lods
adc
jecxz
inc
leave
xor
movsl
lock
mov
sub
aaa
lds
arpl
jg
clc
imul
mov
add
pushf
pushf
cs
jb
and
data16
std
cmp
add
xchg
or
fdivs
popa
mov
mov
frndint
cwtl
or
jne
fsubrl
sub
orl
lds
lret
cli
sub
icebp
or
out
push
repz
out
stos
lods
or
test
xlat
add
mov
scas
cmp
ss
ret
push
add
add
pop
mov
incl
rcr
mov
push
push
sub
jo
and
jmp
push
test
add
mov
lea
jmp
pushl
popl
pusha
movb
pushl
ret
iret
mov
mov
cmp
inc
xor
mov
in
inc
test
or
mov
fnstsw
push
out
mov
pop
es
pushf
js
fsubs
aaa
jecxz
jnp
pop
dec
lret
ds
sbb
jnp
inc
aas
cltd
inc
dec
adc
repnz
lcall
lock
or
mov
xor
cltd
jp
out
les
mov
test
inc
xor
shrl
inc
and
into
add
xchg
cmp
sbb
xor
std
push
cmc
cmp
pusha
call
sub
test
cmp
pushl
lea
ja
push
imul
stc
add
pusha
push
push
lea
jmp
mov
xchg
call
jmp
pushf
lea
jne
cmc
and
pusha
mov
stc
test
not
inc
sub
pop
xor
or
lea
pusha
stc
bt
push
sub
movl
mov
pushl
popl
jmp
call
sar
fwait
pusha
adc
lds
loopne
stos
sbb
cmpsb
dec
loopne
adc
mov
mov
mov
inc
xchg
sbb
rcrb
mov
jle
xchg
je
mov
enter
push
sub
into
add
cltd
cmp
pop
adc
cld
shrb
push
fcmovnu
int
cmpsl
cmp
lods
mov
add
push
sub
outsl
dec
mov
push
xchg
outsb
subb
sbb
mov
jmp
cmp
insl
cmp
lcall
xor
jle
mov
jo
and
adc
test
aad
scas
xorb
lcall
and
adc
pop
jbe
mov
out
je
push
xor
lods
push
xchg
xchg
mov
not
mov
mov
add
lret
sbb
dec
cwtl
scas
sbb
pop
cmc
pop
xchg
jl
dec
hlt
pop
pop
loop
and
int3
inc
cld
and
insl
mov
shrl
and
and
sub
pop
pop
lcall
pushf
and
nop
fcomip
push
outsl
and
lea
in
jmp
aad
inc
adc
ret
fs
jae
call
xchg
ret
enter
and
call
shrl
lret
lahf
mov
adc
mov
fldenv
mov
imulb
cmpsb
sub
iret
mov
lret
cmpsb
push
xlat
push
jge
inc
add
scas
rcr
xchg
mov
mov
mov
add
jg
loopne
or
cmpsb
cmpsl
pushf
nop
or
or
pop
into
add
push
movl
dec
cmpsl
es
mov
and
xchg
xor
xchg
xchg
jg
aas
inc
add
push
std
addr16
test
push
and
rolb
mov
pop
mov
cwtl
mov
into
cmp
push
cmpsb
xor
xchg
push
dec
and
arpl
xchg
aaa
pop
jnp
sub
cmp
mov
fs
push
popa
in
add
sbb
jns
jns
fbld
add
mov
mov
xchg
push
cs
movsb
jo
and
xor
and
xchg
xchg
jno
push
in
mov
xchg
push
sbb
test
into
add
jge
adc
repz
fsts
mov
sub
je
jno
push
cmp
es
in
dec
and
lods
xor
mov
cltd
jge
jge
popa
idivb
sub
pop
push
sub
fs
xor
fsubs
xchg
rorb
mov
jnp
jnp
and
push
sarb
push
into
add
pop
rcrb
or
imul
pop
in
mov
and
aas
cmp
xchg
push
nop
insl
dec
or
test
fs
sbb
push
call
in
or
lret
cmpsl
jecxz
inc
cmpsl
xor
in
cli
cmp
sub
lods
into
add
icebp
bound
xchg
dec
sub
mov
xchg
dec
mov
inc
out
popf
and
repnz
xlat
int3
shll
lods
cwtl
cltd
es
pop
pop
es
mov
jge
popf
leave
inc
cmpsb
xor
ljmp
push
jg
push
and
jmp
pop
es
push
dec
out
into
add
fs
sub
push
cmp
pop
sub
jbe
clc
movsl
cmpb
aaa
ja
fcompl
fiadds
fldt
inc
mov
test
fwait
cmc
xchg
fwait
aaa
movsb
mov
inc
leave
cwtl
cmp
jp
pop
out
push
mov
outsl
xchg
cmp
pusha
push
pop
fcmovu
add
mov
das
jecxz
lds
data16
sbb
lods
js
pusha
popa
adc
addr16
adc
xlat
add
test
ljmp
pop
sbb
pop
cmp
add
add
lods
adc
add
jge
es
adc
sub
rcl
gs
daa
in
ror
pop
pop
jecxz
mov
xor
cmp
movl
jbe
out
lods
daa
jge
lods
lea
into
jp
addl
data16
jne
pop
xchg
and
aas
push
cmc
push
pop
or
push
push
sbb
rorb
ds
ret
jae
cmc
mov
sub
in
xor
add
mov
adc
mov
lcall
ffreep
cmp
xchg
out
pop
pop
cmp
inc
repnz
push
fwait
push
and
jmp
jo
adc
adc
iret
rcrb
negb
fucom
sub
push
fbld
push
jne
push
xor
adc
xor
mov
xor
and
arpl
lret
xchg
push
aas
sbb
mov
dec
incl
dec
test
and
cmc
add
lds
dec
call
add
sub
sbbb
pop
fsts
jno
ljmp
aas
cmc
mov
fs
lret
nop
adc
gs
aaa
add
fldenv
int3
mov
jns
add
mov
fidivrs
mov
mov
mov
pop
xor
into
out
push
cli
into
add
addr16
sub
dec
cmp
xchg
bound
sbb
fcmovne
adc
enter
popa
pop
jmp
adc
cmp
mov
xchg
pop
jbe
inc
orl
ret
push
ljmp
inc
outsl
or
gs
es
adc
lahf
push
and
shll
mov
xor
xor
and
jb
shrb
leave
push
loop
addl
push
arpl
or
xor
movsb
in
cli
xchg
or
lock
adc
call
movsb
nop
rclb
mov
add
daa
stos
jmp
or
sahf
xchg
inc
fsubl
clc
lods
cwtl
dec
dec
sub
mov
movsb
stos
in
sub
outsb
adc
xchg
pusha
inc
sbb
add
dec
push
inc
stos
xchg
xchg
or
lods
jmp
add
mov
or
lahf
dec
mov
test
int3
bound
mov
push
sbb
bnd
push
ret
push
popa
sub
cmpl
cmp
popa
sub
jbe
cmpsl
fstpl
push
stos
adc
dec
sub
or
push
lret
push
xchg
ja
lock
dec
out
mov
enter
iret
or
pop
int3
jns
jle
push
xchg
pop
mov
jl
aam
sub
insb
or
fwait
ficoml
shlb
jge
or
jle
push
sub
stc
aad
xor
jmp
pushw
popfw
jmp
push
pushf
movb
movl
mov
push
pushl
call
jmp
jge
push
lea
je
pushf
cmc
cmp
push
movb
call
cmp
cmp
lea
jl
pusha
movb
lea
ja
pushf
inc
inc
lea
setp
setno
inc
stc
sete
shr
add
xchg
neg
mov
inc
mov
test
push
ror
xor
shr
mov
cmp
jmp
jge
cwtl
or
imul
mov
stos
mov
outsb
pop
inc
xchg
repz
jns
data16
dec
fcompl
adc
cli
ffreep
pusha
pop
dec
in
push
inc
xor
lock
mov
bound
sub
push
rcrl
add
xchg
dec
fdivl
test
jo
and
ror
mov
and
mov
in
adc
push
in
xchg
jmp
into
add
outsb
out
call
imul
addb
add
aaa
xor
add
add
add
lret
adc
push
add
adc
and
adc
or
add
add
add
ret
shrl
mov
xor
out
sbb
or
push
ss
ljmpw
push
sbb
xor
sbb
test
negl
nop
imul
stos
rcrl
aam
clc
mov
lcall
add
xor
inc
xchg
push
icebp
movb
lea
je
pushf
cmp
pusha
movw
push
jmp
movb
pusha
or
pushf
jmp
popf
pop
in
mov
add
mov
xchg
cmp
sbb
sahf
sub
nop
cmp
push
shll
or
xor
insb
bound
push
and
add
and
fisubs
test
xchg
lret
sbb
ja
pop
sti
xchg
xor
stos
das
jmp
mov
add
inc
adc
ljmp
xchg
imul
ds
test
fimull
dec
sub
xchg
je
lods
xchg
xor
adc
inc
ss
clc
sbb
inc
jle
push
sub
mov
pop
xchg
mov
cmpsb
out
lret
iret
hlt
add
pop
lcall
enter
gs
push
loop
and
xor
add
ja
test
sbb
lcall
je
es
lea
mov
push
mov
cmc
xor
add
push
and
mov
mov
imul
fisubl
insb
insb
inc
inc
daa
clc
adc
cld
test
xchg
out
adc
sbb
sub
and
mov
movsl
pop
cltd
arpl
and
or
repnz
out
push
lret
push
dec
lds
push
cli
cmpsb
jp
adc
stos
pop
cmp
sti
push
mov
movsl
mov
cmp
add
dec
pop
inc
dec
or
stos
push
mov
pop
call
or
dec
jecxz
dec
dec
xor
push
ror
gs
add
std
in
mov
push
cli
insl
mov
dec
int3
sahf
inc
add
call
imul
mov
inc
mov
push
inc
sub
les
dec
je
movsl
xor
cmp
out
or
push
sbb
mov
addr16
cmp
leave
lds
add
addl
jmp
inc
jne
mov
mov
push
or
repz
hlt
icebp
out
orl
popa
or
or
and
dec
and
sbb
dec
adc
iret
dec
sub
xchg
jb
sbb
ret
sbb
repnz
test
jno
int
xchg
or
add
mov
stos
jbe
shrl
nop
or
xchg
dec
fwait
push
ja
add
sub
sub
dec
cmp
rcl
repnz
ret
addr16
rcr
sar
and
sub
test
sub
pop
movsb
xor
and
jp
mov
lock
shlb
lock
out
cmpsb
xchg
fsts
xchg
mov
std
lret
test
test
das
lret
mov
test
rcl
jbe
in
pop
aam
bound
pop
in
mov
add
mov
test
ret
lret
leave
mov
into
push
fcomps
mov
into
add
mov
pop
setl
mov
push
pusha
bswap
lea
pushl
xchg
setp
pushf
movl
push
lea
pushl
pushf
jmp
adc
xchg
pop
in
mov
xor
mov
nop
cmc
dec
sub
hlt
adc
adcb
xchg
adc
push
and
add
jb
loop
into
add
dec
or
add
pusha
pushf
lea
jmp
clc
mov
jmp
mov
movl
pushf
mov
lea
jmp
lea
jne
ror
pusha
pushf
mov
ror
or
movw
adc
sub
xor
lea
test
bt
cmc
sub
cmp
bt
cmp
clc
pushl
popl
pusha
call
call
mov
pushf
jmp
dec
jp
cld
ror
mov
cs
mov
dec
xlat
lods
pop
ss
popf
lcall
mov
hlt
cmp
js
or
xchg
je
jo
lds
dec
clc
mov
loop
dec
push
jb
ljmp
outsb
push
into
add
arpl
xor
add
sub
call
lcall
fisubrl
clc
es
push
dec
adc
shrl
iret
mov
xlat
jb
inc
out
xorl
or
icebp
mov
inc
or
lret
dec
idivl
imul
mov
es
sbb
inc
stos
aad
pop
mov
push
or
loope
add
cs
sub
es
jecxz
jbe
dec
cmc
lret
mov
loope
je
sbb
mov
lods
mov
cwtl
cltd
sbb
mov
adc
cmpxchg
sti
mov
stc
test
int
add
xchg
inc
jg
add
sbb
push
add
sbb
push
and
bt
jmp
and
xorl
test
add
popa
push
mov
cwtl
stos
and
aad
mov
cmp
or
jbe
sbb
pop
cwtl
xlat
stos
repz
and
add
outsl
fdivs
addr16
cmpsb
cmp
sbb
push
stc
adc
adc
daa
stc
aaa
push
lret
nop
xchg
ja
and
dec
in
or
xchg
addr16
cmpsl
addl
mov
daa
mov
into
add
lods
and
mov
call
add
xchg
push
dec
stc
pushl
clc
clc
shl
jmp
test
cmp
mov
pusha
call
lods
and
inc
adc
sar
not
and
shl
call
ss
es
sub
repnz
adc
iret
xchg
push
addr16
xchg
test
mov
cs
outsl
inc
xlat
push
push
pusha
dec
or
mov
jbe
bound
inc
sbb
and
dec
int
jbe
in
fstps
movsb
push
sbb
xchg
pop
inc
loopne
xchg
mov
dec
or
fidivrl
push
and
pop
cwtl
inc
mov
cmpb
mov
inc
cmc
test
hlt
add
adc
scas
mov
or
stos
out
loopne
cmp
lods
jns
sti
mov
push
inc
addr16
pop
mov
mov
data16
arpl
lcall
divb
mov
mov
adcl
fcomp
cmp
or
inc
mov
push
mov
out
ret
sahf
fisubs
inc
mov
add
outsl
rep
mov
push
push
cld
mov
add
lcall
fsts
ret
add
loopne
inc
mov
sub
mov
negl
outsb
dec
inc
sbb
cmpsl
insb
push
jge
aad
je
notb
xchg
push
ficomps
dec
inc
es
sti
cmp
xor
stos
outsb
dec
cmc
mov
addb
cmpb
xchg
and
add
push
add
movl
pusha
movl
call
add
dec
gs
popa
addr16
outsl
js
add
inc
and
sbb
push
add
inc
and
loope
xor
fs
mov
pusha
pushl
ret
std
mov
imul
ficompl
sub
aam
rclb
repz
pusha
lahf
inc
arpl
sti
stc
sub
pop
pop
push
adc
mov
mov
into
push
push
fdivs
xor
ss
mov
cmpsb
stos
mov
jge
andb
or
test
fstpt
fdivrs
sbb
inc
loope
outsb
xchg
outsl
dec
clc
xlat
add
sbbl
dec
es
pop
out
ficompl
add
mov
pop
movb
rep
call
movl
movb
pushf
mov
lea
jmp
bswap
lea
bswap
mov
call
pushl
popl
push
push
pushl
ret
aad
and
xlat
ss
insl
or
fsubl
or
insl
and
movsb
cmp
xor
or
movsl
adc
stos
xchg
pushl
sub
jg
out
cs
mov
dec
loopne
pop
fdivr
imul
leave
out
mov
and
insb
sub
aam
add
lods
pusha
sub
je
add
sub
or
test
not
pop
movsbw
movb
call
jmp
pushf
pushf
pushl
mov
jmp
mov
pushf
lea
call
push
call
dec
or
push
mov
push
idivb
cmp
pop
or
div
nop
adc
cmc
mov
push
pop
push
inc
adc
lcall
pop
ja
loope
sub
std
in
sarb
xor
adc
inc
icebp
xor
xchg
repz
mov
sbb
xchg
jne
cmp
loope
in
push
pop
mov
out
repz
fisubl
in
test
lea
into
add
or
pop
test
test
jmp
cli
sub
frstor
jl
push
fnstcw
xchg
inc
jmp
or
cmp
out
int3
mov
leave
add
outsl
add
int
outsb
xor
mov
xlat
jae
jbe
movsb
add
scas
and
sub
in
idiv
mov
xchg
faddl
les
ficompl
in
mov
inc
int
es
dec
movsl
lret
cmp
ficompl
and
sbb
sub
or
test
inc
enter
arpl
cmp
cmp
repz
fwait
icebp
pop
lods
mov
sub
shrl
sub
cmp
pop
lahf
jecxz
daa
add
adc
movsl
cmp
dec
push
sbb
notb
sbb
int
ds
xchg
in
bound
aam
call
stc
and
adc
inc
ss
dec
push
sbb
mov
mov
std
out
xor
shrb
int
pop
ss
into
mov
mov
call
xor
pop
xchg
xor
dec
cmp
xchg
push
and
push
push
hlt
into
add
test
scas
mov
es
add
xchg
movsl
inc
iret
mov
jge
xchg
test
mov
xlat
jbe
jmp
loopne
add
mov
mov
cmp
clc
pop
mov
mov
push
jnp
rcrl
inc
daa
sub
rol
test
jns
push
xchg
cmp
dec
push
or
dec
ss
dec
cld
stc
adc
cmp
or
xchg
sub
inc
xchg
iret
jnp
mov
cltd
sub
add
add
cmpsb
das
not
enter
xchg
sbb
pop
cmp
jl
xchg
bound
push
cld
stc
adc
shrb
xor
out
ret
jo
leave
mov
jo
sbb
bound
lahf
jnp
mov
repnz
lcall
data16
stc
adc
imul
lret
cmp
or
int3
into
add
xchg
inc
jle
popf
jne
push
pushf
pushl
pushf
call
push
call
push
pushl
popl
pusha
pushl
ret
pushf
movb
movl
pushf
movw
movl
push
pusha
pushf
movb
lea
jmp
sub
mov
dec
mov
cmpsl
je
imul
xchg
jl
push
sti
iret
mov
mov
pushl
mov
mov
pop
pusha
sub
pushf
xor
movsl
scas
sbb
xchg
gs
repz
add
jp
shlb
xchg
pop
ljmp
in
cmpsl
push
fxch
filds
aam
cs
gs
aas
hlt
jns
jae
adc
dec
push
and
shlb
movsl
and
stc
sahf
inc
mov
movsl
outsl
arpl
sbb
int3
nop
scas
mov
aaa
cmp
adc
push
xchg
inc
sbb
movb
bound
out
arpl
push
pop
lcall
imul
je
mov
cld
mov
in
jmp
outsb
sub
mov
add
out
dec
aas
inc
or
xchg
xchg
push
jmp
push
into
add
or
xchg
inc
and
xchg
pusha
movsbw
xchg
stc
mov
rcr
shr
shl
pop
mov
or
shr
or
mov
call
mov
lea
jae
call
pushf
pusha
lea
ja
cmc
xor
add
push
neg
pushf
call
jmp
repnz
pusha
pushf
call
cmp
pushf
pusha
lea
je
cmp
cmp
push
pushl
movb
lea
je
pushf
lea
jmp
xchg
push
push
pushf
movl
pusha
mov
jmp
pushf
movw
call
lods
ficompl
filds
pusha
sub
mov
xchg
xchg
aas
jg
shl
es
mov
mov
fcmovne
mov
insb
pop
xchg
pusha
adc
add
outsb
stos
jmp
push
repnz
fcomip
aaa
ret
bnd
push
inc
lock
pop
mov
mov
movsb
cmp
jae
xlat
adc
cltd
insb
addr16
and
movsl
in
mov
ret
xor
mov
aam
cmp
mov
sti
out
cmp
ret
dec
fsubrl
add
je
into
add
cmp
stos
decl
sbbl
shlb
and
call
pusha
lea
jae
pushf
inc
xchg
mov
mov
call
sub
dec
cmp
addr16
hlt
mov
jp
or
scas
mov
push
pop
push
sbb
repnz
fwait
push
mov
mov
inc
and
jge
add
jnp
mov
stos
push
xchg
sbb
pop
leave
out
xchg
sti
fs
push
add
push
sbb
pop
fidivl
lcall
sub
pushf
aam
push
sahf
mov
insl
and
or
add
cmp
add
out
rol
imul
jecxz
adc
pusha
movl
movb
mov
pushf
lea
jmp
lcall
imul
es
mov
cmp
dec
sbb
lds
jne
push
and
fcomps
sti
xor
lret
addr16
adc
loope
testl
outsb
fwait
push
imul
outsb
adc
lret
sbb
out
mov
ds
cwtl
andnps
xchg
dec
mov
cli
mov
push
xor
xchg
pop
sub
cs
mov
stos
fwait
arpl
fstpl
or
push
int
xchg
inc
lret
jecxz
cmp
mov
xchg
pop
scas
add
or
cli
pop
mov
mov
sahf
push
gs
xchg
adc
xchg
dec
jmp
lods
mov
jno
cmpb
jne
xchg
add
cli
mov
jbe
adc
mov
imul
mov
fstpl
and
addl
into
add
push
add
mov
call
daa
loop
test
xor
movb
push
xor
lret
mov
out
je
loop,pn
xchg
cmp
lret
and
xchg
sub
in
mov
pop
or
fcoms
ss
stc
fs
lahf
pop
jg
cltd
sarb
pushf
pusha
xor
out
shlb
shll
xlat
xchg
jno
mov
add
inc
pop
daa
data16
cmp
stc
roll
hlt
or
cwtl
je
xchg
xchg
in
shll
push
or
mov
test
jne
xlat
add
sbb
sub
mov
popf
jno
stc
into
add
out
sub
sub
je
add
movl
jmp
jmp
pushf
call
cmp
cmpb
jmp
mov
jmp
xor
lock
add
lds
icebp
jbe
cwtl
dec
and
clc
cmp
movsb
out
xchg
sub
xor
sahf
clc
sarl
les
rorl
xor
test
sub
xor
mov
aad
test
and
dec
into
add
jmp
test
or
pop
fldt
pop
dec
fldt
fwait
lret
lret
lcall
and
flds
ret
test
ror
movl
bt
clc
stc
mov
call
call
mov
bswap
pushf
lea
push
pushl
movl
movb
mov
call
xchg
aam
jp
mov
mov
in
jp
mov
les
jbe
shl
inc
es
xchg
test
xchg
mov
stos
pop
pusha
lea
jne
and
mov
push
jmp
pusha
cmp
mov
lea
jae
push
bt
jmp
xor
test
cmp
cmp
repnz
call
sar
mov
inc
cmc
add
test
push
sti
shlb
cmp
lea
mov
ja
movsb
int
leave
add
hlt
push
cmpb
add
sub
mov
xchg
xchg
sahf
inc
in
adc
out
fwait
xchg
xor
sti
xchg
out
jae
repz
xchg
add
fdivl
cmp
cmp
pusha
bt
repnz
call
call
call
mov
mov
pusha
pushf
pushl
ret
sub
jmp
cs
add
pop
loop
mov
inc
sti
lock
mov
jmp
push
rorb
cli
cmp
incl
andb
or
xchg
in
pop
pusha
jge
pop
xchg
das
ret
outsl
repz
jnp
sti
mov
into
add
rclb
jg
sub
push
movb
movl
pushf
movl
pusha
mov
pushf
push
lea
jmp
outsl
popf
cmp
mov
adc
push
adc
test
in
outsb
add
in
movsb
cmc
add
int3
outsl
daa
arpl
outsl
xor
add
nop
and
lock
mov
icebp
push
and
mov
in
nop
mov
rolb
jl
or
add
mov
pop
ss
out
jg
add
cltd
in
enter
int3
jns
xor
push
and
mov
shll
ret
pushl
and
fldenv
les
insb
push
push
push
mov
ljmp
or
out
stos
ja
out
pop
lret
mov
inc
sbb
or
add
or
add
sub
xchg
adc
sub
sbb
mov
loopne
adc
movsb
imul
mov
push
or
mov
add
mov
push
adc
push
xacquire
add
mov
jns
add
es
inc
rclb
daa
hlt
loope
jnp
lods
jp
repnz
out
repz
pop
or
test
push
cmpsl
mov
fadd
cmp
sahf
cmp
and
pop
stc
adc
sbb
mov
rolb
outsl
imul
push
scas
mov
or
sbb
test
jns
xor
popf
sbb
lods
pusha
jno
sbbb
and
pushf
inc
sub
mov
cmp
js
pop
push
jmp
fwait
hlt
subb
xlat
imul
rcrb
in
icebp
sub
mov
mov
adc
mov
rol
movzbw
sub
add
sub
neg
shr
dec
mov
bt
cmc
shr
bt
jbe
test
clc
cmp
jmp
jmp
push
lock
std
std
lea
ffreep
xchg
loopne
dec
mov
into
dec
std
and
pushf
mov
pop
mov
aaa
shlb
je
in
sub
popf
and
aam
push
lret
out
shrl
xchg
xchg
fidivrs
nop
mov
inc
data16
in
xchg
push
mov
lret
leave
clc
dec
jb
mov
jmp
pop
rolb
jp
ljmp
xchg
into
ljmp
leave
pushf
jmp
call
or
mov
mov
lods
inc
out
jns
fistl
std
or
data16
mov
ja
ja
lods
mov
out
lock
loopne
pop
adc
xchg
inc
adc
mov
aam
add
out
sub
in
push
shrb
xchg
dec
xchg
in
dec
das
cld
test
and
adc
jno
inc
out
sub
fsub
jnp
mov
mov
mov
jg
xchg
lret
sbb
addr16
sub
cmpsb
sbb
or
add
cli
mov
jecxz
clc
int
int
pop
xor
lods
stc
and
lock
lds
sbbb
or
lahf
arpl
jl
jp
cltd
test
sbb
cmp
sbb
add
mov
jno
inc
fisubrs
push
xor
or
inc
add
push
pop
jbe
cmp
icebp
sbb
js
add
jmp
jmp
push
std
xchg
jge
cmc
shll
jno
aas
mov
jnp
push
jg
xchg
cwtl
push
adc
xor
imul
sbb
xchg
outsl
inc
sbb
mov
fdivs
aam
call
movsb
jecxz
push
sub
pusha
cmc
mov
or
mov
sar
fldl
xor
sub
cmpsl
push
into
ja
inc
inc
cmp
movsl
mov
sub
mov
add
or
cwtl
fwait
int3
dec
mov
es
fistl
fwait
mov
and
ja
rcl
rcl
rcl
sub
dec
add
shl
or
mov
pushf
shl
cmp
mov
test
cmc
repnz
call
lods
pushl
not
cmc
test
movb
cmp
neg
push
stc
call
call
push
mov
inc
pushf
pushf
pushf
pushf
lea
jmp
rcl
mov
shl
ror
sub
lea
call
xchg
movsbw
jmp
bt
clc
mov
dec
mov
movb
repnz
pushf
pushf
jmp
str
jmp
mov
clc
add
mov
stc
test
jmp
pusha
pusha
call
mov
mov
lea
not
mov
bswap
mov
pushf
seta
lea
mov
movb
mov
pushf
mov
pushl
pushl
ret
pushf
lea
je
cmc
push
test
sub
clc
clc
mov
test
cmp
jmp
push
movl
call
call
bt
add
push
pusha
movb
pushf
lea
jmp
movl
pushf
pushf
pusha
lea
jmp
js
dec
sub
jge
mov
mov
enter
test
jns
push
mov
sub
in
sub
or
and
std
cmp
push
cmpsl
fwait
gs
sahf
xor
insl
add
xlat
popa
test
adc
outsb
add
jecxz
les
push
sub
test
pop
in
push
jb
icebp
dec
jecxz
pop
mov
mov
sub
icebp
fucomp
xchg
idivb
mov
push
cmp
inc
daa
or
dec
xor
sbb
sti
cmp
or
test
xor
mov
jnp
pop
push
and
pusha
or
pop
sbb
push
into
add
ret
adc
push
lea
jmp
fmull
call
js
fisubrl
jle
push
jmp
pop
inc
fistps
push
adc
mov
xor
push
push
pop
and
jo
or
xchg
shlb
stc
or
incb
mov
inc
faddl
lods
into
add
fld
mov
xchg
in
push
jmp
std
xchg
das
in
ss
xor
xor
sub
test
loopne,pt
rorl
add
pusha
xor
add
xchg
xor
cmp
and
add
or
sbb
sbb
jno
inc
ss
or
push
mov
mov
push
incl
sbb
notb
mov
mov
jb
mov
aas
sub
or
hlt
sub
incl
pop
xchg
js
jge
push
mov
div
sahf
into
add
sbb
aam
imul
sub
mov
lret
ret
hlt
arpl
mov
mov
xchg
dec
adc
inc
out
jl
mov
cmp
inc
gs
int
mov
scas
or
dec
and
fs
xor
addl
jmp
andb
hlt
shll
adc
and
das
rolb
push
inc
dec
adc
les
and
or
mov
lds
xor
mov
adc
or
rcrb
lea
ret
pusha
movl
pushf
pushl
call
sub
movl
cmp
mov
jmp
stc
add
pushf
movb
lea
jne
pushf
pushl
pusha
pushfw
popw
movb
shl
mov
stc
not
pusha
neg
clc
push
pushl
bt
sub
call
cmp
add
ficompl
xchg
push
sub
in
lret
add
mov
cmpsb
fwait
push
pushl
mov
lods
sub
add
sti
call
divl
movsb
imul
mov
insl
inc
out
jnp
repz
push
sub
mov
mov
into
add
or
push
mov
cmc
pushf
jmp
mov
jmp
stos
pop
jl
pop
pop
cmp
out
bound
lock
add
arpl
mov
jmp
ja
pop
insl
push
fnstenv
dec
in
lods
dec
or
push
push
std
sub
pusha
insl
aaa
sbb
mov
sbb
ja
fwait
sbb
out
jbe
xchg
xchg
push
pop
pop
pop
pop
mov
call
pop
stc
or
pop
call
sub
fwait
out
addb
xchg
out
adc
dec
clc
xchg
inc
sbb
out
out
sbb
jmp
idiv
stc
cmpsl
push
push
push
sbb
lcall
or
loop
dec
out
pop
dec
notl
sti
mov
mov
and
fnstenv
or
fnstsw
pop
cmpsb
shll
out
xchg
pavgw
pop
and
mov
enter
mov
dec
inc
stos
or
sti
mov
sbb
aam
pop
aas
adc
jbe
push
ljmp
cmc
nop
jge
std
inc
pop
enter
xchg
xor
or
dec
fsts
shl
imul
jo
ds
push
mov
push
adc
push
mov
fcomps
ljmp
hlt
cmpsl
aaa
pop
pop
pop
push
lds
push
test
xchg
scas
jmp
push
or
mov
fldt
les
jno
lahf
ljmp
pop
das
addb
dec
push
sbbb
fsubrl
lahf
mov
dec
gs
or
stos
pop
dec
dec
jbe
push
repz
popf
addr16
pop
fsubs
pop
and
inc
bound
pop
push
mov
add
or
fcoms
mov
sbb
call
out
shrl
lcall
cmpsl
mov
pop
mov
cmp
dec
push
imul
cmp
das
sbb
call
jg
pop
fdivrs
inc
out
fldenv
or
mov
dec
fsubrs
mov
fstp
sub
loopne
aaa
loope
sbb
lcall
arpl
pop
arpl
sbb
sahf
xchg
and
or
pop
loopne
movsb
jmp
sbb
out
movsl
aas
or
mov
or
loopne
arpl
sbb
and
fcoml
jmp
ficomps
fsts
jmp
jecxz
sbb
loop
cltd
xchg
fidivrl
or
sbb
arpl
sbb
push
xchg
pop
aas
or
arpl
aas
pop
pushf
sbb
gs
mul
jae
pop
imul
int
lcall
inc
sbb
dec
cs
add
sbb
push
out
pop
mov
xlat
mov
int
or
adc
fists
stos
orl
inc
jp
mov
pop
jo
shr
push
xchg
jno
repnz
push
sbb
cwtl
daa
pop
cmp
lods
or
bound
test
ror
push
pop
sbb
out
sub
fcomp
ja
jns
lret
push
imul
or
mov
rcrl
add
and
sub
daa
hlt
out
mov
pop
out
aaa
dec
sub
inc
call
fdivl
loopne
gs
xchg
xor
or
pusha
fwait
xlat
cmp
sub
out
xlat
std
cmp
popf
adc
add
pop
mov
out
add
push
or
xchg
add
cmpsb
repnz
clc
or
jmp
cld
das
pop
ss
inc
daa
pop
cwtl
push
mov
fisubrs
push
fisubl
mov
jbe
fstps
and
sub
and
pop
sbb
cs
dec
push
out
ficomps
std
mov
fstps
daa
movsb
icebp
push
and
pop
pop
enter
pop
js
out
inc
insl
bound
or
pop
dec
xchg
call
js
sbb
loopne
pushf
cmp
arpl
loope
jo
jmp
faddp
pop
sub
imul
enter
insl
sub
out
and
sub
out
popf
sbb
lock
daa
jne
inc
or
push
std
mov
cmc
jge
xchg
es
data16
fnstsw
inc
loope
addr16
insl
call
jmp
sbb
jp
pusha
pop
pusha
pop
xlat
xchg
dec
inc
or
sahf
dec
cld
mov
ja
cmp
cmp
pop
mov
repz
sbb
clc
test
xchg
dec
mov
mov
aaa
cmpsl
ret
popf
ds
outsl
mov
call
cltd
fcmovnu
in
test
adc
push
mov
xor
sbb
mov
dec
mull
ja
mov
sbb
pop
jmp
cld
addr16
xchg
fwait
sti
xchg
mov
cltd
sub
in
fldcw
fmuls
push
ljmp
or
rorb
movsl
addb
pop
or
xlat
cmp
jno
jnp
sahf
and
xlat
mov
vsqrtss
inc
test
xor
daa
sub
ficomps
stos
xlat
xchg
cmpsb
xchg
pop
fcoms
loope
mov
imul
xor
jp
fsubl
movsb
jecxz
insl
popf
sub
mov
cmp
cmc
cs
popf
mov
xchg
adc
sti
push
pop
xchg
mov
push
xor
and
aaa
sbb
mov
or
movsb
ss
daa
push
dec
mov
jnp
mov
jb
popf
or
fsqrt
fwait
or
pop
inc
or
loop
jo
sbb
sbb
icebp
movsb
mov
in
and
sahf
popf
in
push
in
repnz
insl
and
ret
sbb
mov
negl
in
pop
or
cmp
test
mov
mov
es
fstps
pop
lods
in
xchg
call
std
cmp
out
mov
push
and
sub
cwtl
sbb
mov
in
fwait
pop
mov
lea
pop
mov
jp
imul
sub
mov
pop
daa
fdiv
cmpsb
xor
jne
ret
int3
or
std
in
fs
dec
fsubrs
jmp
fisubrs
fsubrs
push
dec
lret
jo
mov
sbb
stos
push
mov
or
jg
ficomps
outsl
cmp
inc
icebp
lret
jge
in
jmp
pusha
sti
sti
sub
or
push
inc
fdivs
cs
sbb
icebp
or
push
cmpl
sahf
mov
sahf
sbb
fists
pop
imul
mov
pushf
xchg
add
adc
loopne
lods
and
dec
fucomp
ficoms
pop
push
std
jmp
stos
int
mov
cld
pop
imul
adc
mov
out
lret
aaa
cltd
cmp
sub
loope
fiaddl
mov
push
sbb
pop
fcomps
mov
stc
xchg
sbb
adc
imul
mov
call
fwait
nop
pusha
push
inc
sub
movsl
psubw
sbb
pop
outsl
sub
cltd
fwait
or
dec
push
fnsave
fsubrs
cmpsb
sahf
jp
fmull
mov
sub
mov
fsubs
cli
scas
sub
ffreep
ja
xchg
outsl
scas
in
int3
sub
ja
stos
or
push
sub
add
inc
daa
push
cmpsl
enter
aas
das
and
pop
and
fdivr
loopne
mov
out
push
gs
mov
in
mov
sub
pop
cmp
cld
jge
pop
sbb
ucomiss
clc
nop
pop
mov
dec
inc
sub
mov
insl
in
hlt
pop
pop
in
divl
es
movsl
int3
mov
mov
add
jne
idiv
mov
sbb
movsl
cmpsl
dec
or
out
lahf
lods
loop
pmulhw
outsl
lds
push
adc
sbb
clc
popl
and
movsb
lahf
in
and
in
aaa
mov
aaa
jecxz
mov
aaa
pusha
pop
pop
jbe
pop
sub
pop
mov
gs
dec
jnp
loopne
push
in
cli
cs
adc
xchg
cltd
sti
pop
dec
loope
mov
cld
sbb
jge
lods
test
sbb
jp
and
cwtl
or
sbb
fs
lock
sbb
mov
fsubrl
sti
mov
in
lock
test
popf
mov
loop
cld
insl
cltd
fsubrl
movsb
in
call
mov
or
sbb
pop
pop
adc
outsl
das
jecxz
cmp
les
fstps
rcrb
fldenv
mov
pop
jmp
data16
aas
mov
scas
clc
pop
addr16
or
inc
sti
adc
mov
push
in
sbb
jecxz
fistps
out
fcompl
push
repnz
data16
sbb
cmpb
das
cltd
outsb
and
cmp
pop
sub
cmp
xor
loopne
sbb
frstor
sub
scas
ja
in
jb
pop
xchg
jl
or
and
fsub
cmc
popa
or
add
or
dec
dec
inc
sub
xor
movsb
outsb
cwtl
mov
sbb
sbb
ja
bound
mov
jecxz
test
sbb
fiaddl
mov
cld
sbb
pop
and
push
int3
stos
jecxz
jmp
das
mov
push
lahf
repnz
or
sbb
sbb
sbb
pop
test
push
in
jo
mov
pop
arpl
sub
jg
and
and
nop
lea
sub
lcall
stc
mov
das
inc
and
or
dec
int
xchg
sbb
insb
mov
fsubrl
xchg
shl
test
push
notl
test
or
add
adc
lcall
fs
imul
addb
pop
movsb
and
cwtl
add
stos
fcomps
ss
pop
bound
add
test
jp
sbb
jno
pop
outsb
insb
and
arpl
stc
push
push
jo
call
adc
ja
and
stos
andb
out
and
loopne
enter
jg
rclb
push
mov
jg
xor
ljmp
call
fisubs
xchg
or
popa
cmp
ljmp
pusha
ficoml
pop
xor
pop
cmp
pop
pop
insl
xchg
push
arpl
neg
insb
xor
adc
shll
adc
ljmp
iret
imul
mov
jge
sbb
add
call
les
and
mov
mov
out
fsubl
das
lock
push
popf
cmpsl
mov
cmp
enter
push
ret
jecxz
jns
arpl
and
arpl
mov
scas
out
in
in
adc
ret
cmp
jmp
data16
pop
jnp
lcall
push
push
popa
jp
outsl
fisubl
mov
pcmpgtw
jmp
add
sbb
in
xor
imul
mov
sub
inc
lcall
pop
int3
aas
nop
cld
ret
lock
lret
dec
or
leave
mov
mov
hlt
cld
or
xor
decb
add
jp
sbb
inc
cwtl
sbb
out
fistps
mov
addr16
outsl
inc
clc
arpl
fs
movsl
lock
stc
sbb
pop
cmp
clc
jl
pop
mov
add
sbb
add
clc
add
and
inc
in
lds
mov
jmp
arpl
shl
or
addr16
push
push
stc
and
add
arpl
and
arpl
add
gs
pop
leave
arpl
lock
stc
pop
sbb
in
or
push
pop
sbb
lea
and
sar
sbb
pop
scas
sub
int3
or
int
popa
ja
sbb
ficomps
add
add
bound
mov
shrb
insl
ds
lods
pop
cmp
mov
lock
jns
push
xor
stc
add
mov
or
cli
add
add
data16
icebp
ljmp
or
push
or
lea
push
fimuls
cwtl
imull
cmp
mov
xor
and
sbb
cmp
mov
mov
inc
scas
aad
mov
mov
and
hlt
repnz
out
push
and
pop
in
cs
in
xchg
cmp
movsl
and
jne
pop
sbbb
sub
or
adc
fcompl
push
icebp
fsubp
adc
dec
shll
adc
mov
pushl
mov
insl
dec
je
xchg
std
xchg
push
jns
add
adc
js
in
dec
lods
cs
sbb
pop
sbb
lahf
mov
fdivrp
out
test
adcl
fbstp
fcomps
sbb
out
clc
fbstp
lahf
mov
mov
outsl
or
loop
fistl
cltd
cld
pushaw
add
push
aaa
push
jle
push
or
pop
enter
fsubr
ljmp
fcmovnu
or
cmc
jnp
stc
fsubrp
pop
out
pusha
sbb
negl
test
popa
jne
cmp
or
int3
mov
sub
lret
repz
cmp
pop
mov
jns
loopne
and
call
clc
bound
insl
mov
cli
lock
cs
cmp
fwait
int
js
or
sbb
stos
in
test
push
in
aam
jno
sbb
sbb
out
cmp
fwait
sbb
xor
cltd
sbb
mov
pop
sbb
icebp
xchg
fstl
fimull
mov
sbb
adc
loop
fstps
fdivl
xor
es
test
pop
fucomip
cmp
fimull
shrb
fidivrl
xor
mov
pop
loopne
jg
cmp
jg
pop
pop
lcall
dec
test
cltd
icebp
pusha
lret
and
mov
roll
es
add
clc
imul
or
pop
out
xchg
imul
fwait
jnp
push
inc
cltd
adc
stos
std
mov
cld
inc
jmp
aaa
or
sub
bound
aaa
or
nop
out
push
out
dec
aaa
xor
lods
adc
scas
inc
mov
pop
xchg
mov
adc
lds
inc
mov
sbb
sahf
aas
pop
fcmovne
data16
jecxz
out
outsl
movl
pop
push
fisttpl
pop
and
test
iret
inc
or
mov
testl
xchg
out
fld1
sub
into
cmc
mov
cmc
mov
adc
add
mov
js
arpl
iret
out
or
adc
pop
aaa
cmpsb
cltd
into
out
enter
and
push
fxch
imul
lret
inc
pop
enter
cld
lret
gs
leave
xchg
mov
out
adc
inc
inc
in
fsubs
pop
mov
mov
stos
in
adc
lcallw
xor
movsl
jecxz
pushf
cmc
mov
push
xlat
mov
jl
cmp
popa
jae
or
push
pop
push
in
testl
mul
ja
jge
in
loopne
out
fdivrs
fisubrs
pop
mov
mov
jmp
int
jp
arpl
sub
daa
adc
cmpsl
shll
fiadds
xchg
mov
ljmp
loop
pop
and
rcr
lock
xor
mov
shlb
lock
subl
pop
out
cs
arpl
pushf
pop
mov
mov
int
fldenv
movsb
in
inc
push
scas
pop
dec
sti
mov
or
minps
add
and
outsl
in
in
pop
pop
lcall
mov
mov
cmp
fnsave
jnp
jp
pop
sbb
xchg
call
inc
inc
outsl
cmp
fcomip
cmp
js
mov
pop
stc
data16
pop
fs
inc
sbb
outsl
mov
pop
fwait
stc
mov
mov
push
pop
push
jb
and
subb
rcrb
pop
pop
lock
stc
pop
sbb
outsl
stc
clc
sbb
bound
inc
pop
and
and
mov
jle
mov
lock
mov
xchg
mulb
clc
inc
sbb
pop
and
mov
pop
bound
in
les
test
stc
imul
outsl
clc
jg
out
ds
aas
arpl
lock
sbb
jge
and
inc
pop
fcomps
lock
jp
pop
jl
jge
pop
sbb
pop
inc
lock
stc
mov
es
sbb
pop
sbb
sbb
cmp
jge
mov
arpl
lock
and
add
sahf
fldcw
clc
jnp
fstpl
lock
stc
sbbb
cmpsb
fcomi
out
and
pop
add
add
inc
sbb
outsl
call
sbb
lock
stc
sbbl
clc
fstpl
cld
pop
stc
lahf
ljmp
sbb
outsl
mov
pop
cmp
cmp
cmp
pop
mov
adc
outsl
push
jo
and
inc
lock
mov
ljmp
sbb
outsl
js
addr16
call
cmp
cmp
sbb
cmp
clc
pop
pop
push
jecxz
and
pop
xor
stc
add
and
outsl
push
clc
sbb
lock
cwtl
sbb
fcmovnbe
outsl
and
data16
add
add
outsl
mov
pop
mov
sbb
outsl
xchg
call
sbb
jecxz
loop
add
loopne
outsl
fdivrp
mov
lock
stc
jns
mov
inc
mov
and
lock
and
loopne
outsl
push
clc
cmp
mov
sbb
jae
add
sbb
pop
pop
lock
clc
flds
outsl
and
xchg
out
ljmp
cwtl
lock
or
movsl
stc
test
arpl
out
and
js
push
lock
or
dec
pop
outsl
arpl
and
div
cmp
sbb
xor
stc
add
icebp
adc
clc
inc
cmp
insb
sbb
ja
xor
push
xchg
inc
sbb
push
outsl
addr16
negl
mov
loopne
faddl
jo
popf
addr16
call
sbb
pop
pop
jo
imul
outsl
mov
fwait
sbb
pop
lock
stc
mov
and
xchg
pop
pop
pop
cmp
cmp
pop
sbb
sbb
pop
loop
jecxz
sbbl
popl
mov
lock
fdivrp
lcall
inc
pop
popa
lock
ret
test
clc
es
pop
mov
pop
pop
cltd
lock
stc
jnp
jl
outsl
sahf
clc
add
inc
pop
ret
stc
movsb
sbb
cmpsb
outsl
xchg
or
cwtl
stc
addr16
pop
sbb
sbb
data16
xlat
in
scas
sub
sbb
fcoms
aaa
push
gs
sub
shlb
cwtl
leave
out
inc
or
add
lods
pop
cmp
mov
or
aaa
push
pop
ds
mov
mov
mov
inc
fcompl
mov
cltd
fsubrs
jmp
sbb
call
aaa
xchg
fcomp
negl
jnp
aaa
into
sub
mov
stc
arpl
mov
arpl
call
xchg
jne
or
push
cmp
dec
jge
addl
add
inc
out
mov
cmp
pop
fwait
push
dec
pop
js
pusha
fwait
clc
sub
sbb
bound
in
xchg
inc
and
int3
push
pop
jg
cmpsl
push
fs
out
pop
pop
mov
ror
psrlq
sbb
push
popf
js
loop
push
ficoml
pop
push
or
rorb
mov
loop
mov
xchg
push
pop
mov
sbb
jecxz
cmp
clc
pop
mov
fimull
mov
sahf
jne
jle
inc
push
xorl
fmulp
xor
fildll
pop
fdivl
mov
jne
jb
andl
or
in
addl
jmp
fdivrl
jbe
lret
sbb
pop
cwtl
xchg
add
push
mov
call
sbb
aaa
fsubs
ret
fabs
punpckhdq
aaa
cwtl
push
mov
imul
in
addr16
std
outsl
test
cwtl
adc
fcomps
pop
cli
xchg
mov
push
jns
daa
scas
push
dec
stc
cwtl
dec
sub
jmp
das
inc
fisttps
fcmovu
pop
outsl
cmp
stc
cmp
cs
inc
adc
cmp
cli
clc
push
call
mov
scas
fsubrs
ljmp
pop
out
jecxz
push
push
repnz
xchg
imul
aas
or
push
iret
push
pop
negb
cld
out
popf
pop
into
outsb
adc
scas
dec
fcoms
jne
fmul
lods
pop
out
in
mov
sti
cmp
sub
push
fbstp
icebp
imul
fidivrl
retw
sub
adc
add
or
push
test
sbb
rorb
xchg
mov
fdivl
lea
mov
jmp
push
inc
pop
inc
fiaddl
inc
into
cmpsb
cmp
test
mov
aaa
jne
dec
xchg
inc
cmp
aas
inc
add
fistpll
dec
sub
push
clc
push
sbb
pop
xor
js
add
adc
lods
and
pop
test
jmp
stos
imul
imul
inc
call
sub
cmp
in
sub
jecxz
adc
shr
outsl
shl
test
lods
fdivrs
cli
ret
out
add
hlt
call
cwtl
out
cmp
or
add
mov
and
lock
jp
dec
mov
jbe
enter
lret
iret
lock
sti
mov
or
xor
adc
xchg
mov
xor
sbb
lock
and
dec
lock
push
arpl
xchg
enter
icebp
dec
pop
mov
jbe
enter
sbbl
enter
and
jmp
scas
call
dec
push
arpl
imul
or
mov
push
fdivrl
jbe
enter
sbb
arpl
xchg
es
cmp
dec
cld
jbe
push
add
push
xlat
movsb
adc
dec
out
fldl
mov
or
and
lock
dec
dec
sub
mov
dec
pop
mov
fcomp
roll
clc
fstps
outsb
movsb
stos
sub
dec
fstp
popf
lods
mov
f2xm1
stos
dec
enter
or
icebp
cltd
pushf
push
test
pop
mov
or
out
or
insl
sbb
fidivrs
jnp
mov
ftst
mov
pop
popf
jns
mov
cs
mov
pop
xchg
pop
sbb
sti
cs
add
mov
int
pop
std
mov
std
sbb
sub
jle
or
fimull
es
push
adc
mov
js
clc
mov
cmp
fcoml
and
popf
hlt
jmp
sub
ljmp
xor
cmpsb
or
cmp
test
cmp
dec
loopne
stc
pop
mov
aas
xor
fsubs
jge
imul
add
jmp
sub
sbb
or
pop
sbb
sub
gs
in
imul
movsb
or
in
fwait
rcrl
push
movsb
or
stos
fdivs
push
mov
sti
push
add
cmp
xchg
orl
insl
inc
and
mov
mov
or
pop
jb
jle
mov
adc
sbb
or
std
add
pop
es
pop
mov
repz
stos
push
inc
jmp
insl
mov
push
mov
adc
lcall
ljmp
imul
mov
roll
idivb
decl
sub
mov
xchg
sub
xchg
jecxz
psllq
out
cld
xchg
int3
mov
jge
shl
mov
add
inc
cs
or
dec
scas
outsl
out
call
sbb
stc
cmp
pcmpgtd
clc
mov
dec
scas
mov
jbe
mov
mov
mov
inc
or
or
xchg
xchg
and
push
and
sbb
scas
pop
and
nop
xchg
jmp
xchg
and
push
cmp
jecxz
xchg
cmp
inc
push
fdivl
sbb
mov
mov
pusha
push
cmp
sbb
fs
sbb
imul
xor
gs
lret
and
enter
cmp
xchg
mov
cmpsb
ds
sbb
adc
scas
push
jge
insl
insb
inc
iret
cvtps2pi
icebp
mov
pop
pop
outsl
xor
pop
div
cmp
jae
dec
les
aas
fistpll
push
pop
mov
or
pop
mov
imul
mov
mov
aaa
ds
sbb
adc
stos
incl
pop
jl
sub
cmp
cs
jns
xchg
out
pop
mov
imul
outsl
ret
jne
sub
fxch
cld
test
scas
jmp
in
jo
out
insb
out
or
gs
cs
cmpsl
scas
sub
sbb
xchg
sbb
aaa
or
adc
or
and
das
sti
sarb
sub
lcall
pushf
inc
or
jge
lock
cmovno
fsub
dec
and
adc
inc
aas
loop
dec
mul
pop
cmp
imul
xchg
lahf
enter
das
and
cld
dec
jno
jne
test
push
sbb
push
movsb
pop
out
jge
push
sbb
dec
inc
or
in
sarb
pop
outsl
lods
cmpsb
jl
mov
pop
ds
mov
mov
jmp
or
adc
enter
test
sbb
or
pop
sub
bound
pop
jbe
pop
subl
inc
ja
adc
jge
emms
ret
gs
or
fmuls
insl
movsl
insl
ja
fmulp
jne
sub
std
leave
lret
jno
jae
push
jp
sub
push
scas
pop
repz
mov
outsl
jl
loopne
jo
pusha
mov
push
enter
cltd
sbb
mov
mov
ficompl
test
mov
fcompl
imul
stos
xchg
outsl
sbb
cld
xchg
xchg
adc
mov
scas
ret
inc
inc
mov
push
lock
rcrb
int3
inc
cmp
dec
test
cli
jge
call
in
pop
lods
sub
sbb
or
inc
repz
stos
popa
fistpl
in
jne
stos
jmp
outsl
sub
icebp
xchg
lcall
or
clc
push
pop
cld
add
jmp
cld
popa
dec
xor
sub
fmuls
fs
enter
xor
jge
outsb
jge
fisubs
push
push
aas
sbb
pop
pop
pop
pop
aas
or
jmp
fldt
sbb
sbb
mov
test
sub
cmp
and
int
xchg
inc
cld
sub
pushf
jmp
jmp
aad
cmp
sub
cmp
jecxz
mov
jae
gs
mov
leave
push
xsaveopt
cmp
xchg
repz
clc
addr16
ror
popf
fdivrl
das
pop
mov
stos
sbb
fdivrs
inc
pop
cmpsb
gs
pushf
pop
jg
shl
fdivl
gs
mov
cmpsb
fstps
stos
fstpl
xchg
das
jae
cmp
push
popf
shlb
jne
mov
pop
cmp
imul
add
xchg
xor
lahf
push
pop
dec
adc
cli
fcoml
mov
mov
add
adc
xor
outsl
out
scas
cli
jmp
push
pop
ljmp
pop
cmpsl
idiv
pop
in
arpl
fsubr
lret
int
mov
das
adc
test
fbstp
mov
lock
xor
mov
mov
jl
pusha
pop
mov
xchg
or
dec
out
inc
lock
mov
sbb
mov
dec
push
popa
std
add
int3
mov
cmp
xor
jge
imul
mov
sbb
insb
or
lcall
fstp
dec
pusha
inc
xor
outsl
xchg
push
cs
add
pop
mov
aas
pop
inc
lock
xchg
cwtl
fcompl
push
lock
jle
pop
inc
cli
inc
sub
ljmp
xchg
xchg
icebp
jno
pop
xchg
dec
jg
aad
or
dec
mov
mov
scas
jmp
pop
rcr
aam
pmaddwd
xchg
inc
mov
aaa
adc
pop
pop
sub
lahf
cltd
pop
xor
mov
and
stos
cltd
sub
scas
mov
data16
push
imul
add
mov
mov
mov
cltd
fcoms
out
out
push
dec
fisubrl
sbb
inc
jae
psubusw
jp
mov
fmull
das
scas
xchg
mov
cmp
popf
clc
out
fs
sti
xchg
fisttps
cmc
cld
jmp
pop
pop
in
stos
xor
addr16
add
adc
int3
mov
jb
test
icebp
xlat
fs
xchg
sti
ret
or
out
sub
loope
pop
in
movd
loopne
not
or
adc
icebp
out
add
js
mov
clc
ja
fcoms
outsb
in
cmp
and
pop
pop
imul
add
xchg
adc
mov
stos
xor
mov
mov
lods
clc
ja
jmp
mov
sbb
pop
push
jns
lock
xlat
mov
push
ds
int3
popf
insl
xchg
push
push
adc
movsl
loopne
setle
test
pop
cli
push
xchg
loopne
fldl
je
cmp
call
mov
push
enter
pop
pop
call
ljmp
pop
pop
xchg
jge
js
mov
push
int
sub
divb
nop
xchg
mov
lret
bound
inc
and
pop
testl
pop
jmp
cmp
xchg
fistpl
lcall
out
dec
idiv
aad
ficompl
enter
int
mov
inc
popf
mov
mov
or
out
xchg
mov
push
or
pop
gs
neg
dec
cmp
fdivl
xchg
pop
push
enter
fldcw
pop
notb
dec
into
inc
lret
out
shll
pop
push
sbb
insl
les
repz
es
jmp
daa
stc
cmp
pusha
mov
nop
xchg
fidivrs
out
mov
cmp
fisubl
mov
jmp
inc
xchg
in
enter
mov
mov
out
aas
fistps
jmp
sbb
adc
dec
xchg
add
pop
mov
daa
and
gs
outsl
and
mov
arpl
fcmovb
out
or
arpl
fadds
sub
dec
gs
push
cmpsl
mov
pop
xor
lret
lahf
pop
imul
mov
clc
jp
mov
sbb
aas
xchg
and
jb
in
fldt
inc
sti
mov
aaa
addr16
jns
das
mov
filds
cmp
jp
add
hlt
fwait
cld
sbb
imul
mov
gs
int3
xor
lock
cs
repz
mov
pusha
jnp
or
fadds
add
icebp
dec
cli
push
mov
lret
jg
loope
or
sub
loope
pop
testl
and
sbb
fsubrs
cwtl
fldenv
sbb
lods
push
mov
enter
or
cmc
add
imull
sbb
jmp
pop
mov
fnstenv
in
jne
cs
lahf
fnstcw
jo
dec
insb
lds
inc
mov
arpl
test
lock
pop
sbbb
push
or
sldt
insb
jo
js
ret
xchg
mov
fldt
cltd
aad
js
call
pop
rcr
movsl
sub
xchg
pop
inc
jg
and
cmpsl
pop
repz
cwtl
in
add
pop
loopne
adc
add
cmp
pop
negl
jp
out
xchg
rclb
dec
std
stc
das
mov
mov
mov
pop
lcall
pop
jne
sti
xchg
ljmp
push
ror
mov
imul
nop
or
adc
mov
outsb
addr16
out
push
cmp
mov
ret
outsb
movsl
push
lret
movsb
mov
xchg
fistps
xchg
shlb
outsl
xor
notb
push
movaps
and
cmp
lret
cmp
clc
sbb
cmpsl
dec
data16
jne
popf
sub
arpl
lret
orb
mov
sub
jecxz
cli
xchg
je
psubusb
ficomps
fdivrs
pop
inc
and
imul
jle
jbe
push
jo
jne
adc
ds
fldcw
mov
cmp
jmp
xchg
and
mov
jns
sub
mov
mov
xchg
cmp
or
stos
daa
loope
sbb
or
push
fdivs
pop
push
into
jo
outsl
sub
mov
inc
sbb
mov
cmc
out
lock
dec
cs
push
dec
repz
sti
ret
out
jbe
ljmp
dec
aas
xchg
mov
mov
lods
and
fdivrl
aad
pop
push
out
jo
sbb
mov
lahf
into
push
ja
ljmp
movsb
inc
repz
push
out
jbe
lcall
dec
fmuls
xchg
repnz
call
sti
data16
sub
icebp
mov
pop
and
push
pop
neg
sbb
cmpsb
sbb
ds
push
xchg
pop
dec
shlb
in
andl
mov
sub
sub
in
cmp
test
leave
mov
mov
fldcw
pop
xchg
bound
cmp
into
mov
inc
mov
loope
mov
push
pop
in
stc
dec
cmp
push
pop
jge
lock
int
sete
adc
stos
loop
dec
inc
cmp
dec
mov
sub
rcrb
sub
or
ss
rcrl
add
dec
test
in
fcomps
aam
out
enter
add
sub
cmpsb
scas
sub
sub
icebp
cwtl
push
pushf
lods
rorl
push
xchg
push
or
iret
mov
icebp
mov
mov
cs
imul
pop
or
mov
arpl
inc
cwtl
or
mov
idiv
js
test
sbb
sub
pusha
shlb
jno
pop
add
sahf
cld
leave
mov
or
sbb
cs
fwait
sub
push
inc
and
aaa
fsincos
stos
faddl
sbb
das
lods
movsb
ljmp
xlat
or
pushf
sbb
inc
or
cmpsb
into
xor
dec
cmp
pop
mov
leave
testl
or
stc
pop
scas
test
mov
rorl
imul
and
notl
icebp
cmp
je
cmp
add
outsl
scas
mull
pushf
inc
xlat
cmp
aad
inc
add
out
orl
in
jg
into
sub
pop
cs
inc
mov
mov
scas
leave
lcall
mov
sub
dec
push
test
adc
pop
pop
into
bound
or
loop
pop
loope
pop
popa
mov
mov
cmpsb
lret
addr16
sbb
dec
xlat
xchg
nop
xchg
push
mov
mov
dec
or
push
std
or
pop
clc
xchg
xchg
lret
and
pop
cltd
dec
xor
and
xchg
push
jo
movsl
fs
out
insb
fwait
pop
sub
negl
imul
fnstenv
faddl
aas
scas
cltd
push
repnz
sbb
mov
sub
mov
xor
fsub
dec
mov
int
repz
dec
ja
cmp
mov
iret
and
fildl
pop
repz
or
push
push
jl
clc
jmp
mov
fimuls
fcmovnu
cmp
mov
mov
jbe
sbb
push
fs
xlat
stos
movsl
ret
cmp
mov
stos
notl
std
pusha
fcmovu
xchg
sahf
aas
out
dec
mov
jae
repz
movsb
fnstenv
xor
je
jge
das
pop
insb
lods
fmul
scas
cmpsl
movsb
gs
push
mov
push
arpl
adc
adc
dec
pop
jns
out
aaa
xor
cmp
das
fcomip
mov
sbbl
lock
hlt
loopne
es
fldt
fldt
cmp
call
push
addr16
sub
jmp
addr16
outsl
adc
push
stc
fs
sbb
shll
fs
mov
scas
das
aaa
aad
std
adc
cmc
pushf
or
stc
addr16
imul
outsl
add
movsbl
test
fwait
sbb
addr16
cmp
pop
lock
jmp
fstpt
cmp
mov
inc
arpl
push
clc
loop
pop
imul
cwtl
repz
rcrl
push
push
jbe
xchg
push
jmp
lea
xchg
cmc
divl
inc
fs
data16
sub
dec
inc
popf
dec
mov
fsub
sbb
fdivrs
adc
push
pop
in
mov
pop
lret
js
add
xor
xchg
mov
jp
pop
jno
repnz
ja
lahf
rolb
imul
xchg
mov
in
jg
mov
inc
jl
push
push
fs
and
jg
xchg
scas
fcmovbe
in
loop
shl
jmp
pxor
push
sahf
mov
sbb
cmp
pop
inc
ss
sub
pushl
sub
adc
stc
jg
adc
pop
push
lock
adc
out
test
dec
lea
fisubs
and
cmp
pop
pop
sub
imul
sbb
aas
aas
inc
push
dec
pop
xor
xchg
out
scas
fisubs
stc
add
push
sbb
outsl
inc
orb
jmp
pop
daa
and
xor
pop
popa
mov
mov
push
xchg
and
lahf
rclb
sub
dec
cld
lods
or
xor
fnstenv
pop
mov
arpl
sahf
sarb
xor
jge
push
inc
je
cmpl
cs
jmp
cmp
inc
test
pop
out
add
fidivl
rcrb
enter
add
jno
cmpsb
pop
cs
icebp
xor
je
inc
aas
pop
cli
pop
push
into
call
cld
test
mov
sbb
arpl
fsubl
xchg
fcmovnb
gs
mov
aam
xchg
add
mov
jp
xchg
pop
outsl
sti
lahf
xchg
inc
xor
add
andb
jns
inc
jno
jne
lods
loop
jge
mov
jae
aaa
outsl
adc
pop
mov
jecxz
mov
aad
or
mov
dec
cmp
pop
cmp
insb
outsl
jecxz
rorl
push
je
sbb
xchg
sahf
push
pop
pop
lock
xchg
sub
lock
sub
fiaddl
fdivl
push
outsl
out
xor
sbb
outsb
fcomps
ss
pop
pop
in
push
adcb
xchg
mov
ja
push
xchg
cli
shrb
sub
xchg
negl
pop
cltd
lret
jnp
adc
cmp
test
insb
andb
call
sti
jecxz
cwtl
or
iret
push
or
fmull
cli
and
gs
mov
mov
imul
in
insl
popf
pusha
clc
inc
dec
fmuls
pop
cmp
dec
inc
int3
xor
inc
dec
cmp
hlt
pusha
inc
push
sbb
andl
imul
repnz
iret
ret
packssdw
leave
mov
fistl
sub
push
mov
fucom
push
testl
jecxz
push
mov
data16
dec
pop
popf
leave
aad
lds
mov
daa
push
dec
aas
fdivl
jmp
lcall
jge
dec
lods
inc
cmp
imul
xlat
or
push
xchg
or
lcall
stc
cmp
dec
ret
leave
mov
mov
inc
jb
flds
pop
mov
movsl
xrelease
faddl
sub
push
push
in
lcall
xchg
and
sbb
sub
adc
ljmp
mov
repz
rcl
into
sbb
mov
pop
mov
push
lds
mov
arpl
xor
out
jmp
xchg
pop
push
add
or
repz
iret
cmpsb
pop
inc
dec
daa
inc
fimull
cld
and
outsb
scas
aas
aaa
cmp
and
xchg
pavgw
mov
push
fldl
test
xor
fcompl
xor
sbb
ja
xchg
xchg
ja
mov
sbb
pop
jne
in
xchg
push
negl
lret
mov
sti
scas
xchg
movsb
xchg
stos
clc
inc
mov
or
adc
movsl
sbb
mov
mov
icebp
mov
push
push
lds
rol
popa
mov
out
es
das
xor
sahf
cld
dec
bound
mov
xchg
popf
and
cmp
push
loopne
pusha
xchg
pusha
and
mov
adc
and
addr16
aaa
hlt
jge
filds
insb
scas
scas
in
xchg
add
push
lret
pop
ret
je
repz
stos
push
xor
xchg
mov
je
es
sti
fxch
mov
andb
mov
push
inc
fimuls
ljmp
or
adc
inc
pop
in
xor
pop
push
in
or
int
fidivrl
dec
sub
inc
add
jmp
enter
ret
mov
dec
sbb
fisttps
push
sti
lds
xchg
outsl
add
jne
xchg
push
pop
fcompl
jg
add
mov
ficomps
fidivl
xchg
push
cmpsb
cmp
gs
and
lods
popf
jnp
test
out
pop
cvtps2pi
jbe
jmp
gs
and
xor
push
lds
jmp
dec
sbb
mov
subb
rorb
into
xor
sbbb
dec
dec
rcl
and
push
pop
add
daa
cmp
xchg
inc
jp,pn
sbb
push
test
push
out
stos
pop
outsb
cs
in
adc
fistpl
inc
mov
xchg
inc
call
or
xchg
adc
or
add
popf
inc
shlb
cmp
push
push
inc
lds
push
sbb
add
insb
push
cmp
add
jbe
aam
or
scas
and
xchg
jae
jo
data16
sbb
mov
xchg
add
test
call
pop
mov
fists
jge
mov
mov
add
pop
lcall
std
orb
or
xor
cli
and
ficoml
jae
push
pop
testl
push
in
and
outsl
push
pop
or
mov
or
fisttpl
loope
adc
xchg
pop
or
xchg
sub
movsb
jbe
das
push
cld
inc
or
add
popf
leave
or
repnz
outsl
sahf
cmpsl
imul
in
inc
jge
mov
pop
pop
sub
jns
stos
clc
add
adc
cmc
sbb
negb
scas
das
arpl
sub
movsb
loop
lock
sbb
popa
mov
sbb
gs
lock
pop
movsb
fadd
pushf
call
stc
sbb
sbb
jle
or
mov
cwtl
jmp
ret
dec
mov
fistpll
out
ret
adc
sti
cmp
dec
mov
cwtl
push
jmp
mov
sub
sbb
and
mov
or
popf
in
outsl
cmp
pop
shr
mov
dec
clc
cmp
dec
cwtl
cs
xchg
stc
sbb
mov
roll
fbstp
push
sub
push
repz
divb
dec
fcompl
enter
jne
cmp
pop
daa
int
pushf
mull
sbb
arpl
push
scas
mov
fcmovnu
faddl
imul
lods
imul
add
ja
shlb
and
inc
push
push
addr16
test
and
icebp
push
xchg
addb
xchg
dec
gs
fs
pop
mov
sub
jmp
test
and
cmc
sbb
in
fwait
or
addr16
fsts
inc
xchg
add
addr16
inc
arpl
pop
add
sub
lock
lds
pop
scas
dec
ljmp
call
pop
mov
sbb
mov
jmp
int
ficompl
lret
xlat
push
lsl
les
jl
sarl
int
jecxz
lods
lock
cmp
mov
pop
ficoml
addps
jno
insb
shrb
jo
inc
fistpl
fwait
xchg
addb
inc
test
sub
movsl
mov
mov
or
push
mov
ds
fstpl
xor
and
xchg
aad
stos
pop
xchg
sbb
push
pop
mov
mov
mov
xor
inc
and
mov
arpl
fucomi
sbb
arpl
mov
push
dec
adc
add
inc
jae
sub
dec
test
jmp
fmul
fs
shl
pop
in
mov
pushf
sub
data16
es
inc
pop
adc
out
push
dec
add
adc
leave
call
pop
bound
xchg
xchg
sahf
or
cmpsb
rcll
sub
mov
adc
cwtl
xor
or
push
loope
aam
cmp
cwtl
inc
jmp
lret
cmp
mov
subl
add
pop
je
out
xchg
inc
jl
lret
pop
inc
mov
mov
jle
jecxz
in
ret
fwait
js
leave
and
ficoml
fadd
je
push
orl
adc
leave
sti
shrl
sbb
push
flds
idiv
push
push
clc
jge
mov
push
mov
jmp
in
enter
test
shl
arpl
jne
lods
addr16
outsl
mov
cmp
add
jnp
imul
mov
cmp
jp
xchg
xchg
and
inc
sbb
pop
fs
push
adc
fistl
movsb
pop
pop
cltd
cs
clc
es
pop
mov
xchg
sbb
fnsave
jns
push
in
cmp
fsubrs
lahf
adc
shll
subl
jnp
out
fwait
pop
in
and
ret
pop
scas
fidivrl
jb
out
jge
stc
ljmp
mov
test
cmp
push
stos
push
hlt
gs
icebp
inc
mov
or
test
fcoms
repnz
inc
sub
dec
cld
mov
loopne
push
sbb
sahf
ja
xor
je
jae
sbb
je
imul
pusha
mov
loopne
xor
shll
sbb
mov
mov
lock
fsubr
xchg
add
mov
and
test
ret
mov
pusha
clc
add
pop
jo
sub
mov
and
push
adc
sti
cld
jp
pop
out
addr16
shlb
fistl
lock
loopne
scas
repnz
jecxz
mov
adc
lods
cmp
frstpm(287
gs
imul
cmp
cli
xor
cmp
scas
mov
in
or
stos
out
in
scas
xchg
lds
popf
fcompl
inc
push
add
mov
stos
jne
push
stos
or
dec
in
inc
in
cltd
push
ss
sbb
fsubrs
pop
sbb
jae
je
andb
loope
fcompl
mov
push
cmp
dec
addr16
lock
push
mov
ret
sti
add
mov
mov
mov
push
mov
subl
ljmp
data16
pusha
dec
mov
xchg
inc
sub
add
mov
pop
jmp
std
sahf
movsl
push
jl
pop
push
pop
mov
cltd
test
mov
jae
jns
leave
fsubl
in
cltd
cmp
inc
out
sarl
insl
fildl
jmp
loop
repz
lds
inc
pop
mov
cmc
jmp
shl
movsl
pop
xchg
xchg
outsl
jmp
hlt
leave
pop
sahf
icebp
movb
jmp
outsl
and
push
dec
imul
pop
jo
repz
inc
add
jl
xor
sti
mov
into
popf
fidivrl
stc
aaa
xchg
pop
pusha
xor
lret
repz
sbb
out
idivl
das
icebp
fstp
jnp
add
data16
lcall
popf
outsl
sub
cmpsl
in
mov
nop
sbb
push
pop
push
xchg
in
ljmp
pop
mov
inc
push
mov
cs
pop
push
aas
call
das
xchg
outsb
xchg
pop
pop
sub
pop
bswap
or
cmpsb
fcomps
test
das
sub
jecxz
int3
or
hlt
sbb
leave
cmp
or
jl
cmpsl
push
or
leave
stc
rcrl
adc
nop
sarb
pop
clc
mov
push
inc
or
add
sbb
mov
in
jns
lcall
negl
or
sbb
xchg
inc
adc
cs
mov
arpl
xchg
std
jns
sbbl
mov
mov
sub
cmp
dec
mov
dec
adc
mov
mov
sub
mov
pop
adc
add
mov
pop
mov
adc
mov
jno
jnp
mov
add
cs
sti
arpl
push
loop
cli
push
push
mulb
icebp
andb
ret
push
cs
xchg
pop
or
cwtl
imul
fcmovnb
push
aam
mov
aaa
ja
jbe
imul
xor
shr
mov
pop
sar
jns,pt
pop
push
sub
xlat
cltd
mov
inc
ficomps
inc
dec
fs
dec
loopne
sub
adc
shlb
or
add
pop
cli
sbb
aaa
scas
jg
mov
fwait
loop
jae
cmpsb
movsb
push
cltd
repnz
pop
mov
dec
addr16
fsubrs
push
out
mov
dec
push
and
dec
mov
jmp
sub
ja
mov
mov
pop
ja
aas
lock
push
cmpsl
cmp
push
inc
pop
cwtl
out
addr16
nop
jno
sbb
insl
push
mov
jecxz
loope
fistpll
or
sub
cmpb
cmpsb
lahf
and
add
pop
fdiv
or
sub
in
push
in
out
and
scas
das
fwait
shrb
jle
push
jo
adc
sbb
mov
loope
aad
pop
outsl
pop
mov
test
mov
std
push
pop
insb
push
and
shrl
jae
mov
jne
inc
test
scas
aaa
or
sbb
das
push
fistpl
cld
sbb
jnp
test
sbb
dec
xor
sbb
out
dec
dec
jo
push
inc
sahf
jp
dec
pop
fisttpl
dec
xchg
sbb
push
xor
xor
insb
pop
mov
ljmp
out
inc
cltd
pop
testb
xchg
push
gs
mov
lcallw
push
mov
push
sub
test
inc
or
fcomp
stc
sub
out
push
dec
jl
and
data16
cwtl
cmp
push
sarb
mov
sub
aaa
or
pop
pop
mov
dec
sahf
mov
cmp
mov
test
sbb
cwtl
js
mov
mov
out
mov
popa
int
bound
inc
pop
out
int
fistps
lret
jno
insb
xorl
lahf
mov
popf
add
hlt
pop
jle
xor
sub
or
add
ficompl
fcomps
push
inc
test
imull
xchg
insb
jg
mov
pop
pop
jno
lahf
jb
jge
mov
fnstcw
pop
pop
sub
sub
adc
sbb
pop
cli
bound
jbe
jb
out
movd
cs
and
pushl
pushf
sub
push
inc
cmpsl
push
or
jle
pop
cmp
sahf
pop
or
rol
add
aaa
push
insl
arpl
push
and
lods
xchg
xchg
hlt
lahf
sbb
push
mov
dec
jg
mov
lahf
daa
cmc
jmp
ja
shrb
lahf
icebp
xchg
jmp
push
push
and
in
sbb
pop
mov
pop
mov
cmp
loopne
pop
fstps
sbb
aas
fbstp
add
pop
sbb
mov
fiadds
loopne
test
xchg
jge
mov
insb
pop
jnp
push
pop
call
repz
or
lds
mov
loopne
sbb
cmpl
sub
addr16
fsubrs
adc
addr16
scas
in
sub
cmp
cmp
and
pop
rolb
mov
out
jb
cld
lret
dec
pop
dec
daa
mov
cmc
das
pop
inc
rep
dec
xchg
imul
mov
pop
pop
cs
lret
add
loopne
pop
push
inc
stc
and
pop
ja
pop
push
or
dec
or
testl
mov
xchg
xchg
sub
cmp
mov
arpl
mov
cli
fsubrl
data16
mov
and
xchg
push
inc
insb
add
pushf
std
shll
in
clc
gs
lock
fdivs
adc
fwait
divl
pop
pop
cli
scas
call
xchg
sub
inc
push
cmp
in
push
test
test
xchg
mov
das
gs
adc
mov
and
and
arpl
fcmove
jne
rcrb
repz
mov
decb
fisttpl
and
lcall
daa
push
sbb
pop
or
mov
mov
jmp
pop
inc
pushf
loopne
or
pop
sbb
push
bswap
adc
adc
sti
cli
sbb
ficoml
pop
addr16
cld
cltd
push
enter
xchg
test
pop
scas
ret
outsl
add
imul
out
inc
jbe
sahf
sub
sbb
les
out
xor
js
call
mov
sub
cmp
dec
fidivs
cmp
lret
and
or
dec
scas
mov
cld
lret
xchg
gs
rcl
insl
fmuls
fdivrl
scas
sub
out
jge
pop
jmp
in
imul
loopne
pop
pusha
mov
enter
loope
aaa
xor
lahf
jp
or
addr16
cmpsb
in
adc
stc
sahf
mov
out
inc
pop
sub
mov
xchg
xchg
int
lahf
cltd
or
int3
gs
addl
fisttpl
and
lock
aaa
add
and
adc
sub
addr16
sbb
or
dec
in
xchg
mov
pusha
bound
xchg
leave
push
loop
test
inc
loopne
mov
clc
xchg
jo
sub
adc
xor
cltd
cmpsl
stc
clc
popa
sbb
leave
xchg
jl
outsl
fwait
mov
jmp
sub
pop
mov
ret
into
pop
ja
pushf
orl
inc
filds
xchg
ficompl
jo
mov
jbe
arpl
shll
fcoms
jnp
lahf
ltr
inc
mov
sub
jmp
mov
jae
inc
ret
arpl
cli
outsl
cwtl
stc
mov
pop
xchg
clc
js
fistl
cmp
cs
sbb
pop
divb
mov
pop
inc
xchg
mov
stos
mov
clc
lahf
mov
in
xor
hlt
sahf
daa
bts
outsb
sbb
ffreep
xchg
sub
jbe
stos
mov
addr16
jne
psubb
inc
dec
xor
mov
cmpl
scas
push
sbb
in
lea
fs
push
fwait
in
sub
mov
adc
cmp
adc
push
lods
cwtl
arpl
clc
ret
out
arpl
xchg
mov
sbbb
xchg
test
daa
fdivl
sub
ffree
xchg
and
jne
orl
aaa
adc
in
dec
cmp
push
movsl
jae
pop
dec
sti
out
mov
lret
dec
xchg
sub
mov
pop
leave
std
lcall
daa
enter
push
call
add
xchg
pop
push
pop
aad
insl
and
jnp
int3
sbb
cmp
or
in
push
testb
stc
jp
pop
incl
jne
jnp
push
xchg
int3
xor
out
adc
add
adc
ja
xchg
out
outsb
push
cmp
jl
outsl
fstpt
jns
mov
cmc
stos
cld
inc
es
out
push
sub
inc
xchg
push
push
loope
ja
or
mov
shrl
int
add
fwait
pusha
sub
inc
outsl
stos
cs
in
frstor
and
jb
jge,pn
mov
fidivl
inc
sub
push
jo
inc
or
mov
insb
insl
leave
mov
cmc
adc
test
icebp
mov
mov
sbb
lret
in
sahf
popa
sbb
cld
out
push
out
push
pop
or
or
arpl
je
xor
outsw
cmpsb
xchg
add
jo
sbb
sbb
jmp
mov
mov
xchg
fsub
mov
cmc
jmp
ljmp
lods
mov
pop
cld
shrl
fiadds
dec
scas
sbb
insb
les
add
sarl
pop
dec
jg
push
adc
xchg
shr
mov
mov
pop
pop
ja
or
lods
push
jle
mov
push
mov
mov
lret
xchg
into
sub
dec
negl
in
and
mov
cmp
outsl
bound
scas
and
sub
mov
xchg
cld
jle
dec
loopne
dec
or
pop
ss
es
jl
sbb
push
sbb
mov
nop
jg
sub
inc
lds
pop
sahf
aas
fistpl
pop
outsl
bound
jae
test
mov
stos
xor
and
pop
pop
daa
pop
movsl
or
faddl
pop
out
pop
lcall
or
pop
pop
and
pop
pop
jmp
std
pushf
popa
pop
fucom
aas
jmp
in
imul
and
pop
stc
mov
xchg
pop
inc
sbb
add
pop
jmp
repz
mov
fmull
jbe
jns
cmpsl
cmp
iret
aam
fidivl
pop
pop
pop
mov
int3
jmp
cmp
mov
clc
jecxz
push
in
and
sbb
aaa
mov
add
es
jno
lret
dec
sbb
loop
repz
sbb
ljmp
push
sbb
and
dec
and
popf
notl
pop
fsubrl
ficompl
or
fs
fwait
pop
sti
imul
fidivs
mov
pop
fcomps
add
addr16
mov
leave
jecxz
mov
movaps
pop
inc
push
pop
gs
sti
lcall
sbb
pop
pop
fdivrs
pushf
aaa
jmp
sbb
xchg
pop
or
fcomps
sbb
clc
outsl
ds
push
pop
pop
sahf
xor
aas
das
sbb
ja
outsl
cli
or
xor
loopne
arpl
sbb
bound
push
push
cmc
enter
sti
jae
outsl
push
xchg
ficoms
and
bound
addr16
clc
loop
sbb
xchg
notl
mov
cmp
cltd
inc
mov
rcrb
or
jnp
clc
fsubrl
push
fdivrs
adc
xor
or
jmp
pop
js,pn
xchg
fcmovnu
cwtl
xchg
cmp
sbb
repz
push
icebp
loope
repz
sbb
outsl
ficomps
push
cmp
popf
fdivs
insl
sbb
push
fcomps
cwtl
fistpl
out
fcomi
lcall
xchg
cwtl
adc
fcomps
pop
je
cs
mov
je
fmulp
sarb
int3
xchg
jmp
push
insl
frstor
jmp
mov
mov
bswap
pop
sub
pop
mov
insl
scas
lret
mov
imul
and
cmp
pop
dec
xchg
sbb
jno
insl
mov
xchg
lcall
sub
in
xor
xchg
pop
out
ficoml
dec
sbb
push
pop
btc
fwait
inc
das
cs
sahf
jmp
xlat
inc
mov
xchg
cld
inc
dec
fcoms
packssdw
xchg
xor
inc
scas
or
and
xor
sahf
leave
cmp
popf
sahf
push
jnp
ficoms
pop
sbb
mov
xchg
fneni(8087
cli
cli
or
sti
mov
jb
mov
sbb
xchg
pusha
mov
cltd
arpl
sbb
gs
notb
xchg
fidivrs
fildl
mov
in
popa
and
pop
push
inc
frstor
mov
lock
loopne
and
arpl
sub
pcmpgtd
out
mov
xchg
pop
and
stos
and
out
inc
clc
scas
outsb
pop
loopne
fmull
repz
arpl
mov
cwtl
aaa
stos
mov
das
pop
int3
sub
cmp
pop
jge
pmaxub
testl
insl
sbb
sub
mov
test
imul
mov
mov
mov
inc
cmp
and
dec
cmpsl
inc
add
mov
cs
add
int3
pop
xchg
sub
jmp
lcall
into
popf
rcrl
lock
add
or
mov
jnp
notl
stos
add
jnp
jge
icebp
in
leave
mov
in
aaa
pushw
cmc
fidivl
bound
fistl
insb
xor
inc
sahf
je
lret
cmp
int3
loopne
cmp
push
addr16
jb
sarb
mov
xchg
add
xor
sbb
les
jecxz
outsl
out
xor
divps
xor
fcmovnu
mov
sub
jnp
or
addr16
sbb
stos
sub
hlt
xchg
into
daa
mov
pop
fcmove
lahf
mov
scas
adc
clc
xchg
bound
push
shl
je
dec
aas
inc
sub
mov
xor
sub
les
jge
fsubl
jge
clc
cwtl
cmp
or
in
addr16
push
and
push
xchg
xchg
cmp
adc
test
xchg
lods
mov
repz
outsb
lods
push
in
in
push
lods
fmuls
cmp
jecxz
pop
in
outsl
mov
fcoml
fcmovnbe
aas
lds
test
fwait
inc
out
pop
lock
push
gs
das
xchg
test
sub
or
loop
xchg
cmp
jmp
adc
test
test
add
fcoml
fsubp
les
or
push
stos
xor
pop
pop
adc
cmp
fsubs
pop
outsl
daa
mov
sbb
rorl
mov
fcmovnu
pop
pop
int3
dec
sub
mov
cmp
pushl
and
xor
mov
dec
in
gs
cs
aas
iret
insl
loop
test
pop
cvtdq2ps
arpl
add
mov
rorb
fildll
push
sbb
xchg
cmc
vsubss
mov
flds
leave
sub
pop
data16
and
jae
dec
jge
out
adc
cmpsl
icebp
push
cmc
pop
jmp
cs
push
inc
ja
cmp
sub
outsl
pop
cmpsb
fs
sbb
jno
cmp
cmp
aas
dec
jno
pop
add
fists
push
jl
adc
ja
ret
dec
out
pop
notl
push
add
in
adc
or
jecxz
div
mov
mov
add
jg
cmp
iret
in
pop
aam
jecxz
xchg
adc
and
jnp
dec
mov
scas
shll
scas
fmuls
mov
sbb
es
pop
dec
gs
movzwl
aas
int
jmp
xchg
inc
mov
mov
sub
jmp
scas
ret
pop
push
cmp
lahf
jnp
cmp
aaa
test
pop
faddl
enterw
fs
sbb
push
fnstcw
fcomp
mov
in
pop
jecxz
pushf
or
fcomp
pusha
and
push
aas
ret
fdivl
and
fldt
inc
pop
fdivr
mov
loop
test
and
sub
sub
and
notl
mov
mov
std
mov
xchg
sbb
out
lahf
call
daa
inc
sbb
sarb
mov
or
imul
aaa
xchg
scas
mov
fdivrl
dec
jmp
dec
lahf
inc
daa
lods
adc
or
sub
fidivrl
jmp
pop
in
andl
fstps
pop
call
cmp
aam
pushl
jb
or
pusha
in
addb
pop
jl
and
jle
push
inc
and
push
insb
bound
mov
jp
out
jecxz
out
clc
push
idivl
enter
lods
inc
mov
push
aaa
call
lods
ret
fmuls
in
or
push
xchg
sub
addb
push
dec
push
mov
or
sahf
mov
inc
je
mov
push
add
jo
idivb
sbb
popa
mov
jbe
into
xchg
mov
ds
mov
fistpll
insb
jns
push
stos
mov
fstp
sub
inc
lret
and
inc
pop
sbb
fldl
iret
add
mull
cmpb
mov
test
out
mov
push
mov
fisttps
lret
pop
stos
or
push
dec
push
jecxz
cmp
popa
jnp
adc
cs
cmovae
out
arpl
outsl
stc
mov
icebp
xchg
pop
inc
sbb
fucomi
aam
pop
sub
pop
out
and
pop
clc
pop
sbb
jg
jmp
and
cmpsb
or
mov
jge
cmp
or
sub
leave
in
push
or
movsl
arpl
dec
mov
push
cmp
test
jle
imul
xchg
adc
dec
arpl
cs
insl
dec
xor
and
mov
mov
sbb
data16
pop
aas
daa
cld
rolb
lods
lret
daa
sahf
ret
pop
cmc
fnstsw
aaa
movsl
outsb
lock
adc
in
ds
lods
sbb
gs
in
or
sbb
mov
aad
ss
push
mov
iret
imull
test
jmp
fs
cld
in
dec
fidivrs
gs
jl
in
outsb
data16
es
repnz
call
mov
out
test
fidivrs
mov
push
mov
pusha
mov
xor
filds
mov
fwait
mov
lods
push
outsb
cltd
mov
pop
xlat
mov
pop
adc
push
sub
call
mov
outsl
test
test
or
arpl
mov
es
mov
pop
add
loopne
test
pmaxub
dec
mov
fidivrs
pusha
shlb
cmp
dec
test
xor
sbb
out
mov
jl
stc
inc
loopne
cwtl
mov
xchg
out
data16
movsb
push
cmpsl
and
cmp
int
cld
scas
data16
mov
movsl
mov
ret
arpl
jl
leave
sti
jg
outsl
lret
mov
out
sub
in
rcr
pop
push
out
mov
sbb
stos
and
sbb
inc
xchg
jbe
insb
mov
scas
pop
or
pop
or
sbbb
adc
xchg
lock
pushf
ljmp
testb
loopne
das
sub
xlat
mov
jge
cld
cmp
fsubr
mov
mov
sub
clc
jge
test
push
adc
dec
or
and
call
xor
sbb
in
fcoms
fstpt
iret
cmpsl
jns
addr16
mov
fmuls
pop
xor
loope
add
fucomi
daa
loopne
les
ja
fld
insl
xor
or
sbb
pop
sti
sub
inc
dec
push
in
push
mov
jl
pop
out
push
cwtl
cmpsl
push
sub
sbb
xchg
inc
aas
or
xchg
cmpsb
arpl
cltd
loop
daa
jp
in
cs
fdivl
mov
push
data16
testl
enter
repz
idivl
fscale
xchg
ret
push
pop
xlat
loopne
dec
mov
and
pop
call
sahf
jo
pop
scas
mov
lds
cmovne
sub
popa
imul
xchg
xchg
cmpsb
hlt
adc
mov
sbbb
std
sahf
shll
leave
jl
and
cmp
or
xor
mov
cmpsb
fdivrl
jl
xor
cwtl
arpl
fidivl
push
je
xchg
data16
aam
cmp
out
fcomps
push
add
push
gs
mov
pop
and
cmp
mov
andb
les
es
sti
je
jbe
cmpb
jae
fstpl
aas
push
sti
aam
test
pop
mov
fsubl
cld
mov
push
jle
cwtl
dec
leave
push
mov
sti
or
mov
push
call
test
das
addr16
and
xor
movsl
sub
mov
sbbl
sahf
aam
in
mov
add
inc
movsb
push
in
push
mov
pavgw
jmp
insb
push
and
out
sbb
pop
adc
xchg
adc
adcb
and
out
arpl
repz
lret
test
xor
div
mov
in
and
mov
lods
xlat
mov
sbb
sub
stos
ja
inc
or
push
popf
arpl
pop
call
bound
or
xchg
jae
dec
fiadds
insl
divl
xchg
loope
push
sbb
lods
loopne
mov
dec
pop
pushf
xor
ljmp
sti
movsb
negl
pop
insb
push
push
in
and
scas
out
sbb
sub
pop
sub
sbb
aad
das
xlat
xchg
cmp
sbb
fmuls
mov
scas
mov
shll
loope
loope
and
lods
sub
sti
lcall
cmpsb
push
pop
scas
ret
xchg
cmp
aas
mov
fnstcw
mov
enter
mov
and
lahf
sahf
scas
cli
dec
xchg
sub
push
sbb
cmp
dec
push
movsl
movsl
inc
rcll
lret
push
fisubs
jp
jbe
outsl
loop,pn
cmp
cmpb
push
imul
cmp
loopne
pop
mov
pop
ss
shr
fcomip
sbb
jae
jmp
subb
ret
movsb
cmp
sbb
outsl
ja
sbb
loop
push
clc
push
cmc
xchg
inc
sub
xor
lds
xor
jne
sbb
aas
pop
mov
sbb
mov
adc
mov
pusha
mov
inc
sbbl
scas
sbb
clc
xchg
push
and
cld
pop
cli
jbe
adc
je
push
sbb
insb
fistps
out
pop
or
push
rol
fisttps
mov
aaa
mov
sub
rolb
rorl
jno
push
jge
sub
xchg
mov
fldenv
pop
ficomps
fsubl
jbe
xor
xchg
dec
mov
push
xchg
outsl
and
push
jno
dec
push
jl
notb
or
js
and
fnstsw
pop
add
mov
jmp
push
xor
add
ds
pop
inc
push
out
cs
pop
shrd
jne
or
xor
in
clc
sbb
jnp
adc
fnstenv
adc
jae
pop
jno
mov
xchg
jno
out
ja
xchg
xchg
sbb
adc
dec
push
in
sub
adc
es
orl
or
or
arpl
fdivs
add
jmp
xor
and
fs
aas
jge
mov
cmp
add
testl
mov
sub
fcmovb
mov
in
inc
jo
mov
movsl
pop
cmovno
repnz
cli
push
push
xchg
inc
gs
mov
fdivrp
mov
fiadds
push
mov
in
insl
loopne
cmpsb
sbbb
popa
xchg
xor
jmp
test
in
test
cmp
rcll
mov
push
cmpsl
cmp
mov
dec
adc
ret
jge
sarb
sbb
sbb
rorl
cmp
stos
clc
ds
fisubrs
xor
addr16
pop
jecxz
scas
lcall
cltd
cmpb
dec
outsl
loopne
add
adc
clc
dec
push
aaa
out
sbbb
loopne
jl
inc
ljmp
ret
sbb
mov
mov
and
push
adc
pop
fbld
aas
movsl
jno
fs
into
and
pop
or
insb
in
fsubr
lahf
dec
les
jmp
fmull
pushf
pop
xchg
push
mov
popf
push
std
or
sbb
sbb
push
aaa
mov
stc
sbb
cltd
xchg
mov
add
fs
mov
dec
adcb
loop
sbb
xchg
syscall
fstps
popa
jecxz
sub
cs
in
add
cli
add
out
xor
fidivrs
sbb
je
iret
mov
negl
fnstsw
mov
js
es
add
fdivrp
roll
stc
in
mov
xchg
popf
lahf
add
jmp
mov
sahf
xor
jmp
icebp
cmp
sbb
sub
out
repz
testb
dec
subb
repz
es
or
sub
cmpsb
ds
cmpsb
js
mov
mov
sbb
addl
sbb
scas
jne
js
hlt
adc
cmp
insb
dec
jge
ja
xor
or
dec
cld
sbb
cwtl
jne
xor
neg
dec
or
into
lret
push
daa
push
mov
dec
dec
xchg
fdivrl
add
mov
into
test
sbb
pop
push
es
ja
lds
pop
sbb
add
ret
add
fimull
mov
aaa
add
lock
cmpsb
sbb
inc
incb
or
pop
mov
stos
setnp
xor
adc
movsl
js
push
jns
or
push
pop
repz
sub
cmp
jp
pop
out
repz
and
and
fadd
insl
stc
aaa
push
test
and
stc
push
cmpsb
outsl
mov
xlat
mov
arpl
lods
mov
inc
inc
outsb
sub
ret
rclb
adc
push
fisubs
mov
cmpsb
fs
inc
sbb
push
xchg
mov
sarb
lds
adc
inc
dec
or
xchg
dec
daa
rcrb
and
jo
daa
pusha
cli
in
and
jecxz
mov
in
jns
sub
in
es
shlb
fistpll
aaa
mov
and
bnd
out
xchg
sbb
bnd
mov
fistl
lret
sbb
mov
aas
stos
and
imul
arpl
jnp
and
sbb
and
and
mov
lods
lcall
mov
repz
jle
movsl
shlb
mov
out
lahf
cmp
sbb
int3
loopne
fildll
push
or
mov
push
addr16
shlb
xchg
sbb
push
scas
jmp
sarb
push
push
sub
cmp
pop
insb
fdiv
incb
and
push
mov
in
out
jns
fwait
mov
sbb
outsl
imull
lcall
adc
push
pop
jae
cltd
in
repz
pusha
cwtl
add
rcrl
cli
push
test
fidivrs
fwait
xchg
or
push
ret
inc
pop
addl
jno
ret
push
add
push
xchg
fnstsw
inc
movd
icebp
pop
out
pop
mov
pop
sbb
add
leave
xor
pop
push
gs
ret
jmp
pop
mov
adc
and
mov
gs
push
xchg
mov
lcall
jns
pushl
sub
jmp
sub
insb
push
fwait
sbb
pop
push
jg
js
dec
or
fidivrs
jmp
push
pop
push
aad
cwtl
fsubrs
cmpsl
inc
cltd
dec
cmpsb
and
es
loope
cmp
es
fwait
movb
mov
aam
out
fidivrs
int
js
cmp
sbb
in
or
xor
mov
ss
loop
aad
frstor
mov
hlt
push
movsl
mov
sub
stc
xchg
loope
dec
sbb
mov
adc
out
testb
ljmp
jne
cs
ss
lods
lcall
stc
push
jne
ret
add
cmp
mov
imull
pop
sbb
sbb
out
sub
pop
sub
inc
mov
dec
loopne
ficompl
inc
fistpl
adc
fcompl
hlt
ljmp
jne
aam
clc
out
jmp
aaa
popa
jecxz
das
std
add
push
fwait
pop
pop
xchg
push
das
push
orl
popa
adc
inc
and
pop
sub
aaa
ja
addr16
in
fmull
mov
xchg
fisttpl
arpl
ficomps
outsl
repz
or
imul
int
xchg
stos
and
fstl
sbb
sub
aas
sti
lahf
pop
or
mov
in
inc
icebp
sub
inc
pop
pop
or
sub
shlb
in
daa
clc
pop
loope
inc
fucomip
fcompl
or
scas
or
fcomps
fcomps
in
and
jle
das
sub
ja
arpl
pop
stc
mov
stc
sub
ja
pop
popa
in
fldl
in
add
jnp
xlat
lahf
adc
xchg
mov
push
push
pop
cmovno
les
in
rcrb
xchg
fdivr
sbb
xchg
cwtl
aas
or
jmp
fistpll
push
or
push
pop
test
movswl
or
addl
lock
dec
lcall
and
lret
pop
scas
sbb
xchg
pop
xchg
sti
pop
outsl
sub
js
pop
aaa
pop
and
fxam
push
call
fwait
addr16
add
cwtl
lock
out
add
fimuls
inc
sbb
jg
cld
ja
popa
pop
cmp
leave
sub
getsec
push
mov
cltd
add
or
sbb
addr16
dec
test
aad
daa
jb
pop
and
pusha
push
ret
out
ret
sbb
mov
sub
and
filds
out
cmpsl
jb
arpl
rcr
jmp
add
stc
in
fwait
jge
repz
into
cmp
xchg
jnp
jg
sti
aas
xchg
pushf
jle
cmc
inc
fbstp
in
out
shl
push
xor
fstpl
xchg
lods
test
jae
xor
fucomip
data16
push
sahf
sarl
pop
pusha
mov
fiaddl
adcl
cmc
das
push
cmpsb
mov
pop
pop
push
ja
loope
inc
and
cmpsb
or
inc
pop
jl
sbb
push
loopne
jns
fs
psrlq
jne
jno
jae
inc
mov
repz
aad
andnps
xchg
mov
add
and
push
inc
lcall
xchg
add
jge
jmp
and
sbb
out
or
push
movsb
sub
cmp
mov
xchg
jb
cltd
pop
dec
faddl
sub
sub
out
sbb
je
add
lea
dec
insb
loop
lods
sbb
rolb
clc
bswap
xchg
xlat
aaa
jecxz
cmc
fadds
mov
or
add
sub
push
or
adc
cltd
addr16
out
mov
lahf
sub
inc
les
cmp
xor
aaa
dec
cs
in
jmp
add
outsb
mov
jmp
xlat
pop
fistl
stos
pusha
pop
out
es
or
mov
and
pop
jle
pop
push
adc
addb
pop
in
repz
xlat
mov
jnp
lahf
adc
loope
mov
scas
cwtl
pop
repnz
pop
mov
dec
sub
adc
cmp
pop
lock
inc
adc
xchg
push
lret
sbb
adc
jmp
sahf
outsl
adc
mov
dec
bound
mov
and
aad
or
mov
mov
test
shl
in
pop
movsb
or
pop
scas
ret
cli
or
das
xchg
rol
add
push
pop
in
fnsave
or
add
push
push
lcall
ds
mov
bound
loopne
push
and
pop
xor
adcb
jb
push
arpl
stos
xor
push
shll
cmp
xchg
dec
mov
gs
movsl
add
iret
sbb
std
out
nop
out
lock
push
pop
out
aaa
ds
push
popf
fisttpll
inc
out
jae
sbb
add
fnstsw
push
xor
mov
adc
arpl
out
in
adc
xchg
xchg
dec
jp
arpl
cmc
jecxz
xchg
jbe
xchg
xchg
dec
lcall
xchg
and
ja
repz
cmp
jge
mov
notl
mov
inc
push
outsb
pop
sbb
in
push
fists
repz
jno
fsubrl
sbb
fisubs
pop
enter
repz
jno
inc
sub
or
jne
pop
arpl
imul
inc
sub
jnp
popf
pop
inc
add
lods
xchg
ret
cmp
mov
or
pop
data16
pop
pushl
cmp
jp
add
mulb
aad
pop
jmp
bound
push
aaa
xchg
hlt
sbb
xchg
daa
hlt
mov
and
dec
gs
add
pop
lahf
push
fsub
pop
popf
mov
hlt
das
add
mov
adc
mov
fsubrl
cmp
adc
sub
cmp
mov
bound
push
ror
add
mov
jne
sbb
scas
aas
daa
aaa
ja,pn
cs
daa
push
jge
xchg
fbld
dec
jne
mov
pop
lods
pop
sub
xchg
sahf
imul
inc
or
fiaddl
gs
xor
pop
mov
dec
mov
ds
sub
cmp
sub
push
insl
adc
pop
insl
pop
aad
pop
and
cmpxchg
jnp
pop
jl
pop
cmp
test
gs
jl
jmp
xchg
add
pop
mov
or
dec
andl
es
test
fsts
mov
shrw
add
add
in
out
decl
je
das
aaa
pop
sbb
cmpsl
jns
inc
xchg
sti
or
lcall
pop
cmpsl
je
xchg
fwait
jmp
jecxz
sbb
pop
pop
pop
aas
jmp
in
pop
sbb
mov
and
pop
push
ss
out
add
pop
arpl
lods
adc
fcoml
pusha
and
and
scas
das
popf
and
add
and
cld
or
cmp
into
mov
pop
divl
fcomp
arpl
pop
sub
gs
add
lods
xorb
cli
push
lcall
popl
adc
jmp
sti
ficoml
js
jle
pusha
sub
pop
dec
pop
fs
pop
gs
pop
xchg
dec
push
adc
loop
jbe
loopne
pop
mov
inc
ja
imull
fcomps
pop
ss
dec
jmp
fisubrl
add
cmp
cs
jno
cli
fincstp
jnp
in
sti
jbe
addr16
cmp
sbb
inc
pop
pushf
pop
dec
push
bound
push
test
cld
gs
push
pop
and
mov
fisubrs
push
testb
xchg
sbb
fdivr
push
fwait
sbb
sub
jne
push
pop
and
mov
sbb
dec
std
xor
clc
dec
dec
sbb
or
mov
dec
or
jg
pop
fcomps
adc
cli
pusha
lock
arpl
test
add
bound
and
jge
or
sbb
sbb
lret
cmp
jo
sbb
stos
les
ljmp
add
imul
sbb
push
cmp
pop
js
dec
mov
push
fcmovnu
adc
popa
inc
jnp
jnp
cltd
mov
cli
mov
jnp
mov
push
arpl
xor
or
mov
mov
and
pop
outsb
sbb
mov
cpuid
inc
jp
ljmp
mov
mov
pop
cli
gs
aas
and
mov
fs
push
and
fsubs
jae
es
inc
mov
hlt
insb
sbb
mov
test
xchg
arpl
mov
ficoms
bound
jmp
cwtl
addr16
push
fstpl
fidivrs
adc
outsb
lcall
jo
dec
ret
dec
jl
adc
test
je
sarl
sarb
and
arpl
rolb
adc
ja
and
js
out
mov
push
gs
test
inc
test
fildl
xchg
push
aaa
cwtl
pop
out
add
sti
and
arpl
and
push
cmpsb
imul
test
xchg
mov
pop
sub
jmp
or
fildl
cmp
push
pop
pop
fdivr
addr16
ret
leave
adc
xor
outsl
push
fs
push
adc
loopne
shlb
in
adc
pop
test
int3
push
into
loope
sti
rcll
frndint
mov
out
cwtl
icebp
xchg
lea
stc
andl
ss
call
inc
pop
cld
loopne
sbb
cli
mov
cmp
cwtl
popf
cvtps2pi
data16
inc
pop
mov
ds
push
and
sbb
mov
push
sbb
push
xchg
push
sti
cmp
jge
pop
gs
data16
out
xchg
lahf
pop
or
adc
lret
les
fsubrs
fistpll
cltd
outsl
inc
cli
gs
pop
xchg
filds
and
clc
movsb
cli
sbb
roll
xchg
int3
dec
dec
xor
or
aam
mov
and
push
movsl
fwait
sbb
shll
cmpb
in
popf
aam
int3
add
mov
repz
scas
ljmp
or
in
sahf
out
jne
dec
repnz
push
outsb
bnd
cmpsl
mov
cmp
jnp
mov
push
cmp
icebp
sub
xchg
cmpsl
in
fwait
jp
movb
fisubrl
and
or
cmc
decb
mov
inc
cwtl
pop
sti
adc
scas
test
aad
and
pop
iret
adc
cs
xlat
syscall
out
in
mov
ja
sbbl
ds
xchg
pop
out
insl
inc
jmp
inc
frstor
lret
fs
es
mov
cmpb
mov
clc
out
call
sbb
movsl
subl
ret
mov
clc
push
dec
testl
cli
adc
mov
mov
and
add
or
mov
jo
sahf
fldt
jecxz
cli
or
scas
lods
out
outsl
mov
addr16
lahf
cmp
jmp
jg
sub
xchg
or
std
lret
je
aaa
push
pop
pop
cmp
push
jg
lcall
adc
aam
sbb
pop
testl
inc
in
aam
mov
fdivs
addr16
scas
add
jmp
in
out
dec
in
xor
sub
aaa
jg
push
aad
add
mulps
xchg
sub
cmp
xor
inc
mov
xchg
sbb
pop
test
rep
testl
cwtl
insb
sub
sbb
jbe
pop
and
push
or
xchg
or
cwtl
ja
sub
arpl
dec
mov
push
addr16
js
adc
data16
rorl
lods
adc
std
xchg
pop
xchg
cmp
or
sub
gs
mov
xor
loope
inc
repnz
fnstcw
sub
or
sbb
ljmp
ret
pop
gs
mov
in
pop
or
sbb
jb
cmp
sub
mov
push
js
jnp
int3
jno
dec
or
cmpsb
xor
pop
sbb
pop
cmp
mov
das
and
sbb
and
mov
cmp
add
int3
cmpb
and
gs
jns
fdivrs
test
pop
fsubrs
hlt
jl
ret
mov
mov
lahf
mov
out
arpl
and
lret
or
cmp
inc
push
sub
push
cmp
jg
loope
faddl
inc
aas
shlb
mov
add
pop
mov
out
pusha
scas
pop
inc
sti
sub
pop
dec
popa
xchg
or
data16
mov
ja
or
loopne
cltd
jle
and
xorl
xchg
jne
scas
sahf
and
cmpsb
cs
ror
inc
mov
stos
stos
jge
popa
lods
dec
jg
push
sbb
ret
andl
inc
mov
push
sbbl
sub
mov
fnstcw
dec
jae
es
loopne
fnstenv
les
dec
out
sbbl
aas
jno
xchg
push
or
adc
sbb
fwait
xchg
jnp
and
xor
pop
mov
fisttpl
cmp
or
test
jns
fstl
dec
push
cmp
std
mov
adc
xchg
test
fcoms
leave
outsb
mov
jbe
pop
fadds
inc
jecxz
xchg
add
mov
cmp
push
outsb
sahf
add
popa
add
mov
adc
mov
sub
pop
jo
cmpsl
ficoml
xchg
pop
adc
loopne
ret
addr16
addr16
and
sbb
jl
ficomps
mov
jl
daa
daa
inc
aas
fs
les
out
xchg
fsubrl
jg
aas
cmp
pop
pusha
imul
ret
add
jb
pop
inc
sbb
gs
jne
sub
rsm
sbb
out
out
xor
push
xor
sbb
sbb
in
cmp
mov
sbb
xchg
pop
int
sub
and
aad
loopne
outsl
imul
test
call
fcoml
jl
cli
mov
repnz
int3
cld
cmp
sub
addr16
test
lahf
adc
xchg
clc
sub
out
sahf
les
pop
stos
mov
daa
leave
pop
mov
add
add
push
inc
int
cwtl
lret
push
push
clc
fbld
dec
pop
in
iret
stc
cmpsb
jae
push
jmp
pop
cli
decb
push
push
pop
sub
gs
pop
das
sub
fnclex
inc
push
push
cmp
imul
xchg
notl
sub
js
add
lret
and
push
sbb
and
sbb
sub
xchg
mov
out
lock
popa
mov
shrb
insb
pop
jge
insb
loop
lahf
fstl
sbb
cmpsb
mov
jnp
dec
mov
sbb
push
mov
testb
cmp
mov
mov
push
push
cltd
repz
aaa
pop
imul
in
jle
mov
aas
xchg
xor
cwtl
into
pop
repz
fdiv
sbb
jne
js
cmpb
inc
fcoml
jbe
mov
addr16
push
imul
mov
pop
xor
decl
push
mov
lahf
cltd
jg
add
jl
jb
mov
jbe
outsl
setae
pop
mov
lret
jle
fstps
daa
push
cs
dec
sbb
sbb
mull
pop
jno
into
movsl
enter
cwtl
push
pushf
lret
fwait
insb
dec
andl
ret
sbbb
adc
clc
mov
loopne
push
jbe
push
jno
xor
jnp
dec
pop
push
xchg
sub
hlt
imul
xchg
jo
xor
xor
nop
sub
pushf
aas
inc
loopne
int
les
scas
dec
xchg
mov
jo
int
mov
loop
addl
rcrl
adc
cld
mov
in
xor
sub
or
xchg
out
cmp
out
dec
out
mov
pop
sub
inc
and
pop
insl
mov
out
ljmp
lcall
das
xor
inc
dec
xor
sub
fdivp
or
mov
xchg
jns
cltd
pop
testl
push
ss
dec
sbb
xchg
lcall
sbb
pop
dec
xchg
cmp
cwtl
cmp
pop
cmp
out
mov
xchg
xor
mov
inc
in
aas
js
xchg
aad
pop
and
rorl
idivl
aaa
data16
fsubs
pop
rcr
out
sub
xor
pop
inc
sbb
xchg
jg
lods
pop
fcomp
cmpsb
nop
jg
subb
adc
and
notb
mov
sbb
add
sub
and
int3
push
gs
pop
pop
shrl
and
fcompl
cmp
pop
fcompp
fisubs
es
xchg
out
and
popa
pop
cmpsb
loope
insl
gs
das
icebp
pop
sbb
mov
sub
out
es
ja
aad
adc
cltd
pop
jbe,pn
faddl
sub
and
cmp
sbb
fwait
cmp
and
or
hlt
fsubs
ficoml
or
mov
arpl
test
or
push
xchg
and
fldenv
aaa
and
sahf
inc
pop
lcall
gs
sbb
xchg
dec
jb
adc
adc
mov
push
frstor
pop
push
pop
push
arpl
das
ret
sub
les
jo
cmp
scas
test
ja
sub
pop
jge
mov
push
pop
add
addr16
cmp
stc
out
sbbl
pop
jp
fildll
in
pop
jo
movsb
mov
shl
push
sub
loop
xchg
sbb
add
icebp
outsb
fcoms
aas
fsubl
fists
shrb
sbb
sbb
jl
bound
xor
rorl
jns
data16
into
sbb
mov
subl
sti
aam
sbb
cwtl
xchg
daa
sti
mov
lock
arpl
arpl
mov
jno
fisttpll
lcall
fiadds
dec
andb
imul
cltd
mov
rcll
cmpb
adc
sbb
adcb
aam
in
push
pop
imul
icebp
aaa
or
into
add
dec
cwtl
sbb
xchg
jge
fisubs
pop
fs
adc
in
outsb
mov
dec
sbb
inc
ja
mov
and
aad
iret
ds
inc
pop
jb
push
inc
cmp
jge
fmul
fnstcw
aaa
mov
jns
jmp
dec
xchg
ljmp
mov
insb
add
xchg
adc
inc
jmp
mov
add
pusha
mov
push
inc
es
mov
inc
mov
shrl
jno
mov
pop
pop
mov
push
gs
jmp
pop
insl
sbbl
popf
movsb
addl
mov
je
push
cmp
sahf
sahf
mov
popa
fidivl
sbb
lahf
dec
xor
jnp
and
xor
stc
mov
jne
into
sbb
mov
sbb
dec
mov
pop
loop
push
hlt
add
dec
flds
dec
and
sbb
add
call
sbb
rclb
sub
ret
sbb
std
jns
movd
cmp
jle
fadds
push
jbe
push
sti
das
cltd
fmull
push
xchg
add
out
mov
mov
dec
filds
outsl
mov
xchg
popf
mov
test
cmpsl
and
sbb
sbb
or
xchg
pop
aam
js
pop
or
mov
pop
out
rorb
fistpl
fildll
fcomps
aam
mov
sbb
ret
lods
mov
xchg
jbe
testb
ljmp
dec
fwait
pop
aad
lcall
fstpt
testl
fldcw
into
btr
jne
sub
loopne
pusha
addr16
gs
xchg
std
push
or
rcl
movsl
ljmp
data16
adc
jb
insb
xor
lret
dec
popl
cmc
lret
jge
xchg
jno
jl
push
in
inc
mov
imul
fmul
ffree
iret
cld
loope
cmpsl
and
jne
dec
insl
outsb
jecxz
sbb
outsl
aad
in
pop
pushf
fdivl
xchg
xchg
addr16
dec
je
cmpsl
cmp
jle
fldl2t
cld
aad
mov
xchg
jnp
cmp
xor
and
daa
sbb
dec
loop
push
imul
mov
js
scas
adc
out
xchg
mov
loop
add
out
cli
call
dec
fcmovnbe
cs
out
leave
jo
int
mov
pop
mov
in
loopne
dec
movsl
outsl
stc
pop
test
test
adc
push
outsb
in
ret
gs
sbb
sbb
xlat
mov
jbe
cmp
sub
fsubrl
cmp
jae
loope
xchg
mov
mov
ljmp
sahf
lret
sbb
add
sbb
adc
and
pop
dec
xor
aam
sbb
ret
sahf
stos
sbb
mov
fsubrp
adc
xchg
cmp
loop
inc
lret
mov
sub
movsb
and
pop
dec
or
push
jg
jnp,pn
addr16
or
sub
dec
or
in
and
fs
cmp
add
clc
outsl
ficoml
mov
faddp
lods
push
mov
sbb
pop
clc
sbb
mov
pusha
fdivrs
in
lcall
ljmp
cmp
andb
cltd
in
mov
sahf
or
lcall
dec
iret
and
jge
cmp
mov
ss
mov
xchg
inc
cmpsb
cmpsl
hlt
inc
cmp
jns
fidivrs
int3
gs
shl
ja
leave
inc
imul
mov
cmp
ljmp
mov
xchg
subb
arpl
lcall
gs
pop
or
add
adc
pop
pop
push
push
call
idivb
add
js
pop
into
sbb
and
ds
in
lods
xchg
inc
fstpt
fsubrs
push
mov
outsl
pop
test
or
sarb
fistpl
jl
jl
pop
cmp
das
iret
outsl
dec
xchg
adc
adc
mov
movsb
xchg
lret
cmp
push
or
cmp
dec
sbb
inc
jl
and
inc
xchg
je
out
fcoml
dec
addr16
dec
pop
out
lret
sbb
pop
cld
add
daa
call
ljmp
fidivs
clc
inc
es
sbb
lds
ret
mov
xchg
imul
movsl
xorb
fisubs
mov
insb
aaa
mov
es
xchg
lahf
mov
xchg
xchg
mov
cli
jmp
push
outsl
sub
gs
sub
popa
jge
mov
loopne
sub
loopne
sub
mov
inc
test
iret
test
pop
add
mov
sub
mov
mov
and
jne
inc
sub
adc
adc
pop
mov
stc
inc
loopne
fs
push
mov
inc
lds
mov
shll
add
push
in
fbstp
sbbb
jp
stos
lcall
mov
clc
ret
clc
clc
shr
imul
adc
mov
int3
adc
in
adc
or
pop
clc
or
and
int3
clc
popa
adc
cmp
imul
push
pop
xor
add
das
aaa
jnp
sbb
add
ror
fiaddl
je
inc
movsb
sub
insb
cmp
out
aad
xchg
pop
jbe
jno
and
mov
pop
sbb
aad
adc
js
xchg
scas
maxps
push
cs
lds
xor
pushf
sbb
xor
fs
jle
mov
sbb
cmpsl
cmp
jae
inc
incl
inc
dec
sbb
pop
add
pop
lock
sub
add
mov
lcall
cwtl
aas
stc
xchg
rolb
dec
js
sti
loope
cmp
dec
jge
pop
push
outsl
ljmp
andl
loopne
mov
es
ret
cmpsl
or
cltd
cltd
jle
inc
dec
mov
push
rclb
sub
mov
jmp
push
test
out
gs
push
iret
loope
push
fmull
mov
xchg
fcoml
sub
cmp
push
push
outsl
into
push
jg
and
inc
imull
sti
pusha
sbb
mov
mov
and
outsl
iret
and
sbb
in
pop
mov
push
xchg
mov
aaa
push
stc
push
jge
arpl
mov
sub
mov
and
lcall
push
xor
push
cltd
ficoml
mov
scas
outsb
hlt
repz
cmp
mov
fcom
loopne
sti
out
scas
mov
shlb
sub
pop
icebp
nop
flds
mov
push
sub
add
push
mov
test
mov
xchg
fnstenv
fsub
sbb
adc
cs
cmp
jl
xchg
scas
xchg
dec
jp
fwait
cmc
pop
test
xchg
mov
addps
ljmp
insb
mov
cmp
cwtl
push
leave
sub
rcrb
xor
lods
xchg
mov
xor
sub
out
mov
rcll
iret
xor
dec
cmp
sub
call
sub
jbe
or
inc
repnz
mov
add
in
lret
pextrw
pop
sub
into
adc
inc
and
int
sbb
jp
fcomi
cvtps2pi
fimuls
into
mov
mov
lods
es
shl
loopne
xchg
test
repz
iret
lock
rolb
xor
mov
orb
fbld
add
stos
outsl
jmp
pop
sbb
xor
sbb
fidivrl
daa
xchg
sahf
push
inc
mov
outsl
dec
xchg
fnstenv
fsub
rcll
mov
pop
sub
xor
or
aas
inc
pop
push
addr16
aam
andl
data16
pop
addr16
psubb
cmp
bound
fldenv
jo
xor
and
mov
inc
andb
test
icebp
fimuls
adc
inc
add
push
mov
stc
dec
faddl
sbb
gs
inc
pop
and
insl
sub
sti
fwait
sahf
inc
dec
sbb
rclb
push
fiaddl
jle
loopne
and
pop
jnp
pop
rorb
or
adc
je
push
call
repz
pop
inc
jle
jge
jo
mov
xchg
int3
fisttps
fsincos
cwtl
mov
ret
cld
push
add
jne
in
jnp
mull
ja
cmpsb
cmc
fadd
mov
pop
clc
mov
cmp
cmp
sub
pop
sar
daa
fists
repz
mov
xor
cmpsb
fsubrl
push
addr16
nop
sbb
jl
sahf
jnp
and
cmp
jb
jae
js
dec
pop
push
mov
loope
movb
cmp
pushf
arpl
lahf
ret
daa
cld
rorl
jno
outsl
adc
dec
xchg
outsb
leave
outsb
sub
mov
adc
add
pop
pop
ljmp
cmp
hlt
and
int
adc
xorb
sub
fcoms
mov
cli
add
mov
loope
ja
mov
sub
sbb
mov
test
or
out
arpl
cwtl
cmpsb
mov
std
sub
dec
and
rcrb
dec
sbb
mov
pop
inc
xchg
aas
dec
xchg
bound
cli
ret
mov
call
push
xor
test
cmp
push
jmp
add
mov
clc
add
pop
mov
jo
pop
inc
dec
and
aaa
aam
fldcw
mov
mov
dec
push
mov
mov
jo
inc
cmp
xchg
and
ret
pop
mov
fsts
push
lcall
ret
adc
xor
sbb
mov
inc
push
mov
sahf
and
out
or
or
or
std
or
imul
push
sub
mov
mov
insb
and
sbb
sar
lods
rorl
das
psrlq
jno
js
sub
insl
pop
in
cmp
fcmovnu
adc
nop
fmul
pushf
cmp
inc
lods
les
aam
adc
fdivs
inc
das
aas
stc
pop
not
xchg
in
and
inc
push
test
or
sub
int3
push
leave
ja
or
stos
mov
ficompl
lret
pushl
pushl
or
jge
push
mov
fcomps
push
lods
xchg
inc
movsl
adc
mov
insb
push
pop
inc
jb
mov
gs
add
mov
xchg
scas
jns
inc
loop
divb
in
and
cmp
fcmovnb
das
inc
adc
mov
mov
inc
fisubrl
cld
jbe
addr16
jmp
xchg
test
mov
in
cmp
or
sub
cmc
pop
mov
and
pop
fcom
test
mov
mov
push
test
mov
mov
add
lock
add
fdivs
push
leave
sbb
ljmp
push
sarl
inc
pop
xsaves
xlat
or
mov
stc
dec
out
inc
test
mov
stos
mov
lods
xor
imul
push
mov
addr16
and
sub
jmp
inc
fnsave
inc
aas
pop
ljmp
mov
in
adc
fwait
rcrl
and
mov
lcall
lea
int3
add
fnop
outsb
dec
popl
sti
adc
pop
enter
aaa
add
jmp
push
dec
and
stos
shr
cwtl
mov
idivl
sbb
push
mov
sub
shlb
subb
xchg
insb
stos
jmp
dec
xchg
addr16
xchg
test
cmp
xchg
std
xlat
inc
je
test
or
js
imul
lea
bound
pop
adcb
pushf
ffreep
out
sub
xchg
rorl
sub
shrb
xorb
mov
in
jl
adc
lcall
fwait
notb
fs
jo
mov
lods
mov
fcompl
add
fwait
das
push
push
xor
int
fbstp
sub
and
xor
fstpt
fadds
stos
loopne
lret
mov
sbb
mov
mov
jl
stc
sahf
or
gs
out
and
jo
je
add
mov
ret
cwtl
mov
cmp
jae
pop
ds
fcmovne
cmp
fmull
mov
and
mov
out
inc
dec
incb
mov
psubusw
jnp
mov
ficompl
js
cltd
jnp
ret
scas
inc
cs
lock
inc
fbld
push
cs
inc
sbb
lcall
fistpl
scas
stos
xchg
fistl
fwait
pop
sub
add
mov
mov
bound
mov
sub
gs
cmp
push
fdivrs
ds
cmp
movsb
stos
push
push
hlt
mov
push
mov
or
jge
mov
and
int3
cmpsl
push
pop
jns
dec
addr16
jmp
nop
repz
jnp
pop
cwtl
jp
scas
and
adc
sub
sahf
dec
jae
jge
mov
dec
push
or
jnp
lds
cli
sub
in
je
and
fstp
sbb
xchg
shrl
or
fcos
add
mov
push
sbb
shl
jbe
fdivs
jne
in
xor
fidivrl
inc
fsubs
mov
jnp
mov
cmp
inc
push
adc
mov
push
dec
addr16
outsb
pushf
inc
push
sbb
aad
pop
or
shll
jne
xorl
loop
fmul
jmp
cmp
pop
pop
pop
shl
cmp
xchg
ljmp
pop
fwait
mov
faddl
cmp
aaa
mov
push
mov
movsl
sbb
or
lret
pop
inc
sub
out
in
outsl
mov
jno
mov
dec
mov
jnp
cmp
stos
and
in
dec
movsl
sahf
das
xor
sti
sub
jne
aam
adc
pop
push
sub
stc
ss
mov
flds
or
sbb
dec
stos
test
subl
sbb
inc
int3
idivb
push
xchg
sbb
mull
adc
mov
loopne
test
out
push
sub
mov
mov
insl
jp
cmp
mov
pop
pop
dec
lret
je
mov
cmc
outsl
lock
mov
jo
jns
lods
cwtl
add
pop
call
nop
jns
dec
push
and
in
aad
stmxcsr
ficoms
xchg
and
insb
fstps
dec
test
iret
pop
cwtl
pop
mov
dec
add
sbb
testb
inc
jg
xor
addb
mov
push
addr16
shll
stc
mov
adc
jecxz
mov
sbb
xor
repnz
and
gs
shll
aas
mov
mov
repnz
stos
pop
mov
ja
es
dec
push
fstl
fsub
cmc
addr16
jae
xchg
clc
add
cmp
mov
lea
negl
sbb
addr16
and
dec
in
clc
imul
push
in
jnp
sub
add
sbb
pop
jo
out
pand
fldl
xor
sub
push
xchg
fwait
push
add
pop
jb
push
mov
stc
shl
xchg
ss
jg
bound
loope
mov
pop
xor
lea
sbb
xchg
mov
imul
jb
jg
aam
in
mov
inc
or
push
dec
pop
jb
mov
cmp
es
mov
push
ficompl
cmpsb
add
mov
push
les
cmpxchg8b
lret
out
cmp
pop
repnz
mov
stc
movsl
addr16
jne
jl
shll
ficoms
maxps
sub
jne
sbb
inc
xor
js
mull
in
sahf
dec
push
cwtl
jne
cmpsb
rclb
xor
pop
shll
and
imul
jne
cld
mov
add
xchg
push
inc
jg
pop
lcall
lret
loope
push
lahf
cmp
dec
aaa
leave
push
sbb
hlt
aam
daa
fstps
mov
stc
int3
into
mov
cmpsb
sbb
outsl
ds
jp
pop
leave
cmc
lds
sub
xchg
out
fsubl
cmp
and
arpl
loopne
jnp
stos
divl
repz
jecxz
cs
scas
shlb
push
shll
mov
fdivrs
cmp
call
lea
call
push
rorl
lods
dec
in
pop
pop
pop
loop
dec
xor
xor
jb
int3
popa
cli
jg
cwtl
fldenv
fdivr
mov
je
fcoms
ljmp
pushf
xor
leave
or
push
lret
dec
cmc
jns
out
push
mov
test
leave
and
push
out
xchg
mov
push
cli
xchg
int3
add
packuswb
fwait
addr16
scas
cmpsb
adc
jns
stc
xchg
arpl
xchg
xchg
imul
pop
pusha
push
and
clc
pop
pop
sbb
adc
push
mov
aad
ficoml
insb
dec
xchg
jne
xchg
stos
outsl
mov
cmp
js
jecxz
cmp
fildll
sub
mov
add
cmpsl
xchg
cmp
popa
in
notl
mov
mov
xchg
sbb
sbb
push
jp
cltd
sbb
insl
dec
dec
mov
pop
cmp
jecxz
pop
mov
pop
dec
fsubp
push
xor
push
mov
cmp
std
mov
cmpps
dec
fisttpl
dec
mov
push
xchg
sbb
imul
inc
cmp
inc
sub
inc
mov
imul
outsl
and
fsubrs
in
xchg
loope
shrl
ds
push
cld
enter
cmpl
ja
pop
fdivrl
popf
js
lock
inc
cmp
mov
scas
sbb
scas
xchg
xchg
sub
mov
stos
clc
scas
out
dec
lahf
movsl
aaa
lcall
sub
jmp
cs
dec
jp
sub
addr16
inc
aaa
add
mov
xor
stc
imull
mov
fldenv
clc
mov
fistl
test
sub
stc
mov
push
dec
dec
sarb
and
push
je
push
into
inc
insl
or
pop
cmpsl
rclb
mov
jno
gs
sahf
sbb
pop
cld
mov
addb
or
movsl
mov
test
hlt
movsl
ja
fcoms
xor
adc
mov
push
adc
pop
xchg
fsts
cs
addr16
xchg
or
je
frstor
negb
cmpsb
addr16
pop
push
and
mov
mov
jne
xchg
jno
loopne
pop
push
cmp
jg
dec
jns
sbb
or
ds
cmp
sub
inc
xchg
pop
cmp
addr16
pop
pop
pop
mov
rol
or
pop
push
leave
testb
push
aam
fdivrs
insl
cs
sbb
xchg
xor
rol
fsubr
cmp
fwait
mov
xor
sub
inc
jl
jbe
loopne
jnp
cmp
and
leave
mov
call
sbb
mov
daa
dec
sarl
push
xor
shl
sbb
cmp
cmp
jl
jae
lret
je
push
mov
mull
es
std
daa
pop
dec
sbb
pop
psrlq
leave
out
push
mov
pop
ljmp
mov
xchg
jmp
outsl
and
add
inc
mov
lcall
stos
movsb
in
or
sbb
mov
xchg
mov
inc
cmovne
xchg
xor
push
pop
ficoml
stos
fbld
lret
mov
or
sti
jns
dec
in
in
fwait
ljmp
out
xchg
arpl
cmpsb
xor
xor
dec
sahf
push
scas
mov
repz
xchg
adc
out
add
lcall
sbb
and
cmp
dec
xchg
inc
lcall
cmp
cmp
cmp
mov
andl
xorw
fsts
gs
lahf
mov
stc
push
imul
fildll
int3
aaa
and
pop
imul
mov
pop
inc
adc
sbb
inc
add
jl
shll
sahf
cmp
nopl
pop
repz
out
lret
jle
adc
xor
repz
movb
out
addb
mov
jno
incb
in
getsec
mov
imul
sub
sbb
push
mov
outsl
sub
icebp
mov
jge
lods
fisttps
cmp
pavgw
xchg
fcomps
mov
xchg
rcrl
out
repnz
imul
outsl
and
lahf
sub
and
mov
loopne
xchg
and
xor
jb
and
lret
push
jns
jle
lods
add
sub
mov
mov
and
dec
xchg
mov
jae
mov
es
ret
div
or
je
dec
ret
aas
push
cld
mov
call
xor
popa
jg
rclb
mov
pop
je
aas
jnp
and
pop
nop
out
jle
pop
xchg
pop
loope
pop
mov
out
mov
lcall
mov
pop
push
xchg
in
pop
xchg
outsl
imul
jecxz
testl
out
test
sub
cwtl
std
xor
loope
sub
ss
call
xchg
adc
mov
pop
lods
or
push
repz
mov
pop
out
mov
arpl
aam
add
push
fadd
mov
mov
fstpt
jecxz
call
jo
repz
dec
movsl
repz
jns
push
add
cmp
fcomps
xor
out
jp
xchg
pop
stos
mov
cmp
mov
xorl
dec
icebp
and
and
stos
scas
sub
fisttpl
outsl
push
cmp
data16
dec
pop
lock
sbb
cld
mov
pop
or
fcmove
sahf
dec
sar
in
psllq
pop
jnp
int3
cwtl
cs
mov
inc
iret
mov
jnp
dec
gs
mov
sbb
pop
xchg
inc
arpl
adc
insb
jne
sub
int
push
push
push
mov
test
or
adc
cwtl
into
adc
ds
stc
arpl
add
xchg
inc
addr16
bound
cmpsl
xlat
lret
mov
cmp
push
mov
pop
in
xchg
push
jmp
add
lods
mul
mov
mov
xchg
out
das
out
lods
push
mov
call
out
adc
jp
sub
push
shr
jnp
mov
shrb
sub
scas
mov
lods
int
sarb
mov
inc
int
movsl
cmpl
pop
int
push
aam
addr16
xor
pop
dec
push
insl
jl
cltd
mov
inc
loope
push
cmp
pop
loope
jmp
sub
test
inc
jmp
xor
out
iret
jnp
add
call
pop
lods
psllw
aas
xor
dec
fimuls
das
sub
mov
mov
repz
pop
sarl
jl
sti
cmp
stc
idiv
insb
lahf
and
inc
int
or
scas
xadd
loopne
fildll
sbb
sub
add
pop
dec
and
stc
scas
jnp
sbb
and
clc
fs
push
xor
fs
push
jge
out
push
jnp
imul
jg
pop
sbb
sbb
imul
xor
add
rcl
fnsave
xchg
outsl
pop
fdivr
sub
mov
jne
out
js
js
pop
sbb
push
scas
cmpxchg8b
iret
xorb
pushf
cmp
js
add
lret
fstp
pop
sbb
push
lock
in
jmp
and
sbb
les
cltd
leave
mov
lock
xor
sub
sub
dec
out
popa
jns
dec
insb
xchg
push
cmc
cmp
sbb
add
outsl
scas
into
adc
or
push
pop
movsl
or
fsubrl
pop
jmp
sarb
and
ljmp
xor
pop
mov
cmp
dec
test
cld
lcall
xchg
dec
mov
data16
sbb
fcoml
mov
daa
pushf
jmp
sub
lock
push
ds
jge
adc
lret
dec
out
bnd
jp
fcmovne
gs
insb
cmp
sbb
mov
and
outsl
sbb
outsl
aaa
mov
or
std
mov
scas
clc
addr16
outsl
jl
stc
insb
outsl
test
mov
mov
in
mov
sbb
shl
loopne
stc
jbe
jae
hlt
cmp
sbb
lcall
push
add
sbb
out
mov
xlat
gs
mov
mov
xor
sbb
sbb
jbe
sub
push
hlt
das
fsubs
pop
cmpsl
test
imul
into
cmp
cmp
gs
xor
sub
mov
and
pop
movsl
js
fsin
mov
xchg
pusha
pop
xor
lcall
iret
popf
fsubrs
adc
in
pop
jl
mov
ljmp
icebp
pop
add
loope
dec
icebp
and
lahf
leave
mov
or
jge
inc
jmp
bound
fcmovnu
mov
pop
mov
dec
sbb
sub
sbb
or
pop
sbb
out
mov
sbb
pop
push
xchg
lock
pop
push
xor
pusha
sbb
das
sub
add
sbb
divb
fadd
mov
jnp
psubsb
push
loop
outsl
in
mov
and
jb
xchg
imul
jecxz
sub
cld
daa
sysret
mov
push
pop
jb
push
cmpsl
loop
scas
cmp
mov
andb
pushf
sub
imul
pop
push
aam
xor
insb
je
lock
cmpsb
adc
pop
testl
out
popf
mov
push
imulb
test
imul
mov
jns
mov
fisttpll
call
push
cmp
pop
inc
jl
mov
mov
push
inc
jo
sbb
sub
cld
js
sbb
cmpsl
js
jns
scas
push
sbb
dec
mov
es
idivb
inc
push
adc
test
iret
push
sub
mov
lcall
popa
loopne
mov
mov
mov
repnz
pop
and
dec
fisubrl
sub
xor
jmp
ds
dec
lods
cmp
fstl
fcompl
daa
add
sbb
or
inc
test
cmc
bound
jnp
push
or
or
cmp
sbb
insb
pop
adc
push
dec
pop
mov
lret
xor
iret
jecxz
mov
push
repz
std
hlt
ljmp
sbb
inc
into
jo
outsl
pop
call
das
into
dec
gs
mulb
sub
dec
dec
ja
or
loopne
add
sahf
rolb
js
int3
or
pop
filds
sbb
outsl
cmp
dec
ljmp
cli
xor
js
loopne
orl
jecxz
ja
push
or
cmp
pop
push
test
cmp
sbb
sbb
repz
mov
mov
scas
loope
cld
arpl
sahf
and
movsl
ds
xchg
or
mov
sub
mov
mov
fcmovu
pop
ja
movzbl
pop
scas
pushf
pop
imul
mov
cmpsb
sbb
mov
in
out
imul
rclb
push
cmpl
mov
fmull
lahf
aas
push
mov
cmp
inc
add
sub
lret
adcb
lret
in
int
pop
cs
or
sub
xor
movsl
pop
adc
ljmp
pop
mov
or
test
lret
icebp
movsb
inc
in
test
outsl
bound
adcb
in
sub
mov
in
rolb
sti
stos
fs
sahf
stc
jnp
loop
fdivr
in
sub
lahf
ja
inc
jns
sbb
jno
je
or
filds
sbb
in
push
mov
in
orl
aaa
out
test
sarl
jo
daa
es
mov
hlt
xchg
pop
xchg
imul
and
in
cwtl
pop
out
sub
dec
movsl
pop
inc
dec
pop
pop
or
mov
pop
sbb
stos
and
loope
pop
dec
pop
imul
enter
cmp
jl
gs
xor
pusha
fnstcw
cwtl
scas
xchg
in
lea
mov
lds
cld
mov
push
gs
push
cmp
and
xchg
cmpsl
mov
fcoms
fwait
popf
mov
jecxz
arpl
push
inc
xor
movsl
mov
sbb
cmp
xchg
fnstcw
fistps
inc
sbb
push
int
jg
pusha
dec
movsb
test
loopne
fiaddl
je
pop
push
out
mov
jbe
push
test
out
push
sbb
cmpsl
addr16
arpl
dec
mov
ficomps
mov
xchg
repz
cmc
insb
enter
and
mov
hlt
mov
fcmovnbe
arpl
xlat
jmp
xchg
pushf
cs
xchg
shlb
add
ja
mov
cld
cmp
repnz
popf
hlt
aas
and
fisttpl
lcall
outsl
jne
cli
xchg
sbb
out
cmc
mov
pop
in
jecxz
inc
fstpt
cli
or
mov
push
push
xor
je
imul
pop
rolb
popa
stc
and
leave
mov
adc
out
adc
cltd
sbb
in
or
fistl
inc
je
insb
pop
jmp
mov
sub
adc
sub
outsl
bound
push
xor
xchg
out
adc
jl
inc
movsb
fbld
dec
sub
ret
xchg
xor
stos
jg
negl
xlat
pop
jecxz
lods
scas
pop
mov
mov
push
pop
inc
sub
lods
testl
ja
icebp
xchg
cli
mov
aas
daa
cli
xchg
lahf
aaa
je
fwait
insb
stc
leave
xchg
xlat
pushw
rcll
imul
out
fstl
movsb
push
adc
add
into
jg
test
ret
adc
sbb
filds
gs
fstpl
xchg
ljmp
outsl
mov
mov
or
xor
mov
fs
mov
cwtl
xchg
icebp
sub
cmpb
pop
cltd
mov
in
adc
fstps
clc
fdivr
ret
icebp
cli
loope
cwtl
cmp
or
addr16
jae
adc
or
cmp
jbe
push
imul
subl
mov
fldcw
outsl
xchg
fmuls
push
fld
add
aaa
jbe
xchg
sub
xchg
gs
stc
sbbb
xchg
jecxz
fldpi
out
xchg
push
repz
in
sbb
xor
lcall
xchg
push
pop
loop
and
xchg
and
mov
jne
adc
hlt
loop
lock
pushf
gs
sub
jno
rolb
pop
shrl
adc
jl
or
sbb
xor
gs
loope
and
adc
es
dec
daa
in
cmpsl
aaa
std
push
pop
mov
sahf
adc
in
adc
loopne
addr16
faddl
adc
sbb
ret
outsb
insl
and
adc
cmp
cmp
nopl
pop
push
cmp
and
lret
mov
in
out
divl
addr16
sub
test
jmp
jmp
stos
arpl
jg
loope
and
daa
push
lcall
pop
or
frstor
int
sti
sbb
mov
push
push
pop
decb
or
scas
orl
mov
xor
or
sbb
xchg
sbb
aam
rclb
jae
sahf
in
jl
lahf
sub
jb
addr16
lock
fmuls
stc
cld
sbb
out
fdivs
ljmp
xchg
push
shl
insb
popa
xor
sahf
rclb
pop
push
scas
sbb
mov
mov
stos
gs
inc
clc
and
cmp
movsb
jg
cmp
jge
mov
imul
xchg
das
jl
dec
stos
data16
mov
mov
sub
jle
jmp
jns
ds
xlat
dec
gs
lods
dec
cld
jge
jmp
scas
sbb
gs
mov
repz
loopne
pop
mov
push
mov
addr16
rolb
push
outsb
push
xchg
pop
push
mov
lret
pop
push
es
cld
into
fwait
popa
mov
xor
shrl
pushf
jb
mov
faddl
imull
add
inc
arpl
sti
pop
imul
mov
xor
sbb
int
inc
out
push
fstps
mov
pop
test
cmpl
pushf
stc
adc
repz
addr16
jmp
lahf
pop
sub
sbb
mov
mov
outsl
lods
push
push
loope
outsb
dec
orb
ljmp
dec
mov
popf
movsl
jo
push
pushf
inc
daa
cmp
push
sbb
daa
xchg
js
xchg
push
jnp
mov
mov
pop
inc
dec
xchg
es
pop
sbb
jnp
outsl
xor
cmp
into
dec
fcmovne
lret
xchg
mov
push
js
mov
hlt
jg
ficoml
call
adc
cmp
aad
fwait
mov
ret
push
aaa
jmp
jecxz
incb
cmp
insb
push
testb
xchg
filds
in
mov
dec
jg
mov
cmc
testl
ja
mov
xchg
xor
scas
push
adc
pop
pusha
sbb
push
pop
jo
lds
push
repnz
sbb
mov
push
mov
pop
or
push
fsts
push
push
test
inc
add
int3
aaa
and
mov
pop
push
pop
mov
dec
mov
sub
ss
inc
add
and
and
ret
jge
mov
sbb
push
jae
push
jge
addr16
loope
mov
fsubl
xchg
mov
out
dec
out
pop
icebp
aas
sub
scas
in
fstpl
lret
and
lret
daa
jge
push
xchg
pop
mov
clc
out
fstpt
out
icebp
adc
sbb
in
loopne
mov
shrb
mov
je
gs
mov
sub
xor
push
inc
aas
cmpsb
testl
add
mov
jnp
and
nop
fdivrl
xorb
stos
aas
or
test
lock
and
pop
loop
fnstcw
ret
rcpps
xor
lods
stos
ja
sub
mov
add
fisubrl
js
stc
call
test
pushf
cltd
sub
cmpsl
sbb
xchg
fldt
jmp
icebp
and
movsb
scas
mov
jmp
mov
lcall
insb
sbb
repz
pushl
ja
push
pop
add
push
scas
mov
mov
mov
add
xor
clc
in
pushf
leave
imul
pop
jb
ret
xor
xor
pop
cmp
inc
addb
gs
adc
mov
or
inc
cmp
int3
push
inc
in
mov
lock
inc
call
adc
out
xchg
pop
sbb
adc
adc
jnp
xchg
loopne
arpl
xchg
cmpsb
push
jae
xor
dec
std
cmpsl
lods
cmp
adc
push
fdivs
xor
imul
sub
dec
pop
pop
cmp
aad
mov
jnp
movsl
inc
add
ficoms
fcoml
dec
pop
stos
sub
mov
mov
sub
inc
lods
fcom
inc
jnp
movsb
lock
lret
call
xor
pop
push
push
lea
clc
inc
in
ret
sub
in
xchg
dec
repz
cmp
push
daa
sbb
xchg
cmp
rcrb
sub
cmp
cmp
lods
test
dec
fcoml
jo
out
sti
stos
faddl
jmp
sbb
aaa
push
sub
js
mov
jns
fdivl
or
jno
pop
or
cli
pop
ljmp
mov
sarb
cli
cmpsl
mov
fcomps
xor
out
sbb
into
out
cmpsb
fwait
repnz
sub
dec
out
rcrl
out
jno
dec
addr16
pop
inc
loopne
adc
adc
push
xor
sahf
cwtl
jns
aas
fldcw
icebp
fnstcw
leave
push
and
cli
pop
sbb
cmp
cmpsb
xchg
sub
mov
out
xchg
adc
sub
xchg
cmp
aam
pop
call
or
pop
jge
pushf
adc
addr16
cmpsb
push
jns
inc
out
fucomip
aas
pusha
les
mov
repnz
pop
icebp
js
lock
pop
int3
add
and
addr16
pop
in
imul
pop
fsubrl
adc
fcoml
pop
sti
sarl
jg,pt
aad
dec
xor
dec
out
fs
repz
sti
xchg
fldcw
or
push
sbb
sub
bound
adc
in
lret
ja
outsl
das
fdivr
adc
mov
adc
adcb
push
sbb
loop
movsb
adc
fwait
mov
pop
sahf
jnp
cmpsb
aam
in
lcall
andb
mov
loopne
call
pop
cmpsb
dec
clc
pushf
fsubrs
push
inc
repz
pop
or
imul
leave
int3
jl
sub
cmp
sti
lcall
cli
lods
jb
in
add
dec
cmp
push
test
cmp
shll
bound
ljmp
ret
in
cmp
cmpsb
mov
in
push
sahf
imul
mov
cmp
sbb
or
pop
xor
fsubl
push
insl
xor
xchg
push
imul
cmpsb
leave
out
jge
cld
fsubrl
push
mov
xchg
sbb
mov
xchg
outsb
ret
out
fistpll
lret
sub
sub
sbb
daa
mov
add
aaa
dec
sbb
in
testb
insl
loope
out
push
push
cld
stos
xchg
in
insl
movsl
les
push
sahf
jp
fidivl
and
call
mov
jb
shll
push
fsubr
clc
ljmp
jne
xlat
pop
in
cli
mov
and
rcrl
je
pop
mov
inc
push
in
pop
es
mov
gs
xchg
cltd
add
rcl
sbb
addr16
daa
mov
mov
xor
clc
bound
cmpsb
nop
test
fisubl
adc
dec
mov
sahf
nop
jb
repnz
clc
int
inc
cwtl
shlb
mov
jg
or
pop
sub
and
pop
or
adc
lret
push
jle
jbe
add
es
xor
imul
test
imul
imul
loopne
mov
cmpl
out
pop
es
js
lds
jp
ds
mov
arpl
cli
sbb
movsl
aas
lcall
inc
sahf
add
xlat
push
mov
ja
je
jmp
pop
in
mov
lock
cli
adc
test
jle
fadd
inc
xchg
fucomi
jle
outsb
shrl
call
mov
cmpsl
push
mov
int
stc
sbbb
sub
xchg
aaa
fcmovne
movsl
sahf
adc
subl
sbb
dec
cmp
dec
xor
call
push
sub
inc
js
mov
dec
test
aas
sbb
sti
addr16
fs
leave
pop
push
cli
mov
push
aas
jp
js
or
cmp
jmp
ret
xor
arpl
mov
clc
adc
pop
lret
out
aaa
icebp
stos
lock
hlt
pop
bound
int
call
cmpsl
dec
sub
xchg
jmp
sar
scas
test
in
imul
push
sti
fs
lods
fcomp
leave
aas
setno
ja
pop
movsl
sbb
decb
aam
xorb
mov
xor
jne
sbb
pop
gs
setns
or
jno
arpl
pusha
in
dec
add
aaa
push
pop
sub
push
fistps
or
pop
lahf
loopne
and
fistpl
outsl
out
and
sbb
mov
dec
call
fistpll
push
inc
and
cwtl
fbld
cmp
or
in
gs
jae
xchg
lea
data16
or
pop
jge
xchg
mov
js
pop
pop
aas
gs
in
push
push
and
push
pushf
add
push
inc
add
push
lods
or
enter
stos
jge
pop
scas
stc
sub
mov
mov
imul
sub
or
cmp
dec
lahf
aaa
and
pop
icebp
mov
mov
jg
lcall
lds
movsl
lahf
mov
mov
xchg
mov
lret
xchg
neg
mov
dec
imul
subb
popf
je
dec
call
inc
push
shl
rclb
stc
lcall
popa
cmp
rcrb
cmpsb
sub
shlb
adc
icebp
xchg
fcomi
loop
mov
fistps
jge,pn
fs
sbb
clc
insb
daa
jne
cmp
add
das
or
xchg
faddl
lret
pop
mov
push
sbb
mov
daa
and
pop
xchg
sbb
adc
test
rclb
xchg
pop
pop
mov
fidivl
cmp
repz
fdivl
mov
inc
les
enter
adc
test
dec
sbb
mul
mov
mov
leave
push
out
jne
stos
mov
mov
sarl
cmp
pop
fwait
popf
jmp
fcoml
inc
stos
push
repz
ficoms
jmp
pop
jne
and
fs
ficompl
mov
test
and
aaa
shrb
mov
cmp
or
or
addr16
or
sub
inc
mov
push
stos
imul
cmp
jle
jne
movsl
inc
js
pop
testl
aaa
pop
sub
or
jns
pop
clc
sbb
mov
pop
push
mov
pop
pop
call
aas
xchg
out
inc
imul
mov
sub
xor
adc
lock
repz
cmp
xchg
test
xchg
and
adc
into
xor
mov
mov
push
test
jmp
xchg
xor
and
fisttps
sub
addr16
pop
lret
inc
fistpl
xchg
and
notl
int3
mov
push
mov
out
les
pop
dec
cli
arpl
jne
in
or
mov
fcomps
hlt
hlt
addr16
arpl
ljmp
pusha
mov
pushl
loopne
iret
dec
jle
push
xchg
sbb
push
iret
inc
xor
es
jb
xor
jne
mov
pop
rcrb
push
sti
pushf
jecxz
jnp
repz
std
xchg
ljmp
lret
sbbl
or
pop
sub
sub
pop
cmp
dec
jne
sti
popf
out
add
cmp
push
dec
stc
sbb
lods
sub
popf
adc
dec
cmp
adc
in
movsb
enter
sti
loopne
sub
xor
dec
and
or
mov
das
sub
pop
add
sar
ljmp
inc
dec
inc
jecxz
jb,pn
loopne
bound
ss
adc
subl
out
aas
adc
inc
jne
inc
pop
xchg
and
scas
jg
loope
pusha
mov
in
jns
add
sbb
xchg
int3
movsl
and
pop
nop
push
push
push
pop
push
jnp
sub
cmp
push
pop
fldpi
push
cwtl
daa
push
popf
lcall
jne
adc
jo
pop
fnstsw
xchg
jbe
testb
daa
aas
mov
jb
dec
sbb
xchg
loope
pop
negl
fcmovbe
or
pop
je
jl
xchg
or
or
leave
call
or
ds
cmp
jg
roll
sub
sub
pop
test
xor
lret
jno
sub
scas
rolb
push
push
scas
cld
mov
mov
jb
cmpb
ret
in
ds
clc
cli
xchg
popa
fsubrs
cltd
stc
sub
cs
sub
cmp
es
call
in
dec
ljmp
jne
jge
push
mov
fwait
pop
xor
push
fcomps
out
sub
clc
jecxz
or
or
shr
ljmp
movsl
call
lock
xchg
sbb
arpl
pop
and
xchg
ds
jnp
push
dec
negb
adc
xchg
and
xchg
fucomi
push
mov
arpl
add
call
insl
sub
fidivrl
cmp
cmp
cmp
cmp
in
pop
pop
xor
inc
fcoms
and
jmp
fsubrl
mov
cli
addr16
jmp
pop
outsl
jno
insl
jo
mov
clc
and
xor
outsb
stos
je
mov
inc
lcall
jnp
imul
adc
jg
addr16
mov
mov
pop
push
push
aaa
loop
xor
xorl
cmp
jp
adc
rclb
lds
loopne
call
sbb
ficoml
mov
xor
push
or
lods
inc
pop
test
orl
and
fcom
pop
xchg
cs
mov
sarl
cmp
xchg
xchg
jns
pop
bound
stos
pushf
in
mov
cmp
cwtl
in
pop
stos
mov
cmp
push
fisttps
xor
fadds
repnz
jl
or
xchg
push
cmpsl
out
sbb
das
scas
cmpsb
cmp
jb
sti
rcr
cs
outsl
nop
outsb
imul
scas
sti
push
int
push
in
add
push
jbe
jle
mov
fildll
push
add
jae
iret
fucom
adc
sbb
stc
fcmovnb
and
or
xchg
pop
push
scas
loopne
loopne
test
pop
loopne
pop
inc
leave
push
jae
sbb
cwtl
cmc
insb
fists
add
lahf
xchg
pop
push
scas
xor
sbb
cli
pop
sub
push
test
inc
ret
cltd
sub
fcomp
jg
pop
aad
test
aas
jmp
ret
mov
loope
pusha
in
in
jne
cmp
rcr
adc
das
inc
cmp
lret
pop
pop
lret
add
call
stos
adc
pop
mov
pop
fwait
sbb
andl
xor
leave
fstp
mov
shrl
sbb
xchg
mov
fsubrl
sbb
xchg
sub
inc
in
xchg
movsl
addr16
test
or
daa
mov
pop
repz
push
gs
outsl
inc
mov
cmp
mov
xchg
xchg
int3
xchg
jl
mov
fildll
addr16
cmp
mov
sub
jecxz
out
mov
sub
cmp
sbb
jmp
sbb
jge
mov
out
xchg
lret
mov
stc
xchg
bound
cmp
in
mov
out
ret
clc
cs
or
push
test
inc
mov
stos
push
inc
outsl
sbb
push
pop
and
repz
fisttps
test
dec
pop
cwtl
cmp
sbbl
je
xor
and
leave
movsl
jbe
fdivr
xchg
int3
push
fstpl
imul
fsubrs
lcall
fimuls
push
mov
dec
lods
out
cmpsb
arpl
aam
mov
int3
insb
push
pusha
das
push
sbb
push
pop
sbb
fcomp
fsubs
jbe
call
pop
pop
xor
push
fcoml
mov
pop
mov
xchg
mov
inc
test
xchg
ljmp
loope
addr16
pop
cmp
mov
and
sarl
or
add
mov
fsubl
loope
push
push
mov
pop
jmp
jbe
and
test
daa
ja
idivb
fsubp
mull
aad
loop
fdiv
mov
sub
insb
jl
or
repz
push
pushf
fimull
lret
inc
rcrl
daa
loopne
rcrb
pop
sub
mov
or
cld
cmp
jge
jno
push
dec
mov
pop
inc
xchg
xor
cmp
rcrb
mov
dec
push
ds
fsubl
fildl
psubd
repz
dec
dec
push
sbb
lock
push
into
add
data16
subb
les
sbb
pop
pop
cltd
sahf
pop
rorb
xchg
mov
xchg
outsl
mov
hlt
and
dec
pushf
fidivrl
cmp
mov
cmpsb
ljmp
xchg
lret
push
cmpsb
pusha
or
lods
cmp
jnp
bound
push
addr16
stc
popa
jmp
stc
push
jno
inc
pushf
adc
fstsw
pusha
mov
dec
fisttpl
fisubrs
fistpl
and
addr16
lahf
pusha
inc
mov
mov
call
in
rorl
loope
push
mov
pop
jo
push
sti
xor
insl
lock
out
lds
mov
dec
jnp
xchg
dec
pop
sahf
pop
sub
fldenv
repnz
sbb
lds
leave
cmc
push
mov
mov
xchg
and
mov
shlb
mov
or
ficoms
mov
sub
xor
les
sbb
fisttpl
mov
xchg
dec
push
inc
xor
mov
test
inc
repz
push
mov
or
imul
outsl
dec
xchg
add
pop
jmp
jbe
lcall
push
fildl
call
cmp
sbb
inc
mov
xchg
mov
add
dec
inc
cmpb
negb
mov
add
movsb
pop
pop
sbb
out
mov
movsl
jnp
fcoms
repnz
orl
and
xchg
sbb
jmp
fsubs
insb
rcl
jg
call
addr16
adc
test
mov
mov
stos
xchg
sti
dec
pop
xchg
push
scas
pop
repz
jbe
in
pmulhw
pop
arpl
xchg
xchg
jp
jnp
inc
icebp
scas
pop
pop
shll
daa
pusha
pop
or
pop
sub
cld
test
into
in
call
dec
aam
lock
sahf
jmp
mov
mov
outsl
pop
mov
scas
add
dec
push
lcall
hlt
jo
mov
ficompl
mov
repnz
shrl
cmpsl
outsl
movsb
mov
mov
jo
ficompl
testb
jo
adc
sbb
popa
dec
jle
jl
jp
lret
mov
inc
notb
dec
jge
inc
pop
jecxz
xchg
movb
adc
cmp
imul
leave
or
inc
or
pop
xchg
loope
adc
sub
fwait
pop
es
cltd
insl
fsubrs
sti
dec
xchg
lcall
sti
cmpsb
pop
pop
inc
gs
sub
dec
arpl
aad
loopne
pop
imul
xchg
pop
and
or
test
sbb
pop
in
orb
movsb
movsb
loopne
aaa
fstpt
out
popa
stos
pop
dec
pop
loopne
insb
in
xchg
pusha
sti
cmp
pop
jne
adc
fwait
pop
jle
sub
mov
sub
and
popf
push
push
out
lea
test
dec
mov
aam
xor
popf
and
jns
dec
sbb
lret
and
xor
dec
repz
pushf
scas
jns
cmp
mov
aaa
or
fcoml
addr16
fistpl
add
daa
cli
pop
sbb
inc
out
lock
pop
sbbb
std
cwtl
cs
pop
xorl
out
adc
or
cwtl
call
loope
pop
cwtl
sbb
loopne
outsl
mov
xor
or
stos
ret
pop
xchg
and
cltd
inc
jae
jmp
in
into
cmc
mov
push
xchg
jmp
ficoms
pusha
jge
or
roll
js
xor
pusha
mov
lods
xor
pop
imul
xchg
leave
push
pop
cmp
jle
and
repnz
in
cli
lock
cmp
gs
pop
push
stc
cmpsb
addr16
std
adc
fdivrs
sbb
aaa
jmp
shl
mov
add
dec
push
pop
fdivrp
call
das
out
cld
call
cmp
fnstsw
std
je
js
pop
into
or
sbb
jmp
addr16
das
addr16
rcrl
lock
push
jo
cmp
or
ljmp
jbe
fldcw
lds
mov
sub
pop
add
sbb
mov
pop
sbb
sbb
sbb
ja
addr16
std
in
push
and
imul
add
mov
jns
pop
fstp
cmp
cltd
pusha
push
fsts
addr16
sbb
sbb
popa
outsl
or
lcall
pop
push
fnstcw
lock
jg
ja
pop
ret
jnp
pop
cli
mulb
outsl
outsb
add
and
sub
fistps
mov
std
cmpsl
pop
and
mov
lea
lock
aam
test
je
and
loope
pop
fistps
cmp
and
jg
lahf
jmp
xchg
gs
xchg
fs
cmp
repz
add
and
sbb
pop
call
sub
inc
cmp
dec
inc
dec
sbb
push
push
imul
into
fldcw
mov
jae
jae
sbb
mov
fmull
adcb
jnp
or
fcoms
loopne
test
insb
inc
popa
mov
jno
loope
xchg
pop
lock
data16
pop
pop
frstor
ljmp
add
lcall
das
loopne
fldl
cld
popa
mov
jne
mov
gs
jae
insb
fcoml
arpl
or
andb
sbb
lahf
sbb
adc
hlt
cmp
fimull
add
stc
xor
popf
xlat
or
addr16
and
in
jp
fcmovbe
cld
cmp
loopne
out
mov
inc
sbb
lds
fwait
sbb
lea
xchg
jecxz
fstps
xchg
xadd
mov
jecxz
inc
cmp
cmpsb
xchg
add
jnp
repnz
inc
mov
data16
xor
cmc
mov
or
dec
testb
pusha
mov
xchg
fsts
xor
inc
out
test
and
jno
jg
dec
sbb
cmp
adc
cmp
xor
mov
sbb
push
outsl
pop
loop
sbb
sub
in
outsl
cltd
cs
shl
pop
adc
mov
in
sub
iret
shl
add
loope
sbb
imul
pop
fdivrs
push
jo
sti
ficomps
cltd
jge
jecxz
popf
mov
imul
testl
xchg
sti
testl
imul
xchg
dec
push
jns
lods
inc
pandn
xchg
faddl
imul
pop
scas
dec
inc
push
mov
fs
lahf
adc
ja
xchg
pop
mov
inc
xor
addr16
mov
cmp
lods
out
ljmp
dec
pop
fisubs
test
xchg
sarl
sahf
mov
int3
sub
push
stos
push
xor
fnstcw
xchg
aad
xchg
or
mov
mov
lea
sub
fldt
pusha
aaa
sbb
outsl
and
and
xchg
pop
idiv
fstps
cmpsl
mov
pop
mov
cmpsb
aaa
cwtl
fidivl
flds
sbb
jns
jae
sub
pusha
outsb
stc
psubusw
sbb
mov
add
fwait
cmp
sub
gs
ljmp
cmc
pop
jg
cli
jecxz
sbb
cli
fdivrl
fldt
fldl
into
js
addb
jecxz
xchg
or
mov
insl
jecxz
push
xchg
pop
add
cli
cmp
mov
cwtl
sbb
sub
push
jnp
into
insb
flds
out
and
shrl
popa
dec
popl
fnsave
into
lea
xchg
push
jl
fs
testb
fwait
jnp
enter
inc
cmp
xchg
lret
push
add
mov
cltd
gs
mov
pop
cmc
jns
fcmovnb
dec
mov
push
or
xor
dec
dec
xor
dec
sbb
mov
pop
gs
mov
mov
out
inc
mov
add
fildll
cmp
mov
sbb
lret
clc
scas
push
arpl
in
and
jae
fdivl
or
xchg
cmpsb
push
cs
inc
jnp
cmp
pop
pop
jnp
ucomiss
cli
mov
fisubl
pop
into
xor
cld
scas
mov
cmpb
mov
sbb
in
pop
inc
sahf
negl
jl
and
into
mov
xor
outsl
iret
inc
mov
out
or
aaa
sbb
and
lock
rcr
add
sbb
fmull
mov
insb
cltd
call
lret
cld
arpl
sbb
test
insl
and
pusha
and
std
repz
inc
mov
dec
mov
xchg
lcall
clc
jl
xchg
inc
xchg
test
pop
xchg
xchg
filds
xchg
cmpsl
stc
and
clc
arpl
rorl
mov
fdivs
lcall
mov
mov
test
shlb
jl
push
jns
enter
in
je
iret
outsl
xchg
pop
cmpsb
imul
lcall
jbe
cli
fnstenv
ret
scas
jo
scas
les
xchg
cmp
lahf
lahf
lcall
lret
ljmp
sbb
jne
repnz
addr16
cmp
sub
xchg
bnd
es
xchg
mov
popa
clc
mov
out
pop
cmp
dec
xor
push
in
scas
and
sbb
sub
repnz
jo
push
xor
inc
mov
sbb
push
mov
pusha
mov
scas
adc
push
inc
inc
mov
addl
or
clc
outsb
aas
arpl
mov
pop
ljmp
jmp
sbb
add
or
xchg
push
movsb
loopne
adc
mov
insl
repz
imul
lret
in
pop
cwtl
push
dec
xchg
stc
adc
or
and
cs
jge
test
jno
pop
das
jecxz
jno
push
inc
shlb
mov
pop
ret
push
fsubr
outsb
sbb
sub
jns
insl
mov
add
cltd
xchg
xchg
imul
mov
pop
mov
les
cwtl
adcl
aaa
adc
adc
mov
cmp
or
cs
movsb
inc
addr16
inc
push
xor
jecxz
and
sbb
jae
jns
daa
inc
addr16
and
sahf
sub
pop
lds
lds
std
jo
pop
and
jno
jb
enter
out
sub
in
fstpl
movb
es
mov
sahf
popf
pop
fmulp
push
cmpsb
and
roll
fnstcw
test
jg
push
dec
mov
int3
mov
rcr
scas
loopne
push
push
into
and
jno
enter
xchg
sbb
add
mov
mov
aaa
daa
cmpsb
div
pushf
out
xlat
pop
pop
pop
arpl
dec
push
je
das
push
shl
ret
mov
dec
leave
cs
xchg
push
xchg
arpl
call
push
sub
pop
mov
aas
cwtl
cmp
pop
push
sbb
aad
call
fisubl
mov
dec
shr
aam
out
mov
cmp
mov
add
xchg
mov
fstl
cmc
dec
gs
jne
or
imul
pop
push
nop
js
sub
fisubrl
jns
dec
sti
ds
enter
or
sbb
test
jbe
and
pop
mov
cltd
add
xlat
push
fwait
jne
push
jns
xchg
stos
pop
divb
jne
mov
push
out
aaa
out
fs
sub
fnstcw
push
add
sub
or
push
lock
dec
xchg
bound
cmp
scas
sbb
mov
push
and
mov
ds
test
jnp
sbb
sarb
fnstsw
outsb
test
sub
movsl
cmp
mov
mov
xchg
cli
add
xchg
pop
call
jb
pop
cmp
out
test
push
mov
out
jmp
sti
dec
loopne
cs
mov
inc
pop
inc
or
xchg
sub
std
dec
dec
test
jl
sub
and
lods
fsubrl
sbb
xchg
std
adc
enter
popf
xor
inc
or
ljmp
imul
lea
das
or
imul
mov
lods
lret
rorl
sarl
ja
or
shlb
xchg
bound
pop
enter
cmp
in
cmp
sbb
popl
ljmp
shr
push
addr16
mov
pop
stos
inc
push
cmc
push
lahf
pop
arpl
mov
push
mov
popf
je
sahf
imul
ljmp
pop
aas
mov
fisubrl
fld
mov
jne
lock
out
cmp
fldenv
mov
inc
mov
cwtl
aam
fdivr
js
push
push
bound
mov
adc
ljmp
insb
mov
mov
mov
push
bnd
test
cmp
in
lahf
clc
lock
cmp
jbe
out
or
lea
fstps
mov
xor
in
pushf
mov
movsb
fcoml
xor
fistpl
es
bound
push
insl
sbb
pop
cmp
sub
inc
push
cmp
cmp
insb
addr16
jb
ljmp
jnp
pushf
fdivp
mov
sti
sbb
push
fdivr
jmp
ficomps
in
mov
aaa
jmp
push
xor
ljmp
mov
cwtl
fcoms
in
repz
fisubs
daa
pushf
adc
jmp
imul
mov
out
add
mov
mov
fmuls
push
xchg
pop
adc
fsubr
fsubrp
sbb
jle
pop
push
or
sbb
loope
faddp
clc
jnp
cmp
mov
fldt
add
adc
lock
or
mov
fsubrp
jo
push
xchg
nopl
cmp
pop
in
mov
push
or
cmc
pop
add
call
clc
pop
cmp
loop
pop
and
lret
add
data16
inc
adc
and
sarb
ret
mov
jmp
dec
mov
outsl
adc
pushaw
rclb
jecxz
pop
jae
notb
sbb
lahf
inc
pop
call
sbb
je
fisubl
imul
in
andb
in
hlt
adc
loope
jo
aas
sbb
jmp
xchg
ficoml
fsubr
jo
mov
pop
pop
dec
test
mov
enter
arpl
lock
cmp
rorb
push
into
fistpl
jae
or
push
and
bound
sbb
sti
popf
pop
bound
dec
cmp
xchg
jb
sub
std
mov
jo
pop
addr16
stc
movsbl
in
jnp
push
loop
loopne
movsl
daa
mov
clc
sub
call
pop
cmc
sub
fistps
sub
sbb
xchg
pop
push
jne
out
adc
sbb
lds
movsl
push
inc
sbbl
inc
cmp
xchg
add
or
add
lcall
mov
xchg
pop
cmp
push
mov
jno
add
test
push
add
mov
sub
fwait
je
or
insb
les
sahf
inc
pop
lods
test
int3
mov
push
shr
add
dec
or
fistps
and
xchg
sarl
and
out
jg
imul
sbb
add
movsl
push
cmc
fcomi
addr16
and
loop
je
and
cmp
fistps
leave
out
pop
or
add
push
cmp
pop
loop
wrmsr
jbe
pop
sbb
rcr
syscall
out
inc
daa
movb
pop
outsl
xor
lcall
popf
dec
xchg
sbb
jne,pn
loopne
adc
or
fisubs
daa
and
and
add
outsl
mov
in
mov
addr16
mov
scas
fmul
sbb
mov
jo
cltd
jmp
lock
or
andb
mov
std
inc
pop
jp
frstor
jo
fdivs
lock
fadds
fsubs
stc
popa
or
push
pop
ja
pushf
push
jo
push
bound
dec
fnstcw
xchg
out
or
and
cld
movsb
loope
mov
outsl
cmc
jo
adc
fstl
jo
je
inc
sbb
loope
mov
jg
loope
adc
mov
add
and
pop
xor
pop
popf
mov
adc
fdivrp
addr16
loope
pop
jo
cld
addr16
sbb
loope
mov
jg
loope
xchg
call
test
jmp
jne
movsl
movsl
mov
dec
push
mov
gs
pop
setge
and
adc
mov
mov
out
test
and
jmp
arpl
xor
loope
pop
mov
mov
dec
cmp
or
cwtl
xchg
fidivrl
add
loope
pop
jne
push
add
stos
and
adc
and
pop
enter
outsb
cmp
pop
pop
sbbb
je
fsubl
scas
push
les
mov
in
jl
cli
pop
outsb
addr16
insb
pop
fistps
rclb
dec
push
ret
sbb
outsl
pusha
sbb
popa
cmpsb
inc
or
mov
int
ljmp
push
pop
call
popa
adc
mov
imul
or
into
cli
addr16
or
cmp
loope
xchg
jge
pop
clc
fcmovnb
cltd
add
loop
pcmpeqd
jmp
mov
test
or
scas
les
push
and
aad
xorb
or
cwtl
sub
out
add
shl
push
pop
pop
sbb
mov
add
ljmp
repz
int3
inc
nop
inc
fldenv
imul
lock
sbb
mov
mov
mov
ret
popf
sbbb
inc
xor
scas
adc
or
jmp
mov
jbe
scas
sbb
shll
jmp
sbb
push
loope
mov
clc
or
gs
outsl
jne
xor
inc
repz
sbb
mov
into
out
mov
cmpsl
adc
stos
xchg
push
lods
test
sub
xor
sbb
gs
imul
hlt
dec
cmp
sbb
mov
bound
jp
pop
adc
ja
xchg
jne
adc
cmc
imul
imul
cmp
jmp
or
sub
stos
fdivrl
ds
sub
xor
sbb
pop
sub
push
sahf
test
lds
pop
mov
leave
xlat
push
ficompl
mov
pop
pop
mov
outsb
adc
clc
in
data16
adc
add
ss
and
xchg
mov
cmp
pop
outsb
mov
cmp
repz
pop
leave
mov
fwait
add
data16
pop
adcb
sub
mov
imul
sub
jmp
dec
mov
cld
pop
jns
mov
dec
xchg
icebp
pop
or
lahf
call
cli
ficompl
daa
xchg
jns
scas
fbld
ret
mul
pop
mov
adc
lds
addb
sbb
mov
cmp
insb
sti
fnstsw
hlt
cwtl
xchg
pop
out
xchg
outsl
test
jmp
ds
fsubs
jmp
add
fimuls
call
imul
sbb
add
jp
jecxz
or
mov
mov
mov
jecxz
pop
xchg
imul
outsl
lock
and
daa
cmp
mov
leave
in
insl
sbb
pop
test
jbe
pop
mov
arpl
shl
cwtl
adc
imul
push
test
dec
cmpsl
stc
cli
ror
scas
fisubs
fisttps
inc
pop
fldenv
out
clc
mov
pop
sbb
mov
pop
pop
arpl
xchg
push
addr16
pop
lahf
jmp
xchg
repz
movsl
gs
jecxz
xor
dec
cli
xlat
out
int3
stc
xchg
sahf
cltd
addr16
jmp
sub
or
fildll
addr16
push
jp
jecxz
mov
push
setl
jge
ficompl
in
int3
ljmp
loope
pusha
fwait
shll
pop
fcomi
jle
pop
jge
push
sbb
out
int
insb
xor
and
gs
aam
sar
push
insb
bound
fidivl
testb
leave
sub
pusha
cmp
repz
inc
ljmp
cmp
ds
and
sub
bound
sub
push
aad
data16
insb
xchg
fimull
clc
fstps
jns
sbb
mov
xchg
imul
je
addr16
call
xchg
fdivrs
adc
and
jb
inc
pop
jbe
sahf
hlt
insb
fldt
ljmp
call
stc
xor
or
xor
out
std
in
inc
ret
jl
test
jge
test
repz
dec
pop
arpl
mov
mov
push
shrb
push
out
je
and
fcoml
xor
dec
push
xchg
push
mov
popa
mov
mov
inc
je
push
xchg
mov
adc
popa
insb
aas
and
or
pop
incl
cmp
cmpsl
dec
cmp
fidivs
gs
sbb
shlb
call
dec
aam
shll
sbb
or
bound
push
push
repnz
es
pop
popa
stc
sbb
ds
ficomps
imul
fisubs
fsubl
xchg
dec
and
in
pop
icebp
jno
sbb
sub
aaa
sbb
call
mov
in
lahf
inc
out
or
call
xor
mov
dec
es
pop
mov
jne
jmp
cs
loop
mov
je
sub
sbb
adc
xor
sub
lea
pop
push
lcall
sahf
cwtl
sbb
inc
out
mov
cmpsl
jecxz
jbe
jns
cmp
xchg
fldcw
and
dec
mov
or
xor
data16
adc
movsl
out
outsb
jl
or
scas
fsubrl
cmc
ja
out
popf
js
pop
pop
mov
or
jmp
test
inc
pop
jge
cld
pop
mov
dec
push
insl
movsb
inc
jne
imul
out
xchg
pop
lock
jne
jle
dec
out
lods
enter
mov
push
add
dec
adc
aas
pop
call
and
and
jmp
jbe
pop
pop
jne
sahf
or
stos
lret
out
pusha
mov
cmp
jae
inc
movsl
leave
pop
mov
movsl
in
jo
out
pop
ret
push
xchg
sar
mov
out
rolb
in
aam
lret
addr16
xchg
scas
push
stc
ss
addb
sub
xor
aam
out
data16
popf
orb
dec
bound
mov
loop
out
rolb
sub
add
sub
sbb
cmc
ljmp
jae
mov
cltd
xchg
daa
out
lds
pop
mov
dec
out
mov
into
jb
ret
out
lret
ss
mov
jnp
imull
jge,pn
push
movsl
sbb
or
jecxz
gs
leave
ja
mov
stos
push
popa
mov
outsl
inc
imull
and
mov
ror
or
scas
mov
jno
dec
mov
scas
das
test
test
or
xchg
dec
sbb
fdivl
hlt
clc
cwtl
fiadds
out
sbb
lret
adc
xchg
fwait
sbb
mov
cmp
repz
in
loope
jmp
sbb
aaa
sbb
jo
fcomps
pop
imul
sbb
sbb
jg
or
sub
sub
xchg
data16
sub
adc
xor
lods
cmpsb
divl
test
and
or
xorl
sub
pop
dec
dec
sti
pop
stc
out
daa
and
lret
xchg
mov
sbb
pop
and
imul
add
and
xchg
repz
sbb
mov
mov
dec
push
jmp
or
icebp
jbe
xchg
adc
add
fcomp
push
leave
jl
ja
testb
lods
in
out
cmp
stos
addl
push
inc
xchg
adc
push
dec
sbb
xchg
cwtl
scas
mov
xor
mov
out
push
out
dec
scas
ds
shr
cmpsl
xchg
aas
imul
cmp
xorb
pushf
stos
stos
push
add
jb
pop
sub
notl
or
imul
dec
sub
outsl
lret
hlt
sub
test
xor
jo
into
aas
pop
sbb
shlb
rcr
cli
test
cmp
addr16
pop
out
outsl
cmc
push
fisubs
sub
addr16
stos
mov
fcmovne
leave
mov
cmp
div
add
push
addr16
lods
push
popa
insb
push
aaa
mov
pop
cmp
in
stc
mov
mov
jb
std
out
js
imull
sub
shll
clc
jge
ljmp
ret
cmc
xchg
push
adc
pop
and
push
adc
or
mov
fnstcw
sub
loopne
cmp
pop
fmuls
aam
push
inc
call
in
push
jo
dec
addr16
pop
sbb
ret
lock
sbb
fsubs
inc
push
lock
mov
ljmp
outsb
nop
and
jbe
mov
test
sbb
push
arpl
out
rclb
addr16
test
add
ret
loope
lret
nop
arpl
and
sar
popa
mov
arpl
sub
fwait
arpl
arpl
push
insl
arpl
call
mov
mov
sbb
mov
mulb
pop
arpl
fadds
push
push
addr16
arpl
xor
ljmp
cmpsb
dec
mov
je
lahf
out
push
push
push
arpl
fs
mov
pusha
ret
in
adc
push
je
in
jg
pop
push
push
lret
ficoml
or
mov
stos
std
pop
stos
ficomps
or
add
out
mov
fldcw
sahf
fdivs
pop
pop
adc
iret
xchg
or
pushf
add
fcmove
out
xor
movl
sbb
sbb
cmc
jno
push
inc
ret
out
fbstp
jle
fdivs
cmc
daa
dec
add
mov
pop
pop
xor
jecxz
push
cmp
insb
cmp
cmp
sbb
lods
fdivrs
ret
sub
and
data16
std
sub
ss
add
sub
fldcw
sbb
add
xchg
outsl
stos
stc
ja
jns
mov
mov
inc
lahf
rcrb
stos
pop
in
jbe
add
aam
jmp
loope
insb
adc
loop
mov
sbb
jmp
pop
inc
push
xchg
in
inc
pushf
pop
call
cmpsl
aas
inc
push
and
xchg
mov
mov
cmpsl
bound
sbb
popa
xchg
pusha
mov
rorl
or
sbb
cmp
fcomp
icebp
sbb
add
add
dec
adc
push
sbb
sahf
data16
clc
adc
popa
loope
push
arpl
pusha
out
mov
out
adc
and
pop
out
out
pop
push
jae
aaa
in
cwtl
fadds
insb
jecxz
fwait
in
dec
push
test
pusha
jno
jl
add
addr16
push
mov
push
fcomps
stc
xchg
fnstenv
jecxz
fdivrp
and
hlt
mov
std
loopne
cli
sbb
pop
inc
xchg
mulb
int
pop
or
push
ljmp
push
and
stos
sbb
ljmp
sub
out
push
or
sbb
and
push
aam
fucom
push
or
adc
dec
cli
pop
inc
addr16
xor
lock
sbb
push
add
push
lock
sbb
push
push
push
ljmp
push
jle
stc
adc
insl
das
fildll
int
into
push
push
fdivs
das
test
or
mov
cmpsl
jecxz
icebp
enter
mov
lcall
shufps
push
mov
fs
aas
cli
push
inc
das
mov
cld
in
lcall
sub
int3
and
xchg
xor
cmpsl
and
sbb
call
lret
add
jne
jo
mov
add
mov
pop
jg
xchg
mov
jae
jge
xor
xor
pop
add
pop
adc
popa
std
cs
lcall
push
lret
rolb
popf
das
fxch
pop
and
cmp
and
sti
or
repz
std
sub
in
pop
add
and
outsl
sti
imul
cmp
std
and
adc
cmpsl
pusha
out
adc
mov
jg
push
push
pop
mov
aaa
sar
loope
or
mov
jmp
aaa
sub
cmp
cmpsb
fwait
hlt
insl
mov
mov
xchg
in
enter
cmp
aaa
cs
gs
mov
xchg
jmp
or
pop
sbb
ljmp
xchg
xor
mov
mov
mov
cmc
xor
gs
fnsave
jecxz
or
pop
xor
insb
push
mov
in
aaa
push
sbb
pop
mov
clc
outsl
rorl
jmp
test
push
fstps
clc
outsb
push
scas
jno
pop
adc
mov
repz
or
inc
xchg
out
out
mov
xchg
adc
jecxz
mov
ds
or
ljmp
cmp
ret
adc
cli
mov
rcr
or
adc
lret
andb
push
xchg
bound
pop
jne
mov
sbb
jmp
jnp
idivl
mov
mov
scas
shlb
jmpw
or
jnp
and
xlat
fiaddl
dec
imul
mov
jl
and
mov
jmp
test
sbb
push
dec
inc
mov
lds
jmp
pop
out
push
cmp
icebp
cmp
inc
adc
in
int3
loop
push
adc
and
dec
stc
fadds
or
jns
loope
jne
mov
pop
lea
mov
fcoml
lock
test
mov
or
mov
test
push
pop
adcl
lds
test
mov
fdivl
mov
cltd
adc
mov
in
xor
pop
fsubl
dec
mov
fdivrp
push
fstps
jmp
fdivrl
cld
add
cltd
mov
sbb
cmpsl
cmp
cmpsb
test
mov
bound
dec
aaa
mov
ds
ja
sbb
pop
inc
repz
cs
adc
lahf
cltd
xchg
push
pop
outsl
testl
arpl
mov
repz
pop
mov
imul
fwait
sbb
fisttpl
in
inc
std
pop
sbb
inc
sub
movsb
push
push
ja
in
aad
imul
fimuls
mov
jmp
repz
sub
or
out
or
outsl
mov
and
or
jecxz
sbb
lret
outsl
sub
enter
scas
fwait
testb
jmp
push
mov
decl
insb
icebp
cli
sbb
lahf
call
mov
sbb
scas
adc
mov
or
gs
mov
inc
jge
push
mov
mov
push
cmp
clc
xchg
mov
xchg
xor
inc
sub
and
mov
enter
pop
ja
gs
xchg
or
mov
sbb
xchg
inc
call
ficompl
sbb
iret
and
out
push
pop
leave
mov
fildl
fldln2
pop
pop
loopne
fwait
push
insl
scas
jne
data16
sbb
fbstp
inc
fldcw
pop
lcall
xchg
loop
push
sarb
fsubl
rcrb
fiaddl
lds
ds
pushf
loopne
int3
xchg
loop
ljmp
xor
jne
dec
ret
mov
jbe
and
test
lock
xchg
ret
gs
xor
adc
xchg
adc
or
gs
xchg
rcrl
dec
push
mov
add
ja
arpl
scas
push
mov
pop
cmc
pop
decl
sbb
mov
push
xchg
fstpl
cmp
or
pusha
inc
jo
pop
arpl
shl
call
fimuls
push
push
xchg
push
popa
inc
or
jb
push
jbe
loope
push
pop
addr16
and
add
pop
mov
push
mov
pop
scas
pop
mov
daa
hlt
scas
sbb
daa
jae
lods
ret
mov
xchg
in
push
ret
sti
push
lahf
loope
scas
sub
xchg
jb
sahf
pop
sbb
js
pop
test
mov
pop
xor
or
push
pop
cs
jl
and
lds
fcmovne
andl
stc
sahf
aad
enter
mov
mov
jno
xchg
aas
sbb
out
mov
ja
xor
cmpsl
lcall
pop
js
and
in
sub
js
outsl
and
inc
xorb
add
pop
fisubs
push
data16
mov
push
je
fcomps
jae
dec
aaa
pcmpeqd
stc
push
push
dec
fwait
sti
sbb
leave
pop
xor
xchg
mov
cwtl
stc
insl
add
add
jge
push
ljmp
pop
iret
inc
data16
push
push
ljmp
rorl
sbb
xchg
push
stos
push
aam
lea
sarb
aas
cmp
rcr
xchg
jne
inc
pop
mov
repnz
sub
pop
gs
jl
in
inc
pop
ficomps
fdivrl
jmp
mov
bound
and
ljmp
fcomp
fadds
sbb
gs
int3
out
jnp
arpl
and
lock
loope
mov
push
pushfw
xchg
mov
stc
sub
push
pop
dec
daa
lcall
sti
lcall
sbb
jmp
pop
in
fsub
pop
push
sbb
arpl
pop
bound
pushf
popa
ljmp
pop
pop
add
aas
mov
test
aaa
into
mov
js
imul
mov
aas
aaa
pop
mov
push
loope
and
inc
push
imul
out
and
inc
push
int
mov
lock
jns
mov
test
into
ljmp
pop
loopne
dec
gs
movsl
adc
cmp
sbb
push
aas
sti
push
jmp
jbe
cwtl
stc
cmpsb
push
int3
jae
mov
in
lcall
jno
dec
jle
pop
dec
scas
ret
cltd
ss
inc
int3
fcos
cltd
push
std
movsl
cmp
aas
or
pop
push
out
pop
mov
sahf
insl
cs
xor
mov
popa
loopne
arpl
xchg
cli
pop
push
xchg
mov
ret
into
subl
push
xor
fnstenv
jbe
jae
mov
jmp
mov
push
jnp
das
xchg
lahf
jnp
cmp
out
scas
js
outsl
mov
scas
xor
inc
call
xorb
out
sbb
xor
dec
pop
cltd
not
gs
in
lea
cli
scas
push
push
aas
notl
add
out
push
cwtl
outsl
in
aam
mov
dec
cmp
fcom
mov
arpl
outsl
cmp
test
add
pop
in
jmp
xchg
ljmp
and
ret
mov
inc
pop
arpl
pop
dec
xchg
add
testl
push
xchg
mov
xchg
and
cmpsl
push
int3
jns
lret
imul
xchg
mov
add
cs
mov
shrl
in
xorb
mov
jbe
xchg
mov
clc
cmp
lea
das
jbe
cmovno
inc
out
sbb
clc
fstps
loopne
popf
fsubrs
ficompl
aas
in
ret
jno
cmp
es
push
enter
xchg
outsb
hlt
pop
out
fistpl
jne
shrb
jbe
mov
cltd
xchg
add
les
mov
jecxz
aaa
push
sbb
sbb
push
dec
andl
adc
or
jecxz
mov
fcompl
out
pop
add
sub
test
jl
std
pop
xchg
mov
sbb
push
ja
imul
pop
push
sub
mov
add
mov
cltd
cli
sbb
mov
mov
lcall
pop
mov
push
clc
cltd
sub
sub
mov
shr
data16
xchg
cmpsb
push
xchg
jne
push
pop
jmp
inc
push
sbb
lds
movsb
sub
fwait
sub
or
fcomps
out
ss
pop
xor
mov
sahf
xor
push
fistpl
push
dec
movsb
xchg
and
les
fwait
sub
gs
mov
pop
outsl
and
aaa
sbb
pop
rolb
in
pop
mov
iret
imul
sub
int3
scas
push
push
xchg
lods
lods
std
sti
add
and
mov
sbb
cmc
add
adc
dec
sbb
mov
data16
sbb
sub
pop
push
in
fsubrl
or
jmp
mov
int3
pop
sets
cwtl
das
sti
inc
fxam
push
mov
jecxz
xor
scas
jne
fstpl
icebp
push
test
pop
lcall
push
jno
hlt
mov
lahf
mov
mov
mov
sbb
and
push
xchg
xchg
fisttpl
mov
mov
mov
push
clc
testb
jecxz
xchg
popa
aad
pop
mov
data16
pop
mov
pop
mov
addb
iret
cmp
std
or
stc
fcoms
mov
inc
mov
mov
push
add
jl
push
and
fildl
loop
cmp
or
sbb
inc
push
push
fisttpll
cmp
ret
xchg
and
mov
inc
insb
movl
daa
lds
pop
jns
inc
stc
js
shlb
jno
pop
push
xchg
mov
lahf
push
das
push
data16
dec
ret
mov
and
shrl
pop
out
or
jne
or
out
gs
in
xchg
push
pop
push
data16
xor
push
fcoms
mov
adc
xchg
enter
mov
test
push
test
dec
mov
sbb
sbb
inc
test
sbb
fcoms
dec
push
mov
xor
arpl
das
jb
pop
clc
pop
jns
sbb
mul
xlat
fistpll
adc
into
je
fisubrs
xor
dec
lock
ja
jp
aam
je
lret
mov
fstpt
sub
mov
in
pop
insl
lea
sub
mov
sbb
xchg
adc
js
flds
xchg
pop
rcl
stos
test
je
int3
and
add
loopne
push
inc
mov
xor
mov
and
call
frstor
fildl
loope
shll
sub
pop
push
shrl
cwtl
mov
scas
sbb
out
sbb
lods
pusha
xor
xor
sub
xor
lods
pop
arpl
mov
mov
aas
xchg
jne
jb
mov
sbb
and
pop
movsb
cmp
dec
push
sahf
or
jmp
jae
push
inc
mov
push
jp
and
clc
out
stc
jo
mov
cmpsb
pop
mov
pop
dec
sbb
sbb
fistl
sbb
gs
pop
push
jne
add
add
fsubrp
xor
mov
aad
sbb
jae
sub
cmpsb
jmp
cmp
rcll
mov
stc
fnsave
adc
sbb
insb
cli
ja
cwtl
rcrb
testb
xor
test
mov
mov
add
push
pop
pop
fdivr
js
mov
xchg
or
sub
sub
fnstcw
or
sbb
pop
neg
cmc
push
std
cwtl
das
or
sub
and
loopne
or
out
fldenv
mov
xchg
scas
fistpll
mov
mov
jns
xchg
adc
gs
lret
in
dec
insl
xchg
scas
imulb
ljmp
jl
movsl
pop
outsl
test
mov
cmp
gs
decb
adc
outsl
aas
pop
ds
mov
xchg
mov
fsubl
add
out
or
xchg
push
cmp
jmp
inc
ret
sub
pop
ja
cmpb
fwait
emms
lock
daa
sbb
or
cmpb
imul
xchg
subb
into
fsub
sbbl
sti
mov
movsl
out
insl
inc
insb
or
aad
sar
cmp
pop
sub
jge
scas
dec
adc
movsb
fldt
sub
dec
addl
insb
out
cltd
ret
stos
test
aaa
mov
cwtl
popf
jne
and
adc
insl
cmp
mov
pop
sub
push
and
loope
bound
insb
dec
sbb
push
aas
dec
scas
aas
movsb
or
mov
pop
insl
mov
inc
rcrb
leave
int3
fmuls
psrld
mov
inc
pop
lahf
les
inc
dec
clc
ljmp
push
jg
add
sub
jmp
insb
sbb
mov
test
aad
sahf
in
xor
stos
fistpll
aas
sbb
ds
mov
addr16
dec
neg
cmpsl
jge
je
and
dec
jl
lret
sbb
mov
pop
or
or
or
or
jne
xchg
push
push
inc
push
imul
mov
jp
jmp
lret
popa
push
mov
aam
mov
inc
rcll
add
std
mov
cltd
and
pop
cmp
inc
xchg
cmp
add
push
sub
sbb
add
icebp
pop
fstpl
mov
xchg
jp
pop
fistpl
sahf
outsb
das
enter
je
and
xor
sbb
sub
lahf
pop
rcl
jge
mov
enter
js
popa
sub
mov
out
dec
call
fcoml
cmpsb
lret
out
xchg
or
mov
lcall
push
sbb
pushf
cmp
mov
cli
call
imul
adc
xchg
mov
xor
and
das
cmp
xor
pop
jg
cmc
sarb
pushf
sti
lcall
repz
sti
cld
sbb
or
cmpsb
cmpsl
sahf
aam
push
stc
addr16
and
pushf
pop
cmp
fsubrs
cmp
inc
gs
mov
mov
cli
imul
jne
cmp
push
js
outsl
pop
enter
cmp
pop
push
stos
dec
jae
or
xor
sahf
xchg
ret
fsubs
sub
mov
or
mov
jecxz
std
and
arpl
adc
mov
in
sbb
mov
or
fmul
adc
andb
aaa
cmp
fyl2xp1
sahf
push
shr
inc
repz
mull
pop
and
cs
jns
adc
cmp
in
int
jne
cs
mov
xchg
js
or
out
sar
pop
pop
mov
mov
pop
decl
push
add
out
jmp
les
iretw
pushl
mov
out
daa
fsubrs
sbb
ljmp
movsb
addr16
pop
push
pop
and
jg
dec
cmpb
cmp
lahf
cmovge
sbb
rcll
imul
ficoml
push
mov
rcrb
out
pop
mul
pop
cwtl
push
jecxz
sbb
in
cltd
mov
out
sbb
out
pop
sbb
mov
imull
out
scas
jns
fstl
enter
cmp
mov
mov
pop
pop
and
cmpsl
out
mov
data16
sub
stc
and
repnz
lcall
outsb
sbb
lcall
mov
mov
jno
js
xchg
mov
jle
push
sbb
dec
andb
cld
lds
push
mov
fimuls
pop
mov
std
and
call
fldt
and
push
arpl
hlt
aaa
jne
add
idivb
pop
lea
mov
adc
bound
sub
push
cmpsb
popa
mov
bound
lahf
push
or
scas
adc
cs
jp
cmpsb
push
mov
xchg
les
sbb
or
xchg
inc
fucomi
mov
mov
and
xor
movsb
cmpsl
scas
scas
fbstp
imul
push
push
xchg
jl
jne
or
out
mov
loope
pop
sub
addr16
xorl
cmpsb
add
loop
or
xchg
outsb
mov
mov
mov
daa
xchg
sub
jne
call
sbb
mov
adc
inc
sti
sub
inc
lock
in
jle
xor
scas
call
jb
dec
push
imul
test
test
daa
inc
lea
jge
mov
imul
jmp
mov
push
out
sub
shlb
mov
mov
insl
lret
imul
and
sbb
aas
bound
sbb
dec
mov
rorb
mov
les
outsb
pop
push
cmpb
mov
shrl
push
push
mov
cmp
adc
or
cmp
mov
mov
aam
bound
cmp
fidivrl
mov
cld
inc
testl
xor
mov
push
mov
sbb
sarb
daa
fldcw
lret
or
or
inc
push
pop
add
out
jg
cvttps2pi
mov
sbb
sub
inc
dec
mov
xchg
and
mov
popa
aam
push
mov
adc
fnstsw
mov
fldcw
pushf
mov
ja
popa
lds
sbb
std
loopne
clc
jns
sub
mov
push
jae
cs
je
push
sbb
fnstenv
fildl
mov
mull
mov
mov
clc
test
sub
outsl
call
push
mov
push
push
inc
xchg
xchg
add
jb
stc
shlb
jbe
iret
popa
nop
or
leave
andl
fs
rcrl
das
mov
or
dec
js
cmp
xrelease
clc
loopne
sbb
inc
xchg
popa
pop
push
mov
pop
xchg
and
leave
mov
shl
filds
jmp
or
int
dec
cmp
in
jecxz
jnp
sbbl
sahf
jb
cmp
cs
ficoml
fcmovnbe
fistps
loope
dec
mov
int
add
addb
ljmp
pushf
xor
mov
popl
test
pop
inc
inc
push
outsl
push
pushaw
pop
icebp
addr16
or
daa
or
arpl
sub
push
testl
bound
addr16
fistpl
jne
push
sub
push
lret
dec
push
sbb
cmc
or
testl
cs
dec
dec
mov
dec
or
and
xor
sub
and
clc
gs
clc
xchg
movb
dec
cmp
fsts
jecxz
andb
push
inc
in
out
pop
and
iret
movsl
push
mov
dec
adcb
iret
bound
push
mov
add
fneni(8087
fs
fcompl
stc
iret
add
mov
adc
inc
inc
add
cmp
addr16
mov
cmp
add
aas
push
fiaddl
jne
adc
pop
insl
inc
cmp
clc
lods
insb
pushf
fcoms
in
pop
inc
mov
aas
xchg
mov
loop
push
cwtl
pop
movsb
xchg
cmp
mov
sti
ja
dec
lock
fprem1
lret
or
sbb
dec
call
lcall
or
cwtl
in
aaa
sbb
push
rclb
lret
idivl
dec
push
mov
arpl
dec
pop
subl
add
sbbb
loope
movsb
rolb
xchg
add
loope
xchg
push
es
push
pop
mov
or
sbb
xchg
fsubs
mov
dec
vpcomub
jl
fs
fildl
add
or
arpl
inc
in
lds
inc
mov
icebp
pop
xor
bound
fdivs
int3
jnp
push
inc
mov
xchg
or
call
and
cwtl
push
pop
fcomip
out
add
pop
ja
mov
mov
das
mov
cmc
sbb
adc
pop
lahf
rclb
jl
daa
push
stos
test
cli
fs
test
sub
imul
insl
ret
cli
into
and
cmp
mov
sbb
clc
loop
in
cmc
mov
mov
dec
adc
or
cmp
cmpsl
mov
fldcw
pop
in
cld
inc
jge
pop
inc
sahf
dec
iret
arpl
arpl
push
or
inc
jae
jae
lock
sbb
sub
and
xchg
cli
push
mov
decb
and
sub
loopne
mov
aam
hlt
pop
sub
xchg
lods
daa
aam
push
xchg
push
lods
les
mov
leave
fdivr
xor
cltd
cmp
loopne
stc
mov
pop
xlat
and
or
hlt
repz
test
mov
lret
push
inc
add
pop
outsl
repnz
or
cwtl
adc
pop
aaa
sbb
scas
mov
cmc
lds
fwait
aas
fldenv
cld
movb
cmp
loop
out
scas
mov
ficoml
pop
les
mov
fs
cmp
mov
add
sbb
clc
flds
adc
dec
mov
push
lret
add
sarb
daa
stos
dec
enter
fldenv
mov
outsl
das
and
cmp
push
xchg
and
popa
sti
ja
not
repnz
and
adc
push
ss
mov
mov
les
insl
xor
or
and
shlb
mov
adc
dec
cs
mov
fnstcw
loopne
mov
aaa
int3
lahf
mov
test
sub
test
loope
sti
push
stc
movsb
mov
stc
xchg
fsts
in
ja
repz
cmpsb
ds
push
or
jecxz
mul
mov
adc
int3
xchg
leave
rcrl
lods
sti
mov
ja
inc
stc
add
leave
test
stos
and
mov
xor
into
push
dec
pop
pop
int3
dec
xchg
xor
cmpsl
mov
ret
std
inc
jae
sbb
mov
pop
testl
lea
jecxz
xchg
xor
mov
cmovns
dec
in
mov
lock
pop
in
jae
sub
stos
imul
push
jg
fnstcw
or
pop
aad
int3
sbb
cmp
cmp
or
jmp
push
movsb
icebp
inc
icebp
jns
xor
scas
and
or
adc
sub
sub
mov
fcoml
addr16
rcrb
sbb
sub
jnp
sbb
hlt
in
cmpsl
icebp
arpl
ja
add
ds
mov
icebp
fs
lahf
sbb
andl
cmpsl
movsb
cli
test
mov
call
inc
xchg
mov
call
pop
mul
gs
cmc
push
adc
jecxz
vmulpd
pop
sub
mov
sub
dec
das
or
fcoml
ljmp
xlat
imul
add
negl
inc
adc
jnp
jno
scas
jmp
pop
in
pusha
mov
mov
inc
mov
and
sbb
pop
jle,pn
arpl
movsl
setne
sub
out
sbb
and
cmpsl
in
mov
clc
nop
cld
xchg
fsubrl
hlt
jns
push
out
adc
pop
cmp
and
sbb
fcomps
dec
sahf
addr16
int3
adc
leave
cmp
jl
pop
adc
bound
clc
clc
fisubrs
loopne
mov
xor
cmp
sbbl
sub
dec
aad
insb
lret
pop
inc
pop
mov
out
push
popf
shlb
push
or
xchg
lahf
push
daa
xchg
sub
xor
pop
test
lret
mov
push
lcall
sub
pop
sbb
mov
mov
scas
fcompl
into
fwait
stc
pop
mov
lock
fstps
adc
mov
lds
pop
xorb
jne
sub
lea
or
cmpsl
roll
or
popf
call
rclb
lds
call
mov
cmp
int3
das
fbld
and
int3
jno
sbb
push
js
sti
outsl
insb
mov
sub
xor
push
sbb
cs
pop
jo
mov
sub
mov
pushf
bound
lret
pusha
in
pop
xchg
and
pop
or
jmp
aas
repnz
jge
xchg
std
mov
inc
fsubrl
mov
jns
sbb
sub
cwtl
push
xchg
jg
nop
cltd
negl
scas
xchg
adc
xor
insl
add
adc
in
push
lret
mov
xor
out
mov
or
add
push
test
outsl
fbstp
xchg
xchg
mov
call
push
push
sar
int3
and
jmp
jp
add
leave
fcmovne
lahf
sub
out
test
lock
rcrb
xchg
filds
adc
or
inc
fstl
pop
imul
dec
jbe
xor
fnstcw
pusha
ja
cmpsb
sar
pop
aam
xchg
push
out
idiv
adc
jmp
mov
pop
cmp
clc
adc
iret
mov
or
outsl
call
sti
adc
clc
addb
mov
ret
sub
shr
into
out
xor
pop
dec
call
sbb
aam
inc
fmull
imul
push
shr
sbb
push
out
sbb
add
sahf
lret
in
iret
xchg
rorb
or
pop
sbb
repz
clc
push
arpl
mov
jg
pop
push
outsl
fiaddl
sbb
lods
push
fistl
idivb
out
jbe
cmpsl
mov
adc
call
imul
mov
icebp
jge
cmpsl
pop
cmp
mov
adc
test
or
pop
mov
pop
xorb
mov
lods
pop
in
pop
dec
pop
sub
pop
push
or
imul
test
fmulp
sub
xor
and
inc
push
mov
dec
out
sbb
movb
xor
inc
mov
mov
xor
rcll
and
dec
xor
mov
inc
xor
data16
inc
and
bound
aad
xor
test
cmp
lcall
jae
push
sbb
and
add
dec
cmp
clc
pop
jae
xchg
pop
fs
repz
pop
pop
out
fistl
fwait
outsl
inc
mov
sbb
fcomi
punpckhdq
mov
lret
daa
pop
sub
xchg
add
rcr
mov
jle
sbb
test
insb
rcrb
aaa
cli
push
dec
in
cltd
cmpsb
sahf
or
dec
addr16
pop
jl
in
add
mov
insl
inc
sti
xchg
fnstcw
xchg
cld
outsl
out
mov
sub
adc
ss
or
cmp
test
enter
pop
cwtl
adc
mov
outsl
push
mov
sub
pop
fistps
outsl
in
or
jno
sub
xor
std
out
jnp
pop
cld
xchg
inc
adc
dec
scas
fisubs
mov
pop
in
sub
add
xor
dec
aam
jne
mov
mov
movsl
add
or
xchg
in
pop
pusha
fwait
cwtl
push
jnp
xchg
and
imul
repz
shl
movsl
sbb
inc
es
arpl
sbb
into
sti
cmpsb
daa
into
and
scas
fwait
jae
rclb
cld
rcll
fstl
mov
add
add
xchg
sub
ret
testl
mov
jmp
jnp
pop
push
fsts
flds
icebp
fincstp
flds
and
sahf
pop
jg
movsl
shl
aas
scas
cmp
cmovno
pop
fcmovu
arpl
sbb
or
cwtl
test
sub
fildll
cmp
pushw
fldt
xchg
pop
inc
cli
push
call
div
ficoml
push
cmpsl
jno
xchg
push
mov
dec
sbb
sbb
sub
les
das
outsb
sbb
add
lock
data16
pop
imul
lahf
call
sti
leave
pop
outsb
stos
js
pop
outsl
aas
loopne
repnz
add
jge
jecxz
scas
aas
outsl
aaa
xor
mov
jns
daa
jne
adc
mov
mov
daa
pop
jne
leave
fldt
add
aas
xchg
push
popf
lret
jbe
aas
ja
cmpsb
arpl
jno
mov
xchg
cmpsl
call
jne
adcl
mov
scas
xor
scas
insb
sub
jg
mov
enter
sbb
sbb
ja
mov
fwait
mov
pop
int
fsubrl
and
xor
in
pop
xchg
add
pushl
push
hlt
je
cmp
loop
stos
cltd
and
pushf
cs
jmp
fldenv
push
leave
lock
and
pop
daa
fwait
cmp
mov
fcomip
lret
mov
or
jmp
or
shr
mov
jp
push
jo
scas
cmp
bound
pop
mov
or
cmpsl
mov
addr16
movlps
test
out
push
push
popa
test
cli
mov
test
pop
nop
inc
add
cmpsl
cli
push
xlat
lret
push
mov
or
fsubrs
bound
gs
jmp
lret
stos
in
lds
or
and
arpl
pop
push
dec
loope
mov
pop
lcall
popw
push
mov
outsl
aaa
cwtl
insb
mov
pop
and
js
stos
pop
or
mov
hlt
iret
jbe
cmp
pushf
test
fwait
int3
test
insl
mov
xorl
fsts
lcall
addr16
dec
dec
idiv
push
cltd
mov
sub
pop
add
or
fisubrl
mov
ficoml
xchg
pop
mov
bound
add
mov
or
xchg
jg
stc
pop
push
inc
cs
stc
inc
sbb
sbb
push
pop
xchg
in
pusha
into
dec
movsl
js
shrl
mov
enter
clc
and
ds
adc
jbe
sbb
clc
je
add
into
jge
sbb
fldcw
and
push
jbe
sahf
dec
dec
jmp
faddp
and
gs
push
leave
sub
ss
movsb
jp
insb
push
and
adc
dec
push
jnp
lcall
sub
fsts
popf
inc
clc
dec
or
xor
test
xchg
sub
inc
or
push
mov
pop
not
inc
push
stos
jge
mov
push
fisubrl
aaa
lahf
jle
int3
sbbl
scas
pop
notl
arpl
fildl
sub
repz
mov
lret
daa
test
fcoms
mov
jmp
pop
cwtl
sti
inc
daa
dec
icebp
test
loope
or
sbb
add
add
adc
in
jne
mov
lret
repz
aad
ret
loope
sarb
ret
shll
out
mov
movsl
bound
add
sar
add
and
and
testl
pop
stc
sbb
pushf
outsb
sub
jle
jmp
and
rorb
jmp
jp
mov
fidivrl
cmp
and
popa
pop
shrb
add
and
mov
in
push
fsubs
push
xchg
and
add
stos
or
mov
sti
mov
sahf
clc
das
sti
vhaddps
ror
in
push
jno
in
and
shl
sahf
fwait
pop
jl
call
adc
inc
xchg
je
idivl
gs
and
int
jb
daa
stos
mov
adc
sub
sbb
aaa
dec
fcoml
sub
sub
fsub
xor
push
fimuls
cmp
mov
inc
test
pop
cmp
jmp
xor
mov
scas
in
pop
sbb
xorb
pop
dec
sbb
add
dec
je
xchg
jl
pop
xchg
dec
scas
scas
out
scas
xor
rclb
dec
sub
sub
clc
or
fcmovne
xchg
aam
cmp
cld
jns
popf
sbb
stos
pop
pop
pop
outsl
addr16
js,pn
and
scas
xor
rcrl
sbb
popl
aas
hlt
or
divl
mov
out
xorb
in
aam
mov
jb
and
or
xchg
outsl
movsl
std
shlb
std
fisubl
ss
jne
scas
cli
pop
aam
xor
hlt
push
push
jg
sub
call
int3
mov
adc
daa
bound
outsl
sahf
call
jmp
add
mov
cmp
dec
rcrl
sbb
fsub
sti
jge
negb
and
adc
mov
pop
sahf
cmc
xor
clc
lahf
rcll
dec
xor
insl
or
notb
leave
or
out
out
add
popa
add
jae
pop
ret
jmp
sti
int
sahf
mov
mov
mov
leave
dec
xchg
cmp
push
inc
jnp
cmpsl
incl
jns
jp
pop
mov
rolb
add
mov
lods
int3
divb
out
mov
outsl
xchg
inc
dec
mov
xor
fbstp
cltd
xchg
push
mov
insb
mov
gs
adc
loopne
fxch
ret
jg
cwtl
in
or
push
movsl
shll
insl
leave
mov
mov
push
mov
es
test
dec
and
dec
add
loop
jge
dec
rcrb
xchg
fs
pop
sub
mov
jnp
je
stc
sub
dec
or
out
test
rol
push
sbb
sbb
mov
cwtl
stos
xchg
mov
lret
adc
repz
mov
mov
xor
jne
test
ja
xor
fsub
imulb
pop
pop
out
ljmpw
mov
insb
ljmp
add
xchg
dec
out
inc
add
sahf
dec
int3
add
xchg
or
push
dec
sbb
dec
mov
add
xchg
scas
aas
in
or
outsb
or
outsb
insb
out
mov
scas
ret
sahf
pop
outsb
xchg
or
aaa
data16
or
insl
inc
out
ret
mov
aaa
fsubl
aas
in
in
pop
imul
int3
add
sub
push
out
mov
and
add
es
cmp
in
xor
mov
out
pop
mov
jae
or
popf
cwtl
sub
pop
jmp
mov
mov
push
js
adc
pop
mov
lds
or
jecxz
fwait
fwait
xchg
mov
in
ljmp
add
test
pop
rorb
ljmp
stos
iret
fcoms
fcomps
andl
xor
test
sbb
add
leave
xchg
jb
repnz
mov
inc
jns
mov
lret
bnd
xorl
sbb
and
ret
dec
cmp
pop
repnz
test
stc
outsl
fisttpll
pop
xorb
cli
jmp
jae
lds
dec
mov
xchg
cli
or
push
sub
pop
push
add
imul
enter
mov
inc
leave
and
or
cs
and
dec
out
popf
sbb
dec
jp
add
pusha
add
and
sahf
jnp
bound
in
int3
fsubr
xchg
out
mov
enter
xchg
movsl
test
mov
jbe
sahf
dec
imul
aaa
cld
ss
mull
mov
cmp
hlt
dec
ljmp
fs
aas
push
or
shl
lret
scas
jl
add
jge
xchg
sbb
daa
xchg
push
pop
cs
iret
mov
pop
leave
mov
add
pop
jp
sbb
or
sti
fisttps
ds
mulb
mov
xor
scas
daa
pop
jecxz
mov
mov
std
jge
dec
repz
fwait
clc
jmp
frstor
addr16
jbe
adc
lcall
cs
ficomps
fadd
dec
cmpsb
push
int
in
sbb
push
es
xor
pop
and
adc
mov
add
pop
sti
mov
push
push
mov
outsl
mov
je
sbb
jle
into
xor
pop
sbb
pop
adc
in
data16
cs
decl
pop
mov
push
push
sbb
jae
mov
xchg
movsb
stos
cmpsl
xchg
imul
scas
ljmp
aaa
gs
or
xchg
pop
mov
loopne
push
negl
cltd
pop
dec
call
std
clc
lahf
push
ficomps
jl
sar
dec
mov
pop
mov
loope
push
cld
inc
cmpsl
add
fsubrl
into
shlb
lock
pop
adc
and
and
outsl
cmp
cmp
mov
out
repz
dec
gs
shr
clc
add
cli
insb
outsl
push
xor
push
adc
fwait
pop
jmp
or
and
stos
insb
scas
scas
pusha
rcrb
lret
dec
es
mov
sbbb
cli
cs
jmp
add
in
inc
sbb
lods
mov
pop
adc
adc
jp
int3
jbe
fsub
cli
add
dec
es
bound
mov
rcrb
arpl
fcoml
out
pop
push
popf
int3
insb
shrl
mov
data16
push
jbe
pop
cmc
dec
inc
sub
loop
stos
push
pop
add
push
xchg
sbb
mov
movsl
adc
and
fistpll
and
sbb
xor
sar
ret
daa
add
inc
stc
test
ds
pcmpgtd
xlat
shr
outsl
sbb
sbb
add
sti
or
mov
xchg
fmull
sbb
lods
je
add
sarb
mov
cwtl
push
add
cli
add
addr16
jge
inc
inc
cltd
aam
pop
scas
repnz
clc
cs
mov
push
fsubrl
xchg
outsb
mov
sub
sbb
inc
in
scas
addl
lods
pop
push
sti
sub
add
ljmp
push
outsl
fisubrs
dec
mov
mov
int3
cmp
mov
or
pop
gs
test
cmp
push
sub
lods
and
decl
movsb
gs
inc
dec
daa
arpl
pushf
lret
fcompl
dec
push
clc
jbe
outsl
push
into
jl
out
push
and
inc
pop
aaa
stc
add
ds
sub
and
or
and
xor
inc
js
jnp,pn
xor
aad
push
pop
adc
and
cmp
gs
sarw
mov
xor
popf
test
popa
fwait
push
arpl
dec
std
jne
popa
pop
mov
xor
mov
out
or
adc
adc
pop
in
push
jnp
and
xchg
jb
jmp
mov
sbb
xchg
leave
rolb
fdivrs
sub
jle
jnp
imul
mov
pop
or
jne
test
popf
and
out
xchg
xor
xchg
cmp
rcrb
mov
fldenv
mov
add
jmp
pop
arpl
ja
jb
mov
sbb
out
mov
jle
test
mov
repz
scas
cld
jg
xchg
icebp
lret
cli
lcall
hlt
test
jge
jg
push
in
movsl
shlb
es
scas
and
jno
lcall
imull
jbe
test
push
bound
test
out
dec
ds
jne
dec
ja
out
mov
inc
or
mov
mov
out
out
inc
cmpsb
sub
movsb
add
and
addl
push
and
outsl
or
cs
push
in
std
sbb
add
pop
sbb
push
cmp
daa
scas
out
xor
push
addr16
sbb
fistps
notl
sub
adc
push
in
mov
movsl
xchg
mov
addr16
jmp
in
lea
cmp
jnp
and
aad
mov
adc
sub
in
push
adc
repnz
pop
aas
movb
inc
add
movsl
fwait
mov
mov
dec
jge
fnstcw
or
xchg
int3
push
ljmp
pop
mov
mov
hlt
pop
loop
pop
pop
cmp
xchg
std
mov
dec
ds
lahf
inc
dec
push
fsubl
sbb
cltd
pop
sub
push
dec
imul
in
pop
pop
repz
outsl
scas
es
pop
dec
ja
xchg
cmpsb
fcmovb
jae
in
mov
sub
or
inc
cmpsb
sbb
scas
cmpsl
fdivrl
inc
in
mov
sbb
cmp
mov
jecxz
sub
add
add
jns
loopne
popa
cmp
hlt
jno
jnp
xor
arpl
outsl
sub
pushf
push
push
cmp
fadd
roll
mov
pop
jle
js
sbb
fcompl
movsl
xor
cld
and
lods
sub
cmp
jecxz
sbb
movsl
popf
es
fidivrs
das
cmp
imul
in
dec
cld
aam
or
push
cmp
sub
bound
out
outsb
jp
sbb
in
jg
jno
mov
push
mov
adc
push
xchg
push
outsl
repnz
test
mov
hlt
add
outsl
jb
sbb
pop
push
mov
mov
jns
aaa
shlb
cltd
testl
clc
dec
stos
add
sub
test
mov
js
ljmp
sbb
aas
sbb
bound
pop
data16
mov
fstpt
rcl
daa
xchg
mov
add
dec
in
push
xchg
fiadds
mov
add
inc
andl
scas
fadd
aaa
or
pop
add
lcall
sbb
repz
and
decl
add
mov
push
jmp
xchg
and
out
mov
imul
ljmp
sahf
and
pop
lret
cmpsl
push
push
jnp
jg
sub
pop
sbb
insb
mov
dec
daa
cmp
hlt
rclb
aaa
cmpsl
pop
fnstenv
pop
ret
das
push
push
or
das
stos
es
fsubp
mov
inc
and
sbb
ror
sti
or
mov
push
popf
sub
outsb
sbb
sub
pop
sub
ljmp
setp
adc
adc
bound
out
mov
sub
lea
movsl
loopne
mov
jno
aam
lret
sbb
dec
push
jae
mov
pop
pop
push
cmp
ja
push
jg
loop
lds
stc
in
push
pop
xchg
lock
arpl
sub
lock
pop
and
dec
popa
sbb
and
push
push
mov
pusha
and
push
ds
and
lret
pop
mov
inc
mov
lcall
sbb
pop
shl
sbb
mov
push
repz
inc
ljmp
es
or
mov
in
xchg
mov
jb
leave
xchg
insb
and
call
cmpsb
mov
popa
enter
stos
pop
in
or
sub
mov
xchg
push
cs
sbb
gs
add
sbb
xchg
imul
mov
pop
or
dec
and
repnz
jae
cmp
out
and
leave
jge
sbb
sub
jmp
sub
xor
cwtl
cltd
stc
cmp
xor
loopne
cs
mov
out
dec
hlt
out
outsl
jmp
jne
leave
jne
leave
mov
and
add
add
dec
pop
hlt
mov
jo
push
aam
fwait
sbb
cmp
imul
fnstenv
dec
mov
arpl
cmc
cli
sarb
jbe
jae
lock
jge
leave
scas
add
or
lock
pavgw
cltd
xor
jne
adc
inc
pop
daa
adc
mov
mov
in
dec
cvttps2pi
sub
xchg
mov
push
xor
cmp
stos
and
loopne
sub
cmpsb
dec
xchg
sub
pusha
mov
pop
adc
add
fcoml
xchg
fcmovnbe
xchg
fidivl
pop
or
mov
lret
mov
jmp
cmp
cmpsl
jne
outsl
popa
cmp
mov
xchg
xchg
scas
daa
out
bound
addr16
cmp
jl
mov
xor
sub
icebp
fmuls
mov
or
xor
fs
push
test
dec
jl
xlat
add
lods
mov
repnz
push
xchg
ja
scas
rclb
in
fcoml
sub
jae
dec
lret
pop
pushf
test
pmulhw
jmp
clc
jmp
les
mov
cli
mov
imul
popf
movsl
add
push
dec
les
imul
into
adc
clc
sub
jne
sub
cmpsb
in
movsl
jno
pushf
out
test
push
sbb
leave
pop
mov
lock
arpl
lea
jle
icebp
jae
xchg
loopne
jb,pt
shr
pushf
ret
xchg
and
pop
adc
inc
lahf
shrb
cmp
inc
pop
lret
sub
std
fnstsw
sub
pop
cltd
repz
mov
mov
mov
push
sub
sub
xchg
imul
sbb
ja
cwtl
stos
mov
pop
or
leave
sti
subl
dec
sbb
jl
or
inc
push
lea
jnp
arpl
and
mov
xor
dec
daa
cmpsb
and
cs
fldcw
sub
mov
cltd
dec
pop
pop
add
rcrl
jmp
push
fstpl
xor
ficomps
mov
out
inc
cli
insb
adc
test
arpl
pop
pop
call
imul
jnp
sub
fwait
sti
gs
push
sbb
and
stc
xchg
xor
aas
cwtl
jge
and
fdivl
lods
add
mov
stos
mov
addl
out
mov
cmc
jne
out
lods
call
and
pop
sbb
adc
sub
pop
jmp
sub
pop
loopne
or
sub
orl
or
adcb
out
pop
pop
mov
negl
mov
pop
dec
sbb
sub
js
push
shlb
hlt
daa
mov
jmp
repnz
pop
sarb
xor
test
mov
jb
push
mov
adc
or
mov
sbb
stos
sbb
in
push
lahf
jb
add
lea
pop
sbb
mov
repnz
sbb
scas
jns
pop
nop
push
fdivr
xchg
xor
jnp
sub
xchg
and
jle
gs
test
inc
sbb
jne
and
shlb
repz
fsubs
fistps
dec
xchg
hlt
pop
sub
test
sbb
xchg
mov
notl
jmp
cli
js
negl
mov
pop
push
xchg
pop
or
xchg
jl
jbe
ds
clc
jmp
jmp
and
mov
pop
mov
std
sub
out
aas
sbb
push
std
push
cld
jge
outsl
shll
xchg
loope
and
leave
jbe
nop
rcrb
cld
pop
imul
mov
out
call
jne
sub
and
movb
cmp
xor
push
cmp
push
xchg
push
enter
jb
popa
ljmp
push
enter
cmpsl
mov
pop
aaa
scas
cwtl
pop
pop
std
pop
dec
lahf
jmp
in
pop
mov
test
jae
xchg
pop
mulb
pop
mov
pop
dec
add
scas
xchg
cmp
lds
pop
cmpsl
mov
cmp
clc
xchg
movsb
mov
sarl
sti
inc
arpl
jne
neg
xchg
test
adc
jl
cmp
xchg
das
mov
dec
std
pop
lret
pop
fisttpl
shll
adc
xchg
out
adc
insl
dec
bndldx
push
mov
sqrtps
test
fmull
call
jp
dec
adc
scas
or
or
pushf
sbb
pop
lods
and
fdivl
mov
and
cmpb
fdivr
aas
dec
cmpsl
clc
sub
inc
ret
jne
daa
js,pn
lahf
adc
dec
mov
sub
jne
ljmp
push
and
out
sub
insb
dec
push
add
add
andb
cmc
int3
jnp
or
sbb
sbb
out
js
mov
divl
sbb
pop
push
mov
lods
xchg
sbb
mov
aam
in
cmpsb
dec
cmpsl
bound
cmp
xchg
pop
add
cltd
outsl
lahf
lcall
es
push
cld
flds
das
inc
mov
sbb
leave
sub
push
movsl
lcall
fadds
cmp
ficomps
xor
scas
jns
movsb
popa
dec
dec
xchg
ds
rorb
xchg
cwtl
or
or
or
popa
incl
add
or
inc
dec
mov
fcomps
bound
cld
cli
push
out
jns
leave
xchg
ljmp
push
jmp
lret
xchg
addl
mov
cltd
insl
inc
sub
notb
sbb
cmp
and
inc
jnp
ja
popa
mov
mov
or
es
cmp
xchg
sarl
int3
jno
int3
add
fldt
xchg
inc
pop
clc
in
sub
pop
cs
out
mov
jae
cltd
aas
push
sahf
xchg
ss
cmp
es
lock
fidivrl
fwait
xchg
inc
adc
mov
and
daa
pushl
in
lcall
faddp
inc
xchg
jno
pop
jnp
in
rolb
lcall
and
clc
fmuls
aad
cmp
fsubs
stos
add
mov
jo
sub
fmuls
adc
arpl
das
out
push
stos
dec
addr16
fnstcw
xchg
mov
adc
adc
lahf
dec
cmpsb
lods
adc
mov
dec
jo
aas
shrl
lods
fidivrl
push
fwait
outsl
mov
fnstenv
enter
dec
pop
dec
xchg
jns,pn
aaa
mov
ret
rcll
sbb
dec
add
add
push
and
and
jbe
fwait
or
mov
outsl
aaa
pusha
in
jecxz
ror
mov
pushf
call
xchg
sub
push
adc
mov
pop
addr16
cmp
inc
arpl
decl
dec
mov
cmc
sub
paddusb
pop
xchg
mov
int3
sbb
cmpl
mov
dec
fstp
jecxz
pop
inc
add
pop
mov
cmp
cmp
jae
sub
cmp
jo
leave
add
xor
cmp
lahf
jg
scas
add
mulb
or
shr
call
je
fsts
mov
loopne
sbb
mov
cli
sub
sarb
mov
fnstcw
push
inc
inc
mov
xchg
xor
call
push
sbb
roll
add
add
jmp
mov
rcrb
mov
jmp
imul
pop
scas
dec
sbb
dec
imul
ja
or
push
scas
mov
cmp
dec
je
or
hlt
adc
xchg
jns
jmp
xor
or
mov
fnstenv
push
sub
into
push
fimull
dec
in
push
mov
push
daa
push
fsubrs
ja
push
jge
lods
jecxz
pop
daa
add
mov
mov
fldl
xor
outsb
lds
ja
jl
and
push
xchg
mov
jnp
repz
pop
mov
lds
mul
mov
xchg
into
in
rcpps
sti
push
inc
and
pop
roll
cmp
and
mov
cltd
mov
and
mov
outsl
pop
fcoml
mov
mov
dec
mov
in
xor
cmp
lret
in
adc
cmp
paddsw
repz
inc
xchg
dec
xchg
cs
jge
jne
mov
mov
daa
dec
push
sbb
stos
mov
mov
xchg
cmp
or
cs
ds
xchg
out
dec
test
or
mov
dec
mov
pop
aam
push
xlat
sbb
in
push
dec
cmp
shr
jge
sub
test
test
std
roll
cmp
dec
loopne
clc
pop
xchg
and
shll
xchg
cmc
in
arpl
sub
push
pushf
inc
or
push
andb
leave
cs
jns
cmp
mov
mov
dec
je
leave
mov
mov
jle
jnp
rcrl
ret
cmp
inc
push
push
add
enter
fstps
daa
dec
pop
add
xor
int3
dec
std
stc
lahf
mov
adc
xchg
pop
int
sub
dec
pop
cmp
es
adc
addr16
pop
jmp
sarb
loopne
movsl
add
call
push
mov
push
fdivr
mov
dec
imul
in
jo
dec
cmc
xor
sub
shl
sahf
push
in
mov
ljmp
pop
push
nop
in
mov
aam
das
pop
cli
pop
arpl
mov
push
bound
xor
sub
iret
pop
push
or
data16
pop
or
jmp
stc
addr16
push
push
pop
pop
in
push
jo
scas
addr16
sub
adc
pop
call
xchg
jne
inc
pop
lahf
mov
sub
addr16
mov
pop
outsb
test
jmp
rclb
pop
cli
call
into
sub
fwait
mov
add
shrl
and
into
add
and
arpl
scas
mov
xlat
pop
pop
mov
sub
add
mov
je
jo
shlb
sub
nop
pop
mov
mov
lods
mov
push
pop
std
icebp
cmc
sbb
lock
and
test
pop
xchg
fdivs
addb
imul
cmp
and
push
fisttpl
add
xchg
sar
sti
out
pop
or
ret
fildl
fadds
ja
push
mov
add
ljmp
fiaddl
or
enter
sbb
cmp
addr16
not
pop
divl
insb
or
pop
cli
idivb
xor
push
mov
mov
sbb
adc
fs
sub
mov
outsl
fsubr
mov
pop
inc
pop
std
mov
cmp
testl
nop
out
aas
ds
imul
imul
fildll
and
or
mov
in
outsb
iret
sub
jo
jmp
dec
clc
popf
cmp
icebp
or
cli
pop
loopne
mov
pusha
sub
shll
or
je
addr16
not
stc
add
inc
fidivrs
imul
std
bound
sahf
daa
aaa
fwait
es
test
scas
add
push
jmp
cmp
jae
mov
mov
mov
insb
push
out
push
jo
stos
clc
das
imul
mulb
mov
sub
cmp
leave
fs
mov
push
je
lock
movsb
push
inc
fmul
xor
sub
int3
or
mov
lret
popf
inc
fimull
negb
fcmovnu
dec
cwtl
push
imul
lret
cmc
movsl
push
fstps
fidivrl
lods
pop
cltd
add
bound
jmp
xor
mov
adcb
pop
fstps
cmp
sbb
xor
xchg
in
aam
testl
sti
xchg
les
out
push
lods
sub
fcomps
pop
jecxz
fmull
push
ret
aam
or
dec
xor
pushl
fbld
ret
xchg
shl
dec
mov
insb
and
and
xor
sbb
cmp
popf
jp
and
jns
inc
fcomps
rcrb
lcall
or
lret
fcomps
rcr
in
jmp
loop
frstor
sbb
fimuls
out
int
push
popa
mov
xlat
ja
pop
mov
negb
fwait
sub
cmp
idivl
ljmp
stos
shlb
lds
ficoms
mov
rol
stos
ret
cmpsb
lea
rcrl
js
xchg
sub
mov
rolb
sbb
dec
sbb
shll
out
add
mov
out
test
in
iret
divl
test
into
jno
sub
js
sbb
call
pop
stc
out
mov
bound
and
pop
std
fstsw
xchg
push
cmp
adc
cli
xor
adc
lea
push
pop
xor
mov
sbb
cmpb
jno
pop
in
sub
dec
add
cltd
cltd
fidivrl
lahf
jg
sub
js
stc
ds
xchg
sbb
enter
mov
pop
jno
fldt
or
mov
les
adc
sbb
jnp
sub
mov
and
mov
scas
lds
push
xchg
push
xor
pop
subl
fildll
xor
dec
fadds
lcall
mov
jl
lods
mov
in
data16
add
mov
xchg
jbe
jnp
sti
mov
psubusb
scas
xchg
lock
jmp
fimull
xcrypt-ecb
cmpsl
mov
in
cmp
xor
inc
in
jp
cmp
and
out
inc
adcb
imul
inc
fimuls
dec
jle
cmp
or
mov
in
fcompl
out
outsb
movsb
xor
or
pop
in
mov
cmc
lods
mov
sti
scas
xchg
das
jno
lods
add
test
pop
jnp
rcrl
fstl
insb
gs
jl
cmp
pop
mov
mov
or
fs
xchg
bound
lcall
in
xchg
test
xchg
les
dec
fstp
mov
pushl
jle
sbb
sahf
sub
out
pusha
scas
cmp
sbb
outsl
loopne
fdiv
pop
and
hlt
shrl
out
pop
jmp
mov
push
jbe
pop
dec
fldl
jno
inc
popa
packuswb
in
or
fbld
outsl
cs
add
sbb
xchg
nop
lret
push
xor
rcrl
scas
push
mov
push
jmp
mov
stos
xchg
insb
mov
add
es
sarl
cltd
in
mov
jg
mov
adc
loope
and
incl
jae
cmpsb
jmp
inc
mov
and
addr16
xlat
ficomps
sarb
notl
cmpsb
jl
pop
repz
leave
push
add
test
stos
push
cwtl
inc
pop
fbld
xchg
outsl
dec
sbb
ss
enter
jmp
mov
cli
aaa
sub
cltd
pusha
pop
in
fwait
push
mov
add
xor
jns
lret
fcmove
aaa
pop
out
into
repz
inc
xchg
pop
adc
or
fbstp
int3
or
pop
xchg
pop
sub
insl
sti
mov
cmp
or
push
ret
mov
mov
pop
xlat
sahf
dec
inc
fldenv
loop
scas
call
sbb
packuswb
sbb
outsl
sbb
imul
sub
outsb
shrb
movsb
stos
ja
adc
sub
xor
in
pop
gs
jo
dec
inc
add
and
cs
hlt
pop
jbe
xlat
jge
or
inc
divb
ja
aas
pop
sbb
cmpps
jo
leave
aaa
dec
sub
push
cwtl
sub
mov
push
xchg
mov
cli
popf
mov
jnp
dec
mov
mov
jmp
insb
clc
and
mov
cmpsb
cld
aad
bound
ret
roll
and
shll
in
mov
fistps
sub
fstpt
pop
push
cmp
jns
xchg
ljmp
int
enter
outsl
mov
out
rcrb
inc
js
fisubrl
inc
jecxz
js
clc
pop
sbb
xchg
ret
dec
xchg
out
and
cmpsb
push
sbb
inc
sbb
inc
sub
cmp
test
cmpsl
popa
add
test
sbb
imul
and
jnp
xchg
xor
adc
pushf
loope
cwtl
movsl
testb
sahf
call
sub
inc
mov
fstps
pop
xchg
sbb
rcll
xor
mov
insb
int3
flds
cld
mov
cwtl
add
lods
mov
loopne
xchg
or
sbb
in
sahf
mov
add
sbb
dec
je
sub
mov
or
mov
mov
stc
pushw
and
shr
rcrl
xlat
or
mov
push
scas
mov
sbb
sub
insl
imul
in
fwait
ja
sub
pushf
fs
and
outsb
fnstsw
xchg
mov
push
ret
jnp
js
sbb
sub
lds
jp
or
mull
rclb
mov
andl
std
lret
aad
sub
jns
jl
dec
adc
call
out
push
in
jge
sbb
dec
mov
add
push
fcmovnb
scas
sarb
ds
dec
pop
push
mov
mov
push
pop
clc
xor
add
pop
cwtl
ljmp
pushf
fcomip
loope
cli
xor
sbb
fistpll
out
negb
xchg
pop
pop
negl
jne
mov
inc
sbb
adc
jns
pop
enterw
pop
jle
lods
jns
jnp
ret
int
les
cmp
fdivrl
sbb
sub
sbb
push
clc
rolb
arpl
add
fwait
push
into
mov
dec
lock
out
fadds
inc
and
rcrb
imul
cmpsb
mov
mov
aam
and
std
xor
jo
and
fcom
mov
cs
push
faddl
sahf
and
imul
inc
pop
or
mov
shl
ficoml
pop
xchg
xor
add
cmp
pop
cmp
xor
push
push
lcall
push
scas
js
mov
push
jns,pn
xchg
mov
fs
cltd
sbbw
or
shll
cwtl
inc
mov
pop
das
push
pxor
iret
ljmp
cld
lcall
sub
iret
mov
cmc
lcall
and
and
sahf
js
ja
jmp
scas
and
adc
add
push
pop
cwtl
push
cltd
in
sub
stos
mov
mov
outsb
mov
gs
mov
xor
sub
cmp
in
outsb
jns
pop
clc
pop
and
jp
fsubrl
gs
mov
rep
mov
cmc
mov
stc
loope
ror
xor
mov
stos
inc
or
mov
fmull
mov
aas
lret
lahf
fmull
loopne
pop
jg
or
push
ret
flds
mov
lret
inc
pop
popl
xchg
std
cmpsl
lods
cmc
repz
pop
mov
adc
loopne
fcompl
add
push
mov
cmpb
mov
ror
jo
stos
mov
jmp
daa
and
jg
mov
add
cltd
inc
mov
xor
rorl
arpl
push
aas
sbb
mov
add
mov
push
xor
xor
jge
jl
adc
das
and
outsb
pop
lcall
pop
scas
into
mov
inc
cmp
xor
clc
fcompl
mov
addr16
test
lds
xor
adc
cmp
ljmp
arpl
pop
mov
jae
mul
xor
mov
add
sub
ret
dec
mov
adc
jg
add
sbb
add
bound
jp
dec
sahf
push
or
insl
mov
std
and
mov
bnd
lret
mov
es
mov
xchg
inc
aas
xor
cmp
adc
cwtl
push
jecxz
in
shl
out
sub
sbb
jl
sbb
out
sbbb
sbb
iret
sbb
sub
sbb
loopne
xcrypt-ofb
xchg
das
addr16
sbb
jge
stos
and
cmp
or
cltd
sbb
mov
dec
pop
stos
mov
cwtl
or
pop
das
xchg
xorb
push
mov
mov
mov
rorb
push
testl
sbb
mov
inc
insl
xor
dec
sbb
fs
das
scas
mov
loop
loopne
jg
pop
lcall
cwtl
negb
ret
push
adc
cwtl
or
push
rcll
and
xchg
cmpsb
pop
cmp
pop
ror
gs
int3
adc
jns
push
mov
dec
mov
rep
lret
cwtl
ret
psubsb
mov
scas
cwtl
cmp
mov
push
sbb
push
mov
mov
sbb
push
mov
cmpsb
pop
std
jb
push
sbb
mov
pop
cmp
adc
lds
or
xchg
add
in
mov
stos
sbb
and
movsl
sbb
adc
xchg
call
xor
jecxz
arpl
clc
jae
or
or
sbb
jmp
cmc
or
fldlg2
or
mull
in
lea
imul
xchg
jmp
fsubl
xor
pop
arpl
gs
inc
movsl
sub
mov
in
pop
dec
push
repz
out
xchg
aaa
inc
lds
cwtl
sub
jmp
xchg
push
gs
leave
push
push
call
sbb
mov
sbb
mov
mov
int3
repz
pop
sti
xchg
and
je
sub
jle
nopl
out
adc
sti
xchg
rclb
jp
mov
and
enter
mov
cmpsb
xchg
fsts
lcall
xor
cmp
mov
outsl
mov
ja
xor
mov
cltd
mov
std
dec
adc
stos
add
sbb
mov
imul
mov
or
shll
pop
and
push
sbb
jno
imul
shll
fs
into
andb
movsl
add
in
es
test
cli
pop
hlt
popf
out
lahf
pop
add
mov
rorb
push
ds
dec
mov
pusha
jbe
mov
push
push
loopne
jge
and
sbb
fmull
jge
pop
sbb
or
push
add
xchg
mov
and
push
imul
xor
cmp
push
lss
or
loop
xchg
adc
push
mov
bound
lret
mov
inc
mov
jmp
fs
jno
cmpsl
gs
fwait
inc
jg
mov
push
insb
fadd
ds
adc
xchg
loop
cmp
and
fcmovnbe
jmp
mov
div
adc
pushf
gs
sbb
mov
cmp
jge
ds
dec
ror
xor
push
adcl
mov
push
sti
movl
jmp
sbb
loopne
ja
lock
mov
push
pop
pop
testl
push
cmp
pop
jl
ljmp
pop
sub
mov
inc
mov
fdivl
mov
jne
lea
ljmp
adc
loop
cmc
sbb
lahf
add
push
shrb
push
or
cmpsb
mov
lret
mov
pop
pop
or
mov
out
cli
fnsave
testb
jne
pop
mov
mov
es
cmp
add
je
mov
repz
cmp
mov
mov
pop
xchg
stos
push
mov
jns
mov
cwtl
sbb
test
int
add
in
xor
sbb
fsubrl
fs
jns
fcomps
jg
dec
popf
xchg
pop
aas
or
lahf
mov
sub
std
rolb
aam
add
in
xor
add
push
xor
stos
push
loopne
btc
sbb
pushf
mov
push
das
aaa
pop
adc
lahf
repnz
sbb
dec
leave
mov
or
test
scas
out
add
ffree
icebp
pushf
xchg
add
push
mov
fucomip
pop
sub
push
add
sbb
adcl
xchg
clc
repnz
lret
out
jne
in
jbe
fmull
xchg
gs
js
pop
jns
inc
xchg
mov
stc
push
out
stos
fsubr
xchg
jge
je
leave
inc
movsl
sbb
xchg
outsb
lahf
popa
mov
push
je
fnstenv
dec
rorl
add
aas
ss
mov
outsb
add
adc
push
pop
push
scas
adc
mov
rorl
je
mov
xchg
cmp
adc
add
test
xor
fcomps
jno
sub
popa
stc
out
into
mov
mov
fiadds
into
pop
popa
loopne
rcrb
test
mov
pop
jle
inc
popa
sbb
jnp,pn
popa
shll
imul
in
xor
pop
mov
dec
pop
cli
repz
loopne
popa
insl
sub
cmpsb
insl
mov
addr16
mov
cld
inc
cs
addl
imul
pop
dec
adc
adc
xchg
mov
xchg
sub
cwtl
push
cmp
pop
xchg
ret
jns
adc
addr16
out
pop
xor
and
sub
mov
ja,pn
scas
bound
jns
inc
sub
mov
clc
rolb
std
shrb
mov
cs
mov
clc
adc
cli
dec
cmp
cmp
ja
xchg
jle
mov
sub
cld
or
ljmp
jle
fdivrs
in
dec
js
imul
pop
das
repz
mov
xchg
xchg
hlt
movsb
cli
sub
xchg
outsl
cs
xchg
pop
dec
inc
xchg
aam
sub
sub
jno
daa
ds
jne
add
cmpsb
sub
das
jmp
hlt
sub
mov
scas
dec
loopne
mov
hlt
pop
popf
fisttpl
leave
xchg
cmpsl
sbb
inc
cmpsl
sub
dec
lret
popa
xchg
lret
push
cld
clc
cs
pop
mov
mov
test
icebp
jnp
shrl
xor
stos
mov
imul
in
cld
cwtl
dec
adc
movsl
lea
leave
pop
notl
fnsave
pop
add
sub
mov
and
addr16
dec
aaa
cmpsl
jne
mov
icebp
xchg
cmpsl
mov
out
jmp
jb
aam
mov
xchg
repz
fistpll
jbe
push
pop
push
rcl
jbe
in
push
jb
mov
pop
jp
ret
rep
mov
enter
clc
cmpps
faddl
pop
sarl
aas
out
jecxz
js
pop
xchg
gs
aas
iret
insb
cli
xchg
xor
mul
jo
movsl
jbe
adc
xchg
mov
adc
pop
jb
lret
fisubl
ret
jne
push
daa
fcoms
mov
sbbb
fcoms
pop
add
push
in
mov
xchg
icebp
dec
hlt
popa
in
xor
mov
out
setbe
push
xchg
pop
mov
xchg
mov
lock
fs
jb
mov
xor
out
pop
mov
xchg
pop
stc
mov
mov
inc
fadds
into
clc
add
dec
int3
daa
push
and
icebp
popf
movsl
push
xchg
or
push
dec
cmp
jne
mov
dec
dec
mov
das
push
cs
inc
jb
aad
and
mov
loopne
jge
js
outsb
fistpll
in
js
out
fstpt
and
sbb
sbbb
pusha
hlt
xchg
std
jbe
notl
xchg
sub
out
mov
jmp
jne
insb
outsl
and
pusha
sub
or
imul
xchg
shll
js
jne
test
pop
mov
add
xor
out
mov
testb
pop
xchg
into
pop
add
xchg
fwait
int3
or
inc
jne
lahf
loop
mov
ret
gs
aam
inc
push
sbb
jbe
sub
sarb
insl
xchg
fmuls
xchg
pop
pop
loope
notb
jg
addr16
pop
out
xor
jno
scas
test
pusha
ret
shl
cmpsl
sbb
push
sub
negl
sbb
fsts
fdivrl
scas
dec
shufps
adc
inc
pop
addr16
sbb
sub
xchg
pushl
mov
adc
imul
imul
repnz
pop
into
fadds
enter
int3
jne
dec
adc
aaa
fldcw
jb
test
dec
cmp
cmpl
sub
dec
ficompl
push
mov
xor
cmp
and
sbb
dec
out
dec
repnz
jae
xchg
mov
stc
call
pop
mov
les
cmp
mov
pushf
xor
inc
jge
icebp
cmp
xchg
rcrl
cli
std
adc
jge
adc
xchg
push
test
arpl
pop
lahf
xchg
or
mov
daa
fisubrl
call
imul
out
dec
cltd
push
xchg
inc
loopne
out
jg
dec
and
sub
jge
cmp
movsl
pusha
sub
enter
scas
jecxz
pop
sub
insb
mov
inc
mov
and
ja
aam
jae
divl
xchg
repnz
shrl
in
fsubrl
add
push
sub
mov
lret
int3
loopne
sbb
mov
adc
pop
stc
aad
arpl
je
jne
scas
xor
aaa
pop
gs
hlt
lock
sub
mov
stc
mov
aas
mov
cmp
cltd
loopne
and
sahf
out
jl
stos
rcrb
repz
cs
jl
stc
pusha
add
mov
std
sahf
lds
or
ret
rol
ljmp
fdivs
clc
push
push
pop
inc
push
sbb
and
leave
jnp
les
std
clc
lods
repnz
repz
fs
jne
leave
cmp
sub
mov
into
cmpsl
or
lret
sbb
mov
xchg
cmp
pop
xorl
dec
mov
popa
imul
add
cmp
out
xchg
sbb
movsb
pop
bound
cmp
fisttpl
pop
sub
jge
mov
jle
dec
mov
sbb
push
data16
shrb
cld
adc
xchg
mov
repnz
stos
out
scas
pop
xchg
adc
dec
popf
cmp
les
sbb
mov
or
in
xchg
xchg
addr16
das
idivb
inc
rcl
pop
xor
data16
and
mov
push
ret
mov
lcall
scas
lock
out
add
dec
daa
jle
fstl
mov
dec
sahf
xchg
iret
dec
lock
lret
mov
mov
fdivrs
sub
dec
dec
ss
int3
jns
sbb
pop
jge
fs
mov
inc
push
dec
jb
jp
mov
sbb
addr16
movb
imulb
aaa
cmpsb
push
pop
mov
ror
push
fstpt
push
fwait
iret
cmp
adc
mov
xchg
jge
cmp
je
testb
testb
pop
sbb
xor
pop
out
mov
fwait
pop
rcll
sub
repnz
fisubrl
mov
stos
cmpsb
xchg
push
sbb
movsl
sahf
sub
fucomip
ret
pop
push
jge
xchg
inc
push
xrelease
sbb
and
stos
out
fsubs
xchg
jmp
ss
pusha
cmpsl
ss
data16
mov
call
movsl
mov
mov
cmp
sub
cli
xor
fcoml
add
cli
fwait
xchg
push
sbb
fdivrs
mov
adc
pop
mov
sbb
repz
cmp
fistpl
push
mov
in
int3
and
jl
xchg
ss
adc
mov
movsb
push
sub
movsl
leave
lcall
mov
cmc
mov
inc
incb
adc
cmp
int3
into
jmp
jecxz
gs
imul
push
idivl
lods
daa
xchg
mov
pand
pop
shll
decl
cs
jmp
addr16
sbb
icebp
movsl
sbb
cwtl
pop
sub
push
mov
lods
movsl
jle
mov
xor
movsl
dec
frstor
fistl
xchg
cltd
sbb
mov
movsb
mov
cwtl
cmp
lcall
sub
jae
outsl
movsl
inc
cli
xor
sbb
and
sbb
aad
xchg
xchg
lcall
daa
faddl
ljmp
xchg
xor
mov
enter
sahf
pop
pop
int3
aaa
dec
pop
push
sub
pop
inc
sub
jnp
or
xor
push
adc
jle
arpl
sub
sti
sbb
sarb
pop
es
outsl
imul
sub
cmpsl
stos
into
fsin
cmpxchg
adc
inc
out
sub
add
jne
out
xor
dec
outsl
pop
in
stos
sar
lret
and
pop
cmp
sarl
xor
push
stc
xchg
jmp
pop
lret
outsl
pop
sahf
sub
jge
or
imul
bound
dec
sti
lret
outsb
in
scas
and
subb
mov
and
push
xchg
pop
pop
dec
sbb
fs
mov
ljmp
scas
dec
bswap
fadds
mul
int
aad
test
outsl
stos
imul
mov
jne
mov
cmp
pop
cs
xor
fs
js
jne
jg
jnp
sub
call
inc
inc
add
lds
xor
aaa
int3
clc
xchg
enter
inc
mov
bound
mov
jecxz
push
repnz
aas
push
push
lret
sbb
lock
loopne
pop
sti
fldcw
out
push
stc
std
jle
mov
lock
xchg
dec
subsd
cmc
scas
and
loop
lahf
insl
or
ret
mov
data16
mov
mov
pop
pop
or
outsl
je
dec
mov
push
cmp
xor
sahf
xchg
enter
push
loop
sbb
and
and
ret
out
pop
fildl
arpl
fs
clc
jne
outsb
mov
adc
loopne
adcb
stc
mov
inc
sub
jns
mov
cmc
sub
pop
push
std
jne
leave
cmp
clc
mov
inc
mov
dec
movsb
jbe
add
sahf
loop
in
cmp
scas
scas
in
and
xchg
cmpsb
fmull
sub
sbb
pop
sub
cmpsb
sahf
inc
mov
mov
in
cmp
jbe
add
dec
cwtl
and
cltd
movsb
jg
es
pop
outsb
popf
movb
jge
dec
pop
inc
dec
add
dec
and
es
push
pop
scas
mov
mov
out
dec
pop
push
or
cmp
in
das
iret
bnd
sub
clc
pop
rcrl
icebp
lods
jo
fld
mov
mov
push
and
mov
push
cmpsb
imull
dec
nopl
jnp
and
std
jmp
add
dec
mov
adc
pop
pop
dec
sbb
movsb
or
sar
inc
jbe
sub
sbb
mov
inc
sub
xchg
loopne
dec
mov
push
xor
int3
adc
in
dec
mov
mov
ficomps
ja
shrb
sbb
in
repz
jns
push
jnp
lcall
xchg
bound
sub
ja
fcomps
das
fistpl
pop
xchg
outsl
pushf
sbb
movsb
mov
fs
mov
dec
mov
js
imul
sbb
js
cs
push
dec
arpl
sub
dec
dec
inc
cmp
add
js
fmuls
pop
mov
xchg
test
and
or
add
out
mov
sbb
daa
ret
mov
or
push
ss
jmp
adc
test
pop
loop
fmul
in
jnp
sbb
mov
mov
divl
aaa
gs
ror
jp
lods
cld
addr16
cmpsb
mov
stos
movsb
lds
leave
andb
add
ds
mov
xchg
pusha
mov
movsl
xchg
inc
mov
repnz
adc
pop
push
or
fs
leave
adc
mov
popf
enter
fwait
gs
iret
loopne
mov
add
inc
dec
repz
cltd
sub
stc
pmaddwd
icebp
push
arpl
adc
jmp
imul
jno
in
dec
mov
xchg
push
enter
and
out
fstl
and
ret
or
sti
call
repnz
lahf
jge
neg
push
jb
popa
andb
or
xchg
push
scas
cmp
mov
xchg
adc
add
pop
ljmp
seto
jmp
adc
inc
fcompl
bound
dec
xchg
sbb
inc
insl
lea
int3
lcall
sub
push
scas
cmp
gs
ret
add
xchg
scas
popa
pop
xor
incl
and
push
ljmp
xchg
xchg
adc
jns
mov
lock
in
test
xchg
xor
mov
or
mov
adcl
or
adc
pop
dec
frstor
bound
movsb
scas
mov
loop
cwtl
leave
neg
push
inc
arpl
hlt
jecxz
dec
and
sbb
loope
mov
sub
and
out
lret
lea
mov
stos
ret
add
cmp
pop
push
call
cld
pop
push
lea
pop
dec
js
es
in
cs
or
pop
fadds
add
fildl
gs
cs
sbb
or
xchg
sub
pop
jns
cmc
mov
int3
mov
cli
in
pop
cmpsl
sub
and
icebp
rcrb
lea
jmp
xor
lock
fisttpl
mov
repz
adc
dec
decl
fisubrl
ss
push
sbb
or
filds
cs
mov
out
js
pop
lock
jecxz
outsb
sahf
and
aas
sbb
sbb
lret
outsl
mov
test
fiaddl
pop
pop
inc
mov
popw
repz
int
adc
out
push
pop
es
xchg
mov
pop
cmp
push
jmp
pusha
ror
sbb
dec
sbb
clc
push
fs
int3
pop
cli
les
dec
dec
jmp
pop
inc
aas
sub
dec
rcr
mov
mov
cmp
mov
or
lock
xchg
pop
jp
xor
scas
pop
sub
pop
into
jl
in
icebp
sbb
pop
push
or
sbb
jo
outsl
sbb
jno
cmp
je
lods
pop
jl
mov
sub
cmpsl
scas
mov
int3
test
mov
mov
fsubl
or
mov
je
imul
jp
add
adc
and
jp
and
jecxz
and
ss
adc
cmpb
stc
out
cwtl
dec
sbb
pop
mov
loope
mov
mov
pop
cmpsb
out
stos
xor
xorb
mov
jge
dec
out
adc
mov
ds
js
mov
addr16
test
mov
adc
outsb
dec
xchg
or
push
cmp
dec
add
push
rol
inc
and
lds
pop
inc
jecxz
out
or
faddl
ja
dec
fs
hlt
mov
in
jbe
xor
in
fmull
mov
sbb
hlt
push
call
ffreep
addr16
out
push
hlt
pushf
imul
inc
inc
xchg
cmp
push
xor
adcl
fmull
out
test
xchg
inc
push
negb
mov
gs
fdivrl
aas
dec
pop
sti
in
push
dec
sub
popf
test
fmull
sbb
or
dec
push
les
leave
pop
jp
bound
daa
xor
push
dec
pop
sbb
leave
lcall
jge
lahf
inc
xorl
xchg
pop
flds
scas
aaa
sub
gs
mov
dec
jae
push
add
mov
imul
shrb
rol
cmp
xchg
or
arpl
insb
xchg
sbb
jp
sub
sub
insb
test
jne
sbbb
int3
xor
dec
fnsave
ds
ret
cmp
mov
add
popa
add
cli
inc
or
sbb
loope
jne
or
mov
ss
es
in
push
jg
sbb
push
data16
nop
ljmp
outsl
rcrb
mov
outsl
sbbl
clc
cmpsb
add
enter
lods
jmp
cmpsb
sbb
mov
mov
dec
in
fldl
enter
or
cld
jmp
mulb
sarb
das
sbb
push
sub
sub
or
subb
inc
sti
mov
mov
negl
pop
cwtl
cmpb
add
fistpll
cmp
xchg
jno
stc
aas
idiv
stos
orb
xchg
jo
out
xchg
lret
push
je
or
push
add
mov
mov
popf
mov
gs
sub
xchg
sub
out
loopne
sbb
insl
push
loope
mov
jp
push
outsl
call
loope
and
aad
addb
outsl
add
cmpsb
push
iret
cmp
pusha
adc
fs
mov
jns
pusha
lock
mov
insb
add
adc
aam
ljmp
pop
inc
in
fsubr
ja
mov
fistps
rcrb
push
pop
addr16
sub
in
lock
mov
fsubs
lcall
push
pop
pop
mov
and
leave
and
mov
push
sbb
pop
pusha
sub
jl
filds
xchg
rcrb
cmp
addr16
pop
or
repz
mov
pop
pop
rcll
rcll
loop
popl
sbb
mov
out
arpl
xchg
cltd
in
push
xor
call
xchg
ljmp
lcall
and
arpl
jmp
lock
out
arpl
mov
cmp
jle
arpl
pushf
call
jnp
mov
adc
cld
imul
sub
jns
arpl
mov
jg
jae
and
data16
test
jbe
and
xor
stos
and
pop
in
add
sbb
jp
ljmp
pop
jmp
push
lret
mov
std
mov
ret
sub
arpl
arpl
push
arpl
bound
mov
push
arpl
movsb
jns
shll
add
mov
pop
mov
mov
mov
jp
xor
loopne
or
sarl
sbb
cltd
cwtl
pop
jo
icebp
in
je
jecxz
in
jns
arpl
sbb
fsubs
inc
in
sub
mov
inc
out
pop
sbb
mov
mov
fcmovu
loope
pop
jo
int3
iret
jmp
fcomps
cli
imul
and
and
cmp
ljmp
pop
addr16
adc
daa
jae
pop
stc
pop
xchg
adc
std
in
cmp
push
sar
adc
repz
pushf
xchg
ret
inc
lock
xchg
cmp
xor
bound
stos
sti
jo
popf
addr16
or
clc
jmp
gs
pusha
dec
jmp
sbb
and
testb
dec
imul
mov
movsb
pop
mov
hlt
mov
imul
data16
push
jmp
or
les
ds
fisubl
jmp
es
out
ret
jo
into
jmp
fwait
cltd
cmp
in
mov
arpl
and
pop
fwait
pop
and
xchg
popa
or
ljmp
jp
fadds
ret
add
push
mov
jle
add
sub
popa
ss
sbb
cmp
std
fdivr
lahf
out
loopne
or
pop
cmp
cltd
in
dec
lock
jmp
cmp
xchg
out
fcmovu
xor
fidivrl
cli
loop
xchg
xor
arpl
pop
insb
loop
lock
fidivrl
in
pop
gs
push
xchg
pop
cmp
pop
and
lods
dec
and
xlat
xchg
sbb
daa
addr16
outsl
mov
jmp
or
or
insb
mov
ljmp
outsl
js
push
stc
imul
aaa
push
push
push
push
fsubrs
pop
pop
daa
aaa
inc
notl
ja
xchg
mov
out
cmpsl
mov
fsubr
clc
xlat
or
sub
dec
pop
push
xchg
sbb
and
dec
mov
stos
mov
call
dec
jae
daa
dec
and
lahf
fistpl
xchg
jg
add
mov
mov
mov
movsl
test
mov
xor
lret
bound
arpl
or
in
movsb
gs
jo
into
inc
ss
lock
stc
mov
aaa
push
pushf
imul
dec
mov
and
dec
pop
shl
rclb
lret
aam
inc
mov
or
dec
gs
push
popa
mov
les
mov
shl
push
fwait
sub
fisubl
mov
mov
cmp
push
xchg
xchg
in
inc
fcompl
jne
dec
xor
aaa
pop
lods
loopne
cmp
xor
sbbl
mov
fidivs
je
push
fcomi
push
pop
sbb
test
dec
fucom
pop
push
ljmp
call
xchg
lods
cld
mov
addb
into
test
sub
pushf
fucomip
sub
les
lahf
xorl
xorl
mov
lret
adc
movsl
pop
mov
add
push
xchg
inc
add
enter
pop
push
insb
iret
xor
out
cmp
lahf
mov
pop
mov
movsl
in
adc
jecxz
inc
sbb
mov
fsubl
popf
xor
insl
push
loopne
stc
or
push
xor
cwtl
lods
hlt
cmp
ljmp
outsl
xchg
mov
imulb
fdiv
mov
fwait
push
jno
push
push
outsl
fsubs
decl
sbb
arpl
sarl
sub
incb
sahf
mov
pop
jg
jl
das
push
sub
sarl
stc
data16
inc
call
hlt
mov
inc
cmp
sar
mov
mov
mov
push
lods
daa
fisubrl
xchg
adc
sbb
out
jmpw
ja
lea
mov
nop
scas
pop
popf
aam
xchg
bound
fdivl
jb
add
push
cmp
xchg
movb
insb
daa
xchg
outsl
repnz
jg
or
add
jns
lock
pop
mov
insb
cmp
jo
jb
leave
jnp
arpl
aaa
cld
pushf
xchg
push
sbb
mov
dec
out
cmp
outsl
out
test
mov
mov
sub
mov
sarl
pop
test
push
rclb
outsl
in
data16
seta
call
mov
sbb
enter
pop
pop
mov
xchg
test
ret
mov
sti
fsts
fdivrs
pop
mov
xchg
mull
das
pop
sbb
fidivrs
xchg
dec
testl
dec
out
cwtl
dec
mov
cltd
and
jnp
cmpsb
cwtl
and
pop
mov
ficompl
and
movb
xchg
ss
aaa
outsl
sub
xchg
ss
sub
test
push
push
jne
decl
mov
out
xchg
arpl
and
daa
mov
xor
fisubs
sub
int3
int3
sbb
ds
or
sub
arpl
fisttps
mov
and
imul
popa
lcall
mov
cmp
sbb
out
and
arpl
pop
mov
push
jmp
pop
and
cmp
jmp
jo,pt
mov
mov
mov
mov
outsl
push
test
inc
fsts
daa
sbb
les
add
popa
ja
ja
imul
mov
xchg
xchg
jge
out
data16
mov
fsubs
mov
sbb
cmovl
testb
loope
mov
sub
pop
fcomps
push
adc
cmp
imul
je
sub
cmp
or
out
cmp
pop
push
mov
daa
or
sub
pop
dec
pop
loopne
push
in
jl
xor
jl
sbb
roll
pop
pop
fistpl
push
aaa
mov
stc
out
arpl
lods
outsl
xchg
inc
sbb
lea
mov
pushl
daa
ss
stc
call
push
btc
and
mov
sbb
filds
and
cld
sub
data16
xchg
xchg
es
jns
push
inc
and
push
jnp
adc
test
mov
mov
mov
jae
call
pusha
and
xor
add
pop
sbb
dec
and
dec
ljmp
xorl
cmp
mov
push
call
jae
mov
dec
cwtl
fcoms
in
cmp
mov
lods
sti
xchg
or
jne
js
mov
jmp
lret
xchg
mov
sbb
mov
xchg
sbb
shll
pop
xor
xchg
push
leave
cmpsb
loopne
scas
dec
mov
es
roll
es
add
inc
shl
ror
leave
icebp
sti
rcrl
mov
testl
ret
cli
xchg
fdivr
mov
addr16
inc
lea
inc
sub
outsb
add
aas
aaa
outsl
inc
mov
das
cld
cmpsb
xchg
push
rcrl
fcomps
ret
push
sbb
mov
mov
jno
popa
sbb
and
psubusw
pushl
out
mov
subb
inc
sub
scas
out
mov
fsubl
jl
gs
add
or
out
adc
sti
call
and
mov
outsl
cwtl
push
test
push
shrb
outsb
push
jne
sub
stos
pop
lea
arpl
pusha
arpl
pop
jo
js
mov
jmp
icebp
movsb
sahf
sti
data16
ljmp
out
js
push
insl
mov
cmp
cmpsl
fcomps
pop
faddl
and
push
push
dec
push
daa
dec
call
hlt
sub
xchg
test
and
mov
add
daa
add
push
xor
pop
jle
mov
js
xchg
scas
mov
rcll
addb
inc
mov
jns
dec
mov
sub
fwait
outsb
insl
sbb
push
cmp
or
mov
xor
inc
imull
add
rorl
fs
inc
js
dec
dec
sub
dec
setle
cwtl
mov
cmpsb
mov
fldl2t
sub
cmp
ja
push
xchg
loope
inc
pop
mov
jecxz
sti
sub
cmp
mov
mov
dec
push
in
fisttps
out
shr
jne
fmull
xchg
xchg
cmovg
imul
pop
cmpsl
mov
out
pop
xchg
push
mov
cmpsl
outsb
int3
in
push
cmp
dec
push
sahf
cs
addr16
jb
jnp
cmp
push
sbb
cmpsb
popf
inc
sub
imull
filds
aaa
rcrl
popf
cmp
jecxz
mov
cs
jp
sub
and
mov
dec
fdivrs
push
or
pop
stc
mov
je
jns
stc
aas
cmp
cs
rorl
jae
xor
nop
cli
imul
lret
test
sbb
mov
dec
xchg
push
cmp
mov
jmp
call
outsl
sbb
dec
or
movsb
dec
and
or
loop
aam
loop
inc
xchg
xor
mov
pop
pusha
sub
sahf
scas
call
dec
out
outsl
and
xor
and
pop
imul
push
pop
das
lret
mov
loopne
jle
pop
cs
pop
ljmp
data16
dec
es
cwtl
push
mov
cmp
pop
incl
negl
gs
cmpsb
in
mov
addr16
scas
mov
or
divb
jp
insb
jo
fdivrl
inc
popa
sbb
pusha
cmpsl
sbb
jnp
push
cmp
sub
add
pop
pop
sbb
push
cltd
out
aas
loop
sub
push
fstpl
jno
sbb
jnp
call
mov
mov
cltd
cmp
fcmovu
mov
mov
adc
scas
dec
aaa
push
movsb
sbb
xchg
pop
loopne
imul
cmp
mov
imul
es
adc
inc
data16
pop
test
nop
mov
push
mov
mov
xor
mov
mov
sbb
pop
ficoml
daa
pcmpeqd
xchg
int3
and
push
xchg
sbb
ficoml
mov
mov
jne
mov
cmp
jg
fldcw
pop
fcomp
push
pop
arpl
sub
aaa
out
cmp
fbld
test
or
jg
jb
cld
fnstcw
adc
xor
sbb
aaa
jne
dec
xchg
popl
xchg
inc
fistps
push
adc
xchg
icebp
xchg
jge
mov
es
fisubrl
and
xor
jne
adcb
jae
jae
add
scas
call
mov
or
fsub
rcrb
xchg
stos
scas
fdivl
outsl
js
jne
test
mov
cmp
cmp
sub
gs
lahf
mov
insl
pop
dec
lea
in
popf
inc
pop
adc
cmp
sub
mov
jg
inc
inc
rclb
jns
jb
push
or
push
fcomi
add
jne
mov
mov
and
leave
push
inc
icebp
fwait
push
mov
mull
mov
je
xchg
out
pop
jae
repz
jo
xchg
lods
cmovne
idivl
jne
cli
pop
jge
pop
arpl
js
sbb
adc
pushf
out
repz
hlt
movsb
cmp
je
aaa
repz
fistpl
inc
arpl
shlb
in
cs
mov
sti
cmp
scas
repnz
jg
add
pop
jno
pushf
decl
popa
fsubrs
iret
addr16
insb
ljmp
sbb
enter
lahf
sbb
icebp
out
ss
in
dec
push
hlt
data16
push
inc
jmp
jns
cmp
outsl
push
inc
loop
sbb
int3
push
pusha
inc
jp
xchg
mov
inc
pop
scas
mov
psubsw
pop
jno
jb
or
mov
pop
mov
sub
mov
jbe
pop
inc
data16
cld
repnz
pop
jmp
inc
push
jb
loopne
das
outsl
xchg
mov
mov
push
pop
arpl
jnp
mov
mov
mov
jbe
push
or
scas
pop
imul
ljmp
loopne
pop
adc
pop
xchg
push
xchg
mov
cmp
pop
rcr
mov
hlt
lcall
stos
sbb
fucomip
fcomps
mov
inc
pop
sbb
mov
lea
sub
leave
movsl
repz
test
sbb
mov
call
cmpsb
in
dec
cmp
push
fcmovne
cs
and
dec
in
cli
xchg
fiadds
pop
aas
pusha
inc
push
adc
out
push
xchg
and
clc
ficoml
sbb
fwait
adc
loopne
pop
in
fcomi
std
xchg
outsl
aaa
fistl
fwait
scas
cld
sub
imul
jge
pop
int3
mov
mov
cmp
cli
xchg
push
cs
ja
fwait
test
or
outsb
mov
ljmp
scas
lcall
lods
inc
sub
pop
lds
sbb
mov
pop
mov
push
faddl
xor
mov
xchg
fnstcw
pop
fdivl
scas
push
sub
fwait
adc
fstps
pop
push
sahf
lcall
or
add
arpl
mov
cmc
loope
call
jo
popa
jmp
push
xchg
inc
mov
std
push
push
xchg
shrl
into
jg
cmp
cmp
lcall
stc
or
xchg
mov
cli
mov
into
mov
xchg
pop
jecxz
rorb
les
out
adc
and
sub
push
mov
push
sti
sti
test
clc
movsb
xorl
push
fdivr
cmp
testb
stc
fwait
inc
dec
sbb
stos
jp
sub
ja
aas
nop
leave
cmp
hlt
test
pop
out
push
pop
aam
jns
sbb
push
sub
push
sbb
stos
or
data16
movl
mov
fsubrs
les
lret
mov
dec
in
lret
adc
fisttpl
in
add
gs
fsub
cvtps2pi
mov
lea
add
adc
mov
aaa
fimull
mov
fldcw
int
movsl
insl
mov
dec
add
sub
push
dec
in
ss
or
imull
loope
mov
cltd
xchg
push
notl
pop
nop
mov
sub
test
or
pushf
fsubrp
scas
push
fmull
mov
mov
call
pushf
and
sub
fsubr
or
call
jo
xchg
or
movsb
popa
jno
lock
lea
fisttps
sub
data16
jg
fidivrs
jae
lods
cmc
sub
pop
dec
and
add
mov
mulb
sbb
pop
pop
pop
sub
mov
inc
xor
xchg
fsubrs
mov
imul
fstpt
out
testl
push
call
lds
mov
fdivrs
ds
scas
pop
mov
fsubl
mov
insb
mov
fdiv
jge
mov
sub
jl
lret
push
int3
add
ljmp
clc
in
out
mov
pop
xchg
xchg
inc
movsb
jb
fs
scas
stc
xorb
jo
push
mov
gs
std
mov
call
inc
aas
pop
cmp
insl
sbb
inc
pop
cltd
scas
data16
in
icebp
lret
adc
jp
or
imul
insl
xchg
lods
gs
dec
xchg
in
add
mov
cmpsb
out
pop
in
pop
xor
rcll
hlt
out
js
mov
imul
rcl
inc
xchg
pop
pop
mov
sbb
rclb
mov
loope
clc
sar
pop
sbb
shlb
cld
mov
cmp
pop
push
es
mov
lods
mov
repz
loope
dec
pop
insb
lods
ss
or
push
je
jae
mov
jno
push
xchg
jae
and
sub
test
pop
lret
stc
add
push
js
sahf
dec
mov
les
data16
pop
push
sub
in
push
test
scas
xchg
add
add
xor
mov
out
fcoms
ret
shll
imul
fsts
push
pop
jle
lret
and
out
js
add
cwtl
ss
sub
and
int
into
ja
idiv
jne
movsl
push
pop
nop
out
insl
pop
cvtps2pd
mov
xor
out
pop
pop
fisubl
pop
mov
cmp
pop
imul
je
or
or
push
lret
xchg
lcall
scas
insl
cmpl
das
stc
mov
outsb
inc
sbb
sub
cli
jae
cmpsb
pop
jge
jecxz
in
scas
sbb
mov
bound
cmp
fidivrl
sub
scas
sti
sbb
or
mov
ljmp
int
das
insb
movsb
ljmp
xchg
pop
cs
sarb
xchg
pop
in
and
jb
ss
sti
xchg
ret
cmpsb
fists
cwtl
xchg
mov
decb
mov
popa
and
stc
addr16
flds
sbb
es
push
addr16
stc
pop
push
inc
mov
push
fsubs
addr16
mov
ja
fildl
pop
insl
aaa
out
sub
jo
ljmp
mov
test
cmp
cmpsl
out
mov
mov
pop
insl
jmp
movsl
jle
pop
and
mov
mov
movsb
pop
pop
push
gs
mov
mov
and
pop
lods
push
pop
jno
cmpsb
sub
arpl
fidivrs
lds
sub
mov
fisttpl
sbb
mov
jo
jnp
dec
sbb
out
fucomi
push
mov
enter
or
sub
mov
fldt
push
loope
out
xchg
aad
adc
cmp
xchg
call
or
fisttpl
mov
push
stc
addr16
fildl
jmp
inc
and
push
mov
mov
or
lahf
outsl
in
or
movsl
test
mov
scas
into
jmp
xchg
dec
fstpt
cs
sbb
jle
cli
in
in
fiaddl
cmp
es
ds
lock
mov
sbb
loope
mov
push
sbb
pop
std
jmp
or
push
or
clc
or
scas
sub
jecxz
mov
mov
aad
push
leave
add
js
mov
fldt
pop
fdivrs
push
gs
mov
addr16
sbb
data16
push
jbe
outsl
mov
aaa
out
jo
pop
addr16
pop
push
xchg
sbb
arpl
and
addr16
push
out
adc
sti
or
or
or
insl
inc
addr16
sbb
fwait
lahf
jo
arpl
lock
stc
push
cmp
cmp
push
cmp
push
loop
lahf
xor
or
mov
lcall
jl
insb
sarl
faddl
in
pop
jmp
pop
dec
pop
pop
std
fwait
pop
push
fs
inc
fcomps
pushf
ljmp
fcomps
add
iret
pop
mov
dec
stos
fidivrl
cld
pop
mov
aaa
mov
push
sub
xor
cltd
outsl
xor
xor
or
leave
dec
push
scas
insl
cltd
add
les
aad
cmp
xchg
cmp
push
clc
mov
inc
mov
push
idiv
shlb
ljmp
addr16
sahf
adc
mov
add
inc
cmp
inc
data16
pusha
pop
xchg
and
scas
ret
jb
js
iret
inc
xchg
or
cmpsl
fcoml
mov
pop
sti
inc
rolb
loopne
mov
jg
xchg
push
sub
imul
sub
gs
inc
jmp
decl
inc
pop
outsb
sahf
sbb
xor
sub
pusha
add
xor
jo
movsb
loope
shll
fadd
int3
lret
jecxz
pop
rsm
dec
loope
in
pop
push
cmp
xlat
sub
scas
mov
test
outsl
pmaddwd
cmp
mov
leave
inc
push
jo
cmp
loope
mov
push
sbb
xchg
xchg
cld
push
mov
xor
cs
scas
xorl
mov
out
mov
or
add
fistps
xchg
gs
jbe
lea
mov
fsub
cs
movsl
jl
push
jmp
testl
jp
adc
jnp
aam
ret
xchg
test
pusha
fimull
push
sbb
ja
mov
je
or
cmp
cmc
cmpsb
mov
std
lcall
add
movhps
sbb
mov
nop
sarb
mov
icebp
lcall
adcl
leave
outsl
pop
ret
pushf
xor
dec
xchg
jmp
sbb
cmp
daa
out
out
jb
lds
push
cmp
mov
jge
mov
and
in
scas
push
jp
mov
sub
mov
adc
out
pop
lcall
iret
xchg
push
insl
dec
mov
arpl
shr
out
mov
mov
cmp
js
mov
movsb
fisubrs
inc
aad
fs
mov
cwtl
mov
jo
sub
clc
pop
xchg
bnd
and
sbb
lcall
push
imul
cmp
js
leave
mov
test
mov
dec
aaa
push
addr16
or
mov
leave
jp
pusha
fadd
pop
dec
fldt
sub
arpl
enter
mov
adc
sub
pop
outsl
and
arpl
mov
aam
mov
daa
xchg
into
loope
cltd
inc
dec
test
pop
imul
pop
pop
scas
fsubrp
and
xchg
pop
enter
enter
rorb
sbb
subb
jmp
ds
mov
inc
movsb
or
jge
pop
mov
jp
cmpsb
sub
dec
gs
sar
xchg
lods
cmc
add
fs
push
pop
sbb
dec
pop
cmp
stos
cmpsl
enter
fstps
xchg
std
in
test
call
testl
dec
aam
icebp
mov
pusha
andb
and
test
cmp
sub
scas
pop
mov
jne
outsl
sub
and
clc
pop
fcoms
xchg
mov
pop
lret
pop
gs
inc
test
add
mov
jmp
ds
fsubl
push
add
shll
or
xchg
inc
in
leave
or
cltd
xchg
mov
repz
add
cwtl
add
dec
das
sarl
adc
not
jmp
imul
mov
movsl
dec
imull
lret
faddl
cmc
dec
hlt
xor
cwtl
xchg
cmpsl
jae
addr16
push
add
shll
add
clc
lcall
ljmp
jno
and
ja
bound
in
cwtl
pop
and
lods
and
jae
sub
shrl
mov
aas
scas
xchg
enter
popa
pop
inc
gs
mov
add
xorl
cmp
mov
test
mov
ljmp
lahf
test
adc
xchg
inc
sub
loopne
or
lock
sbb
clc
inc
push
outsb
mov
fdivrs
lods
mov
mov
fildl
sbbb
scas
popf
push
pop
movsb
mov
in
and
gs
mov
mov
and
int
outsb
iret
es
and
into
pcmpgtw
cs
test
or
imul
cmpl
fsubrs
adc
loope
jns
outsl
xchg
incl
lds
arpl
lahf
jg
adc
loope
fisubs
sbb
or
pop
inc
scas
sahf
xchg
jb
fstl
mov
pop
insb
les
xor
xchg
pop
fsubs
or
push
lods
mov
xchg
xchg
adc
push
fsts
lahf
mov
orb
pop
aad
out
gs
mov
push
in
pop
xchg
jmp
adc
adc
xor
push
stc
mov
mov
aaa
iret
cmpb
outsb
fwait
jmp
pop
add
add
outsl
lods
xchg
mov
mov
pop
cs
fs
mov
pushw
cmp
push
or
insb
xchg
sahf
out
insl
call
scas
pop
into
cmpsl
dec
loope
xor
pushf
shrb
adc
vpunpckhbw
mov
dec
clc
call
sub
jmp
enter
repnz
dec
roll
cli
inc
icebp
pop
scas
in
sub
lea
push
scas
loopne
fisubrl
xchg
mov
sub
leave
imul
popf
push
mov
ret
cmp
mov
fisttpll
mov
int
sbb
addr16
mov
sub
dec
fs
sub
ljmp
jne
addb
xor
lahf
cmp
es
std
sub
int3
stc
in
xchg
fwait
mov
cli
sbb
cli
or
mov
and
imul
or
leave
jecxz
and
push
dec
pop
inc
pop
add
aas
mov
sahf
jg
rorl
out
adc
js
jle
sub
mul
orl
pop
pop
lret
sub
push
cs
xor
xor
das
fs
stc
ljmp
mov
rorl
ja
mov
jns
orb
hlt
dec
inc
sahf
cwtl
stos
ret
iret
jno
mulb
int3
daa
mov
sbb
xchg
ds
xor
mov
imul
in
fwait
sub
fildl
sahf
scas
add
mov
cmp
push
ss
and
int
arpl
sbb
inc
xor
stc
shrl
mov
shrb
sub
dec
add
xchg
inc
cwtl
negb
test
adc
mov
jmp
jle
pop
sbb
out
mov
mov
negb
mov
inc
mov
insl
lret
mov
add
stos
mov
addr16
stos
mov
inc
cmpsl
fsubl
into
pop
pop
mov
mov
int3
cli
pop
xchg
cmp
mov
inc
cmp
dec
das
xchg
call
jl
orl
sub
jmp
or
inc
mov
cmp
adc
stc
xchg
pop
aas
mov
pushf
pop
pusha
sbb
mov
leave
pop
xchg
scas
imul
sbb
cmp
idivb
mov
jo
xlat
xchg
dec
fistpll
dec
cmp
std
adc
ss
popf
xchg
pop
data16
jg
in
sub
cmp
call
int3
mov
out
pop
jne
jmp
mov
ds
jb
sub
cld
jns
pop
dec
adc
mov
cltd
rcrl
mov
xor
addl
arpl
test
sub
pop
pop
jb
fsubs
sahf
pop
inc
mov
pop
test
repz
pop
lods
sbb
loop
xor
shr
repnz
xchg
cmp
sub
cltd
enter
xor
das
mov
lret
xchg
xchg
pop
out
jne
sbb
lods
push
sub
daa
sbb
inc
cmp
add
icebp
and
cmp
sbb
push
imul
sti
sub
jmp
stos
les
aas
insl
call
in
imul
mov
pusha
add
inc
cmp
pop
mov
fmuls
imul
mov
sahf
addr16
loope
insl
enter
sbb
scas
jp
jmp
xor
in
push
fmuls
scas
inc
imul
shrb
into
jp
scas
dec
out
xor
xor
cmpsl
mov
jp
pop
mov
cmpsl
or
jmp
xchg
and
dec
pop
mov
pop
mov
bound
add
subl
xor
push
out
loop
mov
jmp
jmp
jbe
loopne
sub
fcmovnu
in
test
mov
outsl
mov
ficompl
loop
outsb
sub
mov
movsl
ss
pmaddwd
fbstp
test
test
mov
cmp
xor
mov
das
xchg
popf
gs
dec
cltd
clc
stc
mov
out
sbb
repz
sub
push
ret
pusha
mov
xor
cmpsb
sbb
lds
in
push
sub
jns
xor
scas
in
push
into
fnstsw
and
xchg
out
push
sub
cwtl
add
jecxz
clc
push
fstps
sbb
xchg
sbb
cmpsb
lock
xor
jo
outsl
and
out
and
es
pop
clc
fists
loope
bswap
mov
xchg
repnz
cmp
arpl
add
notl
lret
fld
jo
cld
mov
dec
hlt
push
mov
dec
pop
imull
sahf
pushf
lds
je
mov
cmpsb
shlb
sub
jmp
mov
mov
movsl
xchg
jnp
mov
stos
es
and
ret
out
lahf
cmp
or
ds
pop
sub
push
mov
movb
xor
inc
push
scas
sub
dec
mov
jae
call
les
out
stos
out
mov
lock
mov
clc
pop
or
aam
pop
lds
sbb
jne
movsl
loopne
push
nop
jge
sti
or
into
shlb
arpl
sbb
lods
in
jl,pt
out
ja
mov
mov
xor
xchg
jg
sbb
jp
outsl
pop
faddl
out
fdivr
and
pop
xchg
adc
mov
pop
out
gs
subl
xchg
or
pop
fistl
negl
arpl
dec
mov
mov
loop
inc
cmp
daa
sub
and
lret
xchg
adc
dec
mov
pushf
and
push
sbb
fstpt
xor
lea
sti
neg
and
loopne
sub
inc
in
rcr
outsl
and
cmpsb
add
es
pop
mov
add
int3
xchg
mov
inc
cltd
lods
fistpll
push
lods
lahf
xlat
imul
jb
ljmp
dec
stc
mov
mov
or
addr16
sbb
into
fiaddl
lret
sti
fwait
fwait
mov
mov
pushf
imul
andl
lods
test
rolb
mov
sub
xchg
lds
and
movsl
jne
stos
mov
jo
push
adc
cwtl
pop
aad
mov
jmp
pop
and
into
jecxz
out
sub
cmp
nop
xchg
pusha
push
cmp
sub
adc
mov
lock
lcallw
mov
out
adc
jecxz
push
test
cmp
fsubrl
cmp
push
pop
adc
pop
lahf
mov
or
rcrl
out
mov
dec
jge
cs
fdiv
sarl
lea
nop
xchg
xchg
lods
mov
push
sub
dec
nop
pop
sbbl
dec
mov
or
or
sbb
pop
inc
pushf
js
in
or
or
jnp
mov
test
mov
cs
sub
inc
jmp
dec
ss
sbb
cmpsb
out
arpl
lea
jl
es
inc
call
or
insb
pop
ljmp
sahf
daa
jg
lods
cltd
test
add
jle
jnp
je
out
pushf
xchg
sti
mov
in
cld
dec
mov
sbb
push
aaa
fcomps
out
jne
dec
arpl
lahf
xchg
dec
fsubs
pop
push
pop
mov
cltd
jecxz
sbb
sbb
dec
sub
imull
push
and
leave
in
cmp
add
rcrl
insb
xor
ss
push
clc
mov
int3
or
outsl
mov
paddusw
imul
ficoml
pop
aam
testl
in
in
pop
pop
cmpsl
mov
xchg
gs
mov
or
dec
and
add
cwtl
pop
fstpt
ret
jnp
and
and
int3
jb
add
push
jle
xor
clc
data16
pop
pop
inc
xchg
inc
dec
sahf
xchg
and
or
test
stc
push
movb
cld
mov
push
mov
outsl
dec
enter
idivb
mov
xor
mov
bound
mov
xor
fcoml
mov
pop
outsl
mov
and
add
xchg
inc
mov
push
pop
pop
add
sub
imul
jo
sub
dec
dec
or
add
dec
or
push
push
push
arpl
das
imul
out
popa
addr16
push
insb
pop
sub
or
jecxz
int3
xchg
mov
add
adc
or
push
inc
pop
rorb
mov
mov
xchg
sti
adc
loop
jo
je
stos
push
ss
add
and
sahf
cltd
shrb
xchg
fmull
movsb
xchg
cmc
pop
mov
mov
cmpsl
push
sbb
jp
icebp
out
jno
loop
imul
sub
or
lds
or
sbbl
pop
sbb
lds
add
pop
adc
jns
bound
mov
push
cmp
cmc
das
loopne
cmpsb
das
push
testb
dec
xchg
test
cmp
mov
mov
in
aam
sbb
lea
push
mov
fistpll
and
gs
test
insb
ret
leave
clc
push
call
fadd
in
mov
xor
pop
icebp
jns
sub
icebp
testl
fdivs
das
xchg
add
ds
sbb
repnz
cmpsb
sahf
orl
enter
push
clc
hlt
sub
mov
icebp
sti
scas
daa
jae
aas
mull
xchg
add
jecxz
mov
mov
and
pop
aaa
pop
add
mov
pop
add
pop
cmp
icebp
leave
and
pop
out
cwtl
shl
lcall
out
repz
pop
aas
and
outsl
cmp
les
and
test
mov
xor
jne
sbb
xchg
jmp
cs
jne
add
and
fdivrl
push
decl
xlat
cli
mov
pop
popf
sbb
orl
lods
mov
push
mov
mov
push
sbb
imulb
mov
pop
xchg
fildll
mov
sub
mov
mov
adc
add
outsl
push
shlb
sbb
or
clc
fiadds
sub
add
repz
in
adc
pop
inc
call
mov
pop
pop
xchg
add
add
outsl
out
outsb
addr16
negl
pop
jl
arpl
sbb
into
out
ret
xchg
loopne
jnp
cmpsb
adc
in
mov
jns
ret
lds
cmpsb
lock
sbb
xor
xchg
jle
inc
fsubs
test
or
or
inc
loopne
xchg
pop
sbb
inc
fbstp
clc
lcall
imul
dec
inc
ficoms
lods
mov
jmp
popa
cmp
xor
pop
dec
sbb
add
jge
inc
ret
outsl
fwait
dec
cmp
addr16
jbe
push
ds
xchg
js
and
jnp
lods
cmp
pop
fistpll
popf
cmp
mov
adc
mov
jns
fdiv
andl
mov
sub
or
xor
ds
xchg
adc
ja
das
fisttpll
sbb
imul
mov
pop
aaa
lahf
gs
pop
fldt
rcll
js
fnstcw
scas
fsub
dec
mov
pusha
pop
push
repnz
ds
imul
lahf
sbb
cmp
int3
clc
fadds
ljmp
andb
fsubrs
outsl
loopne,pn
and
scas
pusha
pop
std
loope
fucom
repnz
push
sub
sbbl
dec
in
dec
dec
xlat
scas
btc
leave
xchg
clc
inc
imul
add
lds
xchg
shlb
inc
jle
lcall
sub
cltd
xchg
fcoms
repz
in
mov
mov
lahf
mov
xchg
sub
aam
add
subb
shll
fwait
stc
ljmp
jecxz
xchg
in
aad
xlat
sbb
cmpsb
popa
outsw
sub
es
enter
mov
leave
push
cmp
add
mov
xchg
mov
pop
div
mov
sti
pcmpeqb
sbb
and
adc
dec
push
into
lret
pop
hlt
adc
dec
sahf
ljmp
leave
mov
push
add
mov
pushf
les
mov
loopne
pop
mov
je
mov
insb
mov
xor
cltd
cmp
jmp
xchg
mov
jne
out
insb
pusha
out
je
push
add
ja
fildll
cld
int3
rcr
push
imull
pop
pop
fldenv
sbb
jbe
negb
or
fisubrl
cmpsb
or
lret
dec
into
and
mov
push
shlb
dec
in
mov
lret
icebp
jbe
cmpsb
aad
push
and
jno
stos
jg
xchg
push
sbb
xor
rolb
loope
sub
fldt
xor
scas
pop
and
adc
aam
xor
push
faddl
sahf
adc
push
cwtl
rorl
int3
cld
dec
add
push
test
sbb
das
outsl
dec
fisubl
xor
jnp
mov
adc
out
cwtl
sahf
xchg
gs
jns
ljmp
xchg
sti
jmp
mov
add
mov
sbb
dec
cmp
out
mov
stos
fdivrl
sbb
rcpps
and
in
xchg
out
dec
gs
mov
and
clc
inc
or
fsts
jno
dec
jo
shll
in
or
arpl
pop
cmc
mov
inc
xchg
int3
mov
pop
adc
inc
jns
sbb
adc
push
js
int3
sbb
sub
push
addr16
fsubs
repnz
mov
pop
test
push
cmp
mov
sub
cmp
lds
mov
imul
sti
into
mov
fistpl
out
frstor
mov
or
js
ret
adc
sbb
mov
sub
mov
inc
sub
stc
pusha
stc
cld
push
cmp
or
jge
sar
cmp
je
lret
hlt
dec
int3
pop
cld
push
lret
cmp
dec
sub
fwait
add
mov
pop
and
sbb
vzeroall
popa
push
sub
push
adc
mov
loop
add
push
xchg
push
jne
or
loope
sub
lds
fdivrs
cmpsl
sbb
sahf
or
jnp
hlt
int3
push
mov
int3
scas
fcompl
lret
push
or
pop
lods
xor
mov
mov
cmp
push
mov
xchg
ss
lahf
xchg
lds
push
repz
sub
in
push
out
jge
sub
test
or
mov
pop
pop
hlt
add
inc
inc
stos
and
dec
scas
pop
xlat
into
mov
cmp
jecxz
ja,pn
jo
and
ljmp
xchg
sbb
pop
mov
test
int3
xor
daa
push
mov
mov
mov
push
sbb
push
mov
pop
rolb
sub
xchg
jge
lahf
add
sbb
out
pop
or
mov
sub
movsb
xor
push
fnstcw
arpl
pop
int
in
fldcw
test
lods
sbb
mov
fs
push
xchg
jne
cmp
xor
dec
out
cmp
movsb
aaa
xchg
inc
into
jae
out
dec
xchg
adc
sbb
jmp
jbe
pusha
jns
fadd
fidivs
lret
dec
xor
cmp
lea
outsl
xchg
int3
js
stc
icebp
loopne
ja
mov
sbb
or
jecxz
add
mov
pop
mov
cmp
test
aaa
out
jo
push
clc
adcl
sti
mov
sti
gs
xchg
and
jbe
clc
cmc
andb
cmp
loop
mov
adc
es
jl
addr16
lds
xchg
loope
jle
mov
lods
outsb
pop
leave
hlt
mov
jne
ss
daa
and
push
mov
into
int3
lock
dec
mov
enter
dec
addr16
stc
push
cmp
mov
add
fstpt
jg
loopne,pt
inc
push
mov
sbb
add
mov
mov
addr16
pop
movsb
or
sub
mov
addr16
fstpt
jmp
arpl
push
xchg
fistpl
sahf
fisubs
je
push
add
push
mov
fisubs
jl
inc
addr16
add
sbb
mov
or
call
shlb
mov
sub
int
ljmp
out
leave
mov
mov
cmpsl
xor
jmp
add
xchg
fcoml
dec
fsubrs
fstpt
jl
fstpt
insb
jne
lahf
movsl
in
push
fistpl
divb
mov
mov
and
push
push
jbe
jmp
pop
mov
sbb
fcom
int
icebp
popa
push
adc
outsb
cmp
mov
out
das
jge
cmp
mov
hlt
cltd
sub
rcr
cltd
loope
test
pop
jl
adc
fadd
jnp
fistpll
jg
jbe
cmp
fisttps
or
cmp
pop
divb
stos
sub
and
cli
outsl
addr16
loope
xchg
xchg
addr16
leave
gs
into
jns
or
stc
push
mov
movsl
insl
out
mov
pop
jmp
in
sarb
mov
or
jp
in
lret
jne
loop
sbb
ljmp
fstps
pusha
push
ljmp
mov
cmp
sbb
cli
out
sbbl
push
push
or
outsl
mov
push
adc
sbb
cmp
sub
pop
mov
movaps
sub
pop
pop
lods
xchg
fsts
insb
pop
push
adc
ds
add
push
jne
scas
arpl
lock
fsub
mov
iret
sbb
call
stc
jl
pop
outsb
sbb
push
stos
jo
jo
xor
fs
cli
jmp
fcomps
cs
fdivs
in
push
je
lahf
call
arpl
outsl
mov
ss
adc
mov
jne
mov
rcl
icebp
jo
outsl
xchg
jo
pop
jae
outsl
data16
or
sti
adcb
sub
shll
call
and
arpl
jo
outsb
inc
jo
or
outsl
addr16
xchg
ss
add
fucomp
cmp
push
jbe
arpl
addb
mov
sub
lret
insl
outsl
addr16
or
call
add
xor
adc
cltd
nop
outsl
jmp
and
cmpb
push
outsb
mov
mov
push
fldt
mov
push
jmp
mov
outsl
sahf
fdiv
sbb
fists
outsb
sub
int3
call
call
jge
bound
fisttps
add
scas
dec
pop
cmp
bound
mov
jbe
xchg
insb
fucomp
pop
and
cmp
loopne
in
pop
pop
cmp
push
pop
push
test
fstps
mov
jo
ljmp
cwtl
xor
pop
in
sti
mov
leave
stc
pop
sti
stc
mul
test
sbb
loopne
cmp
ljmp
mov
jo
imul
repz
es
lcall
std
pusha
mov
test
push
add
lods
xchg
push
inc
addr16
xor
outsl
cmc
outsl
cmpsb
pop
addr16
call
sbb
addr16
sbb
cmp
sbb
pusha
jo
push
stc
cmp
ljmp
addr16
or
imull
push
js
shlb
push
rep
mov
stos
jmp
bound
addr16
xor
es
test
ljmp
push
addr16
jo
insb
ljmp
jo
je
inc
jo
jb
gs
stc
cli
imul
or
daa
sbb
insb
jmp
jo
jl
in
sbb
mov
out
jno
lahf
lahf
addr16
push
data16
inc
sub
in
pop
and
adc
pop
cmp
outsl
dec
mov
adc
push
sbb
fstpt
in
and
xchg
xchg
pop
sbb
inc
outsl
jge
out
cmp
inc
pop
insb
lahf
xchg
in
pop
rcrb
push
pop
aam
mov
fadds
jmp
push
cwtl
andb
fsubrs
jmp
scas
pop
daa
aas
pop
jne
loopne
leave
scas
xor
pop
or
push
pop
fwait
gs
rol
jae
ret
inc
mov
push
ljmp
pusha
pop
xor
icebp
jnp
cmpsl
into
popa
into
and
adc
push
stc
lcall
inc
push
insl
xrelease
movsb
adc
jmp
mov
jae
pop
cmp
sub
xchg
pop
insb
aaa
loope
in
inc
shlb
loopne
rolb
push
adc
or
rcrl
das
lods
loopne
inc
mov
sbb
pop
and
mov
into
jne
xchg
sahf
loop
jp
aaa
fcoml
mov
pop
testb
mov
addr16
mov
add
rcl
gs
fcomps
jmp
jl
loope
inc
pop
fistl
jmp
arpl
pop
pop
pop
fwait
pop
aas
jmp
pop
std
pop
push
pop
pushf
data16
sbb
fucom
and
addr16
jl
ss
pop
pop
ss
fdivrp
iret
pop
dec
jno
and
pop
pop
and
in
pop
pop
gs
pop
xchg
inc
stos
push
add
shll
loope
fs
inc
test
jp
flds
fidivrs
pmaddwd
ljmp
pop
dec
mov
fcomps
ret
fsub
rcr
in
loop
aam
push
hlt
in
pusha
sub
in
cmc
loope
call
or
and
adc
pop
testb
negb
mov
or
mov
xchg
sub
pop
gs
in
jle
mov
dec
sti
inc
adc
mov
in
cli
into
or
scas
sub
inc
mov
fmuls
or
push
and
xchg
jg
fcomps
push
dec
pop
ret
jge
and
shrb
push
addr16
or
lods
mov
jmp
pop
xchg
pushf
pop
xchg
pushf
dec
or
cmp
cmpsl
push
leave
mov
mov
out
jmp
les
pop
rcrb
jnp
int3
xchg
mull
jmp
xchg
mov
lcall
sbb
pop
push
daa
fsubl
inc
add
push
cld
cs
mov
or
lcallw
push
popa
movb
andb
or
pop
fstps
mov
inc
sbb
xchg
aaa
pop
and
sbb
stos
aaa
jnp
loopne
xchg
jecxz
xchg
loope
pop
xchg
pop
imul
jmp
inc
ljmp
loopnew
call
aaa
cmc
imul
or
jb
mov
xor
lcall
mov
jb
test
gs
call
movsl
cmpsl
xchg
pop
sub
cmp
jmp
push
das
or
out
aaa
jmp
addr16
aad
dec
stos
fstp
fbld
push
hlt
jnp
js
push
adc
leave
rorb
push
jbe
mov
and
jne
sbb
cmpb
jo
out
faddl
paddw
push
aad
xchg
out
mov
lret
lcall
cmp
and
out
sub
xchg
cmp
sub
das
int
test
jns
add
les
jle
sub
ljmp
or
sub
and
out
jge
test
fdivrs
xchg
sbb
mov
dec
gs
roll
or
test
jl
sbb
or
mov
ljmp
lds
rclb
iret
pop
xchg
pop
sti
xchg
xchg
repz
cld
xor
add
inc
jl,pn
sub
sub
push
gs
push
inc
sbb
pop
dec
gs
or
jg
push
xchg
fldenv
popl
out
xchg
outsl
ficoms
sbb
out
inc
adc
pusha
jge
xchg
lods
outsl
pop
test
mov
sbb
add
cmp
xchg
insb
cmp
xor
or
pmaddwd
negl
pop
out
push
jl
aas
fs
inc
push
imul
inc
sti
mov
cmp
fcom
mov
addr16
cmp
xchg
call
sti
push
or
pop
cmp
push
cmpsl
scas
fdivrs
js
fstps
into
dec
fs
stc
ja
sbb
fsubrs
mov
call
xchg
cmp
pop
pop
insb
into
fmuls
adc
xchg
popl
imul
or
add
mov
outsl
pop
push
int3
jno
ds
jl
mov
sub
shr
cld
ds
jge
test
in
in
ret
inc
int3
sub
enter
imul
movsb
leave
sbb
pop
mov
stos
movsb
jno
lret
push
fs
sahf
cld
and
push
les
lea
lcall
pop
hlt
scas
cli
aas
cltd
push
sbb
push
fadd
ljmp
imull
lods
cmp
fwait
movsl
ss
pop
mov
ds
fwait
mull
and
aam
inc
shr
push
push
test
and
inc
jbe
gs
jle
dec
mov
jl
imul
pop
sub
or
andl
out
out
or
stc
cld
cmpsb
push
fucomip
inc
dec
cs
push
push
lret
imull
repz
scas
and
imull
mov
ja
push
pop
das
push
lahf
mov
add
shll
test
mov
sarb
dec
cmp
gs
sbb
fcomps
outsl
sbb
push
ds
cwtl
negl
cltd
test
shlb
inc
rcr
jge
ret
xchg
and
cmp
pop
mov
lock
sbb
sbb
pop
xchg
or
arpl
in
cmp
pop
mov
sbb
mov
jae
xor
iret
jnp
es
mull
mov
sbb
mov
jno
scas
mov
out
and
gs
add
test
lahf
in
add
aaa
pop
arpl
and
sub
cmc
std
pop
stc
sub
fstpt
fidivrl
out
dec
lds
pusha
insb
ljmp
mov
arpl
jo
int
add
lcall
test
andl
leave
mov
mov
and
test
int
pop
cmpsb
cmpsl
mov
xchg
mov
pop
jge
mov
xchg
and
leave
jge
jno
ss
xor
add
popf
dec
sbb
lret
shrl
outsl
mov
pop
addr16
ss
mov
and
loopne
cmp
xchg
xor
sub
sub
clc
xchg
pop
xchg
cmp
out
xchg
cs
pop
cwtl
lcall
push
outsl
mov
jno
cmp
xchg
out
cltd
stos
sbb
and
loope
cld
add
pop
cwtl
push
outsl
pop
in
cwtl
stos
xchg
or
or
and
test
pop
sbb
out
rcll
cmp
mov
mov
mov
lock
inc
scas
rclb
outsl
or
je
int
dec
mov
js
inc
mov
imul
call
sub
fnstsw
mov
dec
out
clc
outsl
aaa
cmp
aas
out
xor
jb
dec
jl
cwtl
add
cmpsb
notl
xchg
int3
jae
mov
addb
push
mov
lret
setnp
mov
dec
adc
enter
adc
into
and
xchg
rol
andl
sbb
mov
jno
mov
sub
sub
scas
mov
push
pushf
arpl
xchg
xchg
int
push
cmpsl
xchg
jmp
pop
icebp
cmp
pop
cmpsl
stos
sti
or
loopne
pop
jl
call
push
lret
jg
sbb
fxch
aaa
pop
out
shrl
cld
in
cmp
mov
mov
jae
cld
scas
inc
inc
fnstenv
insb
stc
sbb
adc
scas
xchg
jecxz
cmpsb
gs
ret
jmp
add
out
xchg
imul
sub
daa
mov
push
icebp
subl
lret
loopne
imul
stos
aam
push
xchg
out
push
cmc
outsl
stos
dec
push
cmp
jmp
pop
add
or
shlb
sarl
clc
sbb
pop
movsb
jg
ds
fwait
jo
cltd
movsl
mov
or
and
lods
dec
sub
aam
mov
hlt
jl
lods
pop
adc
inc
push
stc
stc
pop
ljmp
pop
inc
rorl
xor
sahf
or
cmpsl
pop
sbb
clc
bound
fidivs
cmpsb
xchg
push
std
ja
push
pop
daa
sti
int3
mov
mov
mov
div
dec
stos
xchg
jg
cmc
push
pop
sbb
inc
clc
and
insb
or
inc
cwtl
sub
cmp
out
insb
shll
repnz
imul
cmpsb
adc
clc
or
nop
jb
add
stos
fmul
sbb
push
jl
cmp
inc
adc
xor
pop
dec
imul
imul
lds
or
popf
mov
adc
pop
sub
mov
ss
out
arpl
sbb
push
mov
cmc
or
cld
mov
je
pop
pop
out
dec
xchg
sub
fsubs
bound
int3
mov
adc
fimuls
lret
lret
fsubs
ret
out
pusha
in
fsubp
rcrl
rcrl
rcrl
rcr
in
data16
or
pop
arpl
ja
sti
iret
loope
adc
jmp
sbb
jmp
fiadds
adc
cmovno
lds
int3
dec
shlb
cld
clc
cmp
notl
or
push
out
in
fldcw
sti
or
adc
je
bound
call
adcb
sbb
dec
sbb
sahf
testl
sub
mov
dec
repz
out
addl
mov
pop
roll
arpl
pop
jne
rorl
mov
rclb
fistl
fdivl
test
push
sahf
sub
arpl
sahf
std
rsm
outsl
loop
fldcw
dec
shlb
or
imulb
jp
xchg
jp
clc
jb
mov
push
pop
ds
into
out
aaa
adc
aam
and
gs
addr16
int3
adc
rcrb
push
jbe
iret
aam
xor
or
dec
in
and
dec
movsl
add
xchg
loope
outsl
js
cs
cmp
xor
mov
push
adc
adc
out
in
sub
adc
cwtl
clc
cmp
sub
ja
cwtl
and
or
xchg
jbe
adc
stc
mov
lock
cwtl
int3
popa
xchg
lcall
jno
xor
pop
icebp
and
int
and
repnz
movnti
mov
push
pop
push
es
pusha
sbb
insl
xchg
enterw
xchg
lods
cwtl
clc
or
repnz
jle
xor
subb
and
ds
jns
adc
repz
pop
push
insl
pop
fldl2e
or
xchg
mov
and
add
adc
cs
mov
add
xchg
stos
sub
xchg
lock
push
stc
jle
jecxz
pcmpeqw
push
addr16
xchg
adc
nop
leave
add
or
or
xchg
icebp
pop
xchg
leave
mov
scas
ja
jb
cmp
scas
jl
rcrb
inc
jbe
cs
pop
sbb
rcll
mov
adcl
cmp
mov
mov
xchg
push
cwtl
dec
jge
or
outsl
clc
pop
xchg
andl
jns
jne
int3
sbb
push
je
stos
add
sbbb
dec
decl
test
cmp
sbb
das
pop
xor
mov
sti
dec
sahf
or
aas
dec
ftst
jnp
scas
pop
cmc
cwtl
inc
movsl
stc
cltd
int3
ret
fbld
cmpsb
pop
movsl
out
das
dec
pop
cltd
in
mov
or
inc
mov
inc
jne
mov
pop
das
mov
jae
es
push
int3
pop
dec
cwtl
pusha
ja
addr16
lcall
out
push
sahf
xchg
cs
pop
dec
sub
cmp
jb
aam
movb
push
xor
fsubl
adc
dec
inc
aas
inc
and
pop
inc
mov
push
movsb
cmpsl
imul
test
fs
jbe
aam
divl
xor
cli
pop
fldt
into
movsl
pop
xchg
xchg
cltd
in
push
insb
test
xchg
test
adc
loopne
shrb
inc
popa
into
sbb
jb
mov
sbb
add
lret
fnsave
cmpsb
mov
add
fsubs
arpl
push
pop
xor
push
adc
jae
ja
out
dec
movsl
ds
test
icebp
add
sub
xchg
cmc
lcall
addl
andb
xchg
push
repnz
adc
jecxz
push
sahf
add
inc
pop
push
jo
fs
les
test
xor
mov
inc
sub
pop
pop
popf
mov
aas
fs
in
dec
movsb
hlt
or
pop
add
pop
ds
or
xchg
xchg
cs
push
inc
cmpsl
in
xchg
cli
dec
das
scas
push
notl
pop
fucomip
stos
mov
jp
or
lret
push
sbb
sbb
jo
push
push
sti
into
call
rolb
add
sbb
scas
gs
push
add
adc
jp
sbb
dec
sub
out
sub
cmc
jns
and
faddl
in
jl
push
push
add
stos
push
add
leave
rcl
in
and
imul
inc
jne
inc
mov
rorb
and
cmpsb
sbb
mov
stc
addr16
sbb
mov
mov
inc
cmp
sbb
movsb
ret
xchg
mov
fwait
outsl
outsl
or
jp
adc
bound
and
pusha
mov
das
imul
call
mov
mov
add
fistl
mov
jo
ljmp
ficoms
cltd
cli
jmp
fidivl
call
mov
xchg
cmc
push
mov
idiv
addr16
mov
fidivl
jae
mov
ljmp
fidivl
jmp
mov
call
dec
inc
fisubrl
outsb
sbb
mov
shl
jmp
aad
mov
hlt
cmc
jbe
push
push
loope
fcompl
mov
jmp
pushf
jp
lret
inc
fisubl
stos
jg
push
fisubl
jmp
mov
fimull
adc
xchg
cli
sub
flds
jns
shr
fdivp
dec
xor
sbb
inc
ficoml
sbb
mov
iret
sbbb
and
call
cmc
hlt
divl
mov
jmp
bound
jecxz
std
xchg
sub
mov
adc
xchg
test
das
pop
dec
dec
lahf
into
fldcw
ljmp
sbb
scas
movsb
pop
stos
lock
and
mov
addr16
mov
sbb
les
addr16
cmpsb
pop
dec
gs
xchg
ret
in
jg
dec
mov
in
movsl
pop
lret
sbb
cmpsb
push
imull
and
jmp
icebp
pop
xchg
cmp
fstpt
fistpl
mov
xor
outsl
xchg
or
lcall
adc
lret
rcr
fs
scas
cld
stos
fmul
shrl
pop
in
in
inc
pop
xchg
movsb
push
xor
jmp
jge
inc
outsw
in
adc
out
lods
stos
fdivrl
daa
inc
fsubs
addl
fimuls
sub
fdivp
jge
jecxz
push
fidivs
movaps
inc
outsb
stc
cmp
mov
pushf
mov
loopne
jo
movsl
and
data16
pop
cltd
stc
in
push
dec
inc
loop
mov
xor
jmp
add
inc
loop
and
imulb
sub
lret
mov
js
inc
sbb
jmp
pop
push
push
test
pop
xchg
test
icebp
lea
cmp
mov
sbb
jp
jmp
lds
pushf
jmp
push
int3
icebp
pop
int
cwtl
outsb
xor
pushl
addr16
push
sti
sub
movsb
dec
stos
add
movsl
faddl
xchg
sbb
aad
xor
push
or
ljmp
out
mov
sti
cmp
cltd
dec
stos
mov
mov
gs
mov
lret
inc
jns
cmp
or
jl
scas
ja
aaa
fcoms
int3
sti
mov
arpl
cmp
xorl
mov
fcoms
mov
jno
push
outsb
pop
jl
movsb
pusha
in
push
xlat
aas
pop
notl
pop
pop
popf
scas
scas
mov
popa
sub
jbe
pop
filds
fsubs
cmp
push
fsubrp
aas
push
xchg
mov
mov
ljmp
xor
cmp
fs
xor
sub
stos
je
ja
xchg
pop
js
cmp
push
cmc
mov
mov
cmp
jge
rcll
test
xchg
adc
cs
and
sbb
jo
mov
pop
aaa
call
inc
push
lea
fisubs
in
push
and
pop
cmc
and
imul
jmp
rolb
arpl
push
add
sub
add
cmpsb
inc
or
fcomps
jnp
jb
fs
push
gs
jle
test
repz
xchg
jecxz
push
xor
cs
in
leave
push
fisubrs
xchg
mov
jnp
popa
push
and
and
cmp
rorb
shll
orl
or
sub
and
repz
bound
orl
cmp
adc
lcall
push
mov
iret
dec
adc
or
dec
outsl
adc
mov
aad
andnps
xchg
lcall
test
mov
scas
imul
fs
cmc
cld
cmpsb
orl
stos
push
gs
mov
in
out
sbb
sbb
shlb
pop
jae
insl
insl
nop
jno
int3
hlt
sub
out
or
in
test
imul
mov
in
fmul
or
jge
pop
push
adc
xor
xlat
xor
sbb
sahf
jl
adc
add
loopne
js
outsb
fildl
cwtl
popa
arpl
sub
int
sbb
xchg
sbb
ror
call
pop
jle
xchg
pop
in
imul
dec
mov
ljmp
xchg
inc
mov
jno
pop
cmp
push
popa
mov
jmp
xchg
mov
mov
sbb
and
jge
and
inc
stc
pop
int3
sbb
std
stos
pop
xchg
into
cmp
sub
clc
out
inc
jbe
xlat
mov
adc
add
xchg
sbb
jecxz
jb
sub
aaa
sbb
stc
leave
daa
int3
clc
aad
mov
lock
in
fists
push
and
pop
push
loopnew
sbb
dec
inc
incl
mov
and
sbb
cmp
mov
sbbb
fistpl
mov
mov
in
sbb
stos
add
adc
pop
mov
int3
lods
leave
dec
mov
pop
mov
lods
cmp
xor
test
pop
cld
scas
lock
mov
jmp
mov
daa
lds
dec
jecxz
xchg
jecxz
lods
sbb
cwtl
cmp
int
arpl
scas
xor
pusha
sti
adc
xchg
loop
mov
leave
repz
fsubr
lahf
lock
stos
push
or
pop
inc
lret
mov
xchg
leave
jbe
or
ret
sub
fisttpll
movsb
adc
roll
cltd
fsubr
push
or
mov
pop
addr16
push
inc
addr16
enter
stc
lret
daa
fsubrs
sti
aaa
stc
mov
push
cmp
ds
mov
in
cmp
clc
sub
call
xchg
sti
hlt
orl
iret
inc
push
mov
outsl
and
in
sub
push
mull
clc
cli
pop
std
sbbl
jne
lds
pop
or
xor
sub
ficomps
push
cs
cs
lcall
sbb
scas
mov
dec
inc
inc
out
cs
popl
xchg
scas
addr16
mov
imull
hlt
or
rorb
loopne
loopne
fildll
and
mov
out
mov
jb
repz
into
push
subb
jns
ja
mov
mov
fs
mov
outsl
cmp
cwtl
cwtl
xchg
movsb
cmpsb
in
aam
stos
xchg
xchg
fcoms
or
mov
out
loope
pop
outsl
sub
mov
adc
lss
clc
es
out
or
sbb
mov
pop
xor
or
sahf
jae
popa
in
bound
mov
xchg
addr16
sbb
fwait
push
fistpl
pop
cs
pop
pushf
sbb
stc
cmpsb
addr16
push
sti
clc
dec
call
lds
stos
popf
insl
test
mov
sbb
fistpll
mov
rclb
inc
pop
cmp
ja
leave
scas
add
ss
mov
ds
aaa
pop
cs
xor
push
xchg
scas
xor
cmp
inc
cmpsb
cmp
sti
fstpt
sbb
xchg
fistpll
in
mov
pop
push
sbb
or
shrl
mov
mov
pop
xor
sti
andb
lods
push
fisttpll
pop
mov
dec
sbb
sbb
in
sysret
push
inc
mov
mov
ret
cmp
cld
adc
faddl
mov
inc
ja
daa
sub
cltd
mov
xor
cli
adc
jle
stos
pop
or
call
leave
fxam
fucomi
pop
out
pop
pop
sbb
mov
icebp
adc
push
sbb
in
xor
repz
pop
stc
add
lcall
enter
pop
aas
addr16
std
icebp
leave
ja
icebp
and
scas
jne
push
loopne
xchg
mov
lock
out
loop
adc
jmp
add
add
jne
xchg
repz
mov
jmp
loope
fwait
lret
pusha
sbb
outsl
mov
adc
jo
pusha
into
insb
dec
sbb
sub
out
cwtl
mov
or
and
sbb
stos
dec
jle
loopne
sbb
sbb
and
ss
pmaddwd
dec
jae
pop
push
in
pusha
popf
xor
outsl
loop
sub
mov
jo
xchg
sbb
mov
push
add
mov
lea
and
pusha
push
mov
and
rcrb
sti
jb
lods
xchg
in
fmull
daa
or
push
jl
fisubs
test
lods
push
repz
popa
jg
xchg
stc
sub
cs
xlat
mov
dec
add
sbb
pop
arpl
das
pop
jge
insb
movsl
ja
sbb
jg
fcmovnb
jne
imul
push
fildl
testl
mov
dec
or
pop
cli
sbb
fcomps
sbbl
sbb
dec
call
std
cmp
popa
inc
cmpsl
lcall
lret
and
gs
mov
cmp
adc
lods
mov
pop
mov
fdivp
rcrb
rcpps
adc
push
push
and
dec
add
ds
inc
lock
mov
popa
xchg
and
pop
fptan
mov
sbb
lods
in
dec
sub
rorl
xchg
cmp
outsb
mov
sub
aaa
push
pop
pop
sbb
adc
out
mov
jp
lahf
sbb
pop
inc
stos
sub
mov
push
ret
jbe
pushf
bound
cld
mov
add
push
and
imul
imul
iret
scas
lods
push
mov
sbb
hlt
mov
pusha
jb
sub
sar
sbb
xchg
sbbl
outsl
stos
adc
or
scas
leave
xor
adc
jb
and
in
push
jb
sbb
cmp
enter
stos
dec
add
cmp
sbb
je
mov
jecxz
mov
scas
movsl
ss
xchg
hlt
jp
adc
imul
jle
pop
and
xchg
inc
loop
pusha
mov
popa
inc
adc
push
cmp
mov
fprem
push
sbb
xchg
inc
xchg
xor
mov
mov
movaps
mov
inc
add
mov
cwtl
mov
lcall
cmc
xor
sub
sub
jno
aas
xchg
xor
cmp
sarl
xchg
pop
ss
aam
scas
je
pop
repz
bound
cs
dec
lods
cmp
cmpsl
inc
jg
pop
jae
je
jmp
xor
mov
aam
fstl
and
or
xchg
jae
cld
mov
mov
popf
in
push
xchg
dec
js
jle
sar
pop
pop
movsl
test
jp
pop
mov
cmp
repnz
nop
jmp
gs
adc
cmpsb
cmc
or
add
sub
insl
cmp
inc
sub
adc
or
ret
mov
or
lahf
pusha
in
lret
or
addr16
xchg
cwtl
cmp
cltd
sub
ja
dec
cmp
ret
jle
mov
jge
sbb
mov
adc
jg
and
imull
fld
jae
dec
mov
lcall
jge
xchg
jne
insb
out
inc
mov
jecxz
sbb
xchg
test
in
test
xor
sub
jp
jbe
jns
push
push
jbe
call
loopne
xchg
mov
adc
jl
mov
testl
lds
xor
outsl
mov
inc
cs
jnp
lock
xchg
inc
xchg
jmp
mov
mov
ja
pop
fisttpl
mov
xchg
js
pop
push
xchg
out
push
sti
xor
pushf
movsl
imul
fisttpl
pop
xchg
xor
dec
xor
outsb
pop
push
jecxz
pushf
jge
fmul
and
loop
scas
pop
pop
inc
in
sbb
xor
or
daa
repnz
jns
inc
pop
xor
xchg
pop
stos
jae
in
or
sub
mov
pop
bswap
sub
add
pop
fildll
aas
dec
in
mov
mov
test
or
lock
stos
pop
sbb
mov
arpl
in
add
cmp
mov
cwtl
stc
mov
in
fsubl
loopne
das
pop
add
cmpsb
sbb
mov
push
ja
fbld
and
lock
sub
in
push
clc
outsl
test
arpl
bound
push
and
mov
xchg
push
and
jns
into
adc
popf
mov
push
outsb
push
mov
arpl
lock
cmpsb
lret
pop
pop
notl
insb
push
fcomp
xor
aad
or
mov
push
xchg
ret
xor
pop
arpl
sbb
dec
aas
mov
mov
jo
call
fcompl
push
adc
scas
idivl
subl
movsb
cmpsl
mov
fldenv
cwtl
xchg
xor
cmp
jnp
mov
pop
inc
movsb
scas
cmp
or
jne
arpl
pop
pop
nop
outsl
push
call
pop
js
or
jne
mov
sbb
js
jp
dec
jno
jmp
mov
aad
cltd
jb
aas
lahf
xor
notb
add
out
inc
insb
test
jbe
mov
lret
jb
mov
push
xchg
mov
adc
and
adc
jmp
loope
xchg
push
pop
aaa
ja
fwait
icebp
jl
mov
inc
sbb
add
adc
aad
adc
pop
repz
push
pushf
mov
pop
out
mov
sahf
idivl
sbb
mov
pop
cmp
ficomps
rcrb
xchg
add
xor
scas
rorb
outsb
cmp
cmp
fwait
cmp
arpl
and
push
ja
push
push
or
pop
xchg
test
xchg
add
cmp
jo
je
or
mov
jl
jp
pop
mov
adcl
pop
testl
cwtl
xor
mov
push
addr16
ficomps
mov
lret
xchg
ret
clc
pop
cmp
pop
sbb
sub
cli
push
inc
out
out
xchg
mov
mov
mov
lret
lods
lods
cmp
pop
imul
sbb
outsb
test
xchg
mov
cld
data16
shrb
pop
pop
add
repz
jo
pop
and
shll
jmp
cmp
cmpsl
cli
sti
mov
mull
aas
imul
lahf
jmp
add
sbb
xchg
pusha
mov
cwtl
rcrb
cmp
lea
lods
sub
push
push
push
fs
pop
je
js
negl
shll
pusha
xchg
cmp
sub
mov
loopne
and
popa
jnp
sbbl
pushf
icebp
psrad
call
xchg
bound
loope
lock
subb
xor
mov
movsb
in
dec
pop
and
xchg
inc
xor
imul
das
pusha
rcrl
sti
jle
sbb
mov
js
scas
adc
fisttpl
ret
mov
mov
mov
nop
or
add
and
lret
xchg
shrb
mov
mov
mov
sahf
jp
stos
inc
outsl
shll
cmp
cmp
xor
test
frstor
xchg
decb
adc
fnstcw
mov
out
sbbl
out
test
inc
ss
lcall
pop
sbb
sti
jl
popw
lret
gs
ds
xchg
push
imul
push
call
pop
push
push
dec
repz
xchg
das
and
ret
pop
lcall
mov
xchg
les
das
fcompl
ret
gs
mov
cmp
out
out
and
jecxz
lods
xchg
xchg
mov
je
inc
jl
sub
and
in
or
arpl
sbb
test
int3
cmp
mov
out
pop
pmaddwd
jg
and
out
xchg
dec
xchg
neg
repnz
pop
cmp
mov
sub
ljmp
fcomps
popf
mov
sbb
mov
mov
addr16
outsl
sub
push
mov
mov
xchg
lret
fcomp
jae
ss
sbbl
mov
je
mov
dec
pop
je
mov
mov
addr16
jns
push
in
mov
mov
jne
and
int
and
lock
sarl
int3
xchg
outsb
add
idiv
cs
scas
test
fadds
test
scas
das
and
and
xchg
push
push
hlt
imulb
mov
sbb
sbb
or
cli
cld
in
xchg
push
add
scas
sub
outsl
fldenv
shrl
fcompl
cmp
sub
pop
or
popa
clc
icebp
and
add
movsl
xor
mov
lods
jbe
cmpsl
and
daa
pop
mov
shll
jo
les
rclb
testl
jae
sub
pusha
bound
loope
pop
cmp
dec
out
mov
or
andb
mov
xchg
movsl
shrb
fistpl
js
mov
mov
pop
clc
test
jecxz
fmuls
xor
inc
push
clc
cmp
lods
iret
and
add
pop
inc
fnstenv
outsb
outsb
push
pop
lret
call
push
aaa
js
scas
lock
xchg
jmp
cmp
or
adc
push
or
arpl
cmp
and
sti
scas
xor
mov
loop
sub
ret
filds
int
or
mov
inc
sahf
or
sahf
icebp
icebp
cmp
in
mov
sub
sbb
shlb
push
mov
xchg
xlat
fptan
push
cwtl
scas
sbb
fmuls
hlt
push
jge
cs
inc
insl
push
clc
icebp
inc
out
xchg
dec
push
dec
movsb
aas
das
push
mov
sbb
xor
dec
popf
inc
mov
sbb
fcomps
jmp
mov
test
mov
mov
cli
int3
pop
call
cmp
xchg
push
jno
cs
and
sbb
xchg
daa
push
jge
xchg
clc
pop
stc
scas
inc
sub
xlat
jg
pop
or
fsubs
jne
adc
sbb
sbb
jmp
loopne
in
fcmove
sbb
in
xchg
jmp
lcall
fimull
stc
mov
add
fwait
aad
pop
jmp
or
or
imul
mov
sub
dec
lcall
jns
or
pop
inc
movsbl
xchg
not
jmp
mov
mov
dec
fmull
adc
daa
pop
daa
dec
mov
fs
imul
fsubl
repnz
js
sbb
pop
cld
pop
shlb
xchg
cmp
loope
push
xchg
adc
inc
fsubrs
jne
push
sub
cltd
ret
sbb
push
cmp
mov
sub
sub
mov
dec
test
lds
dec
push
inc
fistpll
push
dec
xchg
pop
loope
or
lahf
out
cs
xor
inc
pop
leave
add
cmp
imul
lret
push
cmpl
shrb
add
mov
mov
ss
test
xchg
test
pop
jl,pn
lcall
outsl
call
es
cmpl
leave
fmul
jnp
aas
stos
cmp
cli
mov
in
inc
inc
sub
es
inc
in
jecxz
or
jae
push
push
inc
addr16
add
xchg
push
rclb
js
psubw
cltd
cld
add
icebp
mov
lcall
mov
sarb
rorb
fnstcw
xor
int3
mov
or
ja
clc
push
push
cmp
and
adc
nop
pop
loope
add
ds
mov
or
notl
in
pop
xchg
cwtl
cltd
loope
fcompl
adc
jg
jge
inc
inc
or
call
repz
jbe
xchg
jbe
xchg
adc
js
pop
loopne
pop
or
test
rcll
addr16
int3
in
cmp
xor
add
loope
out
pop
scas
in
xacquire
push
xor
dec
cmp
push
mov
insb
jb
cmp
xchg
test
loopne
cmp
insb
mov
pop
aaa
repnz
pop
cmpb
add
pop
or
scas
push
cmc
pop
sbb
out
xor
cmpsl
cli
push
nop
cmpsl
mov
pop
jp
mull
fistps
clc
into
fwait
shl
sbb
lods
jno
push
sbb
xor
out
jmp
sub
xlat
daa
push
sub
jle
cld
sub
push
sub
movsl
cmp
mov
ljmp
cmp
inc
clc
pop
popa
dec
mov
push
int
cmpl
jmp
add
test
into
dec
in
mov
add
cli
out
lock
pop
clc
out
out
pop
aas
lock
sbb
pop
outsl
pop
clc
negl
pop
pop
jg
pop
inc
arpl
fcom
sbb
mov
daa
xchg
and
je
jns
cmpsl
push
sbb
fnstcw
push
lret
mov
dec
sbb
lahf
push
jns
push
mov
pop
loope
add
and
xchg
addr16
cmp
aam
push
mull
loopne
mov
inc
push
or
jmp
pop
cmpsb
dec
push
jle
mov
pop
jbe
mov
dec
adc
lret
fdivs
or
stc
pop
sarb
inc
jge
pop
push
pop
in
mov
adc
dec
xchg
gs
out
sbb
lcall
call
jecxz
addr16
jmp
jl
push
out
cwtl
fidivs
hlt
sbb
jnp
jb
add
imul
pop
imul
hlt
icebp
and
popa
rorl
out
push
lsl
lea
jg
into
rorl
in
xchg
dec
ret
jg
pop
cwtl
xchg
push
xchg
inc
mov
xchg
sub
mov
sub
out
sbb
sub
roll
cmp
jns
lods
push
add
loope
enter
ret
test
cmp
xchg
pop
and
and
fstps
fsubl
lods
pop
ret
sub
dec
pop
xor
inc
mov
mov
pop
mov
or
cld
fiaddl
stos
add
scas
add
aad
jb
into
sbb
inc
dec
and
ja
je
mov
xchg
inc
fmull
xchg
pop
mov
jl
es
sub
mov
mov
cld
jecxz
icebp
mov
push
xchg
jo
and
inc
stos
out
adc
dec
pop
pop
adc
fs
cltd
dec
mov
or
jecxz
es
mov
add
mov
fdiv
sbb
stc
lret
pop
xor
jg
jae
jnp
jmp
xor
xchg
inc
stc
cmp
cmovge
fistpll
jge
sbb
outsb
outsl
fstpl
repz
jbe,pt
inc
orl
sbb
lahf
jecxz
cwtl
sub
mov
or
pop
aas
cli
mov
and
mov
nop
mov
or
movsl
rcrl
outsb
icebp
test
scas
out
sti
push
test
cmp
and
sti
sbb
push
mov
shr
add
pushf
imul
sbb
and
jae
sub
xor
std
and
adc
or
roll
mov
push
fsts
scas
ror
or
clc
xchg
jo
cltd
sbb
cmp
call
mov
xor
pop
fnstcw
lods
inc
mov
cmpsl
popf
cmp
out
test
pop
add
or
inc
cmp
call
add
rcll
pop
lods
fdivrs
jbe
les
outsl
or
xchg
mov
gs
stos
fidivrs
lret
mov
popa
mov
dec
je
pop
pop
push
sbb
and
cmc
test
inc
or
mov
sahf
sbb
dec
iret
adc
fildll
outsl
xchg
pusha
mov
xchg
xchg
add
sbb
xor
in
jg
pusha
xlat
dec
int3
mov
gs
jmp
mov
jnp
inc
and
imul
test
jge
sub
jne
fistl
outsl
pop
fwait
inc
call
pop
imul
cmp
cmp
xor
pop
fwait
pop
jecxz
mov
push
mov
pop
jle
sbb
repnz
sbb
push
xchg
xchg
sbb
mov
fnstsw
jnp
xchg
movsb
xchg
lretw
scas
aas
leave
dec
inc
or
mov
icebp
or
hlt
mov
jb
xchg
aam
push
add
pop
mov
cmpsl
popa
stos
fsubr
push
inc
dec
push
out
jns
push
js,pn
movsl
lret
pop
popf
mov
or
mov
lret
clc
cs
out
cmpsb
pop
xchg
loopne
call
dec
leave
pop
and
dec
xchg
push
js
test
mov
inc
xchg
sbb
push
gs
and
add
js
insl
push
imul
push
mov
add
imul
int
push
jmp
gs
xor
imulb
jne
jnp
cs
or
push
pop
out
mov
jns
pop
outsl
enter
cmpsb
mov
cmp
ja
cmpsb
sub
fisubl
pop
repnz
ret
outsl
shlb
xor
fstpl
imul
mov
push
xchg
pop
rolb
or
hlt
sbbb
aam
or
pop
data16
repz
out
loopne
inc
ret
xchg
mov
pop
and
lret
arpl
xchg
mov
scas
inc
lcall
dec
sub
je
add
lcall
cltd
shlw
bound
and
add
clc
xchg
movsl
rclb
xchg
cmp
ret
sub
es
in
inc
lret
out
sub
call
fisttpl
scas
or
daa
inc
inc
addr16
stc
fdivrl
out
fstps
mov
icebp
es
sbb
fcoml
dec
pop
pop
mov
hlt
dec
and
das
and
add
push
scas
out
push
jmp
sub
das
push
push
fildll
dec
lods
pop
ficoml
in
test
adc
sbb
push
sub
loopne
jae
or
arpl
pop
jmp
ja
loope
sbb
cli
push
cltd
add
or
and
test
clc
lret
dec
xchg
dec
cmp
cmpsl
pop
fsubrp
cmp
call
arpl
aas
and
add
lcall
bnd
int
outsl
movsb
sbb
pop
xchg
or
jae
mov
loope
js
xor
xor
in
dec
mov
mov
jae
out
jnp
decl
cmp
mov
sbbl
loop
sub
rorb
xor
sti
pop
push
push
leave
mov
sbb
fsin
lods
push
fstpt
sbb
mov
rorb
mov
pop
es
fidivrl
or
push
sahf
js
cmp
mov
lcall
test
mov
adc
mov
pop
cli
mov
outsl
fnstcw
and
add
push
dec
sbb
jnp
lahf
pusha
push
mov
addb
adc
sbb
jbe
dec
jp
insb
pop
lcall
pop
xchg
mov
mov
aas
imul
and
push
call
sbb
loopne
cli
pop
sbbb
insb
or
lock
cmpsl
fcomi
inc
pop
push
and
push
xchg
pusha
out
fcom
enter
dec
cmovae
mov
scas
mov
bound
push
pop
pop
aad
aas
xchg
popa
rorb
mov
sbb
leave
das
jle
shl
scas
cs
cmp
int3
sbb
mov
cwtl
divps
fcomps
fcomps
pop
mov
xchg
repz
mov
stc
out
fistl
lea
out
sbb
test
fs
cs
rorb
imul
push
sbb
outsl
stos
enter
jge
int3
fnstsw
in
mov
pop
cmp
and
cmpl
inc
mov
xchg
mov
mov
mov
cmp
mov
cld
push
mov
bound
test
je
scas
adc
cmpsl
out
test
data16
mov
and
aas
cmovge
jl
shll
iret
fmuls
pusha
jg
sbb
xor
pop
mov
icebp
negb
mov
jno
jns
loop
xor
cmp
repz
sti
imul
imul
loop
loopne
aas
dec
mov
cmpsb
addr16
enter
jecxz
xchg
in
mov
loopne
add
cld
mov
out
aad
mov
je,pn
or
in
mov
pop
or
test
push
loope
gs
ss
inc
and
push
pop
cmp
aaa
in
add
imul
test
fsubl
aam
xor
pop
dec
hlt
pop
ss
mov
sahf
mov
or
mov
and
dec
push
repnz
lahf
inc
fcompl
test
pop
leave
cwtl
sub
fadds
push
imulb
inc
mov
pop
out
xchg
inc
ds
pop
xor
mov
jle
lock
or
test
inc
mov
pop
int3
lahf
gs
or
sub
mov
mov
pop
leave
mov
jl
sahf
jbe
call
push
push
cmp
inc
mov
pop
pop
aad
popa
adc
pop
sub
sub
mov
ds
cld
sti
cltd
call
cwtl
push
jg
sbb
push
dec
add
dec
je
add
dec
jno
cmc
std
and
push
push
sbb
pop
xor
and
cwtl
xchg
in
and
addr16
test
arpl
es
cltd
adc
add
fsubl
mov
sahf
jge
testl
addr16
jl
es
or
xchg
jae
jns
push
cmp
out
dec
lea
cmp
jns
dec
call
mov
cwtl
inc
test
push
iret
loopne
mov
popa
gs
and
and
add
jno
push
jge
mov
jge
loope
pop
mov
flds
popa
sahf
mov
ret
insb
lahf
daa
cmp
mov
lcall
ss
dec
xchg
add
jmp
popa
fdivs
push
adc
scas
dec
or
ja
push
push
cltd
data16
mov
jecxz
cs
pop
int3
lret
jmp
idiv
insl
sbb
stos
cltd
ds
push
dec
call
cmp
cmpsl
jmp
ffree
jg
add
mov
xchg
sbb
xchg
outsb
jb
push
or
int3
mov
call
xchg
lock
xchg
lcall
fwait
push
mov
sbb
xchg
mov
push
fld
push
sbb
mov
or
mov
mov
loopne
clc
jp
cld
test
ss
mov
jl
or
jge
sub
pop
pushf
sbb
inc
lret
pop
adcl
cmpl
push
test
mov
mov
fisttpl
push
test
sahf
and
sbb
insb
or
and
mov
jns
push
test
fistl
sbb
xchg
imul
or
lea
jecxz
lret
sbb
clc
idiv
dec
xchg
fsubr
sahf
xor
or
cli
and
int3
fsin
popl
mov
add
movsl
jno
pop
sub
pextrw
cltd
mov
sbb
jb
cmp
cmp
push
repz
cs
xor
pop
int3
xchg
jmp
xchg
inc
pop
cmpsl
mov
push
sub
mov
stos
mov
ljmpw
out
lods
data16
cmpsl
leave
mov
sub
xchg
jne
jb
test
scas
dec
jp
push
mov
xor
aad
push
or
mov
sti
jge
packuswb
xchg
pop
ds
fildl
icebp
cmpsl
outsl
mov
mov
xor
inc
sub
fstps
mov
or
insb
push
divb
dec
xchg
xor
leave
sbb
js
jl
aad
pop
pop
pusha
mov
push
mov
inc
pushf
jle
push
push
sub
mov
cmp
out
mov
mov
jb
jmp
xchg
mov
pop
cmp
dec
pop
mov
add
cmp
addr16
cwtl
testl
jo
call
lahf
xchg
test
jne
adc
aam
push
les
and
mov
pop
mov
mov
and
cmpsb
cs
not
and
xchg
add
and
jae
push
fstps
cmpsl
and
stos
xchg
in
aam
xchg
or
pop
sbb
sbb
subb
scas
push
lods
dec
call
mov
adc
lea
adc
pop
xchg
jle
cmp
sbb
orl
add
xlat
sbb
rorl
jl
mov
lods
icebp
push
xor
push
jnp
or
jge
cmp
jne
scas
mov
mov
mov
sahf
xor
aas
std
into
stc
sub
pop
sbb
pushf
dec
int3
push
adc
mov
mov
dec
pop
or
or
stos
mov
dec
decl
icebp
sahf
pop
jno
pop
xor
and
jg
xchg
sub
lret
in
and
mov
into
pop
test
xor
bound
inc
sbb
gs
mov
sbb
shl
mov
jne
dec
jne
pop
mov
outsb
sbb
stos
testl
add
out
or
ljmp
inc
adc
push
dec
push
push
sahf
pop
mov
cmp
int
popa
cmp
shlb
sbb
inc
mov
xor
cwtl
jo
ret
push
pushf
dec
loope
xchg
dec
xrelease
rcrb
xor
lahf
push
imul
dec
out
cmc
xor
inc
arpl
push
mov
shl
std
cld
cs
xchg
xchg
divb
fcmovnbe
fdivl
clc
movsb
add
or
js
dec
ret
negl
jnp
fldenv
ds
lret
cs
test
sub
cwtl
xchg
shlb
fdivrp
cmovns
and
call
cmp
lcall
inc
pop
sub
popl
add
sub
xorl
push
cmc
add
movb
inc
jo
xor
jbe
out
lret
sbb
mov
lock
in
inc
dec
sbb
pop
push
cmp
cmp
sub
gs
xchg
push
out
lret
shll
ja
lcall
xchg
mov
add
int3
loopne
or
fcoml
xchg
and
cmpsb
data16
gs
das
outsl
icebp
ds
mov
inc
xacquire
mov
ret
push
je
leave
imul
out
sbb
cmp
mov
and
js
inc
in
sbb
mov
lcall
sub
cmp
xchg
pop
test
pop
cmpsl
pop
jl
dec
hlt
sbb
cmpl
imul
mov
jge,pn
and
and
aad
or
add
ret
testb
outsl
adc
push
out
mov
xor
adc
stos
ret
inc
xor
mov
inc
das
cmp
or
data16
negb
add
xor
pop
sub
xor
cmpl
pop
sbb
insl
out
mov
xchg
mov
push
iret
sarl
pop
mov
mov
xchg
push
cmp
or
je
clc
in
loop
fdivl
out
push
inc
lret
sub
test
stc
mov
push
das
add
push
lea
inc
fs
push
pop
mov
addr16
leave
repz
outsb
ds
addr16
call
test
jnp
and
fsubrl
xchg
add
and
icebp
ja
jns
int
jp
rcl
mov
fs
es
push
or
ljmp
std
arpl
out
sub
out
fxch
jne
movsb
sbb
rolb
add
push
push
mov
cmp
sbb
enter
sbb
sti
pushf
xchg
fdivrs
mov
mov
shlb
and
or
loopne
sub
xor
adc
shrd
mulb
adcb
push
out
xchg
setle
les
mov
and
int
xchg
mov
outsl
adc
pop
push
cmpsb
dec
jmp
jl
mov
or
inc
pop
dec
das
int3
sbb
dec
mov
sbb
fiaddl
cld
out
mov
mull
cmp
xchg
add
mulb
call
test
ljmp
inc
std
and
out
repz
mov
push
js
les
lahf
sub
mov
push
sbb
and
test
pushf
sbb
loope
pop
pop
popa
fwait
cwtl
add
decb
xor
std
jmp
insl
push
in
sti
sbb
loopne
outsl
inc
int3
push
bound
outsb
mov
push
daa
into
jnp
in
fs
stc
test
push
sti
test
test
mov
cmpsb
out
push
jae
nop
repnz
mov
negb
mov
lea
movsb
outsb
or
jl
fbld
outsl
add
call
add
mov
stos
mov
jae
dec
emms
pop
iret
lcall
hlt
and
into
sbb
cmp
ljmp
cmp
jg
cwtl
sbb
jnp
push
mov
dec
push
or
mov
test
sbb
push
cltd
sahf
push
mov
sahf
das
xor
mov
mov
sbb
or
leave
gs
sahf
sub
dec
movsl
mov
sbb
pop
das
jns
lcall
cmp
enter
push
cmpsb
sub
cmp
xchg
xchg
inc
std
adcl
push
jnp
push
int
inc
inc
testl
das
test
push
adc
es
out
inc
lret
mov
jp
gs
pop
adc
lret
test
test
roll
std
addr16
jbe,pn
pop
mov
sbb
dec
mov
and
loopne
cmpsb
xor
mov
ljmp
mov
leave
dec
lock
inc
fisttpl
lahf
call
bound
outsl
adc
push
aaa
bound
aaa
stos
fs
cmp
test
pop
jmp
pop
bound
outsb
dec
stc
sub
repz
fsubl
hlt
outsl
jg
clc
in
loopne
aas
jle
test
in
sbb
jae
push
leave
add
into
hlt
pop
sub
lahf
call
loop
pop
fdivl
cmp
pop
mov
sti
pavgw
lcall
arpl
dec
pop
adc
lahf
adc
mov
sbbl
gs
adc
add
jmp
xchg
mov
lcall
clc
insb
ds
decl
dec
jmp
pop
xchg
sahf
inc
test
lahf
out
cmp
fstps
fisubl
pop
lret
fdiv
les
gs
sbb
jb
xchg
repz
cld
fldenv
inc
gs
bound
jb
in
std
xor
imul
or
inc
pop
fwait
aaa
fwait
lahf
test
xchg
sub
clc
inc
lahf
mov
lret
aaa
ret
dec
clc
dec
jge
cs
int
sub
out
xchg
or
or
mov
or
pop
movsb
lock
leave
add
lret
shrl
in
clc
cmp
mov
cmpsb
sbb
add
fcoml
gs
loop
sbb
cmpsb
sbb
xor
push
idivb
lods
jle
or
jecxz
mov
gs
mov
mov
jae
jmp
sub
in
add
add
mov
mov
inc
jns
clc
or
xor
mov
push
mov
jnp
fdivrl
sbb
sbb
stos
pop
addr16
or
loope
xor
inc
mov
lcall
loopne
cmp
lret
sbb
mov
daa
outsb
push
repz
addl
bound
insl
xchg
aaa
sahf
sahf
inc
clc
dec
adc
xorl
xchg
ret
rcr
sub
loopne
adc
mov
ja
incb
jno
or
jle
mov
sbb
xchg
in
cmp
insl
in
push
dec
sub
mov
rcl
ss
fs
imul
je
mov
push
loop
scas
dec
lret
and
subb
lret
mov
jo
sbb
jmp
xor
dec
les
pushf
mov
stos
mov
in
cmp
pop
cmp
repz
or
in
repz
test
mov
xor
or
sub
cli
dec
movsb
mov
jae
test
xchg
fs
mov
fsubs
sar
mov
sub
inc
nopl
arpl
jl
xor
in
cmp
cwtl
stc
cs
or
mov
cmp
mov
cmp
cmp
sbb
subl
lret
jmp
fwait
fwait
and
imul
sub
mov
test
mov
arpl
insb
pop
push
cmpsl
out
or
mov
fdivr
dec
dec
mov
push
imul
mov
push
cmp
sbb
jnp
push
fwait
stos
pop
test
xor
adc
push
aas
notl
and
out
scas
pop
idivl
mov
jmp
hlt
push
jne
icebp
mov
out
lock
push
stc
js
pop
fcoms
arpl
scas
jg
mov
sbb
scas
fisttpl
mov
dec
cmp
adc
push
dec
fdiv
out
stos
popa
jecxz
add
mov
adc
pop
loope
cmp
pop
mov
popa
repz
gs
mov
imull
mov
cmpsb
daa
loop
fldenv
pop
xor
fs
sahf
idivl
pop
push
pop
fsub
sahf
repnz
popf
int3
push
imul
lret
and
fcompl
leave
push
sbb
cmpsl
push
aad
in
cmp
test
jmp
mov
out
pop
mov
out
pop
adc
or
add
mov
sbb
out
insl
imul
sbb
div
lods
jb
outsl
out
mov
scas
xchg
sbb
cwtl
hlt
dec
rol
and
sub
pop
dec
inc
add
lock
adc
jnp
loopne
xchg
xor
pop
aaa
dec
imul
or
rcr
cmpsl
pushf
jp
in
lcall
clc
movsb
out
call
add
mov
mov
inc
cmp
fs
outsl
dec
pop
icebp
aaa
fildll
cwtl
es
ljmp
adc
push
sbb
fbstp
jge
outsl
adc
jg
pushw
push
lcall
popa
bound
out
jl
js
inc
sbb
mov
sbb
aaa
rcrb
mov
mov
mov
push
neg
and
scas
jmp
std
or
push
jg
mov
fadds
aaa
jno
iret
push
push
jo
cmp
arpl
dec
data16
fadd
pop
call
call
sbb
fninit
sub
and
jnp
ja
push
cmp
and
je
mov
cmp
pop
jg
js
aaa
add
out
scas
movsl
out
pop
clc
pop
xchg
and
and
scas
fsubr
aaa
cmp
fisttps
subl
fcom
inc
lds
mov
mov
outsl
sbb
sbb
xchg
rcl
pop
daa
add
sub
hlt
test
cli
enter
addb
xor
sbb
cmpsl
and
enter
jbe
sbb
inc
das
xchg
cli
arpl
pusha
pop
cmpsl
lods
cmpsb
cmp
add
ja
clc
push
cmp
cmp
lret
out
fldt
dec
pop
hlt
pop
or
pop
cmc
leave
cmp
in
cli
inc
pop
adc
pop
pop
arpl
mov
mov
dec
loopne
push
sti
pop
cld
push
pop
sbb
xchg
mov
pop
push
mov
mov
imulb
sti
adc
shrl
xor
inc
push
pushf
je
mov
jb
outsb
stos
mov
pushf
fldenv
cld
mov
lret
lahf
repnz
mov
xlat
pusha
xchg
xchg
sbb
pop
inc
dec
add
sub
lds
nop
and
push
adc
icebp
xchg
in
jbe
mov
sbb
dec
push
and
xor
or
adc
mov
cld
mov
in
sbb
push
enter
int3
add
ja
add
inc
das
xor
or
sarb
mov
je
xchg
push
aaa
lock
dec
ja
dec
xor
rcll
clc
xchg
cs
push
mov
loopne
andb
mov
std
ror
jmp
hlt
mov
insl
jbe
inc
sbb
movsb
cmpsb
out
xor
int3
imul
xor
out
sbb
xchg
sub
xor
pop
outsb
push
scas
out
clc
repnz
idivl
cs
stc
scas
xchg
inc
dec
mov
xchg
outsb
jo
jae
sub
pop
fldz
fistl
cmp
mov
dec
sub
mov
inc
sub
fsubl
cwtl
scas
mov
jae
scas
cld
stos
mov
sbb
test
aad
jmpw
ja
ds
sarb
shlb
and
sub
mov
add
or
push
clc
inc
push
sbb
lock
cmc
sub
pop
pop
mov
cmpsl
mov
test
test
cmpsb
push
outsl
idivl
push
ss
lods
push
dec
sub
aad
subb
cmp
sub
or
or
cwtl
das
push
mov
pop
mov
sub
outsb
mov
jmp
mov
cmp
xchg
test
fucom
pop
adc
jns
movsl
jnp
pop
rcll
aaa
clc
and
push
mov
sub
inc
shll
adc
or
pop
enter
mov
pop
xchg
outsl
add
cmp
lds
xchg
mov
cmp
cmp
inc
push
inc
fisubrs
jge
jmp
mov
and
sub
jmp
inc
leave
and
cld
sbb
sbb
sbb
ret
outsl
enter
jae
dec
insl
sti
pop
les
test
dec
or
and
scas
loop
dec
sahf
iret
mul
int3
clc
jmp
sub
scas
jle
lds
out
lds
sub
cmp
pop
sub
hlt
cmp
xchg
test
mov
fsubr
cli
jae
jp
stos
dec
push
and
je
mov
cmc
inc
mov
push
jns
sti
enter
addr16
dec
test
out
push
iret
jl
mov
jae
mov
aaa
testb
imul
ficompl
mov
cmp
dec
outsl
pop
clc
stos
ds
insb
incb
inc
cmpsb
mov
cmpsl
mov
arpl
into
ljmp
aas
test
lods
or
cmp
dec
xchg
ds
pop
mov
pop
adc
fs
xchg
sti
fadds
jmp
loop
jp
pop
mov
adc
mov
out
xor
mov
jnp
repz
aaa
jbe
ficoms
inc
scas
cmp
out
or
loope
jo
sbbb
aaa
cs
inc
in
pusha
addr16
inc
sar
inc
xchg
inc
mov
bound
insb
add
mov
sti
xchg
test
adc
shrl
lds
jmp
ja
gs
cmp
mov
sub
sub
divl
xchg
or
popa
mov
mov
mov
jns
cmpsb
mov
mov
or
add
out
jno
cmp
mov
stc
mov
lret
push
xlat
std
in
neg
pop
rorb
or
shlb
inc
lea
inc
cmpsl
jl
popa
dec
pop
or
cmp
dec
shlb
lea
test
leave
aam
push
cwtl
jno
push
xchg
rcrb
es
es
mov
movsb
jno
fcoml
inc
and
and
pushf
insl
jns
cmp
jl
sar
dec
or
mov
sbb
imul
fsubp
cmp
dec
push
or
testl
pop
mov
lcall
jo
pop
aaa
pop
je
sbb
mov
mov
sbb
mov
adc
aad
sbb
push
test
dec
add
loope
hlt
xor
add
inc
pop
push
fcompl
or
js
push
xchg
push
in
pop
add
xchg
jo
dec
lcall
cwtl
pop
jp
stc
scas
or
sar
pop
sub
test
pop
adc
arpl
inc
or
out
and
pop
subl
shrl
jbe
clc
es
data16
add
mov
loopne
mov
pusha
daa
lret
fcom
xchg
repz
imul
xchg
test
xchg
lock
decb
adc
pop
jmp
mov
mov
inc
cs
mov
loop
scas
ret
mov
scas
dec
pusha
mov
push
adc
and
fstl
push
xor
rorb
xor
inc
mov
jmp
push
out
cs
pop
pop
and
inc
fistpl
fwait
xchg
xorb
fisubrs
ret
pop
sti
sub
sahf
adc
fisttpl
inc
sub
sbb
fldenv
lahf
clc
cwtl
mov
sub
jp
sarl
test
sarl
pop
mov
dec
pop
gs
clc
xchg
cmpsl
add
and
or
pop
in
sbb
out
add
lret
outsl
in
cmp
cmp
sub
xchg
or
mov
dec
xor
fisttpll
add
mov
leave
xchg
lea
dec
leave
fs
in
loopne
inc
clc
sbb
dec
pop
aas
and
cmpb
cwtl
call
sbb
sti
dec
daa
pushf
ret
gs
aad
cltd
imul
mov
pop
pop
imul
and
fwait
cmp
mov
cmc
enter
xchg
dec
xchg
mov
fimuls
lcall
cs
or
out
jns
add
stc
ja
xchg
rcrl
scas
xor
cli
mov
jecxz
js
les
arpl
mov
inc
inc
add
xchg
pop
icebp
xor
out
cmp
jne
push
int
pop
ss
push
mov
bndstx
mov
sub
adc
data16
xor
or
push
fsub
lret
mov
push
aaa
jecxz
xor
loop
inc
fabs
dec
and
flds
jecxz
loope
pushf
loop
movl
je
stc
mov
cmp
outsl
inc
scas
sti
rcll
sub
mov
pop
cmp
lds
fstl
popa
cmp
loope
pop
fiadds
faddl
inc
arpl
jno
cmp
push
jns
dec
push
aam
and
mov
sub
pusha
jle
fwait
test
leave
pop
js
or
mov
sahf
cmpsb
popf
xor
adc
gs
into
jmp
add
xchg
addr16
lock
fs
mov
xor
sub
adc
fdivrs
cltd
xchg
aaa
daa
inc
imul
je
dec
push
stos
push
adc
sbb
clc
and
imul
loopne
adc
ss
xchg
test
ror
es
jge
jge
dec
fcmovu
gs
std
push
sahf
xchg
scas
mov
fs
scas
cmp
jb
dec
into
jno
pushf
scas
dec
xor
outsl
inc
mov
jne
xor
mov
xchg
xor
sbb
gs
lea
fisubrl
lea
cmpsl
pop
mov
rolb
cli
sbb
add
dec
jne
movsl
sti
mov
repz
rorl
pusha
cwtl
mov
jl
in
lcall
roll
popf
xor
jo
inc
scas
leave
les
jle
sbb
cld
mov
in
in
mov
xchg
gs
int3
mov
lods
inc
sbb
and
loop
ja
cmp
cmpsl
fucom
add
cs
outsl
imul
jg
inc
clc
dec
lds
std
and
sarl
or
out
data16
and
cltd
xchg
push
push
mov
jl
cmp
flds
fdivrs
ficomps
fdivr
cld
les
sbb
mov
xchg
lret
xchg
and
bswap
pop
loopne
inc
cwtl
stos
aad
push
push
shll
out
pop
scas
and
cltd
fdivl
push
test
gs
lcall
scas
or
xchg
adc
or
popa
cmpsl
cli
pop
jl
fmuls
cli
push
adc
subl
push
fcmovne
and
mov
inc
aaa
adc
push
xchg
inc
mov
sub
dec
inc
sbb
cmc
mov
js
mov
xchg
inc
push
stc
cld
ljmp
sbb
cmc
lret
cld
int
dec
fcompl
stc
shr
and
mov
imul
sbb
mov
mov
sbb
fsubs
jne
sub
pop
mov
test
into
sbbb
roll
push
pusha
mov
roll
mov
pop
std
mov
iret
mov
lods
jmp
fdivrl
out
outsl
lds
leave
xchg
into
jbe
popf
sub
add
cwtl
cmpsb
ja
pop
cld
cld
cmp
push
and
inc
mov
jmp
pop
dec
dec
jecxz
bound
fwait
jne
or
push
mov
ret
jge
jmp
outsl
lock
mov
sub
call
mov
xor
or
ret
sub
icebp
cmp
fsubs
mov
pop
xor
scas
xchg
sbb
cmpl
jp
adc
ljmp
andb
xchg
pop
adc
mov
push
cmc
leave
jno
rorb
outsb
dec
lock
pop
and
or
call
sahf
jnp
aad
sarl
cmp
imul
xlat
outsb
and
outsl
mov
shll
sub
and
and
mov
add
clc
pop
leave
push
aaa
pushf
mov
cwtl
cmp
pop
stos
cli
js
ja
shlb
pop
jp
inc
lods
int
mov
outsb
aam
xchg
movsl
dec
arpl
lock
mov
dec
sbb
push
or
mov
and
cld
push
and
inc
jmp
out
aam
mov
push
outsb
shrb
pusha
shrl
sbb
imul
sar
in
pop
ss
pusha
clc
or
loop
push
jnp
fmull
cmpsl
jnp
mull
test
rcrb
sti
xor
adc
mov
jle
into
shrl
mov
push
int3
cmc
daa
lret
pop
xchg
mov
mov
cmp
sti
mov
mov
arpl
push
add
ss
jle
mov
push
pusha
sub
outsb
stc
xorb
add
cmpsb
outsl
enter
aaa
ds
stc
loop
fildl
loope
push
sub
lds
out
test
fmul
sub
push
ret
leave
and
fcmovnu
xchg
adc
clc
and
loope
push
mov
insb
or
jbe
jl
test
adcb
repz
xor
or
bswap
inc
imul
orl
adc
andb
test
pop
pop
pop
sbb
mov
sub
rorb
xchg
sub
xchg
adc
and
and
movb
shll
push
imul
push
les
repnz
inc
insb
or
daa
je
adc
sub
mov
dec
sub
jbe
fs
gs
loope
insl
cmp
dec
cmp
sbb
mov
loopne
das
movsb
lds
xor
movsb
push
imul
xchg
loopne
fsubrl
or
loop
and
lahf
mov
push
cmc
stos
iret
in
or
pop
fcompl
cmp
jnp
mov
pop
mov
add
es
pop
mov
and
jg
sbb
cmp
data16
or
pop
aaa
or
push
pop
stc
fldcw
jmp
push
rcrb
scas
xchg
push
loopne
mov
mov
dec
jge
mov
daa
push
aaa
lret
add
push
sbb
mov
xchg
or
or
sbb
lahf
into
cli
popa
fdiv
xchg
fcomps
or
repz
push
addr16
dec
pop
div
push
fnstsw
mov
mov
lret
mov
movsb
pop
jne
fwait
movsl
fmull
mov
int3
stc
inc
into
pop
fnsave
sbb
cs
ja
mov
mov
sti
icebp
push
add
cwtl
shr
stos
popf
cmp
pop
jl
or
pop
xchg
lahf
mov
lret
pop
ja
filds
imull
out
mov
mov
inc
mov
push
dec
pushf
push
dec
lea
add
fcompl
add
imul
pop
jmp
push
out
int
cli
cmpsb
mov
pop
sbbl
movsl
mov
sub
rorb
dec
pop
hlt
lahf
fisttpll
in
sbb
andb
into
pop
inc
cmp
xor
pop
fisubl
aaa
in
fsub
gs
std
sub
outsb
jl
inc
fcom
inc
aas
xor
dec
aad
xchg
jne
xor
cmp
loop
roll
imul
jne
or
sti
fidivl
sub
inc
mov
adc
jne
jl
adc
sbb
and
xchg
pop
enter
push
into
jg
out
out
aad
mov
idivl
into
jge
and
cmp
fcomps
and
cmpsl
out
daa
lock
pop
add
out
imul
sbb
test
jnp
xchg
sub
ljmp
out
mov
ljmp
sbb
movsl
inc
enter
add
in
sbb
rcl
or
aam
and
jge
loop
stos
mov
add
clc
mov
mov
sbb
pop
lcall
lret
ret
imulb
mov
scas
inc
incb
in
pop
leave
cmp
cli
pop
movsb
aam
jge
push
shlb
gs
adc
and
sub
xor
xor
sahf
pop
pop
notb
mov
lods
in
les
mov
jns
or
sub
jns
cmp
lahf
adc
mov
adc
jg
or
mov
jmp
cli
lock
test
push
xor
orb
pop
jb
sub
test
cmp
cwtl
cmp
xor
inc
pop
ficoms
or
xor
rorb
out
push
pop
add
and
mov
sbb
stc
lret
and
mov
sbb
xchg
shr
aaa
and
xor
je
js
lret
dec
mov
scas
and
popa
add
jl
out
or
push
pop
xchg
inc
fsts
mov
imul
rcrl
xchg
pop
aaa
inc
adc
sub
xor
jecxz
xchg
push
mov
mov
loop
cmp
dec
pop
call
call
or
or
sbb
fmuls
cmp
or
movsl
mov
mov
xchg
les
movsb
mov
cmp
jmp
and
sbb
in
lods
decl
scas
pop
dec
test
fimull
dec
es
push
xchg
mov
stos
call
and
xchg
inc
cs
mov
add
xorb
mov
xchg
sub
xchg
mov
es
sbb
bound
pop
cmpsb
js
fstps
and
jo
fadd
mov
and
push
lahf
xor
int
scas
daa
add
aaa
pop
cs
out
fistps
aad
pop
sbb
test
out
push
add
andl
push
in
push
pop
sarl
popl
and
lcall
or
sub
adc
movsl
sbb
or
mov
mov
test
clc
fists
popa
fsubrs
sub
scas
or
push
addr16
pop
bound
repz
aaa
jmp
and
mov
and
popf
shrl
data16
inc
sub
das
idiv
sti
xchg
push
dec
pushf
out
or
mov
repz
pop
mov
xchg
out
bound
sbb
xorl
lcall
shlb
sbb
popa
sub
in
xchg
xlat
xchg
jo
jmp
jecxz
sub
and
ret
sub
sub
sbb
outsl
pop
mov
scas
notl
jb
push
cwtl
pop
das
cmp
or
jnp
mov
std
push
daa
dec
add
pop
pop
mov
imul
sub
push
sahf
imul
inc
sarb
pop
pop
mov
in
loope
out
stos
data16
push
sbb
imul
pop
mov
ljmp
mov
ficoms
jo
sbb
mov
or
aas
inc
scas
imul
push
sub
pop
sti
in
cmp
sub
pop
scas
int3
push
out
pop
mov
jp
jge
sub
insl
cmp
mov
pop
das
js
sbb
dec
sbb
sbb
adc
cmp
pop
push
pop
sub
mov
out
pop
pop
movsl
gs
and
lret
pop
test
ja
push
or
icebp
stos
call
pop
lret
lods
pop
push
or
adc
inc
mov
scas
sti
xchg
jne
in
repz
mov
int3
gs
adc
arpl
leave
adc
pushf
js
btc
add
mov
push
sbb
sbb
xchg
mov
jo
dec
add
jb
inc
outsl
push
hlt
xchg
sbb
lea
jne
bound
jo
hlt
loop
mov
mov
mov
addr16
inc
in
add
and
mov
fisubs
divl
test
and
insb
std
data16
fsubrs
dec
and
sti
pop
das
xchg
push
rolb
sub
jne
adc
ret
pcmpeqd
mov
cmpsb
add
cmp
and
cs
mov
aad
pop
in
ds
xchg
sbb
mov
mov
fs
mov
mov
imul
jge
repnz
lret
dec
std
in
scas
cmp
cli
aad
jmp
ss
gs
cmp
aas
shl
xchg
mov
sahf
jl
dec
mov
pop
daa
fcoms
out
pop
pop
leave
repnz
addr16
imul
inc
into
fidivl
xlat
adc
mov
popa
inc
icebp
dec
and
fmuls
enter
aad
out
fsin
pop
xchg
cmp
push
xor
lahf
ds
fldcw
xchg
ljmp
pop
mov
push
sub
add
lret
test
lret
push
scas
dec
xor
mov
mov
jle
push
sub
stc
repz
insl
cmp
lret
sub
xorl
notl
lock
inc
btc
shlb
xchg
mov
add
xchg
push
sbb
js
test
insl
jmp
inc
mov
movl
scas
das
scas
pop
nop
xor
bound
scas
jecxz
push
fsubrl
call
gs
adc
movlps
popa
mov
mov
and
and
or
xchg
dec
addr16
cmpsl
sbb
fcmovnu
popf
cmpsb
pop
jae
ja
mov
sti
cmp
mov
in
jecxz
lods
pop
adc
mov
mov
stos
movsl
pop
rcrb
shr
cltd
cli
push
aas
jns
sarb
inc
pop
fildll
fstps
mov
lret
jns
mov
fcompl
cmp
outsl
xor
pop
sti
sub
clc
jmp
es
imul
icebp
jg
clc
mov
test
shrb
in
outsl
or
stos
sub
or
gs
fsubs
push
dec
adc
daa
ja
or
mov
dec
ret
into
pop
inc
inc
ds
xor
inc
ss
mov
adc
dec
jne
stos
add
shrb
adc
shll
mov
jg
pop
mull
cs
pop
loopne
add
push
mov
pop
mov
dec
jb
jg
jmp
lret
ljmp
pop
xor
outsl
mov
pop
add
sbb
js
mov
add
dec
pushf
inc
adc
cltd
inc
mov
test
push
push
fidivrl
je
test
cmp
test
mov
leave
cld
mov
test
jns
gs
cltd
push
adc
std
fsts
xchg
cld
shll
cmp
cmp
push
in
ficompl
ret
scas
ds
ret
pop
mov
lods
ret
pop
fsubr
push
mov
cwtl
push
jge
jnp
aam
pop
icebp
sub
and
pop
test
stos
out
pop
sbb
outsb
fnstcw
sub
popf
in
pop
clc
mov
cwtl
mov
dec
or
stos
ds
jle
mov
fcos
aaa
jns
jno
hlt
fsubrs
sbb
out
pop
repz
fst
arpl
out
imul
sti
jmp
into
hlt
outsl
xchg
ret
out
jle
ret
mov
je
sub
push
int
daa
mov
in
cltd
roll
stos
or
dec
push
dec
and
fsts
fwait
xchg
xor
pop
pop
nop
xchg
jnp
mov
rcr
jecxz
scas
sub
pushf
and
out
es
test
pop
xlat
push
pop
mov
mov
push
sarb
enter
cwtl
mov
dec
or
lcall
ja
mov
gs
loope
push
faddp
pop
iret
jno
xor
hlt
sbb
xchg
mov
jecxz
sbb
scas
inc
subl
lcall
call
fcompl
popf
int3
pop
nop
sub
jns
fsubp
cs
xchg
sahf
mov
int
xchg
jnp
mov
dec
pop
mov
mov
cmp
jae
ss
jns
add
call
sub
inc
jo
push
xchg
cmpsl
out
inc
outsl
call
pop
cmp
pop
fimull
int3
pop
fldenv
outsl
out
cli
push
mov
adc
idivb
lahf
nop
imul
cmp
ret
scas
xchg
clc
mov
mov
cmpsb
xchg
sti
stos
and
xor
pop
inc
or
rcr
rolb
jmp
xchg
pop
aam
adc
or
ret
jbe
ficoms
xchg
jnp
shl
mov
scas
fcomps
mov
jns
in
mov
mov
jnp,pn
pop
stos
loop
dec
cmp
leave
xchg
jl
mov
pop
adc
rolb
or
mov
daa
sbb
mov
scas
xchg
pop
cmp
xor
sbb
gs
cmp
mov
sbb
icebp
sub
popf
daa
js
daa
frstor
std
jecxz
es
pop
out
movaps
fidivrs
push
addr16
mov
pop
cmp
push
scas
faddl
call
outsl
fsubr
cli
mov
pop
vpshufhw
std
inc
out
inc
ds
add
dec
sbb
sbb
xor
inc
mov
sub
stos
int3
add
push
push
push
mov
sbb
subl
dec
shl
scas
scas
out
shr
pop
imul
and
inc
dec
jmp
lret
add
adc
jge
imul
pop
daa
in
in
push
xor
xchg
fwait
dec
push
and
rcll
shll
imul
stos
mov
fistps
movntps
mov
jg
outsb
mov
loopne
out
into
pop
adc
ficomps
test
fstps
inc
mov
dec
in
mov
or
add
pop
mov
ss
sbb
das
arpl
inc
fidivrs
push
repnz
lds
ja
jnp
cmp
push
fists
jecxz
dec
ror
mov
js
lahf
mov
hlt
xchg
jmp
outsl
and
into
or
adc
push
cwtl
dec
outsl
and
or
xor
push
pop
js
test
cltd
icebp
and
stc
mov
sub
pop
push
outsl
clc
pop
aas
sar
xchg
gs
or
mov
faddl
in
mov
pop
addr16
xchg
inc
cmpsl
sbb
fnstcw
in
inc
stos
jmp
sbb
aaa
fstpt
out
push
rorb
push
mov
xchg
dec
jecxz
and
pop
mov
pop
mov
bsf
pop
and
repnz
sbb
xor
arpl
mov
int3
add
sub
mov
cmp
rcrb
push
je
cmpsl
das
push
dec
pop
inc
adc
mov
les
es
cmpsl
pop
out
jne
xor
popa
and
sti
push
xchg
mov
pushf
mov
sub
mov
adc
xor
gs
mov
jge
or
lea
bound
add
test
and
jl
nop
push
mov
inc
icebp
stc
int3
push
sahf
and
mov
insl
sbb
ret
pop
loop
mov
or
mov
negb
push
in
popf
jb
movsb
cmp
stos
xor
std
notb
jns
sub
and
lock
dec
scas
test
mov
mov
push
in
jmp
scas
sub
sub
push
push
jmp
fisubrl
imul
ljmp
stos
or
mov
out
out
adc
push
cmpsl
in
stc
repnz
loopne
jo
stos
push
into
or
das
les
je
fidivs
into
mov
sub
in
test
lods
test
push
in
test
outsb
jne
sub
imul
jle
sbb
movsb
xchg
pop
outsl
ret
xor
mov
lret
push
inc
and
fidivs
sti
iret
add
lret
test
push
push
mov
scas
js
cld
mov
push
icebp
test
outsl
std
out
mov
push
sbb
faddl
mov
or
std
scas
xchg
test
push
jne
outsl
or
push
jns
shll
stc
fs
pop
jno
stc
sub
mov
push
test
xchg
and
out
mov
pmaxub
pop
lahf
xor
shll
xchg
ja
and
cwtl
pop
push
pop
adc
adc
xchg
scas
js
xlat
je
xchg
das
bswap
pop
aam
cmpsl
pop
dec
out
fmull
cld
mov
mov
cmp
xchg
sbb
addr16
scas
sub
leave
inc
and
jae
pop
dec
in
xchg
fdivrl
in
scas
xchg
pop
popa
popa
dec
mov
andb
jne
xchg
adc
imulw
or
sbb
ljmp
add
lcall
mov
pushf
mov
sub
push
xchg
add
rcr
mov
cwtl
or
mov
inc
shrb
js
xchg
jne
sahf
fbld
testb
popf
repz
into
mov
sbb
mov
xor
sub
push
push
test
add
cs
movsbl
xor
lods
pop
pop
or
fbstp
in
add
jno
out
stos
adc
xor
mov
mov
and
xchg
je
mull
push
and
test
addb
jl
lods
lods
dec
leave
mov
ljmp
daa
loopne
mov
or
mov
gs
mov
in
jle
inc
ja
push
call
in
int3
lock
xchg
cmpsb
out
repz
push
jl
insl
fdivrl
sbb
cmp
jnp
mov
push
in
cwtl
fcoml
or
lret
mov
in
cwtl
xor
dec
or
pop
xchg
add
jnp
push
or
imul
xor
push
sti
inc
jns
cmpsb
sub
mov
into
jmp
jae
es
cmpsl
mov
popf
out
jecxz
xchg
cs
xor
jg
cmp
in
div
mov
lahf
loop
mov
inc
and
sahf
int3
inc
out
sub
mov
hlt
jle
ficompl
sub
sbb
sbb
rolb
sub
and
pop
sub
out
inc
fistpl
pop
pop
push
sbb
sarl
or
and
push
fs
lods
xchg
xor
test
xor
cwtl
mov
lret
hlt
dec
js
or
mov
cli
outsl
std
xchg
mov
out
jl
movsl
fwait
mov
ret
or
add
cmp
call
xor
shlb
pop
or
insb
stos
inc
fwait
pop
lahf
or
imul
je
pop
adc
sbb
loope
or
or
addb
jo
xchg
imul
aaa
paddb
pop
sarb
inc
jg
pop
or
ficoml
mov
loopne
lea
fucomi
lret
popf
scas
jl
xchg
sub
aad
mov
add
xchg
xor
add
cmp
xchg
je
hlt
lods
leave
out
pop
push
xchg
lock
mov
movaps
rcr
xor
out
xchg
dec
scas
jno
inc
cld
in
mov
and
inc
xchg
pop
dec
cmpsb
xchg
std
scas
mov
jp
into
jno
jle
movsb
pop
orl
scas
aaa
fcomip
jmp
in
mov
push
lret
outsl
daa
xor
xchg
xor
mov
repz
mov
enter
fs
cs
aaa
movsl
jnp
jbe
dec
xchg
cmpsl
sub
xchg
test
mov
cmp
popa
xor
pop
lods
mov
stos
mov
cmc
sbb
or
pusha
cli
outsl
scas
stc
stc
pop
cmp
inc
jl
sub
sbb
add
imul
lods
sahf
clc
stos
in
push
imul
ficoms
pop
repnz
jo
call
lahf
mov
push
ret
mov
cmpsl
loop
pop
pop
xor
mov
pop
lea
icebp
jge
mov
mov
push
mov
or
sbb
fcompl
cmc
int3
stos
bound
movsl
fimull
sub
add
les
loopne
out
add
orb
pop
sahf
add
dec
mov
push
xchg
jo
out
call
or
cmp
mov
fwait
popa
ficompl
pop
scas
dec
movsb
push
out
cmp
mov
aam
sbb
cli
cmpsb
in
dec
adc
cmp
lock
addb
dec
push
jbe
jae
pop
dec
xlat
imulw
xchg
out
sbb
fcomps
push
pop
gs
faddp
pop
push
mov
push
pop
and
jle
rorl
outsl
cltd
push
clc
jae
xor
movsb
scas
das
and
call
pusha
out
inc
sbb
pop
dec
mov
cmc
jp
add
fists
cmpsl
sub
in
in
call
xchg
pusha
sub
jbe
movsl
daa
fdivl
pop
cmp
lds
lcall
dec
fists
jl
bound
jae
fistpl
xchg
add
or
fsubrs
fnstcw
mov
lcall
adc
inc
add
xchg
daa
push
addb
test
and
jb
push
jo
xchg
pop
gs
jge
push
fisubl
ss
adc
mov
inc
jae
dec
mov
test
pop
push
pop
pusha
clc
inc
cs
out
jge
mov
in
out
mov
pop
add
outsl
cmp
std
popf
sbb
mov
pop
cmpsb
jnp
gs
leave
fwait
ja
add
sbb
add
shl
lods
clc
in
or
mov
xchg
cli
sub
das
pop
outsl
add
sub
mov
lcall
lea
cmc
cmp
fcomi
stos
out
test
cwtl
fstp
xchg
pop
add
sbb
dec
sub
sbb
pop
jmp
cwtl
sbb
sub
shrb
xor
and
fildl
mov
push
mov
push
out
iret
or
pop
insl
test
fwait
add
push
pop
ss
mov
aad
xchg
fistps
movsl
sub
loop
aaa
xor
mov
pop
mov
inc
xor
aaa
xchg
push
jg
push
xchg
mov
int
fmul
inc
xlat
xchg
punpckldq
out
push
outsl
or
hlt
jmp
pop
sbb
das
insb
push
mov
dec
mov
jno
sbb
pop
pop
sbb
lcall
push
push
arpl
mull
test
popa
sbb
rorl
dec
pop
mov
cmpsb
repnz
jg
cs
inc
add
mov
add
ja
aad
cwtl
adc
adc
jnp
es
adc
lahf
lcall
mov
mov
filds
jne
dec
push
out
push
add
mov
int3
push
out
outsl
jp
and
std
cs
mov
fmull
fdivrl
fsubrs
daa
inc
mov
add
out
sti
clc
push
in
aas
int
xor
push
mov
sbb
lcall
negb
sbb
insl
mov
mov
inc
arpl
sbb
mov
imul
pushl
mov
outsb
sbb
std
mov
cmp
jl
and
shrb
in
in
popa
pop
xchg
test
xchg
popf
inc
repz
sub
ljmp
sub
sub
mov
gs
xchg
cli
sbb
rcrl
xchg
xchg
lcall
int3
sub
mov
and
inc
add
test
cltd
xchg
push
shll
notb
stos
mov
jle
push
mov
adc
movl
mov
add
inc
andl
dec
repz
into
jge
decl
fsubrs
out
jmp
loopne
flds
popa
out
das
cmp
imull
pop
scas
dec
in
ljmp
addr16
pop
cs
iret
mov
and
sbb
inc
push
cmp
sbb
cltd
imul
xchg
xor
lock
xchg
xor
pop
add
aas
pop
or
mov
inc
fcomp
iret
and
les
pop
lea
addr16
jne
in
cmp
test
pop
pop
sub
push
add
sbb
loope
das
out
test
push
fmull
clc
lods
mov
insb
out
push
sub
and
movsl
icebp
sbb
je
inc
inc
adc
popf
jns
movsb
in
push
xor
mov
scas
sbb
lret
pop
xor
mov
pop
jp
test
jp
xchg
jp
cmpsl
add
sub
scas
pop
sar
pop
jno
inc
jmp
or
xlat
popf
or
push
stos
pop
jge
inc
mov
jmp
les
and
setg
call
mov
into
data16
xchg
cmp
sub
xchg
pushf
fxtract
and
xchg
mov
xor
sbb
movsl
and
xchg
sbb
or
cwtl
fistl
jnp
fwait
aam
sub
xchg
mov
mov
sbb
sbb
gs
sub
pushf
pusha
push
cwtl
mov
daa
pop
in
loopne
sbb
cmp
aam
pop
inc
and
sub
hlt
xchg
stos
sbb
cs
sbb
xor
add
pop
cwtl
push
xlat
sbb
test
clc
jne
inc
dec
andb
and
cmp
loope
fnstenv
and
popa
cmp
sbb
pand
pop
mov
lods
inc
sub
test
or
jb
pop
addr16
ja
xor
inc
push
jnp
xor
inc
mov
out
fcoms
test
pop
call
stos
gs
push
roll
je,pn
clc
sbb
imul
mov
lods
fwait
scas
clc
pop
mov
adc
xchg
rcrl
cmpsb
enter
cld
aad
icebp
push
fdivr
xchg
gs
mov
or
loopne
sbb
lcall
xchg
or
lcall
and
xchg
rclb
mov
pop
pop
repz
fmull
mov
or
jmp
and
insl
sbb
ljmp
clc
mov
daa
inc
mov
mov
mov
jp
cltd
addr16
ja
hlt
cltd
mov
cmpsl
inc
into
or
int
fadds
sub
out
into
mov
shrl
inc
cli
popf
cmp
mov
push
pop
add
arpl
xchg
push
test
rorb
push
xor
shr
icebp
fs
push
lods
inc
add
test
dec
xor
les
and
mov
and
xor
fistpll
push
push
jp
add
jg
aas
aaa
lret
fsubl
xchg
xlat
fwait
cs
das
mov
enter
cmpsb
jge,pn
mov
pop
and
clc
lds
mov
pop
rolb
sub
push
and
mov
adc
cs
xchg
mov
stos
pop
mov
mov
gs
push
and
movsl
xor
pushf
mov
mov
jne
in
out
cmpsl
xchg
pop
pop
fidivrs
or
or
and
mov
fs
dec
cwtl
xorl
sbb
sbb
fs
pushf
shll
cmpsb
gs
mov
sub
loopne
xchg
aas
sbb
in
and
andb
xchg
xchg
pop
sub
out
out
arpl
and
loope
mov
jns
cmpsb
or
xchg
jl
out
xchg
pop
push
shrb
pusha
jno
mov
xchg
sub
shrb
leave
mov
fwait
lcall
ret
das
mov
test
pusha
push
mov
lret
or
mov
pusha
stc
loop
jg
gs
jnp
arpl
mov
mov
fs
adc
mov
jp
mov
push
imul
stos
sbb
mov
push
sahf
add
iret
jbe
push
or
sub
mov
or
mov
insb
dec
jmp
push
fildl
mov
scas
sbb
xchg
in
out
sahf
cltd
sti
pop
jmp
mov
inc
sub
and
cmpsb
mov
mov
jae
push
push
aam
add
jg
sbb
frndint
push
shll
js
dec
push
add
das
aam
adc
sti
icebp
and
data16
out
cmp
out
xchg
sub
push
sub
add
xchg
imul
mov
and
lods
out
cli
push
xchg
cld
bound
jnp
pop
stc
aas
ret
les
or
xor
loopne
jmp
add
divw
cmpsl
int
or
aam
daa
fstps
push
and
sub
shrb
clc
nop
jns
outsl
sbb
pop
leave
pop
mov
cli
mov
mov
sti
sbb
sub
adc
pop
push
leave
leave
outsl
lcall
sbb
inc
mov
xchg
ds
aam
pop
cmp
jne
push
call
lahf
xchg
adc
mov
or
mov
push
dec
or
lods
cmp
jle
in
xchg
jp
push
stos
mov
inc
enter
into
out
xchg
sbb
pcmpgtw
push
mov
push
mov
jge
ds
sub
test
lahf
mov
js
or
scas
pop
clc
inc
icebp
ja
sbbl
xorl
pop
js
and
int
xor
mov
and
in
and
call
dec
xorb
jmp
repz
test
lret
call
mov
aam
mov
and
add
fadd
xchg
pop
add
adc
xchg
movsl
mov
fwait
cmp
aaa
lds
mov
xchg
rolb
mov
dec
fildl
dec
pop
pop
sbb
push
repz
mov
fcomp
dec
pop
xchg
xchg
loopne
sbb
cmp
mov
pop
sar
inc
mulb
xor
xchg
into
jno
iret
xchg
and
mov
fldcw
pop
nop
arpl
xchg
subl
lock
fsubs
addb
cmp
daa
mov
jbe
pop
sub
xchg
push
subb
adc
jns
rorb
jb
pop
mov
push
les
add
add
scas
jle
jg
mov
adc
mov
adc
test
add
add
push
pushf
jo
inc
and
pop
clc
pop
fwait
mov
dec
in
xchg
daa
gs
lcall
push
pop
dec
data16
ljmp
jae
out
mov
mov
leave
out
add
movsb
inc
sbb
xchg
push
stos
mov
push
test
pop
push
fstps
dec
cmp
and
sub
dec
mov
stos
inc
clc
sub
fmull
jns
fcomp
movsb
and
in
or
and
xchg
fldenv
arpl
in
sub
and
in
lret
arpl
push
pusha
data16
push
filds
mov
sbb
gs
xor
dec
jecxz
ss
pop
fs
dec
xchg
fwait
xor
lahf
addr16
ret
fmul
push
xchg
xchg
jnp
insb
cmp
call
jmp
adc
es
mov
cltd
pusha
push
push
mov
clc
xor
cwtl
imul
insl
sbb
push
push
out
jnp
notl
aas
pop
call
cs
fildll
mov
push
orl
mov
out
xchg
sarb
sub
push
jae
lock
jle
daa
xchg
inc
jo
sbb
adc
mov
mov
mov
dec
or
enter
scas
test
ds
mov
outsl
icebp
int3
dec
xchg
inc
sbb
sub
sbb
jge
pop
mov
int3
pop
pop
or
xchg
test
icebp
dec
repnz
jmp
mov
or
iret
scas
testb
jb
add
mov
sub
and
mov
cmp
add
add
push
stos
and
popf
xor
aad
pusha
cmp
enter
ret
adc
cli
ret
cld
lret
data16
out
dec
int3
hlt
inc
mov
pop
imul
jmp
scas
bound
fildll
jnp
fisubl
lea
lret
in
fs
es
inc
pushf
dec
push
xor
fnstsw
lcall
lret
aas
pop
adc
cs
aam
out
and
inc
or
hlt
mov
and
sub
movsl
cmpl
sahf
xor
mov
js
addr16
pop
sub
movsbl
sub
sub
int3
inc
das
leave
ja
adcl
outsl
sub
cli
cmpsl
mov
cmp
sbb
fistpll
xchg
xor
popf
sbbb
loop
divl
out
sarb
in
or
xchg
mov
aas
pop
fnstsw
call
xchg
test
sbb
dec
dec
jmp
sub
flds
call
xor
xchg
subb
sub
scas
or
mov
pop
pop
adc
fbstp
outsl
dec
mov
clc
fistl
lret
jle
fists
inc
aad
lea
pcmpeqb
lret
mov
mov
ficoms
xor
loop
jnp
iret
pop
lret
fmuls
fcoms
jle
mov
aam
mov
cmp
cmp
daa
bound
in
mov
outsb
cmp
inc
jb
mov
cld
mov
mov
mov
icebp
push
mov
pop
or
mov
cmp
mov
jbe
mov
pop
es
imul
mov
mov
fmull
add
cmp
and
cmp
inc
les
sbb
stc
xchg
lcall
cli
pusha
and
add
std
sbb
gs
cmp
xchg
in
jne
inc
outsl
sbb
aad
fmul
lret
in
scas
mov
out
jp
pop
fsubrl
pop
xchg
subb
sub
xor
in
sbb
subb
ret
out
push
cmp
inc
cs
push
lret
scas
xor
flds
push
or
dec
sbb
ja
pop
push
jo
clc
dec
in
and
into
xor
pop
pop
pushf
testb
loopne
bts
pusha
sti
push
or
inc
mov
cmpsb
sub
jecxz
dec
add
fisttpl
jae
daa
push
xchg
mov
stc
rorl
add
push
xchg
aaa
movsb
pop
rcll
xor
mov
adc
cs
and
cmp
pusha
sbb
mov
test
aaa
fnstenv
sbb
mov
fwait
dec
clc
pop
inc
push
or
mov
clc
ret
push
add
cli
cmp
cmp
fistpl
cli
pop
ss
and
mov
dec
int
cmp
push
jne
mov
inc
sti
fisttpl
subb
pop
mov
jg
fs
arpl
add
adc
inc
mov
imul
adcb
in
test
out
lods
std
jns
or
outsb
adc
lahf
in
testl
cmp
cmp
mov
cli
sub
sub
pop
dec
and
out
movsl
mov
pop
pop
adc
jns
push
pop
lods
pop
inc
and
rcrl
cmp
jge
rolb
fwait
xor
fstps
sbb
stc
out
and
cmp
clc
lret
adc
pop
sbb
shll
and
sarb
sar
aas
shl
sti
and
ja
sub
inc
mov
inc
push
fistpl
loopne
in
mov
xchg
ds
mov
cltd
cltd
and
call
lcall
test
dec
add
adc
call
pop
fcmovnu
fldenv
mov
sarb
out
sbbl
mov
dec
and
in
loopne
lahf
fcompl
out
imul
outsl
cmpsb
pop
or
and
sub
lcall
in
mov
push
repnz
mov
jno
pop
jge
cmc
and
imul
gs
dec
xor
int3
mov
mov
outsl
cli
pop
add
clc
jno
out
in
ljmp
rcl
xchg
mov
clc
popa
cs
lock
bound
inc
xor
mov
pop
pop
jle
inc
mov
pop
pop
wrmsr
pop
fsubrs
jg
pop
roll
sbb
in
jns
sbb
fisttpll
jbe
or
flds
sub
cwtl
jnp
pop
aad
add
sub
mov
mov
sub
repnz
xchg
fisttps
mov
repnz
inc
bound
in
sub
jl
mov
dec
daa
loopne
and
lret
shl
outsl
imul
sub
cwtl
loopne
inc
ljmp
outsl
ljmp
and
dec
cmp
xchg
push
dec
sbb
sub
mov
jmp
fimuls
jl
pop
mulps
mov
addr16
push
mov
mov
push
add
mov
xor
aad
shrl
dec
xchg
mov
cmp
xchg
lds
repz
fwait
jg
out
es
push
mov
sbb
pop
jbe
cmp
fscale
popf
stos
mov
jmp
fstpl
sub
arpl
movsb
int3
mov
clc
push
and
pop
jmp
fadd
rcrb
outsl
cmp
gs
xchg
les
xchg
inc
sbb
push
vpsubusw
xor
jb
adc
sub
les
inc
pop
lahf
daa
out
scas
fcoms
mov
les
ds
cmpsl
xor
push
or
fld
pop
jns
aas
fs
push
sti
nop
data16
out
and
lods
ret
add
movsl
or
pop
sbb
in
or
inc
fsqrt
mov
lea
sub
lahf
sti
sti
or
dec
movsl
addr16
sbb
fcompl
imul
pop
out
pop
jne
push
or
xor
mov
push
imul
xchg
push
popa
dec
cs
mov
mov
ja
cs
mov
push
gs
outsl
aas
inc
push
ljmp
adc
jecxz
jae
mov
sbb
lret
mov
push
insb
mov
jbe
pop
add
idivl
inc
adc
sti
push
sub
inc
insl
scas
sub
addr16
sahf
jae
pop
pop
lahf
std
add
cmp
loope
es
xchg
adc
out
jno
pop
mov
pushf
imul
mov
jecxz
mov
sub
aam
aaa
jle
pop
xchg
or
fsubl
pop
mov
fsubr
or
xorb
inc
pop
sub
xchg
pop
push
fmull
xchg
sahf
cmc
hlt
scas
rcrl
cmp
dec
add
mov
rorl
xchg
sbb
rcrl
test
dec
xchg
call
test
movsb
jmp
pop
rcr
sub
pop
and
clc
pop
mov
scas
dec
fnstcw
fdivp
ds
gs
xorb
pop
push
mov
push
sbb
push
add
cmp
push
fldt
loopne
or
test
enter
test
pop
xlat
adc
inc
dec
push
jmp
lock
out
aas
test
shlb
sbb
in
xor
out
jmp
mov
pop
lea
sahf
out
popa
mov
cmp
pop
insb
push
mov
leave
das
aas
xor
lret
testl
sub
sbb
jge
mov
push
mov
outsl
lret
lds
pop
add
cmp
jp
movsl
pop
subl
dec
pop
jge
dec
dec
adc
icebp
aad
push
stos
lea
mov
fistpll
pop
add
std
or
cmpsb
lods
cmp
sbb
pusha
sahf
jmp
cltd
cmp
mov
sub
jo
pop
clc
fwait
sub
pop
jns
mov
lret
mov
xchg
arpl
jmp
sub
add
lods
enter
mov
sbb
xchg
bound
push
mov
mov
adc
lock
loopne
jmp
add
sbb
sbb
xor
fsubs
mov
pop
and
dec
xor
sub
movsl
fdivrs
mov
in
cmp
xchg
and
jnp
and
sub
addr16
sbb
jo
ja
mov
pop
fadds
fisttpl
xor
add
sub
push
fistpll
push
pop
loop
and
andl
in
in
ret
in
repz
out
add
push
cmp
pop
sahf
in
nop
xchg
outsl
idivl
and
pop
pop
data16
roll
fcoml
add
fsubl
rolb
xchg
mov
jg
addr16
pushf
pop
fldt
pop
and
ds
imul
xor
scas
jo
adc
jmp
xchg
aaa
inc
mov
fstl
push
hlt
leave
add
ja
imull
fsub
ja
call
sbb
inc
arpl
les
jecxz
mov
jle
cmc
jle
lock
jae
in
insb
mov
or
rcll
pop
push
or
aaa
mov
sbb
shrl
jp
fsubs
mov
mov
pop
imul
icebp
cmpl
pop
mov
insb
sub
aas
mov
aaa
popf
xchg
pop
fs
in
ja
cmp
int
jecxz
pop
adc
xchg
push
xchg
xor
jns
or
sub
add
add
and
push
mov
cmpsl
cwtl
jne
lret
std
add
dec
jno
iret
push
xchg
into
push
sarb
mov
jmp
jne
cli
sub
dec
fdiv
push
add
add
and
xchg
lods
es
mov
fistpll
xor
xor
xor
mov
jle
sbb
adcl
cmc
das
push
sub
dec
fidivrs
add
sub
push
inc
scas
cltd
sbb
cmp
inc
or
lret
fstpt
inc
mov
push
pop
in
shlb
gs
popa
loopne
andl
mov
push
mov
xchg
jl
sub
hlt
mov
dec
cltd
sub
mov
inc
pop
popf
pop
cld
ljmp
les
cmpsl
iret
push
rol
repz
xchg
pop
fwait
add
jge
test
jno
es
in
call
inc
xchg
and
pop
or
jge
jo
pop
jnp,pn
mov
push
inc
fcomp
xchg
mov
loopne
dec
push
xchg
or
andb
ds
inc
imulb
sbb
jle
mov
and
out
fsubrl
clc
push
mov
dec
pop
jp
dec
shll
inc
jl
fdivr
push
push
scas
cwtl
xacquire
xchg
push
loop,pn
ss
test
lea
shll
cmpsb
jbe
mov
sub
xor
lahf
js
sub
push
ret
sub
scas
jge
mov
std
push
imul
dec
js
or
loopne
inc
lea
push
or
addr16
out
mov
sahf
inc
mov
loop
sub
fisttpl
xorl
sub
in
dec
and
fdivrp
lea
or
pop
jns
arpl
sti
data16
push
adc
mov
aad
rorb
cmp
push
fmull
mov
pop
jnp
ret
push
sub
sub
cwtl
cmp
inc
jecxz
xchg
int3
mov
lcall
mov
add
outsb
pop
sub
dec
mov
mov
dec
scas
lret
inc
out
inc
popf
shll
sbb
test
mov
xor
cmovo
push
add
lea
jp
pop
xchg
mov
jbe
inc
jb
inc
or
cmp
mov
ret
out
clc
add
xor
sub
sbb
or
outsl
lahf
into
mov
sub
mov
xchg
pop
mov
sbb
pop
pop
mov
or
adc
fdivrl
push
je
leave
roll
imul
enter
pushf
jg
das
std
and
jmp
inc
and
mov
cmp
sbb
ret
jecxz
push
xchg
fsubl
movsl
insl
mov
mov
mov
ja
xchg
or
std
mov
push
divb
rolb
out
jae
js
aam
or
out
leave
setae
lock
jno
daa
shlb
push
call
ficompl
mov
push
mov
xchg
push
jmp
dec
loopne
dec
inc
and
cli
mov
outsb
mov
sahf
js
mov
and
pop
jbe
pop
cltd
xor
cmp
mov
pop
and
fsubrl
aaa
addl
adc
push
in
loop
xchg
add
mov
xchg
mov
outsl
cmpb
jb
mov
add
loop
divb
sbb
mov
jmp
xor
mov
cmpsb
int3
aad
mov
out
pop
out
mov
pop
push
push
sub
popa
jnp
lahf
clc
mov
mov
addr16
scas
mov
pop
cld
into
sub
xor
sbb
pop
xor
pop
sub
daa
mov
arpl
sti
mov
mov
add
push
sub
jno
sub
sub
xchg
sbb
and
call
or
cmp
dec
hlt
in
lcall
adcb
fcomps
jp
pop
jo
mov
xor
fadds
pop
addr16
add
sti
pop
insb
inc
add
je
enter
jns
imul
mov
iret
loope
sbb
test
das
dec
out
sbb
jb
mov
insl
or
cmp
or
push
imul
add
jnp
cmp
push
sub
in
push
adc
cli
or
cmp
sbb
jecxz
sbb
cld
mov
fsubrs
and
sahf
cmpsl
add
inc
sub
jae
fucomi
ret
aaa
jno
mov
ret
rclb
xor
and
jg
sub
cltd
repnz
inc
sarb
mov
fdivr
sbb
cs
push
je
or
add
std
jge
mov
lods
adc
or
and
adc
mov
pop
scas
sub
fsts
pop
pop
sbb
dec
scas
enter
mov
inc
inc
push
paddw
shlb
cs
push
pop
js
dec
xchg
jl
mov
pusha
fcomp
mov
daa
enter
cld
lock
cmp
sbb
mov
pop
xchg
clc
clc
pop
es
xlat
shlb
in
cwtl
imul
aad
mov
popa
fsubl
xor
add
cli
dec
mov
out
mov
gs
lock
jg
sbb
out
add
xchg
scas
mov
je
std
xchg
jp
testw
outsl
aas
xchg
shrb
mov
cmp
fcmovbe
test
jl
icebp
fxch
out
cs
outsl
mov
inc
xor
das
fldt
orb
sbb
pop
int
and
dec
lret
int3
jp
fsub
push
lret
mov
mov
push
nop
mov
mov
pop
fcompl
pop
pop
cmp
mov
push
cs
jnp
ja
das
mov
fsubs
push
cmp
add
fyl2x
stc
pusha
cmp
loope
sbb
rcrb
loope
mov
or
sbb
je
pop
adcl
inc
jns
push
cwtl
nop
cwtl
jne
fprem
pop
sub
inc
push
shrb
cmpsb
lret
in
adc
bts
push
inc
push
int3
gs
scas
pop
fwait
out
sbb
fcos
stos
sub
add
cmp
mov
cmp
jge
hlt
decb
ret
sbb
dec
cwtl
push
mov
pop
andl
xor
shl
cs
sub
pop
imul
into
addr16
lock
ficomps
sub
inc
test
daa
in
and
insl
add
imul
push
pop
call
sbb
adc
call
cmp
test
and
mov
into
push
sub
mov
loopne
clc
mov
or
push
sbbb
faddl
lock
stc
push
stos
jge
sub
jae
or
ficompl
sbb
jp
icebp
add
pop
fmull
xchg
cmp
pop
lret
aaa
in
mov
loop
pop
les
mov
sbb
xchg
je
ret
xchg
or
lods
jae
es
push
pop
into
fisubrl
and
add
jae
sahf
sbb
loopne
je
sbb
inc
inc
fisttpl
push
fisttpl
cs
jnp
jecxz
in
aad
mov
push
data16
pop
cltd
xor
sub
push
in
insb
add
jge
lret
insl
lcall
in
or
call
movsl
cli
pop
inc
mov
or
lock
mov
mov
sbb
out
fsts
loop
pop
dec
and
iret
mov
daa
cmp
dec
mov
jle
mov
mov
cltd
in
lahf
xor
xchg
fdivr
repnz
mov
fisubrl
and
and
adc
jmp
data16
outsb
jl
addr16
pop
dec
sub
sub
popf
pushl
mov
or
pop
lods
mov
cs
mov
xchg
mov
mov
mov
sbb
call
fidivl
shlb
cmc
data16
lock
jp
aas
fucomip
sub
ja
clc
popf
mov
imul
ret
xor
or
cli
std
mov
mov
jno
fs
movsb
push
std
adc
jecxz
mov
pop
pop
adc
bound
and
cmpsb
loop
ret
sahf
cmp
push
or
mov
aad
sahf
scas
jns
mov
add
into
pop
xchg
xor
mov
xchg
and
loope
out
arpl
or
mov
mov
pop
jge
pop
cmp
aas
dec
and
faddl
cltd
lds
xor
sub
mov
push
notb
jecxz
inc
scas
xchg
test
jae
sarl
jl
in
in
mov
dec
es
pop
adc
rolb
js
lods
mov
jecxz
lret
loopne
scas
sbb
test
xor
xchg
fcom
mov
out
stos
push
fmull
std
xchg
test
xchg
and
pusha
jne
dec
jle
cs
ror
xchg
cmp
inc
ja
mov
out
mov
xlat
jle
pop
cmc
lods
lret
or
dec
lock
jnp
pop
push
pop
stos
out
mov
negl
pop
jmp
cmpsl
pop
adc
cli
jae
ss
mov
pop
or
rcrl
int3
jl
pop
and
pop
int
int
cmp
addr16
fstpt
fnsave
push
dec
add
pop
fistl
cs
mov
imul
je
pushw
fistl
outsl
and
jno
mov
fidivrl
push
jp
out
loopne
gs
pop
movsb
dec
fsubs
imul
ss
or
fcomps
sbb
dec
fcomps
jno
lods
fidivrl
lahf
addr16
pop
test
in
mov
mov
and
addr16
cld
imul
mov
andb
pmaxub
cli
sub
sub
pop
int
jo
mov
push
fmuls
stc
pop
lcall
pusha
jno,pt
fcomip
addr16
popw
fcmovnu
cltd
mov
popf
push
fstl
sub
arpl
mov
add
push
data16
fsubl
stc
push
push
xchg
pop
sti
dec
jae
xchg
sbb
sti
int
jmp
sbb
in
xchg
mov
cmp
sbb
pop
push
fisubrl
cld
cmpsb
je
das
insl
pusha
xor
sbb
jo
inc
call
sbb
call
ljmp
in
test
and
loop
outsl
call
add
mov
loop
fsubs
inc
pop
push
subl
sub
or
mov
cmpsb
into
jno
outsl
lock
mov
inc
outsb
sbb
test
pop
rcrb
cmp
inc
outsb
xor
out
in
add
and
pop
jo
pop
sub
lock
gs
jge
sbb
repnz
jo
into
out
xor
or
insb
addr16
xchg
fwait
mov
imul
xchg
cwtl
jns
pusha
ljmp
add
push
notl
jae
and
cltd
sti
cld
pop
push
fmul
pushf
fdivrs
sbb
pop
adc
shrb
addr16
sub
sbb
xchg
pusha
push
push
mov
loop
lods
dec
fcoms
xchg
pop
inc
push
out
pop
data16
sbb
rcrb
fldt
addr16
dec
addr16
mov
fdivp
pusha
out
jo
fcomps
lret
sbb
mov
fldcw
sub
jp
sbbl
mov
adc
aaa
lcall
inc
loop
in
dec
addr16
mov
jo
and
sbb
ja
fs
ljmp
cmp
mov
cmp
sbb
inc
repz
lahf
fadds
push
fistpl
add
jg
inc
pop
mov
or
je
xor
pmulhuw
lcall
cltd
or
jns
stc
pop
xor
jp
sar
pop
fistpll
mov
das
scas
push
movsb
stos
jp
das
and
mov
or
lea
lea
lret
push
or
cmp
push
call
pushf
scas
fs
ja
cmp
cmc
aas
mov
inc
xchg
daa
in
test
xlat
enter
mov
jp
and
fidivrs
mov
cmc
data16
repz
in
mov
scas
add
aam
mov
mov
mov
add
movsl
scas
sbb
lahf
in
loope
cs
std
imul
xchg
outsl
nop
xchg
sbb
jo
adc
daa
cmpsb
xchg
jnp
mov
sahf
lret
xchg
into
jp
and
popa
pop
div
dec
lds
pop
mov
repz
daa
xchg
pop
scas
jg
sub
daa
sub
dec
jg
imul
int3
lods
rclb
mov
pushf
add
out
or
cmp
cmpsl
mov
scas
and
test
pop
cwtl
aad
in
mov
push
adc
fcomp
insb
out
adc
scas
push
lret
gs
rcr
xor
fucom
insb
xchg
jg
fdivrs
xchg
jg
sub
cmpsl
scas
iret
dec
adcl
mov
xchg
cld
les
cld
mov
movsl
inc
mov
push
inc
adc
jg
mov
insb
cmp
xchg
xor
adc
ret
xchg
int3
add
adc
adc
cmpsb
aas
sahf
push
fisubs
pop
sti
popa
sarl
stos
test
aam
jo
xor
cmp
imul
movsb
sti
jne
data16
mov
sbb
inc
hlt
dec
cmpsl
mov
jl
jno
xchg
pop
lcall
insb
dec
sbb
sbb
and
shrl
outsb
xor
mov
stc
or
cs
jno
ds
sub
les
cltd
notl
fsubs
adc
sti
mov
mov
leave
jg
sub
in
imull
xchg
out
imul
ret
loop
sahf
adc
push
mov
jge
pop
xchg
je
mov
fmuls
sahf
mov
jne
mov
stos
xchg
mov
fwait
cmpsl
push
mov
loopne
mov
mov
push
pop
gs
jbe
inc
jmp
lret
js
imul
pop
sbb
xchg
xor
leave
jnp
xchg
cmp
lds
inc
shl
mov
cwtl
aad
shlb
clc
stos
outsb
shr
xchg
call
xchg
mov
call
and
imul
leave
add
and
sbb
clc
std
mov
pop
lret
outsb
out
push
notl
je
sub
stc
sarb
push
and
insb
fdivr
pop
js
push
filds
fildll
sbb
aaa
cmp
loop
dec
xchg
aam
imul
sub
enter
jae
flds
stos
ficomps
push
pop
scas
mov
sub
in
mov
dec
fidivs
xchg
test
nop
lods
jno
mov
sbb
jne
hlt
bound
add
rolw
cmp
cltd
movsb
pop
jmp
ret
mov
mov
mov
adc
pushf
mov
repz
fistpl
gs
pop
outsl
push
es
lods
in
into
js
test
push
fs
jae
xchg
lock
mov
push
mov
data16
stos
clc
or
sbb
mov
fnstenv
jg
or
fstps
rorl
xchg
les
test
aas
xor
sbbl
sub
mov
sub
ja
int3
jmp
mov
sub
jp
xor
maskmovq
idivl
fildll
add
lahf
ret
xchg
inc
sti
mov
pop
push
xchg
je
lock
in
jecxz
fisubl
mov
pop
pop
cmpsb
sti
sbb
arpl
ja
mov
loop
ljmpw
pusha
leave
push
aam
in
mov
and
outsb
cltd
xor
in
pop
es
into
test
mov
mov
dec
xchg
xchg
or
sub
and
push
out
scas
adc
and
fadds
xor
insb
xchg
lods
out
lods
in
xor
add
push
inc
cmp
cmpsl
in
ret
or
jb
push
and
roll
jl
push
sbb
mov
or
lds
cwtl
cmp
mov
jmp
jns
pop
fsubrl
arpl
pop
fldt
pop
mov
cmp
jo
lea
xor
xor
mov
dec
push
shl
hlt
xor
mov
adc
xchg
mov
in
jecxz
add
xchg
or
mov
xlat
fldenv
rclb
inc
rcll
pop
mov
and
add
clc
mov
lret
adc
sbb
push
lds
jmp
cmp
jl
clc
cmpsl
popf
push
push
push
xchg
and
mov
pop
fs
out
pop
test
or
shl
dec
jnp
repz
fcmovnu
aam
or
js
out
pop
push
ja
call
arpl
pop
inc
sub
testl
shrl
leave
jno
iret
vmwrite
xchg
and
addr16
test
shrb
or
push
daa
jl
inc
out
fdiv
mov
dec
add
int3
insb
dec
xorl
outsb
and
mov
xchg
lcall
test
mov
push
insb
dec
cmp
test
fisubrl
mov
and
sbb
lock
cmp
or
add
xor
xchg
outsl
fisubrl
std
xchg
mov
mov
filds
inc
repz
mov
div
dec
sar
in
loop
ret
not
sbb
popa
mov
cmpsb
enter
mov
mov
sbb
addr16
jbe
lret
sub
stos
jge
nop
sub
iret
cs
test
gs
mov
add
cs
add
or
inc
int3
push
inc
sbb
and
xchg
fimuls
fwait
or
and
icebp
cltd
xchg
mov
sbb
int
xchg
leave
orps
inc
jo
clc
jnp
or
icebp
stos
repnz
in
dec
movsl
jmp
das
dec
inc
movaps
sub
ja
daa
sahf
sub
das
xchg
mov
out
mov
out
adc
stc
xchg
adc
test
jne
jo
sbb
jle
pop
jo
sub
dec
pop
stc
das
int3
add
sahf
xchg
or
fld1
add
std
sbb
mov
xchg
fldl2t
mov
xor
out
arpl
cmc
cltd
fstpt
in
je
push
dec
push
arpl
rcrb
gs
ljmp
jle
adc
daa
test
out
cmpsb
pop
enter
sbb
int3
pop
mov
push
shll
fs
sbb
movsl
cmp
xor
stos
sbb
bound
sti
test
cmp
and
mov
scas
sbb
fisubl
sub
scas
das
cli
pop
push
cli
push
cmpl
cmp
inc
ret
push
mov
xchg
pop
xchg
cs
outsl
lcall
hlt
fmull
roll
popa
cs
mov
lods
cmpsb
xor
stos
pop
out
lods
arpl
aaa
shufps
rol
jmp
add
aam
test
cld
dec
mov
add
sbb
out
iret
cmpsl
imull
mov
lods
push
jbe
dec
xchg
arpl
inc
inc
pop
stc
fisubs
movsl
stc
push
repnz
adc
jmp
movsb
ds
loop
and
cmp
orb
xchg
ljmp
push
popf
push
jno
jae
mov
fs
sti
push
imul
ljmp
adc
clc
sub
xchg
les
adc
xchg
adc
outsl
and
jge
imul
lods
xchg
ret
add
sub
push
cld
jge
fsubrp
add
sub
mov
push
push
or
orl
mov
pushl
sbb
xchg
mov
das
outsl
xor
dec
pop
mov
inc
xor
jns
dec
add
call
fsubs
rcll
mov
pop
ja
xor
sub
fmull
lods
out
idiv
jle
gs
sbb
imul
call
jmp
xor
fwait
cmp
movsl
lock
pop
pop
lea
loope,pt
in
ret
aaa
out
gs
xor
loop
cld
out
sahf
cli
and
inc
movsl
gs
mov
push
push
fdivr
push
push
mov
outsl
or
xor
or
jbe
inc
xor
inc
fsts
cmp
fs
outsb
mov
outsb
pushl
mov
cli
adc
dec
inc
push
pop
dec
sub
mov
test
aas
xchg
sahf
mov
add
push
lea
dec
xorb
das
enter
cmpsb
das
lds
in
cmpsb
stc
sbb
mov
ja
enter
outsl
sub
pop
scas
pop
jmp
mov
pop
sub
or
sbb
mov
fsubs
shlb
mov
jmp
clc
fbstp
adc
adc
or
cmp
aas
sbbl
cwtl
xor
dec
dec
outsl
fldcw
cmp
pop
xor
pop
mov
mov
out
popf
or
fnsave
or
xchg
gs
sbb
jnp
fcmovnb
and
int3
gs
mov
sbb
fs
fistps
rcrb
imul
repnz
mov
mov
sub
negb
pop
iret
fmuls
jbe
or
dec
addr16
sbb
mov
push
aaa
dec
push
addr16
push
mov
dec
sahf
xorl
pop
add
and
packssdw
mov
push
dec
mov
or
xchg
xor
push
std
inc
ret
push
mov
sbb
and
enter
arpl
adc
cmp
iret
test
pusha
inc
push
sub
and
cmpsl
xor
clc
pop
jnp
push
pop
adcb
sti
mov
fistpll
pop
add
shll
add
push
clc
fsubr
je
and
xor
dec
in
jae
fdivrs
int
push
mov
lret
test
test
xor
xor
clc
out
sar
jo
sub
or
loop
mov
jle
pushf
scas
test
mov
insl
orl
iret
xchg
jmp
pusha
cmpl
sbb
imul
mov
or
fcompl
pop
xchg
mov
and
pop
mov
fcoml
push
xchg
sbb
push
sbb
int3
xor
fsubrs
cs
add
push
jl
or
out
lods
movsb
add
fwait
divps
imul
imul
aaa
lods
je
mov
cmp
sahf
mov
cmp
frstpm(287
and
pop
arpl
or
into
inc
mov
adc
cmpsl
rcr
pop
ret
cmp
push
push
sysret
clc
fildll
pop
psrlq
xchg
add
jnp
jae
rolb
dec
xor
leave
mov
adc
pop
out
imull
push
push
dec
push
fcoms
dec
fptan
test
xor
jne
jmp
mov
mov
mov
movsl
cmp
pop
push
mov
dec
jge
loop
clc
gs
fldenv
outsl
cmp
addr16
movsb
add
fwait
repz
fidivrl
fldenv
xor
dec
inc
je
dec
subb
xor
leave
cmpsb
lret
inc
jp
or
adc
shrl
dec
mov
inc
sbb
lcall
cwtl
cmpsb
sbb
cld
add
adc
mov
mov
jl
clc
xchg
bnd
int3
lret
pusha
iret
mov
push
or
daa
sub
add
fdiv
stos
push
pop
lret
lret
rcrb
sahf
mov
clc
add
or
inc
lret
xor
dec
sarb
jg
mov
or
stos
ljmp
push
inc
lods
mov
icebp
mov
es
add
pop
push
pushf
pop
cld
and
rolb
test
popa
xor
or
cmp
aaa
sbb
pop
adc
rclb
inc
push
sbb
xor
pop
mov
pop
jb
add
cmp
jb
aas
aas
push
clc
aas
or
stc
push
adc
xchg
lock
lahf
outsl
sbb
fsub
sbb
mov
arpl
stc
outsl
mov
repz
xor
test
and
cld
test
fisubl
xor
push
xchg
inc
cmpsb
pop
mov
ja
in
jmp
sti
mov
je
ljmp
imul
push
or
scas
test
inc
pop
out
cwtl
call
test
xchg
xchg
inc
mov
or
jp
adcl
push
fs
push
js
call
loopne
xor
jmp
loop
ds
std
push
mov
push
ret
cli
sub
negl
jecxz
sbb
mov
in
xchg
sub
test
jl
add
lahf
lds
and
dec
test
dec
sti
jmp
lods
outsb
add
adc
negb
mov
addr16
mov
fwait
loopne
das
ret
or
enter
mov
mov
mov
subb
imul
out
fidivrl
sahf
movsl
int3
stc
mov
sub
cmpsb
pop
stos
and
pop
stos
pop
pop
rol
cmp
push
pop
testl
imul
mov
dec
js
or
sti
xor
mov
sub
xchg
dec
dec
jno
pop
pop
push
hlt
xor
dec
imull
push
fs
lods
fistpl
outsb
lea
mov
or
sbb
pop
jns
addb
sbb
das
or
cmp
insl
pop
mov
xchg
sub
mov
push
mov
cmp
cli
jge
cmp
cmp
cmc
movsbl
ljmp
or
stc
shrl
fcompl
or
add
dec
pop
idivl
push
mov
push
add
stos
jno
and
sub
mov
pop
sub
mov
jmp
out
cmp
out
fs
pop
cwtl
mov
jae
lods
jmp
fdivrl
pop
xchg
out
mov
pop
dec
stos
jl
popa
inc
sti
rorb
push
stc
sti
jge
sbb
fcomps
push
test
mov
sahf
es
les
xchg
cmpsb
xchg
pushf
roll
mov
inc
fldt
cmc
popf
lea
stos
js
jbe
inc
roll
loopne
ja
jmp
scas
loop
jecxz
idivl
cld
mov
sbb
push
pop
cmp
out
sub
adc
cmpsb
pop
inc
jae
shlb
shlb
scas
or
movsl
ret
mov
pop
jo
dec
lret
or
inc
addr16
xor
gs
xchg
clc
and
and
sahf
cmp
push
mov
mov
fldcw
gs
gs
test
jl
in
rcrb
fmuls
dec
insl
fs
inc
dec
aad
pop
daa
shl
sub
lea
xorb
pushl
xchg
insb
jge
lea
add
mov
movsl
popf
add
add
mov
sub
clc
andl
sub
adc
or
stc
xor
fsts
stc
clc
fcoms
jo
sub
pop
jle
push
stos
in
mov
push
cmp
cwtl
lret
sbb
sub
add
scas
add
push
subl
daa
xchg
sahf
mov
pop
fdivr
mov
mov
mov
xor
sub
shll
fstps
out
mov
std
xchg
and
jmp
mov
xchg
jno
rorb
das
adc
test
xlat
sti
lock
cld
mov
fmuls
push
jns
or
aaa
sbb
push
addr16
push
out
daa
pop
jnp
cmpsb
cli
pushf
out
inc
sti
inc
sbb
arpl
push
hlt
or
pop
pop
inc
arpl
int3
and
out
and
xchg
adc
fidivrs
int3
cltd
jae
sbb
sub
xchg
stos
sbb
sub
or
test
lahf
fwait
mov
lock
inc
pop
leave
lods
pop
or
cmp
sahf
out
xchg
ficoms
ds
jnp
cmp
push
push
cs
insb
sub
les
adc
xchg
inc
cwtl
and
mov
dec
adc
aaa
cs
jg
pusha
pop
cli
sbb
cltd
dec
jg
dec
mov
sbb
cli
sbb
cltd
push
pop
aas
pusha
insb
xchg
enter
jle
out
fsubl
jnp
int
idiv
inc
jns
inc
cmp
dec
fistl
shlb
pop
sti
loope
gs
xchg
cmp
nop
test
sbb
mov
mov
and
cmp
jno
fnstcw
sbb
jge
xor
mov
jno
sub
loop
mov
inc
jns
xor
fmuls
xchg
out
popw
stc
cltd
dec
cli
mov
leave
mov
inc
push
cmpsb
adc
adc
shlb
sub
mov
and
mov
mov
or
orl
cltd
xchg
pop
pop
jl
xchg
mov
repz
in
mov
mov
xchg
es
inc
imul
hlt
into
push
loopne
loopne
iret
dec
adc
loop
leave
push
inc
add
int
clc
dec
sub
icebp
cmp
clc
in
mov
add
and
and
sub
cld
fisubrs
push
pop
sarb
imul
sbb
adc
outsl
cmpsb
push
ljmp
cmp
cmp
xchg
je
jns
jp
daa
push
and
pop
insb
xchg
mov
fs
adc
lock
pop
or
pop
mov
xchg
dec
mov
inc
in
notl
into
mov
push
add
es
lock
and
gs
inc
mov
dec
imul
xchg
addb
movsb
and
xchg
test
scas
mov
jp
das
and
loopne
outsl
call
cld
push
ret
adc
lahf
push
gs
iret
mov
sbb
lock
lahf
ret
imul
mov
mov
hlt
addl
sbb
xorb
aas
loop
jb
sti
scas
aas
into
add
es
jae
outsl
adc
jmp
sbb
dec
inc
mov
mov
in
pop
sarl
add
dec
push
adcb
aaa
mov
xor
lds
jl
movsl
xor
jmp
data16
sbb
lcall
jb
xor
clc
aad
addr16
rcrl
stos
icebp
sti
inc
lret
push
in
movsl
das
xorl
jmp
mov
es
stos
jl
xor
add
pop
cltd
outsl
outsb
push
lds
xchg
and
or
adcl
aad
sarl
data16
jle
ficompl
push
adc
mov
or
shr
adc
bound
movsl
sub
dec
mov
lds
jnp
sahf
lds
adc
push
pop
push
neg
test
mov
inc
stc
daa
or
xchg
fimuls
xchg
outsl
scas
pusha
test
push
fstl
sbb
leave
je
ret
jnp
repz
lret
ds
dec
nop
add
stos
pop
or
cmp
cmpsb
inc
xor
bts
and
in
xchg
mov
pop
dec
dec
idivb
dec
sub
shlb
std
enter
cmpsl
fwait
lds
or
mov
xchg
fbld
repz
outsl
data16
mov
pop
icebp
pusha
lahf
push
fisubs
mov
inc
addr16
ja
jmp
xchg
mov
rcrl
pop
xchg
fadd
push
jnp
mov
cli
stos
cmp
mov
inc
ret
xchg
pusha
mov
jbe
xchg
test
inc
mov
gs
inc
mov
sbb
je
loopne
cmc
xchg
in
int3
mov
mov
scas
movsb
pop
out
cmp
imul
loope
mov
inc
mov
mov
mov
mov
clc
cs
cmpsl
stos
sbb
popl
jbe
insl
sub
das
jo
call
xchg
cmpsl
mov
fldcw
xchg
es
jmp
jne
in
fsts
inc
gs
dec
aam
mov
mov
outsb
push
push
outsl
out
test
mov
add
js
add
cltd
and
push
lahf
das
dec
js
push
std
je
cmp
aaa
arpl
adc
pop
in
pushf
sbb
sbb
bound
xor
push
add
dec
test
pushf
in
insl
cmp
mov
shlb
mov
push
sub
sub
or
pusha
mov
mov
out
loope
movb
movsl
mov
xor
fstps
fstpl
mov
pop
repnz
scas
jnp
outsl
clc
jp
ret
gs
jnp
cmpsl
cmpsb
sub
mov
cs
mov
shlb
je
flds
inc
ss
into
mov
mov
fsubrl
sti
mov
xor
ss
xchg
dec
popa
es
pop
push
hlt
add
sarb
ja
pop
data16
sti
cmpsb
inc
lds
das
xchg
add
loopne
cmpps
aam
out
jp
pushf
movsl
shr
aas
fcomps
mov
pop
mov
outsl
jmp
ret
outsl
fimuls
dec
push
out
and
xor
mov
jae
sub
cld
int
fstpt
xchg
push
pop
xchg
mov
sub
pop
fs
scas
leave
jno
add
aaa
fadds
sub
lea
sar
leave
sbb
imul
mov
fstl
dec
pusha
xchg
imul
data16
lcall
in
mov
daa
xchg
loope
add
xchg
jge
jle
fsubl
rcrl
movsb
sbb
jbe
push
push
cmpsb
or
out
popa
pop
loop
loopne
push
aaa
pop
push
jno
aas
cmp
mov
mov
fldcw
aad
scas
sub
and
in
xchg
jle
je
fcoms
test
sub
cwtl
inc
mov
sti
sbb
in
push
ja
insb
pop
cmpsb
aas
or
adc
add
ret
and
pop
std
xchg
jmp
aam
jne
xor
cmpsb
ljmp
xchg
mov
fsubl
xchg
cli
insb
sbb
add
mov
cmpsl
js
int3
and
es
add
sbb
adc
push
ss
add
sub
push
and
imul
js
movsb
into
mov
scas
jne
divl
stos
mov
adc
push
addr16
andb
das
jmp
jl
outsb
retw
and
cmp
outsl
lods
movsb
xchg
loope
data16
ja
fwait
add
mov
loopne
push
int3
pusha
fimuls
movsl
mov
add
or
mov
cwtl
mov
fbld
sti
or
xchg
test
cmc
push
popa
mov
cs
mov
sub
adcl
jne
iret
push
loop
or
jge
sbb
clc
shll
jle
mov
inc
push
mov
adc
adc
mov
mov
scas
ds
mov
cld
shlb
cli
push
xchg
dec
outsl
fsub
fs
rol
loope
pop
adc
pop
in
pop
mov
arpl
lods
popa
adc
testl
cltd
mov
fadds
test
in
ds
or
xchg
adc
sub
das
bound
andl
pop
and
ja
insb
or
dec
push
dec
cmp
testb
fimull
inc
fcmovnbe
fwait
adc
xchg
sti
popa
pop
adc
inc
jno
outsb
push
mov
popa
or
mov
in
and
or
mov
fadds
jo
repz
shl
add
roll
ret
loopne
aam
jle
pop
mov
nop
jle
adc
inc
cli
sbb
sub
mov
call
sub
or
fmul
jp
and
fcomps
cwtl
std
cmp
push
gs
jae
leave
and
and
pop
andl
outsl
into
mull
mov
cmp
pop
scas
jnp
out
lock
jo
fsubr
loope
and
push
inc
orb
out
push
and
loop
popl
jnp
add
xchg
clc
fsubr
test
scas
cld
adc
lea
in
xchg
into
inc
in
jae
jbe
and
or
movsl
jl
jnp
dec
mov
fnstenv
lret
aam
popf
or
inc
outsl
int3
jp
cld
cmp
jns
pop
jno
dec
jecxz
arpl
rolb
shr
dec
scas
pop
xchg
dec
out
fcompl
sbb
out
jns
push
stos
test
or
xor
xchg
inc
sub
push
ds
sbb
push
insl
pop
add
call
pop
xchg
xchg
xchg
xchg
xchg
out
clc
repnz
outsl
add
pop
gs
or
movsl
leave
add
sbbl
push
pop
gs
data16
roll
popa
fwait
lret
xchg
inc
dec
push
es
jl
push
or
adc
mov
or
divb
cwtl
ret
sti
loope
jmp
sbb
sbbl
push
inc
ljmp
mov
pop
data16
cltd
repnz
lea
outsl
ss
jl
pop
mov
xchg
int3
mov
sub
adcb
orb
push
repnz
stos
pop
mov
je
ljmp
inc
mov
in
int3
scas
cwtl
sahf
jns
js
mov
inc
xchg
je
sbb
xchg
es
mov
inc
mov
inc
imul
decb
test
in
mov
int
cmp
sbb
mov
int
fmull
sub
movsl
mov
push
test
mov
xor
mov
stc
popa
push
int
cmp
fs
shr
mov
push
sub
jmp
idivl
test
xchg
ljmp
pop
cmp
xchg
idivl
sub
cwtl
mov
int
push
pushf
adc
fsubrl
fisubl
gs
inc
push
jbe
cli
pushf
test
or
push
fdivs
imul
mov
mov
xorl
mov
mov
popf
or
mov
mov
mov
and
push
lret
push
pop
aad
fs
inc
int
pop
lret
inc
lods
clc
jne
and
lock
ret
test
and
lds
mov
and
fcmovnu
sbb
xchg
or
push
jne
int3
and
jge
cmp
movsb
ds
in
popa
pop
fcompl
push
ja
or
or
decl
jbe
lea
xchg
mov
pusha
or
xchg
xor
pop
int3
mov
push
lret
leave
out
push
inc
mov
ljmp
iret
hlt
fdivrl
lret
mov
fwait
arpl
and
cmpsl
pop
in
mov
int
mov
push
into
int3
int3
out
xchg
jl
testl
bound
out
cmp
rolb
xor
test
fildl
out
push
jnp
addb
xchg
les
lcall
push
cmp
imul
sbb
sahf
stc
push
scas
push
aam
push
sub
dec
dec
enter
mov
pop
stos
pop
das
or
pop
ljmp
gs
lods
cmpsb
daa
dec
lods
dec
inc
arpl
and
popf
std
pop
lcall
mov
mov
xor
mov
iret
iret
ss
pop
sbb
xchg
mov
addl
xor
imul
outsl
adc
pop
jb
mov
fdivrl
aas
loop
or
sub
flds
adc
dec
cmp
sbb
jae
jp
les
push
push
fldl
xchg
scas
inc
push
jo
jne
pop
and
mulw
pop
mov
pop
data16
ret
je,pn
jp
js
pusha
ret
mov
sbb
adc
imull
push
cmp
mov
push
and
sti
clc
mov
xchg
jns
cmp
pushf
mov
push
stc
fstpt
or
shll
out
in
lcall
ja
mov
cli
jmp
inc
mov
mov
xor
movsl
movswl
and
dec
ucomiss
mov
test
add
mov
cmp
addr16
sub
pop
stc
sbb
mov
mov
xor
or
push
imulb
and
data16
jge
cwtl
shll
xchg
gs
fists
mov
xorb
sub
pop
sbb
dec
xchg
cmp
xchg
cmpsl
push
mov
push
movsb
dec
jo
std
add
icebp
push
addr16
es
or
pop
aad
inc
sbb
scas
arpl
push
jne
xor
sbb
fnstenv
js
add
sbbb
call
and
push
jmp
pusha
ds
xchg
loope
rcrb
aas
aas
pusha
out
xor
xchg
pop
sbb
fistpll
sbb
fwait
sbb
jnp
jo
aad
dec
fs
lods
sbb
xchg
push
iret
call
lods
stos
mov
out
test
sbbl
call
fcompl
or
jns
or
popl
repz
sbb
shll
out
daa
jl
push
iret
js
ja
insb
notl
pop
movsb
and
pop
mov
inc
cmp
fmuls
das
loopne
arpl
sbb
arpl
das
loopne
arpl
das
loopne
arpl
insb
fsts
jmp
clc
cmp
cmp
dec
in
pop
imul
or
push
pop
pop
stos
sub
int3
shrb
cmpsb
xchg
jl
or
ds
repz
or
mov
aam
es
test
imul
enter
inc
in
outsb
fucomp
out
lcall
mov
es
in
mov
sbb
mov
gs
flds
push
mov
mov
cmp
mov
daa
or
dec
adc
inc
xchg
jns
or
data16
xchg
lods
aas
mov
jecxz
shll
cmp
hlt
out
xchg
adc
dec
cmp
push
sbb
mov
scas
xchg
xchg
stc
ret
or
xor
out
jge
std
cli
or
shlb
push
mov
xchg
pop
les
movsl
rcl
jge
cmp
cmp
in
cmp
or
sar
je
mov
jle
sbb
enter
and
cltd
or
call
push
stos
or
sti
mov
lret
cli
sarb
inc
pop
dec
pop
scas
getsec
push
add
push
xor
mov
cmp
xchg
sahf
mov
in
incb
push
dec
gs
cmpsb
push
lock
lahf
mov
mov
cwtl
pop
loope
ficomps
pop
ja
in
in
xchg
sbb
fs
mov
imul
push
push
scas
push
call
scas
push
adc
jge
add
sbb
in
stos
dec
out
mov
pusha
dec
gs
push
imul
lret
shrl
rcrb
mov
cld
sbb
clc
fdivrl
daa
rorb
ljmp
sbb
mov
mov
out
movsl
inc
fsubl
cld
stos
fsubr
leave
lds
in
xchg
rcrb
and
add
scas
in
xchg
icebp
jmp
and
mov
mov
sbb
fwait
xchg
push
dec
push
or
push
addr16
push
push
sti
jns
popa
out
mov
mov
cmp
scas
and
popa
xchg
mul
mov
jmp
xor
jnp
test
sbb
sbb
cmp
or
mull
sbb
sbb
test
jg
call
jg
jbe
loope
sbb
or
sub
repnz
aaa
xchg
sub
flds
in
inc
je
adc
jb
test
or
loope
cwtl
xor
adc
imul
loop
sahf
mov
cmp
mov
pop
xchg
cli
inc
inc
xchg
and
mov
ret
inc
cmp
sar
dec
mov
xchg
mov
push
xor
mov
jae
in
pop
sti
xor
loop
cmp
lock
mov
mov
jmp
fwait
jmp
pop
xor
pusha
jge
loope
ss
pop
push
sub
xchg
add
add
sti
gs
popa
outsl
pop
dec
imul
mov
sbb
cmp
dec
xchg
daa
into
jmp
push
data16
out
loop
xlat
ja
lds
cmovne
inc
mov
hlt
fsubs
out
xchg
mov
movsb
idivb
push
addr16
pop
adc
mov
xlat
out
lret
fucomip
dec
mov
push
push
lretw
sub
push
jge,pn
int3
and
push
or
aad
jae
mov
ss
xchg
push
sahf
test
sub
mov
scas
sbb
sbb
adc
lea
int3
xor
mov
call
in
clc
push
jbe
ret
pop
test
clc
ss
push
jnp
outsl
pop
fimull
and
rcll
fadd
sar
cmp
fcomp
jg
push
xchg
cmc
daa
jmp
sub
cmp
push
cli
add
sub
test
push
jns
mov
or
jnp
pop
lret
pop
scas
dec
rcr
lock
jg
es
jg
sbb
cmp
or
fcoms
or
mov
and
jecxz
adc
ljmp
mov
cmp
int3
add
enter
dec
scas
xchg
mov
sti
addr16
data16
xchg
adc
mov
clc
push
dec
xchg
jg
cmp
sarl
mov
or
cmc
or
int
inc
imul
add
orl
inc
or
test
xor
mov
mov
pop
daa
gs
rcrb
stos
rcl
xchg
push
dec
or
sbb
bound
loopne
mov
and
popf
cwtl
cltd
ds
add
mov
cs
insb
addr16
xchg
movsb
cmp
fnstenv
rcr
push
in
outsb
push
pop
sub
push
out
out
add
dec
sbb
insl
push
loope
test
in
push
mov
sbb
mov
out
aad
pop
sbb
stos
aad
cs
jns
out
ret
bound
mov
inc
xchg
outsl
iret
into
push
stos
in
push
shlb
stc
mov
mov
push
mov
pop
rcrb
sbb
sti
sahf
sub
push
icebp
inc
pop
push
pop
or
xchg
ljmp
shl
repnz
jle
call
ret
pop
inc
cmp
pop
adc
pop
push
sub
sbb
pop
cs
mov
pop
adcb
pop
push
jne
mov
mov
cmp
or
shl
inc
cmpl
fwait
inc
mulb
push
std
lahf
inc
sahf
mov
or
sub
xchg
in
mov
repz
mov
xchg
xchg
ror
push
jl
lea
sahf
fdivrs
mov
xchg
cmpsb
cld
lods
cwtl
cmc
test
cmp
pop
xor
adc
mov
sub
pop
scas
mov
cwtl
mov
nop
dec
mov
pmuludq
sbb
adc
mov
mov
sub
dec
sbb
mov
push
push
sbb
enter
fwait
xchg
jp
jno
lcall
sahf
jb
push
push
mov
push
pop
aas
xchg
stos
data16
xor
roll
cmp
fnsetpm(287
xor
test
push
xchg
ljmp
dec
dec
or
jne
add
pop
loopne
rcll
pop
ret
and
incb
daa
dec
fdiv
aas
xchg
mov
int3
lock
test
sbb
or
mov
mov
adc
mov
lea
lcall
sbb
gs
mov
movsb
imul
daa
jge
mov
mov
rorl
or
xor
dec
lock
sbb
shll
adc
pop
stc
xorb
or
or
shll
xorl
hlt
sbb
pop
xchg
or
xchg
xchg
push
repnz
cmp
cltd
popf
pop
repz
ds
dec
repz
scas
push
xchg
shrl
cmpsl
daa
add
xor
inc
inc
push
outsl
sub
sub
clc
add
gs
data16
xchg
negb
jp
inc
add
gs
mov
mov
in
fstl
test
adc
jg
addr16
lea
imul
jg
xchg
ffreep
lahf
jne
sub
mov
xor
test
pop
mov
fwait
ds
xor
jbe
ja
fdiv
push
outsl
pushf
clc
mov
hlt
gs
daa
pop
jne
add
fstpl
add
sahf
xchg
hlt
orb
iret
jne
lock
inc
mov
mov
stos
fwait
pop
mov
clc
mov
add
je
insl
pushf
jg
push
xchg
add
add
jae
xor
add
or
repnz
dec
and
aas
cmpsl
pop
nop
xor
or
lock
mov
cmp
jno
mov
popf
std
and
cmpsb
lock
mov
out
adc
mov
inc
mov
fstpt
mov
dec
and
icebp
dec
outsl
sbb
mov
mov
ljmp
add
fstpl
cmpb
add
fistps
adc
mov
xor
inc
imul
andl
hlt
daa
fistps
cmp
lahf
fmuls
push
mov
lea
fst
push
outsl
divl
es
jns
inc
jge
lea
imul
into
test
add
test
push
mov
ficoms
aas
cld
and
sbb
aad
popl
and
push
addb
test
pop
mov
jns
cltd
fistpl
sbb
incl
cmp
pop
stos
ljmp
stc
xchg
add
gs
lea
loope
push
cmpsb
pop
insl
or
lret
fcomi
or
sub
dec
test
push
sub
js
push
repz
xor
andl
gs
sahf
stc
or
loope
inc
push
cmpsb
push
xor
rcl
inc
push
fistpl
jne
shll
outsb
notb
lret
in
call
fwait
sti
jo
push
add
fistl
add
push
or
ss
cmpsb
repz
push
xchg
imul
out
lcall
pop
xor
inc
dec
sub
mov
pop
inc
inc
cmpsb
scas
push
loopne
es
sub
inc
cli
push
jnp
insb
sti
dec
mov
daa
pop
cltd
sbb
ret
outsl
dec
notl
jle
test
stos
mov
pop
add
push
fildll
loopne
mov
dec
pop
loopne
sub
or
mov
test
fdivrp
scas
pop
jmp
cmp
dec
jl
jnp
gs
icebp
xchg
or
inc
aaa
popa
notl
out
js
or
sub
scas
pop
add
pop
mov
jmp
ret
stos
mov
mov
jecxz
shl
dec
or
fwait
mov
pop
daa
dec
dec
xchg
push
and
stos
xor
sbb
xchg
ja
testb
loopne
ljmp
data16
out
mov
xchg
sbb
or
movsl
mov
das
adc
add
adc
xchg
je
ja
test
fisubrl
testb
pop
push
stos
out
xor
dec
sbb
data16
addr16
lock
daa
sbbl
std
iret
push
outsl
xchg
int3
daa
stos
lret
cmpsb
xchg
and
icebp
mov
xchg
sbb
lcall
js
stc
cltd
inc
clc
fcomp
dec
pop
ss
add
sbb
jmp
scas
push
xchg
inc
arpl
in
adc
jge
adc
and
inc
push
out
mov
sbb
scas
fldlg2
iret
dec
shrb
pushf
dec
jmp
into
mov
lret
icebp
push
sbb
xchg
adc
dec
stc
cwtl
out
je
dec
dec
setb
add
add
mov
cmpsb
or
sub
dec
xchg
push
mull
cmp
xor
mov
push
add
ss
xchg
shlb
test
in
and
pusha
pop
into
add
fsubrs
cs
out
scas
xor
push
inc
sbb
insb
movsb
adc
das
mov
out
cmp
hlt
jno
push
mov
fmull
xchg
addr16
cmp
push
sbb
out
jg
shl
xchg
sbb
cltd
sub
mov
cs
outsl
test
sbb
jno
scas
jmp
jns,pn
jecxz
cli
or
dec
and
aad
xchg
sbb
aad
push
jne
xor
jbe
mov
push
cmp
mov
mov
mov
or
jmp
test
inc
loope
push
mov
fwait
sub
fdivrs
imul
push
popf
adc
lds
test
repnz
mov
xor
test
pop
daa
cmpsb
clc
out
cmp
pusha
stos
cli
jl
mov
sub
popf
pop
mov
inc
xor
sbb
mov
outsl
cmp
incl
enter
pop
mov
add
bound
pop
ja
jmp
add
sub
jecxz
imul
fpatan
ja
pop
xchg
mov
js
repz
pop
mov
pop
xchg
test
mov
adc
adc
ret
sbb
push
mov
dec
pushf
dec
lret
pop
test
test
mov
inc
push
mov
aam
xchg
and
imul
sub
inc
pop
sahf
loopne
pusha
sub
cmp
test
push
pop
mov
or
inc
int3
dec
cmp
popf
in
test
mov
pop
or
popf
sub
adc
or
add
je
push
cmpsb
xor
xorb
pop
dec
mov
sahf
adc
jne
sbb
fidivrs
mov
clc
sub
leave
ror
dec
cmp
mov
and
push
in
gs
out
out
test
lret
data16
jbe
inc
sub
or
test
aas
sub
mov
and
pushf
add
lods
add
das
sub
int3
pop
adc
xchg
sub
cwtl
pop
push
pushf
mov
movsl
lods
push
xchg
sbb
sub
adc
add
and
dec
dec
jbe
sbb
stc
aaa
pop
gs
cmp
fidivrs
psrld
fisubs
dec
rol
iret
pop
imull
mov
cli
fimull
scas
cmp
fistl
rcll
mov
mov
xor
pop
sbb
sbb
fstpl
inc
test
mov
pushf
jbe
xor
pop
or
divl
cli
mov
lods
jnp
clc
pop
enter
or
or
inc
mov
scas
movsb
push
mov
pop
in
mov
and
ja
loop
pop
popl
xor
jge
in
sbb
jle
xchg
sub
sub
lret
push
push
cwtl
xchg
cli
je
xor
sub
lock
add
xchg
mov
fbstp
or
aam
jmp
in
xchg
les
jnp
dec
adc
cwtl
pop
insb
jae
in
je
push
daa
adc
fcomps
cmp
fildll
lcall
xor
repz
push
inc
outsb
mov
es
inc
negl
add
sbb
repnz
pop
mov
test
pop
in
sbb
sti
push
xchg
movsl
sbb
inc
arpl
sahf
dec
jns
insl
pop
sub
stc
sub
and
data16
data16
mov
pop
scas
xchg
jg
clc
mov
mov
jns
or
jl
aaa
clc
mov
clc
pop
cmp
cwtl
lcall
mov
scas
pop
out
idivb
test
xor
mov
xor
fidivrl
call
les
subl
xchg
push
push
pop
repz
and
and
pop
inc
push
sbb
sbb
xor
sbb
js
outsl
loope
fistpl
sarl
push
ja
gs
or
add
sub
movsb
or
mov
out
shlb
out
in
or
cmp
mov
mov
out
add
faddl
sti
out
push
lock
add
fists
cmc
and
dec
movsl
xor
fmull
pop
or
stc
and
sbb
mov
in
jns
jle
sbbb
enter
ss
fists
ja
pop
in
pushf
mov
and
call
fnstcw
inc
hlt
ss
mov
into
pop
jmp
testl
mov
mov
outsl
push
cltd
and
lds
push
daa
scas
pop
mov
mov
sub
add
pop
jge
jnp
lfs
xchg
adc
sbb
cld
jnp
mov
std
or
fmuls
xor
mov
movsl
fucom
mov
xor
sbb
dec
xchg
mov
push
rclb
inc
cmp
cld
ja
sarb
sbbl
clc
add
mov
mov
sahf
push
lea
pop
jbe
add
loopne
mov
mov
and
add
icebp
ljmp
xchg
pop
ret
mov
fstpt
jge
pop
psubb
dec
jno
je
lea
inc
inc
cmp
cmpsb
pusha
jle
pop
xor
gs
rorb
and
scas
push
gs
or
jne
mov
inc
sub
mov
push
call
and
cmpsl
dec
mov
pop
mov
mov
mov
pop
mov
add
jno
arpl
xchg
xchg
push
xchg
dec
movsl
xor
out
inc
daa
sub
dec
mov
pop
adc
pop
sahf
jmp
mov
xchg
scas
sbb
mov
sbb
cs
dec
xchg
out
mov
xchg
mov
sti
and
mov
xchg
out
sti
clc
fwait
aas
sbb
subps
shll
add
add
sahf
xchg
sub
mov
mov
pop
popa
push
scas
cmp
sbb
lds
xchg
mov
pusha
int
xor
sbbl
addr16
aaa
cs
cmpsl
pushw
and
fcomps
inc
int3
movb
adc
mov
repz
in
push
clc
in
pop
cmp
subl
lods
xchg
sahf
mov
and
aas
iret
sbb
loop
push
into
popa
out
xor
fdivr
xor
aad
scas
sahf
rorl
sbb
xchg
mov
push
push
or
mov
jmp
fsubrs
sbb
xor
push
into
divb
or
call
push
pop
xchg
sahf
clc
aaa
cltd
inc
ret
pop
flds
cli
dec
jg
in
popa
lock
shl
mov
jmp
in
inc
xor
cmp
push
outsl
cmp
and
ss
outsl
inc
pop
fsubs
push
mov
test
sbb
mov
mov
jmp
jmp
push
fucomip
test
ss
outsl
pop
lods
daa
mov
and
jg
test
je
or
sbb
ror
add
idivb
scas
mov
xchg
adc
scas
cmpb
mov
mov
jp
cltd
cs
jmp
imul
loopne
cmp
and
pop
dec
cmpsl
dec
test
mov
insb
cli
sub
out
mov
push
jae
dec
fsubl
add
mov
inc
scas
pop
fildl
push
xchg
or
xchg
jnp
inc
fldt
in
and
gs
loope
negl
popf
xor
out
aam
pushf
pop
cmp
push
insb
repz
pop
add
out
out
arpl
shr
ret
mov
jp
test
icebp
sbb
sbb
dec
aas
and
pop
jae
rcll
or
xchg
sbb
loopne
pop
lods
fistpl
aas
fmull
sbb
mov
lds
aaa
fmul
mov
hlt
jle
pop
jns
pusha
inc
jmp
pop
std
sbb
mov
inc
push
fwait
or
fcomp
pusha
and
ljmp
scas
or
sbb
sbb
xor
outsl
in
arpl
loop
or
cmc
lods
sub
pop
repz
push
cmpsb
scas
or
ficoms
cli
ja
inc
movsb
shlb
jb
jb
inc
adcb
jae
sbb
subl
fldt
or
push
ficompl
test
push
xorl
pop
fcomi
xchg
adc
aam
fs
push
inc
mov
aas
aaa
add
in
mov
imul
or
jmp
sbb
xchg
pop
aas
or
in
ffree
sbbb
cmp
jae
mov
dec
adc
mov
mov
push
fidivs
int3
div
das
xchg
iret
push
jl
add
push
mov
ljmp
mov
add
in
and
fsubl
out
jp
test
sbb
int3
cmpsl
das
sbb
pop
enter
leave
outsl
les
sub
fdivrs
push
pop
fsubrs
xchg
mov
xchg
pop
jno
pop
xchg
push
jno
scas
sub
insl
inc
jnp
push
int3
bound
xchg
arpl
daa
sub
xchg
mov
xchg
mov
shll
jmp
sbb
popf
pushf
jae
loopne
test
lret
mov
fiaddl
in
ja
rclb
decb
mov
aad
loopne
lahf
jb
dec
nop
in
lret
outsb
mov
imul
adcb
insb
pop
scas
sahf
jl
mov
repnz
mov
xchg
pusha
jle
lods
cmp
mov
js
std
dec
sbb
inc
sub
lds
lock
imul
aaa
or
dec
rorl
je
inc
add
sub
cmpsb
mov
mov
or
mov
sbb
ja
dec
cmp
out
fs
cli
sbb
add
rorb
out
push
cli
test
ja
add
imul
dec
gs
push
jg
pop
cld
out
hlt
popa
pop
pop
jmp
or
test
outsl
cmpsb
mov
push
into
push
adc
fistl
and
jecxz
mov
cltd
and
std
add
scas
clc
repz
gs
orl
int3
cwtl
aam
jbe
movzwl
enter
sarb
pop
addl
adc
cmpsb
insb
out
xorl
mov
jbe
aas
push
mov
jno
mov
arpl
insb
js
add
popa
cmpsl
out
arpl
lahf
ds
sbb
pop
pop
int
push
mov
js
das
mov
lret
xchg
decb
and
inc
push
pop
repz
scas
xlat
fimull
neg
mov
loope
sarb
stos
imul
pop
jb
sbb
xor
cs
xor
bound
mov
sub
push
pop
pop
push
mov
jg
xchg
adc
addl
push
pop
and
js
pushf
pop
adc
xorl
rorb
addb
js
add
xchg
mov
mov
fstps
add
mov
mov
icebp
rorb
data16
movsb
mov
pop
pop
aaa
xchg
dec
inc
cmp
mov
repz
lahf
add
lret
hlt
dec
jns
imul
jns
sbb
lods
pushf
fldt
jne
je
js
loope
mov
cmp
and
sub
adc
pop
lcall
sbb
pop
fmull
insl
daa
xor
jge
iret
jp
mov
pop
nop
mov
push
inc
and
scas
call
cs
sbb
dec
and
ja
lahf
mov
stos
jg
push
out
sar
cli
inc
dec
or
adc
scas
mov
call
jb
jge
mov
fmuls
dec
jge
cli
jne
mov
xor
pop
je
inc
push
insb
adc
cmp
loope
fimuls
jns
mov
js
jne
mov
lods
pop
negl
nopl
sbbl
rorl
pop
insl
sbb
add
mov
mov
or
lret
icebp
jne
lea
jae
mov
aad
lock
movsb
jb
push
out
push
inc
ds
adc
cmpsl
mov
jmp
sbb
xchg
jle
test
or
pop
lock
data16
and
sbb
push
in
lcall
test
addr16
lods
mov
sbb
lods
jno
aaa
mov
outsl
add
out
pop
jne
mov
dec
loopne
in
pop
iret
jo
shll
js
adc
fxch
rolb
stos
fldt
out
inc
leave
sbb
cmc
mov
in
mov
mov
cmpsl
std
pcmpgtw
push
dec
popf
cwtl
pop
inc
rorb
and
cmp
js
imul
outsl
jmp
ds
xor
jge
push
fidivl
stos
popa
shr
mov
loop
pop
mov
xchg
clc
xor
add
out
jo
cmpsl
pop
xorb
pop
and
xorl
test
mov
leave
jb
sbb
or
insb
enter
pop
jne
std
call
add
xchg
fbstp
arpl
or
mov
and
sub
hlt
jne
lahf
dec
xchg
out
mov
sbb
and
daa
jne
pop
or
popa
das
jmp
pop
cmc
xchg
in
jg
push
sub
sbb
outsl
das
pop
loopne
test
mov
shrl
dec
mov
mov
sub
aaa
inc
dec
inc
and
mov
jge
lret
sub
aaa
xchg
clc
adc
push
enter
outsl
jne
pop
dec
iret
mov
mov
mov
xor
mov
call
cli
add
ret
std
or
or
pop
jp
jmp
sets
out
test
pop
add
scas
push
pushf
add
mov
and
jae
xchg
jae
imul
movb
pop
jg
pop
out
cmp
ret
xchg
add
shr
jnp
mov
fcomi
fldcw
out
div
setg
pop
cmpsl
call
ss
sub
pop
jnp
pop
imul
push
repnz
xor
pop
fadds
sub
adcb
fsubl
stos
ret
add
sbb
dec
notl
cmp
dec
cltd
ja
testb
shrb
orb
js
pop
add
mov
mov
cld
sahf
sub
xchg
arpl
jnp
lret
aad
rorb
shr
inc
jno
insl
pop
clc
xchg
dec
aaa
cmp
xchg
xchg
rcrl
orps
repz
test
cmp
push
scas
jmp
movsb
outsb
out
outsl
movsb
xchg
xchg
shr
mov
ljmp
pushf
int3
jbe
cltd
pushf
cwtl
xor
aaa
push
and
out
enter
xchg
fistl
daa
mov
dec
mov
stc
cltd
outsl
mov
mov
and
cmp
cmp
pop
pop
xchg
gs
ret
int
insl
jmp
pop
push
lcall
mov
lock
jne
push
sar
lcall
xchg
shufps
test
inc
inc
inc
out
xchg
fcoms
push
dec
arpl
dec
das
dec
jp
mov
sbb
ds
dec
inc
push
xchg
cmc
jne
std
xor
jae
int3
loop
adc
pop
imul
aas
xchg
xor
jb
dec
sbb
xchg
pop
pop
cs
sbb
js
fs
cmp
aaa
add
add
hlt
lods
add
sarl
mov
imulb
lret
adc
jecxz
into
sbb
cwtl
paddusw
gs
xchg
sub
push
or
outsl
or
fisubl
imul
mov
sub
pop
push
das
inc
lods
out
jl
xchg
int3
pop
xor
or
mov
or
shrb
add
cmp
fsubr
jnp
ret
stc
scas
addr16
push
test
fwait
xchg
xchg
mov
aad
jmp
inc
mov
xchg
fwait
sbb
mov
insb
mov
sub
sbb
notb
loopne
test
sbb
push
jp
push
add
mov
dec
insl
arpl
xor
mov
fbld
sbb
sub
inc
dec
cmp
gs
mov
cmp
clc
mov
xchg
or
pop
es
adc
sbb
cmc
push
fstps
je
push
adc
and
test
jb
or
add
loope
pop
popf
cmp
mov
push
rcr
dec
ljmp
out
push
into
add
leave
aam
shll
in
cld
lcall
pop
fcoms
rorb
loopne
scas
mov
push
loop
cwtl
mov
int3
inc
mov
stos
push
mov
sbb
ljmp
movsb
cs
lahf
sbb
and
and
andb
mov
sbb
dec
and
cli
cmp
sbb
cmp
out
mov
mov
sti
out
lahf
mov
jne
cmp
movsb
pushf
es
jge
fcoml
imul
pop
jo
leave
popa
adc
and
enter
int
add
sbb
sub
mov
imulb
rcrb
mov
add
sub
sbb
orl
and
hlt
cld
movsl
rorb
hlt
sahf
mov
fistpl
mov
imul
dec
shll
jo
push
sub
pusha
xor
adc
lcall
pop
push
sub
adc
imul
popf
jl
fisttpl
push
jl
dec
and
lea
xchg
mov
int3
jge
mov
xchg
push
mov
fmull
xchg
mov
push
fcoml
shl
mov
test
push
or
or
es
mov
lock
inc
jge
inc
push
lret
pop
ret
add
xchg
pop
adc
ja
push
inc
pop
cmc
sub
and
dec
mov
scas
test
addr16
jecxz
stos
lcall
xor
fmull
mov
mov
xchg
xorb
or
mov
sub
rolb
inc
leave
jg
adc
mov
adc
scas
add
jno
jmp
mov
out
ret
add
add
push
lret
arpl
adc
mov
icebp
mov
jge
dec
shll
scas
loopne
sti
and
sub
push
adc
adc
sub
dec
jbe
jne
sub
xchg
adc
jecxz
lret
ret
cli
mov
mov
mov
sub
fsubrs
pop
sahf
dec
call
mov
std
cwtl
fstpt
testb
out
and
scas
cli
adc
int
push
arpl
jnp
push
mov
xor
rcrb
pop
pop
das
mov
add
inc
aas
stc
dec
out
sub
sbb
pop
or
aad
incl
xor
or
psubsb
cmp
mov
out
or
bound
mov
mull
outsl
mov
leave
shl
iret
addr16
out
mov
cld
mov
xchg
or
cmpsl
cli
cwtl
daa
test
add
fadds
jle
or
mov
in
es
idivl
mov
aad
sub
fsts
jae
xchg
fsubrs
adc
sbb
pop
xchg
cld
mov
repnz
ja
out
cmpsb
test
outsl
shrl
mov
mov
shrl
jbe
fwait
jns
dec
pop
dec
pop
mov
std
cmp
xor
cmp
or
pop
in
xchg
cmp
add
loope
pop
dec
gs
xchg
inc
int3
cmp
inc
fcmovnu
xor
pop
in
loope
sub
push
adc
sbb
cmp
dec
push
mov
das
lret
scas
aad
repnz
fs
out
mov
xor
cld
loop
lahf
or
adc
lods
and
das
push
push
call
pop
cmpsl
arpl
sub
and
mov
ss
mov
sub
cld
cmp
xchg
sub
xor
sub
adc
into
das
cmp
sub
or
in
and
imul
pusha
and
data16
mov
loopne
leave
xor
or
fcoml
sub
and
outsl
out
gs
mov
xor
and
popl
dec
xchg
outsl
or
clc
gs
es
inc
clc
ds
jecxz
or
or
and
loope,pt
mov
xchg
or
test
mov
scas
cli
pop
decb
into
add
outsb
lret
xchg
into
pop
xchg
aam
clc
sbb
test
lods
mov
xchg
inc
adc
or
out
inc
aaa
push
scas
mov
in
cmp
cmpsl
mov
ret
out
xchg
std
push
mov
push
fsubs
std
sar
add
addr16
or
jg
jp
mov
cmp
shlb
js
sbb
lds
adc
mov
mov
cli
dec
out
scas
push
cwtl
mov
js
pop
push
dec
in
push
test
cli
xchg
and
nop
mov
push
int3
clc
pop
fbstp
mov
mov
cmp
xor
loopne
add
incb
pop
mov
aas
cmp
cwtl
bswap
cwtl
clc
push
roll
std
pop
fincstp
pop
rcrb
add
lret
leave
es
cld
jb
mov
stos
loope
mov
jns
clc
inc
sub
fmulp
movsb
cmp
cmp
dec
push
outsb
daa
cli
cli
xchg
inc
push
xchg
push
stc
and
hlt
jne
testb
xchg
pop
xchg
push
int3
fdivs
shll
scas
fisubs
into
and
xchg
xor
or
js
iret
dec
sbb
mov
orb
xchg
fnstcw
ficompl
das
xchg
movsl
mov
fsts
push
mov
in
loop
and
gs
adc
nop
fimull
pusha
cmp
jl
mov
dec
cmp
xorl
scas
push
lock
adc
mov
int
and
sub
addr16
and
test
xor
cli
loope
clc
faddp
pop
jne
mov
data16
pop
idivl
push
dec
shrl
sbb
add
lds
insl
mov
sbb
push
hlt
lcall
cmpsb
cmp
mov
or
push
xchg
addr16
fs
hlt
dec
mov
xor
das
adc
cwtl
stos
push
xchg
movsl
pop
jns
sub
enter
jecxz
jl
lods
inc
mov
cmp
aaa
xchg
mov
ja
adc
hlt
data16
jecxz
cs
pop
dec
fsubs
aaa
js
outsl
xor
sub
in
rclb
mov
push
pop
dec
dec
push
xchg
cmp
xchg
mov
inc
or
cmp
sub
rorl
xor
sbb
push
and
dec
pop
cmpb
xchg
les
push
push
push
pop
sub
arpl
xchg
pop
movsl
mov
mov
int
idiv
pop
shll
frstor
and
subb
fcoml
adc
or
xchg
pop
in
or
stc
pusha
es
push
sbb
jle
js
push
xchg
xor
ret
xchg
test
mov
cwtl
popa
shlb
pop
out
xchg
push
sahf
and
insl
sar
jnp
or
imul
jmp
aaa
mov
pop
sub
jle
leave
push
cmp
loopne
dec
test
rcrb
mov
shlb
xchg
pop
lcall
push
sbb
dec
in
cmpsb
xchg
sub
repnz
add
xchg
mov
das
jl
mov
popf
push
mov
jg
lahf
push
sbb
jg
js
pop
and
jg
or
push
mov
push
sub
cs
inc
adc
sbb
push
or
pop
addr16
daa
sbb
adc
mov
dec
add
out
xor
push
sub
out
scas
test
cmp
cmp
loop
or
sub
jge
sbb
out
es
test
pusha
stos
call
dec
inc
cltd
xchg
aas
dec
jns
mov
lret
gs
mov
lcall
sub
mov
jmp
addb
outsb
lret
mov
and
mov
test
outsl
push
sti
push
cmpsl
movsl
jp
loope
sbb
jae
out
add
adc
jge
mov
fcmovne
in
ljmp
push
pop
pusha
lret
fs
outsb
ja
sbb
and
mov
mov
or
jbe,pt
fisubl
mov
jp
arpl
movsl
add
jbe
push
add
mov
cmp
push
or
dec
add
sti
lret
xrelease
das
or
xchg
out
out
add
push
or
fwait
adc
adc
xchg
aam
sub
inc
push
imul
pop
das
add
mov
xchg
into
or
pushw
fmuls
push
xchg
sbb
dec
stc
scas
aaa
pop
ljmp
xchg
lds
loop
mov
fisubrs
sub
out
lea
or
sbb
sub
pop
test
sub
gs
outsl
in
or
and
sti
mov
mov
lods
and
daa
push
ret
jecxz
push
stos
cmp
clc
imul
scas
ljmp
ljmp
shlb
xor
mov
mov
dec
sub
mov
and
nop
dec
popa
out
dec
sub
inc
jecxz
fwait
data16
std
jl
loop
les
xchg
mov
mov
testb
sbb
dec
cmp
mov
jmp
cmp
xchg
pop
cmp
fildl
decb
es
cld
test
push
jnp
shll
shlb
sarl
jns
cltd
mov
and
xchg
xor
inc
ss
sbb
into
dec
jge
or
pusha
decl
cmp
pop
ljmp
flds
cmp
loopne
jnp
shrl
movsb
jns
mov
iret
add
bswap
sahf
scas
dec
mov
leave
rorl
mov
testl
mov
fcom
call
into
sbb
push
outsl
loopne
push
ret
xor
cmpsb
jns
lock
push
xor
scas
jle
xchg
cmpb
push
xor
test
packsswb
cmp
call
popf
inc
data16
rorl
push
stc
pop
lock
je
dec
and
push
mov
push
xchg
pop
shrl
fsubl
gs
xchg
or
pop
sbb
dec
mov
mul
cmpsl
pop
adc
xlat
packsswb
push
hlt
jecxz
xchg
shr
lea
mov
movsl
gs
ret
adc
add
mov
shrl
lods
add
jle
fiaddl
sar
pushf
jge
hlt
inc
push
jecxz
add
movsb
gs
jnp
data16
arpl
jb
mov
leave
gs
mov
lahf
jnp
sar
cmpsl
push
sti
sti
hlt
in
cld
xchg
jnp
stos
sti
daa
dec
ret
fadds
and
dec
fimull
cmp
fdivl
sbb
pop
idiv
mov
fwait
imul
cmp
addr16
sahf
mov
es
sub
pop
dec
push
jmp
inc
stc
fcomp
push
outsb
pop
sub
popa
jnp
aad
add
daa
dec
xorb
sahf
popf
sub
xchg
test
out
xchg
cli
jecxz
bnd
gs
sub
out
testl
hlt
in
daa
mov
jnp
inc
clc
sarl
sub
sub
data16
push
scas
sbb
insl
pop
cli
fmul
int
and
pop
icebp
rclb
mov
into
mov
mov
pop
out
lea
push
dec
pop
je
adcb
enter
mov
pop
fwait
lret
mov
lahf
jmp
int3
orl
adc
sarb
jne
push
pop
flds
mov
ret
pop
pop
test
cwtl
popa
inc
fstps
jmp
pop
ror
inc
xchg
arpl
pusha
xchg
ss
scas
sub
mov
mov
lock
add
sahf
inc
sbb
mov
or
popa
out
and
loope
sub
dec
mov
dec
leave
jge
mov
pop
out
inc
bswap
pop
mov
sti
or
scas
inc
cltd
pop
pop
pop
jnp
push
es
dec
mov
lea
outsl
mov
movsb
das
in
loop
push
or
mov
rorl
fdivs
and
aaa
out
dec
stc
ja
sbb
xchg
scas
leave
ja
out
stc
mov
push
clc
icebp
pop
fsts
movsb
and
dec
fcoms
pop
out
out
sbb
push
add
push
out
gs
mov
push
sbb
mov
or
fs
mov
cmp
inc
addr16
lret
jecxz
push
pop
pushf
xchg
inc
xor
lods
xchg
enter
ret
mov
pop
stos
je
or
xor
insl
jns
xchg
lods
jo
dec
jns
rcrl
or
fdivl
and
mov
cmpsb
cs
out
pop
cmpsl
rep
clc
lret
jae
push
in
test
jae
or
fsts
push
cwtl
push
xor
ljmp
imul
jns
cs
int3
and
sub
das
or
jmp
in
add
shl
fsub
cmpsl
lret
pop
popf
fidivl
xchg
adcl
and
mov
fadd
cmpsb
pop
fwait
loope
xchg
jp
jnp
push
adc
push
push
fimull
bound
cmp
mov
inc
fwait
shlb
mov
pop
cli
jmp
jmp
sbb
mov
and
or
inc
ljmp
push
push
stc
pop
cmpsb
pop
sahf
std
mov
fnstenv
jo
fmuls
mov
scas
sti
cli
test
xchg
mov
aas
lret
mov
sub
rclb
pusha
dec
xchg
cli
je
mov
jbe
je
sub
add
pop
insl
mov
add
sub
pop
xchg
mov
sub
movaps
leave
and
rorl
add
aas
jns
xchg
inc
cli
test
out
repnz
cwtl
push
mov
pushl
and
repz
test
mov
or
bound
not
sbb
jmp
out
inc
sub
daa
adc
lahf
mov
push
sti
popa
mov
mov
jg
cmpsl
out
cld
clc
cmovns
push
cmp
add
adc
rcrb
setae
sub
pop
ds
xorb
jb
mov
in
out
sub
pop
scas
loope
js
int3
mov
mul
test
push
aaa
dec
sbb
pop
out
popf
cld
outsl
stos
sbb
pop
fucom
shll
adc
rcrb
push
lahf
push
lock
imulb
cmp
jg
jge
daa
sbb
insl
ds
mov
mov
sbb
fisubl
pop
das
insb
daa
call
sti
inc
ret
push
or
jg
push
rolb
in
addr16
ljmp
pop
sub
cmc
gs
int3
iret
or
jne
sbb
mov
bound
stos
push
mov
cmpsl
ljmp
cmp
mov
mov
add
test
cmc
outsb
mov
pop
div
jmp
xchg
inc
push
mov
push
push
xchg
sbb
push
adc
mov
mov
inc
imul
pop
fcoms
test
push
shll
out
cmp
outsl
or
xchg
xor
sbb
aas
xlat
sbb
orb
mov
jo
sarl
stc
clc
cwtl
xchg
rclb
dec
fldcw
mov
ljmp
data16
inc
add
cmp
mov
stc
push
pop
test
dec
add
and
or
push
jl
scas
rcrb
int
cs
jo
jnp
cmpsb
repnz
mov
or
mov
lds
cmpsb
sbb
daa
push
xchg
in
push
jbe
or
test
pop
mov
mov
push
das
inc
or
fidivl
fs
cmp
xor
aaa
xorb
sahf
sbb
jmp
or
mov
outsl
mov
pop
mov
inc
sbb
mov
dec
loop
insb
push
outsl
out
test
sub
mov
and
pop
cmp
adc
xrstors
test
sbb
xor
xor
sti
in
adc
dec
pushf
shl
stos
push
std
add
pushf
into
lds
sbb
or
sub
repnz
dec
pop
xor
mov
pushf
inc
fwait
stc
fs
std
out
push
jae
mov
imul
out
sti
dec
out
fimull
add
pop
mov
fs
add
jl
jnp
mov
push
xchg
xor
call
or
std
xchg
fildll
mov
sub
jae
pop
test
sbb
fwait
ror
and
sbb
cmp
out
std
dec
sti
stc
std
sub
in
lcall
lock
adc
fs
cmp
inc
movsl
push
cmp
or
and
call
push
pop
pop
je
xchg
xor
and
pop
mov
outsl
jmp
fists
cmp
js
pusha
dec
imull
out
lods
mov
pop
jne
pop
das
mov
xor
mov
ret
gs
mov
fs
and
cltd
adc
mov
ret
in
pop
out
scas
scas
movsl
mov
es
popa
mov
mov
jae
stc
fwait
outsl
imulb
inc
pop
or
loopne
cld
es
fucomip
lea
int3
mov
fisttpll
shlb
pop
xchg
or
jbe
sbb
out
data16
pop
mov
fwait
sbb
es
sar
aaa
dec
mov
lods
jp
test
mov
push
jb
xor
cld
fadd
sbb
test
adc
push
sbb
cwtl
je
fsts
xchg
dec
fidivs
sbb
negl
out
cmp
mov
in
xchg
out
mov
jmp
cmp
xor
push
inc
cs
or
es
push
jecxz
sbb
sub
jns
pushf
repz
in
mov
mov
pop
sti
daa
mov
fdivrs
jns
lds
scas
test
jmp
js
cmpsb
dec
insl
jmp
inc
fwait
adc
lret
es
dec
out
pop
data16
pop
jl
cmpsb
or
sbb
add
ss
and
clc
outsb
pop
xchg
and
aad
fwait
sahf
std
xchg
dec
sahf
movsb
fisubrl
adc
stc
std
add
cmpsb
jge
and
ds
and
mov
pop
jecxz
jae
daa
push
fcoms
mov
pop
cwtl
mov
jns
sub
push
scas
add
js
and
stc
ret
pop
push
jnp
rcrl
insl
into
iret
add
int3
rorb
movsl
hlt
add
test
jae
sub
xchg
xor
mov
and
scas
pop
and
adc
roll
in
or
cmp
sets
cli
clc
fs
sub
cmp
in
xor
andl
sahf
ds
adc
dec
jbe
enter
es
mov
call
int3
adc
push
mov
inc
and
outsl
inc
testb
push
je
jl
or
adc
and
adc
sbb
cmpsl
sbb
rcrb
fcompl
lcall
pop
sti
mov
push
shl
jg
xchg
sbb
mov
push
xchg
pusha
push
fwait
ds
adc
sbb
xor
xor
push
pop
insb
jl
pop
js
sub
fstps
or
pop
sbb
mov
test
enter
lods
es
lods
mov
mov
inc
mov
cs
or
inc
and
xor
xchg
cmp
rolb
insl
add
sbb
inc
inc
inc
test
fwait
push
cmp
xchg
cmp
mov
out
dec
lds
adc
xchg
adc
rolb
mov
mov
repnz
pop
scas
sti
flds
mov
mov
cmp
push
jnp
cmp
mov
das
movsl
into
mov
jns
in
dec
mov
aas
jle
mov
xor
loopne
push
push
push
test
popa
sti
dec
cmp
push
daa
xor
pop
adc
mov
fiaddl
scas
mov
dec
push
out
ds
jmp
not
jg
pop
inc
shrl
divl
mov
pop
and
sub
xor
mov
pop
dec
imul
pop
outsl
psubb
cmp
pop
iret
loope
fnstcw
icebp
cmp
or
or
push
mov
mov
sbb
addr16
clc
iret
sbb
inc
fists
adc
mov
aaa
cmpsl
mov
pop
sub
imul
outsl
or
data16
not
stc
rcll
mov
ljmp
inc
push
mull
pop
negw
sbb
push
fadds
mov
or
mov
stc
jns
dec
sbb
out
xor
sahf
sar
cli
fsubrs
fnstsw
xchg
and
pop
inc
fildl
pop
mov
dec
xchg
pop
mov
ficomps
sbb
push
add
shll
fcoms
sbb
mov
dec
aad
mull
pop
and
ljmp
ljmp
pop
leave
mov
loop
daa
pop
stos
or
ljmp
jmp
mov
jmp
dec
push
jo
fucomi
jnp
addr16
das
out
cli
call
outsb
pop
pop
fistps
addr16
push
into
lahf
bound
sub
and
addr16
subl
data16
imull
sbb
push
sar
pop
stc
add
addr16
stc
push
cld
fistps
xchg
mull
arpl
pop
sbb
sub
out
icebp
xorl
addr16
mov
push
and
pop
fsts
mov
fwait
dec
pop
fstp
pop
ja
push
push
inc
fsts
addr16
lock
inc
call
sbb
lcall
jl
add
insl
mov
pop
icebp
ja
pop
ret
jnp
pop
pop
mov
pop
data16
ljmp
loopne
pop
arpl
xchg
xor
adc
and
fnstcw
testb
lock
shlb
xchg
and
fistpl
fistl
mov
mov
jmp
loopne
adc
xor
mov
xor
fidivrs
js
daa
std
sbb
loop
scas
not
insl
in
pop
insb
sub
and
fs
mov
and
int
fwait
push
add
imul
push
in
fdivrs
or
loop
rclb
call
mov
jae
dec
fcomps
push
mov
fmull
adcb
jnp
leave
iret
popa
orl
test
add
bound
vdivps
stc
pop
xor
cmc
pop
insl
cli
push
xor
fcmovnb
mov
and
aas
gs
sbb
or
stos
sbb
popa
jmp
mov
pop
jno
rcll
push
jmp
outsl
push
jmp
fnstcw
loope
in
cli
imul
stc
jmp
pop
xchg
stos
adc
je
mov
mov
iret
pop
push
pop
and
dec
popa
xlat
pop
fstp
push
leave
imull
shr
jg
int3
ds
fucomi
movsb
mov
iret
or
mov
push
sub
pop
pop
xor
mov
pop
lds
and
fnstenv
pop
pop
cwtl
push
push
arpl
out
std
lods
in
imul
and
pop
lock
cli
and
sti
cmp
mov
outsl
and
iret
pop
das
popa
sub
push
cmp
sbb
jnp
jecxz
cmp
ljmp
push
push
stos
push
gs
add
lods
arpl
add
fdivp
addr16
pop
insb
fldenv
mov
cvtdq2ps
lahf
mov
mov
dec
test
pop
xchg
mov
cmp
cmp
insl
lods
in
pop
adc
fwait
pop
imul
test
jo
jns
mov
sahf
mov
call
push
stc
push
in
dec
mov
call
aas
addr16
xchg
mov
mov
loopw
in
enter
cltd
sahf
mov
push
and
gs
jl
movsl
lods
rcr
push
lods
cmpsb
cld
sti
mov
sub
and
add
ljmp
popf
add
ret
pop
imul
jg
cmp
adc
push
into
xchg
jne
shlb
ljmp
inc
scas
pop
pushf
mov
repnz
xchg
jl
dec
cmc
sarb
je
dec
sbb
clc
mov
je
inc
push
fs
sub
gs
push
out
xchg
sbb
loopne
popa
mov
pop
jp
pop
stc
jge
jle
fwait
and
sbb
fs
int3
cli
cmpl
clc
out
gs
jg
in
jg
or
inc
xchg
sarb
and
mov
mov
mov
js
or
push
xor
and
push
lods
sbb
test
or
sub
xlat
dec
sbb
lcall
call
lds
add
push
push
popf
pop
arpl
sti
adc
xchg
mov
adc
gs
shll
jbe
sti
and
mov
push
sbb
arpl
mov
mov
or
fsubrl
xchg
outsl
fs
pop
es
std
scas
aaa
and
xchg
xor
std
push
pushf
push
loope
xlat
cmc
pop
cld
push
out
and
rcll
aas
xchg
out
cs
insb
pop
sbb
xor
mov
ds
sub
add
push
xor
mov
js
es
or
sub
fidivrs
repnz
add
ds
testl
sub
mov
icebp
or
jge
jp
push
push
xchg
js
into
and
out
scas
jp
jo
gs
cs
xchg
dec
outsl
repz
jp
jne
cwtl
push
mov
imul
mov
ror
stos
pop
mov
cmpsb
stos
add
fnstsw
shlb
and
inc
fcomip
sub
jge
dec
cld
fcompl
aas
mov
cmpsb
mov
and
xor
fsubrs
gs
lock
xchg
mov
fnstenv
or
xor
inc
movsl
imul
push
pop
push
fldenv
pop
xchg
out
fcmovnb
dec
ret
popa
or
push
in
lret
mov
stos
push
jg
push
cld
subl
insb
aas
cwtl
jge
push
mov
cmpsb
fwait
and
add
pop
lods
lahf
mov
movsb
push
pop
pop
stos
push
mov
pop
fmuls
inc
pushf
mov
fsubs
fstpt
fldcw
push
mov
xor
mov
cmp
cli
cmp
push
fwait
add
jo
leave
adc
pop
pop
cld
leave
cwtl
in
pop
mov
push
and
fists
push
dec
cld
mov
mov
dec
imul
roll
add
lret
call
std
add
cs
test
sub
jb
arpl
hlt
fcmovnu
jo
and
stc
addr16
add
mov
pop
imul
xchg
sbb
mov
mov
pop
jae
mov
mov
cmp
test
jge
incb
pop
clc
mov
mov
paddusw
ja
dec
gs
jge
fdivrl
hlt
xchg
xor
xchg
jmp
mov
jmp
fidivs
jbe
mov
aaa
out
mov
ret
test
lea
or
sbb
enter
sti
outsb
pop
mov
cmp
movsl
xor
mov
pavgw
scas
add
insb
and
scas
stos
lcall
cs
cmp
mov
mov
aad
dec
or
push
dec
mov
add
fwait
xor
ja
push
roll
xor
sahf
pop
shl
int3
clc
ret
and
lret
mov
jb
xor
arpl
sub
repz
push
and
inc
xchg
stc
or
ljmp
inc
inc
outsl
sbb
mov
rcpps
and
mov
push
cltd
pop
sub
xchg
js
sub
repz
je
mov
jg
fstpl
icebp
cld
mov
or
scas
mov
jmp
sub
stos
sbb
cmp
push
cmp
cmp
and
inc
mov
fsubl
call
shlb
pop
adc
and
mov
mov
cmp
jb
dec
shr
add
xchg
dec
in
lret
mov
fadd
daa
out
mov
arpl
out
andb
in
aaa
mov
cwtl
popf
icebp
pop
cmc
rorb
jae
pop
fs
xor
cmpsb
cmp
clc
imul
dec
push
notb
mov
xchg
mov
xchg
in
int
cmp
imul
pop
movsb
or
clc
sub
fsubr
in
cmp
jle
lea
jl
mov
in
arpl
dec
mov
decl
loop
in
jno
cmp
pop
or
push
scas
sub
in
outsl
outsb
jp
mov
sbb
xchg
icebp
sub
sub
out
xchg
or
and
pop
pusha
and
pop
stos
xor
stos
xor
call
push
sbb
shlb
jne
cmp
mov
lds
pop
sarb
sahf
fidivs
repz
gs
inc
inc
stc
dec
mov
cs
mov
mov
mov
jge
xchg
push
jbe
inc
cltd
mov
addr16
lods
in
jnp
ret
sub
stc
mov
addb
adc
dec
ljmp
dec
mov
jmp
sub
daa
dec
dec
xor
cmpsl
xchg
std
pop
je
out
sarl
xchg
mov
push
or
pushf
cmp
mov
add
cmpsl
addr16
cmp
pusha
mov
outsl
dec
idiv
mov
push
pop
pop
rcrb
add
push
stos
or
cs
push
stc
repnz
add
xchg
subb
xchg
dec
imul
gs
xchg
mov
mov
inc
inc
in
ds
movsb
in
mov
pop
push
popf
into
inc
jno
jnp
dec
call
and
xchg
cld
fldl
add
mov
xlat
fldl
jge
pop
fcompl
pop
dec
pop
icebp
inc
lahf
stos
sub
je
sti
cmp
mov
dec
cltd
push
push
out
imull
clc
das
test
fists
dec
or
jg
mov
and
cmpsl
mov
into
add
stos
sub
sub
xchg
out
sub
es
scas
lods
push
js
mov
lds
cmc
cltd
aad
enter
push
mov
stos
pop
sub
stc
into
cmp
push
out
or
gs
xchg
std
in
dec
icebp
jns
sub
jg
into
xor
clc
shr
and
inc
lcall
out
repz
sbb
inc
pop
cmp
ret
sub
jmp
push
dec
xor
mov
sub
test
sti
rorb
mov
cwtl
sbb
pop
int
xor
nop
hlt
inc
jns
cmpsb
ret
add
cmpsb
mov
xchg
mov
mov
push
jge
filds
scas
fsubrs
jnp
outsl
push
mov
push
mov
daa
mov
in
popf
inc
into
pop
sahf
jo
gs
in
mov
fistpll
daa
insl
and
stc
rcll
xor
push
test
in
or
push
insl
std
sub
push
rorb
into
sbb
cmpsb
outsb
fidivrl
fcompl
push
xchg
pop
sub
std
repz
dec
pop
jmp
fsts
fucomip
aaa
push
cli
jbe
repz
out
lcall
adc
sub
mov
pop
je
fcmovnu
fsubrl
test
gs
mov
cvtps2pi
push
xor
push
dec
lds
mov
js
cmp
jecxz
push
pop
cs
sub
dec
or
dec
call
dec
mov
mov
and
insl
mov
cmp
push
hlt
mov
mov
orl
and
pop
ret
dec
mov
adc
repz
fmuls
jbe
cmp
scas
loopne
lods
std
xchg
xchg
mov
daa
imul
and
mov
push
or
jno
iret
inc
ret
xchg
data16
lahf
nop
test
rolb
mov
jne
mov
and
xor
xchg
pop
insl
jne
cmp
mov
xchg
cltd
pop
sub
loope
push
fisubs
push
or
dec
sbb
out
notl
sub
dec
pop
cmp
mov
cld
mov
in
js
imul
pop
ret
jo
or
icebp
xor
jp
jne
jo
sub
xchg
imul
testb
loopne
push
sub
and
in
fisttps
dec
insl
and
dec
icebp
cmpsl
outsl
gs
pop
dec
pop
pop
scas
loopne
arpl
cld
inc
sub
shlb
stos
mov
mov
pop
insb
fsubrl
clc
out
jp
roll
or
mov
loope
lods
addr16
test
pop
icebp
add
ret
std
push
scas
pop
jnp
ja
jbe
dec
cmp
adc
jo,pn
or
push
pop
cmpsb
jp
aam
std
jmp
adc
scas
cmp
hlt
std
and
imul
outsl
push
cs
pop
mov
out
push
sub
dec
popf
fcmovu
push
in
gs
es
adc
in
lea
or
pop
mov
gs
push
ja
fldenv
xchg
xchg
popf
xor
mov
push
pushf
pop
daa
lahf
dec
sbb
outsb
dec
ror
ficoml
fistl
pop
sbb
call
rclb
cli
and
cmp
stos
js
mov
fsubr
inc
mov
out
sbb
insb
jmp
sbb
xchg
mov
pop
lahf
xor
sbb
sbb
stos
movsl
lds
xchg
pop
cltd
flds
dec
jns
and
inc
fcomip
jge
and
jmp
out
cmpsl
fdivrl
mov
pop
roll
shrb
pop
lods
in
mov
pop
loope
fiadds
lret
shl
lods
das
pop
jae
stc
or
xchg
sar
es
aam
pop
and
int
mov
push
mov
lahf
leave
out
cmp
or
jmp
outsl
les
xor
jb
cld
push
xchg
and
in
cmp
out
jecxz
pop
leave
inc
sub
sub
rcl
std
push
add
mov
addl
repz
pop
jb
pop
push
daa
pop
gs
orb
xchg
stc
fisubl
int3
or
jb
aad
adc
movsl
imul
jns
cmp
jg
shrl
test
sbb
int
cmpsb
lock
inc
sub
sarb
jge
jg
or
imul
lods
out
or
and
jo
inc
pop
stos
scas
sbb
pop
fsubl
mov
jge
rcll
rcpps
pop
jecxz
jno
bound
xchg
pop
sbb
sar
rolb
mov
mov
dec
shll
aas
in
aam
mov
ret
sbb
test
mov
cmp
adc
popf
sar
cmp
test
mov
sbb
xor
iret
iret
xor
rolb
inc
cltd
add
lods
daa
adc
aas
xlat
clc
sbb
fsubrs
sub
jb
and
sbb
jnp
pusha
insb
push
mov
add
mov
test
je
sbb
sbb
dec
testl
pop
pop
in
std
cli
test
pop
sub
lods
cmpb
fsubrs
arpl
scas
ljmp
cmp
sbb
push
pop
sub
mov
jae
add
jmp
mov
xchg
adc
sti
cli
cmpsl
in
sbb
jno
sbb
push
push
mov
loope
ret
xchg
cmp
cmp
pop
and
insl
sub
neg
or
sbb
jge
sbb
fxch
cli
sub
leave
or
cmpsb
cmpsb
push
movsb
adc
jne
fadds
fnstcw
pop
mov
gs
jnp
cwtl
std
sbb
and
jnp
mov
ss
mov
arpl
movl
pop
sahf
add
icebp
xchg
mov
push
icebp
xchg
out
mov
xor
into
sbb
xchg
cmp
js
and
fsubrs
jg
lods
pcmpgtb
sub
movb
loop
cltd
xchg
lock
dec
in
adc
lds
shrb
mov
add
sub
push
jge
pop
and
xor
daa
daa
push
idiv
pushf
pop
push
outsb
in
sahf
push
xchg
pop
jge
leave
push
repnz
outsl
xor
cmpsl
stos
scas
jnp
and
dec
mov
aaa
xchg
inc
in
out
sub
mov
pop
test
jp
in
nop
xor
dec
xor
cli
and
movb
jle
push
stc
fcomps
cmp
scas
xor
jle
dec
add
xor
sub
push
add
inc
push
sub
jecxz
es
xor
dec
adc
scas
notb
movsl
mov
adc
sub
mov
cs
and
loope
push
jge
lock
sbb
sub
in
dec
orb
cmp
jne
mov
in
pop
jg
or
scas
fistpl
jp
or
mov
icebp
cltd
divb
jne
xchg
shl
rsm
insl
in
add
mov
mov
outsb
mov
imul
ja
std
or
sub
lds
mov
pusha
push
mov
lods
xchg
inc
mov
inc
cwtl
incb
inc
add
cs
fwait
cmp
shrl
mov
sbb
call
push
sub
fistpl
push
dec
cld
and
mov
dec
cld
push
out
xchg
add
pop
adc
inc
xor
out
cmp
test
xchg
out
pop
imul
adc
jns
push
mov
sbb
in
dec
xchg
adc
aad
jne
inc
lret
popa
out
bound
out
in
aas
add
or
test
push
mov
movsl
jge
lods
inc
inc
sub
mov
mov
movsb
jle
push
popf
int3
sbb
in
dec
fwait
stos
insl
push
jb
push
push
mov
hlt
gs
notl
mov
jp
mov
sub
xor
and
mov
test
xchg
lret
cli
pop
push
cld
sub
in
xor
arpl
imul
pop
push
cmp
pop
lahf
sbb
jge
push
cld
add
mov
jns
andl
insb
sub
or
clc
push
inc
adc
push
dec
xor
mov
dec
xor
inc
inc
pusha
push
add
mov
cld
into
pop
je
fisubs
xchg
pop
dec
pop
xchg
repz
jbe
xor
dec
sahf
cmp
sbb
push
or
pop
push
pusha
or
add
ret
pop
mov
repnz
psubusw
pop
sub
sub
mov
inc
adc
je
sub
out
mov
xchg
mov
ret
xor
in
ret
gs
mov
pop
insb
std
xchg
addr16
add
push
mov
push
pop
stc
shrl
sbb
mov
sahf
inc
jns
out
pusha
jmp
mov
sub
sub
dec
push
lcall
push
pop
stc
faddp
xchg
das
sbb
ja
daa
call
inc
ljmp
and
inc
sbbb
fiaddl
repz
pop
gs
fdivl
in
fsubs
push
arpl
loopne
mov
xchg
add
les
or
mov
ja
jl
insb
mov
mov
cmpsb
and
je
sbb
xor
inc
or
xchg
adc
xchg
scas
adc
pop
gs
mov
hlt
data16
jmp
pop
cmpsb
xchg
fisttps
adc
in
iret
xor
scas
push
sahf
mov
xchg
add
lcall
mov
cltd
call
negl
mov
push
xor
xchg
cli
cmp
sbb
rolb
sub
or
cmp
into
and
cmp
daa
stos
outsl
push
sbb
cmp
jae
dec
pop
xor
sbb
xor
sub
jb
pop
dec
and
ljmp
je
in
and
mov
and
daa
pop
jl
adc
jp
data16
mov
xchg
dec
nop
insl
shll
out
add
lahf
in
movsb
pusha
insb
mov
test
jg
les
and
orb
xchg
add
jmp
lahf
es
test
cmpsl
and
dec
aaa
int3
sub
mul
clc
cmpsb
add
lds
mov
mov
out
cwtl
pop
add
gs
pop
jecxz
jl
idivb
jle
dec
outsl
sub
mov
popf
rclb
cmp
std
outsl
jbe
mov
icebp
mov
pop
stos
and
fmuls
dec
iret
cmpsb
adcl
mov
mov
jno
popa
lret
jb
in
outsl
addl
jl
adc
add
xchg
cmpb
jae
jns
and
shl
jl
fdivrl
mov
sub
inc
lret
sahf
jnp
lret
addr16
test
push
fsubl
sub
cmp
push
pop
clc
daa
pop
pop
jmp
pushf
cmp
jg
cmp
imul
lret
test
stc
jno
xchg
mov
into
add
test
xor
push
jnp
xchg
or
add
add
std
mov
inc
sbb
cmp
jae
call
xchg
jns
xor
cmp
fdivs
mov
std
jge
cmp
mov
cmp
dec
xchg
jno
push
cld
inc
mov
sbbb
dec
sti
fsubs
and
jnp
mov
push
push
fistl
sbb
icebp
pop
daa
push
inc
sub
jmp
xchg
ss
negl
cli
pop
fstps
fcompl
jecxz
lods
cmpsb
push
and
std
jae
jge
std
mov
shlb
or
out
sbb
mov
sbb
mov
pop
mov
scas
ror
mov
jo
lds
pop
xor
stc
bound
inc
loopne
pop
inc
lock
xchg
inc
iret
mov
cld
or
xchg
xor
cmpsb
js
mov
cli
sub
fadd
pop
mov
cmpsb
imul
sub
push
lcall
sbb
aaa
test
mov
lahf
sbb
cmp
jle
jb
aam
jbe
std
cmp
adc
cmp
mov
mov
cmp
into
jmp
mov
sbb
xor
scas
cmp
add
or
adc
aad
call
das
rcrb
jmp
fs
xor
sbb
inc
pop
pop
lock
daa
cwtl
gs
incb
fwait
push
xchg
mov
imul
test
sub
movsl
daa
xchg
sbb
pusha
sub
mov
loopne
enter
sub
fsubs
or
fsubr
add
cmp
lock
pop
sub
sahf
jle
repz
push
or
fcomip
inc
mov
ficoml
pop
push
or
pop
ds
sahf
add
outsl
mov
add
dec
ss
push
call
gs
sbb
or
cld
sbb
fwait
hlt
sub
sub
xor
cwtl
cltd
mov
cmpsb
mov
in
dec
mov
push
mov
inc
fadd
hlt
add
outsl
sahf
dec
or
int3
jns
loope
sub
mov
lds
cmpb
fldcw
lret
add
or
adc
gs
push
sub
sub
mov
adc
add
sbb
mov
cmp
xor
in
jbe
cmpsb
inc
xchg
int3
pop
jle
xor
std
dec
pop
sbb
adc
pmuludq
push
addr16
jne
mov
mov
lahf
lret
or
mov
jmp
and
push
add
icebp
call
adc
push
or
jmp
dec
lahf
jo
jnp
lods
jle
jb
loop
add
stc
ljmp
repz
inc
filds
add
xchg
addr16
sub
cmp
push
ss
mov
aas
dec
loopne
sbb
inc
popa
fstps
das
iret
pop
jae
fldcw
push
jns
or
xchg
hlt
jo
into
add
sbb
dec
shll
push
lret
jbe
xor
int3
xchg
stc
jnp
jnp
sbb
fwait
cmp
clc
pusha
and
je
jae
out
sti
mov
mov
leave
mov
jno
adc
jae
popf
dec
outsl
jb
fcomp
and
push
cmpsl
xchg
in
sti
gs
jno
inc
dec
push
pop
sahf
out
lahf
add
scas
je
fsts
jno
popa
pop
inc
inc
loop
mov
fsub
cmp
cmpsb
lock
outsb
call
icebp
ret
mov
mov
cmpsb
fcoms
addb
pop
scas
pop
nop
rclb
pusha
imul
popa
sbb
mov
imul
mov
sub
imul
mov
scas
aam
and
mov
pavgw
mov
sbb
not
and
movsl
test
cmp
or
or
jge
mov
fistps
pop
dec
jo
clc
sbb
pop
lret
or
jno
pop
scas
sbb
data16
add
mov
xorl
negb
or
sbbl
cmp
pusha
insl
fsub
mov
lods
pop
lret
mov
sub
sbb
cmpsb
cmp
sub
cmpsl
or
jb
js
ret
insb
int3
jbe
xlat
daa
push
pop
scas
pop
jbe
ja
push
int
xor
adc
xchg
loop
cld
in
test
shr
or
push
mov
mov
sbbl
sbb
push
pop
jg
daa
mov
adc
outsb
pop
out
jmp
nop
flds
leave
movsl
shrb
jp
push
icebp
std
push
in
rol
test
dec
cltd
outsl
sub
out
lods
sub
add
gs
stc
fcomps
imul
cmp
xchg
cli
ja
aam
icebp
pop
pop
adc
fs
adc
or
pop
outsl
xchg
add
sbb
inc
pop
aas
sub
pop
movsb
xchg
push
add
inc
int
pop
pop
or
or
jo
hlt
popa
int3
addb
cmp
out
lods
jg
dec
mov
xchg
mov
scas
sbb
rorb
mov
cmp
popf
pop
cld
xor
es
pop
xchg
leave
or
clc
add
mov
mov
sub
adc
mov
popa
insl
lods
repnz
xchg
jp
and
pop
pushf
call
or
out
mov
fisttps
inc
add
pushw
jb
mov
jge
inc
pushw
sbb
and
fucomp
aad
rorb
fwait
shrl
add
inc
imul
xchg
mov
fdivrs
scas
mov
cld
jae
xlat
int
pop
addb
sbb
sub
jp
lcall
lcall
cmp
pop
pop
repnz
sub
into
pop
ljmp
popa
mov
sbb
xorb
push
daa
test
mov
in
addr16
sub
pop
push
xlat
or
xchg
or
cmp
repz
mov
sub
shrl
pop
push
or
pop
leave
adc
add
jo
fsub
das
sbb
rcr
jecxz
gs
sub
pushf
xor
fwait
jmp
pop
pop
das
push
je
sahf
insl
or
jbe
mov
xor
xchg
pop
popfw
sub
xchg
icebp
sub
pop
js
leave
jno
sub
push
xor
mov
addr16
lods
fists
inc
fbstp
push
xchg
pop
mov
lret
dec
push
lcall
push
inc
mov
aam
dec
lods
jne
xor
movsb
inc
sbb
repz
testl
int3
in
fdivrl
fucom
sub
cltd
mov
cmp
xchg
pop
aas
out
mov
movsl
pop
pop
adc
or
xchg
sbb
adc
pop
imul
inc
jp
ret
hlt
sbb
mov
push
ret
or
pop
xchg
xchg
fcoml
xor
sbb
cli
xor
incl
dec
lods
pop
outsl
pop
fcoml
addb
pop
scas
jmp
fmull
adc
cmp
das
cmp
sbb
push
adc
push
jle
data16
bound
jne
fcmove
cmpsl
inc
sti
sbb
push
add
cli
lret
push
lea
pusha
mov
mov
addl
clc
and
popa
insb
je
es
add
dec
and
jecxz
push
cmpsb
fstpl
cmp
or
push
mov
clc
jo
sub
adc
and
pusha
fidivs
add
mov
clc
sub
adc
and
lea
decl
and
xor
pop
xchg
dec
icebp
orl
lea
fsubrs
data16
in
or
jp
call
bound
sbb
cmp
aas
test
sub
imulb
call
pop
push
xchg
jne
sti
loop
ftst
out
lcall
bound
js
repz
sub
lock
mov
das
test
addr16
or
inc
vphsubwd
and
add
pushf
sub
and
push
daa
es
pop
jle
lock
out
repz
in
out
cmp
imull
push
pop
cmpsl
or
or
fdivs
cli
es
xchg
pop
data16
push
fsubs
pop
cli
jg
jns
leave
rolb
addr16
xor
sub
mov
fwait
shl
decb
scas
sub
add
lret
test
out
movsl
mov
sbb
sbb
sub
adc
insb
sbb
pop
push
cmp
and
push
sub
mov
jmp
push
push
mov
add
bound
mov
pop
sbb
xchg
andl
sub
sbb
jge
lea
add
ss
fs
testl
sti
mov
pop
dec
mov
mov
pop
lds
enter
jnp
arpl
test
es
jmp
inc
loopne
sahf
in
sub
lcall
pop
dec
fwait
in
mov
add
sbb
xchg
sarl
fsubrl
dec
in
or
xchg
mov
pop
out
lahf
pop
cmp
pop
cli
out
cwtl
adc
cmpsl
add
push
xchg
movsl
iret
sub
fwait
add
test
or
pop
arpl
outsl
insb
sahf
int
dec
or
mov
adc
cmc
repz
sbb
dec
stc
xlat
mov
cld
pop
and
mov
dec
sbbb
xchg
sub
shr
mov
dec
stos
and
out
daa
movsl
ja
dec
gs
mov
mov
sub
and
scas
push
pop
adc
test
ret
or
out
xchg
xchg
movsl
decl
sub
adc
repnz
outsl
data16
shl
lock
fs
sbb
gs
push
sub
xchg
mov
or
xchg
cmp
mov
sbb
test
data16
loope
fdivrs
out
scas
maskmovq
movsl
ljmp
jge
sub
sub
pop
outsb
add
aaa
pop
fs
sub
sub
sbb
xor
mov
add
sub
es
mov
pop
imul
test
push
mov
push
sbb
push
pop
repz
sbb
push
mov
sbb
xor
clc
cmpsl
ljmp
jl
ret
gs
lahf
daa
pop
adc
scas
mov
int3
ds
fwait
mov
divl
sbbb
inc
ja
jbe
int3
clc
clc
mov
loope
rsm
fcompl
cli
jge
mov
rorl
add
cmp
mov
aas
dec
sub
das
pop
clc
mov
movsb
mov
add
out
in
or
push
rcll
adc
pushf
movsl
popf
bound
fadds
xchg
loopne,pt
lahf
xchg
push
rol
jle
movsb
lret
or
gs
outsl
cmp
shlb
cmp
jle
ljmp
add
mov
negl
scas
mov
sbb
sub
pushf
mov
pop
inc
xor
jo
into
and
ss
dec
enter
pop
test
add
testl
jmp
push
arpl
pop
ja
frstor
pop
pop
push
push
fs
out
cmpsb
pop
insl
fs
sub
xchg
xor
xchg
bound
es
add
mov
cs
push
sbb
sqrtps
sbb
pop
mov
or
mov
cmp
pop
jne
push
sahf
and
bound
cwtl
dec
xchg
pop
lods
mov
stos
jmp
dec
daa
int
daa
mov
xor
cwtl
out
pop
push
xchg
sbb
sar
xchg
mov
cmp
xor
xor
fwait
ljmp
inc
xor
in
mov
mov
inc
out
adc
fchs
fmuls
int3
and
cmp
mov
xor
xchg
cli
sub
cld
mov
push
cs
sti
cmpsb
sub
aam
dec
arpl
cmp
fadd
out
or
fcomps
mov
mov
scas
jae
jmp
loopne
out
mov
dec
xchg
and
push
mov
insb
sbb
in
scas
cs
popa
imull
jns
popf
mov
jl,pt
lret
and
shlb
xchg
je
mov
setb
pop
mov
inc
das
fs
je
lcall
mov
mov
dec
xor
js
ljmp
popf
in
mov
mov
push
sbb
mov
xlat
push
incb
fldcw
clc
ucomiss
cmc
pop
mov
lock
dec
push
repz
pop
ljmp
shl
std
pop
icebp
pop
out
aaa
push
inc
mov
mov
mov
mov
or
wbinvd
adc
dec
hlt
test
rorb
std
std
dec
mov
test
divl
adc
xor
or
or
push
stc
sub
pop
outsl
pushf
mov
cwtl
xchg
xchg
sbb
fwait
xchg
or
aam
sbb
sbb
push
test
or
icebp
pop
insl
fs
loopne
sbb
int
mov
arpl
aas
lcall
jns
cmp
dec
mov
push
mov
mov
add
inc
and
rcrl
mov
sub
in
or
inc
adc
aam
sbb
add
push
cmp
ficoms
in
add
dec
pop
fcmovnb
pop
and
cltd
test
out
mov
pop
cmp
cmp
iret
add
push
dec
add
mov
lea
es
add
mov
cltd
aaa
cmp
stos
cmpsb
sbb
lcall
jns
dec
cmp
mov
and
clc
pop
xchg
push
test
das
add
cli
sahf
inc
addr16
and
fmull
or
or
or
rol
data16
jnp
arpl
sub
xor
loope
jg
inc
mov
jg
cmpsb
or
and
loopne
add
insl
xchg
in
dec
xchg
add
dec
out
cmc
fimull
sbb
mov
sub
push
movsl
out
push
jns
test
leave
shrb
cwtl
call
push
out
push
pop
shrl
psubusw
mov
int
jge
mov
adc
ja
mov
sbb
inc
sbb
cmp
push
notl
add
or
cmp
add
mov
iret
inc
lret
mov
push
mov
pop
sti
div
xchg
adc
dec
pop
fisttps
gs
or
aam
add
dec
inc
andl
ret
xchg
fbstp
pop
and
fisubl
push
jns
add
dec
fistpll
push
btc
cmpsb
cmp
addr16
outsl
sub
push
insl
jecxz
xchg
arpl
test
rep
jae
xor
mov
jne
jo
arpl
jle
out
iret
mov
cmp
fsubrs
hlt
pop
push
or
scas
cmp
or
cmpsb
andl
sti
cmovae
pop
ljmp
lods
mov
fisttpl
mov
xchg
fnstenv
sbb
jge
xor
pop
dec
fwait
mov
mul
fsts
shl
lods
imul
mov
subl
sub
fdivr
pop
jbe
pop
cmp
fs
js
push
lret
fadds
repnz
roll
fsubrs
lret
hlt
push
sbb
sahf
jnp
movsl
or
mov
mov
stos
sub
leave
ds
dec
loop
fmull
cmc
mov
out
movsw
out
pop
sar
mov
xchg
or
add
lods
xchg
add
pop
jne
movsl
add
hlt
xlat
and
rorl
movsb
add
push
mov
popa
pop
pop
arpl
rol
fs
sbb
sub
xchg
jecxz
arpl
lcall
xchg
add
cmpsb
dec
int
push
jne
hlt
cmpsb
addr16
dec
loopne
add
loopne
ret
lods
aam
lcall
data16
arpl
adc
sub
scas
je
add
push
stc
int
dec
idivb
mov
cwtl
xchg
jecxz
movsl
sbb
jecxz
jg
cwtl
sbb
jmp
add
ss
cs
cmpsl
dec
cmp
dec
movsl
xlat
inc
ss
ja
or
movsb
pop
sbb
or
push
test
dec
pop
repnz
sahf
imul
pushf
mov
push
pop
sbb
add
xor
leave
push
sbb
std
lret
nop
sbb
fdivr
test
push
push
or
jge
mov
jbe
sbb
dec
roll
sbb
lret
pop
add
jno
es
clc
movsl
push
pop
and
cmp
stc
stos
adc
sarl
mov
rcl
add
mov
test
fsubs
pop
xchg
stc
fucomi
mov
add
bound
sti
pushf
divb
je
insb
xchg
mov
mov
cwtl
imul
lret
cwtl
gs
sar
pop
cmp
lcall
cmpsb
pop
popa
sub
add
cmpsb
daa
jl
shrl
mov
cmpsb
pop
push
int
push
ret
fildll
cmp
xchg
dec
mov
pop
add
insb
int3
mov
movsb
mov
in
std
push
scas
call
sbb
jb
test
mov
xor
add
es
in
mov
gs
cltd
push
jge
inc
flds
leave
fistpl
ret
das
gs
jae
inc
ficomps
lock
xor
mov
mov
xor
dec
sub
mov
add
mov
push
mov
lods
and
lahf
mov
pop
sarb
mov
mov
fsubr
mov
sbb
cmp
dec
int
xor
push
mov
sub
popl
pop
mov
xchg
out
sub
jl
imul
scas
in
jno
shr
jae
scas
jge
fstl
push
cltd
xor
sbb
clc
jge
insl
pop
iret
push
dec
adc
mov
mov
fisttpl
xor
mov
andb
mov
mov
jnp
and
pop
gs
orl
aam
out
fsubrs
lcall
xchg
mov
out
dec
and
jae
xchg
add
push
int
add
icebp
fcoml
cmp
sub
shlb
fwait
loopne
scas
enter
inc
push
outsl
push
dec
xchg
xchg
jns
cltd
pop
dec
scas
mov
add
int3
inc
jg
fistps
pop
outsb
xchg
push
and
scas
mov
pop
hlt
push
sub
out
jbe
xchg
adc
xchg
adc
es
fcoml
movsl
push
and
dec
mov
push
jg
sahf
aas
push
movsl
bound
in
arpl
js
das
scas
pop
adc
shr
cwtl
dec
dec
fiaddl
shlb
xchg
shl
lret
clc
mov
repz
inc
pop
leave
xchg
outsb
test
push
and
or
push
xchg
movsb
xchg
push
mov
in
xchg
cmp
adc
inc
xchg
insb
test
in
repz
into
mov
cwtl
jbe
fiadds
xchg
call
xchg
push
insl
jle
mov
into
orl
ja
pop
popa
and
out
inc
ljmp
sahf
add
daa
mov
lock
lret
jge
test
inc
cld
pop
clc
in
add
fstpl
in
or
sar
addr16
cltd
movsl
ljmp
add
jnp
pop
or
mov
fiaddl
fs
js
in
fwait
cmpsb
sahf
and
adc
and
mov
movsb
scas
sti
mov
xchg
mov
aas
cs
pop
js
sti
cmp
pop
mov
mov
insb
unpckhps
xchg
mov
in
pop
je
mov
sahf
mov
xchg
dec
xor
fdivs
cltd
and
dec
sbb
movsl
loopne
pop
rorb
mov
mov
sahf
int
adc
mov
jle
movsb
fsub
addr16
adc
and
test
sbb
lods
mov
push
sbb
dec
jnp
or
push
loop
cmp
xor
out
dec
daa
mov
sbb
sbb
test
cmpsb
gs
add
sbb
cmp
cmp
pop
mov
das
ret
and
pop
cmp
ret
mov
fistpll
fistpl
gs
push
aam
iret
pop
cmp
pop
add
popa
loope
jp
test
ret
add
cmpsb
cwtl
pop
jnp
sti
repnz
lret
push
les
stos
lret
jle
pop
fisubs
sbbl
push
lcall
jl
les
mov
xor
push
xor
or
cmp
dec
xor
lahf
hlt
je
movsb
test
or
pushf
dec
roll
inc
add
cs
repnz
testb
pop
out
lret
cltd
mov
sbb
and
mov
or
cmp
fsubr
push
jle
ljmp
mov
shll
stos
mov
sahf
gs
leave
sahf
cmp
dec
and
cmp
dec
and
xchg
sbb
sahf
enter
or
scas
mulb
into
mov
sbb
daa
adc
cmc
cmpsb
ret
push
mov
aas
aas
mov
mov
mov
pop
inc
jp
sbb
mov
fmul
xchg
add
loopne
jg
cmp
sbb
xchg
out
xchg
outsb
insb
call
int
push
jmp
jecxz
cmpps
addb
addr16
inc
pop
mov
inc
xchg
or
jnp
jnp
inc
cwtl
jnp
nop
sahf
cwtl
fwait
je
dec
jp
int3
xchg
imul
popf
xchg
sbb
cltd
es
popf
and
aas
cmp
dec
sub
lods
and
push
dec
jb
ljmp
sti
andl
mov
popf
outsl
das
or
pop
icebp
loop
leave
mov
lahf
jge
pop
imull
out
clc
cs
cmpsb
cmp
and
pop
pop
movsb
outsb
movsl
enter
iret
cmpsb
mov
mov
jge
into
lds
push
sub
dec
addl
xchg
or
pop
jno
or
xchg
fiaddl
sahf
mov
mov
mov
push
and
xchg
xlat
cs
cmc
cmpsb
mov
inc
or
rolb
adc
out
sbb
cli
cmpl
pop
push
cs
ja
pop
pop
mov
sbbb
inc
out
xor
xor
adc
orl
xchg
lock
add
sar
cmpsl
out
mov
mov
or
dec
lock
inc
xlat
fdivp
pop
push
out
fistpl
rorb
push
test
repnz
test
jns
sti
mov
push
es
xor
push
fnstcw
call
fs
mov
jo
push
ret
lret
shrb
inc
jge
jl
mov
or
inc
test
push
inc
sub
adc
cs
je
mov
pop
in
gs
cmp
inc
xchg
rcrb
out
inc
cmp
cwtl
aad
or
out
pushf
mov
out
pop
cmp
addr16
negl
jae
dec
push
insl
or
push
push
sbb
pop
jmp
out
and
cmpsb
sub
imul
pop
mov
mov
int3
inc
sbb
comiss
lea
cmpl
lahf
inc
sub
scas
mov
inc
gs
inc
pop
and
xorl
inc
dec
ficoml
sbb
pop
clc
lods
ror
lret
ss
leave
add
addr16
scas
pop
sarl
pop
mov
outsl
mov
inc
out
fcoml
xchg
enter
into
push
mov
std
adc
cli
das
xchg
pop
push
imul
testl
jns
mov
stos
mov
cmp
push
daa
xor
jg
or
pop
xchg
xchg
and
sub
outsb
mov
xchg
jno
pop
popf
sub
cli
pop
aaa
fsubr
push
lcall
jne
mov
mov
xchg
aas
sub
repnz
dec
push
jl
mov
les
out
lea
pop
mov
dec
mov
or
mov
mov
cs
cwtl
imul
pop
cmpsb
push
inc
push
mov
imul
lds
xchg
xor
push
imull
push
push
aad
dec
lahf
add
mov
xor
loop
add
xchg
push
cmp
or
cmpsb
jbe
inc
mov
movsl
cwtl
xor
sub
scas
lcall
into
gs
and
dec
dec
inc
loopne
xor
das
push
inc
into
sbb
pop
and
addr16
mov
loop
int3
stos
or
xchg
fiaddl
int
and
mov
aas
icebp
imul
mov
cvtpi2ps
mov
pop
dec
out
outsl
mov
sub
stos
and
mov
daa
leave
ficomps
mov
mov
mov
fwait
jo
jl
dec
xchg
int
xchg
scas
xchg
test
scas
in
push
cmp
dec
shlb
sbb
lcall
scas
lods
popa
divl
fdivrs
xor
jecxz
sbb
int
test
dec
shll
push
push
add
mov
ja
scas
leave
push
adc
pop
rcrl
cli
and
mov
fdivp
das
fsub
jmp
mov
je,pn
mov
out
adc
stc
stos
pop
js
cltd
arpl
jns
sbb
xor
adc
mov
addr16
clc
ljmp
pop
ficoml
cli
and
jne
call
scas
cwtl
shrl
xchg
std
xlat
pop
jp
cmp
shr
out
lret
fdivr
adc
sahf
test
and
insb
and
mov
mov
pop
bound
out
inc
js
inc
pop
aad
pop
xchg
pop
in
shrb
lods
pushf
adc
lods
sub
mov
adc
mov
jle
jge
out
push
std
movb
aas
test
add
mov
mov
jp
imul
or
ret
sbb
pop
and
mov
js
pop
lret
and
sbb
adc
pop
xrelease
sbb
int3
fdivrs
aad
outsb
add
int3
in
push
fisttps
cwtl
or
ljmp
pop
push
or
pop
mov
nop
lods
orl
push
mov
gs
inc
bound
fnstcw
mov
dec
addr16
ret
cmp
dec
jg
jp
fnstenv
or
jecxz
clc
out
and
fistps
lock
mov
call
xor
fmull
into
int
adc
xchg
push
xchg
fs
cmpsb
cmc
jp
xchg
outsl
fmul
je
dec
out
fimuls
mov
cwtl
gs
cld
mov
das
addr16
mov
sub
dec
or
mov
fcompl
xor
and
push
mov
sub
lds
add
pop
pause
daa
cmpsb
inc
sub
js
cs
into
fucom
mov
movl
mov
pop
cs
inc
lcall
xchg
or
or
aaa
pop
dec
gs
test
jno
jg
insb
mov
add
les
mov
bswap
pop
nop
pop
and
or
int3
xchg
push
mov
loope
sub
inc
push
andl
push
pop
inc
jbe
mov
mov
inc
add
lock
pop
iret
clc
mov
and
mov
pop
cmp
aam
dec
pop
mov
lods
fwait
cmp
nop
ficomps
mov
ja
cmp
sahf
out
inc
jl
and
call
leave
out
movsl
add
in
mov
shll
cli
add
shrl
sbb
dec
test
orb
jecxz
movsl
jle
mov
adc
mov
adc
cmp
clc
push
mov
dec
out
jecxz
gs
xchg
movsl
aad
mov
xor
add
aaa
jnp
in
dec
sahf
xor
into
or
mov
push
xchg
clc
and
add
lcall
push
clc
out
out
push
xlat
mull
mov
jmp
mov
les
sub
movsb
into
add
inc
imul
or
inc
push
or
mov
pop
scas
lcall
mov
xor
inc
mov
gs
dec
cmpsb
jmp
inc
or
cmpsb
popa
dec
push
dec
clc
xchg
jnp
adc
xor
sub
es
lods
addb
or
mov
xchg
cs
jge
cmpsl
add
and
pop
shll
cmc
mov
test
cmp
xchg
cltd
ds
push
push
outsb
daa
push
mov
add
push
pop
cmp
movsb
jb
push
inc
xchg
inc
xor
mov
shrb
out
mov
push
mov
daa
clc
mov
sub
iret
push
clc
clc
sub
jbe
mov
xor
xor
movsb
ja
sarb
popa
pop
or
mov
pushfw
xor
fnstcw
cmp
xor
fbstp
sahf
xchg
jae
fdivrs
cmp
dec
mov
in
push
xchg
adc
std
mov
ror
addr16
mov
cmpsl
jne
shll
dec
mov
out
xchg
scas
inc
in
pop
imul
inc
push
adc
daa
jp
adc
rcll
out
gs
sub
mov
push
das
mov
jmp
aas
in
pushf
adc
push
shrb
ds
repz
mov
push
dec
cmpsb
mov
das
jl
cltd
pop
lahf
mov
rcr
outsl
inc
nop
aas
pop
movb
jle
inc
or
xchg
daa
lock
aaa
aam
std
adc
cmp
xor
pop
or
mov
out
jmp
shlb
mov
sti
cmpsb
lret
data16
inc
fincstp
shl
cld
sti
jle
cmp
adc
mov
and
leave
scas
xor
data16
imul
sbb
mov
and
mov
push
jmp
divl
imul
sub
data16
mov
cmp
cli
sub
fwait
imul
insb
cmp
dec
push
jne
sub
mov
mov
jp
sub
subb
in
outsb
lcall
sub
scas
movsl
lcall
jne
clc
jmp
pushf
pop
cli
out
sbb
mov
mull
sbb
imul
xor
out
dec
test
sbb
xchg
push
cmp
ja
pop
lret
outsl
xor
pop
js
sbb
aaa
pop
std
fcmovu
lcall
out
mov
testl
aaa
fdivrl
sbb
gs
jle
inc
xchg
xchg
pop
push
sub
inc
out
jecxz
add
jne
dec
xor
cmp
dec
sub
outsl
xor
call
push
mov
and
test
test
movsb
jmp
or
pop
pop
adcb
movsl
sbb
test
ds
jmp
xor
in
call
subb
dec
stos
arpl
push
pusha
dec
pop
cli
gs
and
stc
lahf
mov
int3
mov
mov
mov
ret
or
jne
mov
imull
movsb
fcmovne
jne
add
int3
leave
pusha
sbb
dec
inc
or
arpl
xchg
lock
ljmp
ljmp
testl
push
popa
stos
repz
jg
fcmovnu
mov
xchg
lret
cmp
dec
mov
adc
cmc
into
xchg
pop
outsl
aas
dec
push
cmp
dec
sbb
xchg
pop
mov
pop
sarb
shrb
or
stc
lods
push
pushl
sub
movsb
adc
clc
in
pop
and
add
push
mov
and
mov
mov
clc
inc
lds
sbb
sarb
inc
imul
cmc
pop
pusha
sub
fisttpll
in
lcall
and
dec
push
sbb
xchg
and
ss
outsl
dec
jns
sti
cs
sahf
lea
cmc
mov
std
popf
xchg
aaa
in
push
js
dec
inc
daa
ret
repnz
rol
es
aas
ds
pop
ljmp
adc
pop
lcall
fstps
outsl
shlb
dec
inc
cld
imul
icebp
and
mov
pushf
movsb
mov
cmp
lret
insb
fdiv
adc
or
fists
shrb
imul
jne
pop
jne
out
lods
sbb
and
cli
out
dec
and
inc
stos
insb
sub
fsts
dec
aaa
jge
mov
imul
pop
adc
mov
xchg
ret
xor
xchg
inc
push
sub
dec
jmpw
pop
lods
pop
mov
iret
imul
and
lds
pop
mov
and
popa
test
push
orb
mov
fwait
popf
pop
sar
gs
sahf
xchg
sub
stos
push
je
mov
call
fsts
insb
outsl
sub
fbld
adc
shlb
in
xchg
and
adc
leave
aad
adc
jnp
jge
fdivl
fsub
shrl
fidivrs
mov
mov
stos
dec
gs
ss
out
xor
or
sub
test
aas
addr16
sbbb
mul
push
add
xor
popf
pushf
push
sbb
daa
pop
mov
mov
popf
pop
push
les
xchg
xchg
ret
outsl
push
dec
dec
mov
fidivrl
adc
sub
or
mov
cmp
push
sbb
mov
sbb
adc
pop
jne
jmp
jg
test
xchg
adc
mov
imul
inc
jmp
jbe
cltd
scas
sub
push
xchg
jns
pop
mov
mov
fcoml
out
aaa
pop
jecxz
inc
jbe
adc
dec
movsl
mov
std
fdivrs
fs
movsb
pop
lcall
ljmp
adc
fistpll
sub
sbb
movsb
jns
mov
dec
cmp
in
out
mov
push
add
push
add
push
negl
jmp
xchg
scas
pop
jge
sbb
stos
jns
xchg
adc
shll
pop
xchg
pop
and
mov
lret
dec
mov
sahf
stc
cmp
add
sbb
mov
es
or
pop
adc
cmp
es
mov
lods
mov
outsl
xor
negb
add
jo
scas
shrb
mov
mov
fwait
lcall
inc
cmp
lret
sub
inc
into
and
aad
add
jmp
lcall
lret
inc
xor
int3
lret
fsubs
cmpsb
out
pop
sub
out
dec
int3
insl
scas
pop
flds
loop
pop
lahf
jmp
cltd
fdivl
pushl
pushf
das
ret
test
mov
and
rorb
hlt
aad
xchg
xchg
pop
cmp
test
js
jl
mov
iret
out
cmp
xchg
mov
ficoms
push
mov
sti
pop
ret
fsub
push
hlt
ret
lea
dec
bound
lock
mov
mov
fstpt
inc
outsl
mov
pushf
repz
sbb
adc
jecxz
insb
xorb
and
push
add
pop
pop
mov
inc
cs
mov
cltd
and
sub
test
dec
mov
dec
fidivl
and
scas
xor
shlb
dec
cs
sbb
fsts
xchg
dec
std
in
shlb
mov
fidivrs
stc
pop
je
pop
test
mov
icebp
mov
cmp
ljmp
dec
shl
or
dec
dec
or
xchg
dec
out
mov
push
decb
jae
pop
push
sub
sub
mov
sub
xor
sub
mov
leave
or
add
pop
movsl
mov
scas
leave
xchg
dec
pop
mov
inc
push
ret
fmull
sbb
pop
shll
stos
imul
mov
sub
xchg
clc
fdivrs
hlt
cmp
mov
js
dec
pushf
jb
or
into
pop
loope
cmp
rol
cmp
xor
fildll
pop
cwtl
push
add
insb
inc
pop
mov
jnp
ds
jmp
mov
or
pop
lahf
stc
iret
sti
fwait
outsl
sahf
dec
fsubrs
push
jecxz
jo
scas
sbb
repnz
mov
jae
cwtl
call
mov
into
daa
dec
scas
inc
add
int3
cmpsb
cltd
sti
xchg
data16
cmp
jmp
outsl
lret
mov
mov
cltd
mov
cltd
gs
mov
jp
and
jl
pop
pop
into
push
rorl
mov
jno
outsl
mov
add
adc
xchg
mov
push
std
imul
cwtl
jg
pushf
add
inc
sub
ds
clc
mov
mov
iret
fcomps
ljmp
sbb
outsl
sti
lods
int3
dec
push
test
fdiv
and
sbb
adc
sti
outsl
mov
out
mov
in
jl
ljmp
mov
inc
shlb
and
rclb
arpl
adc
xchg
mov
sbb
mov
xchg
movsb
dec
ljmp
or
lods
loope
adc
push
adc
outsb
jns
lret
fstl
ss
es
xchg
pop
in
jbe
jb
push
test
sahf
outsb
mov
mov
xchg
int3
mov
out
mov
cs
loope
mov
ja
pop
push
jg
nop
shl
das
cs
fnsave
jg
dec
repz
mov
pop
rcrl
dec
push
outsl
iret
ss
and
pop
xor
inc
cmpb
sar
adc
xchg
into
subb
fstpt
ret
push
gs
cltd
fidivrl
mov
dec
scas
inc
pop
popf
sub
clc
fildll
sub
jnp
pusha
cmp
rorl
ror
in
xor
xor
dec
or
pop
or
mov
dec
data16
mov
jne
jne
jle
arpl
mov
cltd
mov
call
daa
in
div
pop
jns,pn
jmp
fistl
fs
iret
sbb
xchg
lock
negl
divl
pop
les
ds
xor
push
sbb
notl
fildl
xchg
mov
imul
add
imul
push
mulb
into
add
sub
nop
imul
jnp
gs
mov
pop
iret
or
pop
mov
add
add
data16
and
mov
cmpsl
and
add
jnp
push
add
inc
rep
lahf
jno
jp
jnp
arpl
mov
fs
cmp
pop
pop
aaa
lahf
jmp
pop
je
push
jge
lods
aad
push
adc
inc
mov
mov
fdivrs
out
mov
push
mov
je
mull
fldenv
and
movq
nop
sbb
outsl
fwait
out
repnz
aaa
sbb
adc
sub
leave
loopne
ds
lahf
dec
sub
cmp
in
sarl
cli
aam
jnp
pop
add
movsl
dec
xchg
rsqrtps
enter
fwait
scas
dec
out
movsl
push
clc
xchg
dec
ljmp
les
add
and
out
jge
add
push
in
jae
sub
mov
sbb
xlat
popa
mov
rolb
adc
test
das
aad
mov
mov
out
mov
push
test
inc
imul
push
daa
sbb
cmc
arpl
xchg
js
xor
pop
and
roll
lods
add
imul
push
hlt
mov
and
das
call
fincstp
roll
and
cmp
push
cmovno
lods
add
ret
sub
inc
sbbb
inc
adc
xchg
int3
cmp
pop
aam
push
push
lds
jmp
psrld
neg
addr16
sahf
out
push
lret
sbb
mov
push
lods
push
mov
jo
and
cmp
outsb
ds
in
cmp
mov
add
xchg
rol
adc
dec
jmp
cmp
dec
xchg
xor
ja
fmull
or
fcomps
jg
hlt
adc
pop
fisubrl
hlt
test
js
adc
pushf
cmpsb
dec
inc
aaa
dec
cmp
cld
sub
mov
sbb
cld
jg
fdivs
aaa
pop
enter
or
pop
jmp
cltd
pop
pop
int3
xor
pop
mov
mov
roll
and
ljmp
mov
mov
jle
jns
mov
push
js
scas
sbb
and
ja
fistpl
es
popw
push
pop
cli
pop
cmp
es
fadd
adc
pop
and
and
not
popf
pop
dec
pop
stos
jns
arpl
push
pop
sbb
add
loop
in
scas
and
in
scas
inc
or
and
cmp
pop
test
pop
ds
fldl2t
mov
add
adc
or
cmp
mov
clc
xchg
sbb
clc
out
xchg
shr
ret
sbb
inc
push
adc
mov
add
push
je
pop
das
fcmovnb
sbb
fistpll
push
sub
in
adc
loopne
pop
mov
dec
dec
adc
out
push
call
sbb
hlt
cmc
fmuls
aad
jmp
lea
pop
jnp
test
lock
xchg
ficomps
movsb
vpminub
lds
das
js
sub
subb
xorb
stc
jg
cld
jecxz
movlps
testl
loop
enter
in
gs
and
cmpl
movsl
in
push
jle
dec
mov
or
and
popf
and
push
adcl
mov
call
stos
movsl
pop
arpl
cmp
pusha
add
xor
loope
movsb
jnp
outsb
pusha
std
mov
or
pop
pop
into
sbb
sbb
and
dec
movsb
xchg
mov
push
xor
ret
mov
mov
addr16
hlt
lcall
push
std
jle
out
lea
push
addb
cmp
mov
mov
pop
xor
fisttpll
stos
push
sbb
gs
dec
sub
dec
clc
sbb
inc
and
call
mov
inc
loope
push
cwtl
rorl
es
ret
push
fs
addr16
push
out
lods
or
jne
ftst
stos
outsb
aam
xor
push
lret
scas
sbb
fldcw
das
mov
sbb
cmc
xchg
test
subb
mov
jge
add
inc
or
jae
pop
sbb
sub
push
pop
rdpmc
fildl
inc
repz
aam
aam
pop
pop
fwait
pop
hlt
xor
inc
and
inc
rcr
std
jmp
daa
and
scas
push
fidivrs
pop
call
aaa
lods
divl
xchg
mov
pop
push
stos
fstps
pop
xchg
scas
mov
pushf
jg
clc
mulb
int3
nop
or
pop
sahf
gs
jbe
cmc
jno
xchg
xchg
int3
or
cmp
sub
fucomi
dec
jo
fstl
push
inc
pushf
dec
pop
insl
loope
out
mov
sbb
pop
fcompl
adc
mov
hlt
xchg
pop
xchg
fsubs
push
cwtl
sbb
int
add
in
in
in
adc
adcb
inc
sti
sbb
sbb
push
and
leave
jns
mov
sub
ret
mov
stc
cmp
scas
mov
leave
cmp
fmuls
shrl
or
fldenv
popa
fmuls
adc
aas
add
lds
shlb
sub
mov
dec
xchg
dec
inc
mov
call
adc
dec
adcb
push
stc
sbb
cmpsl
jo
mov
arpl
js
pop
push
cli
imul
cmp
lret
lahf
add
and
push
sti
push
pop
das
aas
jg
inc
lcall
dec
fdivrs
insb
fsts
icebp
pop
mov
loop
js
test
pusha
push
jns
jne
xor
test
outsl
adc
sbb
ja
es
loop,pn
ror
jnp
xchg
push
adc
aaa
out
shlb
sbb
mov
imull
idiv
mov
repz
inc
es
sysenter
jns
aas
ss
mov
rolb
add
test
or
loope
int
pop
aas
test
sbb
fisubl
mov
fists
dec
sbb
loope
pop
into
mov
ret
pop
mov
xchg
aad
inc
push
mov
mov
dec
and
adc
aaa
mov
repnz
out
cmpsb
in
stos
push
mov
fwait
shr
jge
cwtl
cmc
test
sbb
mov
push
jne
pop
and
sbb
fsubs
mov
adc
mov
or
adc
add
jbe
cmp
mov
adc
clc
fdivrs
add
call
aam
psubusw
push
arpl
mov
icebp
and
jecxz
call
and
or
pmulhw
xchg
mov
xlat
add
push
cld
out
mov
pop
filds
or
pop
or
inc
or
test
je
inc
loop
sbb
clc
test
lock
nop
cmp
aaa
jmp
into
add
mov
fnsave
sbb
mov
jo
jno
fmull
popa
sbb
and
or
mov
cmpsl
push
xor
outsb
into
mov
std
jl
cmp
sub
mov
loopne
inc
push
cltd
in
pop
xchg
cli
jecxz
sbb
rclb
lret
test
sahf
push
push
xchg
popf
adc
mov
ret
cld
aas
xchg
pop
addr16
adc
fisubl
jnp
enter
mov
iret
push
jge
daa
or
cld
scas
push
and
xchg
push
jbe
in
rol
push
mov
pop
aam
pop
mov
sahf
or
repnz
lods
sbb
or
mov
bound
fcomi
fbstp
cmp
mov
xor
mov
stos
mulb
int
imul
pusha
mov
inc
dec
out
imul
iret
and
cmc
into
repz
xchg
mov
gs
pop
testb
inc
call
popf
inc
fsubl
sbb
sahf
fsubrs
sub
loope
pushf
dec
std
and
in
jae
sbb
insb
mov
ret
imul
fmul
jne
sahf
addr16
iret
adc
clc
inc
scas
dec
jp
mov
js
xchg
insl
mov
hlt
fcompl
cmp
aam
popa
sbb
push
jns
insb
daa
sub
jns
jbe
xor
push
ljmp
jle
je
sbb
inc
leave
std
and
adc
mov
adc
push
ret
cli
loope
outsb
pop
loopne
dec
or
shr
add
pop
dec
inc
sub
xchg
aaa
mov
popa
inc
mov
outsl
int3
imul
out
popa
sub
adc
or
mov
addr16
mov
pop
sbb
push
xchg
rorb
js
xchg
mov
xor
inc
icebp
rcrl
push
jo
jns
mov
inc
or
faddl
mov
icebp
out
mov
sub
inc
dec
int
push
add
jo
cmp
xchg
ss
adcl
into
clc
inc
and
iret
xchg
jecxz
xor
lcall
idivb
jge
call
cmc
xchg
cs
nop
in
sub
cwtl
lret
xor
sbb
and
fnstsw
outsl
jbe
dec
in
aad
xor
add
lods
adc
and
popl
adc
mov
mov
or
cwtl
push
jle
xchg
sub
adc
dec
push
fiadds
mov
jo
pop
adc
push
ss
mov
cmp
add
and
loop
popa
sbb
fbld
mov
outsl
xchg
outsl
jns
xchg
pop
out
jge
loop
int3
xor
pop
fwait
jge
sbb
sub
pop
fisttpl
daa
jg
jbe
shll
inc
leave
stmxcsr
mov
mov
mov
pop
and
pusha
push
pop
sub
out
rcr
incl
dec
push
test
xor
pushf
xchg
sub
xchg
into
insb
pop
cmp
pushf
flds
xchg
fcomip
and
out
testb
push
aas
ja
push
outsl
mov
or
pop
pop
add
pushf
les
dec
aas
call
push
mov
mov
neg
test
push
push
and
movb
outsb
push
pusha
loopne
idivl
mov
icebp
push
and
lret
cltd
jns
jno
add
mov
arpl
xor
aas
leave
pop
mov
cmp
das
pop
ss
adc
rcrb
das
popf
jno
loopne
pop
cmpsb
stc
int
sub
or
adc
add
cmp
cmp
iret
jns
fmuls
nop
xchg
shr
stos
pop
pop
push
jae
mov
fs
sub
mov
pop
sub
pop
pop
jecxz
icebp
jle
aad
mov
add
fistps
cmp
lahf
insl
aaa
xchg
sbb
mov
jmp
outsl
pop
cli
js
das
dec
pop
xchg
pop
mov
cmp
inc
mov
adc
movsl
scas
mov
fs
mov
into
jle
push
cli
sbb
fdivl
cmpl
es
outsl
pop
mov
repz
jns
int3
lcall
out
cmp
sbb
lea
xor
sub
mov
mov
xor
pop
mov
dec
sbbb
daa
or
inc
add
pop
icebp
mov
jae
sbb
stos
mov
sbb
mov
and
mov
cmpsl
cmp
daa
jne
inc
lea
sti
gs
pop
push
pop
jne
adc
mov
pusha
bound
xchg
movsl
daa
bts
jne
xchg
or
or
aas
in
inc
or
popf
pop
dec
fadd
push
popl
les
xor
mov
adc
jle
aaa
pop
fnstenv
cmpl
inc
imul
cmpsl
jo
rcrb
lahf
xchg
jb
lods
and
inc
sbb
cmp
mov
sbb
ds
jo
jno
cli
mov
jnp
sub
ss
cmp
add
sbb
pop
add
ret
inc
push
and
sahf
enter
test
rcrb
sub
pop
sbb
sbb
call
sti
sbb
add
repnz
rclb
rclb
addr16
out
into
and
jmp
cmp
or
mov
data16
adc
negb
pushf
xchg
clc
vpunpcklqdq
aad
hlt
cmc
shrb
ficoml
mov
mov
enter
xor
jno
lahf
sub
in
js
js
lods
cmp
outsl
insl
test
dec
outsb
or
mov
mov
call
jmp
mov
sub
inc
popa
cltd
insl
divl
xchg
stos
fstpt
ss
fsubrl
cwtl
out
leave
push
push
das
ljmp
cwtl
leave
inc
ss
pop
xchg
aad
jns
push
rcr
pop
lds
sbb
ja
push
cwtl
xor
sbb
aad
in
adc
bound
and
test
sbb
push
je
lahf
jge
ficoml
popa
mov
aaa
movsb
cmp
pop
xor
test
push
sub
call
cmp
dec
gs
pop
mov
pop
sbb
xor
pop
pop
pop
mov
lret
loop
sbb
inc
mov
sahf
mov
pop
jnp,pn
repz
ja
lods
jnp
cmp
mov
mov
push
mov
cmp
aas
cld
xchg
int3
loop
sub
addl
sbb
pop
cmpb
lock
xchg
sbb
das
in
pop
sub
out
mov
xchg
iret
push
negl
ja
pop
mov
mov
mov
sbb
cmp
dec
cmp
adc
sbb
mov
jno
jle
adc
das
hlt
cmp
js
and
arpl
sbb
loop
mov
mov
or
add
cmp
int
les
dec
jecxz
jnp,pn
xchg
iret
sub
xor
fcompl
cmpb
xchg
or
scas
arpl
out
loopne
orb
lahf
mov
inc
mov
in
mov
xchg
loope
sub
negl
xchg
clc
in
xchg
mov
pop
das
out
cli
cmc
sub
test
pop
in
sbb
stos
movsb
push
cmc
bound
cmc
cmp
cmc
xchg
mov
fs
mov
add
inc
mov
cmp
outsb
sbbl
out
sbb
sbb
mov
sbb
mov
lret
dec
outsl
out
push
jg
mov
mov
js
repz
mov
call
xchg
push
cmp
dec
lds
gs
pop
push
and
fimuls
stos
xrelease
mov
gs
dec
jmp
jp
ja
je
jo
es
pop
gs
sbb
movsl
pop
sti
mov
mov
or
loope
bts
int3
mov
pusha
mov
cmp
pop
arpl
sub
int
xchg
stos
mov
mov
out
xor
pop
fcomps
dec
movsl
xchg
mov
cltd
or
loop
imul
repz
sbb
rcll
push
mov
in
jmp
jns
lea
inc
repnz
or
and
sti
cli
sbb
gs
mov
sbb
testb
xchg
push
leave
sbb
and
lock
pop
jge
popf
ret
cs
out
xlat
ds
xchg
insl
test
mov
cmp
loope
stos
cmp
mov
fdivrs
cs
add
sti
sar
fimull
outsl
pmulhuw
cs
cmp
dec
scas
xchg
xchg
pop
cltd
sbbb
hlt
sbb
mov
outsb
ret
fstps
jb
fdivrs
jns
bound
repnz
popa
mov
js
pop
cli
loope,pt
mov
or
or
mov
jnp
xor
ss
rcll
push
pavgw
cld
cmpsb
leave
pop
arpl
xor
stc
test
loope
enter
lret
jnp
fwait
aaa
xor
pop
inc
icebp
sti
ret
out
loope
fmull
shll
aas
add
int
adc
nop
adc
pop
rolb
or
je
mov
scas
cwtl
push
pop
sbb
lods
clc
push
pop
push
mov
dec
ficompl
lock
xor
fiaddl
arpl
mov
inc
mov
es
cmp
pop
pop
push
cmp
jge
arpl
clc
push
cmp
dec
es
fistpl
push
insl
movb
sbb
insb
sub
adc
dec
fsubl
add
xchg
or
mov
adc
rcrb
clc
mov
mov
fs
movsb
jmp
push
inc
jnp
add
sarl
loopew
xchg
cs
aaa
std
sbb
icebp
pop
jae
dec
movb
outsl
pop
pop
in
filds
cs
arpl
inc
decl
adc
push
xor
cwtl
mov
mov
orb
pop
sbb
daa
inc
sbb
fcoms
adc
add
ret
scas
mov
mov
inc
mov
test
dec
aam
add
mov
leave
popf
sahf
repz
dec
fcmovne
flds
hlt
dec
cmp
lret
mov
mov
cmp
sub
arpl
mov
test
mov
dec
fdivrl
and
push
sbb
addr16
ds
loope
cmp
jbe
je
loope
xorl
data16
adc
and
test
lods
andb
inc
adcb
je
cli
in
rcrl
inc
cld
sub
inc
lret
mov
add
imul
inc
es
adc
sub
int
inc
dec
push
repnz
out
orb
imul
js
and
pop
push
mov
adc
fldcw
and
xchg
test
lock
rorb
push
test
and
aam
repz
sti
xchg
push
clc
pop
out
jo
jbe
sbb
out
xchg
insl
sbb
push
in
pop
fimull
int3
push
icebp
insl
cli
es
dec
in
jg
push
push
in
mov
sub
mov
fldenv
add
cmp
ror
pop
shll
ljmp
mov
scas
test
in
jnp
test
mov
loope
jmp
push
fsubs
lea
mov
pop
add
cs
adc
push
sbb
or
lds
call
data16
mov
mov
pop
repz
shrb
mov
dec
jecxz
cs
xchg
lods
pushf
imul
sti
mov
sub
insl
sti
xchg
push
fldt
push
mov
adc
popf
sbb
xchg
repz
in
mov
inc
ret
fst
outsl
pop
pop
mov
stc
ljmp
mov
repnz
aad
clc
jns
out
cli
inc
pop
pop
or
dec
paddusw
mov
xchg
cmpsl
out
pop
lock
mov
arpl
mov
dec
sbb
inc
xchg
dec
cwtl
mov
and
mov
mov
sub
in
mov
test
dec
jae
testb
or
adc
repnz
mov
frstor
pop
push
jo
add
fnstenv
aaa
mov
cmpsb
fstp
mov
mov
mulps
test
xchg
and
jge
dec
mov
pop
jno
mov
and
scas
pop
sub
sbb
mov
jmp
pop
dec
fstps
xchg
adc
xchg
mov
imul
sbb
test
arpl
sub
fiaddl
aaa
push
jbe
sbb
cmp
in
xchg
ds
dec
sahf
in
fidivrs
lret
mov
dec
sub
imull
inc
int3
fidivl
mul
xor
mov
sahf
pop
xchg
cwtl
dec
scas
sbb
shll
insb
inc
sbb
cmpsb
mov
loop
jl
out
or
adc
pop
push
cmp
xchg
pop
sbb
js
ds
mov
insl
xchg
dec
andl
cmp
xchg
add
pop
sbb
jbe
ret
fidivl
xor
push
dec
jl
push
sbb
inc
pop
mov
fistpl
mov
jmp
sarl
jge
ja
notb
repz
push
sub
or
test
imul
push
popf
xchg
insb
adc
mov
xor
xor
out
mov
std
jb
xor
test
mov
fldl
in
jmp
fnsave
test
and
sbb
movsb
xchg
test
into
dec
pop
pop
scas
out
cs
mov
jp
xor
aad
je
lea
data16
sub
dec
push
mov
movsb
out
mov
cmp
inc
adcl
mov
add
add
and
jo
jno
stos
push
adc
sbb
and
addr16
xor
aad
fsts
loope
movsl
movl
loopne
dec
jno
xchg
ljmp
in
repz
in
cmp
jne
gs
and
add
scas
pop
pop
fidivrl
outsl
jae
hlt
push
inc
je
pusha
loopne
cli
scas
lcall
add
fildll
outsb
push
and
or
jnp
or
pop
mov
cmc
leave
push
adc
cmpsb
sbb
mov
push
or
adc
jg
mov
movsb
outsb
pop
ror
sti
aad
divb
fwait
and
mov
cmpsb
and
adc
mulb
xchg
btc
and
fwait
dec
out
sbb
loopne
mov
fisubrs
lea
push
arpl
mov
or
mov
gs
xor
je
or
cli
mov
pop
cmp
adc
shlb
daa
movsb
ret
movsl
mov
cmpsl
mov
add
out
pop
jecxz
jae
pop
cmc
out
push
popf
mov
jae
repz
mov
sbb
icebp
dec
push
push
pop
mov
jmp
in
jecxz
gs
sbb
in
dec
inc
roll
lret
push
xchg
and
mov
orl
or
mov
xchg
add
in
cmp
mov
pushw
movsl
mov
cmpsl
jo
cmp
add
xchg
adc
xchg
syscall
negl
mov
and
sbb
sub
cld
arpl
push
into
xchg
push
pop
outsb
mov
dec
call
cmpb
dec
push
jns
fwait
bound
xchg
mov
jo
pop
test
int3
sti
dec
subb
cmp
les
std
sub
dec
repnz
sbb
dec
dec
mov
push
dec
cmpsb
add
adc
xchg
jb
jmp
and
cmp
cmp
rolb
out
pop
into
jnp
stos
and
pushl
mov
pusha
sbb
ja
test
daa
popa
test
out
das
pushf
cld
shrl
jne
or
push
sub
mov
xor
cmp
outsl
xchg
mov
fildl
cld
out
dec
movsl
mov
adc
es
movsb
data16
or
fldenv
in
push
in
call
xchg
pop
rolb
jae
ret
dec
inc
je
testb
cmp
imull
lret
mov
mov
test
push
outsl
cs
xor
or
push
popa
inc
push
fwait
push
add
mov
fwait
mov
jns
out
data16
dec
in
mov
pop
movsb
push
dec
fdivs
popa
test
int3
daa
icebp
sbb
and
data16
xchg
or
inc
imul
stos
bswap
aad
loope
push
xchg
mov
mov
xchg
xchg
gs
push
int3
cmp
out
mov
cs
mov
out
fidivs
daa
rorl
repz
movsb
xchg
fstpl
pop
mov
sbb
mov
pop
adc
pop
push
mov
pop
cmp
xor
testl
mov
xor
lea
sbb
mov
ss
add
cmpsb
test
cmp
pop
mov
data16
cmp
rorl
cld
sbb
cmp
mov
cmp
or
mov
jmp
in
and
and
std
lods
cmpb
in
lock
negb
call
add
xor
out
cmp
ja
daa
mov
mov
insb
ret
test
xchg
in
aad
sbb
daa
lock
fistpll
xchg
pop
fiaddl
xor
xor
pop
test
pop
push
divb
lods
test
sti
sbb
pop
or
loopne
sbb
cmpsl
leave
in
scas
dec
out
lods
mov
loopne
or
mov
pop
int3
jno
xchg
fstpt
daa
imul
cmp
clc
insl
mov
bound
daa
test
sub
lea
or
pusha
jl
mov
out
mov
ljmp
orl
je
cmp
int3
jge
clc
fidivrs
sub
cltd
out
loope
xchg
das
cs
fcoml
in
scas
pop
ret
dec
xchg
or
repnz
loop
movsl
outsl
fsubs
mov
ds
and
std
cmovns
aaa
pop
dec
stos
sub
mov
pop
imul
mov
insb
jns
jecxz
scas
dec
lcall
fcmovb
mov
repnz
dec
sbb
push
mov
cmpsb
sbb
je
cld
int
test
leave
inc
xchg
out
je
popa
and
enter
neg
jne
mov
ficompl
or
scas
dec
lret
pop
mov
popa
lock
push
orl
cmp
mov
cmpsb
int3
mov
sbb
dec
mov
xchg
push
pop
ret
jmp
jge
mov
leave
sub
or
ja
lcall
out
lock
mov
jecxz
cmpsb
cmp
lret
adc
icebp
lds
adc
sbb
jns
push
outsb
jge
dec
and
xchg
imul
dec
in
fcoms
cmp
mov
add
sub
fildll
addr16
cwtl
xor
test
mov
fldcw
ljmp
jle
movd
sarb
ljmp
out
jmp
lods
out
lcall
stos
adcl
lret
sbb
add
popa
repz
pop
fwait
cmp
loop
mov
gs
out
dec
adc
jne
pop
jo
call
testb
inc
xor
sbb
lcall
mov
sub
and
stos
pop
cmpsb
mov
mov
in
sub
lret
ljmp
inc
fcmovbe
outsl
cmp
pushf
xor
push
pop
in
cmp
mov
ret
rcll
xchg
cs
pop
mov
jnp
mov
mov
cmpl
and
je
mov
cmp
cmp
mov
jns
push
mov
jg
mov
arpl
cld
inc
je
xchg
ljmp
jl
dec
dec
gs
lock
jl
pushw
cmp
call
jmp
or
or
mov
mov
gs
int
fsubs
mov
mov
je
cli
jns
xchg
add
ret
inc
mov
jecxz
test
aas
pop
xor
and
jge
lahf
cmc
xor
mov
sti
cmp
scas
aas
aaa
mov
or
sub
sbb
lahf
sti
cmpsl
jmp
mov
add
push
cmpsl
fwait
jl
js
sbbl
and
xchg
mov
mov
sahf
cmp
fsqrt
cli
daa
xchg
pop
sahf
lock
das
pop
aaa
sub
sub
fcomps
push
cli
pop
adc
mov
push
jg
fwait
lock
test
xor
cmp
pop
mov
jne
int
mov
in
cltd
mov
sbb
pop
std
data16
ret
je
mov
jmp
jp
cmp
add
stos
scas
sbb
addr16
in
repz
xchg
fsubl
jnp
orl
data16
out
sbb
gs
mov
sti
out
push
or
test
mov
lcall
sbb
mov
fs
jmp
xor
cmp
out
fwait
iret
sbb
cltd
rcrb
add
fildl
sbbl
imul
testb
mov
jae
cli
jbe
aas
into
dec
outsb
in
inc
cmp
pop
in
aaa
jg
stc
mov
push
lock
out
es
pop
xor
inc
fnstsw
pushf
int3
mov
les
sbb
loope
cwtd
sbb
mov
push
cmpsb
cld
orb
fisubrl
dec
fldt
mov
outsl
stc
pop
dec
sbb
popa
out
or
adc
xor
xchg
leave
ror
stc
inc
adc
xchg
test
jp
data16
mov
enter
pop
test
jge
jae
push
call
xchg
cli
mov
fidivrl
data16
and
loope
jge
lret
stc
inc
data16
or
add
int3
cld
cmp
mov
lea
mov
sbb
out
pop
aam
push
mov
add
cmp
mov
push
scas
jo
push
out
cmp
nop
pusha
gs
mov
pop
sahf
xchg
ja
fisttpl
add
xchg
cld
jns,pn
out
sub
addl
push
cli
clc
enter
mov
es
sbb
bound
xchg
cmp
insb
adc
div
lods
int
or
adc
xchg
xchg
movsl
insb
add
sahf
pushf
mov
leave
call
and
call
mov
cmp
or
lcall
mov
lahf
mov
fwait
mov
xchg
ljmp
adc
jecxz
mov
in
xchg
cwtl
gs
mov
mov
pop
rcrb
inc
dec
lds
insl
xor
addr16
inc
sub
push
lret
movsl
mov
fmull
jnp
fdivs
mov
daa
inc
xchg
outsl
in
js
sbb
add
mov
jg
sahf
in
push
sub
lods
cmc
shl
jl
jmp
jae
adc
push
fbstp
add
roll
aam
arpl
or
gs
push
outsb
std
ljmp
jp
loopne
sub
sti
arpl
js
pop
xchg
mov
xchg
movsb
push
xor
xor
cmp
data16
addr16
out
cltd
xchg
arpl
mov
pop
loop
pushf
pop
pop
lods
arpl
fadds
test
pusha
sahf
sbb
cmc
hlt
pop
fcoml
push
stc
mov
sbb
into
popf
out
inc
sbb
and
nop
sub
pop
pop
xor
lahf
scas
xchg
adc
mov
fcompl
mov
lret
sbb
mov
cmpsb
xchg
adc
jno
int
movsl
push
add
dec
cmp
or
insb
sub
xchg
enter
mov
cmp
ja
into
call
mov
fsubs
shr
add
in
pushf
cmp
je
test
dec
cmp
dec
rcrb
fsubr
xchg
cmpsb
stos
call
sub
mov
pop
leave
jae
aam
das
sbbl
repz
jge
jle
or
cmp
mov
mov
push
inc
add
ja
mov
int3
mov
in
jecxz
mov
lahf
mov
push
scas
in
jmp
pop
adc
in
aaa
and
dec
pop
movsb
lret
nop
sar
push
mov
sbb
jmp
mov
adcb
ds
aam
inc
test
push
inc
jb
jo
iret
fnsave
clc
cmovne
add
fdivr
stos
sar
jnp
jne
add
cmp
mov
pop
jnp
scas
adc
movl
sbb
fdivs
push
push
dec
pop
push
sub
dec
dec
jne
mov
cmc
push
mov
ja
sbb
and
pop
pop
adc
call
xchg
shrb
daa
push
push
inc
in
pop
add
jge
push
add
addb
jg
jnp
imul
daa
mov
scas
aad
sbb
sub
sahf
mov
fsubl
pop
jl
test
inc
adc
or
rcl
push
pop
sub
jmp
and
ljmp
mov
mov
inc
addr16
sbb
idiv
movb
mov
xor
xchg
mov
pop
scas
fmul
mov
mov
hlt
sbbb
clc
or
or
movsb
jge
adc
shl
push
mov
sbb
daa
xchg
pop
jmp
xchg
add
pop
sub
dec
cmp
adc
dec
add
push
xchg
out
mov
popaw
leave
mov
or
outsw
sub
cmpsb
outsl
testl
popf
mov
jp
imul
mov
stc
adc
mov
mov
arpl
fcompl
pop
daa
jns
loopne
or
sbb
loopne
mov
cli
lcall
insl
jmp
sti
dec
or
mov
js
or
lret
addr16
fcompl
pusha
rep
pop
lods
mov
sbb
es
and
sbb
lock
mov
fsubs
add
jo
negl
ljmp
fsubl
push
test
pushf
sub
les
mov
jno
mov
out
int3
inc
push
hlt
stos
push
js
pop
sub
arpl
test
test
cld
xor
sbb
jns
or
xor
out
inc
daa
mov
mov
addb
lret
dec
push
leave
xor
push
jns
in
ja
cltd
std
or
mov
push
mov
not
test
movq
adc
inc
movsb
icebp
icebp
or
jns
enter
jl
cmp
or
mov
and
mov
adc
mov
movb
pop
push
sbb
mov
push
push
mov
fdivs
dec
shll
jmp
movsb
inc
in
sbb
and
movsb
or
add
sti
push
fldl
cmp
jo
xor
loope
scas
sub
cld
fsubrl
and
push
cmp
sub
imul
sbb
and
or
sahf
push
in
in
fistpl
andl
mov
mov
cmp
movsl
lret
jl
pop
fs
fistl
xor
call
fdivrp
sbb
out
pop
in
in
cld
cmp
sub
inc
pop
mov
and
jno
popf
cmp
push
cmpsl
and
and
inc
jle
enter
mov
add
mov
lahf
jmp
lcall
leave
je
inc
pusha
xchg
into
xor
stos
push
mov
outsl
stos
inc
rcrb
repz
into
pop
push
push
pop
or
ret
loopne
push
loop
dec
sahf
pop
cmp
sbb
out
pop
push
pop
jb
adc
in
in
jno
stos
jmp
pop
xchg
jo
fdivr
sbb
sbb
negl
arpl
gs
mov
fcomps
mov
xor
inc
cmp
sti
cld
jge
and
xchg
sub
cli
pop
pop
clc
sbb
in
push
and
mov
pushf
mov
jns
ljmp
andl
dec
popf
imul
into
fsubl
cmp
or
outsl
mov
cmp
adc
mov
int
pop
add
fldcw
mov
pop
loop
pop
cld
jmp
and
cmpsb
ds
jae
pushf
push
jbe
sbb
and
adc
or
repz
pop
outsl
addr16
cwtl
cs
cwtl
cmp
enter
jp
cld
jne
fldenv
pop
es
lock
sbb
es
cmpsb
inc
add
inc
cmp
mov
inc
pop
aad
inc
mov
sbb
out
insb
inc
mov
mov
push
push
add
pop
imul
add
xchg
pop
fmull
arpl
movsl
leave
int3
sbb
in
js
sbb
in
mov
mov
cmp
mov
jbe
adc
repz
cmp
pop
pop
dec
xor
dec
sub
cmp
cmp
dec
xchg
fldl
cwtl
insl
fninit
pop
sub
and
lcall
xor
jne
outsl
dec
lret
sbbb
push
les
xchg
mov
add
lcall
jbe,pt
enter
xchg
xchg
sbb
add
push
leave
inc
clc
invd
cmp
les
popl
iret
pop
lcall
dec
pop
mov
enter
mov
cwtl
gs
sub
sbb
and
add
loop
pop
mov
sub
into
ret
hlt
std
mov
mov
fistl
mov
pop
cld
ja
and
fldl
lock
push
jge
fstps
out
add
add
ljmp
xchg
sub
clc
scas
xchg
push
orl
xchg
les
int3
in
in
in
in
in
cmc
mov
push
lret
xor
xchg
clc
movsl
pop
jns
out
pop
bound
mov
sub
and
sahf
jne
add
rcrl
inc
xlat
and
nop
je
jne
jmp
dec
fbld
xchg
lods
adc
sub
cmp
popl
jae
in
stos
psubusb
ret
sbb
out
jne
pop
test
pop
pop
push
movsl
mov
and
js
cmc
xor
mov
adc
push
pop
push
int
pop
and
xlat
or
mov
gs
out
pop
fidivrl
cmp
ja
or
inc
ficompl
mov
stos
sti
push
jecxz
scas
pushf
imul
sub
or
fistpl
daa
cmp
dec
cmpsl
fcmovne
fldenv
stos
std
fmul
mov
and
pop
scas
push
xor
xchg
arpl
sbb
fidivs
add
add
int3
or
or
outsl
int
sbb
js
mov
pop
adc
mov
add
popa
xor
push
leave
or
push
mov
sub
pop
inc
stc
mov
sbb
mov
jne
out
mov
stos
push
mov
pop
pop
mov
out
fdivrs
xor
cld
dec
xchg
push
mov
mov
sub
add
cmpsl
imul
mov
dec
fisubl
test
xor
shll
dec
pop
cli
and
rcll
xchg
and
ja
insl
push
jbe
mov
clc
push
xchg
cmpsb
loopne
pop
fdivl
and
sti
xchg
sbb
jg
mov
call
sti
cld
and
jg
or
cmpsb
add
sub
loopne
in
nop
sub
ja
scas
rorl
mov
ds
stc
scas
inc
sbb
jl
mov
xchg
jae
repz
filds
lea
pop
mov
das
scas
loop
loop
daa
or
jmp
mov
adc
add
mov
leave
cmp
aaa
fdivs
aad
dec
cmp
fwait
push
lret
pop
jne
leave
fsubl
in
icebp
addl
xor
or
add
sbb
and
aad
pop
outsb
rcrb
gs
jge
popf
arpl
call
and
inc
int3
push
lret
push
out
js
rcrl
cmp
or
dec
xor
push
ljmp
cmp
test
fsts
mov
jne
insl
push
enter
in
mov
pop
int3
jecxz
pop
arpl
pop
fistps
mov
cmp
xchg
lods
aam
jg
add
jne
jmp
pop
adc
inc
repnz
dec
inc
stc
jmp
add
inc
or
js
jge
dec
test
outsb
mov
cli
pop
jne
or
js
or
lret
mov
imul
call
cli
mov
in
icebp
and
dec
push
cmpl
jae
inc
fbstp
push
sti
and
push
clc
xchg
push
jne
out
ljmp
cld
xor
and
and
xchg
mov
fwait
pop
mov
idivl
inc
mov
xor
outsl
xchg
and
ret
in
adc
dec
mov
inc
pop
pop
jne
adc
pop
jne
stos
dec
and
sbb
cmp
sti
addr16
mov
mov
ds
mov
mov
mov
iret
aad
mov
pop
and
sub
jp
pop
ffree
or
push
inc
mov
les
sub
xchg
dec
jmp
pop
je
notb
jl
addr16
inc
loopne
add
add
xchg
push
xor
sbb
iret
sbb
out
dec
gs
imul
loop
sbbl
cmp
mov
jae
fwait
ljmp
mov
pop
pop
sbb
les
mov
mov
mov
ja
push
lsl
push
rcrl
pop
mov
add
jle
sbb
mov
clc
or
pop
lcall
or
mov
std
jne
jb
jbe
xchg
cmpsb
jmp
and
js
jne
fldt
inc
push
icebp
popa
sbb
enter
cwtl
fucomp
out
inc
pop
cmpsl
xchg
clc
mov
xchg
pop
or
je
out
subl
stos
in
leave
jbe
xchg
pop
push
mov
dec
fistl
icebp
add
call
loop
inc
push
mov
fsubs
adc
inc
divl
cmpsb
imul
imul
lds
cmp
ja
fcompl
lret
int3
out
add
xlat
sti
psrlq
mov
push
inc
and
jge
cld
xlat
sub
sahf
arpl
push
sub
shll
pop
and
dec
jg
adc
call
lret
and
repz
call
and
pop
shlb
popf
daa
sub
imul
pop
mov
mov
sti
sbb
daa
fidivrs
jne
mov
shl
add
outsl
fsts
sti
pop
fsubs
data16
mov
push
aam
adc
rcrb
push
xor
sbb
cmpl
pop
jo
cltd
push
lcall
not
mov
mov
adc
mov
inc
push
cmpsl
jmp
dec
aaa
cmc
xor
mov
outsl
push
and
add
sbb
mov
ds
clc
sbb
jne
dec
fidivs
addr16
outsl
ja
outsl
cmp
orl
rclb
sub
addr16
mov
jg
loopne
mov
pop
jne
or
stos
fidivrs
cld
in
rcll
ja
dec
vphaddubw
aam
fcompl
adc
push
insl
repnz
cmp
push
or
pcmpeqd
push
dec
push
ja
stc
out
cmp
pop
pop
xchg
sbb
or
or
enter
pop
mov
xchg
ds
in
push
pop
xorb
insl
mov
negl
push
mov
jl
mov
shlb
cmc
divb
pop
sub
xor
inc
movsl
pop
push
fs
popa
imul
mov
shl
or
or
loope
fsubrl
aam
jge
sbb
jne
in
scas
cwtl
sbb
addl
push
xchg
sub
in
repnz
loopne
outsl
gs
xcrypt-ctr
cmpsl
popf
out
mov
lods
rorb
xchg
out
ja
int3
sbb
push
jnp
ret
fmul
fwait
shll
fst
sbb
xchg
pop
loop
das
je
scas
dec
jne
add
pusha
mov
and
bound
jmp
subl
andb
push
jmp
xchg
mov
sbb
cmp
pop
in
jle
pop
xor
pop
dec
repnz
fsubrs
aas
jne
dec
leave
jge
mov
push
xchg
popa
dec
xchg
lea
mov
movsb
add
fwait
adc
or
scas
push
and
add
shlb
aaa
push
dec
push
lds
mov
xor
or
mov
test
sahf
lahf
push
and
es
negb
push
movsb
test
or
test
scas
xor
mov
loopne
mov
push
sbb
mov
negl
push
cmpsl
pop
adc
scas
mov
gs
mov
ss
or
fdivs
daa
mov
inc
fs
test
xor
xchg
out
jne
popa
dec
lock
lahf
dec
push
cld
int3
je
xchg
pop
fsubs
jo
adc
mov
fists
in
add
xor
jmp
in
frstor
outsl
sub
int3
es
ss
loopne
pop
scas
cld
mov
imul
xor
scas
sub
or
dec
pop
mov
cmp
mov
push
mov
lods
scas
lahf
and
inc
mov
clc
sbb
cmpps
sti
xchg
arpl
cmp
cltd
push
pop
sub
push
jl,pn
pushf
lock
mov
adc
xchg
inc
pop
shrb
pop
ds
sbb
pop
sbb
mov
mov
testb
xchg
std
or
and
xchg
stos
les
mov
in
andb
data16
scas
shrb
dec
xchg
pop
fcoms
jae
imul
dec
imul
push
sub
stc
or
loop
sbb
outsl
fadds
jnp
ud0
fwait
pop
sub
pop
sub
fsubrs
sbb
push
inc
mov
xchg
call
test
push
lret
sbb
or
push
popa
lds
jecxz
mov
jmp
dec
cmc
cmp
mov
xchg
out
inc
add
pop
push
cmpsb
and
xchg
arpl
nop
aaa
cmp
movsl
sarb
scas
inc
sub
jne
push
sub
or
cmp
fcomp
pop
repz
cltd
and
inc
push
xchg
add
popa
fwait
pop
dec
movsl
adcl
dec
mov
stos
in
jae
paddw
mov
mov
dec
loope
pop
xor
mov
xchg
jae
inc
jo
shlb
sub
fs
in
divl
les
fst
xchg
cmpsl
int3
push
mov
xor
jg
popf
pop
cmp
bnd
fdivrs
adc
sbb
shlb
inc
mov
pop
js
nop
and
jg
lret
jns
mov
sbb
mov
icebp
sbb
iret
mov
jbe
jne
test
bound
in
movsb
jno
xor
jne
ljmp
cltd
jne
sub
out
into
fsubl
pop
icebp
bound
outsb
repz
mov
lahf
idiv
lret
out
sbb
sets
out
mov
ss
adcl
xchg
lods
cmpsb
inc
in
gs
push
nop
inc
insb
sub
arpl
push
jl
adc
sub
jno
scas
mov
pusha
rcr
repz
jae
bound
xchg
out
icebp
cli
mov
fsts
add
push
popa
mov
sub
leave
movb
mov
and
mov
add
xorl
cmpsb
out
into
push
inc
out
jno
jno
dec
insb
fsubl
pushf
fstp
gs
cmp
lret
push
mov
imul
push
in
lcall
mov
in
leave
cmp
jne
push
fidivrl
and
sbb
lds
xchg
pop
sbb
jl
iret
adc
cmp
jne
ficoms
lods
call
xchg
or
fdivs
incb
jle
pop
scas
xchg
daa
lahf
rcpss
jne
add
xor
int
cli
into
jnp
inc
sbb
cmpsb
aam
cmpsb
clc
popa
dec
cwtl
and
xchg
decb
mov
scas
loop
mov
adc
out
mov
mov
loopne
push
cmp
cwtl
pop
ljmp
mov
mov
hlt
mov
bnd
and
pop
sub
mov
shlb
sti
jne
out
fldpi
fmull
or
cs
aas
rcrl
addr16
jne
and
notl
mov
pop
xchg
sbb
push
cmp
mov
fistps
in
pop
xchg
push
dec
or
mov
ljmp
add
or
out
xchg
dec
mov
inc
mov
mov
dec
je
sarl
lret
jge
aam
push
inc
xor
data16
jnp
sub
pop
rcr
jne
scas
fisubrs
jecxz
movsl
lods
in
fadds
popa
pop
cmpb
fbld
fstl
cmp
lret
loop
gs
xor
cmovge
sub
and
sub
clc
ja
jbe
pop
rcrb
jbe
xchg
fmuls
add
loope
push
movsb
out
test
jnp
lods
and
xchg
xchg
add
cs
scas
xlat
scas
rcl
mov
cmp
fldcw
pushf
sbb
ret
and
testb
push
outsl
pop
inc
jne
dec
push
cltd
movsb
push
flds
jne
cld
jecxz
pop
sbb
sbbb
movsl
aam
xchg
cmp
or
cmp
cli
jbe
aaa
jmp
pop
loope
mov
addr16
dec
push
cmp
fmul
cs
xchg
inc
sbb
es
or
rol
lock
outsb
mov
or
add
mov
aad
lahf
cmp
dec
pop
mov
add
mov
test
aas
jne
or
testl
xor
lods
mov
cli
pop
and
scas
push
gs
and
sbb
jb
cmpps
arpl
andl
adc
mov
pop
jne
inc
jb
fcmovnu
addr16
in
add
jl
push
rcll
jnp
fnstsw
fs
jb
push
jp
jne
mov
pop
ret
out
andb
inc
cmp
push
sbb
or
orl
xor
cmpsl
jl
loope
fmuls
or
leave
subl
ljmp
lcall
call
mov
sbb
add
or
push
jo
addr16
inc
pop
cld
sub
lds
aas
ljmp
push
orb
out
test
fdivrs
insb
out
sbb
shll
add
outsl
les
call
xchg
nop
pop
pusha
fildl
stos
aaa
cmpsb
or
movsb
xchg
push
aas
out
and
push
mov
dec
xchg
fcomp
bound
mull
sbb
ret
lods
std
mov
adc
inc
cltd
or
xor
and
mov
mov
test
movsb
stos
and
mov
xorl
mov
or
pop
mov
inc
decl
pushf
pop
mov
rorb
insl
pop
adc
pop
sub
push
outsl
push
int3
and
pop
cmpsl
testl
fcoms
neg
cmp
mov
mov
ret
mov
pushf
sti
mov
insb
pop
mov
cwtl
pop
loopne
jmp
flds
and
mov
and
or
ss
mov
push
pop
jecxz
rcll
jo
loop
cmpsb
in
aaa
cmpsb
adc
or
sbb
and
push
mov
movsl
cmp
scas
inc
std
aad
and
mov
das
les
adc
movsl
mov
std
lea
in
fidivl
test
dec
mov
or
inc
pop
stos
fisubrs
jmp
ret
mov
pop
pop
popa
xchg
sbb
insb
sbb
cmpsb
jne
test
ja
cltd
das
mov
cmpsb
cli
loope
cmp
jg
mov
addr16
data16
stc
andl
jne
imul
stc
mov
scas
imul
jge
rcll
outsl
test
sbb
adc
adc
sub
repnz
aas
clc
inc
fcmovnu
cmp
dec
cmp
notb
dec
cmp
in
neg
repz
fcompl
jo
mov
cmp
andb
daa
clc
mov
gs
inc
pop
and
imul
cwtl
cmpl
adc
pop
jp
inc
mov
in
push
cltd
nop
popa
repz
stos
sub
or
test
pop
xchg
cwtl
dec
add
fists
leave
adc
inc
add
jl
push
push
repz
xchg
scas
fdiv
push
outsl
ljmp
inc
inc
mov
ljmp
pop
or
ja
xor
push
mov
fiadds
xor
cmp
popf
fs
gs
mov
scas
jo
test
add
sbb
imul
sbb
iret
mov
pop
pop
sub
shl
aam
pop
xor
shll
call
cmp
jge
ja
repz
shlb
out
sti
cmp
mov
mov
jg
test
stos
repz
pop
outsl
push
fadds
divb
cld
sbb
mov
call
jecxz
pushf
jne
enter
mov
enter
jmp
outsl
scas
sub
out
adc
dec
xor
xchg
xchg
inc
daa
arpl
adc
cli
dec
lahf
leave
cmp
int3
cmp
dec
jmp
and
fsubs
jl
dec
pusha
add
bts
and
push
movsl
xchg
je
jne
rcrl
shrl
sub
pop
pop
jmp
mov
sti
scas
jecxz
and
mov
shll
push
leave
decl
fdivp
xchg
and
jecxz
aas
adc
xor
pop
test
adc
xor
sbb
test
incl
inc
mov
adc
sti
cmp
xchg
loope
push
mov
pop
inc
ss
jno
sub
std
mov
sbb
and
hlt
in
inc
dec
repz
movsl
mov
jg
xor
mov
add
divb
test
outsl
ret
jg
movsl
push
xchg
mov
pop
jne
mov
cmp
pop
mov
sbb
rclb
outsl
add
sbb
pop
pop
cmc
add
mov
push
fwait
lret
pop
movsl
inc
sbb
int
out
icebp
fnsave
aas
lds
out
cmp
data16
or
js
mov
into
test
sbb
bound
clc
inc
scas
jmp
xchg
push
adc
cmpsb
jbe
pusha
jmp
push
sub
shl
js
dec
xchg
fcmovnbe
pop
cmp
xchg
add
stos
scas
or
stos
movsb
cmpb
and
cmpsb
leave
stc
and
adc
addr16
sahf
mov
movsl
iret
xchg
jne
rolb
or
push
jo
ja
movsl
cwtl
inc
pusha
add
adc
lds
adc
push
or
jae
push
shl
cs
stos
sbb
inc
hlt
outsl
loope
stc
cmpsl
mov
addr16
sbb
pushf
inc
adc
lcall
bound
ret
dec
in
or
in
mov
scas
dec
sub
adc
ljmp
pop
inc
out
and
xchg
pop
fs
pop
xor
jecxz
pop
cmp
jns
sarb
pop
inc
jmp
ljmp
nop
jmp
or
inc
xor
fldt
mov
cmpsb
test
and
sub
sub
jae
out
sahf
inc
sbb
pop
jp
and
popa
dec
rclb
cmpsl
lahf
xchg
mov
sahf
jno
dec
pop
test
out
iret
jo
cmp
sub
call
xchg
add
lahf
daa
inc
stc
jecxz
pcmpeqw
outsl
rcrb
lahf
sbb
or
xor
popf
lahf
ret
dec
imul
xor
outsb
xchg
push
xchg
adc
inc
bound
jne
mov
mov
dec
ret
je
push
sbb
outsb
scas
sub
sarb
pop
in
stc
outsb
cmpsb
sti
in
pop
pop
jo
cmpsb
pop
pop
sub
or
mov
sahf
sahf
iret
rcr
outsb
cmpsb
add
xchg
outsl
cmp
xor
pop
int
repnz
jbe
jle
dec
sub
ja
pop
rorl
jp
xchg
call
pop
mov
xchg
icebp
sub
aam
pop
cmp
test
and
cmp
push
loop
jg
clc
mov
loope
outsl
aas
sub
pop
mov
push
insb
sahf
icebp
sahf
mov
and
xchg
subb
jmp
cmp
xor
jl
mov
and
inc
xor
xorl
xchg
in
fadds
jns
mov
sbb
sbb
cmp
aas
pushf
adc
pop
push
cmp
movsl
outsl
sub
mov
ja
pushf
test
mov
xor
and
enter
shrb
loope
stos
sti
outsl
sti
test
mov
push
fmuls
jg
push
fidivl
aas
xchg
pop
xchg
jle
das
sub
outsl
xchg
mov
stos
adc
xor
test
xchg
mov
jg
leave
jae
add
mov
sub
jle
add
inc
and
cmp
cwtl
int3
outsl
ja
xchg
sbb
push
xor
sbb
sub
jb
icebp
cmp
and
mov
aaa
cmpsb
pusha
sbb
xorb
je
leave
adc
pushf
or
jns
fnstenv
push
shll
xchg
ss
shrl
mov
lea
cmpsl
adc
fildl
jg
cmp
and
inc
push
jbe
roll
je
pop
cmc
mul
sti
xchg
mov
sbb
cmp
inc
cmpsl
call
cs
mov
jne
cltd
jmp
mov
cmc
push
inc
loop
pushf
fdivs
addr16
movsl
roll
pushl
sub
aas
push
or
add
xchg
icebp
sub
and
sti
scas
rcrb
or
jae
pop
std
cmp
dec
adc
push
add
cmp
jbe
and
test
jge
xchg
pop
and
jne
std
dec
das
test
mov
inc
popa
dec
inc
mov
xor
cmp
lods
js
test
pop
shrb
sbb
scas
ja
cmpsl
or
add
mov
push
dec
mov
jp
dec
popa
pop
call
or
fmuls
pop
mov
call
sbb
jnp,pn
add
repz
add
in
mov
and
rorb
mov
cmpsb
rorb
lcall
loopne
adc
dec
mov
jb
pushf
and
sbb
std
daa
fcomps
mov
ret
and
loop
sbb
sub
fs
add
sbb
jne
add
mov
pop
mov
lret
jecxz
push
sbb
sbb
lret
xchg
jno
fdivl
add
xor
or
data16
adc
or
out
xor
jae
imul
arpl
addr16
fcmovu
jge
jp
gs
xchg
dec
xor
hlt
mov
or
rorb
mov
dec
cwtl
jae
call
fnstenv
or
sbb
rcll
sbb
test
and
add
ficomps
testl
stc
test
in
dec
sub
push
mov
mov
idivb
scas
mov
test
cli
sbb
test
fcmovb
and
jg
cmovns
fsubl
mov
shll
test
bnd
sub
idivl
push
xchg
sbb
push
jle
push
inc
insl
push
cmp
cmpsb
xchg
sbb
cltd
fdivs
add
or
rorb
pop
mov
pop
icebp
jmp
mov
rcr
cs
xchg
inc
mov
dec
addr16
and
xchg
and
adc
fstpt
movsb
in
jne
jl
icebp
xchg
cmc
sub
call
xchg
mov
pop
jne
jb
int
sub
jb
lret
pop
call
mov
or
inc
aas
sbb
sbb
mov
and
movsb
sar
xchg
popf
je
mov
in
loope
push
inc
mov
add
imul
test
popf
mov
jo
cmp
push
cmp
cmp
mov
insb
xchg
cltd
jns
in
push
mov
je
cmpsl
cmp
mov
sub
lahf
push
mov
imul
bound
sbb
add
adc
xchg
cld
push
lock
stos
mov
pusha
pop
lds
test
add
sub
push
and
insb
inc
push
fs
xor
and
adc
cmc
pushl
jmp
mov
cmc
testl
sti
mov
fadds
fdivr
gs
pop
pop
adc
push
xchg
jg
inc
sbb
fsubrs
push
inc
inc
enter
out
ljmp
push
xchg
jae
cld
es
xor
push
mov
popf
push
fdivl
xor
repnz
adc
sub
xchg
mov
jne
jnp
pop
in
dec
xchg
push
sbb
into
repz
fcomps
xchg
sbb
cmp
fmul
jmp
xchg
jbe
das
sub
or
fldenv
je
cmp
xchg
jg
das
and
aaa
xchg
leave
fmull
in
or
xor
push
or
or
sbb
jae
xor
pop
mov
add
outsb
add
stc
out
or
ficomps
pop
sbb
sbb
call
dec
cs
cli
mov
xor
xor
push
jne
mov
scas
leave
pop
cwtl
add
adc
jmp
inc
xchg
inc
stc
lock
dec
leave
imul
cmpsl
lcall
fsubs
mov
in
or
pop
aaa
cwtl
xchg
pop
sub
lock
dec
xor
jns
and
gs
mulb
mov
mov
and
clc
out
xlat
dec
dec
fstpl
sbb
mov
and
mov
daa
sbb
loopne
je
jg
cmp
dec
and
and
fcmovnu
movsl
in
sahf
test
jo
and
pop
out
or
pop
push
add
and
shll
pop
jg
sahf
or
and
pushf
cmp
mov
imul
ds
sti
out
inc
hlt
imul
sahf
mov
fbstp
aam
addr16
fcmovu
jmp
movb
lods
fmuls
stc
pop
sbb
add
les
unpckhps
mov
outsl
inc
jmp
sub
test
hlt
push
outsb
pop
mov
in
sti
cmpsb
loope
cmp
adc
paddb
pop
std
shrl
inc
aas
pop
mov
sbb
push
shlb
sti
dec
fisubrl
pop
xor
and
adc
out
fldt
scas
loop
ljmp
sahf
dec
push
add
gs
add
push
insb
lea
xchg
fwait
xor
repz
sbb
filds
cs
test
dec
xor
inc
imul
sbb
or
jmp
jle
jns
push
pop
data16
or
jb
js
int3
pop
shll
rcrb
push
out
and
adc
xchg
push
sub
fsts
dec
pop
pop
inc
dec
icebp
xchg
shll
nop
in
lds
cmpsl
jne
lock
adc
aam
or
repnz
mov
aaa
pop
iret
mov
or
lcall
inc
adc
pushf
imul
mov
jmp
sub
lahf
stc
and
inc
inc
lock
xchg
push
mov
mov
xlat
push
push
jecxz
addl
fdiv
fistl
pusha
cmc
jnp
fmul
imul
sub
pop
rcr
out
clc
cs
fistps
pop
popa
cmp
or
push
mov
hlt
push
sarl
scas
cmp
push
adc
add
or
cmpsb
push
adc
sub
aam
sub
and
iret
mov
push
lcall
mov
out
sbb
out
inc
ja
mov
adc
cmpsb
mov
outsl
fstp
divl
add
shlb
jp
lods
dec
stos
cli
test
jns
lahf
call
xchg
daa
mov
cmpsb
rcr
add
push
mov
sub
cmp
addb
xchg
ljmp
cld
popf
pop
cmpsb
fisubrl
scas
push
lret
xor
cs
mov
test
pop
sub
sbb
inc
hlt
aam
fsubs
xchg
movsl
mov
sbb
sbb
sbb
xchg
lock
mov
mov
inc
das
stc
daa
out
stos
aas
xor
push
sub
sub
je
sbb
jne
mov
sub
push
mov
cmp
sbb
and
jne
mov
je
sbb
lcall
add
in
add
pop
hlt
movsl
ret
arpl
mov
negl
movsb
mov
mov
add
xchg
loope
mov
add
cmp
push
jb
push
ja
cmp
inc
fcomps
scas
movsl
imul
testl
dec
inc
fiadds
push
adc
mov
pop
pusha
arpl
lods
jge
push
jg
jne
or
or
iret
je
mov
or
pop
lock
sub
sub
push
mov
or
add
aad
mov
es
jle
test
pop
cmp
mov
dec
fsubrs
inc
enter
js
insl
sub
jp
xchg
stc
xorl
aam
mov
mov
sbb
pusha
cltd
sub
push
xchg
cmpsl
pop
cwtl
fsubs
push
pop
frstor
cmp
mov
shlb
xchg
dec
stc
sub
addl
push
divl
cmp
mov
repnz
pop
mov
push
fsts
out
push
int
inc
mov
mov
es
dec
iret
clc
in
mov
ds
fstps
pushf
ds
jmp
ret
out
dec
cmp
int3
pop
cs
mov
enter
aas
push
lret
pop
and
push
mov
cltd
in
pop
mov
test
or
jl
ja
in
adc
aaa
inc
je
loopne
inc
xchg
bound
push
ja
xchg
leave
aas
aad
inc
jae
lcall
xor
and
xchg
mov
mov
sub
mull
daa
and
jnp
mov
adc
adc
adc
mov
and
xor
rorb
ret
sub
pop
dec
sti
mov
xchg
push
sahf
popf
mov
xchg
andl
jns
jne
cltd
cld
sub
addr16
in
rclb
lcall
jg
inc
fbld
jmp
fnstenv
sbb
cmp
enter
xor
ret
roll
rorb
ljmp
repz
add
ds
cmp
in
jne
les
fldl
jl
pusha
addr16
add
ds
adc
data16
out
pop
sbbb
cmovnp
dec
jle
xchg
insb
push
inc
sbb
sbb
sahf
xor
popa
out
fsts
out
arpl
iret
and
push
loope
aam
in
push
inc
fstpt
inc
aaa
fcomps
pop
cs
or
mov
pop
inc
or
aad
inc
pushf
push
insb
xchg
xchg
xor
ja
fcomp
jmp
sbb
movzwl
js
xor
fbld
pop
cmp
cwtl
mov
iret
in
clc
jmp
pop
fs
pop
sbb
mov
das
mov
sub
xchg
loope
jne
adc
cmp
pop
push
movb
cmp
mov
jnp
sbb
or
fucomip
ret
cmc
mov
cmp
cmpsl
fistl
mov
fidivl
or
mov
and
or
sub
jo
js
lock
pop
ja
push
ljmp
mov
sbb
call
jno
fcomi
push
pop
out
stc
int3
fwait
lret
sub
sbb
popa
jns
mov
mov
and
out
cli
jl
mov
cmp
cmpsl
mov
loopne
pop
leave
repz
xchg
lds
ret
pop
loopne
mov
adc
sbb
cmpl
mov
xchg
lods
jbe
shrb
loopne
sub
mov
ds
cmp
cmp
sub
jmp
ds
jge
push
xchg
scas
or
jmp
xchg
jle
push
loope
fistps
dec
and
pop
or
lock
es
inc
push
adc
lret
jns
sbb
and
mov
jns
or
sbb
je
pop
xor
jg
pop
jne
imul
fwait
dec
frstor
scas
aad
cltd
sbb
jmp
stc
inc
aas
and
sub
pop
test
scas
jno
fsubs
xor
lret
cld
mov
rcr
fwait
push
mov
sbb
jne
xchg
inc
mov
pop
xchg
mull
cmp
mov
inc
inc
xorl
push
cmc
cmp
ja
lods
push
and
addr16
push
and
cli
imul
sub
notl
add
mov
jns
sbb
push
adcb
mov
xchg
lods
add
push
mov
ret
xchg
mov
stc
lds
jns
mov
jne
push
xor
jbe
loope
psrlq
dec
jno
dec
xchg
popa
clc
mov
sub
add
pop
sub
loopne
in
stos
int3
std
mov
sub
add
lea
push
scas
xor
hlt
pop
xchg
jecxz
push
dec
lock
xchg
fsubs
loop
call
insl
xor
loopne
outsb
je
test
adc
imul
in
ds
or
jne
xchg
mov
leave
hlt
test
lock
or
sub
lods
outsl
cmpsb
push
sub
add
jnp
mov
ficoml
icebp
aaa
dec
mov
sbb
or
outsl
mov
sti
adc
fcompl
mov
rclb
pushf
pmullw
push
daa
lret
testl
das
stc
cmp
pop
in
sbb
pop
jne
jnp
mov
ja
xor
out
mov
mov
cld
loop
aad
mov
push
dec
ficoms
xchg
mov
fistpll
cltd
xchg
cwtl
movlhps
test
xor
mov
mov
xchg
lods
pop
inc
ss
fists
test
add
mov
push
xchg
popf
aas
outsl
pop
sbb
cmp
std
push
mov
push
in
into
and
push
and
dec
int3
xor
mov
inc
cmp
add
jb
xchg
aaa
push
push
gs
lock
push
repnz
scas
dec
cmp
push
pop
fmull
pop
dec
ja,pn
arpl
inc
dec
stc
push
pop
push
sbb
cmpsl
adc
lock
xchg
add
out
cmp
xchg
lcall
pop
xchg
jg
jne
inc
arpl
je
cmpsl
mov
jle
dec
ds
mov
sarb
stc
out
je
add
add
pop
out
jnp
lock
add
movsl
js
jo
je
sub
or
xchg
nop
or
fsubrl
pop
cld
enter
dec
cmpsb
cli
inc
rorb
imul
fdivl
in
js
jae
or
inc
add
lods
dec
or
sbb
inc
fstp
das
mov
sub
add
movsb
mov
xchg
pop
jp
out
cmp
dec
cmp
data16
mov
sbb
ficoms
sbb
aad
stc
bnd
mov
and
jns
cld
or
and
fidivs
or
and
mov
and
or
cmpsb
imul
mov
clc
xor
iret
in
lds
mov
jne
imul
mov
add
lea
and
or
aaa
fcoms
aad
imul
shrb
fcos
gs
jne
or
sub
mov
jmp
add
hlt
pop
ret
sti
xchg
pop
xor
mov
sub
mov
pop
adc
das
inc
outsl
aas
or
mov
ss
xor
dec
ds
push
insb
dec
push
jns
adc
jb
push
push
sub
jmp
bound
dec
add
xchg
rcr
push
jmp
cld
cmpsb
mov
add
addr16
in
int
das
adc
enter
scas
std
lock
cwtl
pop
outsl
outsb
push
dec
sub
xor
mov
shr
pop
jb
inc
sbb
adc
add
pop
cmp
lahf
call
movsb
xchg
ret
or
sub
mov
cli
push
sub
fldl
ja
xchg
outsl
clc
xor
fadds
add
xchg
xor
sub
inc
sbb
fs
call
or
lods
jbe
insb
test
test
xor
cmpsb
push
into
and
aad
loope
stos
sti
push
sbb
mov
mov
call
int3
sbb
outsl
mov
addr16
xor
jne
pop
mov
scas
push
pop
dec
mov
in
cmpsb
pop
in
popw
jmp
ret
pop
xchg
loopne
push
out
inc
test
pop
fucomip
jl
pop
xor
outsl
out
movsl
dec
sub
dec
movsl
sub
js
mov
cmp
mov
in
push
mov
cmpsb
push
std
jge
int
testb
hlt
popa
jmp
jns
cwtl
leave
or
push
mov
lock
into
sbb
out
outsb
adc
mov
pop
xchg
mov
addr16
push
js
cli
mov
cmp
mov
outsl
pop
or
clc
or
add
sub
lcall
add
cli
loopne
lds
mov
and
pop
push
sbb
pop
inc
scas
leave
add
mov
in
jo
sub
jnp
inc
cmp
cmpsb
dec
rorb
add
jb
add
lods
call
cmpsl
int
cld
xchg
lret
mov
xchg
dec
data16
mov
add
or
xchg
mov
movsb
push
movsl
out
push
mov
push
scas
push
sbb
xchg
mov
out
mov
dec
inc
jno
cmpsb
out
jne
stc
push
xchg
jmp
out
ljmp
aas
jns
pop
icebp
cld
inc
dec
in
push
xchg
das
iret
aas
out
adc
arpl
lods
push
movsl
int
pop
stos
fsubr
mov
sub
cmpsb
pop
setae
pop
sub
mov
sahf
sub
gs
add
push
inc
popa
mov
je
dec
fs
mov
bound
push
int
push
and
lahf
fdivs
scas
adc
out
cmp
jmp
outsl
call
mov
lds
cmpsb
aaa
imul
outsb
loopne
or
mov
and
adc
data16
pop
xchg
jg
sbb
pop
dec
repnz
inc
cmc
test
pop
inc
fmulp
fcmovb
cwtl
lods
jne
test
int
push
scas
test
dec
fnstsw
xor
test
dec
fcoms
out
arpl
sub
sbb
es
dec
loope
mov
xor
test
lods
xor
adc
flds
mov
in
js
sub
sbb
aaa
pop
sub
dec
fidivrl
jne
sub
adc
das
outsb
ret
lods
add
mov
push
ret
repz
xor
sahf
or
dec
loop
lock
jne
imul
rcll
mov
jmp
stc
rcrb
cmpsb
xchg
pop
adc
adc
sarl
stos
sbb
jnp
jmp
int3
imul
inc
dec
mov
test
pop
aaa
pop
arpl
imul
aas
sbb
cs
inc
loopew
das
or
cwtl
jns
out
cmp
jmp
jg
ret
lret
pop
xchg
cld
test
test
push
jp
cmp
xchg
movsb
inc
cmp
jne
mov
out
shr
popa
push
push
and
push
lcall
in
jge
out
pop
arpl
pop
cmp
fmull
andb
xchg
ret
inc
jl
and
lods
and
lods
lret
pop
cmc
add
cmp
loop
sbb
mov
nop
outsb
jg
or
sbb
bound
shll
push
ljmp
ljmp
stos
cmp
push
sbb
cmp
mov
cs
int3
ljmp
mov
sub
es
stc
cmp
cmp
inc
jne
pop
or
iret
cltd
or
out
es
ss
cmp
ret
adc
icebp
mov
popa
xor
jb
jae
clc
add
ljmp
faddl
clc
add
lods
mov
jl
xchg
push
aas
sbb
push
loopne,pt
push
or
movsb
cmpsl
xchg
clc
ficompl
mov
fisttpl
jmp
adc
in
jne
sub
jge
out
fistl
int3
mov
sbb
notl
ja
outsb
ror
call
jne
insl
mov
mov
xchg
das
ja
pop
ss
insb
or
scas
orb
pop
jle
ffree
mov
and
es
inc
and
mov
jmp
dec
insb
repz
cmc
sub
cmpsl
popf
jl
dec
pop
jne
dec
testl
sbb
mov
fdivr
js,pn
lds
loopne
sub
pop
lea
call
inc
mov
push
outsl
sti
scas
repnz
aaa
sbb
pop
cmp
sbb
stos
shll
fldenv
or
push
pop
add
sbb
jne
dec
mov
adc
mov
sar
pusha
mov
push
jmp
jl
mov
loop
pop
add
pop
fnstsw
addb
adc
idivl
sub
push
sti
pop
pop
ds
ds
push
pop
xor
aad
adc
popa
sbb
fsubs
bound
das
lea
adc
adc
sbb
sti
cmp
scas
cmp
or
cmp
call
fcmovnbe
push
cmp
in
jne
jns
adc
addr16
sub
orb
adc
lock
pop
or
pop
iret
fs
xchg
xor
shlb
fistl
repz
fsubs
xchg
add
pop
stos
xor
pop
les
xorl
sahf
pushf
dec
push
iret
jg
dec
insb
lea
mov
shll
dec
mov
jne
shr
sahf
mov
inc
pop
call
push
fnstsw
jae
mov
adc
jmp
jns
ror
data16
in
push
fcompl
stc
lret
pop
lahf
mov
cli
sub
scas
in
das
clc
fadd
fld
cmpl
xor
sub
and
xchg
sbb
test
fstpl
cmp
gs
movsb
mov
pop
shrb
xchg
jge
or
mov
add
les
and
or
fbld
pusha
fsubs
mov
outsl
shll
fildll
mov
outsb
dec
aas
cmp
jbe
out
xchg
mov
scas
dec
gs
fs
addr16
sahf
fisubl
pop
push
push
jmp
dec
gs
adc
and
cmp
es
je
shll
xor
add
push
xchg
add
xchg
inc
lods
ret
push
jnp
add
enter
mov
sbb
and
arpl
in
xlat
cmp
sub
out
pushf
sbb
mov
push
data16
pop
dec
jb
xchg
push
sbb
cmp
out
cmp
data16
ficomps
fucomi
dec
sbb
push
dec
push
and
fstpt
cld
push
or
pop
addr16
push
addb
aad
cmp
out
and
movsb
xchg
test
call
push
xchg
sub
add
pop
adc
sub
push
push
aad
mov
fwait
or
sub
inc
adc
mov
lret
imul
cmpsl
clc
shld
iret
dec
push
stc
stos
data16
inc
ss
cmp
sub
enter
inc
aad
push
lock
pop
or
lahf
movsb
jb
nop
mov
jo
in
lahf
lret
or
flds
in
ljmp
push
inc
leave
cs
push
out
cmp
xchg
jnp
insb
fistpl
push
outsl
out
mov
ss
ds
ficoml
arpl
cmp
clc
or
push
aaa
pop
arpl
pop
pop
stos
sbb
jae
int
loopne
lods
addr16
in
jmp
mov
lea
mov
popa
cmpsl
sub
jae
pop
or
es
jnp
jg
or
mov
popf
push
hlt
inc
push
aas
push
icebp
pop
pop
addr16
mov
sarb
mov
fucomi
sub
aam
pop
pop
pop
push
stc
cwtl
push
decl
clc
mov
sbb
clc
fildl
jge
push
cmp
sub
push
in
sub
int3
jo
inc
lret
pop
stc
or
out
jbe
cmpsb
rcrl
add
jo
ds
add
insl
fs
push
je
sbb
into
pop
leave
push
pop
push
out
cmpl
sbb
imul
popa
cld
push
fildl
or
lret
add
test
scas
pop
std
ds
jb
mov
cmp
sahf
test
xchg
push
jle
idivb
pushf
jne
mov
sbb
sarl
enter
dec
sbb
sbb
addl
jae
mov
dec
and
push
mov
xchg
adc
into
pop
movsl
or
push
rcll
in
cli
jp,pt
jge
test
push
js
xor
sbb
xchg
or
adc
lcall
pop
inc
mov
outsl
jmp
test
mov
test
cwtl
jno
in
cmpsl
xor
movsb
cmpsl
jae
fiadds
cmpsl
and
rorb
in
mov
insl
es
mov
push
sub
cmp
mov
test
push
iret
xchg
adc
mov
mov
sbb
and
pop
and
mov
out
imul
stos
or
or
dec
gs
pusha
out
dec
lock
jl
mov
cmovno
rorl
fcoms
or
sbb
xchg
push
fnstenv
mov
gs
xchg
and
pop
add
mov
inc
jo
pop
mov
movq
sub
xor
mov
mov
data16
sub
jmp
lahf
dec
pop
fistl
pop
popl
jecxz
adc
rolb
add
pop
xor
jno
sarl
lahf
jecxz
rclb
push
int
pop
xor
or
jae
xchg
je
fs
pop
int3
dec
or
xchg
mov
push
or
mov
clc
cmc
vzeroupper
icebp
mov
mov
add
push
sbb
sub
movb
jg
inc
psrad
mov
addb
inc
fsubl
test
divps
loop
daa
xor
fstp
ret
adc
xchg
ljmp
sahf
shlb
stos
and
xchg
movsl
imul
pop
call
scas
pop
sub
mov
scas
scas
in
adc
cmpsl
or
fisttpl
push
enter
cmp
fcoml
pop
jne
imul
les
sbb
xchg
js
loope
scas
push
movb
sub
lret
fsubrl
jne
mov
ja
dec
or
pop
repnz
fstl
xchg
das
mov
movsb
adc
dec
push
mov
or
fwait
pop
push
push
clc
loope
push
pushf
inc
loop
inc
xchg
popf
rclb
gs
lods
subb
cmp
dec
adc
call
pop
gs
xor
jmp
lods
xchg
or
xchg
pop
add
or
inc
sub
lcall
test
pop
xor
push
pop
mov
or
ljmp
push
cmp
cli
out
jge
gs
out
sbb
sti
inc
out
push
and
int3
loop
fsubrs
sub
fs
stc
jmp
or
gs
scas
daa
aam
pop
xchg
jno
int
and
popf
daa
aam
jmp
lds
movl
adc
in
add
mov
xor
cmpsb
xchg
mov
mov
inc
outsl
test
adc
loop
jne
mov
arpl
pop
inc
or
fdivrs
ficoml
cmp
cmp
jmp
in
jnp
clc
xchg
and
fistpl
scas
cmp
outsl
insl
or
jle
jno
dec
scas
xor
fwait
leave
mov
scas
cmp
fiaddl
lcall
jmp
in
cmpl
pop
gs
lds
xchg
fnstsw
jns
jl
dec
jns
shrl
xchg
mov
jmp
push
ss
fbld
xor
xor
push
stc
int3
xchg
popa
jno
cwtl
ss
push
cmpsb
mov
inc
mov
shll
pop
and
mov
ja
sarb
xchg
lahf
pop
and
or
adc
xchg
add
cld
in
shlb
xor
mov
rcll
rorb
and
jg
out
insb
inc
pop
xchg
jecxz
aas
jmp
rolb
pusha
loopne
imulb
add
sti
sti
scas
cmp
fisttpl
and
in
xor
in
adc
out
push
clc
fs
xchg
incb
or
mov
xchg
ljmp
stc
push
mov
cs
sbb
in
push
xchg
pop
and
mov
imul
mov
aad
pop
xchg
decl
ret
leave
lods
test
movsl
fcoml
in
in
into
sti
sub
out
in
dec
in
jne
bound
cmp
adc
fstps
push
fadds
arpl
or
mov
push
dec
ds
and
jne
fld
popf
cmc
test
cmpsl
xor
enter
adc
test
sar
pop
lods
sbb
adc
scas
pop
adc
jne
f2xm1
xchg
push
fld1
sbb
jg
in
sarb
jg
sub
inc
xchg
or
insb
roll
and
pop
mov
cmp
push
lcall
inc
mov
xchg
in
aas
jl
cmp
fsubs
das
mov
fists
scas
mov
jne
orb
mov
bnd
add
adc
mov
or
mov
fiaddl
inc
js
inc
pop
mov
mov
dec
jns
pushf
xchg
dec
rorl
js
dec
and
mov
pop
inc
fcoml
push
sbb
dec
in
fsubl
loop
mov
mov
cmpsl
pop
pcmpgtd
sbb
ja
enter
inc
shll
pop
mov
in
sub
ja
pop
mov
out
and
xor
call
popa
fstps
daa
xchg
xor
mov
mov
pop
lds
jne
mov
or
dec
mov
lods
fists
fmul
sub
ja
or
add
cmp
cmp
test
scas
movsb
jge
push
dec
jl
sbb
rclb
dec
pop
pop
fmull
outsl
xchg
sbb
pusha
jns
and
dec
xchg
adc
add
cmp
in
mov
cmpsb
inc
sub
inc
addr16
xchg
hlt
jae
or
mov
mov
adc
int3
lock
push
repnz
scas
loopne
inc
jg
dec
or
rcrb
xchg
sub
adc
push
or
xor
dec
jnp
jae
mov
cmp
or
xchg
fs
adc
shlb
ret
adc
pop
fdivs
lds
dec
mov
loope
fdivp
fdivrs
std
in
or
mov
add
nop
cmp
pusha
insb
mov
mov
aaa
in
and
mov
dec
insb
aaa
jle
stc
and
dec
outsl
mov
lahf
test
push
dec
pushf
lods
enter
fcompl
xchg
add
call
cwtl
sbb
lea
sbb
cmp
hlt
out
inc
or
clc
outsl
ficomps
inc
inc
hlt
sub
lds
mov
call
sti
mov
push
or
adc
cltd
stos
sbb
loop
jb
and
pop
sub
leave
cmp
fisttps
aam
cmp
sub
stos
or
dec
cwtl
test
pop
xchg
lcall
gs
mov
fwait
test
outsb
jmp
hlt
push
enter
cmp
imul
pop
sbb
daa
leave
mov
jg
aas
dec
add
leave
add
jecxz
dec
mov
push
sub
pop
xor
dec
stos
xchg
mov
sbb
pop
clc
xchg
adc
lods
adc
mov
int
stos
call
out
fdivs
in
mov
pop
leave
add
fcoms
mov
pop
out
mov
mov
sub
or
cmc
jg
push
lret
std
mov
imull
pop
pop
mov
cmpsl
call
das
daa
mov
adc
aam
arpl
aam
stos
adc
cmp
leave
adc
arpl
lahf
cmp
pop
imul
cmpsb
push
mov
add
pushf
mov
or
call
adc
data16
scas
xor
or
outsb
loopne
mov
jbe
scas
aas
shrb
and
dec
mov
icebp
dec
int3
ljmp
mov
adc
ljmp
and
insb
push
fnstsw
xchg
mov
cwtl
push
jg
xchg
je
leave
test
jmp
int
mov
or
cmc
test
ret
pop
outsl
pop
fnsave
shufps
pop
es
ret
mov
popf
ret
xor
sbb
in
xchg
test
in
xchg
jmp
sub
sbb
or
shufps
fucomp
inc
ret
lret
fdivl
and
aaa
bndldx
push
add
jmp
shrl
mov
inc
jmp
push
js
loop
repz
lods
jl
pop
push
repz
and
xchg
jg
sti
in
aas
inc
add
lock
push
out
arpl
fsubs
in
dec
mov
gs
call
test
push
mov
popa
jp
lcall
in
jne
in
jecxz
imull
and
push
out
shufps
fmuls
std
das
imul
popf
push
stos
iret
adc
rcr
arpl
or
in
jne
out
sub
addr16
fdivr
dec
and
xor
mov
sub
and
lock
mov
psrlw
dec
xchg
imul
or
fwait
ds
jne
popa
mov
adc
into
aam
cmp
in
shlb
gs
rcr
aas
jle
mov
mov
jb
leave
xor
call
cmp
rcll
push
sub
or
jmp
lods
inc
xlat
stos
jl
mov
fcoms
add
jmp
mov
pop
repz
cli
int
pop
sub
push
jmp
adc
divl
xor
xor
popa
arpl
scas
out
mov
sub
fcmovne
add
add
lret
aas
sub
filds
popf
icebp
push
lea
xor
pusha
enter
cmp
mov
xchg
pop
sub
jg
jle
gs
fildl
pop
xor
bound
ret
cmpsl
sub
cmc
js
out
js
or
sbb
outsl
sub
sbb
pop
inc
sub
dec
pop
xchg
add
dec
aaa
outsb
xchg
out
fdivrl
mov
stc
jne
in
xchg
inc
inc
fcoms
xchg
cld
pop
jge
adc
adc
jns
mov
lret
jnp
stc
and
std
ds
insl
stos
mov
daa
pop
push
movsl
cmp
pop
adc
adc
inc
xchg
into
cwtl
paddusw
adc
mov
and
push
jg
sbb
mov
stc
rep
jnp
les
aam
pop
mov
scas
sub
loopne
ds
sub
or
iret
jo
add
jns
fmul
dec
and
adc
jmp
mov
filds
dec
outsl
mov
test
out
push
mov
js
sahf
add
fwait
idivl
outsl
test
out
into
sti
and
push
mov
out
adc
mov
mov
sub
movsb
insl
je,pt
mov
cmp
jmp
mov
mov
pop
out
mov
sbb
jbe
mov
das
jns
popf
leave
push
cld
push
enter
cld
xchg
add
loopne
mov
js
loopne
push
mov
adc
jmp
jle
xor
loopne
cmp
insb
clc
mov
ds
push
and
loop
cmpsb
sub
mov
cltd
cmc
jne
rcll
push
cld
test
sub
repz
test
cmp
faddp
jle
cltd
scas
jo
inc
lret
dec
bound
aad
add
clc
mov
dec
arpl
aam
mov
das
cmp
mov
xchg
cmpsb
mov
pop
mov
sub
das
in
pop
int
jl
fucom
clc
jne
pop
incb
inc
cmp
out
sbb
fsubs
xor
outsl
stos
outsl
sbb
mov
aaa
xor
jmp
int
fcomps
mov
xchg
mov
cmpsb
test
lods
adc
iret
sbb
out
sahf
mov
shlb
iret
je
or
add
sahf
sbb
push
rorl
mov
mov
push
cmp
xchg
cmp
jmp
daa
je
dec
fidivrs
pop
mov
adc
arpl
pop
sub
pop
scas
aad
push
iret
xchg
test
jmp
mov
inc
xchg
pop
aad
lds
xchg
adc
mov
filds
jmp
shr
pop
cmpsl
add
push
mov
arpl
rcrl
jns
dec
pop
pop
sbb
int3
popa
ss
andl
dec
mov
push
icebp
jle
mov
cmpsb
pop
fbld
pop
incb
sub
clc
xchg
aaa
mov
or
roll
pop
movsl
cmc
imul
sti
cwtl
gs
test
pop
and
inc
push
repnz
cmpsb
mov
jmp
dec
loop
dec
lds
push
xor
mov
mov
or
pop
mov
call
dec
sbb
lds
dec
cmp
in
and
pop
adc
and
cltd
push
xchg
pop
iret
cmp
in
pop
add
incb
aaa
xchg
sub
shlb
and
es
das
fwait
stc
aaa
or
push
test
dec
mov
das
lret
xchg
push
push
mov
imul
daa
pop
sub
rorb
mov
dec
ret
jb
mov
loopne
jbe
jbe
das
sub
mov
arpl
cmpsl
neg
push
lret
xchg
cmp
call
negb
and
pop
sahf
mov
xchg
xchg
cli
adc
sbb
adc
bound
imul
lods
push
lret
outsl
adc
fistpl
add
jmp
movsb
or
rol
aas
scas
mov
movsl
into
sar
pop
jo
push
pop
xchg
sub
mov
cmpxchg8b
cs
out
dec
ret
dec
xchg
or
scas
int
imul
ret
fisttps
fmul
fcmovu
xchg
aaa
push
icebp
movsb
mov
add
adc
jl
lret
test
jmp
cld
inc
into
mov
cmp
stos
fistpll
or
fnstcw
jb
cmpb
idiv
sub
lods
pop
out
or
shll
sbb
xor
jmp
dec
rcrl
test
int
mov
mov
je
data16
cmp
dec
fcoml
push
xor
sub
push
pop
sbb
lahf
cmp
loop
daa
pop
and
scas
sarb
mov
or
pop
mov
nop
aas
jnp
pop
aaa
lret
mov
xor
fdivs
icebp
inc
push
mov
push
pop
cmpsb
bound
sub
mov
mov
arpl
pop
xor
add
mov
pop
add
ret
sbb
mov
fisubrl
mov
xor
lret
js
add
scas
dec
sbb
sub
fistpl
jae
cmp
mov
lret
jecxz
lret
cmc
jp
push
stos
filds
in
push
cmp
jp
cmp
cltd
dec
movsl
cwtl
sub
mov
stos
add
outsl
out
jp
or
mov
jae
adc
movsb
fdivr
xor
mov
pop
mov
je
xor
mov
add
arpl
push
inc
sub
mov
and
cmp
mov
and
cmp
pop
clc
stos
fcmovu
push
paddusw
mov
dec
enter
and
scas
push
inc
mov
mov
pop
push
push
mov
in
outsb
pop
imul
arpl
in
mov
and
mov
pop
or
xchg
in
cs
push
sbb
jbe
leave
push
jbe
rol
mov
gs
mov
ret
push
pop
mov
mov
lea
mov
xor
lret
shlb
lods
and
jp
add
pop
inc
dec
outsl
pop
movzwl
adc
dec
push
out
mov
fists
pop
xchg
cmp
or
cmp
jne
xchg
dec
and
imul
test
adc
cwtl
cli
nop
outsl
stos
shlb
sbbl
into
rcl
and
add
dec
cwtl
jecxz
pcmpeqd
mov
push
test
cs
in
mov
fistpl
js
fsubr
jmp
and
xchg
mov
sub
stc
out
xchg
jae
ret
fadd
movsl
movsb
adc
aad
or
mov
movsb
stos
data16
mov
jecxz
gs
ds
lret
xor
mov
or
out
push
xchg
divb
outsl
sti
fdivs
cwtl
cli
fisttps
stc
sbb
inc
sub
mov
adc
daa
mov
add
inc
cwtl
sbb
pop
inc
les
jns
movntq
je
stos
dec
xchg
adc
jne
call
pop
sbb
rcr
dec
push
out
cli
jp
mov
pop
enter
aas
cmpl
and
pushl
ficoml
pop
jecxz
cmc
jbe
or
cli
inc
jecxz
jmp
and
stc
rcrb
jle
vphsubwd
cmp
lea
jbe
test
jo
leave
xchg
cwtl
ds
rclb
xchg
inc
pop
cmp
das
pop
cmpl
enter
gs
add
push
jg
inc
mov
mov
in
sub
jge
cmpsb
aaa
movsb
lret
cmpsl
push
push
pmulhw
add
jne
pop
sbb
xchg
arpl
dec
inc
loope
jne
sub
es
je
scas
or
xchg
sub
rcr
sub
mov
inc
popf
imul
aaa
jb
leave
adc
xchg
decb
fsubrl
test
dec
and
cmp
mov
xor
outsl
into
fs
mov
mov
pop
and
bound
mov
mov
adc
xchg
adc
push
fdivl
jne
mov
sbb
or
popf
popa
inc
in
jle
pop
pop
leave
mov
clc
xchg
es
push
mov
in
and
outsl
mov
ljmp
push
into
hlt
adc
divb
push
ja
fs
loopne
stos
pop
out
insb
mov
es
lods
aas
and
or
arpl
shlb
mov
and
nop
sahf
sbb
outsb
dec
es
pusha
imul
lret
fisubl
mov
add
lock
jmp
and
aaa
pop
push
ficoml
xchg
sti
repz
sbb
mov
stos
out
inc
pop
sub
dec
stc
outsb
je,pn
add
jno
jl
nop
mov
mov
mov
pop
out
xor
out
arpl
fsubl
mov
mov
popa
jo
sub
arpl
mov
fld
dec
lahf
pop
sbb
out
repz
or
dec
sub
std
loop
and
out
sbb
pop
test
scas
rcrb
clc
hlt
push
pop
mov
ja
dec
and
loope
mov
decb
fisubrs
sub
push
out
pop
mov
aad
sbb
repz
cs
out
jne
ret
sbb
std
dec
push
addr16
pop
fcomp
jns
xchg
xor
jmp
xchg
ds
test
out
jo
scas
aas
sub
mov
push
add
mull
mov
jecxz
pop
popa
sbb
out
mov
lods
lock
mov
imul
fld
push
aas
add
mov
adc
add
lret
mov
pop
dec
jno
aas
gs
fsubs
pop
dec
movsb
dec
jne
jle
test
ret
in
push
shl
popa
aaa
arpl
and
lret
pop
cmc
cmpb
or
adc
outsl
mov
lea
xor
enter
xchg
in
fisubs
es
mov
push
cs
arpl
mov
inc
sahf
mov
imul
scas
sub
cmp
out
mov
aam
clc
sub
stos
sahf
cmp
in
fwait
ljmp
outsb
xchg
and
sbb
movsl
das
sar
dec
fildll
jle
lods
call
add
mov
into
sbb
mov
xchg
dec
xchg
xchg
out
sahf
push
sbb
and
push
fptan
sarl
lods
fmul
push
outsl
and
enter
push
clc
aaa
arpl
enter
aaa
stos
shlb
sbb
cmp
ja
jns
mov
mov
jne
sbb
arpl
sub
add
inc
sbb
aas
data16
ljmp
jg
xor
clc
ds
cmpsb
adc
inc
scas
pushf
xchg
sbb
test
mov
out
adcb
in
adcb
add
sbb
sub
fsubs
and
repnz
xor
xchg
hlt
imul
dec
scas
sbbb
lods
pop
mov
popa
add
mov
mov
aas
clc
jno
andb
inc
dec
in
inc
imul
push
arpl
add
cmp
adc
cld
or
add
mov
mov
push
fisubrl
fistpll
cltd
test
cltd
imul
xchg
or
lret
out
popf
sahf
scas
daa
cmpsb
out
ja
sti
mov
mov
inc
fldcw
fmuls
pop
mov
fnstcw
out
xchg
jmp
daa
sbb
jp
xchg
sbb
loopne
push
loope
add
fldenv
imul
loopne
push
pop
jle
fs
sbb
push
incl
sub
push
pop
push
cli
faddl
outsl
gs
ret
das
jae
loopne
lret
fsubl
dec
sbb
jne
loopne
adc
xchg
mov
fistpll
dec
push
shl
imul
jge
push
gs
insb
push
inc
addr16
fstp
outsl
pop
int3
pop
xchg
loop
sub
ljmp
sub
sarb
dec
xchg
je
or
sbb
stc
rcll
sbb
push
mov
clc
nop
xchg
pushf
adc
pushl
nop
push
clc
cli
or
pushf
iret
cli
xchg
pop
pop
push
mov
or
je
mov
stc
push
push
pop
adc
daa
or
jle
pop
xchg
imul
jmp
lds
scas
jne
sub
mov
imul
sub
adc
cmp
sahf
xchg
inc
mov
sar
ja,pn
daa
pop
cmp
test
push
shll
sbb
test
mov
fcoml
mov
jns
add
fsub
rol
neg
scas
mov
mov
popa
js
push
rclb
popf
aas
hlt
ljmp
jnp
mov
iret
or
lahf
mov
mov
das
cmc
push
mov
sub
push
mov
sub
fcmove
push
ds
jne
in
pusha
mov
mov
pop
movsb
imul
imul
push
xchg
xchg
jne
mov
mov
jno
pusha
mov
mov
or
and
pop
pop
adc
pop
mov
xchg
cs
mov
sahf
clc
rorb
xchg
fidivrl
sub
pop
jecxz
sarb
ja
loopne
sub
pop
icebp
cmp
cmp
lea
adc
sarl
pop
in
or
or
data16
xchg
add
pop
cmp
imul
or
jbe
jl
mov
mov
xor
fsubp
xor
test
je
mov
cmpsb
pop
add
push
aaa
shufps
pop
cmpsl
ds
js
fdivrs
cmpsb
sub
stos
mov
sub
ja
es
and
fcomps
lea
daa
and
lahf
imul
dec
jbe
cmp
mov
test
lcall
cmp
pop
jle
sub
sub
jmp
push
sbb
push
sub
les
mov
cmp
imul
jno
push
pmulhuw
sahf
xchg
test
sbb
int3
and
scas
in
pop
imull
mov
repnz
and
pop
or
arpl
sub
lds
pusha
jmp
add
xchg
dec
fadds
ja
or
daa
pop
insb
mov
test
jb
stos
ds
dec
dec
cmp
adc
mov
jnp
push
sti
xchg
push
popa
xchg
push
pop
push
pushf
shll
insb
mov
pop
jmp
mov
cmp
pop
jle
das
loopne
add
mov
pop
xor
call
sbb
out
mov
mov
mov
pop
jmp
mov
push
ja
pop
sub
sbb
adc
call
pop
cwtl
cmc
insb
pushl
stc
ds
lahf
jmp
mov
aas
jmp
ret
sub
fs
add
push
jp
cmc
fadds
fs
mov
xchg
add
adc
mov
xchg
pusha
sub
pushf
jmp
das
lock
arpl
sbb
fmuls
add
repnz
cs
push
jnp
pushf
push
mov
popa
sti
popa
add
push
enter
push
mov
pop
fld
cmp
xchg
hlt
jbe
mov
subb
dec
js
jmp
cs
shll
inc
xor
xchg
gs
pop
dec
push
aaa
out
inc
aaa
cs
cmovno
mov
jnp
mov
mov
pop
adcw
adc
xchg
cmp
xchg
xor
imul
das
push
lahf
cmp
arpl
jne
imul
outsl
sub
insb
jmp
push
xchg
dec
mov
and
outsl
mov
mov
nop
pop
pop
stc
scas
stos
xor
scas
inc
jne
mov
jne
and
cmp
clc
and
mov
adc
arpl
push
fidivl
aaa
mov
stc
and
repz
jo
add
cmp
jge
dec
dec
jo
leave
js
aaa
lds
ss
je
add
push
call
or
fdivr
push
and
lods
mov
push
sbb
xor
cmp
call
out
fdivl
testl
mov
aaa
jne
dec
cmp
push
pop
flds
mov
pop
mov
rcl
pop
dec
add
add
stc
jo
div
dec
jmp
pop
stos
aam
jge
in
jl
in
xchg
stc
mov
jne
daa
ja
fcoml
or
xchg
daa
into
xchg
xchg
mov
mull
xchg
mov
jnp
xor
es
sbb
pop
popa
or
jno
sub
or
mov
or
or
clc
scas
cmp
pop
sbb
fmuls
xchg
pop
ror
ljmp
pop
cmpsb
sbb
jne
jge
pop
fldcw
jne
add
shlb
sub
pop
mov
dec
mov
fcomps
inc
in
arpl
daa
fst
pop
mov
test
jp
pushf
test
test
inc
lahf
imul
outsl
out
sub
aas
pusha
push
sub
clc
cmp
pop
sbb
or
xchg
aas
mov
xor
jne
idivl
push
into
popf
fwait
xchg
add
cmp
pushf
sub
push
int
clc
cltd
mov
ljmp
fwait
aad
nop
fwait
nop
sbb
lret
fcmovu
push
fisttpl
fsubrl
mov
pusha
rorl
push
ret
lret
xchg
cmpsl
jg
inc
icebp
or
pop
jnp
ror
mov
lds
out
cmp
jecxz
mov
pop
cs
mov
sbb
mov
mov
and
lods
add
lcall
cmp
and
inc
sahf
pop
testl
mov
add
dec
adcl
das
jp
leave
push
push
mov
mov
lcall
sbb
jge
cmp
push
sbb
fsubr
xor
mov
xor
inc
bound
pushf
ja
jmp
mov
mov
ficoml
sub
pop
das
adc
jnp
subb
or
adc
icebp
mov
std
sub
jbe
sbb
iret
clc
cmp
and
or
or
sbb
popf
scas
cmp
push
cld
pop
pop
push
sarl
insb
loopne
lea
cmovno
std
mov
lods
stc
scas
mov
movsb
add
rcrl
cmp
andl
sbb
sub
in
popa
mov
fs
test
and
lss
jns
jb
movsl
leave
inc
daa
mov
aaa
cmp
cld
int3
jle
adc
ja
pusha
pop
scas
or
mov
sti
sbb
jg
inc
inc
stos
cld
gs
and
ret
int3
cmpsl
lock
ds
mov
std
jecxz
jne
sbb
pop
imul
in
pop
ds
in
je
mov
fwait
jne
and
sbb
push
popa
cs
push
and
adc
push
push
sub
sbb
mov
cld
imull
clc
mov
ljmp
pop
mov
pop
aas
inc
sbb
push
cmovge
fbstp
jg
xchg
add
movsw
dec
pusha
and
pushl
mov
std
jo
sti
xor
mov
cld
mov
in
aas
call
dec
inc
and
push
and
in
movsl
mov
mov
adc
jbe
test
aaa
daa
push
cld
rcll
jae
or
xor
nop
sbb
movsb
sbb
cmp
bswap
jmp
aaa
adc
loopne
xor
stc
mov
pushf
jmp
cs
cmp
add
cs
imul
popa
dec
and
pop
jg
pop
cmp
sub
sarl
adc
sarl
daa
pop
push
cmpsl
and
and
clc
outsl
xchg
pushf
ja
inc
in
and
out
jbe
test
sbb
inc
and
push
push
adc
aaa
jno
js
out
mov
pop
xlat
outsl
add
lea
scas
in
es
pop
dec
lods
pop
test
inc
xchg
mov
push
sbb
and
add
or
hlt
test
fcompl
sub
insl
adc
mov
or
rolb
mov
adc
dec
mov
scas
xchg
or
xchg
sahf
or
jg
fmul
das
xor
movsb
and
sub
aas
repnz
cmpsl
mov
movsl
shll
fisttpl
shr
cmp
mov
pop
dec
sub
cmp
jbe
xchg
and
add
dec
sub
cmc
jno
mov
push
imul
jecxz
pop
dec
jno
sub
dec
lcall
cmp
jg
pop
jns
dec
call
add
mov
push
pop
stos
movsl
gs
stos
jmp
mov
repnz
out
fsubs
push
sub
dec
into
push
pop
jb
push
pop
stos
call
xchg
std
lods
cmp
repnz
pushf
call
in
rorl
outsb
fidivl
pop
cmp
call
idivb
cmp
sub
in
mov
dec
jnp
sub
push
ja
jae
xchg
push
in
aaa
mov
dec
cs
fbstp
outsl
xor
pop
mov
xor
jg
lods
mov
fdivrs
cmp
addr16
push
aam
jo
jnp
sbb
lea
jle
fstpl
xchg
mov
outsl
cs
cmp
cmpsb
rcrl
xor
push
loope
jne
sub
inc
cs
adc
imul
xchg
pop
dec
movsl
aam
scas
push
clc
bound
xchg
mov
and
inc
mov
xchg
in
ja
repnz
aas
jno
jmp
adc
and
outsl
jg
mov
or
push
ljmp
xchg
pop
fucomi
test
arpl
aaa
pop
pop
mov
scas
pop
mov
sub
leave
std
in
xchg
lock
mov
cmpsb
mov
jge
add
sti
dec
aas
loopne
mov
mov
and
adc
lret
rcrb
arpl
out
ljmp
mov
xchg
pusha
outsl
fwait
jo
mov
mov
mov
sub
aam
pop
pop
cmp
cmp
mov
dec
out
xchg
xchg
dec
in
outsl
ja
outsb
pop
cwtl
sbb
xlat
ret
arpl
lds
cmp
mov
xor
jnp
xchg
mov
cmp
fcmovnb
mull
enter
dec
fmulp
xchg
add
xor
sbb
loopne
cmp
addr16
jb
fisttpl
mov
ss
sbb
mulb
test
mov
sbb
cltd
lret
out
mov
out
ficoml
das
mov
add
bound
add
adc
leave
pop
push
dec
fstps
mov
xchg
loope
xchg
sbb
xchg
inc
cmp
je
adc
int3
jl
scas
loop
popf
cs
std
cs
mov
fwait
into
call
enter
xchg
call
lret
pop
sbb
gs
cmp
pop
jb
or
inc
and
add
out
pop
jne
pop
sbb
ret
loopne
scas
bound
cmp
rorl
cmpsl
inc
mov
xor
or
jo
sti
cmp
push
push
in
push
stc
xchg
mov
sbb
jmp
mov
mov
jnp
add
int3
pop
add
arpl
sbb
fnstenv
stc
jg
pop
ret
mov
bound
loope
ja
pop
call
outsl
inc
mov
or
adc
mov
sbb
out
gs
neg
cmp
sbb
sbb
mov
pop
cmc
sahf
leave
mov
jmp
add
scas
sbb
mov
sub
enter
fsub
adc
sub
aad
pop
mov
pop
fsts
pusha
push
add
aad
mov
mov
inc
das
imul
push
adc
scas
pop
ljmp
xchg
rclb
and
mov
add
cli
pop
out
or
xchg
push
sub
sub
mov
mov
leave
mov
pop
cmp
push
dec
hlt
in
sbb
dec
pop
stc
push
leave
xor
shr
filds
xor
das
inc
call
jg
les
movsb
mov
fsubrs
xor
xor
sub
inc
inc
cmp
call
mov
cmovae
dec
cmp
or
stc
leave
pop
pop
push
jne
dec
push
xrelease
lock
out
scas
out
aam
das
div
mov
gs
into
push
nop
sti
fwait
cmp
sub
orl
push
sbb
push
add
and
aaa
push
sahf
or
and
pop
inc
jne
mov
stc
out
cs
dec
sti
scas
push
lahf
aaa
cmp
loope
outsl
mov
out
sub
inc
add
shlb
push
daa
and
mov
or
sub
sbb
loopne
cmpsb
adc
test
rcrb
cltd
xchg
inc
cmp
mov
ds
shll
push
sub
adc
pop
inc
scas
push
in
lahf
push
or
jg
insl
lret
cmp
pop
jno
in
mov
sbb
aad
movsl
sub
lahf
mov
sub
lods
fwait
xor
inc
pop
imul
xchg
repz
jecxz
loop
inc
int3
data16
sbb
cmp
in
hlt
ret
mov
xchg
sbb
jecxz
mov
pop
sub
wbinvd
cmc
jbe
jmp
adc
push
ret
cmpsb
mov
adc
pop
pop
movsl
fadds
or
negl
mov
pushf
lahf
insl
xchg
call
aad
dec
vmread
jne
enter
xchg
hlt
stos
jmp
push
stc
shrl
sahf
xor
mov
pop
push
add
mov
inc
dec
pop
das
push
cmp
sub
clc
mov
pop
dec
gs
cmp
data16
mov
mov
out
push
clc
jle
sbb
lea
stc
sbb
jne
lahf
sbb
xchg
add
inc
daa
je
jns
pop
jne
jle
aaa
lods
and
outsb
adc
or
popf
pop
sbb
outsl
cmpl
stos
nop
jg
xchg
mov
call
cmpsb
xor
sub
fdivrs
sbb
jne
pop
ljmp
jns
add
std
out
or
int3
or
enter
cmp
mov
ljmp
scas
push
mov
js
in
sub
stos
jle
in
daa
sub
shl
in
lds
push
pop
cmpsb
jno
cmpsl
gs
push
call
imull
test
push
notl
pop
or
pop
pop
jne
inc
les
add
sbb
mov
pop
and
adc
and
lahf
fucomip
jnp
lock
cmpsl
push
fdivr
pop
add
cmp
sub
push
call
es
fldenv
and
xchg
sahf
sub
cmp
int3
stos
cld
into
xor
loop
sub
lea
jg
mov
jne
mov
fwait
inc
testb
or
mov
cmc
inc
and
xor
repnz
or
adc
leave
bound
arpl
cmp
xor
mov
jge
lcall
inc
fildll
sahf
xor
in
mov
ja
lods
enter
loopne
push
push
pop
push
popa
decl
mov
cld
dec
sbb
in
or
fwait
in
jbe
mov
mov
sub
aad
shrl
lds
mov
leave
mov
aam
aas
sbb
out
outsl
shll
repnz
popa
add
inc
fistl
push
xor
jbe
clc
pop
ret
jmp
jns
and
bound
and
or
fcoms
push
mov
clc
push
test
and
mov
das
jo
out
push
xor
scas
ss
jno
movsb
push
mov
and
int
shrb
mov
and
fs
enter
adc
mov
sarb
test
cmpsb
dec
and
lret
popf
xor
mov
pop
outsl
inc
mov
sub
jbe
stos
adc
or
sub
das
inc
sub
dec
mov
dec
scas
cmpl
jmp
fwait
and
divb
jns
lret
and
insl
das
jmp
das
sub
xor
and
fs
cmpsl
and
xchg
pop
pop
pop
popa
jl
add
insb
fsubrs
or
decl
lea
mov
je
sbb
add
mov
lcall
dec
in
into
xorb
imul
stos
sbb
mov
or
lret
test
imul
scas
or
test
daa
mov
jmp
fldt
loope
and
and
aaa
fbstp
clc
sbb
mov
and
pop
jp
enter
cmpsb
sahf
push
pop
les
outsb
stos
and
sbbl
pop
dec
cmp
or
les
sbb
stc
mov
rolb
adc
push
adc
push
pop
stos
push
pushf
daa
dec
arpl
lret
cmpsb
rcrb
outsb
arpl
lret
pop
aas
outsl
mov
jne
or
ss
sti
cmpsl
aaa
and
mov
jmp
ja
cmp
cmpsb
jne
ret
sub
mov
xchg
pop
xor
stc
fisttpl
out
jnp
or
jne
out
mov
loop
mov
into
mov
cmpsl
lock
pop
pop
xchg
dec
add
fs
arpl
movsb
arpl
rol
ds
dec
gs
lret
adc
jne
dec
xchg
sub
mov
cmp
sarb
pop
ja
test
jne
push
loop
lret
adc
repz
fsubrs
cmp
out
fsubrl
call
jmp
imul
mov
adc
leave
loopne
fdivrl
inc
mov
leave
dec
sbb
sub
int
adc
xchg
pushf
divb
outsl
dec
pop
test
mov
loopne
daa
xchg
sub
sub
test
sub
pop
jbe
or
mov
mov
pushf
pop
xchg
es
mov
scas
or
popa
lea
adc
js
mov
mov
cwtl
gs
aad
add
sbb
clc
dec
adc
mov
push
inc
in
or
pop
insl
movsb
addl
cmp
lahf
sub
pop
fisubl
add
cmp
jmp
bound
mov
mov
icebp
cmpsb
xchg
daa
and
data16
insb
mov
fmull
adc
sub
stc
mov
sarb
mov
mov
and
xchg
add
lcall
daa
or
xchg
and
pop
int3
mov
stos
sbb
in
lret
cld
cmpsb
jle
pop
or
xchg
arpl
nop
outsl
les
inc
xchg
sarb
push
cmp
data16
stos
jg
mov
sbbl
mov
cmpsb
lock
addr16
xchg
or
jmp
inc
leave
add
jne
fwait
sbb
mov
movb
sub
mov
mov
pop
pop
cltd
fistpl
push
jecxz
cmp
sbb
xor
mov
movsbl
push
inc
mov
out
push
mov
mov
fistl
cmp
jne
and
cmp
sbb
jae
mov
sbb
mov
aas
das
push
dec
dec
ds
sub
hlt
dec
pop
movsb
aaa
cwtl
pop
call
cmpsl
cmp
mov
imul
daa
clc
xchg
push
cmpsl
add
push
lea
xchg
shrb
mov
or
jmp
das
sub
xchg
clc
jge
push
xchg
fisubl
insl
sub
into
sti
lods
sti
bound
aas
js
push
into
iret
es
sub
pop
push
or
aad
inc
aad
cmp
add
fstps
inc
scas
in
sub
call
mov
xchg
orb
insl
jl
dec
mov
lea
pop
jmp
jge
xchg
test
test
push
std
ds
daa
addr16
adc
pop
pop
bound
jp
pushf
jmp
mov
lods
lret
pop
fstl
adc
gs
sub
repnz
and
push
fcomi
test
xchg
sub
pop
or
and
lret
stc
daa
xor
in
jge
cmc
or
sub
out
sbb
clc
dec
cmpsb
movsb
addr16
jne
push
push
int
cld
dec
jmp
pop
jg
jne
cmp
js
out
in
cmp
push
and
fsubs
lahf
jne
out
enter
popf
or
cwtl
pextrw
pop
daa
mov
incl
xchg
xlat
sbb
cmpsl
pop
inc
cmp
jns
sbb
loopne
mov
je
lock
mov
pop
xor
mov
fnclex
add
inc
pop
hlt
ret
push
jns
pop
pop
out
jbe
xor
es
mov
call
and
jecxz
scas
hlt
adc
ret
clc
js
xchg
gs
push
push
sbbl
jns
aaa
inc
gs
xchg
push
push
push
lret
xlat
pop
pop
daa
outsl
pop
push
jnp
movsl
ja
out
add
cmc
icebp
ud1
jmp
pop
loopne
xor
mov
outsl
jb
rcrl
cmp
xor
cs
stc
and
jmp
xlat
repz
pmulhw
scas
sbb
ss
xor
cmp
or
inc
push
jg
pop
fdivrl
pop
cmp
xor
ficomps
sbb
xchg
rol
jno
cmc
sbb
add
cmp
jg
pop
xchg
jmp
ja
mov
aas
xor
push
fldenv
push
lret
stc
jmp
lock
mov
and
or
pop
inc
push
enter
out
fbstp
push
test
pop
jae
sbb
inc
jle
jo
aaa
jmp
test
sahf
mov
jg
pop
mov
js
push
daa
push
fcoms
xchg
cs
dec
pop
inc
fidivs
xchg
fistps
cs
cmp
fadds
mov
ss
fldcw
mov
inc
enter
sbb
cmpsb
cld
add
rol
shl
sbb
jg
fnstcw
pop
pop
imul
cwtl
lcall
test
sti
cmp
mov
sbb
xchg
pop
pop
jno
fistpl
out
inc
std
idivl
lahf
or
pop
stos
lret
jne
outsl
test
gs
lahf
push
pop
fildll
pop
dec
push
mov
pop
mov
xchg
or
dec
fcompl
lahf
sub
jb
mov
fcmovbe
fs
scas
cwtl
cld
enter
sbb
repz
add
jg
daa
push
lret
arpl
sub
insb
aaa
or
call
fists
xor
clc
ss
pop
popf
repz
adc
push
fs
pop
stos
ret
pop
fcoml
repnz
xor
cmpsb
mov
icebp
cmpsl
cmpb
call
cmpsl
gs
inc
pop
movsl
or
sbb
jno
scas
sbb
scas
sub
pop
fisttpll
aaa
cs
icebp
movsl
sti
pop
das
js
adc
dec
and
push
pop
cmp
test
shrl
mov
jp
stc
ja
cmc
lcall
movsb
mov
and
sahf
icebp
adc
cs
fwait
in
cmpl
adc
pop
fdivs
ljmp
mov
xchg
inc
es
lcall
mov
mov
arpl
insl
mov
mov
pusha
fisttps
cmpsb
xchg
pop
stc
lret
icebp
push
dec
std
stc
icebp
fiadds
gs
lcall
push
out
cmp
jmp
mov
jmp
push
sti
xchg
icebp
xchg
imul
mov
movsb
or
pop
mov
sub
ret
lods
aaa
xchg
gs
xor
es
push
out
rcl
jnp
sub
ljmp
and
lahf
negb
in
dec
or
fwait
lods
cmp
push
add
sub
xchg
ja
or
in
fsts
outsl
stos
loopne
in
test
jns
or
jmp
ja
pushf
call
out
mov
jns
inc
dec
sub
push
inc
mov
out
out
fsts
fldlg2
adc
sub
and
arpl
enter
int3
add
lds
outsb
out
out
pop
mov
in
xlat
adc
js,pt
or
and
push
pop
push
ficomps
cmpsl
dec
pop
fsts
push
adc
fld
addr16
icebp
sbb
xor
inc
xchg
mov
mov
jo
mov
xchg
xor
mov
dec
repnz
gs
cli
cltd
out
pop
in
insb
push
bound
push
pop
call
adc
out
adc
aaa
fcompl
idivb
int3
loopne
insb
adc
in
cmpsl
fidivl
orb
push
test
cmp
data16
sbb
push
aad
repz
pop
jo
xchg
hlt
pop
mov
hlt
cmp
push
or
push
repnz
push
out
inc
jge
pop
repz
pop
sbb
js
int
inc
mov
or
scas
push
sbb
add
testl
mov
xor
xor
or
out
movsl
jmp
pop
test
fistps
pop
cs
push
das
add
insb
test
mov
push
aas
sub
inc
pop
es
push
fmulp
inc
insb
daa
xchg
pop
int3
das
test
xchg
aad
test
cmp
clc
jbe
xor
nop
sbb
hlt
int3
and
mull
test
fs
orl
clc
jg
pop
pop
xor
lahf
fistpll
mov
inc
fucomi
sti
cltd
jbe
or
pmulhuw
popf
sbb
fildl
mov
mov
cmp
mov
mov
int
or
out
test
ret
xchg
xchg
js
arpl
mov
or
in
fimuls
decl
int
fwait
push
add
insb
andb
shl
ja
xchg
mov
stc
test
pop
clc
inc
sarb
sbb
mov
lahf
pop
into
pop
cltd
sbb
pusha
ja
add
ret
cmpsl
inc
push
dec
mov
jecxz
mov
fstpt
mov
ret
add
sbb
mov
ljmp
xor
lret
testl
cmc
loopne
mov
jge
or
js
dec
pop
repz
icebp
sbb
arpl
shl
adc
test
outsl
dec
inc
fidivs
sub
cmpsl
pusha
mov
dec
repnz
lcall
cmpsb
xchg
daa
loop
or
sbb
add
jne
xor
sbb
xor
cmp
and
cmpsl
lods
scas
jmp
jmp
mov
mov
cmp
xchg
daa
cld
xor
aas
pop
mov
popa
iret
stos
bound
push
push
sbb
aaa
xchg
xor
setae
mov
aas
inc
repz
sub
cmp
repz
or
addb
push
leave
pop
frstor
sti
mov
add
mov
hlt
xchg
ret
loopne
fwait
sbb
pop
or
inc
add
sub
das
loopne
arpl
fstps
mov
shr
xchg
push
jge
mov
jmp
fstps
fs
loopne
decl
es
cwtl
pop
cmp
sub
pop
fsubrs
pop
cltd
add
pop
je
nop
daa
movaps
or
pop
push
loop
adc
repz
mov
pop
cld
pop
push
adc
pop
sub
mov
pop
arpl
sbb
or
add
xchg
test
aam
movsl
jo
mov
push
aas
push
leave
cli
jge
pop
sub
call
loope
insl
loope
xchg
leave
mov
pop
and
or
stos
mov
cltd
mov
lret
or
ja
jp
shr
iret
ljmp
push
jmp
lcall
data16
out
ds
imul
hlt
rorb
lret
ss
in
fldt
and
fiadds
shlb
push
in
inc
aam
dec
sbb
pop
or
outsl
das
and
lock
cmp
xchg
ror
sub
dec
fwait
sub
jecxz
outsl
mov
xchg
or
xor
aaa
jmp
movsl
add
pop
xor
pop
cmp
cmpsb
cmp
lea
out
outsb
cmc
clc
pop
mov
or
clc
pop
sbb
jecxz
subl
sbb
cwtl
jg
movsl
sub
pop
xchg
add
sbb
lock
sahf
jno
cltd
dec
ja
loopne
lock
jns
ja
cmp
scas
and
cmc
pop
jmp
scas
das
rorl
in
sub
stos
mov
mov
or
je
xor
push
mov
inc
cld
dec
mov
test
movl
orl
push
pop
mov
ficompl
fmuls
sub
cmp
jecxz
add
insl
and
sbbl
xchg
shrl
cmp
xchg
sarb
jecxz
mov
adc
fsqrt
xchg
xchg
and
into
push
dec
das
pop
inc
popa
jg
xchg
sbb
movsb
insb
xchg
and
stos
and
aaa
add
xchg
lds
xchg
add
ja
pusha
out
fbld
lret
pop
push
ds
outsl
sub
arpl
rolb
bound
fwait
jl
call
push
shrl
ja
rorb
add
adc
sbb
or
sbb
mov
ficoml
pop
adc
xchg
aaa
sbb
inc
cld
dec
and
inc
movsl
pop
and
sub
xchg
xchg
sub
gs
cmp
bound
and
das
xchg
fldt
cmpsb
frstor
and
or
pop
sbb
ds
sbb
lock
divl
xchg
pop
push
jmp
push
lcall
cmp
stc
das
add
jmp
adc
add
push
inc
cltd
inc
out
sub
xchg
pop
dec
gs
add
jg
dec
cmp
mov
arpl
and
sub
dec
or
xchg
or
iret
cs
xchg
leave
scas
push
mov
jne
or
scas
inc
out
enter
add
mov
insl
out
add
pop
inc
clc
pop
imul
insl
fsubs
sub
jnp
pop
fadds
jne
mov
and
push
push
dec
mov
loope
movsb
push
repnz
lods
dec
test
mov
into
jmp
cltd
xor
push
jns
sbb
jecxz
add
and
push
pop
clc
xchg
adc
out
mov
sahf
push
xchg
call
fisubrs
push
mov
ja
and
xchg
fs
call
mov
dec
push
ds
cltd
adc
dec
xlat
stos
sub
pop
in
or
add
test
add
ds
sbb
in
cmc
push
mov
lcall
mov
mul
or
out
jbe
pushf
mov
add
or
mov
fcoml
xchg
inc
cmp
insl
cmp
mov
sbb
pop
out
test
mov
inc
xchg
loope
mov
arpl
rcpps
ror
jmp
cmpb
push
and
sbb
fldl2t
stos
cs
aas
pop
adc
mov
fildl
sti
mov
xor
in
negb
js
aaa
aas
les
mov
pop
arpl
cwtl
xor
test
fsubrs
imul
fiaddl
pop
xor
data16
clc
fsubr
jo
push
jo
fidivl
cltd
stos
or
or
sbb
in
out
ret
mov
xor
add
cmp
cld
in
insl
mov
shlb
pop
in
pop
and
jmp
mov
pop
xor
lahf
cmc
and
xor
repz
pop
and
int
jge
mov
mov
outsb
nop
xchg
inc
gs
jo
sub
xor
mov
lock
hlt
jne
inc
pop
jecxz
xor
ja
dec
cmp
aas
inc
fcmovu
push
lods
mov
dec
int3
cmpsl
jo
jnp
cld
sbb
push
or
push
bound
xchg
cwtl
xor
inc
cwtl
pop
test
int3
leave
cwtl
pop
aas
sbb
pop
sub
fstpl
pop
xchg
jo
es
sbb
enter
adcb
or
shl
das
fwait
and
out
pushf
mov
xor
or
jae
inc
fs
mov
addr16
outsb
clc
loopne
arpl
add
pop
xor
lcall
fbld
sub
imul
cmpsb
add
mov
xchg
pop
loope
mov
push
enter
js
fucomi
loopne
inc
cmp
pop
or
mov
push
mull
adc
fsubr
jbe
vandnps
icebp
inc
and
addr16
out
orb
and
jnp
dec
cmp
cmp
stos
cli
sti
fistpl
pop
lcallw
shll
ror
dec
pusha
sub
add
inc
cs
in
cmp
cmp
jnp
in
fisubrl
test
push
lret
sbb
add
or
fwait
jge
and
outsb
dec
xchg
repnz
xchg
ja
fwait
iret
daa
insb
dec
pop
lock
pop
sub
out
fcomp
es
test
ds
cmpsl
js
cld
push
pop
ljmp
pop
pop
mov
gs
call
pop
dec
sbb
fwait
enter
fsubs
into
scas
cmpb
fs
jmp
shl
rorb
shll
ficoms
iret
jne
es
insl
gs
loopne
cmc
pop
adcb
sti
out
test
cwtl
gs
adc
jp
stc
scas
das
fs
loope
out
push
ret
add
scas
imul
sbb
pop
mov
and
push
cmp
rcrb
dec
inc
push
pop
out
inc
pop
jmp
loope
jg
adc
fdivs
fidivl
sub
rclb
lods
mov
sub
mov
in
lcall
jecxz
mov
inc
add
mov
stos
mov
xor
loop
popa
fmull
fmulp
punpckhwd
fildll
sbb
dec
cltd
mov
cmovae
push
in
xchg
fidivs
jbe
ret
push
dec
dec
cs
fstp
jge
jne
arpl
xchg
and
ja
dec
aaa
imul
xor
icebp
sbb
out
and
inc
sub
jl
inc
mov
inc
dec
mov
dec
mov
sub
das
cmpsl
je
icebp
lock
loope
mov
add
dec
add
cmp
fstl
adc
inc
fsubr
pavgw
int
or
addr16
pop
sbb
data16
xchg
aam
push
push
add
xchg
xchg
jno
jno
aaa
adc
testl
pop
in
addr16
stos
imul
or
in
pop
jge
push
insb
lcall
pop
dec
popa
out
and
or
fisubs
fbld
push
shll
cltd
xor
dec
mov
fsub
movsb
popa
fadds
xchg
inc
nop
mov
movsl
mov
out
sbb
push
pop
es
adcl
mov
cmp
sbb
clc
and
sbb
int
lahf
hlt
lea
inc
fnstcw
push
inc
mov
pop
push
mov
js
mov
btc
sbb
divl
sub
push
loope
cmp
sbb
out
inc
lret
push
or
cmp
mov
lea
cmp
daa
xchg
ds
arpl
sub
sbb
jge
cld
mov
xchg
aam
pop
ja
and
addr16
insl
imul
shlb
pop
loope
cmp
fdivrs
cmp
repnz
les
outsl
cs
mov
pop
push
sbb
clc
cmp
mov
pop
scas
push
sub
hlt
cmp
or
fadds
mov
fiaddl
incl
push
int3
or
dec
lods
fadds
xchg
and
gs
lret
mov
ret
arpl
cli
mov
pop
add
cmpl
jne
xor
lods
gs
cmp
cmp
add
pop
sbb
mov
sbb
add
pop
sub
pop
sub
rorb
in
cmp
jg
jne
cld
fwait
sbb
lods
push
push
dec
push
or
loopne
fistpl
push
cli
pop
das
cmp
lods
fiadds
fldenv
js
ret
lods
sub
xchg
loope
pop
fstps
push
sbb
xchg
aas
addl
setnp
in
jo
enter
sti
fmuls
xchg
sti
pop
das
adc
mov
mov
pop
dec
cmpsl
cltd
notb
sar
cmp
lods
fsubrs
inc
out
insb
bound
pop
mov
hlt
xor
push
jo
and
pop
scas
in
mov
hlt
pop
scas
jmp
mov
jae
out
cmp
push
xchg
mov
xchg
or
movsl
lahf
fcomps
addr16
data16
push
cltd
movsb
js
data16
or
call
adc
pop
mov
fstl
movsl
js
mov
addr16
call
bound
or
inc
stc
mov
or
lods
lcall
in
fsubs
mov
sub
or
adcl
test
xchg
sub
sbbb
pushf
or
jmp
roll
test
sub
ja
test
dec
dec
dec
sub
inc
ja
mov
push
cmp
sbb
push
dec
pop
adc
push
cmp
pop
fdivrl
int3
jmp
fnstenv
and
or
fcoml
pop
fstps
dec
repnz
xchg
jg
ja
aaa
jmp
cmp
into
mov
bound
xchg
push
sar
jno
jge
pop
je
sub
mov
push
call
or
xor
mov
movsl
in
sub
mov
inc
mov
pop
fcoms
loopne
mov
or
jp
xchg
xor
or
insb
xchg
jae
mov
jne
shll
fisttps
pop
fisttpll
je
or
xchg
jns
mov
insl
in
or
cs
cmpsb
pop
mull
lcall
pop
or
inc
cld
lret
leave
pop
js
pop
andl
in
pop
adc
lds
cmp
jo
sbb
jmp
dec
jae
lcall
pop
lods
xrelease
mov
icebp
mov
jo
movsb
push
or
mov
test
xorb
push
cmpsl
jne
xchg
sbb
xor
pop
dec
jge
lods
and
cmp
shr
inc
cmp
les
roll
push
mov
mov
xchg
cmpsb
imul
push
pop
sahf
jae
mov
pop
push
loop
mov
stc
pop
or
fiaddl
daa
dec
push
cs
jnp
in
ret
pop
aas
imul
sub
fildll
add
cltd
cli
inc
pop
call
vfmsubadd213ps
sub
xchg
sbb
flds
cmp
in
xchg
rolb
sub
jg
test
pop
xchg
faddl
sub
dec
cs
push
xchg
xorl
fsubl
pop
dec
fimull
jae
mov
cmpsl
pop
arpl
mov
out
fsubr
sar
sbb
sbb
in
insl
jnp
push
call
hlt
outsl
pop
lcall
test
mov
mov
into
mov
pop
ficomps
mov
fstps
ja
leave
dec
gs
popf
push
or
roll
push
sahf
addl
xchg
mov
mov
push
mov
repz
pop
out
mov
inc
add
imul
sbbl
jb
mov
test
fcmovnbe
sti
push
dec
xchg
xor
pop
out
sbb
insb
aaa
jp
cmp
cmp
cmp
ja
pop
xor
and
mov
xor
cmpsl
xor
or
push
add
xchg
insb
mov
not
pop
mov
data16
cmpsb
ja
arpl
ret
cmpsl
pushf
pop
cmp
add
pusha
mov
and
sbb
lds
mov
mov
popa
sbb
nop
xor
fistpl
mov
xor
push
sbb
jnp
repz
icebp
pop
jns
push
or
ret
sbb
inc
out
xor
shll
in
inc
inc
leave
sub
dec
xchg
xchg
add
sbb
das
gs
jmp
xchg
jne
andl
in
xchg
rcl
push
movsl
cltd
dec
daa
fbld
movsl
cld
decl
fldln2
shrb
jae
add
sbb
pop
push
test
push
pop
ret
mov
fdivr
das
xor
push
jns
jbe
mov
clc
fwait
jp
adc
jb
out
or
sub
push
mov
or
sub
repz
jge
fcompl
cmp
cmp
xor
dec
ljmp
in
loopne
scas
xor
sub
call
mov
outsl
outsl
scas
cmp
lahf
arpl
xor
call
fsubrl
movsb
testl
mov
jmp
fcoml
cmp
sbb
xchg
mov
fs
pop
nop
stos
pusha
xchg
cmpsl
mov
push
pop
icebp
imul
mov
fldt
xchg
push
lods
and
dec
pop
mov
jbe
jecxz
sbb
or
dec
jns
adc
xor
cwtl
rolb
lods
jbe
add
out
imul
push
jl
sar
sbb
leave
jp
imul
movsb
lds
sbb
daa
and
sbbb
ljmp
sub
sbb
cld
pop
xor
mov
mov
in
gs
and
inc
sbb
mov
xor
das
mov
out
push
das
add
call
push
scas
fld
xchg
dec
ret
nop
pop
push
test
jge
mov
mov
into
outsb
cmpsl
lea
sbb
jmp
cmpsl
ficompl
std
lret
in
repz
sbb
lcall
fcmovnb
cli
add
adc
lret
cs
inc
pop
inc
fisttps
lcall
xchg
push
cmp
cmp
pop
push
push
pop
out
outsb
push
jnp
xchg
andb
lods
aaa
mov
adc
cli
pop
pop
add
pop
inc
sbb
lock
jle
pop
push
dec
sub
movl
jecxz
jns
daa
adc
pop
repz
notb
out
xorl
adc
scas
add
iret
insb
inc
pop
mov
int
icebp
add
cmc
add
pop
scas
sahf
mov
mov
loopne
cmp
push
pop
push
xlat
aaa
imul
cmp
push
pop
sar
adc
outsl
mov
xchg
pop
gs
out
cmp
pop
sahf
fs
ret
cltd
push
or
cmp
sti
outsl
stos
mov
adc
test
mov
stos
push
fdivl
cwtl
xchg
mov
jge
pop
andl
cltd
call
bound
imul
push
arpl
mov
popa
adc
test
and
cmc
stos
jns
sti
xchg
sahf
arpl
fwait
pop
xor
das
mov
or
xor
das
ret
jne
cmp
pop
les
mov
outsl
sti
sahf
push
das
js
std
fcoml
dec
imul
andl
pop
jmp
pop
movsb
test
test
sbb
cs
jae
add
mov
mov
jg
lret
gs
adc
mov
jae
add
cmp
and
inc
lret
into
lret
xchg
negl
aam
loop
fsubrs
xor
push
mov
pop
jne
popa
xor
pop
pop
sbb
fcomp
jbe
jge
addr16
push
xchg
scas
cmp
jmp
mov
arpl
jb
jo
lcall
inc
inc
push
rorl
popf
jnp
sbb
pop
mov
sti
jle
aaa
bound
mov
fiadds
in
adc
fwait
cmp
sbb
mov
mov
lods
sub
and
adc
sbb
pusha
mov
outsb
jmp
lock
imul
ljmp
adc
mov
mov
daa
cwtl
pop
push
mov
insb
push
jbe
test
dec
lahf
sub
pop
xchg
addr16
das
xorb
xchg
sar
gs
mov
aas
loopne
lret
imul
stc
or
pop
dec
fistpll
les
inc
adc
lahf
in
gs
stc
outsb
jne
aas
mov
clc
push
mul
jge
push
sub
fcmovbe
ds
mov
push
mov
pop
pop
pop
aaa
out
mov
testl
add
xlat
jb
cmc
sub
das
jg
inc
or
inc
sbb
loope
sub
ds
push
nop
insb
push
pop
addr16
sub
inc
data16
test
int3
dec
cmp
andb
sub
lcall
popf
addl
std
pop
fcomp
prefetch
mov
dec
test
pop
scas
sub
pop
sub
loope
cmpl
fnsave
mov
or
clc
push
movsl
jns
add
mov
les
cmpsl
popf
pop
jns
xchg
cmp
stos
out
pop
jmp
mov
adc
loope
in
clc
sbb
test
ljmp
lods
popf
gs
sahf
fwait
pop
dec
outsl
cmpsb
or
inc
aad
jnp
xchg
ljmp
movsb
jmp
imulb
xchg
xor
stos
das
mov
pop
std
ret
or
cmovne
fcomi
shlb
mov
cltd
xchg
loope
or
outsl
xchg
push
inc
cltd
push
add
scas
sub
jne
fs
pop
cltd
xchg
dec
test
cmp
ja
jne
xchg
clc
jno
and
fsubrs
lret
or
or
repz
cmp
cltd
pop
les
adc
scas
pop
sub
push
inc
xor
inc
mov
sti
aas
sbb
jns
mov
das
imul
sti
repz
mov
add
jne
or
cs
sbb
pop
loopne
idivl
jge
fstpl
gs
push
div
lods
repnz
sahf
mov
lds
or
add
and
jnp
test
repnz
cmpsl
jne
or
jecxz
insb
mov
test
mov
lods
addr16
arpl
xchg
ret
daa
mov
daa
and
decl
icebp
jmp
jge
and
push
cld
jns
mov
pop
jecxz
sub
addr16
push
js
or
fdivs
pop
lods
and
cmp
and
adc
mov
ret
jge
aaa
cld
iret
aaa
mov
pop
push
loopne
push
and
dec
mov
xchg
stos
sbb
jb
mov
stc
scas
jae
out
in
pop
movsl
addr16
insb
cmp
addr16
add
pop
cmp
jbe
stos
sub
mov
dec
js
inc
cwtl
xchg
push
lcall
test
shrl
fmuls
cmp
fdivl
mov
ss
shll
and
or
lret
call
sub
cmp
adc
xchg
lret
daa
cmpl
push
call
sub
arpl
cmp
arpl
sbb
or
mov
cmp
call
pop
icebp
pop
push
call
fsubl
push
adc
das
xchg
xchg
ret
fwait
jle
dec
fsubs
inc
inc
sti
add
mov
sbbb
push
rcr
movsl
push
pop
add
fdivrl
repnz
out
mov
pop
pop
mov
fbstp
flds
mov
cmp
push
outsl
sarb
jbe
pushf
cmp
repz
xchg
data16
xchg
aam
dec
ja
gs
test
setae
inc
push
mov
adc
lret
mov
or
inc
out
aam
sbb
mov
data16
clc
sub
ds
movsl
arpl
insl
unpckhps
cmpsb
dec
movsw
pushf
jle
testb
mov
jmp
testl
popl
and
sbb
es
add
in
cmp
sti
add
fwait
call
fsubrl
mov
lods
js
jmp
mov
lds
sub
and
mov
adc
imul
stos
or
xchg
adc
call
jb
das
in
shrb
push
push
jmp
or
inc
jo
pop
push
add
mov
fs
mov
push
sub
leave
call
sub
mov
ljmp
lds
std
mov
xchg
daa
push
into
lcall
or
xchg
repz
js
mov
cs
dec
pop
imul
addr16
mov
outsl
and
insl
shrl
and
xor
mov
inc
and
mov
shrl
xchg
daa
stos
je
cmp
jno
idivl
jae
sbb
xchg
lret
sbb
or
dec
add
jg
clc
sbb
dec
out
fld
mov
adc
in
outsl
stos
dec
repnz
push
test
inc
ss
dec
fistpl
inc
push
mov
sub
fbstp
jg
push
xchg
paddw
jl
in
testb
cmp
mov
or
mov
in
mov
call
mov
into
leave
or
cltd
pop
aad
lret
fld1
sbbl
jne
data16
mov
pop
cs
mov
cmc
jmp
repz
add
jecxz
fbld
out
outsl
dec
shrb
cmc
addr16
mov
addr16
push
sbb
call
call
dec
aam
cmp
cmpsl
dec
pop
popf
out
negl
das
test
mov
mov
add
xor
sub
fnstenv
xchg
mov
adc
pop
xor
push
nop
jecxz
push
sub
lret
cmpsl
push
test
sub
outsb
or
test
pop
js
and
test
jmp
cmpsb
xlat
leave
and
push
add
outsb
ja
cmpsl
lea
mov
fucomi
lcall
std
mov
cwtl
jle
add
jne
inc
js
mov
fdivs
std
pusha
enter
movsl
sub
cmc
sbb
push
jmp
pop
pop
lock
fdivrl
fcomps
dec
flds
pop
sbb
sub
pop
in
mov
mov
pop
fcompl
inc
mov
aas
mov
sbb
addr16
sub
lods
arpl
lcall
push
daa
cmpsb
sbb
mov
movsl
cmc
mov
clc
and
adc
mov
xchg
cmp
in
leave
jno
cwtl
mov
cmp
les
or
dec
repnz
sbb
add
aas
gs
mov
sti
mov
lea
mov
sbb
add
test
ror
and
popa
stos
divl
out
ljmp
mov
mov
mov
or
cmp
mov
movsbl
cld
in
jmp
test
flds
arpl
lock
ret
outsl
es
outsb
mull
lock
stc
cmpsb
cmp
pusha
dec
mov
pop
mov
sub
rcr
sub
lret
cmp
pop
shr
jge
bound
arpl
adc
push
dec
addr16
mov
add
into
scas
ret
pop
cmpsl
fildll
xchg
sub
dec
ss
mov
bound
or
push
pop
stos
sbb
loopne
jne
jbe
dec
in
outsb
fsub
insb
jp
outsl
daa
sbb
popa
inc
sbb
jnp
pop
cwtl
imul
cs
jg
repz
aad
repz
cld
gs
test
or
shrb
and
out
push
out
or
shl
addl
in
addl
cmc
xlat
andl
les
jne
cmpsl
adc
scas
mov
mov
jg
mov
test
mov
cld
adc
inc
mov
jb
sbb
dec
xchg
addr16
pop
rcl
jb
fwait
cmp
mov
jo
shrb
in
adc
mov
xchg
out
in
push
adc
mov
sbb
iret
cli
leave
xchg
pushf
scas
sub
and
pop
push
xchg
jmp
aaa
pop
loop
sbb
or
pop
imull
test
dec
jecxz
data16
adc
mov
icebp
dec
popf
pop
jp
imul
push
add
shll
cmp
sti
adc
push
sub
daa
jo
and
mov
mulb
das
popf
shrb
fcmovnu
cs
adc
push
xchg
and
cmp
testl
mov
jge
test
xchg
cwtl
push
ja
sub
das
ret
adc
fsubrl
out
cmpsb
insb
jge
lret
push
cmp
popf
shlb
push
dec
mov
push
or
stc
jg
or
dec
or
mov
xor
psllq
gs
fistpll
cwtl
pop
cmp
les
jmp
mov
fwait
in
prefetch
xchg
push
fisttpl
nop
pop
sub
fcmovb
dec
insl
pop
iret
mov
sbb
mov
data16
jp
cmpsb
in
dec
mov
pop
clc
inc
in
pop
dec
sbb
stos
pop
insl
lock
cwtl
into
or
neg
pop
mov
mov
pcmpeqd
pop
inc
fildl
push
test
je
dec
stc
adc
push
aas
js
and
lea
push
pop
clc
dec
aam
les
fldt
repz
jmp
pop
mov
addb
dec
or
into
sahf
out
jbe
dec
gs
and
shr
sub
scas
xor
lret
gs
popf
xor
jnp
sub
lcall
dec
stos
jge
or
xchg
shl
lret
adc
ljmp
xchg
imul
cmp
mov
in
std
pop
aaa
add
jae
dec
push
scas
in
pop
sub
jmp
pop
xchg
jecxz
or
fsubrs
ficompl
fcompl
cltd
jnp,pn
aam
inc
divps
test
sbb
jmp
xchg
mov
inc
push
mov
and
adc
fisubl
push
mov
xor
loop,pt
in
ja
mov
fcompl
data16
dec
push
cli
jecxz
stc
inc
cmp
sbb
inc
pop
push
cmpsb
lods
fcmovnbe
jne
adc
leave
or
loope
xchg
test
push
sbb
xor
xchg
xchg
push
jne
or
cmp
adc
or
push
movsb
mov
lahf
mov
xor
enter
ret
imul
jne
jp
push
adcb
mov
daa
pop
shrl
xchg
fdivr
pop
testl
add
repnz
es
mov
insl
aaa
clc
mov
inc
push
mov
and
js
lods
call
loop
les
out
add
in
outsl
jmp
adc
ljmp
or
lea
jnp
cli
pop
scas
xchg
mov
imul
lret
jnp
pop
fcoml
enter
mov
push
mov
std
testl
fwait
in
out
xor
adc
cmp
fwait
call
add
cs
mov
fiadds
enter
push
das
sub
pop
jne
fwait
pop
mov
xchg
sbb
lcall
sbb
hlt
xchg
dec
repnz
mov
pop
data16
add
cwtl
push
cltd
call
cmp
xlat
and
gs
add
vandpd
aaa
sub
pop
jo
je
pushw
cmc
addr16
call
jecxz
sbb
outsl
push
and
adc
insl
and
popf
loopne
push
imul
out
out
add
mov
mov
fidivrl
sub
or
addr16
in
nop
inc
sub
ret
hlt
es
sub
clc
adc
fs
call
pop
or
test
pop
pop
inc
mov
add
inc
pop
ja
loop
out
xor
sbb
sbb
enter
sub
out
mov
add
pusha
mov
adc
sbb
into
cmp
jmp
loope
sbb
out
leave
xchg
adc
out
cmp
andb
mov
jl
inc
mov
or
mov
in
arpl
in
das
iret
rorl
sub
mov
inc
push
in
sbb
fs
ficomps
dec
adc
pushl
push
jne
pop
add
arpl
cld
aas
push
imul
xchg
jnp
xchg
arpl
jne
imul
xor
or
scas
mov
clc
jmp
test
jecxz
cmp
test
jge
pop
fstl
fcom
testl
jb
aaa
sub
rorl
gs
pop
cmp
movsbl
hlt
loop
mov
dec
dec
push
cmp
sti
mov
fcomps
xor
fidivs
repnz
out
dec
cld
jns
call
xchg
outsb
and
jno
jae
pop
cmpsb
jp
mov
inc
fisubrs
xchg
pop
xchg
cmp
jge
jmp
xlat
jne
mov
or
loopne
shll
pop
sbb
xchg
shll
das
outsl
mov
push
sbb
fisttps
movsb
clc
push
push
cmc
and
xchg
loop
test
rcr
xchg
sti
cmpb
rcll
loopne
inc
sarl
lret
sbb
lcall
add
mov
dec
jo
fisubrl
ds
movsl
js
aam
bound
sti
ljmp
mov
mov
push
xor
das
push
outsl
clc
ss
bound
push
addr16
fwait
adc
adc
mov
hlt
xchg
in
cmpsb
add
add
aas
notl
and
test
mov
cmc
add
out
fimull
test
jge
ja
bound
pusha
scas
pop
fnsave
cmpsl
add
ss
or
shll
stc
and
shll
xchg
pop
push
leave
data16
outsl
faddl
sbb
add
outsl
shlb
stc
pop
lods
aam
adc
cmp
xchg
add
unpckhps
test
or
push
cmp
add
jg
popf
sarb
pop
daa
pop
repz
insl
xchg
clc
cltd
jns
das
pop
fld
je
out
in
cli
inc
add
adc
data16
dec
push
cltd
pop
jle
jnp
scas
mov
or
inc
fidivrl
sbb
rclb
mov
das
pop
sbb
xlat
xor
xchg
out
divl
cmpb
stos
xor
out
xchg
pop
xchg
lods
mov
xchg
js
call
cmp
roll
and
ret
outsb
js
aaa
mov
xchg
push
and
xchg
mov
or
out
mov
fcomp
cmpsb
loop
int
mov
and
ljmp
mov
cmp
mov
and
test
fmuls
fiadds
jnp,pn
dec
inc
jns
mov
add
sbb
in
mov
mov
outsl
mov
cmp
sbb
int3
ja
lcall
jae
push
stc
test
adc
adc
mov
sbb
in
push
xchg
mov
cli
sbb
jae
lret
pop
add
mov
lods
arpl
xchg
mov
insl
out
sub
in
xchg
aad
jo
mov
jo
int
mov
dec
inc
or
ret
pop
arpl
rcrb
pushw
lea
push
les
lret
pop
nop
loop
jne
stos
fbld
push
leave
call
add
into
shll
inc
sub
xchg
adc
data16
or
add
into
loop
aad
dec
mov
out
sbb
pop
lcall
fwait
xchg
cmc
dec
mov
lods
xor
mov
inc
push
cwtl
jge
jg
or
add
xorl
add
xor
adc
stos
sti
add
outsl
lods
gs
push
sarl
jnp
push
pop
xchg
lahf
inc
into
sti
outsb
push
xchg
mov
in
push
pop
sbb
notl
xchg
add
fnstenv
stc
xchg
push
mov
dec
test
dec
cmp
fildll
gs
add
jne
sti
cmpsb
pop
loopne
into
dec
sub
pop
imul
add
mov
inc
sbb
movsb
mov
pcmpgtd
push
adc
sbb
fdivrs
fdivrl
or
out
insb
jge
jp
pop
ljmp
jbe
xor
sub
ret
loopne
daa
pop
pop
stc
andb
mov
out
insl
jne
inc
push
push
xchg
stc
jns
pop
in
sbb
and
pop
btc
out
out
jno
int
sub
icebp
jno
das
dec
fsubl
fbstp
out
pop
mov
mov
mov
push
jbe
leave
fistps
loopne
cmp
dec
cmp
add
mov
sahf
rolb
or
daa
sub
sub
and
add
or
mov
enter
pop
aaa
aas
jne
test
cmp
addb
mov
inc
jp
push
pop
jle
aaa
ds
pop
pop
scas
dec
pop
push
cmp
dec
pop
mov
std
add
mov
push
dec
cmp
or
push
adc
add
pushw
adc
fimull
loop
pop
or
inc
add
ja
test
lods
sbb
xchg
jnp
sbb
mov
adc
xchg
mov
mov
jb
xor
xor
mov
dec
jne
adc
call
test
mov
lea
sbb
js
inc
outsl
popa
jmp
mov
in
js
push
jge
jl
and
in
cmc
push
push
xchg
xchg
mov
push
mov
pop
mov
into
jne
test
inc
movsbl
dec
sub
dec
sbb
insb
adcl
mov
adc
push
xchg
fwait
lods
sub
xchg
push
inc
ja
loopne
leave
fsts
push
dec
add
sbb
cwtl
scas
sub
mov
ds
sub
lret
and
test
aaa
mov
call
sbb
mov
mov
pop
hlt
and
adcl
sub
push
cmpsb
fdivs
xchg
sub
sub
and
lret
xchg
imulb
mov
out
fidivrs
push
lock
mov
lahf
jbe
popa
sub
inc
fistl
inc
and
xchg
mov
mov
mov
mul
jl
pop
fucom
push
xchg
xor
dec
inc
in
iret
mov
xchg
pop
jmp
stos
mov
repnz
pop
scas
fisubl
loop
pop
mov
push
fists
dec
insb
adc
out
or
jge
adc
out
jno
cmp
lock
lods
fiaddl
aas
mov
les
arpl
addr16
jg
adc
scas
cmp
xchg
or
mov
data16
fnstenv
xor
xor
cmp
jp
mov
lahf
jb
jae
dec
scas
push
lahf
sbb
adc
jne
lcall
push
and
sub
shl
jns
addr16
fwait
and
push
lret
adc
ret
jns
stos
or
mov
add
ja
jg
ret
dec
addr16
xchg
dec
in
or
mov
pop
mov
jnp
mov
daa
xchg
xor
test
cli
add
dec
testb
cmp
scas
lods
pushf
sahf
ss
sti
inc
cs
add
adc
fsubr
or
outsl
sub
jle
fcomp
jb
adc
xchg
xchg
lds
mov
in
adc
idiv
jle
xchg
xor
mov
xchg
pop
inc
pop
fimull
jnp
fcoms
add
sbb
ficompl
or
pusha
sbb
pushf
or
xchg
cmp
pop
sub
dec
xchg
stc
dec
mov
and
aam
scas
pop
pop
sti
sbb
shrb
imul
jb
sbb
cltd
and
sarl
in
sub
xchg
movsl
jne
sbb
xor
pop
fs
jmp
scas
xchg
pop
mov
popa
das
push
adc
and
lret
pop
outsl
ja
xchg
mov
sbb
int3
fdivp
cmp
push
push
mov
add
mov
mov
aad
sbb
mov
movsl
scas
jns
and
cld
pop
scas
sbb
ja
lsl
repz
faddl
sahf
enter
das
aam
push
lds
sbb
mov
sar
xor
popa
stc
or
mov
mov
inc
jmp
xor
pop
rcr
mov
movsb
mov
movsl
movsl
push
lods
movsl
or
mov
push
or
push
sub
and
xchg
and
xchg
adc
cmp
les
mov
bound
jo
cltd
lret
fcompl
inc
scas
push
fstpt
xchg
lret
and
sbb
aad
out
fcomps
mov
int3
add
cmp
pop
inc
outsl
sub
mov
mov
cmp
push
inc
push
data16
xchg
bound
cmp
cli
scas
stc
fcmovu
jmp
cmp
and
pop
hlt
cltd
add
xlat
outsl
dec
pop
jne
jmp
mov
out
push
test
clc
testb
js
jne
mov
mov
iret
inc
mov
popa
sub
lds
in
sub
mov
xchg
cs
daa
push
mov
lahf
call
push
mov
pop
das
imul
fisubl
cwtl
test
mov
or
mov
sub
inc
pavgw
mov
or
push
sarb
lods
stc
add
pop
shrl
mov
add
mov
fisubrl
movsl
cmp
pop
lahf
leave
scas
pushf
mov
int
aas
idiv
stos
orb
hlt
lcall
xchg
fs
fldcw
les
mov
mov
jmp
sub
cltd
pusha
cmp
imul
inc
mov
imul
dec
sub
xchg
mov
inc
enter
xor
daa
xchg
loop
and
or
bound
cld
push
sbb
mov
cmpsb
mov
push
ljmp
mov
jnp
mov
movsb
mov
jmp
jle
cltd
dec
test
or
mov
cli
or
mov
movsl
inc
jge
adc
cmc
ret
js
outsb
or
imul
mov
fadds
mov
mov
jae
sub
pop
scas
outsl
sub
mov
inc
std
xchg
fisttpll
outsl
push
mov
stc
mov
nop
and
or
aaa
push
dec
movsl
mov
cwtl
imul
iret
out
int3
aaa
push
stos
movsl
and
in
mov
cmc
loopne
and
sbb
adc
mov
es
xchg
cmp
sub
ficompl
sbb
push
mov
sahf
cld
mov
es
fisubrs
mov
fcomp
out
pop
sbb
mov
mov
nop
fisttps
int
and
sub
stos
xchg
mov
mov
imul
ja
js
jge
insb
add
idivb
aas
mov
cmc
fdivrs
insb
jne
faddl
in
mov
lods
fsubrs
call
pop
addr16
dec
sub
lds
pop
mov
jo
outsl
shlb
mov
arpl
xchg
inc
leave
in
adc
adc
and
pop
mov
push
scas
inc
xchg
in
pop
ds
pop
push
gs
mov
stc
insl
out
mov
ljmp
sbb
or
fstpt
mov
push
out
psllq
jne
jno
or
fsubr
das
mov
popa
add
ss
sub
mov
jge
shll
aaa
lods
cld
idivb
movsl
dec
gs
test
dec
mov
dec
popa
out
add
insl
mov
cmp
lods
push
and
sub
mov
outsl
repnz
cmp
sbb
push
jmp
cmp
decb
stos
and
push
ja
inc
cs
pop
sbb
outsb
mov
pop
cs
jp
cmpsb
shlb
call
sbb
insb
pop
mov
mov
je
js
push
and
les
sbb
fs
add
arpl
addr16
cwtl
mov
hlt
xor
gs
mov
pop
ret
loope
pop
stos
jae
cltd
data16
inc
stos
mov
pop
jo
pop
mov
repnz
mov
cmp
jno
pusha
xchg
lea
filds
cmp
jo
jne
or
imul
and
sub
inc
cwtl
xchg
xor
mov
push
fs
dec
aam
test
mov
bound
cmp
test
fdivl
iret
rorl
out
push
test
in
or
pop
or
dec
sbb
jne
push
cmp
push
pop
xlat
lds
jmp
mov
into
test
mov
decl
add
and
adc
loope
adc
push
xchg
dec
fsubrs
mov
jp
xchg
jle
in
data16
les
jl
fcomi
or
or
push
insl
insb
sbb
dec
cltd
notb
out
pop
bound
fbld
jne
pop
cld
inc
xchg
lcall
cmp
ljmp
aas
pop
or
sbb
in
mov
mov
jp
jl
or
dec
pop
sbb
nop
loopne
jne
pop
sbb
shl
fldt
xchg
negl
or
push
mulb
dec
hlt
call
mov
add
mov
sub
add
es
out
js
gs
jnp
repz
mov
mov
cmp
cmp
enter
push
rolb
or
pushf
sub
jae
add
sub
xchg
fs
mov
fldt
ja
push
push
daa
fsubs
pop
add
sub
xchg
lods
icebp
sub
xor
stos
mov
in
sub
insl
aam
add
pop
ficoms
aam
cmp
imul
push
js
pop
repnz
sbbl
popa
in
mov
out
dec
lret
movsb
in
ret
xor
lret
std
clc
popa
xchg
repz
out
xchg
mov
jg
jne
pop
mov
jecxz
jbe
vmaxpd
pop
adc
mov
or
shl
and
or
imul
pop
push
cmc
sbbb
scas
ret
add
jns
sub
vmptrld
inc
fadds
jne
ljmp
jae
cmp
sbb
loop
cltd
cmc
clc
jno
mov
adc
dec
cmp
sbb
inc
jg
call
fwait
dec
and
jmp
dec
pop
xor
xchg
pop
cmp
pop
jne
leave
pop
adc
fisubrl
dec
popf
push
mov
lcall
pop
inc
sub
push
in
xchg
xor
loopne
pop
int
pushf
cmp
add
jnp
xlat
pop
fimull
add
push
sbb
jbe
xor
hlt
aad
push
out
mov
imul
jae
frndint
outsl
xor
mov
sbb
bound
pop
cmc
mov
xor
jae
ds
stc
jg
mov
adc
mov
sti
add
inc
push
jmp
mov
xchg
dec
ss
sti
call
in
mov
loop
mov
ret
xor
int
or
xchg
push
pop
xchg
js
sub
and
data16
mov
push
movsl
sbbl
es
stc
mov
cwtl
repnz
and
dec
test
push
sub
pop
push
dec
xchg
mov
mov
fcmovnu
aas
and
sahf
push
fistl
pop
aas
pop
sbb
mov
or
jge
xchg
sbb
add
push
leave
sub
adc
pop
mov
xchg
std
into
cmp
xchg
sbb
or
cltd
mov
sbb
pop
shl
xchg
loop
xor
div
cli
inc
cli
sahf
sbb
test
nop
mov
out
push
out
jle
in
loopne
jmp
enter
imul
outsl
pop
cmpb
jne
ja
dec
ss
call
enter
lods
jne
push
xchg
sbb
jmp
jns
out
and
icebp
push
sbb
mov
push
call
jno
push
mov
mov
adc
add
fwait
jns
cmp
fdivrs
stc
sbb
aad
popf
jne
push
mov
push
push
xor
jbe
mov
call
shrb
push
cmc
aaa
push
addr16
stos
addr16
or
sub
jbe,pn
pop
lret
dec
aas
insl
lret
call
dec
int
push
fsubr
fistps
adc
stc
dec
dec
flds
dec
dec
jbe
fmuls
imul
mov
je
jp
pop
jae
cmp
ds
fcoml
and
ljmp
cld
cltd
xchg
call
bt
mov
out
push
pop
mov
jnp
leave
gs
pushf
repnz
mov
pusha
pop
xchg
aam
stc
inc
dec
lock
in
push
mov
enter
add
push
stos
dec
cwtl
xor
notl
mov
jns
mov
data16
mov
cwtl
lods
imul
lods
movsl
push
aaa
mov
out
inc
xchg
cmp
mov
roll
jl
jbe
test
push
mov
push
das
dec
mov
addps
movsb
push
mov
int
push
and
stos
mov
lock
xchg
jl
sub
or
pop
sbbb
lods
mov
lahf
sbb
add
mov
mov
aaa
and
push
loop
cmpsl
xchg
imul
or
nop
pop
inc
sbb
pusha
aam
cmp
sbb
fsub
icebp
cmp
xchg
adc
sbb
clc
gs
inc
cmp
sbb
sbb
insb
fdiv
rol
add
push
mov
es
jne
add
sub
adc
into
xor
aad
loopw
sbb
jne
and
cmp
pop
testl
ficoms
jne
scas
dec
pop
push
cwtl
or
idivl
scas
in
repnz
in
aaa
pop
dec
xchg
xchg
fcmovu
gs
pop
mov
and
pusha
xor
jmp
cmpsb
in
or
ret
das
sbb
pop
addr16
mov
popa
xlat
pop
inc
enter
call
fmul
fwait
sub
js
ds
cmp
jge
cmpsl
mov
inc
pop
ja
sbb
sub
add
div
lods
outsb
fldcw
enter
fstps
out
jl
xor
in
add
sbb
sbb
push
dec
cld
mov
outsl
clc
insb
scas
nop
outsl
sahf
int3
jmp
mov
dec
scas
shr
test
mov
lea
fsubrp
mov
cmp
dec
or
out
or
xor
lods
sub
sbb
ja
xor
sub
lahf
fisubrs
out
cmp
xor
sbb
dec
shlb
add
xchg
adc
or
shl
ja
push
pop
xor
or
test
and
cmp
js
mov
mov
leave
push
ljmp
mov
imul
out
pop
ja
cmp
ds
push
fistl
in
data16
cmp
stos
sbb
call
insl
inc
push
sbb
xor
push
or
out
or
pop
hlt
repnz
ljmp
cs
int
sti
enter
in
jo
mov
add
mov
ret
mov
in
out
mov
mov
ja
sbb
fdiv
in
stos
out
mov
popa
fistpll
jge
pop
and
std
ficomps
rorl
into
fldt
sbb
jae
cli
push
xchg
mov
mov
cld
in
or
push
mov
mov
xchg
rorb
call
shll
sbb
lahf
mov
xchg
test
bound
jne
mov
dec
test
inc
das
mov
sbb
xchg
jb
jmp
ja
or
sub
stos
call
icebp
xchg
fisubl
jae
scas
inc
dec
in
jnp
mov
mov
scas
add
mov
shl
loop
jle
outsl
adc
sti
fs
idivl
in
adcb
test
add
popa
or
sub
int3
push
rol
adc
push
jo
es
clc
mov
aam
cmp
rolb
sti
jne
inc
hlt
mov
into
add
mov
repz
sub
ja
dec
negl
daa
push
aam
paddb
push
xchg
lret
int
adc
inc
mov
inc
clc
xor
fbld
call
enter
mov
mov
shl
push
add
jg
mov
shll
mov
scas
into
dec
jl
icebp
mov
out
das
inc
mov
mov
inc
sahf
inc
sbb
pushf
xlat
out
mov
push
fstpt
cmp
fsubs
clc
in
clc
clc
fwait
pop
test
xchg
push
out
push
jg
sbb
push
pop
sub
gs
push
out
jo
push
mov
dec
scas
pop
int3
inc
push
pop
dec
xor
xchg
or
in
out
stos
fimuls
into
pop
dec
int
xchg
es
mov
cmp
push
or
repz
shrb
mov
push
dec
adc
outsb
push
inc
scas
aam
pop
mov
cmp
jp
ficompl
pop
add
mov
cld
push
mov
push
fildll
cmp
shlb
ljmp
stos
and
mov
loopne
sbb
cwtl
jno
adc
jp
addr16
cwtl
dec
fucomi
clc
fisttps
jbe
cld
lock
psrld
mov
pop
mov
out
cmc
bound
stc
dec
outsl
or
in
inc
fdivrl
cmp
leave
outsl
inc
clc
rolb
les
jle
add
fld1
dec
pop
in
dec
push
fld
sbb
dec
mov
lret
jmp
fdivrl
fwait
bound
mov
sbb
mov
and
jmp
jge
insl
cmp
lods
push
pop
pop
cmp
cmp
cltd
sub
imul
push
aam
repnz
pop
pop
push
xchg
pop
jno
add
jne
mov
iret
out
jp
ja
cld
setne
stc
mov
and
leave
or
mov
jo
test
push
ffree
bound
mov
mov
icebp
jb
lcall
or
inc
push
fmuls
js
sbb
xchg
jae
inc
call
sub
arpl
loopne
shrl
push
roll
xor
pop
jns
out
popf
sbb
or
clc
sti
sub
sar
push
mov
idiv
jns
filds
fcomps
mov
scas
js
sub
insb
rcrl
out
mov
test
push
adc
xchg
add
loop
setp
xchg
icebp
adc
inc
sub
jecxz
cmpl
bound
pop
jmp
jo
push
shl
out
dec
mov
out
add
fs
imul
stc
push
dec
popl
mov
inc
mov
fstpt
das
ljmp
jp
insl
mov
pop
and
js
mov
mov
imul
stc
add
dec
mov
sbbb
outsb
lods
xchg
out
cmp
je
fdivrs
enter
cmpsb
in
into
jge
icebp
loope
movsl
fsubrl
cltd
stos
mov
stos
pop
push
xlat
fisttps
jne
outsb
push
cmpsb
pop
lahf
jmp
mov
push
push
inc
jle
or
in
mov
sub
xchg
sar
cs
test
sub
jmp
aam
xchg
and
inc
fmull
fsts
es
mov
movsb
xor
movsl
fdivs
fcmovnbe
fsub
movsb
pop
jecxz
psubd
stc
mov
mov
jo
scas
jae
jbe
sub
dec
mull
stos
push
imull
and
cmp
idivb
rclb
jae
cli
aaa
adc
cmpsb
sbb
jno
pop
sbb
cmp
jae
cmp
mull
pop
and
dec
push
sbbb
sub
cmp
aaa
out
movsl
mov
pop
lcall
daa
punpckldq
inc
sub
enter
mov
jp
sbbl
xchg
mov
inc
ds
inc
clc
loop
xchg
mov
clc
stc
outsb
inc
add
lods
adc
xchg
clc
xchg
shll
mov
mov
mov
std
fs
fwait
out
ficompl
prefetchnta
sbb
scas
addr16
xor
sbb
jne
xchg
xchg
xlat
push
or
cmpsb
data16
lcall
dec
and
jae
fdivs
cmp
loopne
add
xchg
dec
cmpsl
in
pop
jne
mov
insl
or
push
push
adc
je
fwait
inc
add
push
sub
xchg
adc
sub
cmpsl
push
mov
mov
jns
pop
pop
sbb
adc
sbb
mov
lock
cmp
dec
mov
pop
adc
push
xchg
xor
loope
inc
cwtl
xchg
jle
cmpsb
push
xchg
test
dec
cmp
arpl
jae
jmp
sub
pop
add
outsl
addr16
js
xchg
xor
cs
pop
popf
jg
jbe
sbb
push
leave
cmp
scas
cltd
bound
jmp
sbb
dec
fxch
or
ja
xchg
sub
or
mov
xor
cwtl
gs
or
push
pop
push
cmp
jp
push
push
mov
aad
xchg
sub
loop
fildll
fmuls
xchg
inc
lret
test
repz
mov
pop
cs
ror
or
ja
out
inc
pop
mov
lret
out
stos
insb
nop
jge
and
or
cltd
cmp
imul
movsw
lret
cs
add
imul
sub
jg
sub
add
test
lret
ljmp
cmp
pushf
adc
rol
xchg
rol
inc
in
inc
mov
push
pop
mov
call
movsb
mov
loope
loope
scas
mov
iret
in
sti
lds
pop
cmp
mov
out
xchg
popf
in
pop
mov
scas
scas
aas
aaa
stc
mov
or
push
pop
call
jmp
cmp
adcb
aad
fld
out
rcpps
mov
andb
push
aaa
add
or
add
scas
repz
in
in
stos
popf
push
mov
push
les
fs
push
or
faddl
les
mov
add
dec
jle
ljmp
cmpsl
call
push
sbb
ss
shlb
fbld
ficompl
inc
adc
lret
fsts
adc
jb
and
loopne
cmpl
adc
cmp
sbb
es
push
mov
imul
stos
inc
das
sub
cwtl
lahf
testl
and
dec
xor
fcmovnb
or
add
cmp
xchg
sub
aad
jno
int3
jbe
cmc
cmp
clc
mov
push
adc
mov
jnp
stos
and
pop
scas
das
stos
xchg
clc
and
mov
out
movsb
dec
aaa
gs
cmpsl
push
push
aaa
jge
or
sub
andb
cmpsb
mov
mov
hlt
and
clc
jo
pushf
push
xor
jnp
and
pop
jg
mov
cmp
movsb
gs
pushf
mov
add
js
jle
lret
mov
xor
std
xor
fwait
clc
loope
mov
xchg
bound
sub
adc
adc
cmp
fimull
lcall
mov
lahf
or
push
imul
sbb
clc
out
add
ret
cmp
cmpsb
out
or
movsl
fcoms
out
data16
push
push
xor
gs
in
add
adc
clts
jnp
jnp
rcll
std
out
mov
stos
stos
idivl
cmp
xchg
dec
sbb
or
push
loopne
lret
fcomps
cmp
mov
loopne
cmp
in
xchg
dec
cwtl
xchg
test
cs
sbb
mov
mov
jnp
push
add
sub
jmp
aam
clc
pusha
adc
cld
movsb
stc
jg
fcoms
sbb
lret
sbb
imul
adc
xchg
rsm
es
inc
push
sti
sbb
addr16
jo
stos
clc
or
in
inc
jmp
or
fildll
sbb
vmovq
or
pop
aaa
jl
mov
insl
movsl
mov
or
jno
imul
fbld
bnd
inc
jmp
mov
fwait
jl
push
mov
mov
shr
xchg
mov
pop
jg
xchg
int
cli
mov
sub
in
pop
xchg
ljmp
faddl
cmp
insb
pusha
and
sbb
repnz
lret
popf
jmp
loope
out
mov
mov
shr
scas
and
scas
call
adc
or
test
daa
and
sbb
loop
cmp
call
and
sbbb
icebp
and
sbb
push
pop
xorb
cmc
xor
xchg
enter
jmp
fcoms
cmp
sub
cltd
lret
in
bnd
add
into
das
test
dec
xorb
nop
sbb
out
enter
mov
aam
inc
sub
call
into
test
and
cmpsb
or
test
or
das
mov
push
push
pop
xchg
incb
sahf
insb
outsl
cmp
addr16
xor
lods
aaa
into
addr16
mov
sub
cmp
push
int
add
push
sbb
in
push
inc
push
xchg
ljmp
and
and
leave
mov
or
imul
jp
je
or
xor
mov
movsb
call
in
inc
mov
stos
cmp
or
mov
jmp
stc
jb
outsl
mov
sbb
movsl
sub
popf
aaa
pop
adc
jg
pop
xchg
or
jnp
xlat
in
xchg
pop
mull
imul
cmp
std
sub
das
aad
call
clc
out
mov
add
mov
int3
in
mov
sub
and
call
dec
scas
mov
sbb
jne
cmp
cmp
addr16
sbb
in
jo
movsl
std
inc
dec
data16
in
lcall
push
ss
ljmp
imull
pop
sbb
pop
sbb
and
ret
cltd
push
test
xchg
ffree
scas
push
lock
sti
stos
push
mov
add
or
sbb
push
lahf
test
pop
in
mov
jae
lock
test
and
mov
xchg
add
lcall
mov
and
test
loop
mov
out
cmp
cmpsb
and
and
and
in
fidivl
sub
xchg
std
rol
adc
xlat
clc
sub
add
pop
fs
bound
in
mov
lret
arpl
mov
cwtl
scas
inc
sbb
or
fidivrl
call
inc
imul
pop
sub
dec
mov
cmp
cs
adc
mov
pop
mov
sarl
push
xchg
pop
movsb
jge
sbb
enter
movsl
sbb
xor
sub
jbe
push
cmpsb
lcall
sub
data16
mov
ret
cmpsb
cwtl
gs
push
outsb
shll
enter
mov
pop
cmp
cmc
sahf
ljmp
sub
mov
lahf
adc
sbb
sbb
arpl
out
jle
mov
nop
int3
ret
lahf
call
sbb
hlt
imul
xor
aas
sbb
pop
js
cmp
or
arpl
pop
popa
sbb
iret
insb
std
test
lods
lahf
cld
stos
faddl
mov
loope
jecxz
or
lock
ret
cmpsl
loopne
xchg
mov
mov
sbb
or
pop
sub
or
push
stc
fs
loop
xor
mov
adc
inc
mov
aad
jg
fwait
cld
dec
xor
xchg
ficomps
mov
jmp
xchg
in
shrl
aad
cmpsb
mov
fmull
dec
push
cli
jne
call
scas
jns
inc
fbstp
cmp
mov
and
leave
jno
loopne
or
push
pop
jo
inc
stos
popl
jns
imul
pop
imul
inc
clc
sub
xlat
and
sbb
int
xor
psubw
fists
scas
inc
dec
fisubs
outsl
call
pop
out
shl
inc
js
mov
dec
pushf
mov
cmpsb
push
pop
shlb
lods
pop
jne
mov
sbbl
xor
ja
xor
popf
in
xor
js
dec
pop
pushf
push
ss
rolb
fsubs
or
stos
fcomps
jno
fidivrs
int
mulb
push
sbb
xchg
jmp
mov
jnp
stc
lcall
mov
out
xchg
cld
sbb
mov
xor
and
mov
daa
shrl
pop
fwait
popf
sub
push
lds
pop
or
dec
stc
and
jmp
mov
insb
sahf
inc
lret
push
mov
loopne
sub
adc
mov
jo
cmp
sbb
repnz
popf
push
or
lcall
popa
cltd
popf
push
shr
addr16
repz
mov
push
mov
in
jecxz
sub
addr16
ja
adc
cld
and
sub
ljmp
ret
mov
push
dec
and
outsb
sub
adc
ja
in
cmpsl
pop
movsb
cli
dec
sbb
pop
or
addl
flds
inc
pop
sbb
mov
daa
mov
shlb
mov
pop
cs
xchg
test
popa
mov
test
add
push
stos
dec
pop
pushf
mov
test
addr16
aaa
push
jae
jne
call
jl
pop
or
out
int3
dec
mov
mov
stos
cltd
dec
xor
pop
sub
js
or
in
mov
cmpsl
mov
clc
push
xchg
ret
push
shlb
mov
push
loope
test
mov
dec
leave
or
xchg
pop
xchg
jecxz
gs
imul
sub
pop
sbb
xchg
ret
mov
arpl
lea
shll
mov
add
sahf
lods
loop
das
sbb
out
sbb
inc
int3
out
or
add
push
push
pop
pop
das
imul
stos
jl
pop
les
cld
call
mov
repz
clc
sbb
pop
sbb
jge
mov
inc
cmp
push
scas
aas
movsl
icebp
sarb
xchg
and
fwait
adc
pop
imull
sbb
js
call
subb
mov
fists
cmpsb
js
mov
mov
mov
into
push
mov
and
and
inc
jl
test
xor
cld
inc
in
mov
repz
adc
int
lea
out
sub
jne
mov
fisubrs
xor
or
or
sub
dec
sbb
out
repnz
adc
lahf
cmp
mov
mov
sub
das
cmp
fdivl
clc
xchg
inc
gs
ljmp
adc
xchg
dec
push
pop
jo
cmc
in
jae
xchg
lcall
pop
push
sbb
push
cmp
mov
add
les
push
add
sbb
pop
mov
fs
movsb
mov
fidivl
and
std
sbb
mov
bound
bound
dec
hlt
pop
dec
jne
jle
fadd
pushf
out
outsl
push
cmpsb
nop
sbb
mov
shr
cmp
into
cmp
mov
dec
pusha
test
push
or
aam
call
jg
lods
pop
adc
jbe
jg
sbb
dec
scas
lock
fwait
cmc
ret
leave
mov
pop
adc
loopne
sub
push
sbb
cmp
adc
xchg
hlt
mov
setbe
push
in
and
pop
mov
cmpb
dec
insl
and
xchg
outsl
fmuls
clc
lar
call
jb
dec
and
push
push
jl
pop
mov
ret
pop
loop
je
mov
pop
inc
jne
int
and
dec
jae
outsb
and
fwait
jmp
lcall
and
jge
shl
addl
aaa
or
jnp
movsl
dec
sti
pop
lods
adc
xor
mov
adc
dec
mov
pop
sarb
scas
mov
mov
pop
imul
and
cmpsb
dec
icebp
cmpsl
sbb
mov
jmp
incl
fucomi
cmp
xchg
fstps
sub
ss
push
mov
pop
sbb
mov
or
fwait
jmp
or
or
lcall
sub
in
mov
add
xchg
cmp
mov
stc
lahf
mov
loop
idivb
jp
add
or
pop
out
arpl
repnz
not
imul
loope
sbb
push
cmc
addr16
data16
or
pop
jnp
push
cmp
push
or
jne
mov
mov
pop
repz
sub
add
pop
jne
sbb
sbbl
sub
fisttpl
popa
ljmp
xchg
add
push
jmp
cwtl
mov
sahf
pop
hlt
inc
push
aam
pop
push
mov
inc
out
push
jo
and
std
cmp
adc
adc
xchg
cmp
call
fbstp
and
xchg
inc
pop
adc
mov
push
loopne
sbb
pusha
sbb
add
sbb
sbb
scas
and
imul
dec
insl
cwtl
pop
ljmp
loope
imul
jg
lcall
mov
pop
push
lahf
ds
data16
add
cmp
pushf
test
addr16
inc
sbb
imul
fbstp
hlt
pop
out
les
xchg
push
dec
or
xchg
inc
add
lahf
dec
sub
sub
pop
add
fwait
lret
pop
sbb
sbb
arpl
or
mov
shlb
ss
xor
pop
push
lea
add
mov
cltd
push
pop
pop
sarl
into
add
jne
cmp
es
adcb
adc
pop
shr
jg
or
insb
jb
popa
push
out
push
xor
out
mov
adc
jne
fisubs
shr
and
sub
mov
add
dec
sbb
and
pop
dec
inc
sub
into
lock
std
push
lods
or
push
pop
cltd
lock
add
adcb
std
test
jne
inc
sbb
jg
or
mov
sbb
sub
mov
or
lds
shll
add
xchg
pop
andw
faddl
std
push
loopne
pop
nop
dec
test
insl
mov
lods
jns
ret
push
mov
divl
xchg
fwait
stos
mov
sbb
outsl
mov
setbe
fmuls
fnsave
out
xchg
ficoms
ss
mov
cmpsb
addb
xchg
rcll
mov
sub
jne
sub
sti
sbb
xchg
rorl
std
jno
push
fcmovnbe
pop
shl
and
xlat
stos
and
es
xchg
pop
outsl
dec
loopne
add
call
idivl
fisttps
sub
cmpsb
add
cld
hlt
pop
daa
dec
xchg
pop
xchg
movsl
inc
or
xor
and
call
pop
xchg
adc
dec
rep
jmp
jmp
push
or
mov
out
mov
fwait
mov
gs
dec
add
popa
stc
scas
shrb
jbe
testl
leave
pop
shll
ja
scas
fld
cmp
pop
fsubs
sbb
in
and
sti
fwait
push
pop
add
xor
jne
int3
cltd
fistps
dec
sbbl
outsb
pop
fidivrl
pop
cmp
pop
xchg
mov
push
xchg
pop
fldcw
and
cld
lea
or
test
sbb
push
mov
js
cmp
dec
xlat
mov
loop
rclb
pushl
sbb
fdivrs
into
xchg
mov
loop
mov
inc
push
xor
lret
fnstsw
dec
out
in
sbb
jge
loop
xor
movsb
jnp
cmp
push
fldl
push
mov
jmp
adc
clc
gs
push
jne
jnp
lret
fmuls
pop
or
cltd
xchg
pop
out
or
dec
lods
and
jne
or
mov
inc
dec
mov
lret
xchg
sbb
xchg
popf
loope
mov
or
or
cmp
jne
mov
scas
dec
into
in
add
test
push
test
or
fcomps
out
sub
jne
int3
push
add
idiv
xchg
add
cmc
xor
aad
clc
outsb
pop
push
test
xchg
inc
pushf
mov
ret
std
or
test
sub
sarl
cmp
dec
pop
pop
mov
sbb
jg
mov
mov
xchg
fistps
xor
int3
and
fidivs
ljmp
ds
in
imull
into
push
or
cmp
pushf
arpl
sbb
rorb
mov
push
pop
std
outsl
js
repnz
cltd
cwtl
adc
cmp
sahf
fsubr
mov
clc
pusha
cmp
lret
pop
xchg
adc
subl
inc
adc
lret
add
add
loop
fwait
shll
js
jnp
lds
xor
lahf
jg
pop
pop
dec
out
inc
pop
mov
or
pop
andnps
xchg
stos
scas
dec
xchg
pop
inc
pop
leave
mov
and
push
mov
sub
in
xchg
icebp
mov
push
cld
into
and
insl
fldl
add
enter
pop
out
lods
imul
mov
cs
nop
push
or
pop
pop
add
subb
test
push
pop
fnstsw
xchg
cmpsb
mov
push
mov
or
jnp
jg
fwait
sbb
out
jbe
xchg
pop
imul
sbb
push
jne
fidivrs
push
sbb
cld
mov
adc
imul
pop
scas
ret
and
ret
inc
dec
mov
sti
imulb
repz
arpl
jmp
cmp
jmp
fdivrs
lods
test
ficompl
stc
and
xchg
sbb
push
lock
xchg
add
out
mov
or
bound
pop
cmpsb
jne
dec
mov
rcrb
out
andb
inc
jg
or
mov
push
push
add
xchg
in
gs
popf
out
je
orl
js
push
or
cltd
xchg
repnz
push
and
mov
xchg
ss
mov
inc
mov
pop
xlat
imulb
clc
leave
or
add
sub
jbe
clc
imul
push
cmp
adc
xor
mov
outsl
xlat
and
test
es
xchg
pop
not
repnz
lods
js
mov
mov
sarb
sub
mov
imul
js
jne
call
pusha
loop
repz
and
sbb
adc
dec
daa
inc
xchg
mov
cmpsl
das
ljmp
out
lret
mov
sbb
jne
sub
adc
jge
pop
push
jnp
jnp
addr16
cmp
or
dec
jne
clc
aad
ja
cltd
shlb
aaa
cmpsl
outsl
enter
cltd
xor
pop
jne
mov
test
stc
pop
fdivrs
movsl
cmp
mov
or
xor
repz
fsub
call
sti
imul
cld
jne
dec
cs
lods
push
aaa
cmp
int3
js
pop
push
int3
icebp
ljmp
ss
mov
cmp
call
jns
push
call
push
jnp
push
rcll
add
cmp
cmp
cmp
add
popf
pop
out
cmpsb
jne
xchg
push
sahf
in
cmc
js
pop
dec
movsl
cltd
sub
inc
and
inc
enter
and
adc
push
sub
jbe
repnz
jecxz
jo
and
and
arpl
js
aaa
fs
movsl
cmpsl
jmp
adc
or
xchg
sti
mov
dec
and
mov
testb
pop
fsts
sbb
inc
xchg
mov
dec
cmp
hlt
cmp
sub
shlb
sbb
and
sub
insl
cld
xchg
or
fcompl
pop
decb
les
pop
mov
ja
pop
negl
int3
adc
not
dec
lahf
and
mov
push
lock
sub
jns
inc
mov
cmpsl
out
int3
dec
repnz
adc
jb
ds
imul
xor
mov
mov
call
cmc
ret
iret
push
mov
mov
pop
data16
negb
or
call
xor
inc
je
mov
outsl
fmul
cmp
jns
repz
enter
or
dec
cmp
or
inc
stc
dec
fdivrl
add
cs
fdivrl
pop
ja
jne
es
pop
call
ret
scas
mov
in
xchg
mov
call
clc
orb
dec
dec
outsl
push
jno
push
faddp
fbld
aad
xor
ret
in
scas
std
xorb
shr
int3
cmpsb
or
add
pusha
pop
mov
jg
pop
push
sbb
stos
stos
and
aam
insl
sbb
mov
push
and
repz
fcmove
call
dec
fdivrs
call
push
mov
add
in
push
mov
mov
test
stos
cmp
in
movsb
cs
mov
cmp
pop
loop
test
sbb
lahf
push
or
stc
sub
mov
ja
sarl
std
inc
sub
test
xor
push
push
std
sub
ds
sbb
outsl
aas
test
push
lods
fsubr
movsl
cmpl
dec
xor
es
cmove
cs
mov
push
aaa
sub
dec
mov
lock
mov
repz
not
cltd
loopne
or
mov
inc
aas
aas
mov
jge
mov
inc
fisubrl
and
notl
ret
out
in
push
iret
jge
je
jmp
xchg
bound
mov
shll
lret
push
icebp
inc
sub
or
cmp
jmp
sub
sti
sbb
mov
fs
fldcw
test
data16
xchg
mov
mov
lods
in
test
repnz
dec
popl
ja
bound
xchg
xchg
and
bound
notl
addr16
sub
addr16
fdivl
lods
enter
enter
fistpll
sub
call
scas
mov
leave
idivl
mov
sbb
shl
aaa
repnz
repz
jg
xlat
jle
push
and
and
or
sahf
imul
shll
lret
sbb
in
push
mov
or
sbb
xchg
enter
call
jg
pop
in
add
sub
jns
jno
xchg
mov
cmc
icebp
inc
popa
jb
push
and
pusha
loopne
xchg
mov
mov
fstps
jae
push
pop
imul
clc
dec
cmp
mov
jns
clc
daa
adc
test
pusha
jns
mov
pop
mov
jle
sub
cmp
xor
inc
iret
pop
cwtl
enter
in
or
clc
or
addr16
jmp
dec
fcoml
pusha
xor
push
pop
push
mov
mov
cmp
lock
imul
jg
sbb
xchg
add
cmp
cmp
nop
mov
jno
xchg
sub
aaa
push
negl
adc
out
stos
clc
fmuls
xrelease
dec
out
and
and
pop
inc
fcom
fs
cmp
pop
add
xchg
scas
sahf
push
inc
orl
cs
cmp
int
jl
push
pop
cmpsl
mov
mov
pop
jo
cmpsl
fcomi
and
stos
enter
in
mov
movsl
lods
and
xrelease
cltd
into
fdivs
loopne
xchg
lods
mov
aam
pop
and
xchg
int3
scas
pop
mov
loopne
xor
arpl
cs
xchg
loop
jl
sbb
cmpsb
inc
add
fimull
mov
sbb
setp
cmp
in
sahf
mov
jmp
clc
or
dec
loope
mov
sahf
lahf
lea
cmpsb
jl
push
out
jmp
out
sbb
call
mov
cmpsl
cmp
fs
sbb
arpl
lock
stc
iret
cmp
push
sub
or
out
push
enter
mov
jns
sub
and
fstpl
jg
pop
jae
repnz
das
mov
gs
test
mov
test
and
imul
push
incb
aam
out
jg
sub
sub
notl
sarb
pop
mov
xchg
or
cmp
ror
sub
enter
dec
fcoms
nop
fcmovnu
jne
lock
es
stc
jg
push
pop
lret
or
jne
xor
sbb
push
clc
leave
or
jmp
addl
imul
mov
mov
aam
mov
stos
cli
fnstcw
xchg
fcoml
pusha
sbb
dec
inc
das
mov
dec
cmp
adc
sbb
jle
xchg
sarb
pushl
cmpl
sub
fcoml
add
int
mov
mov
push
inc
scas
cs
je
cwtl
sbb
pop
imull
pop
imul
scas
pushf
lahf
lret
pop
add
cmp
cwtl
js
stos
sub
mov
add
and
pop
stc
inc
dec
adc
fwait
sub
loop
adc
jl
mov
sub
pop
movsl
add
jecxz
xchg
inc
mov
dec
fdivs
scas
pop
mov
lods
or
cmpsl
jle
imul
and
sbb
and
mov
sbb
sub
mov
nop
scas
or
rclb
cs
insb
stos
mov
in
pushf
push
pusha
sbb
mov
in
push
xchg
mov
stc
clc
and
sub
mov
sub
xchg
pop
out
shlw
fsubs
pop
push
inc
jmp
pop
loope
dec
mov
loop
jecxz
aas
loope
push
push
mov
cltd
sbb
jmp
sarb
pop
addr16
mov
cmpsb
pop
inc
jne
fists
loopne
testb
pop
or
dec
cmpsb
js
mov
jae
into
outsl
in
pop
mov
lret
sub
and
jns
jp
imul
roll
popa
jno
mov
mov
sbb
aad
cmp
lahf
sub
xchg
stc
aaa
cld
lahf
les
jp
xchg
push
fwait
ljmp
sub
clc
inc
mov
pop
xchg
cs
inc
and
xor
mov
push
jns
mov
mov
mov
lods
and
xchg
sbb
pusha
cld
movb
mov
aaa
movsb
jne
xor
jnp
xchg
repz
cmp
mov
mov
insb
fiaddl
ds
sbb
cltd
sbb
and
ja
sti
fsubrs
push
inc
push
mov
repz
xchg
push
fiaddl
clc
shlb
jne
xchg
pop
jae
xchg
faddl
movsb
bound
shlb
cmc
add
jae
pop
sbb
dec
and
or
cmp
out
fcomps
scas
mov
xor
push
fisubs
cmp
inc
xor
lock
gs
xchg
fidivrs
jb
mov
scas
fwait
cli
dec
pop
mov
arpl
xchg
hlt
cmp
cwtl
movsl
call
cmpsl
sahf
xchg
pop
add
jge
dec
test
dec
into
pop
shrd
fsubp
cmp
mov
or
jae
lea
out
fsubrs
sub
mov
cmp
jecxz
icebp
dec
jne
pop
mov
scas
mov
mov
les
movsl
sbb
lods
mov
stos
mov
imul
pop
fstps
out
push
shlb
adc
xor
cmp
sahf
int3
pop
push
lock
stos
jnp
ljmp
push
in
xor
out
cmc
in
sbbl
fisttpll
mov
in
test
jnp
cmp
sbb
fdivl
icebp
shlb
mov
stos
fcomp
cmpsl
and
int3
sbb
sbb
xchg
add
aas
sbb
mov
push
jbe
mov
pop
pop
test
ljmp
inc
pop
add
dec
ficoml
jb
outsb
dec
jle
xchg
into
and
jg
or
scas
call
sub
sub
or
insb
pop
clc
andl
mov
pop
sbb
xchg
add
sub
loopne
fdivrl
divl
sub
test
pop
call
jmp
pop
nop
sbb
and
xchg
mov
in
pop
cmp
or
push
sti
imul
mov
ljmp
sbb
shlb
in
mov
loopne
shlb
sbb
clc
jge
inc
or
out
sbb
xchg
out
push
call
mov
push
idivl
bound
or
lds
shl
fcomps
dec
sub
adc
test
mov
sub
pop
xchg
fistpll
mov
clc
out
dec
rep
arpl
xchg
test
mov
faddl
cli
pop
out
or
sbb
out
jnp
xor
mov
mov
hlt
scas
in
and
jge
rcrb
or
addr16
sub
and
jl
xchg
out
push
jmp
hlt
sbb
sub
lcall
paddusw
sbb
iret
pop
mov
jbe
cld
xor
jmp
jne
or
imul
std
addr16
testl
call
pop
add
es
push
loope
in
adc
adc
mov
in
inc
movsb
rcrl
daa
sti
ds
loop
dec
mov
or
sbbb
cld
cld
in
jg
jo
mov
pop
cmc
xchg
push
addr16
mov
in
adc
pop
fcoml
jb
js
and
ss
insl
pop
out
or
emms
das
mov
jmp
xor
nop
dec
imul
divl
inc
xor
and
mov
fldcw
push
jns
pushf
imul
mov
adc
and
stos
inc
lods
repnz
fwait
mov
jae
push
repnz
xchg
mov
xor
mov
jge
ret
push
insl
jmp
les
xchg
add
mov
and
add
pop
jne
add
loop
imul
pop
loope
sbb
and
mov
or
movsb
fcompl
fst
jl
scas
pop
mov
mov
es
xchg
lock
sbb
scas
dec
mov
sahf
cmp
xor
lods
imul
inc
shlb
push
push
pop
mov
cmp
dec
sub
mov
fwait
push
mov
adc
flds
int3
inc
xor
jle
push
xor
xchg
pop
dec
mov
inc
fadds
dec
cmp
aad
push
pop
js
aas
sub
scas
iret
lea
xchg
pop
clc
xorl
loop
xchg
mov
pop
mov
ja
jo
pop
xchg
sbb
out
jns
repnz
cmc
pop
push
shrb
cmp
es
loop
fucomip
sub
loopne
shlb
cwtl
scas
jns
fwait
aas
sti
sbb
mov
orl
dec
addr16
add
inc
sahf
pop
xchg
je
jmp
inc
stc
pop
dec
cwtl
cvtps2pi
cmpl
in
and
lock
cmp
push
inc
or
loope
dec
push
jbe
loope,pn
jecxz
imul
cli
and
xchg
push
repz
addr16
cmpl
push
int
mul
sub
adc
mov
cmp
sub
xchg
fsub
stc
ficomps
mov
mov
or
sbb
clc
and
fildl
fsubl
imul
out
or
out
pop
add
and
mov
outsl
push
cmpsl
xlat
jae
adc
push
pop
lahf
in
gs
lahf
xchg
mov
and
pop
js
jecxz
mov
shrl
dec
pop
sti
pop
repz
or
pop
push
sbb
mov
mov
mov
adc
stos
outsl
fidivrl
mov
icebp
fldl
cmp
xchg
data16
push
push
loopne
lds
pop
and
sbb
jno
ljmp
mov
push
jge
daa
pop
gs
cmpsb
push
stc
test
dec
and
pushf
push
leave
jg
std
cwtl
push
roll
fistps
loopne
jne
inc
jns
pop
les
push
pop
cmp
sbb
in
sti
popf
mov
xadd
test
call
xchg
lret
int3
and
std
fiadds
test
lahf
fucomi
aas
bound
mov
sbb
pop
dec
xchg
push
xlat
imul
ja
mov
fsts
adc
xchg
rcll
subl
in
arpl
pusha
sbb
insl
loop
insl
movsb
push
xchg
std
daa
gs
xor
sbb
in
jecxz
test
jg
mov
sub
add
or
and
xchg
pop
mov
pop
es
lea
cmp
mov
or
add
cli
iret
fldcw
or
lret
fisttpll
pop
lahf
daa
pop
jne
or
scas
movsl
in
push
mov
pop
push
call
jecxz
fs
std
push
imul
pop
adc
fisttpl
insl
stc
cmovne
icebp
dec
sub
out
push
add
or
dec
out
cwtl
jl
pop
push
fildl
dec
pusha
shlb
jmp
sub
dec
fsubrs
sti
pop
fs
rcrl
idivb
popa
sbbl
add
mov
jo
cwtl
lock
add
cmp
out
jne
sub
inc
dec
or
or
mov
shll
sub
in
cmp
outsl
sbb
fs
add
arpl
aad
inc
mov
lock
adc
pop
fiadds
cmp
push
in
addr16
inc
mov
cmpb
mov
jl
and
mov
sub
dec
and
out
xor
push
negl
and
popa
inc
lahf
and
in
sbb
jne
push
inc
sub
pop
push
xchg
hlt
adc
cmc
addr16
pop
sub
stos
psllw
insl
pop
shl
aas
rorl
mov
cmpxchg8b
jg
imul
sbb
pop
jnp
mov
gs
outsl
out
xchg
add
adc
insl
adc
jge
pop
aas
in
call
cwtl
or
movsb
mov
out
fnstcw
test
cmp
sub
cmpsl
lahf
pop
xchg
xchg
data16
mov
cltd
cmpsb
mov
out
add
insl
cltd
in
sarl
pop
cmp
popa
ret
icebp
or
mov
jl
stc
mov
push
or
scas
xchg
hlt
in
or
push
xor
jne
lret
dec
fnstenv
add
scas
mov
call
pop
das
shrb
jae
cmc
pop
sbb
mov
xor
xor
add
pop
dec
out
stos
jge
xor
enter
jnp
dec
pop
jne
add
bound
cld
push
hlt
cmp
push
mov
add
add
inc
bswap
mov
mov
push
cmp
gs
sbb
pop
gs
in
in
sbb
jmp
push
xchg
ret
or
cmp
cmp
iret
jmp
fs
jg
mov
push
jbe
inc
lcall
xor
add
jne
mov
scas
push
testl
cwtl
das
sahf
popa
pop
push
cs
clc
and
fstpt
add
decb
sub
push
inc
mov
xchg
cli
fsubl
ljmp
js
fcompl
das
pop
cltd
adc
and
add
dec
gs
cmp
leave
clc
jne
sahf
rolb
cli
es
iret
adc
jmp
add
push
pop
mov
imul
jmp
xor
test
data16
pop
repz
pop
push
cmpsl
push
adc
pop
push
mov
mov
sub
sarl
or
push
pop
jp
push
jbe
pop
pushf
mov
inc
xchg
jle
fcoml
push
xor
hlt
mov
pop
ret
jne
lahf
inc
js
scas
cmpsb
push
arpl
fsubs
pop
jle
insl
mov
mov
leave
fs
sub
popl
insl
and
mov
sbb
xchg
sub
xchg
dec
xchg
jo
push
fcoml
mov
cld
lods
mov
stos
andl
or
or
icebp
xchg
mov
aas
jne
or
pusha
insl
jnp
aam
or
jne
ret
xchg
es
mov
jno
cmp
aas
aas
dec
xor
bound
xor
sbb
sub
and
sub
sub
mov
mov
fcomip
lret
cltd
cmp
shrb
xchg
int
xchg
js
roll
ljmp
arpl
cld
adc
cmpsl
jne
lret
jp
fsubs
loope
cmp
cmp
sub
jbe
fbld
push
xchg
int3
fsubrs
stos
mov
aam
push
inc
xor
dec
idiv
sbb
pop
jge
call
push
es
scas
fs
xor
iret
movsl
sub
ja
cmp
sbb
and
mov
in
test
xor
les
shll
add
bswap
adc
movsl
in
mov
dec
sahf
xor
dec
add
xchg
mov
mov
hlt
mov
dec
rorb
dec
fdivr
sbb
clc
pop
dec
out
clc
ljmp
xor
pop
leave
sbb
xor
pop
insb
out
in
jmp
ljmp
sub
out
push
xchg
mov
insl
rorl
dec
fisubs
jne
pop
lahf
push
lret
leave
out
iret
pop
jno
xchg
inc
rclb
mov
jmp
je
inc
push
mov
rcrb
push
add
imul
imul
cmpsl
jle
mov
testl
adc
int3
jl
outsb
xor
xchg
daa
xchg
pusha
aas
sub
mov
inc
lret
loope
ja
insb
leave
pop
push
xor
dec
ja
xchg
sbb
scas
js
ficomps
fdivp
lods
pop
xchg
clc
lret
sbb
imul
jbe
fsubr
popf
xchg
mov
add
stos
mov
mov
and
jae
mov
in
mov
sbb
popf
cld
adc
fidivrs
push
imul
out
lock
jge
xor
mov
sbb
cmp
sbb
mov
mov
sbb
sti
xchg
fstl
pop
and
jmp
in
pop
icebp
arpl
aaa
popa
icebp
cli
jle
mov
xchg
enter
push
inc
push
xor
add
fists
mov
cmpsl
fstps
cmc
cmc
cmp
sub
pop
pop
loopne
scas
outsl
stc
pop
in
divl
dec
rcll
mov
lds
xchg
cmp
lahf
mov
scas
mov
outsl
jne
dec
cmp
push
flds
fnsave
or
pop
hlt
idivb
mov
pop
and
or
dec
mov
xor
xor
cmp
das
enter
xchg
fbstp
test
lahf
jge
cltd
adc
pop
sbb
movsl
mov
fsub
lcall
dec
testl
movsb
hlt
and
jecxz
or
and
cmp
std
mov
xchg
pop
pop
sub
mov
pop
cltd
add
fidivl
pop
dec
pop
dec
jge
sub
mov
ja
push
subb
frstor
aaa
push
mov
out
in
cltd
lods
fwait
push
cmp
aad
xchg
insl
sbb
xchg
mov
cmp
pusha
shl
inc
mov
leave
pop
and
sub
pop
inc
js
xchg
xor
cmp
es
sbb
fs
push
jbe
in
cmp
jg
addr16
dec
mov
dec
ret
push
sub
jp
ja
inc
pop
cmpsl
rcrb
sub
sbb
pop
sbb
loop
push
mov
roll
ret
aaa
movsl
pop
out
push
es
ljmp
mov
pusha
lods
mov
insl
jl
addr16
out
jno
sub
pop
adc
aam
adc
outsl
gs
jns
inc
addr16
fdivrl
mov
int3
sub
cmpb
xor
call
js
enter
addr16
rolb
lds
and
pop
leave
cmp
fsts
fmull
xor
cs
mov
addr16
lock
lea
push
outsl
pop
mov
jno
jne
out
les
or
ja
stc
enter
pop
shll
pusha
dec
mov
insl
cmp
scas
mov
or
jmp
mov
bound
inc
aas
scas
ret
dec
inc
inc
sub
cs
int3
mov
call
cmc
pop
xchg
add
jge
push
sar
push
adc
pop
mov
fidivrs
mov
in
andl
loop
pop
pop
out
ds
std
movsb
xlat
or
shl
inc
inc
xor
jae
gs
push
movsl
sub
jge
and
push
addr16
fldt
cmp
lret
sbb
idivl
popf
lahf
jle,pt
pinsrw
movsl
aam
push
paddsb
dec
shrl
out
jns
ss
clc
jne
call
std
fistl
rcrb
aaa
repnz
ja
lea
pop
pusha
stc
ja
iret
ja
jns
lds
push
xor
inc
mov
adc
or
and
mov
rcr
xor
pop
outsb
pop
jns
sahf
es
mov
shrb
sbb
sub
jle
stos
scas
xor
cmpsb
fadd
sbb
ja
sbb
jg
or
mov
mov
lahf
push
movsb
stos
icebp
dec
into
sbb
fdiv
pop
mov
fildll
sar
ret
jno
fidivrl
push
ret
fidivrs
fnstsw
mov
lods
notl
cmp
adc
mov
add
fstps
jl
mov
xchg
jle
mov
cwtl
bnd
add
inc
repz
push
pushf
aad
push
push
shr
fwait
out
das
mov
mov
sahf
inc
out
inc
jge
test
push
div
cltd
lahf
mov
pop
or
mov
mov
inc
or
mov
cmpsb
mov
idivl
jne
iret
sub
push
push
lock
add
pop
or
ja
aas
mov
mov
bound
mov
mov
sub
insb
out
jge
add
int3
add
sti
and
pop
shll
sub
pop
cmpsb
js
jne
or
or
lock
sbb
sbb
mov
fsts
pop
cmp
pop
sub
mov
enter
mov
movmskps
add
add
inc
addr16
les
jne
xchg
stos
push
pop
incl
call
movsl
mov
imull
clc
cmpsl
cs
xor
push
xor
into
dec
dec
push
aad
mov
mov
or
xchg
mov
sahf
mov
or
subl
out
jne
fistps
sub
pop
out
pop
aas
pop
sti
std
push
dec
inc
xor
and
out
or
sbb
enter
push
inc
pop
sbb
out
mov
push
in
mov
and
outsb
addr16
adcb
or
inc
mov
aas
fwait
xchg
mov
sub
rcr
pop
pop
and
dec
mov
sbb
ficoms
popa
jp
int
or
loop
fnstenv
lock
cli
aaa
int
lock
pop
idiv
mov
or
push
out
cmp
sbb
popa
ret
clc
sbb
fsts
test
in
push
fcoml
pushf
das
fcomps
xchg
js
push
pop
bound
sbb
fcomps
cs
dec
mov
mov
das
xchg
pop
cmp
aaa
imul
aas
leave
pop
nop
cwtl
sub
mov
pop
xor
mov
fwait
test
pop
sub
xchg
std
sub
xchg
out
stc
sahf
adc
cltd
jl,pn
fucomip
imul
in
sbb
mov
mov
jne
sub
push
stos
cwtl
pop
repz
xchg
scas
cmp
inc
imull
fsub
mov
lods
hlt
scas
jnp
hlt
dec
mov
imul
pop
hlt
sbb
sbb
dec
bound
icebp
subb
fistpl
lods
pop
mov
sub
clc
dec
mov
cmp
lds
lret
mov
test
and
cs
lods
es
cmp
mov
enter
jb
xor
test
fildl
pop
add
sub
mov
inc
mov
pushf
jns
mov
out
pop
jmp
movsl
arpl
testb
and
xchg
cs
repz
xchg
leave
sbb
push
pusha
mov
xorl
sub
and
jg
xor
in
mov
filds
cmp
into
xchg
jb
adcl
jne
mov
inc
imul
adc
push
mov
sarl
sub
jne
xor
adc
mov
pop
enter
push
mov
sarb
ficompl
fsubl
push
mov
pop
mov
imull
mov
fcoms
dec
xchg
pop
ja
and
sbb
loop
cmpsb
fcoms
mov
int3
push
xor
cli
imul
mov
lock
fsts
mov
jae
or
gs
inc
fistps
das
shlb
jmp
sbb
pop
daa
mull
push
pushf
jne
cmp
pop
loop
in
push
ss
lret
movsl
jb
in
pop
jnp
out
lcall
out
test
mov
jne
sbb
add
push
data16
pop
jno
out
fs
aaa
cli
jnp
inc
jo
and
cmpsb
and
and
mov
push
cli
push
or
sbb
shrb
fists
lcall
xchg
repz
xchg
cmp
in
arpl
sbb
cmp
xchg
xor
xchg
repz
inc
gs
jl
mov
xor
mov
outsl
inc
in
scas
or
cvtps2pd
jne
pop
cmpsb
mov
scas
or
or
pop
cmp
add
or
adc
pop
imul
push
sub
outsl
fiadds
cmp
sbb
cs
push
sub
mov
jns
cmp
stos
les
mov
jecxz
scas
mov
dec
jge
outsb
repz
test
pop
xchg
adc
insb
pop
mov
jne
or
leave
ds
mov
lahf
rclb
aas
or
ds
cmp
mov
mov
repz
cmp
push
and
pop
pusha
push
mov
xchg
aaa
sbb
xor
ds
aad
pop
cs
cmpsl
js
push
idivl
arpl
mov
jne
add
aaa
adcl
cmp
jnp,pt
push
cs
push
cwtl
pop
movsb
pop
loop
pop
stos
and
jg
inc
popa
out
mov
xchg
scas
pop
clc
jno
sti
insl
inc
push
cmpsb
rclb
sub
mov
out
call
or
jns
faddp
aas
mov
sbb
test
divl
insb
call
sub
rclb
aaa
jne
jle
jno
test
je
cli
or
lahf
push
lahf
mov
ret
lods
add
in
loopne
repnz
imul
sbb
shr
pop
push
scas
or
mov
or
add
mov
and
scas
dec
lock
aas
pop
jg
pop
pop
aaa
cmp
sbb
das
mov
fistpll
or
xchg
sub
lret
jl
sbb
and
je
lahf
sub
mov
jmp
sbb
hlt
test
pop
push
lcall
loop
int3
in
lds
sbb
test
pop
mov
jecxz
or
xor
scas
inc
imul
aaa
and
in
push
shrd
pop
jge
lcall
xchg
insb
pop
push
xor
jne
mov
mov
cmpsb
sub
jne
cltd
xor
nop
adc
test
jae
outsl
mov
aas
mov
ja
sbb
dec
into
jmp
mov
push
cmp
mov
invd
mov
xor
cmpsl
icebp
iret
and
stos
mov
push
push
in
cmp
rorb
cli
mov
push
xchg
sahf
popf
insl
adc
fbld
sub
sbb
rorb
sahf
jmp
jecxz
pop
and
dec
mov
cli
or
outsl
pop
test
shlb
add
pop
dec
icebp
enter
lret
pop
outsb
mov
dec
test
scas
xlat
pop
or
mov
and
std
cmpsb
xchg
pop
shlb
outsl
daa
cmovae
lock
arpl
popf
mov
and
cmp
pop
insb
cmpsb
lds
bound
jne
icebp
stc
pop
in
mov
mov
movsl
in
aad
aad
jge
mov
jmp
dec
dec
cld
inc
out
call
or
push
js
pushf
loopne
vsubps
fs
es
aam
pushf
les
std
divl
inc
dec
pop
add
rcrl
add
sbb
adc
fptan
mov
xchg
push
inc
mov
push
cwtl
add
push
push
les
rolb
sub
dec
fimuls
pop
sbbl
xchg
fildl
jne
fs
sahf
sub
dec
fldt
adc
std
or
ljmp
aas
bound
push
jne
cmp
mov
pop
inc
dec
inc
imulb
jb
mov
stos
or
mov
jbe
aad
ja
dec
push
xor
xchg
outsl
push
jo
inc
imul
sbb
int3
push
das
push
cli
cmp
out
push
sbb
mov
jne
lahf
test
mov
xchg
push
add
rclb
leave
jle
test
fistpll
pop
push
pop
xchg
mov
ja
pop
mov
lods
leave
lret
scas
sub
call
loope
cmp
shl
xchg
adc
test
push
mov
push
fisubs
addl
test
leave
push
jmp
and
dec
pop
xor
movsl
inc
cmp
into
pop
and
gs
pop
mov
dec
andb
mov
sbb
test
adc
stc
push
push
mov
lds
insb
push
movsb
je
out
loope
jne
or
cmp
fcmovne
add
clc
sbb
int3
sub
iret
fsubs
cmc
mov
inc
cmc
inc
sub
xchg
fistpll
ret
pushf
cltd
jl
mov
cmp
test
addr16
push
pop
ret
out
or
or
stos
sahf
pop
xor
xchg
jnp
xchg
cmp
adc
icebp
ljmp
or
in
out
jnp
shll
shl
add
jmp
cmp
xchg
js
pushf
sbb
sub
into
arpl
fisttpll
vmread
imul
jl
nop
jg
lahf
dec
outsl
movsb
pmaddwd
mov
pop
lret
test
cmp
idivl
jmp
dec
pop
push
popf
stc
xchg
push
icebp
fidivs
pop
xor
dec
and
gs
es
xchg
jg
out
jmp
xchg
gs
mov
mov
mov
test
arpl
cmp
inc
sbb
pop
dec
daa
sbb
faddl
xor
jb
cmp
test
push
cmp
call
pop
addr16
outsl
pop
scas
mov
pop
dec
fcompl
cwtl
std
mov
call
sub
das
popa
leave
adc
mov
jg
sub
decl
jge
mov
sub
imul
repz
xor
imul
addr16
popf
or
mov
fwait
dec
fwait
sbb
negl
fcoml
sbb
repz
dec
mov
mov
xchg
dec
pop
jne
pop
loop
and
or
rol
add
or
pusha
in
out
sbb
sarl
divb
jns
pop
mov
xor
and
movsl
pop
sub
inc
jmp
fmull
or
movsl
stos
std
jnp
fstpl
push
xchg
out
mov
js
jg
pusha
xor
scas
add
jp
rcrl
mov
adc
ja
daa
jle
mov
or
sub
push
push
push
pop
js
xchg
jne
stos
push
mov
pop
sub
aad
or
xchg
imul
les
push
jne
cwtl
or
lods
push
jne
dec
jge
inc
add
movsb
push
xchg
out
sbb
push
cmpsb
arpl
mov
jo
push
sub
outsl
cs
into
dec
add
push
xchg
mov
lods
out
mov
popf
pop
scas
clc
scas
pop
xchg
xor
fnsave
out
mov
shll
jmp
pushf
dec
movsl
dec
jno
jmp
cld
push
out
sti
rorb
pop
pop
pop
jg
sahf
sbb
dec
mov
and
jmp
jne
mov
mov
and
jg
das
mov
hlt
xor
push
jo
pop
out
push
sbb
ret
dec
sub
xchg
clc
jmp
dec
cmp
out
pop
jecxz
sub
in
add
sti
scas
push
push
test
stos
add
clc
fnstcw
xor
out
in
in
jne
xor
gs
add
pop
rcr
adc
test
fincstp
push
fbld
jp
cmpsb
xor
adc
push
pop
and
jg
dec
cmpsl
stc
lcall
bnd
xor
pop
inc
pop
imul
outsl
cmp
push
jg
mov
or
add
jo
sbb
and
ja
clc
sbb
sbb
pop
and
fimuls
sub
ret
mov
arpl
jg
pop
mov
and
lcall
inc
sub
outsl
push
aaa
ljmp
jne
rorl
xchg
mov
imul
mov
pop
loope
movsb
lods
fistpll
shr
cltd
add
into
mov
imul
subb
scas
movsl
xor
cmp
xor
ja
cmp
gs
arpl
fnsave
repz
dec
adc
sbb
outsl
sub
add
add
sbb
jle
jge
test
stos
fadds
xor
mov
and
insb
and
add
sub
inc
pop
out
and
js
adc
cmpsl
mov
pop
loope
mov
hlt
lock
adc
and
jnp
mov
test
dec
test
and
rolb
dec
lahf
cmpsl
lea
test
sti
repz
dec
inc
idivl
xchg
shrl
pop
mov
imul
sbb
call
decb
inc
pop
jg
xor
outsl
dec
add
or
rorl
imul
sahf
mov
cmc
clc
das
mov
adc
add
adc
mov
lret
cmp
enter
clc
jmp
fstps
and
mov
loopne
jno
bound
add
pop
jmp
jecxz
sti
adc
fwait
arpl
jo,pn
push
subb
bound
aam
dec
mov
mov
push
mov
pop
cmp
enter
xchg
pop
outsb
into
ss
mov
inc
lret
mov
das
jne
sbb
lds
cwtl
sti
pop
push
pop
lret
ficompl
outsl
mov
aaa
jmp
dec
cmp
cmp
lret
stos
sbb
adc
cmp
sbb
in
arpl
out
insl
pop
fbld
test
pop
mov
jo
dec
movb
mov
popf
sbb
jo
pushf
out
lock
mov
lahf
sbb
xchg
xlat
pcmpgtd
sahf
xor
mov
cltd
mov
push
add
in
loope
cld
sub
adc
pop
mov
loopne
push
xchg
daa
mov
clc
mov
cmpsb
imul
pop
out
push
xor
in
jg
insl
and
int3
fmuls
push
sbb
inc
sti
lock
or
dec
iret
mov
insl
gs
add
ljmp
dec
pop
dec
jg
jl
das
xor
inc
sti
cmc
and
lahf
ja
popf
xor
scas
call
mov
dec
cmp
pop
nop
sub
cli
cwtl
scas
and
outsb
or
and
insl
fcoms
pop
or
in
pusha
dec
cmp
pop
mov
sbb
jno
or
or
mov
add
adc
sub
cmp
jne
or
rcll
lcall
sbb
xchg
sbb
pop
pcmpeqd
cmpsl
jae
or
sub
xchg
in
pop
lcall
dec
cmpsl
das
pop
xchg
subl
mov
push
adc
movsb
leave
rcr
sub
rcrl
xor
pop
jmp
xor
test
pop
ficoml
push
ds
ja
in
std
xchg
call
call
in
dec
in
inc
sbb
jne
fdivrp
sbb
call
ret
or
pop
test
leave
xchg
js
mov
inc
aam
adc
cmpsb
cli
sub
sbb
sbb
xchg
add
mov
xor
dec
bound
enter
aam
adc
xchg
nop
mov
call
or
add
pop
mov
nop
ds
pop
or
ror
cmpsb
cli
lret
and
cmp
subb
push
push
imul
pop
leave
and
dec
fadds
inc
sub
inc
or
out
add
mov
fucomp
cwtl
dec
push
jecxz
cld
xchg
push
aaa
out
sub
rcll
adc
jl
jno
fidivs
mov
or
in
cmp
mov
pop
or
push
or
pop
and
in
jge
fwait
insb
fdivrs
bound
sub
push
sub
es
fldenv
fbld
into
notl
je
int
mov
arpl
iret
gs
rolb
push
pop
pop
addr16
mov
repz
inc
dec
inc
mov
fldenv
mov
fsub
push
mov
es
movsb
rcrb
and
jl
fwait
sarb
ja
pop
pop
jmp
xchg
in
mov
orb
mov
stos
mov
xor
xchg
fwait
js
pop
in
jmp
and
dec
aam
and
lret
pop
mov
mov
ja
mov
cli
sub
mov
subl
xchg
inc
sti
add
jne
mov
mov
pop
fiaddl
mov
adc
jns
xchg
icebp
stos
mov
repz
and
in
pop
pop
repz
or
test
dec
icebp
cmp
mov
out
adc
mov
cli
out
fsubs
and
dec
inc
jne
sub
dec
ds
lock
fdivr
in
xchg
pop
push
ja
mov
mov
jne
rcrl
adc
jmp
stos
in
test
push
sub
fsts
daa
fsubl
jecxz
ljmp
ficoms
mov
pop
dec
outsl
fidivl
shl
cmp
jecxz
lahf
mov
cmp
mov
test
gs
adc
jne
fadds
sub
sbb
ljmp
ljmp
mov
out
jnp
pop
inc
cmp
repz
call
nop
test
call
sub
push
mov
into
pop
fdiv
pop
sbb
loope
rcrb
mov
pop
push
sub
sbb
and
inc
fdivrl
scas
add
xchg
sbb
sub
add
adc
mov
sub
repz
into
cmc
mov
mov
xchg
pusha
jmp
fldenv
insl
and
sub
and
cmp
dec
out
dec
mull
in
or
testl
pusha
imul
or
jo
imul
outsb
sbb
sbb
aad
pop
jnp
in
test
out
xchg
sbb
dec
test
mov
pop
cmp
add
or
aas
or
xor
xor
push
mov
lahf
fnsave
mov
push
xchg
or
jp
fsub
enter
lock
or
pop
inc
sub
inc
push
loope
or
std
clc
test
andl
mov
jae
push
es
dec
and
fcos
stc
adc
mov
mov
push
jmp
and
jbe
dec
pop
mov
fcomps
mov
fcomp
nop
jge
mov
lret
or
pop
ret
push
call
mov
sub
mov
and
shll
cmp
add
fcomps
in
std
sub
pop
cld
mov
gs
cmpl
and
dec
add
sub
xor
inc
inc
xor
test
fistpll
xchg
aas
jno
ds
fisttpl
dec
cmp
push
outsb
test
repz
shl
arpl
sbb
fcmovnb
mov
ret
pop
xchg
arpl
out
xchg
mov
or
mov
or
mov
aam
shll
sarb
rorb
pop
clc
sbb
jmp
adc
mov
cld
test
outsb
and
and
in
jmp
fwait
daa
sbb
mov
push
cltd
or
scas
add
hlt
int
jb
cmpxchg
pop
xchg
aad
sub
jmp
insb
pop
pop
mov
stos
push
sbb
das
rol
xchg
stc
mov
invd
clc
dec
pop
stc
fsubrl
pop
pop
pop
lods
xchg
push
in
arpl
cmc
mov
in
sub
xlat
xchg
and
mov
pushf
jmp
subb
aad
inc
xor
push
mov
int3
xlat
addl
rclb
or
xchg
popf
mov
test
mov
jne
dec
bound
psllq
add
cmp
pusha
movsb
addr16
lcall
daa
pop
jne
sbb
popa
cmc
stc
pop
or
adc
mov
jne
jne
mov
iret
call
cmp
and
jle
sub
sbb
rorb
popf
js
cmpsb
ja
fdivr
pushf
or
xchg
push
mov
mov
divps
xorl
in
sub
add
sub
mov
pop
cmp
insb
lcall
movsl
gs
mov
ss
sahf
int3
mov
cmpl
dec
rcl
data16
add
add
movsb
imul
pop
arpl
shll
inc
mov
jbe
out
sub
mov
imul
fisttps
imul
pop
cltd
jle,pn
decb
pop
addr16
jmp
inc
pusha
in
fdiv
push
pop
sbb
and
cmp
fistpll
dec
in
jg
mov
mov
sbb
pusha
repnz
xchg
xchg
sbb
mov
loope
push
outsl
hlt
stc
aam
fs
repz
out
jne
hlt
and
stc
fwait
rcrl
jo
sub
jge
lcall
mov
lock
jmp
pop
sbb
sub
push
sub
and
fsubrs
pop
inc
fimuls
add
pop
shlb
pop
aaa
push
scas
fwait
and
sub
enter
mov
addr16
pop
out
dec
xchg
mov
or
fistpl
xor
cs
out
mov
or
jmp
add
jmp
rcrl
adc
fldt
mov
jmp
pop
mov
sub
xchg
jae
notl
pop
pusha
add
sub
sub
xor
sub
lcall
xor
rep
mov
sub
fwait
jle
cmp
popf
cli
shlb
pop
in
arpl
lret
stos
ljmp
mov
jns
mov
cld
loopne
jl
lret
adc
rorl
pushf
stc
cld
xchg
or
inc
or
lret
lcall
xchg
sbb
aaa
imul
push
andb
repz
jbe
test
add
inc
out
cmp
xor
aam
outsl
xor
mov
sbb
sub
add
test
data16
cmpb
mov
or
addr16
sti
sbb
jg
shlb
mov
mov
sbb
outsl
pop
jne
jmp
fldenv
mov
faddl
loop
cmp
cmpsl
shlb
jge
dec
push
jecxz
mov
shr
insl
and
adc
cmpsb
mov
out
and
push
push
test
in
arpl
call
mov
aaa
sbb
jp
pop
sbb
dec
loope
rolb
clc
ljmp
scas
outsb
mov
sahf
ficompl
aam
push
jae
imul
fcoms
push
sub
xchg
ljmp
shr
jae
test
call
scas
lock
mov
scas
shlb
adc
pop
mov
add
dec
sub
or
bnd
push
nop
popf
sbb
sbb
or
jae
or
lret
stos
jnp
sub
cmp
dec
fstps
inc
mov
dec
cwtl
clc
pop
fsts
push
xchg
add
aam
subb
xor
arpl
mov
push
popf
fists
cld
popf
cmp
out
fiaddl
pop
out
jno
cltd
cmc
push
dec
dec
add
cmp
adc
mov
into
ss
and
leave
rcrl
mov
mov
adc
repz
scas
jmp
pop
insb
inc
xchg
gs
cwtl
jne
rcrb
xchg
inc
mov
es
adc
xchg
mov
fdivrs
sub
call
pop
jecxz
in
mov
mov
push
dec
or
push
mov
mov
mov
cmp
pop
addr16
cmp
call
or
fnstcw
pop
mov
fsubrs
lret
cmc
push
les
dec
mov
hlt
mov
outsl
sub
mov
pop
pop
cli
and
loopne
fistps
or
jb
dec
push
adc
sti
cmc
mov
lods
xchg
add
out
ret
repz
es
jb
mov
test
adc
fidivs
or
addr16
jbe
or
mov
and
sub
adc
jp
sbb
mov
inc
cmp
adc
dec
test
add
lods
push
jge
xlat
jmp
mov
mov
add
dec
pop
sub
push
aaa
cs
and
pop
jo
mov
push
mov
jge
ss
out
mov
scas
sub
jbe
or
clc
cmp
ret
repz
jmp
cmp
pop
test
sbb
int
sub
mov
jbe
call
pop
adc
sbb
mov
lds
and
and
inc
fadds
mov
and
add
fmul
sub
or
test
test
push
dec
lock
cmc
pop
std
pop
cmpsl
rcrl
popf
mov
cld
ret
and
sbb
sar
push
xor
js
cld
in
sbbl
cmp
js
movsl
test
lret
push
shll
mov
stos
out
jmp
cmpsl
cmpsb
sbb
test
mov
or
daa
stc
add
xchg
pop
cmp
jp
xor
mov
and
adc
or
popf
push
xor
or
aaa
inc
mov
daa
fistpl
sarb
adc
push
aaa
cmp
cmp
add
sti
mov
pop
pop
mov
mov
push
inc
xchg
js
call
fmull
lcall
and
push
jecxz
and
mov
icebp
push
mov
push
xor
mov
mov
lds
push
or
leave
jae
fwait
imul
xchg
dec
es
clc
fbld
adc
std
or
jl
mov
jg
mov
rcr
call
jo
icebp
js
jmp
xchg
lock
mov
test
adc
enter
stos
adc
xchg
or
cmc
iret
xor
or
jae
sbb
aas
in
rolb
mov
cmp
cld
pop
cwtl
inc
cmp
popa
mov
mov
and
movsl
xchg
jno
sbb
clc
sub
add
sub
outsb
or
and
cmp
pusha
lret
fbld
mov
int
into
mov
pop
repz
shlb
ret
mov
outsl
stos
in
mov
inc
jp
mov
cmp
fnstcw
mov
xlat
inc
es
loop
ljmp
ror
and
mov
sahf
push
clc
cmp
and
jbe
cmp
mov
fstps
add
aam
add
imul
and
or
roll
xchg
int3
cld
fildll
out
sub
add
dec
or
jle
pop
data16
cmovs
add
enter
ja
scas
mov
push
loopne
mov
mov
cmpsb
adc
stos
and
sbb
in
stos
mov
movsl
fsubs
lock
or
pop
mov
dec
and
mov
outsl
push
mov
addr16
sbb
sbb
or
jg
filds
pop
xchg
fbld
pop
xor
sbb
dec
push
das
test
lret
ret
out
or
int
lret
sbbl
or
out
pop
fmuls
fadds
sbb
sbb
and
cli
fsubr
pop
xchg
filds
es
xchg
andb
mov
push
out
shl
jp
sbb
mov
inc
lds
xchg
cmpsl
shll
and
push
repz
mov
pop
xchg
mov
push
jne
bound
dec
sbbb
imul
sarb
sbb
push
jns
popa
sub
pop
loopne
push
xchg
mov
push
outsl
test
add
aaa
sub
out
add
mov
outsb
dec
fwait
lods
out
hlt
push
mov
pusha
pop
loopne
ss
aaa
movhps
jne
stos
push
out
push
cmp
int3
or
subb
es
rclb
and
adc
mov
pusha
add
cwtl
pop
or
lcall
xchg
or
cmp
ret
mov
dec
mov
lahf
scas
iret
sub
mov
stc
sbb
aaa
ds
dec
inc
push
shll
xor
xor
push
pop
push
or
jb
aam
in
aas
jmp
dec
fcoml
gs
repnz
push
in
and
adcb
dec
into
mov
and
cmp
clc
fs
addr16
popa
add
xor
mov
jno
mov
lahf
push
adc
and
inc
adc
sti
enter
subb
aaa
das
push
imull
xor
xchg
dec
mov
outsl
ja
fs
pop
inc
mov
sti
fwait
call
cmp
das
push
xchg
and
sbb
jecxz
outsl
in
pop
je
sbb
insb
jne
cmp
pushf
adc
dec
mov
lcall
push
ja,pt
imul
cmpsl
xor
out
xor
scas
mov
mov
sbb
pop
jne
lcall
mov
add
dec
imul
sub
pop
adc
pop
sub
out
loop
jnp
and
in
enter
cs
inc
addr16
cld
dec
cltd
jl
popa
pop
leave
cmp
inc
into
out
fisubrs
fildll
imul
das
pop
pop
iret
jge
jne
xchg
pop
sbb
rcll
dec
fdivs
adc
cmpsl
jp
mov
loop
cs
add
xchg
jnp
push
das
mov
gs
outsl
fsts
inc
mov
xchg
fisttpl
movsl
outsb
lea
pusha
fcmovbe
imul
add
jne
xchg
cs
push
in
and
decl
addr16
aaa
int3
cmp
push
addr16
and
or
push
jns
jbe
addr16
dec
xlat
cmpb
daa
inc
inc
fmull
pop
sahf
das
outsb
fildll
xor
in
dec
mov
fwait
mov
push
inc
out
cmp
popf
pop
xchg
mov
jge
test
sti
fiaddl
clc
mov
jns
add
sbb
fsubl
mov
scas
sub
dec
and
xor
push
cmp
hlt
data16
pop
scas
sub
xchg
mov
jmp
jp
sbb
dec
and
jno
and
sub
idivb
sub
fisubl
adc
push
shrb
jae
pop
sarb
int
fadds
negl
sub
sub
pop
arpl
cmp
daa
pop
jecxz
pushf
call
ljmp
insb
and
sarb
dec
jmp
fs
pop
adc
ret
mov
int
call
movsb
add
and
and
sti
mov
mov
sbb
roll
and
jmp
add
mov
loope
or
adc
mov
mov
cli
adc
andb
shr
xor
shr
dec
push
cmpsb
out
ljmp
pop
mov
sbb
das
add
mov
outsl
mov
test
pop
roll
aaa
cmpsb
lds
decl
clc
dec
imul
add
or
jb
ja
sub
xchg
and
arpl
and
aad
int3
repnz
jecxz
inc
dec
add
test
add
adc
rcll
push
or
xor
jbe
or
sub
repnz
int
mov
sbb
push
ljmp
dec
mov
fistl
add
push
sub
sbb
rcrb
scas
xchg
daa
mov
daa
mov
sub
cs
mov
inc
jnp
je
lret
cltd
xchg
insl
pop
fidivrl
dec
sbb
es
shll
push
inc
jg
iret
lret
into
insb
xor
popa
mov
iret
movsl
mov
push
mov
das
mov
stc
mov
sbb
or
js
add
loopne
pop
insl
notb
testl
scas
mov
sub
pop
loopne
clc
arpl
add
mov
mov
sbb
andl
icebp
pop
aam
cmp
cmpsl
xor
or
insb
std
mov
loop
sub
cmpsl
sbb
inc
comiss
sbb
sti
pop
or
je
or
push
sarl
cmp
or
push
xchg
jnp
sub
push
xchg
aas
pop
hlt
scas
jae
cld
shlb
sahf
inc
jmp
jge
add
push
pop
in
insb
push
xchg
inc
daa
mov
fwait
jmp
sub
fidivl
jmp
mov
xchg
das
ret
movsb
jg
pop
sub
in
mov
fdivl
je
mov
adc
mov
xchg
imul
sub
cs
pop
cld
push
pushf
fcoml
sub
test
lea
cmp
test
loop
hlt
std
imul
clc
jbe
loopne
jmp
mov
std
js
pop
jne
jnp
and
jecxz
adc
nop
mov
push
jno
rolb
jne
into
pushf
inc
xor
packuswb
push
push
out
jg
daa
mov
dec
dec
cmp
mov
xchg
jle
jp
aam
cld
cmp
push
aad
jo
pop
inc
sub
shlb
push
add
fisttpll
mov
fistps
cmp
cs
inc
cld
in
imul
gs
ret
cmp
inc
cs
dec
sub
mov
mov
mov
jo
data16
neg
outsl
mov
cli
inc
insl
sub
aaa
sub
inc
push
push
insb
mov
push
mov
loop
cmp
sbb
jne
leave
call
jmp
lock
push
pop
dec
or
nop
xchg
sbb
push
aaa
sbb
lods
xchg
mov
mov
mov
jp
mov
aam
out
jp
and
pop
insl
outsl
ja
cmp
sub
mov
pop
sbb
and
adc
pop
xor
into
test
ja
cld
repnz
cmp
pop
aaa
andl
xchg
scas
bound
int3
cmp
shlb
sbb
add
jge
movsb
rolb
or
ret
loopne
pop
enter
sbb
nop
stos
in
jg
mov
sub
shrl
stos
xchg
and
push
pushf
inc
dec
pop
dec
mov
jno
call
icebp
fcoms
sti
pusha
mov
mov
pop
ret
adc
pop
sbb
push
aam
jge
inc
dec
mov
scas
jl
or
cmpsl
mov
or
pop
fstps
clc
pop
xchg
mov
mov
imul
mov
push
ds
dec
cmp
xchg
gs
fcmovu
pop
push
mov
sahf
icebp
cli
cmpsl
inc
mov
aaa
or
cwtl
adc
fistps
sbb
pop
call
das
push
adc
sub
fwait
cmp
aad
lcall
or
mov
mov
push
pshufw
pop
daa
hlt
cmpsb
xchg
shlb
push
xchg
push
repnz
jno
xor
cwtl
addr16
lcall
scas
pop
pop
call
mov
fnstsw
sbb
fdivrs
or
syscall
mov
sub
out
inc
setle
push
cli
addr16
xchg
cmp
mov
aad
add
pop
lods
mov
jne
adc
or
fnstenv
add
fildl
add
jle
adc
sub
xchg
pop
xchg
lahf
dec
jne
mov
dec
pop
jle
sbb
in
leave
push
pop
call
sbb
imul
insb
daa
dec
popa
fldt
enter
lahf
inc
pop
pop
jge
adc
test
fisttpll
cmp
add
lock
lea
in
sub
lds
mov
popf
out
push
xchg
dec
sbb
jle
xchg
mov
cmpsl
mov
or
push
popa
cmc
pop
mov
pusha
leave
mov
mov
push
orl
call
xor
mov
mov
idivl
push
mov
push
icebp
pop
push
sub
dec
fnstsw
push
pushf
imul
xchg
jo
inc
mov
lret
pop
call
jno
and
sub
push
mov
fcomps
mov
cmp
ja
aad
push
sahf
sbb
adc
dec
orl
out
cltd
loop
xchg
addb
inc
outsl
add
imul
out
rcll
movsl
jne
ljmp
pop
sbb
cwtl
pop
mov
pop
pushf
sti
stos
out
out
xchg
or
je
jbe
shl
movsb
insb
pop
sub
enter
cwtl
pop
and
pop
daa
or
test
jnp
mov
push
mov
loope
jg
sbb
pop
fldpi
mov
dec
cmc
int
pushf
adc
push
stos
dec
ficoml
pop
and
pop
xchg
aad
js
jmp
jge
cld
clc
add
pusha
loopne
add
jnp
out
fs
sbb
mov
cli
vphsubdq
lock
fisubs
fldenv
imul
int3
stc
mov
push
scas
mov
mov
cmp
xorb
mov
jne
mov
dec
dec
pop
icebp
insl
scas
cmp
cs
ret
cltd
decb
je
inc
inc
js
cmovo
inc
xor
aaa
mov
out
push
in
fs
cmp
in
movsbl
icebp
jmp
jge
imul
mov
loopne
pop
adc
mov
pop
repz
jb
stos
adc
arpl
cltd
jb
shl
inc
gs
sub
pop
lea
mov
mov
lret
loop
aaa
inc
sub
sbb
xor
dec
mov
mov
or
ljmp
lret
inc
mov
cmp
push
mov
or
lock
addr16
in
js
add
aad
gs
jne
mov
xchg
ret
shl
rorb
mov
push
mov
shll
iret
sub
dec
push
xchg
dec
int3
jecxz
jne
pop
add
out
and
dec
addr16
adc
adc
aaa
ja
outsl
sahf
xor
cmp
xor
call
and
fs
xor
lret
fs
inc
adc
sbb
jle
mov
aad
lcall
dec
lret
cltd
push
out
cmp
push
shlb
pop
stos
jmp
cmp
sub
xchg
pop
adc
mov
xor
aaa
mov
sahf
sub
ja
into
fsub
xor
and
popl
jns
mov
ja
sub
xchg
aam
and
adc
mov
std
sub
xchg
xchg
movsb
jl
mov
loopne
mov
jno
mov
leave
out
scas
sbb
jge
stos
test
and
ja
scas
loopne
mov
aaa
and
sti
pushf
out
neg
sahf
xchg
sub
scas
xchg
pop
xchg
or
mov
mov
shll
pop
sub
sbb
inc
pop
push
hlt
or
stc
outsl
cmp
ss
cs
xchg
loop
daa
mov
loopne
sub
pop
jne
in
test
or
call
enter
nop
fsubrs
cmp
in
and
sub
jae
xor
lods
jl
cmpsl
dec
lds
lcall
insl
es
fcoml
sub
test
lds
iret
out
cmp
dec
mov
movsb
cmp
inc
test
sub
push
xor
inc
scas
xor
and
cmpsl
and
sbbl
data16
scas
jae
loope
lods
and
mov
clc
xchg
clc
fdivs
roll
pop
or
inc
insl
iret
scas
bound
ja
testl
push
sbb
fcomip
mov
or
xchg
stc
mov
gs
inc
dec
jno
push
lret
imull
fcomps
out
jbe
xor
push
ficomps
in
ftst
pusha
mov
inc
push
imull
lahf
shll
pop
mov
fwait
xchg
mov
add
shr
mov
sub
inc
arpl
mov
dec
jne
imul
or
inc
jmp
sahf
dec
out
negl
dec
insl
mov
ror
push
test
in
hlt
shlb
cmpsl
bound
dec
call
jne
xor
icebp
push
mov
push
fisttps
adc
xchg
je
or
gs
test
movups
fidivrl
xor
addr16
sar
jo
outsl
add
insl
cmpsb
jecxz
fwait
call
adc
aaa
inc
call
xor
fsubrs
aaa
arpl
mov
out
repz
add
insb
gs
sbb
faddp
dec
pop
sub
or
pop
fisttps
lds
test
pop
push
sbb
cmpsb
push
sub
cmpsb
push
xlat
repz
cld
pop
arpl
pop
or
mov
xchg
andb
test
pop
popfw
addr16
sub
xchg
addr16
imul
inc
add
mov
mov
sbb
push
lcall
mov
add
arpl
cmp
mov
bound
dec
xchg
es
dec
fmuls
add
pusha
mov
stc
xchg
jno
xlat
or
sti
xchg
popf
push
fldenv
clc
xchg
mov
xor
xchg
dec
sub
sub
movsl
ds
xlat
rcr
inc
scas
pop
jae
and
loope
outsl
clc
pcmpeqd
mov
mov
rcrb
in
or
dec
ret
add
dec
lcall
or
or
insb
or
mov
rclb
mov
xchg
jnp
cmp
inc
dec
stos
sub
xchg
push
sub
bound
mov
dec
rcrl
arpl
cmp
bound
fisubrl
jge
add
gs
pop
adc
and
add
aaa
popf
fsubr
xchg
in
sbb
test
lds
pop
jo
leave
mov
inc
in
fcoml
jmp
cmp
sbb
fcomps
push
lahf
fwait
shlb
cmp
into
into
push
out
dec
sbb
stos
imul
jne
fmuls
add
xchg
push
add
cltd
mov
mov
out
cmp
xor
int3
movb
sar
sbb
lahf
ficoml
movsb
sub
mov
pop
mov
jge
jb
push
dec
and
pop
jne
cltd
add
call
popa
xchg
and
inc
hlt
movl
xchg
and
xchg
add
dec
push
add
arpl
insl
push
imul
push
pop
out
or
call
pop
lcall
sbb
sub
imul
push
in
xor
addr16
push
pop
iret
ljmp
lret
loop
lds
mov
loopne
inc
or
int3
out
mov
loop
add
nop
mov
adcb
xchg
daa
mov
sahf
adc
jo
or
xlat
mov
jo
fs
notl
sbb
mov
popf
mov
sbb
stos
testl
mov
daa
sub
cmc
addr16
aam
repz
jns
or
push
popf
das
inc
mov
push
pinsrw
int
jp
fildl
cmpsl
fisubl
jno
outsl
pop
pop
paddusw
je
jae
push
pop
xor
pop
jno
pop
mov
mov
jmp
mov
or
ret
xchg
jbe
adc
push
imul
in
cmp
ljmp
data16
insb
xor
jmp
xor
cmp
icebp
loope
cmp
push
push
sahf
mov
ficoms
cs
mov
sti
push
movsw
push
aaa
fdivr
out
xchg
or
and
loope
bound
jbe
popa
lods
add
or
xor
jmp
clc
jo
daa
in
and
inc
lea
in
dec
pop
xchg
test
jmp
lret
pop
ret
sub
adc
minps
xor
sbb
scas
xor
dec
cld
cmp
pop
jmp
jno
test
cmp
or
fs
movsb
cmp
clc
and
loop
xchg
jb
pop
cmpsb
pavgb
testb
sti
stos
inc
xchg
push
cs
pusha
mov
pop
and
imul
mov
jne
imul
or
aas
aas
dec
loop
stc
mul
sub
clc
jbe
adc
or
lahf
push
xor
faddl
mov
test
lds
pop
jnp
mov
xor
int3
jl
inc
sbb
inc
cld
mov
adc
jae
mov
lcall
jmp
push
push
imul
out
clc
gs
dec
cmp
push
sti
and
sbb
and
or
pop
mov
movsl
mov
add
mull
sub
jle
mov
out
je
jns
xchg
pop
inc
outsl
cmp
loop
push
push
fistl
int3
pop
outsl
push
xchg
sub
pop
mov
inc
arpl
fsts
ret
aaa
jmp
popf
outsl
jge
mov
mov
fadd
mov
pop
out
fisubl
out
shll
dec
outsl
push
sbb
ficomps
dec
mov
lods
push
out
lock
je
fsubs
sbb
dec
fsubs
mov
dec
adc
fmulp
aas
scas
sbb
ja
insb
push
mov
mov
add
or
in
push
pop
adc
loopne
add
stc
fidivl
jns
out
cli
jge
in
and
dec
sbb
xchg
adc
adc
add
push
jae
das
push
mov
icebp
lahf
xchg
jl
mov
inc
push
pop
nop
pop
fldl
jg
arpl
aaa
hlt
push
sbb
pop
mov
addr16
adc
fstps
in
lods
push
andb
or
push
mov
mov
lock
lods
jbe
daa
mov
push
stos
or
lret
adc
sbb
mov
ds
dec
sub
lods
les
xchg
dec
pop
popf
dec
or
shrl
jp,pt
mov
imul
mov
jge
or
dec
insl
mov
decb
ds
mov
std
mov
sbb
out
cld
cwtl
cwtl
hlt
sbb
jae
nop
imul
shl
adc
xor
outsb
das
xchg
fptan
jecxz
pop
cmp
loop
jmp
outsl
pop
iret
lock
sub
lock
add
lret
cmpl
adc
pop
mov
arpl
popa
enter
fdivl
mov
or
push
jmp
pop
mov
lcall
mov
inc
mov
and
or
xchg
sbb
pop
mov
out
mov
fcomps
ljmp
or
mov
mov
call
jae
cmp
pusha
fldl
addb
fildl
test
dec
movsl
arpl
jbe
dec
fiaddl
or
ja
loope
rcrl
sti
test
scas
push
jb
fcmove
adc
xor
mov
xor
add
pop
sub
sbb
fists
fidivl
pusha
mov
call
out
ret
xchg
out
out
daa
xchg
je
ljmp
and
fadds
aaa
sbbb
int
loop
ja
fwait
insl
std
fadd
cld
mov
stos
aam
test
stos
sbb
popf
loope
or
or
outsl
fsubrs
cmp
dec
mov
cmp
or
cmp
jmp
xchg
mov
pop
push
enter
push
push
ja
in
fsubp
ljmp
das
add
mov
jno
mov
jmp
and
cwtl
loopne
out
imul
setl
call
pop
in
cli
sbb
sbb
lock
sub
enter
pop
push
add
pop
fldpi
rcrl
int3
lock
stc
lock
outsl
and
sbbb
or
jl
dec
jae
fdivrs
stos
sbb
pop
xchg
addr16
or
test
fistpll
fnsave
jb
data16
in
xorps
pop
insb
mulb
jo
addr16
pusha
add
pop
inc
pusha
inc
fnstcw
mov
push
push
fwait
gs
sbb
outsl
lods
lahf
repnz
jg
mov
call
out
fstps
xchg
inc
fmuls
push
add
sub
popf
mov
sti
jo
push
daa
int
mov
adc
fldcw
addr16
cmpsl
dec
sbb
cmp
jp
push
std
dec
fwait
sti
sbb
int3
das
out
inc
movsb
mov
cmp
addr16
mov
jmp
out
add
pop
push
fwait
pop
repnz
les
call
clc
testl
in
pop
std
lock
jne
sbb
fldt
add
fcmovnu
push
xchg
and
ffreep
pop
or
fnstcw
rorb
cmc
aaa
or
movsb
sub
pop
mov
das
test
ljmp
sub
dec
add
cmp
pop
fldt
cmp
jg
out
lret
fucomip
hlt
lock
and
movsb
inc
pop
sub
ljmp
data16
pop
push
jmp
sub
pop
dec
push
adc
mov
lcall
loopne
data16
and
lret
fstps
add
lcall
addr16
pop
pop
pop
rcrl
xor
mov
stos
or
xor
dec
add
negl
xor
pop
sbb
xchg
iret
pusha
fdivl
sti
int3
mov
mov
or
push
pop
loop
jbe
jge
fiaddl
lahf
out
ljmp
dec
ret
xor
mov
jge
cmc
into
adc
lahf
jecxz
jne
arpl
lahf
adc
xchg
outsl
je
loope
ret
inc
push
in
ret
movsl
sub
pop
cmp
in
push
cmp
pop
arpl
or
arpl
fsubs
jbe
cwtl
fiaddl
pop
add
sbb
xor
push
fisttpl
and
or
popf
cmp
in
lods
sub
int3
cld
lds
inc
insl
mov
fisttpl
add
hlt
out
pop
lret
gs
mov
inc
or
push
aas
mov
outsb
out
mov
arpl
cli
adc
fistps
dec
push
lods
mov
sbb
jb
push
sub
fbstp
mov
in
adc
fstl
dec
ljmp
ret
scas
call
std
ret
adc
das
stos
mov
pushl
dec
jecxz
cld
jge
cmpsl
xorl
imul
or
sbb
mov
pop
adc
clc
mull
in
jge
jecxz
cmp
fsubs
cmc
mov
add
pop
and
daa
repz
dec
iret
lock
push
push
iret
rcrb
out
jmp
adcb
inc
xchg
add
shr
fnsave
leave
xchg
xlat
jmp
mov
arpl
mov
loope
ja
add
dec
xchg
arpl
data16
ja
add
sbb
lock
sub
mov
scas
loop
dec
fistps
imul
xor
mov
add
adc
or
and
and
addr16
mov
lock
jnp
pusha
or
jmp
sbb
fldt
and
stos
mov
es
pop
fildll
jge
dec
insb
pushf
stc
outsb
sbb
mov
addr16
sbb
sbb
push
push
pop
mov
fistpl
call
sbb
outsl
ret
adc
mov
arpl
lock
cmc
fwait
cs
adc
scas
popa
arpl
lock
cmp
sbb
adc
leave
ds
jmp
pop
dec
out
outsl
call
in
fstps
arpl
push
enter
add
addr16
push
pop
sub
mov
in
in
mov
cmp
dec
push
pop
ja
cmc
in
cs
popf
pusha
jmp
sub
push
sbb
mov
fbld
mov
cmpsl
nop
jcxz
pop
add
int
sbb
jne
xor
mov
cmp
cs
sub
jbe
stos
cmpsl
fnsave
sbb
lret
or
imul
mov
mov
pop
jmp
clc
fdivr
cmp
cli
pop
clc
test
std
popf
pop
push
int
mov
jle
pop
push
cmc
fisubrs
negl
fdivrs
ja
stos
dec
pop
and
fiadds
cmp
dec
insl
push
insb
lcall
push
sbb
fisubrs
push
pop
ds
dec
push
scas
sbb
pop
inc
in
or
mov
cld
pop
and
frstor
pop
or
add
mov
adc
shll
mov
movsl
adc
sbb
insb
pop
push
incl
sbb
negl
dec
mov
mov
pop
or
in
fcompl
or
pop
jb
sub
jmp
adc
lods
cmp
fdivrp
lret
dec
mov
dec
rcr
pop
jno
fcoml
cmp
sbb
les
push
lock
fstps
aam
dec
setp
xchg
sub
cmp
sbb
jp
cltd
cmp
les
xchg
pop
or
adc
icebp
pop
xor
fwait
cmp
mov
cmp
pop
cmp
xor
jp
fdivrs
inc
fprem1
je
jl
rolb
addr16
in
pop
or
adc
ds
jmp
andl
imul
loop
mov
or
lea
decb
cmp
sbb
jnp
add
roll
sub
push
lods
movsb
or
notb
fistps
add
dec
jb
pop
or
addr16
cmp
sbb
push
lods
xor
fildll
pusha
push
les
mov
jbe
sub
xor
imul
mov
mov
mov
lea
or
subl
leave
jge
cmp
xchg
xchg
dec
jle
jmp
push
loope
dec
int
cmp
fstl
push
lret
ljmp
fdivs
repnz
fprem
fcmovnb
pop
call
sti
test
stos
aas
dec
adc
sbb
sub
sub
jnp
popf
pop
push
mov
fldenv
pop
clc
sbb
negl
pop
inc
xlat
in
aas
xchg
fsubs
mov
arpl
push
inc
fdiv
in
outsb
or
mov
dec
cmpsb
rsqrtps
xchg
imul
sbb
push
lods
popa
mov
fwait
daa
pop
add
inc
push
sbb
fstl
pop
sbb
lcall
sbb
mov
inc
outsl
mov
jnp
pop
and
stos
sub
dec
fsubrp
cli
lods
mov
pop
mov
call
outsl
sar
sbb
iret
lock
scas
sbb
lahf
sbb
pop
loopne
out
pop
cld
adc
ret
call
mov
pop
mov
inc
stc
rcrb
fcomps
filds
dec
xchg
in
rolb
cmp
sbb
sub
call
pop
jae
pop
pusha
inc
jp
movsl
in
cs
in
pop
test
pop
or
jp
sbb
sarb
xchg
std
xchg
arpl
loopne
imul
jnp
subb
fiaddl
pop
jae
cmp
sbbl
outsb
or
lods
pop
cmp
or
fisubrl
jbe
xchg
stos
mov
and
cltd
push
push
dec
mov
adc
jmp
fmull
mov
cmpsb
and
cli
jmp
or
pop
mov
fildll
cmc
lea
lods
sahf
sbb
push
outsl
pop
int3
in
mov
dec
outsl
data16
cmpb
ret
jle
cwtl
insb
outsl
pop
xor
cmp
fwait
mulb
push
scas
jle
push
fisubs
das
sbb
ja
popl
pop
add
sub
xor
adc
xadd
idivl
shrb
mov
sub
pop
cmp
aam
push
lea
testl
data16
cmp
fcoml
jg
outsl
fisubrl
fldcw
mov
out
mov
mov
sub
add
adc
and
cmpsl
fwait
sbb
call
pop
roll
push
push
in
fimuls
mov
shll
mov
dec
loopne
push
mov
cwtl
cltd
repz
jae
xchg
repz
jns
pop
es
scas
scas
data16
adc
jge
popw
fisubs
pop
jno
sbb
ret
repz
fcoms
outsl
cmpb
jnp
fnstsw
mov
xchg
mov
push
fildl
push
sub
ja
jge
push
in
add
or
xchg
add
out
mov
pushf
sbb
fstpt
mov
sbb
rorb
cs
xor
jmp
scas
sub
cld
inc
push
lods
sahf
pop
shl
push
mov
in
icebp
jbe
pop
sbb
adc
jns
adc
and
in
xchg
decl
jge
ja
xchg
pop
out
rorb
add
sti
lret
cmpsb
fs
insb
das
xchg
and
mull
lds
fmulp
out
jo
insb
sub
mov
mov
jbe
xchg
add
addr16
push
cmp
xchg
por
add
xchg
lahf
jg
mov
pop
fstpt
jb
inc
icebp
mov
mov
xchg
rcll
rcll
pop
ret
dec
arpl
push
sbb
es
gs
push
push
inc
aam
sahf
xchg
jne
imull
add
push
fistps
data16
mov
std
cwtl
or
loope
xor
dec
sbb
and
dec
aam
mov
push
mov
push
fisttpll
dec
cltd
orb
pop
push
lret
xchg
jmp
arpl
cld
push
mov
pop
cmp
int3
adc
mov
pop
sbb
jnp
pop
pop
sub
test
bswap
cltd
fistl
scas
fs
gs
xchg
divl
aaa
push
imul
cmp
sti
xchg
pop
and
push
add
adc
clc
fisttpl
sahf
loope
jge
pop
lahf
pop
push
sub
lahf
cmpsl
jns
mov
lods
out
fwait
shrb
in
jbe
subl
cmp
inc
adc
xchg
icebp
leave
add
sbb
sahf
pop
std
aaa
pop
xchg
imul
and
repz
dec
pop
jae
cwtl
xchg
sub
sbb
aaa
sbb
pop
push
aaa
xorb
imul
cltd
or
insb
inc
sub
call
insl
xor
and
maxps
and
add
ja
in
sub
gs
repnz
mov
pop
adc
orl
adc
mov
mov
imul
xchg
loop
sbb
mov
sbb
jae
ljmp
jnp
adc
dec
dec
xor
call
dec
mov
lods
out
push
fimull
fnstenv
push
inc
fisubs
push
pop
mov
mov
and
stos
dec
push
shlb
ljmp
xchg
push
pop
maskmovq
imull
pop
and
xor
fdivs
loopne
or
out
sub
push
mov
mov
mov
jecxz
neg
ja
dec
jb
std
pop
lahf
imul
and
pop
push
fistpl
sub
sub
mov
sbb
js
lock
mov
push
xchg
or
mov
gs
xor
pop
loopne
add
fcoml
addr16
or
sub
jae
rcrl
add
sti
scas
push
mov
cs
incb
in
pop
push
dec
jne
adc
jnp
les
sub
sub
gs
pop
pop
xchg
sbb
add
adc
mov
fisttpl
fsubl
sbbl
sbb
out
cmpsb
pop
test
adc
mov
cs
pop
sub
addr16
sbb
insl
mov
call
xor
push
gs
test
into
xchg
std
cmp
add
fcmovnbe
xchg
repz
testl
outsl
xor
adc
jne
imulb
dec
jo
pop
xchg
jb
arpl
arpl
fs
xchg
decl
pand
xchg
pop
test
mov
push
jo
sarb
testb
mov
xor
push
mov
cs
lcall
fwait
mov
push
loop
andb
mov
popf
jne
sbb
setge
lret
and
fistl
gs
fsubp
hlt
dec
sub
pop
fisubs
mov
add
sub
jle
lock
pop
inc
mov
push
addl
insb
pop
inc
ret
fstps
jbe
sbb
js
jo
cwtl
call
or
mov
test
push
xor
xchg
ja
out
and
call
jge
ficoml
add
mov
pop
jno
pop
repnz
push
cwtl
hlt
cmpsl
xchg
js
sbb
gs
sbb
or
pop
gs
scas
dec
mov
push
stc
sbb
ss
neg
and
mov
xchg
in
or
cwtl
dec
out
inc
pop
into
loope
mov
or
js
cmp
mov
negb
inc
xor
inc
push
std
jecxz
in
pop
cli
sbb
jae
enter
out
inc
fistpl
inc
mov
pop
out
mov
fisubl
movsb
cmpsb
sbb
cs
test
cmc
clc
or
data16
pop
shl
fnstenv
sbb
test
push
adc
jle
outsl
dec
dec
jl
insb
inc
pop
or
je
pop
out
dec
gs
dec
mov
cwtl
xchg
mov
mov
stos
cmpsb
push
jecxz
xchg
sub
insl
jge
jle
jl
addl
and
sbbb
mov
and
in
sbb
aaa
lcall
in
pop
fmul
and
arpl
pop
adc
iret
jmp
add
push
imul
mov
xor
mov
stc
and
push
inc
dec
ret
mov
sbb
and
data16
add
out
adc
adc
lea
sahf
es
in
fcomp
pusha
inc
sahf
data16
int3
sbb
bound
jmp
or
insl
jmp
pop
roll
or
pop
bound
cli
mov
push
aas
bound
inc
sti
aad
pop
pushl
cmp
dec
jmp
daa
fadd
data16
xor
and
cld
fcmovb
sti
int
push
dec
in
out
or
mov
mov
testl
jmp
lods
jle
stc
data16
sbb
mov
jge,pn
scas
cli
cmp
inc
jb
int
out
fsubs
add
daa
pop
mov
cmpsl
pop
icebp
insl
pop
dec
scas
outsb
pop
test
mov
sub
mov
and
fwait
sbb
js
mov
loopne
sbb
pushf
dec
insb
mov
ds
pop
scas
mov
ret
gs
out
test
idiv
ja
mov
or
pop
loop
cmpb
sub
sub
add
mov
outsl
mov
leave
push
inc
cmp
and
jmp
lods
inc
mov
cmp
hlt
dec
pop
adcl
adc
mov
ja
mov
and
adc
dec
sub
xchg
sbb
test
dec
push
clc
rol
mov
pushf
sbb
divl
jg,pt
sub
jp
imul
mov
lret
dec
jl
and
mov
xor
iret
daa
mov
add
loopne
gs
rcll
ficompl
pavgw
in
pop
lcall
gs
aaa
imul
bound
es
xor
mov
loopne
jae
jo
notl
pushf
dec
sub
push
stos
aad
xchg
sub
jno
inc
icebp
mov
push
lcall
adc
sbb
sti
mov
mov
adc
data16
fdivrl
in
lods
inc
jbe
cmp
pop
rorl
push
sub
xor
mov
inc
das
ljmp
jo
sbb
jp
test
xchg
adc
mov
sbb
xchg
pop
jmp
cld
fistpl
sbb
cwtl
sahf
sub
shrb
jne
mov
xchg
sub
in
fsubp
jnp
out
gs
lcall
cwtl
cmpsb
fnstcw
adc
jbe
mov
sbb
mov
and
dec
dec
fadd
mov
repz
xchg
ja
fisttpl
add
and
xor
dec
dec
rorl
sbb
mov
mov
lds
jno
xor
andl
mov
add
js
pop
pop
and
pop
loopne
ss
orb
pop
xor
sub
fcomps
pop
sti
push
arpl
jmp
into
fsubrs
cmp
xor
fwait
rcll
sti
ja
rcrl
or
sbb
adc
and
cmp
pop
jne
mov
lret
enter
or
add
xchg
and
ret
add
icebp
pop
imul
arpl
or
repnz
call
pop
or
std
imul
mov
mov
shrl
sti
mov
jae
insb
mov
xchg
fmuls
bound
mov
test
pop
and
xorl
adc
daa
jecxz
addl
xchg
mov
push
and
adc
sbb
dec
mov
les
dec
cmp
mov
dec
sbb
ja
inc
lcall
dec
dec
push
in
push
in
push
or
data16
mov
sti
addr16
sbb
scas
pop
mov
push
addr16
xor
notl
inc
xchg
push
fadds
mov
push
cmp
xor
add
orb
fcmovb
or
loopne
sub
fiaddl
adc
xchg
pop
pop
sub
and
in
cmpsb
movsl
cmp
mov
out
mov
adc
mov
sbb
inc
movswl
js
outsb
fadd
push
in
or
or
mov
or
sti
les
in
jp
or
or
scas
add
pop
xor
imul
mov
popa
pop
dec
loopne
mov
std
imul
xchg
xor
pop
cmp
xchg
jb
sub
ja
push
jne
test
test
jns
int
inc
repz
fpatan
add
fcomps
xchg
addl
mov
scas
clc
cmpsb
lock
imul
bnd
test
icebp
les
add
jp
into
loopne
mov
pop
sahf
jmp
into
fcomp
jecxz
jmp
or
cltd
lcall
ljmp
and
in
jge
xchg
lahf
push
bound
in
sub
xchg
inc
sahf
add
cmc
scas
outsl
fnstcw
aaa
cmp
inc
ja
push
ret
jle
mov
adc
ret
and
push
pop
or
scas
andb
cmc
leave
insb
jp
cmp
mov
in
mov
dec
sbb
pop
jo
adc
adc
mov
ss
sbb
sub
xchg
into
add
push
inc
daa
pop
test
addr16
imul
push
in
movswl
ret
addr16
sbb
movsl
jno
jle
xchg
jmp
or
sbb
loop
fcompl
jb
fldt
bound
mov
arpl
inc
inc
push
data16
gs
scas
sbb
ret
adcb
mov
mov
cmp
inc
or
sub
gs
xchg
daa
out
fcoml
scas
mov
in
xchg
loop
es
pop
arpl
in
sti
lcall
xchg
push
or
cltd
mov
push
lahf
cmp
push
push
jnp
gs
sbb
aad
sub
std
mov
cmpsl
loopnew
mov
lock
lcall
pop
sbb
es
fwait
mov
pop
dec
or
dec
outsb
push
inc
and
inc
mov
fldenv
and
insl
clc
cmp
lret
aas
lock
int3
data16
or
jae
in
mov
pop
rep
rcrl
mov
inc
popf
ja
jb
arpl
xchg
aaa
gs
push
pop
sbb
cmc
inc
xchg
and
mov
jae
pop
out
jo
nop/reserved
call
mov
pop
sub
inc
xor
addr16
inc
pop
xor
sar
iret
inc
scas
sbb
cmc
fnstsw
data16
pop
mov
sbb
in
movsl
ja
pusha
ja
loopne
fbstp
ficoms
mov
xchg
push
cmp
jnp
idivl
jecxz
leave
sarl
insl
xor
mov
ret
dec
and
cmp
out
sbb
test
ljmp
jl
aas
jecxz
pop
pop
push
sub
call
and
cwtl
outsl
aas
and
gs
hlt
mov
push
and
nop
cmp
andb
fdiv
lds
lahf
arpl
in
sbb
push
mov
jl
jo
iret
pop
and
fldt
xchg
jne
xchg
cmp
inc
push
sbbb
in
in
repnz
int
push
ja
clc
ret
gs
fwait
aad
sub
das
int3
lods
mov
arpl
or
mov
inc
dec
push
xchg
add
rcrl
out
ja
add
xchg
xchg
in
lcall
shll
pop
xchg
jl
arpl
aam
cmp
ja
mov
or
out
add
dec
and
dec
xchg
ja
xchg
sbb
cmp
das
cmp
mov
mov
lds
dec
dec
repz
fcmovb
xchg
sbbb
cmpsl
fcompl
jle
sub
sub
pop
or
test
jno
or
sbb
js
sbb
sbb
lahf
aad
cmp
jp
notl
cmpsl
out
sbb
negl
pop
jmp
stos
xchg
sahf
push
sub
addr16
push
or
pop
mov
sbb
das
jb
pop
ja
fimuls
or
mov
cwtl
bound
call
arpl
fwait
imul
aaa
ds
rcll
or
or
push
aas
mov
pop
ret
insb
out
push
pushf
xor
test
adc
jbe
push
in
sub
pop
filds
fisttpll
aaa
mov
js
sub
sub
pop
mov
dec
cmpsl
scas
pop
push
inc
mov
sbb
push
cmp
outsl
push
fucomip
gs
jbe
cld
adc
jno
pop
inc
fldenv
jg
and
push
push
lea
inc
andb
mov
xor
cmp
pop
cwtl
lcall
cmpsb
add
les
fcoms
jg
push
les
push
and
loop
sub
fs
iret
subl
adc
adc
inc
mov
icebp
mov
mov
stc
ss
shll
cwtl
movsb
sbb
bound
es
stos
out
in
mov
sub
stos
cmpsb
jno
jle
es
inc
outsl
cs
movsl
mov
mov
or
clc
jnp
shrb
and
sub
jge
and
shrl
callw
dec
repz
or
mov
jne
inc
mov
sbb
jo
mov
dec
ljmp
cmp
sub
fstp
iret
loopne
sbb
clc
inc
fsubl
dec
cmp
mov
sbb
stos
daa
add
xchg
add
mov
push
cmpsl
dec
mov
test
fmul
push
push
or
jnp
cltd
dec
icebp
jl
xor
inc
icebp
nop
push
xor
add
jp
pop
imul
lods
push
push
fwait
ja
es
mov
jae
push
nop
jp
rorl
outsl
pop
mov
pusha
pop
jne
inc
fisubl
insb
dec
test
sub
rorl
in
in
mov
push
jne
movsl
sbb
pop
lds
add
icebp
sbb
imul
add
pop
or
add
cmp
jg
jg
and
or
cmpsl
pop
mov
pop
cmp
dec
hlt
lcall
and
jl
aas
and
cmpsl
pop
pop
jne
int
xchg
lret
mov
ret
sarb
fwait
xchg
inc
dec
cmpsb
sbbl
mov
and
jb
or
scas
sbb
add
fadd
add
fisttps
outsl
mov
shll
das
add
dec
sahf
cld
jbe
pop
jb
arpl
mov
aaa
mov
push
leave
es
cmp
mov
jge
or
data16
out
dec
movswl
mov
sahf
lods
aad
push
ds
jp
pop
sbb
xchg
bound
xor
adc
mov
sbb
jne
pop
stc
enter
aaa
stc
ret
scas
test
inc
stos
fsubs
cmp
fwait
mov
sbb
sub
into
sub
sub
inc
fnstsw
dec
push
imul
outsl
aas
or
or
push
mov
mov
or
xor
mov
repnz
bound
jns
test
mov
pop
xchg
fdivrs
add
sub
push
fld
scas
mov
sbb
inc
sub
jecxz
pop
pop
mov
repz
jg
cs
inc
mov
fsubl
lret
pop
jg
push
add
xor
pusha
push
or
inc
daa
rcr
pop
jno
fidivrs
jb
mov
mov
cs
aad
push
or
jb
jnp
test
cltd
pop
cli
xchg
es
pop
xchg
pop
and
mov
adc
inc
sbb
sbb
xchg
inc
mov
mov
cltd
setle
cld
mov
or
scas
mov
xchg
sbb
sub
adc
out
clc
lods
cmpps
jns
push
jmp
popf
adc
call
mov
jg
mov
pop
in
shl
mov
fcmovnu
xor
pop
and
dec
pop
or
or
out
imul
fxch
cmp
xor
in
push
jecxz
rcrl
inc
call
xchg
add
sbb
mov
add
data16
inc
mov
dec
fcompl
or
xchg
in
pop
mov
or
jo
loop
jnp
pop
sbb
mov
xchg
and
pop
adc
outsb
iret
and
pop
push
pop
jmp
sbb
imul
sbb
dec
sbb
inc
lock
out
gs
enter
pop
push
adc
lds
and
xor
jae
or
data16
mov
cmp
push
push
sbb
pop
fbld
adc
inc
std
xor
mov
loopne,pn
rolb
hlt
pop
mov
mov
sub
dec
test
fsubrl
test
loop
sbbb
cmpsb
dec
fcoms
loopne
xchg
mov
lcall
xchg
jo
inc
dec
xchg
jmp
daa
mov
add
xor
cwtl
aad
jmp
pop
dec
jae
mov
scas
xchg
xchg
mov
cli
add
arpl
hlt
sub
test
shrb
mov
mov
mov
sbb
fwait
pop
stc
sub
sub
mov
out
pop
mov
push
mov
inc
lods
sbb
fldcw
dec
cmpsl
mov
std
dec
loopne
xchg
or
mov
loope
push
pop
mov
rolb
movsb
icebp
hlt
fldl2e
cmp
dec
call
mov
popa
fadds
mov
xchg
pop
stos
jl
or
jecxz
repz
fcomps
in
test
sbb
jns
sub
mov
cld
mov
mov
ja
sbb
cwtl
mov
cmpsl
xchg
sub
stos
push
in
sbb
outsb
adc
mov
sbb
dec
cs
mov
es
out
lods
cmp
jno
hlt
outsl
insb
cmpb
jae
fsts
pop
and
or
mov
add
repnz
cmp
inc
test
in
inc
and
hlt
sub
fidivrs
push
jno
pop
mov
lret
das
mov
in
clc
js
clc
cmp
pop
push
push
mov
mov
call
xor
sbb
cltd
xchg
das
jmp
psubsw
fisttps
outsb
rcrl
fsubr
mov
clc
adc
cmpsb
or
repz
push
or
mov
cmp
cld
inc
sbb
sbb
cmp
cmpsl
mov
mov
test
fmulp
sub
push
scas
push
out
mov
sbb
cmp
xchg
cli
sbb
ja
gs
repnz
fwait
repnz
pop
ss
scas
iret
inc
neg
sub
or
xchg
call
mov
mov
in
inc
aas
jne
mov
fucom
test
call
add
inc
jecxz
dec
mov
clc
dec
push
pop
int3
jp
shr
leave
push
add
insl
mov
and
add
add
into
inc
repz
dec
sub
outsl
call
and
pop
in
inc
mov
and
mov
jge
or
pop
mov
stc
out
out
fdivrs
dec
gs
adc
jmp
mov
jecxz
adc
push
loope
mov
fwait
divb
mov
cmp
insb
adc
stos
jp
lods
addr16
clc
gs
lret
movsb
sub
sti
lret
das
jl
das
icebp
ljmp
mov
cmp
ja
arpl
out
aaa
movsl
pop
rcll
lret
nop
cmp
pop
imul
imul
js
fnstcw
fs
leave
cs
inc
sbbb
loope
loop
pop
insb
fs
pop
in
mov
mov
and
or
or
mov
pop
mov
arpl
xchg
dec
in
pop
addr16
and
rorl
fdivrl
sbb
fcomps
mov
push
cwtl
jno
in
pop
push
add
dec
sub
inc
adc
mov
push
mov
out
ret
popa
and
rcll
insb
outsl
dec
mov
push
mov
pop
loope
addr16
hlt
jmp
lods
xchg
fldt
dec
clc
dec
sbb
mov
ds
cwtl
jle
fsub
push
pop
stc
push
lock
jmp
jnp
repnz
dec
clc
loopne
pop
or
adc
pop
scas
xchg
xchg
rol
dec
sub
add
cmp
pop
outsl
jne
cmpb
in
xchg
fisttpl
cmpsb
jmp
inc
movsb
jb
dec
mov
fcomps
or
test
lret
fisubs
rorb
dec
push
push
pop
inc
or
fisubs
mov
pop
dec
jbe
pop
lahf
sub
fbstp
mov
jg
call
jp
mov
cld
inc
daa
dec
gs
int
iret
adc
cmp
cmp
mov
daa
stc
pop
add
sbb
jge
xchg
insb
xlat
xchg
push
xchg
cmp
jg
cmp
into
jns
pop
loop
sti
pop
cmp
xchg
lds
nop
pop
lret
mov
rcrl
fcomi
fwait
mov
cmp
arpl
xchg
mov
or
mov
sbb
rcrl
out
stc
pop
js
into
scas
or
push
idivl
stos
xchg
subl
push
icebp
ja
jns
or
adc
sti
jb
adc
repnz
sub
jno
jne
ss
pop
pop
add
pop
scas
fdivl
mov
fstps
insl
clc
cmp
scas
add
cmp
adc
fcoms
ds
sbb
pop
xor
dec
jp
arpl
scas
jns
sbb
pop
test
jns
fistpl
aas
sti
clc
mov
cmpsl
jl
xor
add
fdivs
jne
ret
test
xor
shl
sbb
inc
jg
and
mov
sbb
in
jmp
pop
pop
jnp
jns
pop
gs
fs
cmpl
test
daa
fwait
gs
pop
rclb
or
or
push
sbb
jno
insb
jmp
in
and
mov
push
sbb
and
movsl
fstpl
outsb
add
repnz
aaa
fs
not
sbb
stos
sub
mov
mov
sbb
pop
mov
sub
jge
fadds
mov
push
sbb
aad
mov
cmp
dec
mov
add
inc
pop
or
sub
stc
xor
shll
push
xor
lock
push
push
jbe
jg
sbb
sbb
dec
xchg
lods
sub
adc
std
pop
fcoms
test
add
pop
xchg
stc
sti
mov
xchg
movsb
xor
push
clc
cltd
shll
sbb
sbb
fnsave
inc
in
std
ja
out
pop
or
inc
xchg
jno
lahf
pop
shlb
xchg
mul
lret
xor
push
shl
in
adc
dec
adc
stc
jp
aaa
push
gs
xchg
lcall
scas
clc
and
mov
mov
lds
daa
and
pop
push
mov
mov
out
xchg
sbb
into
repnz
ds
fisubrs
and
fs
mov
ja
imul
outsl
push
dec
fbld
xor
rolb
xchg
pop
push
jl
dec
xor
or
lds
push
data16
cmpsl
xchg
lcall
pop
cmpsb
sbb
push
pop
fisubs
mov
dec
xor
sti
fcompl
mov
pop
cmp
fcoms
cs
xor
inc
and
adc
inc
cmpsb
adc
push
std
mov
ja
push
ret
cs
jge
push
pop
aam
pop
daa
push
stc
dec
adc
out
lcall
mov
ret
int
sti
cmc
ret
lcall
insb
or
jne
xchg
leave
sbb
xor
in
push
adc
imul
imul
cmp
sahf
iret
pop
in
lahf
jmp
fnstenv
fsub
aad
push
sub
test
and
rorl
inc
push
addr16
in
ja
outsb
jne
imul
sub
pusha
dec
push
push
mov
fmuls
pop
bound
in
mov
and
test
loopne
in
lea
lds
imul
arpl
js
jne
mov
mov
inc
ja
pop
jb
gs
fs
loopne
das
mov
popa
push
and
jb
adc
pop
in
pop
adc
ficoms
inc
dec
insl
push
mov
sub
fnstsw
fs
or
in
jnp
adc
loopne
lret
clc
sahf
mov
pusha
cmp
shll
pop
mov
cmp
ret
jmp
push
gs
push
mov
inc
push
mov
repz
mov
test
outsb
inc
fsubl
aas
dec
pusha
pop
inc
enter
cmp
cld
and
xchg
lcall
testb
xchg
divb
loope
add
movsb
sub
xchg
mov
jbe
fs
aaa
pop
pusha
mov
sub
cwtl
jae
or
imul
pop
xchg
mov
rcrl
movsb
xor
and
jno
fcoml
test
inc
pop
repnz
scas
lretw
pop
in
and
xchg
mov
lret
out
mov
sahf
int3
sub
mov
push
cs
mov
mov
xchg
jecxz
idivl
outsl
clc
lock
pop
jnp
mov
loopne
adc
daa
sahf
pop
cmc
movsb
lods
pushf
jae
mov
leave
jle
jns
adc
arpl
dec
jbe
pop
mov
jns
bound
hlt
mov
jp
lret
fmuls
mov
jl
fistl
or
mov
js
arpl
jg
sub
mov
jno
in
inc
loope
mov
fildl
out
jbe
cmp
shr
or
pop
sbb
xchg
and
leave
mov
pop
addr16
scas
jge
call
shrb
hlt
gs
loopne
mov
outsl
test
dec
mov
sbb
xchg
imul
cmc
clc
jnp
lahf
push
and
out
rcrl
push
mov
push
bnd
fidivrl
int3
xchg
pop
jb
ds
inc
pop
or
mov
call
dec
sbb
adc
and
pop
enter
pop
sub
mov
adc
adc
and
inc
inc
ja
cltd
dec
mov
rcrb
les
ret
add
fidivs
leave
incb
ja
gs
jbe
loopne
iret
pop
gs
lock
rcrl
xchg
jns
fneni(8087
sti
repnz
ja
xchg
sbb
sbb
dec
ja
inc
into
add
push
jne
fwait
mov
arpl
shrl
pop
adcl
and
push
push
scas
mov
out
out
pusha
or
mov
lcall
jb
loope
inc
xchg
scas
pop
cwtl
into
pop
xchg
mov
ds
add
xor
push
mov
aas
xor
test
cmp
pusha
jg
scas
popaw
out
loop
pop
sbb
or
fwait
stc
sub
inc
scas
push
loop
cmp
sahf
mov
cltd
cs
push
fisubs
sti
mov
scas
push
pop
insl
fstpt
push
int
adc
negb
and
mov
dec
subb
adc
gs
adc
sbb
or
je
sub
dec
mov
aaa
xchg
out
mov
jbe
mov
xchg
nopl
repz
rcrb
ret
xor
xchg
add
addr16
jecxz
addr16
mov
psrad
pop
xchg
mov
cmpb
imul
pop
out
bts
xchg
push
frstor
jge
scas
sub
arpl
mov
lcall
mov
push
pop
pusha
cs
test
testl
or
cmpsl
loop
cmp
pop
outsl
jl
in
scas
push
pop
lock
outsl
jno
add
cmpsb
je
popa
mov
imul
cmc
loopne
jnp
or
add
in
mov
sbb
in
enter
pop
push
xor
notl
ret
mov
sti
and
add
push
or
lea
dec
cmp
fs
leave
pop
ljmp
ret
test
cmc
inc
loop
cwtl
mov
pop
jb
cmp
mov
inc
lret
repz
shrb
dec
mov
leave
sbb
mov
loop
imul
dec
jecxz
push
outsl
scas
cmpsb
push
enter
or
and
sub
and
call
int3
test
loope
mov
pcmpgtd
repz
xor
cmp
test
clc
push
pop
xchg
data16
stc
mov
pop
mov
neg
lods
cld
fwait
scas
cmp
xchg
dec
mov
insl
lret
adc
js
bound
pop
fnstsw
fadd
sub
cwtl
jecxz
insb
xchg
pushf
popa
mov
sub
enter
aaa
push
jp
xchg
sahf
cmpsb
out
jle
arpl
movsl
popa
sti
jg
cmp
mov
or
stos
and
out
scas
mov
add
inc
sbbb
cmp
rolb
bound
loop
sbb
mov
dec
inc
ficoml
mov
adc
mov
subl
insl
cld
int3
cmp
jmp
pop
into
ret
divb
pusha
adc
dec
rolb
fdivs
in
mov
fnstsw
xchg
inc
add
stc
ret
jge
outsl
imul
sub
imul
push
push
fcomps
xchg
rclb
sub
fnsave
cs
adc
dec
fistl
cmp
pop
add
arpl
mov
imul
int3
xchg
jno
jbe
add
ss
dec
jge
pop
sahf
insb
loope
pop
or
hlt
mov
pop
stos
inc
xorb
imul
iret
sti
psubsb
fcomi
add
xchg
sbb
outsl
inc
cmp
aaa
sub
pop
pop
fwait
rcrb
mov
xchg
push
mov
je
out
cs
notl
sar
dec
das
jg
cli
cmp
out
cmpsb
cmp
scas
pop
enter
cs
mov
ret
jnp
pop
pusha
imul
dec
mov
pushf
das
or
lcall
clc
imul
sbb
cwtl
jge
cmp
xor
cmpsb
or
pop
xchg
les
dec
sbb
xchg
add
or
dec
mov
push
fisubrs
xchg
fists
mov
xor
adc
ficoms
aaa
mov
leave
dec
fcompl
xor
push
das
aaa
or
adc
add
in
mov
jns
cmpsb
shll
sbb
or
movsb
mov
lock
pop
dec
xchg
jnp
data16
inc
or
sbb
addr16
dec
ja
rclb
cld
addr16
fwait
pushf
sar
jecxz
xchg
xor
sub
fdivs
je
mov
dec
jge
xchg
out
dec
stos
out
out
aam
mov
cmpsb
gs
push
xchg
in
fdivrs
std
mov
lods
jb
pop
xchg
fs
lock
pop
dec
aam
rorb
mov
jo
mov
pop
or
mov
xchg
stos
arpl
aam
mov
sbb
adc
leave
mov
push
scas
dec
outsl
mov
repnz
cli
mov
pusha
pop
insb
sub
jns
jmp
sub
xchg
push
movsl
call
or
and
push
call
or
sbb
sub
mov
shll
mov
ljmp
lret
inc
cmpsl
sbb
pop
cli
pusha
sbb
push
sbb
push
dec
aaa
popa
fsubl
icebp
dec
gs
in
les
das
loopne
add
push
jne
xchg
pop
sbb
pusha
cmp
jnp
std
push
sbb
jle
cltd
das
ret
pop
or
fs
cwtl
sub
fsubp
decb
arpl
or
js
ret
push
ret
cmpl
mov
dec
and
cmpsl
add
imul
in
add
push
dec
push
jmp
imul
bound
lret
jo
push
cltd
pop
addr16
dec
fisubl
gs
ss
adc
cmp
sbb
and
jns
aas
mov
xchg
adcl
inc
sarl
xor
and
mov
test
fdivrs
adc
lret
and
mov
shll
cmp
scas
pusha
shlb
push
xchg
cmp
jnp
and
jnp
data16
jp
lea
mov
mov
sub
pop
xchg
adc
jo
int
sbb
rclb
popa
cmp
dec
scas
lret
xor
gs
outsb
ret
adc
in
outsl
mov
push
cmp
leave
or
cmp
xchg
push
jne
jno
push
xor
idivb
es
out
cmc
mov
pop
xlat
mov
das
dec
mov
xlat
xchg
gs
pop
mov
pop
or
fsubr
jp
lahf
lock
mov
jnp
dec
mov
movsl
out
fdivrl
inc
xchg
jnp
jecxz
ret
cld
cmp
shrb
lcall
pop
mov
or
mov
arpl
inc
daa
loop
insb
jne
sbb
aaa
scas
cmp
jne
int
lahf
mov
mov
cmp
push
jl
or
dec
aad
or
lcall
push
cmp
push
rclb
aas
test
mov
ja
cmp
mov
and
nop
fcomps
mov
cmpsb
push
jb
cmp
fsubr
inc
or
sub
imul
repz
int
icebp
xchg
mov
add
mov
and
scas
vpcmpgtw
and
lock
pop
inc
and
pop
out
mov
push
imul
add
jmp
and
icebp
or
out
fistpll
mov
ja
mov
shl
pop
sbb
xchg
outsl
ret
push
insl
cmp
pushl
out
mov
push
adc
sub
mov
mov
shlb
cmp
cmc
xchg
outsl
cltd
stos
and
pop
mov
ret
add
xor
popa
xlat
or
repnz
push
clc
add
scas
cmp
gs
cwtl
insl
sub
xchg
jnp
in
gs
mov
cmp
outsl
adc
dec
jnp
js
ja
ret
xor
push
orb
xchg
push
imul
ljmp
mov
loopne
pop
dec
pop
jg
adc
mov
or
jns
cmp
cli
mov
mov
sbb
lcall
ljmp
stos
stc
lds
xor
mov
mov
iret
dec
xchg
lahf
stc
push
xor
arpl
add
dec
lods
rcr
jo
or
mov
call
bound
and
and
mov
jmp
fsts
xchg
mov
sbb
xchg
imul
add
das
sahf
imul
mov
cmpsb
jmp
in
or
js
mov
emms
or
repnz
pusha
std
int3
jne
push
mov
aad
xor
clc
fdivs
aas
xor
stos
sarl
data16
xor
aaa
cmp
jmp
cmpsl
insl
sbb
sub
out
sbb
xchg
cli
jno
inc
mov
mov
jmp
adc
fwait
sub
loopne
lods
push
int
sub
dec
xor
pop
call
mov
mov
cmp
arpl
insl
cmc
add
daa
add
ljmp
sub
sub
loopne
jg
scas
mov
stc
mov
cmp
mov
aam
push
lods
mov
out
mov
out
pop
sub
test
lods
pop
movsb
mov
imul
in
in
sub
js
ja
and
mov
mov
outsb
inc
cmp
pop
bound
fldl
gs
lea
jge
dec
pop
in
inc
cld
scas
add
inc
fimuls
popa
xor
mov
dec
test
jae
outsl
pop
xor
iret
decl
js
pop
repz
sub
lret
and
xchg
push
xchg
leave
pop
hlt
and
add
sub
or
jge
ljmp
fadds
sbbb
push
mov
mov
out
insb
pop
stos
push
push
movsl
ja
test
add
sbb
in
in
sub
and
lods
dec
ljmp
mov
movsb
and
pop
pop
jns
ja
fnstenv
add
in
test
pop
out
out
dec
ja
and
sarl
pop
insb
loopne
popa
das
loopne
add
push
jne
xchg
lcall
push
fwait
and
cltd
sbb
lock
mov
jmp
cmpsl
push
out
pop
daa
dec
mov
cmpsl
fdivs
push
les
push
push
mov
mov
pop
jmp
jbe
repz
das
test
out
xchg
ret
int
cmp
cmp
cmp
shrb
xchg
rol
jnp
jno
jecxz
cmp
clc
hlt
cmp
push
xchg
cmpsl
dec
cmp
cwtl
lock
mov
fsts
out
push
pop
sahf
xchg
fcoms
call
sub
xchg
lcall
and
sbb
sbb
clc
pop
leave
in
cmpsb
or
gs
inc
xchg
xchg
lret
and
stos
mov
out
inc
lahf
inc
dec
arpl
or
cld
jl
aad
mov
arpl
jmp
mov
iret
mov
lahf
mov
jbe
mov
mov
jbe
insb
pop
outsb
scas
scas
sti
popf
add
jmp
push
sub
mulw
cmp
inc
mov
in
cwtl
push
loopne
jge
xchg
fcomps
mov
out
jl
jmp
pusha
xor
lods
ja
push
jne
xchg
lret
sbb
and
dec
lcall
or
mov
xor
std
ja
xchg
sarl
or
xchg
jmp
and
out
ja
push
pushf
std
or
pusha
push
mov
jl
pushf
push
dec
jmp
gs
aam
cmp
fwait
add
imul
loope
lcall
cmp
jecxz
pop
std
sbb
fadds
popa
cmpsl
pushf
fdivs
fldl
sub
in
sub
adc
mov
mov
jnp
add
addr16
or
ljmp
push
xchg
jl
adc
xchg
adc
js
xchg
enter
dec
lcall
xchg
out
fstl
test
pushf
xchg
pusha
push
fnstcw
add
sbb
arpl
lret
sarb
xchg
jecxz
packssdw
pop
mov
adc
jno
iret
pop
add
cmp
adc
jmp
outsl
fsubp
mov
jnp
sub
mov
mov
jbe
std
lret
and
jb
cmc
mov
mov
jg
mull
xor
pop
sbb
or
inc
jbe
sti
ja
je
js
cmp
test
adc
inc
mov
sbb
fcom
cmp
lret
sbb
test
pop
mov
aas
xchg
sbb
ljmp
push
in
xor
mov
cmp
fdivrl
push
add
jle
dec
or
je
pop
adc
pop
rdpmc
or
fwait
daa
jae
repz
or
pop
stos
sub
or
ret
sti
add
sahf
lret
adc
xchg
scas
sbb
jnp
test
movsl
xor
fsubl
sbb
sub
sub
sub
pop
ja
pop
xchg
gs
cmp
xor
push
jmp
xchg
call
es
pop
outsl
pop
lods
sub
cmp
sub
imul
jge
ljmp
popf
das
mov
push
pop
js
inc
inc
sarb
jge
loop
fnstenv
xchg
mov
icebp
or
movsl
call
stc
es
push
pushf
ljmp
shrb
xchg
xchg
or
push
enter
clc
or
or
outsl
push
addr16
mov
dec
loopne
lahf
mov
push
or
aaa
jge
lea
inc
sub
ror
in
aaa
pop
jae
jp
jb
mov
and
cmpl
or
fdiv
sahf
ficoms
sbb
call
xor
into
sbb
das
mov
pop
add
lahf
push
dec
mov
mov
push
pushf
iret
int
inc
mov
cmp
fsubrp
fwait
shr
push
adc
fcmovnbe
add
push
sahf
pushf
pop
gs
sbb
xor
sbb
or
or
lods
sub
outsb
fldt
jbe
cmpsl
inc
sbbl
xchg
add
cmp
call
in
lcall
sbb
nop
or
fistpl
cld
rcrl
mov
pop
pop
push
dec
bound
int3
pop
mov
fistpl
int
sub
adc
add
sbb
cli
mov
loope
sub
std
xchg
jmp
stc
shlb
stc
mov
lret
add
mov
push
sahf
mov
mov
pop
rolb
pop
fsubs
into
not
or
fcomps
jae
stos
mov
xchg
dec
psubusb
mov
shr
cwtl
lret
fcmovb
jmp
pop
fcompl
fildl
xchg
add
loop
fwait
xchg
push
mov
mov
daa
andl
or
sar
sbbb
cmc
mov
aaa
dec
test
push
fwait
mov
out
scas
xchg
sub
fcoms
jne
sarb
ljmp
sbb
sbb
jge
gs
mov
or
cmp
arpl
push
jbe
and
mov
scas
cmp
inc
negl
and
xchg
jmp
mov
push
xchg
sbb
fisttps
inc
pop
in
or
push
in
popl
adc
cmc
mov
sti
stc
xor
mov
push
or
daa
addr16
movl
and
loope
push
adc
xchg
push
cmpb
in
adc
sti
mov
mov
popf
pop
pop
xor
lock
bound
ss
mov
sub
sbb
call
rcl
test
dec
mov
xchg
xchg
rcll
jecxz
inc
adc
inc
mov
push
pop
rorb
fmuls
std
cs
inc
mov
pop
pop
lods
and
ljmp
fs
push
imul
testl
adc
js
jns
int3
jge
in
daa
dec
aas
push
pop
mov
adc
stc
fldcw
mov
fwait
mov
test
add
cli
ds
jns
xchg
lret
cmpb
maxps
xchg
jge
inc
inc
aad
int
pop
cmpb
lock
aam
enter
mov
mov
jmp
aas
and
out
xor
jge
adc
push
mov
push
pop
xor
or
rcrb
dec
jmp
cltd
cmp
jns
out
bound
sti
popf
popa
test
les
inc
sub
negl
mov
xchg
leave
sub
fstps
xchg
sub
in
inc
pop
add
rorb
sub
jmp
cs
mov
popa
hlt
mov
fiaddl
pop
push
mov
add
xchg
lock
clc
mov
mov
imul
test
jno
imulb
int
pop
pop
sub
jbe
std
into
jge
dec
pusha
sbb
mov
mov
fcompl
call
jns
ficoms
or
dec
jge
les
andb
push
cmp
loope
sub
cmp
and
sbb
mov
push
icebp
mov
es
and
ret
cmp
arpl
lcall
jae
fidivl
jge
mov
mov
jmp
cs
jge
mov
mov
xor
mov
mov
and
adc
and
lea
out
sarb
lcall
lcall
fistpl
outsl
dec
xchg
js
fistps
movl
sahf
mov
ljmp
cmp
xchg
test
mov
adc
jns
fwait
add
jb
or
add
popa
mov
pop
stos
sub
ret
adc
test
sbb
mov
icebp
inc
pop
rcll
inc
pop
cmp
cltd
ljmp
outsl
fs
pop
inc
inc
lahf
inc
cmc
mov
push
pop
dec
incb
mov
mov
fbld
data16
pop
leave
out
outsl
xchg
sbb
pop
xor
int
and
ret
daa
cmp
pop
fcmovu
cltd
mov
js
mov
icebp
out
cltd
das
je
cmp
insb
scas
movsl
adc
data16
ljmp
sbb
pop
stc
or
xor
adc
mov
xlat
and
cmp
sbb
push
pop
add
cmp
andb
das
insb
sbbl
jmp
jecxz
ja
xor
ja
mov
jp,pt
xor
pushf
ja
das
lock
inc
ja
fidivs
stc
cltd
jp
loop
dec
cld
ja
das
lock
rcrl
sbb
and
movsb
sti
fcompl
mov
mov
insb
bound
ret
mov
lock
inc
mov
mov
pop
push
mov
dec
pop
outsl
fsubrl
mov
stos
pop
push
and
idivb
mov
aam
scas
testl
sahf
pop
shlb
insb
popl
arpl
xchg
outsl
pop
mov
jecxz
pop
stos
push
mov
ret
adc
jmp
push
add
and
sbb
xor
jge
das
push
repz
lcall
out
push
mov
cmp
lahf
mov
imulb
fmull
insb
pop
pop
int3
imul
out
leave
xchg
in
mov
cmpsb
xchg
rorl
mov
push
sbb
sub
cmp
xor
inc
push
pop
jg
ss
data16
pop
je
pop
std
dec
clc
mull
xor
data16
shr
mov
xor
sbb
push
hlt
pop
mov
movsl
test
ss
push
sbb
fisttps
dec
gs
mov
sub
insl
and
mov
fnstsw
aam
fimuls
cwtl
xchg
stc
std
sbb
sbb
data16
mov
fimull
mov
sbb
pop
pop
xchg
out
arpl
mov
push
out
in
adc
mov
xchg
pushf
rcrb
lea
jnp
in
mov
enter
lret
xchg
ret
cs
lds
sbb
ss
pushf
cmp
push
loope
sub
pop
sub
jg
dec
test
jae
push
add
add
loopne
dec
mov
jge
mov
gs
loopne
inc
fldcw
pop
roll
stos
ja
push
push
nop
pop
int
and
xchg
jae
add
icebp
lock
cmp
dec
pop
cmp
cmp
jg
cli
pop
push
push
ss
fstpt
stos
adc
fnstenv
fisubl
fsubrl
sbb
and
pop
and
sarl
mov
adc
in
insl
dec
or
push
lret
push
es
pop
mov
lret
je
pop
cld
test
adc
movsl
fmuls
aas
lahf
push
sbb
pusha
loopne
cmp
mov
pushf
mov
xor
mov
addr16
dec
cmp
das
and
xor
add
push
out
dec
mov
scas
imul
addr16
imul
cmpl
jg
xchg
adc
sbb
jp
jmp
jle
shr
es
pop
das
jp
lock
das
gs
cmp
arpl
mov
cmpsb
sti
insb
inc
inc
fnstcw
xor
mov
std
fs
arpl
sbb
mov
push
pop
pop
pop
cltd
jge
cmpsl
repz
and
sbb
cld
outsl
xor
jne
int
xchg
cmpsb
cmp
mov
add
sub
out
jl
and
aas
xor
jmp
testb
xor
cmp
push
xchg
push
repnz
shrb
enter
adc
mulb
call
sahf
arpl
es
ds
cmp
popf
mov
add
aad
sbbl
mov
shll
std
mov
cmp
outsl
inc
push
sub
ror
pop
icebp
inc
arpl
inc
je
sub
xchg
cmp
cmpsl
into
xor
mov
push
dec
adc
mov
ljmpw
sbb
fstpl
jle
jnp
inc
push
pop
xor
or
testb
cmovae
cli
dec
pop
ds
push
mov
fdivrs
sti
lret
cmp
scas
inc
mov
inc
loopne
mov
push
dec
xor
mov
fldenv
pop
lds
xor
sub
sub
add
or
inc
gs
outsl
addr16
imul
fildl
mov
sub
popa
imul
xor
sahf
pushf
sbb
adcb
test
inc
inc
js,pt
fimuls
inc
out
scas
scas
jecxz
xor
repz
ret
sub
mov
xor
pop
sub
push
ds
fwait
lcall
out
add
in
mul
push
cmp
stc
inc
cmpl
insl
sub
xchg
cmc
aaa
cmp
cmp
sahf
push
cs
popf
scas
push
inc
jg
scas
lret
dec
sbb
mov
outsl
mov
lods
mov
loope
fdivrp
push
pop
cli
pop
and
movsl
cmp
cmp
sbb
adc
sti
hlt
add
fstps
sbb
push
cltd
data16
sbb
mov
sub
fldenv
rolb
cmpsb
dec
jl
jmp
in
psllq
out
out
mov
clc
inc
movsb
icebp
ljmp
xchg
xchg
das
and
ret
pop
push
jne
dec
push
cmpsl
imul
push
rcr
xor
jo
movsb
jne
rolb
or
xchg
mov
cwtl
outsl
or
sub
loopne
out
push
jl
mov
insl
push
fwait
int3
cmp
adcl
outsl
sub
fwait
lret
jl
dec
lahf
rorb
cmpsb
fdiv
xchg
jbe
clc
hlt
push
mov
rcll
fs
jg
or
xor
rcrb
js
jne
lret
cmp
call
imul
ja
mov
cltd
xchg
ret
out
jne
repz
scas
lock
leave
sub
repnz
imul
std
int
lods
pop
adc
sbb
sub
sahf
rcrb
fwait
cmp
movsb
or
push
sub
js
cwtl
push
and
dec
test
push
fadd
divl
adc
jmp
mov
mov
icebp
pop
cmp
dec
sbb
cmpsl
and
pop
shll
or
mov
cltd
add
jp
sbb
sub
push
ja
pop
and
outsb
das
lock
xchg
push
and
sub
sub
fldenv
shll
arpl
test
lret
ja
fwait
pop
sub
das
addr16
or
xchg
ret
cmpsl
cmc
adc
or
mov
pop
repz
shll
xor
mov
and
push
or
cmpsl
dec
pop
int3
pop
xor
sbb
mov
and
xchg
clc
push
push
push
jle
ss
and
daa
std
pop
and
aaa
and
pop
xchg
cli
icebp
popf
xchg
fcoms
fisubs
mov
fldenv
lcall
push
and
mov
sub
test
imul
cmp
mov
lcall
pop
mov
test
mov
outsl
lock
in
in
pop
xchg
call
mov
mov
rolb
sbb
shrb
mov
shrl
inc
popf
call
jmp
das
push
push
mov
sub
ja
push
jne
xchg
ljmp
hlt
or
pop
sti
lret
pop
das
xor
bound
mov
insb
fsubrs
cmpsb
mov
bound
pop
repnz
daa
push
lcall
cmp
cmp
xchg
mov
mov
icebp
pop
cmp
popf
xchg
dec
xor
dec
ljmp
pop
dec
lcall
popf
fs
fdivr
xchg
les
mov
movsbl
gs
jmp
xor
pushf
int
scas
ret
mov
sbb
sbb
popf
or
fistpl
test
xor
add
leave
stc
push
mov
pop
outsb
xchg
ror
jle
push
or
mov
movsb
mov
nop
fadd
add
loope
call
jg
pop
dec
push
cmp
sbb
jecxz
or
mov
inc
xchg
or
test
inc
or
adc
outsb
out
js
sbb
mov
push
pop
or
jl
lods
sbb
decb
dec
lcall
or
add
jp
xlat
aas
ja
lahf
jle
mov
ja
mov
xor
add
cmp
fwait
or
lock
in
pushf
repz
ja
das
lock
adc
stos
adc
pusha
jo
ja
mov
xor
add
cmpsl
pop
dec
hlt
lcall
or
sub
mov
je
push
lds
push
pop
mov
cmp
xchg
dec
push
hlt
jp
fistpll
and
cwtl
add
push
cltd
xchg
call
popf
jge
pop
cmp
call
cltd
xchg
fstpt
mov
or
mov
int3
repz
mov
xchg
fstps
sub
mov
mov
push
mov
dec
mov
jno
gs
jge
ss
pop
imul
std
jmp
bound
xor
mov
xor
scas
hlt
jno
clc
sbb
sub
sti
lock
cmp
jge
xor
lahf
out
xor
lock
movsl
fdivl
or
repnz
cmpsl
dec
sub
test
cltd
and
sti
pop
iret
jo
add
jb
jmp
or
mov
popa
in
lods
test
dec
or
jmp
add
sub
push
dec
das
mov
and
dec
pop
ja
jae
push
cmc
xchg
sbb
negb
adc
arpl
and
and
cmpsl
add
jmp
pop
sbb
jmp
call
loop
mov
mov
addr16
dec
pop
bound
outsb
mov
dec
pop
sbb
mov
sbb
cmp
or
out
insb
leave
dec
pop
mov
inc
lahf
sub
mov
out
pop
lock
out
jmp
sbb
sbb
mov
pop
aad
add
in
shll
push
push
es
push
add
in
pop
xor
mov
dec
sbb
repz
pop
enter
inc
sub
mov
xchg
aam
movsl
xchg
nop
xchg
pop
pop
ret
xchg
mov
into
out
cmpsb
outsl
or
ss
adc
push
dec
aas
lahf
mov
sahf
cmpsb
jmp
ret
cs
mov
mov
mov
add
decl
cld
cltd
inc
data16
popf
lock
sbb
fstl
jae
mov
jno
jmp
in
pop
cmpsb
cs
jge
mov
fadd
scas
lock
push
hlt
add
xor
and
scas
sbb
xchg
dec
incl
mov
mov
inc
dec
mov
cli
push
mov
testb
lds
push
lret
rol
or
mov
nop
sbb
pop
pop
push
iret
ret
or
lcall
xchg
ds
jle
std
faddl
sbb
pop
pusha
inc
xchg
sub
add
or
arpl
adc
and
das
stos
and
iret
sbb
inc
shll
arpl
xchg
sahf
sbb
ja
jns
sti
jp
push
sbb
xchg
test
sbb
mov
mov
ja
inc
cli
add
mov
adc
cmpsl
pop
add
push
cwtl
popa
pop
dec
mov
add
loop
pusha
and
pop
hlt
jp
or
shll
dec
jmp
cmpsb
rcrb
cmpsl
icebp
imul
in
jo
jbe
and
in
mov
mov
cmpsl
sub
mov
addr16
imul
call
mov
mov
jo
sbb
or
fistl
inc
test
push
mov
mov
pushf
cmp
roll
adc
addr16
or
ret
cmp
iret
popa
push
inc
xchg
ret
sbb
inc
ss
in
xchg
cvtdq2ps
inc
loopne
push
test
mov
call
lea
in
leave
cltd
add
call
rcrl
mov
dec
int3
sub
jne
and
sar
aad
cli
fisubrl
push
push
adcb
shrb
inc
add
push
push
sbb
xchg
ret
jmp
out
inc
push
hlt
push
pop
mov
add
jmp
and
adc
jmp
xor
jae
cli
jle
pop
inc
cmp
adc
into
push
mov
sub
mov
stos
cs
loopne
pop
xor
push
dec
pop
loop
and
push
inc
imul
sahf
cmpsb
fnstenv
dec
pop
lahf
inc
mov
lcall
jg
dec
mov
sbb
mov
jnp
cmp
aad
mov
fcmovne
dec
xor
sub
mov
sbb
sub
imul
test
lods
jg
test
pop
cmp
pop
data16
xchg
dec
out
jmp
call
fbld
pop
repz
ja
into
pop
ss
sub
sbb
jmp
xchg
push
ret
notb
cli
dec
inc
pop
pusha
ret
ja
sbb
test
lock
mov
xchg
mov
dec
arpl
or
jge
inc
cmc
fistl
mov
push
xchg
shll
addr16
repnz
sub
xlat
popw
push
or
pop
cwtl
leave
gs
cmp
cwtl
insb
cmp
outsl
ret
je
gs
push
jno
sub
xor
out
subl
pop
iret
pop
inc
cmc
pop
xor
addr16
stos
or
sbb
cwtl
jmp
and
frstor
les
insb
push
sbb
add
xor
xlat
stos
fisttps
sbb
inc
push
sahf
rclb
xor
add
ret
lcall
dec
shl
lea
outsl
mov
jle
jp
sub
fcompl
push
lea
push
push
icebp
pop
or
dec
and
cmpsb
jb
pop
cmp
stc
dec
push
scas
sbb
xor
sbb
hlt
and
jmp
leave
push
add
faddl
jge
in
mov
mov
out
or
out
sbb
sub
movsl
mov
outsb
mov
sahf
jnp
mov
inc
push
icebp
cmp
jae
out
xor
das
rorb
mov
sbb
mov
enter
sub
clc
addl
test
or
pop
outsl
sahf
pop
outsl
pop
sbb
test
das
hlt
dec
pop
cli
pop
xor
scas
lods
sar
jne
or
fldl
cmpsb
sbb
and
cmp
add
push
push
mov
test
pop
cmpsb
xchg
mov
int
add
shrb
stc
shll
out
stc
test
cmpsl
sti
scas
iret
outsl
xchg
or
dec
jno
std
mov
fcoms
push
jg
inc
mov
dec
clc
in
jno
sub
push
fmul
addr16
clc
outsl
sub
pop
mov
lock
jl
mov
or
inc
jecxz
xchg
add
notl
call
ret
dec
sbb
test
ss
cli
leave
test
sub
leave
dec
push
fbld
loope
xor
into
cmp
push
push
subb
dec
pop
jbe
sbb
jb
arpl
and
loop
and
mov
push
xchg
int3
pop
fbstp
or
xchg
jmp
imul
les
popa
aad
cmp
pop
cs
scas
fcomp
out
push
mov
clc
movsl
fildll
pop
clc
sbb
ja
test
sub
inc
rclb
lret
std
ljmp
xor
push
xor
mov
inc
pop
adc
sbb
std
leave
mov
fisttps
mov
xchg
add
divps
ret
addb
fmuls
sub
mov
dec
fcomps
sbb
sar
fwait
and
and
mov
out
test
lods
xor
add
sarb
jno
fimull
std
fbld
das
cmp
dec
ja
push
jne
test
cltd
pusha
mov
xchg
rol
in
mov
out
fcoml
xor
or
push
xor
out
ja
sub
xchg
mov
mov
sub
pop
lcall
push
cmp
mov
cs
stc
imul
out
jl
pop
stos
cwtl
outsl
cmp
xchg
jbe
or
pop
or
sbb
xor
push
inc
cmp
cmp
nop
loope
in
or
movsbl
inc
loop
add
dec
arpl
cmp
pop
push
mov
mov
mov
or
xchg
push
hlt
or
pop
mov
sub
bound
push
adc
test
cli
pop
mov
jmp
clc
or
fsubrs
pop
aad
shll
push
xchg
leave
xchg
scas
in
je
loopne
out
fs
inc
imul
shlb
push
jno
sub
pop
fsubrs
mov
pop
mov
pop
add
imull
push
std
pop
cs
cmp
mov
push
pop
pop
cmpsb
mov
xchg
xor
adc
ds
fsubrl
aaa
fs
popa
idivl
stc
jo
xchg
stc
fidivl
jecxz
mov
and
stos
inc
es
loope
cmp
mov
push
jns
or
popa
ret
outsl
lahf
mov
push
sti
outsb
cmp
cmp
rolb
sub
in
mov
cmpsb
jo
aaa
flds
repz
push
lods
pop
pop
in
mov
mov
add
idivl
mov
lcall
cli
out
data16
clc
mov
mov
pop
les
ret
pusha
imul
pop
ss
stos
in
arpl
jbe
push
call
lds
fmuls
icebp
xchg
pop
stc
ret
insl
int3
aaa
sbb
adc
int3
add
pop
rclb
icebp
xchg
pop
hlt
cmp
jne
and
and
inc
mov
outsl
add
sbb
stos
mov
in
push
push
sub
test
fs
adcl
xchg
repnz
jae
fcompl
imul
stos
pop
and
add
out
and
call
add
xchg
mov
push
ficomps
in
push
xchg
icebp
das
cmp
mov
imul
nop
pop
test
fcmovb
pcmpeqw
sbb
inc
cmp
mov
add
scas
mov
push
icebp
push
jmp
mov
add
repz
and
cwtl
gs
jp
scas
xor
inc
xchg
or
test
pop
dec
push
aaa
jle
fbstp
lahf
dec
stos
mov
std
mov
into
cs
call
notl
pop
sbb
loopne
js
into
mov
pop
movl
call
mov
sbb
jge
jae
lods
mov
imul
pop
pop
cmp
jnp
lods
dec
inc
fsubrs
mov
pop
in
dec
mov
cmpsl
add
sbbl
push
xchg
sbb
out
arpl
fwait
mov
ret
nop
mov
sub
pop
pop
popf
mov
dec
sbb
xchg
lods
xchg
adc
repz
push
jecxz
fstps
add
fldenv
jne
repnz
shl
pop
outsl
lods
xchg
xchg
pop
push
dec
or
jp
mov
call
out
loop
incl
sub
xchg
inc
adc
sbb
or
pop
aam
les
outsb
pop
test
mov
sti
push
add
imul
sbb
or
push
push
pop
xor
int
out
es
pop
scas
inc
push
and
push
inc
mov
cmp
jb
mov
mov
mov
pop
enter
mov
pop
or
rclb
mov
dec
repnz
xchg
dec
fmuls
jns
lcall
or
xchg
add
aaa
sbb
gs
shld
pop
mov
loop
mov
pop
add
insb
outsl
subb
and
sub
inc
ss
add
mov
sub
pop
jne
cmp
push
repz
mov
idivb
clc
ret
pop
pop
or
movsl
imul
inc
fcompl
cmp
cmc
cli
cmc
pop
call
insb
cltd
pop
test
pushf
daa
scas
jg
dec
push
mov
xorl
or
repnz
and
dec
movl
inc
pusha
fdivrs
aad
inc
in
movsl
xchg
and
rcr
mov
data16
dec
lods
cld
mov
clc
cmp
dec
cld
or
out
leave
lock
test
aaa
or
xor
mov
das
invd
push
mov
inc
fs
scas
ja
testl
xor
inc
scas
cbtw
lods
adc
cmp
and
push
pushf
sar
insb
fs
mov
popf
fldcw
jecxz
mov
fidivs
outsl
cmp
jg
add
pop
lcall
fdivrs
sbb
cmp
rcr
sbb
arpl
popa
lods
xor
fstl
scas
xchg
jl
loope
or
fdivs
add
xchg
mov
xor
pop
lret
jnp
and
cmc
mov
mov
out
lea
or
sahf
stos
jbe
pop
cmp
jnp
or
loope
push
sahf
mov
inc
mov
sub
jge
mov
popa
subl
xchg
icebp
cmp
xor
push
dec
mov
push
jge
ret
insb
mov
repnz
jecxz
push
xor
cmpsb
insl
ret
pop
shrb
mov
insb
add
mov
and
outsl
mov
push
imul
cs
aas
out
aaa
jle
jl
mov
sbb
arpl
pop
insb
es
push
mov
pop
inc
call
mov
mov
jnp
jbe
ret
popa
lahf
xorb
gs
imul
dec
xchg
adc
jge
not
or
pop
mov
fldcw
fwait
incl
arpl
dec
and
sti
jmp
les
aam
insb
mov
popa
icebp
add
in
sbb
mov
push
pop
mov
mov
sub
rolb
xor
idivb
and
xor
stc
xor
inc
mov
fwait
lock
jmp
pop
cmp
push
xorl
negl
pop
sbb
push
out
cmp
ret
fists
and
std
jmp
mov
inc
xchg
out
test
mov
xchg
aad
sbb
mov
pop
sar
jne
cmp
lock
cli
in
xchg
push
or
cld
fnstcw
jmp
fucomp
and
sbb
sti
and
aad
popf
sti
push
cwtl
cmp
testb
insb
pop
xchg
lock
pop
or
lret
std
pop
ljmp
add
lock
out
push
notb
ficomps
das
loopne
add
ljmp
std
fstpt
sti
loope
and
add
cmp
mov
call
dec
or
jmp
sahf
sti
pop
sub
sbb
jmp
sbb
dec
push
pop
fxch
xchg
jne
cmp
pop
push
fmuls
push
cltd
inc
fwait
cld
insb
cld
jp
out
popfw
lahf
and
sub
mov
jmp
mov
idiv
cld
pop
in
push
sub
lcall
pop
lods
lret
ss
scas
clc
sbb
ret
pop
or
and
lahf
stos
pusha
cmp
call
add
pop
hlt
mov
or
add
push
std
data16
das
cwtl
pop
cmp
dec
mov
fsubr
negl
lahf
fsub
xor
scas
xor
push
pop
lahf
orl
jecxz
jns
frstor
and
jns
and
js
mov
loope
idivb
mov
jge
cmp
and
cmp
arpl
sub
jge
fcomps
arpl
addl
cmpsb
cmp
out
fadds
or
fsubs
or
sbb
and
push
lcall
std
mov
das
in
pop
pop
out
fwait
mov
popf
sbb
jle
out
sbb
mov
out
cwtl
or
gs
out
mov
cltd
loop
lods
notl
pop
xor
lock
pop
shll
sub
fstps
cmc
sbb
std
cmpsb
sbb
out
sbb
gs
rep
in
ror
mov
adc
pop
jbe
stos
stos
movsb
adc
sbb
out
fs
imull
fsubs
shlb
mov
arpl
and
sbb
cwtl
sti
or
out
cmp
bound
pusha
pop
fmuls
fldcw
jne
negb
jge
mov
cmp
mov
bound
int3
into
lret
push
test
add
in
pop
fstps
mov
sub
outsl
jg
ljmp
decl
cld
sbbl
daa
bound
sbb
pusha
jbe
daa
fwait
xchg
add
cmpsb
xlat
stos
add
or
jmp
loopne
gs
or
orb
cmpsl
iret
cmpsl
call
cwtl
test
inc
cli
mov
fcomps
cmp
out
pop
js
jo
xchg
lcall
add
push
jge
pop
icebp
pop
push
out
ja
jne
or
jne
sbb
add
jg
add
out
jne
pop
or
js
into
dec
push
mov
fisttpll
push
mov
or
xor
jmp
jne
adc
jb
pop
mov
lret
cld
xor
in
and
dec
pcmpgtw
push
std
and
les
inc
xchg
pop
test
pop
jne
jmp
jmp
jne,pt
call
jne
call
jne
call
jne
call
jne
imul
ljmp
stos
fistl
push
sbb
imul
lret
cli
push
fxch
rol
loop
mov
pop
dec
subb
jo
fnsave
xchg
or
mov
pop
cmp
repz
mov
mov
adc
xor
das
inc
adc
jns
mov
sbb
lret
icebp
mov
cmp
fisubl
push
mov
andb
arpl
push
clc
fisubrl
mov
in
sbb
in
push
push
fistpll
push
jne
and
pop
imul
call
aaa
repnz
iret
or
in
mov
lea
imul
pop
daa
and
pop
mov
fdivs
pusha
dec
push
dec
mov
pusha
cli
cmp
pop
jmp
xor
sbb
xchg
push
inc
or
test
mov
sub
or
std
mov
and
sbb
sbb
add
sub
pop
jge
cmp
idiv
pop
sbb
fmull
pushf
call
cmpsb
call
std
fisttpl
mov
or
and
sub
mov
jbe
data16
or
repz
mov
cmpl
pop
pop
je
jo
cmp
sub
imul
cld
and
sbb
dec
xor
sub
mov
dec
iret
fsubs
jnp
ds
sbb
lock
cmp
cwtl
ja
push
fcomps
or
lds
cltd
mov
cmpsb
arpl
lret
out
fsubrp
cltd
xchg
shll
stc
stc
add
cmp
jno
xor
test
cmpsb
fcompl
fucomp
arpl
fnstenv
fwait
gs
je
test
or
test
cmc
rcrb
pushf
cmp
mov
adc
sti
jne
rol
mov
push
int3
push
or
hlt
pop
jo
mov
xor
lahf
and
ret
fdivrl
imul
or
aad
sti
cmp
fdivs
gs
adc
fldenv
lods
sbb
xor
int3
fwait
shlb
cmp
jmp
mov
loope
xchg
fcoms
test
xchg
arpl
xchg
outsl
mov
cmp
mov
out
pop
xchg
add
stos
ja
lahf
addr16
and
std
popa
cmp
add
sbb
pop
and
std
loop
cmp
and
lcall
add
mulb
lea
cs
adc
orb
push
gs
pop
push
pushf
lahf
pop
cli
xchg
jb
scas
mov
sahf
test
pop
push
and
into
mov
xor
notl
fsubs
xchg
out
pop
pop
out
gs
cs
adc
cmp
pop
call
cmp
push
jmp
and
sub
add
rcpps
dec
addr16
rcrl
and
mov
pop
es
cmc
gs
pop
pop
scas
pop
imull
or
sbb
call
into
inc
inc
lea
mov
rolb
pop
ja
and
add
jge
jne
pop
mov
arpl
out
fdivl
push
jl
pop
adc
repz
cs
push
ret
dec
sbb
fadd
jbe
jne
div
int
and
pop
add
push
sub
sbbl
data16
mov
dec
xchg
arpl
jge
push
xchg
scas
aaa
xchg
pop
xchg
dec
lods
pop
cwtl
out
pop
movsb
sti
mov
mov
aaa
mov
in
mov
push
loop
int3
xchg
sbb
lret
sti
popa
mov
sbb
pop
fcompl
add
add
loopne
xacquire
add
rorb
xchg
add
sbb
adc
lret
mov
mov
mov
rcr
fnstcw
or
ret
mov
pop
xchg
cmp
daa
adc
jbe
cmpsb
cs
xchg
imul
scas
xorb
ficomps
sti
add
cmp
inc
mov
xor
ret
pop
sbb
jb
rclb
rorl
push
mov
push
enter
adc
call
mov
add
pushf
arpl
aam
dec
xor
dec
or
or
and
jbe
pop
arpl
clc
out
push
sbb
repz
add
gs
outsl
and
dec
and
xor
notl
mov
sbb
repnz
mov
ljmp
out
cmp
pop
xchg
jp
insl
jno
pop
fwait
in
fwait
loop
sarb
jmp
inc
fldpi
fdiv
jns
shl
jge
arpl
xchg
arpl
test
push
iret
pop
sahf
stos
outsl
and
out
hlt
mov
push
out
push
ficoml
test
and
movsb
cmp
xor
jmp
or
pusha
aas
jnp
cltd
pop
push
in
pop
cmp
je
push
stc
adc
jmp
sub
or
out
clc
pop
mov
or
sbb
insl
mov
xor
ficoms
mov
testb
dec
inc
sbb
sub
xchg
xor
lods
add
cmpsb
pop
cli
pop
jle
fsubp
and
loopne
icebp
cld
cli
fwait
js
lds
or
jne
and
xchg
push
imul
in
sbb
sti
mov
addr16
gs
es
jg
or
fcomps
mov
test
test
sbb
mov
rcrl
popa
stos
xor
iret
stos
lcall
cmpsl
mov
shlb
sarl
push
movsl
js
fisubl
mov
mov
es
xchg
pop
and
and
xchg
bound
or
xchg
xor
outsb
xor
or
or
jle
mov
pop
mov
jnp
test
sarl
add
in
and
push
inc
fcoml
pop
fnstenv
pushf
fcmovnu
pop
pop
gs
jbe
sar
lea
jge
gs
ljmp
adc
stos
or
adcl
mov
jmp
jmp
pop
int
aaa
popf
pusha
add
popf
fs
test
fcoml
mov
std
out
pop
call
or
dec
sahf
sub
fdivp
jge
ds
add
or
push
mov
aam
jnp
repnz
add
jp
pop
scas
mov
cmp
orl
jnp
fdivs
arpl
fistps
rorl
push
leave
jne
pusha
lahf
cmp
pop
psubw
ficompl
ja
addr16
cs
dec
or
xor
pop
cli
cltd
lret
aaa
arpl
sbb
dec
dec
inc
in
mov
jl
and
orb
mov
popf
jns
or
or
pop
adc
bound
jnp
cli
pop
pop
or
pop
shlb
fisubs
fisttpl
in
sbb
xor
cld
cli
fldt
ja
mov
inc
sbb
cltd
sbb
addl
ds
mov
loopne
fcompl
or
sub
imul
sahf
mov
lock
sbb
cltd
scas
mov
int
enter
int3
in
pop
or
mov
arpl
js
ja,pn
dec
cmp
jg
xor
fdivrl
dec
test
push
and
out
movsl
ss
in
test
inc
inc
int
mov
imul
xchg
popf
out
rolb
mov
mov
imul
adc
jo
lret
stos
and
and
pop
jl
jmp
push
repz
push
mov
je
mov
sbb
sub
cmp
fstl
scas
and
mov
insl
xor
popf
pop
fldl
popf
cmp
jmp
pushf
je
add
pop
std
pushf
fimull
negb
scas
pop
dec
out
dec
je
add
sub
mov
and
inc
cmpsl
js
add
xor
dec
pop
sub
adc
xchg
pop
inc
mov
out
dec
rorl
stos
jne
call
xor
sbb
xchg
les
sti
dec
adc
pop
sbb
mov
test
stos
es
and
push
out
jmp
pop
cmp
cld
push
mov
stc
rcr
mov
jne
bound
dec
fcom
jae
pop
mov
fwait
dec
je
sbb
stos
mov
ficomps
mov
pop
xchg
ds
mov
add
push
xchg
sti
xor
scas
pop
imul
dec
out
in
dec
fsubrs
loopne
push
cmpsb
jo
inc
clc
popf
mov
and
fs
mov
lock
xchg
aas
mov
or
fwait
mov
pop
mov
sbb
ror
add
pop
hlt
and
pusha
in
popa
xchg
pop
adc
jge
sbb
sbb
sub
pop
inc
cmc
js
test
dec
out
push
add
imul
mov
cli
or
sti
lea
mov
cmp
ss
and
sbbl
ret
jae
or
sub
repz
call
aam
pop
int3
add
sbb
and
sar
cwtl
les
xchg
int
popf
and
arpl
loope
inc
iret
dec
push
push
pop
mov
pop
fsub
inc
stos
jbe
stos
test
mov
pop
add
mov
push
sbb
dec
loope
movsb
mov
push
faddl
clc
pop
bound
dec
clc
cltd
mov
mov
mov
pop
mov
xchg
lahf
in
mov
clc
mov
cmp
sbb
ficompl
movsl
push
adc
roll
push
movsb
pop
mov
xor
pop
adc
mov
fstpl
loop
cmp
lods
ja
inc
out
outsb
cltd
jmp
mov
mov
pop
sbb
cmpsl
xchg
jns
in
jns
int
mov
or
sbb
shll
push
cwtl
adc
jbe
aas
jge
test
mov
insl
hlt
inc
pop
xchg
mov
pushf
pop
imul
fnstcw
pop
push
push
push
and
dec
ja
sbbb
popa
xchg
cli
stos
pop
add
cwtl
or
test
fdivrs
mov
shr
add
outsl
fildl
es
xor
add
xchg
bound
mov
mov
movsb
int3
pop
xor
mov
dec
hlt
enter
stos
ljmp
sbb
inc
mov
mov
jb
mov
sbb
scas
cmp
or
push
inc
fisubs
addr16
ret
nop
insl
jge
sbb
adc
mov
xchg
cld
mov
mov
fcompl
arpl
orl
dec
mov
mov
cld
pop
sbb
jo
mov
addr16
rcrb
cld
push
inc
clc
gs
inc
xchg
stc
jne
dec
cwtl
inc
rcrb
dec
repnz
in
mov
subl
scas
or
or
push
adc
jbe
movsl
push
int3
subl
leave
gs
jae
sbb
cmp
cltd
nop
pop
stc
push
arpl
ret
jno
dec
add
or
xor
sahf
adc
sbb
jne
mov
imul
rcrb
sbb
cmp
sbb
addl
xchg
cmp
xor
in
push
inc
xor
cld
andl
jns
test
pop
jne
add
jecxz
jl
pushf
jb
add
mov
jns
mov
test
sbb
loopne
sub
sti
popf
mov
stos
mov
cmp
jns
jo
clc
fbld
mov
xor
xor
add
lret
test
sbb
or
inc
push
in
or
call
sub
fbstp
out
subb
mov
leave
out
xchg
or
and
adc
outsl
sti
mov
sbb
lock
lret
xor
xchg
mov
aam
lcall
popf
inc
pop
dec
fcoms
outsl
mov
mov
pop
dec
out
test
cmp
or
in
cmpsl
or
pop
xchg
ja
ja
fldenv
or
add
gs
jmp
in
out
push
jne
imul
and
pop
shlb
and
add
loopne
jne
aas
imul
in
mov
jno
out
sbb
jecxz
pop
jge
mov
mov
ja
lret
and
lret
pop
mov
xor
movsb
testl
adc
and
add
addr16
inc
dec
sub
cmp
daa
ljmp
or
stos
and
cmp
pop
or
sub
inc
test
mov
cs
ret
int3
push
hlt
jns
call
es
int3
sbb
jp
shr
leave
gs
inc
int
pop
mov
mov
orl
cmc
mov
daa
pop
and
cmp
pop
es
cmp
dec
pop
dec
out
int3
dec
js
or
aaa
mov
mov
imul
adc
push
mov
or
lods
arpl
add
push
add
ret
xchg
push
outsb
cmpsb
cmp
xor
in
inc
sub
xlat
pcmpgtd
add
xor
enter
adc
lock
ja
loop
or
loopne
int3
jae
inc
sbb
adc
cltd
mov
xor
add
jmp
cltd
jmp
stc
cwtl
sti
movsb
arpl
out
and
jmp
js
mov
in
and
das
sub
fdivrs
rcrb
mov
pushf
cmp
xor
in
fcompl
xor
sti
adc
cltd
std
out
jge
jne
mov
adc
jnp
jmp
jg
pop
sbb
fnsave
cs
xchg
ja
mov
arpl
jl
jae
sub
leave
mov
pop
sbb
out
test
sub
inc
xchg
mov
ljmp
mov
and
inc
arpl
jecxz,pn
loopne
out
or
in
pop
cmp
mov
pop
inc
das
fsub
arpl
loope
fs
sbb
jl
push
sti
popa
arpl
push
ljmp
cltd
jmp
pop
cmp
imul
push
sbb
cwtl
movsb
aas
push
out
fadd
add
movsl
pushf
cli
xor
fsubs
mov
pop
mov
adc
in
pusha
pop
sahf
mov
loope
or
cmp
addl
jne
jl
loopne
out
inc
call
ss
in
cmc
ja
cmp
jne
xor
and
cmp
jo
les
imul
pop
mov
bound
jnp
mov
jle
subl
cmp
fldl
cld
sarl
jns
sbb
cmp
jmp
sbb
jo
and
das
cmp
ftst
cmpsl
or
fisubs
and
bound
out
fsubs
and
cmp
add
jmp
and
fdivrs
movsb
push
dec
out
and
gs
mov
push
cmc
or
test
aas
sbb
fisubrl
int
inc
and
stc
sbbl
pusha
xor
gs
adc
mov
icebp
mov
add
mov
mov
fmuls
lret
mov
mov
dec
imul
push
sbb
rorb
mov
jl
inc
jmp
leave
lcall
fsubl
lock
or
jecxz
or
sub
sub
imul
cld
mov
and
sbb
into
in
pop
dec
shlb
mov
call
cmpsb
dec
data16
or
and
div
xchg
pop
mov
or
or
arpl
in
out
and
pop
movsb
sbb
lcall
sbb
lcall
adc
mov
sub
jecxz
inc
das
imul
int3
cmpxchg
jmp
mov
clc
daa
mov
jne
int3
loop
addr16
push
add
aad
adc
scas
or
push
or
mov
lret
jns
inc
ret
test
addr16
xchg
xchg
mov
pop
lret
pop
cmpsb
pop
mov
lock
enter
out
and
mov
fcomps
xor
gs
in
xchg
shl
jbe
stos
pop
or
mov
xchg
shll
push
pushf
fisubs
mov
rcl
adc
in
or
es
inc
mov
mov
push
sti
pop
das
sub
lret
mov
sub
adc
push
add
mov
loopne
add
add
cmp
sbb
jae
or
mov
daa
jge
cmp
outsl
or
and
and
stos
imul
pop
sub
pop
mov
mov
nop
fsubrs
pop
xor
das
clc
outsl
dec
pop
and
sbb
das
push
sub
dec
pop
setg
add
jne
in
push
aas
add
push
add
addr16
push
xchg
clc
xor
mov
push
lock
pop
sahf
pop
xor
add
push
and
mov
aad
mov
pop
dec
cwtl
lahf
test
icebp
pushf
and
std
xor
inc
mov
push
xchg
sub
pop
cmp
data16
int
sbb
pop
mov
cs
gs
into
inc
insb
out
mov
outsb
rorb
pop
int3
pop
mov
imul
add
cwtl
rolb
aaa
aad
dec
ja
jle
fsub
gs
pop
dec
sub
xchg
sti
in
lcall
stc
pop
dec
xchg
arpl
out
std
mov
or
ds
repz
jmp
jmp
or
mov
push
cli
rolb
inc
leave
sub
sbb
gs
mov
dec
imul
xchg
rclb
lea
sahf
cld
lea
jne
push
dec
into
addr16
push
imul
ja
xor
mov
icebp
inc
or
jne
xchg
dec
test
and
adc
fwait
rcrl
pop
mov
pop
icebp
push
adc
jne
jmp
xchg
rsm
cmp
fcoms
jmp
and
lahf
mov
sti
imul
sbb
imul
or
xor
xor
push
fsub
inc
dec
jmp
cmp
mov
adc
pop
cmp
lahf
dec
fnstsw
mov
mov
pop
popw
jae
or
pop
fmuls
xchg
xor
lea
shlb
push
xor
push
movsl
inc
pusha
mov
dec
pushf
mov
sub
bound
lcall
pushf
aad
pop
push
pop
mov
imul
adc
daa
or
in
jecxz
rcpps
sbb
or
xor
or
mov
and
stc
add
inc
ficompl
xor
xor
enter
stc
sbb
pop
cwtl
in
in
xchg
mov
test
mov
sbb
sbb
faddl
mov
xchg
pop
out
pop
call
cmp
sbb
cli
mov
jg
loope
pop
test
mov
clc
cmp
pop
add
arpl
popf
dec
mov
push
push
in
hlt
sarb
xchg
stc
arpl
in
or
rcrb
pop
jnp
jg
fadds
xor
gs
in
dec
rcl
add
jl
jge
sbb
movsb
sti
in
pushf
pushf
imulb
cmp
jl
push
leave
fwait
imul
cmp
push
lcall
leave
cmp
pop
sub
push
pop
leave
sbb
insb
pop
gs
sbb
mov
push
jmp
and
callw
mov
or
sbb
in
mov
jno
cmp
sti
data16
jae
xor
test
xor
jmp
aaa
fwait
shll
push
cmc
mov
xchg
loopne
ret
jne
cmpsb
xor
pop
adc
call
test
clc
gs
add
add
rclb
pop
pop
ret
in
add
or
cmp
imul
hlt
and
jp
xchg
push
dec
cmp
enter
iret
xor
sbb
cmpsl
xchg
pop
lock
mov
pop
loopne
adc
pop
mull
jmp
inc
nop
js
and
cmp
test
and
mov
and
cmp
jmp
and
or
insb
mov
test
mov
insl
ds
testl
lcall
add
aad
sbb
sbb
lea
jle
xor
das
or
and
xchg
inc
ss
dec
jne
jp
in
xchg
xchg
xchg
or
pop
or
mov
sbb
mov
push
xor
popa
aam
cld
sbb
fsubs
mov
jo
push
stos
jecxz
jmp
and
cmc
mov
xchg
cmp
addl
or
cmpsb
les
aad
inc
scas
cli
out
and
std
pop
cmp
gs
sub
cltd
cmp
sbb
imul
pop
pop
enter
in
test
add
cwtl
inc
cld
or
scas
jb
cmc
mulb
add
mov
jg
int3
sbb
jne
mov
outsl
pop
mov
fmull
movsl
dec
adc
scas
mov
clc
dec
push
cmp
in
pop
in
mov
sbb
jns
mov
mov
mov
jbe
or
jne
out
mov
push
push
add
mov
push
push
ret
add
fcomps
mov
adc
and
xchg
ljmp
outsl
scas
and
or
xlat
je
mov
dec
out
jbe
pushf
pop
sti
push
cmp
dec
aas
ljmp
push
dec
push
mov
jne
out
mov
pop
pop
inc
out
lock
xchg
adc
and
add
cmp
or
dec
loop
test
cmc
or
and
pop
pop
or
xor
inc
sbb
sbb
add
test
xlat
push
icebp
rolb
inc
pop
jne
roll
push
imul
fdiv
add
push
add
mov
mov
rorl
push
push
in
sub
jno
mov
sub
adc
pop
dec
lahf
insl
xchg
cmpsb
mov
push
outsl
dec
fsubl
xchg
jecxz
mov
xchg
and
out
xor
inc
sbb
xor
push
jg
test
divb
mov
push
call
stc
inc
sub
aad
sbb
sbb
mov
mov
add
or
shlb
sbb
arpl
imul
gs
arpl
out
test
mov
and
or
sub
stc
add
sub
pop
adc
push
into
and
in
es
call
mov
dec
sbb
mov
call
pop
and
in
or
addr16
jnp
cmp
stc
sbb
pop
or
mov
sbb
or
jg
mov
icebp
iret
jmp
jge
jge
lock
loopne
scas
mov
adc
cmp
xchg
in
xor
cmpsl
mov
inc
cli
loop
aaa
fcompl
cmp
sbb
into
xor
lods
adc
sti
sub
mov
push
cmpl
pop
inc
jge
pop
ret
mov
ja,pt
out
and
adc
repnz
xlat
xor
ret
sbb
in
stos
xchg
xlat
or
mov
mov
fiaddl
add
cmp
mov
gs
cmpsl
dec
cld
imul
adc
test
movsb
mov
xor
or
sub
mov
lcall
cwtl
sub
jns
data16
add
cmpsb
ss
ljmp
std
pop
cmp
sub
jns
addr16
fcoms
jmp
nop
cmp
sti
cs
add
jno
daa
repnz
xchg
daa
mov
inc
mov
or
adc
push
mov
sbb
pop
pop
outsl
inc
pushf
nop
jl
cmp
call
pusha
loop
aaa
sub
push
pop
mov
arpl
or
push
and
and
stos
jnp
mov
sahf
repz
jmp
dec
cmp
xchg
insb
test
pop
mov
add
scas
repnz
fmull
jp
and
cmp
sbb
fsubrl
cld
std
sbb
mov
cmc
je
in
xor
cwtl
mov
bound
add
mov
sti
push
mov
cmp
xor
loop
sbb
sub
int
dec
lret
dec
jb
or
sbb
insb
mov
jp
loopew
pop
sub
xor
adc
ja
cltd
lock
popa
push
cmp
mov
or
cld
xchg
das
int
addl
into
cmp
adc
mov
das
in
cwtl
inc
mov
pusha
add
cmc
ss
test
push
sahf
pop
pop
cld
xchg
sbb
scas
or
lea
notl
imul
mov
enter
jecxz
mov
mov
pop
cmp
xor
add
xchg
ret
adc
xchg
stc
gs
orl
or
ret
or
call
repnz
mov
lcall
adc
hlt
mov
test
and
cltd
and
xlat
cmpsl
jne
mov
cmp
jge
test
cld
xchg
inc
mov
jne
adc
test
xor
push
imul
or
je
jecxz
shl
mov
adc
imul
sub
xchg
lods
xor
rcrb
pop
outsl
int3
jecxz
mov
mov
mov
rcrl
cli
jmp
fs
sbb
jo
data16
ja
addb
xchg
jg
pop
or
decl
jmp
aad
xchg
lret
mov
je
dec
and
push
push
idivl
aaa
mov
mov
cmp
mov
mov
hlt
pop
clc
in
xchg
gs
por
mov
and
pop
out
in
sbb
gs
add
mov
cltd
movsl
xor
addl
mov
inc
and
sub
jnp
fs
dec
mov
mov
std
sub
test
pop
sub
fs
xor
jmp
stos
dec
rorl
adcl
scas
or
std
repnz
mov
xchg
xchg
jne
xor
cs
lret
daa
cmpsb
gs
push
and
inc
xchg
mov
inc
mov
std
cltd
pop
sahf
pop
xor
bound
icebp
enter
pop
inc
das
fwait
rcl
iret
add
push
insb
fisttpll
jo
test
pop
jne
sbb
out
sbb
pop
mov
and
lds
mov
jns
adc
in
jns
ljmp
lock
cli
xor
dec
cmc
in
pop
movsb
adc
js
out
movsb
pushf
dec
push
add
das
call
gs
cmp
jl
sbbl
jecxz
out
in
inc
xor
jg
imul
cmp
jae
jg
mov
jo
addl
sub
arpl
push
std
inc
add
loop
sar
push
subb
outsl
testl
std
mov
loope
cmp
popa
push
arpl
inc
fisubrs
out
loopne
and
xchg
in
dec
jb
pop
sbb
mov
dec
inc
sti
enter
or
push
mov
scas
lret
or
pop
inc
mov
fldt
int
jle
out
jnp
lret
mov
pop
mulb
jmp
inc
fwait
and
mov
inc
fstpt
sbb
out
sub
pop
lahf
jg
dec
dec
out
arpl
push
ljmp
sti
or
sub
rcrl
mov
es
jno
xor
xor
mov
mov
sub
add
xchg
pushf
sub
mov
fdivl
mov
daa
testb
and
scas
fidivl
int
adc
mov
pop
or
insb
lcall
inc
and
pusha
pop
pop
pushf
sub
sti
mov
pop
mov
int
bound
mov
sub
sti
sub
pop
and
jl
pop
push
int
cmp
adc
lods
mov
mov
stos
pop
les
dec
fisubl
test
mov
shlb
pmaxub
test
ret
imul
xor
imul
leave
pop
inc
pop
xchg
xorl
inc
xchg
dec
and
push
fs
dec
lret
inc
xchg
xor
mov
sub
mov
inc
imul
pop
icebp
jnp
pop
jle
xor
orb
cmpsl
int3
jno
shlb
sub
add
clc
in
cltd
mov
hlt
mov
sbb
adc
imul
testb
lds
cmp
mov
jle
mov
mov
xor
mov
pushf
cmp
and
mov
adc
leave
sti
cmc
add
movsb
sbb
push
leave
mov
adc
pop
cmp
or
mov
adc
pop
sbb
dec
push
or
vpsrad
movsl
aaa
es
out
negl
sar
addl
push
cmp
ret
out
mov
inc
mov
cwtl
or
inc
jp
sbb
leave
sub
dec
test
scas
push
movb
push
inc
mov
clc
jg
daa
fisubrs
pop
dec
mov
addr16
cmp
sbb
push
push
pop
into
lret
cmc
or
mov
fwait
mov
clc
pusha
pop
shrb
sub
jp
fs
lods
push
xchg
jge
inc
push
pop
push
cwtl
cli
sub
push
mov
popa
cmp
fisttpl
cmp
mov
jp
adc
xchg
daa
ja
in
fdivrs
bound
call
das
and
cmp
jno
mov
lahf
js
jnp
cmpsl
push
adc
outsl
cmp
mov
adc
dec
aaa
sbb
or
sti
sbb
fsubrp
out
sti
jecxz
or
inc
sub
push
clc
fmuls
cmp
into
das
fsub
jnp
xlat
loopne
pop
ret
cld
pusha
je
leave
mov
mov
movsb
loop
add
push
lds
dec
insb
daa
sbb
sbb
cmp
clc
movsb
push
clc
add
sub
es
cwtl
in
popa
mov
out
and
call
lret
sbb
and
scas
mull
push
cmp
push
movsl
inc
and
bound
mov
cmp
sbb
and
popf
fmul
add
push
or
cmp
cmp
in
pop
and
sti
mov
fs
inc
add
fnstcw
jmp
lock
test
je
popa
xchg
rorb
fs
sarb
or
rcrb
mov
xchg
push
pushf
or
xchg
push
jae
pusha
pop
pusha
loop
jne
mov
mov
mov
jmp
push
push
arpl
in
outsl
cld
enter
movsl
adc
out
imul
or
pop
gs
sub
std
ja
std
adc
xchg
imul
cmpsl
call
pop
or
and
sahf
pop
xchg
ljmp
int
mov
in
out
sbb
cmp
lret
clc
mov
fcomp
insb
out
sub
and
popf
sub
sub
push
bound
xor
add
push
and
xchg
push
ss
jns
cmpsb
scas
jnp
adc
sar
fisubs
push
cwtl
push
add
jbe
lock
imul
je
and
loopne
pop
mov
outsl
mov
mov
jmp
cltd
jmp
xchg
pop
jnp
movb
pop
mov
movsl
std
in
pushf
in
outsl
jno
xchg
pop
adcb
call
gs
dec
xchg
jecxz
gs
add
sbb
outsb
cwtl
lahf
mov
cmpsb
xchg
call
mov
sbb
mov
mov
cli
dec
sbb
outsl
inc
lds
fdivl
jne
pusha
cmpsl
xchg
fadds
and
mull
pop
es
cmp
lret
jbe
inc
sub
es
es
and
aas
jmp
inc
sbb
and
mov
scas
jbe
ja
out
out
jnp
jge
mov
push
stc
in
arpl
cmp
std
imulb
fmull
push
popf
test
daa
lcall
mov
hlt
movlps
ds
xchg
lret
fs
out
enter
dec
and
xchg
and
inc
mov
out
mov
mov
mov
pop
push
and
test
jmp
pop
cmpsl
cmp
pop
mov
fs
sbbl
xor
scas
int3
pop
ljmp
cmp
insl
dec
ljmp
inc
cld
cmpsb
cmp
mov
jmp
or
repz
mov
mov
cmpsl
pop
cmp
sub
fbstp
es
adc
mov
jp
inc
aad
aas
cmp
ljmp
mov
into
enter
scas
mov
ret
mov
iret
insl
push
dec
xchg
add
pop
pop
pushf
sbb
fdivs
push
jo
inc
push
mov
pop
mov
mov
add
loope
cs
fbstp
and
pop
pop
rcrl
xchg
test
jnp
data16
data16
out
jnp
jecxz
gs
jno
mov
lret
add
ljmp
shlb
clc
cs
testb
push
es
pusha
pop
inc
add
jmp
movsl
sbb
cli
xchg
xchg
mov
jge
sbb
sub
rcrb
xchg
jo
jg
in
adcl
sbb
xor
mov
into
push
push
inc
pop
cs
push
aas
mov
xlat
sahf
dec
mov
xor
xor
sub
mov
pop
fwait
je
cmp
push
inc
call
loopne
int3
push
pop
lahf
or
jp
fimuls
je
mov
mov
and
dec
or
in
add
stc
cli
pop
cmpsb
int
mov
sbb
sbb
xor
cmp
adc
aaa
push
mov
loopne
pop
xchg
jbe
push
mov
pop
test
leave
cmp
and
push
ljmp
imul
sbb
aad
adc
mov
jae
or
stc
je
mov
add
call
lock
ret
pop
pop
lret
cwtl
fimull
icebp
pop
jnp
dec
and
lds
sahf
push
rorl
dec
and
or
push
sub
mov
add
rol
xchg
pop
stc
bound
in
pop
lcall
fsubr
pop
adc
popf
gs
addr16
jge
mov
test
fwait
gs
cmpsl
add
mov
mov
bnd
sti
movsl
mov
loope
gs
scas
or
insl
and
arpl
in
pushf
xor
fisubl
vcvttpd2dqx
inc
rolb
pop
test
movsl
shll
shrl
mov
jne
mov
jae
add
call
sbb
arpl
test
cmp
mov
cwtl
retw
dec
cli
mulb
scas
cmpsb
aaa
lcall
adc
incb
cmp
pop
leave
outsl
dec
sahf
fsubrl
aam
mov
in
test
cmp
cli
outsl
pop
xchg
sub
mov
push
push
xor
fnstenv
xor
pushl
aam
pop
xor
aas
mov
ftst
add
or
or
xchg
fs
inc
mov
arpl
push
jge
mov
xchg
push
inc
xor
aam
push
lds
and
lret
add
sbb
cltd
pop
imul
jg
lcall
sbb
or
popa
pop
ljmp
mov
or
mov
cmp
repz
pop
jne
or
pop
mov
and
cmp
out
dec
adc
or
loopne
and
in
jnp
jno
lret
aam
adc
and
adc
add
cld
scas
lret
fadd
pop
call
push
les
sbb
ljmp
das
or
push
cmp
cmp
pop
outsl
cs
xor
icebp
pop
fs
into
mov
cli
out
jb
js
sub
int
mull
mov
mov
outsb
cli
js
das
into
stc
jp
or
je
scas
popa
push
mov
push
or
mov
jno
stos
mov
test
sub
add
push
mov
daa
ja
out
cwtl
inc
out
jmp
pop
sbb
inc
push
sbb
fdiv
cmp
pop
pop
inc
xchg
cmp
cmpsb
mov
pop
aas
sbb
jne
mov
outsb
fucom
add
movsb
cmp
fs
ror
int3
cmpsl
jns
clc
int3
jmp
sbb
pop
cmc
sbb
fdivp
pop
scas
sbb
imul
push
sbb
pop
adc
lcall
or
mov
push
sub
lahf
and
cmp
push
cmp
out
les
sub
jnp
sbb
mov
add
jnp
pusha
rolb
cmp
xchg
push
pop
jmp
pop
sti
out
das
xor
fstpl
popa
xchg
aas
roll
subb
stos
out
xchg
and
sti
shlb
and
out
popa
sbb
fsts
dec
in
inc
ljmp
add
out
call
mov
mov
cwtl
pop
dec
testl
sbb
outsb
cs
insl
lcall
or
scas
mov
cmpsl
out
jb
ret
pop
xchg
dec
repz
mov
pop
filds
pop
mov
pop
subl
divl
xor
test
sbb
test
and
cs
ret
pop
pop
mov
aaa
and
das
movsb
dec
outsl
jne
jl
insb
es
cmp
dec
shrb
ds
sti
imul
xchg
xchg
test
sahf
lcall
pop
mov
push
ss
leave
lahf
xlat
mov
mov
out
xor
fwait
pop
cmc
sbb
clc
mov
sub
and
das
sbb
lahf
ucomiss
and
push
int3
nop
testl
mov
cld
sbb
dec
lock
or
call
cmp
jb
rcl
inc
jmp
ds
jle
pop
sbb
in
or
repz
pushf
push
cmp
sti
and
test
dec
mov
mov
mov
mov
or
pop
xor
mov
push
jp
bound
cmp
ds
cwtl
in
add
or
movsb
mov
xchg
lret
sahf
out
bound
bound
pop
push
xchg
into
cltd
pop
scas
push
pop
push
jne
ret
mov
sbb
jae
sbb
mov
mov
je
pop
sahf
lahf
sbb
ja
xor
aam
sbb
jecxz
or
adc
xchg
sbbl
pop
sbb
sub
mov
in
pushf
pusha
js
out
pop
mov
and
pop
subl
repz
xchg
lods
mov
cmp
xor
gs
dec
push
in
mov
mov
lods
xchg
sub
and
sbb
lods
ficoms
or
lock
sub
jne
int3
sbb
popf
fisubrl
call
and
sbb
dec
sbb
jmp
stos
out
cld
and
sub
mov
shl
hlt
arpl
mulb
sbb
rorb
or
call
pop
mov
mov
pop
sbb
sub
mov
jo
push
add
gs
leave
and
test
sub
mov
nop
mov
call
clc
fs
repz
dec
addr16
jno
sub
insb
jno
adc
add
and
mov
mov
aaa
jg
xchg
inc
dec
sbb
fnstcw
mov
dec
or
adc
in
mov
cmp
imul
or
mov
inc
cmp
cs
insb
xorb
int3
sbb
and
in
jge
je
cmp
movb
fwait
xor
test
int3
sbb
pop
jmp
jp
data16
arpl
fsubs
loopne
and
mov
jp
es
adc
xchg
push
es
xchg
aad
cmp
pop
cs
int3
adc
popa
movsl
add
sbb
shl
nop
mov
movsb
je
mov
pop
inc
inc
mov
addr16
ds
sub
in
lret
push
movsb
sub
and
dec
sbb
cld
pop
inc
pop
jbe
ja
scas
hlt
jg
sub
pop
lret
repnz
pop
rcll
lods
outsl
scas
fisubl
aad
sti
test
fisubrl
lods
mov
fsub
je
xchg
adc
inc
or
mov
sbb
dec
jg
lock
or
adc
in
mov
cmp
scas
sbb
idivl
data16
das
sti
dec
adc
aad
xchg
jle
int3
cmp
dec
cwtl
sub
mov
cmp
dec
push
mov
arpl
add
ja
add
fs
pop
outsl
or
shl
and
sub
pop
test
mov
push
popf
jg
lds
add
jge
psrlw
mov
jg
cli
insb
push
dec
adc
cltd
add
dec
jmp
push
push
mov
sti
int3
xchg
lods
fcmove
add
add
dec
cwtl
iret
fcmovnb
icebp
sbb
out
cmpsb
clc
pop
addr16
gs
and
sbb
xchg
mov
in
cmp
cmp
daa
mov
cmpsb
mov
jle
cmpsl
xor
adc
and
jnp
xchg
cmpl
data16
add
js
lds
sbb
add
fwait
cwtl
xchg
cmc
clc
lret
sbb
dec
xchg
inc
adc
sbb
ret
push
adc
in
icebp
lds
or
jo
sub
popf
sbb
fdivrs
loopne
dec
popa
int
fwait
cwtl
push
js
add
and
test
push
sub
sbb
adc
dec
pop
rcpps
xor
sub
jg
pop
and
mov
cmc
pop
adc
lcall
imul
adc
mov
xchg
je
scas
sbb
adc
sub
bound
clc
aam
push
and
xor
into
add
push
and
pop
and
loope
call
sahf
imull
or
cltd
aad
or
pop
cmp
jno
pop
pop
cmp
sti
daa
mov
xor
lea
and
movsb
out
xor
mov
cmpsb
sbb
inc
jne
test
dec
pop
cld
cmpsb
push
stc
mov
les
jnp
dec
leave
sbb
cwtl
nop
insb
jmp
insb
pop
fiadds
jmp
mov
pop
or
ficoms
or
xor
bound
xor
popa
dec
and
loopne
jns
stc
fwait
out
imul
mov
pop
dec
icebp
add
les
syscall
aam
inc
fsubs
fisttps
inc
push
pop
jo
xchg
and
pushf
pop
push
lret
add
pop
dec
dec
pop
adc
arpl
seta
jnp
in
mov
das
rcrb
fsub
stc
sub
enter
and
pop
and
movsl
add
scas
lock
movsl
shl
pop
mov
popf
movsl
dec
push
out
sub
ljmp
dec
fsubs
lods
mov
mov
fldenv
fcomip
and
and
fadds
roll
sbb
mov
xchg
and
lcall
xor
fs
rcl
lock
fcompl
dec
and
sbb
cwtl
cli
in
clc
cli
sbb
insl
dec
movsb
mov
in
mov
sbb
test
rclb
ja
test
outsl
and
jp
sahf
sahf
insb
dec
mov
xchg
mov
test
mov
shl
hlt
arpl
loopne
jne
ret
test
pop
sub
imul
cld
push
sub
sbb
loopne
lods
pop
push
cmp
and
push
dec
das
std
mov
push
pop
addr16
mov
cli
movsb
ficoms
lcall
gs
pop
and
es
xchg
call
dec
dec
xor
xchg
cltd
xor
scas
sub
imul
push
jno
mov
negl
sbb
shr
gs
adc
dec
movsl
pop
xchg
mov
pop
push
test
out
pop
cwtl
movsl
gs
mov
sbb
out
lods
cmp
jl
cli
test
cwtl
dec
mov
sub
lcall
fdivrs
arpl
cltd
mov
jae
push
leave
lcall
test
pusha
adc
mov
stc
movsb
sbb
inc
aas
mov
mov
rclb
lock
and
inc
xor
mov
sub
push
dec
test
leave
add
lcall
dec
fsubrs
push
imul
arpl
test
movsb
aad
and
push
dec
push
add
inc
movb
add
popf
stc
add
leave
in
jne
stos
or
out
mov
push
sbb
fsubrl
repnz
pushf
cwtl
cmp
pop
imul
inc
cli
sbb
fstl
lods
sub
jns
mov
jmp
cltd
dec
loopne
push
mov
mov
xlat
xor
mov
in
jle
jge
jne
aas
push
subl
cmp
bound
mov
adc
mov
cmc
shl
add
shrl
pushf
popa
test
js
jge
xor
mov
popa
mov
mov
push
cmp
inc
cs
push
dec
add
sbb
push
out
push
lods
push
lock
inc
addr16
fistpl
jp
mov
test
out
movsb
aad
add
xchg
xchg
sbb
aam
cmp
jnp
aam
mov
loopne
pop
sahf
sub
add
leave
jmp
les
mov
jbe
dec
and
test
dec
std
xchg
data16
cmp
pop
add
pop
sahf
std
fdivs
lock
jp
gs
pop
stc
or
imul
enter
fimull
fstps
aam
xor
and
and
pop
push
add
sub
cld
xchg
mov
jns
pushf
aad
stos
ret
div
or
xor
or
or
or
clc
in
cwtl
push
inc
leave
es
insb
cmpb
ja
xor
clc
outsl
int3
sbb
xchg
out
add
push
jp
dec
mov
mov
in
jns
jns
addr16
mov
into
addb
int3
ret
dec
call
shrb
sub
xchg
and
sub
out
sbb
dec
pop
cs
test
jne
push
jbe
out
sub
push
pop
or
push
mov
dec
mov
push
dec
xchg
scas
mov
sbb
sbbl
icebp
and
call
insb
js
mov
push
in
testl
pop
xchg
das
jne
push
nop
jle
jae
push
push
inc
add
pcmpgtw
test
jne
shll
dec
pushl
rcrb
dec
jne
movb
sbb
bound
jmp
jne
es
sub
jbe
mov
mov
cwtl
test
inc
aad
scas
out
push
sub
test
mov
out
pop
push
fdivrs
jb
and
sbb
dec
pop
fs
adc
ljmp
jp
cli
cld
xchg
cmpsb
sbb
pop
lds
sti
xchg
push
rcr
in
xor
sbb
jnp
imul
lret
ja
cmp
and
jne
mull
ficompl
jg
or
fidivl
movsl
icebp
pop
loope
sub
sbb
stos
or
xor
lds
pop
pop
fcom
call
test
dec
sbb
and
popa
pop
pop
push
sahf
add
mov
xor
mov
test
ficompl
in
fistpl
and
xorb
cmpsb
mov
mov
sub
cmp
out
dec
mov
inc
lcall
push
mov
int
and
out
lret
cmc
ja
cs
mov
sub
mov
fsts
xchg
rcrb
xchg
jb
xchg
dec
xchg
or
pop
adc
ja
fnsave
xor
cmpsl
mul
or
cmp
inc
insl
fsts
xchg
das
scas
or
mov
add
cmp
jecxz
mov
and
ljmp
push
sbb
popa
insb
inc
dec
cmp
lods
adc
pop
inc
jecxz
aas
cmp
fistpl
loopne
or
gs
push
loopne
dec
fcompl
pop
gs
jnp
dec
sub
mov
sbb
ja
dec
cs
rcr
jnp
into
fwait
cmpsl
filds
mov
cmp
arpl
sahf
addr16
inc
dec
insb
push
sub
or
dec
in
dec
aam
dec
fadd
sti
xor
mov
mov
repnz
xchg
inc
cs
mov
dec
xchg
bound
fistps
into
pop
push
pop
sbb
mov
jbe
cmp
int
dec
mov
inc
sub
mov
push
xchg
pop
xchg
jmp
pop
and
mov
adc
or
sar
push
cmp
xor
mov
sub
push
jo
cwtl
fcoml
inc
fdivl
stc
aad
imul
adc
pop
push
scas
fcompl
in
mov
aad
sub
lock
andl
dec
sub
sbbl
ljmp
sbb
xor
mov
adc
es
std
sbb
stc
xchg
movsb
addr16
jl
arpl
jne
xlat
mov
imulb
daa
cli
push
dec
ja
int3
push
mov
ja
stc
ja
mov
sub
js
in
jo
out
mov
xchg
push
or
fidivrl
xchg
scas
in
in
pop
cmovns
scas
clc
imul
push
inc
ljmp
aad
lahf
xchg
andl
jg
lods
insb
add
mov
cmp
ret
add
sbb
push
dec
enter
adc
negl
sbb
and
and
shl
ljmp
jne
push
insb
insl
cltd
daa
or
scas
dec
in
lcall
cli
sbb
mov
aaa
mov
fcompl
push
dec
cmpsl
jne
sub
std
in
push
in
lea
movsb
jmp
sub
dec
mov
push
sbb
pushf
out
cwtl
daa
mov
orb
add
xchg
into
xor
or
or
data16
push
xchg
jmp
ja
and
pop
inc
cmp
cmp
sub
xchg
add
jae
mov
outsl
dec
testb
mov
inc
cmp
test
in
cli
fiadds
xor
insb
xor
sbb
leave
scas
or
jl
ljmp
push
pop
fsubrs
mov
jle
add
leave
mov
lds
pop
arpl
popa
dec
sahf
cltd
push
dec
repz
test
out
fsub
or
out
mov
add
pop
clc
pop
add
sbb
push
mov
nop
sub
mov
lea
or
mov
repnz
das
cli
xchg
lret
shll
popa
mov
daa
bound
add
test
mov
mov
jmp
fsubrs
out
jne
into
inc
loop
or
clc
mov
pop
ja
psrlq
mulb
cs
imul
out
imul
jp
test
jg
outsl
cmp
por
push
xchg
add
into
jns
cmpsl
push
push
clc
scas
lea
test
lods
adc
jp
pop
cmpl
into
dec
jl
repz
xchg
inc
jp
stos
xchg
or
aam
dec
outsl
cld
push
imul
jge
pop
fnstcw
sbb
sbb
cmp
or
cwtl
cmp
pop
into
out
lds
enter
adc
or
mov
out
mov
sub
adc
ret
sahf
and
mov
jo
lods
push
jge
call
fcoms
sub
out
pop
dec
dec
jmp
xchg
int3
xchg
arpl
fs
inc
rolb
arpl
stos
cld
dec
sbb
mov
pop
push
out
gs
movsb
mov
es
xchg
ret
jmp
inc
pop
insb
sbb
ss
pop
sub
dec
pop
jg
cmpsl
sub
push
pop
mov
data16
cmp
cmpsl
add
mov
xor
inc
outsl
pop
pop
ljmp
sub
pop
mov
movsl
pop
in
aaa
and
jecxz
and
push
dec
xor
xchg
push
xor
push
out
imul
dec
pop
push
jns
push
fnstsw
lret
and
mov
sar
test
repnz
leave
jg
sbb
dec
jecxz
enter
and
and
pop
inc
sbbb
add
sbb
mov
sbb
ljmp
jae
orb
hlt
imul
fbld
scas
pop
adcl
mov
gs
mov
loop
iret
adc
pop
mov
or
insb
mov
mov
push
outsb
xlat
push
lahf
pusha
jmp
xor
push
pop
pop
jg
das
sub
add
jmp
pop
xchg
sbb
push
leave
dec
lods
pop
dec
push
lock
movsl
arpl
add
xchg
js
add
sahf
lahf
jmp
and
mov
cmpsl
cld
pop
ljmp
sub
dec
fistl
push
dec
inc
mov
cs
jne
and
mov
mov
jp
xchg
sub
lea
rorb
movsl
push
xor
adc
pop
mov
inc
cmp
fisubs
shlb
inc
jge
ret
rcll
jno
push
in
fadd
fdivrl
insl
and
sub
arpl
imull
xchg
arpl
mov
movsb
inc
mov
cmp
pop
std
pushf
stos
scas
dec
xchg
pop
adc
sbb
fists
in
mov
js
fists
cli
jne
or
orl
push
mov
xchg
push
sahf
xlat
xchg
fcomp
cmp
out
mov
and
pop
inc
mov
xchg
pushf
mov
test
xchg
aad
cwtl
sbb
pop
std
add
jne
dec
or
fs
das
test
pop
mov
fildll
addr16
cwtl
cmp
popl
jmp
cs
sbb
outsl
cli
jp
pop
sti
jp
jno
and
imull
mov
add
not
andb
mov
fmull
push
dec
mov
xchg
mov
ds
push
xchg
call
adc
sbb
lahf
mov
push
outsb
xor
rorl
push
pop
ja
enter
adcw
mov
test
ret
jbe
mov
in
incl
mov
cld
dec
pop
icebp
lahf
ret
mov
sub
sbb
mov
loop
adc
push
add
inc
sbb
jo,pn
mov
mov
jg
or
cltd
pop
dec
push
add
dec
leave
stos
cmpsb
pusha
add
jne
xchg
rorl
cs
inc
aaa
pushf
dec
divb
mov
mov
scas
fdivrl
mov
dec
out
pusha
lods
ss
adcb
xor
shr
mov
sub
test
and
pusha
imul
shlb
jmp
push
jne
mov
xor
clc
or
out
fstps
mulb
sub
inc
or
mov
sbb
and
sub
mov
sbbl
jecxz
es
sahf
mov
sub
or
xor
shrb
fnstcw
jmp
mov
clc
push
sbb
pop
mov
or
jnp
adc
xchg
es
es
sbb
mov
fldenv
mov
jbe
cmp
clc
cmpsl
xor
cmp
dec
mov
inc
cmc
clc
mov
mov
loopne
sub
addr16
es
bnd
jns
std
jge
adc
sbb
stc
sbb
xchg
dec
ljmp
leave
or
imulb
cwtl
into
add
imul
inc
mov
or
int
push
pop
mov
add
hlt
imul
leave
and
pop
fsubl
xor
cmp
sub
stos
cmpsb
out
mov
inc
sub
mov
xchg
and
sub
fimuls
stos
cmp
sub
pop
xor
xchg
sbb
adc
pop
fdivs
pop
call
jbe
call
sub
icebp
mov
sub
pop
dec
std
mov
push
pop
xchg
out
dec
jge
stc
add
icebp
popa
int3
insb
push
popa
sub
and
push
shrl
lods
cmp
sbb
mov
mov
aam
test
stc
flds
insl
xchg
adc
andb
push
lea
cmovnp
mov
or
stos
fstps
lret
aaa
fcmovnu
cwtl
xor
or
int3
lods
fsts
pmulhw
pop
fmul
cmp
out
add
xchg
loope
mov
lds
sub
ja
jp
adc
fdivrl
push
add
mov
xchg
loope
jne
mov
xchg
cmp
cmpsb
xchg
add
xchg
lret
imul
sarl
push
jne
out
xor
addr16
sahf
jns
iret
sub
fldt
mov
andb
movsb
lret
push
xchg
dec
call
enter
sub
add
jle
insl
pushf
lret
imul
add
push
pop
add
loop
mov
xchg
dec
or
loop
cwtl
and
popf
fldcw
outsl
clc
leave
pop
cmpsb
pop
outsl
sbb
out
insl
pop
or
into
pop
inc
inc
inc
ds
or
ds
xchg
sbb
sub
clc
lock
mov
sbb
xchg
lahf
aad
pop
push
xor
clc
jne
dec
popa
mov
fsubrl
mov
scas
popf
lahf
push
pop
fnstcw
mov
in
pop
loopne
cwtl
xchg
xchg
into
and
or
cmp
cmc
loopne
fmuls
or
in
ret
test
fmuls
in
or
sbb
mov
mov
lods
jnp
outsl
leave
bound
lock
hlt
mov
xchg
gs
sti
cmpsb
cs
clc
scas
das
sbb
das
xchg
shrl
xlat
sbbb
out
mov
daa
mov
ret
dec
lret
insb
data16
cmp
gs
pop
out
mov
add
mov
and
insb
das
add
dec
mov
test
cmpsb
jmp
and
clc
xchg
xchg
xchg
test
cmp
mov
sbb
aas
pop
ret
sbb
pushf
cmp
sahf
push
aad
inc
movsl
inc
rcr
push
dec
int3
jne
sbb
shrb
outsl
pop
movsl
push
xor
orb
dec
addr16
mov
sbb
jl
test
insb
xchg
js
ret
scas
stc
sub
movsb
sti
push
out
mov
lods
ss
mov
adc
lahf
inc
es
lcall
lods
or
or
in
xorl
sub
sbb
jg
insb
test
mov
cwtl
and
mov
xchg
mov
in
pop
cs
sbb
inc
mov
push
cwtl
imul
mov
popf
cmp
pop
les
inc
push
sbb
mov
add
inc
add
xchg
stc
pop
daa
pop
pop
hlt
mov
dec
clc
ljmp
daa
clc
dec
cs
xor
pop
inc
daa
gs
je
repnz
jne
scas
leave
pop
pusha
incb
push
pop
or
xchg
xor
pop
push
or
jno
xor
xchg
cmpsb
lahf
mov
cmp
shll
pop
mov
jnp
data16
testl
scas
mov
inc
dec
imul
test
test
xchg
test
dec
dec
aam
insb
adc
dec
in
pop
sti
outsl
xor
ret
sbb
leave
sbb
bound
and
ljmp
shlb
cwtl
fwait
mov
jg
aad
fcomps
out
pop
mov
ljmp
adc
xchg
sub
arpl
pop
push
pop
mov
es
shl
jne
rcll
call
mov
inc
jne
and
fsubr
fcmovne
sbb
push
loopne
dec
fdivrl
mov
pop
xchg
pop
mov
add
rcl
adc
js
dec
cli
popf
mov
or
dec
clc
aad
dec
das
sub
sbb
jl
push
int
cmp
jge
test
add
lds
inc
cmpsb
or
or
jg
mov
lock
push
mov
xor
sub
aam
stc
dec
mov
data16
pop
jnp
sub
sub
push
stc
pop
sarl
jae
sub
mov
scas
xor
mov
dec
cmp
jmp
out
lds
in
pop
dec
arpl
lods
in
pop
and
clc
bound
sbb
std
lcall
lcall
and
mov
in
pop
pushf
loopne
dec
clc
out
lcall
sbb
movsl
cli
fisttpl
imul
sub
mov
mov
and
or
push
push
mov
cs
mov
mov
mov
mov
mov
and
scas
inc
fisubs
dec
out
mov
loopne
and
mov
push
add
stos
shll
stos
pop
addr16
cmp
ret
fisubrl
out
in
jb
add
pop
or
add
push
push
xchg
mov
imul
arpl
jg
xor
aad
lahf
sti
jmp
fld1
das
mov
shl
dec
ja
jge
or
sub
sub
test
lahf
lret
fildll
leave
lcall
inc
testb
sbb
push
outsl
insl
out
scas
dec
outsl
fmuls
popa
push
cmc
in
sbb
and
or
rcrl
sbb
into
xor
leave
pushf
cmp
outsb
popa
push
scas
push
mov
out
inc
test
fdiv
add
inc
pop
sbb
clc
sbb
or
and
cmpsl
in
or
movsl
ss
fnstenv
dec
cmpsl
in
movsb
sub
lods
dec
fs
insb
dec
inc
pop
jne
inc
or
dec
out
cwtl
jne
mov
sub
enter
jbe
addr16
daa
lret
cs
inc
add
inc
lods
outsb
push
aam
loopne
pop
cmp
lret
mov
shll
pop
scas
mov
push
xor
pop
mov
push
or
mov
jb
sbb
hlt
mov
pop
xchg
test
jne
fistps
aam
sub
pop
stc
inc
lcall
js
mov
pop
arpl
add
push
mov
inc
jne
mov
jg
cwtl
lea
xchg
or
mov
mov
mov
xor
popf
jmp
jmp
fwait
push
sbb
push
shll
clc
lcall
mov
icebp
sub
or
fsubrs
add
call
fcomp
add
call
test
arpl
iret
out
fcomp
sbb
cmp
or
jmp
pop
sti
fwait
push
addr16
mov
push
lods
cmpsb
testl
loopne
ljmp
fwait
scas
aas
pop
ret
mov
or
scas
dec
mul
push
gs
or
fisttpl
dec
sti
into
arpl
xorb
dec
aaa
lret
sbb
leave
push
inc
adc
mov
push
sub
rorb
in
dec
adc
push
mov
sub
test
fiadds
sahf
out
insb
pusha
jae
cmp
bound
add
jae
insb
adc
xchg
mov
push
sub
and
cmp
push
or
jne
pop
cmpsb
loope
sbbl
xor
shr
mov
mov
call
arpl
add
lods
lcall
test
lcall
mov
js
sbb
es
pushf
ret
cmpsb
jbe
fisubrs
repnz
xchg
loope
or
ret
or
movsl
dec
ja
jne
push
inc
call
imul
stos
add
test
xchg
addr16
das
sub
mov
fucompp
das
jecxz
jp
mov
jne
push
je
cmp
mov
mov
add
pop
leave
popa
call
shl
iret
lahf
xchg
push
pushf
cmp
mov
push
mov
mov
or
jnp
lcall
sub
adc
xchg
stos
int3
mov
or
popf
outsl
cmp
inc
xor
sub
push
jp
cwtl
cmp
sbb
jne
lret
outsl
sbb
shll
out
cltd
sbb
add
mov
sahf
call
xchg
pop
mov
add
push
dec
push
loop
cmpsb
divl
pop
push
hlt
divl
aam
adc
daa
cmp
cmpsl
sarl
mov
xor
cmp
adc
pop
aad
data16
sahf
test
leave
arpl
pop
scas
dec
shlb
clc
dec
push
jne
mov
or
push
cmc
cmp
daa
adc
outsb
push
cmp
adc
pushf
fldcw
sub
mov
sub
orl
mov
leave
adc
pop
movsl
pop
insb
sbb
jnp
xchg
pop
test
or
push
fs
fcmovbe
cmp
or
sbb
jbe
pushf
adc
jbe
pop
movsl
in
and
inc
xchg
jg
pusha
loope
das
dec
gs
lcall
lock
jo
test
xchg
pop
sahf
sbbl
pop
out
pop
out
dec
aas
leave
xor
push
adc
cmp
ss
fwait
insl
mov
add
gs
push
cltd
xchg
scas
call
jb
ss
lret
test
xor
adc
xchg
xchg
mov
lods
or
add
xor
pop
jbe
and
insl
and
inc
xchg
sbb
push
or
push
push
sahf
leave
in
mov
movsb
mov
push
xor
leave
add
icebp
imul
xchg
in
cmp
rolb
cmp
enter
test
and
push
pop
add
lock
add
test
dec
gs
mov
pop
es
icebp
jne
mov
push
pop
lcall
popa
push
add
in
mov
movsb
adcb
adc
clc
mov
and
les
and
addr16
dec
mov
push
sti
dec
call
xchg
inc
jmp
sbb
mov
inc
imul
or
xchg
inc
iret
leave
leave
xchg
arpl
outsw
cs
xchg
hlt
pop
imul
test
pop
imul
insb
sarb
sahf
cmc
ret
loopne
and
rorb
jp
clc
cwtl
cli
testl
pop
iret
in
aaa
push
fnsave
std
mov
inc
and
lret
pop
inc
pop
scas
out
rorb
shrl
sbb
mov
cmp
jns
mov
jbe
jl
dec
inc
xchg
jo
mov
and
jb
xor
push
sbb
sbb
add
sub
add
loopne
jge
mov
mov
cltd
mov
call
pop
mov
movsb
mov
jp
pop
sub
pop
cmc
bound
mov
data16
sub
lret
mov
in
in
xchg
subb
test
mov
and
cmp
push
and
ss
mov
fisubrs
outsl
cs
out
cmp
xor
aas
sbb
xor
mov
mov
rcr
jp
cmp
pop
sbb
xchg
gs
xchg
mov
sbb
movsl
stc
sbb
sbb
imul
dec
cmp
in
mov
mov
pop
jnp
cli
and
repnz
add
xchg
lret
repz
fdivrs
in
out
pop
xchg
dec
jmp
ret
sub
cmp
or
test
loopne
ljmp
mov
enter
daa
cli
jne
pcmpgtd
imul
das
cmpsl
mov
mov
jo
xchg
inc
xorl
test
fwait
xchg
pushf
mov
pop
add
push
inc
js
cmp
je
xor
jo
imul
jne
lea
fsubrs
mov
cs
mov
ja
sahf
fbld
sbb
dec
cmp
cs
sbb
lds
cmp
outsl
pop
aam
pushf
push
repz
and
mov
mov
clc
addb
or
and
fistpll
das
or
ret
mov
rorb
in
gs
popa
sti
incl
dec
jmp
cmp
lcall
call
into
sbb
push
test
icebp
sub
aam
add
cmp
loopne
in
sbbb
jbe
and
popf
ljmp
jo
fstps
fsubrl
push
int
or
lret
mov
xor
xor
adc
rcr
sbb
test
xor
sbb
jmp
hlt
shlb
jg
loopw
std
pop
dec
pop
call
out
out
mull
mov
inc
int3
adcb
clc
pop
cli
imul
jnp
lretw
push
vpsubb
cmp
jo
adc
sub
in
test
fldcw
test
add
movsb
xchg
es
and
xchg
mov
ret
daa
sbb
xor
xchg
gs
lret
cmp
pop
sbb
mov
aas
div
add
mov
ja
push
jp
ds
and
or
data16
data16
sbb
fwait
ja
insb
push
xor
aas
loopne
aam
cld
into
addr16
leave
iret
xorl
cmp
insl
mov
jb
and
out
lea
and
inc
mov
f2xm1
inc
add
ds
lock
ficompl
dec
and
int
arpl
loopne
arpl
je
jmp
and
jmp
cmp
or
lret
sub
and
xchg
sub
mov
adc
stc
aad
cmp
and
stc
lret
mov
dec
repz
stos
iret
add
jp
ss
xlat
mov
in
nop
or
jecxz,pt
in
call
inc
push
xor
sub
push
and
add
add
test
and
stos
or
pushf
fwait
inc
shlb
xchg
mov
mov
pushf
sub
pop
pop
mov
mov
out
sahf
cmp
cli
out
dec
push
test
stos
mov
shrl
loop
testl
arpl
push
sbb
sbb
sbb
aad
aaa
cli
int
and
sbb
pop
test
and
inc
in
movsl
test
pop
sbb
fneni(8087
mov
outsl
or
out
sbb
xchg
push
cld
mov
sbb
lods
mov
mov
push
ja
and
sbb
cmp
outsl
js
scas
xchg
mov
xor
iret
sbb
arpl
xor
pop
test
int
cmpsb
pushf
mov
aad
jne
add
add
testl
mov
fcmovnbe
movb
mov
cmpsb
aaa
mov
push
in
sub
mov
and
cmpl
lock
inc
cmp
push
inc
inc
addr16
shlb
dec
jp
sub
pushf
push
fmull
push
fwait
cld
ljmp
xor
in
and
cltd
sub
test
push
std
sub
or
pop
add
lea
bound
and
lock
add
in
icebp
mov
in
jne
mov
je
lock
adc
test
repnz
lret
mov
add
outsb
cmc
mov
imul
mov
lret
js
test
jb
sbb
push
mov
pop
daa
lods
xor
and
inc
lods
sub
mov
movsl
mov
and
sar
mov
and
cmp
enter
xchg
or
xchg
pop
lcall
dec
pop
push
std
rclb
in
and
xor
push
mov
sbb
and
and
test
sub
sub
ljmp
push
mov
push
movb
pop
sub
fadds
sbb
mov
pushl
dec
or
mov
mov
mov
xor
popa
pop
push
out
dec
pop
inc
ss
sbb
jmp
cmp
lahf
lock
pop
std
sbb
out
cmp
int
das
adc
pop
aas
data16
addr16
cld
mov
idiv
lods
hlt
and
mov
std
sub
push
jg
cli
sbb
daa
push
in
dec
inc
aaa
push
jl
ret
loopne
ss
jno
or
xchg
fsub
hlt
push
fistpll
andb
sbb
pop
or
mov
cmp
dec
inc
mov
clc
sub
stc
dec
das
mov
push
mov
mov
sbb
loope
ret
dec
inc
pop
sub
aad
fadd
cmp
lahf
movntq
insl
mov
aam
aam
pop
insl
pop
lret
add
and
jo
imul
and
push
leave
or
subb
mov
sub
mov
gs
push
call
push
lods
cli
jge
int
or
cmp
xchg
dec
divps
push
jno
mov
ja
mov
ds
sub
cmp
sbb
repnz
jne
je
ret
pop
lods
es
mov
ret
and
movsl
leave
xchg
mov
add
xchg
mov
or
push
cmp
shlb
out
cmc
xchg
pop
dec
sub
push
out
mov
push
gs
pushf
adc
push
dec
aad
std
mov
bound
insb
xchg
ret
dec
add
xor
dec
faddl
jg
or
sahf
lds
xchg
cmp
xor
jns
aaa
adc
add
loope
sbb
das
jecxz
fldenv
test
or
insl
mov
loope
cs
fsubrl
push
push
lahf
testb
push
xor
loope
je
in
in
fwait
pop
mov
xchg
jl
xor
dec
mov
outsl
and
leave
jp
or
clc
mov
test
cmc
lock
cmpsb
lea
mov
jbe
push
mov
and
pop
outsl
es
cmp
and
psrad
pop
ret
push
jge
pop
or
movsl
jne
in
dec
add
mov
repz
std
sbb
xchg
and
push
push
fistps
in
pop
fldt
jns
int3
cmpsl
dec
pop
js
inc
pop
sbb
into
jbe
adc
lods
gs
mov
dec
push
aam
sahf
sti
add
jo
dec
inc
jbe
fcomp
push
and
sub
lds
cmp
mov
mov
mull
sub
mov
mov
loop
xchg
daa
cmp
std
into
add
stc
push
decb
jmp
lcall
outsb
mull
xchg
out
scas
sbb
jbe
inc
in
jbe
shrb
loopne
and
sbb
push
sub
jge
push
dec
and
out
sub
add
push
mov
xchg
rol
cmp
std
push
add
sub
and
cmp
push
ds
std
jecxz
js
mov
das
inc
faddl
xchg
adc
or
lea
incl
frstor
sbb
in
xchg
jp
fs
xchg
cwtl
xor
addr16
pop
mov
mov
fildll
sti
jmp
les
mov
jae
ds
adc
insb
push
mov
mov
jae
pop
fmulp
add
inc
sub
sub
inc
inc
div
sub
pop
xchg
dec
cmc
xchg
dec
pop
mov
rcl
xchg
inc
pop
jl
cmp
xchg
jnp
addb
sbb
jp
inc
shr
lock
sbb
rcrl
xchg
cmp
scas
into
mov
add
dec
es
or
inc
fstpl
pop
jp
cmp
push
jnp
incl
and
cs
push
outsb
cmp
gs
xchg
or
pop
mov
cmpsl
add
loopne
mov
dec
sbb
bound
sub
gs
mov
mov
inc
lods
cmpsl
test
push
fxch
jmp
pop
mov
push
mov
sub
cmc
fisubs
in
stos
mov
push
inc
aaa
in
dec
add
lret
movq
pushf
clc
jno
cmp
lods
pop
xchg
je
xchg
out
lret
pop
xchg
stc
shlb
cmc
xor
sbb
add
inc
mov
jae
sbb
jecxz
mov
cmp
or
xchg
adc
gs
dec
fdiv
gs
dec
int3
insb
fldl
pop
jns
stc
stc
addb
sbb
in
xor
mov
or
xchg
sbb
add
imul
lahf
inc
aaa
add
loop
ljmp
jl
sub
lret
mov
pop
mov
outsl
cld
sbb
or
inc
and
cwtl
test
out
pop
inc
sbb
mov
mov
xchg
ret
gs
xchg
xchg
push
dec
int
push
mov
xchg
inc
xchg
cmp
adc
decl
and
popa
add
push
sub
push
mov
xchg
and
push
addr16
lods
push
mov
jl
sbb
aam
pop
cmp
out
pushf
jae
adc
inc
pop
nop
in
jmp
pop
xchg
sbb
push
push
out
push
mov
push
pop
pusha
cli
cwtl
ficompl
adc
add
pop
into
push
jnp
sbb
lahf
sbb
push
jmp
cmp
adc
fadds
mov
xchg
test
lock
sbb
notl
fstps
ljmp
jns
fiadds
pushf
xor
cmp
sbb
icebp
dec
sbb
fbstp
rorb
push
les
les
cwtl
jg
dec
cmp
cmp
push
mov
jge
cmp
notb
and
cmpsb
mov
adc
sbb
inc
lods
pushf
pop
fadds
push
jl
sbb
pop
lret
cmp
pop
cmpsb
sub
push
mov
iret
or
pushf
or
test
push
sbb
mov
aas
cmp
mov
pop
cwtl
rcrb
sbb
xor
mov
sub
in
addr16
cmc
adc
addr16
mov
mov
or
jbe
sbb
jmp
jno
cmpl
sti
pop
cmpsb
inc
sub
jg
pusha
sub
and
jo
mov
adc
sbb
add
sti
xor
call
stc
xchg
push
cmpsl
dec
cld
cli
xchg
in
inc
into
pop
push
popa
jmp
inc
iret
xor
mov
test
mov
mov
into
push
sbb
cmpsb
in
sbb
ret
outsl
cmp
outsl
mov
lods
mov
xchg
and
sti
adc
mov
xchg
arpl
jg
je
sub
pop
cs
add
mov
push
mov
nop
sbb
lahf
mov
das
in
pop
test
sub
fcomps
push
out
les
dec
add
sbb
mov
or
cmpsb
les
sub
popf
jmp
lock
pop
fmul
lds
fsubrp
movsl
in
arpl
dec
fsubs
xchg
cmpsl
repz
cmp
pop
fldenv
xchg
push
imul
push
sub
lret
or
push
mov
shrl
sub
sub
mov
addr16
xor
loopne
loope
jne
mov
mov
dec
fdivl
fistpl
fdivr
lock
loopne
pop
pop
jmp
pop
rcrb
popf
loopne
nop
sahf
mov
push
outsl
sbb
sbb
push
jne
push
add
and
or
lahf
aad
test
clc
jno
add
sbb
push
pop
scas
cltd
mov
pushf
mov
mov
xchg
mov
int
addr16
clc
fcompl
enter
jb
loop
adc
aam
cmp
sbb
cmova
into
sbb
inc
add
frstor
repnz
cmp
fbld
mov
pop
and
adc
jg
jno
fdivs
pop
mov
mov
jg
cmc
out
jl
data16
sbb
pop
push
faddl
outsb
xor
pop
rorl
outsb
in
movsl
cmp
lods
jo
ds
xor
jl
mov
add
and
pop
fisttpl
shl
xor
sbb
pop
dec
mov
sahf
pop
cmpsb
enter
stc
cwtl
popf
jg
mov
mov
jb
aaa
lret
imul
fisubl
xor
aas
mov
jbe
cmpsl
mov
cmp
out
add
repz
aam
in
add
push
cmp
sahf
add
xor
pop
dec
call
cld
and
arpl
lock
dec
insb
sbb
jge
cwtl
mov
add
fs
mov
mov
push
lret
repnz
mov
lods
lea
sbb
sub
daa
xor
xchg
xchg
gs
sahf
push
sbb
and
sub
insl
cs
adcl
lock
out
mov
push
mov
not
inc
shlb
mov
or
gs
insl
pop
adc
mov
fucomi
mov
jl
sbb
push
fdivrp
cs
fmull
xor
out
sahf
rol
xorb
inc
sub
pop
lcallw
xlat
imul
mov
sub
shrl
in
cmpsb
cld
lret
push
push
pop
sti
sti
sub
fwait
cld
pop
mov
fcompl
or
decl
cli
cmp
insb
call
pushf
mov
inc
pop
cmp
insb
and
negb
push
data16
out
pop
inc
sbb
cvtdq2ps
xor
mov
or
cmp
imul
mov
lret
inc
pushf
and
es
xchg
cmp
mov
ss
cmp
mov
insb
pop
mov
sti
dec
mov
or
push
shlb
test
and
pop
fmul
and
lret
xchg
lahf
rcrb
mov
outsl
pop
cwtl
mov
mov
clc
cmp
loop
mov
jnp
stc
dec
dec
jecxz
loopne
nop
and
jmp
inc
pop
pop
jge
fldenv
into
fdivs
jno
loope
scas
xor
cld
dec
sub
cld
dec
outsl
fwait
sbb
mov
pop
push
imul
adc
shlb
and
and
jmp
cmp
mov
xchg
mov
add
ret
adc
es
cmp
jl
aaa
push
mov
aas
cmp
lret
in
cmc
cmp
or
pop
repnz
jl
pop
cmp
jae
and
cmp
and
jb
clc
cmp
dec
xor
mov
push
jnp
xorb
or
cmpsb
mov
pop
hlt
xchg
pop
push
cmpsb
pop
xchg
scas
imul
mov
push
imul
and
inc
enter
xor
pop
inc
sbb
jl
pop
out
xor
stos
scas
or
sbb
adc
adc
xchg
dec
inc
or
shll
mov
loop
dec
test
or
lds
sbb
and
mov
mov
gs
mov
sbbb
adc
data16
iret
outsl
pop
dec
xor
jae
out
mov
xchg
movsl
jns
sub
ret
cli
testb
xor
jmp
dec
push
mov
push
cmpsl
adc
mov
xchg
mov
dec
popa
xor
out
inc
push
mov
pop
arpl
xor
or
cmpsl
mov
mov
lea
pop
sub
gs
in
and
sbb
or
clc
ds
cmp
and
add
mov
mov
ret
stc
loop
cmpsb
sbb
fwait
push
cmc
add
ja
lea
outsl
inc
cwtl
shll
mov
and
out
xchg
pop
mov
xchg
fstpt
sbb
sbb
inc
mov
mov
jb
int3
cmp
imul
lret
stc
fmuls
shll
mov
dec
jne
inc
pop
add
adc
mov
push
loop
mov
sbb
xchg
addr16
inc
add
fadds
push
dec
out
push
inc
cmp
mov
cli
jge
pop
insb
in
push
xchg
add
fildll
push
mov
popa
xchg
inc
int3
cmp
rcrl
fucomip
lea
cwtl
stos
push
mov
sbb
mov
fisttpll
gs
sti
test
dec
loope
adc
mov
repnz
xchg
popa
sub
xchg
cmp
mov
mov
lcall
aaa
pop
or
lahf
mov
icebp
cmp
jmp
xchg
or
movsb
imul
pop
stc
add
scas
lods
mov
mov
mov
sbb
leave
or
sbb
pop
add
fsubs
popa
sbb
and
out
and
cmp
jl,pt
xchg
mov
xor
and
push
mov
mov
jg
or
sbb
fdivs
outsl
mov
xor
stc
data16
mov
ret
imul
xchg
subl
sub
pop
jmp
orb
icebp
inc
sbb
adc
jl
test
es
gs
std
fwait
call
jmp
jns
push
or
cmp
fcompp
cmp
jecxz
jge
or
mov
lret
ficompl
mov
les
ret
enter
dec
inc
lahf
pop
fwait
lahf
ja
out
cwtl
test
fldl
mov
jae
es
in
push
cmp
pop
dec
iret
cs
rorb
push
int3
mov
mov
jnp
push
fadd
mov
and
pop
and
call
divb
mov
ficomps
imull
daa
ret
inc
jne
jle
jge
pop
leave
rcrl
ficompl
lret
mov
push
jg
call
pop
pop
or
ja
pushf
cltd
xor
cmpsl
repz
pop
fmull
sub
xor
jne
mov
pop
outsl
inc
mov
fcoml
mov
ja
jo
fwait
dec
inc
jg
and
mov
dec
mov
dec
jle
popf
pop
psrad
add
rcr
pop
fwait
or
add
out
jmp
pop
mov
mov
jbe
lds
insl
repnz
addr16
xchg
adc
shrl
out
mov
inc
mov
icebp
cltd
imul
or
jmp
jo
or
cmp
mov
into
daa
cmpsb
xor
adc
pop
pusha
test
mov
arpl
jmp
mov
push
and
sub
xchg
sbb
cli
cmp
aad
inc
popw
movsl
xlat
and
sub
sub
xor
fidivrl
lds
mov
mov
jle
mov
add
mov
fstl
pop
outsl
je
js
gs
jne
or
out
stos
pop
xchg
push
jb
ds
enter
pop
mov
push
cltd
es
dec
movsl
scas
call
rorb
mov
mov
das
fsubs
cmp
or
icebp
pop
jge
int3
setbe
cs
cli
mov
lock
xchg
sub
insl
fsubr
pop
addr16
push
mov
mov
or
stc
xchg
fidivs
outsb
adc
xchg
push
sub
pop
jns
notl
repz
adc
xchg
push
push
xor
fbld
daa
aam
dec
mov
lock
sub
out
mov
pop
mov
test
cmp
lret
push
inc
pop
test
pop
lock
dec
jno
push
imul
jge
inc
popf
jnp
add
pop
sub
fsubl
lcall
dec
lahf
mov
lea
in
mov
imul
popf
mov
jb
inc
sbbb
xchg
adc
arpl
xchg
pop
enter
mov
das
add
cmpsb
cmc
int3
add
aaa
es
out
gs
movsb
fistl
sbb
push
insl
fsqrt
decl
or
in
fcomps
mov
fdivl
mov
jg
movsl
imul
sbb
mov
sbb
enter
out
pop
aaa
dec
or
mov
sbb
hlt
mov
xor
daa
fdivs
movsb
sub
pop
loopne
lock
pusha
and
call
decl
sahf
sbb
dec
mov
and
adc
call
call
xchg
push
imul
lret
imul
popa
mov
faddp
mov
imul
jmp
test
mov
fsubl
and
mull
dec
aam
fcomps
jnp
pushf
fcmovbe
outsb
out
cwtl
loopne
enter
add
daa
fistpl
inc
out
stos
sub
ss
sbb
xchg
jp
mov
ficoml
or
cs
dec
and
and
arpl
std
cmp
xchg
mov
add
lock
je
ja
cld
mov
or
les
cs
jb
outsl
pop
add
lret
xchg
mov
int3
mov
repz
imul
lods
lods
in
mov
bnd
xchg
mov
pop
xor
shr
fwait
repz
sbb
jbe
push
pop
pop
adc
ja,pt
in
push
mov
xor
ret
mov
inc
pop
enter
xchg
cmp
bound
dec
arpl
in
lea
cmpsl
xchg
rcrl
adc
jp
in
cmpsb
xor
sbb
dec
lret
test
xchg
insl
ds
jae
insb
cmpsl
xchg
and
push
inc
and
xchg
outsl
cwtl
fcmovnu
mov
push
cmpsl
call
clc
dec
outsl
cmpsl
mov
jbe
mov
scas
cmp
sahf
cmp
in
pop
bound
dec
xor
pushf
xchg
enter
es
cltd
scas
pop
xchg
stc
adc
or
nop
pop
cmp
lock
test
ret
pop
daa
dec
outsl
leave
popf
sub
jg
sbb
call
push
mov
cli
xchg
adc
popf
cmp
jo
das
cmpsb
pusha
outsl
out
mov
sbb
andl
ja
es
fnstenv
xchg
inc
jmp
stos
fdivs
stc
add
sbb
stos
ja
add
ja
andb
cltd
and
and
ficompl
insb
mov
sbb
mov
pop
mov
adc
pop
pop
cmp
cmp
stos
lcall
or
sbb
pop
movsb
fldlg2
es
sbb
stc
cmp
ja
ret
inc
ja
pop
push
stc
ja
loope
bound
ja
lcall
ja
and
lods
xchg
xchg
sbbl
or
add
sbb
ja
arpl
cmp
lods
pslld
xchg
mov
push
or
scas
mov
out
sub
jne
xchg
lea
add
fidivrl
and
push
sbb
out
lret
or
push
in
gs
pmulhw
pop
cmp
cmp
pop
mov
out
dec
jmp
sub
dec
sbb
sbb
ss
leave
fcmovbe
add
in
xchg
decb
adc
call
jle
add
fists
cld
mov
xor
clc
out
dec
je
push
jecxz
jge
ret
cmp
daa
pushw
xor
xchg
into
call
ret
xor
or
int
cli
and
add
stc
pop
pop
mov
pusha
sub
cmp
cmc
loopne
sub
movsb
sbb
xor
clc
sbb
sub
outsl
call
pop
lods
mov
adc
cmpsb
add
daa
gs
int
dec
xchg
stos
jae
mov
or
mov
mov
arpl
lcall
jne
leave
pop
popa
sbb
js
and
mov
testb
sbb
pop
insl
jo
push
mov
aaa
mov
jno
pop
cmp
pop
faddp
push
add
add
sub
mov
push
cmp
aaa
pop
mov
mov
fdivrp
fdivrs
jae
push
call
sbb
testb
pop
mov
cmc
sbb
andb
loopne
cmp
mov
pop
cmpsl
inc
jmp
out
cmp
negl
cmp
cld
frstor
and
sub
jmp
cmp
scas
mov
sbb
fwait
dec
or
xchg
pushf
cmp
mov
adc
mov
sub
repnz
or
dec
mov
scas
fdivl
in
lds
bound
cmpsl
fcmovb
call
repz
push
adc
icebp
mov
outsl
mov
bound
jae
cli
insb
inc
sub
inc
sub
add
in
test
add
rcr
rol
insl
pop
xchg
fistl
int
outsb
adc
push
cmc
xchg
js
sbb
or
jmp
cmpl
xchg
or
dec
adcb
xchg
mov
mov
xor
cmp
cmpsb
es
pop
xor
and
pop
lods
daa
shll
pushf
sbb
lods
ret
push
js
fcmovu
hlt
test
clc
inc
add
enter
outsl
enter
sub
rcrb
js
into
int3
push
sahf
fistpll
addr16
out
jbe
dec
jmp
or
ja
add
jge
mov
lods
fxch
movsb
aad
js
mov
in
or
out
int
gs
jl
add
ljmp
jp
out
pop
push
cs
dec
add
test
push
shrb
push
add
and
jns
data16
cltd
sub
xchg
jecxz
pop
cwtl
xchg
shll
cld
or
pusha
fistps
in
xchg
mov
and
scas
add
sti
cmp
mov
loop
test
push
lock
or
movsb
stc
sub
lock
stc
mov
pop
and
push
jne
popa
or
loope
pop
iret
mov
gs
das
mov
pop
mov
mov
insl
jne
pop
js
movsl
js
icebp
dec
sbb
sub
inc
sbb
enter
jo
mov
add
sbb
scas
sub
loopne
lret
popf
xor
lret
aaa
fmul
cmp
push
fwait
imul
test
fdivs
sbb
adc
mov
sub
pop
test
int3
imulb
and
push
notl
pop
imul
insb
sub
xor
adc
xor
dec
push
xchg
jp
xor
mov
sahf
xor
addr16
xchg
jae
das
lret
inc
rcr
fsubl
cmc
cs
pop
push
mov
cld
xchg
scas
and
jb
mov
pop
lcall
iret
xor
mov
lods
imul
sub
add
sub
out
push
arpl
jl
lahf
pop
insl
sub
push
insl
pop
dec
cltd
jmp
sbb
jns
adc
daa
sahf
xor
adc
repnz
lahf
scas
pop
fisubrl
mov
aaa
arpl
sub
rorb
or
pop
into
fiaddl
xor
aas
ja
mov
add
repz
ficoms
pop
arpl
scas
dec
mov
inc
out
cmp
int3
es
stc
or
fidivl
movsl
sbb
cmpsl
std
pop
out
shrb
mov
out
push
cwtl
insl
dec
mov
dec
sub
out
es
movsl
jne
and
cli
movsb
int
lahf
sbb
fisubrl
clc
mov
fsub
std
fisubrl
cli
fmull
jmp
scas
dec
fcmovnu
fs
sub
push
mov
sub
or
outsb
sub
cmp
mov
cmpsl
out
inc
mov
jmp
push
sbb
cmp
sbb
daa
mov
cs
lods
out
outsb
push
imul
addr16
sbb
push
stos
mov
pop
lods
cwtl
test
movsl
mov
mov
lcall
pop
pop
addl
filds
xor
testb
jae
mov
sbb
cmc
subb
stos
xor
or
push
inc
scas
push
pop
mov
cmp
cli
mov
push
or
mov
xchg
in
mov
sbb
lret
adc
jbe
aas
mov
test
mov
mov
add
leave
mov
das
xchg
aam
adc
fidivs
xchg
gs
dec
pop
lock
cmp
mov
fcompl
pop
aaa
cwtl
out
cltd
negl
sub
inc
imul
outsl
popl
push
sbb
imul
into
xchg
arpl
push
pop
and
xchg
sbb
cmpsb
dec
in
xor
ret
cmpsb
dec
je
pop
call
push
call
xchg
mov
jg
mov
gs
mov
xchg
dec
add
pop
mov
mov
shr
sub
jno
ss
mov
dec
scas
mov
sub
lock
push
dec
icebp
push
lahf
mov
cs
in
pop
or
btc
dec
jns
daa
push
mov
push
mov
gs
sub
cld
mov
push
xor
push
outsl
xchg
dec
or
cmp
and
inc
scas
mov
cmp
inc
loope
sub
pop
xchg
clts
push
xchg
push
or
dec
pop
gs
stos
and
jmp
and
insb
pop
les
mov
aas
dec
fcomp
fcompp
gs
imul
sbb
dec
sbb
sbb
pop
push
dec
cmp
fsubrs
and
test
stos
test
test
scas
pop
int3
cmp
mov
stc
lock
lahf
jae
sbb
mov
lods
lahf
cmp
xchg
cmpsl
and
pop
mov
xchg
or
inc
add
cli
inc
aaa
cmp
int3
cltd
popa
ds
rcrl
gs
lahf
scas
inc
xchg
bound
insl
sarb
mov
mov
inc
cmpsb
xor
aad
das
loopne
push
adc
aaa
pop
pusha
sub
xor
ja
or
sbb
xor
fdivs
xchg
sub
nop
mov
and
ret
test
out
mov
pop
push
jns
xchg
dec
lea
fmul
shll
pop
push
mov
add
mov
mov
stos
ss
stc
and
sahf
add
pop
imul
sbb
lods
fcoml
stos
mull
jne
repz
add
mov
loop
ds
aas
test
popa
add
sti
and
int3
adc
icebp
int
shll
aas
lods
xchg
mov
pop
or
sbb
movsl
push
sbb
stos
cltd
lret
pop
pop
inc
add
sub
in
cmp
add
fsubrl
mov
aas
pop
fstpt
gs
addr16
or
jecxz
mov
dec
outsl
stos
mov
sarb
jl
aas
add
or
imul
jne
or
out
pop
shll
loope
dec
mov
fcmove
gs
mov
dec
xchg
mov
es
pop
sub
add
insb
mov
push
repz
pop
lahf
mov
pop
je
les
pop
pop
iret
pop
gs
push
inc
shrb
xchg
sbb
das
arpl
rcr
jmp
cli
lods
mov
fdivl
and
test
pop
jb
pop
loopne
pop
dec
and
dec
push
jbe
mov
push
jl
push
or
dec
push
cltd
mov
outsl
dec
arpl
inc
pusha
pop
mov
cmp
xchg
aaa
push
jns
or
clc
cmp
xor
push
jge
add
outsl
fsubrl
aad
push
nop
or
adc
out
bswap
push
sbb
jno
pop
test
xor
dec
mov
inc
ja
icebp
ret
call
push
pop
outsb
bound
insb
arpl
arpl
jbe
mov
cltd
add
test
gs
mov
aam
int3
or
stos
push
mov
les
pop
aad
and
fdivs
mov
repz
in
or
repz
push
inc
outsb
sub
inc
xchg
out
into
pop
mov
mov
and
negb
inc
dec
xchg
nop
cwtl
dec
mov
mov
lods
mov
sbb
addl
mov
pop
sbb
push
loope
xor
mov
push
and
mov
push
popa
aaa
xor
sub
push
add
pop
jge
dec
je
jmp
pop
mov
and
xor
sub
jmp
pop
stos
xchg
push
cmpsl
or
xchg
int3
mov
dec
push
popa
dec
jo
in
cltd
xor
jp
ljmp
fiadds
int3
jae
mov
call
cmp
outsl
xchg
inc
das
push
lahf
arpl
or
xor
frstor
gs
or
data16
stos
dec
cmpsb
imul
sbb
loop
adc
xchg
xchg
or
imul
gs
imul
pusha
jb
push
xchg
sub
push
pop
pop
cmpsl
mov
and
cmp
pop
ja
js
push
xchg
xchg
in
mov
cmp
movsl
xchg
ds
dec
sbb
pop
dec
mov
cltd
incb
add
cmp
cltd
jae
insb
ds
lea
lods
in
mov
sbb
xchg
stos
sar
mov
mov
ficomps
add
je
mov
inc
ljmp
sub
cltd
sbb
push
mov
sbb
loope
clc
push
es
inc
push
fwait
pop
scas
pop
fsub
jb
out
outsl
dec
xchg
notb
pusha
and
into
popa
mov
pop
mov
cld
lahf
aad
pop
dec
insb
gs
in
pop
and
aam
js
imul
jmp
mov
out
stc
pop
in
inc
adc
jl
jg
sub
sbb
mov
sbb
andb
clc
fiaddl
sbb
or
daa
cwtl
clc
out
add
popa
gs
sahf
xchg
mov
add
mov
mov
push
fs
push
sbb
aaa
inc
fmull
daa
push
aaa
pop
repnz
pop
dec
cltd
xor
outsl
or
xchg
out
prefetch
or
pop
sbb
xchg
sbb
pop
out
mov
xchg
or
pop
lret
adc
pop
pop
fmull
test
test
pop
mov
push
and
inc
repnz
xor
sbbb
sbb
and
mull
cmpsl
jnp
inc
sbb
cli
or
imul
pop
push
xchg
add
fwait
jge
mov
outsb
sub
outsb
mov
add
push
lods
ficompl
pop
shll
mov
xor
test
pop
pop
dec
out
sbb
pop
sbb
xchg
mov
ret
in
xchg
imul
inc
xchg
cmpsl
cmp
jae
dec
jae
ja
frstor
adcl
jnp
mov
pop
aad
jns
shrb
fnsave
pushf
fisubs
cli
or
cmp
je
add
mov
mov
pop
sbb
dec
mov
xchg
push
lcall
dec
sub
repz
xchg
fisubl
sbb
push
cmp
sub
sahf
ds
inc
jmp
dec
pop
push
push
xchg
cs
in
pop
inc
xor
sub
mov
sbbl
mov
push
cmp
or
add
cmp
outsb
xchg
sub
inc
arpl
and
cmpsl
or
cli
cmpsl
adc
and
arpl
ficomps
lret
outsl
jne
jmp
les
and
lret
fcoms
fnstsw
negl
sahf
ss
lea
or
lret
das
xchg
stos
lds
arpl
movsl
jge
pop
bound
add
mov
xor
shrb
in
sbb
jecxz
call
fistps
and
jbe
outsl
cmp
je
cmpsl
jmp
aaa
leave
sbb
or
mov
pop
fildll
addr16
clc
mov
gs
sbb
xor
ss
bound
xchg
cmc
sar
or
leave
xchg
lss
xor
gs
or
xchg
cmp
push
inc
sub
iret
inc
push
lods
cwtl
fildll
popa
fldt
jge
pushf
xchg
sbb
stc
jecxz
sub
push
addl
inc
pop
ja
mov
jne
xchg
inc
daa
das
dec
out
sub
in
cltd
push
mov
sbb
ficomps
out
rcr
jmp
std
js
mov
std
cmpsl
xchg
fcoml
decb
cmp
mov
and
loopne
mov
and
das
mov
push
popa
dec
das
jmp
in
cmp
std
push
mov
cmp
adc
ljmp
add
pushf
arpl
sub
push
mov
and
loope
andb
mov
inc
imul
decl
mov
xchg
stos
dec
mul
mov
test
mov
fsubl
rorb
lcall
ds
cmp
aam
dec
mov
stc
test
das
popl
push
stos
sub
jno
fldcw
push
enter
fnsave
mov
movsb
adc
push
aad
mov
pop
mov
cltd
mov
paddq
jle
sbb
sub
ja
dec
ret
sbb
push
inc
push
inc
xor
fs
sbb
es
pop
subl
enter
mov
in
je
bnd
and
mov
dec
ret
and
push
cmp
out
lahf
data16
push
dec
mov
pop
pop
js
sbb
fists
and
push
int3
imul
icebp
lods
pop
jg
push
pop
sub
repnz
lret
es
imul
push
imul
dec
fs
and
mov
popa
push
loopne
dec
gs
push
jne
fistps
out
scas
out
pop
std
jge
cs
bt
mov
xchg
fsubl
test
inc
mov
dec
je
cli
push
lret
lods
rolb
pop
nop
mov
loop
dec
cmpsb
jge
push
adc
xor
movsl
sbb
nop
shr
out
outsb
mov
or
imul
cwtl
dec
add
test
sahf
ss
mov
pop
inc
sub
pushf
pop
out
lret
push
dec
xlat
mov
lock
shrl
rcl
pop
mov
rorb
jbe
sbb
mov
adc
push
mov
loope
xchg
mov
dec
orl
adc
add
addb
loop
movsl
or
subb
faddl
sbb
xchg
ds
cld
xchg
jp
insb
jmp
scas
mov
mov
cs
dec
sbb
xchg
lahf
jns
mov
mov
out
xor
or
ljmp
fcomps
push
pop
out
rclb
sub
push
mov
and
orl
mov
scas
or
sbb
mov
sti
xor
mov
sbb
out
sbb
pop
aaa
cltd
test
stc
out
lds
dec
push
push
loopne
adc
pop
dec
mov
mov
pop
ss
pop
sbb
arpl
pushf
enter
push
ljmp
sbb
stc
ja
mov
jns
cmpsb
lret
dec
cmp
lods
xchg
xchg
sti
cli
in
pop
outsl
dec
mov
push
add
into
mov
fldt
mov
in
jl
loopne
mov
mov
pop
pusha
imul
cmpsb
daa
mov
mov
and
ret
and
imul
mov
js
mov
arpl
aam
insb
cld
push
adc
mov
jae
xor
aas
fidivs
jp
mov
das
rolb
adc
jmp
inc
pop
dec
cmp
gs
dec
fiadds
sub
pop
ja,pn
lahf
mov
aas
lds
adc
jno
adc
lea
jge
fwait
arpl
ja
push
mov
adc
imul
xor
fdivr
xchg
mov
mov
cmp
not
jno
test
pop
xchg
rol
data16
inc
bound
add
jecxz
jmp
push
stc
in
sbb
enter
lcall
fwait
mov
mov
ja
idivl
xchg
inc
fidivrl
stc
cmpsl
mov
xchg
sub
lock
fcoms
scas
push
ja
push
xchg
imul
mov
or
xor
stos
sbb
sbb
test
mov
xchg
and
test
pop
pop
insl
jno
pop
pusha
rcrb
jecxz
mov
add
xor
mov
cli
clc
out
inc
jmp
lods
or
cmc
pop
xchg
call
je
jl
fldt
adc
xor
fisubs
dec
xchg
sbb
outsl
test
dec
outsl
pmaxub
or
outsl
imul
push
imul
rep
cmc
leave
ss
cs
push
neg
aad
mov
gs
sub
mov
js
rcrb
mov
dec
mov
jnp
js,pn
or
jno
idivl
ficompl
xor
or
xorl
pop
jg
jmp
xchg
outsl
aaa
gs
adc
add
cmpsl
add
das
stos
out
and
sbb
out
cmp
mov
std
gs
mov
insl
pop
xorl
daa
fldcw
outsl
sbb
aaa
sarb
and
pop
or
cmpsb
stc
pop
or
rorl
sub
jns
xchg
out
jnp
sub
sbb
shrb
pop
push
lds
cmp
jecxz
repz
cltd
xchg
test
addr16
nop
sarb
daa
push
ja
fdivs
loopne
push
jb
sub
fs
ja
add
das
mov
push
dec
pop
sub
inc
add
sbb
xchg
out
fistps
lret
scas
lret
pop
aad
loope
mov
hlt
pop
xor
inc
imul
sbb
je
mov
jp
or
jbe
sub
adc
lret
xchg
mov
testl
push
shlb
xchg
fs
pop
pminub
movsbl
idivb
popaw
jo
les
dec
sahf
insb
int3
out
and
push
imul
add
sahf
jp
sbb
xchg
inc
add
and
int3
push
pop
hlt
test
test
jmp
and
idivl
scas
dec
push
adc
sbb
mov
pop
shll
push
insb
xor
loopne
lcall
sub
add
test
mov
shrl
jmp
jmp
scas
loopne
shll
lea
adc
insb
and
xlat
cmpsl
insb
scas
and
insb
add
sbb
test
add
getsec
push
test
fdiv
ds
pop
xchg
jg
cmp
insl
imul
lret
xchg
cmc
aam
add
pop
test
fists
pop
loopne
mov
pop
fsubs
inc
scas
cld
sti
push
out
outsl
sti
add
ja
pop
sbb
movsb
sahf
repnz
call
leave
xchg
sti
pop
cli
sub
je
incl
jge
lods
ret
or
jne
push
or
sti
or
push
add
push
daa
outsl
xchg
divl
push
fadd
out
shrl
addr16
xchg
xor
mov
clc
call
das
lahf
push
jmp
or
rcrl
dec
icebp
js
mov
jmp
pop
cs
pop
push
mov
in
shlb
mov
sbb
shrb
jo
pop
mov
lds
sbb
cld
xchg
mov
add
push
mov
cmc
sbb
decl
les
xor
xchg
xchg
sbb
mov
fwait
insl
aaa
leave
outsl
inc
loop
jne
xchg
repnz
andl
popf
inc
sti
cmpsb
inc
mov
cmpsb
lds
hlt
fmuls
rclb
bound
push
and
in
inc
les
push
mov
movsl
dec
repz
cmp
movsb
dec
and
sar
in
subb
and
mov
ret
fists
pop
push
lods
mov
push
mov
jg
or
lret
loop
jg
xchg
enter
pushf
push
jmp
paddsw
js
sbb
adc
mov
ret
idivb
les
in
dec
lahf
pop
add
jmp
jne
loope
in
pop
push
cmp
pop
rol
or
movb
sbb
es
shl
les
sbb
repnz
pop
cmp
xchg
stos
jne
int3
push
insb
and
mov
clc
xorb
shl
mov
mov
popf
icebp
sub
out
push
into
stc
and
jnp
les
mov
negl
pop
jecxz
pop
push
les
push
adc
in
xchg
xor
push
mov
cli
lahf
fistpll
mov
out
mov
dec
push
out
mov
add
jl
addr16
pop
lock
aam
gs
out
fsubs
aaa
je
aaa
loopne
sub
lcall
or
insb
movsb
jnp
sahf
dec
sub
pop
cli
outsw
js
jne
mov
fsub
fwait
repz
or
es
sbb
dec
and
inc
dec
and
jle
cltd
ficoml
stc
inc
sub
cld
mov
mov
dec
pop
cltd
aas
enter
pop
shl
and
push
sub
fdivr
mov
or
call
push
inc
push
daa
es
xchg
mov
mov
or
mov
jmp
scas
xchg
or
int3
jo
cmp
out
xchg
xchg
movsb
add
sub
cmpsl
scas
and
or
jmp
mov
addr16
cmp
pop
add
lahf
mov
jg
in
pop
cmp
aas
cmp
scas
mov
or
movsl
scas
shll
mov
dec
mov
xor
in
cs
adc
stos
mov
xchg
pushf
adc
pop
cld
negl
outsl
sti
mov
dec
aaa
imul
and
sahf
sbb
test
add
repnz
pusha
jmp
syscall
movsb
mov
push
outsb
rcrb
in
and
fs
push
xchg
cld
pop
mov
dec
jp
pushf
add
xchg
and
mov
pop
push
xchg
inc
mov
ja
push
pop
sub
xor
js
imull
daa
dec
fnsave
ja
dec
dec
data16
out
scas
addr16
push
dec
shlb
xchg
mov
add
xor
addr16
dec
clc
daa
aam
ret
inc
ss
test
pop
jp
add
insb
rolb
cld
mov
xor
stos
ljmp
or
sbb
pop
add
pop
sbb
idivb
std
outsl
out
mov
sub
adc
addr16
jnp
test
sbb
ret
xor
faddl
gs
push
loopne
imul
dec
in
or
jp
mov
outsl
pop
push
jp
cmpsb
inc
push
mov
add
and
jecxz
out
mov
int3
mov
clc
xchg
xor
sti
mov
cmpsb
in
dec
aaa
flds
aas
neg
xchg
fldt
outsl
dec
mov
loope
decl
fidivrs
push
sbb
mov
in
fcompl
movsb
jmp
jb
fprem
bound
sub
leave
dec
and
adc
xchg
mov
sbb
or
sbb
js
sbb
xchg
loope
and
clc
add
dec
dec
mov
mov
data16
jge
aaa
or
jnp
sbb
inc
pop
push
mov
stc
les
xor
lea
xchg
xor
and
loope
mov
cmp
in
jge
sbb
cmp
clc
or
add
es
testl
and
sbb
mov
int
fs
lods
xchg
jmp
dec
sbb
adc
mov
xchg
pop
imul
jge
pop
jge
mov
insb
pushf
loopne
stc
adcl
int3
inc
xchg
dec
add
push
sbb
or
data16
and
dec
movsb
jecxz
in
sbb
cmp
inc
lods
fnstenv
and
in
and
sbb
pusha
or
pop
adc
je
loopne
xor
shrl
or
sbb
jae
mov
rolb
xchg
add
cld
mov
lock
jne
mov
xor
mov
dec
sbb
adc
pop
into
movsl
adc
dec
fs
cmp
clc
and
xor
pusha
movsb
movups
clc
rol
pop
xlat
mov
jae
mov
movsb
mov
and
pop
ficoml
and
fsubrl
or
data16
mov
or
frstor
cmpb
push
arpl
jbe
mov
mov
les
call
pop
into
dec
imul
flds
cmpsb
mov
pop
inc
cmp
mov
sub
mov
div
xorb
xchg
and
leave
xchg
mov
call
out
jle
arpl
in
inc
xchg
and
or
mov
ss
jge
jl
mov
xor
lahf
psubd
data16
jo
sbb
outsl
pop
lock
pop
cmp
ficompl
xchg
pop
arpl
lods
popa
dec
pop
aam
xchg
mov
sahf
addr16
xor
mov
inc
divl
lret
or
or
cmpsb
fcmovne
jmp
pop
ja,pn
shr
loope
aad
sbb
pop
iret
mov
stos
inc
jmp
pop
fldt
push
lret
xchg
cwtl
cld
sbb
push
push
sub
es
sbb
aaa
rclb
sub
cs
fwait
mov
mov
xor
ret
add
fcoml
scas
leave
lods
movsl
repz
rcl
fisubrs
add
mov
cli
inc
out
cmp
xchg
popa
roll
pop
xchg
sbb
stc
mov
clc
js
in
repz
or
push
cwtl
mov
das
or
int3
mov
sub
add
aam
cmp
and
push
pop
push
cltd
push
in
movsl
mov
mov
gs
mov
mov
ss
xor
mov
imul
lock
add
cltd
push
pop
xchg
sub
xchg
pop
cmp
xchg
and
ljmp
or
mov
pop
mov
xchg
dec
dec
push
push
js
fdivrl
sub
aas
or
jbe
scas
jne
jbe
je
push
cmp
les
test
add
mov
cld
mov
push
cmp
test
push
aas
pop
xchg
dec
ret
mov
sub
popl
adc
lock
test
mov
gs
lods
sbb
add
sbb
out
sbbl
scas
pop
mov
loope
mov
xchg
mov
pop
cmp
int3
ret
int3
loopne
jg
daa
loope
lcall
bound
add
dec
push
cmp
xchg
jmp
cmp
dec
jae
fs
ud1
sub
lret
adc
cmpsb
out
xchg
xchg
jbe
push
fstpl
mov
mov
cmp
and
xorb
xchg
mov
push
and
and
xchg
adc
nop
shlb
jl
mov
rep
fmull
lods
cmp
inc
cmp
arpl
hlt
jp
pop
dec
stos
icebp
in
lods
ja
ds
aad
pop
jae
xor
dec
int
mov
jbe
jl
cmp
add
mov
data16
pop
xchg
add
movsl
std
dec
ss
push
push
pop
ret
push
xor
outsb
fldcw
pop
jg
sub
push
mov
sbb
lock
or
push
in
push
jg
mov
lret
out
out
int3
fisttpl
add
pcmpgtw
sub
push
test
xchg
stos
dec
dec
jp
dec
xor
ja
loopne
sti
dec
lret
icebp
stos
ja
into
stc
popf
sar
adc
lock
and
mov
or
sub
aad
sbbb
mov
add
xchg
out
xchg
pop
mov
pop
inc
adc
in
pop
inc
xor
fiaddl
test
in
adc
loope
inc
jno
aaa
xor
or
aam
mov
adc
jno
add
es
jo
ficompl
dec
clc
cmpl
push
inc
lcall
lock
sub
sub
jns
es
scas
das
jg
mov
and
rorw
push
pop
push
push
cld
pop
mov
adc
add
pop
jl
aas
ds
add
add
cmp
mov
dec
mov
sub
ljmp
cmp
das
cmp
push
movsb
sub
pusha
inc
inc
cwtl
xchg
in
jb
aam
in
jae
cld
fdivl
xchg
leave
dec
jbe
lret
sub
mov
sub
push
cmp
pop
fdivrs
or
jg
outsb
dec
sub
lods
and
ss
sbb
mov
inc
adc
xor
mov
jnp
gs
inc
inc
imul
xchg
sbb
and
adc
jne
inc
decl
jo
dec
rcrb
repz
pop
js
and
orl
fists
lcall
sbb
stos
mov
and
dec
pop
loop
jl
cmp
xor
adc
mov
int3
ficomps
push
lods
sbbl
sub
divb
xor
xchg
sbb
rcrl
les
jge
dec
jp
aaa
xchg
add
pop
sbb
fcomip
push
push
sub
in
fucom
mov
lcall
out
pop
mov
mov
mov
fidivrl
inc
je
sub
aad
sbb
dec
in
adc
data16
xchg
fbstp
test
adc
xor
mov
test
add
xor
push
pop
loopne
lcall
add
inc
call
mull
or
adc
mov
arpl
or
and
push
mov
push
xorb
pop
ret
rorb
adc
xchg
mov
dec
add
int3
lret
test
jne
fnstenv
cs
insb
mov
mov
test
add
clc
or
lahf
or
sub
and
fwait
into
and
test
cmp
inc
or
mov
dec
jb
mov
cmp
cltd
push
pop
pushw
cld
mov
dec
jbe
push
movmskps
mov
jmp
push
pop
pop
pop
sub
lret
mov
mov
push
sbb
lds
fsubl
arpl
sbb
cmpsl
cli
sbb
push
popf
fstps
sti
es
subb
dec
shll
sub
ds
jge
int3
add
fisubrs
movsb
push
outsl
daa
push
fs
inc
xchg
mov
cmpsb
scas
mov
ret
mov
jns
sub
fisttps
mov
imul
inc
add
dec
gs
pop
xor
xchg
lret
push
push
int3
sbb
int3
sbb
fs
les
repz
pusha
sbb
fsubrs
addr16
mov
mov
in
mov
add
das
xchg
cmp
pop
outsb
and
xchg
imul
iret
es
xor
repz
dec
ljmp
inc
add
addr16
arpl
xor
xchg
push
int
lock
cmp
mov
jnp
pop
sbb
test
aam
sbb
mov
fdivs
movsbl
cltd
jp
mov
gs
fists
gs
inc
and
iret
push
add
xchg
icebp
pop
sub
mov
and
arpl
xchg
lds
out
cmp
gs
and
jnp
arpl
sub
data16
xor
insb
sbb
addr16
int3
je
fsubrl
into
sub
dec
fucomp
inc
mov
mov
add
icebp
in
cmpsl
mov
sub
mov
testl
movsb
cmpsl
data16
sub
sahf
push
aas
stc
pop
add
fdivl
sahf
call
pop
fwait
or
mov
inc
pop
lcall
adc
ret
sbb
add
jg
ficompl
leave
js
bound
fistpll
fistl
jno
cmpsb
rcrl
mov
lret
xchg
mov
aad
mov
cltd
lcall
push
imul
lret
jp
stc
sub
dec
imul
in
shlb
ficoml
push
mov
pop
sbb
add
xchg
cmp
jo
fdivs
icebp
mov
imul
sbb
bound
sbb
roll
mov
gs
imul
movsb
xor
inc
or
jnp
insb
sbb
adc
jl
sahf
push
int
addr16
xchg
push
roll
cmp
mov
shll
sahf
pusha
cs
out
pushf
push
movsb
sub
jo
dec
jg
jecxz
push
repnz
sbb
std
mov
fbstp
enter
lock
loopne
sbb
sub
mov
shl
test
cmpsb
out
mov
adc
pop
in
xchg
int3
test
jg
stos
jns
idivb
dec
sub
scas
scas
jne
ret
gs
das
pop
push
ss
int
cmpsl
popa
or
add
and
or
rolb
mov
cmp
in
cld
jno
cwtl
mov
pop
sti
cld
sub
notl
and
jecxz
sbb
sbb
cltd
xchg
les
sbb
add
sbb
dec
mov
and
scas
push
jne
or
out
sbb
popf
sar
fistpl
push
add
cmpl
xchg
insl
shlb
cwtl
mov
xchg
push
sub
flds
pop
out
pop
dec
jno
aam
mov
mov
sahf
xchg
cwtl
pop
rolb
mov
cmpsb
xor
aaa
jne
aam
cmpsl
mov
xchg
mov
inc
out
aaa
mov
cmpsb
inc
cmp
or
mov
lods
or
jmp
push
lea
fwait
sti
cmp
scas
sub
or
xor
pop
gs
push
negl
ja
loope
jae
lods
xchg
xchg
sbb
xchg
sbb
xchg
lds
sbbl
cmp
push
out
sbb
aaa
es
pop
outsl
lahf
out
fs
mov
lods
movsb
addr16
pop
mov
add
lahf
and
or
dec
test
adc
push
adc
addr16
rclb
mov
mov
and
adc
or
loopne
cmpsl
push
pusha
in
cli
jge
aam
jae
mov
cmp
pop
dec
add
pop
jle
xchg
popf
jge
fs
cmp
cltd
lcall
fcompl
sub
cmp
sbb
jle
in
jnp
cs
cmpsb
add
icebp
or
shlb
int3
add
scas
clc
and
sbb
jnp,pt
call
jmp
or
xchg
xchg
cmpsb
flds
mov
cmpsb
xchg
andb
inc
mov
aam
add
ffree
pusha
mov
stos
mov
jb
sti
repnz
pop
jns
jne
xlat
call
mov
cmpl
mov
jno
fdivrl
rcll
mov
or
stos
lds
in
xchg
or
pop
sbb
setnp
stos
add
loop
inc
scas
jmp
sbb
cli
cs
cs
pop
jecxz
adc
dec
push
dec
xor
repz
dec
pop
cmp
push
enter
daa
mov
ficompl
jne
or
sub
jl
movsl
insb
aam
in
ja
jge
mov
hlt
sahf
and
pop
cs
movsl
mov
xchg
clc
mov
scas
test
pop
xchg
sarb
mov
dec
sbb
cmp
sbb
iret
fsubs
into
mov
ja
xchg
jns
popf
lods
fistpl
pop
movsl
mov
imul
mov
adc
call
cmp
dec
sbb
sbb
test
sahf
clc
mov
mov
insb
push
mov
xchg
jne
out
dec
into
sub
dec
mov
pop
add
fmuls
pop
outsl
pop
fdivr
in
and
cmpl
sub
fsubr
fldcw
gs
mov
lret
jns
sahf
xor
stc
push
out
fs
add
push
cltd
cmp
mov
and
je
cwtl
sub
fists
push
lea
inc
add
movsl
fidivrl
aaa
fcoms
push
gs
adc
outsb
std
jne
lock
sahf
out
xor
pop
add
jle
stc
push
pop
xlat
rcrl
cld
setnp
inc
cmp
scas
imul
ds
outsl
fsubr
cmpsb
dec
rolb
outsl
push
push
xchg
les
mov
inc
push
xlat
pop
pop
add
jnp
imul
dec
popa
test
loope
pop
inc
cli
xchg
div
push
push
push
push
sub
xchg
addr16
fsubl
pop
push
div
iret
mov
loope
fsubs
cmp
fucomip
xchg
add
repz
out
test
lahf
mov
pop
dec
outsl
mov
pop
stc
subb
xchg
addr16
or
jle
loopne
mov
mov
imull
mov
jae
mov
push
and
repnz
sub
xchg
pop
sti
or
push
pop
pop
pop
fsubs
aaa
add
sbb
mov
lcall
fiaddl
mull
or
leave
push
pop
fists
mov
out
fstl
in
out
fnstenv
pop
loope
push
outsl
push
outsb
lret
sbb
cmp
insb
cmp
jmp
fcoms
pop
out
add
xchg
pop
mov
gs
imul
mov
divb
dec
xchg
adc
mov
es
daa
push
adc
lock
jmp
cmp
or
cmp
int3
jbe
add
sti
popa
or
or
sub
adc
sub
idiv
jb
js
imulb
out
ja
inc
xchg
cmpsb
das
mov
or
push
js
imul
sti
add
gs
imul
pop
sub
arpl
sbb
cmpsb
and
or
cmp
shl
jecxz
call
add
fsubr
mov
fsubrs
shlb
xchg
loope
cmp
xchg
and
sbb
adc
imul
and
push
mov
push
fcmovnb
repnz
ss
incl
mov
daa
cmp
imul
lret
inc
imul
cmc
push
lcall
sbb
ss
pop
fcomi
dec
push
ja
test
in
sbb
pop
sbb
pop
fwait
inc
pop
flds
data16
pop
ret
imull
out
jbe
outsl
jp
xchg
lea
loopne
pop
push
hlt
and
in
outsl
in
xchg
jnp
xchg
js
je
pop
mov
aaa
scas
pop
jg
es
outsl
fnstenvs
or
jl
notb
call
mov
fcoms
addr16
adc
sub
mov
sbb
iret
inc
test
jmp
jnp
mov
lret
imul
outsb
aaa
test
dec
push
jno
ficoms
dec
or
clc
mulb
add
hlt
ljmp
mov
aas
int3
xor
cli
sbb
pop
outsl
sbb
data16
cmp
mov
popa
pop
inc
insb
push
add
cmp
outsl
cmp
or
sbb
or
jecxz
mov
inc
cmp
fisttpl
test
cmp
in
sti
out
pusha
call
lcall
shll
movsl
pop
aam
insl
or
mov
das
add
sub
push
sahf
jbe
enter
repz
mov
dec
add
out
sbb
repz
test
pop
pop
mov
pop
outsl
sbb
push
cwtl
xchg
push
sbbb
pusha
push
lret
adc
mov
outsl
ret
in
mov
mov
sbb
enter
fdivs
or
mov
xor
jae
inc
lahf
jg
ljmp
pop
in
lahf
pop
cmp
inc
dec
ret
jno
pop
stos
stos
mov
adc
scas
jl
out
mov
mov
adc
jge
pop
mov
cmp
xchg
xchg
or
imul
das
cmp
dec
inc
loope
sub
cmp
adc
push
into
das
jecxz
dec
push
xchg
push
cmpsb
xchg
das
lahf
clc
push
jno
inc
xchg
adc
ss
insl
arpl
cli
pushf
pushw
pop
pop
mov
cmpsb
mov
in
out
into
cli
movsb
ds
cld
add
sbb
sub
pop
sub
mov
movsb
xor
mov
push
add
pop
int3
lock
cld
adc
jbe
outsl
sbb
push
push
cmc
push
push
clc
cmp
in
gs
jmp
mov
cmpsl
pop
mov
xchg
daa
out
movsl
mov
mov
sti
shlb
hlt
jbe
pop
dec
ret
push
inc
pop
outsl
stos
in
ret
add
mov
in
call
int
stc
xchg
iret
cs
aam
jns
pop
xor
gs
ja
cmp
pop
fwait
leave
jle
push
mov
dec
fdivr
nop
ds
fsubl
sub
xor
lahf
add
sbb
in
decb
scas
xchg
push
pop
push
mov
repnz
dec
icebp
xchg
mov
arpl
pop
adc
push
xchg
xchg
nop
lods
dec
js
dec
xchg
mov
leave
aam
inc
les
je
mov
sub
inc
add
mov
in
hlt
ja
jge
cmp
fsubs
push
sub
int
sbb
sar
cwtl
es
sbb
hlt
sti
movsb
imul
jo
mov
pop
popf
leave
sahf
sbb
cltd
insl
daa
and
push
adc
xchg
dec
lods
mov
orl
rclb
addb
xchg
scas
push
testb
je
jns
sti
xchg
and
data16
pop
movsl
int
mov
dec
ja
icebp
aam
ret
cmpsl
push
fwait
stos
xchg
out
inc
shl
jmp
out
aaa
xchg
shrb
sbb
sbb
or
push
inc
fnsave
xchg
insl
sub
or
push
push
shrl
cmpsl
dec
xor
sti
or
xchg
dec
bound
test
adc
into
xor
inc
pop
sub
in
or
cmpsb
pop
mov
mov
bound
rcll
paddusw
data16
fcoml
xchg
fdivs
lods
fcmovb
cmpl
adc
xor
mov
cmpsl
or
mov
outsl
test
jne
mov
jp
sbb
mov
mov
cs
std
fwait
cs
imulb
fwait
aaa
orb
dec
adc
cmp
mov
mov
jnp
out
sbb
orb
nop
sbb
fdivrs
mov
mov
in
neg
sahf
sbb
mov
ja
addr16
out
push
lret
xchg
pop
cs
xor
lods
cmp
gs
xor
sub
push
mov
stos
cmpsb
sti
pop
stc
fidivrl
dec
xor
sbb
pop
mov
fstpt
into
fcompl
adc
xlat
stos
push
gs
loope
jne
aaa
icebp
jp
pop
dec
xchg
and
xor
jne
int
jns
or
xchg
das
adc
mov
lahf
sbb
add
movl
fmuls
into
jecxz
daa
inc
inc
loop
jmp
fcomps
sbb
jmp
mov
test
push
clc
ret
clc
or
jmp
push
test
push
xchg
adc
dec
gs
rcrb
cmp
dec
shlb
sub
mov
cmp
lock
cltd
add
stc
mov
cmp
test
cmp
rolb
jae
ljmp
call
or
mov
ret
sbb
aam
sbb
adc
sbb
xor
ds
jmp
cmpsb
stos
dec
mov
test
jl
inc
pop
jo
and
adc
xor
fsub
cmpsl
int3
scas
cmp
add
arpl
mov
sbb
dec
dec
testl
lock
js
prefetch
sbb
cs
xor
or
cmpl
jae
xchg
add
ljmp
sub
jnp
jb
mov
fdivrl
sbb
mov
or
xorb
daa
imul
cwtl
mov
push
mov
lock
lahf
jnp
pop
fs
xchg
imull
pop
or
jae
clc
les
add
push
pop
push
sbb
push
mov
sub
pop
pop
jp
xchg
dec
dec
addb
outsl
push
cld
mov
ficomps
dec
dec
movsl
in
insl
xchg
mov
sbb
cs
xchg
pop
sahf
jle
movsb
jmp
lds
rolb
dec
pop
push
inc
aaa
lods
or
xchg
test
outsl
sti
jp
jne
mov
cmp
add
dec
lock
and
xchg
pusha
repz
jo
pop
cmp
pop
stc
call
std
add
adcb
push
out
xchg
leave
movsl
ljmp
push
rolb
xchg
push
insl
push
mov
inc
ds
sbb
pop
push
scas
ja
xchg
and
cwtl
mov
push
sbb
push
shll
fisubrl
add
push
sub
fdivrl
int3
push
cmpsb
xor
mov
imul
push
add
insb
mov
jns
mov
pop
adc
pop
addr16
mov
int
jns
ret
jge
sti
stc
fcomi
loopne
leave
cli
lahf
fildll
pop
pushl
loop
ror
mov
xor
pop
mov
push
outsb
fdivr
dec
fdivrl
and
leave
les
mov
sub
inc
mov
cmc
push
lret
popw
xchg
outsl
aaa
xchg
adc
or
and
cmp
mov
pop
mov
cwtl
movsb
js
dec
insb
cmp
sub
repz
sbb
addr16
fcompl
sbb
xchg
mull
push
jge
push
test
push
push
inc
imul
outsl
mov
sbb
adc
flds
cmp
leave
jne
outsb
adc
stc
in
jno
pop
adc
mov
int
mov
and
aam
adc
repnz
or
sub
jecxz
push
mov
dec
wbinvd
adc
sub
cmp
outsl
arpl
push
int3
gs
inc
scas
out
or
roll
into
mov
movsl
sbb
pop
test
xor
sub
xorb
mov
es
mov
push
jle
call
mov
es
jae
ret
sub
or
cmp
call
push
jnp,pn
and
sbb
shlb
sbbb
sbb
ljmp
xchg
and
xchg
mov
data16
xchg
lahf
and
imul
mov
add
sbb
fsubl
lea
lods
nop
sbbl
pop
fnstenv
dec
push
add
in
fidivl
shrb
lcall
pop
rcrb
int
addr16
out
jp
cs
ja
dec
push
cmpsl
mov
into
sbb
push
and
or
aam
push
std
sub
inc
sbb
adc
movsb
pop
or
mov
mov
jp
inc
in
sbb
cmp
push
jl
mov
fwait
sbb
cmp
into
cmp
pop
xor
push
sub
pop
lods
in
inc
and
xchg
sbb
pop
lods
sahf
sub
push
jge
fsubrp
cmp
pop
rorl
scas
push
cmp
mov
data16
xchg
push
push
stos
jle
insl
mov
and
gs
iret
mov
addr16
or
mov
shll
scas
mov
out
push
cmpsb
xor
stos
xchg
rolb
sbb
cld
in
loopne
xchg
mov
add
leave
data16
mov
pop
push
jne
sbb
scas
add
jl
loopne
fsubl
insb
jmp
dec
cmp
lret
loopnew
sbb
xchg
push
mov
sub
jb
aas
add
test
stos
sbb
loopne
push
bound
jne
xchg
imul
lahf
jl
adc
roll
dec
ret
pop
insl
jecxz
loope
pop
sub
scas
fists
jo
xchg
dec
je
pop
push
insb
dec
mov
inc
pop
jl
cmp
stc
notl
ja
add
cs
add
pop
das
jecxz
push
adc
and
jne
test
popf
pop
stos
loop
test
pop
inc
popl
and
xchg
lock
es
push
clc
xor
push
gs
jns
pop
popa
and
push
fstpt
xchg
bound
aas
sub
xor
ss
mov
aas
or
test
arpl
push
xor
mov
das
sbb
mov
inc
loopne
aaa
add
faddl
dec
iret
sbb
pop
jmp
fistpll
scas
pop
or
xchg
mov
rcrb
pop
out
pop
sbb
jns
loopne
rol
lret
push
and
loopne
aam
divb
and
or
xor
aam
xchg
inc
addr16
inc
lods
push
test
in
in
rolb
jnp
or
cs
sbb
hlt
mov
fcmovnbe
cli
or
mov
insl
pushf
ja
mov
out
popf
addr16
inc
fnstenv
push
fistl
sbb
test
pop
and
inc
add
mov
popf
jb,pn
clc
cmp
jmp
aas
sti
dec
jmp
fimull
and
or
dec
scas
adc
cli
mov
popf
jbe
sbb
js
xchg
scas
xchg
js
cmp
repnz
push
lods
inc
push
push
lods
rorl
sub
outsl
sub
mov
not
dec
push
and
sub
enter
push
sbbl
test
xchg
cmp
inc
js
push
aam
data16
aaa
rorl
sub
addl
jge
and
push
rorb
int3
paddsw
xor
popf
jns
mov
repz
jns
or
fsubs
and
insb
sar
pop
scas
sbb
arpl
add
and
in
push
or
mov
ret
dec
ret
pop
adc
repnz
dec
adc
cmpsl
mov
cmp
mov
sub
or
cmp
push
int3
xchg
rol
insl
scas
mov
test
stos
jo
pop
test
jnp
adc
inc
cmp
or
movsl
negl
mov
mov
push
adc
mov
xor
icebp
lcall
fldt
mov
mov
sbb
in
cmp
pop
mov
fbld
pop
dec
fstpl
fsubl
in
arpl
sub
jl
out
cmp
inc
mov
xchg
inc
in
mov
jge
mov
je
imul
adc
lds
push
aaa
sbb
test
pop
mov
icebp
imul
std
pusha
or
scas
sbbl
push
movl
push
ljmp
sbb
sbbb
cmp
pop
push
or
out
imul
loop
sub
lea
icebp
test
and
cmp
sub
cmp
jmp
mov
arpl
leave
push
xchg
jne
jp
xchg
into
sub
sub
mov
lahf
andl
pop
ret
add
lds
call
cmpsl
mov
lcall
mov
sbb
orl
inc
repz
stc
sbb
mov
mov
cmp
loope
dec
ss
dec
mulb
mov
push
dec
fistpl
pop
xchg
xchg
mov
rcr
and
gs
jl
add
movsl
pop
dec
and
int
jbe
or
mov
lret
push
rcrb
lods
or
jb
jnp
and
adc
popf
jbe
inc
lahf
ss
scas
fisubs
inc
sub
es
movsb
push
or
dec
in
mov
inc
dec
fisubrs
push
inc
lcall
mov
push
inc
sbb
sbb
sbb
jecxz
and
fabs
xchg
sbb
inc
and
scas
pop
ficoml
pop
jae
cltd
ss
test
pop
cmp
xchg
fsts
es
xchg
fstp
and
sbb
dec
movsb
add
mov
lods
gs
shrl
push
das
and
andl
jp
xchg
push
push
cmp
call
scas
ret
call
push
push
psubsw
fsubrs
pop
push
in
aaa
mov
aad
insb
je
push
adc
leave
std
insb
cli
insb
rcrb
push
jp
pop
mov
pop
and
cmpb
lods
cmpl
test
mov
ficomps
push
mov
lock
cmpsl
test
cmp
or
stos
pop
ret
add
inc
fcomp
xchg
int3
fs
mov
lret
mov
add
in
aad
es
xor
ficoms
xor
jb
out
sbb
jg
pusha
into
cmp
stos
dec
pop
cmp
andb
add
jb
sti
sarb
int
ret
jne
jnp
sbb
xchg
lods
pusha
pop
scas
or
pushl
hlt
mov
aas
lods
jecxz
pop
cmp
cmp
addr16
add
sbb
popa
lahf
or
gs
aam
jno
mov
data16
mov
mov
pop
ds
dec
cld
repz
out
pop
ds
test
sbb
push
push
push
imul
jl
dec
cmp
ret
ficomps
pop
xchg
insl
inc
pushf
repz
sub
stos
xchg
xor
mov
inc
lock
jg
sub
xchg
daa
pushf
jecxz
xor
ss
push
fcoml
test
adc
and
mov
or
pop
sti
dec
jmp
out
pop
jge
gs
or
sub
ds
andl
mov
sub
push
jae
mov
or
dec
jne
stc
lds
sahf
je
push
sub
dec
and
clc
push
pusha
sbb
negb
mov
push
jmp
fmul
add
inc
or
xchg
je
fdivl
cld
loop
lea
ret
jecxz
cs
cmpsb
and
cmp
popf
ret
push
int3
js
cmpsl
in
gs
test
sbb
iret
mov
xchg
sbb
fldl2t
and
sbb
mov
and
sahf
into
daa
sub
data16
push
sub
stc
repz
xor
push
dec
xchg
mov
ss
dec
dec
add
push
arpl
or
fcomps
cwtl
and
lret
in
insl
pop
mov
gs
mov
fsubrl
jne
mov
and
lock
leave
cmp
sub
pop
shr
mov
out
add
push
sti
lret
sub
mov
divps
js
dec
and
adc
popf
and
add
mov
in
test
sbb
lds
lret
mov
mull
cs
jae
cmp
mov
mov
adc
sbbb
lock
pop
jo
fidivrl
sbb
xchg
je
call
lea
and
sahf
daa
bound
mov
into
inc
in
mov
les
and
cmp
jae
inc
or
jmp
add
pop
cld
mov
cwtl
fstps
daa
inc
jp
mov
into
or
test
jecxz
dec
test
mov
pop
test
push
fldcw
mov
pop
mov
negl
mov
icebp
cs
or
loop
aad
add
lret
sar
enter
cs
cmc
xor
jp
and
mov
insl
hlt
dec
stos
xchg
jl
push
pusha
sbb
mov
jo
or
xchg
and
dec
xchg
jge
loopne
push
movb
sub
gs
xchg
outsl
dec
cmp
lahf
push
or
data16
xor
subb
xchg
mov
ds
dec
arpl
or
inc
mov
out
aaa
mov
cmp
ljmp
subb
es
xchg
cmp
sbb
cmp
fadds
sbb
mov
pop
addr16
mov
lods
or
sub
cmpsl
call
and
xor
cmp
scas
pop
cwtl
rorb
jno
fldl
dec
jnp
outsl
cs
sub
jmp
and
push
xchg
mov
loope
mov
lahf
xor
mov
cmp
or
ret
sbb
insl
sbb
or
inc
push
fcoms
jmp
clc
xchg
mov
jge
inc
xor
sbb
pop
out
adc
imul
scas
clc
dec
sti
adc
outsl
and
ja
addr16
fcmovne
inc
std
insl
lret
sahf
out
gs
hlt
addl
pop
adc
mov
jg
sbbb
push
mov
sub
nop
mov
test
push
jbe
mov
mov
psubq
and
cmp
adc
jmp
inc
dec
cmp
push
fmull
fsubrs
dec
jb
ljmp
push
lods
test
das
mov
ja
mov
xchg
mov
sahf
jg
and
fcomps
lods
test
cmp
add
mov
lods
es
dec
jmp
daa
test
ret
popa
imulb
ficoml
add
push
repnz
movsl
jns
inc
pop
popa
add
out
outsl
mov
shll
pop
aaa
mov
or
outsl
mov
loopne
pop
sub
xor
rorb
jne
dec
dec
in
subl
push
test
xchg
gs
jnp
arpl
sbb
push
fldenv
adc
insb
mov
adc
das
jno
cmp
ja
cmp
aaa
clc
xor
jl
jg
idivb
inc
mov
push
pop
sbb
add
fadd
mov
mov
cltd
out
aas
lret
out
std
push
js
pop
sbb
enter
dec
and
add
es
pushl
inc
xchg
cli
lea
pop
or
mov
scas
push
outsl
sub
pop
enter
sti
mov
aam
lock
mov
outsb
mov
add
imul
add
clc
addb
add
test
hlt
daa
insl
pop
push
adc
das
subb
push
fcomp
popa
enter
lsl
cli
xor
das
insb
jecxz
pop
out
fsts
inc
das
pop
leave
adc
xchg
je
jne
xlat
inc
and
add
test
cmovns
mov
cmp
push
iret
mov
shrb
daa
mov
and
push
push
subb
add
add
fdivs
inc
dec
testl
repz
fldt
mov
into
js
sub
imulb
fmull
dec
in
jno
mov
jmp
out
ja
push
rorb
mov
arpl
dec
jno
test
mov
xchg
cli
dec
xor
scas
cmp
jae
sub
popa
and
js
call
cltd
pop
pop
dec
scas
pushf
jae
cmpb
pop
inc
popa
jbe
and
mov
add
xor
fsubrs
test
lahf
xchg
push
std
cmp
imul
sub
cmp
xchg
inc
test
ljmp
repnz
push
out
lea
cmp
pusha
nop
sbb
test
lcall
dec
clc
sahf
popf
push
in
out
icebp
adc
fldt
mov
cmp
scas
push
fnstenv
test
sbb
mov
scas
jmp
xchg
mov
mov
sahf
push
and
or
mov
push
js
xorl
mov
cld
dec
cli
leave
out
fimuls
lock
outsb
out
sahf
push
sub
xchg
jns
iret
pop
sahf
jmp
out
mov
mov
or
add
mov
sbb
push
pop
add
mov
arpl
leave
jp
sub
mov
fidivrs
gs
sahf
les
clc
mov
into
gs
in
lods
sbb
xor
cmp
popf
hlt
test
and
mov
jp
gs
mov
dec
int3
sbbl
xor
mov
sub
or
insl
daa
push
xor
mov
out
fisubrs
cmpsl
jp
push
cmp
insl
mov
adc
jb
add
pop
mov
scas
push
jecxz
adc
in
clc
mov
xorb
sbb
pop
xchg
inc
ja
in
loopne
sub
sub
mov
pop
mov
sub
lods
orb
jmp
data16
rclb
mov
jne
xor
into
adc
xchg
xchg
and
cs
aas
test
and
xor
pushf
loop
xchg
xchg
inc
and
xor
pusha
mov
testb
mov
mov
outsb
push
mov
clc
push
push
push
imul
sub
fdivrs
push
in
dec
jp
cld
sahf
hlt
outsl
mov
fwait
push
xchg
pushf
test
mov
adc
xchg
pushf
pop
jb
imul
fcom
sbb
jo
fstpl
add
sbb
loopne
arpl
fsubrl
in
ret
dec
rclb
bound
mov
fldt
sub
pop
and
jno
aam
arpl
or
pop
sbb
inc
pop
push
je
ret
sbb
cwtl
mov
stos
cmpsb
in
inc
cmp
jecxz
repz
mov
popf
push
fldt
lock
fmull
in
pop
daa
pop
sahf
in
sahf
jmp
sub
push
jge
outsl
dec
jno
sbb
pop
in
punpcklwd
lds
inc
in
sub
mov
adcl
imul
mov
sarl
cmovae
out
mov
adc
out
push
lcall
out
mov
mov
pop
pop
jp
pop
dec
popf
scas
in
aam
xor
ret
pop
inc
pop
mov
pop
or
enter
pusha
inc
stc
mov
and
mov
add
xchg
add
je
add
mov
rcrb
xchg
int3
mov
pop
mov
or
add
cmp
push
pop
jg
into
dec
in
std
vpsubd
or
xchg
cmp
push
lret
mov
cwtl
pop
ja
mov
xor
or
inc
mov
pop
add
call
inc
ja
push
ja
shl
and
popf
push
mov
in
pop
cli
into
aas
adc
ja
sbb
sti
pop
loopne
movb
nop
rcll
imul
fwait
add
ret
je
test
call
xor
js
gs
addr16
jo
xchg
jb
repz
popa
stos
add
pop
add
cmp
jns
mov
hlt
mov
js
clc
insl
into
cmp
lret
dec
lds
lret
jae
jle
jecxz
jg
fiaddl
pushf
mov
lods
gs
cmp
fmull
scas
fistl
mov
xchg
dec
fisubl
in
stos
push
mov
andl
add
jns
sbb
and
fbld
lret
pop
jbe
pinsrw
push
inc
outsl
sbb
or
cli
cmp
aam
sub
pop
push
cmp
in
dec
outsl
jl
gs
and
ficoms
jmp
fcoms
pop
xchg
inc
daa
or
adc
mov
dec
fwait
repz
movsb
mov
clc
std
dec
and
test
jge
ret
loopne
rcrl
sub
xchg
fsubs
xchg
mov
daa
mov
or
imul
sub
mov
or
xchg
pushf
lods
orb
clc
ja
test
out
daa
lods
xor
cmp
and
call
xchg
mov
in
dec
mov
sub
add
aad
fadds
or
or
repz
jp
jnp
or
scas
adc
pop
dec
push
in
sub
mov
adc
mov
stos
and
add
cwtl
in
add
push
andb
sbb
lahf
popf
and
pop
popa
psllq
mov
mov
or
sbb
adc
aaa
loop
or
and
sub
adc
cmp
fwait
aaa
sbb
and
push
es
aaa
sti
dec
fdivs
lcall
push
cmp
daa
cmc
sbb
fdivr
or
cltd
movsl
scas
sbb
rcrb
out
lods
jge
scas
cs
push
push
cli
rorb
xabort
push
cmp
xchg
xchg
movsl
xchg
outsl
sbb
loopne
or
mov
das
cmc
bnd
mov
fwait
cmp
in
out
sti
push
fdivrl
jno
or
in
nop
icebp
add
fwait
xchg
and
jg
outsl
shrb
jno
sbb
and
inc
cmp
bound
lock
bound
ficompl
push
data16
movl
pop
pop
xchg
inc
pop
cmp
push
iret
subl
sbb
xor
scas
sbb
pusha
mov
jg
jmp
negl
jae
xor
pusha
cmp
cmp
decb
ret
movsl
aad
ljmp
stos
xchg
scas
sub
hlt
jmp
sub
jae
into
neg
pushf
sbb
fwait
sub
push
xor
jae
int
cmpsb
dec
mov
cmp
popf
cmp
jecxz
mov
insb
mov
or
sbb
pop
aaa
insb
or
jl
dec
lds
shrl
in
test
ficompl
add
dec
xor
outsl
pop
jge
gs
mov
and
dec
dec
sub
out
clc
mov
xor
jno
mov
ja
idivl
or
call
mov
push
dec
xor
pop
inc
xchg
or
jmp
sbb
sbb
xor
es
mov
add
sti
dec
cli
xchg
in
movb
adc
jp
sbb
rclb
push
or
ret
mul
in
xchg
shrl
xchg
mov
or
ret
in
testl
cmpsb
fstpt
cmp
lcall
add
xchg
lods
ret
stos
or
popa
push
lock
xchg
daa
cmp
push
arpl
lock
pop
sbb
and
pop
enter
ret
xor
push
xchg
imul
scas
gs
sub
inc
mov
pop
ljmp
fsub
pop
add
enter
ror
fists
test
test
xchg
mov
loop
out
cli
jbe
cmpsl
push
adc
fstp
jns
push
adc
cmc
pop
sbb
hlt
sub
ljmp
push
cwtl
cs
sub
inc
jecxz
pop
neg
pushf
dec
push
mov
clc
push
lret
movsl
cmpsb
ja
push
jecxz
cmp
scas
movsl
xchg
sbb
mov
lahf
mov
lods
shlb
jge,pn
out
cmp
out
mov
push
sub
jmp
add
jg
mov
subl
jmp
mov
dec
adc
minps
ja
ja
es
fwait
aas
into
repnz
into
out
inc
jg
ffreep
pop
daa
ja
jbe
fcomp
aaa
inc
cmc
test
pop
and
loop
lcall
pushw
jne
push
jne
lret
jmp
mov
pop
xor
mov
lock
and
push
lods
lcall
inc
lcall
gs
cmp
ja
pop
jne
ficoml
imul
jne
mov
pop
mov
xor
push
push
jno
scas
sbb
and
sbb
fistl
xchg
sbb
pop
pop
and
gs
leave
cmp
cmp
lods
inc
jo
jns
sub
cmpsb
mov
adc
jne
pop
jg
pop
inc
add
ja
sbb
js
jmp
sahf
out
data16
add
out
je
sbb
jl
std
cmp
sbb
fisubrl
js
push
or
xchg
in
incb
jge
dec
dec
mov
mov
push
icebp
repz
daa
int
mov
push
loopne
xor
lcall
jo
sub
mov
fcmovnb
pop
pop
push
jo
addr16
ret
and
testl
aaa
movsb
jle
sub
out
clc
add
mov
adc
mov
push
mov
arpl
mov
cmp
jge
cltd
push
imul
outsb
test
xlat
push
adc
out
loop
mov
adc
icebp
lea
cmpsl
aad
mov
stos
mov
jae
xor
mov
pop
mov
mov
ret
push
sbb
int
fstpl
dec
gs
lods
sbb
xor
push
jmp
aaa
lea
cltd
xchg
push
mov
xor
sub
outsl
mull
xor
bound
pop
dec
nopl
pop
aad
sub
cltd
sub
gs
add
ficoms
mov
pushf
outsl
xlat
sbb
xchg
adc
and
rcr
sahf
or
lcall
mov
out
out
clc
xchg
adc
cmpsb
shll
sub
xor
sub
or
add
loopne
imul
rclb
stos
rcr
xchg
pop
lock
sub
xchg
outsl
lods
push
sbb
mov
lahf
dec
scas
jne
loopne
iret
jle
sub
cmpsl
fadds
pop
lods
mov
push
or
stos
loop
jl
push
jnp
pop
stos
cmp
js
sti
sub
shll
sbb
cmp
loope
pop
push
dec
mov
mov
xchg
icebp
ret
jmp
ljmp
pop
lahf
ret
sub
sbb
shrb
xchg
adc
cmpsb
add
mov
cmpsb
movsl
pop
loope
addb
aaa
cs
jge
sbb
adc
lods
mov
pop
cmpsl
pop
sub
push
sub
inc
pop
dec
sbb
or
cmp
dec
outsl
aaa
loop
in
out
sub
fadds
add
mov
cmp
divps
mov
push
push
insl
mov
rcll
pop
fcomps
in
ficompl
das
call
fistpl
das
call
ret
or
stos
sbb
leave
daa
cld
fcomip
clc
dec
add
addr16
fwait
lahf
icebp
rcrl
pop
pop
call
popa
push
aaa
cld
clc
xchg
jmp
sub
jmp
addr16
clc
mov
lcall
pop
cwtl
dec
jb
fsts
std
shlb
out
xchg
sbbl
inc
cmp
stc
movsl
call
xchg
or
xor
dec
jmp
cmpsb
lahf
nop
gs
xchg
movsl
sti
repnz
xor
in
scas
rorl
xchg
xor
sbb
xor
xchg
jbe
mov
addr16
sahf
popw
sub
testb
js
lret
cli
mov
arpl
stc
out
jbe
dec
pop
int
scas
sbb
add
rcrb
jge
leave
jno
ljmp
cmp
sbb
ret
lret
mov
pop
and
add
sti
and
arpl
loopne
xlat
imul
je
lahf
jmp
mov
xor
fwait
je
mov
jb
call
movsb
pop
cmpb
mov
shlb
je
mov
or
adc
pop
add
dec
daa
pop
fcomp
out
push
and
jge
pmaxsw
jge
sbb
pop
out
pop
xchg
je
mov
mov
add
or
push
or
fcmovu
mov
pop
push
xor
dec
popa
sub
sbb
clc
aad
outsb
ficomps
fnstcw
test
sbb
in
adc
test
adc
mov
imul
rorb
pusha
xchg
mov
sub
cld
mov
gs
mov
cwtl
mov
and
sub
js
xor
pop
mov
orl
sub
mov
xchg
fsubl
push
add
mov
xor
jle
mov
pop
dec
gs
fsubrl
sub
in
repnz
sbb
mov
jmp
sbb
loope
shrb
xchg
mul
lret
mov
popl
aaa
pop
adc
sti
jnp
push
aaa
out
mov
jnp
outsl
inc
cmpb
sti
test
sub
sub
push
inc
xchg
mov
push
xchg
scas
jmp
push
jae
fisttpll
mov
push
cld
leave
jle
lcall
fldenv
fistpl
pop
int3
sub
gs
gs
mov
jns
pop
adc
iret
sti
cld
sbb
es
xor
iret
cltd
dec
cs
pop
out
mov
sub
add
cwtl
lahf
pop
mov
sti
fcoml
leave
push
sbb
popa
push
mov
mov
sub
xchg
jae
cmp
jb
mov
cmpsb
pop
call
clc
fistps
sbb
dec
or
push
sbb
adc
sbb
cmpsb
inc
adc
jbe
dec
lret
ds
xor
in
push
mov
imul
jg
cmp
dec
or
pusha
or
imul
cs
loope
mov
adc
xor
push
in
push
cwtl
pop
loopne
mov
push
lock
rorb
ljmp
and
movb
in
out
mov
jns
in
add
pop
add
imul
enter
cli
jg
subl
inc
jp
arpl
ja
jg
cmp
data16
sbb
pop
out
mov
xchg
push
movsb
sub
aas
mov
add
pop
push
icebp
or
or
sbb
cltd
mov
cmc
mov
jp
lahf
roll
inc
cmp
xchg
pop
cmp
dec
pop
lahf
add
cmpsb
jo
or
inc
push
pop
shlb
sbb
stc
or
jp
inc
data16
aam
mov
scas
stc
test
mov
and
push
scas
pop
mov
std
fdivrs
cmpsb
andl
icebp
and
pop
adc
mov
icebp
add
in
pop
pmulhw
xor
adc
jecxz
jnp
popa
pop
addr16
jne
sahf
sub
push
cmp
clc
dec
pop
scas
fcompl
or
ficoml
imul
jle
dec
fimull
jmp
jge
cmpsl
jns
inc
jb
cmpsl
and
outsl
sub
stc
mov
add
loop
mov
dec
push
dec
cmp
ret
sub
repz
add
jecxz
pop
jl
pop
pop
call
fdivr
outsl
fwait
and
mov
jge
cmp
xor
jmp
xchg
int3
fs
cwtl
sub
arpl
sub
or
mov
jge
jle
addr16
and
mov
pop
sbb
cs
repz
shl
sbb
pop
jbe
dec
cmp
cltd
loope
clc
cmp
fld
jge
sub
bound
enter
dec
filds
mov
push
and
jg
decl
psubusb
inc
mov
jg
dec
fistps
ja
popa
mov
inc
cmc
movsb
cmp
les
pop
push
and
pop
xchg
cmp
lcall
cwtl
mov
add
sti
fisubl
enter
sub
cld
js
movsl
out
cltd
sub
rorb
test
call
xor
or
out
push
sbb
fsubrs
lahf
sub
and
out
sti
gs
pop
sub
xor
daa
subl
stos
or
pop
call
cwtl
or
scas
clc
js
insb
gs
faddl
leave
int
imul
enter
call
adc
out
sub
fadds
sti
xchg
pop
mov
testb
pop
lock
push
cld
lods
pusha
or
xchg
stc
push
adc
stc
ds
inc
xor
add
dec
out
shl
in
dec
shll
or
inc
out
repnz
push
lea
repz
ljmp
sub
lret
sbb
sbb
mov
xlat
adc
inc
enter
xchg
inc
fisttpl
sbb
inc
sbb
cmp
or
fbld
mov
mov
loopne
add
cmc
push
sub
inc
jmp
mov
imul
aaa
push
aaa
add
mov
inc
or
test
std
call
jg
mov
adcb
pop
test
stos
paddsb
mov
mov
ret
dec
and
adc
pop
pop
addr16
push
pop
mov
push
cmp
or
xchg
xor
gs
out
sub
push
faddl
mov
mov
mov
push
sti
and
xchg
sti
jg
push
jg
clc
inc
repz
jnp
fwait
in
cmpsl
lds
add
or
pushf
dec
jns
lret
and
lcall
sar
int3
xchg
xchg
call
imul
ds
test
pop
stos
sub
and
pop
ficoml
js
push
push
shll
ss
jnp
mov
mov
xor
add
outsl
mov
jl
cmp
jbe
xor
out
ja
dec
cmpsl
gs
loope
add
sub
in
mov
call
cli
push
mov
std
xchg
xchg
ss
aam
inc
arpl
dec
jmp
mov
xchg
test
pusha
xchg
cs
and
sub
dec
adc
cld
rorb
jecxz
nop
sarb
adc
cmp
cld
push
push
lret
iret
mov
add
aam
xchg
mov
inc
jo
icebp
push
out
mov
aam
in
icebp
cld
push
mov
les
fsubr
aaa
or
push
sub
sbb
cwtl
push
push
add
inc
cmp
push
jge
cs
xchg
inc
push
scas
jge
cmp
cmp
and
xor
testl
dec
add
mov
fmul
and
mov
jle
mov
mov
sbb
mov
fisubrl
cld
push
sbb
or
sub
jl
add
jno
xor
aaa
jle
mov
mov
mov
scas
cmp
fsubs
mov
cmp
jae
mov
sbb
lahf
outsl
jae
dec
imull
pop
push
inc
lock
aad
js
mov
jl
outsl
call
dec
jb
dec
gs
test
dec
clc
enter
sbb
pop
in
mov
xor
icebp
mov
mov
clc
out
fsubrs
lods
mov
push
jle
push
pop
paddsb
or
sarb
or
jnp
and
fucomi
outsl
push
pop
and
push
cmp
lret
clc
movsb
xor
mov
dec
popf
pop
cmp
mov
sbb
fisttpl
dec
pop
loopne
or
fs
inc
jns
iret
adc
sub
gs
notl
jne
ljmp
ret
outsl
adc
inc
std
cld
stos
scas
test
ffree
dec
aad
shufps
cmp
mov
or
cmp
lock
daa
stos
arpl
cwtl
xchg
test
sti
jmp
decl
cmpsl
decl
and
push
push
sub
sti
test
imul
sub
mov
pop
push
lret
sub
outsb
pop
outsl
push
xor
stc
rclb
test
ljmp
mov
fimuls
pop
push
lret
imul
cmp
enter
lea
icebp
mov
pop
xchg
cmp
cmp
icebp
inc
mov
ss
push
subl
pop
fistpl
and
in
mov
das
ljmp
addr16
outsl
lea
pop
roll
fdivrl
adc
xor
das
mov
pop
rcl
sub
ficomps
inc
pop
out
mov
jl
inc
mov
data16
sbb
dec
push
mov
mov
shrl
mov
negl
mov
add
sub
and
sbbb
push
inc
scas
out
jge
aas
scas
mov
rcr
sbb
movl
std
pop
xchg
mov
xor
push
xchg
fsubrs
push
inc
orl
fidivs
je
pop
pop
movsl
or
insb
push
testb
xchg
pop
cwtl
repz
push
push
lahf
jns
arpl
repz
push
insl
cmp
out
loopne
leave
cs
outsl
loop
jo
add
mov
inc
imul
in
icebp
lret
pop
es
lds
sbb
cmp
pop
xor
cmpsb
push
jecxz
or
push
int3
mov
xchg
mov
inc
out
inc
int3
pop
shrl
cltd
mov
out
sbb
fwait
mov
mov
inc
fucompp
popf
cmp
adc
push
lea
xlat
sbb
xchg
dec
icebp
lods
pop
call
fiaddl
sbb
push
adc
mov
out
mov
cmpsl
movsb
out
jecxz
push
fsts
push
dec
scas
aas
and
outsl
xchg
fcompl
std
inc
jmp
xor
and
sbb
push
sbb
pop
cltd
cmc
mov
jne
jp
out
push
xlat
cli
in
dec
or
call
mov
dec
cli
mov
mov
cmpb
pop
pop
sbb
mov
leave
negb
rcr
pop
pop
dec
scas
or
cmp
leave
aaa
dec
pop
fldenv
repz
mov
adc
or
inc
cmp
pop
hlt
aad
xchg
adc
push
adc
pop
xchg
mov
pop
fstpt
in
pop
stos
pop
sbb
stos
sbb
pop
shll
jae
fprem
arpl
fwait
mov
rcrl
outsl
scas
sbb
or
mov
jae
adc
mov
or
mov
xchg
lea
or
adc
mov
out
pop
push
ret
hlt
popa
das
xchg
mov
sub
mov
ret
cmp
out
hlt
sub
sbb
jmp
idiv
and
mov
scas
mov
and
mov
mov
test
fmuls
aaa
es
xchg
sub
ret
loope
scas
aam
pop
into
les
testl
lcall
mov
leave
push
lret
test
push
lcall
mov
inc
pop
div
pop
cwtl
lahf
pusha
subb
out
mov
lock
fcmovnb
jne
jle
fdivs
jmp
sbb
sub
addr16
out
ljmp
xchg
fcomps
cltd
sbb
jle
and
cs
into
imul
mov
or
out
popf
cmp
rcrb
dec
push
pushf
out
movsl
cli
lds
in
fs
pop
or
stos
sub
mov
push
out
sub
jnp
loope,pn
test
xor
fnstcw
scas
or
or
addr16
jmp
insl
fsubl
mov
dec
pop
inc
clc
sarl
cmp
cmp
sbb
lcall
data16
test
dec
fisubrl
xlat
push
pop
cmp
fidivl
data16
aaa
ja
cs
xor
addr16
sahf
pop
jo
pop
jo
lahf
cltd
cmp
sub
jmp
notl
pop
xchg
adc
fcoms
into
sbb
rcrb
je
in
pop
gs
fdivs
sub
xor
andl
xchg
out
pushf
dec
hlt
add
ljmp
aad
out
lds
lcall
imul
pop
xchg
out
scas
cwtl
jo
ficompl
out
inc
pusha
outsl
add
dec
add
aam
fldl2t
inc
pop
bound
add
lret
std
or
call
ds
into
push
push
lcall
push
xchg
adc
mov
fcoms
cmp
sbb
outsl
ja
or
scas
repz
out
out
sbb
cld
sub
movsb
das
pushf
and
sbb
fistpl
jg
cltd
sti
fmull
ret
mov
test
add
movsl
xlat
mov
movsb
adc
push
in
cmpsl
push
lret
in
push
adc
repz
clc
adc
call
adc
ja
fsubrl
ljmp
adc
xsaves
mov
fsubl
mov
or
ds
lcall
mov
fldenv
jp
or
dec
mov
imul
xor
xor
sub
pop
jmp
dec
pop
mov
js
std
sbb
loope
add
int
xchg
cmpsl
scas
sbb
pop
inc
ja
mov
arpl
rcrb
inc
fsub
xor
rcrb
out
mov
leave
mov
add
icebp
sub
sahf
in
inc
cltd
or
nop
fstps
imul
ja
outsl
stos
mov
fistpll
and
jmp
push
shl
mov
pop
mov
fcmovnb
fsts
movsl
movsl
fwait
cmpsl
outsb
mov
adc
xor
mov
sbb
cmp
cmp
fmull
iret
pop
sbb
bound
sarb
lock
cmp
or
cmp
outsl
cmp
fs
je
leave
and
sti
ljmp
cwtl
int
pusha
cmp
outsl
out
adc
mov
mov
cmpsb
into
fs
pop
daa
sbb
dec
dec
sbb
lea
idiv
and
xchg
add
shrl
es
scas
in
xor
sub
add
adc
or
mov
or
repnz
sarb
jne
pop
inc
je
mov
clc
enter
mov
push
mov
ret
jns
push
xor
add
fnstcw
es
inc
or
adc
rolb
outsl
sub
jne
fbld
push
pop
sbb
xchg
test
out
sbb
cmp
ss
mov
iretw
jo
push
xor
ja
sbb
call
neg
sarl
movl
mov
mul
out
js
add
inc
jne
into
adcl
or
fldcw
pusha
fcmovnb
fildll
and
dec
cs
sbb
bound
dec
test
lea
push
mov
jg
cwtl
sub
dec
test
clc
roll
adc
popf
data16
cmp
cmc
pop
pop
mov
cli
in
sbb
mov
test
gs
sahf
data16
js
movsb
xor
or
in
lret
dec
pop
sbb
push
push
mov
and
loopne
cmp
pop
fs
mov
lret
and
sub
and
out
inc
add
mov
push
jmp
push
adc
inc
pop
cld
mov
test
popl
into
adc
icebp
xor
cmp
mov
mov
sbb
xor
jnp
jne
dec
sbb
test
icebp
and
or
or
imul
sbb
mov
fwait
adcl
cmp
push
add
imul
mov
add
push
inc
jle
popa
imul
fsubp
or
dec
inc
sti
add
sub
push
nop
jp
push
out
ret
dec
cmp
in
loopne
sub
fucomi
push
inc
sbb
lret
stos
pusha
cli
mov
push
lret
xchg
rorb
loope
pop
dec
sub
pop
cmp
std
cmp
xchg
or
cmp
stos
lods
xor
fiadds
hlt
add
mov
andl
adc
scas
mov
mov
imul
outsl
xchg
sbb
dec
push
test
mov
mov
sbb
out
sub
insb
xchg
cmp
push
nop
enter
in
add
pop
pop
repz
dec
xor
adc
push
and
dec
es
in
xchg
mov
lcall
fidivrl
in
push
pop
inc
repz
add
sahf
imul
into
dec
nop
ficompl
lahf
call
add
and
int
jmp
push
or
ds
add
ja
in
fdivr
dec
out
out
xchg
pop
fcmovu
out
inc
out
cmp
fsubs
adc
pop
push
leave
inc
xchg
mov
test
imul
in
or
mov
push
cwtl
cmpsb
sbb
out
fwait
sbb
push
call
mov
aam
or
adc
js
fiadds
mov
fwait
leave
fcompl
xchg
fists
fsubrs
aaa
mov
or
inc
mov
out
mov
xchg
test
in
add
or
rcr
xchg
clc
pop
std
shlb
jl
ljmp
ljmp
es
cmp
xchg
sbb
icebp
ja
js
lahf
lock
sbb
xor
lods
cmp
xorw
insb
std
aaa
pop
fdivr
loopne
push
sarl
out
sub
in
cld
dec
lods
mov
clc
jmp
or
loopne
push
cli
fisttpll
xchg
dec
xchg
add
mov
lock
xchg
ljmp
sbb
inc
mov
mov
mov
jge
fstpl
insb
rolb
adc
mov
inc
es
mov
clc
xchg
lret
in
sarl
push
jne
out
lret
dec
out
sarl
ss
sbb
or
mov
jbe
mov
inc
outsl
mov
sub
mov
push
pushf
jmp
fcomps
fchs
xchg
int3
das
add
ficoml
jmp
xchg
sbb
push
out
push
cltd
call
out
pop
and
push
push
aam
movsl
dec
stos
testl
cmp
xchg
dec
push
or
cli
movsl
sbb
es
fdivrs
popa
fsubrs
std
sub
jl
jle
push
or
jnp
sub
sbb
add
ljmp
sub
fcmove
cmp
scas
outsl
xchg
and
popf
rcll
rcr
pop
sub
testb
xchg
xchg
sbb
ljmp
mov
std
cwtl
mov
sti
sbb
popf
inc
insl
cmp
rcl
jmp
mov
cmp
sbb
mov
add
push
mov
imul
cmpsb
xchg
cmc
gs
lods
push
sbb
jecxz
inc
dec
fldcw
fcmovnu
clc
jge
sub
fdivl
mov
call
stos
and
jno
in
pop
fcmovnu
jg
xchg
sahf
jp
shl
loope
adc
push
mov
mov
adc
push
and
call
jmp
and
icebp
xchg
pop
mov
xchg
outsl
dec
sbb
fldcw
add
add
sub
cmp
cmp
cmpsb
bound
addr16
sbb
inc
fstps
fstps
or
sbb
dec
fsubrl
jnp
int3
in
loop
scas
jp
sbb
mov
fcomps
cs
and
je
dec
movsb
cmp
outsl
pop
xchg
scas
sub
add
push
sub
les
pop
mov
cmp
icebp
frstpm(287
repz
jmp
cmc
fisubs
ror
pop
ss
jp
push
xchg
jl
mov
mov
in
test
push
cltd
faddp
repz
push
fisubs
sub
mov
cs
loopne
icebp
xor
movsl
pop
insb
mov
jmp
mov
push
divl
dec
fldl
lods
xor
mov
js
adc
sbb
call
movsl
push
mov
push
js,pn
jnp
jne
mov
arpl
daa
add
xchg
push
mov
sbb
ljmp
aaa
inc
jmp
jp
xchg
pop
cmp
shl
add
clc
push
pop
xor
pop
aaa
add
arpl
fwait
mov
test
stc
dec
and
xchg
pop
jle
arpl
enter
sbb
pop
ljmp
int3
mov
or
je
cmp
nop
ja
fcompl
cmpsb
pand
dec
push
data16
or
pop
jne
jb
mov
jmp
int3
aam
sti
loopne
loope
testl
fildl
rcr
mov
or
faddl
mov
pop
aad
push
pop
pusha
sahf
cmp
jno
push
sub
jnp
cmp
push
xchg
fadd
mov
in
mov
ljmp
fdivp
cmp
cmp
and
dec
gs
imul
ret
sahf
jb
mov
push
mov
pop
outsl
js
aas
cwtl
mov
clc
repz
pop
fdivrl
adc
pop
cmp
inc
pusha
rcl
pop
add
gs
push
clc
shlb
not
jbe
arpl
es
cli
pop
out
scas
push
push
push
mov
jge
cwtl
xor
mov
and
cmp
fabs
rorb
out
pusha
mov
jb
outsw
xchg
gs
jbe
mov
shlb
mov
enter
lret
pop
sub
data16
outsb
mov
mov
pushl
adc
clc
mov
mov
cmpsl
insl
jge
xchg
arpl
js
call
cmp
push
movsl
in
add
movsb
in
je
inc
pop
cwtl
mov
je
sbb
test
sbb
leave
outsl
out
loopne
scas
mov
out
sbb
aas
pop
cmpsb
pop
fdivl
in
lods
sbbb
mov
cmpsl
pop
mov
push
or
movsl
mov
cmp
sti
gs
jae
push
jns
rorl
sub
cmp
stc
ja
adc
orl
scas
pop
shrl
loope
inc
loopne
js
shll
mov
pop
out
dec
cmp
mov
xchg
stos
loope
test
mov
mov
xchg
pusha
popa
xor
fldenv
mov
xchg
cli
xor
pop
xor
xchg
xor
sub
in
cmc
imul
sahf
rol
jmp
pop
pusha
lods
push
in
sarb
cltd
sti
shll
pop
xchg
imul
out
fldenv
mov
cld
inc
dec
lret
cs
pusha
mov
or
push
inc
inc
lods
das
push
jnp
daa
jo
pop
xchg
test
sub
icebp
in
or
jmp
movsl
adc
jb
test
sub
dec
cmp
add
nop
sub
lahf
dec
fs
mov
xor
inc
sbb
adcl
mov
clc
cld
ficompl
popf
pop
xor
mov
mov
cltd
or
mov
cmp
movsl
sub
jmp
jle
add
pop
out
adc
stos
pushw
mov
xlat
mov
mov
dec
push
cmp
mov
insb
and
add
pop
xchg
dec
xchg
leave
ret
pop
stos
push
ja
mov
jg
or
aas
fstl
pop
repz
rclb
or
mov
or
pop
dec
xchg
pushf
ret
mov
pop
ret
cs
or
xchg
inc
mov
adc
mov
push
xorl
mov
mov
fldenv
daa
mov
or
stc
pop
mov
xchg
idivl
jg
xor
push
sahf
xchg
xabort
es
mov
inc
out
loope
das
or
stos
sbb
cmpsb
push
dec
lahf
push
sahf
add
cmpsl
inc
cmp
and
inc
pop
ficompl
add
divl
insb
xchg
stc
les
or
sub
pop
sbb
stc
mov
das
insl
gs
or
jae
mov
pop
ja
rol
out
mov
pop
xorb
xor
daa
mov
repnz
mov
fcompl
int3
lods
push
clc
stos
lods
jmp
jmp
xchg
xor
das
lock
push
add
mov
test
xchg
out
pop
adc
outsb
arpl
adc
daa
and
push
mov
icebp
subb
out
mov
and
dec
hlt
aas
loopne
jae
fmuls
dec
imul
mov
lods
outsl
fnstcw
mov
sbb
sbbl
or
gs
jmp
push
jmp
pmaxsw
shll
loopne
insl
sbb
addb
adc
mov
out
add
or
mov
sbb
scas
push
pop
jecxz
out
out
xor
ret
in
sub
mov
and
gs
pop
xchg
or
inc
je
out
push
pop
xchg
cld
stos
iret
clc
cs
jbe
cwtl
std
or
in
cltd
sbb
insl
gs
test
cmp
stos
subb
sbb
push
mov
mov
pop
xor
popf
mov
pushf
fildll
push
jl
mov
add
int
cmc
fidivrs
into
mov
pop
daa
add
aam
and
data16
dec
data16
fcompl
mov
or
ret
ljmp
fs
mov
inc
sti
enter
loope
adc
mov
mov
jno
mov
cmp
inc
push
mov
adc
pop
shll
aad
or
cmp
je
push
cmp
call
sub
jle
sub
cmp
popa
cmp
jbe
add
xchg
out
mov
mov
lahf
inc
jmp
jg
call
dec
push
push
and
es
push
dec
mull
fistl
pop
dec
push
ss
or
cmp
arpl
mov
ss
pop
adcb
aaa
pop
inc
ret
fcomp
xchg
out
clc
das
mov
imul
pop
into
dec
rclb
int3
cli
cmp
gs
inc
lock
cli
lock
faddl
les
inc
add
enter
mov
sbb
aas
int
cltd
cmc
aaa
imull
mov
sbb
test
jmp
ds
cmp
sbb
pop
lods
mov
mov
sub
mov
jbe
mov
xchg
mov
repz
xchg
lock
pop
cs
enter
mov
dec
fdivl
cwtl
sbb
dec
icebp
mov
movsl
or
out
daa
jmp
cmp
test
fisttps
mov
outsl
mov
pop
addb
repnz
call
ss
aam
mov
add
nopl
pop
xchg
sahf
sbb
scas
sbb
jge
frstor
into
aam
mov
and
dec
out
xchg
mov
and
jnp
mov
sub
inc
addr16
cmp
cld
cwtd
arpl
sub
add
pop
add
pop
or
scas
sub
xor
or
lea
sahf
pop
push
test
pop
pop
popa
xchg
push
fmuls
push
jge
adc
push
insw
sub
gs
loope
push
jb
test
aas
or
rclb
repz
sbb
xchg
sub
inc
cmp
mov
inc
push
mov
pop
dec
clc
jae
push
ror
addr16
icebp
leave
xchg
fcmovb
pop
sarb
or
outsl
mov
sub
xchg
shrl
sbb
push
mov
cli
lods
negl
sbb
cmp
imul
je
scas
aad
repnz
push
cmc
jp
je
dec
jl
inc
dec
mov
lahf
ds
pop
enter
pop
sbb
stos
and
nop
jmp
xlat
psubusw
sahf
in
jne
stc
test
aas
add
cmovp
ja
pop
outsl
push
fwait
test
add
outsl
push
ret
cmpsb
out
cmp
xor
jg
or
cmpsb
arpl
xchg
ljmp
sbb
xlat
dec
gs
sub
sbb
test
cltd
push
jmp
mov
gs
insb
lea
and
or
push
cmp
mulb
xchg
inc
or
mov
push
clc
movsl
ljmp
cmp
sahf
lea
jae
testl
pop
sahf
fcmovb
filds
cltd
push
sub
push
mov
jns
addr16
outsl
sub
loopne
add
xchg
bnd
mov
push
sbb
lods
add
imul
lock
movsb
movsb
cmp
sbb
repnz
lahf
sahf
scas
gs
xor
aaa
leave
lret
push
cmp
sub
fisttpl
loop
ljmp
xchg
into
jnp
push
cmp
xchg
ffreep
repz
inc
pop
inc
jne
or
fnstenv
sub
inc
mov
mov
aad
jne
dec
sbb
and
fs
dec
jae
pushl
gs
push
fldenv
jmp
fcmovu
int
xchg
adc
jbe
test
negl
insl
mov
shr
xchg
mov
das
js
mov
push
mov
movsl
outsl
pusha
scas
lods
stos
stos
int3
addr16
dec
push
out
in
sbb
into
adc
mov
idiv
out
sub
sbb
call
mov
and
ffree
xor
push
or
jb
ret
mov
dec
idiv
push
sbb
pop
lock
inc
inc
iret
sub
incl
cmp
stos
and
daa
fildl
xchg
pop
xchg
mov
jne
mov
bound
orb
ljmp
add
add
sbb
and
add
cmp
out
fsubrl
mov
pop
dec
dec
jnp
int
or
mov
cli
push
fldcw
xor
aaa
ret
repz
xchg
or
push
mov
fistpl
inc
jae
adc
xchg
stc
mov
imul
push
cli
dec
and
arpl
mov
pop
bound
jge
insl
pop
hlt
adcl
mov
jbe
add
xchg
push
imul
push
mov
das
xor
shll
call
sbb
outsl
icebp
jmp
pop
fnstcw
cwtl
sbb
mov
stos
xor
mov
sbb
into
mov
inc
add
mov
loop
lods
jnp
xor
cs
jne
and
leave
mov
push
lret
popa
sub
xor
aam
clc
sbb
cmp
movsb
inc
or
stos
sbbb
shll
scas
nop
lock
dec
pop
xor
dec
out
in
mov
cmp
or
xchg
les
jne
xor
gs
sti
cmc
cmpsb
cmp
pop
outsl
sbbb
cld
add
xchg
mov
fadd
jb
ja
cltd
mov
mov
jge
cmp
sbb
mov
out
mov
addr16
lock
aam
es
cmpsb
stc
fwait
dec
out
push
cmp
movsb
jmp
or
roll
adc
pop
pop
push
clc
mov
adc
push
xor
adc
mov
fildl
sbb
mov
mov
jecxz
jge
adc
sbb
aas
cmp
inc
cld
pop
test
or
push
idivl
dec
scas
fdivrs
pop
in
stc
jge
test
ljmp
cmp
pusha
pop
lods
mov
mov
out
fists
sub
push
or
stc
fmull
sub
jne
and
in
clc
push
in
mov
out
sbb
in
fwait
fwait
mov
mov
cmpsl
or
movsl
push
inc
rol
mov
das
fdivrs
sub
fcoml
cmp
jle
inc
int
adc
cwtl
enter
in
arpl
sbb
daa
and
in
push
out
xor
adc
scas
adc
movsl
inc
cwtl
mov
mov
testl
cmp
sub
mov
inc
dec
xchg
dec
and
loope
push
sahf
popa
sub
andps
mov
push
daa
adc
cs
or
imul
mov
mov
stc
xor
mov
jp
lock
jne
mov
int
call
out
pop
fsub
cmpsb
pop
cmp
lahf
movsl
addr16
mov
xchg
fmull
mov
cli
mov
shlb
and
xor
pop
shlb
pop
or
aaa
fists
cmp
movsl
arpl
negl
push
enter
icebp
pop
ljmp
repz
sti
and
les
aam
xchg
cmp
mov
push
clc
and
iret
ret
inc
out
or
push
cmp
test
addr16
mov
sbb
cmp
jmp
mov
repnz
sub
pop
or
pop
dec
sub
sub
xor
shlb
mov
inc
fninit
push
pop
fsubrs
dec
dec
sub
fisttpl
mov
loopnew
movsb
or
cmp
adc
rolb
pop
add
arpl
ds
push
aam
insb
sub
mov
dec
adc
adc
imul
ds
add
mov
sahf
test
jge
or
mov
insb
setbe
or
cmp
movsb
pop
fnstsw
push
push
lret
fldcw
aaa
push
out
mov
pop
nop
sbb
dec
pop
rol
pop
test
rcpps
xchg
mov
aam
js
pop
fdivrs
lock
adc
fistpl
fwait
dec
fs
lret
cmpl
or
jnp
and
das
or
xchg
mov
fwait
push
cmp
sbb
sub
xor
add
mov
jge
movsb
push
or
ja
jns
sbb
fbstp
and
aaa
adc
push
popa
mov
pop
xor
cmpsb
fdivs
out
pop
adc
fnsave
sub
daa
gs
test
sahf
sbb
or
gs
lret
pop
gs
add
pop
movl
dec
lret
cs
mov
pop
int3
mov
pop
pusha
jno
movsl
bound
popa
sti
cmp
sbb
sti
cs
incl
push
or
int
test
into
mov
cmp
sbb
jg
btc
push
es
sub
gs
sub
jecxz
xor
loopne
test
jp
cmp
popa
add
insb
test
sub
cmp
dec
in
push
cmp
arpl
pop
mov
fcoms
mul
jne
rcrb
roll
mov
scas
cmp
scas
in
sub
mov
push
cmp
into
aas
pop
psubusw
fsubrs
int3
adc
cmp
and
ja
xchg
fcmove
jmp
mov
sub
aas
pop
test
dec
mov
es
lret
clc
cmc
xchg
inc
sub
cmp
shrb
sbb
inc
call
daa
adc
cmp
push
adc
icebp
sub
data16
dec
pop
gs
sahf
jno
leave
cmp
cld
add
push
pop
mov
testb
mov
xor
mov
out
scas
pop
bound
sub
add
adc
lret
pop
and
scas
lds
or
addr16
icebp
pushf
and
and
jne
ficoms
dec
and
mov
push
mov
cmp
divl
sbb
push
lret
inc
into
sbb
gs
jmp
and
cs
fsubrl
clc
sub
pop
push
jne
sahf
mov
mov
mov
loope
mov
hlt
daa
idivb
pop
jae
or
fcomp
pop
jmp
push
jmp
pop
sahf
xor
leave
ret
cmp
gs
pop
ror
mov
mov
cmp
jp
cmp
sub
ret
fwait
mov
rcrb
fsub
es
insb
mov
lcall
rorb
xchg
xchg
xor
adc
sub
or
fucomp
or
outsl
cmp
cld
pop
add
xchg
imul
push
clc
loopne
mov
and
jns
add
bound
rcr
fs
dec
push
imul
sub
popf
lea
mov
mov
inc
jne
in
xchg
jmp
bound
xchg
mov
xchg
xlat
imul
and
sub
sbb
ja
lock
mov
mov
mov
jbe
cmp
push
sbb
aad
mov
sbb
or
cld
cmpsb
or
mov
fisttps
add
mov
arpl
psllq
jmp
loop
lea
xchg
jmp
cli
mov
jmp
xchg
jne
xchg
pop
or
xor
sbb
jbe
out
xchg
fcomp
pop
shl
cld
sbb
add
fwait
jne
xchg
int3
int3
shll
test
adc
test
adc
imul
xchg
rcrb
push
mov
sub
jns
jmp
cmpsb
clc
or
sub
jmp
xor
mov
adc
dec
jae
push
add
jbe
xchg
add
insl
fstps
cld
jle
jmp
loopne
adc
movsl
xchg
daa
imull
pop
mov
fdivl
cmp
pushw
add
stos
adc
inc
cmp
add
hlt
cmpsl
and
sub
sub
cmpsl
inc
sahf
aas
fldln2
fisttps
fsubrp
repz
push
pop
clc
push
pop
fsub
pop
inc
ror
sub
pop
jmp
xorl
sub
jp
sbb
sti
imul
mov
and
mov
dec
stc
arpl
or
dec
std
divl
fnstsw
push
inc
cmp
shrb
mov
and
or
push
sub
mov
sbb
add
fadd
pop
and
mov
jns
xor
mov
dec
pusha
stos
pop
jno
add
sbb
loop
hlt
sub
xor
push
push
clc
sti
cmp
mov
aaa
dec
fsubl
add
mov
fisubl
push
mov
outsb
cltd
int
in
sub
aas
inc
cmp
nop
xchg
stc
cmp
das
shl
pop
sbb
xlat
mov
out
imul
pop
repz
fs
sbb
dec
in
cli
sub
mov
pop
jge
pop
testl
je
add
push
das
xchg
jne
xchg
cld
add
std
push
push
sti
sti
aam
aas
jo
rcll
pop
mov
aas
mov
ja
xor
ljmp
xchg
mov
sub
or
mov
ss
fcomps
xchg
outsl
sub
and
dec
lahf
popf
sub
push
daa
sbb
fimull
cmp
sub
and
lods
cmp
fwait
lcall
das
cmpl
movsb
outsl
cltd
out
cmc
mov
jl
pop
cmp
pop
or
int3
jne
cmp
and
cs
call
inc
sub
aaa
pop
pop
xchg
add
pop
fsubl
imul
pop
jnp
mov
stos
testl
add
pop
movsb
les
push
cltd
mov
jbe
mov
shrl
dec
push
push
pop
xchg
clc
mov
mov
jne
mov
xor
mov
jne
scas
cmpsb
lea
dec
stos
xor
dec
push
mov
cltd
sbb
push
jge
dec
jbe
cmp
test
dec
cmp
jge
fdivs
pop
repnz
into
cli
scas
cmp
scas
loope
pop
andb
adc
loop
fdivl
test
pop
mov
shlb
and
pusha
xor
sbb
testl
in
cmp
movsl
adc
and
lods
addr16
inc
mov
imul
femms
fdivrs
add
imul
shll
arpl
push
cmp
rolb
add
jg
and
movsb
cmp
sbb
push
push
pop
dec
inc
fistps
or
jo
xor
cmc
xchg
mov
sub
lcall
shrb
sar
repnz
gs
lcall
pop
jnp
sbb
or
cmp
xchg
mov
lret
out
inc
addr16
imul
gs
pop
ds
ret
mov
xor
jnp
push
push
loopne
in
lcall
rorl
xor
ret
das
xchg
push
add
int3
inc
jae
fistpl
push
outsb
sub
fidivl
xchg
mov
aaa
rcrl
outsl
pop
or
call
je
pop
dec
data16
pop
inc
or
sbb
movsl
fnstcw
fstps
repz
mov
hlt
mov
mov
je
cmp
inc
adc
loop
into
or
stos
fcmovnbe
cmp
inc
arpl
mov
xchg
and
mov
push
xchg
loopne
gs
xchg
mov
cmpsl
and
jg
mov
subb
es
faddl
push
gs
push
ja
stc
jle
mov
dec
outsl
scas
mov
movsb
jae
jl
dec
in
cli
lods
gs
pushf
inc
std
jge
in
insl
mov
xorl
mov
inc
push
push
mov
sub
mov
fcoml
fidivl
and
cli
push
sbb
mov
mov
mov
lahf
fadd
xchg
ret
mov
jge
ja
dec
push
aas
pop
mov
pop
pop
cmp
fisttpll
or
fbstp
xchg
mov
ja
arpl
movsl
jnp
dec
push
add
mov
fisttps
inc
fsubp
xor
jmp
lock
and
cltd
pop
insb
sbb
leave
or
jo
cmc
fsts
dec
sbb
xchg
cltd
xchg
jp
push
adc
cmp
ljmp
xchg
xchg
inc
sbb
inc
fcomp
xor
pop
jnp,pt
leave
dec
mov
fcomps
pop
mov
cmp
fisubrl
cmpsb
icebp
xor
loopne
mov
out
insb
mov
pop
call
jl
push
rol
push
out
jns
cs
loopne
sbb
mov
xchg
fnstcw
jne
sub
cmovae
pop
sub
and
aas
cmpps
std
mov
shll
pop
lds
pop
push
adc
ljmp
arpl
fwait
imul
dec
fdivrl
sbb
mov
sbb
aas
loop
cmpsb
mov
add
mov
mov
jle
shrl
push
cmp
jnp
xchg
and
mov
cmc
in
pop
cmp
clc
das
inc
pop
jge
testl
inc
jns
xor
cmp
sbb
sti
arpl
mov
dec
push
fimuls
clc
fsubrs
call
ret
mov
mov
clc
jns
test
and
out
push
sbb
cmpsb
sbb
cmc
push
add
xchg
jg
out
ja
pushf
dec
daa
jmp
notl
mov
sbbl
aam
jle
fbld
aas
cltd
inc
in
sbb
clc
gs
pop
mov
or
movsb
clc
mov
subl
leave
cmp
sahf
aaa
insl
pop
flds
inc
out
mov
pop
daa
mov
out
mov
out
mov
pop
sbb
out
aad
lret
and
cltd
emms
jae
jne
mov
pop
js
cltd
or
stc
sahf
xor
push
jmp
mov
data16
jne
movb
pop
jl
xchg
ss
mov
fidivs
mov
inc
cltd
out
xor
loopne
pop
sar
out
stc
mov
into
cmpsl
outsl
cmc
ret
jne
pop
sub
lahf
push
in
fs
mov
push
xchg
cmc
mov
bound
inc
int3
js
loopne
xchg
sbb
mov
jmp
dec
js
jne
out
sbb
cmp
les
out
add
out
shrb
fisttpl
adc
mov
or
sub
pop
dec
sbb
and
pop
mov
sbb
pushf
pop
imul
sub
stc
adc
jnp
xchg
mov
cmpsb
cmp
sbb
fnstenv
mov
push
jl
cli
outsl
sub
xor
test
pop
scas
jb
in
push
mov
adc
pop
call
mov
cmp
and
icebp
setb
repnz
sbb
cmp
int
insl
dec
xchg
out
testl
pop
xchg
in
sarb
add
imul
fwait
sub
add
jns
incb
daa
pop
pop
push
mov
pop
leave
cmp
mov
xlat
leave
hlt
test
add
hlt
mov
cmp
jae
repz
sti
enter
test
fstps
out
setl
das
out
adc
mov
call
mov
cwtl
and
bound
mov
js
push
sub
sbb
adc
mov
dec
mov
pushf
cld
out
cltd
mov
sub
or
add
jbe
pusha
outsb
jne
jno
fidivrl
in
mov
mov
xor
out
pop
testl
sub
in
push
push
or
fcoml
and
jne
and
dec
jg
jle
and
in
enter
fs
sahf
dec
sbb
push
or
ljmp
adc
adc
xchg
mov
sub
cmp
scas
call
pop
cld
outsl
mov
cwtl
mov
jmp
out
pop
lret
push
jmp
pop
test
jno
xchg
outsl
in
pextrw
jns
pop
mov
shll
and
insb
inc
push
cmp
mov
mov
jns
bound
sub
inc
dec
add
fwait
jecxz
icebp
cmpsl
bound
arpl
and
inc
sti
loopne
xor
ljmp
pop
pop
cld
and
mov
outsb
inc
sar
das
pop
in
fbld
sbb
mov
pop
gs
cmp
out
and
sub
xchg
imul
add
inc
jne
bound
outsl
int3
pushf
adc
push
stos
cmpsl
mov
clc
sub
pop
mov
aad
daa
fstps
sti
inc
sub
cmpsl
out
push
out
scas
xor
cmp
cmpsb
cmp
cmpsb
push
pop
out
and
popa
sub
cmp
imul
add
cmp
repz
and
sub
in
aaa
inc
leave
or
xchg
arpl
adc
popl
adc
pop
dec
xor
cld
sti
gs
pop
push
fstpt
jo
push
jbe
ljmp
das
lahf
sti
insl
cmp
call
cld
gs
add
sub
test
call
jo
cld
add
daa
inc
or
and
pop
out
fildl
xchg
fnstsw
sarb
mov
loope
pop
jmp
sbb
inc
js
cwtl
pop
ss
or
jne
lahf
addr16
mov
xor
cmc
cmpsb
jae
mov
dec
jns
adc
sub
push
mov
add
daa
es
xchg
stc
ljmp
rcrl
xchg
ljmp
fsubrl
js
in
xor
orb
pushl
loop
scas
loopne
dec
sub
cs
orb
test
sbb
sub
aam
fwait
mov
fsubrs
sbb
out
cmpsb
pop
jle
cli
pop
push
dec
ljmp
ss
mov
jno
cmp
call
cmp
pushf
push
fcompl
sarl
pop
sar
inc
jo
fmul
outsl
push
push
and
cltd
sahf
cli
inc
out
pop
xor
push
pop
adc
gs
cmpsl
aad
scas
mov
icebp
jmp
int3
push
sub
pop
lcall
sti
int3
popa
or
clc
mov
and
scas
cmp
mov
lahf
push
push
stos
imul
in
xlat
out
xchg
sbb
outsl
stos
imull
cltd
sbb
fdivs
sbb
sub
inc
jbe
push
jnp
jbe
add
or
mov
dec
into
nopl
in
dec
testb
mov
mov
je
fsts
jne
nop
xchg
or
leave
pop
ror
cltd
insb
leave
lret
jae
iret
ljmp
push
pop
xor
add
fcomps
inc
mov
mov
call
cmp
fs
divl
addr16
jns
in
lret
sbb
xchg
rolb
dec
stos
pop
jmp
fildl
pop
daa
inc
mov
xor
mov
sub
mov
test
jne
lods
inc
stc
mov
sub
and
push
popa
xchg
xchg
adc
cmp
enter
outsl
jnp
jb
sub
pop
and
pusha
jecxz
imul
dec
xchg
cmp
icebp
std
sub
lcall
dec
jg
cmp
cli
dec
pop
sbb
jae
jne
jne
data16
aaa
iret
sbb
mov
sar
push
push
addr16
push
mov
fisubl
push
pop
and
scas
mov
outsl
or
loopne
rcll
jne
push
push
test
dec
call
push
push
out
xor
cmp
lods
js,pn
mov
std
sbb
sbb
or
test
xor
test
sti
xchg
fs
sbb
sbb
out
cmc
and
inc
ret
and
push
and
cli
sbb
pop
add
imul
and
icebp
sbb
pop
out
data16
jecxz
arpl
xchg
call
adc
mov
loopne
loop
jnp
cmp
cld
mov
stos
xchg
sti
fnsave
bswap
push
icebp
mov
fcompl
sub
testl
push
rcrb
xchg
jns
aas
repnz
movsl
pop
lds
out
fldcw
sub
sbb
pop
mov
js
cwtl
sbb
movsl
push
addr16
sub
add
addb
in
fcomps
inc
and
ret
fprem
push
sub
cmp
lods
sub
cmp
fwait
fwait
test
push
shlb
pushl
xchg
addr16
adc
or
mov
jecxz
fdivs
ss
enter
pop
stc
sbb
jg
aam
xchg
push
inc
push
mov
daa
fldcw
lods
dec
lock
mov
push
inc
out
iret
out
and
and
mov
jecxz
jmp
fisttpll
cmp
fsts
cmc
sbb
xor
add
int3
and
xor
lds
clc
sbb
sbb
push
mov
icebp
ljmp
mov
inc
outsl
sbb
xchg
add
push
xchg
arpl
testl
xchg
adc
jnp
push
div
pop
sbb
push
loopne
fsts
stos
shll
jge
pop
push
cmp
in
add
mov
pop
jnp
adc
outsb
imul
fisttps
pusha
or
mov
push
pop
pop
xchg
in
and
imulb
test
sub
xchg
add
sbb
lret
stos
pushf
mov
bound
dec
in
adc
pop
cli
mov
scas
mov
stos
xchg
lahf
shlb
out
and
cwtl
fsub
xor
movsl
sahf
pop
and
lock
cmp
push
cmovae
fidivs
addr16
jecxz
fs
scas
push
sub
jl
jae
push
popf
clc
add
mov
call
pop
stos
fmul
sub
sti
xchg
jmp
push
inc
test
inc
and
test
mov
pop
mov
out
nop
ljmp
bound
push
dec
sbb
lock
mov
es
xor
shll
and
or
mov
cmpsl
mov
out
xor
and
into
aaa
cmpsb
in
mov
iret
xor
sbb
pop
adc
pop
pop
sti
sbb
aaa
fmuls
aaa
dec
pop
jecxz
cld
xor
testl
in
jge
mov
pop
pushf
fmul
lret
addr16
outsl
in
jle
mov
sbb
xchg
scas
in
out
mov
fdivr
push
pop
or
out
add
rclb
or
test
add
mov
mov
and
cmp
mov
sti
popa
pusha
adc
sub
xchg
inc
pop
jecxz
ret
cmp
push
adc
push
and
inc
call
adc
mov
dec
xchg
movsl
dec
and
cmp
out
cmp
dec
and
inc
push
js
fists
out
aaa
jmp
testl
lcall
sub
inc
push
enter
cli
cmp
stc
pop
arpl
jnp
in
inc
stos
mov
dec
or
imul
mov
inc
pop
pop
xor
xchg
xor
fsubl
js
gs
outsb
xor
or
add
jae
js
stc
dec
shr
mov
pop
sub
outsl
testl
and
mov
inc
pop
sub
and
pop
loopne
cmc
movsl
outsl
pop
jae
mov
push
lcall
push
jbe
xor
mov
add
movsl
cwtl
cmpsb
mov
sbb
insl
xor
mov
fsub
call
add
gs
out
adc
mov
add
push
dec
ret
push
sbb
inc
lahf
and
jg
push
es
and
int
sub
jo
jbe
mov
out
xchg
jle
jmp
push
daa
scas
sbb
out
cmp
in
popa
cmpsl
test
or
psraw
and
mov
dec
cmp
iret
int3
xchg
add
les
adc
mov
jecxz
jns
and
stc
pop
daa
pushfw
loope
fstpl
stc
nop
push
xchg
lahf
arpl
pop
sbb
cltd
push
js
pop
lea
add
jg
inc
jecxz
cmp
pop
jns
rcrl
pop
pop
adc
scas
arpl
outsl
nop
cmpsl
adc
mov
mov
jp
test
cwtl
cmp
mov
in
or
out
fimull
mov
pop
pop
daa
fnstenv
add
stos
pop
das
mov
add
aas
and
mov
test
outsl
pop
rcrb
pop
xor
or
cmpb
jecxz
and
dec
addr16
sarl
hlt
xchg
pop
je
mov
gs
xchg
and
inc
cli
hlt
inc
loop
add
xchg
dec
adc
cs
repz
adc
adc
mov
fnsetpm(287
cmp
xchg
in
loope
mov
fldenv
mov
dec
in
or
outsb
jmp
flds
pushf
mov
lret
cld
es
loope
es
pop
and
cmc
int
mov
clc
call
mov
es
in
mov
loop
stos
cmpsb
xor
jg
insb
push
lea
sub
decl
mov
sbb
cltd
pop
pop
fwait
sbb
cli
outsl
out
mov
dec
sub
cld
ds
pop
scas
call
fidivl
xchg
cmp
out
imul
add
mov
mov
mov
pop
pop
out
imul
or
shrb
pop
ror
loope
idivl
push
add
inc
fistpll
push
mov
sbb
leave
inc
sbb
jge
in
lahf
mov
shlb
lock
pop
xchg
rcr
ret
out
movsb
lods
or
shr
adc
out
xor
lahf
or
hlt
stc
xor
or
jb
sti
fisubrl
mov
lds
xor
adc
pop
sbb
fwait
pop
and
std
inc
arpl
icebp
xchg
push
pusha
lds
das
por
mov
lea
lock
sub
stos
arpl
cmp
cmpsl
push
pusha
and
push
adc
cli
push
aaa
push
loopne
sub
inc
fs
mov
movsl
je
mov
addr16
rcrl
xor
cli
adc
or
sbb
jo
inc
in
dec
fmull
orl
fsubrl
fwait
bound
inc
cli
xchg
aaa
and
ljmp
cmp
cmp
fsubl
cmpsl
fs
mov
fwait
inc
mov
clc
notl
mov
das
rcrb
cs
and
aad
das
sbb
bound
movsl
or
movsb
roll
out
fsub
cmp
clc
sub
push
dec
jae
dec
cld
push
test
mov
jns
dec
imul
or
outsl
mov
dec
inc
fs
and
lret
sbb
icebp
adc
cltd
and
arpl
mov
mov
mov
jns
sub
mov
fmull
mov
push
or
xchg
scas
rorb
mov
mov
or
sbb
cli
ja
setb
cli
std
cmp
test
cltd
add
jg
aam
and
push
std
add
sbb
loop
aad
hlt
adc
sbb
stos
ret
or
cmp
jnp
add
movups
xchg
and
loopne
adc
int3
xor
into
jl
fstpt
aaa
sti
mov
add
pusha
fcoms
pop
ret
fldenv
dec
std
scas
cmp
xchg
lock
adc
push
clc
lret
add
cmp
cmp
push
negl
jge
pop
push
call
sbb
jmp
fiaddl
ret
fsub
pop
imul
pop
sbb
sbb
testl
fldenv
idivb
push
cmp
pop
int
mov
pop
dec
fsubl
sub
shr
pop
inc
ror
sbb
pop
pusha
sub
mov
int
xchg
pop
lock
icebp
rcll
fsubs
mov
add
and
cmp
bound
lcall
inc
sahf
xchg
inc
cmp
les
dec
and
and
sub
negl
into
movsl
pop
mov
arpl
mov
stos
sbb
mov
pop
pop
xchg
outsl
cmp
stc
gs
std
or
cmp
sbb
jg
stc
sub
ja
push
cmp
push
cmp
add
sti
enter
pop
add
pop
loopne
add
es
call
cmp
sub
push
cmp
xor
jnp
mov
neg
popa
movsb
and
out
xor
push
sub
pop
sub
push
mov
cmp
les
pop
in
mov
jp
into
rcr
inc
rcrb
sbb
mov
jge
insb
loop
and
sbb
or
lock
mov
fmul
ucomiss
loopne
add
test
add
sub
lcall
add
sub
shl
in
xchg
add
sub
ds
or
int3
popf
mov
mov
xlat
mov
push
bound
int3
add
fwait
mov
cmp
xchg
outsb
shll
sbb
addr16
cmp
xchg
in
pop
clc
fs
pushf
clc
mov
mov
and
lea
das
or
pop
test
cmp
sbb
scas
dec
insb
jbe
adc
out
push
jmp
or
mov
sub
insb
mov
pop
loope
dec
outsl
shl
and
mov
xor
pop
pop
cmpb
add
in
movsb
and
jo
mov
arpl
add
mov
jne
pop
mov
cli
pop
ja
cmp
cmp
sbb
outsl
cmp
lcall
adc
add
fstps
or
add
jmp
loopne
cmp
mov
xchg
es
push
ss
jl
daa
mov
and
and
cmp
fwait
fwait
jge
cmp
fs
sub
sub
ja
mov
test
cli
enter
into
fimuls
loopne
insl
pop
lcall
imul
data16
mov
cmp
mov
cmp
or
out
and
movsl
mov
hlt
das
and
cli
mov
movsb
nop
sbb
sahf
pusha
inc
lahf
mov
mov
xchg
and
mov
cmp
je
add
pop
jae
sub
hlt
int3
mov
and
loope
outsl
xor
jne
mov
imul
push
insb
sti
push
mov
cmpsb
xchg
icebp
mov
or
lods
or
sahf
push
jge
jmp
adc
fldenv
dec
push
stos
sbb
out
in
push
int
mov
daa
movb
jne
sub
mov
mov
cli
xchg
sub
sti
sbb
call
scas
pop
mov
jg
fs
pop
inc
cmp
jecxz
push
cmp
mov
xor
jecxz
imul
movb
out
mov
iret
cs
xchg
xor
xchg
testl
leave
push
inc
push
clc
aad
iret
pop
inc
insl
xor
fnstsw
adc
add
xchg
das
and
push
add
roll
sub
mov
cwtl
push
aas
and
xchg
push
bound
xchg
push
jmp
fistpl
pop
pop
pop
jmp
out
cmp
sub
fstpt
adc
gs
int3
push
jle
arpl
shlb
adc
lock
int3
push
loopne
scas
jb
jb
mov
lock
ficompl
pop
xchg
mov
pop
xchg
fsts
push
int3
jg
rcrl
push
sub
mov
shr
jp
mov
leave
adc
aad
fisttpll
push
loopne
movsb
sbb
loope
mov
add
clc
sbb
int3
push
push
rcr
ds
mov
testl
adc
xchg
test
inc
fsts
xchg
pextrw
aaa
movsl
dec
jnp
pop
daa
outsb
sbb
icebp
push
mov
sub
icebp
lcall
and
int3
pop
std
out
scas
lock
outsb
fldenv
stc
cmc
jns
pop
cmp
adc
xchg
pop
adc
popa
mov
inc
movl
repz
shl
xchg
clc
clc
xor
scas
int3
loop
gs
cmp
sub
enter
xchg
mov
addb
ljmp
dec
mov
push
mov
pop
adc
xchg
loop
push
and
inc
pushf
aas
shrb
dec
divl
pop
lock
inc
sbb
jns
ds
test
push
je
arpl
jge
add
and
push
gs
sbb
jge
in
sbb
pop
inc
dec
iret
pop
mov
idivb
or
andl
push
xor
aaa
daa
cmpsl
push
pop
or
shl
lds
mov
pop
imul
inc
jmp
sub
push
or
mov
in
lahf
and
xor
lock
inc
pop
ret
xchg
sbb
ljmp
aas
inc
out
fs
pop
mov
fs
sub
mov
adc
addr16
loope
andl
pop
cmp
dec
fcmovnu
sbb
mov
out
push
bound
jae
in
dec
loopne
add
push
cld
mov
mov
jl
loope
out
pop
mov
cltd
mov
aam
cmp
xor
outsl
inc
mov
add
push
add
mov
std
loopne
inc
aas
les
outsl
test
addr16
or
mov
and
ja
testl
into
ljmp
aas
pop
inc
neg
out
dec
enter
jne
pop
push
push
mov
or
leave
add
and
mov
inc
and
sbb
aaa
daa
mov
fcomps
ljmp
inc
insb
push
jle
jno
add
add
aad
xor
push
hlt
pop
out
addr16
flds
gs
loopne
mov
into
insb
sbb
pop
lret
pop
pop
cs
push
fisttpll
in
push
jmp
outsl
aas
xchg
aaa
or
dec
fnsave
sub
xor
repnz
fisttpll
mov
out
popa
test
sbb
mov
and
inc
mov
jecxz
dec
pop
sub
cmpsb
outsl
pop
sub
rcr
mov
in
adc
jbe
popa
call
push
sbb
and
sbb
out
xor
in
scas
subl
push
or
cli
inc
ljmp
sub
mov
or
movsb
call
or
lock
ficompl
sti
arpl
jnp
pop
jle
cmp
jbe
lret
inc
call
int3
lret
popa
push
dec
std
mov
in
ljmp
mov
dec
xchg
rdtsc
jg
mov
inc
jo
call
andb
sub
arpl
xor
add
fucomip
dec
test
lret
pop
data16
repz
insb
sbb
inc
lock
xchg
bound
add
decl
dec
test
imul
push
adc
cmp
cmp
lcall
gs
fisubl
and
repnz
imul
inc
mov
enter
aas
mov
dec
in
push
ret
pop
lods
and
sbb
pop
mov
and
add
out
xchg
stc
pop
mov
clc
sar
fsub
sbb
add
lret
cmp
or
pop
pop
adc
inc
sbb
inc
aas
cmp
push
daa
mov
xchg
pop
pop
pop
sbb
flds
jmp
pop
jge
jle
jecxz
ljmp
inc
inc
jnp
mov
pop
sub
sbb
test
push
imull
sbb
add
dec
xchg
adc
pop
sbb
xchg
inc
out
aaa
jnp
push
push
dec
lea
adc
rol
push
cld
cltd
arpl
imul
push
in
dec
jge
insb
leave
jnp
and
imul
in
mov
pop
inc
cli
push
jmp
sbb
xchg
sbb
pop
cmpb
add
xchg
jns
sub
stos
idiv
dec
aaa
repz
arpl
in
jns
aaa
push
stc
leave
push
push
pop
into
mov
cmp
sub
mov
cmp
inc
ljmp
lock
sahf
int
addr16
jmp
mov
xor
ret
aaa
mov
lock
addr16
push
insb
shll
lahf
adc
sbb
int3
outsl
jmp
adc
mov
in
test
sahf
addr16
js
cwtl
addr16
cmp
cwtl
jns
sub
filds
cli
xchg
sub
addr16
inc
outsb
movsb
outsl
fisubrl
jo
dec
les
lock
fidivrs
jo
sbb
call
inc
aaa
loope
push
out
push
dec
ficoms
data16
outsl
sub
pop
mov
shl
cli
pop
pop
aaa
xchg
push
out
lcall
repz
or
and
cmp
fldt
or
cltd
mov
sub
out
aam
xlat
pop
sub
in
test
sub
pop
pop
dec
out
sub
cmc
push
nopl
out
mov
aaa
rclb
cmpsb
in
outsb
fxch
sbb
out
addr16
lds
out
mov
out
or
push
add
lret
lods
or
push
js
jo
mov
pop
bound
test
push
ljmp
pop
or
sahf
repz
js
dec
mov
cmpsb
mov
xchg
push
xchg
inc
dec
mov
mov
sbb
loopne
imul
pop
daa
and
push
rcll
push
push
cmpsl
movsl
push
outsl
cmp
push
mov
sub
test
ret
mov
fsubrs
call
incb
push
jae
mov
aas
sbb
mov
inc
inc
sbb
sbb
sbb
pop
dec
arpl
add
enter
dec
out
jg
in
and
pop
popf
jmp
pusha
xlat
cwtl
pop
mov
adc
cmp
mov
adc
push
dec
xchg
pusha
in
sub
imull
flds
mov
pop
out
fistps
fs
stos
push
clc
gs
imul
inc
mov
push
sub
xchg
cltd
lods
xor
repnz
mov
ja
push
clc
xchg
xchg
andl
mov
xchg
mov
cmp
and
js
stc
icebp
dec
sub
xor
pop
cmp
add
imul
pop
sbb
inc
das
inc
jae
push
cli
out
imull
flds
into
fstp
jge
fiadds
push
mov
outsl
add
mov
lock
cmp
adc
aaa
add
xor
fcoms
scas
sbb
leave
imul
mov
cmp
stc
shrb
and
and
push
mov
nop
std
xchg
aas
sub
xchg
inc
and
adc
push
test
test
mov
test
aas
inc
xchg
lea
scas
cmpsl
dec
stc
jno
neg
in
sub
std
clc
pop
movsb
jbe
xchg
cli
ja
aam
mov
repnz
mov
lret
add
jg
xor
ret
inc
and
repz
xchg
test
inc
insl
and
scas
bswap
mov
jmp
in
sbb
orb
or
inc
mov
xlat
jnp
push
stos
sbb
dec
mov
out
in
push
movsl
and
pop
jne
xor
cmp
sub
dec
mov
push
lods
and
sub
inc
pop
cs
pop
mov
filds
aaa
movsb
jne
notl
mov
es
testb
mov
pop
imul
and
data16
xchg
icebp
jbe
xchg
idiv
lahf
cs
lock
lea
lock
sbb
fbld
arpl
ss
pop
ret
incl
cld
jo
sbb
stos
loopne
pop
and
add
and
pop
das
int3
mov
and
jnp
mov
or
jmp
jl
das
jnp
adc
pusha
cmp
pop
sarl
or
jnp
add
jo
xchg
decb
push
mov
pop
fsubrl
jl
mov
lret
mov
out
fisubs
jne
jb
sub
add
scas
mov
mov
mov
jo
pop
enter
or
aas
mov
jge
mov
in
add
and
sub
sahf
and
mov
sar
push
gs
lods
mov
js
dec
pop
cmp
scas
fdivl
jb
push
pop
in
std
call
sub
out
xor
out
hlt
xor
xchg
cmp
sbb
xchg
xchg
or
inc
stos
jnp
and
cli
push
mov
mov
cmc
aaa
jge
popa
add
jmp
lahf
ss
mov
sub
inc
scas
sahf
call
inc
dec
or
clc
xchg
adc
xor
sub
loopne
popa
fcomip
in
stc
dec
pop
stos
adc
call
imul
adc
pop
cwtl
sub
sub
pop
aas
or
insl
cmp
js
push
rclb
rclb
pop
lds
mov
outsl
inc
lock
add
push
scas
xchg
repnz
ds
ret
sbb
lock
mov
sub
imul
cmp
enter
ret
sbb
adc
out
sbb
ja
sbbb
push
insl
pop
pop
sbb
or
cmpsb
push
lock
repz
or
outsl
push
testb
cmp
ljmp
xchg
push
cli
cmp
pop
xorl
in
cmp
adc
aas
and
daa
dec
test
repz
pop
dec
std
lcall
jo
mov
inc
jne
inc
jmp
cwtl
add
sbb
add
push
outsl
insb
jne
xor
iret
pop
adc
scas
cmp
cmp
nop
inc
adc
lea
lea
mov
pop
outsl
sbb
mov
mov
pmulhw
lods
sub
jne
sbb
sti
movzwl
imul
jb
outsl
push
sti
mov
test
cmpsl
fadds
clc
pop
cmp
sbb
mov
push
inc
lds
jne
ficoml
xchg
jae
pushf
scas
jne
call
jecxz
fsubrs
jnp
pop
jne
in
push
xchg
leave
xor
cmc
xchg
pop
jne
jg
sbb
mov
bound
add
jle
mov
mov
mov
lcall
js
inc
imul
sbb
shll
movsb
fisubl
loop
pop
adc
xor
push
sbb
enter
xchg
arpl
sahf
in
fidivrs
sub
lret
mov
add
sbb
leave
sbb
cmpsb
push
push
popa
and
sbb
and
repz
add
repz
and
pop
movsl
mov
jmp
out
cmc
pop
fbstp
dec
divb
scas
fdivs
ds
mov
pop
subb
sbb
cmp
out
inc
orb
add
jae
scas
xor
out
and
filds
jno
arpl
fbstp
fwait
in
mov
adc
hlt
xor
call
jp
push
jle
mov
adc
lds
mov
mov
adc
in
mov
popf
mov
mov
int
fsubs
pop
in
negl
jnp
jecxz
clc
movsl
ret
cmp
inc
mov
mov
gs
push
outsb
cmp
mov
xchg
es
gs
rclb
lret
lahf
mov
jbe
or
out
push
divb
mov
sub
push
xchg
leave
sbb
fsubl
xorb
test
or
cltd
divb
xchg
sbb
cmpsb
cli
ret
dec
cmp
add
jp
jne
mov
xchg
in
stos
pop
lock
sub
and
orl
ljmp
cmpsb
jne
sub
std
sarb
jmp
sbb
pop
mov
clc
push
mov
ljmp
call
add
scas
mov
scas
cld
push
scas
pop
sahf
call
sar
mov
test
lahf
dec
dec
jb
inc
jg
pop
jg
or
adc
xchg
shrb
xchg
jle
scas
cmp
imul
push
or
push
sub
xor
push
inc
mov
jb
movsb
cmp
mov
or
and
xor
mov
repnz
cmp
pop
push
adc
xchg
out
push
mov
fcmovne
es
cld
scas
ficomps
out
fsubrs
out
pop
pop
adc
dec
cld
fmull
sub
cmc
pop
fwait
or
mov
pmaxub
jne
int3
or
mov
sbb
clc
divl
cmpsb
cmpsb
fbld
pop
mov
push
jmp
loop
es
mov
mov
addb
add
stc
outsb
push
lcall
fsubrs
out
dec
data16
cmp
and
add
or
lods
rorb
ret
mov
clc
inc
rcr
fcomps
push
jns
in
cmp
dec
jmp
xor
data16
scas
adc
jecxz
sbb
repnz
jg
xchg
shll
arpl
lock
aas
push
mov
adc
mov
lahf
shl
jg
mov
cmpsl
push
je
icebp
lea
ljmp
cwtl
shrb
dec
jl
scas
add
pop
sbb
cmp
and
notl
shrb
insl
add
in
cltd
add
xor
or
mov
das
xchg
jmp
xchg
shr
cmp
call
lahf
mov
inc
cltd
mov
cmp
add
rcrb
and
pop
adc
insb
orb
jg
fisubrs
lock
in
xchg
add
jbe
fs
and
into
test
dec
cld
push
push
or
stc
jo
sbbl
repnz
sarl
pop
dec
fsubrs
or
sub
sub
pop
and
lret
cmp
popl
xchg
outsl
shr
in
xchg
test
cs
xchg
sub
negl
scas
mov
cs
rolb
fsubrs
or
mov
cmp
jmp
pusha
loopne
aam
jmpw
cmpsl
dec
fucomi
mov
cmp
cld
out
xchg
pop
outsl
out
lahf
jge
jle
jae
push
add
loopne
xchg
push
jae
mov
mov
xchg
imul
divl
pop
sbb
std
fcomps
mov
xor
lret
push
test
mov
in
iret
fs
push
push
movsl
dec
aaa
ljmp
pop
sub
push
sbb
mov
test
xor
mov
push
andl
xorb
out
int
push
fcoml
imulb
pop
mov
jo
or
cmpsl
push
inc
jmp
push
or
xor
add
pop
jnp
loop
and
cltd
dec
dec
cmp
jmp
imul
or
mov
push
cld
xor
sbb
lret
dec
push
mov
sbb
xchg
clc
jg
ljmp
or
and
test
or
pop
jle
jne
mov
dec
lret
xchg
loope
sbb
insl
jae
pop
sbb
mov
dec
jne
scas
dec
in
mov
mov
pop
roll
and
or
jl
pop
or
enter
orl
pop
push
in
jno
adc
or
gs
mov
jae
mov
adc
gs
int3
lods
mov
sub
and
fwait
pop
inc
inc
out
xchg
push
shl
movsb
push
jmp
dec
or
fs
addl
out
jmp
ljmp
mov
dec
cmpsl
lods
cmp
sbb
in
enter
cs
stos
push
das
clc
ret
xchg
fwait
shll
test
jmp
call
xchg
dec
jns
or
lcall
xchg
and
sahf
sub
mov
cmp
mov
jmp
cmp
push
or
add
sbb
cmpsb
lahf
sbbb
mov
test
ja
jge
pop
sub
mov
pop
push
daa
sub
cmp
push
call
jge
jge
nop
sbbl
into
sub
xor
ss
jb
gs
jne
add
add
xchg
inc
mov
and
inc
incb
xor
push
add
xchg
push
fldcw
cmp
dec
shlb
sbb
cmpsl
pop
xor
mov
loope
mov
jge
sti
xchg
adcl
mov
in
pop
in
fidivl
mov
xor
sarl
lcall
mov
pop
inc
cmp
mov
cwtl
push
mov
call
push
sbb
mov
stos
mov
out
fdivrs
cmc
mov
in
xchg
out
cwtl
stc
push
xchg
xchg
cmpsb
mov
mov
pop
and
and
movsl
fucomp
scas
movlpd
ljmp
out
dec
cmp
pushf
fsubs
mov
int
mov
sbb
adc
jae
stos
in
test
xor
loop
and
push
fidivl
sbb
jg
test
mov
jns
cmp
lds
jae
or
lret
jbe
cltd
xor
jge
aad
xchg
ror
and
stc
ja
call
lret
ret
imull
and
movl
pop
push
fstpt
fdivl
push
fcmovnb
mov
mov
loope
mov
jp,pn
in
inc
pop
fxch
pop
repz
imul
mov
cld
push
loopne
imul
addr16
hlt
fsubrp
imul
clc
lret
es
fwait
mov
jne
sbb
dec
jmp
mov
xchg
jg
pop
sbb
sbb
xor
push
and
aaa
fisttps
xchg
push
jg
fnstcw
xor
fnstcw
not
repz
dec
insb
aas
rcr
imul
pop
out
ss
hlt
inc
pop
cmp
or
mov
sti
neg
loop
mov
movsl
or
xchg
inc
int
pop
push
fcmovnu
or
loope
shll
cmp
ficomps
in
mov
andl
push
jge
insb
jg
xchg
fstpl
xchg
stos
out
test
mov
cmp
test
push
mov
sbb
and
call
or
or
mov
adc
push
in
scas
pop
mov
jns
push
fistpl
popa
adc
mov
xchg
inc
lcall
fisttps
and
ss
jne
scas
jecxz
push
sub
cmp
mov
cwtl
dec
lock
pop
mov
mov
pop
or
lds
cwtl
sti
pop
mov
ret
std
or
cmp
mov
lods
das
pop
push
push
jns,pn
sbb
mov
loopne
stos
pop
and
fadd
notb
mov
and
out
cs
stc
dec
fisttpll
add
ja
mov
xchg
lds
xchg
xchg
dec
xchg
dec
loopne
loopne
xchg
add
mov
sbb
ljmp
lcall
cmp
xchg
mov
in
push
cltd
es
pop
fildl
daa
pandn
and
dec
lcall
fcompl
test
fwait
cmp
mov
adc
xchg
add
mov
cmp
clc
xor
lea
repz
fldl2t
mov
mov
mul
cmpsb
and
imul
dec
cs
fucompp
jg
pop
aad
test
popa
imul
jmp
jmp
xor
cmp
jns
jo
push
jb
xor
loop
sbb
or
jp
pop
xorb
sbb
shll
jnp
fcompl
clc
xchg
push
test
pusha
cs
fcomps
mov
lods
mov
into
xchg
into
jmp
sub
lods
fidivrl
lock
fs
outsb
xchg
ret
push
push
addr16
and
mov
shll
xor
mov
push
mov
jecxz
mov
das
andw
gs
imul
fstps
jnp
inc
mov
inc
sub
cmp
out
in
mov
inc
ja
sbb
out
push
mov
sbb
mov
insb
sub
out
fldenv
xchg
cs
push
pop
cmp
cwtl
loop
push
outsb
xor
das
sub
pop
fstp
push
jo
jle
jle
fs
push
mov
shll
pop
leave
cs
adc
dec
shl
sahf
negl
ljmp
ret
mov
or
xchg
and
shll
adc
je
leave
mulb
int
mov
pop
mov
sbb
andb
push
inc
std
mov
lcall
test
push
ss
fcmovnbe
bswap
imull
cmp
inc
sub
sub
loope
and
dec
cmp
mov
mov
jnp
or
sahf
fsubrl
mov
loop
mov
rclb
imulb
or
out
inc
test
jp
mov
test
or
push
ss
mov
call
push
cli
fistpl
loope
outsl
mov
cmp
addr16
dec
jp
mov
and
and
xchg
push
pop
sub
insb
mov
sub
mov
pushf
push
and
ja
mov
xchg
test
stc
sbb
das
jae
sbb
xor
sbb
popa
or
mov
inc
mov
mov
int
insl
fwait
sbb
loop
movsb
mov
iret
pop
sub
mov
dec
insl
sbb
clc
pop
jno
push
adc
sbb
mov
dec
pop
push
sbb
test
or
stc
fisubrs
jno
fsubs
cs
sbb
cmp
add
jg
cs
cmp
pusha
push
and
mov
xchg
sbb
in
imul
push
inc
cmp
hlt
sub
add
pop
xor
xchg
fstl
sahf
nop
iret
xor
mov
push
dec
pop
xor
cmp
mov
fistpl
and
fnstenv
xlat
sbb
add
pop
sarl
stc
pop
mov
pop
rorl
test
scas
fwait
push
shll
leave
cmp
gs
ret
mov
daa
loope
ds
dec
mov
iret
leave
xchg
je
faddl
and
fldenv
pop
mov
and
xchg
jns
push
or
and
or
mov
loope
jp
jecxz
dec
or
leave
arpl
in
outsl
lret
sti
rcrb
call
addr16
xchg
lcall
scas
mov
cli
jo
jns
push
jne
clc
mov
sub
fisubl
sbb
or
sti
cmpsb
push
jmp
add
adc
mov
and
dec
out
mov
pop
rorb
jmp
mov
and
es
dec
adc
into
inc
or
push
push
cltd
sbb
fs
outsl
xor
imul
pop
icebp
jb
js
xchg
mov
movups
xchg
inc
or
xchg
ja
fnstcw
or
cmp
clc
cmp
shlb
lods
add
jl
pop
xchg
xchg
clc
popa
dec
sbb
mov
and
cld
and
bound
inc
gs
jmp
mov
sbb
call
mov
inc
jne
mov
addr16
cmp
jne
xor
cmp
fmulp
popa
sub
pop
mov
mov
jg
push
dec
push
jne
ret
cs
jae
daa
push
sbb
adc
fiaddl
loopne
mov
imul
and
sub
sti
and
psubsw
je
push
sarl
mov
mov
into
call
imul
lds
cmp
dec
gs
aaa
mov
jne
push
push
or
loop
rorb
fisttps
arpl
es
mov
xchg
cld
pop
movsb
stc
xchg
push
inc
sub
or
fld
cmpsl
mov
and
xchg
xchg
xor
mov
scas
lcall
sbb
mov
add
das
dec
pushf
fcompl
push
mov
pop
mov
insb
mov
loop
fcoms
popf
clc
xchg
xchg
mov
dec
ret
xchg
mov
lcall
sub
pusha
cmp
fsubrp
sbb
in
gs
bound
mov
inc
fstpt
xchg
or
das
mov
or
mov
stc
icebp
fs
in
lret
cmp
mov
xchg
cmovae
repz
add
lea
mov
pop
mov
xchg
jnp
clc
cmpsb
mov
xor
mov
dec
rcll
jp
mov
jmp
sbb
insl
pop
imul
pop
stos
stc
mov
xchg
pop
popf
ja
fsubrl
adc
pop
jb
clc
mov
cmpsb
pop
jne
adc
mov
les
in
dec
fstps
xchg
jbe
ljmp
pop
int3
push
jbe
rep
or
cmpb
sbb
and
imul
enter
ss
and
aam
push
call
aam
pop
sub
add
addr16
push
push
sbb
or
dec
ds
iret
jl
aad
push
imul
inc
pop
shrb
negl
xchg
in
push
movaps
push
inc
shrb
and
xchg
jno
add
dec
outsb
int3
mov
mov
scas
dec
pop
push
in
out
mov
cmp
cwtl
adc
icebp
jmp
pop
mov
sub
and
dec
test
test
ret
mov
scas
cli
rorb
stos
or
mov
mov
bound
sub
sub
dec
and
sub
call
test
inc
repnz
pop
icebp
mov
jbe
push
inc
cmpsb
pop
jg
or
xchg
xchg
outsb
mov
inc
add
arpl
inc
sahf
mov
sbb
clc
xchg
dec
or
aaa
inc
lcall
inc
js
inc
aaa
inc
dec
or
test
out
xchg
and
call
out
das
sahf
mov
push
cmpsl
adcb
pop
sbb
adcb
push
aaa
stc
and
pop
sbb
push
add
adc
jne
idivb
inc
or
add
call
mov
mov
test
arpl
cmp
or
popf
cli
adc
insb
mov
mov
pop
setp
jmp
jecxz
gs
sbb
out
sbb
outsb
aad
jge
int
out
and
inc
ret
lods
lods
dec
inc
frstpm(287
xor
outsl
jmp
sbb
pop
cs
dec
mov
es
loopne
fisttps
std
fisubrl
or
flds
aaa
cli
inc
mov
xchg
imul
cmc
test
mov
xchg
aas
sbb
and
stc
xchg
lcall
push
sbb
xchg
jecxz
mov
lret
int3
sahf
gs
cmp
and
cwtl
mov
push
cmp
ficomps
in
mov
dec
in
test
std
pushf
and
aas
sbb
pop
mov
mov
xchg
xlat
mov
push
push
std
pop
cld
jo
or
in
push
add
aam
add
lret
mov
sbb
sbbl
jge
shr
enter
divb
or
jl
jne
adc
shufps
dec
iret
dec
sbb
fistps
pop
ds
push
mov
imul
shl
daa
fadds
aaa
sub
mov
jg
sub
inc
lds
xor
movsl
movsl
xor
mov
xchg
mov
addr16
repz
or
int3
add
push
stos
fcompl
les
pop
gs
or
fsubrl
sbb
push
cmpsb
in
add
inc
push
xor
add
call
cmp
cmp
test
pop
test
and
cmp
xchg
dec
mov
push
xchg
add
push
shll
ja
xchg
jp
icebp
rcrl
inc
insb
out
jne
mov
imul
and
clc
in
jae
pop
repz
scas
add
sarl
cli
mov
dec
or
mov
enter
clc
into
repz
in
lea
ss
jae
jmp
cmpsl
push
or
scas
and
jnp
cmp
adc
jnp
cmp
jp
mov
or
mov
push
jns
add
iret
dec
cmp
pop
mov
leave
sahf
and
jb
jne
hlt
scas
mov
les
and
xchg
addr16
push
ljmp
cmpsb
fidivl
xchg
mov
dec
xor
inc
xchg
inc
mov
std
and
pop
enter
aaa
mov
push
sbb
push
call
sub
mov
add
mov
sahf
mov
jne
ret
scas
in
jp
cli
xchg
mov
shrb
mov
shlb
push
or
sbb
insl
pop
mov
das
mulb
push
js
mov
callw
stc
cltd
xor
fsubrl
lds
jp
jl
lahf
or
hlt
pop
sub
sbb
cmp
sub
in
imul
stos
jl
mov
frstor
inc
mov
mov
xor
scas
jne
repz
pop
adc
sub
pop
sti
pcmpgtw
in
and
or
fucom
fcom
shrl
popl
es
mov
inc
iret
jne
inc
test
push
out
jp
push
fidivrl
dec
sahf
push
pop
movsl
out
sub
sub
call
lret
sbb
push
or
pop
imul
add
movsl
out
or
xlat
sbb
push
imul
cltd
mov
mov
imul
es
inc
cmpsb
and
clc
pop
jbe
mov
fs
mov
push
mov
pop
imul
sbb
stc
sti
ret
fdivr
popa
cmpsb
cmp
xor
setb
sub
mov
push
mov
das
mov
pusha
sub
mov
push
mov
and
sbb
aaa
push
adc
xchg
xchg
or
aas
test
insb
xchg
in
xor
in
test
out
xchg
nop
and
arpl
fimuls
es
xchg
loopne
sub
ficompl
xchg
rorb
jg
xchg
push
in
movlps
pop
jne
cmp
xchg
mov
jecxz
pop
nop
jmp
rorb
push
or
push
sbb
pop
add
inc
pop
in
lret
imul
fbld
xchg
lock
pop
or
ja
jge
jns
fdivl
jl
or
pop
mov
sub
cmc
mov
add
clc
testb
js
orl
inc
pop
cmp
add
fdivs
xlat
xchg
rorl
xchg
in
mov
xchg
cmp
mov
mov
or
push
sbb
outsl
pop
jp
push
sub
add
inc
repz
rclb
add
pop
imul
cmc
icebp
sbb
or
jg
lret
jae
pop
pusha
sub
push
ja
sub
outsl
popa
push
mov
scas
mov
jne
push
sub
mov
das
arpl
sbb
cmpsl
mov
sbb
mov
test
cmp
cmp
pop
cmp
gs
xchg
jmp
test
cmp
imul
mov
fdivl
xor
pop
leave
add
pop
sbb
fbstp
inc
fisubrs
sarb
mov
aaa
push
pop
push
jae
push
sbb
fwait
push
in
mov
in
cmp
pop
ja
sbb
mov
leavew
shlb
sbb
jne
adc
xchg
pop
cmp
push
sub
int3
movsl
cmc
sub
jmp
push
jge
ja
jne
cmpsb
sub
xchg
sub
imul
fnstcw
fisttpl
pop
cld
pop
out
iret
sbb
loop
mov
mov
clc
and
pop
fisubs
cs
jae
cmpsb
jl
sub
das
aaa
cltd
sub
gs
popa
jmp
sub
push
and
mov
mov
push
xchg
inc
xchg
adc
pop
mov
jecxz
inc
in
xchg
jo
daa
lcall
mov
out
repnz
addr16
pop
mov
ret
pusha
pop
in
or
pop
test
or
outsl
cmp
rcr
insl
inc
push
inc
fnsave
pop
aas
jmp
mov
fwait
cli
fwait
outsb
imul
sti
mov
mov
mov
pop
mov
fs
outsl
mov
sub
mov
xorb
mov
xchg
fidivrl
and
jge
pop
inc
sub
gs
sub
xchg
jne
xor
push
xchg
xchg
push
sbb
add
mov
mov
dec
cs
dec
fmuls
out
dec
stc
faddl
divl
dec
xor
xchg
adc
xchg
sahf
push
dec
lahf
mov
outsb
dec
cmp
and
iret
sbb
lahf
pop
push
pop
jns
movsb
cmpsb
fsubl
int3
in
add
dec
divb
fbld
push
push
and
push
pop
sarl
mov
fsts
hlt
lods
inc
fadds
ja
scas
inc
adc
imul
add
jbe
sbb
imul
jne
mov
jb
daa
lods
scas
adc
imul
jae
mov
push
jg
push
sarb
ja
xchg
push
cltd
push
push
adcb
add
das
add
daa
jb
pop
out
out
testl
bound
insl
arpl
fcomi
gs
fdivrl
sbb
dec
xor
fs
pop
stos
add
test
mov
jb
xor
hlt
jecxz
mov
ja
sbb
jnp
pop
jmp
mov
mov
scas
das
sbb
sbb
push
ja
and
pop
xor
and
pop
iret
addr16
clc
pop
sbb
push
imul
adc
dec
or
cwtl
call
jg
pop
jg
lods
adc
popa
push
sub
push
or
mov
rclb
push
scas
sarl
xchg
ja
mov
sarl
mov
cmpsl
xor
cmpsl
cwtl
repz
aam
in
dec
scas
ja
inc
pop
test
shr
and
pop
mov
cmpsl
lock
in
push
es
das
out
out
pusha
sbb
pushf
nop
sub
mov
jnp
orb
sub
xor
repz
leave
and
adc
fxch
add
in
and
ss
das
fsubs
push
pushf
in
mov
add
andl
xor
repz
sub
repz
and
dec
pop
loop
cwtl
adcb
jbe
jo
daa
rcrl
mov
adc
enter
adc
cmp
push
sub
insb
jecxz
mov
or
mov
or
addr16
subb
mov
xchg
fldenv
out
rolb
jmp
push
sbb
outsl
inc
fdivrl
stos
jae
inc
lcall
add
mov
sub
inc
sbb
mov
sbb
into
cwtl
mov
fs
cs
test
cmp
jbe
out
ud1
pop
in
aaa
sahf
mov
or
fwait
sub
insl
mov
sub
xor
jno
pop
ss
mov
mov
bound
nop
push
test
xor
popa
out
addr16
loopne
sub
mov
loop
ds
outsl
ja
cmp
movsb
lea
pop
idivl
jno
stos
daa
xchg
dec
clc
adc
fsubl
das
out
xorb
dec
inc
stc
mov
aam
add
clc
mov
sti
fistl
jge
or
xor
sti
pusha
pop
call
jo
test
jae
xchg
sti
cmc
aam
insb
push
cmc
jae
inc
lods
jbe
mov
cmp
push
popf
lds
mov
dec
int3
jp
or
or
push
repz
arpl
mov
add
sbb
in
repz
pop
mov
adc
or
fsubs
lods
xor
pop
pusha
add
mov
aam
add
xchg
test
cmp
aad
orb
sbb
fdivs
icebp
sbb
insb
in
push
out
inc
fimuls
inc
aam
lahf
std
callw
push
lahf
lret
mov
mov
es
mov
pop
pop
loope
fprem1
fcom
jecxz
out
mov
adcb
loope
push
fadds
add
push
fdivs
in
popa
adc
cmp
out
daa
out
loop
push
mov
js
pop
lret
push
xchg
sbb
mov
push
enter
sbb
int3
pop
mov
fcomps
or
jle
imul
jg
jle
dec
jne
jl
pop
xor
mov
xchg
sub
clc
inc
add
es
jns
adc
pop
mov
jne
shrl
cmp
hlt
fimull
pushf
sbb
pop
aam
std
pop
xor
repz
popa
int
sbb
add
xchg
mov
cwtl
loop
pop
sub
les
mov
stos
jle
push
ja
jecxz
xor
sbb
addr16
stos
sti
lret
es
insb
jmp
jp
jmp
out
lret
cli
inc
cmp
inc
mov
testl
shll
pop
push
sub
mov
push
or
lret
inc
cmp
orl
dec
sbb
cmp
pop
mov
fcomp
cmc
jns
mov
insl
lods
xchg
lods
xor
enter
out
outsl
aas
imul
mov
test
pusha
test
xchg
pop
imul
pop
xor
push
pop
shlb
aas
loop
stos
cmp
sti
lret
test
insl
push
xchg
arpl
pusha
das
fbstp
pop
xor
adc
bound
lret
loopne
cmc
pop
out
insl
dec
rcrl
jbe
mov
jne
fcoms
leave
outsb
push
outsb
jge
aam
jl
cmc
cltd
push
adc
push
mov
pop
xor
mov
das
xor
mov
and
mov
push
or
add
sub
clc
pop
int3
mov
arpl
bound
mov
aas
aaa
adc
rclb
jnp
xchg
enter
in
jge
outsl
inc
mulb
sbb
mov
sarl
sidtl
jns
mov
scas
test
fwait
dec
or
jne
movsb
in
out
mov
arpl
loopne
clc
dec
cld
dec
rep
push
pop
jp
sub
jne
sbb
pop
jmp
js
pop
bound
mov
fdiv
jb
fiaddl
cmp
int3
push
daa
sub
sbb
addr16
cs
xchg
jne
sti
add
out
imulb
xchg
test
pusha
leave
and
add
pop
cli
int3
cmpsb
sbb
sbb
imul
cli
fistl
sbb
ret
fyl2x
cmc
jae
call
mov
orb
xchg
rorb
fisubl
add
cs
mov
pop
xchg
imull
out
jbe
stos
or
mov
dec
xor
cmc
xchg
sbb
add
and
sub
mov
mov
shl
notl
or
mov
mov
dec
scas
test
movsb
add
sbb
sbb
push
mov
adc
mov
xor
mov
mov
out
outsl
jmp
jae
notl
jo
in
je
dec
jge
add
and
fsubl
test
sbb
adc
pop
pop
mov
roll
out
int3
push
sbb
pusha
jb
pusha
cmp
push
xchg
cmc
mov
sti
xchg
fidivrl
inc
aaa
sub
xor
call
decl
ds
mov
popa
xchg
jecxz
and
push
dec
add
sbb
sub
imul
arpl
enter
stc
lds
ja
pop
enter
cs
test
scas
mov
sub
cmpsl
aas
sub
mov
xchg
aaa
jg
pop
sbb
loopne
aas
adc
mov
pushf
ret
push
xchg
fwait
rcl
aam
mov
shll
push
cltd
insb
push
rcrb
cmp
roll
cli
cmp
adc
or
xchg
scas
mov
cld
push
sbb
fwait
cmp
jp
fistpll
sti
xchg
movw
cmpsl
jbe
idivb
das
mov
cs
cmp
cmc
pop
movsl
ficompl
into
cmpsl
mov
sub
jmp
xlat
dec
xchg
jne
test
mov
pop
fistps
push
aaa
mov
dec
push
lock
test
daa
jle
cmp
and
jae
fnstenv
jb
in
idivb
push
fdivrl
jp
in
push
push
addr16
hlt
xchg
sbb
mov
mov
arpl
rolb
insl
aam
dec
popa
cmp
add
enter
ds
adc
jge
faddl
mov
es
push
movb
fs
jmp
insb
dec
jb
mov
stos
mov
sbb
int3
push
add
mov
ds
push
mov
push
mov
idivb
cli
push
fdivr
movsl
sbb
push
push
test
inc
in
int
xor
jl
fsubs
xchg
or
sbb
lcall
add
push
jbe
notl
orl
pop
mov
fs
adc
stos
xchg
imul
in
push
insb
push
push
push
adc
mov
es
mov
in
xchg
sbb
mov
js
xchg
daa
push
pop
mov
pop
fmull
inc
fnstcw
fstpt
repz
add
mov
xchg
int
in
mov
pop
aam
xor
mov
lret
aam
cli
outsl
jl
and
cmovae
mov
ficompl
sub
js
adc
aaa
movsb
cltd
bswap
in
fdiv
leave
jmpw
vmovq
mov
fcomps
push
fcmovu
push
pop
pop
mov
addr16
imul
jns
mov
jb
adc
adc
or
mov
jg
fdivs
pop
out
int3
fistpl
sbb
mov
adc
xchg
fildl
dec
pop
jmp
sahf
dec
mov
outsb
cs
arpl
pop
sub
dec
fists
fdivrl
inc
cmp
xchg
push
fcomi
inc
adc
gs
xchg
push
inc
xor
aam
mov
cs
es
lea
in
insl
test
int3
lahf
repz
or
js
ja
int
ja
inc
lret
lahf
pop
lret
addr16
iret
into
dec
lds
insb
in
jae
mov
subl
and
sbb
outsl
inc
movsb
outsl
add
fdiv
es
push
in
shrl
fstl
cmp
xchg
stos
or
jbe
jns
frstor
dec
add
ficompl
cltd
gs
and
fnstenv
mov
push
testb
mov
cmpsb
xor
push
cmc
dec
ret
inc
fdivl
xor
into
sub
in
dec
clc
mov
push
outsl
rorb
xchg
test
movsl
mov
movsb
mov
push
xor
es
in
xlat
or
push
jnp
jae
mov
inc
out
cs
das
movsl
mov
push
jp
ja
out
fldcw
test
cmpsl
pop
jge
js
and
imul
loop
pop
ss
jecxz
mov
loopne
movsl
add
mov
mov
xchg
popf
pop
fidivl
leave
push
dec
cmpsb
mov
daa
and
pop
in
popf
dec
lahf
push
stos
sbb
dec
or
iret
cltd
mov
int
test
xchg
adc
sbb
je
pop
push
outsl
lcall
sbb
enter
xchg
pop
dec
add
imul
pop
test
sub
pause
into
add
inc
pop
sbb
aad
and
lds
lahf
sub
jg
imul
and
pop
cmp
adc
push
daa
hlt
cmp
push
jo
pop
and
adc
adc
aas
sbb
mov
sahf
mov
movsb
lea
mov
popa
les
fdivl
xchg
pop
shrb
fidivl
sbb
mov
mov
arpl
divb
stc
sub
ficompl
mov
jnp
call
and
sub
and
int
jge
mov
fcomps
mov
inc
ja
xor
pop
xchg
push
add
pop
test
jnp
adc
xlat
mov
pop
repz
cld
ret
in
das
jae
pop
mov
inc
ds
pop
insb
mov
adc
scas
mov
addr16
loope
ds
fdivr
addr16
cmp
sub
cmp
push
stc
add
stc
dec
mov
sub
xchg
mov
xchg
adc
movsl
or
das
xchg
mov
ret
jns
fld1
push
sbb
push
add
fisttpl
sahf
pop
scas
in
outsb
pop
xchg
or
cmp
cmpsl
mov
out
xchg
daa
cmpsl
bound
xchg
fwait
out
or
sub
es
xchg
aaa
fcoml
or
scas
jno
es
jbe
incb
jno
push
mov
sahf
add
add
pop
xchg
mov
testl
loop
xchg
push
hlt
fisubrl
sub
inc
sub
aaa
int
pop
ja
fldt
fxsave
roll
popf
jnp
repz
cmpsb
pop
sbb
movswl
cwtl
sahf
jae
sbb
xchg
in
testb
inc
movsl
incl
jbe
mov
jmp
xor
cmp
testb
andb
cmp
sub
gs
jnp
xchg
dec
or
sbb
sbb
push
into
addb
or
pop
or
nop
test
bound
inc
mov
cmp
cltd
sbb
fsubrl
imul
stc
add
jb
shll
pop
cmpsl
pop
fadds
gs
pop
aam
stos
add
add
push
xchg
stos
cmp
jae
flds
inc
mov
mov
fwait
jmp
lea
arpl
push
sbb
test
dec
repz
add
add
mov
lea
popf
jnp
vpshufhw
sbb
sbb
sbb
xchg
mov
mov
push
inc
mov
xchg
jb
ficompl
mov
call
sbb
mov
mov
add
out
dec
cmp
jmp
push
xchg
gs
pop
or
dec
sbb
push
out
cmc
lcall
in
lcall
push
push
pushf
adc
pop
add
dec
or
mov
shr
xchg
xchg
xlat
xchg
xchg
jge
pushf
cmp
xchg
popa
aam
mov
push
mov
push
cmp
lea
enter
xchg
enter
popa
add
loop
pop
adc
aad
popf
inc
iret
xchg
insl
pop
mov
ror
mov
in
xchg
ss
mov
sub
xor
mov
call
mov
jo
push
icebp
aaa
sbb
mov
mov
push
dec
sub
ja
mov
adc
roll
aas
sarl
cs
sbb
sti
adc
das
fimull
leave
aam
loopne
aaa
jnp
sub
fmuls
notb
rol
inc
sub
push
jno
int3
push
push
addr16
cmp
icebp
xchg
cmpsl
push
pop
or
fldcw
jge
inc
imul
fsts
mov
push
daa
dec
sbb
fucomip
clc
mov
and
xchg
mov
jge
adc
gs
inc
mov
lock
stc
and
sti
push
daa
outsl
sbb
cli
dec
mov
mov
stc
fs
or
jp
or
pop
addr16
aas
xchg
loopne
mov
adc
sub
neg
out
xor
cltd
jge
addr16
out
mov
xchg
xor
divl
js
or
cmp
push
mov
dec
lock
mov
outsb
fldt
test
sub
test
adc
pop
push
sbb
ret
push
mov
pop
and
jge
ret
dec
dec
hlt
inc
scas
sub
jge
aad
or
cld
cmpsb
mov
jne
pop
or
jg
repz
push
enter
fisttpl
add
cmpsl
xor
sub
push
pop
repz
leave
jo
jecxz
inc
loop
shll
inc
ja
xor
pop
cwtl
stc
test
push
fsubl
dec
mov
int3
inc
sar
aas
and
jbe
push
dec
or
inc
pop
sub
mov
xlat
gs
jnp
arpl
sahf
lcall
pmulhw
fsubrs
gs
lea
add
cltd
jno
push
cld
push
aaa
cmpl
sub
sbb
imul
cmp
jae
pop
jge
test
aaa
jbe
add
jmp
sub
insl
fwait
sahf
jmp
cmp
dec
mov
add
mov
fstl
sarb
jae
sahf
dec
test
or
jge
sbb
lods
pushf
dec
jge
pop
jnp
push
aad
enter
test
inc
lds
dec
mov
push
mov
cs
outsl
in
lods
jp
sti
ja
cmp
push
push
mov
aaa
xchg
jl
pop
adc
pop
push
cmp
lcall
fisttpl
and
jmp
xchg
hlt
jecxz
push
iret
push
push
cli
test
cmpsl
inc
out
add
lods
push
lock
xchg
test
adc
pop
icebp
xchg
fdivl
jne
cmp
cmp
cmpsb
enter
fisttpll
sbb
sub
icebp
clc
jmp
int
scas
movsl
les
or
loope
jg
popa
sub
mov
cmp
cmc
aas
and
lahf
subb
xor
js
test
in
imul
or
push
jg
arpl
rcll
sbb
xchg
ja
jnp
popa
jecxz
dec
or
sub
out
mov
imul
jmp
dec
test
dec
push
sub
ljmp
jmp
dec
pop
ffree
orl
icebp
lret
mov
movsl
pop
inc
addr16
data16
stos
adc
add
int3
jbe
lock
xchg
sub
jecxz
fdivrp
mov
ds
mov
ljmp
addr16
pop
scas
in
loop
push
addr16
or
jb
mov
dec
out
outsl
add
cld
daa
xchg
jl
imul
das
incl
xchg
aaa
or
pop
movsb
sub
pop
outsl
stos
inc
sbb
push
pop
loope
dec
inc
mov
pop
pop
in
push
fbld
or
addr16
pushaw
jge
push
popa
cmpsl
jecxz
js
jne
imul
aaa
cltd
jg
call
xchg
sti
xor
out
dec
popa
in
dec
xorb
clc
ds
add
push
cwtl
inc
fstps
xchg
xchg
jns
test
lods
in
sbb
lahf
insl
sbb
stc
cmpsb
data16
sbb
push
push
push
fidivrl
stc
dec
pop
sub
popa
xor
xchg
pop
mov
ja
loopne
mov
cmp
push
sarl
jbe
mov
leave
jmp
pop
stos
mov
sbb
sbb
or
cmpsb
mov
pop
pop
push
lret
call
rorb
add
in
inc
loopne
fcmovu
fdiv
jbe
mov
hlt
mov
int3
adc
sub
cmpsb
mov
xor
out
pop
mov
in
and
or
inc
adc
push
xchg
inc
lret
out
mov
dec
pop
outsb
cmpsb
push
sub
stos
std
mov
pop
push
mov
xchg
jnp
lahf
cmpsl
not
in
fimuls
sub
cltd
sbb
imul
mov
mov
sbb
mov
filds
into
fimull
cs
and
test
dec
sbb
insb
repnz
lods
addr16
mov
xchg
sbb
loope
mov
addr16
fsubrl
in
cmc
xchg
or
pop
movsb
leave
jp
mov
mov
std
mov
stc
loop
lcall
xlat
arpl
jecxz
xchg
push
outsl
mov
cmp
dec
cltd
jne
loopne
pop
push
dec
pop
cmpsl
pop
sbb
jo
cmc
sbb
add
add
jp
jmp
cmp
cmp
clc
cltd
pop
dec
mov
aaa
pop
pop
arpl
sub
aas
and
lcall
into
pop
enter
dec
std
jmp
sti
testb
aaa
ficoml
jl
xchg
pop
sub
out
pop
add
mov
gs
imul
sbb
fldt
idivl
mov
jmp
es
xchg
mov
in
adc
push
add
shlb
stos
stc
mov
sbb
jmp
fisubrl
pop
xor
jne
push
aam
or
cltd
lods
sub
push
addr16
call
or
push
mov
shlb
dec
sbb
out
pop
lret
jo
lret
xchg
movsl
mov
out
pushf
mov
sbb
pop
jnp
aam
mov
andl
adc
out
mov
pop
xor
test
lods
xchg
inc
xorl
jno
jmp
xchg
adc
sub
sub
sbb
or
out
or
push
xor
jo
inc
mov
mov
sti
clc
mov
cld
addb
xor
cwtl
mov
int
cmp
adc
pop
cmpsl
fcompl
fmul
pop
loopne
push
pop
call
mov
scas
jnp
int3
jbe
imul
xchg
fistl
fwait
inc
fmull
cwtl
dec
push
pop
inc
test
ror
ljmp
jge
xchg
movsb
daa
out
pop
or
pop
jmp
mov
mov
and
in
add
lods
in
hlt
data16
ljmp
xchg
mov
popa
imull
das
in
sub
cmp
xor
in
test
ret
lods
add
outsb
cmpsb
sbb
lret
sbb
addr16
adc
call
or
cmp
jg
dec
add
icebp
aam
jg
movsl
sti
movsb
and
mull
js
cld
arpl
pop
cmpsb
scas
movsb
daa
es
jo
mov
decl
gs
lods
fwait
cmp
mov
out
fnstcw
scas
sub
shll
jge
outsb
call
or
mov
mov
jecxz
cwtl
mov
mov
sbb
fwait
cld
mov
divps
xchg
imul
daa
jge
sub
fsubrl
inc
fwait
lahf
sub
ja
outsl
sub
in
or
fcom
adc
sahf
addr16
scas
jmp
inc
push
jecxz
xchg
dec
sub
aad
dec
push
in
inc
pop
sub
cs
mov
dec
xchg
adc
mov
jg
cmp
bswap
jo
add
ficompl
mov
repz
or
ljmp
jno
shl
das
lret
cs
jno
jb
add
sbb
out
cmp
push
pop
dec
pop
mov
stos
icebp
hlt
ja
cltd
in
gs
fwait
fs
sti
cmp
push
sub
das
jl
mov
or
adc
jns
pusha
cs
pop
inc
sub
sbb
call
dec
das
arpl
jg
add
jae
push
mov
popf
xchg
daa
xchg
std
in
sbb
mov
loope
fcmovnbe
mov
dec
xchg
cmc
fnstsw
sbb
call
fisubs
push
ss
cmpsl
pcmpeqd
pop
inc
ja
dec
int3
sti
push
scas
sbb
inc
add
jle
pop
ficomps
enter
xchg
sahf
mov
inc
stc
fldcw
fcoml
xchg
roll
shll
hlt
lret
xchg
fcom
push
or
adc
scas
cltd
mov
cmp
jnp
in
lea
xor
jnp
fisubrl
imul
scas
pop
ds
cmp
fisttpl
fidivl
jp
xchg
cmc
in
fiaddl
daa
out
xchg
ret
cld
mov
adc
mov
sub
mov
test
push
mov
out
mov
mov
pusha
arpl
dec
call
adc
xchg
push
out
add
push
fildl
mov
add
mov
fdivrs
sbb
push
sahf
daa
daa
pop
sbb
cmp
xchg
sbb
jl
cwtl
fdivr
pop
cmp
and
push
mov
push
outsl
fmuls
int3
mov
inc
clc
scas
fsincos
jne
push
push
test
out
pop
aad
nop
inc
pop
test
mov
mov
cs
leave
out
add
sub
dec
pop
scas
cmp
jp
dec
jle
cmp
jns
pop
and
aad
pop
and
sub
mov
adc
dec
scas
out
add
loopne
arpl
pusha
mov
shl
cmp
imul
pop
cld
std
dec
sub
push
scas
in
dec
mov
fsubl
pop
scas
dec
les
mov
pop
pop
jb
pusha
fcompl
inc
inc
jle
clc
jae
sbb
mov
ja
jmp
xchg
pop
cli
jg
sti
js
xchg
and
shll
pop
inc
mov
mov
mov
and
jns
fnstenv
stc
aam
dec
insl
test
inc
add
xor
mov
push
mov
cmp
jp
xor
shll
xlat
pop
sbb
xchg
push
fwait
pop
fisubs
push
adc
sarb
mov
mov
dec
pop
push
or
push
sbb
call
stos
call
andl
cmp
add
mov
xchg
xor
inc
xor
out
adc
sbb
lods
and
lret
add
mov
roll
fs
test
or
mov
test
gs
dec
outsl
xchg
xor
add
and
clc
xchg
inc
sub
push
pop
cmp
adc
lds
jecxz
out
pop
jle
loopne
push
mov
xchg
loopne
scas
lret
lahf
sub
bound
sbb
xchg
sub
sarl
xor
jmp
and
and
add
xchg
jge
shlb
add
stos
movsl
shll
scas
cltd
and
in
lahf
cmp
and
cmp
mov
cmp
pop
and
dec
imul
scas
cmp
jmp
lahf
jg
call
mov
inc
loop
xor
and
push
xor
and
das
cmp
pop
mulb
outsl
push
add
lods
aad
pop
mov
cmp
call
mov
loopne
scas
addr16
xor
test
jg
lods
testb
daa
cli
sbb
and
ret
shl
cli
ret
sbb
hlt
pop
pop
mov
mov
test
lds
or
lcall
call
outsb
subb
fsts
mov
sti
or
mov
jbe
call
cmpsb
loop
lods
push
jmp
push
cmpsl
in
pop
fcoml
mov
jno
out
adc
jmp
xchg
out
es
aaa
gs
cmp
cmp
cmp
adc
cs
xchg
fcoms
adc
cmpsb
dec
mov
fsts
fildll
xor
pop
xchg
leave
movsl
xor
pop
mov
pop
in
and
pop
xchg
pop
adc
lock
int
loopne
push
jmp
sbb
insl
or
push
jge
mov
lock
pop
ret
addr16
sub
fsts
es
addr16
ret
movsb
dec
and
pop
ds
jmp
cmp
into
cld
jae
xor
aas
fmuls
int
inc
in
push
jnp
mov
jns
insb
dec
sbb
sub
xor
fcmovnb
mov
mov
mov
test
cmpsl
mov
fucomp
arpl
mov
xchg
movl
cs
push
arpl
jno
sbb
test
jae
lcall
xor
push
repnz
addr16
sub
outsl
xchg
into
inc
push
cli
outsl
pushf
mov
pushf
adc
je
cltd
cmp
retw
jl
push
out
gs
adc
push
movsb
lds
out
xchg
or
or
fnstsw
loopne
fldl2e
arpl
jo
repnz
mov
jbe
out
mov
sti
repz
sbb
orb
fidivrl
movsl
push
scas
stos
sbbb
push
out
adc
mov
mov
rorb
fisubl
inc
xchg
cmp
inc
xchg
mov
std
mov
cld
mov
mov
dec
sarb
xchg
mov
sbb
aas
sti
push
xor
out
cmp
xchg
rcrb
xor
mov
fstl
xchg
jae
dec
daa
fstpl
scas
inc
xor
or
fs
mov
pop
fbstp
xchg
push
repz
add
lahf
mov
mov
jmp
and
add
and
aaa
mov
loop
icebp
cmp
pop
cltd
outsl
sbb
or
add
fstps
push
sbb
xchg
xor
lods
mov
scas
nop
mov
lock
jnp
stos
push
sbb
xabort
jno
mov
push
loopne
dec
xor
xchg
push
fsubrs
stos
into
fdivrs
pop
push
dec
pop
mov
adc
cmp
add
pop
dec
es
mov
iret
sbb
jnp
and
shrb
test
stos
imul
jne
mov
and
int3
inc
arpl
inc
cmp
insl
fsubrl
xchg
xchg
pop
gs
xchg
fisttpll
dec
mov
adc
filds
add
out
sti
ret
in
insb
sbb
popf
ficomps
mov
mov
int3
jbe
sub
and
fildl
and
es
icebp
flds
lea
cwtl
mov
inc
mov
cli
daa
cwtl
pop
lods
pcmpeqw
stc
mov
pushw
ss
cmpsl
imul
fs
jp
stos
xchg
fstps
mov
mov
data16
loop
lock
fmuls
ljmp
arpl
es
cmp
jmp
mov
aad
dec
mov
out
outsl
es
xchg
inc
dec
arpl
lret
xor
cmpsb
std
imul
push
jg
movsb
cwtl
pop
xchg
sub
rorb
orl
push
das
push
dec
dec
pop
stos
xchg
test
cmp
mov
daa
js
xor
in
std
mov
xchg
div
xchg
jno
add
xor
xlat
scas
push
mov
sbb
mov
push
cmp
js
cwtl
out
mov
in
mov
aad
mov
clc
and
arpl
pop
xor
shrl
xchg
dec
shlb
mov
rcrb
pop
bound
ret
xchg
mov
sti
pop
mov
stos
xor
test
clc
jge
in
dec
mov
pop
imul
or
mov
and
jo
xchg
test
fmul
pusha
stc
cmpsb
mov
inc
pop
add
clc
lret
fld
movl
movsl
dec
and
rcrb
outsl
cmpsb
push
repz
jne
fcmovnb
and
or
lds
dec
pop
loop
arpl
xchg
int
data16
inc
mov
mov
ret
test
sbb
aad
dec
bound
pop
jb
movsb
mov
sbb
mov
add
mov
ficoml
outsl
push
jns
sub
xor
sub
pop
sbb
push
lds
xchg
lret
shufps
daa
push
jmp
fdivrl
sbb
sbb
mov
cwtl
int3
or
lcall
xchg
push
stos
mov
jg
add
jecxz
arpl
leave
sbb
pop
sub
imul
arpl
pop
mov
add
cwtl
add
push
push
push
cs
dec
lock
leave
and
daa
ds
and
loopne
xchg
sub
push
fsts
xchg
sbb
sbb
sub
es
pusha
or
mov
test
pop
push
or
fsts
fidivrs
xor
fs
lcall
sub
fstpl
std
add
pop
add
or
cli
fdivl
xor
mov
dec
pop
sti
xor
cs
pop
mov
aas
popf
ja
or
arpl
jle
jge
ja
or
xchg
scas
dec
dec
movsl
loope
mov
clc
outsl
shlb
out
and
in
cwtl
inc
mov
imul
add
lods
and
sub
adc
mov
pop
shrb
dec
xor
out
pop
add
fisubrs
mov
cmp
jno
inc
push
aad
popa
cmp
xor
push
lcall
popa
xchg
sahf
dec
shl
dec
mov
mov
sarb
sbb
fnclex
push
in
xchg
sub
outsl
ret
int3
add
aaa
mov
stc
adc
dec
test
scas
nop
call
mov
push
push
add
mov
jmp
scas
pop
push
and
push
sub
xor
add
jp
sub
aad
inc
or
mov
mov
pop
gs
push
pop
push
cltd
stos
in
adc
pop
cmp
call
mov
sbb
cltd
aas
jecxz,pn
cmp
mov
movsb
mov
or
mov
mov
sbb
push
jne
les
icebp
sbb
ja
bound
inc
push
sub
sbb
mov
sbb
push
pop
fs
and
or
xor
or
inc
jecxz
mov
mov
cli
inc
cmp
pop
insb
or
idivb
sti
push
inc
jp
push
scas
fstpl
repz
xchg
lock
hlt
add
cmp
xchg
add
pop
in
jmp
cmp
popf
pop
lea
mov
jnp
mov
mov
add
mov
rcrb
int
test
mov
arpl
gs
sbb
mov
inc
imulb
jbe
lods
cld
fsts
into
add
fists
or
fcoml
gs
insl
notl
mov
jp
pop
pop
xor
in
int3
inc
addr16
add
push
out
es
mov
shrb
addb
outsl
cltd
in
mov
lods
pop
scas
scas
mov
push
and
jo
in
hlt
scas
and
add
lcall
mov
mov
fcomps
test
and
adc
sahf
xor
lods
es
mov
jl
lret
leave
loope
pop
in
test
mov
xchg
or
outsb
and
jns
adc
pop
cmp
xchg
sahf
sub
cwtl
gs
stc
push
dec
in
mov
bndstx
mov
xchg
mov
clc
mov
lcall
stos
fsubr
mov
pop
shrb
mov
lds
cmp
push
xchg
sub
mov
data16
pop
mov
sbb
or
shl
pop
cmc
mov
scas
shrl
cld
sbb
movsb
test
fdiv
arpl
cld
mov
imul
aad
mov
xchg
xchg
lea
jg
or
or
pop
repnz
xchg
sbb
sub
sbb
push
test
shlb
cmp
pop
push
xor
mov
and
fistl
shll
sbb
je
push
cwtl
push
sbb
das
pop
fcomi
jge
fcmovb
lcall
subl
test
jle
loop
fidivrl
cmpsl
mov
scas
sbb
int
inc
sbb
add
ret
xchg
stos
xchg
inc
or
sub
push
js
enter
adc
adc
pop
jmp
jnp
cmp
add
jnp
ret
add
and
gs
in
add
xchg
lods
jb
and
loope
cmp
pop
or
mov
or
out
repnz
mov
orl
push
pop
lret
fdivp
pop
loope
xchg
mov
fadds
mov
je
inc
in
cmpsl
xchg
movsb
test
scas
fstpt
mov
push
jp
fcompl
xchg
in
and
sbb
pop
je
ss
jbe
cmp
inc
and
sbb
xchg
mov
sbb
jmp
xchg
fucomi
movsb
mov
adc
ljmp
jmp
testl
cld
push
push
iret
xchg
into
sbb
ljmp
aaa
les
push
out
add
fistps
pop
scas
int3
out
cwtl
cli
imul
movsl
xchg
cld
jle
jecxz
mov
cmp
fistl
push
dec
jmp
dec
jne
or
popa
mov
incl
cwtl
in
pop
inc
scas
sbb
mov
pop
into
xor
mov
out
pop
add
xchg
sub
push
mov
les
and
insb
addr16
pop
xchg
cld
pop
pusha
mov
aad
pop
xor
add
mov
lret
cli
sub
cmc
fldcw
push
or
cmp
pop
pop
jmp
movsl
adc
or
mov
xor
sbb
outsl
jl
mov
add
stc
sub
je
xchg
jle
pop
loopne
pop
jecxz
lods
pushw
sbb
jo
or
and
fdivrl
call
loope
mov
xchg
aad
sbb
dec
test
sbb
inc
pushf
ja
cmpsb
mov
test
dec
push
fidivrl
movsb
repnz
adc
mov
adc
int3
jp
sbb
popa
sbb
or
jmp
je
daa
mov
jp
mov
push
icebp
repnz
sbb
xor
or
cld
stc
mov
mov
xor
mov
sbb
xor
cld
pop
scas
dec
std
push
in
inc
addr16
or
seta
cld
movsl
test
push
lods
enter
jns
leave
mov
ds
out
clc
inc
sti
ficoml
in
pusha
sub
lret
imul
cltd
cs
add
pop
sti
testb
jle
popa
shrl
and
lahf
adc
popf
test
add
std
sbb
aaa
push
inc
jmp
dec
mov
out
sbb
fnstcw
sub
lods
xchg
imul
dec
shlb
sbbb
sub
push
aaa
sbb
mov
push
into
call
jle
or
ret
mov
rep
fmul
add
push
insl
mov
jge
and
jl
fwait
push
sti
mov
scas
mov
inc
aaa
cmpsb
mov
push
imul
lcall
push
push
clc
sahf
add
pop
xchg
sbb
in
jnp
dec
idivb
xchg
dec
bound
dec
xchg
xor
sbb
mov
repz
testb
push
sbb
push
cmp
mov
aaa
imul
btr
test
lcall
fcoml
pop
adc
addl
pop
lds
scas
dec
out
sbb
mov
addr16
push
sub
cmp
daa
out
movsb
sahf
xchg
mov
je
jne
out
into
loope
aad
push
jmp
repz
leave
mov
push
int
clc
dec
rcr
imul
out
sbb
add
inc
lds
scas
cs
in
ret
sbb
adc
mov
and
test
or
adc
mov
adc
adc
test
btc
dec
fwait
addr16
sub
cmp
sbb
mov
sub
fsubl
std
mov
and
and
addr16
in
sbb
sub
inc
movsl
pop
test
xor
scas
andnps
aaa
js
and
mov
sahf
jo
mov
mov
and
or
lock
dec
xchg
add
nop
mov
mov
sub
cmp
das
std
bound
sub
outsl
cmp
rclb
mov
pop
inc
mov
xchg
and
call
mov
cli
addr16
sbb
mov
or
cld
push
xchg
rol
arpl
loop
jnp
xchg
sbb
ffreep
sbb
scas
jmp
pop
pop
push
pop
inc
cmp
jle
test
shl
and
mov
xor
ror
mov
fcomps
sbb
xchg
cmp
mov
sbb
jmp
push
mov
xchg
or
sbb
stos
repnz
fisttpl
pop
outsl
fidivrl
cli
rclb
or
dec
fsubrs
xor
addr16
and
xor
sub
call
cmp
ljmp
mov
pop
mov
sti
out
and
inc
pop
out
inc
push
roll
xchg
push
cmp
jnp
test
lahf
addr16
lahf
sbb
arpl
dec
loope
xor
hlt
in
test
je
jp
insb
pop
pop
clc
mov
push
cmp
sub
mov
into
add
scas
xor
sbb
push
inc
add
bound
into
pop
mov
xchg
adc
pushf
repnz
push
xchg
cmp
mov
add
cmpsb
mov
dec
mov
add
mov
in
bound
lret
rcll
int3
popf
roll
sti
inc
jbe
inc
dec
jns
les
push
pop
ret
test
dec
jp
fdivr
jle
loope
outsl
call
sahf
scas
sti
jle
pop
xchg
pop
lret
or
cld
fprem
jge
adc
jnp
int3
int
inc
repz
push
mov
lahf
fistpl
sahf
testl
clc
addr16
inc
mov
mov
adc
mov
mov
test
popa
cmpsb
push
dec
pop
and
sbb
mov
call
mov
lret
lahf
mov
or
pop
cmp
add
and
fstps
mov
lret
aad
pop
cmp
and
dec
mov
mov
sbb
std
mov
out
and
sarb
loope
mov
mov
jns
xor
sbb
fwait
xchg
xor
ja
push
imul
or
dec
in
and
mov
jge
inc
mov
xchg
and
sbb
lds
mov
in
push
mov
orb
adc
test
push
pop
inc
and
imul
adcl
xchg
stos
push
push
jo
sbb
sbb
and
ja
fadds
sbb
and
push
push
mov
fcmovne
mov
push
shll
iret
xor
bnd
mov
test
inc
fsts
ficoml
xchg
fs
insl
stos
sbb
aam
mov
sbb
clc
dec
xchg
push
push
std
shlb
xchg
xchg
cltd
inc
push
jns
aaa
out
outsl
mov
fistl
aas
testl
stc
movsb
lock
daa
fcompl
std
loopne
mov
xlat
js
adc
fdivrs
mov
mov
loopne
scas
nop
jge
mov
popa
xchg
jne
jo
pusha
inc
xchg
aam
and
push
jnp
bound
adc
sbb
ret
mov
sbb
sub
adc
addr16
int
push
lea
xor
cmpsb
pop
pop
dec
mov
insl
mov
push
dec
test
push
ja
addr16
int3
gs
cmp
lock
idivb
or
mov
cs
sti
lcall
cmp
shr
cmp
dec
sbb
stc
lret
fadds
sub
add
mov
mov
rcrl
imul
fdivp
imul
pushf
insb
mov
pop
out
gs
push
ja
sbb
mov
push
mov
push
ss
icebp
fwait
xor
jecxz
xor
push
push
repnz
out
add
cs
paddsb
add
push
orb
xchg
pop
inc
outsl
sub
jmp
js
mov
mov
sbb
cs
cltd
and
outsl
cli
scas
add
mov
fists
scas
es
add
popa
sub
lcall
movsl
add
sbb
stc
lahf
push
sub
lods
mov
shlb
in
test
xchg
sbb
jno
insb
adc
lcall
pop
lds
pushf
scas
aam
pop
mov
push
xchg
jle
mov
sbb
mov
idivl
cmp
jmp
cmp
loop
cltd
mov
scas
or
fsubs
leave
pop
cmp
mov
ss
imul
std
mov
cmp
jecxz
mov
or
pop
and
aad
int3
shl
add
push
mov
cli
sub
and
fs
dec
push
push
pop
fmuls
jbe
pop
mov
mov
lock
insb
pop
popa
add
insb
adcb
cmp
sub
loope
movsb
add
cli
pop
pop
dec
and
fldenv
and
add
testl
lea
mov
cmp
pop
mov
aas
or
dec
cmpsb
xchg
or
sub
fistl
xchg
xchg
jne
arpl
fiadds
incl
cmp
in
arpl
push
push
lcall
out
mov
xchg
insl
dec
lock
cltd
sub
or
push
push
mov
es
je
push
push
fxch
or
or
xchg
stc
mov
adc
mov
pop
or
fs
daa
mov
fnstcw
stos
mov
sub
xchg
sbb
mov
dec
xchg
and
xor
adcb
xor
addr16
imul
test
cld
imul
push
mov
lock
lret
add
mov
or
push
push
shrl
pop
mov
push
jp
push
cs
loopne
pop
mov
inc
ljmp
cmc
mov
out
pop
mov
daa
int
outsl
add
and
xchg
push
mov
aad
push
pushl
jmp
test
test
cmp
psubsw
push
shll
stc
addr16
fisttpll
or
jo
lock
icebp
pop
add
mov
dec
push
inc
or
xor
or
pop
bound
adc
add
and
dec
or
jne
out
add
push
xchg
add
pop
and
and
test
std
cmp
mov
dec
fstpl
push
push
adc
je
dec
dec
and
xor
push
xor
xchg
ljmp
sub
lahf
sub
scas
inc
pop
mov
fisttpll
or
data16
fcomps
js
fwait
movsl
push
inc
jne
xchg
dec
sbb
add
mov
lds
pushf
es
dec
jecxz
cld
xchg
pop
daa
inc
mov
and
jge
cmp
mov
arpl
shlb
sbb
imul
int
or
sbb
jl
xchg
sbb
mov
pop
or
shld
dec
mov
outsb
data16
ljmp
and
jle
loope
gs
icebp
das
sub
xchg
push
add
adc
pop
gs
sub
jo
stc
xchg
lahf
cmp
out
mov
aad
jge
inc
push
sbb
test
fldenv
movsl
fdivrl
cmp
and
mov
jns
frstor
jg
push
add
jge
scas
in
push
cs
mov
int
mov
xorb
sarl
and
rclb
sbb
or
pop
sbb
jp
rcr
insb
mov
sub
pop
aas
pushf
aaa
sub
push
xchg
or
das
jno
dec
data16
ljmp
adc
sub
push
ret
int3
adc
dec
filds
push
shl
mov
js
jbe
xchg
loopne
into
jle
inc
sbb
pop
outsl
inc
pop
cmpsl
loop
gs
pop
pop
sub
xchg
mov
inc
negl
addr16
outsl
aas
mov
in
test
lret
xchg
dec
dec
xchg
pop
mov
and
adc
lods
mov
ja
or
lock
ljmp
hlt
dec
pop
or
and
cmc
add
or
movsb
and
jg
mov
scas
cmc
ds
mov
mov
and
mov
lock
push
das
jne
sti
push
lret
xchg
jo
pop
bound
orl
inc
mov
imul
dec
push
dec
popl
or
lret
pop
mov
fisttpl
sub
mov
or
add
and
jecxz
cmpsb
mov
pop
dec
cmp
push
pop
dec
pop
inc
sbb
mov
neg
ficomps
pop
sahf
pop
fdivl
pop
mov
mov
sbb
mov
out
cli
loop
push
pushf
cltd
sub
arpl
sbb
sahf
outsl
cmp
insb
popf
cli
clc
popf
jge
sub
aas
test
shl
imul
movsl
and
jo
mov
xchg
mov
addr16
dec
dec
or
xchg
je
les
pop
sub
cmp
clc
test
push
mov
push
mov
xchg
mov
xor
dec
inc
out
repnz
adc
adc
xchg
add
lea
or
or
ret
lea
pusha
fwait
gs
push
jge
rcr
add
mov
pop
mov
aaa
movsl
pop
sub
inc
popf
ficomps
lret
jge
clc
imul
das
lea
adc
xor
jb
gs
call
xorps
scas
lds
pop
pusha
int3
xor
and
mov
sub
lock
jmp
push
inc
add
jo
pop
pop
popa
cld
xchg
cld
mov
xchg
mov
cmp
pop
mov
les
sub
leave
dec
sarb
mov
dec
inc
out
inc
add
fs
fildl
dec
fstpl
mov
sbb
into
pop
xor
jmp
adc
cmovne
jmp
repz
rcrb
pop
sbb
rsm
fcmovne
add
leave
mov
fstpl
dec
or
loope
aaa
jmp
jns
and
mov
xchg
mov
mov
arpl
and
push
inc
or
movsl
mov
rorl
inc
add
ss
cmp
ss
or
xchg
mov
stc
pop
scas
sub
insl
xchg
push
daa
push
mov
push
lcall
cmp
lods
aaa
inc
in
pop
fsubs
movsl
mov
inc
cmp
cli
aad
pop
aam
and
sub
rcr
mov
sbb
lret
sbb
leave
inc
xchg
xlat
mov
xor
sbb
jmp
add
xor
or
testl
addr16
mov
or
and
int3
sbb
es
ja
loope
in
gs
jnp
xchg
sub
imul
jl
icebp
pop
sub
jno
jmp
and
push
inc
mov
xchg
movsb
movsl
dec
jl
clc
mov
cmpsl
outsl
push
cs
pop
or
sub
arpl
idivb
scas
sbb
dec
jmp
push
lea
fmuls
push
lods
add
arpl
popf
popa
mov
icebp
or
pop
pop
int3
sar
mov
sub
xor
push
mov
imul
dec
mov
out
xchg
jne
lret
in
mov
xchg
adc
fcompl
xor
mov
add
xchg
andl
or
and
jmp
jae
or
sbb
imul
data16
arpl
lock
int
pop
push
test
xchg
add
and
bound
fs
mov
pop
idivl
pusha
jmp
call
sti
stc
mov
scas
pop
adc
test
inc
movsb
mov
push
mov
inc
fwait
mov
frstor
jmp
loopne
push
aaa
and
mov
outsl
fstpt
add
out
push
aaa
out
popf
stc
add
and
xchg
sub
adc
add
and
and
dec
out
ds
test
mov
push
test
sub
test
adc
push
sub
stos
mov
cwtl
jmp
cmc
inc
int
and
adc
call
pop
stc
xchg
lock
sub
jnp
into
fnsetpm(287
mov
int
fsubrl
sbb
adc
fsubrs
stos
stos
cmp
insb
clc
mov
orl
push
pop
mov
or
mov
dec
pop
mov
cs
pop
pop
sub
inc
popf
out
adc
push
sarb
jns
ja
mov
fsubrs
cmp
dec
call
ljmp
nop
pop
pop
jge
stc
xor
das
dec
pop
std
and
stos
cltd
jns
jp
jno
and
xor
mov
cmpsl
out
or
fsts
pop
push
push
enter
pop
sarb
or
shll
loope
jbe
int3
fsubrl
inc
dec
cmp
mov
fstpt
ja
xchg
mov
dec
mov
xor
jae
mov
mov
lret
imul
pop
shll
jmp
and
fisttpl
add
mov
pop
jne
inc
int3
cmp
xchg
mov
rolb
adc
movsb
sti
ja
test
jnp
lret
jo
cs
mov
push
pusha
daa
cld
mov
pop
out
pop
orb
cli
push
jae
in
sbbl
std
aad
push
sti
pop
mov
shlb
jecxz
movsl
hlt
jbe
lret
int3
pop
mov
add
pushf
or
gs
mov
fyl2x
jnp
es
adc
push
mov
xchg
hlt
dec
push
call
sbb
scas
push
mov
push
int
pop
mov
cwtl
and
pop
jnp
or
mov
push
xchg
jmp
fnstcw
outsl
xchg
test
repz
outsl
push
jle
mov
or
or
add
test
mov
insb
sub
add
add
mov
push
fsubrs
push
xchg
in
adc
xchg
jle
mov
sbb
push
pusha
jne
mov
or
fs
push
sti
jo
sbb
jnp
test
dec
daa
push
test
int3
out
shr
popa
addr16
cwtl
mov
xor
dec
ds
gs
lret
jmp
push
pop
xchg
stc
loopne
shll
pop
daa
xlat
mov
test
fcoms
jge
ffree
pop
aas
cmovns
fnstcw
test
dec
fstps
std
sub
cmp
dec
punpckldq
dec
stos
or
call
cld
push
and
insl
fidivrs
pop
call
xchg
outsb
xor
aaa
outsl
jl
arpl
jbe
movsb
xchg
lahf
push
add
adc
addr16
adc
dec
sbb
jg
out
lret
inc
iret
xchg
jbe
aaa
data16
fisttpl
pop
lods
mov
mov
mov
dec
mov
es
sub
dec
mov
mov
jge
dec
pop
dec
dec
pop
in
movsl
insl
ss
push
loopne
ljmp
push
rcrb
push
mov
mov
fidivrl
and
jnp
pop
pop
cmpl
inc
mov
xor
jecxz
pushf
sti
dec
sbb
addr16
dec
fnsave
in
fs
xchg
xor
dec
push
cld
sti
dec
xchg
lds
cld
sar
mov
shl
pop
mov
mov
aas
aas
fildll
jnp
sahf
inc
mov
shrb
push
jmp
aas
jl
push
inc
iret
add
arpl
xchg
sbb
and
mov
dec
add
or
pop
sbb
mov
mov
pop
jge
jecxz
sub
jae
cld
shl
mov
cltd
mov
idivb
arpl
icebp
add
sti
push
jnp
fdiv
push
sub
xor
jl
lcall
xchg
mov
pop
inc
cmpsl
xchg
sbb
loope
cld
mov
jb
fldcw
in
popf
mov
push
add
sub
mov
and
mov
shrl
in
sub
movsb
sbb
cltd
and
shll
xchg
push
pop
std
mov
dec
inc
and
ja
outsb
in
dec
jp
sub
aaa
in
jno
mov
sub
sbbl
insb
ficoms
stos
fwait
fs
cmc
xor
mov
dec
divb
fistl
mov
adc
and
icebp
ss
jge
mov
mov
aaa
enter
jae
in
push
sbb
addl
sub
loope
inc
dec
xchg
inc
pop
add
xchg
outsb
fdivrl
xor
xchg
jge
sbb
shlb
xchg
sub
in
orb
call
and
stos
pop
mov
int3
sbb
fcomi
clc
fsubl
flds
leave
out
sbb
popl
and
popf
fadds
out
mov
xor
rorl
sbb
push
into
pop
mov
or
push
rorl
arpl
sbb
cld
insl
or
ljmp
loopne
sahf
vpmaddwd
sbb
jmp
in
fwait
iret
mov
dec
in
aam
sbb
fldl
cmpsb
sahf
fs
sub
ret
mov
out
outsl
psubd
fcomi
sarb
pop
iret
aas
movsl
mov
addr16
and
add
and
ja
xchg
in
lret
push
jg
mov
pop
push
xchg
and
cmp
out
out
jge
into
bound
pop
or
and
negl
insb
clc
in
pop
mov
cmp
mov
mov
inc
xchg
jle
fxam
fidivl
pop
sub
and
mov
divl
jge
cwtl
cmpsb
hlt
inc
or
stc
fwait
ds
jp
aas
pop
fmuls
je
in
mov
fs
or
pop
imul
rorl
or
adc
negl
int3
jns
scas
test
repz
call
cmp
rorb
daa
add
adc
sbb
scas
dec
jae
and
pop
popf
add
jmp
lea
jecxz
out
pop
or
dec
push
div
arpl
push
or
pop
xchg
dec
pop
bound
pop
xor
jl
jg
lahf
push
push
and
popl
jle
imul
pop
push
adc
andb
add
jae
pminsw
je
mov
adc
jno,pn
pop
in
fildll
int
loop
pop
mulb
push
xor
pop
jbe
in
sub
xor
dec
ds
push
rclb
or
fdivr
lcall
push
jno
or
in
ljmp
add
xor
sti
fldl
jmp
sahf
pop
xchg
pop
pop
ja
into
lods
imul
cld
add
scas
mov
rcrb
test
cmp
fdivrl
add
pop
jmp
hlt
stc
pop
and
mov
and
sub
jl
and
gs
sbb
fucomp
inc
mov
adc
call
mov
cmc
xchg
sbb
inc
jne
js
and
stc
and
dec
and
js
pop
addr16
xchg
xchg
js
leave
cmpsl
cmp
test
mov
add
leave
adcb
mov
and
jnp
adc
mov
push
jp
data16
xchg
fisubs
mov
aad
sti
pop
fdivr
iret
and
jecxz
bnd
or
push
inc
lret
aaa
fistps
inc
addr16
dec
mov
jae
out
icebp
notl
sbb
shlb
xchg
pusha
stc
out
movsbl
jmp
jmp
push
mov
xlat
ljmp
dec
das
fiadds
jns
lret
jne
gs
sbb
sbbl
test
xor
icebp
idivb
xchg
mov
jp
ss
hlt
pop
call
in
adc
imul
mov
push
outsl
cmp
mov
aad
stos
sbb
test
sarl
out
loopne
jo
test
sub
pusha
data16
or
mov
jnp
xor
jns
fsts
in
mov
mov
dec
jecxz
pop
out
pop
loope
gs
jge
mov
jge
es
mov
jo
cld
aas
pusha
push
mov
dec
testl
adc
inc
aaa
sbb
movsb
and
std
cmc
adc
xchg
mov
ja
push
iret
rol
inc
imul
sub
xor
aam
pop
and
test
sti
mov
cltd
sbb
mov
sar
push
pop
adc
mov
and
mov
sbb
nop
inc
or
push
cmp
fnstenv
clc
or
cmpsl
inc
aaa
push
out
arpl
push
and
movsb
pushf
je
les
jg
das
dec
xchg
jmp
xchg
stos
jle
pop
xchg
mov
hlt
shrl
sbb
xchg
jge,pn
mov
jp
sbb
xor
mov
push
pushf
outsl
push
pop
rcl
or
push
xchg
push
fidivrl
lahf
enter
jnp
mov
sub
mov
test
rclb
lcall
insl
clc
push
movl
xorl
push
sbb
adc
repnz
jge
mov
pop
sbb
movsl
push
repz
fisubl
out
jecxz
enter
jge
jo
int3
jp
jl
repnz
scas
xor
sbb
loope
mov
pop
and
sub
adc
fldcw
add
xor
mov
lods
in
popf
sahf
cmp
enter
leave
or
out
pop
popf
or
in
mov
sbb
ja
or
dec
loopne
mov
adc
aam
mov
call
repz
cld
test
pop
sub
cmp
inc
push
add
xchg
lds
fstps
pop
mov
mov
or
clc
push
mov
fs
iret
in
data16
adc
imul
outsl
nop
add
cmpl
pop
popf
xchg
mov
into
mov
adc
and
sub
dec
ja
out
or
cmp
pop
add
int3
mov
mov
in
pop
cmp
sbb
jae
pop
pop
pop
into
push
sbb
xchg
sbb
test
lock
cmpb
cltd
das
inc
in
mov
push
les
in
jl
cs
clc
and
dec
xchg
in
inc
mov
jmp
cmp
push
add
dec
adc
sti
sbb
xchg
popa
sbb
call
xor
pop
sti
clc
sbb
fsts
sbb
jmp
jbe
push
lds
xchg
xor
lret
sbbl
mov
mov
add
das
test
xchg
fidivrs
and
stos
jl
mov
popa
sbb
inc
jmp
sbb
dec
fidivrs
mov
mov
clc
mov
es
add
jnp
sbb
mov
pop
idiv
int
lock
insl
sbb
mov
mov
call
mov
movsb
enter
stos
mov
xchg
mov
lea
xchg
push
fnsave
mov
xor
pushf
out
cmp
add
pop
inc
or
movsb
shll
add
movb
das
lods
dec
dec
xorl
or
popa
jae
and
mov
clc
lock
sub
int3
push
xor
fisubrs
jge
xchg
push
inc
sahf
arpl
and
jbe
sub
dec
shll
lcall
movsl
mov
add
mov
stc
mov
mov
shlb
or
or
insl
mov
jnp
lock
xor
jno
or
mov
mov
jecxz
mov
repnz
push
je
add
leave
xor
hlt
push
sub
mov
pop
cmc
pop
gs
jmp
jmp
int
cmpsb
adc
loopne
rclb
data16
xor
movsb
pop
imul
aas
jge
cmpsl
add
pop
shl
mov
sbb
call
aaa
aas
sti
jmp
cmp
dec
repnz
into
clc
adc
sti
das
xor
ds
push
out
out
loope
mov
xchg
in
rcll
clc
and
aaa
lahf
xorl
arpl
cmp
arpl
mov
insl
sbb
jl
xchg
out
add
insl
bound
jg
mov
clc
dec
setg
jmp
sub
cmp
add
mov
pop
pop
repnz
in
sbb
inc
repz
pop
mov
scas
int3
mov
pop
loop
jge
dec
int
lods
outsb
mov
fstl
mov
fldcw
mov
mov
out
xchg
shll
mov
aas
mov
and
sti
lods
or
loop
movsl
sti
push
repnz
push
push
test
sbb
push
cmp
std
sub
push
or
inc
cltd
push
jg
pop
addr16
mov
call
push
mov
dec
inc
mov
cmp
mov
sbb
lcall
clc
dec
repz
sbb
pop
mov
or
stos
dec
sub
cmp
cli
sub
pop
mov
inc
dec
cmpsl
or
pop
sbb
dec
rclb
mov
mov
xchg
mov
pop
push
ret
cli
inc
mull
loope
pushf
and
clc
or
pop
jb
fiadds
mov
or
cmp
outsl
xor
inc
jns
pop
inc
lds
jns
idiv
rcrl
data16
fisubrs
push
and
add
call
repz
hlt
fcmovu
jecxz
aaa
outsl
pop
add
and
mov
lods
fdivrl
in
mov
inc
lcall
loop
imul
inc
xchg
sub
idiv
fcmovnbe
mov
iret
xor
sahf
pop
stos
mov
cltd
sbb
ljmp
xchg
clc
ret
jno
je
and
daa
stc
pop
xor
add
fs
imul
adc
xchg
jecxz
stos
cmp
jnp
int3
cli
cld
sub
test
dec
inc
stos
push
cltd
ds
call
inc
or
ja
das
jmp
divps
fistpll
add
dec
xor
push
cmp
jo
lret
mov
icebp
cwtl
push
leave
xchg
imul
fsubrs
lret
pop
mov
pop
lcall
sub
fsubrs
mov
mov
add
cmpsb
das
xchg
mov
inc
ds
ja
pop
jmp
or
inc
jbe
cwtl
test
addr16
cmp
xor
add
fnstsw
ja
cs
pop
repz
ja
xchg
test
jae
xor
jmp
sbb
cmp
cli
test
stos
sub
insl
fsubs
pop
dec
test
mov
data16
xor
hlt
pop
cmp
xlat
scas
mov
scas
call
test
hlt
mov
mov
out
jne
leave
xchg
or
cmpsl
fcmovb
dec
and
stc
aad
lods
jp
loopne
std
icebp
cmpb
xchg
scas
pop
push
adc
mov
insb
inc
nop
jl
lock
faddp
xchg
cmp
cmp
mov
repz
jo
mov
push
int
mov
lahf
addr16
and
mov
add
sahf
sub
inc
and
cmp
sbb
pop
xchg
call
mov
movsb
aaa
push
hlt
xchg
shlb
test
cli
enter
fucomip
mov
negb
loopne
clc
xor
and
mov
dec
inc
clc
fldt
pop
gs
lcall
sbb
xor
sahf
fwait
and
jmp
push
lock
sbb
sti
popa
ds
movsb
and
mov
push
js
adcb
mov
or
mov
fldenv
lret
mov
in
pandn
mov
and
movswl
hlt
mov
mov
jl
inc
imul
pop
shll
orl
insb
pop
jp
stos
stc
mov
mov
mov
in
fcmovne
data16
sub
dec
inc
cmp
je
fcmovnu
xchg
xor
outsl
aas
lahf
out
mov
dec
lds
and
xchg
push
cmp
out
jmp
mov
jmp
ret
lods
cmc
push
imul
xorl
in
sahf
jnp
sbb
lret
adc
and
sbb
sub
jae
clc
push
xchg
data16
movsb
clc
cmpsb
push
add
mov
push
in
jns
loope
push
fimuls
sub
jle
dec
scas
sbb
fdivl
jno
jg
cmp
clc
or
fstps
sti
and
ret
in
sarl
fsub
and
sbb
fld
push
idivl
xor
sbb
mov
int3
aad
cmp
scas
inc
cld
adc
xchg
sbb
inc
scas
pop
test
push
inc
pop
addr16
call
jge
sarl
mov
sbb
subl
outsl
mov
clc
sbb
push
sbb
sub
pop
int
xchg
push
mov
push
lahf
rorl
out
sbb
imul
clc
and
sbb
sub
or
jb
std
or
lahf
mov
insl
cli
mov
mov
jle
push
xlat
jo
add
shrl
xchg
lcall
dec
jmp
or
clc
mov
inc
fldl
in
gs
ror
mulb
imul
int3
mov
push
jmp
flds
pop
cwtl
xchg
shrb
sbb
in
cwtl
sbb
out
jmp
pop
inc
fldt
xor
xchg
cmpsl
push
mov
push
outsl
or
dec
and
jle
rcrl
mov
sub
cltd
inc
or
ror
or
jno
push
test
pop
in
cmpsb
pop
jns
adc
scas
pop
fbld
push
lahf
daa
xchg
fsubl
or
gs
imul
and
pop
push
je
xor
mov
jb
push
pop
movsl
fmuls
jno
pop
sbb
or
inc
aam
stos
int3
and
mov
bound
sahf
dec
data16
scas
pop
imul
mov
mov
or
cli
push
push
call
sbb
in
push
xchg
lods
cli
adc
leave
sub
fmuls
lret
lds
bound
sub
loopne
stc
push
fwait
sbb
lret
dec
xorb
cmp
subb
jae
mov
and
sub
sbb
xchg
cwtl
repz
lcall
pop
sbb
mov
leave
cmp
cmpl
cmpsl
packssdw
ja
push
movl
inc
pop
inc
ret
jne
or
dec
ret
xchg
xchg
movsl
in
push
sbb
repz
sbb
pushf
push
pop
add
jno
sbb
adc
mov
pop
out
aaa
rcr
lret
popa
outsl
movsb
test
lds
pop
xchg
test
lahf
push
cwtl
mov
sub
insb
mov
jmp
jcxz
les
mov
loopne
arpl
and
loopne
outsl
ja
arpl
daa
sti
pop
xchg
in
adc
push
mov
push
loope
xor
ret
cmp
sarl
cli
jg
in
mov
int3
in
shlb
repz
bound
data16
xor
jae
cli
dec
inc
jb
fwait
mov
gs
cmp
dec
or
lock
movsl
push
mov
in
mov
sbbb
loope
pop
mov
inc
cltd
insb
icebp
clc
push
push
ficompl
fcoms
add
je
jno
cli
push
mov
mov
stc
rcrb
addl
cmp
push
mov
and
or
adc
out
loopne
ds
rep
xor
idivb
and
out
xchg
pop
cmp
lcall
mov
lods
fdivs
ljmp
mov
in
dec
sub
inc
loopne
mov
addr16
outsl
jecxz
adc
es
fistl
pop
jnp
sbb
aas
or
mov
sub
jecxz
pop
aaa
das
sbb
push
movsl
lcall
add
repnz
add
xor
in
scas
das
add
lods
cmc
mov
ljmpw
and
lret
adc
cmp
sti
pusha
sbb
inc
ss
push
repz
test
push
add
out
lods
and
push
gs
cmovl
cmpsb
shll
cmpsb
andl
aad
aas
mov
int3
dec
sbb
ja
mov
repz
aaa
aas
fwait
cmp
loope
xchg
cmpsl
fdivr
mov
das
add
push
inc
cs
xchg
enter
mov
push
cmp
sbb
push
decb
adc
and
popf
mov
pushf
subl
add
jo
adc
pop
lret
sub
adc
popa
pop
pop
inc
in
push
addb
sbb
subl
xchg
inc
push
pop
inc
sbb
clc
pop
and
mov
adc
push
cmp
movsb
pop
mov
ljmp
pop
cld
out
shrb
or
lcall
lcall
std
jle
pop
or
loope
sub
sub
roll
cmp
push
sub
pop
lret
sahf
popl
ja
adc
mov
add
push
xchg
pop
pop
dec
jno
sbb
add
jnp
jmp
cld
fdivrs
imul
std
sub
cmp
mov
ds
sbb
push
pop
fstps
mov
sub
add
lods
pop
cmp
cmp
push
or
das
in
rcrl
xchg
orb
sbb
sarl
pop
cmp
and
add
fst
cmp
test
ss
fnstenv
xor
push
sbb
test
ds
addr16
aam
jmp
xor
sub
rorb
fmull
shlb
pop
dec
lahf
pop
imul
ret
icebp
mov
adc
leave
sahf
or
aas
lods
stos
outsl
mov
popa
sub
in
cmpsl
mov
mov
cmp
sbb
lahf
dec
cwtl
fsubl
fsts
mov
es
or
push
icebp
fs
sub
sub
xor
loopne
filds
adc
jo
fisttpll
mov
jb
pop
cltd
out
xchg
inc
jl
clc
xchg
mov
dec
sub
sbb
xor
mov
call
ljmp
adc
or
jmp
and
push
push
gs
int3
bound
mov
xchg
jnp
mov
mov
xor
dec
clc
daa
ret
mov
mov
pop
scas
insb
mov
lahf
cs
ja
out
push
adc
add
lret
out
pop
mov
add
inc
mov
pop
scas
adc
jmp
pop
push
fs
cmp
dec
or
fisttps
out
outsl
out
popf
lods
int3
outsl
cmp
js
mov
push
js
push
das
or
or
aad
pop
xchg
cltd
dec
pop
push
and
push
flds
adc
mov
sbb
shrb
lea
push
aad
outsb
test
icebp
ret
ds
pop
fwait
mov
mov
push
fadd
fstpt
lret
lds
iret
out
adc
ds
sbb
ds
push
sti
cmp
int
pop
gs
movsb
data16
clc
into
popf
mov
loopne
ljmp
lods
hlt
pop
and
mov
cmp
insb
fcmovnb
pop
out
cmp
pop
xchg
pop
xchg
stc
iret
lock
sub
imulb
insb
mov
clc
xchg
arpl
pop
cltd
imull
ja
cmp
jns
mov
shl
pop
outsl
inc
jle
hlt
ficoml
loopne
xor
gs
repz
xor
das
ficoms
into
loopne
cmp
dec
push
xchg
orl
mov
jle
inc
xchg
inc
js
fwait
adc
inc
stos
mov
scas
pop
pop
cltd
mov
pop
xor
add
lcall
popf
mov
cli
bound
inc
or
cmpsb
popa
fldenv
add
fidivs
sbb
xor
jno
pop
add
xor
sbb
daa
xor
fwait
and
cmpsb
xor
call
insl
scas
jnp
das
xchg
pusha
fisubl
dec
movsl
push
jl
in
pop
pop
xchg
mov
xchg
cmp
jnp
lods
xlat
int3
fmuls
fimull
push
mov
in
cli
mov
lret
sahf
inc
xchg
cli
shlb
pop
fcoml
int
and
pop
cltd
or
xchg
in
cmp
push
testb
sbb
sub
scas
mov
mov
fnstcw
in
sahf
pop
jge
mov
lods
sub
div
cmpb
fcmovbe
mov
add
push
push
fsubrl
and
or
adc
outsb
pop
stc
movsl
mov
xchg
scas
push
imul
sbb
in
int3
icebp
cmpsb
push
jle
mov
test
repnz
pop
repz
and
addb
cmp
out
iret
cmpsb
js
lret
clc
fisttpl
dec
push
out
sahf
xor
mov
outsl
push
inc
movsl
push
fs
movsl
imul
dec
mov
jl
sbb
daa
push
mov
pop
das
aam
inc
mov
roll
ljmp
fistpl
mov
mov
xchg
pushf
and
std
or
cmp
xor
cmp
add
add
stc
adc
scas
mov
addr16
out
fsts
cmp
fcmovbe
cmpsb
gs
mov
imul
adc
jg
stos
ja
divl
scas
inc
cmpsb
repz
aaa
adc
in
ds
push
cmpsl
pop
and
pop
xchg
push
pop
ljmp
sub
lea
int3
cmp
mov
mov
repnz
and
testl
xor
and
sub
out
mov
scas
push
loopne
jg
loope
lods
or
inc
scas
and
insl
jne
in
adc
mov
push
mov
inc
cmp
out
out
xor
das
mov
std
daa
mov
sbb
je
psubb
jp
sbb
test
and
pop
cli
mov
rcl
push
jle
push
and
sbb
shl
into
mov
add
stos
jmp
sbb
or
xor
pop
gs
mov
in
scas
out
add
fxch
mov
clc
dec
in
out
push
jae
arpl
cmpsb
sub
sbb
or
pop
cmp
jbe
fidivrs
test
btc
pop
andb
cwtl
jns
sub
jnp
popa
ja
pop
test
imul
je
or
lds
outsl
pop
roll
push
sub
lret
shrl
stos
jno
jnp
mov
sbb
xchg
sbb
inc
mov
push
movl
repnz
xor
rep
popa
xorl
in
in
pop
mov
xchg
std
push
add
and
addr16
pop
rcrl
mov
jae
in
scas
push
xor
add
mov
inc
or
addr16
dec
cld
sub
call
aam
add
nop
jbe
loop
out
nop
ja
cmp
and
mov
sub
daa
sub
lds
sub
cmc
into
ljmp
mov
add
jb
adcl
fidivl
dec
jno
push
fcompl
sub
cli
call
lahf
mov
data16
xchg
mov
aas
jecxz
shll
scas
cwtl
or
movsl
repz
push
fs
test
mov
mov
clc
and
arpl
xchg
mov
lret
mov
out
pop
mov
cltd
adc
mov
daa
fdiv
ret
out
push
pop
sti
xor
stc
aaa
out
sahf
inc
cmp
mov
shlb
add
bound
and
push
cs
inc
adc
push
fstl
iret
cltd
xchg
pop
aam
mov
and
dec
ret
in
mov
loop
test
clc
push
lret
in
xor
sub
enter
test
mov
orb
clc
xchg
int3
adc
lods
movsl
push
aam
fcom
int3
js
pushf
sti
leave
nop
loopne
xchg
pop
xchg
jo
imul
dec
movsl
scas
sub
sysret
mov
jp
aas
imul
jbe
fcmovnb
push
add
idivl
call
and
addr16
jecxz
aaa
pop
pushf
daa
mov
bound
mov
leave
scas
jmp
cmp
xor
inc
xor
lock
popl
ficoms
repnz
enter
jp
xchg
in
pushf
repz
xchg
fwait
sahf
bound
fistpl
in
gs
xchg
cmp
in
jmp
and
les
aam
adc
mov
aam
xor
and
nop
mov
adc
popa
mov
mov
jecxz
push
jne
sub
jmp
lret
es
inc
pop
mov
adc
std
add
addr16
jae
adc
lret
xor
decl
pop
daa
ds
out
xchg
adc
shll
insb
mov
push
mov
daa
setnp
loope
repz
pop
mov
cmp
in
cmc
testl
in
gs
xchg
cmp
arpl
lock
popf
jge
pop
rcll
pushfw
push
mov
add
cs
shrl
xchg
lret
mov
add
arpl
fcmovnbe
ficoml
xchg
out
addr16
jbe
mov
cld
imul
faddp
lret
nop
sbb
mov
pop
insl
repz
rorb
xor
imull
fcomps
scas
sbb
push
mov
mov
js
aas
and
iret
cs
aas
push
addb
mov
push
mov
sahf
fistl
lcall
test
and
pop
sbb
jns
sub
mov
dec
pop
xchg
push
loop
cs
inc
cmp
cs
popa
filds
or
cmp
insb
lock
mov
mov
sub
pop
bound
inc
aaa
cs
aas
cmp
dec
jae
es
push
xchg
out
and
pusha
je
ljmp
pop
bound
xchg
dec
dec
mov
jae
mov
lahf
lea
inc
sbb
adc
frstor
shrb
cmp
and
add
cmp
xchg
sub
sub
dec
xchg
into
dec
and
pop
movsl
add
inc
cmpsl
outsl
out
cmc
clc
jo
mov
xor
divps
ja
inc
pop
imull
pop
testl
addr16
cld
pop
mov
cmp
sti
mov
xchg
pop
mov
data16
test
xchg
cmp
push
fbld
add
sub
imul
fiaddl
movsb
repz
mov
sub
inc
sbbb
mov
pop
or
scas
sbb
jb
loop
leave
dec
pushf
inc
pop
enter
ja
or
cs
and
cmpsb
dec
sub
imul
cs
xor
insl
mov
dec
adc
sbb
aad
mov
inc
mov
inc
push
lods
sbb
mov
pop
cltd
loope
aad
insb
fs
loop
jbe
mov
cmp
das
sbb
add
pop
ja
in
mov
adc
in
lods
pop
cmpsb
fwait
add
leave
xor
in
lea
or
mov
daa
cmp
or
cmpsl
lods
std
push
fs
push
pop
cmc
ja
mov
or
subb
cmp
mov
mov
imul
pop
inc
pusha
in
add
pop
mov
pop
repnz
mov
adcl
cmpsb
repnz
dec
pushf
aas
fbld
fdivl
xor
cmc
data16
jmp
gs
imul
sub
xor
pop
popf
mov
popa
stc
jae
jbe,pn
sub
adc
ds
mov
fcomp
or
mov
cltd
aas
mov
cmp
clc
pop
shll
jne
lods
insl
jae
add
or
std
sar
pop
fwait
xchg
out
and
mov
fdivrl
cmpsb
cmp
jecxz
ficomps
pop
pop
push
push
xlat
fwait
insb
scas
scas
and
xor
jnp
cmp
inc
popa
cli
outsl
push
or
jecxz
icebp
jl
std
aaa
xchg
pop
adc
stc
es
pop
imul
push
ljmp
outsl
mov
and
and
arpl
sbb
pop
jbe
xchg
bound
data16
pop
or
jmp
gs
and
fistl
xchg
test
loope
in
loope
xor
sbb
sbbb
cmp
addr16
push
fistps
sub
fidivrs
lcall
aam
adc
add
int3
arpl
fcompl
sub
into
inc
sar
mov
jnp
std
inc
inc
in
push
pop
lock
cmp
push
sti
seto
arpl
push
in
out
scas
cli
movsl
inc
in
in
stc
add
out
aas
jle
mov
out
sarb
adc
test
lds
sahf
scas
movsb
out
sub
cmpsb
aaa
and
pop
test
xor
stc
popf
or
dec
jnp
mov
test
rorl
mov
sbb
je
add
insb
addr16
int3
cmp
test
sti
jp
adc
lds
jg
mov
mov
ds
addr16
out
pop
pop
cli
jnp
movsl
add
loope
cmpsl
pop
loopne
dec
dec
push
fcmovnbe
mov
mov
imul
test
push
faddl
pusha
jb
clc
xor
jl
arpl
psubusw
jmp
outsl
mov
popa
xchg
ja
clc
scas
aaa
cmp
popf
xchg
sarl
pop
or
jns
mov
mov
mov
cld
std
outsl
pop
jne
push
push
mov
in
sub
mov
xchg
sub
icebp
lret
out
pop
rcr
in
push
neg
pmullw
inc
inc
out
aad
lret
loop
mov
pop
xor
xchg
dec
ret
mov
sub
sbb
mov
dec
sbb
icebp
mov
add
mov
mov
add
nop
add
push
sbb
inc
movsl
mov
mov
pop
es
int
fadd
cmp
cmp
popa
ss
xor
mov
adc
in
in
mov
pop
repz
das
cmp
mov
xchg
sub
imul
dec
sbb
dec
gs
pop
mov
inc
xchg
add
fs
cmp
mov
out
fucom
stos
fsubl
shlb
inc
sub
scas
loope
ja
cmp
lcall
mov
cmp
in
call
mov
dec
dec
shrb
fdivl
cmp
push
push
or
cwtl
sbb
xlat
push
pop
xchg
movsb
add
cmp
call
test
mov
les
pusha
jg
fwait
addr16
int3
dec
sbb
das
outsb
insb
lcall
pop
or
movsb
loopnew
divb
sub
inc
push
sub
notl
pop
das
std
gs
loope
imul
stc
scas
pop
repz
xor
pop
cmp
mov
mov
sub
and
mov
out
icebp
lods
fisubs
mov
js
test
cld
mov
mov
call
xchg
sbb
mov
push
mov
jl
jmp
jmp
add
das
jbe
add
cmp
adc
push
cmp
jnp
xor
and
add
lret
cld
cltd
pusha
sbb
add
mov
int
ds
es
mov
shr
push
cmpsl
mov
inc
or
cltd
sahf
cmc
data16
add
leave
pushf
mov
sti
xchg
outsl
add
sbb
mov
dec
addr16
mov
mov
ficomps
jge
mov
loopne
adc
sub
shrl
daa
test
push
js
xchg
fistpll
cmp
cli
cs
mov
test
xchg
cltd
sbb
sbb
mov
mov
jns
pop
scas
mov
push
test
fsubr
imul
fcoml
mov
xor
push
mov
sti
mov
adc
push
jbe
jg
mov
cmp
nop
std
cmpsb
add
sbb
jo
pop
pop
sbb
out
push
sub
frndint
notl
addb
imul
shlb
rclb
mov
sbb
std
pop
mov
and
mov
cltd
jns
jl
cltd
add
push
xchg
rcrb
nop
mov
xchg
cmp
add
mov
xchg
sbb
fbstp
jae
fists
lds
sbb
scas
cli
fistps
inc
and
dec
add
pop
dec
shll
and
sbb
mov
ffreep
sbb
add
mov
sbb
adc
push
test
out
lcall
flds
inc
adc
xor
enter
dec
sbb
je
jp
or
fadd
ljmp
xchg
and
and
adc
jmp
sub
test
in
ss
mov
scas
xchg
add
or
xor
arpl
loopne
fsubs
int
cwtl
incl
pop
insb
imul
pop
scas
pop
dec
cmp
or
mov
mov
cmpsl
cmp
rorl
jle
and
or
loop
adc
rcll
jecxz
mov
lahf
popf
inc
pop
sub
rcrl
popa
arpl
mov
mov
jnp
sarl
bound
out
mov
clc
mov
call
jno
cmp
mov
imul
rclb
int
mov
lret
daa
mov
xor
popa
mov
jno
pop
into
je
push
xor
cmc
in
jnp
jmp
sbb
imul
sub
test
cli
xchg
and
movsl
sbb
movsb
mov
aad
lock
mov
sbb
lret
pop
cmpsb
ror
sbb
jle
imul
loope
or
mov
mov
mov
adc
mov
call
sbb
add
clc
fdivs
mov
jp
lods
mov
push
and
push
and
in
mov
repnz
daa
inc
cmp
jns,pn
mov
ds
outsl
lret
std
rcrl
xor
mov
loop
mov
mov
mov
popa
xchg
movsb
xchg
leave
mov
sahf
imul
loopne
cld
loope
out
cs
lock
shr
push
outsb
sbb
aam
les
enter
sbb
enter
add
push
in
pop
sbb
pop
mov
inc
roll
and
jge
je
sbb
and
and
cmp
lds
cmp
pushf
cli
add
jnp
xchg
push
fs
aam
jno
call
movsb
pop
dec
mov
cli
andb
fdivl
xor
jno
mov
sbb
cmp
add
sbb
pusha
jne
add
cli
data16
ljmp
xchg
stos
daa
push
call
pop
push
lret
inc
inc
out
mov
sbb
imul
lods
adc
xchg
cs
push
cmp
gs
dec
jle
fistpl
jnp
mov
test
subl
and
pop
sub
fidivrs
push
sahf
mov
sub
sbb
out
mov
aam
jns
into
xchg
jmp
test
lea
inc
fsubrs
fcompl
push
rcl
jl
or
mov
push
mov
adc
sub
inc
popa
sub
dec
int3
push
or
xchg
clc
fsub
jae
fistps
cmp
sti
push
call
daa
cli
scas
mov
fsts
orb
push
or
addr16
pop
pop
pushf
and
mov
mov
xchg
xor
lret
xchg
push
xchg
arpl
sub
shrl
add
xor
in
fdivr
shlb
xchg
mov
out
movsl
sarb
scas
js
addr16
das
mull
es
cmpsb
jp
jecxz
push
push
cmc
push
mov
mov
cmpsl
adc
pop
or
ret
sub
cmc
fdivrl
xchg
jae
mov
mov
or
sub
xchg
fnstenv
aas
stc
adc
inc
das
pushl
pusha
shrl
ss
dec
push
push
test
out
lret
sbb
in
div
push
test
in
sar
pushw
lret
lods
jnp
dec
ret
xchg
jl
sbb
icebp
mov
pop
in
pop
imul
mov
or
inc
lret
inc
dec
mov
xor
fwait
vmwrite
in
pop
pop
faddl
fdivrs
adc
out
sbb
into
cltd
add
mov
pop
cmpsb
mov
mov
sub
xchg
arpl
xor
rclb
cmp
dec
inc
scas
bound
fiaddl
mov
add
sub
pop
xor
ja
fsubp
pop
and
xchg
jns
hlt
daa
inc
aad
mov
cmp
inc
pop
dec
lock
sbb
pop
out
lock
lret
xor
mov
jo
mov
sbb
out
add
in
sbb
add
push
sub
pop
and
add
and
pop
jg
mov
arpl
and
ficoml
je
xor
repz
jmp
xchg
sbb
in
pop
aaa
nop
adc
xchg
mov
negl
cs
sub
jne
push
imul
sti
push
addr16
test
fstp
lahf
xor
insl
std
push
js
sbb
or
cwtl
mov
pop
xchg
push
xor
adcb
pop
aam
sahf
mov
mov
gs
mov
inc
cs
mov
mov
mov
lods
cmp
jnp
mov
outsl
jmp
push
xchg
ficomps
xchg
and
js,pt
and
pop
sbb
addl
push
dec
into
sub
stc
cmpl
dec
pop
shrb
jmp
je
fisttpll
lret
pop
dec
or
sbb
pushf
mov
pop
adc
pop
out
adc
js
aas
negl
mov
xor
cmp
add
loopne
rcrl
pop
add
lock
and
add
or
fstpt
jne
rcll
test
xchg
aam
loope
fdivr
add
outsl
fdivrl
pop
pop
test
loop
cmp
cmp
dec
xchg
fiaddl
mov
aaa
mov
imul
cmp
mov
xchg
fldcw
mov
jle
xor
pop
fldenv
xchg
pop
xor
sbb
cmp
fcomps
popf
fistps
jmp
fisubrl
fcomps
jmp
pop
jge
jne
into
push
cmp
repnz
inc
jmp
fucomip
dec
inc
jge
dec
fistpl
xor
cmp
lahf
addr16
mov
iret
push
imul
jbe
push
cmp
sub
js
sbb
xchg
and
dec
fwait
push
shrb
cmc
out
int3
rcrb
push
push
jecxz
fdivrl
sub
add
fnstcw
pusha
outsl
sub
sub
clc
movsl
es
mov
jb
sbb
int3
jno
scas
add
test
movb
or
scas
sbb
into
add
push
push
leave
imul
in
fsub
jge
add
cmp
cld
addr16
push
stos
mov
cli
mov
es
xor
enter
ljmp
jg
inc
and
mov
mov
pop
adcl
outsl
aaa
or
and
stos
or
inc
dec
add
das
arpl
stos
mov
lds
or
or
fmull
or
dec
cmp
push
nop
sbb
in
daa
mov
icebp
pop
shrl
jns
gs
inc
out
fdivl
push
cwtd
push
mov
ja
push
ret
lock
sub
push
testl
js
outsl
ja
cmp
mov
aaa
cmp
sub
push
test
push
ds
movsb
into
cvtdq2ps
out
out
pop
or
jge
or
lock
pop
icebp
insb
stos
out
or
xchg
mov
jecxz
call
mov
ds
cmp
pop
pushf
sbb
dec
push
inc
inc
or
fisttps
fnstenv
testl
jg
jge
fnstenv
sub
dec
mov
jae
loop
mov
data16
xchg
lcall
js
and
cli
pop
ljmp
jbe
push
cwtl
fcoms
cwtl
pop
mov
inc
mov
or
cmpl
inc
cmp
sbb
mov
xor
mov
adc
pop
jae
and
loopne
cmp
js
pop
addl
mov
imul
jo
es
pop
push
add
lret
sbb
pop
fimull
mov
das
fneni(8087
cmc
jge
in
mov
rolb
imul
stos
fprem
sbb
pop
sbb
and
push
push
sbb
adc
add
pushf
scas
out
jl
cmp
adc
mov
ja
pop
or
or
lds
jle
sti
daa
cltd
sub
jbe
addr16
or
or
outsl
dec
xor
and
pop
inc
mov
add
mov
pop
repz
xchg
imul
mov
mov
dec
call
in
fwait
add
xor
adc
and
sbb
and
rcrl
iret
dec
jne
mov
int
jle
fcmovu
push
pop
jne
xchg
inc
dec
xchg
hlt
shrb
mov
icebp
xlat
xchg
dec
pushf
gs
xchg
outsl
mov
aas
dec
pushf
lret
add
int3
out
or
mov
call
jle
xor
xor
cltd
inc
test
fsubs
movsl
pop
rorb
add
lea
callw
arpl
xchg
in
cwtl
cmp
outsl
int
push
jmp
adc
add
push
shr
adc
push
popf
ficoms
jae
xchg
dec
jl
shrb
lahf
push
cmp
out
out
ljmp
cmp
sahf
mov
lea
mov
clc
jns
add
push
xchg
insb
sbb
pop
jns
mov
lret
or
jecxz
xchg
push
vandnps
and
in
jo
and
add
or
scas
faddl
sbb
icebp
pop
imul
or
gs
push
std
adc
imulb
mov
sbb
fwait
or
inc
addr16
xchg
cmp
idivl
or
mov
sti
rcrb
and
fdivl
hlt
or
cmpb
sub
pushw
cwtl
fistl
pavgw
repz
scas
dec
and
sub
mov
fstpl
popf
xchg
push
test
js,pt
fxch
push
mov
andb
cs
or
and
jle
push
pop
mov
sbb
lds
pop
lret
push
jns
cmp
add
and
and
arpl
call
call
jl
and
xchg
add
test
aam
aaa
or
add
fs
push
push
jp
les
mov
in
add
mov
mov
ljmp
jle
pop
das
fisttpl
ret
push
pop
subb
fcomps
push
push
fdivrl
or
and
fcmovnb
xchg
loopne
addr16
aas
in
lods
outsb
jl
xchg
xchg
push
sti
in
jbe
sbb
shrb
mov
ss
mov
aad
push
mov
loope
jge
in
fsubl
sub
into
inc
daa
aaa
cmp
push
call
int3
mov
in
loopne
mov
std
movsl
mov
pop
jbe
test
cltd
xchg
scas
push
leave
bound
ret
mov
mov
sbb
fsubs
test
jo
sub
test
sbb
dec
mov
outsb
or
out
xor
xorb
push
arpl
ja
bound
loope
sarl
insl
adc
cmp
ret
cmpsl
inc
fsubrs
mov
aad
or
jnp
mov
leave
call
cmpsb
fwait
sbb
sbb
mov
pop
jo
and
jns
jecxz
add
sub
push
and
pop
imul
pop
hlt
dec
clc
fdivrp
das
push
lods
mov
ds
stos
leave
hlt
jmp
test
push
je
mov
inc
push
lock
mov
mov
vpsubsb
fadds
filds
ds
xor
push
xchg
cmp
pop
or
xor
pop
mov
inc
push
cmp
pusha
rorb
into
add
mov
sbbb
cwtl
lret
out
xor
xchg
xchg
es
push
out
inc
clc
stc
int3
arpl
pop
inc
fiaddl
jo
mov
lods
adc
cs
jae
test
jnp
push
int3
daa
ss
mov
out
popa
push
test
mov
wrmsr
or
pop
or
pushf
jno
sbb
xor
jne
add
jge
frstor
sub
mov
jp
fcompl
mov
mov
aam
and
out
in
outsb
cld
push
push
mov
clc
push
fmuls
xor
cmp
cmpsb
dec
xor
jl
lret
in
xor
mov
and
insl
xor
push
std
insb
out
sbb
stos
xchg
add
mov
fimull
sub
into
sbb
fsubl
cld
or
mov
mov
stos
inc
mov
and
call
pushf
and
mov
mov
add
cmp
sbb
aam
xchg
push
sbb
imul
xchg
mov
fcmovne
fsubrl
sbb
sub
xchg
sbbb
lods
xchg
fimull
mov
mov
mov
mov
and
jae
mov
adcb
fwait
mov
ret
sbb
adc
aam
ja
cmp
stos
outsl
mov
cmp
mov
sbbl
dec
lds
hlt
ret
push
sub
fbstp
jp
fadd
adc
mov
es
mov
inc
lret
addr16
inc
std
ja
movsb
fldt
cmp
push
mov
and
jns
into
and
cmc
sti
inc
ret
mov
out
xor
jle
jmp
outsl
cltd
outsb
and
push
fiaddl
ficompl
cmp
sbb
fisubrl
add
sub
fimull
mul
dec
mov
divb
lock
jg
mov
mov
lret
pop
loop
shl
adc
int
pop
mov
insl
dec
push
mov
movsl
cmp
mov
sbb
cwtl
inc
scas
leave
fmull
gs
ret
je
stc
pop
mov
pop
dec
jl
or
xor
out
push
cmpsl
leave
stos
mov
mov
or
push
popf
push
add
movsl
jmp
fwait
lret
test
jne
xchg
int3
dec
jge
stc
jnp
mov
add
stc
outsl
ljmp
fstpt
ficompl
lret
xchg
cmp
test
dec
int3
cmpsb
jae
sub
xchg
pusha
sahf
cs
movsl
stc
lret
jle
xor
inc
jge
into
jnp
push
and
imul
repz
arpl
data16
pusha
mov
jnp
loope
dec
int3
cltd
daa
loope
pop
ljmp
pop
xor
fsts
dec
cmp
mov
test
repz
lret
cmc
mov
mov
dec
add
pop
inc
das
mov
mov
xchg
int3
imul
xor
outsl
mov
xlat
in
btc
sbb
pop
mov
fwait
leave
cs
fs
push
fstl
push
mov
lods
mov
mov
jnp
cmp
fucom
xchg
push
pop
or
cmp
fistpl
sahf
mov
or
scas
cmp
clc
push
icebp
add
sbb
stos
xchg
stos
cmc
mov
arpl
scas
lret
ds
mov
js
sub
adc
arpl
aaa
cmp
stos
mov
clc
mov
scas
sbb
adc
pop
out
pop
adc
call
test
int
mov
adc
sbb
or
or
dec
gs
sar
stos
int3
inc
push
imul
mov
enter
je
jecxz
repz
ret
movsl
xor
lds
outsl
cmp
lock
mov
jns
dec
js
cmpsl
mov
xor
test
fisubrl
sahf
or
cltd
shlb
ja
popl
inc
xlat
insb
pop
rep
xchg
add
xchg
sbb
add
jae
sti
jne
pop
cwtl
inc
mov
fildll
fmull
jnp
sub
xor
test
ret
mov
cmp
scas
test
repz
push
mov
scas
rcrb
out
and
add
mov
xchg
lret
pushf
mov
adc
sbb
dec
les
insb
cs
xchg
mov
imul
cltd
push
fnstenv
lods
sbb
cwtl
pop
lcall
sub
jnp
stc
adc
mov
daa
jmp
push
arpl
and
scas
xchg
and
mov
outsl
mov
cmp
inc
into
xchg
scas
andl
mov
mov
or
fcomp
icebp
pop
add
outsl
ljmp
leave
loop
pop
sti
xor
xchg
sbb
popf
dec
inc
int3
lds
sti
sub
mov
push
cltd
add
inc
mov
add
push
inc
mov
jecxz
aaa
test
mov
mov
mov
movl
lea
rorb
jecxz
or
cmp
test
lea
jl
mov
flds
cmp
cmpsb
dec
mov
addl
jns
jno
ss
pop
int
in
aam
repnz
lea
jp
or
imul
push
push
andb
mov
sub
stos
mov
xor
mov
or
cld
ss
std
xchg
je
mov
call
xchg
xchg
into
sbb
mov
std
pop
and
jno
cmp
xchg
cs
inc
mov
fcomp
mov
or
pushf
and
pop
xchg
cmp
add
lcall
in
les
jbe
addr16
mov
cmp
xor
and
mov
rorl
into
pop
sub
mov
push
pop
add
sbb
in
xchg
in
cmpsl
pusha
or
gs
lret
dec
arpl
js
out
dec
aaa
fsubl
jp
jg
xchg
jae
xchg
movsl
xor
ja
repz
hlt
xchg
lret
xchg
mov
jecxz
test
mov
sub
xchg
sarl
mov
int
fcompl
loop
cmp
ds
fwait
jne
xor
mov
xchg
dec
mov
add
push
push
test
inc
dec
mov
xchg
das
mov
add
sub
in
lea
sbb
and
mov
clc
int3
or
insb
add
dec
inc
je
adc
push
mov
lds
or
test
ret
scas
mull
and
aad
aaa
clc
insb
sbb
adc
sub
mov
arpl
out
jns
rcll
jp
mov
cwtl
jmp
push
fxch
or
mov
pop
mov
loop
sub
ljmp
mov
mov
adc
out
ja
cwtl
fldcw
add
loopne
orb
test
mov
sti
loop
xchg
fdivrl
pop
dec
xlat
inc
xchg
cmp
mov
loopne
fstps
bound
pop
pushl
or
mul
gs
fldenv
xchg
ds
mov
in
mov
into
insl
add
mov
and
jo
cmpsb
sub
fildl
pushf
data16
push
mov
jmp
sub
jne
sbb
sbbb
push
adc
jns
push
cmp
push
xchg
shrb
imul
xchg
mov
imull
scas
cmp
into
or
xchg
scas
sbb
xchg
and
push
or
add
jmp
dec
or
pop
jae
mov
cmp
adc
sbb
adc
dec
fwait
inc
or
mov
mov
test
sbb
push
incl
xor
jecxz
inc
daa
fistpl
add
jbe
in
loopne
cmpsl
mov
push
subl
mov
and
pop
mov
mov
pushf
aad
mov
test
loope
jne
push
inc
inc
mov
mov
addl
and
leave
hlt
das
add
addr16
into
xor
mov
jg
lret
inc
in
nop
or
and
inc
in
dec
sahf
sbb
mov
xchg
mov
mov
movsb
pop
sti
or
jmp
out
fwait
mov
xchg
out
jbe
mov
sbb
xor
dec
sub
hlt
inc
pusha
lahf
fs
outsl
push
xlat
dec
rdpmc
pop
push
aad
inc
lods
mov
cmp
xor
fldl
incl
jnp
mov
mov
pop
jp
addr16
out
jns
stos
push
mov
xchg
add
das
adcl
xor
in
jg
jge
outsl
jge
add
fisubrl
sbb
sub
repnz
pop
out
callw
fmull
pop
dec
pusha
jmp
into
mov
push
in
pop
jnp
je
mov
test
cld
mov
nop
mov
cmp
cmp
inc
fs
or
stc
jle
pop
ljmp
clc
mov
lods
mov
sbb
pop
leave
mov
adc
outsb
adc
scas
add
mov
mov
les
push
mov
das
popa
sahf
pop
xchg
cmp
sbb
mov
jmp
dec
xchg
es
add
sbb
repz
sbb
rclb
std
subb
test
jo
in
pop
test
sbb
sbb
and
push
mov
mov
lea
cmp
inc
sbb
fbstp
mov
mov
cmp
jmp
aaa
xchg
outsl
mov
xchg
mov
dec
adc
popf
push
xor
jae
sub
jnp
rcrb
fisubrl
xchg
pop
or
sbb
sarl
cli
ds
dec
jmp
jns
mov
mov
mov
add
loopne
das
fs
push
cmp
aas
sbb
roll
dec
testl
and
fnstenv
cli
call
bswap
gs
dec
sub
pop
mov
sub
scas
cmp
push
push
out
loopne
dec
in
pop
ucomiss
shl
sub
mov
cs
push
pop
mov
gs
jmp
or
fcmovnu
test
outsl
fsubl
xchg
xor
mov
pop
mov
mov
inc
sar
push
mov
nop
lret
jmp
dec
jns
adc
mov
cs
xor
ljmp
popa
cmpsl
test
jo
adc
dec
adcl
js
ds
xor
adc
subb
inc
clc
cmp
lds
inc
jle
iret
or
xchg
push
or
mov
fnstenv
movsl
adc
jb
loopne
jns
add
sbb
enter
push
dec
push
inc
and
cltd
dec
int
ja
xor
mov
mov
mov
push
movsl
cld
sbb
testl
push
loopne
fadd
inc
jmp
mov
in
stos
int3
out
pusha
xchg
jmp
sti
fdivl
aad
and
mov
mov
sar
jnp
enter
xchg
mov
pop
stc
pop
rolb
and
mov
xor
jo
jnp
seta
mov
out
gs
fdivrl
dec
cli
or
dec
mov
mov
fwait
xchg
fidivrl
dec
cwtl
xchg
cmc
repnz
pop
mov
xacquire
xlat
cmp
pop
cmpsl
fstps
mov
xor
mov
adc
push
std
add
das
push
mov
mov
ja
sbb
sub
or
cmpsb
xchg
xor
lds
out
test
out
into
popf
mov
ficoms
cmp
or
pop
cmp
or
repnz
fwait
mov
mov
imul
icebp
adc
cmp
aad
arpl
xchg
jge
sti
jecxz
fiaddl
repnz
pop
xchg
or
mov
pop
roll
cmpl
adc
pop
test
add
mov
sbb
mov
sbb
btc
pop
pop
cwtl
push
int
lea
ljmp
cmp
popa
testl
cmpsl
jnp
push
fwait
mov
sbb
in
push
jno
les
and
loop
dec
jo
jge
and
movl
sbb
push
loop
mov
or
jae
dec
add
cld
stos
pavgw
push
sub
nop
cli
pop
or
pop
imul
xchg
clc
test
lcall
or
lahf
dec
rorl
shrl
loopne
inc
xchg
and
adc
imul
dec
jnp
mov
xchg
jmp
dec
aaa
fld
adc
fbstp
mov
or
imul
out
pushf
outsb
or
pop
pop
dec
xor
in
rclb
cmp
fucom
into
cmpsl
imul
imul
call
negb
enter
in
fsubs
jne
pushf
shrl
repnz
dec
rorl
sbb
or
imul
sarb
aas
cmp
xchg
add
scas
cwtl
fcomi
adc
adc
xor
cmpsl
clc
bound
lock
cmp
jo
mov
rorl
mov
bound
pop
fimull
pop
sub
cs
jg
out
fadds
push
out
xchg
cltd
stc
add
jns
dec
xchg
mov
lcall
fldl
xor
mov
fs
sub
xor
cmp
jl
sub
xchg
dec
lds
xchg
jbe
mov
popf
add
lods
gs
cmp
imul
jecxz
pop
popf
out
add
rclb
mov
fldenv
pop
add
sub
out
cmp
sub
loopne
sbb
sbbb
mov
xor
outsl
mov
and
sbb
pop
loope
jns
imul
andb
lea
fsubrl
in
imul
push
pushf
jnp
dec
xchg
aaa
xor
mov
int
push
stos
scas
dec
add
in
pop
gs
dec
lea
or
adc
inc
data16
leave
sbb
cmp
jne
sbb
jae
les
out
dec
fisubl
mov
pop
scas
das
inc
push
int
in
mov
les
jae
dec
and
loopne
mov
pusha
push
jmp
inc
dec
pop
dec
mov
scas
jae
inc
icebp
pop
cmp
sbb
add
pop
mov
call
mov
in
jg
movsl
pushf
repz
jge
or
cmp
shll
xchg
aaa
in
mov
enter
and
in
out
pop
fisubrs
out
sub
test
sbb
pop
pop
mov
in
xchg
aam
test
test
sub
nop
pop
adc
movb
mov
or
ss
enter
mov
dec
sbb
test
jmp
sbb
filds
mov
jo
or
sbb
lret
cmp
fmuls
out
lods
pop
cmp
push
xor
push
lcall
pop
pop
sub
pop
xchg
and
icebp
jbe
clc
js
mov
je
xchg
xchg
ss
jne
pop
iret
xadd
rclb
xchg
fdivl
xchg
call
in
pop
xchg
pop
pop
mov
lcall
inc
cmp
mov
jnp
mov
mov
push
ljmp
fsubrl
or
push
cmp
je
inc
insb
pop
xchg
pop
subb
push
arpl
jne
call
out
xchg
xor
sub
xchg
pop
aaa
clc
xchg
fdivs
mov
and
xchg
out
cmpsb
fsubs
idiv
les
mov
pop
pop
xchg
aam
in
pop
jo
push
sbb
pop
stc
addr16
dec
outsl
cs
ljmp
adc
aaa
fldl
pop
and
sbb
cli
xor
adc
sahf
lea
xor
pusha
pop
push
sbb
pop
ds
outsl
push
dec
sbb
pop
and
rcrb
mov
jns
or
mov
test
jp
push
and
out
outsb
sbb
sbb
push
jnp
repz
mov
add
shrb
in
cmp
mov
in
push
lea
in
js
mov
fisttps
xor
pushf
mov
or
xchg
es
inc
divl
icebp
aaa
data16
clc
inc
shr
sbb
push
xor
push
cmc
jge
fistps
and
call
sub
xchg
pushf
cmp
inc
fidivl
cmpsl
pop
pop
out
je
jns
pop
outsl
cwtl
xor
add
dec
inc
push
ljmp
decb
paddd
inc
into
loopne
negl
sbb
jge
mov
xor
xchg
push
mov
jns
cltd
xchg
js
sub
mov
mov
sbb
loop
xor
mov
mov
jno
in
lahf
pushf
and
cld
mov
sub
sbb
cmp
cmc
jge
sub
inc
lods
in
mov
aas
cli
lds
jl
sbb
leave
mov
or
cmp
scas
push
rcrb
push
test
pop
xchg
xchg
sub
sbb
jp
gs
aad
lds
jmp
scas
sahf
dec
out
out
psrlq
mov
pop
pop
sti
xchg
repz
add
filds
push
mulps
das
lea
sub
mov
adc
enter
fistl
and
iret
sbb
cmp
shlb
xchg
and
smsw
popf
stos
xor
cs
mov
push
in
scas
test
lret
add
icebp
dec
cmp
mov
fld
sub
orl
in
fdivrs
cmpl
sub
push
outsb
sbb
or
movsb
sbb
imul
pushf
nop
and
pushf
cmp
mov
inc
aad
mov
loop
mov
test
lretw
pop
fdivl
cli
lods
sub
and
add
xor
add
arpl
inc
arpl
xchg
dec
pop
sarb
hlt
fadd
faddl
and
test
arpl
push
test
push
inc
sbb
jno
xchg
sub
ja
test
mov
ret
inc
xchg
adc
leave
add
packuswb
sub
int
cmp
jp
std
fdivrs
ss
pop
mov
mov
fst
mov
sahf
outsl
aaa
jbe
add
pop
xchg
sti
push
fadd
lahf
sub
inc
pop
dec
push
mov
rorl
outsl
and
sbb
je
stc
int3
dec
mov
fistl
scas
push
gs
in
jae
dec
or
gs
arpl
movsl
lods
xchg
pop
lcall
fcoms
push
daa
adc
out
std
or
pop
inc
fcomps
addr16
jbe
clc
pop
dec
pop
sub
mov
ljmp
mov
dec
frstor
aas
in
es
xchg
xchg
pushf
pop
jg
rcrb
sub
or
je
adc
xchg
es
xchg
or
sub
jg
xchg
outsb
adc
in
or
and
sub
mov
ss
pop
adc
push
call
mov
push
mov
int
pop
pop
rcll
push
xchg
cmp
jmp
stc
pop
mov
dec
xchg
xchg
fldenv
aad
cmp
jg
sub
js
or
sahf
scas
xchg
int
das
shll
rcll
pop
pop
mov
inc
repz
mov
dec
mov
push
pop
mov
and
psubusb
outsl
aas
cld
mov
lods
insb
jp
cmpb
js
mov
add
mov
or
add
dec
inc
sub
out
mov
in
test
inc
mov
fcmove
cmp
pop
inc
xchg
add
lahf
dec
push
stos
sbb
xor
push
mov
lahf
mov
lea
dec
dec
mov
pusha
push
sbb
cs
in
data16
cmpsl
sbb
aad
add
and
dec
xlat
cs
inc
repz
inc
out
int3
popf
push
mov
jle
test
push
ljmp
xbegin
imul
scas
jmp
lock
in
stc
add
jecxz
add
sti
fsubrs
add
lods
or
mov
clc
sub
push
pop
sub
inc
ljmp
mov
and
in
in
mov
dec
mov
pop
das
fbstp
out
testl
mov
mov
daa
repz
inc
cmpsb
mov
cmpsb
and
fdiv
inc
outsl
pop
mov
jns
leave
mov
xchg
jg
adc
bound
gs
adcb
inc
insb
pop
jae
in
cmp
scas
pop
ss
cmp
xchg
pop
xchg
pop
pop
pcmpgtb
xchg
sahf
fbld
scas
insb
out
mov
mov
add
fildl
clc
sar
push
ret
loope
lods
inc
xchg
aam
inc
xor
movsb
cmp
xor
int
xor
sub
add
sub
aam
xchg
mov
pop
arpl
cmpsb
arpl
imul
sbb
orb
imul
enter
sub
add
jecxz
mov
decb
pop
push
jl
arpl
mov
or
out
push
imul
fbld
jae
push
mov
jmp
pusha
sti
clc
sbb
scas
lcall
out
jnp
push
outsl
and
or
lods
arpl
inc
pop
mov
test
adc
outsl
popa
xchg
cmp
and
fisttpl
gs
mov
addr16
pop
jno
pop
xchg
pusha
mov
ja
test
or
mov
repnz
fcoms
adc
rcll
aam
jns
jne
dec
pop
jmp
push
sbb
push
xor
inc
add
cmpsb
roll
data16
xor
data16
fst
mov
sub
fwait
mov
push
in
mov
callw
ror
mov
push
data16
lods
scas
and
pop
sbb
imul
push
repnz
inc
push
popa
sbb
es
iret
out
fxch
push
add
push
shlb
lea
icebp
ds
aaa
fsubl
mov
shlb
sub
divl
sbb
mov
leave
iret
and
lahf
cmp
or
xchg
xchg
aad
aad
clc
xor
aaa
xchg
mov
xor
movsl
xchg
mov
pop
and
xor
iret
loopne
mov
mov
ja
mov
mov
mov
mov
das
mov
inc
mov
push
clc
push
inc
popa
pop
outsb
push
sbb
mov
push
inc
mov
and
test
mov
mov
out
mov
rcll
xor
mov
inc
out
es
pop
sarb
les
pop
pusha
shl
adc
mov
je
cmp
cmp
lds
out
lods
fsubrs
fisubl
call
insl
sbb
mov
xlat
jle
jbe
pop
push
lcall
loope
pop
clc
lea
jge
gs
pop
or
xchg
push
data16
pop
xchg
cmp
and
dec
inc
gs
adc
arpl
mov
rclb
in
jb
cmp
sbb
aad
in
mov
pop
inc
xchg
notb
sbb
test
leave
fsubl
inc
mov
out
sbb
mov
pop
dec
sarl
addb
mov
outsb
mov
mov
leave
arpl
xchg
and
stos
outsb
divb
add
es
in
and
pop
mov
aam
mov
cmp
psadbw
sbb
bound
xchg
add
fnstsw
mov
clc
aaa
push
xchg
mov
cmpsb
push
xchg
cmp
sub
xchg
add
into
add
sarl
sar
outsl
cmp
or
dec
test
mov
dec
pop
xchg
movsb
stos
push
sahf
mov
in
std
push
and
adcb
repz
jmp
fwait
aaa
or
outsb
xor
mov
pop
cmp
sbb
out
push
fimuls
mov
fstps
cmpsb
mov
jno
pop
jno
jge
arpl
xchg
mov
add
pop
jp
dec
addb
pop
outsl
jbe
aaa
movsb
mov
popl
adc
mov
out
jg
fisubs
cmpsl
inc
inc
or
out
or
xor
sub
repz
push
push
or
add
in
scas
gs
and
pop
loope
xchg
fildll
fstpl
xchg
jg
mov
sbb
aaa
int3
scas
cmp
sbb
jp
aaa
ficompl
movsl
xchg
add
jge
pop
push
push
pushf
ret
shrb
sarb
out
pop
addr16
pop
cs
mov
mov
outsb
in
pop
jmp
dec
jp
decl
outsb
dec
jne
lret
or
in
add
aaa
mov
movsl
xchg
addps
adc
fmuls
fstpt
and
dec
popa
idiv
jge
sarl
mov
outsl
daa
daa
push
enter
mov
cmp
and
cwtl
mov
mov
jnp
push
mov
aam
xor
mov
cmp
pop
pop
stc
xor
movsb
push
jg
add
movsl
add
jmp
pop
in
ljmp
mov
jnp
mov
mov
fs
jae
aad
ret
jmp
cmp
in
sbb
adc
lock
mull
mov
and
pop
push
leave
add
stos
push
mov
jl
test
in
pop
and
pop
lds
inc
stc
cltd
loopne
icebp
mov
mov
fmuls
sbb
or
pop
mov
mov
dec
ret
outsb
les
fnstenv
and
in
xor
xchg
hlt
fcoml
test
push
pusha
dec
icebp
dec
mov
cmpsl
jg
call
pop
lret
bound
mov
in
dec
pop
push
lea
insl
mov
jmp
mov
cmp
out
ficomps
jnp
pop
daa
cmpsb
adc
push
mov
dec
mov
cmovge
dec
imul
lret
jge
dec
mov
rcr
jns
bound
out
les
leave
mov
xchg
push
sbb
jecxz
push
or
js
sbb
lea
aas
sub
cmp
fmull
or
scas
imul
mov
pushf
inc
adc
test
ljmp
stos
push
fidivs
cmp
enter
popf
add
aaa
jg
clc
pop
mov
pop
fsubs
add
fildl
fwait
pop
clc
jbe
mov
mov
xor
movsb
push
push
addr16
push
mov
js
push
lret
add
mov
dec
pop
jle
and
popf
cld
sbb
loope
xchg
jge
xor
roll
or
or
cmp
jg
fildll
mov
aam
daa
xchg
push
rcll
cwtl
inc
xchg
dec
mov
into
out
pop
lock
aad
pop
push
fistpll
and
or
and
sub
cmp
aaa
pop
add
or
dec
add
xchg
xchg
push
cmpsb
lods
sub
popf
shrl
shlb
sbb
popa
add
stos
fld1
sbb
mov
push
into
pushf
or
sahf
mov
push
pop
adc
divb
shrb
ret
mov
mov
out
jne
xchg
loopne
xor
incb
daa
sbb
enter
out
into
or
mov
popf
sti
scas
fcom
mov
xchg
jl
mov
icebp
scas
xchg
imul
lods
sahf
push
imul
push
ret
movsb
mov
push
mov
lds
clc
pop
fisttpl
jp
mov
push
pop
test
sub
push
test
sub
xchg
int3
sub
movswl
outsb
or
lock
mov
or
jae
fidivrs
add
in
adc
mov
pop
push
aad
jl
mov
popw
jle
cmpsb
stos
and
movsl
int3
inc
jge
jge
xchg
adc
clc
inc
sahf
pop
js
push
lret
iret
jno
jge
test
pop
pop
pop
test
fistps
neg
push
lods
shr
aad
divb
imul
cmp
xchg
or
adc
outsb
push
lods
test
pop
pop
lock
jnp
imul
data16
and
inc
sbb
fnstcw
xor
xacquire
xchg
out
xor
mov
or
cmpsl
sbb
dec
ja
pop
cli
push
ja
mov
js
pop
into
mov
mov
xor
pop
push
mov
insl
ret
sub
pop
pop
in
add
in
push
aas
jns
push
xor
idivb
insb
stos
leave
fidivrs
cli
pop
fstps
icebp
push
sti
mov
cmp
sbb
arpl
ficomps
jecxz
lret
or
sbb
in
dec
pop
pop
push
insb
and
cld
push
outsl
jle
ljmp
jnp
popa
mov
test
leave
leave
sub
mov
daa
sub
xchg
and
inc
or
sbb
daa
cs
out
dec
outsl
nop
mov
js
negl
imul
insl
imul
push
pop
pop
push
subl
jbe
out
das
mov
xchg
stos
test
xchg
ja
cmp
pop
adc
out
xor
leave
add
pop
inc
mov
inc
sbb
aaa
jg
push
popa
pop
cmp
push
xor
pop
pop
xchg
das
push
cmp
sbb
push
lock
bound
jl
lock
mov
je
inc
and
lock
cld
mov
or
pop
pop
movsl
call
inc
pop
mov
sub
xchg
scas
add
pop
xor
movb
mov
hlt
push
ljmp
dec
dec
dec
ret
movsb
mov
mov
int3
cmpb
sub
sub
adc
push
add
mov
and
and
hlt
movsb
ret
ds
imul
push
push
cmp
lcall
scas
xorl
lret
lods
or
shl
fsubrs
mov
lods
pop
mov
push
lret
sub
sarl
jae
scas
hlt
insb
leave
fildl
adc
xor
pushf
push
mov
rolb
and
loopne
fs
nop
and
push
cmp
or
pop
dec
pop
cmpb
iret
es
cltd
mov
lahf
push
jne
cs
push
sub
ret
mov
bound
mov
cmp
push
and
pop
push
cli
sbb
sti
jo
mov
jb
mov
push
cmpsl
ss
pop
pop
pcmpgtw
cs
cmp
outsl
shufps
or
cmp
and
addr16
roll
jl
jmp
rorl
mov
mov
adc
test
and
imul
negl
pop
jl
push
jne
loope
sub
imul
out
es
mov
fldl
xorb
push
jae
xchg
inc
mov
jae
out
fbstp
sub
sbb
push
sbb
aaa
xchg
adc
pop
mov
add
push
cmp
push
mov
jge
push
pop
or
out
and
jns
mov
pop
jmp
or
mov
std
add
pop
add
mov
mov
stc
or
push
push
lret
int
pop
fisubs
fwait
jmp
jge
dec
cld
or
xor
pop
sub
imul
push
sbb
stos
clc
cs
xchg
jmp
add
sbb
push
pop
aaa
arpl
push
stos
push
dec
pop
xchg
add
test
or
mov
das
and
call
xchg
and
jne
push
pop
ja
push
dec
mov
ljmp
pop
lea
mov
scas
and
movsb
test
popf
cltd
mov
ret
arpl
dec
loop
fcoms
mov
aam
dec
inc
cmpsb
into
fadds
dec
js
add
jmp
int
cmp
inc
add
cmp
pop
cmp
push
jmp
aaa
xchg
and
xchg
sbb
enter
fbstp
cmp
shll
and
xchg
and
push
xchg
mov
loop
hlt
dec
mov
outsl
ficompl
cmp
scas
clc
pop
sbb
lcall
sub
sub
insl
mov
js
addr16
shll
andl
add
sbb
add
push
cli
mov
pop
mov
push
lods
xchg
pop
mov
aas
arpl
and
inc
enter
jmp
rorb
sbb
das
imul
hlt
into
and
int3
out
fcoml
inc
dec
jge
subl
fistps
jnp
movsl
gs
mov
lea
lods
push
mov
mov
push
jnp
push
repz
test
leave
sbb
push
mov
stc
adc
les
jnp
movsb
cmp
andb
fwait
sub
inc
mov
ss
mov
pop
loope
jge
icebp
lock
jmp
iret
push
loope
mov
inc
mov
or
pushf
cmpsb
mov
jno
pop
out
jl
jl
xor
out
jge
cltd
bound
es
js
mov
sbb
cmpsb
xor
and
sbb
jg
mov
jg
das
xchg
out
jo
cmp
fldt
mov
add
dec
and
stos
add
mov
lret
mov
aaa
sub
lods
outsl
mov
xor
aas
pop
call
and
mov
addr16
outsl
sbb
inc
xor
into
popf
adc
xabort
sahf
test
jge
repz
lds
mov
les
aaa
mov
es
lods
fnsave
jg
fcmovnu
out
xchg
fsubrs
add
pop
loopne
or
aaa
ljmp
jecxz
cwtl
pop
outsl
call
stos
sbb
cs
dec
arpl
in
push
jno
jns
pop
aaa
cltd
in
push
mov
inc
ret
ja
mov
xchg
pop
sbb
stos
cmp
aaa
repz
mov
mov
and
popl
out
add
xchg
sub
sbb
sbb
sahf
test
pop
mov
mov
cmc
scas
int
xlat
fidivrl
lret
imul
scas
inc
daa
xor
pop
scas
cwtl
cmp
or
orb
mov
mov
cmp
ret
es
jge
xor
jecxz
cmp
mov
rcll
js
sub
mov
cmp
and
mov
sub
mov
shll
sub
inc
pop
cmp
stc
ja
pop
mov
xor
scas
jno
cltd
sub
jl
mov
pop
mov
inc
cltd
leave
push
into
or
clc
movsl
pop
sbb
add
and
icebp
fsubrp
out
mov
adc
jns
pusha
cmp
jne
push
cltd
mov
mov
in
xchg
xchg
jae
mov
das
dec
addr16
sbb
popf
pop
or
push
jb
pop
add
stc
and
inc
push
mov
mov
inc
mov
cmp
std
xor
aad
inc
je
sahf
inc
leave
mov
pop
push
sbb
xchg
xchg
aad
sbb
jg
xchg
xchg
addr16
imul
inc
pop
test
fildll
cs
cmp
mov
xchg
into
xchg
mov
xchg
in
push
icebp
mov
push
fs
mov
sub
mov
and
or
pop
inc
cmpsl
mov
sub
adc
mov
sbb
aaa
jnp
and
imulb
pop
sub
sbb
fsubrl
sub
inc
jg
push
fwait
or
mov
sbb
scas
sbb
xchg
aaa
addr16
pop
pop
cmp
or
jb
aaa
cmpsl
fsubrl
mov
mov
sub
in
scas
jmp
and
ficoml
jbe
pop
cmp
sub
sbb
jmp
cmp
jg
pop
lds
pop
push
pop
sbb
jmp
cmp
mov
call
mov
push
leave
popa
sub
xor
cmp
lock
cs
pop
orl
insb
sti
jl
push
jno
cs
jg
sti
outsl
pushf
popa
dec
xchg
ja
mov
cwtl
pop
sbb
sbb
push
pop
iret
mov
fcomip
xor
ja
pop
icebp
popa
dec
mov
das
daa
out
ds
jmp
push
sbb
xor
addb
pusha
inc
repnz
pop
pop
push
pop
ret
adc
in
fnop
xor
xchg
jl
out
out
dec
ret
mov
mov
pop
call
fsubrs
mov
push
js
fs
inc
dec
test
sbb
sti
int
imul
add
xchg
mov
aas
adc
add
addb
cltd
push
imul
jp
int3
cli
dec
dec
outsb
sub
cs
or
dec
xor
jge
dec
int3
fwait
sahf
decl
fldcw
loop
mov
lock
subb
icebp
mov
and
fdivrl
lea
jbe
scas
push
sbb
push
mov
and
push
jecxz
cmp
clc
push
mov
inc
icebp
and
outsb
xor
push
js
inc
sub
or
aad
jp
fldl
in
jne
push
pop
mov
fstl
dec
xchg
mov
xchg
aaa
push
andb
xor
jae
out
mov
cli
popa
mov
xchg
jp
aaa
sub
add
xchg
push
dec
pop
cmpsl
pop
fnstsw
jge
gs
mov
inc
imul
xchg
xchg
push
mov
pop
out
dec
mov
ja
cmpsb
dec
cmp
mov
push
scas
outsb
inc
dec
aaa
and
cli
cmpsb
int3
out
lods
lods
cli
lods
xor
repnz
lcall
repnz
xlat
ja
push
push
pushl
sub
aas
sub
jg
xor
inc
clc
hlt
loope
mov
in
push
push
sub
imul
pop
notl
stc
outsl
sbb
or
xor
sets
fmulp
or
loopne
sti
or
and
xchg
mov
testb
dec
mov
mov
add
ret
rcr
jns
into
jp
dec
stos
sbb
jp
cltd
adc
xor
daa
sbbb
inc
pop
cmp
dec
rcrb
push
cltd
sbb
repz
and
sbb
lahf
fldenv
scas
loope
sub
push
cmp
lock
in
xchg
shlb
gs
cli
xchg
ds
or
scas
push
popf
cld
push
sbb
add
xchg
mov
push
cmpsb
insl
arpl
outsl
mov
dec
sub
sarb
push
sbb
xchg
add
cmpsb
dec
in
fsub
int
pusha
jl
cld
cltd
std
cmpb
xchg
or
pop
sbb
jne
and
adc
xor
mov
xchg
xchg
stc
packssdw
sbb
sarb
out
iret
xor
dec
jbe
push
xor
ljmp
cmp
xchg
pop
not
push
aas
clc
mov
imul
pop
mov
jbe
fnstcw
sub
xchg
arpl
dec
scas
jge
cmp
idivl
pushf
pop
popa
add
push
popf
aaa
add
mov
push
leave
inc
mov
fs
add
xor
sbb
negb
in
pop
jns
jae
test
popa
xchg
aad
dec
daa
mov
mov
lea
adc
mov
adcl
aaa
fistpl
sbb
pop
push
mov
gs
notl
pop
sbb
mov
mov
pop
ret
adc
rcl
mov
push
stc
sub
call
fistl
sub
pop
out
idivl
fwait
jne
stos
push
fsubrl
adc
xchg
sarb
negl
out
test
xor
movsl
adc
cmp
dec
mov
xchg
ja
mov
pop
int3
popa
cmp
lock
aam
in
fcompl
stos
outsl
mov
aam
dec
mov
insl
es
jns
adc
icebp
add
loopne
shlb
fcomp
outsl
fwait
shrl
int3
jg
ss
bound
xor
iret
xor
jno
push
inc
inc
mov
je
mov
aad
mov
sbb
fcomi
sahf
xor
lods
in
mov
aad
ror
cmp
in
icebp
cmovns
lds
out
call
inc
jbe
mov
es
data16
stos
mov
sbb
scas
or
xchg
pop
xor
cmc
cmp
jae
jo
test
aam
test
dec
rcll
mov
push
scas
movsl
in
ret
sbb
push
jne
in
mov
add
movsb
and
inc
jb
sub
mov
sbb
sahf
shrb
insl
pop
lea
shr
sbb
and
cltd
add
jns
dec
push
cmp
fidivl
cltd
mov
push
aaa
jbe
lret
aad
aad
mov
addr16
cmpsb
mov
jne
push
jbe
xchg
out
das
sub
icebp
sub
jae
dec
jp
cmp
out
add
fsub
gs
jle
mov
jle
or
dec
loopne
pop
gs
dec
fsubrs
daa
jae
adc
call
dec
jnp
and
adc
adc
or
push
test
outsb
cmp
outsl
jmp
push
jo
ljmp
lcall
mov
loope
mov
cmp
pusha
outsb
xchg
cli
shll
xor
bound
mov
xchg
mov
adc
fwait
repnz
rcl
mov
xor
pop
mov
dec
aam
cli
loope
xor
mov
sbb
xor
shr
dec
pop
jmp
adc
mov
mov
clc
shr
mov
sbbb
push
dec
inc
xor
xor
dec
cwtl
dec
jne
sbb
addr16
in
pop
das
std
out
pop
push
ja
out
out
sub
inc
lea
jecxz
mov
pop
pop
xchg
fstpt
scas
ss
cmpsl
rcl
addr16
mov
adc
pop
xchg
push
daa
loop
outsl
ja
imul
bound
mov
lret
call
xchg
push
pusha
jge
int3
push
mov
dec
adc
adc
ja
jle
pop
fldcw
jmp
lcall
lret
jle
push
sub
ja
sbb
sub
jge
fcoms
mov
push
fwait
ds
loope
inc
inc
xor
sahf
dec
ja
or
or
jp
test
loopne
mov
scas
negl
mov
in
pop
testl
cmp
and
ret
outsb
xorl
push
mov
mov
repz
js
imul
pop
jae
scas
out
jmp
jbe
enter
out
inc
jne
stos
test
ja
jbe
pop
dec
mov
or
imul
cmpb
lret
xchg
xchg
ljmp
repnz
mov
add
mov
cmp
fadd
aaa
ljmp
cmp
cmpsb
out
jne
cmp
inc
xor
sub
push
add
daa
and
mov
and
dec
lcall
aaa
cmp
sbb
mov
out
sub
sub
xchg
push
dec
sbb
aaa
and
push
push
pop
adc
testl
xchg
clc
lahf
cmp
outsl
fistpl
xchg
ds
jmp
mov
pop
or
xchg
pusha
test
pop
xchg
dec
dec
ficoml
inc
add
lcall
scas
test
jns
sti
jge
sbb
xchg
xchg
mov
ret
data16
scas
test
movsl
pusha
ds
popa
push
push
xchg
stos
jmp
pop
push
in
int3
push
xchg
pop
lods
mov
ret
cld
or
or
jl
fstpt
stc
lahf
pop
js
sti
aam
mov
icebp
jg
dec
sub
ret
fildl
repz
push
xlat
cmp
jmp
dec
repz
not
test
pop
bound
dec
pop
mov
cmpsl
pop
adc
arpl
shl
icebp
mov
outsl
fdivl
ss
mov
sub
or
out
mov
scas
and
and
addr16
ss
mov
in
cmp
jns
add
dec
cs
pop
addr16
xchg
sti
pop
fstps
sarl
pusha
add
insb
jo
ficoms
lock
in
test
ss
mov
xchg
scas
or
mov
loop
pop
inc
mov
cmpsb
lcall
or
sub
enter
mov
std
test
mov
jb
ret
jle
lret
aaa
mov
movsl
mov
inc
clc
lods
push
cmp
shlb
leave
in
outsb
out
rcpps
push
ret
xchg
out
push
insb
cmc
rcr
frstpm(287
pop
into
mov
cld
cwtl
add
push
cmp
mov
mov
cld
int3
cmpsb
pop
clc
and
inc
mov
lcall
jg
cmp
dec
cmpsb
iret
sbb
enter
push
xlat
xchg
xor
xchg
push
imull
mov
pop
inc
rcll
clc
sbb
dec
sbb
xchg
xor
mov
sahf
mov
mov
sbb
mov
jmp
jecxz
pop
jo
jp
lea
cmp
jno
bnd
jp
ljmp
push
dec
dec
sbb
cmpsl
loopne
jnp
fsubrs
or
sub
aas
sti
sti
arpl
sbb
mov
jae
sbb
mov
test
mov
test
mov
adc
data16
mov
push
ljmp
cmp
pop
push
pushf
push
in
jns
fildll
push
pop
sub
hlt
xchg
push
js
int3
push
clc
cmpsb
jo
jns
sbb
notl
mov
pushf
clc
pop
push
loopne
ds
push
test
daa
xor
repz
rcr
rolb
loopne
cmpsb
mov
cs
imul
xchg
lock
cs
bound
xchg
movsb
fs
mov
bound
sbb
jae
pop
inc
push
inc
mov
ss
popa
addr16
imul
jecxz
push
scas
xchg
fs
pop
inc
dec
mov
lea
xor
scas
jmp
test
imul
mov
test
push
adc
dec
and
lahf
ffreep
dec
jae
inc
mov
cmp
xchg
and
and
fsubrs
ficoms
fstpl
mov
cmp
jg
mov
lods
pushf
mov
test
inc
mov
imul
pop
mov
aas
pop
lock
in
adc
mov
xlat
sbb
out
cmp
jge
dec
call
and
aad
xchg
lret
ds
cmp
adc
stc
pop
sbb
cld
jae
in
xchg
xor
xchg
lahf
mov
lea
xchg
pushf
sbb
inc
gs
iret
idiv
lcall
cmp
sbb
and
popf
dec
cld
sub
iret
scas
bound
or
fstpt
pop
and
shll
in
cmp
mov
cmp
mov
push
ret
push
lret
sub
sbb
aam
pop
stos
in
repnz
lods
xchg
arpl
mov
jl
cwtl
out
gs
in
sbb
dec
sbb
pop
dec
jne
cmovae
pop
jge
push
test
ljmp
lods
out
jbe
imul
cmc
das
adc
xchg
xchg
cmp
push
sub
fcmovu
cmpsb
out
scas
jge
cli
mov
pop
jp
lods
mov
mov
sbb
mov
or
cmp
push
test
mov
mov
jmp
leave
push
idivl
push
loopne
scas
dec
add
fsubrl
mov
iret
sbb
mov
mov
out
pop
push
mov
insb
decb
pop
push
xchg
outsl
call
pop
mov
sbb
aas
or
jmp
cld
dec
push
dec
cwtl
inc
sbb
gs
jge
ja
push
pop
leave
jae
inc
jge
int
arpl
daa
mov
and
cwtl
xchg
aad
in
pop
jg
pop
pop
sbb
loopne
lods
inc
sub
mov
sti
fsubrp
push
clc
ds
xor
mov
mov
mov
mov
mov
jl
clc
out
jle
decl
aas
fsubr
push
shl
jge
scas
cmpsb
sbb
lret
mov
jge
fcmovnbe
repz
enter
in
dec
pop
mov
std
out
lahf
ficoml
push
mov
int
or
sbb
outsl
pop
les
into
cmp
popf
mov
xchg
pop
sub
sub
hlt
fwait
and
xchg
rcpps
outsl
ret
test
mov
aaa
cmc
push
xchg
jbe
idiv
js
push
pop
hlt
xchg
dec
and
jbe
mov
loopne
int3
pop
adc
repz
sbb
icebp
pop
movsb
mov
cs
mov
mov
cmp
mov
mov
rorl
shrb
inc
dec
nop
scas
cmp
in
scas
movsl
cmc
daa
xchg
out
in
lahf
and
xor
sbb
fisubl
xchg
loope
scas
repz
dec
cmp
xchg
and
mov
inc
cmp
jmp
inc
mov
cmc
and
pop
push
filds
sahf
punpcklwd
repz
mov
cli
cmp
adc
add
repnz
xor
ja
outsb
repnz
pushf
lock
and
out
ficoms
sbb
and
enter
std
cltd
mov
jecxz
pop
pop
sub
sbb
sbb
push
ret
aaa
inc
gs
icebp
ret
cmp
int3
cmp
je,pn
sbb
fistpl
movsb
lcall
push
aam
push
mov
into
or
pushf
xor
add
dec
xchg
jne
mov
aad
mov
pop
push
or
frstor
push
movsl
and
adc
arpl
mov
push
cltd
ds
pop
orb
addr16
dec
cld
pop
test
add
lea
outsb
mov
nop
scas
out
or
std
mov
outsl
gs
pusha
jge
pop
adc
divl
jo,pn
mov
inc
push
ror
outsl
daa
cmp
out
out
fdivrs
lds
push
out
push
lret
ljmp
jae
mov
dec
sbbl
movsb
sub
fisubrl
mov
fstpt
jno
clc
mov
jne
fmull
out
mov
cld
test
jp
nop
cld
scas
mov
xchg
mov
int
dec
cwtl
gs
xor
sti
push
jbe
adc
jnp
push
xchg
out
sub
push
sbb
ja
pop
pop
fs
ds
movb
push
fsts
adc
mov
xor
fcoms
inc
stc
mov
popa
imul
jl
xor
xchg
dec
rclb
pop
mov
test
mov
pusha
adc
inc
repz
cltd
jp
fmul
xchg
sub
push
xorl
jne
push
xchg
movsl
iret
xor
mov
fadds
jmp
sbb
and
es
push
push
lcall
ror
call
add
out
mov
pop
subb
cmp
lock
pop
mov
fwait
inc
insl
sub
mov
imul
cltd
out
mov
cs
push
dec
stos
data16
mov
mov
cmp
add
push
push
lds
sub
add
in
pushf
sbb
aas
add
and
xchg
inc
or
ficoml
movsl
ficompl
cltd
sbb
xchg
leave
inc
idivb
dec
lea
xchg
movd
pop
pop
mov
xchg
and
mov
cmp
loope
mov
sbb
lds
pop
jg
cmpsl
sbb
mov
inc
jo
lds
loopne
jl
insb
xchg
hlt
mov
push
sub
test
pop
or
icebp
add
dec
mov
jbe
xchg
shrl
inc
jmp
pushl
cs
xchg
or
inc
jp
outsl
xor
outsb
cs
mov
dec
and
mov
push
loop
scas
out
pop
cltd
das
xchg
aam
xchg
mov
mov
and
es
xor
add
cmpsl
push
jle
add
scas
arpl
jge
sbb
test
inc
dec
out
rcr
mov
cmpsl
sub
aas
push
pop
pop
outsb
sti
and
dec
mov
jp
push
xor
test
clc
sbb
imul
add
push
repz
mov
xor
jge
outsl
lds
fdivrl
test
sub
or
sub
push
movsb
std
add
shll
loop
xchg
push
cmpsl
add
test
es
inc
inc
insb
jno
in
test
jae
cmp
cmpsb
pop
mov
inc
pushf
adc
jns
cmp
xor
mov
sbb
ja
mov
cmp
mov
test
daa
aam
fnstenv
dec
popl
or
jl
dec
les
sbb
inc
std
push
mov
scas
icebp
test
movaps
test
loopne
mov
fcmovnb
enter
mov
jmp
leave
cmovns
or
pop
push
mov
popa
cmp
adc
pop
imul
sbb
loope
sarb
loopne
sbb
arpl
jp
repz
cmp
out
mov
or
pop
xor
hlt
pushf
aam
enter
inc
xchg
cmp
pop
fistl
xchg
mov
sub
cli
pop
mov
sub
data16
sbb
xchg
pop
out
cs
sub
push
loopne
jg
jnp
sti
ffree
pop
stc
movsb
push
jge
xchg
addb
pushl
mov
pop
sbb
inc
add
ficomps
mov
int3
xchg
sbb
gs
stc
or
cmpsb
pop
cltd
xor
lcall
shr
mov
jp
jle
sbb
mov
mov
mov
mov
imull
cmpl
add
push
sbb
xor
lock
data16
aam
dec
je
jcxz
cld
mov
ss
mov
addr16
iret
jge
lods
in
sti
mov
repz
jo
cltd
pop
or
adc
jl
movsl
outsl
mov
mov
xchg
pop
xchg
or
or
jnp
ss
rcrl
cmp
std
test
pop
out
sete
jecxz
cmp
mov
daa
enter
pop
pop
push
pop
adc
xchg
push
add
bound
xchg
arpl
push
aad
fldcw
mov
jae
rcrl
popa
pop
inc
sbb
test
fisubs
lret
jg
mov
ds
cmp
sbb
leave
cmp
fdivrl
cld
adc
mov
mov
aaa
xchg
mov
cmpsl
imul
push
mov
adc
adc
addl
shlb
cmpsb
shlb
sub
sti
xchg
pop
cmp
loope
sti
shll
mov
call
sub
fadds
cmp
aaa
fldt
inc
cwtl
cmpsl
loopne
fcoms
sub
adcb
xchg
xchg
cltd
push
cmpsb
mov
popf
jo
lret
add
mov
mov
xchg
xchg
mov
sti
mov
pop
daa
daa
xchg
push
dec
mov
push
cmp
cmpl
imul
insb
in
imul
outsl
je
jnp
dec
or
push
and
mov
pusha
cs
cld
sub
les
push
jae
ljmp
and
jge
out
fmul
loop
and
push
cs
fdivp
inc
mov
cld
aam
fsubl
in
pop
js
scas
push
in
cmp
movsl
and
pop
and
orb
test
lahf
pushf
mov
push
mov
outsl
add
mov
sar
sbb
dec
xchg
push
push
xchg
imul
dec
sarl
mov
cs
inc
pop
push
fstps
shrl
sub
bound
jecxz
loope
in
icebp
daa
and
fcomps
xor
dec
inc
inc
push
mov
sub
jge
mov
xor
adc
int3
sbb
fidivs
insl
mov
das
outsl
inc
xorl
shlb
push
jp
cmpsl
mov
cmp
push
sbb
bound
stos
insl
mov
jo
scas
loope
out
push
in
pop
outsl
mov
inc
or
add
lods
lds
push
hlt
mov
xchg
xchg
and
cmc
pop
faddp
sti
add
mov
pop
mov
pushf
outsl
or
cs
pushl
out
fnstenv
popl
inc
icebp
adc
gs
sub
movsb
adc
outsl
jmp
cs
and
arpl
fsubr
in
pop
sbb
scas
jbe
stc
sub
scas
js
or
mov
imul
add
inc
out
mov
bound
in
arpl
sti
xchg
xor
and
jns
dec
pop
loopne
push
mov
fdivr
clc
int3
daa
lods
test
movsl
les
sub
loopne
aas
jmp
lret
stos
icebp
xor
push
clc
divl
dec
lds
rol
mov
sub
aas
dec
mov
fwait
jo
push
jo
mov
mov
jbe
or
sbb
jns
dec
ficompl
fcoms
lahf
int3
mov
movsb
rcrl
fdivrs
in
xchg
adc
ja
add
cmpsb
faddl
sbb
or
jno
inc
pop
int
mov
lods
mov
cwtl
add
xchg
adc
dec
or
cmpsl
fldt
dec
out
mov
cmp
pop
outsl
hlt
scas
jae
outsl
pop
aad
cmp
aaa
test
unpckhps
fists
loop
lock
bound
pushl
add
sub
adc
push
stos
sbb
push
push
test
shrl
loopne
push
mov
adc
fildl
lret
xchg
pop
cmp
iret
mov
mov
cld
sahf
push
jns
push
sbb
mov
insl
popw
push
dec
mov
mov
pop
pop
sahf
divl
scas
sbb
inc
mov
ja
xor
push
lea
rol
lods
out
inc
out
cmc
jae
test
push
orb
je
data16
mov
outsl
lods
cmp
xchg
adc
inc
sub
ljmp
mov
cmp
dec
call
sahf
jp
mov
shll
icebp
fmuls
out
lock
cmp
lods
les
cmpsb
xchg
xchg
in
je
lcall
xchg
mov
jae
popf
xchg
cltd
cmc
scas
mov
fistpl
jae
xchg
out
inc
and
addr16
sbb
jne
das
je
jae
xabort
xchg
pop
iret
add
inc
outsb
lock
inc
and
pop
mov
aad
decl
jno
pop
cmpsb
mov
daa
xchg
gs
mov
std
outsl
lods
xchg
pop
lret
mov
popa
dec
xchg
adc
cmp
and
je
stos
rcrb
sub
mov
jns
in
push
dec
adc
jg
fdivrs
ja
push
call
movsb
jo
cmp
jge
cmp
arpl
addr16
mov
int3
xchg
mov
incb
mov
mov
jbe
xchg
mov
mov
shrb
pop
and
fxch
call
aas
fadds
cmpsb
xchg
xchg
push
call
push
push
pop
fisubs
scas
fs
pop
sbb
lahf
mov
xchg
out
mov
jg
cmpl
or
xchg
pop
push
bound
mov
and
dec
sub
mov
pop
ljmp
push
adc
lods
inc
xchg
data16
ret
rorb
xor
jne
movsb
dec
bndldx
sub
mov
out
cltd
call
and
push
cmp
sbb
fisubs
shr
in
mov
fucomp
rol
mov
scas
imul
lods
data16
or
mov
or
stc
mov
int3
inc
jmp
and
cmpsb
xchg
lods
jne
adcl
fdivs
pusha
jge
mov
mov
and
pminub
adc
aad
hlt
jbe
repz
leave
sahf
or
lods
test
sbb
jne
xchg
push
mov
aas
in
or
and
pop
jb
inc
lret
in
stos
hlt
xchg
pop
xorb
xor
pushf
cmp
jmp
xchg
das
push
mov
cwtl
mov
movsl
xor
dec
fsts
jbe
nop
mov
dec
and
jne
xchg
mov
or
adc
rcrl
std
fadds
aam
insb
jnp
dec
testl
out
mov
fldenv
int
xchg
sbb
xchg
jnp
out
or
adc
adc
ret
in
xchg
test
push
sub
outsl
out
mov
cli
fisttpl
out
dec
mov
ds
pop
sub
les
stos
cmp
xchg
add
push
sbbl
xchg
push
push
push
and
push
push
scas
movsl
cmp
test
push
test
sti
fs
pop
cld
and
push
cmpsb
fdivrs
dec
mov
fidivrs
jmp
xchg
inc
mov
cltd
xchg
out
mov
jge
mov
mov
lods
cmp
or
imul
push
cmp
pushf
mov
fists
jb
lret
ret
test
movsl
push
aad
cmp
xchg
fwait
xor
fildl
jbe
pusha
push
jnp
bsf
lock
ja
scas
std
sub
push
jle
fidivrl
loopne
out
lods
movsb
imul
fisubl
or
jecxz
sub
pushfw
pusha
inc
mov
rclb
pop
dec
pop
mov
std
movsl
out
xchg
xorb
loopne
add
cli
js
push
loop
mov
xor
sub
add
fistpl
jae
fidivrl
mov
int
addr16
fwait
clc
mov
jne
sbb
scas
sbb
pop
shrb
loop
int3
jmp
xchg
xchg
aad
getsec
xor
out
push
xchg
mov
ss
mov
nop
sbb
hlt
rolb
dec
cmpsb
xlat
push
in
mov
mov
rcl
mov
push
push
push
cmp
xchg
push
test
imul
mov
push
lcall
mov
fdivr
fsubrl
fdivrs
cmpsl
mov
push
mov
pop
lods
cmpsl
mov
jl
sbb
movsb
aaa
xchg
cmc
inc
gs
xchg
pusha
dec
test
mov
push
dec
dec
cwtl
inc
and
lret
repnz
push
aaa
filds
test
xchg
pop
dec
cmp
inc
pop
mov
cmc
pop
adc
xchg
out
jae
dec
add
pop
mov
cmpsl
add
fdivs
clc
sub
dec
into
jne
push
int3
cli
xchg
fidivrs
push
pop
cmp
xchg
pop
push
xchg
and
jne
popl
mov
iret
sbb
cmpsb
ja
xchg
xor
or
in
add
cmp
inc
rcr
adc
dec
xchg
mov
xchg
pop
jno
push
xor
push
mov
bound
pop
sahf
push
mov
pop
leave
xchg
sub
mov
xor
adc
add
data16
push
pop
cs
mov
sbb
jmp
cs
cmpl
sub
inc
aas
sti
gs
sahf
leave
xor
and
sub
or
sbb
je
dec
in
arpl
cmp
int
sub
add
jae
cltd
inc
loopne
sub
daa
stos
movsl
pusha
mov
stos
dec
sbb
xchg
pop
stos
mov
scas
movsb
leave
in
gs
jmp
sbb
imull
imul
movsb
dec
aam
push
movsb
adc
add
pop
mov
pmaxsw
push
pop
dec
invd
xchg
out
repz
in
into
fcomi
roll
lds
aas
xchg
imul
lret
bound
std
xchg
fcompl
jg
pop
aas
bound
cld
pushf
fadds
sub
in
fimull
into
das
aad
lods
pop
jge
cmpsb
repnz
ss
cli
mov
jg
aaa
push
in
aad
lock
push
ljmp
xchg
xchg
ja
xchg
bound
jge
loop
pushf
sbb
or
mov
addr16
mov
push
stos
int
push
xchg
repnz
movsl
or
and
lahf
ja
xor
in
mov
sbb
and
aam
lret
fsub
pushl
shrb
cmp
sbb
or
mov
test
add
mov
or
add
sti
xor
or
das
or
sub
lea
dec
push
push
cwtl
push
cwtl
dec
add
and
pcmpgtd
mov
sub
cmp
dec
lahf
jge
jg
into
gs
addr16
pop
push
and
pop
aas
cmp
mov
adc
sbb
mov
movsl
pop
jle
xchg
pop
in
pop
mov
movsl
xchg
pop
sub
fidivs
mov
clc
adc
popa
in
sbb
pop
xor
addl
ja
cltd
pop
jge
fimull
mov
jo
fstpt
adc
xchg
push
or
add
insl
pop
xchg
xlat
insl
out
mov
push
lahf
lret
lds
ret
jmp
lds
xor
movsl
dec
adc
mov
imul
push
pushf
sbb
sbb
test
outsl
xchg
out
stos
xor
xchg
xor
loop
cltd
xor
push
adc
leave
mov
mov
hlt
gs
mov
jp
jns
push
mov
jg
inc
jg
add
enter
jns
mov
mov
ss
fadd
push
jl
into
inc
or
mov
dec
add
mov
jae
int3
adc
sub
mov
inc
scas
cmp
xchg
inc
pop
mov
mov
mov
lret
mov
loopne
and
stos
movsb
push
mov
adc
andl
in
sbb
mov
orl
cmc
sub
lds
xchg
adc
insb
push
int3
xabort
addl
push
and
jns
sbb
add
mov
mov
mov
jae
cmpsb
mov
arpl
jbe
ret
pop
jne
cwtl
dec
inc
idivb
imul
lret
dec
in
lds
push
xchg
cltd
mov
push
movsb
xor
push
lcall
jnp
cmpsl
pop
xchg
jmp
shll
sbb
jl
inc
addr16
mov
jg
pop
mov
fdivrl
jbe
fistpl
dec
scas
into
push
clc
or
test
movsl
mov
sbb
movsl
push
arpl
daa
stc
and
jmp
mov
dec
negl
mov
push
jge
sbb
pop
mov
pop
les
mov
xchg
out
inc
xchg
shl
aaa
or
ss
mov
mov
jo
mov
sbb
cmp
testb
inc
imul
jl
push
lods
cmp
cmp
adc
and
aam
dec
insl
test
stc
jnp
sbb
pop
mov
sub
shrb
aaa
sub
aaa
mov
dec
ljmp
inc
es
mov
stos
mov
jnp
sub
cmp
scas
cmp
and
in
sbb
fmul
sbb
clc
lock
fsubs
pusha
cltd
std
in
imul
arpl
subb
xchg
sbb
movsb
xchg
push
xchg
and
add
jb
cwtl
fimull
stc
outsl
cmp
dec
dec
jbe
add
add
test
jae
in
fdivs
in
out
xchg
outsl
clc
and
dec
sbb
fisubrl
xchg
and
adc
jb
push
fwait
lcall
imul
addr16
or
cwtl
xchg
jge
ja
sti
add
gs
xor
mov
jmp
and
pop
cwtl
cli
cs
pop
test
sbbl
hlt
mov
repnz
imull
cmp
fsubr
inc
xorl
xor
mov
ret
mov
cmp
scas
cmp
fwait
and
push
fwait
enter
in
mov
fistps
hlt
pop
add
or
xor
fwait
xor
sarl
xlat
pop
sbb
mov
adc
push
ss
sub
dec
cmp
pop
ljmp
dec
lcall
imul
arpl
push
je
mov
fbstp
repz
mull
xor
or
sbb
pusha
or
dec
cwtl
sub
jne
and
and
cmp
test
and
pop
push
in
repnz
pop
sti
mov
pop
pop
mov
xchg
dec
das
in
pop
xchg
adc
xor
cld
notl
popf
xlat
fisttps
mov
sub
icebp
xchg
mov
dec
dec
cmp
fisttpl
test
dec
addr16
jge
int3
arpl
dec
xchg
in
leave
rolb
leave
xor
sbb
in
mov
fsubr
nop
dec
lods
mov
dec
call
cmp
outsl
mov
out
loopne
mov
mov
sub
cmpsb
shl
aad
int
data16
pop
scas
push
imul
add
loopne
mov
mov
pop
frstor
daa
call
mov
add
add
inc
data16
std
mov
imulb
jae
sbb
in
add
xchg
lahf
scas
pop
push
scas
scas
mov
mov
hlt
adc
out
jns
cmpsb
fimuls
push
pop
insb
outsl
nop
test
xchg
adc
dec
mov
pop
cmp
mov
insb
inc
jo
add
add
sbb
js
insl
and
fsubrs
jae
insb
jp
jp
into
ret
jo
push
jge
repz
jnp
or
pop
subl
mov
movsb
xchg
and
out
push
loop
pushf
ror
push
cmp
arpl
mov
lret
ret
jae
pop
sub
mulb
sub
or
add
test
data16
cmp
mov
inc
xchg
cld
push
xor
pop
sbb
push
out
sub
sbb
xor
or
dec
data16
jo
imul
push
sbb
push
and
pop
stos
clc
les
jno
mov
fnstenv
mov
cltd
lods
mov
pusha
testl
and
scas
fbld
or
cmp
movsl
mov
arpl
push
add
and
inc
pushf
rorl
ud2
int3
push
mov
pusha
mov
cltd
xchg
test
popa
adcb
xchg
movsl
sub
add
lock
xchg
adc
xchg
pop
movsb
mov
popa
scas
inc
push
in
sbb
and
scas
jnp
and
jb
sbb
aad
jne
ljmp
enter
icebp
popa
popa
push
cltd
imul
mov
pop
cmp
mov
and
scas
jno
sbb
dec
repnz
sbb
cmpsb
xchg
sbb
aam
pop
jmp
or
pushf
sub
sbb
fmuls
xchg
mov
or
jnp
mov
inc
xchg
lahf
in
repz
fisubrl
dec
shl
add
notl
data16
push
outsl
cwtl
jbe
add
stc
scas
dec
fimuls
fisttps
repnz
xchg
pop
fisubs
push
fbstp
repz
call
cld
in
pop
gs
test
mov
ljmp
add
or
outsl
imul
stos
shrl
and
adc
mov
xorl
in
jo
jmp
lock
cs
ljmp
cmp
mov
mov
in
imul
mov
insl
dec
xor
cli
sbb
fwait
mov
data16
dec
aam
mov
insl
int3
movsb
jmp
push
or
sub
gs
mov
hlt
pushw
xchg
repnz
xor
sub
push
leave
repnz
jl
fidivl
or
pop
sub
ja
cmpsb
jl
popl
fstpt
mov
ss
clc
push
pop
psubusb
push
add
clc
xor
jmp
sub
pop
sub
stc
out
neg
jge
gs
sub
icebp
mov
fsubrl
cmc
mov
addr16
ret
or
sbb
xchg
flds
push
test
imul
lods
call
sbb
test
xchg
xor
pop
xlat
mull
xchg
xchg
test
pop
push
mov
out
xchg
sahf
xchg
or
or
call
xchg
scas
fbstp
sbb
inc
sbb
sbb
mov
push
xor
push
jmp
dec
addb
inc
shrb
and
sub
imul
xchg
lods
cmp
push
or
add
mov
pop
testl
out
inc
adc
scas
xor
fstl
std
js
gs
icebp
lahf
jmp
xor
out
pextrw
pop
pop
xchg
imul
xlat
cmp
mov
or
mov
ret
sub
push
nop
cltd
push
sbb
out
pop
cmpsl
mov
cbtw
push
fsubl
stos
out
fists
add
jl
sbb
push
repnz
jae
jae
ret
xchg
mov
mov
mov
sbb
aaa
enter
fisttpll
lahf
hlt
cmc
xchg
outsl
int
xor
xchg
and
push
mov
or
mov
gs
daa
mov
outsb
mov
movsl
mov
pop
pop
fiadds
sub
sarl
adc
mov
pop
rcrb
fadd
iret
adc
jo
cmp
jae
data16
bound
xor
jbe
test
loop
adc
aaa
scas
scas
in
push
test
popa
sti
shlb
insl
aaa
sub
xchg
mov
lea
lret
mov
pop
inc
jae
gs
es
cmp
and
ret
jge
fcoml
adc
xchg
lret
in
enter
cltd
fldenv
lret
xchg
mov
push
pop
push
jmp
xor
mov
sbb
add
inc
dec
out
test
or
xor
pop
or
arpl
inc
lods
fadds
jno
clc
mov
fsubs
int3
repnz
sbb
jbe
push
jmp
sahf
pop
mov
filds
dec
clc
ret
jae
mov
cmp
imul
xor
stos
cs
sub
bound
setae
or
gs
adc
ret
xorb
xchg
mov
or
push
mov
into
loope
jno
sbb
fdivrs
xchg
push
xchg
pusha
cmc
sbb
mov
add
jnp
and
mov
test
push
xor
lds
call
out
jbe
mov
fsubrl
lcall
xchg
loop
shl
mov
loopne
cmp
in
arpl
mov
enter
lcall
pop
xchg
xor
pop
sub
aaa
xor
into
jmp
mov
inc
sarl
maskmovq
negl
sbb
push
rcrb
popa
inc
das
repnz
out
mov
sbb
fsubl
fdivl
xchg
jo
cmp
jg
or
idivb
jmp
jne
shrl
push
mov
mov
sbb
cs
outsl
add
decl
incl
or
mov
jmp
pop
mov
mov
push
inc
pop
dec
out
mov
into
scas
fcomps
mov
pop
arpl
add
adc
sbb
rcrb
inc
lahf
mov
pop
ds
mov
scas
or
ret
adc
shlb
out
in
mov
ficomps
imul
mulb
mov
pop
add
cmp
pop
clc
das
sbb
adc
ss
mov
pusha
or
pushf
gs
in
sar
adc
push
fiaddl
or
lret
stc
mov
scas
xor
jnp
add
mov
xor
cltd
xchg
add
addps
xor
lcall
cmp
sti
lods
loope
icebp
pop
stc
add
sub
inc
stc
cmp
out
cwtl
sbb
je
or
aam
imul
mov
popa
dec
inc
outsl
xchg
mov
leave
addb
fucomip
nop
insb
insl
jecxz
mov
push
outsw
jnp
stc
pop
fidivrl
lods
lea
mov
out
out
mov
mov
test
stc
pop
xchg
or
push
cmc
dec
xchg
mov
aas
pop
jecxz
jnp
mov
xlat
xchg
push
push
scas
mov
sahf
push
sub
mov
sbb
jle
mov
push
dec
stos
sarl
mov
out
push
mov
pusha
enter
pushf
out
rcrl
sub
mov
outsl
fadds
add
aam
sahf
hlt
das
outsl
sbb
mov
clc
sbb
jne
push
ret
mov
jmp
outsb
fsubrs
bound
aas
scas
mov
xor
lods
out
pop
into
xchg
insl
divl
pop
pusha
loop
out
push
out
jecxz
sahf
out
aad
insl
sbb
jg
dec
pop
scas
enter
mov
outsl
jg
xor
test
ljmp
cld
gs
sar
test
xlat
aam
int
in
xchg
push
xchg
cmp
lret
fildl
mov
jmp
testb
cli
jle
pushf
dec
outsb
jg
aam
dec
push
rorl
sti
je
repz
ja
xchg
cs
mov
xor
ficoms
xchg
cmc
xchg
jns
mov
aaa
lea
enter
sub
and
clc
and
repz
jp
pop
xchg
mov
mov
jge
add
clc
xor
or
es
mov
adc
dec
push
ficoms
or
dec
jb
push
xor
in
fsubrs
lds
movsl
test
push
and
add
xlat
mov
pushf
sbbl
std
cmp
jbe
lcall
inc
addl
sarl
push
pop
dec
lret
fdivl
and
arpl
pop
loope
and
push
sahf
jmp
push
imul
in
out
out
sahf
xchg
xchg
add
mov
test
repnz
jnp
cmpsb
cs
push
sbb
aaa
scas
sbb
jp
in
mov
out
cli
sti
push
pop
xor
sub
rolb
pop
push
adc
lcall
fdivrs
xchg
mov
das
sbb
fcompl
fwait
jo
mov
add
ja
jp
push
add
clc
push
xchg
xorl
mov
fnstsw
stc
adc
cwtl
mul
cs
out
scas
jmp
xor
aaa
gs
mov
cmp
stos
xchg
jb
pop
cwtl
xor
lcall
shr
mov
or
mov
sub
ljmp
cltd
pop
add
mov
mov
add
sbb
pop
push
jns
push
sub
jo
roll
inc
mov
pop
mov
push
cmp
cmp
adc
in
pop
out
push
push
mov
jmp
mov
jb
mov
or
mov
lods
inc
stc
clc
xchg
aam
jno
fsubl
jnp
out
mov
mov
lret
aad
sbb
add
andl
std
push
fmuls
jae
push
arpl
hlt
mull
test
imul
cltd
cmp
in
sbb
mov
mov
push
aam
cmp
jne
mul
cltd
into
je
mov
push
inc
les
leave
cmp
jns
xchg
in
notb
cmp
adc
push
cmp
fldl
aaa
mov
sub
or
mov
push
fadd
pop
pop
loope
sbb
jmp
xchg
mov
mov
repz
mov
jl
or
push
sbb
pop
jle
or
pop
mov
dec
jge
xor
fistl
sbb
hlt
movsl
dec
jl
sub
dec
jns
mov
add
push
sbb
sbb
popa
sbb
rcll
push
cli
fcompl
push
out
xchg
es
mov
xor
sbb
mov
push
mov
xor
pop
xor
movsb
int
pop
hlt
cwtl
adc
pop
adc
or
push
mov
pop
pop
xchg
adc
clc
adc
sbbb
shrl
mov
pusha
dec
mov
pop
adc
jl
mov
mov
loop
adc
inc
xchg
in
lret
cmpsb
sub
and
adc
es
pop
test
data16
js
cmp
mov
and
adc
out
mov
loop
jno
js
movsl
addr16
in
adc
inc
fisubl
out
xchg
add
inc
stos
lea
idivb
popa
push
dec
pop
mov
sbb
jns
or
inc
and
pop
jmp
outsl
out
push
fs
mov
inc
fsubrs
mov
sbb
cmp
shll
inc
and
mov
cmp
adc
mov
ret
pop
mov
sbb
jle
imul
cmpsb
das
add
repnz
enter
xchg
add
lock
stos
push
mov
push
sbb
movsl
cmpl
std
xchg
mov
cmp
xor
xchg
push
test
stc
xor
loope
mov
scas
sbb
mov
jns
and
pop
fmull
and
rorb
cmp
enter
and
jns
imul
jne
xchg
add
fdivrl
sahf
inc
testl
xor
stc
sub
mov
push
aad
xchg
mov
call
push
mov
ljmp
fs
mov
dec
lods
jbe
movsb
test
popf
cmp
movsl
cmp
lret
pop
adc
xchg
bound
outsl
fs
mov
arpl
cmc
mov
jg
dec
data16
je
jns
push
fs
jbe
mov
push
mov
out
fcoml
sahf
mov
jae
sti
cld
xchg
pop
or
aas
pop
lahf
scas
fcmovnbe
pop
cltd
psllq
fmull
jl
jl
mov
push
out
mov
push
in
or
stc
push
cmp
js
mov
xchg
mov
cmp
inc
lods
sub
jno
or
push
mov
test
sbb
cmp
xor
negl
xchg
dec
fsubr
gs
inc
push
or
fadds
filds
push
sub
mov
mov
cld
cld
stc
mov
pusha
jns
sahf
rorl
aaa
pop
jns
jne
rcll
jl
push
mov
add
sti
lea
cmpsb
std
and
sbb
popa
mov
popa
adc
rolb
jge
xor
js
in
pop
cmpsb
sub
fcompl
inc
jns
test
aad
push
xor
fwait
add
mov
xchg
std
mov
outsl
and
cli
dec
dec
test
mov
sarl
mov
sub
jne
das
jge
dec
pop
mov
mov
adc
scas
sbb
fsubr
xchg
pusha
pop
nop
jns
popa
jge
push
and
mov
add
sub
inc
insl
clc
fimuls
add
jb
mov
loope
scas
pusha
icebp
inc
in
xor
mov
or
mov
mov
mov
into
cmp
sbb
sbb
mov
mov
mov
pop
sahf
scas
lret
pop
adc
rolb
cld
dec
xor
push
pop
sbbl
popa
add
mov
inc
cli
sbb
and
pop
das
aad
xchg
lret
aas
cmpsl
mov
cli
jne
cld
and
adc
loope
push
pop
xchg
int3
push
and
scas
fisubl
adc
xor
das
jle
imul
arpl
aad
ficoml
sub
pop
pcmpeqd
cmp
gs
insb
sbb
sub
aas
fisubrs
pop
fyl2x
or
dec
jnp
pop
sbb
out
inc
jae
sbb
test
call
arpl
int
clc
push
sub
pop
addr16
jge
movsb
loop
pop
ret
cmpsl
and
daa
jmp
mov
cmp
insb
ffreep
ror
repz
jne
hlt
sub
stos
stc
lds
xchg
sbb
mov
popa
lock
dec
pop
out
dec
clc
push
xchg
pop
getsec
jg
pop
in
adc
push
and
sti
jl
sub
push
pop
or
xor
insb
cmp
sti
inc
fsts
push
xchg
and
in
xchg
jne
imul
mov
jle
loopne
mov
add
and
js
enter
cs
aas
in
dec
mov
daa
xchg
fldcw
mov
out
loope
jne
mov
lock
sbb
sti
stc
ds
shrl
out
jmp
inc
stos
filds
icebp
cwtl
mov
sti
inc
sub
pop
cmp
adc
sbbb
outsl
cmp
push
jae
adc
inc
push
lret
pop
es
xchg
notl
shl
and
pop
cmp
in
inc
subb
out
insb
jmp
mov
addr16
sbb
mov
jbe
xchg
dec
out
movl
scas
pop
dec
pop
pop
xor
enter
xchg
jnp
sbb
sti
mov
sub
aas
call
fldt
enter
fsubs
testl
loop
mov
inc
sarl
and
dec
pop
clc
lods
out
aas
pusha
mov
pop
das
cmp
daa
xchg
and
repnz
jmp
icebp
pop
lock
push
pop
sub
sbb
sub
cmp
repz
pop
push
mov
in
andl
and
sti
mov
mov
inc
iret
adc
mov
xorl
or
or
in
dec
shll
leave
test
jge
jg
loope
cmp
es
sbb
or
jl
push
jmp
mov
sbb
mov
and
aad
inc
dec
push
mov
mov
inc
cmpsb
loopne
scas
sbb
and
fcmovu
dec
outsl
sbb
outsb
dec
fadds
xor
pop
cmpsl
movb
fildl
out
mov
jge
rcrl
es
fsubrl
shlb
jb
gs
das
jne
test
scas
sbb
jmp
pop
les
cmp
pop
stos
dec
push
das
mov
clc
or
sbb
dec
sub
push
mov
out
add
and
js
jmp
popa
ss
push
fstpl
popf
cmp
mov
jno
dec
in
xchg
add
addr16
mov
sub
out
or
mov
loop
sub
xchg
push
inc
add
jae
in
scas
adc
mov
imul
pop
mov
or
push
cmp
dec
movsb
in
pop
and
mov
gs
mov
push
stos
or
inc
mov
xchg
pop
das
clc
sbb
lea
rclb
ficompl
push
jge
out
mov
gs
cltd
adc
xchg
sbb
std
pop
daa
sbb
inc
pop
sub
outsl
and
out
in
scas
mov
push
out
fucomi
mov
icebp
pop
cmp
mov
cmp
incl
ss
das
aaa
xor
mov
and
pop
daa
xchg
mov
cld
into
or
sub
mov
xor
pop
lahf
or
mov
and
outsl
xchg
hlt
add
fdiv
dec
xchg
fisubrl
sbb
aad
cli
shl
clc
cli
sub
bound
pop
mov
mov
in
mov
popa
arpl
repnz
sbb
xchg
pop
sbb
add
idivb
divl
cs
cmp
sub
cmpsl
and
sub
or
adc
xlat
andl
mov
iret
add
lcall
inc
leave
icebp
test
out
cmp
xchg
movsl
icebp
ljmp
ret
leave
imulb
push
xchg
es
gs
sub
add
xchg
jnp
sahf
cmpsb
insl
mov
pop
outsl
outsl
push
jne
sub
popa
sbb
push
xor
fcompl
cmp
int3
xchg
xor
or
out
into
jnp,pn
pop
pop
pop
sbb
push
lea
imul
adc
loop
xchg
inc
nop
jmp
inc
test
xchg
jns
and
cltd
sbb
popf
imul
enter
ret
inc
std
and
mov
gs
pop
int3
fdivrs
or
sub
xor
add
mov
xor
ds
push
lea
or
fwait
sbb
dec
popa
fistl
arpl
push
xchg
ds
stc
jge
imul
lock
xchg
adc
stos
jl
mov
loope
fs
xor
sbb
mov
sbb
ja
cmp
xor
in
outsb
sbb
jns
icebp
loopne
cld
fisubl
dec
jecxz
fbld
movsb
mov
aaa
xchg
sbb
out
lds
gs
push
dec
add
imul
mov
xchg
pop
push
xor
rcr
stos
pop
inc
add
jmp
sbb
arpl
shlb
scas
inc
jno
cmp
cltd
push
gs
mov
push
pop
pop
fdivrl
jno
mov
mov
hlt
pop
pop
cltd
mov
jp
fistpl
mov
aaa
xchg
sbb
mov
add
lret
and
or
fmull
pop
into
in
fildl
fs
jnp
movsl
fsubrs
dec
pop
lds
jns,pt
push
fldenv
xchg
jbe
push
xor
xlat
or
or
out
bnd
shll
push
cmp
mov
daa
or
and
das
movsbl
cmpsb
jg
fstpl
pushf
jle
xchg
cmp
call
mov
pop
notl
jge
cmp
push
pop
fwait
pop
push
mov
fildl
sti
pop
mov
adc
push
mov
sbb
ret
inc
ja
sbb
xchg
in
sbb
pop
out
inc
dec
shrb
xchg
shl
push
mov
cmpsl
es
test
addr16
shrb
pop
sub
push
cmp
mov
scas
dec
clc
pop
and
mov
cmp
dec
outsl
xchg
dec
adc
sub
and
push
mov
add
adc
in
push
push
mov
dec
dec
into
iret
xchg
aaa
push
cmpsb
push
xor
sub
pop
stos
loope
std
out
inc
push
jle
push
cmp
or
sbb
fcoms
gs
movsl
mov
pop
into
and
aad
fistps
loopne
inc
mov
das
mov
aad
fcompp
divb
add
das
adc
push
idivl
mov
or
mov
inc
inc
jnp
lahf
fistl
pusha
pop
rcrb
push
mov
xchg
mov
lcall
aas
scas
dec
jp
pop
mov
and
dec
jne
add
mov
pop
push
cltd
leave
push
inc
pand
out
cmc
add
icebp
push
jmp
in
out
ss
xor
pusha
push
jbe
imul
lret
loopne
cmpsb
dec
call
mov
jg
dec
lret
adc
dec
push
sub
movsb
mov
js
inc
call
ret
mov
cmc
sub
mov
push
adc
cli
pop
pop
inc
jg
lds
mov
pop
xchg
mov
jo
push
int3
sub
cld
xchg
mov
addr16
int3
add
dec
xchg
sbb
imul
jmp
loopne
sahf
cmp
dec
into
jbe
roll
cld
imul
in
outsl
gs
mov
jo
divb
mov
clc
pop
pop
mov
push
enter
incb
mov
repnz
mov
or
das
sti
inc
cli
push
fsubrl
push
scas
jns
xor
leave
lds
dec
xchg
sub
mov
rcll
xchg
push
add
lds
int
inc
stc
lahf
cmpsl
pop
mov
callw
outsl
dec
inc
cmp
fxch
adc
stc
sbb
fsts
and
clc
pop
mov
daa
mov
scas
je
shufps
pop
push
sub
jbe
add
pop
adc
pop
mov
lcall
out
mov
mov
sar
push
or
insb
lret
and
test
jmp
arpl
and
stos
pop
jbe
dec
inc
and
in
rcl
jl
push
into
or
adc
call
xchg
mov
or
fsubl
daa
leave
je
push
insl
sbb
pop
xchg
lods
sbb
pop
adc
and
jne
push
add
cwtl
jne
mov
rcr
mov
mov
js
aad
mov
push
pop
imul
out
mov
es
lret
adc
pop
mov
cwtl
gs
daa
push
hlt
pushf
sub
mov
sbb
mov
shll
pop
scas
call
out
or
fcomip
mov
sbb
pop
icebp
xchg
sbb
pop
jb
cli
mov
pop
dec
scas
xchg
xchg
daa
ja
xchg
cmp
outsl
call
fcomps
cmpsb
and
pop
iret
rcrl
push
sbb
mov
mov
mov
sbb
lea
push
push
jns
test
adc
cmp
add
xchg
iret
decl
cmpsb
aas
add
inc
addr16
call
mov
xchg
dec
jno
inc
jbe
leave
push
xchg
out
aad
imul
pop
mov
mov
sti
inc
pop
xchg
aaa
pop
jp
pop
bound
push
xchg
cmpsl
jp
jmp
xchg
shll
mov
adc
mov
sbb
add
push
push
adc
xor
mov
xchg
scas
xor
loopne
in
fadd
jmp
cmp
add
outsl
and
mov
cwtl
sbb
cli
mov
in
outsb
sbb
addr16
jo
mov
daa
stos
gs
mov
dec
les
sbb
cmp
pop
xchg
xchg
ja
bound
testb
push
sbb
mov
sub
adc
push
dec
ja
dec
cld
mov
andl
mov
insl
js
sub
xor
rorl
xchg
shl
cmp
or
aam
or
andb
cmp
mov
mov
push
cld
or
fsubs
lret
subb
or
inc
dec
push
inc
or
mov
pusha
pop
inc
lods
aad
xlat
pcmpeqd
sub
mov
mov
or
pop
sub
es
es
pop
mov
out
sbb
into
call
fs
xchg
stc
xchg
xchg
je
pop
test
jne
push
sti
imul
mov
fsubs
cmc
cwtl
lock
pop
xchg
call
or
rcrb
cli
inc
fsubs
call
jne
cmp
setp
fldenv
clc
dec
push
pop
sbb
sub
dec
add
clc
cmp
inc
sbb
lods
in
ds
and
mov
sub
std
lea
push
xchg
cmp
xchg
rolb
ret
mov
in
sbb
neg
push
jle
xor
sti
dec
pop
fdivrl
daa
les
jle
mov
cwtl
addr16
dec
popl
pop
sub
inc
iret
das
mov
cmpsl
add
sahf
clc
xor
popf
jne
dec
sarl
mov
adc
subl
cltd
jle
loop
dec
aas
jb
inc
add
fmuls
dec
gs
cbtw
insl
addr16
ja
jbe
pusha
daa
fcoml
sbb
pop
jne
sti
ja
xchg
pop
adc
pop
mov
fcomps
jae
aaa
popa
daa
jmp
sbb
test
sbb
inc
frstor
pop
xchg
mov
test
int3
shld
mov
shlb
or
sbb
call
push
rorb
stc
jecxz
pushf
or
in
lods
push
pop
jnp
aaa
jl
jecxz
mov
jmp
mov
dec
xor
jae
testl
xor
xor
loop
std
mov
outsb
das
jecxz
out
sub
or
faddl
cmpsb
stc
or
pop
adc
dec
ret
xchg
stos
ret
mov
mov
stc
mov
jns
mov
pop
push
enter
or
test
in
xchg
dec
cs
aad
sti
lea
mov
mov
das
cs
cmp
push
cs
mov
jb
mov
call
lret
aas
sbb
lods
jge
fisubs
push
stc
jo
aam
jg
jae
in
aad
pop
js
daa
cmpps
rcrb
outsl
mov
imul
addr16
mov
mov
out
adc
add
mul
in
cmp
mov
mov
pop
int3
fwait
sbb
scas
shlb
pushf
xchg
sarb
decb
lcall
in
fadd
mov
arpl
scas
lods
sbb
jmp
out
nop
dec
push
jge
jne
negb
fisubrs
into
sub
or
test
sub
fstps
das
mov
clc
mov
call
aad
mov
daa
ja
pop
cs
loop
push
mov
inc
inc
mov
mov
aas
decb
sub
fsts
ja
scas
lea
lods
inc
insl
leave
pusha
add
pushf
inc
jne
lcall
pop
push
aas
scas
mov
imul
ja
cmp
and
pop
lcall
mov
add
ss
add
imul
add
addl
mov
mov
popa
mov
mov
pop
jle
inc
and
sbb
in
pop
lret
sarl
mov
push
sub
push
shll
jne
and
call
je
or
sbb
sub
aas
icebp
sub
cld
ds
outsb
ja
inc
sbb
lret
jmp
call
int
push
sbb
xchg
push
pop
leave
xor
sbb
push
push
jne
mov
adc
andb
cli
sub
mull
mov
sti
out
gs
fmuls
sbb
add
jnp
pop
pop
shrl
stc
jge
gs
adc
lahf
movsb
fdivl
xor
int
or
fcomp
enter
inc
push
jg
jbe
clc
fs
gs
pop
jns
out
or
and
movsb
and
and
sbb
int3
dec
add
jp
ljmp
sub
repz
jns
mov
aaa
iret
mov
jnp
cmpsb
inc
bound
sahf
fmull
jge
jl
push
xchg
pop
lret
jmp
mov
sub
cs
test
mov
imul
repz
cmpsl
push
js
mov
fcom
dec
sub
cmp
mov
es
stos
je
out
ret
and
jg
outsb
add
push
jbe
dec
push
mov
cli
inc
mov
lret
fdivrs
inc
mov
mov
adc
loope
and
push
scas
pushf
mov
lahf
mov
or
gs
mov
xchg
fistpl
out
sbb
popw
pop
push
cmpsb
fcomp
fsts
sbb
das
fidivrs
xchg
or
cmp
xchg
popf
cs
or
out
pusha
and
sti
mov
scas
ljmp
insl
push
outsl
adc
mov
push
incl
dec
cld
cld
leave
pop
in
xlat
fisttpl
jae
cwtl
mov
pushf
mov
aam
dec
mov
push
outsl
inc
dec
push
xchg
jecxz
je
sahf
pop
cmc
xor
cmc
test
movsb
add
in
xchg
jl
xchg
dec
inc
cltd
jae
and
xor
xchg
add
pushw
push
data16
stos
dec
xchg
es
popa
sub
fxam
in
lret
mov
push
push
lcall
mov
shlb
jl
adc
push
ret
sub
nop
popl
mov
ja
xchg
popw
faddl
xchg
xor
cli
mov
mov
inc
and
dec
sub
push
outsl
idivl
scas
sti
jp
jmp
dec
add
and
or
cmc
ljmp
cmp
pop
data16
test
sbb
pop
outsb
pop
mov
pusha
push
out
xchg
mov
sub
das
mov
mov
fcomi
xchg
or
sbb
jg
cs
ficoml
sub
mov
scas
outsb
fucom
mov
jp
aad
ja
enter
xor
icebp
std
clc
call
icebp
and
pop
fists
outsl
fcom
ret
and
sbb
cmp
std
in
andb
lea
mov
fucomp
ja
fcompl
mov
or
cmp
cmp
mov
xchg
adc
movsl
in
cmp
imul
sahf
mov
push
cmc
mov
add
int3
sahf
xchg
ljmp
cmpsl
das
mov
mov
std
es
mov
xchg
loop
cwtl
jge
insb
into
repnz
push
xor
mov
pop
outsl
movsl
lea
inc
or
daa
cmpsb
sbb
push
ja
sub
aad
cmp
aaa
jge
mov
mov
idiv
cmpsb
sub
mov
pop
in
stos
pop
arpl
leave
dec
add
sbb
clc
jo
lahf
jmp
mov
out
mov
dec
clc
gs
in
nop
push
in
jmp
inc
mov
push
lock
dec
push
xchg
in
cltd
sbb
jne
imul
gs
leave
js,pn
jmp
imul
popl
and
mov
jl
jb
xor
fmull
sbb
jbe
or
imul
push
rclb
out
test
fildl
mov
fwait
out
mov
push
je
dec
and
xchg
fwait
gs
scas
jb
jne
lret
outsl
lock
mov
sub
fwait
jbe
dec
sahf
sub
fisttpll
mov
pop
and
adc
jl
jae
xchg
aam
ret
fmuls
arpl
inc
or
fs
or
int3
and
sbb
in
fdivs
xchg
ret
and
jle
mov
jle
fsubs
shrl
xor
push
jle
das
scas
adc
out
or
cmpl
hlt
mov
dec
mov
add
pusha
sti
sub
rcrb
sbb
dec
hlt
ret
mov
sub
scas
in
push
shll
sarb
out
cli
inc
rcrb
and
pop
xchg
jns
inc
mov
insb
fstps
push
push
sbb
mov
add
jae
scas
push
and
negb
lcall
in
loopne
mov
test
ss
leave
fmuls
mov
mov
mov
cs
or
jge
xor
fwait
jb
dec
pop
sbb
mov
adc
pop
lret
jecxz
xor
imul
clc
jns
adc
mov
cmpxchg
jbe
jno
mov
dec
or
cmpsb
inc
cld
push
jne
stos
push
call
fcomps
fcoml
pop
mov
dec
pop
mov
push
enter
faddl
jae
mov
ret
mov
jnp
dec
add
fnstenv
xchg
ss
nop
push
test
in
in
pop
cli
aam
jmp
cmp
jbe
cmp
sahf
out
push
mov
in
and
scas
in
cmp
cli
or
sbb
sbb
leave
test
pop
mov
rol
xchg
xchg
mov
sbb
and
mov
outsl
pop
loopne,pt
lock
sti
int3
pop
dec
pusha
or
pop
inc
dec
das
add
out
lods
out
in
gs
sbb
mulb
adc
pop
mov
mov
and
inc
out
ljmp
scas
push
sub
sbb
add
push
dec
insl
lods
fidivrl
add
inc
outsb
pop
sub
outsb
lahf
push
decl
stos
sub
insb
clc
imul
sub
test
movb
adc
xchg
jmp
xchg
popl
testl
fdiv
sti
and
sub
jp
jp
std
ja
addr16
fdivrs
and
xchg
popa
shl
idiv
cmp
negl
and
stos
push
jmp
and
or
mov
in
xor
pop
mov
pop
ficomps
lds
push
movsb
hlt
fs
cs
out
pop
repz
pop
out
loop
mov
pop
dec
jbe,pn
test
jge
mov
sub
push
xchg
add
out
mov
bnd
inc
pop
cld
xor
cltd
push
sub
daa
shll
xor
mov
cld
mov
scas
and
cmp
ss
jnp
test
loope
nop
inc
call
flds
arpl
pop
pop
les
mov
xor
push
sti
push
mov
out
and
and
mov
fists
xor
cmpsl
in
adc
in
pop
movsl
mov
leave
mov
call
cs
nop
aaa
or
push
loope
in
inc
add
movsb
xchg
lret
sub
nop
xor
xchg
in
addr16
pushf
dec
add
std
jno
xor
pop
jmp
inc
fldcw
mov
cmpsb
jo
aas
iret
into
xchg
pop
addr16
ficoml
adc
test
push
scas
fnstcw
setp
and
lahf
sub
sbb
gs
and
pop
loope
pusha
test
sti
or
gs
mov
mov
lret
out
mov
push
jmp
inc
cmp
sub
stos
and
xlat
inc
sub
sub
pop
shl
sbb
cwtl
shlb
adc
aas
adc
gs
jecxz
ret
push
and
sbb
jmp
xchg
and
bswap
lahf
pop
pop
xor
or
loop
mov
mov
imul
scas
or
insb
xchg
or
jne
xchg
inc
int3
pop
and
les
jge
xchg
pop
mov
lea
mov
subb
je
enter
push
lods
es
xchg
shlb
sub
sub
xor
jne
jns
jbe
push
test
in
jl
pop
daa
mov
fistps
das
push
pop
cwtl
scas
sbb
xchg
fisttpl
mov
data16
and
adc
mov
cmp
rcrb
scas
push
roll
inc
jl
insl
shlb
fisttpl
pop
mov
or
loop
xor
push
das
pop
mov
mov
js
aaa
aas
cwtl
mov
cli
jbe
lahf
inc
invd
lods
pop
jmp
daa
push
das
push
imul
cmp
cmc
stos
sub
mov
jmp
scas
mov
cs
int
and
int3
mov
fsubrl
push
sbb
das
push
cmp
outsl
xchg
stc
fcomps
sub
test
push
into
add
fsubl
sub
fs
adcb
push
mov
repz
fcoms
sbb
jns
jne
shll
data16
and
movsl
pop
in
pop
jge
lret
mov
loope
add
push
outsb
clc
push
jnp
divl
addr16
lds
pop
out
add
pop
and
jns
push
add
mov
mov
movsb
jo
dec
inc
fs
and
call
jo
and
mov
inc
cs
add
mull
mov
ljmp
adc
repnz
sbb
test
stc
cmp
daa
jne
add
mov
xchg
sub
pushf
add
jmp
mov
xor
jp
xor
ljmp
lds
cmp
lret
push
sbb
cmpsl
push
push
mov
push
sbb
imul
xchg
clc
xor
xchg
adc
push
push
pop
sbb
xchg
add
adc
sbb
mov
cmp
or
movsb
out
testl
xchg
testl
daa
pop
psrlq
inc
or
and
les
loop
jne
pushf
jnp
fsubrl
dec
andb
ret
adc
inc
xchg
add
push
lock
xchg
add
stc
pop
xchg
ljmp
cmp
sub
push
push
sbb
push
stos
aaa
test
mov
pop
mov
out
das
push
imul
sbb
clc
push
addb
push
aas
mov
jge
mov
xchg
movsl
insl
sub
pop
cmp
xchg
cli
jb
dec
in
xchg
jg
jmp
or
and
cld
stos
pop
inc
or
cli
xchg
mov
cmp
adc
jbe
sub
aad
inc
mov
lcall
dec
cld
aaa
cwtl
popf
bound
mov
xchg
ljmp
add
jnp
dec
aam
pop
and
cli
into
popf
mov
insl
scas
or
inc
pop
fwait
sbb
out
jb
mov
jne
dec
loope
push
stos
xor
pop
out
iret
icebp
lret
cmpsb
fstps
in
adc
xchg
sti
fisubrs
aaa
pop
push
lea
dec
xchg
inc
in
cmp
call
jne
xchg
pop
and
sbb
sbb
sub
sarl
mov
sbbl
loope
in
loopne
cmp
insb
add
pop
pop
shlb
xor
fcomp
xor
outsb
xchg
std
xchg
dec
dec
mov
ficoms
insb
cmp
inc
mov
pop
adc
movsl
sbb
scas
cmpsb
cmp
cld
ror
ds
sbb
insl
addr16
sbb
or
dec
pop
xchg
xor
cmp
jo
adc
mov
fsubs
mov
cs
xchg
scas
sub
fxch
les
arpl
sbb
cmp
adc
scas
cwtl
clc
js
mov
jge
repnz
out
dec
mov
xor
push
pop
out
jge
push
icebp
sbb
jmp
test
add
sahf
sub
xor
cmpsl
sbb
pavgw
outsl
adc
es
pop
cmpsb
lds
outsl
push
dec
outsb
sti
add
lret
sub
orl
mov
mov
jge
pop
aas
sti
lods
xchg
scas
hlt
sbb
sub
xchg
int
jnp
jg
clc
out
xor
clc
or
mov
stos
popf
pop
ror
xchg
mov
sub
ja
mov
mov
sub
lods
fldenv
ret
or
scas
in
sub
int3
push
push
mov
sub
mov
lcall
jo
faddl
test
mov
or
jo
in
test
sbb
fldcw
mov
aaa
addr16
mov
ds
add
fisttpll
xchg
fisttps
clc
stc
sbb
fstps
imul
or
fidivs
out
loop
ja
enter
repnz
call
fcomps
add
pop
pusha
lcall
sbb
pop
pop
xor
in
loopne
movsb
cltd
sbb
outsl
fstpl
mov
cld
mov
mov
cwtl
sub
cmp
sub
cmp
fsubrl
pop
lret
fwait
mov
mov
or
dec
mov
dec
sbb
out
pop
mov
add
lock
in
in
outsl
call
sbb
pop
cmp
cmp
fucomp
jnp
addr16
pop
cwtl
outsl
mov
cmpsb
xchg
testl
sbb
cmp
lock
mov
pop
data16
arpl
inc
pop
popa
lock
stc
mov
fwait
sbb
stc
mov
call
sbb
inc
lock
sbb
lahf
outsl
pop
clc
pop
sbb
lock
stc
stc
sbb
data16
outsl
and
and
mov
stc
jle
mov
jp
mov
mov
add
inc
loop
and
inc
mov
xchg
bound
in
les
bound
call
lock
sub
out
xor
aas
addr16
sbb
pop
ret
lock
and
inc
fsubrs
clc
jns
jp
pop
lock
jge
pop
aas
outsl
inc
clc
popa
sbb
stc
fsts
push
sbb
sbb
clc
sbb
cmp
jge
cltd
repz
jo
add
clc
and
and
addr16
sahf
lock
lcall
lcall
sbbb
cmpsb
repz
and
outsl
add
add
inc
pop
jg
mov
add
sbb
outsl
cmp
sbb
stc
sbb
cld
outsl
stc
inc
lahf
sbb
and
inc
test
cmp
sbb
cmp
cmp
cmp
cmp
pop
mov
call
and
call
mov
ljmp
sbb
cmp
js
fs
testl
cmp
sbb
cmp
lock
fadds
jecxz
and
cmp
sbb
pop
and
aas
stc
push
sbb
ficompl
cwtl
pop
push
pop
data16
gs
and
clc
and
add
lock
mov
mov
pop
pop
lock
ret
add
jecxz
loop
add
lock
ficomps
mov
pop
sbb
mov
flds
sbb
loop
and
lock
stc
push
sbb
outsl
sbb
out
jae
sbb
std
fsubrl
clc
sbb
clc
sbb
fs
and
out
pop
ljmp
clc
xchg
cmp
sbb
arpl
cmp
out
out
lahf
aaa
fistpll
push
sbb
pop
or
dec
stc
pop
sbb
icebp
outsl
push
jo
andb
sbbl
pop
add
icebp
stc
adc
xor
add
insb
pop
stc
ja
xor
fwait
adc
xchg
lock
stc
push
sbb
outsl
mov
add
mov
fcomps
sbb
call
pop
mov
outsl
arpl
sbbb
pop
mov
cmp
sbb
pusha
outsl
mov
pop
and
xchg
stc
pop
sbb
cmp
clc
cmp
sbb
stc
rcrb
jecxz
cmp
sbb
int3
loopne
stc
stc
sbb
pop
sbb
stc
inc
sbb
outsl
ret
sbb
pop
mov
pop
sbb
jl
jge
sahf
lock
inc
sbb
arpl
clc
out
cmpsb
jnp
and
clc
pop
sbb
pop
mov
out
mov
popf
and
sub
or
xor
int
mov
push
aam
xchg
pop
xor
aam
fwait
push
std
dec
in
pop
outsb
repz
pop
push
add
scas
clc
mov
insl
sbb
sbb
stos
cs
js
sti
outsb
mov
ljmp
mov
int
mov
ds
cwtl
movntps
dec
pop
add
dec
movswl
ds
out
push
adc
pop
sbb
nop
lea
cmp
push
mov
pop
out
or
cld
ss
ffreep
nop
pusha
jecxz
outsb
mov
and
in
sahf
mov
ror
popa
dec
inc
cmp
mov
or
lods
test
inc
sub
jp
imul
inc
sub
jle
cs
mov
pop
xchg
in
adc
inc
pop
cld
stos
arpl
cmp
push
mov
ret
sub
pop
fs
jne
inc
cmp
popf
ret
loope
sbb
repz
cmp
lods
push
mov
sbbb
adc
pop
stos
fwait
loope
dec
sbb
fcmovnbe
je
aas
dec
addl
imul
fdivrl
mov
cltd
stos
int
cmp
mov
add
cli
jnp
in
fstp
jecxz
mov
sbb
in
mov
out
dec
add
sub
outsb
inc
test
lock
sbb
jo
pop
pop
sbb
std
sbb
mov
pop
mov
gs
add
pop
std
shrl
in
mov
inc
mov
lahf
sbb
add
xor
sti
fdivrs
mov
vcvttps2dq
xchg
cli
mov
pop
dec
clc
lcall
sti
or
pop
cmp
add
and
cwtl
push
inc
jecxz
cld
in
jo
sbb
stos
pop
addr16
lock
cmp
fsubs
mov
add
imul
sub
bound
cltd
add
and
nop
cmp
jns
xchg
fwait
cmp
xor
dec
rcr
add
mov
pop
add
lods
xchg
or
pop
sub
or
adc
cs
test
adc
pop
pop
imul
or
add
js
std
sbb
mov
jns
and
inc
sbb
aad
lcall
fisubs
pop
sbb
inc
or
adc
pusha
fdivrl
mov
js
popf
addr16
sbb
sub
insl
pop
lds
and
inc
jae
insb
sbb
mov
mov
popa
leave
in
cmc
jnp
push
jne
fstpl
add
jge
mov
idivl
mov
dec
cmp
push
fidivrs
js
pop
pop
mov
pop
icebp
cwtl
sti
cmc
cmp
pop
imul
mull
and
sbb
adc
inc
dec
cmp
xorb
insb
dec
adc
jl
int3
sbb
loope
stos
xchg
jns
xchg
add
lret
std
jge
icebp
bswap
int
pop
jno
outsl
pop
jp
clc
or
and
pusha
cvtps2pi
sbb
je
jmp
and
xchg
and
cmp
shl
push
or
ds
mov
ja
cli
imul
or
sub
leave
mov
fdivr
mov
fwait
or
pushf
in
and
into
out
sub
pop
cltd
cli
cltd
mov
sub
fdivr
or
in
lods
lret
pop
sbb
xchg
gs
movsb
fwait
icebp
inc
cmp
push
test
jg
xor
data16
fisubrs
lods
movsb
test
cltd
addb
in
or
mov
out
and
dec
roll
in
pop
mov
insl
or
in
jb
fcoms
mov
pusha
cltd
pushl
jmp
sbb
fs
lahf
mov
out
mov
dec
fiaddl
sbb
pop
dec
or
lea
pop
inc
hlt
jmp
cmp
sub
lods
pop
xchg
imul
sbb
sub
pop
xor
push
adc
sbb
add
fdivrs
fmull
and
lcall
fnstenv
arpl
fisttpll
sbb
adc
sbb
shrl
push
pop
test
add
pop
push
fwait
sarl
lods
sbb
pop
pop
pop
psubd
cld
aaa
mov
jne,pn
imul
out
pop
add
repz
mov
sbb
lds
pop
lahf
fwait
push
or
clc
in
jae
fdivrp
clc
sub
pop
iret
dec
sti
mov
xor
icebp
adc
sbb
loopne
fs
or
sub
sbb
fdivrl
popf
pop
repnz
imul
mov
arpl
jmp
push
outsb
cmp
stos
fs
sti
shr
pop
sub
clc
pop
pop
and
icebp
mov
sub
jo
stos
mov
cmp
mov
and
popa
pop
fisttps
pusha
in
jmp
je
mov
int3
push
pop
jns
sbb
mov
fcoml
push
mov
pop
sti
out
incb
orl
lods
pop
in
sahf
ja
imul
cs
mov
fidivs
outsl
call
jmp
mov
and
fstps
sbb
pop
mov
es
jnp
and
sub
adc
push
pop
pop
mov
dec
xchg
lods
out
in
sbb
fcoms
ja
cmp
xchg
stc
sbbl
dec
add
xor
popf
dec
or
cmc
cmp
rorb
cmp
mov
es
mov
mov
push
pop
and
adc
outsb
out
cmp
stos
outsl
addb
sub
pop
andl
push
inc
jp
in
pop
cltd
pop
lea
cli
or
testb
jge
push
out
mov
gs
js
fsubrl
outsl
cld
outsl
cmp
pop
and
adc
ja
mov
and
mov
shll
jecxz
inc
mov
packuswb
sti
into
outsb
inc
mov
mov
mov
sub
out
std
xchg
inc
sub
jae
add
or
fwait
and
test
and
jne
pop
sbb
mov
pop
xor
add
or
decl
cltd
leave
gs
in
add
imul
sbb
mov
sub
ret
push
imul
mov
push
insl
pop
daa
dec
idivl
scas
ds
loop
mov
mov
fnstenv
sbbl
js
repnz
insl
jae
add
std
movl
lds
inc
add
jp
dec
jae
negl
pop
xchg
or
fwait
inc
sbb
sbb
mov
stc
scas
aam
js
fdivrl
ja
cmp
pushf
xor
jl
and
dec
out
loope
pop
lea
in
bound
cmp
mov
sub
add
in
imul
push
mov
inc
cltd
shlb
cld
std
sbb
fstpl
push
daa
adc
sbb
repnz
lods
mov
lret
add
sub
in
negl
stc
add
clc
xorl
or
add
out
fnsave
dec
sbb
mov
adcl
jmp
add
xchg
cwtl
lcall
bound
ja
imul
xchg
sbbl
dec
andl
imul
or
inc
or
or
jnp
loope
dec
fwait
sbb
sbb
fdivrl
add
mov
cmp
cld
dec
adcl
jo,pn
and
fsubs
or
mov
sub
cwtl
mov
sbb
push
pop
xchg
mov
pop
aas
xor
mov
or
imul
and
jl
lods
jb
dec
stc
test
lock
packsswb
add
jbe
ds
jb
add
inc
pop
jle
lock
arpl
push
bound
je
pop
add
pop
jo
jne
inc
or
xor
sub
rcrl
sub
in
fxch
mov
outsb
or
aaa
aas
aas
cld
xchg
fsubrs
outsb
xchg
pop
test
fwait
jg
inc
pop
cs
repnz
movsb
push
popa
xchg
stos
popa
jl
arpl
and
cmp
imul
lods
ret
sbb
outsb
pop
outsl
cmp
jecxz
push
aad
sub
insl
adc
mov
sub
cmpsb
dec
aaa
rcrb
sub
lods
in
mov
push
xchg
sbb
pop
dec
lret
mov
movsb
add
sbb
jne
add
movsl
dec
mov
test
andl
mov
mov
roll
ret
cld
js
or
or
adc
jnp
pop
xor
dec
stc
mov
call
mov
mov
jmp
sti
and
or
and
fdivrs
or
rorl
fldl2t
cmp
sar
and
sub
jo
test
addr16
pop
mov
and
push
mov
jnp
jns
popf
sub
and
jg
cmp
and
or
imul
std
fimuls
dec
arpl
outsb
out
sbb
cmp
stc
scas
lds
in
lret
clc
icebp
test
js
and
push
clc
or
cltd
xor
add
xor
stos
icebp
add
pop
add
into
arpl
pushf
out
pop
xchg
adc
jae
mov
sahf
sbb
pop
fiaddl
sub
pop
js
dec
adc
add
mov
jg
call
xchg
jbe
sahf
mov
jle
aad
dec
sti
xchg
xchg
movsb
mov
imul
jns
es
pop
jb
and
or
ljmp
out
sub
cs
push
stc
fdivl
in
jne
iret
popa
and
loopne
sub
jnp
sbb
push
popa
ja
test
movsl
add
sbb
out
loop
out
iret
fdivrl
sbb
fnstcw
mov
sbb
fistps
mov
sub
mov
lret
in
lahf
pop
sub
jnp
mov
inc
ds
pop
jns
inc
jp
imul
cmp
jle
lock
xchg
fdivrs
sub
imul
mov
ljmp
mov
jl
popa
mov
pop
inc
pusha
cmp
mov
xor
stos
and
xor
dec
ja
imul
fsubrl
lds
pop
into
stc
and
jne
jecxz
aas
popf
int3
jge
pop
lds
sub
xchg
push
repnz
imul
fsubrp
ds
loopne
push
fwait
add
cmp
sti
push
jne
inc
cli
std
inc
test
inc
mov
sbb
pop
and
add
sub
sbb
sbb
cmp
and
mov
mov
popa
in
jmp
and
fmuls
cmp
cld
push
and
dec
decl
fstps
xor
movsb
sbb
pop
cmp
negl
popa
mov
cmp
jecxz
add
jo
ljmp
jmp
pop
pop
pop
outsl
pop
icebp
addr16
repz
idivl
addr16
mov
in
dec
in
popf
int
arpl
bound
cltd
imul
lahf
inc
pop
jmp
pusha
shl
loopne
and
add
fsubs
mov
das
lea
pop
pop
or
push
out
pop
jl
arpl
cmp
fs
lock
mov
lret
lahf
jo
out
loopne
fwait
loop
or
jl
sbb
stc
pop
sub
pop
fucom
lock
pop
mov
pop
cwtl
mov
pop
mov
sbb
cmc
andb
dec
pop
jmp
xor
bound
pop
cmpsl
testl
fmul
mov
insb
push
mov
cmc
mov
les
lahf
xchg
fwait
gs
cmpsb
bound
jne
pop
enter
sbb
jmp
sub
stc
pusha
data16
add
push
pop
test
cmp
pop
add
jo
ljmp
out
insb
cmp
pop
pop
icebp
notl
pushf
stc
popf
pop
jmp
sbb
sub
fucomp
cld
xchg
jl
or
arpl
xchg
popa
pop
fadds
cwtl
ficompl
fnsave
pop
mov
jmp
sbb
pop
jmp
mov
and
cmp
pop
mov
mov
les
pop
add
lock
mov
mov
and
mov
ds
adc
pop
pop
mov
add
or
jmp
fstps
or
pusha
add
sub
push
xchg
cmp
pop
loopne
imul
mov
sub
in
testb
fstps
ljmp
daa
pop
add
loopne
clc
or
div
pop
pop
sbb
and
push
lahf
js
out
daa
sbb
pop
and
testb
fmull
mov
punpckhdq
pop
arpl
out
rcrl
in
testb
ret
cwtl
cmpl
loopne
testb
mov
pop
pop
arpl
call
lcall
fsubs
cmc
ljmp
xor
fs
ljmp
outsl
mov
bswap
inc
sub
outsb
data16
lahf
mov
flds
mov
negl
mov
inc
lcall
fwait
cmc
pop
jle
inc
loope
flds
adc
xchg
sbb
add
pop
frstor
pop
push
pop
hlt
xor
ljmp
inc
fisttpl
push
stc
pop
fistps
xor
or
and
popa
push
arpl
and
pop
in
fcoml
pop
ljmp
pop
pop
loop
pop
sub
notl
jo
pop
cwtl
fstpt
push
sbb
fs
arpl
sbb
jecxz
lock
pop
popa
and
fnstenv
pop
or
lock
arpl
and
pop
pop
mov
lock
lds
cwtl
sub
data16
and
mov
stc
inc
jmp
stc
pop
cld
pop
sbb
pop
xor
pop
es
push
adc
imul
arpl
stos
xchg
jmp
inc
pop
sub
stos
cmp
sbb
mov
sub
xor
lcall
adc
pop
frstor
sbb
add
inc
imull
clc
xor
out
popf
and
pop
and
fcom
and
or
cwtl
pusha
pop
stos
jmp
fwait
sub
mov
int
inc
cmp
enter
inc
mov
call
sbb
sbb
dec
mov
adcb
lahf
daa
cmp
pop
inc
std
call
dec
adc
cwtl
pop
std
fcompp
mov
and
sbb
fcoms
adc
fstps
sub
loope
clc
mov
fistps
push
mov
and
test
mov
int
xor
insb
xchg
arpl
xor
mov
pop
push
pop
fsubr
cmp
sbb
sbb
or
mov
ds
int3
adc
gs
cltd
jg
push
sub
movsl
pop
lock
xor
pop
sahf
out
jno
or
imul
icebp
and
std
adc
test
out
out
push
cmp
and
int3
pop
xor
jne
hlt
out
xor
and
sbb
jnp
addl
testl
pop
fadds
push
mov
in
in
add
out
insl
pop
addr16
mov
fcompl
ds
pusha
ljmp
nop
sahf
das
sahf
pop
stos
cmpsb
cs
subl
adc
sub
cltd
dec
out
daa
aaa
jecxz
inc
xchg
sbb
arpl
outsb
iret
jmp
add
adc
std
out
icebp
mov
ljmp
jmp
aam
call
shl
cmpsb
push
fucomi
mov
repz
test
lock
fistpl
jmp
inc
pop
roll
and
pop
cmp
lahf
in
daa
addr16
mov
jge
cli
pushf
pop
adc
in
aaa
ljmp
xchg
loop
movsl
push
in
sbb
movsb
mov
dec
push
mov
fdivs
fmull
push
cmp
fisubs
js
push
dec
out
scas
or
push
pop
jmp
or
insl
fdivrl
jno
into
jo
pop
mov
cmpsb
add
sbb
or
aas
sti
ficomps
fisubrs
mov
jmp
int
sub
xor
popf
xchg
sti
out
sti
pop
in
pop
or
sti
stos
push
sbb
das
outsb
ret
ljmp
sub
fidivs
sbb
stos
in
decl
cmp
sub
jg
insb
std
cld
sti
sbb
pop
mov
pusha
cmp
pop
lret
clc
sub
dec
stc
add
pop
add
fiadds
scas
loope
out
addr16
popf
pop
sub
sbb
loopne
in
jg
push
jo
lods
push
add
push
sub
mov
adc
dec
or
imul
jo
insl
sub
fisubrl
lock
in
mov
sub
cmpsb
add
fcomps
mov
and
push
pop
orl
imul
cli
xor
mov
add
push
gs
pop
sub
and
sbb
and
fwait
cmp
sub
cmp
std
fidivrs
xchg
ficompl
stos
fsubrs
inc
cmpsb
pop
out
sbb
int
adc
sbb
subb
or
cli
mov
outsb
sub
clts
xor
addr16
clc
faddp
arpl
or
pop
imul
pop
negl
pop
and
in
insl
pop
pop
cmpsb
pop
gs
pop
sbb
std
bound
sbbb
pop
out
mov
and
rcrl
jmp
popf
or
xlat
and
sbb
pushf
jge
jae
insl
dec
pusha
loopne
add
pop
pop
lret
fisubs
movsl
cld
mul
loopne
sub
sbb
pop
pusha
in
xchg
mov
push
sbb
cli
loope
ja
icebp
out
sub
inc
pop
imul
js
mov
mov
daa
dec
stos
int3
xchg
push
adc
sbb
jmp
outsb
fwait
dec
insb
or
pop
repnz
pop
push
out
pop
mov
in
mov
outsb
push
push
in
fldenv
div
inc
xchg
jb
mov
clc
sbb
or
jecxz
mov
cwtl
push
pop
inc
xchg
or
arpl
jle
pop
and
imul
sbb
sub
sub
mov
sbb
gs
scas
mov
mov
int
sti
jecxz
addr16
jl
and
pop
or
arpl
filds
cwtl
jbe
cwtl
call
cli
jnp
in
fistps
int
in
mov
and
pop
pop
fcomp
mov
out
mov
pop
sbb
lcall
sub
ret
adc
jp
insl
pop
and
mov
lahf
sbb
xor
pop
push
lods
dec
or
pop
cmp
and
push
test
pop
movsl
mov
sbbl
decb
fisubrl
add
sti
push
ret
test
pop
inc
cmp
int
jmp
add
jb
mov
or
ret
cmp
mov
aaa
jo
jae
pop
enter
xlat
jb
popf
sbb
repnz
xchg
pop
loopne
fldenv
fdivrs
pop
fstps
jmp
dec
lock
mov
add
ljmp
pusha
pop
and
cmp
loope
das
stos
pop
or
mov
cs
mov
nop
pop
add
sbb
xchg
jnp
inc
fdivrl
imul
clc
dec
rcr
mov
jg
test
mov
pop
sbb
lock
sbb
dec
pop
add
je
pop
jnp
fdiv
push
and
add
mov
mov
jae
mov
and
xchg
inc
cmp
pop
lahf
pop
lods
push
js
lods
jmp
std
int3
popf
insl
mov
xchg
ficoms
cmp
movsl
addr16
stos
insl
mov
xor
je
add
push
in
lret
pop
ficomps
xchg
xor
xchg
inc
mov
std
mov
cmp
pop
adcl
jecxz
stos
cmp
mov
data16
ljmp
push
xchg
pusha
imul
pop
in
fmuls
fsubrp
sbb
sahf
pop
pop
pop
jecxz
repnz
fs
test
push
pop
negb
negl
xor
xor
sub
mov
mov
insl
and
sbb
loope
int
or
pop
xor
pop
ds
pop
and
or
mov
sub
mov
sbb
xlat
mov
and
pop
sbb
sub
std
popa
loopne
imul
fsub
ja
loope
xchg
call
adc
repz
jecxz
jg
imul
mov
or
push
sbb
and
and
add
pop
push
pusha
cmp
inc
jge
sbb
sbb
fldcw
cmp
sub
int
cli
add
int
xor
loop
push
test
sbb
mov
and
push
mov
pop
frstor
fs
xlat
add
filds
fwait
cmp
mov
out
pop
xchg
inc
in
pop
sub
cmp
cli
sbb
pop
stos
mov
hlt
insl
cltd
pop
and
jno
pop
cmp
loope
out
sub
jp
sbb
out
cmp
outsl
and
cmc
lcall
jg
pop
je
clc
push
ret
pop
dec
pop
sub
xchg
jnp
and
pusha
loopne
mov
bound
leave
loopne
xlat
pushf
mov
mov
mov
and
mov
inc
fucomip
cld
cltd
pop
xor
and
loopne
in
sub
xchg
pop
popf
pop
test
into
cli
in
and
scas
pusha
cmp
or
sbb
adc
lea
fidivrs
imul
mov
ds
cs
out
mov
mov
int
out
ficoms
ljmp
and
fwait
add
shrb
popf
or
pop
and
loopne
dec
and
mov
mov
aas
pop
hlt
call
xchg
xchg
pop
mov
pushf
int
into
enter
test
in
subw
fnstcw
aaa
lock
cmp
sub
fsubs
add
push
inc
pop
cld
sbb
mov
clc
sub
lods
fidivrs
sbb
xchg
dec
int
or
cmp
xchg
pop
xchg
insb
cmp
cld
dec
mov
cli
cld
mov
cmp
rcrl
pop
fsts
or
lds
dec
jg
add
and
arpl
cmpsb
sbb
fcompl
imul
or
mov
cld
sub
inc
cld
fnstenv
xor
add
dec
cmp
pop
xchg
in
pop
jle
fidivrl
push
test
lock
jne
lods
inc
sub
cld
subb
ret
insb
jno
pop
icebp
sbbl
sub
outsb
imul
insl
mov
or
into
sti
fdivs
cwtl
aad
scas
cmp
fcmovbe
testb
cwtl
mov
pop
int
mov
mov
and
shl
cmp
mov
jae
xchg
mov
xor
jge
arpl
int
sbb
cld
xchg
sbb
imul
das
sbb
mov
ja
sub
cltd
fdivrs
xor
adcl
fidivs
stos
fwait
rclw
fwait
xchg
jmp
adc
xchg
shrb
rol
sbb
les
mov
pop
or
push
scas
sbb
sbb
fcom
push
fdivp
fs
pop
mov
mov
out
pop
push
and
or
sbb
pop
push
ficompl
in
sbb
pop
mov
mov
sub
jmp
imul
pop
in
inc
lea
pushf
or
pop
pop
test
pop
or
lea
jno
pop
pushf
mov
daa
dec
lds
cwtl
xchg
mov
cmp
push
inc
cltd
cltd
cli
cmp
xchg
sub
clc
in
pop
out
inc
loope
in
xchg
sub
sbb
fcomp
sub
clc
hlt
fdivs
or
sub
dec
pop
sub
fwait
int3
mov
dec
shr
cmpsb
lds
adc
sub
mov
decb
ljmp
jl
sbb
xchg
sbb
pop
fdivl
fsubrs
leave
ja
cmpsb
shll
cmpsl
dec
inc
pop
cld
push
sbb
jmp
ds
jg
mov
jnp
cli
or
sbb
pop
cmp
jno
jbe
pop
xchg
xor
xor
and
bound
push
pop
pop
mov
stc
dec
mul
imul
cld
adc
push
or
std
loop
push
ret
adc
lods
pop
pop
bound
jnp
ret
pushw
fisubs
mov
rcrl
pop
fsts
pop
jp
fnstsw
loopne
jbe
lret
adc
loopne
outsl
pop
insb
pop
movsb
fucom
adc
xor
mov
dec
mov
cmpsb
arpl
or
jmp
cli
pop
call
call
cmpl
fstp
arpl
es
fdivr
pop
ret
stc
bound
pop
ror
popa
call
pop
add
arpl
sbb
lahf
pop
ljmp
pop
pop
sbb
lahf
pop
sbb
pop
jmp
pop
fstpl
fcomp
mov
pop
cmp
pop
ja
lock
fdiv
cltd
inc
negl
loopne
call
pop
inc
out
call
fsubl
pop
jno
fdivrl
pop
testb
pop
jecxz
pop
fwait
je
pop
outsl
xchg
clc
pop
xor
xchg
fstp
push
inc
jo
xchg
outsb
cmpsb
and
movb
fs
dec
pop
repnz
aaa
mov
pop
and
lcall
test
fcomi
pop
xchg
push
mov
cmp
xchg
push
push
fsubrs
pop
fnstcw
xchg
popa
mov
ljmp
mov
loopne
cltd
and
and
call
and
inc
jg
out
fldenv
adc
fs
pop
push
xor
pop
pop
cmpsl
out
fsubr
pop
and
call
fcomps
outsl
call
pop
f2xm1
or
lods
stc
pop
sub
call
outsl
sbb
cwtl
sub
movsl
call
jle
mov
stc
sbb
outsl
cmp
add
jge
push
daa
sahf
fsubs
aaa
mov
xchg
mov
xor
outsl
push
arpl
inc
push
cltd
std
cwtl
cmp
jnp
fistpl
call
negl
push
fsubr
mov
sbb
cld
pop
orl
dec
cli
popf
fwait
pop
lods
adc
dec
imul
sub
sub
push
fwait
pop
lock
imul
pushf
loopne
inc
fimuls
mov
and
fldenv
and
int
xor
and
int3
das
dec
outsb
stos
pop
lods
push
inc
pop
test
sbb
std
fsub
mov
jl
pop
sbb
xor
push
or
cli
mov
addr16
pop
sub
xchg
add
add
out
pop
fcompp
jnp
push
adc
lock
pop
out
outsl
jecxz
aaa
call
pop
daa
pop
mov
pusha
lock
jp
pop
push
jl
sub
pop
push
push
push
fsubr
lahf
pop
call
ficomps
call
addr16
faddl
fsubrs
test
inc
pop
pop
negb
arpl
ja
pop
stc
xchg
sbb
fsubrs
clc
call
lock
stc
outsb
sbb
sahf
outsl
gs
scas
adc
and
nop
pop
outsl
lock
fcomps
loopne
xchg
add
jp
add
cli
loopne
xchg
popa
pop
xchg
lock
cmpsl
sbb
out
leave
test
push
fstps
pop
call
or
pop
sbb
int3
std
scas
ficomps
arpl
sub
clc
arpl
scas
pop
in
sbb
sub
ja
in
pop
pop
hlt
lock
adc
pop
fisubrs
clc
pop
sbb
pop
loope
clc
stc
bound
or
outsl
sbb
sbb
cmpsb
mov
push
mov
lock
stc
add
fstl
outsl
pop
call
sbb
stc
jecxz
enter
clc
out
jmp
test
sbb
outsl
fsubrl
pop
xlat
lret
jo
outsl
pop
xchg
adc
shrl
ljmp
sbb
outsl
js
sbb
cwtl
lock
stc
test
fcmovne
outsl
pop
clc
mov
ficomps
lock
stc
jmp
loope
fcomi
bound
clc
in
pop
pop
lock
mov
outsl
pop
call
sbb
pop
sbbb
outsl
imul
sbb
loopne
mov
popa
sbb
sbb
fcoms
stc
fcompl
fldlg2
outsl
pop
clc
cld
sbb
pop
or
pop
stc
sbb
clc
sub
pusha
pop
cmp
loop
dec
sbb
outsl
in
insb
sbb
jl
fcomp
sbb
sbb
ficomps
int3
pop
outsl
loope
in
pop
lock
stc
in
or
pop
call
stc
jge
fimull
sbb
pop
lods
lock
stc
mov
popa
clc
out
sbb
pop
lock
push
sbb
push
pop
push
clc
out
cs
fstps
ds
pop
lock
stc
fcompl
pop
pop
outsl
outsb
dec
fs
pusha
sbb
arpl
scas
pop
in
mov
pop
or
add
pop
repnz
fucomi
add
pop
sbb
pop
fdivp
stc
pop
sarb
xor
call
mov
add
fcompl
in
filds
call
imull
pop
pop
jge
lea
pop
popf
outsl
dec
sbb
jns
stc
inc
sbb
popa
call
test
fs
xchg
lock
movsb
fsts
sbb
sbb
stc
pop
fchs
out
call
mov
and
pop
mov
sub
pop
jp
fs
arpl
jmp
arpl
or
pop
enter
pop
dec
and
jbe
arpl
or
gs
enter
push
or
pop
enter
pop
dec
and
jbe
arpl
or
pusha
enter
bound
in
fs
and
push
pop
dec
and
jmp
arpl
or
enter
pop
dec
and
jbe
aam
jbe
arpl
or
push
push
or
pop
enter
pop
dec
and
jbe
arpl
or
enter
fs
dec
add
pop
cmpsb
pop
dec
and
jbe
arpl
or
pop
enter
popa
dec
and
and
jbe
and
mov
arpl
or
pop
enter
pop
dec
and
jbe
arpl
mov
arpl
gs
enterw
sahf
or
pop
enter
pop
dec
and
jbe
arpl
or
popa
enter
xchg
loopne
cmpsb
gs
and
test
pop
dec
and
jbe
arpl
pop
push
pop
enter
pusha
dec
and
xchg
es
jbe
arpl
jmp
arpl
or
pop
enter
pop
dec
and
jbe
arpl
or
gs
enter
push
or
add
cmpsb
pop
dec
and
jbe
arpl
or
pusha
enter
bound
in
fs
and
push
pop
lret
clc
les
inc
pop
fbstp
fstps
mov
mov
push
fsubs
push
jecxz
out
loop
push
fdiv
out
clc
cmp
fsubp
dec
ja
nop
fsub
push
mov
push
pop
mov
push
popa
pusha
mulb
fucomi
pop
xor
adc
clc
inc
mov
out
fsubs
cmc
bound
out
daa
mov
and
fsub
push
cmc
and
mov
inc
jp
adc
lahf
or
gs
rclb
fsubs
add
or
aas
loope
jmp
fdivrl
and
in
icebp
iret
push
pop
sahf
out
loopne
lret
add
lcall
mov
fisttps
das
mov
sub
jecxz
shrb
xor
fsubs
daa
pop
in
pop
mov
pandn
test
fildl
test
outsb
lret
fcomp
or
fdivr
push
sbb
shrb
stos
frndint
mov
sbb
fildll
fscale
popa
jle
in
fistl
fldcw
sub
std
scas
sub
cmp
pop
aaa
pop
or
fiaddl
stos
fxam
pop
dec
loopne
fadd
div
fnstsw
in
fcomip
and
mulb
out
pop
pop
out
cld
fsubs
imul
daa
inc
cltd
fcomps
pop
xchg
fwait
sbb
fcomi
fsin
mov
sbb
and
sahf
fsub
popf
push
in
dec
lock
fsubrp
fbld
in
inc
pop
lahf
sub
into
fistpl
sub
into
fiadds
negl
jle
repnz
loopne
mov
popf
pop
cmc
pop
out
neg
mov
sti
movsl
and
xlat
adc
inc
or
cwtl
popa
ja
fldcw
loop
mov
dec
fnstcw
fiaddl
int3
imul
mov
pop
pop
fdivrs
cmc
out
out
aaa
mov
pop
push
imul
std
sbb
mov
fadds
cwtl
fstps
and
pop
arpl
push
pop
xchg
sbb
mull
cld
cltd
fldenv
bound
repz
icebp
push
fisttpll
cmp
pop
ja
ficomps
and
add
xchg
fisttpl
jnp
out
pop
sbb
in
jecxz
and
fdiv
sbb
testl
mov
movsb
fsubs
and
ja
ficomps
out
sbb
imul
idiv
negl
fistps
sub
sahf
lea
fisubs
fstl
pop
loopne
add
loope
lahf
ja
fistpl
out
pop
lret
out
in
fldenv
pushl
lods
loope
pushf
repz
mov
dec
loope
pop
dec
lcall
loope
xchg
insl
fldl2t
pop
inc
add
and
fstps
jmp
sbb
std
pop
andb
pop
pusha
push
fbld
ret
sbb
test
xor
shrb
loope
fbstp
adc
out
and
fnstcw
sbb
loope
loope
cmp
fcomp
inc
out
fucomp
mul
mov
fsubrs
ja
fstps
or
sbb
ja
addl
out
ror
es
pop
add
push
lcall
bound
out
push
movsb
icebp
out
sahf
iret
push
sbb
out
inc
iret
push
sbb
iret
push
in
out
cmp
mov
pop
insb
pop
pop
std
test
loope
cwtl
icebp
xchg
sbb
insb
cltd
stc
mov
mov
cmpsl
sbb
xchg
int3
mov
cld
test
cmp
mov
insb
loope
sbb
inc
sbb
inc
sbb
mov
jmp
or
adc
cwtl
std
ds
and
or
cli
scas
mov
sub
je
push
sbb
xchg
mov
outsb
loop
xchg
outsb
cmp
pop
daa
sbbl
dec
out
jns
insl
add
or
sbb
fnstenv
and
add
pushf
shrl
add
inc
add
int3
sub
sub
add
mov
loopne
dec
cltd
cs
les
sbb
cmp
add
ffreep
and
jns
mov
nop
sub
mov
incl
lahf
mov
mov
xor
add
popf
stos
call
cmp
mov
sub
inc
movb
mov
mov
push
adc
sub
fildll
stc
testl
sub
jnp
cmp
sti
jne
add
mov
push
lock
insl
scas
cmp
jns
and
or
mov
sbbl
orl
cld
inc
fwait
or
jmp
xorl
mov
cmp
pop
xor
scas
pop
xchg
imul
mov
je
sbb
imul
cs
cld
les
movsb
out
mov
cmp
or
dec
and
and
stos
loope
adc
push
pop
inc
cwtl
negl
mov
mov
popa
mov
out
cmp
add
aas
cmp
lock
mov
cmp
fwait
mov
fdivrl
test
sbbl
inc
jo
stos
sub
push
mov
inc
jle
insl
cmp
imul
add
mov
or
jmp
cmp
sbb
lds
popf
lods
test
xchg
add
lret
add
jl
dec
cs
sbb
inc
push
mov
lods
dec
add
insl
mov
fisubrl
add
std
ret
push
ljmp
adcl
pop
fwait
mov
push
inc
and
jne
out
out
flds
out
sbbl
mov
fildl
add
or
test
fdivs
push
push
jg
pop
neg
or
xchg
pop
out
cmp
pop
fcoms
test
fdivs
add
dec
xchg
jecxz
mov
fmulp
jo
cmp
lret
pop
jb
ret
inc
arpl
aam
inc
or
push
jg
out
push
cmp
pop
std
push
sbb
or
dec
jnp
mov
movsb
mov
mov
adc
fcompl
movsl
sub
imul
pop
dec
adcl
sbb
pop
lcall
addb
rorb
mov
fstpl
call
test
push
test
outsb
push
in
in
mov
pop
fidivs
add
daa
sub
negl
mov
decb
imul
outsl
mov
pop
movsb
cmp
lcall
sbb
mov
inc
nop
sahf
mov
out
pop
pop
out
addr16
out
inc
or
push
mov
pop
in
pop
aad
test
sbb
fnsave
adc
mov
enter
pop
iret
mov
xor
and
pop
add
sbb
cltd
popf
sbb
ja
roll
out
pop
jl
pop
test
sub
pop
out
in
pop
xchg
in
shrb
inc
sahf
das
and
or
loop
stc
es
rcll
rclb
test
sbb
aad
jl
loopne
mov
pop
push
dec
xorl
cmp
pop
out
and
arpl
mov
pop
ja
clc
sub
jl
lcall
std
jo
or
jno
lahf
sbb
jo
sbb
imull
inc
xor
sahf
jmp
cmpl
sbb
pop
jmp
inc
sbbl
aas
or
dec
stos
cmpsb
test
lods
pop
sub
fdivl
xchg
rcl
cltd
adc
add
pop
mov
pop
pop
daa
add
lds
bound
movsl
xor
jp
ja
call
loope
sbb
setg
repnz
cmp
cld
mov
loopne
jae
sbb
jae
cld
xchg
gs
jecxz
and
inc
jmp
orl
inc
push
mov
xchg
addr16
scas
out
sub
imul
les
jb
aaa
jnp
fs
neg
push
jl
mov
jno
or
pop
fcomps
in
int
xor
in
shr
inc
addb
fnsave
lods
jns
out
fildl
inc
pop
push
pop
arpl
jl
pusha
gs
fucomp
adc
mov
movsl
call
inc
cmp
sub
rcr
sub
dec
fdivs
fcoms
mov
fdivrs
mov
fimuls
pop
loopne
sbb
mov
jg
out
mov
jecxz
lcall
lret
pop
or
insb
faddp
mov
test
lods
push
aad
movsb
jl
sbb
xchg
pop
push
popa
mov
in
and
dec
out
lea
lea
xchg
inc
ficoms
jl
dec
push
test
je
mov
jle
xchg
jecxz
push
in
icebp
sbb
fstpt
shrl
inc
jle
pop
fs
das
pop
jae
out
mov
and
pop
or
inc
fmuls
scas
sbb
adc
or
fmuls
pop
dec
lret
or
push
shl
xchg
fcompl
enter
dec
into
inc
jecxz
fdivs
das
fcom
call
loopne
and
fucomi
out
adc
lea
add
sti
xor
pop
fsubrs
stc
out
addr16
sbb
out
iretw
pop
filds
sbb
pop
adc
adc
hlt
jnp
inc
sub
mov
dec
jo
out
fistps
push
clc
iret
es
insl
sub
or
xor
out
out
fsubp
lods
push
inc
fadds
mov
mov
test
mov
mov
mov
xor
call
pop
mov
push
fidivrl
in
out
fdivs
pop
lock
pop
sbb
pop
mov
push
or
dec
bound
inc
mov
in
inc
inc
loop
xor
dec
dec
sbb
dec
outsl
mov
into
popa
dec
dec
xor
scas
fchs
mov
inc
out
aaa
xchg
aaa
pop
mov
cld
push
fmul
xchg
arpl
out
mov
pop
or
pop
push
repnz
sbb
pop
cmpsl
test
mov
cmc
cmp
ficoml
loope
jmp
stc
shl
push
pop
dec
mov
into
rcrl
sub
jne
or
inc
neg
fsts
inc
insl
jmp
or
in
call
fbld
ljmp
dec
push
jo
ds
pop
xor
mov
rcr
mov
outsb
subl
nop
rcr
adc
fsub
fwait
sahf
negb
xchg
imulb
inc
arpl
adc
call
mov
mov
lret
push
ret
enter
push
and
pop
mov
cmc
pop
mov
call
sub
push
or
mov
sub
sub
sub
add
out
sub
mov
in
jp
fisubrl
jl
pop
sub
pusha
int3
loopne
shll
arpl
cmp
fadds
mov
ss
jbe
push
in
rcll
pushf
xor
dec
roll
mov
lahf
shll
out
mov
in
jg
cmp
inc
repnz
jp
loop
mov
sbb
cmp
mov
push
dec
jle
shl
lods
div
lret
scas
fistl
fnsave
notb
pop
pop
dec
push
mov
add
cld
fsubp
hlt
or
pop
fcmovne
in
and
dec
out
jmp
push
pop
xchg
in
pop
mov
push
mov
dec
scas
bound
insb
data16
xlat
xchg
sub
fistl
jbe
sbb
jne
fadds
cmp
sub
hlt
es
sbb
out
jmp
mov
or
and
les
iret
push
dec
loope
cwtl
sub
pop
lcall
cmpsb
sbb
out
mov
add
pop
mov
mov
and
add
pushl
mov
dec
lcall
xchg
insl
pop
das
stc
pop
aaa
sbb
pop
popf
lock
call
mov
addr16
push
mov
xchg
fwait
pop
in
xchg
push
into
ja
lret
jle
cmp
sbb
call
sbb
addr16
clc
sbb
pop
lret
mov
testl
xor
fimuls
aaa
ret
addr16
mov
movsb
sbb
fnstenv
push
imul
cmp
sbb
js
pop
clc
cwtl
lcall
enter
inc
push
xlat
sbb
je
adcl
cwtl
xchg
and
pop
xor
pop
out
mul
mov
push
js
push
jns
addr16
lods
xchg
sti
pop
cwtl
dec
fiaddl
cmpsb
xor
push
and
dec
pop
sbb
cwtl
mov
daa
stos
pop
mov
cmp
push
add
fadds
pop
add
in
in
jecxz
popa
int3
inc
cmp
aas
xchg
jmp
icebp
pop
sbb
pop
cmp
fstps
sbb
jmp
or
sub
inc
imul
jmp
sti
pop
pop
loopne
cltd
mov
pop
pushf
fidivs
jnp
lret
pop
cmpsb
pop
pop
inc
cmp
jmp
stc
addr16
sbb
pop
dec
xchg
fbstp
xchg
outsl
test
fs
ret
pop
mov
and
fsubp
lahf
or
mov
pop
arpl
sbb
jl
push
inc
push
data16
nop
lahf
dec
jmp
fcmovnu
sub
push
addr16
jmp
lret
pop
push
dec
out
shlb
dec
pop
lret
dec
dec
jg
pop
pop
cmp
rcrb
jmp
lock
stc
pop
jl
mov
xorl
cmp
testl
push
fbld
stc
insb
loope
push
or
ja
cld
out
cmp
mov
push
shrb
cmp
mov
nop
push
ja
test
fidivl
pop
cmpsb
sbb
cltd
mov
pop
fstp
enter
pusha
pop
and
dec
jns
jo
pushf
aas
or
je
mov
int3
xchg
lret
call
stos
cwtl
pop
sbb
ja
pop
iret
mov
mov
lods
out
loope
mov
rorl
dec
xor
pop
mov
gs
in
cld
cmp
and
sahf
or
popf
sbbb
cmp
mov
inc
ja
add
pop
in
mov
aaa
push
call
aaa
dec
mov
imul
or
cld
imul
push
nop
les
fsubs
push
shlb
sub
gs
fstpl
sbb
pop
jmp
xchg
xor
cli
sbb
or
push
mov
call
out
sbb
aas
leave
dec
cld
xchg
loope
push
mov
and
mov
inc
pop
cmp
jecxz
orl
jp
gs
stos
fnstcw
sub
sbb
fdivrp
mov
fucomi
sarl
dec
dec
push
leave
cli
push
lds
and
jmp
mov
jg
pop
bound
hlt
and
loope
lea
aas
xchg
xor
fnstenv
dec
xchg
fldcw
mov
jo
inc
and
cli
arpl
shr
pop
fadds
push
iret
inc
or
jno
arpl
cmpsb
or
xchg
stos
mov
int3
imul
add
adc
gs
fwait
jp
lahf
and
dec
jmp
fistps
jp
xor
icebp
aam
xchg
aas
cmpsl
push
and
cmpsl
scas
sub
mov
sub
cmpl
in
cltd
add
sub
pop
cltd
inc
cmp
dec
lds
stc
ja
pop
xchg
outsb
lock
shlb
mov
fiaddl
cmpl
add
adc
fdivl
sbb
jg
pop
mov
in
loop
fmuls
test
jl
pop
pop
mov
out
sbb
mov
mov
push
mov
in
fiaddl
icebp
inc
jge
sbb
mov
pop
imul
rolb
xchg
mov
xchg
push
jbe
adc
sbb
pop
pop
out
jb
pusha
fidivrs
cld
popf
cmp
inc
lock
sbb
pop
lds
inc
sbb
mov
cmp
cmpb
bound
mov
or
sar
aas
sbb
movsl
mov
in
and
and
push
cmc
pop
js
aaa
mov
cmpsb
mov
pop
mov
push
lea
sbb
pop
xchg
aas
cli
dec
pop
jno
daa
cmp
sbb
cmp
cld
jecxz
sbb
sbb
shlb
fimuls
ja
pop
out
bound
cmp
xchg
addr16
sbb
pop
aam
stc
popa
xor
popf
add
ja
fmull
inc
in
mov
fiadds
dec
les
fdivs
loopne
popa
cmp
lcall
add
push
fnstsw
push
ds
jmp
or
pop
scas
aas
stos
sub
loopne
sbb
lret
push
sbb
xchg
out
jns
jns
fistpl
pop
adc
lahf
fistpl
pop
adc
pop
mov
push
fnsave
dec
insl
pop
test
lahf
pop
sbb
int3
outsl
aaa
out
jbe
sbb
fdecstp
inc
daa
dec
mov
decl
fdivs
fcmovu
sbb
xor
jo
das
cmpsl
aas
fmul
xchg
pop
rcr
xchg
sbb
and
cmp
lahf
movl
pop
lods
or
outsl
mov
scas
sbb
sbb
push
pop
ss
aaa
ja
sbb
sahf
xor
adc
sub
cmp
daa
ret
push
subl
push
jge
in
ds
cmpsl
xorl
fisubs
sahf
movsl
testl
es
inc
cmc
icebp
fcomp
call
pop
pop
lret
fisubl
cmc
aaa
xchg
out
sbb
sbb
cmpsl
inc
call
clc
dec
pop
sbb
mov
cmp
outsl
sub
fbstp
fisttps
sbb
out
pop
aaa
cmp
push
lock
daa
adc
add
nop
pop
pop
jmp
inc
lcall
push
pop
outsl
xchg
stc
stc
pop
jecxz
aas
jo
daa
daa
test
inc
pop
pusha
mov
jbe
arpl
and
add
inc
inc
fadds
xchg
fcompl
pusha
sti
daa
add
outsl
ja
jecxz
std
cmpsb
ja
fnstenv
ds
sub
out
and
loop
dec
clc
dec
lretw
cld
sbb
enter
fidivrl
in
sahf
shll
inc
setnp
pop
sbb
add
jns
pusha
add
scas
pusha
test
call
cmpsl
and
divl
inc
sub
fistps
mov
addr16
addr16
push
daa
cmp
sti
inc
int
iret
data16
fbld
add
cmp
and
dec
cli
popa
imul
sbb
dec
pop
jne
pop
lock
arpl
clc
add
inc
and
daa
lret
lcall
mov
or
sbb
dec
jae
or
sbb
sar
push
aaa
mov
arpl
testb
sub
xchg
dec
jae
fisttpl
aaa
jge
pop
jmp
jge
out
jns
loopne
and
call
pushl
mov
cltd
and
pop
faddl
and
add
inc
pop
xchg
enter
mov
fdivrs
loope
in
icebp
out
aad
mov
cltd
ja
divl
cmp
fldcw
mov
ret
xbegin
gs
lock
mov
add
cmpsl
dec
stc
loopne
pop
fwait
push
lds
inc
outsl
mov
mov
frstor
and
daa
dec
cmp
push
enter
xchg
dec
pop
flds
dec
dec
fadd
add
jae
jg
cltd
and
pop
daa
mov
sbb
cmp
ja
jecxz
xor
cmpsl
add
mov
cltd
jg
xchg
rcrb
cwtl
pop
inc
pop
rcrl
pop
inc
loope
sbb
loope
sub
stos
fxch
jb
pop
and
jae
mov
and
fisttpll
repnz
xchg
out
mov
stos
add
imul
pop
in
cld
mov
rorb
push
jmp
rol
loopne
faddl
andb
cmpsb
stos
enter
test
insl
clc
pushf
lock
fstpt
inc
and
insb
jnp
xlat
sub
and
sbb
mov
mov
xchg
xchg
and
loopne
bnd
mov
testb
fildl
pop
cwtl
loope
jns
push
pop
aas
add
sbb
je
imul
xchg
cli
inc
or
adc
push
lock
emms
sbb
loop
call
lret
fdivr
pop
cmp
pop
xchg
testl
inc
mov
pop
mov
lods
xchg
push
or
pop
popa
pop
inc
mov
fsubl
jp
ja
xor
cmp
push
mov
inc
ja
lods
push
insb
add
and
mov
pop
pop
push
dec
or
aaa
mulps
push
pop
and
pop
pop
sbb
stos
pop
or
stos
test
sti
mov
loop
clc
pushf
add
in
loopne
ja
subb
jmp
js
call
leave
pop
mov
pop
xorb
pusha
or
dec
and
pop
repz
scas
xor
jle
push
loope
ja
mov
mov
cmp
mov
jmp
frstor
fiadds
cmpsb
ja
out
mov
mov
hlt
mov
cmpsl
xor
sbb
pop
and
inc
push
and
cmp
lret
push
dec
cli
jge
insb
cmpl
fmuls
mov
ja
add
popa
mov
xchg
xchg
cmpb
pop
adcl
adc
fnstenv
insl
inc
jns
lock
inc
pop
in
pop
xor
out
pop
xor
jecxz
fcompl
outsl
push
or
dec
mov
add
push
cmp
bound
idiv
sbb
scas
xchg
int3
inc
mov
ja
lahf
cmp
adc
push
es
lret
dec
jmp
pop
shrb
sbb
and
test
inc
lods
push
lahf
sbb
mov
out
cld
push
mov
aas
ficomps
rorb
mov
cld
pop
mov
mov
aaa
pop
in
jno
mov
mov
add
ja
cmp
add
popa
mov
cmp
arpl
stos
insb
jecxz
repz
aaa
mov
std
mov
aaa
pop
add
add
mov
jns
fisttps
pop
mov
sti
mov
xchg
xorl
fsts
sbb
push
xor
sbb
or
popa
add
out
mov
shl
mov
icebp
mov
add
cmpb
mov
cmp
icebp
add
mov
push
or
mov
mov
mov
jnp
stc
jecxz
sbb
xorb
sbb
call
sbb
cmp
sbb
arpl
xchg
add
loopne
aaa
faddp
xor
xchg
jle
pop
lock
arpl
add
sbb
cld
mov
aas
push
stos
add
fisubs
andl
sbb
sbb
fnstcw
loop
fisubl
call
jnp
adc
mov
push
cwtl
xchg
jns
loopne
in
pop
fdivs
popa
jae
lcall
rcrb
in
shlb
imul
gs
sub
and
and
sbb
rcll
mov
fcmovnu
sarb
ficoml
xchg
mov
es
jno
mov
faddl
and
sbb
push
mov
aaa
ljmp
scas
jg
fimuls
scas
mov
adc
or
jl
aaa
mov
pop
lods
aaa
pop
out
dec
ret
loop
imul
std
xchg
push
fwait
jp
mov
push
xchg
es
sub
pop
loop
inc
adc
jl
pop
mov
pop
cld
pop
inc
les
cmp
inc
cli
jb
add
and
cwtl
cmp
dec
stc
cmc
pop
je
fwait
mov
sbb
add
mov
xorb
inc
dec
mov
mov
es
imul
pushf
mov
fnstenv
loop
fs
push
sub
mov
mov
push
mov
mov
imul
lret
imul
nop
inc
pop
dec
cmc
sbb
aaa
mov
mov
dec
fcoms
ficomps
and
out
fdivrs
push
jmp
add
adc
sub
arpl
add
jns
pop
test
xchg
xor
and
pop
push
sbb
xor
sbb
lock
push
and
pop
popf
and
sbb
aaa
fsubp
inc
test
cld
pop
jge
xor
xchg
mov
mov
icebp
pop
jbe
mov
mov
mov
mov
sub
inc
dec
pop
flds
xchg
and
sarl
fwait
cmp
mov
ret
xchg
sub
and
push
jecxz
call
xor
xor
mov
dec
push
test
iret
and
dec
jno
test
mov
jp
push
cli
movsl
add
xor
mov
pop
pop
fidivs
int
mov
mov
lret
lcall
out
dec
fildl
sub
xlat
insl
cmpl
sub
mov
xchg
dec
in
adc
aas
sbb
shl
add
ja
and
jb
jns
aas
js
jg
gs
inc
mov
ja
add
clc
and
xchg
push
pop
push
cmp
cmp
cmp
cwtl
into
enter
ds
incl
out
test
pop
lds
int
leave
fsts
xchg
scas
stc
pop
lock
stos
stc
add
cmp
push
testb
divl
out
aam
dec
fsubrs
dec
imul
pop
cmpl
enter
fucom
repz
xor
sub
fdivrp
and
rcrl
lock
push
add
outsb
lds
scas
adc
test
mov
inc
cmpsb
inc
clc
mov
hlt
jp
pop
push
lahf
xchg
and
push
sbb
sahf
add
jae
gs
adc
repnz
fdivl
add
sbb
addr16
jae
aaa
stos
inc
xchg
shr
adc
jne
inc
fildl
inc
lcall
cli
jl
pop
mov
stos
data16
addr16
mov
pop
pop
fdivl
lcall
imul
dec
jo
clc
test
sbb
push
insb
sbb
sbb
and
test
rcrl
mov
sub
xor
icebp
fcoml
push
pop
mov
stc
cmp
fwait
and
test
ja
dec
mov
pop
jnp
cmpb
stos
mov
cmp
sti
pop
dec
mov
mov
fdivl
adc
arpl
fsubl
sbb
cmp
xchg
sbb
loop
popf
sbb
and
pop
pop
mov
int3
aaa
je
mov
mov
pop
les
add
stc
push
movsl
test
rcrl
sbbl
cmp
mov
pop
rcrb
popa
inc
imul
mov
cwtl
sahf
popa
scas
and
cwtl
pop
push
ror
sbb
and
mov
lds
push
lret
in
mov
cld
inc
inc
cmc
cld
popa
clc
inc
sub
ljmp
mov
push
sbb
and
insl
pop
addr16
push
cmp
cmp
mov
push
stos
sbb
cmpsb
shlb
rolb
lahf
sbb
aaa
jp
sub
cld
stc
add
shlb
imul
rcr
sbbl
fidivrl
clc
and
sbb
mov
mov
ret
pop
call
ffree
stc
pop
jne
push
sbbl
std
dec
fsubrs
cmp
xchg
xchg
stc
pop
aaa
popa
push
nop
or
cwtl
inc
imul
bound
sub
je
or
sub
sbb
fcoms
mov
mov
std
fsubrl
cld
cmp
cmp
imul
pop
push
cld
jp
imull
and
and
lods
and
and
imul
icebp
dec
lcall
mov
cmp
xorl
ds
pop
jmp
sbb
sarl
cmp
fwait
push
jmp
push
push
jl
or
cli
sbb
sub
aas
push
into
sbb
insl
idivl
cmp
lcall
stos
aaa
fnstsw
mov
jecxz
fnstenv
gs
ja
fildll
js
mov
lea
xchg
pop
mov
std
add
cli
js
dec
mov
sbb
loopne
fbstp
inc
inc
pop
aas
pminsw
mov
pop
add
mov
or
outsb
dec
jmp
clc
ja
fidivrl
jnp
cmpl
cmp
loope
sbb
cmp
or
and
mov
imul
xchg
mov
cmp
pop
pop
mov
aad
xchg
sbb
cwtl
push
lret
andl
cltd
xor
inc
sub
roll
dec
pop
movsb
pop
sbb
fisubrl
push
sub
negl
shrl
and
jecxz
outsb
mov
jbe
mov
cmpsl
mov
mov
pusha
sahf
jne
push
add
cmp
aas
fsubl
xchg
fs
jo
fwait
bound
sbb
ja
fists
sub
mov
ljmp
dec
imul
imul
mov
mov
mov
call
fidivs
cmp
insl
sub
popa
jp
add
mov
cwtl
pop
fmuls
test
add
xor
shlb
pop
lea
mov
jns
in
xchg
fs
dec
push
adc
stos
mov
xchg
push
cmpsb
pop
inc
fnop
inc
jns
inc
sbb
filds
sti
inc
cmpsl
inc
out
lret
mov
add
and
lretw
mov
adcb
fsubrl
ret
push
pop
daa
ja
sbb
cmp
pop
std
sbb
or
jmp
fiadds
cli
sub
pop
sbb
aad
movsl
pop
add
into
insb
nop
or
pop
fdivrl
daa
out
imul
sbb
xchg
pop
adc
push
fcoml
addr16
and
lret
sbb
cltd
cmpsl
fdivrs
mov
fbstp
jns
pop
pop
std
adc
add
ljmp
fwait
fs
sub
cwtl
sbb
cltd
or
lock
mov
stc
pop
sbb
inc
mulb
xor
sbb
movsb
pop
call
stc
popf
sbb
sbb
sbb
addr16
and
ja
lahf
stc
out
sbb
sbb
fistl
pop
cmpsl
mull
push
pop
fs
lcall
stc
pop
sbb
outsl
callw
mul
stc
sbb
pop
pop
pop
movsl
pop
fcompl
call
stc
sahf
sbb
sbb
cmp
xchg
dec
out
fdivrp
and
pop
pop
pop
mov
sbb
js
outsl
es
stc
fstps
pop
fwait
test
loop
sbb
fcmovnu
enter
popf
clc
in
sbb
pop
pusha
pop
cmpsb
pop
call
stc
lahf
sbb
sbb
sbb
cwtl
sub
and
mov
push
lock
pop
imul
jns
and
data16
pushf
mov
jecxz
sbb
pop
enter
and
sbb
daa
sahf
negl
and
fdiv
fs
loopne
f2xm1
call
mov
adc
or
and
dec
mov
fisubs
push
mov
pop
fsubs
out
fmuls
fldenv
cmpsb
imul
ljmp
popa
mov
incb
daa
movsb
cmp
pop
xor
pop
cld
xchg
add
sahf
movb
jg
pop
adc
lcall
out
faddl
sbb
sbb
mov
sbb
arpl
aaa
outsb
pop
cwtl
fwait
scas
sbb
push
cmp
call
dec
fadds
fyl2xp1
pop
and
sbb
pop
arpl
fisubrl
ret
cmp
pop
cmp
imul
daa
pop
lcall
pop
sbb
popa
push
call
loopne
fdivrl
cld
push
arpl
pushf
mov
sub
xchg
mov
pop
fisubrl
clc
movsl
lret
sbb
push
sbb
fsub
pop
pusha
add
dec
pop
js
sbb
ja
call
loop
pop
sub
pusha
fisubrl
sbb
mov
cmp
jns
ja
and
pushf
sbbl
repz
sbb
xchg
and
mov
fldenv
pop
push
adc
and
dec
loope
fnstsw
cmpsb
in
cmp
pop
pushf
sbb
or
call
fidivs
xor
leave
mov
pop
sub
push
out
jg
jne
sbb
mov
and
pop
push
sbb
mov
idiv
mov
ja
repz
sub
loopne
fistpll
lcall
gs
pusha
pop
cmp
sbb
mov
and
clc
pop
fnstsw
loopne
loop
fwait
fwait
sbb
sqrtps
cwtl
or
and
xchg
mov
call
sbb
paddusw
mov
push
and
jae
jecxz
push
lahf
fwait
sbb
sqrtps
lret
push
pop
sbb
fisubrs
stc
mov
cld
daa
sbb
data16
fsubs
mov
pop
arpl
sub
cmp
loope
pop
popf
xchg
cli
fdivs
sub
lret
adc
jg
sbb
pop
pop
arpl
jne
fadds
or
sbb
add
cltd
adc
rcrl
jg
pusha
sbb
arpl
imul
arpl
nop
nop
repz
xor
push
pusha
inc
pop
arpl
jecxz
mov
xrelease
js
sbb
dec
arpl
mov
fmul
fstcw
sbb
arpl
cmp
pop
sbb
call
gs
cltd
cwtl
fistpll
pop
leave
pop
jg
or
dec
call
fwait
test
sti
sbb
sbb
jecxz
iret
dec
jne
sub
mov
sbb
push
clc
xor
enter
in
pop
mov
jmp
fprem
loope
pop
sbbb
gs
rcrl
dec
mov
mov
and
or
scas
loope
pop
sbb
jmp
mov
fwait
in
arpl
movsb
jae,pn
fmul
jne
push
repnz
and
adc
add
fwait
insb
or
pop
fdivl
arpl
pop
fwait
test
push
sbb
arpl
sbb
ja
and
leave
or
pop
xchg
pop
and
cmp
loop
xor
pop
pop
xor
aas
cld
loopne
add
add
or
and
sbb
dec
sub
loopne
dec
das
fisubrl
fwait
lret
aas
cld
loope
adc
jae
fcomp
pop
add
arpl
repz
sbb
imul
sbbl
and
filds
pop
test
pop
xor
jne
in
repnz
fmull
push
flds
js
xor
je
lret
mov
push
arpl
pop
shl
arpl
mov
es
and
lock
add
insl
addr16
pop
mov
cwtl
test
push
pop
pop
xor
arpl
jecxz
cmpb
dec
cltd
mov
mov
repz
sub
cmp
xor
pop
pushf
jecxz
push
sbb
xor
jae
fistps
cli
pop
call
push
and
sti
out
pushaw
inc
sbb
sub
sub
pop
and
arpl
and
xchg
sub
sub
sbb
and
pop
pop
xchg
mov
addr16
fdivr
mov
sbb
add
fsts
and
pop
mov
leave
pop
pop
xor
sbb
fldenv
arpl
dec
fsubrs
or
fsubrs
sbb
jne
mov
dec
out
das
out
into
ficoml
scas
fbld
xchg
fwait
sbb
sbb
cmp
das
dec
pop
lret
pop
pop
pop
jbe
sahf
lods
daa
fwait
das
fdivs
mov
dec
jae
movsb
push
jae
movsb
sbbl
cli
sbb
mov
add
popa
jp
pushf
sti
outsl
jbe
pop
jg
sbb
cmp
mov
pop
outsl
fld
imul
call
sbb
sbb
daa
sub
loope
lahf
and
dec
es
stos
out
push
lahf
pop
and
push
call
bound
fcompl
and
lahf
mov
rcll
outsl
mov
mov
das
and
inc
sbb
cmp
pop
fdivl
jbe
jecxz
and
mulb
add
pop
fsub
popa
fcomi
hlt
and
iret
lds
and
in
repz
push
sbbl
xchg
fbld
lret
sbb
arpl
sbb
cwtl
mov
jb
sbb
dec
pop
insb
out
arpl
or
pop
sbb
fwait
adc
out
xor
pop
cwtl
fistl
and
sbbl
popf
repnz
aaa
test
sbb
sqrtps
cwtl
cmp
mov
push
loopne
or
cli
sbb
mov
jmp
leave
bound
sbb
inc
pop
stc
pcmpeqw
pop
jmp
in
mov
xor
sbb
jb
sahf
movsl
fs
sbb
and
outsl
jne
adc
movsb
jp
es
sbb
and
mov
mov
sahf
add
push
inc
pop
fwait
and
sti
mov
xchg
loopne
call
sbb
inc
repz
pop
xchg
mov
push
fbstp
pop
push
sbb
cmp
outsl
mov
fcmovnu
fs
add
inc
xor
cli
sbb
mov
jmp
add
sahf
ffreep
sub
push
jns
imul
add
pop
mov
cld
jns
cltd
and
adc
adc
xchg
pusha
inc
pop
push
sbb
arpl
cld
sbb
xchg
imul
and
jae
sti
arpl
mov
jne
sahf
dec
arpl
sbb
xor
sbb
pop
daa
or
in
outsb
in
arpl
je
jne
sbb
sub
dec
movsl
jbe
sahf
mov
push
push
sub
cmp
dec
test
fchs
dec
mov
or
lock
stc
aam
xchg
pop
jbe
push
xor
pop
push
lahf
or
sbb
mov
pop
insl
arpl
inc
fisttpl
and
js
push
sub
mov
push
lahf
or
sbb
add
jecxz
jecxz
arpl
pop
daa
shl
sub
arpl
inc
or
mov
gs
add
sbb
jg
scas
pushf
jae
popf
xchg
sub
sbbb
pop
mov
jnp
into
fistpl
lods
cltd
clc
xchg
es
and
cltd
sbb
orb
and
sbb
mov
das
in
stc
scas
sbb
fwait
add
rcll
mov
jae
fldt
mov
arpl
push
fucomi
in
fnsave
jmp
cltd
dec
pop
dec
push
call
pop
sub
in
pop
not
mov
lahf
lret
aas
in
arpl
and
leave
mov
arpl
and
mov
enter
daa
mov
pop
push
lret
sbb
imull
fldcw
sbb
imul
popf
sub
mov
inc
jg
add
sub
jp
popf
int
and
pushf
cmp
fsub
xchg
add
add
xchg
gs
jae
sub
pop
movsb
fs
jbe
jecxz
or
push
mov
pop
sbb
mov
fbstp
jns
and
clc
pop
pop
leave
es
jecxz
cmp
arpl
jns
insl
sbb
stos
loopne
popf
outsl
fs
pop
cwtl
sbb
call
mov
jge
pop
push
es
sbb
test
loop
fstpt
orl
push
ja
arpl
stc
jecxz
pop
dec
jne
and
mov
ja
mov
fdivl
arpl
mov
jbe
pushf
arpl
mov
sti
add
mov
pushf
jmp
andl
jb
insb
int
sbb
pop
ja
lahf
and
sbb
fidivs
cmpsl
pop
fisubrl
add
xchg
lahf
cmp
jne
arpl
out
stc
pop
leave
xor
arpl
out
fstps
int3
repz
addr16
sbb
gs
push
pop
or
push
loop
xor
lret
gs
mov
inc
in
cmp
dec
in
pop
cmp
pushf
ja
cltd
push
fdivl
fstp
push
mov
data16
arpl
jbe
sbb
sbb
clc
jcxz
adc
sahf
frstor
sbb
xlat
mov
setl
cmpsb
lock
icebp
cld
out
repnz
or
jg
dec
cmpl
mov
sbb
push
enter
shl
xor
outsb
das
hlt
pop
call
pop
cmp
pop
or
and
or
adc
flds
pop
and
lock
rcr
jmp
cld
loopne
ljmp
in
pop
and
sbb
pop
std
xchg
or
clc
xor
loopne
movsb
daa
out
sub
pop
call
jbe
cwtl
add
pop
push
inc
and
sahf
popf
outsl
fnsave
mulb
pop
add
sbb
xor
push
adc
sub
add
pop
pop
push
data16
push
and
pusha
xor
addr16
pop
jo
dec
and
add
fisubs
lret
cmp
fcmovnu
cmc
mov
orb
add
enter
and
xor
inc
jbe
cwtl
push
iret
pop
pop
cmpsl
and
mov
jne
repnz
sahf
push
jg
pop
xchg
sahf
fs
pop
dec
movsl
and
mov
pop
lock
add
lds
fsts
fcomps
pop
loope
dec
jmp
or
fwait
icebp
inc
pop
sbb
stos
fidivrl
mov
pop
sbb
and
or
fimull
xor
inc
enter
push
and
or
popa
mov
fnsave
pop
sbb
fcomp
sbb
arpl
arpl
lock
fnstcw
sub
fstps
push
insl
pop
jmp
push
clc
stc
mov
loop
or
push
sti
sbb
addr16
xor
pop
add
pusha
pop
add
dec
out
fdivr
adc
and
stc
and
fnstenv
iret
pop
pop
pop
jp
inc
iret
lock
iret
fldcw
push
in
loope
or
das
mov
sti
jp
jns
push
sbb
mov
lock
and
mov
outsl
cltd
js
lcall
iret
gs
ljmp
es
sti
add
xor
pop
add
data16
mov
mov
pop
sbb
dec
mov
pop
fwait
test
in
pop
and
mov
std
sbb
popf
pop
pop
jg
movsb
xor
pop
pop
data16
cld
sbb
and
arpl
mov
test
cmp
pop
arpl
enter
imul
dec
in
sbb
bound
pusha
jo
loopne
cld
mov
cmpsb
sbb
iret
inc
fnstcw
pop
arpl
xor
sub
movsb
in
mov
pop
sbb
into
sbb
lret
jmp
inc
pop
sub
outsl
pusha
clc
or
cmpsb
cmp
pop
arpl
lock
dec
iret
lock
xor
mov
je
clc
jmpw
scas
mov
or
dec
adc
sbb
cld
push
imul
sbbl
loope
fdivrs
adc
or
imul
sbb
fldl
mov
lcall
pop
repnz
cli
pop
std
inc
pop
jbe
mov
data16
and
dec
pop
repnz
mov
cli
pop
sbb
loopne
sub
loop
cmp
ficoml
imulb
sbb
cmp
arpl
mov
out
gs
or
fdivrl
fmuls
ficoml
sub
pop
add
inc
fbstp
pop
arpl
xchg
and
iret
outsl
insl
out
mov
dec
jo
mul
arpl
jmp
pop
jle
cld
pop
fnstenv
cmpsb
push
pop
fisubl
cmp
fcomps
cwtl
xchg
pop
fidivs
call
pop
dec
cmpsl
pop
fdivs
pop
loope
out
fmuls
in
jg
fucom
callw
fcompl
out
sub
fmuls
sahf
sub
out
fidivrl
pop
pop
fsts
push
std
sbb
pop
mov
enter
lcall
pop
fisttpll
pop
pop
or
or
scas
out
in
pop
mov
cmc
pop
cmp
fidivrl
std
in
fisttpl
pop
imul
dec
jns
jecxz
pop
fbld
icebp
sbb
std
in
xor
addr16
fdecstp
les
xchg
add
out
xchg
imul
sbb
daa
xchg
in
xor
and
xchg
lock
imul
xchg
xchg
push
cmpsl
mov
mov
imul
xchg
or
sbb
sub
outsb
pop
jmp
pop
mov
xchg
loopne
push
test
fisubrl
push
arpl
loopne
push
fnstcw
pop
insb
or
sub
dec
loopne
push
pop
mov
outsb
mov
jmp
mov
push
fiaddl
or
cmp
insb
or
arpl
jnp
xlat
fs
push
sbb
dec
mov
negl
add
cmp
push
and
fstps
or
stc
imul
loopew
fldt
fistps
xchg
in
data16
fidivrs
je
insb
popa
pop
outsb
jecxz
push
out
pop
jmp
out
sbb
out
in
mov
pop
jno
fwait
nop
call
stc
fsts
fldenv
stc
sbb
cmc
cltd
popf
jmp
push
jno
sahf
pop
cmc
cmpsb
pop
push
imul
sti
sbb
out
movsl
outsl
outsb
and
loop
pushf
sbb
data16
mov
jmp
jno
pop
jo
pop
lock
pop
pop
pop
jb
mov
jo
and
pop
in
pop
jp
mov
pushf
sub
mov
xorl
mov
sub
icebp
sahf
jmp
jbe
ljmp
out
fistps
sbb
loopne
mov
mov
sub
loopne
mulb
pop
push
imul
pop
cmpsl
push
fdivs
jbe
push
jo
jecxz
pusha
pop
push
mov
outsl
movsb
pop
push
mov
out
cmpsb
jo
fldt
or
sbb
push
fcmove
xchg
inc
lods
stos
or
int
or
ljmp
mov
sti
sbb
push
xorl
mov
addb
push
push
adc
rcrb
cmp
js
fistpl
sahf
in
pop
or
shrl
sbb
fdivrp
int
sbb
pop
outsb
cli
lock
scas
leave
and
sub
mov
and
pop
jmp
and
pop
jbe
ss
cli
in
cli
or
mov
ds
or
mov
jecxz
and
fwait
ret
dec
xor
lock
in
out
push
lret
insl
sub
adc
jecxz
pop
sbb
js
sub
jecxz
mov
jmp
fisubrs
call
mov
movsb
add
daa
and
sub
xchg
sbb
daa
movsb
icebp
cwtl
inc
stos
pushf
xor
inc
jnp
cmp
dec
movsb
out
pop
cmp
icebp
sbb
add
aaa
loop
lds
sbb
std
ret
mov
push
aaa
and
fsubrl
enter
xchg
out
call
out
test
popa
out
lcall
popf
or
in
sub
in
fisubs
repnz
movsb
add
pop
xor
cs
aad
jp
dec
pusha
inc
push
dec
sub
adc
adc
daa
daa
pop
sub
adc
fwait
lcall
in
adc
ja
jle
or
fs
jmp
push
xlat
daa
mov
pop
dec
mov
fwait
xchg
popf
sbb
gs
add
mov
fsubrs
xchg
mov
sbb
push
sbb
push
jg
pop
adc
frstpm(287
imulb
imul
xchg
sahf
add
lahf
jbe
adc
cli
mov
mov
push
cmp
or
imul
pop
bound
imul
out
fwait
pop
dec
test
pop
test
or
pop
repnz
pop
sbb
pop
pop
xchg
pop
dec
or
dec
loope
pop
pop
imul
pop
fdivr
pop
rcrb
push
dec
pop
jbe
pop
clc
push
aas
or
stos
mov
imul
adc
mov
sub
jnp
add
call
mov
dec
mov
push
sbb
jecxz
and
mov
cwtl
aaa
pop
imul
pop
pop
xor
stos
orl
and
repz
or
daa
xor
xor
pop
or
aas
sbb
sbb
push
dec
loope
jmp
xor
inc
aaa
pop
mov
fcompl
shll
pusha
popa
and
jo
sti
xchg
gs
or
xlat
int
sbb
fsubl
push
dec
imul
mov
pop
jae
fldt
in
inc
fsub
mov
das
dec
sbb
fstpl
rcrb
sbb
popa
cmp
mov
insl
sbb
popa
xchg
cmp
sbb
inc
imul
sbb
fldcw
cld
mov
pop
insb
ficomps
icebp
and
pop
pop
insb
enter
in
aam
add
movsb
fldl
ficomps
je
add
sbb
call
adc
adc
cmp
sbb
imul
int3
or
arpl
fstpl
imul
loopne
fmuls
cmpsb
pop
xchg
jae
jmp
or
repnz
ret
js
push
xor
pop
pop
jmp
loop
dec
dec
dec
jge
mov
fisubrl
fldcw
sub
mov
stc
push
das
leave
inc
sbb
loopne
or
pop
cmp
or
shrl
lods
lods
addr16
cwtl
mov
aam
ss
pop
or
pop
push
add
lods
mov
and
jecxz
ja
pop
push
in
test
pop
xchg
cs
scas
hlt
les
loop
out
pop
pop
and
int
icebp
sbb
ret
xor
sbb
push
test
sub
dec
jg
clc
movsb
mov
jp
dec
fcmovne
pop
cltd
out
negb
insl
insb
mov
in
mov
xchg
mov
fiaddl
ljmp
cmp
sbb
imul
addr16
sub
sbb
fistpl
sbb
pusha
cwtl
daa
pop
ret
sbb
sbb
jno
bound
stos
mov
sbb
mov
fisubl
cs
xor
sbb
cwtl
repz
pop
cmc
cltd
mov
out
popa
test
mov
or
daa
and
dec
rorb
loope
sbb
and
outsl
cmp
and
data16
or
jmp
inc
pop
add
mov
gs
pop
pop
imul
and
push
cld
mov
sbb
add
jns
sbb
pop
cmp
sub
imul
sub
sahf
cltd
test
ds
push
mull
jmp
test
or
dec
push
mov
and
int
push
insl
sbb
and
dec
push
push
pop
pop
mov
or
push
sbb
jecxz
xor
sbb
rcrb
es
loope
push
out
leave
movsb
sub
frstor
pop
lock
adc
stos
imul
adc
imul
nop
ja,pn
jns
in
add
inc
dec
data16
jecxz
cld
jae
pusha
mov
sti
fimull
inc
dec
add
fstps
sbb
test
and
inc
sbb
leave
cwtl
imul
dec
sbb
sbb
pop
jmp
and
lea
fistpl
js
mov
in
popf
das
sbb
ret
pop
das
dec
leave
sub
cmp
mov
fstpl
mov
cmpl
sbb
daa
fidivrl
ds
sbb
aaa
out
outsb
aas
jns
imul
insb
call
std
dec
imul
mov
sbb
out
fucom
decb
push
pop
fsubl
mov
pop
outsb
fdiv
pop
sub
ds
pop
xchg
adc
mov
mov
jo
arpl
les
jle
push
das
jne
popf
imul
dec
test
std
jmp
sbb
pop
in
pop
jecxz
mov
call
in
daa
pop
add
popf
sbb
pop
pop
cwtl
cmpsl
mov
out
jmp
inc
jno
es
bnd
sbb
lods
jne
xchg
mov
inc
imul
repnz
xor
sbb
fcomi
lahf
pop
clc
jmp
mov
fwait
and
jae
clc
xor
idivl
lahf
loopne
lods
pop
and
ficompl
mov
mov
pushf
xcrypt-ctr
cmpsl
fcmovbe
xchg
sbb
cmp
popf
dec
lock
dec
sbb
ficoml
addb
pop
and
test
rcr
push
int
sbbl
mov
push
adc
nop
or
ja
lods
sbb
cmpsl
xchg
cmc
imul
xor
pusha
push
pop
ss
ja
daa
ja
mov
sub
push
ficoml
sti
sbb
dec
aam
dec
or
push
sbb
sti
repnz
ljmp
and
out
fisubrs
cltd
xlat
out
fimull
popa
jmp
in
lret
and
pop
inc
xor
sbb
outsl
icebp
movsl
loopne
pop
fcomp
jo
mov
test
negl
sub
push
adc
add
push
cmp
out
popf
inc
sahf
imul
push
cmpsl
or
pushf
ljmp
push
ret
inc
push
push
js
cs
pop
ficoml
ja
or
mov
fscale
add
negl
ffreep
nopl
jmp
xlat
mov
fimull
ficompl
adc
mov
jmp
add
cltd
loopne
jmp
inc
insl
mov
dec
dec
pushf
fldcw
fstps
add
adc
loopne
dec
pop
jle
mov
es
mov
cmp
mov
or
pop
xchg
popa
lock
sub
mov
jnp
aas
das
cs
mov
cwtl
test
pop
xor
pop
movsl
sbb
fldenv
adc
push
mov
jg
sub
jl
insl
movsb
out
neg
pop
gs
sub
sti
cmpsl
fcomps
cmp
sbb
aas
fiaddl
insb
loope
in
fstp
cli
hlt
add
mov
cld
pushf
push
and
sbb
jae
push
cltd
pop
or
stos
sub
and
and
xor
sti
xchg
addr16
insb
imul
nop
icebp
outsl
sbb
jbe
add
push
xchg
and
sub
sub
pop
dec
imul
fsub
sahf
mov
outsb
pop
and
push
add
inc
jp
cli
in
fcomps
inc
pop
xchg
mov
fstps
xchg
sti
adc
xor
pusha
jnp
ja
test
mov
daa
cmp
in
loopne
mov
leave
scas
push
cmp
and
imul
js
dec
mov
cmp
outsb
inc
fstpt
fbld
fisubl
sub
insl
stos
push
xchg
sahf
cld
pop
cwtl
fcomp
clc
sub
gs
jae
dec
jae
lret
sbb
jmp
ss
push
cmp
filds
test
and
js
fidivl
loop
mov
cltd
pop
jmp
cld
and
insl
lods
pop
lea
xchg
pop
movsl
mov
in
insl
insl
fsincos
and
pop
dec
lea
adc
fistpl
cld
stos
cwtl
gs
add
and
cld
pop
gs
jmp
outsl
cmc
outsl
bound
sti
std
mov
in
daa
sbb
mov
mov
mov
mov
fnstcw
fimull
cmp
pop
fisubrs
out
fiadds
cmpsl
loope
xchg
aaa
pop
cld
lcall
lret
popf
test
sbb
fdivrs
lock
xchg
call
stc
fbstp
inc
subb
pop
sbb
and
call
mov
pusha
das
shrb
lods
inc
outsl
sahf
jp
jecxz
pusha
outsl
pop
out
sbb
insl
out
cmc
cwtl
mov
outsb
cwtl
adc
pop
lret
fildl
aas
and
fwait
mov
push
jne
outsl
push
inc
adc
mov
fistl
or
test
add
push
mov
pop
sbb
outsl
sbb
jns
lods
and
pop
fdivs
in
into
loope
popf
sbb
mov
inc
push
dec
gs
cltd
add
roll
mov
push
sbb
lahf
loopne
fisubrl
in
mov
mov
cmp
mov
mov
or
test
call
mov
clc
ljmp
adc
adc
mov
popa
sbb
xchg
mov
pop
push
push
mov
lahf
call
sbb
sub
sub
lret
sbb
jmp
cwtl
in
fs
xor
fadd
cli
data16
sbb
jg
imul
popa
test
xlat
stos
in
pop
mov
jo
out
cmpsl
arpl
cwtl
popa
fdivl
mov
cli
xor
jmp
and
lods
mov
xchg
lcall
push
sbb
mov
std
jnp
and
inc
pop
mov
cmpsl
clc
imul
dec
mov
sbb
jnp
cmp
sub
cltd
in
lahf
addr16
fisubl
lret
imul
stos
pop
js
adc
dec
gs
and
lea
fistpl
cwtl
rolb
sbb
cmpsl
lcall
push
imul
sub
mov
int
sbb
fcmove
or
fldenv
in
cwtl
clc
mov
xor
test
cmp
adc
and
xchg
sbb
cwtl
lret
pop
imul
icebp
xor
jae
pushf
js
adc
in
popa
sbb
pushf
cmp
pop
and
mov
pop
cmp
cmp
ljmp
and
clc
pop
jb
fcoml
clc
or
mov
call
pop
jo
js
jae
aad
sahf
inc
or
sbb
sbb
lret
insb
xchg
js
fisubl
loop
pop
repnz
inc
xchg
imull
int
lcall
xchg
fcomip
add
cmp
pushf
movsb
sub
fidivs
fidivs
clc
jnp
pop
fwait
loop
cmp
fdivrp
push
cmp
pop
pop
jmp
fistl
or
mov
lods
aas
fcmovu
and
loopne
pop
std
in
mov
sbb
or
push
sbb
aas
pop
jmp
je
mov
cmpsl
loopne
insl
pusha
and
into
push
imul
ja
pop
in
sub
test
and
pop
fnstsw
neg
and
lcall
scas
lock
jge
andb
fwait
pop
push
cs
js
cltd
scas
xchg
push
and
pop
and
jo
shll
add
push
add
iret
out
arpl
mov
add
pop
cmpsb
sub
les
loope
ficomps
and
cld
sbb
jmp
mov
and
fcomip
cmp
flds
pop
insl
sbb
cld
not
shrl
loop
xchg
mov
jns
je
cmp
xchg
xchg
fsubrl
pop
in
xchg
mov
lea
out
loop
fists
cmpb
pop
and
cmpsl
lock
cmpsl
push
ret
bound
mov
sub
orl
fwait
cltd
xor
les
dec
sbb
or
pop
std
dec
insb
sub
pop
in
imul
adc
sbb
fmull
daa
das
add
fisubs
jmp
xorl
adc
jg
sbb
jnp
pop
mov
sti
sbb
jmp
imul
out
pop
mov
lret
cmp
lods
mov
pop
or
mov
pusha
sub
dec
jmp
fcomps
in
js
cmp
xor
sbb
add
dec
sbb
pop
inc
sbb
sbb
push
cmp
adc
imul
xchg
and
arpl
and
and
jmp
mov
pop
jmp
jg
jns
dec
mov
pop
std
mov
sbb
mov
sbb
pusha
add
imul
loop
aas
lcall
inc
in
fsubrl
cmp
pop
cmp
jmp
push
or
pop
call
leave
imul
loope
push
inc
repnz
andb
pop
fcomps
fmuls
pop
pop
movsl
sti
fdivrs
jb
jae
push
pop
pop
cld
dec
and
scas
or
mov
push
mov
adc
fcompl
push
scas
sub
xor
fistpl
es
lahf
loope
push
cli
lock
loope
inc
xlat
pushf
jl
cld
inc
cli
fcmovnb
and
in
sbb
xor
sub
cmp
push
mov
xor
in
fstpt
pop
xor
std
in
push
and
push
ljmp
mov
jns
sbb
cli
fwait
bound
sbb
jnp
jne
adc
cmpsw
lcall
data16
clc
mov
cmpsl
loope
fidivrl
fdivp
out
pop
mov
cwtl
scas
pop
dec
push
das
mov
mov
sahf
mov
sbb
popa
jbe
mov
pop
icebp
lcall
cli
inc
sbb
das
stos
jmp
push
xor
jecxz
lret
pop
je
leave
imul
xor
fcomps
mov
sbb
dec
prefetcht1
or
clc
movsl
cwtl
sbb
add
pop
and
xlat
das
pop
test
pop
shll
jp
jecxz
cmp
push
sub
fidivrl
mov
fstpl
je
popa
push
or
int3
fidivs
outsl
cmpsl
or
sbb
pop
mov
aaa
mov
cmp
fstpl
loop
lret
aas
popf
pop
pop
enter
rcrb
or
fadd
jge
cmp
std
pusha
push
popa
popa
test
fistpl
mov
mov
lret
push
mov
bound
fcompl
out
test
negl
in
loopne
pop
mov
enter
cmp
cmp
and
popl
outsb
pop
pop
fidivrs
xor
pop
cwtl
and
dec
sub
jecxz
inc
pop
dec
sub
cmp
mov
push
fwait
pop
add
inc
fs
pop
inc
lahf
jge
sub
adc
pop
pop
test
sarl
push
cltd
gs
push
push
sbb
sbb
xor
notl
jo
sbb
repz
imul
sar
sbb
mov
push
std
pop
and
pop
mov
movsl
cld
or
pop
out
sbb
pop
test
mov
jg
in
xchg
fidivl
loopne
sbb
sbb
cwtl
cltd
jnp
ja
sti
jg
lcall
xchg
or
incb
ljmp
fsubrs
rcr
pop
fnstcw
and
fdivrl
jnp
pop
sbb
jl
repz
pop
fldcw
js
aaa
ljmp
and
addr16
pushf
lahf
jl
fwait
loope
frstor
jbe
fidivrl
sbb
andb
stc
jns
inc
insb
jo
mov
fidivrs
pop
clc
pop
pop
in
jmp
xor
ljmp
sbb
mov
stc
jmp
add
pop
loop
aaa
add
ficoml
out
jo
add
dec
imul
sarl
loop
movsl
mov
sti
or
int3
cwtl
fisubrs
sbb
aas
das
cld
dec
js
sbb
add
cmp
inc
std
inc
loopne
loopne
lahf
das
nop
imul
js
cmpsl
ficompl
addl
pop
mov
fdivrs
stc
sbb
ret
sub
sub
pop
pusha
inc
orb
js
sbb
pop
js
cwtl
cs
loopne
popf
sbb
imul
and
loopne
sbb
mov
fs
das
add
js
insl
push
fcomp
mov
mov
push
xlat
pop
pop
sti
shll
imul
pop
filds
sahf
or
outsl
jmp
insl
movsb
imul
fsubl
xor
stos
sbb
dec
mov
or
fadds
jae
cld
sub
add
adc
ret
add
pop
jle
sbb
add
stc
sbb
lock
xchg
in
sti
test
jo
stc
jmp
xor
icebp
fidivrs
sbb
es
clc
sbb
mov
cwtl
xchg
and
enter
loop
scas
pop
js
imul
out
fwait
ret
pop
pop
or
outsb
pop
adc
pop
in
aas
mov
pop
das
sbb
jg
daa
sbb
push
sub
in
out
sahf
das
adcb
clc
fwait
in
cwtl
sti
ja
xor
cltd
sub
in
sub
sbb
rolb
insb
loope
push
inc
lock
xor
fldl2t
icebp
xchg
inc
adc
jb
cltd
std
fiaddl
sbb
fstpl
cmp
jmp
ja
test
js
addr16
ret
popa
push
or
jl
and
fidivs
xchg
and
mov
add
pop
fcomps
fs
sbb
js
cmp
pop
mov
aas
adc
inc
loopne
jmp
pop
loope
stc
inc
pop
out
mov
sbb
pop
xchg
gs
mov
int
pop
pop
and
roll
sbb
cmp
fdivp
mov
push
inc
in
pushf
pop
ljmp
mov
pop
loop
push
adc
out
or
insl
lods
fimuls
fwait
mov
daa
pop
mov
aas
push
pop
push
movsb
ret
pop
sub
sti
test
cwtl
sbb
outsl
sbb
fistpl
in
dec
ficoml
xor
inc
and
fcmovu
sub
push
jns
cmp
pop
pop
add
clc
iret
fstl
pop
mov
daa
pusha
ss
leave
jo
pop
pop
loope
insb
pop
adc
pop
stc
xor
fucomi
mov
outsl
sbb
lock
ja
lret
mov
sbb
jno
add
aas
arpl
imul
fldcw
negl
and
popa
bound
sub
pop
pop
pop
sbb
sbb
ljmp
enter
lea
pop
add
loope
in
negl
sbb
stc
or
mov
popf
cwtl
arpl
sar
icebp
dec
mov
pop
sbb
ja
jns
fstps
dec
pop
loope
enter
sub
mov
pop
fdivrl
stc
fldenv
cld
in
insl
outsl
ror
pop
movsl
and
stc
orb
imul
lret
sbb
aaa
ficoml
jo
sbb
sti
sbb
out
pop
loopne
das
fisubrs
pop
lcall
popa
sbb
stc
pop
stc
pop
iret
xor
pop
scas
sbb
pop
sti
push
ja
std
or
js
xor
outsl
mov
das
cmpl
fwait
xor
imul
pushf
cmp
push
js
movsl
pop
push
clc
jmp
cltd
lahf
cmp
pop
push
negl
scas
leave
mov
jecxz
aaa
jae
pop
pop
cmp
mov
push
and
pop
lcall
xor
pop
sarl
cmp
lods
jno
and
pop
pop
lock
pop
sub
cmp
loope
cld
sbb
imul
in
inc
pop
jmp
shlb
sbb
sub
sbb
adc
call
fcomps
les
fisubs
es
loopne
ficompl
loopne
cmovns
call
jnp
sbb
leave
jo
outsl
xchg
jmp
sbbl
stc
divl
sbb
popa
outsb
int3
dec
ret
cmp
mov
or
test
sbb
fdiv
daa
fiaddl
ljmp
mov
test
pop
mov
out
neg
sahf
push
ds
jg
aaa
pop
in
loopne
sub
fsubr
jbe
adc
pop
decb
leave
orl
push
loopne
sti
or
or
mov
sbb
fcmove
imul
cmp
and
dec
icebp
pop
mov
lods
sub
lods
stos
push
cwtl
jmp
add
in
rcrl
jmp
mov
clc
fiaddl
cmp
data16
loope
popf
lock
push
cwtl
cwtl
jmp
sbb
arpl
cmp
dec
loopne
and
shll
jle
sub
fisubrs
and
insb
shll
jb
lahf
iret
scas
imul
jmp
sub
fistpl
call
sbb
and
sub
or
sbb
js
or
popf
sbb
test
cmp
jno
shl
andl
lahf
fimuls
mov
jecxz
aas
push
xchg
pop
push
sbb
mov
in
jns
in
sub
fdivrp
mov
enter
lret
adc
fsubrl
pop
add
cwtl
js
popf
mov
inc
mov
or
lcall
pop
js
pop
fisubl
mov
lahf
dec
mov
fstpt
fcmovbe
or
js
ficompl
out
sahf
aaa
sub
mov
cmpl
sbb
popf
dec
hlt
sbb
fistpl
dec
imul
sbb
out
pop
clc
cmp
pop
pop
or
sahf
in
dec
jp
ds
xor
push
ficomps
js
jmp
bound
add
fwait
jl
jmp
mov
loop
es
sbbb
add
insb
insl
mov
pop
outsb
sbb
ficomps
fdiv
pop
xorl
mov
scas
add
mov
int
push
push
mov
lret
in
movsb
in
js
push
fcomps
mov
add
mov
fisubrs
loope
xor
pop
mov
push
pop
lcall
pop
jb
cmpsl
mov
frstor
out
lahf
mov
and
int3
mov
fwait
in
mov
ja
ljmp
ljmp
pop
cwtl
loope
jo
and
jmp
pop
and
outsl
aaa
cmc
mov
dec
push
sbb
sbb
ljmp
inc
and
pop
aam
scas
sbb
jge
pop
ja
cmp
xchg
sbb
mov
jmp
push
mov
pop
cltd
sub
or
cmpsb
adc
pop
mov
stos
fdivrs
stc
sbb
cmp
inc
out
cwtl
movsb
xor
loope
ret
inc
xor
pushf
inc
loopne
pop
sub
inc
add
negl
fidivrs
xor
leave
stc
movsl
sbb
arpl
sti
sbb
mov
outsl
in
push
pop
fsubs
pop
mov
call
cwtl
sbb
cmp
mov
cmp
ficomps
cmp
test
pop
sbb
jbe
movsl
push
out
mov
inc
std
loope
jmp
std
mov
sti
mov
mov
cmp
push
and
fbld
loope
popa
das
fmul
ficomps
pop
pop
xor
pop
imul
push
push
sbb
int3
jns
sbb
imul
pop
sbb
sbb
out
out
jp
imul
adc
bound
in
pop
sbb
jbe
fsubl
jmp
sub
loopne
mov
xor
jnp
mov
lds
jo
lcall
sub
xor
andb
sti
jecxz
add
pop
cwtl
fdivrs
fwait
sub
dec
mov
mov
cmp
sbb
and
les
xor
xchg
pop
and
lcall
fmulp
or
mov
jbe
pop
stc
fwait
aam
in
aaa
out
mov
pop
pop
dec
mov
sbb
and
icebp
pop
xchg
cltd
lahf
fsubrl
ja
sub
pop
stc
out
dec
mov
cmpsb
mov
ret
xor
jnp
jo
out
mov
into
mov
out
mov
popa
mov
sbb
jmp
pushf
mov
popf
shlb
pop
fld
fnstcw
cmc
pop
insl
div
test
sub
popa
cmpsl
pop
pop
sbb
sub
mov
sbb
jl
pop
dec
fwait
mov
icebp
add
iret
pop
or
sbb
inc
and
lock
push
mov
out
pop
fisubrl
sbb
test
imul
mov
pop
jecxz
or
add
mov
data16
movsl
aas
push
or
fistpl
cld
cli
mov
sbb
sbb
pop
jnp
sbb
in
cmpsl
pop
mov
or
test
sbb
pop
fisubl
ljmp
mov
imul
xor
push
stc
test
xor
or
mov
pop
fimull
sbbb
leave
xlat
ficoml
scas
fwait
test
lcall
fiadds
sbb
push
or
pop
lahf
jmp
mov
pop
and
cmp
sbb
ficompl
daa
fs
fucomi
dec
lcall
test
arpl
xchg
pop
and
sbb
fisubrs
arpl
jo
imul
inc
push
cmp
hlt
data16
shll
xchg
in
and
and
jmp
ficompl
cltd
sbb
cmp
loopne
daa
out
das
scas
jmp
cltd
cld
sub
js
and
sbb
mov
push
cmp
in
fcmovnu
pop
fwait
or
push
addr16
je
test
push
clc
mov
sbb
pop
lcall
lahf
sbb
mov
dec
pop
ja
cld
repz
or
and
lret
push
pop
pop
pop
sbb
sbb
and
data16
imul
rcr
push
inc
pop
pop
pop
mov
sbb
fdivr
push
push
into
arpl
and
fisubrs
add
in
jne
sti
popa
sbb
push
sbb
ds
jl
xor
jp
pop
fsubl
ret
popa
dec
gs
clc
fisubrs
fnstcw
jp
pop
and
shrl
dec
jmp
xchg
lret
and
outsl
sbb
loopne
aad
push
std
fldcw
cmp
mull
int3
push
jle
es
sbb
je
leave
popf
push
mov
cmp
cmp
add
std
lahf
and
add
lods
bound
fildll
je
cmp
outsl
sub
sbb
popa
pop
fwait
sbb
std
and
stc
pop
cmpsb
insl
mov
jl
test
fidivrl
pushf
in
dec
push
mov
sti
sbb
and
sbb
xor
insl
mov
push
sub
and
sbb
push
fildl
cmp
and
cmp
out
lahf
jmp
pop
pop
ja
dec
pop
or
jnp
inc
fs
or
jbe
aad
xchg
mov
icebp
fstpl
mov
lcall
mov
repnz
jo
pop
fnstenv
sbb
xchg
and
test
dec
pop
or
inc
push
lea
xchg
scas
xor
ljmp
jl
mov
sbb
adc
test
in
fcoms
jae
fidivrl
cwtl
cli
in
in
jmp
popa
dec
lcall
xor
mov
sti
ret
jbe
sbb
cwtl
jmp
gs
fidivs
shrb
fcompl
neg
pop
mulb
push
xchg
pop
sbb
xchg
outsb
fdivp
in
xchg
add
insb
add
pushf
leave
cmp
cmpsl
pop
jge
test
pop
jbe
js
imul
lods
push
in
pop
mov
fstp
xor
sub
jp
pop
mov
shl
push
mov
cltd
rorb
popa
nop
and
fmulp
lock
xchg
daa
ret
xchg
jecxz
loope
push
pop
pop
ja
pop
loop
ds
andl
arpl
in
jnp
pop
mov
add
bound
cmp
clts
cmp
push
or
sbb
rorl
imul
pop
mov
pushf
push
sbb
repnz
ja
xor
sub
pop
cmp
ljmp
jp
jecxz
and
icebp
mov
pop
test
adc
and
jg
ljmp
adc
out
jecxz
mulb
mov
lods
jl
andl
and
ljmp
shlb
imul
pop
ljmp
mov
clc
xchg
adc
xorl
scas
imul
pop
std
cwtl
sbb
les
repz
cli
pop
sbb
ficoml
sub
popf
xor
stos
in
push
inc
mov
sbb
imul
addr16
mov
stos
or
fs
pusha
push
push
js
pop
sbb
lahf
mov
in
sbbb
pop
cmp
stc
jle
mov
mov
fcom
push
stos
loopne
jno
pop
adc
loopne
fnstsw
push
outsl
popf
in
cmp
stc
sbb
bound
fwait
pop
jp
fcomp
push
cli
pop
pop
fidivrl
pusha
xchg
and
mov
sub
inc
adc
jmp
pop
sbb
push
loopne
cwtl
stos
pushf
sub
fsin
adc
lcall
sarb
ss
push
mov
sbb
insl
pop
and
ficompl
jp
or
out
pop
call
mov
stc
sbb
sbb
push
cltd
and
imul
mov
ljmp
fistps
pop
and
mov
popa
and
cmpsb
lret
in
sbb
jbe
add
jns
push
dec
bound
pop
sub
pop
gs
fwait
jecxz
jecxz
pop
jg
fidivs
scas
mov
pop
mov
sti
pushf
sbb
pop
xor
sbb
sbb
and
cwtl
js
sahf
dec
and
in
jl
das
fwait
jg
mov
mov
sub
js
scas
fimuls
fstps
jmp
ljmp
jmp
sbb
fsub
js
std
popa
popf
and
in
insl
jl
outsb
push
cmp
sub
pop
dec
cmp
sub
out
cmp
mov
ficompl
pop
sbb
out
pop
pop
push
jle
mov
pop
loopne
xor
or
fst
daa
fiadds
pminub
cmpsb
pop
das
scas
stos
xchg
mov
and
out
test
pop
pop
ja
push
dec
xchg
mov
add
fldenv
sub
mov
sbb
daa
sbb
jge
hlt
cmp
lods
cmp
insb
loopne
pop
sub
dec
fiaddl
xchg
sub
mov
pop
add
pop
jb
insl
cmp
sti
test
jo
mov
cltd
and
std
es
cmpsb
and
test
mov
mov
bound
imulb
xor
enter
cmp
push
inc
push
inc
push
mov
jecxz
jmp
or
fstps
mov
sbb
fcomp
sbb
call
data16
mov
mov
ja
loope
add
loopne
shrl
pop
stc
push
jecxz
sbb
movsl
xchg
xchg
cmp
jne
fstpt
fs
fwait
popf
fdivrp
cmp
in
loope
add
add
sub
adc
shl
cwtl
imul
out
frstor
mov
and
sbb
pop
fistpl
pop
pop
sti
loop
add
sub
jmp
mov
fcomps
loope
sbb
loopne
pop
jnp
insl
aas
scas
push
sub
fld
dec
xchg
enter
push
push
fimull
or
imul
lret
mov
push
das
pop
fmuls
loope,pn
ljmp
cwtl
cwtl
sub
dec
lods
xchg
or
add
jne
push
and
leave
mov
sub
dec
push
dec
cwtl
xchg
push
out
jmp
std
cmpsl
fnstcw
mov
dec
stc
mov
fxtract
pop
std
cs
scas
mov
enter
sbb
mov
mov
fisubrs
or
fnstenv
jmp
inc
dec
lods
mov
cltd
sbb
ret
dec
or
adc
pop
dec
bound
fwait
or
shrl
pop
or
sbb
mov
sub
jnp
je
add
fmull
mov
dec
loopne
shrb
mov
mov
adc
mov
mov
add
add
mov
test
mov
jecxz
cs
in
xor
mov
mov
or
aam
mov
or
int
pop
or
jmp
jmp
sbb
fadds
or
dec
sub
adc
pop
push
fwait
jl
jmp
inc
push
fsubl
clc
fldenv
mov
sbb
pop
stos
test
cwtl
sti
push
jmp
xchg
pop
jmp
adc
jge
adc
ds
mov
lock
cmp
cwtl
pop
and
and
pop
cwtl
mov
sbb
or
and
pop
xchg
in
sub
mov
imul
and
mov
sbb
cmp
negl
sub
jp
in
push
push
cmp
jg
cwtl
insl
cmp
pop
push
in
pop
jno
jbe
and
sti
inc
orl
das
jns
add
xor
sub
jae
lea
mov
dec
push
jnp
dec
lds
or
jae
push
xchg
ds
stos
jp
loope
mov
jns
ficompl
inc
ss
cli
jge
mov
pop
cmp
mov
mov
pop
clc
cmpl
sub
fdivp
std
into
outsl
js
pop
mov
push
jns
out
push
ljmp
inc
insb
jmp
dec
jg
icebp
in
and
inc
cmpsb
orl
sbb
push
xchg
scas
imul
push
add
insl
fisubs
or
push
callw
faddl
ficomps
push
mov
decl
loopne
loopne
jnp
ds
mov
push
sub
pop
int
lret
outsl
dec
lcall
mov
ret
stos
jecxz
fmul
push
pop
jne
movsl
mov
pop
sub
popa
test
mov
jb
mov
pop
pop
andb
lock
pop
xchg
test
addl
and
imul
icebp
or
jo
pop
jo
or
jo,pt
mov
fimull
rclb
mov
and
jl
test
aam
jle
pop
insl
inc
pop
jecxz
sbb
bound
inc
pop
pop
negb
jmp
outsb
outsb
cmc
adc
sub
mov
imul
add
movsb
iret
cwtl
mov
insb
fldcw
mov
adc
test
and
adc
mov
jg
lret
out
add
insl
and
sbb
loop
sahf
mov
shll
mov
pop
and
adc
push
mov
cwtl
and
push
jo
jns
push
inc
and
mov
and
xchg
icebp
mov
or
aas
or
sbb
jg
pop
xchg
in
jo
push
or
insl
cmp
mov
pop
insb
lahf
clc
stc
ret
fucom
fcomi
in
in
jno
and
mov
dec
ss
and
scas
cmc
jp
flds
imul
and
push
int3
and
shr
dec
outsb
and
jmp
sbb
add
xchg
sbb
js
sub
add
mov
mov
and
sbb
movsl
insl
sub
xlat
mov
pop
loop
nop
sbb
lcall
pop
jne
cmp
fldenv
incb
fwait
dec
xor
xor
gs
sub
sub
sub
popa
mov
or
pop
inc
arpl
mov
jae
dec
jecxz
inc
lcall
add
xchg
push
and
adc
inc
adc
sub
sti
and
sbb
jno
stos
loopne,pn
les
int
dec
in
adc
cmp
push
sub
movsl
arpl
pop
sub
mov
lret
mov
stos
pop
pop
sbb
fstpt
dec
pop
lods
cmp
out
imul
std
mov
add
add
movsb
and
add
sub
mov
xchg
stc
mov
push
and
add
mov
pop
shll
arpl
push
mov
inc
sub
sbb
fldcw
mov
lea
imul
scas
clc
fisubrl
push
js
lea
mov
das
mov
sbb
cmp
hlt
dec
imull
enter
js
fisubrl
imul
lods
xor
jmp
fimull
jmp
pop
mov
add
xor
out
out
lea
dec
loop
stos
cmp
adc
mov
add
imul
and
in
scas
sbb
clc
pop
aam
push
fnstcw
outsb
fdiv
mov
jo
ja
lods
xor
das
insb
sti
add
dec
sub
add
adc
mov
jne,pn
pop
pop
dec
jae
lods
push
mov
or
jge
xchg
pop
dec
rcll
cltd
adc
push
imul
call
loopne
xchg
sub
lret
enter
dec
and
push
scas
mov
sbb
pop
or
mov
test
scas
sahf
test
inc
lcall
xchg
pop
lock
sub
pop
sbbb
mov
push
fstpt
and
lods
fmul
mov
out
xor
pop
inc
sti
scas
jg
cltd
std
xchg
sti
add
movsb
xchg
mov
iret
sub
fiaddl
js
xchg
ds
test
jbe
je
mov
adc
mov
or
jno
pusha
pop
mov
mov
add
fidivrs
cmp
popa
test
pop
jbe
jl
sahf
hlt
add
add
push
mov
repz
das
sbb
cmpsl
fisttps
leave
dec
andb
fdivr
call
and
sbb
xor
popf
jg
leave
jg
outsb
sbb
mov
cmp
xor
lock
sbb
or
in
addr16
mov
mov
jmp
cmpsl
clc
pop
std
insb
lods
int3
cmp
add
aad
push
cwtl
lods
lds
mov
xchg
je
cli
fwait
leave
dec
test
lea
jbe
mov
ficompl
adc
mov
ljmp
lds
fidivl
xor
inc
daa
imul
cwtl
in
sbb
sbb
lcall
movb
imul
jo
sbb
push
and
push
sbb
insb
sbb
pushw
aam
push
jg
cmpsl
insl
sub
pop
popa
pop
mov
insl
lea
ret
punpckhdq
adc
roll
fwait
mov
xor
jle
dec
lea
lods
lds
and
test
cmp
ficompl
jns
mov
int3
mov
int
mov
dec
xor
fs
cltd
fs
or
jae
cs
enter
mov
mov
add
xor
or
push
mov
stc
call
add
std
sbb
xchg
dec
sub
xor
fidivrs
sub
mov
dec
cmpsb
nop
fwait
test
sbb
inc
pop
xchg
xor
mov
insb
pop
and
ret
xor
sub
jnp,pn
cmp
iret
lds
fisubrs
test
xchg
sbb
xchg
jae
repz
push
mov
xlat
dec
sub
movsl
stc
xchg
inc
inc
cmp
es
xor
dec
insl
pop
and
imul
imul
mov
push
adc
mov
mov
dec
add
js
mov
jns
int3
mov
or
and
pop
movsl
in
xor
push
mov
movsb
jmp
leave
aas
push
les
outsb
mov
xchg
pop
mov
stos
push
outsb
add
loop
add
add
ret
or
mov
mov
xor
xchg
push
add
add
rorl
jmp
lea
xorl
mov
sbbb
cmp
add
sub
jno
add
imul
inc
inc
and
dec
pop
arpl
pop
adc
cmp
addr16
ret
cltd
cmpsl
and
in
daa
pop
push
adc
pusha
xchg
mov
cltd
fwait
xchg
and
pop
addr16
jo
aaa
add
jnp
adc
add
push
add
xchg
fmulp
xor
leave
xchg
es
push
inc
jnp
mov
pop
or
dec
aam
pop
fidivl
xchg
loope
dec
and
test
sbbb
in
cmp
popa
mov
cmp
add
leave
sbb
dec
inc
mov
or
xchg
addl
jae
out
mov
xchg
inc
loop
xor
shlb
repnz
lcall
pushf
inc
pushl
jb
in
into
cltd
adc
sub
mov
scas
cmp
je
popf
insb
cmp
int3
clc
pusha
test
sbb
mov
leave
dec
int3
sub
cmpsb
push
hlt
mov
and
dec
dec
or
movsb
jge
int3
and
xchg
es
mov
andb
fs
aad
sbb
xor
icebp
xor
sbb
scas
jmp
sub
dec
rcrb
dec
jmp
xor
loopne
rcrl
fwait
pushf
outsb
or
add
lods
cmp
iret
aas
int
imul
jns
sbb
xor
jmp
pop
fstl
and
jae
in
mov
dec
test
mov
leave
xor
fldenv
imul
rorl
pop
jne
lock
leave
add
std
mov
cmp
mov
jp
sub
dec
jecxz
in
dec
jle
dec
mov
in
add
adcb
fstps
sub
or
jmp
scas
lahf
and
jae
inc
push
jp
sbb
jne
cs
push
push
xchg
cmp
test
popa
xchg
jl
cmpl
fmuls
fwait
cld
or
or
xor
int
push
or
cmp
into
xor
adc
shl
sar
imul
push
lret
cmp
mov
js
mov
xor
mov
mov
enterw
insl
sub
outsb
push
jnp
lods
lret
dec
int3
adc
cmp
insb
xlat
insl
and
mov
sub
mov
mov
outsb
or
fmul
xchg
mov
mov
push
inc
daa
jmp
mov
pop
mov
std
mov
sub
jmp
inc
lock
in
cmp
cld
cmp
jb
iret
jmp
or
jo
and
pop
jne
xchg
sti
scas
popa
fwait
rcrl
dec
xchg
push
sub
jp
lret
pop
adc
stos
mov
push
decl
xor
dec
dec
inc
lock
mov
sti
sbb
std
outsl
dec
push
push
scas
xchg
adc
mov
inc
lret
or
xor
push
sbb
add
push
fcomps
lods
arpl
push
inc
movsb
xchg
pop
push
cs
or
es
or
and
js
sub
outsb
test
ljmp
bound
push
sbb
dec
mov
mov
cmpsb
fistpl
mov
data16
dec
mov
in
rol
pushf
adc
or
add
les
lock
cmp
xor
xor
fnstenv
pop
cltd
inc
inc
xchg
fmull
xlat
jno
xchg
jnp
int3
mov
or
push
add
sahf
mov
and
clc
inc
cld
fisubs
xor
divl
or
fwait
sti
jo
mov
adc
push
mov
into
mov
hlt
cs
mov
sub
in
mov
and
imul
shrb
fsubl
mov
add
hlt
pop
jne
fistpll
fxtract
push
outsb
call
cmpl
lret
lods
lret
jnp
inc
ret
imul
xor
loop
push
and
push
mov
xor
add
lock
pop
add
lock
lock
jno
enter
lret
push
xchg
insl
inc
cli
int3
sbb
jg
jnp
jbe
stos
in
sbb
xchg
sbb
sbb
sarl
stos
xor
outsl
sbb
adc
cs
dec
adc
xchg
xor
inc
xor
dec
cmp
aad
clc
in
imul
fdivl
ss
shrl
jae
mov
push
jp
mov
cltd
jae
les
push
das
stos
sbb
scas
cmp
xchg
and
and
in
or
lcall
jnp
hlt
pop
orb
insb
pop
sbb
bound
sbb
hlt
lods
jle
jecxz
jno
xchg
push
mov
sbb
or
mov
mov
sbb
rcrl
movsl
icebp
xchg
je
xor
cmp
jl
cs
add
add
cli
enter
rcll
sbb
sarl
xor
icebp
dec
insl
data16
pop
mov
pop
imul
cmpsb
repnz
lds
cmc
push
stos
dec
and
push
leave
and
jge
jnp
xor
pop
cmp
lock
mov
lea
sti
stc
lock
jns
pop
rorl
push
xor
mov
jo
dec
in
xchg
mov
orl
dec
cs
mov
lods
les
sub
mov
push
loope
add
mov
cmp
lods
cltd
loopne
leave
xchg
add
jae
mulb
adc
xchg
pop
int3
mov
cmp
insl
or
ficoms
std
in
jae
adc
or
sbb
xor
mov
lret
push
mov
insl
adc
mov
stos
fwait
daa
pop
push
out
mov
test
or
insl
push
imul
and
cmp
and
mov
mov
loop
jp
mov
mov
xlat
inc
pop
int
and
add
inc
inc
in
jmp
sub
mov
sub
lret
dec
push
scas
push
sahf
in
ss
aad
add
loopne
jno
sbb
mov
mov
jnp
sbb
rclb
jb
inc
jo
xchg
jge
mov
xchg
sbb
sbb
and
dec
add
add
in
dec
stos
je
cwtl
sti
outsl
mov
add
mov
cli
imul
xor
pop
inc
movsl
das
xchg
jb
fwait
dec
loopne
movsl
push
and
ds
int3
je
ljmp
nop
lahf
gs
mov
pop
sub
xor
xchg
and
jo
cld
xor
imul
in
xchg
and
je
jns
shl
jnp
movsl
jl
mov
sahf
xor
insb
lds
cwtl
pop
adc
shlb
sbb
add
add
cmp
loop
popf
dec
and
mov
and
rorb
mov
clc
popa
inc
in
mov
push
popa
mov
or
in
popf
ss
jge
adc
lds
lea
jbe
push
pop
ss
lahf
xchg
fimuls
rclb
bound
sub
imul
and
xor
dec
addr16
inc
sbb
add
outsl
push
mov
xchg
out
mov
lea
dec
int
ret
in
rorb
sbb
xchg
xor
loop
xchg
dec
scas
xor
sbb
push
dec
pop
xchg
lods
add
xor
mov
pop
flds
mov
add
cmp
fidivs
push
in
hlt
and
lds
add
lds
push
imul
out
jo
and
lds
mov
lods
leave
sbb
add
sbb
cmp
call
push
mov
cmp
jl
push
xchg
inc
sbb
jne
mov
or
xchg
mov
pop
mov
xor
popf
mov
add
and
jb
mov
mov
push
jp
outsb
fwait
mov
cmpsb
dec
adc
push
adc
mov
setp
arpl
push
and
sub
sub
inc
sbb
jbe
mov
mov
sbb
lahf
mov
loopne
fidivl
mov
pop
sbb
xchg
mov
sub
insb
xchg
xchg
loope
cmp
cli
adc
and
cmp
lods
and
pushf
mov
push
push
ds
lods
mov
loopne
cmpl
fmuls
xor
sbb
lods
leave
int
jge
mov
out
and
cltd
mov
pop
push
cmp
mov
mov
inc
inc
hlt
push
or
imul
mov
and
push
lds
mov
outsb
mov
je
dec
es
lea
lcall
pop
movl
mov
ja
push
cmpsl
pop
sub
push
xchg
out
mov
push
imulb
int3
inc
nop
mov
push
jmp
add
subb
or
fdiv
mov
rolb
or
fs
leave
popa
push
loopne
push
sub
ja
mov
adc
jmp
rcr
dec
sub
fsincos
fwait
ss
sbb
dec
xchg
push
sar
inc
xchg
mov
pop
mov
mov
cmpsb
push
jp
sbb
fisubs
mov
xchg
inc
lea
cli
jne
mov
sub
js
cmp
fmull
outsb
xor
rcrl
push
pop
mov
sbb
rcrb
shll
clc
sbb
dec
cmp
xchg
shll
das
mov
fmulp
mov
dec
repz
xchg
rcll
xchg
test
push
imul
int3
jp
cmp
out
mov
mov
arpl
and
sahf
jb
imul
pushf
and
jbe
dec
sbb
cmp
push
sbb
test
inc
xchg
mov
mov
insl
xchg
movsl
out
xor
xchg
cwtl
xchg
ficomps
imul
dec
or
cltd
fs
ficomps
sbb
sbb
imul
ds
aam
mov
outsb
add
outsb
test
stos
jne
adc
out
sbb
scas
scas
add
sub
xor
cmpl
push
xchg
adc
test
lods
data16
cli
cmp
mov
inc
xor
scas
cmp
int3
shll
push
and
cmp
mov
ja
mov
or
sub
xor
out
sbb
ljmp
call
xchg
outsb
dec
int
pop
add
fiadds
or
sbbl
mov
loopne
mov
loop
rcrb
bound
xor
adc
and
add
dec
mov
outsb
dec
shlb
fs
push
mov
mov
loope
int3
adc
stos
or
add
and
in
popa
icebp
int3
jo
xor
push
jbe
push
cld
cs
mov
adc
mov
and
lret
pop
push
sub
sbb
sahf
cs
hlt
adc
xchg
jge
sbb
ficoms
xchg
add
jle
xchg
lcall
ret
pop
lret
sub
stos
test
out
and
pushf
add
movsl
or
add
pop
insb
lcall
mov
push
and
jns
xor
and
clc
jge
xlat
ja
ss
xor
push
cltd
fwait
xor
clc
mov
mov
xor
jge
leave
pop
bound
push
aas
cld
mov
cwtl
pop
jle
sub
subl
pop
gs
cs
sub
icebp
mov
push
dec
xor
bound
fildll
aaa
push
add
pop
mov
xor
rolb
fnstsw
mov
daa
adc
sti
adc
jp
push
and
ds
mov
lock
mov
leave
mov
sbb
or
add
in
sub
adc
dec
cmp
sahf
pop
jl
leave
mov
and
movsb
pusha
fldt
dec
out
dec
mov
icebp
pop
push
jl
xchg
sahf
es
cwtl
subl
es
push
pop
int
cmpsb
dec
arpl
mov
sub
or
mov
mov
movsb
int
insb
cmp
sbb
cs
loope
icebp
hlt
sarl
ficomps
adc
lock
mov
jb
xchg
inc
xchg
mov
cltd
mov
orb
lret
mov
imul
and
popf
xor
test
pop
ret
sbb
sub
bound
inc
mov
cmp
and
adc
and
sub
leave
addr16
and
and
or
xor
pushf
jle
loop
sbb
xor
sti
sub
add
or
mov
sahf
imul
test
stos
pop
std
popf
in
xchg
pop
in
fucomp
pop
ja
xchg
out
outsl
cli
jb
movsb
fstpt
popf
mov
ja
jnp
or
sbb
cld
inc
in
das
fwait
mov
cmp
into
xor
pop
lret
mov
xor
and
cmc
mov
lret
mov
mov
cmp
lret
xor
fsubrl
push
fidivs
inc
pop
lea
push
inc
sbb
scas
in
ds
push
test
mov
sbb
shl
push
movsb
jp
cmp
out
jl
shlb
inc
pop
orl
xor
xor
leave
push
fimuls
mov
mov
mov
lods
stos
xor
fldl
in
mov
jno
jae
cld
add
add
jno
loopne
mov
adc
subl
push
and
xchg
jno
and
and
cmpsb
jle
movl
and
push
lods
ror
imul
push
lods
mov
stos
cwtl
jbe
stos
out
mov
cmpsl
pop
mov
mov
adc
dec
mov
mov
sti
bound
in
push
pusha
mov
or
xlat
push
xor
loopne
mov
leave
push
arpl
push
outsb
je
in
mov
pop
push
or
sbb
incb
mov
cmp
mov
and
mov
cld
int
sub
loop
push
and
fcoms
imul
addb
add
push
add
ret
mov
jl
pop
mov
pop
mov
xor
movsb
js
mov
push
xchg
movsb
lods
push
fldt
sbb
jae
jge
ret
int3
sub
lahf
stos
mov
xor
ret
mov
int
insl
mov
push
xor
test
sub
lods
sub
xchg
imul
test
rcrb
mov
test
cmp
mov
push
cmp
xor
in
push
adc
sbb
sahf
push
mov
pop
xor
movb
xor
mov
call
jg
dec
sti
mov
xor
xor
jbe
int
and
push
lret
orb
jnp
push
arpl
or
cwtl
add
mov
mov
lcall
jp
movsl
adc
jnp
push
test
dec
sub
xchg
shlb
inc
mov
scas
xchg
add
stos
adc
mov
mov
and
je
outsl
dec
jge
out
lock
es
jl
and
jp
testb
lock
fimull
mov
mov
addr16
mov
lcall
pop
xor
lods
lods
sbb
push
jl
or
outsb
mov
mov
add
sbb
sbb
mov
pop
andb
movq
and
fdivrl
lret
loopne
jno
and
push
lret
sub
push
cli
bound
add
xchg
push
mov
mov
pop
and
scas
lahf
mov
jecxz
cmpsb
or
dec
loop
and
mov
xor
sti
mov
or
ss
imul
rol
sbb
insl
mov
adc
sub
hlt
and
mov
jbe
jno
pop
clc
enter
cld
lods
and
in
iret
cmpsb
xor
jmp
and
cltd
outsb
dec
lret
jmp
fs
sbb
ret
cmc
outsb
dec
xor
xchg
push
pop
push
es
cmp
outsb
in
push
xor
mov
inc
push
mov
mov
gs
sub
sbb
add
or
dec
mov
outsl
popf
scas
jp
ds
pop
mov
dec
call
adc
lea
ja
and
mov
add
leave
cs
lods
cmp
pop
add
in
pusha
mov
xchg
shr
xchg
pop
and
mov
mov
aad
outsl
sahf
jae
jg
xchg
xor
mov
lea
push
mov
add
mov
int
cli
dec
push
cli
push
lcall
movsb
add
and
fucom
fisubl
mov
mov
cltd
in
jbe
insb
jp
outsb
jl
xchg
push
bound
push
into
mov
xchg
push
rclb
xor
inc
xor
or
xchg
push
mov
mov
mov
imul
in
icebp
stos
fdivl
je
mov
cmpsl
mov
int
xchg
cmp
mov
shlb
xchg
or
xchg
call
imul
lcall
jns
and
sub
in
insl
mov
sbb
xchg
pop
test
xor
idiv
sub
mov
loope
cmpsb
xlat
and
mov
xchg
cmc
lret
adc
hlt
and
inc
push
mov
push
or
arpl
imul
mov
add
int3
mov
imul
cld
int3
sbb
lock
xor
add
sbb
addl
fdiv
dec
lret
jp
cwtl
mov
lret
pop
mov
ja
je
stc
mov
and
sub
mov
jp
cmp
mov
push
cmc
sbb
addr16
cwtl
leave
jbe
shlb
xchg
mov
in
jp
inc
add
in
xchg
mov
jo
in
mov
ret
adc
mov
mov
bound
test
stos
mov
test
sahf
scas
jl
jecxz
mov
jnp
cwtl
adc
inc
mov
outsb
addr16
outsl
cmp
es
ds
jle
hlt
leave
jne
test
pusha
add
fnstsw
cmp
subl
loopne
scas
pop
inc
fwait
dec
test
lahf
sub
stos
add
ret
testb
adcb
sub
add
dec
mov
sarb
rcl
test
dec
mov
adc
stc
popa
sbb
mov
sbb
cwtl
sbb
push
outsb
xchg
dec
lods
pushf
sbb
sub
sbb
adc
testb
int3
push
cld
lods
sub
jecxz
push
pop
rol
out
pop
dec
and
xor
lahf
add
ss
mov
movsl
rcll
xchg
imul
outsb
insb
mov
push
insb
cmp
add
inc
scas
sub
call
mov
in
add
out
into
stos
sahf
jno
mov
out
fmull
jle
cmc
test
in
loopne
movsl
cmp
xchg
sub
mov
lds
loope
pop
rclb
mov
imul
adc
test
notb
xlat
mov
dec
leave
and
hlt
call
xor
jl
inc
jmp
xor
mov
inc
stc
push
or
fcom
sar
lods
xor
dec
xor
into
popf
sti
cltd
jae
sub
gs
xor
mov
xor
nop
jae
leave
lods
jb
mov
adc
pop
mov
cltd
push
fadds
test
into
arpl
fdivr
pop
pop
push
push
test
push
push
ficompl
push
and
pop
pop
pop
sbb
sub
push
fsubrs
mov
and
push
andl
stos
popa
jo
imul
aaa
add
push
loope
push
idivl
pop
pusha
and
test
out
data16
pop
addr16
and
pop
jg
sti
fwait
pop
ljmp
or
popf
arpl
fisubrs
popa
or
push
mov
arpl
add
fwait
pop
pop
imul
std
pop
imul
fisubrs
arpl
outsb
andl
gs
loopne
ljmp
call
and
push
mov
sbb
and
fdivr
pop
mov
and
fcompl
out
jg
fcomps
pop
fs
fistpll
loope
pop
pusha
xor
fcomps
mov
jecxz
arpl
push
and
jo
mov
out
fmuls
fidivrs
pop
or
lock
pop
fwait
pop
repz
and
pop
pop
and
pop
fsubl
jp
pop
fcomps
or
and
pop
ret
mov
pop
loopne
pusha
cli
pop
je
popa
fwait
pop
movsl
mov
and
arpl
xor
push
cwtl
out
fmuls
addr16
imul
sbb
fsubs
aad
je
push
pop
xlat
in
and
cmp
pop
jo
popa
cwtl
pop
inc
pop
or
pop
imul
jmp
test
push
or
fucomp
xchg
dec
jg
fmuls
bound
arpl
pop
push
pop
fs
sub
out
arpl
lds
push
cltd
fs
out
lods
out
sbb
pop
fbld
xchg
pop
pop
inc
in
sbb
fnsave
push
cwtl
fstpt
enter
loopne
and
cs
dec
loop
bound
out
arpl
fsubrs
fnstcw
cwtl
imul
ficompl
dec
xlat
pop
lahf
sti
xor
fsubs
xor
push
cwtl
pop
mov
aaa
push
gs
arpl
fsub
inc
ljmp
imul
pusha
xor
fsubl
pop
loop
or
stc
sbb
pop
arpl
pusha
jmp
inc
pop
or
call
dec
pop
inc
mov
add
lahf
dec
pop
or
pop
cmc
out
pop
pop
pop
cmp
or
fimull
pop
xorl
pop
ljmp
pop
or
fnclex
fdivrs
dec
imul
loop
bound
pop
xor
push
fwait
pop
push
mov
imul
sub
fcoms
xlat
or
jmp
pop
fsubs
and
pop
pop
inc
pop
dec
fmull
insb
and
pop
arpl
sub
out
cwtl
pop
aas
pushf
mov
out
rcl
ret
and
sbb
aaa
fimull
push
adc
xor
sbb
xchg
push
xor
lahf
out
sbb
pop
ficoml
push
repz
push
fisubl
or
push
fisttpl
xchg
ja
loopne
xchg
sbb
mull
pop
sbb
push
mov
sahf
call
pop
fstps
pop
cltd
repz
xor
pop
and
sbb
sbb
aad
xchg
push
cmpsl
pop
lcall
call
sub
pop
pop
sbb
cmpsb
xorb
sub
pop
or
daa
cli
addr16
jae
int3
hlt
loop
in
cwtl
cmpsl
adc
imul
arpl
pushf
add
popf
pop
pushf
in
fdivrl
loop
mov
sahf
aaa
sbb
sbb
sbb
pop
pop
pop
xor
jae
cmp
fwait
sbb
sahf
mov
lock
lahf
clc
loopne
jp
cld
pop
stc
mull
mov
loope
and
and
and
pop
mov
jmp
nop
insl
sbb
and
nop
mov
std
pop
mov
adc
and
popa
andl
xor
pop
cmp
ljmp
mov
in
cmpsb
jo
sbb
lock
mov
mov
outsl
mov
paddusb
popf
adc
shl
xchg
clc
fcompl
cmova
fsubs
xchg
fcomp
out
rcrb
sbb
fcoms
cwtl
push
mov
ja
negl
dec
loopne
cmpsb
or
fcmovb
jns
pop
cmp
aam
sbb
dec
loopne
mov
int
stc
sub
frstor
sbb
cmp
pop
outsb
cmp
daa
scas
rcrb
dec
mov
aaa
aam
sbb
loopne
arpl
es
insb
loopne
push
insb
push
jl
and
or
int
stc
mov
out
mov
pushf
sbb
pop
pushf
aas
cmp
lods
arpl
loopne
push
mov
outsl
int3
clc
sbb
or
or
or
fstpl
in
pop
loope
in
xchg
fsubrs
or
std
shlb
mull
stc
pop
sbb
aaa
outsl
inc
clc
push
sbb
ja
xchg
xchg
sbb
fdivrs
fwait
mov
lahf
lock
and
arpl
outsl
or
pop
sbb
pop
sbb
sahf
and
lcall
xor
and
mov
xor
jo
addr16
es
arpl
lock
lretw
cwtd
cmp
repz
mov
dec
fldcw
cld
and
dec
pop
fdivrs
dec
sbb
inc
inc
insl
ljmp
popf
dec
mov
arpl
jns
and
sub
pop
pop
sub
daa
ljmp
popf
call
fstps
or
pop
cmp
pop
insb
outsb
sbb
popf
pusha
sbb
mov
loopne
push
mov
lock
fcomp
or
out
loopne
cmpsb
mov
imul
mov
mov
pop
in
fsubrp
jb
rcrb
push
push
sti
sti
loope
push
pop
jmp
movsl
push
call
loope
sub
repz
and
pop
and
add
mov
add
imul
cli
pop
in
fs
aas
and
fwait
pop
add
push
dec
sub
pop
insb
dec
xchg
aaa
and
sub
pop
pop
aas
pop
inc
bound
outsl
clc
popa
inc
pop
push
fnstcw
jae
cmp
pushf
sbb
loope
bound
and
movsl
push
mov
outsl
loope
sbb
and
std
jmp
lret
cld
fwait
pop
jae
enter
iret
cld
loopne
jae
dec
pop
mov
xchg
clc
fstpl
sbb
daa
xor
daa
mov
movsb
inc
pushf
in
and
inc
fisubs
es
arpl
testl
pop
cmpsl
pop
and
mov
loopne
arpl
fs
out
fisubs
sbb
jmp
in
jne
pushf
mov
sbb
fbld
sbb
and
outsb
seta
lock
outsl
jecxz
jmp
cmc
mov
cmc
cli
ja
sub
sbb
xchg
subb
dec
mov
mov
xchg
adc
mov
cmp
jmp
in
add
loop
icebp
push
jne
loop
or
or
sbb
and
popf
and
pop
and
cmp
and
and
in
pop
or
sbb
movsb
arpl
sbb
and
outsb
clc
xchg
sbb
sbb
fmuls
arpl
xchg
lods
stc
or
arpl
sbb
lock
dec
cmp
mov
mov
dec
sbbb
dec
loopne
arpl
js
pop
loopne
push
js
and
and
xchg
mov
out
jmp
mov
add
mov
outsb
test
mov
outsl
loope
jmp
jmp
loopne
arpl
xchg
lods
stc
jmp
cli
jmp
sbb
or
cmp
ret
popa
loop
addr16
loop
mov
in
xchg
ret
sbb
sub
lock
stc
pop
sbb
outsl
mov
cwtl
sbb
stc
fstps
jmp
popa
addr16
in
pop
adc
fdivp
loopne
loop
mov
outsl
fisubrl
jb
or
loopnew
push
and
and
out
xchg
outsl
sbb
fwait
lock
stc
mov
cmpsb
call
mov
aam
loop
lock
push
in
fiaddl
xchg
push
and
pop
sub
mov
jbe
lock
pop
dec
frstor
arpl
loop
fs
lods
xor
fmull
pop
push
popf
mov
xor
dec
inc
inc
ljmp
pop
notb
pop
inc
pop
jnp
les
fmuls
pop
xlat
sbb
stc
fldenv
or
arpl
sbb
cmpsb
push
fisttpl
dec
pop
push
dec
negb
sbb
sahf
loope
inc
ds
cld
and
jae
in
pop
testb
inc
pop
or
loope
pop
sbb
stos
xor
push
pop
cmp
pop
test
outsb
sbb
and
data16
jo
pushf
add
jmp
pop
mov
push
pop
sbb
sbb
pop
icebp
nop
sbb
lock
pop
sbb
loope
dec
pop
push
jecxz
jmp
das
int
stc
pop
out
xchg
out
lcall
out
aas
sbb
sbb
push
push
jb
pop
lods
lcall
divl
icebp
pop
sbb
dec
lea
daa
or
lcall
jb
daa
pushf
lcall
sbbl
aaa
cmpsl
imul
shlb
lcall
rcrl
lcall
mov
push
test
ja
shrb
enter
sbb
es
xor
sbb
add
push
push
lcall
pop
sbb
cmp
arpl
jmp
loop
loope
cwtl
fsincos
push
fwait
lahf
cltd
xchg
dec
cmpsl
lcall
icebp
or
sub
and
or
cmpsl
lcall
sbb
add
pop
inc
lcall
pop
arpl
insb
pushf
xchg
mov
inc
notl
dec
out
call
xchg
adc
enter
bound
mov
pop
loopne
add
and
je
cli
in
pop
pop
loopne
arpl
pop
fdivrs
mov
rcrl
lcall
sub
cmp
lock
xor
js
fdivrs
add
push
pop
add
or
pop
lock
or
inc
pop
cmp
pop
arpl
cmp
push
push
dec
push
jmp
pop
mov
int
cmp
mov
sbb
pop
cwtl
aas
sbb
dec
enter
test
rcrl
lcall
push
lods
pop
xor
loopne
arpl
pushf
es
sbb
in
rcrl
arpl
sub
addr16
lcall
rep
mov
cmp
and
jmp
cltd
andl
xor
lcall
and
lahf
shll
add
pop
sti
or
sub
sbb
add
jbe
loop
lcall
pop
subl
and
cmp
cwtl
sub
lcall
mov
pop
pop
dec
xor
add
cltd
pop
pop
add
out
in
fistpl
fiaddl
pop
pushf
lcall
mov
fisubrl
imul
movsb
pop
sbb
outsb
aaa
sbb
sti
jns
and
repnz
ficompl
cltd
jl
mov
add
fimull
sub
sbb
scas
dec
daa
loopne
pop
and
add
cwtl
sbb
imul
mov
cwtl
jg
lcall
mov
cwtl
pop
das
loopne
add
mov
sub
movsb
pop
jmp
pop
jmp
mov
lcall
push
pop
lods
and
cli
and
and
fistps
bound
loope
or
cli
mov
gs
sbb
arpl
rorb
stc
and
cld
add
jb
sub
mov
cmp
pushl
in
loopne
and
fsubrl
dec
insb
xchg
cmp
pop
jmp
pop
push
lcall
pop
mov
sti
clc
pop
into
jbe
jge
loop
pop
out
aaa
incb
push
cwtl
addr16
lock
arpl
and
dec
pop
or
sbb
std
test
fsubr
sti
fs
pusha
lret
pop
dec
clc
or
lock
and
in
sbb
dec
jmp
ljmp
or
bound
js
fisubl
and
mov
and
std
pop
mov
sbb
outsl
movsl
cwtl
fnstcw
cwtl
or
pop
arpl
movsl
dec
push
test
andb
and
or
inc
movsb
dec
cwtl
fwait
fs
mov
in
jp
mov
push
adc
call
sbb
fsubs
aaa
leave
sbb
jo
mov
sbb
outsl
mov
sbb
fdivp
mov
addr16
mov
sub
adc
pop
pushf
pop
xchg
push
bound
ficoml
popa
call
fiaddl
bound
adc
xor
jb
rcrl
in
sbb
cmp
push
in
in
sbb
push
mov
dec
shl
push
pushf
dec
fdivrl
pushf
mov
pop
pop
adc
call
lods
mov
loop
pusha
jp
push
push
lcall
repnz
gs
call
cmp
fsubrs
push
inc
inc
mov
sbb
pop
jl
in
pop
fsts
jnp
pop
add
lahf
sbb
push
cltd
sbb
or
stc
adc
arpl
mov
aaa
push
pop
sbb
and
repz
xchg
cwtl
and
es
fnsave
adc
lcall
fsts
loopne
and
cmp
loopne
outsb
pop
sbb
adc
pop
icebp
xchg
add
cmp
lock
sbb
and
adc
mov
jg
lcall
ja
or
loopne
ja
hlt
or
outsl
cbtw
lcall
sbb
in
add
loopne
pop
pushf
lcall
call
gs
stos
loopne
arpl
fidivrs
test
out
arpl
sbb
enter
cmpsl
cltd
pop
sbb
mov
lahf
and
cmpsb
rcrl
loopne
xchg
jae
in
popf
inc
lock
and
adc
outsl
icebp
cmp
mov
mov
lock
stc
or
sbb
mov
imul
and
in
fmul
stc
cltd
xor
sbb
pop
xor
outsl
pushf
clc
mov
inc
arpl
icebp
sbb
sbb
fwait
cmp
push
fmuls
outsl
push
bound
enter
push
mov
sahf
pop
es
sbb
sbb
popf
shrb
sub
ret
jg
enter
and
stos
popf
mov
ficompl
cwtl
jmp
dec
neg
push
iret
arpl
adc
pop
fstp
daa
andl
movsl
loopne
das
xor
pop
out
xor
loopnew
fs
pop
frstor
aaa
aas
sbb
mov
lock
out
inc
lcall
addb
sbb
sub
sbb
adc
xchg
mov
fisubrl
adc
and
add
mov
pusha
jne
sbb
call
inc
push
jle
mov
enter
cmp
xchg
mov
loop
popa
loope
out
loop
and
imul
loope
stos
in
pop
sbb
and
out
cmp
push
pop
fists
pop
cmc
enter
sbb
mov
fstl
lcall
sub
mov
mov
popf
mov
pop
fldenv
pop
lea
fistpll
jl
pop
shrb
mov
loope
movsb
pop
push
pop
outsb
lcall
and
faddl
in
cmp
lcall
jl
pop
jmp
rcrl
lods
pop
add
xchg
call
repz
xor
ja
les
loope
or
jae
xchg
sahf
push
fldl2t
cld
inc
pop
jle
pop
xchg
int
jnp
sbb
pop
aas
sbb
mov
pop
jl
pop
jle
pop
mov
lcall
pop
aas
sub
add
dec
and
popf
lea
pop
sub
lcall
fistpl
aas
sbb
fimull
pop
xor
loopne
cmp
les
popf
push
mov
fisttpl
jmp
sbb
xor
push
push
movsb
scas
lcall
push
pop
sti
fistpl
mov
xchg
lcall
in
pop
dec
pop
sbb
pop
mov
mov
push
lcall
pop
inc
pushf
sub
ret
movsl
and
add
loop
inc
and
and
sar
out
fldenv
pop
dec
sbb
pop
lock
arpl
and
pop
sbb
lock
and
and
xlat
test
mov
adc
stc
loopw
movsl
mov
sbb
movsb
stc
pop
sbb
outsl
mov
call
mov
out
fdivrp
mov
pushf
loopne
mov
mov
and
pop
cli
mov
mov
sub
cltd
pop
mov
dec
movsb
and
jnp
pop
insb
ret
mov
dec
ja
pop
mov
flds
repnz
stc
jo
fisubl
clc
fstpl
pop
lret
and
jbe
mov
iret
mov
mov
lcall
fldenv
xchg
and
jle
sub
adc
and
lret
cld
and
and
dec
pop
movsb
outsl
es
inc
lods
mov
add
mov
push
or
jnp
dec
movsb
xchg
jns
aaa
sbb
leave
fisttpll
mov
icebp
lcall
jbe
dec
and
and
cwtl
test
lcall
outsb
and
test
sbb
mov
xor
pop
lcall
pop
aaa
aas
sbb
iret
loope
std
bound
sbb
push
push
outsl
movsl
ds
mov
sahf
aas
cmp
lcall
mov
sbb
mov
pop
or
cltd
sbb
cmp
lcall
sbb
in
negl
in
lods
rcrb
dec
pop
and
mov
xchg
mov
cwtl
je
jns
pushf
outsl
aad
pusha
sbb
cwtl
ds
lcall
and
pop
cltd
lcall
cwtl
and
pop
cwtl
jbe
lcall
jle
inc
and
neg
mov
adc
cs
out
ja
cwtl
sbb
xor
jnp
dec
xor
cwtl
xchg
or
push
jnp
lcall
sbb
and
sahf
xor
pop
xor
push
sub
out
pop
cmp
cwtl
add
sub
mov
es
lcall
add
je
decb
lcall
clc
inc
lcall
mov
arpl
dec
ret
mov
fldcw
add
sbb
jnp
push
and
sbbl
sbb
mov
sbb
ja
enter
inc
push
sti
jmp
rorl
and
cltd
popa
aas
or
jmp
sbb
loopne
arpl
cmp
and
mov
fisubl
sub
sbb
jg
sbb
in
cwtl
and
mov
xchg
pop
fisubs
and
sbb
xchg
mov
push
sbb
or
outsb
lahf
test
mov
add
mov
ljmp
sbb
lcall
arpl
and
lcall
or
leave
xor
and
sti
test
mov
arpl
push
lcall
loopne
arpl
lock
idivl
aad
pop
ja
sub
and
leave
lcall
ljmp
popa
in
cmp
lcall
jb
cli
xchg
and
pop
xor
data16
lcall
push
rorl
pop
sbb
mov
jae
out
jecxz
push
in
pop
jnp
arpl
pop
rcrl
xor
fnstsw
push
pushf
and
or
pop
or
mov
fiadds
dec
fnsave
out
fnstcw
pop
pop
or
pop
or
loopne
and
cmpsb
jp
mov
sbb
jb
shl
and
add
mov
cltd
cmp
sub
lcall
lcall
lock
sub
scas
inc
bound
movsl
pop
lock
cli
loopew
fistps
lcall
out
pop
fstp
iret
fstps
push
sti
out
and
aad
mov
add
js
out
in
cmp
lcall
sbb
push
loopne
sbb
inc
xchg
pop
push
pop
mov
bound
scas
test
add
bound
jb
dec
push
sbb
pop
xchg
pop
xchg
xchg
scas
and
sub
fimull
or
out
jo
ljmp
sbb
or
push
das
loopne
arpl
loopne
add
push
cmp
pop
jmp
arpl
xchg
cmp
scas
jnp,pt
inc
ficompl
sbb
pop
fucomip
outsb
out
fcomi
out
pop
imul
pop
cli
mov
and
and
add
mov
pushf
cltd
mov
cmp
sbb
cmp
jae
and
call
pop
xchg
cld
pop
sbb
sahf
outsl
and
outsl
pop
dec
mov
bound
and
jbe
lcall
or
cmp
jns
hlt
ficompl
fdiv
sarl
arpl
dec
and
pop
and
pop
jb
loopne
jns
arpl
cmp
pop
add
lcall
pop
jno
add
or
push
sub
cli
fiaddl
push
inc
popf
xor
sbb
and
push
sbbl
cmp
push
mov
pop
je
sti
je
lcall
sti
test
test
lcall
jge
and
pushf
pop
ds
lcall
in
movsb
mov
jecxz
xor
pop
lcall
in
mov
xchg
pop
outsl
mov
jecxz
xor
pop
lcall
mov
jecxz
xor
pop
lcall
stc
aam
sahf
cli
and
mov
les
in
jns
outsl
in
cmpsb
pushf
mov
add
popa
cltd
mov
lcall
outsb
cmpsb
out
cmc
mov
pop
mov
lcall
outsb
cmpsb
out
add
bound
lcall
adc
adc
test
icebp
lcall
and
cwtl
fistps
pop
neg
pop
dec
xor
pop
pop
lcall
pop
pop
pop
fmuls
es
sbb
dec
movsb
xor
es
js
les
pop
inc
adc
lock
call
ret
jecxz
pop
out
adc
lcall
shr
xchg
sbb
sub
pop
cld
ss
in
jmp
pop
jle
in
xor
arpl
ss
icebp
lcall
fcomps
adc
pop
lret
cltd
loope
fchs
negl
dec
mov
sbb
stc
lcall
pop
add
loope
add
mov
and
jp
out
pop
mov
add
arpl
lret
cltd
dec
pop
add
mov
lods
pusha
dec
dec
ficomps
pop
pop
push
mov
pop
or
into
push
add
dec
frstor
pop
call
sub
cmpsb
scas
inc
arpl
pop
push
sbb
pop
xor
push
xor
jmp
lcall
movsl
dec
mov
loope
add
imul
sti
pop
xor
pop
add
dec
push
push
dec
int3
push
pusha
dec
pushf
out
sbb
lods
fldl
mov
adc
jo
push
xchg
xchg
int3
pop
mov
pop
pop
xor
xor
fcom
arpl
pop
loopne
cmpsb
sbb
pushf
leave
nop
dec
sub
in
aam
or
fsubs
aas
leave
mov
pop
push
fsts
in
jbe
cmp
dec
jg
test
fsts
sahf
sbbl
ljmp
jmp
std
bound
in
dec
jmp
lcall
clc
rorb
data16
pop
xchg
test
lcall
loope
in
fbld
push
loope
pop
cs
xor
jbe
mov
adc
das
push
enter
push
sub
mov
rcrb
sub
sbb
pop
inc
gs
pop
adcl
mov
push
out
cltd
test
jg
push
lret
test
xchg
outsl
in
pop
dec
xchg
movsb
xchg
ds
pop
or
or
out
add
and
mov
icebp
lcall
in
push
mov
fstps
int3
bound
or
mov
push
lds
sbb
pop
popa
fs
cmc
mov
cltd
loopne
jbe
xor
mov
sub
ret
out
enter
fwait
push
outsb
in
jmp
sbb
addr16
shl
icebp
lcall
in
enter
adc
pop
jno
clc
and
fwait
jne
mov
icebp
lcall
mov
repnz
pop
pop
mov
push
imul
push
in
lcall
in
add
mov
push
in
xchg
mov
add
lret
push
and
pop
push
insl
push
push
xor
in
dec
lcall
sbb
or
sub
fsts
xchg
in
ja
push
xlat
sbb
lcall
mov
in
sub
sub
shlb
lcall
xlat
add
sbb
dec
or
sub
mov
sbb
push
es
ficompl
mov
loop
push
enter
mov
rcrl
and
sbbb
push
add
xor
daa
sbb
rcrl
popa
shrl
movsl
cld
pop
pop
jnp
fistpll
pop
mov
push
and
mov
lock
push
adc
out
inc
cli
pop
or
arpl
cwtl
pop
mov
xlat
fwait
aas
out
lcall
iret
add
jne
add
mov
mov
push
lcall
test
push
lcall
xchg
daa
xchg
xchg
jg
mov
xchg
popa
cmpsb
das
and
push
fcmovnb
lcall
lcall
je
push
dec
mov
mov
ficompl
lock
data16
dec
pop
lcall
pop
sub
jbe
lcall
sub
sahf
movsb
or
pop
pop
test
fists
cli
and
push
sbb
xor
cmp
and
ffree
addr16
xlat
jl
sbb
fs
popf
sbb
data16
pop
outsb
and
push
pop
push
fcoml
cmpsb
or
idivl
divl
aam
mov
mov
pop
jne
push
jne
popf
jbe
clc
fistpll
outsb
sahf
push
es
mov
mov
pop
lea
out
daa
call
daa
ds
sbb
mov
xchg
pop
arpl
and
and
nop
cmpsb
xor
rclb
addr16
fdivrs
sub
pop
ja
loope
movsl
fcoms
jp
sti
xchg
iret
ret
cmpsl
sbb
lcall
outsb
mov
jns
pusha
sub
loope
or
add
add
shl
lock
lret
or
test
mov
pop
jo
ljmp
pop
ds
pop
rcr
je
je
and
pushf
pop
inc
fsts
sbb
ljmp
sbb
ljmp
push
cmp
sbb
bound
clc
in
sbb
xchg
fiaddl
scas
movsl
testb
out
pushf
dec
xor
dec
push
pop
outsb
popa
pop
sbb
pop
sbb
lcall
push
push
pop
sbb
outsb
fisttpll
lcall
pusha
js
sbb
sbb
pop
outsb
lahf
mov
xlat
inc
dec
lcall
sub
pop
mov
in
jbe
clc
and
cwtl
in
and
and
cwtl
mov
out
dec
lcall
mov
lcall
out
mov
push
mov
sbb
xor
mov
lcall
in
mov
pop
and
rorb
ret
jmp
cmp
lcall
mov
and
sbb
into
xlat
ljmp
fistpl
jecxz
lea
in
jbe
xor
arpl
std
cmp
es
cmp
pop
push
jecxz
data16
mov
lcall
in
xchg
and
jecxz
data16
mov
lcall
or
cmp
mov
pop
mov
sahf
xlat
ds
lcall
jo
in
and
sahf
xlat
ds
lcall
push
lcall
test
icebp
lcall
dec
pop
xchg
nop
xchg
je
mov
pop
dec
mov
lea
jne
sbb
sbb
ds
mov
ficomps
mov
pop
add
sbb
sbb
loope
movsl
pop
mov
pop
je
int3
sbb
pop
pop
cmp
push
mov
add
mov
pop
data16
mov
and
icebp
lcall
dec
xor
sbb
pop
sti
fistl
sbb
imul
sbb
jnp
gs
bound
adc
xchg
lret
sbb
mov
loopne
and
mov
push
ficomps
ja
mov
sbb
mov
mov
jg
fcoml
pop
mov
cmp
mov
push
sbb
mov
sbb
movsl
push
insb
fs
mov
cltd
push
sbb
fbstp
sbb
sahf
cltd
lahf
xor
sbb
push
loope
lods
mov
cmp
rcrb
jnp
loopne
lcall
pop
sub
outsl
mov
fisubrl
mov
testb
rcrl
sbb
lods
dec
call
sbb
es
lret
sbb
sahf
push
data16
shlb
in
fldcw
pop
outsb
gs
lcall
sbb
push
jno
dec
and
xchg
xor
sub
pushf
sarl
cmpsb
sbb
out
xchg
cltd
pop
call
xchg
movsb
jbe
add
fsubs
pop
sub
pop
rol
pop
imul
mov
fistpl
sahf
bound
pop
fidivl
push
fldl
shll
add
mov
mov
arpl
pop
lret
jo
mov
or
shrb
and
fiaddl
sub
sbb
lcall
push
adc
xchg
sahf
sarb
xchg
sahf
and
ret
sbb
add
and
jl
pop
outsb
mov
ss
movsl
fidivs
int
mov
in
faddl
mov
jns
pop
mov
jo
and
stc
mov
out
jae
movsb
pop
out
sbb
and
popf
pop
test
enter
pop
mov
push
lahf
dec
mov
sbb
fcomps
sbb
ds
cwtl
dec
xor
mov
ljmp
mov
inc
pop
or
jl
sbb
inc
pop
or
jl
sbb
xor
adc
mov
pop
loopne
inc
add
mov
jns
and
test
outsl
es
sbb
sahf
mov
sbb
push
gs
outsb
push
and
jp
lcallw
sbb
pop
mov
lcall
and
stos
sub
cltd
jbe
sbb
mov
and
sub
pop
stc
sbb
sbb
mov
leave
mov
divl
dec
push
arpl
pop
aas
xor
lcall
pop
jnp
xchg
push
pop
lret
and
jg
and
cltd
fwait
out
mov
xchg
lods
pop
push
adc
insl
mov
lahf
fldt
mov
sbb
mov
mov
mov
jle
mov
xor
pop
and
lcall
in
pop
cmp
lcall
leave
les
cmp
add
in
pop
lcall
and
les
cs
sub
lcall
leave
push
mov
pop
pop
dec
arpl
icebp
sub
sbb
das
push
enter
arpl
jae
pop
pushf
fistps
pop
pop
fbld
pop
push
push
mov
lcall
jae
mov
arpl
and
mov
cmp
in
out
pop
negl
loop
push
loopne
and
dec
popa
pop
addr16
mov
sbb
cmp
lcall
pusha
mov
mov
mov
aad
popf
pop
sbb
pop
sub
in
pushf
insb
pop
pop
sbb
sahf
aam
lcall
test
pop
dec
lcall
imul
ret
imul
ficompl
sbb
jnp
fdivl
and
mov
sahf
push
test
icebp
lcall
mov
and
pop
in
pop
ficoml
mov
fcompl
dec
jbe
jne
mov
mov
mov
popf
or
or
and
ret
or
adc
xor
xor
lods
pop
mov
lcall
lcall
adc
cmp
or
stos
outsb
lcall
dec
insb
bound
lcall
cmpsb
jns
mov
sbb
pop
test
cmp
and
lcall
cmp
les
push
daa
sub
out
and
pop
xor
sarl
cltd
sbb
lcall
test
cmp
add
ljmp
dec
fsub
fisubs
cmp
or
xchg
lods
fildl
mov
popa
mov
inc
sbb
sbb
mov
lods
mov
fs
in
sbb
lcall
loope
or
test
inc
sbb
ljmp
xchg
fidivl
cmp
push
and
aad
pop
fisubl
loop
sbb
das
dec
mov
popa
xor
lcall
movsl
xor
lcall
out
pop
cmp
dec
lock
jmp
sub
adc
dec
cltd
data16
or
dec
dec
loope
dec
push
sub
daa
pop
dec
int
cmp
push
fstpt
jp
sbb
dec
sub
add
jp
pop
out
push
lcall
aas
or
arpl
mov
xchg
mov
jne
mov
mov
inc
fsubs
sarl
sbbl
shlb
adc
push
pop
cld
inc
cltd
inc
fs
fwait
mov
fmul
pop
add
pop
fnsave
push
pop
leave
and
sahf
mov
push
xchg
fiaddl
pop
mov
fwait
mov
aam
xchg
loopne
jecxz
cmp
mov
daa
mov
and
or
movsl
mov
arpl
and
pop
mov
and
xchg
loopne
in
cwtl
fwait
mov
in
lock
sbb
inc
mov
daa
das
sarb
stc
sbb
fdivrs
cmp
push
pop
push
sbb
sub
lcall
cwtl
cli
jg
mov
subl
test
sbb
bound
sub
fwait
js
lcall
das
out
push
and
pop
lock
push
pop
mov
pushf
xor
andl
xchg
cmpsb
jmp
mov
fisubrs
shll
andl
mov
pop
fstl
cmpsb
or
push
outsl
pushf
jle
xchg
pop
pushf
mov
dec
fs
in
leave
lods
insb
xchg
out
lods
mov
ret
push
aas
out
lret
xchg
xchg
pop
mov
and
int3
inc
xchg
pushf
or
mov
sbb
in
xchg
out
fstpl
aad
push
arpl
sahf
pop
push
sti
dec
add
lcall
cltd
lcall
loopne
arpl
aam
call
mov
clc
cmp
pop
or
push
loopne
add
pop
jne
adc
xchg
inc
push
cli
pop
mov
fnstenv
dec
fldl
pusha
rorb
fsqrt
sbb
pushf
mov
pop
cwtl
leave
insb
sahf
in
cli
cmc
jle
fbld
xchg
scas
fstpt
ljmp
pop
mov
scas
push
pop
repnz
stc
and
pop
daa
mov
std
dec
loopne
adc
pop
mov
lcall
pop
mov
mov
pop
andb
insb
mov
or
or
push
insb
loope
das
xchg
jns
das
in
pop
xchg
bound
cli
dec
and
popa
movsl
sbb
sub
inc
fiaddl
or
and
xor
mov
sti
sub
cmp
fmulp
inc
sbb
jp
pop
movsb
push
dec
sbb
sub
mov
mov
inc
pop
push
repnz
mov
sbb
sub
lcall
or
aad
jecxz
lcall
sub
xchg
imul
lcall
lcall
in
fcompl
fimuls
xchg
pop
test
lcall
fcomps
popf
sub
popf
lcall
je
jle
cmp
lcall
lods
cmp
lcall
or
je
mov
loop
imul
pop
ds
lcall
sub
sub
popa
cmp
pop
scas
and
lcall
popa
fimuls
mov
push
lahf
jne
mov
icebp
lcall
fcomps
out
sub
cltd
jnp
add
mov
mov
insl
daa
pop
sbb
lcall
sbb
xor
push
lcall
rclb
lcall
cmpsl
xchg
clc
and
sbb
pop
pop
push
lcall
das
jo
in
out
lcall
je
jle
pop
js
lcall
sbb
cs
pop
mov
cs
pop
sti
pusha
inc
lods
fdivl
out
lcall
data16
pop
les
xchg
pop
ds
lcall
cmp
dec
sahf
and
sbb
push
sbbl
es
into
mov
pop
mov
pop
test
lcall
pop
fcomps
arpl
xchg
fs
jle
popf
mov
jbe
out
mov
es
jle
loop
arpl
push
pop
and
iret
pop
loopne
jmp
sahf
cli
inc
pop
push
aad
rorl
loopne
and
adc
sbb
addr16
xlat
call
and
ja
out
mov
mov
lcall
mov
add
lods
insb
ficompl
jg
gs
mov
mov
icebp
lcall
push
pop
add
sbb
lcall
sub
stos
fidivrs
lcall
xor
pop
loop
mov
and
mov
scas
sub
pop
loopne
xor
addb
loopne
jbe
pop
mov
pop
sub
inc
pusha
int3
jne
dec
and
cmp
dec
jo
pop
cwtl
push
clc
mov
and
call
std
sbb
lahf
cwtl
jecxz
or
jmp
pop
sbb
pop
pop
test
pop
pop
pushf
jbe
pop
mov
cli
xchg
push
fs
mov
fsubrs
or
or
mov
push
sbb
bound
push
fiaddl
and
pushf
sbb
outsl
fmul
std
mov
into
enter
dec
mov
mov
lahf
xchg
ljmp
pop
popa
data16
bound
push
inc
sbb
and
rcll
out
mov
jno
add
scas
shlb
ljmp
pop
sbb
cltd
popf
cmp
adcl
xor
push
and
stc
inc
or
test
enter
ljmp
xchg
ret
cltd
arpl
fistpl
arpl
xor
jae
fimuls
jbe
insb
andl
mov
push
arpl
cwtl
pop
arpl
lock
fisubl
addl
rcr
fcomps
cmpsb
das
iret
loopne
test
cwtl
xor
xchg
in
dec
mov
lock
imul
jmp
gs
sbb
lcall
cmpsb
pop
insb
lahf
jge
mov
fcompl
scas
jge
push
jg
jecxz
sahf
and
popa
and
pop
cltd
iret
fnsave
lret
and
loopne
mov
and
lock
add
jecxz
movsb
andl
mov
mov
lret
and
xchg
fsubl
and
stc
xor
pop
pop
xorl
jbe
nop
je
movsl
in
loope
pop
mov
fsubl
push
loope
pusha
outsl
pop
imul
pop
fidivs
pop
sub
mov
iret
fstps
daa
test
pop
lcall
lahf
and
test
sbb
dec
popa
pop
push
lahf
sbb
or
daa
push
lahf
push
pop
sbb
nop
xor
lahf
arpl
pop
fildll
pop
shlb
add
pop
daa
or
iret
fists
out
adc
and
in
in
out
mov
pop
adc
movsb
or
push
mov
adc
lcall
lahf
xor
pop
imul
jo
in
lahf
mov
mov
push
xchg
jp
fsubl
cmpsl
mov
xchg
pushf
fldt
sbb
sahf
xor
pop
pop
lcall
cmc
cmpl
inc
lcall
push
mov
fwait
pop
lcall
lahf
xor
fistpl
popa
and
push
lahf
mov
lcall
arpl
pop
div
mov
mov
icebp
lcall
or
test
negl
jecxz
mull
pop
mov
or
xchg
jge
pop
pop
mov
lcall
movsb
test
adc
push
push
movsb
les
xchg
mov
mov
rcrl
dec
cld
outsl
and
and
dec
mov
jmp
sub
movsb
dec
pop
push
loopne
adc
sub
pop
or
add
or
push
mov
jmp
mov
sbb
pop
cmc
xchg
jmp
mov
mov
xor
lcall
lods
mov
es
inc
fbld
data16
mov
movsb
outsl
push
jbe
out
push
stc
in
adcl
dec
in
xchg
lods
loop
push
es
sub
and
jle
xlat
in
pop
aam
loop
out
push
lcall
loope
or
stc
jno
movsl
in
fsub
daa
mov
mov
sub
mov
cmpsb
xorl
lcall
jp
int3
dec
fcomip
lcall
pop
es
dec
popa
sub
es
push
popa
insl
push
lahf
lea
test
mov
mov
popa
sarb
in
xchg
mov
dec
push
pop
jae
mov
call
lea
pop
mov
sbb
imul
push
es
lcall
es
mov
and
fstps
jp
or
or
jge
sbb
lods
rcrl
jp
jge
sbb
lcall
insb
sarl
fcomps
jp
out
xor
jae
pop
sub
sbb
stc
and
loop
in
pop
inc
mov
xor
add
cmp
outsb
repnz
ds
sbb
jp
mov
mov
pushf
xchg
popf
pushf
sbb
mov
xchg
push
pop
add
add
lcall
xchg
add
lahf
xchg
or
jp
inc
sbb
dec
push
mov
es
loop
jg
pop
sub
hlt
adc
fsubl
pushf
stos
and
xchg
outsb
stos
insb
and
and
bound
scas
jne
fildl
sbb
sbb
pop
mov
add
xor
xchg
fimull
lret
filds
lret
fildl
fildl
movsl
bound
sub
cmp
and
jmp
ja
sti
pop
and
aas
fldenv
or
sub
bound
pop
or
pop
pop
out
sti
int
stos
pop
add
pop
sub
sbb
and
lock
insb
sub
lcall
sbb
sbb
pop
jb
sti
push
arpl
pop
xchg
cmp
pop
xchg
adcb
and
add
or
mov
jle
pop
sti
jnp
sbb
pop
sahf
xchg
mov
insb
pop
xchg
jnp
lcall
aas
or
arpl
das
loopne
sbbl
mov
xchg
mov
cmpsb
enter
sbb
pop
xor
jmp
sbb
cld
push
mov
aaa
jp
cltd
arpl
insb
fnstsw
out
fcompl
sbb
cltd
sbb
in
stos
lock
or
pop
pop
cltd
arpl
test
sbb
aaa
addr16
mov
out
or
lcall
or
jmp
loopne
pop
outsb
and
push
out
dec
lcall
or
and
lcall
sbb
lock
sbb
aaa
addr16
inc
pop
sti
insb
mov
xor
pop
lock
xchg
and
push
shll
rol
fcmovnbe
xor
xchg
and
mov
or
or
push
add
sub
pop
aaa
mov
shl
and
test
enter
jmp
fistps
pop
cmp
adc
xor
mov
call
mov
pop
roll
fs
adc
xor
push
pop
into
push
arpl
pop
fnstcw
mov
loop
xchg
fs
bound
mov
and
jecxz
fdivrs
pop
push
jno
rcrl
push
jno
shll
shll
pop
pop
pusha
imul
and
dec
data16
into
dec
pop
xor
adc
jl
rorl
imul
ficompl
xlat
cmp
fcomps
pop
and
call
sbb
pop
in
xchg
clc
call
jecxz
pop
pop
or
push
jge
fisubl
inc
pop
fwait
push
loopew
movsb
clc
and
popf
fcoms
push
das
jbe
xchg
push
lock
jl
pop
sbb
call
loop
add
popf
lock
loope
sbb
adc
lcall
fisubl
iret
lea
mov
mov
pop
sbb
loopne
mov
arpl
ret
ret
dec
loopne
rol
mov
loopne
dec
jecxz
fisubl
scas
je
xchg
pop
xor
leave
repz
repz
jle
fstl
out
sbb
sbb
popf
rorl
ds
cmpsl
arpl
sbb
pop
mov
andb
cmp
dec
outsb
fadds
xchg
arpl
insb
sbb
lcall
repz
adc
mov
lret
dec
out
cltd
icebp
popa
lcall
sbb
dec
sbb
cmpsb
es
sbb
repnz
arpl
out
mov
pop
or
loopne
outsl
fs
flds
pushf
addr16
out
insb
and
and
cmp
mov
jle
sbb
cmp
shlb
pop
loopne
sbb
mov
lds
out
xchg
push
pop
stos
movsl
loop
ficoml
lahf
sub
ss
fadds
data16
addl
loope
dec
push
adc
pop
add
ret
sbb
arpl
mov
sbb
mov
cltd
inc
aam
bound
pushf
mov
shr
loopne
dec
push
in
and
pop
addr16
adc
mov
mov
test
lcall
subl
fldt
andl
pop
lcall
sub
xchg
jnp
pop
loope
mov
pusha
mov
stos
dec
mov
jne
lcall
add
mov
pop
mov
pop
pop
lcall
fsubr
mov
xchg
and
pop
stos
das
dec
mov
mov
mov
push
xor
push
mov
popa
pop
sar
rorl
jae
push
popf
xchg
mov
notb
out
in
in
rorl
xor
test
pop
hlt
adc
sahf
cwtl
hlt
jo
jl
mov
icebp
lcall
insb
mov
push
xor
jns
mov
xor
xchg
mov
sbb
sbb
and
arpl
jl
push
mov
mov
cs
sub
pop
and
xor
pop
test
lcall
cmpsb
pushf
jae
mov
sbb
int3
inc
sbb
xchg
add
test
pop
sbb
jmp
mov
lea
negb
sbb
xchg
fsubs
push
mov
negb
cwtl
fisubrs
push
std
es
sbb
xchg
and
dec
daa
pushf
scas
cmpsb
negl
in
jmp
mov
sti
fwait
in
jbe
cmpsb
sahf
mov
push
mov
sub
pop
mov
lcall
sbb
push
push
sbb
aam
loope
and
hlt
sbb
lods
test
pusha
repz
sbb
sti
fiaddl
add
fwait
mov
test
sbb
xchg
xchg
ds
pop
stos
and
push
sub
call
lcall
pop
movsb
sbb
add
pusha
mov
popa
stos
test
imul
sbb
mov
pop
mov
inc
fiadds
and
clc
cltd
sbb
and
in
cwtl
mov
in
xchg
pop
pop
xor
push
test
int3
jmp
fldenv
or
mov
pop
loopne
iret
fcoms
cwtl
mov
pop
int3
lret
movsb
outsb
movsb
mov
xor
fiaddl
scas
out
push
in
leave
jmp
imul
or
aaa
fmull
insb
pop
gs
movsb
dec
sub
pop
fnstsw
pushf
adc
jns
fldl
inc
dec
loopne
rorb
lcall
or
data16
loopnew
mov
test
lcall
clc
cmc
add
add
xor
jnp
jg
add
pop
sbb
mov
sbb
adc
jns
fidivrs
fucom
lcall
add
jnp
data16
mov
or
frstor
aas
mov
xor
dec
fstpl
sahf
xor
gs
leave
push
xor
sub
pop
lcall
insb
mov
popa
and
mov
lret
mov
dec
lcall
divl
mov
cmp
in
imul
push
and
cld
xor
ficomps
sahf
add
fs
dec
fadds
push
mov
rcrb
sbb
mulb
imul
loop
mov
push
pop
inc
es
fistpll
push
fnstenv
or
pushf
add
dec
arpl
pop
fadds
movsl
push
push
jbe
xor
popfw
inc
pop
inc
gs
push
lret
stos
sbb
fcoms
dec
cmc
mov
pop
imul
jmp
pop
xchg
push
xchg
call
adc
and
popa
in
jbe
popa
sar
and
pop
inc
lcall
popa
in
pop
lret
daa
jns
mov
lcall
popa
and
rorl
in
xor
pop
sub
test
mov
xor
mov
in
gs
mov
pop
mov
dec
lcall
hlt
into
sub
pop
insl
fsubs
adc
sub
push
clc
aas
dec
add
xor
scas
aad
push
test
icebp
lcall
gs
mov
xor
faddp
inc
popa
xchg
push
lret
mov
xor
jecxz
pop
pop
add
pusha
mov
adc
xchg
orb
xchg
mov
int
cltd
fmul
xor
mov
xor
faddp
and
fnstcw
pop
pop
sbb
popf
xor
xor
lcall
out
push
icebp
pusha
sahf
sbb
push
ds
and
push
pushf
and
jg
adc
mov
arpl
mov
dec
lcall
push
in
fmul
jl
stc
push
and
pop
cmpsb
lret
lcall
out
pop
mov
dec
fcmovbe
aam
sbbl
xor
inc
cmpsl
sbb
leave
mov
mov
lcall
pop
adc
fstpl
movsl
sub
lcall
sbb
filds
ds
in
mov
lcall
cmp
aas
in
jo
push
and
mov
mov
test
cmp
jg
test
ret
pop
mov
rol
sbb
fildll
in
pop
and
cwtl
pop
cmp
call
lock
mov
pop
leave
jno
stc
mov
jmp
sbb
push
enter
shlb
sti
lods
outsb
mov
fstl
mov
mov
xchg
push
cwtl
repnz
imul
hlt
movsb
je
lds
mov
movsb
lret
sahf
xchg
mov
or
cmpsl
jae
push
pop
arpl
jns
shl
movsb
sbb
scas
sbb
mov
mov
movsl
inc
loop
out
xchg
bound
sbb
add
and
lcall
mov
shlb
lcall
out
mov
fisubrl
sbb
stc
decl
sbb
fidivrs
and
lcall
fcomps
sub
pusha
add
jmp
loopne
fs
movsb
sar
push
lods
xchg
pop
jne
ficoms
sbb
in
xorl
test
sbb
mov
and
jmp
daa
lock
xchg
sbbb
jl
jb
es
test
fcmovnbe
fisttpl
sub
out
cmpsb
inc
push
je
notb
daa
std
pop
pop
push
push
je
mulb
xchg
inc
pop
mov
outsl
sbb
fistpl
addr16
rcrb
or
neg
dec
neg
inc
pushf
in
and
out
sub
pop
mov
fstps
lahf
and
mov
ja
mov
jmp
mov
flds
xor
sti
aam
loopne
jbe
divb
mov
lahf
lcall
or
insl
mulb
movsb
lcall
inc
mov
hlt
push
mov
or
sahf
test
lcall
in
cmp
lcall
loopne
push
mov
fcomps
pop
lcall
sti
outsb
mov
and
mov
in
in
je
dec
pop
jmp
test
lcall
clc
or
sbb
jp
mov
mov
and
and
lcall
fsub
mov
and
lcall
into
sbb
pop
inc
lcall
movsb
and
dec
lcall
sub
aad
sub
fdivrs
lcall
sbb
and
cmp
xor
sbb
inc
sub
test
jmp
xchg
and
lcall
mov
pushf
push
pop
test
int3
cmpl
pop
and
pushf
int3
pop
bound
mov
mov
cmpsb
push
out
mov
jbe
and
outsl
push
fnstenv
rcll
sbb
lds
outsl
js
push
and
js
jns
mov
lcall
mov
mov
push
sbb
push
xor
pusha
jmp
mov
fnstsw
add
push
bound
dec
int3
and
test
push
fiaddl
test
sub
pop
loopne
arpl
hlt
mov
or
iret
cltd
add
test
mov
cltd
xchg
push
shl
pop
decb
dec
pop
xchg
negb
cld
mov
loopne
lcall
sahf
cmp
lcall
fadds
rcrb
js
dec
into
mov
es
and
scas
mov
mov
mov
je
xor
fs
jmp
fidivrs
sti
or
xor
mov
call
pop
push
or
pop
pop
pop
fisubrs
lahf
xor
push
xchg
arpl
sbbb
outsl
sbb
shlb
out
cwtl
or
push
pop
fisubrs
mov
loopne
adc
je
addr16
into
sub
pop
enter
enter
sub
add
sub
add
sub
jmp
sub
or
fimuls
sub
movsb
jmp
sub
sub
das
add
sub
and
popf
sbb
out
out
jg
fdivrs
fiaddl
loope
sub
ficoml
scas
enter
pusha
cmp
ja
pop
sbb
insb
cltd
xchg
xchg
fidivl
mov
arpl
pop
aas
mov
mov
lahf
aad
mov
mov
call
loope
jl
cltd
pop
xchg
and
sbb
popa
das
mov
insl
call
insl
xor
and
xor
sbb
cli
jge
loopne
lcall
fs
sbb
jle
loope
notl
pop
pop
sbb
jge
push
push
in
movsb
mov
lods
lcall
push
and
dec
sub
sbb
hlt
jp
pusha
sbb
adc
lcall
lods
push
sbb
mov
jp
mov
push
lret
pop
push
fcmovnbe
cli
mov
xor
aam
mov
jbe
clc
pop
pushaw
cmp
jae
xor
mov
pop
mov
mov
in
sbb
push
fistpl
sahf
shlb
jl
lcall
in
cmp
lcall
je
add
lcall
push
neg
xchg
fwait
and
pop
arpl
outsb
dec
cwtl
fsts
call
fadds
xor
pop
pop
fnstenv
loop
jnp
sbb
stos
cltd
clc
popf
jg
int3
rcrl
sbb
and
pop
loopne
hlt
ficoml
rcrl
sbb
fisttps
outsl
or
fistps
sbb
pop
lea
adc
mulb
insb
cmp
cmp
pop
lods
and
pop
ss
push
pop
and
dec
sahf
insl
mov
cmpsb
in
int3
gs
pop
sbb
stc
fstpl
negb
hlt
sub
fidivs
jg
xchg
insl
ficoml
pop
inc
fidivs
lcall
movsl
sub
sbb
shll
fidivl
push
lea
das
xchg
push
fnsave
ds
mov
cmpsb
xor
outsb
sub
cld
popa
pop
aam
inc
pop
sahf
sbb
sbb
jge
cmp
and
arpl
rcll
movsl
ja
and
and
jge
sahf
mov
out
mov
adc
push
imul
popf
lcall
loop
lcall
jbe
clc
jecxz
lcall
es
lcall
jmp
sub
loope
push
sub
outsb
fdivs
lcall
ja
pop
inc
lcall
loopne
stos
loope
lea
fisttps
lcall
dec
pop
push
je
xor
push
lcall
xchg
test
mov
bound
mov
lret
dec
scas
xor
loop
roll
lcall
fildl
lods
leave
dec
jecxz
fsubr
dec
pusha
out
fdivl
and
lcall
inc
sti
in
mov
xchg
lcall
pop
sub
test
fildl
fcoml
jecxz
in
jg
pop
popf
lcall
shrb
mov
pop
cld
lods
jbe
sti
cld
dec
inc
in
fistps
ficoms
cmp
sbb
mov
pop
into
adc
add
icebp
loopne
pop
and
sub
or
sbb
pop
test
das
dec
add
loopne
data16
mov
mov
xor
xchg
fidivl
lds
xchg
mov
movsl
ficoml
test
movsb
rcrb
cwtl
sbb
push
icebp
in
mov
inc
mov
and
sub
sbb
shlb
sub
mov
lcall
or
enter
xchg
mov
nop
cmp
lods
lcall
cs
not
je
insb
pop
add
sub
lcall
lcall
int3
movsl
pop
mov
and
mov
push
pop
sbb
das
adcb
jmp
or
sahf
pop
pusha
push
mov
and
popa
sbb
je
imul
pushf
lcall
push
lcall
in
mov
lea
test
cmp
sbb
pushf
mov
fistpl
aas
sub
lcall
push
pop
xor
shl
loop
cs
mov
cmpsb
xchg
jne
dec
popf
push
cmpsb
cltd
xchg
push
pop
push
cmpsb
fnstsw
pop
shll
mov
jnp
mov
mov
pop
add
mov
sub
leave
lretw
movsl
pop
jno
pop
int3
mov
mov
pop
pop
pop
cmp
loopne
int3
and
xor
rcll
pop
mov
sbb
pop
lea
hlt
lods
stos
pop
push
push
mov
mov
lea
fisttpll
mov
inc
fwait
mov
popf
fimull
push
jmp
sbb
int3
dec
sbbl
fwait
and
hlt
xlat
test
outsb
sbb
add
sub
sub
jbe
add
dec
into
mov
fdivrs
loop
jle
gs
adc
xchg
sbb
sub
dec
insb
fadds
gs
dec
jecxz
fwait
push
adc
mov
stos
gs
out
mov
xchg
push
push
out
jb
push
adc
sub
sbb
loopne
arpl
or
call
daa
pop
mov
mov
fsub
adc
add
out
jmp
add
xor
test
lret
xor
test
out
test
push
enter
push
jo
addr16
jns
push
stc
pop
push
inc
dec
data16
sbb
sti
lcall
mov
out
out
push
xchg
mov
into
pop
movb
cmpsb
enter
jecxz
data16
das
lret
mov
mov
fstpt
xchg
out
movb
fwait
jmp
je
pop
js
outsb
or
sti
pusha
sbb
out
jg
sbb
cmp
cli
sbb
addr16
pop
push
inc
stc
jb
xor
inc
mov
add
or
test
fcoms
dec
stc
pop
jg
clc
inc
testl
out
inc
sub
imul
or
sbb
fnstenv
push
pop
ffreep
dec
pop
push
inc
iret
test
arpl
lcallw
pop
and
je
pop
gs
or
fldenv
in
fidivrs
in
in
in
push
jb
fdivr
aaa
daa
insl
push
cmpsl
jno
arpl
insl
cmp
sub
jp
cmp
sbb
push
adc
lcall
mov
test
mov
ret
daa
or
mov
faddl
test
lcall
sub
sbb
stc
movsl
mov
cli
dec
jo
xor
repz
jno
fwait
popf
stos
cmpsl
sbb
or
fdivr
mov
dec
xor
xchg
xchg
dec
add
mov
cmp
loope
fdivrp
sbb
mov
and
push
and
loop
pop
test
cmp
xchg
pop
push
push
test
shl
cltd
xchg
dec
das
xor
mov
jno
jle
pusha
pop
jp
or
loope
ja
mov
ja
fcomip
imul
add
dec
push
fistps
out
mov
add
mov
imul
icebp
cld
lea
stc
sbb
pop
fwait
jbe
clc
pop
std
and
loopne
es
dec
lock
daa
cmp
imul
sbb
sbb
or
sbb
or
cmp
mov
sub
test
sbb
dec
sub
je
pop
repz
cmp
bound
cmp
pop
sbb
sbb
in
inc
repz
push
aaa
stos
sbb
xor
jl
in
sbb
cwtl
ret
imul
sbb
sbbl
mov
sbb
xor
pop
lcall
pusha
jge
sub
and
arpl
sti
inc
loope
pop
pop
sar
cmp
imul
insl
loope
add
cmp
jo
pop
cmc
dec
or
sbb
jmp
or
cmp
fiaddl
arpl
movsb
mov
sub
mov
sbb
arpl
repz
test
sub
in
fwait
sbb
shl
je
repz
mov
sbb
fwait
stc
or
andl
imul
add
jnp
arpl
sbb
jmp
in
jo
xchg
cmp
push
in
cltd
pop
xor
and
jmp
fisubrs
daa
sub
add
sub
xor
out
mul
sbb
sbb
loope
xchg
pop
dec
sbb
jbe
loope
arpl
fidivs
pop
dec
fs
imul
add
jbe
movsl
outsl
movsb
test
cmc
das
movsl
loope
push
loope
fsubl
and
cmp
fldlg2
and
or
stos
and
sbb
dec
cltd
lret
pop
je
pop
sbb
and
pop
inc
sbb
cmpsb
int
outsb
xor
cmp
pop
int3
negb
sbb
ffree
cmp
cld
jns
cmp
jb
inc
sbbl
stc
adc
fildll
std
fwait
inc
pop
cmc
xor
jo
jmp
mov
and
iret
aas
pushf
sbb
or
cmp
nop
pop
pusha
aas
lea
pop
std
inc
inc
sub
cmp
enter
push
scas
outsb
jns
movsl
jae
js
xchg
pop
inc
sbb
sbb
cmp
sbb
pop
cli
pop
jo
aam
pop
cmp
pop
arpl
pop
lock
loopne
orl
pop
fldenv
or
shrb
sbb
add
sbb
fcomps
mov
pop
add
inc
push
mov
andb
pop
sbb
cmp
fdivrl
mov
sti
fcompl
std
js
out
pop
test
and
mov
inc
or
pop
inc
loopne
and
in
cmp
fldt
push
fcomip
jle
sbb
cltd
cmp
addr16
popa
popf
cwtl
mov
movsb
push
jle
sbb
adc
pop
cs
sub
scas
cld
loopne
push
and
popa
test
addr16
popf
scas
dec
push
test
lods
rcr
aaa
fistpll
mov
data16
and
cmp
add
sub
sbb
ds
add
sbb
cld
pop
stc
cs
int
jae
sub
jg
fists
insb
dec
xor
fwait
pop
fistps
xor
cld
xchg
pop
aas
push
mov
fcom
and
pop
and
jae
push
xchg
sti
jae
cmp
mov
negl
cmpb
mov
out
and
cltd
pop
popf
adc
ljmp
dec
and
cltd
arpl
push
cmp
inc
mov
jno
ret
clc
lea
and
mov
sbb
popf
and
repnz
cmpsb
mov
or
fisubrl
mov
out
sub
and
add
fistps
aas
or
jnp
insl
pop
pop
ja
fdivrp
jnp
jp
lret
dec
subb
fsubr
sti
loopne
movsl
in
adc
ret
fsubrs
lods
ljmp
mov
sbb
and
cli
dec
in
push
add
xchg
jae
daa
push
sbb
sti
dec
sti
xchg
dec
pop
or
jb
mov
pop
in
in
in
jo
ds
sbb
sbb
outsl
or
call
sbb
stos
clc
and
shlb
jo
push
lret
loopne
cmp
shrb
pop
add
ljmp
sbb
leave
leave
pop
sbb
or
cli
stc
daa
sub
pop
mov
test
fldcw
fcoml
in
arpl
pop
repnz
jo
imul
pop
ret
jmp
cltd
push
loop
cli
inc
insl
dec
pushf
pop
jb
pop
pop
jg
es
and
sbb
sbb
pop
dec
aas
or
add
cwtl
add
cmp
mulb
add
add
cltd
fdivrp
mov
push
insb
shl
cmp
addr16
mov
cld
pop
or
jnp
adc
cmp
push
push
test
dec
stos
add
cmp
or
fadds
pop
test
popa
xor
pop
xchg
pusha
cwtl
dec
out
push
jmp
into
ljmp
cmp
mov
cwtl
dec
js
cmp
mov
outsb
outsl
jns
cmp
ds
fucomi
in
mov
movsl
pop
subl
adc
and
das
aas
pop
lock
sbb
fbld
cmp
pushf
insb
mov
fildl
mov
xlat
mov
cmp
adc
pop
or
add
into
js
and
or
lret
sahf
sbb
mov
pop
pop
jp
ja
jo
out
cmp
dec
jne
or
cli
and
sahf
cltd
stc
aas
dec
movsl
pop
sbb
pop
and
sahf
cltd
mov
or
pop
jae
sbb
imul
pop
cmp
rcrb
pushf
sbb
add
vpsubusw
xchg
add
sbb
dec
sub
mov
push
sub
pop
mov
in
lea
or
popf
and
xchg
popf
pop
push
negl
in
hlt
fcomps
pushf
push
jg
adc
imul
loope
lret
cmp
lock
lods
pop
xchg
hlt
loop
push
push
rcrl
cwtl
lds
insl
push
push
add
mov
xchg
stos
pop
add
jg
cmp
adc
fidivs
int3
out
pop
movsb
xor
push
fdivrl
aas
pusha
faddp
dec
dec
mov
pop
jne
mov
ret
lcall
inc
es
pop
sti
jmp
stos
iret
xor
mov
mov
out
jp
mov
mov
and
fisubs
in
inc
mov
frstor
mov
fneni(8087
filds
jl
xlat
out
lret
repz
jmp
insl
int3
push
pop
arpl
fdivrs
push
push
xchg
dec
cmp
pushf
sub
filds
insl
mov
add
mov
xchg
test
sbb
bound
and
mov
fucomip
pop
jne
stc
movsb
cmp
pop
arpl
push
pushf
cmp
pop
fs
or
repz
js
cmp
movsb
sbb
fs
arpl
pop
andl
inc
pusha
imul
insl
dec
popa
cmp
insb
dec
mov
jb
lea
icebp
pushf
negb
sub
sbb
call
in
add
ret
jl
cmp
sbb
ficomps
fdivr
arpl
shll
popa
dec
ds
pushf
sbb
idiv
cmp
add
gs
inc
lock
jmp
insl
adc
adc
in
lcall
pop
sbb
xchg
lods
or
loope
fs
inc
fstpl
dec
push
mov
pop
xchg
andl
out
and
or
lea
pop
pop
jns
pushf
fdivl
ja
je
dec
into
imul
loopne
subl
loopne
fldenv
dec
test
jg
es
popa
das
push
ljmp
sub
sub
push
cwtl
insb
inc
mov
cmp
mov
inc
cmc
out
pop
and
cld
push
mov
and
rep
leave
or
xor
shlb
lcall
pop
out
fsubp
lret
arpl
test
out
fdivrl
cmpl
in
mov
andl
cmp
dec
sbb
std
push
loopne
mov
adcl
push
adc
pop
fldenv
and
xor
cltd
sub
movsl
in
fnstcw
and
bound
cwtl
imul
fimuls
outsb
xor
es
xor
sub
negl
cltd
test
stc
push
push
shll
sbb
in
mov
inc
mov
clc
loope
and
decl
fmulp
and
stc
mov
or
popa
fidivs
sbb
mov
fidivrs
fneni(8087
mov
pop
in
push
stos
lcall
sbb
dec
jns
loopne
lcall
sbb
lret
mov
sub
loope
adc
pushf
jae
sbb
sbb
sub
popf
loope
aas
jmp
leave
rcrb
arpl
sahf
fwait
push
aas
or
push
push
sahf
and
ja
xchg
mov
push
adc
mov
mov
xor
xchg
mov
inc
xchg
and
add
clc
fldcw
arpl
push
pop
xlat
orl
adc
and
stc
in
add
inc
push
mov
fsubl
lock
and
es
fwait
jl
in
lock
fwait
pop
flds
fwait
or
aaa
cmpb
jg
cmp
cld
lea
aas
call
mov
es
paddusb
jnp
aas
xchg
push
jmp
sub
ror
cmp
stos
mov
jle
push
push
xor
adc
and
add
inc
pop
mov
cltd
push
cwtl
fdiv
clc
lea
bound
xor
dec
cwtl
or
cmp
ja
rorb
bound
mov
sbb
cmp
inc
imul
pop
dec
mov
jns
ficoml
js
pop
xor
daa
loop
leave
pop
jmp
sub
std
add
sbb
mov
in
pop
repz
js
jl
fidivl
pop
call
ja
rcr
add
leave
fsubr
pop
jne
xlat
jbe
mov
pop
and
pavgw
ret
or
int
dec
sub
inc
ja
push
xchg
pop
push
add
lods
inc
test
fimuls
cli
jmp
dec
scas
mov
fiaddl
dec
icebp
sbb
jnp
xchg
mov
je
cmp
cli
ret
and
cld
or
int3
dec
fsts
and
loopne
arpl
sbb
push
mov
sbb
and
popf
sbb
dec
or
sbb
aas
or
mov
inc
lahf
mov
je
add
iret
js
ficompl
sbb
pop
xor
test
and
int3
fsts
cmp
mov
mov
movsl
mov
out
dec
loop
pop
jmp
jge
imul
rcrl
mov
and
jns
orb
mov
jo
fwait
xor
push
push
pop
sahf
jnp
sbb
sbb
pop
or
push
insl
jl
sahf
mov
pop
and
out
jmp
or
fbld
mov
mov
popa
fwait
in
mov
mov
aaa
xchg
cwtl
adc
xchg
mov
bound
movsl
sbb
enter
ja
lcall
xor
leave
cltd
dec
loopne
pop
sub
mov
fadds
jo
imul
mov
mov
push
iret
cmpsb
cld
cwtl
pop
inc
sub
aad
test
js
jecxz
mov
cltd
pop
popa
cmp
sbb
stos
dec
xchg
add
cmp
hlt
or
jg
mov
sbb
mov
test
mov
sbb
sub
and
mov
sbb
fdivrl
lds
sahf
faddp
aas
cmp
add
int
ljmp
fwait
adc
pop
jbe
jo
pop
xor
fadd
pop
adc
cli
mov
jg
fsub
dec
movsl
jnp
xor
mov
push
in
das
sbb
clc
fcmove
xor
imul
rcrb
pop
inc
dec
je
ja
fnstsw
mov
imul
sbb
repnz
mov
or
fisubs
sbb
leave
fidivs
js
push
cmp
fwait
repz
test
mov
push
aam
mov
cld
and
sbb
cmp
mov
add
movsl
loope
add
pop
lods
jbe
cmp
jns
and
stos
fldz
pop
ja
insl
cwtl
shl
dec
sub
pushf
or
jo
xor
ret
sub
je
xchg
push
iret
mov
and
iret
sbb
ret
pop
leave
cmp
leave
xor
jo
fdivl
pop
jl
xorb
mov
or
fidivl
fldenv
loopne
mov
fwait
add
out
add
mov
inc
bound
adc
pop
fdivrl
lock
sub
push
pop
shrl
add
mov
outsb
jl
push
pop
dec
loopne
rorl
pop
outsb
jle
mov
sub
mov
inc
add
popf
fistl
and
int3
test
data16
out
or
pop
fcomps
out
inc
lahf
imul
fstpl
fcomps
pop
out
fsqrt
push
dec
negl
daa
sub
pop
cmp
data16
movsb
imul
sub
lret
sarl
out
flds
testl
das
clc
out
xchg
les
lock
fldenv
inc
stos
fyl2x
mov
fisubs
rcll
ja
scas
push
imull
imul
into
cmp
fisubl
cli
fcoml
popa
fucom
mov
adc
in
xlat
sarl
sahf
fadds
hlt
pop
loopne
sbb
loope
mov
cmpsb
aad
jecxz
pop
pop
shrl
or
mov
popf
push
and
mov
in
push
ret
fsub
in
js
fscale
int3
cwtl
fsts
test
mov
clc
mov
mov
sub
ds
js
xchg
movsl
xor
sbb
in
cmp
or
cmp
sbb
in
jb
mov
fldl
dec
push
fdivrs
jnp
or
fwait
je
or
sbb
add
and
push
mov
push
mov
hlt
cmp
dec
mov
jecxz
mov
and
fldl
jmp
enter
sbb
cld
lahf
gs
in
xchg
cwtl
test
xor
in
sub
cli
and
or
lods
fdivr
clc
loopne
xchg
out
test
test
rcrb
and
lcall
outsb
int
inc
popf
es
neg
or
xor
mov
inc
sbb
push
lock
rcll
and
pop
movsl
sbb
add
ds
and
repnz
shrl
outsl
std
push
movsb
arpl
sbb
stos
sbb
sbb
mov
push
arpl
ds
mov
lods
add
add
stos
fistpl
xchg
out
add
int3
test
arpl
pop
mov
pop
mov
lcall
jecxz
pushf
and
xor
sahf
shll
hlt
loopne
stos
sub
imul
jo
cmp
das
and
xchg
pop
cs
cli
pop
lods
xor
or
pop
mov
pop
jle
and
xchg
sbb
cmp
xorl
mov
push
gs
push
mov
out
pushf
sub
and
jo
lea
js
cmp
mov
xchg
fdivr
jge
js
cmp
subb
add
outsb
ja
in
sbb
incl
pop
inc
pop
lock
xchg
mov
stos
jle
sbb
jmp
frstor
sub
and
inc
pop
sbb
cltd
jmp
inc
lock
dec
inc
int3
das
xchg
les
fidivs
mov
cli
add
pusha
inc
in
cmp
cmpl
decl
cmp
mov
push
fcmovne
pushf
cli
xchg
std
cmp
cmp
push
sarb
pushf
in
lock
push
and
repnz
decb
imul
sub
dec
cmp
add
mov
dec
push
mov
scas
mov
lods
lods
pushf
test
subb
jns
inc
xor
push
push
sbb
sub
test
imul
pop
dec
flds
cmp
ds
aaa
cmpb
mov
sbb
mov
stc
pusha
inc
xchg
es
add
arpl
and
sub
out
sub
jge,pn
add
inc
sbb
jle
fldcw
fstps
loopne
jo
dec
popf
mov
sahf
push
cmp
clc
jno
adc
dec
lock
inc
stos
pop
pop
lock
and
test
and
shrb
idivl
sbb
test
dec
stos
pop
add
fsubrs
inc
sub
sbb
push
in
mov
lods
std
xor
xchg
xor
mov
and
xchg
hlt
add
jl
in
sti
fstps
sub
cmp
fidivrs
inc
insb
stc
and
sbb
add
leave
mov
dec
mov
imul
add
lahf
shll
call
push
sti
pop
dec
jno
push
sub
hlt
cmp
pop
rcr
sti
jmp
mov
xorl
mov
push
sbb
jp
fcomps
les
sbb
sub
and
das
push
xor
popa
mov
ret
push
xchg
and
jp
or
scas
sbbl
test
dec
test
jo
sub
pusha
mov
cmpl
xchg
loop
inc
in
pop
mov
ret
xchg
push
sahf
add
cld
out
add
adc
fs
mov
stc
inc
dec
hlt
mov
jge
pop
cmp
add
dec
cmp
inc
and
pop
add
out
cmp
sahf
andl
inc
mov
imul
decl
xor
sarl
mov
add
je
jl
pop
sub
stc
jbe
pop
sbb
sbb
sbb
pushf
clc
insl
cli
fs
pusha
addr16
leave
dec
add
mov
push
mov
jae
jecxz
gs
xchg
jne
sbb
cmp
adc
push
or
aas
dec
lea
adc
clc
dec
je
add
pusha
pop
cltd
cmp
int
add
lock
xchg
mov
add
icebp
jge
imul
push
add
ret
fcmove
jnp
cmp
sub
mov
sub
xor
sbb
lret
cmp
fdiv
sbb
pop
mov
ficomps
bound
lret
dec
cwtl
insl
mov
add
mov
lret
push
pop
and
fwait
mov
inc
mov
imul
add
arpl
mov
adc
push
add
jg
mov
addb
mov
in
add
push
mov
cltd
jns
jae
mov
mov
sti
inc
in
imul
jbe
pop
sub
and
add
dec
pop
cmp
pop
ds
insb
popa
imul
arpl
and
jle
popf
mov
cwtl
sbb
mov
loope
mov
pop
sub
sti
add
mov
add
leave
lods
lcall
mov
pop
ja
loope
dec
jo
test
cld
mov
sbb
pusha
test
add
test
dec
push
xor
popf
add
mov
daa
mov
je,pt
lea
push
sti
sub
and
sbb
mov
inc
cmp
push
and
stos
jle
pusha
add
fdivrs
mov
xchg
sbb
inc
sub
push
cs
push
dec
sbb
shlb
jp
push
sub
loopne
outsl
or
jae
mov
xchg
pop
les
imul
in
mov
jg
inc
and
or
decl
sub
dec
lcall
hlt
lahf
xor
mov
pop
or
popf
in
movsb
sub
mov
xchg
push
add
mov
je
cmp
std
inc
sub
mov
dec
and
push
test
sbb
shlb
jae
push
inc
mov
push
pop
pop
mov
shll
dec
sbb
or
js
xchg
lahf
sti
mov
adc
push
cmpl
sbbl
add
inc
add
outsl
sub
ds
mov
xchg
sbb
jge
fdivrl
fisubl
fldenv
push
and
add
dec
ds
add
adcl
push
lcall
pop
lock
pop
iret
and
mov
add
mov
inc
mov
pop
jne
jl
in
in
jae
ret
inc
jae
mov
push
and
lahf
inc
cmp
arpl
mov
notl
cmp
ret
adc
and
js
mov
arpl
push
es
and
mov
ds
pop
popf
je
mov
mov
fcomip
jp
inc
jp
xchg
pusha
in
add
insl
pusha
inc
xor
and
out
stc
jno
jnp
add
inc
add
cmp
imul
test
clc
xor
lcall
fidivrl
jmp
lret
or
mul
add
bound
mov
call
es
add
sbb
outsb
lcall
cmp
mov
xchg
popa
cmp
sbb
repnz
pop
mov
leave
roll
sbb
orl
add
sub
psubusw
ljmp
es
jb
lock
andl
test
jp
in
js
jns
popa
jae
push
fnsave
mov
push
jo
jns
gs
jno
iret
mov
sbb
ret
sub
pop
clc
sti
imul
aaa
xor
adc
lods
sbb
dec
cwtl
inc
xor
xorb
sbb
sbbb
add
pop
inc
sbb
movsl
mov
cmp
add
push
rolb
add
pushl
push
mov
and
test
sbb
sbb
jg
push
xchg
cwtl
pop
xor
sub
mov
sbb
pop
sbb
in
push
mov
mov
dec
shl
add
xor
mov
xor
mov
leave
ret
sbb
stos
cli
jle
inc
jl
mov
sub
int
test
inc
loop
xor
sti
clc
pop
add
in
mulb
lods
cmp
sub
mov
mov
push
pop
fstpl
imul
mov
push
dec
xor
cs
jl
insb
jecxz
ret
jle
test
xchg
xchg
addb
pop
or
call
ficoms
and
lods
adc
cmp
je
jl
jl
fidivrl
add
jge
mov
je
dec
jnp
adc
movsb
jge
sti
push
sub
ja
sbb
jbe
ret
cmpsb
mov
ds
mov
int
cwtl
fdivl
push
iret
popa
and
sbb
xor
sbb
cltd
inc
test
or
and
sbb
jns
mov
adc
rcrb
sub
imul
data16
lock
sub
mov
pop
cmp
and
cmpsb
cmpl
int3
mov
popa
inc
jbe
aaa
mov
rcrl
std
lret
inc
fiadds
scas
sbb
jns
cmp
jecxz
sbb
inc
push
int
leave
dec
js
mov
pop
pop
jns
fdivs
pop
es
out
or
test
add
rorl
xchg
test
dec
cli
sub
sarl
add
leave
mov
sub
sbbl
negl
xor
cld
sbb
jb
pop
or
and
mov
cli
jns
xor
cmp
test
aas
xor
mov
mov
fiaddl
and
lcall
inc
pushf
dec
pop
mov
aaa
imul
push
loope
popf
add
inc
cmp
pop
add
hlt
sti
out
mov
add
jns
inc
iret
mov
inc
dec
mov
je
out
dec
enter
je
mov
gs
ss
add
fsubl
fsub
fsubl
and
fidivrs
shlb
ficomps
cmp
sub
das
pop
or
movsb
mov
ja
or
loop
sub
jae
mov
inc
pop
sbb
mov
insb
clc
cmp
mov
jae
loope
popa
mov
push
jp
test
add
push
addl
cmp
dec
jmp
sbb
jge
jl
sbb
jno
pop
jbe
mov
sbb
movsb
fdivrl
lahf
les
shlb
or
jg
xor
and
mov
out
and
mov
jg
fldcw
shlb
mov
test
mov
pop
jl
pop
xor
xchg
pop
cs
mov
addr16
jns
xchg
fsubrl
cwtl
in
daa
mov
gs
sub
sbbl
loopne
add
xorb
and
mov
loopne
pop
cmp
or
fisubrs
test
cmp
arpl
dec
leave
pop
fwait
mov
cli
cmp
jle
xchg
cmp
leave
jl
mov
add
mov
jbe
jl
inc
dec
addr16
out
mov
mov
add
jg
jb
pop
jns
in
jg
gs
or
add
loop
sbb
mov
sbb
xorl
fsts
les
leave
lods
xchg
add
stos
sbb
das
pop
movsl
sbb
daa
iret
es
mov
sub
push
into
lahf
test
sbb
lret
es
add
xor
push
xor
and
loop
shll
xlat
and
mov
shll
cmp
lret
inc
dec
push
sub
outsb
jle
fidivrl
sub
push
jae
pop
and
or
fs
mov
mov
into
ret
loop
mov
into
lret
aas
inc
ljmp
mov
cli
idivl
add
and
push
xor
and
push
mov
sbb
jnp
sbb
cmpsb
or
fwait
jae
mov
gs
jo
pop
call
adc
xor
lds
add
xchg
sub
sbb
cltd
test
mov
adc
sbb
pop
mov
mov
xchg
iret
or
jl
out
and
add
push
and
jae
sbb
cs
lret
and
cmp
subl
mov
jnp
xchg
jle
mov
xor
add
sub
dec
mov
cld
and
add
sub
in
arpl
cld
mov
mov
jns
mov
test
adc
and
jae
sub
and
mov
outsl
or
in
push
loopne
loopne
jge
insl
cmp
mov
push
cli
xchg
add
jns
mov
test
xor
and
lcall
xor
fdivl
idivl
inc
lahf
decb
jmp
pop
cltd
imul
push
push
ja
js
sbb
mov
jp
dec
fnstenv
pusha
jl
push
pushf
shlb
xchg
mov
xor
and
pop
mov
sub
lds
int3
push
cmpsb
rcrl
mov
fwait
out
mov
ljmp
add
xor
movsl
mov
leave
sbb
cld
je
jbe
mov
int3
lret
cmc
xchg
push
sub
pop
mov
jb
inc
lds
js
and
cmpb
jbe
add
pusha
les
and
in
mov
les
and
jns
insl
and
shlb
es
test
outsl
testl
pop
and
or
stc
sbb
lods
int
jns
xor
inc
dec
ja
jp
jne
cmp
movsb
adc
pop
xchg
sti
and
lret
jge
inc
push
jnp
jp
mov
inc
cld
insb
loopne
cmp
cld
out
pop
int3
xor
dec
jnp
decb
sarl
dec
sbb
jns
inc
jno
add
aad
adc
push
imul
mov
sti
cmp
std
les
les
and
mov
cli
and
loopne
lds
inc
xlat
jae
xchg
inc
sbb
cld
mov
and
cmp
loop
out
cmp
cs
or
mov
leave
cs
and
and
sbb
loope
filds
inc
push
mov
mov
sbbl
loop
pushf
sub
hlt
push
lods
jo
inc
jnp
mov
xchg
or
jle
lds
xor
leave
lret
cmpsb
jne
dec
cmpsb
test
sub
aad
mov
addb
test
es
dec
inc
sub
vblendmpd
push
push
daa
dec
cmpsb
js
outsb
cmp
cmpsb
cltd
mov
jle
popf
mov
sbb
adc
xchg
or
and
push
pop
and
xor
cmp
sub
loopne
cwtl
inc
jbe
pop
subb
cmp
push
mov
shll
xor
out
xor
inc
sbb
lds
mov
jl
lret
sarb
xchg
test
enter
icebp
flds
icebp
or
mov
sbbb
xchg
push
mov
dec
fisubs
mov
lea
and
cmp
inc
repnz
stc
mov
pop
mov
dec
sbb
scas
mov
es
mov
lods
xchg
lret
xor
scas
push
sbb
cmp
add
mov
cld
jno
xor
mov
popa
sarl
out
in
or
pop
lcall
mov
dec
mov
inc
scas
add
sub
mov
lods
xchg
mov
push
sub
negb
xlat
shr
lcall
push
jns
aad
ja
enter
fisttpll
ret
daa
cmpsb
movb
je
flds
cmp
xchg
pop
jl
cmp
xor
sahf
add
aad
movb
push
adc
lea
mov
aaa
test
xor
fsubrp
sti
push
sub
xor
xor
insl
loop
sbb
lret
mov
mov
and
add
push
push
pop
sbb
add
jmp
inc
insl
int3
sub
dec
mov
inc
mov
add
add
xor
cli
xor
int3
add
imul
scas
mov
test
cmp
jns
lret
mov
push
sbb
sub
adc
xchg
add
rolb
cmp
xor
cmp
loopne
xor
add
sub
xchg
mov
pop
and
adc
rcr
jp
sti
out
inc
out
push
leave
mov
jne
aaa
xchg
andl
stos
mov
mov
jns
xchg
mov
addb
rolb
fwait
dec
jge
mov
push
dec
mull
fldenv
insl
inc
add
fs
mov
test
mov
push
sbb
mov
test
popa
jnp
test
xor
mov
add
pushf
test
insl
dec
std
mov
or
push
inc
sub
cmp
mov
mov
push
clc
sub
aam
sub
es
and
sbb
push
ret
int
loop
add
mov
pop
test
inc
std
bound
lods
lock
sarb
pushf
and
xor
in
hlt
mov
mov
add
sub
pop
mov
inc
ss
sub
fildll
lods
stos
fmul
push
imul
stos
and
push
mov
xchg
push
leave
mov
test
fdivrs
mov
cwtl
lods
xchg
jle
push
fadd
cmc
popf
inc
jb
inc
movb
xchg
cmp
dec
sub
push
adc
jne
pop
jl
je
ret
push
push
mov
jnp
testl
push
add
dec
lret
jp
je
jl
xorl
and
ret
sbb
mov
sbb
and
add
push
pusha
mov
cmp
cmp
mov
jl
in
pop
xchg
fstpt
mov
sbb
push
xlat
je
or
push
push
in
mov
sti
adc
xor
lret
xor
sub
sahf
pushf
jl
lret
pop
fadds
sti
sarb
mov
sbb
mov
and
int
sbb
arpl
sarb
xor
int
pushf
test
mov
pop
gs
pop
mov
sub
mov
ss
hlt
push
stos
js
rcrb
dec
test
loopne
dec
cli
mov
sbb
in
cmpsb
and
sub
lods
incb
leave
push
les
pop
sub
mov
in
or
jne
enter
lea
sub
lret
bound
mov
jle
xchg
iret
and
les
inc
cmpb
sub
adc
or
in
inc
pop
add
cli
clc
cmp
roll
int3
inc
test
scas
push
mov
mov
test
mov
stos
cltd
push
imul
xchg
add
enter
inc
sbb
cli
and
mov
pop
mov
xchg
lahf
cld
addl
outsb
jnp
dec
es
xor
insl
or
mov
aam
mov
mov
sti
movsb
push
jne
cmp
xor
jno
add
push
jno
andl
leave
out
add
mov
and
adc
push
outsb
movsb
mov
pushf
cmp
dec
test
cmp
cmp
out
jns
outsl
cwtl
push
lcall
push
or
insb
aaa
jl
fmull
xchg
mov
add
mov
adc
cltd
je
pop
mov
sub
popf
mov
xchg
in
lcall
cmp
cmpsb
cmp
pop
jp
mov
pop
jbe
jp
in
add
push
sub
mov
cmp
mov
xor
ret
lret
jl
sbb
jl
imul
das
cmp
xlat
push
out
sbb
sub
out
popf
cld
dec
lret
cmp
pop
sub
orl
mov
xlat
adc
into
sub
inc
and
pop
arpl
test
aam
and
jle
mov
mov
xchg
outsb
and
xor
rcr
fwait
imul
jmp
jl
loop
xor
cmp
ror
test
sbbb
mulb
test
xor
dec
xchg
dec
rcl
jl
cmp
push
pop
daa
or
cmpl
sub
add
fnstcw
mov
xchg
cmp
mov
pop
mov
jae
inc
arpl
cmp
jle
cmp
mulb
inc
es
mov
ljmp
xor
add
xor
popa
add
lcall
jge
cmc
mov
pushf
int3
int
push
mov
jecxz
popf
lret
push
adc
pop
adc
es
add
into
hlt
fildll
popf
pushl
dec
sbb
rcrb
aaa
jns
fstps
jl
mov
fimull
mov
jbe
int3
cli
fistpl
cld
push
push
cmp
in
or
mov
add
mov
fmul
mov
cltd
cli
mov
jl
cmp
das
pop
sbb
enter
jecxz
popf
pop
clc
and
gs
mov
inc
add
mov
enter
jns
mov
pop
roll
push
lock
mov
test
es
push
js
mov
add
xchg
outsb
fdivrl
mov
sub
mov
ror
mov
mov
xchg
mov
andl
push
sbbb
push
sbb
cld
std
mov
mov
add
ss
cmpb
jp
push
jl
cld
cmpl
into
push
mov
jnp
insl
into
in
gs
stos
loop
test
adc
and
and
sub
sub
mov
int
fadd
mov
fisubl
jnp
stc
mov
shll
mov
xor
cmp
leave
cwtl
and
cmp
sub
out
xor
lea
pop
add
cmp
pusha
in
sar
outsb
mov
mov
mov
rclb
ret
mov
popf
mov
xor
fwait
jle
pop
fisubs
pop
mov
js
jl
and
ss
arpl
faddl
fidivs
push
ja
insl
fnstsw
inc
mov
pop
pop
repnz
and
pop
loopne
roll
xchg
adc
and
popf
imul
rorb
add
mov
sbb
sti
mov
cmp
into
test
jno
cmpsl
push
stc
jae
inc
adc
inc
inc
xor
hlt
ret
dec
add
insb
int
js
mov
aam
xor
orl
das
mov
push
roll
and
lret
mov
shrb
mov
mov
or
inc
loopne
addb
shlb
mov
push
pop
cmp
shrl
mov
inc
pushf
jl
jb
or
jns
lret
pop
int
adc
mov
mov
jl
lcall
dec
mov
pop
ds
mov
jle
and
push
jecxz
lret
jg
add
iret
ds
mov
jmp
mov
imul
xor
insl
mov
aaa
jo
xchg
insb
fidivs
fdivrp
ret
cmp
cltd
sub
lea
add
out
pop
xchg
mov
ret
mov
cs
inc
rcr
xor
inc
insb
pop
push
xor
mov
scas
adc
aad
xlat
hlt
mov
and
sti
cmp
add
mov
mov
cmp
jp
jae
negb
add
imul
push
pop
int3
add
lods
mov
sahf
adc
and
out
stc
pop
pop
sub
pop
xchg
popl
sub
jg
loopne
xchg
inc
jle
push
pushf
mull
incl
test
xchg
out
arpl
aad
cmpl
cmpsb
test
mov
xchg
andl
cmp
bound
jbe
push
pop
xchg
into
sub
xchg
push
pushf
pushf
add
dec
movsb
jno
clc
fisubs
or
inc
pop
mov
ja
mov
ret
adc
in
adc
xor
scas
mov
cmp
aas
cmpb
mov
xor
movsb
sbb
cmp
mov
and
int
sbb
popf
test
pop
es
sub
jmp
shlb
leave
mov
mov
and
inc
inc
mov
or
push
lret
adc
outsb
popa
mov
sub
jbe
in
add
xor
add
addr16
mov
stc
fildl
shlb
xor
adc
sarl
dec
and
je
pusha
sub
cmp
xchg
push
xchg
jno
jae
int3
mov
cli
movsb
sub
cld
mov
sbb
mov
daa
mov
loope
push
fwait
sarb
mov
push
std
subl
push
lret
dec
fiaddl
push
inc
test
add
mov
jbe
jg
adc
lcall
jnp
int3
test
fsts
jg
std
cld
dec
mov
dec
insb
push
jge,pn
pushf
mov
push
sbb
mov
cld
fldt
push
in
sub
mov
test
sub
test
sarl
xor
fsubl
fstl
loopne
adc
dec
sarb
add
aad
and
ss
jb
addb
dec
jbe
into
and
sahf
lret
lods
lds
pusha
addb
xor
inc
mov
cwtl
jno
sti
es
mov
inc
gs
fwait
popa
xor
xchg
push
dec
pushf
jae
fmull
mov
xchg
pusha
jl
in
popf
push
push
mov
insb
stc
stc
pop
mov
push
sti
hlt
fstl
fcoms
cld
and
mov
mov
outsb
pop
es
cwtl
mov
cmpsb
push
mov
add
dec
xor
mov
mov
pop
xor
pop
xchg
and
pushf
cld
push
sub
add
pushf
xchg
jnp
insl
pushf
mov
aas
mov
pop
inc
dec
loopne
cmp
scas
jp
push
stc
hlt
inc
pop
test
xchg
pusha
jns
aad
add
xchg
movsl
or
fiadds
pop
jle
enter
pop
mov
inc
jno
sbb
leave
sbb
es
pop
lret
add
and
and
pushf
repnz
ss
ss
xchg
jl
xchg
test
ret
jno
jmp
cmpsb
imul
push
fs
sub
lret
andl
cltd
adc
cld
xor
jns
and
jle
insb
fs
and
les
lods
add
repnz
push
push
sbb
sarl
outsb
loope
faddl
loop
sub
add
pushf
push
inc
jae
xor
decb
mov
mov
cli
pop
lods
xor
subl
jge
mov
fxch
xchg
mov
aas
insb
or
and
mov
mov
jge
mov
xchg
dec
jmp
mov
mov
mov
and
sub
mov
mov
sar
adc
lds
int
test
xchg
int3
mov
xchg
push
cmp
xchg
dec
negl
into
sub
xor
loopne
xor
inc
rcrb
jnp
pushf
xor
xor
inc
in
and
push
xor
mov
mov
add
add
push
loope
stos
mov
ja
pop
mov
cwtl
sub
leave
xchg
test
mov
sbb
and
shrb
loop
gs
fidivrs
jb
add
jecxz
loopne
jo
sbbl
pop
cmp
imul
jae
es
fsubrl
add
ret
roll
xor
push
xor
push
mov
sub
mov
sbb
scas
xor
pushf
fdivrl
sarb
inc
inc
arpl
push
jg
sub
movsb
mov
jle
adc
pop
push
leave
add
sbb
jl
sbbb
ret
sub
xor
mov
insl
push
xor
ds
inc
jnp
jno
add
sbbb
mov
mov
pop
mov
inc
and
out
gs
cld
dec
outsl
push
hlt
mov
gs
gs
int3
inc
pop
push
add
pop
inc
pop
push
mov
and
mov
add
scas
push
arpl
pushf
jle
cmpsb
sbb
stos
cmp
daa
xchg
push
mov
adc
mov
faddl
push
ds
xchg
or
sbb
mov
sbb
add
sbb
gs
je
sbb
mov
pop
mov
and
cltd
popa
popa
xor
fwait
stos
mov
push
mov
aaa
adc
popl
mov
add
adc
imul
jle
mov
xorb
in
cmc
inc
mov
iret
mov
push
inc
popa
inc
lahf
mov
pop
pop
rclb
sbb
rol
int3
bound
jnp
add
mov
and
and
roll
inc
fisubrl
add
in
fidivrl
mov
jl
int
push
sub
add
xor
rcll
lcall
inc
sbb
adcb
test
ds
into
pop
out
sub
lahf
xchg
dec
scas
inc
ja
cmp
mov
and
fmul
shlb
mov
push
adcb
cmpb
mov
out
sbb
enter
dec
cmpsb
inc
movsb
push
cmp
cmp
cltd
es
jbe
popa
dec
shlb
add
imul
and
xor
mov
cmp
andl
mov
insl
push
and
xchg
test
jns
pop
jnp
gs
and
jp
mov
sti
pop
jge
jl
in
cltd
add
pop
add
scas
dec
sahf
pop
mov
xor
sbb
outsb
push
xor
subl
loope
or
sahf
mov
xor
add
pop
xchg
sub
dec
enter
push
lret
xor
add
popf
cmp
loope
sub
mov
and
mov
xor
adc
enter
xlat
sarb
loop
add
and
cmpl
repz
mov
popf
int3
divb
xchg
dec
imul
je
aam
cli
out
imul
add
sub
xchg
jle
gs
mov
js
mov
int
mov
test
filds
push
sbb
sahf
js
push
mov
pop
js
sbb
cmp
push
pop
les
xor
stos
mov
lds
jl
jg
xchg
inc
xchg
push
dec
cmp
push
stos
inc
imul
mov
stos
sahf
sahf
shlb
cmp
push
and
mov
sahf
es
mov
mov
push
ret
insl
mov
push
inc
xorl
pop
xor
cmpsl
xor
inc
sbb
loopne
xor
add
jge
sbb
jecxz
fldcw
xchg
mov
mov
popa
mov
sbb
cmp
into
insb
cmp
xchg
outsb
es
push
cmp
icebp
ja
push
and
mov
inc
xchg
inc
fisubl
adc
adc
mov
push
xor
push
inc
sahf
cld
push
out
mov
movsl
xchg
jnp
sbb
insl
push
jbe
jle
in
pop
leave
push
add
mov
rolb
inc
std
adc
sbbl
hlt
cmp
inc
ss
jg
shll
imul
or
jp
xchg
add
add
push
mov
mov
xor
loopne
or
lea
pushf
cmp
mov
jns
mov
in
jle
gs
test
add
push
xor
mov
lret
xchg
bound
xor
popa
mov
jae
test
pop
pop
xchg
mov
push
mov
imul
std
xchg
mov
xor
leave
movsl
xorl
mov
inc
dec
pop
and
rcrb
pushf
sbb
es
subb
dec
sbbb
mov
and
inc
rclb
orb
add
add
add
lret
scas
xor
jae
sbbl
inc
test
repnz
xchg
push
loope
xchg
inc
pusha
and
dec
xchg
inc
jae
mov
rorl
push
xchg
mov
fldl
negb
rcll
sbb
sbb
sub
cld
lds
and
xchg
adc
jns
fisttps
mov
mov
inc
jl
sbbl
into
outsb
and
pop
add
add
mov
pop
xor
mov
arpl
mov
cltd
sbb
andb
cltd
xor
fsubr
inc
sahf
mov
jge
or
mov
les
in
sbb
shll
arpl
xorb
xchg
mov
or
push
lahf
outsb
cmp
testb
xor
add
mov
and
mov
xor
iret
mov
lea
or
jl
cmp
add
icebp
popf
es
cmp
xchg
push
loope
adc
inc
stc
sbb
or
push
lret
int3
inc
mov
inc
das
test
jl
lock
mov
push
dec
and
shlb
cmp
mov
xor
xchg
aam
shrb
mov
jno
push
js
je
mov
push
xchg
es
adc
int
cmpl
shll
add
xor
adc
push
rol
jl
dec
pop
xor
mov
ss
mov
and
outsb
sahf
leave
xchg
pop
pop
jl
dec
cmp
les
jne
mov
inc
mov
gs
mov
incl
pop
mov
arpl
mov
cmp
orl
aam
mov
add
aam
mov
jle
mov
es
stos
mov
add
push
lds
test
push
inc
imul
hlt
mov
inc
fwait
lret
mov
fistpll
scas
mov
dec
xor
jne
outsl
inc
mov
leave
pop
mov
xchg
jecxz
leave
xor
sahf
jno
cmpsb
jl
sub
cld
add
xchg
cmp
inc
aam
sub
in
jge
in
xchg
cmp
pop
jg
fisttps
mov
xor
sti
mov
jge,pn
in
sbb
adc
mov
outsl
sub
push
add
add
roll
pushl
sbb
push
lcall
jge
sbb
int3
xchg
jge
jne
mov
lods
sub
mov
pop
add
cmp
add
icebp
rorl
mov
fdivrl
push
jo
inc
inc
cmpsb
je
imul
jae
gs
sarb
aam
fldcw
scas
inc
fcomps
xchg
or
and
push
push
sbb
bound
push
rorl
lods
or
jae
xor
dec
js
dec
out
push
add
andb
out
sbb
mov
rcrl
mov
inc
cmp
xchg
adc
pop
int3
sbb
push
xor
push
cmpsb
cli
sbb
scas
mov
cmp
sbb
out
mov
or
lea
rolb
mov
ja
sbb
je
inc
mov
popf
loopne
mov
test
adc
inc
add
out
dec
mov
and
fdivs
les
scas
cld
sbb
stc
mov
fsubrl
dec
sbb
scas
pop
sub
pop
and
jmp
cltd
fstpl
mov
shll
ret
ds
lds
add
cmp
cmp
push
jb
out
jns
leave
call
fsubrl
cs
mov
sti
out
cli
add
push
popf
pop
mov
scas
and
out
cmp
adc
add
add
add
xchg
dec
addb
loopne
scas
jge
add
sahf
sbbb
ds
push
push
sahf
lods
push
or
sub
sbb
inc
xorb
adc
dec
leave
mov
and
das
jnp
arpl
scas
test
cld
fcmovbe
fcomps
mov
out
insl
jge
in
cmp
jnp
aad
call
dec
cmp
mov
aam
cmpl
cmp
jle
lret
sbb
in
xchg
int
sti
cltd
sbb
xor
cmp
aaa
nop
cmp
data16
jp
dec
mov
sub
pop
pop
add
and
shl
mov
je
insb
jp
pop
mov
jg
dec
sub
inc
lds
fldcw
push
aam
test
clc
sub
inc
or
sub
sub
int3
je
pusha
aaa
sbb
ret
cmp
sbb
dec
das
fistl
dec
push
push
ds
pop
mov
sahf
movsbl
mov
push
mov
adc
sarl
xchg
mov
push
mov
adc
push
mov
adc
jecxz
sbb
and
dec
mov
pop
pop
xchg
leave
push
and
out
cmpsb
dec
pusha
mov
lcall
stos
sbb
adc
adc
adc
fcoml
sbb
scas
push
scas
push
jo
mov
inc
out
mov
leave
movsl
sbb
push
mov
cmpsb
popa
cmpsb
mov
cmpsb
bound
and
mov
xor
fmulp
mov
ljmp
outsb
or
rol
stos
or
sub
sahf
and
push
jmp
stos
test
lret
stos
lret
sub
imul
lret
sub
insb
lret
in
lret
insl
lret
out
lret
outsb
lret
out
lret
outsl
lret
lock
jo
mov
icebp
lret
jno
mov
repnz
cvtps2pd
dec
push
and
push
add
cmc
cmpsl
stos
call
dec
rorb
dec
test
xchg
fsubr
inc
jle
imul
ljmp
mov
sbb
out
mov
aaa
sub
jns
mov
es
dec
or
mov
cmpsl
push
pop
sbb
add
mov
pop
push
cmp
dec
ds
pop
popf
jle
sahf
push
mov
fistpll
leave
add
loopne
and
lret
dec
int
pop
dec
loope
cli
stos
dec
arpl
pop
inc
mov
xchg
arpl
jg
jp
mov
fdivl
and
and
bound
ret
push
int
gs
ja
or
jp
mov
lcall
add
in
and
rcrl
clc
inc
pop
cmp
movsb
or
push
je
mov
sbb
popa
out
push
jae
add
fmuls
fsub
cmpb
mov
minps
push
adc
pop
adc
in
mov
test
mov
add
mov
jae
in
push
mov
movsl
cli
lret
out
push
mov
fld
jns
sbb
repz
pop
fcmove
dec
cmp
inc
sbb
push
sti
push
imul
dec
push
mov
push
sahf
push
jne
rclb
push
mov
and
push
add
push
in
push
inc
fstpt
cs
rcrb
cwtl
cmp
and
push
mov
mov
test
shlb
pusha
data16
mov
mov
mov
and
in
and
fs
gs
es
sbb
pop
push
push
ds
pop
fdivrs
sahf
pop
mov
sbb
xchg
fdiv
jb
cmpsb
fwait
cmpsb
fadd
sbb
pop
cmpsb
pushf
cmpsb
frstor
popf
cmpsb
fisubs
sahf
cmpsb
fbld
lahf
cmpsb
loopne
pusha
cmpsb
mov
cmpsb
popa
cmpsb
mov
cmpsb
bound
and
mov
push
es
pushw
cmpsb
push
pop
sub
adc
xchg
adc
adc
adc
adc
sbb
pop
push
ficoml
sbb
pop
push
lcall
push
fcoml
sbb
pop
push
pushf
push
fstl
sbb
push
ficoms
push
push
pop
push
sahf
push
fists
pop
push
pop
push
lahf
push
loopne
and
pusha
push
mov
push
popa
push
mov
push
bound
mov
cmp
and
pop
into
mov
add
or
push
adc
adc
adc
adc
test
inc
push
push
push
out
jp
loop
add
sahf
push
pop
in
pop
mov
call
cmp
test
sti
jbe
jbe
jbe
jbe
jbe
jbe
mov
jbe
jbe
jbe
jbe
xchg
mov
push
ljmp
ret
lods
cmpsb
fbld
pop
mov
pusha
stos
mov
popa
lret
loop
and
lret
jecxz
and
arpl
mov
lret
movsb
lret
and
lret
es
push
pop
jp
mov
mov
fscale
rcrb
cltd
push
ficompl
cmpsb
push
cmpsb
xchg
sbbb
fistps
cmp
stos
pop
jl
xor
cmpsb
or
lret
popf
sbb
popf
cs
iret
popa
rcl
shll
insl
pop
and
into
pop
fimull
pop
lret
cmc
lret
xchg
mov
ljmp
cmp
gs
sti
cmpsb
pop
cmpsb
mov
add
loop
mov
les
lret
test
rclb
push
aam
gs
roll
adc
adc
adc
adc
in
push
jl
or
push
dec
add
insl
jle
jbe
sbb
jbe
pop
mov
shrl
addr16
or
ljmp
jp
mov
mov
js
in
adc
and
add
hlt
or
dec
stos
cmp
sub
mov
add
jno
mov
dec
adc
dec
adc
add
push
add
push
push
push
cmc
addr16
jae
hlt
mov
xchg
mov
add
cmp
cmpsb
cmpsb
push
push
jle
gs
movsl
scas
out
es
add
test
push
cwtl
shrb
hlt
mov
test
rcl
inc
rclb
dec
or
dec
xor
dec
adc
jae
hlt
sbb
cltd
jne
cs
neg
rcrb
rcrb
fwait
rcr
push
sbb
inc
pushf
rcr
rcrl
rcr
rcrl
jae
jmp
fbstp
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sbb
es
mov
push
cwtl
push
fsts
push
pop
push
cltd
push
ficoml
push
pop
push
lcall
xor
push
pop
push
pushf
push
fstl
sbb
push
pop
push
pop
push
lahf
push
loopne
and
xchg
shrb
lcall
test
stos
jmp
dec
dec
dec
mov
cmp
adcb
push
popa
push
roll
inc
pop
and
and
je
in
push
mov
cmpsb
cwtl
aaa
mov
sbb
jns
inc
mul
mov
cmpsb
push
jp
mov
sbb
pushf
adc
fistpll
icebp
shl
pop
push
ljmp
push
insl
mov
out
cli
pop
jae
hlt
xchg
je
cmc
sbb
neg
jbe
jbe
jbe
jbe
jbe
xchg
pop
lcall
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sbb
fisubs
sahf
cmpsb
fbld
lahf
mov
aaa
mov
shll
mov
fsubs
arpl
jbe
jbe
jbe
sbb
ret
stc
lret
lretw
push
pop
cmp
and
sbb
pop
enter
imul
push
fcmovu
push
sbb
push
lcall
fwait
push
fcoml
sbb
pop
insl
lcall
add
test
mov
fisubrl
adc
xor
add
test
cwtl
pushf
addr16
cwtl
cmp
fldl
imul
jp
mov
mov
lret
and
aam
sub
cmpsb
pop
lcall
imul
fwait
in
jbe
jbe
jbe
jbe
lcall
and
ror
lret
daa
mov
lret
mov
loope
pop
fneni(8087
pushf
lods
fcmovu
and
lahf
out
and
enter
shlb
adc
mov
bound
and
mov
in
test
rorb
jp
mov
pop
cmp
in
loop
xchg
cmpsb
inc
inc
cmp
daa
sbb
shll
lods
and
dec
mov
fiadds
push
jno
popf
mov
cbtw
idivl
push
mov
cltd
inc
mov
inc
enter
dec
imul
lcall
popf
and
mov
loope
and
loop
and
jecxz
les
fdivrs
mov
adc
mov
imul
gs
stos
push
push
mov
mov
pushf
loop
pop
fdiv
fiaddl
pop
sbb
adc
dec
add
test
mov
mov
xor
mov
adc
adc
jp
mov
test
mov
xchg
lret
clc
sbb
pop
pop
push
cltd
xor
mov
sbb
sbb
pop
jl
mov
xor
lds
sbb
jecxz
jecxz
lret
fiaddl
cli
cmpsl
push
enter
loop
jle
dec
loop
sbb
push
test
push
or
adcl
xchg
out
mov
loopne
cli
aad
push
or
sbb
sti
loope
pop
data16
imul
ds
out
jle
sahf
scas
mov
push
mov
cmp
pop
mov
sub
lret
inc
dec
jp
sti
mov
outsl
lret
popa
iret
les
pop
pop
xchg
pop
pop
mov
mov
ret
in
bound
push
and
imul
jle
lcall
mov
and
dec
rcrl
sti
loop
sbb
in
movsl
cmp
push
cmpsb
inc
cmpsb
xor
clc
xor
testl
rorb
sarl
jbe
jbe
or
push
inc
push
loop
gs
testb
insl
test
iret
sub
dec
sbb
push
pop
xor
cmpsb
cmc
cmpsb
cmpsl
sbb
cmp
sub
jle
push
sahf
in
push
jg
xchg
push
inc
mov
fistpl
push
cwtl
enter
mov
jp
cmp
lods
push
jns
push
out
push
mov
jp
mov
int3
dec
xlat
out
push
mov
push
push
push
mov
test
pop
jl
test
dec
in
push
into
push
repz
push
aam
xor
cwtl
clc
sub
adc
adc
add
mov
mov
sbb
sbb
repz
fcomi
or
int3
jbe
sbb
loopne
rolb
enter
shlb
mov
bound
test
ror
mov
sub
jge
pop
jle
ficomps
cltd
cmp
lock
inc
dec
loop
push
push
push
adc
push
inc
xor
push
out
push
and
mov
mov
scas
mov
fisttpll
ljmp
rdtsc
push
out
andl
lret
and
out
addr16
ljmp
or
mov
and
out
cltd
insl
jg
fwait
adc
movsb
mov
mov
jnp
jbe
jbe
jbe
jbe
jbe
jbe
push
mov
cmp
jle
push
push
push
push
adc
pop
dec
fwait
pop
fisttpll
add
cwtl
pop
mov
add
in
es
cmc
xorl
add
movsl
rcll
add
or
loope
sbb
loop
ret
bound
jecxz
and
arpl
mov
shll
jmp
gs
jbe
jbe
jbe
xchg
out
mov
jae
sbb
mov
bound
lcall
xchg
pop
jns
jle
sbb
aas
pop
sbb
lahf
mov
pusha
shlb
lcall
insl
in
jbe
jns
cmpsb
addr16
cmp
push
dec
push
icebp
mov
cmp
hlt
sti
je
std
movsl
fsubp
icebp
out
jae
cld
sub
push
add
mov
push
push
mov
iret
ljmp
addr16
mov
jge
inc
gs
outsl
das
in
and
test
add
mov
loope
push
rcrl
sahf
rcr
xchg
pop
push
stc
dec
mov
sarb
dec
and
cmp
and
sbb
mov
idivl
pop
pop
test
xchg
pop
fdivrs
sahf
pop
mov
in
rcrl
iret
add
lcall
fwait
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sbb
cmpsb
sahf
inc
sbb
pop
rcrb
lahf
shl
shlb
shlb
mov
shlb
mov
shlb
mov
shlb
mov
add
in
dec
mov
out
es
cmpsb
mov
dec
pop
and
fcompl
sahf
lods
fnstcw
pop
mov
dec
lcall
sbb
push
sbb
pop
and
push
inc
mov
mov
pop
jbe
push
and
loope
and
mov
bound
jbe
jbe
jbe
jbe
push
lahf
cmpsb
movsb
cmpsb
in
cmpsb
movsl
cmpsb
out
inc
mov
push
mov
mov
inc
lcall
add
inc
popl
jp
mov
lds
jae
sbb
es
push
dec
fs
lds
pop
dec
push
dec
xchg
dec
fsubrs
sbb
push
cwtl
push
fldenv
cmpsb
fisubl
andps
mov
movl
pop
mov
sbb
movl
inc
push
cmpsb
mov
imul
mov
in
out
pop
xlat
fimull
and
and
daa
ljmp
in
fidivl
inc
out
pushf
cli
pusha
es
dec
add
cltd
into
inc
cmp
lock
and
inc
add
and
and
fidivs
mov
mov
jbe
cltd
or
leave
fs
push
and
out
pushf
enter
bound
test
rcr
pop
rcrb
rcrb
cltd
rcr
add
in
lcall
push
fcoml
push
pop
push
pushf
push
fstl
push
pop
push
popf
push
ficoms
push
pop
push
sahf
push
fists
push
pop
push
lahf
and
mov
adc
js
sub
mov
jle
insb
leave
fstps
into
divl
dec
lds
out
jecxz
dec
cwtl
arpl
xor
cmpsb
movsb
xor
stc
and
out
pop
enter
jo
popf
js
cwtl
pop
fnstcw
pop
push
fwait
mov
xchg
jbe
lcall
pop
inc
cmp
popfw
lret
loope
and
cmp
and
and
shll
mov
jg
dec
cmp
lret
jg
xchg
rcr
sbb
pop
in
sbb
fcmovbe
inc
and
fistl
push
pop
push
fwait
and
pop
lret
fstpl
rcr
rcrb
rcrb
pop
rcrb
lahf
shl
shlb
shlb
mov
loope
mov
add
mov
lret
mov
movsb
loope
and
cmpsb
out
data16
cmpsb
jb
fcomp
pop
sbb
call
gs
movsl
fdiv
xchg
fsts
sbb
pop
push
cltd
inc
negl
mov
mov
push
sbb
pop
push
pushf
push
loope
sbb
push
push
pop
push
sahf
sbb
lods
enter
out
and
cmpsb
movsb
cmpsb
in
and
enter
shlb
cmpsb
bound
or
fisubs
cmpsb
fldenv
cltd
mov
movsl
pop
rcrb
out
fisttpl
jmp
fwait
jbe
jbe
jbe
jp
es
rcr
rcrl
rcrl
sahf
rcr
rcrl
lahf
shl
jae
data16
mov
popa
push
mov
and
enter
shlb
mov
shlb
shl
shlb
add
add
inc
notb
jbe
mov
testl
push
inc
and
bound
pop
ficoms
mov
mov
or
lret
imul
insb
mov
pop
aam
xor
and
and
jecxz
xchg
cltd
jl
ret
inc
popa
sub
popa
pop
sub
push
arpl
adc
cmp
test
pop
pop
jp
dec
push
cmc
inc
outsl
mov
xor
mov
sbb
negl
pop
pop
daa
aam
pop
adc
sbb
mov
cmp
stos
es
mov
mov
lods
loope
mov
mov
cmpsb
inc
xchg
xchg
xchg
push
pop
cmpsb
lcall
pop
sar
insb
stos
pop
mov
jge
out
pop
cmp
into
lret
mov
and
int
inc
add
adc
inc
jae
in
cmp
or
aas
mov
dec
mov
pop
pop
inc
andl
lcall
jl
sub
fsubrl
fildll
inc
repz
jbe
jle
cmp
ret
adc
stos
lods
adc
add
rcll
xchg
add
pop
pop
push
mov
out
pop
dec
mov
mov
add
lds
je
xchg
inc
push
push
sahf
mov
dec
mov
mov
dec
jno
pusha
push
push
ret
push
add
je
mov
xchg
fcomp
push
jne
in
aas
hlt
push
dec
dec
inc
fisttpll
mov
pushf
sti
push
mov
push
gs
or
cltd
sub
incl
outsl
jae
sbbb
add
xchg
cli
rclb
ficompl
lock
or
out
iret
sbb
lret
cmpsb
or
lock
mov
mov
and
mov
movhps
lock
adc
inc
jbe
jbe
or
pop
jle
scas
pop
pusha
or
shll
adc
mov
jbe
mov
sbb
sahf
push
test
das
jns
imull
gs
movsl
or
jl
in
and
enter
inc
scas
pextrw
push
add
jo
test
loope
xchg
push
inc
test
and
mov
or
pop
add
inc
orb
mov
iret
inc
roll
sbb
leave
cmp
loopne
mov
stos
mov
dec
jbe
pop
push
leave
add
ret
xchg
add
notb
loope
push
aaa
push
ja
sbb
in
clc
and
or
fiaddl
or
sbb
mov
loope
cmp
jp
mov
das
sbb
jge
mov
pop
xchg
roll
xchg
jb
pop
push
push
ret
push
xor
aam
jne
push
push
mov
inc
jp
dec
mov
sub
add
jo
jg
cltd
push
jae
in
movsl
sub
loop
mov
dec
ret
ds
rclb
push
xor
les
cmpsb
xchg
imul
in
imull
bound
fadd
jno
sub
sub
push
push
fildll
cwtl
sbb
test
rorb
push
push
faddl
or
stc
jne
sahf
in
fsubl
pop
mov
add
xor
xor
jbe
jge
mov
lcall
leave
cmc
cmp
lcall
imul
in
fisttpll
loop
xchg
cmpsb
hlt
cmpsb
mov
adc
jno
inc
jae
jns
jmp
cld
jbe
jbe
jbe
jbe
jbe
push
cli
xor
cmpsb
aaa
cltd
pop
cmp
notb
add
addr16
fs
enter
mov
sub
cmpsb
insl
dec
daa
movsb
outsb
in
xor
repnz
mov
xchg
hlt
data16
les
mov
inc
mov
mov
inc
loop
lret
jecxz
push
out
out
jecxz
mov
pop
out
repz
xor
repz
cli
inc
in
fldcw
insb
jp
mov
sbb
jno
shl
clc
jecxz
cltd
enter
lret
out
roll
xchg
pop
fdivr
int3
pop
fbld
and
pop
int3
ret
cli
cmp
and
dec
pop
js
out
pop
adc
cmc
movsb
sub
fistl
push
add
movsb
loope
or
andb
ret
xor
push
push
cmp
rorl
jae
ficomps
push
pop
call
xor
outsb
mov
lret
sub
loopne
fistps
jecxz
mov
inc
hlt
mov
movl
add
movl
sarl
push
pusha
mov
pop
js
pushf
bound
gs
add
clc
cwtl
cmp
rolb
dec
or
push
sub
inc
pop
cmp
cmpsb
xchg
dec
jae
hlt
in
push
and
push
inc
daa
push
cmpsl
test
lret
leave
outsl
cmp
aaa
mov
mov
dec
ret
dec
xor
in
mov
mov
pop
loope
sbb
and
fisubrl
ret
movups
jge
outsl
loopne
cld
or
stc
daa
popf
int3
adc
adcl
cmp
bnd
cmpsb
jmp
adc
pop
hlt
in
pop
jg
and
sub
add
loop
lahf
fldl
or
or
pop
adc
popa
loope
sbb
jl
data16
inc
xchg
pop
dec
data16
pusha
lea
xchg
in
lods
mov
cmpsb
mov
xchg
push
jbe
xor
add
repz
nop
jns
pop
push
and
xor
sahf
adc
test
cmc
cmp
enter
dec
pop
cmp
sbb
cli
outsl
into
lret
jnp
fistps
xchg
jnp
add
test
clc
loop
mov
dec
or
mov
pop
cmp
adc
out
jnp
lods
mov
shl
sbb
jp
push
in
mov
jo
repnz
jnp
aas
movsl
iret
add
pusha
mov
out
in
movsl
outsl
repnz
insb
cwtl
ds
lcall
pop
adc
pop
push
pop
adc
adc
mov
jecxz
ljmp
cmp
cmp
fdivr
cmp
loop
jge
jmp
shlb
mov
scas
cli
je
adc
mov
shl
push
lret
outsl
pop
and
ds
pop
jnp
in
mov
outsl
sbb
cmp
psubq
add
pushf
inc
clc
adc
fsubrl
jp
dec
in
pop
jg
sub
stc
cmp
jae
adc
dec
nop
das
adc
sbb
mov
mov
and
push
jecxz
jp
inc
and
rcl
or
inc
loope
pop
mov
sbb
mov
jnp
sbb
mov
mov
addb
inc
ds
xorb
add
pushf
js
rcl
push
jge
es
gs
inc
test
sub
mov
adc
mov
add
jecxz
inc
pop
push
daa
or
imul
jp
dec
mov
sub
das
movsl
out
and
and
and
inc
xchg
or
pop
movsl
or
push
loopne
std
sbb
cmpsl
pop
gs
enter
xchg
stos
lret
mov
inc
outsl
sbb
pop
sub
sti
jno
cmc
je
pop
js
js
loop
mov
movsb
push
cltd
xlat
jp
sub
ficomps
int
inc
mov
in
pop
mov
cmp
adc
int
fwait
into
leave
add
hlt
or
in
mov
mov
test
sbb
repnz
aam
and
fs
sbb
xchg
cmpsb
divb
fisttps
dec
ret
pop
push
popa
aaa
mov
pop
out
mov
cmc
and
sbb
inc
push
inc
dec
add
mov
pop
sub
and
jge
imul
rcrb
cmp
lret
sahf
ret
loopne
and
add
push
aam
scas
clc
pop
and
push
mov
popf
insb
mov
lret
jg
mov
add
leave
lea
jnp
mov
data16
mov
jg
sub
mov
decb
inc
outsb
pop
sub
arpl
mov
pop
mov
in
mov
mov
lods
pop
sbb
gs
sub
cmc
rcrb
pop
mov
pop
xchg
test
jne
push
int3
push
addr16
or
cmp
pusha
ljmp
movsl
cs
arpl
mull
pop
push
push
mov
sti
inc
aas
fcoml
push
mov
lret
jle
out
cmc
popf
iret
jbe
jle
fwait
and
sti
ret
push
int3
out
push
lods
jnp
pushl
mov
fisttpl
add
fdivrl
mov
jae
std
cmp
repz
pop
cwtl
push
daa
xor
jle
das
mov
ljmp
cmp
sbb
lods
enter
add
push
sub
les
add
xor
test
dec
insb
and
xchg
fdivrs
push
jp
sub
mov
addr16
insl
and
or
loope
jo
repnz
test
int3
lea
mov
jb
mov
xchg
imul
inc
notl
xor
sbb
cmp
dec
imul
xchg
sbb
inc
dec
subl
fidivs
xchg
xor
test
push
lods
inc
jne
and
add
mov
xchg
lahf
xchg
inc
incb
int3
fwait
cmpl
and
pop
mov
cltd
mov
dec
dec
dec
fsubrl
push
outsl
sbb
add
jge
jae
pop
inc
mov
xor
pop
cltd
jae
mov
lret
fcomps
cli
jmp
sbb
jg
adc
popf
adc
mov
push
mov
xlat
push
push
jmp
out
pop
jnp
add
pop
ret
mov
or
stos
rorl
sbb
add
push
push
mov
jmp
ret
test
adc
je
call
and
inc
insb
mov
out
pop
sbb
ljmp
cmp
and
lds
cmpsb
pop
test
addr16
stc
in
pop
jns
jbe
int3
out
add
loop
and
push
xor
lret
push
out
and
daa
mov
fdivrs
cmp
sbb
mov
lahf
aas
pop
or
xor
bound
adc
adc
add
jae
xchg
data16
dec
cmpsl
insb
dec
jnp
fucomip
pop
sbbl
sbb
popa
mov
push
mov
scas
into
dec
sbb
xor
icebp
mov
fistl
out
out
gs
test
test
pusha
jl
inc
insl
dec
and
idivb
dec
mov
rcll
jl
cmp
ja
negb
xor
rcrl
mov
xchg
pop
sarl
rcrl
sbb
push
pop
test
push
push
loope
inc
cmp
and
pop
mov
ja
push
cmc
mov
add
dec
sub
ss
addr16
lea
inc
and
lcall
inc
dec
ret
inc
mov
jne
pop
push
jne
daa
sahf
std
test
pop
ror
enter
rorb
in
add
push
daa
bound
lret
inc
lret
daa
inc
sbb
jmp
inc
lcall
inc
andb
jle
ret
pop
fidivrs
cmp
pop
mov
std
xchg
insl
push
xchg
xor
mov
ret
mov
sbb
jne
add
mov
ja
sahf
sub
mov
mov
mov
inc
mov
inc
imul
test
jns
push
cs
pop
xchg
flds
mov
orl
cmpsb
push
sbb
addb
mov
les
sbb
jae
jecxz
push
sbb
fcoml
cwtl
pop
sub
pushf
sub
mov
stos
fs
xchg
add
lcall
jns
inc
sbbl
mov
js
xor
pusha
mov
arpl
cmp
push
jp
pop
mov
pushf
sub
lcall
cs
pop
cmp
mov
test
icebp
push
daa
out
incb
inc
pop
sarb
mov
mov
mov
rorb
pusha
add
jo
jae
jle
push
lds
push
cmp
xor
je
jbe
enter
jbe
neg
daa
cwtl
pusha
out
sahf
shrb
loop
mov
out
lods
cs
dec
scas
repz
jbe
sbb
jb
shl
rol
das
cmp
enter
adc
aaa
mov
inc
inc
cmc
sbb
push
pop
mov
cmp
repz
xorb
push
jp
test
xor
movsl
aaa
lret
adc
movsb
stos
and
pop
test
cmc
gs
mov
pop
mov
add
and
jl
adc
mov
lods
cmpsb
mov
dec
imul
cmp
jmp
in
fbld
xchg
pop
push
mov
inc
fucomi
and
cmc
push
lret
sbb
push
mov
js
lret
fs
imul
add
sbb
xchg
push
mov
sbb
ljmp
movsl
jg
push
dec
jb
cltd
popl
ss
cmpsl
out
fs
hlt
ud1
mov
mov
mov
enter
cmpsb
pop
decb
in
push
lcall
jbe
int
popa
adc
push
mov
lds
out
jle
std
inc
movsl
fcomip
loopne
mov
ret
addr16
mov
mov
mov
adc
out
xchg
dec
jns
pop
mov
inc
call
adcb
dec
or
cmpsb
orl
cmp
push
pop
daa
negl
clc
addb
int
mov
mov
data16
sub
xchg
fisubs
mov
inc
daa
in
jnp
loop
fldt
cmp
push
sahf
dec
pop
sub
sbb
mov
es
adc
mov
pop
pop
add
sbb
mov
test
mov
add
pop
jae
out
testl
sub
bound
xchg
int
pop
enter
dec
ds
icebp
lret
inc
fisubl
in
in
adc
aaa
repz
push
in
outsl
lcall
push
repz
jae
hlt
das
sub
loope
popa
popf
pop
inc
mov
ljmp
sti
js
push
pop
fildl
add
sbb
fwait
cmp
jae
hlt
adc
negl
pop
fadd
in
roll
cmp
mov
fmuls
loope
std
adcb
adc
sub
movb
mov
xor
sub
dec
cmp
sub
xchg
fsubrl
bound
fwait
rcrl
add
and
cmp
hlt
mov
mov
xchg
xchg
ja
push
add
sub
sub
loope
inc
es
push
adcb
cmp
jp
inc
ds
and
fs
clc
loopne
js
cmpsb
jge
or
insb
sub
jns
jmp
in
int
adcl
pop
mov
lret
sbb
out
pusha
sbb
add
jg
mov
push
dec
les
sub
mov
in
xchg
add
packsswb
or
imull
pop
add
inc
ja
icebp
fbstp
mov
lods
ret
std
pop
mov
mov
outsb
jecxz
fyl2x
sahf
shlb
aam
sbb
mov
stos
cmp
movsl
push
in
adc
call
cmp
pop
adc
mov
push
int3
lock
inc
in
mov
jbe
pop
sbb
mov
cld
jne
pop
pop
lret
jmp
iret
jp
and
push
add
add
int
lahf
push
daa
pop
mov
mov
jecxz
fisubs
sub
pop
pushf
cmp
mov
mov
pop
dec
mov
aam
ret
repnz
mov
cmp
sbb
sbb
and
cld
shl
jns
lcall
cmp
mov
jp
dec
data16
dec
loopne
outsl
pop
jp
orb
mov
outsb
imul
mov
loope
jnp
or
xor
xchg
and
jge
push
in
mov
bound
push
leave
and
or
pop
pop
jo
test
test
rcl
dec
lcall
push
addr16
or
fistpll
ja
insl
mov
pop
gs
fcompp
cld
std
and
cmp
push
and
mov
lret
adc
and
std
jmp
std
mov
loope
add
fmuls
dec
pop
inc
push
popa
push
mov
dec
jae
cmp
add
jnp
jp
cltd
add
sti
leave
imul
xor
cmpsb
mov
dec
cmp
test
negl
pop
fmull
and
jns
jmp
loop
lcall
push
mov
movsl
cwtl
cmp
dec
clc
push
mov
into
repz
stc
jmp
lods
ja
add
adc
push
adc
add
add
call
mov
xchg
dec
mov
mov
sahf
pop
cltd
orl
vmread
add
ret
data16
xchg
lods
in
xor
ljmp
test
jmp
pop
test
xor
shlb
jb
mov
adc
mov
add
loopne
mov
mov
mov
mov
clc
xchg
adc
loope
xchg
cmpsb
lret
xchg
dec
push
sbb
pop
outsb
loop
jl
popf
clc
xor
xor
and
jnp
pop
addr16
push
add
jnp
mov
ret
xor
stc
mov
push
pop
ljmp
pushl
fsubl
js
pop
jle
xor
ja
faddl
push
jge
leave
mov
mov
jne
jns
jecxz
shlb
fcomi
gs
xchg
ljmp
jecxz
xor
in
sbb
jge
cmp
aaa
mov
cmp
imul
lcall
in
arpl
fwait
inc
mov
sbb
lock
jmp
push
hlt
xchg
bound
cltd
sbb
pop
cmp
dec
mov
and
jle
pop
mov
sub
pop
mov
mov
out
mov
or
vmread
fcompl
fcmovb
dec
test
lods
and
mov
lcall
sub
sub
jb
es
negl
and
loopne
sub
mov
in
retw
hlt
lahf
dec
fs
or
add
sbb
fld1
inc
xabort
loop
cltd
push
jg
push
mov
in
inc
out
and
clc
iret
bound
cmpsl
or
popa
loope
sub
mov
inc
leave
or
add
out
ret
ret
call
mov
inc
xchg
in
popa
pop
xor
cwtl
and
sub
cli
icebp
or
cmp
lds
mov
fld
pop
out
mov
push
jno
fcmovbe
mov
xchg
pop
pop
imul
mov
cmp
flds
or
and
mov
mov
in
mov
es
pop
pop
imul
in
push
and
push
mov
or
sahf
loope
mov
mov
outsb
mov
jo
pop
clc
repnz
add
test
daa
mov
gs
sbb
popa
sbb
sbb
add
jno
mov
push
or
imul
sub
and
mov
inc
dec
mov
mov
jle
dec
rcrb
dec
mov
outsb
push
xchg
add
push
pop
add
out
pop
push
add
sub
mov
cmp
je
add
inc
inc
data16
inc
into
mov
jbe
daa
clc
fsubrl
xchg
in
stos
addb
mov
jbe
pushf
test
test
rolb
into
add
or
mov
repz
movsl
je
mov
stc
or
xchg
add
sahf
push
dec
pusha
inc
je
add
sub
and
or
daa
pop
js
ljmp
pop
xchg
or
std
movsl
clc
test
repnz
sub
xor
test
std
xor
pop
outsl
mov
mov
mov
cmp
mov
push
test
repz
cmp
and
dec
ds
jl
xchg
jp
les
aaa
adc
adc
lahf
jmp
aas
lret
aad
ljmp
inc
negl
sub
leave
xor
les
mov
ds
add
das
push
push
pop
pop
fsts
cwtl
fcmovnu
lret
mov
pop
fldl2e
imul
pop
mov
push
push
add
fdivrp
push
in
lret
lods
push
inc
iret
push
rol
jae
pop
pop
mov
repz
xchg
push
shl
adc
sbb
cli
ds
fiaddl
ds
pop
lods
lea
lods
pop
xor
jl
sbb
xor
mov
loop
rorl
jp
xor
jns
pop
sub
stos
add
xor
in
jae
hlt
insb
je
cmc
in
mov
cmp
lret
inc
outsb
xchg
scas
out
mov
cmp
push
xor
mov
ret
xor
repnz
jb
loopne
repz
xor
test
stos
shll
jns
sub
mov
insb
jne
xor
je
in
cmpl
inc
add
int3
popa
sbb
cli
into
cltd
sti
add
loope
push
xor
out
mov
inc
xor
xorl
gs
test
pop
cmpsl
pop
enter
clc
push
adc
add
cltd
lock
daa
sub
addb
test
mov
add
adc
add
add
pop
loopne
mov
adc
std
in
lret
loope
inc
in
out
js
mov
xchg
adc
jle
xchg
aaa
loope
stos
push
daa
pop
lods
out
test
cmc
add
and
mov
loopne
bound
jmp
adc
pushf
daa
rorb
jmp
add
dec
inc
popf
lea
and
xor
shrl
mov
aad
lret
mov
xchg
adc
add
jo
pop
loopne
stc
fiadds
cli
out
call
in
negb
dec
push
pop
xor
clc
mov
pop
cmp
sub
fstps
xchg
sub
add
ror
pop
add
pop
dec
pop
es
adc
mov
sub
dec
pop
xchg
icebp
addr16
movsl
faddp
jno
push
outsl
push
data16
dec
mov
out
mov
sbb
imul
inc
jge
cmpsb
out
or
sbb
xor
rclb
hlt
add
push
lcall
hlt
aad
orl
add
je
sbb
gs
or
lcall
std
pop
fcoms
scas
xchg
nop
and
ljmp
adc
pop
sub
out
sbb
sub
push
aas
mov
popa
xchg
mov
in
push
xchg
adcb
int3
je
mov
js
inc
clc
or
sbb
fwait
lcall
sbb
inc
das
sub
int3
daa
add
jbe
xchg
ret
or
fldenv
pop
dec
loopne
inc
sub
loope
xchg
mov
push
or
jge
mov
stos
adc
add
faddl
nop
loope
pop
test
xchg
dec
out
xlat
cmp
insb
push
add
push
jp
test
lret
pop
dec
push
pop
cmpsl
cmpsb
popa
pop
imul
gs
add
cmpsl
in
sub
or
cmpb
movsl
and
push
add
adc
addr16
sbb
inc
push
lret
and
and
gs
mov
fisttpll
xchg
outsl
xor
fxch
xchg
andb
loop
jge
popa
mov
popf
or
stos
dec
int3
inc
xchg
movsb
dec
dec
add
iret
jp
aaa
shll
dec
ljmp
sbb
add
xchg
out
sbb
xchg
fwait
adc
clc
cld
addr16
inc
in
inc
pop
jnp
mov
aas
jae
es
xor
call
iret
cmpsb
mov
movsb
stos
in
cmc
inc
jo
fstp
mov
leave
out
fnstsw
ljmp
adc
xchg
fcomps
lcall
imul
fisttpll
aam
inc
jecxz
sbb
shlb
pop
mov
out
test
out
inc
stos
lret
mov
pop
iret
mov
hlt
sahf
cmp
loop
int3
push
dec
mov
and
outsb
or
sbb
sbb
cmpsb
lcall
inc
gs
mov
adcb
lock
rol
test
inc
ficoms
dec
or
fisubrl
jae
hlt
push
je
cmc
xchg
pop
mov
jmp
sbb
and
mov
jecxz,pt
aas
dec
xor
aaa
pop
mov
fistps
lea
sbb
jge
mov
test
xchg
push
and
push
cmovae
adc
and
cwtl
outsl
pushf
pop
sahf
loop
mov
divl
sub
popa
idivl
es
roll
lret
cld
ja
lods
fcoml
mov
and
loope
adc
add
mov
ljmp
push
mov
jle
loope
fisubl
addb
movsb
dec
lcall
sbb
ja
cmp
dec
fldz
cmpsb
mov
rclb
pop
shl
movsb
mov
pcmpgtd
cli
sub
lcall
mov
dec
shll
xchg
idivl
sub
mov
es
add
addr16
dec
hlt
pop
cltd
popf
stos
out
mov
sbb
mov
mov
mov
lods
jle
sbb
inc
fdivrl
outsl
loop
push
xor
popa
cwtl
movb
mul
loop
and
sub
jns
stc
dec
popf
add
jp
mov
inc
push
jmp
fsub
push
pop
cwtl
aaa
sub
mov
test
inc
sbb
pop
fstpl
test
js
mov
dec
ret
inc
and
xchg
ja
push
and
sbb
into
adc
jp
jno
addr16
frstor
dec
and
ds
push
movsl
mov
pop
test
test
push
ljmp
adc
xchg
es
pop
loopne
stc
fidivrs
sbb
leave
ljmp
ss
and
or
loop
shl
inc
es
test
jnp
or
mov
adc
das
sahf
addr16
in
jns
je
pop
fwait
mov
pop
dec
jp
xchg
xchg
xchg
sbb
jmp
cli
mov
fldt
cli
mov
push
shll
in
clc
js
cld
les
clc
pop
bound
ret
fstl
test
xlat
outsb
xor
dec
pinsrw
or
inc
imul
jp
test
xrelease
or
pop
lods
add
add
sub
mov
jl
inc
cmp
and
pop
gs
in
inc
cmp
mov
gs
and
in
jmp
fimull
inc
jg
sub
xor
jmp
pop
test
or
mov
sub
fildll
jmp
dec
hlt
outsl
mov
jmp
in
inc
ds
sbb
sbb
test
push
int
idivl
add
inc
pop
or
cmc
test
jae
int
pusha
pushf
pop
mov
jnp
adc
add
xchg
jl
xor
pop
call
outsb
jp
leave
xchg
ljmp
or
int3
inc
popa
push
mov
mov
movsl
leave
mull
fcompl
in
pushf
mov
test
push
arpl
into
enter
mov
push
adc
shlb
pop
add
pop
test
push
test
add
jl
mov
push
jae
in
inc
jnp
jae
jge
inc
stos
mov
sbb
add
cmp
inc
jns
out
mov
cltd
mov
cli
dec
imul
imul
xlat
sub
mov
add
test
leave
out
int3
lsl
jbe
xchg
je
sbb
pushl
add
and
loop
jne
jo
bnd
lcall
jp
dec
lret
out
cmp
repz
jne
imul
cmp
scas
adc
mov
mul
faddl
jns
outsl
outsl
push
add
and
xchg
cmc
loope
ljmp
cwtl
hlt
cmc
push
mov
cmp
loope
loop
adc
or
dec
addr16
mov
bt
cltd
jp
repnz
frstor
add
add
lock
aad
adc
lret
mov
mov
pop
jecxz
daa
push
fsubs
call
dec
testl
jl
movsb
or
dec
inc
pop
out
adc
ret
sbb
test
jnp
jp
push
movsb
cmp
cmp
es
mov
mov
in
int3
call
add
lea
push
int3
lea
lcall
mov
add
fldl
gs
scas
repz
xchg
int
popa
inc
lcall
inc
jns
jl
lret
lods
fisubs
mov
sub
or
mov
aad
xchg
xchg
ljmp
addb
div
xor
aaa
in
inc
mov
mov
mov
les
inc
and
cmp
les
ds
pop
arpl
mov
mov
pop
push
pop
push
popa
test
jbe
std
in
pop
adc
mov
arpl
mov
push
filds
push
pop
das
ret
repz
sahf
inc
leave
add
test
or
sub
arpl
mov
add
test
addr16
fistpll
cmp
paddb
mov
clc
fistpl
add
in
js
jae
sbb
clc
xorl
fisubl
push
lcall
aam
cld
mov
mov
sub
test
mov
xor
sub
movsb
out
push
imul
dec
push
in
push
idivb
pop
mov
arpl
push
mov
les
jle
inc
fs
pusha
jl
mull
cmp
fs
cmp
jp
sbb
gs
dec
cli
sbb
ret
cmp
in
ficoml
pop
mov
dec
add
leave
sub
mov
out
mov
and
out
inc
dec
xchg
lcall
mov
out
es
data16
pop
clc
dec
loope
mov
into
adc
pop
add
mov
cmpsb
daa
push
imul
std
sahf
dec
insb
lods
arpl
rcrb
sub
mov
push
jno
xor
cmpsb
inc
xor
inc
mov
int3
in
out
or
sarb
lock
add
or
mov
and
and
outsl
and
jp
pop
mov
pop
lds
add
mov
loope
dec
mov
pop
cmp
cmp
int
outsb
inc
cmp
jg
fcoml
cmp
imul
cmp
rolb
mov
sub
out
rolb
pop
into
imul
mov
inc
dec
sti
bound
dec
mov
sub
repz
jp
addr16
aas
sti
and
add
xor
cmp
cmp
loope
xor
fistpl
stos
dec
push
out
int3
xor
out
mov
sub
and
daa
and
mov
in
jb
ljmp
and
es
rcl
pop
cwtl
js
inc
jp
sub
out
jne
sbb
cmp
xchg
arpl
pop
mov
js
xchg
pop
inc
fmuls
incb
repnz
clc
fsubl
add
mov
fldl
pop
add
mov
push
mov
mov
pop
add
scas
mov
lock
mov
jle
and
xor
mov
shl
addl
fwait
pop
arpl
jl
clc
loop
fidivl
rolb
in
cmpsl
mov
leave
movsl
ret
dec
add
ret
lret
test
dec
cld
popa
mov
shll
leave
lds
loop
imull
aaa
jp
test
cmp
stc
lret
cmp
fstps
lret
lret
loopne
popa
neg
mov
sub
push
add
ljmp
jp
sub
xchg
xor
add
icebp
std
inc
push
mov
imul
test
adc
leave
add
fs
mov
pop
inc
push
js
pop
sub
cmpsb
dec
adc
neg
pop
mov
pop
insb
jge
stos
lahf
sbb
xlat
inc
movsl
call
test
mov
push
imul
xchg
jo
mov
sbbb
adcb
xor
pop
test
sub
mov
seta
clc
ret
loop
xor
mov
jb
sub
cltd
mov
xor
pop
xchg
xor
pop
dec
mov
adc
aas
cmp
data16
mov
adc
or
or
in
lret
jno
outsl
in
rclb
jp
fs
dec
in
nop
out
inc
test
frstor
and
adc
sahf
sub
and
out
inc
jecxz
jecxz
idiv
dec
and
pop
lret
fbstp
mov
pushl
pop
dec
sub
adc
add
cmp
and
movsl
cmp
add
mov
loop
shll
addr16
popa
jl
movsl
add
into
das
sbb
xor
sbb
mov
sbb
leave
fdivp
and
mov
adcl
hlt
mov
inc
cmc
jne
std
test
stc
movsl
insb
dec
in
xchg
ljmp
iret
imul
in
into
sbb
lahf
dec
pop
push
imul
push
popf
and
push
test
jae
lcall
stos
insb
lods
cmp
cmp
outsb
cwtl
clc
arpl
pop
or
insb
mov
or
and
adc
dec
cmp
jl
xchg
sbb
push
ret
sub
bound
add
call
adc
xchg
mov
inc
pop
test
mov
add
loopne
mov
imul
jne
notb
jo
arpl
out
inc
and
leave
and
gs
test
push
lahf
inc
push
in
add
pusha
insl
and
notb
mov
lret
xchg
icebp
popf
cwtl
or
dec
bound
mov
sbb
leave
fstps
xorb
fildl
test
pop
inc
mov
test
in
sbb
popf
clc
push
loop
and
jmp
mull
mov
add
pop
xchg
pushl
mov
fs
mov
mov
add
sub
xchg
jae
cmp
mov
stc
fcmovu
ljmp
pop
lods
dec
data16
data16
add
hlt
sbbl
mov
lcall
fldl
sar
lods
sahf
sahf
dec
pop
or
pop
jp
adc
sahf
fdivrs
arpl
lret
scas
pop
and
pop
std
shlb
sbb
mov
xchg
cwtl
sub
aaa
sbb
xchg
fisubl
or
enter
sbb
mov
sbb
loop
xchg
jb
imul
das
sub
hlt
jbe
sbb
rorb
aas
pop
xchg
out
xchg
push
sahf
and
xor
test
test
cmp
lock
xchg
or
xchg
mov
push
fwait
sar
pop
push
mov
lods
inc
jg
xor
fidivrs
jo
push
jmp
das
and
adc
test
out
fstps
jl
add
in
daa
and
sahf
and
mov
test
sbb
dec
lcall
jp
xchg
in
lret
push
pop
movsl
ljmp
pop
sbb
loop
add
mov
fs
or
jne
cmpsb
fsubs
sub
aas
pop
mov
in
mov
xchg
in
std
out
int
pop
mov
sub
and
xchg
lcall
fstpl
jge
jbe
or
xor
and
arpl
jb
mov
sbb
adc
dec
fstpl
cmp
aad
xchg
test
pushf
mull
jp
mov
leave
shl
fmull
pusha
lret
imull
cmc
cli
stos
je
cmc
sbb
loope
xchg
shlb
xor
in
ret
sbb
dec
add
xchg
ds
es
jbe
mov
les
cmpsb
neg
loop
pop
jo
jno
xor
add
cmp
pop
out
sbbb
jecxz
cmp
sbb
pop
outsl
cwtl
pop
pop
lret
sbb
fisubl
lcall
rcrb
pop
cmc
pop
fnsave
mov
inc
popf
jae
jmp
pop
push
loop
cmpsb
pop
cmpb
mov
xor
lret
mov
fs
sbb
push
and
gs
out
es
jae
cmp
cmpb
inc
shlb
pop
push
xor
mov
xor
dec
sub
out
inc
les
insl
movsb
es
push
popf
outsb
lcall
and
mov
mov
aaa
mov
lds
adc
test
lds
and
int
jnp
cli
rorl
loopne
push
mov
jnp
lret
add
mov
cmpl
and
clc
mov
les
mov
clc
int3
jg
add
leave
and
mov
and
arpl
cmp
sahf
ret
arpl
mov
jg
mov
add
mov
inc
rcrl
cltd
into
add
xor
and
pop
pop
push
cmp
aad
mov
imul
cmp
push
and
bound
cli
push
std
les
lds
jp
dec
jp
jnp
cld
movsl
mov
cmp
add
and
insl
xchg
loope
or
cld
mov
movsb
mov
adc
push
leave
inc
in
add
lcall
jae
into
incl
sub
cmp
add
jae
mov
push
loop
xor
fmull
mul
jp
or
pop
int
push
loope
xor
mov
repz
xor
mov
and
mov
sub
mov
cmp
mov
add
mov
mov
mov
sbb
shll
clc
mov
jo
dec
fidivrl
push
lods
adc
inc
inc
loop
xchg
loope
shld
testl
adc
push
filds
xor
pushf
push
in
push
add
sbb
sahf
and
mov
cli
mov
fimuls
jnp
xchg
inc
pop
mov
mov
andl
loope
jae
hlt
ret
call
or
mov
add
das
inc
addr16
xor
inc
or
xor
jno
add
imul
sub
push
clc
lret
in
xchg
ljmp
lret
int
xorl
loope
xchg
sbb
mov
cmp
pop
inc
cli
pop
pop
les
pop
subl
icebp
jp
andb
fcom
push
mov
sti
pop
ds
and
sub
inc
mov
cwtl
or
xchg
mov
pop
inc
dec
inc
pusha
test
push
xor
and
out
xorb
je
rorl
dec
adc
das
mov
fwait
inc
push
xchg
mov
stos
push
dec
jne
xchg
je
mov
dec
dec
add
sbb
sahf
outsl
es
je
jge
imul
mov
pop
xor
add
cmc
mov
push
dec
imul
popf
leave
push
push
lret
popa
hlt
pushf
enter
inc
inc
incl
movsl
sbb
stc
dec
and
in
dec
cmpsb
xorb
jle
add
mov
subb
in
sub
dec
rorb
repz
std
xor
fisubrl
add
add
jae
mov
mov
sub
add
sahf
rolb
imul
or
loop
push
mov
ficoms
fisubrs
in
and
jnp
add
pop
cmpl
xchg
cmp
test
pop
bound
pop
mov
jae
ja,pt
outsl
mov
jmp
cltd
lret
int
gs
push
test
jne
add
test
dec
scas
adc
push
add
cmp
test
pop
dec
inc
or
pop
fildl
jp
push
and
cmp
stos
es
push
dec
lret
mov
sbb
addb
push
xor
aas
dec
movsl
fs
imul
lcall
sbb
in
out
pushf
clc
or
clc
cmp
imul
in
fstpl
adc
fisubrl
pop
repnz
push
mov
sti
lahf
pop
shrl
dec
dec
cmc
jle
je
mov
add
fmull
mov
push
in
pop
xor
mov
aaa
out
pop
or
mov
sbb
les
sub
mov
sbb
das
cmp
inc
jp
cltd
ret
push
imul
rclb
movsb
mov
mov
rcr
sbb
ror
add
sbb
pop
sub
fsubl
xchg
stos
clc
mov
clc
insb
in
jno
jmp
mov
inc
cmp
outsw
adc
pop
ljmp
ja
es
cli
inc
daa
les
mov
testb
in
mov
cli
pop
cmp
insb
cmc
add
repz
addr16
in
xor
jnp
mov
mov
and
sub
mov
jl
out
jp
xchg
paddw
mov
and
and
cs
and
xchg
fsubl
aam
sub
mov
jnp
fsubs
pop
sub
repz
fadd
sbb
xor
fmuls
add
jo
hlt
jecxz
sahf
or
pop
pop
popa
fildl
adc
daa
mov
jle
jp
add
or
mov
cmp
enter
pop
out
mov
lret
pop
in
lods
mov
in
mov
cmp
test
mov
mov
sbb
cmc
and
in
pop
jecxz
cltd
mov
pop
xchg
lret
les
cld
adc
add
and
arpl
pop
stos
inc
inc
ja
cli
in
xorb
fwait
inc
add
loop
fwait
or
imul
mov
cmp
in
and
adc
add
das
sbb
movsl
arpl
mov
aas
ja
loopne
ds
mov
adc
cltd
push
push
pop
add
inc
jns
inc
pop
dec
int3
mov
sbb
xchg
je
cmp
out
imul
int
cs
imul
sub
pop
loope
lds
cltd
mov
jne
js
mov
dec
div
ficomps
leave
cwtl
arpl
add
add
insl
mov
ja
fadd
shlb
dec
jns
add
in
popf
data16
int
add
mov
jno
add
mov
es
pop
mov
test
gs
push
dec
push
mov
popf
xchg
fcmovne
inc
pop
xlat
divl
jl,pn
dec
mov
pushf
test
jnp
sbb
mov
push
jae
and
add
addl
adc
lret
shr
push
push
jbe
mov
lret
xchg
pop
imull
cmp
add
cmp
rcll
lahf
mov
ds
fcoms
mov
cmpb
jns
pop
inc
rclb
fs
sbb
js
cmc
rol
mov
and
clc
sbb
loope
dec
and
cmc
rcr
cmc
and
test
ss
mov
mov
out
daa
cld
bound
or
daa
orb
pop
mov
cmpsb
xchg
jno
roll
test
pop
cmp
mov
test
dec
in
loope
dec
rol
xor
pusha
jecxz
xor
pushf
mov
aad
jg
fwait
test
clc
dec
in
fbstp
pop
add
mov
pop
mov
std
pop
mov
inc
mov
stc
and
sbb
rcrb
sub
mov
pusha
and
push
add
sbbb
cmp
push
mov
bsr
imul
insl
inc
cmp
aaa
cmp
arpl
data16
pushf
mov
jg
addb
imul
and
insl
std
inc
mov
into
data16
jl
jmp
hlt
xchg
je
cmc
cltd
int
mov
sbb
insb
out
add
mov
ss
in
xchg
iret
jle
jbe
sbb
jns
adc
xor
repz
xor
sti
sbb
daa
xchg
mov
pop
push
pop
bound
out
push
jmp
sub
fucomi
in
sbb
cld
loop
jnp
xor
bound
xchg
add
sbb
pop
cmp
inc
pop
and
xor
or
add
and
jmp
jp
sub
faddl
mov
mov
int3
and
push
jmp
aad
in
cmp
test
shrb
cmpsb
inc
cmpsb
cmp
cmp
sbb
ret
shl
aad
stc
shr
idivl
aas
mov
add
clc
push
rorb
adc
loope
shr
mov
outsb
pop
cmp
bound
lcall
inc
sub
in
cmpsl
push
pop
fisttpl
cmc
jle
sbb
ds
lods
int3
inc
mov
je
loop
loopne
mov
add
jp
lds
andb
xchg
add
ss
pop
sub
lds
repz
pop
cli
faddl
std
xor
fwait
xor
push
mov
das
lods
out
mov
dec
mov
les
push
xor
sbb
push
loop
gs
rclb
jge
data16
mov
std
or
or
sbb
push
ds
pop
data16
out
push
out
sbb
inc
add
je
loopne
fwait
mov
xor
dec
lret
add
pushf
and
fldenv
fimull
inc
mov
add
loop
push
and
cmp
out
inc
push
std
cltd
sahf
mov
mov
js
fisttps
lret
fistps
sbb
sub
pop
mov
cwtl
das
fcmovne
loope
mov
clc
pop
test
shrl
rorl
pop
out
cmp
mov
jecxz
sbb
push
cmp
mov
adc
rcll
add
loop
shld
mov
pop
adc
stc
xchg
ds
sbb
cmp
pop
cmp
cmpsb
mov
repnz
jns
push
loop
pusha
mov
test
pop
bound
and
mov
xchg
sub
jnp
ret
mov
sahf
sti
inc
repz
sbb
lds
inc
jns
and
mov
addr16
mov
and
addl
sbb
cmp
pop
filds
or
xchg
mov
jae
enter
add
sub
add
into
xchg
pop
cltd
mov
jle
add
fidivl
movsl
push
and
pop
mov
inc
push
sarl
pop
sti
data16
jl
decl
or
sbb
mov
push
lods
inc
inc
stos
sbb
pop
xchg
and
pushf
lret
fbstp
in
pop
les
test
sbb
clc
imul
mov
popa
sub
push
and
xor
inc
push
test
fistpll
shr
jae
cwtl
and
in
movsb
cmpsl
and
test
das
and
mov
in
faddp
jns
jp
movsb
sti
cwtl
movl
push
dec
pop
mov
sbb
mov
popf
cmp
pop
shlb
imul
sub
arpl
enter
pop
test
add
inc
mov
addr16
pop
popa
mov
ret
jmp
dec
sahf
add
adc
push
cwtl
sbb
rcrb
mov
ret
sbb
lcall
cmp
jl
stc
xchg
jnp
out
loopne
icebp
adcb
push
call
es
fcmovbe
in
mov
sbb
push
jle
mov
inc
sbb
xor
add
je
mov
movzwl
cmp
loope
js
pop
inc
lret
xchg
and
jne
mov
adc
jbe
dec
lea
ficomps
jae
imul
sub
sbb
push
iret
adc
je
lahf
lret
cmp
sahf
sub
cmc
jg
cmc
pcmpeqw
outsb
loope
xchg
add
ficomps
and
fdivp
mov
ret
sbb
pusha
movb
cmpsl
lcall
pop
jge
dec
cld
das
and
icebp
pop
mov
mov
fimull
mov
adc
xchg
xor
xchg
jnp
mov
add
popf
add
clc
or
mov
stos
jae
jmp
adc
popf
movsl
test
popf
pusha
xor
fsubl
stos
fnstsw
and
inc
sbb
pop
mov
add
add
xchg
jmp
data16
sbb
stos
and
movsb
je
jl
mov
cwtl
sbb
jns
cmc
xchg
jne
popf
jp
push
test
dec
hlt
dec
xchg
xor
incl
sbb
outsl
add
add
pop
xlat
int3
dec
in
xchg
sti
vmwrite
pop
fistps
outsl
mov
add
mov
pushf
mov
in
push
cmpsb
les
ss
xchg
movsl
inc
test
lret
jp
sbb
push
movsb
leave
mov
cltd
iret
icebp
loopne
es
jb
pop
loop
bound
cmpsb
clc
cmp
sbb
pop
add
dec
pop
lcall
out
rcrb
cli
jo
stc
mov
dec
mov
push
adc
lods
daa
ja
adc
mov
outsl
pop
repz
repz
call
rorb
push
into
push
push
xor
mov
clc
mov
cs
inc
adc
lret
test
or
sbb
cmp
mov
sbbl
sbb
fistpl
test
push
dec
jle
add
mov
inc
cmp
loopne
ret
jno
sbb
mov
test
in
les
push
and
fidivrl
popf
or
and
mov
add
in
inc
lock
fsub
sub
xlat
and
dec
in
pop
add
dec
sub
loopne
mov
mov
adc
inc
add
cpuid
inc
test
mov
repz
dec
mov
mov
and
test
dec
sbb
pop
incl
pop
mov
add
lds
dec
sti
pop
fisttps
cwtl
sub
xchg
negl
pop
jp
and
jmpw
or
jge
cmp
pop
mov
and
cmp
in
ds
mov
sbb
mov
inc
inc
fsubrl
inc
cmpsb
or
pop
sahf
in
mov
xlat
mov
inc
mov
fidivrs
movsb
popl
lcall
sub
fs
add
call
xchg
movl
loope
popa
sbb
add
in
outsl
xor
lret
movsl
fcomps
cs
add
aad
and
jne
adc
jbe
push
push
ret
clc
mov
lret
insl
and
sbb
pushw
sub
jle
js
add
gs
sbb
enter
cmp
insb
popa
shlb
cmc
add
pop
leave
movl
and
pop
fldenv
in
cmp
loopne
sahf
mov
jg
iret
loope
xchg
cmpsb
pop
in
cmp
loope
fldl
add
push
lret
leave
pop
aas
out
inc
idivl
shl
pop
xor
cmp
jge
sbb
jno
jb
cli
clc
add
in
pop
sub
add
fmull
xchg
push
sar
cmp
out
mov
mov
imul
and
cmp
lret
clc
in
sub
ljmp
ficoml
ss
fwait
jp
out
aam
fnstenv
pop
test
mov
test
imul
les
mov
push
fcompl
or
loop
test
leave
sahf
movsb
sbb
cmp
xchg
pop
std
loopne
jl
xchg
in
mov
add
test
leave
imul
sbb
repz
push
outsl
mov
xlat
cmp
adc
xchg
cli
sbb
push
ds
repnz
cmpsb
xchg
lahf
jge
xchg
and
push
add
gs
and
and
sbb
sahf
push
cmc
jg
lcall
rorb
dec
sbb
aad
pop
jge
cmpsl
mov
data16
data16
jle
leave
jbe
fstps
pusha
push
add
les
cmp
lahf
lret
jl
inc
test
mov
test
sbb
cmp
test
mov
push
add
dec
pop
inc
insb
outsl
aaa
enter
sub
pop
sbb
adc
jnp
jl
add
lretw
add
mov
incl
ficoml
loope
in
cmp
sbb
xor
movsb
loopne
orl
ret
cli
movsb
fstpl
pusha
fs
jns
stos
incl
push
lods
mov
push
jp
test
push
jg
cmpsb
test
stc
and
inc
inc
pusha
and
stc
in
pushf
inc
or
inc
pop
lds
push
daa
pop
jnp
fwait
test
mov
xlat
mov
pop
jns
cmpsb
mov
addl
in
push
cmp
sti
lcall
jns
lahf
in
jae
and
nop
jge
jge
inc
jle
fwait
inc
jmp
jmp
push
jns
clc
repnz
mov
pop
call
pop
loop
dec
rolb
int3
sbb
loop
pop
shr
sbb
add
cmc
int3
cmc
mov
jle
sbb
cmpb
data16
cmp
pop
inc
xchg
fnsave
fcompl
popa
fisubrl
sbb
jge
leave
pop
cmp
sbbb
inc
mov
out
repz
repz
push
outsl
outsb
cwtd
lret
jecxz
pop
std
leave
fcompl
ja
mov
or
lods
push
jge
mov
iret
xchg
pushf
enter
sahf
lcall
in
xor
jnp
out
addr16
mov
inc
and
inc
hlt
sbb
fbld
fcomp
out
fiadds
fildll
popa
loop
xchg
inc
std
cltd
clc
dec
xchg
mov
in
daa
ljmp
mov
addr16
pop
cmc
loope
jbe
sub
fstps
inc
add
inc
cmpsb
imul
pushf
outsl
xchg
fs
cmpsb
xor
xchg
jl
adc
fisttpll
and
add
aad
add
add
loope
data16
jnp
mov
pop
mov
sahf
pop
arpl
mov
xchg
lret
xchg
cmp
in
pop
mov
mov
inc
fidivl
dec
leave
pop
pop
or
fiadds
push
xchg
incl
sahf
in
jbe
jmp
pop
into
pop
fs
add
jmp
jbe
cmp
xchg
test
stos
mov
pusha
mov
std
jmp
cmpl
mov
jae
test
fsubp
sahf
mov
mov
fstps
cmp
pop
fwait
lcall
negb
mov
repz
mov
xchg
mov
jnp
loop
adc
in
jns
sbb
and
xchg
dec
xor
xchg
dec
or
mov
shl
daa
pop
pop
jp
sub
stc
lret
mov
mov
fidivrs
or
cs
jle
mov
cmc
pop
cmp
arpl
jo
jmp
jb
xchg
pop
pop
mov
add
dec
mov
fucom
ror
jle
pop
loopne
lods
mov
push
repz
inc
lret
push
mov
stos
mov
jno
xor
adc
push
adc
cmp
cmp
mov
gs
das
and
xchg
mov
pop
mov
add
pushf
mov
cmp
popa
mov
imul
xchg
aas
fs
mov
pop
mov
dec
adc
pop
idivl
pop
repz
add
dec
xchg
inc
inc
and
addr16
pop
push
jmpw
ret
je
pop
gs
xchg
mov
or
lds
pop
dec
fsubrp
push
mov
and
aas
add
mul
cmp
cmp
stos
sub
jge
sahf
loope
push
cmpsb
mov
aaa
mov
inc
add
inc
imul
mov
test
rolb
clc
movsb
mov
fsts
fisubrs
lcall
jge
sub
ret
sbb
push
dec
jecxz
ret
movsl
movsl
mov
data16
sahf
int3
and
idivl
test
clc
leave
add
out
jbe
stos
movsl
fisubs
or
sbb
xorl
in
or
xchg
add
xlat
or
movsl
clc
test
data16
fcoms
xlat
mov
addb
ja
sbb
and
xor
pop
mov
xchg
adc
aas
loopne
insb
push
mov
inc
mov
inc
xchg
add
popa
fmul
lock
js
push
popf
pop
pop
aaa
push
addr16
stos
scas
cmc
jle
je
int
cli
adc
in
and
mov
pop
out
hlt
sbbb
ljmp
inc
rcrl
lods
jns
xchg
sbb
sub
mov
mov
ja
mov
mov
movsb
mov
xchg
cmc
loop
jbe
mov
sub
and
mov
add
imul
jmp
leave
ja
mov
jmp
xchg
jbe
jp
add
and
mov
fcom
inc
sub
in
mov
pushf
cmp
add
dec
repz
mov
les
sub
fucom
jge
mov
clc
in
sbb
pusha
and
addr16
sbb
in
stc
fistpll
in
rolb
icebp
mov
es
jnp
adc
jl
mov
cwtl
dec
jbe
mov
decb
mov
jl
cmp
cmp
movsl
aaa
xchg
dec
pcmpgtd
mov
sbb
lods
faddl
scas
push
out
shll
test
push
inc
sti
sbb
dec
ja
mov
cltd
mov
clc
mov
mov
out
pop
sub
pop
pop
mov
sub
shr
sar
xchg
into
push
sbb
dec
cli
cmp
mov
out
loopne
add
dec
cld
shl
mov
in
jp
sbb
xchg
cmp
jne
mov
pop
jnp
outsl
pushf
pop
cltd
xchg
pmaddwd
xchg
jle
mov
mov
mov
xor
cmc
adc
xchg
in
or
mov
lcall
sbb
cs
shlb
and
fistpl
das
and
stc
leave
pop
in
jns
jae
lret
inc
cmp
dec
imul
push
cmc
mov
jno
shl
cld
popa
pop
jae
in
fildll
out
push
insl
ds
mov
jmp
idivl
movsl
lcall
lret
pop
addr16
pusha
jnp
in
dec
dec
dec
pusha
das
xchg
in
inc
mov
fcomps
lcall
fisubs
imul
dec
sbb
ret
gs
xor
push
xchg
insb
jmp
sub
push
clc
push
pop
jnp
gs
std
stos
jg
shlb
dec
out
ficomps
jnp
inc
stc
clc
jno
xchg
add
cmpb
fmuls
xor
inc
xchg
js
add
jae
in
fxam
ja
enter
negl
data16
lahf
in
daa
pop
pop
mov
mov
rorl
mov
push
cmc
cmpsb
frstor
andl
cmp
lcall
mov
fcoml
repz
sbb
push
inc
dec
cmp
add
gs
sbb
mov
popf
sbb
das
lahf
sbb
xor
and
push
dec
fisubl
cwtl
pop
loop
inc
xchg
and
cmp
imull
pop
gs
test
cmp
fidivrs
fadd
movb
clc
mov
add
out
pop
sbb
cltd
xlat
dec
xor
arpl
sbb
testb
lcall
es
clc
sbb
mov
xchg
mov
clc
dec
mov
addr16
shrl
jp
add
loop
mov
sbb
cmpb
sarl
mov
lret
jmp
mov
fldenv
ficompl
fprem
cmp
testl
pop
mov
mov
ljmp
add
add
xlat
dec
xor
sbb
gs
pop
movsl
jns
aas
int3
loop
dec
out
addb
mov
rcrb
leave
mov
cmp
shrb
jns
push
in
inc
divb
add
sbb
leave
lret
inc
add
mov
xor
fsubl
loopne
pop
fs
push
mov
ljmp
pop
es
lcall
fcmovnb
cmp
movsl
ret
leave
xor
lds
add
pop
pop
in
mov
add
cmp
fsubrs
add
loope
cmpsb
adc
repnz
fldenv
inc
std
mov
mov
inc
cmp
mov
popf
add
cmp
enter
mov
dec
rcr
pop
mov
in
mov
inc
es
mov
ficomps
loope
cmp
jb
inc
imul
sub
cltd
sbb
stos
mov
add
inc
pop
lds
mov
scas
jae
xor
dec
loop
es
faddp
jl
call
fadd
jl
add
push
push
das
mov
loope
lret
fidivrs
repz
jle
jl
aam
inc
pminsw
push
fiadds
xchg
mov
in
cmpsl
push
in
jnp
orl
mov
add
xchg
pop
mov
das
sbb
mov
and
clc
cmp
and
in
jle
lret
test
dec
loope
cmp
fcmovnbe
inc
fcmovu
push
loop
stos
xor
pop
jl
mov
shll
inc
fcomps
push
imul
pop
repnz
fmull
sbb
test
adc
push
lret
fcoms
and
add
sub
cmp
add
loope
mov
in
mov
add
xor
dec
add
mov
and
jbe
pop
mov
pop
inc
adc
mov
dec
sbb
clc
test
in
mov
enter
sbb
imul
popf
cmp
je
bound
test
add
in
sub
sbb
inc
mov
dec
rcrb
sbb
mov
insb
pop
sub
cmp
std
pushf
fsubrs
add
adc
add
imul
es
clc
movsl
pop
add
leave
xchg
scas
sbb
movsl
std
jp
leave
fisttpl
aaa
call
mov
lds
pop
hlt
ds
clc
out
lds
inc
cltd
leave
xchg
push
sti
inc
int3
lds
jmp
mov
sbb
dec
mov
lods
pop
pop
gs
idivl
lcall
sub
and
fdivr
ljmp
int3
inc
inc
shrl
xor
loopne
pop
sbb
xor
cmc
cltd
fsubrs
lahf
sti
xlat
lret
mov
cli
dec
inc
ret
add
je
inc
out
sbb
lret
or
pop
push
lea
loop
sub
or
jnp
sbb
mov
cmpsb
bound
addl
mov
outsl
push
fsubl
jnp
out
or
fisttpl
push
mov
bound
xchg
mov
aas
push
pop
gs
xchg
in
lret
lcall
sub
jae
pop
inc
test
loope
and
push
loope
dec
xor
loopne
mov
movsl
cmp
mov
sbb
test
aas
dec
addr16
mov
lret
and
stos
loop
xchg
mov
push
shlb
pop
test
roll
mov
es
std
or
imull
test
popa
add
lahf
push
and
fiaddl
ret
ljmp
sti
cmp
fisubs
mov
mov
mov
dec
fwait
and
mov
jns
sarb
stos
push
mov
dec
lret
fisubs
adc
bound
sbb
fadd
mov
xor
fsub
mov
add
loopne
push
inc
cmp
xor
pop
jmp
jg
pop
loope
jnp
addr16
into
das
cmp
xchg
shr
cmp
cmp
pop
mov
and
sbb
sbb
cmp
gs
fisubrs
scas
cmp
sbb
cli
ficoml
aaa
fs
mov
mov
adc
and
fwait
pop
push
int
lock
cld
shrb
xor
pop
lcall
call
mov
dec
js
xchg
mov
dec
out
cmpsb
fisubrs
sti
movsl
jmp
loopne
add
cmpsb
jne
pop
pop
xchg
std
cwtl
sti
mov
pushw
jp
dec
ret
outsb
sub
jle
and
rolb
add
daa
lcall
insl
jmp
jecxz
xchg
leave
lret
jns
cmpsb
sub
and
mov
fwait
cmp
xchg
repz
gs
mov
or
cmpsb
clc
dec
test
sub
inc
push
fsubl
negl
aaa
imul
sar
xchg
ja
fs
add
lret
mov
add
sti
jae
pop
cli
mov
jnp
push
xchg
push
repnz
aam
sub
jp
sbb
push
je
inc
ficoms
mov
xchg
cmp
ja
fimuls
in
fwait
and
inc
push
pop
cmp
insb
pop
sti
and
jle
xor
pop
sub
data16
fiadds
dec
or
push
or
sub
out
push
pop
dec
popf
mov
sub
addr16
lahf
sub
faddp
pop
xor
data16
cwtl
ret
add
and
les
pop
cwtl
pop
push
insl
imul
les
add
lret
cmpsb
dec
loopne
sbb
jge
dec
mov
mov
fldcw
cltd
and
in
lret
mov
add
and
pop
xchg
and
inc
mov
pop
fbld
inc
inc
and
ds
sbb
lds
test
sbb
lcall
dec
push
jle
cmp
add
sbb
hlt
mov
xchg
add
ljmp
cmpsb
pushf
xor
sbb
sbb
xor
cmp
movsb
mov
pop
cmpb
pusha
ret
pop
inc
mov
lcall
das
ret
test
sbb
adc
and
jge
fbld
add
lcall
arpl
jle
mov
dec
call
jp
inc
dec
gs
es
mov
shl
cmp
mov
lock
scas
add
pushf
cmp
cli
pusha
or
cmp
das
add
fstpt
or
jl
loop
jle
negb
enter
loop
pop
test
ljmp
sbb
gs
or
cmpb
loope
dec
xor
out
mov
scas
insl
ret
hlt
push
mov
cmc
and
sbb
add
add
jbe
lret
push
pop
cltd
lret
inc
js
pushf
aas
mov
push
daa
or
je
repnz
loope
loop
and
pop
mov
int3
xor
cld
stos
fildl
fsubl
int3
ss
mov
out
pop
mov
call
ficomps
fxch
pop
fsubp
cmc
stc
leave
and
mov
loope
icebp
lea
sbb
push
inc
lcall
out
mov
inc
jns
add
lret
add
jbe
leave
ja
add
cltd
push
mov
add
in
je
mov
inc
jns
mov
jns
push
out
mov
cld
mov
sti
inc
push
cwtl
ds
mov
mov
mov
out
mov
push
mov
sbbl
mov
sahf
ja
in
negl
insl
out
mov
sbb
cmc
fcompl
test
subl
ss
push
pop
sbb
mov
in
lea
mov
std
stos
cmp
dec
cmp
push
popa
push
das
mov
fidivrs
test
fcompp
imul
mov
jp
jnp
test
loop
lret
movsl
inc
xor
loopne
mov
ja
add
cwtl
and
push
add
push
pop
fists
movsl
stos
dec
sub
xchg
les
sub
fistps
mov
push
pushf
out
mov
fwait
adc
pusha
ja
dec
fcmovnu
rep
push
jne
jae
mov
ja
fsubrs
lcall
out
test
xorl
jmp
and
pushf
jnp,pt
and
sbb
jb
pop
sub
test
call
mov
scas
push
out
inc
xchg
sbb
shlb
clc
lea
leave
fistps
lds
pop
jle
popa
mov
jae,pn
hlt
and
and
test
cmp
movsl
fnstenv
repz
inc
loopne
jle
fs
fs
mov
cwtl
inc
inc
daa
cmp
fabs
stc
mov
popa
pushf
xchg
sbb
sub
xchg
test
mov
mov
movsl
ja
enter
mov
sti
and
and
int
cmp
and
daa
or
dec
popa
in
jle
lret
inc
sub
std
pop
mov
mov
inc
daa
test
cltd
out
push
dec
shlb
add
inc
jge
xchg
mov
jp
sub
in
and
sub
jmp
mov
jle
lds
in
jle
mov
mov
repz
leave
cmc
push
add
pusha
imul
mov
add
adc
add
arpl
in
dec
and
shrb
jns
inc
jnp
mov
adcb
ret
fcompl
sub
mulps
add
ljmp
xor
js
out
fcom
add
sbb
jecxz
pop
jb
iret
mov
jnp
loope
es
sbb
test
sbb
mov
and
out
fmul
movsl
pop
xchg
pop
cmp
xor
cmp
sub
aad
fstpt
jnp
cwtl
mov
cmp
cmp
push
dec
imul
mov
cltd
and
cwtl
pop
movsl
fcmovnbe
outsb
movsb
imul
sub
and
sub
fwait
arpl
sbb
and
and
out
jecxz
sbb
sbb
shrb
lods
sbb
xchg
arpl
movsl
and
pop
fdivs
push
enter
xchg
pop
loopne
inc
push
data16
cmp
in
inc
push
in
push
jb
iret
fisubl
dec
lock
rcr
xchg
loopne
jg
popa
icebp
in
and
mov
add
push
pop
xor
fidivrs
into
push
popa
pusha
xor
jecxz
and
gs
fsubs
pusha
inc
mov
push
fwait
jne
pushf
jge
popf
popf
pushf
mov
lret
and
and
cmpsb
and
mov
add
movsl
sbb
pop
cmpsb
pop
lcall
xchg
cltd
mov
in
movsl
sbb
add
das
mov
sbb
shr
jns
mov
sub
subb
inc
fadds
dec
and
and
mov
movsl
cmp
and
mov
cmp
repnz
fwait
sbbb
xor
sub
cmpb
gs
inc
gs
mov
sbb
sahf
dec
push
mov
cmp
cwtl
xchg
fsts
mov
xchg
mov
pop
mov
xchg
mov
std
int
inc
push
loop
adc
das
icebp
sbb
sbb
in
fstps
or
shrb
and
add
pop
imul
sti
fnstcw
fimuls
xchg
sbb
xor
xchg
pop
dec
mov
clc
jecxz
cld
xchg
sbb
fwait
pop
add
sbb
js
pop
sbb
fiaddl
pop
xchg
lret
cltd
frstor
bound
popf
fidivl
insb
mov
and
xor
inc
mov
add
pop
test
sbb
popa
les
sbb
cmpsb
and
sbb
pop
sbb
sbb
sbb
sbb
das
mov
ret
jp
fadds
out
or
push
ror
xlat
push
popf
mov
lret
negb
xchg
pop
mov
aaa
addr16
pop
and
inc
mul
mov
rcl
lret
ljmp
js
daa
mov
ja
mov
dec
lcall
imul
sub
aam
loope
add
lcall
int
ret
fdivrl
dec
fists
fmuls
mov
cmp
mov
dec
inc
sbb
dec
pop
fcomps
mov
sub
fdivrs
add
lahf
out
cwtl
xor
out
movsb
adc
cmpsl
mov
pop
es
pxor
ljmp
sub
ja
cmp
dec
mov
cs
push
dec
mov
loope
ljmp
jmp
fldcw
or
fidivrl
sbb
jp
dec
lods
ret
push
in
rcr
aam
movsl
clc
mov
stc
cld
int
push
ljmp
mov
jmp
sti
push
ja
insb
shll
mov
mov
and
cmpsl
jns
loope
cli
ss
jl
mov
dec
cli
or
lret
xor
sbb
rcrb
adc
testl
outsl
not
adc
inc
out
sahf
cltd
test
aaa
add
xchg
cmpsl
dec
test
inc
cs
and
mov
push
jne
ficoms
jl
mov
inc
pop
repnz
jecxz
sub
out
pop
xchg
out
sub
mov
pop
dec
test
add
and
mov
fbld
sahf
adc
and
stc
xlat
mov
jo
jmp
jecxz
dec
push
jge
inc
cmp
mov
push
notl
ret
pop
pusha
in
xlat
sub
mov
mov
stc
mov
mov
xlat
and
mov
mov
pop
out
outsl
and
adc
xlat
xchg
cmp
cmp
mov
xor
insl
inc
push
mov
jg
mov
jno
xlat
lods
mov
sbb
iret
ret
xlat
adc
pop
inc
and
pop
xlat
add
inc
xlat
loopne
and
or
xor
fbstp
mov
or
notl
lea
loope
js
fcoms
jle
pushf
int
adc
and
mov
cmc
sbb
or
lds
mov
mov
loope
in
ja
hlt
test
inc
call
cli
sbb
lods
push
fxch
cmp
dec
in
sbb
iret
fimuls
leave
cmp
dec
mov
xchg
jno
sub
cwtl
cmovl
pop
stos
push
mov
mov
out
sub
cmc
scas
ljmp
jle
cmp
adc
pop
or
push
sub
xchg
xlat
dec
add
sbb
das
ret
pop
imul
pop
lret
scas
gs
push
xlat
out
mov
lock
xor
mov
jmp
xlat
mov
pop
bound
pop
in
mov
loop
adc
xchg
ret
sti
xlat
sub
inc
das
push
aaa
push
xlat
jo
ljmp
mov
or
jmp
aad
test
adc
inc
push
pop
add
pop
xlat
jno
and
ficompl
je
leave
int
fabs
outsl
cmp
add
mov
push
inc
inc
fcmovnbe
mov
lret
xlat
fwait
xchg
sbb
jl
sub
and
jb
movsl
pop
fbld
push
and
fists
jae
xor
dec
loopne
xchg
mov
aad
inc
stos
jno
ffree
sti
out
lret
loopne
popa
lret
ljmp
xlat
mov
test
not
fwait
lods
iret
enter
mov
jns
aaa
pop
push
stos
lock
dec
pop
ljmp
mov
jnp
mov
daa
imul
xchg
fdivrs
xor
loope
dec
push
adc
arpl
jp
fs
jmp
fisubl
xor
inc
sbb
xchg
mov
lds
sbb
sub
push
out
pop
mov
cmp
or
mov
ja
iret
pop
enter
cwtl
pop
scas
mov
mov
or
out
sbb
cld
adc
xlat
das
add
mov
cmp
ret
jle
fistl
xchg
divl
adc
fst
dec
mov
jmp
xor
jno
inc
jecxz
call
mov
and
fldt
push
xor
arpl
jp
cwtl
sub
cli
add
mov
lcall
test
hlt
ret
or
xchg
add
ja
lods
inc
aaa
fprem
or
xchg
popf
cwtl
repz
lcall
xchg
daa
inc
fsubrp
mov
imul
sbb
clc
dec
clc
clc
dec
inc
sti
ljmp
dec
push
loop
test
jp
call
cwtl
pop
sub
out
insl
in
ljmp
pop
fnstenv
outsl
neg
xchg
cs
pop
sarl
jae
popf
nop
pusha
sbb
xchg
xor
cwtl
adc
adc
push
inc
xor
jno
mov
fiadds
push
xlat
mov
pop
mov
jno
sub
data16
mov
fwait
adc
mov
fnstcw
movsb
iret
fst
cli
hlt
sti
sbb
jae,pt
test
xchg
mov
rcrb
cmp
jle
or
xlat
out
gs
and
test
pop
cmp
jp
fs
xor
pop
cmp
mov
pop
push
popa
movsl
imul
adc
sbbb
xlat
icebp
and
xlat
push
push
sbb
shlb
jno
lock
sbb
pop
lret
fildll
push
aad
and
inc
mov
sub
test
outsl
fisttps
movsl
sbb
mov
jle
push
jecxz
pop
mov
jmp
insl
dec
xchg
mov
xlat
inc
lcall
inc
ja
inc
add
loop
aad
mov
pop
test
rcr
xor
loop
into
inc
push
js
pushf
lcall
clc
mov
aaa
das
jae
add
ret
xor
popa
xor
add
or
push
mov
xlat
insl
inc
or
mov
mov
stos
jecxz
decl
push
pop
sbb
xlat
xor
jecxz
push
push
pop
enter
nopl
test
xchg
iret
jae
jp
jmp
cltd
xlat
xor
dec
arpl
aad
push
pop
mov
cmp
lret
add
xlat
scas
stos
rcr
fidivrs
xlat
clc
lret
pop
insl
jecxz
in
adc
test
mov
adc
sub
clc
jg
or
xlat
jbe
jae
sub
cld
mov
inc
mov
dec
data16
xor
inc
mov
jp
push
pop
push
and
cmpsb
fbstp
pop
test
xor
test
fcomip
xor
pop
xlat
and
lds
sub
inc
out
pop
clc
clc
loopne
xlat
aas
iret
mov
xchg
dec
cltd
and
adc
in
lret
cmp
jmp
popa
sub
mov
xchg
icebp
cmc
and
pop
mov
sub
arpl
mov
std
push
ja
lahf
adc
sbb
lret
fldt
ficoms
rclb
loope
cmp
pop
repnz
pop
fdivrs
jo
jecxz
les
fildl
dec
shll
inc
aas
shl
or
pop
mov
call
testl
in
dec
in
push
mov
hlt
fsubr
fidivl
cld
sub
cld
sbbb
scas
push
mov
sub
or
jmp
js
sbb
adc
faddl
jmp
cmp
fcoms
add
sub
loope
mov
xlat
xor
jp
add
leave
mov
in
lahf
xor
inc
negl
enter
icebp
movsb
sbb
mov
xchg
cli
pop
cmp
in
imul
jp
xlat
xor
mov
lods
pop
xchg
mov
xchg
fsubl
pop
je
cmp
xor
gs
inc
add
mov
adc
xlat
mov
out
sub
xlat
mov
fnsave
xlat
imul
pop
push
mov
jo
xlat
dec
cs
mov
xchg
xchg
mov
bound
mov
xor
jae
enterw
xor
cmpsl
jp
xlat
int
push
sbb
mov
or
mov
jo
mov
xchg
ja
mov
jmp
xor
push
pushf
mov
test
or
xlat
lret
bound
push
or
xlat
push
push
adc
jns
std
out
out
mov
inc
mov
div
cmp
mov
lret
and
repz
adc
push
pop
add
mov
jb
push
and
clc
inc
aas
sbb
xchg
push
sbb
sbb
cmp
jb
inc
mov
shrb
cmpl
mov
jg
div
xchg
fimuls
lret
jmp
in
dec
jns
or
push
add
adc
mov
or
add
cmpsb
mov
pop
dec
add
inc
push
push
mov
jb
div
sub
insb
outsb
jbe
dec
mov
add
sbb
leave
jns
rcll
aaa
adcl
das
sahf
xchg
in
push
stos
es
xlat
adc
jecxz
pop
out
sub
cwtl
int3
sbb
and
dec
mov
push
gs
iret
ds
sbb
xor
and
cwtl
jp
fsubs
mov
outsb
int3
xor
mov
enter
stos
aam
mov
ficompl
xchg
pop
and
loope
sub
jecxz
mov
call
xor
or
fs
fildll
dec
iret
fiadds
popf
xchg
mov
sbb
inc
out
mov
jle
dec
push
xchg
aaa
jecxz
xchg
add
jne
jecxz
stos
jns
pop
rcl
push
pop
movsb
cmpsb
or
mov
ljmp
outsb
jle
fisubl
xchg
lahf
call
jge
push
daa
lods
mov
push
out
in
inc
call
sbb
mov
jo
sub
inc
call
fmuls
mov
jae
icebp
orl
lret
dec
filds
xlat
pop
dec
mov
sahf
dec
mov
lahf
cmpsl
add
jp
push
adc
in
mov
insb
xlat
mov
outsb
imul
dec
lds
push
mov
clc
fldenv
push
fcmovne
adc
addl
fcmovb
pop
arpl
xlat
in
sbb
out
fcoms
push
stos
aas
test
loop
lahf
bound
cmp
imul
add
cld
pop
mov
xlat
fiadds
push
sub
add
fiaddl
fld
dec
aaa
xor
bound
xlat
aam
mov
dec
out
push
test
nop
aam
repz
idivb
daa
fcmovnu
cmpsb
adc
or
push
das
sub
xchg
mov
cmp
dec
jnp
xlat
jno
aaa
push
cmpsl
jne
fmull
pop
insl
or
cli
jp
movsb
mov
jns
xor
leave
in
adc
imul
lcall
rolb
dec
jno
fstpt
inc
shll
adc
ja
add
pop
lcall
jo
push
xchg
mov
inc
in
and
leave
adc
inc
ror
cmp
add
cld
imul
or
or
fisttps
and
fidivrl
xchg
enter
xchg
mov
push
adc
pop
popf
mov
jle
cmp
fcoms
sbb
mov
leave
cli
mov
or
inc
pushf
or
sub
mov
sbb
cmpsb
jne
out
xchg
sbb
xchg
ret
mov
jp
xorb
or
in
jno
nop
cmp
dec
cwtl
jmp
push
dec
cmp
xlat
or
and
xlat
cli
pop
stos
clc
xor
iret
xlat
adc
inc
xor
lock
inc
pop
push
pop
xlat
outsl
aad
fistl
xor
pop
and
ja
mov
or
bound
outsl
add
popf
mov
adc
ret
ja
leave
jp
mov
ret
xlat
out
dec
pop
or
adc
dec
out
mov
pop
xlat
xchg
add
int3
mov
cltd
es
bound
fbld
sub
jne
jae
pop
pop
mov
jecxz
out
clc
test
xlat
cmp
cmp
sub
dec
mov
jne
xlat
movsb
out
aam
into
cmp
cltd
fisubs
aaa
bound
mov
sahf
add
or
shrl
cmp
pop
xchg
rol
xchg
xlat
arpl
pop
jbe
and
mov
fwait
mov
ds
inc
adc
loope
inc
fisubrl
gs
pop
ljmp
mov
xchg
sub
enter
pop
ljmp
push
fcmovnbe
ret
mov
mov
cmp
mov
cltd
leave
xchg
xlat
ljmp
cli
xor
dec
pop
jo
sub
mov
addr16
stc
jb
dec
and
push
data16
loopne
inc
stc
shlb
xlat
int
scas
xor
inc
mov
jb
in
mov
filds
inc
push
out
test
mov
mov
pop
cmp
pop
incb
jecxz
je
xlat
xchg
jg
outsb
icebp
xchg
xor
inc
cmc
or
add
mov
arpl
and
mov
add
jnp
xor
push
xlat
pop
ljmp
stos
mov
xlat
adc
in
hlt
xlat
push
aad
or
pop
mov
xchg
jl
xor
in
push
es
adc
cmp
add
lea
or
gs
repz
fsts
lods
adc
xlat
dec
and
dec
xlat
mov
inc
fucom
xlat
call
orb
int3
outsb
repnz
dec
mov
dec
loopne
push
std
test
mov
loope
jb
fldt
decl
add
mov
clc
mov
push
ss
popf
cwtl
lods
cwtl
fistpl
in
aad
gs
xlat
sub
cltd
xor
testl
ljmp
sbb
and
ljmp
lods
mov
xchg
cwtl
js
daa
ljmp
adc
sub
bound
jbe
jae
seto
jo
bound
mov
fildll
cmp
imul
pusha
cld
xlat
pop
lods
es
xor
push
aaa
xlat
hlt
ja
mov
out
xchg
add
flds
enter
jecxz
js
std
mov
mov
pop
outsw
fadd
popa
out
xlat
imul
pop
pop
cmc
inc
xor
pop
popf
in
fidivl
mov
cmp
cli
lret
xlat
push
and
xlat
aas
jl
arpl
mov
sbb
jmp
int3
pop
fs
test
jecxz
loop
inc
push
xlat
dec
rol
fdiv
add
and
dec
out
gs
xchg
ljmp
xlat
test
scas
mov
xlat
mov
xor
enter
push
test
loopne
pop
mov
xchg
xlat
fwait
pusha
out
sbb
and
outsl
je
subb
out
stos
jb
cld
pop
outsl
pop
sbb
mov
frstor
cli
mov
pop
cmp
bound
mov
mov
xlat
push
call
lea
jae
pushf
pusha
lea
jmp
pop
mov
mov
mov
lds
xchg
iret
jl
inc
and
fstp
sbb
ljmpw
bound
repz
loope
jmp
fidivrs
and
xor
add
out
sub
scas
mov
movsb
xchg
cmpb
outsl
xchg
mov
sbb
ror
pop
dec
sbb
dec
divl
fwait
or
je
dec
add
or
and
sbb
hlt
xor
nop
and
mov
push
out
mov
adc
xor
sub
mov
xor
or
or
data16
rcrb
xchg
mov
xchg
shrl
int3
cmp
mov
fbld
popa
xchg
out
shrb
push
inc
jb
sub
aas
jnp
or
sahf
fucom
adc
pusha
push
xchg
fisubl
push
mov
inc
and
call
jae
fisubl
arpl
pop
or
mov
jle
inc
cmpl
push
ss
cmp
mov
movsb
xor
mov
mov
jg
cmpsl
jno
outsl
push
mov
adc
add
dec
stc
xor
imul
xchg
subl
les
je
inc
xchg
das
inc
insl
mov
aam
lea
fs
int3
dec
stos
jb
or
or
incl
ds
or
and
in
fsubs
stos
out
add
lds
fisubrl
dec
std
in
mov
dec
divb
pop
or
xchg
cld
fsubs
outsb
and
inc
add
mul
shrb
repz
sti
lds
bound
mov
jmp
cmc
and
addl
mov
sarl
mov
jo
or
out
adc
ret
mov
push
jecxz
dec
test
mov
xor
or
xor
jbe
mov
insb
stos
das
sub
les
out
imul
or
out
test
imul
pop
lahf
or
mov
stos
mov
movsb
mov
scas
adc
mov
mov
and
iret
push
pop
daa
add
mov
fdivl
jae
jle
push
jp
xor
xchg
mov
jle
or
xor
jb
stos
mov
xor
loop
mov
shrl
cld
cltd
xor
xchg
push
idivb
jmp
out
jecxz
nop
push
lea
dec
xchg
out
sub
pop
cmp
push
int3
test
cmp
inc
push
jns
mov
nop
aas
movb
mov
or
sbb
sub
sub
jo
jns
and
sbb
mov
js
fdivp
repz
dec
fwait
ja
cmp
dec
lods
adc
fucomp
scas
xchg
sbb
mov
inc
jecxz
gs
and
loopnew
test
subb
test
mov
imul
mov
cmpsl
jae
jbe
test
scas
dec
push
addb
push
and
jecxz
or
jae
divl
fsubs
lea
push
xor
cwtl
inc
das
fnstenv
setnp
aas
pop
mov
in
loopne
and
out
scas
lcall
mov
inc
cmp
dec
rclb
pushaw
in
lods
dec
in
in
adc
pop
daa
rol
jg
daa
repz
inc
cwtl
inc
pop
and
std
js
jnp
repz
ljmp
popa
out
push
xor
pop
lods
pop
daa
adc
jnp
lods
test
loop
js
or
shrb
test
pop
fwait
aaa
add
cmpsl
mov
sbb
idivb
mov
mov
mov
mov
push
into
or
cmp
and
jmp
test
not
bt
pusha
bt
pushl
sub
test
pushf
and
mov
call
pushl
pushf
popl
pusha
movw
pushf
pushl
popl
pushf
push
pushf
push
lea
jmp
sbb
pusha
mov
inc
mov
cmc
sub
call
mov
call
lea
jle
mov
pushf
mov
jmp
clc
cmc
call
mov
pushf
lea
jmp
mov
mov
lea
pushl
popl
push
pop
bswap
call
pusha
pushf
mov
mov
push
mov
call
lea
jge
pushf
mov
mov
pushf
mov
pusha
pushf
pushf
mov
pushl
pushf
jmp
call
mov
pushf
popl
call
mov
mov
mov
call
sub
movw
push
dec
lea
jno
mov
pushf
lea
jmp
lahf
pusha
mov
mov
mov
call
pushf
mov
call
not
not
mov
jmp
push
call
mov
pushf
pop
lea
bswap
pushl
popl
movw
bswap
jmp
mov
call
lea
ja
pusha
pusha
lea
jne
shl
shld
bsf
or
mov
call
mov
push
pushf
popl
push
call
jmp
mov
push
jmp
jmp
pushf
pushl
popl
pusha
push
pushl
push
lea
jmp
xchg
pop
add
hlt
pop
add
hlt
pop
add
add
add
jne
pop
add
or
pop
add
pop
add
add
jmp
negl
int
pop
add
repnz
add
or
test
push
pop
add
adc
lods
sti
pop
add
or
loopne
pop
add
negb
lock
add
pop
add
maxps
addl
add
hlt
pop
add
hlt
pop
add
pop
add
or
sti
adc
testb
add
or
pop
add
or
pop
add
lock
add
or
iret
negb
xchg
lock
add
add
pop
add
pop
add
or
lods
negl
loope
pop
add
sti
pop
add
or
pop
add
clc
pop
add
out
pop
add
icebp
pop
add
icebp
pop
add
clc
pop
add
hlt
pop
add
or
maxps
jo
pop
add
pop
add
or
pop
add
icebp
pop
add
negb
hlt
std
pop
add
adc
cmp
pop
add
stc
pop
add
lock
add
pop
add
out
pop
add
pop
add
clc
pop
add
maxps
cmp
pop
add
pop
add
std
pop
add
add
pop
add
or
test
pop
add
or
pop
add
or
pop
add
clc
pop
add
cli
pop
add
clc
pop
add
pop
add
adc
pop
out
pop
add
out
pop
add
or
pop
add
maxps
inc
or
pop
add
hlt
pop
add
negl
cmc
add
maxps
xchg
lock
add
or
or
pop
add
out
pop
add
pop
add
maxps
enter
cmc
maxps
mov
pop
add
add
loopne
pop
add
pop
add
add
int
pop
add
or
iret
negb
iret
negb
into
add
loopne
pop
add
pop
add
out
pop
add
pop
add
negb
scas
or
maxps
into
add
loopne
pop
add
pop
add
maxps
lock
add
pop
add
maxps
jae
pop
add
add
loopne
pop
add
hlt
pop
add
or
pop
add
pop
add
add
loopne
pop
add
add
mov
cmc
pop
add
pop
add
adc
into
add
loopne
pop
add
add
test
out
add
pop
add
out
pop
add
add
loopne
pop
add
add
add
add
iret
negb
roll
add
add
pop
add
pop
add
pop
add
clc
pop
add
or
pop
add
add
pop
add
out
pop
add
call
pop
add
add
loopne
pop
add
cli
pop
add
add
int
pop
add
lock
add
add
loopne
pop
add
add
add
loopne
pop
add
negl
jae
pop
add
add
loopne
pop
add
add
out
negl
stos
out
pop
add
cld
pop
add
add
loopne
pop
add
or
jae
pop
add
add
scas
or
jne
pop
add
add
loopne
pop
add
pop
add
clc
pop
add
adc
or
pop
add
pop
add
add
loopne
pop
add
out
add
hlt
pop
add
cli
pop
add
add
loopne
pop
add
add
pushf
repz
popl
push
mov
pushf
mov
lea
jl
push
pusha
mov
mov
mov
pushl
pushf
mov
pusha
call
pusha
dec
push
add
stc
jmp
pusha
lea
call
mov
mov
push
pushl
cmc
clc
mov
pushl
call
mov
pushf
call
push
mov
push
mov
mov
push
mov
push
movw
movb
xchg
pop
bswap
pushl
popl
pushf
lea
movl
not
jmp
add
pusha
mov
pushf
jmp
jmp
pusha
pushf
popl
movb
pushf
pushl
popl
pushf
mov
pushf
pushf
lea
jmp
mov
push
pushf
lea
jmp
rcr
ror
add
mov
shl
rol
adc
mov
add
rcl
rcl
bsr
xor
xor
btc
mov
jmp
shrd
rcl
test
bswap
mov
pushf
pusha
sub
pushf
jmp
push
mov
jmp
mov
mov
inc
stc
cmc
stc
not
clc
add
test
sub
mov
push
mov
pushf
pusha
mov
lea
jmp
rol
add
movzbl
test
add
not
dec
shr
test
shr
rcr
xor
call
lea
je
bt
pushf
clc
mov
xor
movb
cmp
xchg
pushf
clc
stc
stc
mov
mov
bt
test
call
mov
jmp
mov
pushf
jmp
call
call
jmp
sub
pushf
clc
sub
bt
cbtw
cmc
cwtl
jmp
movl
pushf
mov
pushf
pushf
pushf
push
lea
jmp
call
decl
jmp
push
mov
pushl
pushf
lea
jmp
cmc
shl
pushf
mov
mov
pushf
popl
pushf
mov
pushl
popl
pusha
pushf
lea
jmp
push
call
mov
pusha
mov
pushf
jmp
mov
mov
pushl
mov
call
pushf
xchg
cmc
clc
cmp
lea
stc
jmp
movl
sub
mov
add
jl
cmp
shl
jbe
mov
jmp
mov
pushf
mov
pushl
mov
jmp
pushl
pushf
mov
movb
pushf
lea
jmp
sbb
cmp
bsf
mov
bsr
mov
push
add
pusha
movl
mov
pushl
lea
jmp
pushf
mov
call
pushf
jmp
shr
inc
mov
jmp
call
jmp
movzbw
movzbw
mov
pushl
lea
not
push
pusha
bswap
bswap
push
mov
pusha
lea
jmp
pusha
mov
pushf
push
lea
jmp
movl
not
mov
pushf
push
pushf
mov
lea
jmp
pushf
pushf
mov
inc
jmp
call
movw
lea
mov
movzbw
pop
movsbw
bswap
mov
pusha
movl
pushf
bswap
lea
movb
mov
cld
jmp
jmp
repz
pushf
push
call
pusha
mov
pushl
push
mov
call
pushf
jmp
cmp
push
pushl
popl
call
mov
cltd
mov
test
mov
pusha
test
mov
add
pusha
jmp
lea
js
push
lea
pushl
jmp
mov
jmp
jmp
mov
push
pushf
mov
pushf
movb
lea
jmp
pushf
movb
lea
jne
dec
stc
xor
mov
clc
test
jmp
pushl
dec
pushf
mov
push
pushf
lea
jmp
jmp
mov
jmp
lea
mov
clc
add
pusha
pushf
pushf
lea
jmp
movzbw
not
push
lea
mov
pushf
mov
mov
lea
jmp
jmp
jns
pushf
pusha
repz
popl
pusha
jmp
mov
movb
mov
mov
pushf
call
call
mov
pushf
push
pushf
mov
lea
jmp
pushf
pusha
push
pushf
repz
popl
pushf
pushf
jmp
shl
mov
cmc
cmp
pusha
add
pusha
pushl
mov
lea
jmp
pusha
pushf
pusha
pushl
popl
pushf
push
mov
lea
jmp
push
cwtl
setg
jmp
pushf
divl
movb
mov
jmp
mov
lea
jge
push
mov
pusha
movw
pushl
mov
jmp
pushf
call
bsf
aas
or
mov
rcr
mov
cmc
pushf
pusha
add
pusha
jmp
push
pushf
inc
test
stc
call
mov
pusha
pushf
movw
call
add
mov
add
not
shl
test
mov
clc
call
clc
jmp
call
xchg
movzbw
pop
jmp
not
shrd
add
mov
setno
btr
mov
pushf
cmp
not
clc
cmp
not
cmp
jmp
mov
mov
call
lea
je
push
mov
pusha
jmp
repz
popl
call
mov
call
mov
mov
cmp
ror
test
mov
clc
add
bt
shrd
pusha
mov
pusha
pushf
popl
pushf
movl
jmp
rcr
shl
shl
mov
adc
test
test
mov
jmp
mov
push
call
rcl
and
movzbl
push
clc
cmp
cmp
sub
cmc
pushf
xor
push
pusha
neg
jmp
call
bswap
pushl
call
mov
movb
pushf
lea
jmp
mov
call
stc
sub
push
mov
pushf
mov
pushf
movb
lea
jmp
mov
mov
pushl
popl
call
movb
mov
call
jmp
jbe
push
mov
repz
popl
push
mov
pusha
mov
mov
mov
mov
movb
call
mov
lea
movzbw
movzbw
mov
pushf
or
mov
pusha
pushl
cmp
bt
sub
mov
test
shl
pushf
movl
pushl
mov
pushf
call
call
mov
movw
call
push
pushf
popl
call
sub
sar
pusha
inc
xor
bsf
add
bt
sar
cmc
cmc
mov
stc
cmc
add
mov
mov
pushl
lea
jmp
movw
not
mov
mov
push
mov
mov
lea
jmp
not
clc
lea
jne
clc
add
pusha
clc
lea
pusha
mov
cwtl
test
jmp
push
jmp
pushf
mov
call
mov
jmp
push
repz
popl
push
call
cmp
xor
push
jmp
movl
movzbw
pushf
pop
not
mov
movb
lea
jmp
rcl
push
mov
mov
call
clc
pusha
jmp
sbb
and
inc
mov
not
shld
mov
cmc
add
jmp
xor
cmc
cmp
pushl
mov
movl
sub
movb
pushf
mov
push
movb
lea
jmp
jmp
sub
push
pusha
call
push
mov
pushf
call
lea
jne
pusha
cmc
mov
pusha
xor
mov
jmp
sub
movb
jmp
movsbw
pop
movsbw
mov
push
pushf
lea
jmp
pushl
inc
movw
jmp
pushf
mov
pusha
pushf
popl
call
bts
or
or
mov
clc
sub
call
movsbw
movl
push
bswap
movsbw
movl
mov
pushl
pushf
lea
jmp
jmp
or
mov
stc
sub
push
call
bsf
daa
mov
lea
call
jmp
clc
mov
stc
push
cmc
test
add
pusha
pusha
push
mov
lea
jmp
shl
push
movb
mov
movzbw
and
mov
cmc
clc
add
pusha
pushf
pushl
push
mov
movw
pushf
pushf
lea
jmp
sub
rdtsc
mov
push
test
neg
mov
mov
mov
cmc
add
bt
cmc
shld
call
xchg
bswap
lea
pushl
popl
movzbw
movzbl
call
call
or
call
cmc
jmp
pushl
lea
jne
clc
xorb
push
lea
push
mov
pushf
lea
jmp
mov
ror
add
setnp
jmp
movzbw
pusha
pusha
mov
pusha
pushf
popl
mov
jmp
mov
push
movb
mov
mov
lea
jmp
bsr
shr
mov
push
cmc
add
pushf
pushl
lea
jmp
mov
movw
movb
mov
mov
lea
jmp
call
test
add
push
call
pushf
rcr
mov
pushf
sub
jb
stc
add
push
movb
mov
mov
lea
jmp
movb
jmp
pusha
pushf
xchg
push
pushl
popl
jmp
mov
mov
call
push
cmp
jmp
movw
movl
call
and
bsr
push
movzbl
test
sub
pushf
xor
setg
dec
shl
neg
dec
shl
sub
neg
btc
clc
sub
movzbl
rcr
movzbl
jmp
and
push
mov
pushf
pusha
mov
pushf
popl
mov
pushl
popl
pushf
movl
pushf
pushl
lea
jmp
jmp
push
cwtl
mov
pusha
pushf
jmp
movl
push
jmp
push
mov
call
mov
pusha
jmp
mov
jmp
pushf
pushl
popl
push
pusha
movb
push
lea
jmp
jmp
jmp
pushf
mov
pushf
mov
call
mov
mov
call
mov
push
mov
push
mov
call
lea
pushl
popl
movsbw
pop
movl
not
movzbl
bswap
mov
movb
push
lea
jmp
pushf
pushl
popl
pushl
pushf
lea
jmp
cmp
shr
jmp
movw
pushl
popl
push
mov
pushf
lea
jmp
mov
movw
jmp
push
pusha
pusha
pushl
mov
push
pushf
lea
jmp
pushf
movb
mov
lea
je
push
mov
pusha
push
pusha
pushf
mov
mov
pushl
popl
not
not
movl
bswap
bswap
mov
movb
pushl
push
lea
jmp
dec
xor
btr
mov
bt
cmc
call
pushf
mov
jmp
pusha
movzbw
call
sub
pusha
shr
call
lea
mov
push
mov
pushf
push
add
push
pushf
lea
jmp
repz
popl
call
mov
pusha
push
call
rcl
mov
test
bt
stc
test
sub
clc
cmp
add
push
call
mov
pushf
movb
movb
pushl
ret
call
mov
call
call
pushf
popl
movw
call
push
mov
pushl
push
push
lea
jmp
mov
jmp
movzbl
call
mov
jmp
call
mov
mov
mov
pusha
push
movb
jmp
rol
lea
jae
dec
pusha
cmp
add
pusha
clc
clc
xor
mov
cmp
mov
pushf
clc
pushf
pushf
sub
call
movb
pushf
xchg
bswap
movzbw
movzbl
pushl
popl
call
mov
movb
pushl
dec
movw
lea
jmp
mov
pushf
mov
mov
jmp
pushf
push
mov
movb
mov
push
movw
lea
jmp
and
jmp
jmp
movsbw
movsbw
bswap
lea
push
lea
mov
pusha
lea
cpuid
test
pushf
sub
clc
cmpl
movw
jmp
pushf
not
pop
movl
lea
jg
pushf
mov
lea
mov
pusha
push
lea
jmp
mov
push
mov
pushf
push
pushl
lea
jmp
sub
mov
push
pusha
mov
push
push
lea
jmp
das
neg
add
bsr
lea
bt
cmp
push
lea
ja
shr
or
rcl
xadd
mov
rcr
cmp
shr
movsbw
lea
shl
movsbw
sub
bt
shld
sbb
lea
lea
cmc
and
bsr
sub
jmp
setns
mov
movw
mov
push
lea
jmp
call
mov
cmp
bt
bswap
cmp
test
xor
stc
neg
mov
xor
push
cmc
cmp
jmp
pusha
bswap
mov
pusha
stc
add
call
clc
mov
shl
pusha
pushf
jmp
pushf
pusha
repz
popl
movb
push
mov
call
mov
mov
jmp
jmp
push
pusha
pusha
mov
pushf
mov
push
pushf
jmp
pusha
pushl
popl
call
mov
call
mov
lea
mov
mov
push
pushl
pusha
lea
jmp
mov
lea
jbe
pushf
pushl
pushl
mov
bswap
pusha
pushl
popl
movzbw
jmp
jmp
movw
pushf
pushf
popl
call
mov
push
pushf
mov
pushf
popl
movl
jmp
mov
pushl
lea
jmp
pushf
movl
movsbw
call
jmp
repz
popl
push
pushf
movw
mov
jmp
movw
sub
push
mov
mov
pusha
push
push
lea
jmp
jmp
pushl
popl
pushl
mov
lea
jmp
pushl
mov
mov
mov
pushf
call
inc
shl
call
pushf
mov
push
lea
jp
push
push
push
call
repz
popl
push
mov
push
call
push
pushf
call
push
pushl
popl
movb
pushf
push
lea
jmp
not
push
movsbw
jmp
mov
pushl
mov
mov
pushf
call
mov
pushf
pushf
lea
jmp
add
add
je
pushf
pushl
popl
test
bt
bt
add
stc
clc
stc
popf
push
movb
push
pushf
lea
jmp
pushl
popl
movb
lea
jmp
mov
pushl
popl
push
lea
jmp
xor
mov
bt
sub
pusha
xor
clc
sub
cmp
neg
test
clc
mov
sub
add
jo
cmc
test
sub
bt
stc
stc
sub
call
cmp
clc
clc
shr
call
call
call
pop
mov
pushl
lea
jmp
mov
mov
push
push
movb
mov
mov
movb
pushf
call
pusha
mov
pusha
jmp
bt
add
cmc
clc
xor
jmp
push
pushf
popl
push
pushl
popl
pushl
mov
lea
jmp
pushf
jmp
dec
call
mov
aad
sar
mov
shrd
not
xor
mov
test
bt
not
call
bts
ror
rcr
rcl
or
not
btr
xor
shrd
pushf
ror
and
jmp
mov
shrd
mov
not
sbb
mov
call
pushf
mov
pusha
push
lea
jmp
pushl
popl
mov
mov
movb
lea
jmp
pushf
jmp
push
call
push
pusha
repz
popl
call
not
lea
jle
lea
push
pushf
movzbw
mov
pusha
mov
pushf
lea
jmp
pushf
xor
mov
movl
xchg
test
call
jmp
mov
push
mov
push
pushl
mov
pushl
bswap
bswap
pushl
popl
pushl
lea
movzbw
movl
movsbw
not
mov
pushf
lea
jmp
mov
mov
pushf
pushf
pushf
lea
jmp
pusha
mov
mov
mov
call
cmc
add
call
push
pushf
movb
mov
jmp
lahf
pushf
mov
cwtl
call
bt
add
push
push
mov
lea
pusha
cmc
pushf
stc
cwtl
cmc
sub
jmp
pushf
add
push
movb
push
lea
jmp
pusha
and
push
test
jmp
movb
mov
pushf
jmp
xchg
movsbl
mov
movsbl
pushl
popl
pushl
movl
movsbw
mov
push
pusha
lea
jmp
clc
mov
stc
call
movw
push
mov
movw
pushl
lea
jmp
cmc
cmp
add
pusha
pushf
pushf
mov
pushl
lea
jmp
push
jmp
mov
cmp
pusha
cmc
pushf
add
pushf
mov
pushf
pushl
lea
jmp
clc
mov
push
not
mov
bt
cmc
stc
sub
pushf
pusha
shr
lea
jp
pusha
mov
push
lea
je
push
pushf
popl
pusha
call
push
push
call
mov
pushf
mov
movb
mov
push
mov
jmp
cmc
xor
cmc
movw
sub
mov
jmp
push
mov
pushf
movb
lea
jmp
jmp
neg
adc
mov
clc
clc
bt
add
pushf
movb
lea
jmp
btr
bts
bswap
btr
ror
sar
inc
not
pusha
shl
shl
xor
shr
bt
and
movzbw
btr
mov
cmp
pusha
bt
sub
push
jmp
not
pushl
popl
not
movl
mov
mov
push
mov
lea
jmp
not
movzbw
movl
jmp
pushf
jmp
pusha
mov
jmp
pushf
mov
movb
call
mov
movl
push
pushf
mov
lea
jle
pushf
push
movb
mov
pushl
popl
pusha
lea
jmp
push
movw
repz
popl
pushf
mov
pusha
pusha
jmp
mov
movb
push
lea
jmp
mov
mov
jmp
pushf
push
mov
call
shl
cmc
pusha
pusha
shr
clc
or
clc
mov
pushl
call
pushf
lea
jne
clc
setne
sbb
sub
mov
bt
cmc
and
clc
jmp
mov
pushl
mov
pusha
jmp
mov
bts
shl
shr
xor
add
movzbw
sbb
clc
shl
sub
lea
not
neg
movzbl
dec
bsf
ror
and
sub
ror
test
lea
or
add
jmp
mov
jmp
test
mov
not
mov
push
cmp
pusha
add
push
pushf
push
lea
jnp
mov
pusha
push
lea
jmp
mov
push
mov
jmp
pushf
pusha
mov
push
lea
pushl
popl
mov
jmp
clc
push
add
push
lea
jmp
mov
movzbw
pushl
popl
movzbl
push
not
lea
movl
movzbw
mov
mov
pushf
pushf
pushf
lea
jmp
jmp
rcl
pusha
adc
rdtsc
test
jmp
cld
shr
stc
mov
aad
aad
pop
mov
rcl
std
neg
pop
rol
setge
not
and
pop
ror
call
movsbl
rcr
cmp
cmp
mov
pushf
clc
add
pushf
lea
jmp
rol
bt
ror
sub
movzbl
call
jmp
pushl
mov
jmp
jmp
call
xor
push
movb
dec
push
jmp
pushf
mov
push
pusha
movb
lea
jmp
pushf
mov
pusha
push
mov
call
jmp
pusha
movb
call
mov
movb
lea
jmp
jmp
call
xor
call
mov
push
lea
jmp
mov
pushl
pushl
lea
jmp
push
call
lea
movl
not
movsbw
pushf
call
shl
sar
and
movzbl
test
add
push
stc
pushl
jmp
not
lahf
shr
mov
cmc
jmp
call
mov
mov
call
stc
push
sub
movb
mov
movb
pusha
call
jmp
aad
pushf
push
bsr
mov
sar
add
jle
mov
cmp
stc
cmp
sub
jmp
pushf
call
lea
jne
push
call
cmp
push
call
mov
pushl
push
mov
call
add
add
rol
rol
pusha
jmp
push
mov
call
pushl
movl
mov
pushf
mov
pushf
push
mov
pushf
mov
call
shl
xor
sub
mov
cmp
clc
cmc
pushf
sub
jmp
call
pushl
popl
pushf
lea
jmp
xor
mov
pushf
sub
test
clc
xor
mov
clc
clc
add
call
mov
pushl
mov
pushl
mov
jmp
mov
mov
pushf
jmp
pushl
popl
pushf
lea
jmp
push
xchg
mov
movzbw
lea
pushl
not
push
jmp
call
push
mov
pushf
movw
mov
push
mov
jmp
lea
jne
call
mov
mov
pushf
pushf
pushf
popl
push
jmp
movzbw
jmp
xorb
lea
lea
setp
pop
pusha
pushf
push
push
lea
jmp
push
push
call
push
pusha
mov
mov
call
xchg
not
pushl
popl
call
mov
movb
clc
clc
clc
xchg
btc
seto
ror
mov
rcr
xchg
not
push
mov
cmc
ror
rol
xchg
mov
bt
pop
ror
pushl
popl
setl
xchg
ror
rcr
movl
movzbw
btr
btc
mov
lea
ror
ror
neg
seto
adc
shl
xor
sar
bsf
shl
ror
add
pushf
btc
xadd
shl
lea
bswap
ror
xchg
btr
sub
sbb
bswap
rcl
mov
mov
ror
mov
movsbw
call
pushf
movb
pusha
repz
popl
pushf
call
movw
mov
pushl
mov
pushf
mov
movzbw
call
daa
cltd
mov
clc
bsr
jmp
pushf
popl
jmp
call
pushf
popl
pushl
pushf
pushf
pushl
popl
pushf
pushl
lea
jmp
ror
movsbw
js
sub
mov
test
add
pushf
lea
jmp
stc
movzbw
mov
push
rcl
bsf
setae
mov
sbb
mov
bt
bsr
cmc
mov
sets
std
ror
neg
mov
xor
or
mov
std
cmc
pushl
cmc
pushl
popf
pushl
pushf
pushl
ret
jmp
pushf
movb
jmp
movl
mov
pushf
movzbw
mov
pushf
lea
jmp
shl
btc
bsf
mov
mov
xor
push
bswap
inc
setle
dec
rcr
movsbw
movsbw
rol
sar
shld
mov
add
call
pusha
pushf
popl
push
jmp
movzbw
rcr
rol
bsf
mov
cmc
cmp
pushf
pushf
add
pushl
push
pushf
popl
movb
push
movb
pushl
popl
pushl
lea
jmp
pusha
mov
pusha
mov
lea
jmp
aaa
mov
bt
cmp
sbb
and
mov
jmp
bswap
pushl
popl
call
mov
lea
jne
bswap
mov
bswap
pushl
lea
movzbl
push
not
mov
pusha
lea
jmp
mov
pusha
jmp
mov
mov
lea
jne
cmp
test
and
movzbw
xorb
not
pop
push
pushf
push
lea
jmp
add
not
mov
pushf
pusha
pusha
add
mov
push
pushl
pushf
lea
jmp
pushl
popl
pop
pop
movl
not
jmp
push
pushl
mov
mov
call
xchg
pushf
call
call
mov
push
jmp
add
mov
movb
mov
movb
pushl
ret
jmp
bsf
mov
sar
sbb
sbb
stc
add
mov
jmp
repz
popl
jmp
sar
mov
stc
cmc
add
jmp
call
call
bt
call
pusha
mov
movw
push
movb
lea
jmp
aas
aaa
xor
setb
notl
push
bsf
btc
mov
stc
mov
cmc
cmc
sub
stc
and
movb
jmp
sub
pusha
call
jmp
mov
stc
bt
pushl
popf
push
mov
movl
mov
lea
jmp
mov
pushf
cld
pushf
movb
push
rep
add
mov
not
bt
jmp
mov
push
cmc
add
pusha
pushf
pushf
mov
pushf
pushl
pushf
lea
jmp
and
clc
bt
cmp
pusha
pushl
jmp
test
mov
cmc
cmp
mov
cmc
clc
push
add
mov
mov
push
lea
jmp
mov
bswap
movzbl
movsbw
pusha
bswap
bswap
mov
pushf
call
mov
clc
pushf
bt
jmp
mov
jmp
jp
clc
add
pushf
mov
pusha
pushl
mov
mov
lea
jmp
call
mov
call
push
mov
pusha
movb
mov
mov
pushf
push
xchg
push
jmp
movb
mov
push
mov
mov
movw
movb
lea
jmp
sub
call
pusha
call
push
pusha
movb
mov
pushl
push
mov
call
pushf
pushl
popl
pushf
lea
jmp
pusha
add
cmp
pushl
popf
mov
lea
jmp
