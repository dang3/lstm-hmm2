add
add
or
add
sbb
add
jge
inc
xor
add
add
add
add
add
adcb
add
jge
inc
xor
add
add
add
add
add
add
add
mov
add
adc
add
jge
inc
xor
add
add
add
add
add
add
add
shlb
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
jg
xchg
push
popa
in
inc
addb
xchg
pop
test
adc
mov
jnp
iret
adc
shll
xchg
lods
xchg
mov
jmp
inc
loopne
jbe
cmp
push
jns
add
pop
ds
jae
inc
push
xchg
psllw
add
pop
mov
sahf
inc
loop
icebp
dec
scas
nop
popf
arpl
clc
into
int3
or
std
cltd
pop
sbb
xchg
mov
jb
lcall
sarb
adc
push
setp
ret
cs
mov
enter
or
xchg
mov
mov
add
mov
add
mov
inc
ss
mov
xor
sub
nop
jle
fidivl
mov
incl
stos
in
frstor
pop
sub
jle
pushf
int3
jnp
lahf
cltd
out
sbb
lcall
cli
push
jbe
add
movl
aam
in
sub
cltd
jb
inc
push
pushf
and
subb
jge
aam
push
ret
xchg
ficoms
push
push
xor
int3
aam
xchg
mov
xchg
push
addr16
add
cmp
aaa
xchg
mov
xchg
outsb
mov
mov
loopne
addr16
andl
mov
ljmp
out
insl
mov
add
inc
das
jo
sub
js
adc
cwtl
aad
iret
and
popf
cmp
cmp
sub
leave
mov
dec
jne
pop
jns
sub
xchg
cmp
inc
jecxz
cmp
push
mov
or
xor
sub
sbb
sbb
call
adc
loopne
jne
and
jge
mov
add
push
jno
xor
int
push
add
xchg
mov
xchg
adc
dec
sbb
sbb
stos
jo
mov
jg,pt
xor
aaa
xchg
lahf
push
lods
scas
lock
popf
fistpl
rclb
jecxz
mov
nop
push
or
loope
inc
pop
xor
mov
lock
sahf
adc
in
lcall
pop
leave
ret
mov
inc
xor
adc
fsubrs
lahf
xchg
call
push
repnz
les
xchg
pop
mov
adc
mov
inc
xor
bound
mov
aad
sbbl
xor
in
lods
push
repz
xchg
pop
mov
lods
imul
ds
test
lahf
jl
bound
mov
and
jno
test
xlat
or
or
lds
fs
mov
test
fs
fwait
push
inc
push
fildll
outsb
mov
rcll
clc
adc
into
mov
insb
lock
jge
jmp
jle
push
adc
pop
das
inc
stos
movsb
andb
sbb
push
push
dec
fcmovnbe
push
or
add
add
out
or
dec
xor
mov
mov
xchg
push
and
cld
jecxz
in
cmp
cmc
aam
inc
xor
stos
fs
push
les
pop
push
and
lods
or
xor
out
xchg
push
fs
cwtl
pop
sbb
jle
inc
sbb
cmp
xchg
out
push
adc
out
adc
clc
mov
pushf
sbb
jg
and
aaa
cmp
and
lahf
xchg
mov
int3
mov
or
iret
jne
push
push
arpl
lcall
mov
or
mov
je
inc
xor
mov
mov
mov
js
xchg
push
dec
imul
dec
outsb
js
sbb
xchg
or
cmp
fisttpll
rcrb
add
pop
jae
outsl
dec
jge
add
mull
and
xchg
dec
pfsubr
push
test
adc
lods
add
jb
xor
fisubl
out
sarb
adcl
push
or
xchg
imul
sahf
int3
mov
in
push
dec
mov
call
push
adc
cmp
decl
jmp
adc
addr16
pop
in
stos
mov
add
xchg
sahf
sbb
lods
stos
mov
notb
add
pushf
mov
stos
or
sti
mov
xchg
mov
lcall
lret
fnsave
sbb
mov
sarb
leave
int
xor
pop
loopne
xchg
or
jecxz
rcll
xchg
jns
sub
add
sub
movsl
outsl
dec
mov
mov
sbb
in
shlb
push
in
mov
cmp
push
push
xchg
ret
outsb
lret
xchg
add
into
and
punpckhbw
sbb
lcall
ja
leave
xchg
xchg
add
or
enter
lret
cmc
inc
ret
lds
es
adc
push
xchg
adc
fidivl
outsl
add
jge
mov
pop
fsubp
pop
push
mov
pop
and
mov
dec
movsb
sar
clc
cmpsb
mov
mov
push
nop
mov
adc
and
repz
or
sbb
fwait
insl
pop
mov
jmp
js
fndisi(8087
mov
insb
rorb
sub
adc
pop
mov
sbb
repnz
cwtl
ficoml
mov
mov
mov
cmp
adc
scas
inc
pusha
fists
jl
dec
leave
movsb
adc
cltd
mov
dec
mov
cmp
shrl
xor
notb
lret
mov
outsb
cli
jge
mov
jle,pn
sbb
movb
cmp
arpl
test
out
push
das
cltd
jb
sbb
jno
sub
leave
sub
mov
test
mov
push
sub
insb
xchg
jle
repnz
mov
mov
imul
insl
clc
out
pop
cmpsb
addr16
pop
dec
imul
mov
insb
fisttps
test
dec
lret
aaa
and
adc
adc
addl
mov
movsl
loop
fnstsw
cltd
push
add
dec
aaa
pop
push
xor
jo
ljmp
jbe
inc
gs
enter
call
xor
and
in
lahf
jmp
xlat
cmp
int
pop
add
imul
repnz
or
push
pusha
stc
xor
fcos
orb
cwtl
adc
inc
pop
cld
mov
call
push
out
pop
inc
adc
sbb
mov
mov
test
xchg
loopne
lods
pop
push
pushf
sbb
push
cmc
cwtl
lds
sub
push
repnz
rcll
push
int3
lcall
pushf
xor
dec
std
lds
fdivrs
loop
push
xchg
shl
xchg
push
fldt
pop
aaa
pop
loop
push
shlb
out
xchg
xchg
push
rolb
sub
scas
mov
int3
xlat
imul
adc
fstpl
insl
cmp
shll
inc
and
imul
adc
sbb
push
and
stc
sti
xlat
jecxz
and
xor
lcall
inc
shll
mov
addr16
push
lcall
fidivrs
repnz
jns
mov
xor
int3
xchg
or
cmp
pop
gs
adc
scas
or
jl
stos
ror
inc
lods
mov
xchg
xchg
fdivrs
stos
push
stos
jecxz
std
adc
jbe
daa
mov
scas
add
push
mov
xchg
dec
pop
adc
outsb
ss
ficoml
test
mov
cli
std
sbb
dec
xchg
insl
sbb
pop
roll
xchg
and
and
adc
and
ret
xchg
adc
out
fisttps
mov
stos
cld
pop
hlt
jnp
xor
int
enter
jg
imul
leave
add
stos
es
sbb
xchg
test
jg
or
clc
outsl
aad
pushf
pop
repz
pop
push
outsb
xlat
adc
cmc
mov
popf
loopne
stc
in
cmp
xchg
push
jo
mov
cmpsl
sbb
lock
sub
mov
roll
mov
fildll
add
mov
into
outsl
push
xor
xchg
fistpll
out
test
mov
jbe,pt
cltd
int
and
pop
lahf
sbb
push
or
add
rolb
dec
jae
dec
jmp
lods
inc
jp
cmp
std
mov
lods
js
mov
ss
cmp
scas
cltd
mov
sbb
cmp
sbb
or
cmpsb
adc
test
add
lret
in
mov
push
xchg
andb
in
js
sahf
sarb
cmp
stos
push
push
xlat
sbb
in
sub
idiv
pop
pop
and
jmp
xchg
lods
test
jle
cs
mov
mov
mov
inc
ffreep
dec
inc
mov
sub
cli
es
cs
out
sub
out
push
lret
icebp
loop
adc
push
jno
jg
xor
add
xchg
jg
and
jnp
sbb
lock
cltd
fsubrs
cmc
xor
nop
je
push
lods
rcrb
inc
insl
ret
lock
mov
sub
jnp
fildl
mov
lock
ficoms
push
adc
outsb
push
dec
call
xor
ja
pop
jnp
push
or
adc
sbb
daa
jp
ss
push
repnz
sbb
inc
inc
pop
xor
xchg
lods
rorl
int3
outsb
nop
dec
je
xlat
outsl
cwtl
sahf
out
shrl
lds
xchg
jg
je
pop
push
mov
mov
cli
inc
ds
mov
pop
addl
icebp
xchg
outsl
and
lods
sub
mull
xor
or
push
jmp
xchg
push
and
push
add
mov
test
popa
sub
push
add
xor
adc
cli
xor
cld
pop
push
daa
leave
out
cltd
push
mov
in
ds
ret
dec
dec
jbe
test
es
mov
sahf
ficomps
pop
dec
rorl
xchg
adc
sub
jbe
imull
out
xor
loopne
dec
es
xor
in
flds
or
aad
sbb
jbe
inc
stos
xchg
push
mov
fdivrl
pop
mov
ffree
and
mov
clc
lock
inc
mov
shlb
or
jno
pop
pop
ds
mov
or
jne
rorl
out
gs
jle
testb
test
dec
jne
jp
fiaddl
inc
jp
sub
mov
inc
jno
cltd
out
outsb
in
sbbb
in
hlt
sbb
cmp
andl
sub
mov
pop
stos
dec
pop
push
ret
test
ss
iret
inc
rclb
or
jmp
fdivs
aaa
dec
fisubrs
int3
mov
push
lock
cli
fildl
je
repz
mov
cli
mov
outsl
pop
mov
cmpsl
rorl
push
jmp
sbb
xor
fildll
sbb
pmaddwd
lods
ja
jl
pop
jns
nop
fnstcw
jle
js
in
lods
icebp
imul
test
jno
jp
adc
cmpsl
subb
fbstp
xchg
hlt
cmp
jae
add
out
inc
imul
into
mov
orb
nop
dec
daa
loop
sar
or
jge
loopne
fldenv
jne
push
mov
popf
jnp
outsb
adc
or
pop
inc
push
jno
push
inc
or
add
inc
adc
int
jae
je
leave
es
push
sub
cmc
pop
add
add
cli
clc
mov
sbb
add
fstp
insb
xchg
mov
outsb
shrl
xchg
call
dec
xchg
add
mov
cmp
scas
dec
ret
int3
scas
mov
mov
pop
push
addl
inc
mov
push
mov
js
jge
lea
into
loopne
xchg
mov
push
cmc
adc
sbb
cmp
loopne
cwtl
sti
sbb
in
sti
stos
in
popf
push
nop
cmpb
shrl
cmp
fwait
out
pop
mov
call
outsl
jbe
xlat
js
scas
ret
cmp
pop
idivb
jne
cmp
mov
cmp
ljmp
inc
xchg
dec
sub
xlat
subb
shrb
xchg
pushf
aad
mov
sbb
mov
mov
push
rolb
cmp
dec
dec
xor
mov
hlt
jl
pop
cmp
movsl
xchg
test
in
es
pop
arpl
and
push
sti
test
jo
add
loop
jl
incl
mov
test
cmc
and
stos
lret
adc
pusha
inc
jl
jb
and
or
push
jno
lods
out
mov
sub
fcom
rorb
add
aad
movsb
pop
sub
xor
bound
inc
mov
cwtl
dec
daa
xchg
rcl
sub
xchg
test
sub
adc
into
fwait
stc
add
sub
insl
push
pop
in
cltd
push
iret
movsb
jo
mov
xchg
mov
pop
negl
repz
xor
scas
pop
int
repnz
insl
insb
sbb
cmpsb
ss
push
or
imul
push
out
lcall
cmp
xchg
push
and
mov
ficoms
jb
pop
inc
jp
sti
sbb
mov
cli
out
sub
add
xchg
out
fs
test
addr16
push
mov
movsl
imul
std
inc
xchg
nop
fldcw
dec
lds
jnp
insl
adc
push
jne
daa
into
mov
fldenv
pop
cs
rcrb
dec
fldcw
xlat
or
faddp
aad
mov
mov
test
mov
cmpsl
or
mov
pop
push
pop
daa
stos
push
mov
ficomps
sar
and
cmp
sub
mov
mov
mov
inc
es
xor
and
out
shr
inc
pusha
andl
sbb
repnz
jl
into
js
sbb
dec
cmp
xchg
enter
mov
push
ja
arpl
sub
insl
jecxz
mov
jbe
dec
int3
loop
fisubs
push
lret
cmp
push
and
test
in
cmp
aas
aad
out
xchg
mov
jo
out
pop
xchg
xchg
dec
or
mov
dec
push
pop
and
fndisi(8087
cld
dec
jb
insb
addb
pushf
sbb
sarl
mov
cmpsb
push
scas
movsb
pusha
insl
rcrl
add
pop
sti
pop
cwtl
cmp
into
mov
in
dec
xor
push
mov
or
xor
lods
cmp
push
jb
push
repz
pop
popa
divl
ljmp
push
imul
mov
push
int3
mov
js
adc
aas
add
mov
xchg
aaa
fs
xor
jp
or
insl
fstps
test
adcb
pop
test
xor
adc
push
sub
pop
mov
fsub
leave
sub
mov
jle
call
push
scas
push
sub
mov
mov
movsl
xchg
sub
push
rorb
shrb
mov
and
es
sbb
ffree
inc
cmp
xchg
jecxz
dec
orl
fmulp
inc
mov
mov
jno
sbb
nop
ret
xor
ja
je
lret
cmc
mov
jmp
test
mov
jmp
stos
push
lods
out
and
pop
outsb
sub
dec
cmp
icebp
pop
stos
mov
or
pop
xchg
test
sbb
sbb
inc
push
jle
jge
jp
fmuls
shll
xorb
dec
fs
xchg
jns
pushf
mov
fsub
inc
mov
jecxz
test
inc
movl
shrl
pop
cmpl
push
popf
pop
add
ss
dec
ret
mov
dec
cld
pusha
mov
sbb
jnp
inc
loope
lret
sahf
lahf
gs
xchg
jb
xchg
jae
aam
xor
jb,pn
sbb
push
sbbl
mov
cmpb
mov
in
xchg
push
out
in
iret
mov
xchg
movsb
push
lods
pusha
idivl
or
insl
inc
jge
out
fisttpl
dec
insb
movsb
lret
mov
jnp
stos
jnp
rcpps
and
adc
std
imul
sub
push
out
lea
push
fnstsw
cmp
ficomps
outsl
mov
jb
stos
push
out
arpl
push
mov
insb
cmpsl
lret
cmp
jnp
stos
ficoml
ds
je
hlt
in
cli
mov
gs
pop
cmp
mov
dec
testl
inc
testb
movsb
scas
sub
xchg
jns
and
push
ret
or
je
or
jb
pop
sti
aaa
push
fwait
aas
divb
dec
xor
cmpsb
out
movsb
xchg
mov
pop
cmpsb
or
xlat
aas
mov
shll
jb
cmpl
aas
xchg
xor
mov
cmp
test
jmp
dec
push
cli
es
sahf
push
pop
pop
stos
push
dec
cmpsb
sub
adc
inc
xor
pop
lahf
xchg
test
mov
addr16
fmuls
rorl
jbe
or
sub
sub
jmp
adc
ds
nop
pop
mov
shr
rorb
dec
in
loopne
mov
cmp
sbb
and
std
lea
dec
mov
adc
data16
sbb
push
push
shrb
push
iret
inc
fistl
inc
bound
in
push
xchg
fists
ss
dec
dec
cmp
push
loop
icebp
test
sbb
jo
aaa
xor
fisubs
clc
fwait
pushf
repz
notb
mov
sbb
lods
scas
jecxz
cmpsb
sub
in
xchg
jb
lea
mov
stc
dec
shlb
xchg
je
xor
sar
sub
xor
push
lahf
cltd
fisubrs
out
push
dec
int
cmpsb
push
mov
jmp
rcll
imulb
mov
xorl
or
pop
loop
push
into
sbb
sub
lcall
dec
rclb
inc
cmp
mov
pushf
and
repz
jecxz
ss
jle
inc
insl
leave
insb
xor
push
jecxz
fcoms
sbb
add
jl
iret
adcb
sbb
pusha
ret
stos
mov
mov
js
dec
mov
mov
lcall
inc
outsl
orb
and
outsl
lcall
dec
sub
movsl
jmp
enter
mul
or
pop
pushf
std
xor
xor
mov
xchg
mov
and
adc
fidivl
pusha
out
shll
xchg
rol
imul
test
and
adc
popf
push
pop
or
mov
scas
and
lods
cmp
jb
sbb
into
dec
inc
out
aaa
adc
das
mov
add
notl
pop
adc
jbe
mov
jnp
cmpsb
addr16
push
dec
je
decb
mov
arpl
inc
std
int
arpl
adc
mov
arpl
inc
inc
sarl
sbb
fsubr
mov
call
mov
fstpt
push
fwait
mov
clc
in
lods
movsl
out
mov
roll
mov
std
inc
lahf
mov
shll
shlb
in
mov
lahf
mov
sub
hlt
xchg
mov
pop
fildll
insb
xchg
fmull
adc
jb
sbb
aad
bound
rcrl
mov
call
sarb
mov
or
call
outsl
xchg
sub
cmc
xor
cli
je
jg
xlat
std
sbb
subl
js
xchg
sbb
int3
out
loopne
xor
data16
jnp
frndint
pop
sbb
push
sub
loop
movsl
push
mov
in
dec
fists
ja
and
jnp
mov
mov
mov
mov
jecxz
gs
sbb
fidivrl
jp
xor
xchg
add
push
and
cmpsb
fistl
ljmp
icebp
push
adc
pop
pop
xchg
lock
sub
mov
or
sbb
das
mov
mov
test
cltd
pop
pop
push
cmpsb
insl
test
adcb
cmp
xchg
loopne
jbe
dec
xchg
divl
xlat
lret
push
sbb
loope
enter
push
xor
popa
outsl
mov
shrl
fldcw
dec
mov
inc
inc
je
sbb
sbb
testb
into
shl
out
nop
test
addb
testb
push
cwtl
outsb
cmp
fsubl
mov
and
push
insl
mov
push
adc
cmp
add
insb
andb
dec
dec
es
lret
jns
daa
mov
loope
xor
lahf
imul
pushf
iret
icebp
imul
dec
and
pop
into
sub
inc
sbb
xchg
loope
jnp
inc
movsl
shll
out
sub
lods
jae
jno
sarb
mov
test
in
sub
pushf
lea
jl
aaa
pop
cmp
dec
add
aam
xor
out
pop
inc
add
pop
rcl
sbbb
and
and
mov
xor
fidivrl
mov
test
into
sbb
sub
loope
inc
jae
fcompp
xchg
repnz
filds
sahf
lret
imul
adc
arpl
outsb
call
cmp
xor
rcr
pop
in
and
jbe
nopl
xor
cmp
mov
dec
aam
test
xchg
cmp
iret
sahf
xor
jl
or
inc
std
dec
jo
jecxz
test
push
add
push
mov
xchg
subl
xchg
sub
popf
in
xor
cmpsb
mov
mov
subb
cmc
lahf
fdivr
cmpsb
ja
pop
xchg
in
call
jae
xchg
fwait
into
mov
outsb
fwait
lret
cli
aaa
xchg
pop
jmp
mov
std
test
das
or
leave
xchg
stc
or
jle
push
aad
adc
pusha
pop
sbb
and
mov
mov
or
fdivs
test
pop
fwait
and
push
mov
inc
lret
pop
test
pop
inc
and
sahf
test
mov
das
out
addr16
cmp
push
loop
test
inc
sub
xor
add
jmp
andl
int
das
ss
pop
movsb
mov
ljmp
cmp
xchg
fs
lahf
mov
xor
add
pop
push
jmp
xchg
jno
je
loop
sub
punpckhwd
xor
popa
adc
xchg
lret
sub
jge
mov
test
imul
addr16
fidivs
xchg
inc
jne
mov
jno
fwait
xor
xor
mov
push
mov
pop
and
incl
adc
xor
or
pop
push
jle
mov
aaa
xchg
inc
out
xchg
inc
insb
or
bound
jo
ret
mov
les
sub
fs
jbe
jbe
mov
outsb
fdivrs
outsb
aaa
sbb
mov
stos
pop
fsubs
out
aaa
xchg
jle
lcall
lcall
out
iret
call
sti
arpl
lret
sbb
cmp
movsb
fisubrs
cmpsb
cmpsl
enter
cmp
push
out
popf
xor
divb
test
xchg
sbb
sbb
bound
mov
mov
andb
imul
ja
xor
xchg
mov
stc
push
and
and
insl
jbe
fdivrs
or
xchg
mov
enter
loope
lret
ss
insb
inc
pop
pop
jecxz
sbb
jb
inc
imul
imul
les
pop
fcoms
sub
clc
call
push
xor
lods
push
adcb
pop
sub
mov
and
loope
pop
cmp
ja
xlat
clc
fs
lahf
mov
les
lock
dec
movsl
fwait
scas
ds
xchg
loopne
scas
lock
lret
pop
ss
inc
jg
push
push
test
mov
lock
jbe
aas
dec
dec
inc
xor
pop
push
push
stc
or
fcom
jnp
cld
pop
leave
in
insb
call
stos
popf
rclb
mov
testl
add
loopne
dec
xor
mov
sub
andb
rorl
sahf
repz
aas
push
js
mov
or
mov
or
and
lock
leave
fimuls
movsb
insb
addr16
js
addr16
inc
setg
pop
popa
mov
mov
mov
xchg
in
xchg
pop
jl,pt
fs
jno
in
daa
out
lret
cmp
hlt
pushf
fs
push
sbb
or
add
sbb
push
or
jns,pt
scas
aaa
adc
testl
out
arpl
adc
jbe
jmp
stos
jmp
fbld
dec
addb
mov
pop
pop
in
add
mov
and
mov
jmp
jmp
mov
sub
cwtl
xchg
sbb
lret
mov
add
pop
hlt
fistl
ljmp
jnp
nop
lret
lock
push
nop
imul
xor
inc
push
xchg
cmp
add
dec
dec
push
xchg
stos
adc
mov
daa
adc
add
inc
push
in
fidivrl
sbb
xchg
adc
and
pop
adc
scas
rcll
lock
mul
icebp
sub
jno
cmpb
mov
push
out
test
xchg
mov
adc
xor
ss
or
or
jae
sub
add
into
pop
cmc
mov
push
cmpsl
inc
lcall
push
pop
std
pop
xchg
imul
test
push
cmpsl
addr16
jne
out
inc
ss
mov
mov
mov
sbb
sbb
and
fidivrs
popa
mov
pop
popf
in
pop
test
add
xor
mov
js
jne
add
lods
imul
pop
mov
mov
xchg
ljmpw
inc
faddl
lahf
cmpb
fwait
and
scas
or
and
sti
lea
inc
push
sbb
fcmovnu
arpl
lds
lds
xor
ret
iret
push
leave
mull
push
imul
lock
and
cld
dec
pop
popf
push
jl
push
sbb
cmp
stos
fcmove
in
adc
test
pop
pop
fisttpll
fwait
mov
xchg
xor
sub
enter
mov
inc
out
mov
pusha
divl
aam
cmp
in
inc
iret
mov
pop
lods
sti
jp
cwtl
int
gs
xor
fcompl
out
push
nop
jne
sbb
icebp
cwtl
jp
rcll
push
enter
inc
movsl
mov
lea
loopne
ljmp
ficompl
imul
je
pop
push
xor
imul
jmp
xlat
daa
cmpsl
jno
popf
sbb
adc
out
adc
subb
and
mov
out
add
dec
mov
dec
xor
push
ds
push
lret
and
pop
test
adc
cltd
push
icebp
std
dec
sahf
roll
dec
inc
push
fimuls
mov
je
cmp
mov
mov
movsl
inc
jg
adc
loopne
and
aas
adc
insb
leave
fsubrp
adc
mov
cli
ss
clc
imul
int3
cmpsb
enter
sbb
mov
iret
subb
jbe
lea
xchg
push
test
repnz
push
xor
mov
pop
mov
cwtl
call
imull
jns
adc
xor
addr16
popf
mov
mov
lock
push
dec
loopne
pop
or
sahf
push
in
movl
sti
sbb
pop
cmp
rclb
popa
or
popa
ljmp
dec
rcrb
inc
xchg
dec
aad
inc
movsb
aaa
scas
xchg
mov
insb
mov
push
mov
adc
jns
in
xchg
mov
jmp
scas
or
xor
push
movsl
nop
cmpps
mov
and
mov
dec
jns
aam
insb
sbb
clc
lcall
sbbl
push
xchg
insb
push
push
pop
dec
pusha
popf
and
push
gs
mov
addr16
add
jnp
js
icebp
lahf
in
rolb
test
leave
fs
mov
cmp
inc
mov
pusha
pop
imul
jle
inc
cmp
and
dec
sub
jae
pop
adc
sub
sub
das
mov
push
aam
in
inc
sbb
and
inc
pop
add
gs
jno
xor
xor
jae
imul
loop
push
lods
xor
je
xor
inc
std
adc
sarl
outsb
les
stc
push
movsb
aaa
addr16
sbb
jb
cltd
nop
jp
dec
or
adc
daa
stos
lock
jno
loop
push
bound
les
jo
les
rcll
cmp
pop
jge
push
cmpsl
cmp
int3
jb
out
lock
adc
inc
and
push
andb
xor
pop
cmp
hlt
movntq
shlb
or
push
adc
push
inc
lds
push
daa
insl
data16
pop
jle
mov
int3
pop
jo
pop
dec
xlat
dec
jae
jg
or
das
imul
adc
sbb
sbb
cmp
into
push
mov
loope
lcall
adc
cld
cltd
insb
rdtsc
pop
lock
and
push
lahf
dec
sbb
pushf
je
ja
dec
cli
rcll
mov
mov
cmp
push
aad
mov
pop
adc
jmp
mov
loopne
xchg
xor
lds
loop
xor
adc
test
lock
pop
pop
jb
out
out
jo
push
movsb
sbb
xor
bound
jecxz
cli
pop
arpl
int
inc
inc
scas
mov
or
cli
push
rcll
sub
ret
pop
jge
push
add
mov
mov
xor
and
jnp
daa
adc
mov
fsts
mov
in
xorb
lods
mov
push
add
aam
sbbl
loop
xchg
jmp
jb
dec
rcrl
insb
push
fwait
je
xchg
ret
dec
fidivs
enter
nop
lret
loop
pop
or
pop
ret
imul
pop
add
aas
sahf
mov
push
sti
inc
xchg
lods
lahf
and
add
xor
xor
push
inc
movsl
cwtl
aad
call
xchg
sbb
movaps
inc
loope
ret
scas
jne
in
cmpsl
mov
icebp
push
mov
mov
jge
mov
xchg
inc
xchg
das
adc
jo
push
inc
mov
mov
cmpsl
jmp
loope
push
pop
fbld
xchg
adc
and
xchg
in
pusha
call
sbb
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
inc
add
add
add
add
add
add
add
